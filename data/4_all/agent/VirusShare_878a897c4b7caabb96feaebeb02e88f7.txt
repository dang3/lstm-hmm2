push
call
ret
ret
fwait
jno
xor
fdivrp
xchg
and
cltd
mov
enter
leave
pop
jle
jge
scas
or
mov
incb
add
push
sti
scas
fwait
cmp
xchg
into
and
sbb
aam
lea
jl
or
decl
sbb
jle
xchg
pop
add
roll
insl
push
dec
mov
cmp
inc
fnstsw
jecxz
fiadds
mov
ret
or
std
sub
test
add
xchg
aam
jp
imul
repz
dec
push
adc
les
push
add
imul
mov
push
insb
mov
in
push
add
push
xlat
sub
mov
popa
fbld
adc
xor
dec
mov
pop
pop
cmpl
pop
mov
aas
ret
int
test
cmp
imul
push
pop
test
push
aas
xchg
or
mov
inc
gs
xchg
add
or
lea
stos
ds
push
fnsave
jae
cmp
pushl
movsb
inc
mov
das
add
and
sbb
push
jo
dec
inc
aad
mov
fnsave
inc
adc
pop
add
sahf
loope
inc
inc
push
aas
and
push
mov
sbb
push
fsubrl
jae
je
pop
xchg
dec
popf
imul
fs
fwait
dec
cmp
cltd
mov
adcl
add
jnp
rcll
ret
and
mov
and
mov
pop
mov
cmovl
xor
inc
mov
adc
pop
cmp
sub
shll
mov
adc
fistps
mov
roll
call
bound
aad
cmp
xchg
mov
sbbb
in
inc
insl
aas
test
sbb
leave
es
popf
pop
sub
aas
out
scas
or
jmp
outsb
repz
loope
push
lcall
mov
hlt
sub
xor
insb
xchg
pop
pop
mov
xchg
lret
dec
stc
pop
adc
dec
aam
fidivs
fstpt
jbe
in
addl
enter
sbb
cmpsl
out
adc
add
push
scas
aam
arpl
mov
dec
sbb
add
cmp
enter
into
adc
cmp
mov
sub
call
xchg
mov
push
jg
lret
lea
cli
out
std
jg
jnp
xor
xchg
ja
fnstcw
inc
and
out
mov
iret
ret
jecxz
add
les
add
jae
cmpsl
and
push
fcmovnb
push
lods
adc
call
xor
xchg
sar
mov
fwait
cld
cs
into
inc
repz
sbb
mov
lcall
pop
mov
inc
sub
aam
xor
fiadds
lock
subb
popa
xchg
mov
insl
adc
cmp
pop
addr16
pop
dec
adcb
xor
adc
clc
adc
enter
xchg
adc
rcll
sbb
daa
je
jb
jae
push
mov
repnz
or
sub
test
test
jecxz
pushf
sarb
cmpsb
les
dec
push
sbb
jl
pop
insl
loope
sbb
dec
xchg
in
or
mov
push
imul
push
nop
sbb
lret
pusha
sbb
xchg
stc
imul
rorb
shrl
xchg
jecxz
cltd
fildll
daa
xorb
std
filds
shlb
aad
mov
scas
das
sbb
xchg
dec
sahf
sahf
out
std
inc
bnd
bound
pop
divl
or
mov
pop
in
aam
out
mov
jae
and
lcall
and
xchg
mov
aam
jmp
and
incb
popf
je
out
or
mov
inc
push
je
inc
popa
inc
sub
sahf
mov
lods
mov
or
cwtl
xor
mov
test
bound
inc
test
jg
mov
stos
test
cli
dec
xchg
inc
or
or
les
outsl
pmaddwd
xchg
push
fwait
sbb
shl
das
mov
addr16
loopne
inc
jg
cltd
cmp
fdiv
push
lods
push
push
sub
imul
fstps
imulb
mov
or
sahf
add
cmpsb
or
xchg
fdivl
pop
dec
mov
ret
lods
ds
test
mov
fwait
push
mov
in
pop
mov
mov
dec
xchg
xchg
inc
sub
mov
repnz
clc
scas
cltd
clc
xchg
fadds
sub
cmc
outsl
repz
scas
inc
jnp
adc
xor
mov
sbb
lret
add
loop
sbb
lret
shrb
mov
rcrl
es
stos
ret
enter
repz
xor
stos
mov
cwtl
adc
lea
roll
xchg
xor
mov
mov
negb
rcrl
mov
ljmp
and
pop
pop
icebp
lock
int3
add
add
scas
xchg
int3
mov
je
xor
push
sti
lock
mov
cmp
jns
sti
and
cmp
adc
lea
push
popa
inc
push
inc
add
scas
add
dec
xlat
imul
lock
add
cmpsb
int
sub
sti
sbb
push
das
mov
sub
outsl
mov
or
mov
ret
xor
repnz
xchg
int3
xor
adc
idiv
push
pushf
clc
rcrb
lock
mov
sbb
pushf
push
lahf
push
mov
mov
pop
pop
fwait
addr16
sbb
scas
add
shll
inc
pop
test
push
jg
pop
dec
int
or
cmpl
cmp
fnsave
xchg
testb
dec
outsl
mov
dec
add
inc
push
inc
mov
ss
push
dec
fdivrl
cmp
out
lahf
loope
jo
js
xchg
sub
jg
and
loopne
sbb
adc
sub
mov
mov
loopne
loopne
pop
hlt
sub
and
push
gs
int
push
repnz
push
mov
fmuls
mov
xor
push
ljmp
sub
jno
jno
pop
xchg
mov
test
add
fwait
add
mov
testl
shlb
push
loop
mov
cmp
or
fnstsw
push
fsubr
out
fcmovb
out
out
and
pop
cmp
mov
stos
mov
out
mov
loop
outsb
pop
bswap
add
js
and
sbb
inc
pop
insl
lret
cmc
pop
daa
mov
movsl
pusha
dec
xlat
stc
mov
fadds
aam
xchg
ss
pop
push
in
cmp
sub
sbb
repnz
cs
and
inc
sub
sub
jmp
push
pop
mov
and
mov
sti
daa
cld
enter
ret
imul
arpl
mov
into
jp
xchg
xor
lods
sbb
leave
stos
mov
pop
cmp
sbb
or
ror
mov
push
xor
and
mov
cmp
nop
xor
movsb
frstor
xlat
mov
dec
mov
adc
shll
jnp
cmp
lds
xchg
cmc
mov
push
mov
arpl
or
repnz
cmp
or
push
push
sub
inc
scas
push
bound
dec
inc
fdivrs
xor
push
mov
jno,pn
mov
inc
xchg
push
xlat
mov
push
push
mov
xlat
adc
xor
lcall
pop
adc
pop
js
ja
lock
in
push
mov
pop
cmp
jg
push
mov
cmp
sbb
outsl
fs
push
push
and
js
push
sbb
lock
stc
push
mov
jae
clc
popf
clc
push
imulb
sbb
xchg
fwait
dec
jmp
mov
xor
jo
cmp
stc
inc
mov
mov
roll
jne
push
imul
sub
pop
insb
and
call
pop
shlb
xorl
bound
enter
rcll
jne
inc
mov
aad
adc
mov
cmpsb
stos
add
shlb
enter
adc
xchg
inc
xchg
and
andb
popa
push
jmp
mov
test
push
test
les
shlb
ret
test
cmp
mov
inc
mov
mov
cmp
ljmp
daa
jae
popa
or
ret
jmp
ljmp
dec
dec
mov
out
xchg
lahf
or
test
mov
push
jmp
xor
je
cmp
ljmp
dec
mov
pop
mov
and
dec
xchg
mov
xchg
mov
inc
addr16
xor
dec
clc
scas
repnz
cmp
nop
cltd
cmp
aaa
sahf
xor
cld
cmp
movsb
out
fadd
sub
and
fiadds
xor
cld
cmp
xor
mov
lea
imul
and
scas
sbb
jae
sahf
out
bts
subl
adc
data16
mov
adc
test
pop
into
shlb
mov
repz
stc
inc
push
dec
xchg
add
pusha
dec
scas
inc
icebp
adc
scas
sarl
pop
mov
outsl
xchg
notl
jb
ds
arpl
sbb
ss
test
lods
mov
cmp
and
xchg
fmull
ljmp
popa
loopne
jp
stc
and
daa
hlt
cs
cwtl
out
xchg
push
in
jns
lods
dec
mov
sub
pusha
sbb
int
das
or
subl
aaa
aas
in
mov
sahf
cwtl
adc
or
dec
jo
add
jge
xchg
dec
in
pop
xor
clc
shll
mov
cld
add
popl
insb
jbe
hlt
sbb
clc
mov
cltd
mov
mov
or
lret
loop
sti
push
sub
xchg
adc
lods
jg
out
in
pop
cs
stc
push
add
cld
xor
insb
adc
dec
cmp
adc
jae
lods
jno
jns,pn
xchg
sbb
adc
outsb
popf
sub
and
xor
add
jo
cmpsl
pop
aaa
sub
push
add
xchg
outsl
mov
cli
dec
call
movsb
sub
orb
pop
mov
stc
mov
mov
mov
jo
sbb
jg
cmp
mov
shlb
lret
sbb
or
fs
adc
mov
cwtl
mov
xor
inc
call
mov
and
imul
out
mov
aaa
mov
cmpb
test
jae
cld
ds
sub
cmp
mov
jl
in
imul
pop
dec
add
xchg
mov
xchg
sbb
jle
stc
jp
xchg
dec
lahf
sahf
jg
insb
or
pop
cmp
mov
adc
mov
loop
aas
mov
sub
mov
mov
pop
sub
and
rolb
sbb
cmp
mov
stc
mov
je
pop
xor
arpl
fisubl
stos
sbb
insl
mov
push
xor
inc
stc
jp
cli
inc
pop
jnp
sbb
jbe
xchg
pop
inc
xchg
or
sub
cwtl
mov
sub
outsb
ret
lcall
test
mov
mov
shll
jo
ret
inc
imul
inc
inc
sbb
xchg
or
in
adc
les
or
rcll
push
and
jg
sti
and
or
adc
push
insb
cltd
loopne
into
xlat
push
mov
popf
out
xchg
mov
and
adc
test
jae
enter
into
fsts
test
xrelease
dec
addr16
in
mov
cmc
sbb
cmpsl
in
lcall
ficoms
stc
cmp
mov
dec
inc
cmp
cmp
mov
imul
xor
stos
cmp
pop
inc
push
cmp
xchg
in
jns
shl
jns
test
jp
add
ret
icebp
dec
or
divl
xor
xchg
jnp
sbb
cmp
and
addr16
add
mov
mov
lods
xchg
and
push
stc
sahf
mov
ljmp
dec
xor
or
lahf
or
mov
lcall
aaa
jg
xchg
aas
adc
mov
push
xchg
jg
outsb
je
and
ret
mov
adc
test
jmp
jno
imul
jl
out
cmp
and
or
mov
fadds
dec
lahf
leave
jg
sub
jl
lea
mov
push
out
dec
jle
and
jo
or
fcompl
mov
mov
and
gs
dec
lret
aad
mov
dec
repz
iret
sub
je
pop
push
cli
movsl
mov
jecxz
cmp
adc
mov
mov
sub
ja
inc
mov
and
mov
jns
adc
flds
insb
push
nop
adc
out
mov
xchg
mov
jo
out
cmpsl
lret
call
or
scas
xchg
xor
imul
rol
pop
sbb
mov
nop
xchg
repnz
mov
dec
sbb
loop
jno
iret
lahf
pop
fmul
lret
jge
mov
xchg
test
add
mov
cmp
arpl
outsb
fiadds
clc
fistps
pop
mov
mov
push
ret
lods
push
fstpt
inc
and
shl
insl
cmp
fisubs
cwtl
cltd
stc
dec
adc
movsb
mov
cli
sahf
je
cmp
cmp
lock
leave
sub
add
sbb
cmp
ljmp
push
push
sub
and
jp
lea
adc
xor
fucom
cmp
jge
sbb
sub
js
push
sbb
ja
data16
aaa
and
arpl
sbb
inc
repnz
enter
sbb
in
insl
jo
lods
testl
sbb
adc
push
pop
fwait
int
add
movsb
std
xorb
outsb
cs
sub
dec
ret
xor
cmp
jmp
or
stos
push
outsl
inc
add
cmp
cmp
add
iret
das
cmc
or
and
lret
leave
imul
pop
scas
pop
jle
dec
push
les
jp
orb
scas
mov
sbb
rorb
adc
sub
arpl
and
jge
rclb
push
leave
or
or
add
fidivrl
inc
sti
icebp
sbb
in
inc
fidivs
cld
adc
inc
lahf
push
dec
jmp
cmp
sbb
cmpl
scas
mov
cld
and
bound
mov
adc
dec
dec
inc
pop
push
jbe
decl
in
pusha
pop
loopne
movsb
das
sub
stos
lahf
mov
mov
inc
int3
pop
xor
gs
sbb
xor
nopl
aaa
ret
nop
clc
jno
hlt
mov
xchg
inc
xor
dec
popf
mov
jmp
call
fisubrs
in
mov
mov
dec
notl
jo
jle
leave
loope
jg
dec
xchg
xchg
mov
or
sbb
pop
pop
mov
mov
enter
into
mov
push
je
or
jge
lret
or
mov
aas
pop
push
fs
cmp
gs
inc
outsl
hlt
das
std
xchg
pop
ret
aaa
mov
jg
inc
jl
cwtl
mov
jle
popf
pop
xchg
push
pop
lock
sub
cld
mov
add
loop
insl
lcall
imul
xchg
mov
push
fimuls
std
outsb
and
inc
adc
mov
push
and
nop
pop
or
inc
in
sbb
push
jne
mov
and
sti
inc
cmpsb
test
sarb
pusha
ja
push
rol
gs
mov
cmp
stc
shlb
leave
dec
inc
out
push
push
cwtl
mov
in
dec
test
and
jge
dec
mov
fs
xor
cmpsl
int3
and
xchg
aaa
pop
and
stos
arpl
inc
push
xchg
rol
mov
jl
pop
out
inc
icebp
and
or
cmc
and
inc
sbb
add
lods
jns
adc
out
adc
cmpb
mov
mov
pop
test
pop
gs
lret
adc
lods
or
cmp
faddp
stos
out
cli
insb
loope
dec
enter
fsubrs
jb
hlt
or
mov
je
fs
dec
mov
pop
jle
ljmp
mov
push
mov
dec
jecxz
mov
pop
idiv
aaa
sarb
jle
fidivs
mov
push
inc
insb
inc
mov
cmc
sub
pop
cmp
mov
jo
cmp
cmp
sub
movsb
sbb
out
xchg
cltd
pop
dec
and
in
inc
xchg
addr16
std
mov
push
cmpsb
imul
add
lds
push
pushf
pop
cmc
gs
add
cmp
scas
pop
inc
out
mov
bound
aam
jno
and
add
mov
ret
inc
ret
pop
xchg
in
js
xchg
je
inc
out
mov
in
xor
lea
in
ja
push
xor
xorb
jecxz
mov
test
mov
xorl
or
out
imul
xor
jge
xchg
pop
int
push
jle
adc
arpl
mov
decb
mov
ja
test
xchg
jecxz
xor
push
dec
pop
adc
mov
dec
dec
sahf
adc
or
mov
es
cmp
bound
and
and
nop
pushf
xchg
mov
lds
inc
jae
je
jb
in
vunpckhps
adc
loop
push
mov
pop
xchg
xchg
add
or
mov
jae
rorl
or
fdivrs
push
or
xchg
mov
call
cwtl
jb
aad
sbb
and
xchg
cmp
mov
mov
loope
hlt
adc
out
add
insb
add
fdivrl
jle
ja
jno,pn
in
jl
and
inc
jns
out
aad
in
inc
mov
mov
ret
add
fdivrl
stos
outsl
iret
push
scas
xchg
sub
xchg
aaa
mov
movsl
push
je
inc
in
out
inc
adc
jne
movb
subb
sub
sub
into
ret
mov
nopl
jecxz
jno
sbb
xchg
shrb
and
cmc
mov
icebp
sahf
std
flds
fs
shrb
aad
push
jecxz
imul
push
pop
cmp
and
xchg
rorb
add
int
lock
mov
fmuls
out
jne
ficompl
xor
mov
sub
cs
scas
leave
lods
add
mov
gs
mov
cmpsl
add
or
xchg
daa
cli
xchg
movsl
pop
iret
sub
cwtl
push
jg
adc
ss
cmp
fcmovne
lds
stos
xor
mov
xchg
lods
add
sub
test
lea
jp
fcoms
inc
dec
fwait
mov
dec
les
xor
xchg
xchg
xor
sbb
arpl
test
push
or
push
inc
mov
push
inc
outsl
bound
cmpsb
loopne
in
adc
scas
xor
add
arpl
inc
adc
push
inc
xchg
bound
pop
push
push
je
jo
mov
and
jl
mov
std
fistl
and
inc
fbld
jnp
ror
js
arpl
xchg
jae
dec
cld
leave
inc
and
xor
rcl
xbegin
mov
cli
xor
adc
inc
leave
ret
push
fistl
pop
repnz
lods
adc
add
mov
stc
inc
inc
lds
mov
fs
adc
loope
clc
stos
sub
xchg
dec
test
cmp
hlt
and
sbb
insl
xchg
adc
and
ficoml
mov
xchg
fnstcw
push
pop
fsub
lret
jmp
in
adc
push
pop
stos
push
add
sub
xchg
aad
in
xchg
daa
jmp
adc
mov
mov
frstor
xor
pop
xor
dec
popa
inc
jo
pop
mov
fs
scas
fs
cltd
push
mov
cmp
mov
xchg
ja
and
fdivrl
xchg
cld
push
or
mov
sti
cmp
sub
hlt
adc
shll
sbb
jae
pop
jno
movsb
loope
xchg
add
rorb
fdivrs
sub
movl
xor
dec
loop
mov
and
ret
cmpsl
std
cmc
aaa
inc
xchg
adc
add
xchg
roll
xchg
std
int3
and
jmp
mov
filds
xchg
jo
dec
xor
push
lods
sar
jg
repnz
imul
mov
mov
xchg
mov
cli
rorb
loop
sub
rcrl
outsl
adcl
fisubl
sbb
stos
push
mov
sub
jmp
xchg
outsl
sbb
movsl
fs
mov
decb
add
pop
dec
xchg
enter
mov
std
data16
movsb
xchg
fldt
inc
or
push
pusha
push
jo
add
or
flds
sbb
or
bound
loope
fstps
addr16
adc
dec
leave
add
lock
sub
insb
or
jmp
pop
mov
xchg
mov
aaa
fstpl
int
adc
into
sbb
jp
lods
push
mov
push
cmpl
cmp
in
jne
into
and
and
jmp
and
mov
xchg
dec
jbe
push
sub
loopne
addr16
in
sub
sbb
clc
out
mov
pop
mov
mov
daa
daa
dec
sahf
pop
and
mov
popa
xor
push
pop
mov
dec
sarb
sbbl
rclb
aaa
jge
dec
popa
iret
mov
stc
jmp
dec
mov
shll
sbb
sub
sbb
sbbb
movsb
pop
xchg
lret
adc
jae
xchg
mov
dec
jb
icebp
mov
call
lods
mov
adc
dec
aaa
xor
int3
in
pop
icebp
sub
sub
fwait
in
das
mov
add
rcl
sarb
cld
rolb
lods
jl
sub
push
scas
jo
pop
jo
cmpsl
cmp
inc
movsl
lds
push
inc
shll
iret
push
ja
jae
shrb
in
call
add
jnp
cmp
aam
fisttps
xor
insl
pop
int
push
ret
divb
call
mov
mov
and
dec
in
pop
mov
add
sub
mov
xor
jge
mov
js
mov
sub
cs
divl
inc
outsb
scas
dec
jbe
xchg
pop
sbb
push
sti
dec
xor
inc
cmpsl
addb
dec
out
push
mov
ret
cmp
adc
test
imul
rcll
outsb
shrl
xchg
fldt
enter
loopne
and
or
ljmp
inc
sbb
insl
sub
shl
xchg
cmpsb
and
inc
rorl
imul
stos
roll
fs
daa
pop
stos
inc
les
aas
fidivrl
push
leave
adc
loopne
jmp
ja
mov
out
sub
xor
leave
insl
dec
clc
jbe
fnstcw
mov
clc
leave
paddw
call
dec
lcall
leave
cmp
xlat
pop
mov
or
fdivrl
es
mov
cmp
push
mov
mov
mov
mov
jo
jle
dec
outsb
lods
mov
adc
mov
xchg
or
fwait
mov
mov
into
fwait
cli
repz
cmp
mov
adc
in
push
or
mov
test
cmp
xchg
lret
adc
lcall
adc
adcl
jg
roll
lahf
xchg
jns
movsb
xbegin
in
xor
je
clc
jne
or
daa
int
jns
stos
xor
sub
mov
data16
jne
push
and
pop
pop
out
xchg
aad
repz
mov
js
add
push
cld
pop
inc
xchg
leave
scas
je
ja
ss
out
dec
or
mov
int3
lock
cwtl
ljmp
lahf
ret
data16
push
mov
push
lods
mov
popa
adc
int
cmp
sahf
and
adc
xor
hlt
xchg
add
mov
lea
adc
xchg
clc
add
dec
in
xchg
sub
sbb
jg
sbb
shll
push
sub
push
aad
int3
jne
fnstenv
add
xor
sub
sub
mov
imul
aas
pop
pop
outsb
jns
and
js
and
or
fisubrs
fldenv
jl
andl
cmp
iret
mov
cli
mov
cmc
mov
mov
add
mov
stc
orb
jl
mov
mov
repz
call
lret
sbb
jle,pn
cmp
cs
mov
jle
pop
aad
negl
adc
inc
cwtl
lods
shl
jmp
inc
mov
push
scas
add
aam
mov
sub
pusha
sub
or
mov
dec
mov
sbb
pop
and
hlt
xchg
pop
pop
sub
or
lcall
push
test
dec
cld
pushf
lods
sarb
cmp
fdivrl
add
adc
xchg
mov
ss
sbb
mov
add
sub
scas
sub
fucomp
push
stos
sti
push
add
xor
push
xor
lods
mov
xchg
pop
popf
push
pop
adcb
shr
or
pusha
bound
jl
shrl
popf
shr
in
arpl
out
or
imul
jg
aam
xorl
xor
add
cmp
mov
adc
int3
imul
je
push
and
sbb
or
imul
jl
mov
jmp
xor
and
arpl
in
xor
or
fdivrl
aam
push
ljmp
mov
and
div
mov
mov
sbb
fisubrs
or
and
mov
push
mov
jg
iret
push
popf
pop
xor
movsl
movsb
loope
aad
testb
arpl
dec
add
stc
mov
ret
pop
jo
push
mov
fsub
xlat
rolb
push
mov
mov
sub
in
inc
mov
mov
or
inc
sbb
ds
fs
lcall
loop
dec
outsb
pusha
cmp
push
int3
jecxz
mov
jle
lret
shl
fisttpll
jl
xchg
jecxz
or
pop
fwait
das
int
or
pop
ret
pop
sub
or
arpl
and
fisubl
stc
inc
ds
xchg
dec
loopne
xchg
mov
imul
pushf
mov
xor
je
push
stos
repnz
pop
sub
pop
xor
insl
in
popf
add
sub
ret
sub
sub
stos
aaa
outsb
test
jl
daa
fsubp
pop
sbb
ret
decl
les
mov
mov
nop
jmp
mov
mov
cmp
mov
push
dec
lahf
stos
adc
sub
jmp
mov
jb
lods
add
adcl
pop
mov
jl
mov
jmp
negb
gs
xor
outsl
rcll
out
or
push
pushf
les
pushf
adcl
rcl
outsl
popa
lret
dec
add
jae
ja
adc
mov
lea
hlt
xchg
shrb
push
clc
je
jo
out
sbb
jl
js
scas
cltd
xchg
iret
aam
lds
lahf
int
or
inc
push
pushf
pop
jo
sbbl
leave
xchg
mov
das
and
test
sbb
or
js
insl
xor
mov
adc
cmp
cmp
aam
cmp
jecxz
aaa
push
movsb
aaa
pop
arpl
mov
push
xor
lret
cld
add
and
stos
sbbb
sti
stc
pop
test
ret
sub
imul
cmp
mov
fldl2e
pop
cmp
lahf
clc
adc
sahf
mov
jbe
or
xlat
es
cmp
lahf
push
push
flds
mov
scas
lods
pop
mov
push
inc
jnp
loopne
sub
mov
adc
lahf
repz
sbbl
shlb
dec
pop
out
sub
lret
jp
addr16
in
out
add
int3
xor
push
inc
or
jno
fptan
daa
mov
iret
outsl
sub
cmp
and
test
xlat
inc
and
xchg
scas
mov
sbb
dec
xchg
insl
ljmp
pop
mov
arpl
test
pushf
and
shr
dec
rorl
cwtl
cmpsb
jle
div
mov
jmp
imul
dec
cwtl
push
lret
sahf
add
out
jnp
xor
loop
std
lret
stc
xlat
push
aas
xor
mov
mov
push
je
xchg
dec
adc
mov
xorl
push
push
push
and
mov
outsl
push
push
in
popf
rorl
int
inc
fbld
rolb
lcall
pop
push
and
xchg
fdivrs
test
dec
jo
cmp
pop
hlt
mov
lahf
jecxz
rcrl
mov
mov
icebp
or
add
outsl
pop
jmp
insl
or
and
adc
stos
scas
jno
inc
js
lret
lods
cwtl
int
insl
out
jnp
call
fidivrl
shll
lods
repz
jae
jns
ret
add
add
cmp
mov
sti
subb
test
mov
adc
dec
in
mov
jge
dec
add
mov
repz
xor
imul
xor
pop
xchg
outsb
cs
add
pushf
pop
cltd
xor
mov
clc
cmpsl
dec
bound
or
aas
insl
mov
cltd
out
ja
push
movsl
xchg
dec
and
data16
inc
lds
dec
shr
pushf
push
loope
insl
imul
or
mov
mov
inc
sub
mov
imul
push
mov
repnz
cmp
push
cmp
mov
xchg
sbbl
and
clc
mov
cmc
nop
addr16
pop
mov
push
das
ja
adcb
inc
lahf
stos
mov
std
xchg
jl
pop
jo
lret
loopne
xchg
xor
jmp
mov
dec
scas
fs
adc
push
je
mov
sahf
clc
lahf
push
inc
mov
jns
sbb
cli
push
in
jns
push
mov
mov
sbb
xchg
or
push
pop
mov
mov
ds
mov
jl
sti
jmp
xchg
inc
arpl
dec
cmpsb
cld
in
clc
je
cmp
cmc
inc
mov
adc
sub
xchg
jge
sti
es
inc
pop
test
mov
mov
stc
sti
add
mov
add
dec
sub
ss
int
push
enter
test
cmp
ljmp
jp
cmc
inc
cli
imul
loopne
sar
cmpl
test
test
inc
push
adc
adc
jnp
jle
loop
lods
inc
mov
mov
sar
outsb
jns
fiadds
cld
add
or
jp
shll
or
es
clc
and
out
repnz
stos
mov
dec
and
dec
fsubr
sub
les
mov
dec
and
fs
cmp
push
or
xchg
pop
cwtl
push
in
inc
inc
and
shlb
fsts
cmc
cwtl
pushf
jno
push
out
or
xor
rcll
mov
pop
xchg
ja
mov
sbb
dec
aad
insl
add
scas
shlb
int3
leave
cmp
fisubrs
pop
scas
shrl
mov
in
shlb
stc
and
stos
mov
dec
pop
jno
and
adc
cwtl
inc
aad
pushf
lcall
outsl
mov
ss
dec
sub
sti
pushf
into
shll
sbb
inc
fs
fs
fistl
cmpsb
in
loope
and
sub
sub
call
in
adc
or
dec
and
pop
sub
inc
jnp
or
sbb
aaa
sub
adcl
fimull
mov
sbb
in
js
add
jnp
iret
scas
push
aam
imul
mov
pop
jl
movsl
add
jmp
inc
xchg
andl
andl
inc
xchg
scas
sub
into
addb
cli
out
rorl
xchg
ss
or
and
bound
movsb
in
mov
and
icebp
insb
xor
ret
xchg
jne
inc
sbb
or
pop
into
push
mov
adc
aaa
jb
lods
push
xor
dec
dec
sbb
sbb
push
orb
jmp
cwtl
pop
pop
popl
jg
push
xor
in
jmp
sbbl
dec
mov
sbb
dec
into
cmp
inc
jno
rol
and
pop
sti
dec
stc
jg
jbe
mov
push
fs
lods
cmp
push
mov
xor
sub
xchg
js
in
ja
test
fsubrl
ljmp
push
lock
cli
mov
cmp
test
sbb
sub
jo
sbb
jns
call
and
sbb
movsl
add
inc
xchg
xor
jge
xchg
cmpsl
dec
cmp
mov
pop
or
rcr
dec
mov
cmp
mov
mov
dec
data16
dec
xchg
dec
les
or
mov
fisubrs
mulb
popa
rcrl
adc
pop
push
fists
adc
rcrb
hlt
and
popa
mov
insl
xor
loop
lahf
cmp
lret
push
sahf
int3
mov
movsb
dec
sub
pop
dec
push
es
sub
pop
mov
push
ljmp
jb
sub
fisttpl
pop
ds
cwtl
hlt
sub
cmpsb
xchg
jle
xorb
dec
enter
clc
stc
nop
adc
cwtl
xor
outsb
call
xchg
and
in
mov
clc
dec
or
add
sbbl
add
mov
and
mov
mov
imul
test
lret
mov
push
fstl
mov
adc
iret
cmpsb
push
add
popa
pop
ljmp
xchg
xor
les
fsubs
sbb
lea
sub
gs
fdivrl
test
mov
cmc
fwait
sub
push
xor
andb
in
fmul
aam
sbb
push
adc
cmp
push
add
mov
in
in
adc
jbe
testl
loopne
pop
jg
mov
testb
cmpsb
jge
sarl
add
mov
mov
pop
push
sarb
mov
movsb
jg
js
pop
lds
mov
lods
sub
imul
cld
adcb
pop
cmp
fwait
popf
and
ja
aam
mov
movsb
xchg
es
xchg
loope
sbb
loop
lea
xchg
mov
pusha
mov
lock
loope
push
mov
jb
iret
xchg
cmp
fisttpl
xor
sub
pop
aam
xor
cmp
pop
fnsave
mov
push
cmpsb
xchg
lret
jmp
jge
test
push
jb
add
mov
filds
hlt
repnz
or
add
ja
in
fldenv
std
xchg
mov
insl
pop
pinsrw
add
mov
fucomi
lcall
jbe
sub
in
pushf
mov
push
in
adc
mov
jmp
xor
cltd
jle
push
int
call
lcall
cwtl
cld
inc
comiss
mov
mov
jecxz
das
or
leave
xchg
insb
cmp
and
aas
and
jns
sub
adc
and
andb
push
sbb
lret
cli
arpl
ffree
lea
mov
rorl
and
fs
pushf
es
jl
dec
ret
push
xchg
addr16
shlb
mov
orb
aas
in
jl
inc
pop
mov
into
int3
lret
je
shl
je
or
subl
pusha
int3
leave
sub
cs
mov
rcll
pop
outsb
mov
daa
lods
or
mov
hlt
rcl
ja
je
nop
xor
push
jo
xchg
pop
and
fwait
add
das
cmpsl
aad
mov
movsb
push
ljmp
fadds
cltd
sbbl
movsb
jge
jge
test
lcall
mov
in
adc
lcall
fisubrl
pop
icebp
pop
out
movb
fbld
sub
push
bound
mov
gs
popf
jmp
xchg
sbb
lods
jns
sti
imul
xchg
mov
or
lds
data16
mov
ffree
lret
xchg
push
lods
mov
jp
mov
xchg
cltd
or
imul
jo
inc
xor
cmpsb
and
insl
dec
mov
add
cli
jge
outsb
iret
in
push
push
jne
in
stc
ret
xorl
loopne
data16
lods
outsl
repnz
jns
dec
pop
repz
decl
pop
xchg
xchg
out
scas
sbb
pop
bound
out
out
ficompl
jo
jp
fisttpll
outsl
or
cmp
and
mov
xchg
xchg
lock
pop
mov
loopne
into
jmp
ljmp
js
test
das
jbe
dec
xchg
movsb
imul
inc
dec
mov
cli
inc
xchg
mov
adc
dec
arpl
fmuls
push
repnz
xchg
cli
pushl
add
mov
mov
lret
fisttps
cs
mov
and
loope
and
xchg
lods
insl
adc
jb
jae
sbb
fwait
bound
fs
jb
xorl
jne
clc
lea
sub
adc
xor
cli
dec
xor
add
fmuls
lahf
test
fisubl
ret
orb
movsb
and
fisttpll
add
pop
js
xorb
inc
xchg
adc
or
ss
dec
stos
fldpi
mov
mov
xchg
xor
or
lods
insb
daa
ja
xor
dec
popl
adc
mov
int3
lcall
xlat
or
cmp
mov
xchg
cmp
stos
cmp
xor
stc
xor
in
push
push
lods
jne
mov
cmp
int
push
xor
mov
notl
mov
jo
or
cmp
into
shl
xchg
stc
subl
mov
push
cmp
sahf
pop
jge
je
int
fcmovnbe
imull
jns
icebp
push
sub
inc
mov
lahf
aaa
imul
cs
xchg
clc
dec
mov
dec
cmp
rcll
loop
cmp
pop
movsl
jbe
and
fldcw
frstor
clc
add
xor
ss
sbb
divl
dec
pop
jl
adc
push
aas
repnz
or
xchg
jno
mov
mov
testb
cltd
addr16
in
mov
ja
mov
fs
orb
inc
cmp
adc
nop
leave
sbb
call
mov
sbbb
scas
sub
inc
icebp
push
movl
es
fcmovb
sub
cmc
push
mov
adc
es
and
cmp
and
cltd
mov
into
test
jno
rcl
or
jae
test
adc
push
pop
icebp
jecxz
test
mov
and
nop
dec
jbe
repnz
loope
pop
fidivl
push
dec
cmpsb
sbb
push
pop
andb
cmovp
repz
das
cli
and
and
dec
sahf
pusha
cmpsl
ret
cmpsl
dec
xchg
lahf
mov
jnp
ret
or
in
jb
cmp
imul
and
popa
add
lahf
dec
jns
aas
push
sub
outsl
fmul
cmpsl
add
sar
popf
test
inc
xchg
xchg
pop
cs
ds
es
ds
stos
jmp
fdiv
aam
jo
mov
lock
push
aaa
sti
cmpsb
jb
dec
mov
cmp
clc
mov
stos
fistl
fists
jle
jb
in
popa
js
sub
std
subl
dec
dec
data16
adc
mov
lahf
mov
std
lea
ret
mov
shrb
mov
jge
inc
mov
xor
sub
rcrl
sbb
loop
cmp
push
xchg
lahf
js
xor
mov
or
sbb
xchg
rcl
dec
cli
or
inc
dec
mov
mov
xlat
js
dec
add
lock
sbb
inc
lods
outsb
jl
cmp
mov
iret
jmp
clc
jno
pop
inc
fwait
push
hlt
inc
ficomps
lock
pop
dec
push
jl
in
test
and
in
mov
dec
outsl
jo
xlat
je
mov
cmpsl
idivb
inc
mov
mov
dec
xchg
push
mulb
xchg
mov
mov
and
sarl
mov
imul
pusha
insb
cmp
cs
sbb
hlt
test
loope
mov
not
mov
xlat
ja
cmp
test
cmc
sbb
aas
cli
popf
iret
pop
and
or
push
fcmovnb
out
inc
mov
jecxz
sub
cwtl
jbe
and
rol
add
add
xchg
xchg
inc
adcl
shufps
push
fisubrs
pop
in
divb
or
and
rol
ljmp
daa
xor
sub
out
mov
mov
mov
jne
loope
inc
scas
notl
scas
rorb
add
aam
sahf
lret
dec
sbb
jne
mov
test
andl
push
jo
pop
sbb
mov
mov
jae
push
adc
jmp
pop
hlt
stc
push
xor
enter
push
lock
cmp
adc
xchg
xchg
dec
add
outsb
arpl
ja
fiadds
outsb
hlt
push
ret
fisubrs
jbe
repnz
sub
cmp
push
stc
scas
mov
les
dec
push
hlt
cli
loopne
mov
shl
fcomps
mov
sbb
mov
test
lea
or
stos
or
push
jp
aad
dec
push
lret
xor
aam
xor
pop
pop
repz
cs
je
std
dec
sub
fisttps
in
sahf
insl
push
clc
rcrl
fisubl
xchg
out
inc
mov
pop
lret
dec
loopne
jp
shlb
icebp
push
out
mov
sub
jns
out
push
jmp
jecxz
adc
pop
and
adc
dec
or
stos
xchg
push
pop
lods
dec
into
adcb
ja
pushf
sub
jg
ret
lcall
dec
mov
cwtl
push
cmp
pusha
push
and
sbb
std
add
inc
jne
xchg
lods
jbe
or
cmp
or
stos
xlat
xchg
mov
int3
ret
fwait
mov
adc
push
add
ret
xor
jnp
mov
pop
aad
test
movsl
inc
sub
popf
xchg
sbb
add
adc
push
push
ret
xor
out
movzbl
jbe
sub
pop
pop
popa
sub
out
add
sbb
push
mov
and
or
xor
mov
ror
outsl
xchg
xchg
mov
mov
xchg
push
jp
lahf
pop
clc
pop
fadds
mov
rorl
or
roll
jge
xchg
mull
xor
push
popf
mov
int3
sub
push
fsts
dec
cmpsb
shl
test
ja
and
jle
repnz
fs
adc
pusha
jecxz
cwtl
xor
ret
mov
pop
xchg
inc
add
out
mov
lret
aam
add
sbb
dec
push
xchg
dec
fistpl
pop
mov
fdivrl
adc
cmp
testb
cwtl
xchg
xchg
mov
push
mov
mov
pop
dec
mov
add
inc
fbstp
mov
stos
sbb
inc
fnsave
loopne
aas
cmp
xchg
ss
cli
repnz
cs
cltd
mov
pusha
cwtl
mov
stos
in
stos
movsb
cmp
imul
inc
and
push
data16
test
mov
sbb
cwtl
loope
xchg
sub
clc
stos
sub
enter
in
push
enter
xchg
clc
mov
cmp
jno
daa
dec
mov
mov
inc
ljmp
lods
dec
xlat
adc
adc
sub
in
subb
xlat
imul
mov
mov
out
ficoml
sbb
nopl
lahf
iret
and
mov
xchg
outsb
imul
and
cltd
push
push
inc
cmp
mov
rcll
pop
stos
mov
jo
jnp
fwait
inc
or
int
cli
cli
imul
add
pushf
mov
in
rorl
test
pop
push
and
enter
jae
jle
or
pop
xor
lds
mov
or
notw
adc
movsl
mov
or
lret
jmp
je
dec
dec
lods
add
xchg
jg
icebp
lock
aas
xchg
in
mov
sub
cld
dec
xorb
cmp
jbe
mov
sbb
push
shrl
jge
jg
loope
dec
dec
push
sbb
sub
push
jmp
push
mulb
imul
fldt
fidivl
sbb
call
subl
movsl
xchg
insl
add
and
add
add
push
mov
and
mov
div
push
std
jge
stos
xchg
cwtl
mov
loop
push
jns
push
push
add
mov
mov
imul
push
mov
out
out
aaa
jb
lods
addr16
pop
inc
xchg
and
adc
bound
adc
push
jp
jp
jge
mov
in
dec
jns
mov
sub
pop
loopne
scas
movsl
pop
sahf
mov
adcl
add
icebp
adc
jno
cmpsb
shlb
sub
mov
and
insl
add
fidivrl
daa
adc
das
stc
subb
shl
push
jle
push
inc
cmp
xor
push
jmp
lds
mov
aad
rcll
xor
jl
scas
sbb
xchg
into
cmpb
cld
mov
dec
or
ss
push
mov
sbb
push
and
sub
ljmp
or
sub
cmp
nop
dec
es
cld
mov
mov
popf
jns
jp
hlt
mov
inc
scas
cs
shlb
sub
mov
sub
in
addr16
jnp
fs
outsl
movsb
stc
and
cmpb
mov
inc
push
out
inc
xchg
add
fld1
or
add
call
fnstsw
sub
dec
fsubrs
push
pop
sbb
js
fdivr
in
pop
jb
adc
xchg
push
daa
in
xor
adc
jo
dec
dec
je
mov
dec
popa
mov
fisttpl
nop
ficomps
cmpsl
ja
loop
jno
hlt
add
nop
cmpsb
pop
push
imul
push
jl,pt
aaa
push
dec
pop
mov
adc
xchg
imul
inc
clc
mov
inc
leave
jne
mov
imul
sbb
mov
sahf
lods
dec
mov
and
push
daa
adc
orl
mov
mov
enter
insl
sbb
or
es
inc
lret
cmp
out
fistl
mov
daa
scas
cmp
subl
lahf
pop
sbb
push
mov
dec
cwtl
in
pop
xor
iret
add
push
xor
xor
mull
cmp
add
js
xchg
add
push
and
pop
loope
int
add
in
imul
adc
gs
xchg
sub
sbb
movsl
imul
pop
or
in
sbb
inc
mov
pushf
call
lock
dec
movsl
xchg
pcmpgtd
in
test
rcl
aam
lds
push
adc
dec
inc
mov
enter
fadds
sub
or
jle
clc
test
inc
rorl
jp
adc
push
xlat
outsb
gs
popa
adc
test
stos
lock
pop
jae
pop
vfmadd132sd
loop
xor
pop
clc
push
lret
test
or
inc
add
ret
jb
nop
notl
data16
mov
xor
sahf
sub
push
adc
add
stc
ss
dec
outsl
push
jecxz
add
or
ljmp
adc
lahf
andb
bound
add
arpl
das
js
push
pop
pop
cmp
movsl
cmpsb
jmp
cld
xor
sub
push
xor
xchg
cmpsb
sub
add
scas
sar
hlt
add
lahf
call
adc
insl
test
push
aas
cmp
movsb
adc
inc
popf
rcll
add
fdiv
or
std
mov
or
loope
imul
nop
mov
or
pushf
dec
mov
in
in
cltd
push
mov
sub
int
ja
sub
sbb
out
rolb
and
mov
pop
sti
xchg
fimuls
loopne
loope
mov
nop
idivb
loopne
add
pop
addl
rolb
daa
pop
xchg
xchg
decb
stos
sbb
dec
imul
mov
lds
cmp
fadds
inc
call
fisttpll
sbb
int3
lret
xor
sti
clc
sub
xor
cld
test
lods
stc
jl
push
pushf
mov
inc
dec
dec
outsl
out
ds
lret
mov
mov
out
loopne
pop
popf
add
pop
cmc
adc
sti
add
outsb
rclb
cmpsl
into
mov
mov
sbb
or
xor
xchg
movsl
arpl
push
fs
jmp
test
repz
xor
ret
cmpsb
arpl
icebp
xor
mov
daa
lret
aaa
push
pop
or
xor
shrl
jae
nop
mov
icebp
inc
sub
cmpsb
sbb
mov
add
cs
js
insl
jle
cmc
sti
inc
dec
test
dec
adc
adcb
icebp
fwait
pop
shll
xlat
cld
or
mov
shlb
movsl
mov
adc
adc
stc
jecxz
sbb
pop
mov
adcl
xchg
xor
nop
cli
es
pop
push
mov
aam
mov
movsb
xor
mov
xchg
inc
scas
or
pop
sbb
int3
push
sub
xor
jp
sbb
scas
adc
xchg
cwtl
mov
or
cmp
jae
push
sti
mov
arpl
mov
insb
and
stc
scas
leave
inc
shr
std
push
add
mov
ss
lods
rolb
push
into
mov
mov
xchg
hlt
jl
lods
cmp
mov
sbb
les
sub
push
idivb
sti
cmp
popf
insb
cs
mov
pop
and
mov
je
inc
and
cltd
mov
mov
cmp
or
adc
ret
pop
inc
lret
lock
sub
jmp
out
in
dec
dec
les
push
cmp
fmul
inc
cli
je
shlb
jecxz
cmp
push
mov
nop
cmpsb
mov
cmp
lret
jbe
push
aas
jg
movsb
pushf
lods
or
ss
push
aaa
test
pop
in
dec
and
mov
dec
xor
cmp
sti
jp
fidivrs
xor
fs
inc
cmp
pop
mov
xchg
das
jecxz
mov
out
mov
ror
das
ds
mov
mov
inc
in
push
fcmovne
std
jnp
cli
inc
mov
mov
adc
add
add
sbb
push
lds
jmp
jp
cmp
int
daa
jnp
mov
push
xchg
dec
jns
loope
test
in
inc
das
pop
popa
inc
push
push
mov
lds
push
pushl
and
add
mov
and
test
test
add
sbbb
mov
test
call
fmull
mov
loope
jmp
rorl
sbb
test
mov
js
das
pop
mov
sbb
das
add
loop
xor
push
test
pop
rcrl
mov
stc
ret
lret
sbb
nop
sub
pop
jnp
dec
xchg
mov
dec
fimuls
xchg
imul
cltd
inc
stos
pop
cwtl
fprem1
mov
add
nop
mov
push
test
repnz
add
pop
nop
je
mov
pop
mov
jp
and
add
jmp
jge
rcl
xchg
pop
mov
shr
dec
adcb
inc
jl
imul
and
or
jge
mov
ja
xchg
inc
sub
sarb
sub
push
das
jne
mov
sub
lock
mov
loopne
sub
dec
add
scas
mov
iret
cmp
in
add
jle
pop
lock
or
xor
inc
in
push
ror
loope
fcompl
movsl
pop
aas
rcl
push
cmc
and
adc
mov
or
ds
adc
adcb
frstor
jle
jg
mov
add
faddl
or
push
lret
fidivrs
push
push
ret
int
loopne
arpl
inc
stos
addr16
and
inc
sbb
inc
outsb
outsl
adc
or
mov
sub
xor
sbbl
inc
test
test
inc
adc
mov
mov
mov
movnti
push
push
punpcklbw
jge
push
xorl
dec
pop
xchg
mov
jb
pop
icebp
pop
mov
dec
lret
mov
pushf
mov
stos
int
subl
inc
xlat
test
lret
cmp
test
jo
lea
std
ds
mov
mov
push
mov
inc
sub
fs
mov
push
scas
pop
icebp
lods
pop
mov
add
aam
or
hlt
jp
dec
dec
and
mov
shll
outsb
int
adc
jl
pop
imul
and
inc
stos
xor
jle
xor
iret
jge
jmp
jmp
out
xchg
pop
popf
rcll
fsubl
xchg
sbb
aaa
xor
push
out
xor
jo
mov
mov
push
add
and
out
sahf
jg
dec
mov
rcrl
int
roll
popf
aad
std
int3
xor
sbb
mov
or
into
mov
mov
inc
sbb
insb
dec
mov
adc
ds
xchg
adc
add
and
and
adc
repnz
mov
sub
push
dec
jmp
into
xor
or
ss
add
loop
ljmp
in
push
mov
lret
mov
adc
fisubs
xchg
in
in
mov
jne
dec
sub
mov
cltd
add
sbb
popl
sbb
in
mov
test
pop
adc
push
fisttps
push
sbb
nop
movsl
out
shll
addb
jl
dec
iret
gs
mov
mov
lds
pop
shrb
test
inc
cmp
gs
pop
test
out
hlt
inc
pop
sbb
push
lods
pop
or
pop
inc
pop
loop
cli
pusha
sbb
inc
repz
cmp
ljmp
nop
in
sbb
lret
mov
xor
sub
adc
aad
lods
out
cmp
fwait
jb
cmpb
out
hlt
iret
push
stos
inc
cmp
fwait
out
cmp
cmp
xor
test
outsl
test
aas
aas
inc
pusha
xor
jge
mov
inc
cmpxchg
aaa
push
hlt
jbe
xorl
inc
insl
lods
mov
jecxz
push
shlb
sub
mov
in
cmp
cmc
in
push
divb
pcmpeqd
mov
sub
pop
test
pop
roll
sub
pop
jl
ja
lret
std
sub
rcrb
inc
sahf
lret
lods
mov
push
adc
inc
jno
push
xchg
insb
sahf
arpl
inc
pop
sbb
into
push
jnp
cli
push
cmp
sbb
popf
add
sub
dec
in
and
cmc
mov
das
out
xchg
mov
dec
or
notl
testb
mov
pop
cli
xchg
cmp
cltd
mov
mov
jecxz
into
sub
xchg
idiv
pop
push
jmp
ja
aaa
push
stos
mov
je
arpl
jle
mov
fdivs
pop
insl
add
mov
mov
sahf
fucom
icebp
lods
insb
mov
cltd
and
pop
leave
and
xorl
ret
dec
scas
scas
out
and
sbb
fbld
sbb
and
vcvtsd2si
sbb
adc
jg
in
inc
scas
jle
sahf
dec
icebp
pop
push
push
sbb
inc
mov
fstl
stc
jg
adc
mov
or
loop
leave
sbb
pushf
std
test
mov
mov
or
je
jns
pop
clc
insl
pop
fisubrl
adc
in
movsb
push
addr16
ljmp
add
lock
fldcw
aam
lea
xorb
xchg
and
add
jnp
push
movsb
insb
dec
lods
xchg
jne
adc
mov
xchg
fldt
dec
sub
clc
jge
mov
inc
mov
cmp
sbb
mov
pop
xor
cmc
imul
push
in
sti
lahf
mov
pop
enter
mov
inc
pop
mov
or
push
hlt
scas
fisubrs
clc
cld
cmp
cs
loopne
jno
pop
jns
dec
fwait
dec
mov
sub
clc
jbe
cmpsb
lret
push
aad
repnz
xor
cmpsl
xchg
push
rclb
xlat
and
pop
mov
adc
int3
mov
dec
and
in
stos
ljmp
pop
sub
mov
enter
push
and
sarb
mov
mov
push
jge
dec
cmpsl
rclb
nop
cmc
maskmovq
notl
iret
xor
xchg
xor
adc
mov
push
pusha
pop
cmc
jl
mov
lret
sbb
mov
lcall
out
mov
pop
add
loop
movsb
inc
push
sub
outsl
divb
adc
cs
ss
ljmp
mov
push
dec
lds
stc
jge
fdivrl
mov
add
jl
push
push
iret
mov
mov
pop
cltd
jl
pop
fstp
adc
inc
sbb
ret
jecxz
sbb
lods
mov
cli
das
push
mov
inc
pop
mov
ss
shr
pop
cmc
bound
shll
xchg
push
jb
mov
jp
push
push
mov
loop
loop
inc
fistpll
and
ds
or
movsbl
imul
movsb
xchg
pop
or
sub
xor
lahf
sbb
mov
jae
pop
jns
and
movsb
push
rorb
repnz
stos
push
mov
dec
std
add
mov
test
inc
stc
jmp
pop
decb
mov
sub
js
or
push
mov
pop
call
sub
loope
cltd
mov
push
jne
pop
imul
mov
mov
xchg
or
mov
add
sets
es
lea
adc
mov
xor
fdivrs
xchg
jl
xor
push
loope
cmp
adc
ss
daa
jns
push
popf
enter
test
inc
cmp
ret
movsl
lret
xor
pop
mov
jae
iret
push
add
or
push
into
and
xchg
sub
arpl
test
mov
push
loope
push
aas
movb
mov
shlb
lret
nop
mov
hlt
gs
in
scas
aam
movsb
subb
jnp
divb
xchg
push
int
xchg
jmp
dec
je
cmp
insl
inc
cmp
add
incl
movsl
imul
jge
aas
int
lods
pop
adc
xor
mov
imul
mov
fidivrs
loope
pop
dec
pop
imul
push
dec
or
int3
mov
iret
cltd
mov
sub
clc
jb
xrelease
xchg
fmull
lods
stc
jge
mov
lock
lods
sahf
sbb
pop
cmp
in
or
cmp
xchg
and
fistpl
imulb
xor
sub
adc
fistpl
xchg
ljmp
pop
aaa
mov
and
sbb
imul
cmc
enter
shl
sub
repz
xchg
stos
adc
shr
sti
xor
mov
rcrb
inc
in
and
in
aad
inc
lcall
xchg
es
ror
jl
lods
mov
mov
data16
into
xor
mov
mov
cltd
bound
inc
xor
inc
fwait
insl
test
jge
pushl
adc
adc
dec
mov
inc
fmull
or
cld
inc
pop
dec
scas
stos
xor
movsb
popf
pop
pushf
push
push
andl
pushw
ja
cmpsb
loopne
jnp,pn
jns
iret
out
or
sbb
add
dec
js
jne
fstps
leave
sub
sub
inc
add
mov
mov
add
xchg
or
inc
dec
stc
xchg
add
sbb
iret
rolb
lahf
mov
addb
mov
cltd
or
sub
push
mov
lret
das
into
push
mov
lods
and
jae
loope
jbe
jns
xor
add
stos
xor
and
sub
sbbb
or
pop
jmp
ss
in
sub
push
fldt
sub
xchg
and
dec
dec
dec
ret
jb
mov
fs
dec
xchg
adc
inc
clc
aam
ret
adc
sbb
das
stos
pop
fsubrl
aad
xor
or
sbb
pop
mov
inc
push
bound
push
pop
sub
mov
xchg
leave
and
push
test
cwtl
mov
std
pop
jecxz
pop
or
out
push
cltd
lcall
cmp
lds
add
and
add
repz
sti
cmpsl
je
lahf
mov
pop
adc
rclb
pop
push
je
aam
imul
cld
lret
sub
hlt
push
je
xchg
test
add
out
outsb
inc
cmc
stc
shlb
stos
pop
mov
add
in
cmp
stos
adc
in
cwtl
outsb
jne
mov
lea
cmc
test
or
push
mov
fcomp
mov
repz
fbstp
xor
jae
mov
lods
dec
cli
out
mov
lret
lock
test
mov
je
aas
nop
sub
lcall
lea
dec
push
dec
or
or
lret
flds
inc
test
in
shll
add
jmp
pop
mov
dec
fdivrl
stos
lret
in
jmp
rcrb
add
fcmovne
or
repnz
jno
or
fcomip
aad
sbb
cli
mov
and
addr16
scas
jno
leave
test
ja
jbe
mov
js
arpl
inc
mov
pop
stos
rep
rorl
pop
stos
loop
lret
or
xor
add
jae
or
das
pop
pop
sub
push
stos
ret
jg
ja
les
or
adc
cmp
stos
pop
add
dec
push
rolb
leave
and
jmp
inc
das
ror
push
add
movsl
movl
loopne
pop
movsl
push
mov
dec
add
lret
lock
cmpsb
or
jp
dec
adc
jp
daa
and
xchg
add
xor
lcall
sbb
lods
mov
pushf
push
lcall
push
xor
pop
xorb
xchg
xor
pop
shll
stos
sti
jbe
fmull
dec
outsl
lods
sub
mov
or
rep
dec
and
fcmovnb
aaa
cmp
add
lret
jl
push
mov
mov
pop
in
mov
loop
xchg
cmpsb
add
mov
xchg
gs
out
add
leave
mov
push
xchg
stos
xchg
lds
push
push
dec
cmpsl
pop
pop
add
shlb
imul
xchg
arpl
sarb
push
rcll
and
mov
cwtl
aam
inc
push
iret
push
and
sarb
cwtd
sub
mov
or
adc
shll
cmpps
jne
cmpsb
and
fnsave
mov
mov
ss
fistpl
jmp
push
inc
sahf
cmpsb
daa
repnz
popf
sub
push
mov
loopne
or
xchg
mov
test
lds
adc
jb
movsl
nop
dec
test
mov
xchg
push
and
sbbb
inc
sub
sub
push
dec
cmp
adc
ss
es
addr16
lds
or
incb
call
mov
dec
push
jno
jnp
pop
push
addr16
push
mov
sbb
stos
out
push
or
or
arpl
sub
push
jge
daa
pushf
mov
and
daa
stos
cli
and
push
fcmovnbe
aas
fwait
or
sub
popa
xchg
dec
xlat
pop
sub
mov
mov
outsb
aaa
in
testb
jge
xor
xor
pushf
loopne
shrl
dec
adc
cmp
fucom
mov
cltd
sbb
sbb
stos
jno
cld
and
insb
iret
xor
stos
lret
inc
cs
mov
and
jle
and
push
mov
xorb
popf
es
jge
cmpsl
loope
pushf
std
push
aaa
xchg
and
adc
mov
push
fmul
push
mov
movsb
adc
je
pop
push
pop
lock
les
xchg
ss
fiaddl
loop
js
sub
xor
fldl
fldt
imul
push
pop
iret
insb
icebp
pop
shl
cwtl
loopne
add
sub
or
call
fsubp
adc
sbb
and
mov
bound
shl
add
add
mov
idivb
sub
out
dec
xchg
jno
int
inc
sub
dec
lret
adc
mov
pop
les
mov
add
fld
jmp
mov
sub
rcrb
fbld
pop
jnp
fistpl
mov
mov
jbe
xchg
test
daa
fstpl
cli
cli
mov
negb
sbbb
jo
pusha
mov
out
icebp
adc
mov
dec
jmp
jecxz
dec
aad
inc
inc
popa
ds
subl
push
jmp
cli
pop
xor
mov
pop
pop
dec
jl
inc
repz
outsb
insb
cmp
sbb
hlt
jg
scas
jnp
jmp
stos
int
push
ret
data16
outsb
push
xchg
fldl
sub
xchg
int3
cmp
mov
adc
insl
fimull
fmuls
push
sbb
or
mov
lods
loope
mov
aad
and
scas
push
mov
adcl
push
lret
sub
out
add
or
sbb
cltd
inc
ret
mov
pop
mov
pusha
jb
ret
or
push
xchg
outsb
popa
aam
stos
int
fsub
lret
push
data16
fsubrs
sarl
inc
push
adc
xor
cmpsl
dec
adc
divb
fnsave
movsb
in
cmp
ret
xchg
loopne
ljmp
cld
imul
stos
les
jge
sub
adc
mov
inc
lcall
out
pop
sbb
rol
fmuls
and
inc
pop
dec
imul
and
inc
ss
test
jg
sbb
xor
inc
leave
arpl
sub
mov
sbb
enter
repnz
push
lret
push
ja
cli
sub
mov
push
std
xchg
stos
sahf
ret
scas
sarl
repnz
loope
outsb
pop
push
rcrl
test
ret
jmp
aad
xchg
iret
movsl
hlt
sbb
mov
sub
and
inc
lock
daa
cmc
and
push
shll
out
mov
push
xchg
push
es
into
push
in
lock
popf
pop
add
fldt
mov
ret
cld
movntps
push
or
xor
mov
in
imul
ss
add
inc
fucomip
int3
sub
scas
mov
test
lods
adc
nop
shrb
fmull
pop
aad
and
cmp
inc
imul
jns
shlb
mov
or
xchg
int
enter
add
jecxz
ret
push
mov
enter
cmp
das
push
mov
test
sub
je
mov
add
mov
pusha
shlb
stc
dec
insb
pop
shll
xor
jl
out
sbb
mov
sbb
cmp
inc
adcl
jns
jmp
mov
push
mov
in
add
data16
jmp
jo
rcr
les
mov
mov
push
lods
inc
jecxz
inc
sbb
neg
pop
mov
mov
movb
aas
mov
mov
loope
pop
fmuls
clc
fldcw
notb
inc
int
mov
pop
out
cltd
je
stos
pop
sbb
cltd
andb
mov
insl
out
out
and
add
loopne
pop
adc
push
cld
aad
cli
scas
ljmp
int
sbb
sbb
adc
inc
jo
jg
push
sub
orb
sub
lret
dec
clc
enter
pop
add
nop
mov
imul
xchg
out
pop
inc
lret
xchg
out
sbb
out
lock
out
daa
xchg
mov
cli
mov
push
daa
ja
sbb
ljmp
fisubrs
xchg
xor
mov
dec
jb
shrl
push
insb
mov
je
pushf
js
dec
fwait
push
ja
test
jo
push
inc
insl
in
aad
or
test
sbb
jns
jg
xlat
mov
add
test
hlt
adc
aas
aam
jae
mov
scas
mov
fidivrl
test
jns
cwtl
insb
sub
sarl
js
jle
xchg
sar
mov
and
icebp
jno
in
push
cs
in
aad
jle
mov
lds
fwait
mov
dec
and
xlat
jp
mov
push
jg
mov
add
imul
jle
or
out
popa
jl
or
xchg
add
xor
pop
test
inc
mov
js
mov
push
pop
push
and
mov
in
movsb
jle
lock
ss
xchg
fcoms
mov
mov
popf
int
push
mov
jge
pushf
dec
outsb
jb
lret
dec
mov
inc
and
sti
mov
pop
test
xlat
push
cmp
sub
sbb
and
fistl
mov
dec
jecxz
cmp
jmp
push
shrl
xchg
push
and
mov
lret
xor
cli
mov
aas
dec
fcoml
xor
gs
test
les
mov
add
dec
inc
push
jp
push
popf
push
jae
ffreep
repz
xor
loopne
cs
nop
push
frstor
aam
sbb
popa
mov
pusha
idivl
mov
int3
insb
jmp
fsubr
xchg
dec
sti
push
dec
jns
adc
push
ret
cld
imul
or
js
pop
ficomps
xor
inc
or
jle
jecxz
enter
xchg
rcrl
inc
arpl
mov
cmp
xchg
stc
adc
inc
add
mov
leave
loope
out
in
push
into
sub
popf
push
xchg
aas
and
ss
clc
inc
jne
repnz
stc
out
lret
int
xchg
sub
push
push
out
lahf
ljmp
lods
pop
and
shlb
xchg
mov
inc
fcoml
jbe
jg
ret
lea
int
in
data16
lock
pop
mov
cmc
inc
fisubs
mov
inc
mov
dec
sbb
add
pop
inc
movsl
push
test
mov
xchg
repz
cmpsl
iret
fcmovnu
add
popf
sbb
mov
mov
lods
inc
add
nop
pop
inc
loop
dec
pop
int
sbb
mov
xchg
fldenv
std
push
cmpsb
adc
flds
in
jae
dec
clc
pop
sbb
shll
xchg
loope
fsubl
mov
decb
mov
pop
push
insl
pop
iret
aam
sub
dec
loopew
or
aas
mov
xor
add
xchg
gs
dec
ljmp
enter
arpl
loope
inc
lret
inc
xor
jl
xor
and
js
pop
jae
mov
xchg
mov
dec
in
xor
fcoms
test
jmp
pop
out
mov
and
lret
shll
add
test
mov
and
push
or
dec
add
or
sbb
out
xor
mov
insl
pop
mov
cli
cmp
or
popa
jge
out
sub
xlat
cmp
adc
cld
jmp
jge
loope
xchg
dec
pop
cmpb
jbe
sub
sub
cmp
pop
les
xor
aaa
sub
inc
mov
mov
inc
fiadds
rorb
push
outsb
add
test
aas
and
push
xchg
loopne
clc
cmpsb
push
mov
and
ror
add
and
cli
xor
lods
cmp
mov
jne
aaa
dec
clc
jbe
mov
adc
mov
call
and
fwait
data16
idiv
out
pop
and
movsb
mov
cli
adc
je
inc
scas
mov
dec
push
repnz
sub
rcrb
int
mov
popa
push
out
sub
xchg
rolb
push
in
and
inc
movsb
mov
lret
push
jo
insb
loopne
mov
adc
insb
pop
shrb
sbb
dec
iret
add
fsubrl
add
clc
ret
out
cmp
mov
dec
sbb
add
in
loopne
and
shlb
xor
mov
test
lods
and
into
mov
loope,pt
mov
bound
dec
out
and
dec
dec
push
push
popa
mov
fwait
push
inc
out
or
xchg
jb
xor
mov
arpl
shl
mov
jb
es
and
mov
pop
or
jae
pop
or
cmc
and
mov
aas
xchg
mov
or
out
ret
mov
mov
into
rorl
push
call
xchg
cmpsl
and
pop
dec
lock
bound
div
scas
addr16
ja
sub
ja
mov
movsl
lret
pop
mov
data16
adc
sub
jg
je
push
dec
jns
xchg
jnp
inc
popa
decl
aaa
dec
pop
mov
sub
dec
push
xchg
xorl
ds
in
and
and
inc
xchg
dec
cmpsl
mov
std
or
jmp
sub
xchg
xor
xor
sahf
imul
push
iret
sbb
imul
jmp
push
pop
xchg
add
xor
pop
cmpsl
push
xchg
xor
jo
shlb
dec
lds
xchg
jge
xchg
sbb
mov
stos
adc
ss
cmpsb
lahf
movsl
dec
adc
cmpsl
xchg
jl
in
stos
push
or
and
movsb
inc
push
pop
es
test
sbb
rolb
mov
xchg
xor
push
xchg
cmp
mov
imul
sbb
mov
jmp
xchg
cmpsb
lret
inc
jecxz
jae
or
and
xchg
and
out
lock
fidivrl
cli
cmp
push
xor
insl
and
into
in
sub
dec
jmp
cli
inc
in
dec
dec
cmp
mov
add
outsl
dec
mov
pop
push
adc
ret
cld
mov
rcrl
aam
jb
cmpl
cltd
sbbb
cmp
pusha
rorb
push
shrl
aam
push
test
dec
jmp
pop
inc
adc
or
insl
mov
pop
sub
ds
pop
and
or
outsl
jo
lock
js
out
push
out
ljmp
jmp
mov
add
cwtl
bnd
pop
call
inc
sub
jle
mov
jb
mov
push
dec
inc
inc
jmp
inc
imul
in
adc
xlat
pop
pop
orb
sub
fadd
cmp
xor
xchg
dec
ss
and
outsl
dec
inc
stos
cltd
add
adc
jno
ret
pop
add
jge
test
mov
and
lds
and
in
xor
inc
mov
cmp
dec
push
or
jns
add
ficomps
push
std
pop
dec
cmp
xchg
push
sarb
fxch
in
sbb
lahf
fistpl
das
fnstcw
int3
mov
jb
cmc
inc
sbb
int
add
sub
inc
add
fwait
push
gs
call
mov
add
and
mov
addb
leave
adc
and
jmp
fs
mov
sub
pop
adc
ss
xor
mov
inc
mov
sub
test
add
fucom
cmpsb
sub
cli
sub
xchg
dec
in
cli
cli
add
lds
adc
imul
jp
rorl
mov
pop
mov
pop
xchg
pop
ret
jg
out
lcall
xor
in
aam
out
inc
and
cltd
or
xor
mov
fnstcw
ljmp
pop
ljmp
inc
ret
mov
adc
fstps
pop
dec
mov
pop
push
mov
fiadds
push
mov
scas
jno
pop
stc
cs
lea
addr16
aas
push
mov
xchg
mov
movsl
es
inc
pop
inc
xchg
or
xor
add
sub
mov
dec
cmp
cmp
roll
pop
test
xchg
fimull
lea
cmp
call
and
pop
dec
push
ja
in
dec
mov
pushl
and
xacquire
fimull
xchg
jg
pop
lea
loope
lea
push
mov
push
fstl
cmp
fdivrs
cmp
mov
out
jae
push
int3
and
mov
insl
inc
dec
mov
xchg
or
xor
sarb
repz
lods
xchg
pop
pop
or
aam
xor
jmp
jg
fisttpl
fcomps
mov
and
pop
cwtl
stos
inc
mov
mov
jo
adc
or
pop
pusha
inc
shll
test
mov
rcrb
or
int
dec
ret
pop
inc
in
and
sbb
cmp
xor
jl
cmp
ficoml
jne
add
and
movsb
pop
movsl
xchg
mov
jbe
insl
aad
cs
das
fnsave
cmpsb
inc
stos
imul
int3
xchg
repz
fmulp
sbb
push
ret
sbb
loopne
mov
mov
rclw
pop
lret
sub
shlb
mov
fwait
inc
testb
sub
sbb
aaa
xor
jo
xchg
sti
test
lods
inc
mov
ss
dec
ljmp
jle
mov
add
out
fisubrl
popa
lds
inc
jp
ds
xor
scas
imul
push
std
inc
mov
add
sbb
adc
mov
add
xchg
test
lcall
xchg
mov
jmp
add
xor
mov
mov
cltd
imul
xor
inc
sbb
lock
sti
cmpsb
cwtl
push
cmpsb
movsl
xlat
fcoms
imul
adc
inc
push
sbb
sbb
fs
sub
fadd
inc
push
stos
iret
lahf
ret
mov
jns
push
pushf
int3
push
je
repnz
mov
jo
in
jnp
je
adc
lcall
and
fs
dec
pop
imul
lahf
cmp
dec
in
pushf
cmp
lcall
insl
jle
mov
xlat
jl
pop
jno
jns
ret
mov
and
adc
or
add
repz
mov
push
jecxz
in
mov
mov
mov
enter
inc
sub
xor
std
add
std
aad
call
es
cli
in
lods
into
arpl
add
mov
xor
rcll
sub
lret
jp
jbe
movsb
cli
in
imul
scas
pop
xchg
ss
pop
sbb
mov
stos
aad
jne
cmp
pop
test
rcl
push
mov
aad
dec
jae
mov
mov
add
dec
pop
xchg
push
into
nop
test
mov
mov
adc
ja
inc
push
jecxz
hlt
fdivrs
xchg
xchg
shrb
loop
scas
int
inc
mov
mov
aad
jl
pushf
or
fsts
sub
push
or
adc
sbb
insb
jns
inc
xor
adc
pop
dec
mov
sub
jno
jne
or
cmp
pop
pushf
mov
push
insl
or
rcrb
mov
or
jg
xchg
jle
ja
mov
dec
mov
jg
jl
mov
sti
vmovntps
jmp
sub
mov
adc
xor
xor
iret
outsl
scas
pop
lahf
loopne
int3
cmpsl
mov
loopne
std
gs
rcrb
andl
scas
loope
sar
pop
push
xchg
fisubrs
mov
mov
imul
out
mov
loop
mov
fcoml
mov
mulb
sarl
add
or
data16
out
in
pop
fstps
imul
fs
jbe
inc
jle
sahf
or
lret
push
or
pop
test
adc
test
sub
adc
mov
cmpsl
cmp
pop
movsl
outsb
or
pushf
out
fnstcw
cmp
and
scas
mov
add
clc
testl
push
ljmp
jnp
xor
adc
sahf
lods
scas
cmc
xchg
outsl
gs
cmp
jae
xor
lods
inc
js
xor
push
mov
dec
add
add
inc
pushl
out
xor
nop
push
mov
lods
ret
les
add
jbe
enter
lret
lock
cs
rcrb
sbb
arpl
pop
mov
hlt
sub
clc
inc
fcmovb
ret
dec
and
mov
fs
lods
fcmove
and
push
jge
sub
pop
ja
sub
fdivl
cmpsb
call
or
daa
dec
dec
cld
jle
add
and
fsubrs
jae
inc
arpl
call
cmp
sbb
cld
out
and
mov
pop
insb
xchg
ss
dec
fwait
xchg
lea
pop
jmp
insb
popf
mov
jg
inc
movsl
ret
inc
dec
push
out
xchg
jb
jno
pop
mov
cs
push
enter
push
stc
xchg
divb
mov
sahf
and
mov
mov
adc
sbb
adc
scas
inc
unpcklps
or
leave
adc
pushf
pop
cld
das
sub
movsl
jmp
nop
test
das
fsubrl
xor
cmp
fisubrs
cwtl
jl
push
imul
cmpsb
js
cli
dec
dec
jae
repnz
pop
dec
dec
push
jmp
and
sahf
jge
loopne
xchg
movsb
loopne
xchg
inc
icebp
add
iret
jnp
sub
shl
ja
movsl
jle
add
jmp
ljmp
dec
pop
sub
jo
das
dec
add
mov
sub
mov
std
fstl
hlt
pop
sbb
jne
lcall
cmp
aam
out
xchg
fstpl
lock
stc
pusha
cmp
push
and
in
add
mov
cmp
or
push
jo
and
pop
gs
test
cld
and
mov
repz
xchg
inc
pop
xor
and
and
icebp
les
sub
or
jmp
push
or
inc
aaa
lods
dec
and
stos
imul
inc
loope
inc
ret
xchg
and
xor
push
push
mov
test
xor
push
test
in
mov
imul
mov
push
cli
push
into
dec
mov
push
lahf
mov
mov
jmp
adc
pop
inc
push
jnp
stos
int3
or
push
clc
ja
jp
push
int3
mov
xor
lret
icebp
or
fucomi
and
ja
scas
fs
mov
cmpsl
mov
fwait
dec
inc
push
stos
or
cmp
jnp
adc
or
out
pop
movsb
aad
sbb
dec
mov
sti
mov
or
mov
in
mov
sbb
and
fsubrs
in
aam
dec
sub
sbb
push
cmp
jne
sub
popa
cmp
add
mull
into
mov
sahf
outsl
jno
lcall
push
bound
popf
jmp
je
lods
push
out
and
xchg
pop
hlt
cwtl
insb
mov
arpl
popa
filds
sbb
fstpl
pop
sar
dec
pushf
cmp
out
fldenv
add
je
icebp
aam
add
push
fdivs
pop
cli
insl
add
lods
sub
lock
mov
or
xchg
xchg
ret
insb
rcrb
jo
movl
and
in
mov
imul
ljmp
xchg
lds
push
insb
js
mov
lods
jecxz
shrl
pop
jo
test
push
xor
add
xor
popf
sarl
movsl
outsl
fisttps
add
es
mov
cmp
mov
int3
jle
lret
mov
mov
pcmpgtd
in
or
xchg
outsb
inc
xchg
cmp
push
loopne
hlt
xchg
push
lods
repnz
movsl
int3
xor
insb
mov
pop
js
cmpsl
pop
mov
sbb
jns
mov
lods
jecxz
cmp
dec
push
push
lods
nop
ss
call
fistpl
in
ljmp
xor
cmp
rcll
popf
paddsw
lret
pop
sub
xchg
out
mov
out
add
mov
loop
or
sbb
popa
cmpsl
stc
fucomi
inc
add
xor
mov
je
mov
icebp
inc
stos
jl
bound
push
orb
jno
lret
xchg
xchg
popa
hlt
mov
and
or
or
cmpsb
xchg
pop
jns
notb
cltd
cmp
and
movsb
sbb
push
xchg
outsl
ljmp
pop
add
jge
push
mov
jecxz
xchg
faddp
xchg
push
cmc
jbe
and
lds
ret
imul
test
enter
es
xchg
and
sbb
cmp
notl
lods
lea
jp
mov
mov
movsb
push
mov
add
and
inc
cmp
mov
xor
jb,pn
mulb
subl
push
and
pop
pop
jecxz
dec
in
daa
movsl
jo
jl
dec
mov
add
pmuludq
xchg
mov
mov
inc
pushf
cmp
pop
or
je
cmp
pushf
fstl
mov
xchg
inc
mull
adc
aam
stc
mov
jne
add
loop
icebp
mov
mov
dec
mov
adc
add
jp
int3
mov
stos
cmp
stos
push
shr
dec
cmp
inc
jno
or
lods
pop
mov
xchg
ficoml
int
push
movsl
out
lret
in
inc
test
jge
cwtl
add
push
xor
ljmp
scas
test
adc
jmp
addb
sti
das
scas
das
aaa
outsb
outsl
push
mov
xlat
shl
popf
mov
int3
add
jmp
in
push
xor
xor
pop
inc
dec
lcall
mov
pop
rcr
xor
mov
stos
push
imul
insb
adc
or
jg
dec
scas
cmc
or
test
mov
lock
pop
mov
pop
push
push
inc
mov
fnsave
push
das
push
xchg
push
ss
cmpsl
aas
scas
xor
pop
jne
ror
sbb
cltd
data16
xchg
or
and
and
in
aam
mov
dec
andb
mov
push
cmpsl
cld
ficoms
cmp
repnz
stos
test
aas
inc
xor
inc
add
out
shrl
jmp
inc
int
aad
dec
or
leave
xchg
sbbl
int3
jg,pn
in
add
sbb
inc
fnstenv
inc
add
lds
mov
lretw
sbb
push
pop
fwait
jno
or
mov
aad
les
movsl
cli
jb
fdivs
mov
cli
mov
in
or
nop
movsb
cmp
xchg
jmp
movsb
push
mov
xor
sub
lret
sub
xchg
das
sbbl
addl
jp
mov
imul
dec
pop
lods
lock
mov
rolb
and
xchg
cs
push
lods
ret
lret
pop
pop
xchg
fs
inc
xchg
adc
dec
dec
lret
mov
lcall
jp
or
cmc
push
dec
cltd
les
test
cmpsb
mov
push
outsl
pop
adcl
divb
stc
mov
mov
mov
xlat
mov
and
add
loopne
lcall
inc
je
ret
pusha
push
hlt
outsl
pop
mov
insl
mov
cmpsb
xchg
push
aaa
rep
fcoml
mov
xor
sbb
or
scas
xchg
adc
or
test
xchg
out
xor
xchg
xorb
pop
sub
cld
cwtl
pushf
cmp
shll
pop
fistpl
or
dec
mov
cltd
in
call
lods
icebp
add
data16
insl
inc
dec
dec
jb
mov
movsb
jmp
jl
gs
mov
repnz
clc
repz
sub
push
xchg
cmc
dec
sbb
xchg
subb
hlt
or
dec
cwtl
int3
imul
pushf
lahf
cld
inc
test
sub
xchg
call
rcl
jbe
jg
mov
inc
add
push
popf
int
icebp
loopne
mov
cmp
sahf
add
mov
add
in
ss
stos
xor
aas
es
xor
mov
push
mov
arpl
or
fists
sbb
stos
enter
push
addl
xor
fs
pop
inc
or
daa
mov
sahf
scas
inc
cld
lahf
ret
adc
fisttpl
sub
data16
lds
scas
fimull
aaa
and
mov
icebp
sarl
pop
or
mov
aaa
cltd
push
aad
outsb
je
enter
mov
scas
cmpsl
adc
xchg
lret
je
outsl
jmp
js
push
test
dec
jp
cmp
stos
in
jge
imul
mov
cmp
cmpsb
cmp
pop
idivb
xchg
leave
sbb
add
adc
adc
testb
push
out
in
sarb
ja
cmp
pop
imul
jne
lea
into
jnp
rcr
pop
iret
sti
shll
mov
or
inc
and
out
dec
ds
iret
stos
jge
add
push
push
inc
push
inc
cmovno
shrb
pop
enter
and
in
iret
call
mull
cmp
push
inc
sti
test
cld
xchg
pop
mov
aam
pushf
add
xchg
jge
xorb
push
sar
rcrl
xchg
jg
push
or
jo
icebp
adc
into
pop
lret
add
movsb
push
cmp
lods
in
outsl
mov
or
cld
ds
int3
cld
sub
dec
push
xor
xor
pop
fists
std
or
pushf
imul
xchg
cwtl
jmp
aam
mov
fucomp
cmp
and
xchg
out
inc
sbb
stos
insb
and
pop
lods
sbb
mov
in
add
enter
mov
jno
and
mov
arpl
aaa
inc
andl
mov
outsl
shrb
cld
or
mov
sbb
dec
xor
sub
test
nop
xor
cmpb
xchg
test
out
pop
fisttpl
jns
mov
jmp
insb
pop
mov
push
out
xor
push
xor
push
ret
gs
out
pop
shll
jb
mov
cs
push
es
pusha
jp
ficomps
or
iret
dec
xlat
loopne
mov
mov
dec
in
int
shl
cmp
pop
cmp
outsl
mov
and
jge
int3
jae
imul
jnp
pop
jns
lods
out
cli
xchg
add
ret
out
mov
mov
dec
add
lock
jmp
test
xor
in
jp
push
dec
jnp
jg
adc
out
jb
xor
jecxz
dec
lds
decb
jmp
add
fwait
popf
lods
movsl
ja
out
out
pushw
mov
lcall
xchg
fldcw
push
inc
or
test
sbb
xchg
inc
jns
rolb
nop
pop
mov
and
mov
add
rorl
leave
jmp
lea
jle
xchg
sbb
cs
arpl
arpl
std
int
xchg
push
mov
mov
inc
pop
std
push
sub
sti
pop
std
stos
mov
cli
dec
pop
and
ja
pop
cwtl
popa
iret
sbb
lret
addr16
xchg
daa
xor
cwtl
pushl
or
jmp
loop
and
pushf
loop
pop
neg
pop
shrl
ror
jnp
push
outsl
addr16
mov
jg
sbb
lret
imul
push
mov
cmp
inc
imul
sub
sarl
icebp
rorb
xchg
outsb
jp
xor
cmp
cwtl
fists
sbbl
dec
pushf
xchg
dec
pop
push
or
dec
fcomps
cmp
or
loop
lret
dec
popa
cmp
sbb
and
fsubr
push
dec
sub
sub
mov
mov
aas
bound
inc
add
xorl
jno
mov
test
inc
cmp
fdivl
pushf
out
fbld
inc
cmp
scas
sarl
fisttpll
adc
xchg
inc
in
push
mov
mov
mov
ret
cmpsl
test
jo
stos
cmp
mov
jno
out
das
ret
cmp
inc
sub
stc
add
roll
or
std
add
mov
xchg
test
lcall
jle
inc
rcrb
out
add
iret
pop
adc
ja
out
cmpsl
cld
pop
fstpt
outsb
xchg
inc
mov
mov
or
pop
lods
outsb
cli
sbb
enter
fdivl
mov
dec
mov
jbe
in
lods
mov
push
mov
adc
sahf
aad
negb
movsl
xchg
sub
stos
fdivs
push
bound
or
ss
xchg
loopne
dec
fwait
push
fiadds
jne
icebp
call
bound
movsl
pop
aas
adc
insl
lcall
or
xchg
rcl
imul
cmp
packuswb
sbb
data16
testl
mov
mov
sahf
clc
sub
mov
andb
adc
pop
movsb
sub
je
and
movzbl
lea
sbb
and
sbb
pop
loopne
or
inc
cli
xor
adc
fildll
int
mov
in
std
das
jge
mov
mov
loopne
dec
adc
cmp
xchg
cmp
xchg
repnz
mov
sbb
sbb
lea
adc
cmp
dec
cmp
sbb
in
imul
lret
divb
and
jecxz
aas
mov
xchg
loop
in
add
mov
pop
cmp
cld
pop
push
clc
cmp
sub
add
repz
test
push
pop
and
mov
push
outsb
mov
das
push
or
mov
in
sbb
add
repnz
xor
loope
add
inc
rcl
jno
xor
cwtl
add
dec
inc
or
mov
divl
inc
ljmp
aas
imul
adc
pop
imul
jp
pop
xor
and
lock
imul
jmp
dec
pushf
sub
or
add
adc
es
lds
push
imul
jo
xchg
int
push
jo
pop
adc
xchg
push
dec
lods
addr16
jge
cmp
push
addb
push
push
sahf
mov
in
push
or
shll
sub
push
and
mov
or
xchg
fstl
pop
inc
jns
shrl
sbb
and
mov
gs
movsl
sahf
pop
mov
dec
xchg
pop
int
test
cmpsb
and
add
scas
mov
sub
xchg
dec
das
jns
mov
stos
adc
mov
sub
mov
add
insb
mov
insb
inc
daa
mov
push
add
push
scas
inc
mov
dec
mov
xor
and
outsb
test
mov
out
add
xchg
mov
jg
movsl
add
loope
test
pop
sub
lods
push
les
push
mov
xchg
or
fidivs
mov
cmc
mov
nop
push
bound
xchg
dec
ret
cwtl
mov
orl
fimull
sbb
xchg
adc
fdivrl
mov
clc
shlb
rorl
jl
jg
jge
mov
sbb
lds
outsl
das
sub
mov
int3
pusha
dec
out
ljmp
cmc
int
dec
imul
mov
lods
and
into
punpcklwd
into
ljmp
pop
hlt
mov
cmp
pop
fidivl
jae
jbe,pt
pop
and
js
xlat
das
add
shll
pusha
xchg
outsl
push
add
das
imul
mov
aas
mov
lret
leave
test
out
ficoms
push
lods
hlt
mov
or
loop
jns
sbb
mov
and
mov
rcr
aad
lock
sub
jnp
idivl
faddl
lret
cmp
cmpsb
mov
or
push
cltd
cltd
add
movsl
xor
dec
repnz
subl
push
ds
lea
int
pop
jne
xchg
cmp
sub
jmp
dec
dec
inc
rcll
adc
sbb
fwait
inc
in
inc
dec
add
stos
adc
add
data16
fisubrs
adc
push
sbb
sbbl
ds
lods
popf
test
mov
stc
xchg
pop
pop
outsb
sub
lcall
add
pop
jo
ret
sbbb
daa
add
mov
fcomip
fs
ffreep
and
or
xor
add
jmp
lret
cmp
shlb
in
out
outsl
cmpb
cmc
stos
pop
sbb
lds
out
int
dec
jge
lock
pop
stos
jmp
rorb
js
test
lret
mov
add
or
jmp
cmp
inc
inc
mov
xchg
inc
jb
inc
movsb
or
int
jnp
test
ds
ret
dec
cmp
and
inc
pop
mov
ffree
cmp
inc
cmp
out
xor
push
sub
int
push
lahf
fists
pop
int
and
sbb
in
sub
jno
mov
xlat
pop
lahf
movsl
mov
aas
ds
adc
sub
xor
arpl
xchg
shrl
data16
or
adc
or
dec
mov
jmp
sbb
repz
rclb
or
pushf
scas
xchg
inc
jge
popa
or
fcompl
adc
cmp
dec
mov
and
loopne
ret
inc
jae
push
push
fwait
ja
cltd
cmp
out
inc
jmp
dec
orb
int
in
inc
add
movsl
mov
mov
loop
sub
sub
insl
mov
adc
push
js,pn
cmp
push
sbb
pushf
xor
inc
dec
fnsave
jb
push
in
mov
mov
jae
dec
push
sub
dec
movsb
push
cld
mov
mov
pop
xchg
mov
cmpb
inc
jge
inc
mov
rcrl
sbb
jb
sbb
cli
jnp
sbb
stc
fldz
add
fstpt
lds
std
dec
insb
xchg
les
lock
in
xor
xorb
jns
xor
xor
mov
outsl
loop
mov
xchg
adc
cld
pop
hlt
mov
adc
push
push
or
push
sub
movsl
mov
adc
push
clc
outsl
int
inc
inc
js
jle
lock
or
arpl
push
in
leave
lcall
push
inc
std
cmp
in
stos
push
push
scas
orl
mov
in
and
aad
and
fwait
push
pop
mov
jmp
sub
xor
aaa
popa
scas
sbb
mov
mov
xlat
popa
add
outsb
cmpsb
movsl
das
mov
repnz
add
jb
mov
xor
pop
inc
push
cmp
inc
and
sub
mov
subb
mov
xor
arpl
into
es
xor
out
aaa
lret
jge
push
dec
pop
mov
data16
push
mov
mov
lock
test
inc
dec
push
push
fadd
cmp
mov
pop
xor
push
lcall
test
rolb
and
fsubs
and
icebp
sub
xchg
and
add
sbb
fcmovbe
mov
cmp
sti
test
shl
dec
lret
sbb
sub
or
inc
cli
cmp
jno
adc
scas
aad
add
mov
loopne
in
xchg
dec
jb
and
mov
inc
mov
stos
subl
std
add
jnp
out
and
stos
cmp
out
es
mov
stos
inc
jbe
sub
xchg
js
daa
cli
cmp
jg
or
xor
adc
insl
jg
sbb
imul
ljmp
cmp
sarb
int
inc
mov
inc
mov
push
repz
adc
fcompl
adc
mov
popw
and
out
inc
xchg
divl
pop
data16
aad
shrb
out
jae
xchg
push
sbb
sub
mov
cmp
lea
imul
dec
cmp
pop
mov
ret
rorb
repnz
pop
jns
mov
hlt
in
sarb
test
popa
cltd
out
or
in
repz
jg
pop
pminsw
xor
test
lcall
ficompl
fistl
ljmp
jecxz
ret
mov
mov
xlat
mov
push
fcmovnbe
dec
pushf
pushf
xchg
sub
adc
outsb
stos
cmpsb
mov
in
insl
dec
stos
mov
pop
or
jge
sbb
mov
mov
push
xlat
add
lret
mov
test
or
aas
cmp
mov
push
xor
xor
xchg
sub
push
xor
inc
inc
insl
into
cmp
and
ret
mov
push
enter
or
incl
and
cmp
lds
in
enter
adc
push
mov
mov
sbb
sub
sti
mov
sub
add
ret
mov
sbb
movsb
add
icebp
adcl
sbb
outsl
addr16
mov
mov
test
mov
and
and
pop
pushf
inc
push
andb
es
into
dec
mov
pop
call
jnp
sub
inc
mov
push
call
xchg
dec
jbe
mov
cmpsb
int
and
popf
jns
out
scas
add
sahf
add
xor
xor
fsubrl
inc
shrb
int3
and
cmpl
pop
das
cmp
repnz
mov
iret
rclb
xor
pop
and
xor
out
and
fldenv
in
sbb
cld
xor
mov
dec
rcll
cltd
jae
pusha
out
sub
repnz
into
pop
mov
daa
pop
cld
xor
testl
push
pop
mov
xchg
insb
xchg
ljmp
and
ret
fadds
lea
movsb
lock
sbb
arpl
mov
or
mov
push
pop
inc
and
popa
dec
aam
loop
into
adc
outsb
mov
mov
out
js
ss
cld
imul
loopne
push
mov
push
cmpsl
nop
add
loopne
dec
sbb
in
fcoms
and
outsb
sti
dec
insb
and
sub
or
loope
add
cmpsl
sub
pop
les
hlt
iret
negb
inc
arpl
xlat
es
outsl
mov
fs
inc
inc
ja
sbb
mov
outsb
pop
add
mov
add
ja
lds
fidivrs
push
fistps
xor
mov
mov
mov
xor
sbb
cmpsb
inc
sub
mov
cmpsb
push
push
and
dec
pop
shll
sbb
sub
lods
jns
lret
push
aas
inc
scas
pop
divb
lahf
adc
dec
sub
rcrl
sub
sti
and
lods
addr16
add
out
pop
shll
test
dec
ljmp
loopne
jecxz
out
push
push
pop
and
ror
jg
dec
inc
xchg
xchg
lods
in
fwait
sbb
repnz
popf
arpl
das
jae
adc
and
or
das
jae
lea
lods
mov
ljmp
sub
int3
inc
mov
mov
jge
lea
sub
mov
imul
cmp
dec
jae
adc
leave
cli
ficompl
xor
sarl
jb
adc
jecxz
out
fcmovbe
adc
repnz
sub
mov
pop
imul
mov
sub
sub
fldenv
mov
xor
mov
aam
jg
test
sub
sbb
xor
sbb
aad
cld
aam
enter
fs
lods
sti
loope
cmp
adc
sti
jae
loop
shll
daa
dec
adc
add
add
cmp
push
or
jo
mov
xchg
adc
call
jae
outsl
mov
pop
ficoms
loop
movsb
adc
cmpsb
pop
inc
sar
adcl
sbb
mov
hlt
outsl
adc
cmp
rol
imul
adc
and
test
push
outsb
aas
adc
xor
mov
dec
insl
lret
mov
fmuls
fsub
mov
or
xlat
pop
lret
lret
adc
jns
and
sbb
lret
mov
dec
leave
sub
pop
shl
push
adcb
xchg
out
cld
mov
jne
fidivrs
lahf
dec
dec
clc
push
dec
cmp
xchg
sbb
inc
js
and
xor
shrl
nop
mov
cmpsb
cmp
out
daa
cmp
sub
inc
mov
jbe
stos
leave
in
push
jns
mov
jge
iret
jnp
inc
mov
sub
arpl
inc
add
cmp
outsb
filds
jle
out
push
add
mov
inc
mov
out
imul
sbb
inc
push
shrb
out
jg
adc
das
stos
loope
repnz
in
jnp
nop
add
cmp
or
cld
jae
aam
push
testl
stc
and
mov
or
nop
shr
jb
mov
icebp
je
push
pop
call
and
push
rclb
je
dec
jmp
cli
popf
pop
imul
cmpsl
insl
hlt
xchg
loopne
scas
mov
add
jbe
subb
sbb
or
xchg
cs
adc
mov
mov
dec
fldenv
jle
rorb
fs
mov
mov
sub
jp
cmp
outsl
shll
hlt
cs
pop
cmc
or
pop
movsb
xor
aad
rcrb
push
jbe
or
inc
push
and
rcrl
sub
repz
xchg
ljmp
mov
fstl
dec
leave
cmc
aam
scas
cmc
sbb
data16
mov
pop
adc
or
sbb
cmc
js
jno
das
sub
stos
add
xor
or
fstpl
stos
sbb
and
fnop
dec
leave
dec
sarl
rcrb
push
mov
adc
pop
inc
sub
jl
mov
xor
adc
sub
mov
inc
pop
nop
js
push
lock
pushf
mov
call
insl
mov
or
push
mov
mov
mov
loop
push
or
fimuls
dec
int3
pop
push
dec
fwait
mov
adc
inc
stc
sbb
inc
pop
sbb
sub
pushf
sarl
pusha
xor
sub
sub
stc
adc
addb
mov
mov
mov
ljmp
push
in
adc
call
dec
repnz
test
scas
push
insl
adc
and
movsl
push
push
cmp
or
cmp
mov
ja
insb
cmpsl
inc
inc
ds
lods
mov
and
or
lds
jo,pn
imul
xchg
inc
cmc
aaa
push
add
adc
lret
rcll
xchg
std
sti
test
jg
or
add
cmp
sarl
loopne
and
mov
test
adc
sub
pop
xchg
push
les
popl
int
and
ds
pop
or
push
jp
loope
nop
and
xor
inc
fsubl
bnd
sbb
jns
ss
imul
sub
pop
adc
lcall
push
aaa
xchg
out
mov
stos
xchg
ljmp
pop
mov
rcrb
in
mov
rol
inc
call
adc
cs
movb
lods
enter
ljmpw
loopne
add
aam
and
lea
adc
test
cld
bnd
outsb
int3
es
lret
pop
push
outsl
jne
xor
arpl
xchg
pop
popa
push
and
add
out
mov
jne
pushf
cld
adc
mov
and
flds
outsb
lret
dec
int3
js
jle
imul
adcl
out
xchg
pusha
mov
lret
xor
inc
push
mov
fwait
mov
gs
clc
xor
or
lds
push
cwtl
jecxz,pt
xor
clc
sti
mov
push
xor
sbb
inc
push
pop
rcr
testb
pop
int
aad
xchg
pop
int
mov
mov
cmp
cld
cli
stos
mov
in
in
ds
icebp
xchg
push
inc
in
rorl
mov
sub
sub
and
rcl
pop
pop
call
mov
dec
mov
aam
imul
xlat
xchg
clc
cmpsl
xchg
repnz
xchg
sub
jne
cli
loope
aas
or
and
and
push
sbb
cmpsl
int
xor
add
add
ret
xchg
ret
outsl
or
imul
movsb
mov
push
ret
add
sub
ljmp
sbb
sbb
mov
test
lods
out
xlat
hlt
and
hlt
mov
fs
xor
jnp
repnz
cmc
in
jl
cld
ret
int
xchg
push
cltd
in
cwtl
scas
and
push
adc
or
inc
insb
outsb
sub
add
loope
ja
jnp
ljmp
jno
into
sarb
inc
addb
icebp
inc
or
dec
mov
add
fnstcw
std
into
mov
add
add
fnstenv
pusha
dec
ss
into
inc
insb
dec
push
sbb
sti
and
pop
bound
popf
insl
stos
loope
outsb
jge
mov
add
out
jns
push
rol
gs
add
lret
negl
mov
sub
lea
lock
inc
and
inc
negl
adc
pop
cs
mov
int3
cmp
int3
sarl
lcall
mov
loope
xchg
shrl
add
sub
mov
inc
shll
pop
cmpsb
cmc
mov
push
jnp
xchg
sub
push
imul
adc
test
add
lcall
pop
add
dec
sbb
add
adc
and
push
xchg
cmpb
inc
jmp
fstpt
push
or
mov
mov
push
xor
pushf
jp
imul
aam
es
aam
jge
sub
dec
xchg
fld
fildll
into
loop
loop
xlat
adc
aad
insb
push
pop
add
popf
rclb
popl
xor
into
iret
xchg
stos
sbb
hlt
cmp
mov
cmp
xor
dec
les
daa
mov
push
inc
sbb
xchg
dec
or
cwtl
mov
and
push
dec
cs
xchg
push
and
bnd
fdivrl
cmp
mov
sub
xchg
loop
sbb
xor
jbe
xchg
int
out
mov
pusha
adc
xchg
das
fsubrs
sbb
push
fcmovu
ja
jmp
or
adc
xor
cmp
and
pop
movsb
lods
sub
test
mov
leave
and
mov
sbb
adc
stos
ljmp
dec
enter
loop
sbb
mov
push
enter
xchg
jle
and
mov
push
movsl
dec
sbb
push
gs
and
add
adc
push
fistpl
jae
xchg
sbb
xor
scas
pop
or
stos
sarb
pop
outsb
rcll
or
in
xor
lret
icebp
dec
popa
mov
push
xchg
loop
das
push
sti
leave
pop
loopne
xor
mov
dec
pop
aaa
sub
mov
fcompl
add
mov
outsl
xchg
pop
jge
mov
add
inc
jg
push
fbstp
divl
imulb
push
cmp
ret
sti
mov
sbb
mov
sti
ja
xchg
imul
mov
mov
xchg
fcoms
or
inc
sbb
out
gs
xchg
xchg
in
aam
mov
loop
xor
leave
mov
add
xchg
xchg
sbb
jmp
lea
xchg
cmpsl
lods
and
adc
outsl
add
mov
outsb
jo
shlb
jge
scas
adc
add
fdivrs
in
iret
les
setae
pop
dec
or
icebp
dec
in
fstpt
inc
cltd
sub
push
sbb
addb
jge
pop
das
jecxz
out
pop
and
dec
in
ret
jl
cmp
push
jb
mov
xchg
mov
xchg
xchg
data16
mov
insb
jl
mov
cld
and
inc
loopne
aaa
jo
addr16
je
pop
enter
rcr
xchg
cltd
test
mov
dec
adc
testb
xchg
nop
ss
fwait
rcr
mov
imul
cmpsl
inc
adc
mov
and
rcr
inc
jns
gs
imul
pop
inc
xchg
push
lcall
jecxz
dec
and
pop
mov
inc
lods
pop
cwtl
aas
push
push
insl
xlat
lea
int3
inc
mov
and
faddl
shll
and
adc
xchg
sar
stos
mov
call
mov
hlt
push
das
sub
jmp
xchg
in
mov
sub
and
cld
loopne
ljmp
or
inc
loope
add
jb
imulb
cmp
hlt
out
mov
in
js
in
add
mov
xchg
push
mov
arpl
or
sbb
add
pop
rcll
loopne
xor
pop
or
mov
jns
xor
mov
mov
ret
push
push
and
jb
adc
repnz
fldl
pop
das
enter
sbb
outsl
cmp
xchg
dec
roll
loop
xor
shl
ja
rorb
cmp
js
das
sbb
inc
jmp
outsb
push
push
js
pop
adc
clc
xchg
push
scas
dec
pop
testb
cli
push
cs
stc
loop
or
sbb
std
mov
ds
mov
pop
sub
jo
push
test
sbb
inc
test
ret
nop
dec
cs
es
adc
gs
push
jge
in
loopne
or
rclb
popa
mov
push
shll
dec
lret
cmp
or
inc
movsb
fisttpll
inc
imulb
or
bound
mov
lcall
std
mov
mov
addr16
aas
shl
push
js
xchg
or
shlb
popa
test
inc
lods
call
or
mov
dec
push
sbb
mov
xchg
je
lcall
xchg
sarl
repnz
aam
inc
jp
push
xor
subb
popa
inc
mov
test
js
in
es
sbb
sbb
dec
into
xchg
xchg
adc
jnp
jb
inc
inc
jno
scas
sbb
dec
lods
sub
loop
cmp
fwait
sbb
dec
daa
jbe
aaa
and
ss
imull
push
loop
rcll
dec
lret
mov
jno
ret
adc
xor
inc
jecxz
fidivrl
mov
ficomps
out
mull
ja
addr16
loope
jg
bound
cmp
stos
popf
and
cmp
xor
cwtl
lahf
lods
shll
arpl
addr16
jno
push
rcrl
lods
add
pop
xor
mov
iret
cmpsb
repnz
loope
cmpsl
out
aaa
ret
mov
es
or
xchg
pop
dec
outsb
divb
ret
cmp
xor
lret
iret
push
scas
test
int
shll
hlt
jecxz
pop
idiv
and
pop
daa
sub
popa
fs
inc
pop
sub
sub
orb
in
jns
je
jmp
inc
cmp
mov
dec
sub
movsl
adc
pop
mov
or
cmc
andl
pushf
dec
icebp
out
jbe
cwtl
or
and
stos
mov
movsl
insb
and
push
stc
mov
jno
ret
push
pop
mov
xor
xchg
repnz
dec
in
call
pop
jle
and
jmp
and
cmp
push
adc
and
push
push
add
mov
out
adc
ljmp
cwtl
in
cwtl
mov
jno
xchg
test
mov
cmp
inc
cli
mov
mov
jb
push
add
out
adc
sub
and
xlat
cmpsl
cmp
mov
frstor
push
sub
mov
jno
cmpsl
jle
dec
add
jl
cmp
mov
jno
sbb
rcrb
scas
das
pop
add
sbb
cmp
pusha
push
rcl
mov
fdivrs
sbb
pop
or
jmp
imul
add
mov
add
ja
inc
sub
push
stos
scas
fists
push
clc
aad
add
mov
push
lret
cmpsl
xchg
sti
insb
push
xchg
add
xchg
inc
push
mov
pcmpgtw
dec
xor
push
jne
mov
hlt
int
jo
ja
sbb
adc
out
dec
shr
dec
ret
sbb
or
jg
pop
ds
xor
mov
xchg
ds
test
stos
ds
in
inc
dec
loop
lret
sahf
mov
cmp
adc
nop
nop
adc
fdivrs
cmpsl
adc
sub
pop
enter
int3
hlt
mov
add
fiadds
dec
dec
push
inc
dec
sub
outsb
fwait
pop
hlt
clc
mov
adc
push
and
sub
ss
adc
jno
xor
mov
mov
sahf
fisubrl
pusha
and
sub
sbb
dec
leave
mov
add
push
xor
lcall
dec
lods
xchg
pop
inc
rorb
xchg
xchg
fldenv
pop
daa
test
push
push
pxor
dec
dec
jl
out
jo
jmp
mov
call
mov
add
xor
repz
mov
je
and
out
outsl
dec
xlat
push
mov
adc
xchg
insl
dec
jno
jle
rclb
out
jp
rcll
les
stos
fiadds
imulb
cli
or
cmp
dec
xchg
setbe
mov
cs
lea
xchg
in
test
aad
push
add
sub
mov
push
xchg
ljmp
inc
data16
aas
jo
out
loopne
push
bound
cmc
cli
popf
lds
sbb
push
in
int
xor
pop
cmp
and
nop
bound
inc
rclb
enter
leave
xchg
push
scas
cwtl
iret
aad
and
cs
cwtl
test
aas
and
sub
fsubrs
cwtl
pop
pop
daa
arpl
cmp
mov
testb
xlat
xchg
jecxz
sarl
mov
loopne
out
fwait
rcr
and
imul
jnp
jb
cmpsb
addr16
xor
adc
add
sbb
aaa
xor
stos
and
xlat
or
rorb
jg
dec
ret
sbb
je
adc
lret
cmp
lret
xor
cmc
and
pop
enter
popa
fsubrl
fildl
shl
aas
sbb
je
or
mov
lahf
or
inc
or
xchg
and
or
xchg
sub
aad
ret
adc
xor
mov
jge
inc
push
lock
inc
ja
inc
sbb
nop
lahf
popf
fnstenv
add
pop
push
mul
fcmovnb
ds
ss
dec
lcall
add
add
rcll
cmp
and
dec
pop
mov
rorl
add
loop
ret
sbb
sub
adc
pop
and
jl
in
dec
rorl
out
mov
inc
sub
bound
stos
add
insb
shll
mov
mov
xchg
pop
lea
mov
repnz
xchg
and
psubb
inc
lcall
fcomip
mov
xchg
add
mov
shlb
dec
mov
xchg
jmp
xor
lock
aaa
test
pop
jno
dec
jg
sbb
push
cmp
inc
sbb
lods
adc
and
int3
sbb
inc
mov
or
clc
fmul
andl
je
dec
add
popf
push
jae
mov
ret
call
mov
test
cltd
or
outsl
pusha
mov
int3
in
pop
dec
mov
orb
cld
out
out
ficomps
mov
imul
and
insb
jae
jns
repnz
push
mov
cmpb
xchg
icebp
mov
insl
into
push
inc
or
ja
lret
inc
lret
cmp
mov
aam
mov
cltd
ret
mov
sub
add
sub
mov
jle
push
or
ja
pop
out
cmp
in
push
dec
fs
outsl
out
rorb
repnz
fldenv
cli
mov
inc
push
fdivs
outsl
mov
mov
push
mov
sahf
add
cmc
add
push
jl
loop
mov
adc
sbb
dec
outsl
cli
sbb
mov
ljmp
mov
adc
mov
mov
lods
mov
fisttpll
insb
std
mov
cmp
cs
mov
adc
adc
or
mov
shlb
push
sbb
sbb
push
or
es
push
pop
das
cli
jns
test
jle
push
xor
pop
push
fisubs
rolb
mov
adc
stc
mov
loopne
repnz
dec
jmp
test
mov
insb
cld
mov
or
pushf
insb
hlt
jae
lods
xchg
cmp
inc
jecxz
dec
rclb
icebp
test
xorb
push
shll
outsb
xor
pop
mov
sar
enter
insb
inc
dec
xor
stos
push
add
cli
sub
mov
in
mov
cmc
adc
mov
mov
and
aad
xchg
adc
inc
mov
push
rcl
in
push
icebp
or
out
testb
jnp
arpl
fs
int
sbb
push
and
pop
mov
or
xchg
push
and
movsl
inc
pop
pop
imul
push
mov
mov
jbe
cltd
push
loopne
aad
call
insl
jmp
sbb
lods
pop
call
cmp
sbb
aaa
fwait
das
cwtl
lcall
inc
adc
mov
imul
in
pop
lock
outsb
stc
cmp
mov
xchg
xchg
lea
jle
adc
jne
push
movsl
dec
or
jl
adc
cmp
sub
xchg
pop
pop
dec
js
in
xchg
sbb
or
cmpsb
jne
aaa
push
mov
pop
aad
pop
pop
and
mov
inc
jne
mov
loopne
fs
int3
sbb
xchg
or
iret
push
arpl
inc
jne
mov
jmp
dec
cmpl
inc
bound
test
testl
dec
add
jo
push
fstp
sbb
push
dec
cwtd
out
xchg
push
add
jbe
sub
adc
mov
mov
ljmp
xor
je
inc
imul
loope
scas
nop
into
ljmp
jb
and
mov
lods
lods
cmp
decl
sub
inc
test
lahf
dec
sbb
orl
jns
pop
es
std
adc
jg
mov
mov
scas
sbb
ljmp
pusha
iret
adc
mulb
xlat
cmp
cmp
mov
sub
pop
rclb
mov
add
pop
push
cwtl
mov
xchg
cmp
jecxz
lea
pop
dec
inc
and
hlt
icebp
cltd
mov
inc
xchg
insl
jmp
je
cmp
jge
dec
mov
and
cld
aaa
push
mov
xlat
pop
int
ficoms
je
sub
fdivl
sbb
add
add
fstps
jp
enter
pop
fistpl
jne
mov
stos
ja
lods
push
shlb
xchg
stos
std
push
scas
cltd
inc
aad
push
sbb
test
mov
out
cmpsl
and
pop
mov
insl
jmp
dec
mov
cmp
mov
mov
sbb
imul
mov
mov
mov
xchg
scas
xchg
sbb
adc
mov
outsl
inc
jecxz
fcompl
pop
stos
cmpl
mov
shll
dec
push
inc
sub
push
stos
mov
push
inc
pop
sbb
rcrl
fs
pop
xor
loopne
imul
insl
mov
js
ret
stc
pop
inc
and
adc
lods
aaa
push
mov
test
dec
rorb
or
xchg
pop
enter
stos
rcrl
xchg
pushf
jecxz
stos
ret
pop
add
jo
insl
dec
test
push
dec
cmp
cwtl
test
fisttpl
inc
xchg
and
lret
sbb
jle
dec
mov
lods
dec
mov
pop
push
movsl
push
mov
fcompl
xchg
jne
mov
ret
sti
stc
sub
mov
movsl
cmpsl
inc
mov
lret
sbb
in
out
cmp
mov
adc
in
jmp
jp
ret
mov
mov
idivb
jle
stc
lds
ss
mov
mov
dec
jae
adc
mov
outsb
sbb
iret
pop
jbe
adcb
mov
sub
popl
and
and
cmp
cmpsl
dec
ret
and
inc
into
xor
cltd
stc
mov
mov
jb
push
lds
dec
ret
inc
bound
test
pop
jp
popa
adc
mov
and
aaa
loopne
mov
push
sub
rcrl
jl
or
imul
aad
fcomp
mov
and
orl
inc
shl
dec
pop
loopne
je
aam
mov
loop
imul
popa
xlat
mov
dec
mov
loopne
pop
fisttpll
cmc
mov
mov
sbb
andb
and
outsl
test
ds
dec
mov
mov
push
mov
push
outsb
aaa
or
push
jl
xchg
inc
cmp
xchg
lods
lods
jge
mov
add
jo
repz
dec
out
xor
lods
jge
inc
or
movzbl
mov
lcall
adc
xchg
scas
in
jns
ficoml
lahf
stc
cs
icebp
stc
rclb
push
and
popa
pop
ljmp
add
push
aam
cmp
std
adc
pop
jle
lea
shl
and
data16
pop
xchg
xchg
xor
out
xchg
and
adc
imull
stos
xchg
dec
sti
sbb
push
pop
adc
mov
mov
inc
cmp
out
jnp
lret
mull
into
cmp
iret
pop
shrb
jmp
adc
jl
mov
push
je
lods
adc
ljmp
jbe
nop
in
std
jmp
cltd
mov
mov
jmp
rcrl
pop
pop
cmpsl
pop
les
adc
movsl
pop
call
push
test
leave
mov
stos
xchg
xor
push
jnp
or
pop
jne
jge
push
push
jno
fs
sub
rcrb
cmpsb
xor
repz
divb
insl
pause
and
rorl
scas
data16
cmpsb
stos
pushf
sbb
test
stos
movsl
sub
mov
imul
add
xchg
mov
lock
sub
in
xchg
mov
cmp
adc
popa
nop
fs
or
loopne
pop
data16
sbb
lahf
mov
adc
js
in
dec
jg
push
out
fwait
cld
inc
adc
test
sub
or
inc
loope
mov
popf
ja
lods
nop
mov
inc
les
xor
mov
imul
mov
bound
sub
lods
fistl
add
mov
jbe
maskmovq
notl
xor
ret
test
fiadds
pop
jle
push
mov
ret
popa
push
sbb
push
push
fwait
repz
xchg
inc
popf
pop
add
repz
and
xchg
jg
lds
pop
pop
mov
jne
movsb
dec
les
xchg
inc
xchg
out
or
lods
lcall
ja
xor
xchg
shlw
or
jl
repnz
js
pop
fcoms
or
lods
mov
and
notl
add
and
sbb
and
adc
pushl
cmpsl
stos
ret
pop
adc
dec
xchg
int3
mov
push
inc
dec
adc
jae
loope
loope
mov
bound
pop
sbb
jbe
push
dec
mov
and
add
or
dec
movsb
ficomps
mov
fldcw
pop
pop
mov
stos
pop
imul
sub
mov
jmp
lret
aad
xor
or
fdivrl
jl
pushf
mov
std
mov
int3
cmp
mov
mov
push
pop
jno
mov
mov
movsl
loop
mov
loopne
pop
xchg
scas
and
sti
adc
push
jmp
scas
js
mov
push
add
jmp
aad
mov
adc
sbb
cmc
jb
pop
outsb
shrl
lahf
xchg
shlb
inc
imul
stos
cs
lock
es
mov
data16
jb
js
fcoms
push
mov
loop
movsb
jle
mov
xchg
in
mov
push
jae
mov
push
fdivl
pushf
mov
cs
ja
cmp
jmp
lea
mov
mov
es
mov
pop
es
scas
xor
inc
dec
testb
lahf
add
cltd
mov
insb
mov
xor
cmpsl
and
xchg
je
pshufw
mov
repz
mov
shll
arpl
ss
jecxz
es
fwait
xchg
aad
stc
out
movaps
stos
mov
cmpsb
xor
adcl
into
jg
inc
fisubrs
push
in
or
movsl
mov
lock
imul
call
ja
xor
scas
push
pop
pop
pushf
bound
dec
ds
sub
xchg
lret
mov
or
mov
pop
pop
lcall
cmp
push
or
movsb
sbb
repnz
or
mov
sbb
mov
call
adc
stc
daa
or
jl
negb
xchg
fldt
ljmp
outsb
sub
shll
xor
add
imul
rcrb
jae
pop
inc
adc
stc
std
push
push
add
gs
mov
cmc
aad
mov
cmp
scas
inc
in
add
cmp
inc
lods
pop
jns
cltd
pop
das
ret
mov
inc
and
push
mov
cwtl
icebp
mov
insb
fiaddl
daa
mov
jmp
movsb
sub
sbb
divb
xchg
pop
lea
dec
and
jb
mov
mov
xchg
or
xchg
sub
cmpsl
and
mov
inc
out
mov
mov
add
xchg
mov
lahf
mov
fsub
inc
ja
mov
xor
insl
push
mov
ret
xlat
push
fcompl
lcall
dec
leave
outsb
in
push
mov
xlat
inc
adc
sbb
sarb
push
lods
inc
jbe
je
les
cmpsl
inc
outsb
imull
mov
cli
cmp
das
cmp
sarl
popa
jle
and
mov
pop
cmp
mov
inc
insb
mov
fldl
push
xchg
jl
paddsw
flds
push
hlt
push
out
aad
cmp
jl
mov
and
idivl
addl
mov
jb
out
dec
mov
jbe
cmp
xor
mov
and
in
jnp
dec
xor
pop
mov
or
lods
pop
aas
aas
add
sbb
aad
leave
mov
sbb
stc
push
loopnew
sbbl
jo
inc
sbb
pusha
mov
loop
bound
adc
inc
xor
test
fwait
push
and
add
sbb
cmp
pop
fdivrs
jl
int3
jo
push
mov
ja
mov
mov
hlt
pop
sbb
sub
insl
push
sbb
shll
xor
inc
jp
je
pop
jp
push
ljmp
sahf
pushf
stos
repz
cs
rcl
cmp
data16
jno
jmp
inc
jp
aad
pop
lods
mov
xchg
xor
ret
jns
lods
fmull
push
xor
sbb
pusha
mov
jmp
xchg
mov
add
xor
scas
movsl
jecxz
jne
mov
xlat
jmp
leave
push
mov
xor
add
mov
cli
mov
add
dec
testl
call
jmp
and
jo
and
test
lea
dec
mov
pop
pop
dec
xor
or
aad
sti
lods
or
loop
in
adc
cmpsb
in
lock
pushf
sub
les
in
mov
push
and
sti
sub
add
bound
xchg
jo
scas
mov
rcl
xchg
pop
push
or
push
mov
inc
add
jle
xchg
and
add
inc
sub
dec
cmp
dec
push
mov
mov
adc
aas
mov
repz
stos
mov
push
push
push
arpl
push
fmuls
test
ds
add
dec
jb
hlt
daa
cmp
jmp
cmpsl
mov
arpl
je
sub
xlat
mov
xchg
ret
xchg
mov
mov
shlb
ja
or
cmp
cwtl
inc
mov
lock
cmp
jno
jge
pop
mov
pop
ljmp
sti
xchg
pop
mov
lcall
xor
std
ljmp
bswap
pop
jg
inc
mov
lahf
fs
or
popf
pop
out
imul
push
test
push
fiadds
mov
xchg
add
sar
ja
ret
neg
push
pinsrw
mov
adc
pushf
or
sbb
cli
dec
pop
sbb
lea
mov
rcrl
pop
sbb
leave
inc
push
jmp
xchg
in
movsb
mov
add
or
pop
dec
into
inc
daa
or
push
jecxz
dec
ffree
loope
xchg
roll
lods
in
jo
sub
add
out
mov
jb
push
ja
pop
mov
pop
cltd
adc
push
mov
inc
mov
nop
scas
jg
call
sti
xchg
adc
pop
push
loope
lret
icebp
nop
jecxz
jl
xchg
jb
dec
call
repz
pop
popf
stc
lahf
xor
jno
cmpsb
cmp
out
fisubrl
cmpsb
flds
push
scas
sub
push
xor
xchg
mov
aam
pushf
aaa
adc
in
adc
jae
movsb
loopne
cs
in
mov
cmp
cmp
lret
inc
cmp
cmpsb
loopne
cmp
mov
or
int
pop
sub
sub
xor
push
lcall
cmpsb
mov
push
pop
rorl
clc
adc
imulb
sahf
icebp
mov
push
pop
lds
sub
fs
xchg
idivb
xchg
push
fdivrs
jae
scas
xorl
and
inc
lock
xchg
mov
rorl
das
push
mov
cwtl
xor
arpl
in
mov
in
jmp
aad
sub
push
ss
sbb
dec
pop
sbb
popa
aam
mov
inc
mov
dec
mov
into
jns
pop
stos
push
imul
jmp
ret
pop
push
sbb
mov
arpl
add
add
inc
inc
dec
out
add
arpl
mov
cld
dec
push
lcall
insb
adc
mov
sbb
scas
loop
push
xor
aaa
mov
ljmp
clc
nop
js
imul
cli
cld
shl
insl
out
in
jne
fcmove
loopne
cld
sub
push
push
movsl
std
pop
jns
or
adc
imul
repz
dec
out
xchg
sar
arpl
add
movsb
lods
test
testb
inc
xor
cmp
andl
std
jp
xor
mov
cld
dec
sbb
jp
inc
push
dec
mov
fisttps
adc
leave
add
loope
mov
imul
loopne
sbb
and
hlt
aas
testl
adc
jnp
pop
mov
lods
lea
cli
int
cmp
lret
fidivs
mov
stos
dec
dec
int3
mov
out
dec
popf
cmpsl
push
and
scas
lea
add
test
inc
add
in
pop
les
in
cmpsl
sbb
dec
add
int
sub
cmpb
imul
enter
jle
lock
mov
cld
pusha
jo
push
pop
mov
xchg
sarb
cmpsl
aam
das
int
rcrb
or
add
in
dec
stos
sub
inc
fidivrs
lock
clc
repz
fldcw
mov
push
fs
xor
ret
adc
push
fwait
mov
mov
cmp
fcomi
cmp
jo
dec
rcl
loop
pop
popf
shll
je
or
scas
fistpl
lock
push
imul
scas
in
sbb
mov
jecxz
xor
test
sbb
or
xchg
and
add
outsl
push
sbb
mov
add
xor
cs
sub
ss
and
idivl
leave
xor
jge
loopne
mov
mov
adc
or
inc
rcrl
mov
jmp
movsl
cmp
loope
pop
repz
mov
pushf
push
xor
shll
mov
inc
jecxz
and
lods
scas
xchg
jle
mov
nop
lcall
mov
push
test
test
stos
shll
cltd
pop
int3
mov
adc
mov
sahf
es
int
ret
sbb
mov
push
add
inc
push
outsb
jb
cltd
aaa
out
pop
mov
sub
hlt
es
dec
inc
decl
sub
or
inc
in
out
jb
lock
sbb
and
and
jns
xchg
lret
push
adc
out
lea
notl
dec
or
ret
out
lods
out
sbb
mov
mov
xor
inc
xchg
sbb
sbb
or
sahf
fwait
addr16
or
push
and
lea
inc
hlt
mov
sub
sbb
dec
pusha
sub
add
inc
mov
sub
repz
mov
jle
sti
clc
add
cwtl
or
fs
dec
rcrl
jmp
sar
insb
lahf
mov
jl
jge
inc
xchg
cmpsb
inc
arpl
pop
mov
push
adc
sbb
testb
pop
add
push
insb
stos
and
xchg
cmc
add
and
mov
push
jnp
mov
sub
call
push
sbb
cwtl
scas
pop
clc
cmp
inc
push
sub
rol
inc
adc
arpl
popa
std
cmpsb
mov
pop
push
xchg
xchg
sub
pop
adc
fcoml
out
sbb
pop
pop
and
inc
insl
xchg
push
add
sub
sbb
idivl
lea
nop
adc
jbe
ljmp
aad
push
orb
rcr
sahf
mov
mov
in
and
jo
cmp
test
xchg
bound
mov
sub
jns
jecxz
jns
pop
xor
mov
dec
and
pop
sub
cmp
into
pop
sub
mov
cltd
mov
mov
dec
outsb
inc
fiadds
sub
ss
push
or
add
sbb
mov
sti
jl
adc
mov
out
je
cli
pop
sub
mov
cwtl
repnz
xchg
add
xor
ljmp
dec
mov
pop
inc
inc
sub
insb
cmpsb
dec
xchg
jl
mov
mov
jne
push
outsl
icebp
inc
loop
cmp
dec
mov
in
mov
sbb
push
ret
daa
stos
xor
xchg
push
adc
push
shll
ss
insb
sbbl
jmp
ss
and
in
xor
pop
incl
sub
mov
dec
lods
xor
sahf
xchg
lods
ret
sub
cmp
and
add
imul
jmp
dec
fdivrl
cwtl
loope
sahf
xor
ds
sahf
shll
jns
repnz
repz
add
xor
loop
lods
clc
pop
inc
cmp
inc
and
iret
jae
sub
pop
sahf
mov
xchg
or
shr
sbb
pop
dec
mov
jo
clc
int
dec
pusha
pushf
fdivp
sbb
xor
or
nop
adc
jno
notl
rclb
arpl
pop
and
ret
lock
cli
mov
daa
in
xor
mov
jno
out
lret
dec
or
mov
dec
test
jae
sbb
jmp
push
iret
xchg
stos
mov
in
mov
dec
adc
push
sarb
and
dec
or
pop
pop
std
fistps
out
nop
push
adc
or
mov
rcr
pop
lds
pop
mov
sub
xorl
pop
xchg
pusha
jmp
mov
ja
and
add
inc
inc
imul
cs
lret
mov
insl
mov
push
lods
mov
xlat
mov
mov
je
fsubp
inc
xor
rcll
clc
lods
fadds
je
insb
jae
outsb
leave
cmp
jns
push
ds
rcrl
cmpb
jb
adc
mov
punpcklwd
pop
aad
mov
cltd
or
sbb
lahf
cmp
fistpll
stos
test
dec
sub
push
lds
ja
pop
inc
imul
jle
xchg
inc
jns
pop
lds
lret
in
out
mov
addl
cltd
pop
mov
shrl
lret
add
mov
mov
mov
call
mov
fwait
or
negb
je
sub
jnp
mov
inc
xorl
cmp
xchg
in
daa
sbb
test
lods
std
test
test
xor
cld
add
sti
xor
sbb
pop
out
or
movsl
push
lods
mov
mov
mov
inc
mov
repnz
cmp
hlt
fcompl
dec
inc
jmp
popf
jmp
inc
mov
mov
pop
or
cwtl
sub
cmp
dec
add
cmp
push
jbe
cmp
xchg
aaa
xor
pop
das
test
test
jg
add
call
not
inc
push
inc
inc
mov
mov
pop
pop
mov
inc
pop
push
cld
notl
dec
cmc
fimull
adc
mov
xchg
mov
inc
cmpsl
inc
dec
cmp
fwait
repnz
insb
mov
mov
xor
cli
outsl
lret
les
push
add
cwtl
scas
popf
push
push
clc
pop
push
mov
imul
out
mov
dec
sub
mov
pop
push
or
mov
pop
pop
jbe
jnp
dec
nop
mov
xchg
dec
and
dec
imul
lods
lcall
push
push
hlt
push
testl
mov
jg
xlat
cwtl
outsb
popa
or
lcall
jmp
xor
pop
adc
push
mov
mov
mov
xchg
adc
push
inc
jae
rcr
dec
lret
lock
xchg
and
out
nop
push
push
dec
and
and
leave
xor
stos
pop
xchg
inc
sbb
sbb
popf
push
repnz
fs
into
decl
mov
das
mov
out
or
test
xchg
xor
or
inc
cmp
rcll
out
push
dec
sbbb
pop
jae
and
or
or
or
mov
cmp
pop
push
xor
stos
out
orl
sub
cmc
pop
and
sub
lods
negb
out
and
fs
fists
aam
push
pop
fcmovnb
pop
inc
enter
jecxz
scas
into
jb
cld
jmp
fucompp
movsb
pop
cmp
scas
or
setb
sub
out
repz
mov
popa
mov
test
aas
outsb
inc
dec
sar
jle
in
lds
fsubrs
xor
call
pop
dec
rcrb
aam
or
xchg
cs
notl
outsb
mov
sti
loope
out
stos
shl
pop
rcrl
or
outsb
mov
into
lods
cmp
adc
in
inc
cmp
push
or
ret
int
push
jp
mov
mov
cld
adc
xchg
mov
xrelease
bound
mov
mov
inc
lds
mov
jnp
outsl
fisubl
ret
jmp
and
mov
stos
in
jle
xor
and
jo
shlb
aam
xchg
testl
daa
in
sahf
pushl
arpl
outsl
loope
addr16
inc
ljmp
popf
add
les
push
pop
bound
testb
inc
or
loope
pusha
mov
movsb
iret
or
inc
xor
stos
fcmovbe
xchg
loopne
or
mov
jp
push
add
test
test
sub
sub
and
loope
adc
in
call
xor
into
adc
dec
adc
xchg
mov
outsb
mov
cmp
add
or
cmp
sub
shrl
shl
sbb
cwtl
cmp
cmp
jmp
and
jmp
ret
divl
pop
push
cmp
std
add
inc
inc
and
push
xor
push
mov
mul
jecxz
inc
sbb
lea
push
dec
sbb
sub
mov
xchg
lret
mull
dec
in
jbe
jns
sbb
rcrb
cmp
ja
lock
dec
xorl
movsb
adc
iret
push
add
into
flds
push
rclb
mov
jmp
out
test
test
cmp
scas
pop
inc
call
xchg
ficompl
adc
adc
lret
stos
inc
ror
daa
rcr
mov
shlb
roll
xor
add
cmp
inc
sbb
mov
out
fsubl
mov
in
inc
aaa
adc
jae
or
cmp
into
testb
fisubl
adc
lods
scas
cmp
push
test
lahf
lods
popa
out
mov
or
stos
shrl
mov
push
push
orb
adc
sub
sub
mov
dec
fiadds
or
mov
out
xlat
mov
or
dec
push
and
cld
mov
arpl
imul
dec
jg
adc
inc
xchg
aaa
ret
stos
sub
loop
or
es
jno
loop
mov
rcrl
or
cmp
mov
rorl
js
xor
es
inc
jmp
jns
lcall
in
mov
enter
lcall
jle
xor
mov
xlat
inc
mov
fisubrs
nop
ljmp
lahf
pushf
xchg
aad
push
pop
shll
and
xchg
notb
cmp
mov
imul
xor
mov
fistps
xchg
jecxz
icebp
dec
popf
sbbb
mov
mov
in
inc
mov
lods
test
mov
ret
and
push
scas
inc
jnp
out
and
xor
and
lret
pop
mov
push
add
or
out
cmp
mov
dec
mov
int
ss
dec
inc
mov
imul
repz
sub
clc
sub
or
sbb
xor
cmp
pushf
mov
cmp
cmc
pop
mov
mov
sub
xchg
shll
push
clc
cmp
pusha
mov
mov
inc
std
dec
stc
jle
fwait
cld
push
sub
rorb
sbb
jecxz
pop
sub
stc
inc
pop
lods
test
or
xchg
lock
push
adc
sbb
shlb
jmp
push
sub
fdivrs
fwait
bound
xor
mov
lret
std
mov
repnz
roll
jmp
adc
inc
sub
loopne
aas
stos
lods
sbb
inc
push
pop
inc
mov
xor
rcrb
mov
sub
cmp
aaa
mov
scas
fistpll
divl
adc
mov
int
ss
nop
cmpsb
scas
dec
sbb
stos
mov
push
lea
jge
inc
mov
push
stc
xchg
mov
dec
dec
cmc
lret
orb
mov
and
pop
stc
int3
mov
jmp
dec
in
ja,pt
jp
into
dec
cltd
shlb
jmp
xor
pop
faddl
add
out
rcrb
popa
cmp
mov
inc
nop
inc
ss
lods
pop
loope
ror
jg
in
push
fcmovb
into
mov
insl
push
lock
fisubs
pusha
add
pushf
lcall
das
lods
or
imul
dec
hlt
fcoms
inc
outsl
in
push
and
jle
xchg
jb
jae
std
icebp
mov
mov
fcompl
mulb
xchg
jecxz
xchg
cmc
fiaddl
xor
rolb
lea
mov
scas
scas
mov
jecxz
jmp
mov
push
into
out
sub
test
ret
xchg
std
inc
pop
jp
imul
fildll
addb
inc
or
je
ljmp
je
fistl
outsb
add
dec
mov
inc
clc
adc
jbe
movsb
sbb
bound
in
and
adc
xchg
enter
rorl
add
pop
jle
jmp
imul
dec
hlt
push
aam
ljmp
mov
in
nop
fsubrs
jmp
add
negl
ret
mov
rorb
stc
pop
lret
jmp
shl
push
repz
fidivrl
cmp
pop
mov
sub
in
adc
mov
push
clc
les
cmp
or
popa
sbb
enter
adc
mov
dec
jg
popa
or
sahf
popf
cwtl
jge
cs
wrssd
xchg
std
cmc
mov
enter
cld
cmp
and
mov
test
mov
pop
mov
xorb
cs
sahf
fdivl
or
shl
loope
inc
mov
xchg
int
sub
scas
sub
rcll
in
xchg
jle
imul
retw
cltd
mov
sbb
xchg
pop
mov
or
mov
mov
mov
popf
daa
je
aaa
aaa
mov
push
rcll
ljmp
and
mov
pop
out
xchg
mov
jle
adc
mov
cld
in
and
mov
add
sarb
lret
rorb
mov
sub
xchg
fisttps
pop
lahf
xor
sbb
add
rolb
and
mov
lcall
out
pop
cwtl
bound
mov
mov
or
xorl
lods
loop
mov
insl
shll
mov
cmc
mov
cld
sbb
mov
jle
pop
mov
adc
lret
pop
add
cld
mov
ss
sti
add
icebp
test
gs
test
in
xor
fidivrl
pop
ret
inc
movsl
stc
lahf
and
xor
adc
jbe
adc
jle
movsb
aaa
xchg
xchg
repnz
jbe
xchg
pop
ret
inc
add
pushf
mov
push
enter
inc
push
push
shrl
sbb
dec
out
adc
mov
xor
push
insl
fcoms
fs
pop
mov
fucom
sbb
push
xor
hlt
dec
mov
jo
mov
call
sbb
add
sub
dec
lods
cmp
loop
sub
imul
pop
lret
mov
and
shr
pop
pop
stos
inc
sbb
or
aad
bound
lahf
sbb
push
inc
out
aad
cmpb
jl
push
xchg
and
out
jmp
fwait
std
xchg
adc
mov
add
lret
movsl
into
test
shrl
or
pushf
and
daa
mov
inc
dec
sub
stos
push
stos
imul
push
addl
addr16
mov
jp
cwtl
or
pop
lods
lods
leave
add
out
jge
mov
pop
pop
lock
je
pop
bound
scas
pop
mov
push
mov
inc
mov
lahf
loope
mov
or
insl
jnp
dec
add
imul
filds
sub
sbb
xchg
lds
mov
ljmp
gs
mov
out
lock
pop
movsl
mov
mov
int
and
ficoms
cs
or
push
mov
aam
jb
sbb
ss
adc
mov
mov
adc
xor
lahf
add
jno
cmp
jg
mov
xorl
loopne
adc
pop
inc
repnz
rolb
mov
mov
mov
dec
cli
out
mov
lods
or
jmp
mov
sti
add
je
mov
fs
frstor
fwait
test
andl
push
mov
sbb
stc
xor
sbb
or
repz
loopne
lret
mov
fidivrl
cmp
xorl
rclb
add
inc
mov
ret
hlt
test
in
divl
les
ljmp
outsb
xor
mov
insl
xor
je
pop
mov
std
or
sub
sub
xchg
icebp
xchg
cmp
push
hlt
mov
out
pop
xchg
xor
jecxz
call
testb
cmp
leave
test
or
sbb
mov
mov
pop
add
inc
cld
das
mov
add
xchg
fistl
pop
test
shl
lret
mov
mov
cmp
mov
and
pand
jge
lods
jne
int
addl
pop
sub
dec
shlb
sbb
cmp
dec
aas
pop
add
pop
add
sbb
dec
insl
imul
adc
gs
std
fwait
mov
pop
xor
inc
jns
sbb
mov
roll
dec
lret
dec
jno
test
sub
inc
std
sbb
sub
inc
call
mov
into
push
inc
fcomps
aam
push
push
dec
lahf
sbb
pusha
ds
push
sarl
push
outsl
pop
pop
push
pusha
sahf
dec
popa
push
or
aam
mov
popf
push
fldcw
adc
jae
arpl
inc
push
lahf
mov
lea
iret
xchg
pop
xchg
popa
cmp
sub
dec
dec
add
pop
dec
int
jle
lock
lahf
stc
mov
xchg
fldcw
add
fstpl
out
test
test
xchg
cmpsb
movsl
mov
in
inc
add
push
mov
or
push
fs
mov
sbbl
fisubl
sbb
clc
dec
sbb
mov
dec
bound
cmp
mov
adc
inc
xor
mov
cmc
dec
aad
aad
les
dec
dec
mov
cmp
xor
mov
push
inc
and
dec
pop
jne
mov
cs
xor
sahf
push
fistps
mov
mov
clc
push
sahf
mov
adcb
sub
pop
xchg
mov
rorb
dec
xlat
sbb
mov
loopne
in
pop
mov
mov
shlb
jns
sbb
cmp
or
add
mov
dec
sub
clc
sahf
ret
push
dec
sbb
or
sub
mov
stos
mov
pop
cmp
jno
lahf
pop
pop
push
add
inc
cld
mov
add
sub
repz
push
jns
mov
shlb
or
fcompl
push
jb,pt
mov
adc
inc
push
push
adc
mov
mov
jg
pop
mov
push
xor
fstpt
push
shlb
js
pushf
test
int3
sahf
xchg
lret
dec
fwait
inc
pop
and
xor
inc
mov
out
lret
cmp
mov
sbb
push
ret
and
sbb
clc
pop
and
mov
data16
push
dec
or
sub
mulb
fidivrl
jno
mov
nop
sahf
repnz
sti
xchg
cli
sbb
xchg
call
test
ljmp
mov
scas
jp
inc
push
insl
mov
inc
cmp
push
data16
or
stos
push
jno
mov
dec
push
sub
hlt
fs
xor
fsubl
lock
dec
add
cltd
arpl
pop
cmp
adc
and
dec
xorb
fstpt
push
les
xchg
xor
iret
inc
mov
in
pop
mov
movsl
or
fsubrp
loope
dec
or
push
inc
popf
mov
push
add
jge
push
push
repz
cmp
mov
gs
pop
movd
lds
jo
sub
dec
gs
in
in
fdivs
pusha
mov
xchg
shl
inc
jecxz
lea
pop
out
push
in
fldl
sahf
sahf
mov
or
cld
xor
jae
test
mov
ret
push
je
outsl
incb
push
loop
dec
mov
xor
mov
out
enter
data16
nop
and
ja
xchg
cwtl
xor
pop
ficomps
mov
stc
xchg
push
pop
addr16
fstp
jle
adc
cmp
rol
cmp
test
out
test
subb
sbb
or
pusha
mov
sbb
xchg
mov
popa
pop
ret
mov
or
stos
add
xor
fistl
addr16
push
shll
cmpsb
inc
add
ljmp
jle
test
mov
gs
sub
aas
movsl
inc
inc
or
xchg
jl
push
repz
adc
mov
jl
scas
rorb
shlb
inc
dec
lahf
mov
rolb
aaa
in
cmp
out
push
jp
pop
outsb
movsb
movsbl
mov
imul
jge
rclb
scas
xchg
clc
push
xchg
mov
jmp
adc
je
push
dec
fwait
sbb
fiadds
mov
das
add
das
mov
inc
xchg
call
fsubrl
push
cmp
push
idiv
lods
mov
pop
adc
or
dec
insb
fiadds
insb
imul
or
shl
adc
hlt
dec
ret
sbb
and
mov
mov
subl
mov
or
dec
add
push
add
test
not
jne
int
arpl
loope
jmp
lods
push
cmp
std
iret
imul
add
cmp
and
mov
repnz
cmp
std
loopne
sarl
adc
in
bound
iret
dec
icebp
and
dec
les
loope
dec
scas
jns
insl
scas
and
repnz
and
aam
int3
jg
adc
movsb
and
xchg
out
cmp
and
adc
mov
push
lea
adc
shr
in
outsb
outsl
inc
xlat
js
cmp
ljmp
sbb
jp
fmull
sub
xor
ss
fistl
sub
call
int
subl
pop
push
imul
sub
ret
xchg
inc
test
mov
into
rol
xlat
pop
push
les
jecxz
mov
sbb
sbb
mov
push
push
bound
lock
cli
xor
cmp
cs
xchg
inc
lahf
adc
mov
test
ret
sub
ljmp
add
sbbb
adc
ja
cmp
es
sub
cmp
mov
int3
pop
lds
xchg
clc
mov
lea
push
cmpsb
idivb
and
ljmp
movsl
push
out
xchg
inc
pop
pop
shrd
adc
pop
mov
into
js
hlt
loop
jo
test
shr
xchg
stos
xor
mov
lcall
loopne
push
roll
in
adc
xchg
cmp
test
mov
in
push
in
pop
fs
insb
inc
mov
mov
jno
icebp
ja
jmp
in
call
inc
stos
pop
or
jbe
loopne
movsb
shl
daa
fnstsw
shl
xchg
int3
push
loope
jle
out
sub
jns
dec
mov
pop
sub
insb
js
mov
pop
or
xor
sub
out
arpl
aas
daa
add
nop
add
jb
iret
rorl
or
xor
sahf
rcl
add
ja
or
cmp
rcrl
sbb
fdivrl
xlat
je
mov
xchg
lds
fs
clc
mov
lds
cmp
rcll
cli
xchg
pop
cmpb
mov
in
inc
out
leave
imul
aaa
mov
stos
sbb
jecxz
and
mov
pop
aad
jmp
xchg
loope
push
mov
inc
addr16
xchg
popa
pop
cli
sbb
aad
adc
rcrl
outsb
adc
xor
test
adc
pop
hlt
popf
fimuls
not
pop
test
leave
sti
and
pop
lret
inc
and
cmpsb
aaa
dec
xchg
jnp
push
daa
aad
jb
dec
rcl
push
das
jge
lret
fmull
fiadds
je
jno
sbb
cld
push
mov
scas
inc
push
xchg
inc
push
mov
push
xor
pop
mov
jge
mov
fcoms
outsl
sbb
sub
stos
icebp
push
testb
paddq
vmread
jg
sbbl
iret
test
clc
adc
add
mov
jo
pop
mov
std
into
std
jbe
dec
mov
scas
daa
adc
jp
inc
data16
mov
and
push
dec
loopne
imul
xchg
cli
sbb
cmpsl
xchg
enter
xchg
loope
popa
dec
dec
push
out
pop
aaa
jns
adc
stos
insb
repnz
loope
mov
mov
fs
sub
gs
insl
mov
scas
movl
fnstsw
jmp
cmp
sti
dec
pop
push
push
adc
push
jl
das
jle
cmpb
jmp
add
negl
jl
repnz
pop
mov
xor
cmp
loop
dec
cmp
sub
rclb
sarl
sub
pop
cwtl
inc
ja
or
mov
testl
bound
adc
fidivrs
push
mulb
dec
imul
stc
repnz
jg
xchg
addr16
xchg
xchg
or
dec
popa
and
fadds
adc
push
or
out
addb
mov
test
aaa
jl
std
popa
inc
loop
xchg
xchg
insl
lods
mov
je
add
ret
cmp
and
sub
mov
xlat
and
jns
leave
fisttpl
nop
mov
mov
mov
rol
sbb
ret
jne
jae
dec
ret
imul
cmp
rcll
adc
dec
icebp
mul
insb
pop
mov
loope
or
std
mov
sahf
xor
xchg
clc
js
cmc
or
cmp
inc
stos
or
bound
and
mov
fidivrs
mov
scas
mov
stos
das
cmp
ds
popa
or
repnz
ljmp
xor
cmp
inc
or
mov
gs
pop
test
adc
je
sti
sbb
popa
jecxz
xchg
cmp
jg
sub
cld
inc
aas
mull
jns
bound
mov
cmp
test
fcomps
push
fldcw
adc
push
call
std
dec
lcall
insb
scas
jmp
ret
divb
cmp
rcl
mov
mov
aas
mov
push
adc
push
arpl
andnps
mov
stos
push
cmp
adc
jmp
sahf
lods
mov
outsl
sbb
or
mov
ljmp
sub
adc
mov
jl
dec
push
or
jns
adc
arpl
mov
aaa
push
push
add
outsl
sub
movsb
out
sbb
inc
xchg
out
daa
add
inc
mov
idivb
xor
inc
jp
xchg
fsubp
pop
idiv
call
xor
sub
push
cmp
push
xchg
and
es
dec
adc
and
mov
and
pop
lods
idivb
stc
enter
mov
add
mov
je
call
jb
xchg
jb
cmp
aad
jp
pop
adc
pop
shll
imul
jnp
scas
pop
ret
ret
mov
repz
movsb
fidivl
sub
shrb
daa
test
and
jno
sbb
outsl
pop
mov
sti
push
ja
leave
fstl
imul
sbb
pop
sub
rorb
popf
pop
adc
sahf
rorb
mov
jo
js
into
pop
push
rclb
sbb
into
sbb
add
cmp
fcompl
fimuls
sbb
popf
adcl
iret
mov
rcll
cmp
push
mov
loop
ret
test
mov
mov
ljmp
loope
cld
icebp
mov
insb
mov
adcl
leave
subl
sbb
fmull
pop
inc
pop
enter
add
and
adc
dec
int
mov
repnz
out
push
cmp
icebp
mov
repz
cld
pop
mov
or
enter
rclb
push
in
sbb
out
repz
movsb
push
mov
pusha
cltd
add
popl
pop
mov
mull
cmp
js
outsl
scas
push
pop
and
test
cmp
pop
fsubr
das
or
lea
imull
lcall
fwait
and
inc
mov
imul
clc
jl
sub
in
cmp
xchg
int
mov
lea
call
pop
sbb
lcall
dec
stos
pushf
or
insb
pushf
push
int
ficoms
or
bound
xchg
xchg
pusha
leave
sub
outsb
stos
and
imul
sbb
adc
mov
lahf
cltd
out
pop
pop
inc
cli
nop
adc
and
cs
pop
sub
push
mov
dec
push
mov
inc
lds
fmulp
popl
test
in
in
pushf
xchg
cld
add
xchg
jge
cltd
int3
mov
jb
mov
mov
bound
mov
or
cmp
out
aas
mov
push
outsl
xor
pop
scas
pop
add
xor
fiadds
sbb
ljmp
push
dec
ljmp
mov
sbb
jb
fcomip
sbb
mov
mov
inc
cmpsb
add
nop
fldl
mov
xor
inc
and
std
push
pop
inc
loop,pn
or
icebp
lret
les
pop
inc
popa
out
je
sbb
cld
inc
mov
aad
mov
pusha
cmp
or
xchg
sbb
icebp
cs
pushl
cmp
dec
out
clc
xchg
std
adc
sub
push
aad
xchg
iret
int3
ret
stos
add
mov
jnp
push
std
sbb
xchg
xor
and
lahf
sub
lock
mov
push
xor
pop
and
int
or
fwait
loop
scas
xchg
mov
jno
sti
dec
aas
out
add
fsincos
and
addb
test
sbb
mov
sbbl
nop
pop
lret
stos
insb
cmpsb
mov
sbb
stos
jae
adc
jno
push
das
divl
cmp
inc
and
mov
inc
out
push
je
dec
mov
dec
cmpsl
mov
mov
jnp
jno
scas
das
es
dec
cmp
sahf
add
mov
into
mov
mov
lods
adc
sub
cmp
cmpsb
and
xor
and
adc
ljmp
stos
insb
xor
lock
test
or
fcoml
push
push
inc
inc
pop
xchg
push
jmp
add
push
mov
in
sub
repnz
or
loopne
jo
xchg
push
dec
mov
movsl
popa
mov
lahf
adc
sbb
mov
and
les
inc
vfmsub213ss
adc
dec
cmc
sub
js
dec
test
sub
out
loopne
mov
jmp
inc
pop
pop
add
testl
xor
jne
je
and
aam
push
mov
mov
fs
mov
xchg
aam
aad
cmp
pop
mov
insb
cmpsb
lcall
fs
stos
rorb
test
popf
add
mov
push
mov
mov
and
cmp
sbbl
adc
push
jle
xor
add
sub
and
stc
mov
mov
add
arpl
lahf
bound
cmpb
fwait
adc
lods
repnz
sbb
pop
mov
xchg
stos
arpl
imul
or
out
aaa
xchg
daa
pop
pop
scas
aas
clc
cmpsl
mov
pop
or
sub
cmp
lahf
clc
jp
das
out
sbb
sub
xor
add
push
pop
scas
in
mov
enter
and
es
cmp
js
jbe
insl
cltd
in
add
lret
cmp
andl
adc
out
shl
out
clc
mov
cmpsb
ficompl
pop
imul
fwait
push
shll
sub
mov
pop
jbe
xlat
ljmp
insl
and
mov
sbb
outsw
jge
movsb
add
outsl
sbb
aas
lods
mov
xor
aad
jae
outsb
aam
xchg
popa
arpl
mov
pop
lods
lret
ret
out
mov
mov
add
sbb
pop
cmpsb
fs
sub
loope
loop
scas
xorl
rcrl
xor
xor
out
dec
mov
jge
bound
mov
jne
ret
sbb
sahf
out
movsl
lods
sbb
insb
sarb
inc
sbb
xor
fcomps
cwtl
stos
dec
mov
jecxz
rclb
mov
mov
add
cmp
xchg
inc
insb
pushf
xchg
rcrb
or
es
imul
popa
jmp
movsb
in
aad
sbb
cltd
jle
adc
idiv
pop
fbld
outsl
rorb
inc
leave
inc
pusha
lahf
daa
mov
test
xchg
xchg
test
cmp
xor
jp
pop
sbb
fwait
movsb
mov
jg
mov
fs
mov
push
xchg
imul
out
jge
sti
lea
aaa
iret
insl
cwtl
aaa
adc
out
test
xor
pop
mov
hlt
adc
xchg
enter
xchg
popa
or
adc
les
add
xchg
hlt
fimull
and
pop
pushf
out
in
mov
cli
test
lock
in
mov
mov
mov
out
sub
or
in
lret
insl
or
test
adc
inc
dec
cmp
gs
or
and
test
mov
dec
frstor
test
int
dec
mov
dec
xor
push
out
push
jle
aad
fsubrl
clc
out
or
xor
xor
mov
pop
mov
addl
outsl
inc
sbb
sbb
cltd
fistpl
sti
iret
adc
rclb
sub
push
adc
pop
add
jbe
sahf
inc
popa
and
call
lcall
push
std
in
mov
jbe
fidivs
ljmp
pushf
jns
and
pop
test
mov
pop
xor
mov
cli
fdivl
push
fbstp
pop
mov
sbb
xorl
adc
xor
mov
push
adc
dec
loop
lods
and
sti
sbb
dec
xchg
push
mov
mov
pusha
jle
push
sbb
xchg
test
adc
mov
test
in
mov
xchg
mov
mov
jge
pusha
out
clc
pop
adc
push
enter
mov
sub
mov
or
sbb
mov
fmuls
sbb
mov
dec
jmp
dec
int3
into
adc
rclb
stos
inc
scas
repz
adc
add
cmp
or
enter
inc
xor
and
sbb
mov
in
shrl
or
test
sub
mov
xchg
mov
dec
imul
repz
sbb
imulb
mov
cmpsl
daa
inc
pop
mov
das
inc
cmp
in
movsl
dec
jno
rclb
jne
sub
sub
clc
sbb
and
add
into
or
adc
mov
add
loop
and
mov
and
add
aas
bound
cld
xor
in
pop
div
sahf
mov
je
fisubl
shll
push
enter
in
dec
lea
sbb
mov
cmc
xchg
aad
jecxz
rclb
inc
push
pop
repnz
dec
lret
aad
out
fwait
jmp
cmp
shlb
es
fdivrs
cs
add
outsb
pop
push
repnz
xchg
fwait
lods
mov
sbb
push
out
jmp
lcall
mov
ja
dec
and
xlat
xor
and
xor
rorb
aad
mov
movsb
popf
fcoml
clc
xor
jmp
mov
mov
sub
xor
dec
cmpsl
inc
iret
mov
arpl
mov
int3
movl
or
xchg
pop
push
jo
pop
dec
lds
test
mov
test
in
daa
push
rcrl
idivb
sahf
jecxz
loope
xchg
and
dec
xor
js
mov
cltd
push
pushf
mov
test
outsl
repnz
jae
in
cltd
fadds
mov
fdivr
sbb
pop
mov
rcll
shl
jne
push
add
enter
sbb
xor
sbb
push
insl
cmp
shl
shl
lea
fucomp
cmpsl
jg
fadd
cmc
test
es
mov
mov
xchg
iret
insl
fsubrs
push
test
into
push
lds
cs
lds
jg
repz
sbb
sub
mov
movsl
mov
lret
mov
push
addr16
mov
cmp
push
cltd
pop
jo
nop
xchg
cmpl
cmp
jb
xchg
sbb
sub
sub
daa
xchg
dec
out
aam
imul
push
mov
sbb
sbb
mov
mov
jecxz
adc
xchg
inc
ja
mov
cmp
sub
xlat
jecxz
mov
adc
ds
or
inc
rcll
push
stc
mov
mov
push
aaa
and
add
movsl
pop
stos
mov
rorl
leave
mov
sahf
xchg
xchg
les
outsb
mov
ja
xor
mov
cmp
xchg
jno
stc
mov
into
jmp
cmovbe
sub
mov
mov
fs
sub
dec
hlt
mov
enter
sub
loopne
in
sahf
push
and
loop
mov
sub
cmp
rcll
data16
dec
int3
rcrb
pop
pusha
dec
fidivrs
jl
jno
sub
jg
js
hlt
or
cwtl
sar
or
and
popf
push
push
test
bnd
test
push
sbb
mov
cwtl
cmp
pop
pop
add
jno
add
jmp
and
ret
leave
jg
inc
pop
push
iret
push
lods
mov
push
into
xor
inc
repnz
pop
mov
jmp
icebp
int
int3
add
jg
cmp
cmpsl
or
ljmp
sahf
cmp
mov
daa
hlt
arpl
fmul
inc
dec
add
ljmp
xchg
and
pop
sbb
nop
stc
sbb
aam
xlat
and
lcall
arpl
pop
mov
adc
xchg
adc
inc
push
inc
jnp
es
cmp
insl
add
xor
xor
repnz
xchg
xchg
xor
mov
mov
div
aam
add
adc
dec
jno
shl
in
fcomps
jp
jns
push
sbb
repz
add
push
iret
xlat
pop
push
ret
repnz
rolb
push
data16
sahf
icebp
sbb
int3
jns
icebp
sahf
rcrl
pop
pop
fldcw
dec
jmp
adc
and
and
int
flds
ret
mov
hlt
jns
add
in
sub
jae
hlt
jmp
mov
fiaddl
pushf
mov
xor
movsb
loope
cmp
in
xor
push
dec
mov
gs
mov
imul
ret
notb
fs
cmpsb
adcb
loope
bound
xchg
test
lcall
xchg
stc
pop
xor
das
cs
cmp
mov
sub
xchg
bound
fdivr
flds
repz
jmp
or
sub
and
mov
mov
push
pop
cmpb
insb
push
dec
test
scas
clc
jno
pop
ds
ljmp
sbb
jl
jbe
xor
js
lock
addr16
sbb
mov
lcall
sub
push
in
sar
add
mov
mov
mov
daa
pusha
pusha
insb
les
add
jecxz
adc
mov
pop
rolb
sbb
fbstp
gs
xchg
popa
daa
pop
test
lcall
shrd
push
inc
add
cmp
pop
jecxz
dec
test
loop
imul
or
cwtl
clc
mov
fmulp
xchg
or
xor
add
hlt
test
sbb
outsb
xor
xchg
inc
inc
test
loop
mov
ret
or
cmc
jp
scas
sub
leave
lcall
cmpb
xor
adc
ret
sub
jg
adc
sbb
ljmp
fwait
push
cmp
dec
push
scas
inc
xlat
add
outsl
inc
mov
ret
inc
in
push
inc
ss
xchg
das
or
enter
xlat
push
ljmp
fldcw
int
pop
sub
add
sti
mov
mov
mov
cmc
xchg
jne
adc
add
add
sbb
dec
pusha
in
divl
mov
cmpsl
push
xchg
cmp
test
data16
mov
bound
xor
push
dec
stos
adc
add
mov
leave
ljmp
pop
jecxz
lods
arpl
add
cmp
andb
pushf
and
cmp
rolb
jecxz
sahf
in
andl
mov
mov
mov
sti
sahf
xchg
or
xchg
cld
xor
test
push
sub
xchg
adc
dec
add
mov
insb
sete
iret
inc
or
cmpb
cs
shlb
cld
cltd
ret
add
dec
test
mov
xor
sti
xchg
repz
call
fs
add
pop
sbb
push
mov
sub
inc
cwtl
shlb
and
addb
aam
addr16
int
or
les
xchg
fucomp
push
ljmp
out
mov
or
jl
sbb
shll
push
mov
addl
loopne
pushf
adcb
int
mov
loopne
lret
out
and
mov
cli
movsl
ljmp
inc
shll
pop
push
dec
sbb
inc
xor
cmp
out
test
movsb
dec
xor
mov
adc
outsl
mov
insl
cmpsb
adc
sub
aad
and
mov
sbb
mov
and
cwtl
aaa
jge
int
cltd
leave
and
ja
add
pop
in
iret
mov
fmull
and
xor
xchg
movsb
arpl
sbbb
js
push
cwtl
push
mov
out
or
aas
or
add
repz
sahf
insl
rcl
pop
fdivs
sbb
dec
inc
xchg
push
aad
adcl
test
add
jnp
push
cwtl
sub
add
jmp
mov
mov
fldenv
dec
movsb
mov
loope
inc
cs
lahf
sar
fbld
es
push
mov
xor
leave
ss
dec
stos
ficoms
mov
lret
lea
mov
pop
inc
mov
hlt
mov
sub
sti
and
test
rcrl
mov
and
rorb
mov
punpckhwd
xlat
fs
push
or
cmp
int
mov
andl
ss
or
mov
add
jl
inc
sbb
jl
add
xor
pushw
movsl
add
fildll
aas
vmread
mov
jp
ds
in
xor
adc
aaa
adc
adc
mov
out
mov
inc
lret
lcall
cmp
pop
cmpb
mov
adc
jmp
xor
push
stc
scas
paddusb
cs
mov
jbe
adc
pop
or
lods
lods
ret
sbb
bound
lahf
ror
ds
rcrb
xor
loopne
adc
mov
decl
movsl
inc
rol
repnz
enter
test
jne,pn
ficomps
test
adc
mov
mov
mov
pop
mov
xchg
fadds
out
je
push
dec
cmpsl
xchg
dec
add
dec
mov
or
movsb
das
clc
shlb
xchg
ljmp
jno
mov
sub
cmp
mov
rcrl
xor
icebp
and
dec
inc
mov
ret
ljmp
push
sub
aam
xchg
fldcw
jbe
loopne
jo
popf
push
decb
int3
lock
in
sub
mov
push
iret
leave
dec
xor
sarl
xchg
repnz
xor
in
dec
testl
stos
mov
pop
xlat
fstsw
enter
or
lret
lahf
mov
push
sub
daa
push
fistpll
outsb
jp
lods
bnd
pop
iret
mov
lahf
into
nop
mov
stos
sti
cltd
add
int3
pop
cmpsw
jge
dec
test
sub
sti
leave
repnz
dec
push
outsl
mov
sub
out
sar
jle
cmp
jl
push
push
mov
loopne
mov
mov
shlb
mov
mov
int3
divl
pop
pop
xor
sbb
in
lcall
insl
test
mov
pop
pop
inc
jne
in
cld
das
push
out
and
adc
pop
and
push
adc
mov
adc
inc
aam
add
push
fnstcw
ljmp
mov
xor
ret
add
jnp
or
rcll
jmp
imul
fbld
testb
xor
sti
lahf
lods
data16
mov
jecxz
mov
xchg
xchg
push
ds
add
mov
repz
adc
std
stos
push
dec
pop
lods
divl
jle
imul
mov
fdivs
push
or
lret
call
and
cmp
gs
jne
jne
push
es
jbe
or
mov
icebp
mov
cmp
push
nop
pop
scas
lahf
jns
mov
add
mov
dec
iret
xor
loop
out
lcall
mov
mov
xor
push
lods
jb
push
inc
sub
dec
add
xor
fnstcw
in
mov
adc
cmp
ret
movsl
jge
mov
insb
repz
mov
out
xor
in
xchg
ret
data16
adc
inc
int3
sbb
jecxz
data16
outsb
xchg
movsl
cmp
dec
adc
cmp
jno
popl
sub
dec
mov
mov
lahf
das
push
dec
jnp
dec
inc
leave
jmp
int
pop
jl
mov
or
xor
pop
sub
push
inc
stc
jno
jge
sahf
gs
cmpsb
scas
ljmp
and
xor
cld
sub
addr16
insl
jmp
popa
push
cmpsb
sbb
call
or
lret
mov
sbb
sub
jnp
mov
cltd
loopne,pn
aad
lahf
push
aaa
pop
jnp
pop
cmp
pop
je
dec
ficompl
push
cwtl
dec
call
loopne
mov
jle
sbb
mov
inc
add
and
inc
fadds
xor
xchg
outsl
pushf
and
inc
push
jnp
or
pop
pop
out
iret
or
cmpl
push
sub
scas
pop
mov
ja
addl
jmp
outsb
sub
mov
testb
pop
xchg
xor
imul
int3
xor
add
sub
movl
adcb
pop
ds
fadds
int
cmp
push
insb
shl
cmp
addb
sbbl
xor
mov
lock
inc
outsb
push
ja
pop
in
add
mov
jecxz
adc
ds
xor
adc
movsl
and
sbb
rep
add
xor
fcompl
inc
loope
out
cmp
xchg
mov
in
popf
lahf
out
in
add
push
xor
data16
jae
jecxz
das
dec
mov
xchg
mov
adc
in
and
inc
lcall
mov
sbb
rclb
dec
nop
in
lea
mov
adc
enter
das
rcrb
push
jne
ret
loop
cmp
cli
in
cli
inc
dec
pop
pop
push
or
or
mov
call
jne
mov
add
inc
xchg
pushf
jne
idivb
xorl
pop
xor
rcll
ss
inc
je
add
dec
cmpsl
into
inc
test
cmpb
mov
test
adc
mov
sub
push
es
imul
andb
sbb
jno
orl
and
cmc
aas
rorb
cwtl
outsb
sbb
cmp
xor
in
int3
adc
xchg
pop
or
adc
sahf
mov
les
sar
das
int3
icebp
xchg
xchg
lret
gs
mov
jne
stos
cwtl
mov
loop
mov
push
inc
push
mov
jbe
and
sub
jmp
xchg
jge
push
rorb
fidivl
notb
inc
adc
test
lea
dec
cmp
xorl
sar
or
negb
lods
add
inc
xchg
cmp
leave
dec
sbb
cld
add
pop
jbe
and
and
lretw
xchg
adc
push
sub
inc
roll
cmc
xor
push
or
mov
repnz
cmp
or
pop
jp
sbb
shlb
adc
push
mov
mov
dec
xchg
xchg
pop
adc
lea
xchg
xchg
aaa
bound
nop
ret
inc
cmp
sbb
mov
aad
sti
inc
cmpsl
xorb
sub
push
add
sub
pop
sbb
or
push
ja
sub
mov
and
in
and
icebp
cltd
movsb
leave
leave
lds
data16
out
sbb
ret
in
xchg
out
or
mov
jg
and
enter
jnp
sbb
rol
mov
repz
decb
mov
add
push
lock
imull
inc
insb
es
pusha
pop
bound
mov
cmp
ja
enter
xor
loop
push
xor
es
or
sub
cmp
xor
mov
push
mov
hlt
or
insb
aas
push
add
hlt
rolb
or
stc
and
leave
jecxz
add
jle
sub
mov
mov
repz
pop
or
pop
rclb
pop
in
jecxz
mov
pop
insl
and
and
imul
cmp
das
das
movsb
call
lret
andl
cs
testb
fsubs
cmp
pop
adc
popf
add
mov
sbbl
sti
ffreep
in
sub
mov
stos
gs
push
clc
cmpb
loop
inc
ljmp
push
dec
lds
or
dec
or
jmp
or
push
jp
xor
pusha
add
loope
push
std
in
push
mov
xor
out
pop
ficoms
pusha
les
daa
in
pop
fistpl
andl
subb
push
bound
jae
sbb
push
dec
fldln2
adc
adc
fdivp
push
pop
outsb
dec
mov
hlt
in
sti
loop
lret
pop
mov
mov
mov
fnstcw
adc
iret
add
dec
popa
sub
xor
push
sar
ss
jge
popa
dec
push
jmp
dec
mov
ds
cli
xor
add
leave
push
jp
or
mov
or
push
lods
ja
lds
fmul
out
add
data16
mov
iret
pop
cs
adc
dec
mov
and
hlt
mov
dec
gs
xor
popf
mov
cmp
sub
mov
xor
push
inc
ljmp
adc
push
xor
imul
push
dec
call
out
pushf
stc
out
push
xchg
lods
aam
or
iret
sub
das
cmp
dec
xor
mov
jbe
pop
mov
pop
pop
mov
ret
mov
xchg
fsubr
pop
lds
int
test
cs
pushf
pop
cmpsb
cmp
setg
pop
sub
sarl
lock
ret
cmp
inc
jno
lret
adc
xchg
mov
add
inc
fwait
movsl
xor
fcmovne
mov
inc
or
je
idivb
cmp
sti
into
into
int3
dec
dec
mov
ror
push
popf
dec
cmp
test
das
sahf
fucom
mov
pop
cmp
lahf
push
movsb
jb
shlb
jno
rcrb
jb
fists
ficoms
test
ljmp
add
shrb
push
push
xchg
decb
daa
andb
and
xchg
inc
rcrl
outsl
sub
ja
jecxz
sub
arpl
imul
sbb
in
mov
mov
xchg
data16
ss
cmp
pop
sub
cld
enter
lds
and
shl
or
xchg
adc
shll
js
mov
push
pop
cli
xor
in
push
imul
add
lds
and
test
loope
or
cltd
xchg
sti
imul
rcrl
les
xor
imul
add
fwait
out
add
sahf
mov
adc
nop
push
aam
test
in
mov
fidivl
lds
popa
jl
inc
std
push
sahf
shll
cmp
lods
inc
shll
pop
push
scas
cli
or
mov
pop
repnz
ror
pop
inc
ficompl
lcall
popa
dec
pusha
xlat
mov
setg
rolb
hlt
pop
push
push
mov
ljmp
mov
push
mov
pusha
lods
inc
pop
rcrl
inc
xchg
pushf
mov
dec
fisttpl
mov
jno
shlb
dec
icebp
xchg
mov
scas
aas
xchg
xchg
imul
mov
sbb
mov
mov
add
mov
sbb
repnz
cmpl
fcmove
lods
lods
jg
mov
adcb
sbb
mov
aam
dec
test
mov
lret
shrb
push
xor
ret
and
test
cmp
sbb
push
fs
enter
dec
mov
shrl
ret
lock
jo
in
frstor
adc
or
and
in
mov
scas
enter
inc
pop
add
inc
pushf
cmc
rcrb
pop
dec
mov
insl
or
pop
mov
push
mov
inc
ja
hlt
mov
test
add
sti
iret
adc
aad
xor
push
pop
jno
xor
add
jcxz
loop
cmpsl
or
out
or
fsubs
mov
shll
cld
jl
call
mov
lock
movsl
imul
jg
sarl
imul
dec
add
inc
xchg
divb
sub
fildl
fdivrl
sbb
in
aam
jne
lds
mov
mov
jp
in
push
fldcw
mov
xor
add
push
enter
mov
sub
test
icebp
inc
cmp
outsb
add
popa
rep
pop
push
fidivrs
or
pop
in
add
add
popa
inc
addr16
sub
inc
rolb
inc
add
xor
adc
jae
sub
shlb
arpl
sbb
mov
or
sbb
je
fdivrs
fidivs
pop
sbb
jg
test
xor
lds
inc
push
flds
test
shlb
pop
push
add
cmpsl
cs
jb
pop
subl
adc
or
hlt
iret
inc
xchg
adc
cwtl
test
add
outsb
repz
dec
out
mov
and
dec
jmp
into
stos
std
std
pop
clc
pop
jl
and
mov
je
lods
movl
in
cld
sahf
pop
lock
sub
cmp
imull
stos
in
push
mov
xlat
adc
push
xchg
xchg
fst
loope
into
push
pop
lret
xlat
sub
adc
clc
pusha
aas
push
or
in
lea
aam
rcr
jns
repnz
pop
mov
gs
pushf
pop
rol
mov
icebp
push
movsb
dec
das
aas
aas
cmpsl
inc
or
out
cli
push
xlat
cmpsb
stc
xchg
psubq
jmp
sub
out
stc
add
jge
pop
repz
dec
out
sbb
popf
xlat
jecxz
std
insl
aam
add
and
dec
push
arpl
lods
and
mov
addr16
lcall
xchg
sub
ret
rcr
dec
movw
adc
mov
pop
sub
fs
and
jns
xor
adc
xor
nop
je
leave
add
xchg
fdivrs
es
out
push
in
mov
add
mov
mov
out
and
and
mov
mov
cmpsl
mov
lods
push
add
pop
stos
push
jae
fldcw
dec
mov
int3
pop
dec
add
jp
imul
popf
push
push
daa
adc
bnd
ljmp
jne
cmpsb
pop
sti
xchg
inc
push
or
mov
sbb
mov
mov
jmp
adc
dec
pop
push
and
clc
and
loope
loop
mov
or
sbb
jae
jge
mov
jmp
dec
addb
jl
xchg
add
mov
repnz
ret
dec
add
out
jl
jg
sub
popa
test
jno
pusha
pop
aad
mov
and
lahf
andl
cwtl
jne
insl
fs
adc
xchg
ss
sub
push
lock
test
push
cmp
bound
aam
cmp
push
mov
pop
imul
cmpsl
lods
popf
inc
jbe
push
les
and
stos
push
mov
pop
call
cmpsl
scas
rcrb
inc
adc
mov
pushf
cmp
addl
ljmp
push
cmp
mov
outsb
in
mov
push
adc
es
jb
mov
rcrb
lret
mov
lds
fcmovnb
push
adc
adc
sbb
sbb
jg
aam
xchg
cltd
das
enter
push
subl
cs
outsb
stos
pop
push
xchg
mov
mov
mov
pop
pop
lret
or
test
and
mov
fstl
mov
fbstp
xor
dec
loope
dec
cmp
mov
sbb
xor
stc
in
repz
and
ds
add
adc
and
mov
imul
inc
adc
pop
in
adc
inc
sub
adc
cs
mov
outsb
cld
fs
pop
icebp
jo
stos
and
stos
fs
sub
cs
icebp
iret
xchg
aam
cmp
lcall
insb
shl
fs
dec
addb
fs
fmull
dec
inc
shrl
add
sub
adc
shrb
shll
xchg
addl
xchg
cmp
and
or
cmp
cli
loopne
fninit
ret
out
jbe
xor
mov
xchg
or
mov
je
xor
add
popf
inc
lock
and
add
jb
and
dec
sub
sbb
hlt
int3
add
add
out
mov
add
push
push
pop
out
in
sub
inc
and
fcomps
dec
addr16
inc
dec
std
cmp
add
cmp
push
pop
mov
test
mov
shlb
sbb
and
adc
out
push
cmp
jl
xchg
lock
loopne
dec
roll
ficoms
aas
cmpsl
test
dec
jnp,pt
push
orb
sbb
aad
sub
arpl
mov
dec
mov
dec
mov
cli
gs
arpl
sbb
or
mov
xchg
xchg
dec
aad
sar
cmp
add
mov
pop
fildl
and
aaa
les
mov
or
outsl
das
pop
dec
mov
mov
cmpsb
and
fiaddl
sub
mov
lahf
mov
push
shlb
lea
sub
test
sbb
cli
sub
sahf
shll
add
aaa
dec
xlat
sbb
scas
pushf
mov
add
jg
jnp
dec
and
mov
rcrl
popf
dec
sar
insb
xchg
fwait
mov
and
adc
and
mov
imul
mov
pop
loop
xchg
testb
pop
ss
sbb
mov
cmc
jnp
aas
leave
pop
xchg
popa
push
mov
stos
cld
dec
mov
jbe
fcompl
jp
stc
xor
and
jmp
pop
cmc
insl
or
lret
pop
es
cmc
sbb
push
pusha
bound
mov
stc
xchg
sub
cltd
jnp
js
adc
and
or
or
mov
xchg
lret
adc
cmp
xchg
push
add
dec
inc
adc
lea
int
lcall
cli
adc
sbb
mov
mov
cli
je
jno
cmp
mull
add
adcl
pop
sahf
imulb
das
adc
mov
sbb
loope
xorl
push
push
dec
dec
dec
pop
pop
pop
cli
sub
jae
jo
cmp
js
xchg
adc
xchg
nop
inc
rcrl
das
pusha
in
call
push
daa
shll
sub
mov
sub
lcall
pop
xor
ret
in
adcb
loope
lret
gs
andb
xchg
xchg
sarl
xor
aaa
je
out
dec
mov
mov
and
mov
mov
mov
or
add
aas
inc
bound
xchg
pop
xlat
mov
scas
xor
loopne
pop
enter
or
movb
mov
xor
sbb
cmc
mov
fcomps
mov
cmp
push
divb
and
test
dec
mov
push
xchg
outsb
ret
xor
imul
jg
in
fimull
gs
lds
jmp
movsl
imul
pop
mov
test
insl
mov
fwait
xor
js
les
lcall
mov
sbb
xchg
inc
jle
in
bnd
out
popa
mov
jle
cwtl
pop
mov
dec
xchg
imul
sub
addb
popa
repnz
pop
loop
pop
cmp
cli
cmp
inc
fnstsw
and
xchg
int3
xchg
mov
cld
cltd
cmp
mov
dec
rcrb
mov
sti
push
sarb
pop
mov
lret
clc
adc
addr16
jae
in
sbb
add
aas
sahf
sbb
jns
stos
aas
jg
gs
inc
test
jb
nop
or
or
fnstenv
xor
scas
ds
sub
dec
clc
repz
lret
pop
jb
sub
roll
xchg
lcall
or
add
pop
or
outsl
and
aad
enter
ja
fisttpl
leave
test
pusha
jns
mov
cmp
incl
jmp
jne
popf
mov
mov
or
mov
rcll
imul
and
dec
jns
xchg
add
mov
pop
pop
mov
sub
ffreep
jnp
mov
xchg
in
push
inc
mov
pop
in
outsb
mov
aam
in
je
loopne
test
dec
gs
cs
nop
cmp
popf
or
imul
out
ss
jnp
insl
xchg
or
out
cmpsl
into
dec
push
xchg
cmp
sub
movsl
and
lds
mov
jp
push
mov
add
pop
mov
xchg
ret
test
xor
add
rorb
mov
pushl
iret
dec
lock
daa
add
or
pop
inc
mov
push
out
shrb
push
ret
scas
push
xor
xchg
pushf
sub
test
mov
adc
xchg
aaa
mov
lahf
adc
jmp
ja
xor
xor
jbe
loopne
lcall
addr16
jb
adc
loope
adc
mov
mov
fldl
repz
and
and
gs
mov
lock
pop
js
aaa
inc
sar
xchg
pop
bound
jne
mov
out
mov
scas
std
xchg
xchg
cwtl
inc
and
adc
push
inc
pop
pop
jmp
in
sub
push
xor
je
pusha
insl
sar
std
dec
adc
add
fcoml
mov
loope
add
adc
sbb
sub
testl
lret
pop
xor
inc
cwtl
fsubrl
mov
les
movsl
ds
lds
js
test
mov
or
in
sub
dec
jb
push
mov
cmp
fsqrt
xchg
add
loop
cmc
add
lahf
mov
orl
cltd
pop
rol
fisubrl
cmp
push
mov
rclb
addr16
mov
jl
jmp
loop
bound
inc
or
cli
scas
icebp
mov
std
push
ds
cmc
aas
push
xchg
adc
insl
dec
inc
xchg
pop
std
call
jp
insb
jmp
aaa
hlt
xor
sub
scas
movsb
aad
inc
push
push
jb
cmp
jecxz
push
icebp
ja
or
mov
jg
add
mov
scas
insb
pop
and
cmp
add
xchg
pop
sub
jb
add
data16
adc
mov
idivl
jnp
shrb
add
dec
out
sbb
pusha
xchg
add
in
mov
ljmp
inc
jne
sub
add
or
push
pusha
push
imul
mov
in
mov
std
mov
sti
rcl
cwtl
btc
mov
fidivrs
mov
cmpsb
or
sahf
dec
aaa
es
test
fs
push
push
mov
cmpsb
popf
mov
pop
and
add
adc
jl
lock
int
iret
xchg
adc
sbb
mov
xor
cmc
pop
out
cld
pop
add
pop
in
aas
pusha
mov
jl
pop
aas
jbe
push
or
popf
pop
push
dec
movsb
out
dec
js
cmp
or
xor
js
mov
out
sarl
mov
daa
es
add
lods
mov
cmp
jno
sahf
jbe
cli
insl
adcl
mov
call
jle
pop
mov
xlat
adc
cmp
add
ficoml
sbb
cmp
test
adc
int3
push
cs
jecxz
in
cmp
fs
sti
jno
cmpb
dec
xchg
mov
movl
scas
pop
pop
cmp
or
lods
mov
dec
bound
cmp
repz
adc
gs
popaw
icebp
or
imul
cmpb
dec
in
imul
sbb
mov
bound
scas
clc
repnz
je
jmp
mov
loop
jnp
frstor
jno
pop
mov
ret
cmpb
mov
int
fs
lahf
mov
dec
xchg
sub
ds
add
ja
push
xchg
jle
xchg
cmpsl
add
rorb
cwtl
mov
cwtl
sub
push
and
adc
cmp
jmp
jne
ljmp
fisubrl
shlb
dec
sbb
popf
mov
icebp
mov
sahf
dec
jo
push
jmp
lock
sbb
lret
imul
mov
push
xchg
lods
pop
or
jl
sbb
inc
sbb
mov
fidivrl
xor
ja
add
fiaddl
add
or
rclb
xchg
sub
in
fimuls
das
jp
adc
inc
push
inc
mov
iret
jb
inc
lret
leave
loop
insl
jae
outsb
or
inc
push
xchg
das
in
xor
or
mov
stos
jnp
add
fildl
test
test
loope
mov
je
inc
cltd
jno
pop
add
in
xchg
mov
adc
lahf
pusha
je
mov
mov
test
int3
cmpsl
fwait
repnz
xchg
orb
fmul
lods
sbb
push
js
sahf
push
pushw
sti
pop
xchg
ret
sub
jne
lds
sbb
insb
mov
mov
push
push
aam
sub
idivb
scas
shll
mov
jns
popa
pop
lods
movsb
pop
lods
pop
mov
push
and
sti
dec
mov
mov
and
and
call
pop
mov
inc
int3
adc
cmpsb
dec
daa
jo
jmp
mov
sub
cmp
fistpl
ja
in
push
ret
mov
xchg
ds
gs
ret
test
cmp
ret
outsb
aam
or
or
cmp
fisttpl
rcll
loope
dec
insl
sbb
mov
push
push
pop
adc
xchg
aaa
mov
movsl
inc
cmc
lds
fimull
mov
daa
sub
xchg
jl
leave
push
jg
repnz
inc
jno
push
out
sub
sbb
inc
shl
xlat
mov
out
fwait
in
jo
stc
clc
sbb
add
push
fcompl
loop
xchg
lods
xor
mov
cmc
sbb
lcall
or
mov
xchg
push
add
popf
push
cmpxchg
dec
pop
or
ret
mov
movsb
jo
cmp
in
inc
je
out
testb
ret
repz
les
lods
jmp
push
mov
fadd
xor
stc
ljmp
jbe
loop
sub
jbe
push
sbb
sahf
inc
xor
imul
adc
fcomps
jg
or
cmp
cld
dec
fidivrl
ljmp
push
jle
repnz
insb
sbb
fidivs
shl
mov
sub
adc
dec
into
andnps
inc
js
sub
xchg
or
jg
sar
xor
adc
in
lea
iret
imul
cli
push
repz
popf
xchg
mov
sti
in
xchg
ja
sbb
mov
cmp
sub
dec
pop
mov
flds
push
stos
movsb
pusha
mov
jecxz
cmp
xlat
mov
or
and
xor
test
imul
inc
push
cmp
lcall
loopne
jp
gs
fstp
out
js
lahf
es
lods
sub
rcr
cmp
push
jno
daa
jb,pn
subl
jmp
xchg
jmp
dec
fstl
outsb
cli
lahf
mov
scas
push
rcrb
in
mov
xor
sbb
sub
negb
add
les
mov
into
xchg
lea
mov
or
aaa
adc
fcomp
add
mov
cli
and
scas
or
sub
movsl
in
push
sub
fisttps
sbbb
fisubs
mov
adc
mov
movsl
mov
push
xor
fistl
subl
lods
daa
call
or
mov
adc
movnti
enter
adc
es
pop
adc
data16
push
push
add
lcall
ja
out
cmp
mov
cmpxchg
add
call
xchg
cwtl
xor
mov
icebp
sbb
orl
add
push
decl
jne
mov
and
lahf
mov
les
iret
scas
cmpsb
shrb
mov
insb
sub
dec
jae
dec
lcall
jge
jbe
aaa
dec
mov
mov
adc
lods
push
orl
push
pop
or
insl
xchg
sbb
call
dec
adc
or
ljmp
rcr
flds
insb
lds
shrb
aaa
or
cmp
lock
push
nop
push
repnz
aam
fmul
nop
jne
mov
loope
ds
out
cmp
rcll
sbb
xchg
dec
popa
daa
loop
sub
fbld
xchg
addl
repnz
add
cmp
sub
shrl
std
std
dec
dec
mov
pushf
inc
pop
daa
leave
cli
and
xor
sbb
mov
inc
enter
jne
xor
addr16
mov
cmpsl
push
jne
scas
addr16
dec
cs
loope
jge
jns
cmp
mov
adc
and
pushf
pusha
xor
jecxz
loope
sub
pop
add
inc
out
in
pop
scas
mov
roll
fcoms
iret
daa
and
pusha
ret
or
push
test
popf
lret
inc
out
inc
jnp
add
ret
outsb
jno
jne
fdivr
push
mov
jle
orb
fdivp
test
fwait
jp
das
mov
pop
out
mov
push
xchg
rclb
pop
cmp
dec
xchg
pop
push
or
ja
dec
jecxz
pop
lcall
and
xor
cwtl
push
ret
cmc
mov
data16
cli
inc
aas
inc
ljmp
insb
mov
mov
xorl
jbe
jecxz
mov
xchg
lahf
add
mov
lods
push
inc
aad
lods
gs
adc
jge
faddl
sub
das
out
sbb
xchg
ficoml
sbb
mov
add
bound
push
and
pop
fidivl
mov
sub
adc
sbb
xor
out
jae
lods
fadds
push
cwtl
fidivrs
mov
xor
and
or
xchg
adc
xchg
stos
enter
mov
pushf
mov
sub
in
test
cmp
testl
or
andl
pop
push
ja
dec
push
push
insl
dec
add
test
cmp
cs
inc
push
gs
iret
repnz
loopne
dec
cltd
push
das
scas
cmc
inc
fs
dec
sbbb
cmc
imul
in
dec
fdivrs
pushf
nop
out
aaa
insl
push
lret
lcall
xchg
js
push
xlat
mov
push
push
inc
std
cmp
and
mov
subl
ret
movsl
adc
lahf
xor
adc
lcall
xor
mov
mov
adc
lds
je
cmc
pusha
stc
or
jmp
in
push
stos
sti
ja
sbb
adc
mov
and
mov
push
lods
notl
xor
jnp
or
mov
dec
cmp
cmp
dec
mov
mov
subb
add
rorl
scas
mov
jb
sub
cmc
push
dec
sub
pop
dec
je
mov
xchg
bnd
je
pusha
ret
dec
lcall
or
icebp
bound
sbb
mov
inc
jl
mov
cmp
sub
add
inc
xor
and
aam
and
xchg
mov
inc
stos
mov
push
lret
adcb
test
icebp
pop
faddl
in
fwait
mov
sub
incb
ljmp
lcall
pop
jmp
push
int3
addr16
inc
dec
sbb
add
xor
testl
sahf
repz
jns
lock
in
std
in
bound
pop
pop
test
aaa
addr16
out
mov
leave
aaa
aaa
jo
stos
lods
insb
sub
sub
imul
dec
scas
dec
jmp
in
incb
test
mov
jbe
cmpl
mov
loope
roll
sbb
inc
or
cld
and
fisubl
arpl
outsl
sbb
xor
add
add
xchg
jnp
scas
jae
push
ret
xchg
repnz
icebp
bound
fs
scas
lahf
lods
out
mov
jo
or
out
arpl
pop
popl
imulb
gs
inc
mov
sbb
sbb
stos
imul
mov
rolb
out
sub
iret
lret
or
sub
aam
mov
xor
adc
dec
shrl
mov
inc
xabort
pop
test
insl
in
dec
cmp
insl
aam
mov
adc
pop
ss
inc
hlt
mov
loopne
daa
mov
imul
mov
pop
in
test
aam
xor
ja
jb
push
push
add
cmp
xchg
push
pop
jae
loop
in
add
stos
and
pop
jns
mov
cmp
jbe
or
add
fcompp
mov
in
mov
jp
aas
push
add
add
inc
add
orb
orb
andb
cmpb
add
pop
add
adcb
add
test
add
enter
adc
add
loopne
add
add
add
mov
add
addb
add
mov
add
addb
add
add
add
add
addb
add
test
add
inc
add
addb
add
xchg
add
add
add
jo
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
add
add
add
enter
add
add
add
add
fadds
add
add
add
call
add
add
add
clc
add
add
add
add
add
or
add
add
add
sbb
add
add
add
sub
add
mov
push
add
add
add
mov
add
pusha
bound
sarb
add
lock
add
mov
add
add
mov
add
add
add
xor
add
add
inc
add
inc
add
inc
add
dec
add
add
dec
add
inc
add
inc
add
add
pop
add
je
inc
divl
iret
pop
outsb
mov
add
int
js
repnz
testl
lret
fdivp
or
repnz
fdivp
or
repnz
fidivs
test
into
xchg
test
jl
sarl
push
nop
xchg
xchg
adc
lods
mov
cli
adc
je
inc
mov
push
jne
outsl
test
xor
popf
ljmp
add
or
push
pop
sub
push
cli
sub
scas
mov
mov
xchg
mov
pop
inc
xchg
icebp
and
ljmp
and
filds
jbe
jge
jg
lock
sbb
in
dec
mov
nop
scas
pop
pop
ja
es
pop
ja
sub
pop
dec
mov
pop
push
xchg
jae
or
movsl
mov
xor
lahf
pop
mov
jne
cmp
repnz
fiadds
xchg
add
mov
aad
xor
stos
into
xchg
cmc
push
popf
inc
push
push
xor
add
or
sub
shll
cmp
jg
mov
fsts
movsl
mov
fsts
movsl
inc
push
push
xchg
cmc
jg
rcll
fs
fs
imul
mov
adc
fisubrs
test
sub
and
fsts
test
fistpl
adc
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
faddp
and
sub
push
leave
cltd
fisubrl
fnsave
call
xchg
cmp
testl
lret
fidivs
jnp
fldt
mov
cmc
cld
out
out
push
add
pop
daa
decl
int
sarl
or
repnz
fidivs
jnp
fldt
cmp
mov
jl
inc
mov
mov
insb
call
repnz
fidivs
jnp
fldt
shl
push
lret
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fisubs
cmp
xchg
aad
out
push
aad
or
dec
testl
lret
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
fdivp
or
repnz
ficomps
aam
mov
je
inc
mov
mov
fs
shl
push
lret
fdivp
or
repnz
fdivp
or
repnz
fidivrs
xchg
mov
or
repnz
fidivrs
cld
jmp
fisubrs
push
testl
lret
fidivrs
test
scas
or
pop
jo
sti
outsb
movsb
pop
jbe
ja
inc
aam
mov
jp
adc
jb
leave
fnstsw
add
mov
test
sahf
ljmp
sub
sahf
mov
test
xchg
outsl
fcmovu
push
dec
pop
stos
lea
mov
sub
fimull
cmp
mov
xlat
mov
arpl
div
mov
inc
cld
outsb
add
jg
stos
nop
popa
push
lahf
xchg
sub
outsl
sbb
ss
aas
icebp
loope
cld
shl
mov
jae
fsub
ljmp
inc
out
push
cmp
sahf
scas
xchg
mov
cmpsb
testl
lret
ficomps
jns
xlat
jle
stc
ret
movsl
testl
lret
fisubs
sbbb
mov
repnz
fisubs
mov
xlat
jg
div
add
xor
lret
testl
lret
fimuls
mov
shl
push
lret
fisubs
xor
setns
cmp
js
iret
enter
shl
push
lret
fidivs
sub
testl
lret
ficoms
jns
push
inc
mov
testl
lret
fiadds
and
or
repnz
fsubp
loope
push
or
cmp
in
cmp
stc
testl
lret
fdivrp
cmp
mov
xchg
dec
testl
lret
ficoms
mov
jge
fadds
lock
testl
lret
fiadds
mov
nop
jp
or
repnz
fisubs
stos
cmp
jle
add
adc
fsubp
gs
outsb
test
testl
lret
ficoms
ret
loopne
in
gs
shl
push
lret
fidivrs
sbb
testl
lret
fiadds
pop
jns
imul
cmp
mov
repnz
fiadds
and
push
jbe
iret
testl
lret
ficoms
addr16
pop
enter
sbb
sub
testl
lret
fidivs
dec
clc
cmp
testl
lret
fdivp
or
repnz
fisubs
loop
jne
out
cs
sbb
adc
cmp
int
cwtl
inc
add
imul
hlt
mov
les
aas
jo
testb
in
clc
in
fimull
in
jl
or
fdivs
mov
out
rcrl
push
fildl
add
pop
insb
shlb
in
call
dec
cmpsl
lret
setb
leave
call
inc
subl
sbb
mov
dec
dec
push
imul
aas
fdivr
sub
xor
repz
int3
inc
hlt
jp
sbb
pop
dec
xchg
pop
pop
or
sub
and
xor
arpl
aaa
mov
ss
xor
dec
mov
pop
jae
out
mov
imul
sbb
fcmovnu
loopne
stos
dec
and
shrl
clc
das
mov
mov
stc
jne
pop
xchg
mov
and
dec
lods
jnp
cmpsl
sbb
in
push
jo
lea
adc
xchg
cmc
lods
pusha
movsb
arpl
insb
dec
ja
or
push
test
sub
fcom
or
adc
xchg
cmc
lods
pusha
movsb
out
adc
fiaddl
imul
xchg
xchg
push
sbb
bound
xor
inc
pop
test
jb
mov
add
cmpl
xor
pop
int3
arpl
ss
call
mov
push
mov
cmp
fistps
xlat
scas
test
mov
fstpl
sbb
test
imulb
test
int3
and
out
call
cwtl
add
push
into
das
fdivrs
dec
hlt
ja
cmp
repz
lods
push
movsl
pop
sub
add
mov
mov
loop
jl
out
fs
mov
enter
sub
xchg
xchg
shrb
xchg
xor
out
stos
in
add
sbb
rcl
add
add
inc
imul
xor
stos
lea
movsb
outsl
arpl
ficoml
mov
subb
inc
or
mov
sti
jae
fs
das
cmp
setae
xchg
adc
fistps
fdivs
mov
pop
sahf
mov
cld
lea
mov
mov
push
lds
lods
incl
xor
cmp
popf
cmp
mov
in
out
daa
pop
jg
sarb
popf
cmpsl
popa
cmpsl
add
pop
lret
add
jne
xchg
xchg
and
lds
cmc
xchg
push
loopne
sbb
dec
das
sbb
ja
lods
pop
jmp
in
add
mov
mov
pushf
mul
fldz
fidivs
lret
mov
dec
out
push
cmp
push
lods
or
mov
cmp
out
sbb
leave
pop
aas
or
test
cwtl
xchg
cmp
cld
jp
push
pop
push
dec
fsubrs
in
dec
nop
cwtl
je
fisubs
sbb
out
pop
popa
rcr
adc
cmp
popf
fidivs
js
xor
bound
xor
push
xlat
xchg
bound
pop
lcall
adc
add
ljmp
fnsave
xor
stc
adc
mov
push
cmp
cmpsl
push
pop
test
gs
rol
fcmovne
pop
out
mov
mov
inc
mov
mov
cs
xchg
xchg
mov
inc
mov
cmpsw
and
add
mov
call
sub
cmpsb
jno
mov
leave
jo
lahf
movsb
lret
or
pop
mov
mov
aam
adc
adc
cmp
repz
pop
cmp
cmc
jp
xor
fdivl
movsl
xchg
sahf
mov
leave
or
mov
xchg
int3
push
jmp
pop
sub
movsl
into
popf
push
cmp
dec
push
push
ss
andb
xor
cmc
or
int3
addr16
hlt
iret
daa
dec
add
pop
loope
cmpsl
dec
cmpsl
out
leave
xor
pop
push
mov
imul
jle
pop
cmp
add
mulb
mov
daa
roll
test
xor
into
pushf
push
in
adc
inc
cs
imul
xchg
mov
outsb
pslld
and
nop
add
cmpsb
mov
sti
sahf
pop
int
mov
fwait
imul
clc
xchg
mov
icebp
movsb
jne
enter
mov
or
shll
push
xor
cmpsb
cmpsb
sarb
xor
mov
fwait
adc
dec
sahf
mov
mov
out
sbb
out
divl
iret
push
outsl
enter
or
test
push
aad
fs
repnz
pop
testb
mov
cltd
push
sarb
clc
repz
sub
loope
fcomps
push
aas
sbb
xchg
loop
dec
fsubl
popf
lds
es
mov
sub
cmp
sub
stos
dec
lret
or
and
mov
es
xor
cs
pop
shrl
jge
mov
jecxz
shrb
adc
xchg
mov
dec
mov
in
push
rcrb
push
cmp
xor
ja
leave
popf
jo
pop
mov
pop
pop
iret
cmp
lcall
test
rsqrtps
pop
sub
pop
dec
mov
xor
pop
cmpsb
xchg
cmpsb
sbb
cli
fsubs
ss
shrb
fnsave
testb
mov
cmc
pop
inc
ljmp
pop
mov
push
subb
sub
decl
pusha
inc
enter
xchg
adc
dec
lds
push
sub
data16
dec
ficompl
enter
int3
push
stos
xor
xor
or
test
inc
gs
jb
xchg
xchg
js
sahf
jns
add
imul
pop
or
data16
push
lret
add
jg
popf
jecxz
and
pop
push
out
test
pop
push
inc
popa
sub
push
xchg
push
push
scas
sub
stc
xor
dec
sbb
out
popf
ja
sbb
movsl
ljmp
xor
shrl
mov
jl
mov
inc
sbbb
into
sahf
dec
or
dec
stos
sbb
aad
cli
aad
pusha
fcomps
mov
imul
or
push
lock
xor
out
push
lcall
sub
dec
jno
mov
inc
jp
ret
sbb
scas
orb
or
mov
andl
sub
loope
aad
out
xchg
iret
rorb
outsl
and
fsubs
popf
dec
int
or
fwait
fwait
imul
scas
stos
sbb
loope
push
push
xchg
sarl
rcr
rep
jl
jo
sbb
push
dec
xor
xorl
in
mov
push
insl
xchg
cmp
adc
dec
in
movb
sub
or
push
push
xchg
pop
mov
cli
add
or
sbb
mov
and
or
jle
push
sbb
cmpsl
xlat
rorb
std
xchg
nop
loopne
shll
jle
inc
pop
out
decl
popa
cmpsl
cmp
cli
dec
sbb
mov
lret
jp
or
xor
jmp
mov
fnstenv
jnp
jae
mov
out
fstps
push
je
pop
out
icebp
inc
stc
stos
sbb
push
andl
scas
mov
outsl
fstpt
enter
lods
shll
mov
stos
ret
fs
pop
call
push
add
pop
mov
pusha
sbb
jo
call
in
dec
clc
xlat
out
xor
inc
sarb
xor
cmp
mov
push
and
and
fstl
and
dec
xchg
jg
roll
fadds
xor
inc
fadds
inc
leave
cmpsl
push
fisubrl
movsl
or
mov
mov
popa
push
test
push
es
add
dec
subb
inc
mov
pop
aas
jae
mov
aaa
xchg
sti
mov
xor
js
cli
int
push
lahf
pop
fdivp
and
out
adc
roll
pushf
adc
xchg
out
inc
arpl
jl
arpl
loop
mov
mov
pop
rcrl
dec
and
orl
imul
xchg
insl
xchg
pop
dec
aad
out
dec
mov
les
pop
shrb
out
mov
jo
ljmp
fistl
lock
bound
cmp
mov
sbb
lcall
in
pop
sahf
fiadds
push
inc
jns
inc
les
xor
enter
gs
insl
xor
mov
ficompl
es
ljmp
sahf
nop
sti
scas
pop
in
int
and
outsl
insb
inc
enter
movsb
out
sub
rcrb
sub
lock
dec
pop
cmpsb
aaa
orb
add
das
add
xchg
loop
mov
int3
es
lahf
pusha
lret
inc
fld1
sub
test
inc
mov
clc
mov
bnd
jg
mulb
fwait
sahf
aas
xchg
je
fdivrs
lods
cmp
mov
outsl
je
xlat
rcr
lcall
mov
mov
jecxz
std
out
lret
adcb
adc
dec
mov
mov
xor
cmc
mov
loop
popf
sbb
gs
popf
xor
xor
mov
ret
aad
aam
adc
das
out
cmc
cmp
mov
popa
jns
sarb
call
cltd
cmp
call
cmc
cwtl
sbb
push
xchg
loop
or
adc
mov
adc
in
push
mov
lods
insb
inc
or
and
xchg
pusha
ret
shrl
jo
test
imul
xchg
aaa
pop
cmp
dec
and
push
xor
cmp
sub
push
or
push
sbb
inc
popf
inc
ds
roll
or
loop
test
mov
sbb
adc
pushf
ret
and
stc
insb
mov
repnz
jbe
xchg
aad
sahf
sete
ss
pusha
dec
call
sbb
adc
cmpsl
repnz
jbe
pop
retw
iret
pop
sbb
jmp
jb
in
jl
sbb
cmp
in
loope
mov
rol
std
mov
mov
std
addr16
scas
lret
call
or
mov
jno
cmp
movq
out
mov
xchg
iret
mov
repnz
sub
cmp
insl
sahf
flds
mov
out
stc
mov
push
push
push
mov
cmp
mov
shlb
jl
sbb
insl
ret
adc
mov
andl
jle
jecxz
push
int3
xchg
mov
fcomip
add
outsl
out
imul
sbb
out
cld
cmp
outsb
pop
lcall
mov
push
xchg
aam
mov
in
outsl
pop
mov
inc
sub
push
dec
iret
mov
bound
inc
fcmove
sbb
cmp
xor
dec
sbb
inc
in
and
in
jecxz
dec
mov
cltd
dec
mov
inc
ret
call
call
mov
mov
pop
sarb
inc
aad
push
and
push
and
jbe
mov
cmpsl
enter
pop
xor
push
nop
adc
sub
or
test
jmp
adc
dec
jge
fldt
inc
and
jb
int3
lahf
inc
sti
aaa
jp
adc
pop
ror
ret
xor
and
mov
cmp
popf
mov
sub
dec
jae
movsb
nop
mov
in
sub
in
xchg
movsl
mov
cld
aad
stos
push
ret
sbb
imul
out
pop
push
fiadds
out
out
mov
addr16
jle
cmc
mov
loopne
or
movl
push
mov
push
sub
mov
mov
adc
mov
popa
test
and
insl
inc
dec
outsl
les
hlt
sbb
aad
ljmp
push
pop
xchg
popf
loop
or
cwtl
test
lahf
insl
mov
stos
sbb
cmpsl
loopne
movsb
xchg
lods
jbe
aam
test
lods
fcomps
xchg
lret
mov
fstp
rcrl
push
ljmp
or
test
mul
in
pop
ljmp
xchg
cmp
popa
dec
xor
aaa
mov
leave
xchg
setge
shr
dec
jne
add
loopne
imul
sahf
inc
dec
out
jmp
imul
dec
cld
pop
fwait
lret
fwait
mov
sub
in
les
xor
push
mov
jecxz
popf
sahf
adc
adc
push
sysenter
fimull
sbbl
dec
shll
jl
aam
cmpsl
fistpl
sbb
mov
dec
push
pop
movsl
adc
sbb
inc
test
fildll
push
cmpsl
out
xor
jb
outsb
lcall
jnp
lcall
inc
inc
lret
cmp
and
xchg
sahf
sub
xor
jns
movsl
mov
fcmovu
sbb
cmc
je
lea
push
cmp
ret
mov
in
sbb
sbb
mov
xchg
es
loope
mov
inc
sub
jbe
sub
insb
lock
and
pop
xchg
lret
ficoml
aaa
inc
stc
adc
mov
sahf
jge
and
insl
gs
inc
xchg
gs
pop
pop
mov
lock
inc
and
jbe
ret
sahf
add
push
xchg
sub
insl
mov
jns
shll
lret
push
xchg
xor
mov
pop
xlat
lock
cmp
jmp
cmp
and
jns
fsubrl
cwtl
ja
xor
test
xchg
push
aas
xorb
cli
sub
jecxz
hlt
loope
add
daa
out
mov
sub
pop
movsb
and
in
pop
push
sahf
fisubrl
sub
out
leave
fs
scas
test
aas
sbb
sbb
jno
in
aam
addr16
dec
es
das
es
push
lods
inc
ret
mov
test
sub
sub
mov
sti
add
cmpsl
cmp
leave
lcall
out
or
xchg
push
shrl
adc
in
iret
ja
in
jg
rorl
sub
jle
gs
jo
jae
and
xor
add
les
pop
push
sbb
addb
lret
xchg
ljmp
xlat
test
enter
jbe
call
lret
xchg
adc
or
push
cli
dec
jb
sbbl
mov
mov
movsb
adc
nop
outsl
pop
arpl
mov
fisubl
fs
sbb
jns
mov
rcrl
sti
dec
lea
mov
jl
sub
add
mov
push
jp
jmp
mov
xadd
pop
mov
xchg
xchg
xchg
adc
cmpsb
mov
mov
xchg
incb
jno
clc
es
push
xor
mov
and
fiadds
add
inc
les
cmp
jg
scas
mov
cmp
ss
addb
mov
mov
dec
jmp
cmp
bound
sahf
and
ret
nop
mov
jbe
adc
add
out
add
dec
ss
stc
adc
adc
dec
xchg
push
pop
ss
jb
shl
clc
imul
cmc
je
popf
je
lock
scas
jns
fldl
int
bound
cmp
and
in
jp
adc
cmpsb
sbb
ffree
jg
leave
subl
jbe
cmc
mov
imul
cmc
mov
addr16
scas
stos
lods
sub
in
test
cmp
mov
sbb
repz
mov
imul
cltd
cmp
adc
pop
mov
jmp
int
bound
sub
dec
or
dec
cld
cs
mov
ljmp
aam
xchg
push
sar
push
lea
loopne
sub
mov
push
mov
inc
mov
cmpsb
xchg
mov
pusha
stc
jecxz
mov
repz
mov
push
sub
outsb
mov
xor
mov
xchg
sbb
rcrb
fidivrs
add
cmp
dec
ficompl
loop
negl
hlt
xchg
mov
sub
arpl
add
orb
test
jb
pop
push
sub
idiv
stos
sub
cs
jge
cli
dec
imull
cs
mov
movsb
pop
xchg
loopne
jns
imul
movsl
xor
push
es
or
mov
aaa
pop
inc
lcall
add
sub
fnsave
push
mov
jmp
js
test
inc
sbb
mov
and
fsubr
popf
divps
cltd
cld
inc
insb
mov
punpckhdq
aaa
jno
movsl
jmp
xchg
and
test
ljmp
lahf
lcall
mov
insb
or
icebp
shll
loope
popa
xchg
fidivrs
jns
pop
dec
sbb
sub
out
push
and
aad
adc
mov
pop
cmpsl
mov
fistpl
pop
popa
jns
ret
sub
mov
popf
sub
cmp
cmp
fmull
mov
cld
mov
fildl
icebp
cltd
insb
movaps
sbb
inc
ret
xchg
inc
cmp
jbe
adc
push
cld
orb
mov
adc
xchg
into
add
sub
and
addr16
dec
mov
dec
pop
rsm
mov
adc
inc
sahf
cmp
push
and
bound
lret
clc
xor
divl
insl
in
jmp
inc
loopne
mov
sbb
imul
push
mov
ljmp
iret
xchg
jns
and
cmp
cmp
cmp
out
xchg
jo
cmp
shll
js
movsl
inc
mov
dec
std
mov
int3
icebp
hlt
lret
mov
inc
out
jl
sbb
test
arpl
jne
and
sub
insl
inc
leave
enter
ljmp
xchg
mov
and
or
loop
in
or
pop
loop
mov
cs
push
push
mov
jle
mov
cmp
adcb
lcall
jg
sbb
or
jl
jo
dec
test
mov
mov
jae
sbb
or
inc
shlb
loopew
lret
xchg
std
inc
mov
clc
daa
aas
in
addr16
xchg
push
daa
sub
inc
aad
arpl
out
sub
adc
enter
out
adcl
mov
jecxz
ds
xchg
pop
mov
loop
test
mov
mov
pop
dec
xchg
test
ljmp
mov
mov
mov
push
ret
ret
push
jbe
movsl
jns
and
push
dec
jge
sbb
sub
dec
sbb
loope
pop
push
cmp
es
xlat
iret
shl
mov
in
push
in
dec
jne
aam
mov
dec
pusha
loop
xchg
sti
push
loopne
or
or
insl
lcall
in
xchg
lahf
push
mov
push
lret
cmc
lods
je
mov
ror
inc
and
in
mov
mov
dec
daa
add
popl
lret
push
aas
outsl
push
lds
mov
stos
ja
xchg
andb
ss
jbe
push
je
call
hlt
or
cltd
mov
sbb
adc
add
mov
cmpsb
cmp
mov
sbb
mov
gs
xchg
clc
addl
rcrb
inc
dec
pop
inc
stos
pop
jo
arpl
sbb
sbb
aad
popl
add
mov
cmp
and
xchg
in
sbb
add
xor
aad
shrl
lea
push
sahf
inc
popf
cmp
cmc
mov
enter
or
cmp
call
and
clc
mov
je
add
lret
mov
addr16
push
xchg
push
mov
mov
dec
cltd
ret
loop
cld
or
mov
lcall
add
in
scas
mov
inc
mov
mov
and
cmp
add
shlb
cmp
xchg
mov
and
test
jge
les
cmpsl
inc
mov
loopne
scas
cmp
and
rclb
cwtl
std
sahf
pop
aas
stos
int
icebp
test
or
xchg
mov
ds
sbb
movsl
enter
or
sbbl
gs
mov
ljmp
cltd
fnstcw
pop
mulb
or
mov
mov
add
pusha
ret
cmp
pushf
or
movsl
enter
mov
jnp
insl
adcb
cwtl
pop
popf
arpl
movsl
cmpsb
jp
cmpsb
aas
jl
adcb
inc
jns
or
loop
test
icebp
lret
cltd
mov
sarb
push
call
jg
pop
jmp
push
popf
repnz
fucompp
dec
sarl
xchg
push
mov
xchg
fcomps
lcall
push
mov
xchg
mov
inc
daa
add
mov
lods
stos
pop
jo
push
jle
test
add
sub
sbb
outsb
mov
lret
jae
inc
int
mov
xchg
neg
push
pop
cmpb
mov
loopne
mov
xor
jl
pusha
out
mov
cmp
adc
and
pushf
std
iret
inc
call
sbb
cmp
cli
js
popf
mov
cli
ds
and
inc
imul
dec
pusha
imul
loope
push
mov
mov
sub
jg
loop
cmc
imul
and
xor
call
mov
das
notl
out
dec
sub
pop
cmp
jne
jmp
mov
repnz
xchg
jmp
cmp
lret
lret
inc
xor
push
xchg
in
stc
loope
scas
jno
shl
jb
and
cwtl
icebp
lret
pusha
scas
enter
dec
dec
adc
push
mov
fidivl
mov
inc
xchg
jmp
loope
lock
mov
xchg
scas
push
mov
loopne
inc
arpl
jo
push
in
mov
xlat
mov
test
icebp
lcall
sbb
testb
stos
mov
mov
arpl
jnp
push
inc
push
add
mov
adc
dec
cmpsb
push
pop
cmp
mov
addr16
push
cwtl
popa
test
out
flds
sub
mov
mov
cmp
inc
movsb
sub
sbb
inc
push
test
lods
jge
pusha
fisubrl
mov
adc
adc
inc
inc
lock
push
idivb
inc
push
in
int
test
lret
outsl
adc
shrb
lret
sti
mov
inc
data16
int3
xchg
jae
add
cmpl
jp
and
ret
jae
or
add
pop
xchg
adc
test
repnz
inc
push
gs
je
add
test
addb
jmp
es
mov
ss
adc
inc
push
out
loop
xor
mov
repz
and
push
movsl
jp
sahf
inc
lds
sbb
push
sub
xchg
inc
add
sub
xor
js
cli
inc
int
mov
and
xchg
fistps
jo
les
xchg
in
das
lock
pop
loope
inc
push
push
sub
movl
je
or
mov
push
inc
push
imul
push
mov
push
or
mov
add
imul
sbb
and
lret
adc
dec
out
test
in
into
je
cmp
add
sti
pop
jp
sbb
pop
dec
shrb
push
xchg
or
or
sbb
jae
cmpsb
ja
pusha
rcl
jae
dec
jo
push
pop
lret
ja
jecxz
jmp
test
shlb
cld
push
sub
mov
sub
fcmove
enter
pop
inc
stos
jne
push
sahf
aam
pop
lahf
xchg
push
mov
mov
xchg
shll
add
or
add
lcall
out
pop
cltd
mov
sub
aaa
in
je
cmp
inc
iret
sub
dec
sub
mov
scas
outsb
pop
test
rclb
lds
push
rcll
fsubrp
mov
inc
leave
fmull
dec
out
push
addr16
xchg
pop
jnp
loope
fisubrs
add
lods
pop
lea
push
ret
out
and
xor
mov
jne
lcall
cmp
rcr
adc
sti
stc
ss
pop
lods
outsl
cmp
in
xor
testb
in
sub
jno
sub
stos
xor
inc
ds
out
les
sar
cmpb
sub
cld
jnp
add
dec
dec
cmc
pop
shll
cld
das
mov
lock
daa
sarb
rolb
pop
jge
jns
inc
rcr
imul
mov
dec
fmuls
cmc
daa
addl
jge
ret
jno
in
xchg
lcall
cmpsl
pop
push
cmp
adc
adc
adc
clc
or
xchg
out
rorb
test
in
leave
out
cmc
add
xor
scas
les
or
add
stos
xchg
repnz
out
push
xchg
lahf
ljmp
in
add
int3
test
roll
xchg
mov
sbb
enter
sub
bound
and
inc
lds
sub
scas
rorb
mov
xor
sub
fdivrl
movsb
jg
out
cmp
inc
lahf
jg
and
cmc
dec
cltd
mov
rcrl
jmp
push
jge
mov
adc
mov
cmp
data16
fimuls
xchg
push
rorb
sarl
sti
lds
dec
lock
arpl
mov
jmp
add
icebp
cltd
inc
inc
loop,pt
push
negl
ss
lds
outsl
add
mov
in
jne
lret
dec
aam
out
dec
dec
mov
sub
xchg
dec
fdivl
in
stc
aaa
cltd
out
loope
sub
adc
mov
cmp
lods
test
pop
shl
cs
into
notb
repnz
pushf
insb
ss
xchg
push
cwtl
mov
sahf
test
pop
mov
jle
cmp
cmpsb
lcall
test
roll
nop
xchg
adc
push
sub
data16
loop
xchg
add
sbb
and
dec
sub
icebp
xchg
mov
inc
popf
jbe
loopne
xor
xchg
adc
mov
xchg
leave
push
add
loope
sbb
sbb
test
sbb
sbb
add
push
pop
xchg
bnd
pop
jle
mov
push
loope
dec
clc
jae
pop
add
mov
sahf
jbe
movsb
pop
outsl
mov
add
rclb
mov
insl
and
mov
sub
mov
push
mov
loopne
mul
je
cmp
hlt
shrl
push
outsb
cld
cltd
push
fcmovne
fs
xchg
mov
es
js
pusha
add
das
aaa
imul
push
inc
imull
pusha
pop
test
xorb
leave
jbe
mov
stc
loop
push
jno
outsl
jnp
mov
lods
push
fcmovnb
jno
cmp
or
inc
mov
add
xchg
fdivrl
je
dec
mov
mov
mov
inc
jb
mov
movsl
add
mov
call
push
pop
sub
sbb
xor
cmp
loop
adc
adc
sbb
gs
mov
popa
sub
movsb
add
or
repz
sbb
addr16
xchg
pop
sub
mov
andl
and
mov
add
sahf
lcall
pop
sti
inc
cmp
or
pop
ss
pop
sbb
xchg
mov
xchg
shrb
ja
and
mov
fdivl
dec
repnz
bound
xor
xchg
or
into
lahf
test
and
mov
pop
and
ljmp
dec
xchg
mov
jb
adc
inc
xchg
hlt
cltd
inc
mov
cmp
xor
adc
nop
or
mov
mov
cmc
push
mov
into
mov
push
pop
cmpsl
imul
and
sti
int
mov
or
jge
xor
mov
dec
cmp
sbb
mov
in
pop
icebp
scas
mov
pop
rcll
arpl
sti
xlat
lea
sub
popa
int3
aaa
add
jle
cmp
ret
js
xor
repnz
fists
pop
xor
inc
xor
sub
and
pop
jno
dec
push
lea
fstpl
into
push
ret
out
adc
adc
xchg
pop
lods
idivl
jmp
inc
and
jmp
mov
pop
mov
fldcw
jl
jae
in
push
into
ss
out
add
daa
aaa
mov
mov
sub
dec
mov
cwtl
and
push
mov
adc
mov
dec
xchg
xlat
and
push
sahf
and
pusha
imul
pop
xchg
jg
pop
fidivs
stos
inc
mov
cmp
sbb
adc
fdivl
add
je
dec
scas
lahf
lock
mov
imul
push
xchg
dec
inc
and
mov
mov
and
or
inc
mov
fsubl
push
movb
dec
inc
push
scas
test
xor
hlt
dec
xor
das
bswap
mov
adc
test
loopne
shlb
fwait
test
je
mov
js
call
cmp
and
inc
add
js
loope
ds
xchg
imull
mov
mov
inc
xor
push
into
mov
pop
pushf
adc
int3
popa
ds
scas
mov
mov
ds
sub
mov
gs
jae
pop
mov
dec
and
and
das
call
ja
jmp
adc
repnz
fdivs
add
ds
dec
pop
dec
dec
adc
aam
fsubl
arpl
jp
pop
jo
push
aam
out
arpl
mov
stc
push
or
aaa
sub
test
rcrl
mov
inc
jecxz
jl
imul
sub
xchg
fistps
lret
fs
push
dec
inc
cmp
sub
mov
lret
push
jb
lods
rcrb
outsb
dec
outsl
int
int
imul
roll
es
xchg
cs
xor
test
fistps
cli
into
orb
bound
cmp
ja
dec
lahf
mov
mov
les
push
mov
sub
outsb
js
les
ljmp
add
dec
push
ja
jmp
ss
fisubs
inc
rolb
les
scas
mov
and
mov
cmp
je
cmpsb
mov
lret
push
adc
std
cli
dec
cmc
xchg
in
aaa
aam
lret
in
mov
popa
fwait
outsl
aaa
and
adc
aas
in
push
test
fmull
inc
or
cmpsl
sub
jecxz
pop
lods
xchg
sbb
enter
bound
pcmpeqw
bound
mov
push
out
shrb
cmc
lcall
fisttps
adc
cmp
cmp
rcr
test
sub
daa
sub
mov
aad
push
data16
and
lods
jge
cmpl
hlt
outsb
cmp
mov
jne
std
and
ss
dec
lret
mov
in
aaa
rclb
push
cmp
sub
push
std
mov
lds
testl
or
and
jb
sub
dec
aas
fnsave
lods
cmp
inc
pop
shll
mov
das
cmp
rcl
aaa
inc
movsb
ret
push
smsw
jo
scas
insb
jb
shl
test
sub
lock
or
xchg
in
dec
xor
push
stc
push
mov
push
and
pop
push
push
and
lods
sbb
mov
mov
stos
jae
aaa
ficomps
pop
fnstenv
fistpll
movsb
inc
lret
lcall
loopne
jl
in
mov
cmp
pop
popf
pop
fdivl
in
test
int3
mov
sti
test
cmp
scas
std
mov
and
jae
sub
rclb
pop
pop
cli
ds
icebp
shll
push
das
or
das
int3
int3
sbbb
cmp
sub
xor
lret
ss
ret
mov
in
adc
pop
cli
xor
ja
and
push
jns
stos
inc
ss
lds
push
stos
aad
clc
scas
mov
ljmp
mov
bound
inc
out
push
jmp
iret
jle
mov
push
dec
gs
xchg
sahf
adc
clc
sub
and
pop
das
jo
enter
das
int
mov
or
sub
lock
and
stos
mov
rclb
dec
ljmp
push
test
xchg
js
sti
stc
mov
xchg
int
hlt
xchg
and
mov
repnz
iret
adc
pushf
insl
push
aas
xor
jne
sub
repnz
mov
sub
les
hlt
push
jp
addr16
sbb
lds
sub
pop
push
sub
sbb
cli
mov
lock
dec
ss
jbe
add
insl
push
shll
pusha
inc
pop
loop
sbb
dec
lahf
in
push
mov
cltd
xchg
adc
adc
jne
insl
cmp
mov
std
xor
mov
mov
push
mov
das
jnp
cmp
loop
pop
add
push
xchg
lret
js
xchg
or
aad
fsubl
lahf
test
jmp
sbb
push
sbb
fprem
add
cli
adc
sbb
sub
aas
dec
aaa
adc
xor
sub
jbe
jbe
xor
mov
andl
xchg
mov
lods
inc
jl
fstpt
in
cmc
or
mov
or
mov
repz
jmp
sbb
jns
in
fistpl
pop
test
cmp
hlt
dec
into
adc
push
pop
xorb
lret
arpl
xor
sbb
push
cmpsl
mov
push
dec
mov
mov
mov
pop
popf
into
insb
adc
dec
lret
add
mov
push
shlb
sti
shll
ds
jecxz
xchg
pop
jno
mov
sub
scas
pop
cld
out
insb
xchg
add
outsb
insl
aad
movsl
mov
cmp
mull
mov
push
mov
pop
push
sti
mov
jo
lahf
fdivl
or
add
popa
and
movsb
add
in
lret
mov
ss
jmp
fadds
icebp
sbb
mov
sbb
inc
or
adc
test
mov
or
insb
les
pop
clc
xor
sub
insb
or
xor
lea
into
push
sub
dec
ja
push
aas
insb
xor
aas
sbb
or
adc
leave
adc
jg
stos
mov
mov
int
mov
imul
mul
mov
negl
xchg
jnp
shlb
loop
movsb
stos
nop
mov
cld
movsl
push
imul
xchg
push
mov
add
xchg
outsb
adc
xchg
je
sbb
cmp
ljmp
jp
jno
pop
shlb
cmp
int
fdivrl
in
and
xlat
pop
push
lahf
mov
shlb
sbbb
fs
icebp
jnp
add
or
popa
mov
inc
inc
ret
pop
cltd
rcpps
lret
sti
aaa
lret
add
pop
call
sub
adc
and
pop
push
movsb
lods
jge
dec
je
xor
mov
adc
sub
pop
inc
int
fmul
and
xchg
ljmp
clc
rclb
pop
sbbb
sbb
jbe
inc
push
andl
int3
cmp
addb
push
fs
leave
push
icebp
rcll
insl
and
add
in
sub
mov
mov
sarl
sbb
add
jmp
fbstp
xor
fisubrs
push
or
dec
xlat
push
lock
std
sbb
cld
or
sub
sbb
xchg
cmp
mov
scas
daa
movsl
outsb
mov
mov
lcall
jno
xor
test
sti
test
add
pop
mov
test
xchg
std
xor
push
stos
movl
mov
das
shlb
push
mov
pop
xor
mov
push
mov
es
xchg
sub
lret
xchg
and
jge
mov
or
pushf
adc
and
test
push
inc
adc
testl
sbb
push
sub
push
out
popa
aas
inc
cmp
test
xchg
inc
push
sarl
lret
adc
push
imul
inc
xchg
rorl
or
jecxz
mov
stos
xchg
repnz
push
gs
pop
jl
xchg
push
rclb
nop
jno
push
fdivrs
mov
cmp
mov
xchg
push
push
out
repz
ds
stos
pop
scas
sbb
mov
inc
mov
mov
outsb
mov
ja
add
push
and
aad
fadds
pop
out
mov
push
push
ja
sub
addr16
rolb
aas
fcomps
pop
dec
xchg
mov
xchg
jb
hlt
mov
push
push
insl
out
pop
xlat
addr16
lea
loopne
enter
adc
inc
add
cmp
aad
adc
scas
push
movnti
clc
xor
pop
mov
adc
push
inc
or
test
ret
adc
xor
sbb
mov
xor
xchg
mov
ja
mov
xor
lea
sub
adc
or
fwait
dec
cli
xor
cmovbe
jnp
mov
pop
fdivrl
xlat
mov
cmpb
xlat
add
pop
imul
inc
pop
sub
sbb
cmp
lret
push
loop,pt
jns
push
lret
out
sbb
mov
mov
lcall
fdivr
push
sbb
cli
jg
test
mov
je
enter
stos
rolb
call
cmp
push
jecxz
movsl
cwtl
add
mov
aas
scas
scas
pop
sub
cs
adc
mov
xchg
adc
dec
inc
add
stos
or
jg
aam
or
add
and
mov
sub
push
xchg
jbe
cmc
ret
out
jnp
jns
fdivrl
fnsave
testl
mov
ljmp
out
sbb
push
cmpsb
ret
jge
popa
cmp
leave
mov
andl
mov
jle
sbb
mov
mov
pop
and
add
outsl
scas
les
mov
pop
mov
xchg
inc
int
push
mov
pop
dec
lds
daa
mov
cmc
push
push
xlat
mov
jge
lcall
push
fwait
inc
and
insb
xchg
sub
and
fwait
dec
and
pop
test
dec
add
dec
jnp
xchg
inc
lock
pop
dec
rcrb
push
push
xchg
inc
jnp
pop
lcall
or
mov
out
pop
xchg
sub
test
fbld
shrl
sti
push
or
inc
js
orl
and
js
dec
or
inc
pop
nop
pop
mulps
sbb
add
push
shlb
dec
pop
jecxz
stos
cmc
xchg
enter
test
add
shrl
lret
push
xor
stos
sbb
jne
xor
xor
loopne
add
ret
inc
fmull
rcr
sub
js
xor
out
jg
jmp
in
push
scas
fdiv
xchg
fstps
fdivrl
jae,pn
mov
jge
fs
std
pop
dec
stos
lcall
shrl
push
test
or
cmc
xchg
addr16
sahf
or
push
push
pop
or
cmp
ficomps
aas
aas
sub
nop
ret
push
pop
test
push
repnz
mov
cmp
pop
or
pushl
push
and
sbb
cwtl
jb
push
mov
xchg
imul
addb
jecxz
mov
nop
scas
cmp
sub
sub
lds
add
push
lahf
mov
push
xor
outsb
jecxz
xchg
dec
shrb
es
dec
mov
pop
jbe
lods
lea
mov
insl
sbb
adc
repnz
out
xor
aad
and
and
sbb
sub
push
adc
shlb
mov
leave
add
das
adc
addl
in
outsl
dec
lret
xchg
adc
icebp
dec
and
lret
daa
sbb
out
popa
aad
xor
sbb
xchg
pop
xor
adc
and
push
lcall
lea
or
in
idivl
sub
mov
push
pusha
ret
fidivrl
rolb
ljmp
loope
xchg
pop
jnp
ret
mov
iret
stos
sub
fidivrl
adc
rcrb
mov
mov
mov
in
repz
xlat
shlb
jne
mov
in
data16
int
or
adc
ja
adc
mov
jae
les
ss
syscall
testl
adc
jmp
jmp
mov
jp
mov
lds
imul
pop
dec
jo
xor
xor
ret
xor
mov
mov
mov
sbb
add
int
fistpll
out
outsb
repz
rorb
sub
xchg
fdivs
inc
pop
or
cmp
ljmp
or
push
fmuls
lods
mov
iret
pushf
repnz
sub
xchg
les
jne
aad
mov
sbb
jo
jo
jl
mov
imul
add
je
jo
inc
test
fwait
shlb
dec
out
inc
stos
cmp
mov
jo
pop
jmp
push
push
fmuls
push
lods
xchg
xchg
sbb
mov
pop
dec
idivl
jno
neg
shlb
mov
ret
mov
movsl
test
es
jnp
sbb
outsb
outsl
xlat
rcrl
add
jge,pt
das
ret
mov
xor
into
shlb
cmpb
add
sarb
adc
mov
push
pushf
mov
mov
das
mov
repnz
leave
xor
outsl
inc
jmp
add
mov
das
xor
test
push
xchg
jmp
outsb
jecxz
lods
mov
mov
dec
lret
mov
les
xor
adc
lcall
and
lds
dec
cs
andb
pop
sbb
test
lret
movsb
cmp
jae
dec
es
mov
mov
add
fcomp
mov
in
sti
mov
push
sub
out
sbb
cld
cs
jp
adc
pop
mov
sbb
mov
rorb
mov
xor
mov
imul
sbb
test
loope
fimuls
mov
pop
int
xchg
adc
pop
push
or
and
mov
jo
enter
or
lea
push
dec
cmc
inc
stos
cwtl
pop
xlat
cli
mov
fcoms
mov
lret
cld
sbb
ret
into
addl
ficoms
mov
sbb
pushf
ficomps
das
or
xchg
inc
je
dec
xor
stos
inc
daa
xor
popf
and
outsb
and
fsubrl
push
movsl
mov
fiadds
sarb
int
mov
mov
adc
in
test
mov
repnz
inc
insb
sub
or
adc
cmp
and
ds
xor
js
xor
add
roll
fcmove
cmp
pop
cmp
loope
test
test
lahf
ret
mov
cmp
cmp
fistpll
fwait
mov
repnz
les
mov
sub
cwtl
sub
popa
imul
pop
and
call
xor
outsb
inc
cmp
cld
loop
mov
negb
daa
cli
mov
sub
daa
cmp
adcl
stos
fisubl
inc
and
jb
mov
stos
int
xchg
popa
icebp
jp
pop
mov
in
test
stc
add
es
in
rclb
cmp
dec
mov
cmp
stc
adc
push
mov
push
pop
xchg
xchg
aas
push
lret
jns
popf
mov
mov
mov
add
xchg
lds
out
repz
ffree
insl
xchg
xor
sbb
cwtl
sti
out
mov
sub
loop
mov
pcmpeqw
pop
loope
fcomps
or
pop
push
adc
stos
mov
int
insl
cmp
add
or
pusha
sbb
cs
add
xchg
or
popa
jnp
in
xor
add
jl
jns
add
fs
jmp
jnp
fadd
stc
aaa
push
repnz
jbe
dec
rcrl
jae
dec
and
cmp
pop
jo
and
sbb
dec
pushf
decl
jo
inc
int3
mov
iret
lods
mov
dec
cmpsb
dec
fstps
and
pusha
jl
adc
ljmp
out
stos
adc
mov
push
ss
xchg
sarl
mov
repz
lods
xor
outsl
or
stos
push
dec
stos
jmp
aad
sbb
std
sub
xlat
repz
mov
sub
dec
stos
push
cmpsb
jp
mov
das
cmp
mov
aam
xor
push
movsl
mov
clc
cmp
adc
je
xchg
rcr
mov
push
push
push
cltd
and
xchg
add
xor
and
jns
adc
sub
leave
arpl
imul
xlat
sub
and
dec
xchg
mov
das
clc
xchg
lods
pop
mov
add
loop
cmp
jmp
int
outsb
adc
jno
std
cltd
outsl
loopne
adc
ret
inc
popa
mov
sar
das
lds
stc
rol
add
mov
movsb
orl
ds
arpl
sub
mov
inc
mov
pusha
mov
addw
pop
ret
gs
inc
mov
ret
cmp
js
or
inc
test
lock
imul
mov
es
lahf
mov
or
popa
xchg
sub
pop
cmc
das
leave
sub
pop
mov
sbb
test
rorb
lods
icebp
pop
jne
jb,pt
das
xor
add
movsl
or
jae
xchg
jo
or
scas
les
popa
xor
push
pushf
aad
push
adc
add
adc
push
int
or
ret
lods
xor
repz
push
xchg
add
out
jo
iret
jecxz
pushf
ja
mov
test
in
push
or
fmulp
add
les
movb
push
ffreep
push
xchg
mov
loopne
or
inc
xchg
mov
xchg
subb
pop
cmp
scas
test
negl
addr16
fildll
sub
nop
cmp
test
adcb
and
mov
inc
mov
xor
out
stos
xor
repnz
pop
mov
mov
cmc
push
mov
pop
fucompp
pushl
enter
add
and
shlb
aas
inc
stc
adc
fdivl
mov
pop
out
sbb
out
xor
insb
cli
mov
inc
cld
sub
inc
lock
lea
ret
into
andb
push
test
cmp
or
daa
or
in
dec
cmpsl
and
dec
iret
inc
add
cmp
adc
jl
movsl
es
mov
add
popl
sbb
lock
incb
int3
outsb
mov
insb
jmp
stos
jmp
out
mov
into
inc
jns
push
cltd
or
mov
and
jmp
sub
or
loopne
fdivl
or
xchg
sarl
push
addr16
stos
pop
es
cmpsl
mov
xchg
sbb
test
cmp
jo
mov
inc
hlt
outsb
aad
xchg
inc
push
sub
jmp
mov
fadd
xchg
xor
inc
call
xchg
xchg
inc
arpl
jmp
test
add
push
fnstcw
in
cmp
xor
or
out
imull
or
mov
mov
lds
mov
leave
or
repnz
sub
int
ss
arpl
mov
jnp
scas
sub
cmpsb
pop
ret
dec
mov
cmp
cs
and
popa
sti
mov
xlat
push
mov
and
sbbl
clc
mov
js
xchg
inc
nopl
and
adc
pushf
orl
pop
xor
nop
push
xchg
lret
dec
xor
jp
inc
inc
xchg
imul
les
pop
cli
cmp
mov
xor
aam
fnsave
insl
outsl
or
cmpsl
mov
jno
cltd
scas
jmp
cmpsl
loopne
lea
inc
pop
adc
sub
cmp
sbb
daa
jno
xchg
dec
int
in
fnstenv
jns
jns
lret
mov
dec
leave
cmp
out
popf
mov
xor
sbb
inc
xchg
pop
cs
rcrb
imul
es
or
das
mov
pop
inc
sarb
loop
fiaddl
call
lea
ljmp
jbe
jp
mov
xorl
and
and
mov
inc
sbb
mov
sbb
jnp
rcll
jmp
call
divl
les
jmp
adc
imul
cs
ss
pop
sub
movsb
add
fs
and
imul
je
out
adc
dec
fbstp
repnz
mov
add
sbb
clc
lock
xor
push
sbb
dec
add
aas
xlat
cmp
mov
clc
sbb
fsubrs
and
out
data16
cmpsl
sbb
sub
jb
pop
xor
inc
cmp
lret
sub
out
pop
push
xchg
cmpsb
push
xchg
mov
xor
jb
jg
sub
lods
int
je
jae
sbb
mov
push
mov
fs
faddp
mov
outsb
test
jbe
xchg
stos
mov
push
popa
dec
mov
jge
sbbb
les
and
out
cli
shll
pop
mov
aas
sub
leave
aas
inc
mov
jns
cmpsl
sahf
pusha
pop
es
stos
add
or
mov
push
xor
or
cwtl
cmp
aam
ror
sahf
xchg
fcompp
sub
ror
addr16
iret
cli
push
cmpsb
dec
data16
repnz
push
and
xchg
sbb
cld
into
or
fnstcw
cltd
mov
test
int3
data16
inc
mov
add
ss
mov
and
cmp
out
fmuls
out
test
push
xchg
jbe
daa
pop
sub
scas
dec
adc
stos
pop
fs
loopne
out
insl
addl
mov
pop
mov
std
jg
cmp
pushf
jo
add
shll
or
pop
cltd
jg
in
aaa
xor
outsl
jo
lahf
inc
and
xchg
leave
out
jecxz
xchg
stos
imul
repnz
lods
arpl
lret
pop
mov
dec
jbe
mov
jo
lret
fistl
ja
push
xor
jle
aad
add
imul
xchg
test
into
insl
dec
cli
adc
jp
sub
outsb
js
sahf
cmc
dec
fstl
or
sub
inc
mov
loop
mov
mov
lcall
fstpl
fisubl
xchg
shrl
movsb
aam
dec
icebp
lods
call
mov
shr
fstpl
adc
or
inc
fneni(8087
jl
shlb
or
push
mov
dec
outsb
cld
jnp
xchg
es
push
push
movsb
test
je
sbb
cmp
and
sarb
xchg
hlt
mull
mov
jbe
mov
rolb
mov
cs
sub
frstor
push
imul
bnd
mov
je
fildl
cld
adc
sbb
shlb
imul
dec
xor
int
popa
pusha
adc
mov
lock
fcmovne
es
sbb
dec
lea
add
das
and
icebp
aam
or
xor
mov
xor
sarb
jno
or
adc
or
or
idivl
rorl
mov
sar
and
arpl
imul
jnp
dec
or
ret
cmpsl
clc
popf
hlt
movsb
mov
repnz
js
loope
jcxz
xchg
gs
and
inc
lret
pusha
mov
and
addr16
orb
out
lret
flds
xor
xor
or
sub
out
mov
xchg
roll
and
divl
jb
sub
iret
loopne
into
pmaxub
dec
test
or
daa
mov
stos
dec
xor
jp
pop
loope
mov
dec
jnp
mov
or
test
loopne
pop
and
push
loope
mov
ss
mov
aas
pop
dec
out
sbb
mov
pop
adc
outsl
jns
sti
loopne
bswap
jl
aaa
mov
psubusw
fisttpl
lock
pop
lcall
in
in
scas
pop
jle
test
lahf
cmp
in
mov
xor
mov
cmpl
or
test
xchg
and
rolb
aad
jno
hlt
cltd
fld
adc
out
adc
subl
nop
pop
cmp
push
lds
jne
pop
push
add
icebp
loope
dec
push
cmp
test
pop
mov
orb
imul
fwait
js
or
mov
sarl
js
mov
mov
xor
push
dec
dec
jecxz
add
int
cmp
rcrb
clc
cmpsl
mov
sbb
mov
jnp
pop
sub
inc
in
ja
adc
inc
lahf
fldcw
xchg
and
mov
mov
popf
fcompl
jae
jecxz
out
lret
dec
fdivrl
nop
add
xor
sbb
add
adc
mov
movsb
lock
cwtl
iret
cmp
pop
dec
mov
push
inc
cmc
mov
or
test
push
mov
cltd
xchg
or
adc
and
jge
loop
jg
sbb
and
adc
push
adc
sub
cwtl
push
ljmp
mov
cmpsb
loop
pop
mov
xor
jns
or
neg
cmp
test
decb
das
adc
add
xor
inc
insb
dec
xor
mov
pop
in
inc
dec
pushf
negl
and
loope
mov
fadd
cmpsb
nop
dec
into
int3
fiaddl
jecxz
test
mov
sub
adc
mov
dec
sbbb
inc
jne
push
dec
lods
inc
testl
mov
dec
out
xchg
jns
dec
and
stos
repnz
cmp
pop
xchg
loope
ds
or
arpl
popa
loop
rorb
mov
in
sbb
mov
jge
jg
lock
aaa
shlb
sbb
xor
push
fs
out
xchg
std
add
dec
xchg
pop
xchg
pop
and
sub
xorb
xlat
mov
adc
sub
xchg
push
or
sub
pop
imul
repz
xchg
pop
clc
mov
cmp
mov
and
test
pop
iret
add
test
enter
and
adc
adc
fs
xchg
pop
sbb
mov
out
fsts
movsb
in
push
insb
pusha
and
sbb
and
sbb
cmp
jp
out
dec
mov
insl
xchg
push
out
shlb
add
sbb
inc
pop
mov
inc
imull
cmp
cmp
mov
fisubl
ds
ret
fcoml
mov
jnp
sbb
and
jnp
pop
mov
lcall
mov
push
or
shl
dec
out
mov
daa
stmxcsr
sub
xchg
add
imul
cwtl
fcomps
sub
xor
mov
mov
movd
xchg
enter
out
sar
popa
popa
mov
arpl
pop
enter
ds
xchg
pop
bound
sub
loope
fwait
rcl
jle
and
idivb
es
lret
mov
xorl
jp
movl
jmp
dec
pop
movsb
jne
and
lock
lahf
jb
scas
pop
or
sbb
enter
sub
and
or
jne
pushf
outsb
lahf
mov
iret
mov
roll
and
jae
repz
add
scas
sete
ja
jecxz
mov
loop
jbe
imul
pop
dec
dec
cmp
repnz
or
loopne
push
cmc
js
push
shl
adc
lahf
sub
aas
dec
add
fimull
mov
insb
pushf
lahf
pop
test
movsb
cmc
stos
xchg
leave
sahf
sbb
push
mov
dec
push
or
ljmp
sub
addl
decb
jg
movsl
push
pusha
out
xlat
jmp
inc
movsb
push
jne
jae,pn
pop
mov
xor
xchg
jle
rcll
inc
pop
push
dec
mov
xchg
or
cmp
add
mov
in
rorl
inc
jae
out
bound
xor
not
inc
pop
icebp
aas
ja
pop
xchg
sub
sbbb
xor
fidivrl
bound
push
scas
pop
sarl
lea
and
or
cwtl
cmp
sbb
add
adc
fcmovnb
jne
hlt
sahf
mov
mov
int3
xchg
jle
inc
jmp
push
mov
aam
jae
pop
inc
xchg
xchg
scas
jae
add
js
addr16
mov
add
idivb
mov
push
call
movsl
popa
daa
and
test
pop
shr
popf
jae
repnz
and
mov
in
cs
lcall
les
insb
mov
add
sbb
cmc
pop
mov
sub
repnz
cmc
or
enter
xchg
mov
icebp
test
fistl
sbb
sbb
in
or
mov
sub
out
cld
ss
iret
out
cmp
hlt
ljmp
aaa
sub
dec
test
add
pop
mov
bound
jns
sar
mov
xchg
pop
mov
push
out
loope
pop
mov
lds
mov
dec
adc
mov
add
hlt
dec
ret
movsl
push
dec
punpcklbw
mov
inc
and
adc
repnz
adc
imul
mov
stos
stc
jb
jmp
mov
cmp
outsb
jl
out
stos
and
inc
rcll
int
mov
mov
mulb
and
add
cmp
add
sub
inc
fs
ja
add
lret
fidivs
sar
das
sbb
stos
cmpsl
lods
mov
pushf
add
scas
dec
mov
jno
push
cmp
nop
or
mov
fwait
sbb
lods
mov
ret
add
adcb
lds
popa
ret
lret
xor
int
push
popa
data16
pop
and
xchg
mov
insb
mov
xor
jnp
lods
mov
sti
es
rorb
inc
fimull
xor
scas
xchg
popa
push
dec
movsb
push
lret
in
ret
push
pop
xorl
sub
push
cmpsl
mov
pop
dec
add
fcmovne
pop
mov
add
add
sub
add
sub
sarb
popa
stos
adc
sub
sub
loopne
dec
lahf
into
xchg
mov
incb
lock
insl
into
or
ljmp
sub
cmp
or
bound
mov
xchg
mov
cld
jbe
aad
jne
dec
sbb
test
fnstenv
jnp
mov
push
stos
sub
adc
cmpsb
pop
xor
lods
sbb
sahf
mov
adc
add
pusha
leave
mov
iret
lmsw
mov
sahf
pop
rcrb
test
mov
mov
inc
gs
out
in
inc
sbb
mov
enter
sub
dec
jl
adc
inc
ret
sbb
jne
inc
mov
or
xchg
stos
daa
pop
scas
roll
out
ss
add
mov
cld
jmp
push
or
and
mov
call
pop
and
je
adc
adc
les
mov
out
mov
xchg
mov
or
loopne
inc
cmp
mov
push
les
xlat
ja
xlat
lock
or
xchg
sbb
inc
dec
xor
mov
scas
inc
std
mov
test
xor
sti
sbb
cli
and
sarb
pusha
sarb
orb
icebp
sbb
lahf
lds
es
out
sarl
jmp
cld
les
adc
cmpsl
iret
jnp
add
std
std
int
xchg
dec
movsl
dec
ljmp
xor
xchg
xor
sarl
cmp
lahf
fs
dec
flds
js
or
jg
sbb
push
pop
push
sub
sahf
in
fisttps
cli
jno
jmp
xchg
add
out
xor
adc
xor
inc
imul
das
in
jo
or
test
xlat
out
ret
inc
jge
jns
insb
or
out
xlat
cmc
push
xor
jl
cmp
fistpll
pop
fistps
fsubs
addb
xchg
push
xor
sbbb
or
adc
popa
aas
add
stos
rcrb
and
loop
mov
cwtl
loop
push
jb
andl
pop
loop
lret
dec
cmc
or
pop
out
or
cmc
mov
mov
push
std
mov
mov
pop
push
into
jo
negb
repz
cmp
inc
xchg
adc
push
xchg
mov
lods
add
sbb
mov
xlat
pushf
int
cmpsb
lock
mov
mov
sbb
fidivrs
jl
test
jnp
cmpl
daa
adc
cs
adc
aam
out
nop
adcb
mov
pop
jne
cmpsl
shlb
push
decb
aam
cli
es
lods
sti
ss
dec
xor
add
xchg
push
push
or
jmp
xchg
test
data16
leave
inc
sahf
xchg
lods
sbbb
sbb
jns
call
push
sbb
push
inc
pop
out
sbb
out
loop
mov
scas
test
cmp
cli
call
repnz
sbb
push
dec
cmp
inc
lahf
fsubrp
lahf
xor
in
addr16
stos
hlt
jge
and
pop
inc
mov
sbb
xlat
jle
push
jbe
cmp
adc
testb
jge
addb
sub
ljmp
pop
lods
mov
push
jge
jge
and
loopne
movsb
movsb
push
iret
xchg
loopne
mov
insb
or
sub
ret
xchg
scas
leave
lea
pop
lret
lret
mov
xchg
xchg
dec
cmp
iret
sub
xchg
mov
fwait
nop
pop
add
call
dec
and
fistps
mov
jl
ror
cmp
xchg
out
jmp
imul
dec
cmpsl
mov
jle
mov
and
sub
xlat
sbb
mov
mov
jg
cmpsl
xor
push
dec
sbb
mov
mov
push
jbe
push
fildll
ds
aad
inc
dec
add
pop
adc
cmpsl
int3
mov
add
fs
repnz
std
dec
stos
ficoml
jbe
or
pop
jae,pt
jo
popf
mov
test
add
aad
push
jnp
cmp
js
repz
push
and
cmp
push
add
jge
add
mov
stos
test
fisubs
cmp
mov
aaa
mov
dec
in
iretw
inc
add
sahf
xorb
popa
les
sbb
fstpt
je
sub
cltd
mov
push
jecxz
mov
sub
jo
sbb
inc
or
scas
aam
jecxz
mov
mov
sbb
jb
inc
ljmp
aas
mov
add
cltd
adc
cltd
loope
jp
and
adc
in
mov
mov
rol
or
lret
jecxz
fimull
xchg
ja
insb
push
adc
hlt
rcl
dec
push
jns
xchg
dec
push
roll
pop
xchg
lahf
out
jg
sbb
xor
push
aam
idivl
jmp
ret
mov
mov
add
sub
lea
jbe
test
mov
pusha
push
mov
imul
fsts
jne
test
inc
jns
xchg
jle
adc
xchg
sti
add
pop
dec
sub
dec
mov
loope
adc
jns
test
pop
nop
mov
aad
cmp
roll
cmpsb
xlat
roll
jg
icebp
test
sub
xlat
in
jp
repz
call
cmp
push
or
leave
mov
aas
xchg
lock
je
mov
jnp
pop
pop
ja,pn
jp
insb
lods
inc
sub
jns
mov
mov
push
xor
imul
aas
xor
dec
xchg
xchg
andb
insl
iret
ljmp
xor
fldt
or
aad
fmul
jne
cmpsb
gs
mov
fnstcw
or
jp
out
mov
inc
jp
lds
cmp
sbb
inc
push
mov
test
add
xlat
out
sti
lahf
popa
cmp
aaa
std
or
loope
xchg
inc
ret
cltd
mov
or
jp
pop
enter
in
cmp
jp
adc
sub
sbb
in
js
xor
iret
jmp
stos
push
push
push
or
test
xchg
ret
test
push
mov
inc
sbb
cmc
std
pop
roll
jns
mov
neg
scas
pop
push
insl
int3
frstor
shr
movsb
mov
sub
mov
mov
je
push
cmp
shlb
shrb
out
hlt
cmpsl
outsb
lea
int3
loope
add
inc
or
bound
lret
mov
xchg
pop
inc
mov
mov
les
jnp
in
popf
or
jp
loope
repz
or
push
mov
hlt
aas
or
sub
arpl
inc
adcl
dec
jle
sarb
inc
pop
cmp
das
push
pop
or
idiv
jmp
mov
rcrb
push
sub
into
jb
cmp
ds
out
add
push
dec
xlat
ret
push
rol
fiaddl
dec
sub
mov
xchg
lahf
pop
loop
push
push
lods
test
push
push
repz
and
jmp
and
push
outsb
lods
ds
les
adc
or
pop
jmp
in
jnp
sbb
fmull
pop
frstor
add
dec
lds
std
cmp
jnp
daa
jmp
imul
sub
mov
push
sbb
and
movsl
js
repnz
enter
dec
sub
jb
movsb
xor
fcmovnu
or
jmp
popf
out
sti
outsb
neg
out
mov
cmc
and
mov
mov
int3
lods
test
test
fidivs
mov
sahf
jb
out
leave
dec
cld
jo
sbb
sub
jmp
cmpsb
jg
jne
and
scas
xor
loopne
lock
sbb
cmp
lcall
or
push
divb
fs
sbb
imull
pop
lahf
jbe
inc
cs
dec
repz
lods
lcall
ret
cmp
iret
xchg
out
and
rcrl
repz
dec
fsubs
add
jecxz
popa
ret
dec
out
das
pop
push
cmc
mov
xor
std
out
sbb
push
inc
xchg
mov
rcrl
xchg
inc
das
bound
or
stmxcsr
loope
mov
stos
rcrb
jl
inc
mov
mov
pop
mov
leave
dec
xchg
lret
lret
sub
push
push
in
dec
add
mov
adc
data16
into
adc
fbld
in
cmp
push
jg
outsl
push
sub
xor
dec
add
in
ja
mov
mov
push
xor
gs
adc
lock
jmp
ja
stc
ror
xchg
test
mov
popf
inc
xchg
pop
xchg
or
mov
into
enter
loope
xchg
repnz
daa
out
sti
test
xchg
cmp
popf
lcall
jb
xchg
cld
pop
out
push
sub
push
enter
enter
cmp
pop
or
jp
push
sub
pop
mov
dec
mov
and
fidivrl
ret
rcrl
in
inc
nop
aas
mov
mov
out
cmp
mov
flds
or
fiaddl
and
or
push
decb
test
test
inc
stc
pop
cmp
and
push
inc
jge
repz
and
xchg
call
stc
clc
push
cmpsl
xchg
fcoml
adc
fsubr
in
xlat
outsb
add
mov
and
cli
jno
mov
jecxz
add
cmp
jns
aas
mov
aaa
ss
xor
jb
loop
or
inc
mov
push
and
movb
bound
xor
pmulhw
pop
or
dec
sbb
scas
ret
or
mov
repnz
pop
loope
sub
fisttpll
xchg
pop
xorl
cmpsl
scas
add
jl
push
cmp
aas
leave
fcomp
xchg
lcall
ss
sbb
mov
push
jo
out
dec
pop
xor
jne
xchg
mov
fildl
adc
lahf
rcrb
les
add
cltd
inc
sub
ret
imul
mov
xlat
cmp
out
leave
adc
arpl
sbb
fildl
cmpsl
addb
mov
shll
xchg
rorl
sti
mov
adc
addr16
push
xchg
or
std
cmp
movsb
pop
mov
faddl
push
ret
xor
arpl
sbb
shl
shl
fbstp
cmc
push
cmc
loop
xchg
mov
out
inc
arpl
push
xchg
outsb
aaa
adc
stos
cmpsb
xchg
mov
add
and
leave
rcrb
cs
outsb
sbb
or
inc
inc
mov
pop
mov
lock
mov
stc
into
aad
add
inc
or
negl
fidivrl
fnstenv
sahf
sub
and
aam
lock
stc
fisubl
aas
jge
aam
pop
xchg
sub
movb
les
xchg
rorb
or
mov
andl
cmp
cld
js
adc
les
stc
push
cmpsl
jns
cltd
sbb
xor
mov
xor
jo
adc
sbb
mov
mov
push
xchg
rclb
jnp
pusha
pop
popf
out
mov
pop
sbb
in
rcrb
call
jne
cmpsl
adc
xchg
cmp
mov
stc
orb
mov
cmp
aaa
push
sub
pop
jo
adc
add
dec
xor
jmp
xlat
pop
inc
gs
leave
mov
inc
dec
ret
icebp
push
sbb
and
jecxz
inc
mov
movhps
adc
or
insb
lahf
sbb
lahf
lods
mov
xorb
jnp
js
shll
stc
movsb
push
sbb
dec
in
xchg
xchg
nop
clc
push
repz
sbb
mov
push
out
xlat
mov
sub
daa
mov
in
stos
loopne
xchg
mov
jb
fisubl
cwtl
neg
push
or
rol
xchg
and
xor
repnz
jmp
push
dec
sbb
mov
jnp
xor
or
cltd
mov
ss
shl
sub
sub
ss
cs
sub
loope
sbb
in
xchg
fwait
lds
inc
inc
mov
mov
mov
mov
sbb
mov
in
and
jp
in
mov
mov
sub
mov
imul
out
fldenv
fmulp
outsl
lds
pushf
jge
pop
adc
lods
inc
cmpsl
rcr
cmpsb
clc
or
xchg
call
jge
jl
inc
mov
xor
inc
jg
out
outsl
pop
ret
jns
push
scas
idivb
sub
in
add
out
flds
adc
lret
popa
cmpb
push
inc
cmp
das
sahf
sub
and
movsl
mov
lea
mov
es
pop
mov
sti
sahf
aaa
inc
xchg
xlat
xor
rcll
cwtl
stos
xlat
repnz
fistpll
data16
push
shll
xchg
scas
call
popa
clc
iret
inc
sbb
rcll
test
or
push
mov
mov
and
cmp
mov
lds
fwait
js
call
dec
pushf
fs
add
mov
lds
jle
xor
push
xor
pusha
xorl
push
xchg
loope
subl
pop
jo
popf
outsl
lock
mov
lret
jecxz
mov
xorb
pop
or
jmp
pop
fstl
mov
call
mov
mov
out
dec
into
adc
dec
push
jl
movsb
push
add
cmp
cmp
in
pop
jnp
and
in
es
xor
jecxz
pop
sarl
sbb
inc
inc
lds
int
dec
jb
xor
cld
or
cmp
push
adc
cmp
jnp
mov
pop
icebp
jnp
mov
and
xorb
repnz
flds
push
cmp
and
rcr
adc
add
fcomi
mov
push
mov
sub
mov
aad
xchg
cmp
cld
dec
rolb
cmp
popf
int
fstl
mov
mov
xchg
idivb
mov
push
push
mov
in
call
rcl
mov
sarl
in
pop
xchg
test
inc
inc
xchg
loop
in
in
lret
test
shrl
daa
stc
repnz
mov
test
movsb
ud2
jmp
or
roll
xchg
popf
push
lret
loopne
dec
inc
mov
lock
jns
gs
push
sub
mov
test
cmp
mov
pushf
cltd
jae
sbb
leave
mov
dec
cmpsl
xor
iret
adc
ja
pop
outsl
inc
pop
std
push
ds
test
inc
jnp
ds
inc
add
add
xor
xor
sahf
lea
mov
mov
jno
stos
scas
lea
dec
les
adc
pop
pop
push
ret
and
shll
dec
into
jbe
adc
cltd
jnp
iret
repz
int
mov
fldenv
lods
insb
orl
data16
icebp
test
mov
out
pop
jl
rclb
movsl
das
loop
gs
xchg
insl
stos
xor
push
out
ror
lds
sub
outsb
sarb
dec
leave
out
repz
sub
stos
xor
mov
or
xor
mov
mov
int3
sti
jle
fsubrl
add
test
or
pop
or
outsb
jae
movsb
pop
inc
hlt
fwait
or
nop
mov
push
sub
xchg
sub
sbb
enter
cwtl
mov
ds
idiv
mov
add
xchg
mov
out
std
cltd
sbb
sub
pushf
pusha
es
sub
cltd
das
cmp
lea
je
xchg
and
push
adc
cli
popf
xor
xor
mov
arpl
in
dec
je
push
jecxz
jmp
les
cmc
add
pop
xchg
or
bnd
pop
jge
xor
cmp
jg
lea
test
iret
mov
inc
mov
out
pop
adc
xchg
arpl
fwait
cmpl
lock
into
xchg
ss
mov
fistl
jns
or
nop
clc
fstps
into
dec
loopne
movsb
dec
insb
jmp
mov
into
sub
xor
arpl
mov
mov
mov
dec
add
jecxz
loop
cwtl
sbb
push
in
jp
push
jg
xor
push
xchg
out
xchg
sahf
enter
std
push
gs
lods
push
test
xchg
dec
pop
jge
ret
dec
xchg
in
dec
cmc
mov
jbe
and
repnz
fsubrl
add
mov
int
jge
sbb
xor
notl
loope
fstps
xor
rcrl
daa
mov
testl
filds
jg
pop
js
dec
jbe
std
dec
mov
or
mov
nop
push
sbb
ret
mov
adc
mov
mov
mov
nop
mov
addr16
out
ja
push
mov
sub
andl
push
roll
test
mov
lcall
sbb
mov
lcall
mov
jmp
xchg
inc
sub
arpl
insl
add
add
sub
in
mov
into
aad
push
andb
push
cmp
lds
xchg
cs
inc
es
inc
dec
dec
inc
xchg
out
mov
arpl
sarb
pop
xchg
xchg
sbb
pushf
rorl
jmp
add
rclb
iret
pop
lcall
sub
mov
sub
sahf
aad
mov
dec
lcall
and
adc
inc
and
insb
data16
cmp
mov
mov
lods
jae
mov
in
add
lods
flds
jb
int3
dec
lock
cltd
sub
call
mov
inc
in
or
sub
cmc
cmpb
pop
sub
jmp
push
mov
in
mov
mov
xorl
loopne
pop
push
jge
adc
scas
mov
fnstsw
notl
push
xor
loop
and
push
adcb
jno
aaa
ss
repnz
pop
push
fisubrs
ljmp
pop
mov
stos
mov
test
out
dec
cmc
pushf
paddsb
popf
push
mov
and
into
cmp
cmp
sub
iret
js
in
dec
and
popf
les
adc
pop
push
mov
sbb
push
push
xor
jmp
cmpsl
stc
mov
jnp
in
mov
mov
jo
ljmp
cs
sbb
mov
mov
inc
mov
cmp
lds
js
insb
jp
xchg
sub
enter
cmpsl
out
cld
push
testl
add
ret
pop
repz
push
mov
sub
inc
sbb
mov
cmpsl
pop
mov
imul
push
mov
out
shr
shrb
icebp
adc
aaa
notl
dec
adc
add
push
mov
sub
xor
ja
incb
das
mov
mov
imul
sbb
sbb
sbb
adc
lods
xchg
mov
push
sub
js
jge
imul
addr16
sbb
jne
pop
or
cmpl
imul
ret
in
or
adc
popf
inc
ret
in
mov
jmp
shlb
xlat
xchg
add
rcrb
andl
mov
xorl
mov
mov
int3
cwtl
sub
daa
pusha
mov
rorb
mov
sub
sbb
mov
mov
or
in
stos
test
out
subl
dec
stos
into
imul
jns
xor
dec
mov
sub
pop
mulb
pop
lock
jnp
jle
out
mov
int3
shr
lods
movsl
mov
test
pop
mov
xor
mov
imul
pop
test
cmp
dec
jp
mov
ficoml
adc
add
cmp
push
ror
push
mov
loop
sahf
add
inc
lcall
pop
lods
cmp
adc
fwait
sbb
scas
movzbl
stos
sub
popf
xchg
in
pop
push
mov
xchg
xchg
fnstsw
push
lods
push
add
iret
je
jb
jns
mov
or
cltd
iret
add
dec
xor
jns
lret
addr16
lods
popa
sub
rorl
pop
adc
mov
out
mov
into
or
rcll
sub
cs
movsb
push
adc
dec
inc
cmp
insl
push
jno
js
cs
shlb
stos
stc
repnz
fildl
add
xor
dec
sbb
or
push
jns
sub
pop
cmp
pop
loop
or
dec
push
xlat
or
xor
data16
adc
pop
es
jp
in
push
cmpsb
std
mov
sub
xchg
aad
lcall
jl
mov
icebp
cld
push
arpl
cmp
adc
sbb
out
es
sub
jp
jns
arpl
cmp
inc
push
icebp
sub
add
sub
fnop
mov
pop
loope
cmp
dec
fwait
outsb
mov
insl
xor
sbb
sub
push
and
in
jp
fldt
dec
popa
outsb
adc
data16
mov
insl
lea
aas
mov
mov
aaa
nop
mov
fdivs
push
mov
je
test
dec
bound
and
mov
enter
popf
ja
lods
mov
test
sbb
or
daa
aaa
stos
lcall
sar
jmp
aas
xor
jl
test
sbb
push
iret
or
push
adc
imul
jnp
pop
inc
dec
aam
xor
lcall
and
mov
push
xchg
movsb
mov
test
int
ret
data16
mov
add
ret
xchg
mov
push
orl
fwait
popa
aad
rclb
jb
inc
subl
jbe
cmpsl
andb
fs
sbb
stos
xorb
loop
inc
mov
pop
cmpsl
push
inc
pop
fisubl
inc
jmp
add
add
ret
push
or
mov
and
insb
sbb
mov
adc
insb
insl
add
daa
clc
and
push
pop
xchg
iret
leave
inc
cmp
inc
cmp
daa
addr16
push
mov
clc
pusha
xor
mov
sahf
mov
insb
mov
sub
lret
lock
push
lods
gs
push
aaa
or
mov
lods
mov
or
movsl
ljmp
cmc
pop
sub
das
int3
lret
scas
out
dec
jle
xor
add
xchg
xchg
mov
and
fisttpll
das
push
inc
adc
sub
mov
lcall
push
mov
push
lock
out
pop
adc
adc
enter
xlat
pop
fisttps
in
cmp
pop
cmp
push
mov
push
scas
lds
add
and
push
nop
aaa
adc
mov
pop
jmp
jmp
mov
rcrl
pop
rcpps
dec
xor
scas
mov
xlat
push
sub
and
add
imul
xlat
mov
outsb
sbb
mov
and
and
sbb
mov
test
shll
pop
test
xchg
adc
hlt
dec
das
mov
out
test
pushf
mov
or
push
in
mov
cld
and
pop
push
pop
cmc
pop
xlat
hlt
jp
loope
mov
imulb
aam
nop
mov
cmpsb
ds
or
add
sbb
in
mov
jmp
out
loop
mov
sahf
cmp
dec
test
push
out
and
aad
ret
mov
cmp
jo
jns
mov
test
dec
sahf
into
leave
push
es
test
xorl
lret
rorb
out
data16
rcrl
repz
int3
jne
add
sub
jle
xchg
inc
sub
les
lcall
sbb
lea
ss
dec
mov
aas
push
xor
enter
jo
scas
jle
hlt
mov
xchg
fwait
cwtl
add
mov
push
movsl
mov
imulb
push
pop
das
rcrl
inc
nop
or
jno
xchg
repnz
fldpi
sbb
in
out
sub
and
fiaddl
test
popl
inc
adc
sti
imul
mov
loopne
enter
rolb
cld
cmp
jno
loope
sub
call
into
adc
mov
mov
cmp
sbb
bound
cmp
adc
ror
jns
or
insl
sbb
testb
fwait
xchg
jmp
scas
inc
sub
inc
jg
xlat
imul
loopw
sub
jl
sahf
adc
orb
xchg
sub
push
push
jle
adc
cmp
mov
dec
out
jo
lock
xchg
or
dec
pop
gs
jae
xor
xchg
adc
inc
fcmovne
push
dec
test
loopne
cmp
cmp
sti
mov
outsl
lea
pop
add
call
lret
mov
loopne
addr16
mov
leave
dec
xchg
outsb
andb
push
and
jno
dec
inc
ret
js
pusha
insb
test
gs
shll
mov
bound
cmp
outsl
mov
push
subb
and
xchg
outsb
mov
incl
lds
ret
leave
ljmp
mov
ljmp
mov
xchg
inc
cmp
jb
insb
cmp
jno
ja
and
xor
mov
sub
mov
push
inc
push
jb
push
sub
push
add
shrl
adc
jge
push
ja
add
pop
incb
mov
int
imul
mov
mov
or
rorl
test
pop
pop
out
mov
test
jne
push
dec
pop
outsl
cmp
mov
aaa
mov
jb
ja
nop
and
das
lret
add
arpl
div
push
out
cli
or
xchg
cs
mov
adcl
mov
testl
mov
aam
les
fistpl
add
repz
mov
sub
pop
aaa
add
mov
es
fscale
push
leave
sub
inc
mov
cli
cmp
add
addr16
mov
sub
and
push
push
adc
or
lods
lret
aas
cltd
dec
push
outsl
or
mov
lcall
lods
rorb
jns
and
sahf
push
cltd
or
lahf
mov
xor
cli
test
mov
inc
out
sub
sbb
mov
mov
andb
xor
add
stos
pop
movsb
sbb
lock
test
adc
rolb
push
insl
test
cmp
adc
clc
es
or
ret
inc
js
in
cmp
and
sub
mov
pop
xchg
mov
stos
push
adc
xor
cmp
repnz
dec
add
jb
adc
push
jp
dec
pusha
pop
addr16
nop
out
addb
sub
sbb
or
inc
mov
xchg
xor
xchg
lods
ja
pop
rcll
stos
xchg
movb
sbb
add
push
daa
xchg
or
stc
out
push
mov
inc
push
inc
or
scas
sbb
mov
outsl
push
lock
scas
push
shrb
or
xor
adc
out
out
pop
lcall
subl
leave
add
dec
jo
cltd
pop
icebp
out
sbb
imul
into
sbb
mov
lahf
xchg
sti
loope
fldenv
shr
or
mov
mov
jmp
sbb
push
or
sub
notb
lea
popa
stc
imul
mov
jnp
sbb
push
mov
sbb
pop
popf
std
cwtl
cld
and
cwtl
mov
fwait
pop
imul
xchg
mov
orl
xchg
mov
aad
push
sahf
hlt
data16
ss
lea
lds
mov
dec
mov
inc
orl
push
xor
imul
cwtl
ljmp
aam
mov
push
sub
bound
sbb
daa
repz
pop
aam
scas
jge
push
sti
sti
push
stos
testl
add
pop
outsb
push
loope
pop
inc
pusha
pop
push
fldt
cmpsb
lods
rolb
or
cmp
mov
add
mov
data16
call
and
dec
in
and
jmp
jge
pop
sub
mov
test
sti
rorl
adc
fadds
lock
add
in
mov
cmp
add
mov
pop
jb
test
mov
xor
mull
sub
cld
cld
or
or
sbb
out
icebp
dec
das
mov
cmp
inc
sub
andb
fwait
push
inc
movsb
movsb
jae
pop
aaa
rcl
lods
test
pop
and
sub
cli
sahf
push
jbe
cmpsb
inc
jbe
push
pop
jl
push
lock
xlat
or
das
jge
mov
int3
icebp
xor
mov
dec
mov
sbb
mov
mov
mov
dec
stos
jl
out
shll
stc
mov
mov
mov
in
es
push
mov
icebp
stos
add
mov
add
pop
ljmp
mov
mov
cmp
and
jp
sub
adc
adc
xchg
lahf
stc
jmp
jle
test
test
dec
xchg
mov
xor
pop
fmulp
xchg
imul
pop
xchg
push
inc
aaa
ss
inc
out
sbb
dec
jmp
popa
inc
sbbb
or
inc
adc
scas
xor
roll
cmp
ljmp
rcll
das
mov
pop
mov
pop
stos
mov
bound
out
lds
push
push
clc
cmc
inc
fnstenv
nop
test
insb
loopne
stos
cmpl
rcrl
lea
dec
mov
mov
push
jmp
mov
sahf
inc
mov
test
imul
scas
scas
test
mov
incl
mov
idivl
inc
movb
inc
iret
and
xchg
mov
and
lret
repnz
sbb
ds
mov
cwtl
loopne
dec
bound
cld
fmuls
imul
sbb
imul
orl
jp
mov
mov
lods
pop
push
push
fwait
mov
adc
xor
mov
mov
jp
dec
es
sub
in
int3
lcall
js
add
add
aad
lods
jno
sbb
mov
inc
mov
cwtl
add
stos
jb
xorl
sub
mov
pop
sub
xchg
pop
mov
xor
adc
stc
push
fucomip
or
minps
mov
pop
ficomps
xchg
lds
xchg
imul
daa
jae
or
fcom
inc
or
mov
jg
mov
pop
lock
push
sbbb
and
add
cli
out
es
push
fidivrs
dec
pop
ja
out
or
daa
jmp
leave
cmp
in
add
mov
pop
in
cwtl
cmp
hlt
cli
pushf
jo
mov
mov
add
mov
xor
xor
fsubl
ljmp
jge
mov
cs
jb
iret
push
dec
cmpsl
repnz
les
imul
fisubs
inc
xchg
cmp
push
xlat
int
and
mov
lahf
das
shlb
xor
cmp
mov
pop
inc
or
aam
arpl
mov
sti
xchg
jmp
int3
dec
sti
cmpsb
bound
mov
inc
xchg
aas
pop
jnp
cmpsl
jno
lea
shll
in
sbb
dec
push
loop
or
sub
push
sarb
xor
xchg
scas
shrb
aam
ljmp
lcall
mov
out
fmul
stc
lods
or
or
out
and
in
or
pop
and
push
pushl
jo
dec
dec
stos
imul
addr16
rolb
loop
mov
or
in
insl
stos
lcall
aam
out
jns
lret
pop
mov
jl
sbb
shrb
jno
xchg
iret
out
sub
sbb
xchg
ja
push
fisubrs
jmp
xchg
mov
add
pop
sub
ja
cli
or
shrb
ret
out
xor
dec
pop
lcall
jns
mov
imul
in
test
imul
xchg
cmc
sbb
icebp
dec
xchg
insl
and
jns
in
inc
daa
xchg
mov
std
adc
sub
out
stos
pop
inc
je
scas
or
cmc
orb
jno
in
sar
push
mov
out
insl
in
lret
stos
pushf
inc
xor
fs
mov
in
sub
addl
mov
xchg
mov
sahf
je
cmp
bound
cmpsl
outsl
or
cmp
adc
xor
dec
inc
xlat
push
mov
out
out
scas
dec
pop
xchg
mov
loope
jo
aam
aam
lods
add
imul
js
dec
sbb
leave
or
sub
xchg
xor
xor
imul
and
pop
mov
dec
cmp
or
mov
and
xchg
call
bound
add
hlt
jp
ret
sub
out
jnp
fcoms
xchg
mov
jnp
sbb
mov
dec
mov
bound
xlat
out
xchg
inc
bound
sub
dec
cmp
and
xchg
orb
xor
jnp
movsb
dec
jnp
hlt
rcr
sbb
fdivrl
test
test
mov
mov
cli
mov
mov
mov
jecxz
dec
and
mov
popa
sbb
sbb
mov
cld
jnp
cmp
sbb
aad
in
jne
xorb
adc
jg
dec
push
inc
ret
lods
mov
lret
cmp
lea
cmp
sub
testb
pop
mov
cmp
out
dec
lret
mov
out
lods
repz
pop
lock
dec
scas
inc
mov
cmp
outsb
and
mov
mov
adc
push
or
cmpb
pop
or
scas
pop
das
pop
push
jnp
ret
int3
das
insb
test
iret
out
ja
push
shll
jle
adc
xor
push
pcmpeqw
jae
push
sub
inc
mov
sub
dec
inc
movl
push
jg
out
xor
push
and
mov
sbb
in
dec
mov
int3
xchg
cwtl
insl
add
mov
mov
push
sbb
push
nop
les
arpl
call
inc
add
shlb
sti
cmp
arpl
jmp
sbb
test
call
pop
dec
sti
das
loop
scas
stos
pop
test
xchg
lahf
subl
adc
rorb
push
inc
jge
pop
add
jl
add
popa
sahf
dec
sub
movsl
hlt
pop
and
xlat
and
rorb
add
sti
sub
rcll
add
aas
ret
mov
dec
or
in
xchg
add
lahf
cmpsl
gs
sbb
aad
mov
inc
insb
test
into
idivl
cwtl
enter
mov
bound
out
jecxz
int
mov
mov
ja
stc
or
mov
sub
xchg
xchg
mov
out
negl
sarb
mov
pop
sbb
mov
fisubrs
cs
dec
jl
out
cli
sarb
repnz
add
push
mov
or
int
lret
xchg
mov
shrl
push
xchg
pop
movsb
ja
pop
cmp
outsl
lock
cmp
fdivrs
pusha
or
pop
jae
ret
pop
and
pop
pop
cld
xorb
insb
sbb
cmc
mov
clc
push
xchg
jno
mov
inc
popl
mov
add
sbb
add
xor
jbe
jge
pop
inc
jae
inc
pop
pop
xor
lahf
inc
and
adc
out
fisttpl
push
mov
adc
out
mov
sahf
cmp
cmp
pushf
cmc
andl
or
push
cld
repz
or
outsl
stos
idivb
lret
pop
data16
dec
and
inc
movsb
sbbb
inc
sbb
sbb
inc
icebp
mov
fidivrs
dec
out
or
push
and
xlat
outsl
xchg
mov
jl
inc
rorb
test
fdivrs
push
mov
mov
jnp
and
push
add
mov
mov
pop
cmp
push
xchg
outsb
and
jg
sub
pop
pusha
fcoml
jno
iret
inc
loopne
cmpl
bound
and
int3
jne
mov
movsb
xor
sub
rorl
mov
cmp
pop
sub
inc
ljmp
lods
fdivs
imulb
mov
mov
test
rcll
xchg
sbb
sarb
mov
mov
out
enter
xchg
push
mov
cwtl
into
cli
out
dec
xchg
and
into
scas
movsb
cmc
js
mov
inc
cwtl
fwait
xchg
test
rcrb
inc
xor
cs
popa
loopne
or
test
xchg
scas
mov
das
mov
pop
das
insl
fcoml
inc
jle
pop
push
lcall
andb
lret
mov
lcall
sub
inc
pop
push
test
and
scas
stos
int
inc
mov
mov
add
rol
adc
mov
fsubrl
rol
loopne
arpl
lock
cmp
pop
leave
in
shll
or
loope
addl
out
fmuls
xchg
add
and
out
subl
sbb
sub
push
std
insb
pop
test
dec
push
cmp
push
push
cmpl
gs
test
or
mov
and
enter
xlat
xchg
xchg
dec
loope,pt
not
ret
nop
mov
adc
movsl
push
inc
lret
or
cmc
and
push
lea
inc
cmpsl
mov
lcall
es
hlt
mov
pop
nop
xchg
adc
mov
jg
push
mov
setbe
lret
cmpsb
pop
mov
rolb
and
xor
lock
push
in
xlat
jmp
sti
jg,pt
addr16
ja
pop
js
js
pop
rorb
xchg
imul
pop
fidivrl
xchg
add
push
and
out
ss
loopne
insb
ficompl
jl
into
cmp
mov
negl
ret
pop
dec
scas
xor
mov
jns
dec
adc
xchg
fprem
fmul
imul
stos
shll
or
xchg
lea
inc
ds
push
repz
add
pusha
inc
adc
call
lcall
movsl
movsl
cmp
pop
pop
xor
push
and
mov
or
xchg
bnd
int3
loop
or
je
cmp
lahf
lcall
sti
popf
add
nop
push
aaa
daa
lcall
scas
jnp
push
test
ss
repz
loop
jl
ds
dec
test
mov
inc
jle
lea
scas
and
fldt
push
mov
mov
pop
imul
cltd
xchg
aaa
out
add
lods
xchg
and
push
push
dec
divl
ficoms
wrmsr
cmpsb
jl
jmp
mov
cltd
ror
sahf
jns
push
hlt
mov
int3
mov
and
sahf
push
in
lret
call
fidivs
sbb
jl
pop
gs
pop
pushf
pop
test
cmp
fdivs
adc
dec
pushf
cmp
sbb
cli
xor
push
cs
jle
repnz
xor
lods
mov
dec
sub
lock
cmp
aad
ss
adc
push
insl
sbb
sahf
lret
and
shl
orb
push
inc
mov
mov
fldenv
inc
sub
or
cmp
dec
pop
or
mov
or
dec
scas
xor
mov
and
mov
ret
jecxz
fs
popf
clc
sbb
sbb
sahf
mov
lret
test
lret
ss
and
insl
inc
roll
out
and
lods
popf
loop
gs
or
test
push
in
notl
pop
repz
popf
test
mov
loop
xchg
and
pop
hlt
movb
or
stos
jns
stos
push
adc
jg
xor
mov
bound
mov
iret
jne
xchg
push
lock
aas
iretw
mov
ret
mov
aas
push
push
cmc
add
insl
daa
insl
stc
inc
jne
push
xchg
movsb
insl
sti
xor
das
add
dec
xchg
in
mov
push
mov
fwait
fwait
das
sub
imul
sub
lahf
push
inc
mov
mov
push
xchg
icebp
mov
ds
push
xor
pop
xchg
lods
and
movsb
stc
dec
inc
in
rolb
ffree
cwtl
dec
xchg
rol
fbld
dec
mov
mov
sbb
xchg
ss
jmp
or
or
jns
arpl
and
pusha
lds
cmpsb
xchg
repnz
mov
mov
or
call
and
test
call
dec
mov
adc
jnp
ror
pop
jge
cmpsl
mov
dec
push
pop
push
andb
push
cmpsb
popa
fisubs
outsl
and
mov
ljmp
test
test
bound
jle
mov
in
mov
adc
pop
sbb
mov
adc
cmpsl
ret
mov
and
cwtl
leave
mov
int3
inc
mov
mov
fnstsw
fidivrs
sub
dec
nop
add
test
ljmp
loopne
sub
fdivl
pop
in
mov
mov
jp
jecxz
mov
mov
inc
jmp
mov
mov
sti
dec
cmp
cmpsb
cmp
fstpt
mov
out
dec
lret
inc
fs
mov
pop
and
std
pop
pop
hlt
aad
mov
dec
insl
sbb
mov
and
jle
pop
rorl
enter
jle
mov
pop
cld
adc
push
sub
mov
jns
xlat
jp
jge
js
outsl
fists
punpckhbw
popf
ljmp
test
xchg
shl
xchg
pop
pop
pop
sbbb
cmp
or
gs
bound
shlb
stc
xor
ds
and
pusha
in
in
in
and
cmpsl
jnp
cmp
jne
push
pushl
sbb
mov
push
mov
xchg
xchg
pop
sub
xchg
mov
in
mov
nop
repnz
adc
jle
cltd
jmp
xchg
pop
add
pop
es
jmp
stc
or
mov
popa
inc
push
mov
add
pop
sub
pop
add
gs
push
cmp
ljmp
fistpl
mov
punpcklwd
scas
ds
xor
mov
jecxz
ret
setb
loopne
sub
fnstcw
fiadds
xchg
mov
push
movsb
xor
lsl
cmpsb
push
cmp
out
cmpsl
add
and
insb
mov
mov
call
mov
stos
sti
aas
add
cs
adc
add
jno
fnstenv
mov
out
ss
out
lret
sqrtps
jecxz
mov
add
stos
or
add
sub
push
std
and
mov
adc
fcmovnu
hlt
mov
mov
hlt
outsl
jno
mov
lods
fcompl
jnp
leave
in
add
xchg
add
xor
int
mov
shll
pop
loop
adc
mov
push
mov
jo
insl
xchg
in
adc
lret
ficoml
nop
xchg
fcom
add
loope
sub
pop
cmp
add
shlb
bound
popa
sbb
xchg
nop
xchg
xchg
pop
dec
inc
loopne
adc
xor
das
add
inc
dec
test
mov
push
lret
mov
cmp
jo
stos
in
pop
outsl
aaa
pop
movsl
leave
ss
sub
out
inc
pop
das
lods
jb
adc
cmp
xchg
leave
shll
out
dec
inc
imul
clc
xor
fmuls
xchg
sub
iret
xor
test
xchg
sti
pop
pop
jae
aad
fsubrs
adc
sub
jb
xchg
cmp
jae
dec
mov
jae
out
into
or
ficomps
lahf
adc
sti
jge
lret
pop
mov
cli
jbe
add
sahf
in
fcompl
popa
xchg
fistpl
mov
push
inc
cld
fistps
inc
insl
fdivl
test
push
xor
mov
or
pop
movsb
cmp
loop
je
sbb
mov
lds
mov
xchg
aam
shl
sub
in
rcl
jle
lods
aad
jae
mov
xchg
add
das
and
inc
sbb
out
xchg
jne
sub
aad
inc
push
dec
mov
sbb
mov
pop
cmpsl
sbb
stos
dec
xchg
jge
sub
or
ror
pusha
dec
mov
icebp
loopne
jno
dec
mov
lcall
outsb
cmp
jb
push
je
les
pop
push
cld
inc
je
std
lcall
rol
subb
jne
add
pop
and
pop
mov
lea
push
sbb
bound
sti
cltd
pop
sbb
je
push
jmp
sahf
ficoml
sub
sbb
pop
adc
mov
xchg
aas
push
cmp
inc
std
push
clc
xchg
inc
shrb
rolb
cmp
pop
enter
cmp
lret
xchg
xor
add
jp
test
mov
js
cmp
jl
xchg
in
mov
rorb
xor
repz
clc
jb
repnz
aam
loope
mov
sbb
sbb
ljmp
mov
jno
fcmovnbe
xor
pusha
or
ret
sub
aas
aas
push
push
std
dec
cmpl
mov
inc
pop
mov
ja
outsb
cmp
dec
push
and
cmc
jg
test
sbb
sub
mov
adc
negl
aam
rclb
stc
mov
hlt
sub
lret
pop
sti
loope
or
mov
or
je
add
lcall
insb
mov
lock
mov
subl
or
adcb
cli
and
and
mov
pop
stos
outsb
mov
xor
fsts
inc
push
and
and
and
adcl
pusha
mov
data16
loope
or
lcall
jo
mov
fsubrs
movsb
daa
add
sahf
push
out
or
mov
imul
movsl
dec
cmpsb
mov
pop
dec
xchg
nop
aaa
addr16
mov
imul
mov
or
jns
out
adc
ss
adc
mov
xor
shlb
lret
lret
es
test
xor
icebp
jle
popf
jmp
xchg
xchg
mov
xchg
mov
mov
cmpsl
sbb
fdivrl
popa
lea
pop
adc
push
int
sub
cwtl
xchg
psraw
mov
push
mov
add
in
mov
dec
mov
jbe
clc
xchg
and
pop
repz
pop
sbbl
movsl
pop
xor
cmp
fmul
and
lods
sub
sbb
jo
add
gs
outsl
fistps
mov
xor
in
mov
mov
xchg
or
add
arpl
mov
cmp
inc
mulb
outsl
sub
mov
stos
nop
in
jae
adc
mov
les
test
mov
add
sets
mov
pusha
add
aaa
cmp
xchg
into
mov
js
xchg
lds
jae
mov
fcoml
mov
pop
push
xchg
int3
cmp
mov
jmp
jg
adc
push
sbb
cmp
lahf
push
xchg
pop
shl
xlat
hlt
fstpt
mov
mov
adc
xchg
daa
std
ret
aas
adc
cmp
adc
cmp
cltd
adc
xchg
dec
sbb
add
call
fdiv
pop
popf
add
mov
pop
cltd
push
in
mov
cmp
jno,pn
scas
outsl
inc
push
push
push
in
mov
fnsave
repnz
mov
repnz
movsb
out
mov
adc
jmp
enter
jge
mov
pop
push
out
cltd
sub
jns
cmpsb
hlt
aas
mov
lods
sbb
in
push
clc
inc
enter
jbe
lds
mov
push
jae
push
insl
pop
push
js
aam
mov
sub
sarl
push
lds
mov
out
jns
insl
adc
popf
xor
mov
cs
jno
inc
xchg
adc
movsl
or
scas
fistpll
sti
sub
aaa
cmpsl
pop
xchg
cmpb
rorb
add
pop
adc
sbb
pop
or
xchg
push
mov
add
iret
push
hlt
fwait
out
adc
xor
insl
in
rep
dec
push
repz
ret
je
in
or
cmp
dec
rep
out
loop
adc
pop
push
and
enter
insl
insb
lods
hlt
aam
cli
mov
add
inc
shlb
mov
sub
hlt
or
cli
pop
adc
push
mov
cmp
cmpsl
lods
in
and
pushf
push
out
pop
loopne
xchg
push
lods
adc
mov
jmp
xor
xchg
jnp
rclb
hlt
addr16
add
xchg
pop
xchg
adc
xor
sbb
js
xchg
xor
es
sahf
mov
inc
mov
pop
xchg
lods
cmp
xor
mov
mov
pop
testb
mov
testl
sub
xchg
js
jle
movsl
mov
dec
dec
dec
add
adcb
test
rolb
fsubp
in
or
mov
packssdw
out
stc
hlt
pop
sbb
sbb
cltd
cmpb
or
xchg
fbstp
int3
cs
jae
mov
loopne
inc
mov
fldcw
rcll
adc
cli
ja
xchg
dec
mov
es
jl
and
mov
test
mov
sti
cmp
clc
js
cltd
sbb
adc
fmul
bound
lods
xor
mov
iret
lds
mov
sahf
or
mov
loop
dec
mov
pop
sbb
loope
test
fsubr
push
adc
mov
enter
add
mov
or
xor
jbe
movsb
dec
mov
repnz
jo
add
daa
and
sbb
int3
stc
xor
hlt
pop
into
in
add
arpl
adc
outsb
add
xchg
enter
outsb
adc
dec
and
add
pusha
push
js
out
xchg
cmp
callw
cltd
push
bnd
and
mov
test
xor
sub
push
rolb
cld
dec
fs
lds
add
cwtl
insb
mov
jb
dec
scas
adc
jecxz
imul
out
ss
inc
insb
int3
pop
inc
test
fistl
movsb
xor
or
scas
xor
mov
mov
std
mov
cmp
pop
in
jae
push
add
xchg
insl
aas
test
test
outsl
daa
ja
push
cmp
inc
ljmp
lea
sahf
sbb
xchg
xchg
loope
icebp
es
pop
aad
js
xchg
inc
out
mov
add
dec
dec
roll
add
lods
jbe
inc
mov
orl
fisttps
leave
cltd
aad
nop
out
js
dec
sub
add
repz
jg
or
or
mov
mov
cmp
mov
lds
jb
gs
adc
inc
add
xchg
xor
sub
adc
bound
or
pushfw
jecxz
inc
pop
mov
push
xor
iret
in
pop
int3
pop
xlat
lock
pusha
lods
inc
lds
stc
inc
scas
imul
pop
mov
mov
push
pop
aaa
popf
shrl
pop
or
sti
push
lret
dec
and
pop
int3
adc
mov
sub
pusha
sub
jl
and
pop
push
iret
xorl
std
sub
out
pop
adc
ficoms
mov
cmp
push
and
jg
das
cmpsb
loop
pop
ja
shrl
lcall
xchg
dec
jo
movb
inc
adc
lea
in
mov
lds
xor
mov
pop
lea
or
ja
shl
and
shll
in
sub
fiaddl
pop
clc
mov
insl
jmp
cltd
inc
ja
push
lret
push
jmp
shrl
jp
cld
outsl
cmp
xchg
jmp
dec
and
xchg
push
loope
mov
jo
in
xor
cmp
or
sbb
mov
dec
fsubrl
repnz
pop
inc
ja
xlat
popa
repz
hlt
and
add
repz
nop
xchg
dec
inc
sub
cmpsl
xorl
ds
inc
cmpsb
add
repnz
mov
adc
out
and
in
iret
xchg
rorb
shll
jno
mov
mov
sbb
cmp
xor
sub
sbb
frstor
add
aas
aas
add
add
mov
mov
outsb
mov
push
sub
fcompl
cmp
sub
lret
mov
repz
xor
stc
mov
cmp
clc
sbb
xchg
jnp
xchg
and
xchg
pop
fsubl
ljmp
jge
xchg
icebp
fdivrl
cmp
xchg
test
shrb
xor
mov
call
inc
ret
mov
or
ja
mov
ss
fwait
mov
movsl
lahf
loope
adc
inc
outsl
testl
and
dec
insb
sbb
ja
out
jle
fidivs
ds
loope
arpl
loop
lods
mov
shlb
hlt
lahf
mov
sbb
mov
cli
jbe
sub
lahf
sbb
pop
es
das
lahf
daa
pop
mov
cmp
stos
adc
adc
jnp
and
insb
lahf
inc
insb
xchg
xchg
cmp
mov
jb
pop
ror
jns
int3
out
in
pop
cs
das
jne
movsl
sarl
fmull
sbb
inc
pop
insl
scas
je
mov
insb
pop
daa
pop
sbb
aaa
ret
lods
popa
inc
aaa
or
es
add
jne
and
les
mull
fwait
or
xor
roll
lret
ja
push
iret
les
fwait
inc
dec
cmpsl
xor
lret
fistpl
xchg
push
adc
xchg
cmp
dec
push
mov
fstps
rcll
ja
fisubl
push
cmp
es
pop
inc
push
popa
push
mov
sub
cmp
ret
push
ja
pop
ds
rcr
xlat
aaa
lds
dec
mov
adc
lds
mov
ret
shll
mov
ja
cmp
fbld
add
fbld
stos
pushf
mov
sub
push
mov
jecxz
sahf
fdivs
cwtl
mov
mov
insl
aam
push
rclb
cmp
mov
cmp
data16
inc
aas
or
mov
mov
mov
das
push
dec
insb
mov
jbe
push
sbb
pushf
fsubrl
pop
adc
push
ret
sahf
xlat
nop
pop
push
out
pop
xchg
lods
jns
cs
mov
adc
xor
jae
sbb
xor
jno
es
loopne
push
adc
mov
outsl
insb
repz
jmp
lock
bound
jmp
in
dec
add
jno
aam
stc
insb
mov
divb
cmp
loopne
out
andl
stc
mov
rcrl
pusha
into
sub
ret
and
fcmove
ja
arpl
mov
push
fnstcw
sahf
test
mov
and
mov
fdivrp
xchg
out
lods
sub
mov
add
daa
lret
in
sti
fisubrs
jno
inc
push
ja
inc
ret
aas
xor
loop
mov
das
mov
test
arpl
push
or
inc
popa
lods
in
add
or
clc
sbb
out
mov
jns
push
arpl
in
mov
dec
les
dec
mov
adc
stos
sbb
in
cltd
adc
cwtl
push
mov
sbb
jo
lds
inc
dec
pop
gs
fimuls
in
xchg
fs
out
ja
jae
xchg
mov
push
cs
cmpsb
push
in
loopne
xchg
pop
pop
inc
adc
sti
out
add
in
mov
add
adc
adc
mov
cmp
mov
stos
dec
mov
mov
fucomi
sahf
cwtl
mov
push
bndstx
sub
sbb
imul
mov
or
es
loopne
insb
jge
out
cmpb
push
test
scas
add
jecxz
fsubr
insb
test
mov
stc
popf
leave
or
or
mov
adcl
lret
mov
test
repnz
cmc
cld
dec
add
in
sar
jmp
cmpsl
data16
push
mov
xchg
lock
in
mov
lret
imul
or
aaa
fcomp
hlt
xchg
scas
xchg
jo
mov
sahf
hlt
jae
pop
sbb
movsb
pop
cld
pop
add
add
jne
mov
xor
call
xchg
add
xchg
sti
add
mov
inc
jg
mov
ret
mov
ret
pop
cmp
and
mov
fistpll
push
or
sbb
xor
iret
cltd
mov
decl
sub
mov
xlat
and
in
or
xor
aaa
fisttpl
ds
mov
shrb
shll
mov
repz
rcll
test
or
dec
imul
cwtl
icebp
daa
dec
jp
cmpsl
xchg
ss
pop
and
icebp
or
fsub
adc
cld
outsl
mov
jb
mov
int
push
push
xchg
xchg
call
mov
or
lock
lahf
fcomp
fldt
jle
jb
jmp
cli
pop
popa
mov
and
daa
test
xchg
sbb
cld
jne
lds
cmp
xchg
adc
mov
mov
imul
adc
pxor
add
xor
pop
dec
or
shlb
out
jg
xorb
fadds
xchg
sbb
jae
mov
repnz
movsl
push
sbb
orl
jle
jle
sar
add
push
mov
inc
inc
rclb
jle
sbb
xchg
sbb
inc
js
mov
pop
loope
hlt
mov
insb
es
mull
cmpb
mov
in
fsubr
cld
or
push
cs
hlt
mov
sub
sub
sbb
add
stc
adc
adc
insl
stc
inc
mov
shl
bound
rcll
add
pop
inc
imul
inc
sub
xlat
fnstcw
and
fcomip
clc
add
test
push
sbb
push
stos
lret
jge
repnz
cmp
loope
nop
test
mov
mov
mov
add
es
mov
xchg
in
mov
mov
or
cmp
xchg
pop
gs
leave
in
ja
nop
aaa
pop
stos
stos
daa
jmp
fdivrs
or
pop
lahf
loopne
xor
ss
repz
ds
dec
push
xchg
lock
push
lret
sahf
pop
xor
sarl
scas
jmp
jb
lret
cltd
mov
mov
inc
cmp
mov
or
adc
rclb
jge
es
mov
repnz
stos
hlt
adc
push
dec
jne
iret
aad
jge
xchg
mov
rcr
push
imul
jge
call
das
xchg
mov
lods
add
pop
pop
adc
and
inc
pop
push
dec
fistps
aad
add
jecxz
into
and
adc
cmpl
pop
pop
pause
out
shll
push
xor
inc
jg
insb
mov
mov
mov
jae
push
mov
ret
icebp
data16
outsb
nop
jb
loopne
mov
test
add
lock
cs
adc
bound
and
pop
xor
lahf
and
cs
mov
test
xchg
out
push
or
jne
mov
push
sub
cld
fiaddl
and
cmpl
in
out
cwtl
dec
and
je
jmp
aas
jns
jg
fs
movsl
in
lock
repz
fildl
inc
out
js
fcomi
lahf
sub
lret
push
add
pop
test
mov
ror
sbb
pusha
fwait
mov
ret
mov
xchg
fcomps
ds
call
cmc
sub
scas
ss
insb
ror
xor
sub
push
mov
jb
and
sub
ljmp
sarl
mov
push
jp
in
xchg
shlb
js
push
or
lcall
push
lods
xchg
int3
cmp
adc
and
mov
clc
aaa
mov
sbb
insl
jno
mov
and
jge
sar
das
pop
arpl
std
jecxz
or
xor
add
push
jbe
rclb
mov
into
stc
movsb
inc
shr
xchg
scas
mov
pop
idivb
lret
jg
addr16
fstpl
in
mov
mov
test
ret
aam
xor
mov
inc
insl
add
or
outsl
cmp
faddl
rol
imulb
mov
fdivl
cmpsb
cld
jecxz
xchg
dec
movsl
jl
insl
cmpsl
xchg
mov
out
mov
xor
pop
stos
loop
mov
cmp
sub
in
add
es
xchg
mov
xchg
cmp
sbb
lds
jl
mov
mov
xor
mov
jecxz
mov
imul
xchg
out
sub
inc
inc
repz
or
hlt
daa
push
add
pusha
popf
lahf
mov
mov
mov
mov
gs
or
push
dec
cmp
mov
ss
sub
or
push
mov
sbb
jmp
push
push
popf
js
push
fisttps
aad
sbb
in
or
mov
xor
int3
iret
sbb
testl
cmp
sub
mov
mov
push
adc
rcrb
cwtl
cmp
hlt
mov
and
outsb
and
aad
ret
idivl
pop
insl
out
std
push
out
lret
dec
adc
adc
push
or
mov
adcb
repnz
into
mov
sub
mov
dec
jbe
push
sub
ljmp
mov
iret
cmp
in
sub
mov
rolb
jp
mov
xchg
icebp
and
mov
mov
pushf
gs
dec
sbb
mov
push
cmc
inc
add
adc
push
stc
repnz
out
adc
xchg
sub
mov
mov
out
fs
imul
mov
outsb
dec
jb
fcoml
negb
les
sub
jle
xchg
daa
jo
pop
out
adc
fistpll
out
inc
fcmovb
add
lods
push
inc
push
cmc
pop
cmp
cs
hlt
sbb
ja
cmp
into
aaa
mov
jp
pop
negl
mov
cmp
adc
mov
test
gs
outsl
lock
fwait
cmp
cmp
ljmp
stos
adc
mov
js
sarl
shl
ja
cmpsb
test
ds
mov
mov
les
mov
pusha
or
xor
insl
jmp
lea
clc
or
and
stc
movsb
movsb
mov
lahf
pop
xchg
shr
and
out
push
cmp
lea
fbld
jg
lds
mov
das
cmpb
ret
sbb
or
flds
ret
das
ret
cmp
cs
mov
aad
cmp
insb
dec
fisttpll
int
aaa
test
mov
out
mov
iret
push
push
lods
add
xchg
sub
aam
or
sub
out
daa
enter
outsl
sahf
sahf
sbb
mov
nop
jle
aas
adc
lahf
mov
xchg
in
push
jbe
daa
cltd
test
popa
nop
mov
lods
out
daa
inc
xchg
pop
shlb
sub
xor
mov
pop
test
mov
cli
xor
ds
xor
fnstenv
fiadds
aas
mov
rcrb
fstpl
and
adc
adc
js
cmpsb
jecxz
into
push
mov
pop
insl
or
scas
stc
mov
into
mov
dec
dec
mov
divb
out
mov
jmp
or
mov
cltd
out
dec
add
mov
jge
es
sbb
and
pop
sbb
jae
aam
jnp
pop
fldl
es
add
lahf
pop
lahf
not
fsub
push
fs
incl
jp
daa
sub
jle
filds
adc
pop
mov
aas
or
adc
lahf
in
in
scas
outsl
dec
loope
adc
xchg
popf
enter
or
dec
xchg
and
adc
pop
outsb
outsb
jl
shll
jnp
inc
mov
or
inc
jg
js
push
jmp
mov
test
mov
mov
mov
mov
daa
pushf
cltd
xchg
scas
cmp
rorb
push
add
rol
sbb
xchg
fldenv
mov
mov
out
push
and
mov
xor
push
fnstenv
insl
jbe
mov
ret
sub
and
enter
imul
in
scas
scas
imul
sbb
mov
adc
xchg
ss
and
jo
cmpsl
out
fsubl
and
or
mov
xchg
or
addr16
push
movsb
insb
adc
minps
mov
adcl
cmp
push
pop
and
push
pop
fadd
shl
in
mov
dec
mov
push
dec
inc
dec
sbb
out
adc
mov
aad
arpl
xorl
pop
mov
push
cmp
enter
xor
sub
pop
sbb
leave
dec
dec
pop
pop
int3
fs
idivl
add
iret
cs
scas
sub
scas
lret
mov
or
in
shrd
fcomps
popa
lea
xor
mov
lcall
jnp
inc
xchg
loop
call
adc
mov
mov
shlb
enter
sbb
das
push
push
aad
aad
push
dec
int
cmp
ficompl
ds
das
mov
mov
lret
orb
inc
xchg
in
in
loop
jmp
aaa
pop
fmull
inc
ds
in
mov
mov
adc
addr16
sub
fcoml
fdivl
pop
fimuls
shll
mov
cmp
aas
adc
jbe
sbb
fisubrl
jle
xchg
fwait
or
test
insl
addr16
int
clc
call
xchg
pop
mov
jnp
mov
jne
jnp
fcoml
std
movsl
mov
cmp
push
scas
xlat
adc
js
cmp
movsb
cmp
inc
pusha
das
out
cmpsb
popw
pop
mov
nop
jb
stc
xchg
or
adc
sub
sti
push
inc
sahf
xor
pop
cli
lret
dec
add
mov
or
fsubp
fnsave
es
pop
add
xor
inc
addb
sbb
and
and
hlt
sub
ret
cmp
add
and
imul
pop
das
sbb
sbb
js
test
ret
pop
ror
jno
cld
pushf
or
xchg
push
lock
and
pop
ja
imul
or
or
jno
push
dec
or
arpl
mov
into
mov
jb
pop
outsl
stos
scas
pop
mov
cmpsl
dec
xchg
adc
sbb
jne
repnz
cmp
nop
push
add
push
jle
jge
pop
cmp
or
std
scas
fistpl
pop
aas
add
sbb
lds
bound
and
mov
mov
xchg
daa
js
mov
mov
xor
out
jno
icebp
mov
shlb
cli
cmp
adc
inc
aam
xchg
outsl
outsl
clc
xor
shl
push
sbb
inc
fnstenv
fsubrs
push
jg
and
loope
dec
lret
and
inc
aas
sarb
gs
fisubrl
jb
aaa
mov
push
cld
jp
cmpsl
sbb
rcr
jb
out
push
dec
inc
xlat
mov
repz
pop
cmp
xchg
fwait
adc
push
push
mov
pop
mov
outsl
jno
or
adc
or
jns
jle
push
mov
xchg
fdivrl
cmc
cli
xor
inc
repz
jmp
mov
push
hlt
push
mov
mov
jmp
and
cwtl
andb
push
and
mov
mov
dec
pop
call
and
lcall
xlat
in
adc
xchg
xchg
cmp
stos
fists
arpl
dec
lock
jbe
movsb
fisubs
pop
and
data16
repz
pop
dec
aas
fwait
and
cwtl
push
dec
adc
iret
lcall
call
push
fbld
fs
jle
je
call
int3
jmp
mov
cmp
in
xchg
nop
jp
out
or
inc
stos
mov
push
in
cmp
movsb
push
mov
aaa
pushf
gs
clc
cmp
pop
addr16
lds
xor
jle
fwait
andb
xor
mov
jecxz
fiadds
movsb
mov
cmp
xchg
pop
pop
dec
loopne
mov
mov
das
loop
mov
mov
faddl
or
and
repnz
mov
shrb
sahf
and
push
outsl
lret
jae
mov
push
mov
xchg
loope,pn
pop
cmpsb
lret
mov
mov
int3
andl
mov
push
cmp
sub
pop
out
adc
pop
inc
jbe
mov
or
add
jae
mov
cmp
pop
mov
sub
shlb
lods
mov
enter
sbb
out
adc
in
mov
frstor
scas
add
cmpsb
int3
xchg
pop
xchg
cmp
lods
push
pop
push
scas
cmp
push
mov
data16
inc
cmc
or
cmp
cli
add
sub
xbegin
jbe
mov
inc
add
scas
dec
scas
int
push
mov
int
mov
test
xor
lret
enter
cmpsl
fs
arpl
sbb
mov
call
jg
ss
rcrb
ja
insl
fstl
inc
jbe
out
sub
sub
lods
pop
stos
pop
jg
adc
add
jecxz
and
lods
imul
stc
xlat
mov
lcall
fcmove
imul
cmp
insl
pmaxsw
pop
or
mov
xchg
int3
inc
and
adc
mov
shrb
cmp
xor
scas
mov
ret
xchg
into
cmp
gs
push
mov
mov
lea
call
mov
call
lret
push
out
int
or
xor
push
xor
popa
and
mov
jmp
push
xor
xlat
push
dec
fsubl
lcall
dec
test
stos
xchg
adc
jo
push
fstps
mov
cmpsl
out
jp
mov
xor
mov
loop
fwait
pop
adc
cmp
fwait
movsb
jmp
fadds
cli
sbb
xlat
sbb
xchg
mov
sar
or
sub
xchg
aaa
pop
mov
movsl
in
push
pop
fwait
sub
cmp
xchg
cmp
lcall
outsb
idivl
test
dec
gs
cli
and
std
cmp
loopne
in
aad
sbb
rcrb
jg
insb
adc
in
lret
mov
xchg
ficoml
aaa
xchg
and
xchg
popa
sarb
add
add
movsb
jno
aad
daa
dec
sbb
push
out
and
dec
mov
test
in
cwtl
and
mov
scas
loop
leave
sbb
jo
mov
outsb
test
push
jl
loope
and
push
or
jae
mov
xchg
mov
and
es
sbb
lods
cwtl
std
clc
dec
xchg
cwtl
shll
xor
xor
xor
push
pusha
ret
or
xchg
or
std
and
in
sbb
addl
push
les
into
and
mov
adc
es
mov
mov
test
adc
popf
aad
jle
fnstcw
call
in
hlt
imul
mov
lds
adc
movsb
and
enter
adc
xchg
xadd
ljmp
aaa
add
dec
loopne
ret
rorb
xor
pop
cli
loop
xchg
sbb
cmp
add
ljmp
jl
bound
andl
sbb
pushf
lds
subb
add
insl
ret
and
int
jne
rorb
mov
popf
stos
imul
dec
xlat
fld
dec
test
scas
in
mov
hlt
xchg
leave
loopne
fdiv
dec
inc
mov
or
inc
outsb
mov
adc
int3
jns
je
in
je
std
out
scas
sbb
cmc
in
in
test
pop
xor
adc
repnz
adc
jnp
movsb
test
fadds
out
sub
xor
nop
cmp
jl
decb
xor
xchg
add
data16
sbb
push
xchg
test
stc
clc
ds
add
adc
cmp
rclb
ljmp
jmp
xchg
cmpsl
xor
inc
arpl
jbe
sub
aam
jge
jbe
sbb
push
sarl
cltd
lret
aas
decl
pop
in
xchg
mov
jg
aam
jecxz
daa
pop
test
xchg
testl
leave
daa
push
push
popa
sahf
andb
cmp
push
sub
mov
hlt
cmp
dec
push
cmp
xchg
outsl
and
or
test
mov
jo
jmp
cmp
sub
mov
and
sub
outsb
test
pop
hlt
dec
pop
scas
mov
sub
mov
cmp
pushf
les
sub
ret
cmpsl
xchg
test
push
adcl
jp
sbb
imul
inc
pop
incb
jle
adc
loop
fiaddl
mull
sbb
sub
pushf
mov
enter
bound
lar
lret
push
lret
lret
jge
mov
or
fildll
roll
jecxz
mov
push
mov
movsb
clc
dec
out
sbbb
xlat
sbb
pop
mov
bound
inc
push
and
cwtl
rorb
dec
lods
dec
mov
xor
jmp
pop
daa
cld
fwait
add
cmp
aam
out
dec
clc
int
outsl
pop
inc
repnz
sub
xchg
sarl
repz
mov
push
ret
mov
mov
cmc
ja
push
aam
pop
lds
sbb
or
pop
sbb
xchg
popf
pop
xor
ss
stc
adc
jns
adc
fstpl
push
loop
aaa
sti
lds
inc
sub
out
mov
loopne
push
daa
stos
pop
mov
mov
cltd
cmpsl
mov
inc
imul
pop
aas
mov
cli
push
mov
les
cmp
xchg
es
ror
xchg
test
mov
mov
xchg
jb
out
stos
push
push
ljmp
sti
shl
addr16
hlt
and
inc
in
dec
xor
imul
enter
mov
xchg
pop
xchg
ret
mov
or
sbb
push
cmp
call
add
lret
sbb
or
xchg
jne
arpl
push
repnz
xchg
pushf
fcoml
stc
js
push
insb
inc
jmp
sti
std
ds
arpl
jb
cmp
xchg
js
or
nop
lods
cmp
loop
jbe,pt
fmull
jge
sbb
cmc
mov
in
addb
inc
jae
xor
sub
fcoml
xor
cmp
push
in
pushf
mov
dec
lahf
sub
call
cwtl
sub
test
sub
ja
add
inc
push
pop
cmp
cmp
dec
jl
out
fs
scas
or
jnp
mov
je
push
lods
sahf
negl
outsb
repz
arpl
dec
xchg
lds
aas
leave
add
out
ljmp
movsl
filds
nop
gs
icebp
push
fwait
fs
imul
bound
pop
testl
xchg
add
jmp
adc
jo
mov
xchg
std
test
push
fsubs
pop
and
jbe
or
push
popf
mov
add
inc
dec
xor
es
es
mov
mov
sahf
cmp
sub
pop
dec
xor
adc
test
mov
push
xchg
sbb
sub
mov
mov
mov
out
pop
push
lcall
fisubrs
adc
sbb
in
int3
outsb
loope
cmp
ret
es
flds
push
or
push
dec
cmpsl
inc
cmp
xchg
repz
lds
inc
fwait
mov
cwtl
mov
adc
clc
inc
je
add
add
or
ret
outsb
dec
repz
mov
mov
cmp
add
gs
shrb
xchg
out
rcrl
inc
mov
inc
push
sub
dec
add
dec
add
push
xchg
pop
lock
fwait
jno
mov
or
jno
shr
daa
jle
mov
dec
ret
or
bound
int3
mov
xor
hlt
lcall
popf
push
dec
frstor
sti
xor
sbb
xor
popf
push
loopne
cmp
add
rcrb
mov
add
add
dec
shll
fidivs
es
daa
or
jne
and
cli
dec
jl
push
cmc
imul
mov
int
jnp
lods
aam
out
jne
mov
subl
fildl
bound
pop
lahf
sahf
cmpb
sbb
pop
or
push
mov
sti
ljmp
lret
inc
sbb
xchg
sahf
pop
cmc
jl
dec
gs
mov
mov
out
shrl
inc
jecxz
push
loopne
cmpsl
pop
lahf
out
inc
loop
jbe
cmp
push
xor
mov
stos
cmp
int
jns
pop
pop
mov
xchg
movsb
pop
jno
add
xchg
mov
lods
gs
aaa
orl
xlat
inc
sbb
add
dec
lret
jnp
roll
cmpsl
xlat
je
add
cmp
notl
jge
xor
dec
xor
cmp
xchg
mov
pop
ja
ss
cld
decb
in
sbb
and
pop
int3
and
dec
push
icebp
adc
ror
pop
lods
jmp
outsb
outsl
hlt
mov
ljmp
jg
push
push
imulb
divb
xchg
add
fildll
ljmp
rorb
cmp
aam
adc
cmp
mov
xchg
add
push
cmpsb
insb
dec
jp
adc
movsb
sahf
movsb
cmc
and
cmp
inc
aam
sbb
out
mov
push
mov
aas
adc
testl
bound
das
cmp
jns
pop
xor
jbe
push
and
xor
mov
pop
js
inc
lahf
cmp
jo
in
imull
xlat
add
ds
and
cld
cmpsl
cmp
ja
mov
mov
push
fnstcw
ror
addb
inc
jmp
lret
popa
lahf
fbld
and
or
fs
xchg
mov
in
imul
mov
std
or
jne
and
push
and
fld
mul
push
cmp
repz
mov
lcall
rcrb
call
inc
leave
les
mov
cmp
adc
ret
pop
inc
cltd
dec
call
test
jno
lcall
test
in
jp
out
dec
sub
cld
fistpll
mov
mov
cld
cltd
test
pop
lcall
pusha
cmp
add
xchg
loop
or
lahf
cld
push
sub
jbe
inc
mov
fisubl
sbb
pop
dec
dec
orl
mov
push
arpl
mov
jno
push
mov
add
mov
mov
xor
loope
sub
popa
push
push
mov
mov
inc
aas
pop
add
mov
fsubrs
and
mov
insl
and
fistl
fsubs
mov
sub
mov
mov
mov
sub
lahf
jle
inc
in
rolb
in
jae
push
or
push
movsb
dec
in
add
jb
mov
jmp
bound
mov
cmpsl
data16
int3
mov
mov
out
jl
pop
adc
js
call
mov
jns
mov
fs
add
outsb
nop
aam
xchg
daa
cmpsb
scas
repz
in
push
into
iret
mov
nop
jne
add
mov
outsb
jno
addr16
jl
mov
jecxz
iret
outsb
inc
ja
jg
jge
add
push
dec
sub
ljmp
sub
or
push
cmc
pop
mov
xorb
scas
pop
jg
mov
test
lcall
popf
lds
sub
aaa
sbb
jmp
fyl2x
mov
lcall
xorb
add
std
dec
mov
aas
cwtl
cmp
test
xchg
pop
inc
in
ss
cmpsb
shl
sbb
push
mov
sbb
in
icebp
jle
data16
hlt
and
jbe
ret
js
mov
lahf
xor
sub
inc
sbb
jmp
rcrb
mov
insl
add
out
enter
enter
dec
add
push
div
test
jmp
mov
mov
test
pop
lret
push
cmp
jl
fnstenv
pop
mov
mov
add
fists
jecxz
scas
shlb
fdivl
stc
stos
mov
lds
fstpt
icebp
fimuls
dec
sbb
cmp
aas
xchg
loopne
cmc
mov
and
add
jle
mov
ljmp
int
popa
shlb
or
shrb
in
adc
outsl
xchg
sub
shlb
jp
xchg
inc
cltd
lods
jecxz
inc
add
int3
cld
in
fadds
shl
or
into
add
je
jne
adc
mov
inc
lock
popf
gs
mov
jnp
stc
data16
stos
shlb
sub
lock
jb
jmp
jmp
xchg
push
je
jae
cmpsb
push
fsubrs
push
int
adc
jne
mulb
fwait
mov
cltd
out
roll
in
inc
sub
xchg
push
je
loop
push
mov
mov
sbb
aad
enter
pop
cmpsl
ja
adc
and
je
ja
adc
jg
loop
test
and
sbb
cwtl
pop
mov
sub
and
jnp
push
rcrb
icebp
dec
sahf
lock
in
cmpsl
data16
pop
cmp
add
mov
sahf
xchg
in
cs
mov
pop
jmp
push
mov
jle
push
inc
insb
imul
push
movsl
pop
pushf
outsb
aaa
cmpsl
sti
lock
jnp
popa
jne
int
adc
sti
popa
shrl
daa
push
popl
xchg
int
scas
push
std
in
cli
addl
sub
enter
icebp
xor
mov
inc
es
push
movhps
and
loopne
sub
and
subl
mov
insb
inc
mov
sub
dec
sub
and
sub
adc
mov
xor
mov
aad
mov
add
jp
xor
pop
push
push
mov
and
and
mov
mov
jge
and
inc
xchg
les
pop
mov
xlat
jl
dec
xchg
push
ljmp
sbb
or
int
lahf
sub
lds
cmpsb
lods
sbb
xchg
je
mov
imul
and
pop
shrb
xor
dec
jmp
testb
cmp
pushf
test
movsb
jg
test
lds
icebp
mov
popa
lods
jmp
lods
xchg
or
jle
pop
xor
test
jnp
mov
jl
daa
jno
dec
mov
movsl
cli
out
and
adc
sub
xchg
mov
jne
out
je
fwait
in
inc
mov
inc
aaa
movsl
adc
add
sbb
orl
mov
dec
dec
sub
push
in
push
xchg
cmpsb
fsubrs
scas
push
sub
xchg
cltd
je
xor
imul
cmp
aam
jmp
lcall
fidivrl
nop
push
bound
push
jo
pushf
into
clc
or
inc
dec
inc
das
mov
jmp
icebp
in
and
adc
roll
mov
lret
je
pop
ss
xchg
xchg
pop
cli
mov
or
xchg
cmpsb
imul
pop
popa
pop
xchg
fldcw
ud1
jecxz
fsubrp
fcomps
mov
movl
neg
jp
add
fs
outsb
adc
push
test
fwait
cld
pusha
mov
sub
sti
sub
call
int3
push
dec
outsl
out
lock
or
push
jo
and
sub
push
jae
mov
ljmp
inc
imul
sbb
fs
xchg
imul
je
data16
aaa
push
test
push
xorl
or
mov
push
pop
dec
repz
repnz
pushf
dec
out
imul
jmp
into
and
adc
nop
push
rcrl
pop
pop
and
add
xor
scas
leave
xlat
pop
cwtl
pop
loop
outsl
push
or
aam
movsb
adc
loopne
mov
js
cmp
push
or
sbb
pop
in
mov
insb
stos
cwtl
ficoml
js
xor
push
aad
inc
test
test
test
jb
outsb
lods
and
fmul
push
xor
enter
pop
push
push
jmp
sub
push
adc
jb
sub
jns
xchg
push
mov
and
and
or
and
inc
scas
push
or
dec
or
xchg
add
imul
addr16
mov
jne
popa
sub
lods
lods
jns
call
clc
push
hlt
jne
xlat
jge
jg
cmp
cld
scas
push
jo
sbb
and
gs
ret
dec
addr16
push
cmpsb
ds
mov
xor
scas
loop
or
pop
fdivl
frstor
out
fsts
out
sbb
popf
ds
push
in
rcll
pop
cmpsl
push
and
push
clc
add
push
stos
or
scas
icebp
pop
or
lods
cmpsb
cmpb
pop
dec
xchg
inc
xor
shl
clc
ss
xchg
push
cwtl
cmc
jmp
aam
aaa
scas
insl
push
cwtl
pop
pop
cmp
add
movsl
fnsave
inc
mov
mov
jecxz
out
gs
es
pop
sub
jmp
jg
jl
and
scas
aas
mov
push
ljmp
xor
dec
scas
adc
xorl
pop
imull
push
cmovae
gs
push
jp
rcrl
mov
jmp
ss
push
imul
xlat
insl
add
sbb
inc
cwtl
scas
iret
out
fildl
shlb
mov
dec
mov
dec
lret
inc
outsl
das
inc
push
xor
adc
xchg
lret
dec
popl
push
push
mov
in
lret
popf
rorl
push
push
sbb
cmp
xchg
xor
sub
add
adc
cmp
adc
sarl
mov
in
push
in
pop
pop
xor
stos
lcall
psraw
xchg
mov
fcom
jecxz
xchg
imul
or
mov
dec
sub
inc
and
cli
divl
pusha
pop
test
sub
adc
jge
and
push
xchg
loope
mov
popf
or
mov
cmp
ds
arpl
nop
xchg
lds
jb
push
orb
sbb
movsb
adc
cmpb
nop
aas
flds
inc
jno
push
inc
cmp
leave
push
xor
sbb
ds
lret
lret
xor
cmpsl
jle
mov
push
push
or
pop
xor
fldcw
dec
dec
sub
mov
mov
or
lea
sbb
cmp
xchg
ja
test
cwtl
loop
dec
push
clc
sub
data16
jns
fs
sub
std
mov
add
dec
cmc
sbb
mov
cmp
and
jae
mov
jl
xor
dec
add
xchg
movsl
mov
lock
sub
inc
adc
into
call
mov
mov
push
jp
xchg
sbb
mov
adc
fcmovnb
or
xchg
rcl
data16
and
jne
sbb
adc
cmp
pop
test
bound
add
outsl
mov
mov
sub
cmp
pusha
xchg
inc
js
xchg
fucomp
repnz
push
add
dec
mov
fiadds
jecxz
xchg
xchg
xor
pusha
mov
sbb
testb
fidivl
pop
mov
filds
test
ret
in
aad
push
jns
call
es
xor
mov
fnstenv
pop
cmp
orb
test
lahf
or
aam
rcrl
addl
in
add
js
jb
mov
rclb
mov
mov
push
xorb
mov
je
dec
dec
add
icebp
xchg
shll
insl
addr16
add
out
cmc
adc
or
cwtl
ret
test
jae
lret
mov
jmp
and
jae
and
mov
jmp
cmp
rcrl
sbb
or
cs
sbb
out
or
inc
push
repz
jns
out
aad
push
jp
into
aad
cmpb
mov
xchg
cwtl
pop
data16
aas
cmpsb
enter
mov
out
jle
sahf
adc
lods
iret
sub
mov
mov
inc
in
xor
mov
push
addr16
arpl
pop
sub
xchg
rcl
push
or
inc
test
cli
jb
adc
add
fs
mov
ja
leave
mov
and
and
filds
adc
lcall
inc
push
stos
fcomp
repz
sbb
lcall
imul
imul
xchg
cli
fwait
rcr
movsb
cwtl
aam
mov
cwtl
mov
cmpsl
icebp
mov
xorl
adc
cltd
movsb
cmp
dec
add
push
xor
xor
inc
cs
xorb
and
add
mov
inc
jecxz
gs
jo
cmp
rorl
int3
xchg
mov
sbb
adc
mov
pop
xchg
xor
std
xchg
cli
insb
jle
movsl
adc
les
aas
sub
sti
xchg
adcb
shll
loop
xchg
sub
sahf
mov
icebp
jmp
bound
insl
dec
imul
cld
ja
je
dec
cmp
stos
fisubrl
xor
mov
mov
dec
aam
mov
mov
push
sbb
cmp
cli
jbe
inc
data16
call
into
add
cmpsb
fs
sarb
cltd
and
fs
pusha
leave
xlat
data16
sub
mov
addr16
rorl
inc
inc
inc
call
push
jl
jo
int
js
out
out
jmp
inc
push
aad
jg
cmp
jmp
fs
sbb
popa
sbb
cmp
mov
testl
jb
faddp
and
add
sbb
fdivrp
jb
sub
dec
mov
xchg
gs
insb
sqrtps
int
cmp
lods
nop
or
inc
cs
imul
cmp
xlat
or
es
inc
push
clc
sbb
inc
das
popf
pushf
add
add
roll
test
mov
aam
movb
call
mov
daa
fstp
shl
xchg
scas
push
mov
add
mov
data16
jle
ret
daa
push
push
test
les
pop
ljmp
jbe
int
or
ret
cltd
fldenv
jle
or
inc
add
lcall
pop
enter
and
int3
or
push
subb
fmuls
adc
and
mov
sbb
shrl
mov
pop
ja
cwtl
mov
cwtl
jg
shr
jmp
xlat
daa
call
inc
inc
cmpsl
inc
ljmp
aam
fwait
jmp
ds
loope
adc
jbe
push
mov
mov
aaa
testl
sbb
out
pop
mov
shl
test
dec
mov
dec
fcmove
lcall
and
xchg
aas
popa
inc
push
cmp
adc
mov
call
pop
xor
jecxz
mov
mov
push
js
sbb
push
ret
ja
cltd
push
leave
push
jo
adc
mov
pop
jb
lea
mov
xchg
mov
mov
jmp
popa
jb
inc
outsb
loope
adc
sub
xor
push
mov
cmp
hlt
pop
or
mov
mov
mov
in
push
cmpsl
and
jle
test
xor
add
sub
sbbb
adc
out
sbb
les
js
sti
sar
xchg
imul
cmp
int
stos
add
mov
jno
hlt
xor
stos
inc
sbb
arpl
xor
rolb
ss
add
and
scas
lahf
inc
nop
inc
dec
sbbb
icebp
xor
xor
sbb
push
aas
jl
adc
sub
pop
mov
test
xor
xor
inc
or
cmp
xchg
xor
stos
es
imul
mov
scas
fdivrl
aas
jo
repz
mov
mov
add
mov
ret
stos
mov
jp
imul
test
or
dec
dec
stos
sub
push
ret
mov
imul
push
push
cmp
mov
inc
pop
or
lods
vpcmpeqb
ss
cltd
xor
loopne
xor
xchg
or
xchg
jmp
cmp
movb
shl
adc
out
mov
inc
sbb
inc
stos
jmp
jne
sahf
adc
sub
dec
and
out
push
and
andl
or
adc
adc
push
out
sub
sbb
data16
xchg
mov
sahf
sub
or
xchg
jb
jae
or
test
divb
out
add
pusha
lret
stos
ja
les
ss
jecxz
fcmovb
mov
jg
adc
xchg
iret
cmp
insb
rcrl
sbb
outsb
cwtl
push
pop
ja
sbb
fnstcw
sbb
addb
inc
andb
mov
popf
pop
in
ja
hlt
test
push
jbe
fildl
fsubrs
cmc
aad
int
xchg
sahf
sahf
ret
jne
adc
lock
lods
hlt
push
leave
jo
mov
negl
lods
insb
xlat
sub
pusha
lahf
in
scas
xlat
and
sub
mov
loopne
hlt
scas
push
int
in
aaa
sub
mov
sahf
or
and
inc
mov
mov
lret
or
adc
xor
insb
bnd
xor
into
add
sahf
sti
mov
addb
and
out
pop
mov
pop
cmp
nop
movlps
cmp
xchg
cmpsb
push
mov
sub
sub
jl
mov
out
outsb
xor
sbb
mov
cmp
push
mov
aad
mov
aas
add
mov
pop
sbb
xchg
ljmp
mov
stc
cwtl
and
sub
in
pop
repnz
push
or
sub
dec
addr16
dec
inc
lahf
stc
push
jmp
mov
inc
cs
pop
incb
or
sarb
inc
arpl
int
ret
icebp
mov
es
in
mov
dec
add
rcl
lcall
sti
shrl
scas
push
je
or
leave
add
imul
xchg
or
lods
icebp
jmp
addl
push
adc
mov
jmp
popa
pushf
ljmp
out
mov
inc
in
pop
bound
adc
lret
test
mov
in
xchg
add
xchg
popa
push
jmp
call
call
stos
loope
test
repz
insl
mov
jge
cmp
mov
jae
cli
arpl
add
adc
sub
fucomp
test
aas
ss
arpl
xchg
jb
jne
pop
mov
xor
xor
xchg
rolb
movsb
addr16
add
pop
or
inc
fidivl
shlb
dec
sub
sahf
cld
cmc
adc
jge
out
dec
cli
sub
push
push
inc
sub
test
or
lds
stos
mov
xchg
arpl
and
ret
sub
hlt
or
popf
dec
cmp
imul
mov
and
jae
xchg
mov
push
sarl
pop
push
clc
ret
jecxz
sub
xor
fidivl
pop
stos
js
push
push
dec
addl
cmp
cmp
jmp
in
push
cltd
add
mov
push
xor
sub
dec
subb
or
adc
push
xchg
cmpsb
loope
dec
aad
sub
sti
sub
or
lods
jo
mov
and
cmpsl
fnstenv
inc
push
jmp
cwtl
sbb
sub
push
subl
add
pusha
inc
mov
shrb
ja
xor
pop
xchg
push
mov
mov
and
mov
lret
jbe
popa
data16
inc
daa
mov
testl
mov
pop
mov
movsb
and
ja
out
jge
pop
sahf
inc
xlat
mov
mov
jp
dec
push
sub
outsl
jp
or
pop
jnp
push
int
jne
pop
sbb
aad
sbb
arpl
or
pop
inc
adc
jns
inc
test
pop
dec
or
std
loop
mov
repnz
pop
fwait
xlat
xor
pop
mov
sbb
std
sti
and
enter
xchg
out
ret
lds
jl
rcr
filds
les
loopne
lret
pop
sbb
xorl
push
and
xor
and
lds
push
mov
add
cmp
in
sub
lods
shrb
mov
mov
mov
mov
testl
arpl
jbe
pop
jae
push
mov
jbe
dec
in
mov
cli
cmpsl
cmpsl
push
out
inc
nop
popf
imul
inc
and
sbb
dec
hlt
pop
fmuls
lock
cli
scas
cmp
loopne
mov
arpl
imul
pop
cmp
cmp
sub
lret
sbb
cld
jmp
cwtl
cwtl
outsb
aaa
xor
aaa
shl
out
dec
rcrb
mov
dec
push
or
pop
xchg
sub
sbb
xchg
mov
jns
out
cmp
and
xor
out
dec
loope
rcr
pop
lods
fcmovne
mov
fmull
mov
shlb
aam
repz
cs
inc
push
sub
andb
pop
cwtl
repz
dec
jnp
and
mov
pop
sbb
and
push
popf
mov
pop
sbb
push
pop
pop
movsb
push
jnp
pop
hlt
ret
inc
test
cmp
aaa
fbld
insb
inc
ficoms
cmp
mov
pop
xor
imul
out
frstor
mov
push
pusha
dec
scas
xchg
cli
mov
inc
scas
ds
or
cmp
pop
push
shl
outsb
pop
cld
fistl
push
push
jmp
push
cmpsb
inc
jb
aaa
fists
jmp
gs
add
lcall
ds
mov
das
push
or
mov
bound
movsl
pop
adc
mov
xchg
pop
inc
cs
jecxz
repz
add
pop
imul
inc
mov
fisttps
nop
jmp
xor
fisubrl
pop
out
cmp
and
xor
aaa
jbe
sbb
or
cmp
mov
rolb
xchg
sbb
push
dec
cmc
push
stc
fisttpl
cwtl
mov
in
pop
and
frstor
xchg
in
adc
bndstx
std
push
sti
mov
int
lret
dec
lds
adc
pop
xlat
pushf
pop
mov
inc
nop
sub
aam
in
loopne
pusha
adc
jle
jp
push
add
dec
push
pop
scas
cmp
jge
int3
popf
jl
cmp
inc
inc
lods
repnz
push
leave
mov
fs
lret
mov
mov
pusha
repnz
out
xchg
pop
cmp
sub
ds
push
ss
push
add
xchg
repz
ret
ljmp
movsl
and
cs
mov
jp
dec
and
lods
jno
jl,pt
push
sbb
or
stos
xor
insl
or
int3
pop
scas
sub
cmp
sbb
push
mov
lock
sbb
mov
repnz
xchg
in
push
push
or
mov
inc
xor
ljmp
call
dec
mov
mov
mov
out
mov
xchg
sub
stos
sub
jbe
mov
push
push
lock
aaa
jmp
stos
ret
inc
xor
xor
mov
and
mov
add
fcmovne
lock
xor
and
dec
lcall
xor
loop
pop
ret
fimuls
mull
sti
ror
cmp
cmp
daa
or
mov
jl
ds
dec
lods
mov
fbstp
cmp
add
fimuls
sub
xor
scas
cmp
push
mov
xchg
xchg
jno
rcrl
data16
lods
jp,pn
jg
jg
xchg
cmpsb
lcall
jne,pn
sub
pop
outsb
lcall
out
shr
hlt
ja
add
fnsave
add
jl
out
mov
aas
xor
ds
push
fists
inc
lods
clc
xor
lods
fsts
in
push
out
pop
ja
push
out
xor
bnd
lods
dec
and
test
xor
mov
rcrl
lcall
int3
mov
add
sub
out
jge
aad
sub
cmpw
inc
xchg
and
sub
sub
push
mov
xor
shrl
cmpsb
das
xor
iret
jge
sbb
inc
adc
inc
adc
jno
xor
inc
adc
out
or
xchg
push
jle
sbb
fldt
lods
xor
fdivrl
loope
loope
mov
xchg
sbb
mov
push
sbb
cmpsb
ficoml
xchg
popf
ja
sbb
mov
push
cwtl
xchg
push
xor
pushf
in
or
push
sub
outsl
cmpsl
mov
psubsw
push
inc
rclb
scas
inc
cli
cwtl
dec
lds
jb
cmp
test
scas
popa
nop
fs
jge
push
rcrb
adc
pop
dec
data16
mov
cmp
mov
lds
and
or
cmp
mov
mov
mov
xchg
sar
sti
sub
fs
sti
push
xchg
sbb
nop
out
add
mov
jne
adc
cmp
fistps
call
lock
fdivl
es
cmp
lret
ljmp
dec
ss
scas
cli
mov
lds
adc
jmp
daa
sub
or
add
in
out
mov
add
inc
shl
mov
mov
inc
push
imul
lds
and
ds
iret
push
mov
or
ljmp
add
pslld
pop
add
mov
pushf
add
nop
shlb
clc
cmc
sti
mov
rolb
and
lods
jns
add
mov
adcl
fcomps
jo
and
jns
or
loop
dec
rorl
aam
orb
stos
xchg
xchg
arpl
push
push
mov
movsl
out
iret
sbb
or
scas
xchg
add
stos
dec
repnz
cld
xlat
fwait
ljmp
xchg
push
and
or
pop
shr
int3
jle
repz
dec
dec
jae
pusha
cltd
stos
push
ja
ret
mov
fwait
call
jl
fsubrs
aad
leave
or
push
cs
jp
pop
shll
jl
pop
cmc
sbb
adc
sahf
cmpb
ljmp
inc
enter
and
repz
iret
pushf
push
dec
mov
in
push
stc
jg
fwait
xchg
sub
or
fisttpll
lods
dec
clc
mov
cmpsb
lods
ja
sar
in
xchg
mov
dec
popa
sub
or
mov
dec
rdtsc
cmc
adc
stc
adc
stos
push
jne
cmpsb
jo
orl
fisttps
arpl
push
pop
out
jecxz
dec
or
call
xchg
sbb
mov
rolb
stc
jmp
mov
pop
lods
hlt
enter
dec
pop
insl
out
and
xchg
shll
sub
stc
or
movsb
nop
lea
adc
shlb
sub
add
or
inc
in
xchg
jmp
jge
mov
out
test
mov
push
outsl
outsl
mov
lock
idivl
xor
mov
dec
sub
pop
adc
test
sub
popf
movl
push
sub
vphadduwq
mov
mov
daa
push
mov
cwtl
fs
xor
cmpsb
enter
test
mov
push
lock
mov
and
lds
stos
pop
test
jo
and
inc
add
in
lahf
in
adcb
ds
inc
push
or
js
loopne
mov
jl
cmp
enter
xchg
hlt
bound
stc
mov
mov
in
push
jge
inc
scas
pop
iret
push
push
sub
xorl
loop
xchg
jnp
fcom
cwtl
pushf
fwait
pop
sub
jne
add
adc
and
push
push
ja
repz
std
out
push
test
cltd
push
pop
jne
and
divb
push
pop
nop
ja
xchg
mov
cld
lahf
rcll
rclb
mov
sub
inc
outsb
cmp
fwait
lcall
lcall
or
lods
sbb
xor
andb
and
xor
or
cmp
lock
cmp
scas
sbb
hlt
sub
cwtl
fldl
pop
inc
in
jae
popf
cmp
hlt
cmpsb
add
dec
jno
cmp
sub
xor
fmull
sbb
mov
or
dec
inc
push
pop
and
insb
mov
mov
mov
push
cmp
inc
pop
add
jmp
mov
cmpsl
pop
stos
xchg
xorl
loope
or
call
aaa
lret
mov
xor
pop
clc
insl
xchg
imul
mov
xor
fwait
sti
jle
jmp
outsl
imul
mov
rolb
cmp
adc
dec
andb
inc
fidivl
out
mov
ljmp
fsts
jne
adcl
aam
in
xchg
data16
adc
mov
incl
rcrl
mov
je
xchg
sbb
xchg
xor
sub
pop
outsl
add
pop
adc
jge
sub
sahf
rcrb
push
jmp
cmp
pop
mov
stos
roll
xor
mov
cmp
jp
fimull
scas
dec
icebp
dec
das
outsb
cld
fidivl
add
int
xor
test
inc
nop
ret
sub
les
lahf
insl
xchg
fidivl
sbb
sub
or
mov
push
lahf
xor
jmp
imul
push
mov
adc
mov
jp
mov
rcl
sbb
icebp
popf
iret
cmp
xorl
mov
adc
push
insb
nop
fldenv
pop
out
mov
shlb
mov
xchg
call
ss
nop
outsb
xchg
push
mov
xor
mov
push
pop
xlat
sub
sbb
sub
popf
lods
add
push
cwtl
cs
xchg
cmp
and
xor
fcoms
testb
rcr
fcomps
int
jl
scas
cs
add
das
mov
pop
std
dec
inc
jae
rcrb
fisubs
lahf
or
mov
das
out
fidivl
and
xchg
adc
dec
es
cmp
std
stc
out
pop
cs
pop
xlat
push
sub
and
popf
out
mov
das
es
mov
xchg
jbe
ja
mov
add
stos
xchg
loop
loop
pop
hlt
outsb
lea
inc
mov
lahf
vmwrite
add
mov
leave
cmp
sbb
push
cmc
cmpl
mov
adc
add
xchg
lock
adc
push
sbb
lret
lds
pop
or
jge
add
xor
subb
std
loop
xor
xor
mov
les
es
aam
fs
mov
stc
fisttpll
inc
cmpsb
mov
sbb
jp
gs
sbb
add
and
mov
inc
mov
dec
sbb
cmpsb
test
pop
sbb
fbstp
int
jns
mov
sub
ret
into
xchg
mov
cltd
outsb
sub
adc
xor
fadds
in
inc
push
jnp
out
cmp
je
sbb
nop
adc
mov
mov
dec
inc
adc
into
adc
xchg
cli
pusha
cmp
das
push
fldenv
es
push
xchg
testl
insb
stos
jge
adc
push
lock
shll
pop
xchg
call
mov
movl
lahf
fidivs
out
adc
and
cmpsl
and
mov
pushf
cwtl
inc
aas
adc
rcrb
add
mov
lahf
test
inc
sahf
xchg
pop
inc
xor
jnp
std
rol
add
int
and
ficoml
mov
iret
adc
sub
xchg
cmpsb
or
aam
xchg
mov
mov
movsb
icebp
scas
pop
ss
lahf
sub
lret
call
add
js
insb
push
sub
fcmovne
fmull
mov
divl
jge
sbb
dec
pop
jae
ja
out
push
push
xchg
push
dec
mov
and
aaa
scas
xor
push
mov
movsl
sub
js
je
stc
mov
sti
test
cmp
sub
adc
mov
mov
push
push
fs
cmp
ljmp
mov
mov
cltd
xor
mov
cli
outsl
gs
ja
mov
jno
int
dec
out
enter
das
inc
and
add
lahf
sbb
popa
cmpsb
mov
aad
inc
cmp
push
out
or
fildl
xor
jo
shlb
inc
or
sbb
cmp
enter
pop
pop
push
push
mov
hlt
xchg
mov
mov
sarb
inc
arpl
dec
insl
push
out
and
ds
adc
stos
xor
dec
push
nop
test
nop
rol
xchg
fcomps
lods
addr16
loope
mov
arpl
add
inc
mov
xchg
enter
jnp
lea
push
sub
or
add
or
loopne
inc
jge
adc
ljmp
cmp
lea
sub
fwait
xchg
outsb
fcomp
addl
imul
mov
sub
test
or
cld
fs
jb
mov
data16
test
sub
push
lods
xchg
lret
sbb
ss
adc
push
pop
add
rorb
adc
fs
imulb
shr
push
ret
xchg
push
jg
mov
mov
adc
outsb
mov
inc
outsb
lret
mov
jbe
xor
cld
loopne
gs
fstps
add
jp
ss
mov
adc
andl
jl
aam
cmp
and
mov
pop
sbb
and
push
gs
ss
stos
fdivr
mov
dec
or
inc
movsl
jbe
movsl
mov
out
shrl
lea
mov
sub
xchg
cmp
fidivrs
dec
lret
inc
out
mov
loope
jge
jg
mov
push
mov
xlat
xor
xor
cld
negl
inc
call
ss
testb
ljmp
mov
and
adc
js
mov
cmc
dec
jge
ficompl
mov
shll
sti
adc
push
gs
imul
sbb
add
stc
daa
in
push
and
pop
leave
dec
addb
xor
push
sti
mov
fwait
in
mov
stc
popa
les
jno
pop
lods
sbb
stos
lahf
lods
push
cmpsl
jbe
fidivrl
mov
aas
sbb
or
or
mov
shrb
mov
adc
test
push
mov
push
cmpxchg
sarb
dec
jbe
in
rorl
add
ljmp
cmp
clc
mov
dec
sbbl
jle
jb
jmp
hlt
fcomip
pushf
test
xor
xor
or
jp
lods
test
fsubrl
fwait
roll
push
mov
sub
stos
jmp
mov
adc
mov
lods
cld
cli
mov
call
sti
sbb
dec
sbb
imul
xchg
fs
push
and
out
in
shrl
jnp
in
mov
ds
mov
pushl
inc
sbb
pop
icebp
jecxz
nop
lock
cvtps2pi
cld
lock
inc
inc
mov
into
push
mov
imulb
fsubp
dec
sub
adc
shlb
push
divb
inc
jo
sbb
sbb
ficoml
in
cltd
inc
cmp
sub
pop
lea
repz
push
mov
and
pop
in
push
or
sub
pop
mov
push
aad
or
inc
pushf
adc
cmpb
movl
shl
xor
cli
notl
or
popf
repz
lods
stos
mov
mov
test
jne
mov
outsb
sbb
and
mov
jp
jl
xchg
scas
xor
sub
inc
mov
imul
cmpsl
ret
fxch
jecxz
inc
xchg
lahf
inc
cmp
movl
sub
pop
push
jge
fmull
insl
cmc
in
ret
outsl
leave
xchg
mov
fisubrs
mov
repz
lods
aas
inc
in
cmp
push
mov
aas
mov
popf
sub
adc
xor
jecxz
roll
xor
imul
cmp
jecxz
inc
fidivs
aaa
bound
aaa
fildll
test
arpl
es
xchg
iret
or
fisubrs
jo
int
sbb
dec
add
lahf
int
fwait
das
mov
or
test
out
push
push
test
push
rorb
mov
mov
jmp
imul
mov
pop
bound
dec
xchg
sarl
inc
and
ja
inc
gs
fstpt
test
xor
push
sub
out
js
push
mov
cmc
jmp
push
test
adc
xor
jle
inc
add
je
test
into
mov
cmp
shll
pop
lock
fistpll
jge
inc
sbb
out
cltd
sbb
std
fisttps
popa
xchg
mov
sbb
rcr
jg
frstor
xchg
ss
pusha
or
imul
mov
cmp
mov
push
fistpll
sbb
sub
out
xchg
stos
mov
mov
sub
sub
sbb
push
xchg
cmp
push
fstpt
pusha
loop
mov
xchg
jne
test
xor
dec
subb
jmp
pop
jmp
test
movsb
jbe
out
mov
xor
xlat
sub
sub
jnp
mov
je
dec
pop
int
add
add
push
sub
sub
ss
xchg
insl
or
lock
fwait
cmpsb
pusha
push
mov
outsl
xorb
stos
mov
addb
dec
cld
xchg
js
cmc
std
push
sti
shll
xchg
lds
and
or
imul
stc
les
shlb
test
test
faddl
adc
mov
aad
xchg
pop
sbb
lods
dec
xor
sub
pop
adc
sbbl
inc
dec
sub
lret
movsl
mov
xchg
ss
cltd
movsb
rcrb
shll
movzwl
lcall
cltd
xchg
aam
mov
adc
inc
call
mov
pop
mov
inc
xchg
mov
or
dec
addl
outsl
add
push
icebp
mov
sub
inc
stos
xor
hlt
nop
inc
inc
sub
inc
xor
js
and
lcall
xchg
mov
xor
mov
in
adc
std
add
add
stos
add
xchg
xchg
sub
adc
sti
data16
and
scas
aas
aad
js
mov
cmp
stc
or
dec
cwtl
mov
mov
pop
sub
dec
mov
add
sub
dec
jg
stc
mov
dec
sbb
outsl
cmp
and
repnz
xor
lret
mov
or
pop
call
push
pushf
xorl
jns
cwtl
xlat
and
sbb
and
and
scas
xchg
sarl
add
jno
loope
in
lods
mov
push
add
pop
rolb
lea
mov
aam
mov
mov
sahf
cmp
inc
jp
fstl
in
mov
addr16
sub
iret
movsl
mov
mov
jne
mov
mov
rcr
repz
pop
imul
ss
and
and
fcmovbe
adc
push
pop
bound
or
ja
jns
fiaddl
jl
jb
lret
jb
pop
sub
in
ds
push
lods
in
inc
int
enter
jmp
sub
cmp
adc
and
movsl
cs
cmp
pop
inc
pusha
in
push
xor
dec
fcoms
test
faddl
dec
push
push
mov
jns
aas
add
or
outsb
add
mov
lcall
cmp
arpl
div
das
clc
scas
mov
int3
sti
je
pop
jp
jge
pop
mov
ja
jb
fidivrl
pusha
sbb
jno
mov
dec
std
ja
sub
adc
jne
lds
fbld
je
pop
sub
fcmovnbe
mov
jle
scas
lods
stos
cwtl
cmp
pop
iret
ds
mov
shll
js
ljmp
xchg
add
add
aad
lods
inc
fcomps
cli
call
pop
xchg
cmpsb
xchg
and
mov
cld
rorl
lock
or
jno
test
sub
add
insl
cmp
or
jg
dec
push
dec
das
xchg
add
dec
dec
loope
dec
inc
lods
call
sub
jo
sub
test
fisubrl
outsb
test
mov
popa
and
mov
mov
mov
push
stos
push
lahf
or
test
pop
mov
fs
cltd
test
add
jecxz
jne
lret
sbb
push
xchg
adc
xchg
dec
jl
fidivrl
and
mov
repz
sahf
push
out
sub
mov
dec
adc
inc
mov
inc
outsl
les
xorl
rclb
and
fwait
or
cmp
mov
imul
adc
mov
jl
std
mov
lods
call
sahf
inc
push
cmc
clc
sahf
andb
cmp
test
movsl
pop
mov
loope
std
mov
push
rorl
push
adc
xlat
repnz
call
scas
fnstsw
xlat
loop
aas
in
or
cmpsl
hlt
xchg
out
stos
or
mov
loope
xchg
jno
aaa
das
push
aam
jge
inc
push
insl
mov
jns
cmp
xor
imul
or
sbb
dec
in
hlt
rorb
jmp
cmp
lret
fidivs
sub
push
lds
adc
lods
stc
cmp
cld
adc
xor
sarl
cmpsb
inc
xchg
lret
sub
dec
mov
jp
popa
out
xchg
dec
mov
xchg
jne
pop
cli
int
rcrb
xor
xchg
xor
jecxz
out
clc
adc
popf
dec
mov
addr16
xchg
test
out
gs
in
pop
jno
out
ja
fstps
lds
mov
je
and
mov
xor
jb
xorl
outsl
lahf
pusha
xchg
inc
cltd
stc
sbb
sbb
mov
jne
pop
pop
int3
jb
push
xor
fstpl
lea
scas
out
test
lahf
sbb
js
mov
cmp
push
mov
jnp
int
xchg
or
addl
stos
xchg
sbb
fbstp
mov
dec
lock
in
jb
mov
xchg
sub
test
inc
lds
cmp
mov
mov
add
jmp
sbb
in
mov
icebp
lds
sbb
ss
push
das
out
std
inc
inc
mov
sub
xchg
sbbb
or
or
mov
dec
cmc
movsl
sub
or
inc
xlat
adc
inc
and
sub
fs
and
test
call
pop
dec
sahf
jns
mov
push
lds
daa
pop
or
mov
push
int
stos
lods
jg
je
or
fs
adc
stos
out
xchg
adc
andb
imul
or
or
popf
cs
or
bound
push
hlt
outsb
ja
test
mov
cmpsl
adc
lret
sbb
enter
xor
scas
icebp
add
push
lods
roll
pop
js
pop
jnp
sub
stos
cld
sbbl
mov
in
int
fwait
ss
push
clc
cmpsb
stc
das
cmpsl
add
shl
movsl
push
jecxz
fwait
mov
jp
pusha
repz
out
add
sbb
push
add
rorb
pop
out
fwait
sub
fldenv
in
aaa
in
or
mov
sub
popl
fisttpl
xchg
mov
pop
cmpsl
xchg
mov
enter
ret
popa
test
inc
dec
pop
std
jb
clc
leave
inc
jg
push
add
add
mov
push
clc
jno
loopne
mov
outsb
popa
iret
leave
je
push
mov
lock
cmp
es
add
stc
adc
aas
xor
xchg
nop
jo
sbb
cld
xchg
xchg
icebp
xlat
sahf
in
je
test
push
fs
cld
xchg
fcmovne
iret
sub
mov
push
sub
test
test
xchg
cld
adc
lods
cwtl
hlt
adcb
push
pop
lea
lret
lods
jno
cmp
out
dec
test
mov
sub
cmp
pusha
filds
mov
mov
add
sbb
pop
inc
jl
push
mov
jnp
adc
mov
ljmp
pop
cmpsb
dec
adc
pop
dec
push
lahf
inc
aas
push
inc
test
sbbb
fmuls
sbb
xchg
cmc
xlat
xorb
and
xor
in
xchg
mov
jae
mov
xchg
xor
leave
dec
sbb
popf
cmpsl
mov
jg
test
bound
jg
repz
pop
sbb
push
in
ficoml
fidivrl
adc
arpl
jb
add
movsl
sbb
adcb
movsb
push
jne
xor
sbb
xchg
mov
sbb
test
xchg
and
loopne
push
xchg
leave
mov
iret
dec
imul
xchg
movlps
ja
mov
pop
mov
sbb
popa
push
push
mov
out
arpl
push
jle
aaa
sbb
jecxz
lock
aad
nop
sub
rcrl
dec
sti
adc
test
subl
mov
push
inc
push
dec
mov
cmp
xor
and
pusha
lret
rcl
fidivrs
mov
jne
dec
sub
jno
cmp
stos
xor
mov
push
mov
scas
jle
mov
jp
shlb
mov
ljmp
sub
dec
and
loope
xchg
pop
cmpsl
fnstcw
push
pop
out
xchg
bound
pop
fwait
icebp
inc
jae
std
xchg
jno
test
push
xor
xchg
cmc
push
mov
fdivrp
fadds
scas
inc
xor
adc
xchg
xor
dec
sbb
js
jle
fadd
fs
addr16
in
xor
inc
mov
lds
xchg
lea
lds
or
jne
cwtl
shll
enter
lock
ficompl
xchg
shrb
fldenv
xlat
inc
sbb
inc
pop
nop
sub
jp
xchg
imulb
adc
push
pop
push
mov
les
dec
fisubrl
cwtl
mov
lea
gs
ljmp
push
pop
jb
fisttps
aad
mov
jl
pop
popa
mov
and
neg
or
or
adc
mov
mov
sahf
js
cmpsb
pop
stos
imul
xchg
adc
mov
fimull
je
cld
fnstsw
outsl
je
mov
lods
sbb
lret
xchg
repnz
jae
jne
xor
dec
mov
push
pushf
dec
mov
cmpl
movsl
int
mov
mov
xor
push
mov
or
pop
pushf
pop
lods
and
dec
rclb
xchg
sub
mov
arpl
fmull
and
mov
push
adc
cld
add
cmpsl
or
imul
mov
int
pop
addr16
push
sbb
push
push
push
mov
rol
aaa
push
push
mov
pusha
fucompp
ja
xor
divb
in
jae
iret
jae
out
sub
push
das
loopne
cld
orl
popa
ficoml
jle
out
mov
jg
cmp
inc
repz
cmp
dec
dec
loopne
clc
cmp
xchg
pop
pop
pop
lret
pop
lods
shlb
jae
outsb
or
ja
lods
adc
popf
hlt
add
cmp
mov
aam
orb
dec
ljmp
adc
and
cmpsl
pop
cli
push
pop
out
push
jl
cld
cmp
mov
or
ja
scas
cmpsb
in
gs
pop
enter
xchg
mov
mov
or
mov
sbb
jge
mov
outsb
sbb
outsb
xchg
movsl
dec
xor
mov
iret
inc
push
cmpsb
repz
aad
mov
stc
xchg
fbstp
popf
test
sub
daa
inc
fbstp
ss
loop
icebp
lahf
or
fidivl
mov
add
add
lcall
shrl
xchg
add
push
std
shlb
loope
adc
mov
scas
lods
mov
stc
mov
push
rorb
mov
or
jge
mov
dec
pop
mov
mov
test
pop
dec
push
cltd
push
jae
lret
lock
daa
add
aad
faddl
ljmp
stc
sub
push
xchg
clc
pop
movsl
xchg
lahf
sbb
out
cmp
lods
adc
add
jb
out
cld
insl
data16
mov
inc
pop
inc
test
aas
sbb
loop
push
lock
divb
jp
enter
lock
adc
fiaddl
out
xor
dec
mov
movsl
mov
mov
cmp
cmc
sub
repz
mov
xchg
inc
sub
mov
pusha
mov
pop
lret
push
fcomps
int3
mov
daa
out
shrb
ljmp
pop
inc
push
xchg
or
fistpll
cld
mov
and
add
int3
cmp
cmp
pop
clc
inc
in
aas
andb
inc
into
push
xlat
mov
dec
add
inc
cmc
and
cmp
add
into
lcall
leave
jg
jecxz
sub
fildll
pop
cmp
scas
inc
aas
inc
outsb
cmp
iret
xchg
dec
jecxz
mov
xchg
jb
sahf
jns
mov
adc
cmpsb
mov
or
cli
bound
stos
adc
push
test
pushf
notl
and
scas
cmp
es
popf
cli
pop
dec
add
jnp
dec
out
ret
addr16
jge
xor
imul
das
fs
movsb
hlt
sbb
sbb
inc
cld
or
test
cmpsb
pop
mov
and
lret
inc
inc
in
sub
xchg
addl
mov
mov
jl
xchg
mov
sbb
dec
and
ja
mov
jbe
mov
popf
jecxz
fwait
pushf
push
outsl
aas
dec
mov
cmp
add
jmp
mov
xchg
or
sbb
xor
lods
imull
in
lret
sbb
test
cwtl
jno
mov
cwtl
js
push
sub
les
mov
test
or
sahf
cltd
lods
mov
test
jle
inc
inc
inc
adc
push
bound
xchg
cli
pop
jbe
mov
xchg
inc
pop
imul
loopne
gs
xchg
mov
fdivp
pop
push
jno
aaa
call
cmp
stos
sub
lcall
sub
ljmp
mov
movb
lahf
cli
jae
cmp
and
idivl
je
je
adc
inc
repnz
out
xchg
roll
inc
incb
push
rolb
lahf
out
js
push
cmpsl
mov
or
shll
bnd
mov
xor
out
mov
or
lds
mov
fildl
fsub
lret
dec
nop
out
nop
js
js
loopne
add
mov
test
inc
iret
bound
mov
aaa
push
and
sub
jecxz
mov
leave
cmp
movsl
jle
std
fwait
jns
and
xchg
in
xchg
test
sbb
mov
push
cwtl
adc
dec
mov
inc
mov
lds
add
or
call
sbb
push
pop
or
sbb
negb
pop
mov
xchg
sbb
imul
sti
xchg
jb
movsl
or
lahf
shll
push
fwait
pop
inc
test
arpl
or
xchg
rclb
fisubl
sbb
and
std
int
or
mov
or
mov
in
ljmp
int3
mov
das
mov
frstor
ficomps
inc
inc
pop
daa
add
ret
icebp
mov
dec
sbb
jecxz
xor
add
loope
push
and
or
fistps
cmp
jp
jle
pop
pop
stc
in
jmp
push
xchg
xchg
cmpsl
dec
ret
add
gs
xor
push
xor
out
test
cmpsl
adc
push
and
mov
mov
jge
fistpll
test
push
daa
push
dec
icebp
lcall
ret
mov
push
into
lret
push
pop
add
into
stos
sbb
pushf
movb
fldl
imul
ds
sbbl
or
insl
sub
push
ds
mov
pushf
arpl
int3
or
add
lock
mov
lds
add
ds
repnz
inc
inc
pop
pop
in
or
nop
lds
push
push
sti
xchg
flds
fwait
cmp
fldl
loope
pop
ja
data16
or
push
push
and
mov
dec
dec
ja
xor
mov
cmpsl
dec
pop
xchg
cwtl
xor
bound
movsb
out
fmuls
adc
in
ljmp
lock
dec
pop
jne
pop
or
ret
call
sub
test
fistps
test
xchg
pop
jnp
lds
adc
sub
mov
mull
sbb
iret
push
xor
push
adc
ret
insl
xor
shll
mov
psadbw
push
lea
aas
addr16
outsl
cmp
lahf
cld
jecxz
inc
loopne
jp
mov
sub
ret
push
cltd
dec
insb
mov
test
orb
das
or
ds
stos
jae
cmp
or
push
jno
loopne
std
stos
xor
pop
push
lea
movsb
cmp
int
and
mov
sbb
pushf
jb
icebp
and
mov
fsubr
inc
pop
fldpi
jnp
inc
push
sbb
dec
jmp
ljmp
cli
mov
int
push
dec
scas
aaa
push
pop
inc
jno
cmp
movsl
push
scas
mov
xor
mov
pop
pop
push
daa
mov
or
sbb
jg
or
inc
ja
pop
mov
cmp
ss
dec
dec
cmp
mov
jge
push
imul
add
bound
mov
adc
mov
stos
add
adc
jl
loopne
jge
sbb
mull
jl
xorl
mov
icebp
mov
mov
out
out
push
pusha
in
dec
in
in
mov
add
dec
push
and
jo
insl
xchg
lahf
cli
incb
addr16
jle
pop
in
shll
mov
xchg
mov
push
push
xchg
dec
jecxz
loopne
push
push
pop
lock
pop
and
ljmp
test
xor
adc
outsl
xchg
addb
fildll
arpl
dec
test
enter
mov
fwait
add
push
mov
mov
test
icebp
repz
mov
in
stos
add
int3
sahf
jmp
jae
jne
test
sti
jb
xchg
hlt
push
mov
xor
icebp
dec
mov
mov
cmp
cmc
cmp
add
repnz
sub
shrl
jmp
push
xor
out
push
mov
das
clc
mov
mov
adc
sub
push
imul
repz
or
sbb
pop
mov
test
mov
push
pusha
sub
into
mov
push
push
sub
out
leave
lret
inc
cwtl
and
daa
lds
jns
aam
push
mov
pop
jns
inc
jmp
leave
jle
lahf
fcompl
jno
pop
sub
mov
push
in
andl
fisttps
lock
ja
push
adc
dec
dec
and
out
aam
ds
cmp
fsubl
xor
fnstcw
mov
fdivl
fldcw
sbb
dec
sar
popa
mov
mov
pusha
pop
sysenter
and
addr16
das
sub
lret
stos
fnstcw
nop
clc
push
mov
imul
jmp
xor
add
adcb
outsb
rol
inc
or
adc
andl
mov
mov
imul
leave
movsb
outsb
or
mov
xchg
orb
cmpsb
or
adc
sub
notb
loop
in
in
jbe
pop
jo
in
jns
daa
push
iret
mov
fld
loop
popf
sbb
push
jbe
push
pop
mov
nop
add
and
jno,pt
sub
fwait
call
adc
ds
jnp
add
fwait
xor
adc
sub
pop
adc
mov
popf
loop
ja
xor
in
ljmp
xchg
les
scas
icebp
xchg
pop
repz
mov
inc
dec
xlat
xor
xchg
xchg
cmc
lock
cmp
cmpb
sbb
mov
adc
out
stos
divb
enter
or
hlt
mov
je
inc
push
out
call
mov
es
mov
sub
or
aas
lods
sub
arpl
jle
jo
sub
inc
add
scas
loope
iret
jle
sbb
sbbl
mov
xor
pushf
bound
jl
mov
inc
int3
dec
ljmp
fstp
inc
enter
sub
movzbl
mov
ljmp
call
jmp
incl
cmp
leave
xchg
sub
cmp
test
dec
imul
dec
dec
icebp
inc
mov
sbb
dec
bound
aam
popa
imul
mov
das
jbe
sub
fldpi
stos
push
xor
dec
sub
pop
jl
inc
push
loope
addr16
fisttps
daa
mov
loope
fs
adc
and
das
pop
jnp
arpl
fcompl
push
push
sbb
andl
sbb
jecxz
bound
pop
push
ja
in
dec
mov
or
fnop
xchg
hlt
movl
mov
jp
gs
or
add
xor
arpl
jbe
xchg
decl
mov
jbe
sbb
dec
inc
fstpl
mov
in
cmpsb
fisttpl
cltd
cmc
rcrb
jecxz
mov
or
es
sbbb
jmp
inc
ja
dec
imul
and
cwtl
or
mov
cltd
jecxz
sti
les
mov
push
jne
imul
push
or
ss
sahf
jb
mov
sbb
push
fsubs
mov
jo
sub
gs
pusha
xor
out
xchg
dec
push
inc
push
shl
rclb
sub
cmpsl
mov
and
xor
xchg
jecxz
cmp
test
sbb
mov
loopew
mov
adc
or
and
int
hlt
cmpsl
dec
enter
cld
std
xor
and
adc
sub
call
push
jecxz
sbb
arpl
jbe
mov
mov
add
jae
and
iret
jnp
sbb
cmp
insb
aaa
push
cmp
lret
sub
out
xor
in
inc
stc
jbe
ss
xor
bound
lods
fidivrl
adc
fmull
cmp
cmp
fisubs
pop
push
scas
mov
dec
insl
rolb
loope
fcomps
mov
jae
mov
cli
fildl
xor
xchg
dec
mov
out
inc
sub
and
add
or
cwtl
dec
adc
sti
or
adc
push
mov
or
or
pxor
filds
mov
outsb
mov
push
push
cld
xor
rorb
adc
add
shlb
dec
imul
jne
mov
nop
pop
sbbb
leave
inc
sub
sub
and
stos
mov
subl
inc
adc
push
adc
fistl
mov
popw
and
jle
ret
jge
arpl
orb
stos
movsb
imul
jns
jno
vgf2p8affineinvqb
mov
nop
leave
inc
iret
push
jno
mov
ljmp
mov
cltd
xchg
test
std
rorl
dec
inc
mov
xchg
adc
outsb
clc
icebp
incb
adc
loop
stc
cltd
in
xchg
push
mov
xchg
mov
ret
sub
movsb
andb
add
scas
mov
xor
mov
dec
xchg
cltd
jnp
in
sbb
lods
mov
xlat
xor
cs
mov
xchg
idivb
cld
lahf
popa
aad
in
int3
pop
push
jnp
aaa
in
ss
pop
fs
popf
inc
seta
pop
cmp
jp
xorl
xchg
push
addr16
and
je
mov
fstps
enter
fsubrs
in
mov
js
jecxz
bound
pop
sbb
inc
je
fwait
lods
pop
aam
lahf
in
jecxz
nop
pop
ss
xchg
insl
fmuls
mov
jbe
xlat
loope
addl
xor
mov
pusha
mov
xor
inc
push
outsl
add
leave
adc
call
pop
sub
lds
rcrl
dec
mov
loope
pop
stos
cmp
cmp
xor
outsb
or
sar
fstps
sub
rol
addr16
scas
mov
push
push
dec
fisubl
arpl
cmp
lahf
adc
add
mov
out
ds
add
mov
out
frstor
lret
testl
cmp
loop
mov
jg
aaa
jl
jne
push
or
jl
jb
dec
ret
hlt
out
mul
fisttpl
cmp
jns
jo
cwtl
popf
or
push
out
test
mov
sub
cld
push
push
jle
stos
popl
xchg
mov
or
shll
fcmovu
scas
ds
int3
mov
movsb
mov
mov
mov
rcr
ficomps
insb
dec
pop
or
sahf
cmc
sarb
jge
mov
mov
xlat
pusha
mov
cld
add
and
sbb
mov
jbe
les
xchg
stos
lret
ret
call
mov
test
jmp
pop
in
jl
or
dec
pusha
fdivr
or
sub
jmp
xchg
aas
shlb
rcll
rorl
xor
jle
adc
adc
adc
cmp
pop
mov
dec
repnz
sbb
imul
in
dec
enter
fidivl
jns
push
sub
test
cltd
call
jmp
jb
test
call
inc
xchg
out
pop
iret
mov
and
jl
xor
je
inc
mov
divb
add
sbb
and
adcb
mov
in
jmp
cwtl
popa
mov
and
adc
cmp
arpl
pushf
mov
sbbb
push
sub
loope
fwait
adc
and
ljmp
mov
push
rorl
bound
pushl
int3
lods
pop
leave
xor
sbb
testl
pop
outsl
shlb
lea
xchg
pop
inc
jge
and
jp
mov
xlat
jl
pop
divb
mov
push
lds
and
lods
pop
xlat
sub
stos
jb
xchg
sbb
mov
arpl
dec
or
jecxz
cmc
movsl
dec
test
test
pop
in
xchg
into
mov
jp
or
adc
std
popa
cld
and
xchg
insb
mov
sbb
testl
or
cmp
paddsb
imul
cmp
aaa
imul
in
jle
stos
std
mov
repz
nop
addl
fucomip
fwait
pop
sbb
sbb
pop
lock
adc
rcll
les
lret
mov
cmp
pop
xlat
adc
in
imul
jno
into
call
add
mov
mov
test
jne
add
les
mov
mov
pop
dec
add
lret
pop
add
inc
xchg
adc
scas
es
mov
adc
cmpsb
cltd
icebp
push
in
cltd
mov
xor
mov
cmp
loope
iret
aas
pop
stos
popa
aaa
jg
push
repnz
push
loope
push
cltd
inc
jl
in
inc
iret
push
mov
and
andb
inc
adc
and
in
sub
arpl
dec
cmpb
mov
sarb
inc
push
cmp
sbb
inc
sbb
loope
clc
fnstenv
push
sub
out
fwait
push
mov
lods
adc
in
push
movsl
fbld
lea
inc
pushl
cltd
xchg
pop
mov
mov
out
sub
jge
cmp
inc
lds
sarl
mov
pusha
jmp
incl
inc
lahf
sbb
lret
pop
movsb
insb
shlb
jne
mov
cmc
divl
mov
sub
push
cwtl
mov
mov
sbb
pop
into
dec
push
adc
sbb
sub
fs
pop
mov
arpl
aaa
push
jbe
cs
cmc
popf
inc
pusha
add
pop
lods
test
outsb
adc
test
adc
sub
icebp
shlb
cmc
sub
push
fisubs
lahf
mov
jmp
push
cmp
scas
or
movsb
ljmp
sub
dec
test
out
xchg
mov
insb
in
int
insb
lds
shl
or
outsb
ror
aam
in
xchg
add
shrl
pop
aas
mov
in
sti
adc
lods
orl
pop
or
stos
mov
adc
mov
jnp
xorb
add
cmp
shrb
popa
pop
sub
rclb
shr
cli
mov
sub
fistl
sbb
mov
icebp
dec
jl
mov
add
subl
or
pushf
rcrl
cmp
aam
or
sub
mov
out
fcompl
mov
jne
addl
push
mov
xchg
xor
push
mov
popa
movsb
hlt
xchg
pop
test
pop
enter
lods
or
add
mov
mov
sub
xor
push
cwtl
xor
cltd
aad
aad
orl
or
scas
xchg
sbb
rcl
sbb
push
sarb
cmp
or
rcrb
in
mov
push
out
push
xlat
lods
mov
dec
mov
inc
or
cmpsb
jno
add
test
in
adcl
rclb
adc
jle
jg
cmp
loope
leave
test
lahf
outsl
in
lcall
dec
shrb
sti
movd
popf
jno
lcall
int3
mov
aaa
ljmp
pop
fistps
lahf
push
xchg
scas
popf
xor
lds
add
mov
push
cmp
and
jg
cmp
test
arpl
test
pop
sbb
xchg
mov
das
xchg
jbe
les
mov
push
cmp
xor
jle
ja
or
fdivl
popa
cwtl
fdivrs
cmp
xchg
hlt
inc
sbb
sub
mov
jle
cmp
xchg
inc
movsb
mov
cmp
sahf
frstor
push
mov
xor
pop
mov
add
mov
ds
cld
pop
mov
lea
jo
movsb
aaa
imull
xchg
cmp
sbb
fmull
mov
inc
mov
lds
shlb
sbb
das
mov
fcmove
cmc
inc
push
out
dec
and
mov
and
aas
sbb
iret
nop
xor
arpl
or
pushf
call
fnstcw
push
or
xor
mov
xchg
xchg
pop
repz
test
ja
mov
xor
mov
mov
jo
inc
push
mov
ret
xchg
sub
inc
push
dec
iret
shll
aaa
iretw
adc
jmp
mov
scas
mov
and
push
js
adc
push
push
fnstsw
sbb
xchg
cs
xor
xchg
data16
adc
push
mov
or
nop
push
mov
cmc
pop
xchg
mov
mov
out
push
lods
imul
shrl
or
aam
lea
push
adc
ja
mov
adc
pop
fmull
pop
sub
mov
popf
data16
pop
decl
mov
mov
cmp
push
cmpsl
inc
jge
xchg
inc
sub
or
sbb
notl
lods
bswap
xor
adc
lea
mov
in
or
lahf
push
out
jno
test
and
push
lea
dec
dec
in
xor
adc
mov
dec
lock
loop
xor
mov
pop
cwtl
inc
xchg
cli
pop
fwait
rcrl
sub
cmp
clc
ja
xchg
or
dec
lods
cmp
inc
and
mov
pop
insl
lods
jl
cmp
sbbl
dec
push
hlt
dec
mov
inc
loope
inc
loopne
imul
cmp
mov
mov
cmc
pop
pusha
mov
mov
test
sar
stos
adc
xchg
cmc
xchg
pop
add
adc
xchg
ss
cli
mov
mov
sahf
fld
xlat
ljmp
xchg
cmp
pushf
jne
jle
aam
xor
add
je
inc
insb
mov
test
gs
add
fstpl
jns
push
out
mov
xchg
jno
jo
sti
xlat
or
mov
add
outsb
orl
sub
popa
mov
dec
mov
sbb
sbb
ja
push
mov
decl
cmp
daa
ficomps
mov
je
cmc
dec
mov
xchg
xlat
xor
scas
push
push
icebp
insb
mov
inc
mov
ds
push
repnz
jge
insl
outsb
push
pop
std
or
sbb
mov
jb
icebp
lret
ret
lret
mov
in
int
in
inc
cmp
lret
sbb
jmp
pop
jecxz
adcb
js
jmp
push
es
mov
ss
sbb
cmp
jbe
fwait
push
dec
add
in
pop
cltd
in
mov
inc
mov
push
out
and
xor
sti
adc
mov
pop
dec
jp
pop
sbb
lods
pop
scas
leave
xor
pop
fidivl
cltd
adc
cmp
adcl
mov
aad
ss
faddl
push
push
std
mov
push
lds
loop
pop
xchg
push
daa
or
pop
jmp
sub
sti
popf
out
push
sbb
xor
mov
and
cmpsb
dec
or
out
adc
hlt
iret
mov
xchg
xchg
xorb
cmp
cmp
imull
sets
inc
sbb
data16
mov
ficomps
inc
sub
adc
mov
in
rdmsr
pusha
jp
sub
adc
sbbl
pop
mov
in
push
ficompl
xchg
xor
push
mov
cmp
inc
or
fs
adc
jecxz
pop
subps
pop
rcrl
psubw
pop
cmp
and
mov
sti
int
jmp
jg
mov
push
jg
mov
pop
and
dec
lds
sar
push
mov
cmp
test
mov
jnp
dec
lea
sub
test
xchg
sbb
shll
sbb
ds
lods
jnp
inc
mov
mov
cmp
enter
into
sub
das
int3
out
sub
sub
dec
adc
out
fists
pop
dec
xlat
mov
scas
filds
mov
mov
mov
add
mov
lret
adc
add
out
inc
cs
subb
andl
xorl
mov
xlat
adc
ds
test
pop
leave
enter
test
add
fisubs
pop
push
stc
stos
mov
jbe
pop
icebp
call
xlat
push
ret
data16
in
sub
sbbl
xor
mov
xlat
dec
scas
pop
out
lods
and
lcall
out
xchg
jb
ds
or
xor
sbb
mov
mov
gs
popf
aaa
jecxz
movsb
loope
imul
sub
insb
adc
sahf
dec
dec
push
jmp
mov
dec
dec
imul
inc
cs
mov
jle,pn
shlb
add
dec
mov
add
lret
xor
mov
push
mov
test
in
pushf
test
xchg
pop
cmpsb
dec
mov
pushf
push
enter
arpl
scas
add
dec
push
hlt
call
sbb
add
int3
lahf
add
or
jl
repnz
call
imul
test
pop
adc
std
add
in
loopne
cmp
jp
sti
pop
cmp
lods
sub
aas
movsb
int
or
push
enter
repz
mov
sub
push
cltd
test
lahf
leave
and
nop
test
dec
mov
push
repz
jecxz
sub
push
sub
aam
imul
or
xchg
jbe
sbbl
and
dec
fstl
outsl
mov
addr16
repz
out
cwtl
cmp
adc
xor
shlb
inc
inc
into
add
int3
push
hlt
sbb
sti
ljmp
inc
adc
popf
loop
lods
mov
jge
fadd
mov
mov
incb
inc
cltd
lods
test
cmp
xor
mov
rcll
sub
in
push
inc
fadd
in
add
inc
jo
jp
pop
cmpsb
add
jle
pop
addb
push
enter
rol
add
fidivrl
lods
cmpsl
jns
ds
xor
jno
and
daa
adcl
and
lret
mov
sbbb
sub
pop
dec
pushf
inc
sbb
pop
cmp
test
add
hlt
mov
mov
pop
into
fnsave
pushf
stos
adc
jo
das
flds
pop
imul
iret
call
bound
push
pop
pusha
mov
inc
inc
inc
dec
sbb
aaa
jbe
arpl
push
xchg
jge
inc
data16
xor
scas
aas
ds
test
mov
addr16
adc
outsl
sbb
pusha
lock
mov
aam
mov
and
jg
push
sub
fcomps
sub
jge
mov
mov
push
xor
icebp
fimull
cli
mov
clc
xchg
out
or
or
jne
push
in
sub
es
push
mov
pop
jae
sub
jmp
js
mov
add
push
cmp
jg
movsl
dec
cwtl
jb
push
fildll
js
mov
cmp
add
mov
mov
orb
and
clc
inc
mov
sti
clc
xchg
or
testl
cmp
and
add
push
stos
std
inc
subb
or
out
mov
push
add
inc
cs
insl
add
das
jne
or
inc
mov
pop
cmp
movsl
popf
cmpsb
outsb
jbe
dec
jge
in
cmp
push
roll
lods
push
outsb
sbb
ds
loop
xor
sbb
stos
dec
pop
loope
es
faddp
cltd
dec
mov
jg
pop
scas
stc
push
xlat
inc
sti
inc
and
push
mov
cmp
into
test
rol
and
adc
bound
and
jne
mov
test
loope
jp
lcall
fwait
push
push
push
sbb
sub
jo
sub
int3
std
nop
cmovne
sbb
ja,pt
ds
mov
and
stc
or
pop
or
push
cli
loop
ret
js
jno
add
jp
push
xor
fwait
inc
mov
ja
or
ret
imul
movsb
mov
pop
pop
mov
cli
push
repz
cmp
push
loope
cmp
push
xlat
sarl
in
dec
ja
pop
pop
and
enter
pop
lcall
sub
or
out
or
sbb
sbb
mov
cmpb
and
fisubrs
jl
mov
aam
jp
mov
out
jns
cmpsl
or
mov
popf
mov
pop
dec
and
sbb
xor
and
push
cmpsl
or
ds
dec
lret
mov
mov
adc
outsb
mov
inc
outsl
cwtl
lret
pushf
lcall
fisubl
cmpsl
stos
xor
and
ret
scas
loope
ficomps
in
push
or
push
inc
push
sbbb
hlt
push
adc
inc
gs
fldenv
and
aad
xlat
fsubl
push
fidivl
jl
cli
andl
insl
fnstcw
dec
fistl
and
cmpsb
cmp
and
fcmovbe
into
jne
dec
xchg
cmp
in
push
jge
sbb
jp
xor
pop
cmpsl
arpl
mov
xchg
sbb
mov
mov
cmp
pop
xchg
mov
ret
popa
inc
push
cld
xor
dec
xor
sahf
lods
xor
int3
mov
fadd
fbstp
pusha
outsl
push
popf
push
sub
sti
stos
jle
in
cmc
cs
push
sbb
lahf
lods
js
xchg
mov
inc
mov
sub
dec
sbb
mov
cld
imul
cmpsl
mov
mov
push
out
popf
dec
mov
mov
xchg
nop
push
push
mov
mov
mov
negl
fld
jl
test
mov
sti
js
lret
cmpsb
cwtl
or
dec
in
push
mov
lahf
mov
cmp
cltd
sub
xchg
xor
aam
jge
mov
cmp
lret
mov
jle
insl
cmp
dec
popa
or
fbstp
or
out
enter
xchg
add
fildll
fcmovnbe
iret
testl
push
les
add
in
jle
and
jnp
retw
cltd
in
dec
cwtl
mov
push
inc
mov
out
inc
pop
pop
push
mov
inc
movsb
insl
mov
nop
imul
push
jbe
inc
mov
stos
jne
jmp
xchg
js
movsw
imulb
or
js
icebp
leave
mov
rcrl
or
loopne
addr16
xchg
mov
ljmp
test
and
push
shl
pop
add
fnstcw
mov
lods
sub
mov
out
and
cmp
inc
test
lret
out
pop
cltd
push
cmp
cmp
mov
adc
add
movsb
pop
pop
jp
dec
mov
xchg
shll
pushf
mov
jae
mov
and
mov
push
sbb
cmpsl
mov
jge
andb
outsl
int
mov
mov
sarl
les
test
in
xchg
ret
push
loop
in
iret
push
movd
xor
mov
ss
lock
add
dec
dec
or
mov
sub
sub
insb
cmpb
enter
lcall
and
nop
pusha
cmp
adc
push
sub
jecxz
fbstp
mov
pop
repnz
hlt
subb
mov
sub
add
sub
mov
mov
repz
jge
andl
in
mov
push
push
fidivrs
pop
stos
int3
sbb
xchg
sub
cld
leave
enter
iret
sbb
leave
adc
aas
ja
cmp
iret
cmp
xchg
lock
and
push
add
data16
xadd
xchg
jnp
shrl
movsl
or
pop
mov
fists
mov
mov
lea
ret
fsubrl
bound
fcomp
and
rol
cmp
data16
out
inc
rcrb
add
dec
in
in
cld
icebp
movsb
adc
sub
rorl
and
aam
movsb
jnp
push
imulb
inc
in
xchg
out
fstps
jecxz
adc
sub
and
push
adc
repz
xchg
cmp
cmpsl
scas
and
mov
mov
jg
in
inc
scas
push
sbb
pop
or
mov
add
or
mov
sub
loopnew
jecxz
mov
addr16
das
pop
jnp
jecxz
les
ror
lcall
push
ret
inc
ret
inc
sub
inc
or
mov
mov
sbb
fistpll
sub
or
cmp
or
nop
xchg
jmp
pop
imul
jbe
leave
pop
inc
cmp
sbb
clc
sbb
push
xchg
icebp
mov
dec
mov
imul
mov
push
popa
jnp
stc
movsl
mov
stos
add
loopne
cvtps2pi
inc
push
adc
and
mov
and
xchg
mov
int3
fbld
fists
fwait
popa
jne
xor
jbe
adc
shrb
adc
jl
adc
out
mov
dec
xchg
xor
dec
cld
add
inc
mov
leave
int
movsb
lock
dec
dec
icebp
jne
adc
mov
xor
add
xor
push
dec
mov
inc
js
pop
ja
mov
cmpl
hlt
ljmp
rcl
mov
repnz
insl
std
cmp
pushf
pop
jbe
pop
pop
out
mov
ret
xchg
mov
mov
xchg
push
cwtl
xchg
mov
out
cmp
aam
leave
xchg
push
sbb
or
cmp
leave
mov
int
call
jb
loope
xchg
movsl
jb
addr16
out
or
push
jbe
data16
or
mov
loope
neg
mov
push
idiv
imul
mov
insl
jns
add
shlb
in
sub
mov
xchg
mov
sub
test
es
aas
shl
sbb
notb
cvtpi2ps
pop
lret
mov
mov
shrl
mov
lods
add
pop
inc
cmp
mov
lods
xor
mov
subb
sub
in
mov
outsl
daa
mov
cmp
xchg
jb
arpl
sub
sbb
ja
inc
cli
fdivrs
ret
bound
je
jb
data16
inc
xor
nop
fadds
xchg
lcall
cmp
ljmp
xor
loope
push
xchg
pop
ret
sar
mov
add
sbb
sbbb
loopne
add
jno
roll
leave
aam
mov
scas
xchg
js
dec
dec
mov
les
xor
mov
add
movsb
mov
cltd
lods
cld
scas
cmp
push
pop
jecxz
and
in
sub
shrb
pop
ljmp
cmc
ffree
xor
push
mov
icebp
ss
or
push
cmp
pop
push
and
inc
aaa
or
xlat
mov
inc
std
fbstp
sub
jns
xchg
pop
fadds
lods
daa
sahf
or
rcrl
arpl
mull
test
xchg
pop
cmpsb
nop
repnz
popa
push
dec
mul
or
cmp
outsl
stc
fsubrl
in
aam
xchg
imul
ret
into
test
sbb
push
or
xchg
fistl
in
or
push
xchg
jle
pop
testb
dec
loopne
int
dec
and
cmp
fs
iret
push
sbb
jnp
lds
mov
sbb
insl
js
int
pop
xchg
shll
mov
push
xchg
icebp
mov
xlat
or
jle
int
sahf
xchg
shrb
and
pop
sub
push
out
xor
lock
clc
fnstenv
rorb
mov
xchg
roll
orb
mov
mov
lcall
addr16
pop
out
mov
jnp
mov
or
mov
cmp
mov
in
sbb
push
or
xchg
cmp
int3
movsl
fiaddl
mov
inc
std
adc
inc
pop
mov
inc
movsl
inc
xchg
inc
orl
xchg
dec
test
push
fisubrl
mov
mov
mov
int3
mov
cmp
scas
popa
mov
cmp
rorl
hlt
rorl
lret
cmpsb
mov
jns
pop
mov
repz
push
dec
shlb
mov
mov
jmp
add
fs
add
fnstcw
fistl
add
pop
outsl
mov
pop
out
xor
shrb
lret
aas
dec
hlt
sbb
add
mov
fbstp
push
xadd
cmp
jmp
shl
add
test
adc
pushf
repnz
out
pop
imul
add
aas
addb
pop
lock
and
jne
test
xor
pop
test
ja
lods
repz
or
xchg
fwait
xchg
sub
fdivrp
repnz
or
add
jg
sub
push
stos
pop
daa
dec
fcomps
cwtl
mov
mov
jg
popa
pusha
cmp
jns
push
test
pop
add
pop
fsts
cmp
fcmovb
adc
data16
pop
push
mov
ror
sahf
or
fneni(8087
lea
adc
or
lahf
in
and
loope
outsb
pop
adc
fdivrs
xor
enter
xor
mov
es
sbb
xor
ret
adc
cwtl
aam
or
addr16
mov
mov
stos
sub
jno
imul
fs
std
scas
in
xchg
fisttpl
push
push
inc
lds
xchg
negl
bound
mov
iret
vandnps
fnstsw
daa
add
daa
jo
negl
mov
and
lods
dec
sbb
aaa
push
js
icebp
lock
hlt
push
inc
pop
cmp
xchg
cmp
les
stos
xor
and
jp
cmp
xor
jp
lret
or
sub
pop
cwtl
sub
inc
testb
in
xchg
add
nop
inc
loopne
inc
out
outsb
sub
or
ret
add
mov
pop
nop
jle
in
add
jno
cmp
in
xlat
in
sbb
jb
inc
jecxz
mov
aam
ret
adc
mov
xchg
xchg
mov
lcall
cmpsl
inc
or
fmul
mov
rcrb
pop
push
mov
push
loop
fwait
push
int3
cs
xor
fistpll
and
loopne
dec
repnz
mov
xor
inc
mov
adc
add
jbe
xchg
jbe
repz
out
lcall
sub
push
or
sbb
push
mov
ljmp
pop
dec
jge
push
push
sub
push
je
mov
cs
sub
jnp
dec
lret
mov
pop
jp
push
and
popf
cmp
clc
movsb
fmull
mov
data16
repz
adc
pop
or
jg
dec
ret
xchg
mov
test
inc
pop
jmp
lea
mov
mov
and
test
adc
or
jnp
mov
pop
cld
lds
mov
pop
hlt
fidivrl
and
sbb
jb
in
mov
and
mov
addr16
test
push
pop
dec
add
hlt
repnz
aam
rsm
mov
nop
call
pop
sti
push
jmp
cmpsl
aad
lret
inc
pop
roll
aaa
push
push
popa
mov
movsl
xor
jecxz
push
xor
dec
ror
fstpt
and
gs
gs
aaa
out
lods
xchg
jns
or
cmp
mov
dec
cmpsl
repz
push
cwtl
mov
lods
pop
mov
lea
inc
gs
dec
inc
jb
rorb
or
and
stos
mov
xlat
rcrl
movsb
cmc
in
fucomp
leave
and
jno
cld
repnz
sbb
adc
mov
mov
popa
inc
or
or
mov
push
pop
ljmp
cmp
int3
mov
jmp
clc
xchg
sbb
sahf
pop
inc
inc
lods
or
mov
or
int
inc
push
mov
fnstenv
xor
cmpsb
enter
pop
out
push
jp
shll
mov
lods
xchg
fstpl
push
sbb
cmp
imul
mov
mov
ja
call
jns
cmp
cltd
cmpsb
stos
scas
insb
addr16
add
stos
insl
mov
xchg
addr16
into
test
out
loop
sub
mov
sbb
fistpll
pop
sbb
inc
jg
pusha
ds
mov
push
mov
out
pop
sbb
xchg
das
pop
ret
imull
mov
xor
out
jno
data16
ss
rol
mov
mov
push
ja
rclb
xlat
imul
cmpsb
xchg
lods
cmpsl
xor
cmp
add
fs
pop
mov
cmp
dec
or
xchg
mov
jbe
push
int3
mov
adc
decl
push
pop
sbb
pushf
sub
mov
movsb
inc
lahf
mov
cltd
inc
mov
xlat
sti
add
and
or
cmp
call
jecxz
lods
push
sub
pop
mov
mov
add
fcoml
pop
test
in
or
lahf
rol
sti
xor
dec
add
sub
loope
adc
or
cmpsb
pop
mov
xor
cmpsb
pop
add
jae
int
inc
and
cwtl
les
test
push
mov
and
adc
enter
mov
fistps
sahf
outsl
or
sbb
and
mov
pop
stc
pop
out
cmpsb
das
push
mov
das
xor
lret
xchg
xchg
jmp
aas
add
and
cmp
adc
inc
rolb
mov
lds
ljmp
jne
cmp
add
mov
dec
jnp
enter
aaa
push
fcomps
rcrb
pop
cmp
adc
or
xor
xchg
hlt
xchg
clc
ret
xchg
mov
sub
jo
jg
cs
mov
cmpsb
cmp
and
cmpsb
pop
test
aas
imul
mov
sub
lret
jbe
bound
mov
cmp
lods
inc
push
push
mov
bound
cld
xchg
jno
sub
das
and
xor
scas
outsl
sub
and
xor
or
inc
add
mov
push
fisubrl
out
xchg
test
xor
xor
cltd
pop
test
data16
cmp
xor
mov
push
iret
outsb
sbb
jp
clc
movsb
cmp
rorb
jno,pt
pop
or
inc
cmp
scas
push
and
adc
and
mov
leave
xor
fsubp
sbb
ljmp
int
mov
mov
push
mov
test
sub
dec
adc
iret
nop
sbbb
call
push
adc
scas
and
and
mov
push
xchg
sub
loop
or
mov
notl
cmp
into
sti
loop
sub
xor
out
test
hlt
andl
scas
outsl
pop
iret
mov
adc
pop
dec
mov
ss
es
jle
push
out
sbbl
inc
cltd
je
adc
out
mov
adc
in
adc
pop
push
push
cmp
and
pop
or
out
xchg
lock
fucomip
xchg
mov
jo
faddp
repnz
mov
jmp
insl
or
ss
jg
cmc
ljmp
aad
mov
mov
daa
jmp
sti
mov
xlat
mov
in
shll
mov
ret
xor
mov
mov
rcr
dec
xchg
jbe
dec
sahf
mov
int3
mov
cmc
cld
dec
rcll
jecxz
outsl
mov
xor
push
and
mov
cmpsb
lods
and
hlt
insb
sub
test
xchg
jno
dec
or
mov
cli
pop
into
pop
std
adc
lea
mov
mov
push
xchg
shlb
and
pop
adc
clc
xchg
jle
jne
hlt
nop
clc
fucom
sbb
cmp
jno
iret
outsl
mov
dec
mov
xchg
and
mov
mov
or
aam
pop
imul
or
stos
xor
aad
js
popf
jne
inc
lret
inc
inc
ficomps
in
call
icebp
xchg
sub
xchg
push
decb
ds
sahf
daa
dec
shlb
div
xchg
repnz
mov
dec
xchg
pop
fimuls
fidivrl
addl
adc
ds
fcomps
mov
adc
scas
enter
xchg
scas
lret
add
pusha
repz
sub
xchg
adc
cmpb
aam
js
push
cmp
mov
data16
push
sqrtps
mov
outsl
imul
xchg
int3
cld
xchg
aam
stc
outsl
icebp
ss
inc
gs
ret
popf
mov
repnz
adc
adc
cltd
xchg
jnp
jbe
pop
sahf
fwait
and
cmp
insb
pop
xchg
inc
sahf
ds
out
or
adc
push
ret
mov
mov
enter
sub
out
push
shlb
pop
scas
push
andl
test
jb
cld
fistps
test
out
mov
and
xor
add
add
les
mov
cmp
add
pop
enter
fcomps
mov
lods
arpl
xor
xor
loopne
jmp
pop
loope
push
pop
cmp
sub
jecxz
mov
or
out
jne
xchg
shll
test
sub
lods
add
xor
repz
fs
scas
mov
mov
movsl
lea
inc
adc
sub
call
xchg
popf
push
idivl
jae
divl
sbb
out
jge
ja
xchg
imul
xlat
inc
out
imul
inc
test
add
jno
arpl
cmpsb
cld
jb
jmp
insl
iret
into
adc
and
rcll
dec
nop
pop
push
out
adc
out
mov
xor
jp
sub
es
pusha
ret
jbe
fdivrs
xor
cmp
inc
cwtl
pushf
rclb
fsubl
cmpsb
lds
test
push
test
data16
mov
add
sbb
adc
jno
mov
in
mov
lds
pop
je
push
cs
adc
xchg
add
in
dec
push
sbb
std
or
jnp
insl
loope
rcrb
lea
jne
test
xchg
jecxz
in
mov
shll
sbb
repz
add
leave
popf
push
mov
out
push
cmp
daa
xchg
loopne
sbb
ret
mov
jecxz
add
xchg
cmp
clc
mov
push
push
fnstcw
jbe
addl
fldpi
jecxz
fidivrl
inc
mov
out
test
cmp
lret
loopne
mov
sbbl
test
mov
loope
data16
icebp
add
or
push
dec
jns
xchg
fsubrs
dec
imul
jecxz
jmp
data16
xchg
faddp
fisttpll
int3
push
je
sbb
jns
lds
and
cmc
lock
adc
or
das
sbb
inc
mov
movsl
dec
mov
mov
cmp
enter
out
adc
std
mov
insl
jmp
pop
je
mov
ret
jg
fldl
std
sahf
insb
sbb
nop
hlt
jb
daa
xor
insl
pop
mov
ds
jg
dec
imul
xchg
pushf
test
pop
addr16
in
rcrl
mov
push
dec
or
in
mov
clc
push
dec
or
enter
aad
pushf
jns
add
pop
push
push
cwtl
movsb
ret
cmpsl
subb
andb
sti
push
ret
dec
sub
arpl
mov
xor
mov
mov
scas
vrcpss
add
mov
das
pop
cmpsb
sti
adc
lea
xlat
push
pop
test
adc
pop
clc
fs
in
jnp
dec
loop
dec
mov
faddl
xchg
mov
push
into
jns
sbb
xlat
xor
mov
push
xor
xor
sar
adc
xchg
push
mov
xchg
push
cmp
imul
test
inc
sub
sti
dec
mov
fisubl
or
movsb
xor
repnz
push
shll
das
adcb
fidivs
xor
jmp
xor
pop
inc
xchg
movups
cmc
pop
or
cld
stc
loop
mov
outsb
jmp
cltd
mov
aam
push
cmp
rcrb
pop
push
push
sub
mov
mov
outsb
or
and
mov
adc
mov
rcr
cmpsb
mov
xor
dec
es
movsb
mov
lret
fldl
cld
cld
addr16
cld
call
out
jcxz
adc
or
cld
mov
mov
mov
sbb
jl
jns,pt
scas
addl
and
das
push
add
add
mov
fisubl
aas
push
push
add
aam
jmp
pop
pop
lds
repnz
in
pop
sarb
cld
imul
mov
push
sbb
fwait
and
jbe
mov
pushf
and
xlat
sub
and
inc
fisttpl
call
lret
cmc
test
add
call
aam
cmpsb
inc
fbld
mov
jb
imul
pop
mov
rolb
xchg
sub
pop
xor
cmp
xor
icebp
inc
scas
sub
pushf
jns
dec
mov
fisttpl
or
lcall
mov
xchg
pop
loop
in
data16
jbe
add
push
and
stc
mov
lods
mov
adc
jae
add
scas
sbb
jle
in
lret
mov
popa
add
cwtl
push
add
mov
out
jo
call
mov
mov
sbb
push
mov
rcll
sbb
mov
call
mov
dec
fdivrl
push
jb
fildl
mov
add
lods
ja
adc
xor
pop
sub
fcompl
pusha
mov
inc
adcb
insb
roll
push
cltd
int3
cli
repz
or
push
divb
sub
dec
jbe
test
scas
pop
jnp
in
push
mov
pop
or
test
pop
mov
and
cmp
xor
xchg
mov
mov
out
loop
inc
and
stos
fcoml
sbb
xor
insb
add
into
mov
and
loope
lds
mulb
xor
out
iret
pop
mov
dec
pop
xchg
adc
sbb
jecxz
cmp
mov
mov
dec
pop
sub
push
arpl
daa
sbb
arpl
and
mov
adc
sbb
adc
xor
push
in
insb
xchg
out
rolb
sbb
in
aas
rcll
mov
mov
mov
rolb
mov
pop
sahf
daa
jae
iret
test
adc
mov
mov
mov
inc
out
rorl
in
fdivrs
jae
cmp
fwait
push
mov
dec
in
mov
pop
cmp
pop
xor
mov
pop
mov
sub
lods
mov
popa
and
jbe
pop
icebp
mov
out
movsl
mov
cmp
je
cmp
in
int3
dec
and
dec
cltd
jno
jmp
jb
inc
cltd
test
pop
jae
and
sub
stc
xor
and
lea
cmpsb
mov
mov
mov
cld
cltd
aas
movsl
dec
add
xchg
sub
adc
add
pop
arpl
mov
pop
pop
cmp
test
sub
outsb
adc
sbbl
in
addl
imul
xor
les
clc
mov
push
popf
adc
xor
ljmp
js
in
xchg
inc
mov
push
fs
jecxz
dec
jge
ja
testl
or
mov
sub
inc
ret
push
dec
je
lea
aas
xor
xchg
dec
shll
jb
or
sub
mov
inc
xor
adcl
cmp
fsubs
into
pop
aas
fdivl
add
fucom
stos
outsb
add
testb
lock
jnp
jge
push
out
mov
push
jno
and
add
add
dec
and
int3
ljmp
in
das
frstor
enter
inc
xor
jecxz
pop
jb
sbb
cmp
or
cmc
fisubl
insb
xor
movsl
outsl
push
outsb
ljmp
push
into
xor
inc
pop
rorb
cmp
add
je
cmc
cmp
jle
push
outsl
mov
test
push
xor
repnz
mov
sbb
stos
or
sbb
mov
push
fnsave
add
sbb
pop
outsl
push
inc
popa
je
insb
repnz
test
sub
mov
mov
icebp
or
out
push
les
mov
lods
xlat
inc
call
mov
and
xor
stc
ljmp
jg
enter
fisttpll
lds
xorl
xlat
jp
mov
rep
sbb
shll
div
lods
out
arpl
fiadds
pop
roll
inc
pop
lea
lods
xchg
mov
or
adc
cli
stc
cs
or
arpl
or
inc
in
imul
test
mov
pop
fsubrs
call
mov
jge
dec
stc
test
testb
push
and
addr16
insb
stos
inc
jmp
mov
pushf
jbe
xor
scas
movsl
mov
mov
iret
sub
sbb
pop
cmpsl
mov
loop
xor
filds
loop
fcmovbe
jp
xchg
ret
pop
cmpsl
mov
xchg
jp
inc
adcb
dec
repnz
xchg
pop
cmp
dec
inc
aad
fcmovb
mov
mov
mov
sbb
push
and
mov
pop
and
cltd
cmovae
cmpsb
mov
xchg
cmpb
loop
push
push
imul
insb
jle
push
bound
sbb
addr16
neg
sbb
cmp
add
jl
js,pn
inc
outsb
xor
int
test
and
cmpsb
in
xchg
mov
add
xchg
ja
and
ss
xchg
and
in
mov
insb
mov
cld
mov
insl
clc
leave
scas
add
mov
insb
iret
inc
mov
adcl
cmpsb
ror
test
out
fldenv
sbb
fs
add
mov
std
ss
ja
mov
jbe
imul
mov
adc
inc
xchg
inc
inc
les
loopne
sbb
jecxz
lods
sub
cli
sarl
sub
inc
int
insb
jbe
movsb
push
and
jae
gs
or
dec
or
add
cmpsb
nop
add
mov
mulb
add
jp
testl
push
inc
mov
repnz
into
addr16
cmc
mov
xor
add
shlb
and
loopne
and
or
adc
out
flds
mov
sbb
mov
mov
jg
repz
out
dec
aam
fwait
add
mov
or
sub
test
xor
lret
jp
cld
push
mov
lods
inc
xor
dec
nop
lock
sti
jbe
cmpsb
or
lock
pop
test
xor
lock
mov
outsb
jmp
xlat
cmpsb
mov
aas
stc
sub
push
push
into
inc
lods
sti
fbstp
mov
iret
lret
aas
adc
sub
adc
pop
dec
push
pop
inc
dec
aas
pop
add
lret
sbb
and
jb
push
jecxz
cmp
xchg
adc
mov
adc
jge
movsl
cwtl
or
pop
pop
and
sub
mov
fimull
pop
xchg
pop
int
div
test
xor
cs
sub
sbb
cld
aad
popl
mov
inc
inc
loopne
jecxz
movsl
fucomip
mov
pop
adc
push
insw
scas
cmpsl
test
movntps
jmp
xor
loope
mov
sbb
xchg
xchg
scas
jmp
loop
mov
push
and
push
xchg
add
push
mov
aad
and
cltd
adc
cltd
sub
rorl
shrl
lods
ljmp
push
mov
rcrl
loope
xchg
mov
mov
ficomps
fcomp
rol
fisubs
fs
or
daa
les
xchg
mov
sub
push
stc
cmpsb
cmc
jl
outsb
or
in
scas
push
stos
pop
push
out
pop
fcoml
insb
insl
adc
xlat
add
dec
inc
cmp
addb
fidivs
inc
loop
int3
int
and
mov
xor
sbb
mov
imul
mov
andl
repz
enter
outsl
popa
mov
hlt
stos
mov
ds
cmp
jp
lcall
jb
adcl
mov
add
push
stc
fistpl
shlb
sub
jp
push
outsb
popf
xor
or
mov
push
mov
inc
push
mov
in
push
xchg
mov
add
ret
cmp
add
dec
mov
or
je
sti
in
mov
fcom
mov
sub
scas
out
mov
jecxz
lock
or
xor
outsl
in
loop
mov
mov
repnz
push
sub
sbb
jp
dec
out
jl
jb
scas
imul
push
dec
aam
in
clc
rclb
js
or
imul
cmpsb
mov
and
inc
sbb
movsb
outsl
notl
jae
mov
scas
xor
jp
insb
cmc
xchg
test
mov
pop
cmp
addr16
ret
pop
rcl
sbb
dec
push
movsl
xchg
dec
sub
loope
lret
push
xor
push
mov
into
xchg
lods
pop
mov
adc
xchg
test
lods
pop
int
xor
rolb
pop
pop
jle
push
pop
mov
aam
jmp
adcb
fs
stos
inc
mulb
lea
scas
ljmp
cmpsb
and
or
jmp
or
jae,pn
cmpsb
mov
jne
mov
repnz
in
inc
inc
push
push
cmc
ljmp
xor
lcall
mov
mov
push
fdivrl
push
jmp
push
jecxz
or
pop
inc
jl
es
daa
mov
neg
popf
fdivs
imul
icebp
lods
enter
repnz
in
imul
adc
cmc
pop
mov
test
scas
sub
pop
pop
fldt
iret
sbb
outsl
xlat
jbe
dec
leave
fs
jmp
pop
pop
dec
inc
pop
jmp
cmp
xchg
dec
pop
adc
pop
xchg
cmp
xchg
mov
jp
xchg
dec
push
lret
pop
invlpg
arpl
aam
cmp
mov
sub
aaa
and
int3
sbb
sbb
jnp
fldt
and
push
cmp
dec
movsb
rcl
scas
inc
lods
adc
adcl
or
stc
mov
out
addr16
stc
insb
pushf
jae
call
cmp
lods
push
dec
lock
rclb
rclb
xchg
mov
dec
inc
addr16
insb
pop
dec
xlat
jg
mov
sub
xor
mov
sti
ds
or
cmp
cltd
cmp
jns
adc
and
add
daa
lahf
insl
clc
xor
subb
push
insl
lea
mov
fadd
jns
jne
enter
loop
in
jno
mov
pop
pop
in
out
push
into
into
rorb
leave
pop
or
push
and
fiadds
xorl
es
sub
hlt
sub
xchg
arpl
imul
jmp
jl
dec
sub
lret
out
arpl
pop
add
adc
lea
aaa
xchg
std
cmp
xchg
xor
lcall
jmp
dec
iret
stos
xchg
cmc
int3
scas
mov
jp
push
xor
sub
sub
out
pop
out
jl
pop
movd
nop
lea
es
out
push
mov
xchg
daa
lcall
enter
mov
xchg
cli
cli
in
dec
push
xchg
pop
mov
loope
sahf
stos
cltd
movsl
not
mov
mov
jecxz
fnstsw
das
sbb
xchg
aas
and
lahf
decl
and
mov
push
gs
sti
mov
xor
push
fistpl
ffreep
int
mov
divb
xorb
dec
jl
or
push
mov
adc
jbe
dec
inc
jns
out
cmp
inc
or
sub
ljmp
mov
mov
xchg
sbb
in
and
aaa
adc
rcll
mov
push
cli
les
xchg
icebp
fnstenv
repz
movaps
push
or
cmp
jns
ds
lods
jge
adc
or
decl
shlb
mov
cmp
inc
hlt
hlt
hlt
sbb
stos
push
addr16
inc
int3
push
sahf
inc
cmp
xor
int3
negb
push
push
ljmp
test
dec
popf
call
cmp
leave
out
into
mov
cmp
addr16
jbe
sti
mov
pop
push
cmp
and
pop
popa
mov
leave
lret
cmc
stc
jg
insl
cmp
and
mov
andb
mov
or
lock
pop
repnz
dec
fwait
dec
dec
inc
push
out
dec
ss
lods
fs
jl
std
jge
sahf
out
outsl
gs
inc
mov
lods
cmc
stos
addr16
stos
jo
and
outsl
int3
aas
inc
mov
pop
gs
pop
lods
push
mov
xchg
pop
mov
std
popa
hlt
sahf
in
mov
stc
jno
mov
ljmp
rorb
lret
or
dec
xchg
xchg
in
cmp
cmp
push
sub
jecxz
nop
jg
push
mov
aad
fsub
fisttpl
aas
fisubs
inc
outsl
cmc
cmp
adc
xchg
jno
pop
fsubrs
movsb
mov
push
ds
sub
adc
xor
ret
test
pop
in
xchg
test
loopne
cmp
insl
mov
mov
dec
xlat
jbe
push
mov
mov
addr16
push
jns
jne
jae
rcrl
push
or
or
push
pop
mov
lods
ljmp
and
mov
and
pop
inc
shl
pop
cmp
push
mov
or
inc
int3
inc
pinsrw
dec
sbb
call
xor
fwait
push
and
fucomi
sbb
add
loop
out
sub
add
and
cmp
xor
imul
pop
add
lret
add
mull
xlat
adc
mov
jae
enter
outsb
mov
ret
jmp
sbb
shlb
rolb
fnstcw
pop
or
leave
out
aaa
mov
jmp
repnz
xchg
je
jge
add
clc
pop
fstpt
rcrb
test
cmp
les
imul
adcl
fcoml
mov
cmp
sbb
mov
dec
jo
fmulp
repnz
popa
imul
orb
ret
lea
mov
cmpsl
gs
jmp
jmp
mov
xor
icebp
insl
dec
aaa
pop
rcrl
lahf
or
daa
aas
sbb
shrl
dec
and
lds
sbb
sub
mov
sbb
inc
outsb
add
push
lods
fadd
push
lds
inc
mov
imul
adc
fstpl
dec
ret
faddl
sbb
in
mov
in
xor
xchg
sub
sbbl
lret
mov
aam
xor
int3
pop
mov
jge
mov
pop
imul
clc
sub
add
jecxz
cld
loopne
add
sub
sarl
bound
xchg
iret
push
or
lret
or
xor
inc
adc
mov
aas
jne
fcoml
out
dec
jbe
popa
jp
popa
ret
pop
jnp
cwtl
mov
iret
xor
pop
add
push
mov
xor
mov
test
or
aas
mov
arpl
xor
mov
ljmp
scas
add
pop
popf
pusha
and
std
jmp
into
movsb
mov
inc
test
pop
arpl
sbb
lret
loop
dec
jne
dec
out
push
jne
pop
loop
adc
mov
jmp
dec
cmp
fdivrs
inc
mov
inc
fistpll
daa
sahf
pop
ja
stc
fsubr
dec
cmpsb
add
stc
pop
pop
xchg
adc
mov
out
aaa
dec
insb
lock
mov
xchg
cs
frstor
push
stos
dec
ds
outsl
xor
je
dec
cmp
fsubs
xor
lock
cmpsb
mov
stos
lret
or
test
xor
fistl
leave
adc
adc
sub
cltd
cltd
push
sahf
xlat
mov
fdivr
sbb
mov
pop
xor
popf
adc
or
adc
div
cmc
cli
inc
xchg
loopne
sub
es
xchg
push
in
pop
add
stc
inc
ljmp
rcrb
js
mov
add
or
sub
xchg
adc
out
pop
inc
inc
pop
or
iret
jno
loop
aaa
in
xchg
mov
ds
xor
mov
jnp
jl
ja
dec
or
jmp
movsl
adc
sub
fistpl
dec
xchg
and
mov
test
out
push
jnp
xchg
rcrb
daa
fsubs
mov
sub
imul
pushf
mov
mov
xor
rcll
jb
xor
jmp
es
popf
cmpsl
xor
sbb
and
shlb
inc
mov
cltd
push
ljmp
mov
in
cmc
mov
test
into
in
mov
jl
fstpl
mov
gs
mov
dec
data16
lret
cmpsb
mov
das
lods
adc
mov
xchg
popa
push
xor
or
fsts
gs
mov
add
inc
and
jp
aaa
sub
or
sub
mov
lds
cld
cmp
and
mov
xor
in
jmp
cli
das
and
fucomip
in
cltd
pushf
adc
cmp
or
test
push
dec
mov
cmp
out
mov
add
cmpsl
xchg
es
xlat
jp
xlat
xor
cmc
xor
sbb
push
sbb
data16
inc
clc
pop
sbb
fsubrs
or
and
xlat
fldz
fnsave
dec
or
imul
and
lods
loopne
xor
adc
pop
xchg
push
stc
ror
pop
jge
jno
xchg
orb
inc
jno
mov
push
sbb
sbb
lock
sbb
int
sbb
push
fwait
lock
jmp
int3
sub
or
cwtl
int
shrb
hlt
mov
xchg
fimull
push
negl
jg
mov
push
jmp
adc
pushf
std
mov
mov
add
das
push
jnp
notl
popa
call
insb
mov
or
lret
mov
cmpsb
pusha
jmp
fcomi
je
aam
addr16
popa
popf
repnz
xchg
xor
jnp
xchg
inc
xchg
jns
and
ret
shlb
rcll
mov
cltd
pushf
dec
sbb
mov
sbb
xor
leave
add
call
mov
ret
xchg
fsub
sub
xor
xchg
or
adc
mov
add
xor
loope
pop
out
in
sbbb
addr16
and
rorl
xchg
xchg
aam
into
jl
jecxz
push
rcl
add
xchg
xlat
fnsetpm(287
mov
outsb
adc
push
loopne
mov
adc
in
cmp
mov
jge
cld
xorl
shl
stos
dec
jae
add
mov
jbe
dec
cmp
in
sbb
pop
push
es
mov
inc
pop
jle
or
je
ret
aaa
divb
arpl
xor
adc
xor
daa
inc
mov
fists
push
std
jle
cli
jle
mov
lea
je
bnd
dec
cmp
insb
or
and
fxch
pop
inc
cmp
inc
jae
mov
adc
rol
jecxz
testl
out
or
add
dec
dec
inc
pop
lret
mov
jbe
push
mov
mov
fisubs
pop
xor
cld
dec
lds
jo
jb
add
lahf
adc
cmp
sbb
lahf
push
dec
or
ss
negl
vpmacssdqh
sub
shlb
jb
lret
mov
lods
jns
push
popa
pop
orl
push
xor
or
jno
lods
pop
xor
pop
lret
xchg
or
bound
pop
into
and
pop
aas
test
dec
popf
xor
jo
insb
xchg
mov
mov
jne
cmp
add
bound
and
dec
add
pushf
cli
inc
mov
int3
ljmp
jno
mov
test
ds
js
out
test
mov
and
lods
cmp
scas
int
add
insl
pop
add
push
fwait
jnp
jp
jae
mov
and
les
fs
lea
mov
hlt
push
adc
test
dec
push
push
and
sub
xor
scas
add
push
add
int3
sub
sbb
out
fcompl
ja
sti
sbb
stc
stos
lock
sub
inc
dec
adc
mov
jp
and
scas
xor
mov
sub
sahf
imul
les
push
lods
scas
stos
jle
pop
rdpmc
into
cmpsl
ret
pop
add
in
jns
mov
mov
out
gs
lahf
push
push
arpl
subb
mov
pop
imul
dec
or
mov
push
cmc
out
cmp
popf
test
jns
pop
les
aas
out
out
iret
pusha
or
dec
pusha
dec
mov
xor
dec
in
enter
xchg
and
sahf
jno
and
js
pop
ljmp
jbe
movsl
lods
mov
movsl
mov
shrl
mov
insb
dec
and
rcrb
or
fisttpl
movsl
pop
out
shll
imul
call
xor
sub
adc
xchg
cli
xor
rcll
mov
aam
repz
cmpl
cs
sti
sub
jbe
insb
xchg
mov
cwtl
adc
xchg
movl
mov
sub
bound
xchg
shr
rorl
cwtl
call
sbb
jbe
inc
ljmp
sbb
nop
js
hlt
push
sub
inc
mov
jns
pushf
in
push
sub
add
pop
outsl
sbb
inc
clc
ficoms
int
into
sbb
sub
mov
xchg
mov
rol
cmpsl
in
or
ret
data16
jns
pop
fidivrs
adc
enter
push
push
shlb
roll
test
xor
sub
mov
mull
jmp
leave
push
pop
or
push
mov
mov
mov
test
or
pop
mov
mov
mov
ret
push
xchg
mov
xor
icebp
and
lock
or
jbe
xor
in
test
xchg
pusha
sub
mov
mov
lea
or
inc
sahf
test
dec
pop
and
inc
out
rcll
fwait
pop
xchg
jge
in
out
aam
ret
stos
mov
int
enter
xor
je
clc
lret
test
shrb
and
sahf
loopne
cmp
sbb
sbb
pop
jmp
mov
test
sbb
push
mov
inc
and
cmpsl
lods
fidivs
loope
adc
jbe
xchg
insb
cwtl
push
inc
sub
popf
das
in
out
ret
test
pop
dec
repnz
add
pop
in
push
frstor
loop
and
into
mov
add
fcmovnbe
pop
jl
xchg
insl
mov
jb
cwtl
sub
cmp
sub
mov
mov
push
mov
mov
push
aaa
xchg
or
lret
mov
in
pusha
push
adc
mov
xchg
into
xchg
and
push
outsl
outsl
frstor
fsts
data16
add
cli
lods
and
mov
xchg
push
lds
adc
js
ds
sar
test
or
mov
loope
pushf
shl
movsl
dec
imulb
jl
adc
repnz
mov
mov
push
dec
adc
fsts
push
mov
xchg
or
stos
add
rcrb
mov
xor
loopne
sbb
popf
je
clc
shrb
or
ljmp
pop
jb
cmp
test
das
fs
enter
mov
push
push
shll
icebp
mov
ret
sahf
pop
inc
mov
and
ja
mov
cmc
mov
jnp
and
aad
mov
lret
ja
jae
jne
popa
cmp
in
sbbb
insl
or
sub
sbbl
xchg
adc
adcl
ss
arpl
addr16
xchg
fcmovb
ja
lcall
jo
push
mov
movsl
sbb
inc
cwtl
mov
imul
mov
pop
push
sub
jb
cld
push
test
add
cmpsb
xor
cld
dec
add
cmp
mov
scas
mov
jg
fwait
inc
sbb
inc
shrl
loop
movsl
sahf
in
xchg
add
test
inc
ret
cmpsl
push
sbb
push
jnp
pop
in
fbld
xchg
xor
sbb
mov
cltd
inc
insb
movsb
fidivs
add
xchg
xlat
lods
loopne
pop
test
push
aaa
sti
push
pop
out
jecxz
stos
jge
inc
sub
mov
mov
stc
mov
ffree
int3
and
out
lea
popf
mov
push
adc
sub
xor
xchg
inc
cmp
adc
mull
cmc
cmp
popf
mov
sarb
xor
stc
mov
jl
imul
pop
jb
divl
cld
clc
popf
push
sbbl
mov
insl
roll
in
mulb
lock
xchg
fldenv
dec
xchg
xchg
xor
ja
lahf
leave
jmp
pop
mov
jg
mov
or
mov
stos
lea
stos
es
call
fdivr
mov
int
adc
cli
cmp
orb
je
aam
xchg
sbb
mov
test
cmp
mov
jnp
mov
and
iret
sbb
sbb
jp
sub
inc
mov
mov
ss
rol
add
mov
aam
jle
pop
mov
add
sbb
adc
loop
mov
cmp
jnp
insl
mov
mov
aas
dec
lock
xor
addl
jge
mov
jmp
push
shl
fcomi
jp
sbb
inc
and
je
inc
mov
cmpsl
jno
popl
in
sbb
dec
rcrl
fmull
push
fildl
cmp
lods
insb
loopne
cmp
sub
mov
push
xchg
outsl
mov
mov
lods
add
pop
sbb
std
sub
jl
push
lea
lds
pop
fstps
xchg
lea
hlt
cmp
andl
pop
arpl
cmp
jecxz
dec
push
inc
mov
cmc
push
mov
pop
insl
mov
icebp
mov
xlat
loope
jns
sub
dec
pop
shr
insl
dec
or
std
jmp
sub
loop
shr
iret
repnz
jge
shll
mov
shlb
sti
int3
sti
sahf
dec
push
push
loop
sbb
jecxz
adc
fwait
or
dec
loopne
jns
xor
sbb
cwtl
out
int
dec
cmp
sub
push
mov
cmp
js
xlat
sbb
in
stos
adc
scas
ss
popf
test
movsb
xchg
ret
loope
add
xor
pause
dec
mov
fisubs
jb
jns
mov
stos
push
mov
mov
and
mov
mov
fcomps
pop
inc
shlb
jge
inc
loopne
sub
xchg
dec
cs
cwtl
popa
jne
cmp
fdivp
jae
push
jecxz
icebp
and
sbb
int
add
mov
or
inc
dec
or
push
mov
cltd
jmp
mov
cmp
sub
sbb
sub
lret
negb
jg
mov
push
push
and
pop
ljmp
xchg
push
mov
dec
arpl
fmull
mov
sbbl
add
mov
mov
popf
sbb
cltd
and
sbb
and
cmp
movl
mov
aas
mov
fistpll
insl
data16
mov
inc
idiv
push
rol
imul
cld
iret
mov
push
jo
add
push
mov
mov
aaa
dec
fimuls
xchg
sub
mov
sti
fcom
jmp
xchg
sbb
dec
lret
xchg
inc
out
sub
dec
xor
lods
push
xor
mov
stos
cmpsl
sets
cmc
jnp
xchg
or
loopne
inc
stos
aad
aam
mov
xor
ds
xchg
test
sar
loop
sub
ficoms
jnp
in
fildl
jp
ja
out
or
ret
fisubrs
je
xchg
inc
test
movsb
pop
mov
insl
sub
push
mov
add
test
in
mov
mov
mov
in
bnd
push
data16
push
sti
xor
out
mov
aad
pop
or
out
test
pop
stos
adc
dec
jb
add
and
popa
lock
insb
aam
add
aaa
dec
or
sbb
xchg
mov
add
lods
xor
jae
pop
pop
fdivs
mov
outsl
push
jmp
cmp
mov
pop
inc
shl
imul
jg
jle
and
pop
and
jecxz
fistps
and
loope
adc
mov
pop
sbb
mov
adc
repnz
pop
das
cs
cmp
mov
arpl
div
lea
xchg
xor
or
ret
xchg
in
push
mov
incb
pusha
lcall
jle
fnstcw
loop
orl
jbe
fstpt
or
cmpsl
mov
shrl
rolb
adc
mov
sbb
cmc
in
aaa
sbb
repnz
pop
les
add
xchg
push
clc
iret
xor
gs
pop
loop
stos
adc
sti
mov
xchg
in
jge
mov
aad
sub
fisttpl
stc
adc
pop
shrl
add
xlat
addr16
aas
or
adc
and
xor
outsb
stos
int
mov
rcrl
inc
fisubrs
fisttps
jp
movq
pop
nop
shrb
jl
push
cltd
add
in
or
popf
jb
push
cmp
push
cmpsb
scas
fildl
mov
cmp
jmp
add
out
rorb
roll
xchg
mov
inc
jns
adc
sub
imul
in
sbb
add
push
xlat
pop
test
daa
lret
test
shl
call
dec
jl
jno
cmpsl
mov
cwtl
adc
pusha
ret
loopne
xchg
mov
mov
dec
rolb
daa
mov
jae
test
js
pop
ficoms
xchg
xor
pop
push
fcomps
insl
lock
fcmove
xor
jle
jae
xor
mov
sbb
aad
mov
test
push
mov
int3
bound
inc
rcrb
push
mov
pop
push
push
insl
jl
out
shrb
sbb
add
in
add
aam
dec
and
mov
mov
je
aas
adc
rorb
pushf
dec
sub
cmp
jecxz
ror
sbb
push
xchg
add
ret
pop
fstpt
adc
test
xor
out
stos
adc
stc
lock
push
xchg
scas
jno
mov
and
and
pop
test
jo
mov
sbb
lret
sahf
push
jl
push
or
je
aad
or
fwait
mov
cmp
pop
xchg
adc
test
fsubrl
stc
stos
loopne
inc
jl
clc
ret
sarl
jmp
push
testb
es
clc
es
fisubrl
shl
mov
jb
mov
push
xchg
addr16
mov
xchg
or
pop
in
cltd
lock
inc
inc
lahf
xor
leave
sbb
push
movsb
lds
das
dec
jmp
sub
jg
mov
sub
ja
dec
popa
test
jge
dec
fxch
test
mov
adcb
mov
inc
mov
sbb
stc
or
test
movsl
mov
xor
and
orl
mov
push
mov
loop
not
cmp
ds
sahf
adc
adc
and
sub
loop
add
cmp
xchg
fstpt
bound
xor
cli
push
cltd
pop
push
adc
fwait
push
and
mov
ret
mov
insb
call
hlt
and
cmp
fcomi
popa
lods
nop
scas
or
pop
pop
jns
jge
shll
ljmp
popf
popf
lcall
insl
cwtl
ret
xchg
lcall
cmpl
lcall
mov
sub
sub
push
or
lret
push
shlb
push
stos
leave
cli
in
ss
sti
rorl
pop
lock
aaa
fdivrs
loop
pop
pushf
sub
pushf
repnz
adc
insb
lods
jmp
dec
mov
orb
sbb
imul
xchg
iret
int
mov
mov
push
dec
test
test
ja
cmp
mov
and
xchg
and
push
test
pop
add
mov
cwtl
orb
je
scas
pop
imul
dec
dec
mov
loopne
fsubrs
xchg
sub
fwait
clc
pop
push
in
repnz
and
mov
jae
or
call
cli
jle
xlat
in
cmpsl
insb
and
mov
lcall
and
sub
or
in
icebp
adc
jae
scas
xchg
or
add
or
mov
icebp
add
fstps
push
xor
out
les
mov
cmp
pop
xchg
push
out
std
push
jo
outsl
leave
jp
pop
sub
push
int
in
jo
sti
lahf
sub
hlt
dec
cmp
jne
jb
mov
fsts
outsb
bnd
cmpsb
in
push
fdivrl
adc
repz
pop
arpl
push
popa
inc
ret
in
cmpsb
push
xor
cmp
out
adc
jbe
dec
adc
xor
pop
pop
cmpb
xchg
cs
std
add
pop
and
adc
imul
pop
and
dec
adc
jnp
xor
in
cmp
subl
cmp
and
fwait
ret
sahf
roll
mov
orb
sub
pop
mov
cmc
cmp
in
sub
add
shlb
jg
pusha
xchg
pop
les
mov
inc
shlb
mov
cmp
mov
test
cmp
inc
cmp
jno
lcall
add
xor
pushf
push
xor
cmp
popf
pop
outsb
and
fbld
jnp
jo
or
test
lods
aas
adc
ja
sbb
cli
sub
mov
rcll
nop
jbe
sbb
mov
mov
lea
addr16
add
and
adc
iret
push
cmp
out
dec
xorb
iret
and
cld
mov
les
insb
sub
jge
popf
mov
shrb
push
xor
inc
lock
dec
sub
pop
add
push
rcrb
push
adcb
ja
mov
in
fdivrp
adc
or
pushf
mov
inc
je
std
xchg
or
dec
loope
sbb
dec
and
scas
cmpsl
push
and
ds
jl
lds
repz
or
jo
gs
daa
mov
xchg
add
into
scas
or
outsl
jge
jmp
mov
sub
mov
lods
repz
push
cwtl
vsubps
dec
push
pop
dec
daa
leave
divb
fstps
subb
jnp
int3
dec
push
sarl
jl
mov
dec
in
stos
jl
push
cmp
adc
xor
nop
adc
cmp
call
js
and
or
add
lahf
push
data16
cmp
xor
hlt
mov
jb
jmp
mov
or
stc
dec
dec
push
stos
mov
ljmp
cmp
imul
imul
sub
pop
mov
iret
add
pusha
dec
and
jmp
adc
xchg
xchg
in
fcomps
add
or
imul
sub
sub
in
mov
dec
shl
lds
adc
sub
jo
sarl
lahf
add
lods
out
cld
jne
arpl
xor
insl
out
enter
inc
jge
cli
push
push
scas
insl
or
faddl
push
icebp
and
mov
xor
xchg
cld
hlt
mov
xor
movsb
xlat
insl
movsb
rcrb
loop
mov
and
testb
dec
jmp
lds
popa
push
cs
jecxz
addr16
jecxz
pushf
ljmp
cmpsl
jmp
into
xor
mov
insb
jo
in
stos
stos
inc
int
or
lahf
adc
dec
jne
out
jle
lret
gs
rcrb
sti
pop
andb
sbb
out
shld
lret
int3
mov
pushf
adc
mov
data16
pop
in
repnz
jns
jo
inc
and
inc
outsl
popf
mov
shrl
push
xor
xchg
or
dec
fwait
stc
push
mov
fisttpl
call
add
aaa
out
sub
or
out
rcll
cmp
orl
add
mov
fidivrs
push
mov
add
rcll
jne
mov
in
test
jo
push
aad
ret
adc
dec
icebp
push
jle
dec
dec
mov
fwait
mov
fsubrl
mov
fnsave
lea
cltd
pushf
jle
daa
aam
js
xor
xchg
push
and
mov
cwtl
push
push
pop
aaa
cwtl
or
mov
cmp
sahf
iret
icebp
in
movsl
mov
adc
lret
push
pop
or
dec
pop
adc
xor
pop
daa
mov
icebp
cmp
mov
insb
mov
mov
or
les
arpl
mov
push
fadd
aad
mov
sbb
xlat
ret
sti
pop
aas
inc
xchg
push
rcrb
mov
mov
lcall
in
sub
pop
popf
push
loopne
pop
les
push
jb
lret
push
icebp
push
mov
fbld
enter
mov
mov
dec
sbb
mov
dec
mov
push
das
push
jbe
xchg
outsl
sub
adc
adcl
fsubl
je
adc
jle
push
cmp
mov
sub
daa
aaa
call
repz
ds
andb
fisttpl
push
fisttpll
ds
push
rcrl
js
jo
cmc
jl
ret
fcoml
pop
out
adc
loopne
movsl
xor
pusha
sarl
frstor
repz
scas
ficoms
sarb
pushf
sbb
jne
mov
xchg
lahf
and
jo
cwtl
sbb
shll
sub
sahf
movsb
ficomps
inc
push
stos
ljmp
dec
add
mov
push
or
scas
sbb
cmp
cmp
loope
jge
ss
pop
fstpt
mov
xlat
xor
inc
mov
dec
jecxz
test
andb
jecxz
sbb
les
pop
in
inc
sbb
stos
jne
xchg
mov
pusha
arpl
push
sbb
in
test
ljmp
push
cmp
repnz
mov
sub
cmpsl
scas
rcll
pop
mov
jne
fwait
adc
push
fistpl
mov
aas
mov
aad
stc
pop
inc
out
mov
dec
jns
and
les
inc
scas
sub
aas
js
inc
xchg
cmp
push
dec
add
jbe
push
jo
pop
dec
inc
jb
push
ds
andl
aas
sub
or
or
and
sahf
int
fcompl
adc
mov
das
aad
pop
rolb
xor
ror
push
loop
outsl
push
jle
xor
or
push
cmc
mov
imul
in
sbbl
lret
push
loopne
pop
imul
hlt
imul
or
pop
push
in
push
imul
cmp
std
imull
mov
mulb
adc
adc
pop
ljmp
sub
shrb
dec
push
mov
sbbb
xor
pushf
data16
repnz
xchg
xchg
insb
cld
jge
gs
xor
ss
sbb
dec
enter
xchg
cwtl
pop
cwtl
sub
mov
push
pop
shlb
adc
int3
fwait
hlt
xor
fucom
mov
xchg
push
adcl
inc
fidivrs
icebp
shll
mov
repnz
pop
sti
movsl
out
pandn
inc
cltd
push
mov
lods
outsl
popa
adc
push
adc
lahf
lods
inc
imul
imul
scas
fisubl
mov
loopne
mov
int3
push
sub
cltd
sub
push
insb
in
pop
pop
imul
xor
icebp
mov
movsb
cmpsb
das
aam
xor
sbb
xorl
ret
inc
push
leave
loopne
stos
in
dec
adc
popa
adc
stc
push
cmpsb
inc
js
adc
sbb
pop
sbb
inc
mov
mov
sbb
sbb
sub
xor
outsl
icebp
mov
sub
js
mov
movntps
out
divl
mov
rcll
aas
dec
popa
ud0
or
mov
dec
jp
push
test
lds
movsl
xlat
adc
mov
imulb
xor
test
lea
dec
jle
cli
jmp
mov
mov
sbb
test
dec
jecxz
imul
out
out
sub
lods
imul
ret
sbb
jp
test
fs
pop
xchg
sahf
stc
lret
int
ret
ljmp
adc
bound
cld
push
sbb
loope
pop
enter
mov
stos
loopne
mov
and
loopne
push
out
dec
push
mov
cmpsb
mov
arpl
out
ret
and
and
lret
push
mov
fldl
adcb
fwait
xchg
push
jns
jbe
daa
push
mov
popl
pop
fcoml
movsl
movsl
or
push
cmp
cmp
xor
push
cmc
ret
ds
lock
xchg
in
sbb
imul
rcll
pop
sub
test
out
sarl
out
jecxz
mov
lcall
je
inc
dec
mov
xchg
cmp
insb
je
dec
push
cltd
mov
popa
mov
and
ds
jne
xor
adc
xchg
mov
jecxz
scas
cmp
dec
test
jge
icebp
ss
add
sbbb
fs
mov
or
in
mov
outsb
sbb
sti
out
xchg
jl
pushf
addr16
ljmp
push
out
gs
pop
stc
idivl
sbb
jb
and
test
stc
dec
sti
das
xchg
in
adc
add
idivb
fisubrs
xchg
pushf
push
xchg
mov
dec
test
push
fstl
sbb
arpl
push
cmp
jns
sub
cmp
pop
movl
jbe
je
push
stos
ljmp
inc
mov
repnz
and
stos
cld
fcmovnbe
mov
push
in
mov
in
pop
iret
dec
lahf
pop
hlt
fdivrl
adc
jbe
mov
pop
cmp
push
into
push
cmp
mov
or
xchg
outsl
cmp
jns
fs
pmullw
lahf
shufps
movsl
ficompl
push
sub
repz
in
or
gs
sbb
mov
fs
jns
inc
cmpsl
cmp
mull
fwait
fwait
sbb
push
scas
lahf
sub
sbb
out
ja
cmpsb
jge
pop
sub
xor
lea
into
sti
jno
mov
cmpsb
mov
ljmp
jno
pop
mov
and
or
jae
fwait
adc
xor
int
jne
sbb
in
jno
push
jo
or
sti
pushf
hlt
movsl
addr16
push
pop
bound
jl
out
sub
mov
inc
adc
sbb
or
push
jge
and
push
in
xchg
pusha
mov
add
test
fisubs
ficoms
mov
push
imul
cmp
cmp
mov
sub
or
roll
cld
ficompl
repz
test
loop
dec
lret
and
pop
out
jo
in
out
iret
movsb
jecxz
repnz
hlt
mov
mov
mov
int3
pop
lods
ljmp
sbb
xchg
sub
stc
dec
lods
add
and
pop
adc
pusha
and
aas
xor
xchg
repnz
sbb
lds
nop
in
or
out
push
add
pop
pop
inc
sti
in
push
or
xor
call
mov
int3
cmpsb
jmp
and
pop
fisttps
push
xchg
push
loope
mov
pop
sub
repnz
jg
cltd
mov
xlat
and
cmp
jno
or
test
mov
xor
mov
fimuls
sub
fmul
daa
fldt
mov
andb
mov
push
cmp
popf
test
adc
cmp
jle
imul
and
inc
ljmp
cwtl
xchg
push
inc
pop
dec
cmp
dec
jb
movl
out
xor
int
ret
mov
int3
int3
ret
les
pop
faddp
fdivs
cmp
mov
ret
xor
imul
jne
jecxz
addr16
jne
add
loop
out
daa
std
or
fwait
dec
jge
dec
mov
mov
xlat
push
bound
dec
sbbb
fcmove
mov
outsl
cmp
xchg
aam
je
xor
shl
psrlq
daa
mov
mov
ljmp
and
jbe
stos
xchg
jne
fisubrs
arpl
mov
jp
lcall
aad
push
clc
pop
mov
icebp
sarb
loopne
sbb
add
stos
push
sbb
adc
addr16
xchg
mov
ret
mov
mov
adcb
cmp
add
cltd
dec
mov
xchg
fwait
aam
jg
movsb
in
ja
pop
or
movsb
cmp
das
mov
sub
xor
add
cmpsl
negl
loopne
mov
sbb
xchg
das
cmp
bound
call
shl
pop
mov
shlb
xchg
sub
xlat
mov
into
fsubrs
and
movsb
jb
cmp
dec
adc
sub
add
mov
mov
out
jbe
hlt
outsl
das
and
sbb
cwtl
inc
std
mov
sbb
out
xor
jnp
and
sub
popf
xchg
mov
inc
jns
loope
xor
cld
fmuls
fistl
cmp
jno
insb
xchg
adc
das
test
adcl
push
xlat
xchg
inc
xchg
xlat
xor
xchg
lods
aas
sbb
popa
jb
pop
pop
orb
lods
xor
pusha
adc
or
clc
dec
jle
mov
pop
clc
inc
je
jg
imul
xlat
or
mov
je
adc
mov
xchg
cmpsl
and
repz
cli
cltd
mov
mov
imulb
cmp
insb
andl
mov
cmc
daa
test
rorb
mov
mov
pop
push
ds
test
das
outsl
pushf
lods
pop
push
movsb
cli
or
pop
cmp
repz
jecxz
mov
mov
dec
ss
pushf
pop
mov
jp
jecxz
xchg
mov
or
cmp
jle
jle
mov
popf
cmp
insl
imul
imul
push
dec
dec
outsb
cmp
inc
dec
test
inc
sub
inc
test
jp
mov
shr
pop
fstps
sarb
into
movsl
pop
add
lret
fildl
mov
xchg
scas
adc
mov
movsb
cltd
cmp
xchg
sbb
fidivrl
rcll
addr16
adc
jge
mov
mov
mov
jnp
mov
mov
fisttps
jle
jnp
mov
pop
mov
das
xor
imul
add
mov
mov
jae
cmp
es
test
popa
fwait
pusha
in
in
cs
lcall
jb
xchg
adc
mov
add
xor
mov
adcb
push
mov
sbb
outsb
and
lods
fsubl
adc
mov
movsb
jmp
neg
xor
out
sbb
xor
sub
ljmp
testl
xor
or
cmp
imul
push
and
jle
push
outsl
cmp
or
adc
jmp
mov
cmp
and
arpl
add
hlt
shrl
popf
push
xlat
out
jl
lahf
and
mov
xchg
nop
jbe
sahf
icebp
mov
out
sub
mov
lcall
jmp
mov
mov
mov
or
and
add
jb
mov
lock
cmpsb
mov
stc
loope
cmpsl
push
dec
mov
and
std
fisubl
pop
xchg
add
dec
mov
addr16
sub
scas
rcr
outsl
sahf
lret
mov
rcrl
pop
out
sbb
mov
popl
testl
or
test
and
xor
adc
push
sbb
xchg
pushf
movsb
out
xorb
and
add
cwtl
ret
cmp
or
test
xor
and
mov
movsb
test
jno
cmp
jae
andl
in
or
mov
and
ljmp
out
es
aam
and
xor
aam
sub
in
out
dec
insl
dec
mov
shlb
dec
ja
add
arpl
mov
push
mov
ret
scas
insb
pop
jg
push
jne
psrad
mov
lods
pop
sti
popa
insb
sub
lods
mov
fisubs
xchg
stos
add
out
loope
xchg
ss
test
mov
mov
test
cltd
lds
xor
xchg
and
inc
movsb
dec
jo
cli
or
inc
jnp
mov
mov
leave
ret
push
call
out
and
mov
into
stos
push
lock
pusha
fldt
cli
cltd
sarl
idivb
sub
inc
mov
or
jnp
mov
cmp
aam
les
dec
mov
and
cmp
jecxz
clc
inc
outsb
pop
mov
mov
sahf
mov
imul
sbbl
dec
loop
lret
data16
movsb
mov
call
jle
mov
xchg
mov
sub
add
xor
push
lods
popa
push
push
or
sti
add
rcrb
daa
xor
mov
int
test
lds
pusha
push
int3
xchg
sti
mov
jmp
das
mov
movsl
pop
lret
inc
lock
faddl
push
add
adc
cmc
add
lcall
js
xor
push
mov
or
ret
rol
out
leave
sti
jl
and
lock
aam
stc
divl
jo
mov
jg
aas
call
popf
enter
loopne
cmp
jne
jb
add
dec
movsl
push
xor
push
rolb
jl
stc
push
sbb
cmc
add
inc
sti
mov
mov
dec
or
out
das
clc
movsl
lahf
mull
scas
inc
pushf
xor
jmp
push
das
loope
mov
and
out
dec
aaa
mov
and
jp
rcrb
mov
jl
lret
dec
dec
pop
and
fmuls
push
loope
xchg
pop
je
in
ret
mov
insl
lock
in
ds
fildll
jp
xchg
push
push
notb
mov
sbb
loope
mov
test
pop
lods
popa
jg
sbb
inc
adc
cmp
mov
sbb
dec
movsl
jnp
cmp
test
inc
jno
popa
sbb
mov
mov
sbb
data16
pop
inc
jo
mov
mov
adc
fwait
mov
xchg
mov
scas
sub
pusha
mov
xchg
mov
xchg
inc
add
into
sti
push
add
mov
int
testl
in
cmpsl
fsubl
das
inc
sbb
sarl
add
mov
mov
fimuls
int
rol
xchg
scas
xchg
insl
mov
jg
pop
in
cmpl
fwait
mov
jle
movl
add
jbe
daa
mov
xchg
sub
add
ljmp
jnp
mov
xchg
sub
mov
decb
dec
out
fs
out
jg
xlat
xor
mov
mov
jmp
mov
sbbb
inc
out
daa
pop
sbb
arpl
movsl
cmc
popf
add
stc
mov
sub
loop
dec
inc
jge,pt
inc
fwait
movsl
loopne
dec
xor
mov
arpl
lds
adc
inc
pusha
inc
cmp
test
loop
out
lock
xchg
iret
xor
cmp
sbb
std
and
dec
les
icebp
xor
jl
clc
lcall
cmp
or
daa
rcrb
in
cmp
jle
dec
cli
jmp
lcall
xchg
jno
and
pusha
xchg
mov
scas
or
ss
mov
push
es
sub
jp
sti
scas
xor
inc
pmaddwd
add
or
insl
cltd
and
xchg
lret
inc
inc
push
mov
dec
lock
divb
lods
dec
adc
out
xchg
movl
lret
gs
push
mov
add
roll
add
popf
xchg
cmp
mov
inc
sub
shl
jns
ja
xchg
push
sbbb
outsb
xor
je
xor
jecxz
xchg
and
inc
mov
test
sbb
and
mov
cli
add
icebp
mov
xor
and
fdivr
jmp
lods
mov
sbb
int3
mov
mov
cmp
adc
adc
loope
sbb
sti
mov
cli
or
fbld
adc
sbb
fldl
sbb
sti
arpl
outsl
push
and
lret
jp
icebp
sbb
je
pop
sub
std
pushl
pop
mov
icebp
adc
dec
sbb
jno
pop
in
fnsave
cwtl
ret
push
mov
mov
mov
xchg
sbb
imul
adc
out
dec
pop
xchg
adc
add
clc
inc
mov
ja
shlb
data16
hlt
mov
aad
xchg
pusha
xchg
fs
xor
push
out
test
cltd
pop
adc
test
arpl
xlat
mov
cltd
pushf
xchg
sub
or
cli
jge
sub
les
enter
adc
repnz
xor
cmp
or
mov
push
in
popa
out
hlt
sbb
or
and
add
dec
stc
xor
dec
stos
adc
mov
jnp
inc
imul
pop
leave
xchg
mov
jbe
push
cli
fnstcw
in
cmp
pop
or
scas
mov
pop
jge
das
pusha
pop
loop
mov
scas
scas
sarb
inc
popf
inc
jne
test
jp
push
pop
push
sub
inc
cli
andl
addr16
test
cmc
sbbb
lock
fs
xor
sub
mov
fadds
in
dec
fdivp
cmp
mov
xor
out
idivl
imull
addr16
repnz
daa
sub
adc
cmp
loop
mov
add
mov
jg
add
icebp
pop
int
pop
mul
adc
je
pop
inc
xor
adc
leave
popf
ret
in
lcall
mov
std
aas
insb
mov
jl
sub
inc
add
pop
adc
pushf
out
adc
jp
out
iret
imul
repnz
adc
scas
pop
xchg
adc
sub
pop
push
iret
mov
mov
fmull
inc
push
xor
rolb
in
repnz
mov
lret
sub
push
mov
sbb
mov
inc
sbb
pop
jne
pop
js
gs
cmp
fiadds
mov
push
sar
decb
sub
pop
push
fs
cltd
cwtl
mov
inc
dec
mov
arpl
rcll
add
fwait
xchg
pusha
repnz
pop
push
fimuls
xchg
fisttps
movsb
insl
addr16
dec
dec
lods
jp
xchg
scas
adc
leave
mov
aas
jne
jb
push
rcl
out
mov
and
outsb
fadds
ljmp
dec
insl
cmpl
xchg
fistpll
scas
gs
sarb
pop
int
cwtl
adcb
cwtl
xchg
sti
loope
pop
jmp
xchg
jnp
mov
icebp
or
add
sbb
mov
xchg
das
and
test
jne
pop
lret
sub
rcrl
and
adc
xchg
jl
sbb
shlb
stos
call
lock
push
in
push
cwtl
jae
inc
sub
addr16
test
dec
pop
jno
cmpsb
jp
imul
sbb
pop
jne
shrb
inc
xor
js
imul
out
push
sbb
xlat
mov
adc
sbb
push
stos
stos
push
add
jp
mov
roll
xchg
push
or
and
imul
fs
movsl
inc
test
aaa
outsl
fldl
nop
lret
imul
adc
or
lea
lods
idivl
out
adc
fcom
fcomps
insb
mov
int3
cmp
cmp
xor
das
js
lcall
push
subl
mov
mov
xchg
dec
lcall
jno
cmp
pop
and
add
scas
ret
pop
pop
inc
movsl
adc
fdivrl
add
sbb
mov
jecxz
gs
mov
cld
jecxz
loop
iret
xchg
xchg
push
inc
out
xor
fcoms
pusha
outsl
arpl
leave
in
push
push
jnp
jbe
int3
out
sbb
add
push
add
cld
push
ss
jge
fisubl
jl
aaa
mov
jecxz
out
adc
popf
inc
aaa
in
and
mov
push
jg
sarb
pop
mov
sub
ja
test
or
ss
cld
sahf
test
into
pop
movsb
jge
mov
jno
xor
lret
dec
dec
push
in
loopne
rorl
sti
cmpsb
xchg
pop
mov
or
iret
sbb
cs
ret
and
sub
xor
sbb
je
pop
xchg
jmp
fs
inc
stos
push
and
ds
lods
cmp
pop
sub
bound
test
jge
jge
pusha
ljmp
mov
xor
and
test
stos
ss
jnp
cltd
nop
in
dec
je
stc
scas
add
xor
scas
js
clc
pop
dec
xlat
and
int
repz
cmp
pop
push
mov
out
aad
dec
xor
push
and
push
sbb
testb
int
cmp
inc
jbe
out
shrb
cmpl
and
cwtl
xor
aad
lea
aas
mov
mov
mov
iret
iret
mov
jo
loope
sbb
inc
add
adc
lret
push
popa
mov
jle
ficoms
jp
sub
adc
cmp
in
sub
add
mov
fstpt
iret
xchg
add
pop
jg
dec
jne
mov
cmpb
ror
dec
mul
push
pushf
xor
orb
flds
add
xchg
hlt
adc
pushf
imul
mov
push
mov
iret
cmp
fcomps
pop
out
pop
popa
lahf
push
inc
mov
xchg
stc
loopne
adc
ljmp
lret
adc
daa
out
jge
cmp
sub
sbb
ds
ds
push
inc
jnp
data16
mov
jae
sub
push
sub
sahf
popa
mov
or
fsubr
imul
jb
divb
stc
arpl
cltd
data16
push
mov
cmc
ljmp
aam
lret
push
mov
jmp
sar
mov
add
push
xlat
ss
stos
mov
adc
jl
cli
insb
mov
and
pushf
push
jg
sbb
cltd
xor
in
in
and
in
mov
ret
mov
popf
add
adc
jl
arpl
add
xchg
and
clc
in
mov
xor
cmp
rolb
out
jnp
movsl
pop
jo
mov
xor
pop
movsl
sub
aad
lock
and
cwtl
xor
ret
fidivrl
push
fcoml
add
test
stc
or
mov
pop
mov
cmp
mov
out
stc
fisubrl
jb
stc
sub
mov
cmpsl
and
sub
cbtw
sbb
loopne
or
mov
gs
push
cmp
add
test
arpl
scas
jno
aad
mov
lea
test
inc
mov
sbb
test
out
mov
add
lods
insb
sub
add
imul
jne
pxor
daa
pop
vaddsd
test
mov
push
iret
mov
cmp
scas
iret
out
imul
adc
mov
jp
out
dec
xchg
enter
add
or
insb
call
jno
sti
ss
leave
aas
mov
jae
es
push
inc
lcall
cmpsb
pushf
pop
dec
test
in
loop
data16
lods
mov
xchg
xorl
jno
test
xchg
and
stos
jg
cmc
imul
std
sbb
fmuls
dec
lret
lods
in
mov
xlat
inc
lea
in
add
mov
sbb
cmp
jne
and
dec
mov
sbb
or
subl
jae
fucom
iret
dec
mov
cmpsb
rol
dec
test
or
dec
adc
int3
clc
push
lds
lds
cmp
mov
es
jmp
pusha
or
mov
inc
fmul
lret
loope
sarl
and
xchg
in
sbbb
cmp
ds
inc
push
or
inc
sahf
mov
insl
in
lret
shlb
and
sub
push
dec
icebp
and
dec
notl
or
mov
pop
jl
ret
sub
popf
xchg
scas
dec
sub
aas
mov
cmpsb
cltd
mov
jnp
mov
add
out
mov
jecxz
xchg
jne
ss
sub
sub
repz
and
addl
mov
pop
or
pop
xchg
call
test
mov
inc
movsl
adc
mov
adc
push
and
pop
into
das
popl
pop
test
sbb
pop
push
clc
xchg
cmp
movsl
jo
imul
mov
sub
xor
mov
add
mov
push
adcb
fidivl
xchg
mov
in
mov
lret
mov
ljmp
les
jo
ret
mov
mov
jl
cltd
out
adc
push
clc
iret
imul
mov
shll
mov
push
xor
popa
ret
jnp
dec
test
mov
repz
stos
pop
inc
xor
xor
sti
mov
and
sahf
sti
popf
mov
rolb
sti
sti
gs
std
insl
mov
or
arpl
and
mov
dec
icebp
xchg
adc
arpl
scas
sub
inc
repnz
sbb
sbbl
cmp
roll
stos
int3
movsb
icebp
cmc
pusha
and
fmulp
std
push
ret
outsb
shll
xchg
or
pop
pop
mov
daa
mov
dec
xor
cmpsb
in
mov
jb
lods
mov
loop
add
pop
mov
add
sets
dec
loop
mov
popa
cmc
mov
lock
add
clc
outsb
inc
xchg
out
mov
dec
jp
and
mov
insb
popf
xchg
cmc
insl
lcall
lods
imul
dec
mov
push
in
mov
inc
outsb
bswap
xchg
out
ljmp
xchg
adc
adc
mov
mov
inc
xor
xor
pop
daa
scas
test
add
lds
movsb
push
or
jne
inc
stos
sbbl
pushf
cld
popa
pushf
in
mov
js
jecxz
je
sbb
in
xor
ret
scas
scas
ret
xlat
ja
jl
mov
xor
mov
dec
sub
push
ds
dec
adc
lods
jbe
in
adc
hlt
test
out
dec
ret
int3
fucomip
test
std
es
dec
shll
hlt
idivl
push
push
and
xlat
dec
xchg
jb
sbb
loopne
test
inc
into
dec
mov
push
lahf
out
cwtl
sub
cmpsb
scas
mov
leave
scas
pop
repz
mov
and
fucom
insl
das
mov
push
sbb
pop
call
mov
xchg
test
js
inc
mov
fistpl
add
addr16
xchg
cltd
lret
sub
dec
shr
lods
xchg
inc
ljmp
xor
push
or
inc
out
in
mov
or
push
and
int3
jle
push
inc
cmc
pop
mov
ja
or
sbb
sub
cli
jne
aam
fmull
add
stc
jg
imul
imul
xor
lods
mov
push
jp
mov
jg
mov
cmpsl
call
sbb
pop
mov
xchg
jb
push
cmp
ror
int3
xchg
dec
xchg
ja
notl
test
inc
cmc
test
imul
in
stos
cmp
enter
das
sub
daa
in
jmp
data16
das
idiv
mov
xor
xor
xchg
adc
sarl
xor
dec
cs
jns
test
xchg
xor
int
in
movsb
push
lcall
dec
jno
ror
ss
orl
arpl
inc
in
or
pusha
sub
imul
pop
rcll
add
lahf
add
int3
aam
loope
cmp
dec
sbb
rcll
xchg
push
pop
insl
inc
xor
or
or
outsl
pusha
sbb
popf
insb
arpl
das
fmull
cmp
jo
dec
sub
inc
jbe
pop
cmp
mov
mov
xor
mov
add
cs
mov
pushl
xor
cltd
adc
and
xor
test
dec
xchg
nop
jge
dec
push
cli
loop
je
pop
xchg
xchg
fdivs
push
cmp
push
adc
std
mov
mov
test
popa
sbb
mov
or
int
imul
cmp
xchg
add
dec
adc
cmpsb
hlt
lret
stos
cmc
dec
lds
inc
into
outsl
inc
test
jno
shrb
mov
push
shll
outsl
fucomip
cwtl
sub
mov
xchg
dec
fwait
ds
popf
jle
inc
cmc
fmuls
shlb
inc
jne
pop
mov
icebp
clc
mov
jb
adc
es
popa
pop
pop
add
xor
mov
cmp
loope
pop
sub
or
jl
pushl
mov
mov
mov
fstps
aas
xchg
xchg
mov
and
std
stc
addr16
shrb
jp
stos
xor
dec
xchg
fisubl
xchg
push
cmp
jg
push
mov
into
outsb
mov
xchg
xchg
xchg
sub
mov
fsubr
aad
sti
cld
movsb
sti
xor
arpl
jae
push
jbe
sub
test
inc
mov
test
mov
mov
sbb
mov
xor
test
jae
loop
xchg
insb
pop
leave
fiadds
ficompl
dec
adc
pushf
xor
ret
and
sbb
and
mov
sub
mov
lock
iret
and
jae
mov
mov
mov
mov
lahf
add
mov
cmpl
push
jb
aad
lds
push
lcall
lahf
mov
pop
xchg
pop
movsl
jo
mov
push
cmp
jl
scas
push
pop
fmul
insb
mov
adc
mov
pop
stc
cmp
mov
lret
and
jae
scas
pop
in
xchg
ss
xor
bound
inc
mov
leave
rcll
mov
add
xchg
icebp
add
loop
mov
xchg
out
cmp
jg
adc
subb
stc
sub
push
mov
addr16
lret
mov
push
xchg
shrb
fsts
pop
push
ret
sbb
les
sahf
fidivs
pusha
xchg
jno
add
mov
sti
lods
stos
hlt
cmpsb
loop
fwait
mov
xor
xor
pop
rclb
pop
mov
lret
out
sbb
bound
sub
adc
cli
es
pop
add
in
add
jmp
rcrb
mov
rcrb
or
ret
aas
arpl
iret
or
or
xchg
jmp
mov
and
mov
adc
imul
push
cmp
pop
sub
xchg
pop
or
outsb
cld
xor
int3
or
das
push
test
mov
push
sbb
mov
inc
sahf
and
out
sub
mov
mov
mov
xor
leave
std
rep
push
adc
ja
xor
push
std
sti
or
jle
add
adc
cmp
cld
mov
sub
cmp
cmp
push
out
mov
leave
mov
pop
add
lods
push
xchg
push
pop
sbb
nop
fstpl
ficompl
mov
jne
fadds
hlt
inc
cli
jp
out
roll
imulb
cmpsb
mov
lret
das
pushf
push
in
incl
lcall
sub
jge
push
and
sbb
aas
mov
and
xor
xchg
cmp
pop
aad
sbb
cmpsb
div
cs
loop
int3
push
bound
push
jge
enter
dec
and
lods
lods
icebp
cmp
push
movntsd
inc
and
or
scas
sbb
cmpsl
mov
push
jmp
push
ja
dec
jnp
cwtl
mov
push
mov
insl
lods
cmpsb
jns
xor
fstl
cli
mov
lahf
and
pop
and
ret
mov
std
mov
lahf
and
adc
adcl
xchg
cmp
icebp
fldt
jmp
pop
xchg
je
popa
lea
rcrb
in
std
add
jle
fwait
push
movsl
mov
inc
sbbl
movsb
std
or
lds
inc
xchg
mov
pop
dec
aam
add
insl
or
movsb
iret
add
jnp
sub
and
mov
insb
mov
xchg
popf
je
test
add
bnd
lock
adc
in
lret
jge
or
mov
xor
pop
mov
jne
roll
mov
sub
data16
push
xchg
test
xchg
into
mov
js
jae
inc
dec
xchg
ret
mov
mov
push
pop
scas
and
sub
jl
cmp
jl
mov
pop
jnp
pop
pushf
and
shll
mov
cmp
pushf
imul
or
and
jo
sbbl
iret
push
std
push
cmpsb
dec
icebp
push
inc
fwait
rcr
inc
bound
sbb
and
mov
popa
imul
lret
mov
inc
and
loop
out
pop
mov
sbb
push
scas
push
mov
aam
pop
sarl
cmpsl
outsb
repz
fdivl
out
dec
hlt
jne
dec
sub
jmp
lret
mov
into
dec
arpl
mov
ja
xor
lods
or
xor
aas
adc
add
adc
popf
mov
cmp
pop
cmpsl
mov
cmp
mov
out
jns
jae
xchg
filds
fildll
int
orl
outsb
cltd
inc
pop
or
xor
sub
out
ret
leave
sub
arpl
into
popa
and
xor
sahf
popf
ljmp
das
jae
sbb
test
pop
xchg
jnp
dec
xor
fcomps
jle
mov
or
add
pop
and
inc
pop
ljmp
cmc
dec
or
jnp
xchg
mov
xchg
jno
clc
cwtl
adc
aad
fldcw
ret
je
cld
aam
divl
jae
mov
cmp
xchg
pusha
orb
mov
jbe
cmp
ss
shlb
int3
outsb
cmp
dec
cld
jnp
sbb
cmp
call
xchg
adc
loope
adc
stc
xchg
sahf
div
fidivrl
fdivrs
mov
mov
jnp
in
pop
xor
sbb
cld
dec
les
mov
add
lcall
xlat
mov
fdivr
mov
leave
lods
pop
mov
pop
shl
mov
aad
mov
popa
inc
xor
push
xchg
mov
xchg
popf
sti
xchg
add
inc
mov
mov
cmpsl
fwait
inc
pop
mov
int
cmpsb
inc
xchg
fcmovnb
mov
sbb
popf
adc
add
dec
or
add
les
repz
ds
scas
dec
pusha
gs
xor
xchg
add
dec
out
ja
int
inc
loopne
or
out
push
imul
dec
pop
sub
lods
jecxz
mov
mov
iret
xchg
movsl
push
pop
dec
imul
aam
sub
sti
insb
ja
cmp
movsb
sub
inc
outsb
mov
jp
movsl
fmull
cmpsl
dec
fisttpl
mov
in
jmp
inc
sub
or
pop
dec
int3
jp
fidivrl
mov
ret
scas
pop
xchg
in
cld
fisttpl
xchg
negb
sub
ret
cmp
outsl
and
lea
ret
ret
testl
insl
out
push
das
cmp
int3
or
jecxz
mov
loop
push
xor
aas
mov
call
sahf
sub
and
aaa
ja
popf
pop
out
pop
push
xchg
push
adc
dec
stc
add
lods
xor
add
sbb
lret
pop
nop
sub
push
pop
decl
push
xchg
shrb
add
test
lahf
scas
jne
xor
scas
jg
mov
clc
push
pop
mov
stc
mov
mov
packsswb
and
or
aaa
rclb
or
jae
stos
pop
sbb
stos
cltd
lock
sub
jle
test
inc
mov
dec
jno
lds
inc
inc
ja
rorl
push
dec
xchg
aad
xlat
rolb
jne
cmp
jmp
out
ret
hlt
mov
or
dec
mov
dec
arpl
add
ss
imul
mov
adc
inc
ds
fimull
addr16
mov
enter
mov
in
sub
xchg
bound
adc
je
fcompl
test
add
call
int3
mov
repz
dec
cmpsb
mov
mov
cmpl
adc
clc
cltd
notl
cmp
rolb
je
nop
dec
mov
or
dec
jp
jmp
rcrl
outsb
insl
pop
jg
and
out
xor
arpl
add
inc
adc
sub
movsb
mov
scas
aam
dec
push
sub
sarl
jnp
insb
sar
fistpl
pop
test
sti
cmp
xchg
push
insb
and
xchg
lret
mov
push
sbb
add
outsl
and
lahf
repnz
pusha
xor
jbe
inc
adc
dec
sarb
repnz
xor
mov
add
cmpb
div
iret
push
in
nop
out
push
mov
inc
out
test
lcall
cmpsl
sbb
inc
in
push
push
stos
icebp
test
xchg
lcall
psrad
test
adc
imul
cltd
insb
popf
rcll
jns
or
jmp
pop
lea
fstpt
sarl
ja
jle
jmp
jl
push
xchg
add
mov
fldl2t
jmp
aas
cmpsb
cld
pop
sub
adc
adc
xor
scas
push
js
icebp
cmp
out
push
adc
int3
fldt
pop
and
xchg
sub
pop
xchg
test
dec
lret
inc
mov
sub
adc
and
and
icebp
mov
movsl
jb
push
pusha
cltd
clc
popa
xchg
in
mov
jmp
lahf
adc
push
xchg
xchg
add
push
decl
xchg
mov
jl
push
pop
jae,pn
mov
fcoms
int3
mov
dec
stos
repz
cmp
xor
cmp
cwtl
sbb
test
mov
mov
xlat
jbe
push
shrb
jg
roll
sbb
lock
cmpsl
inc
cmpl
push
data16
dec
fisttps
outsl
cmp
cmp
sbb
out
add
mov
test
sbb
cld
jo
mov
pop
lahf
jg
or
or
mov
xchg
pop
or
inc
insb
outsl
fsubrl
and
addr16
dec
movsb
clc
xchg
popa
js
aad
or
mov
ljmp
outsl
jnp
cmp
cltd
outsb
cld
rcr
xor
xchg
dec
or
sub
std
mov
sbb
or
push
fisubs
in
mov
aas
push
lock
loope
pop
gs
jmp
cmpsb
pop
fistpl
dec
jecxz
lcall
lret
jmp
movsl
enter
adc
jp
sbb
cmpl
sbb
jle
or
inc
pop
adcl
clc
xor
or
test
jle
in
jnp
mov
mov
mov
push
xorl
mov
pcmpgtd
xchg
adc
bswap
cmp
movsl
outsl
addl
mov
adc
lcall
and
mov
sti
pop
adc
mov
sbb
pop
movsl
jge
in
int
push
mov
inc
jns
dec
ret
adc
sub
xchg
push
lcall
pop
sbb
fistpl
jno
std
aad
jns
inc
fsubrl
and
aad
and
pop
xor
test
dec
mov
sub
cmp
cmpsl
cs
mov
mov
add
nop
aas
fistps
add
sbb
rorl
sarl
aaa
test
cmp
xor
jnp
jmp
mov
shr
xlat
adc
fdivs
add
lret
sub
cmp
jle
xor
xor
mov
loopne
call
lock
cmp
cmp
ret
and
sahf
lahf
push
stos
jle
sahf
xchg
cltd
pop
daa
rcl
cmp
cltd
mov
and
adc
sbb
inc
das
orb
add
out
out
cwtl
jbe
mov
repz
out
bound
sbb
cmp
dec
inc
adc
in
dec
addr16
xchg
nop
arpl
gs
inc
test
popa
mov
mov
stc
sbb
shrb
insb
jno
mov
and
hlt
imul
and
sub
adc
or
cmpsl
add
mov
clc
jno
xor
mov
sub
jbe
imul
loopne
stc
mov
imul
jg
lods
in
mov
xor
mov
push
adc
push
mov
incb
mov
leave
jns
leave
xchg
pop
cld
mov
cmp
inc
push
cmpsl
icebp
bound
push
mov
and
pop
dec
inc
xor
in
mov
sbb
mov
pop
xor
iret
xlat
lahf
pop
dec
loopne
jnp
aas
imulb
jmp
jmp
jne
push
lock
lods
mov
in
cwtl
js
repnz
xor
xor
sub
push
pushl
vaddsd
mov
push
shr
aad
xor
jge
push
sbb
inc
insb
jnp
pop
sub
dec
sub
jmp
test
and
insb
das
lret
sbb
in
mov
pop
fimull
push
or
adc
mov
jmp
adc
pminsw
or
inc
jb
add
pop
or
test
aas
icebp
mov
jge
imul
inc
mov
jl
rcl
add
xchg
dec
add
adc
pusha
lret
push
js
in
jmp
insb
movsl
sahf
add
imul
clc
and
push
dec
cmp
rep
mov
mov
movsw
mov
cmp
mov
xchg
je
sahf
adc
mov
std
fwait
cwtl
ss
mov
rcr
int
and
gs
sbb
inc
call
icebp
mov
xchg
add
hlt
mov
es
mov
cmpsl
jmp
mov
jge
data16
lahf
dec
movsb
and
and
scas
lea
and
mov
sbb
daa
adc
dec
dec
cltd
dec
xor
scas
push
fistl
push
imul
int3
movsl
and
or
daa
jne
mov
ss
push
mov
or
out
jmp
mov
fimuls
pushf
arpl
cmp
sub
jmp
js
hlt
xchg
cmpsl
call
jo
daa
mov
hlt
cmp
outsl
xor
lds
adc
or
xor
lea
cmp
cmp
jno
roll
pop
mov
mov
inc
call
in
fwait
sgdtl
aas
jo
lods
lahf
lcall
sarb
lods
mov
push
push
call
repnz
notl
inc
sub
add
mov
cmc
mov
std
outsl
push
mov
adc
jae
adc
fs
mov
mov
mov
in
cmp
aad
fadds
jp
test
jp
aaa
jg
or
rcll
inc
mov
xorl
mov
and
rcr
iret
xchg
xor
jo
xchg
xchg
pushf
out
xor
or
and
sub
jns
or
inc
mov
xchg
insb
dec
mov
inc
xchg
sbb
js
cmp
mov
lahf
outsl
and
lahf
mov
dec
pop
or
jb
xor
xchg
xor
push
jnp
in
push
dec
adcl
mov
pop
dec
cli
hlt
pop
andb
fildl
jle
mul
loop
mov
xor
add
int
lret
mov
jp
loope
sub
ds
shlb
inc
mov
sbb
jmp
push
mov
jae
fists
sbb
je
jne
xor
or
push
sub
orb
mov
fstps
fdivrs
lds
loope
in
aaa
fists
rclb
inc
and
mov
cltd
lcall
mov
and
mov
and
or
loop
andl
mov
xchg
xlat
in
lea
fiaddl
cmp
cmp
and
pusha
scas
inc
lea
jle
scas
or
add
cmp
sbb
or
lds
out
xor
imul
lahf
pop
icebp
mov
stos
and
or
xchg
ja
lock
cmpsb
pusha
insl
sbb
jle
test
xor
shll
xorl
mov
lods
pop
or
flds
es
push
and
aas
inc
add
lcall
test
fiadds
sbb
imul
xchg
in
xor
xchg
sub
mov
filds
jae
push
imul
cmp
ret
mov
sub
xchg
popa
dec
cmpsb
faddp
cmc
add
sbb
cmp
imul
xchg
jb
test
add
push
mov
jo
aam
add
movsb
loopne
xor
mov
cmp
mov
cmp
lods
test
jle
and
jns
sti
xor
dec
leave
rcl
adc
mov
xlat
cld
neg
es
icebp
or
dec
mov
leavew
and
pop
loope
and
cld
inc
pop
inc
cltd
mov
pop
pop
push
sbb
jge
cmp
jno
ss
aad
mov
popl
sar
adc
cmp
or
out
and
lods
lret
mov
test
mov
cmpsl
push
dec
ret
movsl
and
divl
in
jb
dec
cmp
or
cmp
mov
divb
movsb
push
aaa
out
imul
xor
mov
fnclex
inc
jecxz
imul
ret
inc
or
dec
or
and
in
mov
rcrl
add
jno
out
and
nop
push
inc
mov
mov
sub
leave
push
pop
sub
mov
mov
xchg
add
lods
bound
cmpsb
fs
test
leave
lock
xchg
stc
lock
xorl
push
popf
out
inc
test
dec
jmp
popf
dec
incb
push
repnz
jg
dec
flds
es
mov
xor
pop
mov
mov
mov
inc
fisttpll
popa
cltd
fsts
inc
sti
mov
mov
js
insl
xchg
negl
cmp
dec
fbstp
jne
cmp
or
sub
leave
loop
xchg
pop
mov
test
stos
and
pop
push
sbb
pop
xor
data16
test
mov
push
add
ljmp
cwtl
movsl
lret
xor
sahf
lret
ja
mov
mov
imul
xchg
cmp
or
insb
out
adc
stos
rep
loope
push
mov
and
rclb
sti
lock
inc
xchg
push
insb
out
sbb
dec
cmp
lret
movsb
mov
mov
int3
xorl
xor
jge
mov
mov
popf
adc
mov
and
adc
pop
inc
push
leave
push
daa
sbb
inc
jo
add
sti
in
push
aaa
xchg
inc
roll
add
stos
mov
mov
rcrl
orl
fucomip
mov
push
pushf
xchg
mov
add
and
clc
pop
jbe
xchg
lahf
cli
clc
push
mov
scas
push
jno
xor
loopne
pop
mov
mov
mov
clc
push
sarb
adc
pop
xor
xchg
push
cmp
ud0
sub
sub
adc
repz
pop
or
test
dec
inc
cld
mov
xor
imulb
sahf
test
cmp
or
push
add
js
addr16
mov
adc
out
mov
mov
mov
shl
inc
mov
mov
xchg
enter
out
mov
xchg
outsl
insl
loope
scas
negb
push
dec
lea
and
xchg
add
xchg
lods
mov
popa
adcl
cld
adc
adc
mov
popa
shl
leave
jnp
push
push
mov
data16
pop
xchg
rolb
pop
dec
jbe
pop
in
divl
scas
pop
lods
scas
lcall
lods
mov
add
mov
sbb
adc
ret
rcr
in
push
xlat
in
push
ds
cltd
xor
mov
push
lods
mov
cmpsl
roll
rcl
mov
mov
xchg
push
gs
not
arpl
inc
scas
mov
and
daa
movsl
cmp
hlt
sbb
sbb
push
or
lds
cmp
xchg
bound
pcmpeqb
mov
inc
cwtl
test
dec
adc
sbb
cmp
xchg
out
lcall
mov
movsl
cmp
pop
xchg
ret
cmpsb
sub
test
mov
cld
repz
sub
stos
or
push
push
inc
push
and
jl
mulb
xor
add
jne
stc
nop
imul
cmp
fwait
adc
xchg
adc
popf
leave
pop
scas
bsf
adc
lods
xor
mov
repz
push
xor
lcall
jmp
cmp
repnz
push
push
leave
push
repnz
pop
xor
adc
pop
mov
sub
xchg
add
mov
add
into
call
and
cs
xchg
sub
xor
mov
mov
mov
cmp
inc
jnp
mov
es
movsb
and
out
jmp
cmp
mov
imul
jbe
subl
mov
imul
pop
mov
jge
sahf
test
add
dec
cmp
int
fs
stos
int3
mov
mov
inc
cmp
scas
cwtl
or
pop
pop
or
int3
mov
push
jmp
push
dec
pop
aam
scas
sbb
in
inc
addr16
adc
sub
mov
repz
pop
push
jp
xor
ret
push
mov
xlat
xorb
decl
xchg
ljmp
outsl
jno
push
pop
xchg
movl
sub
mov
movsb
sbb
aas
xchg
jmp
ja
pop
cmp
mov
pop
aas
in
mov
popa
jle
sar
push
or
int
gs
aas
mov
mov
inc
mov
mov
mov
test
dec
sarb
inc
add
jne
push
idiv
pop
push
mov
lds
lea
shlb
xabort
pop
push
xchg
push
inc
popa
in
shll
fdivrs
daa
roll
fmull
inc
daa
adc
in
sti
xor
test
xchg
add
aaa
push
enter
nop
ljmp
cli
jp
jno
into
mov
cmp
pushf
outsl
xchg
ret
inc
daa
xchg
mov
inc
clc
push
push
jo
jmp
pusha
fisubs
mov
push
test
pusha
inc
icebp
aad
cmp
mov
mov
fstpl
mov
inc
ds
and
ljmp
dec
adc
sbb
mov
ja
sbb
ss
add
dec
lea
cwtl
mov
adc
les
shl
push
scas
inc
gs
jne
jo
mov
aam
mov
lcall
scas
dec
push
or
test
outsb
nop
pop
sbb
mov
test
jns
dec
mov
push
xor
mov
cmp
syscall
stc
mov
sbb
xchg
test
dec
es
out
cmp
outsl
stc
stc
in
xlat
bound
js
stos
and
jnp
xchg
push
movsb
pop
dec
cwtl
fwait
es
sub
in
aas
mov
push
inc
xor
jnp
mov
sahf
arpl
std
pushf
dec
xchg
inc
out
fsubrl
inc
stc
out
das
std
push
mov
out
sbb
hlt
dec
data16
fistl
xor
jnp
adc
xor
dec
scas
call
mov
sbb
leave
sub
lcall
enter
nop
sbb
imul
cwtd
xchg
xor
pop
loopne,pn
mov
scas
pop
test
jo
pop
adc
xor
ja
push
out
dec
pop
inc
out
sbb
imul
mov
test
cmpsb
dec
add
into
cld
enter
gs
bound
jb
sbb
fsubrs
or
sbb
adc
adc
loope
pushf
or
pop
or
andl
in
icebp
inc
or
pop
dec
and
pop
outsb
rol
jmp
stc
call
and
push
int
mov
jg
cli
rcl
cltd
cmp
sbb
cmpsb
sub
inc
mov
pusha
addb
pushf
push
cmpl
imul
stos
divl
nop
and
push
imul
push
scas
xchg
mov
fstpl
push
cli
mov
cld
fsubl
fcoms
ljmp
lahf
mov
or
jne
xor
mov
lcall
mov
enter
mov
fs
mov
aaa
leave
xchg
mov
push
ret
lcall
sbb
aam
mov
mov
stos
xchg
daa
cltd
lahf
sbb
lret
push
inc
sbb
repnz
call
xchg
mov
out
sahf
xlat
xchg
rcrl
ljmp
es
in
sbb
daa
outsb
xor
sbb
mov
lods
lret
xchg
clc
loopne
mov
sub
or
loopne
loope
pop
lock
add
xchg
xor
loopne
insb
fcmovbe
and
stos
adc
aaa
sbb
movsb
adc
jp
movsl
into
addr16
movl
xchg
mov
push
mov
adc
dec
outsb
xor
lea
in
adc
lods
loopne
inc
mov
cmp
ret
sbb
gs
stc
lods
jae
dec
push
pop
ret
jmp
jg
cmp
in
dec
ds
int
subb
dec
insb
rclb
test
sub
jne
pop
cli
add
or
inc
imulb
xchg
lahf
add
add
xchg
loopne
aaa
inc
enter
popf
pop
dec
outsb
dec
bound
xchg
inc
imul
or
jmp
and
test
xchg
imul
cmp
pop
inc
cmc
pop
ja
xchg
xor
push
inc
scas
dec
cli
outsl
jmp
push
scas
jle
or
and
test
push
inc
gs
sbb
jg
mov
lds
les
jl
bound
mov
dec
testl
popf
fs
xor
daa
lods
xor
mov
pop
js
insb
jae
repnz
int3
lcall
call
cmp
push
jmp
mov
popa
inc
ljmp
popa
cld
sbb
daa
mov
fistpl
insl
faddp
jno
nop
mov
mov
lahf
or
push
dec
mov
mov
dec
ljmp
adc
add
scas
out
lret
dec
xchg
ss
ret
jbe
mov
xor
sahf
pop
and
sti
movsl
sbb
jo
cli
mov
add
mov
in
cld
add
sub
xor
dec
mov
mov
mov
jne
sbb
test
fimuls
in
xor
test
mov
shll
cwtl
xor
or
lea
and
lods
ret
cmp
inc
sbb
pop
or
lahf
adc
mov
shll
imul
cmpsl
int
inc
repnz
sahf
cmp
pop
adc
push
cmp
fs
add
xchg
rcr
dec
dec
jbe
pop
pop
sub
or
aaa
lds
ret
add
lahf
jecxz
sbb
addr16
xchg
or
mov
idivl
xor
mov
imul
dec
push
incl
cmp
or
fnstcw
pop
mov
ljmp
cmp
xchg
cmp
mov
mov
pop
cmpsb
adc
push
mov
int3
addr16
negb
arpl
shrb
fsubrs
repnz
xor
dec
xchg
or
mov
mov
xchg
fs
in
rcll
inc
mov
xor
imul
xor
iret
jno
push
xor
stc
insl
pop
mov
sarl
daa
stos
xchg
lods
xor
pop
mov
push
push
add
iret
movsb
mov
and
or
cmpl
pop
mov
les
cmp
push
pop
lret
mulb
xor
sbb
insb
ffreep
sahf
cli
js
aas
fwait
iret
and
jae
repnz
pop
mov
push
gs
dec
cmp
sbb
adc
cmp
ret
or
or
cmpsl
cmp
adc
sub
lods
xchg
and
mov
iret
cmp
repz
mov
test
push
sti
xchg
negl
fcmovnu
jp
lcall
jmp
and
icebp
push
fs
push
push
subb
shrl
mov
and
cmp
cmp
pusha
sub
jp
shrb
and
mov
jbe
imul
pop
cwtl
test
movsl
rcr
xor
mov
pop
mov
sbb
push
sahf
test
dec
sub
and
aam
push
push
push
and
out
ret
cmpsb
aam
mov
pusha
xor
jne
xor
fsubrl
sbb
ss
xor
mov
ds
out
and
ss
jecxz
cld
sarl
ds
jmp
lret
loopne
fwait
inc
out
or
mov
mov
mov
add
sbb
repz
mov
fwait
add
dec
xor
mov
xor
inc
enter
sbb
imul
lcall
mov
daa
cmpb
std
pop
lea
adc
dec
mov
ret
in
fildl
mov
jmp
iret
mov
popf
leave
imul
popa
add
xchg
mov
or
ficomps
jns
jne
mov
cmp
xlat
cltd
lahf
aam
out
lret
and
add
rcr
xor
add
push
insb
nop
es
cmp
push
mov
mov
stc
pop
mov
iret
add
xor
push
outsl
sbbb
ret
add
lock
iret
fldcw
and
pushf
repz
mov
lock
imul
cli
adc
sbb
insb
mov
jg
repz
cwtl
lock
sbb
pop
sub
adc
out
ja
ljmp
xchg
push
mov
pop
xor
add
adc
mov
adc
fdivr
rorb
inc
inc
inc
stos
sbb
js
js
in
jp
push
aam
and
xchg
sub
xor
push
addr16
jb
and
jae
rcrb
sbb
add
mov
push
push
lcall
sub
inc
test
aad
iret
stc
std
xor
jl
adc
popa
jno
sbb
mov
test
lods
jno
icebp
jp
jg
jo
or
xchg
loopne
lahf
inc
push
movsl
test
inc
sbb
jl
or
dec
fstl
pop
nop
idivb
xor
and
xor
dec
leave
jl
jno
ja
sbb
or
imul
out
fidivrl
popa
xor
or
loop
es
dec
mov
movsb
lds
and
ret
push
or
icebp
out
xlat
fidivrl
mov
insl
repnz
sub
cmp
repz
adc
jb
sbb
lahf
stos
jb
cmp
or
adc
out
cltd
pop
out
dec
push
xor
push
or
push
enter
pop
lea
push
xor
xchg
or
shl
fnop
dec
sub
mov
popf
inc
xor
cmp
int3
hlt
xchg
push
push
sahf
fdiv
int3
adc
ficomps
jl
in
ret
cmp
call
xor
stos
fistpl
mov
repnz
aam
fsubrs
scas
dec
xlat
test
dec
mov
jbe
and
xor
stos
cmc
jge
int3
xor
xor
orl
or
inc
jnp
les
mov
mov
lea
arpl
fisubl
test
mov
mov
push
popa
jge
lds
lcall
enter
stc
mov
mov
cs
repnz
add
push
and
xchg
xor
cmp
inc
xchg
das
xchg
lretw
push
jle
fldcw
scas
sar
outsl
daa
sub
fisttps
pop
sub
mov
pop
fldcw
dec
leave
cld
fucom
addr16
cli
gs
loope
and
or
mov
pop
push
or
rorl
push
addr16
pop
aas
cmc
inc
xchg
push
mov
inc
neg
out
dec
and
mov
mov
imul
sbb
fwait
cmp
dec
push
sqrtps
adc
inc
cmpb
loopne
sbb
jl
xchg
cmp
lds
add
mov
jne
dec
out
pop
sti
jl
mov
cmp
sub
mov
jnp
mov
pop
adc
mov
pop
fwait
pushf
ret
inc
pop
lret
and
mov
sbb
idiv
mov
lods
sub
adc
js
fisubrl
cld
mov
fwait
lods
sbb
mov
pop
sbb
lahf
loope
mov
xchg
pushf
adc
in
and
pop
cmp
outsb
repz
cmpsl
insl
push
iret
pop
add
push
pop
mov
cmpb
xorb
mov
inc
pop
jle
lock
and
push
mov
sbb
jle
notb
aad
sub
int3
pop
push
std
push
push
clc
addr16
cld
cmp
fs
mov
lea
out
push
adcb
jecxz
cs
adc
fs
lods
inc
scas
clc
add
pop
inc
in
loope
insl
in
jl
jne
pop
les
jb
cmpsb
jnp
cli
ljmp
jg
sub
lcall
cmpsl
dec
nop
sbb
rcll
xchg
out
mov
and
clc
jmp
jge
mov
es
daa
test
xchg
mov
dec
and
leave
inc
xchg
ret
pushf
arpl
std
and
inc
dec
push
lret
xchg
mov
das
mov
aaa
inc
dec
jo
shl
shl
sti
test
das
inc
frstor
fs
dec
fwait
clc
lods
stos
ret
xor
inc
add
lds
dec
addr16
in
and
mov
push
pusha
add
mov
jp
js
dec
fstpt
sar
ds
mov
sub
sub
or
and
push
iret
cmp
shrw
div
out
sbb
fldl
xor
inc
pushf
stos
in
fisubs
cmpsb
pushl
jg
jbe
and
into
jb
adc
addr16
enter
inc
jns
push
mov
iret
mov
rclb
loopne
inc
stos
adc
movsb
and
xorb
sub
mov
in
outsl
push
sub
mov
loope
jmp
out
xor
or
lods
sub
fcoml
pop
pop
and
push
sahf
and
adc
stos
insb
mov
xor
outsb
push
xchg
int3
sub
orb
cmp
rorl
imul
cmp
or
and
lods
inc
lea
pop
pushf
stos
and
lret
xchg
sbb
mov
arpl
lret
stos
jmp
inc
mov
sub
fisttpll
or
cli
inc
sub
ret
mov
sbb
sub
xor
int3
pop
mov
aas
cmp
mov
daa
shrl
das
and
dec
inc
pop
mov
pop
mov
loopne
xchg
in
pushf
cmc
repz
jne
pop
pop
cmpsb
dec
stos
mov
jno,pn
sbb
icebp
loope
dec
push
cmp
fildl
pop
lds
xchg
mov
dec
out
jp
dec
not
jg
js
push
inc
imul
arpl
out
xor
repz
sbb
jp
pusha
xchg
cmpsl
inc
sbb
mov
cmpsl
jmp
sbb
mov
xor
mov
lret
movsl
adc
rclb
pop
add
mov
cmp
mov
lods
mov
lods
mov
xchg
aad
jne
fcoms
out
enter
scas
jmp
cmp
orb
fwait
add
add
mov
les
add
ja
push
and
fs
fidivrs
xchg
addl
fwait
xchg
push
movsb
sub
subl
pop
adc
xchg
adc
mov
ljmp
sub
add
dec
scas
insb
cmp
xchg
dec
add
or
and
jnp
xchg
xlat
jmp
ljmp
aam
int3
push
bound
mull
xchg
pop
test
push
ljmp
mov
and
xlat
dec
cli
xchg
mov
sub
fcomp
addl
jno
idiv
xor
imul
fldpi
mov
xchg
sbb
and
aas
jg
hlt
mov
mov
adc
jae
icebp
mov
fdivrp
lods
pop
out
clc
enter
adc
push
inc
mov
lods
sbbb
xchg
and
repz
aas
cmpsb
xorb
jge
adcb
sub
cwtl
popa
sti
push
push
lods
insb
lea
sub
outsb
inc
or
les
and
jae
pushf
cmp
rcl
mov
mov
out
lods
in
or
push
lds
cmp
dec
push
mov
in
mov
dec
aad
pop
mov
stc
int3
repnz
je
lahf
add
and
addr16
xchg
out
dec
mull
cmp
cmp
or
inc
xchg
pop
addl
push
lcall
lret
out
imul
or
and
scas
jmp
pop
xor
cld
pop
lods
imul
dec
adc
mov
aaa
fcmovnb
cmp
popa
mov
mov
pop
and
mov
dec
ja
mov
das
mul
int3
ljmp
lret
add
sbb
into
inc
pop
orl
icebp
xchg
fs
shll
or
nop
xchg
out
inc
clc
mov
scas
test
shrb
es
dec
push
sbb
inc
fcomi
adc
faddp
cmpsl
les
or
mov
sbb
adc
jecxz
sub
mov
popa
hlt
mov
lcall
sub
add
mov
push
outsl
out
jno
push
jo
out
cmp
jbe
nop
pushf
cld
fiadds
add
stos
in
cmp
cmp
lcall
inc
mov
incl
dec
xor
inc
inc
clc
mov
inc
or
xor
test
jns
dec
and
fwait
jmp
push
or
nop
inc
lds
cmpsl
pop
xor
cmpsl
rcrl
aad
lret
mov
clc
inc
in
int
push
imul
sbb
push
xor
les
ret
jns
and
adc
test
pminub
jg
ss
stc
or
push
cmc
adc
pop
in
iret
hlt
jbe
int3
repz
inc
pop
ret
fidivrl
out
repz
or
jge
jmp
into
les
sub
dec
repnz
mov
scas
je
xor
push
pop
push
je
imul
jns
fwait
sti
std
jo
xchg
mov
aaa
movsl
cmp
rcl
daa
add
xchg
mov
mov
mov
adc
push
mov
xor
and
jae
mov
andb
ja
test
outsb
mov
pusha
test
mov
or
aam
es
rclb
jbe
dec
sbb
nop
xor
add
repnz
jb
divb
dec
loope
sbb
cmp
std
pop
mov
jnp
mov
cmovns
je
mov
popl
in
sub
fbstp
aad
cmp
cmp
outsl
cmpsb
mov
ss
loop
clc
das
shr
pop
inc
fiadds
loop
aaa
pop
cld
jae
adc
dec
jne
jno
das
bnd
ja
enter
sbb
les
push
cwtl
fidivs
arpl
in
sbb
cmpsl
or
stos
mov
push
call
or
hlt
jns
mov
loopne
scas
imul
pop
mov
das
std
dec
aaa
push
aaa
sbb
inc
int
lret
out
in
cmpsb
outsb
fcomps
xor
pop
push
shl
outsl
test
leave
xchg
setl
pop
iret
mov
pop
inc
test
and
call
jecxz
add
or
test
and
out
jg
test
dec
pop
scas
daa
sub
in
subl
xchg
pop
or
sbbl
data16
ss
inc
and
mov
aas
scas
fadd
xchg
das
push
je
insl
fprem1
sarb
mov
jae
test
icebp
cmp
dec
mov
jno
iret
fnsave
nopl
fisubs
xchg
pop
mov
outsl
popf
or
dec
pop
imul
cmp
cld
les
push
jg
lret
divl
inc
inc
sub
push
add
xchg
shll
daa
sbb
push
pop
loop
repnz
sahf
into
rclb
mov
shr
cmovl
clc
adc
clc
inc
adc
das
incb
leave
inc
dec
fstpt
mov
or
pop
xchg
xchg
pop
pushf
scas
mov
aaa
mov
add
popf
sub
enter
stos
jo
out
dec
lcall
mov
dec
lahf
fxch
push
fcoml
fmul
and
dec
jmp
sarl
testl
sub
xor
xchg
push
jle
cs
inc
imulb
sti
stos
adc
xchg
sbb
bound
mov
test
pop
push
sahf
js
in
mov
sahf
mov
call
mov
dec
popa
pop
or
je
js
mov
mov
mov
ljmp
in
andb
and
cmp
push
xor
je
inc
and
inc
fnsave
inc
xlat
clc
sub
jmp
in
enter
adc
sti
inc
pop
mov
cli
adc
clc
in
shll
mov
push
sbb
mov
lods
movb
into
adc
arpl
scas
dec
popf
aas
mov
and
adcb
clc
out
inc
fcmovnu
leave
leave
push
movsb
testb
ret
rcll
push
lret
add
sub
loope
ljmp
stos
mov
xchg
ret
call
aam
sbb
cmpsb
pop
test
bnd
mov
mov
inc
jnp
xchg
cmc
xor
mov
dec
fildl
mov
loop
dec
jae
sub
xchg
add
inc
jmp
inc
or
stc
push
or
cld
fdivs
div
in
jmp
ret
cltd
or
push
cmp
inc
add
cmp
inc
nop
jecxz
out
xor
mov
mov
imul
clc
dec
enter
scas
sbb
pushf
xor
in
test
movsl
xor
mov
in
stos
or
mov
iret
xchg
aas
sub
sar
into
cmp
fnstsw
in
rcr
ret
jge
cmpsl
aas
jmp
icebp
sbb
stos
dec
std
test
rorl
jle
mov
push
sarb
jb
mov
or
dec
xor
icebp
mov
push
mov
pusha
mov
das
nop
add
sti
mov
in
push
pushf
lret
out
jnp
into
fiaddl
jg
loope
ss
scas
andb
inc
push
mov
sub
cli
xchg
popa
mov
xchg
dec
repnz
cli
stc
cmp
add
scas
icebp
push
cmp
sahf
dec
lahf
rcrl
in
push
dec
jo
mov
or
mov
xor
add
mov
test
data16
jae
lcall
dec
pushf
push
in
push
lods
sbb
pop
jl
movsl
pop
movsb
jg
in
sbb
xor
lods
outsl
repnz
aaa
test
push
pop
jp
fs
xchg
fwait
push
fdiv
cmc
mov
das
add
lds
add
xchg
cmp
add
jp
push
or
pop
ret
jp
ret
out
stc
sbb
in
lock
mov
aad
inc
insb
adc
sbb
jle
mov
add
jle
out
nop
daa
sti
mov
fldcw
in
fdivp
dec
push
lods
bound
mov
push
call
xor
push
pop
fwait
sub
ljmp
cmpl
mov
into
mov
js
rol
jno
not
dec
mov
adc
int
outsb
imul
inc
inc
mov
xchg
stos
call
mov
nop
imul
and
test
sti
mov
push
loope
mov
fcompl
pop
adc
popa
fucomi
jecxz
pusha
ss
push
in
bound
push
fnstenv
mov
sbb
mov
cmp
bound
popf
dec
daa
outsl
push
movsl
aad
jnp
jne
inc
dec
popa
ja
pusha
lahf
cltd
xchg
mov
and
subl
nop
push
add
xchg
mov
sbb
pushf
push
rcr
pushf
dec
jne
lds
cld
shll
mov
jns
jge
push
ljmp
inc
inc
mov
insb
punpckldq
add
xchg
nop
cld
test
mov
xchg
repnz
ja
xchg
cmp
xchg
or
lock
popf
add
jae
xor
push
rclb
mov
cmp
pop
pop
jecxz
mov
mov
or
jb
fisttpll
mov
mov
sbb
imulb
or
aas
hlt
inc
lret
add
or
fists
push
mov
pop
mov
inc
mov
daa
dec
cmc
and
clc
daa
jne
ret
ret
clc
or
pop
fs
imul
jno
jae
sahf
stc
push
add
jne
aam
xchg
xchg
mov
pop
data16
shll
testb
xchg
jg
inc
lea
cltd
fldl
xchg
mov
xor
stos
or
push
pusha
mov
push
mov
das
xor
test
dec
mov
add
inc
outsb
addr16
jg
hlt
repz
ss
lret
roll
clc
jae
sbbl
sbb
cmp
lcall
adc
imulb
xor
icebp
mov
xor
cli
sbb
in
test
aad
cltd
pop
lahf
xor
lods
or
loopne
jno
mov
repz
insl
pop
daa
or
stos
fstps
rorb
xlat
mov
cmp
data16
in
out
jle
orl
mov
jo
jl
push
xchg
inc
inc
inc
and
in
lcall
arpl
movw
mov
xor
out
jae
shlb
sbb
push
cmpsl
sbb
popl
dec
ficomps
jb
pop
mov
stos
mov
mov
lods
push
xchg
cmp
mov
mov
test
movsb
or
push
pusha
loope
mov
in
lahf
add
test
into
in
add
push
adc
nop
sbb
enter
gs
mov
jmp
filds
outsb
xchg
sbb
pop
insl
jge
push
hlt
cmp
cld
push
out
lods
out
jmp
cmp
insl
iret
arpl
dec
or
xor
cmp
mov
sub
xchg
xchg
leave
pop
daa
xchg
inc
fst
daa
mov
push
sbb
aad
aaa
leave
mov
mov
in
sub
je
stos
scas
les
lret
cmp
xchg
mov
jge
in
imul
in
jp
add
mov
or
xchg
insl
mov
add
dec
bound
xor
decb
js
mov
hlt
sahf
xor
enter
pushl
push
fcmovne
inc
lret
inc
lcall
xchg
xchg
dec
mov
push
orb
jle
pop
ds
push
and
xchg
or
jbe
dec
hlt
jnp
push
push
shll
fucomi
push
ja
sbb
lods
xor
loop
jg
icebp
mov
stc
insl
mov
cmovl
and
pop
mov
xor
xchg
jns
push
mov
imul
enter
jp
mov
loope
add
lahf
clc
sub
test
adc
cmpsb
lods
or
jge
cli
dec
lods
stos
ficoms
lea
push
loop
cld
icebp
push
ja
xor
adc
aas
aas
shl
pushf
test
mov
pop
cmp
std
addl
push
inc
jg
and
in
inc
and
lretw
arpl
dec
addb
push
adc
lret
xchg
mov
mov
push
mov
lock
or
jg
test
or
mov
lods
and
cli
sbb
sub
or
es
arpl
cmp
xchg
pop
lds
idivb
std
sbb
mov
xchg
jb
mov
mov
arpl
mov
xchg
cwtl
out
xchg
or
mov
adc
pop
add
insb
fcoms
mov
clc
xchg
ja
add
push
shlb
cwtl
jne
repnz
adcb
dec
mov
push
xchg
dec
iret
daa
bound
cmp
lret
sti
pop
jmp
mov
adc
dec
lds
cmp
pop
in
mov
sub
in
aaa
or
mov
mov
dec
sub
repnz
sbbl
jl
stos
emms
loope
popf
pop
lahf
shlb
stc
int
lret
out
inc
dec
stos
pop
push
lahf
fdivl
sbb
decb
jp
aas
insb
push
inc
pop
xchg
dec
push
jl
test
aaa
scas
pop
mov
jge
mov
loope
inc
pop
dec
sbb
jnp
jnp
jg
xchg
imul
inc
mov
fnstcw
cli
test
jae
add
fs
mov
cwtl
fucomip
jl
movsl
sbb
lea
scas
adc
ljmp
fs
in
sti
in
push
test
call
mull
jne
sbb
or
call
lods
adc
leave
pop
push
mov
cwtl
mov
ds
les
push
cli
nop
pushf
daa
or
mov
mov
pop
mov
inc
mov
repnz
adc
push
das
fwait
xchg
fistps
sahf
mov
outsb
or
dec
and
jne
xor
jno
iret
imul
in
pop
or
inc
cwtl
shrb
out
pop
push
or
je
loop
adc
lock
in
ja
hlt
pop
js
push
push
lcall
scas
and
pop
dec
jp
clc
mov
and
stc
loop
test
add
imull
sbbl
xchg
imul
shlb
repz
xchg
cmp
loopne
mov
or
xorl
dec
popf
insb
or
adc
lods
ljmp
add
pop
nop
and
and
pop
lret
xor
xchg
js
jbe
outsb
inc
cs
sbb
aas
sbb
aaa
dec
sbb
jne
adc
pushf
or
cltd
aam
repnz
lret
test
push
jbe
inc
pop
jle
mov
insl
pop
imul
mov
icebp
shll
xchg
inc
adc
je
or
xor
mov
or
cmpsb
mov
pop
pop
cld
xchg
sti
hlt
movsl
pop
adc
pop
mov
shl
mov
loope
add
and
lock
add
or
fwait
dec
movsl
ss
ret
mov
movsl
xor
mov
leave
into
jmp
sub
mov
and
arpl
enter
fcoms
jno
pop
add
xchg
ret
xchg
sbb
ja
add
adc
cs
lods
je
in
fsubs
mov
in
adc
add
xor
sub
xor
lds
pop
sti
cmovge
and
popa
xchg
cs
mov
mov
iret
or
popa
shrl
outsb
cmpsl
and
sub
inc
je
push
inc
jae
adc
inc
mov
pop
popf
xchg
es
les
lret
test
adc
outsl
outsb
inc
ret
dec
outsl
lcall
jg
adc
mov
cwtl
shlb
jnp
sub
fadds
push
sub
stos
into
cs
dec
fidivrl
push
enter
je
fadds
adc
imul
popl
mov
jge
repnz
cmpsl
fsubrs
in
pop
fildll
rcrl
sarl
xchg
call
insl
jno
xchg
int3
xchg
sub
into
or
cli
jo
lret
jno
or
lods
dec
sub
add
cmpsb
push
dec
cmp
pushf
into
mov
mov
mov
ret
mov
lock
ds
lcall
and
mov
mov
fisttpll
adc
mov
jbe
dec
icebp
lahf
sub
or
repnz
lods
jl
xor
jnp
cmp
dec
insb
outsb
cmp
jnp
fistpl
push
jnp
mov
in
add
into
or
sub
loop
test
sub
or
and
loopne
cmp
xchg
push
push
aam
aam
push
push
mov
sahf
int
pop
inc
jle
lds
mov
jp
test
mov
mov
shlb
push
xor
movsl
loop
les
mov
fs
inc
add
lods
loope
mov
mov
mov
or
cmp
data16
int3
js
mov
xor
imul
xor
cli
popf
aaa
ljmp
push
push
cmp
roll
insl
push
ja
pop
cmp
pop
scas
mov
insl
jle
add
jo
les
push
mov
sbb
and
mov
add
xchg
mov
jle
rorb
out
inc
ds
loop
jae
push
addb
imul
sbb
mov
imul
clc
cmp
ret
sbb
inc
ja
push
in
cltd
push
sar
xor
pop
cmpsl
mov
add
jns
ja
sahf
adc
xchg
add
dec
aam
lods
mov
adc
test
idivb
pop
mov
sub
movsl
cmc
add
aad
rol
push
jecxz
fwait
mov
mov
mov
neg
add
cmp
xchg
sbb
sub
push
sarb
in
mov
lds
dec
inc
test
dec
xor
inc
and
cli
xor
cmp
or
arpl
jp
mov
mov
adc
cmc
sbb
in
dec
mov
clc
xchg
jge
fsts
leave
mov
mov
adc
sbb
aam
xor
inc
int3
jp
in
flds
sbb
dec
xor
test
lods
cmp
pop
pop
dec
mov
and
fisttpll
imul
jbe
dec
jp
lret
adc
dec
shlb
lcall
cmp
iret
xor
std
jg
jbe
sub
dec
andl
or
jns
cmpsb
pop
push
jo
and
dec
mov
sub
int3
stos
sub
iret
or
negl
stos
push
inc
xchg
xchg
adcl
in
outsb
or
rorl
push
xchg
adc
fistl
mov
daa
xor
shlb
loop
or
jmp
outsb
push
sub
lea
jp
xor
in
call
lods
mov
in
imull
add
aaa
out
xor
sub
js
push
ficomps
push
lahf
sub
jae
das
mov
sbb
rcrl
stc
push
xchg
aam
add
loopne
out
stc
cmpsl
jecxz
jl
xchg
mov
aam
jbe
pushf
jae
insl
sbb
mov
cwtl
popf
and
cmp
sub
inc
or
js
arpl
adc
or
lret
mov
and
inc
aad
cmc
icebp
cmc
loopne
inc
or
out
stc
jle
subb
inc
scas
or
inc
sub
inc
call
mov
std
flds
sub
lods
ljmp
xor
sub
push
xor
popa
clc
and
push
mov
adc
lret
and
dec
dec
jle
push
mov
shll
pop
adc
sub
xor
jno
cli
inc
and
sbb
fwait
pop
xor
fldcw
ja
mov
jge
push
mov
adc
pop
js
sbb
sbb
fadds
test
push
jg
cwtl
and
outsb
or
add
orl
clc
jbe
jg
mov
push
fisttpl
or
sbbb
scas
add
xchg
sbb
or
dec
mov
out
imul
sti
push
mov
nop
mov
mov
add
xchg
outsb
mov
mov
xor
loopne
out
call
insb
std
imul
sbb
in
jnp
fwait
pop
into
mov
int3
and
inc
push
les
add
pushf
xchg
inc
pop
fs
repnz
xchg
leave
xchg
lcall
mov
popa
or
sbbb
cmp
jl
add
adc
mov
adc
jge
imul
sbb
loope
idivl
xor
pop
cs
sub
mov
lahf
add
push
adc
ret
ret
je
cmp
mov
in
test
jl
pop
mov
pop
jg
insl
adc
mov
cli
das
jl
mov
sbb
repz
push
in
cld
mov
and
xchg
imul
push
xchg
sbb
rol
push
call
ja
popa
scas
aaa
cmc
ja
imul
dec
mov
sbb
mov
jmp
xor
scas
dec
xchg
add
shr
subl
sbb
outsb
das
lods
std
or
adc
or
or
push
xor
clc
mov
adc
push
arpl
xor
and
or
dec
sbb
inc
fcmovnu
and
or
stos
sub
mov
es
and
jbe
int3
xor
in
xor
sub
push
pop
cld
js
xchg
xchg
pop
rorb
pop
rolb
xor
imul
pop
into
and
inc
inc
mov
sti
arpl
cmpsl
sub
xchg
pop
adc
adc
push
icebp
sub
ret
loopne
xor
dec
inc
int3
dec
cwtl
jecxz
int3
fsubrs
nop
sub
dec
mov
mov
ja
hlt
xchg
xor
mov
pop
cli
and
jge
divb
lods
lock
jb
idiv
mov
inc
pop
aas
mov
push
sti
stc
pop
in
cli
push
aaa
mov
fst
dec
cs
aam
loop
fiadds
push
clc
jb
mov
and
mov
addl
test
imul
adc
pushf
mov
jnp
ret
test
cli
mov
push
pop
push
insl
xor
sbb
mov
add
loop
scas
icebp
mov
sub
sub
jae
cmpb
mov
imul
mov
cwtl
mov
std
lret
lcall
sahf
les
das
hlt
add
jg
jnp
scas
sti
pop
lret
and
add
xchg
pop
les
push
sbb
xorl
hlt
outsl
jnp
shrb
enter
loop
bnd
adc
cltd
sub
mov
repnz
xchg
xor
scas
sbb
adc
test
stc
push
and
cmp
jne
out
push
jb
sub
repz
sbb
jecxz
lds
mov
addr16
out
fimuls
sub
xlat
std
in
push
fidivs
insb
push
xchg
andb
or
mov
adc
in
out
pop
sbbl
scas
lods
mov
cmp
pop
pusha
add
ret
push
cmpsb
add
jg
lea
xor
decb
adcb
icebp
sub
lea
pop
inc
int
cwtl
jmp
mov
dec
lea
test
pop
dec
mov
or
xchg
int3
cld
cmp
inc
pop
sahf
dec
cmpsb
std
stos
test
cmp
int
mov
ljmp
fstpl
imul
test
and
aad
dec
jb
mov
dec
sbb
or
sbb
push
ja
inc
movsl
lahf
icebp
mov
aas
shlb
test
jae
adc
mov
cmp
lea
fsub
pop
xchg
push
addr16
leave
add
add
cmp
jmp
repnz
lea
mov
xchg
roll
sub
fsincos
loop
popa
jl,pn
leave
pusha
repnz
cltd
iret
imul
jl
fstpt
fcoml
fs
or
sbb
xor
cmp
clc
mull
das
add
push
fnsave
and
mov
imul
out
mov
scas
hlt
xor
mov
mov
ds
add
test
push
stos
push
ret
test
insl
jno
hlt
fsubrl
mov
push
push
dec
mov
insb
add
jb
es
int
test
out
jne
add
xchg
lret
ret
jo
pop
movsb
and
not
fstl
test
leave
ret
shlb
add
js
pop
pop
icebp
inc
inc
jo
out
dec
fdivrl
fs
mov
mov
aas
pop
popf
outsb
sub
loope
and
popf
loopne
lcall
das
fldl
dec
std
stc
xor
xor
cmp
outsb
pop
sbb
test
and
jo
stos
pop
xchg
jle
push
mov
bound
mov
shl
arpl
and
lock
push
fsubrl
pop
push
xchg
cmp
jge
fiadds
pop
arpl
outsb
adc
dec
push
and
popl
in
out
mov
inc
subb
cmp
arpl
xchg
movsl
sbb
jle
add
ljmp
fistl
xchg
jmp
lmsw
aad
stos
or
into
movsb
outsl
mov
push
jo
mov
movsl
mov
cmc
or
call
jns
mulb
sbb
jns
push
cs
sti
adc
hlt
mov
mov
es
arpl
fnstsw
lret
mov
sub
xchg
push
xchg
sub
jg
pushf
add
cltd
mov
sbb
and
sti
leave
fisttpll
cmp
inc
loope
rsqrtps
out
xchg
adc
push
xor
cmp
or
into
and
cmp
push
pop
rcll
decl
xor
lods
mov
icebp
ja
ljmp
adc
insb
test
fiadds
aaa
xor
xorb
icebp
lcall
inc
sahf
in
cmp
pop
clc
std
fisttpl
movsb
xchg
lret
mov
stos
imul
mov
ret
jmp
in
sti
ret
aad
adc
test
stos
mov
mov
pop
shlb
aaa
mov
sub
lcall
push
loopne
jns
xchg
pusha
jecxz
push
xlat
hlt
icebp
sub
add
repz
or
xchg
sbb
gs
push
adc
iret
pop
push
mov
add
push
idiv
push
or
imull
mov
mov
hlt
int
adc
sahf
mov
cmp
add
mov
movb
and
and
movsb
scas
sub
pop
xor
insl
testl
notl
mov
loop
dec
mov
test
jl
pop
lahf
test
mov
push
cmpl
addr16
mov
mov
repz
pop
push
cmp
jnp
mov
sub
insl
mov
mov
test
xor
jnp
out
jp
ss
mov
xor
aas
shrb
dec
pop
adc
xchg
cmp
add
aaa
insl
iret
xor
and
push
fisttpl
mov
cmpsl
dec
cmpsb
pop
push
stos
das
shrb
push
out
xchg
insl
das
inc
rorb
fimull
xchg
dec
imul
fldl
mov
aam
lea
fmul
dec
xchg
in
into
pop
sbb
or
out
bound
mov
add
pop
and
addr16
and
sbb
lcall
mov
gs
cli
scas
inc
mov
dec
cli
xchg
xchg
cmp
mov
pushf
xor
mov
push
repnz
aas
jb
cld
movsb
dec
insl
xchg
pop
test
stos
mov
rclb
mov
adc
ljmp
push
imul
iret
xchg
jl
cmp
cmp
add
inc
mov
xchg
ficomps
inc
test
sub
pop
adc
jmp
imul
dec
pop
scas
iret
dec
adc
mov
out
movb
xor
sub
lahf
shll
outsb
mov
ret
mov
adc
dec
or
sub
inc
cmpsb
inc
jae
pop
jno
jecxz
sarb
cmp
sbb
jecxz
ds
or
outsl
adc
xor
and
adc
or
mov
mov
and
dec
and
mov
adc
cld
push
inc
fs
fcompl
sub
mov
aad
adc
cmpl
sub
and
xchg
xor
sbb
push
inc
inc
dec
call
push
ficoms
cli
shl
inc
fsubrs
fisubl
xlat
js
loopne
and
movsb
imul
push
test
push
clc
mov
cltd
inc
stc
jno
or
sbbb
jne
sbbl
pusha
jb
sbb
jl
in
lcall
adc
push
dec
ss
and
and
mov
cli
jne
ret
lock
mov
loope
dec
mov
inc
mov
in
fcompl
test
popf
and
jmp
jo
daa
mov
mov
dec
aam
aad
out
adc
aam
pop
cmpsb
mov
xor
jmp
pop
loope
rolb
jbe
pusha
inc
xlat
pop
sub
mov
and
jge
adc
mov
and
outsl
popf
add
sbb
lods
xor
and
sub
fisubs
cmpsb
fs
add
cltd
jmp
push
mov
inc
mov
in
jns
arpl
pop
sub
xchg
imul
out
mul
mov
push
and
jmp
aaa
leave
call
incb
call
pop
pop
jmp
fnstenv
inc
jg
es
stos
and
cwtl
xor
cmp
push
jg
lods
cmp
movsb
jecxz
push
sbb
xor
xor
adc
popa
mov
and
inc
inc
or
int3
mov
xchg
push
mov
xor
xchg
hlt
cmc
inc
adc
les
movb
push
fwait
cmp
or
pop
dec
fcoml
test
pop
mov
ja
pop
addb
imull
jno
mov
dec
jne
lcall
sub
lahf
push
or
or
lods
xchg
das
push
xor
arpl
repnz
ja
je
arpl
fs
in
mov
push
dec
shl
pop
insl
fcmovnu
adc
rolb
lds
jl
out
jae
jle
push
outsb
in
scas
push
mov
pop
stc
cmp
iret
incl
sbb
inc
mov
loopne
les
and
sbb
push
mov
hlt
or
push
or
cmpsb
in
call
dec
add
push
mov
bound
pop
call
fcoms
mov
faddl
pusha
into
pop
call
mov
ss
pop
sub
cmp
inc
jp
mov
ss
sub
fisubs
sub
cmp
xchg
add
test
mov
repnz
mov
aaa
aam
cmp
bound
bound
inc
and
es
addb
sbb
push
mov
mov
add
inc
sbb
dec
fbld
ds
ss
dec
js
lods
loopne
cmp
mov
movsl
xor
fmuls
pop
arpl
mov
insl
fists
dec
or
lret
push
inc
dec
rcrb
inc
dec
jg
mov
outsl
clc
xchg
sub
fnsave
popa
aad
test
ljmp
popf
push
adc
cwtl
sbb
mov
aam
lods
jbe
push
and
adc
mov
cmp
xchg
sub
imul
push
pop
push
lahf
mov
daa
lds
jle
rorl
cli
pop
xor
je
testl
popf
jae
insb
sbb
dec
xchg
mov
add
xchg
aas
movsb
addl
out
xchg
lds
add
jp
pop
cmp
sbb
outsl
add
out
test
sub
int3
arpl
scas
jge
incb
jp
jg
loopne
in
xchg
fnstsw
mov
pusha
ja
nop
test
pop
scas
out
cmpsl
mov
and
loopne
out
adc
mov
mov
add
call
xchg
aad
xor
pop
jne
jno
dec
and
mov
nop
cmc
shll
out
sub
stc
xchg
jg
xor
add
incl
sbb
dec
dec
pop
or
or
int3
adc
push
adc
je
ja
stc
jecxz
jnp
push
ficoms
mov
mov
sub
mov
rcrl
mov
add
push
sahf
ficoml
hlt
push
pushl
in
cwtl
jle
out
add
orb
dec
xor
inc
scas
inc
mov
outsb
sub
data16
push
and
push
fmulp
and
iret
in
enter
enter
mov
inc
inc
rcrb
bound
repnz
cmp
adc
aad
loopne
sarb
mov
int3
mov
lods
pop
out
shll
fsubl
outsl
arpl
or
mov
arpl
pop
xor
jmp
xchg
hlt
cmp
pop
mov
sub
ud2
test
sub
lcall
mov
or
daa
push
inc
push
cmpsb
mov
mov
xor
jl
popf
xor
fstps
mov
pop
xor
cli
and
xchg
cltd
jns
popf
cmp
mov
push
push
cmp
das
es
push
stos
mov
jp
adc
jle
or
loope
pop
push
sbb
jge
jb
into
test
movsb
push
dec
fdivs
mov
nop
jg
and
pop
jns
pop
iret
decb
daa
jnp
adc
mov
out
cwtl
push
es
icebp
or
push
jae
aad
sub
push
mov
sbb
and
jecxz
mov
mov
adc
pop
cmpsl
ret
xchg
pop
ds
inc
pop
fisubrs
cs
pop
scas
dec
dec
sub
mov
hlt
iret
sti
gs
and
call
rcrl
cli
jp
movb
mov
jns
in
cmp
mov
repz
xor
call
rorb
push
add
or
fnstenv
inc
fwait
jge
adc
mov
ds
lock
ljmp
dec
es
les
movsb
fidivrs
and
inc
mov
mov
fdivrs
mov
lea
pop
xchg
dec
lret
mov
scas
pop
sbb
xor
xchg
daa
cmpsl
fcomps
push
sbb
inc
cld
sbb
push
push
mov
aad
inc
sub
rolb
mov
loop
addr16
addr16
lret
dec
xchg
fldt
cmp
push
jnp
pop
stc
sub
jmp
rcll
pop
sbb
data16
mov
sbb
sbb
adc
lahf
add
xchg
jo
rclb
mov
pop
imul
xchg
push
pusha
or
push
ljmp
xor
das
lock
add
int
cmp
lcall
clc
fsub
arpl
hlt
or
insb
xlat
push
cmpsb
jge
push
jae
xchg
ss
lret
jge
frstor
out
lahf
sti
sbb
push
adc
movsl
pusha
xor
cmp
push
ja
cmp
cmpsb
mov
lret
jmp
and
out
xor
or
pushf
or
adc
push
out
push
inc
mov
aaa
pop
shr
pop
cmp
inc
lods
mov
sub
outsl
bnd
jnp
divl
push
lods
sub
push
cwtl
mov
cmp
aas
push
xchg
in
add
std
rcrl
mov
and
push
fsubs
popf
mov
push
imul
inc
stc
push
add
or
sub
dec
mov
inc
call
les
shlb
xchg
jne
or
mov
fmuls
jp
mov
add
int3
arpl
inc
cli
fadd
aad
fisttps
inc
lods
lahf
shr
mov
inc
push
xor
call
pop
cli
loopne
mov
mov
xor
mov
mov
push
fiaddl
test
xor
jle
mov
inc
out
insb
ds
mov
cli
scas
fsubrl
xor
stc
mov
sbb
shll
sahf
mov
inc
push
xchg
ss
jns
je
fidivl
out
mov
pop
pop
insb
repz
outsl
sub
push
je
and
xlat
xor
test
ljmp
and
and
sbbb
scas
cld
adc
fistl
push
adc
xchg
sahf
imul
scas
adc
les
insb
dec
pop
ja
pop
xchg
negb
js
scas
in
mov
mov
fists
dec
cld
mov
cltd
fildll
jbe
call
aas
enter
push
jge
pop
in
rclb
adc
mulb
ficoms
dec
jp
mov
test
subb
pop
negl
add
sahf
cmpsb
fucomp
push
push
shlb
sbb
pop
jle
cld
popa
cmp
mov
xor
mov
cmp
mov
cmp
push
pop
xchg
jl
jecxz
in
adc
mov
rorb
cmpsb
fistl
jnp
enter
sbb
pop
push
mov
jmp
testb
and
mov
pop
cmp
js
mov
jne
sub
jae
mov
inc
into
je
adc
jae
adc
mov
xchg
mov
incl
and
sbb
mov
mov
mov
sbb
xchg
repnz
fcoml
jge
mov
loopne
cmpsb
adc
add
int
imul
cmp
or
or
and
shrb
lret
push
arpl
push
rclb
shlb
lods
arpl
rcr
inc
adc
xchg
mov
test
xchg
lock
fsubr
icebp
arpl
subb
cld
repz
or
push
je
mov
fs
mov
ret
ficoml
add
call
ljmp
jnp
push
lods
mov
adc
or
enter
out
sbb
shll
es
dec
outsl
imul
pop
rorb
jbe
sub
stos
jb
pusha
lds
popf
ror
jnp
adc
jp
mov
setne
inc
fsts
xor
aas
aaa
das
mov
andnps
cli
aad
dec
push
xchg
aas
pop
sbb
addr16
cmpsl
lods
imul
mov
add
in
adc
jae
mov
sti
xchg
lcall
fistpl
sub
xor
mov
push
scas
pop
sbbl
lret
lret
push
sub
push
xchg
shlb
push
dec
repnz
leave
sub
cmp
cld
pop
enter
mov
sbb
adcl
cmpsb
fisubs
faddl
pop
mov
mov
xor
lea
sub
xor
xlat
decl
mov
push
ror
xchg
adc
aaa
stos
cmp
ljmp
xchg
mov
jl
or
sub
and
cmp
rolb
leave
sarb
and
test
sahf
pushf
add
inc
jecxz
mov
dec
cmpsb
daa
iret
add
inc
xchg
mov
xor
jle,pn
aad
insb
push
sar
lret
imul
inc
cld
push
in
out
xor
xchg
push
test
mov
shl
pop
cmp
aam
addr16
jae
xchg
insl
std
iret
jge
pop
push
leave
lock
les
cli
jo
fs
add
sub
inc
mov
mov
cmc
test
xor
jg
fwait
adc
movsb
sbbb
shrb
fdivp
movsl
jge
pop
xchg
lret
jbe
ss
in
lods
popa
out
dec
xlat
push
repz
test
mov
mov
call
pop
push
lret
mov
subl
xor
std
add
not
jecxz
enter
clc
adc
popf
sti
popf
pop
hlt
test
loope
jbe
sub
hlt
adc
ds
stos
push
fiadds
sub
pop
mov
jae
mov
and
andb
and
or
jne
mov
pop
cmp
cli
test
addr16
insl
inc
test
mov
repnz
sarl
addb
seta
hlt
mov
nop
xlat
or
xor
push
adc
xor
pop
mov
mull
mov
shl
pop
inc
arpl
xchg
dec
mov
xchg
dec
lret
std
sub
scas
cmp
fmull
subl
call
pop
and
xor
imul
jge
jnp
jo
bnd
negl
shll
cmpsl
dec
sbb
into
mov
out
leave
movsb
adc
xor
or
fldcw
fildl
xor
push
push
inc
bound
sub
rcrl
jbe
mov
pushf
dec
ljmp
inc
or
shrb
es
push
jnp
mov
rolb
xor
or
xorl
xchg
fsubrs
xchg
nop
repz
fidivs
adc
repnz
xchg
mov
mov
inc
ds
or
ja
repnz
xlat
adc
test
std
addr16
call
cmpsl
cmc
in
adc
push
dec
iret
xchg
mov
and
syscall
cmp
sti
gs
pop
addr16
mov
data16
outsl
adc
push
pop
jp
das
lea
mov
xor
cmp
shll
mov
push
aas
in
inc
mov
cmp
or
pop
outsl
jnp
cmp
add
dec
leave
insb
leave
sbb
dec
stc
push
push
dec
stc
or
subl
lds
adc
dec
sub
cltd
mov
jmp
xor
inc
mov
fldt
lock
mov
cmp
in
xchg
cmp
lahf
jo
daa
mov
push
push
sub
dec
and
xor
imul
outsb
add
mov
insl
adc
sbb
aas
xchg
or
cmp
and
jb
cwtl
xchg
enter
xchg
pop
xchg
ja
leave
mov
fisubrl
and
fs
or
mov
mov
push
push
insl
arpl
xchg
mov
adc
push
sbb
or
pop
pushf
imul
arpl
loopne
ret
and
mov
xor
add
pop
pop
jb
ja
sahf
sbb
sbb
popf
nop
hlt
sti
sbb
xor
adc
dec
aas
jnp
push
push
dec
in
sbbb
mov
out
enter
loope
mov
push
cmp
pop
insb
addr16
or
mov
mov
or
mov
clc
rolb
jmp
fsubrs
dec
fdivs
inc
insb
mov
add
adc
sub
lds
inc
push
sub
jne
cwtl
mov
pop
int3
xorl
mov
outsl
xchg
add
fdivrp
jge
in
insb
push
out
imul
outsl
cld
lock
lods
pop
popf
int
sub
pushf
mov
push
mov
dec
mov
into
or
inc
push
mov
cwtl
mov
sbb
notb
inc
dec
loope
outsb
jns
sbb
inc
or
push
jo
and
int
mov
test
cmp
mov
leave
aad
aam
fildl
sub
aad
loop
inc
jl
xchg
mov
int
into
pop
clc
mov
std
mov
bound
pusha
push
inc
andb
daa
push
xorb
or
scas
cmp
scas
pop
xchg
mov
jne
fists
lret
pop
scas
xchg
dec
lret
jmp
xchg
rorb
cmc
xchg
add
push
cmc
sbbb
xchg
push
xor
es
insl
jg
int
inc
fnstcw
add
clc
lret
sbb
jl
lds
jl
repz
jmp
xchg
pop
add
sbb
cmp
dec
nop
cld
xor
dec
cmp
push
and
cli
lds
mov
jae
pusha
adc
cmp
push
and
adc
xor
mov
bound
pop
push
addr16
pop
cmp
cmp
add
inc
jecxz
fdivl
nop
data16
pop
in
mov
ret
dec
std
test
hlt
mov
sub
loopne
in
mov
cmp
mov
lods
popf
sub
inc
cmc
pop
adc
int3
mov
sti
out
in
outsl
mov
push
fidivl
shll
hlt
xor
and
stos
in
mov
ljmp
dec
adc
dec
inc
sti
xor
mov
lcall
xchg
cmp
xchg
cbtw
fistl
out
shl
sbb
sbb
or
lock
insb
mov
mul
jle
fidivrl
icebp
pop
clc
push
adc
jp
inc
pusha
mov
pushf
fisttpll
js
pop
sub
dec
fisubrs
pop
mov
inc
mov
adc
sub
mov
imul
pusha
ret
iret
je
stc
add
xchg
arpl
loopne
in
mov
mov
aas
xchg
mov
dec
out
mov
addl
daa
dec
sbb
and
fistl
or
subl
adc
jge
xchg
dec
or
push
cmpsb
mov
xor
sbb
in
xchg
inc
jbe
stos
movsl
dec
fdivl
rcrl
lds
mov
pop
push
call
mov
lds
xorb
or
data16
sti
push
sub
push
fidivrs
into
cmpsb
cmp
shll
dec
mov
dec
sub
mov
lock
fists
xor
ret
andb
lret
arpl
arpl
lods
cltd
ficoms
jp
shlb
addl
sub
out
sub
inc
fs
xchg
pop
in
clc
jl
imul
push
mov
dec
and
pop
test
jmp
xor
imul
pop
add
jno
xchg
or
push
stos
or
add
mov
inc
dec
mov
mov
or
sahf
xor
int3
repz
add
push
push
xchg
mov
or
std
repz
insb
dec
popf
mov
adc
in
adc
in
xchg
jbe
and
push
push
test
mov
repnz
push
sub
test
pop
mov
addr16
arpl
loope
sbb
loopne
pop
inc
aaa
rcr
stos
sbb
js
lcall
jmp
push
aad
leave
and
out
add
test
mov
test
shrl
add
scas
or
mov
les
shll
add
subb
enter
mov
inc
inc
not
repz
test
mov
add
stc
outsb
mov
outsl
aam
xor
mov
mov
test
daa
push
pop
or
fists
cmc
jmp
add
jp
das
es
int3
jle
enter
pop
inc
dec
mov
incb
adcl
cmp
dec
cmc
push
cpuid
divl
cmpb
mov
jns
pop
xor
test
cmp
aaa
imul
sbb
shlb
dec
push
sub
adc
testl
mov
repz
movsl
dec
js
adc
mov
inc
stos
cmp
xchg
movsb
cltd
fsubrs
nop
es
add
xchg
in
in
dec
xchg
into
pushf
cmp
xchg
pop
cld
in
xchg
cli
ja
push
loope
push
lea
add
js
xor
aam
xchg
dec
or
lds
imul
mov
push
xchg
jbe
icebp
hlt
movsb
je
cmpsl
lret
jmp
shrb
fdivrs
flds
nop
xor
outsl
push
dec
pop
jbe
xchg
rcl
rcl
test
call
sub
std
xor
cs
sbb
lcall
xor
mov
mov
jne
add
push
into
mov
dec
loope
sub
test
jae
lea
addr16
insl
rorb
dec
out
stos
stos
pop
mov
jg
and
mov
xor
jp
mov
inc
or
cs
loope
into
fimull
lods
js
mov
sbb
outsl
jns
inc
fsubr
pop
data16
daa
scas
test
stos
aas
cli
mov
pop
jmp
adc
in
rorl
popf
push
mov
cmp
inc
xchg
mov
push
inc
sub
fldt
pop
pusha
mov
inc
pop
je
add
dec
xor
dec
jmp
cmc
in
inc
mov
ret
and
xchg
es
jl
aam
loop
add
jge
je
cmp
je
inc
inc
push
cli
in
dec
jle
adc
int
xor
mov
cmp
pop
cmp
pop
scas
lea
cmp
scas
ret
or
mov
lret
je
or
popa
lcall
test
les
inc
jl
addb
js
xorb
sarb
jle
paddw
push
pop
dec
cmp
mov
jo
pop
mov
into
dec
dec
ljmp
push
mov
xchg
out
inc
cmp
bound
loop
aam
jmp
shrl
dec
aas
mov
fsubrp
lahf
lds
rcll
and
repnz
cld
test
push
sbb
jno
sbb
dec
push
in
dec
nop
pop
insl
cwtl
in
sub
out
testb
inc
loope
inc
pop
pop
inc
jae
int
add
cmpsl
lock
pushf
xchg
lcall
sbb
mov
imul
enter
shlb
repz
sub
xchg
call
sbb
sbbl
push
and
jae
repz
dec
test
push
loope
aad
pop
mov
test
scas
lret
adc
sahf
popa
add
mov
into
add
xlat
or
sbb
sarl
out
aad
xor
xchg
icebp
aam
loop
fwait
mov
xlat
adc
aad
dec
pop
add
and
xchg
stos
int3
cltd
movsl
sbb
mov
jb
int
out
sbb
gs
fisubl
lock
sbb
pop
xchg
or
dec
mov
hlt
jo
pop
dec
cwtl
jo
sbb
sbb
dec
xor
jb
jns
fwait
cmp
pop
sbb
fnstenv
push
add
xorps
lods
or
das
inc
sub
pop
xchg
jns
add
mov
repz
push
xchg
pop
pop
jmp
jl
add
sub
mov
jns
xchg
add
cld
cltd
mov
cld
lahf
push
lods
ficomps
stos
mov
jg
jle
or
outsb
add
movsl
dec
pop
mov
hlt
push
adc
inc
das
fcmove
aad
adc
add
cs
jno
inc
arpl
addr16
mov
int
mov
sub
lahf
std
imull
push
imul
push
inc
in
mov
lcall
sub
mov
aas
mov
sti
mov
adc
xchg
cmc
pop
aas
add
imul
movsl
dec
push
add
cmpsl
aad
sarl
xchg
loop
in
and
xlat
cld
test
aaa
subl
dec
out
dec
sbb
data16
icebp
shlb
aas
mov
mov
test
rorb
sub
ljmp
add
mov
lods
adc
das
add
mov
xor
or
es
ret
xor
dec
repz
xor
mov
loopne
jbe
scas
xchg
test
xchg
outsl
in
jo
pop
in
ss
mov
inc
jl
mov
arpl
fdivrp
mov
pusha
fcmove
cmp
mull
orl
mov
jae
jno
mov
pop
cltd
lds
mov
mov
mov
call
xchg
lods
push
scas
scas
cmpsl
ljmp
mov
adc
arpl
mov
and
push
stos
mov
stos
sbb
std
subl
imul
std
out
cmpb
ret
mov
sbb
push
addr16
popa
jp
fildl
inc
jnp
xor
mov
cmpsl
fdivrs
pushf
push
inc
xchg
mov
fsubs
dec
out
stc
and
lods
in
lods
xchg
fistps
lcall
dec
or
mov
cld
mov
push
dec
pop
repz
int3
clc
dec
dec
dec
adc
or
repz
aad
sahf
mov
shrb
adc
push
aam
xor
adc
mov
inc
push
xchg
sbb
or
into
pop
sub
add
loope
push
mov
mov
jp
push
rolb
jle
inc
adc
bound
and
jl
out
xor
xcrypt-cfb
cmpsl
lods
pop
cmc
xor
addr16
in
push
add
lods
scas
out
sysret
roll
jno
adc
mov
push
inc
jp
xchg
aad
or
jmp
cmp
leave
rclb
pushf
xorb
loopne
fcoms
jle
or
in
xchg
cwtl
mov
cltd
fwait
gs
pop
mov
aas
push
sub
xchg
shl
popa
popa
mov
mov
inc
sub
rcrl
xlat
mov
dec
les
or
inc
sub
into
outsl
sub
push
enter
mov
inc
sub
enter
in
lret
jnp
test
dec
jno
push
mov
add
movsl
cld
nop
sub
lods
mov
inc
mov
xchg
push
sbb
mul
clc
and
jecxz
xchg
lock
notl
je
xchg
sbb
cli
ljmp
and
cmp
movsb
sub
lea
mov
or
mov
imul
imul
mov
repz
shl
stos
rcl
lods
hlt
mov
popf
mov
sub
jae
lea
sub
mov
push
push
add
and
mov
test
add
mov
data16
dec
mov
push
push
andl
mov
mov
and
data16
and
push
sbbb
pushf
push
fdivrs
mov
mov
jae
mov
cwtl
inc
jecxz
popa
enter
mov
mov
out
andb
movsl
out
push
jge
sbb
adc
pop
add
sbb
mov
mov
or
mov
fbstp
lods
insb
cmpsl
xchg
sbb
in
xchg
cmc
js
pop
sub
je
rsqrtps
and
lock
insb
mov
sub
call
push
mov
sarl
cld
test
xor
jg
xchg
dec
or
xlat
repnz
hlt
mov
sar
data16
sarb
pop
fwait
mov
pop
rolb
out
cmp
mov
add
adc
xchg
cmc
cltd
jmp
movsb
icebp
into
ffreep
mov
jb
stos
leave
insl
push
xchg
jne
fdiv
imulb
int3
adc
loopne
dec
into
xor
mov
mov
xchg
or
dec
andl
pop
maskmovq
divl
cwtl
mov
unpckhps
mov
nop
jnp
jp
loope,pt
xchg
lret
aam
mov
cmp
ret
lret
xchg
sbb
jmp
gs
out
subl
jge
ja
mov
jge
lret
jbe
aad
mov
sub
xchg
and
and
cmp
sbb
jb
sbb
jbe
xor
push
cmp
dec
ss
insb
pop
outsl
push
add
popa
mov
xchg
cmp
daa
test
popa
mov
insb
jno
mov
fbstp
cmpsl
fdivrl
loope
sub
mov
sbb
cmc
sub
lods
dec
mov
cmp
add
out
xor
mov
dec
jno
scas
mov
scas
fdiv
lock
out
cmpsb
and
lock
out
adcb
push
sub
mov
icebp
test
loope
out
xor
int
mov
leave
xchg
xor
mov
jle
les
lahf
aas
into
aas
xchg
fwait
or
jg
enter
sbb
ret
ljmp
mov
jge
fwait
xchg
insl
jns
pop
fisubs
inc
push
sub
imul
hlt
outsb
movsb
adc
daa
icebp
pop
jecxz
cld
mov
test
inc
dec
or
add
sbb
fwait
js
mov
jg
mov
cmpsb
lcall
jg
mov
adc
push
or
rcrl
add
cmp
pop
xor
sub
sbb
ret
mov
in
mov
repnz
stc
mov
aas
in
popf
cmc
jo
pop
clc
ljmp
jo
in
in
pop
fmuls
cmp
xacquire
mov
mov
sub
xchg
mov
and
mov
fadds
negb
mov
adc
repz
push
push
and
xlat
lahf
sbb
push
and
bound
mov
enter
insb
push
mov
lcall
bound
or
sbb
jmp
test
adc
test
adc
pop
pusha
and
sub
xchg
aam
jmp
or
leave
inc
push
into
leave
int
xchg
lret
add
jmp
movsl
xchg
push
cmc
add
sbbb
pop
and
aas
sahf
pop
sbb
shl
out
fwait
leave
push
cmpsb
loop
xor
mov
loopne
inc
cmpsl
into
sub
inc
add
std
cmp
mov
inc
push
xchg
jae
icebp
std
cmp
pop
mov
jg
aad
call
lock
filds
stos
add
mov
xor
jp
or
lret
push
ficomps
pop
clc
inc
pop
mov
call
xchg
movb
shl
adc
or
xor
xchg
aaa
jns
fucomi
lods
pop
jne
pop
loop
mov
and
and
movsb
xchg
jno
and
out
fldcw
jb
pop
or
push
sbb
jb
inc
out
xchg
xchg
cld
out
cmp
mov
fmull
mov
lret
in
sub
fistpll
lea
dec
dec
and
outsb
cmc
dec
icebp
mov
les
inc
jae
scas
xlat
je
fsts
and
mov
mov
clc
add
or
dec
pop
loopne
sahf
insl
in
push
or
mov
cmpsb
mov
hlt
test
out
fnstenv
jns
mov
xor
fisubrs
sub
pop
jle
pop
adc
mov
mov
inc
cmp
sub
adc
adc
jae
outsl
jp
in
arpl
push
mov
mov
pop
lods
push
and
jge
loopne
xor
push
push
jbe
int3
and
out
xchg
ja
aad
rcll
stos
loope
cmp
ja
mov
sbb
lods
test
or
mov
in
imul
xchg
sahf
lret
sbb
xchg
or
dec
pop
cmpsb
fsubl
mov
dec
dec
test
cmp
sti
arpl
imul
test
inc
sbb
cmp
adc
sbb
test
cmpb
mov
and
mov
arpl
push
stc
jae
adc
xor
jns
adc
dec
mov
jmp
add
iret
out
mov
fsubs
out
or
fwait
inc
jbe
pop
sbb
xchg
push
xor
mov
out
xor
xchg
out
inc
icebp
iret
movsb
inc
mov
popf
lret
xchg
sub
adc
adc
cli
jle
stc
adc
sub
and
dec
and
loop
repz
call
call
iret
jmp
gs
sub
neg
and
and
mov
pusha
add
loop
fcomps
sub
xor
push
sti
add
orb
jns
dec
lret
scas
js
and
xor
cmp
aam
pop
hlt
lds
ret
jns
imul
dec
mov
mov
aaa
sub
lahf
and
add
movb
hlt
cmp
sub
in
inc
inc
xor
mov
mov
sub
repz
cmp
in
adc
lcall
mov
and
addr16
les
dec
nop
iret
dec
inc
dec
mov
inc
pop
mov
lods
fsubrl
mov
mov
xor
cmc
mov
jnp
sbb
push
mov
pushf
inc
mov
pushf
mov
inc
imul
out
inc
pop
cmp
aas
aam
jmp
fdiv
push
in
jge
dec
shlb
and
xchg
sti
iret
jecxz
outsl
cmpsl
stos
nop
cwtl
xor
hlt
mov
das
dec
leave
push
inc
in
pop
pop
sub
mov
mov
orl
scas
imul
movsb
hlt
lcall
decl
jo
mov
pop
jle
and
jne
dec
call
fildll
roll
imul
push
lret
cmp
sbb
rcrl
jp
fidivrs
xchg
dec
loopne
js
loop
inc
fst
movb
push
outsb
xor
mov
bound
xchg
add
lods
popl
jo
xchg
ja
pop
push
iret
es
fwait
ficoml
inc
and
lret
and
and
dec
roll
pop
into
mov
adc
adc
push
pop
pop
mov
mov
push
aas
adc
or
dec
test
hlt
and
shlb
repz
and
mov
inc
in
jne
iret
lods
mov
fstp
lret
mov
and
add
pop
lock
call
dec
pop
sub
outsb
xor
pop
cmpsl
pusha
mov
bnd
icebp
ds
dec
pop
shl
int
add
lahf
xorl
xchg
or
or
inc
repnz
jnp
icebp
mov
or
mov
push
inc
cmp
stc
and
lcall
xor
jbe
sti
incl
repnz
insb
mov
mov
push
int3
jmp
mov
adc
mov
neg
and
push
test
dec
ljmp
sbbb
push
in
bound
jg
loop
pop
hlt
into
add
push
cmp
fidivs
movsb
into
xor
sahf
enter
jno
pop
xor
loope
es
push
mov
loope
or
jae
sub
push
outsl
aam
outsl
or
xchg
fmulp
std
imul
jnp
ljmp
decl
into
adcb
or
out
sbb
xchg
cmpsl
inc
loope
pushf
add
adc
repz
xchg
inc
in
dec
int3
add
gs
decb
imul
gs
add
andl
and
or
add
cmc
clc
das
inc
mov
call
add
hlt
scas
shlb
jo
push
add
lea
push
jmp
inc
mov
pop
out
push
sti
jnp
xchg
test
cmp
aas
ret
add
and
test
dec
cmp
test
sub
adc
cmp
dec
cmpxchg
jae
adc
jmp
jb
clc
loopne
push
mov
test
aas
jp
stos
loope
ja
push
sbb
insl
sub
dec
xchg
flds
jb
dec
and
jno
sub
mov
mov
mov
cwtl
aaa
push
mov
mov
xchg
mov
jne
pop
push
dec
test
les
mov
hlt
pusha
loop
jle
cwtl
loopne
stos
ljmp
outsl
push
ss
std
mov
push
or
mov
pop
or
inc
xchg
lods
pop
push
pop
mov
ret
fsubrs
int3
sbb
in
loopne
inc
xchg
push
push
mov
and
cld
mov
gs
das
mov
mov
in
xchg
popf
int3
lahf
out
in
jne
xchg
and
movsl
repz
out
test
pop
shll
add
pop
test
fistl
sbb
pop
dec
ljmp
sub
xchg
push
fwait
or
sti
scas
mov
pop
ds
int
test
and
xchg
xchg
inc
or
inc
inc
mov
imul
inc
jo
ja
cmpb
jo
xor
ret
sbb
mov
pop
scas
cmp
jo
dec
xlat
xchg
push
jmp
lahf
sub
xchg
adc
mov
cmc
sub
push
jp
cmp
ret
loop
mov
push
adc
fnsave
sahf
pop
out
adcb
push
mov
xchg
pop
movsl
fwait
ss
push
dec
pop
mov
loop
loopne
xchg
pushl
int
mov
xor
xchg
cmp
and
inc
in
cmp
adc
adc
pusha
cmp
ja
mov
out
dec
scas
or
push
mov
scas
mov
sub
mov
rolb
inc
add
mov
je
bound
push
ret
sbb
sub
push
push
sub
shll
mov
movsl
insb
push
jl
xor
mov
jge
dec
mov
fisttpl
addps
jg
ljmp
out
jo
sub
and
roll
xor
std
pushf
subl
pop
sbb
cmp
mov
fnstsw
fdivl
lea
cmp
mov
mov
add
adc
adc
jle
xchg
mov
mov
add
xor
or
out
xchg
imulb
sti
pop
and
test
fsubs
ljmp
mov
adc
inc
sbb
cmpsl
or
xor
mov
pop
popf
cmp
enter
ljmp
outsb
stos
repz
or
or
in
xor
cli
insl
stos
sbb
lahf
pop
lds
dec
pop
out
cmp
outsl
jo
movl
add
adc
mov
mov
mov
mov
aad
enter
cmp
dec
xor
cltd
add
rol
jecxz
out
pop
or
ljmp
insl
aaa
or
sbb
and
push
mov
iret
cmp
and
lock
aas
sub
ja
jmp
xchg
sbb
push
sub
fwait
xchg
push
mov
mov
mov
jns
cmpsb
call
insl
cli
xchg
fcom
add
mov
ss
jne
xor
shll
xchg
pop
pop
jg
ja
pop
movsl
fsubr
inc
in
push
insl
push
jne
inc
scas
add
xor
pop
shl
fcmovne
xor
jmp
ret
dec
and
adc
es
andl
rcrl
dec
inc
cmpsb
add
xchg
bound
adc
jne
aam
cmp
add
stos
rolb
testb
outsl
jle
scas
inc
sub
mov
adc
fcompl
inc
sahf
jg
mov
dec
ret
inc
scas
call
mov
pop
cmp
shl
inc
mov
xorb
cmp
jne
sub
jg
lret
jecxz
sahf
jmp
or
dec
mov
push
or
cltd
mov
inc
inc
call
xchg
sbbl
pop
std
add
mov
popa
mov
add
cmp
lret
rol
adc
jg
sub
cmp
add
jl
pop
dec
in
jmp
pop
cld
test
hlt
xchg
push
xchg
inc
push
dec
adc
inc
inc
popa
and
add
add
push
sub
imul
jo
sbb
addr16
fstpl
mov
dec
call
lcall
fstpl
jo
sbb
repz
repnz
lock
push
xlat
push
mov
sbb
xor
out
adc
enter
jecxz,pn
ljmp
sahf
lds
dec
fsubrs
cmp
jle
das
icebp
ficoms
outsb
enter
mov
and
add
mov
inc
stos
pop
loopne
lods
repz
push
into
je
out
inc
cmpsl
inc
sbb
cmp
subb
inc
in
jecxz
add
jne
mov
sbb
fimull
or
sub
out
dec
ljmp
jl
fldenv
or
dec
pop
mov
sbb
aam
pop
fldcw
insb
mov
clc
xor
test
jl
xchg
cwtl
sbb
mov
fwait
shll
jge
jmp
pop
aaa
xchg
sub
test
push
cmpsb
or
outsl
sbb
insb
pop
xchg
in
push
and
iret
sbb
popf
inc
fsub
adc
jno
hlt
inc
std
ss
pushf
inc
pop
cmp
std
arpl
dec
mov
xor
ret
out
sub
in
sub
pop
add
push
xchg
icebp
mov
mov
cwtl
and
in
push
mov
adc
test
aaa
scas
push
jbe
call
das
rorl
dec
imull
inc
andl
mov
lret
imul
xlat
push
mov
sahf
and
mov
mov
cmp
pop
push
sbb
orl
dec
js
inc
xor
xchg
jae
bound
lahf
lods
shlb
cltd
push
imul
xlat
sub
fstps
scas
xchg
divb
in
incb
mov
jne
arpl
sub
lahf
and
test
pop
stos
sahf
rorb
fmul
mov
in
push
mov
push
adc
in
push
jecxz
out
rclb
mov
je
dec
sbb
repz
adc
xor
in
inc
stc
int3
or
and
push
dec
mov
das
cmp
mov
mov
and
jnp
sbb
pop
popf
insb
or
push
adc
fcoml
mov
dec
mov
cld
iret
sbb
push
sahf
stos
or
orl
lcall
or
adc
jo
repz
out
cmp
sbb
repnz
jecxz
rcl
xor
adc
je
je
add
arpl
int3
out
jno
pop
and
cmp
cmpsb
je
push
mov
popa
dec
xchg
js
adc
inc
dec
pop
lcall
out
mov
push
pop
push
dec
ljmp
jp
push
dec
mov
adc
jp
mov
sbb
cmp
insl
daa
xlat
das
pop
ret
mov
in
push
pop
mov
and
xchg
add
xor
test
inc
shlb
push
dec
xor
icebp
movsl
dec
adc
and
popf
call
add
xchg
loope
dec
mov
mov
mov
lea
push
mov
push
jl
adc
adc
outsb
xor
xchg
cltd
mov
mov
mov
cmpsb
hlt
sbb
cwtl
addr16
iret
int3
xor
xchg
test
jb
cmp
inc
or
mov
xchg
xchg
sbb
push
cwtl
push
pop
xchg
mov
inc
xor
in
dec
adc
ficompl
mov
xor
faddl
out
out
xor
lcall
repnz
inc
jecxz
mov
ficoml
scas
adc
jno
adc
aad
ficoml
ret
jecxz
loopne
stos
loope
fsubrl
xchg
pop
pop
rolb
sub
xor
es
adc
mov
xchg
mov
movsl
push
jae
in
pop
jecxz
imul
js
inc
adc
pop
in
lea
int
mov
stos
push
xor
mov
adc
xor
ds
dec
enter
and
repz
sbb
mov
jo
arpl
xor
pushf
adc
iret
dec
and
jns
inc
mov
out
mov
jmp
shlb
cmp
outsb
adc
inc
aad
or
and
pop
loope
sub
sbb
inc
das
mov
sbb
or
test
sahf
mov
jecxz
adc
inc
jl
mov
sbb
ret
and
add
hlt
push
jne
movsb
inc
lahf
xor
and
scas
pop
xchg
sbb
jp
mov
lock
adc
cmpl
call
faddp
dec
and
jo
dec
jb
pop
lods
dec
cld
mov
cmp
xchg
mov
xchg
mov
mull
psubb
sub
sub
fwait
mov
dec
mov
fwait
fwait
jl
cmp
mov
in
jg
mov
xchg
pushf
push
pushl
addr16
xchg
rclb
inc
popf
scas
fildll
bound
mov
outsl
mov
adc
scas
popf
cmp
call
jg
cli
cli
lock
pop
jg
stos
jp
xchg
call
jmp
dec
sti
pop
cmc
adc
insb
and
or
xlat
or
ljmp
mov
cli
dec
outsl
es
js
das
inc
stos
fildll
and
scas
pop
xlat
mov
outsl
lcall
jp
inc
mov
fnstenv
sub
stos
aad
push
adcl
sub
fisubrs
and
incl
add
fbstp
sbb
and
push
rcl
push
mov
adc
or
pop
cmpsl
shl
paddd
and
push
push
pop
xchg
xchg
lods
scas
cmpsl
cltd
add
popf
cmp
out
mov
sbb
sub
inc
jmp
inc
lods
pop
testl
adc
sahf
out
cmp
les
add
divl
pop
and
and
js
push
cmp
lret
jge
mov
cmp
imul
in
loopne
mov
lock
sahf
insb
out
dec
jne
fs
push
inc
add
dec
jne
imull
cmc
test
movsb
add
mov
pop
addr16
adc
add
push
and
movsl
adc
hlt
mov
call
jmp
dec
add
enter
xlat
xor
add
dec
lcall
jmp
scas
add
out
ja
sbb
xchg
jo
addr16
hlt
aaa
pop
mov
aas
pop
cmp
xchg
push
es
insl
xchg
sbb
loope
pop
sbb
xchg
scas
fwait
rorl
lret
push
pop
addl
inc
lock
out
xchg
mov
rclb
inc
or
xlat
ss
fstpl
int
jle
inc
out
lods
jge
mov
dec
icebp
lcall
outsl
out
jge
pop
xchg
push
icebp
xchg
pop
jnp
mov
sbb
outsl
mov
and
add
enter
fisubrs
push
lret
scas
imul
pop
adcl
sbb
xor
daa
add
or
cmp
xchg
add
push
jne
pop
lcall
mov
test
pop
xlat
arpl
pop
pop
in
xor
lock
dec
jmp
sub
adc
sub
mov
imul
cmc
inc
inc
shrb
jle
mov
fiaddl
aas
ljmp
jo
mov
xchg
es
rolb
jb
fwait
cmpsb
or
leave
cmp
iret
lds
add
enter
pop
std
mov
cld
ret
out
test
push
xchg
adc
pop
cli
adc
loopne
or
test
pop
add
aad
jne
cmpsb
jmp
and
mov
mov
and
sub
sub
stc
add
push
push
mov
les
xlat
lcall
jo
jg
push
ret
xchg
mov
pushf
lcall
test
lds
push
leave
pushf
lahf
add
fsts
arpl
das
fs
or
mov
loop
dec
cmp
jl
sub
push
pop
cltd
ficompl
ljmp
loop
cmc
mov
jecxz
stc
leave
cli
ja
into
fdivl
push
push
mov
dec
test
push
mov
cmp
inc
lods
mov
outsl
rep
repz
lea
mov
inc
jle
decb
xlat
push
mov
mov
decl
add
pop
mov
cmp
shr
out
add
xor
cltd
call
dec
test
add
cmp
jbe
and
subl
daa
fldt
scas
sub
mov
xchg
es
nop
add
dec
pop
js
xor
inc
fisubrs
aam
mov
mov
inc
jmp
lahf
adc
loop
into
add
lret
inc
xchg
and
pushf
cmp
and
or
or
mov
adc
xor
mov
mov
stos
scas
push
lods
mov
aad
lcall
dec
std
add
xchg
mov
push
jo
inc
mov
pop
inc
xorl
sbb
in
xchg
ss
jle
andl
xchg
add
push
lock
xor
pop
in
push
in
xor
out
aaa
rcr
mov
arpl
jmp
jp
adcb
inc
cmp
sbb
icebp
mov
push
adcb
rcr
add
pop
jmp
dec
xchg
dec
mulb
sarl
pop
popf
and
sub
xchg
les
aad
pop
sub
sub
enter
in
outsl
stos
jmp
xor
mov
pop
xchg
adc
stos
or
lods
sbb
and
xor
mov
pop
mov
fldenv
rclb
mov
sub
pop
sbb
mov
cmc
xor
lret
outsb
imul
push
push
stc
je
mov
sub
push
das
in
mov
movsb
rorl
push
inc
cmp
cmp
adc
jnp
and
in
sahf
mov
xchg
xchg
pop
or
stos
js
inc
sbb
mov
pop
fs
adc
or
mov
cmpsb
push
mov
out
jns
mov
add
and
dec
andl
jne
inc
ret
stos
int
inc
push
repz
ljmp
adc
push
jno
into
mov
ror
push
add
stos
loopne
jns
in
adc
dec
ja
pop
mov
data16
lret
mov
test
fsubrl
pop
inc
pop
incb
jb
mov
out
xchg
mov
sub
xchg
add
xchg
xor
loop
jmp
enter
lods
lds
test
cmc
pop
pop
fidivrs
jmp
or
pop
mov
test
dec
sti
sbb
dec
jns
stos
add
clc
xor
hlt
inc
pop
aam
push
fimull
push
insl
add
add
fisubrl
hlt
imul
lods
fs
out
pusha
inc
adc
lock
sub
mov
cmc
or
sbb
fwait
hlt
outsb
in
xchg
cmp
push
fsubrp
jne
jle
mov
cmp
or
pop
jnp
std
fdivrs
js
dec
push
movsl
adc
aaa
inc
iret
jnp
dec
and
cmc
in
jmp
dec
xchg
sub
mov
and
jle
lret
stos
xchg
add
and
jge
in
das
jns
and
mov
xchg
mov
add
add
sub
jbe
push
fnstcw
gs
xchg
fildl
mov
dec
mov
mov
lea
lds
sbb
push
pushf
sbb
js
push
hlt
sbb
rcrl
add
xor
popf
pop
scas
pop
and
cli
dec
orb
sbb
push
or
js
addr16
aaa
sbb
push
mov
ja
sbb
fs
sti
nop
xor
mov
bound
fwait
psrlw
pushf
addl
dec
mov
loopne
jno
mov
test
mov
mov
mov
aas
stc
push
aad
nop
leave
inc
or
inc
dec
push
and
ljmp
in
push
pop
icebp
push
mov
std
push
or
cmp
xor
or
out
adc
arpl
sub
push
mov
or
inc
std
idivl
mov
jbe
test
jge
mov
loop
and
imul
inc
adc
into
test
call
sub
sarb
mov
mov
jl
adc
mov
add
icebp
xor
cmpsl
xlat
cld
xor
sub
shlb
pop
dec
shr
outsb
pop
cmpsb
ss
dec
div
fdivl
icebp
xor
inc
jnp
push
sbb
pushf
add
insl
jns
adc
xchg
fdiv
adcb
cs
sbb
sbb
inc
incb
push
out
lods
mov
mov
roll
pop
lds
push
push
adc
xor
gs
mov
nop
jb
lcall
inc
jg
cltd
xor
adc
mov
push
push
loop
iret
rcrl
scas
int3
data16
int3
aas
sbb
xchg
inc
sbb
int
and
repnz
hlt
lahf
mov
imul
insl
pop
clc
fiaddl
jl
and
shrb
repnz
std
lods
nop
int
push
sbb
push
ret
repz
mov
fs
or
imul
push
jge
cmp
and
out
dec
dec
in
and
insl
aaa
out
stos
dec
sbb
mulb
ss
outsl
jb
pop
mov
mov
push
mov
ljmp
sti
subb
mov
cmc
xchg
sub
or
cmc
mov
insb
jge
gs
or
scas
mov
imul
dec
sub
inc
dec
cmpb
pop
dec
pop
xor
outsl
cld
pop
mov
mov
fildl
xlat
xchg
in
je
mov
mov
testl
adc
jecxz
fdiv
pop
sbb
mov
push
addr16
lock
push
mov
mov
add
xor
mov
jnp
mov
lea
push
xchg
stos
fidivrs
ret
mov
aaa
jmp
jl
dec
stc
out
loop
sbb
dec
or
dec
pop
pop
push
or
aad
jle
imul
aad
lods
push
loopne
sbb
pushf
fsts
mov
push
push
xchg
fwait
inc
sysenter
xchg
xor
push
scas
cs
mov
shrl
lcall
inc
call
inc
aam
xchg
mov
insl
cmc
loop
jae
push
add
mov
xchg
dec
sub
mov
insb
xchg
or
stos
mov
jle
jbe
shr
imul
ret
nop
hlt
lahf
addl
xchg
in
cmpsb
mov
cmp
loop
cmp
stc
mov
ficompl
push
adc
mov
daa
js
jbe
cs
movsb
ja
sub
test
cmp
mov
xchg
imul
cltd
inc
jne
add
popa
loopne
fadd
loop
jnp
mov
loope
jnp
sub
sbb
sbbb
xor
push
in
lret
stc
add
xlat
jge
mov
and
sub
mov
bound
lahf
inc
xchg
ss
enter
sti
sbb
jb
xchg
xchg
mov
push
lods
xlat
cmp
repz
mov
fistpl
bound
cwtl
jno
in
jecxz
arpl
sub
and
mov
add
sahf
pushf
shr
add
mov
mov
mov
fbstp
adc
lret
cmp
lret
scas
and
in
xchg
xchg
jp
jae
push
je
cmp
enter
test
xchg
xlat
jo
inc
or
ja
iret
adc
sub
int
sbb
mov
pop
push
into
mov
add
ret
xchg
pop
lods
sti
cmpsb
add
lock
ret
jae
xchg
cld
sbb
je
adc
jl
mov
pop
and
push
dec
mov
sbb
and
push
ljmp
sbb
out
popf
add
nop
push
xchg
stos
les
lret
and
jno
inc
in
and
mov
popa
adc
or
or
lods
iret
xchg
push
test
imul
pop
or
sbb
adc
pusha
mov
sbb
mov
push
cmp
or
xchg
push
pop
insl
and
popf
aam
dec
lock
imul
mov
cmc
arpl
fs
and
adc
and
xchg
aam
and
sbb
or
cmp
mov
push
and
xchg
add
bound
xor
imul
shl
aam
xchg
jmp
arpl
cmpsl
mov
sarb
adc
mov
js
inc
jo
in
notl
xor
sbb
test
out
inc
data16
inc
lret
fs
loopne
sahf
mov
xor
cmp
xor
test
loop
or
add
bts
or
dec
outsl
cmp
mov
inc
add
movsb
add
add
adc
daa
cwtl
and
stos
adc
fmulp
pop
stos
ret
in
mov
mov
imul
int3
aaa
mov
out
jmp
ss
cld
lret
mov
dec
mov
mov
test
jnp
inc
jo
or
and
insl
mov
into
jb
std
lret
xchg
dec
pop
xchg
data16
lahf
and
pushf
insb
iret
popf
out
push
sarl
out
clc
adc
dec
xor
mov
pop
xchg
push
lcall
mov
dec
xor
or
enter
cmpsb
pop
mov
lret
jae
call
lret
imul
sub
lods
fnstenv
add
pop
jb
ret
mov
or
push
xchg
dec
xor
sbb
push
cmp
push
out
xor
jg
out
mov
push
fisubrl
mov
aam
das
fstpt
push
push
pop
xor
pop
and
imul
mov
dec
aas
stos
int3
aaa
sub
sub
test
sbb
xchg
mov
fisubl
add
sbb
jnp
push
mov
mov
das
jbe
sbb
pop
inc
rorb
pop
fsubrs
pop
dec
jnp
out
std
sbb
lcall
das
mov
in
xchg
testb
lods
add
imul
movsl
es
xchg
pusha
fdivrs
call
ljmp
lods
cld
int
fmuls
jl
xor
mov
lods
jl
dec
xchg
ds
push
fwait
xor
imulb
loope
mov
add
std
xor
push
jg
lds
in
cmp
sbb
jl
lcall
push
xchg
mov
cmpl
ret
testb
filds
imul
and
jns
js
movsl
outsb
inc
mov
mov
inc
push
clc
es
popf
pop
push
or
lds
aad
push
mov
or
push
mov
out
aam
ds
mov
or
mov
and
cltd
push
fwait
les
std
ds
mov
jbe
subb
cld
jb
add
pop
cmp
enter
fistpl
and
sub
and
out
imul
fsubr
cmp
dec
daa
xchg
sub
stos
aas
mov
cwtl
mov
jle
jno
in
cmc
pop
pop
dec
hlt
mov
insl
push
mov
sub
fnstcw
and
mov
mov
push
dec
add
mov
xor
sbb
adc
lahf
sbb
push
mov
push
xchg
or
lret
jae
mov
adc
xchg
out
pop
inc
iret
cmp
out
scas
jmp
push
push
inc
addr16
and
lock
mov
aas
jb
ja
push
pop
adc
and
push
enter
fnstenv
pop
adcb
sbb
pop
mov
push
repnz
sub
pop
enter
stc
or
lahf
inc
frstor
pop
and
mov
int
insl
lahf
push
inc
cmp
lret
inc
mov
pop
xor
cltd
xchg
cmp
scas
dec
push
xchg
xchg
jp
pop
shlb
cwtl
and
jb
xchg
ret
adc
or
inc
imul
test
mov
aaa
call
or
xchg
mov
loopne
adc
jne
mov
mov
pop
out
aaa
xor
cmp
data16
fmuls
xor
push
dec
pop
pop
inc
repz
dec
dec
xchg
xlat
ret
lods
jmp
loope
and
jnp
xor
dec
mov
mov
push
mov
in
rorb
push
jns
sbb
sahf
lahf
mov
inc
mov
mov
pop
xor
imul
ljmp
mov
sub
fnsave
inc
cld
xor
or
push
sub
inc
movsl
insb
stos
or
mov
jo
xor
sbb
hlt
fsubr
mov
jae
dec
jne
mov
cmpsl
cli
mov
addr16
movsl
push
jae
xchg
ds
cmp
xchg
lahf
jns
xchg
mov
das
xchg
stos
pop
jg
outsb
jl
jecxz
scas
aam
movsb
xchg
xor
mov
inc
data16
or
sbb
mov
pop
fsts
aad
addl
out
je
movsl
movsl
and
xchg
push
sti
dec
fnstcw
adc
cmp
pop
cmp
mov
mov
daa
push
sub
jns
negl
add
cmp
call
xchg
inc
imul
in
pop
cli
aas
pop
stos
and
repz
add
lds
cmp
xchg
pop
mov
daa
popa
int
push
mov
lods
lret
push
lds
insl
lret
idivl
data16
test
ret
inc
out
and
cmp
insb
es
push
inc
xor
pop
imul
int
cmp
cmp
adc
push
sub
js
jnp
in
cmc
stc
shll
add
out
bswap
divl
std
dec
xchg
outsb
pushf
out
fadd
inc
cld
pushf
das
or
test
fwait
mov
cmp
mov
mov
mov
outsb
add
xlat
pop
lahf
subl
incb
and
inc
hlt
sbb
popa
mov
cmpsl
and
mov
scas
mov
mov
cwtl
jo
dec
into
aad
mov
repnz
adc
xlat
in
sub
mov
stos
nop
or
popf
dec
dec
imul
fcompl
sbb
xchg
aam
cmc
out
filds
xor
jecxz
and
fistpll
sti
mov
aaa
adc
mov
loope
dec
adc
cmp
adc
xor
dec
adc
push
jo
jl
mov
xor
cmpb
mov
lret
je
xchg
or
add
jo
mov
and
lods
scas
adc
imul
push
add
push
arpl
cmp
mov
jp
ja
icebp
mov
xchg
mov
adc
repnz
ds
push
sahf
lahf
jg
push
dec
jb
fldl
mov
gs
cmp
call
aad
adc
push
ja
cmc
dec
repnz
in
push
cwtl
fcomip
dec
lret
imul
stos
push
mov
pop
call
mul
lock
cli
mov
mov
xor
outsb
adc
dec
mov
cld
inc
xor
fnstenv
mov
and
pop
pop
jmp
sbb
mov
xor
ss
out
pop
shrl
sub
fnstcw
subl
sbb
in
cmpsb
mov
push
cli
mov
jb
sbb
outsb
je
jo
mov
mov
add
lret
fldt
add
jnp
pop
loopne
imull
fistpll
push
sub
jno
mov
stos
out
push
xchg
jae
mov
xchg
dec
dec
aaa
in
mov
pop
divl
push
aam
mov
mov
lret
jno
int3
cld
ljmp
push
mov
sub
adc
xor
or
push
push
xchg
adc
jno
dec
pop
xor
cwtl
stc
shl
ret
sub
pop
dec
dec
xchg
ljmp
insb
sub
addb
inc
popf
insb
dec
cmpsl
and
cmp
inc
shlb
std
jg
adcb
fidivs
lret
push
xor
push
fdivp
nop
shrl
cwtl
sub
pop
cmpsl
sub
pop
addr16
rcll
and
lcall
push
jle
cmpsb
inc
adc
sub
stc
ljmp
sbb
test
jmp
std
push
dec
pop
int
jmp
loopne
out
out
and
inc
rolb
sahf
iret
xchg
leave
push
in
cli
mov
inc
add
pop
sub
adc
push
jl
xor
adc
shl
xor
push
sarl
cmp
adc
rcll
xchg
rclb
pop
into
ja,pt
mov
or
daa
and
ja
das
cld
push
push
pop
pop
imul
push
mov
das
cwtl
ds
test
jle
fisttps
es
mov
and
sub
add
subb
into
xchg
pop
jecxz
mov
adc
mov
mov
xor
or
loopne
mov
xchg
ja
fcmove
and
jle
adcl
add
and
ret
jl
xchg
add
repnz
sub
call
cmp
or
xor
lret
sbb
mov
test
shrb
imul
mov
add
out
jns
sub
test
sub
inc
test
jb
lods
and
and
push
sub
repnz
int3
aam
add
add
or
out
adc
cld
xchg
das
movsb
hlt
xlat
xchg
jle
or
inc
push
jb
imul
enter
lock
xorb
incl
mov
mov
jnp
mov
ja
jle
or
mov
and
sbb
jns
idivl
std
iret
fisttpl
dec
loop
aaa
push
cmc
mov
pop
sub
push
hlt
push
lock
adc
cmpsl
aam
repnz
push
arpl
push
lret
ret
cmpsb
xor
out
adc
and
incl
iret
pop
cmp
mov
cs
insl
into
loop
inc
or
cmp
jne
int
fwait
fs
scas
in
mov
js
les
dec
sahf
jne
jo
dec
std
dec
rorl
hlt
or
sub
dec
or
je
pop
adc
pop
adc
adc
pop
or
push
stos
mov
inc
mov
scas
mov
mov
inc
enter
repz
xor
mov
fisubl
push
je
jge
push
ja
pop
jnp
dec
jae
call
push
and
addr16
pushl
out
pop
repnz
pop
and
insl
lret
popf
add
out
mov
lock
lahf
and
cwtl
add
je
and
push
test
mov
cli
add
stc
mov
sar
inc
mov
jmp
or
mov
popf
int
loope
and
mov
xchg
pop
jg
out
adc
ja
mov
imul
cmc
sbb
xchg
rorl
push
je
inc
cltd
icebp
in
inc
lea
sbb
call
mov
mov
adc
lock
imul
clc
arpl
pusha
jl
rorb
pop
xor
add
fninit
fnstsw
shll
inc
pop
mov
xchg
push
xchg
sub
cli
and
out
sahf
std
sahf
fdivrp
jle
add
and
cmp
cwtl
lret
jae
pushf
jg
mov
fs
fs
lahf
je
fwait
push
addr16
roll
push
mov
jbe
aaa
aas
mov
add
repz
xor
cmc
fs
jmp
push
add
pop
lea
fucomi
push
sar
fldenv
jne
pop
xor
add
dec
mov
xor
mov
fs
aam
hlt
mov
pop
push
adc
adc
in
shlb
fwait
or
and
mov
rclb
adc
les
cmp
jbe
insb
adc
mov
fstpl
lock
push
in
or
jnp
jmp
mov
add
test
dec
add
jle
mov
fistpll
mov
stos
ljmp
ret
push
push
rclb
and
hlt
cmpb
push
mov
sti
push
fisubrl
jno
fdivl
hlt
lret
mov
cmp
mov
ja
dec
inc
clc
push
mov
movsb
inc
push
aas
inc
jmp
push
inc
mov
add
in
repnz
cmp
jb
inc
fimull
jbe
pop
lds
mov
sub
jae
lret
sarl
sbb
jmp
push
add
cld
inc
sbb
jb
pop
jo
cmc
jns
push
loopne
push
and
icebp
mov
xor
rclb
outsl
lret
hlt
dec
stc
jle
imul
sub
inc
fs
sub
das
call
push
jp
stos
and
sbb
lret
mov
fsubl
stos
and
in
xchg
gs
nop
or
aad
aaa
popa
inc
push
out
cmp
pop
and
push
jle
push
out
pushf
dec
ds
jg
sbb
popf
test
pusha
call
clc
fisubrs
fisubrl
inc
cmp
dec
sub
push
movl
into
into
sbbl
fildl
xor
xchg
ret
add
adc
mov
mov
mov
bound
add
xor
movsb
pop
insl
int3
mov
lcall
jbe
adc
adc
push
inc
fsubs
lret
pop
rcr
outsl
out
xor
xor
popa
sti
ret
sbb
mov
insb
sbb
js
mov
into
pop
dec
ret
mov
dec
add
inc
lds
pop
xlat
cwtl
scas
icebp
mov
mov
pop
inc
scas
rcr
mov
leave
jg
fcompl
mulb
rcll
add
inc
imul
jne
sbb
cmpsb
in
pop
popa
ja
dec
or
cwtl
xor
xor
pop
sar
dec
cwtl
mov
inc
xchg
cmpb
mov
add
mov
cmp
cmpsl
pop
pop
andb
imul
inc
sub
xchg
insl
jp
cmpsl
and
push
xlat
loope
jge
lahf
mov
dec
sub
das
xchg
jmp
cmpsb
cmp
popa
mov
jns
add
mov
fwait
pusha
mov
push
mov
dec
cmp
xchg
loop
mov
test
push
lods
xchg
mov
push
or
ret
icebp
das
adc
push
inc
mov
dec
movb
push
enter
cld
jo
fmull
sti
movsb
je
ds
cltd
xor
dec
loopne
sbbb
xlat
test
cs
mov
in
mov
mov
fisubs
loopne
movsb
and
scas
push
lahf
sbb
ja
xlat
and
shl
jnp
repz
cs
aad
push
in
xchg
and
mov
mov
das
add
dec
arpl
jle
into
jo
cld
imul
clc
sbb
xor
dec
rclb
adc
pop
stos
pop
enter
insb
ret
iret
pop
cmp
mov
dec
mov
fcomps
xchg
dec
mov
dec
js
orb
xchg
mov
in
aaa
push
test
or
pop
push
mov
sbb
cmp
xor
lock
in
fcmove
sbb
insl
push
jnp
mov
addr16
in
loope
andl
sarl
shrb
popf
jl
stc
sub
test
mov
rol
das
jae
cmp
and
or
sbbl
jo
pusha
icebp
and
test
jnp
shr
inc
mov
sbb
push
rorl
push
int
xchg
mov
adc
test
add
xchg
sbbb
mov
sub
pop
adc
sub
push
xlat
mov
lcall
loopne
lods
inc
xchg
cmp
mov
fsubrp
clc
into
adc
jp
jl
or
mov
ds
lods
dec
push
mov
push
jbe
jns
or
mov
jmp
sbb
dec
outsl
mov
xchg
ja
push
cmp
jnp
sbb
xor
mov
and
inc
iret
mov
gs
push
add
test
pop
sbbb
icebp
push
gs
mov
dec
test
jns
aaa
jmp
pushf
add
outsb
sti
add
iret
repz
pop
pop
loope
inc
dec
ret
mov
dec
dec
lods
pop
adc
or
rorl
xchg
leave
and
ljmp
add
into
xor
cld
mov
imulb
stc
xchg
cmp
mov
jne
adc
xchg
xchg
mov
pop
jmp
mov
xor
and
push
cli
push
fisubl
fnstcw
or
xor
adc
gs
push
mov
xchg
lret
xor
cmpsb
enter
test
mov
std
test
orb
mov
sub
pop
fs
fs
scas
push
enter
cli
jmp
stos
cmp
imul
dec
add
xor
in
mov
push
repz
es
sub
loopne
dec
in
push
cmp
mov
pop
outsb
push
sbb
mov
enter
pop
jb
stc
scas
outsl
inc
mov
push
movsl
fcompl
xchg
daa
xlat
or
rcrb
adc
jb
insb
aad
xchg
aaa
xlat
jl
lahf
sahf
dec
movsb
mov
test
mov
dec
push
xchg
adc
ret
aas
lea
les
in
mov
cmpsl
ret
jge
xlat
adc
add
xor
cmp
js
mov
sbb
adc
xchg
repnz
push
or
xchg
jp
in
insb
hlt
xorl
xchg
xor
or
stos
insb
and
jo
imul
jbe
scas
mov
lods
dec
push
dec
xchg
lods
inc
xchg
divb
adc
stos
andb
daa
lock
fs
cmc
inc
mov
aas
ds
add
xchg
mov
int3
cmp
rcrl
xlat
test
in
inc
in
pop
add
pop
fsubr
lods
faddl
addb
xor
dec
jl
scas
cmp
or
add
lret
int3
in
and
pop
sub
cld
ds
xor
cmp
xchg
sbb
xlat
xor
add
add
jmp
adc
or
fcmovb
out
cmpsl
mov
or
fimull
js
xor
mov
cmp
repnz
out
into
pop
sub
jbe
test
push
jmp
jmp
mov
pop
add
pop
or
out
gs
jb
cmpsb
test
jle
aas
fcmovb
mull
dec
cli
push
add
push
jle
lret
pushf
xchg
test
nop
push
cmpsl
and
rcll
ljmp
mov
jmp
hlt
inc
bound
mov
jge
lret
xorl
iret
popl
add
je
repz
xchg
mov
shrb
sub
aad
jmp
ljmp
dec
aas
lds
aad
out
cmpsl
ficompl
fdivrl
xchg
fistps
bound
in
mov
into
pop
cmc
dec
inc
sti
cmp
movsl
pop
lods
inc
sbb
xor
addr16
jbe
ret
inc
sbb
test
mov
rcll
mov
mov
xchg
clc
and
and
add
xor
xchg
mov
jns
inc
fbstp
and
shll
inc
das
inc
bound
push
mov
loop
int
adc
xor
sub
cld
outsb
lock
dec
xchg
and
hlt
push
push
jno
data16
cli
mov
dec
and
mov
test
xchg
movsb
inc
cli
mov
push
jnp
xchg
inc
sbb
lahf
inc
mov
and
mov
lock
std
cmp
sar
inc
cmp
rcrb
outsl
mov
add
int3
jmp
dec
out
mov
mov
addb
xchg
clc
pop
and
lea
call
mov
test
or
and
pop
out
jns
loop
pushw
xlat
mov
mov
scas
popf
mov
ljmp
in
fiaddl
jbe
adc
dec
addl
jns
push
ret
in
or
mov
scas
dec
bound
popl
ror
add
enter
xor
les
lods
and
mov
cmp
icebp
neg
jg
insb
sub
ficoms
lahf
int
mov
sub
in
fwait
mov
in
mov
push
dec
popa
or
lea
sbb
mov
std
test
mov
clc
jo
ret
rolb
jne
and
sbb
push
push
cmc
movsl
cmp
fidivrl
xor
mov
mov
sub
jnp
inc
mov
movsb
mov
xchg
and
push
aaa
xor
lock
cmp
in
sti
jmp
sub
pop
push
jmp
outsb
into
mov
pusha
adc
int3
lahf
ja
stos
jnp
cmp
jp
inc
and
mov
scas
inc
mov
xlat
shr
inc
xchg
mov
bound
sub
push
pusha
or
adc
cs
mov
jb
insl
aas
and
pop
pop
sahf
adc
xchg
insb
test
mul
push
shl
xor
imul
inc
push
inc
jmp
in
sbbl
mov
loope
inc
sarb
pop
gs
cmp
xchg
xchg
in
push
push
xchg
rcr
out
mov
dec
fiaddl
ficompl
lods
push
das
mov
jmp
movsb
jl
lret
xor
mov
xlat
fldt
push
pop
inc
daa
out
sbb
inc
in
subb
out
into
jae
addr16
stos
or
nop
clc
ret
lahf
stos
or
inc
adc
sub
inc
ret
cmp
je
xlat
sbb
sub
in
jnp
inc
pusha
cmp
lods
sbb
pop
inc
stos
xchg
mov
scas
mov
push
inc
or
or
mov
lahf
pusha
sbb
add
fcompl
lods
mov
rdpmc
lret
push
cmpsl
lods
stos
sarl
xchg
lea
loop
push
cmp
pcmpeqw
mov
xchg
fs
jle
add
in
mov
fmul
mov
mov
and
mov
insb
inc
mov
pop
inc
lcall
sub
push
and
or
aas
push
pushw
jl
jns
pop
ret
mov
cmpsb
popf
inc
xor
movsb
jl
cltd
mov
lcall
add
sti
mov
mov
mov
ds
js
mov
and
rcr
add
shrb
cs
jecxz
stos
sbb
xor
jmp
xor
jl
mov
out
mov
into
cmp
std
or
add
ds
fildl
adc
ret
inc
inc
xchg
test
rolb
jp
add
add
push
imul
mov
push
pop
sbb
pop
cmpsl
mov
cmpb
int
in
loopne
jge
dec
add
xor
sbb
mov
loop
dec
stc
adc
and
inc
cmp
loop
subl
fwait
or
add
aam
or
mov
adc
mov
int3
jg
shll
cld
cmp
mov
fs
in
push
pop
out
pop
fcomi
aaa
sbb
sbb
iret
call
inc
xor
jo
loope
dec
pushf
adc
dec
pminsw
push
sbb
push
pop
mov
out
repz
loop
push
mov
pop
andb
fcoms
rolb
push
mov
lock
inc
add
in
clc
pop
lods
insb
cwtl
add
lea
stos
pusha
sbb
cmpb
mov
mov
jb
repz
stos
outsl
cmp
xor
lock
test
popa
inc
sti
pushf
mov
in
mov
popf
and
jge
pop
and
mov
lods
cmpsl
scas
addr16
sbb
jle
push
mov
jb
inc
ds
nop
movlps
sbb
sahf
mov
hlt
in
ljmp
bound
sbb
push
cmp
out
testl
cmp
rolb
push
adc
cmc
jg
insb
sti
jmp
pop
js
pop
repnz
gs
push
pop
xor
xchg
sbb
leave
mov
rcl
push
ss
loope
xchg
inc
out
sbb
and
push
mov
mov
popf
stos
inc
mov
add
out
push
inc
inc
and
enter
call
or
loopne
and
xorb
scas
pop
adc
mov
jmp
adc
stc
lret
push
je
addb
xchg
into
sub
mov
mov
jmp
push
push
stos
stos
rcl
jecxz
and
push
fsubp
cmp
xchg
scas
pop
outsl
mov
mov
sarl
push
adc
bound
nop
xchg
ja
lods
cmpsb
fisubs
adc
inc
test
mov
addr16
les
into
and
data16
lcall
adc
push
add
fsts
mov
hlt
adc
test
inc
mov
or
xchg
jne
xor
or
stos
jnp
add
mov
dec
xchg
push
std
ja
aaa
inc
xor
int
in
inc
daa
mov
insw
mov
adc
repz
fcoml
imul
dec
mov
mov
adc
pop
cmpsb
popl
insb
and
add
test
bound
lea
adc
xchg
rorb
pop
lods
or
fldt
sub
ret
clc
arpl
sbb
pop
mov
jmp
dec
mov
imul
push
fidivrs
sbb
push
sbb
inc
in
test
jmp
lcall
out
sub
lods
mov
mov
mov
push
lahf
pmaddwd
add
arpl
enter
aaa
movsb
outsb
xor
add
ljmp
mov
cwtl
stos
enter
ljmp
outsl
popf
adc
call
test
inc
ret
filds
rol
cmp
rcr
push
addl
mov
xor
testl
fwait
cmpsl
sub
fld
loopne
and
mov
stc
mov
das
leave
mov
pop
and
push
mov
mov
test
les
cmpsl
inc
sbb
sbb
fcompl
and
sbb
loopne
adc
adc
fidivrl
aad
mov
push
sti
or
push
jo
sub
xchg
push
aam
cmc
cmp
jo
mov
cmpl
gs
nop
jp
stos
pop
push
cmp
mov
sub
ja
or
dec
push
pop
in
int
aas
and
cmp
bound
push
mov
sarb
add
push
jg
dec
sub
stos
addr16
bound
idivb
mov
stc
aas
shufps
inc
sub
ret
addr16
xchg
ficoms
sbb
pop
xchg
aas
cmpsl
cmp
jg
or
and
or
repz
mov
mov
lods
fsubrs
and
mov
sahf
push
fstps
pushl
cs
and
fld
mov
mul
mov
test
xchg
inc
iret
inc
xchg
xlat
mov
mov
adc
ds
cmp
aam
decl
jns
loop
inc
xchg
jecxz
mov
pusha
mov
scas
rcr
fsts
ds
push
or
jl
mov
sbb
push
mov
test
pusha
and
jg
dec
pop
sbbl
mov
push
jbe
ljmp
xchg
jg
xchg
call
push
stos
push
fnsave
jbe
cltd
sahf
dec
lock
mov
loop
jnp
pushf
sar
push
sub
jp
add
cltd
mov
sbb
pop
mov
repnz
dec
add
clc
inc
xor
in
bound
xchg
cmp
pop
or
fcmovu
or
inc
xchg
pop
test
jmp
scas
or
fidivrs
sbb
push
push
add
and
xchg
lock
mov
cmp
ret
fistps
cmpsl
lcall
xlat
cmp
daa
mov
dec
popa
pop
push
fs
jnp
and
push
stc
sbb
push
fwait
mov
bound
inc
or
mov
xchg
dec
and
inc
jmp
mov
xor
inc
jbe
test
in
pusha
mov
jne
jo
loopne
lahf
xchg
sub
cld
or
xchg
xor
pushf
fisubl
push
pushl
adc
loop
loop
fidivrs
jge
rcl
lahf
pop
loopne
mov
add
jns
pop
icebp
ret
repz
mov
rcl
rolb
xor
or
rorl
imul
in
testb
dec
pusha
inc
mov
leave
sahf
xchg
shll
stos
fisubs
fwait
xchg
push
sub
cld
push
out
mov
push
sbb
iret
iret
pushf
adcl
popf
adc
lds
sub
nop
jg
mov
or
cmc
movsl
inc
jle
aaa
mov
cld
outsl
pop
insl
fisttpll
xlat
pop
ljmp
xchg
ret
push
pop
mov
shl
movl
add
mov
fbld
in
rcrl
lods
push
xchg
inc
sub
sbb
mov
or
add
out
sbb
enter
sub
sbb
push
add
mov
or
jl
jne
cmp
orb
cmp
arpl
outsb
jnp
xchg
cmpsb
or
ja
jb
xchg
negb
cmpsl
cmp
xor
inc
addb
dec
xchg
and
out
or
xor
xlat
sub
insb
dec
loope
out
lcall
and
or
out
inc
sub
pop
icebp
pop
push
push
mov
out
sahf
xor
push
or
adc
rorb
loope
cmp
jno
add
adc
xor
pop
shll
adc
push
sbb
test
pop
test
ror
andl
add
inc
push
fwait
pop
jl
sub
cwtl
xchg
std
inc
adc
fsts
xchg
loop
sub
out
cwtl
je
push
cmp
dec
shrl
mov
out
stc
mov
loope
and
add
or
sarb
jg
je
out
stos
call
cmp
xchg
dec
cmp
sbb
jnp
dec
sub
lret
mov
rorb
loopne
jns
loopne
lock
mov
inc
rclb
lods
into
test
dec
flds
addr16
stc
ss
testl
in
lds
fs
jo
fisttpll
call
and
jbe
or
push
add
pop
lret
sub
sbb
inc
mov
daa
int3
cmpsb
shr
jecxz
insb
test
test
mov
mov
daa
fcompl
sub
das
dec
add
xor
ss
sbb
enter
hlt
adc
fsub
push
push
out
mov
fildl
mov
loopne
fists
xchg
inc
inc
jmp
adc
pop
lcall
xchg
jmp
pop
and
daa
mov
jmp
dec
fs
popf
and
icebp
sbb
inc
fsts
dec
cltd
push
mov
inc
fidivl
hlt
lcall
add
xlat
stos
arpl
push
adc
mov
outsb
cmpsl
fcomip
pop
leave
mov
pop
push
fimull
faddl
addl
push
inc
pop
out
jne
ret
mov
fwait
sub
insl
in
mov
jg
inc
out
pop
call
dec
or
outsb
ret
mov
fsqrt
repz
std
xorb
xlat
and
mov
lret
xlat
setbe
aad
testb
loope
adc
dec
lret
add
add
dec
push
cmpsb
add
subl
cmc
rcrb
pop
scas
sub
gs
mov
ss
dec
and
lahf
mov
push
push
mov
push
sbb
push
test
jg
mov
push
sbb
sarl
lcall
ss
xor
xor
pop
in
lahf
and
jmp
addr16
sub
rclb
sbb
pop
push
jne
ja
xor
mov
xchg
cmp
lea
jl
fmull
aaa
lcall
mov
sbb
sahf
xchg
mov
dec
xchg
fsubrs
push
or
pop
push
gs
cld
inc
insb
jae
rcl
mov
or
aad
in
pop
lods
xchg
cmp
or
insb
ret
inc
in
aam
pop
adc
sahf
push
sbbl
nop
mov
mov
insl
imul
sarb
mov
insl
inc
cli
sub
rorl
cld
push
nop
xorb
jne
xor
mov
jns
inc
ret
mov
imul
xor
call
imul
es
mov
or
gs
and
mov
or
xchg
iret
or
sbb
pop
mov
pop
shl
xor
daa
mov
cli
fmuls
and
mov
std
stos
mov
dec
cmpsl
out
pop
in
psubw
sbb
jmp
mov
push
add
pop
push
hlt
xor
pop
iret
lea
xor
dec
insb
jecxz
xchg
popf
outsl
in
dec
and
sbb
cmp
jle
rorl
adc
jns
jb
and
mov
mov
pop
es
call
xchg
int3
movsb
mov
repnz
and
push
jne
arpl
mov
inc
cmp
mov
loop
push
int3
sub
pop
stos
mov
jno
scas
inc
int3
xlat
pop
das
je
adc
pop
popa
div
xor
rcrb
dec
repnz
pop
nop
mov
pop
out
out
bound
aam
fdivr
xchg
shll
clc
sbb
test
or
mov
or
cmp
gs
push
or
lret
bound
adc
insb
sbb
mov
inc
add
mov
das
push
repnz
pop
jle
scas
xor
push
in
test
ret
dec
push
cmc
adc
sub
xchg
stc
out
or
je
sub
push
push
or
lea
in
jno
movsb
movb
mov
xor
cli
imul
call
mov
rol
fsts
push
xchg
movsl
cmc
mov
mov
lret
scas
in
orl
xchg
xor
imul
cmp
icebp
jno
sub
pop
repnz
out
inc
push
icebp
hlt
xchg
fwait
imul
mov
pop
scas
fiaddl
loope
sub
stos
out
pop
into
lods
leave
mov
incb
xchg
sahf
aam
push
insl
addr16
nop
lahf
adc
enter
xor
ds
int
in
aas
rorl
subl
xorl
mov
inc
mov
dec
sbb
shrb
adc
push
sar
sub
fdivs
cld
fs
mov
push
add
jne
inc
pop
xchg
xchg
push
cmp
jns
jecxz
mov
jae
and
and
dec
sub
adc
dec
adc
lcall
mov
cltd
fcomip
test
xrelease
in
mov
adc
cld
jle
and
je
add
fdivrl
cmp
and
cmp
pusha
fsubl
push
aas
jno
js
dec
mov
icebp
stc
ja
daa
jo
adc
mov
jp
xorb
push
pop
ss
out
inc
cwtl
pop
mov
lods
inc
dec
outsb
insb
cmp
ds
xchg
xchg
or
fsubrl
inc
fdiv
and
cld
cmp
gs
ret
in
ja
fldcw
add
iret
ss
and
imul
in
inc
mov
xor
pop
push
dec
sub
cmp
sub
mov
nop
in
dec
and
fwait
or
pushf
pop
rcrl
pminsw
cltd
rolb
push
in
inc
aad
cld
adc
xchg
insb
lock
cs
pushf
in
sarb
leave
xor
mov
pop
sbb
adc
sahf
lret
ljmp
dec
shll
add
xlat
rcll
pop
adc
mov
mov
enter
mov
fldcw
call
enter
aas
outsb
mov
pop
nop
and
mov
aad
xorb
adc
adc
cwtl
mov
cwtl
dec
int
mov
lret
fistpll
imulb
adc
sbb
and
loop
hlt
scas
pop
cmp
dec
dec
mov
sarb
dec
pop
and
xchg
mov
scas
adc
jnp
ss
fs
mov
ds
dec
mov
popa
lds
jo,pn
rcr
repz
outsb
cmp
xor
mov
lock
cwtl
or
lcall
inc
mov
mov
sbb
fists
out
xchg
sbb
sub
cli
add
cmp
mov
push
lods
sub
cmp
xor
jmp
andb
jno
cmpsl
imul
xchg
hlt
sarb
jns
sub
ficompl
pop
imul
shlb
push
js
push
loop
mov
sub
inc
xorl
rol
shrb
push
repz
sti
mov
fldt
push
aad
inc
mov
sbb
xchg
lods
call
loopne
out
test
in
mov
clc
inc
ss
mov
push
mov
push
cmp
jo
xchg
std
movsl
jg
dec
sub
jp
inc
adc
adc
mov
push
enter
pop
sub
out
rcrl
mov
int
adc
add
out
adc
lock
sub
pop
ret
fildl
push
sub
add
shr
or
push
sub
dec
dec
inc
xlat
shl
mov
mov
nop
inc
mov
mov
pop
insb
mov
push
mov
les
int
or
cmpsb
sub
ds
faddl
mov
test
push
mov
or
mov
dec
loop
mov
dec
or
aas
ret
mov
inc
jbe
aas
xor
pop
call
sbb
int
movsl
xchg
or
dec
sub
add
das
fnsave
aam
mov
js
leave
popf
sti
jo
das
push
lcall
push
xchg
insb
leave
icebp
inc
jns,pn
mov
dec
mov
sbb
pop
mov
sub
pusha
add
jne
leave
mov
mov
adc
dec
testl
imul
ror
fadds
in
or
lcall
add
arpl
adc
sub
mov
jnp
out
dec
mov
mov
adc
jg
in
xor
lods
inc
icebp
xchg
sub
iret
sub
es
dec
mov
int3
in
or
pusha
stos
lds
lods
mov
sub
or
loopne
fimull
sti
call
mov
test
mov
adc
xor
cli
inc
out
jbe
xchg
insb
sbb
push
jecxz
flds
xchg
mov
xor
push
cwtl
fmul
mov
push
dec
je
popf
jmp
sti
sarb
mov
xor
imul
into
lret
fimuls
adc
sbb
mov
dec
lea
inc
lret
pop
mov
dec
sub
xchg
fcoml
dec
mov
orb
xor
cltd
mov
jecxz
pop
inc
pop
pop
pop
adc
xchg
negl
mov
seta
dec
std
push
mov
add
or
lret
jo
mov
int3
int
dec
outsb
mov
push
mov
push
mov
inc
std
jp
or
jns
pop
aas
dec
mov
test
add
and
pop
sub
xor
pusha
out
ja
dec
das
out
pop
call
sbb
loope
orl
outsb
mov
stos
xchg
sti
mov
mov
js
sub
gs
aad
ret
add
lret
test
dec
pop
daa
mov
rol
add
pop
lods
and
cmp
pop
out
aam
stc
cmp
mov
adc
ja
aaa
scas
xchg
xor
sub
jnp
nop
mov
lcall
inc
subb
test
jb
cmp
sahf
movsb
loope
leave
sub
idivb
shll
enter
pop
sub
xchg
pop
dec
or
fists
fwait
push
dec
cld
xor
lret
pop
jecxz
leave
and
jns
in
pop
fwait
mov
push
aas
or
stos
lods
mov
les
inc
lods
int3
add
out
jmp
lcall
ret
punpckhbw
inc
scas
dec
ret
int
xchg
es
pop
push
jno
enter
mov
bound
aaa
jo
jecxz
mov
inc
movsl
push
inc
mov
js
and
aaa
xor
pop
fwait
push
lods
adc
out
lret
mov
inc
mov
inc
adc
xor
aas
call
jg
add
mov
je
xchg
mov
sub
das
inc
and
addb
mov
dec
xor
mov
cltd
jb
mov
je
in
inc
jo
pop
aaa
outsl
das
jg
mov
pop
xchg
iret
inc
js
adc
cmp
push
xchg
jecxz
inc
sub
cmp
ss
imul
mov
push
movsl
mov
dec
add
fimuls
fwait
loop
clc
mov
fcomi
psubsw
dec
lcall
pop
xchg
hlt
and
and
insl
xorb
andb
mov
xor
aaa
xor
aam
sub
sti
add
inc
mov
sarl
lret
cmp
jo
rcll
xor
sbb
fisubrs
dec
cmp
mov
aad
cmp
sahf
and
sbb
dec
mov
pop
add
sub
rcrl
add
and
fidivrs
add
ficompl
jmp
xchg
js
test
lds
loope
adc
test
in
addr16
lea
sub
loope
dec
mov
movsb
repnz
dec
mov
nop
cs
fdivrl
mov
les
loopne
shr
out
mov
js
ljmp
ja
imul
jge
mov
daa
sbb
and
imul
dec
insl
push
lcall
arpl
hlt
std
out
cld
cmp
push
mov
fdivs
lods
and
inc
mov
jno
adc
imul
pop
dec
mov
dec
mov
mov
xchg
and
xor
mov
jge
popf
mov
and
rol
sub
sbb
lahf
xchg
testb
test
pushf
push
imul
inc
sub
or
enter
xor
add
repz
fs
inc
xchg
mov
into
push
rcrb
cli
cld
ja
andb
add
adc
psubsb
xchg
pop
ds
fldl
sbb
cltd
xchg
gs
mov
jmp
adc
rorl
mov
jmp
ficoml
cmpsl
dec
sub
push
addr16
outsb
cli
add
mov
movsl
inc
in
inc
sbb
fcomip
jnp
xor
cmpsl
pop
lds
rcrl
addl
loope
cmpsl
aad
std
test
lods
aad
call
xchg
jo
gs
sbb
push
adcb
shll
sbb
lds
lret
add
gs
cmpsb
pushf
and
loop
pop
xchg
xor
sar
xor
fs
ret
popa
or
les
insb
movb
outsb
outsl
roll
test
gs
mov
dec
or
xor
lret
mov
pop
mov
icebp
pop
aaa
in
xor
sbb
ja
mov
es
sbb
lcall
leave
iret
cli
shll
out
jle
in
jnp
lods
cmp
sbb
rorb
clc
xlat
push
xor
mov
fistps
out
cltd
sbbl
dec
mov
call
test
and
insb
push
jle
imull
test
or
push
jne
sbb
cmp
out
inc
jle
pushf
dec
inc
lods
and
mov
dec
pop
inc
adc
inc
mov
fisttps
mov
mov
lds
add
push
push
jns
sbb
dec
in
out
and
or
inc
std
cwtl
ret
add
push
dec
xor
int
or
sub
sbb
faddp
test
es
push
push
and
inc
out
cmp
pop
lods
orb
cmp
in
cmpsb
cmp
popf
insl
push
imul
inc
dec
adc
or
dec
lods
and
outsb
mov
mov
pop
cs
std
andl
v4fmaddps
dec
pop
das
fucomip
sub
arpl
shr
jns
lock
ljmp
jg
movsb
sbb
xor
cmpsl
cmp
pop
push
loopne
mov
pushf
sub
xchg
leave
insb
out
and
insl
stos
jnp
test
test
hlt
mov
adc
inc
push
dec
push
and
or
js
xorl
jne
dec
dec
jb
into
insl
xchg
out
push
xchg
aad
popf
outsl
mov
daa
pop
dec
add
jb
xchg
sahf
ret
mov
pop
in
pop
cmp
aam
fstps
mov
pusha
test
push
pop
pushf
sbb
adc
mov
fsts
negb
dec
xchg
fnstcw
and
mov
sti
pop
lods
dec
push
dec
xor
mov
cmpsl
push
mov
add
xchg
and
inc
xor
adc
ficomps
mov
andb
jge
push
and
dec
xchg
push
fiadds
iret
adc
cld
pop
push
sub
mov
fsqrt
or
or
sub
lea
pushf
push
sbb
xor
loop
mov
jmp
push
aam
or
sbb
and
fnstcw
sbb
lock
sahf
xor
xchg
fists
in
clc
xchg
lods
test
inc
ja
cmp
mov
shrl
dec
xor
insl
jns
push
mov
mov
xor
adc
dec
mov
cmp
popf
cld
or
sub
in
add
movsl
dec
inc
sub
push
sub
add
into
sbb
mov
inc
jae
or
xchg
js
cld
cmp
cmp
xchg
scas
insb
test
jnp
jae
adc
push
ret
inc
je
in
sub
sahf
fists
dec
in
adc
adc
dec
out
out
add
xor
xchg
jns
jnp
mov
aad
dec
fincstp
pop
sahf
arpl
jle
loopne
mov
movsl
lcall
hlt
xor
dec
xor
arpl
in
add
xchg
call
rcll
adc
inc
dec
popf
fistl
divl
inc
das
aaa
addr16
mov
xlat
subb
dec
xor
adc
push
sub
dec
jp
imul
mov
rcrb
xchg
das
lret
ljmp
int3
scas
mov
and
cmc
adc
fdivrs
pop
enter
ja
xor
sub
inc
aaa
nop
pushf
cmpsb
mov
push
mov
jle
ss
mov
push
fdivs
je
lods
dec
in
fdivl
push
rorb
push
cltd
jl
push
or
fidivs
pusha
inc
pop
mov
iret
andl
cmpsl
mov
sbb
in
iret
cmp
push
dec
mov
fistps
jle
mov
fnstcw
cmp
aaa
xchg
push
ret
cld
jo
pop
mul
mov
dec
mov
enter
add
shlb
cmp
push
mov
cmp
mov
or
mov
stos
lahf
push
hlt
jg
ret
xor
push
lahf
js
test
xor
sbb
aas
mov
dec
xchg
pop
ficoml
jnp
stos
movl
mov
pop
cmp
shl
roll
iret
cmpl
xor
imul
mov
mov
xchg
ds
push
repnz
push
imull
mov
lds
test
push
sbb
xor
mov
jp
sbb
or
fadds
arpl
popf
jmp
insl
lea
stos
cmp
iret
xchg
and
jmp
fidivrs
pushl
sti
pop
cmp
mov
rcrl
mov
fsubrl
mov
pop
mov
jp
inc
flds
popa
pop
xchg
mov
inc
mov
mov
dec
xor
push
mov
push
lahf
lret
add
ss
dec
mov
xor
addr16
inc
loop
lods
in
xor
in
inc
loope
cwtl
add
and
dec
pop
pusha
sbb
xchg
outsl
mov
xor
lahf
ficomps
sbb
xor
or
aas
cmp
push
pop
jbe
mov
pop
xchg
bound
popa
out
add
dec
or
hlt
out
jp
popf
sub
setbe
scas
xchg
or
or
fcomip
rorb
mov
mov
add
popa
lcall
ss
xor
sti
dec
push
add
stos
xchg
push
stos
push
dec
or
jno
aam
cwtl
xchg
mov
inc
fsubrl
faddp
rolb
mov
dec
jp
add
mov
mov
sub
fwait
cmp
inc
xor
std
gs
inc
mov
jle
pop
xorl
sarl
or
push
or
dec
jnp
sbb
mull
inc
jl
xor
jge
outsb
cmpsb
ret
pop
mov
and
xchg
lret
lcall
std
nop
jno
jle
cmp
dec
sub
xchg
pop
sti
repnz
jb
rcr
sub
je
push
repnz
ret
mov
outsl
cmp
lds
and
pop
jb,pt
sbb
pop
fistpll
mov
inc
mov
mov
dec
addr16
mov
push
js
je
xor
mov
insb
ficoml
scas
in
inc
ds
adc
mov
das
std
mov
xchg
mov
into
jo
or
loope
daa
fsubrs
fstp
scas
clts
fs
in
pop
repz
fdiv
push
mov
sub
add
in
mov
test
mov
rcll
xor
mov
mov
jb
test
xchg
mov
xor
adc
jl
xchg
cli
rcl
jecxz
push
cltd
adc
sub
jle
jns
scas
jg
jmp
cmp
lea
cs
stc
arpl
pusha
ljmp
in
mov
lcall
and
loop
dec
mov
cld
shl
cld
cmpsl
mov
js
mov
pop
adc
cmp
mov
pop
stc
or
div
inc
mov
add
xor
mov
sbbl
iret
mov
stc
pop
out
leave
xchg
iret
repnz
add
mov
out
shrb
xlat
xchg
fwait
out
idiv
icebp
xor
pop
and
inc
sbb
push
test
ss
xor
lea
int
push
push
xchg
mulb
popf
rclb
inc
and
nop
cs
out
cmpsl
inc
test
lods
punpckldq
add
popf
addr16
jae
jo
into
or
or
fistpll
jg
adc
leave
or
sbb
loopne
das
adc
loopne
data16
xchg
flds
mov
int
sbb
pop
add
pop
jecxz
jmp
adc
jle
mov
test
shl
xchg
lahf
inc
rol
push
sub
aad
out
cmpsl
dec
inc
sti
cltd
or
fdivrl
mov
xor
call
addr16
scas
sub
mov
mov
jne
mov
stos
bound
sbb
ss
sbb
js
inc
test
pushf
ret
repnz
cmp
mov
cmp
stos
fmull
aam
push
dec
xchg
popa
addr16
xor
pop
xor
in
pop
outsl
cli
in
push
pop
sub
inc
and
push
adc
dec
dec
adc
push
push
pop
ret
psraw
push
xchg
xchg
aaa
sub
in
lea
jns
dec
mov
jns
pop
push
rorl
movsl
jl
dec
icebp
test
cltd
cmp
fcoml
dec
add
rclb
aas
ja
push
mov
push
mov
push
pop
lock
aam
dec
mov
testb
add
ret
pop
aam
icebp
lods
lock
pop
addr16
add
push
sti
into
push
lret
pop
mov
push
fwait
push
scas
add
mov
add
std
add
fwait
cli
mov
les
dec
fs
aas
cltd
mov
lds
dec
jae
imul
nop
mov
mov
sub
enter
cmp
gs
pop
dec
xorb
in
mov
loopne
stc
inc
in
jne,pn
fadd
mov
mov
fcoml
les
push
mov
adc
insb
int
lret
mov
dec
cmp
add
popf
call
inc
pop
loope
ss
ret
sti
or
in
cmp
and
mov
orb
or
popf
xor
in
dec
sar
sub
shrl
cmp
cmp
mov
loope
out
add
mov
dec
lret
jmp
fisttps
scas
dec
add
iret
xor
cmp
lret
dec
xor
enter
jne
mov
adc
rcll
sub
xchg
stos
mov
stc
mull
sub
ds
jns
and
sub
inc
out
into
ret
mov
dec
ss
adc
xor
add
dec
mov
rorl
add
dec
jnp
cmp
pop
mov
inc
cmp
ds
mov
out
cmp
je
dec
outsb
jbe
cmpb
sahf
int
idivl
lds
sbb
fsubrs
push
jmp
jns
jp
pushf
aad
gs
xchg
out
adc
cmp
cmp
mov
mov
pop
push
and
hlt
mov
pushl
insb
cmp
adc
ret
mov
pushl
and
mov
leave
dec
pop
xchg
fbstp
inc
in
mov
xchg
enter
cmp
imul
test
in
and
add
sub
jp
dec
or
or
pop
imull
xchg
pop
js
mov
arpl
dec
adc
call
cmc
mov
insb
int3
lret
or
pop
daa
sub
push
mov
lods
pop
jns
xchg
jp
test
pop
loop
out
mov
push
sbb
mov
pop
xchg
xchg
push
movsb
jecxz
test
pop
lcall
lcall
xor
dec
std
mov
notb
scas
dec
xor
jno
test
jg
adc
gs
jle
loope
dec
push
loop
jge
mov
inc
and
sub
push
xor
fcomps
cmpsb
xor
push
stos
insb
push
int3
sbb
mov
xchg
sub
shlb
dec
ss
xchg
push
nop
ret
lea
adc
rorb
cmpl
sub
add
out
int
jmp
mov
mov
sub
add
mov
pop
movsb
addr16
cmp
gs
cmpsl
loope
pop
shll
icebp
icebp
std
in
repnz
jo
add
sub
adc
nop
in
cmpsb
mov
and
mov
mov
aas
push
out
into
bound
stos
jg
dec
push
jge
orl
or
xor
mov
mov
jo
and
sbb
cmpsb
pop
jge
shll
ss
fmuls
ja
int
xchg
mov
js
or
inc
in
aas
xchg
push
adc
daa
in
mov
fisubl
hlt
sahf
push
push
xor
fsubrl
lahf
insb
bnd
popa
insb
sbb
test
iret
xchg
jle
lods
inc
mov
dec
jl
lret
aad
mov
scas
mov
imul
sbb
rcl
mov
adc
fs
addb
dec
xchg
in
dec
jne
mov
push
xchg
ljmp
xor
repz
aad
pop
scas
jns
adc
in
jmp
add
jno
push
addr16
mov
stc
cmp
pop
lods
stc
mov
dec
jnp
add
cmp
pop
mov
mov
pushf
add
push
sbb
pusha
mov
out
xchg
jmp
dec
or
xor
adc
inc
sbb
or
or
push
push
pop
test
xchg
cmpsl
sub
and
mov
mov
or
dec
or
daa
jecxz
push
pop
push
cmp
sub
lret
push
pusha
add
mov
addr16
mov
fwait
cltd
inc
inc
add
xor
inc
mov
push
pop
bound
xchg
in
dec
xchg
mov
cmp
int3
imul
hlt
sub
das
inc
adc
je
inc
cmp
sbb
mov
lea
cmpsl
push
fdivrs
sub
daa
lahf
push
mov
push
fbstp
or
fwait
add
test
arpl
cmp
mov
int
xor
in
jle
xchg
out
out
bound
cmc
push
aam
cs
loop
adc
popf
insl
jbe
negl
popl
sbb
jp,pt
xor
idivl
dec
sahf
dec
jge
mov
fsubrl
xor
and
jnp
inc
js
add
or
outsl
ret
pop
pop
dec
mov
pop
mov
in
in
shlb
lods
cmc
shll
arpl
xor
cmpl
stos
mov
shll
aad
fistl
out
add
mov
cltd
inc
pop
jmp
repnz
mov
clc
sarb
mov
scas
or
adc
test
xchg
movsb
fld
movsl
test
adc
mov
leave
cmpsl
sbb
loope
aam
inc
sahf
ret
orl
xchg
inc
sub
jnp
cmp
int3
cmpb
jne
add
lods
jl
out
daa
sub
add
iret
jl
pop
xchg
mov
cld
test
inc
cmpsb
sub
adc
push
out
push
jbe
lcall
subl
pop
cmp
fisubs
bound
mov
lea
cmp
add
fwait
mov
test
pop
loope
scas
inc
ret
jae
lea
dec
lahf
mov
in
jne
push
imul
inc
cmp
negl
scas
ljmp
sub
fistps
and
push
imul
cmp
lea
xchg
fsts
and
lcall
aad
hlt
lds
mov
lods
jno
pushf
inc
stos
xor
adc
mov
imul
imul
dec
int3
or
adc
pop
imul
aad
inc
mov
dec
or
inc
popa
adc
lds
out
xchg
and
mov
mov
js
push
ss
cmp
and
jmp
push
std
sub
imul
lret
mov
or
xor
sub
icebp
and
lds
mov
test
les
aas
xchg
or
sahf
push
std
lea
cli
mov
clc
jge
fiadds
icebp
lcall
sti
cmp
sbb
ds
popf
sbb
push
frstor
mov
adc
lahf
sbb
cwtl
jno
mov
stc
int
xor
ffree
cmpb
xor
aad
push
fstps
cmpsb
loop
flds
add
loop
inc
icebp
mov
std
fimull
and
ret
adcb
ror
mov
shrb
cs
pop
sbb
insb
enter
sbb
sbb
cs
push
leave
dec
aam
stos
add
out
adc
icebp
out
mov
call
sbb
push
cwtl
mov
cwtl
dec
in
ss
pop
push
add
adc
das
cmpsl
xor
hlt
imul
repnz
pop
mov
hlt
test
push
popa
aad
js
inc
int
xor
jbe
jmp
imul
jb
stos
inc
fisubrs
inc
sarb
leave
pop
mov
sub
pop
fldt
or
inc
lods
pop
and
mov
loopne
lret
lret
and
out
xchg
sub
and
repz
mov
cwtl
xor
imul
cmp
pop
out
lods
out
test
test
pop
int3
cmpsl
in
xchg
jbe
jl
in
mov
out
pushf
test
stc
inc
icebp
les
in
in
jl
mov
push
mov
sbb
cld
jge
popa
push
mov
lock
addr16
xchg
inc
nop
mov
dec
xchg
lahf
dec
or
test
push
cmpb
add
cmp
adc
lock
inc
ret
addr16
cmp
dec
and
add
mov
bnd
not
mov
pop
hlt
ja
push
pop
sub
les
jmp
mov
loop
enter
sbb
jb
nop
out
jnp
push
dec
push
mov
pop
mov
test
jbe
in
ror
cmp
rcrl
movsb
dec
cwtl
loopne
imul
lret
jns
and
inc
ror
mov
mov
jns
pop
in
inc
lahf
xchg
cmp
aas
faddl
daa
mov
sbb
add
or
dec
inc
pop
and
scas
xor
pop
roll
push
mov
ficomps
movsb
fsubrp
mov
sub
jp
and
jbe
push
out
loope
arpl
loop
adc
addb
push
xchg
repz
jne
mov
xorl
cld
cld
hlt
pop
test
gs
xchg
ret
xor
or
cmp
and
std
repz
jmp
xlat
lahf
sub
loopne
jge
aad
cmp
xor
les
lret
or
fsub
pop
jbe
nop
pop
mov
sbb
in
sub
add
cmpl
nop
iret
sti
xchg
stos
and
repz
dec
sub
mov
xchg
daa
fs
les
and
lods
loop
mov
dec
adc
cmp
sub
test
xor
test
lock
dec
jl
mov
and
cwtl
ljmp
add
lock
arpl
cmp
mov
push
fldl
mov
sbbl
test
addb
das
scas
cltd
add
leave
fimuls
jle
je
add
pop
mov
inc
xor
ds
add
push
mov
mov
push
clc
and
and
cmpsb
or
scas
or
jge
dec
sub
sbb
pop
pop
add
pop
das
scas
mov
into
xchg
movsb
nop
rcrl
sbb
xchg
lds
or
mull
dec
movsb
mov
in
mov
cmpsl
in
push
pop
cmpsb
adc
sbb
mov
shrb
out
addb
adc
push
je
adc
aad
or
sbb
sub
sub
out
sbb
nop
pop
fdivrl
push
outsb
mov
xchg
std
movsl
inc
rcrb
mov
or
pop
in
addb
adc
mov
dec
mov
js
xchg
pop
pop
loop
jo
stc
lcall
dec
mov
xor
adc
cli
or
lret
cld
loop
movsl
mov
stos
xor
lret
dec
fnstenv
cmc
jmp
dec
xchg
stos
les
sti
or
xor
scas
lods
cmc
jns
push
adc
fldl
clc
sbb
rclb
adc
sarl
xchg
mov
inc
jg
pop
or
insb
xor
xchg
cmpsb
loop
lea
icebp
int
jle
add
mov
roll
ljmp
adc
jno
xchg
outsb
mov
daa
daa
mov
mov
add
adc
add
test
nop
loope
mov
push
mov
mov
lahf
add
xlat
and
jns
adcb
sbb
cmp
or
scas
push
mov
cmovbe
sti
es
lcall
icebp
ret
es
xor
jno
lcall
stos
test
sbb
sti
cmp
cmpsb
push
pusha
jmp
and
mov
les
cli
jb
dec
divl
shr
and
sub
daa
pop
sahf
out
sbb
xchg
jmp
lods
mov
addr16
ds
imul
inc
sbb
xchg
or
or
cmp
adc
ret
sbb
ds
roll
fldenv
mov
pop
mov
ljmp
mov
xchg
dec
and
pop
mov
idiv
mov
decb
nop
in
jle
ds
add
aad
imul
insb
gs
lea
mov
lret
and
mov
mov
in
mov
xchg
or
xchg
adc
es
in
mov
sbb
sbb
and
sbb
jno
dec
mov
adc
mov
mov
pop
loope
and
dec
fimuls
jnp
stos
out
stos
enter
jno
imul
out
dec
fdivl
jl
lret
and
push
pop
xchg
aam
les
repnz
xchg
and
dec
jmp
pop
push
insl
pushl
or
mov
shrb
sarb
xchg
mov
shll
and
xlat
clc
xor
or
aam
jle
mov
cmpsl
stos
xor
call
adc
leave
notl
mov
adc
es
mov
divl
loop
lods
pop
ret
call
mov
sbb
jmp
orl
shll
hlt
imul
xlat
inc
lret
xor
dec
aam
loop
adc
shll
or
enter
and
dec
hlt
es
mov
pusha
in
add
sahf
aad
and
in
xchg
and
aaa
mov
xor
lods
outsl
inc
pop
test
in
adc
dec
out
into
pop
pop
rclb
stc
fistpl
mov
in
push
inc
fwait
adc
fs
fs
es
pop
daa
js
insl
lods
es
stc
adc
adc
or
xor
movsl
std
or
or
mov
pusha
out
lods
mov
mov
xor
and
fidivl
inc
jp
cwtl
loopne
jb
mov
sbb
in
mov
sub
ror
sbb
test
fsubs
mov
insb
movsl
pop
scas
sti
pop
test
jo
aaa
popa
ljmp
xchg
or
mov
inc
loop
gs
xor
pop
ror
and
push
jecxz
jl
push
mov
sbb
dec
sarl
jo
ret
push
cwtl
outsb
les
movsb
pop
and
jge
xor
pop
cmp
adc
inc
dec
shrl
cmovs
gs
cmpsl
test
in
adc
das
inc
dec
mov
adc
ret
pop
inc
cmpsb
fstpt
aad
mov
push
idivl
dec
lret
fists
jle
dec
xchg
jbe
push
sub
or
adc
and
dec
push
inc
and
popa
sub
fldt
mov
sub
outsb
push
les
adc
shll
imul
mov
add
mov
xor
push
adc
data16
add
mov
jle
inc
lea
icebp
sub
jle
sbb
js
dec
sub
fisttpl
mov
jno
mov
fcmovnbe
stos
leave
push
lahf
push
cmp
inc
fwait
adc
add
stos
add
dec
push
fwait
inc
cmp
int
and
jge
stos
jo
sbb
incl
lcall
cmp
jns
addl
jno
mov
call
jbe
dec
pop
xlat
lret
inc
mov
cmp
aas
inc
das
sbb
or
sbb
adc
leave
cwtl
or
sub
out
xor
clc
and
cmp
frstor
xchg
std
sbb
js
sub
inc
push
arpl
cmp
adc
adc
cltd
test
push
sbb
add
mov
into
enter
dec
imul
mov
sub
insl
mov
push
sti
pusha
std
call
ror
rolb
repz
xchg
rcl
ret
jae
xor
into
add
nop
lock
jo
lods
clc
add
stos
test
pop
pop
inc
mov
mov
sub
cmp
scas
mov
dec
jns
ret
pop
jno
push
pop
cmc
aam
mov
movsl
insb
je
arpl
fwait
int
and
sbb
or
imul
or
add
lea
ja
je
sbb
adc
mov
sub
push
push
movsb
insb
push
rcll
ffree
lcall
bound
sbb
xchg
lds
scas
loope
outsl
mull
sub
add
notl
sbbl
xchg
test
call
add
lcall
mov
clc
jbe
icebp
or
dec
ret
fcomp
fisttps
int3
sti
pop
add
lret
xchg
cmp
inc
push
repz
jns
push
mov
fdivl
or
repz
std
lods
jns
mov
mov
mov
hlt
lock
aas
sahf
cmp
dec
and
rcrl
push
test
dec
xchg
fadds
adcl
mov
in
jecxz
adc
inc
xchg
xchg
or
stos
push
cli
pop
fbstp
pop
idivl
popa
jp
xchg
add
push
bound
mov
lods
test
lcall
xchg
mov
insl
and
push
arpl
cmp
push
dec
lcall
iret
mov
cs
sub
repz
push
adc
sti
ja
jbe
cmpsl
cwtl
sub
cs
outsb
imul
xchg
mov
inc
out
std
sbb
popf
ret
loop
or
push
sub
mov
push
jecxz
call
push
fiaddl
push
dec
mov
addr16
dec
jb
stos
pop
addr16
iret
and
test
add
sub
and
imul
repz
call
std
fwait
imul
bound
daa
and
js
push
sti
int3
fidivrl
icebp
inc
inc
xchg
sahf
pop
mov
mov
daa
mov
push
pop
push
das
nop
xchg
aad
cs
adc
inc
push
jp
test
or
mov
imul
adc
pop
ja
lock
les
xor
ds
jp
gs
push
lret
sbb
outsl
jge
mov
test
dec
mov
pop
dec
ret
in
in
inc
sbb
mov
xchg
aad
cltd
out
aam
je
fldl
ret
mov
dec
pop
add
fldcw
dec
inc
iret
in
enter
stos
ja
cmpsb
lcall
inc
mov
adc
jg
adc
sub
cld
cld
outsb
insl
pop
mov
mov
or
arpl
js
mov
gs
lods
lahf
out
loop
or
xor
jg
jmp
cmp
out
mov
mov
sub
test
pop
dec
jbe
rcrb
mov
mov
sbb
or
das
pop
lahf
mov
popf
inc
bnd
test
aad
sbb
add
ss
ffreep
push
cli
ljmp
vandps
iret
ret
add
scas
jle
dec
int3
in
lods
test
imul
push
shr
aad
mov
insb
imul
dec
popa
mov
dec
sbb
push
fimuls
jmp
lret
fnstcw
stos
imull
scas
std
push
inc
ficoml
push
add
shll
test
lret
and
leave
adc
loopne
and
add
dec
push
pop
adc
jo
testb
mov
test
hlt
mov
les
fldenv
shrb
fisubrl
test
incl
mov
cld
lcall
dec
sbb
inc
int
jp
mov
sub
dec
popa
dec
mov
in
popf
scas
mov
jmp
cmp
dec
lock
insb
or
and
ja
cwtl
and
sbb
mov
setnp
jle
arpl
stc
sar
in
xor
rep
pusha
pop
push
sub
sbb
or
inc
sarl
in
mov
outsl
js
push
fstpl
repnz
inc
dec
pop
xchg
and
int3
sbb
jb
into
int
rcll
jno
aas
xor
mov
pop
jno
cmp
xor
xor
jnp
jb
lahf
mov
xor
add
sub
mov
add
sbb
mov
xor
inc
mov
mov
enter
pop
stos
xchg
lahf
or
out
aam
orl
test
jl
subb
add
mov
insl
lock
loop
fwait
ljmp
ss
xor
push
push
in
sub
into
into
adc
mov
jno
out
mov
pop
subb
push
sbb
mov
sub
mov
or
jno
jle
and
pop
rclb
and
and
pop
dec
popf
pop
mov
movb
and
aam
xor
push
or
and
in
push
add
ret
adc
cmp
inc
or
dec
sub
scas
das
rcrl
cmpsl
add
out
push
sub
out
pop
push
call
add
add
xchg
jmp
pop
imul
test
out
ss
mov
outsb
rolb
sbb
lods
inc
scas
fwait
xor
push
aaa
dec
test
jecxz
xor
xor
or
pop
sbb
sub
aas
mov
insb
add
lock
inc
pop
dec
dec
xchg
adc
jae
push
mov
push
shll
mov
out
pusha
or
adc
and
dec
pop
mov
mov
xlat
icebp
pop
lret
int
add
bnd
out
gs
pop
adc
lock
out
stos
mov
fsubr
data16
ja
sbb
mov
adc
cltd
inc
ss
clc
insl
jne
stc
jns
dec
inc
andl
outsl
ss
sbb
pop
ljmp
sub
xchg
push
inc
push
lcall
mov
lds
or
push
out
gs
mov
mov
test
pop
mov
or
ret
push
jb
sarb
mov
xchg
and
shl
scas
outsb
lahf
insb
push
arpl
or
xor
and
mov
lock
loop
xor
mov
scas
mov
inc
fsubl
mov
or
mov
mov
shll
inc
iret
outsb
aam
lds
or
insb
sub
dec
call
fs
push
aam
mov
pop
fldt
fisubrl
or
lods
lea
pop
out
insb
aaa
sbb
hlt
scas
fsubs
fisttpll
mov
into
mov
jne
test
inc
sub
imull
hlt
lahf
adc
and
movb
rolb
sbb
ficomps
daa
repz
push
sbb
push
ja
jnp
xor
sbb
clc
mov
pop
and
fildll
insb
repz
shl
mov
out
das
sbb
lcall
in
xchg
mov
loopne
pop
sbb
xchg
xchg
pop
jo
jg
insl
jnp
cmp
jno
out
pushl
lds
xchg
mov
int3
nop
xor
add
mov
adc
xor
dec
lahf
push
out
or
add
fldt
fildl
jle
std
stos
adc
add
outsb
mov
adc
faddl
or
sub
test
shlb
popf
stc
push
mov
fdivrs
xchg
xchg
jg
repz
sub
cmpsb
out
and
pop
push
xor
lea
cmpsl
loopne
push
in
scas
pop
pop
sbbl
ja
pop
int
cld
mov
xor
adc
push
insl
xchg
test
fstpt
pshufw
sbb
pop
popa
pop
add
std
sbb
imul
insb
lock
mov
adc
push
das
or
testl
aad
rcrb
nop
call
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
add
add
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
jb
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
jb
addr16
bound
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
jb
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
jae
jbe
outsb
sub
outsb
add
add
rolb
addb
add
add
add
add
mov
add
add
mov
add
add
jns
jae
je
add
add
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
incl
insl
add
add
add
add
add
incl
jp
mov
jnp
je
testb
add
add
add
add
add
add
add
adc
incl
add
add
jp
jnp
je
testb
add
inc
pushf
jae
and
and
and
and
and
and
mov
add
add
pop
addb
pushf
js
jge
or
pop
nop
add
or
jnp
je
testb
addb
pushf
add
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
ds
in
mov
mov
test
xor
add
add
mov
push
and
fstps
fwait
mov
pop
mov
add
jo
sbb
push
mov
pop
jmp
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
je
adc
loopne
pop
aas
or
push
add
xor
add
movswl
sub
push
pop
push
popl
xor
sub
mov
cmp
jne
push
movswl
pop
jmp
sub
mov
int
xchg
mov
jmp
test
or
add
addl
jle
sub
mov
std
cltd
jle
out
jo
pop
sub
jno
es
into
icebp
loop
ljmp
pusha
cmp
int
sarl
into
mov
mov
fsts
pop
add
mulb
inc
rol
sbb
xchg
out
idivb
gs
jnp
sahf
les
mov
movsb
add
or
jge
mov
in
popf
or
dec
add
fidivrs
jnp
cld
cltd
mov
in
jle
std
sub
mov
dec
add
xlat
cmpsl
fldcw
subl
xchg
inc
ret
fisttps
fstpt
test
xchg
out
mov
jns
jle
std
fisubrs
fistpl
jmp
jne
data16
mov
push
fsubs
mov
cld
aam
adc
outsl
in
stos
dec
stos
sub
call
inc
loope
mov
dec
or
jbe
cld
aam
jne
aad
data16
sub
hlt
data16
aam
es
scas
xor
or
bnd
jbe
push
mov
mov
mov
add
pop
and
mov
sub
in
hlt
data16
or
lahf
jne
test
mov
in
lcall
lods
xor
hlt
jbe
jne
data16
mov
jp
aaa
in
pushf
fcompl
xchg
mov
outsb
sarl
stos
std
fcomps
ret
push
sbb
and
out
mov
xorl
into
loopne
xor
inc
fiaddl
push
jae
pop
sbb
loope
lods
inc
sub
push
out
add
rorb
push
mov
push
pusha
in
pop
daa
dec
mov
xchg
xor
in
pop
call
pop
ss
lret
dec
das
into
shr
pop
or
cmp
dec
out
or
cltd
movsb
dec
xchg
lds
fs
test
inc
xlat
xor
pop
pop
call
loope
lea
mov
xlat
or
addb
fsubrs
lea
or
pop
adc
or
call
int3
rcrl
fldcw
lea
imulb
in
pop
call
ja
cltd
loopne
dec
movsl
sub
mov
lock
imul
inc
ret
js
rcrl
xlat
pop
decb
shr
loope
pop
arpl
or
call
cmp
mov
sub
and
or
pushf
inc
cli
sub
fcoms
aam
jne
cmp
daa
sbb
insb
es
sbb
pop
push
add
out
push
or
fbld
and
movsb
divl
sub
pop
stos
jne
int
adc
loopne
imul
push
dec
daa
jmp
push
cltd
pop
push
int
stos
jne
int
imul
push
ret
jne
aam
jne
aam
xor
sub
inc
xor
push
jne
mull
hlt
and
lods
fwait
sbb
aam
jne
pop
shll
in
jne
inc
jns
pushf
jecxz
cmc
cmp
sbbb
aam
xor
cmpsb
cltd
jp
lcall
test
call
arpl
aam
dec
adc
cmpsl
jne
movsb
push
std
cltd
rcr
jne
xchg
inc
jne
aam
jbe
fsubl
jbe
test
jo
aam
or
and
jne
mov
sub
addb
adc
and
jne
pop
test
sbb
cmpsl
jne
pop
call
pop
cmpsb
aam
xor
pop
call
dec
movsl
aam
pop
xchg
sub
fisttpl
outsl
shlb
adc
lret
fnsave
sub
ficomps
mov
push
cmpsb
movsl
aam
adc
scas
pop
dec
mov
bound
mov
call
das
adc
sub
sub
scas
aam
or
aam
or
xor
roll
push
dec
sub
and
jne
and
sbb
fnsave
pop
call
dec
movsl
aam
daa
movsl
frstor
test
xor
lods
test
dec
aam
jne
fstl
push
mov
jne
aam
mov
aam
jne
sub
cmp
pop
mov
out
xor
pop
movsl
push
scas
cmp
jmp
pop
loopne
stos
pop
mov
sahf
divl
sbb
jmp
shll
repnz
pop
mov
adc
iret
sub
xchg
je
int
out
into
xor
pop
adc
lahf
sbb
sbb
jmp
sbb
cmp
aad
rcr
jne
int
pushf
pop
adc
lahf
sbb
sbb
jmp
lret
sub
jne
int
pushf
pop
adc
lahf
es
mov
cmp
jmp
push
and
mov
pop
cld
cmpsl
pop
cltd
fdivl
adc
sbb
fbstp
aam
iret
sub
xchg
je
int
in
test
xor
pop
adc
lahf
cmp
cmpsb
cmc
fistpll
stos
and
jno
test
cltd
fdivl
int3
pop
cs
jb
jo
sbb
sbb
cmpsb
sub
mov
lret
xor
arpl
jge
sarb
cmpsb
cmp
cld
mov
aaa
push
jne
sub
aam
jne
rcr
dec
movsl
aam
jne
push
imulb
out
mov
dec
movsl
aam
movsl
pop
in
cmpsl
xor
xor
mov
movsl
aam
fsub
sbb
and
mov
pop
sub
aam
xchg
cmpsb
aam
repnz
inc
lds
adc
cmpsl
stos
jne
sub
xor
xchg
inc
movsl
aam
mov
xchg
in
outsl
shrl
adc
push
jg
into
test
insl
std
dec
xlat
in
in
stos
dec
bound
pop
fldt
rorb
xchg
sbb
ret
ficomps
lds
push
mov
jnp
repnz
rcll
mov
mov
out
pop
sbb
sahf
inc
lods
sbb
bnd
movsl
aam
jne
aam
jne
aam
jne
aam
jne
aam
jne
aam
jne
aam
jne
insb
test
adc
push
jne
and
jne
inc
stos
jne
aam
jne
aam
xor
cmpsb
aam
jne
aam
jne
cmp
pusha
cmpsb
aam
jne
aam
jne
aam
jne
aam
jne
aam
jne
aam
jne
cmp
icebp
jecxz
jle
push
push
imul
lock
pop
cmp
cmp
loopne
int
adc
mov
fdiv
pop
jbe
sti
add
mov
jbe
cltd
fs
xchg
das
cmp
fisubs
jge
scas
dec
xchg
adc
iret
inc
sub
mov
xchg
in
mov
adc
movb
cmp
in
sbb
sbb
lds
in
xchg
pop
std
mov
ja
mov
adc
nop
mov
lods
movsl
cmpsb
stc
cltd
lock
jge
cltd
mov
adc
xor
das
fidivrl
les
add
dec
pop
cmp
lret
pop
int3
sbb
shrl
enter
roll
pop
mov
xor
dec
out
lods
scas
push
imul
sbb
dec
iret
and
jecxz
add
and
add
add
add
mov
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
push
add
push
add
add
add
push
add
add
add
push
add
mov
add
pusha
mov
push
add
push
add
mov
add
jns
push
add
mov
add
test
push
add
mov
add
popf
mov
push
add
mov
add
insl
data16
cs
insb
add
jbe
jb
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
insb
ja
jo
cs
insb
add
jbe
jo
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
pop
mov
add
bsf
add
add
sbb
add
add
add
add
mov
add
inc
mov
add
push
mov
add
jae
push
add
add
add
add
add
add
js
je
add
dec
gs
popa
addr16
outsl
js
add
add
outsb
push
jb
arpl
jae
outsl
imul
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
push
gs
popa
insb
jne
inc
add
add
aas
xor
imul
popa
jae
inc
jae
fs
inc
push
inc
inc
inc
pop
pop
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
popa
adc
sub
add
lahf
add
add
push
pop
cmp
add
stos
mov
sbb
dec
and
jg
js
and
and
enter
jl
sub
inc
addb
mov
rorb
sub
adc
mov
xor
mov
fwait
or
adc
adc
mov
cmp
inc
or
push
push
je
imul
movsl
add
testb
int3
and
rolb
mov
sub
sbb
push
add
push
arpl
je
add
mov
xchg
add
mov
mov
lods
jb
add
movsb
sbb
mov
and
cwtl
xchg
xchg
enter
jb
mov
int3
sbb
and
and
js
mov
or
insb
sbb
and
pusha
xchg
pop
enter
add
cmp
dec
add
inc
xchg
add
enter
jb
cmp
cmp
cld
add
and
xchg
lock
call
test
add
or
mov
cltd
push
call
testb
and
fdivl
mov
push
xor
pop
jmp
sub
cltd
cmp
dec
or
mov
xchg
and
and
jl
add
mov
addl
shlb
push
push
call
enter
jne
xor
rcrb
mov
add
cwtl
jge
rorb
mov
add
out
lea
mov
sbb
inc
cmp
ds
jne
js
adc
push
into
pop
nop
add
push
inc
add
inc
pop
enter
call
xchg
test
mov
ljmp
mov
mov
add
add
mov
sbb
add
or
or
push
push
add
xchg
gs
nop
push
andnps
mov
out
jbe
add
bound
xchg
add
sbb
push
scas
nop
cli
cmp
lock
push
add
adc
sbb
scas
fldl
push
daa
xchg
orl
add
mov
cmp
jne
push
or
fucomip
pop
jmp
mull
call
mov
push
pop
pop
mov
je
add
clc
mov
add
mov
hlt
into
sbb
add
xchg
int
pop
push
and
sbb
sarb
mov
stos
cmpl
inc
inc
gs
cmp
xchg
cmp
into
sarl
xor
sub
ss
sub
stc
pop
jl
xchg
adc
shr
clc
mov
sahf
test
or
or
cmp
stc
clc
xchg
pop
sbb
xchg
mov
inc
add
cmp
jge
pop
mov
decl
fmuls
adc
push
push
push
xchg
rolb
clc
mov
test
add
shll
push
dec
add
andb
cmp
mov
call
ljmp
aas
mov
add
push
popa
cmp
hlt
push
cmp
clc
add
jns
mov
sahf
addl
pop
dec
add
dec
and
and
add
cwtl
jecxz
or
add
data16
add
sbb
pop
pop
fisubrs
jnp
push
rorb
push
add
and
nop
pop
out
ja
push
xchg
movb
fiadds
xor
push
push
add
pop
jbe
imul
jae
xchg
add
add
or
sti
pop
push
jne
cmpsl
mov
add
in
lock
rcrb
sete
or
add
rcrl
lods
adc
push
les
hlt
je
test
ljmp
mov
add
dec
mov
loop
mov
push
mov
mov
lds
push
xor
jae
add
or
sti
pop
nop
jbe
add
decb
arpl
ret
pop
inc
adc
sub
push
dec
push
pop
mov
mov
adc
cwtl
mov
or
xchg
mov
mov
es
adc
adc
or
add
sahf
jmp
jne
aas
add
cmovno
test
sbb
sbb
fimuls
sbb
push
std
sub
add
and
sub
inc
adc
mov
test
das
bsr
adcb
out
mov
aam
cmp
dec
add
xlat
nop
push
call
ja
pop
lldt
inc
aaa
dec
push
sub
iret
lahf
frstor
call
das
and
int3
mov
mov
cmp
pop
movsl
xlat
cmp
inc
addb
cmpsl
lods
int
out
ret
adc
je
cli
or
xchg
jbe
cmp
add
mov
push
mov
xchg
loopne
fimull
push
test
pushf
push
sarl
xor
aaa
or
sub
xchg
repz
push
mov
pusha
mov
aam
sar
insl
pop
and
cwtl
mov
xor
test
ljmp
repnz
sbb
cmc
add
pop
pop
fsubs
and
sub
testb
cmp
adc
movl
and
lea
sbb
jecxz
pop
add
lock
add
cmp
add
std
iret
and
add
mov
add
jne
add
test
sub
je
mov
ret
and
inc
mov
lret
testb
adc
repnz
add
add
push
jp
pop
mov
jo
in
add
sbb
pushl
iret
mov
push
xor
sbb
leave
cmpb
jle
or
and
ja
adc
and
xor
add
test
add
leave
add
hlt
add
push
add
mov
out
bound
jl
movb
sbb
pop
push
jne
add
mov
mov
and
enter
cs
loopne
push
jl
dec
stc
adc
test
aam
jne
pop
push
sbb
dec
enter
adc
sub
andb
out
push
push
lock
hlt
in
adc
xor
adc
mov
lock
sub
or
shll
arpl
jmp
fidivrl
pop
add
adc
pop
loopne
push
nop
pushl
jl
add
adcl
dec
pop
or
jg
pop
insl
punpcklbw
add
out
stc
add
mov
pop
push
or
cs
lods
or
movb
mov
xor
dec
in
pop
shll
jbe
or
jle
adc
cmp
call
add
mov
lcall
clc
xchg
sbb
sbb
cld
pop
add
popa
or
add
jl
inc
orl
or
adc
add
sub
add
stos
loop
xchg
jg
adc
add
or
jl
xchg
lret
pop
sub
or
push
dec
or
movsl
ret
or
mov
dec
mov
xor
xchg
adc
push
pop
and
lock
sub
testl
lods
and
xor
add
cli
mov
or
cmp
jo
pop
push
push
mov
pop
mov
add
add
or
fs
pop
mov
enter
pop
ds
test
add
adc
push
movb
cld
inc
or
jp
dec
sub
clc
xchg
add
mov
mov
out
pop
pop
fsubl
lea
sub
push
psllq
leave
pusha
pushf
fs
cli
lds
sti
jecxz
jge
sub
in
add
add
paddd
inc
out
adc
add
in
jns
push
xor
aad
inc
mov
or
push
or
call
sahf
out
sub
pusha
add
dec
jmp
fisttps
add
movb
push
cmp
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
andb
pop
adcb
jle
xchg
or
addl
jmp
mov
add
mov
mov
lret
scas
orb
rolb
push
addr16
lea
movsl
push
xbegin
or
mov
rolb
push
adc
push
fadds
es
sub
add
add
add
and
aas
add
adcl
aam
test
in
xor
insl
add
pop
outsl
cmc
xor
ds
andl
xchg
adc
popf
xchg
insb
leave
iret
aam
icebp
add
call
cwtl
add
mov
xchg
jnp
lret
and
nop
pop
cmp
and
mov
loope
push
and
aam
pusha
and
adc
and
lods
add
push
sub
push
addb
stos
shlb
sub
ljmp
push
mov
addb
loope
sub
ja
mov
pop
test
mov
les
jle
or
xlat
xor
mov
fldl
cli
adc
arpl
or
push
mov
add
enter
add
sub
cmp
movsb
sub
or
pop
test
add
mov
xor
add
fnstenv
jle
out
enter
add
dec
cmc
sub
leave
fdivrl
add
xchg
out
dec
pop
push
sub
mov
jne
hlt
cmp
imul
leave
pop
insb
aam
push
mov
mov
mov
rolb
push
or
sub
or
xlat
jb
mov
and
icebp
or
adcl
gs
add
mov
add
xchg
insb
pop
int
push
test
jge
je
nop
rol
add
add
shlb
sub
jns
or
mov
jl
xor
lahf
les
cmp
or
dec
add
imul
add
out
push
mov
sbb
sub
push
rclb
cmp
and
jg
dec
sub
les
push
push
arpl
xchg
bound
sbb
pop
push
add
push
xor
push
sbb
inc
jno
inc
xchg
cmp
xorb
test
and
push
mov
sub
sub
add
push
in
add
test
adc
cmc
test
xchg
pop
icebp
test
xchg
inc
or
add
js
jns
or
ret
and
cmp
cs
icebp
pop
je
mov
adc
pushf
push
or
xlat
addr16
test
dec
aas
or
add
aad
sbb
add
add
cmpsb
imul
or
cmp
add
subb
add
leave
inc
or
mov
imul
add
test
add
call
hlt
mov
cmp
add
mov
mov
jmp
inc
jg
add
xor
push
or
add
adc
add
sub
mov
cmp
and
xchg
mov
dec
in
and
inc
mov
call
js
dec
push
test
lds
movl
mov
sub
hlt
add
lds
mov
sub
push
flds
mov
addr16
lock
and
sbb
testl
xor
testb
add
jae
push
aam
sti
inc
rcrl
sbb
jo
pop
add
jns
sarb
popf
cmc
add
dec
cmp
test
stos
test
add
and
ret
cmp
push
sbb
add
xor
adc
add
xchg
sbb
adc
mov
xlat
add
jnp
push
xchg
aas
fbstp
ret
jge
in
push
cmp
lcall
inc
in
jmp
sahf
sbb
dec
rorl
xchg
inc
mov
xlat
dec
arpl
cmp
xor
aad
loop
sub
cs
leave
pop
or
sub
mov
adc
inc
ja
push
add
cltd
dec
or
sbb
mov
outsb
je
add
adc
and
inc
xorl
mov
jmp
shrl
seto
clc
pop
dec
sbb
repnz
sub
out
rorl
jge
movsl
cmp
clc
adc
loopne
add
xchg
call
rcl
add
or
pop
cs
or
adc
xlat
bound
ret
dec
test
cmp
mov
faddl
dec
add
mov
pop
test
and
sbb
jno
add
cltd
pop
jne
idivb
adc
cmpsb
int3
adc
adc
out
add
loopne
lock
scas
add
pop
call
dec
add
jns
call
mov
jp
adc
jmp
int3
enter
iret
ror
into
add
fmul
flds
fcmovu
fstp
push
fnstsw
loope
jecxz
in
nop
pop
push
push
add
cmpl
add
shlb
push
add
popl
push
adc
lock
mov
enter
lret
pop
fadds
xlat
push
cmp
or
je
das
pusha
sub
aas
rep
add
sbb
movsb
sbb
xor
cmp
jl
push
sbb
add
sbb
pushw
and
imul
inc
les
or
jmp
aas
loope
add
incb
jbe
add
cmpb
jne
push
jnp
add
add
out
pop
and
sbb
inc
roll
mov
test
lock
pop
hlt
or
add
pop
cmp
fadds
pop
dec
into
cmc
adc
lock
mov
clc
lock
mov
push
push
lea
lods
and
shlb
enter
mov
repz
xchg
push
cwtl
call
inc
jl
dec
jmp
jmp
arpl
push
shrb
and
nop
movzwl
lock
cmp
add
xacquire
in
push
xor
shrb
call
sbb
testb
mov
sub
sub
fisttps
cmc
insb
add
or
fnstcw
dec
std
and
push
add
pop
sbb
cmp
push
xor
adc
shlb
lock
nop
jb
add
fimull
shlb
cmp
aas
ja
add
pop
inc
add
xlat
and
pcmpeqd
dec
pusha
aam
call
mov
or
jmp
add
cmpsb
push
test
cmpsl
into
mov
add
cwtl
ret
sbb
cmp
jne
dec
mov
add
pop
cmpb
cmp
add
cmp
mov
jmp
add
fwait
pop
clc
out
add
mov
cmp
jne
xor
or
jle
add
ror
xor
push
repz
into
jp
popl
std
int3
or
movsl
hlt
jmp
pop
nop
sbb
inc
mov
xchg
adc
or
add
xor
or
stos
adc
dec
pusha
insl
pop
add
adc
test
cs
mov
add
loop
push
dec
int3
add
xor
adc
iret
mov
add
mov
fistl
xchg
dec
xor
sbb
pop
mov
add
cli
mov
hlt
inc
mov
xchg
add
call
sub
in
sbb
call
mov
inc
sbb
nop
sub
imul
leave
sbb
sbb
inc
andb
xlat
out
or
and
mov
or
push
inc
addb
and
je
mov
push
sub
add
mov
and
js
add
pop
rcrb
out
sub
enter
dec
test
add
jmp
add
xor
in
add
and
push
ja
cmp
add
add
leave
add
mov
xor
out
pop
jo
add
jl
pop
xor
shlb
jae
nop
nop
add
fdivrs
cmp
sub
in
inc
push
repnz
cmp
mov
or
popa
jb
mov
add
adc
add
ret
or
mov
pusha
pop
pmullw
test
jmp
in
je
inc
add
jne
pop
and
in
xor
cli
cmp
jae
dec
add
add
inc
add
ss
fadds
push
aas
dec
or
and
add
mov
cld
or
nop
jl
or
lret
dec
pop
or
sar
push
push
add
lcall
add
fisubrs
xor
enter
pop
sbbl
jne
mov
add
push
cwtl
jl
ds
add
mov
hlt
push
sbb
adc
roll
dec
clc
int3
cld
push
fsubrs
xchg
mov
pusha
rorb
int3
xchg
dec
mov
jne
add
xor
mov
movl
mov
or
lret
add
imul
cmpsl
addr16
mov
arpl
cld
or
data16
pushl
pop
and
ud2
add
in
mov
rclb
inc
push
push
inc
push
inc
sbbb
jb
popa
outsb
fs
ja
gs
jo
imul
add
push
dec
push
popa
jae
add
insb
jne
push
imul
inc
data16
cmp
add
xor
mov
inc
xchg
add
je
fcmovu
call
mov
pop
jmp
mov
lock
jecxz
rolb
jbe
pop
push
or
sub
or
add
mov
js
testb
or
pop
xor
or
es
sbb
popl
lock
stc
jns
xchg
mov
mov
add
xor
dec
mov
push
lret
xlat
stos
mov
fadds
call
gs
jp
xchg
mov
add
sub
pop
insb
cmp
push
and
pop
jmp
sbb
in
call
sbb
jg
sbbb
idivb
mov
xchg
xor
and
dec
jne
fnstsw
push
jecxz
jo
leave
add
outsb
add
fsts
repz
mov
les
push
cltd
or
push
add
add
fs
repnz
or
cmp
enter
cld
ficoms
add
add
nop
pop
jae
push
or
icebp
jl
movaps
xchg
shr
cmp
xchg
jp
movhlps
pop
incl
popa
in
lock
push
sub
orl
hlt
add
push
je
outsb
cmp
or
cmc
add
add
nop
sti
or
or
pop
add
arpl
add
sbb
lods
and
add
mov
lea
xor
pop
and
call
clc
push
inc
or
push
in
mov
jg
aam
mov
shll
cmpb
jbe
adc
cwtl
imul
test
push
cltd
cld
and
add
dec
fistpl
push
push
bound
push
push
add
mov
cltd
shl
dec
adc
add
lods
push
mov
mov
jmp
or
pop
push
adc
cwtl
leave
outsl
add
cmp
xor
or
jne
pop
push
movsbl
clc
and
add
sbb
std
add
imul
outsb
orb
pop
mov
rcll
and
rcr
lock
mov
addps
lea
sbb
inc
cmp
repz
mov
adc
xor
fisubrs
out
add
outsb
cld
call
dec
cmp
mov
lock
add
jmp
and
pop
mov
add
into
cli
out
push
je
aaa
stos
mov
loopne
or
cmpsb
ja
imul
push
ret
gs
add
and
mov
mov
or
sub
test
push
push
push
adc
or
icebp
cld
je
rorl
add
fstpt
sbb
fs
call
das
add
and
fwait
movsb
lcall
cmp
mov
insl
jno
add
mov
aad
pop
add
movl
pusha
push
lret
add
lods
sbb
adc
cmp
nopl
mov
sub
jae
je
pop
mov
add
mov
dec
and
or
inc
cmp
add
or
add
pop
aas
xchg
mov
inc
add
cmp
add
jne
fs
push
ljmp
inc
inc
call
je
mov
dec
imul
inc
or
sarb
push
daa
add
inc
add
inc
mov
jmp
xchg
pop
mov
mov
push
mov
insb
addl
push
lock
add
xor
call
cwtl
push
add
dec
mov
test
popl
mov
rclb
add
ret
add
mov
xchg
lahf
fdivrp
adcb
and
cmp
mov
add
push
push
hlt
push
les
enter
push
das
jnp
sub
mov
xor
jne
and
or
add
cmp
std
pushf
lock
push
xchg
jne
add
pop
and
push
adc
adc
push
lea
and
pop
add
fs
dec
je
les
add
daa
and
jmp
pushf
add
xor
add
je
add
fldcw
cmpsl
inc
add
sar
dec
cwtl
adcb
and
mov
sub
push
sub
mov
pop
sarl
pusha
add
les
orl
add
ss
xor
push
cmp
adc
sub
cs
adc
pop
and
cmp
aam
wrmsr
das
push
mov
add
cld
sub
enter
sbb
icebp
jmp
int
and
iret
inc
push
and
out
ljmp
fdivr
push
or
frndint
push
or
lret
xorb
orb
and
adc
add
and
sub
es
push
cmc
loop
add
je
inc
lock
cmp
adc
inc
movsl
in
mov
cmp
push
pusha
popl
add
jno
jl
pop
add
insb
sbb
inc
xchg
pop
pushf
or
xchg
aaa
mov
push
dec
or
and
sahf
push
push
and
adc
scas
pop
xorb
mov
jmp
add
xchg
pop
subb
jne
jo
fcoms
or
je
cmp
loop
cmp
inc
mov
push
xchg
orl
hlt
inc
dec
add
add
femms
fstpt
cmp
inc
fisubrs
add
xchg
sbb
and
out
add
pop
mov
mov
test
stos
loop,pt
pop
nop
pusha
mov
rclb
fistl
pop
inc
inc
xor
cmp
jle
add
add
mov
push
daa
shrl
jg
pusha
pop
bound
push
mov
jge
add
movsl
popl
add
mov
adc
adc
incb
or
cmpl
mov
mov
and
leave
add
push
mov
add
mov
je
add
call
add
add
cmp
pop
jne
movb
add
call
ss
xor
inc
call
push
inc
lea
mov
inc
leave
push
dec
loopne
add
and
dec
add
adc
sbb
dec
dec
test
add
nop
test
in
mov
mov
sbb
mov
add
inc
adcb
dec
push
or
repnz
mov
out
in
sub
in
rolb
inc
pop
jo
addb
mov
fwait
push
pop
add
call
shrl
add
mov
sbb
add
and
aaa
dec
ds
push
add
idivl
pop
leave
sbbl
bound
or
push
addl
pop
fiaddl
push
add
call
jne
out
and
cmp
push
je
lock
and
mov
push
or
sbb
add
ds
mov
add
pushf
iret
sbb
lods
sbb
add
shl
outsl
and
cmp
add
hlt
adc
sbb
sub
jbe
xchg
mov
add
pop
sub
and
int3
add
repnz
add
jmp
outsl
cmpsb
sub
adc
sub
add
mov
pusha
lret
mov
add
jnp
mov
cmp
jmp
mov
push
outsl
jb
imul
inc
cli
aas
addr16
arpl
xorl
sub
scas
lret
int3
insl
add
xchg
xor
cmc
and
jl
fildl
mov
adc
sbb
and
jl
lock
add
push
lea
nop
scas
adc
mov
adc
test
movl
push
or
pop
pminsw
add
insb
xor
or
cmp
xor
jo
mov
daa
pop
es
sbb
pop
imul
outsb
xchg
dec
mov
adc
sub
sbbb
push
or
sbb
popa
adc
pop
mov
cld
jo
outsl
clc
xchg
pop
xchg
add
inc
mov
xor
pop
in
adc
stc
jmp
rcll
lock
subb
cmp
rorl
imul
aas
fstps
jg
hlt
test
ds
add
sub
add
sbb
or
push
push
push
adcl
jnp
add
test
je
add
xchg
into
mov
fwait
in
push
add
aam
dec
cwtl
push
cli
inc
push
push
and
mov
orb
rol
mov
mov
add
adc
sbb
add
icebp
inc
xor
lahf
lock
rorb
es
and
add
imul
rcrl
into
inc
in
loop
push
xor
sub
bound
mov
or
dec
or
push
add
xchg
add
xchg
cmp
sti
and
movaps
dec
nop
push
pop
push
adc
xlat
fiadds
not
pop
mov
add
test
dec
add
adc
ljmp
mov
mov
and
je
add
mov
out
cwtl
pop
add
cmp
mov
and
sub
jp
push
sbb
adc
fmuls
pop
cmpsb
testl
popa
ds
mov
inc
adc
pop
adc
or
xor
dec
jmp
mov
push
into
cld
sbbb
add
jne
movl
insb
lret
test
addps
movsl
and
divl
dec
clc
add
mov
add
push
push
scas
push
lea
push
cmpsb
inc
in
mov
add
xlat
dec
adc
dec
jno
iret
push
pop
xor
mov
adc
shl
aam
fcomps
push
into
cmpsb
mov
jne
mov
lods
dec
xor
pop
ret
pop
xchg
enter
add
or
clc
lret
add
push
inc
or
jns
add
add
push
shr
dec
cmp
cmp
pop
add
inc
dec
pop
test
pop
dec
add
mov
fwait
pop
pop
ljmp
add
sub
cmp
pop
or
add
and
mov
mov
jae
or
add
jmp
popa
scas
lret
add
adc
push
jb
add
inc
js
or
pop
add
add
mov
sub
les
mov
arpl
xchg
add
adc
add
lods
push
out
inc
int3
pop
mov
scas
or
sub
sbb
es
jne
add
fimull
jge
sub
js
repz
sbb
push
insb
xchg
xchg
pop
mov
in
flds
icebp
out
adc
insb
pop
sub
mov
pop
sub
xor
cld
dec
jl
sub
rol
sub
add
lock
add
add
xor
xchg
pop
sti
push
xchg
xor
jns
add
dec
xor
cld
rolb
add
jle
hlt
aad
add
repz
pusha
cmp
mov
dec
stc
add
or
cli
cwtl
out
pop
cmp
or
lcall
or
outsl
xor
cli
dec
fsubs
ret
sbb
loopne
ja
push
xlat
mov
cld
inc
scas
xor
fsubrl
orb
stos
xor
jp
add
mov
addb
mov
adc
xchg
sub
add
fistl
ret
enter
repz
loopne
add
roll
cmp
pushf
cmpb
add
icebp
mov
call
pop
lock
sub
inc
lea
lock
push
test
pop
xchg
cmp
or
xor
je
iret
dec
test
pop
adc
into
add
cltd
or
add
dec
sbb
adc
loopne
sarb
hlt
sbb
call
lods
adcb
decl
cwtl
sub
pop
push
push
dec
xchg
mov
add
cltd
and
sbb
mov
icebp
rcll
jl
mov
add
inc
push
mov
hlt
inc
test
lea
daa
push
mov
cwtl
fcoml
and
add
call
mov
hlt
ljmp
jb
movsb
pop
mov
and
cli
add
orb
or
or
inc
add
pop
add
or
shr
aam
mov
adc
mov
add
jg
or
and
jmp
enter
daa
jmp
js
jo
jge
sub
push
and
popa
aam
lcall
adc
lahf
add
add
or
lret
add
mov
rcll
add
sbb
pop
add
cmpsl
push
push
lock
jmp
push
inc
adc
mov
push
inc
setb
repnz
icebp
and
add
dec
xchg
add
lock
test
push
pop
rorb
test
and
inc
adc
dec
jo
inc
mov
imul
jmp
mov
outsb
pop
test
inc
jns
add
adc
cmp
xchg
cmp
jb
xchg
popa
pop
add
movsb
mov
cmp
stos
shrb
mov
cmp
adc
lea
sti
sbb
out
mov
or
add
stos
rolb
fiaddl
push
leave
jbe
adc
addb
cmp
push
cmp
test
shlb
repnz
add
out
mov
mov
pop
adc
nop
add
loop
fldenv
lock
adc
inc
arpl
mov
push
xor
inc
inc
xchg
add
lds
or
cltd
pop
add
adc
bound
xor
push
loop
nop
sbb
and
aas
ds
adc
sbb
mov
dec
add
sbb
test
and
pop
test
add
out
cmp
iret
subb
verr
push
inc
popa
add
jge
xchg
or
pushf
leave
jl
add
dec
mulb
out
jne
out
jmp
addl
adc
jp
cmpsb
add
add
sbb
push
lar
pushl
incb
movl
fsubr
jmp
push
sbb
and
adc
cmp
adc
add
or
cmp
jmp
sub
add
arpl
sub
add
and
mov
nop
int3
les
icebp
leave
fimull
jne
sbb
popa
mov
pop
and
fnstenv
add
test
clc
ror
call
stos
pop
inc
das
rorb
sbb
push
mov
and
lds
or
mov
into
test
pop
add
and
lds
pop
sub
cmp
stos
ja
cli
push
bound
jp
adc
xor
push
sbb
clc
or
fs
in
push
push
add
aaa
arpl
or
jno
insb
push
sub
ficoms
add
xchg
in
in
test
jne
add
add
outsb
push
adc
icebp
add
jmp
out
pop
mov
orb
or
cmpsb
shll
add
push
push
aam
sbb
xchg
xchg
mov
add
inc
jmp
call
dec
mov
sti
pop
add
pusha
cmp
lret
in
cmp
push
dec
or
ret
cltd
jo
jg
adc
movd
add
popl
call
fidivrl
push
or
jne
les
pop
aas
shrb
sbb
fdiv
xor
lock
daa
add
jge
push
mov
pop
pop
push
add
mov
push
add
inc
stos
in
sub
push
sub
add
push
push
cmp
fwait
add
pop
testb
pop
add
push
mov
call
stc
and
nop
jno
add
pop
pop
repnz
add
xor
or
ror
call
push
add
mov
adc
push
sbb
and
add
sbb
mov
or
push
inc
pop
or
or
adc
jmp
dec
aam
jge
push
daa
push
mov
push
in
add
pop
mov
or
push
std
fisubl
cmp
icebp
out
adc
cmp
add
xor
test
pop
xor
add
dec
daa
xor
les
ss
inc
pop
inc
dec
add
fldcw
add
jmp
pop
cmp
add
or
pop
test
sub
add
push
adc
mov
dec
sub
lret
daa
xchg
test
popa
pop
adc
push
pop
xchg
push
shrb
test
clc
pop
inc
dec
pop
sbb
add
mov
cmpsb
dec
ret
inc
inc
pmullw
in
add
mov
pop
and
xorl
movsb
je
clc
add
call
cmp
add
and
pop
push
pop
sahf
pop
cltd
inc
pusha
sar
jo
fiadds
push
and
xor
adc
mov
lea
pop
push
out
dec
xchg
popf
daa
andb
nop
xor
les
xor
push
or
cmpsl
pop
test
pop
add
sbb
test
jg
or
add
out
jp
dec
fbstp
jmp
or
lock
or
movsl
insb
sbb
sub
mov
inc
aas
cmc
popa
add
jge
insb
arpl
xor
jmp
xor
add
add
loopne
in
mov
cmp
cmpsb
dec
push
bound
and
popl
lcall
add
jnp
jp
sbb
sbb
sub
xchg
shrb
add
mov
loopne
push
add
and
jmp
cmp
dec
test
push
dec
imul
push
rolb
arpl
popf
add
leave
rcrl
push
cs
adc
arpl
lods
jmp
push
enter
call
ret
lahf
clc
dec
and
ret
cmpsl
dec
add
push
push
sbb
sub
jge
cmp
ret
push
pusha
jp
add
add
jle
int
or
add
dec
aaa
add
and
stos
sbb
inc
xchg
dec
fcomp
push
cld
gs
add
add
out
jmp
dec
add
out
mov
int3
push
push
mov
mov
jmp
call
or
jecxz
pop
add
dec
clc
inc
fisttpll
pop
push
or
lret
xor
inc
pop
xor
and
and
pop
clc
add
dec
sub
xor
push
shrb
add
inc
int3
mov
pop
jl
adc
xchg
sbb
pop
and
sub
in
sbb
ljmp
cmpl
add
imul
ret
pusha
loopne
fistpll
xor
cmp
inc
add
or
or
add
nop
sbb
adc
adc
jmp
pop
cmpsb
and
jne
pop
popa
out
mov
xor
repz
popl
push
test
add
xor
mov
loope
jns
or
dec
jo
cmp
hlt
inc
push
lahf
add
add
ja
insl
add
mov
adc
call
cmp
cltd
mov
into
sbbl
js
inc
jne
or
or
call
cmpb
lea
add
cld
dec
in
addb
repz
lea
push
inc
jns
pop
cmp
int3
mov
xchg
rolb
or
movsb
clc
or
mov
push
and
add
dec
xor
loopne
dec
add
loope
je
lret
test
and
iret
aam
sub
push
addl
inc
cmp
or
test
inc
inc
dec
cmp
or
test
cmp
movl
adc
cmpsb
mov
add
insb
xor
jne,pn
jle
add
ds
xorb
add
popa
out
jno
shrl
cmc
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
stc
jmp
or
inc
out
leave
add
jle
icebp
loopne
shrb
sbb
add
lret
push
adc
push
mov
aam
push
and
enter
and
call
ds
les
outsl
or
dec
sub
lds
pop
add
and
inc
push
cmp
loopne
push
xchg
js
pop
movsb
int
and
inc
mov
add
xchg
repz
cli
sub
bndstx
les
mov
dec
or
scas
mov
stc
jecxz
out
into
clc
lahf
adc
sub
mov
add
add
sub
add
sub
and
or
je
inc
mov
dec
scas
adc
jne
loope
pmulhuw
std
push
fiadds
testl
push
and
dec
loopne
push
outsl
pop
data16
adc
gs
fisubs
lahf
jmp
add
dec
js
and
xchg
inc
cli
mov
cmp
fmuls
sarl
adc
daa
pusha
lods
push
dec
add
sub
or
into
mov
jne
lahf
in
inc
mov
mov
push
xlat
iret
add
lods
cmc
cwtl
addl
rorl
je
rclb
cltd
xchg
inc
add
jmp
mov
je
or
push
cld
add
sub
xchg
mov
cmp
out
sub
ret
cltd
sbb
fisubl
cld
pop
ret
add
add
add
loop
mov
or
js
pop
fs
mov
mov
adc
shl
lock
sub
sbb
dec
fwait
add
add
add
push
test
add
add
add
add
xor
mov
imul
out
ret
push
or
add
inc
pop
dec
xor
and
ret
clc
sti
mov
push
repz
sbbl
rorb
pop
push
rolb
xchg
xor
dec
add
imul
lock
aas
mov
xchg
call
push
add
jbe
mov
inc
dec
mov
inc
or
push
adc
movsb
sub
or
and
cs
gs
sarl
imul
movl
lds
jmp
add
sbb
adc
adc
rsm
sub
in
add
and
xchg
and
loop
sbb
lods
mov
adc
pop
cwtl
push
inc
rclb
cmp
jmp
mov
or
mov
incl
dec
sti
mov
jnp
je
inc
leave
and
pop
mov
cmp
cmp
lea
or
sbb
jnp
call
mov
mov
sbb
inc
jno
and
add
ret
ret
sub
pop
pop
jmp
movsb
pop
mov
nop
pop
sbb
push
add
call
les
add
pop
outsl
imul
jle
adc
add
add
mov
ret
clc
sbb
jl
and
les
add
xchg
xchg
and
cld
fildl
sub
adc
dec
aam
cmp
lret
int3
adc
sbb
jno
call
xchg
movsl
pusha
dec
and
jp
add
sbb
add
nop
sbb
adc
dec
sbbb
ret
sub
sbb
cmpb
add
push
and
mov
loop
in
and
pop
fsubs
add
adc
ja
sbb
mov
loope
dec
and
in
test
es
dec
in
push
adc
add
rolb
sbb
movsb
mov
cmpsl
mov
jmp
cmp
addl
xor
movsb
xor
or
inc
mov
sbb
adc
inc
shlb
ficoms
jbe
push
pop
add
mov
movb
sbb
inc
stc
stos
sbbw
adc
fiaddl
add
pop
mov
out
int3
dec
dec
pop
out
inc
sar
popf
icebp
pop
cli
add
shlb
add
dec
adc
sub
add
and
jl
pop
mov
sub
fwait
je
adc
stos
or
add
sub
mov
pop
pop
push
into
leave
push
mov
aam
push
test
int
ret
or
sub
iret
jge
punpckhwd
push
adc
movl
or
add
or
push
insb
inc
lock
mov
pop
or
add
mov
add
push
sbb
imul
data16
icebp
mov
mov
add
push
fadds
add
cmp
adc
add
jo
sub
jg
add
inc
vpsubsb
add
rcrb
jmp
fiaddl
les
and
add
or
push
lahf
push
add
rcrb
pop
pop
dec
mov
je
mov
ja
call
mov
cmp
test
and
jmp
out
add
mov
dec
mov
add
mov
incl
add
jae
pop
xor
in
sub
and
jle
mov
xchg
ljmp
dec
sbb
mov
ret
add
in
push
mov
add
cmp
or
add
pusha
pop
mov
cwtl
adc
test
andb
or
lret
lds
leave
and
jmp
pop
pusha
lea
jp
jo
mov
pop
movsb
mov
dec
lock
in
pop
push
repnz
not
dec
add
cmp
dec
xchg
pop
cltd
add
sub
mov
cmp
lea
add
adcl
fiadds
leave
rorl
js
and
add
unpcklps
ds
popl
or
hlt
ret
add
fcoms
jge
pop
inc
add
stc
adc
xor
pop
enter
jp
aaa
sub
fldz
xlat
or
inc
cmp
jg
cmpb
adc
enter
inc
or
add
jo
pop
hlt
adc
shlb
mov
imul
idiv
mov
mov
inc
mov
aam
cltd
add
pop
sub
test
xor
out
sub
add
test
add
pop
leave
sbb
mov
subb
mov
call
or
inc
loopne
cmp
mov
and
cwtl
aaa
or
js
inc
jb
add
mov
xlat
fadds
nop
add
lods
outsb
xor
xchg
mov
push
or
push
push
add
int3
into
sbb
ret
add
popa
push
pop
add
push
call
nop
je
add
push
cmpb
and
add
push
lret
into
pop
fadds
cmp
aas
sbbl
xlat
pop
mov
addr16
add
jb
jp
xadd
addl
gs
jo
test
lds
cmpsb
push
iret
decl
js
es
mov
push
stos
mov
jo
add
mov
aam
dec
mov
cmc
add
out
sub
es
imul
lea
divl
add
leave
cmp
incl
dec
mov
sahf
popf
sbb
jmp
push
push
inc
add
cld
es
mov
repnz
test
jl
jge
sbb
nop
fildl
pop
daa
movsb
lahf
outsl
inc
pop
stos
add
scas
adc
jecxz
cli
negb
pushf
mov
mov
loop
repnz
add
repz
pop
xchg
iret
shll
roll
faddl
cmp
xchg
push
add
jecxz
rclb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
rcrl
adc
adc
add
or
add
ljmp
into
add
and
push
pop
mov
clc
lea
pop
pop
stc
je
add
sbb
leave
jne
inc
shl
testl
adc
jns
repnz
out
add
add
cmp
inc
jecxz
mov
add
sub
roll
jb
je
jbe
add
cmp
ja
fpatan
fadds
clc
inc
pusha
loop
pop
testl
push
pop
inc
dec
sbb
jg
sti
xor
shr
inc
push
mov
std
xchg
or
nop
cmp
add
ror
bnd
sub
pop
fstpt
mov
add
out
aam
add
call
push
cmp
stos
mov
mov
out
mov
add
pop
dec
pop
add
pop
enter
add
imul
cmc
bnd
add
xor
add
mov
movsb
mov
addl
icebp
pop
xor
ret
jo
shll
loop
andb
sbb
push
add
cmp
cltd
add
data16
cmp
mov
jle
add
cmp
aam
dec
in
or
pop
test
xchg
add
daa
aaa
xchg
xor
add
cmpsb
or
ja
or
add
sub
hlt
cld
repz
sub
test
cmp
pusha
clc
pop
push
sbb
pop
add
adc
jp
jnp
add
movb
push
fsubl
pusha
add
decb
repz
jg
mov
or
adc
sub
stos
in
cmp
pop
sub
pop
or
lea
orb
cmpb
and
cmpl
push
es
addb
xchg
xchg
xor
jp
sub
addr16
inc
push
add
pop
dec
add
js
inc
ret
adc
jb
cmp
or
pusha
fsubs
add
push
pop
lea
hlt
add
sarb
xor
movsl
adc
push
ret
pop
pushl
ds
push
add
aaa
cmp
rcrl
mov
pop
dec
lock
call
and
add
aas
xor
push
push
pop
dec
ja
push
adc
adc
jns
pop
mov
sub
sbb
divb
or
add
dec
sbb
mov
xor
sub
xor
rol
nop
push
outsb
xor
cmpsl
pop
mov
inc
and
mov
das
mov
cmp
mov
push
stos
or
fsub
mov
adc
and
pushf
add
push
mov
call
add
jnp
add
adc
mov
jne
cmp
push
daa
popf
mov
mov
mov
push
cmp
in
repnz
mov
push
or
inc
call
jecxz
xor
mov
and
hlt
xor
add
add
mov
or
pusha
jmp
lock
inc
in
cmp
or
cmp
xor
and
xchg
sub
sub
and
jl
inc
movhps
clc
jb
hlt
cmp
sbb
rclb
insb
xchg
cmp
in
gs
fdivrl
adc
sbb
add
int3
in
jb
jg
call
xor
xchg
nop
add
cwtl
xor
and
mov
test
xorb
cmp
je
jo
mov
enter
jb
cmp
sbb
and
dec
add
bound
cmp
or
sbb
push
cmp
addb
xchg
cmp
cmp
xor
add
cmp
sub
movzwl
rol
cwtl
loop
or
ret
call
mov
ds
and
add
sbb
out
pop
in
pop
dec
push
or
inc
imul
cmc
jae
orl
jnp
arpl
xchg
fcoml
adc
in
sbb
inc
jbe
jns
add
lock
adc
enter
repz
xor
fdivp
and
inc
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
and
out
call
add
repz
sbb
cltd
or
xor
dec
xchg
push
add
in
jb
cmp
mov
sbb
add
and
xchg
fcmove
fnsetpm(287
nop
pop
add
cmp
sbb
add
and
xchg
ret
ret
in
jb
cmp
and
clc
and
push
jne
lret
in
jb
cmp
sbb
iret
inc
xorb
in
mov
mov
and
enter
mov
sbb
andb
enter
jb
movsl
sub
add
das
cmp
mov
pop
jae
icebp
loopne
lahf
ds
mov
in
pop
sub
adc
push
test
add
rolb
add
dec
mov
insb
push
add
adc
and
fcomps
jo
pop
pop
nop
sub
fs
add
mov
mov
dec
jne
pusha
dec
gs
add
jb
inc
sarb
cltd
call
and
orl
mov
mov
and
nop
orw
rolb
add
gs
xchg
mov
xchg
inc
adc
cmp
pusha
andb
xor
push
test
mov
or
inc
imul
subb
scas
pop
notl
add
outsb
addr16
and
push
repnz
add
sub
scas
or
data16
outsl
add
and
movsb
mov
pop
dec
icebp
add
lods
dec
addr16
or
movsb
data16
mov
xor
sbb
fs
jo
mov
ret
xchg
mov
rcrb
aas
cmpsb
cwtl
js
popa
dec
loope
push
inc
std
add
push
outsb
push
fs
adc
in
orb
pusha
add
xchg
test
aad
pop
add
or
xor
jmp
cmp
xchg
jae
dec
jo
lret
test
mov
outsl
add
push
loope
mov
sub
inc
inc
arpl
adcb
insb
popa
and
cmp
jle
inc
pop
sub
add
push
in
sub
push
lock
rcpps
inc
popa
arpl
add
popf
pop
fadd
inc
jo
je
cmp
insb
enter
stc
movsb
inc
cmpb
popa
add
or
test
xchg
enter
fists
xchg
outsl
dec
fs
sub
mov
ret
inc
jae
mov
insb
pop
mov
mov
cmp
inc
sbb
jg
add
ret
jo
pushl
add
and
mov
shr
div
cli
pop
add
cld
add
push
adc
add
lret
jg
pop
sub
add
call
push
dec
and
pop
and
ret
add
and
add
fisttps
or
dec
lods
adcb
lret
xor
scas
les
adc
scas
mov
aas
mov
cmp
dec
sub
add
cli
rcr
sbb
cmc
add
sub
dec
add
cmp
push
jp
pop
add
mov
add
jne
lods
push
mov
and
add
jbe
pop
push
movsb
fmull
mov
jnp
out
ror
rsqrtps
mov
pop
cmp
jbe
jecxz
mov
repz
add
sub
jno
add
cli
pop
mov
and
test
jb
fdivrs
sti
add
mov
roll
add
rcrb
lods
int3
and
dec
popl
out
adc
adc
loopne
adc
add
or
pop
push
dec
movsb
add
ljmp
int
jp
cmp
ror
test
mov
lds
cmp
repz
andb
jmp
jbe
rcll
or
mov
aas
int3
xchg
pop
fs
add
aaa
dec
clc
insb
into
adc
add
inc
cmc
addr16
cltd
incb
inc
pop
pop
pop
test
es
lods
push
rol
mov
daa
lret
sbb
jbe
add
into
or
subl
mov
loop
mov
cld
xor
fldt
lock
sub
add
adc
movl
aad
and
adc
sub
mov
xchg
aas
add
inc
in
hlt
sbb
mov
stos
jl
jns
in
sbb
dec
jmp
imul
rorl
cmp
xor
lods
test
mov
test
jmp
int3
add
bound
push
push
jb
stos
xor
pop
fchs
xchg
xor
mov
add
aas
xor
call
test
dec
xor
and
cmp
inc
fdivrl
add
jnp
cli
sub
push
mov
and
push
int3
pop
mov
mov
pop
sarb
jmp
xchg
add
jecxz
xchg
arpl
enter
les
inc
jl
ljmp
in
mov
dec
repz
xor
stos
and
adc
pop
inc
test
enter
lea
and
jg
inc
sbb
fwait
dec
cmpsb
sbb
aad
ret
imul
xorb
pusha
loopne
add
xchg
rcrb
clc
out
jbe
iret
lock
sub
mov
xor
paddq
inc
push
rorb
mov
mov
pusha
xchg
sbb
jne
push
dec
dec
lock
xchg
lcall
mov
rcll
mov
out
pusha
dec
lock
add
std
cmp
test
sub
stc
jo
movsl
xor
mov
adc
mov
push
orb
call
pusha
jmp
rorl
and
dec
cld
and
lcall
lock
dec
add
data16
xor
sbb
adcb
push
cmc
jbe
sbb
adc
in
rorb
add
ds
xor
push
rclb
mov
cpuid
test
loope
dec
add
cld
mov
sub
mov
rolb
cmp
xor
lret
and
je
pop
shr
dec
push
cmpsb
hlt
shl
mov
and
negb
mov
mov
out
popf
cmp
nop
dec
outsb
xor
aas
lds
cs
stos
sbb
out
fwait
add
nop
andb
or
mov
push
add
add
imulb
pop
pop
mov
sti
lea
xor
rorb
ret
xchg
adc
faddl
dec
stos
push
mov
clc
dec
rolb
and
inc
jns
add
pop
inc
call
add
or
adc
and
and
gs
or
xor
sub
jg
add
lods
mov
push
pop
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
sub
and
inc
push
add
cs
add
icebp
xor
sbb
inc
sbb
enter
pop
in
add
add
adc
dec
call
mov
into
pop
cld
out
mov
sbb
xor
or
call
add
lods
lcall
jge
clc
in
pop
sbb
es
rorl
sbb
add
add
jo
lret
add
divb
inc
bound
loope
adc
add
dec
and
add
add
mov
add
pushf
sub
push
outsl
cmpsl
shrb
daa
repz
mov
push
mov
and
sub
movsl
add
sbb
add
add
dec
and
push
adcb
and
adc
add
addl
je
xor
ret
pop
sbb
sbb
inc
jmp
sub
xor
lods
call
mov
cmp
or
xor
scas
enter
fists
mov
xorl
cmp
xchg
jne
push
push
sbb
pop
mov
hlt
jae
push
add
xorb
jmp
or
pop
lret
add
mov
adc
add
movsl
xchg
push
add
inc
loop
push
rolb
lods
movb
jmp
clc
sub
or
and
sarl
ja
imul
pusha
cmp
je
mov
add
xorb
add
pop
jmp
loope
cmp
add
adc
adc
orb
add
cmp
sbb
je
add
dec
fsubrl
rcrl
int
cmp
push
xchg
jne
lea
mov
and
repnz
add
or
and
dec
ja
or
jge
in
or
inc
int
inc
jbe
mov
mov
testb
dec
pop
cmpsb
sbb
xchg
adc
push
add
call
add
sub
stos
and
or
cltd
adc
call
stc
inc
add
ret
enter
add
sarb
testl
adc
jo
pop
enter
xchg
mov
inc
or
mov
ret
pop
adc
jne
scas
jg
add
mov
popf
jmp
xchg
dec
cmp
pop
add
push
sarb
sub
push
push
orb
daa
mov
jne
lea
ret
test
jbe
inc
cmp
stos
or
mov
xor
aas
cli
rorb
and
mov
add
jns
testl
xchg
add
mov
xor
jne
into
sarb
mov
add
pop
mov
or
adc
jnp
xchg
xchg
sub
xor
movsb
and
inc
mov
dec
add
mov
mov
add
push
add
xchg
adc
jno
mov
push
pop
lret
pop
add
divb
stos
sbb
dec
loopne
ja
xchg
pusha
pop
add
pop
xor
mov
sub
mov
pop
inc
push
or
inc
test
inc
loopne
mov
add
mov
add
mov
faddl
add
jmp
push
inc
ja
in
sldt
adc
add
dec
mov
cmc
dec
add
inc
mov
mov
cmpl
mov
jne
add
xchg
mov
cmp
out
sub
mov
sbb
repnz
sahf
leave
dec
shll
cld
add
push
stos
fcos
sbb
int
jne
sub
mov
test
arpl
sub
sbb
lret
into
cmpl
fs
add
gs
xor
incb
and
xchg
xchg
cmp
sub
dec
xchg
xchg
movsb
mov
cli
popf
loopne
add
adc
dec
add
add
scas
roll
sub
cmp
sbb
clc
add
dec
outsb
loopne
lea
cwtl
inc
jnp
or
jne
leave
rolb
clc
xor
das
add
jae
xor
push
dec
movsl
test
sub
xchg
fadds
adcb
mov
add
mov
in
or
sub
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
push
iret
pop
pop
or
aam
xchg
xchg
fsubrl
mov
or
fldt
push
popf
jno
cmp
fmuls
ja
jle
scas
pusha
and
sbb
xor
jmp
and
mov
add
pusha
mov
add
pop
push
jl
movb
cmp
or
cli
jbe
inc
inc
stc
addl
add
cmp
sbb
sub
xor
ror
and
stos
add
push
inc
pop
sarl
xchg
push
or
add
push
fdivs
dec
sbb
fnsave
sbb
xchg
inc
pop
cwtl
movb
jo
frstor
adc
sub
add
daa
jecxz
iret
cli
enter
inc
push
jne
addb
mov
push
repz
imul
rcrl
jo
jnp
test
rolb
clc
pop
es
xchg
addl
dec
sub
jne
movb
xor
int3
decb
mov
mov
adc
aad
add
cmp
sbb
fs
daa
cld
test
icebp
inc
negl
test
enter
loopne
pop
add
mov
cs
popf
rcll
call
add
psllw
pop
cld
sbb
enter
cli
clc
sbb
orl
xorb
jbe
imul
lea
addr16
vmovntps
pusha
or
and
xchg
mov
jle
and
jb
js
or
lock
sbb
insb
aas
cld
movl
dec
nop
add
jle
xor
add
aas
incb
jne
push
sub
dec
sub
mov
mov
imul
pop
add
out
repnz
push
test
stc
test
or
xchg
loope
add
push
std
pop
dec
pop
dec
imul
or
jl
inc
roll
mov
xor
add
pop
and
call
hlt
or
clc
and
or
push
push
std
in
in
push
test
jg
add
pop
mov
pop
aad
or
and
scas
jp
loopne
xor
inc
outsb
and
pop
push
xchg
sbb
cmp
add
jl
or
add
jno
imul
adc
add
mov
or
lods
add
lcall
decl
push
cmp
fisubrs
cltd
imul
and
scas
jg
aaa
add
mov
movsb
sub
add
add
dec
mov
add
sub
push
pop
ret
sbb
adc
cmp
add
mov
imul
add
adc
inc
add
fistps
xor
sbb
add
insl
add
es
push
add
dec
mov
lahf
add
iret
dec
xor
push
pusha
in
push
add
insl
sub
mov
faddl
mov
clc
addr16
fwait
cmp
add
mov
or
add
frstor
dec
loopne
or
xchg
push
or
cmp
push
add
sub
and
add
lret
lds
add
pop
and
cmp
call
adc
fstpl
add
and
insl
pop
mov
lock
dec
popa
and
lret
mov
push
test
sub
cltd
cld
jbe
xchg
and
or
ficompl
cli
add
or
xchg
inc
adc
adc
jmp
orb
cwtl
sbb
in
out
rcrb
mov
pcmpeqb
lods
and
sti
inc
outsb
pop
je
add
es
add
idiv
popa
in
in
add
call
in
pusha
sub
inc
jo
bound
lock
data16
add
mov
add
jmp
cmp
or
je
add
mov
hlt
lods
js
push
andb
mov
mov
lea
inc
push
push
lock
add
mov
xor
movb
in
push
je
xor
adc
add
out
call
pmaxub
imul
jecxz
sahf
incl
or
loopne
push
lea
dec
cmp
xchg
add
xchg
cltd
jb
add
enter
in
movsb
add
inc
lock
mov
adc
push
pop
add
mov
sub
bound
stos
inc
cwtl
add
adc
xor
sti
add
cmp
sbb
dec
dec
add
adc
sub
cwtl
and
orb
xor
mov
inc
inc
sbb
sub
in
or
add
mov
inc
jno
enter
and
cmp
imul
les
inc
xchg
pop
cmc
adc
pop
aas
fildll
les
cmp
out
loop,pn
sbb
call
push
mov
inc
add
sbb
mov
jge
pop
add
lods
inc
adcl
aas
js
in
cmp
and
popa
movsb
inc
jecxz
dec
jne
add
subb
jg
in
and
mov
imul
or
and
test
dec
xor
jne
push
and
push
cmpb
in
push
mov
inc
adc
dec
and
add
xchg
add
bound
scas
add
pushf
jns
lds
add
adc
dec
fadds
sti
in
fsubrl
pop
or
addb
xchg
sti
push
inc
add
cli
mov
fsubr
jmp
adc
addb
push
jle
add
jecxz
loop
adc
lahf
add
mov
or
and
orl
movsl
pop
add
call
pusha
inc
aad
sub
pop
add
int3
ljmp
or
inc
add
pop
cmp
add
add
lods
xor
cmp
ja
mov
push
out
sbb
repnz
or
test
or
add
cmp
pop
sbb
inc
or
add
mov
testb
mov
add
cmpl
xchg
dec
orb
imul
push
movsl
adc
pop
pop
push
xlat
adc
into
rclb
and
mov
dec
mov
mov
mov
sub
cmpsb
outsb
add
sub
dec
rorb
xchg
cmp
stos
adc
xchg
aas
jp
sub
jno
xchg
mov
mov
je
jmp
xor
xchg
mov
stc
mov
xchg
les
sbb
jns
lret
jne
add
jecxz
and
add
jns
jnp
ja
add
dec
or
call
mov
mov
test
jo
clc
bound
jb
ss
cld
xchg
sub
cmovne
jo
mov
rorb
push
jnp
sbb
inc
inc
cmpb
scas
pop
mov
call
sbbb
jge
add
adc
enter
add
jne
inc
pop
and
push
sbb
jno
pop
or
pusha
add
cmpb
push
dec
dec
mov
add
sqrtps
test
shlb
adc
inc
and
and
jne
enter
pop
add
sbb
or
inc
mov
test
cld
mov
ljmp
push
push
incl
shll
call
add
mov
jp
add
push
or
loopne
insb
lret
jl
xorl
pusha
popf
add
addr16
cmpb
fadds
xor
or
aam
adc
jg
inc
xchg
movl
jns
mov
mov
push
stos
sub
add
insb
icebp
jne
push
or
pop
sub
sub
daa
rcr
jo
pop
fsubs
jp
add
and
je
add
and
adc
mov
shl
insb
xchg
add
xchg
sub
faddp
xor
cmpsb
cli
mov
pop
inc
rorb
ljmp
fwait
mov
ljmp
mov
pop
int
movsb
cmp
dec
aam
xor
call
add
mov
dec
mov
lds
dec
mov
shl
or
cmc
inc
inc
shr
jne
push
add
lock
add
leave
or
pop
les
inc
add
jne
add
push
cmp
inc
pop
jmp
adc
in
add
aas
ljmp
data16
test
cmc
into
movhps
cmp
sbb
add
add
push
iret
js
fimull
sbb
lods
or
test
add
pop
inc
in
xor
ja
or
adc
cs
mov
and
jmp
or
mov
pop
mov
in
mov
jns
jmp
inc
pop
xchg
add
and
adc
pop
jp
aas
sbb
inc
xchg
add
mov
pop
jg
pop
jnp
lock
fsubs
push
add
je
in
mov
ja
add
mov
lret
lock
cmp
mov
sub
pop
mov
rolb
popa
or
push
pop
ds
add
ljmp
mov
add
sub
add
jae
hlt
out
and
add
mov
mov
adc
pop
pop
int3
loopne
add
jne
add
loope
sbb
out
add
movsl
imul
and
into
add
or
rolb
sbb
mov
xchg
lcall
cmpsb
pop
jns
push
add
imul
lock
add
or
and
push
mov
out
or
adc
and
sub
outsl
leave
or
fcoml
adc
adc
xchg
dec
mov
jl
or
cmp
add
mov
mov
js
add
sub
cli
js
add
push
jmp
sub
add
enter
ja
arpl
jecxz
loopne
loopne
cmp
or
dec
push
les
outsl
js
push
inc
pusha
pop
clc
add
aad
mov
fsubs
add
adc
imul
inc
sti
mov
xor
rcl
gs
sar
into
call
mov
add
mov
mov
jge
mov
or
cmpsl
pop
lahf
bound
pop
mov
mov
fs
or
mov
sbb
sub
push
lock
adc
cmp
sti
arpl
add
out
ja
cmp
cld
cltd
xor
ret
add
sbb
mov
imul
repz
fadds
cld
loopne
push
adc
negl
incb
decl
add
test
ret
cltd
xchg
insb
add
dec
cld
fidivs
push
faddl
loopne
in
sahf
into
fisubl
pop
mov
add
out
pop
add
sbb
xor
adc
int3
inc
inc
pop
mov
jl
add
adc
jne
mov
shlb
mov
hlt
or
xchg
adc
fwait
sub
lea
push
in
dec
pop
sbb
movsb
cwtl
cmpl
sbb
mov
mov
jmp
outsb
sub
push
and
add
jno
xor
rcl
mov
sbb
push
pop
inc
ljmp
into
loope
jmp
dec
lock
add
push
cmpsb
jb
adc
dec
add
ja
mov
jge
sub
call
pop
adc
add
in
jmp
cmpsb
sbb
insl
jp
add
inc
loop
or
call
sbb
lock
add
sub
movsl
push
jbe
es
lret
clc
jmp
and
loopne
imulb
mov
sub
push
add
sub
mov
add
clc
lcall
cmp
add
jle
ja
xchg
jne
das
and
adc
dec
xchg
and
mov
add
into
jnp
cmpb
es
and
add
fildll
dec
xor
sbb
sub
adc
add
xor
or
jne
add
je
mov
in
cmp
push
nop
cmp
gs
sbbb
sub
push
hlt
xchg
add
in
pop
xor
fcomps
loope
mov
test
add
cli
pop
push
out
adc
loop
dec
subb
nop
cmp
adcb
sub
and
loope
add
or
xlat
orb
lock
ljmp
test
and
jnp
aas
and
adc
inc
js
adc
add
jmp
sub
or
pop
mov
or
cmp
lock
pop
lds
popf
add
mov
mov
add
nop
push
loope
pop
dec
fistl
or
add
sbb
outsb
mov
fnstsw
test
xor
ljmp
cwtl
ret
jge
sbbb
or
data16
sbb
sub
adc
jne
cmpsl
cmp
std
sub
movsb
into
pop
pop
jl
lock
add
lahf
adc
adc
sbb
dec
pop
aam
clc
cmpsl
add
pop
roll
xchg
add
jns
mov
or
lret
add
int3
notb
sub
cwtl
fs
inc
add
cli
and
bound
fldl
lea
enter
jl
add
ss
nop
fsub
mov
sbb
sbb
cwtl
adc
scas
lods
adc
mov
jl
loop
adcl
testl
cmp
add
add
push
mov
loop
int
and
loope
add
popf
sbb
pushf
adc
dec
icebp
clc
insl
mov
or
sti
dec
loope
jle
cmp
push
rcrb
pusha
pusha
cmp
and
inc
test
pop
mov
pop
fsts
clc
push
xchg
add
inc
mov
js
add
pop
adc
fcom
mov
pop
dec
ljmp
mov
add
mov
inc
add
jbe
out
mov
add
nop
jns
sbb
xchg
xchg
sub
mov
dec
add
sbb
je
add
inc
mov
xchg
add
call
cmp
les
lock
movsb
sub
test
inc
sbb
fcomps
or
popa
je
nop
mov
loopne
mov
push
add
push
adc
pop
add
dec
sub
jno
dec
mov
mov
dec
rolb
jmp
scas
jae
or
pushf
mov
out
xchg
mov
xchg
arpl
mov
les
cmpsb
jmp
push
xchg
je
xchg
and
pop
pop
inc
inc
addr16
or
into
dec
or
mov
insl
jp
les
nop
add
cltd
xchg
sub
dec
and
sub
shlb
out
cld
lods
add
scas
mov
add
mov
mov
clc
sti
add
mov
das
pop
add
sbb
lock
inc
xchg
add
mov
mov
pop
add
xlat
mov
dec
push
cmp
std
and
stc
or
adcb
xchg
jle
fsts
push
mov
pop
insb
push
add
sub
jne
push
popa
sub
nopl
adc
fidivrs
and
pushf
lods
add
test
mov
add
or
cmp
cmp
xor
loopne
xchg
ret
xchg
cmpb
es
insb
xor
repz
adc
stc
cli
outsb
roll
adc
nopl
ljmp
dec
sbb
mov
clc
call
adc
cmpl
dec
mov
push
push
add
and
into
add
adc
mov
hlt
add
aad
dec
jmp
mov
ja
sub
bsr
cmovl
fsubr
jle
stos
dec
sbb
add
adc
mov
pusha
dec
dec
mov
insb
jno
dec
pusha
pop
and
add
aaa
js
push
loopne
lock
mov
push
dec
call
cltd
xor
add
add
jmp
sahf
jl
jl
sbb
cwtl
gs
lods
sub
adc
cmp
rcl
sub
push
test
les
cmc
jne
loopne
test
add
and
dec
jmp
mov
aas
pop
lods
popf
out
std
mov
call
add
sbb
push
dec
andl
ret
and
mov
xor
mov
mov
call
inc
rolb
and
decb
and
add
and
jb
or
jae
pop
jo
and
add
pop
int3
fdivs
into
dec
lock
add
ljmp
lods
sub
outsl
jno
xor
mov
pop
add
xchg
and
pop
dec
pop
outsl
xchg
hlt
mov
add
sub
or
shufps
sub
cmp
add
jge
fildl
sarb
add
dec
or
mov
and
loopne
xchg
xchg
cld
iret
lods
mov
xchg
push
dec
add
dec
add
test
adc
xchg
dec
nop
and
call
mov
inc
pop
sub
pusha
inc
ret
fldl
inc
daa
mov
inc
shrl
stos
int3
repnz
xchg
push
mov
leave
or
xlat
mov
outsb
inc
add
xchg
xor
cmpsl
hlt
mov
add
xchg
dec
mov
scas
sub
imul
add
inc
pop
jb
pushf
inc
sub
movsb
add
add
popf
inc
shrb
ret
add
test
add
pop
je
lret
addb
mov
dec
mov
movsl
incb
jae
cmp
mov
sbb
clc
cmp
cmpsl
bound
push
shrl
add
jmp
int
push
or
imul
arpl
or
xchg
repnz
pop
int3
add
xor
call
dec
je
add
sti
push
jg
cld
xor
add
or
clc
adc
icebp
push
add
adc
mov
stc
fmul
pop
add
jmp
mov
xlat
push
add
mov
pop
adc
mov
add
inc
mov
es
or
and
rorb
or
add
adc
and
mov
and
inc
pop
shlb
lds
sti
ljmp
xchg
dec
sub
xlat
xchg
nop
jmp
clc
inc
add
mov
das
pop
add
daa
rcll
ror
fists
add
sub
mov
sbb
or
pop
jbe
push
lock
add
jge
dec
clc
adcb
je
add
cmp
pop
dec
add
cld
imul
sub
add
and
insl
inc
ds
push
pusha
mov
cmp
decl
or
add
arpl
rolb
sub
cmp
rolb
daa
lcall
add
mov
cwtl
imul
test
mov
ret
les
add
dec
jmp
into
clc
sysenter
iret
add
enter
sbb
xchg
adc
jmp
mov
push
orl
and
add
or
or
or
or
add
test
das
mov
jns
mov
nop
inc
pop
xchg
sbb
or
or
push
lods
xchg
imul
xchg
cwtl
jl
pop
je
cmpl
jg
mov
movsl
fs
cmp
mov
sbb
push
inc
int3
cmp
or
xor
jge
sub
test
pop
je
rcrb
cmpsb
dec
in
aas
ret
xchg
xchg
movsb
fs
mov
push
rclb
dec
cmpsl
outsl
sub
xchg
mov
xchg
add
shlb
movsb
ror
rcr
daa
fdivs
jg
push
adc
add
enter
xchg
mov
push
add
imul
xchg
adcb
and
and
movsb
xchg
test
repz
mov
and
push
dec
shlb
add
mov
sbb
push
aad
incb
enter
mov
scas
arpl
shlb
out
dec
cld
shl
add
daa
or
movsl
sbb
jae
add
pop
test
cmp
pop
out
popl
pop
rclb
xor
mov
mov
mov
loopne
add
pop
adc
xchg
pop
push
aas
repz
pop
sub
add
sahf
jno
call
mov
call
add
inc
mov
pushf
pop
cmp
mov
fsubs
bound
pop
push
fldcw
jo
mov
push
or
pop
movsb
cmpsl
add
in
mov
lahf
sti
add
sub
push
aaa
add
sahf
mov
testl
pop
aam
in
cmp
or
push
or
es
add
mov
mov
mov
xor
test
lock
movsb
or
in
add
jb
aaa
xor
mov
addb
in
inc
mov
dec
popa
mov
loop
add
xor
sahf
push
aam
add
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
test
xchg
dec
xchg
dec
subb
jg
jne
add
cwtl
test
jl
adc
loope
and
jmp
es
add
or
mov
add
add
cmp
ret
pop
mov
and
add
inc
dec
push
add
nop
xor
add
clc
out
sub
sarl
mov
add
outsl
xchg
enter
dec
and
mul
lcall
mov
push
repz
ds
sub
sbb
pop
ljmp
add
movl
xor
jge
mov
jo
jne
add
rol
dec
faddl
repz
pop
orb
dec
and
add
and
mov
imul
or
jne
sbb
sbb
xchg
pop
mov
fwait
jae
add
mulb
std
push
leave
dec
in
bound
pop
aas
xorl
adc
cs
repnz
shll
sarb
cmp
sub
lock
add
pop
inc
inc
jmp
lcall
sub
cmp
mov
or
add
sbb
adc
push
lret
cli
cmc
sbb
dec
jnp
insb
pop
rclb
jmp
in
add
orb
sub
add
jne
mov
loop
jnp
test
add
bound
in
inc
js
xchg
jge
lea
mov
add
jmp
pusha
aad
sub
xchg
arpl
stc
aas
mov
add
mov
daa
and
pop
add
mov
mov
push
jecxz
sub
daa
sbb
mov
pop
inc
and
popf
test
sub
sarb
pop
cli
jbe
cmp
movsb
nop
xor
mov
sub
add
adc
rolb
adc
inc
pushf
jns
loope
push
fiadds
pusha
gs
push
clc
lock
pop
mov
dec
loopne
shll
add
flds
and
bound
fcoml
sub
call
xchg
mov
lods
ror
push
or
call
loop
xchg
roll
add
paddusb
addb
stc
push
add
shlb
mov
pop
dec
push
add
dec
jno
sbb
cmp
mov
or
sub
iret
ret
in
pop
or
inc
push
lock
mov
add
call
add
fdivs
inc
mov
fs
cmp
mov
out
jo
sbb
aam
dec
or
inc
jmp
stos
sbb
test
mov
aas
icebp
dec
cmp
sub
adc
aaa
xchg
xchg
jle
iret
add
cmpsl
xchg
test
scas
enter
jle
add
in
add
sbb
inc
daa
or
xlat
mov
fwait
mov
sub
add
or
dec
or
push
aad
sbb
fsubr
push
add
sub
icebp
inc
add
sbb
dec
mov
push
lret
xchg
in
sbb
or
hlt
ss
add
faddl
lea
loopne
in
push
xchg
xchg
rol
mov
sbb
inc
sbbb
js
mov
cmp
in
inc
adc
rclb
or
roll
lock
int3
pop
push
adc
sub
cmp
mov
xor
enter
sbb
arpl
mov
xor
push
sub
sbb
les
aas
and
into
mov
cmp
adcl
nop
repnz
cmp
loopne
sti
add
and
adc
hlt
mov
push
pmulhuw
adc
aad
stc
or
and
popf
jno
push
nop
pop
dec
cltd
mov
fistpl
cmp
aas
das
fs
cmpsl
test
add
pushf
add
mov
add
popa
call
jo
dec
push
pop
mov
xchg
mov
xadd
nop
add
aam
test
jecxz
adc
add
pop
jp
add
movsb
sub
mov
inc
imul
or
mov
inc
or
loop
cmp
xor
and
sub
mov
push
sbbl
inc
dec
adc
push
movsl
scas
cs
add
jae
inc
jb
enter
popa
jle
sbb
inc
mov
add
ret
xchg
xor
add
lock
mov
dec
fbstp
adc
and
ret
mov
enter
xor
adc
mov
cmp
es
adc
ret
cwtl
mov
sub
and
mov
mov
push
es
inc
sahf
jo
enter
push
xor
pusha
adc
and
sbb
push
dec
inc
stc
aas
pusha
xor
inc
rcr
icebp
loop
mov
loopne
je
sub
mov
xchg
inc
and
cmp
sbb
mulb
inc
adc
add
or
sub
add
sbb
and
add
aaa
or
sbb
stc
adc
in
cmp
add
dec
adc
call
xchg
dec
or
fbstp
sub
xchg
add
insb
cwtl
fcompl
call
xor
cmc
pop
aam
pushf
into
xor
scas
cld
inc
cmp
cmpsb
fcoml
enter
les
xor
repz
aas
sbb
rorb
sbb
out
dec
enter
lods
in
cmp
test
cmpsb
inc
inc
movsb
sub
push
mov
pushf
mov
cwtl
aad
sahf
push
xchg
cltd
mov
mov
or
dec
mov
and
xor
xchg
sbb
js
mull
je
sti
sbb
xchg
and
cmp
or
test
call
daa
lock
add
jo
aas
adc
dec
add
inc
pop
pop
es
sbb
stc
mov
adc
jns
lock
cmp
jmp
push
shlb
loopne
jp
mov
add
push
repnz
xchg
cmpb
jb
add
mov
mov
fadd
test
push
xor
enter
lahf
sbb
scas
cmp
jmp
shll
orl
pop
adc
ret
or
or
repz
add
adc
mov
push
inc
mov
add
mov
adc
mov
xchg
jb
and
lock
mov
popl
adc
stos
push
insl
fs
dec
pop
mov
cmp
or
jg
cmp
std
jl
or
gs
dec
stos
movsb
test
mov
flds
and
mov
sbb
mov
je
loop
clc
orl
push
and
pusha
movsl
pop
aas
sub
sub
xor
push
add
sub
add
sub
dec
add
movb
add
add
add
mov
out
push
in
add
add
xchg
add
clc
nop
jge
mov
cmc
repz
xorb
add
fdivl
divl
pop
clc
iret
addb
test
in
inc
add
stos
cmp
fcoml
pop
jae
andb
cli
adc
push
loop
outsl
dec
mov
add
sub
dec
fcmovnu
jnp
lock
add
add
repz
faddl
mov
dec
je
add
hlt
mov
push
xor
ljmp
or
aas
jae
or
jo
daa
add
iret
es
pusha
pop
xor
and
and
jo
add
fnstenv
add
int3
fldl
lea
pushf
fwait
push
mov
mov
rorl
cmp
push
push
add
cmp
add
les
and
inc
loop
scas
push
ret
rolb
das
test
add
pop
dec
jl
divps
sbb
or
and
sub
sbb
in
inc
add
dec
out
loope
sbb
in
mov
cli
add
push
cmp
call
xor
add
xlat
jne
cltd
rclb
pop
fnstcw
add
pop
or
fldl
xchg
decb
sub
or
jmp
add
dec
cmc
sub
clc
dec
call
pushf
add
mov
jg
divb
mov
mov
shrb
data16
call
je
sbb
in
inc
mov
jne
and
lds
sbb
add
ficoms
xor
mov
and
pop
push
sbb
xlat
je
cmp
lock
addr16
adc
clc
jo
add
jecxz
lods
cmp
cmp
and
and
and
out
add
in
xor
or
test
pusha
shrb
sbb
imul
out
pushl
test
orl
pop
mov
push
clc
xor
and
call
cs
sub
lret
jecxz
pop
and
xor
inc
cmp
outsl
ss
add
inc
inc
add
sar
neg
jns
lret
fadds
pop
adc
ja
add
mov
and
jno
sbb
cmp
in
pop
add
jo
sti
jmp
int3
pop
call
mov
fdiv
sub
shl
movsb
jp
add
or
inc
pop
ret
add
sub
jmp
incb
cmpsb
mov
bound
sub
je
xor
faddl
lock
pop
nop
pop
add
sub
cld
out
clc
add
repz
add
xchg
push
and
inc
enter
add
les
mov
es
add
aas
hlt
push
es
inc
or
add
lods
sbb
movsb
stc
mov
add
push
mov
out
push
iret
lea
pop
cs
gs
or
mov
sbb
add
decl
jne
add
or
xor
add
in
adc
inc
pusha
jo
xchg
nopl
or
push
loopne
xor
cwtl
data16
or
cwtl
sahf
mov
and
adcl
add
mov
leave
repnz
lea
mov
add
sbb
mov
dec
add
shll
movsl
arpl
add
lcall
dec
and
cmp
add
lcall
sbb
orl
add
adc
inc
fcomi
jmp
cs
imul
sar
lret
inc
lock
test
loope
dec
xchg
shll
cld
fildl
sub
dec
fldl
push
sbbl
add
jae
push
out
clc
loopne
dec
jne
add
mov
in
frstor
call
sbb
add
bound
jmp
xor
mov
jns
xchg
add
sub
pusha
add
cmp
jae
pop
in
pop
sbb
and
dec
sbb
or
cmp
add
adc
data16
cmpsb
sub
add
pop
push
mov
sbb
and
push
xorl
xor
ljmp
push
data16
into
add
enter
test
mov
test
jns
popf
or
popa
add
sarl
pusha
testb
mov
sbb
or
add
mov
loopne
jae
repnz
push
and
and
adc
lock
fildll
xlat
mov
ret
fidivl
test
add
lods
repnz
fwait
test
adc
sbb
or
pop
ret
les
jne
mov
pusha
lret
jmp
test
adc
xor
add
mov
ljmp
pop
add
adc
pop
aad
cmpb
shrl
idivl
seta
sti
push
aad
pop
dec
push
inc
lock
rcrl
cmp
out
mov
out
call
sarl
jmp
lds
add
xchg
cmp
sbb
add
sub
adc
cmp
add
je
sub
fbld
add
inc
sbb
pop
sub
rclb
inc
cmp
pop
cld
adc
ret
or
pop
jl
add
push
add
fchs
movsb
jbe
add
fistpll
jmp
fistpl
test
sahf
jo,pn
pop
or
add
adc
test
ret
lods
xor
dec
mov
cmp
or
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
fistpll
adc
mov
aas
or
addl
call
aas
addb
xor
sbb
push
add
adc
jp
and
or
and
mov
in
aam
insl
orb
scas
add
pop
out
or
lock
dec
adc
inc
inc
and
adc
vmwrite
or
test
inc
add
clc
fs
sub
loopne
xor
add
mov
cmp
mov
lea
add
enter
sbb
pop
and
ror
test
xor
jno
jo
cwtl
add
cmp
add
aas
mov
xchg
mov
mov
test
cmp
inc
into
push
ret
adc
fidivrs
and
inc
mov
pop
push
or
sti
sub
ljmp
mov
hlt
xor
fninit
push
imull
rorb
sarl
roll
loopne
add
jno
fucomi
cmpsl
add
loop
cmp
popa
sub
lods
pop
add
fcomip
sarl
mov
cwtl
in
xor
or
xor
mov
jne
dec
iret
fdivr
imul
pop
repnz
divb
arpl
sub
roll
sbb
add
push
dec
addb
jp
add
clc
cmp
ja
and
add
adc
cli
add
jl
push
shl
lock
push
dec
and
jmp
and
setle
jns
add
int3
add
add
mov
or
dec
cs
roll
outsl
movsl
fisubs
mov
push
add
xlat
or
gs
push
ret
sub
jmp
mov
add
pop
push
mov
lea
loopne
add
jmp
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
rolb
jmp
stos
sub
cmp
dec
jne
movsl
push
rclb
push
jecxz
jbe
push
pop
stos
loope
inc
mov
mov
mov
mov
imul
test
sub
clc
dec
add
pop
adc
shrb
or
and
push
mov
daa
lret
loopne
fsubrl
fsubr
js
push
push
enter
sub
aam
sbb
mov
dec
ret
mov
mov
popa
pop
inc
add
jle
testl
or
add
cmp
xor
add
idivb
xor
cmp
add
dec
jne
add
data16
mov
hlt
add
bound
testl
mov
mov
xor
dec
push
jbe
pop
movsl
das
popf
orb
and
dec
aaa
add
inc
pop
and
int3
xchg
fptan
adc
jp
push
loop
icebp
sbb
add
push
mov
adc
cmpsl
lock
cmc
mov
and
and
add
cmp
add
shll
sub
bnd
pop
movsb
xor
sbb
sub
in
add
sti
bound
iret
pop
dec
in
lret
sbb
jl
mov
add
mov
and
test
xchg
push
scas
jb
pop
pop
xchg
pop
sub
pusha
cmp
aaa
shrb
push
fisttpll
xchg
and
jb
sahf
nop
mov
daa
pop
cvtpi2ps
in
addb
jg
jp
cmp
xchg
stc
repz
xor
scas
jge
test
daa
inc
clc
add
jno
aas
jmp
add
inc
adc
add
push
outsl
add
out
ljmp
inc
jnp
cmpb
and
mov
test
xor
add
loopne
in
mov
gs
push
mov
pop
mov
out
jl
inc
inc
mov
in
hlt
pop
cmp
and
mov
sub
int
xor
movsl
and
ror
sbb
mov
jl
mov
push
sub
popf
movsl
mov
adc
jl
in
punpckldq
fisttpll
add
dec
add
mov
jle
add
ret
fimuls
std
sahf
call
inc
outsl
dec
adc
and
lock
mov
ret
add
add
inc
or
sbb
dec
jne
daa
inc
xchg
mov
add
add
cmpsb
shlb
jmp
iret
push
add
mov
movsb
add
add
mov
add
inc
cmpsb
push
push
adc
add
or
sbbb
cs
stos
js
daa
jge
test
adc
add
push
pop
leave
jl
adc
add
roll
mov
xchg
adc
insb
mov
enter
ss
mov
add
inc
cld
std
xlat
add
push
lds
add
dec
mov
jb
add
movsl
iret
mov
adc
add
jle
andb
cmp
scas
das
loope
pop
xor
mov
pusha
test
pop
and
add
call
jp
jno
add
mov
jns
call
add
jecxz
pop
push
sub
in
cmpsl
lret
push
push
inc
lods
aam
jno
ret
adc
mov
add
mov
popf
jb
add
cld
xor
dec
add
push
add
xor
mov
jmp
mov
sbb
add
push
fdivs
or
xor
xor
push
add
xor
inc
fimull
pop
aad
not
popf
pusha
push
jge
dec
and
cli
rolb
or
push
repnz
addl
cmpsl
aam
and
sub
pop
jg
pusha
adc
push
xlat
mov
inc
jo
xchg
sub
add
push
rol
add
jl
jg
mov
or
push
add
inc
mov
adc
cmp
sub
lds
rclb
shr
ja
in
cmp
pop
inc
out
stos
rorb
hlt
sub
in
sbb
xchg
or
sbb
adc
ret
jmp
sub
stos
add
push
pop
shrb
idivb
add
ror
pop
inc
add
cmp
xchg
pop
rcrl
inc
push
fistps
mov
shl
mov
in
push
push
cmpsl
mov
mov
andb
faddp
lret
add
test
mov
xchg
rclb
or
add
mov
jecxz
ret
add
mov
inc
pop
mov
add
and
cmpsl
xchg
pop
add
test
fldl
les
imul
jl
clc
divb
add
ret
xchg
stos
lcall
les
mov
jae
setne
mov
call
lahf
inc
mov
incb
inc
dec
inc
cwtl
repz
xchg
das
jge
into
and
jbe
dec
negl
movsb
cmp
pushf
pop
push
and
daa
lds
pop
add
lods
and
or
int3
and
pop
add
repz
inc
addr16
cmp
sbb
lds
push
cmp
das
repnz
rorb
decb
sbb
lds
mov
jo
inc
add
xor
and
sbb
stos
mov
movsb
and
dec
pop
xor
in
mov
add
test
adc
adc
dec
pop
cltd
add
mov
mov
or
repz
vpsrld
jb
push
and
push
cld
jge,pt
les
push
mov
mov
lret
push
xchg
int3
dec
xor
aam
neg
and
fsubl
mov
cmp
dec
loopne
pop
popf
or
add
imul
ja
fstpl
jbe
sbb
f2xm1
movsl
data16
mov
int3
add
cld
cmp
rcrb
jg
je
jp
mov
mov
add
pop
dec
jle
mov
sub
jb
add
dec
adc
cmc
jmp
clc
xor
pop
mov
ret
mov
fdivl
addr16
mov
xchg
push
xor
mov
jp
xchg
roll
xchg
xor
orl
dec
jb
repnz
fisubrs
imul
sbb
push
inc
popf
push
mov
std
jmp
jo
or
popa
stc
pop
add
mov
xchg
js
and
or
and
and
loopne
stos
add
inc
sub
lret
enter
mov
add
fimull
test
add
xchg
mov
dec
stos
repnz
add
xor
pushf
sbb
test
push
xor
cwtl
outsl
shll
aas
add
mov
stos
add
in
xor
cmp
add
add
mov
sub
clc
push
dec
jge
test
and
dec
adc
push
jb
mov
das
and
adc
and
fcmovne
add
jnp
hlt
pop
or
sub
pushl
add
push
lret
jecxz
aad
and
add
into
mov
sbb
cltd
xor
xor
in
lock
fcoml
or
mov
inc
or
je
add
leave
mov
sbb
lahf
mov
add
jnp
pop
sub
lahf
imul
or
add
add
mov
mov
cmpl
lock
test
inc
sbb
clc
aad
jl
loope
leave
pop
pop
imul
shl
adc
ret
inc
or
pop
movsl
lock
jle
add
icebp
or
ud2
dec
or
add
mov
js
add
pop
pop
loop
ficoms
icebp
fsubr
fs
lret
mov
xchg
push
add
std
scas
mov
pop
xchg
imul
add
push
cmp
dec
jae
sarb
das
cld
add
adc
mov
inc
je
jg
push
leave
adc
pusha
push
jns
xchg
imul
push
jne
mov
add
in
jbe
jns
add
sbb
xor
add
sbb
mov
mov
sbb
or
or
aas
push
mov
test
add
dec
int3
push
sarb
inc
loopne
dec
push
sbb
test
pop
sub
pop
je
nop
cld
movsl
jo
mov
add
jne
sbb
setb
push
outsb
adc
int
or
inc
ljmp
sub
fcomp
and
clc
pop
add
or
jo
xor
cld
out
pop
test
arpl
out
add
pop
cli
mov
add
sub
jae
sub
sbb
mov
or
xchg
loope
mov
adcb
pushf
dec
mov
sti
adc
into
cmp
mov
pop
adc
mov
mov
rcrl
jecxz
into
sbb
xor
mov
addb
pop
add
jno
push
push
mov
test
pop
movsb
mov
pop
cld
cmp
hlt
or
add
test
push
cs
pop
cli
ret
add
xchg
add
xlat
dec
or
sbb
aas
dec
and
das
adc
ss
mov
xor
or
dec
xor
mov
sub
pushf
lea
ret
and
inc
cwtl
add
and
mov
add
mov
les
add
lods
dec
mov
add
ret
int3
inc
add
push
cld
lret
xchg
pop
push
jo
inc
lcall
mov
fwait
es
iret
pop
push
add
sahf
bound
jmp
jno
movsb
mov
clc
hlt
insb
add
pmuludq
test
pop
int3
dec
rolb
mov
xor
movsl
out
cs
rcrb
add
pop
fsubrl
add
inc
or
aam
mov
push
fcomps
sub
jb
sub
jge
dec
or
testb
cltd
mov
mov
xor
push
add
dec
mov
and
push
ss
sub
inc
pop
add
inc
xor
je
add
add
or
cmpsb
push
xchg
add
pop
mov
bound
xchg
push
mov
mov
add
mov
sub
cmp
add
or
cmp
rolb
imul
sbb
dec
and
ficomps
xchg
push
scas
pop
push
sti
js
pop
nop
push
aad
jp
add
cmp
cmp
subb
sbb
shlb
out
and
incb
cmp
mov
loopne
jl
mov
cmpsl
aam
shlb
xchg
sub
pop
add
mov
loop
repnz
jnp
inc
add
jge
dec
cltd
ss
add
mov
dec
mov
fsubs
incb
jnp
inc
pop
gs
clc
cld
pop
inc
add
mov
and
in
dec
ret
push
lret
add
cmp
clc
add
and
arpl
fneni(8087
or
scas
add
cmp
hlt
add
add
fsubrl
mov
sarb
cwtl
lods
add
mov
and
addr16
lods
or
fiaddl
mov
int3
sub
xchg
clc
enter
lea
add
loop
fildll
adc
mov
testl
and
push
lea
sub
pusha
add
aam
loope
scas
and
in
mov
jne
aad
mov
cmp
mov
sub
mov
sub
adc
pop
adcb
push
std
sub
push
sub
mov
add
lret
add
sbb
push
rcl
pop
data16
jne
mov
les
mov
mov
in
ror
cmpsb
adc
sahf
lods
ljmp
adc
xchg
cmp
and
mov
cwtl
fstl
adc
pop
pop
add
icebp
popf
xchg
es
popl
movsl
jg
xchg
sub
movsb
lods
adc
push
add
jbe
enter
popa
lock
xor
sbb
add
mov
sbb
push
in
adc
pop
clc
jno
add
sbb
lock
add
mov
rcrb
xchg
clc
add
inc
mov
imul
repnz
add
push
push
cmpsb
add
pop
insl
push
mov
mov
sub
pushf
sbb
cvtps2pi
fcomp
test
jns
and
lock
mov
fsubs
mov
add
addr16
push
std
ret
ficomps
sbb
add
test
cmp
mov
icebp
add
add
pop
repz
pop
movb
add
cmp
add
jb
loop
hlt
add
cmp
cwtl
js
clc
xor
cmp
fiaddl
pop
cmp
pop
aas
hlt
mov
pop
mov
call
test
pop
add
adc
aad
mov
pop
add
lea
addr16
add
mov
outsb
mov
xchg
iret
push
add
fmull
sahf
in
int3
nop
adc
mov
dec
lock
push
cli
cs
add
cmpsb
sbb
xchg
mov
rolb
add
push
push
dec
and
add
mov
sbb
or
imul
add
std
cli
or
addr16
push
push
or
cmovae
and
ret
jmp
inc
push
mov
bound
mov
adc
orb
stos
add
ja
fisttpll
call
shlb
push
add
mov
pop
les
stos
add
add
mov
add
les
add
iret
pusha
test
xchg
add
jg
add
jbe
cmp
je
or
adc
mov
cmp
mov
push
adc
push
rcrb
pop
sub
cmp
or
inc
or
mov
adc
add
mov
lret
inc
faddl
add
out
cs
sbb
or
pop
jne
in
shll
cmp
jge
add
incb
sub
sub
or
add
xchg
mov
ljmp
icebp
pop
push
cmp
or
inc
push
cmp
xchg
test
fildl
jmp
in
ffreep
ss
cld
pop
sbb
mov
inc
leave
xchg
aas
mulb
sbb
fistl
data16
pminub
xchg
lock
jb
xor
jae
mov
jbe
mov
cmp
lods
add
ja
dec
push
test
imul
add
push
pushf
adc
out
xchg
add
push
add
cwtl
ret
mov
ds
les
add
push
push
and
mov
and
xor
sub
or
or
ja
out
outsl
sbbl
dec
int
and
sub
xchg
push
add
repnz
cmp
jb
imul
dec
add
rolb
or
pop
or
je
mov
sbb
xchg
mov
dec
scas
dec
add
or
icebp
stos
pusha
aaa
inc
add
push
xor
add
fwait
jbe
mov
adc
aaa
movb
adcb
orb
test
dec
jle
add
popf
sbb
loope
fwait
add
xchg
pop
adc
pusha
ja
or
adc
sbb
push
and
test
add
jge
xchg
push
adc
into
stos
mov
sbb
push
rclb
shl
sbb
add
dec
scas
std
sub
jg
or
test
mov
pop
clc
test
sbb
push
ds
fbld
or
mov
lods
inc
mov
mov
adc
mov
cmp
sub
test
sbb
add
and
xor
adc
hlt
les
pop
enter
pop
sub
or
cmp
push
jne
inc
xor
sbb
sbb
pop
add
ret
notb
mov
push
cmp
cwtl
ror
orl
push
pusha
rolb
add
inc
cmpsl
fldl
adc
push
cmc
or
xchg
adc
jo
sub
add
push
adc
test
mov
inc
push
add
daa
adc
pop
test
push
fidivrs
add
adc
scas
mov
dec
mov
pop
push
fiadds
repz
fcoms
mov
jno
add
xchg
nop
fisubrs
js
imul
push
jp
pop
mov
inc
test
xor
sub
sub
adc
daa
nop
add
loopne
jl
jno
clc
aaa
push
or
add
jecxz
or
in
mov
cmp
or
aam
lock
push
inc
add
je
insl
add
imul
mov
or
call
mov
sub
out
fistps
cwtl
jno
rclb
mov
test
mov
pop
add
add
push
or
add
inc
jmp
ljmp
add
rorb
cmp
jle
cli
sub
sbb
jg
cmp
in
add
jb
jne
push
cld
notl
arpl
sar
cmpsl
pop
outsl
add
fcoms
addb
flds
repnz
mov
loope
adc
ljmp
loop
sbb
add
mov
add
lods
sbb
cltd
adc
mov
aas
mov
or
subb
sbb
add
jg
adc
insl
push
test
sbb
fwait
mov
in
add
addr16
rcrb
scas
add
add
jle
shl
out
mov
mov
pop
sarl
add
mov
add
jb
iret
sbb
add
das
in
mov
add
inc
jbe
mov
cmp
pop
pusha
les
lock
push
add
mov
std
add
in
mov
or
sbb
in
lds
pop
test
daa
andl
les
add
xchg
fstpl
fwait
cmp
mov
inc
pop
and
push
out
loop
xchg
lds
jns
cmp
aad
popf
movsl
loope
jo
in
data16
ljmp
or
sbb
pop
sub
inc
xchg
and
aam
and
out
addb
cmp
pop
mov
add
xor
incb
les
jae
popl
fsubrl
xchg
mov
push
mov
sub
jp
fsubl
lcall
xchg
pusha
adc
mov
cli
aas
out
add
call
outsl
icebp
add
inc
inc
mov
pop
pop
out
mov
stos
cmp
mov
cld
jmp
add
mov
or
jge
test
sbb
pop
push
cwtl
pop
add
mov
sbb
adc
dec
es
or
pop
add
and
test
hlt
movsl
push
pop
dec
push
dec
and
jmp
test
jp
add
aam
dec
movaps
std
rclb
pop
add
stos
push
insl
add
push
add
jle
add
in
xchg
adc
cld
fcompl
add
mov
push
add
cmp
es
jmp
inc
xchg
push
add
dec
add
inc
inc
scas
sbb
mov
rcrb
pop
call
adc
daa
push
dec
mov
inc
movb
sbb
add
push
clc
add
pop
xchg
arpl
rclb
cmp
add
jns
pop
lock
inc
add
add
add
mov
add
inc
push
fstps
cmp
daa
pop
sbb
js
jmp
ds
idiv
add
or
xchg
icebp
shlb
add
xchg
decl
stos
and
jmp
cmpsb
or
movl
ret
mov
rcl
jge
mov
push
cmp
add
or
stos
jns
add
adc
add
leave
cmpsb
movsl
cwtl
and
or
enter
pop
fcoms
outsb
loope
std
jl
xor
ljmp
js
pop
out
movsl
add
add
jg
test
mov
sarb
mov
sbb
repz
and
inc
add
sub
loopne
stc
sbb
mov
out
xor
loopne
addl
je
fs
add
ljmp
shl
sbb
fld
or
ja
jne
add
nop
roll
adc
fdivr
add
mov
in
add
dec
test
inc
in
aas
cmp
pop
pop
pop
mov
inc
jo
jmp
xchg
les
and
test
xchg
xor
inc
sub
jl
test
xor
adc
pop
sub
inc
or
mov
xor
int
mov
xor
enter
or
pusha
pop
pop
dec
jle
push
dec
ss
subb
sbb
inc
in
icebp
imul
xchg
mov
inc
pop
jno
push
push
je
xor
jb
loopne
xchg
add
sbb
addps
jo
cmp
sub
lahf
xchg
mov
xchg
sbb
rol
stos
mov
add
pop
in
add
dec
fld
bswap
movsb
pusha
lahf
push
add
mov
jg
adc
pop
dec
push
outsb
sahf
in
rolb
xor
pop
out
mov
or
add
lcall
add
test
jle
xor
inc
add
in
lea
cwtl
mov
daa
jo
fs
lock
mov
and
push
cmovo
pop
sti
call
mov
add
cmp
add
loopne
shl
int
add
xchg
mov
fdivr
and
push
or
jo
add
add
scas
mov
cmp
xor
movsb
jmp
stc
cmp
cld
jmp
loop
push
neg
xchg
add
xor
adc
sbb
das
icebp
lods
cmp
ret
addb
fists
jmp
or
push
add
cmp
je
inc
push
in
adc
loopne
ljmp
sbb
add
and
jae
or
adc
popf
mov
jne
inc
sub
push
movl
int3
jb
push
add
xchg
jmp
and
fldl
lock
dec
lret
xor
add
add
pop
add
stos
jg
data16
popa
cmp
xchg
int
push
adc
add
ret
mov
or
jmp
sub
push
sub
leave
je
iret
enter
xor
mov
popf
repnz
and
or
add
push
jle
in
loop
ficoms
inc
cmp
xor
mov
and
insl
dec
iret
xor
jae
add
call
jge
pop
mov
push
inc
scas
push
test
enter
or
mov
dec
push
pop
push
shlb
add
cmp
adc
xor
les
cmp
cld
fisttps
mov
cld
cs
jbe
inc
jl
adc
call
and
dec
addl
fldcw
xor
fistl
add
lahf
cld
lods
mov
sub
mov
jmp
popl
and
imul
test
psubsw
lret
xor
jmp
mov
shll
add
adc
inc
loopne
dec
addr16
add
sbb
lods
xchg
popa
lret
or
mov
mov
or
rclb
sub
mov
test
or
and
cmp
bound
sbb
or
xchg
adc
or
movsb
rcll
inc
mov
pop
add
xor
enter
xlat
mov
add
jl
sub
add
add
dec
adc
push
test
sbb
inc
lock
imul
imul
sti
jl
dec
mov
das
add
mov
pop
movl
inc
orl
add
fsubl
outsb
cwtl
pop
cmp
xor
add
loope
rol
pop
pop
mov
pusha
pop
cwtl
mov
shlb
stos
inc
mov
addr16
and
bound
nopl
rolb
dec
lock
inc
loopne
aas
add
inc
add
cmpb
testl
outsl
sub
add
and
dec
jns
push
ljmp
push
adc
xchg
add
xor
call
fildll
mov
pop
mov
add
dec
inc
adc
rorl
xor
pusha
mov
and
das
add
cmp
xchg
add
in
add
pop
in
add
mov
call
push
jle
add
test
mov
adc
inc
sub
sub
cmp
pop
sub
add
popf
loope
pop
je
add
dec
sbb
jmp
push
add
jge
dec
xor
pop
push
ret
adc
roll
sub
lcall
roll
lret
lahf
add
nop
cmc
jl
std
xor
add
and
xor
shrl
iret
aam
dec
mov
bsr
pop
and
aas
pop
add
and
imul
dec
adc
clc
iret
shll
stos
shl
mov
add
int
out
xor
add
push
inc
or
jl
std
mov
push
add
test
shrb
repnz
adc
sub
xchg
add
mov
and
repnz
sbb
inc
xor
jno
jo
add
popf
xor
jmp
call
imul
inc
mov
adc
scas
add
inc
test
out
repnz
inc
sub
xor
stc
jo
adc
sub
sar
xor
and
adc
add
les
popa
jge
xchg
jno
cwtl
std
mov
loop
icebp
cmp
rorb
adc
and
or
mov
in
mov
sub
imulb
add
nop
adc
adc
add
inc
mov
rolb
in
xor
add
pop
add
push
shll
dec
hlt
rolb
cltd
mov
add
cmp
rsm
enter
xchg
adc
iret
inc
mov
add
sti
inc
adc
movsl
mov
add
adc
test
add
inc
hlt
and
or
adc
add
lods
xchg
and
stos
and
out
mov
dec
jg
sbb
enter
sti
shl
add
add
and
or
jmp
add
add
loope
xor
sbb
add
cmp
pop
aaa
ret
divl
cmc
add
or
xchg
rolb
adc
out
les
add
sbb
pop
fmuls
cs
std
loop
out
jmp
mov
jg
icebp
je
cmc
sbb
add
mov
or
dec
xchg
sub
fld
pop
outsl
addr16
inc
xchg
mov
pop
and
lea
jecxz
jnp
add
add
ljmp
addr16
adc
mov
jno
xchg
mov
fnstenv
add
or
hlt
pushf
sub
or
popa
popf
insl
mov
inc
adc
xchg
cmp
in
mov
or
lds
nop
cmp
add
mov
pop
mov
add
add
scas
jns
pop
popf
mov
mov
aas
std
jo
mov
cld
xor
shufps
incb
sbb
out
cli
add
mov
fiaddl
cmp
dec
negl
loopne
xor
out
inc
aam
jmp
sbb
add
jno
pop
adc
cmp
rcl
fldenv
jmp
movsb
iret
inc
in
ret
faddl
mov
push
cmp
add
aam
nop
or
gs
lods
roll
mov
out
and
add
hlt
inc
fld
or
int3
push
out
outsb
mov
clc
test
add
xchg
ljmp
inc
call
sub
add
push
sub
cmp
leave
cmpsl
adc
xchg
stos
imul
mov
invd
pop
adc
xchg
cwtl
loopne
jmp
lock
push
ljmp
sub
cld
pop
pop
add
iret
mov
or
sbb
test
test
jge
add
dec
mov
cmp
pop
loope
test
and
js
loopne
pop
jle
inc
outsl
icebp
loopne
and
add
out
sbb
fld
inc
stc
mov
rcll
mov
xor
mov
pop
push
les
insb
sbb
or
sbbb
sbbl
hlt
xor
sbb
add
or
mov
mov
push
xor
roll
xlat
mov
xor
outsb
popa
cmpsb
jp
add
insl
arpl
outsl
xchg
jo
ret
and
inc
add
loope,pn
xchg
pop
push
js
add
fstpt
aas
push
rcr
adc
add
cli
push
jno
adc
and
push
fs
mov
ud1
fdivs
xlat
scas
cli
notb
mov
sti
js
add
and
testb
jns
mov
dec
stc
mov
enter
or
ljmp
in
lea
adc
sbb
test
push
xlat
push
adc
and
pop
sti
addr16
jp
loopne
jg
fisttps
mov
xlat
aas
xchg
fstpt
pop
popf
sbb
add
jp
and
or
les
or
pop
adc
inc
dec
xlat
popf
and
or
subb
and
faddl
add
int3
xor
sub
addr16
xchg
xchg
fdivrs
adc
xchg
fnclex
push
add
insb
fldl
enter
xchg
out
xor
add
xor
add
push
and
adc
pop
and
add
xor
inc
lahf
cltd
insb
add
cs
adc
or
add
xchg
ljmp
mov
and
out
aam
lods
addl
insb
mov
aaa
dec
xor
or
sbb
repnz
jbe
iret
hlt
movsl
add
or
cs
daa
push
test
add
and
adc
adc
leave
les
js
and
mov
lock
cmp
adc
and
addr16
mov
aaa
or
adc
aaa
sahf
lret
xor
and
add
idiv
clc
out
leave
xchg
add
or
sub
add
iret
push
in
or
les
fwait
adc
je
mov
repnz
cmpsl
xlat
dec
flds
cmp
mov
clc
cli
inc
pop
cmp
and
and
lock
lret
xchg
sub
or
cli
popl
mov
or
lea
lcall
les
jmp
sti
andl
btr
movsb
in
pop
rorb
dec
add
sub
repnz
sysexit
add
cmp
push
add
in
sbb
call
inc
and
add
hlt
adc
fidivl
loopne
ror
or
jmp
mov
cmp
adc
test
push
lds
and
cmp
loop
jns
in
jge
cmp
adc
cmp
dec
dec
sbb
inc
dec
int
add
and
bound
pop
incb
sbb
xor
add
enter
repnz
jg
lea
inc
xor
and
in
push
or
inc
cmp
adc
and
dec
gs
push
std
inc
xor
cmc
sbb
mov
add
jne
in
sahf
into
dec
and
cmp
fcoml
mov
jl
shlb
add
add
xchg
pop
jae
and
mov
or
aaa
rorb
pop
and
stc
add
call
push
mov
lds
and
iret
and
sub
adc
adcl
or
add
push
sbb
mov
xchg
adc
fistps
pop
add
lahf
outsb
daa
adc
nop
mov
inc
mov
shlb
or
fsubrs
popl
dec
sbb
sysret
bound
cmp
xchg
cmp
lods
jno
xchg
cmp
adc
clc
sbb
les
les
call
nop
ret
in
adc
std
push
pop
test
sbb
cs
jp
hlt
aas
xor
outsb
pusha
xchg
hlt
stc
jno
nop
movhps
cmp
mov
call
push
in
add
sbb
mov
add
ljmp
jbe
in
pop
gs
xor
jmp
mov
cmp
xor
inc
add
cmp
test
dec
mov
out
dec
sub
adc
jmp
scas
add
dec
xchg
add
pushf
sub
jge
add
icebp
or
push
jg
js
icebp
inc
sti
mov
and
stc
add
adc
pop
adc
and
inc
shlb
lea
sub
inc
clc
xchg
aas
add
dec
jne
cmp
adc
and
or
outsl
mov
push
and
clc
faddl
pop
and
add
sub
xchg
and
out
mov
mov
bound
dec
stos
or
xchg
add
xor
out
mov
jmp
pop
add
dec
out
pusha
push
xor
aas
xor
xor
mov
push
jle
test
or
ret
dec
xor
xor
das
or
aaa
sub
incb
std
in
mov
scas
add
jmp
int3
mov
pop
push
jnp
jo
or
xor
fisttpl
xlat
add
jae
jns
rorb
or
inc
cmp
xchg
jnp
cld
and
push
and
shrb
mov
dec
sub
sbb
add
push
fsubs
into
sub
outsl
or
xchg
xlat
daa
test
aaa
xor
fnsave
add
dec
pop
testb
or
fadds
insl
out
and
pushf
add
ds
stc
pop
rcrb
jbe
pop
jmp
xor
xlat
setl
dec
rclb
leave
loopne
or
inc
push
and
mov
sbb
adc
sub
pop
adc
cvttps2pi
pop
inc
fimull
pop
jle
cmp
lods
xchg
inc
subps
add
inc
add
and
lds
adc
jo
dec
jp
mov
xlat
xor
pop
jl
xchg
dec
pop
xchg
pop
inc
mov
les
js
add
out
add
cmp
and
shlb
add
pop
faddl
add
adc
mov
xchg
cmp
mov
aas
sub
xchg
add
call
xor
fildll
test
cli
jecxz
dec
fcompl
mov
push
sub
ret
pop
sub
fcoml
mov
sbb
addr16
and
push
jo
repnz
sbb
fst
mov
stos
hlt
or
lock
pop
xchg
push
mov
fimuls
sub
add
push
adc
push
xchg
shlb
test
das
adc
mov
fiaddl
bswap
adc
ficoms
push
adc
xor
xor
adc
filds
loopne
repnz
test
add
jns
push
int3
jbe
mov
les
ja
ret
cmpsb
out
mov
adc
stos
clc
stos
icebp
push
xor
inc
add
ret
jbe
add
or
sub
mov
into
or
outsb
testb
add
aaa
mov
imul
enter
cli
jle
sub
or
cmp
mov
dec
adc
inc
loopne
adc
test
das
pop
mov
pop
push
adc
inc
or
add
mov
test
fwait
adc
adc
orb
xchg
cmpsb
add
sub
or
sbb
xchg
shl
sbb
cmc
adc
or
or
pop
movsb
sbb
add
or
jmp
jecxz
icebp
push
pop
addl
and
into
jns
mov
pop
movlps
aaa
out
cmp
add
in
or
out
add
adc
mov
fwait
add
push
dec
add
xchg
rolb
xor
out
cmp
lock
lock
mov
mov
xchg
add
cmpl
jns
adc
adc
out
sbb
lock
lods
add
xchg
xlat
cmp
sub
cmp
push
add
xchg
loop
mov
or
lret
out
pusha
lret
jae
jns
xor
pop
movb
sbb
cmp
dec
ljmp
mov
adc
hlt
sbb
cmpsl
adc
add
ret
xchg
mov
mov
ret
add
push
neg
push
sub
mov
or
sbb
movsb
jg
add
add
push
ds
xlat
add
aas
push
push
add
xor
sbb
and
pop
je
inc
ret
dec
enter
add
sbb
mov
push
pop
push
aam
andl
or
push
push
mov
xor
leave
pop
cmpl
add
int3
cmc
add
ljmp
inc
push
stc
into
add
jmp
icebp
das
shrb
adc
scas
pop
cmp
add
inc
data16
jbe
add
inc
enter
stos
and
filds
mov
push
lret
in
push
aad
mov
inc
inc
cmpsl
mov
jo
and
add
test
add
dec
pusha
cs
sub
inc
xor
dec
pop
test
shl
add
push
and
or
xor
scas
inc
xchg
push
xchg
mov
add
and
repnz
addb
loop
or
add
sbb
pop
xor
stc
xor
inc
clc
stos
jo
inc
or
push
fisubrs
out
mov
cs
mov
push
stos
push
cmp
out
push
dec
lcall
test
add
cmp
push
call
loope
and
xor
inc
mov
cmp
sbb
add
and
out
xor
inc
sub
xor
add
aaa
in
push
inc
jge
xchg
inc
scas
and
inc
dec
add
push
lea
or
enter
or
psubd
stos
inc
xchg
pop
xor
clc
mov
mov
divb
ret
loopne
pop
hlt
mov
push
cmp
lock
jo
fsubl
in
repnz
fdivr
cmpsl
push
repz
and
addb
mov
mov
stc
shr
jb
lret
jge
jge
add
mov
pushf
jp
mov
mov
add
xor
add
add
ljmp
dec
cmp
xlat
outsl
movb
add
nop
mov
lret
icebp
mov
out
add
lods
or
inc
add
add
add
push
in
nop
pop
mov
mov
or
mov
sar
adc
and
pop
ror
adc
mov
inc
shrb
call
and
xor
or
jmp
add
enter
add
mov
cld
add
lea
add
add
inc
mov
push
mov
shrb
mov
sub
cmp
or
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
pop
imul
aas
enter
sbb
inc
and
movb
add
or
icebp
je
inc
cmp
sbb
mov
or
add
or
push
cmp
testb
mov
lcall
enter
mov
add
mov
pop
push
sub
shll
add
lret
add
pusha
xor
test
adc
add
nop
das
push
jecxz
sbb
outsl
push
loopne
rolb
dec
jne
cmc
add
or
icebp
xor
add
je
jcxz
and
add
xor
mov
xor
out
push
add
jmp
pop
testl
pop
jmp
xor
dec
xchg
pushf
addb
out
add
xorb
out
push
popl
push
pusha
add
loopne
add
int3
rorb
inc
jo
int
xadd
addl
loopne
or
xchg
leave
rolb
or
sti
fdivr
sbb
sbb
pop
adc
sbb
xchg
sbb
pop
add
shl
out
sbb
inc
faddl
adc
aam
add
inc
adc
pop
sbbb
inc
call
adc
sbb
add
rcl
rcrb
lock
adc
xor
add
shl
repnz
xor
pop
lock
add
shlb
loopne
add
cld
cmp
incl
sarb
ds
inc
inc
cli
dec
cmp
cmp
stc
push
addl
sub
add
or
sub
jmp
sub
ljmp
push
out
add
pop
cmp
add
shlb
inc
in
loopne
cwtl
test
add
or
testb
loopne
or
loope
and
and
xlat
mov
push
mov
mov
bound
cmp
cmp
shlb
sbb
inc
movsb
add
subl
subb
lock
cs
imul
add
imul
inc
pop
push
and
mov
jp
mov
mov
mov
addb
mov
je
and
mov
ja
shll
cmp
cmp
add
xorl
push
add
push
inc
xchg
lock
dec
push
mov
xchg
loopne
inc
or
push
add
popf
call
into
pop
sahf
inc
pop
cvtps2pd
lcall
rolb
aas
inc
cwtl
mov
dec
push
mov
dec
rorl
jb
dec
mov
rorb
pushf
into
mov
inc
roll
add
inc
addb
lock
call
loope
roll
loopne
sbb
jg
sbb
cld
pushf
pop
dec
pop
nop
add
popf
push
add
pop
enter
adc
repz
loopne
or
add
scas
inc
dec
cpuid
mov
loopne
fcomps
or
fstpl
pop
sti
sub
add
jae
cmp
dec
mov
mov
add
movl
mov
xchg
adc
pusha
rorb
call
lods
ja
insb
mov
xor
mov
sbb
push
iret
inc
arpl
pop
call
movsl
cmpxchg
fwait
data16
dec
adc
pop
clc
xlat
mov
push
push
add
mov
pushf
aad
sub
or
lods
xor
mov
add
adc
pusha
mov
sar
jne
dec
or
leave
aam
scas
adc
pop
add
pop
dec
incl
lods
sub
pop
adc
pop
add
loop
push
in
push
clc
hlt
xchg
fwait
push
mov
pop
pop
pop
rol
push
lods
cmp
push
jp
jmpw
add
sub
xchg
add
and
or
jb
mov
lea
add
mov
roll
stos
add
mov
scas
and
or
clc
ja
add
lret
add
jp
push
inc
pop
jo
add
pop
add
add
jbe
mov
mov
repz
cwtl
push
add
cmp
add
int3
xchg
pop
in
sub
cs
sar
stos
call
xor
popa
sbb
loope
pusha
loopne
sbb
mov
pop
nop
insb
and
dec
mov
and
repnz
dec
and
in
add
push
ret
incl
xlat
xchg
push
stc
cmp
dec
icebp
cmc
sarb
xchg
pop
add
dec
or
mov
push
les
mov
into
rol
ljmp
ret
pop
leave
inc
icebp
add
pop
lock
stc
mov
rorb
cmp
cwtl
adc
outsl
add
mov
mov
and
inc
inc
sbb
loop
lods
push
mov
and
and
push
push
adc
mov
xchg
xchg
std
or
xorb
ret
addl
cmp
call
mov
testl
cli
pop
cmp
xchg
arpl
hlt
and
xor
sub
pop
mov
cli
xchg
arpl
out
dec
not
mov
sbb
ret
inc
clc
bound
xor
stos
lods
dec
and
dec
inc
nop
cmp
inc
inc
adc
sub
push
sahf
aaa
test
cmpsb
xor
sub
and
and
and
sbb
push
xor
and
jmp
mov
inc
push
or
xor
push
and
and
xor
icebp
leave
repz
imul
in
add
dec
or
loope
in
mov
mov
fiaddl
mov
mov
lret
arpl
jb
dec
clc
shrb
aas
int
sub
punpcklbw
sbb
imul
or
enter
jge
inc
jecxz
jno
adc
lods
xchg
int3
mov
or
push
add
and
xchg
lret
or
pop
icebp
add
push
and
xor
or
cmp
das
mov
or
inc
and
push
xchg
lea
pushf
cmp
xchg
adc
or
or
add
mov
repnz
push
pop
inc
jmp
iret
adc
test
dec
inc
sbb
inc
aad
adc
mov
add
and
mov
test
std
and
in
inc
popf
lods
incb
add
push
mov
dec
add
test
lret
xor
add
cmp
sub
dec
fsubr
pop
es
or
adc
mov
cmp
test
push
and
add
leave
je
push
int3
ss
add
sbb
aam
dec
add
or
add
shr
cmp
in
addb
or
add
out
mov
scas
mov
mov
mov
ret
jmp
mov
ja
xor
popf
add
sbb
pushf
nop
movsl
repnz
aam
lods
cs
pop
add
mov
scas
pusha
vxorps
cmp
pop
rorb
nop
add
cld
pop
rorl
inc
or
inc
adc
add
sub
cmp
cld
push
add
pop
sub
loop
loop
pxor
mov
adc
add
sub
add
push
ds
add
jbe
push
test
cld
ror
loop
add
or
test
sti
push
fbstp
sub
add
and
sub
fisubrs
jb
nop
es
in
incl
movsb
dec
mov
push
add
leave
subb
in
add
or
pop
clc
std
pop
mov
push
stos
mov
fcomps
mov
add
mov
jo
xor
or
shlb
div
and
add
jecxz
aam
xchg
xchg
push
inc
lcall
push
pop
das
nop
pop
dec
add
stos
jne
pop
adc
add
and
adc
adc
push
sbb
scas
add
push
sub
adc
add
repz
pop
pop
sti
jecxz
rorl
dec
nop
add
lahf
testl
lods
xchg
daa
inc
inc
cmp
add
pop
rep
pop
shr
add
in
cltd
xchg
inc
jl
mov
push
sbb
testb
sarl
stc
jns
subl
add
hlt
cmp
push
gs
dec
jp
add
pusha
pop
insl
cltd
movl
inc
inc
mov
mov
mov
jle
leave
add
cmpsl
xchg
dec
pusha
movsb
add
mov
push
sub
call
lock
add
jg
neg
xor
add
pop
fstpl
lcall
jecxz
inc
pushl
push
xor
sub
xor
sbb
push
pushf
inc
dec
gs
pop
mov
push
roll
inc
jo
add
dec
dec
dec
dec
dec
dec
loopne
add
push
push
push
push
push
mov
add
bound
cmp
add
push
insb
insl
outsb
jo
add
jb
je
jbe
loopne
add
xor
xor
xor
xor
cmp
das
cmp
sub
sbbb
sub
cmp
cmp
daa
or
pop
or
shl
mov
pop
inc
add
sbb
test
pushl
add
mov
add
hlt
jno
mov
bound
out
mov
jmp
nop
add
sub
or
jl
mov
outsb
push
cmc
adc
pop
mov
sbb
jp
in
add
jl
mov
jle
add
test
jle
add
loopne
jge
or
add
inc
sub
cwtl
inc
pusha
cmp
dec
mov
idivl
das
movaps
sub
outsb
adc
jnp
imul
flds
dec
shlb
add
push
jo
add
roll
dec
dec
jne
test
or
mov
xchg
or
inc
add
adcb
push
aas
imul
dec
xchg
cmp
ljmp
sub
push
add
lahf
sub
push
push
rcrl
loopne
movsb
lock
add
xchg
hlt
and
xor
clc
lret
imul
dec
test
sarb
mov
or
push
jo
addb
add
dec
rclb
pop
adc
lds
enter
std
lea
aas
lods
arpl
xor
xor
cmp
sub
fmuls
ret
mov
testb
add
inc
xchg
imul
das
data16
add
push
mov
pushl
pop
push
sbb
loop
stos
adc
add
pop
sub
in
push
or
mov
and
add
jl
adc
or
add
fildl
inc
add
adc
sahf
and
adc
add
add
cmp
mov
mov
adc
sub
dec
orl
pop
add
push
cmp
sub
or
add
sti
loop
add
push
fbstp
shll
gs
ret
add
pop
cltd
sub
aam
or
shrb
adc
test
movsb
shl
xlat
les
adc
ja
inc
pop
add
arpl
push
popa
add
push
pop
enter
test
sub
fcom
and
jbe
add
inc
jl
jge
or
mov
add
and
into
push
iret
mov
pop
add
adc
pop
push
dec
jnp
xor
add
push
in
fadds
jno
test
loope
es
fs
push
mov
and
cmp
mov
push
inc
lods
cld
push
add
test
aas
pop
pop
or
adc
arpl
imul
cmp
and
inc
cmc
ret
or
sub
dec
inc
addb
mov
fsubl
pop
push
and
mov
popa
cmp
je
cmp
jl
inc
inc
dec
lock
frstor
movups
push
dec
hlt
dec
xor
jno
add
addr16
cs
add
xchg
ljmp
xor
insl
dec
add
loope
cmp
stc
inc
add
and
dec
or
out
add
lods
test
push
mov
sub
dec
andb
aam
add
fcompl
pop
sbb
push
jno
scas
inc
cld
add
std
daa
jo
add
add
cmp
sar
add
insl
lea
jne
and
je
cmp
add
jmp
inc
rol
inc
push
xchg
or
shlb
fmull
add
lcall
pusha
sub
mov
dec
adc
push
inc
add
data16
add
or
out
cmp
decb
xchg
mov
lret
mov
testb
and
sbb
adc
pusha
inc
lods
push
or
push
pop
pushf
sbbl
add
aam
iret
imul
stos
add
sarl
add
push
adc
orl
sub
jecxz
sti
loopne
or
insb
jp
xchg
and
dec
add
sub
pop
add
push
inc
push
push
or
arpl
fdivs
adc
add
mov
cmp
test
adc
dec
loop
xor
pushl
mov
loope
sub
inc
outsl
fildl
or
inc
lea
pop
inc
adc
ficompl
fnstcw
ljmp
jmp
adc
add
dec
cmpb
jne
pop
lock
jmp
add
xor
adc
xchg
movl
fadd
cmp
pop
sti
add
test
rolb
add
or
mov
add
rcrl
lds
xor
xor
inc
xchg
js
mov
cwtl
fstpt
mov
sbb
add
push
jle
das
iret
or
dec
mov
mov
loope
cmpps
dec
clc
inc
in
mov
add
adc
fists
pop
add
add
popf
mov
repnz
push
add
dec
pop
or
je
stc
jg
test
push
inc
mov
lock
aaa
sbb
jne
andb
push
cmp
and
cmp
add
je
and
adc
push
mov
and
pop
xchg
int3
ficomps
in
cmp
aas
add
mov
leave
add
pop
mov
push
jbe
into
inc
add
add
cmc
loope
add
loopne
sub
jle
adc
call
push
dec
add
gs
add
mov
insl
jp
cmp
add
dec
fcoms
sahf
add
push
lods
faddl
mov
cmp
add
mov
std
or
or
jg
add
rcrb
inc
or
adc
sub
add
mov
add
xor
xor
sbb
fimuls
enter
cmp
ds
outsb
jmp
push
xchg
mov
dec
sbb
xchg
add
jg
inc
loope
cld
adc
add
or
and
clc
and
jbe
mov
lea
cmc
add
sarl
cld
ret
movsb
adcb
jns,pt
repnz
dec
out
and
out
jp
fwait
xchg
jl
push
mov
mov
cmp
dec
add
xor
xchg
movsb
lret
mov
cs
xchg
jne
push
mov
add
push
ret
jmp
xor
push
je
daa
pop
adc
xlat
and
addr16
mov
pop
lret
and
add
int3
cld
adc
pop
ret
out
fld
sub
mov
or
inc
lea
popf
test
inc
shlb
xor
test
sbb
sbb
or
sub
push
mov
movsl
add
jo
xchg
inc
sbb
or
sahf
push
scas
in
mov
or
pcmpeqw
decl
aam
xor
or
mov
add
mov
dec
inc
pop
adc
inc
frstor
pop
add
jg
xor
or
adc
rcl
push
inc
push
xchg
imul
add
out
push
hlt
jnp
inc
add
sbb
call
or
adc
or
cmpb
jecxz
mov
add
mov
ret
or
inc
icebp
add
push
int3
jmp
add
dec
jne
sub
push
jp
pop
xchg
fmull
pop
mov
shlb
and
insb
or
cwtl
add
inc
mov
and
ret
outsl
cmpsl
bound
add
lock
dec
sbb
and
pop
shlb
add
cmp
or
movsl
dec
xor
rolb
push
and
rcrl
dec
xor
xor
cli
adc
pop
je
jge
xor
cmp
mov
add
std
jle
sarb
add
or
cmp
xchg
dec
xchg
sub
adc
lea
add
ret
jle
mov
add
sbb
add
add
xchg
lds
xchg
repnz
push
pop
sub
cmp
inc
xor
xor
or
xor
add
sbb
push
mov
dec
or
nop
pusha
fld
movsl
js
je
adc
mov
adc
mov
pop
sbb
fimull
loope
mov
add
jae
jb
cmp
jne
je
xchg
add
inc
subb
lret
aad
inc
add
adc
push
xor
push
add
shl
repnz
cli
add
loopne
pop
rsm
dec
lods
jae
add
inc
ljmp
add
mov
sbb
andl
add
dec
cmp
inc
jb
lock
hlt
test
pop
cmpsb
cmp
stos
add
and
pop
inc
adc
dec
sbb
mov
ljmpw
jnp
add
je
rorb
in
push
push
push
jmp
cltd
cmp
fiadds
orl
rolb
sbb
rcr
sub
movsl
add
int3
add
rorb
lock
jo
add
hlt
lds
iret
inc
arpl
adc
sbb
lcall
pushf
hlt
xlat
les
stc
add
ret
add
or
add
add
add
mov
sbb
xor
add
push
sbb
enter
mov
xchg
and
sbb
dec
jl
cmc
jge
sub
xchg
dec
xchg
das
fidivs
push
lahf
movsb
xchg
rcrb
lret
stc
icebp
push
jae
sub
test
add
add
jne
mov
add
jg
in
adc
rcrl
add
push
fldl
das
shrb
hlt
ds
pop
lods
roll
dec
push
add
test
add
cmp
push
mov
mov
gs
pop
or
lahf
add
xchg
pop
and
mov
clc
adc
js
xchg
or
insl
shlb
pop
inc
cwtl
inc
push
add
ss
lock
push
sbbb
or
inc
mov
jne
inc
mov
push
in
jge
daa
aam
inc
jbe
je
add
and
pop
push
add
xchg
imul
push
pop
push
popa
adc
jne
hlt
mov
pop
push
into
jb
add
les
xchg
loop
jae
adc
xor
push
mov
inc
or
gs
cmp
lcall
call
cmp
add
xor
enter
cmp
add
je
testl
pop
mov
rorl
cltd
rolb
xor
cmpb
push
je
push
ss
add
loopne
cmp
jbe
or
pop
cmp
ljmp
jmp
sub
add
in
lea
adc
pop
imul
push
or
cmpb
pop
dec
mov
fs
mov
and
test
adc
push
dec
add
cmp
add
xchg
dec
pushaw
and
cmc
rolb
stos
and
xchg
push
out
fcomps
jne
add
jb
das
adc
jge
mov
add
sub
sub
cmpsl
xlat
pop
cli
push
aam
mov
push
sbb
mov
mov
xchg
popf
jmp
loopne
call
sarb
add
lret
mov
pop
ret
loopne
dec
sti
xor
mov
cmp
fdivs
mov
hlt
or
add
popa
das
cwtl
and
aam
out
cli
andb
adc
je
lret
cmc
mov
sbb
cli
add
jmp
add
shl
inc
mov
dec
jne
jl
out
add
jg
das
cmpsl
push
lds
add
repnz
push
ret
fstpl
add
jmp
push
mov
inc
loop
in
rolb
aas
sub
shrl
pusha
dec
xor
push
test
data16
or
add
inc
stos
call
std
in
xchg
inc
adc
pop
inc
adc
add
mov
fsubl
sbb
add
in
lret
stos
sbb
lods
divb
mov
out
push
mov
sbb
fcompl
sbb
lods
or
add
push
call
hlt
pop
jne
int3
inc
push
mov
push
es
pop
mov
sub
je
pop
jp
add
push
add
jbe
add
inc
pop
repz
push
or
sub
call
dec
sbb
pop
fucom
ljmp
or
or
andb
sub
add
adc
and
loopne
hlt
add
adc
test
scas
xchg
repnz
and
add
test
loopne
in
nop
sbb
call
jnp
lcall
movsb
fldlg2
popa
dec
enter
pop
push
push
sbb
push
mov
ds
xor
adc
int
mov
xor
stos
add
push
push
add
inc
sti
dec
sysexit
jge
aas
stos
incl
and
jecxz
add
cld
add
add
lea
iret
clc
or
addb
push
pop
imul
cmovge
push
call
inc
push
mov
clc
aas
sbb
test
rolb
fs
or
movsl
int
fstpt
xor
sub
sbbl
xchg
pushf
cmp
adc
nop
cmpb
shrl
hlt
mov
add
mov
in
add
dec
sub
sbb
or
adc
pop
xorb
mov
sbb
adc
pop
add
xor
and
ss
xor
add
push
xchg
int
test
ficoml
movsl
cs
add
fsubl
push
rcl
mov
decl
lahf
mov
adc
push
add
repnz
out
xchg
popa
lods
mov
cld
enter
add
shrb
xor
xchg
add
or
shl
sbb
inc
sbb
clc
mov
jle
aas
in
add
mov
jp
add
add
insb
sub
and
cmovp
add
data16
jp
push
add
lods
xchg
mov
enter
fsub
ret
imul
dec
sub
pop
cwtl
in
add
mov
mov
outsl
das
dec
add
push
shlb
cmp
sbbb
imul
shlb
add
push
lods
inc
inc
dec
ret
loop
adc
sub
add
add
adc
and
sub
push
pop
stos
push
mov
lahf
fadds
mov
jo
cwtl
cmovae
hlt
mov
stos
add
xor
aaa
aas
adc
pop
push
jae
push
xor
add
jbe
sbb
add
test
es
stc
les
bound
movsb
add
xchg
push
dec
decb
jns
add
adc
addl
enter
mov
sbb
mov
adc
pop
insb
bound
add
sub
popf
mov
decb
leave
mov
loope
imul
addb
xor
jl
adc
adc
flds
cmpsb
or
add
mov
jo
inc
xor
or
call
mov
xlat
in
adc
rclb
adc
pop
adc
arpl
sti
dec
bound
sub
shll
adc
add
test
lret
xor
fbld
call
pop
pusha
repnz
mov
xor
les
daa
cmpsl
add
jnp
mov
jae
xor
test
add
pop
add
or
mov
cld
mov
popa
adc
sub
stos
mov
or
adc
pop
pop
aam
push
pop
into
pop
test
pop
scas
add
ljmp
incb
stos
mov
adc
push
mov
stos
sub
icebp
cs
pushl
add
fs
or
pushf
dec
popf
movsb
inc
test
add
push
shl
clc
add
ljmp
push
cltd
ja
add
adc
add
lret
les
pop
adc
iret
add
mov
jg
dec
add
in
stos
dec
adc
data16
jno
inc
loop
arpl
mov
test
add
add
fwait
add
in
or
adc
cmpsl
add
mov
or
mov
adc
dec
lds
dec
pop
sub
jnp
cmpsl
xchg
sbb
add
pop
repz
push
inc
pop
push
add
pop
gs
cmc
push
shlb
jl
incl
push
mov
repz
roll
lret
shl
stc
and
add
pushf
push
add
arpl
mov
xchg
bound
add
sub
je
cmpsl
sbb
daa
adc
sbb
out
andb
or
inc
pop
pop
mov
jl
add
and
mov
outsl
andb
cmp
shrb
add
jle
or
decb
or
adc
sub
flds
push
sbb
out
inc
cli
pusha
cmp
sarl
add
pop
and
lea
inc
add
dec
inc
add
xchg
and
add
xor
dec
inc
stc
jno
insb
aam
lods
stc
jo
ret
add
test
jg
lret
or
add
push
xchg
cld
fmuls
jne,pn
mov
sbb
cltd
adc
xchg
add
pop
sub
movsl
adc
stos
push
mov
lods
out
leave
sbb
or
data16
sbb
mov
mov
sbb
inc
lock
mov
mov
add
pop
inc
xor
pop
push
aad
jnp
sub
add
cmpsb
pop
daa
movsb
xchg
add
push
xchg
sub
mov
je
jmp
dec
jnp
pop
adc
jb
dec
or
xor
or
mov
add
loopne
fsubs
outsl
add
test
dec
dec
nop
addb
and
adc
ret
subl
rolb
pop
aad
jns
xor
aaa
cli
sub
mov
test
add
cmc
mov
push
hlt
cltd
mov
imul
and
add
or
cli
sbb
jg
mov
and
push
leave
sar
roll
or
addr16
xlat
mov
aas
cwtl
stos
dec
les
fisubrl
ror
and
sbb
push
dec
add
insl
imul
scas
and
pop
push
adc
push
hlt
cmpsb
pop
test
add
cld
shll
inc
inc
loope
pop
and
enter
addb
int3
stc
xchg
or
mov
stos
out
push
sbb
sbb
fisubl
pop
add
lcall
in
jg
pop
sbb
dec
mov
cli
add
cmpsl
and
cmp
mov
pop
mov
fimull
stos
mov
test
sbb
and
cmp
dec
jne
rol
xor
xchg
fildll
test
add
or
add
or
mov
add
adc
ret
jmp
mov
push
scas
lods
inc
fimull
in
dec
add
add
gs
repz
adc
push
cmp
dec
ds
dec
lahf
and
dec
jae
add
insl
mov
add
das
adc
lods
icebp
lret
ficomps
jge
cs
mov
mov
nop
push
leave
adc
mov
repz
add
mov
xchg
add
jae
or
jl
pop
mov
push
jge
jbe
cmpsl
fs
jns
or
sbbb
loope
add
cmc
dec
out
push
adc
dec
aaa
ljmp
outsl
adc
pusha
lahf
cmp
in
test
pop
add
outsl
or
inc
or
je
jns
push
sbb
sahf
sub
pop
stc
in
fildll
add
fcompl
lea
xor
mov
arpl
test
dec
add
and
sbb
sub
add
push
cmpsb
aas
test
cmp
push
mov
inc
out
pop
dec
or
cwtl
xchg
pop
bound
push
inc
mov
pop
mov
aam
add
fcmovnu
dec
mov
lods
add
dec
xchg
lea
ja
jl
sbb
mov
sbb
pusha
push
lds
and
stc
xor
xor
iret
cmp
in
add
bound
pop
push
xor
dec
jg
jb
add
or
add
inc
cmp
sub
dec
imul
bound
insl
adc
add
ret
icebp
push
mov
add
jmp
mov
pop
push
sbb
pop
xor
push
fiadds
mov
arpl
cwtl
and
rcrb
add
inc
jae
arpl
in
lock
fstp
and
push
add
fmull
adc
push
daa
sub
popa
and
push
mov
sti
dec
pop
int
iret
cmp
add
data16
sahf
aam
add
and
stos
and
push
ret
jmp
sub
mov
add
enter
sub
push
inc
adc
adc
add
or
aaa
lods
popf
add
ret
push
test
js
mov
add
loop
loopne
sbb
mov
mov
add
mov
jb
sbb
pop
inc
inc
and
add
xor
orb
test
jb
insl
mov
xchg
jno
rdtsc
les
mov
and
cmp
dec
and
add
test
pop
push
pop
cmp
adcb
inc
jns
sub
icebp
pop
adc
push
lods
cvtdq2ps
fldl
scas
outsb
adc
mov
add
lock
dec
adc
mov
push
xchg
adc
mov
cwtl
hlt
add
xchg
pop
pop
sti
push
sbb
outsb
jnp
and
sbb
jno
ds
cmp
sub
shlb
test
or
add
pusha
mov
push
stc
insl
ja,pn
push
cli
jg
sbb
add
jge
fbstp
outsb
cwtl
addr16
add
push
shlb
inc
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
and
sbb
push
popa
ja
jge
jl
add
dec
shrl
jnp
jle
add
jo
inc
pop
xchg
outsl
insb
loopne
jno
pusha
add
push
jae
imul
jns
and
jp
add
sub
or
jae
jp
out
fimuls
jb
jle
add
popa
mov
bound
data16
xchg
inc
push
inc
or
jbe
jno
inc
add
cmp
loope
push
test
icebp
dec
push
add
adc
jg
mov
or
push
jae,pn
push
dec
arpl
ljmp
sbb
push
xchg
ja
jo
arpl
cmp
mov
addr16
popa
shlb
xchg
je
add
mov
dec
iret
jo
outsb
imul
repz
add
push
imul
sti
and
xchg
pusha
add
outsb
dec
push
or
xchg
sbb
mov
inc
add
arpl
clc
bound
or
jge
jp
lock
add
lods
xor
outsl
sub
bound
loopne
push
ljmp
push
adc
movsl
xor
inc
jbe
add
insb
mov
jb
je
jno
popa
imul
lret
add
jp
ret
or
add
mov
push
mov
out
test
inc
lret
dec
xchg
mov
push
xorb
mov
fs
out
sbb
or
dec
jp
inc
cmp
adc
bswap
daa
in
inc
mov
and
pop
push
dec
popa
jae
jae
sbb
mov
xor
fs
cld
add
xor
add
fcompl
adc
adcb
xor
mov
add
cs
add
hlt
sarl
add
xor
or
push
sbbb
cmovno
mov
aas
fdivs
push
xchg
add
sub
jge
inc
push
sbb
push
cmp
das
clc
push
test
mov
jne
hlt
xchg
add
stos
fwait
shlb
hlt
dec
sbb
inc
ja
in
cmp
add
lret
fstps
add
mov
aas
enter
mov
xor
mov
ret
cmp
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
cld
iret
mov
add
rcll
add
xchg
pop
add
into
and
dec
fcoms
add
push
or
rol
add
sbb
xor
and
imul
add
or
mov
push
nop
sar
pop
sbb
jno
gs
xchg
cmpl
add
and
or
and
add
or
ret
inc
rol
cmp
cmp
lock
aaa
out
mov
push
add
push
add
push
add
sbb
and
and
fsubl
jne
add
sub
inc
xor
cmp
cmp
fs
xchg
add
out
xchg
mov
cmpsl
shlb
cmp
or
dec
and
hlt
pushf
in
aam
loop
cmpsl
sub
xor
mov
push
sbb
dec
and
cmp
enter
jo
je
aaa
adc
jl
mov
rol
pop
add
mov
xchg
add
test
and
sbb
jo
dec
inc
call
cld
pop
add
or
mov
call
cmp
outsl
push
jo
or
fldl
dec
cmpsb
les
and
and
leave
pop
ficomps
lds
std
dec
cltd
lods
test
into
and
rorb
shl
cmc
roll
aad
dec
mov
faddp
and
pop
insl
cmp
int
mov
and
rorl
mov
add
les
int3
add
inc
shrb
mov
add
fsubrs
call
mov
pop
in
push
xchg
sub
lock
xchg
fxtract
pop
les
mov
lods
shll
lahf
sbb
cmpsl
psrlw
dec
lcall
std
dec
iret
or
adc
add
loop
aas
adc
stc
mov
sub
sub
shll
jle
xor
icebp
cmp
mov
lds
lods
mov
add
jae
ficoms
mov
add
fmul
or
jle
test
add
shlb
cwtl
add
adc
clc
cmp
add
scas
fcomps
xlat
fistpll
or
add
lea
hlt
cmp
enter
or
out
sub
jp
negb
hlt
fwait
dec
dec
or
mov
adc
cmp
sbb
sub
rorl
jnp
jl
jg
jne
add
sub
add
adc
mov
outsb
xor
into
fcoms
sbb
mov
shrd
jp
push
into
cltd
and
test
aaa
jne
xor
divb
adc
and
fidivrs
stos
add
xchg
fsts
or
jnp
add
in
in
lret
xor
jae
stos
js
add
add
add
out
pop
inc
or
dec
and
cltd
cmp
cmpsl
pop
add
inc
jmp
jge
add
push
cmp
add
cwtl
das
add
add
mov
jp
add
andb
jmp
int3
cmp
ja
cmp
inc
add
sub
push
lret
xchg
lock
outsl
cmp
cmp
pusha
loope
in
insl
xchg
adc
in
add
insb
sbb
push
lret
mov
loopne
inc
sbb
jb
lcall
push
mov
add
stc
add
mov
in
lods
or
add
ret
pop
shl
lock
add
mov
mov
and
mov
mov
mov
push
push
inc
aam
test
mov
jne
dec
out
mov
add
gs
imul
adc
shlb
pop
add
das
stc
mov
mov
sub
sbb
mov
push
call
gs
outsl
jne
jns
data16
jb
mov
enter
mov
shll
jae
mov
xor
insl
ret
int
add
fstpt
jg
and
add
sti
sbb
clc
add
roll
in
sbb
pop
push
cwtl
lds
pusha
cmpb
je
add
stc
leave
push
call
mov
xor
mov
addb
push
mov
shl
test
inc
enter
inc
inc
dec
call
or
adc
rcll
cmp
cli
verw
inc
jno
sub
je
add
bnd
mov
cmp
lss
push
mov
add
jmp
ret
xchg
jae
inc
mov
mov
add
cmp
inc
add
cmp
and
sbb
jo
jg
push
lods
pushl
imul
jg
xlat
mov
jo
add
cmp
and
scas
adc
rorl
pop
cmp
push
outsl
adc
pop
in
lret
lahf
fmuls
push
jg
inc
dec
adc
or
xchg
add
cmp
sub
push
nop
add
cmp
add
add
leave
adc
add
add
out
add
cmp
ja
push
xlat
xchg
loop
dec
add
daa
outsl
repz
incb
add
ror
ret
and
inc
loopne
add
cmp
jae
pusha
add
jnp
sbb
je
mov
jecxz
and
push
add
jge
sub
clc
xchg
or
dec
lock
dec
int3
and
pop
daa
pop
filds
inc
push
pop
shrl
add
inc
popa
arpl
cmp
nop
lcall
cld
sbb
cmp
pop
mov
imul
testl
popa
adc
addl
sbb
add
decl
fs
push
rcl
pop
bound
inc
ja
stos
inc
sub
out
add
mov
adc
add
mov
mov
icebp
lods
stos
or
pop
jge
aas
jnp
addb
mov
jae
sahf
mov
push
jge
pop
into
loopne
rcl
mov
sti
jno
add
jns
ret
ret
je
adc
or
sub
push
sbb
push
and
inc
stos
enter
add
pop
sarb
push
ret
jns
inc
sar
addb
mov
push
fdivrl
das
sbb
cltd
hlt
jp
mov
test
aaa
add
dec
shr
inc
pop
jle
add
shlb
daa
or
jp
fiaddl
push
inc
jmp
lea
pop
not
ljmp
cmp
add
xchg
cmp
add
jae
jno
dec
and
add
sbb
std
rorl
fildl
inc
xchg
pop
push
add
mov
sbb
inc
sbb
xor
xor
in
mov
add
je
pop
push
jne
and
xor
std
sub
jae
cmp
lea
into
inc
cmp
andb
ds
add
push
jne
push
jle
xor
sub
xchg
fldenv
push
lods
or
inc
sbb
je
xor
mov
add
xchg
insl
out
in
ret
add
addl
cmpsl
mov
les
cld
cmp
cmp
fistps
and
add
out
add
sub
shr
add
mov
dec
add
or
and
add
jae
test
jbe
sbb
dec
and
mov
iret
add
add
popl
or
insb
pop
pop
mov
pmaxub
sub
jl
jns
aas
xor
add
sub
lcall
xor
hlt
imul
push
sbb
cmp
test
inc
lea
sub
lret
fdivl
dec
mov
andb
or
addl
sub
mov
add
and
and
sbb
adc
and
test
add
lods
in
or
adcl
add
add
aaa
sbb
enter
mov
push
movsb
and
in
adc
mov
mov
cwtl
add
xor
xor
in
mov
mov
popa
ss
cmc
stos
sbb
push
mov
inc
lret
adc
or
adc
arpl
add
pop
xchg
sbb
jo
loope
gs
xchg
ds
add
lret
sub
and
sbb
push
dec
ret
clc
add
push
popf
pop
mov
cwtl
sbb
cs
sub
and
cmp
lea
jle
jp
inc
shl
add
fisubl
inc
or
mov
adc
fisttpl
cmp
push
fs
and
and
je
xchg
mov
ja
add
add
fldl
les
je
jle
test
cltd
mov
sbb
or
push
add
sbb
xor
popf
push
inc
pop
adc
xor
mov
mov
or
lock
add
jle
cmp
pop
cmovg
push
add
add
push
fdivs
shll
inc
lret
adcb
xchg
cmp
addr16
insb
incb
movsl
clc
aam
cmpl
faddl
cli
ret
inc
stc
sti
dec
dec
aaa
out
add
cmp
loopne
mov
addb
add
adc
add
test
sbb
sub
mov
cmpl
str
xchg
or
mov
pop
aad
push
mov
adc
enter
lahf
fwait
cmp
dec
add
adc
jmp
nop
cs
dec
inc
pop
es
cmp
mov
add
xchg
mov
jmp
test
jmp
add
pop
adcl
int
add
jne
pop
add
xlat
outsb
fmul
loopne
push
pop
divl
add
js
push
push
push
mov
add
lods
inc
jo
push
cmp
adc
add
xchg
jg
push
add
enter
leave
xor
add
push
xor
add
pop
adc
mov
shr
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adcb
add
imul
sub
loopne
lcall
outsl
mov
mov
pushf
mov
and
scas
movsl
dec
inc
push
sarb
jbe
push
out
sbb
jmp
jle
sub
loope
cmp
push
push
shll
fiaddl
inc
and
pop
sub
mov
dec
cmp
js
or
je
push
fadds
sub
mov
xlat
test
loopne
xor
mov
shld
mov
add
or
in
ja
or
sbb
addb
mov
xor
pop
sbb
in
add
rcrb
je
dec
addb
jl
push
xchg
xchg
jmp
ret
sub
clc
push
leave
add
cmp
hlt
cld
nopl
push
call
test
ds
imul
push
gs
add
jecxz
add
pop
push
cmpsl
push
movhlps
mov
mov
add
or
adc
xchg
add
ljmp
cmp
adcb
es
out
pop
daa
jl
scas
frstor
push
dec
clc
cmc
mov
mov
cmp
mov
fiaddl
nop
add
push
mov
enter
mov
add
in
add
cmp
add
mov
fsubr
imul
jb
test
sbb
inc
out
sub
mov
mov
xchg
std
popa
or
add
cmp
jbe
pop
dec
int3
cli
mov
and
sub
adc
sub
ds
icebp
shrb
mov
add
pop
arpl
pop
das
add
or
mov
push
or
sub
jmp
lock
add
adcl
jne
or
pop
fs
xchg
xchg
add
and
jmp
sbb
jmp
ret
push
mov
mov
pop
and
jge
add
xchg
add
ret
rcll
mov
lahf
loopne
push
mov
inc
scas
sbb
mov
xchg
or
iret
add
add
mov
sbb
idiv
and
movsl
js
ret
add
ret
pusha
imul
or
cwtl
cmp
xchg
fidivrl
rclb
add
sub
cltd
add
xchg
ret
push
lock
mov
roll
lret
add
enter
inc
dec
push
sti
out
aas
add
fisttpll
imul
inc
mov
cltd
jmp
repnz
test
mov
add
mov
add
inc
test
add
mov
in
mov
mov
inc
push
dec
pusha
stc
addr16
mov
mov
andl
testl
out
push
fbstp
divb
sub
pop
sbb
push
inc
push
imul
lods
int
xchg
sub
xor
jbe
mov
lock
add
daa
shlb
cmp
push
sbb
lods
add
jo
popf
cvtpi2ps
dec
sbb
or
inc
xchg
mov
mov
xchg
clc
bound
jmp
jb
cmp
jbe
stos
mov
sbb
mov
pushf
sub
and
leave
out
test
xchg
icebp
xchg
lret
add
movsb
lock
add
repz
cmp
or
push
pop
cwtl
ret
orps
dec
add
cwtl
in
cmp
cli
add
sti
stos
add
xor
and
bound
inc
test
mov
dec
xor
and
add
lret
addl
mov
dec
xorps
sarb
push
imul
test
ja
mov
testl
and
add
cmp
push
xchg
stos
add
fcos
and
or
loop
lahf
mov
add
cmp
lock
xor
add
ja
add
push
add
xor
hlt
inc
lea
cmpsl
mov
push
xchg
sub
cld
leave
add
mov
inc
mov
pop
add
movsb
or
pop
add
cmp
adc
cltd
xchg
shlb
dec
xchg
cli
ss
orl
xchg
loopne
and
and
lods
leave
xor
push
imul
popf
or
push
jmp
cmpsl
loop
xchg
dec
or
inc
addl
movsl
cmpsl
xchg
add
xor
stos
xor
mov
into
rol
dec
add
inc
add
jg
ss
cmp
sub
add
and
mov
inc
mov
fmuls
ja
dec
stos
movsb
mov
add
out
xchg
or
jne
adc
inc
fdivr
aam
addr16
add
out
popf
jg
jo
add
add
cmp
adc
rol
push
and
add
out
jmp
cmp
add
lds
scas
sbb
cli
inc
push
addb
cmp
cwtl
adc
or
add
lahf
rcrl
lods
add
fdivs
rclb
dec
or
rcll
nop
movsb
add
sar
dec
push
and
xchg
and
cmp
jns
adc
mov
imul
cmpsb
add
int3
in
mov
dec
leave
cltd
inc
xor
mov
and
dec
add
int3
xchg
mov
add
jmp
xor
test
sub
add
cmp
loop
pxor
lods
adc
add
add
inc
jno
mov
cld
leave
hlt
movb
adc
add
ja
bound
cmp
push
inc
sub
push
cmp
jns
adc
mov
pop
jle
addb
dec
popa
cmp
mov
mov
jns
or
imul
xchg
xlat
add
imul
add
out
das
pop
std
add
sub
mov
call
add
insl
dec
lods
cwtl
jae
inc
mov
cmp
inc
add
adc
xor
dec
dec
int3
loopne
cwtl
sarb
jmp
scas
cmp
add
pop
test
add
es
push
sbb
sub
je
mov
add
mov
sbb
adc
test
std
cmp
aas
gs
loopne
jge
adc
sub
push
sub
add
cmp
xor
rolb
jmp
int
add
maskmovq
rorb
das
add
ss
cltd
jb
xor
add
sub
mov
and
xor
pop
or
and
push
add
add
dec
out
sti
adc
mov
inc
lahf
call
add
add
jno
push
or
dec
out
mov
inc
rcrb
cld
add
jo
ljmp
lods
ret
pushf
nop
dec
sbb
add
dec
or
fisttpl
loopne
dec
sub
inc
punpcklbw
lret
or
inc
xor
cmp
add
pop
sarb
add
dec
shlb
mov
sarl
addl
mov
dec
mov
in
orb
das
add
xor
mov
adc
mov
push
xchg
or
mulb
orb
jb
inc
add
out
sub
jle
je
cmc
pop
pop
and
test
out
mov
pushl
adc
ljmp
mov
mov
pop
sub
notb
shll
add
insb
and
filds
int
sbb
rorl
fmuls
rclb
fucomip
add
jbe
mov
hlt
jne
pop
test
mov
dec
xor
xchg
imull
and
roll
clc
seta
xchg
loop
out
cwtl
mov
in
aas
jae
cmp
jg
loopne
or
jnp
cmp
fwait
xchg
scas
add
xor
sub
jp
bswap
jle
push
pop
testb
dec
fldenv
and
mov
mov
inc
mov
jae
pop
inc
and
test
pop
mov
or
sbb
sbb
push
cmpsl
xchg
pushf
inc
sahf
add
mov
loopne
xchg
add
into
jns
sub
mov
jl
mov
add
hlt
clc
mov
mov
idivl
loopne
jmp
test
out
jo
ds
sbb
push
inc
inc
sub
xor
clc
mov
stc
mov
cmp
ja
xor
adc
dec
adc
loope
mov
add
fldcw
sub
inc
xor
popa
jae
xor
add
dec
outsb
je
add
dec
std
fldenv
push
push
iret
jb
dec
js
arpl
fs
dec
popa
sbb
push
dec
jp
mov
fnsave
dec
les
pop
jl
add
in
xchg
mov
addl
shll
cmp
test
rorb
insb
cli
add
decb
cmp
lret
pcmpeqw
insl
loope
pop
xlat
inc
inc
dec
jnp
add
ret
repz
cli
mov
imul
pop
push
out
test
jb
out
rolb
and
shll
pusha
cmp
add
push
je
int3
jmp
dec
lock
nop
test
inc
mov
leave
add
lea
dec
les
mov
dec
dec
cmp
cmp
add
idivb
fstl
pop
and
ret
sti
mov
push
adc
jl
xor
xchg
aad
sub
lods
add
sub
mov
or
add
push
cmpsb
data16
movsl
add
stc
cwtl
or
sbb
loopne
or
dec
aas
xchg
dec
inc
or
add
mov
and
cmc
xchg
mov
add
jbe
movb
jmp
add
xchg
push
addl
inc
jbe
mov
xchg
sbb
enter
xchg
add
mov
xchg
imul
inc
xor
aam
test
push
pop
lea
call
das
xor
add
inc
sub
test
pop
scas
cmp
mov
push
add
shrb
sbb
movsb
cmpsl
add
mov
sti
mov
add
aam
xchg
mov
jge
add
push
enter
test
in
xchg
fmull
xchg
scas
ss
mov
loop
add
adc
push
call
add
push
mov
pop
pop
ss
sbb
xchg
mov
jae
pop
fsubrs
sti
orl
jbe
xchg
dec
cmpsb
add
push
popa
aaa
popl
adc
inc
ljmp
sbb
and
call
and
popf
jns
add
add
imul
faddl
pop
cltd
jmp
push
scas
mov
xor
add
add
cmp
addr16
test
xchg
cwtl
ret
pop
aam
hlt
pop
movsb
add
mov
aas
dec
push
add
xchg
adc
pusha
sbb
add
js
mov
jns
arpl
and
add
xor
sub
push
jae
pop
lahf
lea
lcall
test
or
sete
pop
test
jecxz
lods
stos
arpl
jmp
sub
push
inc
test
fcomps
adc
mov
xlat
and
add
hlt
or
xchg
adc
sub
rolb
enter
test
push
push
fsubs
dec
lret
push
shrb
adc
adc
cmpb
dec
testb
mov
nop
fisttpl
jmp
rolb
mov
lcall
mov
testl
or
clc
fs
cwtl
inc
push
mov
cmp
jg
mov
lret
sbb
shl
fimuls
incb
scas
ret
pop
add
or
push
add
lahf
push
sbb
out
or
xor
jns
add
and
or
outsb
jne
roll
loop
add
mov
cmpb
push
inc
xchg
mov
add
bound
push
stos
jb
dec
in
fwait
add
inc
out
cli
fiadds
mov
out
mov
add
xchg
into
jl
lods
stos
les
movsb
push
rcrb
add
ljmp
cli
repnz
dec
ret
add
or
in
shr
cmp
or
adc
add
and
adc
mov
lahf
cmp
pop
or
sti
xor
adc
mov
pop
and
push
add
and
je
pop
or
rorb
and
fildl
add
aaa
incl
cld
dec
push
jg
xlat
jmp
inc
adc
subl
cmp
filds
xchg
xchg
pop
aad
xor
or
add
loop
sub
or
pslld
inc
or
mov
xor
call
dec
add
dec
sub
xlat
jb
pop
into
jmp
imul
and
mov
fs
es
pop
pusha
add
aam
mov
add
ffree
imul
and
pop
xchg
scas
fadds
test
sub
mull
add
jle
xchg
sbb
cli
leave
orb
mov
add
int3
push
or
jno
pop
mov
inc
pop
rdmsr
pop
sbb
push
push
add
cli
add
adc
mov
cmp
fstpt
cmp
add
shlb
mov
push
pop
jmp
nop
push
fchs
cmp
dec
and
enter
bound
pop
or
dec
xchg
fsubrl
add
add
add
inc
loopne
fnstenv
adc
xchg
lds
das
nop
out
dec
add
test
hlt
mov
cld
pop
push
fcomp
inc
or
mov
jno
pop
add
pop
dec
sbb
push
add
push
and
inc
mov
les
jl
mov
imul
sbb
movsl
lods
cmpsl
add
mov
in
cs
add
xchg
insl
or
cmp
and
scas
bound
xchg
mov
adc
lods
ds
mov
ss
mov
add
xor
mov
lcall
bound
push
add
fldl
mov
int
jnp
sbb
fsubs
shlb
lea
pop
ret
jecxz
ret
and
ja
add
sbb
sti
mov
mov
add
push
and
mov
mov
testb
sub
ficompl
add
movsb
adc
orps
stos
jecxz
jl
push
fnsave
add
test
sub
or
cs
pop
and
add
jge
inc
faddl
dec
mov
inc
cmp
js
xchg
sub
clc
or
mov
pop
adc
scas
pusha
xor
pop
add
out
cmp
pop
and
ss
push
je
mov
add
xchg
std
ret
repnz
and
test
add
xchg
jnp
xchg
and
shrb
add
out
push
pop
pop
inc
fstpt
lea
repz
repnz
jnp
mov
add
inc
mov
add
enter
pusha
pushf
jns
or
popf
psrad
sub
add
push
icebp
ret
xor
fwait
arpl
mov
in
mov
add
imul
mov
pop
add
add
dec
jmp
mov
xlat
nop
cmc
cmp
popf
into
lahf
seta
and
mov
mov
pop
push
add
or
outsb
add
fwait
loopne
mov
add
and
add
fadds
fiaddl
repz
inc
dec
mov
cmpb
cmpl
mov
xorb
mov
cmp
shlb
popf
adc
xorb
aaa
mov
dec
pop
into
xchg
push
cmp
adc
jecxz
out
inc
test
xor
ljmp
xor
cs
sub
cmp
or
es
add
lods
popf
lds
call
cmp
sbb
add
lahf
repz
repnz
or
mov
roll
dec
ja
or
add
sbb
jne
sub
icebp
jne
push
mov
and
lea
adcb
leave
movsl
xor
and
jbe
add
xor
mov
cli
inc
jne,pn
and
add
sub
mov
lods
cmpsb
orb
and
inc
cmp
add
or
pushf
cmpsl
loop
das
or
ret
lock
mov
dec
add
lea
push
adc
test
cmpsb
ja
add
incb
in
or
mov
pop
adc
sbb
cli
lock
inc
push
pusha
clc
jo
mov
js
add
add
jg
add
adc
adc
push
outsb
addb
mov
ret
or
lock
adc
add
sbb
pop
mov
add
and
push
cmp
add
xor
aaa
add
out
adc
push
les
loope
pusha
test
or
jp
cmp
orb
loopne
rolb
pop
hlt
jb
dec
daa
adc
sub
fdivrl
and
xor
fwait
popa
mov
ds
pop
cmc
add
xchg
stos
nop
jmp
xchg
lea
xchg
mov
push
add
mov
sbb
fsubrs
push
push
sub
stos
adc
test
addr16
rep
mov
mov
hlt
or
out
mov
adc
cmp
call
inc
cmp
and
mov
sub
negl
xor
decl
add
cmp
or
sub
adc
add
sarl
psubb
mov
aaa
or
repnz
push
add
add
adc
pop
inc
fsubs
jl
dec
mov
fiadds
shr
sbb
into
and
pop
add
cmpsl
push
daa
arpl
add
cmp
adc
mov
cmp
cwtl
jg
push
lret
mov
stos
ljmp
and
scas
pop
lret
mov
mov
and
xchg
inc
lods
xchg
push
add
pop
xor
rcrb
cwtl
add
inc
dec
dec
adcb
cmp
mov
adc
add
adc
iret
nop
mov
test
or
nop
add
loop
sbb
cmp
jb
lods
cli
mov
add
fisttpll
shr
mov
jb
movsb
inc
mov
cmovno
testb
out
add
loop
lret
or
scas
pop
js
sysenter
jae
daa
daa
adc
dec
sub
and
mov
cmp
and
test
xchg
mov
fxch
push
and
push
add
adc
add
sub
jae
or
add
xchg
aas
cld
iret
adc
jmp
jae
add
xor
or
cld
inc
cmp
or
mov
cmp
icebp
cli
call
xchg
sub
cmp
sub
xchg
inc
add
xor
mov
sahf
jmp
add
add
lea
aad
inc
sbb
dec
push
mov
inc
pop
test
xchg
inc
add
jecxz
fwait
inc
sar
cmp
out
xchg
push
add
inc
imulb
sbb
lea
or
xor
cmp
rcr
add
imul
add
pop
jmp
add
add
mov
inc
mov
addr16
mov
insl
jns
add
and
andb
add
inc
mov
adc
push
add
inc
int
push
es
push
add
lret
test
daa
rolb
mov
subl
lret
inc
int
call
xchg
or
pop
lret
push
add
add
call
adc
inc
cmp
jb
lea
dec
repz
pop
addb
pop
movsb
out
dec
or
out
cli
pop
add
fsubrs
movsl
addb
adc
adc
adc
in
pop
rclb
and
mov
and
jmp
add
jne
push
pop
scas
push
add
xor
jle
andl
jge
dec
xor
dec
pop
mov
mov
gs
push
add
sub
pop
push
xor
or
cmp
mov
dec
lret
cli
inc
add
mov
pop
cmp
dec
add
stos
orb
jmp
push
dec
and
mov
sysenter
inc
push
inc
rorb
add
andl
or
cmp
xorb
mov
sbb
add
rorb
lock
inc
add
dec
jne
sub
add
and
fcompl
nop
pop
add
sbbl
cmp
int3
cmp
jo
nop
mov
jp
loop
mov
bound
push
sub
jbe
dec
enter
dec
xorb
add
mov
xchg
cmpsl
adc
or
add
dec
loopne
sti
and
add
or
lds
inc
mov
movq
dec
test
xchg
aas
addb
cwtl
jl
jmp
in
clc
int3
loop
add
adc
or
pop
adc
fsubl
dec
rclb
mov
dec
jle
sub
data16
pop
iret
or
ljmp
xor
insl
movsb
fcmovbe
xchg
add
pusha
lds
add
lret
bound
inc
sub
add
popa
in
bound
ret
call
cmp
daa
jb
subl
push
add
vpsrad
dec
imul
sub
subb
xor
daa
xchg
add
int3
mov
or
sbb
xchg
sbb
aam
xchg
jle
add
add
shr
cmp
inc
cs
jbe
xor
leave
scas
add
sbb
jmp
pop
push
xorl
aam
push
addl
loopne
mov
shlb
mov
sti
add
push
mov
mov
je
add
arpl
add
sbb
add
pop
push
add
xor
mov
push
xchg
in
pop
adc
lea
cmp
ret
jae
dec
adc
mov
mov
push
xchg
in
and
jnp
jnp
add
xlat
adc
xchg
into
xor
mov
cmp
jb
ret
sub
add
or
add
data16
aad
mov
ja
jae
and
sbb
pop
push
or
test
adc
dec
inc
add
insb
in
outsl
push
cld
int3
mov
and
test
mov
inc
inc
push
mov
dec
movl
add
xor
test
add
call
sub
mov
mov
jo
add
mov
adc
cmpsl
scas
iret
mov
add
jp
lock
js
add
jge
ret
xor
dec
in
imul
movsl
je
bound
orps
cld
shlb
add
mov
add
cmp
add
cmp
ret
pop
and
and
jge
sbb
add
add
add
popa
xor
push
ret
push
pop
dec
push
aad
push
inc
repnz
lods
cmp
inc
add
push
push
inc
enter
jo
push
loope
cmp
xchg
mov
inc
divb
stc
xor
je
pusha
call
adc
adc
les
test
or
adc
jecxz
add
add
test
adc
add
adc
cmp
and
fstps
call
sbb
adc
inc
lock
or
shrb
mov
js
bound
mov
loop
fcoml
mov
add
repz
xor
sub
push
fstl
stos
mov
std
push
shll
inc
jp
add
dec
pextrw
loop
add
inc
or
fcoms
inc
push
add
add
ret
nop
fnstsw
cwtl
or
test
scas
mov
add
mov
adc
in
std
or
adcl
ds
lock
ja
in
out
sub
lret
and
mov
jne
fmul
das
repz
mov
shld
stos
mov
inc
outsl
jge
pop
adc
lock
test
shrb
clc
and
lods
adc
sub
push
and
lock
lods
rorl
int3
add
fdivs
addl
mov
mov
add
mov
xor
and
popa
fists
mov
pop
add
insl
sub
bound
mov
mov
in
incl
call
or
or
lock
in
lds
fsubrl
push
ja
add
decb
clc
push
dec
adc
mov
es
or
nop
sub
adc
fldcw
cli
bound
out
mov
jo
lret
pop
cmpsl
sub
nop
lock
out
jmp
ss
adc
scas
pop
cld
xchg
in
xor
cmpsb
mov
test
hlt
jo
dec
add
in
add
push
je
add
xor
mov
jne
negb
mov
push
add
lea
mov
pop
sbb
jmp
pop
push
add
lahf
xor
and
jo
adc
lock
imul
mov
fidivl
aaa
sub
ret
adc
pop
mov
lahf
add
out
mov
adc
lret
mov
xchg
add
push
fwait
mov
add
imul
add
rorb
mov
add
or
jmp
pop
dec
add
push
push
add
bnd
testl
inc
jae
inc
add
ret
divl
enter
mov
scas
mov
inc
jmp
pop
and
mov
filds
xchg
sub
mov
add
scas
std
loopne
xor
add
pop
or
lock
inc
push
push
xor
mov
pop
ljmp
push
pop
sbb
mov
mov
add
hlt
dec
adc
add
popf
inc
sub
testb
adc
cmp
cmp
sarl
pop
adc
inc
add
mov
jge
cld
cmp
add
mov
push
adc
ss
sub
je
pop
add
das
mov
sub
insb
add
pop
inc
cld
inc
stc
int
pop
cs
cmp
add
les
aad
push
imul
clc
in
pop
repnz
cmp
decb
jmp
mov
ret
cmpb
stos
in
add
mov
and
add
les
xchg
outsb
add
fstpl
fwait
push
mov
or
aam
mov
jmp
bound
jg
seto
cmp
push
das
flds
push
add
xchg
es
inc
add
jmp
push
lea
insl
enter
pop
cwtl
push
adc
arpl
push
sbb
xor
int3
or
ds
subb
add
cs
sbb
inc
jge
pop
push
int
mov
nop
or
mov
inc
ljmp
ds
out
add
aad
cltd
mov
and
jnp
push
add
mov
or
mov
popf
rorb
add
mov
rcr
add
loopne
ja
dec
daa
cwtl
dec
add
jb
aaa
add
push
scas
cmp
adc
fcoms
and
add
pop
sti
in
dec
fiadds
add
mov
xor
mov
adcl
and
adc
subb
aam
xchg
mov
lods
ror
pop
jg
pop
add
leave
sub
sbb
outsb
pop
pop
mov
push
xchg
out
jns
in
clc
jle
inc
xor
imul
mov
sub
clc
mov
sbb
inc
vmread
nop
int
dec
cld
lret
rcll
add
dec
jne
mov
xchg
pop
out
fs
mov
and
or
and
add
inc
movsb
lds
push
dec
cs
cmpsl
add
xor
dec
add
pop
mov
mov
test
sub
add
mov
sbb
add
inc
cmpb
subb
pop
test
pop
xor
pop
inc
dec
adc
mov
push
inc
ljmp
or
pop
mov
adc
add
imul
add
jo
dec
jno
ret
sub
pop
add
pop
idiv
pusha
les
outsb
jb
shlb
je
push
add
push
or
sarb
cmc
push
imul
clc
jg
add
pop
call
sbb
rorb
inc
xor
mov
ds
mov
mov
clc
popa
add
dec
sti
movsb
test
and
jmp
add
imul
and
sbb
add
pop
in
outsb
dec
fadds
cmp
adc
jnp
movb
xchg
cmp
push
fs
xor
push
call
mov
rolb
fdivrs
add
sub
cmpsl
dec
mov
mov
sbb
in
cmp
jae
add
inc
mov
cmpsb
movsb
adcb
subb
add
rolb
mov
mov
pop
dec
jne
xor
loopne
sbb
lea
jmp
xlat
jno
dec
mov
jae
pop
imul
cmp
enter
pop
inc
cmp
xor
lock
add
in
je
mov
pusha
ss
sbbb
ljmp
cmp
repnz
lea
and
adc
push
jo
shrb
in
cmc
or
sub
mov
dec
inc
push
mov
adc
andl
add
jg
sbb
xor
mov
loope
push
inc
adcl
add
imul
cmpsb
add
lahf
fstl
lea
stc
add
loop
leave
xor
pop
push
out
add
xor
lea
inc
adc
xchg
inc
push
je
int
pop
add
pop
cmp
test
dec
add
loopne
and
sub
and
inc
pop
fcomps
int3
adc
popf
repz
mov
add
ja
mov
sbb
sbb
inc
lock
or
loopne
rolb
lret
in
bound
dec
push
or
push
dec
mov
add
or
lea
jnp
add
ja
lds
add
push
jp
mov
jge
cmp
inc
rol
test
or
inc
shll
dec
inc
mov
stos
insl
test
insl
cmpsb
push
jecxz
ss
push
jae
enter
add
test
cwtl
add
xor
adc
and
pop
lock
aaa
mov
cltd
loop
pusha
scas
and
pop
call
jl
xchg
arpl
add
jns
or
add
test
dec
mov
adc
movsl
add
cwtl
fsubp
les
push
add
mov
rolb
mov
mov
sbbb
add
imul
cwtl
stos
fmuls
adc
mov
rolb
jmp
add
and
pop
pop
sub
movsb
inc
adcb
mov
add
mov
push
pop
xor
sar
mov
sbb
clc
inc
add
std
jne
or
cwtl
add
fldl
pop
cs
dec
daa
add
push
incl
or
pop
inc
rolb
in
mov
xor
pusha
xchg
sti
mov
jo
mov
repnz
push
or
leave
cmp
ljmp
add
push
mov
inc
add
or
add
and
inc
std
add
or
mov
or
or
xor
mov
add
sar
dec
add
add
cld
loopne
inc
std
cmp
add
add
adc
add
jle
or
mov
xlat
xchg
jnp
pop
dec
push
flds
jbe
sub
add
jle
gs
add
cmp
sub
pop
call
jb
ret
repnz
call
jmp
pop
sbb
adc
add
pop
inc
mov
add
test
sub
addr16
jg
jno
popa
jle
inc
sbb
subb
mov
and
xor
int3
stos
add
lea
cmp
call
add
sarl
scas
mov
xchg
mov
nop
es
or
cwtl
iret
push
xor
mov
lcall
add
inc
aad
jge
add
push
lds
idivl
dec
imul
imul
add
sbb
xchg
imul
xchg
lock
sub
add
xchg
pop
cmp
sti
add
aaa
xor
or
xchg
dec
lret
add
push
mov
add
aaa
scas
js
mov
ja
sub
sub
xor
inc
sarb
pop
daa
cmp
pop
sbbb
jl
or
inc
add
lea
mov
xchg
mov
add
jl
push
push
jg
sub
fstpl
loope
or
fmul
push
add
stos
repz
daa
jne
mov
jp
add
jmp
hlt
add
push
fcmovbe
inc
mov
loop
shrb
pop
aad
pushf
lds
repz
movsl
xchg
lret
adc
into
mov
sarl
pop
add
sarb
dec
push
cmpsl
pop
adc
push
mov
rcrl
and
movsl
fists
adc
and
adc
sbb
decl
jl
push
mov
cltd
jp
push
pop
and
jo
in
pop
pushw
xchg
dec
add
mov
sbb
in
pop
stos
xchg
push
push
aas
inc
mov
dec
dec
addb
inc
mov
or
add
or
sub
cmp
mov
imul
push
pop
or
add
cmpb
push
pop
pop
cmp
sub
das
jp
adc
cld
inc
jge
and
nop
push
stos
mov
cwtl
xor
push
dec
or
orb
cmp
adc
das
out
inc
ss
inc
push
mov
test
sbb
in
insl
pop
loop
out
xor
cmp
cmp
data16
mov
add
gs
sti
cmpsb
adc
add
cs
repnz
add
mov
ds
jo
pop
mov
mov
lods
cmp
xor
fmul
adc
fmuls
std
push
sub
pop
idivl
enter
out
sub
ljmp
fiadds
shll
les
fsubl
add
je
sbb
mov
subb
lret
add
movsl
dec
adc
push
mov
add
adc
int3
mov
add
pcmpgtw
fadds
sbb
pop
mov
push
add
stos
shl
inc
push
add
ss
shrl
lahf
add
xor
add
daa
outsb
pop
jns
sub
loopne
dec
dec
dec
mov
in
xchg
jg
push
gs
add
insb
xor
or
pop
adc
pop
push
sbb
rcr
xorb
rolb
mov
lret
sbb
mov
iret
push
or
shlb
pusha
push
dec
mov
cmp
in
and
mov
jecxz
jne
add
mov
add
mov
add
sbb
jle
addl
ret
je
push
fs
sub
inc
xorb
mov
and
xor
push
sbb
sbb
inc
int3
test
add
sar
neg
mov
fiaddl
and
xlat
cli
scas
xchg
es
xor
int
mov
jne
test
lds
int3
add
pop
sbb
adc
jns
pushf
fucomi
add
orl
add
push
pushf
jo
ja
shrl
inc
add
push
xlat
add
insb
and
pop
dec
sub
push
push
cmp
add
inc
lock
fldenv
mov
andl
shlb
dec
mov
aam
mov
jl
cltd
lcall
add
or
stc
leave
popl
aaa
pop
lret
adc
xlat
cld
or
pop
dec
cli
jo
in
movsb
rcr
sahf
cmp
sbb
les
hlt
push
and
add
jne
cmp
rol
mov
dec
adc
cmp
int
loop
inc
test
cltd
cmp
push
sub
leave
add
sarl
xor
cld
and
dec
sbb
arpl
addl
jl
add
dec
jns
dec
lock
pop
mov
movsl
mov
dec
out
mov
lea
dec
add
mov
aam
xor
pop
sub
inc
sbb
call
add
cmp
and
adc
cmp
rol
fsubrs
jl
mov
mov
fstpt
add
lret
mov
es
xchg
and
scas
add
fwait
mov
frstor
add
ljmp
jle
movsb
aas
push
add
mov
add
pop
sub
cmp
dec
add
aam
rolb
add
sbb
add
xor
adc
aam
dec
inc
fs
add
lock
scas
loope
stos
inc
test
flds
xchg
testb
xor
pusha
mov
add
out
dec
xchg
bound
dec
inc
adc
fs
jmp
rcll
push
pop
dec
inc
enter
jne
clc
jl
lahf
add
push
cmp
pinsrw
xchg
lret
add
inc
mov
add
jmp
mov
mov
or
add
js
testb
jno
sarb
add
jg
add
sbb
imul
cmp
jecxz
shlb
inc
dec
sub
es
and
and
addb
repz
in
es
call
pop
fcmovne
xor
add
add
or
dec
add
cmc
addb
inc
dec
jne
inc
enter
packssdw
xchg
mov
scas
mov
dec
incl
fs
adcb
xchg
cmp
clc
cld
imul
adc
dec
ja
add
mov
out
mov
inc
mov
pop
lcall
lret
test
add
add
pop
stos
aam
test
sub
push
lods
pusha
nop
mov
add
and
add
aaa
mov
std
and
mov
and
inc
adc
out
add
inc
push
cmc
aad
mov
adc
jns
stc
adc
ret
adc
icebp
jge
loopne
add
cmp
push
sbb
sub
add
sub
cmpsb
add
mov
or
lret
xchg
add
bound
mov
adc
imull
in
add
loope
ret
lods
or
mov
adc
dec
out
jnp
pusha
incb
dec
add
sub
cmp
sete
add
inc
xor
and
dec
ret
add
pusha
cmp
loop
xlat
flds
or
push
pop
adc
rcr
shlb
add
jecxz
int3
mov
xchg
call
sbb
add
and
into
in
cwtl
or
dec
pop
stos
mov
in
cmp
ret
out
jne
add
push
clc
ret
mov
add
sub
adc
or
add
stc
and
and
and
jg
adc
add
and
adc
push
pop
mov
cmp
les
mov
inc
add
mov
add
fmul
adc
inc
sub
jae
sbb
add
in
data16
xchg
roll
push
cmp
sarb
sbbb
cmove
sub
loopne
das
pop
jae
jbe
rorb
add
mov
or
add
rolb
mov
add
push
imul
test
fucom
pop
into
imul
in
xchg
add
nop
cwtl
ret
call
into
add
ss
lea
mov
imul
rcrl
stos
in
add
sub
inc
insl
mov
addb
aas
test
push
cmp
cmc
jae
jle
add
mov
and
imul
cld
pop
movsl
in
mov
decl
rolb
push
mov
and
sub
add
add
jmp
ret
mov
pop
movsb
loop
movaps
jne
cltd
xchg
pop
dec
pop
add
movb
repz
movsb
in
add
push
mov
pop
and
xchg
icebp
sub
add
test
cmpsl
xlat
or
maxps
dec
pusha
inc
and
cmc
ss
xor
jnp
add
sub
imul
jg
dec
add
jmp
inc
add
stos
lea
bound
mov
fmuls
mov
imul
shlb
push
pop
ljmp
jnp
movsb
enter
scas
js
jbe
shlb
inc
add
or
push
sub
sub
mov
ljmp
sti
xor
add
sub
mov
ret
cmpsb
aaa
hlt
mov
add
adc
push
add
push
sub
pop
das
shll
cmp
and
fcmovnbe
subb
gs
loope
cmp
dec
or
insl
hlt
adc
cmp
lods
out
out
movq
ficoml
insb
jne
testb
inc
scas
je
jl
hlt
mov
xchg
sbb
int
cld
orb
outsl
add
push
cltd
ljmp
test
push
add
push
xchg
ds
and
jmp
sar
inc
mov
xor
or
sbb
sarl
fmuls
call
dec
ljmp
dec
dec
testl
sub
pop
push
inc
pop
xchg
and
cmp
add
inc
xor
add
dec
push
push
push
test
shr
clc
inc
push
je
or
push
loop
add
pop
fmuls
push
add
xor
mov
lock
add
push
mov
dec
mov
jecxz
into
push
jmp
lcall
add
lock
test
push
xchg
jne
mov
xchg
out
mov
imul
xlat
fcoml
js
aam
add
jl
dec
fadds
repz
adc
push
cld
out
jp
push
cli
subl
je
adc
inc
push
push
add
shlb
push
lock
push
les
and
adc
dec
mov
mov
inc
adc
push
shlb
push
dec
ja
or
push
jge
adc
dec
clc
add
scas
ljmp
add
nop
push
mov
add
mov
add
cmp
es
test
jae
jp
push
in
hlt
add
popa
repz
out
adc
test
xor
xchg
insb
lods
dec
cld
aas
aam
cmp
add
mov
add
inc
xchg
subps
xchg
loopne
adc
movsl
stos
add
out
call
cltd
cli
jge
inc
and
or
dec
push
outsl
ret
mov
jo
mov
mov
sub
cmpsb
rorb
xor
xchg
loope
cmp
sbb
popa
pop
mov
orl
mov
pop
popf
js
adc
add
rorb
lahf
fisttpll
add
ja
mov
fldenv
or
jp
pop
or
loopne
inc
adc
add
or
push
inc
data16
movzwl
roll
jmp
mov
je,pt
push
loope
loopne
xorb
mov
cmp
dec
jb
cmp
ja
lea
out
jb
add
lahf
jno
add
add
sbb
or
repnz
xchg
xor
push
test
rclb
sub
xlat
add
or
movd
mov
mov
push
call
hlt
and
cmpb
push
or
orb
dec
mov
lods
add
mov
or
add
push
imul
cwtl
push
fdivrs
sbb
jns
loope
pusha
int
push
add
inc
or
or
cld
add
inc
dec
mov
add
movb
neg
mov
orb
cwtl
add
dec
or
cli
push
aaa
loop
sbb
pop
push
mov
pop
sbb
cmp
push
cwtl
daa
add
call
jmp
and
add
jne
mov
or
add
bound
push
ljmp
push
pusha
adc
lea
cmp
push
fcompl
pop
pop
sbb
dec
and
rcl
adc
and
sbb
sub
add
mov
sbb
add
push
add
add
add
add
inc
loop
fdivp
in
sbb
mov
sbb
test
stos
test
push
mov
xchg
jg
push
fcomi
jae
jns
jb
mov
std
adc
and
mov
pop
xchg
cmp
ljmp
aaa
sbb
mov
add
iret
push
mov
push
inc
dec
add
dec
xchg
or
xchg
stos
pop
test
jle
xchg
xor
xchg
push
add
dec
mov
pop
in
out
call
hlt
add
aad
cmp
loopne
or
add
insb
adc
mov
aas
in
jno
pop
arpl
in
ficoml
add
addb
repnz
ljmp
pop
add
clc
call
push
call
and
jne
add
pop
xchg
in
dec
cmc
enter
test
jmp
mov
mov
xchg
adcl
fs
add
push
imul
stc
mov
push
cmp
cmp
jmp
jg
add
ja
pop
out
out
ret
in
push
xchg
faddl
fcoms
add
insl
xchg
pop
jno
insb
in
mov
cmpsl
pop
movsb
pusha
test
sbb
sbb
push
inc
push
or
or
mulps
bound
bswap
push
push
out
movntq
out
adc
and
shlb
add
test
cmpsb
shl
jae
add
adc
add
jmp
pushf
stc
add
loopne
ss
dec
push
add
pop
pop
xchg
lcall
ja
ljmp
sbbl
iret
add
or
shl
push
icebp
int
in
testl
add
jmp
fisttps
movsl
mov
test
sub
xchg
lahf
dec
fcmovnu
pop
and
add
stos
andb
mov
pushf
mov
xchg
dec
pop
add
jmp
add
mov
in
jecxz
jmp
fstps
sub
mov
ja
aam
pop
mov
lods
mov
add
or
mov
movsl
test
lret
mov
add
jns
adc
xor
mov
pop
mov
mov
cwtl
xchg
aam
push
add
dec
dec
pusha
jo
push
in
loope
leave
pop
push
xchg
xorb
mov
pop
rolb
int3
add
mov
xor
lahf
add
sub
andl
mov
fs
sarb
cmp
or
inc
add
add
mov
fcompl
pusha
add
jbe
out
pop
in
in
lahf
add
mov
jmp
mov
push
mov
test
add
icebp
or
call
inc
add
out
pop
push
les
mov
mov
rolb
add
test
jns
jle
xchg
cwtl
xchg
test
dec
dec
mov
pop
arpl
add
nop
add
add
negb
adc
test
pop
inc
sbb
ljmp
mov
pop
xor
xchg
lcall
add
jne
xchg
pop
or
pop
scas
push
add
lret
shll
lds
sbb
add
cmpsb
cmpsl
jmp
cwtl
movsl
or
add
inc
jle
mov
popa
inc
outsb
or
dec
pop
pop
mov
nop
cmp
adc
mov
jne
int
inc
mov
add
pusha
loop
nop
mov
dec
mov
stc
push
xchg
daa
add
fistl
jmp
decb
lret
andb
cmp
test
xchg
fcompp
bound
cmp
cmp
fsubrl
ljmp
add
ror
sub
mov
and
mov
in
in
push
sarb
test
jnp
lods
cli
push
jmp
add
call
mov
sbb
add
mov
mov
cmp
enter
jbe
adc
and
loopne
fcompl
fstl
xchg
mov
aad
mov
add
addr16
adc
loopne
rcrb
xor
test
les
rclb
call
loope
fnclex
out
icebp
add
mov
jl
jne
cmp
xlat
mov
jno
add
ret
les
pop
jae
or
add
daa
xor
rcrb
sbb
iret
add
loop
test
pop
bnd
into
arpl
and
fwait
adcb
icebp
add
add
or
dec
push
in
pop
xchg
loopne
negl
mov
fs
aam
pop
aad
fadds
jecxz
add
push
add
cmp
add
stc
clc
fs
std
cld
iret
adc
sahf
xorb
nop
aad
popa
xchg
push
adc
pmaxsw
add
or
in
or
popw
daa
xchg
add
mov
lods
cmp
add
cmpsb
mov
sub
stc
aas
and
cmp
aas
lods
lret
pop
cmp
pop
and
mov
jbe
inc
ja
js
add
in
ret
ror
jl
add
lcall
test
mov
in
out
add
adc
add
cmp
cmpsl
push
mov
mov
add
lret
or
enter
mov
dec
inc
lods
test
jmp
stos
mov
and
add
dec
jnp
jl
add
cmp
add
je
inc
jne
addb
rcl
push
addb
cmp
sub
movsl
stos
adc
in
pop
add
add
push
mov
mov
add
xchg
mov
add
sub
mov
mov
mov
add
sbb
jns
add
jp
sub
imul
cmp
push
push
loopne
add
popf
mov
fsubp
lds
lcall
lods
pop
daa
push
sub
push
add
ret
add
push
loop
xor
and
int
add
sbb
cmp
mov
mov
jne
and
xor
scas
stos
jo
mov
addr16
cmovp
mov
jbe
add
push
add
in
out
fildl
mov
dec
test
add
xchg
add
std
xchg
filds
test
int
mov
loopne
add
dec
xchg
adc
xor
imul
push
outsl
insb
sub
inc
in
lock
pusha
pusha
call
movl
cltd
jnp
shlb
test
add
movsb
and
cmpsl
aad
add
jl
sbb
movl
push
add
call
addb
adc
in
add
mov
xchg
push
loop
cwtl
jo
add
xor
inc
push
add
aaa
loopne
call
roll
out
jo
ret
jne
subl
ret
xchg
out
lret
cmp
add
and
push
sub
pushf
rolb
lcall
mov
pop
ret
jg
lret
icebp
mov
jp
cmp
xchg
cmp
movb
add
add
mov
insb
out
ret
les
dec
gs
or
xor
xchg
mov
add
adc
clc
pop
subb
push
cmp
cwtl
add
ja
loopne
jo
add
dec
mov
movsl
movl
jbe
add
test
xchg
loopne
jge
loop
int
mov
or
add
mov
out
xchg
jmp
mov
mov
push
add
movsb
adc
or
out
add
push
sub
inc
inc
dec
xor
inc
pushf
inc
add
cmp
out
add
test
fs
mov
cmp
pop
sbb
daa
pusha
xor
xchg
nop
pop
xchg
xor
add
inc
inc
jne
fmull
cld
push
jae
add
adcl
add
sbb
ficomps
shlb
ss
jo
add
call
pusha
cmp
mov
jno
outsb
les
in
mov
add
mov
jno
ret
stos
stos
or
aaa
int3
xor
out
add
lea
and
je
aam
adc
int3
push
push
enter
add
mov
pop
add
int3
scas
add
seta
neg
outsb
cmc
std
add
add
and
cmp
or
xchg
jo
mov
ljmp
add
jmp
add
and
divb
inc
loopw
and
mov
jo
dec
cmpl
push
add
in
les
cmpsb
add
aam
inc
xchg
call
ds
jp
lcall
out
lods
roll
fildll
das
sub
push
jmp
repnz
mov
js
fsubp
insl
add
enter
sbb
push
fadds
sub
cmc
outsl
aad
xor
push
lahf
repz
dec
daa
sbb
sub
xchg
jmp
out
lock
cs
or
adcl
out
push
xchg
jo
pop
iret
jmp
shr
int
das
jg
lods
dec
dec
jnp
movups
shlb
push
mov
lcall
out
in
and
push
imul
pop
dec
jae
loopne
add
xchg
jg
aam
bound
shlb
stc
scas
nop
sub
xor
std
xor
pop
nop
fidivl
adc
movsb
bound
add
push
rolb
nop
mov
shl
scas
cmc
add
test
lods
and
inc
lahf
xchg
xchg
push
inc
lods
push
rcll
movsl
loopne
fwait
add
cli
jb
jae
xchg
push
stos
pop
mov
dec
cmp
pop
sbbb
xor
sbb
sub
pop
cltd
pop
pusha
cs
je
mov
sub
stos
movsl
mov
jle
push
orl
into
cld
or
jb
add
push
pushf
cmc
pop
cmpl
cmpsb
or
mov
sub
adc
add
lock
add
or
subb
push
loopne
push
add
sub
adc
dec
ss
sbb
outsb
push
jae
add
data16
pop
xchg
addb
xchg
shlb
push
cmp
mov
and
popa
shrb
mov
shll
push
and
and
inc
pusha
and
je
cmp
pop
roll
dec
push
lock
xchg
add
mov
jo
in
call
lahf
and
fucomi
cmpsb
loopne
aam
sldt
jne
clc
flds
xchg
loopne
andb
add
shrb
xor
cmp
mov
push
mov
in
mov
add
das
mov
jmp
add
mov
jae
leave
add
clc
cmpsl
adc
mov
xor
inc
jno
or
loope
inc
hlt
cmp
add
mov
incl
push
sarb
xchg
cmpsl
add
cs
aad
scas
ret
sub
roll
xchg
or
add
mov
jne
add
sub
push
mov
cmp
add
mov
outsb
int3
add
add
or
add
add
aam
inc
in
add
out
aaa
push
cmp
fists
leave
enter
fs
sub
mov
cld
sbb
or
add
xor
add
out
jae
stos
sub
faddl
xchg
inc
in
aas
mov
add
jbe
pop
pop
loopne
clc
call
mul
stos
add
mov
add
arpl
jmp
imul
jnp
cmp
lret
cltd
xchg
call
jno
adc
add
inc
loope
js
xchg
lea
scas
mov
ret
jne
test
inc
dec
clc
add
lret
mov
mov
pop
adc
push
pop
fcompl
mov
outsl
repnz
mov
add
movsb
xchg
and
add
push
mov
imul
testb
insb
fsubl
mov
iret
inc
or
push
sub
rolb
aas
jne
cmp
jl
push
je
dec
xchg
ja
cmpb
mov
xchg
decl
sbb
add
es
call
add
out
adc
add
cmp
add
inc
jecxz
in
push
pop
mov
xor
lahf
push
repnz
jne
push
jmp
daa
outsl
aam
movsb
add
cli
sub
dec
push
outsb
jge
add
rclb
mov
or
inc
add
es
jg
mov
jbe
push
and
mov
addb
jns
xor
add
adc
add
pop
add
sbb
fistps
pop
insb
outsl
add
and
add
jb
das
add
mov
aam
inc
adc
mov
cmpsb
xchg
push
loope
add
pop
jecxz
cmp
jae
adc
mov
xor
rcrb
sbb
cmp
mov
jle
add
out
ja
movsb
adc
and
rcrb
js
add
repz
int
xor
mov
cmp
out
and
mov
mov
pop
lea
xor
in
xor
adc
lea
in
add
mov
andb
out
add
call
xlat
sbb
sbb
pop
add
lods
jmp
scas
jo
or
inc
and
mov
in
int
outsl
repz
cmp
in
imul
stc
rclb
pop
add
xor
xchg
loop
jne
add
lods
outsb
fcom
mov
pop
hlt
inc
add
or
fists
xchg
xor
add
or
pop
lds
cli
subb
pop
fiadds
mov
call
mov
push
cmp
cmp
jmp
and
std
fld
ds
add
lea
test
dec
mov
sahf
sbb
sbb
test
sbb
iret
add
inc
popl
sbb
dec
aaa
mov
loopne
inc
inc
sub
add
call
add
adcb
sub
mov
mov
sbb
in
cmp
add
sar
or
fildl
sub
lds
pop
leave
or
sbb
push
pop
gs
test
les
mov
adc
ror
jmp
js
add
outsb
add
ja
out
std
je
ret
xor
add
icebp
dec
push
push
imul
jge
test
jg
push
inc
xchg
sbb
dec
movsl
cmp
dec
push
add
xor
and
pop
and
add
pusha
lahf
clc
or
ret
inc
cltd
lods
dec
jb
cmp
aad
inc
rcrb
hlt
add
mov
popa
add
xchg
lock
cmp
jp
mov
add
repz
mov
xor
arpl
in
mov
add
call
dec
jle
add
xor
jne
cwtl
lods
pop
cmp
mov
add
add
xor
pop
add
je
mov
loop
add
cltd
lea
out
add
movsb
cmpsl
push
fmuls
adc
jmp
sbb
cmp
stos
sub
xchg
scas
add
rolb
clc
jne
add
pop
hlt
push
addb
fwait
adc
mov
inc
xor
or
sbb
ja
add
cli
sub
pop
lods
clc
dec
add
or
icebp
int3
out
jge
pop
push
popf
aam
or
add
jecxz
push
shll
dec
or
popa
dec
and
jo
test
cld
inc
add
or
movsb
add
testl
jle
mov
add
je
frstor
jmp
in
mov
mov
sbb
insl
push
or
xor
sbb
in
fdivs
mov
ss
or
mov
stc
nop
test
mov
add
sbb
cmp
pop
sbb
cwtl
mov
jmp
fs
clc
jns
mov
inc
and
push
add
mov
add
xchg
outsl
or
cltd
daa
add
jne
pop
add
sbbb
es
mov
shll
inc
pop
loope
nop
or
sbb
or
push
pop
dec
mov
je
call
lock
xchg
and
push
stc
scas
mov
add
movsl
or
inc
int3
hlt
add
xchg
call
mov
jle
movups
adc
nopl
rclb
xor
roll
inc
push
cmp
jl
movsb
add
nop
sarl
stc
push
pop
or
mov
jo
cmp
aad
pop
fs
pop
xor
xor
je
add
add
add
data16
push
fsubrp
mov
nop
or
dec
dec
push
testb
add
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
add
pop
in
adc
fiadds
cld
push
mov
imul
stc
jg
lock
cwtl
cmc
ret
pop
cltd
mov
jmp
jo
push
push
pop
adc
xchg
icebp
add
fiaddl
or
mov
rorb
pop
sbbb
and
or
add
jmp
cmp
insl
pop
inc
jne
jns
outsb
pop
ja
sbb
push
hlt
pop
cmpsb
or
icebp
dec
xor
push
pop
jae
mov
push
jo
adc
mov
aas
mov
sub
dec
inc
dec
dec
add
xchg
daa
test
cmp
add
xchg
jb
mov
inc
sarb
or
jg
jbe
cli
xchg
aas
jge
or
jl
call
mov
iret
lock
jns
xor
dec
cmpb
loope
je
push
mov
lcall
jmp
sbb
bnd
nop
pop
cmp
add
push
xchg
jnp
inc
add
sbb
add
adc
xor
push
popf
dec
push
lock
mov
and
xor
nop
cmp
ljmp
pop
test
fnstcw
ret
adc
ret
adc
mov
push
ja
xchg
xorb
mov
add
repz
adc
jg
or
movntps
cmp
add
pop
inc
pop
int3
shrl
mov
ss
pop
lods
enter
adc
lret
mov
add
jb
lds
sub
mov
jbe
jge
nop
add
inc
fs
outsb
arpl
inc
cmp
outsl
insl
shll
inc
add
cmp
inc
in
add
mov
jno
push
aaa
inc
into
mov
push
dec
pop
mov
xor
xchg
pop
adc
mov
lock
ds
push
in
cmp
addl
loop
loopne
mov
add
pop
xchg
sbb
jecxz
inc
jb
aaa
xchg
push
sbb
test
shl
cltd
add
stc
lahf
test
in
fwait
add
cmpb
cs
inc
mov
sub
adc
xchg
pop
or
dec
mov
lods
mov
js
sbb
inc
adc
lahf
fnsave
and
call
addb
dec
rdmsr
lcall
push
pop
pop
loope
jg
loop
push
rorl
adc
insb
outsb
ret
mov
cmp
sti
mov
xor
inc
push
cmpb
jp
es
fadds
cwtl
roll
int3
jne
jnp
lock
add
into
dec
orb
add
add
clc
pop
sub
je
pop
push
movsl
mov
mov
mov
dec
add
cwtl
cmpb
xor
cmp
ret
cmc
mov
add
or
pop
adc
clc
stos
add
icebp
lock
mov
cmp
cwtl
pop
add
push
mov
mov
sar
adc
xchg
mov
or
pop
inc
add
or
outsb
add
push
dec
lds
inc
out
loope
add
add
xor
fdecstp
inc
jbe
add
xor
pop
aas
adc
popf
daa
mov
imul
and
dec
leave
add
jp
nop
pop
inc
dec
add
sbb
sbb
or
mov
add
fiaddl
add
js
inc
mov
add
dec
int
add
div
adc
stos
test
sub
sbb
arpl
adc
pop
and
pop
adc
jmp
adc
call
dec
mov
push
push
push
outsl
les
mov
js
jb
fs
xchg
sbb
xchg
add
sub
les
mov
cmp
test
sahf
pop
es
add
stos
jg
add
sbbl
jl
out
sbb
or
enter
pop
call
repnz
sub
sbb
add
sub
push
cwtl
push
inc
pushf
loopne
xor
mov
pop
mov
pop
mov
enter
add
xchg
add
mov
sub
cmp
xchg
pop
fldl
out
mov
jl
adc
lea
pop
sub
add
cmc
xor
add
sub
inc
add
imul
call
mov
adc
jp
jle
add
fsubr
add
shlb
andb
or
cmp
or
jmp
add
push
xor
out
lea
add
pop
add
wbinvd
rolb
ret
sbb
ret
movsl
add
adc
xor
push
test
push
or
push
jnp
add
add
mov
lds
adc
jge
xchg
testb
add
sub
and
rorb
mov
jnp
cmp
addb
add
lret
add
fsub
dec
or
jl
add
ffreep
xor
add
mov
loopne
fwait
pop
movsb
mov
pop
push
loop
subb
jl
jp
or
and
adc
dec
sbb
adc
iret
xchg
orb
lods
rcll
ss
call
int3
repnz
inc
pop
jl
or
dec
push
dec
out
andl
or
cs
or
nop
ror
jo
imul
or
xchg
or
and
pop
insl
jnp
sbb
test
sub
mov
or
arpl
jmp
or
add
cmp
nop
push
and
jbe
sub
in
clc
or
pop
ds
and
and
sbb
pop
or
add
push
cltd
mov
jg
je
jns
es
add
pop
cli
test
add
jp
sub
xchg
enter
sub
jmp
or
inc
push
push
add
sahf
dec
imul
cs
push
pop
or
sbb
add
cmpsl
pop
lds
mov
or
inc
push
and
sbb
mov
push
adc
sub
add
push
mov
xchg
loopne
mov
push
imull
adc
out
lods
arpl
and
shll
clc
lret
bound
or
lods
int
rolb
call
add
leave
call
nop
inc
sbb
sarb
and
sub
add
xor
and
lock
gs
or
and
pop
inc
loopne
add
xor
and
ss
cmp
or
mov
add
xor
lret
shrb
pusha
cld
popf
cli
in
das
out
ret
sbb
jb
movl
and
outsb
add
push
mov
add
mov
imul
add
xor
pop
lods
add
jno
loope
mov
add
pop
nop
rol
out
pop
imull
xor
rclb
jne
sbb
push
or
adc
jb
mov
lret
fcomps
int
add
mov
add
pop
xor
dec
adc
pop
call
mov
fcoml
inc
and
test
jnp
sti
int3
mov
dec
inc
jno
adc
jo
inc
or
jmp
add
inc
pop
addb
mov
sub
add
or
cmc
pop
inc
push
xor
push
add
xchg
jns
ja
cs
xor
add
pop
mov
in
out
add
lret
mov
pop
jns
es
push
adcb
popa
inc
pop
add
ss
hlt
int
ja
add
lods
mov
jne
pop
and
dec
pop
aam
adc
xchg
push
sarb
xor
sub
sbb
add
rcrl
daa
add
cmpb
lods
repnz
add
dec
ljmp
add
jmp
cld
js
jp
and
mov
mov
push
add
addl
mov
cmp
sbb
ja
mov
pushf
dec
icebp
in
inc
mov
loopne
push
push
pop
and
pusha
mov
jne
loopne
pop
test
and
push
push
inc
inc
fisubs
xor
mov
shl
mov
andb
push
cwtl
and
ret
inc
dec
inc
lock
push
clc
insl
xchg
mov
sub
push
and
out
xchg
sbb
sub
aam
xor
roll
les
add
enter
xor
jl
mov
lods
adc
mov
and
out
mulb
adcl
xchg
outsl
push
ja
and
mov
imul
cmp
and
insb
cwtl
push
loopne
push
dec
jbe
sbb
je
add
push
jb
outsb
jae
insl
gs
iret
sbb
jne
rcr
xor
mov
add
push
and
or
dec
jnp
pop
xchg
pusha
dec
subb
push
imul
and
and
adc
les
bnd
in
adc
sub
cmpb
xlat
mov
das
fs
push
jae
push
xor
jbe
and
sub
je
pop
jp
add
mov
jl
out
cld
mov
add
rorb
jge
add
outsb
jne
sbb
add
imul
or
and
or
imul
mov
or
sub
loop
xchg
pop
jne
bound
js
inc
pop
lret
xor
mov
popa
fs
and
jmp
push
adc
lods
add
push
adc
adc
movsl
add
std
shrb
sub
dec
mov
add
mov
push
mov
cwtl
add
ss
mov
enter
xchg
add
lock
adc
push
str
lret
add
or
add
push
jg
adcl
addr16
add
mov
mov
addl
jne
shll
call
orb
orl
add
andb
inc
insl
in
and
add
adcb
lahf
fiaddl
movsl
popa
adc
stc
aam
sub
rcl
lock
loope
call
add
dec
pop
push
and
addb
push
cmpsb
test
stos
subb
pop
sub
or
loopne
jns
sbb
ret
add
add
lock
sbb
dec
push
add
shr
repz
cmp
mov
call
push
int3
js
ja
add
test
pop
out
lds
sub
add
and
stos
in
pop
pop
push
pop
pop
pop
add
cs
mov
push
popa
call
dec
or
mov
lea
clts
mov
sbb
xchg
pop
xor
clc
mov
testl
or
fmuls
add
push
movsl
xor
sub
lods
orb
and
cwtl
and
cmp
pushf
loope
inc
pusha
inc
mov
mov
lea
add
adc
fdivrs
add
roll
add
loope
ja
xor
push
inc
add
sbb
pop
pop
aaa
pop
xor
add
leave
js
jae
outsb
rclb
dec
push
dec
cmp
add
cmp
mov
add
les
inc
sub
leave
mov
imul
icebp
hlt
in
mov
loope
and
or
add
insb
sub
dec
sbbl
pop
shlb
pop
stc
sarl
add
and
cld
cwtl
or
movsb
push
dec
xchg
xor
jne
and
clc
aam
dec
call
mov
and
enter
sbb
push
cwtl
pop
movl
and
and
add
cld
mov
add
add
in
mov
out
call
push
mov
clc
dec
mov
dec
cmp
cmp
or
test
nop
push
enter
popf
xchg
sbbl
pusha
or
sbb
in
or
imul
mov
ret
add
sub
mov
dec
add
nop
or
mov
popa
test
in
je
pop
jo
push
scas
les
and
vmovups
push
add
cli
fsts
add
mov
lea
cmp
add
xchg
loopne
mov
jmp
lret
nop
int3
in
jge
lock
mov
push
add
sub
es
ret
mov
add
cld
and
int3
setb
pop
sbb
ja
rolb
call
inc
out
and
stos
mov
mov
ret
sbb
add
jne
in
or
adc
cmc
mov
xchg
ljmp
fstps
ret
inc
push
mov
jl
test
pop
adc
jmp
push
push
lods
add
mov
jge
add
ret
call
and
add
je
lahf
stc
dec
sub
mov
adc
add
or
cli
or
push
inc
movsl
add
fwait
adc
mov
cmpsb
pop
push
sbbb
jle
push
mov
and
in
clc
cmp
sahf
dec
or
movsb
push
and
in
cmc
outsl
xchg
add
mov
das
or
int3
xchg
add
cmpsl
pop
adc
cld
jg
pop
movswl
add
cli
jmp
sbb
lods
mov
add
cmp
xchg
jbe
add
mov
inc
cmp
add
outsl
fs
in
adc
fldl
mov
mov
mov
add
lcall
pop
inc
pop
or
add
outsb
cs
push
xor
or
jo
push
sub
repz
shlb
push
dec
out
jmp
sub
loopne
jge
sbb
in
call
div
add
mov
test
push
add
test
add
pop
mov
popa
jb
mov
add
lahf
cmp
push
mov
inc
push
mov
add
call
jo
cmpsl
add
xchg
data16
aaa
fwait
adc
hlt
into
mov
pop
push
and
mov
jo
rolb
nopl
or
adc
and
push
fmull
in
jae
js
test
popf
jnp
hlt
mov
mov
xor
popa
add
cmpb
gs
lea
pop
icebp
add
sbb
clc
push
jp
cmp
cmpsl
xchg
into
lds
adc
subb
addl
adc
in
cld
mov
xchg
inc
mov
jmp
push
pop
in
jo
test
pop
add
jle
mov
and
or
jb
add
stos
cmpsl
daa
jge
lock
test
pop
orb
xchg
mov
outsl
add
pop
cwtl
jae
sub
sbb
or
or
pop
ljmp
andps
mov
jae
or
ja
xor
mov
add
test
mov
xor
mov
test
das
sub
and
jo
dec
lods
mov
push
pop
cmp
loop
aam
add
jb
adc
lods
aad
add
push
or
pop
inc
loope
js
add
push
loopne
jl
in
leave
add
fs
jecxz
imul
xchg
rclb
je
pop
mov
inc
push
nop
dec
ficoms
ret
xor
push
xchg
in
movsl
jns
dec
mov
add
stc
adc
xor
add
jo
arpl
or
mov
incl
hlt
xor
cmp
dec
xor
test
jp
mov
adc
jo
sbb
sbb
or
adc
inc
push
xchg
sbb
pop
sbb
sbb
jo
mov
mov
aas
lea
pushf
mov
jo
cli
push
add
add
js
lods
cmp
aam
hlt
sahf
pushf
mov
push
mov
add
iret
mov
mov
sarb
loopne
test
mov
aas
add
fsubp
mov
repnz
fildl
jno
jp
fimull
add
add
scas
xlat
ja
add
incl
xor
fdivp
adcl
nop
mov
popf
pop
pop
cld
loopne
jecxz
clc
xchg
add
pusha
popa
mov
jb
std
mov
add
fwait
cs
lea
cmc
push
push
int
ss
jmp
lods
sbb
lret
rorb
jnp
paddusb
aas
test
cmpsl
aam
sub
jecxz
add
pusha
movsb
fs
cli
lahf
pop
xchg
movl
xor
mov
call
pop
add
mulb
or
shlb
pop
loopne
add
mov
dec
shr
nop
add
jg
pop
add
jb
mov
inc
inc
xor
and
ljmp
test
adc
mov
incb
mov
pusha
pop
or
sbb
addb
cltd
adc
add
or
clc
rol
add
icebp
nop
push
es
cvtpi2ps
add
sub
rol
or
in
testl
ret
repnz
pushf
xor
idivl
and
testb
cmp
or
and
cmpsb
push
adc
pusha
pop
mov
sub
jp
loop
aad
clc
lock
inc
and
mov
add
add
jbe
ficoms
add
ret
cmp
cmp
ljmp
xchg
addb
rcl
cwtl
clc
push
mulb
test
andb
mov
jge
addr16
add
lahf
and
sbb
sbb
jbe
es
jae
add
and
cld
mov
mov
cltd
add
push
js
xor
add
xor
pop
fimuls
scas
ljmp
jne
add
add
pusha
lods
jmp
add
add
sub
pop
cmovs
or
sarb
filds
adc
cmpsl
notl
add
mov
test
inc
cli
jge
add
movsl
cmp
add
xchg
dec
mov
dec
inc
mov
inc
mov
clc
mov
adc
test
jo
fxch
jge
jbe
inc
add
cmc
or
push
fisttpl
scas
sahf
aad
movsl
lahf
in
getsec
add
sub
cmp
push
pop
push
add
dec
imul
add
stc
cmp
push
push
das
cmp
pmuludq
adc
jne
or
movswl
jae
mov
jno
lahf
pop
push
pop
xor
and
sbb
cmp
cmp
roll
call
daa
in
mov
popf
cwtl
and
dec
add
or
cmp
mov
sbb
mov
dec
mov
enter
xor
inc
add
clc
pop
hlt
cli
xchg
inc
js
add
ds
lock
and
or
adc
fildll
sub
sbb
in
popf
add
xchg
dec
sbb
ds
and
mov
inc
cmp
ss
inc
sub
fmul
in
mov
jmp
dec
cmpl
je
push
add
lret
mov
pop
sub
test
add
sub
push
mov
aam
testb
mov
xor
add
rol
or
rorl
mov
lock
jp
inc
add
add
or
xchg
lcall
add
ja
jne
lret
push
jno
or
sub
cmc
xchg
pop
fcmovu
add
cs
mov
add
jmp
inc
add
sub
sub
or
test
jo
add
adc
push
pop
xchg
fdivp
and
and
sub
push
jo
add
xchg
shr
cmp
scas
jle
add
push
push
daa
push
loopne,pt
cmpsl
mov
mov
ja
sub
push
inc
addr16
lret
cmp
add
and
scas
jae
mov
mov
test
adc
xor
out
cs
jle
dec
test
add
je
cmp
xor
outsb
subl
push
adc
nop
add
xchg
add
mov
insb
movb
add
xor
into
sbb
mov
push
movsb
movsl
pop
or
in
mov
test
es
mov
lods
add
into
mov
inc
mov
or
adc
or
mov
dec
jp
test
jmp
sub
add
and
sub
and
jnp
push
sub
cwtl
add
push
jle
mov
lods
movsb
xchg
rolb
lea
int3
add
push
sub
inc
lds
cmp
inc
cld
xchg
xor
clc
cwtl
outsb
sbbl
add
jmp
movl
sbb
add
and
adc
adc
and
addr16
aam
mov
xor
mov
jmp
in
in
inc
aam
dec
dec
add
cld
and
dec
clc
movl
out
fcomps
push
pusha
loopne
jns
adc
cmpps
add
std
jno
addb
sub
das
adc
pop
repnz
pop
sub
inc
add
addl
loop
or
test
add
ljmp
scas
lahf
and
add
lea
in
inc
adc
shrl
push
loopne
sub
fisttpl
pop
mov
add
pusha
shl
fsubs
jb
inc
mov
scas
insl
shr
inc
rcrb
xchg
sbb
int3
xlat
mov
test
enter
outsl
xchg
les
adc
and
mov
mov
add
ljmp
loop
and
je
pop
shll
mov
mov
cwtl
inc
iret
jp
ds
fildl
divl
inc
and
enter
push
repnz
push
add
jo
subb
jno
imul
out
ficomps
pop
in
nop
mov
test
add
xchg
pop
fsubrs
push
mov
or
adc
cmp
xchg
xorl
add
add
hlt
pushf
push
mov
cmpsl
add
mov
add
insb
in
push
or
loopne
inc
dec
clc
add
and
stos
lods
and
lods
or
loop
rorb
and
ljmp
enter
mov
cmpsl
add
xchg
scas
daa
std
cmpsb
les
rolb
stos
dec
rorb
add
jb
cmpl
hlt
mov
pop
push
mov
addb
push
jmp
sbb
jmp
mov
jno
mov
or
push
cli
pop
mov
inc
enter
pusha
je
push
shrd
jo
daa
mov
mov
ficoml
lret
push
movsl
sub
jp
xchg
ror
mov
out
and
sub
mov
fimull
jno
notb
lods
add
lret
fiadds
sbb
loopne
lock
inc
enter
inc
or
push
mov
jg
mov
or
sub
leave
dec
mov
pop
inc
push
xlat
inc
movl
or
push
jns
mov
jbe
pop
add
mov
add
jne,pn
mov
addb
jmp
aas
fwait
sbb
or
xor
adc
cli
mov
add
and
divl
mov
repz
push
test
xorl
pop
mov
nop
inc
rorb
mov
add
dec
jne
mov
inc
and
outsb
mov
stos
lret
push
add
bnd
push
mov
add
gs
lcall
pop
mov
jb
imul
cmp
rcr
sbb
in
mov
add
rcll
in
push
nop
movsb
jae
pusha
jns
jge
add
jecxz
cmp
mov
fdivrl
lods
push
mov
mov
inc
adc
add
data16
popa
aad
nop
outsb
xchg
lds
mov
adc
sti
shlb
mov
addl
imul
adc
jg
mov
jnp
cmp
stos
xor
add
cld
inc
dec
xchg
cld
add
in
call
push
roll
mov
iret
xchg
stos
inc
or
inc
mov
and
pusha
daa
add
testb
mov
mov
add
jecxz
or
add
add
mov
push
jne
lods
movsb
lret
add
fsubl
lock
popa
cli
xchg
xlat
push
pusha
rolb
push
jg
add
lods
and
and
dec
sub
add
xchg
inc
movsb
stos
test
lock
lret
lds
pop
ret
mov
test
out
test
mov
jle
add
mov
cmp
push
fidivrl
dec
sbbl
insb
shlb
js
add
push
pushf
test
push
roll
xor
and
popa
mov
mov
and
push
sbb
ret
cmc
int
jmp
add
pop
cmp
ret
clc
push
add
mov
or
leave
sbb
add
ds
call
call
rcll
mov
xor
nop
in
enter
cmp
imul
cmpb
mov
int
add
jae
les
pop
add
mov
xor
out
data16
popf
std
cmp
and
pop
mov
jae
or
xchg
nop
mov
push
add
push
push
pop
add
jl
inc
xchg
jg
clc
sub
or
pop
adc
pop
add
repz
cld
sub
xor
in
add
mov
test
inc
and
add
imul
xor
xor
aas
notl
pusha
popa
arpl
test
add
shlb
push
push
loop
ret
test
inc
test
popa
mov
cwtl
mov
negb
loope
sub
xor
xor
inc
mov
mov
shlb
jne
mov
inc
push
je
faddl
mov
adc
add
cmc
push
sub
inc
mov
movsb
daa
out
fs
or
outsb
add
jg
aam
or
add
dec
inc
dec
dec
and
adc
ds
imul
out
add
cwtl
mov
dec
inc
scas
aad
xor
testl
pushl
sar
xchg
push
das
loop
dec
cmp
add
dec
lods
cmp
fcoml
bound
sub
adc
daa
sub
pop
jo
movsl
inc
hlt
frstor
inc
call
fcomps
mov
jl
stos
enter
testl
add
inc
jb
jnp
psrlw
int
inc
sub
std
mov
add
and
dec
lock
in
pop
mov
fs
push
cmpsl
or
push
inc
sbb
push
add
mov
push
cld
shr
sub
flds
xchg
out
scas
and
jmp
sar
inc
add
ljmp
add
gs
inc
add
dec
pusha
out
pop
lock
fnstenv
in
add
push
out
sbb
adc
mov
jmp
push
add
or
jle
cmp
ss
adc
aas
add
repz
outsb
mov
inc
push
xchg
lret
push
dec
mov
xchg
jle
cmp
or
inc
sub
andb
mov
hlt
pop
sub
push
push
js
das
repnz
popa
imul
jne
push
and
cmp
cmp
push
xor
dec
mov
shll
sahf
data16
add
mov
push
sbb
push
ljmp
jg
out
loope
dec
and
test
xor
imul
sub
xchg
lods
jns
or
orl
incl
repz
fs
cmp
add
cmp
mov
in
pusha
push
rorb
pop
add
cmp
mov
or
pop
pop
jl
hlt
inc
shll
xchg
add
fisubrl
idivb
dec
add
rorb
add
xor
or
pop
seta
enter
or
add
or
lahf
cmp
add
mov
push
pop
insl
fcomps
pop
adc
xor
imul
jge
jg
add
jns
push
adc
add
xor
ficompl
add
push
mov
insl
rol
xchg
jno
push
xor
jb
cmp
cmp
out
adc
xchg
fnstcw
dec
jne
push
and
add
incl
ja
test
add
cmp
outsl
nop
sub
imul
cli
push
test
addl
stos
cmp
mov
inc
dec
mov
add
pop
mov
add
iret
adc
dec
addb
addl
pop
pop
push
dec
adcb
mov
mov
add
fs
sub
leave
and
ffreep
cmp
mov
mov
mov
lret
cmp
pop
add
xor
enter
and
dec
pop
add
fnstsw
sahf
xchg
leave
add
push
or
test
mov
sbb
xchg
rcl
loopne
cltd
sub
sbb
cwtl
inc
lods
push
inc
or
add
sbbb
xor
push
xchg
add
je
add
mov
clc
add
aas
dec
xchg
aad
test
cmp
cld
mov
xor
xor
shlb
ret
mov
and
gs
lds
js
add
fiaddl
mov
jmp
sahf
pusha
popa
add
push
jno
das
cmp
and
dec
sbb
cmpsl
stc
js
cvtps2pd
clc
pop
invd
popa
mov
jne
cwtl
lret
and
cmp
or
inc
xchg
dec
add
jp
verw
jg
add
movsl
cltd
or
sbb
cmpsb
aad
movntq
mov
mov
pop
jbe
jns
pop
push
inc
or
sbb
sub
fisubl
add
mov
mov
lahf
mov
rcr
mov
sub
and
sarb
cld
cwtl
push
sub
push
add
xchg
dec
jl
sarb
mov
loopne
push
loopne
adc
and
pop
push
data16
insl
inc
pusha
add
fs
insb
sub
dec
cmovae
imul
add
enter
lods
bound
add
insb
int
adcl
jne
add
sahf
popa
or
push
bound
add
mov
mov
mov
mov
lods
and
inc
enter
inc
int3
rorb
add
adc
and
pushf
xor
add
cmp
test
add
in
fs
pushf
testb
jmp
stos
insl
inc
add
jno
data16
adc
imul
pop
add
arpl
int3
test
push
bound
js
cmp
mov
or
clc
add
mov
in
add
dec
cmp
add
jb
xor
push
call
lret
out
sub
mov
shl
add
sbb
fisttps
cmpsb
fwait
add
add
loope
mov
mov
outsb
ret
loopne
mov
ja
xor
adc
pop
push
push
jbe
sbb
mov
jne
xor
push
cld
inc
scas
stos
xrelease
mov
sub
add
inc
nop
cmp
insl
jno
inc
imul
iret
mov
add
dec
sub
hlt
mov
add
fiaddl
repz
js
jp
add
mov
push
stc
xorl
add
sub
jmp
and
jge
cltd
mov
mov
ss
je
or
iret
inc
or
mov
cwtl
push
pop
cltd
add
sbb
xchg
adc
cwtl
insb
push
and
inc
add
mov
call
sub
jbe
je
pop
sub
and
loopne
and
rolb
push
aaa
mov
sub
add
out
sub
arpl
push
xchg
or
add
adc
adc
enter
repnz
add
movsl
out
es
call
dec
inc
and
cmpl
cmp
cs
add
sub
adc
data16
add
or
add
sbb
adc
popa
sbb
add
mov
fldcw
shlb
add
inc
fisubs
cld
nop
fadds
enter
xchg
xchg
mov
mov
adc
pavgb
loopne
add
insl
mov
mov
rcl
filds
xchg
mov
mov
mov
mov
add
cmp
es
add
test
add
cmc
outsl
insb
pop
roll
cmp
lcall
mov
ret
push
add
jo
push
push
mov
add
out
orb
data16
ja
push
popf
inc
lods
add
jbe
sbb
mov
cmp
pop
sahf
mov
shl
dec
adc
jne
add
jae
fcmovbe
mov
les
test
push
jns
loopne
std
cwtl
add
inc
push
test
pushl
push
or
arpl
ljmp
inc
pop
xchg
or
xchg
or
add
cmp
int3
stos
inc
nop
sub
inc
test
mov
mov
inc
clc
xchg
inc
pop
add
insl
dec
cmp
cmpsl
or
lods
mov
aam
icebp
scas
pop
aas
loopne
lahf
or
aad
and
nop
jo
push
add
fistps
push
movsl
cmp
sbb
mov
testl
dec
fildl
adc
and
ret
xor
mov
pop
cmp
sub
or
leave
popf
pop
sub
lock
dec
and
jecxz
add
adc
data16
enter
dec
pop
and
mov
mov
and
add
in
aad
in
jae
test
pushf
dec
dec
sbb
sbb
fisubl
add
mov
or
in
mov
dec
cmp
xor
popf
sub
push
cmp
loope
mov
je
add
inc
bound
fs
or
sbb
adc
xchg
add
mov
addb
outsb
add
dec
gs
jne
push
jp
jnp
jg
dec
lods
mov
pop
add
loop
mov
sbb
lret
and
or
sub
cld
mov
add
pushf
sarb
hlt
fwait
sub
inc
xchg
cwtl
add
pop
jp
push
or
adc
fs
mov
jae
jbe
mov
ret
xchg
adc
fsubrs
cwtl
jne
sub
jnp
adc
sub
push
mov
lahf
pop
jo
add
scas
andb
add
call
jle
mov
mov
dec
xchg
mov
fnsave
outsl
jae
add
psubusb
add
jg
mov
daa
imul
add
mov
sub
cmp
jmp
or
add
stos
push
lahf
outsb
stc
pop
shlb
add
mov
pop
pop
sub
je
arpl
push
shlb
hlt
inc
dec
daa
jne
jnp
add
out
bound
inc
jge
int3
jle
inc
xchg
das
and
es
adc
les
dec
testl
dec
mov
fcompl
or
pop
clc
push
add
loope
in
add
mov
jns
xchg
xchg
dec
adc
pusha
outsb
push
add
mov
push
push
add
xor
mov
add
push
loopne
test
add
mov
rolb
notb
pushl
push
jo
loop
cmp
add
and
dec
push
aaa
pop
add
push
mov
sbb
inc
sub
adc
pop
add
jl
sets
jne
sub
inc
loopne
sub
sahf
pop
loope
mov
add
popa
sbb
nop
xchg
pop
mov
insl
push
cltd
jo
outsl
push
lea
adc
ret
mov
add
mov
add
fcoms
clc
or
pop
cmp
mov
pop
rol
xor
popa
mov
or
addb
jns
popa
and
js
lock
add
jo
add
push
push
pop
and
or
cmpsb
push
add
mov
div
pop
lock
shlb
movsl
pop
inc
adc
dec
dec
in
aas
add
jecxz
mov
stos
push
bound
dec
add
cmp
jl
lsl
clc
jmp
repnz
add
inc
jnp
sub
bound
inc
dec
arpl
jo
fidivl
sbb
fst
and
or
adc
jge
cmc
imul
int3
dec
mov
jge
push
or
inc
loope
pop
pop
push
cmp
adc
rorl
xchg
mov
add
cmp
push
sub
add
in
lahf
jnp
mov
imul
xor
pop
mov
icebp
inc
sbb
xchg
mov
xchg
jecxz,pt
fadds
add
test
movsl
call
sub
popf
add
pusha
push
or
jle
pop
xlat
xchg
out
cmp
shll
add
ficomps
mov
pop
sub
or
loop
mov
paddq
jno
pop
call
jb
fdivl
out
movsl
adc
filds
adc
adc
jecxz
pop
call
popf
xchg
popa
or
add
push
je
add
fdivrs
sub
ja
idivb
add
lods
push
out
jno
and
iret
jo
inc
push
add
ljmp
add
imulb
lret
cmc
push
inc
leave
and
imulb
or
mov
mov
fwait
mov
sarl
and
pop
add
push
pop
mov
sub
push
xor
sbb
aam
push
add
mov
add
push
into
sub
iret
std
aas
repnz
sub
add
lret
jmp
add
or
or
push
dec
je
push
mov
pop
push
cmp
cmpsl
shld
add
mov
adc
sub
xchg
jns
add
add
pop
mov
dec
push
pop
push
xchg
movsb
mov
add
fs
movsl
les
fdivr
sub
adc
bound
pop
inc
inc
scas
add
mov
aam
inc
jnp
cmp
sub
aas
mov
add
movsb
loopne
add
jne
clc
sbb
shl
jge
imul
je
leave
fs
add
inc
mov
shrb
les
iret
push
lret
pop
and
in
add
push
add
in
add
push
repz
push
out
loop
or
jno
and
dec
les
insb
push
inc
pop
gs
rcrb
test
loopne
inc
out
jns
leave
dec
sahf
lret
cmp
adc
lods
sti
orl
sub
add
push
fdivs
shlb
addl
sub
ja
rcrl
rolb
mov
add
rclb
enter
mov
cmp
incb
pop
xchg
jns
lret
xchg
xlat
fwait
add
or
add
push
push
add
out
in
pusha
or
daa
add
shrb
push
mov
faddl
lods
addb
clc
dec
roll
or
cld
add
dec
jne
lock
cmpsb
fdivrl
sub
inc
add
into
inc
mov
shl
add
cmp
out
data16
aas
or
add
sbb
and
or
adc
pop
cmc
in
jo
lahf
hlt
add
jb
fldenv
pop
mov
push
cmp
sar
andb
push
pop
aaa
pop
mov
and
xor
jmp
mov
inc
mov
mov
add
push
dec
int3
cwtl
call
cmp
scas
jne
inc
push
gs
out
in
pop
add
or
mov
cmp
sub
lret
add
adc
adc
sbb
inc
clc
sbb
jb
pop
shl
dec
cmp
jl
rolb
ja
pop
push
out
or
pop
shlb
and
pop
push
or
push
and
add
shll
pop
nop
jge
jns
add
mov
cld
jae
push
fiadds
mov
test
xor
decb
jge
xchg
mov
sub
add
add
jns
push
adc
jae
dec
mov
sub
pop
sub
add
push
sub
call
jmp
gs
add
cwtl
cmc
mov
inc
daa
loopne
sti
inc
clc
push
movb
add
add
scas
add
push
add
mov
mov
aas
add
adc
add
and
movb
sub
mov
add
out
dec
cmp
adc
add
mov
rol
jne
cld
das
add
jg
cli
scas
repz
les
dec
add
push
sbb
and
push
pop
std
rcll
out
stc
ja
sbb
mov
enter
add
and
pop
fmuls
push
test
sbb
cwtl
sub
sub
sub
push
mov
cwtl
bound
add
add
ret
aam
inc
mov
lret
add
lock
and
push
cmp
and
jae
pop
or
add
test
shlb
add
dec
mov
mov
push
addl
out
sbb
cld
xchg
pop
pop
add
jg
xlat
add
inc
sbb
into
enter
out
xor
adc
sbb
mov
fildll
add
sbb
inc
xor
add
das
call
mov
mov
pop
pop
xchg
test
int
jmp
add
lcall
cwtl
adc
iret
mov
add
add
popf
or
jne
push
jae
pop
add
mov
sti
cmovge
fisttpl
inc
rcr
ds
mov
cmp
fsubs
in
mov
testb
push
adc
add
enter
insb
add
aam
test
in
add
mov
jne
pusha
xchg
dec
cmp
inc
dec
aam
and
das
insl
les
hlt
clc
add
and
add
and
add
adcl
add
jmp
inc
insb
les
cltd
inc
add
in
adc
jbe
jmp
fwait
add
lret
pop
add
bnd
pop
dec
xor
mov
push
sti
mov
add
jno
pop
add
repz
testb
sub
add
pop
inc
jmp
and
xlat
cmpb
add
jne
adc
adc
add
mov
xchg
and
shr
and
or
adc
mov
and
mov
inc
mov
jne
add
je
iret
mov
or
add
leave
mov
add
sub
mov
rcrb
add
lcall
dec
pop
add
les
add
xchg
or
jns
and
mov
mov
hlt
jae
lahf
test
xor
push
xor
shlb
add
test
insb
push
dec
jne
push
loopne
jns
movsl
lret
mov
cmpsb
cmp
mov
das
pop
testb
push
outsb
mov
lods
fwait
nop
add
mov
fcoml
punpckhdq
add
xor
enter
xchg
and
add
or
cmp
pop
in
add
test
add
jl
cmp
popf
mov
pop
inc
adcl
pop
xchg
xor
and
and
add
jle
adc
jmp
dec
stos
loope
pusha
nop
inc
add
mov
sbb
pop
cmp
add
and
add
pop
mov
xor
sbbb
lret
ss
inc
cwtl
add
addl
add
mov
cld
or
mov
lcall
or
scas
lock
outsb
sub
add
aad
cld
test
rclb
xchg
jo
inc
add
add
notb
js
inc
and
add
and
dec
add
adc
jmp
sbb
add
xor
add
push
cmp
addb
inc
inc
cmp
jne
pop
rclb
cltd
and
adc
les
insl
dec
cwtl
mov
pop
xor
das
mov
pushf
ss
andl
pop
xor
enter
loopne
jns
xchg
js
dec
fcompl
lods
push
std
sti
add
lcall
jnp
jge
push
add
or
xor
dec
mov
ljmp
ficomps
imul
jge
xchg
jns
pop
test
xchg
push
mov
xchg
xorb
xor
add
add
inc
jl
push
in
push
aad
and
rclb
lock
lods
dec
in
out
add
js
mov
jne
in
cltd
add
adc
sbb
repz
sub
or
mov
insb
add
jge
adc
dec
inc
fs
jb
cli
mov
lret
jmp
dec
inc
or
aas
cmpsb
leave
cmp
ss
call
pop
dec
cmp
add
popf
popa
and
add
push
pushf
mov
push
mov
and
je
es
lret
lret
icebp
mov
add
push
push
xlat
adc
sub
jecxz
cmp
dec
add
loope
push
sahf
insl
xchg
out
add
ret
daa
push
add
xchg
jb
sub
push
xchg
sub
pop
aad
add
xchg
cmpsl
test
add
mov
xchg
ret
jmp
jno
idivb
or
lea
inc
shlb
sub
nopl
push
or
inc
push
rol
popf
jae
add
cmp
add
fiaddl
test
add
add
cmp
push
xchg
in
mov
xlat
mov
mov
pop
jge
add
shrb
mov
ja
mov
aas
cmp
jg
out
mov
xor
inc
push
mov
push
xor
imul
jg
mov
add
loopne
repnz
cli
cmp
loope
in
test
mov
add
add
add
push
jne
ret
call
push
jae
xchg
loop
and
add
movsl
xor
jne
idivl
mov
jnp
jne
pushf
sub
lea
push
push
das
add
jb
add
add
hlt
add
js
pop
pop
sbb
mov
inc
dec
or
dec
inc
nop
inc
push
fisttpl
sti
rorb
hlt
push
add
jl
sub
pop
call
ret
shlb
inc
sub
add
inc
enter
push
add
xchg
incl
push
mov
mov
adc
add
out
imul
cmp
mov
push
dec
fs
sub
sbb
hlt
pop
arpl
jne
jmp
xchg
jmp
testl
jle
sarb
jecxz
data16
add
dec
dec
jno
xchg
push
imulb
add
fs
jo
lea
adc
adcl
cwtl
in
lods
add
clc
decb
and
rcll
cli
mov
cld
jo
je
orl
nop
mov
inc
add
push
push
jnp
push
mov
jge
decl
add
mov
lcall
test
jge
add
cwtl
iret
sbb
movzwl
icebp
sub
mov
add
clc
push
imul
mull
pop
push
add
mov
cs
aaa
sti
ss
lret
jp
add
mov
lods
pusha
jae
pop
jmp
inc
xor
and
or
or
aaa
mov
sbb
adc
rorb
iret
jne
cwtl
scas
and
dec
lods
xchg
cltd
or
push
add
imul
lcall
sub
mov
test
push
imul
mov
jbe
rorb
add
fwait
inc
mov
mov
shlb
add
pop
mov
push
add
mov
frstor
jne
rorb
push
jo
adcl
lea
clc
je
pop
ljmp
jp
nop
add
mov
and
mov
jle
pop
add
mov
xor
add
add
adc
xchg
add
movsl
test
pop
and
js
mov
daa
fadds
gs
fucom
jmp
inc
outsl
push
repz
andb
sahf
outsb
adc
inc
sbb
out
cmc
add
push
mov
dec
stos
add
or
lcall
xor
std
sbb
ret
add
repz
add
push
dec
lret
xlat
xchg
jo
punpckhdq
xor
mov
sub
sbb
or
inc
mov
jg
int
std
call
ss
dec
xchg
jo
cmp
sub
dec
add
adc
or
mov
inc
xor
test
cmp
inc
add
add
mov
add
push
cmp
jne
or
out
xchg
cli
testl
enter
nop
scas
outsb
inc
out
inc
cmp
loopne
xor
arpl
pop
inc
mov
add
movsb
fs
add
int3
jmp
dec
pusha
add
stos
into
pop
addl
jns
mov
ror
cmpsl
test
loopne
repnz
xchg
cmp
loopne
xchg
pop
xor
and
pop
push
or
dec
aam
ret
xor
jno
add
mov
xor
or
shrb
pop
call
add
xchg
add
imul
outsl
imul
test
add
je
push
popa
push
loopne
fwait
orb
mov
ret
loope
push
or
in
sub
mov
rcr
jbe
push
or
les
push
aas
jl
add
mov
cmp
add
add
fldl
imul
pusha
sbb
stos
push
add
mov
or
or
fcoms
add
cwtl
jbe
and
pop
call
out
mov
mov
dec
cmpsb
xchg
and
je
add
push
inc
movsl
and
cli
into
mov
add
xchg
stos
shlb
or
add
push
jp
lret
pop
jmp
xor
cltd
gs
xor
and
jbe
mov
push
dec
inc
jmp
or
cmp
xor
sub
add
in
pop
daa
inc
mov
ljmp
std
cmovns
subb
push
add
mov
ja
out
mov
cmpb
sbb
mov
and
mov
push
add
mov
push
rclb
mov
scas
pop
cmp
cltd
dec
clc
sub
mov
pop
sub
or
test
add
and
movsb
cmp
addb
push
mov
clc
shlb
cmpsb
sbb
mov
mov
add
lods
jge
or
test
xchg
push
or
repnz
or
adcb
add
lods
dec
adc
push
cmp
clc
pop
jl
add
aam
inc
add
cmp
jne
ret
add
cwtl
mov
inc
inc
ds
add
dec
fidivs
outsb
add
pop
xchg
int3
rcl
rorl
and
mov
ljmp
popf
xchg
and
pop
xor
mov
cmc
xchg
inc
add
cs
add
xchg
scas
jb
gs
sub
daa
into
push
aas
dec
rolb
and
test
sbb
add
jo
ja
dec
adc
jno
sbb
loopne
mov
add
jmp
xor
mov
rclb
js
add
or
inc
mov
xchg
add
mov
xchg
pop
sti
push
add
jae
sbb
and
rolb
cmpsb
sbb
cmp
pop
push
fldenv
add
push
lret
or
sbb
jg
repz
mov
aam
das
add
fists
cs
imul
add
mov
xor
push
ror
mov
repnz
repnz
or
idivb
xchg
sub
add
ficoml
cwtl
push
aas
pop
add
sub
movb
add
fsubr
mov
add
pop
pop
jb
and
adc
pop
xchg
xchg
dec
hlt
and
xor
push
add
rclb
sub
push
ljmp
cmp
cmp
sub
clc
add
jecxz
rorb
lock
mov
cli
sbb
mov
and
fistpll
xchg
add
mov
mov
xchg
adc
pusha
in
mov
inc
add
lods
pop
pop
into
adc
adc
sub
and
incl
xlat
bound
dec
faddl
mov
adcl
ds
mov
call
jle
pop
or
xor
or
enter
decl
lea
and
xlat
mov
inc
jle
dec
adc
sbb
mov
inc
cmp
lock
inc
mov
ret
test
outsb
in
pop
pusha
aam
adc
add
data16
mov
add
add
dec
add
xor
add
adc
adc
xchg
xchg
jne
sbb
mov
adcb
cmp
xchg
jno
pop
cmc
hlt
jne
mov
pop
pop
pop
pop
jl
rol
aaa
xchg
jg
and
mov
mov
hlt
mov
orb
fninit
push
pop
add
inc
adc
hlt
cmp
mov
add
inc
push
or
dec
xorb
pop
sbb
mov
shl
arpl
mov
jmp
cmp
inc
sbb
enter
push
sbb
mov
orb
test
shl
mov
adc
add
push
and
dec
pop
xchg
test
add
inc
shr
orb
add
popa
inc
jmp
and
add
aam
leave
mov
add
lock
jmp
jecxz
ja
loope
sub
fcompl
push
dec
push
jbe
lods
test
push
cmp
pop
cmc
sbb
push
mov
popa
sub
adc
outsl
xchg
sbb
adc
mov
lds
cmp
mov
mov
jp
adc
pop
mov
fs
push
sbb
in
aas
and
sbb
fst
bound
adc
cmpsb
stc
add
xor
pushf
push
lds
aaa
or
add
fildl
das
cmp
addb
std
cmp
jae
xchg
loopne
mov
push
dec
int3
mov
mov
inc
call
xchg
pusha
or
and
add
ljmp
jmp
repz
xchg
xchg
add
jp
mov
imul
or
and
add
call
add
add
cwtl
or
mov
daa
sbb
loope
or
push
mov
dec
shl
mov
sub
inc
or
aas
mov
sahf
sub
mov
mov
add
es
inc
push
movsl
add
xchg
in
movsb
sbb
movzbl
sbb
inc
or
lods
fldl
xor
add
add
fs
pop
xchg
pop
or
js
dec
mov
push
and
lods
aam
inc
add
and
mov
call
jnp
je
mov
test
push
xor
add
pop
hlt
outsb
fwait
cld
push
mov
sub
or
je
incb
enter
jmp
dec
outsb
scas
addr16
push
push
cmc
loope
mov
add
incb
jmp
or
add
push
outsl
imul
shl
add
cmp
pop
add
push
inc
sbb
push
dec
test
add
test
lahf
add
inc
add
out
inc
sub
xchg
pusha
inc
jmp
lcall
add
filds
add
push
pusha
inc
sbb
test
aas
arpl
jmp
loop
pop
int3
fwait
shlb
add
xchg
adc
mov
or
add
clc
call
xor
cmpsl
add
insl
dec
aas
shufps
mov
add
xchg
je
add
hlt
jnp
xchg
call
sub
xchg
sub
sbb
fldcw
sbb
sti
and
out
test
jbe
push
push
test
xchg
movb
data16
call
xor
sbb
add
insb
add
lret
push
adc
dec
add
pop
dec
push
mov
aas
loopne
sub
lds
inc
sub
in
jbe
and
jnp
cmp
movsl
stos
cmpsb
in
jge
dec
cmp
mov
xor
add
insb
jbe
pop
add
or
sbb
push
push
inc
sbb
add
mov
stc
pop
add
or
adcb
test
xorb
lahf
add
add
xor
push
lret
cs
inc
mov
dec
add
aad
call
and
inc
je
rolb
repz
or
testb
mov
add
lods
frstor
loopne
jle
mov
cli
addr16
cmp
push
lods
xchg
adc
sbb
mov
je
enter
sub
push
jmp
inc
addb
rolb
bnd
mov
test
call
pop
scas
add
call
inc
mov
xchg
adc
pusha
jle
and
fdivs
jmp
rolb
push
add
fcmovb
shll
cmp
data16
adc
mov
nop
cmc
or
mov
sahf
ficoml
push
add
je
test
and
xchg
in
adc
jge
push
inc
add
xor
xor
adc
push
mov
pop
sbb
fwait
xchg
add
int
and
or
outsb
daa
je
gs
fs
mov
pop
ret
push
xchg
ss
inc
adc
push
add
rcrb
add
out
fnclex
pop
mov
roll
inc
icebp
mov
cmp
mov
sub
xor
or
sbbl
inc
add
jo
add
fdivs
add
das
adc
aam
push
pop
clc
movb
enter
out
xor
jecxz
push
add
add
call
push
aaa
xchg
xor
or
dec
sbb
es
adc
insl
pop
add
add
sub
and
add
jnp
jmp
or
test
push
cmpsb
pop
and
mov
orl
adc
repnz
aam
and
sub
xor
add
iret
dec
xchg
push
je
hlt
dec
cltd
push
add
sub
add
mov
xchg
cmp
sbb
sldt
testl
adc
mov
sub
in
or
jne
negl
lods
fsubs
out
add
out
and
dec
sbb
xchg
fmulp
mov
in
add
xor
xor
cmp
and
xor
jecxz
rclb
and
pop
fcmovb
stos
aas
testb
dec
sub
xchg
iret
inc
adc
addl
or
icebp
cmpsb
add
jmp
mov
sbb
or
sub
push
push
inc
add
push
jle
inc
addl
in
jecxz
and
push
add
and
mov
pusha
mov
pop
add
inc
push
je
ret
insl
imul
xchg
jne
add
fnstsw
pusha
dec
outsb
lock
add
jmp
pop
sub
sub
sub
cwtl
outsb
or
aad
je
xor
insb
adc
and
xor
and
ficoms
pop
shr
mov
adc
mov
pop
stos
enter
add
push
pop
repnz
rorl
sbb
inc
cmpsl
adc
mov
xchg
lret
mov
shlb
fsubl
mov
call
and
and
or
or
add
iret
pop
enter
add
outsl
rcrb
push
hlt
add
iret
shll
add
and
lock
test
add
sub
mov
in
add
daa
lcall
jp
orl
sub
js
mov
inc
add
jnp
mov
pop
mov
sub
push
jp
fcmovnu
jg
xor
cwtl
add
adc
or
push
mov
sarb
stos
mov
sbbb
stos
mov
or
or
xchg
das
add
mov
add
icebp
int3
imul
jmp
push
sbb
dec
aam
inc
mov
pusha
and
loope
cmp
add
jo
sbb
insb
mov
and
add
push
add
scas
test
add
sbb
add
mov
loop
loopne
jp
add
mov
jo
xor
xor
cmc
test
xor
test
inc
popf
cltd
in
add
xchg
xchg
add
int
fildl
repnz
cld
mov
nop
pop
add
push
or
and
fcoml
fwait
mov
pop
test
sahf
and
pop
inc
loop
pushf
dec
pusha
js
rorb
cmpsb
rolb
push
clc
adc
add
and
test
push
lahf
jle
enter
jmp
push
inc
add
aad
inc
and
mov
add
call
int3
inc
adcb
push
cmp
inc
subb
push
test
dec
push
mov
scas
addl
add
imulb
add
lock
jne
xchg
daa
dec
jae
ljmp
push
mov
add
mov
xchg
inc
mov
loopne
or
repz
and
push
dec
ret
sub
test
adc
inc
sbb
inc
shrb
shlb
cmp
pop
sbb
add
jp
ja
push
mov
adc
ret
sbb
sub
fldl
xor
in
push
fwait
dec
push
push
call
orl
push
popf
xor
add
mov
fmul
clc
jns
cmp
and
xor
adc
nop
cmpsb
add
and
cmp
nop
add
dec
out
xlat
mov
cmc
out
add
loopne
inc
adc
pop
rolb
mov
dec
mov
pop
clc
xchg
fisubrl
mov
js
and
daa
ficoms
call
idivl
sbb
cmp
mov
add
and
stc
pusha
aas
jecxz
xor
push
push
call
dec
add
xchg
scas
and
jne
sub
xor
rolb
adc
add
les
jne
movsl
add
je
sbb
jns
adc
dec
repnz
jo
add
adc
mov
or
cmp
out
sbb
icebp
pop
rcrb
movaps
cli
add
pop
pop
mov
inc
add
or
jl
add
cmp
add
fsubp
loopne
push
add
ja
mov
add
mov
xchg
mov
jne
in
daa
push
std
add
mov
add
test
jmp
add
sbb
cmp
ret
ja
and
or
xchg
jae
add
not
sub
lods
mov
data16
mov
jmp
add
popa
jb
push
movsb
jp
idiv
pop
push
and
xchg
ja
push
test
leave
jne
sub
jnp
ret
add
dec
cld
cli
adc
push
test
mov
fsts
adc
and
dec
dec
arpl
mov
sti
adc
pop
cmp
mov
push
inc
push
xchg
mov
rorb
imul
test
jle
pop
jns
cmp
je
das
cmp
or
cld
push
mov
mov
and
mov
sahf
jle
and
ret
cmp
sub
cmpb
fs
pusha
pop
nop
inc
cs
cmp
lock
add
or
cld
sbb
mov
mov
arpl
mov
stos
clc
test
test
pop
push
mov
xchg
add
adc
inc
ret
add
shll
or
inc
push
jg
add
xor
and
out
icebp
adc
cwtl
fistpl
or
out
push
push
push
inc
rcpps
push
enter
aas
and
add
loop
xchg
leave
cmc
adc
repz
add
add
dec
mov
add
inc
add
les
add
pop
cmp
mov
or
loope
add
lret
or
or
xlat
add
and
neg
or
and
aaa
ror
stos
add
pop
pop
ss
sub
fidivrl
and
fdivrl
and
xor
lock
pushf
add
in
jno
fadds
add
mov
inc
dec
pop
movsl
adc
das
cld
jno
sub
xor
and
add
pop
jmp
insb
pop
pop
sbb
int3
and
gs
shl
movsb
push
out
leave
in
bound
dec
pusha
add
push
call
std
xchg
mov
add
sti
adc
add
ja
jne
push
add
in
js
pop
push
add
sbb
dec
notb
add
test
add
aaa
push
dec
add
cmp
xor
push
sbb
or
orb
adc
cwtl
and
add
movsb
add
ret
add
mov
cmpsb
add
stos
jns
or
inc
pop
je
pop
xor
sub
push
lock
mov
lret
or
out
cmp
repz
shrb
inc
push
ds
jl
sub
push
call
rclb
push
lea
sub
push
dec
push
cmc
gs
sbb
out
addb
sub
rclb
ss
loopne
mov
push
int
pop
imul
ret
mov
xchg
andl
out
inc
test
xor
cmp
dec
divl
sbb
test
inc
es
add
dec
or
mov
inc
cmp
add
str
mov
add
and
push
jg
pop
sbb
lock
push
pop
std
fsubs
jae
dec
rolb
out
inc
std
incl
popa
mov
iret
mov
mov
or
adc
add
leave
mov
test
xchg
pusha
bound
jmp
xchg
add
cmp
push
pushf
out
lcall
xchg
mov
iret
adc
or
and
int3
js
andb
clc
xchg
jmp
and
cmp
mov
sub
add
or
xchg
pop
mov
into
push
orb
mov
rcll
shlb
int
xchg
add
fsubr
shll
ret
jmp
stos
cmp
dec
xorb
lock
or
shl
test
das
fdivp
sub
add
insl
loopne
pop
cmpl
lcall
sbb
add
or
jb
add
stos
in
jns
fisttpl
sbb
sub
add
mov
enter
cmpsl
cmc
pop
repz
fsubrs
test
jne
add
call
je
jbe
and
xchg
pushf
stos
cwtl
scas
add
mov
xchg
jle
xchg
jo
cltd
dec
cmpsb
sbb
inc
repnz
daa
jmp
sbb
pop
movsb
cld
inc
jge
push
jg
cmp
xor
jmp
cmp
arpl
lock
add
lahf
aam
mov
add
cmp
mov
xchg
jbe
lds
pop
cmc
nop
inc
sbb
sbb
sbb
ljmp
pop
add
rcll
call
adc
lock
and
push
in
and
pop
mov
xor
pusha
loopne
inc
dec
add
or
jne
add
aaa
cmp
sbb
pop
or
fstpl
mov
faddl
cmpsb
add
subl
lods
ljmp
adc
inc
adc
jmp
push
sub
outsl
add
mov
shrb
repz
jmp
je
mov
add
addb
add
adc
lock
pop
pop
cld
ja
jo
jno
cwtl
or
xor
arpl
xchg
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
pop
or
jbe
pusha
jp
fcoml
xor
add
adc
add
out
test
mov
std
lods
repz
dec
jne
addr16
lret
add
pop
adc
cld
jae
push
add
xchg
or
jl
bound
dec
xchg
sbb
das
cwtl
dec
enter
dec
ret
pop
leave
jl
ret
xchg
pop
mov
outsl
adc
inc
push
outsl
add
push
cmp
jmp
jo
lcall
scas
push
daa
out
xor
outsl
add
aad
lods
fimull
mov
in
jne
int3
xlat
inc
clc
shr
add
mov
or
cmp
test
dec
pop
jecxz
mov
push
pop
addps
lret
aam
add
shlb
fcompl
pop
fcoms
data16
sbb
xchg
inc
mov
mov
or
mov
test
cmp
add
mov
mov
add
std
addb
cmp
pop
call
data16
or
fnstcw
inc
call
ljmp
and
scas
push
clc
jmp
cmp
sbb
int
mov
add
inc
mov
add
dec
mov
xchg
cmpsb
cmp
adcb
pop
sbb
or
mov
sti
js
add
inc
mov
mov
cli
xchg
xor
or
inc
lods
daa
pop
das
fadds
adc
pop
stos
cltd
scas
cmp
add
sub
pop
idivb
add
fists
push
out
iret
jo
rorb
dec
dec
add
out
test
out
dec
bsf
dec
lods
adc
cmp
les
cs
add
lock
cmpsb
sub
dec
cmp
dec
repnz
jle
jmp
cmovne
cmpsb
lea
idivl
inc
dec
push
psubb
ficoml
or
pop
mov
and
cwtl
enter
add
iret
mov
popl
add
cmp
sldt
loop
jb
pop
mov
dec
and
mov
and
mov
in
add
sub
mov
dec
add
jae
cmp
pop
xchg
push
in
add
loop
mov
sahf
add
adc
mov
loope
mov
repnz
out
push
ja
and
dec
jne
add
lahf
iret
cli
add
mov
ljmp
add
jne
xchg
dec
push
push
jmp
inc
in
fstpt
pop
jmp
mov
add
push
enter
add
xor
jle
and
rcll
or
sbb
lea
cmpsb
pop
pop
sbb
sub
or
inc
mov
pop
and
cmp
stos
sti
or
les
adc
mov
addb
iret
jo
sbb
add
push
jecxz
repnz
cmc
jns
mov
popa
mov
test
or
mov
add
push
out
add
out
fsubs
inc
sub
cld
cmp
leave
das
cmpsb
xor
and
dec
addr16
adc
enter
sub
test
push
mov
pop
mov
pusha
leave
pop
pop
popa
add
xchg
dec
inc
jmp
in
out
nop
iret
imulb
sbb
jae
adc
add
and
xchg
mov
cmp
aad
xorl
inc
push
in
mov
lods
sbb
dec
addl
xor
xchg
cli
scas
mov
fs
mov
push
or
hlt
ja
shrb
testl
push
mov
jbe
and
je
dec
es
add
cmp
jne
adc
add
sub
cmp
dec
inc
lret
pusha
inc
shlb
add
inc
repz
push
sub
xor
sbb
mov
cmpsb
loop
mov
aam
and
sub
push
jg
pop
push
pop
mov
daa
in
add
aaa
inc
sbb
push
sub
mov
lcall
es
dec
dec
loopne
add
cmpps
sbb
inc
adc
and
dec
adc
mov
in
add
lcall
push
lret
dec
loopne
sbb
movsl
cmc
pusha
out
repnz
fildll
jmp
hlt
call
pop
es
pop
and
dec
in
lock
add
cs
call
test
lahf
xorl
aam
cmp
jle
jns
pop
mov
leave
std
adc
rcr
lahf
cmp
imul
int3
jp
call
setns
call
mov
movsl
sbb
in
fdivp
pop
adc
jb
dec
ja
mov
sbb
flds
in
add
outsb
popl
or
addr16
inc
inc
pop
add
in
mov
cmp
sub
imul
inc
out
and
jnp
pop
pop
loop
pop
ficoms
add
mov
adc
push
push
cmpsl
adc
sbb
inc
cmp
cld
cmp
repnz
cmp
jp
add
adc
filds
or
cs
sbb
xchg
sub
pop
lock
mov
add
xor
cli
push
push
or
mov
lods
movsb
stos
dec
ljmp
adc
js
cmp
inc
mov
fdivl
movlps
shlb
lock
mov
in
inc
popl
loop
cltd
adc
and
adc
adc
pop
iret
inc
and
lea
jnp
icebp
cmp
xchg
push
pop
mov
add
daa
es
push
andb
add
cmp
xchg
adc
test
add
adc
mov
and
xor
or
cmc
dec
add
pop
rcrl
sub
push
push
inc
mov
lods
and
imul
push
dec
sbb
cmp
loope
ret
loopne
push
jne
xor
fcompl
lock
add
add
adc
sbb
sub
je
cmc
inc
add
jp
push
lds
adc
or
fimuls
jnp
pop
rcl
in
out
jo
and
addl
shr
jmp
mov
movsb
nop
mov
or
lcall
es
xchg
jg
add
or
add
mov
adc
xchg
inc
sub
mov
cmpsl
pop
adc
add
lods
inc
lds
jmp
add
rcrl
jle
cmc
jo
jp
add
enter
push
les
and
andb
jb
and
xor
jl
add
push
cmp
sti
mov
cmp
inc
adcl
sub
loop
inc
rolb
pop
adc
and
nop
clc
mov
add
or
cld
outsl
push
mov
push
push
dec
dec
cs
add
push
mov
or
pop
push
push
sub
loopne
btc
rcll
cmpsl
mov
scas
lock
cmp
push
push
add
and
rolb
xchg
movl
or
add
pusha
inc
inc
call
cmpsb
xor
push
lock
iret
mov
pop
inc
pushf
mov
add
lock
mov
cmc
add
std
mov
add
cmp
inc
dec
jne
dec
addb
icebp
mov
add
cmp
or
mov
push
push
in
cvtps2pi
xchg
out
nop
push
mov
test
push
and
lret
add
push
fnstcw
ds
xchg
in
in
jl
je
test
leave
rcll
jmp
jg
cmpl
xchg
xchg
push
jae
push
add
or
stos
cwtl
mov
cld
rcl
add
cmpsb
pop
and
call
aad
addb
fwait
lods
pextrw
mov
test
sub
in
mov
into
hlt
mov
xchg
adc
mov
orb
movsb
add
jmp
loop
xlat
add
jne
fistl
or
add
je,pn
jge
lret
xor
aam
add
jmp
bound
adc
out
je
dec
loopne
ja
push
or
adc
xchg
mov
and
inc
and
xchg
je
add
mov
add
and
roll
filds
scas
dec
pop
mov
cwtl
shrb
in
cmp
dec
sbb
lock
cmc
js
add
icebp
and
add
call
ja
dec
jge
lahf
jnp
movsl
jle
add
fsubl
push
sub
dec
mov
add
jmp
or
gs
pop
mov
push
pop
pop
shll
adc
push
inc
mov
stos
add
dec
lcall
add
daa
outsb
popa
out
lods
fdivs
xorl
jnp
add
aas
xor
pop
sarb
adc
push
push
pusha
add
add
push
or
punpcklbw
and
sbb
add
test
xor
xlat
pop
scas
dec
fistps
sbb
clc
pop
data16
daa
sub
in
jg
inc
inc
cli
lods
and
aam
iret
push
mov
loopne
mov
adc
cmp
and
mov
cmpsb
jbe
cwtl
add
js
jne
lds
lods
push
das
jge
push
aas
add
xchg
add
out
enter
add
adc
push
scas
flds
xchg
dec
enter
push
pop
push
xchg
popf
sbb
jmp
repnz
cmp
nop
movsl
shlb
push
orl
js
out
add
or
shl
push
push
lea
add
push
and
into
add
mov
loope
shrl
jge
add
and
lods
loope
or
xchg
xor
mov
rol
add
push
in
jnp
xor
test
or
mov
shlb
inc
and
insl
or
mov
or
dec
push
in
test
imul
add
loop
fstl
ja
pop
adc
sbb
inc
test
or
add
sti
ror
pop
push
mov
imul
jb
cmpsl
jmp
addr16
adc
js
add
mov
les
push
loope
inc
fxsave
push
fisubs
js
loopne
les
shrl
or
or
push
mov
pop
cwtl
and
frstor
test
xlat
dec
aaa
stos
add
mov
popf
jno
hlt
gs
out
adc
xor
mov
mov
pop
push
or
call
add
sub
cmpsb
xor
dec
dec
adc
adc
sbb
pop
lods
ret
push
mov
mov
cmp
sbb
in
or
adc
fisubs
addb
hlt
mov
add
xor
add
ss
and
andb
push
mov
mov
outsl
pushf
sub
dec
add
lods
insl
test
pop
jmp
es
add
dec
xor
and
add
ja
test
adc
and
jge
sbb
mov
or
pop
add
pop
push
xor
jno
add
in
mov
jmp
add
pop
pushf
sbb
test
add
push
jl
call
icebp
ret
dec
and
push
mov
xchg
aam
popf
dec
fldcw
adc
add
cmpsl
into
push
add
inc
pop
add
adc
push
je
push
add
sub
aaa
lea
in
mov
or
aas
xchg
call
and
cmp
adc
pop
shll
pop
mov
xor
xor
mov
dec
cwtl
add
sbbl
hlt
adc
mov
out
xor
mov
adc
add
shrb
cmp
clc
sub
add
sbb
test
clc
sub
mov
jle
ljmp
fldt
pop
push
es
dec
push
and
push
gs
add
addb
aam
and
cmp
adc
adc
enter
in
add
cwtl
jne
add
pop
mov
pop
cld
pop
mov
cmpsb
pop
xor
push
push
clc
add
jmp
int
inc
push
sub
and
cmpsl
cmp
aam
sbb
add
mov
call
scas
imul
inc
insb
mov
popl
add
mov
pop
ret
repnz
jp
xor
int3
jmp
dec
pop
sarb
lahf
add
imul
test
cltd
add
push
out
cmp
pop
inc
jne
mov
dec
mov
loop
shlb
add
arpl
int
movzwl
mov
scas
rorb
add
out
sbb
dec
inc
inc
adc
push
je
sbb
sub
stos
inc
add
cwtl
pop
add
xor
inc
add
call
mull
push
add
inc
inc
and
mov
test
dec
pop
scas
sub
cmp
mov
and
cwtl
mov
call
lea
mov
pop
cwtl
ja
and
sbb
cltd
out
gs
pop
cs
or
orb
jg
add
gs
xlat
test
cmp
es
pop
xlat
js
jns
dec
daa
add
notb
add
mov
push
or
cmp
pusha
fidivrl
sbb
dec
cmp
add
add
and
push
cld
inc
add
sbb
pop
nop
enter
mov
adc
inc
add
sub
notl
add
dec
leave
scas
add
pop
push
xchg
icebp
fsubs
add
cmpsb
or
jo
rol
xchg
jl
add
test
in
add
mov
jecxz
mov
shrb
jne
pop
mov
sti
mov
add
lret
adc
fld
add
pop
xor
sbb
sbb
add
sub
add
leave
add
nop
or
pop
ret
enter
add
xchg
add
orl
sub
adc
pop
test
idivb
add
and
cvttps2pi
push
inc
ds
aam
loope
jl
xchg
cmp
jp
sub
cmp
pop
mov
cmc
jp
pop
push
jl
push
push
insl
cmp
andb
cmc
or
inc
adc
add
mov
mov
stos
sahf
mov
ss
icebp
imul
notb
sbb
mov
inc
push
cmc
or
push
cmp
dec
std
xchg
add
test
jecxz
lahf
xor
dec
xchg
les
add
lods
xor
inc
fcomp
loope
add
stos
or
mov
aad
mov
sbb
xchg
ror
filds
out
add
lds
sbb
enter
xor
add
out
pushl
add
ret
lock
jp
add
push
ror
mov
dec
jne
cmp
push
add
and
pop
or
sbb
add
jge
pusha
push
daa
neg
inc
cwtl
sbb
mov
es
shll
add
sub
ljmp
push
mov
inc
inc
add
sbb
je
ror
add
pop
lea
cmpsl
pop
mov
lock
inc
pop
add
icebp
inc
lock
nop
in
cmp
mov
sub
add
sub
sbb
adc
lret
jnp
pop
mov
repnz
add
lock
outsl
gs
push
or
pop
add
cmp
push
testb
add
or
xchg
xchg
add
in
call
shrl
in
mov
repnz
lods
test
add
jge
aas
lea
add
mov
xor
jne
out
adc
inc
mov
or
xor
adc
mov
scas
outsb
rolb
cmpsb
fiadds
inc
loopne
adc
bound
xchg
icebp
nop
cmp
add
xor
mov
add
mull
xchg
rol
cmp
push
add
lret
add
ljmp
arpl
push
or
pop
add
incl
dec
dec
repnz
adc
lds
push
adc
call
add
push
inc
pop
pop
addl
in
xor
sar
add
pop
xchg
int3
pop
rorb
push
add
cltd
add
fdivrs
stos
jmp
popa
add
mov
xor
fisttpll
lock
push
cmp
addl
in
add
adc
sqrtps
inc
fwait
mov
or
mov
mov
sub
cmp
pop
pushf
push
rcll
mov
inc
add
pop
add
leave
and
add
mov
add
loop
mov
loope
outsl
add
rorl
call
flds
pop
sub
adc
iret
add
cltd
mov
or
pop
and
call
add
fsubrs
cmpsb
int3
sar
adc
test
add
xor
ljmp
and
add
inc
fsubrp
jmp
pop
push
in
mov
mov
or
jge
rcll
fstps
xlat
movsb
cld
shrb
pop
orl
dec
xchg
cmpb
test
xor
sbb
inc
ret
addr16
adc
pop
push
push
pop
pusha
sarb
ficoms
push
ds
ss
dec
push
add
nop
xchg
nop
pop
add
jp
cmp
and
leave
movsl
arpl
rolb
pop
aad
hlt
not
add
jo
mov
out
add
jl
dec
push
cltd
add
sub
pop
add
add
shlb
jl
inc
add
mov
sub
xor
leave
ret
movl
add
mov
add
or
dec
jae
xor
cmp
in
add
mov
or
push
lock
pop
inc
mov
aas
xchg
test
cmp
shlb
xchg
iret
xchg
mov
popf
andl
ja
rcrl
jmp
add
out
add
jbe
push
or
inc
xchg
add
or
and
xchg
out
nop
in
add
pusha
popa
sbb
push
or
mov
ficoms
ret
sti
xor
out
add
sarl
pop
xchg
add
lret
add
mov
sbb
add
push
jp
aas
or
shrl
add
pop
pop
push
ret
sarb
cmp
dec
inc
jl
add
xor
lcall
adc
out
sub
push
xchg
jno
pop
add
fwait
mulb
test
xor
stos
addr16
je
sbb
movsl
xorl
xchg
popa
stos
int
pusha
lcall
cvtdq2ps
lea
cld
popa
dec
clc
movsl
add
shr
pop
mov
add
mov
pop
push
subb
push
or
shlb
sub
lret
cmp
add
cld
neg
xor
xchg
into
rorb
test
mov
sub
nop
shll
lods
mov
cmp
or
mov
inc
dec
loop
popf
bound
add
push
or
add
mov
sub
ret
test
cmp
imul
pop
add
ja
dec
hlt
rorb
stc
daa
rorb
pop
or
add
mov
add
adc
sbb
cmp
lods
rorb
xor
adc
sub
in
ja
lcall
mov
add
cmpsb
outsb
hlt
repnz
push
xchg
mov
sub
xchg
inc
pop
push
push
movsl
stc
add
clc
in
inc
in
add
dec
push
add
pop
pusha
lea
fistps
iret
ds
dec
movb
test
xor
push
mov
mov
add
sub
scas
dec
cmp
cli
popf
xor
add
andl
cmc
dec
fildl
or
add
loop
inc
add
xchg
adc
aad
arpl
and
add
xorb
int
mov
sub
mov
add
rcrb
insl
es
test
xrelease
and
mov
orb
add
fstps
jle
fcompl
roll
xchg
test
mov
jl
add
or
or
pusha
ffreep
insb
add
in
jmp
rolb
vmulps
pop
loopne
jl
add
out
jb
mov
les
pushl
out
pushf
push
add
push
xchg
mov
add
or
push
lds
dec
js
loope
cltd
dec
mov
lahf
mov
add
test
push
test
test
dec
rol
sub
adc
sbbb
stos
jl
sbb
out
lods
mov
pop
add
loopne
pop
add
mov
dec
add
sub
adc
in
aam
in
rcr
lret
sub
add
je
xlat
lea
xor
fwait
or
add
pop
jo
mov
lret
add
pop
or
pop
repnz
cwtl
cltd
add
mov
push
lea
add
test
mov
add
fsubs
jmp
jo
jg
cmp
sahf
orb
adc
sbb
cli
xor
sbb
adc
addb
mov
push
call
nop
xorb
push
pusha
push
outsl
add
jmp
adc
add
sarl
mov
xchg
inc
rclb
mov
adc
lret
sub
mov
and
add
jg
mov
in
sbb
push
cmc
push
xor
add
ficomps
lret
inc
loopne
orl
sbb
mov
rclb
mov
addl
jnp
pop
in
cmp
repz
pop
and
jp
addl
add
dec
lret
jmp
enter
ret
ror
movswl
loope
shrb
mov
add
daa
inc
pop
das
xor
clc
pop
push
xchg
sbb
in
int3
sbb
adc
and
lea
jo
shl
jmp
inc
popf
fsubl
inc
inc
les
and
push
jle
add
stc
sahf
and
xlat
pop
adc
cld
xchg
add
sbbb
inc
cli
mov
test
lahf
sbb
add
jnp
pop
add
push
add
push
or
xlat
add
mov
sub
push
popf
sarb
push
inc
decb
mov
mov
adc
orl
dec
mov
mov
push
inc
cmpsb
mov
add
lea
cmp
pop
or
in
jne
add
push
push
repz
stc
add
sub
add
and
mov
orb
sub
call
rcll
inc
or
dec
cmove
nop
xor
lahf
jno
mov
add
jb
pop
pop
pop
pop
push
push
mov
mov
mov
jmp
add
pop
inc
pop
repz
inc
xorl
inc
xchg
sbb
nop
add
sbb
aaa
add
mov
and
popf
add
pop
pause
and
test
dec
add
sub
inc
inc
xor
int
add
and
adc
sar
into
mov
add
jno
add
push
cs
lds
shrl
jle
add
loop
sub
add
jle
mov
repnz
inc
or
jns
add
test
mov
in
nop
xchg
stos
xor
mov
push
hlt
jne
movsl
add
mov
lea
push
repz
push
adc
or
fsubrs
pop
loopne
paddd
cli
dec
adcl
test
sub
pop
sahf
or
add
xor
hlt
mov
and
and
imul
in
add
clc
add
add
or
je
shlb
add
call
inc
sbb
jne
add
xchg
int3
inc
dec
jmp
out
mov
cmpb
loopne
add
jne
cli
or
nop
outsl
or
icebp
sub
fadds
adc
add
dec
mov
add
pop
jnp
cld
add
add
test
test
jbe
and
movb
pop
adc
ja
aam
addb
or
out
and
sbb
sub
push
and
add
push
xor
adc
adc
fsubp
js
aas
add
pop
lea
pop
xchg
jmp
add
and
push
inc
stos
mov
bound
mov
push
sahf
add
mov
cli
add
or
dec
pushf
testl
ret
stos
push
nop
js
stc
loope
repz
fmul
adc
sub
xchg
add
push
push
sbb
loopne
sahf
popa
seto
lret
add
jmp
test
scas
addb
das
cld
adc
pop
add
lcall
pop
sub
add
xor
adc
sub
add
leave
pop
rcrb
dec
inc
repnz
pop
jo
sbb
bound
add
loopne
inc
jge
pop
pop
push
ds
cmp
jp
xor
push
mov
into
addr16
mov
rol
stos
inc
mov
pop
and
enter
popl
repnz
andl
movlps
out
ds
fwait
add
test
pop
sub
icebp
int
xor
add
imul
mov
pop
sub
jg
mov
pop
rorb
pop
std
sbb
mov
inc
add
push
sti
push
adc
mov
jge
or
pop
subb
repnz
orl
rorb
mov
xchg
lret
scas
pusha
outsb
inc
cld
dec
pop
mov
pusha
outsl
andl
in
shll
add
push
push
pusha
jnp
add
add
adc
aad
mov
loop
jge
fmulp
inc
xchg
rorb
punpckhdq
push
mov
push
hlt
xor
sti
mov
cwtl
and
movl
dec
insl
sub
sub
sbb
pop
adc
stos
jo
lmsw
push
js
or
jle
add
jne
nop
popf
or
jae
mov
add
push
mov
sbb
imul
jl
add
pop
mov
adc
pop
sbb
ficompl
imul
loope
es
mov
cmp
outsb
int
mov
jne
roll
mov
aas
or
xor
hlt
cmp
pop
mov
xchg
out
insb
lret
or
jb
icebp
push
jge
cld
inc
add
add
lods
out
roll
push
inc
ljmp
pushl
inc
xchg
loopne
rcrl
jbe
mov
sub
and
inc
push
sbb
and
loopne
add
out
sbb
add
sbbb
jbe
add
sub
pop
mov
mov
leave
or
lods
ja
add
sbb
add
xor
add
adc
loop
xchg
loope,pt
pushf
int3
sarl
dec
cmpsl
sub
push
shl
xorb
inc
cs
pop
mov
sub
dec
subl
xlat
cmp
xchg
jnp
add
aas
lea
xor
stc
pusha
or
cmp
testb
add
fdiv
fiadds
inc
inc
add
sbb
pop
cwtl
push
add
cmc
dec
movsl
cvttps2pi
mov
inc
and
push
pop
or
addl
je
mov
lea
bound
sub
orb
fnstcw
cld
cwtl
sub
cltd
add
imul
jmp
js
add
mov
add
mov
sub
cs
add
adc
lret
sbb
adc
call
ficoms
fldl
ret
mov
xor
enter
les
stc
sub
mov
or
jp
inc
add
xor
jge
popa
add
mov
scas
add
and
push
fisubs
aaa
push
in
xor
cs
out
add
orb
adc
xlat
inc
xchg
cwtl
out
pop
mov
or
or
jmp
jne
add
fnstcw
mov
pop
add
inc
aam
add
ss
mov
jmp
gs
filds
push
and
pushl
punpckhwd
mov
dec
das
lock
out
xchg
mov
cmpsl
jge
and
add
rolb
xchg
or
hlt
nop
roll
xchg
lahf
faddl
mov
and
and
xchg
mov
sbb
stc
push
dec
adc
sbb
dec
sbb
cs
lret
std
push
in
add
sbb
jbe
add
in
add
clc
adcb
clc
inc
or
sbb
adc
add
out
adc
ljmp
arpl
fisttpl
add
add
fs
mov
pop
pop
inc
add
xor
push
fwait
or
daa
add
xchg
pmulhuw
mov
roll
sub
pop
jge
push
inc
add
popl
lea
aas
in
xchg
xchg
pushf
xor
add
mov
repnz
adc
shrl
add
jmp
shrb
shl
popf
mov
add
jmp
int3
nop
push
imul
add
xor
idivb
pop
mov
fiaddl
aaa
loope
mov
or
cmc
pop
adc
inc
inc
inc
mov
ss
fldl
repz
loop
push
push
orb
jle
jmp
repz
sbb
inc
sbbb
pop
cld
data16
add
roll
push
outsb
dec
mov
add
cld
sub
push
add
jbe
push
pop
roll
mov
push
outsl
mov
cmp
or
cmp
add
shr
sub
jg
add
mov
pop
and
ja
mov
ljmp
andb
pop
ljmp
pop
sub
mov
add
dec
lahf
xchg
mov
rorl
xchg
xchg
cmp
add
mov
test
incl
out
roll
fwait
mov
push
fs
in
mov
mov
pushl
xlat
mov
xor
xchg
cmpb
mov
lods
add
mov
sub
sub
adc
adcb
fwait
es
sbb
ljmp
pop
and
sbb
je
cmp
daa
adc
inc
sti
add
lea
add
xchg
addl
mov
scas
mov
js
loopne
in
add
ret
add
and
movsb
hlt
enter
test
inc
in
or
add
inc
les
ds
test
aad
movaps
inc
or
sahf
cs
popa
jmp
flds
and
pop
je
cmp
pop
lahf
mov
loop
or
add
xchg
jbe
lahf
sti
add
loope
dec
push
cmp
and
jbe
fldl
in
addl
pop
add
cmc
stc
mov
cmp
xorl
fnsave
xchg
sbb
push
xchg
add
lahf
movsb
lock
dec
out
add
out
dec
mov
cmp
add
fnsave
mov
loop
jb
pop
inc
jae
aas
rorl
xlat
test
jbe
addl
or
cmp
add
pop
push
sub
fildl
movsl
mov
aas
ret
add
in
ret
stos
sub
and
and
pop
push
testl
push
sti
jnp
cltd
or
pop
adc
add
add
inc
adc
add
test
mov
mov
je
pop
add
sub
call
call
pop
mov
aad
adc
push
iret
jg
es
outsb
mov
or
cmp
clc
rolb
outsb
sbb
ret
in
cs
add
add
mov
ja
cs
push
mov
loop
test
adc
js
insb
push
push
add
cmp
push
in
add
cmpsb
pop
movb
jmp
jle
add
pop
lds
sbb
add
dec
and
add
mov
xchg
dec
lock
add
test
iret
push
cmpsb
jns
sarl
pop
bound
add
pop
pop
dec
add
clc
enter
insb
add
mov
iret
pop
in
fildll
loopne
and
imul
or
and
sub
in
xchg
sbbl
add
fcomi
pop
xlat
add
mov
popa
dec
inc
cmpsb
jo
inc
sbbl
adc
pusha
or
xor
add
sbb
pop
testb
outsl
mov
in
push
jecxz
pushf
jg
pop
das
push
add
xchg
iret
jmp
add
andb
incl
push
and
add
imul
add
pop
mov
inc
mov
add
sbb
cli
push
pop
push
jecxz
addl
adc
cmpsl
push
ret
in
shlb
add
out
xchg
jns
iret
add
dec
loop
adc
dec
mov
ret
xchg
ja
sarl
cs
pop
add
in
sub
outsl
and
add
mov
lea
push
and
iret
scas
add
aaa
sbb
stos
xor
fistps
dec
jle
jno
push
jbe
cmp
stc
add
es
adc
std
add
push
mov
or
mov
pop
and
inc
add
fwait
lcall
inc
mov
push
dec
clc
dec
add
push
jno
inc
xchg
nop
push
cmp
lcall
mov
fidivl
pop
sahf
ficoml
data16
add
sbb
lea
cmp
sub
xorb
add
dec
jl
cli
sti
xchg
adc
sub
add
outsl
sbb
mov
js
pop
mov
sbb
rolb
push
jmp
rclb
pushf
pop
add
mov
add
ror
mov
aas
xor
subb
test
addl
push
or
pusha
or
rcrl
loopne
sub
mov
push
mov
and
pushf
add
aam
movsb
add
ds
pusha
xor
xchg
pop
ss
lahf
pop
andl
cmc
nop
dec
clc
jl
out
mov
lret
mov
cmp
fidivrl
adcb
push
sbb
mov
add
jp
inc
jmp
loop
orb
je
cmc
out
cli
adc
or
xchg
xor
add
mov
test
cmpl
lock
jne
cmp
fiadds
and
in
or
jmp
fnstenv
negl
pop
fisubrs
movb
pop
add
mov
push
fcoml
cmp
lds
bound
pop
xor
or
add
aas
popf
sub
cmp
es
out
add
idivb
dec
loopne
sub
inc
jl
pusha
rclb
inc
ret
icebp
pop
add
adc
lcall
out
rcrb
shl
add
fmuls
test
add
mov
pushl
add
jbe
pushf
sbb
xchg
add
xor
add
enter
les
jbe
into
pop
fidivs
subb
imul
das
push
jp
testl
sbb
lods
xchg
add
inc
ret
gs
lea
pop
push
sub
mov
cs
lahf
xchg
dec
dec
or
roll
or
xor
pop
aad
pop
fcmovb
ret
push
and
add
enter
cmp
add
addr16
xchg
dec
clc
aaa
add
lret
rclb
add
jae
cwtl
add
cmp
pop
popf
sub
adc
add
call
cmpb
push
sub
add
imul
pop
add
lods
es
cld
mov
xchg
loope
js
subl
in
or
add
inc
add
jmp
jb
add
fiaddl
pop
mov
add
inc
inc
cmp
pop
pusha
sbb
fs
sub
lods
pop
roll
xor
lea
nop
hlt
in
repnz
mov
pop
neg
mov
add
push
inc
and
xor
xorl
mov
add
fiadds
add
mov
ret
jecxz
mov
aam
inc
bsr
add
hlt
add
out
rol
not
inc
popa
test
add
dec
xadd
push
je
rcll
popf
add
pop
scas
pop
rcll
adc
fs
and
in
enter
push
add
mov
xor
mov
or
add
push
jbe
dec
gs
sub
sub
adc
xchg
xchg
pop
jo
dec
mov
mov
push
or
and
int3
lret
mov
fdiv
push
inc
add
inc
test
cmc
add
loopne
inc
mov
dec
shll
ds
and
push
rcr
mov
xor
xor
stos
das
push
shl
mov
mov
inc
ret
or
mov
mov
or
lcall
inc
insl
adc
nop
add
loope
push
adc
repnz
roll
sbbl
arpl
and
fisubrs
add
in
inc
decb
add
rol
movsb
pop
imul
incl
push
xchg
call
je
cmp
mov
fstpt
out
mov
sbb
addb
testb
jb
and
and
mov
shr
xlat
movsb
pushf
sub
add
fcompl
dec
shlb
dec
jle
add
and
mov
daa
loop
es
inc
mov
pop
xchg
movsl
data16
lock
call
add
sub
add
inc
xchg
adc
iret
add
pop
fs
xor
and
push
inc
stos
jge
add
pop
cmc
pop
add
stos
sbb
sbb
add
adcb
stc
incl
jb
xchg
sbb
cmp
add
and
cmpsb
fistl
dec
fdivs
loopne
adc
dec
inc
bound
pop
adc
mov
les
test
sub
mov
jecxz
lea
jae
jge
cli
clc
stos
add
aad
add
call
adc
add
push
lods
jmp
mov
cmc
lea
pop
ss
pop
sub
push
loopne
mov
dec
add
adc
inc
fadd
fildl
adc
mov
movntps
or
sbb
sbb
add
and
pushf
xchg
movsb
adc
add
call
push
pop
es
add
or
add
ffreep
or
push
and
push
cmp
popf
subb
push
push
cld
fsubr
loope
enter
add
test
pop
fadds
mov
add
inc
hlt
call
mov
xor
and
add
imul
shrl
mov
pop
and
hlt
pop
mov
sub
pop
push
pop
cmp
popa
or
shl
adc
add
lea
pushl
icebp
out
add
dec
aas
cmpsl
inc
adc
fiadds
mov
aam
and
ja
xchg
enter
push
push
call
add
pop
or
and
xchg
sbb
fwait
popa
push
dec
and
push
add
out
cmp
add
in
loope
inc
mov
add
lret
outsb
test
sub
pop
mov
add
xor
pusha
test
push
fdiv
push
pop
push
in
leave
inc
jge
dec
wrmsr
push
ljmp
das
add
das
addb
add
add
fnstsw
jge
leave
roll
add
jne
push
xchg
je
push
call
lock
add
push
psubsb
or
fldcw
push
clc
push
in
add
sbb
sub
pop
data16
mov
mov
ja
add
xchg
unpckhps
repz
pop
add
call
lock
es
shll
repnz
rorb
xor
in
mov
sub
call
mov
movsb
or
add
ret
nop
and
out
adc
cwtl
iret
mov
stc
std
add
les
mov
call
popf
in
into
sub
or
pop
pop
adcb
inc
mov
inc
xchg
jae
js
popf
add
loop
loopne
cs
add
xor
pop
mov
std
dec
rorb
leave
sub
add
or
pop
mov
testl
dec
cwtl
push
xchg
adc
movsb
bound
push
mov
ja
add
sti
pop
push
mov
aas
dec
jle
mov
mov
movb
adc
pop
cwtl
lock
pop
dec
fadd
rolb
les
mov
ljmp
add
xchg
ret
stos
insb
add
push
mov
imul
js
xor
push
mov
mov
lcall
and
mov
ljmp
mov
stc
fsubr
or
mov
jae
fadd
sbb
dec
push
mov
add
icebp
cs
and
adc
add
enter
inc
or
add
insb
pop
cmp
mov
mov
clc
orl
dec
cwtl
sbb
loopne
mov
sub
imul
push
pop
stos
in
or
inc
sub
push
pop
out
orb
andb
cmp
adc
sub
add
jmp
adc
add
jns
lcall
idiv
popf
imull
jae
decb
add
jo
popl
leave
aam
nop
push
sub
or
call
and
mov
add
and
fdivrl
rol
add
push
negb
cmpsb
rolb
hlt
push
inc
pop
cld
shr
mov
cmp
add
gs
add
cmp
push
cmp
adc
mov
cmpsb
mov
jg
out
lcall
add
iret
adc
add
shlb
add
pop
aad
enter
xchg
in
inc
xor
lea
fidivs
jb
push
sub
ret
and
lea
pop
pop
out
inc
lcall
sbb
sub
sub
js
out
aad
xor
dec
ljmp
add
cltd
jb
or
call
add
dec
add
sbb
lea
test
loopne
loop
cmc
je
sbb
scas
shll
cmp
xchg
add
cmp
jg
adc
aaa
loope
xor
sbb
inc
mov
mov
sbb
rolb
out
mov
add
aam
add
iret
test
mov
inc
add
jge
add
scas
push
or
je
dec
add
jb
add
jbe
pop
add
sbb
test
dec
mov
addb
mov
lock
push
add
leavew
pop
testb
jae
jmp
scas
cmc
or
cmp
les
add
or
jecxz
add
push
sarb
cltd
ja
cmovbe
or
pop
push
push
sbb
mov
push
call
push
lea
gs
or
lods
or
jle
cmp
cmp
das
ja
mov
incl
jle
jge
jge
adc
sbb
push
inc
dec
imul
fsub
femms
adc
pop
mov
cltd
ja
icebp
in
push
push
jmp
dec
add
ficomps
pop
jo
aas
cwtl
jmp
roll
sti
subb
pop
add
cmp
inc
add
mov
lcall
jge
xchg
mov
sub
mov
mov
pop
xor
cli
movsb
dec
fidivrs
or
push
mov
push
lods
pop
jle
pop
rcrb
jae
test
icebp
xor
lock
jbe
out
add
adcb
js
push
into
mov
add
push
or
add
aam
roll
mov
aaa
mov
add
pusha
fidivs
add
lea
xchg
inc
dec
lock
sub
add
mov
cmp
rcll
test
jne
js
mov
jmp
inc
jb
add
xchg
or
adc
ljmp
xor
and
insb
add
je
push
pushf
pop
adc
mov
or
pop
and
mov
and
jmp
push
add
push
ret
jbe
data16
mov
shr
pop
add
sub
pop
addl
jmp
pushl
punpckhwd
maskmovq
testl
push
jbe
add
enter
rolb
das
test
xchg
mov
inc
add
mov
in
mov
hlt
adc
fildl
test
sarb
stos
add
pop
xchg
or
add
sbb
mov
ljmp
fisubl
sub
inc
add
sub
mov
push
incl
and
stos
xchg
ret
inc
dec
add
add
fidivl
push
mov
enter
mov
dec
jbe
pop
adc
cli
push
and
sbb
mov
enter
jae
sbb
hlt
std
add
je
pop
je
daa
mov
mov
lock
add
adc
icebp
pop
lock
mov
stc
subb
fldcw
sar
dec
xchg
sub
add
clc
push
jmp
bound
adc
ss
cmp
jle
or
in
lret
or
push
bnd
orb
pop
push
fwait
add
mov
and
aam
fbstp
xor
and
dec
orb
mov
add
and
mov
jno
ds
ror
add
cmp
daa
and
pop
lcall
cli
push
mov
out
in
or
jae
cmovne
jl
mov
jae
add
mov
out
push
push
or
add
imul
add
push
rorl
add
lock
sub
sbbl
inc
push
outsl
add
and
daa
add
arpl
cmp
lds
xlat
out
lret
test
inc
pop
js
shrb
dec
dec
pop
lahf
mov
ds
orb
cmp
daa
js
dec
and
or
push
add
test
movsb
pop
mov
dec
test
cmp
sub
mov
in
leave
adc
add
adc
sbb
jp
cmc
or
lret
add
and
xchg
pop
mov
sub
adc
add
sbb
loope
fistl
js
mov
add
jl
in
scas
fsubr
ljmp
mov
lds
and
mov
or
mov
roll
mov
xor
xor
and
lea
dec
sub
sub
sub
iret
nop
mov
add
mov
testl
loopne
mov
add
adc
jmp
scas
add
addr16
loope
dec
pop
pushf
fmull
dec
jp
fwait
push
mov
xchg
add
adc
jle
sub
lret
mov
sbb
jle
loopne
add
push
call
mov
or
lods
fadds
jb
rcll
cvtdq2ps
lahf
jl
mov
push
add
or
pusha
add
adc
or
cmp
scas
push
add
sbb
rcrb
movb
adc
hlt
cmpl
repz
jp
add
push
inc
mov
gs
xor
loope
pop
jle
add
into
adc
sbb
repnz
dec
in
add
jp
cli
cmp
aaa
adc
add
cmpl
call
in
lret
ljmp
add
inc
pop
orb
xchg
outsb
les
cwtl
jecxz
test
jmp
add
xchg
inc
xor
testb
int3
sbb
add
mov
sbb
pop
add
or
push
repz
cwtl
add
sbb
xlat
add
data16
inc
inc
or
in
daa
cvtps2pd
cmp
add
enter
leave
cmp
or
push
pop
push
data16
pop
inc
je
insb
cmp
and
roll
push
xchg
cs
cmp
add
pop
call
cmc
jg
add
jo
cld
jns,pt
dec
lret
ja
jb
add
rclb
push
dec
mov
cld
ds
rclb
xor
adc
jbe
push
or
dec
jmp
pop
xlat
mov
add
shl
gs
in
adc
add
pop
add
sbb
insb
inc
das
lahf
or
jns
add
cld
in
cli
sahf
add
aaa
add
adc
shlb
and
sub
insl
xchg
lret
or
push
add
push
mov
jae
sub
in
mov
icebp
je
leave
rclb
push
test
jmp
add
mov
push
call
lock
push
xor
cmp
mov
dec
push
push
daa
add
ror
nop
imul
std
les
push
sbb
pop
add
mov
stos
push
mov
test
rclb
add
pop
rol
fadds
fiaddl
xor
jns
adc
inc
lahf
add
out
jg
iret
sbb
sar
fnop
mov
lret
pop
jno
push
dec
jg
negb
sbb
pusha
inc
add
mov
jge
push
pop
or
das
add
mov
adc
pop
rcrb
lea
push
outsb
mov
cmp
add
push
sti
add
jo
xchg
pop
dec
stos
dec
loopne
and
push
and
xchg
inc
rclb
xor
test
pop
inc
and
add
loope
push
test
filds
lret
fisubl
cwtl
cmp
mov
add
mov
or
enter
cmpsl
cmp
add
push
dec
icebp
sti
push
push
mov
mov
cwtl
or
pop
roll
lea
ret
add
jle
cmpsl
jmp
xchg
add
fst
xchg
mov
lret
cmp
xor
stc
in
ljmp
fstpl
add
mov
and
scas
lea
les
lret
int3
out
ds
pop
add
rep
add
or
nop
pusha
ret
pop
add
ss
jbe
mov
or
jmp
or
cmp
xchg
gs
dec
lock
mov
fs
cmovnp
add
rcr
popa
sbb
add
xor
adc
mov
fiadds
lods
popf
nop
jb
and
cmp
add
mov
add
mov
test
xchg
pusha
ja
outsl
pop
pusha
mov
push
push
mov
lahf
divl
imul
push
mov
mov
gs
pusha
add
fildl
cwtl
dec
push
aas
bound
mov
inc
lods
jg
ds
adc
lea
sbb
add
or
cltd
out
out
or
fcmovnbe
add
shll
xor
bound
push
xchg
js
and
in
add
mov
shlb
daa
testb
mov
roll
xchg
sub
icebp
js
adc
add
in
and
push
adc
cmp
add
loopne
daa
mov
jle
testl
add
adcb
fcmovbe
push
mov
cmp
adc
repz
pop
ficoms
lock
loope
cli
pop
push
dec
push
test
daa
dec
cmp
adc
sub
push
add
imul
clc
sbb
jge
mov
mov
xchg
rolb
sub
stos
rcr
loop
lds
mov
mov
mov
shrb
dec
add
daa
sub
add
jbe
out
push
xor
add
mov
mov
mov
scas
sbb
dec
mov
lea
pop
lcall
mov
inc
stos
xchg
add
addb
sbb
shld
sbb
and
dec
loop
add
lea
add
and
adc
or
shl
xor
adc
cld
pop
or
call
and
mov
adc
sub
fidivrs
ja
add
bound
pop
add
loopne
or
mov
les
and
dec
lock
inc
add
aam
mov
or
add
psubsw
pop
jg
addl
cmp
or
or
incb
mov
scas
cmp
sub
mov
mov
sti
add
and
mov
or
sbbb
pop
scas
fbld
mov
movl
jl
add
dec
clc
mov
cmp
add
pop
add
pop
mov
pop
jge
add
add
pop
mov
xor
inc
add
out
imul
add
rcrb
xor
orb
pop
sub
jmp
xchg
mov
inc
pusha
add
mov
movb
dec
out
push
ficompl
pop
add
dec
hlt
add
repz
add
and
push
mov
sub
flds
sbb
jp
rorb
add
pop
pushf
loope
inc
outsb
add
or
pop
add
inc
in
mov
lea
ret
test
xchg
shrb
xchg
loopne
add
leave
and
push
push
addl
ret
aas
mov
std
stos
and
cmp
mov
sub
stos
in
add
shlb
mulb
loopne
lock
stos
aas
add
cmpsb
ret
inc
adc
push
push
pop
cltd
loope
mov
seta
xchg
mov
mov
push
add
into
push
ret
jg
mov
in
imull
cmp
add
mov
or
cld
add
jmp
add
outsl
ja
dec
lods
mov
pop
sub
add
fdivl
mov
sahf
in
daa
xlat
jno
add
inc
xchg
pop
loop
xor
inc
ficomps
jg
or
psubsb
jne
add
xor
int
add
pop
fstps
jnp
add
rcr
mov
mov
adc
mov
mov
inc
loop
xchg
add
mov
in
in
dec
inc
pop
shl
fisttpll
add
pop
add
scas
je
cmp
sub
mov
int
xchg
loopne
sbb
leave
pop
jns
divb
mov
out
mulb
jbe
add
push
add
add
xchg
xor
pop
out
cmpsl
daa
cmp
push
jp
add
pop
addb
aaa
and
and
rorb
lock
mov
mov
mov
les
sbb
mov
inc
cli
imul
in
nop
in
mov
mov
cs
mov
movsl
add
mov
aad
or
pop
into
mov
xor
add
cmp
dec
mov
fdivl
add
or
sub
cmovo
add
scas
ja
dec
enter
nop
dec
xor
adc
push
add
je
lock
jl
inc
fnstsw
je
aas
add
sahf
filds
inc
add
xchg
imul
pop
cld
cmp
add
dec
mov
inc
sbb
lods
jb
xchg
mov
add
sub
jo
add
push
pop
mov
clc
call
add
mov
int3
dec
aam
imul
add
cli
add
sbb
pop
push
leave
cltd
and
or
push
nop
adc
cmp
push
add
mov
xor
lods
sbb
pop
xor
inc
and
ljmp
add
popf
pop
sub
cwtl
cmpl
arpl
add
pop
dec
mov
and
out
sbb
sbb
fs
xor
mov
icebp
cmp
xor
sub
aad
inc
ljmp
add
push
xchg
jecxz
or
pop
or
imul
in
filds
pop
mov
add
sub
pop
push
aaa
negb
test
sti
test
cmp
mov
cmp
jle
loopne
push
in
dec
pop
data16
add
fldenv
add
jb
mov
add
fwait
and
add
mov
add
jne
xchg
add
xor
push
je
add
xorb
scas
pop
addl
ret
mov
flds
lock
loop
mov
add
push
adc
inc
cld
fiadds
pusha
push
cmp
sub
add
pop
xchg
cltd
push
jo
sub
int3
fistpll
or
fstl
add
sub
lock
dec
lcall
add
sbbl
pop
xlat
movsb
mov
dec
adc
cmpsb
mov
add
add
mov
subb
int3
push
push
cmp
add
ret
push
daa
jmp
inc
cmpsl
inc
repnz
pop
loop
adc
push
dec
roll
push
sub
sub
cmp
out
sbb
pop
add
mov
outsb
mov
mov
mov
lock
dec
add
adc
roll
push
push
and
punpckhbw
lods
ror
mov
jb
incb
out
adc
lock
imul
mov
cmp
cld
dec
push
out
dec
sbb
loop
push
sbb
scas
pop
and
repnz
adc
enter
sub
push
into
xchg
add
sbb
pop
add
cmp
scas
leave
mov
pop
xchg
push
ja
lea
jge
jae
bound
leave
jo
mov
push
and
mov
jp
add
and
lock
add
mov
inc
or
sub
in
cld
hlt
imull
aaa
cli
pusha
add
mov
and
add
stos
cmpb
in
add
lcall
add
inc
add
jl
gs
push
sarl
adc
out
sbb
out
daa
rcrl
cmp
addl
rcrl
jmp
int
addr16
mov
test
adc
addb
push
add
dec
bound
lock
cmp
push
sub
sar
xor
jle
push
pop
jg
add
mov
add
movsb
mov
dec
push
add
lock
shll
pop
rorb
mov
add
sbb
pop
mov
iret
enter
clc
mov
push
inc
ret
hlt
xor
xchg
add
call
dec
ret
loope
add
cmp
push
lods
pcmpgtw
test
push
jl
add
fiadds
sahf
adcb
cmpl
iret
mov
push
jo
in
test
aaa
movsl
pop
int
mov
or
mov
jne
sbb
aas
sbb
pusha
pop
rcr
les
insb
adc
stos
xchg
test
dec
lret
imul
clc
add
data16
das
sub
mov
adc
add
addr16
stc
or
adc
add
sarl
or
scas
ret
cmpb
daa
mov
testl
add
movd
cmp
push
mov
hlt
cmp
loope
add
sbb
adc
lods
aas
mov
sbb
ret
sbb
inc
fistpll
mov
or
out
pop
add
js
push
icebp
sbb
test
or
fdivrl
xchg
ret
int3
sbb
inc
cwtl
loopne
pop
sub
stos
inc
cmc
and
loopne
cmp
sbb
sbb
push
mov
and
insb
xorl
add
mov
orb
jne
add
pushl
dec
in
mov
lret
add
into
mov
xchg
push
ja
and
add
add
adc
stos
lret
push
jl
xchg
sti
and
xor
in
xor
aam
or
add
rorb
mov
aaa
inc
stos
xor
imul
loopne
or
pop
lods
out
jbe
cmp
lock
fcomps
nop
out
xor
push
mov
addl
xor
adc
nop
add
sbb
and
xchg
inc
fs
test
mov
je
inc
mov
or
cli
add
lods
and
pop
mov
lock
mov
xchg
inc
sbb
in
dec
and
andl
hlt
lea
in
ss
rcrb
or
cltd
push
jge
pop
ja
jbe
int3
out
mov
sbb
jns
sbb
mov
and
or
sub
mov
mov
insb
pop
add
cmp
cmpsl
cld
aas
addl
dec
or
and
repnz
inc
pop
cmp
imul
sti
mov
iret
cmp
add
je
inc
inc
or
push
dec
test
stos
or
adc
add
mov
mov
insb
sbb
pop
idivb
push
mov
cmp
mov
cwtl
aas
cmp
push
dec
sbbl
add
mov
jmp
mov
add
sub
xor
adc
jle
jge
mov
nop
mov
add
cltd
adc
adc
mov
and
addb
dec
dec
add
cmp
mov
inc
lds
sub
and
push
shr
adc
sbb
sbb
and
dec
loopne
jne
sbb
xlat
stc
cmp
jne
pop
pop
push
add
and
cmp
push
cmp
push
add
cmp
lea
add
aam
mov
sbb
and
add
out
add
outsb
je
add
and
jb
outsl
out
fiaddl
xor
xchg
push
inc
sbb
ficomps
inc
out
add
inc
push
and
in
pop
or
jo
in
or
pushf
xchg
cmp
and
adc
cwtl
jo
in
add
or
ljmp
aad
clc
mov
or
test
rolb
mov
adc
xchg
ss
sub
or
movsb
dec
nop
add
es
fs
and
and
enter
add
loopne
call
pop
add
or
jecxz
sub
xor
cmp
push
push
pop
fisubs
push
xchg
cmp
cld
nop
cwtl
mov
mov
sarb
add
and
add
sbb
cmp
inc
inc
add
cmp
mov
mov
push
push
les
cld
inc
add
imul
test
xchg
insb
mov
test
adc
or
out
pop
add
or
loopne
push
pop
add
mov
push
add
inc
sbb
dec
adc
adc
arpl
cmp
pop
out
pop
add
je
add
jbe
and
imul
in
shl
add
fsubl
dec
jmp
in
xchg
enter
inc
push
add
imul
lock
nop
movsb
pop
ja
add
or
xchg
clc
adc
js
cmp
pop
je
mov
adc
in
inc
sub
jnp
mov
push
adc
loopne
lcall
rolb
lea
cmp
add
dec
dec
mov
add
cmp
adc
xchg
add
mov
pop
cmp
mul
add
cmpb
push
int
adc
loopne
inc
adc
dec
add
sub
enter
rorl
mov
movsl
add
xchg
mov
dec
in
push
adc
mov
xchg
inc
add
pusha
xchg
and
shrb
xlat
pop
mov
mov
pushf
add
sbb
or
loop
pop
push
lock
and
pop
imul
inc
pusha
popa
mov
or
mov
jo
cld
xor
fs
clc
pushf
data16
and
aam
lock
add
xor
add
pusha
imul
add
inc
cmp
jae
mov
or
js
xchg
andb
add
add
or
or
adc
adc
lahf
push
enter
in
ret
adc
mov
mov
mov
mov
pop
cmpsb
add
clc
test
and
in
dec
add
jno
icebp
incl
push
sbb
cs
add
pop
mov
nop
mov
sub
movb
in
lds
nop
pushf
aas
and
cmp
adc
pop
movsb
xchg
add
mov
mov
mov
cmp
jo
pop
cs
int3
mov
sbb
lahf
or
add
push
arpl
in
test
add
inc
pop
clc
int
adc
pop
inc
mov
cwtl
xor
or
inc
add
and
xor
adc
jne
add
sar
and
adc
and
cwtl
xchg
ds
xor
push
test
xchg
lea
or
fsubs
sbb
add
or
adc
orb
ret
adc
fsts
repz
mov
pop
jmp
cmp
orb
test
or
pusha
push
push
pushf
mov
rorb
jo
xor
cmpsb
in
and
push
add
jns
clc
xor
dec
fldcw
cmp
add
loopne
inc
lods
js
fcoms
sub
adc
push
mov
loopne
lret
jns
add
adc
mov
push
shl
push
and
xor
dec
dec
inc
add
xor
mov
movsl
dec
sbbl
sub
pusha
xor
push
sarl
adc
adc
mov
xor
dec
or
rorb
cmp
and
insb
pop
push
inc
enter
lock
loopne
mov
push
pop
add
mov
sbb
ret
add
rcll
xchg
and
adc
ret
sbb
add
and
inc
xchg
add
cli
test
enter
stc
lcall
and
ret
ret
add
jl
cwtl
xchg
pop
pop
flds
int
insb
in
dec
je
stc
aam
add
lods
add
xor
add
icebp
loopne
mov
push
or
dec
jo
cltd
xchg
inc
or
loop
hlt
and
push
lds
sbb
inc
adc
fs
jbe
test
daa
mov
imul
lock
mov
jp
jp
mov
push
push
sbb
outsb
push
add
mov
pop
lcall
pusha
rolb
cmpsb
adc
fs
pop
and
jle
mov
scas
jae
and
rcl
xchg
fisubrs
in
or
mov
enter
adc
pop
pop
dec
push
jp
mov
adc
or
adc
and
repnz
adc
and
inc
push
sbb
mov
inc
sbbl
aas
jmp
decb
or
jno
add
jbe
xchg
and
cmovs
sbb
scas
lret
flds
jno
adc
push
jno
subb
aam
outsb
push
add
xchg
or
xchg
or
push
pop
jl
jle
sahf
and
dec
jb
mov
inc
data16
cmp
and
dec
pop
xchg
jo
mov
les
or
popf
add
and
cli
add
dec
adc
dec
and
add
outsb
adcl
cmp
scas
add
ds
xchg
push
jb
into
shl
push
fs
test
insl
inc
inc
xor
clc
inc
jb
imul
jle
jmp
adc
add
dec
inc
jbe
pop
mov
mov
sbb
fldt
and
push
jp
push
jg
inc
jb
jne
inc
in
add
dec
push
sub
and
push
arpl
sbb
push
sub
dec
in
mov
arpl
popa
call
xor
mov
mov
in
cs
pop
and
jp
push
outsb
and
adc
add
jns
fdivr
frstor
jp
push
ret
imul
js
dec
clc
xchg
sbb
pop
add
push
jnp
mov
inc
loop
outsl
inc
movsb
call
ds
sbb
jae
dec
add
dec
jg
mov
popa
outsb
out
xchg
or
add
inc
imul
pop
gs
dec
adc
xchg
xorl
add
xchg
lcall
push
add
fwait
sub
or
int3
aam
dec
push
add
xor
jae
mov
popf
bound
fwait
orb
push
outsb
push
sarl
cltd
dec
xor
enter
outsl
test
pop
sub
add
int
ja
roll
pop
pusha
sbb
push
test
lret
push
sbb
dec
add
mov
out
out
xchg
push
cld
xchg
int3
add
cmp
dec
add
leave
adc
mov
jae
dec
and
bound
imul
outsb
addr16
dec
test
test
outsl
js
dec
imul
je
sbb
mov
clc
xchg
mov
mov
push
fldl
cltd
mov
rolb
in
and
mov
mov
push
je
fwait
push
jo
in
fcmovb
lock
shlb
outsl
xchg
adc
cmp
movsb
jg
clc
or
add
adc
cmp
shr
push
test
pop
sbbb
push
stc
movsb
mov
sbb
into
test
add
push
add
dec
loope
pop
cmc
bound
inc
dec
inc
ljmp
push
xor
jne
add
cwtl
test
or
cltd
clc
push
test
scas
mov
stos
ret
sub
add
out
bound
jno
pop
cmc
xor
xchg
sbb
add
mov
montmul
cmpsb
subb
jns
cmc
dec
pop
add
inc
jnp
out
add
lahf
jno
adc
add
or
cmp
movb
mov
cmp
lock
bound
leave
aam
cmp
sahf
jp
add
sbb
sub
xor
fiadds
lcall
sub
imul
sub
call
push
and
out
add
lcall
addl
outsb
and
add
mov
out
add
xlat
stos
out
xchg
fmull
in
add
test
popa
push
arpl
pop
mov
xor
inc
jno
js
notb
pop
add
mov
cbtw
push
mov
int
push
add
lock
add
mov
out
push
inc
clc
jbe
fistpll
mov
add
push
insb
mov
bound
push
add
lret
cmp
dec
inc
into
xorb
xor
add
push
je
aas
sub
sbb
and
addl
sub
inc
rcll
icebp
push
add
dec
sbb
jns
loopne
sub
add
push
adc
adc
inc
insb
sbb
dec
xor
and
push
xchg
pop
dec
mov
daa
xchg
adc
imul
add
dec
insl
dec
lods
push
jmp
and
aas
sub
and
into
mov
xchg
arpl
mov
add
or
push
push
lret
aam
pop
ds
ss
addr16
mov
add
aad
lock
push
xor
cld
sub
lcall
pop
inc
push
add
fs
push
cld
cmp
cmp
pop
sbb
adc
js
or
add
test
add
cmpsb
pop
mov
jge
adc
and
mov
add
popa
xchg
not
add
stos
mov
jbe
fstpt
clc
out
add
cmpsb
push
aam
dec
add
pop
outsb
in
push
cmp
adc
addr16
or
jg
rorb
jg
loopne
adc
dec
add
or
xor
sub
inc
cmp
xchg
out
daa
push
inc
push
bound
jb
jp
and
out
out
out
out
out
out
out
out
out
out
out
out
out
loopne
loope
xor
or
adc
sbb
and
sub
pop
xor
cmp
inc
daa
dec
inc
push
addr16
xchg
push
jb
jp
and
out
out
out
out
out
out
out
out
out
loopne
clc
push
xor
jb
je
jbe
js
add
jl
jle
xchg
shlb
xchg
add
movsb
inc
call
add
imul
sbb
data16
sahf
add
push
fstpl
sti
xchg
adc
pop
daa
and
inc
push
dec
xchg
pop
inc
fs
andb
mov
mov
ret
out
out
out
out
loopne
xchg
cmp
adc
pop
inc
xor
call
pop
fidivrl
mov
mov
loope
cmp
leave
xchg
cmpsl
add
cmp
in
pop
pop
cmp
aas
sahf
dec
push
pop
push
lahf
pop
pop
arpl
addr16
fwait
mov
cld
xchg
stos
popa
push
aas
sbb
sub
shll
jmp
stc
ret
dec
lret
iret
add
dec
inc
and
sub
jb
je
add
js
jp
jl
cmp
cmp
dec
shll
leave
out
shl
push
add
xor
dec
cmp
pcmpgtb
and
lcall
sbb
xor
or
jle
pop
mov
testb
adc
addr16
jp
pop
add
mov
xchg
loope
xor
xchg
leave
mov
mov
and
jbe
add
dec
mov
aas
mov
push
add
mov
movl
inc
cmp
xchg
int
add
mov
rclb
daa
in
ds
inc
ljmp
mov
rorb
ds
add
in
mov
negl
inc
mov
add
xor
adc
add
pop
dec
add
bsr
jecxz
xorl
ja
lret
xor
cmp
adc
jg
les
add
add
popf
sub
jp
pop
nop
jl
mov
xchg
push
mov
aas
xlat
dec
loopne
out
stos
inc
daa
sbb
jo
jnp
adc
lds
sar
pop
add
push
shrl
fldcw
loop
adc
pop
fbstp
repz
push
cmovs
add
add
fsub
and
xor
inc
pop
cmp
jp
shrb
popa
jbe
movsb
js
sbb
cmp
pop
sahf
outsl
push
lea
lahf
xchg
pop
mov
add
sbb
inc
daa
dec
inc
push
sbb
enter
add
xor
rol
add
js
xchg
call
adc
inc
dec
movsb
mov
pop
ret
test
mov
enter
ljmp
add
jbe
js
jp
jl
subb
xor
inc
lahf
dec
pop
push
add
iret
jno
jns
sbb
loope
jmp
fwait
clc
mov
add
xchg
loopne
add
loope
push
cmp
movb
fldcw
inc
lret
xchg
push
push
repnz
iret
call
clc
or
adc
fstps
loope
mov
xchg
cmpsl
addr16
aam
out
repz
cmpl
loope
xor
cmp
push
cmp
xor
jp
adcb
lcall
jbe
jge
mov
jb
call
ljmp
add
or
jp
sub
jle
testl
push
jb
jp
or
jl
lcall
dec
mov
psrld
loop
ljmp
lock
push
xchg
popa
sub
fmul
inc
jb
push
push
out
and
in
rorl
repnz
dec
xchg
lcall
add
add
xor
pop
and
jmp
cmp
add
cs
out
nop
push
lock
clc
nop
cld
cwtl
add
mov
mov
fnop
loopne
repnz
leave
or
stc
clc
and
or
adc
sbb
fcmovb
adc
jmp
xchg
push
adc
repnz
out
push
pop
stc
pusha
dec
push
cmp
mov
cwtl
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
lock
std
shlb
cmp
sbb
in
and
cmp
inc
nop
dec
mov
pop
push
mov
jmp
test
in
xchg
add
rclb
clc
and
pop
sbb
ret
sarl
shlb
push
jecxz
repz
dec
dec
mov
push
add
imul
stc
mov
lods
jecxz
xchg
jo
jae
mov
xor
add
or
js
adc
jl
jle
leave
xor
call
aas
subb
add
je
xchg
js
add
in
push
out
rol
pusha
int3
repnz
xor
adc
adc
loope
jmp
and
sub
inc
andb
mov
je
js
jl
add
rorl
aas
fcmovnb
aas
enter
shr
dec
mov
add
xor
js
add
leave
sbb
and
and
sbb
sub
into
cld
xor
out
dec
cmp
cmp
js
jl
adcb
movsb
sahf
les
int3
lahf
rcrb
aam
fcomps
in
call
aaa
jp
jp
jp
add
lock
cmp
cmp
and
call
jl
test
mov
xchg
dec
fs
repz
int3
xchg
aam
pop
fsubl
in
in
dec
fs
clc
add
cmp
and
sub
cmp
addr16
sbb
out
movsl
daa
std
pop
cmpl
fisttpl
fnstsw
pushf
jle
jle
jle
dec
fdiv
aas
in
call
aas
hlt
aas
clc
add
out
pop
cmp
xor
inc
cmp
inc
test
dec
cld
pusha
push
sti
pop
xchg
ret
jo
into
pushf
lret
subb
or
mov
or
adc
add
or
or
fsts
sub
sbb
pop
in
out
jmp
xchg
cwtl
insb
repz
test
mov
mov
leave
xchg
mov
inc
enter
fdivl
mov
or
mov
iret
adc
prefetcht0
and
and
inc
testb
rclb
arpl
je
js
jl
xor
in
mov
fadd
jnp
fs
sbb
and
and
sub
xorl
xor
dec
mov
mov
jbe
js
jp
jl
add
ret
add
add
jb
je
stos
jbe
loopne
mov
add
dec
cmp
jle
outsb
xor
out
xor
cli
mov
inc
add
push
in
call
lock
hlt
sbb
es
sub
pusha
xor
and
subl
inc
inc
xorb
add
mov
aad
out
inc
push
or
mov
mov
add
jb
popf
cli
add
nop
sbb
xor
loope
lcall
je
jbe
js
add
jl
jle
xchg
frstor
jmp
repz
repz
lock
adc
add
xor
sbb
pop
add
aaa
leave
dec
pop
push
inc
ja
mov
sub
cmp
add
and
jb
cmp
mov
push
mull
insb
pop
inc
mov
cli
mov
rcr
je
shr
add
out
and
sub
aaa
add
mov
jle
push
daa
add
xchg
movsl
add
and
adc
cmp
jecxz
cmc
loopne
add
push
pushf
or
stos
int3
mov
or
add
mov
push
cwtl
je
repnz
xor
xchg
xor
sbb
add
mov
sbb
in
call
loopne
jl
jle
dec
sti
cmp
bswap
push
mov
shlb
cmp
popf
imul
pop
rclb
cmp
sub
add
addr16
adcl
add
in
pushf
out
push
sti
pop
and
push
push
iret
push
pcmpgtb
dec
jl
pop
lahf
dec
test
jecxz
add
sub
xchg
cmp
nopl
mov
push
add
add
jno
andl
add
repz
lcall
add
and
or
cmp
imul
jl
addl
mov
daa
movsb
inc
stos
addr16
aad
faddp
ljmp
xor
or
and
adc
gs
ret
ja
arpl
sbb
dec
popa
mov
iret
scas
maskmovq
testl
or
cmpsb
dec
and
inc
mov
or
cmpsw
loope
ret
rcr
push
sbb
daa
dec
inc
add
jnp
mov
inc
push
mov
inc
cli
arpl
roll
pop
fldenv
jnp
mov
aas
push
outsb
cmp
test
bound
xchg
inc
les
daa
sub
dec
add
es
pop
jle
leave
inc
rorb
cli
lock
push
add
pop
and
ds
add
insb
dec
je
ret
cmp
lods
sbb
mov
movsl
cs
rol
add
fdiv
fmul
and
xchg
jmp
out
cmp
add
adc
rorb
aas
jb
je
add
dec
dec
sub
out
test
pusha
xchg
pop
xchg
subb
ljmp
nop
mov
mov
mov
lahf
mov
movsb
inc
shlb
mov
dec
pop
or
or
inc
adc
sbb
xchg
lret
cmp
cmp
inc
jae
jno
pop
lahf
pusha
lahf
push
js
or
mov
nop
clc
cwtl
repnz
pushf
rcr
adcb
pop
mov
clts
rol
aas
jns
pop
andl
xchg
mov
push
aam
lock
mov
pusha
add
add
shr
icebp
mov
sbb
pusha
mov
arpl
rolb
es
xchg
add
leave
pop
dec
aaa
xchg
daa
add
test
mov
xor
mov
daa
push
add
test
stc
dec
pop
sbb
aas
jae
jge
xchg
movsl
pop
scas
xchg
rol
jecxz
jmp
cmc
sub
push
mov
or
test
add
cmp
into
dec
jl
add
pop
cmp
cmp
scas
add
fcmovne
test
xchg
xor
jo
repz
pushf
mov
dec
add
test
and
and
or
dec
lcall
pop
cmp
add
loopne
mov
lret
or
sub
jb
sbb
cmp
and
xchg
fnstenv
repnz
xor
lock
add
hlt
clc
inc
xchg
les
jbe
js
jp
adc
add
and
iret
ret
fsubr
pop
faddl
unpckhps
call
enter
stc
out
fadds
xor
ret
mov
jl
fwait
xor
popf
cmp
jbe
stos
xor
inc
call
in
ja
add
push
pop
in
push
clc
add
cmp
cmp
daa
add
nop
sti
loope
jmp
stc
ja
mov
daa
push
cwtl
out
dec
int3
mov
leave
aam
lret
fsubrl
int
in
mov
mov
or
adc
lock
sbb
and
sub
test
out
shr
in
mov
jmp
mov
cmpsb
jle
mov
mov
mov
out
mov
mov
subb
push
shl
das
xor
bound
pop
sbb
jge
sub
xchg
movsl
pop
push
mov
xchg
mov
sbbb
test
lock
cmp
or
inc
add
mov
ret
cmp
ss
mov
add
xchg
mov
jno
add
dec
in
loopne
popa
push
push
hlt
jae
xchg
pop
xchg
ret
add
les
mov
in
call
pop
enter
lret
add
push
enter
adc
rorb
leave
mov
add
mov
push
aas
clc
add
sub
pmulhuw
pop
enter
xchg
cld
xor
fmuls
ficompl
fmul
add
and
pop
sbb
arpl
sub
gs
mov
xorb
add
imul
push
inc
xor
sbb
mov
and
dec
push
push
pop
pop
ret
lret
mov
xchg
jecxz
xchg
pop
add
mov
leave
mov
loopne
pop
add
fmulp
jmp
arpl
xchg
jp
pop
mov
add
jle
mov
add
sub
es
inc
enter
xchg
sbb
fadd
and
fiaddl
iret
stos
mov
add
xchg
sub
out
adc
js
mov
and
mov
ss
jne
add
fldt
add
daa
sub
outsb
fsubr
xchg
add
lock
insb
ss
pushf
pop
sbb
add
mov
dec
xor
pop
sbb
and
xchg
das
faddl
fnstsw
pop
scas
jle
sti
clc
add
mov
loope
jmp
fists
dec
pop
pop
mov
cmp
push
std
je
adc
dec
xor
js
xor
mov
push
add
lcall
out
ja
mov
mov
je
ljmp
xchg
xor
popa
xchg
gs
sub
sub
jp
add
addb
mov
and
jp
xorb
add
ds
test
push
add
cmp
mov
aaa
sar
mov
xor
pusha
add
test
pop
xor
mov
loope
jmp
cmpl
xchg
inc
cmp
add
cmp
bound
pop
xor
mov
jecxz
add
cmp
cmp
mov
pop
ja
dec
shll
loope
lds
hlt
add
daa
jl
inc
andb
aad
inc
ss
adc
jl
loopne
mov
jne
push
push
cld
adc
rcrb
sbb
fstps
in
jecxz
outsl
xor
jae
sti
sbb
xor
add
rcrl
add
xchg
fisttpl
add
jb,pn
aas
dec
push
and
aaa
adc
mov
ret
dec
rcrl
add
ja
out
xchg
sbb
cmp
iret
popf
sbb
add
lock
xchg
pop
ljmp
mov
js
inc
push
dec
mov
push
cwtl
and
add
ficomps
repnz
lock
jle
and
xor
bound
sub
cmp
add
cli
lcall
popf
sub
mov
add
cmp
mov
testb
fprem
dec
nop
pop
call
popl
out
in
mov
push
jno
leave
xor
hlt
dec
cmp
cmp
and
push
sbb
and
pop
addb
or
add
add
pusha
xor
inc
pop
xor
lret
orl
xchg
add
cmp
inc
lahf
add
ds
pop
xchg
call
ss
xchg
cmp
test
lret
loopne
getsec
sub
in
pop
test
dec
cmp
add
cmpsb
xchg
std
loope
and
das
pop
pop
fisttpll
insl
add
adc
sub
add
cmp
xchg
negl
xorb
dec
or
roll
jnp
xorb
mov
out
jge
loopne
cmp
add
sub
clts
xor
xchg
xor
mov
lret
pop
lds
sub
pop
scas
and
cmp
mov
cmp
clc
loop
inc
jp
sbb
cmp
es
add
mov
jne
jge
in
mov
add
xchg
push
dec
add
dec
sarb
ret
divps
out
xchg
pusha
add
inc
lods
xor
or
xchg
cwtl
nop
mov
subl
loopne
mov
test
je
sbb
xor
in
inc
and
es
xchg
push
sbbb
and
sbb
loopne
sbb
and
fisubrl
cmpsl
add
mov
iret
es
xorl
adcl
dec
xor
add
movsl
jp
test
int3
jno
fbstp
fadds
push
cmp
push
add
xor
mov
inc
cwtl
xor
jns
cmp
push
or
xor
ffree
es
ss
add
aaa
xchg
cmp
jne
enter
cmp
and
in
adc
test
inc
dec
xchg
push
sti
dec
push
lods
aad
test
nop
add
loopne
pushf
dec
mov
scas
add
mov
loope
pop
and
xor
xchg
add
dec
sbb
fsubs
add
sbb
xor
xchg
dec
sub
pop
icebp
add
popa
int3
mov
out
imul
mov
pop
in
popl
sub
lock
add
adc
das
addl
rcll
adc
aam
adc
mov
or
add
test
add
es
lahf
cli
add
mov
mov
xor
incb
cmp
mov
pop
mov
testb
outsb
dec
xchg
sbbb
ds
out
out
add
or
xor
cmovl
outsb
add
je
cs
mov
xchg
sub
lds
scas
adc
outsl
lock
in
cld
daa
cmp
pop
popf
cmpb
cmp
push
fsub
and
jne
add
mov
ds
push
popa
enter
cmp
push
xor
add
dec
add
pop
iret
pop
packsswb
loopew
outsl
sub
lahf
jg
adcl
mov
clc
mov
cld
frndint
jmp
xchg
icebp
dec
outsb
or
sbb
dec
jmp
jle
test
lahf
das
roll
jecxz
out
jmp
out
push
add
mov
adc
xor
xchg
and
add
lahf
cld
pop
add
inc
inc
xchg
add
jecxz
repnz
xor
xor
add
push
mov
out
orl
or
add
loope
jmp
aas
sub
cld
stc
cmp
jno
test
rcrl
pshufw
inc
add
add
xchg
or
add
and
inc
ret
outsb
roll
lock
loope
mov
mov
roll
test
repnz
push
jb
ss
inc
or
imul
cli
sbb
je
pop
das
loopne
jp
add
cli
mov
sub
loope
loopne
mov
push
xor
mov
mov
ret
bound
pop
dec
xchg
push
subl
jb
je
add
je
push
mov
add
sar
in
add
fdivl
rcll
push
add
daa
cmp
pop
dec
xor
push
mov
mov
push
addl
add
hlt
int
loopne
xor
add
daa
loope
sub
das
sub
test
inc
jns
add
push
jo
jle
enter
ja
lods
xchg
xchg
sub
movsb
and
clc
mov
or
cmp
inc
mov
add
lds
push
bound
cli
mov
into
jbe
add
ret
jns
add
jp
mov
add
cmp
add
inc
add
in
pop
add
xlat
push
call
mov
enter
or
mov
mov
je
jbe
pop
mov
pop
inc
cmp
add
add
out
and
cwtl
jo
sbb
mov
rclb
cmp
dec
dec
mov
pusha
and
call
adc
loopne
jb
test
divb
mov
pop
inc
add
insb
jo
jle
pop
jae
add
sti
daa
add
xchg
and
rorl
pop
cwtl
cmp
aam
add
insl
seto
rcrl
fstl
test
xor
in
lahf
add
sarb
aas
push
sub
inc
mov
movsb
xor
cmp
mov
fidivrl
stc
loopne
jb
dec
mov
add
sbbb
je
add
pop
outsl
add
loop
ret
aam
pop
cmc
dec
in
rcrl
out
jecxz
lock
or
push
addr16
roll
rcll
out
sbb
loopne
adc
dec
add
pop
jbe
push
add
jl
popf
sahf
add
push
iret
mov
in
add
out
in
ret
add
rcrb
in
call
mov
adc
pop
mov
jp
xchg
dec
imul
push
fmull
inc
add
es
add
jbe
cmpsl
xor
xor
push
dec
sub
sahf
out
in
jl
add
mov
test
shr
pop
inc
pop
std
add
sti
cmpsb
mov
push
fcoms
pop
jae
sarb
ficompl
xchg
ret
pop
jmp
and
stc
sub
add
add
push
xor
popf
adc
jne
or
hlt
or
cmp
jg
call
xchg
mov
in
jp
scas
mov
add
dec
lret
cmpb
js
pop
rol
inc
pushf
pop
je
add
popf
addl
leave
inc
js
in
push
cmp
outsl
sub
dec
setb
movsb
mov
mov
mov
cmp
pop
sub
mov
xchg
add
aam
adc
ret
mov
mov
loope
in
add
dec
or
and
adc
xor
insb
jns
pop
jp
xchg
dec
mov
aaa
in
add
push
in
arpl
jmp
or
imul
nop
cs
and
and
xlat
or
adc
aam
add
or
hlt
mov
jmp
add
jmp
adc
push
push
jle
and
cmp
mov
fimuls
push
or
leave
bound
hlt
jnp
and
movsl
add
cmp
cmp
mov
out
mov
jo
or
adc
xor
rol
adc
add
sbb
adc
add
adcl
pushf
inc
and
dec
adc
fwait
daa
add
out
in
rorb
cli
adc
mov
mov
shr
je
xchg
adc
loopne
nop
add
in
popa
sbb
repz
and
dec
and
add
or
nop
adc
daa
push
push
dec
lock
lahf
xchg
outsb
mov
jg
add
roll
mov
sbb
orl
xchg
popa
add
mov
testb
cld
push
clc
mov
sbb
sahf
flds
add
cmp
rolb
jbe
pop
jmp
clc
into
les
dec
loope,pn
mov
fcmovnbe
lods
mov
push
cmpb
cmpsl
push
push
inc
in
inc
das
add
loopne
frstor
clc
add
lods
add
test
add
jae
bound
jb
shrl
in
repnz
xor
add
add
or
push
stc
push
cs
into
pop
rorb
popa
mov
sbb
cmp
xchg
and
add
mov
add
cmp
cmp
int3
je
lock
adc
mov
xor
insb
loope
push
test
nop
or
sub
test
or
cmpsb
cmp
out
pop
fisttpl
add
sub
inc
inc
add
adc
popa
ret
sahf
sbb
mov
mov
insb
pushf
orb
or
cld
std
jbe
mov
xor
xor
dec
into
mov
shlb
call
xor
xor
ja
dec
jle
xchg
push
test
ret
loope
loope
cmp
push
js
cmp
mov
loopne
pop
xchg
xchg
add
cltd
mov
add
daa
jne
lods
add
mov
test
pusha
scas
lret
lock
mov
std
mov
arpl
xor
daa
loope
or
jle
sbb
add
scas
cmpsb
rcrb
addl
iret
mov
js
je
pop
or
push
dec
sub
dec
cmpsl
movsb
sbb
xchg
xchg
cli
loop
jo
adcl
pop
fs
rolb
add
add
add
rorb
push
adc
dec
cmp
mov
pop
int3
cmpsl
in
les
xchg
dec
mov
cwtl
lret
stc
fadds
je
idivl
add
mov
mov
add
ret
enter
xor
adc
push
cltd
hlt
lods
mov
mov
mov
adcl
sbb
or
cmp
ljmp
incl
daa
sub
in
mov
lret
mov
cmp
add
pop
pop
movsb
and
cmp
push
lcall
rolb
push
lock
fwait
add
rol
out
mov
cmp
and
pop
inc
js
pop
add
xor
imul
add
pop
test
stos
cltd
push
dec
push
add
leave
aas
fmul
out
add
les
adc
test
clc
das
add
xchg
pop
mov
orl
mov
add
xor
xchg
sahf
mov
jo
rorb
js
lock
ret
shrb
cwtl
sub
hlt
dec
add
xchg
dec
adc
cmc
cmp
add
sbb
cmp
lret
lahf
jmp
add
or
imul
pop
loopne
mov
lods
leave
mov
sbb
dec
ss
sarb
dec
sahf
stc
mov
xchg
lret
dec
dec
mov
xor
sar
and
adc
inc
cmp
cs
mov
mov
sahf
ficoms
mov
loopne
mov
adc
pop
add
cmp
adc
iret
cmp
add
mov
push
push
adcb
lds
xorl
imul
ret
add
lds
cmpsb
jnp
pmulhw
clc
jo
mov
and
add
sub
pop
adcb
add
shlb
mov
adc
push
jecxz
repnz
test
jmp
jl
push
cmpsl
mov
lret
rcl
cli
jnp
cs
add
lahf
xorb
mov
decl
shlb
roll
nop/reserved
imul
lock
frndint
loop
in
push
mov
fcmovbe
js
dec
add
mov
fldl
push
je
sbb
addl
jge
hlt
push
loopne
enter
jle
iret
pop
flds
in
daa
cmp
xor
pop
jp
or
mov
add
cmc
ret
sahf
jo
es
xor
push
inc
mov
out
jg
js
mov
ret
add
out
das
stc
xchg
or
push
sub
fcmovnu
push
add
xchg
xchg
dec
inc
mov
jae
loop
insb
xchg
scas
loopne
add
aam
pushf
add
shlb
xchg
add
push
enter
pop
cli
cs
cmp
adc
lahf
add
scas
fnstenv
mov
cli
sahf
add
push
dec
xchg
add
je
scas
add
mov
add
mov
or
dec
subb
fcoml
cmp
aas
lea
dec
loopne
add
mov
mov
or
insb
ss
push
cmp
test
mov
add
ret
bound
push
lahf
jb
add
and
mov
push
jle
pop
ficompl
add
shll
cmp
add
inc
shlb
sub
hlt
mov
push
push
fsubs
loopne
push
mov
call
and
pop
mov
inc
lds
add
mov
push
xchg
dec
dec
fcoms
add
clc
hlt
add
clc
jae
ja
pop
add
movsl
lret
nop
mov
add
sbb
sbb
sbbb
pusha
push
les
jo
outsb
xor
shr
dec
je
pop
aam
xchg
mov
add
jge
dec
negb
and
in
stc
lock
mov
lret
add
pop
ljmp
sub
add
in
loopne
je
ss
movsb
in
shlb
mov
int3
and
in
cli
push
jge
pop
push
add
pop
mov
mov
push
out
adc
in
cld
int3
add
push
mov
loopne
mov
push
xchg
test
in
leave
lock
clc
dec
add
sbb
or
jb
sbb
inc
sub
aas
xor
cmp
pop
inc
push
daa
dec
inc
push
sbb
stc
pop
sbbb
aas
mov
cs
and
mov
mov
mov
mov
stos
or
mov
hlt
pop
add
and
stos
dec
add
hlt
cli
les
cmp
sub
inc
das
dec
rcrl
push
xor
sub
shll
fmull
dec
or
jecxz
and
repnz
add
mov
shlb
cli
jle
subb
cmp
add
cmp
cmp
adc
inc
add
icebp
sbb
and
lret
add
push
cvttps2pi
pop
iret
pop
dec
pusha
shl
xlat
jle
xchg
jnp
add
cmp
mov
lods
add
pop
mov
aas
mov
sbbb
push
loop
lock
cmp
mov
fs
add
loop
hlt
dec
pop
and
add
lods
cmpb
fs
push
add
jo
movsl
add
nop
pusha
call
jmp
mov
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
outsl
inc
stos
pushf
ss
push
cmp
xchg
push
call
enter
lock
sbb
movsb
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
arpl
add
or
add
sbb
adc
adc
call
orb
push
and
cmpsb
sub
jo
lods
add
loopne
popf
add
cwtl
or
or
je
or
xchg
rolb
cmp
test
inc
dec
mov
push
xchg
push
cwtl
cltd
push
shr
add
push
sub
popf
mov
adc
repnz
sub
xor
test
push
shlb
push
xlat
adc
push
mov
pusha
mov
aas
xor
loopne
add
je
js
lods
cmp
mov
jmp
jmp
sub
addl
ret
add
filds
inc
loopne
pop
pop
pop
stos
bound
dec
sub
add
stc
add
add
out
pop
add
adcb
mov
jp
or
pop
test
cmc
add
cmp
dec
mov
and
sub
je
call
add
mov
mov
pop
test
rorb
shll
cltd
lods
inc
add
shr
repnz
xor
add
stos
push
pop
add
subb
jecxz
jg
add
cli
sbb
and
out
add
sahf
sub
mov
bound
repnz
pusha
or
dec
adc
jno
push
push
jge
ret
in
add
xchg
jne
push
push
add
and
mov
inc
add
push
int3
repz
add
push
sbb
sbb
jle
lret
mov
or
add
inc
xorb
add
fiaddl
push
inc
sahf
add
add
call
jne
and
add
sub
xor
add
inc
cltd
dec
cmp
fdivrl
lret
mov
and
pop
rcll
rorb
add
add
sbb
add
aam
and
jmp
push
inc
movsb
jbe
add
sub
xorl
scas
cld
push
in
dec
call
adc
f2xm1
and
mov
xchg
push
cmp
ret
adc
andb
pop
mov
or
gs
pop
arpl
mov
push
roll
fwait
push
mov
add
jge
mov
jb
mov
xchg
les
pop
push
sbb
mov
sbb
sub
inc
xchg
sbb
pop
xor
jo
add
imul
or
orb
iret
mov
cmp
inc
std
ret
add
cld
sahf
dec
jmp
scas
pop
cmpb
pop
sub
shlb
pop
lods
push
inc
push
and
or
out
clc
repz
xorb
in
add
or
adc
movsb
dec
rolb
outsl
insl
clc
mov
inc
add
add
mov
sbb
cmp
pop
jge
and
bound
rolb
push
jbe
nop
int
jno
mov
inc
xchg
add
cmp
test
pusha
xchg
add
aad
push
les
add
cmc
leave
mov
lret
pop
js
mov
sub
popl
xorb
jnp
add
jg
jo
mov
pop
pop
repnz
outsl
xor
setle
adc
shll
mov
fstpt
inc
addl
dec
mov
cwtl
fisttpl
or
dec
test
cmp
sub
or
int
push
adc
stc
pusha
and
into
jmp
push
sub
add
jge
ljmp
roll
test
std
ficoml
add
repz
add
popf
cmp
daa
aas
test
lret
orb
xchg
and
enter
aad
add
ret
xchg
sub
jmp
mov
fcoml
mov
mov
out
addr16
add
cwtl
fdivrl
add
mov
lods
subb
add
sahf
sub
and
ficompl
pop
pop
test
mov
add
sub
call
sbb
popf
jbe
mov
ss
add
sub
jnp
adc
xchg
add
imul
add
mov
aas
mov
adc
sahf
or
sub
inc
and
inc
add
ret
jle
cmp
cmp
add
adc
roll
add
inc
add
and
inc
daa
jne
lock
sahf
pop
movsl
or
add
and
sti
fidivs
or
sbb
je
fdivrl
stos
mov
jo
rolb
roll
ja
cmp
jno
xor
cmp
jmp
add
mov
repnz
mov
std
ret
mov
loop
lcall
sbb
imul
cmp
aas
ja
add
lea
popa
add
decb
imul
orb
pop
cmp
out
aas
xchg
in
cmc
pop
add
ss
nop
shlb
add
stos
mov
or
add
dec
add
add
lds
outsl
mov
out
xlat
add
out
nop
fldl
pop
push
pop
or
movaps
int3
out
adcb
or
lret
xorb
stc
cmpsb
dec
mov
xor
in
dec
mov
xor
xor
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
add
mov
ljmp
mov
push
mov
imull
cmc
rep
pop
jmp
dec
shl
test
mov
lods
xor
push
jge
xor
push
add
or
inc
sbb
clc
jg
add
rcll
jge
add
add
adc
mov
sbb
incb
mov
cld
popa
lock
sbb
and
sysret
imul
cmp
dec
mov
inc
je
popa
out
push
sub
or
imul
sbb
jo
inc
js
loop
icebp
jae
cmpsl
inc
jne
mov
sub
sti
pop
ret
push
ja
jo
imul
dec
loopne
inc
push
and
push
cmp
loopne
cmp
ds
fs
scas
fwait
inc
jecxz
jg
fists
and
jne
fs
shl
bound
loop
mov
pop
jns
mov
and
or
divb
push
fs
mov
lock
rcrl
add
rorb
in
sub
add
icebp
addr16
out
std
stos
cmc
xor
dec
outsl
inc
shrl
js
jmp
push
daa
dec
outsl
std
je
push
cmp
test
cli
cwtl
add
add
add
adc
imul
and
pop
mov
fdiv
xor
imul
cmp
cmp
adc
inc
test
sbb
je
movsl
loop
and
dec
fidivl
mov
mov
and
push
mov
movsb
mov
fidivrs
lods
stos
pop
pop
jg
mov
jge
inc
ljmp
mov
iret
push
push
test
sbb
sub
pop
sbb
fimull
xchg
jno
imul
aad
pop
outsl
test
rorb
push
sbb
jbe
cmpsl
mov
jg
inc
xchg
jbe
fs
sub
mov
inc
jns
xor
cltd
pop
jmp
or
sub
pop
dec
adc
jbe
add
and
inc
dec
or
add
inc
fcmovnb
jb
sbb
push
cltd
xchg
cmp
lea
pop
push
sub
cs
cmp
and
repnz
cwtl
insb
mov
jmp
into
aaa
sbb
xchg
sub
sub
shlb
mov
test
jp
xchg
in
jle
jmp
add
das
push
push
or
pop
xchg
xor
add
cltd
or
jmp
xchg
push
lods
jne
es
xchg
mov
jno
psubw
mov
push
xor
pusha
dec
insb
dec
push
mov
lods
mov
rol
and
cs
aad
pop
outsl
adc
dec
lret
lods
arpl
dec
sub
shlb
push
pusha
test
not
int3
mull
add
pop
xor
lods
mov
jp
popf
add
push
iret
mov
imul
jo
es
leave
or
mov
xchg
add
das
inc
lcall
insl
mov
jb
pop
xor
lock
cmc
sbb
loopne
mov
popa
mov
scas
xchg
inc
jl
sbb
mov
cmp
lds
cmp
into
push
jo
inc
cs
or
or
cmpb
pop
mov
pop
nop
pop
inc
push
ret
rclb
mov
mov
jmp
adcl
jae
xchg
ret
add
pop
push
adc
add
add
negl
mov
push
mov
adc
pop
fcompl
cmpl
adc
shlb
and
test
push
ficoms
sub
adc
mov
pop
inc
or
je
nop
or
rcrb
call
sub
pushf
or
shl
lock
in
fucompp
pop
inc
mov
pop
mulb
xorb
insl
bound
jmp
sbb
add
add
sub
movsb
out
mov
cmp
fstpt
or
jl
rorb
inc
mov
xchg
and
xor
in
int
inc
std
fs
hlt
cmp
mov
adc
xor
sub
icebp
pushf
push
loopne
sbb
jl
bound
andb
mov
push
mov
pop
js
lods
adc
cmp
gs
cmp
sbb
aaa
mov
xchg
inc
add
mov
mov
imul
lret
lret
add
jb
pop
push
lods
shlb
add
jecxz
pop
aad
insl
xor
cs
out
pop
push
jne
pushf
xor
inc
lods
mov
loop
mov
push
cmpsl
adc
xchg
das
imull
les
das
mov
mov
shrl
pop
fnstsw
or
mov
or
lcall
popa
sbb
mov
push
inc
jl
test
mov
stc
dec
push
dec
xchg
inc
mov
xor
outsb
out
mov
cs
aam
jae
adc
or
push
lds
stc
lock
stc
js
pop
out
loope
dec
outsb
add
sub
fidivl
jbe
lret
adc
mov
jno
xchg
leave
pop
jb
mov
loopne
arpl
das
inc
addr16
sbb
fadds
xor
enter
mov
and
stos
popf
jb
imul
daa
adc
in
sub
jo
adcb
hlt
les
scas
sub
cs
xchg
pop
cmc
push
jmp
inc
daa
imul
outsb
add
pop
fcmovu
mov
lret
mov
adc
mov
inc
fldenv
sbb
pop
cmpsb
adc
leave
imul
stos
out
fnstcw
and
loopne
and
push
inc
out
enter
cmp
mov
mov
or
iret
jno
adc
int3
mov
cmp
and
pop
lret
mov
pusha
fsubr
fsub
sbb
test
add
push
pop
or
dec
lods
aad
inc
outsb
cmp
movsl
push
inc
cmc
bound
lods
icebp
and
les
jne
sub
jl
sub
push
popa
data16
insb
shlb
cmpsb
popf
xor
outsl
mov
adc
cmpsl
std
orb
fwait
insb
repnz
adc
sbb
mov
arpl
jl
sarb
nop
ja
rolb
inc
lods
cmp
js
out
jbe
test
popf
insb
jge
inc
arpl
or
mov
push
jno
mov
xchg
leave
push
adc
cmp
rclb
pop
push
mov
popf
hlt
dec
mov
add
jl
aad
hlt
in
std
push
les
stos
jbe
jns
mov
cmpsb
push
ljmp
and
in
jp
jo
pop
cs
sti
int
cmc
test
xchg
mov
lahf
lock
inc
xchg
fnstenv
pop
dec
push
mov
data16
add
and
int3
mov
sbb
je
test
and
add
and
dec
stc
push
clc
rorb
push
imul
sub
scas
imul
xor
fsubrs
movsb
jb
add
xor
lods
sti
repnz
dec
loop
pop
inc
push
dec
rolb
pop
fstpt
dec
jbe
lret
adc
dec
cwtl
mov
mov
cmpsb
mov
sub
adc
imul
jae
ror
sti
jns
cmp
xor
push
sbb
scas
cmp
mov
faddl
lret
loop
aam
lds
jl
push
sub
sbb
mov
fmuls
repnz
out
imul
mov
jnp
adc
dec
pusha
lret
pop
jmp
sub
sub
inc
imul
dec
dec
sub
sbb
push
dec
sbb
ret
sahf
addr16
pusha
or
pop
add
xchg
std
daa
jnp
scas
scas
dec
push
cmpsl
addr16
insl
imul
decb
cltd
stos
lods
aaa
jae
mov
lods
mov
xchg
mov
retw
push
mov
fisubs
arpl
mov
repnz
notb
push
inc
jle
cmp
adc
cmp
mov
push
xor
sbb
xchg
jge
jle
xchg
push
inc
mov
mov
in
sub
frstor
out
cmpsb
adcl
jmp
loope
pop
xor
mov
in
or
add
dec
and
inc
mov
mov
fidivl
popa
mov
add
pusha
into
repz
in
mov
adc
mov
pop
and
inc
add
incl
adcl
inc
dec
imul
cmp
icebp
in
int3
xor
leave
cmpsl
addr16
imul
ljmp
or
movsb
jns
jmp
push
das
movsb
int
sbb
pop
add
ret
sub
mov
xchg
movsl
aaa
fs
lods
sub
adc
dec
dec
or
push
orb
cmc
mov
jnp
cwtl
xchg
gs
mov
jb
icebp
les
adc
add
ja
shr
je
cmpsl
jge
cld
popa
pushl
cmp
xchg
popf
inc
lahf
adc
scas
dec
inc
cmp
pop
mov
mov
pop
sbb
shl
mov
sbb
cmp
test
outsb
ja
jno
push
xchg
lds
lret
arpl
pop
lds
mov
pop
jo
push
jmp
enter
mov
lcall
mov
ficompl
out
ljmp
pop
jns
or
sbb
cltd
xor
mov
es
lahf
aas
adc
mov
jmp
push
cs
sub
sub
xchg
mov
pop
or
push
sub
inc
xor
sbb
icebp
jp
sbb
js
fdivrs
jns
mov
adc
sub
ljmp
mov
pop
mov
or
mov
sarb
int3
lret
adc
xchg
dec
lods
push
sub
mov
xchg
xchg
inc
mov
fisubrs
addb
cmc
flds
test
mov
xchg
bound
clc
fdivs
movsb
or
push
aas
mov
mov
add
xchg
pop
mov
xchg
push
xor
lret
and
lahf
ljmp
add
dec
mov
scas
mov
inc
frstor
js
mov
movsl
js
mov
mov
push
sbb
add
push
sbb
push
pop
pop
or
notl
sbb
mov
mov
lcall
pop
das
pop
mov
jno
pop
push
mov
cmp
push
inc
inc
pop
mov
repz
cmp
mov
insl
stos
inc
sbb
test
or
fcmovne
stos
enter
stos
fisubrs
ss
hlt
loop
adc
aaa
push
jbe
lcall
ds
xor
insb
push
das
fwait
pop
add
jl
jb
lds
int3
stos
movzwl
pop
push
push
pop
popa
jge
xchg
test
out
add
sbbb
cmpsb
test
jmp
icebp
dec
push
mull
daa
xchg
mov
mov
adc
xchg
lock
in
mov
inc
out
cmp
sbb
and
shl
rolb
aam
mov
scas
lea
int3
ljmp
add
or
or
pop
mov
dec
cld
mov
add
inc
mov
sub
xchg
inc
dec
jp
add
xor
daa
push
nop
xor
inc
or
sbb
add
pop
cmc
add
mov
adc
sbbb
enter
lret
xchg
pop
sub
lods
call
cmpsl
adc
push
xor
stos
aad
lret
fdiv
repnz
sub
cmp
enter
cld
in
call
loopne
mov
mov
ficompl
add
cmpsl
movsl
mov
inc
xchg
and
jmp
cmp
cmp
lahf
mov
scas
fisubrl
mov
push
add
pushf
repnz
sahf
xchg
cwtl
call
cwtl
jge
push
std
movsb
fs
dec
cmp
and
sbb
fwait
jg
arpl
xchg
lock
cmpsb
test
inc
popf
jne
ja
fisttpl
cmc
jae
xchg
mov
in
andb
mov
pop
jmp
sbb
pop
js
cmc
mov
dec
in
cmp
dec
cltd
out
out
aas
hlt
inc
mov
xor
arpl
test
scas
adc
test
mov
sarl
imul
sbb
rcrb
sbb
and
shll
xchg
mov
in
loopne
inc
jns
pop
push
jns
test
ret
adc
xchg
pop
clc
mov
sbb
loop
pop
sub
cmp
xlat
cmp
jp
jmp
xor
aad
shlb
adc
or
mov
stos
mov
mov
int
lea
inc
out
fimuls
push
in
inc
push
sbb
ss
mov
stos
cmp
insl
mov
outsb
jl
push
bound
roll
mov
lcall
jns
out
or
mov
ja
gs
mov
in
xor
sbb
xor
dec
mov
push
add
test
xor
in
xor
addr16
loop
add
cwtl
hlt
xor
stos
sbb
push
jge
push
xchg
pop
bound
pusha
pop
mov
jnp
mov
xor
popf
pop
xor
hlt
test
stc
inc
push
jmp
shlb
scas
pop
pop
or
adcl
cld
sarb
sarb
insl
mov
adc
push
and
shll
stos
shlb
push
and
clc
add
inc
cmpsb
push
mul
xchg
add
lods
adc
je
dec
cmp
add
icebp
xchg
push
int
jns
jne
inc
xor
add
add
stos
sbb
and
fstpt
jmp
ds
xor
fwait
inc
push
fldcw
add
cmp
jge
pop
cmp
pop
xor
mov
mov
in
jb
mov
ret
dec
lea
inc
test
outsl
aad
push
dec
insb
dec
mov
repz
stos
lea
std
push
xchg
enter
sub
mov
push
jne
pusha
sub
scas
cmp
sub
push
xorb
push
push
fwait
loope
jmp
adc
fmul
push
loope
sub
xchg
imul
and
mov
mov
pop
pop
aam
in
jbe
lds
clc
jno
enter
push
imul
insb
dec
lahf
and
lods
lods
and
add
cmp
icebp
into
out
shll
pop
sub
jecxz
repnz
icebp
ss
iret
arpl
imul
in
mov
mov
or
iret
aas
jb
scas
jbe
dec
mov
es
lret
jmp
adc
xchg
jl
add
cmp
jecxz
pop
out
sbb
adc
pop
mov
xor
insl
mov
pop
cmpsb
fiadds
mov
mov
mov
mov
addr16
lret
pop
sub
pop
xor
enter
loop
dec
jo
and
mov
lods
stc
loopne
movsl
shll
mov
jg
stos
adc
mov
xlat
imul
jmp
ljmp
stos
sub
xchg
sbb
and
pop
ss
sbb
jbe
mov
loope
ljmp
push
add
mov
jmp
jmp
sub
push
xchg
mov
testl
stc
jno
xor
ss
jae
mov
pop
pop
subl
xchg
notb
fwait
or
in
or
mov
pushf
adc
push
sub
pop
int
inc
inc
lods
sub
push
mov
imul
pushf
fwait
and
dec
jp
pop
mov
mov
out
repz
xchg
mov
leave
aaa
lret
or
sub
sahf
mov
push
pop
push
push
bound
ret
rorb
xchg
aas
jae
insl
cmpsl
aaa
inc
cmp
repz
out
out
in
mov
pop
lea
sub
mov
jecxz
add
and
stc
lods
adc
sub
clc
fsts
adc
mov
arpl
ret
loopne
inc
pop
push
ss
jmp
mov
rcr
pop
ljmp
out
imul
leave
pop
ljmp
sub
dec
mov
pop
mov
test
pop
sti
xorl
lock
dec
testl
mov
inc
movsb
movsb
insl
rcl
push
mov
shrl
mov
jecxz
popa
or
fcmove
push
stc
sub
imul
inc
addr16
ret
sbb
cmp
imul
mov
pop
mov
cmp
cmp
mov
roll
movsl
mov
cltd
xchg
pop
fs
orb
cmp
gs
sub
fimuls
push
into
cmp
pop
bound
scas
aam
pop
cld
pop
fwait
cmc
mov
and
mov
dec
pusha
dec
and
andl
cmp
push
fisttps
rep
mov
cmp
call
ds
jl
pusha
mov
and
mov
sub
aaa
enter
pushf
mov
xchg
shl
ja
es
dec
idivl
mov
fdivrp
loope
mov
xchg
test
dec
ret
and
adc
xchg
jns
xchg
rcl
mov
dec
shlb
je
ja
js
push
scas
jge
jecxz
jecxz
fcmovb
xchg
dec
es
dec
je
lahf
mov
push
push
sub
adc
stc
in
ss
cmp
nop
fistpl
mov
xchg
jb
icebp
mov
inc
adc
inc
mov
repz
out
les
mov
mov
rcll
push
dec
fsubrs
push
fstpl
push
js
les
mov
out
cmp
dec
scas
or
sbb
dec
mov
das
jbe
and
loope
xchg
out
lret
arpl
in
scas
pusha
das
lcall
inc
dec
cmp
push
adcb
xor
inc
adc
push
push
or
sub
sti
scas
loop
jae
and
lcall
xor
push
sub
jae
je
clc
lahf
or
int
aad
pop
in
dec
pushf
movsl
xor
push
cmp
je
in
popf
xchg
scas
call
mov
repnz
lods
adc
xor
cmp
leave
fnstcw
stos
or
inc
mov
push
mov
rorl
and
and
cmp
mov
sbb
add
push
insb
sarb
sub
xor
in
popa
sub
fwait
sbb
mov
mov
ret
movsl
mov
xor
out
mov
inc
mov
data16
jle
and
dec
loope
shll
push
sbb
imul
and
adcl
cmp
xor
pop
sbb
jle
es
test
cmp
xchg
sub
test
mov
in
adc
popf
adc
push
stc
dec
imul
hlt
mov
cmc
divb
and
xor
sahf
cmpsb
xor
rcl
xchg
sub
add
jp,pn
scas
pop
cmp
pop
jns
lea
mov
fisubrl
xchg
imul
mov
and
sbb
into
repnz
leave
int
or
mov
scas
mov
push
mov
imul
cmp
xor
lret
movsb
add
sbb
mov
xor
jecxz
xchg
les
mov
fldl2e
inc
ss
xchg
mov
mov
ljmp
jmp
and
fadds
out
xchg
inc
inc
mov
push
mov
repz
movsl
lds
push
jno
pusha
lcall
sarb
ret
test
or
fcompl
pop
xchg
js
into
fmull
pop
adc
sub
lods
aas
push
call
int
push
aas
insb
pushf
adc
or
cs
jne
ficomps
pushf
pop
xor
adc
sub
mov
xor
bound
repz
fwait
and
sub
fcompl
hlt
mov
ret
dec
mov
fnsave
cmp
popa
std
xchg
jns
jne
jle
shll
mov
fxtract
push
push
arpl
jns
cmpsb
addr16
loope
shr
cmp
scas
out
outsb
xor
fisttpl
movsb
js
pusha
ss
lcall
iret
shrb
ja
mov
bound
xor
push
xor
adc
jns
jcxz
out
mov
mov
rcl
pop
ret
mov
test
lahf
mulb
mov
jns
sub
test
lea
gs
mov
js
adc
popa
xchg
mov
fs
stos
aad
int3
lahf
cmpsl
add
xchg
push
outsb
dec
or
xchg
in
push
xchg
pop
and
mov
movsl
movsb
insb
loopne
mov
popf
or
imul
pop
jmp
add
clc
fnstenv
cmp
bound
movsb
pop
scas
inc
push
aam
xchg
cld
add
jg
loop
in
sbb
gs
mov
adc
adc
fwait
cwtl
dec
pop
dec
leave
inc
popa
ret
push
mov
js
jae
jp
nop
pop
jnp
leave
out
mov
lret
mov
shr
cmp
negb
jo
push
gs
ret
dec
shll
fmul
pop
je
in
sub
mov
mov
daa
lea
add
cmp
mov
ss
repnz
lods
nop
dec
fbstp
stc
movsb
fnstsw
adc
or
mov
in
sbb
mov
jmp
or
inc
mov
add
xor
sub
or
push
stos
int3
lret
add
push
fsubrl
loope
jl
xchg
fcompl
push
pop
int
lret
mov
mov
mov
dec
leave
lods
cmp
pop
dec
lds
leave
cmp
ret
sarl
test
pop
les
sbb
cmpb
daa
ret
loop
inc
dec
cwtl
fldcw
outsl
mov
stc
rolb
out
out
arpl
aam
jne
out
or
mov
push
cmp
out
jae
pop
sub
gs
add
xor
insb
ss
push
fnsave
pop
outsb
loopne
inc
sbb
xlat
inc
loop
scas
repnz
or
iret
arpl
xchg
cmp
sbb
inc
jno
jns
outsl
fisubs
pop
popa
lods
scas
pop
jmp
xchg
imul
mov
cli
std
mov
sahf
lret
push
bound
xchg
or
scas
mov
gs
mov
add
iret
mov
mov
jecxz
and
or
cmpl
mov
mov
int3
dec
mov
popa
pop
ljmp
jg
rcrb
cld
mull
fs
push
fstps
jns
jne,pn
roll
ret
or
aaa
aaa
ss
out
and
sub
fbld
loop
jl
in
xchg
ret
cmpsb
inc
adc
pop
inc
push
jecxz
fnstsw
cli
jns
sub
xchg
fcomps
fldl
dec
pop
ss
lret
sub
scas
mov
bnd
fdiv
cwtl
cmp
arpl
loop
sub
cwtl
lcall
cmp
ds
push
mov
pop
push
test
movsl
pushf
xchg
mov
repnz
mov
sahf
ret
jns
cmp
inc
div
sahf
pop
pushf
lret
scas
adc
dec
imul
dec
jle
sub
xor
push
inc
das
jb
std
pop
xchg
cmp
in
inc
sarb
cmp
mov
mov
scas
or
sar
xchg
adc
pop
push
hlt
push
lret
fisubs
adc
cwtl
dec
push
pop
mov
push
jmp
out
cmpsb
out
dec
or
push
in
jp
cwtl
hlt
sub
pushf
aas
mov
sbb
inc
adc
push
jnp
shrl
in
popa
lea
jp
sbb
inc
jmp
add
outsb
les
push
push
sbb
push
cmp
mov
cmpsb
sub
imul
insl
idiv
sahf
mov
adc
sbb
mov
in
pop
je
mov
scas
pop
mov
icebp
loope,pn
lea
cs
push
xchg
mov
outsb
out
lret
mov
imul
pop
mov
imul
scas
push
fldpi
addr16
repnz
mov
xor
inc
pop
daa
imul
push
je
pop
sub
cmp
stc
ja
out
sbb
scas
push
pop
daa
xlat
xchg
aaa
xor
mov
mov
cmc
pop
push
pop
into
inc
push
js
jecxz
xchg
enter
stos
loop
lods
imul
push
add
sub
jmp
jg
and
adc
aad
pop
mov
outsl
popf
lock
mov
scas
lret
dec
test
push
xor
mov
xor
sbb
sti
pop
inc
and
mov
out
and
jno
mov
add
cmc
mov
scas
and
out
sarl
dec
sbb
pop
mov
out
push
adc
and
push
pop
sub
out
or
pop
aas
lea
xor
xlat
adc
cmpsb
xor
xchg
out
adc
mov
test
pop
sbb
mov
mov
cli
movsb
arpl
jcxz
mov
addb
jmp
mov
aad
icebp
pop
or
jge
jg
cmp
out
pop
inc
bound
cli
dec
test
stc
movsl
test
xlat
mov
pop
arpl
push
stc
fxch
push
xor
push
and
sub
xchg
adc
int3
adc
testb
push
inc
mov
insl
pop
xchg
test
mov
pop
or
sub
pop
jmp
nop
add
cmpsb
enter
mov
aaa
xchg
and
pop
xchg
xor
dec
push
ljmp
mov
jae
cld
es
dec
inc
mov
pop
sub
dec
add
lods
pop
test
mov
push
jne
loopne
shl
sbb
xor
jae
add
sub
pop
cwtl
sahf
cmp
test
sbb
inc
imul
or
out
pusha
rcr
mov
ret
sub
cmp
adc
pop
mov
mov
pop
cmp
push
cmp
and
jmp
mov
push
int3
in
push
cld
outsl
repnz
sbb
push
xor
or
dec
fs
sahf
hlt
or
aas
fbld
xchg
sub
sub
orb
ds
add
shrl
jns
jno,pt
shll
fdivrl
sub
call
out
ret
mov
mov
pop
insl
lds
jecxz
in
or
popa
xlat
stc
out
outsb
les
jge
imul
mov
test
add
ljmp
lahf
repz
sbbl
bound
and
xchg
lret
inc
pushf
rcpps
pop
lcall
leave
mov
ret
je
push
sti
mov
sbb
outsl
or
hlt
cs
and
imulb
cmp
in
inc
xchg
jne
popa
jle
mov
and
das
add
shll
popl
jo
ror
test
cmc
loope
les
sahf
icebp
mov
add
sub
test
sahf
cmp
insl
xor
arpl
mov
push
or
sub
stos
mov
imul
shl
push
loopne
js
lret
sahf
lret
negb
test
sahf
jg
leave
mov
and
xchg
sub
negb
mov
call
mov
sub
aas
jle
insl
insl
fld
push
jge
mov
add
data16
inc
clc
enter
add
sub
cmpsl
jg
out
lret
mov
and
cmp
pop
int3
sub
mov
mov
repz
mov
out
lea
jge
out
mov
xchg
loop
and
ffree
add
xchg
mov
divl
push
mov
mov
sbb
in
std
out
subb
rcll
rcrl
adc
sahf
sbb
insl
pop
mov
xor
scas
rcll
dec
dec
and
xor
xchg
or
loope
test
fsubl
stos
mov
outsl
push
cltd
in
xlat
cmp
push
test
push
scas
fwait
mov
jmp
subl
popa
lret
mov
imul
sub
push
and
push
adc
sub
push
jns
cmc
std
inc
ds
or
mov
adc
xchg
clc
inc
in
fwait
mov
jns
iret
mov
sti
shrb
loop
jecxz
dec
int3
jmp
loopne
or
imul
into
dec
cmp
inc
xor
xor
outsl
xchg
mov
ljmp
lods
push
sub
mov
xchg
xchg
xchg
je
int3
adc
dec
ja
fistpll
jne
xchg
xchg
call
push
jl
loopne
or
and
sub
int
cmp
icebp
sub
into
inc
pop
jns
sub
in
repz
fcmovne
cwtl
dec
rcll
aam
mov
sarl
adc
mov
popa
gs
in
xchg
or
inc
jns
into
js
xor
jp
loope
and
xchg
out
daa
jnp
mov
fwait
sbb
ja
pop
jae
pcmpeqb
lret
jbe
pop
xor
in
in
pop
imul
pop
outsb
dec
dec
fisttps
mov
sbb
pop
jns
jae
sbb
mov
cs
addb
mov
clc
andl
adc
pushf
jle
adc
mov
fwait
push
sbb
mov
repz
mov
leave
dec
push
xchg
pushf
jno
cmp
sub
div
push
shrb
pop
dec
sbb
mov
pop
fisttps
js
rcll
or
test
into
das
and
int
in
dec
sbb
cli
jg
test
sbb
cli
sarl
fbstp
push
clc
cmpsl
dec
xor
inc
push
xchg
sub
add
je
in
orl
and
inc
push
popf
and
push
sub
rol
orb
insb
mov
push
pusha
xchg
fs
cmp
test
mov
mov
rclb
inc
movsl
imul
jl
stos
mov
push
andl
and
and
dec
dec
add
inc
movswl
mov
pushf
enter
push
fwait
add
addr16
das
addr16
sub
in
cmpsl
jge
dec
add
cmc
leave
ljmp
cs
sbb
and
cmp
movsb
push
out
out
imul
mov
xchg
outsb
xchg
and
insl
xchg
xlat
sub
bound
ds
outsl
jo
pusha
mov
incw
jns
inc
test
pop
imul
or
cli
adc
jns
xor
cmp
jle
cmpsb
cmpsb
and
gs
push
shrl
imul
xchg
and
lods
mov
andl
sub
pusha
pop
pop
lcall
xchg
jl
fiadds
sub
test
mov
adcb
divb
xor
inc
and
and
lods
cwtl
out
xor
mov
sub
mov
mov
les
lds
jno
and
daa
lods
mov
sahf
sub
stc
dec
lea
iret
add
pop
push
pusha
and
pusha
orb
dec
dec
jbe
cmpb
mov
xchg
mov
sbb
add
adc
and
inc
mov
mov
xor
sbb
cltd
insl
xchg
mov
loope
ss
sbb
dec
scas
rorb
and
dec
push
shlb
cmpl
xor
jbe
test
movsb
mov
dec
cmpb
stos
fcoms
adc
movsb
bound
or
jbe
sbb
fildl
es
xchg
fisttpl
or
loope
and
jecxz
sub
mov
enter
cmp
stc
ds
sub
xchg
sub
sbb
cmp
push
lret
std
je
cwtl
mov
data16
fildl
hlt
ret
mov
xor
repnz
inc
cmp
gs
lea
sbb
sub
mov
in
and
add
mov
mov
out
outsb
in
fimuls
aaa
pop
pop
jnp
mov
hlt
insl
mov
repz
inc
incb
mov
pop
ret
lds
dec
jb
inc
pop
mov
shl
ljmp
cwtl
mov
jno
fnstenv
loope
inc
add
mov
cwtl
xorb
or
lock
leave
jmp
fwait
ret
xor
xlat
sub
bnd
push
sahf
cwtl
sub
es
push
shrl
mov
loop
fwait
xchg
xor
ficomps
dec
es
xor
cmc
ret
add
ljmp
inc
mov
aad
sub
pop
scas
mov
adc
ljmp
sbb
sub
leave
adc
push
mov
adc
inc
outsb
and
add
add
mov
popa
cwtl
repz
jno
icebp
out
push
shr
push
dec
inc
inc
cmp
lock
xchg
int3
mov
test
sti
mov
add
xchg
mov
push
dec
add
test
pop
pop
sarb
inc
mov
int
xchg
add
arpl
mov
push
or
or
arpl
inc
push
je
in
xor
mov
mov
sub
aas
mov
push
call
repz
pushf
divl
mov
pop
mov
je
cmpsl
xchg
iret
popf
xor
hlt
push
xchg
jb
iret
bound
cmp
pop
pusha
dec
mov
in
lock
mov
dec
cmpl
lods
mov
cmp
clc
popa
lea
sahf
xchg
sbb
push
dec
in
mov
dec
pop
shld
mov
test
jecxz
test
fldpi
jmp
sbb
cmp
data16
out
sbb
sub
sbb
aas
scas
es
add
pop
nop
mov
xchg
mov
sub
or
push
fcoms
mov
sub
adc
pop
stos
out
sbb
push
jae
xchg
daa
sbb
dec
push
flds
repnz
push
add
mov
pop
mov
xor
inc
and
rolb
adc
xchg
loop
inc
jmp
adc
mov
jbe
cmp
pop
xchg
cmp
xchg
fldcw
jmp
mov
pop
ds
push
lret
std
jne
jno
mov
loopne
inc
xor
loop
pop
shr
sub
xchg
xchg
sub
jp
fcompl
push
movhps
daa
insl
xchg
test
xchg
pop
fdivr
add
sbbb
andl
mov
push
ja
sbb
sub
mov
mov
inc
pop
adc
inc
ss
pop
xchg
movsl
and
jge
movsl
mov
mov
lret
adc
or
call
gs
clc
push
notl
add
ds
lret
pusha
jecxz
pop
push
cmp
pop
mov
cmp
pop
outsl
xchg
dec
scas
es
outsl
jb
ret
rolb
fidivrs
inc
ret
cmp
lahf
lret
aaa
les
mov
stos
enter
xchg
xor
jecxz
push
lods
lret
jecxz
adc
in
mov
mov
xlat
test
test
mov
push
jae
es
aam
pop
inc
insb
ja
ljmp
or
xor
cmp
in
repz
inc
push
dec
sub
mov
call
xor
sub
push
movsb
fnsave
xor
mov
imul
push
adc
xlat
mulb
pop
repz
and
std
xchg
jbe
in
imul
add
sarl
test
jle
adc
inc
rolb
pop
orl
or
push
cli
dec
sbb
in
sbb
popf
push
shll
xor
cmpsl
mov
popa
popf
cli
push
jo
fyl2xp1
in
nop
sahf
inc
cwtl
dec
in
in
cmp
adc
adc
sub
shll
sbb
and
dec
mov
xchg
fcoms
sbb
mov
jbe
mov
or
lea
lods
addr16
add
cmp
dec
je
insb
icebp
dec
test
mov
or
pop
test
and
xchg
and
sub
cli
outsb
and
sub
sub
adc
and
dec
popf
bound
cli
out
mov
dec
push
mov
into
cmp
in
mov
pop
xchg
and
cmp
mov
or
adc
popa
cli
call
ljmp
mov
fildl
int3
or
lahf
fwait
subb
lods
fstl
imul
jns
xchg
or
dec
sti
mov
pop
subl
mov
add
aam
xor
cmpsl
outsl
pop
push
adc
push
sbb
popa
rorb
xchg
subb
cli
jg
add
ror
addl
mov
inc
adc
xchg
mov
or
enter
mov
inc
shr
mov
pop
enter
out
fisubl
out
iret
mov
clc
cmc
adc
adc
cli
and
mov
les
push
fnstsw
add
inc
test
sbb
xor
push
jp
js
mov
adc
fs
js
xor
mov
sbb
ja
test
mov
inc
int3
cmpsl
es
cli
xchg
sahf
cltd
inc
mov
jo
xlat
and
lods
push
shrl
add
mov
imull
push
aad
cmp
push
in
mov
xchg
mov
notl
les
aas
loopne
insl
push
push
lods
xchg
rcl
mov
aad
ftst
movsl
lcall
int3
mov
fwait
aad
rcrb
clc
lods
jge
dec
sub
or
or
jecxz
mov
pop
in
stos
cmp
insl
sbb
xorl
rol
je
xlat
aam
add
mov
dec
icebp
xor
mov
divl
enter
fdivs
fdivrl
xor
mov
or
lods
jl
stos
xor
or
das
fisttpl
in
pushf
sbb
out
cmpsb
loopne
xor
mov
out
push
stos
addr16
cli
add
jb
jne
jbe
pushw
out
xor
loope
cmp
lea
and
and
out
jno
out
push
cmp
test
adc
add
hlt
xchg
ljmp
inc
xor
or
cmp
stc
pusha
sbb
push
xchg
mov
or
rcl
aaa
mov
pop
outsb
movlps
mov
cmp
movsb
mov
jnp
mov
idiv
lds
stos
arpl
xor
xchg
sbb
adc
mov
add
mov
push
data16
jns
ret
and
push
popf
xchg
aam
dec
stos
dec
and
ficoms
dec
mov
adc
sub
lock
sub
sub
mov
out
cld
cltd
dec
mov
cli
jne
mov
add
xchg
in
or
mov
inc
mov
in
dec
iret
lods
stos
inc
jne
or
pop
inc
pop
dec
sub
pop
inc
pop
mov
bound
loop
push
stos
add
push
lret
push
loopne
cli
sbb
insl
aas
andl
rcl
pusha
jae
and
loop
and
addr16
xchg
int3
add
mov
pop
enter
sub
stos
ljmp
inc
iret
jecxz
inc
and
loop
xchg
popa
and
test
ficoms
sbb
int3
xor
out
sub
hlt
or
pop
jle
mov
adc
js
mov
pusha
test
int3
push
cmpsl
xchg
cmpsb
pop
inc
imul
adc
or
popa
repz
gs
push
std
jb
shr
add
mov
cmpb
pop
leave
cmpsl
or
stos
mov
mov
pop
cmpsb
mov
andb
scas
popa
push
shl
loope
dec
xor
mov
enter
jo
insl
xchg
mov
mov
cmp
cmp
into
sti
dec
adc
ret
subl
icebp
pusha
lret
xchg
sbbl
sbb
lock
rcrb
repz
mov
xchg
add
ljmp
mov
int
inc
aad
dec
mov
jo
pushf
clc
xchg
inc
xor
or
int
pop
and
call
data16
popa
xchg
popa
sub
repnz
lcall
cmp
xchg
in
push
xchg
and
cld
jg
sbb
add
xchg
sbb
mov
jno
lret
sub
sub
cmpsl
into
shlb
pop
inc
mull
sbb
xchg
neg
dec
pop
addr16
xorb
pop
ret
xchg
lock
xchg
xchg
xchg
jns
jge
in
dec
sahf
inc
mov
sub
aad
and
and
mov
mov
jne
adc
leave
fwait
and
pop
add
lods
aam
xor
popaw
enter
xchg
push
ja
mov
jmp
mov
dec
sbbb
sub
push
fs
out
out
or
mov
das
fwait
pop
popf
in
xor
and
jl
adcb
aas
repnz
mov
pop
jge
dec
xchg
rcl
sbb
repnz
aam
scas
cmc
mov
inc
cwtl
cs
int
xchg
stos
mov
inc
lea
mov
jmp
xchg
outsb
aad
ds
in
aam
push
cmpl
mov
push
test
dec
sbb
stc
or
cwtl
xlat
std
sub
cld
inc
push
filds
mov
insl
sub
testb
or
pop
nop
push
adc
or
ficoml
mov
repnz
pop
mov
mov
les
mov
jno
add
data16
inc
and
jle
lods
mov
fildll
push
xchg
ds
sub
inc
mov
mov
rol
xchg
xchg
mov
or
mov
dec
mov
out
int
jge
aas
adc
out
lcall
jmp
out
add
mov
out
xlat
inc
push
aaa
cli
cmpsb
js
jecxz
cmp
cmp
lahf
enter
out
into
mov
adc
dec
mov
je
sub
hlt
push
pushf
jg
enter
out
xor
cli
popa
pop
push
or
adc
stos
sbb
pop
and
pop
and
jmp
jbe
push
mov
cli
call
loopne
aaa
or
ss
fldt
decb
nop
cmpsl
psraw
mov
mov
mov
xchg
sbb
scas
lea
sbb
sbb
add
mov
mov
cmp
mov
cmp
lcall
pop
sub
push
movsl
lds
xor
arpl
das
pop
shll
sub
out
jl
aam
sub
adc
sub
dec
jecxz
notb
jp
push
rcr
fnsave
dec
xchg
xchg
enter
inc
stos
inc
int3
sarb
int3
push
in
jge
out
lret
sti
ds
cmp
push
xor
stos
adc
imul
sbb
fnstenv
fsubs
jecxz
adc
fidivs
movsb
mov
mov
sbb
sub
pop
cmp
xchg
ret
pop
cmp
xchg
ss
into
add
push
push
mov
mov
rep
sarl
lret
in
cmpsl
repz
xchg
les
jmp
int
into
lock
pushf
mov
andb
cmp
sbb
dec
das
iret
cmp
cmp
in
xor
ret
dec
js
inc
dec
movsl
push
lods
push
lods
ds
adc
addb
aaa
fsubrp
pop
out
in
jbe
mov
push
mov
lds
xchg
ss
fcmovnbe
lea
test
dec
push
sarl
sub
pop
mov
cltd
lds
sub
loope
aad
mov
inc
hlt
xchg
sub
mov
xchg
jmp
pusha
imul
sub
pusha
or
fstpt
sub
fildll
cli
adc
scas
outsl
das
push
frstor
das
push
jb
add
sub
mov
push
outsl
or
dec
jle
divl
dec
pop
mov
or
xchg
neg
out
or
xor
push
andb
icebp
cmpsl
push
mov
inc
subb
in
push
push
andl
pop
or
aas
or
icebp
repnz
cmpsb
xchg
loope
ret
dec
cmpl
sbbl
and
ret
fistpl
daa
ljmp
popa
sbb
rcrb
mov
cmp
xlat
daa
add
ja
sti
push
call
leave
xlat
xlat
ret
daa
push
inc
lcall
test
leave
lret
jae
xor
and
cmp
flds
jecxz
scas
dec
hlt
xchg
test
fs
cmpsb
jb
mov
push
mov
fucomip
push
pop
pop
fcmovnbe
into
mov
fldl
and
stos
inc
sahf
pop
push
aam
push
repz
hlt
mov
test
out
push
mov
aam
cmpsl
and
jo
and
jns
test
movsb
sahf
pushf
shrl
dec
inc
imul
push
cmp
xchg
fbstp
mov
test
xchg
cmpsb
xor
stc
adc
pop
xor
push
fdivs
fidivs
imul
sti
sbb
orb
rcrl
ret
lret
push
push
fwait
pop
mov
mov
lods
mulb
push
push
in
jb
hlt
ja
jnp
or
push
push
adc
adc
or
push
andb
repnz
mov
shl
fidivs
out
add
js
imul
or
mov
sbb
loope
sbb
out
cmp
mov
mov
fnstsw
jae
cmpsb
sub
cmp
popa
push
fstpl
nop
rorb
xor
jl
stos
adc
ret
bound
mov
mov
jmp
test
ljmp
stc
test
lret
add
mov
mov
mov
cmc
incb
rorb
add
add
xor
test
lret
pop
in
in
add
inc
push
es
adc
stos
push
stos
scas
pusha
push
xchg
dec
and
inc
mov
nop
ljmp
test
add
sub
fsubs
and
sub
cmpb
jl
and
xor
loopne
or
jno
mov
add
and
mov
lret
data16
inc
push
arpl
pop
inc
lods
mov
and
nop
out
xchg
call
xor
movsl
out
add
nop
jp
loopne
pusha
inc
pop
push
test
popa
push
ljmp
cmp
movsl
shll
das
jne
shrb
push
popa
aam
xlat
lods
das
jb
push
push
out
lret
scas
sub
loope
pop
jbe
cmc
push
xor
adc
or
or
stc
xchg
lahf
pop
cmpsl
add
push
in
out
rclb
jne
mov
mov
mov
pop
push
out
pusha
imul
sarl
in
sti
jmp
push
and
clc
sub
jno
das
mov
jle
lds
lock
jns
push
pop
mov
xor
icebp
out
imul
out
je
mov
je
xor
dec
icebp
or
es
lret
fisubrl
pop
aad
repnz
pop
hlt
andl
testb
cs
sub
mov
gs
cmp
aam
pop
sahf
pop
scas
jae
scas
es
mov
std
mov
xor
rcrl
pop
ds
in
fs
fwait
decl
cmp
jp
pop
loopne
mov
into
fsts
mov
adc
fildl
jecxz
inc
mov
mov
xchg
pop
aad
sub
xchg
mov
pmaxub
imul
jecxz
inc
aas
sub
fwait
adc
add
mov
inc
and
lods
movmskps
rcl
or
push
pop
lret
mov
push
or
mov
sti
arpl
xor
push
cmpsb
and
daa
mov
cmc
lret
jne
test
rcrb
cmp
pop
scas
adcl
es
in
ds
jo
dec
mov
inc
into
addr16
ljmp
iret
push
outsl
cmp
mov
icebp
addr16
mov
iret
ja
push
or
scas
fdivl
out
pop
stos
int
ja
das
pop
mov
xlat
outsb
inc
pop
dec
jae
pop
push
cmp
xchg
pop
outsl
cmp
xchg
push
ret
xlat
cmpsl
mov
or
lea
add
je
mov
or
stc
ds
cmc
lahf
std
or
jne
outsl
fdivrs
es
out
dec
loop
sub
cmpb
faddp
dec
testl
jmp
lock
cmp
cmp
imul
adc
push
fnstsw
repnz
aam
sbb
test
add
sub
xchg
es
xchg
or
test
fsts
xchg
shr
sti
pop
jae
or
and
dec
or
mov
fsubrs
mov
out
fsts
cmc
movsl
scas
cmp
adc
dec
sbb
cmp
or
repnz
out
mov
mov
ret
cs
inc
fdivp
mov
push
cltd
in
cltd
dec
xchg
js
ret
aam
arpl
jno
test
and
fs
sbb
pop
dec
pop
lea
fbstp
cmpsl
lods
pop
push
imul
xor
leave
push
les
push
pop
idivl
add
sub
adc
mov
test
mov
and
hlt
or
sbb
imul
dec
ds
outsb
lahf
into
pop
cs
das
mov
cmp
aas
cmp
fistpll
insl
sub
mov
dec
scas
in
fstpl
jp
cltd
test
dec
push
aas
push
xchg
push
les
and
std
add
es
rcll
test
sbb
mov
nop
fmul
hlt
xchg
je
xor
add
adc
sbb
insl
cmp
sbb
aad
sub
cmp
xchg
or
xor
mov
pop
ja
stos
or
mov
aas
mov
dec
sbb
xchg
jle
shl
or
imul
add
sub
stos
add
ret
add
inc
xchg
ficoml
push
js
xchg
jns
insl
xchg
jbe
fstl
loope
lcall
in
int3
movl
dec
inc
fildl
clc
dec
pop
inc
stc
pop
popa
sub
rclb
pop
xor
lock
shll
loop
mov
pop
pop
in
jp
pusha
scas
add
push
lret
loopne
ss
mov
or
div
push
jne
or
lds
inc
cli
shlb
sub
rorl
cmp
aad
push
les
mov
mov
mov
mov
std
aas
scas
arpl
mov
lahf
addr16
sub
pop
fucomip
and
ds
fwait
insb
pop
ljmp
push
mov
and
nop
movsb
xor
fwait
mov
dec
add
adc
lret
push
repnz
call
stos
mov
or
sahf
inc
loopne
jb
pop
inc
dec
ss
imul
sub
push
or
inc
popa
push
fstpt
push
movsl
adc
hlt
es
mov
bound
inc
in
xlat
or
push
xchg
mov
mov
cmp
std
push
mov
movzbl
fsubrs
cmp
or
sub
push
push
jmp
add
fisubs
xchg
push
push
lods
inc
push
pushf
dec
aad
ficompl
stc
cmp
xchg
repnz
add
mov
dec
add
popa
mov
mov
xchg
xchg
xchg
mov
test
out
cmp
lret
pop
out
fwait
scas
mov
dec
or
andb
test
adcb
test
hlt
mov
call
mov
fidivrl
push
cld
ja
std
inc
dec
xor
push
shr
push
and
sbb
sub
and
xchg
arpl
loopne
imul
mov
lcall
out
fnstenv
mov
xchg
xor
jo
or
adc
push
test
dec
push
sarb
bound
mov
rcll
das
divb
sti
inc
mov
pop
out
rcl
dec
cmp
jl
jb
pop
ret
mov
sahf
add
ja
and
loop
sub
xlat
sbb
jb
clc
enter
and
dec
mov
add
fmuls
nop
sub
mov
call
xchg
xor
cli
mov
aam
filds
in
hlt
dec
sbb
mov
cwtl
bound
add
