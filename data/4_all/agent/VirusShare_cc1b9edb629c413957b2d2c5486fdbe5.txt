mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
push
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
fists
fidivrl
fcompl
pushl
and
jae
mov
mov
fldl
inc
adc
faddl
repnz
outsl
repz
mov
pop
data16
cs
cli
das
mov
ja
mov
adc
xchg
inc
sub
jmp
das
and
lret
cmpsl
dec
lock
iret
cs
imul
push
cmpsl
icebp
mov
push
adc
rcrl
sahf
cmp
out
icebp
scas
outsb
pop
cmc
pop
push
push
mov
xlat
inc
pop
push
xlat
add
mov
mov
fstpl
xor
lcall
dec
and
xchg
and
pushw
push
xor
ret
repnz
jne
jmp
sub
mov
iret
push
fsubrs
mov
fwait
movsl
mov
sbb
push
pop
sub
stc
jno
mov
scas
or
aas
add
adc
xchg
pop
popa
inc
outsb
or
filds
je
sbb
call
cmc
xchg
int
mov
call
fidivrs
pop
or
and
into
pop
xor
pop
sbb
add
lret
fmuls
xorl
sub
sbb
jmp
cmp
adc
out
cmp
jle
in
jo
sub
sahf
aam
sub
imul
jno
cmp
push
into
xor
icebp
pop
mov
xor
jo
sub
in
jecxz
xchg
insl
cmp
mov
pop
mov
gs
insb
sbb
bound
sub
pop
fcom
adcl
outsb
or
push
jb
loope
cmc
mov
hlt
cmp
dec
outsl
push
jg
test
fildll
inc
push
gs
int
mov
lret
aas
sti
mov
jbe
aas
test
test
push
jae
cmp
lea
or
pop
pop
int3
out
xor
popf
inc
jnp
shrl
lods
xchg
add
cwtl
xor
ds
dec
notb
push
inc
and
and
dec
pop
in
data16
mov
cmpsb
dec
jg
int3
pop
jmp
divb
cmp
lock
pop
or
adc
mov
mov
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
fists
fidivrl
fcompl
pushl
and
jae
mov
mov
fldl
inc
adc
faddl
repnz
outsl
repz
mov
pop
data16
cs
cli
das
mov
ja
mov
adc
xchg
inc
sub
jmp
das
and
lret
cmpsl
dec
lock
iret
cs
imul
push
cmpsl
icebp
mov
push
adc
rcrl
sahf
cmp
out
icebp
scas
outsb
pop
cmc
pop
push
push
mov
xlat
inc
pop
push
xlat
add
mov
mov
fstpl
xor
lcall
dec
and
xchg
and
pushw
push
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
fists
fidivrl
fcompl
pushl
and
jae
mov
mov
fldl
inc
adc
faddl
repnz
outsl
repz
mov
pop
data16
cs
cli
das
mov
ja
mov
adc
xchg
inc
sub
jmp
das
and
lret
cmpsl
dec
lock
iret
cs
imul
push
cmpsl
icebp
mov
push
adc
rcrl
sahf
cmp
out
icebp
scas
outsb
pop
cmc
pop
push
push
mov
xlat
inc
pop
push
xlat
add
mov
mov
fstpl
xor
lcall
dec
and
xchg
and
pushw
push
xor
ret
repnz
jne
jmp
sub
mov
iret
push
fsubrs
mov
fwait
movsl
mov
sbb
push
pop
sub
stc
jno
mov
scas
or
aas
add
adc
xchg
pop
popa
inc
outsb
or
filds
je
sbb
call
cmc
xchg
int
mov
call
fidivrs
pop
or
and
into
pop
xor
pop
sbb
add
lret
fmuls
xorl
sub
sbb
jmp
cmp
adc
out
cmp
jle
in
jo
sub
sahf
aam
sub
imul
jno
cmp
push
into
xor
icebp
pop
mov
xor
jo
sub
in
jecxz
xchg
insl
cmp
mov
pop
mov
gs
insb
sbb
bound
sub
pop
fcom
adcl
outsb
or
push
jb
loope
cmc
mov
hlt
cmp
dec
outsl
push
jg
test
fildll
inc
push
gs
int
mov
lret
aas
sti
mov
jbe
aas
test
test
push
jae
cmp
lea
or
pop
pop
int3
out
xor
popf
inc
jnp
shrl
lods
xchg
add
cwtl
xor
ds
dec
notb
push
inc
and
and
dec
pop
in
data16
mov
cmpsb
dec
jg
int3
pop
jmp
divb
cmp
lock
pop
or
adc
mov
mov
sub
adc
or
aam
cmp
adc
add
xor
test
mov
inc
inc
add
cmp
sbb
inc
lock
pop
pusha
dec
jle
inc
scas
sahf
ret
repnz
push
push
pop
xchg
test
and
xor
mov
stc
mov
add
push
cltd
cmp
das
adc
cli
lret
xchg
out
hlt
mov
push
dec
push
add
ds
sub
sub
pop
and
ds
call
int
mov
outsb
cmpsb
daa
repz
aad
add
ljmp
pop
icebp
dec
mov
jnp
lods
mov
push
inc
movsl
fucomp
out
pop
popa
insl
into
mov
push
dec
mov
sbb
or
out
sub
sti
outsl
push
stos
bound
aam
mov
cmp
out
test
arpl
fwait
in
jmp
pop
insb
dec
push
popf
jecxz
std
scas
cmp
add
arpl
push
cs
and
sbb
sbb
ror
dec
or
mov
inc
xor
push
les
insl
pop
jmp
les
mov
push
mov
jmp
push
push
push
lcall
fidivrl
hlt
lret
lea
ret
in
flds
test
push
push
mov
and
test
mov
shrb
jo
lret
int
push
mov
and
push
cmp
push
cmp
addr16
int
fildll
addr16
xor
out
mov
adc
cmc
dec
xor
inc
inc
inc
push
adc
cmp
pop
mov
xchg
push
or
int3
les
push
lods
jo
jmp
lcall
inc
std
cli
sti
xor
inc
add
aas
pop
pop
inc
dec
adc
mov
adc
test
jmp
mov
shlb
shl
sub
xor
lcall
inc
leave
fisttpll
jl
mov
clc
mov
pusha
dec
or
and
cs
add
lcall
mov
cmpsl
fucomip
and
lahf
adc
sbb
cmpsl
jg
je
jb
mov
sbb
aaa
mov
xchg
cmp
cwtl
pop
jnp
jbe
jno
pop
stos
or
pop
jmp
dec
or
xchg
dec
popf
adc
mov
jo
pop
mov
shlb
inc
jne
cmp
jae
rorl
out
xor
or
int
sub
xchg
jmp
fsub
and
out
mov
imul
loop
cmp
test
xchg
pop
dec
jecxz
push
out
inc
add
dec
xchg
jno
out
fs
cld
cmpsl
data16
lret
xchg
push
fdivs
or
adc
ljmp
sub
addr16
sub
xchg
mov
in
mov
bound
mov
or
bnd
fwait
lret
sbb
sbb
aad
xchg
xchg
and
jg
ljmp
mov
or
movsb
stos
jle
cmpsb
or
repnz
xor
push
lcall
xchg
push
insb
sub
imul
mov
xchg
or
iret
pushf
xchg
push
and
mov
push
das
dec
in
add
mov
cmp
out
repnz
and
aaa
lret
adc
xchg
or
rcll
jns
dec
pop
adc
mov
test
push
cltd
dec
jge
xchg
imul
andb
pop
xor
pop
cmpsb
pop
nop
insl
push
xchg
mov
push
lret
in
mov
or
jmp
vlddqu
out
ficomps
inc
push
inc
mov
ss
mov
addb
popa
sub
in
and
dec
mov
imul
push
pop
pop
insl
cli
mov
test
lret
pushl
iret
test
stc
jg
xor
cwtl
rclb
in
jmp
push
lahf
mov
and
sub
or
loop
sub
pushf
jbe
mov
xchg
jl
jp
or
in
mov
push
fnstenv
sbb
faddl
lea
inc
sahf
add
jb
mov
leave
jb
nop
cwtl
mov
push
fidivl
xchg
sahf
rclb
adc
mov
mov
adc
xchg
ds
cmp
call
xlat
clc
aaa
sub
pop
and
mov
adc
cmp
cmp
leave
bound
sub
in
fsts
movsb
scas
stos
add
jno
lock
daa
xabort
mov
sbb
and
jns
icebp
mov
mov
mov
adc
dec
aam
cmp
mov
outsl
sbb
pop
inc
and
dec
mov
mov
xchg
push
mov
or
adc
add
dec
push
xchg
call
or
in
lods
lcall
out
test
fidivrl
push
pop
mov
out
adc
dec
adc
out
xor
or
mov
int
pop
nop
nop
aad
xchg
pop
in
mov
adc
xor
xchg
bound
cmc
call
mov
inc
aaa
adc
dec
iret
sub
icebp
scas
movsb
imul
in
insl
jecxz
test
sbb
add
rcll
mov
aas
cli
dec
imul
add
sarl
mov
jl
popa
cmp
sbb
movsl
aaa
inc
cmp
add
loopne
dec
add
in
xchg
shr
push
fidivl
pop
add
sbb
cmpsb
loopne
ss
data16
sub
mov
loope
dec
pop
jmp
mov
insl
sub
movsl
hlt
mov
cmc
mov
jle
scas
psrlq
loopne
sub
dec
pop
jbe
test
neg
mov
andb
fadds
lahf
dec
mov
aaa
out
mov
sub
repz
std
add
dec
lahf
jae
bound
push
div
adc
add
imul
sub
and
icebp
les
ja
jo
aam
in
stos
mov
mov
test
mov
mov
push
shrb
mov
mov
or
xorb
cmc
nop
push
inc
push
xlat
in
mov
lock
dec
dec
sub
test
mov
xor
jge
icebp
ss
in
in
or
mov
cmp
push
addr16
lret
out
mov
test
mov
lods
int3
lcall
xor
add
negl
pop
cmp
addl
popf
sbb
aad
call
jnp
cs
inc
aaa
lds
add
imul
xchg
and
outsl
test
lods
pop
popl
je
outsb
jb
and
popf
jns
sarl
mov
sub
aaa
int3
out
sub
push
loope
out
xlat
mov
loop
push
adc
out
outsl
gs
mov
icebp
out
mov
icebp
test
pop
ret
pusha
and
lcall
movsl
cmp
imul
inc
and
pop
out
mov
sti
lock
daa
lock
sbb
jb
push
inc
inc
jge
pop
pop
xor
daa
xor
pop
incb
repnz
or
les
pop
push
add
icebp
or
addr16
mov
pop
movsl
cli
pop
mov
dec
sti
idivb
insb
test
mov
mov
add
sbbl
mov
insl
sbb
dec
xchg
mov
stos
inc
xchg
and
push
or
js
xchg
out
xchg
adc
xchg
pop
hlt
push
fsts
mov
xchg
aam
addr16
dec
mov
jmp
or
mov
fs
add
or
jnp
addr16
stos
push
int3
jno
cmp
jbe
fstl
daa
outsb
mov
pop
fs
movsl
jnp
sub
movsb
dec
push
dec
aad
mov
lock
ljmp
lods
inc
stos
add
xchg
js
movsl
xor
int3
push
stc
scas
or
push
cli
insb
inc
push
inc
jne
int3
push
stc
bound
xchg
dec
dec
daa
in
frstor
pop
jp
imul
dec
dec
js
fcmovb
jne
pop
dec
insb
push
fldenv
cmp
sbb
enter
jne
movsl
xchg
sub
mov
push
orb
sbb
pop
outsb
leave
cld
add
jb
or
int3
outsb
mov
sti
push
ds
pop
cmpsl
mov
fstpl
stc
aam
mov
cltd
aaa
pop
repnz
mov
into
out
push
adc
add
iret
dec
rcl
jae
sbb
jb
xor
adc
das
divl
scas
incb
outsl
dec
xor
mov
or
sbb
jl
mov
push
shl
pop
movb
scas
shrl
mov
pushf
gs
jle
shlb
js
inc
xchg
push
scas
roll
adc
mov
scas
fiaddl
mov
icebp
lahf
sbb
repz
sub
out
cltd
rorl
lods
sbb
xchg
mov
test
lds
jbe
lea
imul
dec
dec
jle
inc
lret
push
loop
cmpsl
rorl
jo
cmp
mov
in
pop
in
ljmp
or
inc
andb
pushl
adc
pushf
jns
xchg
mov
in
fstpl
add
scas
cltd
fwait
mov
ds
sbb
add
adc
and
dec
sbb
lods
xor
fcmovne
push
and
sar
or
icebp
inc
mov
movsb
dec
testb
xchg
clc
xor
inc
cmp
outsl
fcoml
iret
insl
call
jno
cmp
stos
loope
jp
jle
pushf
jbe
insb
das
movsb
push
cmp
insb
xor
sahf
pop
repnz
xchg
jmp
inc
decb
in
arpl
movl
aam
test
xchg
and
roll
adc
aam
mov
and
push
xor
add
inc
lcall
mov
cli
xor
es
aad
jle
or
test
in
inc
push
cld
fistpl
jbe
loop
fdivrs
out
xchg
lods
mov
daa
add
xor
xchg
loope
push
push
loope
sbb
push
ficoms
fs
and
mov
push
push
rcll
jb
xchg
jmp
fs
imul
faddl
fisttps
imul
pushf
push
data16
shrl
mov
mov
clc
aad
int
stos
cmp
movsl
cmp
pop
mov
pushf
or
lret
jl
push
dec
enter
and
test
out
push
cmp
jg
stos
adc
leave
adc
cmc
cmp
mov
in
in
xchg
xor
sbb
std
loop
adc
imul
stc
int
mov
popf
fwait
lods
mov
lret
pop
mov
jns
lods
inc
lock
scas
lods
andl
pop
xor
insl
in
mov
adc
sahf
or
jno
and
fistps
pop
jne
fdivrs
sbb
mov
fcomip
std
jmp
xor
dec
xor
xchg
mov
sub
ljmp
repnz
outsb
int
or
subl
ss
repz
fsubrl
insl
cmp
icebp
cld
push
inc
loop
dec
push
cmp
dec
pop
add
div
sub
scas
pop
jmp
mov
fmulp
inc
insl
int3
add
das
clc
rcl
xchg
add
and
push
cld
xchg
pop
mov
movsb
imul
iret
dec
outsb
loope
inc
xor
enter
jg
aad
lock
sub
jb
shl
push
or
scas
and
inc
dec
sbb
push
mov
sarl
arpl
xor
fchs
loope
mov
imul
cli
and
dec
sbb
adc
dec
adc
stos
sbb
pop
cmovs
es
out
or
jp
and
push
cs
jle
aam
cmp
adc
cmpb
adc
pop
or
test
cmpsl
sarb
clc
mov
inc
jecxz
lcall
sub
movsl
icebp
push
dec
cmp
lahf
test
inc
fwait
sub
scas
es
pop
cld
loop
mov
mov
test
pop
push
fcmovu
pop
shlb
mov
push
sub
imul
lock
or
out
lahf
cli
cmc
push
mov
sbb
or
iret
movsl
and
and
imul
mov
xor
add
cmp
dec
xor
xor
push
cltd
out
adc
push
std
and
int
mov
dec
data16
shrl
mov
mov
movsb
mov
jl
mov
pop
popa
cmp
dec
and
ja
sti
stos
dec
mov
pop
dec
ds
outsl
and
xor
pop
or
mov
xchg
or
xchg
sub
out
inc
mov
int
jne
pop
sub
push
lods
add
aad
sbb
pop
jae
gs
in
mov
outsb
pop
test
pop
cltd
xchg
cwtl
gs
loopne
sbb
fldt
xor
pop
xchg
xchg
aam
cmp
mov
xchg
pop
xchg
sti
mov
inc
jne
test
add
dec
mov
dec
sahf
mov
xchg
push
lret
dec
push
cmp
push
push
mov
xchg
sub
add
inc
mov
jnp
mov
add
fdivrl
jge
dec
insb
mov
stc
mov
out
inc
dec
xchg
mov
xchg
pop
fistps
fxch
and
negl
jmp
out
loope
bound
ss
inc
add
aaa
pushf
xor
outsl
out
inc
adc
or
pop
stos
sub
jne
push
leave
stos
xchg
jge
loope
sub
test
pusha
mov
pop
repnz
xor
sub
incl
insb
and
push
and
fs
daa
repnz
mov
cmp
test
insl
xchg
xor
jo
mov
adc
mov
aam
sbb
cmc
push
stc
pop
sbb
fldcw
outsl
das
lds
mov
std
mov
cmp
imul
jno
push
fcomps
test
xchg
loopne
cmc
or
enter
mov
lret
jne
shll
movsb
pop
jge
test
cmp
loopne
jmp
inc
mov
subl
inc
fstp
icebp
popa
push
xor
jno
lahf
shll
nop
sbb
or
nop
sarl
sub
ljmp
leave
mov
in
rcll
sbb
and
mov
jne
or
jg
fisubrs
and
inc
push
jne
xchg
je
push
mov
mov
daa
adc
shlb
xchg
fisubl
sbb
std
in
pop
int
rorb
loope
insb
pusha
test
mov
mov
lahf
mov
push
sub
xchg
test
cmpsl
pop
push
pusha
push
lods
aas
lret
out
mov
add
in
sub
inc
dec
and
add
xchg
inc
cmc
mov
mov
pop
cmp
cmp
xor
inc
push
hlt
test
mov
outsl
lods
flds
push
sub
cmp
jle
dec
jns
gs
mov
addr16
in
popf
lock
test
and
loope
adc
mov
push
jle
cmp
les
ljmp
sbb
imul
xorl
cmpsl
test
vorpd
in
inc
negl
jp
int3
xor
in
lahf
mov
inc
sbb
pop
adc
loope
aam
adc
push
mov
dec
outsl
adc
cmp
jo
pop
rcrb
mov
dec
and
and
xor
and
jge
scas
mov
lcall
cmp
stos
mov
pusha
cmp
xorb
push
iret
lods
pop
inc
inc
adc
mov
xor
aaa
in
pop
imul
or
cmp
mov
stos
into
sbb
mov
and
pop
xor
enter
cmpsb
xchg
jecxz
aas
dec
movl
enter
pop
lods
stc
mov
add
pop
and
jecxz
loopne
cld
pop
shr
out
xor
adc
cmp
inc
fwait
mov
and
fcmovbe
orb
xchg
push
sbb
fstps
add
in
popl
xor
mov
xor
push
add
mov
loope
cmpsb
popl
mov
mov
test
fsubs
jg
mov
xchg
xor
sbb
imul
cmp
cld
sahf
aaa
dec
mov
adc
jecxz
into
or
fildll
outsl
data16
int3
outsl
cmp
push
call
sbb
rcll
frstor
sub
sar
gs
rcr
xchg
fbld
xacquire
push
aad
inc
and
fucomi
and
orl
shrl
and
jno
mov
aad
xchg
popa
leave
shll
xchg
nop
xchg
pop
aaa
insb
arpl
jecxz
shll
sbb
movl
data16
mov
adc
je
fisttps
jno
inc
repz
pop
insb
sbb
push
mov
inc
sub
je
mov
jp
sub
bound
mov
cmp
sbb
mov
shlb
jb
push
out
sub
in
inc
sub
pop
lahf
filds
dec
mov
test
xchg
jmp
dec
xorb
xchg
movsb
or
and
dec
or
cmp
into
jmp
lds
and
fidivrl
mov
pop
nop
add
push
nop
sahf
je
sahf
lods
mov
mov
pop
iret
ja
and
test
xadd
mov
cli
or
jmp
stos
ret
cmpsl
stos
push
jnp
cmpsb
mov
adc
inc
loope
push
mov
sbb
loopne
jns
pop
outsb
std
scas
xor
jnp
inc
cltd
sbb
inc
inc
sarl
aas
mov
dec
sbb
jg
subl
or
lods
mov
jae
es
push
inc
imul
loop
fwait
ret
movsb
ret
cmc
add
mov
out
xchg
or
inc
xor
push
cmp
insb
lods
or
aam
mov
xchg
pop
lds
loop
jns
es
mov
imul
lret
xchg
adc
push
cli
out
loope
movsb
nop
leave
inc
aam
push
pushf
cmp
fwait
xor
push
and
inc
test
fsubrl
mov
xor
adc
push
jne
mov
dec
shl
cwtl
inc
in
jne
cs
dec
mov
sbb
mov
sbb
in
push
outsl
and
jns
push
stos
and
shlb
call
rorl
xorb
inc
sbb
xchg
pushf
mov
cli
jno
mov
in
ftst
inc
xor
imul
push
aad
cs
std
in
pop
iret
aas
rcrl
out
jae
add
lods
pop
adc
adc
jae
aad
sbb
ss
jg
push
dec
clc
test
out
jnp
jp
jns
jbe
mov
cmpl
cmp
repnz
lock
jg
in
mov
mov
jne
rolb
inc
mov
ja
xor
sub
or
les
cmp
cmp
dec
rcr
push
ret
test
xchg
mov
add
mov
int
pop
imul
push
sub
scas
hlt
push
fstpt
sub
aas
pop
cmpl
cwtl
sub
dec
adc
mov
out
out
and
test
sbb
movl
pop
stc
fildll
cmp
mov
dec
aad
xchg
jp
inc
cltd
shrl
js
sti
rclb
dec
sbb
addr16
xchg
xchg
xchg
mov
jno
pushf
je
es
ja
mov
jb
add
ret
sub
and
add
loope
lahf
stos
lods
mov
clc
dec
cmp
xlat
mov
out
imul
jmp
out
xor
jl
or
mov
dec
pop
add
jnp
in
jne
sub
push
in
jne
gs
enter
mov
into
and
xor
shll
xor
dec
mov
out
mov
cmpxchg
mov
int
movsb
add
cmp
es
mov
les
and
push
rorl
aas
loop
outsb
dec
movsl
or
push
int
test
mov
rcrb
jo
mov
mov
in
pop
test
in
nop
sarb
cmp
fstl
jae
jne
jns
jp
pushf
or
into
inc
lea
in
testb
or
insb
arpl
and
fcmovbe
testb
xor
cmp
daa
push
cmp
addr16
inc
cmp
and
mov
insl
sti
repnz
mov
aam
divl
scas
inc
cmp
std
cli
imul
inc
fistpl
arpl
int
mov
mov
pop
lcall
lods
je
dec
out
repz
mov
sarb
jns
lcall
sar
loope
xchg
push
xor
sbb
inc
adc
or
xchg
ljmp
cli
bound
pusha
scas
dec
test
fldenv
fdivl
cmp
dec
addr16
xchg
push
ljmp
mov
cltd
push
nop
xchg
mov
xchg
push
add
jg
add
mov
mov
es
ficomps
push
mov
mov
ja
subb
test
sbb
xchg
mov
and
fs
push
out
mov
inc
mov
pop
xchg
mov
mov
xor
xor
inc
ret
and
add
inc
xor
dec
sbb
sub
call
and
in
add
ret
idivb
movsl
jecxz
dec
outsl
mov
sub
movsl
mov
mov
imul
data16
in
cmp
mov
pop
cmp
push
cmpsl
mov
pop
xor
jmp
lea
inc
push
fimull
outsl
fistl
stos
loope
xchg
outsb
inc
add
test
ja
jle
jbe
or
mov
addr16
das
mov
mov
movlps
das
and
pop
subl
jge
jnp
nop
jne
add
gs
push
cmp
jns
pop
inc
dec
ret
lcall
and
mov
shlb
jbe
dec
mov
movsl
or
push
repz
adc
jae
nop
rolb
outsl
lock
jl
mov
pop
jge
xlat
mov
movsl
loopne
es
ret
stos
push
pop
std
ss
adc
xchg
add
outsl
fcomp
cli
inc
or
js
shll
stc
mov
jbe
push
data16
inc
jecxz
cmp
data16
or
pop
xchg
and
popf
xor
out
sub
clc
add
mov
inc
nop
jno
in
idivb
mov
cwtl
mov
pushf
leave
pop
in
aaa
cltd
clc
iret
cmp
xchg
mov
outsb
stos
call
mov
movsb
imul
adc
push
or
out
insl
jge
out
xor
ja
push
and
shrb
jnp
cs
aaa
and
jmp
data16
jp
sbb
adc
dec
xor
in
adc
fcomps
scas
add
or
sub
or
stos
sub
push
inc
fldl
sarl
pop
pop
mov
or
loope
jae
adc
push
lods
xchg
jae
cmpsl
inc
sub
rep
stos
out
or
adc
jno
and
mov
movsl
jbe
stc
sbb
inc
inc
int
mov
mov
lods
lods
icebp
ret
mov
insb
jp
adc
sub
loop
call
jo
testb
add
jecxz
dec
into
mov
sub
aaa
gs
daa
ss
add
nop
sub
adc
xor
mov
in
xchg
and
bound
lcall
outsl
pop
imulb
jno
sbb
outsb
push
test
xchg
test
daa
arpl
sub
inc
test
and
popa
inc
or
xorb
lret
shrl
movsl
or
repz
stos
aad
or
inc
pop
addr16
mov
adc
aas
inc
test
mov
inc
sub
jle
push
aas
xchg
shlb
hlt
or
enter
data16
adc
push
push
int
stos
rcll
add
mov
fcompl
jbe
sbb
pop
mov
in
add
es
jo
nop
sbb
movsl
leave
repz
call
movd
data16
sti
jg
xchg
js
ja
sub
adc
icebp
call
mov
loope
inc
mov
mov
sbb
pushw
mov
addb
cmp
test
rcl
dec
jg
popf
ds
cmc
jnp
mov
cwtl
mov
jecxz
sbb
lahf
mov
fidivrs
xor
mov
mov
shrl
mov
scas
sbb
inc
shlb
pusha
cld
pop
sub
lock
fs
test
jnp
aam
jae
xchg
lea
cltd
pop
push
inc
cmp
adc
dec
in
cmp
inc
adc
xchg
jae
sbbb
and
stc
loope
pop
mov
xchg
inc
imulb
enter
lock
or
jge
lea
inc
ljmp
adc
dec
test
pop
pop
mov
loopne
mov
jmp
hlt
xchg
fidivrl
lds
mov
cwtl
inc
mov
daa
fdivs
mov
es
hlt
and
iret
pop
lds
dec
out
add
mov
xchg
dec
add
push
sub
ret
xchg
jnp
add
jne
mov
mov
cmpsb
mov
popa
lods
mov
out
call
cmp
out
inc
mov
adc
sahf
sub
push
mov
addr16
or
stos
aas
xchg
dec
gs
int
mov
outsl
movsl
imul
mov
jge
arpl
divl
cmpl
pop
insl
mov
push
movsb
nop
cmp
dec
push
in
sub
cmp
arpl
mov
or
pop
cs
rorl
adc
shl
jge
stc
or
fdivs
pop
lret
add
andb
and
lea
popa
std
adc
cwtl
mov
inc
aad
inc
xlat
adc
add
cmp
jae
cmpsl
rcrl
mov
and
pop
dec
push
fwait
adc
loope
jg
fiadds
inc
jae
jne
insb
xchg
inc
sti
push
adc
aaa
fincstp
push
int3
stos
cld
lds
iret
sub
pop
loope
xchg
xchg
rorb
xchg
jecxz
cltd
loopne
pushf
sub
pop
jecxz
pop
mov
pop
inc
test
mov
mov
mov
cmp
push
cwtl
inc
int3
dec
adc
mov
pop
xchg
pop
jns
es
cmpsb
sub
pop
lahf
pop
sbb
jg
call
clc
adc
jecxz
lds
or
mov
stos
mov
in
fbld
jns
xchg
lcall
mov
sub
xor
or
aad
aas
insb
mov
mov
add
mov
or
frstor
das
jl
sbb
push
or
hlt
insb
iret
jg
movsl
or
jbe
les
pop
mov
pop
lea
jecxz
in
jae
pop
in
in
mov
out
xchg
jo
push
stos
stc
mov
jbe
dec
loope
jmp
loop
dec
add
xor
adc
xor
lock
sbb
or
push
or
test
sbb
push
mov
cmpsb
addl
ljmp
adc
xchg
inc
test
adc
lock
inc
jecxz
rol
pop
cmp
mov
fsubl
fimuls
aaa
jo
fiadds
out
pop
cmp
and
daa
sbb
pusha
dec
mov
popf
or
mov
dec
test
cmp
pop
scas
and
sub
pop
xor
ret
adc
xor
cli
push
inc
sarb
xchg
call
sbb
into
je
xchg
mov
xchg
sub
push
std
inc
popf
mov
pop
cs
fs
sub
mov
outsl
dec
mov
mov
aad
mov
pop
lea
sub
clc
push
daa
xchg
pop
ja
add
lods
inc
out
adc
sub
xchg
sbb
cmp
mov
add
imul
ret
rolb
push
pop
cmp
adc
mov
add
inc
sbb
and
or
cs
inc
jl
fcoms
jg
adc
int
stos
mov
jg
mov
inc
cmc
sbb
pop
mov
mov
sahf
enter
inc
repnz
aad
dec
push
pop
jno
dec
dec
mov
sub
mov
inc
ret
subb
mov
inc
ljmp
sub
addr16
add
mov
add
sub
mov
dec
push
xor
test
or
sbb
enter
lret
ret
cmp
push
mov
clc
jnp
into
loopne
pushf
xchg
movsl
xor
aad
out
or
and
xchg
push
mov
imul
pop
scas
subb
fcom
shll
push
cmpsl
je
inc
outsb
inc
mov
or
xor
fwait
pop
fsts
into
add
gs
mov
sbb
cmpsb
rcll
mov
mov
cmc
jno
jge
dec
aam
push
lods
loope
sbb
mov
jle
ds
stos
pop
cwtl
lods
popf
mov
addr16
ljmp
loopne
sub
movsl
or
stc
sbb
ror
dec
cmpsb
pop
notl
scas
out
mov
jge
sub
sub
jne
rcrb
push
scas
testl
or
lret
icebp
dec
std
fstl
aad
and
jmp
mov
dec
in
fwait
pmulhw
jno
jbe
gs
fstl
clc
push
cmp
or
in
xlat
or
push
into
add
inc
stos
aad
or
outsb
imul
dec
or
push
mov
sbb
in
cs
ss
jle
dec
ffree
enter
inc
xlat
lods
in
sbb
rcrb
push
ljmp
jge
pop
cs
adc
fisubrs
div
push
pusha
inc
stc
push
aaa
push
loope
lds
imul
pop
andb
sub
aad
repz
xchg
lods
cmc
cmp
add
jnp
mov
repz
add
pop
fwait
lds
mov
stc
push
in
rcll
add
inc
loope,pt
clc
or
pop
inc
imul
sub
and
mov
mov
mov
mov
movsb
inc
mov
add
shlb
xor
sbb
mov
mov
dec
lcall
push
cmp
idivb
and
lret
not
or
push
arpl
repnz
mov
fcoms
pop
je
bound
aas
fiadds
imul
and
lahf
xor
das
lret
js
lock
loope
ja
xor
arpl
in
or
xchg
mov
xor
and
arpl
and
dec
push
scas
cmp
xlat
or
test
mov
mov
dec
jmp
cmpsb
jl
stos
in
aas
loopne
push
aam
adc
daa
enter
jmp
imul
out
jns
and
outsl
ret
cmp
or
jp
cmp
and
push
mov
enter
sub
icebp
daa
jb
inc
push
mov
fwait
cmpsb
push
gs
ljmp
jmp
mov
adc
cmp
jae
ror
pop
jno
xchg
pop
push
and
ds
in
lock
ljmp
jmp
mov
addb
jl
pop
pop
cmc
in
add
add
inc
sbb
das
pop
xor
cwtl
hlt
inc
fwait
sub
push
js
setle
adc
jno
adc
or
inc
shrb
mov
test
hlt
xchg
daa
jmp
jne
imul
cmp
xchg
ret
rorl
je
in
adc
jns
lea
cmc
aam
inc
xchg
mov
bound
loopne
sub
and
out
loopne
dec
or
push
xchg
push
repz
lods
pop
and
pop
xchg
in
stc
arpl
mov
lahf
into
xchg
xchg
mov
dec
push
rcl
sti
inc
loope
xor
fcomps
into
push
add
xchg
mov
push
pop
popf
rclb
test
jmp
stos
jbe
sbb
or
js
cmc
in
xchg
push
pop
or
xchg
push
xor
jmp
test
push
pop
and
clc
mov
fsubl
mov
ss
and
cmpsb
fisubl
dec
pop
lret
add
sub
cmp
jmp
inc
stos
sub
imul
mov
inc
fnstsw
mov
insl
sbb
and
pop
fisttps
sti
scas
sbb
push
cmc
and
sub
jns
add
outsl
mov
lahf
mov
popa
dec
sub
inc
xchg
popa
fistpll
jge
push
gs
inc
in
and
imul
mov
iret
xchg
mov
jmp
rcll
lock
or
sahf
pop
push
hlt
inc
jnp
xchg
popa
stc
lods
ret
jnp
fs
mov
aam
xor
mov
subb
push
shlb
push
fistpl
jb
xor
repz
xchg
push
rorl
inc
adc
outsb
arpl
inc
ss
xorl
mov
add
cmpsb
int3
ss
push
inc
adc
pop
imul
test
cltd
loope
xchg
dec
cs
call
sbb
outsb
addr16
adc
int3
fucom
add
outsl
subb
dec
shrb
out
imul
push
push
inc
int3
div
fs
jbe
les
fsubp
es
aam
test
mov
dec
std
sub
mul
push
in
sbb
add
or
jo
mov
sub
fbld
inc
push
xchg
cmp
fdivrl
insl
mov
cltd
jmp
test
cwtl
pop
xor
pusha
es
inc
dec
enter
jmp
insb
sbb
fmul
fdivs
aam
leave
jns
rcl
pusha
in
inc
rcl
inc
sub
push
cld
pop
mov
movsb
add
int
lea
xchg
cmp
mov
dec
inc
sub
pop
jno
xchg
xchg
in
sahf
fnstenv
pop
xchg
std
lods
arpl
push
rcll
inc
pop
push
stos
loop
inc
jno
or
xchg
mov
mov
rcr
ret
lret
sbb
jmp
push
shlb
aas
js
in
and
pop
cmp
out
mov
pop
push
mov
fs
scas
sbb
mov
fnstsw
push
fmul
jmp
or
xchg
dec
incb
jmp
aad
xlat
out
push
das
adc
lahf
out
gs
push
out
nop
mov
and
xchg
pop
xor
push
mov
stos
icebp
mov
and
or
push
test
std
es
cmp
sub
bound
orl
pop
into
insl
adc
inc
mov
nop
lds
sbb
inc
imul
fmul
imul
clc
mov
arpl
add
ss
icebp
push
jo
loope
add
or
in
out
mov
or
adc
add
nop
push
imul
xor
push
xchg
adc
cs
scas
push
cmp
dec
std
xor
bound
inc
testl
push
adc
gs
or
and
push
lcall
cmc
mov
cmp
pop
hlt
or
pop
popa
addb
mov
mov
arpl
lods
push
lret
popf
lock
sub
lds
test
out
jae
lock
adc
out
lahf
mov
cltd
push
ret
inc
mov
jbe
dec
pop
mov
cmp
push
fwait
subb
leave
mov
dec
imul
out
sub
sarl
add
xor
roll
ja
push
inc
shlb
xor
out
jae
aam
xor
add
daa
cltd
fs
movsl
push
xor
sarb
scas
in
inc
arpl
stc
sub
out
xchg
mov
loopne
ja
addl
movsb
scas
and
mov
mov
jp
dec
in
lcall
and
nop
xor
mov
jbe
fistpll
shrl
or
outsl
cmp
mov
mov
fwait
jmp
leave
rorb
fcmove
sub
dec
push
push
or
sti
out
sahf
add
inc
outsb
push
lcall
ret
rclb
insl
jno
daa
xlat
and
push
es
mov
f2xm1
mov
aaa
or
adc
cmp
cmp
sub
dec
dec
loop
fs
fldcw
mov
fildl
add
mov
sbb
xchg
mov
das
mov
lret
or
sbb
and
adc
nop
mov
jmp
push
add
inc
xor
in
test
or
xchg
sbb
mov
adcl
push
mov
or
leave
sbb
push
and
ljmp
imul
inc
repz
incl
mov
hlt
ret
dec
mov
or
mov
fs
and
ficoms
adc
fdivrs
stos
push
cmp
mov
test
jmp
inc
fwait
dec
mov
push
daa
inc
leave
xchg
mov
or
stos
movsb
arpl
xor
adcb
mov
add
or
sar
inc
nop
cltd
dec
test
xchg
loopne
jl
sbb
divl
pop
roll
push
loop
mov
adc
mov
jns
movsb
lret
js
pop
repnz
movsb
jno
push
add
jo
orb
pop
adc
xor
stos
outsb
aas
dec
aam
dec
push
fimull
add
push
sbb
xor
sbb
xchg
loope
sub
aad
cmpsl
movb
sub
xchg
fistl
dec
enter
and
pop
push
pop
sub
mov
cmp
dec
insl
mov
jg
cmp
nop
decl
loope
loopne
mov
inc
cmp
jo
enter
dec
add
push
jb
jg
push
sub
inc
add
or
mov
cwtl
pop
out
xor
jecxz
rcrb
cmp
and
mov
ds
push
int
adc
mov
adc
dec
loop
insb
pushf
enter
mov
add
popa
ret
cmpsl
adc
out
movsb
loopne
or
mov
int3
push
nop
mov
sti
aad
xorl
cltd
mov
mov
fsubrl
cld
adc
mov
cmp
inc
push
rcrl
shlb
inc
push
mov
pop
outsb
jmp
jg
dec
hlt
cmpsl
pop
int3
or
mov
mov
sahf
jbe
jecxz
sahf
leave
fs
fistl
jbe
and
add
ffree
frstor
add
addb
loope
daa
mov
xchg
lods
mov
jle
lds
aam
push
mov
clc
ret
mov
xlat
loope
insl
sbb
mov
daa
test
stos
test
sub
jmp
movsl
mov
outsl
cltd
mov
jae
push
test
xchg
out
adc
cmp
inc
aaa
fdivr
stc
js
pop
mov
jnp
xchg
add
pusha
push
push
test
dec
mov
pop
dec
subb
std
ret
in
xor
adc
pop
add
push
sahf
cmp
ror
stc
dec
sbb
loopne
enter
in
neg
mov
xor
in
mov
pop
call
and
enter
mov
imul
push
fwait
adc
dec
cwtl
jo
aaa
adc
jne
push
and
movsl
scas
outsl
std
cmpsb
icebp
js
js
je
or
loope
pusha
repnz
xlat
xchg
push
dec
jae
sbbl
or
push
xor
mov
jmp
mov
xchg
lods
stos
dec
dec
cmp
xchg
cmp
lods
sub
scas
ja
mov
jmp
rcr
push
js
gs
push
es
dec
or
test
jle
rorb
pusha
cmp
adc
popa
pushf
pop
sbb
rorb
lock
pop
mov
idivb
cmp
in
sub
add
pusha
mov
mov
jmp
dec
dec
cltd
pop
mov
out
pushf
mov
sub
sbb
push
cmp
jge
jle
lea
push
xchg
pushf
xchg
out
inc
xor
aam
imul
inc
cmp
xor
enter
add
adc
xor
push
pop
test
add
push
and
mov
xor
cltd
fidivrl
lea
jg
fstps
jnp
fmull
mov
imul
xchg
imul
mov
pop
repnz
or
rcrl
jle
xchg
jno
in
cmp
fcoms
int
mov
loop
hlt
adc
loope
out
pushf
int3
std
inc
sbb
xor
or
jmp
ja
lock
add
jae
mov
dec
push
fsubs
ret
addr16
out
sar
or
clc
stos
mov
mov
cmpsb
aaa
push
pop
inc
outsl
pop
loopne
arpl
or
inc
push
jge
sub
shll
mov
aad
pop
shll
inc
inc
sbb
lret
pop
test
lret
popa
jb
jne
add
into
out
negl
jge
dec
mov
xchg
out
dec
call
mov
es
dec
xchg
sbb
mov
xor
pop
xor
sbb
cltd
mov
adc
jo
pop
jl
popf
cmpsl
cltd
repnz
dec
out
push
or
cmp
sub
les
out
shll
mov
push
cmpsl
pop
aas
in
fwait
cltd
popf
push
mov
test
daa
shrb
popf
out
fs
lret
add
test
ret
and
das
arpl
orb
imul
add
dec
mov
cmp
clc
rcrl
pushf
pop
ret
adc
mov
adc
push
ds
mov
xor
dec
lods
jo
das
daa
pop
mov
mov
xchg
xchg
push
enter
aaa
inc
xchg
or
shrb
jmp
in
dec
icebp
ds
and
push
sub
dec
adc
dec
lret
loope
xlat
cmp
pop
and
jecxz
xor
adc
in
pop
xor
arpl
dec
std
jns,pn
mov
call
aas
push
rorb
xor
std
cmp
data16
add
cltd
iret
aas
movsb
add
pop
pop
jmp
cltd
add
cmp
lock
hlt
es
push
in
in
cmp
inc
mov
mov
shlb
sti
mov
xchg
xchg
pop
ja
cmp
scas
fldl
mov
or
and
shll
into
mov
test
out
push
shl
sbb
movsl
imul
ret
int
pusha
mov
inc
and
in
jno
decl
lret
jne
imul
lcall
insl
inc
andl
dec
lea
xchg
add
add
push
test
mov
jge
popa
shrl
adc
imul
add
imul
fs
add
in
in
jbe
pop
push
test
and
icebp
jp
adc
int3
push
and
pop
out
fstpt
in
cltd
stos
out
sub
mov
inc
jecxz
mov
pushf
push
pop
xchg
test
or
xchg
enter
test
mov
int3
mov
xor
jle
sti
mov
iret
push
cmp
cmp
pop
cmp
sbb
int3
cli
lea
xor
add
hlt
mov
sub
rol
sub
pop
and
push
repnz
jecxz
pop
mov
fadd
jge
push
xchg
xor
jmp
mov
js
mov
jge
sub
add
mov
pop
jb
adcl
adc
sti
ret
jg
cmp
repz
and
push
rcll
imul
mov
or
fldl
pop
lea
mov
lret
pusha
push
fcomps
or
and
add
mov
jae
out
aas
daa
pop
enter
push
push
jb
arpl
stc
insl
xchg
fxch
mov
shl
and
fwait
sbb
rcrb
mov
cmpsb
les
dec
and
dec
fcmove
lods
push
fildll
fnstenv
mov
and
aad
sahf
test
xchg
popf
out
popf
insb
inc
cmp
in
mov
cmp
sub
out
pop
fiaddl
mov
inc
or
mov
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
or
andl
test
jo
lret
jmp
push
xor
or
movsb
sbb
fdivl
shlb
push
lret
dec
or
dec
popf
xchg
cmpb
mov
mov
ret
cmp
nop
call
or
cmp
add
cli
in
das
dec
pop
xor
fnstcw
lea
shll
imul
popf
orps
fists
fidivrl
fcompl
pushl
and
jae
mov
mov
fldl
inc
adc
faddl
repnz
outsl
repz
mov
pop
data16
cs
cli
das
mov
ja
mov
adc
xchg
inc
sub
jmp
das
and
lret
cmpsl
dec
lock
iret
cs
imul
push
cmpsl
icebp
mov
push
adc
rcrl
sahf
cmp
out
icebp
scas
outsb
pop
cmc
pop
push
push
mov
xlat
inc
pop
push
xlat
add
mov
mov
fstpl
xor
lcall
dec
and
xchg
and
pushw
push
xor
ret
repnz
jne
jmp
sub
mov
iret
push
fsubrs
mov
fwait
movsl
mov
sbb
push
pop
sub
stc
jno
mov
scas
or
aas
add
adc
xchg
pop
popa
inc
outsb
or
filds
je
sbb
call
cmc
xchg
int
mov
call
fidivrs
pop
or
and
into
pop
xor
pop
sbb
add
lret
fmuls
xorl
sub
sbb
jmp
cmp
adc
out
cmp
jle
in
jo
sub
sahf
aam
sub
imul
jno
cmp
push
into
xor
icebp
pop
mov
xor
jo
sub
in
jecxz
xchg
insl
cmp
mov
pop
mov
gs
insb
sbb
bound
sub
pop
fcom
adcl
outsb
or
push
jb
loope
cmc
mov
hlt
cmp
dec
outsl
push
jg
test
fildll
inc
push
gs
int
mov
lret
aas
sti
mov
jbe
aas
test
test
push
jae
cmp
lea
or
pop
pop
int3
out
xor
popf
inc
jnp
shrl
lods
xchg
add
cwtl
xor
ds
dec
notb
push
inc
and
and
dec
pop
in
data16
mov
cmpsb
dec
jg
int3
pop
jmp
divb
cmp
lock
pop
or
adc
mov
mov
sub
adc
or
aam
cmp
adc
add
xor
test
mov
inc
inc
add
cmp
sbb
inc
lock
pop
pusha
dec
jle
inc
scas
sahf
ret
repnz
push
push
pop
xchg
test
and
xor
mov
stc
mov
add
push
cltd
cmp
das
adc
cli
lret
xchg
out
hlt
mov
push
dec
push
add
ds
sub
sub
pop
and
ds
call
int
mov
outsb
cmpsb
daa
repz
aad
add
ljmp
pop
icebp
dec
mov
jnp
lods
mov
push
inc
movsl
fucomp
out
pop
popa
insl
into
mov
push
dec
mov
sbb
or
out
sub
sti
outsl
push
stos
bound
aam
mov
cmp
out
test
arpl
fwait
in
jmp
pop
insb
dec
push
popf
jecxz
std
scas
cmp
add
arpl
push
cs
and
sbb
sbb
ror
dec
or
mov
inc
xor
push
les
insl
pop
jmp
les
mov
push
mov
jmp
push
push
push
lcall
fidivrl
hlt
lret
lea
ret
in
flds
test
push
push
mov
and
test
mov
shrb
jo
lret
int
push
mov
and
push
cmp
push
cmp
addr16
int
fildll
addr16
xor
out
mov
adc
cmc
dec
xor
inc
inc
inc
push
adc
cmp
pop
mov
xchg
push
or
int3
les
push
lods
jo
jmp
lcall
inc
std
cli
sti
xor
inc
add
aas
pop
pop
inc
dec
adc
mov
adc
test
jmp
mov
shlb
shl
sub
xor
lcall
inc
leave
fisttpll
jl
mov
clc
mov
pusha
dec
or
and
cs
add
lcall
mov
cmpsl
fucomip
and
lahf
adc
sbb
cmpsl
jg
je
jb
mov
sbb
aaa
mov
xchg
cmp
cwtl
pop
jnp
jbe
jno
pop
stos
or
pop
jmp
dec
or
xchg
dec
popf
adc
mov
jo
pop
mov
shlb
inc
jne
cmp
jae
rorl
out
xor
or
int
sub
xchg
jmp
fsub
and
out
mov
imul
loop
cmp
test
xchg
pop
dec
jecxz
push
out
inc
add
dec
xchg
jno
out
fs
cld
cmpsl
data16
lret
xchg
push
fdivs
or
adc
ljmp
sub
addr16
sub
xchg
mov
in
mov
bound
mov
or
bnd
fwait
lret
sbb
sbb
aad
xchg
xchg
and
jg
ljmp
mov
or
movsb
stos
jle
cmpsb
or
repnz
xor
push
lcall
xchg
push
insb
sub
imul
mov
xchg
or
iret
pushf
xchg
push
and
mov
push
das
dec
in
add
mov
cmp
out
repnz
and
aaa
lret
adc
xchg
or
rcll
jns
dec
pop
adc
mov
test
push
cltd
dec
jge
xchg
imul
andb
pop
xor
pop
cmpsb
pop
nop
insl
push
xchg
mov
push
lret
in
mov
or
jmp
vlddqu
out
ficomps
inc
push
inc
mov
ss
mov
addb
popa
sub
in
and
dec
mov
imul
push
pop
pop
insl
cli
mov
test
lret
pushl
iret
test
stc
jg
xor
cwtl
rclb
in
jmp
push
lahf
mov
and
sub
or
loop
sub
pushf
jbe
mov
xchg
jl
jp
or
in
mov
push
fnstenv
sbb
faddl
lea
inc
sahf
add
jb
mov
leave
jb
nop
cwtl
mov
push
fidivl
xchg
sahf
rclb
adc
mov
mov
adc
xchg
ds
cmp
call
xlat
clc
aaa
sub
pop
and
mov
adc
cmp
cmp
leave
bound
sub
in
fsts
movsb
scas
stos
add
jno
lock
daa
xabort
mov
sbb
and
jns
icebp
mov
mov
mov
adc
dec
aam
cmp
mov
outsl
sbb
pop
inc
and
dec
mov
mov
xchg
push
mov
or
adc
add
dec
push
xchg
call
or
in
lods
lcall
out
test
fidivrl
push
pop
mov
out
adc
dec
adc
out
xor
or
mov
int
pop
nop
nop
aad
xchg
pop
in
mov
adc
xor
xchg
bound
cmc
call
mov
inc
aaa
adc
dec
iret
sub
icebp
scas
movsb
imul
in
insl
jecxz
test
sbb
add
rcll
mov
aas
cli
dec
imul
add
sarl
mov
jl
popa
cmp
sbb
movsl
aaa
inc
cmp
add
loopne
dec
add
in
xchg
shr
push
fidivl
pop
add
sbb
cmpsb
loopne
ss
data16
sub
mov
loope
dec
pop
jmp
mov
insl
sub
movsl
hlt
mov
cmc
mov
jle
scas
psrlq
loopne
sub
dec
pop
jbe
test
neg
mov
andb
fadds
lahf
dec
mov
aaa
out
mov
sub
repz
std
add
dec
lahf
jae
bound
push
div
adc
add
imul
sub
and
icebp
les
ja
jo
aam
in
stos
mov
mov
test
mov
mov
push
shrb
mov
mov
or
xorb
cmc
nop
push
inc
push
xlat
in
mov
lock
dec
dec
sub
test
mov
xor
jge
icebp
ss
in
in
or
mov
cmp
push
addr16
lret
out
mov
test
mov
lods
int3
lcall
xor
add
negl
pop
cmp
addl
popf
sbb
aad
call
jnp
cs
inc
aaa
lds
add
imul
xchg
and
outsl
test
lods
pop
popl
je
outsb
jb
and
popf
jns
sarl
mov
sub
aaa
int3
out
sub
push
loope
out
xlat
mov
loop
push
adc
out
outsl
gs
mov
icebp
out
mov
icebp
test
pop
ret
pusha
and
lcall
movsl
cmp
imul
inc
and
pop
out
mov
sti
lock
daa
lock
sbb
jb
push
inc
inc
jge
pop
pop
xor
daa
xor
pop
incb
repnz
or
les
pop
push
add
icebp
or
addr16
mov
pop
movsl
cli
pop
mov
dec
sti
idivb
insb
test
mov
mov
add
sbbl
mov
insl
sbb
dec
xchg
mov
stos
inc
xchg
and
push
or
js
xchg
out
xchg
adc
xchg
pop
hlt
push
fsts
mov
xchg
aam
addr16
dec
mov
jmp
or
mov
fs
add
or
jnp
addr16
stos
push
int3
jno
cmp
jbe
fstl
daa
outsb
mov
pop
fs
movsl
jnp
sub
movsb
dec
push
dec
aad
mov
lock
ljmp
lods
inc
stos
add
xchg
js
movsl
xor
int3
push
stc
scas
or
push
cli
insb
inc
push
inc
jne
int3
push
stc
bound
xchg
dec
dec
daa
in
frstor
pop
jp
imul
dec
dec
js
fcmovb
jne
pop
dec
insb
push
fldenv
cmp
sbb
enter
jne
movsl
xchg
sub
mov
push
orb
sbb
pop
outsb
leave
cld
add
jb
or
int3
outsb
mov
sti
push
ds
pop
cmpsl
mov
fstpl
stc
aam
mov
cltd
aaa
pop
repnz
mov
into
out
push
adc
add
iret
dec
rcl
jae
sbb
jb
xor
adc
das
divl
scas
incb
outsl
dec
xor
mov
or
sbb
jl
mov
push
shl
pop
movb
scas
shrl
mov
pushf
gs
jle
shlb
js
inc
xchg
push
scas
roll
adc
mov
scas
fiaddl
mov
icebp
lahf
sbb
repz
sub
out
cltd
rorl
lods
sbb
xchg
mov
test
lds
jbe
lea
imul
dec
dec
jle
inc
lret
push
loop
cmpsl
rorl
jo
cmp
mov
in
pop
in
ljmp
or
inc
andb
pushl
adc
pushf
jns
xchg
mov
in
fstpl
add
scas
cltd
fwait
mov
ds
sbb
add
adc
and
dec
sbb
lods
xor
fcmovne
push
and
sar
or
icebp
inc
mov
movsb
dec
testb
xchg
clc
xor
inc
cmp
outsl
fcoml
iret
insl
call
jno
cmp
stos
loope
jp
jle
pushf
jbe
insb
das
movsb
push
cmp
insb
xor
sahf
pop
repnz
xchg
jmp
inc
decb
in
arpl
movl
aam
test
xchg
and
roll
adc
aam
mov
and
push
xor
add
inc
lcall
mov
cli
xor
es
aad
jle
or
test
in
inc
push
cld
fistpl
jbe
loop
fdivrs
out
xchg
lods
mov
daa
add
xor
xchg
loope
push
push
loope
sbb
push
ficoms
fs
and
mov
push
push
rcll
jb
xchg
jmp
fs
imul
faddl
fisttps
imul
pushf
push
data16
shrl
mov
mov
clc
aad
int
stos
cmp
movsl
cmp
pop
mov
pushf
or
lret
jl
push
dec
enter
and
test
out
push
cmp
jg
stos
adc
leave
adc
cmc
cmp
mov
in
in
xchg
xor
sbb
std
loop
adc
imul
stc
int
mov
popf
fwait
lods
mov
lret
pop
mov
jns
lods
inc
lock
scas
lods
andl
pop
xor
insl
in
mov
adc
sahf
or
jno
and
fistps
pop
jne
fdivrs
sbb
mov
fcomip
std
jmp
xor
dec
xor
xchg
mov
sub
ljmp
repnz
outsb
int
or
subl
ss
repz
fsubrl
insl
cmp
icebp
cld
push
inc
loop
dec
push
cmp
dec
pop
add
div
sub
scas
pop
jmp
mov
fmulp
inc
insl
int3
add
das
clc
rcl
xchg
add
and
push
cld
xchg
pop
mov
movsb
imul
iret
dec
outsb
loope
inc
xor
enter
jg
aad
lock
sub
jb
shl
push
or
scas
and
inc
dec
sbb
push
mov
sarl
arpl
xor
fchs
loope
mov
imul
cli
and
dec
sbb
adc
dec
adc
stos
sbb
pop
cmovs
es
out
or
jp
and
push
cs
jle
aam
cmp
adc
cmpb
adc
pop
or
test
cmpsl
sarb
clc
mov
inc
jecxz
lcall
sub
movsl
icebp
push
dec
cmp
lahf
test
inc
fwait
sub
scas
es
pop
cld
loop
mov
mov
test
pop
push
fcmovu
pop
shlb
mov
push
sub
imul
lock
or
out
lahf
cli
cmc
push
mov
sbb
or
iret
movsl
and
and
imul
mov
xor
add
cmp
dec
xor
xor
push
cltd
out
adc
push
std
and
int
mov
dec
data16
shrl
mov
mov
movsb
mov
jl
mov
pop
popa
cmp
dec
and
ja
sti
stos
dec
mov
pop
dec
ds
outsl
and
xor
pop
or
mov
xchg
or
xchg
sub
out
inc
mov
int
jne
pop
sub
push
lods
add
aad
sbb
pop
jae
gs
in
mov
outsb
pop
test
pop
cltd
xchg
cwtl
gs
loopne
sbb
fldt
xor
pop
xchg
xchg
aam
cmp
mov
xchg
pop
xchg
sti
mov
inc
jne
test
add
dec
mov
dec
sahf
mov
xchg
push
lret
dec
push
cmp
push
push
mov
xchg
sub
add
inc
mov
jnp
mov
add
fdivrl
jge
dec
insb
mov
stc
mov
out
inc
dec
xchg
mov
xchg
pop
fistps
fxch
and
negl
jmp
out
loope
bound
ss
inc
add
aaa
pushf
xor
outsl
out
inc
adc
or
pop
stos
sub
jne
push
leave
stos
xchg
jge
loope
sub
test
pusha
mov
pop
repnz
xor
sub
incl
insb
and
push
and
fs
daa
repnz
mov
cmp
test
insl
xchg
xor
jo
mov
adc
mov
aam
sbb
cmc
push
stc
pop
sbb
fldcw
outsl
das
lds
mov
std
mov
cmp
imul
jno
push
fcomps
test
xchg
loopne
cmc
or
enter
mov
lret
jne
shll
movsb
pop
jge
test
cmp
loopne
jmp
inc
mov
subl
inc
fstp
icebp
popa
push
xor
jno
lahf
shll
nop
sbb
or
nop
sarl
sub
ljmp
leave
mov
in
rcll
sbb
and
mov
jne
or
jg
fisubrs
and
inc
push
jne
xchg
je
push
mov
mov
daa
adc
shlb
xchg
fisubl
sbb
std
in
pop
int
rorb
loope
insb
pusha
test
mov
mov
lahf
mov
push
sub
xchg
test
cmpsl
pop
push
pusha
push
lods
aas
lret
out
mov
add
in
sub
inc
dec
and
add
xchg
inc
cmc
mov
mov
pop
cmp
cmp
xor
inc
push
hlt
test
mov
outsl
lods
flds
push
sub
cmp
jle
dec
jns
gs
mov
addr16
in
popf
lock
test
and
loope
adc
mov
push
jle
cmp
les
ljmp
sbb
imul
xorl
cmpsl
test
vorpd
in
inc
negl
jp
int3
xor
in
lahf
mov
inc
sbb
pop
adc
loope
aam
adc
push
mov
dec
outsl
adc
cmp
jo
pop
rcrb
mov
dec
and
and
xor
and
jge
scas
mov
lcall
cmp
stos
mov
pusha
cmp
xorb
push
iret
lods
pop
inc
inc
adc
mov
xor
aaa
in
pop
imul
or
cmp
mov
stos
into
sbb
mov
and
pop
xor
enter
cmpsb
xchg
jecxz
aas
dec
movl
enter
pop
lods
stc
mov
add
pop
and
jecxz
loopne
cld
pop
shr
out
xor
adc
cmp
inc
fwait
mov
and
fcmovbe
orb
xchg
push
sbb
fstps
add
in
popl
xor
mov
xor
push
add
mov
loope
cmpsb
popl
mov
mov
test
fsubs
jg
mov
xchg
xor
sbb
imul
cmp
cld
sahf
aaa
dec
mov
adc
jecxz
into
or
fildll
outsl
data16
int3
outsl
cmp
push
call
sbb
rcll
frstor
sub
sar
gs
rcr
xchg
fbld
xacquire
push
aad
inc
and
fucomi
and
orl
shrl
and
jno
mov
aad
xchg
popa
leave
shll
xchg
nop
xchg
pop
aaa
insb
arpl
jecxz
shll
sbb
movl
data16
mov
adc
je
fisttps
jno
inc
repz
pop
insb
sbb
push
mov
inc
sub
je
mov
jp
sub
bound
mov
cmp
sbb
mov
shlb
jb
push
out
sub
in
inc
sub
pop
lahf
filds
dec
mov
test
xchg
jmp
dec
xorb
xchg
movsb
or
and
dec
or
cmp
into
jmp
lds
and
fidivrl
mov
pop
nop
add
push
nop
sahf
je
sahf
lods
mov
mov
pop
iret
ja
and
test
xadd
mov
cli
or
jmp
stos
ret
cmpsl
stos
push
jnp
cmpsb
mov
adc
inc
loope
push
mov
sbb
loopne
jns
pop
outsb
std
scas
xor
jnp
inc
cltd
sbb
inc
inc
sarl
aas
mov
dec
sbb
jg
subl
or
lods
mov
jae
es
push
inc
imul
loop
fwait
ret
movsb
ret
cmc
add
mov
out
xchg
or
inc
xor
push
cmp
insb
lods
or
aam
mov
xchg
pop
lds
loop
jns
es
mov
imul
lret
xchg
adc
push
cli
out
loope
movsb
nop
leave
inc
aam
push
pushf
cmp
fwait
xor
push
and
inc
test
fsubrl
mov
xor
adc
push
jne
mov
dec
shl
cwtl
inc
in
jne
cs
dec
mov
sbb
mov
sbb
in
push
outsl
and
jns
push
stos
and
shlb
call
rorl
xorb
inc
sbb
xchg
pushf
mov
cli
jno
mov
in
ftst
inc
xor
imul
push
aad
cs
std
in
pop
iret
aas
rcrl
out
jae
add
lods
pop
adc
adc
jae
aad
sbb
ss
jg
push
dec
clc
test
out
jnp
jp
jns
jbe
mov
cmpl
cmp
repnz
lock
jg
in
mov
mov
jne
rolb
inc
mov
ja
xor
sub
or
les
cmp
cmp
dec
rcr
push
ret
test
xchg
mov
add
mov
int
pop
imul
push
sub
scas
hlt
push
fstpt
sub
aas
pop
cmpl
cwtl
sub
dec
adc
mov
out
out
and
test
sbb
movl
pop
stc
fildll
cmp
mov
dec
aad
xchg
jp
inc
cltd
shrl
js
sti
rclb
dec
sbb
addr16
xchg
xchg
xchg
mov
jno
pushf
je
es
ja
mov
jb
add
ret
sub
and
add
loope
lahf
stos
lods
mov
clc
dec
cmp
xlat
mov
out
imul
jmp
out
xor
jl
or
mov
dec
pop
add
jnp
in
jne
sub
push
in
jne
gs
enter
mov
into
and
xor
shll
xor
dec
mov
out
mov
cmpxchg
mov
int
movsb
add
cmp
es
mov
les
and
push
rorl
aas
loop
outsb
dec
movsl
or
push
int
test
mov
rcrb
jo
mov
mov
in
pop
test
in
nop
sarb
cmp
fstl
jae
jne
jns
jp
pushf
or
into
inc
lea
in
testb
or
insb
arpl
and
fcmovbe
testb
xor
cmp
daa
push
cmp
addr16
inc
cmp
and
mov
insl
sti
repnz
mov
aam
divl
scas
inc
cmp
std
cli
imul
inc
fistpl
arpl
int
mov
mov
pop
lcall
lods
je
dec
out
repz
mov
sarb
jns
lcall
sar
loope
xchg
push
xor
sbb
inc
adc
or
xchg
ljmp
cli
bound
pusha
scas
dec
test
fldenv
fdivl
cmp
dec
addr16
xchg
push
ljmp
mov
cltd
push
nop
xchg
mov
xchg
push
add
jg
add
mov
mov
es
ficomps
push
mov
mov
ja
subb
test
sbb
xchg
mov
and
fs
push
out
mov
inc
mov
pop
xchg
mov
mov
xor
xor
inc
ret
and
add
inc
xor
dec
sbb
sub
call
and
in
add
ret
idivb
movsl
jecxz
dec
outsl
mov
sub
movsl
mov
mov
imul
data16
in
cmp
mov
pop
cmp
push
cmpsl
mov
pop
xor
jmp
lea
inc
push
fimull
outsl
fistl
stos
loope
xchg
outsb
inc
add
test
ja
jle
jbe
or
mov
addr16
das
mov
mov
movlps
das
and
pop
subl
jge
jnp
nop
jne
add
gs
push
cmp
jns
pop
inc
dec
ret
lcall
and
mov
shlb
jbe
dec
mov
movsl
or
push
repz
adc
jae
nop
rolb
outsl
lock
jl
mov
pop
jge
xlat
mov
movsl
loopne
es
ret
stos
push
pop
std
ss
adc
xchg
add
outsl
fcomp
cli
inc
or
js
shll
stc
mov
jbe
push
data16
inc
jecxz
cmp
data16
or
pop
xchg
and
popf
xor
out
sub
clc
add
mov
inc
nop
jno
in
idivb
mov
cwtl
mov
pushf
leave
pop
in
aaa
cltd
clc
iret
cmp
xchg
mov
outsb
stos
call
mov
movsb
imul
adc
push
or
out
insl
jge
out
xor
ja
push
and
shrb
jnp
cs
aaa
and
jmp
data16
jp
sbb
adc
dec
xor
in
adc
fcomps
scas
add
or
sub
or
stos
sub
push
inc
fldl
sarl
pop
pop
mov
or
loope
jae
adc
push
lods
xchg
jae
cmpsl
inc
sub
rep
stos
out
or
adc
jno
and
mov
movsl
jbe
stc
sbb
inc
inc
int
mov
mov
lods
lods
icebp
ret
mov
insb
jp
adc
sub
loop
call
jo
testb
add
jecxz
dec
into
mov
sub
aaa
gs
daa
ss
add
nop
sub
adc
xor
mov
in
xchg
and
bound
lcall
outsl
pop
imulb
jno
sbb
outsb
push
test
xchg
test
daa
arpl
sub
inc
test
and
popa
inc
or
xorb
lret
shrl
movsl
or
repz
stos
aad
or
inc
pop
addr16
mov
adc
aas
inc
test
mov
inc
sub
jle
push
aas
xchg
shlb
hlt
or
enter
data16
adc
push
push
int
stos
rcll
add
mov
fcompl
jbe
sbb
pop
mov
in
add
es
jo
nop
sbb
movsl
leave
repz
call
movd
data16
sti
jg
xchg
js
ja
sub
adc
icebp
call
mov
loope
inc
mov
mov
sbb
pushw
mov
addb
cmp
test
rcl
dec
jg
popf
ds
cmc
jnp
mov
cwtl
mov
jecxz
sbb
lahf
mov
fidivrs
xor
mov
mov
shrl
mov
scas
sbb
inc
shlb
pusha
cld
pop
sub
lock
fs
test
jnp
aam
jae
xchg
lea
cltd
pop
push
inc
cmp
adc
dec
in
cmp
inc
adc
xchg
jae
sbbb
and
stc
loope
pop
mov
xchg
inc
imulb
enter
lock
or
jge
lea
inc
ljmp
adc
dec
test
pop
pop
mov
loopne
mov
jmp
hlt
xchg
fidivrl
lds
mov
cwtl
inc
mov
daa
fdivs
mov
es
hlt
and
iret
pop
lds
dec
out
add
mov
xchg
dec
add
push
sub
ret
xchg
jnp
add
jne
mov
mov
cmpsb
mov
popa
lods
mov
out
call
cmp
out
inc
mov
adc
sahf
sub
push
mov
addr16
or
stos
aas
xchg
dec
gs
int
mov
outsl
movsl
imul
mov
jge
arpl
divl
cmpl
pop
insl
mov
push
movsb
nop
cmp
dec
push
in
sub
cmp
arpl
mov
or
pop
cs
rorl
adc
shl
jge
stc
or
fdivs
pop
lret
add
andb
and
lea
popa
std
adc
cwtl
mov
inc
aad
inc
xlat
adc
add
cmp
jae
cmpsl
rcrl
mov
and
pop
dec
push
fwait
adc
loope
jg
fiadds
inc
jae
jne
insb
xchg
inc
sti
push
adc
aaa
fincstp
push
int3
stos
cld
lds
iret
sub
pop
loope
xchg
xchg
rorb
xchg
jecxz
cltd
loopne
pushf
sub
pop
jecxz
pop
mov
pop
inc
test
mov
mov
mov
cmp
push
cwtl
inc
int3
dec
adc
mov
pop
xchg
pop
jns
es
cmpsb
sub
pop
lahf
pop
sbb
jg
call
clc
adc
jecxz
lds
or
mov
stos
mov
in
fbld
jns
xchg
lcall
mov
sub
xor
or
aad
aas
insb
mov
mov
add
mov
or
frstor
das
jl
sbb
push
or
hlt
insb
iret
jg
movsl
or
jbe
les
pop
mov
pop
lea
jecxz
in
jae
pop
in
in
mov
out
xchg
jo
push
stos
stc
mov
jbe
dec
loope
jmp
loop
dec
add
xor
adc
xor
lock
sbb
or
push
or
test
sbb
push
mov
cmpsb
addl
ljmp
adc
xchg
inc
test
adc
lock
inc
jecxz
rol
pop
cmp
mov
fsubl
fimuls
aaa
jo
fiadds
out
pop
cmp
and
daa
sbb
pusha
dec
mov
popf
or
mov
dec
test
cmp
pop
scas
and
sub
pop
xor
ret
adc
xor
cli
push
inc
sarb
xchg
call
sbb
into
je
xchg
mov
xchg
sub
push
std
inc
popf
mov
pop
cs
fs
sub
mov
outsl
dec
mov
mov
aad
mov
pop
lea
sub
clc
push
daa
xchg
pop
ja
add
lods
inc
out
adc
sub
xchg
sbb
cmp
mov
add
imul
ret
rolb
push
pop
cmp
adc
mov
add
inc
sbb
and
or
cs
inc
jl
fcoms
jg
adc
int
stos
mov
jg
mov
inc
cmc
sbb
pop
mov
mov
sahf
enter
inc
repnz
aad
dec
push
pop
jno
dec
dec
mov
sub
mov
inc
ret
subb
mov
inc
ljmp
sub
addr16
add
mov
add
sub
mov
dec
push
xor
test
or
sbb
enter
lret
ret
cmp
push
mov
clc
jnp
into
loopne
pushf
xchg
movsl
xor
aad
out
or
and
xchg
push
mov
imul
pop
scas
subb
fcom
shll
push
cmpsl
je
inc
outsb
inc
mov
or
xor
fwait
pop
fsts
into
add
gs
mov
sbb
cmpsb
rcll
mov
mov
cmc
jno
jge
dec
aam
push
lods
loope
sbb
mov
jle
ds
stos
pop
cwtl
lods
popf
mov
addr16
ljmp
loopne
sub
movsl
or
stc
sbb
ror
dec
cmpsb
pop
notl
scas
out
mov
jge
sub
sub
jne
rcrb
push
scas
testl
or
lret
icebp
dec
std
fstl
aad
and
jmp
mov
dec
in
fwait
pmulhw
jno
jbe
gs
fstl
clc
push
cmp
or
in
xlat
or
push
into
add
inc
stos
aad
or
outsb
imul
dec
or
push
mov
sbb
in
cs
ss
jle
dec
ffree
enter
inc
xlat
lods
in
sbb
rcrb
push
ljmp
jge
pop
cs
adc
fisubrs
div
push
pusha
inc
stc
push
aaa
push
loope
lds
imul
pop
andb
sub
aad
repz
xchg
lods
cmc
cmp
add
jnp
mov
repz
add
pop
fwait
lds
mov
stc
push
in
rcll
add
inc
loope,pt
clc
or
pop
inc
imul
sub
and
mov
mov
mov
mov
movsb
inc
mov
add
shlb
xor
sbb
mov
mov
dec
lcall
push
cmp
idivb
and
lret
not
or
push
arpl
repnz
mov
fcoms
pop
je
bound
aas
fiadds
imul
and
lahf
xor
das
lret
js
lock
loope
ja
xor
arpl
in
or
xchg
mov
xor
and
arpl
and
dec
push
scas
cmp
xlat
or
test
mov
mov
dec
jmp
cmpsb
jl
stos
in
aas
loopne
push
aam
adc
daa
enter
jmp
imul
out
jns
and
outsl
ret
cmp
or
jp
cmp
and
push
mov
enter
sub
icebp
daa
jb
inc
push
mov
fwait
cmpsb
push
gs
ljmp
jmp
mov
adc
cmp
jae
ror
pop
jno
xchg
pop
push
and
ds
in
lock
ljmp
jmp
mov
addb
jl
pop
pop
cmc
in
add
add
inc
sbb
das
pop
xor
cwtl
hlt
inc
fwait
sub
push
js
setle
adc
jno
adc
or
inc
shrb
mov
test
hlt
xchg
daa
jmp
jne
imul
cmp
xchg
ret
rorl
je
in
adc
jns
lea
cmc
aam
inc
xchg
mov
bound
loopne
sub
and
out
loopne
dec
or
push
xchg
push
repz
lods
pop
and
pop
xchg
in
stc
arpl
mov
lahf
into
xchg
xchg
mov
dec
push
rcl
sti
inc
loope
xor
fcomps
into
push
add
xchg
mov
push
pop
popf
rclb
test
jmp
stos
jbe
sbb
or
js
cmc
in
xchg
push
pop
or
xchg
push
xor
jmp
test
push
pop
and
clc
mov
fsubl
mov
ss
and
cmpsb
fisubl
dec
pop
lret
add
sub
cmp
jmp
inc
stos
sub
imul
mov
inc
fnstsw
mov
insl
sbb
and
pop
fisttps
sti
scas
sbb
push
cmc
and
sub
jns
add
outsl
mov
lahf
mov
popa
dec
sub
inc
xchg
popa
fistpll
jge
push
gs
inc
in
and
imul
mov
iret
xchg
mov
jmp
rcll
lock
or
sahf
pop
push
hlt
inc
jnp
xchg
popa
stc
lods
ret
jnp
fs
mov
aam
xor
mov
subb
push
shlb
push
fistpl
jb
xor
repz
xchg
push
rorl
inc
adc
outsb
arpl
inc
ss
xorl
mov
add
cmpsb
int3
ss
push
inc
adc
pop
imul
test
cltd
loope
xchg
dec
cs
call
sbb
outsb
addr16
adc
int3
fucom
add
outsl
subb
dec
shrb
out
imul
push
push
inc
int3
div
fs
jbe
les
fsubp
es
aam
test
mov
dec
std
sub
mul
push
in
sbb
add
or
jo
mov
sub
fbld
inc
push
xchg
cmp
fdivrl
insl
mov
cltd
jmp
test
cwtl
pop
xor
pusha
es
inc
dec
enter
jmp
insb
sbb
fmul
fdivs
aam
leave
jns
rcl
pusha
in
inc
rcl
inc
sub
push
cld
pop
mov
movsb
add
int
lea
xchg
cmp
mov
dec
inc
sub
pop
jno
xchg
xchg
in
sahf
fnstenv
pop
xchg
std
lods
arpl
push
rcll
inc
pop
push
stos
loop
inc
jno
or
xchg
mov
mov
rcr
ret
lret
sbb
jmp
push
shlb
aas
js
in
and
pop
cmp
out
mov
pop
push
mov
fs
scas
sbb
mov
fnstsw
push
fmul
jmp
or
xchg
dec
incb
jmp
aad
xlat
out
push
das
adc
lahf
out
gs
push
out
nop
mov
and
xchg
pop
xor
push
mov
stos
icebp
mov
and
or
push
test
std
es
cmp
sub
bound
orl
pop
into
insl
adc
inc
mov
nop
lds
sbb
inc
imul
fmul
imul
clc
mov
arpl
add
ss
icebp
push
jo
loope
add
or
in
out
mov
or
adc
add
nop
push
imul
xor
push
xchg
adc
cs
scas
push
cmp
dec
std
xor
bound
inc
testl
push
adc
gs
or
and
push
lcall
cmc
mov
cmp
pop
hlt
or
pop
popa
addb
mov
mov
arpl
lods
push
lret
popf
lock
sub
lds
test
out
jae
lock
adc
out
lahf
mov
cltd
push
ret
inc
mov
jbe
dec
pop
mov
cmp
push
fwait
subb
leave
mov
dec
imul
out
sub
sarl
add
xor
roll
ja
push
inc
shlb
xor
out
jae
aam
xor
add
daa
cltd
fs
movsl
push
xor
sarb
scas
in
inc
arpl
stc
sub
out
xchg
mov
loopne
ja
addl
movsb
scas
and
mov
mov
jp
dec
in
lcall
and
nop
xor
mov
jbe
fistpll
shrl
or
outsl
cmp
mov
mov
fwait
jmp
leave
rorb
fcmove
sub
dec
push
push
or
sti
out
sahf
add
inc
outsb
push
lcall
ret
rclb
insl
jno
daa
xlat
and
push
es
mov
f2xm1
mov
aaa
or
adc
cmp
cmp
sub
dec
dec
loop
fs
fldcw
mov
fildl
add
mov
sbb
xchg
mov
das
mov
lret
or
sbb
and
adc
nop
mov
jmp
push
add
inc
xor
in
test
or
xchg
sbb
mov
adcl
push
mov
or
leave
sbb
push
and
ljmp
imul
inc
repz
incl
mov
hlt
ret
dec
mov
or
mov
fs
and
ficoms
adc
fdivrs
stos
push
cmp
mov
test
jmp
inc
fwait
dec
mov
push
daa
inc
leave
xchg
mov
or
stos
movsb
arpl
xor
adcb
mov
add
or
sar
inc
nop
cltd
dec
test
xchg
loopne
jl
sbb
divl
pop
roll
push
loop
mov
adc
mov
jns
movsb
lret
js
pop
repnz
movsb
jno
push
add
jo
orb
pop
adc
xor
stos
outsb
aas
dec
aam
dec
push
fimull
add
push
sbb
xor
sbb
xchg
loope
sub
aad
cmpsl
movb
sub
xchg
fistl
dec
enter
and
pop
push
pop
sub
mov
cmp
dec
insl
mov
jg
cmp
nop
decl
loope
loopne
mov
inc
cmp
jo
enter
dec
add
push
jb
jg
push
sub
inc
add
or
mov
cwtl
pop
out
xor
jecxz
rcrb
cmp
and
mov
ds
push
int
adc
mov
adc
dec
loop
insb
pushf
enter
mov
add
popa
ret
cmpsl
adc
out
movsb
loopne
or
mov
int3
push
nop
mov
sti
aad
xorl
cltd
mov
mov
fsubrl
cld
adc
mov
cmp
inc
push
rcrl
shlb
inc
push
mov
pop
outsb
jmp
jg
dec
hlt
cmpsl
pop
int3
or
mov
mov
sahf
jbe
jecxz
sahf
leave
fs
fistl
jbe
and
add
ffree
frstor
add
addb
loope
daa
mov
xchg
lods
mov
jle
lds
aam
push
mov
clc
ret
mov
xlat
loope
insl
sbb
mov
daa
test
stos
test
sub
jmp
movsl
mov
outsl
cltd
mov
jae
push
test
xchg
out
adc
cmp
inc
aaa
fdivr
stc
js
pop
mov
jnp
xchg
add
pusha
push
push
test
dec
mov
pop
dec
subb
std
ret
in
xor
adc
pop
add
push
sahf
cmp
ror
stc
dec
sbb
loopne
enter
in
neg
mov
xor
in
mov
pop
call
and
enter
mov
imul
push
fwait
adc
dec
cwtl
jo
aaa
adc
jne
push
and
movsl
scas
outsl
std
cmpsb
icebp
js
js
je
or
loope
pusha
repnz
xlat
xchg
push
dec
jae
sbbl
or
push
xor
mov
jmp
mov
xchg
lods
stos
dec
dec
cmp
xchg
cmp
lods
sub
scas
ja
mov
jmp
rcr
push
js
gs
push
es
dec
or
test
jle
rorb
pusha
cmp
adc
popa
pushf
pop
sbb
rorb
lock
pop
mov
idivb
cmp
in
sub
add
pusha
mov
mov
jmp
dec
dec
cltd
pop
mov
out
pushf
mov
sub
sbb
push
cmp
jge
jle
lea
push
xchg
pushf
xchg
out
inc
xor
aam
imul
inc
cmp
xor
enter
add
adc
xor
push
pop
test
add
push
and
mov
xor
cltd
fidivrl
lea
jg
fstps
jnp
fmull
mov
imul
xchg
imul
mov
pop
repnz
or
rcrl
jle
xchg
jno
in
cmp
fcoms
int
mov
loop
hlt
adc
loope
out
pushf
int3
std
inc
sbb
xor
or
jmp
ja
lock
add
jae
mov
dec
push
fsubs
ret
addr16
out
sar
or
clc
stos
mov
mov
cmpsb
aaa
push
pop
inc
outsl
pop
loopne
arpl
or
inc
push
jge
sub
shll
mov
aad
pop
shll
inc
inc
sbb
lret
pop
test
lret
popa
jb
jne
add
into
out
negl
jge
dec
mov
xchg
out
dec
call
mov
es
dec
xchg
sbb
mov
xor
pop
xor
sbb
cltd
mov
adc
jo
pop
jl
popf
cmpsl
cltd
repnz
dec
out
push
or
cmp
sub
les
out
shll
mov
push
cmpsl
pop
aas
in
fwait
cltd
popf
push
mov
test
daa
shrb
popf
out
fs
lret
add
test
ret
and
das
arpl
orb
imul
add
dec
mov
cmp
clc
rcrl
pushf
pop
ret
adc
mov
adc
push
ds
mov
xor
dec
lods
jo
das
daa
pop
mov
mov
xchg
xchg
push
enter
aaa
inc
xchg
or
shrb
jmp
in
dec
icebp
ds
and
push
sub
dec
adc
dec
lret
loope
xlat
cmp
pop
and
jecxz
xor
adc
in
pop
xor
arpl
dec
std
jns,pn
mov
call
aas
push
rorb
xor
std
cmp
data16
add
cltd
iret
aas
movsb
add
pop
pop
jmp
cltd
add
cmp
lock
hlt
es
push
in
in
cmp
inc
mov
mov
shlb
sti
mov
xchg
xchg
pop
ja
cmp
scas
fldl
mov
or
and
shll
into
mov
test
out
push
shl
sbb
movsl
imul
ret
int
pusha
mov
inc
and
in
jno
decl
lret
jne
imul
lcall
insl
inc
andl
dec
lea
xchg
add
add
push
test
mov
jge
popa
shrl
adc
imul
add
imul
fs
add
in
in
jbe
pop
push
test
and
icebp
jp
adc
int3
push
and
pop
out
fstpt
in
cltd
stos
out
sub
mov
inc
jecxz
mov
pushf
push
pop
xchg
test
or
xchg
enter
test
mov
int3
mov
xor
jle
sti
mov
iret
push
cmp
cmp
pop
cmp
sbb
int3
cli
lea
xor
add
hlt
mov
sub
rol
sub
pop
and
push
repnz
jecxz
pop
mov
fadd
jge
push
xchg
xor
jmp
mov
js
mov
jge
sub
add
mov
pop
jb
adcl
adc
sti
ret
jg
cmp
repz
and
push
rcll
imul
mov
or
fldl
pop
lea
mov
lret
pusha
push
fcomps
or
and
add
mov
jae
out
aas
daa
pop
enter
push
push
jb
arpl
stc
insl
xchg
fxch
mov
shl
and
fwait
sbb
rcrb
mov
cmpsb
les
dec
and
dec
fcmove
lods
push
fildll
fnstenv
mov
and
aad
sahf
test
xchg
popf
out
popf
insb
inc
cmp
in
mov
cmp
sub
out
pop
fiaddl
mov
inc
or
mov
or
lods
sub
pop
in
pop
sbb
mov
aas
cmp
stos
adc
jne
int3
jge
cmp
mov
pusha
mov
mov
add
adc
jae
hlt
je
mov
adc
out
mov
addr16
dec
xlat
cmpsl
pop
cli
lret
add
stos
ret
in
dec
cmp
repnz
andl
scas
ds
arpl
push
xchg
adc
ja
push
hlt
stos
popa
jp
push
std
jne
lock
dec
dec
scas
scas
mov
pop
arpl
out
fisttpll
test
inc
jle
jne
mov
orl
bnd
xchg
in
in
mov
in
sbb
xor
decl
and
out
mov
or
rol
imul
lahf
sbb
mov
arpl
pushf
cld
mov
addr16
xchg
pop
inc
push
ljmp
pop
cld
push
sahf
icebp
add
pop
xchg
fdivs
lock
sbb
inc
aaa
iret
push
pop
pop
in
mov
pop
adc
mov
inc
inc
stc
test
xchg
cld
jge
pop
and
jmp
test
push
loope
sub
popa
pushf
sbb
mov
ja
inc
loopne
xor
aas
ljmp
mov
pop
pop
cmp
call
lds
lret
shr
dec
adc
jg
andb
or
mov
and
arpl
imul
add
pop
jnp
mov
roll
jb
loop
fwait
call
in
aas
xchg
test
test
inc
lahf
jecxz
pop
and
mov
mov
hlt
mov
roll
dec
nop
repnz
dec
insb
outsb
push
add
push
lds
adc
pop
mov
mov
lds
in
mov
pop
cmp
das
push
mov
lret
cmp
lods
add
mov
xor
fisubrs
shrl
inc
mov
les
dec
lret
add
jecxz
sub
xchg
rolb
jmp
xchg
dec
xor
xchg
pop
dec
and
aam
mov
iret
mov
jmp
enter
xchg
mov
sub
bound
in
scas
mov
jb
loope
ja
cmp
js
xchg
mov
ret
int
pop
jb
lcall
or
fwait
xor
xchg
leave
jg
out
cmp
cwtl
jle
xor
pushf
xor
dec
cmp
xchg
fwait
mul
stos
mov
jecxz
sahf
fs
sub
inc
rcll
xor
xor
xor
dec
pop
xchg
cli
ret
adc
pmaxub
fistl
mov
inc
addr16
xchg
and
notl
aad
daa
pop
and
sbb
mov
inc
in
jge
adc
enter
jl
inc
sub
dec
sub
push
idiv
adc
and
rorl
das
aaa
or
fnstcw
lahf
stc
pop
ss
mov
inc
mov
popa
dec
aaa
or
pop
cltd
adc
or
push
addl
xchg
push
enter
pop
mov
ds
icebp
or
jp
and
adc
rcrl
jg
jmp
mov
sub
push
sbb
sub
jg
xchg
ljmp
sahf
pop
ret
fstpt
out
leave
ficoml
pmaxsw
shlb
xorl
push
fld
sbb
fiadds
push
dec
add
jb
sub
sbb
repz
aas
nop
in
cmp
cmp
xor
js
mov
in
sub
push
adcb
pop
cld
repz
in
jl
sub
int3
sbb
mov
mov
xchg
and
call
mov
mov
movsb
add
adc
sti
add
rclb
pop
or
int
scas
out
jg
fs
out
adcl
jge
or
mov
push
or
je
push
shll
fnsetpm(287
inc
lds
in
mov
cmp
ficoms
out
adc
fdiv
clc
cli
in
pop
pop
mov
gs
lds
xchg
mov
mov
mov
test
pushf
lods
sub
push
aaa
mov
sbb
stos
popf
inc
clc
loopne
cmc
mov
mov
and
mov
idivl
dec
sbb
or
mov
or
call
xlat
mov
cs
and
xchg
enter
repz
dec
scas
jge
ret
js
inc
push
pop
stos
mov
xchg
xchg
arpl
pop
pop
jl
xor
inc
mov
adc
pusha
xchg
adc
shl
scas
in
out
gs
push
jge
fxch
mov
fistpll
outsl
add
xchg
xchg
daa
ret
sub
into
fstpt
ljmp
cmp
dec
inc
add
mov
mov
leave
inc
cs
xchg
or
mov
push
xchg
xor
mov
and
sbbl
imul
icebp
sbb
xor
inc
cmp
ret
es
fldenv
nop
dec
sub
fnsave
sub
lds
enter
gs
frstor
sbbb
cmp
adc
adc
fidivs
mov
inc
movsl
mov
inc
rcll
xchg
dec
into
call
jmp
inc
cmc
push
push
sub
mov
push
in
sbb
xchg
add
scas
jno
cmpsb
insl
add
cmc
mov
pop
push
push
jno
sti
scas
sbb
cmpsb
stc
lods
xchg
or
jmp
idivl
sbb
dec
inc
test
stc
aas
outsl
stos
jns
sbb
adc
imul
jle
test
lock
loopne
sbbl
xchg
cmp
jnp
adc
fisubs
sub
mov
out
pop
push
insl
mov
push
shrl
inc
xchg
mov
mov
lds
mov
shlb
lea
mov
icebp
in
pop
rorl
or
sub
fildl
scas
test
std
scas
and
rorb
insl
push
sti
xchg
and
lret
loop
pop
sub
outsl
sbb
mov
adc
inc
push
jge
xor
jns
cmp
xor
stos
adc
xchg
mov
inc
mov
jle
call
mov
aam
jns
mov
scas
jae
adc
cmp
push
push
push
sbb
xor
mov
rorb
mov
inc
imul
insb
aam
insl
fnsave
shr
pop
in
xchg
add
rcll
insl
out
pop
bound
lds
xchg
xchg
icebp
mov
xor
js
jae
dec
add
and
or
jecxz
sub
cmc
icebp
pop
lret
lock
je
or
mov
cs
pop
movsl
outsb
jmp
mov
out
mov
mov
mov
jge
hlt
paddq
lret
es
cmp
cmp
pusha
pop
push
mov
test
mov
mov
inc
int
call
call
in
cli
enter
stos
loop
pop
in
dec
xchg
push
add
aaa
jns
loopne
jae
mov
mov
xor
popf
and
pop
iret
xor
aas
and
or
push
andb
lods
and
lds
cwtl
or
mov
dec
xchg
lock
lock
test
in
add
or
repz
cs
jmp
push
add
mov
out
std
inc
pop
ud1
or
mov
pop
idiv
mov
out
les
negb
xchg
out
mov
icebp
popf
xor
xor
jnp
mov
lahf
js
mov
adc
shr
out
inc
pop
dec
out
cltd
jl
repnz
sbb
xchg
mov
dec
iret
sbb
fnstenv
sub
dec
in
scas
aas
sbb
xor
mov
fistl
mov
sbb
mov
push
pop
repz
mov
xchg
repnz
outsb
jnp
add
and
fwait
pop
shrb
adc
test
rclb
lock
call
out
ret
or
imul
std
mov
sbb
push
jo
pop
idivl
loopne
jbe
cmc
add
sub
sbb
fnsave
bound
js
aaa
add
fnsave
and
cmpsl
cmp
inc
arpl
fcomps
pop
mov
sbb
mov
sbb
dec
stos
lret
or
int
push
lods
mov
xor
mov
outsl
sbb
insl
dec
mov
call
add
jno
cmp
mov
std
pop
cmp
mov
aas
add
jge,pt
lds
popf
xor
ja
shl
pushf
test
lea
push
push
cld
mov
xor
stos
adc
cltd
pop
adc
xlat
or
andl
mov
stos
adc
pop
out
push
xor
stc
or
pusha
jns
aad
fisttpl
das
mov
fldt
inc
jg
mov
test
pushf
add
mov
bound
mov
rorb
add
xchg
sub
xor
dec
xchg
and
xchg
or
jns
jl
out
sub
ret
inc
jecxz
pusha
sub
mov
add
ljmp
xor
lcall
pop
xchg
push
insb
out
into
xor
add
xchg
stos
push
rcrb
repnz
push
sti
pop
stos
jmp
mov
insl
mov
cmp
movsl
aam
xor
cld
jg
jne
xor
or
into
dec
jb
hlt
jns
leave
les
pop
xor
push
xor
out
jmp
jle
or
fcoml
mov
sti
shrb
add
sti
jle
frstor
jno
or
and
and
aaa
mov
test
jp
test
pushl
push
stos
inc
repz
gs
jno
pop
fadds
cbtw
adc
in
lea
pop
mov
enter
sbb
lds
sbb
fwait
pop
or
imul
xchg
popf
cmp
mov
xchg
or
lret
bswap
popa
lcall
iret
mov
cmp
loopne
out
push
or
sbb
push
gs
jmp
push
pop
lret
push
sub
xor
movsb
ljmp
je
jo
jno
int3
xchg
loopne
sub
pop
outsl
dec
gs
inc
pop
lods
mov
xlat
add
dec
or
cmc
dec
ret
add
sbb
iret
cmc
or
loope
jle
push
jns
xchg
jle
mov
mov
cmp
iret
add
xchg
mov
mov
mov
leave
movsl
adc
inc
sub
ret
and
or
inc
daa
hlt
jne
popa
xorl
mov
sub
sub
jnp
enter
pop
mov
sahf
xchg
mov
add
ja
outsl
out
js
lock
lock
inc
jnp
fidivrs
add
daa
js
pop
pop
push
jnp
add
and
cmovg
mov
hlt
mov
inc
les
and
mull
mov
outsl
xor
je
jnp
sahf
sbb
cmc
add
mov
fwait
das
adc
std
jle
jbe
jge
jae
out
addl
adc
andl
pop
sbb
mov
stos
xchg
loopne
sub
cmpsb
sbb
data16
jne
cli
inc
gs
dec
jmp
out
or
jo
mov
mov
out
inc
push
xchg
mov
mov
cmp
cmp
lcall
mov
les
sub
add
scas
jno
arpl
mov
adc
aaa
fdiv
xchg
cmc
or
xlat
fs
popa
and
or
adc
xor
dec
or
jp
adc
sub
ret
rorl
pop
mov
cli
insl
hlt
outsb
mov
arpl
add
dec
loope
pop
push
cmpsb
clc
cltd
das
lods
push
shrb
push
movsl
cmc
daa
or
out
mov
pop
sub
stos
sbb
adc
sub
mov
int3
dec
or
out
imul
xorb
call
cmpsb
ret
pop
hlt
lret
bt
loop
sub
pusha
out
test
shr
inc
fs
xchg
lea
xchg
pop
jmp
popf
inc
test
mov
or
add
dec
sub
push
ja
push
dec
pop
sub
fsubrs
mov
xor
jnp
push
jns
sbb
movsb
mov
popf
xor
sbb
inc
mov
cwtl
push
sub
testb
loopne
in
enter
in
sbb
aas
cmp
je
and
push
in
mov
mov
iret
pop
xchg
xchg
sub
icebp
sbb
xchg
sub
les
std
push
add
sbb
insb
int
mov
jno
mov
aaa
aas
mov
pop
pop
xchg
imul
das
adc
adc
test
testl
enter
add
jmp
inc
js
xchg
push
mov
cmp
xchg
add
lds
lcall
xchg
mov
cmp
push
mov
arpl
test
cmp
mov
sti
test
mov
add
xchg
iret
nop
xor
push
out
sbb
add
movsl
loope
sbb
xor
icebp
aad
fs
sbb
into
or
loop
sub
std
aaa
push
mov
xor
fildll
xchg
jle
lods
mov
fcmovnbe
ja
es
pushf
sbb
push
adc
int3
mov
add
testb
imul
mov
mov
lret
pop
out
repz
jge
iret
mov
push
cmpsb
push
loop
cmp
push
aas
adc
sub
fistps
daa
ret
mul
lret
into
push
gs
loopne
lcall
pop
imul
push
pop
pop
sbb
mov
call
xchg
stos
xchg
ja
and
xchg
shrl
xchg
sti
jle
and
and
test
orb
aaa
enter
addr16
call
jb
xchg
push
jg
sahf
loope
sbb
xor
push
jle
cld
push
jbe
pop
xor
sbb
cmpsl
in
push
push
jecxz
jp
jle
and
inc
push
repnz
stos
adc
jae
data16
int3
mov
sbb
xchg
negl
dec
loope
inc
mov
or
lods
push
mov
jmp
pop
push
call
scas
xchg
mov
in
ja
fbld
scas
aaa
cmp
into
add
mov
int3
or
jo
or
sbb
in
movsb
add
mov
stos
repnz
and
into
movsb
and
stc
inc
fstps
push
lret
out
js
pop
dec
and
lods
jecxz
repz
push
inc
inc
stc
xchg
testl
mov
daa
xor
int3
xor
fs
movsb
mov
cmpsb
mov
mov
shll
stos
repz
inc
push
fs
test
lods
ret
cltd
js
sbb
or
add
ret
push
inc
loop
addb
add
jg
aam
jae
mov
push
fisubrs
aad
aad
orb
jg
add
aad
mov
cmc
xchg
lods
mov
fwait
arpl
outsl
xor
pop
std
out
jae
aaa
dec
cmpb
add
adc
push
test
enter
mov
mov
stc
leave
mov
mov
pop
out
out
leave
cmp
fistpl
mov
jmp
out
xchg
std
stos
jnp
sahf
in
out
icebp
xchg
inc
rcrl
andl
mov
rorl
cltd
lahf
adc
in
xor
add
xchg
mov
dec
ja
jecxz
pop
outsl
sub
or
inc
push
sub
out
clc
push
adc
nop
sbb
or
mov
mov
lea
xor
mov
pushl
subb
aad
fmul
fsubrl
mov
push
mov
cmp
movsl
nop
xor
insl
adcb
mov
mov
flds
jle
jecxz
xor
fwait
push
out
ds
jns
mov
jns
fwait
mov
setne
xchg
cmp
shlb
loopne
in
inc
dec
sbb
movl
loopne
xchg
ja
xchg
bound
jge
pop
sar
hlt
jbe
sbb
js
or
mov
mov
xchg
ljmp
test
cmp
fistps
dec
repz
xchg
pop
xor
fcmovb
or
or
mov
cs
out
dec
pop
add
push
push
icebp
jecxz,pn
dec
rcl
out
sahf
mov
push
loop
sbb
mov
jnp
jmp
xchg
pushf
icebp
fdivrl
shlb
iret
mov
mov
mov
sub
cmp
push
sub
sub
pop
and
daa
ss
test
mov
call
mov
add
scas
add
jo
xchg
pop
int3
ss
ljmp
daa
push
test
jae
add
cmpsl
les
lock
sti
aas
xchg
cld
shlb
cmpsl
pop
xor
sti
add
add
cmpsb
testl
pop
test
int
test
insl
shrl
xchg
mov
push
negl
iret
push
and
fstp
inc
lahf
push
pusha
sub
push
loopne
and
scas
xor
push
pop
dec
mov
jmp
pop
jl
sbbb
repz
ds
xor
fidivrs
cmpl
shrl
dec
rcrl
push
xchg
push
out
std
popl
fidivs
cmp
iret
or
adc
pushf
stc
mov
cld
jle
pusha
lcall
lret
insb
sahf
das
sbb
int3
in
xchg
andl
xchg
loop
jle
jne
push
jg
jns
shll
into
or
xchg
stos
or
incl
pop
lret
pslld
stos
mov
jmp
rolb
xchg
mulb
and
push
in
lods
jl
mov
outsl
icebp
das
jecxz
pop
mov
mov
and
pop
and
sbb
inc
jne
test
mov
cmpsl
daa
jne
push
jo
or
adc
pop
bound
jl
sbb
pusha
lcall
dec
out
mov
es
or
mov
enter
xor
nop
cmpb
repz
mov
insl
movsb
or
aas
or
sbb
fiaddl
push
scas
adc
jbe
add
mov
addr16
and
cmp
outsl
movb
xor
push
add
dec
push
sub
cli
fldcw
out
sub
xor
pop
add
pop
xchg
movb
lock
cmp
hlt
mov
sbb
sub
push
sbb
adc
dec
cmp
jno
aad
push
mov
xchg
inc
stos
jl
icebp
and
ret
add
or
cmp
fiadds
mov
repnz
mov
cs
enter
mov
adc
pop
out
in
fnstcw
and
ds
paddq
test
xchg
ret
and
add
dec
or
test
add
repnz
fiadds
mov
mov
push
data16
jmp
push
int3
js
sub
sahf
cmp
jb
les
mov
shrb
push
fwait
push
popf
cmp
pop
ljmp
cwtl
out
push
add
xchg
jmp
xchg
mov
xchg
jno
mov
mov
icebp
fs
xor
pusha
mov
clc
dec
mov
fs
jmp
outsl
fucom
dec
push
clc
lods
pusha
add
pop
cltd
push
jle
int
in
aam
push
cmpsb
dec
mov
pushf
jle
ret
ss
fwait
call
pop
cmpsb
aam
int3
mov
leave
loope
cmc
jbe
fs
xchg
xchg
hlt
scas
sbb
inc
cmp
add
cmp
je
insl
fidivrs
xchg
insb
cmc
lcall
fstpl
aam
sub
add
shlb
in
jmp
xorl
jg
inc
out
lock
inc
cli
cli
and
lock
imul
popa
test
mov
aas
xlat
sub
int
cmp
test
fldl
inc
out
xor
addr16
sub
stc
scas
daa
es
ret
mov
dec
jae
jecxz
test
je
pop
leave
bound
lcall
arpl
mov
insb
mov
sbb
jle
pop
shrb
xchg
inc
push
dec
dec
dec
and
dec
sub
or
mov
ret
loop
std
loop
xor
adc
insl
cmp
loope
xchg
jb
xlat
lret
xchg
sub
or
int
pop
scas
push
dec
add
fistpll
test
cmp
sub
mov
out
fldenv
adc
jne
sub
xchg
mov
and
pop
fstps
adc
and
nop
outsb
lret
push
mov
ret
stc
sbb
adc
and
push
inc
add
dec
sbb
push
push
add
xor
sub
push
cmp
or
leave
mov
das
repnz
jle
shll
out
mov
pop
sub
xchg
adc
popa
addr16
add
adc
lret
push
xchg
xchg
daa
xchg
pop
inc
jp
adc
bound
sti
loop
movsb
dec
mov
lret
data16
loope
xor
shll
sub
mov
mov
cltd
mov
jae
pop
mov
mov
idivl
repnz
xor
xchg
scas
xlat
pop
and
sbb
out
inc
adc
ret
jb
lods
out
xor
sbb
dec
inc
jns
push
aam
in
inc
cmp
inc
add
xchg
fnstcw
mov
xorb
popw
in
and
mov
fidivs
push
adc
pop
fsubrs
xor
test
or
ljmp
sbb
pop
out
bsr
push
daa
push
mov
inc
cli
fsubs
in
inc
je
adc
jno
mov
or
and
push
fwait
sbb
std
dec
jecxz
loop
jecxz
ja
mov
ficomps
repnz
orl
and
cmc
arpl
loopne
jl
add
aad
jmp
inc
xchg
sub
cmp
fistpll
loopne
push
pop
test
mov
pop
aam
and
imul
and
pushl
cwtl
sub
dec
inc
jl
mov
call
jge
adc
les
lods
out
xchg
push
test
aam
xchg
sub
sahf
ret
sub
ror
leave
lahf
or
xor
es
xchg
jmp
and
fwait
jl
int
repnz
and
mov
inc
cmp
jmp
pop
xchg
inc
jb
fwait
adc
or
scas
out
cld
inc
pushw
ret
enter
pusha
xchg
pusha
test
dec
jp
xor
or
repnz
inc
repnz
mov
enter
sub
repz
int
into
xor
in
push
cmpsb
xchg
popa
cmpsl
and
in
jg
fisubrs
cmpsl
insl
mov
mov
adc
push
fs
iret
mov
mov
or
addr16
stc
std
inc
mov
xor
addr16
jge
mov
imul
and
ja
xor
rorb
push
data16
mov
or
push
cmp
shrb
jo
or
push
pop
testl
xor
jg
or
push
inc
ja
sub
jle
les
or
out
fisubl
xchg
fs
cmp
lods
in
mov
jno
jb
mov
xchg
shrl
ror
ss
dec
mov
sub
notb
jae
jb
mov
push
jno
aam
xor
outsl
adc
hlt
inc
sub
outsl
jae
cmc
xchg
in
or
jmp
shrl
mov
lods
xorb
xchg
aas
xor
push
jnp
push
mov
push
xchg
repz
aaa
jg
movsb
pushf
inc
notb
cld
out
jecxz
xor
dec
rep
or
fisubs
mov
or
mov
daa
jecxz
dec
lret
lods
or
or
js
test
and
lods
push
mov
stos
stc
xchg
aas
xchg
lret
adc
lcall
xchg
dec
or
test
or
mov
dec
imul
push
mov
outsb
shlb
mov
jns
shl
pop
cmp
int
cmp
jne
jne
cld
fwait
lods
jb
shrb
popa
hlt
xchg
jp
add
sti
pop
push
xchg
fdivl
jne
xchg
pop
cmp
lock
jp
inc
popa
mov
inc
mov
clc
jl
xchg
loope
inc
hlt
repnz
mov
mov
stos
ret
movsb
push
insl
add
loop
out
cmpsl
fnstsw
mov
mov
cmp
sub
call
dec
sarl
lret
jl
mov
xor
std
test
jno
out
rclb
addr16
jnp
jp
lds
