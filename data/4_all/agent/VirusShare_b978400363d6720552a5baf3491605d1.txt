ss
in
lahf
int3
jmp
or
jne
insb
lahf
int
mov
test
or
popa
sbb
mov
ds
decb
test
cmpb
xchg
jnp
imul
into
jb
in
fldcw
test
lods
adc
subl
push
jp
subb
fldcw
test
sub
pop
dec
paddw
test
mov
xorb
jle
sti
int3
add
call
in
sbb
add
push
lea
mov
rep
movl
add
test
adc
jmp
mov
xor
sti
into
adc
dec
shl
mov
fistpll
rolb
mov
ja
popf
jno
sub
outsl
data16
mov
and
mov
stos
pusha
roll
cmp
jbe
ret
shl
cmp
or
fstps
leave
and
shll
adc
sarl
shl
int
adc
rcrb
jmp
movl
adc
inc
add
jmp
subb
mov
dec
or
rorb
mov
insb
aas
sub
test
xor
xor
pop
or
mov
popf
xor
lds
lock
sbb
xor
dec
xor
pop
push
add
loope
add
xchg
js
mov
pusha
out
stos
int3
cmp
sub
clc
inc
clc
jae
rcr
add
add
loope
xor
scas
shl
inc
clc
cmp
inc
sbb
pusha
adc
push
pop
add
and
add
xor
sbb
mov
xchg
in
pop
bnd
pop
shlb
and
sub
sub
jg
jl
push
push
mov
je
ret
jb
je
add
std
daa
cli
rcll
xor
mov
je
cltd
in
idiv
or
jne
lock
or
cpuid
mov
insl
in
dec
test
int3
je
icebp
xor
xchg
add
in
or
adc
std
call
call
orl
jno
mov
pop
jno
cmp
sahf
lock
dec
lret
mov
sub
inc
rolb
xchg
push
inc
inc
and
pop
dec
dec
xor
xor
or
push
push
push
stos
add
pop
mov
pop
ret
jns
paddb
clc
mov
add
bnd
cld
cmpl
je
call
sbb
aad
inc
cs
adc
lock
adc
rcl
fnstcw
add
and
sub
xorl
or
mov
orb
sahf
in
mov
push
or
or
out
insb
mov
movl
out
clc
les
loop
clc
add
mov
adc
or
add
adc
sbb
mov
shl
or
and
or
popa
adc
sbb
mov
mov
lret
in
in
pop
adc
je
jl
sbb
add
add
or
daa
or
cmp
and
cmp
sbb
jbe
or
or
scas
xor
aaa
and
sarb
rol
or
adc
lcall
call
mov
dec
xor
in
push
jle
pop
or
daa
mov
sub
mov
add
dec
push
mov
sbb
push
outsl
push
push
mov
pop
mov
jnp
push
xorb
push
mov
or
pop
inc
sub
mov
xor
scas
add
adc
into
add
sbb
shr
fidivrs
sarl
add
xchg
or
mov
ret
cltd
jbe
cld
outsl
pop
or
repnz
inc
test
out
inc
sbb
mov
add
sbb
pop
push
jns
sbb
inc
and
sbb
sbb
and
mov
pop
push
adc
sub
das
nop
lret
leave
inc
and
push
add
mov
cltd
inc
cmpsb
in
sbb
sbb
and
xchg
add
sub
sub
and
add
xor
lret
inc
call
xor
mov
push
sub
or
xchg
inc
iret
fs
push
enter
aad
inc
adc
enter
xor
xor
imul
jb
cmp
or
scas
xor
xchg
rcr
xor
in
adc
add
orl
xchg
xorl
and
or
push
xor
inc
fwait
mov
fs
sub
cmp
mov
jl
fs
and
nop
add
fadds
lret
movl
mov
adc
lret
add
pop
add
sub
push
xchg
jg
or
pop
dec
pop
popw
cmp
hlt
cli
add
push
addb
cld
cmpsl
testb
addb
pop
sub
jl
and
fcmovnb
loope
mov
lea
out
outsb
xchg
xor
loopne
pop
stos
add
inc
hlt
mov
xor
fcoml
sbb
cmpsl
adc
icebp
add
sub
aaa
mov
sub
jmp
mov
les
push
stos
and
adc
xchg
mov
or
out
add
pop
or
movb
push
ret
adc
push
je
mov
mov
adcl
add
cmp
call
repnz
ret
and
faddl
lret
in
shll
or
or
pop
inc
call
sbb
js
xchg
sub
add
adc
enter
ljmp
add
push
pop
clc
clc
dec
push
jns
inc
add
clc
or
or
hlt
in
pop
inc
hlt
or
jnp
cmp
pi2fw
or
in
push
push
mov
adc
sti
in
movsb
jp
push
sarl
add
and
jmp
push
sub
inc
jnp
lods
dec
lock
call
push
loope
xor
js
orl
fwait
sub
xchg
jecxz
pushf
push
in
jno
push
call
imul
push
cmp
add
scas
jne
mov
in
lock
or
cld
inc
xor
cmp
bound
cwtl
push
call
add
xchg
and
in
cmpsb
loop
add
loopne
dec
cmpsb
in
call
nop
loopne
fsub
inc
scas
fs
mov
call
in
inc
jo
bound
push
leave
xchg
dec
rcll
clc
hlt
and
test
clc
jb
push
jno
xor
and
cld
in
jb
xchg
pop
or
cld
enter
clc
loopne
dec
leave
adc
or
cld
clc
push
pop
enter
mov
call
leave
xchg
fdivr
in
dec
leave
adc
faddl
add
clc
loopne
and
in
test
hlt
fsubr
inc
xor
leave
adc
and
clc
or
xchg
pop
hlt
lock
clc
hlt
lock
leave
xchg
cld
in
xchg
dec
leave
adc
cld
adc
lock
xchg
pop
leave
cld
clc
hlt
pop
enter
call
and
enter
loopne
and
jb
call
enter
enter
in
fcoml
jecxz
push
push
pop
enter
stc
lods
push
addl
dec
adc
add
cwtl
in
inc
mov
and
loope
push
in
test
rol
jo
jbe
mov
or
movsb
in
pop
xor
ret
jg
popa
rclb
or
fs
xor
push
add
mov
adc
imul
mov
int
call
or
movsb
inc
xchg
add
pusha
dec
xchg
cld
add
fucomip
mov
xchg
stc
lret
test
and
adc
ret
sbb
inc
add
adc
add
push
mov
inc
or
jb
mov
inc
or
shrb
or
inc
or
pop
push
cmp
inc
fcompl
lock
mov
rolb
add
inc
scas
dec
cltd
movsb
cmp
cs
fmull
sahf
scas
dec
xchg
adc
orb
mov
dec
lods
dec
lock
add
hlt
mov
xchg
pop
clc
cld
andl
push
jb
in
add
call
fsub
andl
push
xor
fsubrl
mov
loopne
xchg
mov
pop
cmpsb
in
push
push
lock
or
and
lock
xchg
push
hlt
sbbl
xor
dec
dec
lock
jecxz
clc
push
fstpl
cld
lahf
sub
loopne
push
leave
in
mov
fs
cs
call
adc
xor
push
jb
call
dec
sub
jecxz
xchg
pop
leave
loopne
call
mov
push
lock
push
jb
hlt
clc
sbbl
dec
dec
leave
xchg
lock
xorl
clc
pop
jb
push
cld
lock
or
mov
hlt
imul
mov
sbb
push
fmull
scas
fs
push
jb
mov
sub
sub
xor
in
faddl
mov
loopne
push
pop
repnz
call
jg
lods
push
push
lahf
pop
sub
xor
sbb
adc
lahf
mov
inc
mov
push
mov
in
push
nop
dec
push
push
cltd
inc
push
in
push
push
loopne
adc
cmp
push
es
add
xchg
sbb
loopne
and
call
lods
lahf
int3
add
inc
das
je
push
push
mov
mov
movsl
or
sub
add
cmp
je
xor
xchg
hlt
movsl
popa
and
xor
in
mov
dec
daa
inc
loopne
test
pusha
das
cmpb
xor
arpl
mov
je
sub
jge
push
lds
in
pop
cmpl
je
or
stc
push
pop
inc
aas
push
test
incl
ljmp
jl
mov
pushf
cmpl
jne
inc
push
push
lods
xchg
jl
push
pop
lcall
test
sub
push
adc
push
lea
lret
ja
cmpsl
adc
subl
movl
clc
std
movl
fcoml
fcoms
dec
loope
mov
push
add
jl
bound
or
jns
sbbl
pushl
jne
loopne
and
sub
pop
cmpsl
sti
push
in
fmuls
xchg
lods
adc
ret
add
jge
lock
add
pop
ds
in
sbb
or
jns
push
or
adc
sti
fstpt
das
shl
mov
imul
jmp
xchg
test
adc
cltd
lock
repz
insb
std
fwait
inc
jns
ja
dec
push
std
lret
cs
mov
loop
or
mov
aas
lea
jo
in
push
pusha
or
push
mov
xchg
jbe
lods
mov
aaa
lret
xorb
push
mov
mov
sbb
cwtl
xchg
popa
inc
push
jno
mov
pop
push
xchg
jecxz
push
push
inc
lea
push
xchg
or
imul
cmpl
shll
lds
test
or
push
dec
or
cmp
hlt
popa
ss
or
xchg
add
pop
hlt
xchg
jl
nop
inc
push
push
enter
dec
sbb
stc
test
mov
rolb
out
cmp
mov
sub
cmp
lahf
movb
xchg
and
xor
xchg
sahf
inc
inc
jae
pop
nop
subl
adc
cmp
push
dec
adc
sub
js
int
shll
mov
cmp
out
jg
adc
test
sbbl
lea
popf
sbb
xchg
mov
out
pop
jg
adc
cwtl
adc
fs
xchg
lods
pop
inc
stos
cwtl
xchg
rolb
cmp
mov
ljmp
xor
pop
jecxz
lcall
inc
xchg
or
aam
shll
sub
test
stos
shll
cmpsb
xchg
lock
inc
cmp
imul
add
cmp
inc
and
into
add
mov
sbb
test
add
xchg
lods
clc
jg
scas
rcrb
data16
lods
mov
jne
notb
or
mov
lea
into
and
aas
sub
enter
push
pop
xor
sub
aad
sub
and
inc
xor
add
push
add
inc
or
imul
sub
ret
or
push
jno
add
cmp
push
sbb
dec
add
push
test
and
xchg
push
test
jne
leave
mov
sti
enter
enter
lea
push
or
and
cld
mov
or
inc
rcll
lea
leave
test
cmp
outsl
xor
jno
out
sbb
std
lahf
call
gs
sbb
mov
jnp
mov
or
mov
pop
std
mov
xchg
push
lret
add
dec
jl
call
xchg
clc
out
mov
sbb
xor
popa
test
or
test
test
adc
add
sbb
and
push
adc
sub
lds
fbld
inc
dec
in
pop
pop
aas
out
cld
aas
aad
jecxz
pop
pop
pop
add
sub
dec
pop
and
fdivr
dec
add
ret
mov
rcrb
push
mov
ret
jo
popa
in
xchg
pop
xchg
jae
test
jg
cmp
dec
popf
daa
mov
pop
mov
gs
enterw
aas
sar
or
daa
loope
mov
xchg
xchg
mov
xor
mov
pusha
cmp
sub
inc
cli
push
je
negl
pop
xor
push
in
or
jle
popa
cmpsb
popf
hlt
stc
shl
push
mov
fs
dec
jl
jge
pusha
call
sti
test
ss
push
jno
or
cmp
pusha
add
push
mov
scas
cmp
pusha
dec
jge
add
jg
pop
aas
dec
adc
and
push
and
cmp
inc
xor
mov
pop
cmp
xchg
fdivr
adc
add
cmp
clc
push
iret
add
add
pop
loopne
loopne
cmp
sahf
sti
sub
xchg
mov
jb
xchg
and
push
push
push
or
fildl
lock
popf
outsb
pop
and
pusha
and
jne
jns
cli
shrb
adc
inc
and
adc
ret
and
or
xchg
add
sbb
outsb
push
popa
cmp
cmc
mov
jge
or
mov
aas
mov
cmp
ficoml
aam
rcrl
pop
leave
addl
push
hlt
test
jnp
mov
pushl
or
int3
pop
out
cwtl
xchg
sbb
gs
in
iret
ret
xchg
les
adc
lahf
addb
or
jne
pop
dec
add
out
and
mov
jne
sbb
jge
inc
loopne
sub
xchg
test
inc
lea
jecxz
sbb
dec
jne
insb
cld
cwtl
imul
sub
push
jmp
sub
popf
pop
rcll
pop
shl
adc
sub
test
xchg
mov
push
mov
jo
loope
add
xchg
addr16
xor
or
sbb
or
xchg
loopne
test
adc
mov
jg
jne
cmpsl
cmp
jmp
insl
add
mov
xchg
pop
sub
mov
dec
filds
pushf
ja
fstps
or
jl
cmp
cs
or
pop
cmpb
pop
inc
adc
pop
imul
lock
stos
jge
mov
inc
clc
push
mov
add
sub
nop
cmpl
orb
or
push
mov
aam
add
mov
sub
aaa
and
inc
mov
rorb
push
cmp
push
mov
push
mov
pushf
push
push
lods
xor
push
dec
lods
push
test
mov
pop
and
inc
mov
push
jae
cld
leave
add
pop
and
mov
mov
jb
pushf
mov
and
leave
mov
mov
jb
fmuls
xchg
or
add
nop
stos
push
pop
fistpl
js
dec
mov
bound
aad
push
cmp
dec
nop
pop
scas
and
lea
push
mov
jo
addr16
imul
sahf
mov
add
std
xor
cmp
je
mov
ds
fwait
pop
js
and
fstpt
loopne
sbb
push
push
test
stos
cmp
js
mov
pop
lock
sbbb
jp
xor
shlb
in
addl
inc
sub
mov
sub
mov
mov
cmp
mov
loopne
scas
sub
mov
xor
adc
adc
call
repnz
fs
enter
nop
add
push
xchg
pushf
xorb
or
and
cmp
pushf
xor
stc
xchg
fadd
pusha
pop
pop
push
dec
push
mov
test
aaa
stc
in
cmp
push
push
iret
cmp
pop
push
adc
xchg
jns
enter
or
jle
mov
mov
enter
or
adcb
enter
pop
adc
test
and
stc
adc
or
js,pn
es
jecxz
xchg
repz
mov
movsb
adc
hlt
data16
test
lods
cld
inc
jns
add
je
inc
mov
int3
dec
test
pop
lock
mov
mov
and
push
push
cli
insb
xor
xor
and
or
add
xor
xor
pop
addl
add
mov
orb
in
and
fmul
xchg
pop
enter
push
inc
icebp
scas
out
lea
add
cld
xchg
xchg
xchg
or
or
mov
popa
mov
loop
sbb
in
inc
cmp
xchg
sub
dec
lock
mov
inc
mov
int3
mov
or
jmp
aam
mov
loop
add
orl
inc
ds
add
inc
and
fdivs
enter
les
stc
push
ds
roll
pushf
nop
and
cld
loopnew
inc
pop
mov
jo
add
push
int3
rolb
movsb
je
in
je
lea
andb
xchg
push
sub
mov
sub
cmp
hlt
cld
dec
ss
sub
lea
shlb
mov
arpl
pop
in
and
mov
xchg
cwtl
and
or
mov
xchg
fdivrl
sbb
cmpl
mov
xor
loope
punpckhbw
push
adc
stc
dec
xchg
mov
dec
push
test
out
loopne
sub
and
mov
roll
adc
insl
scas
mov
je
adc
cmpl
repnz
lock
mov
movl
xchg
jbe
repnz
inc
pop
cltd
mov
jl
icebp
divb
push
add
push
mov
inc
xchg
xchg
mov
enter
mov
mov
adcl
dec
jo
push
adc
ja
ss
mov
add
dec
mov
dec
movl
jle
lea
movsl
jb
mov
push
arpl
arpl
mov
sbb
push
pop
in
sub
push
sbb
fs
fisttps
frstor
push
sarb
in
adcl
xor
push
cli
std
xchg
pop
movsbl
jne
push
mov
std
add
add
leave
add
mov
push
and
mov
and
add
xchg
pop
sub
mov
push
xor
std
dec
loopne
mov
loop
dec
orl
jo
pop
in
fs
in
decb
jecxz
push
and
add
shll
cmp
jb
movsb
mov
scas
mov
adc
js
cmp
addb
or
test
insb
mov
leave
or
or
inc
xchg
mov
movl
or
mov
xchg
stos
pop
stos
mov
push
mov
mov
arpl
jne
mov
test
mov
adc
fdivrl
add
rcrl
inc
sub
pop
enter
cld
test
dec
ds
cld
push
test
pop
inc
xor
cmp
cld
lock
push
and
cmp
xorb
pop
fldl
or
movsl
lock
jecxz
cmp
les
add
cmp
mov
insl
outsl
into
enter
pop
decb
pushf
aas
cld
pop
add
add
inc
andb
mov
or
adc
xchg
adc
and
in
repnz
and
inc
cld
incb
cmc
xchg
jecxz
rolb
lock
mov
insb
lods
sbb
gs
xchg
mov
sub
add
scas
or
add
in
adc
dec
lock
je
lods
xchg
rolb
movl
dec
cwtl
cwtl
xchg
mov
add
mov
test
cld
in
dec
or
jp
lock
adc
shlb
cmp
punpckhdq
fadd
inc
mov
pushf
add
mov
and
cwtl
dec
xchg
sbb
dec
repnz
add
icebp
sub
js
push
sub
mov
xchg
mov
repnz
push
cld
add
in
mov
xor
les
popf
mov
mov
loopne
movsl
movsw
movsb
and
in
or
les
or
mov
fsubrp
je
mov
ljmp
ret
or
mov
les
rorl
jge
lahf
dec
les
rol
add
and
and
rol
cmp
jns
test
dec
push
mov
mov
mov
or
daa
ficoms
pop
or
adc
in
ds
enter
leave
fcmovnb
xor
addr16
mov
stos
adc
jbe
mov
cmp
je
jae
inc
add
lds
fcomps
shl
and
fucomi
mov
push
das
pop
dec
adc
out
das
mov
adc
or
or
inc
or
scas
addr16
aas
adc
outsb
cmp
cmp
dec
movsl
sbb
push
push
and
repnz
push
flds
mov
pop
dec
sub
dec
imul
aad
push
or
push
lret
mov
add
enter
pop
cmpb
jle
adcl
jg
mov
mov
mov
or
or
sub
xchg
rcrl
add
nop
or
in
dec
adc
adc
xchg
out
adc
adc
nop
add
cs
jns,pn
in
sbb
sbb
cmp
xchg
dec
sahf
pop
clc
and
xchg
out
push
and
cld
nop
add
xchg
dec
repnz
add
sub
ds
jb
sub
add
push
in
dec
sub
cs
out
das
or
xor
sbbl
repnz
xor
ss
adc
sbbl
leave
and
cmp
ds
sbb
ret
or
nop
lcall
es
lret
enter
sbb
sbb
aad
sub
and
and
dec
adc
push
out
loopne
mov
jmp
or
or
adc
push
sbb
add
push
fildll
loopne
mov
and
outsl
addl
push
sub
dec
sub
shlb
or
pushl
rdmsr
or
dec
hlt
or
jne
and
or
add
dec
call
ret
jne
xor
sbb
sbb
addr16
mov
sbb
xor
add
sbb
faddl
rclb
sbb
xchg
add
and
loopne
add
lea
test
mov
push
xchg
daa
nop
arpl
ljmp
dec
mov
cld
or
push
lock
hlt
and
or
add
cmc
add
adc
pushf
clc
aam
push
push
mov
add
push
sub
out
sub
ret
pop
add
pop
loopne
jl
loopne
sbb
pushf
cmp
sub
aas
sbb
lea
test
lret
mov
fcompl
sbb
or
adc
pop
aaa
mov
jmp
or
or
or
addr16
lock
add
pop
cs
clc
clc
pop
lock
hlt
dec
inc
push
sbb
hlt
hlt
aas
push
xchg
xchg
hlt
hlt
inc
dec
in
xor
hlt
dec
call
fs
mov
loopne
loopne
inc
es
loopne
enter
loopne
push
or
xchg
jmp
cld
cld
scas
enter
mov
xor
leave
cld
cld
cld
call
hlt
xor
aas
in
pop
ret
push
in
sub
jp
sbb
fimuls
xchg
sub
out
push
loopne
loopne
jecxz
push
sbb
and
sub
mov
mov
jns
das
aaa
ss
xor
daa
inc
sub
dec
in
cld
nop
out
pop
hlt
das
push
hlt
lock
call
and
call
shrl
icebp
push
or
dec
loopne
fdivl
enter
mov
mov
hlt
xchg
xor
cld
cs
sbb
and
cld
hlt
movsb
cmpb
in
dec
inc
push
sbb
in
in
mov
xchg
xchg
in
in
in
call
cmp
cmpsb
jne
dec
loopne
cmpl
mov
loopne
leave
enter
loopne
inc
xchg
daa
xor
outsl
xor
jle
inc
sub
push
clc
aad
sbb
xchg
inc
inc
inc
hlt
hlt
hlt
cltd
fs
hlt
hlt
hlt
hlt
add
insb
in
push
jne
call
in
xor
enter
in
in
sbb
pop
push
in
mov
sub
fsubrl
and
cld
and
and
cwtl
stos
pop
fdivr
cld
xor
leave
enter
cld
sub
mov
cld
hlt
push
and
enter
xor
pop
ja
call
mov
call
mov
in
sub
add
pop
xor
adc
add
cmp
lds
fnsave
daa
push
cmp
or
in
and
push
cld
hlt
sbb
xor
in
in
faddl
stc
jp
sahf
in
in
in
addr16
xchg
dec
in
in
loopne
pop
mov
dec
add
fs
mov
faddl
sbb
jl
dec
dec
inc
arpl
adc
gs
hlt
hlt
nop
pop
and
mov
fs
hlt
hlt
hlt
ret
xchg
dec
in
call
out
call
or
loopne
xchg
inc
inc
loopne
loopne
cltd
fs
loopne
push
xlat
adc
jnp
pop
and
cld
in
dec
cltd
fs
cld
cld
cld
cld
or
es
call
add
dec
enter
pop
mov
dec
xor
in
in
lret
xchg
pop
loopne
mov
xchg
jo
cmp
call
dec
xor
or
sbb
scas
lds
repz
xor
cs
inc
inc
ds
mov
sub
fs
xchg
inc
call
cltd
fs
xor
or
faddl
stc
js
in
mov
xchg
dec
inc
fdivl
push
dec
cld
and
in
dec
cld
adc
push
fcompl
and
in
in
mov
xor
in
in
in
call
push
dec
fs
loopne
cmp
sbb
hlt
mov
loopne
and
and
loopne
daa
xor
loopne
outsl
xor
inc
sub
push
sbb
fwait
shl
hlt
leave
enter
hlt
hlt
mov
fnstenv
hlt
in
push
jne
call
in
cld
nop
out
stc
push
sbb
adc
sbb
push
sub
add
and
and
adc
adc
unpckhps
jo
cmp
adc
xor
and
fwait
or
outsl
repnz
pop
loopne
sbb
out
adc
or
xor
add
out
std
imul
sbb
lea
and
fs
fwait
in
cld
cld
dec
inc
es
cld
cld
nop
in
xchg
cld
hlt
push
and
sbb
call
adc
call
xor
leave
call
sbb
repnz
sub
and
mov
call
sbb
pcmpeqd
pop
sbb
xor
repz
nop
pop
roll
xchg
add
in
repnz
dec
in
adc
dec
dec
sub
loopne
dec
idiv
repnz
mov
adc
sbbl
push
sbb
sub
shl
dec
push
or
inc
cld
push
xor
and
cld
hlt
in
in
push
jns
sbb
in
xchg
xchg
dec
inc
in
in
in
movsb
xor
loopne
xor
sub
imul
adc
decl
adc
and
and
xor
mov
add
stc
xchg
call
fwait
xchg
in
mov
sub
adc
mov
add
mov
enter
add
popf
rorl
fadd
sbb
mov
add
jmp
or
gs
hlt
repnz
loop
hlt
loopne
push
sbb
jae
jae
adc
insb
mov
sub
in
inc
dec
and
and
xchg
add
and
or
cmp
in
dec
cmp
repnz
xchg
sub
int3
mov
mov
loopne
loopne
gs
and
loopne
fcompl
pop
pop
push
popa
dec
gs
mov
in
dec
cld
xchg
dec
inc
push
cld
cld
cld
nop
shlb
call
leave
aad
dec
in
and
jb
xchg
and
xchg
pop
jb
lock
xor
in
sub
outsl
sub
sub
je
in
in
xor
sbbb
or
inc
loopne
fs
sbb
mov
frstor
sub
dec
push
sbb
push
sbb
fs
or
push
dec
in
cld
hlt
das
xchg
sbb
jb
hlt
sub
sub
sub
leave
and
hlt
hlt
hlt
jb
sbbl
mov
stos
test
fs
xchg
call
aaa
sbb
dec
in
push
xor
dec
nop
stos
aad
in
mov
fs
adc
fs
dec
cmp
in
fcomp
dec
cld
sub
cmp
sub
inc
inc
cs
clc
xchg
add
in
clc
clc
aas
sbb
fsubrl
and
in
in
in
dec
xor
leave
in
in
in
in
stos
and
call
lods
push
sbb
and
sbbl
loopne
xor
enter
fdivl
push
test
xchg
sti
sbb
push
xor
leave
and
xor
xor
xorl
xchg
sbb
cld
cld
enter
cld
clc
cmp
sbb
leave
cmp
mov
jbe
hlt
xchg
dec
inc
push
hlt
hlt
hlt
mov
gs
hlt
hlt
in
push
push
in
es
jne
in
addb
cld
xor
and
xor
enter
xor
and
incl
incl
jmp
jb
incl
cld
add
sbb
ds
in
push
push
xor
nop
inc
cmp
cmp
and
cmp
and
call
incl
add
cmp
sub
rorb
insl
xor
push
dec
cmp
push
in
dec
cmp
cmp
enter
or
or
xchg
in
or
dec
xchg
dec
add
inc
adc
lock
inc
enter
xor
inc
inc
xchg
add
in
inc
inc
cmp
or
or
cmp
clc
leave
enter
jg
mov
xor
sbb
leave
and
xor
addl
adc
adc
and
sbb
or
mov
clc
leave
dec
repz
xor
and
push
dec
dec
leave
sbbl
sbb
jb
adc
adc
sbb
and
adc
leave
enter
inc
xchg
cmpsl
aad
mov
dec
sbb
leave
and
xor
orl
sbb
sbb
and
sbb
adc
mov
clc
leave
push
push
arpl
push
xor
and
push
push
push
leave
sbbl
sbb
jb
sbb
sbb
sbb
and
sbb
leave
enter
sub
adc
mov
push
sbb
leave
and
xor
adcl
and
and
and
sbb
sbb
adcb
leave
pop
test
mov
xor
and
and
pop
leave
sbbl
sbb
jb
and
and
sbb
and
and
leave
enter
cmp
sbb
push
or
sbb
leave
and
xor
sbbl
sub
sub
and
sbb
and
mov
clc
leave
fs
insl
sub
xor
and
dec
pusha
pusha
leave
sbbl
sbb
jb
sub
sub
sbb
and
sub
leave
enter
adc
sbbb
dec
fs
leave
and
xor
andl
xor
xor
and
sbb
sub
mov
clc
leave
insb
push
jae
gs
and
push
push
jb
push
jb
xor
xor
sbb
and
xor
leave
enter
mov
mov
insb
sbb
leave
and
xor
subl
cmp
cmp
and
sbb
xor
mov
leave
je
leave
ret
leave
and
push
jo
leave
sbbl
sbb
jb
cmp
cmp
sbb
and
cmp
leave
enter
test
xchg
stos
add
nop
inc
cmp
inc
inc
cmp
add
in
inc
inc
inc
sbb
inc
enter
jl
call
push
sbb
jb
sbbl
sbb
inc
inc
inc
and
inc
jg
xchg
mov
addb
inc
xor
jl
jb
and
enter
dec
dec
jb
xchg
dec
pop
sbbb
test
jo
dec
ret
push
mov
xor
sub
push
pop
push
sbb
and
dec
dec
dec
jb
sbbl
mov
out
sub
push
insb
fisubl
push
dec
test
push
cli
jne
mov
je
cmc
push
out
jo
jb
and
xor
and
sub
pop
ret
sbb
xchg
shll
jge
add
out
push
mov
jmp
loop
mov
push
dec
push
sbb
dec
push
in
push
push
push
je
nop
fwait
and
jns
adc
mov
push
sbb
nop
mov
pop
cmp
pop
adc
xchg
sub
and
jno
xor
fs
nop
nop
nop
nop
nop
xchg
inc
es
jl
inc
push
mov
pop
es
cwtl
push
cmp
push
fs
xchg
cmpsl
cmpsl
xchg
xchg
xchg
cmp
cltd
fs
xchg
inc
andb
pusha
pusha
pusha
xor
and
or
pop
ret
push
shll
cwtl
cwtl
cwtl
jmp
cwtl
dec
test
cmp
fwait
fs
cmp
incl
xchg
mov
aaa
push
fs
inc
mov
sbb
pushf
pushf
pushf
push
mov
and
push
sbbl
mov
movsb
movsb
dec
ja
daa
and
mov
leave
enter
mov
mov
in
enter
outsl
pusha
cltd
in
test
xchg
mov
xchg
xchg
inc
inc
movsb
movsb
movsb
cmp
movsb
nop
jo
cmp
jo
xchg
dec
cs
lods
lods
imul
sbb
sbb
fs
test
test
inc
xchg
inc
es
je
cmp
xchg
je
je
cltd
in
je
mov
push
add
stos
fmuls
inc
inc
sahf
mov
sbb
lods
cwtl
js
inc
cmp
js
dec
cmp
mov
add
mov
pushf
pop
sbb
lds
sbb
in
inc
jl
jl
in
add
add
rep
cs
xchg
mov
sbb
mov
mov
mov
dec
inc
jp
pop
mov
mov
sbb
cmpb
jl
pushf
lods
dec
mov
jle
out
orb
enter
mov
mov
push
insb
push
test
adc
push
pop
and
or
xor
arpl
and
mov
mov
dec
or
imul
je
jp
mov
pop
iret
shlb
push
rcll
and
test
and
orl
enter
mov
mov
push
enter
stos
add
or
mov
leave
enter
les
mov
xor
mov
nop
and
nop
aas
add
leave
mov
int3
sub
mov
nop
pop
enter
xor
enter
and
and
enter
nop
in
inc
fwait
mov
aad
insb
push
movsb
mov
enter
int3
int3
int3
xor
enter
cwtl
cwtl
daa
orl
xchg
aam
jle
sub
xor
enter
rcl
orl
rcl
mov
pushf
pushf
pushf
pushf
jb
enter
fsubrs
in
rcr
bnd
jnp
mov
jns
add
mov
sbb
or
or
in
mov
and
adc
adc
xor
sbb
lret
enter
and
and
and
adc
pop
push
or
clc
les
adc
ja
mov
insb
or
out
out
jns
or
sub
mov
sub
jae
mov
add
mov
test
out
cmpsl
cmp
adc
ja
inc
stos
test
bound
nop
sbb
sub
dec
cmp
lahf
sub
jo
sbb
fdivs
jge
adc
pop
aad
mov
pop
dec
inc
jb
cltd
or
push
pop
leave
shll
sub
dec
adc
call
or
sahf
jns
movsb
in
je
nop
loopne
in
dec
popf
push
xchg
sub
dec
loop
pop
sbb
push
sub
les
sbb
leave
in
pusha
mov
loopne
push
pop
add
sahf
or
pop
in
mov
mov
add
add
aaa
mov
ja
inc
lods
mov
repz
call
xchg
adc
or
mov
add
cmp
mov
cmp
ja
or
jae
pop
in
in
push
push
xchg
pusha
outsb
imul
add
and
arpl
mov
sbb
inc
adc
inc
cmpsb
sbb
mov
cltd
mov
or
sbb
adc
sub
or
adc
fistl
or
xchg
in
or
or
xor
or
adc
jb
adc
sbb
mov
inc
xchg
inc
outsb
jno
sbb
sbb
enter
sbb
enter
sbb
sbb
jbe
and
sbb
mov
sbb
push
sbb
sbb
mov
jno
and
or
adc
adc
xor
or
xor
test
add
enter
cld
test
hlt
pop
fmul
enter
aam
int3
enter
enter
enter
mov
enter
addb
nop
xchg
cwtl
mov
out
pushf
or
movsb
test
lods
inc
inc
sahf
and
pop
pusha
fs
inc
inc
inc
push
inc
inc
inc
pushf
cwtl
xchg
nop
inc
inc
inc
inc
cmpb
mov
in
loopne
fcomps
shl
imul
fs
or
in
test
lock
xor
movb
mov
add
add
fsubl
push
sbb
mov
int
fstpt
loope
push
or
or
cmp
inc
or
insb
ss
dec
or
pusha
adc
int
mov
jo
js
adcb
nop
mov
insb
ss
cwtl
pop
mov
ss
int
sbb
sbb
mov
insb
pop
loopne
call
sbb
push
and
mov
mov
push
sub
and
sub
add
push
subb
add
lock
add
sbb
mov
xor
cmp
je
adc
cmp
mov
adc
cmpb
lods
push
inc
push
and
and
xorl
sbb
std
adc
mov
add
mov
push
or
push
mov
lea
dec
sti
out
call
add
pop
add
insb
icebp
add
arpl
loopne
xchg
rorb
sub
lea
cltd
and
sarb
rcll
add
add
add
sub
sar
add
lea
pop
sub
inc
or
xchg
js
fisubrs
mov
out
jnp
pop
leave
test
and
movsb
add
mov
notl
mov
aad
imul
fwait
add
cmp
pop
sbb
push
sbb
mov
xor
in
mov
scas
jle
jmp
xor
add
mov
shl
adc
filds
rorb
mov
movaps
subl
inc
jmp
mov
sti
loop
out
std
xor
add
decb
pop
fsubr
mov
aaa
push
adc
call
stos
inc
adc
xor
roll
add
lock
mov
inc
flds
mov
and
pop
mov
push
sbb
cmp
jbe
cmp
sub
sar
cmp
pop
adc
sbb
paddd
es
mov
mov
sbb
cld
out
jo
sub
add
add
dec
jne
jg
sbb
or
ret
mov
jl
fistpl
jl
fisttpll
aam
ret
xlat
mov
imul
jle
dec
int
ret
rorb
adc
out
jg
mov
bound
inc
mov
mov
xor
mov
xchg
mov
mov
or
jmp
and
es
push
sbb
loopne
inc
popf
sbb
shll
cmp
jg
xor
xor
js
lret
add
fs
adc
out
scas
add
mov
addr16
mov
adc
push
add
pop
push
aas
dec
mov
mov
es
incb
mov
pop
sbb
lahf
outsl
or
mov
xor
lret
addr16
push
imul
xorl
sbb
jo
mov
adc
xchg
mov
daa
sbb
sub
and
xchg
sub
ljmp
mov
sbb
cmp
loope
pop
subl
xchg
jle
xchg
loope
add
mov
ficompl
cmp
ret
ret
fdivl
xchg
xor
push
or
es
and
divb
or
xchg
and
xchg
mov
xchg
leave
add
push
test
cmp
dec
not
xor
add
rolb
fchs
xchg
mov
out
or
add
add
add
subps
out
jnp
clc
inc
dec
stc
pop
mov
ret
scas
jge
scas
add
add
add
mov
mov
nop
push
push
push
mov
fs
jg
add
adc
test
jge
mov
aas
adc
inc
pop
mov
pop
rorb
and
adc
stos
rorl
stos
cld
rolb
push
ds
fcomps
ss
pushf
inc
call
add
jno
sbb
das
or
lea
and
insb
sbb
fcmovnb
mov
les
ret
mov
push
cmp
jbe
add
fadds
mov
sbb
js
pop
jns
xor
push
mov
add
cli
fdivl
mov
shlb
idivl
pop
sub
in
cmpsb
mov
adc
push
push
push
inc
cmp
ffreep
or
xor
fdivs
push
and
or
cmp
ds
dec
rep
xchg
out
inc
js
ret
or
pop
sarb
xchg
icebp
pop
pusha
inc
pop
dec
push
push
into
mov
push
cmp
adc
mov
es
or
loopne
cmp
sub
sbb
mov
insb
mov
in
les
jge
cmp
xchg
in
out
mov
add
jmp
out
or
adc
cs
mul
xchg
push
push
ret
xor
test
into
movl
fcoml
outsl
push
or
sti
push
push
add
push
xor
dec
aas
sbb
dec
adc
inc
or
hlt
in
sbb
push
jae
scas
mov
ror
add
mov
mov
inc
and
adc
inc
adc
inc
add
sahf
stos
pop
or
loopne
pop
add
inc
mov
frstor
inc
and
orl
lahf
inc
mov
loop
add
pop
aad
xchg
inc
cltd
pop
pop
das
mov
test
push
insl
push
fwait
sub
dec
inc
mov
jno
pop
out
pushf
mov
jl
loope
mov
daa
cs
or
inc
pop
xchg
and
dec
sbb
lea
mov
mov
or
mov
call
push
data16
pop
jo
pop
push
and
cmp
add
mov
repz
cmp
test
add
push
pushl
ret
mov
pop
testb
sbb
mov
xchg
adc
dec
push
push
push
pop
jae
jns
sbb
cmc
sbb
mov
and
lret
cs
es
dec
sbb
dec
push
hlt
ja
cwtl
movl
call
sub
add
push
push
cmp
lock
je
scas
cmp
push
mov
push
shl
mov
stc
into
adc
xor
xor
push
notb
das
out
inc
inc
and
push
popa
pop
mov
mov
adcb
lret
sub
or
enter
pop
xchg
outsl
mov
into
mov
pop
xor
pushl
sbb
xchg
push
sub
mov
lcall
cmp
imul
jno
mov
dec
push
sbb
sbb
pop
sahf
loop
push
test
pop
je
and
ret
loop
inc
popa
or
std
or
inc
fidivrs
les
sbb
sub
call
and
iret
jns
jle
mov
sub
rol
push
lret
push
push
mov
mov
in
ljmp
in
cmp
lock
mov
and
aad
push
inc
jl
push
gs
xlat
shl
mov
rcrb
mov
sbb
inc
popa
add
fimull
inc
inc
popa
inc
es
adc
xlat
lock
lcall
fs
push
or
stos
and
xchg
mov
adc
movsl
aam
insl
mov
mov
bnd
push
or
push
push
jnp
in
or
shll
and
mov
inc
xlat
xor
add
jae
test
dec
mov
cmp
cli
sbb
or
push
mov
hlt
cld
sbbl
push
push
sbb
jo
sar
jb
cmp
mov
push
push
clc
out
outsb
or
ret
push
rep
mov
mov
mov
sbb
pop
adc
add
add
pop
inc
mov
dec
pop
pop
push
mov
decl
push
lea
pop
mov
mov
leave
dec
jne
ja
cmpb
mov
xor
aas
or
adc
push
pop
pop
mov
xchg
lock
pop
or
sbbl
mov
push
and
enter
pop
icebp
dec
dec
mov
adc
mov
mov
xchg
out
lea
cmp
xchg
adc
rorb
scas
or
dec
shl
jle
jl
mov
ja
je
ret
movswl
or
sbb
push
xor
adc
filds
mov
and
adc
mov
es
and
enter
dec
inc
adc
fimuls
in
cmpl
mov
push
cmp
xchg
mov
cmc
test
jne
or
xor
or
daa
adc
jl
sti
idivb
or
push
mov
dec
or
adc
xchg
dec
push
push
add
test
or
adc
aas
arpl
inc
cmp
jb
push
stc
push
or
cmp
add
in
jge
mov
and
or
sbb
pop
push
xchg
sub
fwait
jecxz
add
push
scas
shl
or
add
test
sbb
fidivl
inc
or
adc
out
sub
mov
push
sbb
pop
add
fisubl
cmp
inc
aad
inc
dec
jne
pop
addl
pop
dec
sbb
jge
cmp
sahf
push
aas
mov
dec
dec
sbb
inc
incl
fidivl
rorl
test
fs
or
jns
adc
mov
adc
int3
fimuls
and
mov
and
xor
push
add
mov
frstor
dec
out
lahf
gs
add
test
mov
daa
inc
lods
jnp
in
dec
inc
cmp
push
pop
dec
dec
sbb
xor
int
imul
sub
jp
pop
jae
shlb
dec
inc
push
and
in
push
push
xlat
testl
sub
imul
lahf
jns
movsb
pusha
push
mov
cmp
pushf
ret
addb
inc
nop
and
lahf
push
adc
cmpsb
jp
out
cmp
ljmp
push
addr16
sbb
insb
mov
popa
add
in
sub
mov
mov
clc
add
ret
adc
or
mov
shll
push
movsl
dec
mov
cmpsb
es
incl
sti
add
sbb
push
cmpsb
pop
dec
inc
fwait
mov
inc
popf
dec
jo
push
sub
or
fcomi
hlt
mov
cld
test
push
imul
push
xor
jmp
lret
pop
add
test
jg
fisttpll
std
dec
push
jmp
cmp
mov
adc
and
add
mov
inc
add
adc
xor
jl
mov
stos
test
andl
sub
insb
or
push
imul
add
push
stc
pop
sbb
add
ja
pop
sub
lock
add
jg
mov
cld
aas
inc
cltd
idiv
ret
cmp
jle
mov
bound
shl
xor
dec
inc
mov
mov
in
push
cmpb
inc
dec
pop
cmp
dec
mov
push
gs
inc
inc
std
cmp
dec
add
sahf
imul
mov
push
fisttpll
pop
sbb
test
jo
inc
xor
lea
add
cli
lock
mov
lea
cmp
jl
lods
cmp
out
or
test
sahf
mov
mov
test
int
pop
jle
movb
enter
mov
mov
mov
int3
rclb
push
js
in
adc
xchg
or
mov
lahf
push
sbb
push
adc
lea
jne
cmp
jo
out
mov
dec
push
daa
push
push
pop
push
nop
push
sub
push
ja
and
mov
jbe
inc
adc
push
mov
std
push
rcll
jle
inc
xor
pop
xchg
mull
or
fisubs
inc
adc
or
repnz
lds
pop
pop
adc
cmp
jl
std
cmp
jns
push
sysret
push
or
jge
mov
lahf
rorl
adc
imul
rep
push
shll
inc
adcb
ret
pop
dec
xchg
cmpsb
call
inc
jmp
push
std
pop
sbb
add
add
aad
xchg
add
mov
sub
and
or
xchg
and
pop
jns
decl
or
xor
push
add
sbb
pop
call
add
fiadds
int3
ja
xlat
dec
in
cmp
lret
mov
pop
cmp
jbe
pop
mov
cmp
adc
adc
out
lcall
mov
add
outsb
mov
mov
pop
pop
pop
dec
dec
dec
sbb
rclb
mov
movl
adc
dec
dec
xchg
popa
pcmpgtb
add
out
and
mov
push
sbb
sub
aad
pop
pop
rol
xchg
or
pop
pop
andl
sbb
pop
mov
fadds
dec
and
pop
adc
int3
add
dec
lock
xor
pushf
jns
lock
cmpsb
sbb
sub
push
push
and
aas
jo
lret
stc
imul
jle
add
cmp
mov
and
and
out
sub
cld
jmp
jle
push
loope
outsb
inc
mov
add
add
mov
mov
js
js
sbb
cltd
mov
pop
pusha
adc
call
mov
pop
or
sub
roll
cmpsl
xor
mov
xchg
mov
mov
clc
xor
and
mov
mov
add
cmp
jne
mov
fcomip
jmp
add
pop
lea
shl
jmp
mov
xchg
std
outsl
lahf
rorl
cmp
cmp
mov
jg
mov
inc
aas
lea
shl
push
cltd
mov
or
out
xor
into
fsubrs
xor
jne
adcl
ja
bound
pushf
mov
and
or
sbb
aas
add
pusha
and
cmpsb
and
gs
cmp
add
add
mov
sbb
rol
adc
dec
insb
add
add
imul
std
or
fcomp
push
mov
mul
inc
in
or
lahf
and
add
pop
xor
jp
and
sbb
cmp
ret
dec
jl
adc
enter
and
cmp
mov
push
jl
mov
scas
inc
fcoms
cmp
jg
aaa
add
adc
push
lea
cld
js
flds
pop
mov
scas
mov
jecxz
mov
ljmp
mov
in
jg
push
ljmp
push
out
fsts
sub
adc
sbb
pop
iret
or
adc
orb
pop
push
fists
add
xchg
mov
out
push
in
ret
xchg
roll
mov
adc
ja
add
ret
out
lret
dec
pop
jne
stos
cltd
imul
cmp
pop
push
addr16
pop
push
fwait
adc
add
push
mov
pop
sbb
jae
pop
mov
pop
sub
dec
push
lods
cmp
incb
cmp
dec
xor
fmull
or
sbb
inc
or
je
and
subl
mov
or
mov
and
adc
dec
les
repz
addl
js
jl
mov
imul
xor
sub
repz
xchg
mov
mov
pop
fbld
add
leave
test
jmp
pusha
pop
mov
les
pop
movsl
in
add
xor
mov
jge
lods
hlt
fbld
push
call
inc
fimull
mull
inc
mov
test
inc
push
xchg
fisubs
addr16
or
cmp
mov
cltd
jo
addb
dec
sbb
mov
or
mov
dec
inc
sbb
push
adc
rcrl
and
inc
sarl
xor
pop
xor
leave
xor
sub
imul
sub
push
push
cmpsl
in
outsb
mov
mov
jne
lahf
xchg
addl
rcrb
mov
dec
insb
mov
add
jnp
out
inc
adc
fistl
pop
add
sbb
push
adc
xor
pop
push
cmp
jne
push
sbb
pop
push
mov
mov
pop
mov
std
push
jl
movl
sbbb
or
sbb
cld
cmp
or
adc
sbb
jle
push
sbb
sbb
loopne
and
and
shlb
aam
jg
add
lcall
lea
in
das
sbb
inc
add
jge
dec
push
mov
add
jl
add
je
lea
adc
int
lea
push
js
push
ret
xor
test
jle
leave
fiaddl
adc
insl
je
cmp
jne
into
pop
lea
inc
fmuls
mov
divb
mov
cs
in
gs
push
mov
ret
mov
push
leave
mov
jbe
lret
dec
mov
and
jbe
std
sub
xchg
add
mov
pushl
je
idiv
add
adc
push
cwtl
sbb
cmpxchg
mov
scas
push
clc
inc
loopne
xor
pushl
or
or
push
repz
addb
test
or
xor
rolb
mov
pop
jmp
lock
push
sbb
sub
jl
shr
in
xor
add
loope
jge
or
push
inc
je
mov
dec
add
pop
cmp
adc
iret
or
add
or
cli
out
add
xchg
xor
jae
sbb
mov
adc
iret
aam
or
iret
pop
pop
stos
mov
das
pop
mov
push
mov
adc
xor
sbb
pop
add
add
cs
mov
clc
add
or
pop
push
xchg
dec
hlt
xchg
mov
adc
dec
fiadds
divb
add
test
lock
dec
lea
rorl
mov
aaa
sub
int
pop
or
lds
add
andb
loopne
mov
repz
push
js
hlt
pop
sarb
jg
mov
push
pop
inc
pop
mov
mov
and
pop
adc
xor
push
mov
add
out
or
mov
xchg
dec
and
mov
fs
or
cmp
xor
test
incl
cld
mov
sub
ret
dec
jne
cmp
jb
adc
adc
pop
adc
jecxz
and
loopne
popf
pusha
or
imul
mov
adc
addr16
add
sub
push
lret
and
loopne
pop
sbb
xchg
pop
xor
sub
xor
jg
addb
push
and
sub
inc
and
ret
inc
inc
sbb
cmp
mov
ret
push
fildl
adc
cmp
jne
repz
getsec
je
push
or
shl
imul
jp
dec
dec
and
sbb
js
or
adc
fcmovnbe
mov
fidivl
pushf
adc
scas
push
loopne
jl
mov
idiv
pop
jl
mov
xor
add
je
std
adc
cmpl
loope
dec
divl
inc
ret
dec
add
jmp
sub
xorl
sub
push
ja
inc
mov
inc
and
out
subl
sub
jmp
mov
jns
sub
sbb
inc
and
loope
insl
in
sbb
mov
push
push
inc
dec
xor
nop
testl
pop
out
push
push
ret
sbb
jmp
pop
pusha
xor
sarl
decl
ja
cmp
ja
xor
loopne
or
aaa
movsl
pop
adc
cmp
fcomps
mov
stc
dec
inc
sahf
icebp
lods
mov
and
and
pop
push
cmp
add
jle
jbe
mov
pop
adc
jns
jge
cmp
sti
sbb
lods
add
cmp
sbb
addr16
push
push
or
pop
mov
add
mov
pop
pusha
mov
sub
sub
test
loopne
mov
sbb
popa
dec
in
addr16
and
xor
pop
inc
dec
mov
xor
inc
shl
cmpb
in
add
sub
dec
and
dec
pop
mov
xchg
outsb
imul
sub
frstor
jmp
scas
pop
lret
sbb
jmp
daa
or
mov
enter
push
sbb
iret
sub
cmp
sbb
adc
mov
scas
pop
or
push
push
push
hlt
mov
push
and
push
sub
dec
push
push
lea
cmp
push
mov
push
ror
xchg
in
add
add
dec
jl
fstp
push
sbb
push
inc
scas
add
push
jecxz
sbb
jl
jbe
push
inc
adc
data16
push
adc
stc
and
dec
out
jae
adc
lds
sbb
stos
mov
jmp
inc
and
shl
mov
push
mov
sti
mov
push
adc
fildll
mov
jmp
mov
fdivs
icebp
jb
push
test
push
iret
add
dec
mov
jmp
dec
aas
aam
jae
test
push
inc
xor
mov
filds
pop
and
test
add
jle
test
ret
cmpsl
je
inc
mov
sub
adc
test
push
xor
and
in
out
test
add
sub
dec
dec
hlt
xor
xor
pop
sub
cmp
push
cmp
testl
aad
jno
cmpsb
sbb
xor
xchg
add
push
outsb
adc
ja
adc
enter
jns
xor
out
out
in
push
push
push
jnp
sbb
jmp
ror
shll
sub
push
and
adc
stos
enter
jl
sub
nop
pop
testl
sub
scas
jne
adc
add
into
push
dec
andb
lods
jns
pop
lock
mov
add
popf
mov
pop
add
xor
dec
and
mov
jle
or
or
sub
and
and
inc
ds
sbb
pop
jp
cmp
or
inc
jbe
or
push
push
adc
and
ret
in
movl
jg
add
xor
insb
mov
adc
inc
inc
ds
or
add
adc
inc
dec
mov
jne
xor
pop
or
in
sbb
pop
mov
pop
mov
mov
mov
jecxz
imul
aas
push
ret
push
cmp
shl
or
push
mov
and
inc
sbb
add
jl
std
or
adc
fsubl
cld
test
in
mov
jmp
add
push
fs
inc
dec
pop
add
add
cmpsl
push
sbb
leave
sub
push
in
sbb
rorb
mov
mov
lret
add
mov
xchg
adc
push
outsl
inc
xor
mov
movq
lods
mov
in
cs
dec
lods
inc
inc
add
add
call
or
inc
push
add
outsl
sub
inc
dec
lock
cs
jle
add
add
push
push
lock
int3
add
cmp
push
movntq
jns
cmp
dec
cmpl
pusha
cmp
jne
mov
mov
jg
cmc
test
mov
and
add
adc
xor
inc
std
pop
add
jne
test
je
test
stos
leave
xorl
pop
sub
jbe
dec
shll
leave
outsl
ss
add
jl
pop
out
sub
xchg
ret
shlb
fisubrl
and
or
ret
adc
jne
std
jne
xor
sbb
pusha
lock
dec
cmpw
add
xchg
scas
add
sbb
mov
movsb
ficoml
lds
loopne
jmp
inc
mov
int
loope
add
ljmp
mov
call
jb
push
inc
jnp
and
inc
or
push
ret
pop
push
jge
xchg
cmp
adc
xor
pop
frstor
mov
push
dec
cmpl
mov
pop
test
jg
cmp
jle
das
sub
inc
fldt
mov
imul
jle
cwtl
stos
cmp
fistl
xor
rcr
dec
movsl
stc
shll
nop
jbe
and
push
cli
arpl
sahf
ret
imul
daa
add
data16
fstl
je
sbb
out
sub
jmp
in
cmp
pop
ja
lea
cmp
daa
out
adc
jne
adc
imul
sbb
rol
shr
sub
sbb
and
inc
push
pop
cmp
mov
pop
sbb
inc
pusha
call
stos
add
mov
out
flds
in
mov
xor
push
sbb
sbb
pop
sarb
adc
inc
outsl
or
aaa
call
rcll
pop
inc
out
rorb
jecxz
xor
xchg
je
push
mov
adc
or
add
lea
push
rcl
sub
mov
add
mov
divb
jle
orb
aaa
cmp
jl
jmp
add
inc
fcmovnu
cmp
sbb
add
xchg
nop/reserved
fisubrl
mov
sbb
xchg
and
adc
shll
mov
pop
sbb
pop
mov
push
and
mov
pusha
shll
lds
test
fldl
adc
push
push
int
mov
jecxz
imul
xchg
ret
or
inc
cs
sbb
sahf
mov
cmp
das
add
fxtract
fadds
movsb
ds
lahf
idivl
adc
testb
je
cmp
xchg
pop
inc
sbb
jl
out
pushl
dec
push
loopne
lock
mov
xchg
mov
add
inc
sub
push
adc
xchg
push
js
inc
cmc
pop
lods
popa
mov
jo
xchg
cmp
imul
mov
pop
outsb
jp
repnz
je
add
pop
out
push
insl
f2xm1
xor
pop
xor
sub
test
mov
jg
dec
mov
leave
aaa
push
adc
fcomps
dec
jmp
mov
loope
mov
jbe
mov
dec
aas
add
mov
mov
fcomps
aas
or
dec
cwtl
outsb
or
andl
cld
xchg
mov
lds
xor
mov
rcrl
jg
call
call
cmp
test
lea
jle
xor
sub
mov
adc
sti
cli
inc
popa
push
movsb
jne
test
pop
fmull
jecxz
adc
es
adc
pop
push
or
or
mov
stos
pop
ret
aas
push
xor
ret
pushf
and
mov
jno
push
cs
add
mov
and
push
pop
cwtl
shlb
and
dec
popl
jle
push
push
lea
lea
dec
lock
or
movsl
rcr
add
sbb
lret
leave
adc
xlat
pop
pop
mov
lahf
mov
aam
movlps
sbbl
adc
adc
adc
add
sbb
sbbl
out
test
mov
mov
cmp
jae
push
and
mov
and
push
inc
dec
or
push
inc
and
sbb
push
push
push
push
call
ret
xor
and
push
adc
xchg
loop
addb
push
mov
or
je
mov
inc
mov
sbb
inc
push
jl
dec
imul
ret
xchg
mov
push
jne
add
repz
sbbb
ja
adc
fdivs
sarb
movl
imul
xchg
xor
xchg
jle
inc
push
mov
ret
inc
gs
mov
outsb
sbb
popf
into
mov
jecxz
test
push
push
and
addb
add
dec
aas
sbb
stos
inc
inc
xor
push
ret
mov
mov
sub
push
add
or
dec
sbb
loop
add
movl
movsl
outsb
aas
or
clc
xor
sbb
push
call
cmp
mov
add
mov
xchg
cmp
xchg
add
xorb
inc
and
inc
shlb
adc
mov
pop
sbb
push
mov
pop
dec
icebp
fwait
dec
cmp
jg
mov
call
loop
jae
movsb
leave
push
mov
add
repnz
dec
sub
cmp
loopne
sub
and
ds
cmp
stos
dec
cmp
jnp
jl
adc
hlt
cmp
cli
pop
or
fldenv
sub
mov
cmp
inc
leave
or
sbb
call
mov
jmp
cmp
jae
mov
fcmovnb
jmp
test
aam
mov
jnp
mov
push
lds
fnstsw
push
push
dec
cmp
jb
outsb
xchg
imul
shlb
dec
cmp
jl
xchg
xor
sbb
sahf
pop
add
ds
xor
daa
mov
aam
cmp
pop
push
inc
sbb
mov
or
mov
mov
loopne
insl
mov
jl
mov
daa
fsubs
imul
add
cmovl
pop
test
push
jno
jl
jge
jbe
lock
mov
cltd
sbb
rorl
pop
inc
test
push
sbb
pop
loope
or
and
inc
xchg
jnp
roll
repz
adc
xor
jbe
pusha
clc
dec
lods
loop
insl
rorb
stc
sub
inc
das
and
add
ljmp
orb
inc
out
inc
sahf
inc
add
out
push
addb
mov
cmp
push
fmull
mov
cmp
pushf
das
inc
or
add
lds
inc
cltd
out
pop
or
mov
push
pop
test
jl
sub
push
fistpll
mov
and
shlb
lret
ljmp
int3
jno
inc
cltd
mov
pop
mov
dec
test
xchg
dec
sub
sub
xor
daa
xchg
sbb
lcall
adc
and
and
or
dec
or
xor
jo
inc
das
rcll
xchg
sub
push
adc
dec
mov
xchg
test
decb
jmp
and
sub
icebp
mov
push
jne
sub
pop
clc
pop
stos
ss
leave
sbb
test
jle
aad
sbb
xlat
adc
das
xor
sbb
aam
outsb
sub
aas
popl
sub
dec
mov
sbb
fs
sbb
sub
iret
and
cmp
lahf
lsl
jmp
xlat
dec
cmp
fdivrl
jmp
aas
andb
hlt
cld
xchg
jnp
icebp
je
insl
or
sbb
add
or
push
dec
cld
cmp
jne
lret
ret
fcoms
or
test
xor
push
add
jle
mov
lea
mov
xchg
adc
pop
cld
push
sub
adc
lods
int
mov
data16
sbbb
mov
xor
add
dec
jne
fdivs
in
js
repnz
jle
xor
add
push
sbb
lea
jmp
cltd
lret
pop
test
imul
mov
and
rcrl
dec
pushf
popa
and
add
xor
fisubrs
test
pop
lea
pop
sbb
mov
push
int
outsl
leave
mov
cltd
ljmp
icebp
jmp
mov
movl
mov
stos
loopne
xor
or
insb
jl
rcrl
pop
mov
int3
inc
ror
iret
lea
outsl
or
cmp
dec
mov
sbb
adcl
mov
lea
cmp
loop
mov
stos
sbb
cmp
mov
sub
push
mov
stos
push
lods
pop
lods
lock
lea
shr
ret
sub
je
stos
popf
test
dec
mov
adc
cmp
mov
mov
sub
add
mov
add
jg
xor
inc
mov
pop
jmp
lret
jae
movsb
mov
push
popf
loopne
cmpsl
mov
call
enter
outsb
dec
inc
fdivs
push
mov
xlat
xchg
decb
repnz
fstpl
add
adc
notb
adc
add
and
push
les
fildl
ds
pop
xor
or
sbb
cmovae
mov
testl
dec
pop
push
mov
cwtl
jbe
test
push
paddusb
movsl
or
or
push
mov
mov
out
js
xor
jg
mov
rorb
adc
or
xor
cmp
inc
cmpsl
jg
outsl
xor
inc
mov
mov
jecxz
mov
mov
pop
rcrl
add
rep
mov
decb
int3
jle
movb
andb
and
loopne
sti
xor
movsbl
je
or
cmp
jne
lea
repnz
dec
xor
inc
mov
mov
lock
aas
pop
gs
loop
cli
jl
test
iret
or
shl
inc
stc
mov
push
das
movsl
aas
rorb
std
xor
xchg
mulb
mov
dec
sub
adc
xchg
lea
sti
icebp
rcrb
sub
pop
add
mov
xchg
jg
cmpb
je
aaa
std
and
incl
mov
inc
mov
mov
jl,pn
mulb
or
sbb
xor
or
js
shrb
pop
lods
and
and
mov
inc
arpl
jo
gs
sbb
sub
xadd
add
cltd
clc
adc
dec
or
pop
adc
cmp
jg
cli
add
ljmp
mov
out
pop
pop
or
mov
fimuls
jl
jl
xor
jmp
test
sbb
add
mov
mov
into
xchg
add
out
pop
roll
jge
outsl
xchg
xor
js
or
test
out
jmp
mov
mov
and
outsb
test
in
loopne
loope
dec
sub
jmp
jl
pusha
jo
mov
and
xchg
fsubl
mov
lock
outsl
pop
inc
mov
jl
jne
mov
enter
jbe
lea
mov
mov
add
push
cmovs
lcall
outsb
or
adc
fldcw
or
add
leave
mov
mov
pushl
dec
cmp
jg
cltd
sbb
push
cmovp
idivl
inc
push
sbbl
insl
inc
dec
xor
ds
adc
mov
mov
sbb
pop
sub
rcl
test
cmp
jne
imul
inc
cmp
test
inc
aam
xor
push
xor
lahf
insb
cmp
aas
pop
pop
inc
cmp
jne
dec
pushf
jle
or
pop
mov
scas
mov
and
out
adc
or
out
clc
mov
je
movl
ja
or
push
push
cmp
shrb
xor
adc
sbb
pushf
sub
je
push
mov
sbb
push
add
add
icebp
stc
xchg
xor
mov
inc
cmpsl
mov
sbb
imul
mov
in
pop
inc
cs
dec
pop
push
popf
pop
push
adc
xchg
jl
cs
popf
pop
jmp
lea
push
lahf
movsb
test
leave
popf
cmp
subb
negl
shll
call
pop
sub
mov
dec
pop
ret
cmp
icebp
adc
lods
lds
sub
sub
mov
dec
cmp
add
pop
mov
or
mov
test
mov
aas
icebp
rep
xchg
mov
es
sub
xor
cmp
push
adcb
data16
outsb
outsb
mov
test
pushf
lea
add
cmc
stos
pop
fimuls
jecxz
mov
push
lea
jns
sbb
ss
fsubrl
in
cmp
sahf
pushl
lahf
jns
jbe
aam
orl
es
mov
sbb
loopne
sub
push
xchg
loopne
in
push
add
push
fwait
fwait
or
mov
or
pop
mov
decl
xchg
mov
pop
dec
dec
inc
jle
mov
clc
cmovl
jns
neg
dec
xlat
sti
hlt
aas
mov
iret
and
clc
jne
inc
or
cmp
ret
dec
adc
push
and
rcll
jne
in
mov
je
insb
imulb
enter
icebp
das
xchg
jae
pushf
jg
fxrstor
popa
push
inc
jmp
push
and
movd
mov
pop
cmp
loop
lea
fidivs
jg
cmp
shrl
mov
cs
dec
mov
jmp
rorl
popl
sti
or
js
xchg
subl
rol
out
add
cltd
mov
negb
je
scas
push
push
and
add
loopne
bswap
roll
xchg
inc
xor
jle
xor
sub
jne
adc
fwait
pop
ret
adc
push
mov
cmp
clc
xchg
jne
inc
sub
and
in
sbb
add
out
mov
mov
and
pop
jne
mov
std
or
jl
push
xor
and
push
mov
jmp
inc
xor
mov
lock
xor
inc
cmp
mov
cmpsl
dec
sbb
in
or
out
and
faddl
jle
inc
lea
mov
mov
insb
jo
call
add
sbb
pop
test
cmp
push
aas
fsubp
cld
push
adc
out
add
add
daa
cmovae
fistps
jns
push
sub
mov
dec
xchg
mov
adc
lods
dec
sbb
shll
cmp
loope
icebp
inc
push
push
push
jge
mov
mov
or
add
leave
repz
mov
mov
lea
push
inc
sub
dec
mov
lock
mov
push
xchg
faddl
sub
inc
mov
fxch
mov
or
popf
sahf
je
jg
jne
or
mov
adc
movsb
or
adc
outsl
add
jl
movsl
pop
incl
sbb
fmull
pop
rorl
jb
mov
mov
push
jle
mov
test
popf
inc
aas
pop
xor
cmp
rsm
test
jbe
mov
add
xor
and
sub
int
jl
mov
andl
nop
mov
or
add
addb
push
js
push
je
ljmp
cmc
mov
cmpsb
mov
ljmp
dec
cli
or
addr16
add
popa
cmp
jle
cli
in
push
jmp
arpl
neg
mov
mov
pcmpeqw
dec
sbb
in
jne
fldl
icebp
or
fisubrs
test
loope
lea
jmp
or
cmp
add
add
add
jg
popa
inc
inc
pop
sbbb
pop
xor
enter
inc
pop
jo
or
mov
and
push
push
mov
push
cmp
pop
pop
cwtl
xchg
cmpb
mov
mov
cmp
push
dec
mov
mov
xchg
add
jne
sbb
dec
push
leave
fildl
jne
push
pusha
lock
cs
pop
add
cmpsb
cltd
stos
nop
or
mov
jae
push
pop
rcrl
rorl
mov
pop
adc
out
pop
mov
mov
inc
lea
jo
out
push
and
mov
ret
cmp
pop
and
inc
lock
iret
mov
jne
xchg
in
popa
int
mov
aaa
adc
jns
int
dec
and
inc
inc
dec
cmp
jne
test
adc
fadd
adc
insl
mov
cmp
pop
or
repnz
push
xor
push
loope
imul
pop
dec
movsb
lds
mov
lcall
add
cmp
adc
or
mov
je
addl
xchg
test
xchg
jns
testl
mov
lds
push
push
loope
xchg
icebp
push
sbb
cwtl
in
dec
pop
sbb
mov
cmp
xchg
cmp
dec
pop
testl
les
mov
mov
fisubrs
mov
sbb
cltd
test
lret
sarl
inc
inc
and
dec
jmp
mov
and
dec
xchg
or
ret
ljmp
push
sub
pusha
lods
xchg
inc
push
push
loop
sbb
pop
pop
and
adc
cli
sar
xor
fstpl
ja
cmc
fsubs
and
mov
sub
inc
dec
push
xchg
mov
push
pop
mov
das
pushf
add
fildll
and
or
sbb
jl
cmp
mov
pusha
mov
subl
pop
pop
mov
push
sub
mov
dec
pop
mov
cmovae
inc
inc
jmp
jo
mov
cmc
fstpl
mov
rcl
ret
pop
sbb
ret
inc
mov
test
inc
xor
mov
daa
cltd
sbb
shrl
inc
lea
adc
adc
and
jns
jne
cmp
add
push
dec
jl
add
into
shlb
imul
sbb
xlat
lahf
mov
bound
push
call
out
aam
enter
dec
and
lcall
clc
sub
sub
cmpb
mov
test
mov
movsbl
push
scas
or
cs
xchg
cmp
sbb
pushf
cmp
rdtsc
and
adc
or
adc
adc
dec
mov
les
push
or
pop
inc
push
sbb
lea
xchg
sbb
inc
mov
add
daa
aas
sub
cltd
mov
mov
inc
insl
sahf
jmp
je
inc
or
push
jle
clc
adc
mov
xor
je
rcrb
mov
xlat
test
cmp
outsl
sbb
inc
cmp
movsb
cmpl
pop
push
mov
and
shl
jl
jbe
adc
push
push
fcoms
dec
jne
pop
movsb
jns
bound
xchg
cltd
imul
mov
add
dec
es
out
inc
addl
add
pop
push
shrl
inc
test
adc
push
and
add
mov
clc
aad
inc
xchg
and
lock
insb
fucom
inc
jbe
inc
dec
or
pop
addr16
add
fstpt
neg
xor
out
mov
mov
not
mov
inc
mov
or
jle
cs
movd
mov
push
rol
add
jno
neg
lods
add
push
js
test
arpl
inc
dec
jne
xchg
pop
mov
movsb
adc
and
jle
push
push
or
nop
loope
lret
mov
inc
lret
pusha
or
mov
xor
cmp
dec
in
test
lock
xor
sbb
mov
xor
daa
or
jp
je
loope
hlt
xchg
cmpsl
loope
dec
add
pop
mov
bsr
in
sub
inc
dec
decl
hlt
jl
rcrl
jbe
or
push
icebp
adc
push
add
jp
lds
push
push
dec
push
xchg
adc
andb
movswl
stos
sbb
push
rcr
mov
xor
push
loopne
cmp
test
loopne
jl
pop
clc
aad
cmpl
div
adc
leave
ja
sub
ja
xchg
in
dec
xorb
dec
loopne
sbb
lahf
mov
mov
mov
xlat
inc
dec
sbbb
xchg
fiadds
sbb
add
sbb
cmp
mov
cli
sarl
jg
or
pop
jg
arpl
clc
inc
xchg
lret
in
and
add
pop
out
lods
incb
aad
jle
push
movsb
test
add
popa
xor
pop
push
pop
mov
or
jne
inc
add
cmp
rorl
mov
or
dec
cmp
jg
pop
jg
fimull
sub
or
jge
js
lds
neg
dec
lcall
stc
add
jg
decl
and
mov
inc
jmp
movsl
inc
xor
jecxz
inc
push
push
loopne
push
mov
pop
xor
ffree
push
cmp
setge
push
mov
out
stos
push
jmp
add
cmp
loopne
inc
mov
es
push
pop
push
in
jbe
sbb
pop
cmp
add
stos
mov
mov
je
cmp
fiaddl
fadds
jae
fwait
sbb
shrb
xor
mov
mov
push
movsb
leave
outsl
movsl
aam
aas
mov
or
inc
addb
push
ja
cmp
sbb
cmp
add
cs
loope
jmp
aas
push
inc
push
add
and
pop
mov
inc
nop
lahf
insb
inc
hlt
xchg
sarl
mov
imul
cmp
dec
hlt
nop
push
sub
and
arpl
push
lock
mov
add
cld
xor
scas
pop
mov
add
icebp
adc
icebp
test
lea
sbb
xor
mov
mov
ficompl
es
cmpsb
scas
aaa
push
sbb
push
jecxz
sub
cmpsb
mov
stos
mov
lahf
add
adc
mov
mov
es
int3
das
xor
jbe,pn
mov
dec
pusha
cmpb
push
sbb
or
jle
jp
mov
inc
and
jno
and
and
in
pop
push
inc
mov
dec
pop
and
cmp
or
sub
xchg
lret
xor
or
jecxz
mov
inc
push
mov
mov
ret
leave
mov
mov
test
mov
cwtl
adc
rcll
arpl
test
mov
subl
inc
dec
outsl
xchg
xchg
stos
and
mov
xchg
inc
or
sub
fistpl
cmp
clc
fmull
fmull
pop
cld
jl
jge
ljmp
mov
mov
add
aaa
daa
xchg
adc
mov
enter
add
xor
ret
jmp
sub
add
jmp
cld
cmp
cmp
inc
lahf
mov
lods
xchg
test
std
adcb
cs
cmpsl
adc
sub
rclb
adcl
pop
test
lcall
dec
cmc
mov
test
dec
inc
and
mov
ficoml
sub
adc
sub
push
js
in
decl
xchg
or
enter
and
or
int
pushl
and
xor
jle
sub
adc
sub
clc
in
insl
push
in
sub
sbb
sbb
xchg
push
mov
aam
jmp
rorl
fadds
jmp
or
fisttps
cli
sub
pop
or
jmp
les
jmp
jmp
lar
ret
loopne
scas
repz
sub
pop
or
loope
xor
cmovnp
js
and
mov
mov
roll
sub
and
and
daa
push
aas
adc
daa
int
xor
and
enter
or
sbb
js
int3
pop
fs
sub
adc
and
push
cmp
aas
sahf
das
mov
fstps
aaa
lock
sub
sub
nop
add
hlt
in
cmpsb
loop
sub
scas
dec
sub
pop
popf
xchg
mov
dec
sub
mov
mov
flds
fmuls
fadds
hlt
sub
push
pushf
into
mov
lret
dec
lds
adc
cmp
arpl
and
adc
push
adc
test
les
or
xchg
sub
add
add
push
mov
xchg
adc
test
je
dec
loop
addr16
dec
int3
and
and
push
xor
cld
shl
lret
and
xchg
fmull
jecxz
lds
sbb
push
shll
aas
push
xchg
dec
push
int3
sub
inc
lret
pop
jb
dec
mov
push
pop
mov
test
xor
mov
xchg
pop
shl
fnstsw
and
sub
sub
jg
add
adcb
stos
cmp
jae
mov
sub
pop
dec
jg
mov
xchg
sahf
shrb
sub
lret
roll
jae
cmpsl
xor
loope
push
inc
js
sub
test
add
in
xor
add
inc
push
dec
dec
xor
shl
fst
sub
adc
mov
jne
cmp
hlt
fcomi
or
cmp
movsb
and
fucomi
int
xor
fimull
xor
ljmp
jo
hlt
xchg
lods
jg
push
inc
leave
push
lea
push
xor
dec
sub
ret
lods
pop
inc
xor
add
ret
or
xchg
xchg
sbb
push
cmp
ret
loopne
enter
cmp
xor
pop
lock
sub
dec
scas
mov
or
jo
mov
sahf
jmp
movsl
arpl
mov
xor
or
cmp
cmp
sub
lahf
les
cli
adc
pop
cld
sbb
sti
sbb
and
dec
test
sub
jl
xchg
or
lds
dec
aam
sahf
cwtl
sar
inc
or
pushf
adc
shlb
mov
pop
adc
jl
cmp
ret
fimull
jb
mov
loope
clc
add
test
nop
lea
xchg
push
push
loop
orl
loopne
cli
shll
std
adc
js
daa
pop
push
add
jl
or
mov
mov
push
sbb
mov
movsl
dec
sub
popf
mov
sarb
and
mov
jl
jae
aas
sbb
push
adc
aad
or
sub
pop
movsl
mov
jmp
leave
mov
mov
jns
in
mov
es
inc
sbb
popf
push
movsb
mov
cmp
mov
bndstx
xorl
adc
sbb
ret
push
lcall
sub
fdivl
cmp
lret
jnp
fdivrs
cmp
xchg
push
xor
js
call
cmp
cwtl
adc
push
add
popf
mov
sub
dec
fistpll
jne
cmpb
sbb
ljmp
and
adc
pop
jmp
clc
shl
lea
or
in
jo
pop
popa
sbb
andl
cmp
jnp
and
adc
pop
pop
aas
fcoml
cmp
les
lods
lock
and
test
rep
jle
sub
call
xor
sub
hlt
or
mov
mov
mov
mov
push
pop
sbb
dec
xchg
dec
inc
mov
jecxz
and
fwait
mov
or
sub
iret
xor
nop
mov
sub
sbb
push
dec
inc
sbb
shlb
and
mov
test
xor
out
sbb
sahf
outsb
outsb
aas
jecxz
sub
add
nop
or
inc
or
mov
or
subl
int3
mov
mov
lea
cld
fcmovnu
xchg
mov
cmp
xor
pop
andb
stc
push
bound
daa
dec
xor
out
dec
pop
aad
jmp
dec
mov
sahf
adc
adc
mov
fistpll
popa
cmc
and
mov
dec
xor
mov
or
bound
cmp
rcr
hlt
sub
dec
or
push
in
cwtl
out
test
es
shr
mov
rol
and
mov
pextrw
and
orl
mov
dec
pop
and
arpl
dec
rcrb
sbb
add
xlat
or
stos
add
inc
inc
popa
jmp
addb
push
icebp
or
aam
sbb
mov
xor
adc
jle
add
aas
push
push
xor
xchg
sub
push
push
push
call
dec
movb
pusha
cmp
dec
popa
ret
inc
pop
ret
aas
loop
inc
movsl
sbb
sub
scas
xorl
push
inc
jnp
mov
xchg
mov
dec
sbb
in
into
add
inc
xor
cmc
and
dec
cmp
inc
or
adc
insl
ds
and
je
test
inc
dec
sbb
xorl
inc
stos
mov
aam
or
mov
es
add
sub
jno
sub
pop
add
jle
into
or
ljmp
push
outsl
sbb
and
aas
fstl
clc
stos
or
mov
inc
add
cmp
test
loope
push
dec
popa
cmp
jl
mov
fcoms
ss
icebp
xchg
addr16
scas
pop
pop
pop
sbb
xor
pusha
xchg
shll
dec
cmp
push
movsl
inc
sub
adc
push
lret
movsl
inc
int
notb
adc
aad
int
mov
and
lds
por
outsb
dec
fs
add
fcoms
xchg
adc
outsl
or
enter
movsb
sub
cmp
jmp
add
xchg
fists
dec
ljmp
out
pop
dec
sub
rolb
repnz
into
adc
xor
sub
push
mov
leave
add
pushl
sub
add
jg
pop
mov
xor
incl
add
sar
mov
inc
dec
insb
ffree
lret
int3
shrb
fimuls
xchg
sbb
aaa
sbb
arpl
push
pop
pop
insb
or
pop
das
mov
imul
xchg
popf
mov
push
les
subl
xor
mov
mov
inc
jl
shlb
push
pop
add
jb
cmc
mov
dec
lods
add
xor
popf
add
sar
mov
dec
fadds
in
cs
dec
and
lret
xor
in
add
push
pop
mov
or
fucomi
ljmp
mov
push
sub
shr
push
push
adc
out
mov
sub
or
jo
or
push
lds
and
sub
aas
subb
ret
mov
popa
inc
inc
push
sub
or
sbb
ss
adc
adc
pop
outsl
jecxz
cmp
cmpsl
push
add
nop
dec
xor
sar
xor
jmp
lock
xor
lods
jmp
add
hlt
cwtl
sub
cmpsl
and
and
jg
ds
cmp
inc
insl
cli
and
inc
add
cmp
cltd
lea
sub
leave
int
pop
inc
inc
mov
imul
or
pop
lea
add
mov
push
or
adc
mov
jbe
mov
loopne
mov
adc
fcompl
inc
sub
pushf
dec
cmpsb
mov
rorb
xchg
incb
pop
pop
mov
dec
adc
add
mov
adc
lods
adc
jle
jbe
or
pop
std
lea
cmp
xchg
in
inc
sbb
adc
mov
pop
or
insb
add
ss
xchg
out
int3
or
stc
popa
sbb
inc
or
push
cmp
test
inc
ja
mov
xor
cmp
sbb
inc
push
pushl
imul
and
push
daa
fadd
add
ss
cmp
and
iret
mov
pop
add
js
loopne
sar
xchg
out
popa
test
ret
andl
enter
jecxz
sbb
rol
jns
pop
hlt
arpl
movl
and
jb
inc
cmp
mov
mov
add
pop
sbb
and
dec
mov
push
fsts
lods
pop
mov
or
push
cld
mov
cmp
cmp
sbb
adc
xchg
xor
stos
mov
lea
shlb
insb
sbb
adc
js
mov
test
xor
add
add
xor
jbe
mov
adc
mov
add
adc
js
inc
mov
push
inc
pandn
or
dec
jns
xchg
push
xor
xor
xor
add
jnp
es
hlt
out
xchg
jg
or
mov
inc
inc
inc
sbb
fcoms
mov
repz
xchg
sbb
fnstsw
test
jne
add
jne
lret
cmp
shll
mov
fwait
dec
ret
in
dec
addr16
lea
pushf
mov
inc
sbb
dec
jae
out
jle
insl
loope
cmp
add
push
andb
mov
cld
lret
or
outsb
inc
sub
ret
ja
idivb
adc
push
xor
jle
add
xor
pop
fs
cmp
or
cmp
out
leave
dec
shlb
or
adc
jge
dec
mov
cltd
sub
inc
in
lret
ja
xchg
loope
xchg
inc
cmp
add
add
pop
outsb
call
dec
jl
int
ds
jne
inc
pusha
push
shr
add
sub
or
sti
pusha
insl
leave
in
and
sbb
push
add
xchg
or
repz
mov
inc
push
roll
mov
sbb
xor
sub
je
lds
sub
gs
adc
mull
insb
add
mov
dec
cmp
aad
and
insb
mov
inc
mov
outsb
push
insb
push
sbb
divps
je
or
xor
aas
lea
push
mov
insb
push
push
lcall
lea
cmpsb
fistl
inc
scas
inc
pop
jle
jg
mov
push
inc
into
sbb
add
mov
cld
or
mov
mov
cwtl
cmp
adc
adc
fistps
adc
outsl
add
sbb
lahf
push
dec
sub
mov
mov
movb
out
xor
or
int
jl
outsl
mov
rcll
xor
adc
addb
adcl
pop
sbb
inc
or
mov
arpl
cld
push
inc
mov
xor
cli
test
inc
outsl
or
sub
test
cmp
mov
and
mov
dec
push
or
adc
xlat
ret
pop
xchg
mov
fldcw
roll
push
out
aas
add
add
mov
push
incb
push
aas
sub
pushf
es
mov
add
jb
adc
mov
pop
pop
xor
pushf
adc
adc
mov
sti
insl
out
cmpb
push
mov
or
mov
dec
push
roll
aad
prefetchnta
call
test
js
fnstsw
pop
xor
les
imul
or
mov
rol
les
pop
mov
cmp
push
mov
lea
jmp
cmp
add
xor
jl
add
lea
push
fisttps
jo
jbe
sbb
sbb
cld
adc
push
scas
and
pop
xchg
xchg
cwtl
movsb
loopne
sub
inc
cmp
ret
sub
dec
loop
mov
nop
pop
adc
mov
dec
leave
rol
mov
ficoml
loope
push
inc
lds
xor
pop
mov
pop
in
or
pushf
adc
and
pop
sbb
cmp
xor
mov
invd
mov
lods
fcmovnbe
xchg
cmp
sbb
cmp
std
sub
push
fcomps
sbb
loopne
inc
lock
popa
or
mov
sub
imul
pop
add
push
add
jnp
xchg
push
jns
mov
cmp
mov
mov
xchg
or
adc
es
xchg
jge
adc
sbb
mov
cmp
xlat
sub
repz
jno
inc
adc
aas
push
je
sbb
and
in
xlat
adc
loope
loopne
js
dec
out
cli
pop
into
dec
js
add
movsb
inc
inc
sub
daa
sbb
movsb
xchg
dec
mov
movsl
sub
adc
xchg
scas
add
mov
lock
pushf
inc
mov
add
cltd
frstor
fldt
in
jge
push
int
shr
nop
adc
xchg
adc
or
mov
add
fnstcw
repnz
mov
sub
sub
jl
mov
mov
sub
loopne
fwait
test
xor
and
lahf
or
mov
je
je
mov
or
add
inc
mov
push
jmp
or
iret
test
int3
xchg
add
pop
je
negl
je
sub
insb
jns
or
add
mov
add
lock
sub
mov
sbb
test
sbb
push
sbb
and
or
sbb
cmp
pop
and
xchg
pop
test
and
pop
push
stc
or
add
adc
movsb
lret
pop
xchg
xchg
cmp
or
jle
push
xchg
sbbb
das
mov
arpl
jbe
inc
sbb
loope
push
pop
test
popa
sahf
fmuls
clc
jle
lea
cld
pop
push
clc
add
mov
add
pop
adc
jle
xchg
stos
adc
rorb
insb
pop
sarl
sbb
rorl
sbb
outsl
cmp
les
and
or
in
outsl
loopne
or
dec
sbb
sbbl
pusha
inc
sbb
mov
sbb
add
call
xor
pop
inc
in
mov
dec
cli
movsl
sbb
adc
pop
fisubrs
popa
cmc
clc
js
and
or
lods
sub
push
test
pop
add
sub
cmp
inc
mov
sbb
add
and
das
sbb
scas
sbb
inc
mov
js
jge
aas
add
or
add
sti
data16
inc
add
adcl
or
roll
push
pushf
push
mov
mov
jne
jmp
mov
cltd
fsubrs
sbb
jle
push
cli
dec
xor
test
lods
inc
in
jle
or
xor
jl
mov
jne
adc
jne
or
mov
dec
pop
and
movsb
inc
inc
push
mov
data16
or
stc
stos
sbb
cmp
shrl
jmp
mov
dec
popa
push
and
test
jo
cld
test
sahf
ret
jnp
ljmp
cmp
jge
cmp
jl
fists
adc
aas
js
jl
cmp
jg
mov
push
dec
push
or
dec
test
loopne
add
stc
mov
in
jne
add
mov
nop
or
mov
je
adc
sub
xchg
and
mov
cmpl
mov
je
jno
adc
sahf
mov
jecxz
push
xor
mov
jg
add
cmp
mov
sub
inc
xchg
add
push
ficoml
ds
loope
cmp
orb
lds
dec
insb
xor
jmp
mov
popa
sbb
dec
cmp
adc
jmp
testb
rorl
push
sti
jle
lea
mov
mov
pop
rcrl
mov
inc
bound
clc
cmp
or
adc
and
es
jns
sbb
dec
std
aas
cmp
mov
sarb
mov
aad
sub
lock
pop
inc
add
xor
arpl
or
jno
xor
clc
sbb
jne
and
shrb
jecxz
rolb
pop
pusha
xlat
out
push
cmp
or
cld
sbb
add
xor
repz
clc
in
data16
or
add
push
jle
dec
inc
je
jmp
test
cmp
cmp
das
mov
mov
add
leave
jl
lock
loope
adc
inc
sbb
add
add
sbb
dec
sbb
or
xchg
lcall
jns
pop
add
movsb
push
roll
out
outsb
pop
popa
and
notl
inc
loopne
fwait
cmp
aas
pop
mov
jle
push
dec
dec
jg
dec
insb
sbbl
push
add
sbb
jg
out
mov
push
jmp
add
aas
cmp
and
ret
dec
nop
lcall
sbb
inc
flds
sarb
pop
sbb
cmpsl
mov
cmp
je
std
pop
inc
sbb
or
testl
inc
add
movsl
xchg
sub
ja
int
aas
inc
adc
roll
inc
dec
and
ret
push
add
sbb
lcall
sub
cmpb
mov
pusha
xchg
xchg
xor
cmp
mov
ret
lods
faddl
out
pop
push
dec
pop
lods
or
inc
push
rclb
sub
loop
add
clc
mov
sub
cmp
push
push
cmp
pop
jns
loop
in
mov
jecxz
rol
add
mov
imul
xchg
movsb
or
and
push
clc
add
mov
cwtl
jns
sub
scas
xchg
je
mov
add
mov
push
aam
inc
popl
imul
mov
dec
sbb
jecxz
add
imul
add
movsl
dec
inc
xchg
mov
sbb
adc
jp
sbb
cltd
xorb
or
xor
and
mov
cmpb
inc
xchg
adc
pop
push
jo
or
pop
sbb
loope
std
pop
fisttpll
inc
mov
scas
fcomip
add
into
mov
loopne
inc
adc
add
aad
adc
adc
int3
clc
or
dec
ret
dec
push
and
inc
add
shlb
xchg
sbb
loope
test
jne
addl
mov
fwait
pusha
xor
pop
sbb
jecxz
sub
sbb
cmpsl
xorb
leave
filds
push
scas
lods
cmpsl
and
jg
mov
mov
push
in
xor
std
and
xchg
jo
sbb
dec
mov
mov
add
or
add
pop
pop
adcl
ljmp
adc
inc
mov
mov
lea
sub
sbb
dec
mov
icebp
shld
stc
and
in
adc
call
insb
or
sub
add
inc
push
or
inc
and
sbb
in
jo
testl
jne
cmp
push
shlb
pop
les
lret
cld
sbb
jnp
dec
add
insl
add
imul
dec
cltd
cmp
pushf
pop
testb
daa
sti
or
lea
sahf
in
ja
fisubrs
jmp
jmp
add
add
lret
stc
dec
repz
cltd
add
push
loope
add
aam
mov
adc
lret
imul
xor
mov
pop
pop
daa
xor
aaa
hlt
wbinvd
or
loope
aam
mov
or
mov
stos
daa
and
dec
sbb
imul
shl
inc
das
sub
pusha
inc
out
ret
sbb
imul
push
jb
and
shrl
std
sti
add
lea
mov
rcll
testl
or
and
lahf
dec
xor
fsubl
and
and
lret
test
test
inc
inc
mov
loopne
inc
add
mov
inc
dec
es
and
push
adcl
vpaddw
rolb
lds
in
inc
inc
wbinvd
lret
dec
stc
cltd
push
mov
adc
out
jnp
mov
add
add
dec
mov
test
cmp
sub
inc
nopl
push
xor
mov
pusha
adc
call
and
adc
inc
push
dec
pop
sub
xor
mov
das
stc
ficompl
fwait
mov
cwtl
adc
sbb
adc
xor
sub
sub
aaa
sub
int3
mov
and
cmpb
clc
adc
sub
xor
adc
ret
jl
mov
or
xor
dec
adc
cmp
jnp
lock
xor
sar
jg
jnp
adc
filds
gs
in
jne
and
push
jns
mov
mov
std
xor
shl
mov
adc
push
std
add
jae
add
fstpt
sub
adc
movsb
lcall
and
lea
pop
mov
and
fs
sub
xor
cmp
nop
loopne
pusha
inc
cltd
inc
push
cmp
inc
shl
xchg
or
testb
scas
mov
sub
pusha
out
xor
sbb
cmp
xchg
sub
xchg
scas
nopl
mov
or
inc
adc
inc
clc
or
fsubs
fstps
mov
daa
cld
adc
add
or
or
inc
or
pop
add
or
fadd
push
add
leave
fsub
pop
imul
fstp
fldenv
xchg
cs
sub
gs
pop
pop
rorl
or
insl
fs
fdivs
jb
adc
push
out
shlb
loopne
pop
in
xor
call
ja
sbb
push
jbe
sti
in
insl
arpl
aam
or
fnstsw
enter
stos
and
sbb
pusha
push
fmulp
adc
sbb
or
andb
ret
push
loopne
sbbb
mov
pop
pusha
pusha
add
inc
and
inc
outsb
and
in
inc
cwtl
loop
out
sbb
and
add
cmp
imul
xorl
ret
xchg
add
testl
mov
push
inc
aas
or
push
sub
les
push
push
add
push
pop
pop
add
push
mov
in
fdivr
imul
xor
mov
daa
mov
je
push
ljmp
pop
pop
dec
out
xor
or
inc
sbb
or
in
in
and
pop
jae
push
push
pop
mov
popf
loop
je
cmpl
cmpb
or
scas
cmp
jae
rcrl
or
jp
dec
jl
loopne
call
nop
sbb
and
hlt
sub
and
add
dec
adc
bound
pusha
mov
jno
dec
sbb
cli
dec
mov
jo
pop
iret
jge
dec
in
sbbb
in
adc
mov
dec
sbb
fisttpl
sub
dec
fsubr
push
inc
jo
fnstenv
in
xchg
cmp
adc
rorl
jnp
andb
cmpsl
or
out
xchg
aaa
in
lock
jne
cmpsl
in
sbb
jmp
jge
in
sbb
or
inc
xor
dec
rcl
or
sbb
and
sub
push
cld
mov
adc
mov
pop
mov
mov
push
jb
loop
adc
in
icebp
mov
dec
clc
push
push
lahf
rcrb
jbe
lret
mov
or
and
mov
mov
lcall
mov
fimull
and
mov
inc
in
cmp
nop
in
push
push
dec
push
cld
inc
fmuls
rcl
adc
sub
adcb
enter
push
cld
loop
jns
add
fcomp
mov
pop
dec
and
repnz
add
pop
mov
inc
dec
div
pushl
aam
or
add
jo
mov
cmp
jne
or
std
push
inc
inc
dec
je
adc
jne
or
sbb
cmp
push
push
outsl
nop
push
call
enter
inc
sbb
sub
cmpsl
or
dec
mov
dec
adc
cmc
popa
sub
adc
sbb
mov
mov
fdivr
imul
std
sha1msg2
sbb
out
jne
or
jnp
icebp
add
or
imul
inc
or
sbb
mov
roll
cmp
xchg
js
icebp
jbe
cmp
adc
add
jg
mov
cmp
jb
rep
mov
clc
mov
mov
jle
add
or
add
das
test
adc
stos
cmp
imul
mov
or
and
mov
mov
mov
insb
jns
out
mov
or
lods
adc
pop
cmp
int3
lea
dec
add
cmp
add
cmpsb
nop
inc
inc
pop
cmp
mov
or
push
aam
xor
rorl
int3
les
jg
inc
mov
mov
call
imul
cmpsb
imul
xchg
ret
clc
adc
out
xor
loopne
push
sbb
inc
pop
pop
leave
ret
insb
shll
cmp
repz
adc
xor
push
lea
jl
cld
jmp
pop
or
nop
mov
fsts
lea
pop
stc
sub
mov
pop
nop
test
enter
negb
filds
dec
mov
lods
mov
in
xchg
xchg
aas
inc
out
lods
or
add
nop
dec
xor
dec
lds
pop
add
jbe
mov
mov
dec
shll
insb
je
imul
cmpsb
imul
cmpsb
imul
fimull
test
mov
int3
mov
lsl
pusha
mov
pop
pop
daa
or
jg
add
or
sti
cwtl
and
dec
lock
inc
std
int
mov
mov
shufps
xchg
mov
rclb
adc
mov
and
sub
or
repnz
xchg
xchg
dec
and
lock
adc
inc
pop
and
jl
lea
mov
cs
cmp
imul
pushl
lds
mov
pop
call
adcl
pop
nop
add
mov
mov
pop
adc
or
mov
sub
cld
and
out
pop
sub
pop
push
mov
daa
pop
jnp
push
stc
in
add
in
loop
fsubrl
sbb
addl
adc
adc
push
and
jne
push
xchg
push
add
push
jo
xchg
pop
scas
aaa
test
rcrl
lods
push
call
push
or
or
add
or
mov
fwait
pop
stc
push
or
mul
out
mov
pop
jne
test
mov
bound
ret
fsubrs
dec
push
xchg
ja
fxch
xchg
addb
ss
sbb
push
imul
and
jnp
sub
sub
jne
add
or
rcrl
cmp
fdivrs
cli
dec
fisubrs
jp
bound
cmp
cltd
sbb
or
test
xor
pop
movsb
inc
jge
rorl
jmp
outsl
fidivs
sbb
add
xchg
fwait
out
adc
and
cmp
movsbl
jle
in
loop
push
es
in
frstor
mov
addr16
test
jge
jmp
jmp
icebp
addl
jle
jmp
push
push
cltd
add
stos
or
insb
or
cmp
sub
sbb
or
mov
fstpl
inc
add
daa
add
dec
jle
cmp
inc
add
push
popa
adc
insl
mov
add
add
dec
out
shlb
stc
add
lds
push
sar
jne
cmpl
jnp
inc
rcrl
icebp
xchg
mov
push
in
xor
sbb
cmc
mov
xchg
or
push
sbb
mov
out
dec
cli
inc
loopne
xchg
jp
jo
je
rcrl
xor
inc
xor
or
xchg
add
fwait
icebp
or
add
add
add
aad
sar
arpl
mov
adc
roll
push
sbb
cmc
or
in
clc
dec
loope
test
add
push
xor
cmp
xchg
pop
jo
jo
popf
jae
xchg
sbb
add
int
or
adc
or
or
rol
out
enter
inc
or
xchg
ss
dec
mov
leave
push
push
lret
mov
jmp
jne
and
push
dec
test
movsl
push
xchg
add
sbb
mov
in
ret
jmp
jo
or
inc
jmp
and
jne
mov
fmull
jg
mov
outsl
sbb
fwait
arpl
jmp
fidivrl
sbb
or
and
jp
outsb
mov
movsl
lock
setle
shrl
inc
adc
fistl
add
jne
add
pop
clc
mov
mov
sti
aas
push
cmpsl
test
call
xor
ljmp
setns
std
jle
int
inc
ljmp
std
xor
dec
es
mov
mov
push
mov
lock
mov
xchg
jne
jmp
mov
inc
mov
mov
je
loop
aas
jne
pop
cmp
jecxz
je
mov
cmp
dec
jne
pop
pop
pop
pop
ret
filds
jb
je
test
and
pop
cli
push
sbb
lahf
addl
mov
cmp
scas
fisttpll
rclb
mov
sub
fwait
loopne
test
imul
loope
push
adc
shlb
pop
adc
add
cmpsl
scas
sub
jp
or
pop
mov
sub
shll
push
push
inc
sbb
mov
xchg
jo
stc
inc
jb
neg
mov
int
rorl
lcall
rorl
imul
push
rep
je
inc
dec
dec
or
adcl
push
push
dec
clc
push
push
nop
xchg
push
cs
pop
sub
enter
shrb
xchg
int
leave
test
push
or
pop
add
pop
and
cmp
es
ja
push
addl
push
inc
xor
pmulhw
cwtl
mov
push
sbb
fisubrs
popf
decb
loope
stc
inc
jae
hlt
jmp
decl
and
shrd
sar
pop
ret
subb
ret
adc
lahf
pop
pop
cwtl
add
sbb
push
adcl
aad
or
mov
fildl
mov
add
loope
stc
sbb
dec
rcrl
aas
add
cmpb
jmp
and
add
js
inc
fldl
popf
loopne
add
or
sbb
pop
push
pop
or
pop
push
lahf
inc
out
jo
sub
adc
add
pop
icebp
cmp
mov
cmp
and
popa
in
push
mov
mov
cmp
and
mov
or
cmp
and
adc
inc
dec
pop
jl
enter
fwait
adc
js
push
xchg
mov
rcrb
inc
pop
pop
loope
sbb
push
imul
jmp
test
adc
push
sbbb
xchg
lock
hlt
icebp
adc
jne
pop
lock
jge
pop
jae
scas
push
sarl
mov
cmpsb
cmp
dec
nop
sbb
add
or
push
cmpsl
in
xchg
mov
aam
add
or
add
fldcw
sahf
insl
jge
movb
repnz
cmp
in
push
inc
ljmp
dec
pop
dec
imul
and
stc
mov
add
insl
popa
jp
mov
cmc
insl
pop
sub
in
jmp
fldl
xor
dec
mov
pop
add
add
cmp
mov
popf
or
jo
sbb
clc
arpl
xchg
and
sbb
adc
cmpl
cmc
dec
dec
cmpb
mov
pop
push
arpl
mov
pop
inc
or
or
xor
imul
dec
jno,pn
add
pop
js
sbb
clc
add
xor
pop
add
jo
xlat
insl
xchg
ret
push
lret
loop
or
dec
mov
icebp
adc
jle
adc
push
pop
mov
in
imul
imul
jmp
cmp
mov
xchg
loope
add
outsl
in
insl
push
mov
push
jnp
mov
fdivs
adc
jmp
cmp
pushf
xor
push
cmp
push
shll
inc
movsb
movsb
test
dec
or
jle
cmc
mov
mov
ljmp
cmp
mov
cltd
and
pop
sbb
out
ja
aam
mov
call
sbb
and
ret
jle
lea
add
ds
pop
cmp
jne
sub
or
sbb
dec
inc
rcll
jecxz
lea
inc
mov
ds
iret
gs
int3
jbe
adc
insl
xor
cmp
inc
pop
cmp
js
adc
aad
sub
add
jb
or
xor
mov
dec
hlt
pusha
inc
add
push
stos
xor
mov
mov
inc
and
cwtl
pop
push
loop
je
cmp
xchg
xor
fists
sbb
push
test
mov
scas
ret
add
push
mov
insl
hlt
xchg
xor
pop
inc
mov
cmp
pop
push
or
or
pop
sbb
pop
in
mov
sub
inc
adc
jne
leave
rorl
inc
and
adc
adc
cltd
pusha
pcmpgtb
ds
in
mov
int3
or
add
mull
jmp
mov
sbb
or
dec
mov
fistps
jns
dec
mov
or
dec
jmp
and
push
sub
data16
jne
mov
add
test
push
jne
pop
andl
incl
add
xlat
cmpl
jg
xchg
cmpl
mov
mov
xchg
pusha
push
lock
andb
subl
and
or
or
jne
or
clc
ja
cmp
jge
es
adc
cld
add
mov
in
sub
and
or
pop
sbb
cs
lcall
xchg
movsb
push
orl
ss
mov
cvtpi2ps
and
or
ret
aas
add
rcll
leave
fs
and
sub
inc
jnp
sub
dec
adc
jg
jo
pop
out
and
setne
jle
add
or
inc
pop
sub
sub
or
or
imul
fwait
gs
jmp
mov
push
aaa
mov
mov
popf
dec
mov
push
push
cmpsl
mov
data16
mov
scas
add
add
fldcw
add
or
push
push
jns
lahf
cld
pop
push
or
or
or
push
movups
add
insl
adc
adc
pop
test
cmp
cmp
xor
lret
cmp
inc
lahf
in
or
xchg
adc
and
movsb
pop
xchg
mov
rcll
jecxz
push
ss
xchg
or
cmpsl
jg
cmp
cmp
jae
cwtl
scas
sub
gs
and
mov
ds
and
cmp
or
mov
xor
arpl
and
jmp
inc
addr16
and
lcall
push
sahf
sub
adc
sbb
push
pop
aas
loope
adc
fcmove
arpl
out
mov
cld
sub
pop
push
jle
mov
test
fbld
mov
jmp
rclb
clc
leave
xor
push
add
lcall
pop
push
popa
mov
xor
pop
imul
xchg
or
jb
mov
pop
add
xor
lds
add
cmpsl
mov
ret
xchg
jns
je
ljmp
push
inc
rclb
xchg
add
fsub
stos
inc
mov
js
dec
jl
jge
and
call
ja
stos
inc
in
andb
and
or
bound
push
int
add
scas
lcall
mov
in
in
xchg
mov
xchg
pop
imul
or
xchg
pop
inc
inc
add
push
in
mov
xlat
push
stos
dec
dec
dec
jbe
and
dec
fcomp
fmuls
pop
leave
enter
aam
dec
push
xor
scas
jmp
push
pop
lods
xlat
and
mov
int3
sbb
mov
out
mov
js
sub
es
xor
or
add
jo
mov
and
lea
mov
sbb
xchg
pop
push
pop
cwtl
hlt
addr16
push
addps
les
jecxz
aaa
cmp
add
sub
das
repz
xchg
fwait
sub
shlb
xor
sarb
adc
imul
lea
pop
mov
sbbb
das
or
shlb
mov
lods
addl
mov
je
or
xchg
cld
in
xor
mov
adc
jbe
divb
mov
add
or
cmpsb
xchg
or
xchg
hlt
mov
sbb
scas
and
mov
add
inc
jp
loopne
cltd
mov
or
and
jg
pop
inc
cmpsl
or
rcll
ret
jle
rorb
jae
insb
lcall
jbe
and
mov
mov
or
out
jbe
add
or
xchg
cmpsl
pop
add
add
or
xor
imul
mov
xor
stos
lahf
loop
les
hlt
cmp
jge
popf
mov
adc
xor
add
aam
cmp
cld
mov
adc
jg
pusha
push
jge
jl
in
lea
lcall
mov
and
pop
xchg
subb
out
outsb
or
fldl
test
inc
and
jbe
add
hlt
mov
cmp
jge
sub
lock
or
sub
and
mov
mov
out
or
cltd
mov
test
jge
cwtl
jl
push
push
sub
pop
jl
cmp
out
rcl
fiaddl
add
xchg
mov
push
sti
mov
add
inc
add
and
or
and
lret
and
sbb
sbb
lds
arpl
aaa
push
btl
jb
add
nop
xchg
jbe
sbb
sbb
jmp
js
inc
fldlg2
jge
sub
subl
add
or
adc
nop
lea
rep
dec
cmp
int3
sub
or
dec
je
xchg
test
adc
psubq
repnz
jae
dec
pop
add
sbb
mov
int
push
mov
xchg
sub
cli
pop
je
pop
test
mov
jl
das
jne
pop
cmp
cmp
cmp
push
cmp
mov
xlat
cmp
mov
cmp
in
xchg
push
jmp
popa
inc
push
popf
jg
out
inc
lahf
subl
fadds
hlt
hlt
mov
cmp
jle
jl
sbb
ret
stc
jp
addb
add
add
cmp
addl
inc
cmp
mov
lcall
lock
subps
push
popa
mov
leave
lea
cmp
sahf
hlt
sahf
pusha
enter
lahf
mov
out
fiaddl
adc
cmp
iret
mov
sbb
loopne
das
pop
aas
fwait
push
sbb
fs
jo,pt
aas
mov
inc
pop
jg
mov
dec
add
fiadds
cmp
or
outsl
mov
ficoms
inc
and
or
add
jno
into
icebp
mov
lds
xchg
xor
and
add
dec
sbb
add
lods
in
insl
mov
repz
xorb
data16
decb
pop
ror
sbb
ljmp
jl
into
ss
ja
movq
xchg
clc
mov
shlb
xchg
or
xchg
sbbb
in
sub
xchg
dec
loopnew
pop
add
inc
rolb
xchg
cwtl
adc
out
ret
cli
mov
dec
cwtl
sub
gs
popa
mov
sbb
push
mov
add
out
dec
adc
dec
cmc
add
sbb
push
adc
popa
adc
in
es
and
out
and
push
cmpsl
cmpb
test
pop
or
ficompl
pop
ja
pushf
mov
leave
pop
scas
lock
lds
push
ss
lret
jp
push
in
cld
cmpsb
and
and
mov
fstl
dec
sbbl
push
pop
repz
mov
xor
pop
mov
pop
cmp
or
push
lea
lock
pop
subl
dec
xor
insl
clc
or
add
je
inc
inc
sub
xchg
lret
xor
and
inc
inc
inc
loop
leave
aaa
add
add
pop
add
outsb
and
adc
inc
cwtl
in
lret
sub
push
or
mov
push
pop
hlt
push
and
sbb
jl
mov
cmp
push
les
aad
mov
add
xchg
cwtl
add
popa
and
adc
aas
pop
xchg
or
fmuls
xor
xchg
adc
push
add
inc
pop
lahf
int
pop
push
imul
fs
imulb
push
push
and
test
test
nop
enter
mov
mov
stos
add
mov
or
sbbb
xchg
daa
jle
ret
cmpsb
pop
pop
adc
sbb
mov
and
loope
pusha
push
jg
arpl
pop
pop
inc
stc
add
sbb
scas
or
and
lret
or
dec
xlat
add
push
and
in
pop
dec
or
clc
lcall
and
cld
jnp
push
clc
push
and
and
adcb
iret
adc
nop
mov
add
xchg
xor
lahf
xchg
lcall
pusha
xchg
clc
or
xchg
sbb
cmp
sar
inc
or
and
cmp
sbb
push
scas
mov
fsubrl
mov
jnp
insl
and
loop
andl
sbbl
xlat
add
push
fsubr
add
inc
add
xor
and
xor
cmp
orl
test
sti
lea
sbb
lock
sub
or
mov
hlt
sbb
pop
aam
mov
adc
pushf
jl
jge
adc
orl
mov
add
push
mov
adc
xor
or
in
push
aad
push
push
add
shlb
mov
adc
movl
cld
mov
fdivrs
or
inc
movsb
outsb
jge
dec
or
push
adc
je
xor
sti
out
jne
loope
movl
aas
mov
insl
pop
mov
mov
lods
push
and
inc
pushl
loopne
mov
inc
lea
or
jno
nop
scas
mov
push
adc
push
sub
movl
inc
cmp
and
or
js
mov
fdivrl
and
fbstp
sbb
fcoml
fcoms
add
jl
sbb
fdivl
jl
xchg
add
add
pop
fisttpl
and
rcr
jecxz
pop
adc
imul
cmp
inc
push
or
call
or
fadd
addr16
push
enter
sub
or
cmp
loopne
pop
loop
xor
stos
outsb
pop
and
pusha
adc
jae
jnp
cmp
mov
je
or
mov
pop
test
mov
cld
xor
jbe
or
adc
cmp
xor
loopne
jo
cli
push
adc
lea
or
push
add
mov
arpl
cmc
mov
stos
cld
pushf
and
sbb
mov
mov
scas
pop
and
nop
loop
popa
jne
jmp
push
jle
or
test
inc
mov
jmp
sub
inc
fcmovnu
fists
xor
test
sub
fdivr
loopne
xor
xchg
into
daa
jecxz
paddusb
inc
push
or
xor
add
pop
xorl
lret
xor
add
int3
sbb
pop
in
xor
sub
mov
jmp
je
in
es
dec
sbb
mov
int
js
sub
cmp
mov
loopne
pushf
pop
inc
inc
mov
ja
and
loopne
sub
inc
jb
sahf
dec
mov
outsl
sub
mov
out
push
jne
inc
xchg
jecxz
cmp
es
pusha
add
cmpsl
fidivl
add
pop
sub
adc
lahf
mov
inc
xor
jecxz
rclb
adcl
xchg
inc
xchg
cld
cld
fwait
mov
mulb
mov
call
aad
into
mov
popa
sbb
cmp
pop
add
and
sub
jle
arpl
cmp
ja
ljmp
mov
pusha
movsb
jge
adc
cmp
mov
sub
scas
mov
clc
xchg
in
pusha
inc
or
xor
adc
cltd
cltd
test
push
andb
mov
push
jl
jno
and
jno
leave
mov
int3
add
push
cmp
in
add
mov
push
call
or
ret
popa
sbb
imul
subb
or
je
mov
xchg
sbb
and
or
push
loop
xlat
daa
movb
shr
and
xorb
scas
dec
xlat
push
xlat
sbb
mov
test
pop
adc
in
or
adc
jg
sbbl
sbb
pop
xor
add
pop
int
xchg
lea
sahf
pusha
inc
stos
xchg
gs
inc
add
lock
sub
jae
addr16
pop
scas
push
mov
push
scas
jbe
push
leave
xor
and
push
fstpl
or
push
hlt
push
imul
mov
arpl
cmp
test
nop
adc
aad
push
push
mov
push
pusha
mov
shlb
adc
loopne
outsb
lret
icebp
stc
dec
mov
dec
push
mov
lock
in
in
add
insl
mov
dec
pop
pop
mov
js,pt
mov
js
or
sub
jmp
clc
add
aaa
mov
lret
add
fimull
daa
pop
movntps
jae
and
aad
loop
lea
and
add
lods
inc
cmp
xchg
fbld
jp
adc
and
mov
pop
test
mov
mov
add
sbb
adc
nop/reserved
xor
outsb
idivb
jo
sbb
and
xor
outsb
jb
or
sub
cld
add
bound
arpl
fwait
adc
add
inc
hlt
sbb
flds
sbb
mov
das
or
movsb
popa
scas
or
sbb
mov
inc
push
cmp
sahf
insl
mov
nop
out
xor
lock
push
jl
add
mov
out
aaa
xchg
pushf
iret
addb
insb
lret
dec
cmp
cmpsb
movsl
xchg
daa
stos
jnp
add
cmpsl
clc
sub
jns
mov
add
inc
and
out
xor
cmpsb
shl
cmp
xchg
sbb
and
nop
cmp
subb
out
add
jmp
push
push
or
add
rolb
pop
mov
movsb
push
mov
sbb
orb
add
push
pop
subl
dec
adc
nop
leave
mov
jmp
xor
clc
add
inc
inc
cld
xchg
pop
je
shll
je
add
nop
sbb
add
push
jo
iret
add
lds
inc
push
sbb
mov
mov
add
and
test
adc
test
dec
mov
dec
mov
and
push
xchg
and
xchg
sbb
lret
and
sub
or
lret
xor
comiss
in
or
inc
xchg
pop
imul
sbb
push
xchg
mov
or
mov
rorb
das
inc
add
into
test
pop
adc
lahf
outsb
lret
shrl
mov
ds
ret
or
aam
dec
stc
into
in
cmc
mov
mov
les
jns
and
pop
jmp
stos
movsb
mov
push
or
jmp
mov
adc
addr16
push
xlat
scas
mov
insl
cmc
pop
mov
sub
and
jns
mov
cmp
sub
clc
sub
or
clc
scas
or
in
xor
and
mov
or
and
rol
stc
or
fadds
popa
popa
inc
mov
addb
arpl
inc
push
lea
adc
or
pop
mov
mov
xchg
adc
or
jmp
inc
sub
pop
movsb
dec
test
daa
inc
adc
adc
pop
xchg
roll
add
mov
jne
and
mov
stos
lret
pop
sbb
mov
imul
dec
mov
push
add
pop
test
pop
adc
mov
les
xchg
stos
int
es
lahf
orb
pop
adc
in
stc
pop
pop
mov
push
rcr
jmp
push
sub
dec
push
or
ffreep
js
sbbl
xchg
sbb
inc
popf
push
dec
lock
in
out
inc
lock
adc
and
lds
into
sar
sbb
add
jno
jl
jne
pushl
xor
push
adc
cmp
and
xchg
or
andl
popa
mov
int
dec
or
and
clc
clc
cmp
dec
clc
in
jmp
and
mov
pusha
fisttpl
add
push
jno
insb
das
mov
sbb
adc
fdivs
cmp
adc
pop
nop
or
or
or
pusha
mov
adc
pop
clc
test
cmpsb
xchg
mov
xlat
xchg
xchg
cwtl
cmpsb
push
imul
dec
dec
roll
test
add
test
rorb
push
rolb
xor
cmp
and
adc
add
popa
push
daa
sbb
xchg
pushl
test
adc
into
jg
bound
jge
out
cmp
je
and
mov
das
jo
loope
les
adc
or
or
movsb
inc
loope
adc
mov
sbb
cmp
rcll
cmp
leave
movsw
inc
cmpsb
dec
fdivrl
shrl
enter
push
dec
cmp
test
mov
sub
push
or
xchg
sub
rolb
data16
jne
lea
lea
rcll
das
ret
or
cld
pop
add
and
pusha
ret
js
test
jecxz
jmp
loopne
in
push
and
loope
xor
jnp
mov
fcoml
push
mov
es
or
or
ret
pop
aaa
enter
ret
and
push
xor
insb
icebp
imul
loope
jmp
cmp
je
inc
adc
xor
lret
push
lcall
or
xor
repnz
adc
ds
sbb
or
clc
or
and
cmp
sub
sub
add
push
ret
stos
fwait
cmp
fwait
jl
or
inc
pop
add
dec
add
inc
mov
fwait
add
data16
addl
sbb
andb
arpl
sub
ljmp
xorl
mov
dec
inc
mov
add
rcr
adc
push
adc
mov
scas
adc
jmp
ds
mov
ret
push
sub
ljmp
xor
push
sub
or
mov
adc
roll
cs
enter
sbb
sub
aam
lea
fisttps
push
nop
sbb
push
mov
dec
rorb
sub
scas
jmp
or
jo
cmpsl
fwait
or
sbb
jnp
nop
adc
adc
loop
inc
stos
adc
or
add
jne
inc
sub
inc
sub
adc
sbb
dec
xor
xor
sahf
xor
jno
sbb
rcrl
xchg
test
sbb
stos
rcr
test
or
cld
cld
sub
mov
loope
add
pop
add
or
add
add
shlb
movsb
sbb
mov
pop
std
sarb
inc
dec
push
stos
test
push
push
leave
sub
jae
scas
push
push
add
pop
fsubr
das
push
daa
or
xchg
rorl
mov
push
insb
push
mov
fsubrs
pop
mov
sbb
mov
clc
adc
aam
xchg
inc
js
rcr
ret
jle
sub
call
and
sub
mov
cmp
push
jne
test
loopne
nop
mov
xchg
and
and
pop
popl
jne
xchg
dec
lds
adc
test
arpl
cltd
push
lods
out
shlb
mov
jns
adc
or
sbb
push
mov
lods
imul
mov
mov
mov
jg
outsl
jle
push
or
in
push
inc
ja
jecxz
shrl
popf
pop
lret
xlat
or
dec
cwtl
movsb
inc
mull
and
mov
dec
add
push
add
rolb
int3
add
sahf
dec
mov
inc
adc
jl
xchg
xor
stos
and
out
cmp
int3
xor
loop
dec
in
fs
xor
aam
pop
pop
cmpsb
adc
push
lea
inc
adc
push
daa
lcall
rcrb
leave
ljmp
mov
sub
bound
xchg
jge
jmp
push
pop
sub
sub
dec
xor
pop
mov
sbb
hlt
fstcw
filds
or
data16
mov
cld
fistpll
or
and
cmp
push
and
jne
xchg
push
jl
or
jmp
je
std
pushl
push
cld
or
loopne
sub
cmp
clc
inc
les
test
push
shrb
mov
dec
mov
imul
fcoml
cmpsb
jle
mov
cld
jne
mov
pop
sub
xor
add
daa
xor
aaa
rorb
hlt
push
xchg
or
dec
rorl
lock
cmp
xlat
fcomip
and
jl
push
movb
adc
mov
stc
sbb
stos
stos
stos
in
adc
xor
filds
lock
mov
lahf
sbb
adc
cmpsl
loope
sbb
or
jl
daa
popa
into
mov
jne
push
or
daa
mov
mov
push
inc
loop
nop
mov
iret
sbb
iret
push
sbb
jbe
loop
mov
push
adc
lea
ret
xchg
xchg
push
push
dec
or
jns
mov
test
lret
sbb
mov
sub
xchg
xchg
push
leave
in
movnti
cmp
jnp
movsl
or
and
jge
push
out
shrl
int3
jne
test
insl
sub
mov
pop
insb
dec
jmp
pop
pop
xchg
lahf
clc
iret
outsl
lea
dec
adc
lcall
cmc
loop
icebp
push
les
push
es
jnp
inc
mov
out
inc
cwtl
mov
popa
push
inc
xor
insb
pop
rclb
jp
imul
push
lods
pop
aad
and
or
jecxz
enter
xor
ret
add
ret
sbb
or
nop
imul
add
mov
loop,pt
dec
mov
je
add
sub
and
xorl
jle
jne
or
loope
add
dec
inc
push
cld
les
iret
push
out
pop
push
ja
sti
aam
or
lea
xchg
lret
sub
or
lods
test
mov
push
jmp
xor
push
or
push
push
cmp
fs
pusha
and
fidivl
xchg
loopne
mov
pop
push
arpl
cs
mov
insb
enter
mov
jbe
lret
xor
cld
shr
mov
push
mov
cmp
xor
mov
adc
xor
sub
inc
arpl
dec
sbb
aas
add
fldcw
out
mov
test
jbe
loop
jecxz
aaa
call
xor
mov
mov
nop
in
sarb
xor
loopne,pt
loopne
in
pusha
sbb
dec
fadd
fdivl
insb
fadds
or
data16
xor
insb
shr
jl
ret
xchg
orl
insl
fmul
jns
inc
jle
jo
and
and
out
in
jns
cmp
mov
mov
push
sub
cmp
cmp
aam
cmpsb
lds
cmp
enter
xchg
pop
out
cmp
hlt
out
pop
in
pop
cmp
out
push
inc
xor
mull
lahf
mov
jge
or
jne
adc
in
adc
xor
stc
xchg
xorb
inc
orb
incl
push
jo
mov
jmp
or
pop
or
add
xor
xorl
mov
cmp
popa
dec
sbb
or
push
test
hlt
cmp
test
xchg
loopne
in
add
cld
or
and
outsb
xchg
cmp
mov
and
sti
mov
imul
ja
and
js
sarb
sub
repnz
mov
adc
je
iret
test
in
lcall
lea
xchg
clc
fdivr
push
add
loope
cmp
mov
into
and
sbb
pop
add
call
xor
cld
rol
add
rcll
add
adc
imul
mov
and
jne
xchg
inc
les
fmuls
cmpsl
jne
fcmovu
fwait
sti
fstps
mov
mov
xor
lea
pop
imul
inc
je
ret
lock
addb
mov
mov
xor
pop
and
add
call
sbb
mov
das
rclb
adc
or
inc
and
or
lea
lock
xor
insb
arpl
aaa
ds
jne
aam
and
clc
push
outsl
daa
pop
or
push
js
gs
test
xchg
push
add
mov
enter
xor
cmp
mov
xor
mov
xchg
es
xor
push
enter
das
add
and
mov
cmp
mov
jecxz
push
rcrb
aad
add
or
rolb
xchg
add
push
iret
jmp
ret
inc
xor
mov
or
inc
mov
xor
push
outsl
push
jmp
shr
add
and
inc
adc
dec
sbb
dec
xchg
pop
pop
cmp
add
mov
lds
stos
ret
mov
add
jne
dec
in
lcall
xchg
cld
adc
movb
pop
adc
and
roll
dec
outsl
inc
xchg
push
in
clc
adc
cltd
fdiv
add
push
in
data16
pop
fsubp
pop
sub
cltd
dec
stc
shll
cmp
or
and
sahf
out
fisubrs
loopne
jge
packssdw
fimull
add
movsl
jge
adc
and
bnd
mov
and
movsb
mov
orb
inc
clc
clc
fiaddl
ss
dec
xor
mov
xor
sbb
or
cmp
int3
stos
jmp
and
and
sub
stos
mov
iret
andl
xchg
mov
test
pop
jne
addl
cwtl
push
add
mov
pop
in
jg
scas
shlb
not
mov
adc
push
or
sbb
jge
push
adc
lret
sub
add
or
pop
push
sub
xor
push
xchg
cmpl
call
pushl
lock
push
cs
sti
loopne
inc
or
or
mov
and
cwtl
lret
pop
fldcw
xor
insl
jmp
fistpl
testb
mov
dec
imul
bound
cmp
push
inc
pop
pop
xchg
and
sbb
and
jo
addb
mov
jo
mov
lods
cmp
pusha
lcall
mov
jecxz
cwtl
adc
mov
add
pop
sub
popa
ds
push
popa
out
jbe
ja
lea
sub
cmp
push
push
ror
das
push
adc
pop
in
xlat
sub
push
cwtl
push
cmpsb
addb
or
fstps
adc
mov
inc
pop
jmp
push
call
add
mov
push
add
imul
jp
sti
adcb
sub
cmp
jmp
in
orb
sub
pop
imul
data16
jnp
or
add
push
int
sub
xchg
or
add
sub
add
adc
add
jecxz
pop
push
jae
mov
cmp
cvttps2pi
sbb
sbb
sbb
lret
cmp
test
pop
dec
or
sahf
mov
insb
jb
mov
daa
inc
jl
dec
cmp
jle
fisubs
cmc
and
ret
add
mov
fldl
rorb
loope
xbegin
aam
aam
loope
add
inc
imul
pusha
dec
inc
mov
mov
imul
add
jb
sarb
sbb
sbb
jo
xchg
fisubrs
pop
popa
add
lahf
jae
pop
add
mov
jbe
add
and
jne
add
loope
sbb
inc
fmuls
test
inc
aas
sub
fists
std
pop
sbb
in
mov
sbb
int
outsl
xor
pop
hlt
or
sbb
jmp
add
xchg
jne
test
xor
or
stc
push
lahf
arpl
sahf
pusha
inc
and
push
clc
shrb
outsl
es
or
adcl
mov
inc
pop
shrd
loope
data16
in
adc
mov
aas
mov
mov
sbb
dec
add
clc
adc
or
clc
out
add
fdivl
test
lds
add
and
adc
or
jmp
cmp
addb
or
shll
in
outsl
jmp
test
xchg
ret
shlb
aaa
les
pop
jb
push
mov
outsl
loopne
data16
dec
mov
popa
pop
or
lods
add
lock
inc
push
mov
adc
in
jne
lcall
mov
imul
int
sub
jge
loope
jp
add
clc
test
je
push
call
lock
and
aad
sbb
and
shlb
loopne
xor
mov
ljmp
sub
inc
sbb
pop
pop
in
dec
add
insb
push
push
or
pop
mov
mov
sbb
out
or
mov
clc
jle
add
adc
pop
ds
push
mov
mov
inc
dec
mov
movsl
pop
lret
lahf
add
movb
mov
sub
mov
inc
inc
arpl
fwait
jo
inc
sbbb
pop
pushf
mov
pop
pushf
sarb
pushf
lock
and
dec
pushf
and
test
mov
sahf
movsb
movsb
sub
push
jge
push
aam
fists
fstpt
pop
xchg
push
jns
push
xchg
in
xor
ret
push
xchg
or
shl
std
rcll
inc
inc
add
sub
xchg
dec
inc
leave
pop
loop
dec
test
xchg
jns
test
test
rolb
jecxz
mov
xor
jb
mov
rcll
or
push
stos
popf
add
jb
mov
test
lea
push
mov
push
dec
mov
pop
jo
cmp
and
xor
cmp
add
add
lea
pop
dec
xor
or
mov
test
shlb
xor
and
add
cmc
arpl
cmp
jl
adcl
mov
pusha
and
lods
add
adc
adc
jb
adc
adc
sarb
jns
add
cmp
in
hlt
xchg
cmp
cmp
lods
pop
sub
and
sbb
incl
cmp
add
inc
jge
add
flds
pushf
sbb
mov
pop
xor
das
cmp
lahf
jo
sub
add
add
shl
clc
aas
adc
int
push
mov
inc
jmp
jmp
jnp
jb
das
mov
or
or
cwtl
imul
insb
shlb
fistps
mov
in
sub
rcrl
jg
lahf
enter
rclb
dec
out
xlat
mov
push
add
loopne
jge
popa
je
sub
mov
or
adc
xor
add
and
dec
add
stos
leave
imul
or
push
lret
push
push
push
call
je
pop
rcrb
enter
mov
orb
xchg
idivl
xchg
sub
pop
add
cmc
clc
int
je
or
add
mov
lods
dec
add
decl
in
loope
jo
or
or
cmp
in
inc
outsb
push
inc
cmp
shlb
sahf
or
in
inc
mov
jb
mov
inc
rorb
mov
fidivl
xor
xor
popf
xchg
out
in
inc
inc
mov
inc
sub
nop
das
in
mov
insb
repz
dec
cmp
inc
inc
test
inc
push
lret
inc
pop
sbb
add
adc
andb
or
add
mov
adc
test
mov
in
pop
add
sbb
jge
push
mov
cmp
les
rdpmc
fs
hlt
movl
cmp
clc
adc
pop
cmpsl
addr16
imulb
test
push
push
xor
inc
dec
insb
mov
or
add
add
add
pop
cmp
add
or
cmp
add
cmpb
lea
dec
pop
push
mov
inc
cld
inc
sub
xor
inc
inc
test
std
jmp
push
push
in
out
mov
scas
das
fs
sbb
push
mov
sbb
cmp
or
cmp
jecxz
dec
cmpsb
cmp
push
std
orl
adc
and
and
pop
and
cmp
lret
inc
and
and
push
repnz
and
jmp
or
jmp
std
jmp
cld
rorb
mov
pop
mov
inc
pop
cltd
mov
or
adc
shl
daa
adc
adc
std
retw
outsl
adc
inc
add
sbb
mov
in
sar
push
jo
sbb
push
jno
je
aam
mov
pop
dec
aam
cmp
pop
jp
add
fldl
adc
xchg
mov
mov
test
push
insb
ds
lret
adc
xchg
pusha
mov
cmp
leave
cmp
sarb
push
push
cmp
mov
mulb
and
inc
pop
sarb
dec
sub
ret
mov
and
add
mov
out
adc
jns
dec
inc
data16
int3
rol
add
fwait
pusha
push
dec
xorl
and
xchg
fwait
mov
out
aaa
or
sub
into
js
lea
or
or
push
adc
jbe
and
mov
movb
mov
cli
fsubrp
shrl
lods
insb
and
adc
sub
addl
ljmp
fisubrl
xchg
push
and
jbe
and
mov
lea
push
ret
add
je
mov
add
jecxz
cmp
sub
sub
xchg
sub
jp
mov
adc
cmp
bound
loope
je
add
fadds
cmp
lret
mov
xchg
add
sbb
xor
mov
loopne
outsb
sub
stos
xlat
stos
and
cmp
mov
inc
into
push
fildl
rorb
cmovns
roll
adc
ficompl
xor
int3
andb
test
es
jno
fiadds
cld
mov
dec
pop
pop
or
ret
test
lock
test
mov
and
fmul
out
movl
mov
add
mov
fs
cmp
xchg
mov
pop
fisttpll
into
pop
ljmp
inc
mov
mov
sub
inc
pop
or
outsb
rorl
cmp
mov
or
and
adc
push
jo
push
adc
and
push
add
js
andl
inc
add
pop
and
adc
fwait
mov
sbb
jl
sbb
dec
sub
jle
int3
sub
and
cmp
popa
jge
and
imul
jmp
jns
imul
pop
and
adc
mov
faddl
imul
bound
lret
lret
das
xchg
cmc
push
imul
push
mov
ss
cmp
sbb
push
ret
call
jl
int3
add
push
and
iret
jo
mov
pop
add
test
fisttpl
xlat
sbb
xchg
pop
and
pusha
call
sbb
jp
enter
push
shrb
sub
pop
jp
mov
push
sbb
pop
sbb
inc
fdivrl
imul
add
add
dec
push
adc
inc
sub
mov
pop
movsl
dec
and
or
adc
and
lock
and
cmp
sbb
insl
jmp
loop
addb
sarb
dec
in
fcomps
or
xchg
jbe
adcl
out
and
loope
or
and
dec
icebp
cmp
sub
rcrl
sbb
cmp
mov
push
lds
adc
and
shlb
adc
push
imul
mov
out
rorl
and
push
or
add
mov
sub
xchg
sbb
dec
mov
fists
push
and
and
lea
jmp
decl
ljmp
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sarb
loopne
cmp
je
sbb
sbb
mov
sbb
xor
lcall
adc
xchg
addr16
pop
fsubrs
mov
clc
add
push
add
loope
loope
push
cmp
je
sbb
movsl
call
xor
js
test
daa
testb
movzwl
mov
out
and
mov
in
inc
adc
hlt
aaa
in
cld
aaa
daa
addl
loope
jl
mov
mov
jmp
xlat
and
sub
sub
add
loopne
fisubrs
ljmp
inc
mov
xchg
or
xor
add
sbb
loope
out
cld
addr16
and
rcr
aad
test
and
mov
imull
mov
orb
mov
in
ljmp
dec
mov
subb
xor
adc
stos
aaa
cltd
add
cmp
inc
xchg
xchg
dec
cwtl
dec
or
in
add
es
dec
cmp
outsb
xchg
inc
lcall
mov
xchg
adc
xchg
les
pop
incl
push
pop
das
jbe
xor
push
js
pop
nop
inc
cli
mov
inc
rolb
lds
or
sub
call
push
jno
das
test
lods
or
inc
inc
mov
addr16
enter
or
mov
divl
mov
fmul
mov
lret
add
pop
enter
xchg
fcoml
daa
scas
mov
ss
dec
xor
lcall
xchg
dec
jns,pn
sbb
das
dec
adc
inc
test
dec
addr16
add
stc
std
lods
cmpsb
ss
adc
and
sbb
add
adc
loope
mov
push
out
push
lret
jl
pop
lods
jne
add
xlat
mov
add
push
lea
jo
and
loop
nop
and
imul
mov
shl
jo
jle
int
cld
out
push
iret
lock
and
xchg
loope
xor
in
cmp
inc
fdivl
popf
fmull
andl
rcrb
cmc
fimuls
movsb
cmp
push
leave
in
pop
inc
adc
push
mov
ret
je
cmpsl
std
leave
cmp
cmpl
dec
sbb
mov
push
mov
in
and
jmp
or
data16
add
xor
fadds
int3
jmp
cltd
nop
add
loopne
bound
push
sti
or
add
gs
cs
addr16
and
mov
cmp
xor
mov
fbstp
loopne
arpl
push
pop
inc
add
ss
sarb
inc
sub
push
push
clc
out
add
xor
call
jecxz
mov
push
xor
sub
add
pop
push
repz
sbb
test
jo
or
femms
ljmp
pop
and
jne
or
add
sarb
stos
ret
xchg
shrb
pop
jmp
xlat
shr
mov
aam
sub
test
sti
mov
add
push
in
les
lock
movl
mov
test
cmp
dec
and
andl
aad
ja
jl
cmp
push
in
dec
sub
xor
ss
sub
orb
jns
iret
xchg
push
hlt
shll
call
rorl
loope
mov
dec
mov
adc
add
inc
cmp
dec
jg
mov
pusha
mov
lock
cmp
je
lcall
mov
imul
add
push
mov
xchg
sub
aad
push
mov
mov
cld
pop
mov
jo
mov
int3
mov
or
in
and
sbb
imul
sub
mov
pop
enter
icebp
jge
xchg
cld
shlb
orb
cmp
adc
or
pop
nop
dec
jmp
sub
mov
or
orb
sub
andb
cmp
jne
jecxz
pop
inc
std
mov
lret
push
push
mov
cltd
movsl
icebp
mov
adc
sbb
mov
xchg
mov
jnp
xchg
in
or
inc
ljmp
imul
add
cmp
nop
cli
imul
xchg
adc
lods
add
and
leave
movsb
jo
lahf
adc
scas
mov
pushf
jns
xor
push
jb
xor
sbb
fcoml
je
add
in
sbb
adc
mov
insb
add
in
mov
pop
nop
adc
gs
das
aam
xchg
cld
sub
cmp
mull
sbb
pop
mov
pop
insb
test
push
adc
or
add
ret
jecxz
addb
insb
or
into
add
xor
outsl
sub
jo
pop
and
in
das
je
outsl
loop
xchg
add
bound
jbe
sbb
xor
imul
fimuls
add
or
sbb
adc
aad
pop
sbb
mov
setb
adc
pusha
mov
jne
add
pop
daa
mov
pop
insl
sub
sbb
adc
loop
popf
and
lods
icebp
daa
add
insb
loopne
je
or
jbe
in
push
mov
push
movsl
adc
or
push
push
mov
lds
xor
test
fildll
sti
push
pop
xchg
add
addr16
push
inc
adc
popf
or
jb
and
rolb
test
ret
or
movsb
scas
jmp
pause
push
aaa
pop
dec
popa
pop
lods
adc
jne
dec
add
ds
and
add
or
adc
adc
xchg
ret
lret
add
shr
popa
shr
mov
and
inc
add
pusha
loopne
sbb
fwait
lods
imul
or
pop
inc
adc
xchg
mov
sub
dec
jno
jecxz
in
faddl
xchg
mov
fisttpl
add
inc
fsts
sub
add
pop
mov
sub
mov
dec
dec
mov
mov
fadds
push
sbb
js
test
adc
arpl
or
lret
and
enter
in
and
jl
inc
mov
jge
mull
lahf
push
adc
lea
push
pop
push
add
jb
mov
les
or
aam
icebp
ret
sti
sar
popf
jnp
mov
push
pop
or
pop
lock
push
or
call
jns
jl
shl
pop
mov
and
out
sbb
aaa
out
fiaddl
call
enter
loop
pop
add
xchg
call
jmp
pusha
in
add
mov
fdivr
call
lea
mov
push
lock
sbb
cltd
lods
cmp
mov
mov
mov
and
or
add
addr16
dec
mov
inc
sub
add
jmp
push
test
pop
xor
loopne
ret
cmp
and
aas
push
lods
or
int
or
adc
jns
push
movsbl
jl
dec
push
iret
enter
dec
ret
dec
mov
lea
enter
lods
mov
popa
add
outsl
lods
adc
xchg
aaa
or
cld
add
cmp
nop
adc
fsubr
mov
sub
arpl
push
inc
jo
addl
in
jnp
popa
jl
in
sbb
add
jp
or
add
mov
push
mov
pop
and
test
jae
ja
in
je
ja
stos
jae
pop
mov
cld
out
jns
cs
cld
cli
add
push
cs
or
inc
and
mov
or
mov
adc
and
push
inc
cltd
insb
cmp
insl
stos
sbb
rclb
or
xchg
push
or
inc
sbbl
das
add
sbb
ret
xchg
in
or
sub
or
adc
je
add
and
mov
in
add
add
xor
sbb
add
ficomps
inc
daa
push
aam
rol
xchg
shlb
loop
mov
pop
or
pop
rolb
mov
enter
push
enter
insb
adc
mov
fnsave
sub
xor
xchg
sbb
cmp
adc
sub
stos
mov
fistpll
fs
cs
inc
popf
add
mov
jge
push
or
nop
and
fadds
fildl
mov
movsb
cmp
inc
mov
cmp
aas
jmp
mov
cmpb
xor
nop
fiadds
testb
hlt
sbbb
adc
lock
sti
add
push
jne
xchg
loop
ljmp
mov
sbb
cmp
or
fmulp
adc
movsb
outsl
inc
add
jns
inc
lds
inc
sbb
popa
ss
jl
push
xchg
repz
mov
pushl
clc
aas
adc
and
sub
mov
clc
push
adc
cmpl
mov
mov
mov
or
xorb
test
rcl
std
push
pop
mov
test
rol
jg
mov
lea
cmp
jne
test
mov
mov
mov
inc
add
imul
ret
stos
adc
push
inc
xor
pop
inc
xor
fists
or
aad
mov
or
scas
aas
mov
inc
jae
or
loopne
inc
pop
arpl
lea
aam
push
push
pop
pop
pop
orb
xor
dec
push
cmpsb
cli
lcall
sbb
push
dec
insb
mov
leave
shrl
mov
stos
or
or
mov
fnstsw
outsl
dec
aaa
adc
pop
xor
negb
icebp
push
pop
sbb
push
dec
pusha
nop
ret
shlb
adc
xor
push
ret
int3
sub
adc
push
and
mov
xchg
lcall
or
adcl
int
negb
xchg
daa
rolb
loop
dec
or
sarb
addb
inc
and
adc
aaa
add
aam
or
add
inc
cmpsb
inc
cmp
add
mov
popf
daa
adc
push
jnp
pusha
xchg
adc
or
fdivr
cltd
jecxz
push
mov
lea
push
mov
mov
mov
rcrl
push
push
pop
cs
cltd
hlt
lds
and
movsb
inc
cli
dec
adc
cwtl
inc
push
pop
rcr
add
mov
cmp
lds
cmp
loopne
pushf
xlat
sub
test
inc
xchg
dec
xchg
outsl
cld
cld
ret
je
push
shrl
sahf
push
popf
inc
add
add
in
push
xor
je
aam
mov
lock
pop
cmp
adc
pop
push
and
adc
or
leave
pop
jg
cmp
adc
sbb
xor
push
cld
push
lret
jne
pop
out
lods
nop
aas
cmpsl
cltd
jl
xor
cwtl
sbb
jb
lcall
push
xlat
inc
gs
sarl
testl
add
inc
mov
popa
push
fadd
xor
add
or
push
mov
ret
enter
aaa
adc
rcr
shr
rcr
or
div
aaa
mull
or
add
jb
cmp
fwait
insl
dec
ja
push
push
jbe
sub
fbstp
fadd
sahf
and
pop
mov
dec
xor
push
add
adc
lea
rcr
push
shr
inc
add
mov
lock
and
mul
pop
adc
cmp
std
outsb
push
jbe
dec
cltd
mov
pop
in
pop
push
aam
pop
fwait
xor
adc
pop
arpl
pop
call
mov
sbb
sar
add
fisttpll
jne
fmull
insl
clc
fstpl
sbb
pusha
jl
xchg
fnstsw
test
ret
or
mov
xorl
arpl
stos
or
jno
nop
test
sbb
rol
sbb
xor
pushf
pop
or
and
or
push
sub
les
imul
xor
dec
xor
pop
push
sbb
mov
jo
mov
cmp
mov
nop
or
mov
jmp
inc
enter
cmp
ret
adc
clc
push
popa
xorb
xor
xor
mov
adc
xchg
adc
and
jns
popa
xor
js
sahf
or
repz
ffreep
popf
mov
sub
push
jne
dec
inc
data16
ljmp
lret
call
xor
in
sbb
xor
cmp
jno
mov
cwtl
add
mov
mov
imulb
sbb
and
mov
aaa
add
cmpsl
stos
mov
dec
pushl
adc
jo
adc
or
aam
pop
test
xchg
mov
in
mov
inc
cmp
mov
setg
sub
cmp
sbb
inc
adc
jnp
add
test
mov
push
fistpl
leave
cmpl
in
xor
or
scas
pop
add
push
bound
data16
ret
aaa
mov
jne
bound
dec
sarb
dec
add
decl
inc
jo
xchg
cwtl
mov
imul
and
adc
mov
add
repz
sbb
inc
add
and
mov
jge
sbb
jb
jl
xor
fs
jb
or
mov
enter
and
or
pusha
mov
sub
sbb
mov
jg
mov
jns
mov
add
nop
inc
sbb
iret
mov
test
stos
aam
mov
add
es
ret
bound
sub
xor
inc
sarl
push
movsl
pop
push
add
xor
call
add
dec
add
mov
cmp
aad
mov
int3
inc
popf
xchg
or
mov
sbb
jmp
aam
loope
and
fidivrl
adc
or
sub
dec
not
adc
jl
stc
xor
push
xchg
mov
setg
or
xchg
cs
shrb
dec
sub
mov
dec
xchg
cltd
cmp
pushf
rorl
fcoml
cmp
lods
mov
das
bound
pop
cmp
filds
pop
xchg
dec
cmp
jmp
jl
sbb
jae
push
and
rclb
scas
incb
add
call
dec
popa
mov
sub
fists
pop
lods
inc
popf
or
insl
test
adc
lcall
jbe
jg
inc
jne
in
inc
push
jmp
data16
aaa
cmpsl
add
jnp
add
jecxz
push
xor
and
dec
lods
cmpsb
fst
xchg
cltd
enter
and
aas
pop
xchg
rol
or
sub
add
adc
lret
lods
cmp
js
sbb
or
sub
jnp
cld
mov
cwtl
pusha
pop
shlb
rorl
movsl
jnp
pop
sbb
inc
and
sbb
shll
je
pop
addb
xor
dec
sahf
mov
int3
adc
adcb
inc
pop
pop
ret
test
adc
inc
cwtl
pop
lret
pusha
loopne
mov
add
adc
out
jns
mov
test
fisttpll
adc
mov
fwait
gs
sub
je
movsl
jg
push
pop
je
loopne
push
push
push
shlb
sbb
and
int
cmp
int
inc
ljmp
dec
adc
insb
push
add
or
adc
add
add
add
mov
sbb
or
push
stos
or
aam
push
call
inc
xchg
outsl
add
data16
cmpl
sbb
stc
and
aam
pop
push
cmp
jg
adc
int3
or
ss
sbb
insb
fimuls
push
ja
push
loopne
xor
sahf
in
xchg
shr
pop
add
hlt
add
and
ja
cmp
cmp
jmp
add
loopne
add
ljmp
scas
sub
add
cmp
bound
push
adc
cltd
mov
pusha
cltd
jbe
add
rorl
push
scas
inc
popa
pop
xor
sub
pusha
push
jmp
rol
xchg
mov
setg
enter
push
sbbb
mov
mov
jo
cmp
adc
mov
mov
rcrl
add
or
imul
insl
sbbb
out
outsb
int
add
ds
or
mov
pop
imul
lea
sub
add
ret
addr16
icebp
rcll
and
mov
cmp
rorb
push
lea
xor
mov
lea
add
mov
popa
or
mov
enter
andl
inc
inc
xchg
xchg
xchg
pusha
pusha
dec
pusha
pusha
dec
push
pop
outsb
ja,pn
pusha
cwtl
test
insb
pushf
inc
adc
pop
ret
ss
or
enter
jne
and
mov
andl
or
lock
mov
mov
xlat
or
hlt
mov
leave
pop
or
xor
pop
pop
xor
repz
sbbl
mov
cmp
nop
pop
jae
sahf
mov
out
mov
or
mov
inc
or
lea
aam
lods
pop
xor
sbb
mov
sub
adc
sbb
xlat
data16
inc
adc
lea
sub
inc
fistl
scas
xor
aas
mov
mov
lea
mov
insl
jmp
xor
faddl
add
dec
xchg
adc
or
jecxz
push
adc
adc
ljmp
es
pop
xchg
test
dec
sub
popf
sub
add
data16
cmp
daa
dec
xchg
out
jno
jne
pop
jg
cmp
inc
mov
std
and
cltd
out
push
lea
sbb
adc
sbbb
sbb
jl
sti
xor
mov
jnp
mov
insb
dec
lock
pop
add
mov
aas
loope
shll
sar
loopne
pop
iret
or
jo
rorl
enter
adc
add
ljmp
mov
jmp
cmp
mov
xor
mov
aaa
pop
mov
push
cmp
and
cmp
inc
rorb
imul
or
xchg
mov
test
push
adc
or
inc
scas
outsl
xor
sub
addr16
push
sti
mov
xor
jne
flds
jne
add
and
jle
push
sub
lock
add
lea
add
push
xchg
int3
sbb
gs
daa
push
or
lock
lea
xchg
push
jo
push
cmp
aas
xchg
push
push
and
fstl
sbb
jmp
inc
xor
inc
insb
add
addr16
sub
push
inc
lods
jl
inc
pslld
popa
or
cmp
rclb
lretw
push
stc
mov
int
sbb
pop
mov
jmp
iret
or
push
xchg
or
pop
daa
pop
lret
sub
cmp
dec
lds
mov
cmpsb
push
std
cmp
jmp
add
imul
add
scas
xchg
xchg
sbbb
sbb
sbb
data16
aad
lcall
imul
cmp
adc
aas
aas
sbb
sbb
sbb
xor
aaa
out
inc
ds
out
mov
jl
adc
shl
xor
test
es
sub
mov
fstps
xchg
push
cmp
sub
cs
cmpsl
cmp
add
xchg
and
mov
sbb
pop
sub
pop
adc
or
dec
adc
enter
and
imul
icebp
and
push
push
dec
cmp
adc
nop
shrb
sbb
mov
mov
jmp
in
dec
cli
push
shll
jle
lret
mov
add
mov
xor
jmp
pusha
and
cmp
cmp
or
xor
sub
jno
enter
push
dec
in
mov
xor
add
imul
mov
rcl
hlt
lea
aad
dec
cmp
sbb
shrl
enter
xor
sbb
add
xor
enter
xchg
popa
fadds
dec
jno,pn
loope
inc
sbbb
cmp
sub
xchg
cmpsb
mov
lcall
test
sbb
xor
sub
fadds
sbb
or
dec
jl
fadds
std
js
js
xor
xchg
and
sbb
fsts
lea
je
int3
ret
cmp
adc
test
jo
jo
loopne
add
sub
sub
push
lods
je
daa
inc
jmp
leave
sbb
imul
xor
rcr
inc
fnsave
push
push
dec
lcall
hlt
fistps
cmpsl
popa
jbe
mov
add
add
push
and
fnstenv
inc
fsubrs
jp
dec
shll
push
ret
adc
mov
add
pop
rolb
lret
jo
dec
mov
add
fbstp
sub
das
cmpsl
xor
aaa
xor
pop
cs
xor
mov
xor
push
mov
ss
inc
sub
xor
xor
aam
add
add
push
loop
pslld
push
add
add
adc
lret
out
add
or
push
or
enter
or
jne
pop
xlat
es
pop
add
or
adc
or
or
sub
adc
sub
nop
imul
popa
adc
push
bound
pop
dec
frstor
cld
mov
and
or
insl
popa
or
inc
fdivs
sarb
subl
add
pop
sbb
push
incl
add
mov
inc
cld
aas
or
pusha
not
add
push
pop
fwait
sbb
enter
add
outsl
xchg
push
int
jnp
push
clc
add
or
push
push
mov
cmp
jl
mov
adc
daa
xor
popa
adc
scas
sub
imul
ret
dec
mov
js
adc
sbb
test
pop
ret
and
das
lods
mov
jae
add
adc
fadds
mulb
pop
adc
sbb
sub
orl
shl
test
inc
sbb
loop
push
or
cmp
loope
incb
xorb
fs
inc
adc
cld
push
pop
fsubrs
loope,pt
add
lds
and
mov
add
and
xchg
sub
or
idivl
cmp
stc
lock
lahf
cwtl
mov
jns
inc
nop
mov
mov
and
pushf
aaa
in
js
add
test
jno
mov
pop
jle
call
in
push
sbb
cmp
sub
sub
xor
mov
and
int3
jo
add
add
mov
cmp
add
sub
lret
lea
jb
sahf
cmp
sub
test
mov
mov
scas
inc
nop
fpatan
dec
sbb
repnz
sub
mov
mov
jmp
imul
jne
mov
push
inc
cli
xor
sub
jns
push
xchg
sarb
add
jmp
push
enter
or
es
sbb
ret
adc
nop
or
addr16
jmp
call
rcl
push
std
mul
cmpsb
adc
cmp
adc
sub
sub
or
testl
push
in
mov
pop
xchg
aaa
shlb
stc
inc
mov
xor
in
push
lret
lcall
or
push
jnp
lea
mov
push
mov
sahf
xchg
inc
sub
loopne
cs
mov
cmp
sbb
and
inc
or
test
sbb
xor
fsubrp
arpl
adc
mov
dec
adc
negb
xor
stc
enter
in
dec
leave
jle
mov
roll
pushf
and
mov
lds
fmul
lock
dec
addb
in
cmc
and
or
push
pushf
pusha
pop
es
adc
cld
sub
int
ljmp
insb
pop
adcb
xchg
pusha
shll
hlt
pop
mov
and
and
pop
add
movsb
mov
pop
daa
jecxz
xor
adc
sub
les
pop
test
and
in
mov
and
das
add
dec
cmp
mov
adc
push
mov
push
mov
xor
jle
xor
dec
push
mov
stos
repz
cmc
push
fsubr
jp
inc
pop
es
lock
insb
cmp
push
mov
xor
aad
pop
sub
xchg
lret
in
clc
pop
pop
jb,pt
loop
inc
add
jle
test
inc
or
ret
icebp
add
sbb
push
add
inc
roll
push
or
lods
inc
adc
int3
push
rclb
add
fists
subb
adc
mov
jmp
and
inc
aaa
adc
mov
xor
daa
daa
fsubs
js
shlb
js
lret
leave
enter
jbe
test
dec
sbb
add
inc
mov
lods
pop
inc
loopne
or
inc
loopne
sub
push
push
add
dec
fldcw
cmpb
mov
mov
out
adc
xchg
enter
icebp
sub
imul
mov
outsb
adc
fsubrp
jl
in
cmp
jmp
xor
mov
cld
sbb
cmp
je
mov
jmp
push
xchg
and
insl
bound
add
data16
push
or
mov
pushf
mov
ja
cmp
jno
lcall
cwtl
rol
pop
mov
jmp
daa
sub
inc
inc
mov
adc
push
movsb
add
jmp
inc
lds
imul
enter
sub
dec
repz
sbbb
js
push
in
mov
clc
pop
jne
mov
sbb
sbb
xchg
xchg
ret
add
jge
outsl
xchg
mov
mov
xor
xor
push
or
in
cltd
sub
out
add
ret
adcb
adc
add
add
into
clc
std
inc
imul
and
or
paddusb
sub
push
in
xchg
xorb
xlat
test
cmp
add
lret
fisttpll
jecxz
add
movsb
in
hlt
sbb
ret
add
hlt
pop
cmpsb
outsl
jne
jno
pop
add
cmp
mov
fmuls
out
call
inc
add
adc
gs
scas
nop
adcb
arpl
sbb
xchg
xchg
mov
xor
or
aam
ret
cmp
sbb
mov
or
sbb
inc
push
loopne
fcompl
ljmp
jp
or
adc
mov
std
pop
cwtl
in
push
pusha
adc
sarb
hlt
jo
js
leave
xor
push
lock
sbb
xchg
xchg
lock
arpl
lds
and
in
sbb
xor
in
xor
scas
or
subl
jmp
sub
notl
shll
or
xchg
and
cmovae
or
rcll
loopne
jl
daa
loope
jne
xchg
or
shlb
ds
int3
test
icebp
and
stos
or
push
mov
enter
adc
lock
or
shlb
push
int
inc
pop
sbb
and
sbb
popf
stos
pop
std
inc
cmp
bound
mov
sub
sub
and
sbb
stos
adc
leave
in
add
adc
call
push
jno
mov
xchg
inc
mov
in
sti
xchg
xchg
jnp
inc
mov
stos
mov
movsl
push
ds
outsl
out
insl
nop
sbb
dec
roll
out
xchg
mov
mov
mov
nop
sbb
stc
in
cmp
adc
in
inc
repnz
unpckhps
mov
je
adc
ret
or
bound
lods
xor
movb
xchg
jmp
rcl
lea
movb
and
ss
push
repz
and
xchg
push
adc
popf
dec
loopne
dec
dec
data16
loopne
loopne
add
sub
xor
or
jb
cmpsb
sbb
cmp
sbb
add
xchg
mov
xor
enter
stc
add
push
test
mov
je
add
dec
iret
add
dec
fcomps
out
jns
cltd
aaa
or
dec
xor
subl
pusha
js
sbbb
or
xor
dec
or
cmp
push
les
fnstenv
in
sbbb
icebp
or
xor
or
or
mov
xor
aam
mov
add
insl
jne
pop
pop
sub
cmp
mov
daa
add
loope
xor
aaa
stos
sbb
xchg
repnz
cmpb
cltd
sbb
inc
add
repz
mov
bsf
jbe
and
add
add
add
push
sub
roll
cvtdq2ps
ret
jno
bound
push
stos
dec
ljmp
add
add
aam
addb
or
jo
ret
adc
inc
mov
mov
add
rorl
nop
rorb
lds
inc
or
fists
pop
push
sbb
sbb
pusha
mov
adc
clc
pop
inc
dec
push
movsb
loopne
cmpsb
mov
push
push
push
imul
mov
pop
stos
mov
pop
and
or
ss
and
sbbb
dec
mov
imul
sarb
adc
mov
mov
jnp
loopne
stos
lahf
inc
int3
shlb
xor
loopne
hlt
add
xor
xchg
fcmove
add
popa
xor
push
push
push
dec
stos
lods
cltd
loope
cs
fsubrs
je
hlt
or
adc
loope
xor
sahf
mov
dec
roll
mov
sbbb
mov
and
fsubrs
inc
inc
mov
lcall
fsub
icebp
inc
fadd
call
mov
jl
loopne
inc
adc
nop
pop
add
mov
fldenv
jnp
jbe
or
xor
add
inc
mov
jmp
stc
mov
push
stos
in
sahf
pop
lock
mov
loopne
je
incb
jl
dec
pop
mov
insb
orb
mov
sub
jp
add
mov
shll
mov
push
lahf
orl
cltd
jecxz
popa
and
test
dec
inc
xor
fmull
mov
mov
mov
or
pusha
enter
xor
aam
mov
in
insl
adc
dec
dec
sbb
pop
sbb
xchg
add
outsl
in
or
lcall
xchg
xor
or
adc
sti
cmp
push
adc
mov
adc
fdivl
jae
adc
clc
pop
and
mov
pop
fsubl
cmp
push
dec
sbb
push
rorl
push
test
mov
cmpsb
xor
adc
mov
add
rcll
dec
les
jno
push
dec
lods
scas
add
mov
add
xlat
popa
adc
sbb
insl
cltd
mov
jne
nop
jne
shlb
add
xchg
push
sub
push
loopne
bound
mov
adc
pop
mov
out
clc
push
mov
movsb
or
shll
cmp
or
jp
adc
imul
xchg
sbbl
inc
inc
fcomps
in
cltd
push
fmul
fdiv
inc
add
or
loop
scas
sub
and
xchg
or
dec
ficoml
xor
or
pop
xchg
mov
mov
mov
add
ja
lock
jecxz
push
xor
inc
mov
in
pop
loopne
fstl
or
inc
add
add
rorl
call
in
inc
adc
movsl
sbb
mov
test
shll
pop
mov
ja
and
or
pusha
add
dec
insb
mov
bound
push
addr16
dec
mov
mov
push
pop
xchg
cltd
in
rcl
push
pop
shr
mov
fldenv
adcl
add
insl
xor
pop
ja
mov
stos
xchg
add
movsb
xor
hlt
or
test
xchg
aas
aas
xor
pop
mov
jge
inc
aaa
int
lds
mov
xor
sbb
dec
bound
pusha
outsb
pop
lock
sub
adc
cmp
adc
cmpsl
adc
sub
mov
sub
adc
mov
push
aaa
adc
push
in
aam
dec
jg
cmp
jne
imul
sub
add
jbe
popa
and
push
cmp
xor
dec
in
sahf
fucomi
adc
add
mov
movsb
or
aas
and
xchg
push
and
js
ja
movsl
xor
imul
addb
inc
test
mov
sub
mov
xchg
sahf
mov
cld
xchg
sub
sub
adc
je
xor
clc
int
fldpi
cmp
cmp
and
pushf
mov
or
mov
add
movsl
adc
sub
loope
jns
ss
mov
jnp
mov
outsb
test
jge
adc
inc
inc
pop
mov
pop
imul
or
cli
and
int
gs
jmp
push
scas
subl
mov
cmp
or
push
or
xchg
fistps
mov
adc
ljmp
adc
or
das
stos
adc
jbe
rclb
in
and
and
cmp
or
mov
inc
jl
fiaddl
pmulhuw
dec
xor
lret
fdivrs
inc
nop
push
xor
shlb
jge
sbb
lock
xlat
mov
push
je
rclb
scas
add
cld
cmp
rcrb
enter
push
in
sar
sbb
adc
cmpsl
aas
jbe
xchg
xorb
imul
xorb
cmc
ljmp
jo
addl
out
push
cmp
fmull
jl
or
lods
pop
push
fsubl
sub
das
mov
add
mov
icebp
inc
add
imul
add
fildl
mov
xchg
ja
jns
inc
mov
push
mov
mov
sub
stos
push
lret
fwait
push
sub
inc
sub
lahf
push
shlb
testb
mov
fiaddl
cmp
shlb
pop
mov
stc
lahf
xchg
or
inc
fcoms
hlt
push
in
xchg
sbbl
pusha
pushf
mov
shlb
jp
lea
arpl
shr
push
xchg
test
cwtl
dec
and
dec
aam
jb
orb
aam
sbb
inc
aam
pop
pop
nop
add
add
aam
loope
in
fwait
test
sbb
fs
int3
int3
int3
inc
rclb
push
int3
loop
filds
aaa
push
adc
jmp
subb
clc
loopne
xchg
popf
pop
in
lods
mov
testl
xor
sub
ret
adc
fsubs
xor
pop
fdivs
in
pop
mov
jne
imul
sbb
pop
or
jo
or
clc
mov
push
in
popl
nop
inc
jmp
mov
jle
jbe
stc
inc
or
mov
adc
aaa
xor
or
adcb
pop
mov
or
adc
add
lods
popa
and
pop
pop
adc
xchg
inc
mov
cli
mov
mov
call
inc
inc
cmpl
or
btr
adc
shrl
and
xchg
xor
xor
sbb
add
adc
mov
sub
and
pop
add
jae
jl
and
movsb
cmc
ud0
or
subps
inc
xlat
xor
adc
cmp
scas
mov
int
imulb
rcll
adc
fwait
push
xchg
lods
out
inc
pop
inc
data16
dec
xor
adc
repnz
xor
aas
mov
lret
divb
push
inc
aam
stc
jp
es
fcomps
fcoms
test
jge
cmc
scas
orl
mov
xchg
das
in
add
lods
int3
mov
cmc
add
and
xchg
or
call
aaa
aam
and
fsubl
or
sbb
and
dec
push
and
out
jmp
push
addr16
pop
push
gs
test
stos
daa
fdivrs
test
test
mov
mov
dec
jnp
rcrl
sti
les
out
push
inc
pushf
ffreep
pop
in
leave
loop
dec
xlat
push
xchg
dec
in
popa
and
mov
push
add
pop
testb
cmp
cmpl
dec
test
or
xor
dec
fwait
add
or
pushf
dec
and
bound
jne
or
sbb
mov
stos
enter
test
pop
fadds
xchg
jae
inc
shrb
fsubrp
cld
adc
xchg
add
loopne
pop
inc
dec
das
sbb
popa
xchg
pop
nop
and
inc
sarb
stos
add
xchg
pop
jmp
mov
inc
sbb
enter
mov
lea
inc
sub
sarb
jle
ret
imul
in
cmp
insb
mov
cmp
mov
pop
popf
pop
cmp
and
enter
add
adc
enter
sub
sbb
rolb
loopne
lfs
fldl
jl
mov
test
sub
in
mov
loop
mov
add
xlat
push
lock
and
ficoml
cwtl
fsts
and
push
or
lea
xlat
popa
out
sbbl
jns
pop
or
add
or
in
popf
loopne
mov
inc
in
addr16
mov
jo
idiv
add
adc
cmp
dec
data16
push
test
push
fwait
push
cmp
data16
jl
and
adc
ret
fnstcw
xor
or
mov
mov
gs
orb
pop
es
shlb
pusha
inc
imul
dec
arpl
repz
cld
rcl
dec
or
out
and
push
push
lods
pushf
or
icebp
dec
pop
dec
add
pop
ja
push
pop
js
ljmp
popf
mov
push
jmp
imul
push
cmp
pop
cmc
fsubl
negb
pop
jne
adc
popa
jge
inc
daa
cld
push
inc
sbb
jecxz
mov
int
imul
push
les
nop
ja
dec
and
cwtl
mov
sbbb
mov
cmp
enter
sub
call
xor
pop
sub
xchg
xchg
sbb
aas
fcomp
cmp
int3
fadd
add
pop
sahf
add
inc
fsubs
dec
cltd
dec
push
aam
hlt
sbb
ret
shl
sti
aas
jge
movsl
shrb
ss
push
push
aaa
cmp
outsl
or
xchg
jb
mov
imul
cltd
add
xchg
mov
mov
xchg
cltd
insb
test
mov
outsl
in
pop
sub
sub
lahf
rcrb
mov
lock
inc
xor
jns
rcrl
sub
dec
add
cs
sub
hlt
clc
add
js
popa
in
ss
inc
push
cmp
in
sub
cmp
or
movl
inc
test
mov
and
inc
mov
inc
pop
adc
dec
aam
mov
testb
aad
in
dec
add
movsl
fdivrs
test
adc
daa
hlt
mov
mov
lea
int
clc
or
lods
daa
mov
jnp
mov
lock
jle
cltd
xor
jecxz
mov
in
ret
jle
pusha
mov
sbb
jo
aas
cmpsb
inc
adc
pusha
in
inc
rcl
rolb
shrb
pop
pop
loopne
adc
cmp
rcl
rclb
rcl
sbb
fwait
push
pop
aam
enter
aam
mov
in
xor
repnz
mov
out
in
lock
inc
xchg
fcoml
call
jo
aaa
push
jbe
pop
nop
cs
aam
or
enter
push
pop
popf
stos
nop
mov
add
xchg
loopne
dec
dec
push
loopne
shrb
push
xchg
loopne
xchg
mov
xchg
mov
push
rolb
lret
mov
in
in
add
es
ficompl
mov
movsl
cmp
mov
inc
cld
addr16
mov
mov
dec
sub
icebp
adc
lods
lock
leave
addl
cli
pop
dec
add
cmp
dec
mov
repnz
call
jo
inc
mov
dec
lods
adc
les
fsubl
pop
xchg
data16
les
fmull
jb
out
or
sbb
ss
pop
mov
setae
sbb
or
cltd
mov
sbb
inc
xchg
leave
cmpsl
scas
fmuls
test
adc
or
fistps
inc
mov
sbb
sbb
nop
add
jne
adc
test
jae
add
mov
adc
mov
std
sub
push
add
or
inc
movsl
push
adc
popf
enter
dec
pop
sbb
mov
daa
xchg
add
cmp
incb
loopne
loopne
pop
and
cmp
jle
in
mov
mov
mov
fidivs
sbb
pop
or
fdivs
add
shrl
nop
add
dec
xor
xlat
push
xorl
dec
jnp
adc
add
in
mov
aam
mov
xchg
push
pop
dec
clc
adc
mov
test
sbb
mov
push
aad
mov
add
nop
adc
lahf
mov
cld
nop
xchg
outsb
xor
jnp
stos
fwait
or
or
daa
add
lea
dec
or
rclb
xchg
enter
frstor
hlt
cmpl
and
cwtl
sub
add
pop
or
mov
aad
mov
lcall
cli
ja
cmp
mov
aaa
xor
imul
mov
lods
mov
or
sarl
or
sub
stc
rolb
jno
jle
mov
test
jo
shlb
jb
and
ja
xchg
nopl
scas
jns
pushf
mov
mov
movsl
jae
xchg
in
in
stc
clc
inc
call
mov
fistl
rclb
cltd
pusha
add
movsb
inc
inc
loopne,pn
dec
and
into
cwtl
push
sub
lcall
cmp
xchg
mulb
add
jb
pop
lock
pushf
or
xchg
xchg
push
lock
test
mov
lock
lock
xchg
adc
or
mov
and
shrl
and
gs
cmc
add
popa
and
nop
testl
leave
leave
jb
orl
repz
inc
jno
ja
fistl
das
popf
loope
ds
lds
test
stos
enter
fwait
das
mov
push
jmp
xchg
lock
cmp
push
xor
nop
mov
lea
mov
push
mov
xchg
xchg
int3
inc
test
mov
jo
icebp
int3
movsl
or
pop
sub
sbb
mov
sub
mov
mov
lret
push
std
cmc
sbb
mov
push
add
push
inc
and
sub
test
mov
lcall
pushf
mov
fstps
mov
out
push
inc
jb,pn
pushf
mov
js
pop
sahf
and
imul
pop
and
or
adc
movsl
les
mov
pop
jns
xchg
mov
cld
jmp
push
rolb
pop
sbb
mov
nop
inc
cltd
pusha
loop
xor
into
imul
imul
adc
ja
push
adc
and
in
jmp
movl
sbb
popf
or
adc
push
xor
push
imul
adc
jle
cwtl
clc
dec
add
add
sub
or
jmp
mov
fidivs
jle
adc
in
std
inc
jge
xchg
mov
cmc
dec
push
les
rcrb
jp
iret
dec
test
cmp
sbb
mov
les
cmpl
rorl
xor
sub
rcll
sbb
shl
adcb
inc
mov
xchg
ret
or
int
sbb
inc
and
jg
sbb
mov
cmpsb
les
add
xchg
mov
push
or
rol
dec
sub
and
cmp
in
or
out
add
jmp
xor
or
nop
mov
addl
push
adc
pop
call
cmpsw
incl
cld
jo
add
hlt
mov
insl
loope
loop
fsubr
sub
sub
daa
mov
cmp
jo
xchg
into
js
adc
loop
enter
push
jmp
pop
add
adc
ficoml
je
sbb
adcb
pop
shrb
add
sub
push
jecxz
push
push
sahf
push
clc
add
mov
jle
push
or
dec
imul
add
pop
test
lods
mov
adc
in
cmp
push
sub
popf
xor
fdivs
lret
popa
push
push
adc
inc
adc
push
fs
push
dec
loop
inc
setne
sub
sbb
xor
push
popf
aam
loope
and
xorl
sub
xlat
cli
add
or
pop
int
pusha
stos
rorl
push
lea
pop
jae
arpl
inc
les
addr16
js
pusha
and
adc
fucomi
dec
icebp
mov
push
cmp
pop
rorb
out
xor
rorb
xchg
xor
pop
js
loopne
dec
mov
rcrb
sub
add
daa
xchg
sbb
rolb
and
decb
sub
shl
loopne
stos
out
call
gs
std
or
push
lock
and
jno
jg
pop
jae
adc
or
mov
mov
shlb
inc
push
data16
out
loopne
jp
xchg
inc
sub
movsb
rcll
fsubr
out
cmpsl
sbb
push
or
sub
addb
jo
in
and
pop
icebp
mov
mov
dec
cmpsb
loop
or
iret
sbb
push
bound
jg
cwtl
pop
or
jge
mov
and
lock
cmp
popa
in
adc
inc
add
pop
add
push
mov
push
cli
in
enter
sbb
and
stos
outsl
ds
enter
push
in
scas
pop
add
push
movntps
out
call
pop
push
pop
jp
push
in
addb
add
pop
xchg
cmp
adc
xchg
or
or
pop
loopne
sbb
and
cs
mov
fs
lods
in
inc
sub
mov
fsubs
clc
pop
xchg
ljmp
jns
sub
stos
dec
xchg
jp
mov
pusha
jnp
ret
loopne
dec
adc
icebp
xchg
push
add
loop
repz
push
dec
dec
pop
idiv
mov
or
inc
adc
jle
sub
pushf
rclb
add
add
mov
add
add
add
push
and
or
adc
in
jae
into
or
je
hlt
sbb
cmp
or
mov
mov
add
jo
sub
mov
ret
lock
rcrb
add
add
adc
filds
ja
addl
push
adc
push
pusha
and
cmp
push
in
mov
and
loope
sub
sbb
shrb
mov
jmp
orl
xor
ds
or
adc
lods
mov
dec
sbb
rolb
pop
test
cld
or
dec
rorb
out
xchg
xor
ud2
rol
loop
adc
mov
ret
and
jno
gs
and
jo
pop
in
push
xor
mov
jmp
subl
loopne
and
repz
push
inc
hlt
jb
popa
lahf
add
inc
pop
shll
sbbl
adc
xor
adc
adc
sub
adc
shrl
and
je
jae
cmp
adc
adc
xor
xchg
adc
cmpb
imul
lods
popa
jb
pop
or
sub
add
pop
or
or
or
rclb
sahf
ja
aad
cmp
add
call
inc
popa
mov
mov
ret
sub
in
mov
dec
adc
pusha
mov
add
scas
loope
rol
in
jg
ret
and
call
or
in
cli
out
outsb
and
aad
jno
add
les
adc
test
std
add
aad
jl
dec
imul
ret
lods
fcmovnb
mov
cmp
in
ja
fisttpl
test
or
jbe
lea
andl
imul
fadd
dec
push
ds
mov
std
data16
ss
out
add
lock
lahf
or
push
sbb
add
mov
das
faddl
les
pop
jo
das
dec
mov
sbb
dec
rcrb
adc
fimuls
lods
push
fdivs
xchg
xorb
enter
inc
or
adc
in
aas
and
in
mov
jmp
jge
sub
sbbl
popa
ret
xorl
loope
xchg
cmp
inc
stc
ss
out
jns
and
clc
sub
mov
in
outsb
loopne
outsl
and
inc
sub
jbe
mov
sub
add
mov
and
mov
lea
inc
sbb
and
aaa
mov
lcall
ret
xor
in
add
mov
adc
cwtl
or
sub
cwtl
xchg
add
inc
fdivs
jl
mov
shrl
and
test
xchg
push
pop
sbb
add
clc
das
call
lahf
xor
or
xlat
pop
sub
and
dec
imul
jo
adc
xchg
pop
or
and
dec
int3
sbb
adc
xor
addl
fwait
and
stc
sarb
clc
adc
les
scas
ret
ljmp
jb
enter
mov
pop
xorl
leave
xor
ret
jle
mov
fisubrs
jg
jl
into
jae
inc
add
enter
pop
call
imul
adc
adc
mov
push
push
xchg
jl
imul
or
dec
dec
or
and
cltd
jb
pop
xchg
or
mov
ret
sub
add
jg
push
or
mov
adc
or
mov
inc
lahf
mov
js
mov
movb
xlat
jp
xchg
fcmovu
mov
inc
inc
popa
adc
or
mov
push
insb
arpl
mov
mov
aaa
adc
mov
pop
and
inc
mov
or
loope
adc
adc
or
xchg
cs
mov
aam
sub
rol
cltd
les
fnstenv
lock
jb
loopne
fisubrs
cmc
cmp
adc
sbb
and
push
pop
loopne
mov
jle
or
mov
or
fs
lock
jne
xor
push
jne
lock
cs
sbb
add
daa
das
sbb
pop
and
fs
cmp
adc
pop
add
int
xor
inc
push
mov
pop
xlat
jnp
push
jmp
mov
repz
dec
and
adc
sti
mov
jae
adc
shr
bound
je
or
or
dec
imul
shl
dec
inc
dec
or
xchg
or
and
mov
mov
adc
rcl
or
ret
sbb
inc
cmp
lret
push
xor
filds
mov
pusha
subl
rorl
ss
add
cmp
rorl
lock
push
fimuls
shrl
clc
pop
daa
cs
dec
hlt
adc
add
lods
add
je
mov
add
es
enter
sbb
xchg
sub
call
and
nop
xchg
or
rorl
adc
shlb
clc
inc
lock
and
cmp
xor
add
and
dec
aaa
sbb
popf
sbb
mov
mov
fildl
or
or
jne
mov
xorb
add
idivb
add
xor
cmp
clc
sbb
lods
add
cltd
clc
clc
pop
dec
cmp
push
cltd
shrb
jne
in
test
sbb
sub
flds
or
into
mov
push
jnp
cmp
xor
roll
jo
pop
popf
add
jge
add
or
add
pop
add
sub
xchg
inc
lods
sub
std
add
cmp
sub
pusha
lods
push
or
orb
push
jmp
push
popa
mov
out
mov
inc
mov
int
push
adc
mov
or
adc
push
das
adc
adc
das
adcl
imul
add
cs
add
test
add
bound
push
dec
mov
or
movsl
and
add
xor
out
stc
leave
test
or
mov
mov
push
lods
jns
movsb
mov
cmp
cmpsl
mov
dec
lods
dec
and
adc
adc
add
jl
and
push
sub
mov
mov
cmp
sbbl
or
cmp
adc
or
add
dec
loopne
mov
ret
adc
das
or
cld
out
inc
enter
cmpl
enter
or
rorb
in
push
or
je
mov
out
aam
xlat
shll
adc
and
or
xchg
push
xchg
jl
xchg
das
lret
jb
mov
ja
mov
out
xchg
fisttpl
outsb
mov
int3
inc
int3
and
mov
repnz
out
lcall
mov
ret
lcall
adc
je
out
mov
jmp
adc
inc
jmp
push
sbb
lcall
daa
fistpll
sub
inc
adc
jmp
fistl
repnz
jmp
call
mov
cmpb
xchg
xchg
clc
sbb
xor
lock
fdivrs
rol
and
mov
roll
neg
lock
or
leave
and
popa
add
xchg
incl
outsb
arpl
cmc
inc
or
inc
xor
and
or
and
rcrb
jno
test
xor
pop
or
push
lea
clc
int3
push
fldenv
xor
add
pop
ret
stos
push
jg
push
cwtl
fnsave
xchg
and
clc
js
addb
pop
repz
lret
and
jne
ljmp
push
push
and
adc
add
mov
imul
stos
pop
out
push
cltd
mov
dec
dec
int
xor
outsl
out
aad
add
mov
aaa
pop
mov
cmp
les
adc
and
or
arpl
jmp
mov
ja
cmp
das
fnstenv
push
sub
cmp
mov
cs
fwait
xchg
jp
jbe
mov
push
sub
loopne
cwtl
pop
dec
cmp
jns
dec
cwtl
or
in
in
sub
and
and
or
cs
pusha
shll
inc
xchg
lods
test
sbb
add
add
out
add
jg
andl
loopne
loopne
loopne
adcb
xchg
cmp
adc
push
pushf
cld
sub
cmp
sub
add
and
jmp
dec
lods
xchg
or
mov
mov
popf
inc
adc
loopne
ret
clc
imul
mov
dec
inc
mov
shll
mov
neg
popa
arpl
and
das
popa
jne
jp
jg
sub
in
in
in
cltd
dec
cs
lock
push
enter
call
dec
cmp
stos
add
adc
enter
mov
inc
push
sbb
sti
jmp
rolb
das
sbb
or
div
sbb
add
push
mov
test
cmp
jne
add
incb
mov
cmp
and
dec
sti
jp
sbb
inc
sbb
adc
jmp
push
adc
js
jne
sub
rorb
shl
inc
ret
pop
mov
movsb
jp
add
inc
mov
inc
pusha
int
sti
mov
data16
mov
lret
xlat
cmp
rcll
cwtl
or
and
loop,pt
inc
adc
lds
xor
jg
dec
push
add
mov
or
xor
push
inc
push
in
outsb
cmpsl
movsb
cltd
mov
fistl
movb
fwait
bound
mov
jnp
dec
shlb
stc
jl
fistpll
inc
cli
jno
dec
and
lods
mov
jno
inc
push
lcall
xchg
add
out
push
in
add
adc
or
mov
xorl
les
rcrl
xor
xchg
cmp
add
test
nop
sbb
pushf
sub
xchg
add
dec
or
ret
les
jne
xchg
jns
adc
mov
popa
fdivrl
faddl
repnz
shll
fadd
addb
pop
pushf
dec
add
pop
sub
jg
cmpsl
sarb
lea
or
inc
push
add
mov
lods
add
add
push
mov
sub
cmp
ja
lods
fldln2
data16
xchg
inc
mov
mov
jmp
jmp
lret
mov
pop
cs
push
fs
xchg
pushf
mov
mov
push
jae
test
xor
shll
dec
enter
push
pusha
xchg
jmp
cmpsl
xchg
inc
inc
mov
and
xor
or
jge
or
aam
addl
jns
loopne
jbe
fcomp
sbb
fcomp
inc
imul
in
fcomp
rcrb
leave
adc
repnz
mov
jmp
dec
add
pusha
int
dec
incl
addr16
mov
mov
lret
xlat
or
xchg
iret
and
bound
jmp
pop
jge
or
shrd
loope
movl
xchg
cltd
enter
pop
test
jmp
cmpsl
jmp
jne
pop
push
inc
sub
lock
mov
sub
add
imul
or
jg
sub
sbb
xchg
cmp
adc
inc
bound
cmp
sar
lock
jnp
mov
add
adcl
sub
adc
sbb
or
into
inc
shll
jecxz
add
push
lahf
dec
dec
mov
mov
ret
enter
jmp
es
push
fstpl
dec
push
lods
adc
jge
cld
push
mov
inc
mov
push
inc
mov
shrl
adc
mov
cli
in
xchg
jge
cli
adc
mov
mov
cmp
cld
push
leave
ret
movb
or
adc
add
inc
bound
mov
cmp
cmp
ja
movb
or
popf
mov
ds
loope
lods
adc
mov
push
call
xor
inc
push
dec
push
call
xchg
sbb
pop
test
and
rolb
stos
mov
ret
js
fs
sub
mov
sub
icebp
xchg
addr16
mov
outsl
cltd
fldl
scas
push
mov
pop
pop
xor
or
inc
add
mov
and
sbb
or
xor
jae
leave
xchg
in
or
sbb
adc
lcall
iret
pop
inc
jb
adc
xor
shll
jne
adc
xor
mov
es
jae
popa
jp
and
push
lock
sub
xchg
adc
push
addr16
mov
add
xor
xchg
mov
mov
mov
fisubrs
jns
add
xchg
jl
aas
data16
inc
add
push
dec
outsb
or
add
push
dec
push
aas
inc
leave
inc
rcll
add
adc
mov
cmp
xchg
inc
andl
xor
mov
dec
mov
adc
das
les
or
aam
ret
and
jno
jno
pop
sbb
addb
or
inc
popa
mov
mov
mov
bound
mov
or
sbb
je
lods
clc
jns
outsb
sbb
adc
or
mov
dec
lods
clc
dec
aam
dec
jl
adc
adc
int
lret
mov
sub
xchg
mov
or
or
fs
cmp
and
adc
shlb
ss
cmp
jo
enter
lcall
mov
je
and
into
cmp
cmp
int3
adc
sbb
dec
cli
pop
jne
dec
or
dec
xor
adc
mov
pop
and
mov
es
sbbl
or
or
mov
scas
xchg
inc
pop
xorb
adc
je
xchg
xor
pop
xor
dec
fwait
sbb
mull
cmp
jmp
jmp
into
mov
pusha
ffreep
jmp
jg
ret
push
les
jb
jmp
mov
add
push
in
or
sub
lock
push
orb
lock
mov
push
in
jmp
xor
push
hlt
imul
pop
or
mov
or
push
and
scas
mov
push
add
jmp
mov
cmp
push
add
aas
xchg
addb
adc
adc
xorb
xchg
cltd
mov
jbe
and
jae
pminsw
sbb
roll
imul
pusha
fisttpll
fisubrl
pop
inc
sahf
add
mov
lea
mov
push
aaa
insl
push
push
mov
or
fnstenv
dec
push
add
push
xor
out
inc
pop
pop
jecxz
push
adc
dec
ret
divl
lret
pop
stc
daa
pop
fs
icebp
call
iret
xor
xor
inc
es
push
or
or
rcrl
add
jne
jmp
imul
adc
out
cmp
je
cmpsb
imul
and
fsubl
mov
xchg
pop
arpl
outsb
or
sbb
test
add
push
push
xchg
loop
clc
xchg
or
iret
jle
cmp
dec
xor
adc
pop
inc
cmp
movsl
or
jns
or
stos
pop
sti
aas
dec
add
push
jmp
jle
mov
fsubrs
and
pop
aas
inc
inc
cmp
inc
mov
bound
mov
out
in
test
and
mov
push
pusha
mov
lcall
add
aam
shll
mov
icebp
mov
repnz
and
lret
mov
out
or
and
repz
mov
cmp
inc
loop
clc
add
add
dec
das
sar
add
pop
lcall
xchg
test
push
cmp
or
cmp
loop
dec
int
xchg
aas
sbb
lock
add
cld
clc
xor
dec
add
dec
and
and
xchg
ret
pusha
inc
inc
push
popf
jl
dec
sbb
lret
jo
inc
mov
lahf
idiv
or
push
std
fwait
sub
sbb
popf
fildll
sub
sahf
mov
xor
add
sub
and
and
rclb
push
dec
jg
or
outsl
mov
cltd
cmc
fldcw
leave
adc
sbb
push
push
shrb
dec
mov
xlat
dec
ret
cs
or
xchg
adc
loopne
push
mov
push
data16
test
and
push
jmp
and
data16
ficoms
jecxz
cmp
out
jmp
adc
daa
hlt
mov
adc
mov
add
add
add
or
sub
subl
xor
and
and
mov
gs
jbe
add
fisubs
add
cmpsw
repz
leave
add
or
sbb
test
out
dec
ja
fistl
loope
xchg
pop
adc
and
pop
cmp
xchg
dec
push
movl
pop
imul
xor
and
jl
jmp
jmp
sbb
and
sbb
popa
jmp
int
cmp
xchg
lret
adc
in
in
scas
adc
add
sbb
dec
inc
outsb
jnp
adc
xor
and
rcrl
pop
xor
jp
cmp
add
pop
call
cltd
jns
dec
or
inc
mov
andl
cld
shl
fists
fstps
mov
push
in
pop
cld
sbb
mov
add
and
add
dec
cli
push
pop
jmp
rcrl
nop
sbb
test
mov
lea
jb
adc
mov
ret
dec
test
adc
add
jl
jo
test
xor
dec
enter
jmp
loopne
and
add
shrl
adc
insb
shl
xchg
repnz
mov
dec
or
inc
mov
jb
clc
inc
jae
ret
in
in
in
stos
insl
loop
pusha
pop
lahf
mov
stos
call
int
inc
mov
popa
ret
mov
push
inc
jmp
mov
aaa
movl
xchg
sbbb
add
ret
lods
add
out
adc
inc
jmp
mov
jg
movsb
adcl
and
xchg
adc
adc
call
mov
inc
adc
rorl
pop
ficompl
sub
mov
fcompl
mov
xor
mov
xchg
jbe
addr16
enter
ds
shll
cs
jl
leave
fidivl
sahf
xchg
mov
xchg
xchg
and
ret
pop
cmc
or
dec
or
pop
lods
rorb
jg
jecxz
arpl
inc
or
and
inc
in
sbb
inc
mov
jo
rorb
mov
xchg
cwtl
cmp
mov
lea
mov
mov
clc
mov
call
xor
sbb
shlb
daa
orb
adc
lods
push
add
das
mov
xorb
mov
idiv
jg
je
test
cwtl
mov
aaa
cmpsb
add
out
jns
frstor
inc
mov
and
and
push
lock
lock
in
jl
fisttps
jl
icebp
xchg
mov
mov
daa
mov
mov
adc
push
adc
das
js
in
add
jne
push
sub
aas
jg
xor
mov
ret
dec
mov
mov
call
inc
xchg
fdivrs
or
push
adc
jp
inc
push
insb
fsubl
mov
push
jmp
lcall
movsb
and
jge
and
inc
add
jno
sub
cltd
mov
aaa
aas
pop
mov
ljmp
and
call
lock
clc
push
jns
sarb
nop
lock
push
dec
cmp
adc
cmp
inc
or
pushf
test
jle
mov
xor
push
push
in
or
inc
data16
orl
adc
aaa
lret
cli
les
sbb
fsubrs
jecxz
movsl
aam
jg
xchg
mov
or
int3
or
js
dec
mov
pusha
push
jle
xchg
jle
lcall
cmpsb
lcall
or
leave
movsl
aaa
xor
mov
test
sub
jmp
add
xchg
jb
xor
movsb
mov
cmp
push
xor
sub
push
sbbb
push
pop
mov
nop
dec
dec
jae
adc
inc
xor
decl
iret
test
and
aam
xor
cmp
dec
push
cwtl
out
ror
sbb
dec
cltd
and
or
and
or
add
lods
and
mov
push
sbb
in
or
xor
dec
or
lock
dec
rcll
in
or
mov
xor
mov
pshufw
and
pop
push
in
pop
sbb
sbbl
and
out
and
cmp
add
lret
xchg
aam
flds
sbb
in
sub
cmp
ret
aaa
test
jle
mov
les
enter
lret
out
lret
enter
loope
mov
pop
aas
cmp
subl
pushf
or
outsb
stos
into
sahf
or
inc
add
mov
xchg
test
aam
ljmp
add
dec
shll
add
inc
lds
mov
loope
mov
push
cmp
xchg
mov
shlb
cld
push
and
mov
test
inc
test
inc
pop
sbb
mov
test
cmpsb
imul
fcoms
adc
loopne
push
int3
loopne
jl
les
int3
inc
enter
inc
dec
mov
sti
pop
nop
pop
push
js
mov
pop
inc
mov
popa
mov
cld
shll
or
sbb
add
cmpsb
dec
aaa
pop
imul
aas
push
or
push
mov
pop
cs
push
popa
push
cmp
pop
sub
inc
aas
jle
std
or
sub
mov
pop
dec
dec
inc
adcl
addb
dec
hlt
sbbb
lea
mov
jo
mov
mov
cmpsb
fwait
in
push
adc
movsl
fisttpl
je
adc
daa
push
jne
in
aam
mov
fmul
mov
sbb
pop
mov
mov
shrb
push
ret
callw
pop
push
push
movzbl
dec
mov
add
pop
xor
insb
ja
dec
jl
orb
jl
xchg
xchg
rorb
xchg
xchg
push
sub
and
dec
and
push
or
cmp
pop
mov
cmp
rol
jne
xchg
in
and
adc
and
adcb
inc
xchg
add
pop
add
out
and
cltd
inc
add
and
xchg
jg
push
jb
pop
add
pop
push
enter
add
add
lahf
dec
push
xchg
stos
or
and
mov
aaa
add
pop
lahf
push
mov
nop
add
jmp
or
add
and
stos
pop
and
movsb
pop
inc
js
push
adc
add
or
dec
push
mov
mov
cmpb
pop
movsl
ret
ret
mov
xchg
loop
sub
mov
push
leave
push
add
push
fwait
xorb
sub
and
or
mov
arpl
mov
orb
leave
pop
sub
adc
fcoml
sub
push
inc
mov
jo
cld
sbb
or
insl
adc
data16
inc
xchg
in
push
mov
fnstenv
jo
and
sbb
or
nop
push
enter
enter
inc
push
adc
mov
fsubrp
test
xchg
adc
mov
dec
lock
push
and
add
test
enter
xor
xchg
enter
insl
pop
push
hlt
cltd
movsb
inc
adc
or
fldl
jl
fucomi
fstl
fistpl
jns,pn
mov
add
or
sub
add
xor
lds
subl
sub
xchg
iret
outsl
negl
mov
adc
adc
imul
fcmovnb
add
cmpl
ret
js
push
test
popa
push
pop
cmp
xor
xchg
jp
andb
jg
push
cmp
jg
mov
scas
add
push
inc
rorb
cmp
gs
sbb
cmp
ret
fisubs
icebp
enter
pop
lds
test
sbb
adc
mov
loopne
mov
add
test
xor
cmp
loopne
jb
sub
mov
xor
inc
inc
fadd
xchg
adc
mov
sub
pop
leave
xchg
test
es
lds
sbb
jns
ds
pop
push
adc
mov
sti
cmp
call
cmc
mov
adc
lcall
pop
out
mov
sbb
aad
int3
mov
pop
es
aad
pop
pop
nop
mov
mov
sbb
inc
and
clc
add
jne
push
roll
outsb
and
xor
sbb
pusha
pusha
sub
or
add
mov
cmpsl
mov
in
call
dec
gs
imul
rorb
jae
add
orl
mov
push
pushf
jne
push
xchg
add
push
jo
dec
push
in
rolb
test
xchg
sbb
dec
cld
in
imul
push
into
test
or
add
inc
fstpt
mov
adc
repz
lcall
in
pusha
in
push
or
and
jne
ja
test
loop
icebp
cld
pop
add
hlt
shlb
xor
adc
sub
outsb
dec
mov
aas
xlat
and
adc
add
jge
cmp
or
xlat
and
sub
xor
mov
nop
push
add
pop
fucomip
adc
movsb
pop
lret
push
pop
mov
popf
movsb
mov
mov
dec
push
in
pop
xor
jecxz
ss
ret
inc
add
packsswb
jle
sbb
mov
and
jecxz
negb
dec
mov
push
dec
and
gs
mov
adc
rorb
add
xchg
pop
clc
mov
xor
cmp
les
lock
dec
lea
or
inc
inc
in
xor
sbb
push
sub
xchg
pop
xor
ljmp
add
sbb
test
imul
insl
and
in
sbb
adc
mov
loopne
sbb
jmp
or
sbb
jl
loop
fdivrl
xor
ret
andb
and
das
add
sub
out
fcomps
sbbb
in
mov
jle
adc
test
in
mov
inc
out
mov
into
pusha
mov
inc
jne
test
scas
inc
mov
cltd
adc
stos
mov
or
add
cli
inc
test
out
push
hlt
out
xor
xchg
je
outsb
add
enter
in
pop
data16
xor
call
or
andl
mov
push
test
aam
xchg
mov
inc
data16
pop
fisubrs
push
clc
pop
popf
and
fmul
and
fwait
das
push
sti
xchg
fimull
clc
and
stos
add
jns
xchg
clc
in
pop
repz
pusha
dec
popl
xor
add
xlat
lahf
jmp
cmp
push
pop
lea
lds
loopne
inc
push
outsb
mov
fisubrl
in
popa
fst
or
arpl
out
hlt
movsl
jno
sub
xor
add
les
or
dec
cld
and
pop
cmpsl
mov
or
adc
push
rcll
pop
in
inc
cmpsb
call
pushf
fs
jns
inc
add
inc
or
pop
mov
dec
or
dec
inc
sar
test
add
test
pop
pop
xor
cmp
push
clc
mov
lea
addb
jecxz
cmp
andl
rcrb
inc
data16
or
cmp
imul
and
dec
inc
lret
inc
andl
inc
cmp
and
pusha
xchg
pop
dec
loope
inc
dec
mov
pop
xor
fnstsw
enter
ret
imul
mov
ss
xor
or
fldl
mov
mov
mov
mov
add
or
aam
mov
test
ljmp
adc
jmp
mov
rorw
inc
pusha
loopne
adc
push
jne
adc
insb
xchg
ja
and
mov
je
push
ja
and
sub
xchg
lret
push
cmp
lret
fldenv
ret
mov
outsb
insb
bound
mov
cmpb
dec
lds
xchg
fsubs
loopne
inc
or
fsubl
cwtl
cmp
shll
test
das
or
les
dec
mov
adc
push
and
sbbb
and
outsl
push
xlat
jbe
mov
ljmp
in
mov
enter
jo
push
orl
mov
sbb
mov
cmp
mov
scas
xor
push
sbb
pushf
pop
call
cmp
xchg
and
or
aam
or
lock
dec
out
mov
mov
sbbb
lahf
jg
orb
xchg
dec
add
loopne
lahf
test
adc
add
adc
inc
or
mov
jne
add
out
inc
pop
add
ss
mov
mov
cmpb
sub
test
pop
daa
pop
roll
jl
pop
inc
and
adc
or
add
dec
ja
aaa
dec
pop
xchg
in
push
dec
stc
adc
jecxz
enter
sub
or
imul
add
inc
ret
sub
testl
pusha
iret
arpl
lcall
imul
rcrl
pushf
or
imul
andb
cmp
fs
or
xor
inc
push
sbb
sbb
sbb
xor
add
xchg
mov
stc
cli
leave
jo
nop
sbb
and
es
add
scas
mov
bound
xchg
xchg
bound
fs
gs
xor
push
adc
in
das
test
nop
popa
ss
push
jmp
les
movsb
jno
push
xor
xchg
xchg
mov
fisttpl
and
xor
enter
push
enter
push
nop
outsl
pop
xchg
xchg
sub
cwtl
sbb
outsl
out
bound
or
cmp
inc
jle
mov
loope
test
inc
sbb
sbb
or
pushf
popa
arpl
aad
xor
jb
pusha
pusha
adc
mov
inc
out
jg
pushf
jmp
pop
pushf
addr16
and
or
push
fists
inc
pop
sub
mov
and
or
pop
add
setp
mov
or
pusha
int3
ss
or
arpl
inc
mov
inc
add
add
jge
jno
add
mov
pop
pop
add
orb
dec
dec
mov
mov
mov
pop
lds
pop
push
push
inc
or
lcall
push
push
shl
sub
jbe
adc
test
sbb
cld
lret
fimuls
bound
inc
int3
out
dec
cmp
push
cmpsl
ffree
inc
cs
or
mov
ret
jmp
cli
je
out
rclb
pushf
orb
mov
sub
shll
repz
jmp
add
lods
jg
add
adc
ljmp
out
add
movsl
test
xor
movsl
nop
sbb
push
test
jne
sarl
fwait
jmp
xor
popf
adc
jb
loope
in
dec
jmp
lea
push
cs
xor
jmp
inc
push
lds
mov
repz
xchg
jmp
and
call
pop
fsubr
mov
hlt
inc
sub
dec
cmpsl
in
repz
loope
mov
inc
and
sub
xor
popf
fsubr
fcomp
cld
jnp
loop
out
adc
das
mov
dec
cmp
es
jnp
mov
adc
xchg
cmovg
mov
mov
sub
in
stos
test
sahf
leave
add
sti
cmpsb
cs
push
and
in
les
mov
mov
es
pop
mov
add
pop
adc
mov
je
add
push
imul
bound
push
ja
cmp
xlat
mov
push
sbb
add
xor
stos
nop
fdivl
jecxz
fiadds
rcrl
inc
push
push
imul
out
popa
add
add
add
add
and
ficoms
roll
out
mov
or
add
add
add
js
push
push
add
and
adc
in
fwait
stos
sub
dec
in
scas
mov
cltd
es
push
mov
je
jge
pop
nop
pushf
adc
les
lcall
adc
movb
pop
lods
scas
scas
dec
shll
mov
icebp
sbb
ss
mov
lahf
test
jp
ljmp
or
adc
mov
cwtl
xor
xchg
sbb
imul
mov
inc
add
inc
add
cmp
jne
or
or
insl
sub
out
sub
into
jge
xor
add
not
fimuls
mov
pop
xchg
pop
incb
lods
xchg
stos
xor
fstps
cltd
inc
cmp
push
push
add
and
enter
mov
xchg
movsl
in
sub
xor
add
test
enter
xorb
add
ret
repnz
inc
rolb
or
out
xor
fistpl
pop
xchg
incl
lds
mov
pop
rclb
imul
in
enter
xchg
enter
mov
shrb
shlb
movsb
mov
push
inc
inc
into
popa
push
xor
mov
sub
xchg
mov
test
jl
dec
mov
movsb
movsb
push
lods
sbb
enter
mov
ljmp
sub
je
xor
and
dec
dec
add
popa
push
mov
jmp
dec
test
cmp
dec
sub
adc
ret
mov
sub
or
stos
jo
pop
addr16
sub
and
jge
loope
push
repz
outsl
aaa
movsl
jecxz
jge
adc
fadd
adc
push
push
mov
or
jle
pushf
pop
or
xchg
jo
arpl
ljmp
data16
insl
adc
jp
insb
jns
je
mov
ss
in
mov
push
sbb
aaa
push
or
daa
mov
mov
ljmp
cmc
fadds
mov
sbbl
stos
shll
add
rolb
cmpsl
dec
pop
sbb
outsl
add
adc
das
shll
xor
mov
xchg
mov
jns
or
sbb
fdivs
imul
es
ss
insl
call
push
inc
or
xchg
push
nop
test
mov
jne
dec
cltd
insb
or
xlat
lods
pop
movsl
jnp
repz
enter
shrl
addr16
and
js
mov
push
ja
loop
or
jg
add
or
addr16
jmp
out
jo
inc
cs
xlat
adc
xor
gs
es
push
add
loope
shlb
mov
inc
mov
push
loopne
or
arpl
sbb
and
dec
je
xor
and
jne
andb
adc
jmp
push
or
leave
shlb
fwait
inc
pop
dec
adc
cwtl
push
mov
inc
mov
shlb
enter
or
inc
fsubl
orl
pop
lock
xor
ret
push
aam
test
add
call
loopne
push
mov
xor
inc
add
fwait
push
rcl
adc
stc
jge
stos
inc
cmpsl
or
mov
or
cmp
or
push
aam
sub
leave
push
addb
data16
lods
sarb
mov
push
or
add
imul
pop
mov
inc
andl
jg
or
popa
jl
push
sbb
ja
cmp
push
insb
mov
mov
jo
xor
and
xchg
sarb
repz
jg
sbb
push
mov
xor
and
inc
cmp
adcl
sub
hlt
mov
iret
adc
mov
shl
inc
adcb
clc
xchg
mov
loopne
int3
jp
int3
mov
jle
jb
push
enter
sub
clc
call
fmuls
enter
xor
sub
ret
in
mov
or
repnz
mov
sti
mov
lock
fadds
push
mov
fwait
mov
add
fcmovbe
xchg
lock
xor
sbb
aas
dec
sbb
pop
sbb
jno
stc
hlt
adc
lea
repnz
lds
jnp
ja
shr
rcrl
leave
jg
xchg
pop
cmp
in
adc
push
test
sub
pop
aad
rorb
js
lds
sub
xchg
push
push
loop
adc
jne
popf
mov
jne
and
mov
mov
mov
and
pop
aad
adc
imulb
add
or
div
stos
repnz
adc
out
jecxz
test
jnp
arpl
aam
xor
cmp
adc
ret
inc
stos
popf
mov
orl
lock
rorb
adcl
mov
add
test
or
mov
mov
adc
cmp
sbb
ljmp
enter
adc
mov
push
inc
aas
loopne
inc
in
clc
add
push
pop
hlt
push
lret
rorl
push
mov
hlt
roll
in
or
push
call
mov
test
test
and
jp
xor
cmp
inc
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
push
push
pop
pop
inc
inc
inc
inc
pusha
fs
inc
jo
js
inc
inc
inc
inc
addb
nop
xchg
cwtl
pushf
inc
inc
inc
inc
mov
inc
inc
inc
mov
mov
inc
rol
int3
inc
inc
inc
inc
rcl
fcomp
inc
inc
inc
inc
sub
and
inc
inc
inc
inc
sbb
adc
mov
call
mov
test
sbb
das
sbb
and
fs
xor
fs
inc
pminsw
sbb
inc
pop
add
stos
bound
or
adc
xchg
push
add
ss
roll
sbb
sbb
or
cs
shll
aaa
dec
roll
ds
cmp
push
sbb
ss
sarl
adc
xorl
xor
shll
pop
xor
popa
orl
jns
js
shll
xor
pop
bound
inc
xor
arpl
adc
inc
lock
mov
adc
pop
pusha
aas
outsb
cmp
subb
cmpsb
outsl
pop
aas
jo
jle
add
add
push
pop
or
or
add
aas
dec
jmp
mov
pop
add
pushl
jge
add
add
push
adc
pop
and
xor
mov
mov
rcll
bound
ja
pop
sbb
sbb
sub
ret
xor
cmp
inc
pop
dec
dec
push
aas
mov
pop
pop
arpl
addr16
pushl
ja
jns
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
test
ljmp
mov
mov
enter
rcl
aad
xlat
fcomp
loop
in
push
jmp
out
call
repz
cmc
div
clc
stc
cli
mov
add
adc
adc
in
incl
push
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
je
add
xorb
and
outsl
mov
dec
loopne
pop
rcl
dec
rcrl
cmpsb
imul
mov
lcall
js
insb
shll
sub
rcrl
xor
js
sub
in
rcrb
shrb
imul
mov
jl
cmp
into
mov
dec
shll
js
sub
dec
shll
loopne
ss
mov
adc
int3
mov
int
imul
imul
mov
lcall
leave
imul
and
xor
mov
enter
push
sub
cs
mov
insb
pop
ss
rorl
or
fsubl
fs
xor
dec
shll
hlt
pushf
pop
sbb
xor
ss
sahf
push
pushf
test
xchg
dec
sbb
ret
test
push
or
aam
cs
mov
mov
inc
push
add
cmpb
adc
or
xchg
adc
add
adc
pop
xchg
or
mov
xchg
gs
or
push
sub
xor
shll
sub
sbb
push
pop
push
adc
xor
sub
cmp
shll
sbb
dec
movhps
and
shll
cmp
rcrl
daa
cs
dec
cmp
aas
negl
push
and
push
inc
dec
btc
mov
pop
and
jae
push
jle
aaa
sbb
out
sti
inc
insl
push
bound
mov
inc
sub
sbb
btc
mov
or
aaa
out
out
out
mov
sbb
or
pmaxsw
out
sbb
cmpsl
mov
aaa
ljmp
xor
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
jmp
stos
adc
shl
aas
aas
cmp
jmp
jnp
push
loope
pop
outsl
dec
pop
stos
jb
push
test
mov
sbb
inc
jne
cmpsl
aas
aam
or
adc
add
aas
imul
push
cs
or
push
insb
jne
outsl
data16
push
and
jae
std
jmp
outsb
outsl
je
jo
outsl
jo
jb
jns
jae
jbe
and
pop
jae
popa
jbe
out
jmp
data16
arpl
outsb
and
insb
and
subl
in
jne
jne
jns
jb
jne
je
inc
imul
imul
popa
jb
ja
je
inc
outsb
gs
mov
fimuls
sbb
outsb
dec
imul
outsl
inc
je
jns
fs
out
imul
add
lcall
jae
gs
je
and
dec
add
dec
outsw
ljmp
insl
outsl
mov
daa
pop
repnz
mov
and
inc
imul
jge
movl
insl
insl
cmp
add
dec
rep
fistps
adc
add
fs
or
push
dec
pop
inc
fisubrl
inc
inc
xchg
gs
bound
dec
outsl
jbe
jl
out
pusha
dec
jecxz
adc
gs
sub
addr16
mov
cmp
je
insb
adcb
outsb
gs
inc
add
jbe
mov
push
jne
inc
popa
outsb
adc
ja
ja
mov
xchg
pop
mov
ja
inc
popa
je
jb
in
cmp
into
xor
jae
mov
out
xor
stc
sbb
dec
cmp
into
push
push
jne
xchg
sub
dec
inc
ds
popa
das
jo
inc
push
mov
jne
adc
incl
lahf
mov
push
mul
cs
lret
dec
gs
jb
popf
sbb
lret
popaw
push
cmp
pop
pop
sub
mov
cmp
imul
lahf
jecxz
inc
inc
ss
dec
outsb
xchg
push
ss
mov
lock
jb
and
and
or
jge
outsl
jg
and
roll
fdivl
je
jo
mov
outsb
xor
pusha
pop
push
pop
imul
fisubs
jae
and
outsl
jbe
cmp
outsl
imul
rcll
and
inc
cmpsl
push
outsl
bound
in
mov
inc
jb
inc
inc
dec
loopne
out
add
sub
es
imul
cmp
insb
sbb
dec
popa
lahf
loopne
mov
and
pop
in
ja
sub
sbb
es
dec
gs
xlat
cmp
dec
dec
inc
dec
popa
pop
push
inc
sub
sub
mov
sub
das
mov
shrl
sarb
decl
inc
pop
dec
dec
dec
inc
icebp
inc
insb
pop
jno
mov
dec
add
sbb
dec
jae
cs
cs
mov
sbb
popa
inc
inc
xlat
cmpsl
xor
mov
mov
push
jmp
sub
sub
inc
lds
pop
sub
and
movsb
mov
push
aaa
add
insb
sub
popa
sub
xchg
sbb
pop
cmp
inc
dec
xchg
shl
inc
inc
inc
add
insb
push
lock
pop
jmp
xchg
js
xor
pop
stos
sbb
in
xor
pop
gs
lock
mov
pop
dec
push
pop
push
inc
mov
sub
inc
sub
dec
stos
ss
or
imul
pusha
xchg
loopne
push
iret
adc
pop
sub
jns
push
inc
xchg
jmp
sbb
dec
test
mov
push
add
jno
pop
pop
outsl
sub
out
jg
inc
ret
adcb
lods
push
ret
push
inc
decl
andb
add
jae
jne
imul
mov
outsb
sbb
and
pop
dec
inc
inc
push
inc
inc
inc
push
push
push
push
leave
adc
mov
inc
dec
inc
movl
xlat
inc
inc
inc
insl
pop
test
mov
inc
add
lret
adc
push
jecxz
out
push
cwtl
sub
adc
sub
sbb
push
les
popa
dec
inc
andl
mov
fistpll
shll
mov
push
add
into
arpl
js
rorb
js
aad
cmp
push
in
jno
push
arpl
mov
jnp
aad
mov
cmp
and
mov
and
nop
inc
outsl
scas
jg
mov
and
aaa
cmp
jae
roll
scas
jae
cs
jl
movsl
mov
gs
fnsave
in
xor
insb
cmp
push
sub
jbe
mov
xorb
inc
fstl
test
sbb
js
push
imul
jae
dec
cmp
add
xorl
push
mov
fimuls
and
mov
add
daa
popa
dec
inc
jge
inc
bound
jo
inc
push
adc
or
or
lds
fisttpl
loope
repz
sbb
dec
and
jns
and
inc
pushf
jae
and
xchg
push
jne
xor
cs
mov
jecxz
push
imul
bound
bound
sbb
insb
jp
jb
sbb
sbb
sub
add
xorl
sub
das
je
add
ja
or
pop
imul
push
mov
pop
pusha
out
sbbb
adc
pop
push
pusha
inc
js
nop
mov
mov
pop
inc
es
push
aas
dec
mov
lret
and
xor
jo
in
push
shlb
add
or
adc
bound
shll
adc
lds
xor
insl
jmp
or
mov
add
pushf
adc
ds
jae
imul
mov
popa
addr16
mov
adc
sti
fldcw
and
or
push
psubusb
movl
gs
jae
rcrl
mov
cs
lock
subl
xchg
insb
jae
jne
outsb
rcl
adc
imul
and
push
pop
adc
dec
es
sbb
xor
adc
arpl
in
jno
sbb
add
jno
sbb
sub
sbb
inc
push
arpl
jge
mov
je
daa
in
pop
sbb
inc
daa
dec
push
or
push
push
mov
addr16
dec
or
out
outsb
jbe
into
stos
out
push
add
popa
pop
sub
pop
clc
pop
lock
inc
dec
pop
inc
dec
cmpsb
pop
push
inc
dec
inc
inc
push
pusha
arpl
push
sbb
adc
add
inc
jb
mov
mov
push
adcl
ja
xchg
jg
add
dec
inc
outsb
dec
dec
inc
and
and
xor
cmp
sub
mov
xchg
inc
cmp
imul
fwait
add
outsl
dec
aaa
rorl
or
push
and
ja
jno
or
or
icebp
or
outsl
xor
or
cmp
push
mov
or
fidivrs
das
mov
mov
or
cmp
pop
notb
mov
cmp
push
push
out
push
xor
dec
push
cmp
xor
scas
inc
aaa
sbb
mov
inc
jnp
pop
dec
pop
das
mov
xchg
add
inc
das
repz
sbb
mov
cmp
and
and
pop
push
cmp
jae
push
xor
outsl
xchg
popf
jo
fsubr
out
jne
sbb
dec
fs
addr16
fsubrs
mov
dec
and
insb
jns
mov
mov
stos
arpl
push
arpl
daa
gs
xchg
jmp
push
dec
inc
dec
xor
add
xor
pop
adcl
sub
bound
xchg
xor
xor
push
add
cs
fdivp
decb
push
add
add
add
and
cmp
jns
div
pop
or
aaa
push
push
pop
push
and
add
pusha
push
xchg
pop
sub
sti
addr16
flds
xor
sbb
outsb
add
insb
add
int
mov
adc
adc
icebp
je
push
arpl
jno
xor
xlat
or
add
adcl
inc
arpl
aad
outsl
push
outsl
pop
jo
pop
push
dec
fs
ret
outsl
rolb
inc
outsl
js
pop
xlat
mov
ja
out
dec
inc
pop
inc
push
push
rol
out
inc
pop
sub
and
or
pop
push
arpl
jecxz
cmp
arpl
outsl
xchg
xor
mov
sbb
pop
pop
xor
xor
and
mov
mov
ffreep
inc
add
push
push
jge
addl
pop
or
fwait
jecxz
in
fsubl
fldl2e
push
lea
mov
and
inc
dec
push
dec
dec
inc
add
inc
dec
inc
push
add
inc
inc
adc
mov
add
mov
inc
add
mov
insb
xchg
jb
loop
add
pop
lret
ja
daa
cmp
pop
adc
pop
aaa
int
pushf
add
cs
cld
lahf
pushl
cmp
aaa
cmp
xor
aaa
inc
dec
dec
add
pop
xor
test
nop
inc
outsl
outsb
insl
jbe
xor
xchg
scas
inc
cmp
dec
push
push
pop
push
push
dec
xor
decl
popa
jo
and
inc
jns
pop
jbe
bound
jnp
bound
and
addr16
jb
push
imul
pop
in
xchg
pop
and
pop
sub
int
cld
dec
and
scas
lahf
inc
mov
push
sti
xchg
clc
and
jbe
fwait
cs
cs
jnp
mov
inc
or
jno
shl
adc
dec
pop
decl
sti
mov
and
loopne
ucomiss
push
push
popa
hlt
jp
adc
mov
mov
mov
js,pn
shrb
pop
lahf
push
push
jb
lock
stos
jbe
jno
dec
jbe
ret
movsl
mov
mov
imull
outsb
jp
jbe
adc
addr16
inc
push
mov
js
and
aaa
inc
dec
lock
or
aad
add
rcl
add
inc
hlt
loope
jb
arpl
add
gs
outsb
xor
xor
xor
mov
jp
xchg
add
jg
lret
jae
push
imull
sub
xchg
inc
dec
inc
push
pcmpeqb
push
sti
js
cs
push
dec
inc
push
push
inc
push
inc
pop
inc
dec
rol
outsb
out
outsl
inc
jne
cs
push
inc
aaa
jno
movsb
pop
xor
out
and
jae
pop
subl
adc
out
or
outsb
fucomp
mov
push
sub
nopl
push
movl
dec
repz
push
inc
and
pop
and
dec
dec
dec
dec
dec
mov
xchg
je
das
mov
bound
imul
jo
inc
and
inc
inc
inc
cs
mov
aas
sbb
addr16
pop
inc
mov
inc
dec
push
push
loope
xor
sbbl
and
cmpsl
icebp
rep
jae
add
scas
jns
mov
mov
cmp
push
and
sub
dec
pusha
xor
jae
addr16
add
dec
push
inc
inc
inc
sub
je
push
jecxz
fwait
test
add
gs
adc
pop
mov
dec
sbb
pop
inc
add
insl
bound
sub
fidivs
das
cmp
add
test
dec
inc
dec
inc
and
sub
xchg
and
xchg
pop
enter
jnp
jne
data16
pop
sub
inc
roll
add
mov
scas
addl
gs
push
inc
sub
ret
nop
or
xchg
lea
outsb
and
pushf
or
inc
fwait
sbb
add
sbb
pop
loope
jnp
cmp
ja
sub
dec
dec
bound
or
xor
dec
test
mov
push
cmp
push
outsb
jae
mov
lcall
add
adc
inc
jb
inc
sbbb
cld
in
push
adc
ret
pop
push
inc
inc
or
sbb
inc
outsb
ss
sub
cmp
insl
sub
outsl
in
faddp
arpl
orl
and
mov
pop
and
lret
push
mov
out
jae
xor
js
les
and
jae
push
or
gs
push
lar
inc
jae
arpl
mov
push
je
das
dec
data16
pusha
jo
cmpsb
sarw
aas
loopne
data16
fs
xlat
into
out
push
jno
inc
push
sbb
pop
cmp
dec
ja
sarl
sub
imul
add
rcll
insl
rorl
fs
sbb
outsb
dec
repz
fnstsw
xchg
mov
dec
pusha
push
adcb
dec
push
outsb
adc
xchg
nop
dec
lock
jns
mov
js
insb
test
pop
shlb
pop
mov
add
dec
push
shrb
or
add
xor
jle
dec
push
and
cs
mov
mov
rcrl
lods
cmp
cmpl
js
inc
sub
pop
add
mov
scas
xchg
mov
nop
inc
lret
add
scas
xchg
dec
sub
movsb
std
mov
fistpll
inc
push
push
xor
lock
in
pmullw
ret
outsb
push
stc
and
daa
add
mov
xor
add
fs
rorl
cmpsl
inc
insb
andb
andb
xorb
dec
loopne
xorl
sahf
sbb
call
push
push
or
insb
mov
dec
or
inc
jb
add
negb
imul
push
jl
push
xor
sub
sub
push
adc
and
xor
push
xchg
stos
add
daa
js
dec
jae
xor
or
sub
sbb
jne
dec
dec
daa
add
push
pop
dec
xchg
loope
pop
sbb
adc
clc
es
mov
jg
jle
xor
sub
cmp
out
ds
jge
jo
jb
imul
and
push
mov
add
inc
and
rcrb
out
mov
lods
ret
insl
scas
adc
adcl
push
sub
stc
or
adc
push
fsubrl
dec
push
shll
sbb
cmpb
xchg
movsl
js
scas
lds
add
loop
fidivl
les
adc
adc
pusha
add
dec
dec
out
test
subl
sbb
sbbb
popf
add
aas
pop
imul
cmp
push
aas
faddl
sbb
js
aaa
cmp
pop
push
pop
sub
arpl
cmpb
mov
fcmovu
push
je
outsl
dec
dec
pop
fldenv
mov
addr16
bound
mov
and
jne
insl
imul
add
call
jae
add
push
or
jbe
add
pushf
mov
push
lea
arpl
cmp
push
inc
pop
rorl
mov
dec
cwtl
popa
fwait
xchg
add
pop
push
std
pop
inc
inc
lea
fildl
lea
cmpsl
sub
rcrb
dec
test
popa
xchg
or
xor
add
or
fsubr
xchg
push
sub
add
adc
add
insb
xchg
push
jge
sbb
add
mov
xor
das
sbb
pop
inc
jns
je
jge
jns
pop
leave
mov
and
pusha
sub
stos
test
jmp
inc
add
xchg
sub
dec
xor
fs
sbb
inc
data16
and
popf
fildll
pusha
orl
andl
js
mov
sub
or
xchg
mov
jae
lods
and
sar
and
aaa
or
bound
into
inc
jl
inc
or
pop
ja
shlb
sbb
or
loopne
adc
push
pop
ja
xor
dec
pop
movsb
pop
pop
mov
pop
mov
adc
test
out
inc
outsl
ret
inc
push
nop
inc
inc
xchg
mov
nop
push
dec
dec
mov
sub
outsl
addr16
push
push
roll
daa
dec
sub
inc
mov
mov
push
mov
inc
insl
outsb
cmp
xchg
jb
bound
xchg
shrb
into
inc
dec
in
popa
and
xchg
outsb
lret
sub
ja
clc
aam
in
inc
out
out
ret
inc
outsl
xor
insb
roll
xlat
cmpsw
jbe
add
andl
imul
dec
sbb
xchg
fdivrs
or
lret
popa
lds
push
inc
xchg
xchg
sbb
das
outsb
push
sbb
xchg
mov
add
jae
cmp
add
xor
lea
mov
test
pop
outsl
and
sub
dec
mov
scas
fmull
mov
jo
jp
jnp
and
cmp
xchg
inc
leave
xor
lods
jno
adc
les
xchg
dec
sub
shll
add
push
cmp
sub
das
jmp
and
nop
int3
imul
cmp
sarb
movsl
pop
adc
dec
pop
loopne
push
jmp
orl
dec
mov
push
sbb
pop
pusha
and
aas
test
xor
dec
inc
pop
inc
dec
push
dec
dec
add
loope
es
sub
into
insb
jmp
cmpb
dec
arpl
jns
mov
cmp
push
adc
or
pop
push
clc
das
add
xlat
xchg
inc
sub
dec
clc
mov
insb
fs
cmc
mov
das
imul
mov
imul
imul
cmpsb
imul
shll
hlt
lock
insl
shll
les
fidivrl
cwtl
mov
xor
roll
jp
hlt
dec
push
xor
jne
mov
fstpl
out
daa
mov
pop
fisttpl
lods
out
inc
setns
inc
add
in
sub
sbb
pop
pop
inc
std
in
mov
push
add
cltd
gs
mov
ss
add
insl
insl
popf
jbe
add
clts
and
xor
add
cmpsl
push
insb
sbb
xchg
lcall
push
pop
or
fs
inc
or
add
mov
es
cs
sbb
enter
inc
inc
insb
fdivs
das
push
jbe
mov
insl
nop
cmpsb
imul
jb
inc
xor
andb
inc
xor
mov
aas
addl
sub
nop
popa
fbld
cmp
aas
xlat
pop
sbb
add
pushf
add
jp
cmp
add
and
sub
add
inc
repnz
add
test
and
xor
addl
adc
and
cmpsl
mov
jo
popf
test
add
push
xchg
push
inc
dec
jle
test
mov
xchg
fcoml
pop
add
fs
sbb
lea
imul
inc
push
nop
xchg
xchg
mov
add
or
sbb
add
aaa
push
fcoms
or
dec
shll
sub
or
imul
cmpsb
imul
xor
in
js
jns
jp
dec
shll
cld
mov
mov
pop
mov
add
lock
and
sub
push
inc
push
pusha
repnz
push
push
test
add
and
lock
adc
or
sub
sbb
ss
dec
mov
in
or
push
xchg
js
dec
shll
mov
repz
in
fisubl
add
push
pop
xor
shll
xchg
mov
repnz
lcall
insb
jmp
incl
add
movsb
add
pusha
cmpb
cmpsb
repnz
mov
pop
movsl
sbbl
ss
shll
enter
cmovo
fs
mov
iret
mov
in
call
in
adc
add
mov
scas
in
fidivl
rcr
fsubp
stc
jae
jle
lret
xchg
add
add
xor
filds
incl
gs
and
and
pop
enter
sahf
in
sahf
inc
pushf
or
ret
mov
adc
xchg
cwtl
push
and
cld
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
ljmp
inc
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
jmp
pop
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
xchg
clc
repz
mov
subb
fwait
xchg
and
out
jg
push
inc
int
add
sti
aas
jno
or
mov
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
ljmp
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
dec
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
aas
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jg
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
ljmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
ljmp
adc
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
out
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
fisubs
into
ror
add
cmpsb
fmuls
add
adc
test
sbb
mov
and
push
inc
add
aaa
pop
add
xchg
sbb
insb
jae
jb
jo
outsb
inc
popa
je
sub
sbb
jns
lods
lods
rcl
gs
sub
push
jbe
ret
daa
dec
push
not
dec
stos
and
jb
arpl
enter
inc
insb
xchg
inc
mov
cs
xor
int
insl
jo
outsl
in
insb
or
dec
inc
mov
push
inc
movsl
je
push
xorb
dec
leave
sti
fwait
test
je
imul
push
push
imul
pop
push
ss
xorb
inc
mov
pop
mov
lods
pop
cmp
je
add
pusha
mov
ljmp
dec
dec
test
push
popa
sub
fidivrl
sti
lret
adc
xor
fwait
dec
ds
cmp
push
mov
mov
pop
mov
push
and
push
sub
into
or
sub
out
add
insb
mov
shlb
popa
jmp
or
inc
push
adc
or
enter
ret
or
test
push
add
pusha
sub
sbb
sbb
inc
insb
jne
push
mov
add
sub
sbb
insl
dec
or
sub
jmp
xchg
jmp
jne
mov
sbb
mov
push
mov
pop
subl
push
adc
mov
sbb
movsl
imul
inc
aam
cltd
sbb
lock
push
inc
mov
fcomps
cmpsb
mov
and
dec
inc
jae
inc
cwtl
loop
jmp
jae
dec
push
push
negl
jbe
sbb
cmp
or
rorb
mov
sbb
js
clc
imul
mov
lods
gs
arpl
sub
enter
imul
jge
outsb
loopne
fs
jae
aad
in
push
iret
inc
cmp
dec
sbb
in
sbb
pop
sub
adc
dec
add
fadd
cs
dec
adc
dec
push
xor
outsb
sub
test
lods
add
sub
dec
or
xchg
loop
insb
mov
sub
mov
ja
aad
jmp
outsl
jns
pop
sub
sbb
sbb
push
push
je
stos
rclb
in
cmc
jo
mov
test
add
in
adc
dec
gs
sbb
lods
enter
and
ss
pop
push
dec
pop
xor
or
xor
add
jl
add
add
mulb
jmp
mov
inc
iret
jae
and
cmc
gs
push
jmp
inc
lcall
add
out
xor
jl
xor
jp
or
mov
xorb
xorl
daa
adc
mov
push
pop
jbe
sub
imul
int3
in
mov
dec
and
js
jmp
ss
test
dec
pop
sbb
loopne
lret
insb
ss
aaa
inc
jae
mov
mov
push
pop
cs
jbe
mov
fldenv
sub
cwtl
js
jmp
or
fcomps
push
push
lds
and
push
mov
xor
int3
mov
jb
sbb
jmp
dec
xlat
faddl
or
inc
imul
add
inc
imul
adc
rcrl
mov
xor
stc
das
test
in
push
inc
add
dec
add
sti
push
or
jbe
enter
pusha
add
movsl
or
pop
push
add
add
out
push
dec
test
add
mov
cmpb
ret
mov
loopne
cmp
je
push
movsb
insl
add
jo
sbbl
inc
and
jb,pn
sbb
divl
pop
imul
cs
add
sarb
lock
scas
jo
dec
shrb
push
pop
adc
mov
add
sbb
cmp
xchg
push
or
xor
mov
xor
fnstcw
add
dec
in
in
add
dec
inc
arpl
sub
add
test
dec
incl
add
add
add
add
incl
add
incl
mov
mov
rcl
rcl
lret
inc
pop
leave
inc
push
inc
lcall
mov
stc
inc
inc
inc
inc
inc
lcall
mov
inc
lcall
ret
push
lcall
inc
lret
scas
mov
stos
xchg
jo
ret
xor
mov
ret
xor
test
inc
lret
scas
mov
inc
lcall
cld
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
cmp
mov
mov
imul
mov
btc
movsbl
xor
sbb
xadd
movzwl
xadd
rcr
lea
movsbl
shl
mov
btc
movzwl
bsr
xchg
xchg
bswap
sbb
lea
dec
xchg
shld
repnz
imul
dec
imul
jmp
jnp
lret
xadd
bt
test
imul
cmp
shrd
xadd
inc
not
rcl
imul
imul
rcl
lea
shld
shld
movzwl
test
shl
and
imul
jmp
orl
mov
mov
mov
xorb
add
push
sub
mov
sub
loop
pop
loop
jmp
