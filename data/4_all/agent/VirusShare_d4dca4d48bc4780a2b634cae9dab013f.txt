outsl
xchg
xchg
add
cmpsb
push
add
mov
mov
sub
push
push
push
call
push
in
jg
adc
inc
fmuls
subb
jge
mov
mov
mov
sbb
mov
mov
pop
mov
xor
dec
xor
pop
or
jge
inc
push
or
dec
call
dec
or
int3
test
jne
xchg
add
dec
or
fs
out
cmp
test
push
push
mov
fidivrs
mov
nop
jl
or
pop
add
mov
jg
mov
js
insl
pop
add
cmp
jbe
mov
mov
sbb
mov
jmp
xchg
adc
neg
test
jae
cmp
jbe
sub
cmp
out
jg
pushl
sub
add
mov
imul
fdivs
push
pop
push
jmp
sub
add
leave
sub
ss
sub
in
jge
mov
jg
ret
and
pop
pop
pop
leave
ret
nop
inc
fucomp
je
add
push
or
add
nop
push
mov
mov
or
adc
xchg
stos
bound
ret
aas
cld
pop
push
pop
jle
sub
lock
data16
jnp
push
or
cmp
cld
fadd
out
je
mov
push
push
cmp
shrb
ja
roll
adc
push
pop
sub
outsl
lret
imulb
mov
mov
pushf
push
add
push
repnz
insb
xor
iret
frstor
mov
or
ret
mov
mov
pop
or
fisttps
cmp
je
push
push
and
rcrl
sbb
sbb
sbb
mov
or
mov
mov
test
sub
aas
push
jno
ss
outsl
pop
insb
sbb
gs
sub
add
popf
mov
add
cmpsl
mov
fidivrl
jne
cmp
je
cmp
mov
loope
add
or
jbe
sbb
in
outsb
mov
pop
pop
lahf
clc
push
movsb
mov
cmp
mov
outsb
test
add
cli
push
push
es
cmp
and
adc
push
cmp
das
cmp
inc
incl
mov
pop
fdivl
xor
pop
rolb
scas
cmp
je
addr16
dec
insl
mulb
or
ret
ss
mov
sbb
test
imul
cwtl
icebp
das
aam
cmp
xchg
mov
or
pop
je
and
inc
xchg
lock
es
push
jb,pt
xor
add
je
adc
mov
mov
mov
mov
ret
lea
into
sbb
lea
xorl
jmp
mov
pop
add
fistpll
ffree
cmpl
insb
mov
xorl
jnp
jge
movb
mov
js
jmp
movl
or
pop
mov
mov
add
hlt
sbb
pop
mov
and
int3
cld
or
cmp
mov
lods
mov
sub
lods
mov
xor
repz
mov
mov
push
nop
lcall
or
sahf
mov
jno
adc
sub
test
inc
mov
insb
jmp
adc
or
addr16
mov
xor
push
inc
jo
insl
mov
in
popa
loopne
pop
pop
mov
sbb
orb
mov
sbb
call
pop
arpl
push
lahf
xlat
es
mov
jbe
ss
add
sub
data16
sub
sbbb
push
cmp
jg
aas
push
mov
sbb
dec
insl
jo
add
mov
divl
jne
adc
lahf
mov
inc
mov
scas
mov
cmp
in
dec
xor
fsubrl
jne
test
add
fs
push
ret
fimull
sbb
aaa
jecxz
call
mov
push
mov
jae
test
push
push
or
loopne
int3
ja
negb
sub
sbb
jbe
ss
in
or
add
sub
jl
arpl
aam
inc
cli
add
or
mov
daa
std
add
xor
add
pop
xchg
mov
cmp
inc
or
hlt
jne
call
loopne
and
jne
or
je
orb
jb
enter
push
ds
cmpl
push
dec
cwtl
jnp
pop
inc
or
push
push
push
or
dec
push
sbb
adc
loopne
pop
rcll
and
adc
inc
clc
loopne
in
sub
sbb
mov
mov
loopne
test
js
cmp
sar
mov
div
icebp
push
pop
push
sub
sub
div
js
pop
add
pop
jmp
pop
pop
dec
mov
adc
je
inc
cmp
jb
adc
mov
rclb
dec
cmp
aam
outsb
daa
fldl
jo
enter
or
imull
adc
add
inc
insb
dec
fwait
js
add
in
in
add
push
out
jmp
xor
pushl
pop
push
cmp
mov
dec
or
idiv
ret
add
sbb
and
or
jns
push
or
sti
pop
ret
jg
push
inc
add
jb
jmp
imul
in
add
or
fisttps
cmp
mov
cmp
je
cmp
je
cmp
notl
clc
jo
sbb
dec
testb
je
addb
testl
inc
add
andb
sbb
add
ret
and
out
mov
pop
mov
push
mov
in
bound
sub
icebp
xlat
call
adc
call
xchg
jg
push
push
push
mov
sbb
pop
xor
add
pop
cmp
mov
push
mov
sarb
jne
xchg
call
or
bound
outsb
or
hlt
push
iret
xor
imul
popa
sub
insl
lret
mov
push
pop
pop
lods
cmp
outsl
into
mov
call
jne
mov
mov
xor
jbe
mov
loopne
dec
xchg
loope
inc
lret
lea
daa
movsb
fstps
jns
adc
lods
inc
ret
pop
and
popa
fs
ficoms
testb
hlt
je
call
jnp
jmp
es
mov
sahf
dec
cwtl
in
xor
push
mov
pop
xchg
sbb
fdivs
aas
andb
pop
fcom
cmp
cmp
enter
inc
pop
clc
or
push
add
add
std
add
dec
shr
dec
inc
inc
pop
es
push
push
scas
ret
jge
loope
pop
test
push
pop
dec
inc
push
inc
dec
xchg
sub
and
call
filds
lock
icebp
call
test
or
pusha
pop
ret
mov
pop
jecxz
icebp
dec
and
dec
cmp
jae
imul
pop
push
movsl
mov
ret
lcall
or
add
aaa
mov
mov
jg
int3
test
shll
inc
dec
adc
cltd
cld
push
cld
mov
out
in
test
mov
repnz
sub
sbb
and
pop
pop
pop
mov
pop
repnz
sub
adc
push
mov
sti
push
sub
fstpt
pop
adc
test
mov
sbb
mov
mov
mov
jecxz
insl
cs
and
test
repz
mov
mov
lret
jb
dec
lock
dec
daa
lock
or
and
and
sub
inc
in
mov
cmpsl
and
fs
dec
insb
loopne
and
add
gs
add
add
js
in
xor
cmp
adc
aas
inc
mov
inc
or
add
hlt
sbb
je
jp
mov
imul
adc
jmp
jecxz
lods
pop
sub
fstl
or
enter
daa
ss
iretw
adc
mov
adcl
adc
ret
add
adc
and
push
call
and
xchg
adc
add
push
stos
xchg
mov
cli
mov
xchg
sahf
xor
mov
inc
sub
add
fcoml
in
push
out
or
adc
and
jl
leave
jle
xchg
roll
inc
pop
cli
dec
add
inc
add
xlat
cs
add
mov
sub
insl
adc
dec
in
out
xor
in
sti
mov
icebp
or
push
mov
stos
rol
or
xchg
ja
xor
enterw
or
in
mov
or
sub
sub
imul
mov
mov
cmp
ja
orb
adc
push
adc
stos
aaa
xchg
inc
lcall
js
shll
ss
bswap
bound
sbb
getsec
insb
std
out
add
add
inc
pop
incl
mov
test
jmp
sub
pop
fldenv
pop
filds
jecxz
sbb
test
or
xor
imul
and
enter
sub
xor
add
hlt
push
out
nop
push
pushf
pop
cmp
pop
push
jle
dec
push
popf
or
add
rol
add
jae
push
insl
push
dec
or
gs
cmp
pop
jmp
adc
fldt
inc
adc
push
repnz
dec
lcall
rcl
jnp
in
gs
sbb
movsl
push
daa
xchg
and
mov
outsl
jne
dec
clc
fisubrs
aaa
xlat
and
and
jbe
push
mov
subb
sub
enter
cmp
mov
pop
jo
jo
call
sbb
cmp
and
ja
cmp
mov
insl
sti
loope
out
cld
pop
add
cmp
lods
xchg
jge
iret
or
mov
loope
stc
lods
mov
flds
mov
xchg
dec
and
sahf
in
mov
mov
pop
push
push
dec
sub
rcrl
cmpb
sub
lret
int
xor
jl
add
fnstcw
subb
data16
inc
mov
sub
xor
in
arpl
push
test
mov
adc
push
enter
jl
push
or
push
cmc
xor
fs
cmpsb
in
or
or
pop
cmp
sahf
push
adc
inc
or
test
xor
sarb
inc
xorb
cmp
iret
mov
fists
fistpl
call
sbb
pop
or
pop
pop
jne
push
sbb
jmp
js
cmp
sbb
stc
pop
pop
aad
xor
jmp
pusha
decl
cs
mov
in
jne
andl
pop
lods
mov
repnz
mov
mov
xor
sbb
ljmp
xchg
add
or
cmp
ja
pop
ret
test
inc
int
ret
mov
xor
mov
leave
xchg
or
dec
mov
sbb
push
in
adc
clc
sbb
cmp
loopne
or
mov
push
jg
out
leave
pop
or
call
pop
decl
inc
pop
jae
leave
adc
sub
sub
sub
cs
rcll
es
cmp
jbe
lea
mov
adc
xor
in
adc
pop
xchg
in
add
mov
cmp
sub
data16
xchg
lahf
daa
mulb
js
push
cwtl
cld
adc
negb
xorb
int3
push
jge
movl
cmp
das
mov
and
push
xchg
adc
addl
xor
into
xor
xorl
pop
je
xor
add
rcr
adc
cmpsb
sub
pop
js
lret
push
and
sarb
mov
push
push
aam
outsl
icebp
in
push
test
mov
lea
lods
jl
iret
adc
mov
push
mov
je
fwait
push
mov
push
sbb
or
xchg
nop
mov
imul
pop
cmp
xchg
or
leave
push
jnp
dec
cmp
xchg
xlat
xor
push
pop
aaa
fistpl
xchg
add
sub
aaa
fimuls
or
scas
fcomps
in
popl
imul
rclb
inc
or
or
cld
ljmp
cmpl
xor
imul
adc
mov
aas
xor
cmpb
test
add
sub
add
orb
sbb
and
aas
sub
push
pop
div
add
mov
shrl
inc
cmp
jl
mov
loope
cmp
adc
pop
fcoml
sub
and
cld
add
jbe
adc
xor
mov
adc
mov
test
add
push
cs
mov
sbb
mov
cmp
mov
cld
pop
xor
fldl
and
push
adc
roll
call
sti
aam
xchg
and
adc
or
repz
and
jne
and
stc
mov
mov
ret
mov
push
dec
push
sub
sti
push
pop
loopne
popf
in
add
or
sub
shl
insb
adc
shl
push
aam
fcomps
cwtl
mov
cmc
mov
and
adc
stos
fcompl
ss
and
mulb
xchg
mov
sbb
aam
xor
mov
stos
cltd
bound
add
shl
lods
iret
popf
lods
ret
pop
sub
leave
negb
jne
sub
mov
sbb
fidivs
das
inc
lods
iret
in
push
add
jns
or
pop
or
dec
ret
inc
adc
popa
sbb
fiaddl
pop
js
push
ret
sbb
pop
sbb
xor
push
loop
adc
mov
shlb
das
call
sub
rcr
and
fdivrp
push
js
pop
jp
cmp
test
adc
mov
pop
mov
push
add
fcomps
movb
popf
enter
dec
in
inc
jmp
mov
scas
sbb
ljmp
jecxz
sbb
or
adc
push
and
je
dec
mov
or
repz
das
add
push
xor
call
add
js
mov
nop
rolb
popf
add
xchg
jl
add
iret
add
arpl
mov
sub
enter
cld
add
or
or
dec
push
in
or
aad
add
fsubrl
jns
sbb
push
add
sub
cmp
pop
mov
add
mov
loop
and
call
push
scas
sub
sub
mov
pusha
push
repnz
sbb
orl
pop
sub
mov
xorb
xchg
outsb
sub
fadds
daa
add
xor
inc
and
pop
add
rolb
andb
or
scas
mov
sarl
cld
cmpsl
jns
fildll
movsb
fsub
push
sub
sarb
mov
push
push
push
subl
sub
ret
jne
and
push
jbe
xor
xor
mov
pop
loopne
les
gs
mov
aam
shrb
pop
cmp
and
enter
pop
std
pop
push
cmp
mov
mov
xchg
or
add
ja
mov
rcrb
jmp
stc
adc
in
out
popl
add
push
jno
sti
add
add
call
pop
arpl
adc
xor
std
test
xchg
sub
xorb
pop
mov
rolb
xor
ljmp
jle
cmp
hlt
movsl
shrl
call
aam
xchg
aas
lcall
sbb
sub
add
cmpl
std
jg
pusha
xchg
in
jl
xchg
add
leave
push
in
jecxz
andb
adc
dec
test
adc
xchg
call
nop
or
int3
xor
and
push
sbb
mov
dec
lock
pop
mov
rorl
out
inc
out
pop
mov
or
dec
and
push
pop
test
inc
lea
push
cs
dec
jb
sahf
ljmp
jl
enter
insb
out
in
or
roll
and
jnp
int3
inc
movsl
adc
out
sti
aad
je
sub
cmpb
inc
jb
cmp
inc
jo
xchg
or
test
inc
enter
insb
or
and
push
or
and
fists
stos
mov
in
cmp
pusha
faddl
sbb
int
pop
mov
pop
ja
addr16
movsl
xor
xchg
inc
loope
dec
enter
in
push
jb
outsl
fs
or
push
jnp
cmp
push
adc
pop
mov
fisttps
nop
mov
mov
adc
inc
pusha
or
test
xor
inc
in
xchg
cmp
pop
sbbl
fs
cmc
aad
ret
xchg
sbb
xor
decb
xor
pop
sub
sahf
out
into
xchg
and
ss
inc
sub
mov
pop
jb
xor
out
dec
test
and
call
xacquire
shlb
mov
pop
inc
mov
add
insb
sbb
inc
test
das
in
push
repz
jle
stc
or
aam
adc
test
testl
dec
inc
aas
gs
repnz
dec
or
push
xor
add
lahf
lods
pop
jb
je
shll
cwtl
mov
inc
out
mov
stos
dec
insb
pop
test
push
mov
pushf
lea
push
push
and
push
pop
cmc
movsl
pop
cwtl
ret
mov
insb
cmp
adc
pushf
clc
js
sbb
rorb
cmp
and
movsl
dec
ret
testl
add
xor
movsl
ds
and
xchg
cs
repnz
dec
popf
js
sub
sbb
jnp
xchg
mov
jge
sub
xor
in
jl
or
test
pop
push
inc
repnz
xor
adc
and
pop
sub
jnp
adc
sub
mov
xor
sub
cmp
mov
daa
push
ljmp
cmp
mov
add
pop
jmp
test
mov
popa
in
fimull
sub
es
xor
add
add
inc
adc
fmul
sarl
je
xor
push
stos
insb
adc
mov
and
mov
js
add
outsl
repz
pusha
daa
or
xor
enter
mov
jmp
ja
mov
mov
jno
fs
jmp
push
clc
pop
sub
push
sar
mov
stc
fs
and
push
mov
push
cmp
mov
pop
push
and
ljmp
rcrb
repz
hlt
inc
cmp
jl
andb
rorl
jg
popa
sub
mov
mov
cmp
mov
or
clc
push
mov
outsb
or
dec
or
push
mov
incb
rolb
mov
test
cmp
fmuls
cmp
out
add
add
sub
or
dec
pop
dec
sti
cmp
seta
inc
dec
mov
rorb
add
test
aad
mov
pushl
or
xor
decl
and
cs
movsb
cmpsb
cmpsl
push
jnp
sbb
aaa
call
test
std
sub
inc
add
xchg
cld
in
cmpsb
andl
repnz
in
inc
sub
or
fistl
sbb
jne
xor
loop
xor
fs
sbb
and
loop
test
fstpl
adc
pop
je
pop
mov
push
push
xchg
add
lods
ljmp
jae
xor
sub
add
cs
mov
sub
jne
loop
addr16
or
push
js
mov
add
mov
mov
mov
daa
sbb
mov
jno
add
jnp
je
aam
in
or
adc
sub
pop
repnz
pop
fsubr
add
xchg
inc
mov
cmp
je
faddl
dec
fidivrs
push
test
push
aaa
dec
inc
mov
pop
rol
int3
adc
fwait
or
cmp
mov
xchg
dec
iret
adc
jne
movl
sbb
js
pop
or
cmpsb
sub
jns
ljmp
dec
cmpb
je
sub
nop
clc
int
mov
pop
or
rcll
andb
jmp
adc
imul
fcomps
shlb
sbb
jl
addb
inc
imul
lahf
xor
loope
js
cmp
mov
push
push
or
adc
adcb
mov
aaa
mov
jmp
push
pop
push
push
push
adc
add
test
aam
push
add
jo
inc
lret
mov
cmp
adc
dec
sbb
lods
movsb
icebp
adc
mov
or
or
and
xor
push
ds
mov
test
stc
into
sbb
cmp
fisttps
insl
movsl
repz
jg
xchg
push
xchg
decb
outsl
adc
nop
xchg
cmp
test
push
mov
xorl
cmp
in
pop
fcompl
stos
sahf
xor
loopne
fdivrs
sub
push
cmp
movsl
fldl
cltd
lods
addr16
jl
ds
dec
pop
xchg
mov
or
add
cli
cwtl
xchg
xorb
adc
ja
test
push
imul
sbb
jecxz
data16
ret
je
mov
and
push
in
test
xchg
sti
sbb
pop
and
je
pop
mov
fcomps
mov
inc
sub
pop
or
shrb
sub
xor
lret
sbb
pop
add
cwtl
and
adc
movsb
mov
lret
and
cmp
notb
sahf
cwtl
or
adc
jle
pop
leave
je
or
lock
insl
lret
shrb
adc
xchg
and
mov
and
add
mov
xchg
clc
int3
mov
mov
add
jne
xor
in
jmp
add
jbe
or
or
sub
mov
in
cli
enter
into
in
mov
push
push
ret
sub
sub
stos
sti
push
xchg
lds
push
adc
push
sub
into
inc
cmpl
mov
addr16
xor
add
jne
mov
mov
push
inc
pop
mov
fistpl
ret
xlat
push
cwtl
pop
or
ret
adc
es
and
mov
loope
or
cmp
divl
push
in
lea
mov
pop
adc
cltd
ret
insb
pop
adc
sub
cmovae
cmp
addb
push
idiv
orb
addr16
or
enter
inc
lods
jecxz
ret
mov
icebp
and
xchg
pop
lock
ficompl
adc
inc
les
adc
lcall
fstpl
in
dec
add
mov
insb
add
dec
add
les
inc
xchg
fildl
xchg
pop
inc
ja
add
hlt
mov
or
ljmp
rolb
fwait
inc
outsb
mov
rolb
add
adc
shl
xor
test
sub
stos
mov
mov
inc
ds
and
adc
or
adc
xor
and
add
dec
inc
dec
cli
xchg
and
jb
sbb
add
mov
mov
sti
pusha
loope
xchg
jg
or
out
inc
cmp
pop
dec
xchg
jp
and
out
lahf
pop
sbb
int3
sbbl
and
sub
stos
decb
cmp
mov
jne
leave
and
cmp
mov
or
pop
cmp
ja
faddl
pop
mov
sbb
push
pusha
test
add
daa
out
roll
inc
bound
dec
push
mov
insb
sbb
notl
and
je
adc
stos
stos
lock
cmp
sub
xchg
shlb
stos
lods
adc
mov
adc
and
pop
repnz
shrl
out
insl
stos
dec
aam
sbb
sub
rolb
push
lods
adc
inc
push
rorb
mov
or
sbb
sub
mov
cld
je
inc
dec
mov
add
adc
mov
aam
arpl
js
pop
jb
push
or
fdivr
jo
sub
jmp
push
stos
add
test
or
mov
mov
rorb
or
enter
ret
push
jmp
xor
mov
adc
scas
and
mov
ds
fcmovu
mov
add
ljmp
mov
adc
xchg
insb
mov
xor
js
sub
setp
add
mov
xor
inc
adc
mov
ja
xor
ds
in
jbe
mov
dec
add
adc
add
mov
push
add
enter
addb
out
mov
pusha
aam
aam
sub
int
pusha
sub
test
enter
add
push
pop
xor
fs
divb
je
into
out
pop
lcall
push
rorb
xor
dec
int3
inc
jb
add
xor
mov
sub
dec
inc
daa
cmp
les
dec
je
or
mov
enter
adc
inc
sbb
adc
ret
dec
decl
int3
lock
jne
test
sbb
fdivrl
adc
rcrb
jl
mov
add
bound
pop
adc
push
add
jno
out
insb
mov
hlt
push
or
pop
sub
sbb
push
xchg
popa
or
clc
aas
xor
ja
push
orb
les
push
fistps
mov
cs
push
int
add
or
lcall
std
stos
add
das
cld
je
cmpb
adc
je
sbb
mov
mov
sbb
xor
xchg
iret
sub
cmp
gs
xor
fldl2e
mov
and
cwtl
dec
xchg
lret
or
or
cmp
push
pop
pushf
xchg
sbb
andb
jl
inc
xchg
xchg
dec
add
gs
or
xor
push
add
mov
dec
addr16
sub
mov
push
xchg
hlt
pushf
xor
and
add
ss
bound
shl
and
cmpsb
push
clc
sub
gs
sarl
add
add
je
hlt
out
rorl
clc
mov
push
addl
out
lahf
mov
jge
cmpsb
pop
xor
repnz
inc
test
cltd
sub
push
test
hlt
orb
mov
mov
mull
aaa
test
in
into
push
fs
xchg
and
dec
sub
fimull
mov
mov
negb
pop
add
sub
stc
popf
mov
sbb
cmp
aas
std
add
push
fdivl
jge
lcall
mov
cmp
xchg
insb
jb
testb
xchg
out
pop
pop
dec
add
fmull
jbe
js
pop
pop
faddl
fs
xchg
cmp
sub
adc
test
mov
test
mov
dec
inc
xor
dec
leave
or
insb
mov
cmp
and
rcrb
add
pmulhuw
addr16
xor
cmpl
adc
dec
test
mov
xchg
cmp
inc
pop
aaa
add
cld
xchg
frstor
cmp
xchg
and
enter
sbb
mov
addr16
fcmovnu
pushf
pop
test
addr16
sbb
or
aam
pop
inc
mov
inc
adc
lods
cmp
sbb
sbb
and
enter
fmull
decb
enter
pushf
push
fsubl
and
and
pop
les
dec
or
jns
lea
xor
insb
call
bnd
adc
cld
or
fcmovne
js
or
jmp
mov
xor
and
mov
xor
and
flds
nop
je
pushf
cld
xor
sub
mov
test
fmul
xchg
mov
cmp
xchg
fnstenv
xor
in
addl
mov
dec
rcrl
add
imul
jne
insb
inc
push
loope
push
jns
inc
sbbl
jne
mov
push
cmp
add
mov
fnstsw
sub
int3
cmp
push
subl
daa
jge
add
sarl
xchg
sbb
add
pop
or
pop
pmulhuw
cmp
enter
mov
pushf
mov
ljmp
xor
add
cmp
sbb
sub
je
mov
mov
andl
mov
nop
in
xchg
movsb
aas
cwtl
insb
fs
sbb
inc
movsb
sahf
sub
sbb
sbb
add
jl
enter
sbb
mov
mov
hlt
mov
hlt
out
cmpl
jns
sbb
and
aas
push
xor
icebp
insb
push
fs
movsb
mov
push
xor
and
mov
mov
and
ljmp
and
lds
adc
sbb
movl
call
jb
enter
xchg
mov
shrl
xadd
mov
jno
out
dec
hlt
aas
test
test
repz
pop
jae
mov
dec
sarb
xor
inc
call
mov
jle
andb
daa
fmuls
push
sub
jno
or
fcomps
rclb
movsl
fsubrp
add
sub
push
push
inc
cmp
leave
xchg
mov
fistl
scas
call
cmp
mov
aas
pop
pop
je
cmp
jne
mov
or
or
jp
loopne
ret
in
pusha
mov
mov
in
pop
mov
sbbl
stos
enter
stos
adc
sub
clc
test
or
push
fsubrl
xchg
fsub
lock
test
sbb
add
mov
lcall
inc
movsl
test
pop
adc
add
int3
loopne
xchg
or
mov
adc
shlb
enter
lahf
mov
push
lcall
sete
ss
mov
and
inc
xor
mov
aas
ret
push
lea
push
add
cmp
adc
pop
mov
pop
ret
shlb
cmpsl
mov
fldt
jo
xchg
mov
ljmp
dec
pop
in
jb
sbb
mov
adc
push
mov
cli
adc
insb
adc
mov
pop
call
mov
shl
in
or
cmpb
cld
adc
push
xchg
xor
lods
stos
mov
ds
cmp
xchg
add
pop
push
cld
mov
or
fsub
and
and
in
or
jne
mov
push
test
dec
cmp
xor
sbb
dec
push
rcrl
and
cmc
add
pop
aam
lret
idiv
jb
enter
jnp
sahf
dec
xchg
pusha
lahf
icebp
adc
push
add
ret
push
xlat
adc
and
sub
inc
pop
ljmp
xchg
adc
bound
and
xor
add
mov
add
push
adc
dec
in
mov
mov
in
push
or
pop
dec
push
or
lahf
loope
shrl
nop
mov
imul
push
inc
xchg
pop
cmp
adc
aas
decl
add
dec
sbb
xchg
sub
call
inc
icebp
push
push
push
cld
jge
push
lods
inc
lea
add
leave
lea
mov
fadds
xchg
loopne
xchg
outsl
or
add
test
ret
mov
push
loop
fadds
adc
gs
mov
xor
cmp
shll
add
sub
lret
or
mov
popa
xlat
push
addr16
aas
mov
dec
clc
fcomip
xchg
cmpl
cmpw
jne
movsb
cmp
out
xchg
mov
jbe
push
push
jmp
inc
andb
sub
leave
push
addr16
lea
sbb
inc
andb
jb
mov
dec
aas
mov
sbb
push
dec
orb
rorl
fcomps
cwtl
mov
fdiv
je
fmuls
pop
cmpsl
xor
cmp
mov
sbb
repnz
add
push
cmp
fmuls
pop
popa
in
imulb
cmp
out
or
push
testl
cli
test
stos
adc
ja
mov
push
in
sbb
mov
mov
neg
cs
sub
imul
fwait
je
adc
je
dec
pop
mull
mov
cmp
jp
mov
inc
icebp
push
loop
pop
push
lea
and
popf
push
ja
sbb
xor
inc
out
aaa
inc
sbb
pop
test
outsl
mov
lret
xor
pop
or
outsb
pushl
shr
out
mov
push
mov
jmp
ss
mull
lea
cmpl
adc
pop
int3
add
add
push
push
adc
mov
pop
movsl
inc
sub
cmp
jne
lods
xchg
jb
pop
sub
adc
and
sbb
mov
push
hlt
xor
push
dec
mov
and
or
cmp
insl
arpl
adc
add
push
sbbb
mov
aad
or
mov
sbb
mov
loopne
xchg
or
dec
sub
push
cmpsb
sar
add
sbb
fcoms
insl
mov
xor
sbbb
sub
inc
xor
cltd
lret
sbb
or
xchg
and
pop
rclb
pushf
sub
gs
xor
and
jno
mov
cmp
or
out
push
and
aaa
mov
int3
jnp
gs
or
push
bound
add
push
jbe
js
sar
pop
leave
andl
xor
mov
cmp
mov
jl
push
mov
mov
sti
out
lock
enter
mov
and
mov
mov
daa
flds
cwtl
cwtl
fldcw
and
and
idiv
mov
adc
in
enter
jae
int3
mov
daa
add
push
shll
addr16
mov
ret
addb
dec
outsb
adc
xor
sbb
addr16
nop
insl
pusha
les
or
cld
jns
lea
mov
in
mov
aaa
or
inc
lahf
test
mov
mov
sub
add
fwait
mov
sbb
fisttpll
stos
sub
nop
xchg
xchg
cld
hlt
mov
das
xor
ret
add
insb
jno
inc
or
fcoml
or
movsb
xchg
dec
es
nop
aam
pop
call
daa
sbb
mov
mov
shl
or
sub
adc
and
pop
pop
adc
cld
jne
add
xor
adc
push
sahf
adc
mov
cmp
mov
pop
and
js
mov
popl
xor
cmp
cs
dec
mov
push
jb
push
adc
jp
dec
add
jb
inc
push
lea
push
inc
jo
or
mov
popf
pop
and
cld
mov
adc
repnz
xchg
xor
into
lds
pop
xchg
mov
or
gs
add
andl
sbb
or
adc
jmp
mov
popl
or
push
mov
int3
ja
push
xchg
mov
test
aam
orl
cmp
mov
push
andb
jle
int3
inc
inc
adc
sub
nop
sbb
lret
ljmp
cmp
and
add
movsb
stc
mov
cmp
jne
fxch
inc
int
fisttpll
jmp
pop
in
or
inc
or
or
nop
jecxz
add
addl
cmpl
pop
loopne
int3
movb
ret
cli
notl
jmp
insl
addl
in
jo
inc
pop
sbb
or
xchg
add
or
loopne
dec
push
mov
outsb
add
aad
cmp
jne
cmp
pop
arpl
sub
fmull
xor
cmp
je
pushl
pop
addr16
cmpl
pop
aam
cmp
push
dec
aam
pop
sbb
mov
into
pop
in
fnstenv
pop
jmp
fwait
insb
mov
cmp
das
icebp
pop
das
dec
faddl
adc
pop
mov
mov
jo
pop
push
add
addl
lahf
xchg
xchg
or
xor
in
lea
or
lret
and
xchg
mov
dec
clc
scas
or
stos
xchg
call
ds
push
or
jo
dec
shrl
xor
cmp
add
dec
pop
jnp
xchg
jmp
pop
push
fidivs
in
inc
ds
push
pop
sub
aaa
jl
sbb
jne
push
sub
adc
arpl
pop
ficoml
xlat
ret
cmp
mov
and
pop
or
aaa
int
push
aam
cmp
push
adc
sbb
sbb
pop
pop
jne
mov
ds
pop
sbb
inc
sarb
cmp
sbb
lods
cli
fiadds
sub
movb
adcb
shrb
or
ret
test
mov
or
lods
cmc
lock
ja
add
bsr
aaa
add
roll
dec
jmp
outsl
ret
dec
inc
popf
add
fstpl
sub
inc
into
mov
xchg
rclb
stc
in
outsl
xor
xchg
shlb
pop
sub
jmp
popf
inc
mov
movsb
fs
pop
cmp
jae
jne
add
inc
jb
jmp
cmp
pushf
out
fwait
mov
inc
push
pop
lret
aaa
mov
and
insb
pop
add
push
sbb
cmp
or
test
pop
jg
adc
scas
mov
pop
xor
dec
push
mov
or
dec
sub
adc
pop
jnp
or
mov
mov
sub
nop
dec
and
mov
or
cmpsl
cs
movsb
loop
jae
std
push
mov
pop
push
les
ss
insb
imul
iret
les
mov
repnz
xor
js
mov
sub
pop
mov
sub
bound
movl
add
or
je
adc
push
arpl
cmp
jns
leave
mov
jle
dec
push
dec
loopne
outsl
jge
cmpsb
pop
pop
xchg
outsl
das
push
cmp
add
push
adc
sahf
movsl
lcall
add
inc
pushl
push
sbb
jl
pop
jge
add
enter
jle
js
les
pop
movsb
xor
cmp
stos
mov
xor
out
enter
inc
push
dec
dec
icebp
mov
sarb
les
and
sub
inc
jne
not
and
adc
cs
movl
bound
mov
xor
push
fdivs
fidivrl
cmp
sbb
aaa
cmpl
inc
inc
rorb
cmp
mov
push
pop
lock
xchg
dec
and
lea
ss
mov
mov
adcb
xorb
xor
mov
mov
cld
mov
xchg
adc
ss
jo
in
xchg
test
mov
lds
pop
call
shlb
xchg
xor
sub
scas
pop
push
and
pop
ja
mov
nop
mov
dec
or
clc
and
push
in
cmp
es
outsb
jne
add
or
sbb
ds
in
repz
inc
ss
xor
in
mov
mov
test
sbb
movsl
loop
push
xchg
sbbb
insb
cs
insl
cltd
or
out
mov
movsb
fs
out
and
or
or
into
push
inc
ror
sub
cmp
clc
jbe
popa
and
push
cld
sub
aad
lea
adc
pop
mov
or
jb
sbb
fsubrl
push
push
cmp
or
mov
and
cmp
dec
enter
nop
adc
loopne
add
aam
mov
add
daa
sub
mov
fisttpll
mov
hlt
mov
add
xor
mov
xor
jle
mov
cmc
mov
adc
push
std
add
inc
mov
ljmp
cmp
aas
mov
mov
mov
mov
loopne
jb
ss
stc
jbe
mov
call
sub
push
jmp
mov
push
sub
xlat
test
incl
pushf
ds
fdivs
jp
push
fldln2
out
mov
push
lret
sbb
mov
push
inc
es
mov
addr16
add
in
mov
add
popl
mov
das
push
pushf
xor
mov
prefetch
fxch
xor
add
jmp
or
in
cmp
std
dec
mov
insb
lea
aaa
mov
data16
push
or
jbe
jbe
and
or
or
aam
mov
or
or
jg
mov
and
call
sbb
pop
lds
fdivr
add
dec
xchg
dec
out
pop
jl
sub
ret
adc
adc
add
pushf
outsl
adc
popf
les
test
xchg
inc
loop
cmp
sbb
int3
movsl
jg
or
faddl
and
pop
shl
add
mov
scas
add
and
mull
adc
pop
and
addr16
subb
push
rcrb
or
or
mov
fs
cmpb
cmp
call
loopne
mov
xchg
mov
addb
add
inc
mov
outsb
orl
fmuls
mov
call
mov
in
adc
testb
mulb
shl
clc
enter
and
and
repz
mov
adc
arpl
in
sbb
test
jg
fnstcw
inc
add
or
pop
cmp
jb
fs
mov
outsl
sbb
jo
mov
insl
dec
int3
cmp
dec
jb
pop
jae
push
int3
inc
lock
in
insb
and
inc
jmp
andl
aam
cmp
pop
adc
pop
or
pop
cmp
sbbl
jbe,pt
jp
stc
xorl
daa
jmp
mov
sahf
cmpl
or
xchg
xchg
outsl
xchg
dec
xchg
mov
cli
xchg
movsb
mov
push
xchg
push
add
inc
cwtl
addb
nop
sub
jmp
dec
das
adc
cmp
mov
sub
add
jae
sub
mov
or
loope
or
inc
int3
enter
sbb
and
push
jl
addr16
push
inc
cmpsb
or
push
mov
lock
mov
hlt
cs
jge
or
fists
mov
jecxz
sbb
fwait
or
cmpsb
push
mov
mov
cmp
sbb
xchg
xchg
and
and
push
lds
add
or
imull
outsb
xor
jne
inc
or
add
fildl
repnz
or
jbe
aam
dec
jne
push
ror
negb
adc
inc
aam
push
sub
jbe
aad
lahf
fsubr
cmc
push
pop
ficoms
out
imul
or
pusha
or
xchg
testl
movb
stc
arpl
fs
cmc
add
sub
and
fs
mov
fs
add
mov
mov
add
cmp
pop
push
inc
imul
dec
inc
jbe
dec
push
jp
dec
xlat
insb
mov
add
and
or
out
rcr
loop
fstp
loope
outsb
shll
adc
fnstsw
mov
ret
pusha
sbb
sub
sbbb
out
ljmp
add
push
push
or
or
adc
cmpsl
cmpsl
add
je
popa
fs
js
pop
call
bound
bound
or
ljmp
or
sbb
adc
sub
or
sub
dec
dec
std
dec
repz
pop
pusha
daa
es
jl
orl
and
jo
sbb
inc
dec
dec
dec
mov
adc
inc
xor
in
add
bound
cmp
ljmp
inc
inc
scas
add
test
mov
mov
mov
mov
inc
pop
add
aas
scas
loopne
into
fucomp
shr
jmp
loope
mov
addr16
popf
sti
pushl
aas
push
pop
cmp
jo
sti
add
mov
jg
ja
out
mov
aas
roll
fs
push
push
dec
dec
push
outsl
bound
adcl
push
jle
orb
addb
je
push
mov
adcb
push
cmp
add
add
add
sbb
call
pop
cs
pop
push
jmp
outsl
ljmp
push
push
dec
dec
pop
push
push
pop
sub
pushf
sbb
pop
pushl
mov
subl
mov
ja
int
lret
jmp
ljmp
mov
daa
dec
cmp
mov
push
or
cs
sub
sub
sub
cmp
push
pushl
dec
fdivrp
jmp
div
sti
std
in
in
jmp
ljmp
nop
mov
adc
sarb
jnp
cmpb
jg
mov
mov
add
push
movsb
outsl
inc
std
ja
in
xchg
std
cmc
aad
jmp
jle
mov
sub
jns
sbb
mov
pop
mov
pop
mov
pop
pop
stos
pop
iret
add
jecxz
out
jp
add
jo
mov
mov
mov
or
ret
push
mov
mov
pop
rcrb
adc
adc
cmp
lret
jmp
aas
sub
and
cmp
aas
aas
ds
movsb
xchg
xchg
mov
nop
movsl
mov
stos
or
loop
xchg
xchg
stos
test
movsl
movsb
mov
xchg
scas
xchg
add
sarb
rcl
xlat
int
xor
rcl
fadd
shlb
gs
push
pusha
mov
jg
lcall
decl
cmp
jae
xor
inc
cmp
push
lahf
pop
cmc
or
cs
adc
xchg
xchg
movsl
lcall
mov
mov
pop
push
in
pop
fcmovb
test
movsb
mov
gs
mov
cmp
adc
mov
ja
fs
push
add
fadds
inc
lahf
add
lcall
adc
mov
lret
sub
mov
hlt
test
sub
scas
cmp
or
mov
mov
mov
mov
les
bound
mov
lods
xchg
cmp
daa
inc
movsb
cmp
icebp
popa
inc
jbe
out
std
repnz
lock
pop
out
out
add
add
icebp
hlt
pop
clc
jbe
and
mov
mov
hlt
std
add
add
mov
aam
inc
data16
pop
dec
je
insl
push
imul
pop
gs
data16
dec
mov
cmp
imul
jae
xor
push
idivb
insl
jg
outsl
clc
xchg
aaa
pop
push
dec
dec
pop
pop
sbb
sub
inc
loope
out
mov
mov
xchg
test
cltd
test
ret
jns
mov
push
push
jbe
movsb
stos
popf
mov
jg
mov
rorl
loopne
jmp
repnz
mull
dec
je
inc
pop
dec
dec
addr16
arpl
or
adc
aaa
repnz
out
cmp
aaa
dec
cmp
or
inc
repnz
into
push
xchg
call
loopne
fcmovu
popf
mov
into
out
cmc
in
ljmp
pop
lods
lods
stos
jl
mov
jle
and
push
mov
inc
inc
pop
inc
mov
cltd
add
add
jle
cwtl
insl
insl
sti
out
or
sbb
adc
add
loopne
push
jae
fdivrs
or
stos
mov
dec
scas
add
ret
dec
clc
mov
clc
pop
insb
add
std
lcall
popf
xchg
mov
mov
jge
jl
outsb
mov
mov
das
mov
inc
pushl
outsb
inc
jns
jbe
loopne
punpckhbw
test
push
pop
loopne
jmp
orb
push
dec
push
jmp
fisttpl
data16
fucomip
mov
pop
prefetcht0
cmp
adc
jnp
pop
fdivr
call
testl
loope
in
int
out
jmp
in
cmp
cmp
sub
xor
cli
push
clc
add
ljmp
cltd
xchg
scas
mov
outsl
push
imul
adc
add
sub
mov
xchg
add
iret
icebp
lock
icebp
hlt
andb
mov
push
inc
dec
sub
pop
push
jg
pop
clc
bound
pusha
push
movsl
push
push
pusha
scas
or
push
das
arpl
mov
xor
pop
mov
int
div
clc
lcall
cld
cli
sti
into
std
or
out
icebp
add
cs
incl
in
cld
add
das
cld
add
das
sub
sub
or
push
add
cmpsb
aaa
pop
aaa
clc
mov
cltd
lcall
adc
repz
sti
loope
pushf
jecxz
push
imul
aad
fst
loop
jo
jl
insb
jp
cmp
jb
cmp
inc
outsb
jge
das
sub
mov
insl
add
sub
add
or
cmp
and
pop
push
dec
xlat
lcall
jmp
sti
cld
sti
sti
leave
mov
pushf
sbb
pop
or
jg
cwtl
out
pop
loopne
or
add
push
jmp
cld
add
icebp
insl
mov
fidivs
rolb
shl
sti
add
repnz
testb
imul
stc
and
repnz
rolb
jmp
inc
pop
adc
xor
and
jg
xor
pop
jle
mov
inc
jbe
jle
cltd
sbb
pop
scas
xor
mov
pop
jo
jmp
or
stos
mov
mov
sti
ljmp
dec
pop
ljmp
adc
add
mov
daa
scas
mov
jbe
pop
jae
jne
pop
push
push
push
or
divl
add
add
out
mov
or
inc
inc
fdivrs
or
or
sbb
fistpll
lock
sbb
lods
jl
push
std
mov
adc
and
sbb
sbb
mov
outsl
fists
cwtl
mov
test
pop
mov
mov
aaa
xor
cltd
test
mov
mov
jns
xchg
popf
popl
test
out
outsl
cli
jp
mov
popl
test
xchg
aam
rcr
aad
xchg
pop
ja
arpl
lahf
xchg
loopne
mov
mov
cld
mov
cmp
pop
pop
dec
pop
pop
insl
push
mov
inc
aaa
inc
aam
lret
fistpll
call
adc
inc
xor
xchg
sbb
mov
mov
fst
rcl
fsubs
fmul
in
gs
not
fsub
inc
pop
dec
jg
cmp
iret
loop
outsb
fistpll
rcl
ret
sarb
inc
dec
push
push
push
fiadds
pop
ss
pop
push
push
push
add
jns
pop
daa
sub
xor
sahf
sub
sub
xor
pop
das
imul
clc
jns
std
jb
jp
sbb
cmpsb
or
push
add
dec
setno
fsubrs
outsl
lcall
xor
or
or
or
iret
iret
into
repnz
jg
jmp
sahf
mov
mov
leave
enter
negb
dec
and
pop
call
icebp
addb
outsl
pop
pusha
pusha
scas
scas
cld
rcrb
loope
adc
in
test
idivb
pop
arpl
std
idiv
add
testb
xchg
inc
jmp
fbld
push
test
scas
stos
test
mov
or
pop
icebp
mov
cmpl
lods
stos
sbb
push
dec
jg
sbb
and
idivl
sbb
lock
std
or
std
adc
and
lods
shlb
std
fcomip
sbb
addr16
mov
test
rol
loopne
loope
jae
fwait
xchg
pop
fsubrs
add
arpl
fs
insl
std
aas
pusha
test
fcmovnu
aam
imul
mov
lret
add
rcr
mov
xchg
dec
mov
rcrl
stos
inc
cmp
lret
cld
xor
ss
xchg
test
jle
mov
sti
repz
test
pop
sbb
ds
enter
aaa
mov
repnz
adc
les
leave
add
ud0
cmpb
push
mov
test
dec
es
imul
jmp
jle
inc
adc
inc
es
push
mov
sbb
sbb
jmp
pop
ret
jbe
divb
pop
and
and
pop
into
sbb
cli
sbb
or
inc
ffreep
sub
pop
mov
cmp
cwtl
dec
xchg
int
add
jmp
inc
sbb
mov
int3
add
add
cmp
addl
fildl
or
decl
push
sub
and
ffree
lds
cmp
mov
push
jp
sbbl
call
mov
cmp
push
sbb
push
jne
pop
xchg
loop
imul
insb
xlat
scas
and
mov
int
jns
arpl
mov
pop
pushl
pop
jl
inc
or
lret
ds
inc
xor
pop
push
jle
decl
adc
lds
stos
fildl
fistpl
jae
xchg
lahf
roll
cmp
lcall
in
dec
push
sbb
inc
mov
adc
aaa
in
repz
cmc
pop
call
fidivs
das
pop
mov
add
fnsave
or
mov
push
jo
push
jo
or
mov
test
pushl
not
rcr
rcr
mov
fdivs
mov
pop
cmp
imul
push
fldl
mov
in
add
mov
cmp
and
scas
inc
push
inc
pop
insl
insb
ds
pop
cmp
xor
je
addr16
jno
jge
daa
fmull
testl
pop
dec
push
dec
push
dec
push
sbb
pop
pop
jge
imul
push
jae
add
lea
int3
xor
mov
lret
mov
cltd
mov
ret
mov
sbb
ljmp
add
outsl
icebp
adc
adc
jae
xlat
in
not
push
ja
jl
jg
xchg
xchg
jnp
mov
lcall
decl
cmpl
aam
roll
ret
pushl
dec
add
rcl
mov
ret
sahf
popf
mov
insl
jne
cmpsb
out
sub
cli
add
cli
das
ja
imul
clc
int
das
sub
xor
ds
and
fildll
add
lret
icebp
sbb
test
mov
popf
mov
cli
outsl
cld
jg
mov
mov
pop
adc
push
or
fmulp
fcmove
ret
lods
aaa
out
sbb
fisttpl
or
in
outsb
lret
or
add
push
pop
pop
sbb
call
shrl
ret
ret
std
xor
ret
pop
sbb
outsb
hlt
imul
lret
mov
pop
scas
sti
fists
inc
inc
mov
hlt
popl
push
lock
ljmp
outsl
hlt
outsl
mulps
jo
jge
or
je
pusha
mov
inc
les
add
adc
lcall
push
pop
push
pop
sbb
inc
es
cmp
cmp
loop
fists
ds
adc
arpl
pop
and
in
mov
inc
xor
add
xor
mov
notl
out
sti
dec
adc
mov
clc
xchg
and
or
lcall
stc
ljmp
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
push
divl
sti
inc
jb
outsl
jb
gs
inc
imul
idivl
jnp
insb
outsl
jae
or
outsl
popa
fs
imul
idivb
gs
jb
insl
jo
inc
or
mov
punpcklwd
push
gs
or
das
ja
outsb
movsl
inc
or
arpl
jae
push
jb
jle
fisubrs
imul
inc
cmp
inc
jae
push
outsb
insl
popa
jo
imul
ja
ss
push
pusha
push
push
push
fs
data16
dec
jne
js
outsl
inc
je
in
jae
test
adc
mov
outsb
inc
sti
arpl
pop
pop
or
out
imul
or
jb
fdivl
in
push
mov
inc
jne
sub
outsl
or
outsl
insl
in
and
gs
and
push
dec
popa
insl
rcrb
fucomi
adc
jo
sub
orl
sbb
or
test
push
outsl
insb
jne
gs
outsb
adc
mov
iret
lcall
arpl
push
je
or
or
je
jo
inc
mov
mov
arpl
inc
cmp
dec
dec
scas
adc
ret
enter
imul
jne
mov
js
popa
sti
imul
or
loopne
in
inc
mov
pop
jo
gs
mov
out
jge
gs
adc
stos
jns
xor
xor
sub
jnp
xor
lcall
insb
insb
outsl
std
pop
arpl
movb
mov
or
xor
out
rolb
push
ja
or
ret
fsubrl
test
mov
stos
call
arpl
cs
imul
pop
lods
in
mov
jo
pop
es
cmp
wbinvd
int3
mov
insl
mov
sub
jne
int
ret
pop
call
dec
pop
orb
jb
and
fwait
jne
popa
xlat
or
lcall
aas
xor
inc
pop
push
add
xor
iret
sbb
jb
pop
xor
arpl
cmp
xchg
cmp
adc
jae
jo
lods
fnstsw
imul
pop
fsubrl
push
and
pop
pop
data16
and
arpl
add
push
sub
sub
imul
pop
leave
pop
pop
mov
mov
imul
outsb
sti
addr16
into
jne
cmp
mov
addr16
xor
or
jb
sbb
push
cltd
mov
add
call
insl
sub
or
push
mov
bound
xor
lret
imul
push
xchg
loope
jo
es
inc
sbb
imul
add
add
mov
add
and
adc
add
out
or
lea
incb
outsb
xor
pop
je
outsl
push
add
push
pop
mov
or
enter
add
je
test
jbe
or
nop
test
or
pusha
cs
je
lods
adc
sub
ss
push
push
jb
dec
test
push
js
pop
aam
inc
sbb
pop
jle
nop
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
