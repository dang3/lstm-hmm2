mov
incl
and
push
push
call
push
push
add
shlb
add
sti
fisttps
add
push
and
lea
push
push
push
push
or
outsb
or
add
push
or
lea
fldt
adc
prefetcht1
movups
push
fistpl
sub
xor
mov
sub
aas
pusha
fistps
or
fcomps
rolb
add
push
push
push
mov
push
and
popa
incl
inc
and
add
pop
cmp
jg
cmp
pushl
pop
pop
pop
jg
pop
jle
mov
outsb
pop
outsb
sub
cmp
or
aad
dec
enter
push
das
sub
ror
sti
and
gs
mov
jp
add
push
cmp
and
dec
or
xchg
mov
inc
into
and
pop
inc
push
mov
testb
call
iret
gs
in
mov
call
adc
mov
mov
call
pop
fs
mov
jo
pop
imul
or
mov
or
int3
push
pop
pop
xor
daa
inc
mov
xchg
and
sub
dec
jg
sbb
fsubr
fidivs
xor
push
ss
lea
mov
xor
sbb
stos
stos
push
lea
and
rcrl
sub
sbb
add
fimull
xor
pop
mov
sbb
mov
mov
lea
mov
ljmp
je
push
sbb
sub
cmp
push
pop
xor
xor
ja
pop
lea
and
jg
pop
in
and
test
and
mov
add
fistpll
add
cmp
jb
push
loope
mov
xor
pushf
popf
enter
cwtl
xchg
ret
fcmovb
cmp
sub
push
mov
mov
push
sub
mov
or
sub
xor
sub
mov
xchg
pop
xchg
sbb
mov
loope
mov
push
stos
mov
fldt
jne
pop
add
ja
mov
add
frstor
adc
adc
pop
outsb
sbb
out
shll
je
sbb
sbb
push
pop
cs
add
insb
mov
and
dec
jne
mov
mov
push
mov
leave
incl
movsl
repnz
not
sub
mov
cltd
imul
out
push
mov
dec
shr
rep
pop
mov
and
mov
out
and
movsb
mov
push
mov
shll
push
cmp
insb
pop
xlat
xor
test
stos
es
popf
xor
lods
cmp
push
or
scas
sbb
pop
and
sub
cmpsb
jmp
insl
pop
insl
jae
imul
and
fnstenv
jb
jae
mov
iret
inc
je
jne
pop
inc
leave
xchg
popf
jmp
mov
xor
in
add
pop
cmp
daa
mov
cmp
cmp
cmp
fxch
xchg
add
add
in
data16
push
add
push
std
push
xor
and
incl
add
mov
dec
add
lar
bound
add
fcmovnu
fiadds
or
in
in
pusha
cmpsb
xchg
iret
rcrl
les
sahf
lock
lds
add
mov
add
es
push
popf
pushf
or
jno
int
iret
jnp
adc
je
add
fnstenv
jae
lea
mov
dec
xlat
xor
popl
jbe
imul
pushf
xor
xchg
add
insb
outsl
in
add
push
and
cwtl
add
notb
add
lock
es
pop
je
jmp
pop
sub
imulb
lea
pop
dec
dec
pop
mov
pushl
cmp
xor
pop
out
dec
or
daa
add
push
insb
sbb
sub
enter
decl
sbb
loopne
pop
sub
lcall
mov
mov
stos
test
add
movl
adc
or
aas
jo
repnz
and
and
add
dec
add
scas
subl
cmp
ja
jmp
addl
mov
fxch
pop
dec
or
or
lods
sbb
sbb
sbb
and
push
dec
mov
incl
roll
addb
mov
add
or
nop
ljmp
jae
outsl
push
push
adc
cmp
ud2
adc
mov
adc
insl
or
outsb
push
dec
adc
dec
mov
xchg
jo
fmull
xchg
mov
dec
movsb
pop
je
scas
add
in
pop
jnp
movsl
adc
add
cmp
and
pusha
xor
or
sub
lds
inc
loop
or
lahf
sub
mov
out
dec
or
sub
mov
pop
jae
sub
mov
or
loope
aas
pop
mov
das
inc
xchg
sti
pop
push
cmp
pushf
lods
jle
decl
fisttpll
movsl
daa
or
push
xor
insl
pop
das
pop
lret
por
jge
cmp
add
mov
arpl
or
cmp
jmp
je
xor
cld
cmp
jb
mov
test
je
call
jg
lock
sub
jmp
xor
adc
pop
pop
pushl
loope
in
push
mov
push
mov
push
aaa
outsb
call
or
es
test
mov
add
jne
fs
iret
jge
mov
cmp
mov
invd
cld
xor
aaa
cmp
push
sub
testb
es
mov
in
add
and
adc
jbe
push
dec
pop
pop
pushf
int3
ljmp
adc
add
std
xchg
jb
gs
xor
cmovl
fs
imul
push
jg
gs
bound
push
jb
jbe
insb
gs
imul
outsb
mov
arpl
jae
inc
gs
outsl
fs
inc
popa
jae
dec
cmp
imul
popa
insl
cmp
jne
and
jae
cmp
jo
popa
jo
cs
insb
lcall
sub
and
push
inc
add
mov
sub
insb
sbb
dec
ror
incl
insb
jae
jb
outsb
inc
dec
jo
iret
fbld
jg
inc
jb
add
insb
outsl
jae
lcall
gs
popa
outsb
sub
imul
insb
adc
inc
js
push
mov
gs
add
shlb
insl
inc
pop
arpl
fidivrs
popa
adc
fs
or
aam
adc
outsl
pop
mov
popa
inc
aaa
pop
inc
adc
mov
and
fs
inc
push
das
dec
mov
xor
imul
jns
fsubr
imul
push
xchg
gs
imul
jae
mov
outsl
imul
pop
jne
mov
in
mov
push
fdivl
subl
je
sbb
mov
cmp
jb
inc
ds
dec
mov
xchg
outsb
in
and
out
jo
popa
sub
popa
push
pop
fs
data16
jo
ja
insl
jo
data16
pushl
pop
inc
pop
pop
sbb
pop
and
push
or
adc
outsl
incl
or
outsl
inc
push
xor
lock
add
dec
push
add
push
pop
sub
pop
sti
testb
pop
or
or
push
or
pop
sbb
rcll
leave
add
or
js
insb
jmp
add
and
add
or
push
adc
sbb
dec
sub
and
mov
fwait
add
jnp
mov
xor
pop
push
lock
addr16
mov
push
aaa
inc
sbb
mov
pushf
out
xor
aaa
push
sub
pop
jne
je
nop
or
ja
inc
pusha
jb,pn
adc
cmp
and
adc
mov
mov
xor
adc
adcl
jb
jmp
test
shlb
push
out
sbb
fstps
dec
repnz
sbb
outsb
mov
and
xchg
push
loop
add
loopne
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
