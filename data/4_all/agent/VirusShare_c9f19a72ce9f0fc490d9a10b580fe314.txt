mov
add
in
mov
mov
mov
rep
leave
ret
into
clc
call
imul
loopne
and
or
out
call
out
and
repnz
mul
in
call
in
jmp
in
out
jecxz
ljmp
aas
idiv
repnz
xor
push
push
add
jne
add
std
jg
pushl
call
pop
movl
lods
add
mov
punpckhbw
push
mul
divb
mov
int3
notb
mov
inc
xor
hlt
add
or
inc
outsl
outsb
je
outsl
insb
mov
jg
mov
ss
ret
dec
gs
insb
outsl
and
jae
lods
mov
pop
insb
imul
ja
add
callw
cld
push
mov
pop
lea
and
push
mov
cld
out
in
sarl
push
or
pop
inc
mov
mulb
add
push
add
mov
mov
mov
cld
sub
out
mov
in
sahf
or
and
jg
add
fistpll
cld
cmp
inc
add
cwtl
pusha
out
xor
push
fst
jp
aaa
mov
das
push
add
lock
and
adc
jle
fcoms
popl
movl
cs
adc
fadds
incl
cld
push
mov
mov
fidivs
mov
xchg
pop
jnp
std
scas
fnstcw
push
push
adcb
test
shlb
pop
mov
das
mov
fstpt
rorl
pop
nop
push
or
ud0
hlt
out
cmp
je
cmpl
fdivr
lock
cmp
add
add
sahf
sbb
fistl
sbb
mov
push
mov
add
ljmp
clc
hlt
add
xor
mov
jle
sub
adc
rcrb
mov
dec
cmp
add
cld
mov
jmp
enter
sti
in
add
adc
adc
neg
jae
or
fstpl
xchg
xor
jle
mov
sbb
or
hlt
popa
decl
sbb
arpl
out
jne
push
push
mov
and
jno
push
add
and
add
pop
mov
xlat
add
adc
jno
mov
leave
ret
adc
add
aam
fsts
in
lock
dec
inc
aam
ret
mov
mov
dec
lcall
add
xchg
mov
adc
hlt
scas
das
ret
xchg
xor
int3
xchg
or
das
in
in
cltd
int3
or
and
push
nop
or
adc
cmp
ss
mov
xor
add
add
rolb
cltd
inc
pop
add
adc
xchg
add
movsb
or
cmp
mov
inc
add
insl
outsb
add
xchg
adc
add
aam
in
fmull
jle
and
mov
push
and
or
push
dec
scas
lea
push
inc
cmp
mov
or
mov
and
sti
pusha
add
nop
leave
ret
add
mov
pop
mov
cmp
mov
mov
push
insb
push
lahf
clc
aas
add
jbe
dec
pop
mov
adc
sbb
insl
pop
data16
sbb
mov
nop
ret
xchg
ror
xchg
rclb
das
loopne
adc
mov
pop
rcll
or
mov
sbb
dec
int3
pop
punpckhdq
test
add
in
jl
pop
cmpsl
mov
add
cmpb
jg
punpckhbw
adc
not
inc
add
push
pop
test
sbb
dec
xchg
or
xor
or
jnp
mov
jge
jne
or
je
icebp
nop
das
sbb
add
jns
dec
mov
je
add
je
sub
jne
cs
xchg
push
pop
jl
and
sbb
add
cmp
pop
add
xor
fiaddl
add
or
cwtl
push
bndstx
push
adc
ret
mov
push
fists
xor
mov
enter
bound
jne
push
in
push
jb
jb
inc
mov
pop
add
push
sbb
or
fildl
enter
add
adc
or
push
loope
pusha
mov
add
fmuls
push
arpl
aam
dec
std
or
loopne
in
in
push
in
loopne
ja
popl
shl
out
in
inc
loopne
psubb
in
or
xchg
in
imul
ss
dec
loopne
or
inc
mov
cmp
xchg
add
or
dec
jge
stc
andl
and
or
roll
insb
and
add
inc
inc
mov
in
and
and
loopne
call
mov
add
dec
or
or
leave
stos
sbb
push
aas
ss
ret
es
sub
fdivr
into
loope
in
repnz
mov
repnz
idiv
push
push
push
in
ljmp
ljmp
repnz
cld
loopne
and
nop
xor
or
sbb
adc
sub
mov
mov
add
adc
and
fimull
push
sbb
mov
or
adc
and
add
loope
sbb
fs
pop
repnz
cmp
rsqrtps
pop
add
in
add
and
imul
fst
sbb
adc
out
out
push
xchg
icebp
mov
inc
and
sub
out
loop
or
or
xchg
adc
sbb
hlt
add
imul
lea
outsb
sbb
push
outsb
aam
call
jmp
cld
clc
cli
dec
dec
and
jp
adc
and
cwtl
test
xchg
aas
shr
repz
cmp
add
loopne
xchg
jnp
sar
out
decl
adc
in
jae
adc
xchg
int
in
and
mov
and
clc
or
loopne
jmp
testl
cmp
pop
inc
ret
bound
and
pop
xchg
inc
cmp
or
xor
in
xchg
adc
hlt
fdiv
and
add
mov
push
mov
cld
jne
mov
adc
inc
inc
out
add
leave
mov
adc
jmp
add
xor
pop
jmp
jmp
push
bound
movb
mov
adc
inc
fldlg2
jnp
or
sub
adc
inc
sahf
dec
mov
loopne
lods
push
inc
or
mov
or
or
pop
push
or
mov
push
cmp
mov
daa
mov
lahf
test
add
pop
xchg
and
add
pusha
push
mov
nop
jo
push
addb
and
push
imul
add
pop
adc
mov
or
mov
and
sbb
inc
int3
insb
xor
push
or
adc
or
xor
inc
push
and
or
leave
incb
add
out
fsubrl
cmp
into
cmp
xor
dec
cmp
sub
pop
movsb
pop
notb
jb
add
push
adc
fnstcw
fwait
mov
push
sub
sbb
mov
adc
repz
push
add
cwtl
add
pop
add
dec
mov
mov
decb
pop
out
dec
test
sbb
pop
xor
dec
push
adc
mov
inc
add
dec
cmpb
jne
sub
fdivrs
xor
jmp
pop
sub
es
decl
mov
test
mov
jno
or
fs
or
sub
inc
mov
call
mov
test
pop
mov
fs
cmp
add
sub
cltd
xor
xchg
movsb
std
mov
lea
lock
fimuls
pushl
cmpl
test
jo
mov
adc
call
adc
mov
cmp
rclb
insb
mov
jb
push
cmp
mov
rorb
mov
je
cmp
jne,pn
or
ss
popa
lods
cmp
adcl
pop
adc
xchg
test
pop
enter
rol
fsubp
and
jb
stc
push
push
lea
loopne
in
and
test
pop
jbe
flds
enter
mov
jl
popf
or
ret
push
add
mov
daa
mov
sbb
std
pusha
jo
and
sbbb
out
cmc
call
pop
mov
cmpl
test
mov
inc
scas
aam
push
sbb
or
cmp
mov
pop
pop
xchg
xchg
add
cmp
add
shll
cmp
mov
add
add
jnp
xlat
sub
jmp
inc
add
call
cvtpi2ps
in
pop
fsubrl
aaa
push
test
jmp
mov
ret
ret
inc
add
dec
xchg
mov
orb
cmp
scas
cmp
pop
sub
or
cs
push
inc
add
fcomi
test
xor
insl
or
in
imul
xor
push
in
bswap
inc
xor
xor
inc
or
jne
mov
mov
ss
mov
sub
cmp
faddl
push
and
add
loopne
repz
push
in
or
loope
loopne
jnp
or
filds
xchg
sbbl
cmpsb
sub
xorb
into
roll
test
cmpb
adc
in
in
out
and
pop
ljmp
sbb
sbb
mov
ret
sbb
add
cmp
insb
lahf
mov
add
jmp
adc
shrb
rorb
mov
adc
inc
punpcklwd
mov
roll
cs
xchg
add
push
sub
and
pop
mov
mov
add
pop
mov
mov
inc
out
and
sub
inc
ret
add
add
or
or
xor
mov
jae
mov
and
jmp
cs
arpl
jne
pop
push
cmp
fisttpll
sbb
insl
jo
repz
insb
add
and
pop
insl
jo
add
test
insb
outsl
addr16
je
push
imul
enter
jb
arpl
mov
pop
jmp
and
insl
testb
or
inc
jbe
dec
mov
movsl
sub
inc
pop
fadds
add
dec
xor
or
xchg
push
enter
or
xchg
or
pop
add
je
adc
add
je
xchg
je
add
or
or
fs
jp
or
inc
push
or
loope
xor
subps
push
push
or
loope
mov
test
fsts
shrb
mov
jmp
mov
aad
cmp
std
or
jbe
call
push
pop
jmp
cmp
jne
inc
cmp
jmp
xor
nop
call
pop
cmp
iret
or
jns
mov
adc
mov
fs
push
loope
fwait
add
cmp
mov
cmpsb
sbb
pop
cmp
mov
arpl
mov
cmp
out
lock
jbe
mov
sbb
or
fimull
add
xchg
inc
and
push
jmp
mov
adc
call
inc
adc
mov
jne
mov
push
pop
mov
jge
push
in
pop
hlt
jne
mov
lods
sahf
mov
sbb
shrl
adc
pop
cmpl
enter
lds
xchg
popa
pushf
shl
jno
addr16
sbb
add
mov
dec
test
stc
add
lock
arpl
imul
add
imul
clc
xlat
andl
dec
inc
in
adc
sub
xor
sub
ret
jbe
fidivrs
or
or
mov
arpl
ret
es
or
sbb
add
nop
pop
pushf
fmuls
ret
aam
pop
mov
push
add
cwtl
or
jnp
sbb
dec
mov
push
xor
js
xchg
xchg
cltd
inc
xchg
add
sub
add
test
push
test
add
add
or
add
or
icebp
inc
ret
push
jmp
push
or
cld
cld
inc
xor
mov
mov
push
cld
jb
inc
inc
notb
testb
jne
pop
push
pop
pushf
jno
divl
shlb
mov
movsb
cli
xor
clc
popf
sbbb
fidivrs
push
adc
add
xor
adc
test
sbb
inc
dec
add
sub
jmp
xchg
and
movsb
fdivs
add
lea
mov
inc
and
mov
insl
push
sub
out
jae
dec
cli
ja
data16
dec
ret
inc
das
mov
pop
dec
add
or
add
fstps
fs
mov
negb
sub
push
and
std
outsl
or
jb
cmp
ja
sub
adc
dec
rorl
aaa
add
pop
sti
xor
aaa
mov
filds
cld
sbb
sarb
mov
cvtdq2ps
ret
popf
movb
xchg
inc
mov
sbb
jne
inc
jmp
jmp
out
adc
pushl
ret
decl
add
sub
data16
mov
dec
sub
pop
pop
sbb
and
les
add
lahf
mov
sub
add
inc
push
mov
ud1
mov
movsb
push
outsl
pop
xchg
fsubrs
add
adc
sub
push
and
and
add
in
insb
mov
xchg
ret
in
loope
and
xchg
sbb
xor
mov
mov
push
adc
cwtl
movsb
rcrl
and
enter
inc
pop
hlt
pusha
or
push
fwait
mov
push
mov
es
out
or
add
adc
insb
push
fadds
stos
sahf
adc
in
dec
clc
std
sbb
inc
mov
cld
or
pop
add
gs
cmp
test
inc
mov
and
gs
push
xchg
mov
std
pop
push
mov
daa
imul
or
push
push
add
pop
enter
pop
xchg
pop
jle
mov
jmp
jmp
mov
bswap
hlt
inc
xor
xchg
ljmp
push
out
out
jmp
fsubr
test
out
and
loopne
neg
or
sbb
xchg
cltd
mov
and
cmp
cmp
add
add
push
repnz
add
push
xchg
adc
cmpl
inc
mov
and
sub
dec
push
int3
push
popl
fstpt
inc
outsl
ja
dec
outsl
popa
fs
jo
pusha
fbld
inc
imul
sbb
loope
mov
add
inc
and
add
and
sbb
jge
aam
out
jmp
add
xchg
add
leave
cs
xchg
cmp
inc
push
xor
xor
cmp
call
mov
dec
pop
fsubrs
adc
adc
jmp
lea
unpckhps
cmpsl
or
sbb
add
and
sub
sbb
or
in
mov
mov
mov
add
hlt
cs
movl
add
add
call
fcompl
loopne
in
popf
mov
or
and
pop
shrb
call
add
movhps
std
pop
sarl
jle
pop
and
push
jae
sbb
push
push
imulb
push
pop
fstpt
adc
jne
and
or
sub
roll
les
and
xchg
out
fmuls
sub
cmp
jne
add
scas
and
and
add
and
mov
add
lods
in
in
rorb
adc
mov
cmp
add
adcl
stc
cmp
andb
and
pushf
fiadds
sub
fwait
int
and
jb
mov
inc
add
xchg
lock
fwait
xor
dec
adc
sbb
xchg
js
movsl
adc
cmpsb
jnp
mov
movsl
xchg
push
sbb
imul
test
repz
and
pop
and
xor
and
loopne
mov
inc
sub
mov
adc
pop
aas
sbb
jmp
add
cld
jg
pop
pop
push
lds
cmp
pusha
cmp
inc
or
jl
in
push
fs
je
add
adc
push
jnp
push
xor
adc
mov
jb
sub
int3
sbb
fptan
inc
call
add
sub
inc
fsin
pop
mov
and
out
push
push
sahf
xchg
int
sbb
sbb
inc
push
inc
pop
sti
xor
push
sbb
dec
lcall
cmp
jne
push
dec
dec
rolb
xor
and
sbb
add
sub
aad
inc
andb
loopne
cmp
mov
fsubl
lds
je
mov
add
sub
adc
push
mov
push
mov
pushf
mov
push
pop
fdivp
mov
outsb
sbb
mov
pop
decl
add
jmp
pop
shr
push
je
rolb
add
movsb
adc
pushfw
leave
pushf
xor
out
movsb
bswap
shrb
jne
mov
pushf
mov
jnp
lds
cmpsl
add
shll
aad
mov
push
jno
int3
ja
imul
fldenv
jge
int3
paddw
movsb
add
xchg
popa
jmp
nop
out
jge
ds
add
and
or
popa
add
lods
imul
movsb
jmp
ljmp
push
xor
xor
mov
shr
mov
movsl
ficomps
cli
add
cmp
sub
lahf
mov
sub
loopne
or
pop
pop
ret
add
or
mov
push
in
sub
or
jg
out
sbb
mov
pop
or
adc
leave
adc
inc
sbb
jb
int
push
sub
jno
adc
adc
pop
mov
jle
add
repnz
les
test
int3
inc
dec
repz
stos
adc
imul
push
std
or
xlat
jl
ljmpw
adc
std
xor
je
andl
pop
mov
dec
sbbl
movsb
std
mov
test
stc
js
pop
jbe
fstps
or
mov
shlb
dec
fldcw
and
ss
and
add
xor
push
lods
nop
outsb
and
testb
clc
push
push
xor
push
aam
inc
push
sub
or
add
or
or
xchg
mov
add
je
or
mov
xor
mov
data16
sub
sbb
roll
clc
popf
and
and
in
cmpsb
xchg
push
repz
jmp
ret
fs
movups
movsl
ret
sbb
mov
les
lea
lods
les
lock
arpl
cld
pop
lret
repnz
jmp
and
mov
pop
mov
sti
adc
leave
mov
lods
enter
push
cld
shlb
push
testb
in
pushf
or
adc
jae
mov
pop
addr16
lods
outsb
add
lock
paddsb
mov
aas
hlt
or
dec
push
ds
sbb
adc
sub
and
and
mov
sub
or
add
call
dec
xor
jle
ds
mov
jns
cmpl
cs
and
adc
pop
pop
fwait
int
adc
push
adc
in
add
add
daa
mov
inc
pop
sbb
add
or
out
daa
and
push
pusha
adc
test
mul
add
sti
div
and
add
or
dec
rcl
adc
or
inc
mov
movsb
pop
cld
and
xchg
or
pop
add
je
cmp
sub
cmpsl
dec
xchg
dec
add
mov
outsb
jp
jbe
mov
sbb
add
push
xchg
mov
push
mulb
xor
mov
outsl
pop
fs
add
adc
jle
ss
mov
sbb
dec
loop
push
xchg
mov
or
cmc
popf
nop
enter
xchg
repz
or
pop
add
and
pop
sbb
adc
loopne
mov
push
and
adc
pop
call
sub
xor
add
fs
mov
push
mov
nop
fwait
sub
push
jno
mov
test
mov
add
outsb
jne
dec
add
inc
ror
pcmpeqw
hlt
and
and
mov
push
mov
pop
ss
jecxz
xor
mov
adc
in
rorl
lods
cld
push
lahf
push
cmp
jnp
dec
lret
test
sti
xlat
xorb
inc
lods
mov
out
out
adc
mov
add
sbb
push
push
and
enter
add
jb
add
inc
pop
enter
add
pop
inc
push
nop
mov
add
and
or
push
inc
mov
jle
push
enter
and
outsb
push
xor
lods
jecxz
dec
pop
loop
inc
loopne
inc
loop
arpl
ljmp
xor
and
std
ljmp
shrb
xor
out
or
jmp
cs
xlat
sbbb
aas
dec
in
xchg
lods
aaa
or
mov
jmp
clc
adc
add
add
add
inc
mov
sbb
xchg
mov
hlt
sub
xor
sub
sub
add
or
and
cmp
push
adc
or
sbb
out
enter
mov
mov
mov
sub
cmc
inc
mov
insb
or
lock
icebp
pop
cmp
dec
cmpsb
adc
daa
cmpl
insb
aam
add
mov
push
ja
mov
add
and
shll
out
bnd
cmp
loopne
out
jecxz
or
in
loop
cltd
loope
fcmovne
dec
in
sub
call
sbb
in
and
in
pop
icebp
inc
out
fisubl
jnp
mov
or
loope
call
inc
or
repnz
lock
push
pop
fwait
add
repnz
sbb
sbb
add
pushl
and
adc
xchg
adc
jbe
sub
enter
xor
cwtl
adc
in
je
pop
jl
push
sub
inc
mov
xor
cmp
push
add
mov
mov
pusha
pushf
or
mov
mov
jmp
insb
outsl
arpl
push
push
shlb
mov
and
jnp
xchg
pop
insb
dec
sub
mov
push
mov
or
clc
pusha
sbb
sbb
sub
mov
in
adc
mov
insb
sbb
into
mov
pop
sbb
xor
dec
testl
or
fst
xchg
sbb
sub
shlw
nop
add
nop
xchg
fst
inc
or
adc
cmp
shrl
adc
nop
fistps
nop
popa
xchg
outsb
push
mov
inc
push
jb
adc
add
lea
popf
xchg
arpl
nop
xchg
pop
outsl
xchg
cs
nop
xchg
add
fs
fcomip
inc
pop
inc
inc
push
nop
mov
cmp
adc
fcmovnu
sbb
sysret
mov
cltd
adc
outsb
pop
cmpsl
push
daa
int
shrb
test
dec
lcall
ds
insl
fnstcw
imul
cltd
lahf
out
stos
add
cmp
ret
jne
inc
sidtl
jne
xorl
and
lcall
jbe
pop
and
test
pop
push
mov
pop
sub
testb
iret
sub
and
and
pop
cmp
push
stc
adc
push
in
std
sub
add
cs
or
cmp
nop
push
jmp
out
testl
inc
and
es
ja
mov
dec
sahf
xchg
js
add
dec
in
insb
pop
popa
hlt
pop
jb
push
push
cli
dec
jl
bound
shl
fstps
dec
add
sub
add
pushl
or
pusha
das
add
aaa
sbb
mov
or
add
pop
clc
leave
bound
loopne
push
push
mov
mov
pop
ljmp
mov
mov
pop
xor
dec
adc
out
push
das
add
pop
shl
mov
mov
and
add
sub
cltd
idivl
dec
pop
mull
insl
outsb
cmp
add
and
stos
xchg
int
adc
loop
jl
adc
push
in
push
enter
mov
inc
xchg
jbe
imul
push
call
cmp
mov
jnp
and
jge
xlat
or
sub
pop
test
xchg
decl
jne
pop
pop
pop
shll
pop
add
call
push
call
out
into
decl
add
or
lods
stos
mov
cmp
fsubs
add
jbe
or
sub
insb
mov
dec
xor
inc
inc
push
inc
or
jae,pt
or
push
xchg
or
inc
and
add
shl
ds
aas
jnp
push
jge
popl
push
push
push
xor
outsl
and
decl
incl
in
std
dec
adc
add
inc
mov
dec
dec
sbb
push
outsl
add
push
push
jmp
mov
push
in
adc
data16
ficompl
jae
pop
inc
mov
dec
sbb
xor
inc
or
jg
mov
push
push
sbb
imul
cs
jg
and
sub
popa
sbb
cmp
dec
sbb
pop
rdmsr
sub
add
pop
cli
cmp
pop
shl
mov
add
jl
inc
pop
xor
add
and
and
xchg
cltd
add
push
lea
xchg
lock
sub
in
sbb
ljmp
xchg
cmp
mov
dec
push
push
imul
into
sti
mov
inc
push
adc
sub
jmp
sbb
mov
add
add
into
push
dec
repnz
push
xor
adc
inc
sbb
fs
or
sub
lods
push
mov
inc
ss
cmp
fnstcw
jno
sbb
jmp
iret
aam
or
sbb
cmc
and
mulb
or
int3
stos
addr16
call
push
sub
hlt
inc
mov
mov
pushf
sbb
jne
repnz
jge
into
pop
sub
mov
cmpsb
sti
mov
pop
or
cwtl
adc
adc
cmp
or
cmp
push
mov
cmp
cmp
stos
test
push
jg
clc
loopne
ja
adc
into
loope
out
loop
or
imul
in
jnp
in
pop
sub
and
out
in
stos
or
sbb
cli
nop
lods
push
repnz
rcll
jae
add
mov
mov
mov
and
mov
or
and
lock
out
repz
insb
aas
jmp
and
pop
test
in
sub
loope
sbb
inc
inc
fs
pop
ret
call
cmp
xchg
xchg
push
adc
or
adc
xor
sub
push
mov
fdivrs
rcrl
jns
mov
nop
loopne
inc
push
enter
fmul
mov
sbb
sub
mov
or
jae
dec
jne
rol
out
push
test
cmp
std
jge
lock
add
jne
push
subl
cmp
sub
inc
lock
xchg
pop
add
adc
out
push
xchg
pop
push
femms
sbb
mov
dec
daa
adc
xor
pop
push
adc
or
mov
cmpsb
cmp
jmp
sbb
pusha
add
rclb
es
mulb
andps
cltd
xor
or
sub
sbb
or
insl
mov
cli
je
pop
jo
inc
sbb
push
inc
cmp
lods
test
outsl
je
jb
mov
sub
dec
data16
fisttpl
fsin
push
inc
outsl
jb
and
movsb
sti
jbe
dec
outsl
fs
push
pop
add
scas
xorb
add
or
pop
ret
call
sbb
rorl
pusha
and
pop
jmp
iret
out
in
push
in
les
cmp
push
xchg
fisubl
test
imul
fistpl
add
icebp
and
inc
xchg
cmp
push
test
cwtl
adc
cs
popf
add
or
dec
sub
sti
inc
pop
push
adc
cmp
bound
xor
cmp
mov
mov
sub
mov
add
jl
add
jns
or
dec
mov
xchg
cmp
mov
dec
jmp
adc
or
jbe
pop
in
cli
icebp
ljmp
insb
cli
jle
push
xchg
in
mov
pusha
adc
xchg
out
jmp
out
cmp
sbb
dec
xor
cmp
sbb
or
je
add
je
mov
pushf
lods
cli
xor
insl
add
jp
lea
std
push
dec
sahf
inc
sub
pusha
incl
mov
mov
sti
cmp
jbe
data16
out
adc
jbe
or
add
push
jae
out
inc
jbe
push
push
popa
add
sbb
xchg
cmp
pop
sbb
cmp
xchg
jbe
xchg
jmp
cli
mov
cmp
cld
fsubl
mov
push
ror
shlw
push
testl
sbb
adc
daa
ficomps
add
add
filds
dec
mul
icebp
icebp
sti
add
cmc
movups
dec
push
add
inc
xchg
insl
popa
mov
sbb
or
push
loope
sbb
lret
in
jo
pop
xchg
dec
test
push
mov
loopne
clc
xchg
and
mov
daa
fldenv
ljmp
and
dec
mov
adc
nop
subb
adc
xor
inc
movsl
xor
call
xchg
cmp
fs
and
stc
push
mov
lods
lock
sahf
or
mov
lcall
or
outsb
inc
movsb
in
push
enter
punpcklbw
mov
mov
in
dec
jb
cmp
add
add
cltd
add
jle
mov
and
pop
leave
xchg
or
and
xlat
sbb
cli
push
push
ret
pop
fsubrs
push
jno
inc
pop
adc
add
push
push
cs
mov
test
roll
fs
sbb
mov
push
jbe
nop
add
adc
xchg
jo
push
lods
imul
testl
adcb
xchg
xor
in
pop
movsl
dec
push
lds
xchg
dec
dec
outsb
mov
and
add
jb
jb
adc
or
stos
jae
jb
add
lds
gs
add
ret
sub
mov
jecxz
adc
stos
mov
mov
dec
push
imul
pop
mov
cmp
and
push
std
add
sti
scas
adc
jge
add
mov
cmp
ret
xchg
pop
add
or
xchg
inc
push
sub
sbbl
jmp
mov
jb
and
push
and
sbb
adc
add
aad
pop
cmp
xor
idivl
sbb
adc
inc
push
sahf
cmp
sbb
das
and
mov
icebp
imul
sub
adc
jmp
mov
cli
xor
stos
jl
adc
push
call
sub
hlt
and
lock
mov
jbe
cmp
jae
andl
enter
ljmp
push
adc
pop
testl
sub
inc
sbb
push
push
inc
sbb
push
sbb
call
push
mov
pop
pusha
icebp
inc
pop
out
jne
inc
xchg
mov
jne
xor
inc
hlt
mov
data16
sahf
add
adc
dec
repz
lea
add
mov
adc
sub
adc
pop
push
mov
or
rolb
test
stos
pop
dec
mov
jbe
fwait
sub
mull
hlt
inc
ss
xor
bnd
adc
dec
push
addr16
dec
lcall
jnp
mov
in
in
loopne
sub
addb
cltd
or
repnz
imul
stos
sub
pushf
pop
icebp
xchg
filds
clc
pushf
lret
into
leave
push
ljmp
mov
mov
mov
jnp
test
inc
add
jb
mov
outsl
ret
adc
nop
xchg
aam
adc
out
out
pop
fdivs
popa
mov
and
into
add
ret
lea
negb
fimull
in
sub
nop
addr16
mov
sbb
aad
push
inc
sahf
in
inc
sti
sub
adc
jb
loop
jmp
test
js
in
icebp
ljmp
or
or
std
inc
mov
mov
push
loop
inc
jns,pn
in
lock
rolb
and
jb
push
adc
dec
inc
push
popa
jne
mov
adc
lods
cmp
rcll
sub
jge
mov
inc
rcr
xchg
cmp
sbb
push
jb
push
mov
or
xchg
dec
addl
int
xor
push
mov
lods
mov
or
popa
mov
adcl
jle
push
mov
add
add
push
xchg
inc
sahf
ret
dec
xchg
push
pop
test
adc
inc
mov
rorl
jl
jle
out
sbb
sbb
loop
in
in
loopne
repz
add
cmpsl
int3
loopne
insl
fcomp
jg
aas
and
and
and
push
xor
fildl
add
jge
jle
lahf
aam
iret
bound
mov
pop
adc
pop
sub
popa
testb
push
mov
icebp
or
push
jle
jg
cmp
and
jne
jge
add
lock
and
jge
push
push
cmp
popa
push
imul
mov
push
test
inc
jo
orl
or
rcrb
sti
xchg
mov
adc
push
fsubs
dec
movsb
and
inc
scas
mov
push
and
mov
add
iret
xchg
jle
hlt
dec
pop
gs
xor
jbe
mov
mov
nop
jo
xor
or
mov
pusha
add
push
adc
inc
sbb
mov
pop
cmp
iret
popa
or
addr16
cltd
nop
pop
or
and
es
cwtl
enter
jbe
xor
jmp
cltd
sub
and
lcall
shll
and
cmp
xchg
or
int
xchg
add
adc
jnp
xor
sub
and
push
mov
fstps
mov
add
jg
adc
out
mov
stos
add
pop
and
int
xchg
jecxz
push
push
lret
add
sbb
add
add
ret
and
jae
add
mov
jb
stos
in
adc
dec
mov
icebp
or
sub
mov
sub
sbb
sub
ret
andl
mov
pop
cld
jecxz
dec
into
pop
or
inc
jmp
mov
xchg
xor
push
pushf
test
dec
adc
outsl
sbb
mov
cmp
inc
pop
mov
lods
in
xchg
push
xchg
add
pop
adc
nop
pop
outsl
xchg
cmc
out
or
push
mov
dec
loop
inc
push
jb
add
add
nop
shlb
cwtl
popf
bound
jae
push
cmp
imulb
adc
add
dec
and
add
add
sub
cmp
outsl
addr16
popa
fcomps
dec
xor
mov
js
shll
cmp
jae
xor
in
lds
aad
mov
cmc
jmp
fistl
outsb
nop
fisttps
rcrl
fisubrs
dec
xchg
out
dec
sahf
add
add
mov
jle
add
xor
mov
orl
push
cmp
sbb
or
pop
sub
and
mov
clc
nop
and
fldenv
stc
add
mov
int3
add
add
push
imul
cmpsb
cmp
ja
push
outsl
insl
popa
outsb
push
aaa
push
push
rcrb
push
in
call
mov
and
outsb
popa
or
insb
gs
jae
rolb
add
clc
mov
dec
xor
shl
out
push
loop
add
jp
xor
sub
enter
cld
xchg
push
in
sti
clc
cld
dec
mul
outsb
adc
lock
bswap
inc
ret
mov
add
xchg
lret
aam
loop
push
sub
sbb
mov
ljmp
imul
loopne
out
out
loop
fmul
inc
pop
inc
in
push
out
ljmp
pusha
ret
xchg
call
aaa
enter
adc
in
mov
imul
pop
je
cmp
psrld
or
add
popf
add
fwait
xchg
jnp
or
adc
add
insb
jecxz
adc
add
jae
ret
pop
or
adc
das
aam
mov
mov
cmp
pop
jp
and
or
adc
xchg
je
test
inc
lds
movsb
aad
xor
push
ss
push
push
xchg
pop
push
push
jle
sti
add
mov
xor
jmp
adc
adc
ficoms
and
push
xor
ret
xchg
push
push
or
mov
call
cwtl
xchg
adc
leave
int
outsb
outsb
mov
cli
and
adc
and
add
push
add
sbbb
push
add
xor
push
cs
adc
inc
daa
aaa
addr16
jmp
sbb
sub
int
and
pop
sbb
pushf
fcompl
bound
decl
xchg
sbb
or
push
push
xchg
mov
mov
sti
adc
cmpsl
loope
mov
xchg
icebp
xor
xchg
jmp
subl
adc
nop
icebp
cmp
jo
or
add
xchg
popf
cmp
ret
jp
xor
sbb
fneni(8087
jg
insb
je
cmp
xor
add
jp,pn
jne,pn
push
inc
mov
mov
jle
add
xchg
mov
cmp
sbb
fnstenv
das
das
ja
cs
ret
into
pop
idivl
addb
pusha
inc
xchg
das
sub
mov
jns
jecxz
lahf
add
adc
or
popl
pop
add
and
sub
sub
sub
cmpl
xchg
add
inc
push
and
adc
add
or
pop
fiadds
xor
mov
inc
xchg
lret
dec
int3
jae
mov
and
xchg
insb
add
push
lahf
mov
pop
cmp
out
inc
dec
ss
test
sbb
call
js
add
test
mov
clc
or
leave
xor
fdivr
fs
lods
out
popf
popa
enter
adc
mov
outsb
outsw
sbb
test
fisttps
stos
add
loope
cmp
lods
xor
add
inc
mov
fs
push
shrl
je
dec
je
mov
push
lea
push
mov
mov
out
call
xor
je
dec
add
pushf
in
inc
rolb
or
mov
shrb
cs
lods
popf
lea
nop
sbb
jb
push
mov
or
jae
inc
call
add
mov
in
or
test
adc
mov
xorb
and
inc
gs
jno
push
jle
loope
xchg
mov
movsl
mov
leave
gs
adc
je
popa
add
jno
adc
or
mov
insl
aas
xor
adc
push
inc
in
mov
syscall
sbb
cmp
adc
dec
pop
push
add
sub
dec
jle
inc
lret
popa
sub
sbb
nop
pop
or
pop
and
add
test
lds
test
adc
inc
pop
jmp
sahf
add
adc
in
inc
adc
stos
xor
loopne
popa
or
or
addb
jb
adc
daa
fstps
inc
fists
cmp
leave
and
sub
xchg
sahf
mov
rolb
clc
pop
stos
inc
lock
xor
xorb
pop
push
adc
inc
dec
mov
push
inc
push
pop
push
dec
dec
push
cmp
inc
fnstenv
push
push
inc
dec
push
pop
push
sub
daa
stos
movsl
incb
in
push
dec
dec
inc
inc
dec
pop
adc
inc
dec
dec
dec
inc
sub
inc
push
add
push
and
inc
xchg
dec
mov
nop
dec
mov
add
sbb
sbb
arpl
adc
outsb
xor
sub
push
inc
mov
adc
pop
inc
setp
orl
add
adc
xchg
sbb
pop
addl
enter
ss
nop
inc
push
cmpl
inc
insb
fidivrs
cmp
dec
push
or
pop
rcr
lock
and
fwait
inc
adc
inc
xchg
or
add
test
add
or
and
sahf
mov
or
or
xchg
sbb
rcrb
mov
add
or
rolb
cmpsl
inc
or
inc
xor
mov
outsb
and
call
pop
xchg
shll
jb
xchg
mov
nop
in
adc
push
imul
pop
pop
mov
cs
cs
divb
ss
lock
daa
orl
add
mov
add
jnp
in
sub
ret
jo
cmp
jno
mov
scas
je
ja
pop
inc
or
jno
daa
cmp
lods
mov
mov
or
mov
jmp
or
push
in
loopne
rorl
xor
jmp
mov
pop
sub
inc
mov
sub
fs
xor
pop
loopne
push
leave
inc
into
lea
pop
sbb
adc
or
and
adc
call
jne
push
inc
mov
sbb
push
adc
popa
dec
inc
ret
mov
add
mov
add
notb
test
adc
push
ss
adc
xchg
jbe
push
dec
mov
mov
sub
push
pop
test
fistpl
and
push
or
enter
dec
inc
add
icebp
adc
lcall
loop
sbb
movsb
outsl
pusha
xor
cld
andb
icebp
push
gs
pop
sbb
adc
dec
xor
sbb
fcmovb
pusha
orl
popf
int3
pushf
movsl
orb
ret
call
lock
mov
inc
add
cmp
adc
jne
mov
mov
mov
jmp
adc
jne
cmp
sbb
xchg
mov
decl
cmp
cli
pop
repnz
cwtl
dec
shll
add
mov
dec
sahf
stc
add
enter
and
and
cwtl
push
cwtl
pop
adc
push
js
cmp
aad
xchg
add
fwait
inc
add
sbb
arpl
add
ds
repnz
inc
je
aam
pop
inc
mov
sub
jge
sub
loop
dec
cs
inc
push
push
and
dec
shr
hlt
fdivs
lods
xor
push
movups
adc
and
push
mov
xchg
lcall
mov
sbb
sbb
xor
adc
push
test
or
aas
mov
es
in
add
xor
test
pusha
mov
and
ljmp
inc
mov
aaa
mov
mov
mov
add
clc
adc
jmp
ret
imul
in
xor
push
sarb
cmp
sub
cs
mov
adc
fwait
out
and
lods
ja
cld
leave
popa
adc
push
sub
xor
pop
sub
add
jo
adc
fwait
pop
inc
mov
mov
jle,pn
jle
in
fwait
nop
jle
push
mov
push
push
sbb
xor
jle
out
mov
push
call
das
sbbl
mov
push
jo
out
and
fcmovne
stos
and
in
stc
in
bound
add
xor
lea
ss
and
jae
ret
pop
sbb
inc
push
sbb
mov
push
jmp
xchg
lock
loop
in
outsb
push
out
add
test
out
pop
gs
test
or
pop
or
pop
arpl
jmp
in
std
sub
testb
or
aas
push
xchg
rcr
push
lea
xor
pop
cmc
rol
inc
xor
push
xchg
adc
push
or
in
mov
andb
add
test
pop
add
xor
sub
pop
movlps
push
pop
or
test
push
adc
loopne
mov
bound
xchg
orl
mov
cmp
pop
jl
test
lret
or
jecxz
adcb
aas
aam
mov
inc
xor
in
stos
aam
add
lods
jge
add
mov
aas
jns
lods
cmc
fisubl
or
cs
aam
pop
scas
or
push
lret
xchg
and
gs
inc
es
push
test
test
cmpsl
orl
mov
pop
popf
test
outsb
xor
data16
jae
mov
sub
sub
xor
test
sbb
clc
mov
xor
fs
mov
cmc
inc
or
mov
inc
js
add
loop
push
mov
sub
and
or
dec
jb
mov
pcmpgtb
mov
inc
das
inc
push
push
lret
cmpsl
mov
nop
lods
dec
setle
fs
inc
dec
and
push
push
cltd
sbb
leave
pusha
jae
sbb
cmpl
sbb
mov
aas
jne
jnp
aad
inc
lock
daa
sbb
cmp
adc
add
add
stos
js
push
lret
or
pop
inc
ror
test
je
movsb
xor
nop
stos
sub
or
xor
pop
jbe
dec
divb
push
sub
lcall
cwtl
inc
stos
and
push
fistpl
std
test
add
aam
adc
dec
and
stos
xchg
aas
xlat
inc
xchg
pop
push
psadbw
sub
icebp
push
arpl
mov
mov
lret
sbb
or
xor
sbb
loopne
sub
pop
sbb
jne
out
dec
push
outsb
pop
cmp
sbb
dec
jbe
jbe
outsl
jo
push
jne
and
loope
push
add
sub
pop
cmpl
or
push
push
jl
daa
es
pop
jne
push
call
cmp
pop
inc
arpl
push
popa
jb
insl
push
mov
fdivr
shrb
pusha
jne
or
or
and
sub
push
jo
mov
jo
mov
icebp
subb
push
prefetch
or
fbstp
outsl
leave
mov
in
mov
sbb
xchg
shlx
mov
inc
xor
fiadds
lea
push
push
or
iret
push
cwtl
icebp
and
sbb
mov
adc
fs
or
push
jmp
fs
popa
lock
add
push
mov
shr
ja
ds
les
out
insl
str
enter
or
inc
jbe
mov
std
jmp
or
jne
mov
pop
int
test
and
pop
jmp
sbb
arpl
ss
xor
push
push
iret
ljmp
fsincos
pop
cmp
fsubrl
adc
dec
jb
sub
adc
dec
clc
sbb
mov
testb
std
aad
cmp
cld
adc
or
pop
in
fwait
add
es
xor
rclb
xchg
popf
call
fstpt
adc
or
daa
or
jbe
push
lret
jmp
cmp
dec
adc
and
mov
int
xor
push
iret
dec
adc
mov
push
jbe
mov
mov
push
sub
dec
push
mov
xor
sbb
addb
test
add
adc
add
and
xchg
push
and
pusha
nop
xor
inc
or
add
and
sub
and
stc
adc
clc
and
mov
push
push
imul
pop
aam
fs
xchg
cli
lods
dec
std
push
rorl
inc
mov
and
and
add
scas
adc
push
add
xor
mov
push
leave
mov
cmp
jp
fcompl
das
aaa
mov
sub
lock
outsb
or
fcoml
cmpb
nop
in
pop
rolb
jmp
mov
adc
inc
sbb
cmp
xor
or
inc
push
mov
jmp
shll
sub
push
faddl
jecxz
cmc
inc
xchg
mov
jne
xor
cmc
sbb
inc
adc
add
mov
jp
sbb
mov
mov
push
jo
mov
fsubrs
mov
mov
mov
cmp
mov
push
mov
test
dec
push
jne
rorl
sub
mov
lock
add
and
out
lds
pop
ja
adc
add
ljmp
nop
adc
push
cmp
cltd
mov
lea
dec
and
daa
inc
mov
mov
test
xor
xor
dec
es
or
mov
inc
incl
add
inc
xor
jb
dec
xor
add
sbb
xchg
dec
or
fadds
addb
add
xor
or
sbb
and
sarb
jmp
cmc
rolb
fisubl
frstor
mov
or
pop
jb
daa
fidivs
bswap
pop
jb
daa
add
jb
daa
adc
jb
daa
in
imul
daa
hlt
cwtl
sub
fcoms
jb
daa
testl
test
mov
push
jo
mov
in
cmp
ret
sub
jecxz
mov
sbb
int
dec
cmc
mov
sbb
push
xchg
jae
jg
js
aam
cmp
mov
addb
scas
add
adc
lcall
shlb
les
movsb
dec
xor
lret
int3
rorb
rorl
shlb
add
scas
add
or
mov
mov
cmpsb
pop
pop
mov
or
addr16
negb
int
xor
addr16
dec
mov
push
pop
pop
lret
sbb
call
std
addb
loopne
in
call
adc
push
mov
shrb
inc
jne
lods
je
iret
add
lock
push
and
lock
push
jb,pt
mov
jae
idivb
inc
inc
pusha
lcall
jnp
sub
push
dec
or
mov
pop
pop
push
ss
cmc
mov
call
xchg
adc
and
or
aam
out
or
jno
and
push
or
iret
push
jp
push
inc
pop
push
cmpsb
mov
sbb
lret
popa
mov
mov
test
inc
mov
push
add
scas
cmp
inc
dec
rclb
dec
cs
shrb
test
sub
popf
pushf
in
xor
mov
sbb
and
mov
lock
adc
mov
int
or
or
rorb
aad
pop
push
fdivrl
or
icebp
pop
pop
and
cs
cmc
scas
test
sub
add
popa
pop
sub
test
or
jne
dec
lock
icebp
adc
loopne
int
xor
xor
inc
mov
ret
dec
xchg
jg
lods
scas
mov
cmpsl
mov
addl
cmp
fs
testl
inc
sbb
cmp
or
push
sbb
add
xchg
add
inc
sub
aam
sub
in
adcl
icebp
lods
in
adc
addr16
addr16
jmp
sbb
jle
jp
mov
sbb
rcl
add
repnz
mov
in
xchg
adc
mov
and
or
xchg
mov
xor
int3
adc
mov
ja
flds
xor
das
outsl
jne
adcb
test
mov
pop
fsts
rorl
adc
sbb
inc
adc
outsl
or
fxch
add
or
arpl
mov
sbb
adc
inc
lcall
pop
daa
daa
rorb
add
imul
or
hlt
ljmp
add
js
sti
jo
sbbb
test
add
push
mov
push
add
push
lock
pop
lock
gs
adc
mov
adc
pop
cmc
inc
mov
ficompl
negl
aaa
or
daa
mov
mov
adc
cli
pusha
xchg
or
mov
test
cs
mov
xlat
and
push
push
aas
pop
cs
mov
hlt
adc
cs
adc
inc
scas
rol
cmp
xor
in
addr16
hlt
daa
xlat
aam
out
pop
pop
sub
pop
pop
dec
mov
pusha
mov
lcall
out
cmpl
jmp
or
insb
popa
adc
stc
push
jl
or
dec
mov
lods
push
sub
dec
adc
add
sti
into
cmpsb
mov
adc
adc
outsb
mov
daa
lahf
pop
stos
add
xchg
cmp
dec
mov
daa
pop
mov
fs
insl
rclb
loopne
mov
sbb
adc
jmp
jmp
arpl
in
push
push
adc
xchg
sbb
jp
mov
add
ljmp
adc
subps
jp
inc
add
js
adc
xchg
pop
cmp
push
or
lret
push
and
lods
in
cmp
ss
mov
pop
add
add
test
mov
in
fisttpll
add
and
or
mov
mov
push
and
cmp
int
pop
mov
xchg
test
sub
inc
push
fs
sub
mov
xchg
lret
push
mov
or
cmp
mov
dec
fadds
ss
push
jns
push
xor
negl
or
xor
pushf
adc
ret
cmp
cmp
xor
and
dec
lret
loop
mov
sbb
insb
leave
push
cmp
adc
rorl
sub
shr
adc
jg
push
sub
push
push
repnz
mov
sub
add
jbe
add
stc
ret
fwait
lock
test
loopne
and
inc
push
adc
and
mov
test
pop
mov
sub
cwtl
dec
mov
dec
and
out
push
add
mov
and
jecxz,pn
adcl
xor
data16
xchg
xor
das
add
call
add
loop
js
and
xorb
jge
mov
shl
or
in
or
mov
scas
scas
test
xchg
add
jmp
mov
push
dec
dec
inc
jge
std
mov
mov
push
jg
inc
push
dec
push
inc
iret
pop
pop
mov
shrl
aaa
subl
repnz
xchg
cmp
push
mov
mov
and
mov
cmp
sti
push
js
and
frstor
jmp
sbb
lds
incl
sub
sub
and
xor
adc
cmp
addr16
or
dec
dec
dec
loop
inc
mov
sub
repnz
shlb
add
lret
or
enter
and
push
jmp
mov
cld
add
pop
mov
jmp
add
stos
push
dec
adc
pop
mov
mov
popa
ljmp
jmp
jns
bound
sbb
pop
test
mov
inc
in
cmp
mov
mov
or
stos
adc
mov
pop
push
xchg
dec
aaa
push
ret
push
ss
jmp
push
jmp
int
arpl
sub
imul
insb
ror
cmp
mov
orl
sbbl
push
mov
push
adc
loopne
sub
mov
iret
out
seto
jmp
mov
lahf
and
shll
jl
and
enter
xor
xor
rcl
fcomp
in
xor
loopne
cmp
and
fs
adc
or
out
or
or
add
sar
inc
sahf
and
clc
hlt
shl
in
inc
inc
inc
inc
or
add
dec
inc
inc
inc
adc
or
sbb
and
xor
xor
sub
jo
xor
xor
cwtl
xchg
nop
mov
xor
xor
xor
xor
inc
insb
xor
xor
push
xor
xor
push
dec
out
xor
dec
inc
shrl
inc
sarl
iret
inc
rcrl
shlb
ror
out
stc
insb
shrb
push
shlb
mov
push
roll
mov
mov
mov
mov
movsb
test
mov
jns
mov
xor
xor
enter
xor
xor
aam
fdivl
xor
xor
in
in
xor
xor
lock
clc
cld
fs
add
add
or
fs
sbb
fs
sub
imul
sub
inc
mov
xor
xor
mov
inc
in
adc
not
inc
jmp
sub
lea
shrl
add
popf
icebp
lea
xor
in
or
mov
mov
movsb
shlb
pop
xor
decl
clc
jns
movb
neg
inc
mov
mov
jmp
mov
mul
mov
lea
push
aad
xchg
add
sub
add
mov
sbb
ja
es
fbstp
mov
mov
mov
inc
cmp
jb
out
subb
xchg
mov
jg
pushl
or
or
das
mov
out
xchg
pop
mov
sub
out
lods
xchg
mov
add
jb
pop
ja
xlat
and
jmp
data16
add
mov
push
out
pop
cld
lea
dec
inc
cli
fyl2xp1
dec
mov
push
cld
scas
mov
mov
testb
or
jg
cmp
ret
das
cld
mov
mov
shr
repz
out
loope
movsl
pop
and
rep
or
pop
mov
push
pop
cli
pop
jnp
inc
sub
inc
push
nop
and
dec
pop
sub
in
ret
mov
mov
dec
inc
or
push
inc
ds
sahf
fisttps
add
or
or
stos
adc
mov
add
xor
push
mov
sbb
mov
mov
add
bound
adc
filds
add
out
add
out
and
stc
jl
and
adc
scas
cmp
decl
sbb
sbb
nop
add
subb
in
push
add
out
shl
lods
and
adc
sbbl
pop
imulb
repz
pop
andb
pop
fdivrs
add
rclb
and
push
arpl
inc
push
aad
pop
jg
mov
pop
and
xchg
mov
shrl
stos
jmp
jmp
adc
jle
adc
pop
push
lods
lods
gs
sbb
add
psubusw
push
sbb
or
cmp
or
das
stos
push
push
mov
sbb
pushf
push
push
adc
lret
enter
adc
cld
fcmovb
pop
lods
jo
pop
fnstsw
daa
cs
mov
inc
mov
in
lock
mov
adc
pusha
or
shlb
inc
jg
data16
add
push
mov
xchg
sbb
and
incl
push
mov
test
prefetch
sub
or
lock
in
and
mov
aas
xchg
add
sbb
shrb
outsl
nop
leave
adc
or
jb
mov
test
pop
pop
rcrl
push
mov
and
ror
repz
jl
rorl
inc
rolb
add
or
adc
pop
cmc
mov
in
out
out
out
adc
and
in
xor
in
sub
insb
aas
lret
jg
icebp
or
mov
and
aad
add
push
loopne
add
outsl
data16
popa
jb
pop
xor
sbb
movsb
hlt
pop
add
fistpll
add
bound
insb
fs
rcr
inc
repnz
lret
push
lock
add
loope
or
sti
incl
add
arpl
pop
jo
addr16
fucomip
jae
xor
push
insb
jne
imul
push
dec
data16
adc
or
pop
out
repnz
mov
push
shrl
int
jnp
lock
pop
rorb
outsb
add
out
in
test
jmp
in
repz
in
or
and
mov
loope
jmp
cs
jbe
sub
sub
adc
adc
outsb
lods
int
pop
in
loopne
and
in
push
cmc
add
nop
cwtl
jmp
sti
incl
push
dec
inc
pop
add
and
jecxz
gs
data16
mov
or
push
inc
inc
pop
push
pop
add
add
movsb
add
and
loop
in
push
lcall
mov
adc
pusha
cmp
sbb
je
cmp
imul
ss
arpl
xor
enter
insl
out
or
imul
fdivs
lock
or
loopne
add
subb
ja
int
sbb
pop
pop
imul
repz
adc
push
mov
push
push
lods
cmc
pop
adc
popa
mov
gs
add
call
and
popa
adc
in
icebp
jmp
xchg
adc
enter
sub
add
sbb
mov
dec
sti
xchg
inc
rorb
in
pop
add
in
and
insb
mov
inc
xlat
inc
inc
lret
in
and
aaa
ds
popf
lods
inc
pop
fldcw
cmp
call
lock
in
and
pop
xor
pop
pusha
add
sub
sti
push
inc
push
ret
imul
cmpsb
sti
test
dec
xor
dec
dec
add
sbb
lods
jne
gs
mov
adc
notb
je
and
inc
addl
adc
add
add
push
add
dec
add
inc
add
pop
sbb
or
add
out
lods
inc
addb
nop
add
push
add
xchg
shll
push
add
add
outsb
ds
fadds
jae
add
imul
add
rcr
push
add
add
add
mov
bound
outsl
inc
negb
pop
insb
add
add
xchg
mov
testb
add
jmp
insl
cmp
frstor
scas
insb
pop
pop
inc
je
jne
bound
jae
xor
pop
push
pusha
ljmp
aaa
add
add
add
add
add
add
add
add
inc
loope
jbe
enter
icebp
or
sbb
mov
das
and
stos
sub
sbb
daa
mov
add
or
les
roll
idivl
push
pop
xor
adc
jg
or
pop
push
pop
into
add
add
cmp
pop
pandn
aaa
inc
fbstp
or
and
add
add
fdivl
inc
add
add
inc
popa
cmp
dec
xor
adc
add
into
mov
cmp
test
sarb
in
mov
imul
mov
in
add
and
mov
cmp
xchg
dec
xchg
xlat
xchg
mov
mov
aaa
cmpb
xor
cmpsl
shll
add
dec
inc
inc
add
addb
and
add
jb
out
add
cmp
jl
or
mov
das
leave
enter
pop
cltd
jmp
push
inc
aaa
xor
orl
sub
gs
add
sbb
imul
adc
sbb
loope
xor
mov
add
outsl
cmp
adc
scas
add
repnz
add
enter
pop
or
add
mov
push
lods
cmp
xor
pop
lret
sub
mov
sub
mov
adc
add
and
outsl
addl
jge
sbb
mov
cltd
out
jge
adcl
add
and
pop
orl
mov
testl
mov
dec
fnstsw
stc
dec
lret
hlt
mov
add
mov
fdivrs
push
mov
arpl
sbb
orl
add
inc
pop
scas
pop
fstpl
mov
add
movsl
inc
cmp
inc
and
jecxz
fnstenv
jecxz
pop
adc
mov
ficomps
inc
sub
outsl
sbb
and
imul
xchg
xor
xchg
popf
cmp
jnp
dec
fnsave
scas
ss
adc
int3
out
iret
add
inc
and
aaa
inc
jne
int
rorl
dec
dec
dec
sti
xor
inc
xor
inc
mov
xchg
mov
cmc
popf
push
mov
lahf
inc
lea
dec
and
mov
dec
ja
sub
xchg
bound
out
loope
xlat
aas
cmp
dec
inc
cmp
inc
ss
js
adc
int
and
cltd
ret
rolb
inc
fwait
icebp
popf
outsl
popa
inc
mov
inc
ss
cmpsl
inc
inc
jl
shlb
xchg
outsb
add
xlat
inc
sarb
lret
inc
movsb
imul
add
lcall
jns
out
mov
add
or
cltd
xor
pop
cs
addr16
popa
xchg
jl
cmp
mov
into
dec
in
xor
movsb
imul
and
sbb
dec
push
and
adc
dec
arpl
add
adc
sbb
sbb
mov
pop
xlat
movsb
pop
jle
dec
jb
arpl
pop
ss
pop
sub
popa
dec
jo
xchg
xor
mov
sar
lea
pop
add
add
lret
aas
fstpt
adc
inc
in
cmp
add
nop
push
aaa
gs
inc
xor
insb
or
mov
fcoms
aaa
fwait
movsb
aaa
jmp
sub
push
inc
sbb
xchg
mov
adc
lods
addl
imul
mov
cmc
dec
mov
xor
dec
or
es
add
and
sub
scas
inc
dec
dec
inc
fnsave
add
push
lcall
cmp
jo
jecxz
sub
jge
fisubs
imul
aaa
sbb
mov
arpl
fwait
mov
faddl
or
xor
int
mov
mov
cmp
imul
mov
add
dec
cmpl
mov
das
test
jo
xchg
test
sahf
jmp
jp
insl
cmp
or
fsubs
cmp
inc
inc
aaa
dec
xor
imul
in
inc
repz
sbb
addr16
test
mov
cmp
jb
movsl
imul
sbb
mov
jb
or
pusha
xchg
mov
add
jg
xchg
sahf
nop
mov
and
sbb
lret
push
dec
xchg
mov
push
adc
shll
xor
add
nop
inc
push
xor
leave
insb
rclb
and
adc
sbb
movsb
shl
repz
add
adc
mov
sub
mov
push
cltd
or
daa
mov
or
sub
or
pop
movsb
in
sbb
sub
and
in
dec
repz
mov
sub
adc
daa
call
popa
fs
out
popf
xor
jae
mov
adc
cmp
loopne
and
sub
pop
pop
adc
or
pop
adcb
xchg
stos
lods
push
ret
mov
daa
stos
and
cmp
pop
daa
dec
rorl
fists
jns
add
mov
push
sbb
jne
repz
or
mov
test
push
dec
ds
cld
sub
and
add
add
pop
and
aaa
shll
inc
fstl
pop
cmp
sub
pusha
pop
inc
inc
inc
stos
ss
in
xchg
dec
xor
smsw
idiv
xchg
arpl
push
out
sub
jg
push
shlb
and
inc
mov
jg
lcall
jmp
add
push
add
dec
or
sub
jmp
sbb
cmp
sbb
std
sub
inc
sub
inc
dec
cmpsl
add
add
rclb
mov
subb
nop
or
cmp
xor
sub
and
sub
imul
and
mov
lcall
sub
or
pop
or
add
addl
jecxz
lret
ds
cs
adcl
xchg
insb
ds
add
out
pop
and
inc
in
sub
cmp
sbb
xor
ja
mov
cmp
mov
in
inc
scas
pop
push
add
subb
and
ret
add
pop
mov
sbb
into
int3
pop
pop
xor
add
pop
inc
xchg
sub
ss
iret
push
mov
add
popa
push
addl
add
int3
int
sub
mov
pop
das
xor
add
cmp
divb
mov
scas
add
insb
fcom
add
jg
pop
inc
adc
faddl
and
xor
push
or
push
mov
pop
mov
sbb
pop
jnp
xor
xchg
mov
and
pop
sub
jg
mov
lahf
add
mov
or
adc
nop
das
add
and
es
push
jg
nop
xor
jbe
ret
xchg
gs
add
mov
popl
aas
lods
sbb
fldl
push
push
out
or
push
pop
push
push
in
add
mov
fcomps
and
and
push
xchg
jg
clc
gs
dec
or
xor
cmp
pusha
daa
mov
mov
lcall
mov
into
int
repnz
and
or
out
push
sub
add
addr16
test
inc
mov
lock
and
and
jg
sbb
popa
add
add
xorb
add
or
enter
push
xchg
inc
add
in
pop
pop
add
test
jo
negb
popa
rcrb
sbb
andb
daa
and
iret
enter
pusha
mov
out
pop
scas
pop
push
inc
sub
mov
jg
sub
ret
add
inc
or
jl
or
jg
add
jo
adc
popa
in
mov
push
add
into
sub
mov
sbb
cmpsl
insb
xchg
ror
jbe
pop
pushf
or
sub
xor
sbb
adc
and
dec
sbb
sbbb
fsts
xor
lcall
sbb
enter
add
add
adcl
add
xor
xchg
cwtl
or
add
or
pop
xlat
ret
pop
add
xor
add
pop
dec
addb
fs
inc
dec
xchg
ror
add
das
pop
and
mov
mov
add
pop
xchg
gs
inc
xchg
mov
and
andb
pop
adc
adc
sub
pop
pop
push
add
pop
aaa
mov
shlb
pop
pop
inc
push
and
call
and
ret
mov
pop
add
into
xchg
xor
add
xchg
gs
adc
bound
lcall
push
jg
mov
fidivrl
dec
cwtl
xor
dec
pop
pop
add
sub
fidivrs
fists
jl
nop
jo
das
sub
jg
repnz
ljmp
das
and
and
mov
push
outsl
test
ret
and
mov
xchg
or
mov
lret
mov
cmpb
sub
jg
and
mov
xlat
sti
or
inc
add
adc
iret
pop
sbb
add
pop
cld
lret
pop
iret
jg
loope
add
pusha
or
xor
lret
pusha
push
or
adc
or
popa
movq
pop
in
or
mov
add
mov
sbb
push
xor
or
xchg
pop
shlb
inc
loope
dec
andb
mov
dec
aas
jo
inc
add
xor
pop
sbb
xchg
lock
adc
invd
adc
cmp
jg
adc
in
test
add
adc
pop
xchg
inc
sbb
popa
mov
jg
stos
add
popa
clc
pop
adc
or
pop
in
or
call
adc
jbe
pop
or
inc
add
pop
test
pusha
mov
jo
inc
mov
dec
and
pop
add
pop
xchg
fildll
gs
xchg
inc
and
pop
or
mov
jg
fsubs
clc
pop
add
inc
test
subl
jg
jbe
pop
arpl
jo
pop
decl
jnp
add
jo
subb
lods
lods
inc
or
fisttpl
mov
mov
cltd
mov
lret
and
mov
lret
insb
lods
mov
jg
nop
popf
adc
adc
pop
jns
jo
jg
jg
pop
iret
inc
js
add
sbb
aas
mov
pop
dec
adcb
jg
fdivrs
inc
add
dec
scas
add
mov
dec
xchg
add
lret
sbb
mov
jbe
adc
add
int3
xchg
leave
popf
jo
or
push
sub
jg
dec
or
add
add
jb
adc
add
lret
mov
adc
cmpsl
or
adc
and
add
add
jns
aaa
shll
mov
out
aas
push
or
popf
jl
xor
stc
xorb
scas
add
fwait
cmpsb
mov
mov
fistps
sub
pop
dec
and
fs
pop
fildll
inc
add
mov
or
cmp
sub
push
shlb
jmp
add
pop
cmpsb
add
jo
xchg
in
push
jb
add
mov
pop
pop
jg
repnz
push
loopne
lahf
js
inc
xchg
fwait
pushl
jo
call
outsb
and
add
add
gs
mov
and
mov
xchg
es
enter
add
push
inc
or
nop
loop
jge
call
jae
shlb
jo
push
ljmp
dec
outsl
pop
rclb
and
xchg
gs
xchg
jp
daa
xor
test
gs
inc
nop
sbb
dec
pop
pop
clc
adc
lahf
andb
xor
add
push
cmp
insl
pop
mov
pop
dec
mov
cwtl
jo
sbb
mov
add
dec
gs
inc
sub
sbb
jg
cld
test
scas
nop
jo
mov
push
fsubr
dec
inc
dec
pusha
dec
xor
inc
sub
dec
xor
cmpb
fdivrs
int
pop
add
mov
pusha
sub
jg
sub
mov
movsb
lahf
jg
inc
fnstcw
pop
rolb
nop
mov
and
pop
mov
push
dec
cwtl
pop
xor
das
sbb
addb
mov
add
mov
mov
and
inc
fnstcw
inc
jg
fmull
sbb
add
add
aas
jbe
cmp
wrmsr
outsl
add
push
or
push
dec
jg
add
mov
mov
addr16
push
jne
inc
pop
stos
test
jp
ret
loopne
add
mov
cmp
lret
fs
stos
test
add
gs
xchg
insl
out
out
ljmp
mov
insb
xor
and
out
pop
mov
hlt
call
cwtl
outsl
mov
loopne
inc
xchg
jl
jg
xchg
in
mov
rcll
movsb
scas
push
or
push
xor
mov
rolb
and
rcr
rclb
add
cld
lcall
push
nop
mov
scas
pop
popa
add
pop
jg
addb
in
mov
or
add
loope
inc
add
push
lods
or
fndisi(8087
inc
adc
add
mov
and
add
xor
daa
ss
inc
or
mov
and
add
xchg
add
pop
mov
push
add
or
jo
mov
adc
sub
gs
dec
jae
mov
mov
add
pop
or
decl
shlb
test
ds
bound
dec
add
mov
jnp
stos
mov
and
aas
aam
into
cmpsb
mov
push
pop
jne
pop
jp
gs
orl
add
es
outsl
or
out
je
push
jno
js
add
add
addb
dec
mov
repnz
jge
mov
add
cmpsl
nop
rcrb
xchg
xorb
in
or
add
dec
lcall
call
imul
enter
xor
add
adc
mov
push
push
push
and
xchg
mov
sub
imul
dec
lret
repnz
popf
inc
pop
add
inc
push
insl
add
adc
flds
push
cmpl
or
xorl
ja
add
add
jbe
add
inc
add
ljmp
pop
shrl
xchg
lret
leave
mov
push
cld
mov
mov
das
push
pop
jns
arpl
lahf
mov
les
lods
lods
mov
test
nop
std
lea
mov
xchg
mov
xchg
in
insb
add
gs
pop
notb
dec
pop
aad
jnp
add
lahf
pusha
sub
std
ds
bound
cmpb
add
int3
dec
or
add
sbb
pop
sub
add
jmp
sub
gs
jecxz
mov
out
add
rorb
sbb
mov
loopne
mov
pop
out
jns
leave
sahf
out
fwait
in
lds
ret
rclb
lea
mov
leave
pop
rol
lock
inc
imul
add
xchg
lret
jmp
add
cmp
movsb
repz
xchg
scas
jo
mov
loopne
mov
or
filds
lret
add
addl
and
xor
push
pop
movsl
lret
sbbl
xchg
flds
imul
mov
mov
xchg
test
add
dec
sub
mov
flds
jge
lea
cltd
cltd
movsb
repnz
stos
out
pop
popa
pop
pop
dec
vcmpsd
adc
daa
add
lods
fldcw
jmp
adc
ljmp
mov
push
jg
sbb
sti
xchg
mov
jecxz
aad
rol
xlat
xlat
shlb
ret
cwtl
cwtl
mov
mov
jmp
into
loop
das
std
in
fwait
iret
fcmovnbe
sarl
outsb
outsb
mov
mov
xchg
push
pop
daa
test
ljmp
push
shl
sbb
push
gs
mov
fdiv
stc
test
incl
and
or
stc
outsb
iret
pop
dec
bound
lahf
mov
outsl
xlat
inc
sarb
fistps
xor
add
sbb
pop
in
fwait
movsl
mov
out
out
add
mov
xchg
iret
shrb
iret
mov
cli
outsl
pusha
js
pop
fistl
hlt
das
pop
mov
into
mov
jle
out
sar
in
pop
jmp
ljmp
js
and
shl
mov
sub
add
shlb
dec
insl
jmp
out
inc
push
jnp
not
mov
out
jo
out
pop
add
das
lahf
fists
nop
fistps
pop
sbb
aas
movsb
ss
mov
pop
outsl
inc
xor
xlat
incl
xchg
bound
xor
mov
adc
mov
in
add
shr
scas
fldenv
insl
jg
lret
mov
fildl
js
pop
das
xchg
xor
adc
jg
jb
movsl
movsl
sbbl
pop
xor
cmpsb
jbe
push
flds
xchg
mov
lret
mov
lret
xchg
aad
jnp
in
sbb
mov
roll
test
mov
push
mov
mov
loopne
inc
fbstp
lods
aad
in
int
scas
in
sbb
pusha
jp
pop
mov
insl
mov
add
jmp
fadd
ret
sbb
int3
ffree
lds
call
aam
jmp
push
imul
xlat
es
cltd
sbbl
dec
xchg
stos
push
ret
testb
lods
stos
fcmovbe
int3
fisttpl
mov
and
push
fcmovu
rolb
jg
ja
std
call
xchg
xor
cld
add
xchg
in
pop
jg
add
inc
pop
incl
xor
test
rorb
add
add
ljmp
mov
out
xor
out
xchg
out
mov
mov
sub
pop
lock
scas
or
add
shlb
leave
rol
dec
add
xchg
mov
scas
lahf
lahf
mov
inc
adc
and
xor
inc
sti
fldt
out
or
xchg
xor
scas
aas
mov
jnp
pop
push
mov
lcall
cmp
ret
enter
push
sarl
inc
int3
in
add
in
sub
fs
in
mov
mov
sub
mov
mov
outsl
mov
subl
and
add
cmpl
and
mov
xchg
subb
inc
es
or
lea
out
stc
inc
dec
add
mov
pop
mov
jle
fcoms
ret
sbb
insl
sbb
jno
jp
cltd
dec
adc
out
call
out
cmc
push
nop
mov
xchg
fcomp
int3
int
add
out
ficoms
in
in
call
mov
int
mov
mov
es
je
jnp
and
loope
vgatherdps
loop
aad
movsl
sub
dec
insb
lds
mov
xchg
push
cwtl
fwait
jo
fdivrl
test
popa
rcr
ja
add
aaa
jg
fptan
stc
mov
xchg
insl
mov
inc
pop
repz
rorb
and
std
int3
push
mov
dec
mov
pusha
add
add
iret
xchg
aaa
cmp
pop
xor
outsb
xor
xchg
pop
xor
dec
xchg
rclb
mov
js
add
pop
inc
pop
loopne
hlt
shlb
inc
jb
sub
setbe
cs
or
insb
mov
push
fisttpl
pop
loopne
pop
add
shll
das
add
imul
enter
mov
sbb
sbb
push
neg
fnstsw
dec
stc
idiv
call
repnz
jae
in
inc
enter
jecxz
ficoml
je
mov
daa
mov
mov
gs
in
mov
aam
rol
jbe
add
jg
jae
jo
push
inc
push
pop
out
movsl
add
pop
lds
dec
inc
inc
pop
mov
outsb
sbb
ret
pop
xchg
mov
pop
pop
rolb
sbb
xchg
mov
subl
cmpsl
rolb
fmuls
shrb
movb
shlb
fsubp
into
ret
mov
movsb
mov
xchg
int3
pop
add
xchg
mov
jecxz
cwtl
fsubr
sarl
inc
fcoml
mov
insb
ret
pop
sub
pop
es
lret
aaa
or
jge
in
pop
pop
enter
das
and
mov
leave
shrb
sbbb
xor
pop
push
repnz
pop
es
mov
push
dec
pop
rclb
pop
nop
mov
and
pop
pushf
inc
lock
iret
lahf
cs
mov
push
out
pop
testl
iret
inc
sar
repnz
adc
xchg
iret
jo
ss
inc
jb
pop
cmc
aam
and
or
mov
sub
in
add
adc
sbb
mov
pop
jecxz
lea
pop
pushl
mov
push
je
jmp
call
ljmp
sti
stc
stc
mov
out
dec
lds
sub
mov
mov
sub
hlt
cmc
icebp
out
adc
push
mov
push
lret
sbb
lret
mov
fildl
addb
jl
dec
jno
pop
lret
repnz
or
add
loope
mov
push
es
filds
mov
sub
adc
mov
rcl
pusha
subl
lret
imulb
subl
jg
sub
mov
xchg
orl
std
ljmp
mov
cmc
lds
mov
push
fisttpl
cld
mov
lahf
cmpsl
aam
out
addr16
pop
test
fisubrs
pop
sbbb
xchg
pushf
jnp
pop
nop
fdivr
add
add
lods
mov
cltd
dec
or
decb
inc
dec
out
sbb
adc
pop
nop
daa
pop
outsl
xlat
add
push
inc
pop
push
lret
and
xchg
pop
sub
out
das
jno
loopne
scas
mov
pop
or
and
lock
mov
mov
stos
mov
add
stos
ret
loop
add
or
push
leave
adc
mov
or
outsl
inc
pop
sti
mov
mov
lahf
nop
insl
mov
into
pop
bound
ret
loopne
xor
nop
push
pop
xor
pop
nop
rcl
orb
sbb
lea
hlt
faddp
jmp
sbb
push
sti
ljmp
cmpsb
std
cld
jecxz
cld
dec
lret
ljmp
popa
imul
add
fsubr
lock
mov
mov
fmull
loope
popf
mov
sub
bound
gs
xchg
cwtl
andb
pop
jns
andl
mov
cwtl
mov
push
xor
sub
insb
mov
add
ret
add
lret
mov
mov
xchg
add
addb
add
lret
rcl
incl
pushl
lods
pop
cmp
cmp
xchg
xchg
push
in
mov
pushl
mov
mov
pop
outsl
dec
push
xor
fadd
call
xor
cmp
hlt
mov
jmp
jp
mov
xchg
jbe
pop
repnz
andb
cld
cmpl
xchg
and
decl
cmp
pop
jno
cmp
pop
jg
jns
or
jge
stc
xlat
lock
add
pop
xor
movsb
jg
xor
out
lahf
das
push
pop
sub
testb
cmpsl
xor
test
data16
mov
or
add
pop
not
scas
add
lds
lds
adc
sub
inc
mov
or
lahf
andb
mov
push
hlt
xor
push
pop
stos
pop
jnp
daa
lock
and
sbb
fbld
jge
rorb
js
pop
fucomip
call
jne
lahf
adc
jg
fiadds
ljmp
dec
inc
dec
sbb
add
iret
xchg
push
fiadds
test
pop
ja
adc
fiaddl
in
pop
xchg
xchg
clc
add
push
aas
loopne
mov
lret
jbe
add
sub
out
fcom
ret
jge
lea
inc
inc
xchg
fcmove
dec
das
push
pop
mov
sub
cli
cli
xlat
adc
push
mov
fildl
xorl
pop
dec
dec
dec
dec
dec
push
add
adc
fmulp
scas
dec
push
movsb
aas
add
dec
push
inc
pop
push
or
lret
mov
pop
bound
push
inc
push
add
cld
mov
idivb
add
mov
sbb
outsl
outsl
sti
dec
inc
push
es
add
fmuls
test
pop
sbb
call
add
push
push
dec
pop
jb
pop
add
fucomi
mov
repz
xlat
jb
pop
add
lahf
cmp
adc
xchg
adc
pop
dec
xor
dec
pop
mov
ja
jno
push
rolb
jb
movsb
pop
inc
sub
jo
mov
push
das
movl
fstpl
flds
xor
fsts
imul
scas
shr
and
fistps
add
sub
cltd
jg
roll
cltd
sbb
xchg
in
bound
leave
jo
sarl
pop
fists
or
leave
decl
push
jae
sbb
dec
jae
fcmovu
loope
add
mov
fs
jge
lock
xor
outsl
insl
js
stos
stos
sub
xor
pop
and
pop
mov
lret
rcr
pop
filds
bnd
xchg
gs
in
fcomip
out
ljmp
cmp
call
fcmovu
call
aam
fpatan
fmuls
fstl
add
mov
jmp
inc
stos
push
add
jge
xchg
jg
push
push
cwtl
incl
xchg
pop
mov
add
sahf
js
imul
pop
cli
push
insb
pop
dec
gs
insb
jne
into
xor
icebp
ljmp
lret
les
xchg
pop
jg
lahf
int3
jnp
push
sub
dec
imul
lahf
es
pop
cwtl
jl
pop
nop
jp
test
repnz
sbb
sub
stc
cld
out
push
sarb
dec
xor
sub
add
push
shrb
mov
test
enter
hlt
push
es
jmp
jg
js
pop
mov
outsl
push
dec
pop
pop
testl
sub
add
jecxz
fwait
popa
xor
pusha
sbb
push
dec
sub
lret
xchg
xchg
testl
xor
das
add
cmp
das
mov
pop
jp
pop
mov
dec
mov
imul
jmp
out
jmp
adc
sbb
pop
or
cmp
jne
rcrb
insb
cld
popa
popa
pushf
push
push
lods
mov
addr16
sub
test
popf
adc
dec
xor
outsb
pop
or
add
pop
sub
push
cld
lahf
ficoml
cmc
add
jmp
outsl
jno
scas
push
sub
xchg
jle
or
mov
ja
leave
je
lret
add
jns
inc
mov
and
add
xchg
and
andl
add
decl
loopne
jnp
aam
in
fsub
mov
dec
mov
call
js
addl
jnp
cli
xchg
mov
fisttps
mov
xor
adc
and
pusha
je
xorl
int3
addr16
add
or
lock
fadds
pop
stos
inc
cmp
and
adc
loopne
pop
jbe
xchg
and
sbb
push
adc
pop
jo
pop
cli
jg
mov
sarb
popl
scas
pop
ror
dec
pop
dec
xor
cli
fnsave
sbb
adc
lret
f2xm1
leave
sahf
pop
out
out
pusha
and
mov
cmpsb
add
add
out
cmp
lock
dec
jno
movsl
sub
aas
jnp
push
mov
sbb
dec
mov
shrl
jmp
ljmp
push
les
jae
sub
rorl
movsb
push
pop
mov
push
inc
pop
and
mov
dec
cmpsb
outsb
pop
jg
sub
xchg
add
aad
nop
mov
into
push
outsb
jmp
push
loop
int
lret
jle
cmc
lcall
movsl
xchg
jno
inc
mov
jno
jbe
aas
std
jg
test
test
and
sbb
mov
sub
xchg
jg
popa
sti
out
call
mov
cltd
jle
test
rcl
call
fildll
ss
in
pushfw
add
jo
sub
inc
rcrb
cld
jbe
cmp
fistps
add
gs
cwtl
decl
adc
mov
and
push
lock
rcrb
bound
pusha
test
dec
mov
test
sub
pop
add
outsl
rcrb
nop
out
test
xchg
dec
nop
xchg
hlt
push
loopne
daa
movsl
bound
lock
out
mov
ffreep
add
ds
sti
fbstp
test
icebp
lret
mov
cltd
mov
pusha
jg
outsb
in
sub
add
dec
dec
or
pop
add
cltd
sbb
and
xor
gs
int
push
add
ds
ljmp
push
jbe
mov
fcmovnu
pushf
add
ret
pop
into
mov
ljmp
add
mov
lret
mov
mov
ss
push
xor
jecxz
adc
jmp
or
mov
sbb
jg
xchg
jg
xor
fwait
aas
imul
int
sahf
shll
aam
in
lret
pop
fisubrl
cmp
mov
icebp
mov
mov
inc
cwtl
popa
push
roll
into
lcall
sbbb
scas
call
movsl
jo
mov
hlt
test
and
adc
fwait
aas
nop
clc
mov
xcrypt-ctr
cmpsl
sbb
pop
xchg
xchg
test
sub
jp
mov
xor
hlt
dec
pop
sbb
add
pop
add
out
pop
xor
add
mov
push
jmp
sub
lea
rolb
repz
inc
loopne
inc
das
cld
loope
arpl
call
cmc
loopne
inc
iret
jge
shll
fnstenv
jg
cmpsl
mov
push
mov
sbb
scas
add
or
adc
sbb
mov
mov
jmp
xchg
sbb
mov
cmpxchg
pop
into
mov
pop
mov
out
out
add
hlt
pop
push
jne
lahf
and
divl
pop
cs
jmp
jge
pop
jp
xor
test
aad
add
jp
mov
pop
adc
movb
pop
push
xchg
mov
rclb
test
or
pop
sbb
jp
repz
ss
adc
xor
lret
loopne
jg
mov
flds
ror
add
call
xchg
jmp
test
fdivl
xchg
movsb
out
out
add
lret
ret
nop
dec
xchg
xchg
bound
rcr
mov
mov
test
shlb
leave
es
pop
les
in
popf
insb
jb
xchg
sbb
outsb
ds
arpl
sbb
sbb
push
jno
loop
int
or
ret
inc
or
dec
clc
mov
dec
insb
push
outsb
test
dec
test
sbb
push
dec
mov
sub
loopne
dec
pop
pop
enter
mov
std
jecxz
arpl
bound
adc
call
xor
scas
rorb
inc
sbb
push
add
adc
push
and
mov
popa
dec
addb
jnp
pop
flds
pop
sub
cmp
sbb
and
and
add
mov
or
mov
addr16
test
lret
mov
add
out
fidivrl
enter
in
fwait
cmpsb
and
mov
loop
lds
sub
add
jg
andb
int
aam
call
mov
scas
cmc
mov
iret
xchg
mov
scas
lret
mov
mov
cwtl
std
jmp
fdivs
iret
leave
xor
xlat
lcall
jo
ret
shlb
inc
idiv
fadd
popf
fidivrs
xlat
int3
shlb
rolb
out
or
test
sti
lds
test
sub
xor
pop
pop
sub
mov
add
mov
test
das
rorb
add
in
outsl
push
neg
scas
sti
mov
add
sbb
cmp
add
inc
std
incl
pop
jbe
xor
sbb
pop
test
xchg
outsl
ja
mov
xor
push
sahf
mov
aaa
clc
aad
mov
lds
pop
lods
mov
arpl
xlat
aad
ret
jne
sub
rcl
out
in
fcmovnu
in
adc
es
shlb
inc
and
leave
subb
add
test
push
or
xlat
pusha
and
les
enter
sbb
iret
pop
add
dec
addl
inc
fsubrl
mov
adc
pop
das
push
ret
ss
mov
push
push
add
out
sub
mov
and
test
sub
out
popl
pop
fs
repnz
or
or
pop
add
mov
out
in
out
nop
and
add
fistps
mov
test
out
in
add
xchg
sub
xchg
lods
out
or
ret
sbb
in
out
mov
mov
aas
inc
sub
xlat
or
mov
leave
pop
mov
and
lahf
sub
sub
out
mov
pop
fdiv
mov
out
sub
nop
push
inc
cmp
pusha
out
repnz
add
fs
pop
and
and
or
das
and
add
lahf
jmp
out
jecxz
and
sub
ficoms
das
aas
push
mov
arpl
pop
mov
mov
lret
fldcw
in
lea
leave
push
add
out
es
fldcw
add
add
push
aad
and
dec
add
add
pusha
add
enter
xor
test
pop
sbb
es
xchg
jne
cltd
add
add
inc
inc
add
push
xchg
jo
and
jg
jb
adc
add
test
inc
pop
lcall
lret
push
push
sub
mov
mov
add
lret
cli
scas
push
or
fistl
aas
mov
test
add
gs
cltd
jge
in
and
mov
jbe
cli
add
jae
out
pop
jb
stos
xchg
andb
or
in
inc
sub
add
test
test
jg
mov
clc
das
clc
or
mov
and
add
mov
incl
scas
mov
aas
mov
xor
adc
add
ret
pop
rorl
add
xchg
inc
push
xchg
mov
add
mov
mov
and
or
or
or
adc
inc
mov
cmpsl
out
cmp
ljmp
push
lcall
test
cwtl
mov
pop
xchg
gs
jle
push
push
push
insb
ss
xchg
lcall
add
xchg
push
xchg
mov
das
mov
nop
out
adc
sub
or
imul
negb
sub
lock
pop
leave
add
jmp
mov
sti
sar
jg
out
shrb
out
xor
ljmp
arpl
fldcw
add
or
mov
lret
ja
add
and
sbb
add
mov
or
push
lods
sub
fs
out
add
in
add
add
mov
add
xchg
popa
int3
add
jbe
sub
add
dec
sub
mov
xchg
mov
lret
cmpsb
decl
popa
add
jnp
call
inc
mov
sub
lds
push
inc
mov
fstpl
or
inc
add
pusha
inc
idiv
or
lret
fidivl
nop
enter
add
add
iret
incl
add
add
incl
or
scas
std
lahf
js
add
dec
in
lahf
xor
aaa
pop
mov
add
js
inc
mov
cmpxchg
decl
pop
push
add
lret
in
sub
test
mov
in
fldenv
pop
xor
loop
pop
cld
dec
and
es
add
or
pushl
arpl
ljmp
jbe
decb
sub
mov
pop
xchg
add
pop
mov
add
cmpsl
call
or
and
push
or
subl
and
and
mov
pop
cld
clc
pop
or
inc
clc
decl
add
incl
ret
iret
nop
outsl
loopne
mov
imul
subb
and
lock
lock
or
add
push
and
adc
adc
pop
add
and
mov
push
push
pop
incl
pushl
add
imul
lcall
add
xchg
gs
pop
outsl
jge
popa
lcall
mov
incb
add
jmp
xchg
mov
push
add
xor
mov
jg
fists
sbb
fimuls
add
call
mov
mov
test
add
mov
and
jmp
pusha
filds
nop
add
pusha
push
xorl
loope
dec
dec
jg
cmpb
nop
loope
decl
incl
imul
mov
add
imul
mov
dec
in
cli
jnp
xchg
gs
xchg
lret
pop
pop
mov
nop
or
enter
lret
or
stc
out
nop
insb
or
add
outsb
sub
in
rolb
ret
cs
xchg
mov
push
xchg
gs
push
cmp
fisubrl
mov
jg
add
lock
mov
lret
mov
test
mov
scas
incl
or
decl
notb
test
and
or
test
push
aam
inc
and
pop
jo
ret
lods
and
nop
lods
or
enter
push
xor
add
xor
decl
loopne
push
inc
cmp
adc
call
test
decl
mov
ss
jg
mov
loopne
pop
lds
pusha
rcr
fnstsw
pop
pop
js
inc
mov
mov
adc
push
or
and
jmp
nop
push
adc
mov
push
cmpsb
add
pusha
add
lret
mov
lret
insb
jno
xor
cs
int
ljmp
xchg
dec
push
scas
incl
mov
jmp
xor
push
pop
or
lcall
lret
mov
mov
mov
mov
pop
push
sbb
lret
enter
xchg
add
lock
lret
mov
fnstcw
test
test
movsb
adc
cld
call
mov
stos
mov
popa
lcall
push
mov
pop
loopne
adc
inc
pop
dec
pusha
pop
sbb
incl
test
or
push
or
sbb
cld
bound
add
call
cwtl
xchg
shl
ljmp
lahf
neg
scas
jo,pt
xor
adc
and
add
lea
out
add
pusha
call
pshufw
jg
mov
gs
or
cld
add
and
nop
je
clc
lods
ret
lret
jbe
loope
add
sbb
mov
push
dec
cmp
sbb
or
mov
and
adcb
stc
pop
pop
and
or
testb
ss
lcall
fcmove
sbb
pushf
imul
mov
pushl
pop
xchg
gs
jo
mov
fwait
xchg
imul
xor
jmp
incl
push
mov
adc
loope
jmp
mov
aas
pop
xor
add
pop
cwtl
pusha
cmp
xchg
add
incl
loopne
adcb
stc
dec
pop
mov
or
ret
or
push
fildl
mov
ljmp
push
sbb
int
mov
fstpl
jmp
cmp
aad
pop
das
mov
inc
add
pop
and
adc
add
dec
push
mov
inc
gs
push
add
mov
int
int
dec
fisttps
adc
pusha
and
loopne
add
lcall
and
dec
add
or
add
ficoms
xchg
addl
gs
xchg
push
jmp
add
lcall
incl
call
shrb
add
add
aas
std
sub
fistpll
ret
shrb
xor
int
insb
or
adc
sub
add
cwtl
mov
add
aas
and
dec
dec
or
add
xor
push
leave
data16
xchg
aam
adc
aas
mov
lock
call
leave
repnz
inc
nop
outsl
jmp
xor
incl
in
dec
mov
add
mov
xchg
popl
xchg
mov
lret
xchg
sbb
xchg
sub
roll
lock
adc
out
add
xor
incl
push
mov
jp
inc
enter
jmp
lret
mov
lret
push
cli
shrb
cli
or
mov
dec
xor
mov
mov
push
in
add
inc
xchg
gs
cwtl
ja
mov
mov
xchg
or
fs
xchg
pop
cmpsl
aam
sbbb
sub
outsl
stc
cmc
repnz
mov
js
xor
push
mov
subb
inc
push
sbb
lock
inc
inc
or
lock
inc
insb
rclb
sbb
imul
cmp
adc
sbbl
leave
mov
add
xor
out
lock
out
loopne
mulb
aas
dec
and
test
add
int3
movsl
dec
mov
andl
lret
jbe
cld
mov
pop
dec
insl
or
pop
enter
lock
or
add
xor
outsb
cld
push
pop
mov
push
dec
add
sbb
mov
push
inc
pushl
mov
jae
xchg
xchg
gs
test
fs
lds
push
xor
inc
leave
pop
lock
lods
test
xchg
mov
lock
cmc
pop
cld
mov
rcrb
rorb
adc
and
inc
add
add
cld
push
shll
inc
jmp
fistpll
add
or
xor
mov
stc
scas
or
hlt
pop
stc
scas
dec
push
mov
das
jp
pop
add
pop
cld
sbb
lock
mov
or
xor
fwait
add
mov
push
xor
dec
mov
test
sub
dec
pusha
lock
call
sub
add
xor
in
add
inc
xor
ja
or
lods
add
jg
lret
mov
sahf
add
sub
mov
mov
or
movsb
inc
push
and
testb
or
add
scas
icebp
dec
dec
pop
subl
loopne
and
push
or
idiv
ret
test
add
or
add
xchg
rolb
incl
mov
das
aam
lock
mov
loope
and
or
cmp
add
or
cmp
push
add
negb
adc
add
xchg
gs
sbb
mov
lret
and
jg
sbb
or
cld
sbb
add
mov
lahf
add
aaa
xor
test
mov
xor
pop
xchg
flds
stos
movsl
subl
popa
adc
lds
inc
sub
sub
fadd
aam
mov
push
dec
xor
push
mov
or
mov
jg
adc
ljmp
push
jmp
adc
fidivrs
shl
mov
in
cwtl
out
pop
push
adc
iret
movb
dec
jp
add
insl
add
ret
aad
lret
or
push
push
xchg
fistpll
adc
idivb
inc
pusha
inc
repz
ss
cmp
aaa
addr16
test
mov
sub
mov
xchg
add
adc
inc
test
pop
enter
test
xor
icebp
loopne
int3
sbb
aas
jle
add
data16
sub
xor
jae
add
pop
pop
cli
mov
pop
add
test
inc
shll
lods
mov
cmp
push
inc
leave
ss
sbb
adc
jg
insb
add
xor
ss
or
sbbb
mov
pop
mov
cmp
repnz
add
sbb
hlt
sub
add
fs
das
bound
das
rolb
mov
test
mov
pop
push
and
cmp
sub
rorb
and
popa
and
and
pop
dec
inc
adc
cmp
or
add
lret
add
nop
das
sub
test
movsl
add
or
adc
mov
and
out
adc
addb
mov
pop
enter
push
add
xchg
inc
xor
cmp
scas
add
mov
jo
or
pop
jmp
xor
mov
xor
or
pop
sbb
add
fs
dec
into
jg
cmp
push
sbb
pop
out
add
dec
or
and
rorb
pusha
outsl
fists
adc
call
scas
inc
push
xchg
cmp
or
nop
loopne
jno
ret
adc
or
rol
jmp
rorl
push
adc
add
xchg
dec
push
or
popf
jae
andb
arpl
xchg
pop
pop
shr
adc
pop
test
push
pop
fists
fiaddl
dec
es
sbb
inc
push
aam
mov
and
pop
loopne
sbb
mov
or
jp
gs
adc
sub
inc
or
pop
inc
and
inc
and
pop
xor
sbb
filds
or
cs
mov
outsl
mov
dec
sub
mov
cmc
and
adc
pop
jg
orb
add
enter
rorl
aas
call
and
cs
pop
mov
add
mov
xchg
mov
and
inc
shrl
comiss
and
or
mov
xor
test
mov
adc
shrl
jg
dec
es
inc
xchg
push
xor
push
das
mov
jbe
ljmp
cmp
dec
test
add
adc
push
shlb
loopne
dec
loopne
adc
int3
sub
adc
push
fs
and
fildll
arpl
lods
mov
adc
or
xchg
shll
cmp
mov
sbb
push
das
outsb
adc
pop
dec
adc
pop
out
xor
es
leave
fs
inc
xor
add
inc
fbld
sub
adc
jo
fldenv
or
mov
lods
mov
xor
daa
and
pop
mov
in
gs
xchg
gs
jno
lea
inc
xchg
nop
sbb
pop
mov
sbb
lock
pop
xchg
jmp
mov
decl
pop
mov
lods
mov
popa
outsl
mov
push
xchg
lods
ljmp
rol
rcl
jmp
mov
sub
cld
lahf
outsb
int3
and
and
shrb
mov
jae
cwtl
cwtl
mov
and
leave
pop
aam
leave
mov
xchg
in
lock
in
jecxz
push
xchg
in
lods
xor
es
fstpt
xchg
xchg
out
in
in
out
iret
mov
stos
xchg
mov
sbb
xchg
cmp
cmc
lret
enter
or
add
jg
xchg
jmp
loopne
div
fst
dec
inc
jns
inc
lret
movsl
lcall
lds
pop
add
ret
mov
mov
pop
pop
add
cltd
aaa
pop
xchg
gs
pop
les
out
pop
jg
repz
mov
popf
dec
sub
push
dec
popf
ficompl
repnz
loopne
jo
arpl
jae
or
jae
pop
fdivs
lcall
ret
or
cmc
idiv
pop
inc
icebp
in
hlt
out
cmc
loop
loopne
je
mov
orb
sub
mov
dec
sti
lret
pop
roll
mov
or
ja
nop
sbb
mov
div
or
lcall
mov
call
int
lcall
cmpsb
popf
aas
jae
push
das
or
xor
fidivrs
ljmp
jmp
test
fwait
je
das
stos
aad
lcall
sbbb
jecxz
jbe
pop
add
je
lds
imul
dec
fwait
cmp
mov
jmp
insl
add
adc
hlt
fcompl
push
jnp
mov
lds
push
out
sbb
jmp
cmp
ljmp
hlt
jo
jbe
jmp
mov
loope
test
lea
addl
add
fldenv
bound
jp
pop
shll
adc
mov
add
add
das
jg
movsl
xlat
jbe
jns
pusha
jnp
nop
mov
shlb
pushl
xchg
mov
clc
add
addb
xor
push
xchg
add
mov
or
lcall
addl
mov
aaa
lret
shl
das
sub
xchg
imul
shrb
and
sbb
fistps
jno
aaa
pop
cmpsb
xchg
xchg
xor
and
fists
fnstcw
out
movsl
shl
shl
mov
ret
lods
insb
sar
pop
xchg
jge
cmp
outsb
add
popa
xor
es
fadds
gs
scas
call
movsb
out
xor
insl
inc
mov
loopne
add
jg
ret
mov
adc
mov
mov
fadds
jnp
pop
inc
scas
xor
or
out
das
loopne
nop
in
pushl
adc
adcb
mov
mov
lret
jle
jecxz
fs
fsubrl
in
add
pop
adc
lock
pop
sbb
or
mov
aas
push
enter
add
push
scas
test
inc
sub
mov
or
mov
adc
movsb
addb
push
push
sbb
adc
or
push
mov
das
adc
sub
dec
pusha
adc
addb
adc
addr16
inc
cmovo
add
addb
add
mov
ret
mov
mov
pop
ja
mov
mov
inc
lods
sti
ret
stos
push
mov
mov
mov
mov
lret
add
and
mov
mov
fisttpl
scas
add
add
cmpsb
cmpsb
add
add
mov
mov
mov
add
ja
adc
xchg
xchg
xchg
add
xchg
xchg
add
xlat
das
pop
test
dec
imul
mov
add
sbb
add
jnp
cs
scas
mov
mov
xchg
add
dec
add
mov
add
mov
cs
lret
add
add
add
cmpsl
test
jmp
mov
xchg
jnp
add
in
jb
lret
sbb
add
sbb
add
pop
cs
rolb
movl
lea
jb
outsb
add
movsb
xchg
rolb
add
add
imul
lret
add
add
cmp
popf
add
lret
add
add
add
and
cmp
push
push
push
dec
push
push
inc
cmp
xor
pop
mov
inc
and
sbb
cs
add
or
mov
cmp
push
sub
xor
push
sbb
sub
inc
cmp
fcmovnu
std
das
sub
pop
or
ss
or
xor
sbb
out
ljmp
ds
inc
dec
cmp
sub
cmp
adc
dec
xor
sub
das
jmp
jg
es
or
push
sub
cmp
daa
dec
and
cs
pop
imulb
adc
inc
xor
cmp
cli
mov
pop
or
sbb
sub
in
fstpt
nop
ds
dec
cmp
dec
adc
push
push
jle,pt
adc
push
inc
inc
push
xchg
das
dec
daa
mov
daa
xor
wrmsr
add
sbb
fdivrp
stc
mov
inc
inc
and
or
sub
pop
pop
sbb
xor
inc
cld
outsl
pop
dec
ss
sub
sub
inc
xor
daa
cmp
pop
mov
add
and
jg
sub
fwait
inc
push
inc
pop
push
add
add
xor
cmp
sub
or
pushl
notl
add
es
sub
cmp
cmp
insl
sub
or
das
sbb
mov
add
push
sub
adc
sub
adc
adc
scas
jae
push
add
pop
pop
pop
push
and
xor
xor
neg
ja
xor
sbb
idiv
repnz
sbb
inc
sbb
cmp
adc
mov
adc
and
xor
pop
cmp
addr16
pop
push
adc
add
inc
fnsave
cmp
sbb
or
or
mov
sub
sub
sbb
jge
ss
cltd
push
cs
dec
aas
or
and
imul
sbb
adc
add
adc
mov
dec
or
sbb
sbb
pop
add
and
outsb
mov
ficompl
push
and
xlat
mov
adc
adc
arpl
inc
push
decl
fisttpl
pop
sbb
pop
or
pop
push
aaa
adc
lods
mov
and
inc
aas
xlat
cmp
and
mov
adc
sbb
mov
insb
sti
mov
push
adc
adc
adc
jne
out
imul
aas
add
sti
sbb
pop
sbb
jae
inc
sbb
adc
push
jg
push
cmpsl
adc
ss
dec
or
fnsave
pop
ljmp
push
aaa
aas
adc
pop
xor
or
daa
sub
sbb
scas
add
pop
push
ret
sbb
mov
pop
add
add
cs
cmp
add
mov
pop
or
in
loop
xor
adc
jmp
movsl
test
or
enter
mov
ret
add
adcb
clc
add
inc
insb
add
or
jnp
pop
add
nop
cmp
pop
ud0
jo
cmovo
jnp
adc
ja
inc
or
pop
ja
pop
add
ja
pop
popl
je
xlat
or
mov
cld
cmp
add
daa
jl
aas
adc
and
test
aaa
adc
push
outsb
inc
verr
das
aas
aas
xor
add
nop
negl
xor
sbb
and
insl
fs
cmp
xor
nop
cltd
add
jb
subl
push
or
sbb
outsl
xchg
nop
add
nop
pop
jg
inc
pop
pop
mov
pop
daa
and
jnp
nop
dec
sbb
int3
test
dec
outsl
outsl
dec
pop
push
push
mov
add
aad
in
fildll
test
cmpb
mov
jae
adc
and
ficomps
sbb
mov
mov
jo
dec
sub
inc
pop
pusha
push
xchg
xchg
mov
fbld
dec
addr16
jo
mov
xlat
rcrb
pop
addl
dec
and
xor
out
jbe
add
dec
ret
inc
sub
push
xchg
or
jno
test
outsl
fnstsw
cs
xor
xor
jae
dec
jae
and
outsl
gs
enter
xor
and
push
jae
sbb
out
adc
in
or
push
lahf
loopne
mov
ds
adc
sbb
pop
xor
sub
fdivl
out
fbstp
cmpsb
fld
push
jp
lcall
sbb
xor
inc
mov
in
sar
xlat
subb
enter
mov
mov
and
fwait
sub
popf
out
enter
mov
imul
and
cs
add
scas
shrb
xor
outsl
jno
dec
fidivl
dec
dec
std
xlat
ror
popa
mov
call
sbb
dec
mov
xchg
pop
jbe
rorb
out
sbb
sub
aas
push
push
popl
jnp
cmp
or
push
addr16
pop
mov
lret
adc
in
and
push
outsl
cmp
xor
mov
loopne
inc
mov
pop
mov
popa
mov
mov
mov
push
mov
jnp
fisubrs
push
mov
lods
add
gs
test
pushf
and
aaa
les
pop
and
sbb
scas
add
lods
fmuls
and
dec
cmp
pusha
push
ret
aas
push
push
pusha
mov
add
imul
adc
cmpsl
xchg
sbb
or
pop
lds
dec
and
adc
add
add
fdivs
add
negb
roll
add
addl
mov
xorl
rcrl
or
les
cmp
int3
push
rolb
xor
mov
or
jne
and
xchg
aam
sbb
dec
iret
lds
lret
and
movsb
in
xor
cmovle
test
adc
or
lds
push
cltd
and
push
add
adc
push
xor
cmp
mov
cmpl
adc
mov
xchg
add
test
shrb
mov
aaa
adc
dec
adc
pop
outsb
and
adc
mov
mov
jae
jo
add
mov
and
jge
sub
or
dec
and
sbb
icebp
or
and
xchg
cwtl
add
jg
inc
inc
add
pop
adc
in
sub
dec
and
cmp
adc
cmovo
mov
mov
shll
fs
in
jnp
add
jg
cmp
cmp
jbe
inc
mov
inc
mov
inc
mov
inc
mov
jnp
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
mov
push
mov
push
mov
mov
pop
mov
pop
mov
push
gs
call
ret
ret
xchg
outsb
les
pushf
je
popf
ja
lahf
jns
mov
dec
mov
int3
cmpsl
test
test
shrb
shll
shll
jmp
lcall
mov
fidivrl
fadd
stos
ffree
ljmp
enter
mov
lret
mov
int
jecxz
mov
rol
out
ret
call
call
lret
jmp
int
fst
in
out
loopne
out
loope
out
jecxz
out
in
lock
push
push
out
bnd
repz
hlt
in
out
in
out
out
jmp
pop
outsb
adcl
ds
jne
test
cs
inc
xor
fisttps
mov
push
mov
push
mov
push
mov
xchg
pop
mov
pop
pusha
bound
cs
rclb
insl
les
lds
or
xor
jl
aas
cmpsb
test
test
int
mov
stos
mov
scas
shrb
shlb
aam
jb
lret
mov
fwait
xlat
mov
mov
fadd
stos
pop
decl
xor
mov
leave
mov
lret
int3
mov
jg
in
mov
aam
out
enter
ljmp
mov
mov
out
loop
fldcw
fcomi
out
icebp
inc
clc
repnz
call
hlt
in
imul
call
add
cmp
pop
js
xchg
inc
xor
js
jns
or
out
pusha
inc
mov
dec
mov
dec
mov
xor
cs
push
mov
mov
mov
pushaw
insb
fdivl
xchg
cwtl
jo
nop
jb
pusha
jbe
push
ds
jle
movsb
subb
lret
ret
pusha
into
iret
lods
scas
mov
nop
xchg
inc
jb
aam
aad
mov
fld
sub
shrl
sbb
into
jmp
lret
enter
in
loope
in
call
adc
jmp
imul
cmp
sub
test
inc
inc
sar
mov
jl
xchg
gs
lods
das
std
xor
push
mov
arpl
inc
es
mov
pop
out
lahf
cld
movsl
jnp
es
ret
xchg
insl
or
xor
pop
sbb
pop
pusha
xchg
sbb
adc
sbb
push
or
add
lcall
jecxz
xchg
aad
xor
inc
push
dec
inc
pusha
mov
inc
and
lods
fisubs
movsb
xchg
cmp
das
add
int3
mov
cltd
mov
lds
xchg
daa
pop
sbb
ljmp
jbe
in
loopne
mov
push
xchg
cmp
ljmp
pop
add
cs
mov
data16
ret
cs
cmpsl
je
or
add
dec
loopne
or
xchg
push
or
xchg
insb
inc
outsb
lcall
push
and
xor
xor
sbb
push
lcall
jne
inc
roll
xor
xchg
je
adc
je
adc
inc
sub
sbb
mov
subb
pusha
jg
pop
sbb
mov
lcall
adc
stos
xchg
mov
or
frstor
mov
xchg
addl
mov
outsl
gs
pop
push
dec
decl
sub
int
das
sub
addb
nop
mov
sbb
sarl
scas
ja
cld
mov
pusha
inc
pop
pop
inc
and
int3
das
mov
xorb
dec
outsb
dec
xor
mov
arpl
ds
xor
mov
bound
adc
mov
ret
pop
inc
daa
pop
lock
aas
xchg
pop
cmp
push
inc
lret
mov
and
jle
repz
or
xchg
xor
push
sub
shll
push
cli
clc
lret
mov
pusha
mov
fwait
ret
leave
pop
mov
xchg
jle
fnstsw
pusha
outsl
imul
and
push
sub
ret
cmp
cs
lock
sbb
xor
sbb
and
jecxz
xchg
jmp
insl
dec
das
push
lcall
inc
lods
jnp
adc
dec
ss
xlat
cmpsl
mov
dec
mov
dec
aaa
sarl
jbe
xor
and
dec
aaa
push
aas
xor
rcrl
andl
pop
jno,pn
jge
and
mov
scas
ficoms
mov
rcl
scas
jl
mov
cwtl
sbb
mov
sbb
das
lock
sarl
adc
jge
or
sub
mov
lret
add
mov
push
ljmp
in
shl
sub
in
mov
stc
lahf
cwtl
lock
sbb
pop
mov
incb
dec
jns
xor
dec
pop
mov
dec
xor
fistpll
pusha
add
ja
outsl
cmp
and
xor
sbb
and
push
xchg
stos
lock
push
inc
cmp
bound
pusha
or
push
mov
cs
bswap
test
sbb
shll
pop
push
sub
cmpsb
cwtl
mov
lea
lock
pop
lods
sub
fdivr
mov
push
jle
outsb
les
pusha
bound
or
lock
sub
adc
inc
and
repz
pop
aas
and
and
mov
cwtl
ss
arpl
test
inc
cli
ds
pop
pushf
xchg
adcl
mov
push
mov
lret
dec
and
push
sbb
xorl
sahf
ja
mov
andb
or
icebp
mov
push
lds
push
push
es
inc
cs
mov
push
push
les
das
ja
pop
loope
out
dec
cld
outsb
mov
mov
rcl
mov
inc
out
loop
mov
pop
pop
pop
push
jmp
xorl
xchg
scas
mov
insb
cmp
add
ret
int
or
das
and
cmp
pop
insb
dec
sub
cmp
cmp
push
mov
shrl
dec
je
mov
mov
aas
dec
repz
popf
jbe
clc
cmpsb
fwait
lret
lret
jg
jp
xchg
mov
ja
mov
and
mov
xor
inc
lcall
outsl
jle
or
test
jbe
pop
sub
and
pusha
push
add
mov
sbb
rcll
jp
mov
enter
cmpl
jmp
adc
and
test
and
or
outsb
arpl
cmpsb
cli
mov
cmp
xor
push
cmp
dec
xor
pusha
cs
pop
push
adcl
mov
addr16
mov
cwtl
outsl
lret
push
addr16
fwait
jae
pushf
jne
loope
subl
lock
pop
dec
shlb
mov
sbb
fdivrs
int
sahf
sub
prefetchw
aas
cli
or
mov
jecxz
mov
jg
xor
mov
adcl
mov
pop
xorb
push
rorl
test
addr16
into
push
adc
sahf
mov
push
jo
aam
xchg
mov
adc
cmpsb
pop
ds
mov
sbb
mov
test
rclb
nop
or
mov
popf
out
sub
in
lock
scas
and
adc
int3
sub
and
adc
mov
adc
dec
mov
push
inc
xorb
adcl
sub
pusha
pop
pop
mov
push
in
rcll
mov
ror
push
daa
inc
add
adc
lcall
and
xlat
mov
mov
inc
pop
adc
mov
les
movsb
add
or
xor
or
dec
je
inc
in
pushf
jl
shlb
dec
mov
mov
adc
add
add
adc
xchg
je
jne
pusha
push
loopne
pop
lock
pusha
cmpsb
adcb
xor
movsl
or
xchg
jo
mov
lock
adc
mov
stos
cmp
or
int3
sbb
lcall
and
shlb
cmp
or
mov
xchg
das
shll
inc
cmp
mov
sbb
es
mov
hlt
cwtl
cmc
pusha
shll
jb
cltd
lods
sarl
es
xor
into
mov
inc
pop
sbb
je
stos
mov
rorl
je
rcl
push
sub
pusha
jecxz
dec
es
mov
add
test
push
xor
or
test
pop
invd
push
ss
xor
dec
xchg
inc
mov
sbb
or
sarb
xor
adc
dec
roll
andb
cs
pop
inc
sub
std
xchg
andb
jbe
subb
test
jmp
pop
dec
into
pusha
lods
shll
mov
cmp
sbb
scas
xchg
fidivrl
in
or
cmp
cmp
je
push
adc
cltd
jecxz
pop
dec
adc
mov
bound
push
dec
jae,pt
sbb
and
adc
enter
dec
daa
mov
mov
sub
xchg
ffreep
daa
and
ja
xor
adc
and
fadd
add
push
bound
ja
jmp
pusha
mov
or
adc
rclb
pusha
rol
jge
add
cs
mov
icebp
sbb
addb
mov
jno
dec
pop
xchg
aas
pusha
mov
inc
cmp
mov
jb
testb
ja
xchg
mov
add
push
inc
add
cs
mov
pop
adc
xchg
pop
cmp
cmpb
mov
pop
and
pop
sarl
mov
jo
push
cs
test
js
sub
xor
xchg
jl
pop
or
push
shll
sbb
pop
and
pop
inc
mov
inc
xor
std
jne
jo
addb
daa
lds
outsl
pop
dec
add
int
pop
lock
sub
mov
fstps
mov
sub
adc
cmp
shll
and
in
imul
push
jno
iret
pop
roll
and
sarl
lods
insb
orl
cli
ds
js
cli
lods
jnp
cmpl
js
pop
aas
je
cltd
jae
xchg
mov
xlat
orb
insl
lock
jne
dec
cmp
add
cmpb
inc
mov
pusha
loop
rcr
rol
xchg
jno
inc
sahf
xchg
mov
fcoms
lock
xchg
adcb
lahf
shrl
mov
in
add
jg
sub
inc
sub
xchg
push
mov
push
dec
icebp
pusha
popf
xchg
arpl
cwtl
gs
scas
shll
xor
lock
xor
dec
ret
or
push
mov
mov
cwtl
jb
sub
pop
call
ret
cwtl
outsb
jl
sub
bound
push
and
pop
adc
inc
scas
mov
mov
mov
fldenv
icebp
push
popl
popa
push
and
ret
mov
rcl
shll
rcll
mov
imul
loop
lds
xchg
enter
and
add
jge
or
cmp
ja
mov
loop
gs
sub
xor
call
jo
sarl
mov
pop
xchg
mov
mov
adc
pusha
nop
call
insb
pop
inc
pusha
xor
outsl
pop
dec
pop
lock
jl
sbb
lret
mov
push
add
add
xchg
ret
adc
ss
xchg
fisubs
popa
and
or
cmpl
data16
inc
cltd
imul
push
xor
test
xchg
xor
pop
jnp
cmp
addr16
std
push
mov
dec
and
std
sub
mov
pop
inc
xor
lock
sbb
adc
jecxz
push
inc
loop
and
test
gs
inc
cmp
subl
xor
scas
xchg
rcr
or
adc
sub
inc
pop
sbb
cmp
sub
jae
movb
imul
add
ds
or
adc
jnp
cmp
daa
pop
mov
pop
sbb
addl
inc
xor
loope
test
imul
fsubrl
test
shll
push
shlb
test
pop
icebp
call
and
es
pusha
xlat
icebp
loopne
addb
xor
inc
inc
dec
stos
adc
adc
in
pop
iret
test
sbb
dec
cmp
scas
adc
cmp
jne
mov
inc
sub
jo
dec
je
xor
cmp
sbb
add
jo
sub
pop
sub
sbb
sbb
iret
outsb
mov
mov
stos
push
lcall
popf
and
jb
push
pusha
loopne
add
adcb
insb
gs
add
mov
faddl
shlb
cmp
das
pop
mov
mov
push
das
shrl
xchg
daa
jbe
mov
mov
inc
xor
xor
sbb
andl
push
cmp
cwtl
jno
xchg
jp
sub
cmc
inc
cld
adc
jns
dec
or
xchg
addr16
pop
daa
mov
or
add
adc
mov
or
or
sub
xchg
aam
mov
or
jl
ljmp
xor
jo
loope
sub
arpl
cmp
cmp
jmp
jge
cmp
pop
inc
jg,pn
inc
test
xor
cwtl
outsl
mov
leave
or
push
push
scas
mov
flds
mov
les
or
aad
test
mov
adc
sub
pop
and
sbb
daa
jbe
mov
cmp
push
cs
push
mov
and
dec
mov
inc
mov
push
lock
jmp
dec
pushf
iret
add
outsl
les
andl
in
cmpsl
cmpsb
movsl
xchg
mov
or
xor
nop
pop
add
or
or
adc
add
push
je
fwait
xor
xchg
je
dec
xor
xor
mov
dec
pop
jmp
xor
adc
nop
pusha
add
jmp
clc
int3
xchg
cmc
shll
add
lods
or
xchg
cmpsb
jge
sbb
pop
add
cld
adc
les
shll
das
or
inc
xchg
stos
js
adc
popf
sarl
inc
add
push
movb
push
add
mov
nop
inc
xorb
cs
and
inc
xchg
xor
sbb
push
outsb
add
andb
sbb
xchg
daa
cs
cmp
ret
xchg
push
dec
xchg
xor
inc
loopne
dec
and
pusha
xchg
popf
movsb
xchg
outsb
ret
aad
xchg
call
andl
pushf
jnp
daa
and
inc
adc
cltd
mov
or
xchg
aam
xchg
sub
and
cltd
insb
xchg
pusha
and
jb
lcall
mov
js
bound
cs
pusha
push
jmp
pusha
mov
andl
shll
push
cmpsl
push
mov
jp
pop
mov
lcall
arpl
sbb
pusha
mov
add
mov
rorl
jns,pn
mov
inc
mov
adcl
rolb
cmp
insl
movl
push
push
loopne
lret
mov
andl
push
lock
adc
xchg
nop
fstps
mov
lret
pop
sbb
sbb
pop
mov
rcll
test
gs
popf
jne
xchg
push
inc
add
jb
xchg
sub
ret
sbb
inc
cs
jl
test
cltd
jge
daa
test
cmp
ret
orl
sbb
or
push
sbb
stos
leave
inc
mov
dec
dec
mov
push
inc
cmp
pusha
push
sbb
lock
pusha
jno
les
ret
bsf
xorl
or
inc
xor
pop
xor
push
add
test
sbb
dec
test
cmp
movsl
add
mov
pop
push
pushf
data16
xor
bound
xchg
popa
xor
pushl
xchg
pop
das
pop
das
mov
pop
jg
icebp
sub
add
adcl
jp
sub
das
icebp
das
jbe
daa
je
es
jo
and
inc
and
inc
outsl
icebp
jmp
push
and
and
and
pop
pop
cmp
pop
pushf
pop
cmp
push
cmp
sbb
sbb
sbb
sbb
sbb
sbb
pop
inc
sub
inc
sub
call
sub
adc
and
xor
adc
pop
adc
pop
cvttps2pi
adc
jg
sbb
sub
push
sbb
and
or
adc
call
adc
sbb
or
adc
xlat
pop
push
push
pop
adc
push
adc
adc
mov
incb
add
or
add
pop
add
add
push
ss
outsl
add
add
add
outsl
push
inc
sub
movsl
insb
aaa
movsb
mov
jns
lahf
lcall
xchg
xchg
pop
pop
xor
mov
aaa
pop
sub
sub
push
out
mov
daa
ja
dec
daa
jb
outsb
dec
and
mov
and
popa
inc
and
push
pop
and
mov
push
aaa
sbb
dec
dec
push
pop
pop
repnz
sbb
cmp
sub
pop
xor
adc
and
daa
sbb
gs
and
and
adc
sbb
or
out
xchg
mov
outsb
pop
xchg
push
push
add
add
add
add
add
or
or
mov
fiadds
add
pop
popl
fdiv
lret
add
ds
incl
add
in
mov
sti
movsb
mov
pop
cs
imul
mov
lret
iret
daa
add
xchg
dec
jae
dec
mov
xor
jecxz
stos
shll
dec
cmp
xor
outsb
pop
shll
dec
and
imul
cmpsb
imul
dec
cmp
cmpsb
imul
cmpsb
imul
xor
lcall
fdivrl
imul
lcall
xchg
cmpsb
imul
imul
cmpsb
imul
imul
and
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
popa
lcall
imul
mov
ds
mov
mov
imul
je
fs
mov
jae
add
insb
and
lock
and
mov
int
das
incl
mov
outsb
inc
or
add
in
mov
scas
ret
outsb
pop
add
sahf
xorb
popl
add
mov
push
bound
add
in
sti
pop
add
xor
add
add
adc
push
push
pop
aaa
lods
sbb
xor
std
add
adc
icebp
sub
or
out
outsb
idiv
adc
adc
push
add
cmp
and
ljmp
repz
pop
call
data16
xor
adc
leave
movups
std
or
adc
clc
add
add
pop
add
sti
adc
nop
add
clc
cld
cld
jb
jb
sbb
add
sbb
lret
adc
add
cmp
incl
pop
pop
int
stc
in
cmc
pop
andnps
cmc
pop
popf
sbb
fwait
pop
add
pop
pop
call
jge
test
comiss
pop
lock
mov
pop
jbe
add
lods
andb
add
adc
and
aas
mov
mov
out
dec
popa
iret
outsl
mov
add
xchg
pop
push
xchg
int
ja
cltd
lcall
stc
lcall
cmp
cltd
nopl
lea
pop
pop
jbe
mov
adc
clc
lock
and
xor
pop
add
aas
lock
cmp
repz
or
sub
xor
icebp
add
inc
rcrb
pop
adc
push
mov
lcall
or
addl
roll
add
stos
data16
scas
push
addr16
pushw
dec
sbb
or
xor
sub
xor
xor
xor
xor
scas
jnp
into
pcmpgtd
add
lcall
into
cltd
cmpsb
jmp
int3
bswap
int3
stos
jns
dec
rep
add
xor
pop
popf
imul
xor
shll
data16
shll
dec
into
ud0
jae
lods
decl
and
xor
rorl
or
popw
fstps
cltd
cltd
jmp
int3
cmpsl
imul
into
je
pushl
je
out
or
pcmpgtd
int3
int3
pop
int3
int3
lcall
int3
int3
int3
popf
jae
imul
pushl
je
dec
addr16
xor
xlat
jmp
int3
decl
xor
call
xor
xor
add
cwtd
sub
dec
int3
pop
xor
cltd
daa
jge
jl
data16
pop
jb
loopne
add
push
lret
cs
lret
in
mov
xlat
add
add
add
xchg
push
mov
clc
dec
pop
pop
shlb
jge
push
xorl
add
fwait
fwait
lcall
mov
inc
js
inc
or
mov
mov
jno
movq
jmp
push
inc
inc
push
push
jl
and
outsb
push
ret
pop
cmp
cld
sbbb
jo
or
jo
popf
fldl
lahf
mov
add
imul
mov
add
or
sbbl
lahf
xor
add
add
adcl
mov
lock
enter
loopne
popf
cmpsl
addb
add
inc
add
incl
lods
roll
pushf
add
jl
in
jo
add
pop
cld
or
lret
mov
pop
adc
and
les
xchg
mov
insb
dec
dec
popf
filds
aas
adc
movsl
mov
inc
dec
xchg
add
push
addb
ret
mov
add
fcmovu
nop
insl
add
and
mov
adc
fdivrs
fists
pop
add
sbb
jnp
fs
fidivs
jne
pop
fs
or
jl
pop
ret
adc
pop
outsb
pop
pop
mov
incb
inc
std
lret
in
mov
clc
out
dec
insl
xlat
jge
pop
or
adc
sbb
add
or
pop
and
mov
mov
dec
shll
inc
cmovo
pusha
jmp
pusha
pusha
cmp
andb
mov
imul
insl
ud0
jo
lcall
and
and
insl
data16
and
insl
lcallw
test
lcall
and
and
cmpsb
imul
mov
jmp
add
inc
inc
mov
dec
shrl
cld
jg
inc
inc
inc
adcb
inc
inc
stos
push
push
int
xor
sbb
add
dec
mov
fisubrs
add
dec
cltd
leave
add
call
add
int3
jecxz
push
stos
test
stos
jmp
shrl
das
cmpw
testl
sub
ud0
shll
jg
sbb
add
sub
pop
movsb
xor
push
xor
jb
xchg
call
aad
or
aas
lods
mov
icebp
outsl
add
sub
adc
or
pop
mov
mov
push
data16
or
lods
bound
and
movsl
and
clc
popa
and
add
pop
or
das
pop
push
pop
sub
aas
push
pop
subl
pop
pusha
adcl
lds
roll
jg
decl
push
and
push
mov
dec
inc
icebp
nop
popl
dec
jo
jo
fdivrl
mov
lock
jns
ljmp
nop
add
fst
mov
or
outsl
add
add
add
adc
sub
add
pop
add
or
push
push
add
ficoms
lldt
adc
adc
mov
adc
adc
movlps
adc
or
dec
xor
add
movups
adc
pop
insl
mull
sbb
jno
repz
push
push
or
add
pop
adc
or
or
mov
adc
add
imulb
add
or
add
or
or
neg
or
sysret
add
or
add
mov
add
insl
setnp
pop
wbinvd
das
add
pop
testb
xorb
push
fcomps
add
mov
mov
repnz
adc
pop
jb
or
or
or
xchg
lret
in
adc
push
add
and
sub
call
inc
fcmovne
lods
inc
add
cmp
aaa
lret
adc
inc
out
xchg
add
fucomi
sbb
out
or
out
test
pop
dec
adc
add
in
pop
testl
test
int3
dec
call
add
add
loope
push
pushf
int3
push
enter
jmp
inc
adc
out
mov
adc
adc
add
popa
push
stos
pop
adc
ss
push
test
add
stos
mov
lahf
jge
addl
nopl
sbb
or
pop
or
lods
mov
push
and
test
test
adc
push
mov
les
aas
imul
lsl
clc
add
pop
lock
in
int3
lock
jmp
data16
decl
pop
adc
pop
enter
adc
add
add
icebp
pop
int
fldcw
testb
adc
jl
push
orl
push
pslld
mov
in
in
mov
scas
pop
rolb
add
out
add
repnz
add
clc
jg
sti
jl
notl
clc
push
add
lock
ja
insb
shrl
add
add
xchg
jg
add
cs
or
pop
sbb
xchg
mov
sbb
pop
in
out
push
hlt
pop
nopl
adc
cmp
fwait
insl
fsts
and
pslld
or
mulb
cli
movups
stc
jnp
or
sbb
fisttpll
pop
adc
sbb
in
pop
adc
jnp
loope
jg
pop
jnp
jnp
hlt
and
sbb
and
inc
mov
inc
xor
sub
xor
sti
add
jmp
repz
cmp
or
add
push
add
push
sbb
push
dec
ds
adc
sbb
sbb
or
jmp
add
int
out
sbb
stc
or
cli
pop
mov
sub
div
adc
pop
push
jmp
push
xorl
push
adc
orl
dec
jp
shl
jle
add
add
add
rorb
pop
lcall
incb
add
addl
push
jg
and
rcl
fsubrp
fadd
push
push
shlb
rol
mov
dec
repnz
mov
lock
stc
maskmovq
les
in
and
adc
jbe
add
push
push
jg
add
xor
pop
jg
pop
popl
jb
xor
rcpps
or
add
or
and
push
add
pusha
arpl
adc
and
maskmovq
negl
arpl
cvtps2pi
adc
prefetchwt1
mulps
pop
adc
push
push
test
mov
or
pop
add
test
nop
fistl
xchg
rolb
loopne
push
movsb
add
push
dec
mov
jg
push
stos
or
leave
ja
addb
hlt
adc
mov
inc
sahf
or
pop
adc
add
in
add
push
xchg
add
psubusw
in
add
sub
pop
bound
out
add
push
xchg
scas
sbb
or
add
ret
stos
test
add
xor
inc
sbbb
stc
invd
and
cmp
and
rolb
pop
and
cmp
adc
mov
add
fsubrs
add
pop
or
ss
adc
ret
fdivl
sbb
sbb
jnp
cmovg
pop
ss
fwait
or
sub
fbld
sbb
or
inc
push
push
sti
add
lds
or
mov
push
add
aas
add
push
inc
pop
add
pop
mov
decl
in
dec
pop
xchg
xor
mov
pop
adc
cmp
stc
add
pusha
pop
movups
int
hlt
mov
in
xchg
push
pop
lcall
lret
add
lahf
inc
and
jg
jle
xchg
mov
xchg
aaa
add
test
mov
jbe
add
sbb
add
in
add
lds
add
pop
push
stc
jg
lods
test
add
mov
shl
mov
cwtl
cltd
arpl
test
add
push
jo
jg
mov
rcl
add
fcompl
mov
mov
sbb
adc
mov
daa
outsl
ss
push
add
mov
pop
pop
and
enter
and
mov
enter
or
or
add
add
or
add
push
xchg
xor
sub
lret
jge
cmp
or
add
cmp
add
iret
out
decl
test
jge
in
loopne
dec
cmp
add
add
insb
push
add
inc
je
jae
add
cld
jg
aas
and
or
pop
nopl
movl
daa
call
xchg
sub
jge
adc
ltr
push
push
push
call
icebp
mov
pop
pusha
popa
pusha
lret
int3
int
add
jmp
add
xlat
stos
stos
cmpsl
stos
add
push
add
add
enter
add
into
icebp
repnz
jg
aaa
dec
js
js
cltd
fwait
add
repnz
in
in
cld
std
repz
mov
mov
add
sbb
add
mov
int
ljmp
jbe
cli
push
fcmovnu
outsb
aas
add
fcoml
fcomp
paddusw
adc
add
sub
mov
std
mov
xchg
xchg
xchg
xchg
sub
adc
add
mov
or
add
in
out
mov
jo
add
add
sbb
push
add
push
cmpsl
dec
dec
aaa
test
or
or
jnp
imul
mov
adcb
mov
lods
lods
testl
arpl
add
iret
mov
sti
nop
add
jp
lcall
inc
add
pusha
pop
add
mov
pop
aas
mov
inc
add
insb
add
outsb
cld
or
add
sbb
pop
pop
fildll
lahf
notl
mov
pop
addr16
xor
add
aaa
aaa
add
sub
add
nop
push
sub
sbbb
jp
inc
lcall
out
push
jmp
add
jecxz
fcomp
push
dec
ljmp
pop
in
insl
scas
mov
sub
pop
data16
lods
xchg
add
pop
bound
and
mov
outsb
pop
jg
loope
adc
arpl
pop
mov
outsl
add
pop
insl
mov
add
pop
and
pop
call
xor
dec
inc
inc
pop
sub
add
addb
fidivl
xor
add
mov
add
jo
jb
jae
jne
sub
mov
ja
jae
pcmpgtb
addr16
pop
movb
popa
bound
pop
std
dec
jle
push
push
pop
pop
pop
dec
dec
xor
dec
mov
push
push
or
aas
inc
inc
inc
push
inc
inc
inc
dec
dec
cs
sub
cs
xchg
xor
outsl
mov
sbbl
and
lcall
or
adc
adc
adc
add
inc
stc
pop
or
inc
leave
xchg
rorl
inc
add
add
sbb
out
pushl
andl
pop
and
pshufw
xchg
addl
jg
hlt
or
ret
loopne
pop
mov
jnp
scas
adc
fucom
ja
xchg
mov
pop
pusha
xchg
dec
xchg
rorb
inc
iret
roll
add
sub
mov
je
inc
sti
cmpsl
mov
mov
in
call
inc
xlat
enter
push
pop
mov
inc
add
inc
fldt
ret
add
pop
push
push
add
aas
fldt
rcrl
dec
add
ds
loop
clc
mov
mov
add
jg
pop
mov
in
and
out
add
cld
or
insl
bound
stc
repnz
jmp
mov
dec
jae
daa
jbe
jo
push
outsb
sub
jecxz
pop
orl
and
sbb
aaa
pop
scas
jecxz
add
and
sub
pcmpeqd
in
and
add
and
xchg
insl
outsl
outsb
dec
adc
cmpsb
stos
sbb
rorb
adc
mov
test
inc
jnp
jns
add
imul
jge
jle
sub
jnp
addr16
and
dec
sbb
cmpb
xor
test
orl
dec
mov
cmp
addl
test
mov
in
leave
sbb
mov
lcall
test
and
jmp
ja
mov
scas
jle
mov
imul
fs
shll
stos
testb
push
mov
iret
test
fisttpl
in
shrl
into
js
fistpl
loope
pop
mov
inc
std
mov
int3
inc
stc
or
rol
stos
cmp
cmp
fildl
je
imul
lea
pop
xlat
fcomip
ljmp
xchg
ja
or
adc
xchg
rcl
into
sbb
cmc
add
lds
mov
test
push
dec
push
rcrb
pop
or
mov
sub
inc
xlat
cs
addl
dec
lret
fildll
push
push
into
enter
scas
call
mov
sub
shrl
sbb
jne
out
mov
fsub
jecxz
lret
test
push
cmpb
loop
mov
fwait
or
add
mov
xchg
sbb
scas
test
mov
pop
pop
pop
fisubrl
enter
lods
ret
pop
mov
ljmp
fmul
adc
mov
loope
shr
jg
imulb
jp
push
and
xor
sbb
inc
push
mov
call
lods
fisttpl
sarl
sub
xor
jnp
jb
xor
arpl
dec
push
daa
rcll
lret
mov
cmpsl
ret
add
aas
mov
mov
stos
xchg
shll
jno
js
outsl
sbbw
sbb
in
fildl
pop
and
pop
or
movsl
sahf
pop
rcll
lret
jns
call
fiaddl
pop
mov
fildll
movsl
jbe
mov
mov
out
aas
test
outsl
lock
test
popf
xchg
mov
les
sbb
mov
mov
push
adc
js
dec
inc
inc
or
sbb
xchg
orl
cmp
adc
bound
xor
jae
es
mov
ror
or
or
in
jbe
adc
add
add
dec
adc
insb
adc
push
popa
and
inc
inc
out
fimuls
or
inc
xor
jnp
pop
jae
pop
scas
push
in
repnz
push
es
add
jle
push
enter
sbb
adc
add
add
push
push
push
inc
or
and
pop
imul
loope
jbe
or
pop
shll
xchg
jno
mov
lock
dec
pop
lsl
inc
add
push
sbb
mov
repz
jnp
mov
outsb
icebp
sbb
adc
sbb
pop
add
not
or
loop
add
sbb
sbb
loop
sbb
sbb
xchg
and
pop
inc
aad
push
adc
das
fcmovnu
pop
rclb
adc
and
and
pusha
sub
adc
push
sbb
faddl
sbb
and
or
rolb
mov
or
rcrl
inc
xchg
or
mov
mov
mov
mov
repnz
pop
push
outsb
add
cmp
shll
daa
lret
add
xor
inc
xchg
push
iret
add
and
sub
push
add
sub
fs
inc
add
fldcw
pop
lock
add
out
dec
adc
addl
adc
sbb
mov
and
add
push
mov
inc
fdivrp
mov
sti
adc
pop
add
cld
pop
sti
fldt
cmc
jne
aaa
pop
stc
popl
outsb
loope
pop
fsubl
add
insl
je
sti
xor
lgdtl
cld
fildl
add
cs
out
add
mov
ljmp
movntq
push
clc
or
arpl
add
enter
add
psubw
adc
add
push
push
adc
dec
xor
push
or
adc
push
adc
adc
mov
addr16
adc
cmp
push
mov
xor
or
or
add
in
jae
or
or
imul
add
mov
das
nop
or
add
adc
xor
or
or
inc
sti
cld
pop
mov
popf
adc
rolb
and
fidivrs
das
aaa
jg
adcl
or
add
and
call
call
outsb
pop
lahf
mov
xlat
icebp
add
out
add
or
add
cli
std
je
jle
mov
movsb
das
jmp
mov
mov
cmpsl
stc
add
cmc
sbb
push
push
push
or
mov
or
daa
stc
adc
or
adc
or
add
or
or
adc
adc
xor
mov
or
add
adc
add
push
ss
jg
adc
movups
jbe
or
add
push
push
pusha
sub
das
in
or
or
adc
add
add
adc
push
or
adc
adc
scas
imul
push
adc
adc
push
adc
push
cmc
xorb
push
adc
pop
add
push
adc
or
addr16
fdivrl
lcall
dec
pop
pop
pop
gs
pushl
cs
outsb
jns
push
int
xchg
lret
fwait
xor
orl
stc
decl
lret
jle
add
clc
mov
pusha
movsl
jle
movsl
inc
daa
sub
jle
add
cmp
gs
cmp
push
and
xchg
pop
enter
adc
sbb
test
adc
or
fdivrl
add
pop
sbb
push
popa
sbbl
push
fwait
xor
pop
jecxz
or
add
adc
push
pop
icebp
icebp
inc
loopne
aaa
pop
in
repnz
mov
into
gs
sbb
mulb
rolb
xorl
scas
add
fcoml
cmpsl
cmpsb
pop
lahf
inc
pushl
add
sarl
nop
xchg
add
std
adc
idivl
sti
mov
cmp
or
jg
mov
aas
jle
add
fwait
sub
mov
push
pop
inc
add
add
outsb
fistl
mov
cmc
add
sub
pop
add
pop
add
repz
push
add
lea
repnz
sbb
sbb
mov
fmuls
or
add
dec
adc
xchg
mov
and
sbb
and
pop
bound
xchg
or
or
fisttpll
cs
or
add
popa
lgdtl
add
jnp
aaa
or
add
pop
add
movups
adc
and
push
fldcw
aaa
addb
pop
pop
pop
mov
insl
dec
nopl
or
push
adc
xor
sbb
pop
notb
push
or
or
pop
or
pop
sbb
sbb
add
and
or
jg
and
jg
in
cmc
stc
add
out
add
loope
add
lds
add
inc
inc
fwait
insl
sti
movsl
loop
rcr
mov
movsb
jb
pop
cmpsb
out
jg
les
push
das
loop
add
lahf
push
lret
add
mov
mov
xor
dec
jg
fs
das
lock
jle
mov
xchg
cmp
xchg
fcompl
sti
fstpt
add
xchg
add
push
mov
shlb
les
add
sub
outsl
aas
jae
inc
xchg
xchg
or
pop
mov
push
xorl
sbb
sub
in
subl
add
or
push
pop
jae
xor
push
or
fisttps
sbb
push
and
push
adc
push
and
and
sbb
mov
push
sbb
inc
jg
pop
and
and
or
or
xor
pop
mov
mov
adc
push
pop
data16
add
jge
push
add
jne
xchg
lea
subl
pop
dec
test
sbb
mov
in
insb
fistpl
sub
sbb
cmp
adc
fisubs
shlb
cmp
sbb
xor
and
push
rolb
call
mov
jle
dec
add
add
clc
stos
cmp
sub
xchg
xor
xchg
mov
js
and
and
sbb
adc
out
sbb
mov
sub
cmpl
jnp
stos
mov
sub
rcl
and
aas
inc
in
and
insb
push
push
sub
enter
xor
cs
push
or
dec
inc
mov
add
xchg
add
and
inc
mov
subb
inc
cmp
mov
mov
xor
add
inc
add
adc
pop
add
or
test
movsb
fldt
out
add
inc
push
lods
scas
push
add
aaa
pop
and
in
add
dec
adc
stos
scas
pop
lea
scas
adc
adc
sbb
sbb
cmp
xor
aas
lock
andnps
test
push
fistpll
lret
cmp
btrl
mov
dec
xchg
add
push
ret
add
sti
sub
add
dec
add
lods
inc
popl
call
mov
mov
call
jge
inc
cs
push
or
cmp
pop
dec
iret
and
xor
mov
inc
push
or
lahf
push
stos
dec
add
ljmp
and
pushf
in
je
lret
aas
and
cmpsb
das
sbbb
lret
inc
adc
cmp
sbb
sbb
add
or
push
mov
push
out
jmp
aas
pop
pop
movl
inc
add
xchg
aas
add
push
adc
ljmp
frstor
lods
mov
dec
imul
scas
jmp
mov
sarl
pop
pop
add
andb
nop
pop
push
fcoms
addr16
cmp
inc
mov
dec
es
mov
xor
ja
sti
aaa
jne
dec
mov
jb
gs
gs
inc
imul
gs
inc
imul
out
outsl
jb
adc
imul
jae
and
sarl
outsl
jae
or
js
cmp
inc
jb
incl
push
jns
push
sbb
jp
or
iret
fimuls
arpl
and
add
dec
outsl
incl
daa
dec
popa
dec
inc
insb
inc
fs
jnp
andps
jo
xchg
push
jae
mov
repnz
jne
arpl
push
arpl
mov
mov
inc
outsb
inc
or
jns
pause
xchg
je
mov
pop
push
xchg
or
gs
insl
jae
jbe
outsl
bound
jle
or
adc
outsb
je
pop
popa
fs
pop
jmp
aam
sbb
mov
fisttpll
popa
cmpsl
mov
jb
and
fists
sub
popa
dec
jno
adc
push
push
dec
popa
divb
mov
je
inc
jns
outsl
push
imul
cmp
testl
inc
movsl
popa
lods
lock
dec
gs
mov
clc
jnp
jbe
push
sub
adc
or
popa
xor
in
sbb
sub
fldcw
or
imul
jle
decb
popa
addr16
pop
ret
dec
popa
jae
gs
rclb
xchg
inc
push
mov
mov
sbb
inc
outsl
insl
insl
outsl
outsb
lea
insl
arpl
insb
push
push
inc
pop
mov
inc
out
js
lods
jo
pop
inc
push
movsb
dec
jne
ret
pop
sbb
pop
jnp
imul
lret
mov
pop
add
sbb
add
or
push
imul
jns
or
xorb
or
pop
jo
mov
add
outsb
test
insb
adc
or
jbe
jae
cmpsl
outsb
or
inc
imul
lea
inc
inc
sti
test
adc
in
inc
jb
jae
adc
jg
push
sbb
sbb
sbb
xchg
inc
adc
inc
mov
ret
inc
or
push
loopne
divb
jno
pop
adc
dec
jo
jo
sub
movsb
pop
xlat
movsb
cmp
in
pop
popa
mov
add
outsl
sbb
xchg
jge
shll
mov
dec
aam
dec
inc
push
mov
adc
pop
test
xor
cmp
mov
sbb
cmovns
mov
aaa
insb
les
in
pop
dec
outsl
sbb
xchg
adc
shl
sub
inc
mov
mov
mov
scas
in
outsl
xor
arpl
insb
addr16
jo
sbb
addr16
jo
roll
xchg
pop
ret
jl
sbb
push
imul
xchg
adc
sbb
imul
ljmp
dec
inc
outsl
js
adc
negb
add
adc
shl
fidivs
inc
or
outsb
popa
mov
or
shll
inc
imul
adc
push
ja
jb
pop
ret
dec
pop
icebp
dec
mov
ret
fwait
int
and
lea
lret
fiadds
test
dec
push
jns
inc
adc
arpl
ret
rcll
mov
sbb
push
inc
pop
push
loope
inc
jb
or
cwtl
sbb
and
or
or
cwtl
aam
insb
mov
je
sub
movsl
mov
mov
out
popa
or
mov
imul
arpl
and
loope
sbb
cmp
ds
lods
and
cmp
fiaddl
fists
inc
sbb
aaa
jae
lahf
adc
or
add
xlat
pusha
inc
cpuid
ret
fisubl
or
fbstp
or
movd
inc
xor
jae
push
cmp
and
test
fs
xor
mov
cmp
test
je
sti
inc
sbb
sbb
arpl
cmp
inc
mov
in
es
push
inc
inc
jae
arpl
cmovs
sbb
push
je
and
push
aaa
xor
mov
arpl
bound
sbb
add
add
add
fstpl
or
mov
nop
sbb
dec
stos
xchg
pop
rclb
or
jge
imul
add
or
jne
add
jnp
xor
pop
push
addr16
mov
cmp
mov
adc
add
jo
je,pn
or
mov
pop
roll
insl
popa
sti
push
adc
nop
outsb
adc
rcrb
dec
rcr
bound
daa
dec
inc
lock
shrb
dec
jae
or
repz
repz
fmuls
cld
mov
xlat
enter
add
add
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
