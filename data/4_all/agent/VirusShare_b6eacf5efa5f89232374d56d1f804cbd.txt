adc
add
add
mov
add
add
add
add
cli
jmp
inc
mov
in
and
jnp
and
cmp
out
dec
insl
mov
sbb
ja
loopne
xor
jl
sar
out
inc
es
add
cwtl
jns
sub
add
orb
push
mov
bound
leave
int3
cli
push
mov
sbb
hlt
lock
mov
outsl
inc
and
push
xor
push
lret
leave
mov
add
xchg
jle
add
adc
xorb
jb
push
cmp
sahf
push
daa
fsubrp
or
shlb
cltd
dec
add
pusha
scas
cmp
mov
shll
inc
mov
call
lods
gs
xchg
cwtl
pop
sub
dec
push
daa
pop
lret
jae
sahf
ja
outsb
test
cld
dec
pop
xlat
mulb
test
out
sarl
daa
jp
jle
mov
lret
add
ficompl
call
add
loope
xor
push
imul
nop
lret
fisubrs
and
incb
lret
fnstcw
les
enter
mov
xchg
fsubrl
push
ret
fdiv
jne
pop
js,pn
gs
out
jo
jbe
sub
rolb
xchg
xorb
imul
imul
nop
push
fistl
dec
mov
sub
repnz
push
sub
mov
lds
cmpsb
xchg
push
jmp
or
in
adc
stos
add
lahf
mov
flds
addl
sub
jl
inc
repz
mov
or
test
andl
lds
mov
pop
cli
or
mov
ret
sub
dec
dec
mov
out
scas
scas
push
jae
pop
fadds
and
xchg
mov
pop
int3
and
push
mov
bnd
mov
rorb
in
or
inc
scas
push
and
pop
mov
push
or
pushf
inc
ljmp
dec
in
shlb
xchg
sti
popa
mov
push
xchg
in
mov
arpl
outsl
cmpsb
xorb
jae
jmp
xor
es
fldt
mov
adc
test
pusha
scas
xchg
push
push
push
shl
xor
insl
pop
popf
hlt
cmp
inc
imul
aas
ret
pop
add
xor
push
cmpsl
imul
loop
jmp
sub
cmp
in
dec
insl
aam
jg
jne
repnz
stos
cmc
mov
push
popa
jg
mov
adc
lods
test
loope
inc
mov
clc
fists
pop
sarb
repz
hlt
and
push
cwtl
push
stc
aas
xor
adc
enter
adcl
shrl
fsubs
iret
and
sbb
add
outsl
cmpsb
adc
scas
inc
cltd
jp
pop
mov
arpl
cmp
jge
sub
fcomi
movsb
ffree
sub
hlt
lret
aam
mov
jmp
ss
inc
das
xchg
or
xchg
cs
cmpsl
cld
adc
mov
mov
in
insb
ret
add
cwtl
adc
jno
sub
push
imul
stos
out
andl
xor
js
sub
sub
push
les
test
push
push
xor
dec
xchg
xchg
std
vpshab
sarl
cwtl
jnp
mov
and
lahf
dec
test
ds
xor
lcall
xchg
xchg
int
stos
scas
stos
push
lods
imul
popf
mov
ss
aaa
gs
cmc
push
mov
inc
xor
inc
vcvtss2si
or
sbb
mov
mov
adc
xorb
popf
cwtl
stos
negb
rcr
jle
inc
add
push
sub
pop
and
sti
lahf
aad
je
insb
jne
dec
ss
adc
inc
ret
xor
dec
in
cmp
roll
test
or
test
sub
lahf
or
cmp
divb
in
sbb
cmp
inc
mov
lretw
dec
loopne
imul
hlt
mov
repz
cltd
xchg
testl
test
pop
cmp
ljmp
pop
mov
fisubl
or
xchg
rcrb
cmpsl
cmpsl
mov
fcompl
sub
inc
mov
out
imul
mov
sbb
xchg
xchg
mov
popa
push
bound
test
xchg
dec
pop
and
sbb
int
test
dec
push
int
icebp
mov
ja
sub
xor
jp
mov
in
jge
dec
inc
stos
jl
add
jle
cmc
and
std
adc
out
fsub
sub
call
mov
shlb
xchg
das
mov
sbb
pop
xor
sub
xor
pop
popf
cmc
or
add
pop
mov
jl
call
mov
mov
loope
sbb
insl
mov
imul
clc
or
sub
push
lahf
add
inc
pop
jne
push
test
jp
fldenv
stc
fmuls
cmp
mov
mov
mov
mov
movsl
pushf
mov
aaa
jns
pop
cli
push
jmp
dec
or
outsb
loop
jnp
leave
push
pop
std
int3
sbbl
andb
das
clc
hlt
scas
pop
adc
shl
aam
loopne
gs
paddsw
shll
stos
insl
sub
sub
cs
sub
xor
mov
leave
fsubs
inc
jb
rcll
bnd
popa
stos
les
gs
repnz
daa
push
xor
pop
sti
add
jecxz
ret
inc
jl,pn
xchg
add
es
mov
shlb
cmp
mov
fwait
or
aaa
mov
fmuls
sbb
les
and
lahf
imul
mov
push
lret
cmp
dec
out
fwait
sbb
les
dec
cmp
loop
pop
mov
mov
js
push
fs
popa
mov
jbe
dec
je
loope
jne
lahf
hlt
gs
pusha
lret
repnz
nop
push
sub
sarb
xor
mov
and
add
adc
addr16
jo
mov
dec
jae
pop
std
ss
mov
nop
push
popf
dec
in
inc
shll
imul
mov
std
lcall
adc
cld
mov
or
mov
andb
loopne
push
out
rorl
pop
dec
in
xor
psrad
pushf
inc
out
pop
lods
pop
inc
pop
stos
xchg
mov
cmp
sti
mov
mov
ss
popa
mov
in
shlb
fistpl
loop
or
or
sub
xor
push
push
adc
cmp
mov
fsts
into
fildll
rorb
out
pop
cmp
jecxz
gs
mov
mov
and
fidivs
inc
ret
in
int3
adcl
add
xor
mov
xorps
sbb
popf
lret
aad
mov
mov
mov
ret
or
sbb
mov
pop
xlat
inc
jne
sti
rcll
and
nop
addr16
lds
aad
mov
cmc
push
dec
mov
xor
or
adc
rcll
loope
loope
cmp
dec
pop
push
nop
push
dec
cmp
cmp
in
xor
cli
aam
loope
add
xor
int
xchg
and
adc
movsb
sbb
sub
pushf
idivb
inc
stc
inc
pop
jle
insb
popl
pusha
sub
jb
xor
in
xor
add
and
int
std
mov
push
or
dec
js
add
add
cld
pop
lahf
movsl
pop
dec
outsl
mov
push
aad
cli
jb
inc
mov
add
xchg
cmp
shr
mov
xor
cmp
movsl
shlb
xchg
jge
sub
sub
xor
or
add
mov
testb
ret
cltd
sub
mov
aas
leave
sbb
scas
mov
ret
ret
subb
cmpsl
insl
xchg
out
gs
xchg
les
fucomp
int
jle
lret
pop
aad
rcll
sub
jmp
cmp
jno
in
ja
imul
ret
addr16
mov
es
es
icebp
pop
xchg
sbbb
sbb
jbe
xchg
mov
mov
or
lret
sub
mov
std
xor
insb
and
jmp
cmp
hlt
xchg
leave
imul
xlat
jbe
pop
xchg
add
loope
cmc
loopne
gs
ror
xchg
mov
mov
xor
int
rcll
jnp
mov
das
lods
dec
add
add
xchg
sub
dec
loope
test
xchg
mov
pop
shll
das
xor
sub
test
or
add
inc
sarl
pop
push
dec
nop
les
popf
inc
sub
mov
das
rolw
nop
adc
pop
mov
inc
xor
lods
push
mov
hlt
stos
popf
mov
lods
sub
cmp
mov
out
ror
cld
dec
and
dec
cld
inc
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
jne
or
cwtl
adc
outsb
fidivrs
lret
push
add
pop
xlat
popa
push
nop
jne
mov
mov
jg
iret
jmp
mov
addr16
in
movl
pop
es
adc
sbb
mov
call
and
mov
push
cmp
testb
push
push
mov
aad
mov
cmpsl
outsl
cwtl
insb
sbb
std
push
nop
mov
mov
xor
jb
loop
arpl
jmp
scas
pop
bound
aam
mov
pop
enter
aaa
icebp
or
mov
xor
lods
jo
xor
inc
stc
adc
cmp
iret
inc
inc
cwtl
inc
int3
pop
xlat
mov
in
pop
dec
adc
mov
fadd
xor
push
fimuls
stc
rcll
xor
repz
xor
mov
mov
jns
lcall
lret
popf
ja
xchg
xchg
addr16
inc
loope
push
ret
mov
push
add
lock
loope
outsb
cmp
imul
sarl
jo
push
outsl
mov
jo
mov
test
pop
pushf
outsb
jns
mov
mov
hlt
movsb
and
jb
out
imul
rcrb
stos
mov
sbb
into
sbb
lds
out
add
add
popf
scas
sub
or
xchg
pop
ljmp
push
lcall
xor
sahf
sub
and
inc
mov
cwtl
mov
icebp
test
push
jno
pop
arpl
adc
sub
push
mov
add
add
out
in
in
jb
add
jge
imul
ret
std
scas
adc
jnp
icebp
mov
andl
fcmovb
dec
and
jo
cmpsl
in
add
lds
jns
jecxz
jmp
sar
or
inc
lret
lds
into
pop
xchg
xchg
push
mov
inc
sbb
orps
scas
xchg
jno
shrl
xor
neg
inc
jo
push
fwait
push
pop
sub
loop
imul
aad
jecxz
pop
add
or
scas
xchg
adc
xlat
xor
dec
sahf
out
leave
cmpsb
leave
inc
ficompl
inc
push
lds
push
scas
stos
mov
jge
clc
frstor
lods
mov
roll
jae
cmp
xchg
aam
push
adc
adc
mov
jmp
fs
push
lret
iret
pop
xchg
cmp
ljmp
je
lcall
mov
loop
loop
and
jbe
mov
lea
jecxz
cmpb
inc
lret
adc
jmp
lock
int
mov
cld
int3
mov
scas
loope
les
ret
repz
sbb
scas
fdivr
sub
add
pop
arpl
or
addr16
mov
pop
into
out
aad
sbb
xor
std
mov
xchg
push
dec
enter
mov
pushf
and
push
jo
add
mov
adc
ret
sbb
add
pop
pushf
mov
hlt
mov
call
lcall
pop
cmc
popa
jbe
push
data16
shr
mov
imul
out
or
dec
jno
mov
jp
add
mov
mov
lret
pop
push
jg
mulb
mov
clc
pushf
je
lods
dec
fadds
adc
jmp
jmp
ds
mov
inc
dec
mov
fs
dec
lahf
les
push
ret
out
pop
fbstp
and
xlat
cmp
or
fcmovnb
sbb
and
addr16
mov
sbb
dec
mov
mov
repnz
push
sub
notb
movsb
jp
mov
adc
pop
mov
sti
sbb
movsb
xchg
add
fists
scas
sub
xchg
jbe
out
pop
insl
mov
jbe
or
push
out
aam
push
in
das
inc
mov
scas
pop
out
push
repnz
jge
test
je
xor
adc
test
xor
inc
std
mull
jns
es
call
sub
mov
mov
mov
pop
adc
addr16
mov
fnsetpm(287
lds
sub
mull
dec
xor
push
xchg
stc
mov
cli
sbb
inc
sbb
pop
lcall
repnz
mov
dec
les
mov
and
sub
xor
sub
mov
cmp
cmp
mov
xor
enter
lahf
sahf
xor
add
rcr
bound
in
mov
test
and
add
out
sbb
mov
sbb
gs
testb
rorl
dec
aad
xchg
cmp
xchg
push
jg
pmuludq
cli
ja
enter
loopne
push
mov
mov
sub
add
mov
shll
xchg
pop
adc
jns
mov
sbb
dec
pop
mov
ja
jp
negb
mov
jnp
xchg
pop
shlb
pop
loopne
fists
aam
int
sub
pop
add
test
shl
dec
fisttpll
mov
xor
jmp
xchg
mov
mov
and
jb
call
pop
jmp
pop
xor
pop
mov
ss
rcr
sbb
test
cmpsl
inc
mov
jle
dec
roll
lret
lea
out
push
and
je
es
in
rep
xorb
adc
clc
lea
push
xchg
inc
shrl
mov
adc
daa
test
inc
shl
sahf
sbb
icebp
push
mov
push
or
aad
fcoms
jecxz
mov
push
out
sbb
in
sbbl
into
sbb
adc
xlat
push
test
out
jg
jmp
shld
repnz
sub
jno
xor
into
sarb
filds
mov
xchg
out
mov
loop
ljmp
les
xchg
stos
mov
xchg
out
shlb
int3
xchg
jge
push
sub
mov
mov
icebp
mov
packuswb
sbb
movsb
sbb
out
xor
sbb
sti
fdivrs
adc
pop
pop
lret
mov
mov
pop
inc
cmpsb
push
xor
sahf
cmp
divl
enter
iret
jp
aaa
jae
andb
fs
adc
adc
or
sub
in
add
sub
pop
sbb
movb
push
mov
or
cli
popa
dec
xchg
push
stos
or
aam
cli
pop
mov
mov
out
pop
and
dec
push
scas
push
cmp
ljmp
int3
movsl
push
sub
inc
mov
cld
adcl
inc
daa
add
fiaddl
fsubrs
mov
jnp
push
xchg
and
xchg
out
out
cld
pop
cmp
fistps
pop
stc
jo
sub
fucomip
cmp
sub
int
xchg
pop
repnz
ss
pop
lods
pop
jno
adc
testl
mov
xor
mov
dec
or
dec
mov
leavew
orl
push
jbe
cmp
orb
repz
add
push
imul
loope
rdtsc
and
jmp
jo
dec
push
cltd
movsl
popf
inc
mov
jbe
or
mov
sbb
std
cmpsb
aas
pop
rcl
das
sbb
xchg
in
scas
cmp
xchg
cmp
hlt
sahf
mov
fstpl
fsubs
in
out
leave
out
fisubrs
adc
gs
mov
nop
push
cmp
into
ficoms
les
add
int3
push
stos
mov
dec
push
std
cmp
mov
add
movsb
aaa
jae
inc
push
mov
aas
gs
mov
jl
popf
je
jns
in
adc
mov
add
adc
mov
das
dec
cmpsb
aas
loop
jne
inc
ret
fnstsw
cmp
and
add
xchg
sub
xchg
cmpsb
aad
pop
int
addr16
sahf
sbb
sahf
cs
jmp
pop
mov
jae
jl
jmp
adcb
and
fbld
cmpsl
in
sbb
xchg
mov
inc
pop
pop
and
lods
mov
clc
js
push
xlat
sub
cmp
int3
test
bound
xor
ret
mull
dec
pushf
cmp
jbe
mov
sbb
fcmovnb
and
es
std
sbbb
iret
je
jnp
insl
in
mov
inc
xor
add
ficomps
push
test
adc
mov
pushf
pop
pop
push
sahf
add
add
push
addl
lea
pusha
imul
or
and
mov
sbb
xor
and
xchg
bound
pushl
fldl2e
mov
icebp
push
push
and
jb
fisttpl
adc
insl
adc
push
scas
out
rorl
xchg
mov
es
movsb
pop
cmc
pop
orl
sbb
sbb
xor
adc
mov
xchg
mov
pop
mov
int3
shl
xchg
push
push
mov
cs
lds
stos
imul
jmp
pop
icebp
xchg
or
in
add
movsl
movb
test
outsb
fistl
cmpsb
mov
leave
imulb
cmp
mov
call
jge
lcall
rcr
das
sahf
push
inc
xlat
iret
and
inc
push
pop
lds
add
cwtl
push
and
pop
movsl
es
std
cmpl
mov
pop
push
sarb
push
shrb
test
leave
jmp
ret
push
push
aad
sbb
cmp
cwtl
mov
xor
fwait
pop
xlat
sbb
mov
jae
lds
roll
aam
hlt
add
pop
ret
lret
fcmovne
xchg
aam
push
mov
shrb
rolb
and
add
sub
mov
pop
sub
jo
repz
jae
cmp
inc
fwait
xchg
or
lods
add
dec
cmp
dec
cmp
mov
inc
jnp
repz
arpl
xchg
xor
imulb
pop
mov
sar
stos
aam
aam
add
xor
out
data16
push
jg
sbb
int3
mov
add
pop
es
push
add
jmp
sub
mov
call
jg
sbb
mov
cmp
xor
in
xor
push
dec
inc
loopne
inc
and
out
imul
adc
xchg
cmp
or
faddl
push
jg
inc
loopne
mov
push
loopw
mov
das
dec
pop
movsl
mov
in
mov
or
imul
sub
mov
je
mov
xor
inc
daa
add
ds
cmpl
les
jmp
push
lds
out
imul
orl
xor
xchg
rorb
outsl
loopne
xor
sub
xchg
cli
push
or
inc
jno
add
jle
std
cwtl
or
aas
rorl
outsl
or
aas
pop
sahf
fnstsw
arpl
cmpsl
ret
loope
jp
sub
fcompl
xchg
jno
jg
int
sahf
int3
cmp
dec
in
cmpsb
pusha
dec
cmp
scas
aad
xor
imul
in
cmp
in
cli
sti
mov
pop
mov
imul
pop
cmpsl
adc
push
jbe
sbb
inc
mov
iret
out
movb
jb
xorl
or
push
insb
mov
cld
je
loop
aaa
cmp
xor
test
pop
pop
mov
fidivs
xchg
aaa
negb
push
inc
mov
push
xchg
cmp
int3
jge
leave
push
int3
cmpsb
dec
inc
mov
pop
repnz
stos
jno
popf
pop
pop
pusha
testb
dec
mov
cli
push
nop
jle
push
cli
mov
lods
sub
and
js
mov
cmp
cmp
or
arpl
push
or
sbb
fcomps
inc
pop
mov
in
cmp
imul
and
daa
aam
xor
xlat
decl
data16
cli
sub
mov
cmpsb
adc
mov
jecxz
inc
cmp
push
add
jne
fldt
mov
mov
cmpsb
aad
xchg
pop
push
sub
xor
cmc
push
jl
cmp
in
das
pop
dec
call
out
pop
xchg
xchg
jns
mov
or
test
adc
jbe
incl
push
fiaddl
push
out
jbe
das
add
test
out
out
mov
in
lcall
aad
or
icebp
insl
lahf
orl
in
fsubl
sub
movsl
rorb
addr16
pop
mov
ljmp
mov
xor
xchg
adc
cmp
inc
loopne
or
inc
or
pop
push
mov
adc
fwait
add
loop
push
push
pop
iret
mov
pop
jae
das
and
sbb
popf
rclb
mov
jl
lret
cmp
stos
pop
enter
mov
push
outsb
sub
or
push
jecxz
ss
fisubrl
cld
and
mov
add
mov
sbb
add
sub
negb
aas
divl
cs
xor
fstpt
outsl
push
pop
movq
aad
add
add
lcall
leave
mov
jle
leave
inc
pop
popa
movsb
mov
sbb
dec
cmp
rclb
mov
das
cmp
sub
push
imull
addr16
sbb
jne
iret
adc
mov
addl
rcl
mov
decb
add
movsb
sub
aaa
rclb
jne
cmp
cs
dec
stos
mov
or
les
dec
mov
xchg
pop
aaa
mov
pop
mov
cmp
es
in
add
dec
xlat
mov
pop
popl
push
scas
jmp
jg
outsl
dec
cs
push
outsb
fcoms
aaa
clc
fcoml
mov
dec
lds
test
add
mov
mov
push
ret
dec
scas
imul
xor
mov
mov
dec
mov
sub
mov
pop
dec
into
inc
push
fs
fnstsw
pop
push
cmp
push
dec
jle
shlb
ja
test
enter
popf
add
adc
sub
mov
add
xor
push
fcomps
jb
movsb
aas
int3
adc
pop
fmulp
mov
lock
or
inc
or
in
jmp
jne
add
or
stos
ret
push
addb
xor
cmc
das
out
push
movb
inc
inc
jne
mov
sbb
or
stc
orl
enter
imul
xchg
or
fldt
push
xor
out
jo
sbb
je
movsl
lea
jb
push
mov
stos
dec
mov
mov
mov
jecxz
xchg
dec
xchg
mov
outsb
divl
inc
enter
js
lret
hlt
mov
stc
fst
xor
mov
mov
sbb
mov
or
add
ds
loopne
inc
loop
es
jb,pt
xchg
loop
add
sub
jmp
data16
or
add
rcl
and
call
pushf
nop
cmp
mov
leave
mov
pop
lea
mov
mov
rcll
insl
jae
push
fsubl
jmp
sub
dec
adc
jno
mov
sub
bound
pop
cmp
daa
out
push
mov
mulps
pop
in
mov
or
aas
push
cld
lret
lea
pop
xor
fs
jmp
bound
sub
and
and
nop
mov
ljmp
adc
push
clc
jns
movsl
rcrb
xchg
dec
cs
inc
push
inc
mov
and
leave
in
dec
xchg
inc
data16
mov
push
pushf
jo
ds
arpl
insb
test
ret
xlat
fbld
subl
stos
inc
or
cmpsl
mov
test
dec
cmp
insl
xor
pop
cli
test
mov
out
xchg
mov
dec
pop
das
or
or
inc
mov
aas
std
gs
jle
dec
xor
mov
loope
push
mov
inc
call
xchg
aas
rclb
jl
cs
dec
push
inc
andb
jbe
nop
fwait
jns
stos
jb
dec
dec
js
mov
call
and
cmp
inc
mov
out
xlat
je
addl
sub
sahf
dec
sahf
xor
pop
jle
fimuls
jo
bound
ljmp
xchg
cmp
out
dec
push
dec
jle
ret
repz
adc
in
adc
mov
dec
pop
pushl
lret
mov
leave
inc
adc
add
mov
xchg
fwait
lea
xchg
icebp
stc
cmp
sub
mov
sbb
pop
sbb
sbb
or
bound
scas
fcoml
fisttpll
sub
repnz
aas
xchg
mov
and
repz
lods
loope
cmp
adc
mov
push
jno
in
out
clc
adc
jl
mov
sub
cmp
xchg
outsb
ja
sahf
jl
popa
xchg
out
pop
push
lahf
push
push
sub
and
mov
mov
movl
shll
xchg
cmp
scas
mov
add
out
nop
fdivrl
fmul
lods
cli
loop
ljmp
sub
fwait
mov
xor
jecxz
mov
jle
pop
xchg
aaa
fidivrs
xor
or
ret
loop
jg
and
push
mov
mov
mov
cmp
sbb
mov
inc
stc
hlt
in
xchg
cmpsb
xor
outsb
xchg
cmp
adcb
addl
fs
jno
stc
andb
dec
icebp
and
shrb
into
out
lret
push
imul
lea
add
add
rcrb
cmp
jle
and
outsl
adc
xchg
xchg
lods
or
mov
or
hlt
sbbl
mov
sti
fwait
ljmp
and
adc
xchg
push
call
pop
xor
ja
scas
lea
cld
in
xor
icebp
cli
in
cmpsl
imul
add
xchg
fstl
cmp
cmp
std
andl
mov
rorb
hlt
jle
dec
movsl
aaa
lea
jae
shlb
pop
sub
fisttps
lahf
das
int3
iret
sbb
jnp
mov
mov
nop
bnd
pop
mov
es
clc
cmp
shl
into
pop
adc
fdiv
sub
jno
sbb
ret
xchg
sub
lret
xchg
pop
pop
xlat
test
mov
pop
jge
aas
shlb
mov
ret
cmp
rcrl
inc
jo
pop
xchg
mov
jge
lds
insl
dec
mov
xor
mov
sub
out
sub
daa
pop
inc
fistpl
mov
decb
inc
cld
xchg
add
scas
addl
or
mov
xor
jno
in
or
sub
cmp
dec
push
scas
cmp
cmp
cltd
push
pop
jmp
sub
notb
and
jl
inc
sub
or
enter
inc
out
mov
mov
and
outsb
sub
loopne
dec
mov
fstl
add
shlb
xor
mov
cld
stc
popf
rclb
enter
orb
dec
pop
mov
pusha
push
mov
scas
jo
clc
dec
lods
cmp
icebp
mov
addr16
je
rcll
jae
push
sbb
mov
jg
mov
lret
in
shr
lock
push
inc
mov
add
addb
and
pop
fcoml
dec
pop
in
sbb
sbb
push
dec
dec
add
and
jge
std
call
loopne
inc
aad
fldenv
inc
xlat
fcomps
lret
pop
xlat
mov
sbb
lret
xchg
clc
repnz
sbb
js
adc
fmulp
dec
or
out
subb
push
jbe
cmovge
adc
push
inc
xchg
repz
daa
andl
test
xchg
adc
dec
iret
pop
clc
xchg
insb
out
mov
cld
cld
ficompl
cwtl
addr16
das
nop
ljmp
sbb
pop
pop
clc
test
sbb
out
icebp
and
fmul
mov
fiaddl
outsb
cs
mov
dec
xchg
fisubrl
in
or
jno
mov
or
or
xchg
pushf
repnz
gs
sbb
mov
adc
cltd
push
out
mov
adc
aam
xchg
sbb
mov
sti
outsl
insl
cmc
pop
xchg
mov
pusha
mov
imul
adc
adc
popa
mov
push
repz
dec
andb
cmc
ss
idivl
cmp
mov
pop
lock
into
adc
daa
inc
popf
cmovns
add
adc
shrb
xor
test
fwait
sbb
jno
xchg
or
cmpb
jns
or
or
mov
xorl
sub
aaa
bound
in
push
nop
pop
sub
test
sahf
sbb
push
cmc
cmp
push
repz
xchg
daa
sub
or
mov
push
add
fsubrp
inc
pop
jmp
push
or
out
scas
icebp
rorb
mov
call
cli
in
cltd
ss
xor
cmp
cmp
insb
loop
das
mov
lds
xchg
popf
mov
or
ret
cmpsb
mov
xchg
inc
insb
es
xlat
mov
ja
and
adc
cmp
cmp
cwtl
fcomp
cmp
xchg
aaa
in
mov
add
divl
int3
out
push
mov
enter
mov
pusha
cmp
jl
push
cmp
ficoms
cmpsb
xlat
or
fmuls
mov
out
les
sub
sbb
pusha
rorb
pop
jae
sub
dec
fucom
lea
std
lret
stos
lahf
sbb
push
cwtl
push
xor
mov
ss
inc
mov
data16
and
cmpsb
imulb
inc
out
sub
xor
pop
ret
in
sbb
scas
xchg
sub
jge
jecxz
addr16
add
popf
cmp
sti
and
adc
pop
pop
mov
ret
stc
and
adc
xor
adc
insb
out
sub
mov
test
mov
test
mov
push
xorl
mov
int3
push
jle
push
icebp
jno
sbb
dec
lds
mov
sbb
mov
sbb
mov
xchg
inc
or
cmpsl
jmp
mulb
adc
cmp
lds
mov
pop
inc
inc
ja
movsb
into
popf
ss
mov
mov
loope
fidivrl
cmp
inc
lcall
pop
mov
outsl
das
popf
or
mov
ret
imul
push
jbe
jnp
fcmovu
aad
popa
call
mov
cwtl
insl
in
push
xchg
mov
out
stc
in
mov
mov
and
lret
mov
fcmovnb
jecxz
aaa
xorb
cs
add
xlat
ret
insl
mov
cwtl
push
pop
sbb
or
je
or
cmpsb
ja
xchg
sahf
push
aas
aaa
cmp
stos
push
jnp
jp
loopne
pop
movsb
enter
pop
movb
inc
cli
and
sbb
sbbb
mov
leave
or
cli
sub
jno
cmpsb
clc
pop
ljmp
mov
pop
cmp
ret
sbb
jbe
insb
cmp
in
pop
mov
loopne
cmp
je
popa
mov
inc
pop
mov
mov
mov
mov
enter
pop
imul
mov
test
bnd
inc
inc
repz
popf
insl
jns
mov
sub
cmp
xor
inc
xor
fcompl
mov
aas
mov
cltd
pop
pcmpeqb
jp
les
mov
and
mov
daa
jecxz
cld
or
dec
addr16
cs
mov
mov
or
mov
shl
mov
mov
test
orl
push
push
int
and
das
rorb
jl
clc
sahf
imul
lods
in
jmp
or
insb
pop
insl
outsb
in
jg
out
pop
mov
mov
daa
hlt
and
popf
jle
scas
in
inc
and
dec
jb
push
lret
dec
fimuls
popf
scas
sbb
mov
mov
ret
dec
adc
clc
jl
cmp
inc
in
arpl
das
sub
add
lcall
test
pop
inc
movsb
push
add
sub
mov
pusha
mov
sbb
add
outsl
testb
push
mov
cli
dec
xor
mov
sub
jl
xor
in
inc
and
or
sub
ja
mov
mov
repz
ficoms
cs
xchg
mov
sub
dec
shlb
push
pop
movsb
push
mov
mov
inc
stos
mov
hlt
and
bound
ret
jl
rcr
sbb
fnstenv
jge
inc
imul
mov
push
cmpsl
sarb
push
fildl
enter
xor
dec
push
pop
in
sbb
inc
in
fwait
add
mov
xor
sbb
imul
inc
daa
or
popf
std
push
fwait
xchg
mov
cmp
imul
lahf
les
ja
aaa
mov
fidivrl
xchg
jl
cli
out
stos
movsl
lods
xorb
cmpl
outsb
adc
adc
aam
cmp
mov
adc
aam
jno
add
lea
pop
nop
push
inc
arpl
popf
mov
lods
aad
call
pusha
pusha
xor
pusha
inc
icebp
pop
cmp
xchg
mov
cmp
xchg
mov
loopne
add
je
jbe
out
dec
xchg
test
pop
aam
push
repnz
mulb
adc
popa
pop
cmp
icebp
jecxz
xchg
xor
jg
cmpsb
pop
cmp
mov
push
pop
jnp
sub
mov
adc
mov
lods
fs
inc
call
sbb
dec
adc
or
xlat
mov
movsl
mov
rolb
mov
or
inc
repnz
ljmp
cltd
stos
mov
and
mov
idiv
les
repnz
je
and
mov
pop
lret
shr
dec
sub
fs
xor
push
icebp
mov
movsb
pop
xchg
xlat
xchg
pop
and
enter
test
out
inc
mov
pop
dec
adc
cwtl
dec
cmp
cmp
sub
and
leave
aas
mov
jb
adc
pop
insl
fdiv
xlat
lcall
xor
into
sub
jg
rcrb
fcmovb
sub
test
sub
stc
or
pop
pusha
pop
mov
pop
inc
iret
dec
and
fists
pop
or
js
lea
outsb
imul
mov
sub
jae
sahf
mov
inc
cwtl
inc
or
loopne
lret
pop
pop
mov
inc
jmp
inc
jbe
add
sahf
out
or
xchg
ficomps
cmc
pop
xor
cmc
inc
jo
call
xchg
test
push
test
jnp
or
leave
adc
mov
mov
inc
xor
mov
ds
cwtl
fisubl
cmp
cmp
dec
jae
sti
xor
jmp
mov
mov
imul
nop
or
arpl
mov
cltd
fwait
jae
cld
jb
lret
lock
cld
sub
push
ja
cli
mov
in
loop
adc
jecxz
adcb
andb
mov
das
fbld
mov
push
lods
int3
shlb
pop
lods
push
int
in
mov
inc
inc
ja
fistpll
mov
out
or
sbb
scas
xchg
cmpsl
rorb
fmuls
cmpsb
shll
movl
jp
jp
sbbb
ja
add
jmp
and
xor
int
mov
push
pusha
gs
jmp
push
mov
and
pop
mov
lret
call
cmpsl
inc
add
or
icebp
stos
rcl
enter
aaa
orb
add
cmpsb
mov
je
adc
add
or
loopne
inc
add
cli
jg
pop
push
hlt
mov
adc
cmpsb
push
pushf
fs
add
cmc
push
test
jge
pusha
inc
mov
cmp
jbe
arpl
fidivs
mov
cli
xor
xchg
test
insl
fsubs
insl
int3
jno
adc
repnz
movsb
xchg
pop
aam
lea
adc
xchg
clc
lds
xor
push
pushw
pop
mov
dec
adc
icebp
push
into
aaa
xor
lahf
pop
incl
loopne
or
mov
xor
pop
lret
dec
mov
pop
flds
inc
aad
out
push
adc
scas
or
push
xchg
inc
fnstcw
add
pop
pop
out
ss
and
arpl
xchg
mov
push
imul
adc
cmp
aam
sahf
cmp
orb
or
dec
jnp
in
scas
mov
jns
mov
and
aam
xchg
jae
fs
std
mov
and
out
sbb
sub
stos
fwait
imul
movsb
mov
aaa
sarb
shlb
nop
adc
fists
sbb
test
mov
leave
push
push
jg
into
sbb
push
das
mull
jl
lea
sub
or
les
adc
xchg
xor
dec
out
call
dec
sbb
inc
pop
and
psubq
or
add
into
aad
jbe
and
leave
inc
stc
fdiv
push
push
jl
pop
sbb
leave
pop
mov
cmp
test
icebp
inc
sar
rclb
repz
ds
mov
push
xchg
hlt
dec
ss
add
sarl
leave
xor
jns
pop
xor
push
mov
xor
bound
xchg
sbb
daa
mul
cmp
negl
inc
mov
mov
mov
mov
dec
dec
leave
pusha
cmp
mov
lods
bound
in
inc
mov
or
mov
jne
adc
mov
mov
jbe
mov
das
pop
cmp
ljmp
mov
sbb
ja
xchg
mov
jae
jmp
and
jle
in
dec
pushf
inc
mov
pusha
inc
cmp
imul
mov
xchg
stos
mov
sub
mov
push
ret
test
lahf
pop
push
fisttps
sub
or
pop
mov
lcall
enter
adc
test
out
pop
and
mov
cmc
or
adc
ss
xchg
scas
je
loop
pop
addl
mov
out
daa
cld
push
or
stc
enter
loop
mov
pop
push
push
mov
and
data16
jbe
mov
mov
mov
xor
icebp
mov
adc
sub
imul
pop
push
push
xor
jl
lds
xor
je
sub
jnp
jae
mov
xor
fsubrl
repz
test
mov
xor
int3
push
fisubs
mov
dec
and
or
jecxz
pop
bound
aaa
mov
or
sbb
inc
lds
xchg
jns
adc
sub
pop
pushf
adc
fdivr
pop
adc
push
sub
aad
lock
dec
addl
push
cmpsl
fwait
and
xor
jb
xorb
xchg
cli
stos
stos
pop
fistpll
cs
mov
jb
mov
stos
test
xor
insb
ds
xchg
push
ds
mov
movsl
arpl
inc
mov
loop
mov
movsb
std
rol
pop
mov
dec
adc
lock
or
dec
std
push
push
in
and
pop
or
push
or
inc
mov
out
add
add
mov
leave
dec
pop
lock
insb
lock
xor
add
add
add
lock
add
add
decl
add
lock
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
into
xor
popa
inc
push
roll
pop
cmpsl
inc
stc
cmpsb
cmpsb
je
sub
push
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
lock
adc
sbb
ret
or
mov
xor
lahf
shll
sqrtps
or
add
lcall
mov
push
push
push
jno
add
pop
sub
lea
inc
cld
add
add
lock
or
add
lds
lods
stos
and
nop
cmpl
add
jae
test
fmull
mov
dec
jnp
test
rep
out
iret
and
cmp
das
sbb
push
arpl
stc
lcall
test
call
add
dec
sub
xor
and
push
daa
mov
test
or
outsb
les
sbb
fwait
xchg
shrl
pop
or
and
nop
cmpsl
add
adc
test
xor
push
push
outsb
add
xchg
stos
sbb
or
cmp
pop
push
xorb
loope
xor
push
lea
push
aas
pop
push
mov
dec
es
sbb
enter
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
and
dec
pop
inc
mov
add
movb
add
jecxz
mov
ret
repnz
movsl
pop
push
sbb
sbb
adc
cmp
pop
pop
pop
pop
ret
xor
adc
cld
dec
mov
sub
loopne
push
add
lret
push
call
pop
push
movaps
jb
dec
sti
cli
jbe
add
fnstsw
ret
push
and
stos
pop
add
jmp
in
popa
lods
push
jne
lcall
cmc
call
shll
adc
sysret
add
add
cltd
or
rcrb
pop
push
aam
jb
leave
pop
or
or
or
and
push
and
pop
cs
movzwl
adc
jge
test
test
movzwl
xorb
jne
cmp
iret
jge
or
sbbb
push
cld
pop
sub
pop
shll
enter
sbb
sub
ret
shr
or
rclb
les
mov
out
or
enter
mov
outsb
cmp
stos
xor
and
push
cltd
pop
test
js
mov
pop
push
mov
adc
push
xor
fildl
data16
jbe
push
jo
cmpsl
inc
pop
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
jae
pop
jge
sub
xchg
clc
rorl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
xor
dec
push
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
ret
pop
lcall
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
rcrb
sahf
data16
push
inc
gs
dec
pop
adc
push
xchg
fs
sbb
stos
outsl
loopne
xor
ss
mov
call
cmp
inc
inc
jmp
repz
imul
insl
pop
sbb
sbb
lock
sub
mov
jl
sbb
add
test
shr
pusha
loope
push
lea
sub
adc
push
or
add
sbb
sub
jb
gs
test
sub
shlb
mov
and
scas
loop
adc
push
jnp
or
sbb
mov
lods
cmpsb
jmp
inc
jo
insb
imul
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
jns
mov
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
lcall
or
mov
cmp
jmp
push
xchg
cmp
dec
xor
or
push
jbe
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
lock
hlt
adc
add
ja
add
sbb
add
sbb
add
add
inc
add
lock
adc
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
