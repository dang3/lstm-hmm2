shrl
or
shrl
add
add
not
and
xchg
sub
inc
cmp
gs
push
cld
sub
jl
and
insb
cli
dec
dec
jmp
inc
je
call
xor
loop
les
std
loop
pop
stc
ret
push
fnstsw
mov
mov
das
fwait
pop
stos
xor
fidivs
jmp
repnz
aad
jno
sbb
sub
es
lods
mov
or
fucomip
pusha
xchg
lds
mov
in
cli
int3
imul
inc
fs
xor
data16
pop
ds
jb
orb
sub
movsb
cmp
js
ficoms
rcrb
xor
imul
shlb
test
outsb
mov
lock
scas
and
psllq
xchg
inc
int3
fidivrl
push
ss
sub
jl
fwait
mov
inc
lods
ss
fwait
jecxz
cmp
cs
mov
sub
js
sub
pop
adc
ss
xchg
pop
nop
mov
fstl
in
and
movl
mul
js
stos
push
add
inc
cmp
je
mov
aaa
cld
loop
out
enter
mov
sub
fcompl
add
fisubl
push
cltd
stos
adc
mov
xchg
mov
aad
push
mov
push
adc
add
add
xorl
loopne
lret
mov
enter
dec
dec
pop
scas
or
in
or
out
das
push
cmp
jmp
cmpsb
jmp
xor
fldt
pop
sbb
pop
test
je
xor
xchg
mov
dec
les
mov
pop
dec
ficoml
inc
lldt
cmpsb
shl
sbbb
pushf
stos
jecxz
imul
mov
mov
mov
xor
in
push
cld
jb
push
jne
test
loopne
test
shll
dec
adc
push
jno
fstl
divl
add
pop
dec
xchg
movb
jbe
pop
xorl
jecxz
cmpsb
sbb
mov
xor
push
sub
or
iret
rcll
call
mov
and
or
mov
in
inc
mov
popf
jae
daa
xor
cmpsb
push
or
dec
scas
sbb
xor
cmp
cli
into
fdivs
xor
adc
aas
pop
sbb
mov
int3
lahf
outsb
mov
fidivrs
mov
in
dec
or
out
inc
cs
push
dec
inc
cmpsb
inc
mov
pop
adc
ucomiss
inc
xchg
fdivrs
out
ds
inc
cli
inc
xchg
adc
xchg
repnz
add
xorl
and
flds
popa
lcall
xlat
std
or
bound
or
pop
roll
add
test
mov
and
pop
ljmp
imul
cmp
mov
cld
xor
push
adc
in
cmp
xchg
add
push
testl
pop
sub
icebp
jb
cwtl
pop
pop
adc
dec
popa
sbb
cmpsb
jnp
add
rep
mov
xchg
das
pop
test
dec
jecxz
pop
sahf
test
cmp
jne
jns
mov
sahf
std
pop
in
fstps
mov
jne
jns
pop
lahf
xchg
adc
imul
pop
cmpsl
clc
add
fcmove
mov
mov
in
sbbl
test
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
addr16
inc
hlt
popf
or
jg
cmpsl
add
es
cmp
jb
dec
out
jbe
add
dec
shll
adc
aaa
fistpl
and
in
adc
adc
mov
popa
adc
jb
mov
in
push
movsb
mov
dec
add
or
rcl
insb
mov
repnz
inc
sub
inc
or
mov
mov
lret
cmp
push
imul
cwtl
hlt
mov
sbb
and
or
or
jg
ret
sub
fsubrl
shlb
fisubl
or
aam
shll
pop
cld
mov
dec
fiadds
mov
cmp
add
dec
test
enter
cmp
inc
inc
pusha
js
mov
push
notb
dec
inc
or
pop
xlat
cld
adc
pop
lcall
cmpsl
jge
fcmovu
popf
or
mov
mov
pushf
into
mov
daa
movsb
shlb
xor
adc
arpl
and
push
mov
dec
ljmp
adc
xchg
int
or
aaa
xchg
insb
pusha
cmp
mov
inc
test
ja
aaa
mov
mov
or
push
fistpll
cmp
cs
loop
xchg
adc
pop
lahf
pusha
sti
pop
push
or
push
loopne
jle
mov
and
mov
sti
loope
fidivl
repz
and
sbb
imul
sub
stos
movsb
inc
or
popf
xor
cld
sahf
adcb
push
leave
sub
cmp
subb
out
jae
aas
push
mov
xlat
sti
cmpsl
mov
or
pop
inc
call
xor
mov
adcb
pushw
data16
xor
insl
add
loope
scas
adc
cmp
mov
push
dec
xchg
adc
xchg
inc
nop
scas
add
inc
push
les
jp
push
loop
cmp
or
mov
mov
xor
jg
test
mov
push
icebp
popf
add
mov
clc
scas
inc
mov
mov
jle
aas
or
aas
push
adc
pop
mov
mov
mov
popa
jnp
lret
cld
push
cmpsb
xchg
jae
cmpb
sahf
xor
das
out
addl
popa
bound
jae
daa
pop
std
pushf
or
xor
fisubrs
or
sbb
test
and
jo,pn
aad
lcall
push
dec
pop
jns
inc
add
push
pop
insl
mov
inc
and
and
mov
push
adc
sub
dec
inc
daa
push
xor
aad
dec
xor
xor
add
jge
fnstenv
les
xchg
or
inc
mov
jno,pt
repnz
in
aad
popa
sbb
adc
into
ret
xchg
mov
shld
leave
lock
inc
adc
movsb
add
inc
xor
inc
xchg
mov
inc
and
dec
int
or
stos
gs
pop
outsl
mov
push
cltd
cmc
or
aaa
xor
in
cmc
push
pop
hlt
jle
inc
mov
ljmp
fs
imul
pushf
mov
pop
subl
xor
cmpsb
jl
cmp
iret
xchg
add
test
mov
loopne
mov
popf
out
cmc
idivb
insl
repnz
je
or
mov
daa
roll
shl
push
mov
add
mov
xchg
insb
mov
mov
dec
adc
ljmp
sub
int3
ja
leave
gs
add
inc
xchg
fidivrs
pop
in
jne
ja
mov
push
imul
or
in
pop
lret
fs
hlt
dec
out
xchg
push
lea
imul
aas
push
xchg
cmp
cld
xchg
xor
les
adc
pop
mov
xchg
fdivs
xor
out
cmp
outsb
sub
and
and
push
jl
out
hlt
add
cmp
ja
imul
imul
int3
in
jnp
lock
jle
add
or
and
sbb
dec
ret
add
add
into
xchg
and
mov
cmpsl
cmp
adc
addr16
add
xchg
xor
fwait
std
xchg
int
xchg
lret
dec
mov
sub
jbe
arpl
scas
sbb
fdivr
cs
xor
in
inc
sub
jne
mov
add
int3
jg
xchg
mov
mov
icebp
les
mov
sub
negb
add
jmp
fwait
jle,pn
out
js
or
xchg
jo
lret
inc
sub
sub
stc
jg
push
sbb
or
push
jns
testl
mov
cmpsb
cwtl
adc
divb
outsl
pop
pop
mov
mov
shlb
fildll
sbb
cmpb
outsb
repnz
and
and
pop
in
cld
or
nop
fistpl
inc
bound
and
mov
loopne
push
ret
lds
adc
sti
adc
sbb
mov
ss
mov
xchg
mov
outsb
mov
jge
lret
cli
push
lds
dec
mov
mov
mov
pop
jp
xlat
out
jmp
adc
mov
aad
shrl
push
dec
dec
push
ja
fists
pop
mov
dec
push
sbb
cmc
jecxz
sbb
dec
mov
and
cmp
cwtl
inc
cld
shr
call
xlat
push
push
pop
add
clc
pop
push
out
loopne
jnp
fidivrl
push
addr16
push
adc
xlat
xchg
shr
jne
push
test
aaa
stc
pop
imul
pop
iret
scas
cltd
or
iret
sub
out
or
mov
pop
xor
popf
sub
int
xor
dec
xchg
mov
push
or
push
cmp
insl
out
sub
sbb
xchg
jo
pop
fisttpll
call
test
push
mov
lea
dec
lcall
js
xor
dec
dec
jg
cmpsb
mov
gs
xchg
clc
add
push
cmp
cmp
test
rol
mov
xchg
add
mov
jnp
sarb
rclb
fcomp
cmp
dec
rcll
sub
mov
push
sbb
mov
adc
sbb
lret
retw
cmp
mov
adc
dec
jnp
pusha
push
loope
mov
popa
xchg
mov
mov
nop
fiadds
aam
ret
mov
int3
insb
dec
or
mov
xchg
jbe
jp
daa
addr16
scas
fwait
jl
mov
cltd
arpl
lcall
ret
cltd
pushl
mov
lea
pavgb
add
rorb
repnz
stc
fnstcw
and
bound
adc
iret
movsl
cmp
in
out
dec
and
mov
sub
addr16
push
pop
dec
sbbb
sahf
ret
sub
jbe
cltd
out
mov
jp
test
push
test
xor
lods
jle
ja
sahf
pop
and
mov
jnp
push
mov
jae
or
dec
ficomps
mov
daa
jl
jle
in
push
sarl
or
pop
mov
rcrb
rcr
cmp
rcrl
push
pop
stc
mov
lret
xor
push
movsl
add
ljmp
dec
xor
sub
sub
das
fwait
jmp
adc
dec
inc
xor
ljmp
ds
xorb
sub
mov
sbb
ja
imul
or
testb
out
fs
mov
dec
mov
mov
dec
pop
mov
loope
insb
jo
fidivrl
je
loope
lret
cld
jnp
jnp
lret
lods
in
adc
repz
mov
loopne
mov
les
sbb
mov
movsb
fdivs
cmpsb
negb
shrb
enter
push
adc
test
pop
ficoml
mov
negl
mov
in
mov
addb
add
sarb
sbb
pop
sub
push
pop
dec
and
inc
aas
insl
and
cltd
mov
insl
iret
jnp
xlat
adc
adc
cmc
cltd
push
pop
mov
push
adc
cmpsl
mov
std
fwait
jnp
out
sbb
insb
or
insb
outsl
or
jns
rcll
pop
int
xchg
sti
mov
adc
scas
test
mov
jae
pop
lods
scas
cmpsb
pop
pop
dec
popa
mov
mov
pushw
xor
pop
cmc
pxor
jnp
adc
pop
pop
lods
mov
push
fs
lcall
lea
sahf
and
and
cs
push
mov
sbbl
xchg
out
jnp
lods
leave
cmp
jne
or
mov
sbb
or
sbb
sbb
mov
shl
ljmp
test
pusha
addl
sbb
add
pusha
in
rcrb
adc
enter
inc
pop
push
icebp
adc
mov
ds
add
xchg
ds
shrb
div
out
in
aaa
or
or
add
xor
enter
mov
jo
pushf
ds
xlat
aaa
rclb
flds
cltd
xchg
sahf
data16
lret
lea
xor
jg
imul
jno
in
testl
dec
dec
cmp
mov
sub
jle
pop
call
mov
xlat
test
and
mov
sub
adc
push
out
fistpl
push
ret
roll
xor
mov
push
xor
mov
xchg
lcall
xchg
pop
aam
pop
push
xchg
fdivs
gs
adc
cmp
adc
jge
push
ret
adc
sub
or
pop
pop
jl
jnp
negb
mov
adc
inc
add
sub
mov
mov
mov
mov
andb
insb
repnz
outsl
outsl
jl
fs
out
outsb
fstpl
mov
xchg
sub
pushl
lock
mov
loopne
call
out
es
add
subb
ret
data16
test
mov
cli
xor
xchg
fldt
arpl
fcmovnu
inc
mov
jle
inc
sub
xchg
xlat
cmp
fcomps
into
mov
mov
inc
test
in
add
sbb
jmp
or
hlt
leave
das
mov
cmp
fs
addl
std
push
mov
in
imul
popf
push
fs
dec
call
gs
cmp
into
mov
cmp
leave
inc
push
lcall
push
addr16
push
scas
bound
test
push
or
in
cmpsl
push
mov
sub
adc
xchg
pop
shlb
pandn
fwait
push
jle
lcall
xchg
iret
inc
mov
mov
sti
pop
push
aas
inc
xor
cltd
addr16
fwait
pop
ja
or
lret
mov
jae
mov
adc
sbb
fisttpll
and
dec
pop
pop
bound
xlat
push
cmp
out
pop
shll
in
ret
jnp
aaa
push
cmpsl
pushf
sti
inc
mov
and
sub
testb
movsb
mov
nop
dec
add
xchg
loopne
xor
ret
scas
xor
daa
fwait
sub
xchg
cld
jmp
roll
mov
nop
push
xchg
insb
mov
shrb
in
popa
or
jb
bound
pop
dec
or
add
into
adc
inc
outsb
fwait
xor
lea
push
es
ret
dec
into
mov
fsubs
rclb
cli
xorl
bound
mov
inc
out
lret
rcl
lods
mov
arpl
lods
xor
mov
xchg
stos
cmp
jns
fsubr
or
xchg
xchg
push
mov
out
pop
mov
jbe
js
fcomi
pop
scas
lds
shrb
ficoml
push
loop
lods
pop
xor
xor
sbb
rorl
lcall
clc
pushf
xlat
lret
lret
negb
mov
in
aad
sbb
pop
loopne
mov
mov
dec
popa
sub
mov
cwtl
iret
dec
add
int
cmp
icebp
sub
jmp
daa
outsl
sub
repz
lods
cmpl
mov
cmp
fcoml
jp
or
rclb
imul
add
lret
jg
push
in
cmc
outsl
iret
sbb
cmp
sahf
add
adc
cmp
or
and
mov
add
arpl
pop
cmp
pusha
decb
pop
sub
shlb
in
unpcklps
sbb
pop
xor
xor
lock
pop
out
xchg
pop
clc
push
sbb
xchg
xchg
hlt
dec
pop
sbb
mov
push
sub
or
out
or
adc
scas
mov
aam
test
int3
imul
dec
pop
mov
pushl
aaa
jns
lret
sub
insl
divb
fbld
cmpsl
lret
cmp
mov
ret
lds
into
mov
cmpsb
cwtl
xorb
adc
xchg
in
jmp
pop
aam
dec
inc
dec
mov
and
test
xor
jecxz
jecxz
push
pop
jns
dec
push
scas
fsubl
cmp
arpl
sub
xchg
inc
jp
push
cmpsl
sbb
andl
mov
inc
or
push
jns
or
call
xchg
push
cltd
mov
testl
pop
insb
fucomi
sub
lret
mov
mov
and
pop
mov
shrb
ror
test
shll
mov
jne
aas
addr16
and
shlb
inc
repz
jmp
test
mov
push
outsl
ret
adc
int
jno
les
js
add
ss
stc
lock
xchg
aas
and
sbb
xor
xchg
sub
enter
mov
dec
xchg
pop
adc
test
outsl
or
and
aas
push
cli
gs
stos
aad
pop
es
add
pop
pusha
lahf
push
sarb
ja
push
into
les
push
out
dec
popf
fidivs
xor
pop
clc
ret
xlat
xor
fldcw
test
js
cmp
jae
or
adc
xor
data16
or
mov
hlt
jo
pop
mov
loopne
aas
daa
pop
aas
pop
push
dec
loope
lret
cmpsl
add
in
imul
push
and
adcl
nop
ljmp
testb
es
cmp
mov
rclb
mov
ds
icebp
cmpsl
loope
mov
sub
jno
ret
inc
add
cmpsl
adc
mov
pop
fnstenv
mov
jo
and
push
sahf
or
std
rcr
and
or
xlat
sbb
jns
adc
repnz
jo
popa
daa
movsb
mov
std
lahf
mov
sbb
addr16
orl
rorl
mov
jae
cs
mov
dec
in
mov
outsl
jl
out
ret
js
push
out
add
aam
inc
mov
xor
data16
stos
inc
lahf
js
jge
inc
ret
mov
mov
imul
nop
outsl
xor
mov
pop
jb
inc
andb
movsb
les
or
mov
call
mov
inc
iret
data16
push
in
test
cltd
aam
xor
or
xchg
out
hlt
imul
pop
adc
xchg
dec
mov
maskmovq
mull
subps
sbb
push
cmpsb
scas
push
cmc
inc
imul
xchg
bound
mov
int3
out
dec
mov
and
cmc
stos
add
nop
sbb
fdivrl
fimull
test
daa
rclb
sub
xor
sbb
imul
insl
xchg
aaa
pop
cli
sbb
adc
hlt
or
movsb
mov
fidivrl
cwtl
test
dec
dec
xlat
call
pop
rclb
imul
imul
in
mov
ret
cmpsb
insb
out
xor
fstps
mov
pop
add
mov
mov
pop
xchg
jae
subl
in
adc
pop
fdivrs
aam
push
scas
pop
iret
jns
jg
les
inc
inc
push
or
cld
scas
sub
xor
sar
jecxz
jp
lret
cltd
push
and
inc
inc
repz
mov
xchg
adc
pusha
sbb
cmpsl
adc
mov
cmp
lods
and
jmp
fcoml
in
into
cs
push
jge
loope
or
mov
aas
sbb
stos
xor
and
lea
jbe
mov
cmp
dec
test
pop
xchg
cli
mov
push
jne
hlt
repnz
std
in
filds
stos
xorl
pop
in
cwtl
xchg
push
mov
lcall
mov
repz
push
and
add
xlat
roll
aaa
fnstenv
xchg
fistl
dec
cmpsl
scas
popf
andl
sarl
inc
push
inc
add
mov
adc
sbb
mov
test
test
sub
fsts
movsl
ljmp
sub
cmpsl
icebp
xor
pop
aas
movsl
das
sbb
fmuls
adc
push
dec
imul
and
lret
int3
out
lods
test
or
clc
rcl
insb
sbb
fidivs
xor
lds
fdivrp
mov
das
mov
jo
fadds
iret
stc
xor
push
dec
stc
push
pop
repz
sbb
cmp
push
into
jne
jnp
sub
sub
mov
shrb
mov
or
sbb
mov
bound
push
jne
mov
cmp
dec
dec
xchg
xchg
fwait
lds
fs
shl
sub
loop
dec
inc
mov
out
cmp
aaa
pop
xor
xor
adc
cmc
xor
cmp
mov
shlb
jnp
jp
push
ja,pn
pushf
cmp
pop
add
subb
out
es
repz
sti
addl
ret
push
xchg
leave
in
jecxz
mov
loop
ja
xor
fidivs
call
or
push
and
and
leave
ficomps
loop
mov
in
cmp
fsubrl
fwait
out
lahf
shr
stos
sub
insb
or
dec
jb
add
jp
inc
and
mov
mov
xchg
jbe
pop
dec
cltd
addl
xchg
inc
dec
aaa
cwtl
jne
test
or
enter
cmp
lods
or
movsb
push
loop
fidivrs
cmp
lds
add
mov
das
mov
mov
push
cmp
pushf
lock
jns
in
xor
iret
imul
nop
xor
ror
xchg
jb
sbb
sti
repnz
mov
lock
lsl
or
xchg
inc
mov
into
fcoms
repz
nop
jb
adc
ds
fimuls
int3
aam
jns
dec
popf
mov
aad
dec
cmpsb
xchg
aaa
bound
in
pop
adc
into
lret
xor
movb
mov
stos
lods
sub
push
aam
sub
xchg
or
jle
dec
sub
sbb
iret
test
push
add
test
jecxz
mov
arpl
in
pop
stos
inc
stc
aaa
js
imul
sbb
int
clc
loope
mov
into
mov
in
cmp
cmp
mov
mov
js
lret
cmp
sub
nop
push
ljmp
mov
pop
jnp
add
cmp
data16
xchg
xchg
mov
or
ds
and
add
add
movsl
call
fwait
andb
enter
lods
vmwrite
pop
push
xchg
adc
pushf
test
shlb
xchg
lock
xor
xor
insb
jbe
ret
cmc
adc
daa
jo
mov
xor
cmp
adc
stos
xlat
pop
out
dec
xchg
data16
jne
ret
dec
fidivl
xchg
sub
ds
mov
adc
push
mov
sti
push
xchg
pop
sahf
pop
popa
push
aaa
cmpsb
rcll
sub
pop
xchg
mov
lods
std
cmp
popa
rcll
jo
fadd
je
arpl
dec
jp
js
hlt
out
outsb
push
insb
stc
sbb
les
push
outsl
cli
or
mov
mov
xchg
push
into
scas
inc
adc
ret
pop
push
sub
xchg
hlt
jge
fildl
leave
inc
or
push
shl
lret
loope
shrb
hlt
xchg
add
icebp
cli
addl
out
add
rorl
pop
adcl
lds
repnz
leave
mov
cwtl
jmp
movsl
imul
in
popa
pushf
idivl
je
push
cmp
xchg
xchg
xor
jmp
sub
cs
in
mov
pop
orl
sbb
cmp
sub
inc
or
inc
push
repz
cmp
xor
inc
pop
cmp
dec
adc
and
or
xchg
mov
pop
dec
pop
jno
cmpl
or
pop
data16
addr16
mov
fcoms
adc
or
jnp
xor
repnz
fisubl
mov
pop
push
pop
nop
push
xor
sub
push
mov
push
push
lcall
aaa
inc
roll
hlt
mov
push
test
dec
call
ljmp
inc
dec
pop
mov
sub
int3
adc
je
in
nop
pop
ficomps
xchg
mov
xor
out
sub
xchg
fisttps
and
mov
pop
jg
mov
cli
add
iret
mov
pop
sub
ljmp
sbb
cmp
leave
testl
xchg
out
jle
gs
rcrl
cld
push
movsb
out
mov
into
mov
xor
sbb
xchg
and
xchg
adc
mov
xchg
jg
inc
mov
scas
fldl
cltd
popf
fistps
xor
dec
add
gs
push
dec
rcl
test
jne
xor
loopne
testl
aad
rolb
adc
jbe
sub
xchg
ret
mov
lock
shlb
push
xor
fwait
sbb
mov
xchg
in
inc
adc
mov
out
rorb
mov
fists
mov
leave
sti
into
and
xchg
push
adc
push
xchg
xor
xchg
xchg
cwtl
jle
xor
jge
sahf
cli
dec
jp
jl
push
jnp
jae
mov
lahf
or
push
jle
or
stos
hlt
imull
jl
call
jecxz
out
sbb
lock
xor
mov
dec
mov
pop
jbe
popf
xchg
sbb
nop
pop
sbb
add
fidivrs
in
fs
mov
das
pop
xchg
ljmp
add
push
fidivrs
or
adc
cmp
inc
leave
popf
dec
ret
adcb
xchg
jl
pop
mov
lods
fistpll
cmpsl
push
js
mov
mov
inc
xor
addl
in
call
xchg
test
gs
jno
push
imul
push
shl
fcom
lahf
push
jne
out
rcll
out
es
sbb
adc
mov
mov
adc
xchg
xchg
cltd
popa
loope
xchg
test
mov
mov
sbb
add
xor
or
mov
stos
add
jp
xchg
push
stos
arpl
adc
test
fldt
push
mov
mov
or
nop
sti
mov
and
sub
add
add
xchg
push
outsl
inc
xchg
mov
mov
jmp
jp,pt
lock
push
fidivrs
inc
lcall
mov
xlat
lock
jp
pop
and
bound
pushf
imul
inc
sbb
cmp
mov
xchg
es
and
cmp
or
test
lods
dec
adc
imull
call
popf
or
lcall
cld
cmpsl
xchg
jnp
faddl
dec
stos
push
int3
cmp
enter
sub
push
xor
fidivs
cmp
lock
in
in
popf
sub
add
mov
and
stos
pop
out
mov
or
or
test
inc
insb
add
imul
test
mov
test
sbbl
jg
out
fbld
cmp
cmp
sbb
and
xchg
int3
xlat
repnz
xchg
shll
push
pushw
mov
ss
cmpsb
subb
scas
inc
or
push
xorl
xor
add
cmp
imul
inc
in
lcall
xchg
inc
int
lcall
aas
adc
xchg
test
testb
add
pop
nop
add
lahf
lret
or
mov
bound
lock
loopne
call
cmc
xlat
push
notb
or
adc
or
inc
mov
fbld
scas
inc
into
cli
loopne
cwtl
ja
sbb
test
imul
std
aas
xchg
and
inc
insl
pop
push
mov
adc
movsb
je
dec
movsl
std
xor
into
mov
movsl
sahf
pop
sub
xchg
ds
add
sub
ss
rcll
jecxz
arpl
mov
xchg
scas
mov
dec
inc
sbb
ror
sub
ss
fstps
add
js
scas
popa
pushf
ret
pop
testb
xlat
push
and
pop
ljmp
mov
cs
in
push
daa
inc
pop
call
push
in
jmp
ja
or
dec
sti
imul
flds
push
scas
dec
dec
inc
mov
jb
xorb
mov
xor
inc
cld
ja
pop
shll
mov
mov
lcall
inc
outsb
movsl
pslld
imul
push
lret
adc
add
add
mov
mov
in
dec
shll
jnp
rorl
loop
fmulp
or
pop
xchg
pop
arpl
sbb
loope
mov
popf
dec
ljmp
push
repz
insb
xor
cmp
xchg
jnp
mov
xlat
repnz
push
lfs
daa
addr16
test
in
xchg
and
pop
arpl
xchg
dec
cmpsb
jle
jmp
xlat
cli
rorl
xor
inc
dec
nop
stc
mov
aas
sbbl
adc
bound
movsl
aas
mov
push
xchg
and
fisttps
out
test
pop
jg
testl
sbb
fidivrl
mov
dec
fisubs
add
xchg
cmp
pop
xchg
and
cltd
iret
ret
lods
inc
not
mov
in
adc
loopne
jmp
mov
bound
movsl
push
fisttpll
jno
add
sub
outsl
mov
mov
jo
adc
loope
jae
fstpt
mov
dec
ja
or
adc
inc
adc
fdivrl
and
xchg
vpshufd
out
lahf
insb
mov
xchg
jmp
adc
and
aaa
pop
in
out
jns
cmp
das
test
push
mov
movsl
outsb
outsb
gs
push
lods
mov
jbe
sti
xor
hlt
setp
pop
std
pop
xchg
xchg
add
xchg
shrl
pop
test
repnz
rcll
xor
cmp
aaa
jnp
fcmovbe
lahf
jle
stos
adc
in
ds
or
push
dec
jb
and
adc
mov
add
sub
ljmp
jne
push
sti
inc
mov
ja
dec
mov
out
dec
test
sub
xchg
adc
xorb
ss
sbb
mov
sahf
inc
sub
mov
push
inc
inc
dec
cmp
or
mov
imulb
repz
sbb
fwait
cmp
mov
cs
jnp
es
daa
int
sub
add
xchg
push
ret
push
lods
enter
dec
push
xchg
push
push
add
xor
xorl
adc
jns
mov
or
fstp
ret
test
jnp
ljmp
les
mov
adcb
sub
pop
mov
xor
sar
imul
xchg
movb
jecxz
xchg
iret
test
rorb
fldenv
popf
out
jge
cli
sti
cmp
je
sti
pop
lret
dec
rorl
ljmp
mov
ss
push
dec
push
mulb
sti
nop
mov
scas
sti
push
xchg
nop
sbbl
fdivp
sub
cmp
xchg
dec
fdivs
or
jno
ret
adc
pop
cmp
out
cmp
out
xchg
lahf
jns
gs
dec
xor
push
mov
cmp
jno
inc
in
adc
imul
shlb
repz
jo
aas
pushf
cmp
or
inc
js
jbe
mov
pusha
jbe
add
orb
inc
jne
jb
jo
hlt
out
ss
inc
aad
fidivl
cli
inc
fcomps
push
subl
push
sub
cmc
inc
fucomi
sub
dec
mov
push
testb
dec
es
ds
mov
mov
iret
xor
insl
je
popa
das
leave
adc
aas
xor
outsb
enter
cmpxchg
push
mov
add
lahf
dec
dec
mov
xchg
pop
stc
ret
jno
cmp
outsl
xor
cmpl
bound
sbb
inc
inc
arpl
cmp
fisubs
nop
pushl
sbb
pop
xchg
mov
jp
push
cmp
inc
push
or
enter
jg
mov
inc
pusha
xor
or
scas
push
lea
int
out
inc
pushf
mov
push
sbb
inc
push
sub
or
rcrb
repz
jbe
inc
in
mov
aad
pop
lds
push
adc
pushaw
lods
fwait
pop
or
rorb
push
or
xchg
loopne
or
jno
rorl
and
sahf
mov
fwait
mov
outsb
outsl
clc
lea
push
inc
sar
or
sub
fidivrl
inc
fdivs
sub
mov
jg
sub
scas
rol
mov
and
data16
or
xchg
mov
xor
adc
jbe
daa
incb
or
xor
jae
shlb
push
push
xchg
ja
stos
mov
sbb
outsb
add
xchg
ja
or
mov
loope
adc
jmp
inc
push
jp
addr16
out
stos
pop
scas
xchg
lea
scas
cli
es
jge
lock
repnz
add
movsl
je
cmpsl
std
addr16
xchg
rcr
and
add
data16
cs
push
cwtl
iret
andl
and
xchg
pop
and
jne
and
mov
and
fmul
sti
fiaddl
mov
mov
gs
nop
and
test
mov
cmc
push
push
stos
add
xchg
cmpsl
inc
imul
iret
xchg
out
ja
mov
jge
pop
inc
inc
add
in
fwait
jne
xchg
aam
pop
lock
xor
pop
jae
push
jae
cltd
enter
scas
jl
scas
stos
pop
mov
enter
add
cmp
clc
fwait
outsb
rorb
lock
in
add
icebp
ljmp
je
sbb
int
lods
pop
hlt
fildl
dec
xor
test
stos
and
mov
sub
test
ljmp
mov
push
cmc
aas
xchg
pop
mov
push
dec
cs
jmp
inc
in
mov
jp,pt
mov
out
xor
xchg
inc
mov
or
test
mov
testl
cmp
xor
movhps
jo
inc
int
shlb
jae
xchg
data16
push
sbb
test
inc
or
loopne
fs
push
add
mov
jle
loopne
mov
jmp
loope
outsl
mov
clc
and
cmp
push
pop
mov
adc
mov
sbb
or
mov
in
and
push
mov
push
xchg
pop
ja
mov
ljmp
movsb
mov
mov
cld
or
fmul
cmp
scas
arpl
xor
movsb
aas
sahf
iret
rcrl
enter
ret
addb
xchg
insb
jp
test
idivl
mov
clc
imul
out
decb
lods
aam
or
hlt
pop
cmp
cmpsb
mov
in
lods
jle
icebp
push
jge
add
push
mov
movsl
mov
lea
xlat
aaa
push
dec
sbb
into
lret
mov
js
lods
push
sub
cmp
sahf
sub
push
test
cwtl
int3
test
mov
gs
or
stc
rolb
loope
xchg
inc
ljmp
jmp
push
mull
push
or
jp
pop
push
ss
mov
xchg
push
ret
sti
test
push
mov
rorl
push
sbb
outsb
jno
dec
addl
push
and
aas
jns
xchg
adc
call
pop
adc
std
sub
movsb
sbb
mov
ljmp
jmp
das
xchg
gs
daa
or
sahf
into
cli
aaa
mov
jns
cwtl
shl
je
sub
mov
mov
jecxz
addr16
inc
lods
je
inc
adc
stc
loopne
cmc
fsub
sub
xor
cmpsl
dec
push
loope
hlt
aaa
addr16
push
mov
mov
mov
mov
leave
fldt
xchg
std
aas
ja
popa
rsqrtps
inc
dec
sub
mov
xor
aad
mov
sbb
loopne
ds
jne
out
pop
outsl
data16
clc
lret
sbb
mov
lret
mov
ss
xchg
sub
xchg
mov
xchg
ret
add
rorb
push
add
xchg
and
test
popf
and
loop
cmc
movsb
out
rcrl
ficoml
stos
jns
aaa
out
jbe
inc
fisttps
aas
dec
sbb
pusha
add
xchg
fstpl
cmp
add
repz
push
sbb
sub
or
test
out
shl
nop
mov
jge
ja
nop
scas
andb
jecxz
les
push
repz
pop
sub
xchg
pushf
dec
aas
jle
jge
xchg
into
sbb
mov
sub
sub
jg
daa
roll
outsl
nop
jnp
xchg
inc
dec
jno
test
push
cmpsl
cmp
std
fsin
push
fildl
jne
push
gs
mov
xor
mov
aad
xlat
mov
jmp
xchg
cmp
mov
xchg
xor
out
nop
mov
xchg
pop
insl
jl
mov
lock
movsb
jg
cmp
adc
loope
adc
scas
lcallw
push
movsl
ret
ss
cmpsl
lds
adc
push
xor
push
add
xchg
mov
imul
push
cld
push
sti
icebp
add
dec
inc
jo
dec
mov
cli
mov
sti
inc
dec
pop
inc
mov
notb
push
pop
mov
sub
mov
sub
inc
out
inc
lock
xchg
outsb
pushl
xchg
insl
mull
scas
cmp
sub
sub
pop
xchg
stos
sbb
jmp
mov
fcmovbe
dec
adc
inc
cld
adc
push
scas
repz
cli
xchg
stos
add
and
mov
repz
and
arpl
call
sbb
ret
roll
mov
sub
inc
fs
and
pop
dec
in
pop
insl
dec
dec
dec
sub
insb
pop
xor
in
xor
arpl
adc
inc
outsb
arpl
insl
mov
jns
aas
sahf
jmp
je
shlb
mov
xchg
decl
out
jge
mov
jb
cmp
movsl
rorl
push
fdivrl
inc
mov
xchg
cmp
fadd
repz
mov
inc
mov
sbbl
push
es
push
insb
sub
add
dec
movsl
mov
inc
loope
add
mov
pop
iret
scas
clc
int3
ds
mov
enter
push
jns
and
dec
lret
dec
inc
lret
fldenv
pusha
push
imul
lret
test
adc
ret
fdivrl
nop
fistpll
or
psadbw
inc
dec
mov
push
jo
pop
mov
loop
lock
cwtl
xchg
sub
cltd
mov
pop
stos
inc
sbb
shll
test
sub
lahf
dec
lock
and
mov
ja
mov
sbb
fiaddl
push
gs
jne
loop
ret
push
cmp
iret
and
pop
inc
gs
mov
inc
mov
clc
rcr
loop
and
cmpb
pop
call
jae
out
psrlw
inc
imul
shrl
test
loope
in
jl
repnz
aad
mov
sahf
fs
lds
adcl
or
mov
cmpsl
outsl
xchg
sarl
rcrb
adc
mov
pop
cltd
mov
add
sahf
inc
xchg
ja
cs
sbb
dec
lds
popa
fistps
pusha
sbb
test
fsts
filds
or
mov
es
ffree
inc
mov
mov
jae
data16
stc
lock
and
mov
inc
stos
imull
shlb
mov
jecxz
dec
jae
leave
dec
loopne
popa
adc
lea
add
jecxz
xchg
popa
icebp
mov
test
or
or
enter
adcl
in
cmpsl
push
loop
clc
sahf
test
inc
xchg
test
repnz
mov
xchg
mov
addr16
shrb
repz
jge
popa
jne
push
pop
loop
dec
dec
jne
popa
mov
dec
dec
push
fisttpll
mov
pop
pop
add
addr16
js
push
in
je
rolb
or
inc
inc
and
les
pusha
cmpl
pusha
fdivrs
fstpt
adc
outsb
ret
and
mov
fmulp
sub
cmp
cmp
cmpsb
pop
xor
push
lret
mov
std
xchg
push
pop
mov
sub
mov
in
jp
push
cmp
add
rcl
inc
mov
cld
add
out
icebp
mov
xchg
movsl
sub
iret
sub
dec
jae
adc
xlat
xchg
and
sbb
push
sbb
mov
mov
mov
jp
scas
push
scas
aas
scas
paddsw
in
out
leave
lods
jmp
mov
popf
fcomps
mov
mov
cmp
shr
aas
rorl
cltd
fsub
pop
xchg
adc
lea
push
push
xor
arpl
or
std
adcl
mov
mov
mov
mov
movmskps
or
std
gs
xchg
dec
fadds
xor
call
fs
notb
icebp
pop
test
push
push
mov
jge
jnp
or
cmp
gs
mov
mov
inc
or
xor
add
push
jecxz
test
xchg
scas
repnz
push
sbb
dec
sub
inc
xchg
ja
movsl
adc
pop
out
mov
xor
push
add
pop
inc
xchg
push
mov
inc
add
lret
or
mov
push
loopne
push
clc
add
int
or
outsb
and
cs
mov
repnz
fistpll
insl
xor
fnsave
pop
ds
addr16
popa
xor
nop
sbb
xor
ja
test
cmpsl
push
lret
cli
mov
loopne
ret
push
cwtl
sub
clc
push
sbb
sbb
enter
jne
sub
hlt
xor
jo
jae
aad
jmp
movsl
dec
daa
jle
jp
sti
adc
add
push
and
jb
movsb
clc
ficomps
pop
cltd
mov
nop
and
cmp
int
call
pop
or
lods
mov
sbb
xchg
fdivl
mov
jl
dec
cmpsb
or
js
lods
mov
in
into
xor
je
cs
es
xor
add
cmp
jecxz
out
addr16
cli
adc
aaa
cmpsb
testl
or
push
jae
adc
push
push
mov
pop
popl
ljmp
or
jle
lret
hlt
mov
adc
aaa
scas
cmp
mov
fcomps
stos
ja
in
push
aam
xor
nop
cwtl
xor
jns
push
and
sbb
push
sub
insb
ss
mov
add
pop
hlt
popf
mul
sub
data16
cwtl
sti
orl
mov
pop
cmp
popa
inc
lods
cli
inc
lods
dec
push
pop
mov
enter
cli
hlt
push
mov
lcall
xor
aad
out
in
or
xchg
push
pop
pushw
test
es
push
addb
pop
insl
mov
sbb
lock
inc
mov
push
sbbl
cmc
and
xor
jmp
mov
cmp
aam
jle
mov
and
pop
clc
aaa
push
xor
adc
and
test
xchg
xchg
xor
testb
scas
jle
inc
mov
cli
mov
lds
cmpsb
mov
ficoms
cmpl
and
in
push
xor
mov
fwait
outsb
xchg
into
lcall
and
inc
cli
inc
stc
stos
mov
mov
in
repz
lahf
loop
jp
dec
and
and
pushl
dec
mov
pop
mov
jne
jne
ficomps
pop
fstp
xchg
add
jnp
adc
jne
xlat
jmp
cmpsb
jnp
adcb
cmc
outsb
ficoml
inc
dec
lods
sub
iret
test
idivb
sub
xchg
adc
cli
xor
xchg
sub
scas
test
out
mov
sbb
clc
lahf
add
test
adc
or
faddl
or
sub
loopne
inc
adc
ljmp
pop
jnp
mov
sti
xlat
sub
lods
fcompl
rcrb
into
int
cmp
dec
cmp
in
jbe
xor
nop
xor
cs
aad
pop
imul
mov
and
pop
sbb
mov
pop
sub
push
xchg
stos
fs
add
orl
into
xchg
popa
js
shll
fwait
dec
mov
lds
aad
mov
xchg
dec
in
mov
mov
pop
dec
sub
inc
jb
out
sbb
imul
aad
push
push
out
add
pop
jmp
stc
iret
dec
repnz
fbstp
movsl
inc
mov
and
popf
inc
jo
fstpl
mov
scas
mov
push
fadds
scas
mov
push
add
add
mov
out
mov
xlat
and
std
popa
adc
out
div
add
push
fmuls
mov
cmpsb
das
mov
out
cli
lret
sub
mov
iret
mov
lds
xchg
cmp
ret
test
aad
mov
jne
jb
or
clc
sub
mov
icebp
fst
inc
mov
loop
into
mov
fimull
test
jne
insb
jbe
lea
fs
das
fcomps
push
mov
cmp
mov
pop
into
mov
pop
cs
or
jno
lret
xchg
mov
daa
movsl
jbe
mov
lret
ja
fcompl
push
loope
stos
rorl
loopne
sub
fcom
jmp
lea
inc
pop
cwtl
jb
mov
jb
and
pop
lds
mov
daa
dec
xchg
addr16
jle
repnz
cltd
inc
xchg
int3
push
dec
pop
mov
mov
jl
shll
stc
mov
push
mov
aas
cmp
xlat
jle
ja
lods
mov
test
push
fsubs
test
dec
add
sbb
aaa
std
sahf
adc
scas
jns
xor
mov
jbe
adc
rcrl
dec
push
pop
xchg
ss
pop
xor
std
mov
popf
mov
and
aad
cmpsl
mov
and
mov
std
adcl
sub
pop
push
out
rorb
popf
mov
aas
sub
xlat
lcall
popa
dec
mov
cltd
lea
mov
out
aas
lret
inc
inc
lds
nop
lcall
jne
sarl
sub
sbb
xchg
repnz
or
mov
mov
jb
test
mov
rorb
and
xchg
cmp
movsl
mov
pop
cld
jnp
xor
xor
add
cmpsl
cmp
outsl
jo
mov
movsb
imul
adc
mov
sbb
outsb
inc
cmp
adc
mov
popf
test
mov
stos
inc
inc
push
lcall
push
sti
stos
xchg
sub
dec
cmp
or
jnp
hlt
dec
popa
in
pop
fbstp
test
jecxz
cwtl
daa
xor
loop
xchg
scas
gs
mov
pusha
imul
sub
int
inc
and
push
cwtl
xor
out
std
xchg
adc
jmp
jmp
cmpb
pushf
fwait
daa
add
xor
shlb
mov
ret
out
sub
mov
repz
jb
cmp
xchg
aad
and
loop
adc
xlat
in
ja
adc
popf
fmuls
sub
stc
pushf
dec
add
int3
lock
pop
mov
jns
popa
je
aam
iret
divb
ret
lret
xor
jbe
lea
repnz
cmp
push
cmp
xor
xchg
pop
mov
fcom
std
mov
add
mov
rorl
js
add
inc
jge
inc
sbb
mov
imul
cmp
pop
outsl
lods
fstl
adc
adc
add
rclb
cld
repnz
inc
xor
and
adc
add
sub
and
sbb
clc
cli
sbb
xor
loopne
push
dec
mov
push
rcr
or
add
sub
and
ret
jmp
mov
sub
pop
repnz
and
adc
xchg
dec
hlt
lock
cmpsl
into
movsb
cmp
sub
mov
xchg
out
fwait
mov
ljmp
cmpsb
pop
pop
repz
mov
nop
inc
in
mov
inc
cmc
or
ss
loopne
mulb
pusha
pop
test
cmp
std
cs
xor
fldcw
dec
jb
or
loop
insb
stos
jp
dec
cmp
jns
shl
mov
inc
stc
dec
insl
clc
pop
arpl
or
xor
mov
lret
jecxz
loopne
rolb
xchg
xor
stos
imul
fbstp
pop
mov
pop
lcall
pop
and
je
inc
adc
scas
pop
jge
jno
loop
dec
fildl
mov
xchg
mov
push
int
sti
aad
adc
movsb
mov
mov
mov
les
pop
iret
outsb
js
testl
add
ja
ds
or
fnsave
push
push
ss
mov
repnz
mov
push
inc
inc
lea
mov
iret
add
or
jo
test
nop
xchg
int
adc
mov
sbb
ret
movsb
lods
insl
popw
dec
sbb
mov
add
and
inc
cld
test
cmpl
les
mov
nop
xchg
or
mov
xchg
loopne
add
loope
jg
js
mov
push
bound
cmpsb
jae
jnp
orl
xor
lock
cld
popa
subl
das
pop
out
sahf
mov
push
lcall
push
mov
jae
stos
stos
out
jl
aaa
xchg
sbb
pop
pop
adc
or
sub
pop
cltd
mov
bound
xchg
ret
mov
fisttps
repnz
sbb
push
sarl
dec
adc
jmp
test
je
mov
int3
mov
fistpll
or
mov
push
clc
test
scas
pop
mov
repz
cmp
aaa
mov
cmp
mov
cmp
dec
mov
mov
hlt
dec
push
test
inc
inc
sbb
xchg
iret
add
cmpsb
lret
or
dec
cld
push
xchg
dec
push
and
stc
into
lds
repz
dec
in
loop
or
mov
push
mov
shrb
cli
lods
ss
pop
add
daa
sub
dec
mov
jns
movsl
out
leave
mov
scas
js
sbb
pop
aaa
jl
xchg
cmpsl
dec
xor
jmp
int
mov
addr16
xchg
hlt
cwtl
repz
nop
scas
xor
dec
negl
stos
mov
mov
pop
fcompl
push
sahf
dec
popa
add
xlat
lock
pusha
in
sub
cmp
xchg
sarb
mov
mov
in
mov
fcoml
shll
dec
addb
fs
cs
and
xor
jl
jo
imull
insl
outsb
sub
repnz
sbb
vshufpd
pop
xchg
movsb
iret
repz
cli
dec
stc
push
subb
jne
pop
mov
hlt
std
out
mov
aaa
push
sahf
adc
mul
or
jno
cmpb
inc
test
lahf
lods
inc
pop
repz
shll
fldl
loope
dec
cmpsb
add
jo
into
call
mov
push
data16
or
js
adc
push
insl
adc
xor
scas
idivb
lret
xlat
clc
mov
fmuls
adc
sbb
aaa
push
dec
xor
cltd
mov
into
shll
jmp
xor
cmc
in
push
fisttpl
in
jo
adc
add
in
imul
mov
dec
xor
lret
popf
jae
xchg
shrb
mov
add
pop
rol
push
mov
shl
test
mov
rorl
test
adc
dec
shrb
ja
mov
xchg
cmp
aad
test
repnz
test
test
test
fldl
push
inc
popa
push
mov
lahf
push
inc
mov
dec
adc
pop
push
sbb
rclb
adcl
cmp
popa
cltd
adc
or
out
stos
mov
cmp
in
and
jb
inc
sbb
dec
pop
or
push
out
rcll
adc
in
sbb
jge
jnp
cmp
repnz
xchg
sahf
pusha
adc
cmp
in
sub
stos
mov
and
jl
xor
pop
inc
sub
fsts
xchg
dec
das
sub
xchg
mov
pusha
mov
mov
push
jp
in
mov
or
fcoms
jae
or
fistl
push
popf
pop
int
aaa
mov
flds
pop
dec
ja
in
push
mov
xchg
inc
shlb
das
jp
adc
call
xlat
pop
push
shlb
test
lock
in
push
adc
cmp
test
leave
lret
jge
repz
sub
cwtl
ret
lods
popa
inc
sbb
cli
sbb
jge
cmp
gs
pushf
addl
enter
cli
sahf
mov
flds
or
test
movsb
mov
movsb
iret
cmp
int3
pop
cltd
jne
cmpsb
mov
mov
jp
or
or
mov
mov
ja
outsl
sub
sub
rolb
in
jg
sub
jbe
lods
jge
idivb
fwait
out
sbb
std
bound
mov
test
lahf
dec
lcall
dec
adc
add
pop
jmp
addr16
cmp
divl
inc
movsbl
xor
jns
add
mov
sbbl
adc
jb
int
add
jge
mov
bound
cmpsb
inc
jg
jbe
mov
icebp
sbb
push
into
xlat
lds
lahf
enter
inc
adc
mov
fcoml
adc
xchg
or
in
shll
ljmp
dec
xchg
lea
imul
mov
mov
inc
and
clc
gs
push
and
dec
lret
loope
fsubrl
mov
int
jne
xlat
fdiv
iret
fistl
adc
inc
mull
es
lock
mov
dec
fiadds
push
sbb
cmpsl
outsb
lea
xor
mov
push
popa
and
xor
testl
sub
inc
jmp
mov
aas
jne
xor
shrb
aam
pop
idiv
sbb
or
cltd
pop
mov
jge
or
iret
jl
cmp
ret
push
adc
ds
push
int3
fsubp
dec
sbbl
mov
jne
adc
rorb
inc
ficoms
stc
fstps
je
imul
xchg
repnz
ss
or
pusha
fdiv
loop
lahf
adc
fisttpll
dec
push
in
xor
flds
xchg
popa
test
je
scas
jge
aam
sbb
loopne
or
mov
sub
dec
pop
out
cmpsb
mov
jae
mov
mov
je
pop
adc
dec
xchg
add
pop
fwait
popf
fisubl
fucomip
xlat
jmp
test
rcrl
push
inc
arpl
repz
pop
fldl
out
cmp
xchg
xorb
call
mov
mov
fimull
sti
inc
enter
adc
ucomiss
mov
cwtl
add
ret
cmp
push
stos
jl
data16
clc
mov
add
in
movsb
or
pop
push
fsts
push
xlat
fcompl
loopne
clc
mov
movsl
pop
lret
xchg
out
mov
mov
std
pop
mov
push
jmp
lahf
test
jp
inc
mov
mov
idivb
add
push
jb
adc
xor
shr
out
shll
push
add
cmp
and
mov
push
mov
out
inc
div
xchg
sbb
push
ret
add
fsubs
mov
idiv
mov
fmuls
repz
into
dec
xchg
sub
inc
xchg
pop
dec
mov
aam
aas
mov
sbb
andb
shrl
outsl
scas
popf
and
sahf
jae
inc
sbb
and
cwtl
jns
cmp
or
loopne
dec
pop
movsl
js
imul
daa
pop
int3
cmp
inc
mov
mov
push
repz
test
adc
lahf
nop
icebp
xor
mov
dec
in
repnz
xor
loope
pop
lahf
adc
add
mov
adc
inc
rorb
pop
fcmovb
mov
jne
or
sub
flds
jle
nopl
jg
imul
lods
cmp
xor
mov
hlt
pop
mov
mov
sbb
dec
xor
fs
jecxz
push
push
icebp
add
and
gs
insl
lret
lods
mov
mov
in
inc
cmp
lahf
aad
cmpsb
mov
mov
or
add
popf
and
rcll
je
mov
xchg
hlt
cmovnp
sub
pushf
xchg
jl
sahf
jnp
out
cmovnp
mov
outsb
add
jmp
test
jno
test
out
lret
mov
dec
sbb
ds
jns
adc
call
and
cmp
jae
push
das
mov
push
push
subl
dec
fs
jbe
lret
pop
fstps
xor
xchg
fninit
clc
je
les
jle
leave
jecxz
inc
test
cmp
xor
ljmp
les
sbb
cs
inc
cmc
bnd
jle
cmp
dec
lock
mov
arpl
orb
nop
push
out
shll
or
cmc
and
push
sahf
sahf
sbb
lret
in
mov
test
or
dec
fs
loope
aaa
or
push
pop
testb
pop
decl
testb
aam
in
ljmp
dec
inc
sbb
jl
dec
pop
lcall
pop
sub
mov
fsubrs
in
stc
jg
mov
out
or
adc
das
test
stc
jns
bswap
cmp
out
dec
jg
xchg
insl
dec
in
jno
les
out
icebp
test
or
sbb
or
mov
xchg
pop
aad
shll
lcall
idiv
shlb
popa
subl
mov
adc
mov
pop
lret
shlb
sahf
rcll
push
lret
orb
scas
bsr
xchg
xor
out
dec
out
xor
and
mov
ficoms
test
aaa
mov
xor
pop
jg
xchg
jmp
idivb
movb
loopne
jg
mov
push
pop
lret
adc
adc
test
adc
cwtl
dec
cwtl
add
inc
scas
or
lret
sub
lcall
sub
inc
mov
aas
aas
or
cmp
lret
mov
inc
sbb
mov
sbb
data16
xchg
xchg
xchg
or
fwait
cltd
inc
dec
jecxz
xor
sub
loope
xchg
cltd
pusha
cs
adc
mov
scas
jmp
and
fwait
enter
pop
roll
movsl
in
lea
mov
pop
adc
stos
add
out
test
outsb
inc
pop
add
cmp
mov
enter
cmp
jmp
jle
and
mov
hlt
xchg
pop
sti
jbe
mov
insl
and
ljmp
mov
xor
pop
in
in
xor
mov
cmp
sbb
xchg
je
inc
test
std
cld
mov
stos
incb
ja
addr16
std
in
iret
sbb
mov
jge
xlat
push
xchg
mov
rorl
pop
and
or
arpl
add
inc
je
jae
sti
ret
loop
mov
roll
enter
stos
insb
mov
and
add
xchg
push
and
and
icebp
mov
adc
ret
mov
dec
mov
fisubl
bound
jmp
sbb
xchg
insl
fnstenv
cmp
pop
ja
cmp
and
callw
mov
divl
push
pop
xor
es
faddp
pop
cld
scas
dec
fsubrs
insb
repnz
cmp
lock
in
loop
mov
nop
je
popa
cmp
stos
les
add
cmpsl
fs
adc
lcall
insb
jge
pushf
fwait
stos
sbb
mov
push
inc
stos
out
xor
xor
das
popa
xlat
test
inc
jp
jbe
sti
shll
pusha
push
loop
popf
push
jne
push
ret
lcall
adc
inc
insl
mov
lods
pop
dec
or
pop
adc
dec
aas
enter
dec
ja
cltd
hlt
jae
scas
adc
sub
jmp
dec
rcr
fisttps
and
xchg
repnz
test
xor
push
mov
xor
jne
clc
mov
add
in
xchg
xchg
mov
and
ds
mov
stos
jmp
sub
arpl
enter
push
dec
leave
pop
pop
popf
aaa
shlb
add
jge
in
xchg
test
fnstcw
icebp
stc
mov
pop
jle
rep
mov
cmp
stc
mov
cmp
bnd
add
call
inc
pcmpgtd
inc
xchg
stos
lahf
mov
push
lods
in
mov
insl
in
mov
adc
outsl
push
jmp
xchg
jb
pop
loope
enter
mov
stc
cmp
xor
jp
cli
loopne
test
cs
mov
and
fdivrl
pop
push
leave
pop
roll
inc
push
cmp
mov
lret
outsb
push
iret
fsubrs
rorb
pop
scas
into
or
mov
push
or
mov
enter
adc
mov
add
stos
rcl
gs
or
aaa
in
jns
mov
xor
mov
dec
mov
adc
adc
jp
addr16
pusha
or
lea
and
xchg
aad
and
icebp
divl
out
push
sub
xchg
mov
mov
clc
mov
fcomip
push
scas
scas
ljmp
dec
mov
xor
cmp
pop
repz
cmp
or
hlt
daa
push
push
xchg
fisubrl
imul
or
adc
or
lods
fwait
es
test
inc
mov
xor
jmp
push
inc
push
mov
cmp
mov
mov
scas
aam
push
xor
rclb
pop
test
shl
scas
loope
sub
inc
mov
hlt
ds
fsubs
xchg
icebp
fcoml
icebp
in
fsubr
in
push
inc
mov
pop
iret
stc
add
push
pop
subb
out
sub
sub
push
push
and
int
jns
adc
idivb
mov
or
std
fnclex
mov
insb
inc
pop
cli
aaa
sbb
jno
iret
ss
imul
mov
jne
add
sub
and
imull
or
jne
outsl
repnz
jns
rol
push
xchg
test
push
jmp
out
int3
adc
popa
jb
loope
cld
xor
push
sub
and
lods
loopne
lods
es
pushf
pushf
pop
out
fwait
test
insl
dec
jp
repnz
mov
pushf
or
jbe
push
loop
pop
jns
fidivrs
jae
push
xor
push
insl
movsb
lahf
push
and
mov
ret
jp
or
push
mov
js
jb
lods
and
shlb
lahf
sbb
notl
ret
jmp
lahf
mov
xor
xchg
ljmp
cmpsl
mov
pop
push
into
lret
xchg
ds
jmp
xchg
lea
adc
decb
and
movsb
dec
inc
rcl
xor
mov
dec
push
jne
ficomps
jno
cld
dec
jae
nop
enter
cmpsl
push
mov
or
fs
fs
pop
cs
frstor
mov
dec
adc
xor
add
pavgw
cld
sbb
mov
pusha
lret
dec
jge
std
outsl
or
and
arpl
dec
mov
lds
or
lods
inc
xchg
imul
ss
test
in
int
xchg
cmpsb
cmc
cmp
push
repz
ss
sub
std
or
out
and
pop
mov
mov
pop
das
push
xor
leave
fidivs
mov
mov
xor
stos
andl
jnp
lods
jne
stc
repnz
daa
daa
mov
ja
in
adc
divps
or
outsl
lds
insl
xchg
mov
inc
mov
hlt
inc
stos
or
mov
addr16
mov
dec
hlt
outsb
push
shr
repz
inc
clc
aaa
xchg
sub
jmp
jg
popa
dec
lods
aas
enter
addr16
add
pop
loopne
insb
pop
hlt
xor
aas
or
dec
jecxz
sti
jo
jo
filds
imul
call
jno
shll
or
push
repz
notb
std
dec
mov
cmp
sbb
out
or
mov
push
fadds
pop
push
and
cltd
mov
mov
xor
cmp
xor
xchg
mov
or
loopne
or
outsb
imul
pusha
aas
inc
adc
fdivp
out
dec
shlb
add
mov
ljmp
nop
dec
lods
jg
xor
add
xor
shll
stos
dec
fs
inc
xchg
lret
outsl
mov
push
inc
pop
inc
xor
test
idivl
sbb
xchg
xchg
sub
fists
jb
add
and
jne
popf
cli
xchg
scas
xor
pop
pop
ret
mov
call
pop
ret
inc
xchg
in
xor
add
out
xor
xchg
imul
inc
cwtl
mov
sahf
es
pusha
aad
dec
imul
daa
xor
pusha
xchg
mov
xor
hlt
and
push
cmpsl
inc
xlat
jl
push
mov
rol
shlb
adc
adc
adc
insb
out
xor
xorb
and
cmpsb
adc
cmp
xor
dec
cs
xor
sbb
test
xchg
and
stc
xor
jb
dec
cmp
jno
mov
inc
mov
fldenv
mov
push
or
xchg
test
or
in
dec
dec
adc
mov
and
lock
fbstp
lahf
inc
mov
daa
mov
adc
pushf
ljmp
mov
scas
jge
test
xor
sahf
imul
sub
xorb
mov
imulb
mov
sbb
imul
insb
push
pusha
imul
inc
jae
fdivr
sub
stc
les
loope
lds
add
out
jmp
adc
jmp
cmp
mov
mov
lret
fisubs
jns
mov
jbe
inc
test
popa
cwtl
rcl
cs
add
xchg
mov
push
lods
ficomps
mov
aad
iret
popl
imul
push
mov
ja
jo
fnsave
out
daa
shrl
inc
in
lret
mov
cmpsb
fbld
sub
dec
les
test
cld
fistpl
push
nop
mov
imul
imul
in
mov
sti
fidivrl
jecxz
pop
mov
xchg
stos
or
es
or
cmp
and
cli
inc
pop
out
in
xchg
sbb
addl
andb
fwait
inc
sti
dec
jecxz
mov
inc
icebp
push
sbb
xchg
jae
out
dec
dec
setge
pop
out
out
mov
xchg
lret
mov
and
adc
enter
xor
stos
and
push
shr
fdivs
hlt
frstor
sbb
repz
ljmp
lock
adc
lock
inc
loopne
mov
lea
loopne
push
xchg
hlt
inc
push
xor
push
push
mov
pop
push
daa
push
push
xor
pop
divb
not
push
xor
pop
inc
icebp
lods
aas
lea
ret
and
mov
push
rcr
dec
jge
mov
sbbl
sub
sbb
xlat
adc
lock
mov
dec
push
sub
jns
lock
out
movsb
cli
ret
mov
int3
adc
das
mov
leave
gs
jno
jns
or
lods
and
inc
enter
dec
fucomip
fists
dec
lahf
xorb
popf
push
repnz
out
shr
lahf
cmpsl
jl
add
push
push
xchg
in
std
cwtl
and
sub
je
mov
lcall
and
sbb
pop
jo
xor
or
and
hlt
loop
push
add
or
or
mov
sub
je
inc
jo
mov
clc
jbe
rorl
mov
xchg
call
outsb
out
cmp
add
ret
dec
jmp
push
popa
stc
icebp
cmp
sub
pop
std
out
mov
mov
xor
adc
dec
pop
fists
ss
mov
lock
xchg
dec
jo
pushf
push
nop
xlat
mov
push
dec
mov
add
lahf
aas
aad
lcall
or
push
fsubl
add
sub
popa
pop
in
jne
jmp
push
mov
movsl
push
bound
inc
insl
outsb
fists
pop
fldcw
cmpsl
loope
adc
pop
mov
adc
lods
and
inc
push
inc
inc
adcb
fstcw
mov
fnstenv
jb
jne
cwtl
inc
daa
movsb
fnstenv
cmp
add
jmp
sub
call
inc
dec
jl
dec
loope
cmp
loopne
pushf
sub
xchg
fistpll
push
jne
out
cmp
inc
pop
jnp
repz
mov
lds
add
enter
xchg
xchg
inc
pop
xchg
xor
cmp
hlt
xchg
mov
lahf
xor
negb
adc
xchg
mov
jbe
jmp
popf
mov
scas
call
xor
enter
mov
mov
gs
and
lods
pop
mov
fnstcw
jecxz
adc
jbe
cs
jg
inc
cmp
pusha
jmp
jge
sub
jae
out
inc
pushaw
mov
cli
movsb
loope
aad
mov
decb
push
push
out
push
or
call
pop
fiadds
in
push
xlat
mov
inc
in
and
daa
mov
mov
dec
repz
aas
inc
bound
out
shr
int
cs
lahf
or
mov
mov
movsb
mov
movsl
test
lods
cltd
dec
add
mov
cmpsb
sbb
and
popf
mov
pop
sbb
popf
imul
pushf
fidivl
in
rclb
or
lock
jae
add
pushf
xor
lea
ret
cmp
jp
sbb
sbb
dec
fsubl
jge
test
and
mov
sbb
pusha
adc
sar
test
es
hlt
adc
fmuls
add
lret
mov
fisttpll
dec
push
xchg
movsl
dec
xor
lret
xor
jb
dec
or
lret
sti
lret
adc
movsl
jge
fwait
ror
pop
sbb
mov
sbb
loope
cmc
inc
sub
call
lds
cmp
jbe
jmp
add
dec
push
mul
mov
mov
clc
vmwrite
setae
jbe
inc
or
movsl
fwait
repnz
roll
loopne
mov
incb
mov
into
push
gs
xchg
cmp
in
pushf
inc
lahf
xchg
std
mov
call
xor
jl
xchg
in
pop
shlb
push
sub
daa
mov
and
frstor
cwtl
xor
jg
flds
inc
fwait
or
mov
pushf
push
pop
scas
jle
adc
push
jnp
push
jg
mov
js
ljmp
xchg
jno
sub
jo
cs
adc
loope
fcompl
mov
rcrb
imul
lret
call
cmp
push
push
mov
repz
dec
bnd
shrb
fdiv
push
nop
cmp
sub
cld
xchg
xor
fisubrl
std
mov
je
sbbb
jo
pop
enter
cmc
jl
dec
int
mov
sbb
testb
lock
cltd
pop
cmp
dec
iret
mov
cs
aas
jbe
aas
movsl
movsl
push
pop
or
cmp
pop
insb
mov
jns
movsb
add
scas
ljmp
arpl
fs
jae
daa
jns
adc
dec
and
jp
nop
jo
xor
sti
imul
inc
loope
lahf
out
pop
add
sbb
cmpsb
mov
dec
fmulp
test
push
aam
les
movsl
fst
mov
out
imul
jo
pop
out
iret
aaa
cmpsb
lcall
divl
and
dec
add
add
jl
fiaddl
gs
lods
imul
loope
pop
mov
pop
jb
adc
adc
mov
in
lcall
je
dec
mov
sbb
push
push
xor
jle
fbld
push
jbe
stc
movsl
rolb
mov
and
sbb
in
pop
pop
xor
daa
test
jl
insl
bound
sbb
fildll
cs
sbb
int3
cltd
out
or
jo
mov
lock
loope
adc
adc
loopne
pop
cmp
icebp
test
ret
add
aaa
adc
or
les
movsb
orb
pop
pop
xchg
mov
xorb
jnp
adc
outsl
loop
jo
fiadds
loope
addr16
andl
gs
xlat
mov
and
and
mov
movsb
out
push
fisttpll
jle
adc
fcmovu
inc
jle
ror
mov
leave
sub
subl
ljmp
out
rcrb
fsubrl
out
cmpsb
ror
repz
arpl
idiv
gs
adc
xor
cmp
inc
scas
enter
dec
sub
lock
add
imul
adc
das
outsl
mov
pop
cmp
mov
mov
and
cs
cmovbe
or
pop
xor
pop
lahf
in
fisubs
adc
mov
dec
jl
imul
les
icebp
call
outsb
js
mov
pop
es
mov
cwtl
or
loope
xor
mov
pusha
imul
push
sub
insb
push
push
add
add
pop
movsl
xchg
mov
mulb
adcb
sbb
das
mov
iret
cmp
inc
ret
out
add
cmp
rcrb
daa
mov
xchg
adc
dec
push
push
pop
mov
push
mov
jae
int
popa
push
stc
nop
mov
das
add
cmp
inc
xchg
repnz
jecxz
pop
cltd
fsubrl
gs
xchg
stos
int
mov
lods
sub
sbb
mov
cwtl
cld
cmp
int3
add
mov
aas
pop
test
shrb
rcrb
adc
fcoms
stos
cmpsb
les
or
scas
call
sbb
mov
mov
daa
aad
mov
push
lret
add
aad
pop
jg
lahf
rcrl
lret
insl
xchg
jmp
test
aad
into
pop
mov
aam
loope
insb
enter
jbe
push
xorl
test
cmc
adc
push
xchg
sbb
mov
in
cmpl
cmp
cmp
mov
out
out
mov
sti
repz
push
icebp
sub
sbb
jp
adc
lock
dec
mov
mov
mov
pop
xchg
jecxz
jb
js
dec
mov
or
cltd
nop
cmp
push
lcall
xchg
xchg
out
cmp
out
xor
lds
inc
dec
inc
repz
push
pushf
fbld
add
and
je
fwait
inc
sahf
pusha
add
push
xchg
push
mov
sahf
imul
jg
rclb
stos
mov
mov
arpl
mov
push
out
std
dec
xchg
mov
jnp
into
outsb
lcall
arpl
xlat
mov
repnz
rcl
xor
jp
mov
sbb
sub
movsl
clc
mov
mov
inc
ss
sub
adc
test
leave
faddl
mov
shll
cld
mov
outsl
pop
stc
pop
push
xlat
mov
out
in
mov
inc
mov
push
xchg
xor
sub
int
mov
out
mov
mov
jp
mov
add
xchg
test
bound
add
mov
sarl
aam
andl
inc
pop
mov
hlt
mov
push
push
ja
fstl
xchg
les
imul
and
jnp
cmp
aaa
pop
cmp
addl
inc
lcall
dec
test
mov
or
or
sub
pop
cwtl
pop
mov
insl
fcmovne
fnstsw
xchg
inc
dec
dec
shll
jo
and
js
lock
fcoms
jb
inc
sub
jmp
pop
lret
decb
or
addr16
push
fsubrs
cmp
loope
in
dec
bound
icebp
cmc
pop
xor
jle
jbe
add
daa
insl
add
stos
shll
fwait
ds
pushf
push
add
push
nop
neg
and
and
sti
mov
test
push
mov
std
fisttps
jno
and
lcall
pushf
aaa
jecxz
lret
scas
jecxz
cltd
or
mov
mov
xlat
bound
or
jle
lods
xor
hlt
ret
push
fiadds
sub
ja
loop
adc
bound
dec
sbb
xchg
je
xlat
js
push
subb
pop
dec
jo
pop
dec
push
cmc
sbb
in
or
fwait
outsl
jecxz
jge
xchg
shrl
xor
scas
loope
cmp
lock
xor
enter
test
xchg
cmp
inc
xchg
sub
mov
scas
icebp
push
pop
jb
nop
sbb
mov
aas
jne
mov
or
and
inc
mov
sbb
scas
dec
pop
or
inc
push
in
mov
jl
mov
mov
mov
adc
add
and
icebp
lods
jns
mov
push
icebp
xlat
ja
cli
mov
loop
push
fwait
cmp
cmp
je
sub
out
inc
mov
fwait
inc
les
or
iret
mov
lock
jae
add
pusha
mov
xor
dec
and
mov
mov
cmp
fldenv
ds
xchg
ja
push
rcl
dec
xchg
fcmovbe
sbb
orl
dec
loop
fld
lret
ja,pn
movsb
push
orb
and
sbb
fcompp
jb
mov
lock
mov
hlt
jle
in
lds
xchg
sar
xor
pop
fsts
push
aam
dec
mov
adcb
gs
pusha
into
rorb
sarl
mov
xlat
cld
cmpb
push
lcall
pop
call
jne
repz
fsubs
or
ret
movsb
aam
incb
jbe
lahf
filds
dec
jns
mov
lret
push
mov
inc
mov
nop
add
inc
or
clc
cli
inc
cmp
jp
mov
jg
push
ja
and
int3
jmp
fwait
jp
mov
dec
sti
xchg
cmpsl
push
lret
enter
push
cmp
fcom
adc
sub
xchg
adc
stc
aaa
movsb
xor
add
mov
and
add
daa
imul
mov
enter
or
fucomi
aad
in
mov
push
lods
jne
sub
or
add
mov
jmp
mov
in
cmc
sarl
shlb
hlt
mov
pop
shll
jmp
inc
and
out
pop
adc
popf
sarl
inc
xor
test
call
mov
les
loope
insb
fsubrl
jb
mov
mov
cmpsl
dec
xlat
into
push
fs
sti
dec
aam
jne
sub
or
movsb
jl
shrl
sbb
std
and
push
jns
mov
test
mov
or
pop
xor
inc
pop
fcomps
inc
push
and
aaa
outsl
mov
mov
sub
sbb
cmp
cmc
pop
daa
enter
arpl
mov
fs
push
and
xchg
aad
call
push
out
daa
daa
mov
test
push
hlt
mov
mov
xor
add
in
inc
cltd
cli
rcrb
call
xor
mov
mov
adc
addr16
pop
pop
and
fcoml
loop
sbb
push
or
dec
mov
lods
xchg
movb
mov
jge
mov
jb
push
adc
pop
mov
push
sub
jnp
stc
icebp
popa
inc
ja
imul
jp
lods
and
xor
fcomps
out
lods
sub
xchg
cli
mov
mov
xor
scas
scas
fisttps
mov
aaa
imul
bound
lods
mov
and
mov
mov
push
test
cld
mov
pop
push
sub
pop
jne
imul
addl
fistl
into
out
adc
xchg
mov
xchg
mov
mov
xor
xor
push
push
pop
jmp
sbb
repz
jb
xor
inc
cmp
iret
mov
lcall
repnz
jge
nop
out
push
jno
pop
sub
dec
out
and
fwait
sbb
jmp
arpl
and
scas
sbb
insl
je
xchg
jmp
lea
ror
lock
and
fsubrl
out
icebp
pop
cmc
cmp
sub
add
fcmovnu
sbb
xchg
divl
std
insb
mov
loope
sbb
push
mov
mov
jns
fs
shlb
or
lcall
pusha
and
jb
adc
int3
orl
jge
xchg
adc
mov
icebp
mov
xor
inc
mov
mov
loop
push
rcrb
jmp
pop
fistpll
loope
jb
cmp
jno
jmp
dec
pop
pop
sbb
jae
lcall
lret
js
scas
in
test
pushl
cmc
xchg
jbe
inc
in
or
hlt
push
filds
out
pop
jecxz
test
push
cld
js
jo
xor
out
inc
dec
xor
repnz
inc
add
lret
int3
cmp
sub
int
fst
jae
movl
pop
daa
cmp
mov
inc
pop
sbb
adc
and
in
mov
test
insl
adcl
icebp
mov
in
dec
mov
aas
and
or
xchg
lahf
cmp
fildl
jns
enter
dec
jmp
add
sub
mov
out
mov
sbb
fists
iret
addr16
cmpl
push
mov
sub
and
add
js
divb
mov
outsb
cmpsl
jns
jge
outsl
fnstenv
imul
enter
cmpsb
sti
mov
dec
push
fnsave
fcmovnbe
adc
pushf
ss
int3
xchg
mov
stos
mov
call
push
mov
ds
dec
into
daa
cmp
hlt
push
jmp
cmp
lret
sub
pop
das
xchg
inc
and
jp
inc
push
outsb
cmp
lahf
cli
pop
mov
xchg
inc
lret
fsubrl
lret
xor
xor
insb
mov
dec
andb
lcall
inc
dec
enter
pop
scas
xchg
mov
lock
movsb
mov
xor
fistl
mov
popa
pop
sub
pop
xchg
shll
xchg
std
mov
and
sbb
daa
rolb
push
fnstenv
mov
dec
mov
jno
or
add
xchg
and
push
lods
ja
pusha
jo
cmc
cmp
in
cmpsb
cmp
xchg
test
data16
in
test
pop
lret
pop
test
cmpsb
mov
sahf
and
jge
fmul
lds
lahf
mov
aaa
sbb
cmc
mov
sub
repz
ljmp
jp
mov
xchg
pushf
and
jle
cltd
sti
fwait
pop
nop
flds
mov
fdiv
in
and
jl
or
mov
mov
mov
dec
stos
xor
add
icebp
sti
out
roll
dec
scas
mov
dec
fcomps
push
mov
mov
rorl
arpl
dec
sbb
sahf
pop
inc
mov
repnz
into
sub
es
mov
or
jne
push
div
jl
push
ss
mov
xorl
push
mov
dec
loopne
fnstcw
pop
jmp
xchg
enter
xor
out
outsl
addr16
into
in
dec
dec
pop
xor
jne
dec
test
jmp
enter
sbb
cmp
jmp
loopne
in
es
out
je
xlat
cmpsb
adc
cli
xchg
icebp
fwait
scas
mov
jmp
stc
xchg
jae
mov
cmpsl
mov
out
xchg
in
mov
call
test
inc
cmp
sahf
pushl
js
pop
sbb
jno
jl
jb
mov
scas
stos
inc
adc
movsb
sub
push
and
mov
int
pop
add
xor
push
jne
sahf
dec
pop
jns
movsl
inc
or
icebp
inc
pusha
mov
lods
or
jmp
mov
add
ret
mov
roll
jbe
jmp
adc
int
mov
test
jns
jnp
ljmp
sub
in
cmp
test
test
dec
nop
ja
das
xchg
sub
sub
dec
fs
ss
lods
lea
scas
pop
push
cmp
mov
jno
jp
jne
lods
mov
or
dec
fildll
dec
test
outsl
or
pop
xchg
es
lods
or
add
push
fstps
xor
sbb
sbb
out
xor
jae
or
mov
mov
xchg
push
mov
popf
aam
pop
mov
stos
mov
mov
ret
sbb
cli
or
mov
inc
adc
aad
add
ljmp
sbb
dec
in
cmp
imull
pop
dec
xchg
loopne
adc
mov
mov
fsubrs
dec
gs
and
mov
lods
imul
adc
push
and
pop
inc
test
rorl
lcall
pop
daa
repz
stos
sbbl
pop
cmc
shrb
lds
sahf
addb
xor
cmp
inc
jo
xor
mov
lcall
jns
and
xor
mov
daa
sub
cmpsb
ja
jb
jecxz
sub
idivb
mov
xor
fldt
jg
or
mov
clc
stos
loope
mov
mov
jg
rcr
pop
or
into
fcomp
dec
popa
push
add
rcl
fisttpl
ss
adc
sbb
push
les
cmc
adc
imul
push
test
out
fwait
call
jne
movsl
negb
loopne
push
or
or
hlt
rcrl
enter
nop
iret
add
dec
add
outsl
std
mov
xor
dec
negb
inc
pop
mov
mov
outsl
icebp
add
in
jns
pop
cmp
jns
jge
leave
inc
leave
ljmp
adc
mov
lds
movsl
mov
jae
cltd
xor
push
les
jbe
sub
aam
add
cmp
pushf
mov
test
shl
jl
jmp
sub
test
push
xchg
mov
jg
sub
roll
or
iret
sbb
push
xor
loopne
fisubrl
stc
mov
dec
pop
cmc
ss
pop
adc
cmp
ja
mov
fwait
dec
lret
dec
ret
mov
ret
cmp
fld
mov
rorl
stos
jno
dec
jnp
mov
loopne
scas
addl
lret
inc
sbb
loope
push
dec
mov
pop
mov
xor
pop
xchg
aam
ss
xorl
or
sti
sub
mov
cmp
push
decb
mov
mov
jns
in
sti
jno,pt
loop
les
fcoms
sub
push
inc
repnz
add
pop
gs
pop
ljmp
das
inc
xchg
repnz
or
cld
add
les
mov
or
mov
lods
cli
inc
inc
mov
sarb
std
frstor
clc
adc
ret
inc
xor
adc
and
mov
shlb
jp
out
add
inc
pop
pop
adc
in
sbb
loopne
jge
int
push
mov
push
test
lds
movsb
xor
xorb
pop
mov
mov
push
mov
lahf
in
push
cmp
fstpt
sub
jne
icebp
ficoms
jo
jb
fisubs
sub
test
enter
mov
add
jmp
imul
outsl
pop
stos
pop
ds
sbb
mov
push
dec
push
and
add
int3
and
scas
addb
js
sub
lds
lahf
mov
mov
gs
iret
add
leave
data16
ds
rcrl
xor
pop
clc
aas
xor
push
add
mov
or
push
adc
xor
mov
jnp
add
push
enter
test
pop
orb
mov
push
sbb
mov
arpl
scas
rclb
xchg
xchg
and
cmp
fs
jb
jp
lret
arpl
cmp
stos
ds
xchg
mov
pop
jae
fsubp
jno
lds
sbb
out
arpl
jbe
lahf
add
mov
push
ret
js
aas
fprem
addr16
cmp
inc
lds
test
imul
mov
stc
and
in
push
fnstenv
in
dec
ljmp
mov
pop
or
flds
stos
push
dec
fisubs
adc
loop
mov
pop
pop
pop
out
pop
push
pop
push
iret
xor
es
in
lcall
out
cmp
jb
das
es
cmpsl
sub
xor
push
pop
inc
pushf
sub
inc
sarl
daa
mov
lock
loope
lahf
sarl
int
cmp
xchg
jecxz
xchg
and
test
and
outsb
arpl
test
add
les
arpl
jb
mov
repnz
and
mov
popl
call
inc
les
and
xor
push
imul
out
mov
dec
pop
enter
sub
jl
js
arpl
push
fbstp
lds
jg
inc
into
add
push
shlb
pop
sbb
inc
dec
into
xchg
stos
out
mov
dec
inc
sbb
cmp
push
inc
loop
lods
ljmp
movsb
icebp
mov
repz
insl
movsb
call
push
push
loope
sar
mov
and
pop
cmp
or
push
repz
jne
idiv
mov
sub
pop
pop
shll
cmp
inc
adc
mov
xchg
and
sbb
or
add
cmp
lock
repnz
fldl
test
xchg
dec
dec
xor
push
xor
pop
xchg
inc
test
adc
mov
call
repz
push
roll
push
adc
ret
adc
fstps
pop
sbb
push
mov
popf
mov
sbb
xorb
mov
sub
sub
outsl
rcl
repnz
rol
out
and
ja
addl
rorl
and
imul
cmc
xlat
inc
and
xchg
in
rol
and
push
push
push
notb
cmc
dec
xor
ffreep
xor
das
push
clc
cmp
sbb
ret
add
popf
dec
mov
shll
xchg
cltd
jae
jge
leave
or
pop
xchg
mov
loope
insl
and
jne
push
mov
dec
mov
jb
jp
stc
mov
add
mov
jecxz
int3
or
test
fnstcw
push
jle
outsb
adc
mov
xor
mov
pushf
cmp
sbb
mov
icebp
ficoml
mov
mov
mov
push
popa
push
xor
rorl
push
aam
xlat
fldcw
ret
jge
bswap
mov
jp
push
push
fcoml
sub
stos
pop
mov
add
pop
jle
xchg
cmp
iret
mov
je
mov
push
jl
ljmp
xchg
scas
lret
cmp
xchg
jl
les
stc
xchg
shll
loopne
add
dec
sahf
mov
cmp
fisttpll
ret
cltd
mov
add
subl
mov
mov
xchg
and
fucomp
and
xor
xchg
mov
nop
cmp
push
inc
out
movsb
add
ficoms
pusha
cmpsl
push
and
mov
and
lea
cmp
lret
test
fs
arpl
in
movsb
xor
sbb
aad
faddp
jmp
sub
ja
sti
out
fdivr
and
enter
cmpb
rep
cld
cmpb
or
aad
dec
pop
dec
test
scas
jmp
lcall
lods
arpl
mov
in
out
mov
push
xor
push
pop
inc
aaa
dec
sub
inc
mov
adc
and
cmp
repnz
cmp
rorb
inc
mov
xor
dec
pop
repnz
cmpsl
push
fcmovnbe
sarb
push
enter
xor
aas
adc
add
jnp
cmpsl
jae
mov
adc
cmp
movsl
ja
fstpt
mov
adc
mov
mov
cltd
pop
jle
mov
jle
push
repnz
shrb
mov
pusha
insb
and
rcll
lret
adc
pop
sub
stos
jecxz
lret
sbbl
dec
sub
out
loopne
in
pop
sbb
js
scas
adc
mov
data16
mov
jecxz
dec
pop
scas
movsb
inc
or
sti
sarl
add
cmp
lods
push
xor
ret
sbb
movsb
les
jmp
sarl
leave
push
imul
adc
test
sti
mov
lret
ds
and
or
test
xchg
xchg
jle
cld
inc
xchg
xlat
xor
jnp
sub
xor
pusha
sti
xor
xor
call
xor
fdivs
jmp
punpckhbw
push
out
mov
addr16
or
push
bound
loope
lds
call
mov
xchg
push
sarb
int
or
pop
adc
push
insl
cwtl
sahf
and
xor
lock
mov
int3
frstor
inc
mov
fisttpl
sub
dec
popa
pushf
aas
scas
loope
push
cmp
inc
xchg
into
jns
adc
in
cmovno
cmpsb
call
push
cmp
loop
mov
movsl
add
es
pop
shrl
roll
out
push
add
push
pop
test
or
cmp
push
cs
fcoml
mov
jae
outsl
dec
notl
orl
sti
cmp
jb
rorb
imul
mov
and
daa
in
mov
jl
lods
pop
pop
movsb
ret
scas
add
xlat
test
mov
add
dec
sbb
push
repnz
stos
scas
lods
mov
shl
and
outsb
add
jg
xchg
loop
xchg
cmc
addr16
or
mov
mov
in
pop
lods
neg
jb
lea
lea
pop
sub
inc
cmp
add
call
dec
into
mov
ljmp
mov
out
mov
sub
cmp
ja
sbb
mov
xor
sahf
cmp
and
adc
mov
xchg
cltd
sahf
iret
xor
inc
pop
std
sti
mov
cmc
push
pusha
cwtl
push
or
ljmp
xchg
xchg
push
jmp
out
pushf
adc
cmp
xchg
mov
ret
int
pop
into
ss
xchg
push
pop
push
push
fldl
leave
pop
sbb
xchg
cld
pop
ljmp
inc
and
or
inc
xlat
mov
nop
enter
mov
push
sub
adc
xor
jle
sub
lods
fmul
add
adc
jmp
fs
lret
sbbb
ss
sub
xchg
outsl
inc
ja
inc
aam
sub
in
imul
rcrl
pcmpeqd
mov
add
xchg
in
cli
out
in
add
icebp
inc
add
pop
sub
imul
test
xchg
pop
negl
pop
stos
jl
int
arpl
ljmp
mov
cmc
push
lcall
shll
xorl
dec
lret
and
sub
mov
pop
mov
fwait
dec
and
mov
fwait
cmp
jnp
adc
push
lods
cmpsl
fwait
add
pusha
sbb
xor
inc
std
mov
adc
test
icebp
mov
nopl
xchg
imul
adc
mov
pop
lretw
mov
orl
into
call
mov
push
mov
arpl
sbb
aaa
scas
js
xor
cld
adc
and
inc
add
ljmp
aam
mov
int3
mov
or
mov
call
and
test
xchg
xor
push
dec
push
pop
and
mov
push
pushl
repnz
in
jno
enter
popa
mov
sub
rol
out
mov
out
imul
push
or
xor
fucomip
dec
cmp
repnz
pop
adc
jmp
test
leave
cmp
sbb
pop
inc
dec
jge
or
fists
scas
mov
insl
xor
leave
icebp
cmc
or
leave
subb
cmpsl
cmp
lea
fcmovnb
mov
aas
adc
addr16
mov
ret
orb
cmp
cltd
sbb
sarb
pushf
jle
sbb
rol
push
and
pop
int3
push
sub
cs
test
mov
push
loope
or
outsb
ja
cmpsb
jbe
mov
imul
lret
pusha
fs
push
lcall
dec
xor
or
sub
xorl
or
ret
xorl
out
out
and
dec
jns
leave
adc
dec
cmpsl
mov
inc
cwtl
gs
inc
imul
or
sar
ret
mov
adc
out
lret
xor
pop
shll
mov
lds
arpl
ds
mov
or
sub
xor
cwtl
pop
gs
addr16
sbbl
mov
mov
mov
nop
sarl
pop
clc
sbb
push
repz
in
aaa
mov
or
stos
gs
inc
loope
stc
rorb
mov
jg
jl
xor
fs
fs
das
stos
jo
ja
and
out
and
jmp
lock
lods
xchg
rclb
jne
shrb
fistpll
out
insl
in
jns
shlb
xor
lcall
push
jo
jge
call
in
xchg
call
out
sub
lcall
jnp
push
pop
xchg
fstl
insl
in
aam
arpl
movsb
mov
jns
fimuls
dec
fists
sbb
je
mov
lods
or
mov
lds
rclb
cmpsb
pop
mov
fs
clc
fs
mov
mov
xchg
data16
add
ss
or
or
mov
xor
pop
in
cli
or
loope
inc
or
xchg
mov
pop
mov
and
mov
stos
ljmp
mov
popf
fcoms
cmpsb
es
pop
iret
mov
fdivrl
in
or
incb
lahf
addr16
aad
sub
lea
pop
jbe
mov
inc
and
sbb
sub
and
rorb
adc
xchg
incl
jno
addb
and
inc
push
aad
test
cmpb
lea
cmp
cmp
push
fcoml
aad
push
fistpl
sti
clc
jg
mov
and
sub
xor
cmpsl
adc
mov
mov
insl
xor
xchg
mov
pop
mov
ds
inc
push
gs
xchg
push
mov
insb
sub
jns
pop
int3
mov
jnp
cmp
sbb
gs
mov
sub
mov
lock
insb
add
out
mov
cmp
insb
mov
cmp
sbb
add
mov
dec
sbb
cli
push
aad
rcrb
or
movsl
adc
xchg
icebp
lret
bound
jp
inc
data16
lahf
push
cmp
ljmp
clc
popf
scas
dec
dec
xchg
lahf
mov
cwtl
ss
pop
mov
frstor
ss
movsl
lcall
je
mov
lahf
faddl
popa
mov
sar
cld
mov
xchg
les
out
mov
movsl
xchg
movsb
mov
dec
adc
jbe
jbe
imul
insl
fstpl
push
or
test
or
daa
insb
dec
je
test
xchg
js
dec
lods
or
mov
sbb
mov
lcall
aam
outsl
call
sbb
jge
movsl
dec
andl
inc
xchg
mov
ret
mov
inc
sub
or
adc
sti
xor
sbb
and
or
xor
cwtl
testb
jecxz
xor
pop
jp
inc
jp
sbb
cmp
mov
cmp
jle
mov
aad
aad
scas
mov
addr16
insb
mov
cmp
xor
mov
jne
mov
arpl
lahf
pushf
in
adc
addr16
lret
and
pop
mov
sahf
scas
xor
jno
fcomip
add
dec
mov
cmpsl
jno
mov
sahf
push
test
jns
lods
cmp
and
shrl
jp
jne
fldl
aam
stc
adc
mov
inc
xchg
mov
out
pop
ret
inc
push
xlat
cmc
pushf
push
jp
mov
js
test
pop
sub
cmp
pop
xor
test
fcomp
push
push
pop
jb
pusha
lock
shl
or
push
or
xchg
mov
lcall
out
aam
sahf
jno
xor
push
jb
jbe
loopne
enter
movsb
jnp
or
mov
or
sub
mov
popa
pop
xchg
and
inc
pop
fcomps
inc
sub
std
imul
push
sub
sbb
into
pushf
and
scas
push
lcall
mov
xor
cmpsb
sub
or
cwtl
jnp
imul
out
mov
jle
xchg
out
int
std
adc
pop
jns
dec
jecxz
fmull
xchg
jno
jecxz
xchg
scas
sbb
push
mov
mov
sub
jg
data16
push
scas
stos
cmc
ret
sbb
loop
addr16
dec
or
xlat
adc
sbb
and
icebp
shll
in
mov
lock
cwtl
and
orb
insl
out
fstpl
mov
inc
cs
add
or
js
push
xor
sbb
lahf
movsb
and
fsubp
cmp
sahf
mov
hlt
dec
cmp
mov
xor
lahf
pop
jg
addr16
inc
lcall
push
cmp
xchg
and
push
decl
inc
out
xchg
pushl
add
inc
popa
push
div
mov
push
ficomps
pop
addr16
ror
add
fistpl
mov
arpl
mov
dec
or
or
add
xor
and
pusha
dec
imul
push
mov
cld
decb
sub
mov
adc
pop
jge
aam
cmp
pusha
int3
ret
mov
cmc
and
orb
cwtl
xchg
imul
iret
mov
loope
push
das
push
and
out
inc
xchg
lret
inc
push
icebp
leave
inc
dec
jle
xchg
xor
popf
sbb
mov
lahf
push
stos
lahf
jbe
out
adc
xor
jg
insl
add
xor
and
fwait
negb
xchg
pop
out
add
push
fcomps
lcall
in
push
insb
ja
and
xlat
dec
daa
adc
fcompl
clc
jno
repnz
cs
mov
dec
dec
icebp
push
imul
inc
ret
mov
fidivs
idivb
and
cmpsl
imul
ficoml
bound
in
cmpsb
dec
test
mov
mov
cmpb
push
xchg
cmp
lds
pop
out
outsl
add
out
mov
push
inc
jb
cmc
popf
lods
cmp
dec
cmp
rcl
fwait
loopne
aaa
pop
lock
and
cmp
or
aam
roll
adcb
jo
nop
add
outsl
mov
imul
shrl
cmpl
jnp
xor
adcl
iret
into
push
mov
imul
and
push
push
adc
cmpb
add
pop
cmp
test
push
pop
xor
jbe
imul
pop
adc
scas
rol
mov
sti
mov
test
scas
mov
pop
inc
cmp
mov
fstpl
inc
or
sub
mov
cmpl
mov
icebp
in
push
mov
repnz
test
or
xchg
cmp
mov
stos
mov
sub
and
mov
inc
mov
jb
nop
lods
sub
push
insb
dec
or
or
cmp
cli
iret
xchg
sub
xchg
test
imul
leave
outsw
mov
loopne
orb
cmc
sbb
xchg
push
mov
ret
push
out
mov
icebp
pop
jnp
inc
popf
adc
sub
test
add
addr16
cs
cltd
adc
adc
fsubrs
inc
popf
cmp
ret
add
ret
lods
insb
mov
lcall
sub
xchg
dec
pop
scas
sbb
jl
mov
xchg
les
jnp
fmul
adc
xor
xor
mov
int3
repz
fisttps
pushf
push
dec
mov
adc
pop
xchg
sarb
and
xchg
in
jmp
orb
sbb
jp
rol
jbe
les
add
dec
lahf
dec
ljmp
aam
in
rol
aaa
and
and
and
add
or
fwait
jne
test
push
cmpsb
lcall
movsb
pop
ret
jle
xor
dec
hlt
push
gs
popf
push
les
lcall
add
mov
sub
fisttps
xor
and
ror
imul
lea
pop
xor
inc
pop
ficoms
addr16
mov
xchg
jge
pop
pop
mov
popf
leave
test
dec
cmp
push
pop
xor
inc
shrb
cmp
cld
outsb
adc
adc
push
fmull
xor
fiadds
outsb
call
dec
dec
das
sbb
cmp
mov
jle
clc
push
push
cmp
xor
mov
lret
mov
stos
mov
mov
outsl
xchg
rorl
fcoml
fs
int
pop
cmp
jns
jne
mov
and
frstor
mov
mov
cmpsl
jae
pop
adc
xchg
jae
fwait
test
fsubrs
push
into
dec
ss
mov
sub
xlat
aas
inc
cs
call
mov
popl
or
add
int
pop
sub
js
and
call
movsl
hlt
pop
push
jg
cmp
and
mov
pop
addl
sbb
xor
stos
mov
cmpl
mov
sarl
add
jecxz
daa
int
out
jo
sbb
jae
xchg
ljmp
pushf
inc
scas
imul
into
or
addb
inc
notb
aaa
dec
das
call
cmc
les
lock
mov
aaa
scas
mov
xchg
xor
jb
aad
pop
push
rorb
ja
or
cmp
xchg
xlat
loope
leave
dec
imul
push
lea
fldenv
or
sbb
out
pop
jmp
xor
sahf
jle
jmp
or
test
iret
out
fcomip
and
push
sbb
mull
in
mov
mov
es
out
jae
jle
mov
sbbl
push
inc
inc
call
pop
adc
mov
incl
jecxz
xor
fcompl
cmp
and
pop
adc
xor
sbb
dec
xor
or
jge
push
cltd
mov
test
adc
pop
aad
roll
adc
mov
adc
sti
lods
sub
jge
push
jle
daa
pop
or
pop
mov
outsl
insl
ljmp
imul
mov
insl
js
jge
xchg
fsts
xchg
fistps
add
push
mov
test
sbb
mov
pop
or
pusha
stc
leave
ret
daa
cmpsb
stos
lea
mov
fdivp
jo
test
mov
outsb
nop
pushf
mov
movsl
inc
push
xor
add
stos
inc
test
lods
cmp
je
in
lcall
xor
in
repnz
or
out
dec
xchg
lea
es
sahf
mov
push
out
xchg
push
sub
mov
aam
mov
xor
jnp
cmc
dec
es
aam
je
dec
dec
push
pop
pop
clc
or
shrb
les
imul
roll
adc
bound
sub
push
imul
hlt
dec
pop
pop
sbb
jmp
sub
cmp
sti
in
sub
cmpsl
std
cmp
cwtl
dec
gs
xor
loopne
imul
cmpsl
xlat
push
or
loop
xor
movsb
shll
lock
ret
cmpsb
repnz
push
jge
jo
pop
mov
nop
push
out
jns
hlt
push
sbb
mov
and
sbb
sti
ja
jbe
pop
xchg
bound
imull
add
cmp
call
in
mov
cmpsl
lret
rep
push
inc
mov
jo
das
adc
mov
sarb
xorb
cmp
sbb
and
mov
ret
push
jmp
in
jne
shrb
dec
ret
ret
jbe
push
leave
xchg
push
xor
lret
pop
loop
scas
stc
adc
bound
jmp
ret
xchg
fcmovne
pop
jae
push
mov
push
lahf
adc
loop
in
sub
es
xlat
inc
xchg
sbbb
xor
fimull
xchg
or
sub
push
aaa
imul
push
rcll
std
cmpsl
push
ret
in
pop
mov
ja
fcompl
push
inc
cmp
stc
lret
push
mov
cld
pop
test
xchg
fst
lock
ja
adc
inc
shrb
arpl
movsl
xchg
out
mov
loopne
push
xor
popa
pushf
or
mov
xchg
in
negl
pop
sbb
out
into
xchg
jo
lahf
insl
sbb
jle
mov
test
cmp
dec
lods
sub
push
and
mov
aaa
dec
mov
outsl
mov
push
mov
mov
and
ds
lods
or
mov
in
inc
cld
xchg
and
dec
jle
adc
clc
dec
dec
jns,pn
mov
mov
inc
ret
test
out
xor
pop
and
mov
adc
adc
fcoml
int
aas
repz
movsb
jbe
dec
and
sbb
adc
cmpsl
out
leave
xchg
mov
sub
mov
addr16
mov
sbb
idiv
jp
psrld
jmp
push
or
mov
movsb
dec
jns
inc
adc
inc
lds
lods
push
imul
popf
out
pop
loope
cli
sbb
mov
aas
and
ds
int
dec
pop
ds
call
fiaddl
xchg
lds
mov
mov
pop
xlat
sahf
jo
insl
aad
mov
pop
lahf
xor
and
jge
add
pop
lahf
cmpsl
sub
clc
bsr
shlb
lock
orb
push
and
insl
inc
rcll
and
mov
mov
or
xchg
inc
sub
sub
lock
das
fldenv
push
jg
stos
fwait
xor
insl
leave
push
cli
sbb
pushf
adc
mov
and
sbb
mov
sar
test
dec
push
outsl
dec
sub
sub
and
out
clc
andl
adcb
or
sub
daa
sub
cltd
xchg
xor
imul
mov
ret
mov
sbb
adc
inc
mov
sub
push
add
repnz
fidivrl
mov
inc
rorb
mov
push
mov
xchg
mov
dec
icebp
or
push
insb
pop
stc
xlat
push
inc
xor
je
test
pushf
fcmovbe
xor
adc
mov
test
imul
cmp
cmpsb
ds
repnz
daa
lds
dec
mov
add
scas
jo
cli
and
or
in
adc
sub
cmpsb
pop
stos
xorb
sahf
stos
cltd
lods
dec
or
cbtw
jl
mov
icebp
jecxz
jne
in
or
loopne
push
clc
pop
mov
pop
jmp
xorb
ja
aam
mov
xor
or
mov
push
dec
out
jnp
lret
mov
inc
mov
outsl
push
or
cs
das
inc
lcall
fs
mov
xchg
addr16
ja
rcl
rclb
push
mov
hlt
push
fdivrs
jl
bound
sub
mov
pushf
jg
outsl
push
or
jae
pop
imul
icebp
out
jae
jb
popf
and
arpl
or
cwtl
in
dec
das
rcll
sub
ret
mov
inc
xchg
pop
jl
imul
jb
insb
xor
das
or
or
inc
xlat
or
dec
push
mov
int3
clc
lahf
sub
cld
outsl
push
scas
rcl
adc
inc
insb
and
mov
cmp
andb
imulb
lock
add
insb
cmp
sbb
movsb
aam
leave
incb
icebp
xor
lcall
fld
adc
imul
pop
pushf
loopne
sub
lahf
fstpl
jmp
jns
mov
sub
dec
xchg
in
adc
fwait
pop
sbb
int
mov
and
and
pop
outsl
mull
es
mov
lods
lds
lock
loop
cmp
cmp
mov
repz
cli
cli
aaa
mov
mov
in
inc
fwait
dec
ror
and
or
sbb
lret
mov
adc
add
jmp
mov
cmp
push
and
xchg
int
adc
bound
adc
and
jle
je
cli
push
pusha
fstpt
sub
and
dec
cmp
mov
mov
cli
dec
out
lds
fcomi
xchg
adc
mov
jp
icebp
fxch
lock
mov
test
pop
pop
mov
mov
loopne
flds
cmpsb
add
and
pushl
sbb
push
sbb
popf
mov
adc
inc
pop
mov
in
inc
mov
mov
sbb
mov
mov
cli
mov
fcoms
xchg
lods
pop
sub
add
xor
dec
sbb
mov
lds
xor
pop
add
mov
mov
jnp
push
and
xor
sbb
gs
fwait
jns
push
mov
push
insl
shll
fidivrl
out
push
movsb
sub
mov
out
pop
in
jecxz
les
pop
dec
ficoms
aad
stos
or
push
mov
xchg
and
lret
test
adc
in
pop
pop
popf
pop
outsl
jle
push
sub
out
in
adc
add
daa
inc
fwait
aad
pop
outsb
sub
stos
dec
aam
iret
xor
repz
mov
xchg
xlat
and
mov
sahf
xchg
ss
push
in
lods
popa
mov
jp
fs
sub
lds
aas
testl
dec
lods
xorb
cmp
adc
test
inc
int
xor
mov
sbb
dec
addr16
mov
out
push
std
pmaxub
sub
and
stos
xor
jmp
lods
iret
xchg
mov
movsb
add
js
xchg
push
mov
and
movsl
addr16
jl
icebp
pop
in
filds
std
in
divb
aam
jae
test
ja
xchg
sahf
je
dec
cmp
mov
mov
movsl
imulb
imul
push
mov
fwait
jmp
and
popa
mov
push
repz
mov
sub
notb
fimull
aam
xchg
out
faddl
test
cmc
fs
xchg
loope
push
xor
mov
aas
testl
cld
cli
int3
popf
cmpsb
outsb
dec
rcl
jmp
loope
adc
mov
nop
or
cld
cmp
call
pusha
ds
lahf
sub
push
ret
iret
jns
jle
or
imul
push
gs
mov
or
or
or
sbb
mov
dec
pop
adc
fdivl
push
inc
sub
mov
pop
gs
sbb
sub
adc
aaa
xor
in
dec
inc
mov
mov
cwtl
std
pop
je
lahf
cmc
cmc
in
and
xchg
gs
clc
cmpsl
popa
xchg
add
adc
mov
orb
dec
lock
decb
xor
mov
jae
stos
sub
cmp
cmpsl
mov
mov
lahf
sbb
adc
stos
pop
movsb
push
jge
inc
adc
sbb
out
ja
aaa
adc
repnz
dec
sub
push
and
in
push
mov
outsb
inc
push
fsubl
dec
sahf
scas
xor
mov
jo
arpl
mov
lods
push
push
fyl2x
inc
inc
xchg
das
add
in
mov
lret
adc
rcrb
adc
mov
in
mov
int3
sbb
je
or
push
jp
mov
and
lret
push
jle
lret
inc
test
xchg
call
cli
adc
mov
sbb
sbb
hlt
cmp
mov
or
jle
inc
loopw
sbb
call
jecxz
test
adc
ja
xor
push
cltd
inc
pop
cmp
loopne
fldcw
test
rcrb
in
in
out
ret
pop
mov
pop
sahf
dec
dec
mov
jbe
rolb
cmpsl
jecxz
loopne
lcall
addl
add
sbb
push
movsl
or
lods
ja
ret
popa
mov
jnp
decl
mov
sub
and
scas
add
shrb
insl
dec
sub
inc
jg
stos
ret
lds
cmc
sub
loopne
loop
es
xchg
push
ja
inc
lret
push
push
pushf
js
cmp
xor
xchg
dec
cmp
cmp
mov
add
insl
std
popf
ret
je
in
jo
jns
ficoml
rcrb
ret
xchg
test
aaa
xchg
mov
mov
add
fidivrl
call
and
xor
imul
inc
xor
push
cli
mov
pop
xchg
rorl
sbb
sub
imul
inc
and
test
stc
insb
pop
mov
add
sbb
adc
mov
test
in
das
scas
add
push
imul
js
jo
push
add
pop
xchg
fsts
aad
dec
xchg
or
cmpl
rcr
test
insl
ret
sub
fucomip
jns
call
adc
fwait
popf
dec
sub
jmp
int3
repz
int
cmp
push
sub
ds
add
stc
adc
and
or
movsb
cmc
xchg
push
int
movsl
mov
sti
jbe
dec
or
insl
jbe
sbb
into
stos
fnstcw
js
inc
cmp
cmp
xor
test
dec
cli
adc
mov
push
scas
lret
add
sub
in
ljmp
sub
pop
sbb
movsb
aad
xchg
imul
adc
adc
adcb
shlb
repnz
punpckhdq
cmp
stos
lahf
hlt
popa
jp
lcall
leave
adc
nop
test
enter
hlt
push
scas
mov
push
movsb
mov
gs
sub
pop
push
clc
rclb
add
scas
lahf
movsl
mov
jmp
pop
sahf
jno
add
sbb
shl
push
dec
sub
lea
mov
jp
decl
jb
sbb
pop
xor
sub
or
mov
fists
jb
pop
pop
mov
mov
out
popa
mov
addr16
sahf
sub
fadds
sub
scas
shll
push
out
xor
cs
lods
pop
xchg
shll
fnstenv
pop
lahf
inc
mov
arpl
add
mov
push
sbb
or
iret
mov
lods
mov
mov
xor
sbb
xorb
adc
push
lock
gs
mov
xchg
adc
pop
sub
sbb
and
fisttpll
stc
aad
mov
push
cmpsl
bound
xchg
jne
into
mov
and
pop
in
jp
xchg
popf
andl
andb
rcrl
in
xchg
jns
and
push
xchg
jo
mov
mov
pop
ds
in
out
adc
aas
lds
js
sbb
add
jno
push
int
ds
sub
pusha
xchg
pop
cld
mov
je
xchg
cmp
call
sub
push
pop
rcrb
sub
shlb
std
imul
jmp
cmp
dec
loopne
rcr
sbb
mov
movsl
mov
mov
pop
movsb
jl
push
mov
in
jmp
in
cmpsb
sbb
cmpsb
cmpsb
add
mov
std
out
lcall
push
inc
sahf
scas
imul
cltd
inc
movsl
out
jp
stos
imul
sub
sub
sub
mov
mov
push
data16
out
add
mov
sbb
ljmp
aam
mov
mov
out
movsb
dec
mov
inc
and
push
gs
xchg
mov
testb
jnp
lret
inc
addb
scas
repnz
cmpsb
js
mov
pop
sub
dec
cmp
mov
in
sti
push
in
clc
cmp
push
lahf
push
pop
mov
push
cld
dec
ficoml
imul
cs
leave
jp
jae
addr16
cltd
xchg
inc
loop
add
inc
lahf
xor
fwait
jns
cmpb
inc
enter
pop
call
loop
popf
sub
hlt
or
test
into
jmp
or
xor
sub
lods
or
lcall
mov
jb
stos
sbb
push
popf
inc
stos
dec
mov
push
mov
mov
je
xchg
cmpsb
fcmovnb
mov
push
sbb
jns
outsl
pushf
or
outsb
mov
cs
imulb
jnp
dec
fstl
push
lds
jl
arpl
push
jle
orb
jmp
leave
fwait
dec
pop
lea
test
leave
call
cmp
fists
sbb
and
stos
pusha
loope
sbb
ds
pop
sbbl
push
push
lcall
mov
bound
mov
in
inc
xchg
in
sti
fcmove
cmp
in
stos
pop
fldenv
sbb
jbe
inc
fwait
int
popf
lock
push
cwtl
aad
mov
mov
loope
fwait
add
and
jmp
fisubrl
sbb
movsb
repnz
pop
adc
cmp
dec
repz
das
in
sahf
movb
aam
sub
gs
in
push
and
test
add
sbb
js
fmull
fadds
add
xchg
mov
pop
mov
cmp
popa
mov
loope
push
sub
insl
push
lea
pop
xchg
and
inc
push
pusha
loopne
mov
mov
cwtl
inc
fistps
imul
push
mov
pop
mov
cli
movsl
jnp
gs
mov
sbb
add
out
xchg
stos
stos
mov
mov
pop
mov
adc
push
and
std
jb
inc
je
push
inc
or
dec
dec
imul
sub
scas
test
insb
in
mov
loope
cmc
in
dec
cmp
lock
or
ss
dec
es
push
jbe
jns
mov
mov
mov
inc
mov
mov
cmp
mov
loopne
cmp
out
mov
pop
outsl
stc
les
aad
adc
out
in
cmc
test
rcrl
jecxz
jbe
cmp
sarb
sbb
cmp
nop
mov
jb
hlt
cltd
bound
ss
jns
adc
and
std
ret
xor
or
repz
mov
jns
mov
cmp
addr16
inc
cli
dec
std
mov
icebp
cs
push
ds
and
or
mov
and
fidivs
iret
rcl
into
pushf
testb
fwait
ja
cld
imul
je
and
out
xchg
dec
frstor
lret
pop
into
sub
ret
mov
mov
cmpsl
in
or
repz
bound
inc
pop
push
popfw
lret
nop
or
xchg
add
and
mov
xlat
orb
pop
xor
adc
push
rcrl
rcll
push
push
je
mov
sarb
add
cmpsl
pop
xor
out
pop
mov
loop
jecxz
imul
pop
and
sub
cmp
test
stos
movsl
orl
push
in
lds
icebp
push
dec
push
xor
pop
scas
outsl
stos
in
aad
xor
or
jno
lcall
lret
mov
loopne
dec
in
ja
cmovg
fs
jecxz
sub
or
es
hlt
cmp
adcl
sub
jae
mov
aaa
ror
push
pop
test
pop
fisttps
push
xchg
repnz
adc
inc
scas
popf
cmp
jbe
sub
cmpsb
movsb
add
dec
mov
mov
mov
mov
sbb
push
push
aaa
sarb
dec
xor
icebp
int
jo
idiv
sub
jge
mov
xor
push
cmp
sbb
xor
ja
xchg
lods
dec
outsb
pop
mov
and
and
not
adc
xlat
int3
sbb
mov
dec
shrl
lods
pop
sub
pushf
adc
js
test
sub
xchg
sub
jno
sub
and
and
mov
shl
push
mov
adc
xorl
faddp
pop
test
mov
in
outsl
dec
xchg
mov
pushf
aam
xchg
push
sub
dec
xor
and
xor
mov
xchg
or
mov
lds
cmp
insb
popa
insl
cmp
adc
repz
push
fcomip
out
dec
rol
in
xor
push
mov
in
notl
iret
push
mov
lcall
push
cmp
and
jge
pop
idivb
cld
xchg
les
ss
pop
imulb
arpl
mov
jnp
inc
push
je
push
xchg
cmp
push
push
into
in
iret
cmp
fs
adc
xchg
xchg
push
jne
out
mov
mov
sub
aad
push
mov
push
sub
sbb
les
xor
fists
and
jmp
cltd
aaa
inc
js
jl
sub
adc
and
jge
pop
lret
lock
mov
ds
cmp
stc
jle
loope
pop
cmpsl
out
push
pusha
sub
stc
adc
xchg
sbb
jb
inc
sub
sahf
lds
mov
inc
push
clc
or
jbe
jne
ss
subb
cmp
xor
jmp
pop
mov
icebp
mov
add
shrb
cs
adc
cmp
les
mov
xor
repz
or
aas
clc
xchg
dec
stc
sub
sti
push
mov
dec
mov
push
cld
fisubrs
fildl
dec
popa
daa
dec
push
pushf
xchg
cld
jmp
inc
enter
xchg
int
xchg
std
adc
jg
add
insb
mov
into
sub
clc
mov
dec
movsl
decl
pop
int3
push
push
test
pop
shrb
mov
addr16
jp
roll
daa
test
mulb
and
mov
push
inc
dec
xor
call
jge
xor
sub
adc
mov
nop
or
fldt
inc
push
mov
mov
out
ficompl
jecxz
inc
hlt
xor
dec
mov
mov
xchg
add
mov
iret
cs
cmp
movsb
in
mov
aaa
add
mov
push
inc
into
xor
enter
outsb
and
mov
lods
add
imul
push
subl
mov
adc
mov
je
in
testl
sahf
push
pop
fdivrl
xor
mov
testl
loop
shlb
icebp
jno
cs
xchg
dec
aad
mov
pop
aaa
int3
xchg
idivl
and
mov
fistl
cmp
enter
stos
cli
jmp
or
fisubrs
mov
mov
adc
test
into
lea
xchg
add
enter
inc
add
jb
outsl
mov
flds
cmp
fdivrs
frstor
jecxz
mov
mov
call
xor
pop
adc
cmp
insl
xor
js
pusha
add
cmp
aaa
jp
repz
aad
stos
pop
pop
repz
les
int
xor
jge
mov
inc
outsb
add
call
dec
xchg
loop
xchg
imul
lahf
sub
lds
stos
lds
jmp
mov
hlt
push
push
scas
xchg
push
lea
mov
push
icebp
rol
mov
dec
popa
add
pushf
fcmove
imul
or
rcrl
mov
shlb
int
lods
es
lods
jg
xor
js
cmpb
shrb
outsb
popa
fbld
jle
jmp
into
icebp
gs
xchg
inc
mov
push
popa
arpl
and
mov
xor
shrl
in
movsb
pop
int
add
sbb
xor
adc
lret
mov
jnp
into
clc
jg
push
dec
icebp
jg
pop
cwtl
es
das
sbb
jecxz
lret
js
pop
mov
mov
out
or
call
popa
xchg
mov
loopne
scas
sub
popa
jge
je
jmp
xorl
adc
push
jne
cmp
pop
mov
bound
aad
xchg
scas
sbb
xor
pop
stos
jmp
or
inc
and
mov
fsubrl
dec
roll
lods
jno
cmpl
add
fstps
sbb
push
add
push
and
fcmovu
cmpsl
and
mov
mov
and
inc
xchg
mov
fisubrs
aad
outsb
inc
xchg
stos
push
cmp
dec
mov
xchg
sub
loop
jae
jge
das
popa
xchg
int3
in
jg
jg
mov
mov
mov
cmp
xor
jl
loopne
sbb
cmp
movsl
in
test
vpaddsb
adc
sbb
push
mov
dec
xlat
insl
pop
loopne
or
and
std
fnstcw
mov
cmp
push
xlat
xchg
fldl
ds
push
int
push
insl
je
sbb
pop
call
jecxz
and
push
jle
cmp
sbb
rorb
jbe
sbb
js
pop
cmpb
add
loop
cmpsb
fnsave
push
jle
mov
lods
mov
subb
dec
in
aad
and
dec
cs
sub
mov
adc
daa
shl
xchg
push
xor
addr16
mov
inc
insb
pop
inc
jp
cltd
xor
jmp
popf
and
jge
xor
mov
pushf
cmpsl
pop
jae
out
out
push
fwait
cmpsl
mov
xchg
pop
stos
cmpsb
decb
mov
stc
int3
outsb
arpl
add
shll
mov
cvtps2pi
je
add
sub
bound
add
js
das
jle
je
sub
mov
add
leave
dec
or
inc
cmc
mov
mov
scas
and
repnz
dec
jae
inc
lahf
fdivl
dec
sbb
xor
jg
mov
fucom
sbb
stc
jp
and
sub
mov
pop
mov
inc
mov
pop
mov
jnp
adc
pop
or
dec
cmpl
jnp
inc
jl
cmp
xor
pop
adc
adc
fsts
insl
jmp
pusha
daa
mov
adc
sbb
adc
adc
loope
add
jmp
mov
add
fstl
inc
mov
push
or
fildl
xor
or
sbb
jg
mov
js
loopne
test
cltd
aam
mov
lret
mov
add
sbb
aaa
jnp,pt
out
mov
push
dec
mov
ss
xor
cs
mov
cmp
mov
loope
mov
add
sahf
cmp
adc
mov
bound
cs
push
fs
xor
dec
sub
mov
and
dec
shll
bnd
xchg
ljmp
adc
ja
push
addb
jmp
cmp
jb
xchg
adc
adc
mov
xchg
int3
and
sbb
xchg
push
push
out
sub
sbb
add
inc
xor
int
outsl
lock
cmc
inc
in
push
pop
scas
ljmp
jecxz
iret
push
push
sbb
inc
adc
xchg
pop
test
shrb
icebp
roll
adc
or
push
imul
add
pushf
cmp
add
or
test
push
shrb
push
es
mov
xchg
cs
pop
jge
jnp
mov
xor
jnp
mov
xor
pop
hlt
jno
cmp
popf
aad
fcompp
call
aaa
loopne
mov
subl
leave
pop
jge
popa
add
addr16
stc
pop
xor
in
mov
jge
cltd
cmp
mov
cld
mov
div
rclb
adc
adc
insb
adc
adc
mov
out
lds
adc
mov
add
and
cli
roll
jge
fdivrl
cmp
sbb
mov
repz
push
lods
pop
fidivs
scas
xor
cmc
mov
nop
iret
imul
insb
enter
loop
aas
aad
or
mov
fs
or
xchg
xor
adc
xchg
fsubrl
adc
mov
push
aam
xor
sub
dec
pop
shr
adc
cmp
mov
mov
add
cwtl
movsb
mov
push
lret
or
lods
xchg
mov
mov
dec
pop
in
and
cwtl
adc
adc
jge
cmp
int3
filds
clc
adc
aaa
mov
imul
mov
lret
sub
mov
inc
cwtl
in
xchg
xor
mov
fisubrl
cmp
dec
lds
mov
out
loop
adc
mov
lcall
xor
lods
adc
pop
bound
xchg
push
jmp
icebp
popf
fs
js
or
dec
sbb
ret
and
outsl
push
ja
mov
cli
enter
out
adc
test
in
into
outsb
push
mov
mov
mov
sbb
pop
lock
pop
jg
adc
or
push
push
pop
xor
pusha
aas
xorl
mov
mov
push
adc
add
xchg
xchg
shufps
push
xor
fs
aad
test
lods
pop
push
inc
add
and
xor
push
pop
adc
les
bnd
mov
int
pushf
cld
adc
aam
xchg
xchg
mov
mov
inc
sbb
add
mov
pop
hlt
aas
add
add
ss
mov
xor
push
push
movsb
dec
dec
aad
dec
movsb
cmp
mov
stos
or
sbb
fstpt
pop
xchg
sahf
daa
fistl
and
push
in
mov
out
icebp
inc
fsts
adc
sbb
mov
jo
mov
pop
cwtl
hlt
dec
stos
int
adc
dec
int3
and
push
stos
fidivrl
cmp
aaa
mov
iret
in
and
ret
fwait
cltd
mov
xchg
ret
push
cmp
ljmp
dec
push
jb
mov
andl
or
push
xchg
nop
sub
icebp
es
ret
inc
push
lahf
xor
cwtl
push
sbb
push
push
stc
test
sub
add
or
sbb
pop
sbb
outsb
xor
add
sub
jo
xchg
shlb
mov
shll
movb
out
inc
popa
jnp
mov
pop
xchg
xor
paddsw
push
movsl
addr16
int3
sti
nop
shll
pop
xor
movsl
push
mov
add
or
sbb
pop
fadds
xor
cmpsb
xchg
jne
sbb
loope
push
out
dec
daa
cvttps2pi
leave
mov
shlb
in
pop
cmp
jae
jle
jecxz
cwtl
cld
push
in
test
dec
jae
sbb
ret
cs
or
int3
push
stos
std
cmp
das
xchg
ja
dec
addl
lret
adcl
movsb
shll
mov
sahf
imul
mov
lods
cmp
xor
lahf
cld
stos
lds
sahf
out
inc
inc
mov
popf
lahf
sub
int3
inc
outsl
lods
sahf
and
xor
test
in
je
mov
mov
fldcw
ret
rcll
test
inc
leave
add
dec
icebp
js
flds
bound
cmpl
ror
fnstcw
push
fwait
dec
dec
inc
fidivrl
jmp
adc
pop
cmp
divl
xchg
fadd
ljmp
test
pop
test
pusha
mov
lods
jae
enter
and
dec
fidivl
lcall
aam
dec
sahf
pop
dec
popa
movsl
ret
test
dec
xor
mov
pushf
and
add
sbb
jle
or
aas
adc
adc
mov
jge
pop
cmpsb
xor
sub
andl
and
lcall
jo
pop
xchg
fldl
add
inc
mov
test
bound
ds
cmp
arpl
stos
into
cmp
cmc
push
sub
sub
dec
pop
sbb
sbb
pop
scas
aaa
inc
add
add
xchg
movsb
jo
sbb
push
scas
daa
sti
inc
notl
lret
nop
fiaddl
push
adc
in
mov
shll
add
xchg
rcll
ret
pop
roll
daa
enter
scas
mov
or
xchg
sysret
je
jecxz
call
pop
adc
pop
sub
call
call
fdiv
or
lods
cmp
sub
lock
movsb
out
push
add
push
out
movsl
out
fsubrp
mov
int
jnp
dec
arpl
xor
add
push
push
push
in
fs
je
xchg
jb
or
dec
pop
sub
mov
addl
ljmp
mov
xor
cmp
mov
movsl
and
sub
cli
stos
roll
popf
push
scas
push
xchg
and
jnp
ja
adc
sbb
jne
xchg
int
call
lea
pop
mov
outsb
int
mov
dec
cmp
rorb
jae
mov
add
std
mov
mov
or
add
idivl
in
call
insl
insb
cmp
mov
mov
pop
dec
test
stc
hlt
fistl
pop
sbb
dec
xchg
dec
movq
aaa
xchg
jae
jecxz
adc
arpl
jmp
cld
add
out
outsb
cs
and
add
dec
ja
rep
inc
jns
in
mov
and
mov
in
lods
cli
lods
pop
dec
mov
xchg
xchg
jmp
jo
sbb
jae
cmp
mov
or
mov
das
dec
fs
outsl
iret
loopne
mov
add
jns
pop
lret
lcall
push
xchg
xor
or
pop
jno
add
stos
adc
test
cmp
clc
ret
in
mov
es
movsb
or
cmp
inc
cmp
mov
repz
repnz
push
adc
rorl
insb
fnstsw
jne
arpl
jmp
popa
das
cmp
out
dec
lcall
data16
sbbb
pop
jo
js
sbb
iret
xor
cmp
stos
into
sbb
mov
scas
sub
nop
addr16
xchg
jb
aam
in
ljmp
mov
xor
pop
imul
arpl
add
stc
dec
xlat
pop
gs
movaps
lret
pop
pop
jp
adc
inc
mov
jl
cmpl
xor
or
mov
and
movsb
popa
cmp
mov
xchg
mov
in
scas
or
push
shll
cmp
xor
aad
fdivrs
ret
dec
rolb
in
jl
arpl
clc
pop
testb
popa
mov
insb
stos
mov
test
and
rcrl
xor
in
loopne
push
sub
jg
sbb
insb
mov
repz
sub
addb
mov
xchg
pop
inc
orb
arpl
xor
push
and
xor
repnz
lock
mov
test
fnstcw
pushf
fisttpl
pop
sub
enter
jle
in
shlb
ja
aaa
out
or
pop
cmpsl
aam
jp
xchg
xor
inc
or
test
and
mov
les
imul
pop
jg
adc
jge
shll
xchg
and
adc
xor
test
xchg
mov
xor
inc
bound
repz
fmuls
stos
arpl
lock
in
and
and
push
xchg
les
cmpb
inc
cwtl
lock
cs
loop
fs
pop
pop
mov
incb
psubusb
sbb
rcrl
cli
add
mov
jb
and
xor
and
inc
and
scas
push
add
mov
cli
test
mov
out
lcall
sub
cmp
mov
cmpsl
push
adc
mov
and
filds
jo
lahf
addr16
sub
stc
inc
xchg
push
fisttpll
hlt
push
pop
xchg
filds
mov
push
pop
adc
fwait
shlb
aas
lods
cmpsb
sbb
sub
nop
mov
push
decb
ret
mov
data16
fldl
jnp
out
rorb
pop
jb
mov
jne
pushf
mov
sub
ret
cmp
lods
icebp
sub
or
mov
jns
clc
jns
push
scas
pop
insb
cmp
cli
xchg
sub
scas
popf
fidivl
xor
xchg
sbb
arpl
and
sbb
xchg
shll
icebp
and
xchg
fcmovnb
or
mov
push
adc
xchg
mov
gs
cmp
movsb
push
sub
xor
into
outsb
and
mov
div
arpl
sti
sbb
xor
cmp
aaa
adc
cmp
adc
jo
nop
and
fldenv
mov
mov
pushf
test
mov
xchg
mov
xor
mov
mov
sub
stc
cmc
int
rol
inc
fistpl
mov
pop
jo
push
addr16
inc
lcall
adc
and
mov
xlat
pop
adc
sub
iret
lods
stos
and
xor
dec
pop
sbb
mov
insb
icebp
lock
push
hlt
in
add
dec
mov
cmp
sbb
fisubs
sbb
mov
xor
and
enter
cmp
nop
test
mov
das
add
adc
xchg
push
ja
sti
push
mov
mov
cmc
lahf
mov
mov
mov
adc
mov
mov
mov
outsb
cmc
xchg
addr16
jl
sub
and
dec
out
push
mulb
inc
cmp
pop
icebp
inc
std
push
jno
pop
ss
inc
out
test
fbstp
sbb
cli
xchg
jmp
dec
mov
cpuid
idiv
cmpsb
sbb
outsb
add
cmp
pop
insl
inc
push
mov
lret
ret
bound
jge
mov
adc
push
mov
es
pop
inc
loope
out
jl
out
stc
int3
icebp
adc
or
outsb
jge
mov
mov
xchg
lcall
lret
enter
or
jbe
jo
inc
jge
adc
jmp
lret
fldenv
push
xorl
or
enter
lea
jge
imul
scas
xlat
mov
test
inc
sti
jge
push
and
sub
ret
sti
int
mov
lea
cmp
insl
sub
and
test
ret
or
movsb
ss
xor
mov
cmp
dec
sti
mov
andl
xor
pusha
imul
pusha
lea
xchg
mov
jmp
std
pusha
dec
push
jmp
lods
aam
add
in
sahf
fistpll
ret
pop
je
pop
aam
cli
add
out
add
popa
xlat
jmp
pop
data16
in
pop
xor
daa
mov
add
jg
push
out
into
repz
sub
mov
das
cs
popa
and
sub
xor
push
adcl
daa
cwtl
inc
cmp
iret
jecxz
std
sahf
cli
das
adc
lds
adc
inc
inc
rcr
mov
mov
jle
test
mov
mov
jnp
cmpsl
jb
idivl
mov
daa
pop
dec
cmp
pop
andl
jmp
push
pop
jnp
add
mov
cs
cli
jbe
or
jbe
xor
stc
mov
xor
dec
sub
adc
cs
mov
mov
and
loop
and
jb
inc
fwait
push
cltd
lahf
mov
adc
mov
cmp
cltd
mov
xor
adc
push
dec
mov
lahf
ljmp
dec
and
adc
ds
cmp
test
enter
inc
out
aam
loopne
lods
test
out
rorl
insl
hlt
pop
lcall
jnp
call
and
jns,pt
imul
mov
cmpsb
mov
inc
rsm
mov
movsl
ficomps
jp
rol
ljmp
lock
xchg
icebp
mov
xorb
in
cltd
js
ret
out
loopne
popf
filds
sbb
or
scas
jbe
into
push
lea
and
sbbl
jg
lea
mov
mov
mov
and
and
sbb
cltd
mov
sbbb
ret
adc
xchg
test
mov
clc
mov
or
push
je
out
pop
insb
gs
jl
bound
ret
idivb
aam
jne
mov
push
inc
ret
and
mov
jecxz
mov
jge
xlat
aaa
mov
pop
cs
push
push
popf
mov
mov
aaa
xlat
mov
cmp
mov
push
mov
jb
add
and
pop
rorb
aas
mov
int
xchg
adc
daa
clc
push
xchg
dec
jmp
adc
shl
imul
fisubrl
sbb
xchg
out
popa
push
fnstcw
dec
add
xor
xor
enter
mov
cld
repnz
inc
out
data16
jg
outsl
mov
push
adc
push
add
cmpsb
in
mov
sbb
jmp
sahf
jmp
dec
mov
icebp
push
in
aam
lock
cld
arpl
test
mov
lods
mov
jno
xchg
lods
scas
xchg
mov
sub
cwtl
test
and
mov
or
xor
xlat
imulb
lahf
popf
mov
test
addr16
pushf
lret
sbb
divl
xorl
jae
and
ror
in
sub
cmp
pop
movsb
lods
push
in
jp
add
and
mov
lds
adc
jns
ds
xchg
cmp
sbb
mov
pop
add
add
sbb
xlat
mov
dec
ja
mov
jnp
stos
cmp
mov
fisubrs
ljmp
add
ds
mov
sbbl
in
cmp
mov
or
je
jno
test
jge
mov
add
popa
adc
movsl
fcomps
in
dec
movsb
inc
dec
xor
ss
movsb
push
inc
lods
xor
push
or
in
repnz
cwtl
enter
scas
add
into
add
rorl
in
icebp
inc
jns
dec
mov
test
mov
mov
out
inc
add
push
into
push
add
faddl
daa
pop
pop
adc
inc
dec
sbb
dec
orl
insl
sti
pop
jmp
and
test
scas
dec
add
pop
and
rol
aad
and
push
cwtl
jbe
loope
sub
jo
mov
jl
idivb
cli
mov
pusha
negl
and
jecxz
ss
cmp
sbb
lods
ss
mov
dec
inc
loope
sahf
mov
or
inc
lods
iret
out
push
imul
pushf
mov
scas
fs
sub
pop
addl
xchg
mov
or
mov
gs
adc
dec
pop
lods
pop
ja
dec
add
push
push
xchg
lret
mov
imul
mov
in
inc
inc
xor
fldcw
mov
cmp
loop
xchg
xchg
arpl
dec
cwtl
imul
pop
mov
sbb
xor
dec
movsl
int3
mov
clc
sbb
stos
inc
inc
mov
jno
mov
jmp
push
sahf
lcall
fldt
jns
add
sub
mov
mov
cmp
loop
push
push
mov
aad
sub
lret
divl
mov
push
int
dec
sbb
push
inc
adc
sbb
mov
pop
xchg
mov
subb
pushf
ljmp
insb
or
or
fadd
inc
cmc
outsb
push
and
pop
ret
sub
in
pop
or
ja
das
cmp
jne
mov
imul
pop
adc
cmp
leave
mov
out
sub
mov
notl
fs
in
cmp
lret
in
sub
inc
inc
movsl
push
xchg
and
shr
mov
or
fisubs
into
mov
into
and
sbb
mov
or
cld
movsb
lcall
movsb
clc
push
jae
dec
push
repnz
mov
clc
movsl
sbb
push
movsl
dec
mov
jno
in
push
mov
pop
jl
push
cmpsb
adc
jb
sbb
mov
sahf
insl
scas
dec
dec
sti
dec
pushl
stc
loopne
jle
test
jnp
xor
imul
imul
xchg
les
push
sbb
out
enter
mov
jecxz
flds
aam
cmpsb
lods
in
insl
fistps
mov
and
mov
adc
repnz
inc
sbb
adc
mov
popa
or
mov
inc
int
mov
aam
lods
pop
dec
sahf
scas
xlat
rclb
repnz
mov
mov
jge
sbb
add
cmp
inc
nop
or
movsb
aam
add
pop
jns
out
nop
mov
push
movsl
cmp
repz
flds
xchg
das
aad
lahf
test
pop
and
push
cmpsl
sarl
push
out
dec
out
cmp
push
imul
add
outsb
pop
pop
pop
add
rcr
sbb
mov
iret
jne
sbb
adc
in
push
out
adc
mov
movsl
loope
sti
popf
jmp
sarb
ss
sbb
rcll
jl
mov
jno
mov
dec
movsb
inc
shll
xchg
adc
push
popf
add
dec
data16
out
movsl
addr16
rcl
adc
jbe
pop
ret
push
xchg
cmp
cmc
jmp
mov
lcall
ds
out
push
and
push
cltd
inc
ja
in
shlb
mov
inc
pusha
cltd
push
sub
shrb
int3
and
jb
xchg
outsl
jno
push
cltd
shlb
or
je
mov
push
mov
das
mov
mov
mov
add
lahf
mov
push
mov
lret
mov
mov
mov
xchg
icebp
in
cmc
xor
sbb
push
inc
hlt
addr16
sti
bound
mov
popa
cmpsl
ja
imull
outsl
ret
imulb
sub
out
decb
adc
cwtl
rcl
inc
adc
lock
dec
pop
and
xor
andb
inc
inc
lods
add
out
xor
loope
sub
sbb
test
jbe
not
adc
xchg
sti
lret
movb
jmp
imul
pop
scas
scas
jns
bound
dec
add
fcoms
cmp
push
xor
vmwrite
dec
or
adc
sbb
jb
inc
scas
inc
cmc
xchg
pop
pop
push
nop
add
add
adc
add
and
ret
int
leave
push
rolb
je
sarb
mov
outsl
add
sbb
jmp
pop
dec
aaa
enter
inc
dec
push
inc
loopne
push
scas
shl
xorb
sub
sbb
and
imul
and
pop
jo
mov
clc
push
jne
roll
inc
cli
add
bound
jl
out
adc
mov
outsl
int
xchg
into
subb
add
mov
push
insl
xor
and
add
and
mov
scas
adc
fucom
mov
add
push
pop
or
dec
insb
mov
bound
ficoml
jb
call
pop
sarb
movl
sti
shlb
js
pushf
jo
pusha
pop
pop
rcrl
jl
scas
push
enter
adc
ds
cld
xchg
std
xchg
cmp
leave
inc
sti
sbbb
cmpsb
xlat
fstpl
push
cmp
and
adc
or
mov
addr16
pop
stos
testb
mov
fdivs
cmc
call
sarb
mov
cmp
adc
lods
mov
pop
mov
sbb
data16
sub
adc
mul
ja
cmp
jns
dec
lock
out
out
fsubrl
sub
mov
jbe
push
sbb
xchg
rcl
inc
mov
push
cs
push
adc
mov
mov
stos
pop
lea
adc
push
inc
and
arpl
xor
push
xchg
loopne
xor
mov
mov
push
sub
inc
pop
jle
loope
jnp
sbb
int
sub
cmpsb
jmp
mov
aas
push
loopne,pt
js
xor
shll
insl
xchg
movsb
push
cmp
mov
jnp
cmpsl
dec
jns
xchg
jge
cmp
sbb
je
sbb
jmp
cs
xor
les
mov
clc
pop
mov
jl
sub
xchg
ja
fld
push
lret
mov
insl
or
xlat
aad
jbe
adc
dec
notl
mov
pop
mov
aas
pop
sub
cmp
aam
fdivrs
mov
cmp
mov
movsb
pop
dec
cltd
jg
incb
pop
lcall
adc
shl
mov
outsb
daa
jb
xor
aas
lods
cmp
in
jb
imul
bound
cmpsl
rcll
cld
push
cmp
jb
or
cmp
xor
jg
jno
arpl
xchg
std
cmp
sbb
stc
ficoml
inc
xor
sarl
sahf
jnp
mov
movsb
sub
lea
mov
into
or
pop
push
mov
jns
dec
push
shlb
add
jmp
mov
popa
push
cmp
imul
add
adc
or
in
movsb
lret
mov
leave
lahf
ds
cmp
and
or
sub
or
xchg
sbb
mov
call
test
icebp
pop
lea
cmpsl
sbb
mov
dec
sub
arpl
scas
add
ljmp
pop
outsb
in
shlb
jno
jmp
xorb
sub
add
cmp
push
and
dec
fistpl
daa
mov
ds
movsl
cmp
xchg
and
out
test
sbb
cmp
nop
cmpsb
sbb
jb
mov
int
andl
add
stos
push
shlb
test
int3
test
imul
xchg
xor
rcl
mov
pushf
arpl
fcmovne
mov
push
cmp
lock
sbb
jb
popa
cmp
aas
popf
daa
sub
imul
data16
mov
lret
sub
xlat
std
mov
fcoms
mov
sub
ljmp
jl
xor
mov
inc
or
arpl
and
jl
mov
push
cwtl
addr16
inc
sub
test
aas
dec
sbb
jno
rolb
mov
roll
fistpl
adc
push
mov
popa
into
test
je
dec
mov
push
xchg
jle
fstps
idiv
xchg
dec
xchg
pushw
mov
or
nop
out
sarl
adc
insl
icebp
mov
add
stos
sarb
push
int3
in
mov
push
sub
aaa
pop
cmpsb
scas
iret
in
xchg
std
imul
out
ljmp
adc
and
mov
sahf
push
into
dec
call
imul
pop
xor
cld
add
dec
mov
cmpb
jmp
dec
add
add
push
ds
jmp
ja
inc
sub
pop
cmp
jge
mov
and
out
xor
adc
pop
and
adc
fnstcw
or
mov
lds
mov
clc
and
jecxz
cmp
push
pop
add
adc
mov
xor
fucomi
xchg
and
pop
xchg
call
sub
stos
jo
lods
hlt
dec
mov
mov
sub
ljmp
mov
imul
in
int
push
mov
xchg
cmp
sub
jmp
mov
fucompp
popf
js
jle
or
out
cmp
add
xchg
cmp
lret
add
lea
mov
inc
jg
into
aaa
adc
lahf
in
imul
hlt
pop
das
adc
loope
jecxz
lahf
pop
or
sbb
movsb
leave
xchg
jle
add
nop
stos
sbb
repnz
repnz
and
xchg
and
lods
cmp
add
orl
clc
mov
jnp
leave
xchg
dec
bound
push
push
mov
movsl
sarl
fs
ds
pop
add
mov
mov
mov
sub
lds
cltd
ret
and
mov
pop
rcr
mov
mov
pushf
xor
mov
insl
jmp
dec
in
adc
jmp
xor
or
dec
mov
lods
mov
outsb
fldt
out
sbb
dec
rol
stos
adc
subl
aas
or
sub
xchg
mov
adc
inc
mov
xor
lret
js
jl
test
pop
mov
push
or
or
push
sbb
jle
lds
and
cvtps2pi
jp
push
fiaddl
jl
xchg
in
pop
ljmp
adc
push
lods
push
mov
js
push
ret
nop
push
adc
mov
push
cwtl
cli
jg
hlt
in
movsb
mov
insb
pminsw
jecxz
and
and
jmp
mov
cmp
out
enter
les
sub
addr16
add
inc
mov
jns
int
jmp
in
mov
call
fs
popf
rolb
jg
cmp
sub
into
xchg
ret
xlat
mov
push
adc
pop
add
stc
ja
ljmp
dec
movsb
das
lock
xchg
lcall
cmp
adc
mov
rcl
xor
int
je
xchg
mov
mov
push
loope
cmp
test
jnp,pt
cmp
pop
enter
fadds
jno
insb
test
mov
aaa
test
jp
push
in
mulb
clc
jl
and
in
fsts
cmp
sbb
es
or
cmp
stos
xchg
nop
mov
jbe
rcrb
lahf
rorl
add
push
pop
jl
loopne
lods
arpl
out
std
pop
pop
xchg
jne
dec
adcl
cmpb
clc
sbb
dec
imul
repz
cmp
inc
cwtl
sub
mov
mov
add
cmpsl
push
and
test
xchg
pop
jne
fildl
ret
out
in
insb
push
xlat
mov
shrl
add
out
jb
enter
andl
repnz
jmpw
pop
shl
aad
xor
out
orb
or
cmp
jmp
scas
mov
test
loop
inc
aad
movsl
inc
loop
mov
lock
gs
xor
xor
ljmp
out
or
mov
mov
aas
sahf
lock
cmp
cmp
xor
lea
mov
push
ja
bound
shrl
xor
test
push
test
fimuls
adc
das
aam
pop
iret
jnp
in
in
fstpt
pop
add
add
mov
adc
jmp
shr
jnp
adc
cwtl
cmc
pushf
jp
addr16
pushf
inc
fcoml
lcall
sub
idiv
mov
fdivl
xchg
cmp
shl
dec
cmp
push
addr16
mov
bound
cwtl
fcmovne
pop
cmp
adc
mov
mov
xchg
and
sarl
cld
ret
dec
sbb
or
loope
popa
lcall
xlat
pop
fcompl
icebp
lcall
shll
testl
jo
mov
ja
inc
and
cwtl
rolb
inc
fwait
inc
mov
pop
loopne
call
adc
mov
shrb
ret
push
popf
inc
mov
add
add
cmpb
ret
sbbl
bound
in
or
jg
or
mov
dec
stc
pusha
xchg
and
daa
add
in
push
fnstcw
cltd
addr16
stos
stos
pop
stc
and
xchg
push
jb
fsubr
loop
mov
addb
xor
iret
rolb
insb
dec
sub
inc
int3
pop
inc
shl
arpl
in
or
mov
lret
mov
ror
iret
orl
xchg
inc
mov
gs
push
xchg
and
int3
mov
mov
pop
push
mov
cmpsb
outsl
addl
jae
xor
addr16
shrl
mov
mov
inc
push
ss
sbb
out
in
scas
mov
out
in
and
cmp
test
dec
pushf
xchg
pop
adc
inc
add
cmc
mov
xor
xor
mov
fprem1
orl
cmp
mov
jb
inc
xchg
or
or
cmp
pop
shlb
notl
dec
cld
pop
push
loope,pn
mov
and
add
mov
mov
cmp
cmc
push
dec
sub
mov
cmp
cmp
loopne
insl
movsl
jg
lods
cld
mov
mov
hlt
push
ffree
mov
add
mov
aaa
mov
movsl
xchg
or
push
fnstsw
js
push
cmpsl
shlb
aaa
push
dec
adc
mov
mov
push
or
mov
push
into
rol
and
ss
in
cmp
js
mov
sti
dec
cmp
lods
shll
push
xor
scas
outsb
subl
shll
pop
mov
out
mov
test
mov
cmp
fnstcw
lcall
sub
cltd
cld
insb
add
mov
dec
icebp
jle
daa
or
and
or
dec
lds
xchg
aaa
addb
pop
insl
dec
inc
jmp
mov
sbb
dec
test
jle
insl
test
out
or
dec
pusha
lods
cmp
clc
in
cs
inc
cmp
mov
or
and
fildl
icebp
mov
push
lock
cli
and
pop
dec
add
test
and
mov
mov
lcall
repz
shl
insl
jnp
inc
cli
xchg
inc
aaa
mov
xor
lcall
mov
test
jns
dec
jo
adc
inc
call
pop
outsb
dec
ret
sarb
push
js
imul
cld
pusha
fildll
imulb
flds
dec
cmp
shrb
and
xchg
dec
mov
scas
test
hlt
pop
mov
adc
cltd
pop
mov
inc
mov
imul
pop
mov
mov
pop
xlat
ficompl
pop
sub
jp
push
test
in
test
inc
xchg
xor
sbb
pop
adc
scas
jae
ljmp
mov
roll
add
cmpsb
loopne
xlat
call
adc
push
xor
and
ret
inc
pop
in
insl
lret
pop
dec
mov
nop
mov
mov
inc
test
out
in
icebp
aas
mov
rolb
jmp
add
out
jmp
xchg
sub
push
mov
les
and
add
adc
repz
xchg
hlt
jle
out
int3
inc
ret
jge
or
inc
sub
sub
cltd
dec
jg
or
dec
in
filds
idiv
and
jmp
add
shll
iret
loopne
into
add
inc
mov
lock
test
sub
add
mov
cs
sub
dec
fs
fdiv
mov
dec
out
cmp
adc
repnz
scas
mull
mov
mov
xchg
xchg
jecxz
das
add
or
add
subl
sbb
outsb
dec
inc
orl
popf
scas
cmpsb
pop
jmp
sbb
loope
or
inc
adc
push
lods
cmpsl
lret
push
repz
cmp
fstps
jge
je
push
dec
fs
addb
sbb
or
sub
cmp
aas
push
loopne
notl
xchg
add
je
bound
gs
add
sub
mov
mov
mov
mov
push
push
xor
pop
ds
lcall
stos
in
mov
out
add
mov
inc
sahf
sti
push
add
or
inc
push
push
pop
imul
sahf
xor
jp
mov
repnz
jno
icebp
aas
pop
push
mov
mov
fiadds
popa
and
and
xchg
loop
or
sub
fsts
jecxz
enter
les
mov
fs
stc
lods
cmp
cmpsl
fdivrs
insl
bound
nop
out
push
jecxz
adc
les
xlat
sbb
sub
push
dec
add
or
lahf
sbb
xchg
out
ret
movsl
push
lahf
push
inc
hlt
imul
xchg
adc
pop
ja
mov
sbb
push
add
fcoms
outsl
mov
push
jmp
arpl
xchg
sbb
push
test
test
mov
sub
mov
jge
test
cli
fsubs
xchg
clc
aas
lea
push
jl
fimull
repnz
js
mov
add
out
lea
das
sub
cmp
lods
mov
xor
es
xchg
insl
test
in
and
mov
pop
cli
mov
loope
out
cmp
push
call
in
iret
mov
lods
push
iret
and
repnz
cltd
push
lahf
pop
inc
icebp
push
sti
stos
jnp
sbb
rcr
add
pop
in
in
rcrb
stos
loope
or
shrb
jmp
movsw
pop
cmpsb
es
adc
dec
jmp
sahf
xor
add
lock
push
jb
les
cmpsb
jo
sub
shl
scas
xchg
dec
nop
pusha
out
inc
lea
push
nop
or
in
or
andb
dec
or
repnz
cmpsl
mov
jae
ret
les
jnp
lcall
push
sub
insl
mov
pop
cmc
dec
stos
cmpsb
aam
adc
ror
lods
xor
inc
sub
jne
lods
inc
test
stc
pop
pop
loope
je
fcmovnb
popa
xchg
mov
add
pop
cli
mov
or
adc
sub
roll
sarl
mov
xchg
sbb
sbb
je
test
xchg
aaa
push
push
xchg
sub
jg
mov
xchg
xor
stos
in
pop
xchg
mov
fimuls
inc
imul
negb
movsb
movsl
adc
push
cmp
pop
int3
ret
jb
jg
cs
les
inc
stos
cwtl
push
cli
into
rcll
xchg
rol
sarb
dec
movsb
dec
out
pushf
lret
loope
jno
scas
inc
aaa
pop
mov
ficoms
aad
lcall
shlb
xchg
push
push
jl
add
pop
jbe
mov
cmp
push
rcll
bound
mov
or
mov
inc
inc
ljmp
sub
cmp
xor
jg
xlat
cmp
loop
fwait
mov
sub
pop
arpl
xlat
inc
adc
push
xor
in
mov
data16
cmp
stos
pop
jne
adc
sub
add
push
cmp
std
sahf
imul
js
outsb
cmpsb
dec
sbb
in
loop
sbb
fwait
repnz
sbb
mov
sbb
repnz
lcall
int3
cmp
mov
inc
iret
or
cmp
mov
inc
adc
mov
movsb
fadd
inc
adc
ljmp
into
rorl
imul
xchg
jl
icebp
sub
cmp
fs
aad
ror
jne
sub
test
mov
orl
orl
test
adc
shl
xchg
push
or
negl
cmc
xor
jb
shlb
add
jb
dec
jmp
and
fists
sbb
push
orl
rcrl
stc
pop
add
or
push
sub
mov
dec
cmp
fdivrp
in
mov
sub
movsb
inc
adc
xchg
repz
dec
ljmp
jne
aam
pop
addl
fnstenv
xor
sbb
inc
push
add
mov
data16
subb
sbb
add
sbb
jno
test
ljmp
icebp
xor
sub
jns
push
xchg
inc
xchg
ljmp
mov
mov
repnz
or
fcom
outsb
out
jecxz
andl
das
xorb
lods
rcl
dec
imul
stos
xor
sbb
jl
popa
pop
leave
cwtl
pop
out
int3
scas
test
jne
popf
jmp
je
dec
pop
and
xor
mov
pop
dec
push
clc
inc
xchg
mov
sbb
shll
pop
pop
data16
and
outsl
div
jp
test
jns
sub
pop
imul
into
adc
enter
cmp
imul
cmp
ret
push
dec
cwtl
fcoms
inc
mov
lcall
scas
shlb
insb
mov
push
sbb
cltd
sahf
pop
sahf
stos
inc
mov
sub
add
int
call
cmp
push
or
insl
outsb
ret
adc
adc
ret
xor
ja
cmp
xchg
jne
mov
xchg
xor
adc
pop
pop
jecxz
ret
imul
xor
mov
lahf
sbb
mov
push
dec
hlt
loopne
add
or
sbb
test
sbb
mov
jp
xor
es
sbb
push
add
popa
dec
xor
movsl
aas
mov
add
repnz
pop
addb
pusha
xor
sbb
fisubl
mov
adc
into
fsubrs
sti
push
dec
cmp
mov
jb
push
mov
movsb
shll
jae
lock
jnp
dec
pushf
xor
repz
add
sbb
pop
clc
pusha
pop
cmp
pop
setns
and
jp
and
xchg
popa
mov
push
dec
inc
or
jg
ret
sarl
pop
inc
dec
inc
sub
cmc
mov
sub
push
js
sub
pop
in
mov
lcall
dec
or
xchg
cli
sub
xorb
rclb
cltd
mov
add
test
test
lods
push
dec
test
pop
lds
or
enter
xchg
inc
mov
icebp
sahf
mov
mov
into
popf
dec
add
xchg
and
and
cmp
int
leave
jmp
xor
pop
gs
fistpl
add
cmpsb
mov
adc
mov
mov
les
movl
or
mov
out
movw
mov
ss
sbb
adc
andb
sbb
jno
sub
sbb
hlt
in
fwait
inc
imul
repnz
es
daa
inc
xchg
cld
insb
sub
test
out
iret
divl
jp
movsl
push
fstl
cmp
lcall
jg
jno
dec
mov
pop
dec
sbb
ficomps
push
ss
push
jge
adc
and
mov
and
repz
cmp
int3
ja
push
lahf
push
push
cmc
nop
lret
aas
aas
lret
or
loope
loope
into
xor
pop
adc
add
bnd
int
add
pop
stos
mov
push
out
lret
fisubrs
imul
jp
movsb
xor
lods
or
push
cmp
xchg
ljmp
cwtl
movb
xor
movsb
mov
cmp
fwait
sub
adcb
mov
in
pop
xor
gs
push
xor
adc
sbb
push
push
out
jno
dec
test
jae
xchg
jge
ret
rcll
into
std
cmp
pop
dec
addr16
call
fldenv
insb
out
mov
hlt
or
scas
inc
push
aaa
pop
scas
push
repz
inc
jo
inc
pop
icebp
shrb
jb
cmp
dec
stc
cmp
push
in
xchg
cmp
xchg
jno
shll
pop
dec
push
sbb
push
jle
and
fisubrs
aaa
int
dec
stos
cs
nop
cs
adc
jge
shlb
inc
and
mov
xlat
stos
std
xchg
aaa
or
dec
test
sub
mov
ljmp
push
xchg
sbb
push
hlt
cmp
or
cmp
sub
xor
jb
xchg
stos
sbb
sbb
cmp
inc
cmpl
adc
rcll
pusha
mov
aas
adc
inc
test
xchg
div
jmp
ljmpw
push
push
shlb
rcrb
movsl
imul
xor
andb
leave
in
cmc
mov
inc
insl
cmp
fisttpl
mov
jl
xchg
shll
mov
xor
orl
inc
cvtps2pd
out
in
sbb
lods
sub
pushf
push
xor
insb
subl
sub
leave
push
pushf
pushl
pop
sub
mov
hlt
stc
cwtl
push
add
popf
mov
push
jle
inc
or
in
test
cmp
xchg
cs
aad
iret
lahf
push
or
bound
int
and
lea
xor
mov
and
test
aam
movsb
icebp
insl
cmp
or
popa
sub
cs
icebp
pop
push
add
sub
stos
out
jbe
xor
imul
jg
xorb
xor
ljmp
mov
pop
pusha
jno
xlat
std
jge
stos
addr16
jo
outsb
call
or
push
lret
sub
xlat
xor
js
dec
cmpsl
popf
jo
add
push
out
add
mov
movsb
xchg
imul
push
lcall
pop
into
push
xor
dec
jmp
pop
addr16
jmp
inc
xchg
mov
mov
leave
xchg
pop
lret
fwait
mov
lods
daa
lahf
sbb
hlt
xchg
jecxz
ds
std
mov
sub
in
mov
ret
push
lret
sbbb
jns
or
push
xor
inc
std
icebp
jo
repz
stc
ja
cwtl
and
mov
xchg
xor
pop
jnp
lcall
out
std
lret
add
repz
cs
loopne
sti
dec
sbb
add
sbb
js
fiaddl
insl
imull
fsubr
inc
mov
jecxz
mov
lea
loope
jb
aaa
pop
push
out
jb
scas
and
sub
out
cld
jne
scas
into
xchg
inc
decl
mov
cmp
popf
push
repz
insb
or
in
xor
inc
mov
rcrb
pop
jo
test
sbb
and
pop
roll
incl
mov
pusha
outsb
jb
aaa
mov
int3
mov
xchg
or
xchg
and
aaa
andb
in
ret
add
mov
push
dec
aas
ret
ret
cmpb
push
scas
jne
scas
insb
insl
or
inc
cmp
ret
inc
xor
int
xchg
mov
mov
mov
push
ja
loope
mov
jno
lock
std
imull
movsb
pop
push
cwtl
mov
adc
adc
in
add
xor
insl
xor
test
sbb
adc
push
push
push
lods
mov
ja
clc
movsl
cmp
sbb
inc
iret
clc
mov
and
xor
in
lds
aam
jo
jg
pop
into
mov
pop
mov
sub
mov
xchg
cld
pushf
lock
paddusb
shll
test
dec
cmc
cmp
xorl
stos
ds
je
lcall
cmp
psubusb
cmp
subl
xchg
add
or
dec
push
pop
pop
repnz
jp
xchg
je
xor
clc
addb
pop
xor
cmpsb
test
and
mov
insl
cmp
jl
loope
scas
pop
or
adc
xchg
push
sbb
pusha
push
idivb
add
pushf
repnz
jns
lcall
dec
push
fldcw
inc
fs
xchg
mov
outsl
imul
fldcw
aad
int
mov
loop
sbb
add
jl
stos
mov
and
xchg
jo
jnp
inc
mov
xor
mov
sub
inc
push
enter
add
cmp
cmp
icebp
mov
push
jg
aam
mov
outsl
sti
fwait
sub
cmp
inc
jae
inc
mov
jecxz
ja
adc
jmp
mov
jb
mov
push
sbb
dec
into
ja
repz
xorl
or
das
pop
subb
call
pop
cmp
jmp
popa
dec
add
pop
jo
add
movsb
xchg
sarl
addr16
je
dec
jl
fsubrl
imul
jae
aad
inc
cmp
ss
and
xchg
aaa
cmp
mov
push
inc
jl
mov
mov
xchg
mov
inc
movsl
cmp
inc
movsb
fistps
sarl
or
xchg
sbb
outsl
inc
and
adc
loopne
sbb
das
rorl
dec
xchg
push
test
out
outsb
push
aad
dec
call
or
adc
inc
jns
mov
jbe
jle
loop
jmp
or
enter
scas
pushf
adc
pop
push
mov
and
imul
jae
lds
mov
and
repz
dec
pop
inc
ret
or
rcl
loope
jle
xchg
loope
mov
pop
sub
xchg
or
sub
mov
push
in
push
imul
mov
into
outsl
cmpb
insb
sub
push
sbb
xor
push
dec
xor
test
aaa
out
mov
fidivrs
lcall
mov
addr16
sub
fwait
rcl
fdivrl
push
sub
mov
fwait
outsl
cld
imul
in
xchg
add
and
mov
into
inc
cmc
pop
jnp
lret
fcomps
out
shl
repz
pop
pusha
ss
xor
rclb
adc
test
and
stos
sub
es
or
pop
sub
shrl
inc
movsb
repz
cwtl
sub
push
and
xchg
cmpb
and
jae
cmp
dec
jbe
arpl
cwtl
aas
sub
add
out
and
les
xchg
or
mov
stos
mull
into
test
add
xchg
mov
icebp
xchg
xchg
in
add
cmp
adc
cmpsb
xor
bound
or
pop
xchg
out
lret
dec
out
push
sub
jbe
mov
fldcw
or
push
add
pop
cmp
pop
scas
cmpsb
fcoml
add
cltd
sbb
mov
mov
scas
cmp
and
jne
mov
xchg
adc
inc
mov
jns
aaa
aas
mov
das
daa
pop
and
xor
popf
add
push
fimull
idiv
fld
aam
inc
movsb
shrl
data16
and
das
sub
jle
lock
movsb
jns
fwait
sub
sbb
in
mov
xchg
mov
vmread
rcr
sbb
fists
inc
xchg
test
push
pop
xchg
out
sbb
jp
jo
call
cmp
clc
inc
dec
mov
aaa
xor
jne
scas
pop
lock
jb
jne
sub
xor
incb
fucomi
outsb
lock
pop
mov
lret
outsl
mov
and
jge
lahf
movsb
repz
rcr
jmp
jno
xor
sbb
jl
lds
int
xorl
mov
clc
xchg
lods
lret
movsl
je
push
mov
xchg
cmc
pusha
pop
or
pop
shll
fnstsw
push
xchg
push
jo
mov
cmp
int3
sbb
or
pop
das
arpl
call
rorl
push
jle
pop
fisttpll
cli
mov
in
lcall
or
fsts
jge
mov
ds
lret
jo
xchg
repnz
xchg
inc
ljmp
inc
loopne
adc
push
in
cmp
sbb
inc
les
inc
loope
or
push
out
jae
pushl
xchg
pop
mov
jae
fldcw
push
or
enter
inc
mov
icebp
repnz
xchg
data16
loop
mov
sbb
xor
jge
out
push
bound
push
test
mov
push
leave
mov
sti
push
fisubrl
dec
shrl
sub
cltd
jg
test
in
inc
sbb
mov
adc
lds
push
cmc
push
pusha
xor
cltd
xchg
insb
out
iret
je
cmp
stos
mov
les
pop
pop
test
es
adc
lock
gs
inc
decb
aaa
xor
mov
jbe
adc
aam
test
sbb
cld
out
push
xor
mov
mov
adc
jns
shl
insl
sub
adc
adc
cmp
adc
sti
push
out
out
pushf
inc
ds
shlb
lcall
and
mov
lahf
dec
pop
ret
cmp
mov
jecxz
orl
aas
test
xor
sbb
sub
bound
jle
ljmp
xchg
jge
xchg
cmp
mov
inc
xchg
xorb
ror
fcomp
enter
pop
pop
add
inc
in
or
aaa
insb
add
ret
bound
add
mov
gs
push
daa
push
pop
rcrb
sbb
xchg
in
in
int
sub
adc
jns
xor
dec
out
cmp
in
addr16
jl
cli
test
gs
add
ljmp
je
aad
lahf
sbb
mov
pushf
test
fisttpl
sub
jmp
neg
push
jae
dec
mov
lods
lods
shrb
sahf
cmpsl
sbb
fcmovnu
nop
outsl
movsb
jbe
push
mov
sub
cmp
mov
in
jns
or
cltd
dec
fildll
in
cwtl
push
clc
subl
cmc
xchg
mov
mov
pusha
lods
xor
std
dec
fcoms
add
mov
push
fidivrs
out
xor
push
mov
movsl
repnz
push
mov
push
mov
cltd
fstps
hlt
adc
add
mov
inc
inc
in
scas
lods
sti
cmpsl
and
mov
xor
inc
and
xor
cmc
sti
xor
inc
fcoml
push
es
or
pop
ljmp
into
enter
into
jge
repz
mov
pop
repnz
sub
or
aaa
or
xchg
bnd
adcb
add
lea
push
push
add
pop
ret
pop
push
shlb
and
cmp
add
and
xor
movsb
scas
loopne
test
cmpsb
push
cld
cmp
imul
or
cli
jno
ret
pop
dec
cmc
sub
lcall
xor
jg
sahf
add
xchg
shrb
into
arpl
xor
dec
insl
or
out
xchg
jnp
addl
mov
fwait
testl
outsl
inc
jns
sub
fsub
add
lcall
cltd
xor
mov
sub
xchg
or
or
xchg
cmp
xlat
mov
xor
jmp
xchg
dec
gs
xor
aaa
or
loopne
pop
pop
push
ja
sbb
cmp
cltd
mov
add
fwait
aas
sbb
xchg
mov
ret
mov
or
push
insl
or
pop
imul
pop
inc
popf
addl
icebp
or
pop
movsb
js
sub
mov
mov
shll
enter
inc
cmp
and
mov
jecxz
sbb
mov
push
stos
cld
jg
jne
inc
sub
jge
xchg
sub
jno
fs
mov
xchg
out
lods
sbb
pop
aaa
mov
lahf
mov
sahf
pop
inc
jp
pop
inc
iret
mov
bound
lret
imul
jo
in
lcall
pop
inc
xchg
xchg
jns
aas
adc
outsl
leave
ffreep
mov
mov
sbb
popa
divl
jge
jnp
call
add
xor
pop
jmp
in
xorl
fldenv
outsl
leave
push
out
push
repz
addr16
and
push
fbld
xor
push
es
fistps
push
fs
mov
add
loope
mov
push
sub
stc
xchg
aaa
or
pop
idivl
adc
jbe
js
cwtl
dec
xchg
add
xchg
mov
jge
mov
jecxz
js
pusha
out
cmpsl
xor
lock
mov
jae
mulb
jo
sub
ljmp
adc
sub
lret
mov
mov
jns
add
int3
cmp
cmc
mov
jecxz
xchg
mov
inc
pop
mov
jbe
arpl
bound
out
or
inc
lods
call
call
push
xchg
sbb
in
outsl
arpl
pop
add
mov
pop
mov
mov
fsubrs
and
nop
adc
pop
ljmp
dec
test
and
insl
rcrb
sbb
cs
push
push
std
into
jmp
sub
mov
dec
sub
mov
shll
aam
sub
add
sahf
jbe
mov
mov
jbe
push
sbb
das
shlb
imul
sub
test
fildl
sbb
cld
jp
sbb
dec
ret
jecxz
jecxz
or
xchg
add
push
inc
std
jle
in
int
xor
inc
rclb
les
testb
sub
out
rcrl
push
dec
sub
mov
or
imul
sub
jno
push
jg
or
cmp
nop
inc
pop
mov
movl
xchg
inc
mov
cmp
test
loopne
rcr
int3
mov
or
push
cmpsl
lock
jbe
mov
into
mov
jmp
in
andl
inc
stc
popa
faddl
ljmp
fsts
arpl
aam
adc
mov
adc
inc
test
or
ss
pop
cmpsl
add
or
jae
test
pop
ja
add
fcmovnu
or
sub
sub
mov
mov
inc
les
divl
or
and
aaa
lods
push
inc
xchg
xor
add
or
das
push
pusha
mov
dec
pushl
pop
cmp
imul
jl
insb
stc
add
bound
sahf
fnstcw
divl
sub
std
pusha
ss
adc
fimull
outsl
adc
xchg
push
sbb
mov
aam
add
adc
cs
mov
fcom
or
into
dec
xor
daa
push
mov
ja
mov
sbb
iret
aaa
jns
sub
iret
pop
push
mov
jmp
cmp
mov
sub
inc
cmp
imul
pop
push
pusha
std
cmp
mov
jmp
nop
call
andb
cmc
or
xor
dec
xchg
jns
out
push
cmp
and
inc
shll
jmp
push
cmp
sbb
xchg
incl
lret
pop
push
adc
and
fneni(8087
in
pushf
adc
cs
ja
dec
ret
cmp
mov
loop
rcrb
push
out
int3
mov
movsl
outsb
das
loop
push
mov
iret
mov
ds
rol
movsl
mov
cwtl
out
mov
cmp
xchg
mov
mov
scas
test
movsb
in
pop
fdivs
add
xor
jo
inc
adc
sbb
cmpsl
dec
push
push
xchg
aas
cmp
pop
jno
push
jmp
jo,pn
leave
mov
cmp
imul
fmull
pop
aam
push
call
in
mov
lods
mov
adc
pop
xchg
mov
test
sti
test
mov
mov
ret
aad
repnz
pop
add
in
dec
and
lock
repz
cmc
and
adc
mov
jbe
lea
popf
xchg
inc
sub
sub
sub
sub
push
sahf
aam
inc
movsb
repz
jne
repz
pop
lods
xchg
sbb
fsts
mov
sbb
popf
fwait
mov
andl
and
dec
xchg
cmc
push
mov
seto
scas
dec
pop
push
adc
sbb
adc
fistpll
outsb
nop
test
cs
outsb
mov
popa
lcall
pop
inc
movsb
mov
lcall
mov
push
insl
pop
fbld
sub
cmc
and
add
nop
jbe
ja
sub
xchg
aaa
jnp
pop
jns
inc
lods
je
stos
pop
pop
xor
xchg
and
sbb
mov
out
shlb
push
and
loop
imul
in
dec
bsf
cs
jb
mov
mov
pusha
pop
out
adc
cld
lahf
mov
je
add
mov
mov
xor
adc
mov
stc
cmp
nop
fbld
out
jnp
jmp
test
push
lds
cmp
and
or
add
adcb
and
ffreep
rclb
in
movsb
dec
rcr
xorl
pop
fstl
push
mov
pusha
fwait
xchg
xchg
call
std
mov
mov
pop
jno
aad
sar
push
xor
mov
in
adc
clc
cmpsb
mov
sbbl
mov
add
mov
xchg
xlat
fldcw
jbe
aaa
lods
ret
inc
xor
rorl
nop
add
xor
xlat
add
pop
pop
mov
xor
jnp
ljmp
mov
push
and
pop
mov
mov
dec
xchg
fmull
and
cli
pop
mov
lods
push
dec
lods
sbb
adc
lea
mov
repz
cmpsl
xchg
daa
pop
ret
sbb
out
dec
jbe
sub
dec
xor
out
push
mov
sub
data16
xchg
push
pop
push
pop
mov
xchg
mov
inc
xchg
sbb
aaa
imulb
and
jne
inc
stc
addl
lods
movsb
out
mov
and
test
sub
dec
in
testb
mov
movsl
jmp
fwait
mov
pop
sub
sar
mov
xor
repz
popf
sbb
daa
or
cs
xor
pop
popf
call
jnp
lds
rolb
push
lea
popl
adcb
ljmp
xor
push
nop
lret
sarb
nop
jbe
sub
rorb
icebp
cmpsl
movsb
test
dec
jp
dec
cmp
in
mov
and
cmp
sub
dec
adcl
mov
xchg
cwtl
sub
cmp
mov
or
outsl
push
sub
or
push
jae
mov
leave
and
jnp
mov
bound
mov
scas
inc
fs
popf
popa
lcall
or
inc
jge
add
inc
cli
push
xchg
ds
inc
mov
sbb
loopne,pn
and
mov
pop
mov
sub
gs
ret
jge
mov
jp
std
aaa
lea
nop
les
mov
xchg
jge
cs
dec
or
movsb
int3
xor
rolb
test
push
lea
xor
bound
and
daa
outsb
mov
lahf
adc
divl
cli
pop
les
daa
out
cmp
imul
lcall
pop
mov
push
xchg
xor
push
push
mov
mov
push
lods
scas
add
loope
scas
out
mov
in
jo
outsb
push
cs
das
fs
test
or
data16
adc
jle
pop
fcomi
inc
inc
fsubrl
jb,pt
xchg
sarb
lods
mov
mov
scas
mov
fistps
jnp
mov
cmp
jnp
pop
cmpsl
out
mov
dec
push
push
fisubrs
push
sahf
inc
cmp
loope
cltd
jnp
addr16
inc
leave
jo
or
das
ffree
sahf
or
gs
dec
int
mov
inc
notb
outsl
int3
xchg
cmpl
dec
scas
inc
push
scas
in
subl
mov
leave
push
icebp
ja
and
add
test
in
int
std
insb
fcomps
sbb
mov
mov
add
xor
sbb
lods
aad
mov
xlat
shl
cmpsl
in
pop
imul
ret
stos
jp
cmc
push
fcmovne
repnz
xchg
mov
jo
lcall
sbb
add
and
or
xorl
arpl
adc
scas
mov
and
or
adc
jle
int
xor
ja
adc
or
cmp
lods
fwait
sbb
sbb
es
out
push
inc
pop
mov
jnp
and
call
xchg
movsl
sbb
add
ffree
aad
jle
and
pop
sub
in
and
js
rorl
pop
mov
pcmpeqd
push
cld
xor
test
pop
mov
mov
xchg
fisttpl
pop
mov
jae
inc
gs
fistpll
out
sbb
shlb
icebp
movsl
lods
fcmovbe
out
xchg
cmp
xchg
rcr
pop
in
loop
adc
or
push
cwtl
jno
mov
hlt
daa
xchg
lods
into
mov
lods
rorb
xchg
call
loopne
clc
jo
mov
bound
ja
sbbl
and
mov
add
jl
fldt
inc
out
fnstcw
aas
add
daa
fistpl
inc
dec
leave
adcl
or
cmp
nop
aas
mov
int3
fwait
pop
imul
cmc
push
data16
jl
aad
cmp
stos
shr
cmp
and
jle
jmp
lock
sti
imul
jge
cmp
or
fucomp
outsb
imul
mov
or
mov
and
xlat
xor
fldl
loop
shrb
out
gs
inc
sbb
mov
mov
jb
dec
rcl
movsb
rcll
sbbb
cmpsl
rolb
addr16
in
imul
sbb
fsubrl
movsl
mov
mov
scas
add
jp
add
jo
and
test
idivb
pop
repz
adc
push
inc
mov
mov
stc
and
sub
adc
cmpsb
fwait
ljmp
mov
sahf
xchg
addr16
jne
and
inc
or
push
sar
push
test
insl
push
loopne
cld
popf
add
jns
mov
adc
mov
sbb
jno
mov
pop
rclb
xchg
insb
idivl
push
pop
jmp
iret
dec
or
cmp
dec
sbb
out
in
dec
mov
jo
xor
push
adc
dec
mov
aad
fmull
fisubl
addr16
pop
insl
jbe
push
adc
ret
xlat
int
sbb
xchg
inc
dec
push
push
ja
push
fadds
std
sbb
ret
mov
das
jmp
adc
or
das
or
mov
dec
sti
stos
insb
dec
lahf
or
rcr
push
inc
mov
insl
mov
test
fsubl
sarb
xchg
shlb
ds
pop
push
fisttpl
int
hlt
lret
das
cmp
adc
js
lods
add
rol
rcll
or
or
sub
cmpl
mov
es
push
out
andl
jge
xchg
cmp
inc
aam
inc
jmp
dec
sbb
loopne
push
mov
outsl
hlt
pop
or
mov
scas
mov
dec
mov
inc
nop
sbb
cltd
push
ja
popa
popf
fs
sub
lret
mov
enter
dec
lods
xchg
adc
inc
aad
jmp
cmp
or
js
inc
mov
cmp
mov
cmp
mov
add
test
adc
rorl
cmp
data16
xchg
hlt
push
int
fnop
lret
inc
in
cmpsl
dec
icebp
adc
insb
xor
iret
mov
sbb
cmp
inc
cld
mov
aad
sbb
pop
hlt
call
mov
dec
lea
or
adc
sbbl
ss
repz
imul
mov
decb
je
cmpsb
and
push
les
pop
mov
dec
int
and
aad
xchg
stos
int
lret
testl
data16
inc
jno
in
mov
test
push
test
jecxz
jnp
push
je
fsubrp
test
in
inc
imul
stc
int3
repnz
add
or
outsl
cmp
shl
mov
sbb
cld
push
ret
popa
test
mov
dec
sti
inc
mov
in
sub
push
cmp
jl
idiv
leave
test
xchg
cwtl
into
dec
xor
aad
stos
pop
mov
inc
inc
das
fs
pusha
fsubrl
jp
pop
xor
mov
decl
movsl
xor
xchg
or
mov
add
insl
pop
sbb
lahf
mov
inc
mov
leave
push
outsl
fidivs
call
popa
jl
das
js
mov
jo
je
shlb
mov
into
test
push
push
lods
lds
and
test
jb
pop
push
cmpsl
scas
sub
inc
jmp
inc
fldl2e
mov
addr16
pusha
add
das
mov
inc
ret
and
scas
mov
dec
cmp
test
dec
fwait
adc
mov
push
clc
mov
ss
mov
inc
pop
out
push
fcomps
and
sub
xchg
das
outsl
adc
xchg
xorb
jo
mov
cltd
clc
test
lds
ret
sahf
xorl
push
outsb
cltd
jle
bound
cwtl
fstpl
xchg
in
jne
addb
adc
aam
xorb
fwait
xchg
mov
xlat
dec
mov
xchg
adc
dec
psubw
jbe
sarl
loope
adc
gs
dec
jl
shrb
shlb
inc
pop
cmc
nop
rcll
mov
mov
xor
jbe
add
and
jl
push
jle
iret
clc
pop
add
add
imul
daa
sub
jno
out
sti
sub
jp
sahf
add
mov
or
xor
fmul
jmp
enter
insl
icebp
movsb
lret
and
lds
hlt
lahf
and
mov
fistpll
leave
xchg
aaa
daa
imul
adc
mov
jns
test
dec
push
mov
mov
fnstcw
xor
jns
outsl
push
test
mov
fcompl
dec
jp
push
aad
and
inc
jbe
mulb
addb
jno
test
pop
daa
mov
movsl
ret
out
cmpsl
push
pop
lcall
add
int3
in
xchg
and
jnp
loope
mov
jl
ss
xor
pop
popa
das
enter
aaa
push
in
aad
into
dec
clc
mov
int3
mov
mov
scas
lods
out
dec
fldl
or
loope
xchg
sub
dec
js
int3
mov
pop
mov
mov
icebp
gs
outsb
in
clc
orb
mov
dec
faddp
mov
push
pop
aam
push
jns
pop
cmp
push
sub
lret
lods
sub
adc
jo
aas
jo
push
mov
ljmp
daa
ja
push
stc
pop
jnp
lods
sub
xor
fs
int
sub
add
je
xlat
test
call
sahf
jge
cmc
mov
inc
mov
lcall
rcrl
sbb
or
mov
js
mov
popl
icebp
in
dec
testl
es
push
add
pusha
mov
pop
inc
mov
xor
jmp
sbb
das
mov
lds
stc
daa
aaa
pop
ds
and
and
fs
daa
gs
je
popa
mov
cmpsl
stos
cmc
repnz
xchg
mov
mov
pop
mov
jne
outsb
push
sahf
jl
sub
filds
insb
sbb
inc
movsb
mov
cmp
data16
loopne
scas
add
daa
jns
in
sub
lret
mov
dec
or
mov
inc
push
pushf
cmp
cwtl
cmp
push
repnz
sar
outsl
sub
jl
add
scas
jp
jnp
movsb
sub
adc
test
dec
mov
loope
pop
test
lcall
cs
das
lds
scas
jl
xchg
movsb
push
aaa
mov
inc
ret
inc
push
jbe
mov
orb
mov
mov
xor
cs
cmp
shlb
or
stos
xor
or
jnp
out
imul
fcmovnbe
test
cmc
jno
adc
xor
dec
cmc
mov
jl
popa
inc
mov
pusha
jo
call
pop
add
and
jb
mov
cli
lret
jecxz
or
xor
mov
add
icebp
dec
vpsubd
push
adc
xchg
xchg
std
and
in
jecxz
test
push
jl
ret
push
insb
cwtl
cmp
or
pop
sub
sub
cmpsb
in
lea
pop
push
sub
in
cmp
ds
pop
jge
cld
add
jbe
jecxz
fildll
orb
fsts
das
movsb
popa
sub
pushf
fnsave
subl
mov
add
pop
mov
outsl
push
pop
iret
fsubl
repz
lahf
int3
dec
jecxz
mov
pop
inc
xchg
and
dec
mov
mov
jbe
xchg
jno
je
ret
addr16
and
pop
jg
aam
xchg
addl
andb
push
xor
xor
std
inc
jl
movsl
pop
push
lahf
aam
add
sub
leave
xchg
outsl
xlat
and
xor
cmp
xchg
jae
aas
xor
xor
es
or
fwait
neg
dec
out
inc
jno
inc
das
xchg
ffreep
sub
roll
fmuls
outsl
push
addr16
sbb
mov
sbb
insb
cmp
shll
aaa
jle
inc
dec
jmp
aas
ds
and
shlb
cli
add
lcall
dec
scas
jle
xchg
push
xor
add
notb
add
push
push
test
dec
sbb
dec
jmp
xchg
ret
sub
out
jle
popa
les
inc
cmc
shl
rorb
sub
mov
mov
adc
int3
ja
daa
cmc
mov
das
cmc
nop
xchg
adc
dec
int
pop
std
push
rcrl
sar
repz
repnz
xchg
add
sti
fldt
xchg
xchg
xchg
pop
pusha
mov
jle
movsl
outsl
sub
or
mov
dec
adc
cmp
adc
fbstp
in
je
fwait
mov
push
push
lods
scas
push
mov
push
je
ja
je
arpl
add
mov
push
sub
jp
bound
sbb
pop
lods
cmp
pusha
push
in
fs
sub
icebp
inc
and
fwait
sbb
add
arpl
out
and
adc
cs
rcrb
test
cmpsb
into
mov
and
sub
lods
cmp
mov
adc
sub
and
data16
out
xor
cmp
adc
sbb
push
int
shll
jne
dec
les
sub
nop
inc
xor
std
das
lea
scas
mov
xchg
sbb
mov
rol
lds
std
xchg
xchg
jb
sbb
dec
scas
out
inc
add
in
idiv
insb
mov
outsl
xchg
fmull
xchg
or
dec
mov
mov
adc
push
insl
in
int3
sub
sub
and
rcrl
jmp
cmp
loop
dec
sub
cmc
jecxz
and
or
or
testb
xor
fistpl
add
inc
sbb
and
xlat
sbb
push
popw
loopne
scas
out
pop
mov
sub
sub
ja
sub
cmp
rorl
pop
inc
adc
inc
cltd
and
stc
rorl
sub
xor
jle
idivl
pop
cmp
and
int3
mov
adc
rcr
loope
data16
dec
mov
sub
in
inc
xchg
mov
hlt
lock
and
sub
xor
dec
shlb
fwait
jae
push
mov
test
jg
or
xor
out
fsubl
faddl
fisubl
lea
dec
mov
test
push
shrb
add
push
jle
dec
sbb
dec
pop
jecxz
pushf
jp
incb
and
out
or
jge
jbe
jbe
mov
jmp
adc
mov
outsb
inc
je
aaa
sbb
adc
aam
popa
dec
lea
dec
aam
jle
daa
sbb
popf
movsl
sub
nop
adc
fistpl
and
mov
sahf
adc
mov
inc
or
nop
in
and
out
and
mov
popw
stos
out
lcall
dec
jle
jo
sbb
daa
mov
add
sbb
dec
xlat
hlt
mov
lret
fdivl
ljmp
inc
sbb
mov
arpl
mov
jbe
jo
jl
enter
jl
lods
inc
sbb
rcll
push
scas
stos
rcrl
push
loopne
sti
lahf
scas
jmp
or
mov
and
pop
leave
lock
jp
adc
jne
add
pop
outsb
pushf
js
cmp
sarb
lock
cwtl
xlat
cmc
inc
push
js
les
sbb
push
lea
movsb
and
mov
stos
mov
sbb
pop
ficompl
ret
pop
jbe
jne
test
sbb
mov
cmpsl
cli
movsl
mov
inc
inc
aas
ja
outsb
sahf
add
ret
push
js
mov
push
out
cmpsb
mov
sahf
sbb
popa
stos
iret
ret
dec
push
xchg
mov
iret
cmp
inc
push
cmp
adc
pop
aam
iret
cmp
jb
fwait
es
clc
push
push
addb
xor
aaa
xchg
xlat
jmp
jmp
xlat
xchg
add
aas
sbb
xor
fadds
clc
mov
clc
push
xchg
jno
dec
fisttpl
jle
push
lods
fwait
jmp
add
inc
or
imul
pop
sahf
add
aam
xor
rorb
lahf
movd
insl
stc
outsl
inc
xlat
jns
test
into
inc
movsl
inc
dec
xor
xor
inc
ror
push
or
cld
icebp
sbb
rcrb
lret
xchg
mov
pop
addr16
pop
out
jns
ljmp
bound
sahf
out
pop
sub
adc
aaa
cltd
icebp
test
ljmp
aam
mov
aad
add
loope
gs
sub
repnz
push
cmp
sbb
and
divb
dec
jl
xor
clc
xor
hlt
int3
imul
xor
or
push
js
cmp
dec
push
and
push
rclb
xchg
adc
incb
frstor
repz
movsl
xchg
push
movsl
mov
mov
jae
cmp
fildll
fsubrs
or
in
ds
sti
bound
fs
nop
imul
sbb
pop
test
hlt
inc
imul
fwait
mov
push
popa
jb
rcll
das
nop
inc
imul
les
sbb
jl
add
xor
fistpll
cvttps2pi
jmp
mov
inc
pop
aas
push
mov
mov
xchg
addb
mov
cmp
pop
cmp
sub
lret
ja
add
imull
jle
xchg
cmp
pop
xor
sbb
aad
sub
popf
xor
push
sbb
movsl
xchg
pop
pop
add
jge
repnz
jbe
jge
push
sub
movsl
xchg
inc
dec
xor
mov
fcmovbe
inc
in
add
sub
push
mov
and
push
mov
nop
xor
lahf
cltd
mov
lods
mov
pop
aas
mov
cltd
ret
xlat
mov
fisttps
or
adc
rcrb
ret
mov
lahf
xor
inc
pop
outsl
push
mov
cmp
cld
push
xor
js
cwtl
ret
dec
lods
in
fistps
lahf
imul
test
rol
jge
addb
lods
fcmovb
jno
rorb
inc
xchg
psrld
cmp
fisubs
mov
pop
jo
xchg
add
sub
adc
cmp
stos
std
lea
movsl
nop
pushl
pusha
and
jb
repz
mov
pop
or
xor
icebp
cmp
xchg
mov
add
mov
pop
leave
add
out
popl
cmp
mov
push
or
lods
xorb
mov
jl
je
jle
push
push
sub
push
jnp
dec
mov
iret
cmp
pop
test
fdivr
fs
iret
dec
insb
xchg
pop
add
roll
in
daa
dec
xchg
sub
sahf
xchg
push
fidivs
ss
loope
call
sbbb
stos
mov
xor
imul
push
mov
stos
jae
xor
sbb
ret
xchg
inc
lahf
test
scas
and
push
pusha
sti
lock
mov
test
in
outsl
test
repnz
test
mov
bsr
sbb
mov
flds
popf
sub
clc
mov
mov
ja
push
aad
mov
idivl
fs
std
insl
cmp
cmp
or
push
fcomps
push
scas
sbb
push
mov
imulb
imul
push
fistpl
jbe
leave
jnp
cmp
or
push
out
sbb
jp
pop
jl
sbb
or
sbb
jp
sbb
imul
sub
pop
imul
fcmove
popa
rcll
call
or
in
sbb
mov
add
fdivl
pop
aaa
jnp
pop
bnd
out
out
mov
sbbl
mov
stos
mov
lods
xor
and
dec
movb
or
stos
sub
add
sahf
push
je
mov
cltd
mov
lock
sub
lock
cltd
cmpsb
sbb
imul
jo
shll
jmp
scas
pop
jbe
lcall
inc
mov
pop
inc
xor
cltd
mov
sti
mov
push
push
mov
fninit
xchg
insl
adc
ret
repnz
lcall
inc
imul
push
or
fnsave
add
mov
mov
stc
leave
mov
push
pop
xorl
add
jae
shlb
sahf
mov
sti
in
and
ljmp
je
inc
dec
mov
xchg
lds
loopne
test
jle
lods
push
mov
sbb
cmc
push
and
scas
in
inc
movsl
mov
or
mov
arpl
lds
ss
jge
mov
fstps
pop
mov
mov
inc
adc
addb
loopne,pn
test
cli
arpl
adc
popa
jne
inc
mov
lcall
xor
cli
inc
lods
nop
cmp
mov
lds
mov
adc
popw
cmpsb
sbb
mov
in
lret
xchg
push
stc
sbb
decl
pop
xor
in
ljmp
cmc
pushf
adc
test
add
mov
and
test
push
adc
push
and
jno
cmc
loop
add
int
mov
inc
add
stos
cmp
es
mov
fidivs
pushl
sahf
xchg
imul
call
push
push
arpl
push
mov
dec
loop
inc
sti
sub
in
pop
sub
pop
mov
ljmp
and
out
enter
or
lods
ret
shll
mov
in
std
adc
mov
push
test
adc
sti
xchg
push
pop
adc
push
dec
add
imul
sub
in
mov
xchg
dec
je
pop
or
aam
aad
sbbl
lret
mov
call
les
sbb
popf
rcrl
orl
jo
pop
mov
js
sarb
lcall
ret
mov
pushf
sti
stos
xchg
popf
loop
test
cmc
popa
jle
loopne
push
inc
dec
jae
mov
insl
test
push
mov
dec
sbb
pusha
bsf
cmp
sahf
cmp
daa
pusha
es
sbb
pop
mov
or
iret
test
leave
pop
mov
lret
scas
pop
stos
mov
neg
lret
xchg
cmp
scas
push
pop
mov
mov
pop
rcrl
fs
dec
add
jbe
imul
pushl
push
stos
push
test
dec
cmp
pop
inc
jge
lcall
lret
mov
mov
sub
icebp
sahf
or
push
hlt
push
mov
fdivp
ret
notl
inc
insb
push
test
pushf
push
stos
cwtl
inc
fs
insl
pop
xchg
xchg
xchg
roll
sub
mov
fs
and
pop
add
push
or
mov
fs
scas
mov
and
mov
add
ja
les
lods
xchg
outsl
cmpsl
les
jne
cld
inc
lds
jns
push
mov
sub
insl
pop
jne
add
xchg
in
push
ret
ret
inc
cmpsb
inc
pop
dec
sbb
push
insl
sti
shrb
sbb
add
push
imul
roll
or
rol
jnp
in
lcall
and
jle
in
sar
cmp
in
les
push
sbb
fucomi
add
mov
adc
xchg
jle
push
or
mov
pop
cld
adc
movsl
lods
ds
inc
pop
mov
shl
iret
mov
xchg
popa
test
sbb
cmp
mov
hlt
imull
in
ja
mov
icebp
mov
cld
movsl
enter
inc
andl
push
lret
adc
lea
xor
cmpsl
out
int
mov
les
dec
inc
outsl
stos
sbb
adc
ret
lods
ret
or
add
mov
push
jmp
mov
aad
loope
out
or
sbb
cmp
enter
cwtl
sub
jo
je
add
aaa
and
mov
mov
lods
pop
xchg
pop
lret
push
inc
ljmp
lea
test
outsl
or
xlat
gs
mov
andb
test
push
adc
daa
pop
ficoml
push
stc
xor
iret
add
loop
or
cmp
xchg
sub
mov
mov
dec
jle
clc
in
or
sbb
mov
stos
pushf
mov
pop
mov
sub
push
and
sub
pop
movsb
mov
xchg
rcr
movsl
push
scas
xor
or
aas
iret
cmc
xchg
dec
xor
mov
or
mov
dec
cs
jae
loop
out
popa
pop
or
fcompl
xchg
icebp
insb
cmp
xor
das
lret
clc
dec
sbb
popa
pusha
sbb
pushl
loop
jo
pop
pop
mov
xchg
push
jnp
mov
fcomp
dec
push
mov
pusha
xchg
pop
xor
fwait
aam
cmp
add
adc
pusha
std
adc
test
aad
popa
loope
xchg
test
addr16
mov
mov
aad
fistps
jno
and
jb
push
adc
loop
sbb
mov
sbb
mov
or
jbe
or
sbb
mov
jo
pop
sarb
clc
adc
cmpl
test
add
sbb
mov
sbb
lods
cmp
add
shll
fbld
sub
mov
test
pop
loope
jg
pop
jb
xor
dec
out
mov
into
xchg
dec
jmp
push
cmp
cmpsb
lock
inc
hlt
xchg
xchg
subl
stos
movl
jne
ja
jb
lds
add
test
shll
rorl
repnz
std
fs
mov
mov
xor
dec
or
or
int3
popa
ja
aad
add
in
inc
xor
fwait
add
pop
fcmovnb
xchg
sbbb
sub
mov
cmp
inc
mov
and
sbb
push
xlat
repz
les
cmp
jl
xor
sahf
dec
adc
push
in
lods
mov
cmp
pop
mov
mov
add
push
mov
push
mov
fdivrl
int
pop
or
mov
add
mov
cmpsl
push
shlb
or
add
mov
fmul
sarb
sbb
and
add
mov
cltd
adc
mov
dec
jl
mov
jmp
adc
movsb
nop
lcall
add
mov
sbb
into
js
stc
mov
mov
adc
adc
or
outsb
jnp
out
lret
jnp
int3
sub
in
sbb
mov
mov
mov
test
push
push
mov
add
movsb
sbb
push
pop
nop
jae
test
or
in
sar
jecxz
les
mov
dec
add
mov
jle
insl
adc
adc
pop
in
sar
and
pop
xor
adc
adc
ljmp
fs
popa
ja
loop
ja
jae
cwtl
out
xchg
mov
mov
and
xchg
je
gs
rcrl
ficomps
roll
lcall
outsb
cmp
aad
out
lea
test
push
aad
add
lret
cwtl
pop
mov
xchg
cmp
push
cmpl
jmp
xor
fimull
jbe
sahf
loope
fsub
pop
jl
add
popf
pop
test
push
sti
repz
and
popf
mov
imul
dec
adc
jp
fildll
inc
leave
aaa
xlat
mov
cmp
jg
jmp
insl
bound
mov
sarb
movsl
cmp
xchg
outsb
shlb
out
lods
out
mov
iret
dec
jmp
fisubl
cs
cmp
adc
or
sbb
popa
call
xor
or
insb
cmp
pop
and
ss
aam
cli
xchg
scas
or
sbb
test
fisubrl
cmp
mov
dec
mov
sbbl
cs
mov
lods
cwtl
lcall
int3
xor
jle
add
or
arpl
adcb
lahf
mov
jecxz
and
addr16
xlat
lds
dec
xchg
cmp
mov
stc
int3
jle
sub
aas
daa
mov
pusha
mov
stos
aam
testb
push
mov
dec
ror
into
lods
sbb
jno
dec
push
pop
pop
push
sbb
in
aad
setns
lods
xchg
stos
pop
mov
test
adc
sub
adc
insl
aam
leave
es
cs
lods
test
add
mov
bound
test
mov
inc
jl
push
sub
cmp
subb
das
popf
shl
lahf
popa
mov
test
out
test
cmp
mov
xlat
inc
cmp
mov
pop
xor
lods
jne
jns
repnz
les
cmp
test
js
fidivrs
mov
or
enter
sbb
or
dec
and
jmp
lret
aam
leave
push
cmpb
hlt
mov
pop
cmpsl
cltd
pop
ret
add
add
push
js
add
sbb
jno
mov
cltd
sahf
jns
cmp
xchg
push
adc
xchg
fldcw
dec
das
push
aas
rcll
push
adc
inc
inc
dec
xchg
cmc
and
jbe
xchg
test
xor
inc
mov
inc
cmp
jge
popf
lea
push
lds
sbb
shrl
sub
dec
enter
pop
loop
daa
and
mov
xor
inc
orb
jns
xor
in
lret
stos
xor
or
int3
sub
dec
or
imul
add
test
cmpsl
inc
popf
mov
push
cmp
cld
ror
inc
lds
rcll
inc
push
sub
mov
je
repnz
xor
dec
ds
idivb
es
adc
mov
jo
mov
dec
nop
outsl
mov
loopne
aaa
sub
shrb
pushf
ret
scas
push
jne
inc
jae
fsubl
add
mov
jbe
pop
les
rcl
xor
push
out
jbe
mov
inc
popf
sub
stos
sub
sbb
leave
push
mov
push
mov
mov
mov
mov
cmp
neg
ljmp
call
rolb
fisubrs
addr16
mov
mov
inc
and
ja
xchg
stos
jae
mov
jae
shlb
ja
fld
rorw
add
loopne
or
scas
fwait
mov
imull
pop
and
pop
push
push
pop
xor
in
pop
stc
imul
sbb
loopne
rorb
jle
xor
fistpll
adc
xor
out
adc
push
adc
mov
lea
pop
or
test
xchg
cltd
xor
loopne
cvtdq2ps
lcall
fisttps
lret
fsubrs
cmp
inc
bound
dec
shrl
cwtl
out
xor
lds
popf
imul
or
cltd
sbb
adc
loop
xor
ds
pop
rclb
scas
jge
ljmp
test
in
jae
fs
mov
shr
xor
ret
test
pushf
ret
adc
and
lret
sbb
int
dec
gs
add
loope
or
and
jne
stos
rol
inc
jg
aas
mov
or
or
insb
out
lds
pop
xchg
fimuls
or
jge
pop
adc
loope
mov
in
cmpsl
or
jmp
sahf
div
pop
into
aaa
add
pop
insb
jl
aam
cmp
jg
mov
mov
pusha
mov
arpl
int
shll
fs
lods
mov
sahf
pop
cmpsb
pop
mov
les
add
ja
shrl
mov
jbe
dec
cmpsb
shll
jb
ss
push
icebp
imul
jg
sbb
movntps
xchg
test
push
divl
cmp
mov
sbb
nop
mov
add
add
adc
sbb
out
mov
jl
mov
xor
in
aaa
mov
inc
pop
pop
add
mov
sub
add
divl
insb
mov
test
mov
push
xchg
dec
fwait
lcall
adc
sti
adc
hlt
add
inc
iret
call
enter
in
jns
scas
mov
das
js
popf
mov
xor
out
cmc
push
fwait
sbb
mov
imul
or
fcmovb
jns
jmp
movsl
inc
hlt
loop
in
push
bnd
push
test
sub
mov
cmp
mov
ret
enter
and
mov
mov
idiv
pop
mov
push
inc
sbb
bound
mov
and
ljmp
movsl
sbb
xchg
xlat
pop
mov
push
xchg
pop
jmp
or
and
dec
cmp
mov
bsf
mov
push
mov
xor
dec
in
fcoml
popa
ret
xchg
add
mov
inc
jg
pop
mov
lock
sub
mov
add
sub
ret
out
shrb
pop
push
jne
push
insl
jo
addr16
dec
enter
or
mov
ret
xchg
ret
mov
js
sbb
xor
lcall
xor
testl
xor
stos
cmp
adc
loope
xchg
ds
mov
pop
and
lret
pop
push
es
sahf
pmaddwd
xchg
sub
mov
lods
push
insl
test
sub
jb
push
sub
icebp
cmp
fldt
jb
pusha
testb
je
sbb
cmp
and
and
add
mov
fsubr
push
sbb
test
test
mov
jne
test
mov
cwtl
pop
cmp
fldcw
adc
aaa
jno
mov
ljmp
pop
das
xor
std
push
xorl
cltd
inc
lahf
pop
jmp
jp
mov
mov
xchg
jns
loop
fs
js
int
xchg
inc
js
and
xlat
jmp
cld
sbb
enter
jne
lock
cmp
xchg
mov
mov
mov
ss
or
pop
push
inc
rcl
add
adcl
sub
test
dec
js
and
insb
pop
xor
sub
arpl
or
push
inc
xchg
cmp
sbb
ljmp
cs
dec
mov
jmp
sub
and
and
jge
add
ficompl
cwtl
pusha
js
ss
sar
clc
es
push
enter
adc
testl
fs
cld
imul
pop
loopne
jne
and
movsl
sub
mov
adcb
xchg
cmp
push
cmpsb
adc
repz
ljmp
xlat
jmp
dec
pop
jb
arpl
aas
vandnps
lcall
ficoms
cmp
adc
cli
adc
in
sub
scas
hlt
add
xchg
dec
cwtl
fdivl
fisttps
iret
mov
divl
inc
ret
cmp
sbb
sbb
sbb
fisttpl
mov
or
cmp
rol
add
sahf
xor
mov
out
jns
les
hlt
ret
aaa
inc
and
aad
pop
nop
stc
mov
mov
pop
aam
icebp
sbb
loop
test
cmc
ret
and
pusha
sub
jl
and
scas
mov
sahf
out
lcall
sbb
xor
sbb
andb
imul
xchg
divl
cmp
jmp
cmp
in
jo
mov
imul
fdivrs
sub
or
mov
pop
push
mov
test
cmp
pop
sub
xchg
mov
pop
inc
and
ja
cmp
and
or
mov
ljmp
adc
mov
cld
ret
cmpl
iret
jge
or
popa
push
cltd
cmp
sub
mov
push
and
ret
aad
adc
push
sbb
jne
jle
lea
jle
out
and
imul
lcall
or
add
mov
pop
xchg
or
int
js
lock
mov
insl
adc
xchg
stc
das
xor
outsl
fs
lock
repz
cmp
push
daa
testl
pop
jbe
mov
call
sub
and
mov
lea
xor
mov
les
imul
add
sahf
js
dec
jo
add
push
movsb
jnp
sbb
mov
or
imul
ss
adc
push
in
pop
pop
insl
into
je
push
mov
jge
xchg
dec
insl
cmp
leave
push
xchg
push
loopne
push
inc
js
call
sbb
mov
sarb
pop
out
arpl
xor
mov
imul
sub
push
jecxz
push
add
push
push
jmp
jne
cltd
sub
mov
pop
mov
ss
push
xchg
jge
stc
cld
int
sbb
mov
jle
daa
fcompl
and
cmpsl
xchg
and
jne
lret
xlat
adc
aas
movsb
mov
fistps
fisubs
mov
mov
or
ss
enter
sbb
pop
cmp
aaa
mov
push
mov
xor
repz
xchg
lds
mov
mov
pusha
sar
xchg
mov
mov
aad
in
dec
xchg
xchg
mov
in
imul
and
inc
dec
adc
jno
push
ret
dec
pop
add
pop
or
inc
hlt
pop
das
pop
dec
xchg
int3
int
lcall
mov
dec
loop
xor
imulb
jp
push
mov
std
ljmp
xlat
shrl
mov
sbb
dec
sub
dec
or
jnp
lods
scas
test
mov
mov
or
std
xchg
loope
bound
les
dec
lcall
and
out
pop
jp
jge
scas
and
jo
dec
enter
pushf
mov
mov
bound
jns
fcmovnbe
jbe
lahf
cmp
xor
aam
cs
lods
dec
ret
cltd
lcall
or
cmp
and
mov
jo
xchg
push
js
mov
pop
lock
dec
ficompl
jl
fsubp
mov
xchg
out
jmp
cld
dec
push
shl
sbb
xchg
fs
icebp
xor
adc
dec
stos
fstps
and
sbb
daa
dec
inc
mov
pop
fidivrl
lock
mov
inc
cmp
push
test
sbb
ja
out
mov
aas
out
cmpsl
mov
push
loopne
xor
imul
idivl
mov
dec
xor
mov
jp
mov
and
jl
andl
xor
mov
shll
lds
sbb
cmp
cltd
cwtl
lods
jnp
mov
cmp
ficoml
repnz
jo
add
mov
sti
lock
push
std
inc
sub
pop
test
jo
mov
adc
rorb
orl
push
lock
lcall
mov
ret
sbb
jecxz
push
add
stos
flds
test
fldenv
mov
mov
jmp
pop
xchg
scas
xchg
insl
jecxz
push
bound
cmp
icebp
push
mov
fstpl
jl
int3
ret
push
pop
call
mov
aas
fwait
push
out
stc
movsl
sbb
repz
and
into
ss
dec
xchg
mov
inc
test
outsb
cmp
imul
jae
pop
sbbb
cwtl
xor
fcmovb
lea
adc
pop
lock
bound
popa
dec
lods
push
data16
add
sti
das
repnz
push
xchg
mov
and
ss
xchg
and
scas
icebp
push
mov
movsb
adc
aad
or
push
stc
push
jmp
pushw
std
and
dec
lods
aaa
mov
and
in
jge
stos
sti
fbld
add
lret
roll
xor
xchg
ss
js
pop
loop
and
clc
push
clc
xorb
lret
ffree
push
aas
aas
push
xlat
cmpsl
mov
shl
adc
and
sbb
xor
mov
ja
push
mov
lret
add
pushf
and
in
or
mov
inc
icebp
fsubrs
sub
adc
xchg
ljmp
jge
sub
rcrb
int3
dec
cmp
pop
mov
sbb
or
pushf
xor
mov
and
pop
rolb
xchg
xchg
dec
pop
out
jmp
data16
out
sbb
sub
imul
mov
sarl
push
mov
loop
outsl
dec
jnp
adc
or
js
nop
popf
or
in
aad
lahf
lods
pop
fcmovnb
ljmp
xchg
fidivl
bound
stc
cmp
pop
jmp
push
inc
out
push
cmc
out
aas
xlat
sub
pusha
fiaddl
xor
daa
addb
roll
stc
pop
xchg
push
movsl
push
jge
dec
and
push
js
xor
dec
xchg
pop
pop
mov
orl
or
ret
jo
dec
imul
enter
xchg
cwtl
xor
iret
sub
pop
cmp
push
pusha
jecxz,pn
cwtl
insb
pop
push
cmpsl
test
add
movsb
push
shll
popf
push
mov
xor
test
mov
les
lret
pusha
sahf
outsb
inc
jbe
aas
jb
sub
dec
gs
dec
ljmp
arpl
or
sbb
test
mov
int
data16
shll
pop
popa
lods
stc
adc
jp
dec
push
mov
pop
rorb
push
xchg
cmp
pop
xor
lahf
xor
aaa
add
push
push
jl
ljmp
fcoml
dec
pop
dec
fs
dec
push
lahf
je
push
loopne
ja
fs
es
ret
sub
ret
lods
add
aaa
mov
ret
test
lea
sbbb
loopne
mov
lret
add
mov
pop
pop
inc
mov
sbb
lods
ret
je
aad
push
arpl
cmp
xlat
adc
popf
xchg
mov
cmp
mov
or
fimull
lods
sti
dec
xor
or
icebp
xchg
push
add
jg
inc
fs
and
aad
adc
std
cmpsl
std
mov
scas
jle
push
fisttpll
in
mov
or
xor
or
orl
out
loopne
push
das
test
pushf
mov
and
pusha
mov
loop
imul
je
scas
sub
lret
mov
mov
and
repnz
cmp
adc
xchg
mov
xchg
mov
mov
mov
push
inc
sti
jecxz
mov
adc
push
scas
add
clc
cmp
jp
in
sahf
sub
mov
xchg
xchg
adc
inc
hlt
stos
jne
cmc
adc
xchg
push
inc
jbe
mov
or
and
inc
jl
sub
nop
jne
repnz
ds
sbb
rclb
sbb
and
mov
xchg
loop
les
xchg
out
lods
pop
dec
pop
mov
adcb
xchg
push
jmp
xchg
add
lret
push
inc
inc
sub
out
jecxz
ja
mov
inc
pop
setae
push
xlat
subb
int3
adc
cwtl
push
ja
xlat
or
mov
xor
scas
pop
cmpsl
fsubrl
stos
jo
movl
test
pop
aad
push
inc
dec
ds
cs
jp
pushf
aaa
pop
pop
andl
mov
cmpsl
inc
push
jp
arpl
stos
decb
in
loop,pt
jecxz
cmpsl
pop
setns
rol
cmpsb
dec
mov
add
or
sbb
mov
shrl
out
sub
mov
fstpl
out
mov
sub
ret
addr16
adc
scas
mov
mov
jmp
dec
jecxz
in
std
dec
add
loopne
or
mov
test
jb
les
rol
lock
xchg
movsb
xlat
imul
out
cmp
inc
jecxz
sbb
cs
enter
ja
das
xchg
cmp
test
jp
stos
fnstcw
pop
outsb
mov
push
xor
and
push
cwtl
jp
xchg
inc
cmp
mov
cmovne
push
dec
lret
test
push
lock
int3
xchg
sbbb
push
jg
stos
mov
pusha
pushf
and
pusha
mov
mov
add
inc
mov
xor
popf
imul
out
outsb
and
lcall
inc
ljmp
push
dec
xlat
loope
repz
lods
xchg
mov
jmp
inc
test
mov
cmp
dec
in
push
mov
cmp
push
xor
scas
sbb
mov
cmp
mov
sbb
mov
xchg
adc
cmp
es
and
mov
pop
sub
cwtl
btc
mov
int3
jmp
or
ja
into
jmp
adc
stc
ja
pop
mov
pop
int3
xchg
dec
ror
test
cmp
or
rolb
shlb
test
loopne
icebp
jmp
inc
cltd
mov
cli
test
sti
sbb
fldt
mov
cmp
pop
sbb
xor
mov
leave
cmc
pop
jmp
sub
mov
bound
callw
or
lea
out
stos
negl
mov
js
lock
push
pop
mov
jb
subb
sub
orl
ret
inc
outsb
push
loop
pop
cwtl
adc
sar
xchg
adc
pop
jg
out
jge
nop
jge
xchg
jbe
fistl
jbe
aad
pushf
xchg
inc
push
mov
out
fbld
and
aad
jns
and
xchg
sbb
aaa
pop
das
js
lods
mov
sahf
call
movsl
jno
aam
sbb
fnsave
cmp
lds
lcall
push
sbb
shl
insb
pop
cmp
pop
loope
push
fdivl
rcrb
cmp
sbbl
in
popa
leave
lea
xchg
mov
jb
loope
sub
out
aaa
fsubrp
cmp
xchg
add
mov
repz
jle
adc
pop
mov
mov
pusha
jne
xor
pusha
mov
movsb
test
inc
mov
scas
sub
sarl
inc
inc
inc
and
in
clc
test
insl
xor
xor
and
xchg
push
cmp
push
rorb
xor
xor
out
subl
clc
add
in
insb
sub
sbb
out
xchg
lds
inc
pop
inc
movsb
dec
mov
or
ret
popf
push
xor
inc
push
sub
mov
int
pop
ret
stc
push
mov
iret
mov
push
xchg
out
mov
or
cmp
sahf
sbb
hlt
scas
mov
push
iret
mov
jle
iret
movsl
aas
sub
imul
repnz
sub
icebp
xchg
js
daa
push
pushl
inc
nop
pusha
jle
popf
int
xchg
cmp
stos
inc
in
xlat
mov
outsb
repnz
mov
cmc
push
cmp
xor
into
ss
shrb
in
btc
lock
in
test
push
cmp
adc
adc
fnsave
js
push
xor
add
dec
in
das
in
mov
gs
dec
movsb
cmp
xor
mov
adc
xchg
aaa
insl
xchg
test
icebp
push
inc
rcrb
inc
push
arpl
pop
loopne
jl
sub
inc
sbb
int3
xchg
jne
and
in
cmpsb
add
pop
push
out
fisubs
cmc
loop
cltd
mov
cmp
repz
test
addr16
gs
xchg
xor
imul
mov
inc
fistl
push
xchg
jmp
call
test
inc
aam
fldz
xor
jle
dec
xor
mov
pushf
fs
add
mov
cmp
imul
pop
repz
mov
fdivrp
pop
pop
std
fnstsw
daa
lods
dec
sbb
popa
into
dec
xlat
in
mov
call
jo
jg
xchg
scas
repnz
imul
movsb
mov
lret
repnz
aas
out
adc
addr16
loope
cwtl
mov
stos
ss
push
dec
cs
out
sbb
pop
int
ss
call
sbb
and
ss
push
cmp
sub
sub
xchg
pushf
adc
push
lods
cmp
sub
cmp
xchg
fnstsw
popa
xchg
dec
pushf
popa
jmp
jmp
sbb
addr16
fsubp
fwait
out
mov
mov
and
lahf
push
into
pushf
xchg
fsub
popa
imul
mov
ljmp
arpl
sub
std
insb
or
mov
or
leave
ljmp
imul
enter
cltd
cltd
jns
push
cmpsb
pusha
or
in
mov
pop
cmp
push
mov
inc
clc
lcall
das
lcall
pop
pop
pop
lock
decl
pop
aam
clc
pop
imul
mov
gs
frstor
shlb
je
js
and
int
daa
push
mov
or
or
lcall
shll
mov
enter
mov
ja
lea
sub
aas
int
add
fwait
xor
pop
dec
insl
sub
dec
push
sub
and
pusha
insl
rolb
mov
outsl
dec
fs
mov
insl
icebp
xchg
leave
clc
loop
loop
jo
xor
mov
mov
mov
adc
sbb
mov
xchg
test
repz
push
mov
mov
fs
sub
mov
test
inc
rcrl
pushf
cmpsl
pushf
pop
adc
int3
pop
xchg
mov
clc
outsb
sbb
push
and
adc
cwtl
stos
xor
pusha
cltd
push
sbb
and
faddp
mov
xchg
test
ret
xchg
cld
mov
jbe
ror
push
insl
push
push
mov
push
jl
lahf
repnz
inc
pop
sbb
int3
pop
in
dec
es
adc
rcr
cmc
aam
sub
and
iret
fdivrs
jle
xor
cmp
fsubrs
xchg
xorb
jae
mov
and
jge
dec
sub
xlat
or
dec
xor
into
test
fistps
aaa
test
aas
pushf
test
repz
nop
or
leave
ja
jl
and
das
mov
movsl
stc
sbb
stc
mov
aaa
sbb
xchg
pop
mov
dec
repnz
inc
inc
rcrl
pop
in
xchg
jecxz
dec
lods
pop
sbb
fsub
xchg
or
xchg
mov
jnp
lret
sarl
call
in
mov
add
or
sbb
nop
dec
jg
cmp
mov
dec
sub
xchg
jo
push
in
negl
in
mov
inc
rcl
sbb
loope
add
sub
jmp
sub
jbe
inc
push
dec
push
mov
enter
xchg
mov
inc
pop
sti
ja
fcoml
aas
inc
in
popf
jg
mov
pop
daa
aas
mov
adc
inc
stos
test
dec
push
or
icebp
insb
movsb
arpl
mov
int3
adc
mov
mov
and
or
pop
pop
lret
mov
sbb
outsl
add
xchg
dec
pop
fidivrl
sbb
fs
sub
scas
lock
and
iret
jno
push
mov
jo
aam
add
xor
mov
jns
cltd
lret
pop
in
dec
mov
sub
iret
orl
xchg
popl
jo
popf
and
mov
inc
add
cmp
push
dec
shll
mov
xor
mov
xor
lret
stos
mov
cmp
call
test
adc
mov
jmp
cmpsb
idivl
iret
into
test
stc
sbb
inc
imulb
mov
xor
inc
movl
aas
and
mov
xchg
aam
fsubrs
xchg
lods
xor
gs
cmp
dec
fcmovnb
addl
push
lcall
mov
cmpb
mov
lahf
mov
dec
mov
jecxz
clc
pop
xorb
pop
pop
popf
sub
loop
sahf
mov
mov
insb
insb
out
jbe
test
push
jb
adc
or
add
or
sbb
mov
xchg
jns
imul
stos
sub
test
les
and
test
lcall
mov
cmp
pop
dec
fadd
xchg
nop
pop
aas
mov
testl
lods
mov
jl
roll
cmc
out
test
mov
add
aam
xlat
push
push
mov
xor
cmp
mov
jge
ds
lret
sbb
cmp
cmp
jg
xor
mov
and
je
rcrl
mov
hlt
das
fcompl
jge
cmp
inc
enter
sub
mov
mov
shrd
cmp
sbb
outsb
out
mov
cmp
lret
add
push
mov
inc
jo
inc
dec
out
cmp
dec
pop
mov
jmp
daa
inc
adc
cld
pop
aad
mov
inc
in
aad
lds
lea
mov
xchg
dec
mov
jo
movsl
sub
cs
jp
push
fcoml
data16
rol
ret
pop
jne
movsb
fnstcw
add
subb
mov
jle
sbb
and
jmp
dec
loop
aas
pop
and
inc
pop
lds
sub
add
std
lret
pop
mov
or
pop
add
dec
and
or
sbb
cmpsb
push
dec
and
xor
mov
sub
test
loope
test
fstl
shlb
mov
mov
in
popf
fwait
sbb
shl
stos
adc
xchg
cmpsb
movsb
pop
lcall
fwait
jno
push
add
cmp
mov
jp
mov
sbb
fsubrl
repz
dec
inc
imul
scas
pop
notb
and
mov
add
inc
inc
xchg
imul
dec
cld
cmp
pop
and
pop
push
pop
addr16
mov
push
push
inc
mov
or
aad
inc
js
push
test
jbe
jno
xchg
mov
outsb
mov
stos
lcall
adc
int3
int3
jle
clc
sub
mov
pop
repnz
inc
mov
loopne
es
lcall
lds
sti
int
imul
mov
outsl
mov
xor
and
sub
push
and
mov
test
fisubl
jo
es
cmpsl
xchg
push
push
xchg
cmpsb
or
test
enter
mov
sub
dec
popa
clc
fsts
sbb
repz
pusha
and
cmp
sbb
fwait
push
inc
call
sub
dec
test
jns
leave
out
test
mov
iret
sub
ss
ljmp
jg
and
loopne
imul
inc
sbb
push
pop
lds
jge
sbb
loop
or
sub
xor
jg
jp
pop
or
movsl
out
jl
jno
cmp
mov
clc
loope
out
cs
sbb
xor
out
testb
aam
dec
mov
cmp
jmp
sub
sub
xbegin
iret
dec
sbb
pop
mov
push
jmp
enter
into
or
sbb
dec
jl
dec
mov
pop
outsl
xor
jbe
and
test
mov
out
xor
lahf
xor
hlt
push
sti
adc
js
das
into
mov
aaa
push
mov
mov
push
jno
mov
inc
mov
loop
mov
jg
add
dec
sub
pop
out
xchg
cmc
rcrw
lcall
cld
inc
push
or
xchg
push
mov
dec
repnz
lret
mov
mov
ficomps
xor
jbe
xor
ds
cmp
outsb
inc
xchg
repz
int
add
xchg
pop
inc
mov
xor
xchg
xorl
or
xor
addr16
xchg
mov
jb
xchg
lret
and
sahf
pop
out
rcll
jge
test
imul
out
lcall
inc
test
movsb
dec
scas
insb
sbb
mov
jnp
insb
xor
bts
sub
or
inc
mov
push
shll
dec
mov
adc
add
popf
in
jo
dec
mov
dec
push
je
div
xchg
dec
xchg
push
pop
mov
cmc
push
jo
fidivl
mov
ljmp
add
fistps
sbb
adc
mov
rcll
lret
sub
test
sahf
and
pop
xchg
dec
jb
fwait
push
into
mov
push
cltd
ret
test
xchg
pop
xchg
aas
lret
jno
loopne
ret
jle
inc
xor
push
addb
out
add
pop
das
bound
dec
adc
lods
add
cmc
adc
roll
inc
loope
pop
insl
jle
sbb
in
in
adc
pop
je
scas
pusha
movsb
jne
adc
fisubrl
sahf
adc
rorb
mov
cltd
aad
fiaddl
sub
inc
mov
push
ret
popf
sarb
xor
sub
dec
dec
in
mov
out
les
dec
out
jns
jno
fsubrs
jge
push
push
pop
addl
mov
int
aaa
leave
cmp
out
fwait
add
lods
or
cmpsl
cmp
xchg
jge
jg
cmpsl
sub
pop
xorl
dec
movl
jae
jge
aam
sub
lret
shll
or
sub
push
mov
aas
adc
jne
arpl
pusha
out
mov
ror
jo
adcl
out
cmpsb
inc
lods
xchg
mov
cwtl
xor
int
mov
je
test
dec
scas
jl
and
push
dec
mov
stos
mov
std
push
sub
loope
mov
dec
and
lea
in
loop
mov
outsl
fildll
add
lahf
push
std
inc
scas
jae
cmpb
call
lock
xchg
sub
cmpsb
cmp
inc
cmpb
or
pop
fbld
fisubrl
mov
enter
sub
mov
in
shlb
fidivl
xor
stos
xchg
xchg
insl
ss
ret
inc
xchg
cmp
xor
bound
ret
outsb
jo
or
xor
fldpi
push
xchg
shr
fst
add
lock
add
out
push
aam
pushf
add
cld
loope
mov
add
in
clc
jnp
lock
push
fldenv
push
xchg
cmp
push
leave
sub
jecxz
stos
mov
push
orb
dec
aaa
add
rorl
mov
pop
jno
outsl
sub
mov
lds
imul
lcall
add
jb
xor
pop
push
sub
in
dec
mov
int
xchg
pop
lcall
in
in
lcall
call
mov
rorl
xor
inc
ret
xor
sbb
fxch
add
repz
cmp
sbb
dec
push
xchg
jae
mov
outsb
shll
cmp
dec
cmp
out
rcrb
adc
sti
add
test
imul
cmovl
lea
fidivrs
sarl
fs
inc
lcall
pusha
mov
clc
dec
enter
pop
in
sahf
hlt
mov
xchg
adc
sbb
add
loop
aam
pop
and
xchg
push
pusha
stc
sub
shrb
loopne
lea
pusha
out
mov
aam
fsubs
push
mov
sub
loope
mov
mov
jns
xchg
jns
mov
ret
outsb
outsl
xor
or
or
fiadds
mov
push
aam
pusha
fcoml
fnstenv
sbb
cltd
push
or
enter
hlt
fisttpl
in
sub
mov
jp
mov
aam
sub
popa
fwait
arpl
cs
or
pop
sub
and
aaa
lods
lods
mov
bound
loopne
movsl
subl
xor
mov
sub
inc
aas
lcall
jbe
mov
xchg
and
or
push
and
push
and
sub
jp
xchg
pop
add
jp
cmp
mov
mov
jecxz
pop
imulb
mov
mov
fsqrt
cld
mov
jge
and
test
mov
cmp
mov
xorl
int3
xchg
inc
in
xchg
mov
xor
jl
loope
sbb
sbb
iret
sbb
pop
sarb
dec
jl
pop
and
imul
aas
aam
cmp
jmp
inc
mov
mov
mov
into
inc
sbb
xchg
push
sbb
xchg
je
xor
cmpsb
push
jne
mov
loop
pop
push
xchg
mov
mov
xor
data16
mov
int3
frstor
or
inc
jae
inc
fwait
mov
xchg
mov
jle
adc
inc
test
inc
or
fsubrl
cmp
xor
lods
nop
push
sub
jmp
adc
jecxz
mov
jecxz
pop
shlb
cmp
dec
int
aas
push
push
lods
xchg
outsb
in
mov
inc
sbb
sahf
movsb
sbb
xor
pushl
pusha
xchg
repnz
cltd
je
jo
push
movsb
cltd
dec
mov
jbe
jmp
scas
fadd
or
lret
push
cltd
add
lods
shlb
sub
jnp
enter
out
lods
add
xchg
lahf
jbe
push
push
js
mov
and
push
adcb
sub
ja
fbld
sub
imul
add
mov
mov
in
sub
push
repnz
sub
adc
push
mov
add
dec
cld
and
fisubrs
test
jp
lds
xchg
or
fs
pop
lahf
stc
lcall
sbb
sarl
dec
enter
das
in
or
xor
fildl
xchg
xchg
sub
out
add
addl
cmpsl
inc
xor
pusha
jns
stos
loop
inc
out
mov
cs
out
sub
stos
sub
pop
add
adc
pop
addb
jecxz
dec
loope
imul
lret
mov
cmpsl
arpl
lret
test
mov
add
shll
cltd
mov
icebp
inc
mov
and
les
test
dec
mov
fwait
inc
mov
cmp
hlt
hlt
pop
fld
or
shll
std
fadds
scas
cli
mov
jp
sti
movsl
dec
bound
jg
leave
pop
aas
aam
inc
pop
insb
mov
pop
sub
pushf
cmpsl
out
cwtl
or
xchg
lods
das
ss
lret
jl
loop
mov
jo
scas
mov
add
popa
scas
cld
jp
pop
into
adc
or
sub
andl
mov
dec
cmp
dec
dec
mov
and
ret
jmp
scas
push
loopne
ror
rcll
rorb
push
insl
inc
xor
movsb
mov
mov
rcrb
addl
mov
xor
dec
subl
sti
roll
dec
pusha
sub
and
btc
or
pop
push
loope
sub
fbld
jmp
sub
cmp
cmp
jl
ds
jg
outsl
sbb
insl
test
mov
dec
enter
aas
add
mov
cmp
fcom
jns
push
sahf
push
cmpsb
xor
repnz
dec
pop
push
mov
loope
xor
lret
xchg
adc
bound
push
mov
adc
pop
cmpsb
add
inc
mov
lods
mov
sub
dec
cmpb
mov
into
les
or
xor
sbb
jmp
test
push
out
jmp
inc
test
and
sarb
mov
fprem1
aad
mov
loope
adc
add
stos
bswap
fwait
inc
test
test
adc
mov
hlt
negb
hlt
daa
pop
mov
jbe
jo
mov
pop
fistps
movsl
push
adc
fildl
cmp
out
sahf
jmp
sbb
out
dec
push
inc
dec
outsl
aas
jb
loopne
mov
mov
sbb
push
and
pop
cmp
in
pop
and
ret
inc
movsl
mov
xchg
dec
les
or
je
cmpsl
xchg
add
subl
cmp
jnp
dec
xor
xor
mov
jne
out
std
lea
inc
jl
mov
xchg
xchg
xchg
cmpsb
into
inc
out
aad
lock
push
les
adc
incl
add
aad
aas
fisttps
test
inc
pop
sbb
sub
dec
mov
dec
push
inc
in
mov
out
cmpsb
aad
jg
negl
dec
xor
add
js
shll
fidivl
push
negl
test
sub
mov
xchg
cwtl
mov
jno
sbb
xchg
cmp
enter
sti
sub
push
push
jmp
adc
mov
push
in
push
loop
fsts
sub
dec
callw
cmp
int
pop
addb
jb
add
sti
int3
xor
mov
sbb
xchg
xor
sbb
jbe
pusha
and
and
push
outsb
cli
or
sbb
jmp
xlat
aaa
xchg
test
mov
lret
shrb
rclb
rcll
xor
jno
out
scas
cli
stos
sahf
inc
imul
jp
mov
std
lahf
test
pop
and
pop
xchg
adcl
negl
cmp
psubsw
or
cmp
in
stc
xor
inc
and
mov
lcall
jg
jae
dec
cltd
loop
ljmp
jl
xor
ljmp
mov
ficoml
sbb
xchg
cmp
mov
clc
add
lds
mov
sub
add
hlt
dec
or
bound
sub
cmp
adc
bnd
jb
cmpsl
push
cmpsl
push
idivb
push
xor
mov
ffree
sbbl
daa
pop
in
fldenv
sub
rcl
cs
bound
mov
ds
ja
rcll
cwtl
das
xlat
movsb
sbb
mov
lcall
scas
addb
out
push
sub
mov
add
bound
xor
ljmp
adc
or
push
and
and
pop
in
xor
stc
add
fisttpll
sets
es
mov
and
loop
stos
shl
lock
loopne
push
ljmp
dec
jle
dec
cld
cmp
mov
ja
outsb
out
aaa
pop
mov
or
cmp
pusha
push
pop
rclb
and
adc
sub
lock
pop
aaa
aad
es
mov
sbb
sahf
int
sbb
xchg
out
mov
add
mov
les
daa
add
xor
mov
nop
cmp
sub
sbb
add
mov
in
adc
xor
nop
pop
loopne
mov
pop
inc
int
add
sub
cmpl
add
in
xor
insb
mov
adcl
cld
cmp
cmp
bound
xor
push
imul
test
sbb
push
fmuls
sbb
push
stc
inc
decb
fwait
jl
ds
test
stos
lea
inc
es
lret
aad
adc
xchg
mov
xchg
cmpsl
pop
inc
test
jo
mov
xor
cwtl
sub
aas
jne
je
and
pop
xor
frstor
xor
sbb
mov
std
cmp
pusha
jno
pop
add
mov
repz
push
dec
lock
and
add
daa
test
add
mov
mov
popf
movsl
jae
dec
popa
pop
push
jp
das
out
aas
mov
or
jmp
jg
das
pop
scas
cli
fbstp
sahf
cmp
loopne
and
inc
pop
scas
scas
hlt
hlt
or
imul
sub
pop
lea
andl
aas
cmpsl
pop
decl
mov
sub
push
rdmsr
ss
inc
mov
fiaddl
pop
and
or
inc
sarb
movsl
mov
sbb
movsl
aad
pop
bound
mov
jns
mov
xchg
inc
pop
inc
jae
stos
xchg
pop
inc
fwait
outsb
fs
or
cmpsb
jp
xlat
loop
add
adc
ja
sar
fs
xlat
jle
mov
aad
popa
sti
push
inc
adc
pop
shr
xorb
es
jmp
aad
and
cli
cld
jo
pop
add
mov
sbb
dec
scas
sar
popa
xlat
add
movsb
xchg
jb
fucomip
movsl
out
mov
sub
cmp
lahf
fidivs
sbb
lcall
ret
fisubrl
out
cmp
rolb
popa
push
icebp
rcrl
and
test
test
in
mov
outsb
ljmp
and
add
nop
adc
sbb
and
cmp
or
mov
push
cmp
ja
fwait
push
hlt
sbbl
enter
mov
xor
inc
test
mov
sbb
jo
adc
sbb
fmul
pop
pop
fsubrp
mov
dec
or
xchg
pushf
ficompl
sub
adc
push
testb
sub
mov
xchg
test
xchg
mov
test
dec
popa
dec
repz
sbb
movsb
fs
insl
lahf
loop
sub
out
into
fbld
mov
push
gs
int
jge
jge
pop
or
mov
add
xlat
adcl
iret
in
insl
stc
pusha
nop
popf
movsb
mov
dec
mov
xchg
imul
jle
fidivl
jg
push
and
mov
mov
sahf
negb
dec
mov
mov
cmp
setbe
sbb
mov
jecxz
mov
mov
push
clc
xchg
jle
xchg
pushf
sub
ret
fwait
in
scas
pushf
out
ficoms
shrl
mov
sbb
fucom
nop
daa
jecxz
ja
xchg
dec
xorl
jne
in
popf
fcomp
lods
cmc
sbb
mov
cwtl
mov
lock
and
inc
int3
cmp
push
ret
cmp
mov
imul
aam
js
call
imul
dec
inc
dec
dec
pop
or
inc
pop
test
xor
mov
lcall
lods
adc
sbb
push
sub
xchg
cmp
rorb
mov
sub
fldt
jmp
mov
repz
in
inc
pop
push
push
inc
fiadds
cwtl
hlt
push
shlb
ss
loopne
aaa
push
pop
or
cwtl
push
sbb
or
xchg
mov
jg
test
mov
adc
dec
mov
inc
dec
cmpsb
cmpsl
cmp
subl
pop
cmp
stos
mov
int
ds
mov
jne
loope
outsl
pop
popf
mov
cltd
mov
xchg
pop
xchg
dec
insb
repnz
or
or
and
lods
test
mov
xchg
cmpsb
outsl
aas
mov
stos
jns
mov
inc
or
add
lods
adc
hlt
add
mov
out
or
div
int
sub
mov
lds
inc
lds
mov
call
mov
cmp
push
mov
sti
rcll
sahf
popf
test
test
mov
fs
inc
loop
xor
mov
imul
xchg
sbb
adc
add
add
mov
mov
lea
lret
add
jae
mov
add
push
or
test
push
mov
andl
or
push
mov
shrb
inc
xchg
aam
xchg
dec
cmpsl
xchg
push
mov
outsl
add
es
sub
mov
add
in
cld
movsb
dec
and
adc
test
stos
jns
push
cwtl
sbb
pop
aaa
bound
mov
cli
push
sub
ffreep
push
negl
pop
mov
inc
push
fldcw
mov
xchg
pop
add
mov
test
shlb
dec
xor
sbb
mov
aaa
lcall
cmp
mov
xchg
cmp
xchg
out
mov
add
int
mov
in
fcmovu
scas
rcl
arpl
cmp
jl
insb
adc
pop
ret
dec
cmpsb
mov
ret
xor
movsl
and
repnz
mov
lea
or
int3
das
stos
fcomip
fldt
lahf
mov
add
ret
pop
mov
push
movsb
loope
ss
xchg
ljmp
pop
pusha
shlb
fldcw
fcompl
inc
andb
cmp
inc
dec
loope
in
imul
jecxz
xchg
jp
stc
cmpsl
mov
sti
sbb
jl
cltd
test
sbb
and
mov
jns
pop
cs
xchg
push
shrl
bound
into
and
and
push
daa
jnp
xchg
clc
jbe
sbb
pushf
jne
scas
dec
fadd
stos
sub
int
ret
imul
xor
sub
jg
xor
iret
and
mov
ret
sub
mov
lock
test
adc
dec
dec
es
cmp
jge
adcb
or
lahf
in
test
stc
jbe
aas
sbb
cmovg
mov
mov
sbb
jle
adc
cmp
shlb
shlb
jbe
sub
push
inc
or
mov
je
cmpb
aaa
mov
fwait
and
in
jecxz
and
fisubrl
int
out
mov
and
jo
push
aam
jne
js
jl
inc
mov
cltd
or
xlat
insl
in
inc
daa
or
mov
fnstenv
mov
and
mov
fwait
pop
xor
jmp
sub
fs
xchg
pop
shll
push
fnstcw
cs
gs
dec
fisubs
sub
jp
test
mov
and
sbb
mov
cwtl
sbb
inc
in
pop
dec
pop
jge
jnp
xor
mov
fs
sub
adc
xor
cmc
mov
add
xchg
xor
and
cmp
test
sub
mov
mov
push
cmpsb
insl
xchg
ljmp
std
fistpl
sub
adc
mov
add
scas
xor
dec
add
push
insl
jp
rclb
insb
loopne
shll
adc
aad
int3
add
mov
scas
popf
push
sub
and
pop
sbb
sbb
jnp
and
or
push
std
add
imul
sti
cltd
mov
mov
pop
mov
adc
out
bound
xor
hlt
dec
loope
dec
adc
pop
xor
sarb
push
test
mov
js
mov
xor
movsb
repnz
jno
rorb
ret
jns
mov
add
jbe
mov
clc
inc
fistpl
ja
daa
js
scas
and
push
mov
xchg
daa
adc
testb
cmc
dec
cmp
sub
shl
fsubs
xor
ss
lahf
test
out
fwait
cwtl
jmp
in
mov
xchg
in
mov
mov
xor
leave
jp
mov
adc
or
mov
std
pop
lds
mov
or
mov
cmp
loopne
and
aad
cmpsb
mov
notb
add
out
and
std
test
std
in
mov
jo
sub
pop
shll
ja
arpl
xlat
dec
xchg
sub
jle
adc
iret
imul
mov
cwtl
pop
pusha
ret
cmp
and
ficoml
push
loope
cmpsl
loopne
std
adc
dec
mov
sub
lods
das
ja
push
jne
xchg
jle
mov
lea
mov
data16
mov
xlat
js
cltd
sbb
sbb
inc
popf
or
push
std
push
dec
cltd
push
cmp
das
flds
add
fimuls
cmpsb
cs
leave
mov
movsl
and
es
push
cmc
push
xchg
jp
aaa
xor
test
dec
xor
and
jb
movl
lret
or
inc
add
rol
add
pop
push
xor
lods
fnstenv
cmp
stos
lcall
push
testl
andb
stos
fwait
outsb
xlat
bound
divb
js
rcll
ljmp
pushf
mov
jb
jmp
mov
pop
call
mov
or
inc
and
jnp
adc
je
dec
pop
lods
jno
jnp
adc
in
push
pop
dec
mov
outsb
push
jo
ljmp
stos
out
fldcw
subl
mov
push
int3
aad
leave
xchg
sbbl
subb
pop
xchg
xchg
cmpsl
mov
mov
push
test
cwtl
pop
ljmp
testb
repz
call
loopne
cmp
jo
mov
cmp
cmp
sbb
push
shll
lahf
xchg
cwtl
dec
movsb
sbb
int3
jae
sbb
scas
lea
inc
inc
mov
jle
or
xchg
add
imul
leave
push
add
and
sub
shrb
cmpsl
ljmp
push
cmp
jp
mov
lea
test
in
inc
adcb
mov
lcall
fs
dec
js
adc
cld
roll
or
xchg
pop
push
mov
lods
cmp
adc
or
out
push
jmp
mov
out
bound
sub
das
loop
push
mov
sub
push
outsb
dec
pop
into
xor
mov
lcall
ret
arpl
testb
stos
xor
popf
shll
fwait
xchg
inc
aaa
xchg
or
push
sbb
stos
pop
jg
aam
fidivl
popa
inc
mov
jl
std
jmp
stos
out
in
decb
and
mov
push
inc
inc
mov
mul
outsl
outsl
addr16
sbb
cli
jbe
imulb
xchg
test
cmp
test
sbb
sti
repnz
imul
mov
in
in
pop
je
jnp
add
sar
inc
sahf
or
mov
dec
fcompl
gs
fsts
daa
int
lock
leave
add
cmpsb
push
jo
jnp
or
and
sub
out
and
cmp
das
in
mov
cmpsl
je
add
pop
in
jnp
xorb
ffreep
and
lods
ret
dec
sbb
sub
fwait
adc
and
add
fst
push
cwtl
inc
mov
lret
adc
jbe
mov
sbb
jp
xchg
add
daa
pop
aam
jge
jl
es
dec
iret
cmp
es
iret
dec
add
pop
sub
repz
lods
bound
popa
aam
sub
dec
pop
outsb
es
rcr
leave
push
mov
adc
lcall
in
adc
pop
pop
mov
lret
ss
int
add
outsl
or
fwait
std
dec
sub
pop
or
ljmp
nop
cmp
fsts
dec
inc
add
fsubs
mov
frstor
fcmovne
or
pop
imul
mov
adc
add
cmp
mov
adc
jmp
cmp
test
xchg
mov
gs
sub
cmp
push
loope
lods
sub
outsl
into
mov
mov
je
pop
ret
push
sbb
sub
jne
clc
mov
scas
mov
mov
xchg
adc
int
std
fsubrs
push
popa
mov
sbb
push
out
loopne
pop
ffree
jae
adc
pop
mov
inc
mov
fistps
gs
push
push
sub
cld
test
pop
push
data16
sub
sbb
lods
sarb
xchg
xchg
mov
push
into
push
dec
adc
lcall
sbb
cmp
mov
arpl
mov
add
xchg
push
adc
loop
jle
xor
push
inc
cmp
pop
leave
test
ret
clc
push
out
push
add
or
inc
cmc
push
mov
cltd
pusha
loop
sub
pop
push
jecxz
cmp
stos
repnz
mov
push
out
mov
nop
icebp
cmpsb
hlt
sub
push
mov
stos
jecxz
cmp
inc
pushf
mov
jno
and
nop
out
pop
movsb
iret
add
ss
pop
imul
cmp
lods
cli
sahf
enter
in
fildll
cmp
in
sbb
add
mov
xchg
test
inc
clc
popa
xor
in
into
sbb
pop
mov
mov
cmp
or
adc
loop
call
push
sti
lcall
sub
test
arpl
add
cld
frstor
aam
fcmovnbe
jbe
or
cmp
jmp
negl
insb
stc
inc
mov
xchg
cmc
xchg
adc
outsb
add
add
out
jns
sub
cmpsb
in
adc
pop
cmp
or
stos
icebp
jns
sahf
test
dec
cwtl
cs
xlat
mov
mov
add
push
sbb
or
int3
sub
xchg
lods
dec
jae
icebp
lahf
bound
and
or
mov
or
push
in
inc
js
rcl
les
cmp
push
inc
and
inc
mov
cmc
ja
sahf
lds
xorl
adc
pusha
lods
pop
adcb
cltd
xor
xor
jb
hlt
leave
xlat
cmc
out
dec
imul
sbb
imul
iret
insl
adc
ds
fcompl
into
and
jae
mov
mov
in
push
or
mov
xchg
jl
mov
movsb
xchg
cmc
push
sub
in
in
mov
jmp
sbb
sbb
repnz
int
mov
int3
ret
dec
mov
cmpb
daa
push
cmp
iret
pop
adc
jmp
outsb
aad
inc
adc
or
cmp
les
outsl
xor
jbe
into
pop
add
pop
dec
xor
lret
mov
sub
loop
xlat
jae
pop
jns
sbb
pop
outsl
jbe
add
sub
dec
movsl
sbb
imul
jecxz
shll
and
xor
sti
out
call
ret
fildl
outsb
cmp
icebp
cwtl
push
xor
fstpt
lcall
adc
xlat
adc
add
stos
jne
mov
mov
push
frstor
outsl
jo
mov
sbb
jmp
out
imul
std
pop
sub
fidivl
movsl
jmp
add
divb
jbe
out
sar
mov
loope
xor
scas
dec
pop
div
pop
or
xor
je
cld
pushf
push
call
outsb
inc
insb
sub
daa
stos
mov
out
jmp
out
hlt
push
push
ljmp
jno
enter
push
rsm
or
arpl
call
ret
push
mov
outsl
cmc
subl
mov
movsl
sub
cwtl
dec
xor
leave
mov
dec
dec
jge
movsb
inc
lds
jns
and
pop
push
sub
add
fimuls
fidivl
stos
js
shrl
sbb
cld
mov
and
out
dec
aad
xlat
imul
sub
fdivs
je
sti
cmp
call
or
xchg
cld
testb
cmpsb
xchg
loope
sbb
cmc
lret
negb
mov
fdivrl
daa
popf
mov
std
lods
or
shrb
js
xor
call
into
ja
cmp
mov
and
leave
mov
push
inc
dec
xchg
jbe
inc
cltd
dec
inc
nop
fcoms
inc
push
add
push
and
dec
jmp
xchg
or
mov
arpl
push
in
outsl
mov
mov
out
in
test
cwtl
jo
cmp
iret
cmpsb
push
mov
into
xchg
pushf
xchg
jnp
push
cmp
sub
adc
xor
and
add
aam
pop
push
rclb
addr16
in
push
lock
rclb
ljmp
adc
xchg
adc
add
rcr
cmp
and
leave
das
lods
repnz
fucomip
daa
test
das
sub
inc
cmp
out
arpl
mov
aam
mov
rcll
mov
pop
pushl
stos
push
dec
sub
jecxz
fdivr
mov
rcrb
nop
pop
mov
xor
and
out
sub
testl
test
ja,pn
negl
add
jecxz
movsl
stos
add
cmpl
and
jecxz
test
adc
aam
test
inc
xchg
jb
mov
out
and
lret
and
push
repz
pop
push
imul
das
insb
sbb
aam
adc
mov
xor
and
or
roll
in
adc
pop
in
mov
push
rcll
pop
iret
gs
sbb
lods
cmp
add
daa
aas
cmc
das
push
test
ljmp
pop
sub
or
movsb
jb
push
hlt
or
test
adc
pop
sub
dec
sub
hlt
and
pop
xor
ss
ja
sbbl
fucomi
notb
sub
push
push
push
xlat
xchg
mov
or
in
pop
out
xlat
popa
sbb
fnstcw
cwtl
aas
and
std
dec
mov
test
jg
aad
sbb
addl
push
sub
add
sub
cmp
or
gs
test
mov
and
inc
inc
adc
xor
sub
or
sub
mov
pusha
stos
jg
enter
shl
lea
inc
pop
out
mov
out
lods
mull
sbb
insb
aas
xchg
mov
inc
cwtl
xlat
cmp
xchg
ret
xor
cmp
inc
es
frstor
xchg
inc
imull
mov
dec
adc
push
shrl
cmpsl
fxam
adc
popa
mov
ja
xchg
dec
fwait
adc
mov
movsl
sub
sub
dec
adc
stc
enter
adc
adc
sub
loope
inc
lods
popa
mov
xchg
nop
cmp
push
popa
xor
inc
sub
outsb
mov
sbb
les
ret
pop
outsl
push
sti
sbb
loop
cld
xchg
add
movsb
nop
es
fldl2t
and
pop
fisttpll
mov
sbb
sub
mov
daa
adc
ss
movsl
add
aam
and
ljmp
jbe
ds
dec
scas
add
or
bnd
mov
cmp
dec
cmp
mov
into
dec
cmpsl
fs
push
mov
fidivrl
cmp
daa
fs
cmc
dec
cmc
lcall
ret
jl
sbb
mov
push
ja
cmpsb
out
xchg
daa
jl
mov
stc
ret
fildll
lcall
lds
ja
push
clc
sbb
jp
jne
xor
fsubrp
fldenv
and
inc
das
arpl
mov
sahf
addr16
sub
sti
and
fdivrs
mov
fnstsw
pop
push
and
mov
fldt
adc
aaa
ljmp
jo
jnp
add
mov
cmp
xor
mov
sub
cli
or
push
cmp
iret
push
es
and
adc
daa
dec
push
xor
inc
or
js
mov
cmc
enter
jb
pusha
shl
cmp
das
das
fldcw
imul
xchg
lret
push
rol
icebp
bound
in
jnp,pn
adc
add
pop
stos
idivl
inc
push
inc
sbb
aaa
jecxz
out
sub
sub
movsb
jp
xor
insb
popa
cld
dec
cmp
stos
pop
loopne
add
jle
ret
leave
cmpsb
test
mov
insb
int
xchg
fstps
sub
arpl
aam
xlat
dec
popa
inc
imul
jmp
shrb
jo
adc
repz
lds
cmpsb
int
mov
inc
xchg
mov
dec
enter
push
lods
pop
xchg
jnp
lds
jp
fldcw
int
in
mov
popa
or
add
scas
shll
cmp
mov
cmpb
popf
mov
aam
sbbb
inc
sub
ficompl
imul
lret
sub
pop
jae
cmp
ret
in
push
and
push
mov
and
and
mov
jb
cmp
lock
shlb
iret
int
cld
mov
xor
xor
test
jns
out
repnz
dec
mov
adc
das
shrl
sub
mov
stc
insb
push
jg
pushf
lcall
popa
arpl
pop
pop
jno
sub
pop
cmpl
into
das
addr16
mov
cmp
mov
jbe
xlat
cmp
and
das
mov
cmp
push
pop
bound
cmp
sti
sbb
loope
incl
push
fcmove
aad
in
in
mov
cmp
mov
mov
push
shlb
ret
add
mov
sbb
fsubl
jb
push
cmp
ret
loop
add
or
jo
popf
sub
nop
or
xchg
cmp
mov
and
loope
dec
shll
push
sub
inc
mov
fldcw
cmc
js
cs
ja
add
cmp
sbb
mov
mov
out
aam
or
std
jb
lcall
jb
sbb
je
ds
pop
mov
jnp
sub
inc
in
mov
out
scas
mov
jnp
sub
in
add
jmp
and
cwtl
push
adc
addl
repnz
mov
adc
test
arpl
fcmovnu
sbb
push
xor
cld
adc
sbb
cmpl
xchg
je
jl
inc
cmpsl
jne
xor
add
or
outsl
cmp
jl
xor
mov
dec
push
scas
fisubl
imul
xchg
sbb
jbe
cmp
adc
push
sahf
mov
pop
arpl
pop
mov
jp
rcrl
sbb
dec
outsl
adc
pop
pop
xchg
sub
lods
add
in
shll
test
mov
arpl
hlt
dec
in
int
gs
push
and
call
inc
lods
sbb
mov
push
insl
inc
in
shlb
jl
mov
xchg
into
dec
in
push
or
stc
mov
sbb
and
in
and
mov
or
mov
aas
pop
imul
iret
push
mov
fs
cmpsb
out
cmpsl
sti
adc
sub
sub
lret
mov
inc
ret
xchg
mov
mov
xchg
and
adc
pop
or
jae
or
cmpsb
add
and
stc
add
aaa
or
pop
jae
pop
nop
jb
cmp
cmp
mov
in
stos
out
mov
and
jp
daa
cmp
push
aas
dec
movsl
pop
adc
fdivs
adc
sbb
loop
jo
mov
clc
pop
adc
scas
rol
and
sbb
push
and
sub
adc
push
pop
js
push
insb
dec
cmc
mov
sub
and
pop
dec
cmpsb
jmp
pop
mov
cld
inc
sbbl
addr16
dec
das
clc
mov
pop
cli
xlat
mov
sbb
xor
jp
pop
push
test
push
je
pusha
cmpsb
ljmp
fs
xor
fdiv
sub
inc
jns
and
ret
xchg
xchg
mov
test
sub
sub
int3
data16
rorb
inc
fiadds
or
push
lock
jbe
dec
mov
pop
xchg
mov
je
or
stos
addb
add
mov
push
sbb
mov
mov
outsb
adc
sub
inc
mov
jl
fidivrl
inc
push
xlat
dec
cmpsb
xor
hlt
or
or
xor
stc
int3
jmp
out
pop
push
add
push
sti
dec
aas
subl
xchg
push
pop
pop
movsb
out
mov
mov
mov
cmc
jo
cs
cmp
xchg
inc
mov
call
and
xlat
mov
jne
lods
ljmp
xor
addr16
into
je
scas
adc
mov
cmpsb
mov
inc
xchg
mov
aam
mov
mov
or
les
push
into
lds
mov
mov
ljmp
sbb
adc
add
xchg
sbb
xor
fmuls
mov
and
push
popa
scas
orl
cmp
add
inc
cmpsl
cli
enter
out
incl
add
lcall
in
mov
jp
ja
cmp
test
in
mov
nop
push
mov
pop
cmp
sarb
out
adc
cmc
rcrb
cmc
inc
mov
call
out
lock
pop
lret
outsl
jno
xchg
xlat
pusha
sbb
cwtl
sub
icebp
push
or
aas
and
mov
unpcklps
repnz
sbb
idivl
pop
xor
stos
je
adc
push
and
jo
dec
jbe
insb
sbb
idiv
and
das
aaa
sbb
test
cmp
xor
out
fisubrl
fsubs
out
adc
push
lea
inc
in
xor
repz
xlat
cmp
sbb
fidivl
aas
into
xchg
ret
xor
inc
jg
in
mov
xchg
test
mov
ja
loop
int3
dec
dec
mov
jo
cvtpi2ps
pop
add
rclb
int3
enter
das
sahf
adc
into
imulb
andb
mov
testl
mov
mov
data16
scas
mov
jmp
ret
lods
stc
inc
mov
movups
mov
fisttpl
fidivrs
add
rolb
fldt
jbe
out
xchg
ss
xchg
lret
inc
iret
cmpsl
or
sub
dec
mov
push
or
fistpll
jns
shlb
cmp
popaw
sahf
roll
fwait
hlt
sub
push
sub
inc
mov
movsb
push
daa
scas
out
xchg
insb
lods
add
mov
aam
adc
js
cmp
call
mov
andb
cwtl
push
jl
stc
ljmp
inc
dec
mov
push
adc
mov
fcmovbe
push
cmpsb
pop
fwait
into
sub
and
mov
push
fistpll
or
sub
push
dec
inc
jle
dec
pop
ficompl
mov
insl
out
jbe
fadds
int3
cmp
xor
ret
les
dec
scas
sbb
pop
ljmp
test
sbb
lock
push
sbb
cmpsb
xor
ds
imul
loope
pusha
repnz
das
mov
mov
out
gs
mov
pop
stc
cmpsb
sub
mov
imul
or
fbld
mov
mov
mov
mov
pop
sbb
pop
push
clc
xchg
sub
les
mov
jns
stos
mov
popa
or
pop
cmc
pop
cmpsb
idivl
leave
pop
mov
cmp
or
ljmp
leave
les
add
cmpsb
daa
inc
outsb
cld
cltd
adc
push
jnp
pusha
push
and
mov
pop
push
mov
dec
mov
cli
pop
mov
pop
into
inc
shlb
mov
imul
inc
lret
add
ljmp
pop
add
sbb
sbb
push
xlat
fisubl
daa
push
js
jnp
out
andps
ja
addr16
test
orl
mov
out
out
cld
les
adcl
and
test
pop
dec
addr16
jmp
adc
mov
add
sbb
ss
cld
imull
dec
std
clc
push
push
jno
cmpsb
sub
daa
stos
adc
mov
dec
jle
jns
cmpl
mov
test
insl
cwtl
insb
cltd
sarb
lods
stos
pop
sbb
push
ja
adc
lock
jb
fwait
inc
mov
cwtl
repz
inc
or
and
push
sub
sub
xchg
ficoml
pop
dec
ljmp
stc
test
scas
pop
repz
mov
mov
imul
push
jb
test
inc
dec
cmc
shll
arpl
adc
icebp
mov
enter
mov
or
arpl
pop
jbe
mov
inc
ror
jge
mov
push
mov
cwtl
mov
repnz
clc
rcr
leave
loop
call
add
jb
inc
stos
in
xor
loope
inc
dec
outsl
and
xchg
in
mov
in
addr16
aam
fbstp
fcmovne
or
hlt
movsb
fwait
pop
js
mov
fstpt
xchg
xchg
repz
addr16
pop
fdivl
repnz
sahf
lcall
int3
notb
push
pop
or
xor
mov
imul
push
les
addr16
inc
hlt
push
xchg
jo
popf
fs
cmpsl
adc
in
inc
icebp
bound
mov
imul
jmp
pop
dec
push
pop
push
xor
sub
push
xchg
cmpsl
out
orl
mov
xor
or
aam
cmp
test
jne
pushf
aas
dec
add
out
fmuls
incl
test
jmp
bound
adc
fsubrp
dec
stc
adcl
mov
mull
pop
fisubrl
out
add
inc
and
in
fcomps
shl
jg
lret
sbbl
mov
xor
cmp
inc
mov
es
sub
mov
cmp
lcall
push
inc
lea
inc
push
push
mov
mov
jecxz
call
inc
and
push
xor
pop
cmp
enter
insb
jge
mov
lret
outsb
pop
dec
or
mov
stc
jl
repnz
sub
incb
repnz
mov
fdivrs
enter
push
je
push
cmp
jne
mov
pop
popa
inc
movsb
fsubrl
call
jge
sub
call
cmpsb
inc
jge
cmp
ljmp
subl
adc
sbb
sub
cmp
sub
rcrl
arpl
es
outsb
dec
out
lods
inc
push
sub
push
pop
popa
xchg
es
in
ds
sbb
fnsave
mov
shlb
mov
xchg
pop
leave
pop
lcall
dec
loopne
adc
lock
or
ret
std
cs
rcrl
sbb
xchg
in
repz
xor
fwait
shr
or
cmp
stos
dec
sbb
xor
push
jge
sti
pop
repz
ljmp
push
sbb
jnp
mov
inc
js
jns
pop
adc
or
xor
aas
push
mov
xor
fbstp
sub
push
ja
repnz
cltd
rcr
pop
imul
and
out
inc
test
xlat
ss
xor
ret
pop
jmp
xor
sbb
cvtdq2ps
dec
pop
add
mov
rcl
lods
mov
and
push
xor
leave
repz
mov
pop
movsb
dec
lret
and
dec
add
pop
push
xchg
outsb
mov
aad
movsb
rorb
addb
cmp
pop
in
push
nop
and
jge
fldt
or
insb
mov
jbe
loope
cld
jno
test
gs
xor
add
add
arpl
lods
rorl
mov
mov
jns
inc
shr
xchg
add
and
cmp
xor
jle
jl
adc
out
popa
mov
sub
mov
ds
movl
in
push
lea
lahf
test
out
sbb
dec
test
cmp
pop
arpl
cld
shll
stos
sbb
xchg
popf
adc
push
mov
cld
pop
mov
js
nopl
cmpsl
add
xchg
aam
test
std
adc
jecxz
mov
sub
lahf
loope
sbb
mov
pushf
add
fildl
push
aad
cld
mov
adc
or
loop
retw
push
clc
aam
test
xor
hlt
push
andl
sbb
adc
cli
daa
xchg
scas
xlat
ja
adc
pop
loope
gs
push
out
and
mov
test
pop
dec
xchg
out
repz
xor
imul
sbb
icebp
ds
sub
xor
lahf
push
test
jle
add
mov
arpl
and
or
and
push
imul
js
xor
inc
push
xor
lret
loop
setp
push
test
mov
adc
jmp
repz
orb
mov
fistpl
test
pop
sub
adc
mov
or
xor
out
test
push
mov
lea
test
dec
scas
pop
pop
out
test
and
pop
adc
mov
push
sbb
ds
inc
cmpsl
mov
inc
xchg
les
into
les
rorb
adc
pushf
push
stos
stos
ljmp
aaa
outsb
pop
shr
outsl
pop
nop
sahf
addr16
and
sti
in
and
pop
in
sub
xchg
lods
pusha
cmp
sbb
mov
cmp
jno
das
lret
push
dec
sbb
in
fcompl
arpl
sub
ret
cli
jp
pop
fadds
jbe
sti
mov
loop
lds
push
jecxz
aas
mov
sbb
test
jmp
xor
ja
jmp
jno
mov
add
jno
jb
data16
cltd
sti
dec
sti
mov
call
push
imul
out
adc
xchg
mov
shll
and
lea
adc
in
stc
cltd
jle
sti
icebp
cld
and
dec
mov
jmp
sbb
pushl
xchg
outsb
cmp
jbe
jnp
hlt
mov
aam
sti
xchg
push
repz
sbb
mov
cwtl
lock
pop
sbb
sbb
ret
dec
jne
dec
jne
icebp
cmpsb
outsb
push
sar
mov
cltd
mov
mov
in
push
jle
pop
in
lock
mov
test
mov
mov
adc
inc
mov
mov
cmp
add
cmpsl
pop
mov
push
jge
cmpsl
js
jae
fisttpl
orl
cli
jl
cmpsl
in
aaa
and
adc
sbb
aam
stos
fildl
push
movsl
loop
mov
or
scas
lock
dec
jae
inc
inc
packuswb
dec
ja
mulb
or
sti
ja
xlat
jle
add
dec
add
movsb
push
lcall
in
pop
pop
jg
sar
add
fiaddl
or
repz
sbb
mov
aad
scas
ja
in
jge
pop
or
sbb
xchg
pop
mov
pop
leave
daa
adc
add
lods
inc
rol
mov
pop
mov
jnp
mov
fisttpl
clc
ja
popa
push
jae
lea
add
movsb
add
dec
or
es
and
or
inc
push
mov
mov
pop
popf
outsl
or
cmp
lds
cwtl
jecxz
dec
shr
pop
ljmp
insb
add
hlt
loopne
cmp
fs
mov
jmp
out
or
test
movl
ret
aad
cmp
aam
cmp
ss
sahf
rorl
flds
xor
loop
jge
aas
rcrb
mov
ja
sbb
push
test
call
cld
divb
loope
fisubs
jno
shll
cmpsb
mov
fcomi
mov
lods
in
pop
xor
sbb
ds
or
sub
pop
xor
cmp
mov
cmp
pusha
out
js
pop
pop
inc
pop
test
adc
mov
mov
js
out
das
or
xchg
and
mov
mov
xor
ja
loop
fisttps
roll
movsl
imul
adc
lock
or
push
mov
fdivl
push
daa
cwtd
fs
cli
pop
sti
dec
mov
jns
push
sub
push
leave
inc
jb
nop
stos
ret
xor
jl
fdivrs
jb
cmp
je
jg
or
fucomi
in
lds
or
call
mov
xchg
sbb
orl
enter
das
in
dec
mov
cld
pop
xor
add
inc
pop
jns
jl
cmpsl
xchg
add
fbstp
cmp
sub
pop
ss
ret
cltd
in
jne
sub
mov
aad
add
imul
inc
jo
cld
cli
sub
stc
mov
sahf
sbb
std
inc
mov
bound
xchg
cmp
scas
sbb
pushf
bound
loop
sbb
mov
cwtl
cmp
popf
and
dec
xchg
jb
xchg
ja
sub
add
outsl
lahf
and
out
pop
testb
adc
ljmp
sub
xchg
pop
test
mov
insl
mov
jbe
xor
mov
xchg
sbb
mov
inc
rorb
insl
sub
sahf
test
pop
adc
add
adc
pop
jnp
ret
and
test
pusha
rolb
mov
or
xor
pop
jp
push
stos
cmp
xchg
mov
iret
or
stos
jg
insl
xor
aam
cltd
or
test
outsl
pop
imul
cwtl
mov
dec
xchg
jge
movsb
in
fbld
insb
push
aam
inc
pop
stc
dec
mov
notl
rorl
clc
jae,pn
leave
cmpsw
xchg
jno
mov
addl
mov
inc
jno
imul
sub
xor
mov
sbbl
outsl
jb
clc
jns
pop
mov
decl
std
push
and
inc
xchg
inc
dec
into
je
cli
push
mov
sub
popa
hlt
aas
fstl
pop
icebp
jo
sarb
mov
loope
rorb
sbb
les
les
sub
add
xchg
add
into
jo
popa
pushf
pop
adc
pop
orb
loope
mov
pusha
jbe
dec
mov
cmp
mov
or
movsb
inc
sbb
hlt
cmp
xor
jg,pt
je
sbb
aad
xor
test
stos
xor
sbb
data16
repz
idiv
ret
mov
test
mov
int
sbb
adc
xor
std
jg
inc
popa
aaa
push
cmp
push
sti
es
jp
jle
mov
adc
lods
adc
shll
jg
mov
dec
sbb
xor
push
dec
test
adc
or
and
jp
test
shll
dec
outsb
outsl
ja
cmp
jp
notb
cmpb
inc
jp,pn
and
mov
ret
sahf
xchg
aam
daa
xchg
mov
pop
movsl
mov
jb
xor
pop
scas
aaa
mov
je
lods
mov
mov
xor
jb
imul
add
stc
sbb
stos
decb
or
fisttps
enter
insl
rorl
imul
int
and
fs
outsb
jmp
and
push
loop
xchg
popf
enter
xor
leave
dec
pop
in
add
fsubl
mov
xchg
mov
ud0
test
add
mov
xchg
jle
ss
ret
fsub
rcrb
popf
xchg
dec
cmp
pop
xor
sbb
xor
sub
push
sbbl
jnp
mov
xor
sti
pop
pop
mov
test
sbb
sub
inc
enter
cmp
fistpl
nop
add
xchg
xchg
and
xor
cmc
loope
cmp
mov
je
xor
jb
bnd
pushf
cmpsl
sub
aaa
js
bound
insl
mov
sub
clc
adc
ja
mov
xor
sbb
inc
xchg
clc
jb
or
das
out
into
jl
imul
xor
inc
xor
sbb
imul
movsb
mov
xchg
mov
mov
mov
out
mov
iret
fwait
inc
sub
je
loopne
in
fcoml
outsb
mov
out
pop
insb
xchg
mov
mov
lock
xchg
rclb
mov
andl
movsl
mov
jae
mov
fcomi
cmpl
and
cwtl
xor
pop
xor
sub
sub
addr16
xchg
push
push
fs
dec
sub
push
pop
fldenv
push
roll
push
push
mov
and
fsubp
sub
sub
xchg
cmpsb
jne
movsb
hlt
jns
std
xor
cwtl
or
out
cmp
or
mov
cld
inc
ds
xlat
icebp
mov
mov
loop
adcb
addl
out
popf
sub
xor
xchg
mov
cwtl
mov
cmp
push
pop
mov
pop
jo
xor
inc
loopne
int
in
jae
in
ljmp
push
fmul
adc
adc
outsl
insl
out
fcmovu
add
mov
cld
fwait
cmc
dec
fisubrs
repz
mov
dec
jge
call
pop
mov
xor
dec
xchg
out
sub
sbb
addr16
dec
sbb
xor
data16
hlt
fs
pop
pop
jo
lds
inc
add
jle
fsubl
xor
sub
out
lret
cmpsb
leave
lods
mov
out
push
testb
cmpl
jo
incl
push
movsb
push
repnz
dec
inc
or
mov
xchg
int
pop
xor
xchg
xchg
jae
mov
jnp
inc
decl
fidivrs
push
push
xor
repnz
scas
fisubl
iret
repz
mov
push
popa
mov
shl
aas
push
insl
repnz
mov
or
mov
fsubrl
add
ret
out
pop
test
popf
sub
shlb
iret
jnp
cwtl
cmp
add
jo
div
dec
addr16
fcoml
aas
xchg
or
dec
jl
mov
add
orl
mov
test
lods
test
jne
fsubr
jmp
jmp
jne
add
fwait
pop
fidivrl
bnd
les
fwait
push
sahf
popa
in
push
aaa
jecxz
push
cltd
jg
sti
and
xchg
push
sahf
sahf
pop
ja
test
sbb
stos
data16
adc
call
or
mov
mov
sub
sbb
lods
cmpsb
jp
mov
or
mov
add
inc
pop
lret
and
sbb
xor
in
mov
pop
shll
mov
movsl
cmpsl
das
lock
int3
sbb
jmp
clc
mov
adc
jle
mov
adc
xor
cmp
aas
mov
aad
cs
cli
mov
pop
in
mov
outsl
orb
cld
rorb
sti
xorb
std
ss
push
out
sarb
shl
inc
and
fld
test
jp
hlt
mov
test
cli
pop
pop
xor
push
stc
in
mov
test
xchg
pop
loope
xchg
movsb
jbe
mov
cld
xor
fldl
das
mov
mov
xor
hlt
daa
mov
movsb
clc
test
jl
fmull
jle
out
cltd
inc
jecxz
cmpsb
push
adc
sub
ret
dec
inc
pop
pop
mov
xchg
jae
dec
adc
dec
filds
mov
imul
adc
lea
test
and
test
sub
fucomi
aam
xchg
test
inc
xchg
lea
cmp
dec
call
stc
dec
inc
sbb
jg
test
test
push
sbb
orl
xchg
add
lret
jl
aam
push
mov
jns
js
repz
inc
jne
lcall
cmp
jg
popl
in
insl
jae
fistpll
mov
les
lcall
fadd
xor
imul
or
xchg
adc
loope
imul
jecxz
push
sub
jbe
jp
nop
inc
xchg
aad
inc
dec
jbe
mov
push
cltd
lcall
jmp
sub
movsl
jmp
or
fldl
dec
imull
adc
repz
int3
jmp
jo
xor
das
cwtl
fcmove
cmpsl
adc
xor
adc
dec
xchg
xor
push
jnp
and
in
xchg
sub
sbb
pop
dec
hlt
mov
ret
inc
jo
iret
call
pop
sbb
call
and
psubsb
push
movsb
push
xor
scas
insb
mov
cmp
inc
repnz
xchg
pushl
in
leave
fwait
shl
lret
repz
mov
xchg
loopne
ftst
push
push
loop
dec
jmp
add
loope
jge
push
mov
insl
inc
ss
cltd
cmc
bound
jae
xchg
lods
add
jae
shll
xor
dec
call
stos
pop
pop
fnstcw
movsb
rcll
cwtl
cmp
mov
aad
sti
fdivrp
iret
movsb
adc
sub
ss
add
pop
adc
jp
shlb
jno
dec
insl
or
mov
cwtl
movsl
mov
xchg
orl
dec
mov
add
or
xor
push
gs
sbb
test
push
loopne
mov
or
ret
insb
inc
xor
leave
das
enter
subl
xor
adc
push
push
jnp
adc
imul
dec
or
and
lret
cmp
pop
pushf
mov
sbb
mov
data16
push
repz
dec
jecxz
out
pop
adcb
mov
lret
cmc
push
mov
pop
sub
aam
adc
clc
mov
loope
sub
xchg
je
sahf
or
int3
dec
mov
inc
mov
aaa
fs
fwait
mov
push
mov
into
pusha
xor
xchg
out
push
sbb
or
fcomps
dec
pop
or
bnd
mov
sbb
adc
jle
nop
daa
adc
xchg
imul
dec
sbb
test
xchg
mov
test
lock
sub
in
insb
cmpsb
mov
sub
shrl
pop
loopne
or
sti
loope,pt
out
sbb
jge
pop
mov
arpl
adc
pop
loopne
test
ljmp
nop
adc
jne
btsl
out
xlat
int
ja,pn
stos
push
es
ret
sbb
sub
adc
out
and
fldt
cltd
inc
test
shr
add
dec
pop
imul
lock
push
insl
mov
inc
mov
jg
cwtl
js
sub
cmpsb
pop
or
lea
sub
push
xchg
or
mov
sub
int3
xchg
pop
mov
add
mov
rorl
mov
xchg
jnp
adcb
mov
pop
dec
mov
and
int3
mov
mov
inc
xorl
test
inc
and
fdiv
out
ss
push
adc
shlb
sbb
xor
mov
ret
sbb
add
add
inc
ret
xchg
cltd
xchg
icebp
jmp
das
out
das
jae
jp
pop
leave
dec
sbb
push
mov
sub
test
call
inc
popf
pop
ljmp
mov
mov
shrl
mov
jbe
scas
vpaddb
jo
ret
cmpl
popa
mov
inc
push
int3
inc
pop
inc
in
sub
pop
xchg
dec
mov
xor
loop
mov
mov
dec
fisttpll
mov
jge
lds
jl
pop
icebp
pop
testb
or
mov
fidivrl
xchg
and
test
js
lret
adc
mov
das
mov
add
mov
pop
lods
stos
sbb
dec
cmp
mov
std
add
and
xor
ret
dec
sbb
cmp
repnz
ljmp
lock
outsl
addr16
or
aam
push
push
addl
pop
add
push
arpl
jb
je
dec
mov
lods
adc
xlat
add
loope
insb
mov
loope
lods
cs
mov
lret
xor
xchg
cmp
rclb
inc
cwtl
movsb
lret
in
subb
push
cmpsb
and
outsl
inc
mov
dec
pop
dec
mov
jbe
xlat
inc
adc
xchg
scas
fdivs
sbb
aas
or
pushf
xor
lcall
jbe
outsl
subb
pop
jo
lods
notl
mov
out
data16
mov
je
sahf
mov
lea
sbb
fnstenv
mov
ficoms
aam
cmp
loopne
stos
cwtl
xorb
jl
mov
sbb
sub
add
stos
push
ja
insl
fs
in
call
fisubs
sub
fisubs
lods
mov
jns
cwtl
cli
dec
add
cmc
repz
aad
mov
cmpsl
test
movsl
mov
popf
scas
int3
iret
mov
inc
imul
lahf
aam
vunpcklps
push
pop
adc
cli
jb
js
dec
xchg
inc
lcall
mov
inc
mov
mov
notb
mov
cmp
je
das
test
lcall
jl
mov
sti
pop
fidivl
cmpsb
jns
mov
pusha
pop
test
mov
pusha
int3
mov
cmp
dec
repz
ds
sbb
xorb
sub
test
or
leave
dec
lock
or
pop
add
test
pusha
jae
shll
enter
xor
sub
iret
inc
loope
out
and
into
push
inc
mov
dec
int
fsubrs
stos
inc
aas
outsl
dec
and
xchg
mov
ficoml
adc
pop
sub
jb
add
out
sub
jno
das
les
scas
sbb
testl
xor
mov
mov
shlb
loope
sub
scas
rol
jp
xchg
scas
push
push
adc
and
push
add
aas
into
in
adc
dec
pop
xchg
mov
insb
dec
cs
mov
jge
xor
adc
mov
xorl
inc
xor
dec
and
fwait
mov
fs
jp
loopne
xchg
out
and
mov
in
imul
aam
icebp
rcll
push
movd
stc
cli
jmp
dec
ret
jmp
sub
movsl
popa
jmp
arpl
out
dec
or
dec
insb
cmp
stc
pop
mov
jb
push
sti
xchg
mov
pop
dec
scas
ljmp
ds
xchg
jle
cmp
sbbb
jp
fsubp
fistpll
ret
comiss
out
ficoml
jae
decb
jnp
xchg
xchg
sahf
int
push
dec
inc
sub
in
sti
or
shll
or
mov
addr16
ds
jge
imul
xchg
cmpsb
pop
mov
sbb
mov
and
and
mov
shl
std
dec
mov
stos
movsb
fisubs
pop
dec
std
in
cmc
mov
or
jp
imul
mov
in
call
shll
test
shll
xorl
out
jp
movsb
ret
inc
pop
cmp
xor
dec
sti
lcall
add
les
loop
cltd
je
fidivrl
out
loopne
cmp
btr
int
fwait
mov
stos
push
push
pop
mov
aad
mov
shlb
fsts
outsl
adc
push
popf
movsb
push
stc
mov
jns
pop
aam
es
mov
ja
adc
loop
ret
dec
push
into
mov
mov
shll
notb
iret
sbb
xlat
cltd
cmp
sub
sbbb
fdivs
xlat
jns
add
lods
je
mov
mov
in
mov
and
aaa
mov
jne
ret
add
xor
fs
nop
mov
data16
stos
outsb
inc
xor
sub
scas
sysexit
jne
insl
sbb
dec
jne
inc
std
hlt
les
or
adcl
mov
xchg
mov
xor
pop
ret
les
popf
ljmp
mov
pusha
out
sub
jge
in
adc
int3
outsb
fneni(8087
sub
pop
pop
adc
les
mov
or
jmp
adc
repnz
ret
call
xchg
jne
add
dec
into
push
mov
mov
xchg
fsubrp
and
xor
pop
pop
test
or
push
adcb
fwait
icebp
icebp
dec
dec
clc
popa
fsincos
lock
jmp
lret
xchg
adc
testb
push
cmpsb
decb
repnz
jmp
sub
clc
cmpsb
enter
addr16
cmpsl
in
jnp
push
es
cmpsb
and
iret
stc
scas
lahf
sbb
push
mov
xchg
mov
jecxz
jae
sti
pop
jb
es
or
dec
push
dec
mov
fistpll
jno
lock
pop
pop
dec
out
xor
xchg
cwtl
xchg
jle
push
movsl
call
pop
scas
mov
sarl
test
add
cmp
divb
sub
pop
mov
in
xor
arpl
jnp
movd
clc
xlat
push
pop
out
inc
push
cmp
or
sbb
inc
pop
sub
mov
or
inc
or
outsb
outsl
lods
jge
jl
sub
dec
push
mov
rclb
adc
sbb
mov
rcll
pop
adc
xor
lds
add
inc
push
adc
stc
out
and
mov
xor
pop
adc
inc
jns
aaa
mov
jo
ret
and
out
and
rcrb
ret
and
xchg
cs
in
add
fnsave
adcb
cmp
lods
and
lods
outsl
cmp
and
pop
xchg
mov
mov
aam
imul
pop
cmp
js
fistps
aad
mov
ret
call
push
xor
das
pop
loopne
push
test
dec
dec
idiv
jne
push
push
mov
push
icebp
xor
xchg
xchg
add
pop
pop
add
jb
popa
inc
cmp
sti
loopne
xchg
mov
push
pop
es
dec
pop
mov
out
sub
and
xchg
icebp
rorb
cld
pop
mov
ljmp
inc
cltd
loopne
sbb
fistpll
push
pushf
lock
int3
into
int3
imulb
sti
dec
rorl
jle
shl
mov
xchg
test
cwtl
les
xchg
outsl
sub
dec
push
mov
jle
adc
mov
sbb
xchg
lcall
mov
cmp
cwtl
mov
sti
cs
mov
push
sbb
out
fldl
dec
sbb
mov
mov
imul
pop
test
fs
mov
and
jo
test
cmp
xchg
jbe
addr16
cli
arpl
je
call
scas
fmull
jmp
pop
ficompl
ds
add
fdivrs
cmpsb
or
jmp
mov
pop
mov
mov
stos
fimull
mov
push
lock
scas
mov
icebp
pop
fwait
fcmovb
aam
dec
icebp
and
mov
or
inc
or
in
insl
in
loopne
frstor
shrb
leave
clc
das
pop
push
push
js
jp
iret
sub
pop
lds
inc
cmp
rcr
jnp
test
xchg
mov
out
in
xor
adc
mov
cmp
dec
enter
loop
xchg
mov
sub
into
loope
imul
or
mov
lret
int3
xchg
insl
cwtl
ds
loopne
ljmp
xchg
clc
pop
and
pop
xchg
jne
and
xchg
je
in
dec
mov
ljmp
ror
call
bswap
movsb
pop
daa
shll
les
cmp
xchg
daa
inc
pop
push
das
and
pop
lcall
cmp
xchg
adc
mov
in
pop
cmp
push
ud0
jne
xor
dec
jl
push
shl
pop
sbb
mov
jae
inc
je
pushf
lret
test
xor
hlt
in
lret
adc
push
jne
std
dec
push
pushf
aad
push
pop
aad
jbe
iret
xor
movsb
adc
xor
sub
out
pushf
rorl
cs
pop
addl
std
mov
andl
rcll
shr
cld
insb
mov
mov
cmp
int
aaa
rep
imul
fsts
test
outsl
jle
aam
xlat
loope
aas
and
test
int
push
sti
add
ja
push
loopne
popf
out
outsb
fistpl
pop
mov
fdivs
or
scas
sub
pop
mov
pushf
dec
cmp
in
daa
sub
push
nop
stc
mov
scas
ja
fistpll
mov
pop
fldt
stos
inc
ds
add
xchg
in
push
fsub
jno
cmp
and
pop
addr16
pop
shrl
mov
jmp
aad
mov
add
mov
mov
inc
scas
sti
or
negb
ret
mov
sarb
movsl
adcb
imul
dec
push
mov
cld
fs
fs
fstp
adc
sbb
cmpsl
mov
jo
nop
test
arpl
mov
ja
push
fwait
mov
test
out
mov
fcomi
lret
jbe
sti
lods
notb
test
rcr
mov
adc
or
push
out
pop
fucomi
push
pushf
push
mov
push
mulb
int3
xor
pop
xor
outsb
rcl
sarb
sub
push
mov
adc
jb
out
repnz
sarb
add
cmpsl
mov
pop
sbb
inc
outsl
xchg
push
mov
out
stos
std
xchg
mov
mov
mov
push
sub
clc
xor
or
pop
jo
test
rcl
popa
ds
pop
ret
mov
jecxz
mov
cltd
movl
hlt
cmp
inc
mov
icebp
pop
adc
shr
dec
pop
inc
aaa
pop
std
xchg
push
in
lock
iret
leave
loope
add
pushf
int
lds
gs
mov
cmc
sbb
fnstsw
or
sub
lods
add
jecxz
stos
and
pop
adcb
cmp
fwait
cmp
icebp
push
pop
sub
sbb
pop
pop
mov
xchg
stos
cli
iret
xlat
pop
dec
inc
ret
shrl
add
mov
repz
xchg
add
pop
and
push
test
test
mov
jb
repnz
fdivl
int3
dec
xor
xchg
xor
fisttps
mov
lret
jg
loop
add
stos
enter
pop
sbb
icebp
nop
addl
push
jge
mov
push
cmpsb
negb
int3
adc
mov
pop
pop
ret
stos
into
adc
jns
push
hlt
pop
xor
jns
stos
or
xchg
ss
adc
ja
dec
repnz
push
repnz
aam
nop
mov
lds
out
sub
pop
test
inc
je
aam
arpl
imul
lret
sub
mov
xchg
dec
push
xchg
push
shll
in
xor
or
push
add
bound
cltd
aaa
cli
or
cmp
mov
or
je
and
movsl
jbe
mov
push
xchg
je
mov
out
lea
cmp
pop
adc
mov
outsl
xor
cmc
addr16
call
jge
adc
add
cltd
int
pop
mov
mov
fimuls
jnp
jae
xchg
mov
outsl
add
jne
xchg
stc
aad
stc
inc
cmovno
lcall
add
jb
and
outsb
sahf
sbb
outsb
jecxz
test
add
cmp
sub
lret
push
fstps
cbtw
fcompl
and
xor
add
pop
cmpsb
xor
call
push
je
sub
push
dec
cmp
jecxz
dec
pop
sbb
cmp
daa
out
cli
repz
lock
or
pop
insl
lcall
outsb
das
dec
add
cmc
cltd
icebp
sbb
sub
sbb
xchg
test
cmp
pusha
lea
pop
or
call
xchg
stc
js
add
dec
cltd
sbb
xchg
adc
jns
jecxz
jp
push
jle
xchg
and
loope
rcll
lods
pop
push
xlat
mov
or
adc
sub
add
inc
push
test
ljmp
push
popf
xor
sbb
clc
or
aaa
pop
sahf
jns
and
stos
pop
hlt
push
sbbl
adc
ds
push
arpl
xor
mov
fdivl
mov
push
lods
sbb
inc
into
mov
bound
cs
repnz
jae
fwait
lret
mov
mov
lea
inc
cmp
or
jns
movsb
out
add
ja
inc
mov
lret
jb
lods
xlat
movl
mov
data16
dec
push
es
mov
inc
js
int3
xchg
test
mov
nop
push
repz
out
fsubr
rclb
popf
mov
dec
out
xlat
pop
aam
xchg
push
lahf
imul
shl
sub
dec
cmpsb
cmp
out
jno
bound
cmp
and
add
add
pop
inc
mov
and
imul
in
cld
xchg
mov
into
mov
dec
adc
push
inc
lods
cmc
dec
xor
or
sbb
xchg
inc
out
stos
mov
xchg
push
aaa
loope
push
ja
push
test
push
pop
cmp
call
adc
jmp
pop
sub
sbb
inc
mov
in
pop
sbb
fisttpl
xor
cwtl
ret
rolb
dec
jbe
addr16
incl
inc
xchg
lods
mov
mov
xchg
subb
push
movsl
mov
test
sbb
jnp
push
sarl
cltd
mov
loope
dec
sbb
push
lea
mov
dec
mov
out
outsl
jmp
push
pop
and
lret
or
xchg
xor
add
fwait
imul
pop
fnstcw
vsqrtpd
lea
fsubrs
test
pop
mov
mov
mov
cmp
shr
shll
in
or
fisttpl
or
mov
fists
mov
adc
inc
clc
aas
mov
add
sub
loope
out
jle
sub
pop
ss
mov
fs
push
sbb
dec
negb
sub
mov
adc
sbb
mov
xlat
js
xchg
inc
je
and
lret
fldcw
jle
xor
jbe
pop
orl
aas
adc
or
xchg
cmp
repnz
add
add
mov
pop
lret
push
jp
jb
push
sbb
cmp
adc
add
adc
lds
dec
jb
loope
std
xchg
mov
int
popa
jnp
je
mov
cmpsb
xor
dec
inc
xchg
xchg
sahf
jo
xor
mov
in
mov
in
testb
je
pxor
add
mov
adc
fs
cmp
dec
push
test
jbe
jns
dec
dec
mov
inc
and
sbb
aam
div
enter
aaa
pop
and
insl
popa
sar
xor
je
shlb
testb
fs
jno
inc
jnp
out
movsb
mov
rolb
pop
scas
inc
mov
push
sbb
xor
mov
jnp
add
or
mov
das
adc
fsubl
fdivp
pop
mov
and
dec
and
mov
js
sbb
add
dec
mov
iret
stos
or
popf
sub
mov
in
test
int3
imul
movsl
add
fadd
mov
arpl
jnp
fxch
lods
leave
aaa
jae
dec
fldenv
data16
enter
mov
mov
jle,pt
lea
sbb
or
ds
inc
ds
imul
dec
jne
mov
into
arpl
fwait
mov
sub
xor
les
push
jns
nop
rcl
repz
ds
scas
xor
xchg
add
adc
dec
sarb
and
push
aam
mov
dec
mov
adc
cmp
movsb
mov
ss
je
movsl
or
and
add
jbe
sub
pop
call
pop
roll
fdiv
dec
sbb
mov
sar
les
mov
sbb
arpl
jb
add
and
scas
test
adc
dec
loopne,pt
popl
push
adc
call
pop
ret
pusha
dec
mov
scas
mov
nop
pop
addr16
cmc
or
addl
dec
dec
mov
daa
lcall
adc
sbb
fdivr
in
mov
repz
test
filds
pop
icebp
loopne
adc
xchg
mov
mull
dec
mov
out
adc
inc
and
jno,pt
lret
outsl
mov
hlt
in
push
mov
cmp
loopne
cmp
inc
pop
in
mov
push
mov
les
inc
sti
jg
in
sbb
pop
loope
outsb
pop
aad
test
inc
xchg
inc
notl
lods
sbb
xor
popa
jo
lds
fwait
and
test
mov
push
lds
push
lret
les
or
neg
test
add
stos
scas
cmp
xchg
cmp
fadds
add
jge
cmp
inc
jnp
sbb
shl
fists
adc
cmpsl
clc
xchg
in
ljmp
lods
das
xor
movsl
sbb
push
cmp
mov
mov
jmp
mov
pop
lcall
lea
and
fidivl
xor
mov
dec
enter
xchg
ret
in
ljmp
aad
repz
daa
std
lret
add
ret
dec
inc
lahf
leave
sti
mov
adc
and
or
sub
sbb
popa
mov
int3
dec
sbb
lcall
rcrb
inc
mov
dec
jns
pop
je
and
sub
lahf
lods
mov
test
mov
cmpsb
mov
pop
add
pop
mov
sub
xchg
push
mov
dec
mov
mov
inc
fisttpl
or
lahf
ds
jne
mov
cmp
mov
int
outsl
scas
xor
test
xchg
jnp
scas
mov
dec
mov
movl
xor
pusha
xchg
cmp
add
pop
pop
push
mov
adc
fs
ja
dec
mov
pop
cmp
mov
dec
jmp
and
loope
je
dec
fldl
mov
pusha
adc
fdivs
dec
test
jae
jecxz
jo
ret
jg
push
mov
inc
ja
sbb
pop
nop
lds
cmp
int
sbb
mov
jbe
xchg
lret
fldenv
lods
cmp
pusha
jge
in
mov
aad
pusha
mov
cld
int
cwtl
test
jmp
lods
clc
scas
in
aaa
in
into
jp
pop
hlt
jle
push
nop
inc
sbb
das
and
dec
push
subb
outsl
xor
xchg
lcall
mov
pop
aad
inc
dec
jns
mov
sub
pop
imul
je
lock
lahf
cmp
pop
sub
mov
or
popw
cmp
clc
mov
dec
jne
insb
inc
bsf
sahf
inc
cltd
push
cmp
and
mov
rcrb
adc
dec
inc
fdivrl
mov
test
sub
jge
stc
adc
cwtl
add
sub
push
jecxz
mov
adc
add
fsts
loope
mov
inc
les
sbb
out
ret
adc
xchg
mov
inc
sarl
add
test
fidivl
in
jle
lcall
inc
xchg
test
xor
add
neg
push
scas
mov
repz
xchg
sub
outsb
xor
xchg
sub
mov
sti
xor
ljmp
fimull
loopne
clc
sahf
outsl
sbb
and
dec
test
mov
shll
pop
push
jbe
jnp
pop
inc
add
es
shlb
jne
jnp
das
mov
repz
popf
lret
insb
cmp
pop
jl
or
loopne
push
cmpsb
adc
add
stos
pop
cmpb
ret
push
push
shll
out
cmp
out
dec
or
jge
lret
mov
aaa
ds
sti
into
jnp
cs
and
jle
mulb
adc
int3
pop
into
sbb
daa
and
imul
mov
push
dec
sub
jl
xor
jle
adc
xchg
fldcw
and
into
das
test
sub
into
push
push
mov
mov
sbb
pop
inc
push
aam
jle
clc
inc
and
ret
xchg
inc
movsl
insb
add
lods
cs
aam
push
popl
and
js
adc
cmpsl
push
mov
aaa
cmp
add
mov
scas
or
cmp
inc
jne
jge
jge
fmull
mov
inc
and
sub
arpl
jecxz
in
jmp
pop
lret
dec
add
xchg
nop
sbb
mov
loop
addl
pop
lods
xchg
ret
popa
mov
fs
mov
imul
jae
cmp
pushf
aaa
repz
cmpsl
pop
mov
cld
inc
mov
inc
push
std
jge
stc
cwtl
xchg
je
xor
pop
xor
xchg
and
cmpsl
or
jle,pt
cltd
and
int3
cmpb
sbb
iret
fucomip
jae
sub
inc
orb
insl
ret
xchg
nop
js
xchg
test
jg
fcompl
lret
in
aaa
jmp
outsb
leave
jecxz
mov
repz
fcomi
mov
mov
stos
negb
xchg
xor
add
pop
shl
repnz
add
sti
jae
xchg
imul
pop
ss
dec
loope
fwait
inc
ret
std
lea
popf
dec
cmp
roll
sbb
pop
sti
jne
dec
xchg
cwtl
mov
adc
cmpsl
pop
lock
push
xchg
mov
and
mov
mov
sub
sbb
xchg
cltd
inc
cld
mov
fists
repnz
movsl
cmp
sbb
add
int
mov
dec
xor
push
aad
leave
jmp
stc
fistps
add
adcl
push
roll
mov
mov
mov
loopne
aam
jecxz
mov
mov
push
int3
test
jns
dec
icebp
inc
icebp
aam
lods
inc
icebp
xlat
push
push
lahf
insl
inc
cmp
adc
cwtl
stc
test
jns
xchg
lea
push
ret
daa
adc
inc
push
sbb
out
test
nop
and
push
inc
enter
sbb
push
jno
test
int3
and
lahf
in
test
mov
addr16
fisttps
popf
dec
inc
ss
lahf
aaa
in
pushf
fcmovbe
loope
std
nop
add
repz
sar
outsb
rcrl
dec
xchg
adc
orl
xchg
dec
xor
mov
mov
cmpsb
test
push
push
pop
mov
mov
add
xor
in
mov
rorl
bound
outsl
jmp
shl
ret
jae
rcrb
fdivs
icebp
sub
js
rcr
inc
not
pushf
ss
rorl
lods
push
jo
pop
sub
icebp
xor
cmp
dec
insb
push
loop
stc
lock
and
mov
jl
ss
mov
out
mov
lret
push
inc
jmp
or
lods
test
repnz
lock
in
out
add
sub
sahf
into
loope
add
in
cmpsl
lret
aas
jle
std
popf
lock
add
adc
enter
in
push
js
or
mov
pop
out
xor
dec
xor
iret
mov
and
in
test
mov
pop
out
loopne
das
iret
pusha
cmp
mov
test
push
dec
inc
push
stos
mov
cmpl
andb
out
fadds
scas
sahf
fwait
in
push
test
mov
cmp
pop
iret
addr16
cmpsb
rclb
into
sbb
jle
cld
shlb
xor
inc
into
push
jns
rcrl
js
sbb
xchg
jle
xor
add
push
out
push
mov
push
mov
daa
mov
dec
push
jb
push
add
xchg
movsl
ret
outsb
inc
jbe
fcomps
pusha
loope
mov
push
cltd
adc
roll
bound
mov
repz
xchg
push
hlt
sub
sti
ficoms
mov
fcompl
inc
mov
jbe
add
lods
sub
imull
or
rorl
nop
daa
dec
shll
mov
pushf
inc
es
and
cmp
jbe
dec
loop
leave
pop
sbb
mov
daa
lret
xor
mov
mov
fisubs
pop
mov
sbb
pop
jnp
cmc
mov
movsb
and
xorb
leave
aas
shlb
std
xchg
mov
pusha
mov
pop
ror
js
mov
and
pop
pop
in
lds
or
mov
jb
test
lods
inc
sub
mov
mov
in
dec
int3
sub
mov
jge
mov
xchg
ret
xor
fsubrl
adc
mov
adc
push
inc
dec
and
popf
decb
adc
into
pop
adc
sbb
sub
paddsb
xor
xor
test
or
inc
mov
fsubrs
mov
int
mov
sbbl
test
cmp
mov
xchg
dec
dec
cmp
sbb
mov
pop
sub
mov
mov
jecxz
jmp
jnp
mov
popf
call
add
and
fdivrl
in
sti
ja
or
push
out
pusha
dec
mov
pusha
sbb
fs
rcl
push
dec
pop
rcr
ret
movsl
pop
mov
add
jns
mov
xchg
shl
call
cli
sub
pop
jae
push
inc
dec
xchg
mov
cmpsl
scas
pop
jp
movups
mulb
les
std
cmp
dec
xchg
cmp
pop
or
mov
stos
sbb
dec
leave
je
sub
insl
push
jmp
mov
pop
lret
rcrl
sbb
push
outsl
outsb
fcmovu
cmp
mov
and
jge
es
pop
clc
int3
mov
mov
xchg
mov
mov
repnz
je
pop
dec
jb
add
arpl
jo
cmpl
popf
jae
adc
lods
out
cmp
ret
jnp
jecxz
ret
inc
cmp
mov
push
lret
mov
data16
js
dec
jbe
fmulp
push
fidivl
xor
ds
xor
jecxz
jnp
fisttpl
mov
dec
inc
fcmovnbe
mov
scas
test
loopne
pop
test
mov
mov
add
nop
cmc
out
aaa
mov
adc
andl
pop
jb
jae
jb
and
jp
rorl
adc
enter
sahf
push
push
inc
mov
fsts
jne
mov
jbe
add
xor
loop
lret
jb
mov
data16
mov
es
test
addr16
xchg
add
mov
jno
fdivrs
icebp
jmp
mov
xor
mov
jb
xorb
call
pop
or
add
inc
int
mov
mov
inc
adc
test
jns
xor
cmp
push
cwtl
pushf
in
fstpt
sahf
outsb
inc
lret
sbb
in
lods
ret
movsl
add
cs
adc
adc
int3
gs
outsb
fistl
cld
mov
jb
jp
stc
mov
add
pusha
xor
ret
lret
incb
xor
inc
fbstp
std
mov
sahf
or
movsb
and
push
out
lods
push
pause
jae
movsl
jmp
sub
test
adc
ficompl
scas
popf
dec
adc
sbb
nop
leave
aad
stc
sub
imul
adc
andb
dec
in
jns
cmp
mov
sbb
cmp
sbb
lcall
adc
fbld
aas
into
subl
xlat
ret
and
jbe
dec
mov
loope
comiss
sbb
adc
dec
push
andb
and
jg
stos
push
js
mov
pop
lret
ljmp
or
pop
mov
loop
loop
xchg
pop
fisubrl
cmpl
sbb
loope
in
cmp
xchg
movsb
ret
ljmp
sub
das
dec
outsl
and
hlt
mov
and
or
cmpsb
xor
and
sbb
dec
stos
sub
nop
mov
ret
mov
mov
or
push
rol
scas
mov
test
inc
push
jno
arpl
fnstenv
xor
negb
pushf
cltd
cmp
insb
mov
jae
mov
xchg
cmp
fimull
adc
mov
xor
or
cld
lret
aas
outsb
gs
pop
insb
loop
loopne
or
mov
sub
jge
add
or
test
int
cli
xor
mov
jns
sub
arpl
shlb
into
addr16
pop
lea
notl
imul
inc
or
dec
xchg
orl
mov
movsl
test
scas
ss
or
rolb
andb
jmp
pop
imul
mov
int
dec
outsl
push
andl
mov
dec
jno
out
mov
cmp
enter
popl
xor
gs
int3
adc
ds
sbb
push
mov
xchg
test
and
jnp
shlb
and
aam
adc
inc
dec
mov
jb
push
jecxz
in
outsb
out
xchg
ret
push
xor
dec
dec
xchg
push
jp
jae
jmp
into
mov
repnz
xchg
sti
adc
rorl
and
les
lcall
rclb
fidivs
sub
and
inc
out
adc
rcll
insb
push
outsl
add
out
adc
mov
gs
xor
test
xchg
adc
adc
fwait
xlat
mov
addr16
imul
gs
add
jne
pop
into
ljmp
sbb
outsb
out
pop
jbe
and
mov
mov
stos
mov
arpl
sahf
push
fs
ja
les
leave
in
clc
jno
arpl
lret
scas
pop
mov
inc
icebp
cmp
mov
sub
mov
adc
push
xor
xchg
push
jb
ficompl
jmp
push
jns
mov
mov
cmp
loope
rcll
and
int3
lds
jbe
enter
sbb
lods
mov
jno
inc
repnz
packssdw
add
push
shrl
fstpt
xchg
movsl
aam
leave
pop
and
inc
das
mov
lret
cmpsb
rclb
sub
enter
pop
lret
jae
sbb
repz
rcr
imul
in
mov
insl
mov
push
push
in
aas
adc
es
outsb
add
iret
mov
sbb
inc
shrb
pusha
outsl
pushf
ficompl
add
jnp
aaa
and
or
cmp
ds
jno
pop
mov
sbb
sub
scas
loop
push
pop
out
xor
jge
jo
dec
insl
imul
dec
fnstcw
js
lea
jae
cmpb
push
cmp
lock
jnp
out
jo
fnstsw
lock
repnz
xchg
aas
arpl
sbb
cmp
repz
out
mov
cmp
repnz
pop
imul
out
cwtl
mov
pop
arpl
repz
adc
nop
and
jmp
xchg
push
iret
test
sbb
jnp
or
mov
mov
push
adc
xrelease
loopne
in
arpl
sub
add
adc
push
dec
and
fimuls
insl
cmc
jecxz
and
insl
dec
imul
loopne
orb
push
out
sti
xor
ja
sbb
ret
push
inc
fcoms
inc
loope
data16
cmp
push
test
fcoml
or
xor
aas
xchg
inc
mov
cmpsl
ret
adc
pop
nop
xor
in
imul
cli
mov
call
mov
jno
mov
cltd
js
inc
ds
fcmove
xchg
repnz
mov
es
sarb
jno
fildl
ss
insb
icebp
int
jp
aam
mov
je
add
add
or
test
jnp
ds
or
psubw
mov
or
out
jno
fisttpl
les
jb
sub
sub
jecxz
arpl
mov
repnz
lock
pop
push
push
flds
pop
into
pop
mov
lcall
iret
or
mov
jb
stos
inc
fistpl
icebp
frstor
sub
mov
pop
ss
insb
jno
mov
fdivp
std
pusha
mov
ret
mov
mov
push
and
mov
lret
mov
scas
loope
sub
sub
push
scas
sbb
shll
ljmp
ret
lock
rolb
xchg
loopne
rorb
stc
inc
pop
inc
dec
icebp
lds
lods
fldl
xchg
mov
push
shll
imul
aas
jl
test
mov
pop
sbb
fcmove
les
ret
loopne
lds
xorb
mov
lret
mov
jne
clc
xor
xor
outsb
movsl
sti
aas
mov
push
sub
mov
jnp
and
or
in
add
je
and
dec
mov
dec
lea
shlb
add
fsubrl
mov
cmp
negb
jne
xor
jne
mov
xchg
dec
push
mov
orb
jmp
xchg
adc
shrb
lcall
shlb
hlt
jg
adc
push
push
shlb
adc
sti
cmp
sbb
add
pop
repz
mov
ret
repz
outsl
xorl
and
mov
ret
pop
scas
inc
int3
push
cmp
mov
push
inc
add
pop
xchg
cmp
dec
sbb
cmpsb
or
in
rcll
bound
std
adc
scas
mov
dec
je
xchg
mov
stos
push
mov
cwtl
in
ret
inc
xlat
popa
xchg
stc
xor
add
mov
jae
lea
pop
and
rol
sub
xor
cmpsb
mov
inc
loope
dec
mov
jp
jns
cltd
or
pop
xchg
mov
les
loop
inc
inc
jl
lret
xchg
or
fs
and
xlat
outsl
cmp
mov
add
loop
mov
sub
mov
dec
sub
dec
xor
lods
mov
sti
push
push
cmp
add
outsb
cmp
inc
mov
inc
gs
sub
and
lcall
inc
test
inc
stos
xchg
mov
pop
pop
mov
out
inc
shlb
insb
xor
push
mov
xor
popa
int3
mov
jb
ss
mov
mov
xor
xor
outsb
pop
ret
xlat
xor
syscall
arpl
enter
lock
mov
lret
add
cmp
mov
xor
daa
jns
pop
pop
das
or
in
mov
ret
popa
fisubs
lock
adc
jne
repz
push
jge
adc
xor
pushf
stc
sub
push
adc
out
inc
js
shrl
xchg
mov
and
cld
leave
faddp
int3
lods
jb
jecxz
mov
mov
pop
mov
adc
sub
mov
sub
xchg
dec
imul
mov
in
mov
fidivrl
xor
push
stos
enterw
aad
popa
imul
push
jns
cmc
pop
push
cmp
mov
addb
enter
push
sub
and
or
xchg
mov
sbb
pop
xor
jo
and
mov
push
cltd
adc
mov
xchg
xorb
repz
ret
lea
js
or
jl
popa
test
arpl
and
leave
outsl
jmp
fldl
insb
push
jecxz
push
dec
int
rorb
add
js
or
ret
sbb
mov
dec
sub
xor
mov
xchg
add
dec
mov
aaa
jns
int3
shlb
loop
mov
or
pusha
pop
adc
add
inc
gs
lret
and
mov
ds
inc
pop
ja
xor
pop
outsb
lods
mov
out
push
fwait
inc
decl
loop
cli
cmp
sbb
out
lret
adc
push
add
push
dec
sahf
scas
mul
std
js
insb
pop
adc
mov
loope
mov
rcl
subb
leave
cmove
and
lock
scas
and
fcompl
inc
mov
repnz
push
ret
and
into
mov
adc
je
pop
je
pop
add
xor
pop
xchg
enter
xchg
mov
add
sahf
je
or
add
push
ret
mov
in
fs
popa
dec
pusha
xchg
fld
cmp
aad
cmc
inc
int3
mov
test
inc
popl
mov
aad
ret
cmp
push
cmp
dec
daa
into
stc
xor
dec
push
mov
or
xchg
push
lret
xor
lret
inc
sub
cli
shll
xor
xor
lret
mov
cmp
inc
lock
leave
iret
push
and
mov
push
inc
dec
popf
adc
dec
ret
outsl
scas
idivb
leave
and
mov
or
call
push
pop
xchg
xor
sbb
sbb
jbe
pop
cmpsl
pop
cmp
aas
cmp
inc
add
push
jge
fdivl
mov
add
dec
or
pop
pop
nop
inc
pop
out
mov
xchg
lods
fwait
xchg
ficoms
faddl
in
lds
pop
jb
fldenv
addr16
lock
stc
subl
je
adc
lods
leave
into
push
ljmp
mov
mov
fisubrl
add
xlat
imul
mov
jnp
adc
hlt
cmp
ss
bound
xor
xor
xlat
add
test
shll
push
pop
cld
notb
add
jg
aad
sbb
inc
inc
and
xor
dec
pop
pushf
loopne
xor
sbb
or
scas
or
std
pop
mov
stc
out
ret
dec
sub
loop
fnsave
sahf
sbb
jnp
xchg
aaa
jns
inc
enter
pop
je
orl
sbb
and
jno
mov
lock
jl
sub
mov
dec
outsb
sub
pop
lret
xor
in
xchg
lods
or
test
cmp
int3
pop
jne
out
scas
addb
mov
imul
daa
jmp
repnz
adc
pushf
xor
stos
jg
rcll
cmp
iret
pusha
dec
push
cmp
imul
dec
or
inc
and
push
jne
mov
dec
pop
add
in
ret
xchg
loope
stc
cmp
call
test
adc
sub
lret
inc
stc
dec
cltd
sub
popf
ret
jb
fs
int3
call
shrl
mov
mov
and
add
cmpsl
mulb
jb
movsl
mov
add
imul
mov
je
jle
pop
std
cld
clc
xor
mov
leave
xor
jge
sub
or
lcall
roll
decl
push
clc
sbbl
and
js
in
gs
fs
mov
jmp
dec
jns
lahf
mov
inc
inc
cmpsl
add
roll
stc
push
fdivp
mov
and
icebp
pop
xor
pop
fbld
ss
popl
cmpsb
xchg
and
cmp
xchg
mov
sbb
aaa
das
sub
orb
out
pop
scas
mov
loopne
pop
nop
cmp
inc
push
lock
popf
push
jno
mov
and
aam
daa
shrb
jb
jae
adc
xor
sahf
mov
mov
mov
adc
pop
mov
iret
sub
sbb
xor
popf
inc
fadds
iret
aaa
lods
sarl
xchg
inc
clc
push
and
cmp
in
mov
in
push
pop
jge
outsb
and
adc
dec
dec
iret
loopne
sbb
repnz
push
negb
stos
dec
mov
fsubl
ficoms
and
mov
adc
and
cmpsl
loope
inc
xchg
leave
ljmp
aaa
lds
cli
stos
sub
mov
jecxz
xor
into
repz
cmpl
cwtl
pop
xlat
xchg
sahf
iret
or
mov
roll
in
mov
pusha
clc
fwait
mov
mov
js
rclb
or
jle
lods
mov
out
daa
mov
xor
int
mov
mov
mov
inc
std
xor
xchg
xlat
push
lods
cmp
mov
js
int
adc
inc
jbe
mov
jle
push
or
lret
nop
addr16
in
mov
stc
movsb
shll
push
ljmp
push
aas
jp
hlt
inc
fisttpll
push
push
mov
adcb
test
adc
pop
jno
aad
jp
mov
call
mov
jns
jae
jb
insl
sbb
jne
jg
add
mov
aaa
dec
and
add
shrb
insl
add
jnp
daa
add
stc
jmp
clc
je
mov
lock
je
fucomi
movsb
outsb
jns
mov
je
test
xchg
fmuls
cwtl
pop
sbb
rorb
insl
rcrl
outsl
imul
ret
in
scas
add
mov
xchg
fisttpll
int
xor
imul
lds
rorl
cs
cmpsb
push
and
mov
push
jg
jb
or
popf
ret
lods
push
sub
lahf
sub
mov
cmpsb
sub
inc
cli
dec
pop
mov
lahf
imul
out
rcrl
push
movsb
ja
cltd
jnp
push
xor
rcll
mov
mov
je
push
mov
pop
fists
jmp
add
ljmp
xchg
icebp
and
inc
mov
mov
inc
sarl
popf
ret
popa
sbb
jno
jecxz
push
jmp
leave
push
mov
pop
add
imul
xchg
bound
jmp
sbb
jo
push
adc
shr
xchg
add
dec
fiaddl
mov
loopne
push
ja
xlat
push
or
in
mov
xor
adc
cmc
scas
cmp
pop
inc
push
rclb
mov
adc
and
sub
xchg
call
mov
arpl
mov
mov
cld
leave
cmpsl
sbb
adc
cmp
cmpsb
cmpsl
loopne
mov
neg
dec
fwait
sbb
adc
or
popf
dec
xchg
mov
push
push
imul
cmp
gs
cmp
insl
sbb
inc
adc
out
insl
hlt
mov
stos
xor
xchg
sub
shll
out
ret
aam
icebp
testl
test
sbb
mov
enter
mov
sbb
mov
icebp
dec
ret
cmp
xchg
sbb
mov
dec
jecxz
data16
pop
ja
nop
xchg
bound
aam
punpckhbw
test
in
fst
sbb
cmp
inc
ja
mov
pop
lcall
hlt
xchg
cs
push
sub
jns
jp
sbb
mov
mov
push
push
arpl
jmp
xor
ja
cmp
mov
mov
scas
inc
inc
out
movsb
cs
push
push
fs
nop
loopne
sub
addr16
mov
xor
jmp
fst
inc
xchg
lahf
dec
or
pop
push
ds
sahf
popa
mulb
popf
insb
jb
sbb
daa
rorl
int
jmp
pop
fcomps
js
cmp
cli
dec
mov
fwait
sbb
or
int
lahf
divl
mov
fs
adc
pushf
fdivs
adcb
inc
pop
test
daa
cmpl
xchg
into
outsb
sub
les
xchg
add
add
daa
sub
daa
xor
sub
or
xor
popf
cmp
or
pop
mov
add
or
jge
test
sarl
inc
add
test
sub
and
div
mov
outsl
xchg
shrl
cltd
mov
inc
cmpsl
mull
test
mov
test
inc
jmp
scas
pop
rcll
es
inc
jge
add
cs
sub
icebp
and
xchg
and
push
sbb
iret
pop
in
jne,pn
sbb
les
shlb
add
in
cld
out
sub
loope
pop
ja
enter
mov
sub
pop
jnp
pusha
mov
xor
fsubr
int
xchg
adc
repnz
dec
mov
popa
sbbl
sub
iret
jne
pop
jle
ret
xlat
cwtl
clc
adc
mov
add
dec
jl
sbb
into
sti
clc
mov
into
movsb
movsl
and
xor
das
stos
cwtl
into
scas
outsl
mov
mov
stc
mov
lds
push
or
loop
jmp
push
dec
jo
scas
mov
add
adc
push
adc
cltd
mov
fisubs
rolb
jp
iret
aas
out
push
inc
lret
add
arpl
lods
popa
es
or
shlb
mov
dec
clc
cltd
xlat
dec
cli
inc
bound
sbb
shlb
mov
test
icebp
nop
lcall
enter
mov
mov
mov
in
jecxz
sbb
iret
mov
lods
fsubrs
movsb
xor
xor
jle
rclb
mov
xchg
cld
dec
jle
push
and
sub
in
cmp
fcmovbe
xchg
inc
fstpl
jmp
jmp
sbb
or
dec
add
dec
or
aas
sahf
push
xor
mov
call
fisubs
repz
lds
rcr
xchg
les
insl
ss
arpl
dec
or
xchg
sar
jp
push
cmp
sbb
shlb
sbb
ud0
sub
or
cmp
mov
cmpsb
adc
or
loop
jl
bound
push
or
outsl
hlt
popf
inc
sbb
mov
xor
pop
jge
adc
iret
lea
loop
jl
dec
mov
lret
mov
aam
outsl
jl
cmp
aaa
adc
adc
xchg
in
mov
iret
mov
nop
push
cmp
sub
mov
cld
add
loope
stos
add
bnd
xchg
enter
mov
jge
pop
cmpsl
cmp
out
push
out
movsb
into
aad
sbb
push
xchg
sub
enter
xor
push
push
adc
punpcklwd
adc
sbb
repnz
xor
mov
ret
fiaddl
imul
and
dec
mov
and
or
xchg
rol
out
sub
mov
xchg
mov
pop
or
lret
hlt
push
jbe
call
mov
sub
insb
pop
jno
fld
jle
fiaddl
repz
inc
dec
jle
cmp
mov
xchg
sub
dec
mov
cli
sbb
imul
daa
and
dec
loop
mov
mov
fimuls
mov
out
sub
adc
jle
dec
out
bound
das
outsl
add
dec
mov
mov
stc
test
aam
sti
scas
lcall
mov
shlb
cli
xchg
ret
std
fadds
aad
iret
dec
hlt
inc
clc
xor
fsts
push
jle
clc
ror
jl
pop
fs
out
ret
and
pop
das
xchg
pop
inc
cmp
jno
out
addr16
add
mov
add
cli
cmp
hlt
sbbl
mov
lock
and
scas
test
and
fs
xor
in
jno
xchg
pop
hlt
and
lods
nop
sub
fcoms
or
filds
sahf
jne
shrb
icebp
scas
cmpsb
inc
loope
ja
add
sub
lea
inc
popf
inc
mov
hlt
xor
mov
lahf
inc
inc
dec
pushf
cmpl
loop
xchg
adc
ljmp
lret
xlat
ja
jg
into
fs
scas
aaa
ret
movsl
sbb
and
fisttpl
or
cmpsl
inc
add
cmp
shlb
cmpsl
sbb
sub
jle
or
jnp
lahf
xchg
inc
xor
add
lods
movb
nop
mov
ret
cld
daa
lock
enter
adc
adc
or
jo
push
bound
jle,pn
jns
insl
lds
lret
sbbl
and
push
jecxz
jne
inc
dec
repnz
pop
iret
test
jno
inc
xchg
roll
arpl
push
inc
cmp
push
mov
iret
jg
jecxz
in
mulb
xor
push
ljmp
leave
pop
loop
inc
cld
sbb
jmp
mov
pusha
pop
mov
pop
cltd
jb
rcll
or
stos
cmpb
outsl
cltd
mov
or
push
sub
add
fists
sbb
push
mov
or
into
test
sub
xor
mov
sbb
sarl
dec
test
pop
sub
jl
std
nop
das
ljmp
xlat
lods
subl
xchg
push
or
scas
imul
rcrb
dec
stc
inc
mov
leave
push
int
push
aaa
jno
xchg
scas
sub
ja
testl
xor
pop
daa
outsl
jmp
stos
inc
pop
and
pop
mov
lods
inc
outsb
dec
cltd
scas
add
jb
cs
fcmovbe
add
xor
fistpll
fildll
arpl
pop
call
xchg
jle
fyl2xp1
outsb
mov
sbb
enter
mov
sti
adc
lahf
xchg
mov
sub
or
sbb
lods
lahf
popf
jae
pop
pushf
push
or
cmp
pop
aad
add
popa
jmp
xlat
lret
cmc
negb
sbb
lea
dec
mov
cmp
shll
addl
into
pop
das
das
mov
loopne
scas
jns
stc
lahf
insl
mov
add
pop
inc
notb
push
cmc
out
bnd
cli
clc
clc
mov
and
fcomi
in
xchg
inc
mov
pop
sti
in
jmp
jno
out
sub
add
push
xchg
push
push
jmp
pop
pop
xchg
lea
ljmp
lds
leave
push
std
dec
add
push
inc
outsl
inc
sub
mov
mov
movsl
enter
in
fnstenv
mov
not
jo
xchg
sbb
sbb
test
jb
and
dec
mov
or
xchg
xchg
leave
imul
andnpd
pusha
fs
stc
in
stos
push
fmul
jl
loope
repz
mov
dec
mov
insl
scas
sbb
jmp
sub
test
cmp
push
and
sub
int
lods
dec
arpl
andb
dec
push
call
popa
cmp
sub
pop
pop
lods
mov
insl
pop
fs
ficompl
sub
ret
dec
cs
mov
std
and
mov
mov
lcall
adc
dec
sub
pop
xchg
ja
cmp
out
sbbb
jno,pn
add
fsubs
stos
sub
incb
push
mov
in
adc
inc
mov
push
mov
mov
nop
pushf
lods
push
dec
pusha
mov
sub
push
lcall
mov
dec
push
push
mov
push
stos
out
sbb
bnd
or
jb
out
adc
fimuls
movsl
out
jne
daa
push
pushf
iret
and
in
jo
pop
jb
adc
leave
add
mov
push
out
stos
pusha
movsb
xchg
or
ds
sbb
loope
repnz
lods
outsl
xor
jo
cmpsl
mull
mov
loop
mov
xchg
adc
int3
fnstenv
mov
lea
sahf
inc
mov
sahf
je
cmp
imul
push
and
dec
cmpsl
lea
pop
sub
inc
pop
xchg
xor
pop
aas
cmp
pop
sarb
lret
out
sub
fidivl
mov
mov
ja
movsb
lods
inc
lret
fdivl
mov
in
stos
push
sbb
dec
repnz
ss
fisubs
cmp
and
adc
jmp
mov
jecxz
gs
out
jmp
adc
push
adc
mov
aaa
xchg
into
jle
lods
data16
enter
sbb
add
sub
dec
and
pop
jg
sarl
repnz
sbb
pop
mov
xchg
sarb
aaa
test
outsb
jnp
popf
adc
or
add
pop
sub
sbb
jecxz
pushf
adc
dec
and
stos
add
push
mov
push
inc
js
pop
xor
andb
cmpsl
push
mov
sti
mov
sbb
cli
repz
push
xchg
mov
data16
add
in
icebp
add
ja
and
fistpll
inc
rcl
cmpsb
jno
mov
add
in
mov
add
pop
mov
sub
insb
push
push
xchg
jle
mov
push
and
sti
cmpsb
ja
cli
inc
jp
movsb
dec
fcoml
enter
pop
sub
jg
inc
insb
mov
push
xchg
sub
dec
or
popl
iret
mov
ds
rcl
sub
dec
arpl
pop
xor
jbe
sbbb
xlat
jl
push
cmpsb
dec
rclb
call
fisubrl
xor
pusha
jge
add
iret
dec
popl
ret
ret
xchg
jne
jge
mov
int
jnp
add
sub
loop
mov
jle
fnstenv
mov
or
mov
shll
lret
push
jge
inc
jnp
shrl
clc
dec
jg
bound
xor
adc
sbb
or
data16
fcoml
out
adc
roll
testl
addr16
xor
xchg
inc
jns
fwait
pop
mov
movsb
psubd
jmp
inc
sub
iret
sbb
ljmp
js
or
rolb
leave
push
jge
test
enter
mov
mov
and
sub
fsubrl
sbb
or
clc
div
std
adc
mov
mov
ja
es
pop
xchg
ja
sbb
scas
add
icebp
mov
dec
inc
decl
inc
mov
leave
xchg
lods
add
sbb
jae
inc
xchg
adc
sub
fwait
cmovg
xchg
inc
pop
xor
sub
or
aaa
lcall
mov
mov
jbe
sub
cld
sbb
add
outsl
adc
test
scas
mov
xchg
jmp
hlt
push
cwtl
enter
imul
mov
xor
pusha
cmp
and
inc
push
sti
mov
xchg
mov
enter
in
mov
cs
sti
cmp
pop
add
int
adc
mov
pusha
jno
mov
xchg
cmp
call
sub
rorb
cmp
jmp
mov
das
cltd
jo
and
popa
test
nop
jecxz
jle
lods
mov
mov
lods
or
aam
inc
xorb
mov
lods
inc
add
xchg
out
add
push
mov
fdivrs
and
stos
in
cli
adc
fadd
fst
or
in
and
in
aam
lret
iret
sbb
mov
aas
sbb
arpl
movsb
mov
mov
or
pop
add
pop
lods
cmp
xchg
and
adc
or
mov
mov
mov
or
roll
inc
in
jge
pop
cwtl
stc
sub
mov
cmp
mov
mov
jmp
and
lds
push
lahf
jg
into
stos
cwtl
shrb
dec
cwtl
pop
or
ds
call
xor
push
pop
jb
loop
lds
andb
aam
xor
ret
sub
mov
fmuls
pop
inc
cmp
dec
push
add
movsl
int
stos
lds
js
or
enter
js
adc
add
out
jns
imul
and
in
xchg
fldcw
jle
xor
sub
push
insb
inc
cmp
jns
in
pushf
push
and
rcr
shl
or
shrl
or
addb
push
cld
jns
push
lcall
andb
aaa
sub
aas
loop
inc
cmp
inc
aaa
ljmp
out
repz
push
out
movsl
pop
xchg
sbb
imul
pushf
adc
lahf
data16
test
outsb
icebp
sub
push
and
iret
push
xchg
sub
mov
sbb
clc
xchg
js
out
push
inc
add
test
jge
push
nop
out
aad
ljmp
in
sbb
pushf
mov
arpl
pop
xchg
popf
xlat
pop
stos
pop
loop
cmp
popf
mov
lods
xor
outsl
std
pop
push
nop
lds
xor
mov
insb
mov
orb
int3
sub
aas
ljmp
push
ret
add
aam
neg
jg
sub
xchg
gs
rcll
or
and
dec
xor
out
and
add
test
dec
test
adc
sub
pop
push
adc
xor
call
sbb
xchg
push
rorl
das
sub
mov
add
mov
inc
loop
ds
xor
ret
mov
sar
fmul
ja
imul
cmp
dec
fcoms
insb
loopne
rcrb
jecxz
iret
or
mov
lret
aas
pop
jg
into
fldlg2
loopne
test
add
xor
mov
mov
hlt
popf
roll
dec
and
shr
popl
cmpsb
sub
fimull
stos
xchg
loope
sbb
outsl
sbb
lds
loop
addl
mov
xchg
mov
dec
mov
incl
cmc
mov
sbb
cmpsl
in
mov
aad
rolb
xor
pop
mov
jle
jne
lock
cmp
mov
jmp
insl
mov
or
dec
pop
and
call
jmp
inc
mov
pop
jmp
xchg
sbb
pop
dec
nop
adc
scas
fsubs
xchg
mov
fidivrl
repz
data16
es
aam
and
aas
pop
cmp
or
dec
mov
inc
mov
and
out
out
xchg
movsb
movsl
sub
mov
xchg
jecxz
xor
cmp
int3
lea
jl
clc
mov
scas
icebp
push
xor
xchg
gs
mov
jl
sti
pop
dec
fsubs
ficoml
in
sti
std
pop
testl
inc
lret
mov
cmpsl
xchg
hlt
sbb
push
push
xorl
insl
call
cld
adcb
mov
dec
mov
jmp
lock
add
shlb
shr
mov
sbb
pushl
mov
aam
scas
gs
cld
pop
pusha
push
jl
cwtl
xor
mov
mov
xchg
lret
ljmp
mov
mov
adc
mov
and
mov
dec
cmp
in
lods
jmp
iret
out
inc
jp
fwait
mov
stc
dec
out
jmp
andl
in
mov
and
lock
cmp
add
dec
fucomp
and
jg
push
addb
jae
push
pop
jp
pop
mov
jle
dec
add
iret
mov
ljmp
fiaddl
aas
inc
int
lahf
cltd
push
cmp
push
jge
adcl
add
ljmp
out
add
shl
and
jno
xor
hlt
sbb
lods
mov
gs
xchg
dec
jno
popa
xchg
icebp
ja
push
mov
xlat
mov
inc
shrb
out
adc
je
ja
fwait
xchg
xchg
push
sbb
ror
ljmp
arpl
dec
xchg
rorl
aam
das
mov
or
mov
lahf
popa
and
xchg
sub
push
xchg
test
dec
shl
jge
addr16
jecxz
loopne
lret
pushf
movsl
clc
mov
jg
mov
out
lds
cmc
jmp
aam
repz
or
pop
addl
mov
jo
movsl
loope
push
in
cltd
pop
cs
out
lea
cs
das
xchg
xchg
mov
icebp
jl
mov
mov
sarl
jnp
data16
sti
mov
outsb
imul
lret
in
dec
lds
or
adc
ljmp
and
xchg
cli
jl
mov
push
mov
ja
jb
pop
cmp
repnz
xor
dec
adc
sbb
push
pop
mov
shl
xlat
jb
sti
fdivrs
sahf
daa
cmpsl
lret
stos
or
loop
adc
repnz
jnp
shl
imul
in
sbb
cmp
sub
scas
and
xor
aam
xor
arpl
mov
test
dec
jecxz
out
ja
stos
fpatan
pop
outsl
iret
push
mov
sub
out
inc
scas
inc
loop
xchg
push
ret
sbb
jb
pop
leave
xor
add
aad
push
jg
outsl
push
mov
mov
inc
leave
xor
jno
filds
pop
scas
mov
mov
inc
dec
rol
jle
out
lock
push
xor
aas
aad
mov
push
clc
cmpb
hlt
rol
lods
cmc
mov
mov
std
shrl
add
pop
push
xchg
shlb
cmpsl
mov
and
inc
js
xor
mov
lcall
or
xchg
xchg
adc
das
xlat
lea
push
and
outsb
inc
xor
dec
xor
addr16
jb
mov
jno
repnz
jle
inc
sbb
jne
add
jae
pop
or
std
sarl
ret
mov
mov
aas
repnz
pop
adc
sbb
jecxz
inc
jge
cmpsl
clc
dec
pop
jnp
icebp
jmp
je
jno
sbb
xor
or
ljmp
sbb
mov
push
ds
and
sub
push
sbb
sbb
xchg
jnp
sbb
ror
push
dec
int3
jmp
pop
mov
mov
push
and
lret
and
imul
inc
and
push
fstp
inc
je
dec
lea
mov
in
aad
call
dec
dec
mov
xor
es
scas
filds
sub
cmc
sbb
insb
test
cld
xor
pushf
out
out
into
push
popa
cmpsb
stos
cmp
push
imul
mov
jl
adc
adcb
mov
jmp
sar
xor
clc
inc
sub
pop
pop
pop
inc
adc
jmp
mov
jge
loop
es
jge
adc
xchg
xor
out
ss
cltd
inc
inc
add
adc
sub
aaa
lret
dec
push
jae
loopne
mov
cld
stos
movsl
repnz
xor
adc
and
sbb
cld
pop
sbb
inc
or
cmc
lods
pop
scas
mov
add
test
test
and
es
mov
or
jne
lret
clc
lock
into
call
lea
mov
mov
sub
xchg
stos
mov
mov
adc
mov
dec
sbb
pushl
adc
add
inc
adc
lods
jecxz
popf
push
outsb
inc
notl
addl
sbb
loope
les
mov
jl
mov
xchg
dec
imul
pop
push
repz
sahf
int
ljmp
jecxz
cmovle
inc
lahf
in
jmp
and
cltd
jne
jge
xor
hlt
clc
push
shrb
mov
pop
sbb
lods
repz
repnz
sti
xchg
scas
rcll
sbb
adc
cld
inc
jmp
bound
pop
sub
out
mov
adc
mov
cwtl
sub
mov
repz
adc
sbb
mov
iret
int
aad
lahf
imul
adc
inc
push
push
insb
cwtl
mov
aaa
cmp
jae
ss
mov
pop
ljmp
leave
inc
dec
cmp
cmp
stc
adc
cmc
push
inc
xchg
push
cld
and
insb
mov
loop
sub
xor
add
jecxz
inc
push
not
out
lods
xor
sbb
jno
and
sbb
push
jb
push
xlat
jno
insl
xor
stos
mov
sbb
hlt
imul
or
sub
sti
repnz
mov
leave
push
cmpsb
aaa
dec
and
shrb
pop
xchg
rcrb
mul
ficoms
sarb
out
dec
push
mov
cmpsb
aam
dec
mov
adc
xchg
imul
jo
jnp
push
cmp
das
std
out
cmp
cld
add
add
add
testb
push
sub
xchg
lock
scas
andl
rcrl
sahf
or
ds
dec
xor
jp
clc
loop
push
mov
ficompl
call
mov
repnz
in
dec
cmp
sbb
sbb
or
pop
mov
jnp
sbb
pop
subb
mov
cmp
imull
and
enter
push
inc
es
pop
addb
fcompl
xor
movsb
test
xor
les
and
sahf
jbe
mov
xchg
xchg
lock
enterw
je
ret
jb
dec
sbb
xor
mov
faddl
sub
fildl
popf
adc
xchg
and
clc
es
inc
iret
cs
mov
cmpsb
cmp
adc
xlat
xor
and
leave
mov
bound
mov
pusha
push
add
adc
sbb
mov
xchg
dec
testl
dec
and
jno
xchg
cmp
and
sbb
jle
mov
dec
xor
push
dec
dec
push
pop
aad
or
xor
fistps
pop
stc
dec
ljmp
add
js
or
cmp
cwtl
push
and
ja
int3
mov
add
lods
and
js
mov
cmc
gs
add
mov
call
and
loopne
mov
xchg
inc
roll
add
stos
mov
xor
mov
gs
stos
out
and
das
mov
or
xchg
xchg
xchg
cmpsl
pop
mov
shl
xchg
sbb
stos
je
shlb
repz
and
loop
movsb
ffree
loopne
icebp
pop
rep
std
stos
mov
jg
sbb
or
dec
xor
push
mov
repz
jecxz
push
mov
btc
sbb
addb
int3
mov
cmp
dec
pop
push
or
jo
cld
loopne
ret
ja
lcall
xchg
jecxz
lock
xor
jecxz
and
int3
pop
imul
mov
cltd
icebp
fsubl
call
lds
mov
mov
sbb
ret
insl
leave
dec
xchg
repnz
ss
cld
in
arpl
inc
adc
sbb
mov
and
and
lock
xchg
fcoms
mov
dec
xchg
or
jg,pn
mov
cmc
push
cs
sub
and
sub
ret
pop
adc
int
xor
and
push
std
mov
inc
cld
flds
out
arpl
into
testl
xchg
jmp
dec
jb
jb
adc
loope
mov
cld
in
ret
jmp
adc
xchg
iret
in
push
popf
mov
scas
sub
outsb
subl
aam
fstpl
jle
imul
inc
ret
andb
out
jmp
mov
adcl
mov
arpl
mov
mov
sbb
mov
fcompl
fsubr
pop
jns,pt
cltd
push
mov
cmp
fstpl
ficoml
enter
cmp
mov
xlat
cli
add
mov
mov
rcr
xorb
xor
gs
loop
cltd
and
mov
xchg
call
mov
push
mov
push
xchg
add
in
jl
push
ret
add
enter
mov
and
push
inc
je
out
dec
mov
xor
enter
jbe
popa
subl
lret
movsl
jbe
push
push
aad
lea
sbb
addr16
mov
xchg
fcoml
lret
int
add
adc
lods
insl
cmp
push
sbb
xchg
sub
pop
outsl
ds
jl
jae
dec
into
xor
int3
jae
lret
pop
push
into
clc
ja
xchg
in
sub
dec
ljmp
mov
mov
and
and
rolb
ficomps
dec
sub
sub
xor
dec
lods
daa
std
das
mov
mov
pop
dec
adc
movsb
arpl
push
mov
xor
jnp
and
push
sub
jbe
outsb
daa
push
mov
push
std
add
add
jne
jle
inc
sbb
cmp
fiaddl
nop
xor
inc
xchg
push
cmp
jl
mov
lret
xchg
jbe
loopne
inc
xor
sub
das
inc
mov
clc
sti
mov
stc
dec
adc
repnz
mov
pop
mov
or
mov
fdivl
xchg
sub
pop
mov
add
gs
test
add
sbb
push
jle
cltd
lret
cmp
mov
sbb
push
mov
and
arpl
adc
lds
push
fcomi
inc
sti
mov
mov
addl
mov
or
mov
xor
and
arpl
push
sub
hlt
mov
mul
or
mov
hlt
mov
jb
xor
lret
into
into
scas
popf
test
in
add
lret
mov
dec
std
dec
cmp
jae
jo
jne
repnz
ficomps
or
sub
push
lahf
sub
ss
or
lret
pop
inc
inc
arpl
sbb
sbb
adc
xchg
cmpsb
ljmp
push
push
mov
jmp
add
ficoms
movsb
jmp
mov
push
ja
je
inc
movsb
fidivrs
mov
and
mov
sub
push
cmp
cltd
fnstenv
scas
ss
or
loope
pop
mov
pop
dec
mov
shlb
fbld
ja
imul
xchg
in
sbb
sahf
add
aam
scas
xchg
mov
sbb
push
lea
inc
add
rcll
add
adc
adc
in
gs
fcmovnu
loop
rclb
mov
or
jecxz
cmp
sub
push
adc
jle
decb
pop
jecxz
xchg
call
flds
xlat
mov
fdivl
stc
iret
rorb
imul
int3
loopne
xor
in
out
scas
outsb
sbb
lods
pop
sbb
call
cmpsl
and
mov
sbb
ret
lds
js
bound
mov
xor
push
daa
mov
icebp
movsb
negl
and
fcmovnbe
sahf
add
cli
leave
iret
adc
sub
arpl
cmpsl
xchg
jp
lds
sbb
shll
popa
imul
jno
sub
xchg
add
out
push
sbb
or
nop
fisttps
jns
fcmove
or
cmpsl
ficomps
xchg
in
jns
outsl
pop
ficompl
adc
lret
push
in
sub
cmp
mov
mov
dec
jp
mov
leave
cmp
test
out
movsl
pop
pop
fcoml
push
stos
jp
sti
fmull
addr16
jmp
jge,pt
push
shlb
sub
and
mov
pop
and
testl
jl
jo
frstpm(287
and
ss
inc
lahf
clc
fisttpl
inc
mov
addr16
or
lret
mov
repz
test
andl
mov
inc
jbe
ret
xchg
push
es
mov
mov
movsl
fs
nop
notb
adc
pop
bound
push
or
push
add
mov
sahf
ja
scas
arpl
and
pop
sub
mov
pop
fistps
adc
jmp
xchg
push
jnp
cli
mov
cltd
mov
jno
pop
inc
out
add
dec
add
xchg
lret
sbb
mov
ret
out
pop
push
add
mov
out
in
dec
sbb
das
and
push
cli
loopne
test
cmpsb
bound
mov
mov
lods
int
jno
xchg
and
cmp
cmpb
inc
pop
popa
pusha
xor
lds
and
divl
nop
sub
mov
dec
mov
scas
mov
push
adc
jecxz
aaa
jecxz
in
push
cmpsl
stc
mov
nop
jns
jp
xchg
mov
test
loop
inc
xor
jae
sarb
xchg
fs
add
imul
sti
sarl
stos
add
sti
xchg
insb
jp
push
jmp
int3
mov
fwait
push
mov
adc
dec
mov
sti
dec
inc
push
fucomi
xor
sbb
shrl
int3
aad
mov
cmp
repz
dec
push
or
icebp
or
in
ficoms
pop
sbb
or
add
add
mov
adc
sbb
mov
add
mov
cmc
xchg
out
andl
or
inc
or
mov
inc
lock
add
mov
xchg
mov
jne
in
ljmp
jge
nop
cmp
add
andb
sbb
adc
outsl
fcomip
loop
adc
or
enter
stos
pushf
ficoml
jnp
jmp
repz
inc
into
in
pop
fstps
sbb
into
fsubl
out
daa
xor
mov
sub
pop
sub
icebp
xor
xor
insb
ret
mov
leave
cmp
sub
mov
lods
cld
fiaddl
sti
orl
cli
fwait
push
repnz
jle
push
pop
inc
jae
push
jecxz
and
jns
push
jp
cmp
sbb
adc
or
pop
add
jae
cmp
out
add
jb
mov
or
push
dec
adc
push
in
xor
aad
dec
test
movl
imul
bound
cmc
dec
rcll
testl
dec
out
cs
icebp
add
aad
mov
adc
sub
jbe
pop
cmp
mov
or
jbe
cmpsb
mov
sbb
in
aaa
pop
dec
ret
rclb
loop
sub
fildll
aaa
pop
mov
dec
insb
cmp
fmuls
pop
push
xlat
repz
pop
imul
rol
xchg
cmp
add
xor
xchg
inc
and
aad
aaa
xchg
cmp
or
icebp
add
loopne
ret
aad
or
jnp
pop
xchg
sub
in
clc
outsb
push
and
movsl
add
icebp
mov
dec
std
sub
rolb
cmp
es
out
push
addl
push
rol
pop
repnz
sti
add
test
inc
sub
mov
dec
aas
cmpsl
loopne
aaa
xor
cwtl
xchg
xlat
addb
imul
mov
sbb
nop
and
push
stos
sub
mov
pusha
xor
in
ret
stos
sub
jnp
add
push
jle
js
mov
push
clc
push
int3
arpl
popf
sbb
pop
loope
ficoml
sbb
mov
dec
mov
inc
call
into
push
movsl
pop
push
and
pop
cli
push
adc
outsl
push
fnsave
pop
and
ret
xor
dec
in
test
stos
cmp
rcll
sahf
out
pop
jmp
add
fsubrs
inc
aaa
out
stos
sti
dec
out
bound
outsl
or
lahf
scas
ret
and
push
hlt
and
iret
idivl
xchg
rcrb
cmpsl
rcrl
push
inc
or
cmp
pop
and
bndstx
mov
jle
cmp
pop
enter
ljmp
sti
dec
jo
jmp
lock
addb
mov
inc
sarb
out
xchg
xchg
sbb
push
and
xor
out
hlt
cmpl
mov
xchg
inc
and
pop
inc
in
xlat
stc
movsl
sbb
enter
mov
scas
push
loope
jg
sti
dec
pop
push
adc
dec
adc
dec
fistpl
call
cmpsl
pop
iret
pop
mov
inc
xchg
and
fcomps
cltd
cmp
sub
ja
dec
and
test
xlat
adc
sahf
xchg
outsl
sub
or
dec
rcrb
movsl
mov
xor
repnz
dec
mov
add
aad
jl
add
push
insb
popa
xor
jno
adc
jg
divl
inc
fs
inc
push
cld
sysexit
pop
cmp
push
rolb
rep
mov
push
gs
repz
leave
adc
aam
call
subb
push
pushf
jae
mov
mov
push
outsl
shrl
repnz
divb
pusha
adcb
push
ja
les
mov
div
mov
stc
lods
js
loop
repnz
jnp
fdivr
les
mov
and
pop
insb
pop
mov
add
sub
inc
push
inc
shl
push
aaa
xchg
add
loopne
xor
rolb
mov
jne
outsb
xor
insb
or
popa
jno
push
or
xchg
shll
sbb
mov
mov
and
jno
test
mov
fsubrl
mov
mov
sub
xchg
jae
mov
nop
and
jnp
mov
pop
xor
jae
aam
shl
in
cmp
mov
xor
test
je
mov
xchg
mov
inc
xor
push
inc
mov
push
fstl
or
push
xchg
dec
push
cmp
dec
xchg
mov
cmpsb
cmpsb
ja
das
ds
int3
xchg
or
clc
aas
sbb
inc
lock
cltd
ss
imul
xor
pushf
sub
push
call
hlt
inc
sar
pop
xor
outsb
out
push
fnstsw
data16
xchg
loop
repz
cmpsl
xor
outsl
xchg
stos
arpl
cmc
movsb
das
mov
sbb
lds
cmp
ret
jb
arpl
shlb
mov
popl
clc
pop
fxch
pop
dec
loop
mov
pop
xchg
fnsave
xor
popf
insb
sub
add
outsl
repz
das
mov
js
shll
and
imul
adc
dec
inc
and
add
dec
dec
ja
adc
pop
jge
add
jbe
rcl
cmp
int
push
insb
mov
into
and
pop
imul
int3
sbbl
xor
aad
pop
xor
push
adc
pop
pop
add
pop
das
pop
mov
imul
xchg
jbe
jg
rcrl
cmc
lea
sub
jne
sbb
sub
add
mov
ja
and
test
mov
mov
and
aam
pop
mov
adc
sbbl
cmp
pushf
or
iret
shl
push
addr16
push
add
pop
test
mov
adc
push
pop
adc
sbb
mov
pop
outsb
pop
mov
pop
movsl
mov
das
and
inc
xor
hlt
ret
lret
push
movsl
push
stc
movsb
pop
sub
jecxz
lds
fcoms
push
and
jmp
mov
sub
push
and
sub
sub
fdivrl
xchg
insl
enter
int
clc
mov
aaa
imul
cmpsb
cmp
je
xchg
in
or
add
xchg
std
jecxz
sub
ret
shll
xor
add
xchg
lahf
mov
std
mov
adc
mov
or
or
pop
inc
stos
push
xor
shlb
cmp
sub
sbbb
lret
mov
pop
adc
and
pop
push
sahf
xlat
mov
jg
lds
add
xchg
std
andl
or
xor
sarb
cmp
xor
cmpsl
mov
push
or
cmp
es
lea
jo
xorl
lock
adc
adc
adc
divb
sbb
mov
add
filds
cwtl
outsl
cmp
inc
push
rorb
aas
sub
loope
int
or
lods
cmp
xchg
inc
mov
stos
push
andl
pusha
dec
mov
inc
in
bnd
not
das
scas
into
sbb
imul
xchg
subl
cmpsl
enter
mov
jnp
aas
aaa
imul
in
outsb
xchg
inc
push
mov
std
lret
cwtl
or
sub
int
sub
test
and
cmpsl
and
clc
push
dec
shrb
mov
xchg
sub
loope
add
scas
mov
loope
hlt
mov
mov
add
add
cmp
mov
into
or
xchg
fcmovbe
jp
and
loop
scas
dec
mov
outsb
fnstenv
pop
out
mov
data16
sub
enter
mov
fwait
or
adc
sbb
push
stc
mov
shrl
outsb
lret
mov
icebp
dec
jns
push
je
jno
jo
mov
or
push
icebp
cmc
mov
pop
mov
inc
xchg
test
mov
xlat
iret
mov
mov
push
dec
push
ret
xchg
mov
in
adc
push
xor
test
pop
inc
inc
xchg
mov
sbb
jg
or
idivb
pop
xchg
mov
xchg
loope
pop
and
in
inc
add
shl
jmp
xchg
inc
pop
jecxz
cmc
mov
cmp
jge
xor
flds
fmuls
popf
push
int3
imul
and
insb
jno
rolb
cmp
pop
sbb
movsl
iret
es
mov
fiadds
outsb
push
cmp
in
inc
sbb
xchg
inc
jmp
mov
cwtl
add
jmp
sub
insl
pop
aaa
pop
dec
test
lea
lds
adc
repnz
faddl
shrl
insb
iret
push
pop
inc
xchg
repnz
mov
xchg
lret
testl
jg
lret
add
out
call
sub
pushf
xchg
pop
sub
jbe
inc
or
jmp
scas
mull
lods
mov
or
jl
mov
mov
popa
shlb
jle
dec
mov
xchg
pop
lds
pop
cmc
push
cmp
cli
inc
cmp
jae
scas
sub
adc
aad
mov
adc
and
ljmp
cmp
and
pop
into
push
add
imul
stc
mov
in
and
sub
push
std
mov
je
xlat
add
fnstenv
or
mov
push
mov
out
xchg
test
jae
imul
rorb
icebp
inc
shlb
cmp
aas
push
test
xchg
ficompl
mov
and
inc
mov
out
js
add
lret
inc
pop
imul
adc
imul
inc
insb
adcl
es
shlb
jecxz
cmpsb
mov
sbb
or
fstp
sub
mov
mov
jno
sbb
sub
mov
movsb
jno
mov
stc
push
mov
dec
fcomi
cmpsl
sub
mov
cmpsb
js
or
outsb
pop
fadds
ret
cld
xorb
pop
mov
icebp
mov
mov
insl
add
jecxz
out
inc
lods
hlt
jo
and
lods
ljmp
inc
sbb
push
lods
in
incl
mov
and
xlat
cmp
inc
pop
xorb
popl
arpl
mov
xchg
flds
pop
inc
pop
cmpsb
jno
cmp
and
ds
or
fs
jle
sub
out
mov
fstpt
sbb
repnz
addr16
inc
leave
fwait
lahf
mov
xchg
push
lods
inc
shll
aad
sub
out
ret
clc
cltd
call
sub
repz
fwait
or
stos
iret
addr16
les
orb
cmp
push
pop
dec
imul
xchg
cmp
lds
sbb
je
mov
lret
jp
mov
dec
inc
pop
lods
pop
add
data16
xchg
loop
jnp
push
aas
mov
iret
sbb
sbb
add
insb
cmc
inc
push
sbb
movsb
insb
into
test
rorb
mov
inc
mov
loop
insl
hlt
rcrb
add
pop
add
sub
fwait
and
mov
cli
pop
lret
adc
ja
test
pop
mov
xchg
pop
idivb
and
and
add
jb
jb
out
add
fsubr
int3
jae
pop
scas
xchg
roll
icebp
out
mov
inc
mov
xchg
scas
jb
xchg
inc
pop
stos
jns
lods
sti
ljmp
pop
lret
out
adcl
sbb
outsl
inc
jle
mov
and
sub
push
jnp
popa
mov
in
pushf
fwait
dec
arpl
fiaddl
outsb
jb
push
mov
mov
add
mov
or
xchg
and
aam
test
or
jmp
ja
adc
or
into
out
pop
popa
ret
xchg
in
enter
cmp
sti
cld
repnz
call
xor
add
adc
xor
pop
popa
aad
mov
fstpl
mov
jns
aaa
push
sub
aad
mov
cmp
fcomps
pop
cmp
dec
and
cmp
lret
xchg
push
cmp
mov
add
divb
jnp
push
fcmovnb
cmp
inc
xor
jns
fstl
scas
lock
jl
outsb
dec
mov
or
jge
pop
push
test
jle
fisttps
int3
into
ret
dec
mov
js
mov
push
out
lcall
sbbb
sub
push
sub
sahf
xchg
cmp
mov
add
mov
pop
das
cmp
cli
out
lods
leave
sbb
cmp
cmpb
mov
jmp
call
daa
adc
std
test
mov
jbe
mov
sti
lahf
pushf
pop
xchg
mov
adc
fdivs
cmpl
aad
in
popf
sub
ret
pop
push
std
adc
add
xor
adc
push
push
insl
mov
inc
mov
mov
jb
into
test
and
je
pushf
imul
mov
loope
mov
ds
cmpsb
sub
jp
int
add
pop
or
dec
dec
sti
ret
stos
mov
push
xor
inc
inc
mov
sbb
sbb
popf
popa
lods
sbb
lcall
cmpsl
fdivrs
fs
scas
repz
sti
xor
pop
ljmp
repz
inc
mov
repz
mov
test
dec
sub
mov
adcb
cld
mov
lahf
xchg
pop
icebp
fwait
mov
test
push
and
add
ror
stc
jmp
addr16
shrb
adc
int3
movsb
lret
push
and
ja
pop
fwait
sar
xor
dec
mov
dec
ror
sbb
push
push
repnz
nopl
mov
mov
subl
add
aam
mov
mov
pop
dec
ret
add
cmp
test
inc
or
pop
jmp
popa
mov
icebp
fildl
mov
mov
into
sub
das
decb
lods
arpl
push
sub
mov
sbb
xchg
cmp
jbe
mov
adc
sbb
jno
bound
aas
push
aas
push
or
fimuls
outsb
jmp
xor
or
stos
cwtl
pop
sub
sarl
fistpll
iret
push
sarb
push
ss
test
dec
mov
lock
cmp
stos
aam
shlb
add
xchg
shll
cmp
sub
insb
jg
ret
lods
adc
into
out
mov
clc
lods
push
jle
dec
push
push
mov
cmp
stc
xchg
adc
mov
sbb
mov
jmp
jae
pop
in
push
mov
loopne
aam
ret
fsub
mov
adc
ja
popa
dec
dec
xchg
shrl
rcll
push
sub
movsb
in
stos
sbb
jle
jns
inc
aas
push
sbb
imulb
jg
pushf
jb
sbb
lods
jp
push
dec
ja
cltd
cmp
stos
xor
fcoml
sbb
test
xor
xchg
sub
xor
sbb
jmp
xor
pop
test
push
xchg
or
or
addl
out
adc
ljmp
xorl
add
test
ror
out
push
test
and
decb
lods
lods
adc
or
and
xchg
shl
aam
into
sbb
pushf
inc
test
pushf
jle
mov
insl
pop
jge
das
mov
out
out
les
leave
xor
clc
jne
sub
into
xchg
adc
scas
sbb
jns
iret
lcall
pop
out
shl
adc
fldl2e
shll
inc
std
test
stos
insb
sub
push
xor
xchg
test
mov
mov
mov
dec
mov
pop
and
inc
repz
mov
cld
push
and
sbb
push
pop
addr16
xchg
aad
jp
movsb
cmp
fildll
pop
jmp
mov
mov
xchg
mov
sar
pop
lock
aad
stc
xchg
mov
mov
jmp
sbb
jl
popf
std
lahf
sbb
cmpsb
mov
not
add
xchg
das
dec
or
inc
hlt
lret
push
jge
ret
mov
jp
push
lds
add
sub
pop
lea
xchg
fnstenv
inc
pop
sub
push
gs
and
sbb
inc
daa
push
push
xchg
xchg
cwtl
inc
stc
sbbb
enter
inc
mov
scas
stc
icebp
pushf
cmp
push
mov
xchg
cwtl
sbb
dec
jge
imul
nop
mov
dec
add
sarl
sbb
sbb
pushf
xchg
flds
add
xor
shrl
dec
dec
test
or
ror
out
cmp
imul
push
test
adc
dec
jge
lea
adc
jp
ja
mov
xchg
push
addb
hlt
mov
les
mov
lret
or
push
sub
rcrb
dec
shrb
or
cli
imul
lods
int3
test
ja
pop
add
jp
inc
push
ja
mov
or
mov
ret
cltd
pop
xorb
jge
mov
repnz
adc
cmp
jl
mov
in
or
jo
push
push
adc
and
xor
sahf
push
dec
lods
sarb
inc
cmpsb
jno
ret
inc
mov
adc
mov
push
sub
jne
jbe
or
ja
gs
jmp
mov
fmull
fs
movsb
fwait
mov
orb
ja
mov
dec
jmp
xor
pop
push
or
cld
popf
adc
cmp
sub
cmc
mov
sub
fwait
in
xchg
pop
hlt
inc
xchg
pop
xchg
sarb
add
rcll
xor
push
add
mov
add
jmp
sub
adc
mov
ss
out
inc
loope
leave
dec
lds
sub
sbb
push
iret
and
je
xchg
imul
clc
sbb
sbb
loope
inc
filds
mov
lahf
je
cmpsb
pop
xor
sbb
pop
out
mov
sub
aaa
push
outsb
mov
lahf
mov
dec
adc
adcb
or
xchg
sub
jl
cltd
scas
push
cmpsl
lods
inc
mov
adc
pop
or
inc
arpl
iret
jbe
jp
push
repz
enter
mov
adc
xor
pop
sub
ljmp
ljmp
mul
scas
mov
pop
sarl
dec
ja
aam
mov
inc
cltd
mov
lret
cwtl
fadds
pop
jae
push
dec
into
mov
sub
xchg
sub
call
push
xchg
push
stos
ret
aas
cld
mov
aad
pop
xor
pop
adc
popa
sbb
pop
lds
adc
sbb
lea
out
add
imul
insl
test
lods
mov
gs
jne
pop
cmp
fists
inc
cmp
call
mov
push
xlat
ja
mov
ret
rclb
shl
lock
in
dec
lcall
sub
pop
outsb
sbb
in
mov
cmp
pop
push
movsb
mov
sarb
bound
mov
scas
xchg
lds
jle
cli
mov
aam
xchg
jo
mov
fistps
lock
rcrl
cs
sub
xor
push
adc
sbb
mov
xlat
sub
iret
adc
add
mov
lods
cwtl
popa
shlb
jg
in
insl
popa
pop
pcmpeqw
mov
mov
lret
sbb
add
mov
out
shl
push
mov
adc
popf
testb
push
imul
mov
gs
scas
add
mov
jle
adcl
cmp
mov
xor
ror
out
iret
xchg
mov
push
push
stos
mov
fildl
lock
outsb
jmp
fstl
pop
push
and
shlb
mov
stos
fwait
mov
shl
sbb
movsb
inc
std
dec
cltd
cmpsb
insb
test
out
adc
pop
loop
xlat
fnsave
out
push
sbb
mov
fisubs
mov
jno
mov
repz
pushf
sbb
or
fidivrl
in
or
out
lret
push
fbld
push
pop
jmp
aam
push
dec
mov
pop
sub
out
lret
mov
nop
push
add
loopne
inc
fmul
xor
xchg
sbb
xchg
fnstenv
aas
sub
fmuls
stos
js
or
sar
push
dec
adcb
inc
ret
mov
fbstp
int
mov
scas
sbb
test
pop
hlt
hlt
push
xor
insb
mov
enter
mov
inc
jns
pop
mov
sbbb
jno
mov
xchg
mov
pop
lods
sbb
ja
dec
jl
mov
andb
xor
loop
rcrl
sub
push
pop
fisttpll
sbb
out
push
es
push
mov
add
repz
cmp
jno
es
mov
pop
out
mov
jno
jecxz
push
and
cld
fnsave
sbb
pop
or
jl
filds
scas
scas
and
pop
fs
jp
jnp
enter
add
mov
sub
popa
mov
or
cmp
dec
enter
icebp
lds
stc
std
xor
cs
out
dec
sub
xorb
sarb
jne
inc
push
iret
fnstcw
divb
inc
ja
nop
pop
sarl
push
mov
outsl
sub
int
flds
fdiv
dec
andl
imul
cmc
sbb
sub
leave
xor
mov
mov
imul
adc
and
push
gs
xchg
inc
jmp
hlt
xchg
orl
mov
mov
mov
les
pop
lods
mov
gs
push
mov
loope
fprem
mov
jmp
cmp
pop
lahf
xor
cmp
in
sbb
test
mov
popf
inc
cld
inc
mov
lret
cmc
mov
mov
inc
popf
leave
or
push
fsubl
fwait
or
in
pop
lods
fs
aad
push
mov
jmp
stos
scas
and
cmpl
imul
pop
lahf
push
or
ds
in
xor
cmp
gs
mov
jnp
xchg
sahf
sti
push
mov
outsl
mov
cs
in
lahf
les
rcl
cmpsl
jge
nop
xchg
mov
mov
popa
and
shll
stos
cmp
das
sbb
and
loope
fcmovnb
adc
je
out
pop
scas
subb
pop
icebp
push
jg
jle
sub
lods
mov
mov
xchg
iret
mov
aad
aad
push
test
push
lds
shlb
jle
repz
sub
sub
adc
ss
adc
jno
push
out
mov
iret
dec
inc
mov
out
pushf
shlb
or
arpl
sbb
xor
lcall
icebp
add
or
movsb
mov
fldt
jle
shlb
push
mov
iret
pushf
fidivrl
and
stc
or
leave
inc
cmp
cli
cmp
dec
call
out
repz
jae
pop
ss
js
pop
inc
into
sub
adc
lahf
mov
sub
in
and
popa
mov
or
push
bound
jne
inc
xchg
out
or
ret
scas
pop
dec
xor
insb
cmp
scas
xor
xchg
flds
lods
scas
mov
hlt
mov
sub
xor
inc
insl
stos
push
mov
inc
xor
dec
imul
sub
inc
dec
dec
jae
sub
xor
jne
orb
fidivl
test
xor
nop
xchg
fcmovne
mov
and
pop
xchg
pop
popf
jb
loope
insb
testl
mov
inc
dec
sbb
fistpl
sbb
fbstp
xchg
fmuls
pop
outsb
lahf
ret
sub
popa
inc
adcl
iret
adc
mov
ficoms
fsts
mov
pop
arpl
test
rcll
cmp
ret
xchg
adc
movsb
call
std
mov
std
sub
dec
push
sub
pusha
pop
outsl
push
pop
lods
inc
insb
jbe
dec
loopne
iret
jg
notb
andl
test
in
cmp
cwtl
or
ret
fildll
mov
or
inc
adc
ss
ds
push
fiaddl
mov
jge
into
mov
mov
dec
pop
inc
jg
jbe
jae
xchg
dec
xchg
sub
ss
idivb
sbb
sarl
adc
cli
pop
mov
and
lds
adc
repz
sub
or
push
adc
mov
ljmp
jae
rcl
cmp
or
mov
sbb
mov
mov
es
cmp
mov
xchg
sub
lahf
icebp
mov
flds
in
outsb
and
enter
inc
rorb
sbb
and
xor
inc
jo
dec
sub
mov
sbb
push
adc
sti
ffreep
pop
mov
add
sub
movsl
push
xchg
in
cmp
mov
dec
xchg
clc
dec
iret
lcall
mov
out
lea
rcll
mov
hlt
sbb
and
mov
jnp
mov
iret
sbb
dec
test
jnp
fstpt
push
scas
push
push
xor
dec
sbb
dec
rcrl
push
pusha
push
mov
mov
pusha
pop
push
cmp
jo
or
test
repz
loope
add
lods
jne
xchg
xchg
xchg
push
call
xchg
pop
jge
xchg
and
cmpsb
xchg
mov
xchg
xchg
in
lcall
ljmp
inc
shll
loope
ja
outsl
jmp
cmpsl
mov
scas
mov
jl
lods
sti
idivl
add
mov
negb
jecxz
and
xor
xchg
insb
and
pop
nop
pop
or
pusha
outsb
outsl
ja
adc
xchg
iret
lret
mov
sub
loopne
push
jne
jae
mov
cmpsl
jl
mov
push
add
push
mov
adc
pop
mov
out
int
mov
mov
sub
push
xor
mov
sub
lods
sub
cmp
nop
shll
add
lods
mov
sbb
aas
push
and
fildll
adc
and
jl
movsb
std
cld
add
jmp
jg
sahf
lods
clc
xchg
ret
sub
fs
adc
lret
push
rcrl
ss
sbb
shl
pop
pop
loope,pt
xchg
ss
lretw
imul
call
add
jecxz
stc
loop
push
shll
sarb
mov
mov
out
ja
xchg
lret
xchg
pushf
cmp
mov
int
pop
adcb
fwait
push
scas
repz
push
sbb
mov
add
mov
jo
aas
xchg
xchg
adc
jo
mov
std
cmp
clc
movsb
xor
add
or
js
adc
std
subl
out
inc
int3
cmp
mov
clc
sbb
inc
repz
add
cmp
fwait
sahf
lods
mov
imul
inc
add
jmp
aad
in
mov
jl
movsl
inc
inc
xchg
xor
add
into
xchg
xchg
adc
xor
pop
sahf
jae
sbbb
add
loope
inc
and
leave
rcll
sub
inc
and
je
jno
push
jmp
fxch
fsub
sahf
lret
fidivs
pop
movsb
dec
jecxz
out
clc
xor
inc
push
inc
jbe
sahf
das
sbb
push
dec
sbbb
cmp
lret
jp
in
out
xchg
cmp
mov
js
push
cld
xor
or
xchg
push
mov
inc
sbb
seto
jo
mov
lods
out
pop
mov
fidivrs
dec
and
add
fcmovu
dec
jmp
pop
lret
in
dec
jle
jl
inc
pop
or
mov
mov
mov
xlat
ret
movsl
mov
mov
adc
fisttps
mov
int3
imul
jo
lea
outsl
xchg
bound
test
enter
ljmp
sti
rcrl
or
out
std
repz
add
push
pop
push
pop
mov
jno
iret
mov
pop
mov
test
addr16
imul
xor
das
mov
adc
push
inc
xlat
sbb
mov
cmpsb
cld
stos
jmp
test
jg
mov
sarl
mov
clc
and
mov
add
push
mov
jb
pushf
gs
clc
popa
jecxz
jnp
mov
cmp
orl
sub
mov
mov
cmp
aas
xchg
repnz
subl
inc
mov
mov
cmp
das
ja
std
pusha
insb
jmp
push
inc
xchg
jg
incl
mov
cmpsl
mov
sub
inc
adc
adc
clc
cld
imul
pop
adc
sbb
popa
aam
ret
icebp
mov
xchg
mov
loop
mov
pop
daa
mov
cld
mov
inc
jne
scas
cld
jnp
or
and
fistl
xor
push
bound
es
fwait
subb
xor
addr16
scas
jno
ljmp
jg
dec
or
out
outsb
stos
stc
movsb
xchg
or
and
clc
and
loop
in
and
icebp
xor
sbb
jb
leave
jg
fdivl
inc
ja
scas
mov
xchg
inc
push
aaa
adc
jmp
push
lods
add
out
jbe
test
icebp
mov
xchg
push
cmpsl
xlat
push
adc
inc
jg
mov
xorl
cs
pop
mov
push
adc
test
mov
pusha
jb
aam
jmp
add
loope
add
repz
push
addr16
gs
sbb
inc
daa
rolb
adc
std
push
movsb
inc
loope
test
clc
cmpsl
std
fistl
test
fcoml
lcall
mov
lahf
jne
mov
iret
lock
adc
jmp
hlt
shlb
pop
jp
or
push
dec
or
enter
inc
dec
pop
popf
out
jb
sbb
xchg
int3
lahf
push
xor
push
xchg
cmp
or
fcompl
push
scas
or
adc
xlat
sub
out
cmp
addr16
fsubrs
mov
ljmp
movsb
add
testb
repnz
daa
sub
mov
add
jg
push
es
leave
push
in
jno
xlat
pop
int
in
xchg
add
mov
sbb
cmp
imul
mov
imul
insb
jmp
mov
sbbb
sti
dec
aad
push
jecxz
shll
shlb
inc
mov
ds
add
in
int3
jns
push
jb
shll
movb
xchg
sbb
inc
inc
enter
adc
imul
mov
popa
cmc
mov
add
lods
vcvttsd2si
push
jno
mull
popf
mov
lds
push
adcl
xchg
sub
pop
add
and
outsb
negl
xor
lcall
popa
ficoms
xor
mov
add
popa
push
fwait
push
cmp
push
inc
xchg
je
mov
pop
cmp
ja
jo
enter
push
paddsw
cmp
xor
and
cmpsl
dec
fstpt
sub
jmp
push
mov
pushf
cmp
loopne
fs
jl
mov
xchg
dec
xchg
adc
insl
lock
cmpsl
jae
shrl
xor
mov
xchg
adc
or
movsl
cmp
xor
xchg
jmp
clc
sub
das
mov
jecxz
push
and
js
clc
sub
out
mov
ja
lret
pop
xor
add
ja
loope
fmulp
pop
pop
xlat
mov
xchg
inc
cmc
outsl
push
jne
jge
arpl
sbb
sbb
xlat
and
inc
and
add
jnp
je
or
or
or
push
rcpps
pusha
testl
push
fdivp
shrl
sub
lods
xchg
icebp
cmc
roll
xchg
adc
pop
xchg
pop
les
cltd
mov
mov
mov
aad
add
jecxz
jge
movsb
test
jae
mov
stc
inc
imul
inc
lahf
iret
xchg
mov
je
aaa
jp
adc
les
ljmp
lods
cmp
icebp
or
jno
sub
shrb
dec
popa
jno
mov
push
cli
mov
mov
pop
aad
or
or
aas
lahf
cld
jne
push
push
sbb
jp
loope
popa
stos
sti
ret
rcrl
test
call
jmp
mov
fists
sbb
daa
add
and
xchg
mov
lret
pop
jbe
sbb
fisttpll
imul
inc
push
mov
fs
cmp
cvttps2pi
jge
push
jns
mov
leave
sbb
sub
add
mov
jns
mov
lret
scas
and
pop
inc
mov
cs
cmp
jo
xor
inc
dec
add
into
int
hlt
cltd
xor
ret
mov
fs
xor
mov
ficomps
lcall
push
sbb
cmpsb
jno
xor
out
and
mov
sti
sub
dec
lods
jecxz
push
xchg
ja
jl
fwait
cs
movsl
dec
jns
and
pop
cwtl
popa
xchg
push
sub
popf
jecxz
mov
outsb
inc
xchg
xchg
ret
or
xchg
sti
sbbl
shrb
outsb
mov
scas
inc
sub
push
push
call
out
push
add
dec
ret
lret
or
mov
or
pop
js
imul
or
push
aam
js
cli
ja
fst
sub
cmp
test
adc
and
sarl
scas
in
mov
xchg
mov
std
mov
push
jge
and
xchg
xchg
xchg
xor
enter
inc
rorb
ja
push
js
call
or
push
repnz
fcoms
out
cmpsl
out
push
push
fistpl
jge
andb
popf
iret
add
pop
pop
xchg
out
sbb
mov
cmpsl
fwait
push
sbb
inc
mov
ds
mov
in
fmuls
add
sub
mov
cmp
out
idiv
fwait
enter
pusha
mov
mov
pop
inc
cltd
push
dec
dec
dec
mov
icebp
xor
jmp
push
sbb
roll
jo
xchg
jae
push
in
in
imul
mov
in
imul
jg
sub
test
sahf
stos
aas
dec
test
inc
shlb
pop
and
sbb
data16
insl
mov
pop
mov
pop
xor
mov
fisubs
fcmovnbe
cltd
popf
jle
xchg
jl
test
fdivrl
es
insl
movd
test
xor
xchg
mov
loopne
jg
xorb
adc
and
mov
cmp
data16
sbb
dec
xor
jmp
pop
and
push
jp
lea
jecxz
push
dec
xor
stos
insl
pop
ljmp
mov
movsl
arpl
mov
shrb
cmpsl
aam
sub
js
fsubs
pop
jle
xchg
jo
cmp
and
sbb
lcall
movsl
not
cld
shrl
aad
add
int
inc
and
cmp
fadd
sahf
lahf
jns
out
stos
and
push
in
mov
jb
xchg
cmc
xchg
push
imul
dec
cmp
filds
add
xchg
push
and
rcrl
sbb
lock
cmp
jns
repnz
fwait
sub
sub
stos
std
je
dec
stc
xchg
fs
cld
push
test
mov
out
mull
cwtl
mov
ret
pop
ret
pop
nop
sbb
cwtl
inc
in
add
nop
xchg
pop
cmpsb
rorl
std
jle
push
out
xchg
xchg
pusha
add
mov
rorb
adc
sahf
cmpsb
mov
add
push
dec
pop
push
inc
sub
imul
xchg
pusha
jg
mov
xchg
shrb
push
and
movsl
push
ret
pop
int
gs
daa
in
int3
scas
and
mov
enter
scas
xchg
call
cmpsl
sbb
mov
mov
test
pop
xlat
xchg
push
cmp
mov
fld
divl
cwtl
repz
fisttpll
fistl
repz
ret
pop
xor
mov
inc
fsubl
mov
fcmovu
cwtl
mov
push
lods
sbb
and
lock
xchg
popf
subb
xor
fwait
in
add
mov
outsb
jecxz
mov
dec
mov
outsl
js
ret
push
sarl
cmpsb
rolb
cmp
sbb
cmp
mov
pop
sub
in
pop
push
lock
push
jbe
jo
sub
popf
int3
repnz
mov
mov
test
pusha
push
sub
dec
movsl
jno
adc
push
fsubp
mov
aam
jmp
aam
mov
repnz
outsl
mov
in
add
stc
jge
sub
xchg
hlt
stos
xchg
jmp
pop
out
movsb
sahf
dec
and
mov
rol
roll
push
mov
lds
iret
mov
aaa
repnz
jmp
add
jnp
mov
add
sub
incb
arpl
pop
cltd
xor
cmp
fs
adc
mov
mov
test
es
lcall
mov
jo
xor
bound
ds
push
gs
out
scas
mov
dec
push
ror
jge
aad
sub
pop
xchg
mov
jle
and
or
loopne
or
cmp
cmc
pop
cmp
fisttpl
xchg
rol
pushf
cmp
xchg
mov
lret
fdivrl
dec
rol
mov
jo
inc
xchg
adc
imul
and
fisubrs
xchg
insb
cmp
jns
daa
xchg
mov
inc
int
and
lock
bound
mov
leave
in
insl
pop
ljmp
scas
lods
adc
xor
dec
scas
fimull
outsl
xor
pop
lret
sub
arpl
jmp
dec
rorb
xchg
mov
cltd
mov
sarl
mov
xor
mov
jae
cmp
loopne
push
sbb
jns
call
fisubl
xchg
jo
enter
lcall
cmp
outsl
jbe
cmc
xor
lcall
ds
lret
test
or
andl
push
and
dec
xchg
cmp
dec
mov
and
jmp
movsl
mov
adc
ljmp
adc
xchg
or
loopne
add
aam
jno
adc
fcmovu
dec
fcoms
shr
mov
mov
int3
data16
call
icebp
mov
push
xchg
pop
icebp
mov
and
test
sahf
movsb
dec
inc
repz
xor
mov
lock
jae
cld
mov
push
dec
std
lcall
arpl
repz
lret
fistl
cltd
jecxz
sub
out
imul
fwait
pop
push
jp
data16
insl
loop
arpl
xchg
ss
leave
addr16
subb
or
hlt
leave
mov
mov
inc
lcall
jne
jae
pop
xchg
shll
fstp
lret
mov
jnp
int
dec
jbe
call
fwait
or
dec
mov
outsl
jp
dec
inc
fnstenv
push
jo
pop
dec
dec
call
jl
jp
add
mov
insb
push
orl
out
stc
ret
fdivrs
cld
mov
lret
sub
fdivs
andl
mov
sub
mov
sbb
push
inc
push
lea
in
out
adc
lret
mov
adc
movsb
pusha
sbb
pop
out
jge
lock
cmp
and
ret
lret
shll
sahf
cmp
and
xchg
aad
pop
sbb
hlt
dec
push
stc
xchg
lahf
xor
idivb
jg
pop
pushf
add
jo
and
xchg
push
jno
mov
fsts
mov
jne
dec
mov
adc
cwtl
inc
push
push
xor
ret
cltd
sub
leave
adc
data16
dec
or
jp
lds
mov
sub
mov
stos
mov
mov
xor
fisubrl
mov
or
in
sbb
call
jb
sbbl
addr16
cltd
bound
mov
inc
mov
inc
lret
adc
mov
rcrb
push
xor
fwait
test
aad
lahf
push
xor
mov
inc
xchg
mov
mov
mov
out
shll
cmpsb
loope
loopne
push
lret
mov
sub
mov
and
mov
in
and
push
xchg
push
and
adc
push
aas
das
lods
lods
inc
lock
js
mov
mov
and
jge
jnp
movsb
cmpb
pop
inc
mov
cmovns
inc
dec
fists
iret
mov
test
int3
mov
ficomps
out
lods
push
rcrl
mov
push
dec
mov
aam
mov
in
pushf
sbb
adc
inc
add
xchg
icebp
add
imul
jmp
jg
scas
mov
push
bound
rcrb
ficoml
xor
out
shrb
subb
push
or
aad
lods
sbb
mov
loope
jmp
stc
xchg
je
imul
cmc
sub
sbb
cmp
das
stc
push
dec
mov
out
jg
add
push
and
cmp
out
or
incb
test
lahf
add
fistps
inc
lahf
xchg
pop
xchg
cmc
adc
adc
iret
xor
or
pusha
add
xor
pop
mov
cmp
pop
mov
xor
dec
into
xchg
mov
sub
inc
lods
mov
push
arpl
scas
enter
adc
jnp
dec
dec
adc
dec
shr
adc
xor
mov
imul
stos
inc
cmpb
sub
push
push
xchg
lahf
stc
mov
inc
mov
pop
mov
addb
ret
pop
xchg
aam
nop
loopne
and
xor
add
mov
inc
mov
pop
pop
cmpsl
js
jge
cmp
adc
mov
mov
sbb
mov
fsubr
in
jmp
ret
mov
popf
push
arpl
mov
into
rolb
inc
mov
sbb
mov
xchg
add
stos
in
xchg
mov
or
les
push
inc
stos
addr16
insl
mov
leave
xchg
cld
push
imulb
pop
sarb
int
out
mov
loope
pop
push
xor
sbb
stos
in
pushf
dec
mov
pop
jg
jns
es
push
push
push
popf
xorl
gs
cwtl
push
jmp
pop
sbb
sub
mov
jmp
cmp
xchg
sbb
dec
push
int
xor
mov
into
adc
sub
lock
mov
pop
or
dec
fdivrl
mov
mov
pop
mov
adc
aas
cmp
imul
std
popa
fwait
ljmp
pop
stos
pop
in
jg
xor
out
and
pop
sbb
and
out
mov
mov
leave
cltd
sbb
stos
gs
das
out
lahf
orb
lret
fildl
add
cmpsl
pop
arpl
mov
pop
jbe
dec
movsb
dec
dec
adc
push
cmp
repz
inc
mov
stos
add
or
push
filds
or
pop
bound
popf
pop
pushf
int3
into
or
dec
in
add
fs
jge
pop
xor
jno
jg
jnp
test
stos
add
iret
xor
inc
mov
mov
xchg
fstpl
jge
sbb
shrb
in
arpl
js
jle
adc
mov
cmp
jl
push
mov
sbb
cmpsb
ss
mov
xchg
sbb
aaa
pushf
js
mov
stc
xor
and
and
xchg
adc
lock
jle
pop
dec
sahf
xor
fxch
icebp
out
cmpsl
pop
add
pop
test
bound
sti
push
rolb
hlt
popf
sbb
pop
or
xor
stos
sub
push
pop
or
test
add
pop
push
and
and
push
mov
xor
pop
push
xchg
outsb
test
sti
mov
rolb
lcall
jle
lods
cmp
add
fnstsw
mov
add
pusha
sbb
sub
adc
je,pt
xchg
jg
cmpl
smsw
lock
fidivs
rcr
sub
add
imul
mov
in
icebp
xchg
sahf
insl
mov
lcall
jb
ret
testb
pop
adc
pop
les
out
fimull
pushl
sbb
xor
shrl
cltd
pop
jbe
jg
enter
mov
scas
je
cmp
ljmp
mov
cmc
rcrb
adc
cmp
inc
mov
stos
pop
dec
aaa
jle
sbb
fsubl
fs
xor
jb
in
lret
inc
xchg
lret
add
in
mov
popf
and
jo
xor
daa
sub
popf
jo
mov
arpl
out
add
push
in
add
jo
push
es
sub
mov
cmp
ret
dec
jbe
dec
cmp
sub
popa
popa
mov
shll
cltd
pop
adc
cmpl
mov
inc
lock
sbb
mov
dec
outsb
push
push
fisubs
xchg
push
sub
inc
popa
cwtl
mov
mov
mov
xor
dec
lds
mov
lret
pop
xlat
scas
movsb
inc
pop
and
xchg
lds
jo
adc
cmpb
jecxz
jmp
xchg
mov
add
mov
jns
sbb
in
scas
dec
push
mov
rol
adc
mov
inc
int3
or
cmp
lahf
fnsave
fs
or
arpl
and
imul
gs
jle
add
mulb
xchg
shl
testb
mov
cmp
mov
xor
call
cwtl
fnstcw
shrl
scas
movsl
xchg
jno
bound
loop
push
lods
push
jmp
mov
iret
cmp
mov
jge
or
xchg
fwait
mov
out
loope
cmpsb
ljmp
add
test
xchg
insb
push
adc
mov
mov
push
shl
mov
pop
xor
lahf
mov
andb
ljmp
ja
rorb
cmp
xor
insb
jbe
pop
cmc
sub
sbb
inc
or
xorl
cmp
rcll
pushf
cmp
mov
xchg
lods
sub
lds
sub
xor
pop
cs
mov
out
pushf
sbbl
test
stos
test
aad
inc
push
inc
jp
lcall
add
xchg
out
mov
mov
sbb
xchg
test
mov
pop
sbb
push
sub
loope
shl
rorb
insb
push
xchg
cltd
loope
imul
sbb
ds
pop
fwait
pop
nop
mov
or
rolb
adc
or
mov
das
mov
inc
jl
cmc
pushf
aaa
cli
push
es
roll
mov
adc
in
outsl
inc
push
lcall
push
cmc
and
stos
pop
and
rorl
jb
es
lds
das
jp
aas
outsb
pop
dec
aad
arpl
adc
jbe
add
out
xchg
popa
dec
and
mov
out
jmp
lods
mov
daa
fisubl
pop
aad
sub
stos
dec
and
insb
cli
push
lds
mov
cld
push
dec
int3
repnz
subl
xor
or
rolb
aas
or
mov
dec
xor
fstl
xor
pop
pop
push
jmp
mov
aam
mov
pushf
addb
add
loop
push
call
mov
mov
dec
inc
sbb
jo
enter
cli
icebp
lock
imul
sub
cmc
scas
sti
inc
loop
pop
adc
out
imul
xchg
aam
jl
push
jne
lods
mov
loope
sbb
dec
xchg
std
xor
jo
mov
pop
dec
jbe
mov
es
push
mulb
fnstenv
fstpt
cmpsb
clc
iret
es
inc
rcll
xor
jecxz
les
lret
cmp
jl
inc
push
into
xlat
or
in
mov
cli
test
sahf
enter
std
outsl
jecxz
ret
mov
test
gs
sbb
xchg
ss
pushf
xor
cs
orb
jne
mov
xor
xchg
ficoms
lock
movsb
sbb
shrl
int
movsl
cmp
pause
pop
sbb
lock
fs
or
mov
pusha
fcoml
inc
pusha
pushf
sbb
mov
jno
cwtl
add
clc
in
test
mov
jp
push
ja
inc
outsl
adc
sub
adc
pop
adc
cmpsl
icebp
bound
pop
nop
loop
xchg
popf
addr16
rcll
jecxz
repz
rclb
and
sub
jnp
loop
xchg
dec
sub
ret
gs
mov
push
push
movsb
add
push
ss
mov
push
ret
subb
mov
pop
fistpll
inc
jecxz
mov
sub
les
push
fldz
mov
sbb
stos
cmc
decl
mov
out
push
mov
push
rcll
xchg
lret
ja
mov
mov
data16
sbb
mov
dec
mov
add
or
pop
scas
sub
rcrb
mov
rclb
xchg
cmp
inc
pop
cmp
and
test
xchg
cmp
ficompl
push
ret
pop
fldz
inc
jmp
xchg
or
popf
int3
pop
xor
jno
xchg
aaa
lods
and
fcmovbe
sub
repnz
cmc
xorb
add
and
mov
fucomip
enter
sub
loopne
mov
xlat
jecxz
xor
shrl
dec
into
fisubl
adc
cmpsb
movsl
shl
push
insb
sub
dec
pop
and
imul
add
jbe
imul
mov
clc
sbb
pop
rcll
xchg
bound
rcrl
shll
data16
add
ljmp
iret
sub
adc
adc
pushf
fcompl
xor
and
add
ljmp
pop
mov
inc
sbb
mov
addr16
mov
clc
mov
jne
test
lret
icebp
mov
fadd
pop
repnz
cmc
add
fscale
mov
push
aaa
sbb
andl
mov
and
cmp
mov
push
adc
iret
mov
mulb
daa
bound
leave
or
pop
xchg
cmp
mov
sbb
cmp
pop
inc
popa
adc
jns
xchg
jbe
sarl
cmp
mov
ljmp
mov
mov
ds
jo
push
negb
shll
or
rorb
cwtl
insb
xchg
push
push
jmp
lea
out
jb
lret
aaa
stos
rol
shll
lods
dec
jnp
mov
inc
daa
fimull
loopne
sub
sbb
loop
mov
jb
cmp
pushf
dec
popf
lods
imul
lock
add
mov
sbb
loopne
jecxz
mov
add
jle
sbb
int
pop
pop
jmp
rorb
mov
orb
dec
inc
xor
mov
inc
pop
xorl
sbb
add
sub
call
or
push
arpl
mov
insb
xlat
jbe
loop
pusha
in
push
jae
pop
lret
xor
cmp
in
cmc
add
aaa
mov
and
aaa
sbb
roll
cmp
scas
jmp
fstp
jns
ljmp
cmp
sbb
mov
mov
imul
xor
push
and
gs
cmp
subl
repnz
jae
pop
pop
mov
adc
add
nop
in
ret
test
shrb
test
mov
movsl
lock
xchg
dec
lret
push
dec
sbb
xor
out
xor
push
push
xchg
sub
iret
or
or
addr16
loope
test
xchg
mov
jl
sbb
rclb
stos
jne
jb
jne
mov
xchg
cmp
test
cmp
je
sub
shr
in
loop
mov
xchg
addl
shl
fstpt
inc
idivb
and
pop
out
push
fists
pop
ljmp
ret
and
into
jge
stos
jl
xchg
mov
push
jae
inc
push
icebp
out
les
fists
adc
into
aaa
fdivrs
test
imul
cmp
out
mov
lahf
xchg
xor
stc
std
jo
pop
push
sbb
jle
incl
shlb
xor
fwait
mov
or
rclb
test
sub
sbb
inc
fldcw
or
sbb
xor
cmp
cltd
fisubs
int
shrl
sub
scas
mov
ds
xchg
call
pushf
jb
add
or
out
lods
stc
adc
adc
sbb
out
call
jne
call
scas
rcll
mov
aas
sbb
jp
cli
aaa
xor
rorl
cmc
cli
lds
xlat
cmc
pop
pop
pop
dec
lea
inc
in
outsb
aam
xor
sub
addr16
or
dec
xorl
pop
mov
scas
push
lret
movsb
sub
adc
arpl
push
rclb
jae
arpl
jmp
movsb
push
insb
test
outsb
popa
lea
mov
cld
add
popf
mov
and
in
push
add
insl
dec
pop
out
cmp
das
test
jge
dec
push
pop
xor
dec
dec
lcall
push
mov
call
jmp
jb
mov
mov
sbb
out
nop
push
add
loopne
push
mov
cmp
inc
jg
ja
jp
cmpsb
scas
int3
daa
fmuls
fwait
inc
shrb
fs
xchg
add
add
ficoms
jne
cmp
inc
out
shl
mov
cld
jg
loopne
or
or
inc
inc
mov
jne
jb
sub
push
jg
subl
mov
std
lahf
in
fisubrs
and
sub
dec
loope
cmp
inc
mov
and
in
fidivrl
inc
aam
cld
pop
mov
adc
je
lods
stos
push
pop
mov
mov
xchg
adc
imul
loop
fisubrl
rorl
stos
movsl
shr
jmp
lcall
or
dec
ret
sub
sti
sbb
inc
mov
mov
adc
insb
sub
sti
addr16
lcall
popf
out
sbb
mov
jge
fisubrl
push
mov
and
mov
inc
push
fwait
mov
orl
orl
mov
mov
pop
cmp
add
xchg
std
stos
mov
cmp
mov
orb
sub
mov
fidivrs
sub
sub
std
or
push
jg
shr
idivb
xorl
mov
jbe
cs
pop
shl
outsl
pushf
mov
daa
jno
out
xchg
cld
dec
jnp
dec
and
dec
inc
cmpb
push
les
fildl
cli
test
aam
mov
scas
cmpsb
out
popa
adc
stos
adc
mov
push
icebp
shll
dec
and
fisttpl
jns
xchg
mov
push
add
imulb
fs
clc
mov
cmp
jo
stos
inc
or
jo
ret
sub
dec
jmp
pushf
push
scas
test
push
add
sub
lahf
sub
xor
cmc
jp,pt
frstor
cwtl
adc
lahf
and
mov
scas
and
insb
cltd
lds
jo
mov
xchg
sbb
dec
jbe
mov
and
cwtl
and
cmp
arpl
push
lahf
xchg
jp
mov
inc
adc
pop
idivb
mov
cmp
iret
mov
add
fdivl
mov
inc
test
cmp
push
ljmp
cli
rcrl
in
cwtl
dec
mov
movsl
jns
imull
mov
jle
jmp
add
mov
inc
outsb
outsb
mov
mul
jge
pop
mov
in
rcll
push
add
popa
stos
jp
and
in
cmpsb
into
mov
sarl
pop
insl
sbb
mov
sub
fidivl
xor
scas
jmp
jb
popa
push
xchg
pop
test
sub
ret
ss
adc
adc
mov
ljmp
outsl
add
outsl
xchg
scas
inc
inc
adc
sti
pop
test
pop
pop
add
out
lods
idivl
or
test
adc
aaa
dec
pop
addb
enter
pop
negb
inc
stos
add
into
xchg
adc
jbe
jmp
push
push
inc
inc
sbbl
adc
hlt
int3
mov
or
sbb
jne
lea
iret
inc
inc
adc
sub
roll
sub
cli
frstor
mov
dec
and
push
je
inc
xor
and
and
push
sahf
xchg
adc
aam
pop
aad
ret
xor
push
lock
jp
std
add
xlat
rcr
in
mov
and
cmpsb
mov
cmp
sub
jmp
mov
sbb
push
and
pushf
les
test
push
in
sbb
arpl
add
test
or
in
or
stos
int3
push
sub
or
mov
mov
mov
repz
adc
sub
xchg
movsb
xor
push
clc
mov
test
scas
cmp
lcall
sbb
lret
pop
push
mov
mov
outsb
in
dec
sbb
sarl
ljmp
fidivs
ds
daa
push
dec
add
xlat
mov
comiss
cmpsb
sbb
sub
pop
inc
and
xchg
mov
sbb
repnz
test
pop
jmp
in
loop
push
mov
flds
loope
cwtl
pop
jne
mov
pop
mov
shrd
sub
sbb
inc
dec
test
add
icebp
mov
loop
imul
leave
mov
testl
jo
iret
inc
mov
mov
inc
js
sub
jg
ffreep
scas
adc
int
lcall
cmp
outsl
fists
dec
lret
clc
cmp
in
int3
mov
mov
xor
das
pop
scas
mov
add
mov
or
push
pop
icebp
mov
adc
mov
fnstsw
xchg
movsb
dec
stos
mov
je
inc
push
dec
inc
test
dec
and
nop
and
or
dec
mov
aad
fnstcw
xor
mov
loop
jmp
push
cmp
flds
test
leave
iret
push
mulb
js
loope
enter
or
sub
ds
fidivs
inc
into
jns
subl
icebp
repz
cli
clc
notb
or
stc
int3
pop
iret
dec
rep
dec
pop
add
lret
ror
xchg
jae
mov
mov
sti
fistps
xchg
sbb
mov
gs
fucom
aam
repnz
sbbl
out
cmp
pop
subb
dec
xchg
xchg
adc
lock
mov
out
mov
enter
mov
out
jl
push
das
mov
inc
or
push
aad
lret
inc
adc
cmp
aam
stc
sub
shll
pop
jo
xchg
addr16
mov
das
cmp
bound
es
outsl
aas
int
sbb
dec
fiaddl
mov
mov
ljmp
push
adc
filds
sbb
int
cmc
add
out
add
jnp
mov
loop
imul
jbe
inc
lea
mov
mov
hlt
in
lds
xchg
fsubrs
adc
pop
ja
test
ja
xchg
imul
dec
inc
fs
leave
and
popa
mov
fisttpl
and
push
mov
cmpsl
push
je
inc
outsl
push
mov
pop
mov
test
add
nop
cs
pop
lds
dec
aam
inc
lret
shrb
mov
push
push
test
mov
mov
and
in
dec
outsb
jb
jne
pop
sti
mov
mov
sbb
push
xchg
aam
clc
jmp
lahf
std
test
call
cmp
jl
or
add
push
clc
enter
mov
dec
jmp
mov
mov
push
sub
pop
aaa
repnz
icebp
test
add
adc
cwtl
fwait
scas
xchg
int3
xchg
aaa
fs
pushf
xchg
fwait
movsb
dec
inc
or
fs
push
adc
adc
pop
insl
xchg
std
in
push
xchg
inc
push
pop
push
mov
mov
outsb
lret
repnz
hlt
mov
call
xor
xor
test
outsb
jae
add
adc
mov
movsbl
fidivl
xor
mov
jle
jno
cli
repnz
scas
pop
aaa
je
dec
mov
xor
test
test
test
xchg
loop
pop
ret
mov
sbb
pusha
push
and
std
adc
mov
in
dec
addr16
xchg
pop
shrl
or
ret
out
dec
push
sbb
sti
push
inc
add
pop
push
aas
arpl
mov
jb
xchg
aad
je
mov
in
stos
or
jl
fidivrl
push
sub
mov
sbb
sub
mov
lock
xor
movsl
test
leave
adc
push
stc
pop
add
out
inc
in
fmul
sub
dec
cmpl
or
pushf
repnz
pop
inc
aas
mov
orl
fidivrl
ret
lock
jl
cs
xchg
xchg
cmp
test
enter
jp
cltd
divl
sar
add
cs
test
lods
out
repnz
cmp
out
dec
or
scas
cmpb
fnstsw
pop
sbb
adc
jecxz
jo
and
add
mov
or
xor
cmp
out
shll
pop
add
xor
sti
idivb
cwtl
fildll
push
push
and
push
sbb
push
bound
and
in
xchg
sub
pusha
ss
pop
jmp
data16
shll
dec
in
daa
in
jbe
test
push
xchg
mov
hlt
lahf
or
adc
loope
insb
and
sub
jecxz
lahf
mov
clc
out
insl
jmp
push
lret
clc
insb
xor
arpl
and
pusha
clc
jno
lods
incl
data16
stos
adc
repnz
stc
sbb
mov
inc
push
test
dec
jbe
das
in
in
lds
in
cmp
pop
daa
mov
cli
mov
dec
jp
jb
dec
pusha
cwtl
popf
sbb
bound
iret
sbb
jae
fcompl
ret
inc
xchg
pop
xor
dec
and
mov
push
ret
or
dec
repz
cli
or
in
adc
cli
into
jmp
psubsw
out
popf
in
ja
pop
mov
adc
lock
aam
or
aad
dec
movsl
or
mov
shll
aad
dec
adc
nop
cld
mov
lret
xor
cli
xlat
lcall
gs
stos
pop
out
shll
rcrl
sbb
lods
adc
popf
sti
das
call
dec
aam
adc
in
inc
stc
das
cmp
lcall
mov
imul
lcall
xor
adc
dec
add
mov
push
mov
push
leave
std
loop
xor
dec
gs
lods
in
cmpsl
fisubl
lock
xchg
push
inc
in
rorl
lcall
sub
cmc
cmp
pop
jnp
cld
ret
push
popw
ja
jmp
fwait
stos
aam
cli
mov
out
sub
and
inc
xor
mov
push
jle,pn
xor
jmp
xchg
loopne
mov
pop
push
jnp
jbe
cmp
fxch
and
bnd
mov
insb
or
push
aam
shrb
mov
xor
addr16
jbe
cmpsl
push
sbb
test
xor
stos
pop
add
repnz
incb
inc
mov
addl
popa
mov
mov
into
cmp
xchg
cmp
fcmovne
ret
scas
ret
cmp
pop
push
sbb
xor
adc
sub
imul
xor
ret
ficomps
in
jae
adc
sbb
js
dec
sub
mov
sub
mov
sti
and
cltd
in
mov
dec
fdivrl
lret
scas
xchg
push
sar
mov
cmp
cmp
dec
mov
jb
mov
sahf
stos
mov
test
pop
inc
jns
inc
fdivrs
jns
dec
push
fadds
addr16
and
repz
cmp
adc
push
test
mov
subb
mov
inc
mov
adc
jg
es
cmp
mov
in
out
cld
mov
das
xor
mov
adc
repnz
fstpl
dec
cld
dec
push
add
or
cli
stos
mov
jne
fildl
ret
stc
cmpsb
mov
jb
push
inc
or
aad
je
inc
std
not
ret
insl
mov
nop
cmc
sbb
or
in
scas
lret
pusha
xor
jg
xchg
push
test
pop
pop
jmp
icebp
push
ret
sub
or
pushl
dec
ljmp
xor
fs
and
and
es
out
in
test
mov
sahf
lods
shll
outsl
or
mov
lock
cmpsb
cmp
mov
push
mov
cs
or
push
dec
sbb
adc
pop
cmc
jo
cmc
fstpl
sbb
pop
js
rcl
loope
jne
xor
int3
jb
adc
popa
cmp
mov
cmp
and
sbb
and
enter
div
test
fstps
mov
and
xchg
cld
dec
xchg
sbb
xor
aas
mov
pop
cmp
dec
aam
push
fimull
ret
lcall
subl
movl
sahf
daa
mov
loope
pop
add
repz
aas
push
or
movsl
aad
sbb
fmull
xor
fmull
cmp
lret
or
or
mov
inc
xor
fwait
sub
mov
movsb
xchg
gs
loope
scas
xorb
pushf
adc
mov
sbb
mov
adc
add
mov
lods
mov
daa
push
stc
ret
jne
pop
iret
outsl
jnp
dec
addr16
popa
xor
and
cmp
test
mov
enter
cmp
jbe
sahf
mov
jle
dec
mov
rcrb
ds
cmp
dec
in
and
cmp
pop
scas
out
mov
into
iret
sbb
mov
xor
sbb
sbb
xchg
cmpb
mov
shrb
int
mov
push
pop
jmp
inc
jne
or
out
and
and
mov
ja
jo
and
sbb
int3
pop
mov
mov
shl
mov
loope
mov
jne
and
sbb
mov
mov
test
outsb
dec
dec
and
push
dec
lods
aam
xor
pop
dec
adc
push
out
mov
pop
add
icebp
sbb
adc
lret
jg
pop
sub
dec
mov
into
popa
cld
jne
mov
mov
add
or
jmp
dec
adc
popf
lea
pop
mul
mov
outsb
mov
pop
jg
popf
aaa
gs
call
inc
sbb
loopne
sub
imul
xchg
sbb
roll
leave
mov
pop
sarl
push
lock
mov
dec
ret
sbb
decl
leave
enter
in
and
sti
inc
inc
lahf
or
arpl
sbb
pop
or
wrmsr
dec
mov
lcall
push
jnp
or
inc
ljmp
add
jle
push
push
add
movsl
imul
add
dec
xchg
sti
push
push
mov
cli
pushl
xor
jg
mov
inc
aas
mov
adc
cli
sub
notl
xor
xor
push
test
ret
fmul
cmp
shrl
fcmovnb
fistps
gs
cmpl
gs
out
sub
mov
xor
dec
sahf
or
int3
inc
xabort
dec
inc
mov
call
pop
jno
shlb
out
sub
out
xchg
inc
test
sub
xchg
cmp
nop
push
or
add
rolb
scas
out
xchg
mov
add
ss
xor
lock
insl
daa
lcall
dec
leave
dec
xor
dec
mov
or
test
and
enter
ret
push
xchg
dec
ljmp
push
out
or
sbb
jmp
xor
or
and
pop
cmpb
jae
xchg
lahf
xor
in
fcoml
jge
dec
adc
sub
jle
mov
mov
pop
icebp
inc
shrb
push
mov
mov
or
xchg
mov
fbld
shr
arpl
clc
sarl
in
adc
adc
outsb
psrlq
roll
fptan
mov
ljmp
fildll
in
repnz
pop
xchg
push
jmp
push
jmp
insl
mov
popf
in
dec
adc
popa
andb
mov
imul
sub
xchg
cmc
xchg
fs
cmpb
cmp
push
test
mov
daa
gs
push
jnp
mov
jno
js
jne
rcr
in
sub
ds
movsl
loope
cld
mov
hlt
imul
mov
sahf
dec
jle
into
sub
cmpsb
hlt
sti
mov
xor
insb
fwait
pop
mov
movsl
push
mov
add
jg
insl
and
roll
pop
push
stos
into
pop
lea
push
and
or
orb
add
push
mov
inc
xor
pop
pop
xlat
sbb
leave
test
gs
enter
cli
pop
icebp
mov
jno
fucom
push
add
push
sbb
cmp
int3
sub
xchg
add
dec
das
test
xchg
fwait
mulps
int3
jb
jp
xchg
adc
mov
cmpb
in
fistl
cmpsl
or
lea
in
hlt
mov
js
jb
mov
jle
adc
or
mov
pop
jnp
xorl
jae
push
cmpsb
mov
movsb
pop
mov
ret
sbb
dec
dec
mov
xchg
nop
xor
pop
lods
inc
mov
stos
clc
lea
dec
xchg
insb
mov
enter
fwait
data16
subl
mov
int3
lods
das
out
adc
rorl
xchg
subb
cltd
idivb
pushf
cmpb
jne
lods
push
push
adc
jns
mov
and
sahf
xor
pop
and
mov
lods
inc
push
lret
arpl
sti
xchg
pop
and
mov
inc
mov
mov
nop
or
addr16
mov
shrl
add
push
icebp
dec
test
fsubl
in
rep
mov
mov
loopne
and
cmp
or
cmp
movsl
and
xchg
push
and
mov
insb
xchg
movsb
sbb
inc
ljmp
add
repz
push
fs
xchg
or
xor
mov
push
lds
sub
and
rcl
ss
lahf
jg
out
sbb
test
mov
shl
lret
add
inc
mov
add
mov
mov
xchg
cld
jno
and
test
mov
orl
mov
jle
inc
push
jb
lret
outsl
mov
enter
pop
lcall
test
je
and
mov
xchg
bound
lcall
jmp
inc
aam
data16
dec
in
lea
lods
xor
jae
lock
sbb
pop
adc
cmp
adc
xchg
mov
mov
scas
push
or
rcl
fwait
loope
or
sub
test
jl
adc
lock
dec
mov
data16
pop
mov
loop
lret
mov
jno
mov
sbb
jnp
fldenv
and
popf
in
das
fwait
pushf
xor
enter
inc
call
push
cmp
push
jmp
xchg
mov
movsl
xchg
shl
adc
fistl
sbb
push
leave
insb
les
adc
orb
mov
out
xchg
movsb
add
ss
sbb
xchg
jmp
nop
pop
adc
mov
mov
mov
mov
sarl
mov
in
inc
or
int3
mov
imul
ds
lret
mov
jns
loopne
mov
add
std
cmp
xchg
daa
pop
iret
ficompl
leave
shr
lods
sti
jae
push
bound
sub
mov
daa
stos
sub
mov
push
push
in
lcall
inc
test
sar
sti
mov
cmp
loopne
xlat
cmp
movsb
sarb
loop
jne
jbe
movsb
jmp
fdivrs
add
out
popa
dec
sbb
lret
fs
xchg
sete
cmp
mov
mov
jbe
cmp
shll
lds
mull
js
clc
loopne
cld
pushf
mov
daa
ljmp
xor
mov
daa
or
aas
icebp
out
sub
sub
jmp
outsl
push
mov
mov
std
out
sub
jno
icebp
cld
sub
inc
pop
insb
daa
rolb
sbb
add
jno
mov
shrl
fistps
mov
sbb
pop
push
sub
mov
add
push
cwtl
ljmp
mov
adc
jns
push
jge
enter
inc
fs
ror
movsb
insb
xchg
push
add
sbb
and
in
jmp
cmp
ja
xor
push
xchg
adc
pop
aam
dec
cmp
in
dec
jne
xchg
data16
lock
in
jno
add
inc
out
or
cmp
ss
lret
outsb
sub
sbb
add
add
insl
call
mov
shl
in
test
bswap
sti
cmp
out
andl
push
leave
out
xchg
mov
add
or
popa
jno
mov
xchg
inc
outsl
test
bound
sahf
cmpsl
mov
sub
push
dec
rorl
xlat
lret
lret
push
cwtl
adc
jmp
push
shr
aaa
scas
mov
cmp
inc
pop
pop
push
fsubr
test
push
lret
and
movsl
hlt
mov
push
or
lea
push
fsubrl
fmul
divl
push
mov
imul
mul
loope
adc
sub
les
mov
jns
cmpl
aas
ljmp
mov
ds
mov
pop
inc
adc
add
cmp
push
fwait
aas
bound
out
js
and
insb
and
ficomps
sub
mov
jle
xchg
pop
pop
aam
lahf
aam
mov
ret
cwtl
jge
dec
pop
and
das
fwait
mov
or
add
fwait
dec
clc
mov
js
inc
mov
test
nop
dec
lds
adc
test
push
repnz
mov
pop
shlb
or
or
aas
cmc
mov
mov
xor
pop
lods
jb
inc
movsb
jecxz
mov
push
add
jecxz
test
fstpl
imul
inc
std
cmpsb
push
movsb
cli
shl
mov
dec
fstpt
or
sub
stos
sbb
movsl
leave
adc
ret
out
popf
push
je
dec
sahf
call
test
mov
sahf
in
push
mov
shl
cli
or
stc
xorb
dec
push
adc
push
mov
xchg
cmc
jae
pop
pusha
scas
add
adc
movsl
mov
pop
loope
xchg
insb
push
jge
fcomps
jmp
aam
cld
mov
pop
imul
pop
repz
xchg
hlt
pop
mov
jae
add
fisubrl
fpatan
pop
mov
xchg
jno
pop
jo
and
test
cmp
pop
sub
dec
out
mov
xchg
fcmove
dec
int3
pusha
jmp
rcl
jnp
stos
scas
loope
xchg
cmc
jge
sub
and
jnp
pop
push
test
adc
lahf
push
lds
lret
enter
sahf
jecxz
and
lods
xchg
inc
mov
aaa
in
push
cltd
shlb
icebp
jae
bound
imul
sbb
jnp
inc
inc
add
pop
inc
mov
inc
xchg
shll
sbb
mov
sub
xchg
les
imul
movsl
inc
fwait
dec
pop
bound
fisubl
pop
xchg
jbe
lcall
cmp
imul
aam
out
push
lods
pushf
mul
fimuls
adc
push
sbb
pop
xchg
inc
test
push
jp
jno
loopne
lret
lret
les
inc
stos
jle
sub
sbbl
scas
aas
inc
pop
sbb
stc
xchg
into
fsubrl
cmpsb
clc
fmulp
dec
jle
sbb
inc
mov
imul
mov
out
sarl
mov
stos
or
add
and
inc
inc
jbe
aam
dec
push
jge
imul
ret
jg
inc
mov
outsl
xchg
lds
push
test
sbb
push
or
loop
in
fs
dec
js
jbe
arpl
mov
pop
pop
or
mov
adc
or
hlt
incb
lcall
sbb
xor
daa
arpl
dec
jle
aam
push
xor
sahf
pop
mov
mov
mov
ljmp
pop
out
and
iret
ret
pop
jle
xor
stos
shll
cmp
mov
lcall
movsl
sub
cs
dec
push
add
lods
xor
mov
mov
xor
mov
out
mov
mov
outsb
aam
adc
lcall
add
jle
cmp
pop
push
jge
xchg
inc
int3
pop
imul
shl
xchg
xor
faddl
inc
sub
cmp
pop
cmp
mov
add
outsl
or
rcrb
add
dec
xlat
sbb
mov
outsb
cmp
in
jbe
jo
stos
xchg
rcr
jecxz
add
punpckhbw
outsl
pop
jno
mov
data16
lea
inc
popa
jb
insb
dec
jo
stos
test
orb
bound
xor
add
loopne
jbe
sub
mov
jl
js
mov
das
inc
notb
pop
add
mov
pop
and
mov
loopne
and
mov
fmuls
fcoms
test
stos
dec
stos
ja
fmul
test
fsubrp
mov
into
mov
popf
fistl
cmp
lcall
adc
mov
addr16
movsl
loopne
divl
mov
jb
rcrb
arpl
mov
add
mov
gs
cld
adc
insb
mov
jg
sub
dec
sub
gs
roll
das
cmpsb
push
xchg
mov
or
adc
xlat
and
add
sub
cmpsb
xchg
cmp
push
push
cmp
sbb
or
jge
xchg
push
and
loop
sub
mov
mov
popf
addr16
in
sbb
femms
pusha
xchg
jmp
push
sbb
je
jno
mov
fprem1
dec
push
frstor
pop
scas
hlt
push
loopne
cmp
int3
or
out
cli
es
fiaddl
std
test
jne
push
shlb
lahf
xchg
cmp
out
mov
cmpxchg
popa
mov
xchg
pushf
scas
mov
fwait
pushf
pop
lods
or
mov
insl
insb
adc
mov
movsb
add
leave
js
lret
adc
stos
cwtl
fistps
jae
test
imul
xor
int3
iret
jns
movsl
out
cli
int3
cld
movsl
jbe
cmpsb
or
xor
addr16
cli
in
in
push
outsb
inc
iret
jns
ret
sbb
mov
pop
out
out
fimuls
stos
xchg
sbb
cmp
add
add
mov
jmp
inc
mov
sbb
loope
jg
xchg
xchg
mov
sti
aam
hlt
enter
lock
cmpsl
xchg
leave
push
and
xorb
fisubs
inc
dec
scas
dec
or
loope
jl
xchg
or
mov
stos
pop
sbb
mov
mov
movsb
xchg
daa
fists
lock
xchg
fidivrs
pop
imul
test
mov
loop
jbe
in
pop
cmpsb
lret
call
rclb
inc
sbb
lea
shlb
and
icebp
add
lret
int
cltd
aad
ljmp
xor
xchg
cmp
add
pushf
sub
push
iret
test
xchg
fidivrl
jo
adc
das
outsl
mov
sar
gs
sub
in
hlt
shll
xchg
xchg
push
inc
mulb
sub
add
jb
in
ds
jns
aaa
lods
pusha
add
push
mov
pop
loop
or
fdivr
icebp
mov
mov
and
xor
sti
jns
orb
mov
ficomps
jmp
xchg
into
mov
int3
cmp
xor
insb
mov
je
insl
jge
icebp
jle
sub
jno
aaa
dec
xor
dec
mov
cltd
mov
cmp
sub
dec
stc
sub
insl
mov
test
or
jnp
imul
ret
add
xchg
push
push
dec
into
setb
imul
dec
mov
int3
lock
jecxz
ja
sub
cmp
mov
mov
xchg
jne
sbb
sti
jne
sbbb
int
fisubs
aas
sbbl
mov
mov
sti
scas
jmp
push
arpl
lea
adc
pop
add
add
cwtl
mov
push
sti
insl
repz
jns
and
jne
or
inc
shlb
in
std
adc
xor
cld
jle
xchg
sbbl
push
inc
cmpsb
out
add
xchg
inc
mov
xchg
ret
or
movsl
xor
stos
cmp
add
jle
and
icebp
xor
bound
mov
xchg
cmp
xor
jns
mov
gs
push
inc
lahf
out
push
mov
xchg
aas
ret
or
fistl
andb
in
adc
cmp
or
test
mov
in
jae
mov
push
test
dec
arpl
les
lds
lods
push
push
aad
popf
scas
out
cli
cmpsb
pop
inc
xchg
sub
sbb
mov
orb
stos
inc
cli
mov
xchg
push
popf
in
shlb
outsl
inc
inc
dec
lock
push
add
arpl
neg
mov
cmc
insl
xchg
fucomi
testb
ds
outsl
bound
add
push
aaa
aad
das
sbb
shrb
mov
movsb
push
gs
inc
cmpsl
pop
push
cmp
xchg
faddl
lret
popa
int
outsb
jg
push
std
inc
push
movb
jle
dec
dec
jge
clc
out
leave
jb
xchg
sub
jmp
outsl
in
sarb
into
mov
sbb
lret
rorb
mov
jnp
inc
jge
adcl
stos
stos
sub
cltd
adc
add
jo
mov
dec
adc
fldenv
rclb
cmp
int
popf
aad
out
add
mov
int
mov
rolb
insb
jge
inc
pop
sbb
cmp
in
adc
roll
imul
and
imul
xchg
add
pusha
leave
jbe
test
dec
add
inc
adc
js
pop
mov
popa
jmp
push
lahf
jl
mov
cmpsb
adcb
pop
mov
sub
add
mov
jp
and
or
lods
cld
mov
sub
sub
or
sbb
sub
aas
pop
inc
mov
jno
stos
loop
loop
push
mov
jae
pop
push
sbb
mov
call
ret
mov
xchg
aas
loop
pop
outsb
outsb
mov
das
fs
dec
sub
xor
cld
jmp
jmp
in
jge
sub
lret
int3
loopne
fs
mov
out
dec
stos
mov
adc
outsl
pusha
imul
decl
leave
aam
mov
insl
fcoml
jb
mov
mov
shll
lea
out
scas
adc
push
push
jmp
cmp
push
out
sbb
lret
or
js
mov
in
adc
push
push
stc
cmp
lea
and
mov
cld
xor
sbb
pop
popl
lret
testb
adc
lcall
bound
sahf
push
inc
push
fsubp
sbb
testl
adc
xor
rorb
sbb
fdivrl
jae
repz
adc
fldenv
ljmp
add
sbb
push
imul
xor
in
das
icebp
jbe
and
mov
fmuls
mov
push
nop
stos
scas
ffreep
pop
sbb
mov
xor
ljmp
aas
xor
inc
jbe
mov
mov
cmp
xchg
dec
mov
loope
push
in
pop
and
pusha
in
push
or
les
je
mov
sbb
cmp
js
jno
mov
out
xchg
loopne
mov
iret
dec
out
pushf
ror
stos
dec
fimull
inc
subl
nop
adc
stos
inc
int
cmp
adc
add
jnp
xor
pop
dec
data16
xchg
jno
iret
push
xchg
movsl
mov
pop
xor
cmp
mov
mov
ss
icebp
xlat
xchg
mov
mov
dec
xlat
int3
ret
pop
push
rcrl
dec
repnz
jp
into
or
dec
cli
cmp
cmp
xchg
cmp
movsb
push
and
rcrb
pusha
cmp
push
push
pop
lods
adc
stc
cmpsl
mov
jmp
sbb
jmp
sarl
icebp
pop
mov
push
lcall
jg
jne
mov
imul
clc
or
mov
lret
pop
push
shll
jg
add
pop
mov
adc
jb
pop
inc
jp
adc
cmc
mov
cmp
lock
cmp
xchg
enter
add
bnd
mov
lret
addb
sub
loop
jmp
push
test
insb
jne
fildl
or
je
addb
mov
stc
insl
test
and
loopne
pop
es
add
decl
shll
cltd
or
xchg
out
pop
push
adc
jecxz
fsubp
lods
inc
fildl
sub
jl
mov
mov
sbb
hlt
gs
and
aad
mov
stc
loope
std
push
daa
call
jbe
subb
insl
in
jecxz
xlat
adc
out
test
cmpsl
cld
push
xor
dec
test
int
jp
das
cld
rcl
adcb
mov
inc
aas
scas
and
rorb
mov
sbb
fsqrt
popa
lds
mov
out
push
push
cwtl
jne
cmpb
push
lock
loopne
test
sahf
sub
lods
mov
sar
add
and
or
out
push
pop
xor
bound
imulb
sbb
mov
xlat
cli
sbb
mulb
mov
clc
shrl
es
xchg
in
push
clc
cmp
outsl
hlt
mov
in
jmp
jl
out
xchg
rorb
ljmp
in
mov
sar
loop
test
pop
jne
out
fs
sub
inc
cmpsb
mov
movsb
push
ret
je
push
insl
cmp
inc
fstl
mov
out
ret
adc
and
in
scas
hlt
cmpb
ret
xchg
push
cmp
mov
repz
add
icebp
adc
addr16
adc
mov
or
jl
cwtl
fs
lahf
nop
rcr
push
pushf
and
fdivrp
mov
fmuls
mov
out
or
push
popa
in
jne
out
xchg
push
inc
lea
stc
inc
adc
push
test
and
imul
cmp
ljmp
repnz
sbb
mov
jp
loopne
push
fisttpl
leave
dec
icebp
popf
mov
adc
ljmp
add
sti
movsl
xor
xchg
inc
popf
mov
sbb
sbb
ds
fidivrl
repnz
push
out
jecxz
mov
and
mov
jns
mov
and
stc
push
cmp
insl
ror
cld
test
mov
divb
popf
mov
xor
mov
xlat
pop
inc
adc
inc
sbb
push
fstps
jmp
shll
jle
mov
nop
gs
or
mov
cmp
aam
insl
pusha
cmpsl
loop
or
insb
aas
imul
add
mov
cmp
data16
add
in
idiv
ficompl
mov
in
repnz
push
add
pand
sub
not
aaa
icebp
jo
push
jno
xlat
mov
aas
int
push
shr
stos
push
cmp
stos
push
cmp
rcll
dec
adc
jmp
pushf
outsb
fs
imul
mov
push
cmp
arpl
icebp
and
push
outsl
es
adc
inc
pushl
mov
fwait
or
mov
ja
insl
ss
mov
xor
out
les
sbb
lods
in
aas
mov
sub
mov
js
mov
test
mov
loopne
jno
and
xlat
nop
sub
sti
out
cmpsb
fnstenv
xchg
ljmp
jne
dec
sbb
pushf
xlat
adc
sub
xchg
mov
call
push
mov
mov
adc
popf
in
adc
out
jae
sub
inc
jnp
iret
js
pushl
arpl
sbb
sahf
xchg
inc
push
and
and
xchg
stos
cld
shll
or
jge
repz
hlt
addr16
xor
add
xchg
mov
pop
lret
nop
mov
jae
fldenv
xchg
mov
lcall
sub
sbb
iret
vpshuflw
and
sbb
add
adc
cltd
rcl
jp
hlt
mov
popf
inc
xchg
xchg
mov
dec
dec
inc
stc
shll
adc
mov
ljmp
jmp
lds
cmpsb
test
les
adc
repz
sbb
xchg
sub
sahf
cmp
adc
aas
test
clc
jecxz
ret
sti
inc
rorl
push
or
and
frstor
nop
mov
ret
or
out
cmp
mov
sbb
jno
outsb
and
xor
inc
sti
xchg
adc
xchg
mov
mov
jl
xchg
sbb
fisttpll
daa
sbb
sub
popa
dec
push
in
out
leave
imul
xchg
imul
mov
arpl
mov
push
cmpsb
jge
stos
push
or
scas
jecxz
or
out
roll
sub
jns
or
cmp
push
xor
inc
hlt
popf
add
pop
pop
in
cld
and
xchg
scas
scas
jbe
adc
cwtl
movups
xor
jge
pop
mov
mov
pop
mov
arpl
out
sub
mov
dec
insb
or
ds
push
les
mov
stos
nop
inc
jnp
push
lock
leave
jb
call
push
mov
mov
jmp
das
divb
int
mov
push
jp
aad
xlat
in
sub
mov
cwtl
pop
push
outsl
cwtl
fimull
shlb
loop
out
xchg
cmp
lcall
std
dec
adc
mov
push
add
and
popl
push
jnp
or
mov
adc
lcall
pusha
jbe
clc
sub
aad
mov
movsl
adc
popf
cmp
or
sub
das
loopne
popf
es
fildll
jo
sbb
sub
push
aaa
sbb
ljmp
stos
jae
sar
xorb
sub
subb
ret
push
sbb
out
std
xor
into
push
mov
or
loope
inc
popa
pusha
cmp
add
cmpsb
imul
ljmp
push
adc
icebp
in
xor
insl
out
jns
mov
lds
pop
sub
lcall
jge
lret
jb
sub
jo
icebp
push
add
insl
bound
xlat
std
sbbl
insl
sub
and
pop
jg
paddusb
lock
repz
pop
idivl
ljmp
cli
dec
mov
sub
mov
je
mov
loop
and
ja
test
test
test
cmp
cmp
add
mov
movsb
adc
sbb
add
loope
pop
or
test
cmp
idivl
ja
jne
and
pop
loopne
dec
add
cmp
xor
inc
adc
loop
lcall
stos
jbe
pop
stc
imull
mov
mov
sbb
ret
call
enter
movsb
xchg
rcrb
inc
shll
xchg
test
fldl
lret
dec
add
pop
jb
ss
dec
mov
xor
cwtl
arpl
push
xchg
cwtl
mov
pop
ret
dec
mov
js
into
es
aas
ret
sti
rorl
cmp
jnp
mov
testl
cmc
inc
sbb
fidivrl
cltd
dec
cmpsl
pop
cmp
out
and
in
sub
mov
pop
inc
sub
nop
mov
mov
loop
xchg
shrb
imul
add
jne
sub
mov
mov
add
adc
pop
jne
mov
popa
pusha
outsl
xor
inc
lret
adcl
or
add
popa
pop
mov
sahf
aas
aam
or
xchg
js
imul
mov
lods
sti
adc
stos
cmp
mov
dec
pop
adc
call
mov
call
xchg
mov
lods
ficoml
add
lret
pop
add
and
or
in
in
test
push
jne
add
or
test
sub
lret
leave
jb
data16
xrelease
xor
movsb
aaa
cmpsb
outsb
das
int
cwtl
arpl
loopne
mov
ret
rclb
movsb
mulb
clc
cwtl
adc
mov
cmp
xor
and
mov
xchg
enter
in
adc
insb
push
ss
or
in
dec
jl
adc
pushf
lea
cmpsb
mov
ds
push
sti
or
pop
xor
inc
mov
in
cmc
sub
adc
mov
or
cld
leave
enter
fsub
mov
popa
sbb
jp
sbb
push
cmp
add
jmp
int3
popf
dec
sahf
sub
stos
adc
hlt
xchg
lret
jmp
pop
out
cmp
and
lret
fisttpl
inc
lret
sbb
fdivs
lret
add
sbb
nopl
loope
fadds
fcmovne
dec
pop
jo
sub
fs
fwait
lods
mov
add
fildl
repnz
aaa
mov
stos
data16
push
inc
mov
mov
pop
inc
mov
aam
xor
xchg
popf
xor
push
push
jge
pop
lock
incb
jno
ds
pmulhw
popa
faddl
add
adcb
loopne
or
mov
fcomi
xor
pop
ficoms
repnz
cmpsb
imul
fld
push
pusha
cmp
xchg
std
xor
in
and
push
mov
push
xor
adc
mov
pop
cmpsb
or
testb
and
mov
mov
push
mov
xorl
pop
mov
jae
das
add
ror
pusha
mov
and
xchg
cmp
xchg
rcr
jns
fisttpll
add
outsl
pop
pusha
xor
pop
imul
fisubl
loopne
xchg
ljmp
fistpll
test
movsl
js
js
and
iret
pop
cmp
add
dec
mov
adcl
faddl
cwtl
mov
std
repnz
stos
bound
pop
pop
nop
imul
stc
loopne
lods
adc
sbb
jno
add
mov
cmp
adc
imul
loope
push
jo
add
mov
insb
es
rcl
outsb
shrb
push
lock
push
shll
jmp
in
cmp
push
cmp
filds
xchg
dec
ret
jge
negl
jmp
push
dec
adc
fs
js
imul
and
enter
lcall
test
into
adc
mov
rcr
out
pushf
pop
sbbl
xchg
push
xchg
push
shl
lahf
outsl
and
inc
jo
dec
sbb
cwtl
scas
push
and
rcr
daa
or
xchg
outsl
mov
fs
jbe
and
nop
aam
cmpsb
test
or
inc
dec
xchg
ljmp
xacquire
out
push
cwtl
xor
jg
mov
mov
cmp
cmp
mov
sarb
adc
and
ret
mov
jle
sbb
mov
push
ja
inc
cmp
js
add
outsb
inc
jg
xor
push
inc
addr16
xchg
cli
mov
pop
push
ret
xchg
and
push
bound
inc
add
ss
and
lret
inc
mov
ljmp
add
pushl
xchg
ret
icebp
test
stos
mov
pop
mov
and
pop
pop
mov
xchg
cmpb
movsb
leave
ds
fdivl
sub
adc
fs
subb
rcll
xchg
loope
or
fisubs
outsl
inc
and
arpl
test
push
stos
push
xchg
insb
adc
mov
sub
in
or
pop
sub
subb
aad
imul
push
sub
mov
fldenv
pop
mov
cmc
aam
out
cmp
mov
push
cmp
push
inc
inc
add
push
out
or
mov
mov
jmp
cmp
dec
xchg
mov
and
aaa
cli
call
rorl
movsl
dec
dec
xchg
add
aad
xor
push
pop
icebp
ret
aas
jne
jmp
push
scas
cld
das
mov
repz
cwtl
aam
pop
pop
mov
cltd
mov
imul
fidivl
int3
add
pushf
subl
stos
add
arpl
adc
jmp
lock
xchg
mov
mov
jnp
and
cmp
cmp
sub
fldcw
imul
test
cwtl
bound
push
mov
movsl
mov
mov
ljmp
ljmp
mov
popf
push
imul
or
movsb
cmc
pop
popa
fisttpl
je
movsb
jge
inc
in
and
xchg
addr16
mov
mov
add
out
je
pushf
scas
jp
sbb
stos
lods
fincstp
push
mov
into
mov
xchg
ficoms
sub
gs
mov
les
jb
js
repz
movsl
mov
in
das
mov
into
xor
add
leave
mov
cmp
pop
fdivr
pop
inc
mov
sbb
inc
insb
dec
mov
daa
mov
arpl
incl
cs
mov
or
pop
mov
jnp
mov
addb
mov
mov
sub
filds
lahf
gs
aaa
ss
pop
imul
inc
jb
sub
pop
sub
push
jne
mov
adc
mov
push
sub
out
inc
hlt
aaa
stos
cmp
sti
sbbl
mov
pop
imul
pop
in
jb
sbb
push
adc
push
jb
and
push
xlat
add
enter
cmpsl
sub
inc
lea
xchg
mov
sbb
xor
sarl
les
add
sbb
and
adc
jle
insb
pop
push
pop
mov
jl
cmp
xchg
rorl
and
fs
jge
pop
movsb
stos
xor
xor
imul
mov
cwtl
and
movsl
dec
dec
inc
mov
sub
ds
fcmovu
cmp
mov
push
test
mov
xlat
lods
push
xchg
bnd
and
xchg
cmp
imul
sbb
pop
push
test
pop
mov
mov
pop
inc
fwait
xor
cmp
mov
mov
or
cmp
push
repz
cli
dec
pop
gs
ret
bound
inc
and
outsl
sbb
popf
xchg
dec
rorb
mov
out
mov
mov
xchg
xchg
arpl
lret
sbb
nop
cmp
pop
lds
aas
addr16
push
pop
rcl
cmp
cmp
stos
nop
and
loop
dec
sbb
sbbl
push
daa
pop
adc
repnz
add
mov
push
mov
inc
rorb
dec
rcll
push
std
xchg
outsb
pop
mov
jne
xchg
push
incb
hlt
xchg
lock
mov
out
cltd
inc
mov
push
add
frstor
das
insb
xchg
fisubrs
loope
scas
xchg
data16
xor
jg
pusha
das
das
cli
xchg
xchg
addl
jecxz
dec
out
cwtl
xlat
mov
fiaddl
daa
jl
loopne
int3
in
add
jns
insl
cmp
aad
shl
jl
in
xor
mov
int3
jecxz
dec
push
cmp
push
scas
das
push
pop
cld
cmp
mov
sub
cmc
mov
mov
jae
cmpsb
xchg
pop
aaa
jbe
push
or
mov
jno
jne
xor
jge
test
and
mov
inc
and
lods
or
inc
lret
loopne
movsb
mov
scas
cmp
mov
mov
jl
pop
imul
add
mov
xchg
stos
leave
movsb
iret
dec
out
scas
stos
insb
sbb
mov
hlt
mov
add
mov
pop
testl
scas
jno
cli
lods
push
sti
xchg
test
sbb
leave
push
mov
movsb
mov
ret
outsl
xchg
and
sbb
sub
adc
add
inc
mov
popa
add
push
fstl
insl
jl
dec
jl
jg,pn
inc
cld
dec
in
aas
inc
cld
dec
popa
movb
aaa
adc
xor
xor
jmp
fcoml
shlb
push
dec
test
movsb
cli
inc
add
push
and
sub
xchg
mov
jmp
xchg
fisubl
outsl
mov
sbb
push
or
jns
xor
repnz
fmul
pop
and
lret
add
cwtl
je
xchg
mov
jmp
jne
sub
and
pop
cmc
stc
aas
jge
xor
fstpl
push
mov
sbb
add
sub
mov
outsb
adc
lcall
lea
xchg
int3
or
jg
jmp
fwait
push
lret
mov
add
lret
lahf
popf
cmp
cmp
outsl
xchg
xor
mov
arpl
add
in
mov
lock
add
xchg
inc
aam
int
xlat
inc
inc
lock
pop
add
mov
push
ret
shlb
popf
jl
adc
xlat
ja
stc
mov
xchg
add
pop
mov
stc
fs
ds
inc
test
hlt
mov
shlb
xor
in
test
sahf
scas
add
or
jmp
enter
repz
fsts
popf
cltd
push
add
jmp
pop
sbb
out
push
mov
cmp
mov
repnz
dec
lock
jns
mov
jbe
mov
ljmp
inc
pop
adc
mov
pop
dec
and
fdivrs
push
testl
mov
or
cmpsl
ret
loop
mov
jg
cmp
push
js
out
insl
or
xor
out
addr16
mov
lret
and
outsl
xchg
dec
mov
cmp
stos
aas
dec
lret
jle
or
dec
lcall
outsl
iret
xor
adcl
sbb
mov
je
jg
repnz
in
jns
cmp
push
aas
jbe
pop
dec
or
adc
enter
loop
imul
ljmp
xchg
dec
mov
std
std
pop
clc
mov
std
stos
movsl
sbb
sub
mov
jbe
cmpsl
cmp
push
ss
dec
add
push
sbbw
jno
loop
push
into
sti
lods
das
sarb
lods
push
inc
and
fsubrl
add
out
push
pop
fwait
mov
xlat
sub
sbb
xor
pop
and
movsb
adc
insl
pop
sti
jo
push
adc
fwait
and
jg
inc
imul
adc
jmp
test
mov
in
imul
xor
andl
jne
mov
cmc
test
leave
bnd
cltd
mov
stc
pushf
add
daa
or
int
adc
scas
adc
add
or
loope
aam
jmp
dec
push
mov
dec
gs
icebp
pop
clc
jo
popf
cmp
inc
cwtl
je
int
test
and
nop
jl
lea
fwait
out
push
and
mov
adcl
insb
jbe
clc
jle
xchg
mov
test
sbb
mov
cmpsb
dec
xchg
xor
xor
enter
in
mov
mov
add
jle
cwtl
mov
fstpt
dec
scas
lret
stc
xor
bound
das
and
lret
xchg
or
ljmp
aaa
mov
xchg
dec
stos
jnp
pop
rclb
xchg
push
jl
enter
rcrb
ror
adc
aad
add
or
insb
or
jg
daa
push
add
rorl
xchg
pop
fucomi
out
jecxz
ja
mov
gs
sub
push
push
dec
sti
je
int
outsb
mov
test
stos
orb
jae
and
mov
test
daa
push
add
fwait
mov
sbb
pop
or
insb
lds
jo
test
sbb
cmp
or
sub
cmpsl
daa
jbe
pop
mov
jecxz
out
shlb
repnz
cli
in
xchg
and
mov
aas
jp
mov
loop
lea
xchg
test
mov
jp
rcll
jb
push
adc
push
sahf
in
rdpmc
and
jp
add
pop
lahf
xor
or
lret
iret
sub
push
xchg
mov
jo
push
subb
push
sub
and
push
inc
fstpt
xor
add
jp
xor
arpl
mov
outsl
or
xor
mov
dec
loope
fiadds
aaa
gs
jmp
aas
push
stc
jmp
and
xchg
test
mov
add
fwait
cmp
jmp
jge
orl
cmp
sbb
sti
aad
or
jl
pop
movsb
sub
int
mov
sub
dec
xchg
lea
adc
aam
in
push
in
fsubs
add
sub
or
pop
push
in
cld
js
test
adc
xchg
nop
lahf
loop
lods
das
shlb
jbe
xor
xchg
bound
cltd
cmpsl
orw
cmp
jo
cmpsb
mov
or
out
outsl
mov
imul
inc
inc
repnz
xor
sahf
testl
mov
rclb
lret
scas
push
xchg
lods
loope
pop
fwait
data16
mov
adc
in
and
adc
pop
and
jne,pn
jge
push
lods
inc
mov
test
xchg
ret
int
in
push
stos
lods
cs
sbbl
out
lcall
imul
aaa
mov
mov
jge
push
movsb
fimuls
cli
sub
outsb
cmp
mov
xorb
out
ret
mov
xor
mov
addr16
test
xchg
sub
mov
mov
sbb
push
outsb
or
mov
add
dec
aam
mov
cmpsb
iret
cli
ret
inc
aam
and
js
call
outsl
sti
mov
ljmp
imul
movsb
lds
inc
fldt
adc
fimuls
ljmp
mov
stos
cmpsb
out
jns
js
sbb
jge
lret
pusha
cmpsl
out
or
arpl
adc
mov
push
std
mov
adc
bound
fbstp
in
and
xlat
ss
or
addb
je
jo
mov
pop
pop
std
add
fbld
and
add
add
aas
scas
dec
mov
fcmovne
adc
sub
sbb
aaa
jmp
or
sbb
push
das
fwait
push
aaa
mov
dec
dec
sbb
dec
sbb
mov
xchg
xchg
mov
mov
std
and
mov
imul
inc
inc
in
jecxz
pop
pusha
loope
test
add
mov
daa
add
lcall
pushf
movsb
push
mulb
repz
lock
iret
sbb
cmpsl
out
sbb
repnz
xchg
mov
sbb
pop
push
lea
pop
adc
fstp
ficoms
lock
fwait
jo
sub
mov
and
sub
inc
outsb
jge
xor
jne
rcr
adc
ficoms
pop
mov
xchg
dec
repz
cmpsb
dec
pop
cmp
dec
push
lods
aaa
mov
push
call
jae
dec
cmp
sub
push
adc
inc
push
lea
mov
div
in
ja,pt
dec
cltd
pushf
stos
sub
or
xor
or
push
xchg
adc
fmull
sti
or
adc
mov
outsl
dec
test
xchg
cmp
xor
mov
cmpsl
fs
in
jmp
cmp
sub
push
adc
pop
cmp
in
ret
xchg
push
lods
cmp
outsl
daa
or
in
test
mov
mov
and
fistpl
sbb
jg
or
and
hlt
cmp
mov
addr16
mov
lods
jno
push
or
cmpsl
leave
sarb
sub
stc
data16
lcall
clc
and
stos
fsubrl
or
dec
mov
lock
xchg
lret
xchg
mov
mull
push
mov
jne
cltd
incl
ja
into
inc
lea
sub
adcl
fsubl
inc
testb
cmp
sub
movsb
mov
int
incb
into
mov
fsubrs
subb
repnz
mov
push
fdivrl
jo
out
lea
and
pop
movsl
xor
jnp
scas
jle
mov
mov
push
jmp
mov
push
in
insl
fadds
or
inc
rcrb
xor
inc
arpl
lcall
loopne
loope
shld
inc
cmp
adc
inc
mov
into
pop
icebp
pop
jl,pt
in
mov
aaa
jge
jle,pn
cmpsb
sbb
mov
dec
addr16
or
and
mov
mov
test
je
aaa
mov
push
inc
cltd
mov
jmp
insl
into
fldcw
ja
add
stc
push
and
inc
popf
xor
jg
es
inc
jb
outsl
out
mov
dec
jecxz
test
daa
popf
shll
xor
push
jbe
xchg
insb
iret
add
add
push
ret
insb
or
lds
pop
push
incb
lods
test
ds
add
jmp
add
pop
pop
js
popa
xchg
jo
divl
std
sbb
add
movb
cwtl
dec
push
pop
or
push
mov
sub
cmp
clc
sbb
stc
adcb
dec
xchg
test
add
dec
das
fisubl
sahf
es
stos
gs
sbb
push
cmpsb
sti
stc
push
hlt
inc
xor
aaa
pop
or
xor
push
popf
rcr
sbb
or
and
shll
jbe
lcall
subl
lahf
sub
int3
je
xchg
dec
or
or
jo
or
adc
mov
jns
or
jnp
dec
arpl
sub
push
shl
xlat
into
in
dec
jne
mov
mov
inc
add
push
test
lret
hlt
mov
jb
lock
aad
ret
or
rcl
mov
mov
movsl
fisttpl
cli
push
stc
push
push
stc
inc
shr
mov
popl
clc
push
stc
dec
fidivrl
mov
daa
mul
jmp
inc
pop
in
xor
aaa
add
ss
mov
cmp
and
je
cli
sbb
cli
mov
std
mov
push
push
lds
loop
adc
std
fsubl
outsb
in
xor
out
mov
cmc
jnp
mov
repz
fcompl
adc
insl
xchg
leave
or
mov
out
push
xlat
pop
xlat
fisttpll
xor
push
in
push
mov
jge
pop
das
insb
orps
lods
popa
int3
lret
sbb
addr16
loopne
sub
or
jb
and
cmpsl
mov
xchg
adc
xchg
xchg
clc
mov
rolb
cmp
xchg
push
call
test
lea
xchg
push
es
jno
shll
lret
mov
inc
rolb
repz
pop
das
leave
xchg
jae
jnp
mov
fsubr
mov
inc
jge
push
lock
cmp
cld
lret
aam
js
rcr
xchg
notb
rorl
cltd
mov
popf
jp
dec
pop
test
sub
std
repz
loop
ret
sub
push
std
mov
cmp
xchg
popa
mov
and
fdivl
shrb
and
xor
jo
ret
mov
cmp
mov
dec
cmp
xor
int3
mov
movsl
push
mov
popf
scas
jle
xchg
push
jp
hlt
ja
pop
mov
push
add
add
pusha
adc
into
popa
jg
imul
jle
adc
or
fistpll
aad
ret
push
mull
xor
pop
sub
sahf
pusha
push
cmp
lcall
mov
aaa
sbb
dec
mov
cs
bound
jecxz
push
int
std
out
mov
cmp
aad
enter
mov
add
fxtract
add
popf
adc
cmp
xchg
mov
sbb
loopne
mov
xlat
xchg
xchg
insl
xchg
sbb
inc
sbb
leave
push
adc
inc
je
mov
mul
loop
xor
sbb
and
sbb
xchg
and
or
jecxz
push
dec
out
xchg
repnz
std
mov
outsb
add
stc
or
sub
lret
inc
mov
sub
jne
rcrl
mov
out
mov
mov
cmp
clc
adc
mov
xor
test
clc
bound
dec
fnstsw
das
cli
add
lret
xor
stos
jecxz
lods
loop
pop
insl
shrl
or
or
jecxz
pop
in
mov
dec
lock
dec
rcrl
out
xor
jae
imull
mov
xchg
mov
mov
outsb
mov
into
jl
mov
js
sub
or
out
outsb
aad
cmpsl
xor
adc
out
testl
mov
rorb
and
ret
movsl
sets
outsl
sbb
fwait
imulb
jg
mov
jl
mull
jb
pusha
jl
iret
and
out
ss
mov
pusha
sub
insl
int
pop
ret
jo
mov
mov
gs
les
push
movsl
stos
out
cltd
test
mov
jp
test
stc
std
cmp
sub
addr16
add
jecxz
lds
loop
mov
ljmp
iret
mov
fisubrs
test
imul
push
test
pop
lret
mov
pop
and
test
fsubrl
xchg
push
adc
cmp
enter
adc
push
jo
or
push
and
outsb
cmp
cmpl
lds
and
add
push
mov
xchg
and
jbe
cli
jmp
lds
sub
pusha
hlt
aad
loop
repz
outsl
xor
cltd
mov
loope
mov
jle
cs
mov
sbb
addr16
mov
rorb
xor
stc
popf
loopne
jb
mov
das
dec
pop
lds
and
or
and
scas
inc
add
stos
ss
aaa
packuswb
or
jnp
bound
int3
cmp
cmp
repz
lods
pop
mov
rcr
mov
movsl
outsl
ret
shll
xchg
sub
cmc
iret
jge
das
or
lcall
push
push
cmp
ja
lods
inc
loope
xchg
repnz
mov
cmp
addr16
notb
mov
dec
insl
mov
xor
adc
ss
in
dec
loope
gs
lret
adc
jl
psubusw
adc
in
in
inc
inc
arpl
fucomp
cmpl
lahf
lcall
pushf
out
test
mov
xlat
test
icebp
aam
dec
into
sar
movsl
ljmp
sarl
mov
stc
sahf
push
aad
xchg
popa
pop
push
stos
push
loop
in
js
imull
push
mov
mov
jg
inc
pop
rcrb
push
int3
adc
sahf
sub
xlat
lea
fildl
std
stos
xchg
repnz
jg
push
je
dec
ret
cs
adc
popa
popa
push
or
mov
enter
in
mov
cmpl
addb
jns
xchg
cmp
mov
sbb
arpl
push
jg
int
push
push
imul
sbb
jecxz
or
rcll
jecxz
pop
in
enter
cmp
adc
mov
mov
add
loop
sbb
push
clc
pop
std
push
pop
cmp
push
push
std
or
inc
jecxz
movsb
gs
xor
pop
repnz
jmp
xor
jae
adc
cmp
insb
stos
lret
adc
xor
push
cmpsl
mov
jl
jl
cli
js
insl
int3
xor
xchg
push
ret
push
push
popf
xchg
jecxz
dec
leave
shrl
pusha
push
mov
sub
push
xchg
in
addr16
xor
pop
add
inc
and
pop
ret
mov
fsubrl
stos
call
add
fcmovne
xor
pushf
aad
into
mov
fwait
adc
mov
and
ret
xor
sub
xor
pop
lock
cmc
repnz
mov
aas
test
aas
jle
add
inc
pop
jnp
or
pop
loopne
sahf
idivl
arpl
cmp
sub
mov
jno
mov
sub
jmp
mov
xchg
jne
insl
pop
xchg
adc
jecxz
pop
dec
mov
pop
imul
mov
movb
dec
iret
adc
jg
mov
gs
lock
mov
mov
clc
test
cld
jg
test
mov
roll
pcmpeqw
dec
and
je
in
sub
and
pop
cmp
dec
mov
outsl
lds
mov
flds
push
aam
hlt
sti
dec
nop
pop
cmc
jne
push
aaa
jecxz
std
dec
ret
add
arpl
pop
lahf
and
lret
mov
incl
enter
out
cltd
leave
fcoml
pop
int3
aam
ffreep
sub
dec
lret
xor
mov
xchg
popa
inc
out
in
push
repnz
xchg
jns
mov
fcompl
imul
sbb
insb
sbb
and
sarl
add
mov
adc
pop
les
lock
orl
sbb
loope
imulb
lods
sub
outsb
sarl
push
add
add
stos
mov
xchg
add
inc
xchg
push
cmp
pop
imul
lret
cld
in
mov
dec
push
jge
daa
add
mov
insb
and
js
push
jae
insl
lret
fwait
loopne
shlb
lret
clc
decl
pushf
mov
in
or
and
inc
mov
lahf
xchg
push
mov
in
sti
fnstcw
lock
mov
shl
shl
xchg
jecxz
sbb
das
mov
inc
dec
xchg
mull
and
xchg
jle
add
out
ret
sbb
mov
jns
add
pop
mov
cld
xchg
lods
js
scas
movl
aaa
inc
daa
lret
in
push
sub
cwtl
inc
adcl
sbb
repz
orb
lcall
out
nop
mov
sub
sti
jae
push
jns
insb
mov
mov
out
lret
jb
or
das
inc
push
xchg
mov
or
add
mov
gs
sti
push
int3
ljmp
mov
vmovshdup
mov
xchg
mov
ja
mov
lcall
push
or
jp
movsl
mov
ljmp
imul
inc
jo
out
mov
aaa
jmp
call
push
lods
mov
cmp
mov
fcomps
jg
mov
xchg
and
mov
or
mov
mov
cmc
xchg
lods
push
sbb
inc
cmovb
sub
sbbl
or
and
sahf
xor
xchg
mov
push
mov
xchg
jns
adc
int3
add
out
int3
or
fistpll
adc
mov
arpl
jae
aaa
xor
lock
aaa
outsl
mov
in
repnz
ret
scas
push
repz
lcall
and
sub
icebp
push
cmpb
lahf
push
out
cli
mov
movsl
cmp
arpl
adc
mov
xor
jnp
scas
les
lret
mov
in
sub
push
imul
jns
inc
pop
aas
aas
cwtl
xorl
cmp
fwait
sub
call
inc
sbb
jp
xchg
xor
and
pop
mov
mov
sub
lea
jp
mov
dec
pop
or
pop
push
out
dec
push
test
cmp
fistl
mov
add
aas
cmpl
aam
jle
nop
fwait
shrb
mov
cmpsl
aad
sbb
cmp
lea
pop
pop
jbe
pop
add
jecxz
aam
cmp
adc
mov
add
cs
out
ja
dec
push
out
jge
push
jo
or
xchg
push
insl
test
adc
stos
cmp
pusha
mov
ja
loop
push
sub
xor
jae
or
imul
ficompl
leave
lock
pop
pop
and
addr16
imul
test
fcoms
sahf
pop
jno
push
popf
pop
push
mov
mov
push
into
movsl
xchg
sbb
movsl
lret
sub
sarb
inc
push
gs
mov
or
das
mov
xlat
divl
xchg
lea
and
pop
test
push
mov
pop
stc
mov
icebp
cmp
sub
adc
push
or
mov
out
dec
stos
cmp
jae
push
or
dec
rcrl
fstpt
xchg
xchg
cli
mov
les
fcompl
mov
xchg
shll
js
out
xor
rorb
mov
or
dec
repz
outsl
pop
vpcmpgtb
xchg
mov
cmp
xor
xchg
jnp
adc
jl
dec
xchg
add
sub
popa
xchg
mov
ds
or
lret
out
shll
into
enter
sub
mov
adc
add
inc
sbb
mov
xchg
je
dec
inc
repnz
xchg
daa
inc
outsl
sti
inc
push
mov
mov
pop
sarb
mov
lods
cmp
inc
daa
jmp
inc
out
mov
movsb
sbb
or
mov
mov
repnz
jne
xor
pop
jge
in
xchg
lods
sbb
pop
subb
xchg
cli
mov
popf
loop
icebp
sub
sarb
lret
iret
lret
sub
jle
cmpsl
rol
dec
cmpsb
or
lcall
clc
push
xor
sbb
fwait
gs
rorl
mov
test
mov
push
addr16
jb
sti
add
push
insb
mov
scas
mov
clc
push
cmp
in
lret
call
or
adc
das
mov
into
push
test
add
in
adcb
sub
enter
fists
fnstsw
mov
inc
dec
mov
pop
mov
inc
fsubrl
add
out
mov
lock
cmpsb
mulb
fucomp
out
push
rclb
mov
cmp
or
cmp
push
rorl
add
push
mov
push
pop
adc
loopne
scas
stc
add
stos
ljmp
lea
rorb
mov
sbb
clc
and
lea
arpl
dec
dec
pop
or
fwait
sbb
rcll
add
push
insl
imul
mov
stos
push
mov
aaa
ja
fs
jbe
in
mov
mov
data16
pminsw
insl
add
cmp
adc
rcr
pushf
or
pop
outsb
insb
mov
jae
mov
jmp
xchg
and
out
mov
cltd
sub
in
and
mov
jae
mov
insb
in
or
or
outsb
loopne
cmp
hlt
mov
adc
sbb
or
cli
and
gs
push
cltd
cli
mov
out
mov
add
sarl
add
scas
dec
cmp
add
popf
pushf
pop
jnp
mov
gs
cmp
adc
nop
xchg
aaa
fsubrl
iret
jg
cli
xchg
xor
dec
cmp
mov
lahf
cmpsb
mov
jne
dec
bound
and
sub
xchg
fs
enter
adc
aam
xor
push
movsb
lahf
sahf
adc
jp
shlb
cmp
xchg
push
insl
cs
es
leave
adc
jmp
and
lcall
or
mov
mov
loop
mov
in
test
dec
shll
inc
mov
addr16
stos
add
inc
sub
fnstsw
inc
sub
mov
leave
sbb
jne
cld
std
shrl
inc
pop
test
sti
js
and
arpl
hlt
push
loope
sarb
fwait
jo
addr16
mov
in
mov
push
rolb
cmpb
arpl
push
xchg
mov
xchg
push
repnz
lret
push
aas
insl
js
js
cmpsl
bound
arpl
mov
pop
xchg
nop
sub
pop
add
hlt
mov
mov
cmp
lock
cmpsb
scas
fdivrs
xchg
test
mov
push
shr
lods
sbbl
lcall
xor
addr16
push
ljmp
jae
inc
fs
mov
fadds
fisttpl
incb
push
adc
inc
push
into
lcall
sub
fisubrl
mov
or
add
jae
mov
fabs
mov
inc
xchg
sete
paddq
ss
js
or
xlat
sbb
xor
mov
out
inc
cli
and
mov
push
cmp
mov
jmp
dec
in
mov
mov
cmc
mov
or
adc
jge
gs
adc
mov
dec
adc
mov
lret
jg
add
ljmp
inc
pop
leave
push
and
mov
sbb
popf
xorl
cmpl
fidivl
loope
hlt
mov
pop
mov
aaa
push
cmp
scas
test
mov
dec
or
xor
aam
xor
int
idivb
and
ss
loop
je
inc
cmpsb
lods
sub
rol
sub
out
xor
dec
std
aaa
mov
jl
mov
push
andl
sbb
jmp
bound
popf
and
cmp
clc
imul
pop
and
ljmp
mov
not
cmpsl
xor
fstps
ret
ror
add
cmp
sbb
movaps
inc
imul
sbb
cmc
or
pusha
pop
push
fs
jl
in
movsb
imulb
xchg
or
mov
inc
add
adcl
rcrb
cmpsl
mov
stos
sub
bound
or
sahf
imul
and
jge
add
mov
jnp
test
scas
loopne
xor
ja
test
jecxz,pn
mov
mov
lret
stos
adc
rcrb
jp
sbb
stos
add
xchg
jmp
lods
cmpl
rcl
in
mov
xlat
add
imul
adc
jne
xchg
pushf
jae
push
pop
adc
pop
push
ja
mov
repnz
mov
inc
or
mov
mov
mov
cmp
sbb
push
add
sbb
cld
mov
jg,pn
cltd
mov
push
inc
aam
pop
mov
imul
mov
lret
jae
fnstenv
jbe
jmp
idivl
stos
inc
fbstp
sti
jmp
scas
rol
stos
aas
mov
pop
jle
pop
add
outsl
or
push
jmp
dec
jns
incb
lret
mov
ret
adcl
jl
into
adc
jecxz
sub
lods
jg
sub
int
mov
mov
adc
in
loopne
arpl
push
lea
fidivrl
insl
and
pop
jp
jge
int
movsb
pop
je
mov
or
mov
cwtl
cmp
stos
sub
testl
adc
jb
push
xor
sbb
cmc
mov
in
jecxz
cmc
fcmovnb
loopne
int
mov
jmp
enter
movsl
ja
outsb
mov
pop
jnp
mov
scas
mov
pop
xor
adc
cmp
push
dec
xor
dec
mov
dec
mov
and
rcrb
xchg
lds
xchg
dec
stos
lods
mov
and
daa
mull
call
jne
bnd
sub
adc
lret
out
sti
jno
jecxz
leave
out
jae
xchg
xchg
ficoml
lods
adc
mov
sarb
lea
lods
cmp
adc
jae
mov
sbb
xchg
addl
cs
gs
sub
testb
push
push
cmp
lods
mov
jne
and
fnstsw
int3
adc
leave
mov
icebp
rcrl
sub
mov
pop
mov
or
xchg
jns
fnstsw
dec
adcb
cmp
mov
imul
insb
and
jecxz
cmp
call
lds
and
cltd
fmull
in
mov
aas
fs
mov
je
mov
mov
cwtl
or
lock
rcrl
push
jnp
cmp
mov
adc
shrb
mov
adc
mov
xor
pop
hlt
sub
sub
ljmp
sbb
and
movsb
mov
testb
cmp
cmpsb
add
cld
and
out
sub
or
inc
and
enter
dec
and
inc
cld
pop
cmpsl
push
mov
jo
dec
mov
fwait
xor
popa
jne
xchg
in
stos
loopne
in
sbb
adc
call
cmc
add
int3
cmp
push
inc
xchg
mov
adcb
aaa
dec
sbb
inc
je
xchg
fdivp
pop
xlat
jne
inc
aaa
sub
mov
sub
sub
sbb
sbb
popf
or
icebp
lea
mov
adcb
imul
cmp
ret
add
loopne
sbb
sbb
jns,pt
jo
pusha
fldt
add
shl
cmc
push
scas
nop
cmp
dec
stos
push
loope
int3
sbb
and
cmp
or
xchg
aad
mov
sbb
fs
das
mov
dec
test
ljmp
aas
aas
popa
in
cwtl
lret
mov
pcmpgtw
sbb
pop
fcmovnb
mov
xchg
jmp
test
lock
pop
adc
mov
push
cmpsb
dec
jo
jno
stc
jmp
lods
fdivrl
pusha
rolb
cmpsb
push
sahf
je
jb
in
push
sub
es
shlb
fldenv
or
bnd
pusha
dec
bound
cwtl
jae
cmpsl
lcall
mov
jle
xor
out
xor
cmp
cmpsb
adc
mov
hlt
push
pop
sar
pop
lods
add
and
lds
repz
repnz
std
mov
add
stos
xchg
push
xchg
movsb
adc
and
fbld
int3
aam
adc
mov
leave
loopne
fisttpl
aam
mov
les
xor
jo
cmc
movsb
mov
xchg
pop
bound
jge
xchg
xor
fldcw
stc
daa
jg
and
cld
adcb
imul
lods
sub
jmp
shrl
pop
cs
push
aam
clc
iret
clc
adc
and
mov
inc
subb
cmp
inc
and
add
xchg
std
loope
xor
daa
inc
mov
adc
mov
and
adcl
cwtl
xchg
ja
mov
xor
push
dec
dec
imul
push
cmpb
push
mov
inc
int
pushl
xor
scas
mov
adc
pop
out
sbb
jle
xor
and
xchg
out
xchg
sub
cli
cmp
or
movsb
dec
sub
add
xor
lcall
iret
sbb
loopne
std
jb
outsb
into
leave
aaa
xor
movsl
cmp
adc
sbb
jle
sbb
test
lds
xchg
movsl
aad
xchg
popa
out
addl
loope
fwait
out
lods
cltd
test
sbb
in
sub
cld
out
shrl
mov
cwtl
es
in
in
mov
mov
cmp
push
hlt
push
inc
int
ror
mov
jl
cmpsl
mov
rorb
rorb
inc
xor
add
lds
stos
scas
ljmp
imul
pop
stos
ret
fstpl
inc
test
scas
sbb
or
jg
xorl
mov
dec
hlt
rcll
shlb
push
imulb
sbb
stos
xor
pop
clc
add
sbb
out
ja
lret
inc
cltd
xor
jb
push
js
adc
push
cmp
pop
popa
ljmp
sbb
bound
enter
outsl
jmp
lcall
ret
lea
inc
and
jns
aas
jmp
sahf
or
mov
mov
rcll
cwtl
adc
bound
pop
cwtl
int3
in
push
adc
mov
sub
xor
pop
sbb
ja
sub
mov
pop
int3
in
pop
out
mov
imul
adc
mov
data16
pop
popa
aaa
es
ucomiss
mov
jo
xchg
sarb
call
sahf
sbb
pop
xor
ret
fucomp
hlt
mov
add
shlb
and
xchg
bound
xchg
mov
jp
out
adc
or
lods
sub
enter
loop
imul
mov
loopne
int
cmp
lahf
cmp
sbb
push
mov
loopne
xor
xchg
sbb
push
divb
xchg
sarb
iret
jne
xlat
inc
adc
push
je
mov
ret
cwtl
test
icebp
sahf
jno
call
loope
and
mov
xchg
repz
popf
sbb
sbb
stc
inc
rcrl
xor
sub
xchg
jbe
loope
pop
push
lods
fs
cld
xlat
push
sub
cmp
mov
loopne
or
notl
rcr
pop
test
mov
js
xor
cmc
bound
data16
mov
das
bound
mov
push
xchg
add
add
push
dec
add
aaa
cmp
aaa
lods
push
fildll
hlt
sbb
jnp
jl
mov
es
push
pop
inc
test
jne
cli
cmp
pop
popf
out
lods
mov
js
popf
xlat
icebp
stos
mov
hlt
pop
bound
inc
adc
or
shr
mov
in
pop
push
cmp
add
testb
into
fnstcw
aam
xchg
mov
pop
mov
xchg
push
scas
adc
and
les
jbe
ret
iret
mov
out
sbb
stc
sbb
or
stos
shl
inc
jge
dec
loopne
push
in
cld
jbe
push
in
popa
aam
outsl
cmp
lds
inc
pushfw
fisubrl
adcl
out
lock
arpl
sub
jle
std
outsb
into
add
jp
popa
add
enter
push
in
sub
popf
imulb
repnz
xchg
mov
sahf
lcall
pusha
sbb
dec
fisubl
bound
adc
test
and
fs
std
lret
pop
sbb
push
aad
repz
or
pop
xchg
push
mov
add
add
jo
xor
and
jge
scas
test
xchg
test
pop
int
lcall
dec
sub
shll
inc
push
aam
add
jnp
mov
fsubrp
testb
pusha
pop
xor
lret
or
daa
dec
mov
fwait
xor
fs
add
fmuls
xchg
xor
sbb
test
stos
mov
fdivr
repz
cmpsb
jne
insb
push
loopne
aaa
adc
loope
das
and
pop
mov
xchg
and
loopne
sub
xor
adc
mov
adc
xor
add
inc
or
push
icebp
sbb
xor
sub
dec
loope
outsl
popa
push
pop
jp
xchg
outsb
mov
cmp
dec
inc
push
xchg
mov
pop
ds
mov
in
leave
test
sbb
out
popf
adc
mov
add
mov
test
xchg
sbb
xor
xchg
cmp
pusha
lret
jno
cwtl
fs
mov
or
popa
test
inc
fbld
dec
mov
mov
mov
mov
call
test
pop
lock
sar
repnz
ret
js
movsl
or
push
sub
jg
inc
mov
cs
cmp
jmp
jo
pop
jns
je
sbb
test
lds
into
mov
xchg
push
sbb
pop
aas
or
out
daa
fwait
mov
cmpsb
dec
loop
xor
jge
add
or
adc
out
adc
jmp
inc
inc
adc
in
jg
jl
pop
lahf
mov
push
xchg
ja
fs
iret
lods
imul
and
fisttps
inc
shll
add
andl
cwtl
es
fidivrs
sbb
in
sub
mov
add
test
movsl
data16
sub
shr
push
cmpl
rcrl
mov
testl
je
mov
push
xchg
iret
cmp
jo
lret
cmpsb
jmp
push
and
out
cmp
or
and
outsb
repnz
jbe
xchg
mov
mov
out
push
cmp
dec
imul
or
mov
cltd
lea
and
cmc
test
cmp
cmp
shll
fmul
sbb
repz
je
dec
cmc
mov
sbb
pop
loope
sub
fimuls
les
movl
ja
adc
pop
xchg
xcrypt-ecb
cmpsl
or
cmc
sbb
adc
lahf
out
mov
sarb
sub
add
fistpll
cld
xchg
or
daa
lret
je
mov
outsb
lret
jge
arpl
sbb
test
jge
jno
inc
xchg
mov
push
sti
mov
sub
cltd
push
test
xchg
aad
xchg
arpl
bound
pop
pop
aaa
xor
nop
aas
fsubrs
insb
pusha
fnstsw
mov
inc
ret
loope
je
imul
in
repz
push
push
push
push
adc
fwait
cs
test
lret
jae
aam
iret
fdivr
pop
lods
outsl
sub
add
std
in
mov
dec
mov
lock
jmp
loope
jge
aaa
add
pop
rcll
lcall
xor
mov
enter
mov
mov
mov
push
sbb
fstpt
dec
in
jae
mov
aad
adc
test
lret
dec
mov
ret
lret
sub
jne
sar
cld
sti
sbb
subb
inc
fdivrl
in
test
dec
add
pop
jmp
mov
dec
stos
popa
or
int
mov
xchg
mov
fisttpl
cmp
mov
lahf
lock
ss
jg
fwait
cmp
pop
jge
enter
nop
sbb
call
cs
repnz
mov
push
sub
xor
sti
jnp
inc
shrl
test
add
push
outsb
mov
out
repnz
adc
out
jns
cmp
mov
and
in
daa
or
icebp
adc
or
loop
push
and
lret
lods
and
or
push
notl
mov
dec
dec
pop
imul
xchg
out
jl
mov
add
push
into
shll
or
xchg
mov
je
adc
xchg
sub
loope
push
es
push
movsb
mov
mov
lock
xor
sub
sti
dec
lock
inc
jnp
movsb
cmpsb
popf
cmpsb
std
out
dec
pop
add
fs
fstl
loop
jb
test
test
push
xchg
jl
in
in
cld
ret
cmpsl
sti
jae
cmc
out
stc
mov
cmp
lret
inc
fnstsw
scas
pop
mov
not
jp
xchg
mov
mov
fisubrl
hlt
ds
adc
and
lock
mov
lock
lock
insb
loop
xchg
jno
arpl
push
xchg
push
mov
adc
int3
xchg
sahf
cld
and
daa
mov
mov
clc
dec
scas
cmp
mov
inc
adc
push
repnz
pop
jp
cmp
or
adc
cs
lds
jl
sub
xor
xchg
roll
lahf
sub
loope
push
hlt
jg
ret
testl
aad
add
cmp
adc
out
mov
stos
lahf
sub
xchg
mov
mov
in
jmp
cmp
cli
popf
shll
xor
push
stos
pop
mov
aaa
test
pop
ljmp
clc
orb
add
jbe
test
cmpsb
lods
cli
jp
bound
xchg
pop
adc
mov
sub
push
mov
cmp
pop
add
sub
fisubs
fidivrl
nop
in
enter
loop
sbb
mov
mov
cld
push
out
sub
xchg
dec
push
xchg
ret
dec
xchg
lods
mov
xor
lds
int
xchg
jp
insb
sbb
jecxz
imul
xor
mov
sarl
aaa
scas
sbb
jle,pn
lcall
jnp
adc
inc
lods
cwtl
xchg
pop
bound
andl
arpl
or
ret
into
clc
and
cmp
xchg
in
aam
testb
out
scas
dec
jg
loop
outsl
incl
jbe
and
mov
lcall
lcall
pop
std
stc
xor
xor
dec
mov
imul
in
inc
pop
and
adc
mov
or
pusha
dec
pop
es
rcll
jo
movsl
loop
inc
push
mov
and
addr16
mov
add
lock
mov
and
cmp
push
loope
outsl
push
aas
rol
mov
fcoms
mov
adc
pop
mov
push
fldenv
outsb
imulb
out
mov
or
pop
jbe
adc
and
cmpsb
cmp
sbb
mov
cld
jb
mov
dec
dec
push
xchg
scas
repz
ret
add
lods
xchg
mov
xchg
sub
mov
cmpsl
add
add
xchg
outsl
rcrb
xor
stc
mov
mov
int
adc
push
lahf
lea
gs
jg
jns
jmp
pop
sbbb
arpl
mov
xor
mov
test
xor
sbb
add
inc
cmp
lods
xor
push
fstpl
daa
lock
subl
mov
cmp
out
hlt
out
add
roll
cmp
inc
mov
mov
mov
mov
ret
adc
or
xor
push
and
iret
dec
roll
push
push
js
adc
or
call
or
or
mov
mov
lods
push
out
mov
mov
xor
subb
lods
pavgw
call
insb
and
or
inc
xchg
cli
loop
std
fimuls
aad
mov
mov
loopne
inc
lods
into
test
lods
aam
inc
dec
mov
rcrb
inc
popa
rorl
sub
xchg
test
mov
mov
push
xchg
inc
cwtl
movsl
xchg
push
sbb
vmovaps
cld
out
and
sub
jg
sbb
loope
scas
ja
into
inc
or
test
ds
shrb
push
add
lds
push
pusha
sbb
jmp
adc
and
js
cmp
in
sahf
arpl
jmp
test
add
and
push
adc
lahf
shr
push
adc
das
popl
sti
pop
clc
les
jp
pop
into
pop
ljmp
loope
push
mov
jge
jg
jmp
inc
mov
fistpl
out
cmp
mov
mov
sbb
sbb
popf
int
adc
fsubs
inc
xchg
movsl
add
cmpsb
orb
mov
shl
dec
mov
mov
xor
dec
sub
insb
cmp
nop
mull
and
pop
lds
enter
andb
ret
inc
and
movsb
lret
out
stc
xor
push
mov
leave
loopne
imul
mov
add
pushf
sarb
xchg
fists
mov
int3
cmpsl
and
dec
xor
push
repz
pop
dec
and
xor
mov
aaa
or
sub
incl
daa
cmc
div
daa
movsb
roll
adc
andb
pop
jge
test
add
icebp
out
sbb
add
shll
push
loope
stc
lds
adc
repz
adc
pop
jmp
rolb
sbb
cmp
dec
out
cmp
popf
ret
incl
and
xor
out
loope
inc
jne
iret
fdivs
gs
cld
rorl
test
iret
cmpsb
mov
fadds
mov
scas
jmp
das
aaa
nop
ror
fs
pop
hlt
and
test
push
roll
and
js
outsb
insb
add
fwait
aad
fadds
push
jne
sub
fldenv
enter
inc
decb
cld
pusha
lea
ret
adc
pop
sbbl
addr16
sbb
loope
pop
stos
out
jae
nop
pop
and
jmp
adc
pop
mov
cmpsl
ficoms
push
cld
or
xchg
repnz
rcrb
sbb
lea
adc
into
fwait
mov
hlt
outsl
jp
mov
loopne
call
test
sbb
out
cmp
add
sbb
fadd
xor
es
dec
xor
scas
loopne
fcoms
fwait
dec
push
je
mov
ret
int3
inc
inc
mov
push
lret
mov
dec
push
repnz
shrb
and
cwtl
dec
push
mov
dec
pusha
mov
fldt
ret
pminsw
adc
inc
popa
icebp
push
fwait
dec
mov
xor
adc
loope
sub
out
fiaddl
jnp
repnz
rcr
inc
sbb
adc
outsl
pop
jne
push
pop
leave
rcll
pop
or
and
mov
call
and
xor
imul
push
fs
lret
cmp
pop
add
leave
test
ret
mov
sub
aas
mov
pushf
pop
fldl
jbe
icebp
mov
sbb
mov
push
stc
jo
sub
mov
mov
and
ret
xchg
adc
dec
cltd
int
insl
ljmp
loop
pop
cmp
mov
mov
xor
aas
push
imul
adc
jmp
mov
pop
and
sub
jle
pop
inc
pop
js
pop
pop
aaa
lahf
jp
mulb
ja
pop
sbb
mov
mov
lods
adc
mov
mov
sbb
icebp
sbb
push
sub
dec
adc
pop
inc
ror
out
test
jp
fildll
jle
mov
pushf
in
or
push
aaa
rep
aas
adc
inc
out
sbb
pop
lods
or
mov
jbe
cld
or
in
push
les
sbb
push
push
adc
xchg
mov
cltd
sbb
shll
dec
mov
xor
jbe
xchg
mov
push
in
jge
in
arpl
push
cmp
sti
popa
jae
mov
cmc
mov
pushf
push
mov
pop
mov
sbb
fiaddl
inc
dec
lea
jg
lods
adc
jmp
add
scas
cmp
lahf
mov
add
push
pop
or
cmpsl
mov
mov
xor
push
iret
lret
fidivrl
imul
lcall
sub
add
fisubs
and
gs
repz
in
sub
aas
mov
call
pop
jge
cld
fs
pop
data16
cmc
popf
lods
cmpsl
mov
loopne
pop
mov
mov
fidivs
mov
adc
dec
cmp
stos
sub
push
sbb
int
xor
nop
enter
mov
popf
test
pop
divb
xchg
testl
cld
inc
adc
es
jecxz
sbb
dec
ret
or
jle
or
shr
sub
mov
adc
jl
xchg
fidivrs
or
sub
test
rol
and
lret
push
adc
cmpsb
mov
mov
or
or
cmp
mov
repnz
movsb
jae
push
xor
enter
xor
jo
loopne
push
pop
pop
add
jecxz
shlb
adc
xchg
daa
adc
call
mov
pop
sar
and
lahf
add
inc
pop
or
insl
mov
fimuls
es
inc
imul
cmpsb
mov
loopne
pop
imul
mov
jnp
jo
push
inc
xchg
fstpl
dec
pushf
mov
movsl
les
stos
aaa
add
mov
rcr
inc
iret
je
scas
pushl
ds
repz
cmp
push
aad
jmp
xchg
fwait
aaa
push
sbb
shr
lock
push
lahf
pop
shlb
cld
ss
les
test
mov
test
xchg
sbb
dec
fdiv
push
add
xchg
mov
push
call
sbb
loop
loop
outsl
xor
repnz
pusha
insb
add
sbb
pop
insl
cmp
test
icebp
inc
mov
cmp
mov
pop
sub
dec
call
xchg
jb
pushf
outsl
rclb
nop
adc
int3
ret
add
adc
push
or
ljmp
push
out
in
and
repnz
pop
in
fchs
cmpsb
stc
adc
cs
push
mov
insl
out
mov
and
pop
out
jmp
loopne
ffree
popf
fisubrl
and
outsb
mov
ret
sbb
xchg
leave
in
ljmp
lods
insb
fistps
roll
cli
add
shll
pop
ret
aam
push
or
test
fildll
cmpsb
pop
push
sub
sbb
movsl
dec
push
aas
clc
aad
aam
and
ficomps
dec
cmp
dec
fsubrl
xlat
sub
jb
mov
gs
sub
adc
mov
or
lret
adc
outsb
dec
scas
les
cmp
lahf
movsl
mov
pop
cwtl
add
mov
mov
fwait
push
push
stos
mov
pop
push
out
sahf
outsb
cld
mov
push
nop
out
fsubrl
jg
ficoml
cmp
xor
jo
cmp
mov
adc
push
fimuls
jns
sbb
mov
call
push
and
inc
sbb
rclb
mov
lods
xchg
lcall
sub
ficoms
and
pop
insb
ljmp
mov
fldt
lcall
test
out
pop
dec
sbb
xor
fsubp
pop
xchg
xchg
sub
stc
fstpl
and
mov
adc
jo
xchg
add
sub
pushf
or
xchg
je
hlt
std
xchg
lahf
mov
loopne
movsb
xchg
xlat
in
cmpsl
inc
mov
in
cwtl
rclb
fiaddl
popa
fwait
jle
lret
xchg
out
loopne
sbb
lcall
pushf
pop
daa
clc
mov
xor
jmp
jge
mov
dec
cmpsl
repnz
sub
jo
in
addr16
add
push
xor
cmp
in
or
inc
dec
fmull
jmp
aam
imul
stc
adc
or
fs
jb
into
jno
pop
lret
js
std
xchg
mov
xchg
hlt
jae
aam
and
iret
mov
iret
add
or
adc
arpl
das
inc
push
hlt
sub
adc
es
sbb
or
adc
push
std
push
inc
repz
mov
fcoms
addb
movsl
dec
adc
mov
cmp
mov
push
aas
mov
bound
test
fs
sbb
inc
pop
movsl
stc
mov
lods
adc
sbb
fidivs
cltd
or
add
jmp
add
repnz
jmp
dec
sbb
pusha
enter
ret
or
mov
adc
cld
lcall
mov
sbb
imul
lahf
cmp
fcoms
in
and
add
enter
sub
in
sbb
dec
mov
cmp
nop
xchg
xchg
cmp
sub
xchg
in
jae
sti
rcrb
add
stos
jns
bnd
loopne
dec
xor
mov
push
mov
das
pop
dec
loop
outsb
lock
and
dec
pop
ljmp
in
sbb
mov
dec
cmp
div
pop
mov
and
lods
jmp
or
cmpsb
cmc
dec
xchg
or
stos
push
sbb
dec
jmp
mov
dec
mov
cmp
add
sub
mov
dec
gs
push
ret
ja
nop
and
or
mov
pop
loope
push
xor
push
inc
add
loope
mov
push
add
in
decl
test
mov
fstpl
or
mov
mov
mov
dec
xchg
clc
sbb
cwtl
sbb
aaa
ficoml
sbb
push
mov
or
imul
mov
sbb
cmp
ret
sbb
jg
dec
rcrb
dec
sbb
icebp
ljmp
lock
pop
movsb
pop
jl
mov
lret
out
andb
int
sarl
inc
and
mov
xchg
adc
mov
jg
mov
jnp
popa
in
inc
pop
inc
hlt
adc
mov
int
mov
popa
arpl
addl
push
in
aam
sub
pusha
mov
inc
hlt
pop
fcmovnbe
scas
fmuls
mov
loop
or
sbb
push
js
aas
popa
push
push
jg
in
jg
push
stc
or
push
aam
aam
lds
rorb
cmp
aam
cmpsl
dec
xchg
inc
mov
sti
test
xor
jno
lea
and
and
aas
ret
xchg
lea
xlat
outsl
pushf
add
fucomip
xor
scas
push
inc
gs
je
test
aad
dec
jnp
lcall
jge
xorps
icebp
inc
pop
pop
mov
jo
mov
jns
popf
leave
mov
repz
dec
pop
pop
fdivrp
in
lret
inc
cmp
insl
mov
lret
sahf
add
and
xchg
mov
sub
rcrb
mov
sbb
cmpsl
push
push
or
sbb
sub
ss
sbb
pushf
test
in
pop
andl
clc
dec
and
sub
and
jbe
aas
add
or
push
pop
cs
cltd
stos
push
inc
mov
lods
mov
ds
shl
cltd
lret
push
inc
fs
bound
jbe
add
stos
ss
imul
mov
adc
cs
inc
repnz
lahf
ss
add
cwtl
loopne
xor
add
nop
pop
lcall
aam
cmp
icebp
aaa
inc
ds
mov
cwtl
cmp
lahf
dec
and
fildll
sbb
fadds
lea
jp
pop
das
sbb
lea
sar
test
xor
les
stos
test
fsts
mov
add
push
ds
or
rclb
movsl
pop
dec
not
pop
sub
js
je
cmp
xchg
inc
notl
jmp
and
jecxz
test
inc
in
push
testl
add
in
and
mov
jecxz
ret
leave
pusha
adcb
push
push
jne
sarb
jnp
lock
pop
dec
xor
jne
adc
mov
movhps
push
out
mov
into
add
imul
or
ljmp
sti
xor
test
pop
mov
adc
daa
mov
cmpsb
xor
pop
js
repz
shlb
addr16
inc
jg
arpl
push
rcl
xor
adc
shlb
sbb
lock
pop
jge
or
js
mov
jmp
dec
sarl
enter
push
mov
push
mov
mov
mov
jbe
adc
sub
pop
sti
or
adc
inc
fprem1
mov
mov
loope
mov
ret
nop
scas
jle
mov
mov
jecxz
cltd
add
cmc
aam
mov
push
mov
test
sub
and
push
lods
int3
shlb
adc
pop
adc
pop
lcall
in
rclb
insl
imul
nop
scas
adc
mov
dec
imull
popf
mov
aaa
in
mov
push
bound
adc
xchg
push
inc
or
inc
aad
xchg
bsf
jo
push
or
cltd
xchg
std
mov
out
loop
dec
cmp
fcmovb
adc
mov
nop
jb
push
cmp
adc
cltd
test
inc
loopne
mov
inc
cmp
add
lods
pusha
push
pop
dec
xlat
cwtl
ds
mov
call
in
xor
andb
push
movsb
fidivl
lods
mov
cmpsl
lock
jmp
cmp
mov
sti
aad
xor
lret
pop
popa
aas
push
mov
xorb
jmp
xchg
out
or
jg
lock
data16
or
xor
push
pop
fnstcw
add
sbb
stos
sub
cld
shl
and
outsl
or
sub
jne
rcrl
aas
addb
test
sub
mov
rcrb
mov
imul
std
cmc
adc
xor
and
dec
loope
shr
ror
fucomp
fimuls
jle
imul
repz
lcall
sbb
dec
fdivrs
push
mov
inc
dec
movsb
cwtl
pop
sbb
inc
xchg
cmp
and
sbb
loope
mov
sub
sbbb
or
xchg
dec
mov
incb
loope
mov
sub
jno
or
and
and
jns
sub
xchg
es
xchg
dec
mov
ss
adc
out
lods
push
popf
jl
jmp
arpl
jle
jl
frstor
je
and
and
jo
adc
movsl
jnp
mov
jo
fnsave
in
mov
out
dec
cld
jge
std
sarb
mov
push
mov
aas
lret
inc
and
cs
movhps
in
xor
sti
push
bound
fsubrs
pop
inc
leave
pop
stos
ficomps
or
jne
out
addb
mov
pop
stc
out
out
sti
mov
repz
mov
push
sub
xor
dec
or
mov
leave
lock
sbb
lret
sar
push
mov
stos
mov
pop
scas
ljmp
push
bound
and
xchg
push
xchg
mov
inc
adc
insb
movsl
mov
jae
xor
mov
mov
repnz
push
add
into
sub
mov
je
sahf
or
test
fimuls
cmp
call
mov
cmp
pop
in
or
idiv
inc
lret
sbb
and
and
push
jae
jno
inc
push
xchg
mov
or
sbb
mov
sub
nop
mov
add
testl
insl
incl
fildl
ret
mov
and
sub
lea
andl
jl
out
and
psadbw
xor
jnp
mov
out
aad
xor
jmp
adc
iret
scas
sbb
cmp
imul
pop
xchg
fwait
ss
out
cli
mov
inc
jnp
jg
lock
aaa
push
xchg
cmpsl
and
arpl
jo
push
sbb
popf
xor
inc
mov
in
cltd
inc
jmp
jecxz
outsl
pop
enter
mov
sub
ret
subl
push
jnp
iret
mov
xchg
stos
int3
fdivl
xor
and
stos
mov
pop
mov
pop
sbb
test
and
decl
mov
popa
cld
adc
mov
push
ss
shl
inc
insl
repz
in
mov
aaa
push
mul
in
jnp
adc
and
inc
sbb
pop
dec
and
mov
dec
lret
xchg
fwait
testb
into
nop
insl
xchg
pushl
scas
or
das
movsl
pop
js
stos
cmpsl
pop
pop
sub
shrb
int3
push
mov
and
push
inc
mov
xor
rolb
test
aad
cli
rclb
test
or
scas
mov
negl
fidivrl
ror
imul
or
cmp
mov
ret
fmulp
shlb
js
test
inc
mov
inc
in
gs
jmp
xlat
cmp
mov
loopne
cwtl
inc
aad
sub
test
sub
mov
lret
and
cmpsl
sub
mov
jo
insl
lahf
inc
movsb
aaa
cs
sbb
mov
jmp
jae
sub
push
xor
int
lods
bound
sarl
lcall
adc
aaa
dec
lods
mov
enter
movsl
mov
faddl
push
pusha
sbb
out
add
push
pop
sub
lods
je
pop
push
stos
test
inc
jg
sarb
std
dec
mov
and
adc
mov
lahf
sub
lret
rcrb
push
insl
ds
xchg
int3
in
decb
inc
add
or
and
mov
mov
jno
inc
dec
divl
pop
jbe
loopne
aas
cmp
jmp
sbb
dec
cmp
test
mov
xor
mov
sti
sahf
mov
ljmp
add
fwait
sub
pop
rcll
mov
dec
mov
cmpsb
lods
mov
sti
test
popl
or
jge
push
fsub
enter
cs
subb
mov
das
sbb
jo
icebp
loope
leavew
inc
and
roll
inc
or
fsts
sbb
test
daa
push
pop
rolb
mov
inc
pop
pop
aam
sub
mov
fninit
dec
dec
mov
mov
roll
fidivs
dec
cmp
out
xor
lds
sub
mov
cwtl
jbe
call
pop
fs
ret
jae
fiadds
andl
jle
into
sar
pop
lcall
out
cmp
into
pop
inc
xchg
scas
insb
mov
fsts
bound
pop
cwtl
mov
mov
setl
push
cmp
sbb
fucomp
bound
lods
test
test
sbb
push
or
dec
out
addr16
js
addr16
add
fistpll
mov
mov
xchg
notb
fwait
adc
or
stc
ljmp
int3
ret
dec
pop
sbb
movsl
int
add
pop
cwtl
sbb
mov
mov
add
mov
sbb
pop
lret
xlat
popa
sti
iret
in
jo
dec
or
or
aad
test
aad
adcb
mov
sti
xlat
out
arpl
inc
imul
std
dec
movsb
push
ja
fsubr
sbb
in
adc
dec
jmp
ja
insl
int3
cmp
popf
jp
dec
xor
xor
enter
mov
sti
inc
push
aam
jb
push
movq
mov
and
pop
test
push
ficoms
ret
adc
out
or
and
idiv
dec
pop
jb
push
scas
push
call
or
ret
adc
lcall
loopne
xchg
pop
arpl
or
push
cmp
and
push
xor
jmp
imul
repz
xchg
push
ret
jp
ljmp
cwtl
ret
push
popf
mov
out
mov
movsb
add
lret
subl
and
jno
jl
pop
jecxz
movsb
rcrb
sub
dec
mov
add
cwtl
and
mov
pop
and
ss
mov
test
popa
mov
adc
loopne
out
icebp
pop
movsl
inc
dec
lods
adc
jle
sbb
adc
fdivs
jo
mov
lods
sub
mov
cli
arpl
outsb
mov
leave
xor
or
sub
and
and
xchg
loop
mov
sbb
sub
mov
add
or
ja
or
cmpsb
jl
jae
adc
xchg
scas
insl
jg
ljmp
sahf
adcb
mov
mov
popf
adc
aas
jo
sub
mov
or
xchg
add
add
jl
and
sbb
or
outsb
xchg
inc
repnz
jbe
testl
push
and
mov
mov
sbb
notb
rcr
xchg
jg
push
ds
xchg
and
cmpsl
pop
xlat
jle
mov
inc
decl
mov
xchg
test
iret
xchg
test
dec
stos
test
shl
cwtl
cmp
and
imul
or
pop
insb
push
rcl
loope
pushf
stc
cld
sbb
lahf
sbb
imul
xchg
xchg
insb
inc
inc
inc
push
jnp
mov
xchg
fsub
mov
out
sti
jge
or
les
rcr
jbe
mov
cli
and
aaa
popa
sub
mov
dec
mov
or
cmc
repz
mov
dec
pop
aaa
add
mov
ljmp
mov
nop
add
add
arpl
ret
add
xchg
push
xchg
xorl
push
ss
push
das
fistpll
mov
cs
movl
test
out
aam
fadds
stos
and
xor
mov
in
lret
inc
jnp
cmpl
xchg
and
or
mov
dec
pop
and
ret
iret
test
daa
xor
pop
sub
push
imul
hlt
sub
enter
sbb
fwait
loope
in
in
mov
nop
gs
or
shr
loope
ss
xor
es
push
das
es
xchg
sub
dec
subb
push
lea
into
xlat
jnp
dec
dec
pusha
insb
dec
js
sub
cmp
jae
inc
cld
cmp
insb
jns
aam
shll
fidivrl
or
jle
or
stc
cmp
jge
arpl
ret
push
dec
fisubrl
outsl
mov
cmp
mov
fisttps
rcrl
inc
mov
cli
sbb
notb
test
dec
lcall
jae
into
inc
in
xchg
or
mov
push
mov
sbb
jae
movsb
mov
xchg
xor
dec
jnp
dec
mov
faddp
fisubrs
loopne
add
mov
mov
and
jnp
jg
or
adc
inc
dec
add
jnp
dec
dec
scas
pop
add
aad
push
xor
shll
out
shr
xchg
adc
xor
sub
mull
aam
lcall
fcompl
sbb
xor
test
pop
and
mov
xor
push
push
ds
push
aas
push
cmp
lds
in
mov
test
loope
add
and
and
jp
or
and
adc
cwtl
jg
sub
pusha
add
xchg
dec
mov
xchg
add
add
cmpsb
addr16
rclb
pushf
cs
call
repnz
test
mov
scas
xchg
fwait
int3
shlb
in
mov
xchg
inc
das
mov
push
imul
bnd
sub
adc
pop
fstpl
fs
xchg
xchg
out
jg
out
jl
mov
addr16
aaa
jmp
sub
inc
add
inc
aad
cwtl
mov
dec
xchg
adc
and
jl
stos
add
mov
aaa
sub
push
xchg
ja
dec
addl
repnz
test
mov
lcall
ljmp
testb
mov
mov
andb
or
push
popa
adc
cmpsb
negb
clc
adc
mov
int
mov
sub
dec
xor
jmp
jnp
or
mov
and
hlt
movsl
call
outsb
pusha
and
sub
pop
fisttps
mov
adc
orl
movsb
sub
lahf
push
mov
sbb
vmread
pop
movsl
mov
loope
lock
fdivrs
outsb
outsb
mov
inc
cmp
add
std
xorb
add
add
jmp
jle
xchg
mov
jne
push
ds
pop
xchg
add
xchg
push
scas
jnp
nop
outsl
stos
shrb
cs
cmp
pop
out
mov
push
adc
cld
lods
or
into
loopne
push
jle
and
adc
test
cltd
in
xor
mov
push
xor
mov
subl
jo
mov
int3
and
leave
aaa
and
pop
jo
xor
mov
cld
outsl
pop
data16
cmp
ds
lret
jecxz
sub
xchg
push
adc
lods
repz
movsl
mov
lret
imul
aam
cmp
pop
test
xchg
icebp
xchg
add
leave
mov
sahf
test
mov
lahf
add
mov
fwait
adc
lds
repz
adc
test
outsb
aad
push
sbb
xchg
jl
sbb
and
mov
jmp
fs
fsubl
push
pop
jecxz
clc
jge
aaa
pop
popf
arpl
pusha
test
mov
imul
int3
xor
imulb
jmp
mov
aad
fsubl
mov
daa
cmc
mov
pop
mov
pop
add
and
popf
or
cmp
lods
test
and
lret
shl
sahf
pop
sub
test
inc
mov
pop
or
and
and
shr
dec
fucomi
mov
cs
and
xlat
cmp
push
mov
inc
and
sti
or
xor
punpcklwd
or
dec
std
push
jne
mov
push
out
fadd
out
cli
sti
jmp
aas
outsb
pop
adc
je
pop
add
insl
lret
cmp
jmp
xchg
shll
jmp
sarl
or
mov
add
fisubl
ret
xchg
xor
jns
mov
cmp
nop
mov
sahf
das
mov
mov
and
xchg
pop
pop
cltd
cli
subl
cmp
aas
inc
cmp
scas
or
scas
test
and
jns
mov
sbb
cli
ss
inc
daa
test
xchg
push
addb
dec
sbb
mov
aas
mov
mov
cmpsb
scas
shrl
dec
mov
int
cmp
imul
rcr
xor
adc
jg
fisttpl
and
test
and
cmp
jmp
out
fnstenv
and
or
cmp
mul
jns
mov
aas
das
push
or
cmp
lea
call
jae
into
mov
lret
cmpsl
nop
add
call
ret
pop
push
inc
arpl
jbe
and
dec
xchg
inc
test
sub
les
jl
adc
xchg
sbbl
imul
pop
in
fcmovb
jmp
cwtl
push
imul
lods
sub
les
xor
lea
jl
xchg
daa
rolb
or
insl
cmp
add
adc
mov
hlt
jp
mov
sti
ja
and
xchg
dec
xor
pop
sub
jg
and
adc
aad
and
inc
mov
ljmp
jg
lods
sbb
mov
lcall
and
push
jmp
xchg
jmp
inc
pop
cmp
xchg
mov
pop
call
out
jle
in
push
mov
call
jg
xor
lcall
jae
push
scas
cwtl
jecxz
jns
pop
mov
xchg
shr
cli
push
mov
mov
sti
fisttpll
xchg
sbb
and
lcall
and
push
mov
insl
mov
icebp
and
add
xchg
scas
arpl
lret
and
mov
mov
fcmovbe
push
push
ja
js
les
and
xchg
cli
mov
inc
cld
mov
add
out
lahf
sub
jmp
adc
test
mov
jnp
rol
test
outsb
cmp
addr16
ds
or
mov
je
in
xor
out
into
push
dec
xchg
sub
pop
loop
lods
dec
mov
dec
and
lahf
sbbb
sbb
push
out
mov
mov
lahf
add
push
cli
stos
mov
mov
lcall
out
jne
bound
mov
inc
jb
or
cli
loope
imul
mov
cmpsb
add
imul
jns
inc
fiadds
gs
insl
fstps
pushf
pop
sbb
cmpsl
gs
xchg
test
mov
std
insl
mov
xchg
cld
mov
cmpsl
sbb
adc
push
cpuid
shrl
loope
ljmp
cmp
or
adc
fdivp
or
cmpsl
incl
test
dec
mov
xor
mov
sbb
jecxz
lods
mov
mov
jg
add
fmull
or
push
adc
add
lds
sub
in
inc
adc
pusha
mov
jbe
aaa
add
sub
mov
inc
inc
mov
push
mov
sti
push
call
or
leave
mov
ficompl
in
add
repnz
xchg
push
xor
ss
sbb
mov
adc
jl
aam
fs
inc
mov
lcall
dec
inc
add
push
push
fimull
add
xchg
sahf
and
outsb
xchg
or
ficomps
pop
lock
ret
movsl
fisttps
aas
or
mov
inc
lds
mov
inc
inc
xor
sbb
shl
push
push
or
add
js
pop
rorb
scas
jb
cs
je
inc
mov
mov
xchg
shrl
popa
xchg
or
test
mov
arpl
out
mov
js
add
xor
dec
repnz
pop
push
aad
enter
inc
cmpsb
je
dec
xor
pop
mov
out
and
inc
rorl
aaa
cmpl
test
mov
cmp
stc
mov
fcmovnu
push
sbb
adc
sbb
filds
fdiv
sbb
inc
jecxz
pusha
fisttpl
shrb
push
fwait
clc
gs
xor
cmp
jae
lahf
xlat
incb
push
mov
rcl
mov
xor
and
pop
cmpsb
or
adc
cmc
ficomps
pop
bound
test
adc
jmp
les
mov
test
inc
test
cli
cmp
or
cmp
adcb
aaa
fisttps
mov
or
inc
mov
icebp
and
sbb
add
and
iret
adc
fcoms
cmc
aad
sbb
push
insl
lock
mov
push
test
in
std
sbb
in
mov
leave
lea
inc
sbb
repz
xchg
mov
or
jae
lahf
cld
jle
sub
loop
mov
lock
cmp
fsts
out
pop
imul
mov
and
pop
addl
mov
call
inc
xor
in
inc
push
in
fdivrl
adc
mov
xchg
sahf
inc
test
shrl
out
int3
rorb
das
push
inc
popf
scas
in
jg
jle
or
in
jmp
js
and
mov
ret
adc
hlt
pop
fsubl
outsb
sbb
sub
stos
int3
cmp
int3
je
or
fwait
hlt
lea
neg
aas
mov
loope
fisubs
mov
push
mov
add
stos
or
cltd
mov
inc
mov
shrl
push
aas
lock
pushf
mov
adc
pop
pop
les
aas
dec
and
sub
push
push
in
pushf
jle
out
push
or
jp
add
out
stos
ljmp
and
lret
outsl
jl
aaa
xchg
dec
aam
xor
addr16
xchg
mov
jno
scas
push
mov
pushl
or
lods
cmova
data16
sbb
cmc
pop
shll
adc
subl
push
arpl
push
xchg
push
mov
lea
mov
xchg
inc
clc
xor
aaa
sbb
test
sbb
mov
in
addr16
xchg
mov
fnstcw
pushw
mov
cmp
insb
sbb
lods
insb
add
les
fmul
aad
or
out
xchg
stc
popf
out
inc
jno
aaa
insl
xchg
sub
scas
sbb
inc
mov
xchg
inc
outsb
adc
cmpsb
leave
lret
scas
inc
cwtl
loop
mov
mov
jno
xor
repz
mov
lret
xlat
stos
lods
mov
loope
cld
cmp
nop
call
adc
icebp
in
jp
xor
bound
adc
clc
mov
cmpb
pop
loope
mov
ficomps
fmull
iret
bswap
adc
xor
push
jg
cli
data16
cs
cli
dec
aaa
mov
add
cmp
xchg
orl
push
pop
push
mov
je
or
in
jecxz
pop
push
adc
loope
fidivl
lcall
xchg
leave
mov
cmp
adc
inc
adc
cs
xchg
pushf
lahf
psubusw
into
xor
add
mov
mov
imul
pushf
stos
fldl
xchg
xchg
push
out
sub
lea
insl
xlat
ljmp
jb
or
jle
iret
outsl
ss
imul
ja
jb
pop
sub
and
cltd
dec
lods
xor
adc
pushf
pop
mov
dec
cmp
test
es
bound
xchg
pop
mov
inc
lds
push
repz
aas
scas
daa
jp
stos
popa
outsb
mov
jns
sbb
cmp
lret
add
xor
mov
popf
rcl
or
dec
imul
rcrb
rcll
inc
lahf
cmp
dec
gs
enter
int
push
clc
pop
stc
lock
push
add
stos
mov
imulb
and
out
shrb
shr
cmp
popf
sbb
push
scas
cmp
int
daa
xor
ljmp
add
mov
fmulp
dec
pop
ljmp
pop
inc
push
xchg
xor
or
clc
push
add
push
mov
pop
or
pusha
push
rcll
mov
pop
mov
fstpt
mov
sbb
fs
push
xchg
stos
cmp
call
lock
pop
xlat
jle
xor
ficoml
sub
xchg
clc
repz
sub
in
and
mov
push
dec
cmpsb
iret
mov
sbb
loope
mov
imull
add
mov
jne
daa
xchg
ja
push
sbbl
icebp
add
inc
xor
pushf
movsl
pop
xchg
inc
sbb
lahf
sbb
cld
dec
mov
and
jae
mov
push
push
das
ret
cmc
enter
cmp
jg,pt
movsl
mov
sub
and
inc
iret
sbb
xor
ret
mov
test
fsubs
fildll
sahf
push
mov
shll
pop
mov
pop
or
sub
dec
dec
dec
fnsave
jecxz
jecxz
in
push
mov
lds
lea
cld
movsl
or
cs
xor
cmc
adc
rcll
xchg
mov
pop
jmp
push
dec
or
cmp
adc
dec
dec
mov
movsl
or
cmpsl
stc
pushl
movsb
bnd
in
test
pop
sbb
mov
fwait
in
mov
out
cmc
mov
lock
ds
ret
mov
dec
lock
push
enter
cld
mov
mov
lock
fcomps
xchg
add
mov
jl
pop
and
cmp
adc
shll
aaa
mov
lock
shlb
or
xchg
sub
mov
mov
xorb
jnp
add
xor
sbb
pop
cmpsl
out
dec
xor
cmp
sbb
add
pushf
cmp
mov
lea
jmp
cmpb
add
cli
mov
jnp
sub
xor
xchg
add
dec
in
or
mov
sbb
add
lret
and
shll
lods
dec
pop
lahf
cs
loop
lret
flds
push
inc
jle
push
cltd
sbbb
mov
mov
sub
or
push
scas
gs
xchg
xor
lods
ja
ds
in
mov
inc
pop
cld
inc
ss
aaa
cmp
scas
lock
ss
xorb
fidivs
pop
mov
ljmp
fdivl
out
in
into
gs
cli
stc
cwtl
scas
pop
xor
push
mov
aam
mov
fists
push
sbb
lret
ss
mov
push
cld
call
add
adc
inc
push
jp
enter
or
cli
push
stos
push
icebp
and
add
popa
pushf
ja
test
xor
sbb
mov
mov
push
add
inc
xchg
outsb
or
inc
and
loope
lods
and
insb
sub
jecxz
pop
out
ljmp
cmp
insb
cltd
xchg
arpl
push
push
push
dec
ja
xor
outsl
imul
cld
shl
mov
ja
sbbl
jg
addb
adc
out
notl
fdecstp
xor
push
inc
sahf
imul
imul
and
or
jbe
into
out
popa
lds
sbb
pop
dec
cwtl
xchg
pop
lcall
pop
jne
push
xchg
cmp
and
inc
cwtl
out
sub
arpl
mov
and
dec
xor
mov
jo
lahf
sub
jge
shlb
stc
aad
jo
jbe
lret
icebp
ja
jbe
in
cmp
data16
and
cmpsb
cmp
mov
pop
test
shrl
push
icebp
add
push
popf
loop
aad
jle
push
mov
pop
sbb
mov
repz
mov
lea
cld
repnz
lods
add
and
lcall
inc
sbb
jmp
mov
xchg
mov
pop
mov
push
ficomps
mov
neg
jo
addr16
sahf
cli
push
in
outsb
push
sub
xor
push
and
xor
adc
xor
adc
sahf
pop
rcrl
sub
mov
cmp
popf
rdmsr
mov
xchg
or
cld
sub
xchg
int3
push
arpl
mov
sub
pushf
xor
loop
xor
in
pop
mov
fnstsw
xchg
cmp
jne
mov
jne
add
pop
jno
outsb
out
test
outsb
xchg
pop
clc
in
shrl
push
scas
xchg
push
pop
push
testb
jno
dec
pop
fwait
and
test
bnd
nop
add
jne
call
inc
bound
daa
sbb
popa
mov
sahf
mov
hlt
adc
add
mov
rolb
dec
push
ljmp
nop
add
jo
js
call
repnz
mov
sub
xchg
ljmp
pop
sub
lret
les
movsl
rcrl
repz
cmp
popa
sahf
stos
jne
jno
pop
mov
mov
cmp
push
inc
sbb
or
sub
lret
fsubr
int3
and
cmp
gs
mov
pop
inc
insb
dec
mov
aad
mov
fmulp
andb
jbe
adc
outsb
mov
mov
ss
cmp
lcall
test
movsl
stc
xchg
lock
mov
std
fists
aas
cmp
jne
es
or
pop
inc
icebp
lea
or
dec
imul
adc
nop
orb
out
das
inc
pop
scas
aas
or
scas
movsl
int3
mov
call
rolb
loop
shl
out
adc
inc
xor
fildl
cmp
jo
sub
mov
aad
and
into
inc
lods
pop
outsl
mov
adc
daa
mov
sbb
pop
or
push
aaa
ret
cltd
mov
aam
iret
push
nop
pop
popf
jo
push
sub
fisubrl
daa
dec
xor
lods
pop
jae
mov
dec
xlat
aad
pop
xor
push
cltd
cmp
jmp
push
lea
push
neg
xchg
iret
mul
and
cs
sub
inc
ja
fdivrs
adc
jno
inc
addr16
cmp
in
test
out
push
fidivrl
mov
pop
push
push
mov
jmp
std
or
jnp
lret
loopne
mov
or
aad
scas
cmpxchg
mov
xlat
es
ret
push
dec
pop
push
jnp
xchg
aaa
xchg
adc
cmp
ffree
adc
fwait
in
gs
rol
fisubl
push
pop
fstpl
lods
or
fisttpl
cmp
aaa
xchg
mov
pop
shr
jb
ss
jmp
sbb
movb
sarl
lret
jle
cmpb
lret
fdivrl
xchg
jo
push
cwtl
xchg
mov
ljmp
aad
pop
jg
adc
or
xchg
sub
iret
repnz
cwtl
ret
das
adc
xchg
cmp
in
cwtl
fistl
pop
das
and
adc
mov
popf
rolb
stc
dec
cmp
mov
xor
add
rcll
mov
adc
jbe
addr16
mov
mov
sbb
fsubs
cli
das
lret
out
test
inc
xor
inc
mov
clc
mov
dec
fadds
mov
xor
les
lcall
mov
stos
icebp
stc
jp
sti
pusha
aaa
sub
int
xor
shrl
aaa
test
and
sub
sbb
lahf
out
jle
xchg
icebp
jmp
sub
hlt
mov
test
leave
fucomi
pushf
pop
fmull
int
ss
fwait
or
mov
test
jno
sub
xor
stos
test
aam
lret
jae
mov
lahf
mov
ret
cmp
cltd
lods
push
jbe
pop
pop
out
lret
mov
std
test
jp
add
rol
add
pop
in
ret
and
pop
leave
or
jns
add
dec
daa
pop
add
jo
and
addb
test
push
lods
mulb
inc
mov
or
stos
jae
dec
ficoml
add
lahf
add
hlt
xchg
push
mov
mov
mov
adc
xchg
push
dec
aam
jmp
popf
jae
push
inc
sbb
adc
movsb
test
jb
mov
outsb
xor
inc
loope
mov
fdivs
testb
add
out
cmp
sahf
leave
pop
cld
lds
xchg
mov
jle
sub
lcall
xchg
clc
shll
fdivp
les
repz
roll
xor
out
lahf
xchg
popf
jl
jg
rcll
aad
add
lods
mov
add
jl
gs
cld
vpcomb
add
cmp
push
inc
leave
sbb
xchg
hlt
aas
sbbl
pop
sti
insb
xchg
pop
addl
gs
jp
jp
cmp
xchg
xchg
in
push
shrl
mov
add
adc
loopne
sbb
iret
aas
inc
mov
imul
add
fdivrl
add
ficoml
jne
dec
mov
jmp
into
das
test
in
adc
xor
lea
jb
mov
jns
mov
mov
das
sub
out
movsb
cmpsl
gs
lds
bswap
lods
sub
imul
sub
clc
test
pop
gs
shlb
sub
adc
test
jl
xchg
into
repz
and
inc
jp
sbb
stos
cltd
mov
add
dec
frstor
loope
mov
dec
jo
std
adc
fwait
fldt
sahf
mov
sbb
outsb
sti
ret
repnz
push
neg
xchg
pop
mov
aad
mov
ljmp
xorb
mov
test
cwtl
sub
lahf
out
xchg
xor
stos
cmp
jne
jne
das
inc
jmp
inc
mov
jg
xchg
adc
xchg
xlat
and
adc
or
lods
dec
mov
push
xchg
dec
imul
testb
insl
add
mov
std
fwait
xor
xor
insb
int3
scas
je
scas
mul
mov
and
inc
nop
out
repz
daa
sbb
mov
pop
in
push
pop
and
sbb
mov
mov
cs
cmp
jecxz
ja
jecxz
pushf
push
popf
mov
mov
jnp
mov
notb
push
inc
sbbb
out
lods
jmp
popl
sahf
mov
mov
add
adc
cmp
rolb
sbb
jg
loope
fimull
das
and
pop
push
mov
mov
call
gs
test
int3
mov
push
sbb
jecxz
cmp
insl
dec
jnp
pop
ret
adc
xchg
jge
bound
pushf
xchg
jbe
push
test
xchg
or
outsb
imul
and
inc
xor
mov
fimull
outsb
fisubs
dec
xor
push
adc
gs
pop
xor
mov
pop
inc
int
sub
pop
dec
hlt
and
lods
femms
mov
push
in
mov
mov
push
cli
lret
leave
xorb
and
test
jo
repz
pop
xchg
jnp
popf
test
bound
push
xor
ljmp
dec
cwtl
popf
dec
xlat
aam
pop
inc
inc
mov
push
mov
test
push
pop
xor
stc
mov
lahf
jmp
and
hlt
std
cmp
popf
rclb
out
xchg
insb
hlt
test
outsb
jbe
outsl
xchg
fisttpll
and
divl
push
stos
add
add
std
out
adc
lea
xor
repnz
pop
or
xor
lcall
pusha
ja
mov
int3
xlat
enter
out
push
lods
inc
jl
jge
out
xchg
or
push
push
inc
or
in
movsl
mov
adc
sbb
bound
push
rcr
lret
jo
cli
sbb
sub
inc
xor
lret
cld
or
lret
adc
loope
je
and
pushf
mov
std
mov
mov
fwait
xor
push
ss
sub
call
fisubrs
nop
mov
mov
lds
mov
or
dec
jmp
orl
inc
push
insl
out
dec
and
call
push
dec
out
inc
inc
out
inc
icebp
inc
mov
icebp
insb
lods
cmc
dec
sub
int
mov
jl
pop
es
scas
sub
inc
lcall
sbb
ljmp
lods
jmp
jae
push
arpl
repnz
andl
ret
insl
into
aas
xor
ds
adc
aam
adc
lock
fcomi
mov
sub
lea
mov
int3
push
mov
iret
and
inc
fs
and
pop
adc
sbb
push
sbb
add
dec
addb
cmp
xchg
mov
push
lea
imul
xor
fstl
lock
or
push
lods
sbb
jg
loopne
inc
gs
sub
sub
shrl
xchg
in
aas
mov
outsb
add
dec
mov
xchg
idivb
popa
adc
sbb
mov
mov
jl
adc
fstp
out
jbe
jnp
and
inc
sahf
push
lods
fcomps
dec
lock
inc
ss
stos
scas
ret
mov
nop
dec
lds
lea
dec
cmp
inc
and
or
xchg
scas
sbb
sbbb
ret
jno
push
mov
cli
lods
jg
imul
stc
cmpsb
pop
insl
stos
in
mov
xchg
aas
insb
aam
inc
imul
push
jmp
ja
pushf
dec
add
add
sti
xchg
iret
dec
andl
notb
fmul
jo
ds
popf
and
push
add
or
test
lret
push
daa
push
or
adc
jecxz
inc
inc
mov
andb
das
inc
les
mov
dec
ja
mov
negl
cld
aad
fs
add
clc
mov
xchg
mov
ret
dec
sti
mov
mov
pop
and
xor
pop
insl
sbb
jl
ret
mov
sar
sub
hlt
ret
dec
ds
arpl
and
sahf
imul
repz
adc
cmp
and
jmp
pop
sbb
stos
lahf
popf
loopne
idivl
movsl
dec
cmp
movaps
xlat
push
iret
dec
xchg
int
xchg
add
xor
add
jae
jne
and
and
aas
ds
fidivrs
sub
pop
call
mov
shl
mov
aad
lea
xor
push
and
shlb
or
jecxz
andl
lcall
mov
arpl
loope
inc
or
adc
sbb
ret
rol
inc
es
inc
xchg
sbb
sbb
dec
jp
mov
or
inc
aam
stc
add
je
in
outsb
out
push
cmp
fistpll
hlt
xlat
insl
lret
gs
mov
jecxz
outsb
fildl
xor
xor
xor
test
push
pop
je
inc
jmp
add
pop
add
inc
ljmp
dec
cmp
xchg
add
shrb
orl
fidivs
xor
mov
mov
iret
es
push
popa
add
in
pop
lds
or
mov
xchg
mov
div
push
pop
mov
add
int
out
jo
dec
rcrb
repnz
cmpsb
int3
daa
shlb
dec
hlt
xor
int
inc
aam
add
jns
mov
les
xchg
xor
cmp
lods
xchg
inc
pushf
les
and
ret
inc
cmp
dec
sbb
push
bound
repz
mov
insl
stos
fs
jecxz
lds
jne
pop
adcl
sahf
fidivrs
mov
mov
push
dec
adc
cld
sbb
dec
inc
les
movsl
lods
iret
inc
hlt
nop
dec
ret
add
ljmp
data16
dec
mov
popa
sahf
or
mov
in
std
dec
or
xlat
pop
ret
mov
sbb
xor
jg
fwait
mov
mov
mov
cmovne
andb
insl
cmp
adc
cli
ljmp
mov
mov
adc
rcl
sub
sbb
shll
xor
add
and
ja
jae
xor
shr
xchg
fs
call
pop
and
pop
aas
jle
xchg
xchg
in
mov
mov
dec
pop
pop
loop
sub
mov
pushf
cmp
fisubl
cmp
pop
xor
js
pop
stos
mov
movsl
lods
jno
add
mov
ret
sti
xchg
mov
rcll
sbb
sbb
out
stos
test
add
out
call
push
add
ja
js
inc
push
mov
imul
fdiv
mov
pop
dec
popf
mov
mov
out
add
mov
out
mov
sbb
xchg
dec
shrl
cmp
push
sbb
mov
aaa
enter
ror
add
push
test
inc
aas
out
nop
sub
mov
push
xor
and
sbb
sub
cltd
pop
stos
stos
or
xor
arpl
jae
push
pop
out
adc
xor
mov
in
test
adc
imul
fsubrl
cmp
loop
mov
adc
dec
mov
inc
je
test
out
lds
ret
cs
xchg
pushf
call
das
dec
add
cmpsb
scas
idiv
xchg
pop
sub
mov
das
ljmp
mov
lods
add
popf
sbb
and
rcrl
jp
loope
mov
test
jl
cltd
rolb
mov
ss
jl
jl
clc
pop
cmpsl
dec
test
cmp
or
dec
loopne
inc
sub
mov
add
mov
mov
lea
inc
adc
mov
sahf
lods
sub
cmp
sbb
out
repnz
add
sbbl
lcall
std
sbb
les
xorb
insb
dec
mov
std
mov
inc
out
mov
and
mov
mov
mov
lret
or
movsl
call
outsl
jns
call
js
int
sbb
mov
dec
shll
test
imul
mov
jno
mull
dec
std
aad
in
xor
shl
push
ror
sub
addr16
push
lret
js
xor
fidivl
pop
mov
aaa
dec
cs
das
std
cmp
xor
ret
inc
loopne
sub
mov
jg
lock
lret
lock
lea
mov
and
pop
aaa
mov
jl
hlt
sub
mov
gs
bound
fwait
pop
xor
jmp
pop
cld
and
int3
bound
xor
pop
jnp
jecxz
xor
xor
cmp
mov
mov
fildl
lahf
out
imul
cs
iret
shrl
mov
ret
popf
jecxz
imul
jae
inc
jmp
pop
xchg
sub
adc
or
mov
jecxz
daa
add
js
pop
add
sahf
insl
mov
or
testb
and
test
mov
sbb
enter
mov
out
inc
gs
test
mov
inc
fidivs
repnz
lcall
sub
cli
sub
pop
sti
mov
push
or
adc
mov
decb
xsha1
cmpsb
dec
adc
js
leave
aad
sbb
inc
cmpsl
mov
cltd
shr
divb
pop
dec
push
nop
in
and
pop
add
mov
hlt
pushf
mov
jb
insl
mov
push
sub
add
cli
push
mov
mov
inc
mov
ds
mov
mov
dec
xchg
mov
testl
mov
dec
jle
sarb
sbb
clc
pusha
xor
xor
cmpsl
sbb
xchg
mov
xor
sbb
cld
jo
stc
inc
ror
push
add
cwtl
je
ret
roll
jecxz
adc
clc
jno
push
or
aam
pop
gs
or
sub
push
push
cmp
data16
inc
cmp
bound
adc
push
mov
iret
push
mov
mov
add
arpl
pop
data16
jbe
or
add
cmp
fisubrs
pop
sbbb
rcr
push
sub
sbb
inc
shlb
imul
lods
in
imul
hlt
mov
sar
movsl
cmpsb
div
inc
dec
xchg
cltd
dec
mov
push
jl
lods
out
or
sbb
pushf
mov
and
xchg
push
mov
adc
dec
sti
popf
cmp
mov
push
int3
jecxz
mov
js
sub
mov
inc
pop
pushf
mov
mov
fldpi
cltd
xchg
fwait
in
mov
mov
jp
mov
pop
sbbb
sbbb
pushf
pop
shrl
pop
test
pop
xor
loop
push
xlat
movsb
rolb
fsubl
sub
add
es
lcall
jle
push
subb
add
cmc
sbb
mov
scas
or
pusha
push
mov
or
test
fwait
cmpsb
push
sub
shrb
fidivrl
pop
jl
dec
or
or
push
aaa
rcrl
or
sar
je
aas
in
adc
fistl
sbb
adc
sbb
stos
insl
pop
ja
pusha
jb
ret
xchg
jns
jl
bnd
rclb
std
pop
inc
jecxz
mov
xchg
setae
std
movsb
inc
pusha
dec
aaa
mov
cmpsb
mov
and
mov
sub
outsb
cmp
push
jge
mov
test
cmp
dec
ret
dec
push
add
xchg
into
push
add
add
lret
cld
xchg
ljmp
mov
lahf
or
int
outsl
lret
inc
jae
rcr
inc
aas
cltd
cld
push
cmp
mov
sbb
adc
es
lds
push
fcomps
push
and
mov
test
aad
jecxz
adc
sbb
scas
add
cmpsb
sbb
je
fidivl
je
xlat
push
inc
mov
clc
out
dec
sbb
int
mov
aas
inc
out
jo
xchg
mov
frstor
jbe
push
dec
xor
out
push
aam
lcall
fistpl
mov
xlat
mov
fnstsw
imul
pusha
aad
pop
xchg
data16
push
fmull
push
mov
fwait
sub
es
out
mov
pop
add
lret
jle
test
push
fcoms
ficompl
push
fwait
mov
ds
jle
call
fbld
or
jle
mov
call
scas
sti
sbb
inc
mov
fisttpl
cld
inc
inc
outsl
fbstp
push
sbb
leave
ss
ret
push
jge
fsubrp
mov
movzbl
xlat
adc
sub
aad
or
inc
mov
icebp
mov
sbb
stc
stc
sub
lahf
bound
loop
pushl
test
lods
cwtl
and
hlt
cs
adcl
pop
xchg
imul
test
shll
mov
jne
int
loope
int3
dec
pop
pop
icebp
cmp
xchg
lahf
mov
sti
and
sbb
repnz
dec
xchg
clc
pusha
push
push
insl
cwtl
sbb
movsb
movsb
push
xchg
bound
push
push
cltd
mov
mov
mov
popf
call
pop
je
sub
jl
add
test
pop
mov
or
insb
ret
lret
cmpsl
push
ds
or
mov
lods
cmp
lods
stc
xchg
cwtl
adc
stos
mov
mov
repnz
ljmp
sbb
xchg
push
mov
mov
push
mov
in
jp
sbb
int
xchg
push
cmc
mov
clc
inc
sahf
stos
sbb
sbbb
xchg
sti
push
mov
mov
js
daa
mov
add
sbb
cmpsl
mov
mov
rorl
and
pop
adc
xchg
mov
add
loop
add
lods
jnp
mov
mov
sbb
div
xorb
ljmp
ss
and
sub
push
xor
sbb
out
cli
movsb
daa
rorl
aam
sub
sahf
cmp
push
ljmp
lret
lahf
adc
out
adc
push
iret
pop
add
lods
sub
adc
je
add
cmp
loopne
repnz
daa
xchg
outsl
les
mov
mov
aad
or
xchg
xchg
inc
icebp
add
or
mov
cmp
mov
adc
ret
add
sahf
fld
aam
outsl
mov
cs
sarl
ljmp
push
pop
cli
jne
outsb
fldcw
xchg
scas
into
adc
cwtl
scas
cltd
inc
xlat
add
cmp
sbb
data16
arpl
js
push
jmp
out
add
shr
sahf
mov
push
lret
pop
and
fsubrs
adc
inc
jge
andl
cmp
fwait
xchg
add
call
mov
stos
repz
scas
sub
jae
aam
pop
mov
orl
push
push
adc
inc
out
inc
or
stos
scas
fstpt
mov
xor
in
push
cmc
bound
push
cmp
xchg
add
mov
jge
or
call
adc
dec
ds
lret
outsb
mov
cwtl
lcall
je
cmp
test
std
adc
dec
fwait
and
aam
push
int
cld
sub
cli
cmpsl
sahf
nop
jbe
jb
fdivrs
and
cld
out
sbb
lahf
nop
mov
aas
jb
mov
lahf
pop
outsb
int3
xlat
lods
daa
pop
mov
add
lds
das
cmp
cmp
cmpsb
sub
cwtl
inc
leave
je
in
jge
add
std
cmp
aaa
lret
mov
bound
add
mov
rol
xor
push
lods
inc
ds
cmp
adc
adc
jle
jmp
and
out
pop
jno
jae
lea
arpl
aam
popa
rol
icebp
jbe
test
lret
mov
aam
leave
or
lcall
sti
sbb
push
mov
push
sub
out
fst
movsl
inc
hlt
aas
scas
push
notl
js
movsb
adc
sub
in
pop
aaa
test
insl
or
dec
mov
or
inc
and
xchg
jle
repnz
add
imul
stc
push
pop
test
cmp
mull
sbb
mov
lods
xchg
fucomip
cmp
test
xor
and
outsb
inc
popf
jmp
mov
adc
sub
std
xor
call
pop
or
or
push
jns
push
jb
mov
mov
mov
xchg
add
sti
sahf
sub
add
test
push
sub
xor
pushf
fmuls
mov
popa
movsb
pop
xor
sub
mov
js
cmp
push
cmp
cwtl
pop
adc
loopne
test
daa
ret
mov
jae
out
lret
add
test
andl
cmc
std
out
arpl
mov
push
mov
cmp
mov
testl
fs
adc
shlb
push
mov
xor
inc
sarl
xor
cmpb
pop
xchg
aam
mov
ds
enter
pop
push
or
adc
pop
lahf
popa
push
lods
fcom
cvtpi2ps
pop
lcall
jecxz
jo
or
and
test
mov
adc
notb
sti
pop
cmp
mov
fildl
repnz
pop
icebp
lea
or
mov
pop
inc
sbb
cld
rorl
cmp
fcoml
scas
jmp
in
sbb
out
fmull
clc
faddl
inc
addr16
xchg
pop
fnsave
pop
dec
pop
aas
mov
dec
jecxz
add
push
and
or
or
push
sbb
jge
nop
mov
mov
in
jp
pop
mov
sub
jmp
leave
lcall
movsl
push
mov
out
jecxz
push
pop
add
sbb
fildll
gs
aam
in
jle
xor
add
adc
add
into
push
xchg
loope
decl
add
jmp
mov
and
inc
aaa
cmp
aas
pop
mov
js
lret
fimuls
mov
cmp
add
lods
mov
push
xlat
and
fmull
push
cmp
jecxz
repnz
or
mov
nop
mov
or
cltd
pop
push
mov
pop
test
clc
popa
fs
es
adc
out
movsl
mov
adc
or
fnsave
lock
fstpl
lods
sbb
sbbb
push
into
out
fwait
addb
cltd
dec
fsubs
pop
out
in
xchg
push
rol
test
jl
cmp
aam
sub
xor
ja
xor
pushl
cmp
fimull
sbb
repnz
adc
mov
aam
sbb
nop
popf
mov
aam
and
jae
cmc
lods
sub
adc
or
es
cmp
lock
nop
lock
loop
loope
dec
inc
push
repnz
dec
dec
mov
js
ret
js
testb
push
test
pop
aas
addr16
mov
das
xchg
add
push
cmp
jl
lds
adc
fistps
pusha
lcall
jno
sub
mov
mov
repz
mov
adc
pushf
rcll
adc
dec
icebp
sub
ror
pushf
inc
scas
cmpsb
dec
js
adc
nop
out
adc
clc
pop
jb
test
shrb
test
ficompl
fsubr
mov
imul
scas
sub
fsubrl
mov
add
lods
addb
popa
xor
insb
sbb
repz
dec
lret
mov
mov
aam
mov
dec
aas
xlat
push
inc
mov
jne
stos
scas
stos
push
pop
repnz
ja
jmp
lahf
add
xchg
cs
scas
dec
cmpsl
movsl
leave
or
cwtl
dec
jb
nop
lret
mov
inc
fsubrl
jl
adc
pop
mov
out
mov
test
mov
add
pusha
stc
add
cmp
rcr
rorb
sahf
adc
add
popf
frstor
dec
test
add
mov
mov
popf
aad
enter
or
xor
pop
mov
insb
push
jecxz
jns
mov
mov
test
ja
cmpsl
hlt
xchg
enter
mov
stos
jg
dec
inc
mov
lock
lahf
fisttps
cmp
shlb
cld
or
sar
std
or
inc
ja
xchg
stc
loopne
test
push
dec
add
and
jmp
test
dec
jp
fildll
inc
sub
or
lock
sbb
xor
xchg
movsb
mov
push
fdivrl
adc
aam
mov
scas
adc
sbb
jl
loopne
fisttps
xchg
add
sti
icebp
aaa
movsl
cli
xlat
jg
int3
push
popf
xchg
cmp
scas
mov
pop
dec
ja
outsl
pop
xlat
lods
js
btr
divb
mov
xor
inc
mov
in
xor
mov
cld
mov
dec
push
iret
push
inc
cmp
push
mov
fmuls
fisttps
xchg
mov
adc
insl
push
jp,pt
mov
sbb
or
pop
mov
pop
pop
enter
or
ret
repz
outsb
add
mov
adc
addb
daa
xor
sub
repz
sub
adc
jno
mov
push
mov
or
mov
fstl
lcall
mov
fs
sbb
in
notl
sti
outsb
cmp
jnp
fs
jno
inc
sub
or
je
inc
fcmove
mov
lret
daa
inc
rcl
jecxz
sbb
adc
push
rcll
inc
jo
lods
push
adc
popfw
paddd
jmp
or
xor
out
lcall
test
mov
and
jns
push
sbbl
loop
rorb
cmp
mov
xchg
dec
mov
pop
arpl
arpl
jmp
mov
cvtdq2ps
cmp
pop
dec
bound
mov
or
push
push
jnp
fidivs
xchg
sarb
js
jno
inc
xchg
mov
scas
clc
sub
clc
movb
imull
adc
call
lods
adcl
or
mov
mov
xchg
inc
pop
in
scas
or
cwtl
jecxz
or
mov
pop
shrb
rclb
inc
ss
jo
call
or
mov
mov
xor
sub
aaa
mov
int3
cmp
add
or
push
test
jne
mov
andb
cmp
aas
int
inc
sub
sbb
repz
popa
push
cmp
je
jno
xor
and
fsts
das
mov
mov
es
mov
lcall
jle
scas
nop
cmc
mov
scas
popa
mov
xchg
idivl
lret
pop
into
sbb
ret
mov
cltd
scas
or
adc
mov
sbbl
xchg
std
xchg
inc
repz
mov
orl
push
ljmp
sub
int
or
repnz
dec
jl
cmpsl
push
arpl
nop
push
and
jno
ret
call
sbb
data16
test
sbb
jl
orl
leave
adc
scas
data16
jns
ja
loop
or
or
test
dec
sbb
adc
lret
inc
lcall
pop
xchg
into
dec
sbb
pop
add
mov
adc
ds
loopne
add
call
fldl2e
add
clc
push
mov
fwait
lcall
pusha
hlt
mov
lds
mov
outsl
mov
inc
xchg
and
sbb
add
xchg
xor
or
jecxz
mov
xor
mov
push
hlt
adc
leave
and
push
jle
xchg
negl
jp
xor
pop
xchg
cmp
add
test
cmp
andl
movsl
sub
inc
aaa
mull
push
jo
jl
push
mov
push
mov
sbb
stc
fcomps
fs
or
cmpsl
sbb
mov
test
xor
add
lock
es
sub
test
push
cs
adc
movsl
lds
fwait
jecxz
lock
sti
repz
mov
lods
xor
xor
rclb
popa
push
fcmove
xchg
pop
ja
jne
or
scas
mov
dec
mov
jmp
insl
aam
sahf
sarb
inc
repz
mov
cld
stc
cmp
mov
push
lahf
push
sbb
into
pop
jne
enter
inc
aas
dec
adcb
dec
cmpsb
jl
and
icebp
lea
das
pop
pop
xlat
mov
xchg
je
data16
js
fildl
out
loop
jno
sub
in
je
dec
hlt
pop
inc
xchg
jl
hlt
std
xchg
adc
jae
or
sub
cmpl
mov
and
stos
pop
in
in
pop
push
mov
lret
sbb
push
xor
jmp
cmp
sub
push
loopne
cmc
andl
test
xchg
inc
enter
fwait
xor
jge
sub
inc
mov
aad
lock
jmp
test
adc
jle
fcmovnu
repnz
add
movsl
in
push
aas
outsl
jae
cltd
stos
cmp
sub
rcll
add
xchg
push
imul
add
xor
int3
addr16
add
mov
push
pop
and
or
pop
push
mov
aad
add
js
and
test
cmp
test
cmp
fidivrl
call
nop
daa
roll
dec
sub
xchg
jecxz
leave
sub
push
std
and
adc
outsb
iret
pushfw
imul
jmp
add
pop
fwait
xchg
mull
das
insb
and
notl
and
cmp
mov
fnstsw
addl
out
lods
rorl
pop
lods
aas
pop
sahf
mov
insb
add
push
sub
adc
rcrb
addr16
je
pop
cmp
push
mov
mov
inc
in
sbbl
inc
or
pop
jnp
ret
fldcw
cmp
mov
cmpsb
jle
imul
aaa
pop
mov
or
mov
iret
mov
jl
mov
cmp
jle
repnz
data16
cmc
pop
mov
mov
add
push
xchg
and
movl
clc
loop
xor
xchg
ja
jb
mov
insb
rcrl
je
aam
or
shl
fs
ja
sbb
lahf
push
sub
mov
cmp
jecxz
inc
mov
cltd
pop
push
dec
lret
fwait
inc
xor
aaa
leave
lds
adcl
sahf
mov
dec
and
cmp
scas
push
loopne
push
pop
xor
mov
mov
icebp
sarb
in
or
repnz
mov
push
and
push
mov
mov
cmpsb
je
int
not
out
inc
sub
and
popf
mov
les
aaa
push
daa
push
outsl
adc
adc
lret
imul
flds
dec
lock
mov
jae
test
stos
xor
xor
pop
and
pop
lea
cmp
cltd
sub
test
or
das
repnz
mov
pusha
aaa
in
icebp
jnp
pop
jecxz
xchg
lds
push
sti
sub
jp
sbb
aaa
dec
lea
pop
fistps
ljmp
outsb
and
pop
lahf
xchg
mov
pop
pop
rol
push
in
ja
xchg
js
subl
pusha
adc
sub
mov
into
sub
cmp
sub
pop
dec
es
sti
outsb
cmp
mov
nop
xor
mov
xlat
xchg
pop
js
inc
lds
enter
xor
lahf
mov
pop
and
faddl
aas
lds
testb
ret
das
xor
cmc
or
and
es
xchg
dec
adc
decl
imul
out
sahf
xchg
adc
mov
cmpsb
inc
mov
gs
mov
into
les
add
or
pushf
maxps
in
lcall
mov
out
and
cs
cs
push
sbb
imul
and
or
add
jg
ja
mov
rcrb
lea
inc
mov
mov
leave
pusha
jb
jmp
push
clc
bnd
sub
bound
xchg
or
sub
mov
outsb
or
dec
pop
paddq
push
std
ss
aas
ror
dec
inc
repz
and
and
jle
mov
mov
orb
fs
sub
or
mov
or
xlat
mov
mov
dec
out
cltd
push
pop
sti
dec
jns
shl
idiv
jnp
cmp
pop
addr16
mov
std
or
ljmp
fucom
sbb
cmp
call
lods
cmp
inc
les
icebp
out
add
and
out
stos
xchg
inc
jecxz
inc
iret
cmp
lret
cmpsl
dec
xlat
xor
inc
sbb
mov
dec
xchg
dec
outsl
or
movsb
sbb
mov
xchg
or
mov
mov
push
mov
xlat
push
pop
xchg
data16
cltd
movsb
dec
mov
cmp
push
pop
insb
mov
mov
sbb
mov
xor
cmp
or
lea
in
push
popa
aad
adc
and
pop
cmc
stc
mov
sbb
inc
lea
mov
mov
lods
insl
mov
push
cmpsb
mov
inc
ljmp
loop
cmpsl
js
aad
fs
mov
lahf
jno
xchg
enter
in
mov
and
add
pop
dec
dec
pop
push
loop
stc
aaa
int3
pop
inc
dec
jns
out
adc
ja
fldt
sbb
lcall
jge
push
repnz
jbe
fistl
mov
dec
sti
ss
mov
mov
pop
decb
and
or
js
dec
inc
pop
inc
xor
adc
xchg
jle
jmp
ret
in
dec
fwait
call
or
insl
jl
mov
add
push
out
cmc
fsubrl
setae
sbb
jbe
mov
jbe
fwait
std
mov
mov
mov
mov
lock
inc
rorb
int
daa
dec
mov
aas
mov
jbe
ret
and
inc
pop
pop
decl
sub
lock
push
mov
pop
mov
out
ljmp
sub
sbb
popa
inc
adc
mov
mov
cs
scas
xor
out
mov
sar
clc
repnz
pop
jnp
add
and
lret
jae
orl
fildl
xchg
gs
sub
add
sbb
stos
testb
push
addr16
int3
pusha
mov
addr16
lods
fists
add
aaa
push
or
jno
add
orl
rorb
mov
push
adc
pusha
jg
mov
and
mov
push
pop
ds
jno
jbe
mov
push
sub
mov
jmp
shl
jg
cld
fstps
push
in
shlb
adc
jo
into
fsubl
cmpsl
cmp
dec
sub
loopne
fistpll
cld
xchg
ret
movsb
fcmovnu
xchg
shr
sbb
sbb
mov
jecxz
cltd
pushf
jmp
lods
shrl
pop
cmp
pop
lock
inc
mov
test
push
and
dec
ja
repz
test
in
jae
push
shll
bound
imul
je
push
enter
rol
pop
lea
sti
sbb
hlt
and
adc
pop
dec
mov
cltd
pop
dec
inc
and
sar
xchg
and
pop
inc
sub
inc
sbb
hlt
xlat
or
dec
xchg
or
xor
push
and
popf
data16
xchg
insl
add
int3
mov
adc
xchg
lea
lods
adc
pop
sbb
xor
in
movsb
pop
xchg
popf
inc
and
out
insl
xchg
jns
sbb
and
aam
loopne
xchg
push
repz
sbb
sbb
xchg
sub
mov
sub
adc
mov
aaa
inc
inc
int
fdivrs
sbb
popa
mov
mov
jo
les
xor
jmp
sbb
mov
dec
mov
inc
adc
scas
je
xlat
shlb
cmpb
inc
sub
sti
jge
jg
popa
push
repnz
sub
int
loopne
into
out
mov
into
pop
mov
cmp
ret
bound
inc
shlb
popa
cld
adc
cmp
icebp
jb
jns
scas
xchg
adc
push
notb
pusha
in
addr16
dec
rdpmc
stos
sahf
sub
sbbl
push
sub
jecxz
mov
fdivrs
imul
xor
jns
rorl
outsl
push
sub
sbb
test
arpl
dec
or
pop
int3
dec
ljmp
cmp
dec
mov
data16
gs
ret
mov
or
mov
mov
iret
test
cltd
mov
xchg
xchg
adc
pop
xchg
inc
test
xor
jmp
imull
outsl
sbb
mov
mov
lods
cmpsl
in
pop
adc
cs
mov
int
shll
xor
dec
mov
push
mov
lea
push
es
push
mov
add
nop
test
shll
sbb
mov
push
outsl
je
sbb
bound
sub
pop
leave
or
jbe
inc
je
shll
add
sub
jae
lret
lahf
sahf
push
iret
dec
adc
and
pop
popa
shlb
lods
fs
or
shlb
leave
xor
sahf
push
dec
adc
sbb
sbb
sarl
xchg
cmp
jl
sub
adc
loop
xor
mov
orl
cwtl
lock
fldpi
jae
xchg
inc
lret
dec
mov
mov
loopne
xlat
xor
push
mov
in
sub
jns
shrl
mov
cmp
or
mov
cmp
inc
inc
adc
cmp
es
bnd
dec
sub
mov
push
jle
or
or
ret
out
inc
jl
xchg
mov
and
pop
adc
test
data16
inc
lods
ds
adc
roll
sahf
cmpsb
aad
mov
mov
adc
mov
sahf
or
fcmovu
inc
or
add
addl
bound
sbb
sub
pop
or
jno
jbe
pop
cmp
stc
lcall
shl
jecxz
popf
push
hlt
add
or
cwtl
jnp
pop
fsts
xchg
fwait
aas
les
jl
lret
and
xchg
lods
pop
loop
dec
stc
add
cmp
lock
jns
outsl
adc
jl
lds
test
push
into
xor
pushf
xchg
mov
xlat
pushf
imul
addl
movsb
movl
cmp
mov
push
xlat
shl
and
stc
jg
daa
cmpsl
cmpsl
ja
lea
cli
jle
fs
pop
les
insl
jp
lcall
in
outsl
jb
cmc
call
les
adc
pop
and
adc
shll
lret
pop
bound
gs
pop
cwtl
mov
and
or
mov
pop
hlt
addr16
inc
enter
imul
shrl
inc
inc
push
add
jns
and
or
xor
and
xor
daa
pusha
stos
push
mov
xor
lahf
das
into
rep
in
pushf
sti
addr16
cltd
adc
mov
mov
jnp
cli
jns
cli
xchg
jne
mov
mov
pop
xlat
or
cli
scas
dec
cs
rclb
fcoms
mov
xlat
xlat
xchg
push
cmpsl
push
pop
pusha
cs
jmp
test
xchg
cmc
nop
pop
imul
loop
jmp
je
pop
fdivl
jecxz
das
cmp
gs
or
enter
in
cwtl
mov
lcall
adc
mov
mov
shll
test
adc
push
push
pop
cmp
push
cltd
loopne
pop
jo
lds
pop
mov
adc
cs
ljmp
lock
fsubr
and
mov
pop
movsb
aaa
mov
and
mov
or
xchg
testb
fdivrs
mov
add
pop
fs
std
sahf
mov
imul
out
sub
test
fldl2t
pushf
outsb
cmp
in
ror
xchg
sub
xor
fisubl
push
pop
icebp
jae
inc
int
jge
addr16
mov
mov
and
pop
xor
jmpw
shll
and
aas
mov
mov
mov
pop
inc
sahf
mov
push
test
push
in
arpl
adc
pop
arpl
push
inc
sar
xchg
lock
cld
bound
mov
dec
mov
mov
xor
sbb
ja
inc
dec
sahf
fs
push
and
jo
es
adcl
lds
add
dec
ret
jns
or
jg
cmp
xlat
cmp
rcll
repz
cmp
in
ret
hlt
imul
lcall
and
mov
pop
xlat
cmp
adc
cmpsb
fimuls
dec
aas
imul
int
add
mov
and
mov
arpl
rorb
mov
hlt
adc
sarb
out
into
dec
jno
add
divb
push
dec
shlb
push
mov
or
out
outsl
pop
jecxz
pcmpeqb
sub
jg
or
orb
fsubrs
cmp
xchg
popl
gs
out
mov
jle
lea
mov
ds
push
and
and
mov
jbe
push
insb
add
xor
ds
add
pusha
push
sahf
xor
test
leave
mov
xor
loop
mov
cs
mov
sub
loope
insl
mov
and
fcom
out
stos
push
cwtl
dec
jge
xor
sbb
cwtl
cmpsl
add
stos
inc
cmc
pop
adc
dec
lock
fnstsw
orb
and
mov
mov
jl
jge
hlt
dec
popa
testb
or
aad
jae
xchg
sbb
mov
jmp
out
cmpsb
dec
lods
jp
movsb
push
pushf
mov
pusha
dec
sbb
cmpb
insb
push
cmp
and
or
popf
loop
or
std
subb
das
sub
mov
lods
mov
add
iret
mov
pusha
cmc
push
sahf
mov
pop
dec
cmp
lds
pop
xchg
test
test
xorl
jnp
out
jnp
pop
cmp
pop
stc
repz
dec
dec
das
popf
js
mov
loop
mov
inc
ja
fldl
arpl
jle
pop
pop
dec
mov
inc
jmp
push
shll
call
enter
lods
ja
call
pop
aam
ja
stc
jb
pop
mov
aam
ss
dec
cmp
jg
dec
movsl
inc
cld
mov
adc
lret
add
jmp
lods
clc
fwait
jne
fldcw
mov
je
xchg
and
push
push
cmpsb
cld
jae
movsl
xchg
jno
rcll
daa
jns
push
lahf
mov
call
xor
je
dec
sbb
push
push
add
adc
lea
xchg
jp
or
sbb
pop
or
adc
sub
aas
cmc
dec
and
and
inc
pushl
push
jle
xchg
mov
pop
push
and
cld
fs
mov
xchg
test
sbb
ss
das
iret
pop
sub
arpl
xchg
adc
std
or
lcall
test
adc
stc
jle
lods
jl
int3
adc
sbb
sbb
outsl
js
mov
lods
cmp
sub
pushf
lods
or
lock
aam
or
jp
js
dec
adc
inc
mov
bound
imul
dec
fdivrp
mov
fcoml
xlat
xchg
push
mov
outsb
popa
bound
aad
filds
ss
xchg
scas
jno
pop
xor
cwtl
jle
mov
ret
jae
call
and
insl
repz
cmp
xlat
jbe
insl
jp
out
outsl
xlat
movsb
mov
pop
aaa
into
jne
fldenv
or
mov
pop
and
test
sbb
sub
mov
sbb
pop
out
jo
and
pop
cmpl
xor
push
mov
out
out
sti
aam
xor
lds
lea
mov
gs
add
lods
pushf
mov
mov
repnz
or
icebp
adc
fcoml
lock
cld
or
mov
out
mov
jg
or
or
xor
stos
jle
test
std
cwtl
add
sub
pop
jmp
sbb
xor
jmp
andb
cmp
pushf
stc
mov
sub
stos
js
divb
jno
stc
adc
push
mov
cmpsl
mov
jmp
imul
pop
jnp
mov
lods
repnz
int
test
pop
pushw
jge
jge
mov
push
or
cmp
lret
add
hlt
dec
cmp
pushf
lahf
and
clc
addr16
sbb
xor
add
dec
mov
jge
jge
jb
fistpll
aas
mov
das
inc
rorl
fbstp
sub
es
mov
in
mov
or
xor
jg
cmovno
in
mov
xor
push
inc
cs
push
jg
and
and
dec
sar
mov
arpl
outsl
sbb
xchg
subl
je
jae
sub
call
sub
test
jl
test
mov
sub
mov
adc
xor
lods
sbb
aam
jp
enter
or
in
cwtl
icebp
jg
and
out
stos
mov
jmp
and
push
sbb
inc
std
popa
xlat
notl
push
fimuls
jp
and
lods
sahf
outsl
shl
push
roll
sub
test
rcrl
cmovge
or
daa
mov
push
inc
jb
fsubrs
cld
add
xchg
push
or
mov
push
fdivrl
pop
pop
je
cmp
stos
aas
add
jae
sbb
inc
mov
mov
outsb
sarb
adc
aad
ds
lea
sbb
adcl
cmc
push
and
popf
pop
cmpsb
sbb
mov
fs
or
stos
in
mov
adc
ficoml
mov
or
mov
or
in
add
jecxz
shrb
imulb
mov
test
ret
mov
ljmp
mov
inc
mov
cwtl
inc
inc
cmp
xor
test
sbb
shrb
cmp
arpl
out
mov
rclb
hlt
stc
je
mov
cmc
jmp
lods
clc
xor
or
sbb
add
in
jno
lcall
jno
fcmovbe
aad
scas
mov
lods
mov
js
jae
xchg
movsl
mov
cmp
push
sbbl
bound
dec
inc
push
in
out
pushf
test
xchg
mov
and
in
inc
fdivp
jmp
imul
test
aam
popa
add
or
pop
jns
inc
cmp
or
fs
aaa
adc
xlat
fadds
leave
cs
loop
js
mov
in
fbstp
push
sbb
scas
mov
and
push
adc
ja
inc
lds
mov
jge
aas
xor
jbe
outsl
dec
push
leave
sub
movsl
push
mov
lahf
leave
jp
jns
jmp
add
inc
jns
xor
imul
enter
jae
loop
fwait
ds
mov
cmp
add
in
in
xor
and
lret
repnz
in
adc
sarl
mov
jbe
mov
loop
jle
sbb
xor
shlb
test
addr16
adc
cmp
pop
fists
xchg
rorb
scas
pop
cmpsb
outsl
adc
push
xchg
xchg
out
xchg
mov
jnp
cmp
adc
icebp
or
push
inc
fisttpl
sahf
mov
xchg
or
dec
cmpsl
jbe
xchg
xchg
push
sub
xlat
lcall
mov
cmpsb
adc
in
das
xchg
sahf
adc
stc
xchg
push
test
inc
or
mov
pop
stc
cmp
jmp
divb
movl
jecxz
inc
or
lods
js
aas
or
mov
int
ss
push
cmp
cs
xchg
fidivrs
pop
mov
enter
addr16
test
ret
jnp
loope
fcompl
popa
decb
pop
cli
add
inc
stc
push
stc
cltd
scas
lods
pop
and
fidivs
xor
jbe
push
mov
inc
cmp
mov
cmp
addb
aaa
leave
pop
push
mov
out
pop
sub
aam
mov
jnp
aam
ret
cltd
push
adc
inc
sbb
fwait
push
push
push
jg
dec
test
mov
adc
add
push
popf
cmpsl
cmp
push
dec
dec
inc
inc
rclb
psubusw
sbb
or
call
adc
push
fstl
filds
jl
mov
xchg
mov
pop
out
pop
and
loop
out
xchg
cmpsb
roll
add
cli
push
ljmp
movsb
cmp
fimull
add
pop
imul
iret
add
outsb
arpl
mov
das
ss
push
xor
xor
test
xor
mov
mov
jle
mov
xor
out
push
xchg
sarb
out
push
loopne
add
loopne
mov
jecxz
lret
cmp
cld
pop
xchg
imul
cltd
adc
js
mov
lahf
out
push
inc
rep
xor
insl
icebp
je
sbb
cmp
fadds
ljmp
cmpsb
out
lret
loope
push
cmp
fidivrl
test
imul
mov
or
xchg
cmp
loop
jns,pt
movsl
repz
push
call
out
cmp
adc
or
sarb
xor
insl
into
or
daa
mov
cmpsb
mov
mov
jl
xlat
hlt
sub
lods
pop
dec
sub
test
enter
icebp
push
sbb
xchg
aam
stc
andb
jo
aaa
dec
inc
and
and
pop
movsl
xor
mov
repz
mov
lods
fcmovnu
aam
push
xchg
sub
daa
sbb
and
xor
dec
outsb
ja
push
mov
cltd
adc
jb
add
mov
mov
jo
cltd
scas
repnz
repz
jno
pop
inc
ss
push
in
sub
xor
inc
cmp
popl
ss
inc
js
and
mov
jae
popf
and
sahf
pop
mov
incb
mov
push
adc
push
icebp
fisubrl
pop
or
adc
cld
mov
ss
xor
hlt
cmp
xlat
mov
cs
out
and
mov
call
sbb
enter
repz
enter
mov
mov
and
shll
lret
lock
xchg
xchg
jbe
stos
inc
fbstp
sub
enter
add
mov
mov
in
push
in
jb
xor
lahf
ret
pop
mov
imul
out
xchg
adc
inc
mov
dec
loopne
mov
out
fsubp
mov
sbb
xchg
popf
fnstenv
cs
jg
or
xor
cmp
repnz
insb
push
lds
or
scas
fadds
jl
xchg
lahf
push
push
in
mov
js
mov
scas
popa
jg
test
mov
pop
iret
int3
xchg
faddp
and
notb
fldt
xchg
out
test
mov
sbbb
fldenv
iret
int
pop
sub
pop
sti
or
and
lea
push
lds
aaa
cmp
push
xchg
bound
stc
xorl
push
push
repz
jmp
add
jl
pushf
adcl
adc
in
jno
lahf
call
dec
loope
call
mov
jge
stos
loop
xorl
or
idivl
cld
pop
jbe
test
adc
pop
jns
sub
xor
push
jmp
cld
dec
inc
mov
cmp
out
in
mov
ljmp
mov
mov
lret
aas
sbb
frstor
cmc
in
sub
in
aad
push
stos
aas
testl
and
cmp
bound
scas
lods
orl
mov
fldl
xchg
lods
imul
rcll
push
or
push
and
test
outsl
test
mov
adc
cs
add
sahf
add
stc
test
sbb
push
mov
jno
push
jl
lret
test
mov
ja
sub
push
out
push
int3
cmp
cmp
xchg
out
adc
les
lcall
test
push
lret
cmp
mov
sub
ja
das
xor
lock
adc
pop
loopne
sbb
push
int3
out
mov
xor
gs
faddl
cmp
mov
or
fs
jns
repz
and
sub
imul
inc
ret
pusha
vxorps
and
mov
sbb
add
pushf
or
xchg
js
dec
pop
xchg
ja
mov
clc
lods
lea
popf
push
push
clc
mov
add
sbb
jo
adcb
inc
fdivr
mov
mov
out
movsl
out
and
push
into
cli
adc
sub
out
inc
xchg
nop
scas
sub
push
add
js
in
les
cmp
mov
dec
insl
test
scas
cld
loop
sti
cmp
into
popa
xchg
dec
xchg
imul
mov
lcall
daa
shlb
test
push
por
push
add
insb
test
sub
cmpsb
movsl
lahf
add
sub
cld
xor
fldenv
jmp
gs
movsl
loopne
push
shll
dec
out
ss
mov
and
test
add
and
mov
dec
addr16
jecxz
add
mov
mov
xor
mov
xchg
imul
cmp
mov
pusha
adc
pop
mov
sbb
scas
adc
jae
mov
cwtl
xchg
imull
iret
jecxz
sbbl
into
inc
cmpsb
rclb
cmp
mov
shrl
mov
add
cmp
rcrl
inc
ret
leave
xchg
in
rol
int3
jp
iret
aad
mov
lcall
mov
rcl
xchg
and
add
cmp
fcoml
ja
adc
out
adc
aaa
sbb
orb
sbb
mov
in
les
adc
cmp
adc
sub
jecxz
push
inc
mov
sahf
add
or
out
loopne
dec
mov
push
repnz
pop
std
xchg
call
xor
dec
cwtl
mov
jg
pop
push
cli
leave
xor
mov
or
scas
add
pushw
sbbb
enter
lcall
lret
sbb
jbe
leave
sti
mov
mov
jmp
cmpsb
test
dec
cmp
lret
mov
fchs
dec
dec
fxch
inc
loopne
mov
popa
shlb
xor
lcall
cmp
scas
movsb
sti
aam
fisttps
mov
lds
jbe
add
mov
push
sbb
pop
add
es
and
mov
popf
sbb
pop
sbb
mov
out
cmp
rorb
push
call
push
test
inc
sbb
daa
and
les
cmp
mov
clc
insb
cmp
mov
xchg
inc
dec
mov
cmc
push
and
dec
shlb
fcoml
or
nop
xor
push
es
nop
push
inc
and
xor
stos
notb
pop
lahf
sbb
outsb
bound
xchg
lcall
ret
and
add
je
aam
ljmp
mov
movsl
movsb
frstor
mov
mov
out
ficomps
mov
dec
fcmovb
jle
in
sub
pop
mov
lods
sub
ret
mov
jo
xor
and
and
push
push
inc
xchg
test
sub
test
mov
sub
mov
stc
es
xor
repz
jge
xchg
push
xchg
pop
rol
pop
pop
addr16
dec
jle
imul
call
add
cmp
and
xor
mov
outsb
es
popf
push
jg
aam
cmp
cmp
lret
ljmp
xchg
mov
push
stos
xor
pop
loope
push
outsb
or
xchg
sbb
mov
stos
rol
aas
out
sbb
push
mov
ja
xchg
dec
cs
adc
mov
aas
add
pop
adc
xor
ljmp
cld
in
mov
xchg
add
jno
call
mov
mov
pop
divb
movsb
add
std
loopne
sbb
popf
fwait
mov
gs
push
or
lea
pop
push
or
in
and
je
out
push
dec
jae
or
addr16
testl
xchg
adc
lahf
jmp
cmp
inc
lea
test
outsl
mov
jmp
loop
movzbl
mov
pusha
xchg
push
adc
dec
divb
int3
push
out
ljmp
sub
dec
xabort
pop
xchg
jne
and
bound
and
stc
sub
iret
sbb
fsts
into
or
or
jns
and
dec
push
cmpsl
subl
or
jo
popa
add
or
push
mov
imul
ss
sbb
pop
mov
jmp
cmp
mov
jle
stos
pop
cltd
fdiv
mov
insb
inc
mov
jae
ljmpw
pop
push
mov
hlt
add
pop
add
fisubrl
dec
mov
push
mov
pop
test
call
add
mov
cmp
sbb
pop
push
jne
out
ja
mov
repz
lahf
pop
jns
mov
dec
adc
into
and
mov
aam
add
repnz
bound
or
sub
mov
push
add
cwtl
xor
rcrb
xchg
or
iret
movsl
gs
loop
cmpl
call
add
sahf
pusha
iret
cmp
mov
rol
adc
fs
mov
insb
add
xchg
cmp
adc
inc
cmp
pop
lods
jg
or
fisttps
push
fldcw
loop
adc
push
cmp
popa
imul
fucomip
jecxz
lahf
jnp
outsb
jecxz
adc
mov
sub
fs
cmp
test
add
add
ret
mov
push
in
or
jecxz
and
lea
cmpsl
mov
mov
sbb
shll
push
xchg
pop
inc
jne
mov
push
in
mov
loop
ljmp
push
mov
int3
enter
das
call
push
and
or
ljmp
fcmovne
adc
pop
fs
stos
int
test
inc
jae
test
cli
sub
sub
into
mov
aas
nop
jb
mov
jne
xchg
mov
adc
cmovbe
sbb
dec
push
mov
dec
xchg
mov
gs
xor
pop
arpl
mov
and
jg
dec
push
pop
jb
push
adc
cmp
add
adc
stos
in
or
mov
xchg
or
icebp
test
cmc
cmpsl
rcrl
cmpsl
inc
sbb
mov
mov
cmp
xchg
dec
gs
cltd
push
pop
or
aam
jne
sarl
cmpsb
fdivrs
mov
add
sub
mov
rol
lret
dec
push
lea
daa
lret
in
lahf
in
je
xchg
sub
stc
or
imul
in
std
ret
jae
ss
pop
leave
fbstp
cld
sub
arpl
and
pop
push
inc
mov
test
jnp
ret
jno
sti
cmpsl
les
or
cmc
in
into
xlat
cmp
cmpsb
push
pop
sarb
push
into
mov
out
mov
xchg
scas
js
mov
mov
cmp
jbe
in
cmp
test
and
jnp
and
jmp
dec
mov
cltd
sbb
out
sbb
or
mov
jo
ss
push
test
lock
std
cli
mov
mov
lret
jns
clc
cmp
psrld
jmp
xchg
push
stos
stos
dec
je
test
push
outsl
fiadds
push
out
cmovne
mov
dec
jb
hlt
shrl
inc
clc
rcl
cmpsl
ret
mov
add
inc
mov
shl
adc
cli
xchg
pop
addr16
mov
xchg
out
in
js
jge
mov
pop
movsb
mov
rolb
imul
fcmovne
jb
xchg
jne
in
outsb
fdivs
aad
in
jge
out
push
ljmp
or
pop
in
mov
cmp
icebp
loop
mov
dec
add
jo
and
jns
decb
sub
xor
push
push
push
rorb
add
fmuls
outsb
mov
mov
mov
mov
xchg
fildl
popa
mov
or
fdivrl
sub
sbb
push
push
sbb
imul
pop
dec
dec
push
jp
dec
inc
pop
xchg
or
filds
shlb
je
mov
mov
pop
inc
notb
jno
inc
jp
and
sbb
mov
inc
and
cwtl
xchg
pop
and
push
dec
lds
dec
scas
sub
jg
xchg
mov
and
xlat
inc
jne
rclb
push
push
lods
imul
or
mov
pop
xor
push
fistpl
call
js
push
dec
lds
cld
into
jecxz
add
fwait
daa
cwtl
xchg
lret
push
pop
nop
test
aas
pop
dec
mov
stos
mov
test
orl
push
adc
jne
repz
inc
pop
jg
les
stc
push
divl
adc
loop
push
xor
sub
mov
push
inc
test
stos
sub
mov
pop
cmp
rcrl
push
insl
call
iret
pop
out
arpl
sbbl
adc
lea
enter
popf
xchg
inc
cmpl
movsb
dec
mov
inc
lahf
add
cmp
icebp
xlat
lock
jge
cmp
xchg
mov
shl
or
xchg
jg
les
fcoms
dec
js
push
and
cmp
adc
int
mov
lret
mov
rclb
test
dec
sub
in
xchg
out
in
push
jne
push
shl
test
cs
mov
iret
sbb
jmp
mov
fistpl
mov
ret
arpl
adc
dec
mov
aaa
cmc
inc
push
push
xorb
pushf
mov
lods
sahf
mov
xchg
loop
adc
jecxz
fnstenv
insl
fsubr
add
inc
std
mov
cld
pushf
xchg
icebp
mov
lahf
push
fisttpll
adc
call
sbb
ret
sub
lods
lahf
sub
mov
aad
xchg
mov
fnstcw
sub
jge
outsb
xchg
adc
stc
xchg
popl
cld
push
outsl
loop
dec
shrb
mov
lea
fimuls
xchg
mov
dec
cmp
lock
cmc
data16
dec
mov
rorl
sbb
mov
cmc
add
cmp
inc
popa
iret
add
dec
xor
rcr
sub
stos
aad
inc
arpl
int3
inc
roll
arpl
mov
aaa
ror
mov
xchg
adc
scas
mov
stos
int
into
sbb
jge
cwtl
ja
pushf
pop
ss
cld
and
int
mov
into
ja
xor
cmp
or
or
mov
mov
inc
lcall
mov
adc
inc
in
ffree
mov
lods
xor
mov
clc
into
sahf
sbb
insl
fucomip
rcr
push
lds
outsb
push
push
jno
xchg
xchg
push
into
loope
sbb
jb
test
cmp
outsl
loopne
mov
add
xor
imul
in
xlat
cmpsb
ja
cmp
enter
dec
je
jbe
scas
mov
out
xchg
in
push
mov
cltd
adc
add
not
in
lret
bound
ret
mov
jnp
and
ljmp
jns
push
jmp
mov
and
dec
imul
test
popf
add
xchg
push
and
and
add
cli
in
push
mov
push
stc
es
sub
rorl
push
loopne
xor
popf
cmp
daa
gs
ds
out
sahf
push
push
push
sbb
sbb
stos
lods
xchg
out
inc
mov
and
orl
xor
bound
xchg
sub
mov
sti
push
push
mov
lcall
mov
dec
cld
fiadds
loopne
xor
pop
mov
testl
xlat
cmp
ret
daa
aad
push
inc
push
lea
xor
inc
ljmp
sbb
punpckldq
loopne
xchg
js
cmpsb
jmp
pop
lcall
dec
imul
xor
mov
f2xm1
testl
cwtl
adc
gs
clc
orb
sbb
push
mov
nop
stos
push
test
mov
loope
add
dec
xchg
mov
in
mov
call
data16
hlt
xorl
push
es
movl
es
lcall
xchg
or
cmpsb
aad
jae
mov
out
sbb
pop
faddp
jp
mov
pop
int
adc
lock
imul
cmc
cmp
stos
loop
or
js
aas
stc
clc
test
cmp
xor
std
adc
lcall
cli
cwtl
sbb
cs
repnz
mov
mov
pop
and
loopne
fs
push
cmp
ja
movsb
sub
mov
iret
sbb
ja
in
lahf
add
stos
outsl
push
adc
and
push
or
test
sbb
jo
jae
mov
hlt
or
jle
sub
jg
insl
jb
loope
adc
into
pop
sub
pusha
lods
mov
push
mov
movsb
fiadds
iret
js
es
mov
rcr
lods
movsl
insl
in
xchg
enter
stos
mov
outsl
sti
or
adc
gs
repnz
insl
or
push
fisubl
inc
lea
xor
rcrb
aad
roll
ficoms
scas
das
scas
or
fldenv
pop
mov
jno
sub
pop
mov
jo
lret
dec
hlt
dec
and
pop
fiaddl
sahf
sub
jp
packuswb
das
sub
sub
inc
xchg
adc
xchg
dec
adc
idiv
loopne
push
out
cli
inc
lcall
push
dec
fdivrl
adc
mov
xlat
mov
xchg
and
aam
imul
lahf
push
jp
xor
add
and
xchg
xchg
adc
mov
fldenv
jle
xchg
mov
stos
mov
cmp
fisttpl
clc
pop
mov
shll
jne
mov
jno
je
xchg
mov
push
scas
loope
je
shlb
and
inc
push
fmulp
xor
mov
cld
cmp
mov
cmp
loope
movsb
push
pop
add
sub
sarl
and
mov
and
fnstenv
push
add
push
push
or
out
cwtl
sahf
sar
dec
push
sarl
jge
inc
cld
insb
fwait
xor
gs
mov
mov
sbb
es
inc
mov
mov
pop
fwait
in
iret
mov
stc
imul
jb
dec
data16
inc
movsb
aas
xchg
aad
dec
cmpsl
cmp
mov
iret
pop
sbb
or
push
sti
stos
mov
cmp
mov
mov
jne
aaa
inc
add
outsl
xchg
xor
shrb
sarb
jne
mov
cmp
cmpsl
int
add
pop
adc
test
stos
andb
mov
outsl
sbbb
loope
data16
sub
or
bound
inc
and
fdivs
subl
daa
in
loopne
or
inc
mov
adc
mov
ja
mov
xor
jge
out
jnp
push
push
stos
ss
faddl
js
outsb
sub
dec
out
or
adc
out
sub
addr16
repz
jbe
xchg
cli
pop
pop
test
sbb
xor
andl
adc
pop
mov
out
repnz
mov
push
incl
orl
ret
stc
or
xchg
fsub
mov
ret
andb
cmp
jb
sub
leave
mov
sub
scas
and
and
sub
sub
sbb
std
in
and
sub
and
dec
xlat
dec
mov
loop
imul
lods
mov
mov
mov
pop
push
and
xor
push
xor
mov
mul
les
mov
fldt
push
lret
xchg
or
xor
cmp
push
adc
and
shrb
sub
mov
mov
add
loope
hlt
mov
mov
fmul
bound
in
aam
xorb
pop
pop
push
leave
int
neg
xor
mov
pusha
nop
int
mov
and
push
xchg
and
jl
int3
mov
or
shll
add
mov
enter
out
movsl
mov
mov
shr
fadds
shll
int3
dec
ja
xchg
adc
ret
xchg
fldt
dec
xchg
adc
lea
xchg
adc
ja
data16
push
rcr
ucomiss
imul
xchg
adcb
pop
out
add
cli
inc
cmc
mulb
pop
push
mov
sub
fildl
lods
and
pusha
push
mov
or
adc
arpl
imul
xor
fisubs
dec
and
pop
sti
xor
cmp
js
mov
fidivs
rcrb
subb
xlat
xlat
inc
and
lahf
and
out
mov
pop
adc
rorb
lods
ljmp
sub
mov
sub
roll
scas
or
frstor
loopne
or
push
or
add
sbb
jl
dec
aad
mov
ret
aaa
mov
subl
inc
test
lret
mov
iret
cmpsl
lock
inc
sbb
faddp
movsl
outsl
ljmp
scas
add
decl
xchg
or
sbb
xor
daa
rol
orb
push
sbb
pop
mov
das
inc
in
cltd
iret
cmp
mov
add
mov
mov
dec
int
dec
and
jbe
call
das
or
add
cmc
hlt
xchg
inc
dec
inc
jge
xor
lds
dec
jb
push
sarb
mov
push
pop
mov
shll
jmp
mov
and
popf
popa
mov
outsb
xor
ss
lods
cmovl
mov
call
add
adc
inc
fwait
out
lret
clc
cmpsb
cmpsl
repnz
lods
adc
cmp
lods
mov
test
pushf
push
xor
loope
and
sarl
xchg
mov
mov
mov
jecxz
std
pop
popa
push
sbb
add
xor
test
stc
mov
bound
rcll
in
mov
cltd
test
mov
push
sub
adc
jp
jno
sub
cli
adc
ljmp
test
dec
and
adc
add
sub
leave
adcl
mov
stos
int
xor
test
bound
lods
cli
mov
mov
call
xor
scas
mov
aad
outsl
mov
jle
mov
daa
or
test
mov
xabort
popa
or
cs
mov
aas
cli
inc
aaa
push
les
enter
out
cmp
fists
outsl
mulb
jb
cmpsl
pushf
mov
jmp
scas
jecxz
mov
sbb
mov
xchg
jns
leave
cli
mov
inc
adc
rcll
push
mov
pop
aam
ss
cmp
cmc
lret
pop
repz
pop
ds
test
mov
add
in
fidivrl
or
cmpsl
loop
int3
js
outsl
loope
and
les
and
xor
cs
add
sub
dec
jl
pop
lret
je
leave
out
mov
filds
sub
pop
cmpsl
ret
fsubrl
push
cld
jns
mov
mov
sub
and
mov
test
cltd
rcr
mov
sub
pop
xor
adc
xchg
shrl
add
push
mov
push
dec
jmp
pslld
int
push
les
xlat
pop
pusha
mov
sbb
xchg
adcb
mov
rolb
cmc
insl
lret
mov
cmpsb
pop
fildl
adc
punpckldq
sbb
mov
mov
inc
mov
cmp
cmp
push
cmp
pop
inc
int
into
lods
mov
jne
or
sub
out
popf
mov
ret
ja
movsb
fidivrs
pop
cmp
fcom
testl
enter
pusha
jns
pop
test
inc
iret
jno
mov
leave
je
add
push
jns
dec
mov
cs
dec
outsb
pop
push
int
cmpsb
mov
mov
lcall
and
scas
testb
adc
xchg
inc
inc
lret
inc
adc
mov
stos
hlt
lret
xchg
jnp
lods
mov
jnp
jp
pop
jns
sub
push
adc
mov
pcmpgtw
pop
clc
xor
mov
inc
mov
cs
sbb
fdiv
popf
xor
lock
add
push
adc
nop
out
xchg
shrb
add
nop
pop
inc
adc
add
arpl
or
cmp
mov
inc
mov
mov
cmp
lcall
adc
inc
mov
mov
sbb
sub
jmp
les
push
lea
or
je
shlb
es
sub
cs
mov
bound
inc
add
pushf
rol
fsubrs
or
xchg
cmp
in
inc
data16
nop
fnsave
out
and
aad
or
pop
push
sbb
imul
push
inc
imul
lock
or
jbe
inc
xchg
adc
mov
jg
gs
dec
fwait
xchg
adc
xchg
dec
out
insl
dec
inc
add
jno
and
mov
xchg
test
cmp
jmp
mov
sbb
ljmp
add
ret
icebp
in
repnz
sub
das
jmp
roll
mov
or
out
ret
push
dec
lock
jo
popf
mov
xor
movntps
lcall
inc
lods
test
movb
xlat
pusha
xor
scas
leave
in
mov
mov
mov
cli
mov
xchg
pop
imul
mov
scas
fisubrl
fcmovbe
cli
xchg
test
in
cmp
mov
sbb
jle
subl
fwait
inc
lcall
dec
xor
test
divb
lea
stos
cmp
bound
unpcklps
jnp
and
clc
cmp
cmp
jp
cmc
adc
sub
push
movsb
dec
fs
iret
out
lahf
cmp
cmpsl
cmpsl
aaa
dec
lea
pop
pop
sarl
jge
adc
pop
sub
shlb
shlb
fisubrs
cmc
out
pop
mov
mov
sub
push
xor
mov
jmp
es
fadds
pop
cmp
dec
adc
jb
imul
arpl
pop
std
ret
int
jno
pop
dec
add
jo
gs
or
sbb
stos
imul
sub
loop
pop
rclb
and
test
fs
les
les
movsl
or
push
cmp
popf
outsb
test
jae
mov
out
sahf
dec
lods
xchg
sbb
sbb
cmpb
cmp
imul
ljmp
popa
fiaddl
adc
cmp
ret
jecxz
mov
jle
psubsb
dec
mov
lds
in
inc
daa
insb
popa
inc
aas
xchg
aaa
jecxz
mov
lahf
mov
push
cmp
dec
push
pushf
jle
stc
push
outsl
lea
push
push
dec
dec
and
and
lea
cwtl
aad
mov
dec
adc
cli
mov
stos
mov
add
mov
mov
outsl
cmp
or
sbb
xchg
push
fcomi
mov
inc
dec
pop
jmp
nop
stc
data16
push
xchg
mov
pop
jl
xchg
cli
aas
mov
sarb
add
add
adc
and
outsl
jae
cmp
test
sti
jmp
loop
mov
mov
cmpsl
call
into
jl
and
lahf
and
jp
sti
imul
xchg
test
add
ja
dec
movsl
jnp
inc
test
or
adc
mov
xchg
mov
cmp
out
movsl
addl
loop
and
mov
call
dec
adc
repnz
filds
int3
xor
mov
call
icebp
push
xlat
fdivr
and
jo
pop
push
test
pop
cmp
fdivrs
aas
daa
cmp
dec
adc
cmp
out
aaa
push
addl
dec
out
out
push
jae
mov
mov
stos
stc
mov
xlat
cwtl
int
sahf
aad
or
adc
and
notb
lret
adc
lock
ret
sub
fdivr
mov
mov
es
imul
sub
xor
push
xor
mov
lock
mov
lock
sbb
fcomps
xor
shlb
cmp
adcl
pusha
lret
sbb
xchg
or
mov
lahf
cmpb
sub
mov
push
push
jge
loopne
aam
ret
fbld
push
and
mov
inc
stos
push
xchg
in
push
push
xchg
push
in
mov
add
ja
imul
push
cwtl
data16
fidivl
and
and
bound
mov
add
pop
xor
mov
rcrb
notb
aaa
mov
out
popf
movsb
fwait
imul
xchg
or
in
mov
push
repnz
xchg
push
ds
push
fisttps
add
jmp
mov
in
int3
out
dec
jecxz
in
loopne
scas
pop
xchg
jge
inc
inc
cli
jl
mov
sub
sub
xchg
cmp
sbb
add
mov
inc
push
jbe
repz
pop
cli
jno
mov
xchg
adc
pop
std
dec
add
mov
mov
pop
sahf
fucom
mov
push
lret
and
stos
dec
loop
pop
scas
cltd
add
push
pop
and
pusha
mov
sbb
push
sbb
inc
add
jge
fwait
inc
gs
cmp
out
push
jbe
mov
push
test
mov
int
sbb
lock
push
jmp
mov
mov
or
pop
iret
xchg
xor
mov
cmc
in
lds
add
aas
xchg
push
inc
jecxz
test
push
popa
fldl
sti
push
push
es
fldt
or
scas
adc
mov
fimull
cmpsb
bound
cltd
mov
add
test
mov
pop
out
xor
ret
mov
testl
push
xchg
outsb
push
aam
xchg
xchg
push
fidivrs
dec
ret
popf
jnp
ja
icebp
pop
and
stos
fisubrs
or
jecxz
cmp
stc
rep
stos
xor
sub
jnp
adc
sti
inc
push
sbb
xchg
out
movsb
in
sbbb
sbb
push
pusha
pushf
pusha
sbb
or
call
sbb
rcrb
loope
loope
cmp
aaa
lds
in
sbb
imul
jg
sbb
das
bound
add
daa
nop
adc
or
mov
mov
pop
sti
adc
pusha
stos
add
int3
adc
add
dec
test
scas
push
inc
popf
cmc
mov
pop
pushf
and
add
stc
xchg
lds
insb
xlat
cmp
sbb
xchg
jns
sti
xchg
bound
fsubrl
fs
sti
mov
fiadds
shrb
push
xchg
in
test
loopne
rorl
setae
xchg
adc
scas
sub
aas
cld
xor
ljmp
jnp
dec
dec
subl
sbbb
cmpl
push
inc
dec
pop
add
sahf
enter
and
jbe
mov
pop
xor
sarl
and
add
jg
into
aam
jo
add
pop
xchg
lds
dec
push
and
sub
sbb
std
aam
pusha
add
in
aaa
loope
mov
hlt
roll
xchg
call
ss
fists
and
ss
nop
dec
iret
mov
pop
add
cmpsb
loopne
inc
iret
jle
xor
or
jae
ds
negl
sbb
jg
xchg
mov
adc
aaa
xchg
arpl
push
add
popa
dec
cmp
inc
sub
mov
add
mov
xchg
sbbl
std
adc
mov
sbbb
loop
mov
frstor
icebp
outsb
lret
or
cmp
rcrb
jb
jns
mov
xlat
lods
pop
imul
stos
add
js
test
jmp
loop
inc
orl
add
aam
xchg
arpl
fistl
xor
sub
mov
stos
push
ret
loope
or
mov
mov
mov
sub
push
cmp
aaa
and
test
mov
lcall
sub
pop
push
sbbl
push
and
dec
or
cmp
add
cmc
adc
aad
sahf
popf
cld
xor
loop
lret
sarl
push
nop
sbb
adc
ss
xlat
sub
xchg
scas
inc
push
mull
and
pop
jne
dec
hlt
sub
pop
frstor
lds
out
rorb
in
jg
cltd
daa
out
or
sub
xchg
insb
pop
inc
imul
ret
add
jle
stos
dec
xchg
xchg
test
mov
mov
addr16
mov
sub
rcll
stos
or
push
insb
jbe
ficoml
pop
or
div
and
dec
push
xchg
jmp
pop
cmpsb
mov
xchg
sbb
clc
and
test
cmp
adc
std
and
jnp
in
test
flds
negl
pop
shrl
dec
lea
jno
cmp
es
pop
cmp
adc
lret
xor
sti
xchg
mov
ljmp
shr
sbb
rcll
mov
mov
ds
or
push
adc
imul
repz
popa
sub
roll
rcll
scas
adcl
orb
xor
imul
mov
xchg
push
push
dec
push
stos
xor
mov
push
mov
lods
adc
or
xchg
push
sub
je
cmpw
bound
push
movsb
insl
pop
adc
jnp
les
mov
les
pop
dec
inc
sub
into
ds
stos
sbb
das
mov
insl
call
jg
sbb
mov
push
mov
or
mov
mov
inc
les
xor
mov
add
popf
gs
adc
push
add
xchg
push
inc
push
sub
cmp
adc
push
cmp
imul
aas
xchg
push
aad
xchg
std
call
xchg
je
pop
out
jno
or
mov
or
pop
ja
int
mov
cmpsl
mov
cmp
sub
jae
and
or
mov
pop
pop
lods
or
je
es
jb
repnz
pop
test
mov
adc
je
in
or
sub
in
pop
sti
pop
clc
mov
dec
outsl
fcmovb
push
arpl
xchg
xchg
fs
enter
mov
jmp
jg
pop
xor
add
fidivrs
loopne
daa
pop
sub
les
outsb
pop
fbld
movsl
dec
xlat
cmp
and
push
pop
adc
adc
insb
and
into
mov
pop
and
insb
mov
shl
outsb
rcrb
or
mov
mov
pusha
test
and
dec
push
in
aam
out
and
push
leave
jge
cmp
cmpsl
sbb
cmp
fwait
je
jns
mov
lea
mov
pop
fdiv
das
inc
adc
jb
sub
adc
mov
int
inc
mov
iret
mov
das
loop
adc
push
or
out
xor
lret
add
mov
and
in
mov
pop
push
dec
jmp
or
stos
jmp
scas
das
add
sub
xchg
lret
add
mov
or
lock
les
xor
cmpsb
cld
mov
jb
aas
mov
jecxz
adc
cmc
je
movsb
fwait
pop
cs
xorb
inc
or
add
outsb
mov
idivb
or
stc
movsl
jmp
xchg
cmc
stos
xchg
pop
cmp
pop
fsin
adc
inc
shrl
xor
push
xor
int
inc
pop
add
sub
stc
sbb
cli
and
add
cld
jbe
pop
popl
std
dec
pop
xor
popa
loopne
jecxz
insl
andl
push
dec
mov
jne
scas
or
outsb
add
cmp
mov
sahf
out
xchg
add
jae
xor
or
inc
inc
outsb
lock
pop
pop
pop
sub
aam
pop
orb
dec
dec
jp
push
jo
sub
cmp
mov
cmp
insl
pop
out
cltd
xor
shr
lock
repnz
inc
inc
pop
sub
insl
sbb
pop
cmp
mov
inc
out
cmp
mov
clc
dec
sbb
push
jl
or
xchg
mov
sbb
pop
inc
sub
mov
lret
push
call
test
negb
xlat
jb
ficomps
test
push
cmpsl
add
fldl
lock
sub
mov
jmp
popa
lea
or
xchg
sbb
dec
stc
add
cmp
call
hlt
aaa
xor
add
in
divb
out
sarl
int
icebp
xchg
dec
jne
sub
add
mov
idivl
adc
push
mov
lods
inc
stos
int3
xchg
call
dec
pop
adc
insb
add
jno
and
test
rcrl
xor
mov
and
mulb
sbb
xlat
adc
les
push
add
dec
inc
aas
xor
dec
xchg
shlb
js
add
push
push
rcrb
fidivrl
nop
mov
inc
fsubs
out
jmp
pop
push
add
inc
lea
imull
pop
jp
jmp
movsb
mov
fidivs
cmpsb
mov
insb
dec
jecxz
jb
leave
cmp
jo
clc
divb
pop
or
cs
fnsave
mov
or
aas
int
addr16
jecxz
cld
movsb
xor
stc
scas
cmp
xor
push
adc
xchg
icebp
jne
stos
xorb
mov
jo
incb
loope
pop
mov
sbb
push
fcomp
out
in
mov
loope
test
push
test
mov
testl
sbb
xchg
repz
add
and
jns
push
fidivl
out
iret
dec
sbb
dec
fsubl
mov
subl
popf
fs
push
icebp
ss
xlat
mov
jne
push
xchg
out
jae
pop
push
xchg
sbb
fnstcw
lods
pusha
lret
dec
sub
jne
movsl
cmp
jns
xor
and
lret
out
fsubs
stc
lea
mov
test
insb
pop
cmc
leave
pop
add
cmc
dec
push
xor
and
incb
add
cmp
push
outsb
cmp
xor
fsubrl
jl
rcl
clc
ss
and
insl
dec
arpl
sti
dec
out
cmc
jo
adcb
pop
jmp
aas
sub
xor
movsb
fucomp
mov
inc
ljmp
cs
push
lcall
xor
push
pushf
jmp
setge
jle
jb
insl
pop
xor
loope
iret
arpl
mov
dec
jmp
jge
mov
cs
cs
packsswb
lret
mov
js
pushf
movsl
lea
out
jae
mov
pop
xchg
das
loop
stos
cmp
imul
ljmp
lods
mov
movsl
push
inc
fsts
fbld
or
mov
sbb
lods
idivl
dec
negl
gs
push
add
mov
and
fwait
adc
pop
jns
scas
outsl
hlt
fsubrs
hlt
sbb
adc
adc
fstpl
iret
movsb
xlat
xchg
lods
out
orb
mov
fiaddl
sbb
add
add
dec
cmp
loopne
inc
mov
test
ret
sbb
pop
lods
into
or
test
xchg
push
test
cld
jae
add
cli
ds
mov
push
add
mov
dec
jb
mov
pop
es
mov
int3
cmp
cmp
movsb
push
xchg
fmulp
push
orb
dec
shll
cmp
pop
inc
sti
xor
scas
test
dec
cmc
out
or
fisttps
adc
lcall
pop
add
mov
fidivs
mov
and
rcrb
jbe
fs
xor
pop
loop
lock
loope
das
sub
das
cmpsb
mov
fiaddl
fldl
aam
data16
jge
dec
iret
sub
cmp
dec
jne
push
jp
imul
jg
dec
sub
jb
push
movsb
inc
inc
xchg
add
in
mov
mov
mov
gs
cmpsl
lahf
sahf
icebp
int3
loop
cmp
loope
mulb
jmp
inc
sub
icebp
lcall
lret
aad
test
cmpsl
out
mov
mov
jnp
nop
sub
push
cmp
push
jo
or
cli
daa
inc
dec
mov
sbb
xchg
adc
or
loope
xor
loope
jge
fwait
clc
test
inc
js
repnz
mov
adc
in
les
xchg
xor
sbbb
lea
imul
push
lahf
sub
es
clc
mov
adc
call
shr
mov
inc
add
out
lcall
out
out
test
pop
insl
sbbb
push
push
dec
aaa
shll
pop
stc
and
enter
push
cmp
scas
jno
push
adc
mov
leave
add
jno
enter
sub
test
pop
cmp
pop
mov
lock
and
in
test
xchg
mov
dec
ljmp
push
mov
psrlq
mov
scas
xor
out
xor
mov
scas
dec
loopne
addr16
gs
ss
mov
mov
add
pop
cmp
jp
stos
shlb
lret
jecxz
xlat
stos
dec
sbb
dec
and
aas
add
cmp
cltd
addb
mov
sbbb
stos
inc
xchg
push
mov
jle
dec
je
sbb
popa
jae
sti
jne
mov
aam
add
sti
clc
ret
lret
pop
adc
repz
push
jp
mov
xchg
push
sub
xchg
out
rclb
jmp
mov
xorb
pop
sub
lahf
add
aas
adc
mov
push
out
shll
mov
shrl
sub
cmpl
ds
push
sbb
faddp
dec
jmp
pop
adc
lods
mov
movsl
sbbb
push
add
sub
loopne
ljmp
cmp
or
xor
xor
data16
jno
js
lret
push
push
dec
pusha
rcll
add
pop
out
xor
outsl
mov
xor
jp
rcrb
fadds
jbe
xchg
mov
add
lahf
outsl
inc
xchg
ret
mov
jae
test
clc
xor
jecxz
fwait
inc
adc
scas
fistpll
and
outsl
xchg
dec
fcompl
sub
scas
push
mov
mov
or
icebp
inc
je
xor
sbb
out
jbe
jne
mov
mov
pop
and
lock
cli
inc
and
mov
clc
inc
mov
imul
jae
push
mov
jmp
cltd
adc
sbb
mov
imul
add
sub
inc
push
xchg
mov
clc
rcrb
xchg
pop
xor
and
mov
loop
ret
push
add
test
inc
call
xchg
fimull
inc
jle
or
rorl
subl
push
adc
in
negb
dec
jle
jg
ret
stc
subb
aam
add
jb
push
adc
xor
loopne
bound
jecxz
mov
stc
scas
das
inc
mov
add
shrl
nop
xor
adc
sub
add
xchg
mov
jbe
xchg
cmpsb
push
inc
xchg
popl
lock
mov
xchg
call
pop
dec
imul
sub
imul
inc
enter
repz
add
subb
sbb
popa
call
adc
in
cmpb
mov
int3
sarl
les
add
outsl
fdivs
test
jle
xchg
pop
dec
nop
xchg
push
pop
sbb
fists
mov
psubsb
rorb
idivb
imul
mov
ret
push
in
jle
in
cs
out
jmp
inc
add
rcl
lods
fidivrl
fs
push
das
mov
sarb
addr16
sti
mov
lods
pushf
dec
mov
mov
jmp
xchg
and
pop
push
mov
in
test
cmp
dec
push
daa
inc
cmp
ds
xchg
mov
outsl
jo
jecxz
mov
lds
cmpsb
js
fstps
cmp
sti
lea
std
shrl
add
sub
add
shlb
pop
push
jbe
in
pop
test
pop
push
mov
loop
inc
push
jmp
pushf
jns
mov
mov
icebp
xor
or
popf
xchg
push
mov
mov
cld
sahf
dec
xchg
outsb
mov
std
out
pop
or
jnp
xchg
sub
jns
xor
lret
addr16
movsb
addr16
adc
push
jbe
lock
jge
pop
sbb
xchg
or
sub
jo
mov
cli
popf
jbe
rol
xor
push
push
push
dec
mov
cmp
loope
mov
or
jno
outsb
mov
imul
xchg
lret
cwtl
jns
adc
inc
xor
pop
adc
jno
jle
fwait
cli
cltd
sahf
xchg
movl
movsb
fs
sub
ret
xchg
test
pop
stc
xor
add
xchg
jne
dec
iret
xchg
movl
xor
fimull
pushf
das
mov
roll
movsb
les
jne
jmp
push
xchg
mov
or
cmc
vphadduwq
or
popf
fcmovbe
cmpsb
mov
popf
pop
jns
xor
jo
mov
inc
jecxz
scas
dec
lcall
jg
adc
fcmovnbe
ds
push
ja
xorb
rolb
insl
inc
lcall
loopne
adc
mov
sbb
pop
mull
lock
outsl
mov
adc
shll
hlt
ffree
sub
adc
fiadds
or
subl
jl
xor
in
pop
mov
int3
out
rcl
lahf
jne
and
in
mov
mov
add
push
adc
sbb
clc
add
inc
sbb
or
lret
push
cmp
and
scas
cmp
xchg
jmp
test
pushf
push
jmp
xchg
dec
or
dec
sub
lods
mov
sub
adc
dec
push
dec
dec
lock
push
push
sbb
or
dec
incb
inc
pop
mov
loopne
stc
adc
dec
call
out
roll
test
inc
js
cld
scas
cmp
cld
cmpsl
jb
and
mov
pop
pop
inc
cmpsb
ret
and
or
pop
xchg
test
push
das
int3
adc
in
inc
dec
daa
jp
push
in
test
xchg
cmp
movsb
test
data16
notl
jns
xor
pop
int3
sbb
scas
ss
dec
stos
jbe
jbe
clc
out
jmp
mov
cmc
inc
or
movsl
pop
shrb
enter
inc
lcall
cmp
inc
jae
sbb
jo
bound
das
lock
dec
xchg
pop
dec
sub
cmpsl
jno
mov
adc
sahf
and
into
jnp
cmp
sbb
jle
std
divl
sbb
insb
jmp
std
sbb
stos
mov
arpl
roll
fnstsw
dec
mov
xchg
mov
test
mov
les
in
loope
movsl
lds
mov
lret
adc
or
sbb
push
lock
hlt
pop
mov
shll
std
push
arpl
fsubrl
fimull
aaa
inc
and
or
test
push
sbbb
not
cmp
xor
mov
jb
xchg
or
mov
repz
mov
jecxz
jmp
mov
mov
jne
dec
push
arpl
xor
lret
sbbl
pop
lods
sbb
mov
adc
inc
cmp
mov
inc
add
lret
mov
cmp
xchg
or
in
pop
movb
push
push
lods
daa
loop
lds
insb
sbb
mov
dec
jne
addr16
xor
js
jl
push
push
add
mov
inc
rcl
daa
test
add
xchg
sub
push
xor
cld
insl
popf
lcall
sbb
orb
outsb
aam
addr16
or
mov
inc
mov
mov
out
push
cmp
popl
xchg
adcb
jnp
and
rorb
popw
or
inc
push
sub
roll
mov
push
jae
out
lds
aad
outsl
nop
pop
les
fdivl
out
jbe
loopne
pop
push
movsb
iret
lahf
jae
jb
aad
mov
in
push
xor
push
ja
push
dec
cmpsb
cmp
int
fsubrl
ss
push
sub
or
in
into
clc
adc
pop
fstps
fldl
fisttpll
les
cmp
scas
addl
adc
jbe
std
mov
fsubl
or
pop
int3
jno
stos
inc
cmp
dec
or
test
scas
scas
jno
mov
xor
iret
pop
mov
adc
sbb
adc
lock
jnp
mov
imul
and
mov
mov
push
enter
jmp
add
mov
mov
mov
in
mov
or
cwtl
insb
mov
sbb
in
flds
jns
mov
adcl
sbbl
js
dec
scas
pop
lcall
test
cmpsb
movb
scas
push
xorl
jle
dec
mov
mov
jae
sarl
aam
daa
negb
icebp
outsb
pushf
jbe
xlat
jp
inc
cmpsl
nop
and
movsb
adc
int
push
hlt
out
scas
movsl
iret
cmp
pop
fdivs
push
inc
cld
cmp
in
add
es
mov
std
dec
xor
insb
xor
mov
add
and
push
sahf
dec
fisubrl
xchg
add
scas
add
aas
sub
add
aad
orl
xor
cwtl
je
cs
lcall
adc
adc
mov
ficompl
or
mull
lea
mov
xchg
push
mov
fnsave
bnd
sub
mov
dec
pop
aad
sbb
popa
fistl
push
pop
dec
sbb
push
in
xchg
sahf
push
push
jg
filds
sti
filds
pop
dec
pop
inc
into
loop
jl
sbb
lds
add
xor
cmp
pop
pop
inc
scas
stos
adc
cs
in
jns
sbb
push
dec
sub
js
pop
pop
push
mov
ja
hlt
das
adc
xchg
xor
inc
cs
mov
movsb
ss
jle
mov
ret
jp
jecxz
cwtl
inc
push
jmp
popa
fidivrl
add
mov
lock
mov
cmp
adc
mov
mov
mov
and
xor
pop
hlt
mov
jg
inc
shrb
xchg
test
jns
xor
lret
jl
lcall
cmpsl
jnp
out
jno
repz
mov
in
jmp
rolb
adc
or
lea
mov
cmp
loope
xlat
mov
inc
and
xchg
dec
add
jge
sbb
shrb
and
and
adc
jns
mov
mov
mov
inc
xor
adc
lret
ffreep
idivl
je
jge
or
inc
gs
subl
inc
fnsave
cld
stos
orb
push
aam
pop
xrelease
dec
lods
ss
cmc
mov
fldl
dec
rcrl
jge
mov
sahf
aad
or
xchg
adc
in
xchg
push
pop
inc
dec
and
push
aaa
ret
shl
mov
sbb
fisttpl
jbe
and
mov
sub
test
xor
lcall
mov
jg
icebp
mov
xor
pop
sbbb
fcoml
rorl
xchg
fwait
rclb
enter
out
mov
push
push
jp
cli
cmpsb
mov
mov
mov
pop
cmp
insl
xor
jmp
ret
loope
jmp
dec
sahf
mov
clc
push
inc
stc
and
bound
jg
loop
rcrl
rorl
cmc
jns
ljmp
sahf
push
inc
pushf
ljmp
loopne
cli
add
inc
cmp
outsb
xchg
push
push
lcall
out
int
nop
out
aas
pop
cld
ja
xor
test
cmp
xor
dec
dec
xchg
jne
lcall
push
adc
scas
mov
lods
mov
rcl
push
cmp
or
mov
dec
cld
cmpsb
mov
jo
in
jns
push
testl
lds
bound
push
inc
add
div
push
pop
add
sub
in
mov
xchg
sbb
cmpsb
cwtl
icebp
int3
test
lahf
fwait
jne
push
mov
jnp
inc
jmp
movsb
cmpsb
pop
sbb
stos
repz
imul
es
repz
or
push
lods
add
fstl
xor
inc
imul
pop
pop
call
xchg
jb
loopne
pusha
subl
xchg
mov
xchg
mov
inc
push
adc
mov
daa
stos
mov
ss
arpl
ret
add
ja
mov
adc
inc
out
fmuls
and
mov
jnp
sbb
sub
and
rcl
jbe
xchg
sti
mov
cmp
or
adc
out
ret
cs
inc
xor
mov
rcr
fcomp
xchg
imul
in
fyl2xp1
inc
ror
repz
stc
sbb
jmp
and
push
lcall
add
lahf
adc
addr16
push
cmp
pushf
sub
jb
cltd
inc
or
lcall
cld
mov
mov
fsubl
ss
inc
fisttpl
das
shlb
xor
ja
stc
ss
pop
and
std
stos
cmp
addr16
cmp
faddl
mov
or
cmp
ds
in
xor
inc
pop
outsb
xor
dec
mov
jo
pop
mov
add
adc
jb
inc
pop
sub
rcr
mov
xor
cmp
rcr
inc
cltd
rcrb
pop
mov
loop
arpl
aam
gs
dec
mov
add
mov
mov
inc
movsl
fisubrs
add
or
inc
sti
faddl
das
pop
pop
or
mov
das
mov
mov
aad
enter
scas
call
bound
in
push
std
push
xorl
scas
scas
imul
scas
mov
jge
cmp
cltd
mov
rclb
data16
lcall
sub
dec
sti
lea
xchg
pop
in
dec
cmp
ret
lock
dec
lods
mov
or
inc
mov
test
gs
test
int
sbb
in
sbb
mov
mov
jo
fnsave
add
outsb
outsl
ss
dec
xor
pop
push
xlat
sub
jns
dec
jnp
pop
aam
test
and
lock
xchg
ret
mov
xor
mov
sub
jns
mov
in
stos
popa
cmp
inc
mov
cmp
dec
mov
add
cmp
pop
cmc
sub
les
cmp
push
addb
inc
stos
fdivl
dec
roll
dec
clc
sti
push
xchg
push
lea
leave
inc
xlat
imul
daa
pop
or
or
and
xor
push
xor
arpl
xchg
dec
ljmp
jl
enter
cwtl
jecxz
lods
loop
dec
adc
outsb
shrb
stos
or
lods
mov
xchg
lahf
add
hlt
divl
or
xchg
lret
insl
in
mov
and
les
and
imull
mov
mov
mov
es
ss
les
sbb
pushf
push
adc
jno
inc
mov
pushf
daa
repz
xor
sub
mov
sti
push
mov
loope
sbb
fistpl
icebp
add
mov
push
jmp
lods
loope
mov
lahf
push
fbld
cmc
cli
imul
lahf
jne
scas
daa
adcb
out
out
mov
mov
pop
cli
jae
xchg
lcall
pop
dec
xchg
sar
aas
adc
adc
mov
or
sbb
pop
dec
inc
nop
push
icebp
and
push
aaa
xchg
or
cs
stos
jge
movsl
iret
iret
imul
mov
lcall
adc
cwtl
test
xchg
mov
pop
js
sbb
xchg
lods
addb
jbe
push
js
push
lods
push
aaa
outsb
mov
add
addb
ds
inc
dec
cs
iret
addr16
test
mov
mov
sbb
inc
and
test
aas
mov
jmp
insb
das
mov
mov
fidivs
stos
xor
mov
adc
testb
stos
in
in
fnstsw
clc
repnz
scas
lret
mov
xchg
add
orl
add
cli
fwait
ss
icebp
or
rcll
into
call
cltd
pop
mov
push
jecxz
mov
dec
pusha
dec
jbe
cmp
jb
fcomp
cmp
enter
push
push
shl
push
fcomps
mov
jge
adc
sti
inc
cltd
mov
mov
cmp
mov
jae
out
icebp
xchg
mov
imul
mov
das
xchg
fsubrl
loopne
jmp
pop
iret
pop
inc
lcall
imul
push
aas
sub
inc
mov
jno
mov
cmp
push
out
daa
or
adc
sahf
push
push
repnz
subl
addb
aaa
outsb
outsb
jge
lea
inc
subl
je
cmp
loop
movsl
dec
das
std
test
adc
shrl
push
sarb
xchg
mov
js
push
adc
mov
and
mov
lret
mov
dec
pop
xchg
cmp
and
xchg
cmp
aas
es
iret
stos
int
mov
add
nop
movsb
pop
lods
jge
adc
mov
dec
scas
jmp
and
adc
push
pusha
mov
test
pop
jnp
iret
in
lods
lret
inc
pop
cmpsl
mov
loopne
xor
inc
mov
aad
xchg
hlt
mov
dec
fisttpl
cmc
push
push
mov
mov
cmp
test
shrb
cs
out
lock
pop
cmc
inc
push
gs
xchg
mov
push
lcall
mov
and
mov
loopne
xor
or
push
xchg
or
fwait
mov
scas
pop
xor
loop
jmp
mov
lret
repz
sub
dec
popf
enter
mov
lcall
cmpl
loopne
loope
mov
xchg
fiaddl
mov
in
and
adc
movsl
dec
jbe
push
push
jae
xchg
int
test
mov
cmpsb
push
push
jecxz
pop
fmull
stos
dec
rclb
sbb
fimuls
inc
mov
sbb
and
sti
cmp
in
adc
fistpll
xor
push
out
xchg
pop
cmpb
arpl
inc
fidivrl
imul
icebp
xchg
lret
jno
and
xor
jp
xlat
push
push
push
cmp
out
clc
jl
ljmp
in
lret
pop
test
insb
jmp
lock
adcl
ror
rclb
mov
add
sahf
js
mov
xor
push
arpl
adc
lcall
in
into
aas
scas
jl
fwait
js
pop
adc
cmp
cwtl
test
addr16
inc
mov
out
popf
cmp
cmc
daa
add
dec
mov
bnd
jne
jle
nop
test
ret
add
adc
mov
cmpsb
or
dec
pop
sbb
jecxz
mov
lds
xchg
or
int3
out
popf
stc
rol
adc
arpl
sbb
sub
je
aad
sub
jle
sbb
add
pop
pusha
cmp
lret
scas
xchg
xchg
movsl
sti
imul
xlat
out
pop
std
add
push
mull
jmp
imul
xchg
lahf
xchg
fsubl
jbe
std
pop
loop
test
test
dec
xorl
cld
push
xor
out
jmp
xchg
jl
lock
sarl
es
xorb
xchg
out
lds
aaa
pop
mov
sub
xchg
aas
sub
orl
in
push
pop
lods
push
rorl
aad
xlat
xor
imul
rcrl
addr16
add
in
push
out
mov
inc
outsb
sub
stc
lea
sbb
gs
repnz
adc
gs
xchg
push
test
shll
inc
pop
pop
cmpb
daa
mov
add
sbb
mov
xor
or
mulb
pop
jne
pop
xor
loope
pop
adc
movsb
out
testl
ficomps
movsl
inc
ficoml
and
int
jbe
outsb
test
scas
scas
insb
enter
xchg
xchg
inc
sbb
inc
cmc
push
test
dec
ljmp
in
mov
xchg
pusha
xchg
pop
mov
adc
push
arpl
fisttpll
cld
repnz
jno
mov
jne
mov
out
pop
and
cmp
sub
pop
in
out
mov
cmp
pop
inc
add
push
daa
iret
push
in
ja
add
sbb
push
xor
add
inc
mov
cltd
repnz
test
lcall
adcb
xchg
jb
jle
sbb
xor
or
std
outsl
mov
or
leavew
xchg
push
inc
test
dec
mov
jmp
es
stc
out
mov
mov
push
sbb
icebp
or
mov
insl
jp
std
ret
fucomp
fisubrs
xchg
sar
dec
lds
leave
and
bound
inc
das
mov
mov
sbb
popa
mov
jmp
or
pusha
xchg
push
mov
inc
mov
cltd
in
or
pop
fisubrl
cmpsb
xor
sbb
clc
lds
push
mov
insl
stc
push
mov
decb
shrb
shlw
insb
test
inc
out
cmp
pusha
aaa
cmp
mov
enter
mov
scas
and
mov
sbb
daa
rcll
daa
jmp
pop
cli
fsubp
adcb
int
push
out
call
rcrl
jmp
or
and
jge
test
xchg
mov
test
cmp
cmp
ljmp
popf
hlt
popl
xor
jb
dec
repz
shll
je
iret
adcl
adc
xchg
mov
fsts
xor
ret
loop
jo
dec
mov
out
pop
lods
mov
js
loopne
shrb
xor
sbb
sub
mov
xchg
ljmp
insl
mov
pop
shlb
adc
sbb
test
jns
je
and
mov
addr16
mov
cmp
in
mov
jno
mov
pushf
mov
movsb
and
xchg
add
adc
loope
adc
push
mov
faddl
inc
mov
bound
int3
std
fmull
xchg
pop
cmp
push
lock
fwait
jecxz
lea
add
and
xchg
cmpsl
inc
scas
fcoms
sbb
ja
in
js
aam
cmc
adc
and
psraw
jl
data16
pop
jg
adcl
shlb
pop
and
mov
xchg
fldl
faddl
or
mov
xor
push
das
scas
dec
pop
sub
not
xchg
pushf
pop
loop
test
xor
sub
jmp
pop
rolb
loop,pt
inc
jecxz
mov
or
jbe
mov
fwait
adc
jnp
cmpl
cmp
cmpsb
cmp
pusha
mov
pop
fbstp
movsb
adc
test
shrl
cmp
std
lahf
sti
xchg
add
daa
roll
mov
mov
insl
ljmp
mov
cmp
aad
or
cltd
add
nop
mov
fistpll
cmpsl
aam
sbb
pushf
fstps
pusha
mov
xchg
cld
and
pop
pop
es
daa
dec
gs
jl
dec
loop
mov
sbb
push
movsb
loope
and
fnsave
roll
lcall
movsb
xorl
push
stos
pushf
push
mov
mov
hlt
cli
inc
decl
ror
jl
nop
aas
js
test
fwait
cmc
shl
mov
insb
fistps
mov
push
mov
shr
mov
cmc
adc
dec
fistpl
or
sahf
sbb
dec
mov
jecxz
xchg
adc
dec
cmp
dec
scas
pop
cmp
outsl
ja
push
adc
inc
fsts
loopne
inc
fnstenv
dec
pop
scas
cmp
lock
jb
insl
inc
xchg
in
std
insl
popf
and
insl
sbb
leave
mov
mov
pushf
lods
orb
sti
mov
sbb
lods
div
sub
or
xor
xchg
rcrb
data16
scas
adc
mov
in
add
mov
sub
jmp
test
test
xchg
hlt
into
sub
mov
or
jns
rcl
clc
popa
sub
fdiv
loop
push
imull
stc
clc
xor
push
xchg
repnz
xchg
and
xor
pushf
mov
xor
out
in
test
rolb
out
jno
mov
xor
into
adc
enter
imul
dec
dec
es
pop
dec
aas
je
dec
aaa
repz
add
clc
bnd
pop
nop
and
lock
fwait
loopne
frstor
movsl
in
imull
stc
stc
add
xchg
rcr
mov
shl
in
xor
repz
mov
adc
adc
mulps
adc
or
out
int
cmp
std
lods
push
pushf
nop
not
add
ficompl
sti
lret
lock
movsb
jb
cmp
mov
xchg
mov
cmp
add
adc
daa
push
fsubrl
dec
vpsubd
not
loopne
lock
jne
mov
mov
mov
or
rclb
mov
cmpsl
int
int3
jbe
es
inc
mov
push
sbb
scas
dec
aas
aas
sub
sbb
clc
fsubrs
cmc
cmp
daa
cmp
mov
push
sbb
jge
fmuls
xor
cmc
aam
xlat
adc
ljmp
ficomps
cld
sub
outsb
xor
fwait
mov
push
shll
jmp
sarb
xlat
xor
stos
lds
sbb
aaa
xlat
dec
pop
cwtl
lods
dec
mov
jbe
mov
mov
push
call
out
cmp
adc
mov
cmp
inc
push
rorl
jbe
xor
and
adc
roll
nop
jle
push
add
popa
call
dec
sahf
xchg
push
testb
cwtl
sub
ret
test
add
xchg
fists
dec
mov
jle
fisttpll
push
cmp
pop
xchg
cltd
jb
fstps
add
lds
rcll
in
iret
daa
int3
push
sarl
mov
int
sbb
dec
sbb
lahf
jecxz
bound
add
xchg
mov
push
testb
es
sbb
and
cli
xchg
cmc
pusha
testl
fwait
inc
out
pop
dec
aas
or
dec
fcomps
mull
bound
loopne
jae
fdivrl
jo
in
je
lret
mov
lea
divb
hlt
arpl
into
mov
lods
cltd
mov
mov
pop
dec
push
mov
scas
out
das
xlat
repz
jge
jne
dec
stc
xchg
cwtl
mov
add
pop
xchg
iret
sbb
leave
jecxz
fsts
mov
ds
cmp
cmpsb
or
and
mov
dec
jg
and
xchg
or
ja
jne
stos
lcall
push
popf
xchg
in
add
inc
xlat
stos
lods
cmp
inc
mov
sub
pop
stos
mov
cmp
rcll
adc
iret
mull
dec
push
loope
call
lock
and
sbb
add
mov
jns
rcrb
shrb
sub
cmp
jp
adc
rcl
mov
leave
and
jge
bound
mov
sahf
out
lret
ja
sub
push
nop
stos
js
sbb
sbb
addr16
nop
lret
inc
sahf
xor
sub
mov
mov
gs
push
out
lret
sub
shlb
push
xor
pop
jp
inc
popf
mov
bound
push
add
sbb
out
and
cmp
lret
jo
add
inc
test
jg
scas
cmp
pop
adc
iret
add
rorb
ret
es
lcall
or
test
stos
mov
push
insb
dec
jle
outsl
cwtl
xorb
lahf
adc
adc
lock
sbb
sarl
and
sbb
test
fcoml
jno
insb
pop
xchg
cmpsb
ret
rolb
adc
fstl
jae
rcrl
inc
pop
or
push
ficompl
push
xor
negl
cmpl
cli
rcll
xrelease
out
stc
out
xor
stc
aam
loopne
sahf
mov
mov
sbb
jmp
scas
cmpsl
idivl
sub
or
mov
psubsb
lds
gs
or
mov
pop
ja
mov
xchg
dec
je
and
ret
out
addr16
insb
and
leave
invlpg
lea
in
xchg
fcomps
dec
in
stos
cmp
sbbb
dec
ret
ljmp
pop
sub
mov
and
cmp
hlt
cmp
movsb
cmpsb
fs
and
cltd
and
xorb
mov
pop
add
aad
dec
sub
icebp
xchg
mov
je
jp
pop
div
jnp
add
test
addr16
fsts
test
mov
jo
push
cmp
mov
imul
push
aam
sti
pop
leave
pop
push
mov
cld
mov
iret
jbe
fidivs
loopne
mov
sarb
or
decl
cmpsb
mov
jp
mov
inc
xorl
jbe
mov
dec
jns
and
mov
xlat
pushf
inc
shll
repnz
inc
insb
pushf
pushf
sarb
mov
xchg
add
fwait
daa
or
std
dec
call
mov
adc
pop
nop
or
fstp
jb
das
fs
mov
outsl
lret
cmp
aam
push
popa
mov
jbe
pop
add
cmpsl
mov
es
lds
movsb
ja
push
sub
movsb
xor
jns,pt
lea
mov
setnp
insl
lods
mov
jo
pop
test
adc
jnp
mov
mov
push
pop
nop
test
xor
test
mov
dec
pop
rcrl
xlat
arpl
jbe
sub
pop
out
push
jns
loope
sbb
jmp
xchg
mov
outsb
jo
leave
or
sti
shlb
test
fidivs
das
repnz
cli
nop
dec
add
dec
cld
add
xchg
mov
adc
push
imul
inc
out
in
out
sbb
enter
mov
jne
mov
mov
jbe
mov
testb
pop
mov
outsl
in
fs
in
data16
sbb
xchg
test
inc
into
clc
repnz
mov
mov
xor
xor
inc
mov
lahf
inc
sub
movsb
pusha
mov
mov
nop
push
aaa
adc
in
rol
pop
cmp
or
inc
inc
cmpsl
ds
jmp
arpl
into
jbe
fdivrl
mov
insb
mov
lret
test
ss
sbb
adc
add
mov
xchg
jge
adc
not
push
and
frstor
push
jne
pusha
xchg
pop
repnz
or
jnp
xor
ds
xor
sti
jae
xor
roll
loop
movsl
xchg
xor
push
mov
lds
repz
and
int3
mov
adc
cmpsb
scas
cmp
mov
lods
sub
add
mov
add
push
xchg
out
inc
fisttpl
mov
lock
stos
dec
in
add
xor
push
cmpsl
mov
cmpsb
or
pop
add
adc
jns
js
mov
imul
mov
sub
mov
out
out
in
data16
dec
sbb
inc
clc
xchg
xchg
fcomp
subl
push
movsl
cmp
sub
out
je
inc
xchg
lods
adc
mov
adc
out
push
out
aad
nop
adc
add
hlt
and
jns
push
sub
xor
jg
or
mov
cmpsl
or
nop
neg
in
pop
cmpsb
sbb
mov
stos
xchg
jmp
xor
leave
jbe
jno
mov
data16
mov
icebp
fimuls
mov
inc
mov
xchg
lods
test
mov
pop
cmpsl
mov
cmp
sti
or
icebp
sub
ja
fdiv
xchg
inc
sub
std
lods
movsb
adc
inc
fs
push
or
incl
inc
andl
adc
mov
shll
add
insl
mov
mov
test
xchg
adc
xchg
push
enter
lods
test
or
pop
push
es
xlat
xor
stos
mov
mov
sbb
mov
std
fs
scas
loop
pop
clc
push
mov
popa
jecxz
pop
fildll
fcoms
fildl
cmp
loopne
and
push
int3
sbb
lds
dec
sub
dec
xchg
iret
repz
cmp
cmp
test
fs
pop
leave
inc
imul
test
fistps
lock
bound
insl
sub
ljmp
xchg
jne
ror
lret
imul
rolb
into
add
and
addb
imul
dec
sub
rolb
in
fcomps
add
adc
ja
outsl
mov
sar
cmp
mov
inc
push
insl
pop
lds
fiadds
jg
dec
adc
xchg
test
pop
cmc
mov
push
mov
pop
fbstp
sbb
mulb
jae
add
and
ds
daa
mov
sbb
dec
mov
pushf
jno
inc
int3
ffreep
adc
pcmpeqd
jne
pusha
sub
push
push
xorl
into
movsb
xchg
inc
inc
xchg
adc
enter
callw
push
push
xchg
imull
test
inc
cmp
cmp
pop
pop
daa
and
pop
and
cltd
pushf
ret
pushf
cmp
in
dec
pop
sbb
int
ds
xor
test
jno
mov
std
rcrl
pop
cmp
rcl
sub
rcll
rorb
fdivr
sbb
and
dec
shl
popf
es
ret
aad
push
stos
jle
push
std
pop
push
jmp
adc
or
aas
mov
dec
out
sysenter
bound
stc
add
jns
sub
and
lea
add
scas
int3
rcrb
dec
fs
push
push
xchg
push
lds
cmp
lahf
or
dec
jns
push
push
sahf
xchg
add
iret
in
mov
fcmovbe
insb
mov
sbb
inc
jl
cli
mov
inc
ss
push
dec
pop
bound
push
dec
and
mov
sbb
xchg
xchg
aad
xchg
cmp
jae
lahf
in
fnstcw
xchg
pop
fwait
cwtl
inc
inc
ret
test
xor
and
or
aas
add
ja
repnz
pop
fucompp
lods
jne
pop
cld
sbb
test
mulb
testb
stos
push
dec
out
lea
mov
outsl
fiadds
mov
ffree
sbb
or
pop
rdmsr
mov
dec
out
leave
cwtl
and
jo
push
insl
insl
scas
and
sbb
scas
lds
jl
gs
bound
inc
stc
pop
mov
mov
in
mov
mov
mov
push
int
xchg
mov
push
inc
or
mov
mov
scas
cmp
inc
mov
hlt
cmp
shr
cmc
adc
stos
inc
xchg
in
pushl
pop
sub
test
jne
pop
jb
adc
sub
loopne
lret
or
shlb
add
dec
xchg
cs
jno
fisttpl
ljmp
out
cld
sti
xchg
popa
cld
addr16
iret
insl
pusha
scas
cs
sbb
dec
or
mov
adc
dec
lds
stc
imul
mov
insl
scas
pusha
scas
iret
data16
fxch
inc
xchg
jp
in
cmp
sbb
xor
mov
enter
mov
xor
hlt
mov
test
arpl
movsl
fdivs
lock
outsl
ret
and
sbb
cwtl
call
push
pop
das
inc
mov
mov
loope
or
lods
dec
mov
popa
xchg
cmp
cmc
jb
inc
adc
xchg
aad
push
test
lcall
rcl
sub
lock
or
cmp
xor
mov
push
fwait
xor
push
sbb
add
xlat
inc
mov
and
pop
pop
fcompl
cmc
add
pop
mov
ficoml
pop
out
repnz
sub
aas
cmp
jo
imul
sbb
sbb
cmp
or
and
popa
dec
push
data16
push
int3
push
shrb
or
fisubs
gs
jl
sbb
outsb
sbb
and
jnp
sub
scas
aas
mov
jns
outsl
mov
adc
js
cmpsb
setg
jge
push
lahf
popa
rcrb
xchg
aaa
ret
call
pop
mov
sbbb
loopne
sahf
loope
adc
pushf
mulb
fnop
jns
hlt
pop
mov
push
fsubrp
loop
insl
cmpsl
pop
push
add
cwtl
fcoms
cltd
jle
aas
sti
push
cmp
shll
cmp
jge
sarl
mov
jg
pop
mov
fidivrs
push
push
stc
jmp
jns
or
cs
xchg
or
jle
cmp
add
sbb
fwait
xor
jo
push
xor
popf
nop
xchg
push
or
lret
mov
clc
sti
mov
test
lds
or
sbb
clc
xor
inc
mov
loop
push
mov
sub
iret
lret
xchg
jmp
xchg
out
ss
pop
inc
or
pop
das
fisubl
jns
test
loope
inc
sbb
das
test
dec
stos
adc
cmpsb
push
add
outsb
pop
jbe
mov
jge
out
in
pop
jp
lret
mov
dec
xchg
out
cmp
int
lcall
cmp
lock
pop
jmp
stos
pusha
and
popf
sbb
lods
dec
or
fwait
cli
fmuls
sub
loopne
push
in
push
cli
adc
addb
js
sahf
sbb
dec
movsl
outsl
repnz
push
je
aad
test
loop
xchg
inc
inc
mov
cmp
mov
add
and
arpl
add
push
popa
mov
cs
pop
jo
out
cwtl
gs
add
xlat
xor
inc
sub
mov
das
push
mov
rcl
adc
ljmp
push
aaa
popa
adc
xchg
in
lock
ret
jnp
mov
insl
xchg
in
cmp
sbb
das
insl
ss
ja
scas
int
rcl
cs
xchg
dec
repz
inc
adc
out
xor
sub
iret
loop
int
mov
loope
inc
lret
mov
or
das
mov
repnz
bound
mov
dec
or
or
mov
movsl
outsb
xchg
add
push
mov
ret
pushf
out
js
xor
or
push
add
insl
dec
jl
and
mov
mov
std
push
push
mov
and
cmpl
in
fstpt
push
mov
jle
pop
lds
push
xchg
dec
sub
pop
mov
lds
fidivrs
ficoms
or
and
scas
in
sub
mulps
mov
loope
pop
adc
ret
inc
addl
popf
test
aad
push
dec
and
inc
call
jo
in
iret
cli
xor
mov
imul
je
je
out
xor
rorb
std
add
pop
adc
ret
push
sub
testl
mov
or
jns
js
aas
icebp
pop
push
daa
push
icebp
jmp
push
repz
stc
popa
mov
mov
cmpsb
stos
into
and
fdiv
out
cs
add
push
stos
mov
and
js
imul
dec
and
idiv
jnp
jns
in
fldcw
mov
sbb
xchg
clc
icebp
js
call
cmp
pop
cmp
stc
mov
out
cmc
scas
aam
or
jns
repz
pop
inc
sub
les
mov
imul
mov
pop
xchg
and
out
out
adc
jmp
test
sub
inc
out
xchg
adc
fnsave
ljmp
pop
cmp
hlt
pop
lret
xchg
out
xor
or
and
or
mov
cmp
fldt
stos
or
mov
addb
push
hlt
add
adc
out
push
pop
sbbl
mov
or
cmp
add
jbe
js
push
lcall
dec
scas
or
aaa
cwtl
xor
fmull
loopne
xchg
push
imul
loope
repz
sbb
rorl
gs
jl
pop
xor
xor
push
faddl
mov
push
mov
adcb
gs
cmp
cmpsl
pop
lcall
cmpsl
imul
adc
loopne
cmpsl
repz
dec
add
and
or
xchg
insl
int
mov
fucomi
or
pushf
adc
jmp
fwait
call
cmp
arpl
addr16
cmp
xor
adc
mov
ja
dec
mov
sbb
shlb
mov
and
shrb
sar
clc
pop
fwait
sti
sub
jp
mov
bound
int
dec
pushl
setne
add
sti
and
xchg
push
fmulp
mov
jno
mov
or
mov
jmp
inc
xchg
xor
mov
std
push
das
or
cmp
outsb
int3
xor
adc
lods
dec
ljmp
mov
xor
jg
push
bound
leave
sub
xchg
cmpsl
jecxz
test
mov
push
les
cmp
jl
mov
outsl
xchg
je
cmpsb
mov
in
jno
cmpl
mov
ja
cmp
adc
out
dec
jne
pushf
sub
and
add
sub
mov
mov
ds
mov
data16
ja
shlb
ficompl
addr16
js
jb
xchg
cmp
cmp
adc
inc
cmp
mov
lahf
cmp
das
mov
je,pt
out
sbb
push
daa
rcrb
fdivrs
js
xorb
pop
jo
shlb
push
in
stos
mov
ret
mov
icebp
shll
int
mov
les
loope
xchg
mov
add
std
mov
and
fdivrl
scas
filds
pop
shrl
imul
in
push
pop
insb
and
std
aas
adc
js
sbb
fs
ds
lcall
sti
xchg
fwait
pop
dec
mov
loopne
sarb
jecxz
dec
icebp
imul
cltd
faddl
ret
xchg
sub
sub
sahf
test
in
in
js
or
xor
add
stos
xor
mov
movsl
pop
jp
cmp
or
sbb
sub
jae
sub
pop
nop
movsl
vpaddq
arpl
inc
dec
repnz
in
sub
hlt
mov
ret
sub
dec
es
jg
push
xchg
nop
mov
lcall
xor
dec
xlat
leave
add
mov
lock
test
popf
xor
leave
outsb
mov
push
in
xchg
mov
jne
maskmovq
idivl
je
push
sti
mov
in
je
add
scas
xor
es
mov
jae
cmp
insl
int
mov
fcomip
and
das
push
shrl
mov
jmp
mov
xchg
stc
cltd
or
add
outsl
enter
movsl
hlt
xor
movsb
dec
inc
ficompl
and
push
push
sbb
xor
das
test
scas
ret
pop
or
test
clc
inc
int3
outsb
jmp
imul
mov
add
xchg
mov
out
sti
pushf
pop
cmp
fwait
xchg
ds
inc
lret
clc
and
sbb
je
scas
mov
int
ljmp
outsb
mov
imull
out
dec
test
adc
and
inc
mov
dec
xchg
cs
inc
push
and
dec
add
fwait
pop
xor
imul
mov
into
jo
mov
push
cltd
push
iret
test
ljmp
adc
and
pushf
cmp
sbb
sbb
mov
shrb
jbe
rcl
mov
repz
pop
pop
leave
loopne
pop
push
in
ret
mov
push
test
mov
push
nop
sub
xchg
xchg
push
mov
lock
jbe
mov
inc
loope
adc
or
push
rorb
pop
mov
outsl
push
test
loope
inc
insl
leave
enter
adc
inc
stos
xor
jge
cmp
js
cmp
jo
cs
add
and
imul
xchg
hlt
xor
iret
fistpl
push
adc
in
inc
ret
shll
cmc
sub
enter
mov
movsb
jbe
sbb
sub
lret
je
jo
inc
xchg
decl
mov
mov
push
xor
sbb
jnp
adc
out
add
filds
jno
int
pop
jmp
mov
es
cld
ja
mul
dec
in
lods
mov
mov
lret
imul
add
inc
aam
pop
xlat
test
aad
clc
fwait
dec
jbe
add
aad
or
mov
inc
mov
add
mov
push
mov
fsubs
mov
add
xchg
dec
das
bound
out
loope
push
jo
pop
loopne
ret
test
xor
jb
pop
and
jl
adc
aaa
inc
out
ja
in
jecxz
js
sbb
and
inc
push
hlt
in
sub
mov
movsl
lods
dec
mov
jmp
fstl
aas
scas
aad
push
cwtl
cmp
add
xor
pop
es
lods
dec
fcoms
stc
xchg
push
and
pop
jl
jo
inc
popl
push
popf
ret
pop
push
ss
jnp
decl
xlat
pop
mov
and
inc
sbb
clc
push
jbe
in
rcll
xchg
pop
push
inc
lods
or
cmp
push
pop
out
popl
push
lock
in
adc
cltd
es
cmpsl
xor
sub
lods
xchg
icebp
add
lock
jmp
cli
scas
sub
daa
rcr
fbld
dec
cli
ljmp
mov
repz
inc
rcr
mov
push
in
pop
mov
int3
ja
push
lret
sbb
pop
jmp
in
xchg
push
cmc
ficoml
inc
loopne
cmpsb
xor
mov
sbbl
sbbb
dec
lret
pop
jg
add
notb
mov
add
leave
add
mov
pop
in
add
movsl
and
cli
add
rcrb
add
ljmp
enter
inc
imul
sub
add
xchg
cmp
idivl
repz
pop
cwtl
sarb
insl
mov
jb
push
dec
outsb
aad
stc
sbb
cmp
mov
mov
adc
push
test
jae
add
cmpb
in
into
cli
iret
mov
int3
xchg
and
popa
push
in
test
and
gs
or
adc
test
pop
jmp
pop
or
adc
push
dec
xchg
push
push
mov
sbbl
lods
add
mull
and
push
jns
cmpsb
dec
jo
lahf
stc
hlt
add
mov
fdivrl
test
push
inc
addr16
mov
push
aam
movsl
sub
sbb
adc
ja
dec
stc
jns
lea
mov
aaa
ret
in
pop
dec
push
shlb
sub
aad
jnp
sub
and
clc
xchg
xchg
pop
imul
data16
popf
inc
pop
jg
xor
call
push
or
into
xchg
and
and
inc
js
mov
jns
cmp
je
cwtl
cmpsl
dec
inc
lret
sbb
js
pusha
repnz
pop
cmp
mov
adc
outsl
sbb
adc
xlat
dec
mov
stc
loopne
pop
fwait
inc
cli
dec
inc
mov
lods
jge
cmp
mov
shll
or
fsubrs
sub
idivl
movsl
stos
mov
es
cli
dec
popf
int3
xor
out
dec
data16
icebp
outsb
addl
rolb
jae
loop
mov
jmp
push
cmp
imull
pop
mov
test
leave
mov
push
pop
loope
mov
les
hlt
insb
inc
xor
inc
pusha
xor
inc
clc
sbb
stc
mov
imul
or
dec
in
cld
jae
mov
popa
mov
lds
divl
inc
pop
fs
push
push
inc
or
mov
into
and
jnp
xchg
jmp
mov
mov
xchg
pop
cltd
mov
jns
push
add
adc
or
insb
mov
sub
out
push
ss
subb
lods
xchg
pusha
and
lret
int
adc
xor
mov
iret
cmp
paddw
scas
outsl
in
pop
aad
add
mov
jno
cmp
xchg
mov
xor
xchg
or
inc
test
push
stos
aad
sub
mov
sub
outsl
or
lods
fcoml
push
push
cld
jle
cltd
sbb
jp
jo
loopne
pop
mov
imul
test
push
xchg
inc
jmp
fdivr
push
pop
les
pop
xor
mov
lock
aam
mov
push
inc
pop
fnsave
mov
movsb
idivl
jmp
fisttps
stc
pop
sbb
aas
mov
fistps
popa
ret
mov
push
clc
cmp
out
inc
out
xchg
xchg
jp
or
stc
jno
push
pop
push
inc
mov
aas
cmp
jae
aam
int3
ret
cmpsb
xor
ret
and
jp
enterw
adc
lods
xchg
or
pop
adc
ret
mov
sahf
push
jle
pop
loopne
sti
cwtl
pushl
cmp
icebp
dec
sahf
dec
cwtl
into
stos
sahf
sub
mov
dec
push
mov
aad
mov
cmpsb
lea
push
sbb
mov
inc
rclb
xor
fisttps
push
lock
mov
in
cltd
xchg
push
mov
int3
push
mov
aam
cltd
mov
xor
mov
jne
jge
xor
sub
das
mov
lock
jne
lods
pop
and
fildl
inc
sbb
or
leave
popa
lret
inc
sub
jbe
pop
mov
jns
dec
xchg
inc
fwait
lret
push
cwtl
inc
add
mov
and
ss
bound
in
call
and
in
test
ret
dec
add
inc
ss
inc
or
push
xor
movsb
cmp
ss
jmp
lcall
push
xchg
push
ffree
ss
gs
jbe
mov
rol
add
push
sbb
add
inc
xchg
pop
and
pop
in
sub
cmp
clc
mov
mov
add
inc
cs
inc
lcall
shlb
xchg
test
xchg
and
movsl
nop
mov
jnp
cmp
and
std
pop
dec
bound
or
add
arpl
orb
xor
xchg
sbb
push
xchg
out
js
jle
aaa
jno
and
out
xlat
sub
je
icebp
repz
cli
add
or
mul
mov
dec
cmpsb
jne
into
cmp
roll
fistpl
adcb
pop
adc
sub
cmc
outsl
fisttps
sub
xchg
pop
inc
mov
pop
mov
repz
shlb
leave
je
push
and
pop
cmpsl
mov
stos
push
js
mov
jne
lcall
push
and
push
lcallw
mov
lds
sub
cwtl
dec
cmp
xchg
xor
jmp
pop
and
fwait
mov
mov
sub
ret
je
ds
stos
rolb
sub
add
js
xchg
enter
into
xchg
xor
pusha
sub
mov
pop
or
and
adc
ss
out
lds
jno
out
lds
movsb
jae
lret
call
add
sbb
ret
mov
mov
and
mov
lock
lock
or
push
push
ljmp
add
incl
out
pop
cmp
int3
mov
ljmp
stc
cmp
idivb
ret
test
movsb
cld
adc
add
xor
pop
mov
movsl
pop
stos
cmpsb
inc
cli
push
sub
mov
js
addb
dec
or
cmp
xor
add
stos
test
ret
fldenv
dec
mov
add
loopne
inc
shrb
xor
jge
shll
rorb
mov
iret
adc
push
push
sub
out
lock
cmp
mov
fcomi
dec
xchg
pusha
fwait
jmp
cwtl
lds
sbb
or
call
add
subl
lock
dec
add
sbb
lock
sub
dec
cmp
mov
scas
ds
std
lds
mov
mov
repnz
in
sub
mov
xchg
pushf
cltd
cmp
mov
int3
ret
das
shrb
xor
int
inc
cs
arpl
and
popa
inc
icebp
cwtl
jmp
sbb
mov
adc
fstpt
mov
ret
insb
les
shll
adc
xlat
test
lret
sbb
xor
push
fsubrl
sbb
fistl
rcll
and
jbe
push
divl
icebp
stos
mov
sub
lret
add
mov
fadd
or
stos
or
push
stc
or
pop
in
cmp
push
mov
mov
adc
lret
add
mov
jno
or
sbb
push
ret
mov
push
sub
mov
pop
mov
jmp
mov
mov
cwtl
out
mov
cld
outsl
jbe
xchg
jge
xor
push
sbb
lea
flds
scas
decb
jecxz
notb
add
ret
push
xchg
jp
clc
scas
adc
xor
loope
jmp
push
gs
int3
dec
pop
ljmp
jno
pop
inc
int
sahf
shll
enter
inc
push
adc
xchg
sub
pusha
pop
out
aam
dec
add
or
dec
mov
xchg
add
and
dec
stos
jl
hlt
adc
add
in
repz
in
test
inc
pop
cmp
rclb
mov
fadd
aad
rclb
push
push
or
pop
stos
or
push
fwait
jae
mov
in
sub
cltd
mov
or
xchg
sbb
insb
lret
dec
js
dec
mov
cld
jecxz
or
repnz
cmp
sbb
xlat
cli
add
xchg
bound
add
mov
jns
dec
adc
cwtl
sbb
jge
insl
mov
xchg
lcall
jmp
jp
inc
call
mov
jp
cmc
sbb
dec
adc
pushf
pop
mov
bound
sahf
iret
xchg
add
xchg
mov
push
push
xchg
shll
into
push
les
mov
push
in
insl
ljmp
xlat
add
sahf
cs
xor
lcall
jns
xchg
icebp
arpl
sbb
mov
lock
cltd
sbb
jle
jno
sbb
sbb
xchg
or
ds
fucom
pop
jne
or
nop
xchg
mov
insb
lcall
and
adc
push
in
mov
xchg
mov
dec
inc
sbb
out
call
es
cltd
fisttpll
popf
popa
sbbb
lcall
test
sub
push
lock
sub
in
test
ret
es
jbe
cmpb
into
sbb
xchg
jecxz
sub
sti
inc
cs
dec
xor
scas
cmp
xor
int3
addr16
pop
test
stc
adc
idivl
dec
mov
and
addl
and
loope
push
call
inc
repnz
push
dec
in
test
xchg
repnz
inc
sbb
dec
pop
out
mov
mov
clc
mov
adc
cltd
inc
or
cmc
push
bound
inc
loope
cltd
and
daa
push
ret
fldcw
sbb
daa
cld
xor
and
lock
dec
call
xchg
arpl
and
mov
aad
in
mov
out
sub
test
mov
pop
push
push
xchg
outsb
adc
jecxz,pn
push
dec
loope
aas
sbb
out
ljmp
pop
movb
adc
adc
in
out
mov
loopne
jno
sbb
addb
mov
imul
loopne
js
cmc
cmc
jl
fnstsw
sub
xchg
cmpsl
push
fsts
dec
fldl2e
xor
mov
lret
mov
pop
mov
xor
push
mov
mov
mov
or
test
cltd
and
rcrb
fnstenv
mov
xor
ds
mov
push
and
or
call
test
xchg
jno
sbb
dec
imul
sub
mov
xor
mov
mov
jbe
add
jge
pop
or
mov
jp
dec
xor
insb
and
or
cmp
lods
lods
xchg
jnp
mov
sbb
pusha
pop
cmpl
ffreep
and
loopne
push
jg
mov
andl
sub
pop
inc
xchg
push
or
push
mov
popf
pop
inc
cmpsb
or
jae
insb
repnz
int
lea
out
add
orb
jg
fsubs
push
mov
or
lret
pop
jecxz
add
cmc
ret
push
xor
dec
push
int
dec
push
sub
add
push
rcll
mov
outsb
mov
cli
out
cmp
icebp
cld
aaa
dec
inc
sarb
inc
mov
shll
add
jns
nop
mov
lods
lret
idiv
and
pop
sub
cmpb
sub
cli
cmpsl
add
ja
addr16
adc
push
sbb
inc
out
or
push
inc
loope
mov
adc
mov
pop
push
aaa
inc
out
std
mov
daa
loope
insb
mov
fcomps
push
cmpsl
adc
stos
lcall
mov
ljmp
or
xor
lret
bound
or
xchg
lds
pusha
lret
aas
pop
iret
cmc
test
pop
mov
das
loopne
dec
xor
inc
add
sbb
mov
cmp
mov
imul
inc
test
arpl
adc
sahf
nop
test
mov
fldt
or
loopne
jo
inc
xor
sbb
imul
and
cld
mov
imul
pusha
sub
je
movsl
and
adc
xor
sbb
pop
push
mov
sub
dec
xor
sbb
pop
in
repz
sub
jmp
in
adc
mov
pop
outsl
and
shll
mov
pop
outsl
xchg
add
insl
xchg
push
aad
cmp
mov
mov
sub
mov
adc
je
stos
clc
in
push
stos
add
mov
cmp
lea
stc
mov
in
sub
pop
xor
lea
xorb
cli
push
and
add
lods
mov
popf
fistps
jns
or
shrb
sub
loopne
push
popw
jmp
push
iret
push
mov
sbb
hlt
mov
xor
ds
aas
jne
mov
data16
mov
cld
or
aaa
and
pop
sub
movsb
js
dec
dec
cld
jo
jg
out
fildl
fidivl
das
lea
lods
jl
jl
out
sub
aam
sar
push
movsb
daa
sti
xchg
jbe
mov
push
cmp
imul
push
sarb
aad
sub
fcomps
push
jmp
or
sbb
aam
mov
lahf
lock
cwtl
jge
jmp
nop
adc
dec
or
int3
insl
cmp
mov
fwait
pop
xlat
popf
xor
in
mov
inc
int3
xchg
lods
cmp
sahf
or
fldenv
xchg
sbb
nop
mov
inc
mov
subb
xchg
les
mov
repz
ficoml
lock
dec
jp
mov
sbb
add
cmp
xor
adc
xchg
mov
xchg
jae
aam
popf
pop
js
je
cmp
arpl
or
ficoml
adc
jns
jecxz
and
loopne
jmp
push
test
std
xchg
xor
adc
or
jg
push
movsl
sahf
sub
leave
mov
pop
pop
cmpsb
mov
cmp
lret
xchg
daa
mov
ret
add
cltd
subb
loopne
and
jp
inc
sub
out
xchg
sbb
mov
mov
cmpsl
in
add
rorb
popa
mov
and
imul
pop
xor
and
pop
xor
or
pop
shlb
jmp
xchg
test
mov
adc
es
aam
mov
cmc
xor
fists
adc
int3
clc
shl
adc
lret
jg
lods
das
push
jae
mov
loope
stos
dec
inc
mov
mov
hlt
fsts
mov
adc
jecxz
dec
lret
or
dec
icebp
ret
aad
mov
sub
cmpsb
in
ja
repnz
xchg
daa
movsl
lret
fs
pop
mov
mov
jg
sbb
push
xchg
inc
std
clc
arpl
cs
and
pop
insb
in
push
cs
xlat
add
decl
lcall
test
mov
fwait
or
mov
imul
adc
fdiv
sbb
test
xchg
das
push
jge
xchg
test
mov
sub
cmp
in
insl
mov
sub
push
out
test
std
adc
pop
inc
fld
test
out
aaa
mov
icebp
notl
in
rcll
jno
mov
sub
pusha
inc
movsl
out
rolb
mov
jecxz
pop
push
pop
shrb
xor
adc
jge
xlat
aas
add
jbe
xchg
or
icebp
cmpsl
add
jns
pop
mov
xchg
lods
jnp
sahf
shrl
out
js
pop
call
jge
lods
repz
cli
jecxz,pt
dec
divl
and
mov
add
idivl
cmp
in
or
aaa
push
jmp
jl
xchg
fistl
andl
cltd
jae
cld
adc
out
mov
cwtl
mov
xchg
je
xor
push
rorb
mov
cmp
pop
leave
notl
in
stos
jle
pop
adc
mov
xor
adc
lds
xorb
pusha
xor
push
data16
pop
lretw
sub
leave
jmp
fs
pop
ds
rcll
sub
push
or
inc
loope,pn
mov
fists
div
or
outsb
or
dec
or
test
fwait
jne
outsl
cmpsl
xorb
add
subl
js
out
cmp
and
sbb
push
cli
sub
xchg
jle
out
mov
and
femms
ja
mov
enter
jge
aas
or
out
pusha
ss
insb
dec
mov
scas
add
dec
cli
mov
cmc
adc
cld
js
fisubl
add
cmc
lahf
pop
inc
cmp
adc
xor
leave
fcoms
imul
mov
mov
mov
sbb
add
cmp
mov
sub
push
jo
mov
in
mov
sbb
pminub
xchg
and
lods
mov
cmp
lret
insl
sbb
jecxz
fdiv
push
inc
inc
jle
add
mov
xchg
data16
pop
inc
mov
fmulp
rolb
andl
imul
push
or
daa
je
inc
fsubrp
xchg
mov
push
divl
lcall
aad
sub
je
mov
dec
rcl
or
and
cmp
jge
sub
xlat
lret
mov
push
jae
add
jecxz
adc
lea
or
test
mov
and
cmc
jae
xor
push
ss
dec
sbbb
movsl
xorb
lret
fdivs
lahf
push
or
push
push
jb
sbb
outsl
push
push
scas
call
sbb
scas
add
ds
cwtl
ffree
xchg
arpl
enter
punpcklwd
mov
jge
outsb
sub
pop
and
mov
and
mov
sub
ret
loop
sub
mov
inc
or
stc
push
mov
inc
aam
lods
sbb
inc
mov
test
popa
out
or
add
outsl
insl
clc
pop
push
cmp
inc
mov
mov
cwtl
insb
or
mov
sbb
push
nop
pop
dec
add
xorb
movsl
es
jo
test
push
cld
ss
xchg
dec
push
lods
xor
ja
xrelease
pop
mov
mov
mov
rol
sbb
add
push
lcall
nop
icebp
xchg
aad
inc
scas
nop
or
xchg
sbb
xor
xchg
fisubs
add
loop
lcall
pop
pop
ljmp
daa
dec
loopne
repz
sbb
cmc
sub
das
mov
bound
cmpsb
or
mov
sub
adc
movsl
mov
psubw
out
js
inc
mov
cmp
jns
leave
xchg
pushf
sub
sbb
push
cmpsl
xchg
mov
mov
ficoml
mov
jge
cmc
pop
lcall
out
push
sbb
je
hlt
shll
adc
out
addl
sub
je
adcb
loop
fistl
popf
lret
xchg
mov
nop
insl
add
jns
xchg
mov
mov
mov
mov
cmpsl
dec
std
adc
out
fistps
stc
in
xchg
cmpsl
or
cmp
or
cmp
mov
mov
jo
test
or
rol
xor
xor
rcll
pop
popl
mov
xlat
jno
xchg
in
sbb
in
adc
aaa
sti
bound
sbb
stos
out
movsl
ljmp
pop
xchg
cmp
out
rcll
cmpsb
push
cmp
sub
cli
push
push
js
or
dec
stos
mov
cmp
or
xor
cmpsb
std
js
and
out
sti
test
push
and
xor
xor
aam
jecxz
mov
sbb
sbb
cmpsb
dec
out
mov
jl
popf
add
testw
mov
jge
leave
dec
push
outsb
repnz
ds
dec
loope
jb
std
mov
cmc
clc
hlt
mov
out
cmp
insl
push
mov
sbb
push
xchg
and
mov
push
inc
int3
test
mov
int3
jo
jns
mov
inc
push
mov
popf
push
stos
mov
js
push
inc
fisttps
push
enter
decl
daa
sahf
pop
xor
aad
outsl
push
aad
push
mov
je
bound
iret
ja
cli
in
and
push
mov
fstp
hlt
inc
xor
and
push
xchg
mov
das
negl
insb
mov
test
aas
xor
jnp
jecxz
dec
fists
dec
ffree
push
test
arpl
mov
mov
lea
jns
popa
bound
add
xor
push
mov
sbb
popf
push
ret
mov
int
or
sub
cmpsb
xchg
add
loopne
loopne
in
arpl
mov
repnz
lahf
aas
out
xor
jge
and
cmp
jg
or
ds
fwait
mov
inc
or
outsl
sarl
jb
rol
movsb
dec
outsl
insb
dec
iret
mov
stc
insb
roll
xchg
sub
loop
cld
push
int
mov
mov
xchg
fisubl
adc
or
pop
sub
sub
outsl
xor
lds
cmp
gs
fstp
into
and
in
cmp
cmp
jne
lods
ss
inc
pop
sarl
loope
push
mov
popf
xor
mov
loop
add
movsl
aad
sbb
and
in
sub
sub
filds
fidivs
add
push
in
xor
movsb
aad
in
sahf
push
test
dec
aad
mov
hlt
pop
jmp
mov
jg
call
mov
shll
jmp
ficomps
mov
loop
loop,pn
pusha
sti
sbb
jb
jbe
pop
shll
xlat
add
push
sub
cmpsb
xchg
jecxz
repnz
scas
mov
jo
push
or
and
rcll
fidivrl
icebp
jbe
mov
dec
jae
mov
and
lods
in
pop
dec
dec
sahf
into
int
inc
jb
dec
lret
jnp
mov
out
in
out
fimuls
lret
and
jo
sahf
cld
das
xor
imul
sbbb
stos
cmp
stos
test
dec
inc
ljmp
jmp
mov
jne
cmp
hlt
sbb
imull
pusha
inc
daa
sbb
addl
lret
rolb
jb
and
xchg
jo
pop
adc
mov
sub
inc
loope
shlb
std
leave
loopne
nop
dec
xchg
sbb
jmp
mov
or
arpl
rorl
push
mov
cmpl
cmc
bound
roll
mov
orb
mov
mov
add
push
sbbb
in
mov
fldt
pop
pop
jne
sub
vpmadcswd
aaa
ljmp
das
arpl
iret
cmp
int3
mov
clc
and
pop
pop
pop
je
adc
lock
cli
sbb
push
enter
lods
lea
dec
mov
aad
push
enter
push
test
fld
dec
decl
loopne
pop
daa
jge
push
lret
nop
xchg
fcmovbe
push
scas
rorb
push
std
lods
repz
sub
fucomip
mov
adcb
push
push
aad
sub
daa
push
jp
jae
aaa
cmp
cmpb
ret
jo
xchg
and
xorb
sbb
test
jecxz
pop
loope
aas
test
aaa
xchg
xor
or
fimull
out
popf
pop
mov
xor
call
add
add
xchg
es
add
into
jl
cli
pusha
add
nop
out
out
jmp
addl
out
jge
iret
mov
in
mov
rol
pop
lods
inc
repnz
outsl
cli
jae
pop
or
push
aas
in
inc
scas
mov
cmc
into
jecxz
sub
popf
add
cltd
adc
addr16
stc
and
mov
jae
pushf
jl
bound
and
out
mov
stos
pop
add
mov
loope
mov
dec
xchg
inc
imul
out
fcomp
pop
pop
call
xchg
mov
push
cmpsb
mov
mul
sbb
aam
push
insb
mov
xchg
loope
aaa
mov
mov
cmpsb
jmp
pop
xchg
add
mov
test
fdivrl
dec
push
out
outsb
push
mov
inc
xor
cli
or
pop
mov
cmpsl
call
nop
or
cmpsb
jno
dec
orb
xor
pop
daa
mov
cmc
stc
cmp
xor
int
push
xchg
arpl
pop
inc
out
negb
inc
rclb
mov
adc
inc
push
pop
add
or
mov
and
in
inc
cs
leave
mov
test
out
cwtl
adc
mov
leave
orb
fbstp
jg
mov
add
cmpsl
pop
inc
pop
sbb
aam
aad
inc
cmp
pop
push
xchg
jg,pn
fiadds
cmp
popa
sarb
int3
lret
fwait
adc
inc
pop
or
call
popf
negb
mov
les
fstps
bound
adc
cs
ja
and
mov
push
lock
push
xchg
shlb
pusha
das
inc
test
scas
pop
lret
mov
pop
call
mov
xchg
ror
sahf
sbb
js
ficoml
mov
ds
and
sahf
and
xor
int
aad
call
cmpb
cmp
lds
lret
push
shl
or
pop
imul
andb
cltd
push
cli
cs
loop
adcb
imul
inc
push
xlat
popl
inc
ljmp
inc
loop
add
push
cs
cli
adc
xchg
adc
sbb
sbb
mov
cwtl
repnz
in
or
pop
xchg
mov
in
rcrb
xchg
inc
dec
lcall
xor
clc
xlat
jne
xchg
mov
xor
mov
push
jne,pt
xor
mov
mov
cmp
lds
icebp
fsubrl
mov
cmp
pop
push
nop
movsb
repz
loope
inc
test
or
cmovae
mov
inc
sub
shl
imul
or
lods
cmp
aaa
xor
push
loop
xor
outsb
pop
dec
pusha
xchg
jmp
popf
sbb
int3
lods
mov
mov
fwait
mov
pop
dec
and
pusha
lret
or
daa
sub
inc
scas
xchg
cmc
test
push
cld
fcoml
bound
fbld
cltd
sub
sub
jmp
lea
adc
pop
call
lea
dec
add
push
lea
sub
aam
dec
fwait
pop
aam
faddl
xchg
jg
rcll
adc
fimull
ret
sub
sbb
push
pop
scas
repnz
adc
frstor
mov
mov
jmp
stos
nop
lock
sub
shrl
stc
aam
rcrl
push
dec
sbb
gs
movsl
pop
cmpsb
xor
sub
ret
lahf
or
mov
sub
mov
lods
and
inc
push
jp
jo
dec
inc
xchg
sbb
sbb
sbb
stos
das
call
pop
cmp
ja
push
frstor
sbb
fs
jl
in
loope
add
adc
adc
insl
jge
pop
add
aam
sub
hlt
adc
or
mov
repz
movsb
inc
or
aas
inc
add
outsl
sub
adc
call
push
cli
mov
add
add
adc
test
jae
mov
adc
and
inc
jmp
testb
mov
pusha
sub
mov
inc
js
popa
test
mov
jge
loopne
fisubrl
mov
push
sub
jp
dec
adc
dec
xchg
stc
in
xchg
mov
sarb
or
jg
pop
fildl
mov
das
cmp
xchg
xlat
or
ljmp
sub
pop
xor
or
lahf
sub
cmpb
in
pop
movsl
pop
out
cmp
push
push
es
clc
mull
xchg
push
inc
pushf
pop
inc
pop
dec
lods
out
rcrl
loop
adc
sbb
push
lcall
ss
push
pop
movsb
out
adc
adc
xchg
jmp
dec
sub
xchg
imul
adc
cmc
das
cmp
and
inc
ja
ljmp
imul
inc
test
adc
sbb
frstor
xchg
dec
test
pop
popf
sbb
mov
mull
mov
mov
mov
sub
lock
add
pop
push
in
xor
pop
cs
mov
popf
jmp
cltd
popa
add
or
fdivp
dec
mov
xor
iret
mov
lock
call
ds
pop
fimuls
push
mov
scas
movsb
movsb
cmp
hlt
mov
sub
lods
pushf
mov
je
jnp
push
cs
mov
dec
mov
xor
scas
cwtl
dec
imul
andb
sub
repz
xchg
xor
push
mov
aaa
or
push
dec
jno
xchg
cmpsb
hlt
sbb
call
faddl
out
and
xchg
int3
mov
in
xchg
shlb
in
cs
push
mov
clc
cmp
pushf
jae
out
push
fstp
push
add
jecxz
xchg
xor
dec
jle
out
mov
dec
test
mov
cmpsb
inc
sahf
fsubrs
jns
test
cltd
scas
cmp
arpl
je
or
inc
adc
jnp
int
inc
test
mov
ljmp
add
roll
and
gs
cmp
arpl
lahf
xchg
mov
mov
pop
mov
daa
jle
ss
incb
jb
sub
stc
jo
shlb
xchg
sbbb
xor
ss
outsb
sti
xor
pop
inc
ss
mov
iret
stos
outsb
mov
hlt
xchg
shlb
insb
xor
or
lret
insb
push
aaa
mov
sub
lahf
addb
inc
jg
shll
rolb
out
push
xchg
scas
inc
rolb
mov
jp
add
imul
test
aad
sti
stos
sub
das
repz
icebp
aaa
movsl
lret
pusha
jns
add
mov
out
mov
hlt
imul
fs
inc
and
add
hlt
mov
out
call
les
insb
dec
cs
mov
mov
fidivs
jmp
jl
mov
jg
jbe
cli
and
leave
and
cmpsb
lret
or
add
fstps
mov
cmp
push
dec
sub
test
dec
inc
inc
int3
adc
cwtl
add
or
decl
xchg
lock
lret
std
mov
push
pcmpeqw
clc
sbb
mov
jp
jbe
testb
std
xchg
sbb
sahf
pop
push
clc
or
push
loope
outsb
hlt
rolb
push
test
cmp
dec
jmp
cmp
stc
xacquire
mov
imul
lock
pop
imul
dec
cmp
mov
gs
psubsb
cmp
scas
xorb
inc
lcall
mov
xchg
push
mov
movsl
xchg
pop
pop
cs
mov
ret
dec
cli
ret
sub
jno
mov
sub
pop
ret
sub
pushf
xchg
pop
lret
in
add
jge
icebp
xor
in
add
mov
loopne
inc
ficomps
call
das
enter
out
mov
pusha
jg
std
ret
xor
inc
add
push
or
inc
mov
cld
push
jg
in
sub
dec
adc
in
pop
fstpl
or
mov
push
add
out
repnz
ret
xorb
mov
mov
xchg
add
repz
cmp
lret
pop
add
mov
mov
lods
mov
ret
sub
shl
dec
fbstp
movsw
addr16
jnp
stc
popf
jns
lfs
ficompl
cmp
cli
add
cmp
xorb
gs
mov
lret
call
dec
insl
push
in
shlb
dec
stos
pop
ret
icebp
xor
xor
sbb
dec
out
inc
inc
sbb
add
daa
leave
sahf
pop
jge
xor
lds
push
sub
mov
and
cld
pop
cltd
jle
stos
pop
enter
stc
pop
push
push
mov
pop
lcall
loop,pn
jge
and
mov
lcall
push
jne
nop
dec
cld
test
sti
stos
nop
sti
icebp
adc
pop
sarb
aaa
sti
inc
ljmp
dec
mov
arpl
xchg
lods
sahf
pop
dec
mov
add
adc
imul
rcrb
leave
repnz
and
and
pop
fdivrl
pop
popa
xchg
pop
sub
std
cmp
inc
and
push
xor
mov
jnp
cmp
jecxz
fcmovbe
lcall
push
and
pop
stos
test
sub
ja
ss
subl
or
fistpl
daa
outsb
pop
and
ss
jmp
imul
mov
inc
lahf
idiv
push
jno
sub
rorl
in
cmp
push
mov
bound
shll
lds
dec
xchg
popa
les
stos
xor
movsb
and
add
outsl
add
repnz
es
adc
cmp
sub
cmc
pop
orb
in
push
pop
xchg
rclb
test
jb
std
xchg
push
adc
in
sahf
jb
sub
loop
imul
xorl
adc
pusha
imul
mov
xchg
aas
push
out
mov
hlt
ret
push
std
adc
out
adc
fwait
xchg
cld
sub
mov
fildl
les
mov
mov
ljmp
sub
xchg
jbe
imul
ret
push
inc
cltd
out
mov
jg
sbb
jl
adc
in
push
xchg
pop
and
cmp
sub
mov
xchg
loopne
lahf
or
pop
inc
mov
std
xchg
das
out
lahf
sub
nop
or
mov
lret
sbb
lret
fs
inc
jge
out
outsl
mov
insb
das
cmp
xor
mov
mov
mov
cmpsb
divl
push
test
test
cmp
lea
sub
dec
xor
mov
cmp
hlt
sbb
xorb
mov
dec
mov
das
mov
bound
dec
scas
mov
xor
mov
arpl
sbb
push
cltd
cmp
xor
adcl
push
sahf
in
psllq
pop
jmp
orb
sahf
lea
add
mov
inc
xor
jb
sahf
and
inc
fcomps
push
out
test
or
test
mov
mov
dec
sub
sbb
out
fsub
cli
sahf
pop
inc
push
push
jnp
sbb
and
jmp
fwait
push
cli
inc
test
jg
jle
pushf
xor
sbb
push
pop
cwtl
enter
jae
enter
fisubl
iret
push
call
dec
lock
aaa
add
repz
xchg
inc
adcl
je
movb
adc
push
out
scas
lods
push
and
popf
fs
lea
xchg
sub
cmpsl
push
sub
mov
movsl
or
inc
sahf
dec
sahf
xchg
adc
ja
xchg
out
insl
push
iret
and
fdiv
cmpsb
push
shlb
cltd
jo
cmp
jp
test
pop
cmpl
jno
jno
jnp
lds
lods
iret
and
sbb
cmp
clc
jno
ja
jbe
adc
dec
mov
aad
push
fcos
pop
xchg
adc
cmp
mov
and
xor
in
xor
adc
loop
pop
sub
push
subb
aad
xchg
dec
sahf
out
in
jns
stos
xlat
inc
xor
lea
lods
and
mov
cmp
xchg
inc
jl
push
mov
stc
pop
push
jl
gs
data16
cld
iret
lock
test
mov
mov
push
cmpsl
pop
lods
cli
test
xchg
sbb
or
dec
and
push
pushl
cmpsl
rcll
outsb
mov
lods
divl
hlt
mov
mov
push
xchg
pushf
test
and
outsb
gs
rolb
mov
pop
push
or
adc
ja
inc
inc
mov
test
add
pop
push
ret
shll
mov
fs
dec
push
push
movsl
pusha
cmp
dec
aad
es
in
cmp
incb
sub
mov
enter
cmp
lds
adc
fcoml
clc
push
jb
dec
or
fbstp
push
es
call
xchg
inc
sbb
lret
xchg
mov
cmpsb
js
arpl
out
jg,pt
repz
inc
bnd
pushf
outsb
mov
mov
inc
shll
jmp
pop
loope
mov
insb
adc
jns
es
dec
iret
xor
jae
jae
sbb
jle
es
dec
lret
xchg
notl
stos
push
leave
mov
adc
sbb
ljmp
fidivl
pop
push
in
mov
gs
aad
roll
mov
xlat
or
push
jmp
std
xadd
xor
push
in
cmp
cld
add
mov
pop
sbb
pop
pop
lods
push
add
sub
shl
cltd
les
pop
pop
jmp
fdivr
push
je
xlat
ret
cltd
out
sub
sub
les
cmc
sub
add
popa
popa
adc
lcall
cs
jge
mov
sub
xchg
lea
es
inc
test
inc
ficomps
cmpsl
aad
dec
psubd
add
mov
add
sbb
outsb
jns
mov
push
adc
nop
mov
lods
sub
outsl
pop
mov
xlat
add
xchg
or
dec
outsl
lret
mov
in
inc
clc
call
rcrl
mov
xor
movb
icebp
jle
jge
cmpsb
sub
push
and
std
jns
push
ret
insb
loope
gs
xlat
fcmovb
sub
push
xchg
ficoms
mov
mov
dec
stos
mov
loope
mov
jno
mov
add
sub
stos
push
ja
stc
adc
add
push
dec
imul
enter
push
ja
jno
adcl
int3
or
int
sti
jo
fadds
mov
jge
loop
test
lret
sbb
mov
int3
cltd
js
fs
and
hlt
decb
jns
cmp
aam
mov
popa
adc
fsubrl
lcall
push
mov
adc
sbb
sub
lock
jg
das
jne
out
add
fisubl
iret
lods
xchg
sbb
fst
ret
mov
cmp
sbbb
sahf
ss
xchg
sahf
repnz
xchg
test
mov
sbbl
movaps
hlt
fbstp
pop
shlb
fisubs
cmp
dec
test
lret
dec
and
mov
inc
cmp
test
in
pop
lods
into
cmpsb
lret
nop
or
mov
and
jns
dec
or
jns
lcall
test
pop
subl
sbb
fadd
inc
push
push
sarl
mov
enter
andl
sub
pop
cltd
in
or
adc
xchg
hlt
inc
sub
mov
rcll
xchg
idivb
jg
clc
mov
outsl
lret
jbe
cmc
gs
cltd
fsubrs
xlat
shlb
sbb
test
jb
arpl
sub
add
ja
and
insb
mov
imul
call
mov
shll
xchg
fcomps
fsubr
dec
scas
imull
hlt
test
xchg
or
jg
imul
jbe
jge
lds
sahf
enter
mov
mov
das
ret
jae
out
outsl
push
pop
adc
mov
fwait
leave
sahf
hlt
push
xor
lods
and
in
jnp
loope
popa
sub
jae
cli
or
adc
fnstenv
daa
inc
jo
dec
hlt
sub
xchg
inc
pop
filds
mov
xor
daa
push
flds
loop
xor
cmp
fadds
stos
int3
sub
daa
scas
aad
lret
and
in
dec
jnp
xchg
mov
dec
xor
inc
push
aam
shl
cltd
cltd
mov
mov
out
mov
cmpsb
mov
test
sbb
fsubl
push
ss
subl
out
sub
mov
movsl
add
adc
iret
jecxz
sub
test
lods
fcmovnu
and
push
mov
mov
jle
mov
cmp
sub
and
out
movsl
in
mov
int
jb
sub
lods
and
addl
sahf
mov
outsb
fstpt
mulb
fwait
rorl
in
repnz
fdivrs
arpl
sub
loope
stos
gs
repz
jae
test
lea
adc
or
rorl
cli
lock
bound
adc
push
inc
pop
sub
in
mov
mov
outsl
sbb
mov
or
shlb
mov
ret
insb
push
hlt
fdecstp
cli
push
xor
xor
ja
sub
jae
scas
ficoml
push
sbbb
dec
and
pushf
add
repz
out
sti
push
stos
jno
mov
cltd
icebp
sub
repnz
sub
insb
dec
and
rcl
outsb
jge
mov
in
push
pop
pop
push
xchg
lcall
and
sarl
ja
adc
cmp
jl
addl
pop
push
mov
pcmpeqd
pop
jb
dec
icebp
les
pop
mov
popf
xor
mov
aad
orb
xor
ljmp
rolb
hlt
jge
icebp
les
loopne
into
into
mov
cmpsb
pop
mov
xchg
pushf
pop
rorl
bound
xlat
lea
cmpsl
dec
lds
inc
push
cmp
lds
or
xor
sub
ret
jmp
dec
jbe
rorb
les
out
divb
shr
jns
or
les
or
pop
ret
js
repz
rcrl
jecxz
cld
mov
dec
push
pusha
rcll
addb
and
cmp
fbstp
je
sub
mov
dec
pop
stos
pop
mov
stos
faddl
fnstcw
popa
insl
out
in
mov
cmp
push
repz
lea
jl
lods
inc
mov
mov
and
repnz
dec
sbb
and
loope
jp
sbb
ds
lahf
cld
sub
push
jno
cmp
add
in
jle
je
clc
push
pop
pop
loop
push
sub
in
or
fwait
pop
mov
pop
xor
aas
imul
and
mov
inc
and
mov
andl
xor
cmp
ja
shlb
xchg
push
ds
adc
pop
daa
jge
adc
or
fcmovne
adc
ds
shl
test
mov
aam
outsl
sbb
sub
rcrl
loop
jl
repz
mov
pop
mov
mov
shrl
out
in
jae
pop
adc
push
ret
mov
aam
cmp
iret
pop
sbb
mov
xchg
xor
mov
push
cmpsb
push
mov
and
std
sarb
pop
sahf
jnp
lret
push
call
mov
mov
pcmpeqb
aad
pop
xor
jmp
pop
push
ljmp
adc
inc
aaa
test
mov
leave
shl
shrb
negl
or
ds
ss
push
fwait
or
mov
pop
jb
sahf
imul
insl
sbb
andb
pop
mov
test
lods
adc
hlt
stc
out
loopne
push
adc
inc
cli
inc
xchg
pusha
jg
stc
mov
add
icebp
jbe
dec
dec
scas
push
and
xchg
je
push
xor
sbb
sbb
ret
ficoms
or
loope
cli
ret
xchg
pop
jl
mov
adc
mov
push
mov
mov
ret
repnz
or
jecxz
jl
enter
fiaddl
in
mov
inc
int
mov
pop
ret
test
aas
rorl
cli
inc
test
or
loope
sub
fs
xor
fcmovnb
push
fdiv
sub
push
outsb
mov
ljmp
aaa
out
jmp
xchg
xorl
test
arpl
lock
add
lahf
je
ret
lcall
divl
das
cwtl
fidivl
out
push
push
lcall
inc
pusha
xchg
lahf
mov
jle
inc
shrb
xchg
rclb
dec
shrb
mov
push
dec
ljmp
test
mov
sbb
popa
adc
or
cmc
out
lcall
pop
pop
pop
in
shll
pop
mulb
bound
sti
outsb
jecxz
fnstsw
popa
xlat
mov
add
mov
and
adc
es
mov
sarb
push
jne
mov
cltd
lds
jbe
popf
fisubs
aaa
repz
or
int3
xorl
inc
sbb
call
jmp
stos
mov
sahf
fldt
std
mov
repnz
fildl
fs
insl
mov
dec
stos
adc
jae
lds
pop
push
push
out
cmc
addr16
fsubrl
ss
ds
mov
push
cwtl
je
in
mov
subb
sub
jmp
or
adc
idivb
jae
sbb
out
es
gs
adc
rcrb
jnp
xor
notb
mov
lea
jno
ss
dec
repz
inc
push
mov
aad
xchg
mov
movsl
sub
dec
xchg
inc
subl
incl
in
repz
xchg
xor
ja
subb
pop
jg
pop
or
jbe
dec
mov
hlt
add
pop
fcmovu
gs
pusha
sbb
test
mov
dec
mov
jge
jg
sub
shrl
jb
cmc
jle
xchg
out
popa
int
inc
enter
push
inc
sbb
aaa
orl
sbb
add
adc
adc
push
ja
pop
mov
enter
xor
sbb
fdiv
sbbb
inc
je
cmp
cld
sbb
xorb
cld
movsb
or
pop
pusha
xchg
mov
shl
xchg
loop
inc
cmp
jo
leave
add
cmc
push
ja
ret
push
pop
popa
incb
movsb
shl
pusha
cmp
loopne
test
lcall
test
push
mov
pushl
cmp
fstpt
cmp
dec
pop
xor
sub
repnz
clc
and
and
mov
rclb
add
in
mov
and
mov
inc
dec
jg
cmp
lock
sbb
adc
outsl
jecxz,pt
pop
popa
cld
inc
and
pushf
popa
sub
xchg
jle
mov
scas
push
sbb
xor
xchg
sbb
int3
add
ds
and
and
ja
pusha
pop
std
dec
push
cs
jmp
xchg
les
sub
shrl
push
insl
and
test
jo
es
or
sbb
push
ficompl
xor
push
adc
pop
jae
and
test
pop
stos
push
mov
loop
sbbb
pop
push
ret
mov
leave
mov
mov
xor
jb
pop
fiadds
pop
or
inc
xchg
clc
dec
mov
out
mov
cmp
fisubs
cmp
sbb
inc
push
sbb
aam
push
jle
outsb
enter
rcrb
in
lods
mov
nop
rcrb
lea
ds
fisttpll
fimull
inc
loop
mov
dec
and
in
pop
das
xchg
xchg
mov
fidivl
es
mov
mov
push
fdiv
dec
dec
mov
movsb
sbb
inc
insl
repnz
push
fidivrl
mov
dec
fcomip
imul
push
jae
mov
mov
mov
mov
lods
jge
or
jmp
outsl
dec
gs
push
xchg
call
dec
push
call
xchg
les
cmp
and
mov
mov
mov
or
inc
mov
andb
dec
lods
sbb
loope
mov
adc
out
cli
aas
jp
and
cs
jns
xlat
cs
adc
push
ret
mov
orb
cmp
jecxz
mov
and
mov
jae
out
rolw
in
dec
push
cwtl
mov
mov
mov
std
push
test
mov
add
xor
sbb
adcb
ja
jno
inc
sahf
adc
pusha
loop
or
stos
out
mov
pop
mov
imul
fistpl
lock
in
mov
inc
or
xor
adc
hlt
cmc
in
imul
xor
mov
cmp
xor
xchg
clts
add
scas
or
push
sbb
std
std
pop
fisubrl
xlat
mov
inc
cmpsl
pop
cwtl
test
insb
inc
jne
and
lret
icebp
rcrl
pxor
or
jmp
xchg
xchg
sub
sub
and
popa
fwait
das
das
sarl
stos
ljmp
inc
mov
lret
dec
stos
xlat
popa
out
fcoms
sbb
cmp
imul
lock
lock
mov
movsb
push
call
inc
xchg
bound
arpl
xlat
lods
js
mov
adc
pop
sbb
es
jnp
adc
int3
inc
test
rclb
inc
lahf
in
jae
mov
add
rep
mov
outsl
sub
pmulhuw
repz
sub
cwtl
mov
mov
fs
inc
pushf
xor
pop
cwtl
lea
fwait
cld
incb
outsl
lcall
mov
push
sub
push
inc
out
fildl
jecxz
pop
or
or
jae
mov
mov
ret
cmp
mov
jg
test
outsb
cmp
add
cmp
rcll
arpl
dec
imul
mov
icebp
sub
dec
dec
shlb
fs
xor
jns
outsl
subb
xor
sub
sub
outsl
shrl
in
xchg
jae
xor
test
nop
shll
cmpxchg
sub
test
lds
push
adc
test
xchg
loope
lret
mov
mov
shrw
sbb
roll
shll
mov
sbb
mov
or
push
loope
sahf
cmp
or
mov
lret
repz
pop
inc
test
adc
insl
sub
data16
xchg
dec
lret
pushf
adc
or
sub
dec
lcall
lods
mulb
cmp
aaa
repz
xchg
push
sarl
xchg
jmp
cmpb
pop
mov
mov
jge
sbbb
jo
mov
sub
outsb
jge
fs
pop
imul
jnp
xor
push
subb
jg
rcll
imul
dec
xor
fisttps
adcl
cmpsb
jne
outsl
loop
mov
stos
mov
mov
add
xor
sarl
flds
jl
addl
gs
fsubrl
xchg
in
sti
mov
sub
idivb
in
stos
mov
jo
popf
insl
rcrl
mov
mov
pop
es
adc
movsl
jp
pop
pop
sub
mov
icebp
and
iret
xor
ficoms
sahf
mov
std
dec
and
out
jae
ds
lahf
mov
pop
ljmp
in
ja
jne
leave
fadd
adc
and
mov
sbb
push
or
add
adc
icebp
xchg
push
xchg
ret
adcl
or
and
dec
jo
cmp
dec
enter
addl
xchg
mov
std
stos
lock
sbb
pop
sub
add
fs
imul
mov
out
decb
pop
fnstsw
loope
ret
and
rolb
shrl
addl
sbb
jne
pop
insl
sbb
fcmovnbe
push
sbb
pusha
mov
push
mov
shrl
pop
lds
insb
mov
jb
js
mov
mov
push
inc
mov
inc
push
mov
jns
push
mov
sub
add
add
int3
stc
push
mov
jmp
dec
cltd
inc
faddp
ljmp
movsb
xor
mov
scas
add
loope
mov
test
mov
lds
push
sub
sbb
ljmp
pop
popaw
inc
shlb
icebp
enter
es
jbe
xor
mov
out
jecxz
xchg
xchg
fistl
scas
mov
xor
popa
jl
ss
test
stos
leave
add
add
aas
in
add
mov
xchg
sbb
sub
sbb
or
clc
dec
inc
add
xor
aas
cli
xorl
fsub
pop
sti
adc
xor
shll
call
or
and
mov
fsts
inc
fcoms
sub
push
rorl
shl
mov
test
and
insb
jnp
test
cmpl
xor
fdivl
mov
mov
jbe
popa
fistpl
fstpt
dec
adc
mov
imull
push
jb
adc
or
enter
negl
jp
adc
push
or
jge
jge
fsubrs
ss
popa
dec
dec
jo
fst
aam
orl
mov
ret
insb
adc
popf
sbb
pop
mov
jno
jmp
xor
xor
mov
inc
loopne
pushf
jns
or
mov
xchg
insl
dec
pop
dec
movsb
cltd
jp
sub
test
and
gs
cli
es
jne
or
push
pop
xchg
std
xor
sub
loope
pusha
jmp
or
push
or
rcrl
into
sub
sahf
push
sub
mov
leave
inc
ja
jg
aaa
aad
push
lret
dec
fstpt
sub
out
mov
jp
fwait
sar
test
ljmp
out
fldl
inc
das
sti
pushf
xorb
lea
out
jle
sub
or
inc
lds
es
incb
adc
icebp
pop
cmpsl
sbb
int3
mov
lret
push
pop
mov
pushf
mov
and
leave
add
or
or
in
jns
sarb
mov
jae
in
jmp
inc
pusha
inc
xchg
jnp
or
cmpsb
xor
mov
mov
push
scas
inc
dec
cmpsb
loop
cmp
pushf
jge
fisubl
mov
inc
sti
das
jns
cmp
arpl
lahf
aad
xchg
ss
adc
push
int3
pop
mov
dec
mov
fnsave
push
cli
in
cwtl
jnp
sbb
jp
jae
push
sbb
popf
mov
ljmp
xchg
out
into
sbb
fcmovne
jl
cmc
dec
or
lahf
and
out
mov
pop
dec
jle
adc
les
stos
pop
das
pop
nop
mov
imul
jb
sbb
psubusb
sbb
and
call
add
out
in
mov
je
adc
dec
test
sub
jle
jnp
ret
pop
ret
lcall
adc
pop
popa
cs
add
mov
fcompl
xlat
push
sub
cmp
inc
ds
xchg
xor
repz
xchg
stos
repz
ficoml
push
test
js
ret
push
sbb
in
stos
cmp
loope
xor
push
mov
mov
rorl
xor
pop
test
inc
dec
xchg
cmp
data16
pusha
jmp
movsl
cmp
sahf
in
fwait
add
mov
lds
or
imul
stos
xchg
sbb
icebp
out
and
fidivl
es
js
imul
stos
add
dec
rcll
mov
push
fsub
out
cli
or
xorb
in
cltd
ljmp
inc
scas
push
pop
fimuls
and
inc
mov
or
mov
bsf
dec
fs
btc
aaa
cmp
mov
jae
pop
rolb
inc
stos
mov
daa
sbb
mov
add
addb
nop
push
shlb
popf
jmp
cmp
int3
inc
data16
push
call
push
out
add
aas
rolb
inc
lahf
es
aas
lea
jbe
fsts
lahf
jae
inc
loope
jb
sbb
push
ret
mov
add
sub
loopne
push
es
cmpsl
xchg
mov
scas
pop
sub
sbb
sub
jns
adc
xchg
bound
movsl
lods
dec
cld
sbb
out
and
repz
lea
nop
scas
cli
frstor
enter
push
mov
lods
insb
cmpsl
mov
movsb
scas
sub
adc
cwtl
pop
gs
and
into
aas
cltd
sub
into
int
bound
shll
inc
insl
and
dec
jnp
cmp
shr
sar
bnd
sbbb
mov
mov
and
cmpsl
es
pop
imul
sahf
mov
sub
cmpsl
mov
pop
xchg
add
ret
inc
sti
inc
mov
idivl
std
popa
add
dec
mov
or
xchg
mov
fdivrp
jae
sub
subb
inc
into
mov
mov
cmpsl
imul
sbb
mov
dec
into
mov
ret
cli
es
pop
scas
dec
mov
jge
mov
subl
ss
jbe
cs
mov
into
rcl
pop
mov
inc
pop
jmp
jg
sub
incb
in
add
cmp
pop
cld
pushf
outsl
and
int3
stos
mov
fsubrl
movsb
jb
jle
add
bound
xchg
aas
fisubl
imul
rolb
stos
mov
jecxz
mov
xor
ret
shrb
inc
rorb
nop
jne
stos
add
pop
jnp
pop
ja
mov
jbe
pop
sbb
aaa
pop
out
fcmovnb
aad
sub
and
cmp
inc
ljmp
nop
sub
sub
pop
pop
xchg
push
fcmovu
test
xchg
sub
jp
xchg
subb
dec
dec
mov
popf
mull
in
xlat
add
dec
gs
std
and
xchg
ret
cltd
mov
inc
lcall
and
jo
aas
mov
push
into
and
mov
cmp
ret
xlat
lods
sbb
xor
out
adcb
ljmp
std
add
push
ficoms
nop
dec
fiadds
dec
dec
xchg
aam
jnp
pop
mov
jle
pop
push
cmpsl
rolb
mov
xchg
mov
call
mov
lea
fadds
aaa
sub
pop
test
fisubs
push
jb
sub
jmp
push
cli
cli
addr16
cmp
stos
inc
sub
lret
les
stos
in
icebp
pop
cmp
jbe
push
and
and
mov
lret
dec
adc
pop
jae
xor
pop
or
fimuls
push
sbb
loop
shr
fdivs
idivl
divl
iret
aaa
out
cmp
or
mov
lret
popf
add
push
ljmp
mov
mov
fiadds
adc
icebp
push
jne
mov
test
bound
insb
dec
daa
sbb
mov
sub
dec
loop
mov
inc
xor
rclb
out
cli
shll
xlat
push
cmp
cli
lds
xchg
lods
mov
jns
popf
adc
add
and
pop
arpl
icebp
sub
adc
lret
cmp
push
sub
out
jg
insl
icebp
icebp
adc
push
pusha
push
pusha
fdivl
xchg
lock
add
add
dec
and
mov
stc
outsb
xor
inc
mov
and
cmp
sbb
sbb
movsl
clc
pop
pushf
pop
sbb
clc
and
mov
push
std
je
xlat
cmovnp
cmpl
cld
jbe
dec
loope,pt
repz
das
cmp
adc
fwait
xor
mov
imul
cmpsl
pop
das
mov
push
adc
xchg
mov
pop
xchg
dec
insb
push
adc
scas
inc
lds
rclb
scas
stos
inc
hlt
aad
lahf
fs
inc
sub
add
mov
fbld
add
nop
inc
cmpsl
out
sahf
adc
push
sbb
mov
fimuls
stos
inc
movsb
pop
lds
or
lahf
cmp
sub
loop
push
movsb
pop
mov
fcompl
clc
nop
mov
stos
sbb
stos
adc
mov
sti
repz
sbb
mov
mov
sbb
lods
adcb
sub
loop
int
fistpll
mov
ljmp
mov
icebp
nop
or
sarb
jl
dec
call
dec
mov
movb
jbe
aam
mov
and
mov
decb
packsswb
mov
insl
xchg
aas
xor
mov
daa
push
jge
xorb
cli
push
jle
es
shrl
add
adc
jnp
mov
mull
jecxz
inc
jg
push
push
dec
or
popl
int
jns
sub
inc
mov
fidivs
jne
fs
sub
adc
int3
aas
lods
in
add
adc
sbb
icebp
xchg
aaa
insl
dec
mov
inc
cmp
or
push
loopne
sub
xor
or
scas
lret
mov
mov
add
add
clc
mov
loop
or
std
mov
mov
jb
lcall
popa
cmp
divb
cmovbe
xchg
fwait
repnz
sti
mov
dec
mov
decl
stos
mov
adcl
push
xchg
or
sahf
inc
mov
sub
inc
addr16
notb
mov
xchg
sti
popl
mov
cmp
sbb
or
test
jns
adc
mov
sarl
sahf
or
pop
sub
push
ds
or
push
test
push
arpl
cltd
mov
sbb
fstpt
or
fdivrl
ja
add
arpl
mov
hlt
sbb
mov
sub
sti
outsl
mov
or
sub
jl
pusha
aad
push
xor
and
int
pop
add
mov
xor
lock
out
sub
or
mov
imul
cmp
mov
sbb
hlt
les
lahf
dec
mov
flds
pop
shr
cltd
sahf
mov
and
ja
jnp
add
pop
scas
and
out
out
mov
stos
stc
or
jno
call
data16
add
cmp
ret
test
xchg
mov
in
test
mov
or
hlt
sahf
lds
xchg
sub
cmp
mov
xchg
mov
push
push
pusha
sbb
push
fwait
sahf
fistps
sar
out
push
lock
lcall
mov
fisubs
mov
pop
mov
hlt
pop
mov
gs
sub
and
in
sub
cmp
pop
in
fmull
int3
sub
sub
xchg
push
cld
jae
cmp
and
inc
push
or
lds
xchg
sete
leave
out
mov
pushf
dec
xor
gs
aaa
dec
inc
int3
xor
imul
gs
je
cmp
sbb
js
dec
pop
jbe
mov
iret
push
sarl
add
enter
push
lret
and
cmp
lods
push
test
std
adc
sub
out
test
and
or
jp
rorl
loop
mov
pushf
xor
adc
shrl
les
shll
aaa
stos
stos
xor
popa
xor
into
ja
dec
data16
lret
aad
add
mov
dec
dec
adc
push
dec
rorl
loopne
add
add
mov
testb
rorb
jne
sbb
flds
shlb
es
inc
xor
dec
mov
dec
lods
and
adc
lods
fbstp
jg
or
cwtl
cmc
inc
mov
and
fisubl
data16
push
push
and
push
push
dec
out
ds
sbb
push
iret
scas
pop
mov
and
jmp
sub
mov
xor
popf
dec
ret
and
dec
sbbl
mov
sbb
ficompl
rcrb
and
sbb
dec
push
dec
outsl
add
ljmp
pop
dec
cmp
adc
imul
dec
mov
jno
jnp
xor
add
sti
and
xor
fwait
pop
pop
jle
pop
fisubrs
loope
lods
xchg
jg
stos
inc
dec
inc
mov
cmp
fisubs
test
sub
cwtl
jmp
xchg
test
fs
xchg
aas
push
xchg
jmp
jg
or
mov
xchg
cld
stos
xor
adc
push
push
shll
xor
add
pop
mov
shl
mov
and
gs
fcmovbe
notl
aaa
push
and
and
dec
sub
lods
lods
push
js
sub
push
inc
ret
jne
adc
dec
test
imulb
xchg
ljmp
cmp
xchg
sbb
or
dec
dec
sbb
mov
pop
sarb
dec
inc
aaa
add
or
mov
data16
mov
in
or
dec
sbb
push
sbbl
sub
sub
and
out
divb
enter
mov
clc
xchg
cs
jl
sbb
and
push
lret
mov
or
mov
push
out
aas
mov
loop
sub
arpl
or
or
mov
jno
je
mov
cli
or
sub
or
ret
dec
lahf
out
mov
incl
inc
cmpl
ret
sub
mov
xchg
push
aas
imulb
add
imul
xchg
cmp
data16
cmp
jae
pop
aaa
ret
in
out
push
mov
mov
and
inc
and
cmpsb
pop
fbld
insb
mov
aad
adc
mov
in
inc
dec
mov
cmp
xor
insl
pop
push
push
lret
mov
in
mov
scas
add
ds
and
mov
push
and
fistps
test
inc
ss
pop
shrb
add
pop
xchg
clc
ret
shrl
jns
stc
sub
push
mov
adc
sub
mov
in
in
and
xor
xorl
push
enter
inc
outsb
lock
dec
leave
sub
add
hlt
xchg
insl
adc
mov
mov
sbb
lods
xor
ljmp
aad
vcvtsi2sdl
push
inc
sbb
fwait
movsl
xchg
scas
adc
pusha
sub
das
fbstp
mov
jo
test
add
add
xchg
fnstenv
mov
popa
push
cmpl
dec
int
xor
mov
out
jg
adc
sbb
adc
pushf
sbb
shr
lahf
jnp
lods
dec
adc
outsl
ret
sub
mov
mov
addl
push
cmpsl
out
dec
rcrb
inc
cmp
mov
mov
xchg
inc
mov
test
or
mov
out
or
bound
jmp
adc
loopne
mov
inc
gs
and
jmp
adc
mov
fisubl
loope
dec
jne
data16
rorl
cli
cli
scas
fidivl
shrl
ret
loopne
jmp
push
outsl
das
std
dec
adc
lahf
dec
push
and
cmp
xchg
mov
sbb
ds
sbb
rclb
and
jmp
pop
lea
aad
lret
imul
sub
xchg
pushf
mov
pop
dec
pushf
push
mov
xchg
into
mov
ss
imul
xchg
cmpsl
pop
adc
test
movsb
lock
cmp
inc
in
inc
arpl
loopne
sahf
arpl
jbe
adc
jmp
out
mov
pop
das
xchg
jo
mov
leave
shr
inc
sub
sbb
lock
mov
push
outsb
fisttpll
jecxz
jmp
js
xchg
dec
lahf
in
ja
insb
insb
daa
xor
mov
mov
dec
icebp
add
sbbl
xchg
fwait
mov
add
scas
sbb
bound
sub
jecxz
mov
push
adc
sub
jno
add
add
sti
mov
and
jnp
jg
imul
mov
jl
adc
jo
dec
shll
sub
mov
std
and
and
rclb
je
sbb
and
icebp
cld
xchg
xor
add
fldl
into
inc
nop
loop
cmp
ds
push
ljmp
out
cmpsl
popa
add
das
mov
daa
adc
pop
or
rcrl
mov
xchg
push
push
xlat
mov
mov
adc
cmp
or
loopne
negl
and
add
roll
pop
push
jp
stc
jmp
or
push
mov
ror
jge
adc
xchg
push
dec
pop
and
adc
sqrtps
cwtl
add
jle
mov
jae
mov
ret
rcll
std
adcl
ss
jns
xor
jg
push
mov
or
dec
sub
dec
lahf
cmp
cmpsb
mov
mov
sub
dec
stos
ljmp
push
lret
lcall
adc
aas
sub
dec
in
lods
cs
dec
lods
push
inc
jno
and
and
dec
aam
ret
imul
adc
jns
push
stos
dec
pop
jecxz
or
rol
in
cmp
push
sub
shrb
sub
mov
ret
stc
stc
sbbl
push
shlb
arpl
loope
cltd
in
test
enter
lods
cmp
and
ficomps
mov
push
imul
clc
add
cld
pop
sbb
ss
sbb
xor
or
cmc
lds
enter
inc
mov
stc
mov
cli
repz
cs
dec
outsl
cwtl
lock
lret
inc
cld
fisttps
rcrb
mov
cli
sub
xchg
js
sbb
mov
aam
repnz
mov
cmp
lret
jp
mov
rclb
pop
pop
jmp
sbbl
gs
pop
into
sahf
push
fs
sub
inc
js
fimuls
sub
pop
sbb
jnp
and
mov
shlb
cmp
fidivrs
add
inc
sub
dec
jl
fidivrs
lsl
mov
jp
leave
bound
inc
iret
and
xchg
lcall
subb
or
xor
lods
in
sub
mov
push
jb
out
cmp
cli
insl
popf
mov
jae
aam
pop
sub
inc
mov
add
out
pop
popa
cmc
icebp
push
loopne
xlat
movsb
add
int3
fildl
xor
mov
arpl
xor
push
dec
lret
or
or
insb
cli
jecxz
push
xor
jge
jo
mov
into
adc
mov
cltd
inc
sarl
pop
xor
outsl
in
sbb
mov
mov
fistpl
dec
push
push
pop
out
pop
cli
fwait
test
in
mov
or
fcompl
fwait
out
ret
and
lods
mov
fcoms
ljmp
xchg
scas
pop
jmp
cmc
pop
lock
pusha
push
fnstenv
mov
inc
xchg
cld
xlat
cld
mov
std
mov
jg
jnp
xchg
loope
stos
fs
pop
jno
test
mov
inc
mov
outsb
das
popf
inc
and
add
es
call
sbbb
sti
mov
out
mov
out
mov
ret
pop
xchg
dec
dec
xlat
mov
inc
and
sbb
lcall
dec
jl
sub
inc
mov
movsb
iret
mov
push
lock
fdivs
or
push
push
dec
cmpsb
insb
imul
test
jecxz
mov
ret
std
xchg
mov
sub
test
fbld
dec
xor
repz
push
or
ret
and
pusha
sub
dec
out
sbb
xlat
and
repz
fidivs
jmp
testb
or
lods
int3
inc
lcall
xchg
push
mov
test
mov
scas
or
sbb
push
mov
mov
xor
mov
sub
push
cmpsb
jecxz
sarl
dec
sarl
sbb
xchg
inc
jl
xor
xor
bound
pop
out
sbb
pop
int
insb
ja
cld
sbbl
ret
cmp
pop
fcomps
fcmovb
xchg
and
stos
daa
cwtl
movb
adc
push
mov
or
shrb
mov
popl
out
aas
lcall
jge
mov
arpl
pop
sbb
xlat
cltd
xchg
rcl
push
push
decl
fsubs
add
adc
sub
dec
jmp
call
jne
div
xchg
lret
xchg
or
or
mov
cmp
adc
sbb
xchg
add
jmp
jle
icebp
mov
fcmovb
in
cmp
inc
dec
fisttpl
aad
dec
sahf
popa
pop
jle
dec
stos
lahf
jne
inc
dec
and
lret
xchg
and
jbe
or
es
pusha
push
mov
clc
adcl
aaa
sub
gs
fcompl
sti
and
lods
test
sub
xor
ja
dec
add
xor
lcall
int
sti
mov
xchg
or
adc
in
xor
cltd
fisubrs
pop
xor
and
rorb
and
aam
hlt
mov
inc
sub
bound
sbb
push
iret
movsb
pop
aas
std
dec
lahf
ds
aam
scas
stc
sub
ja
fistpl
ret
or
mov
mov
jno
mov
and
mov
adc
in
mov
inc
and
insb
fidivs
jge
rcrl
xor
cltd
js
fwait
loopne
mov
mov
loop
xor
push
sub
sti
leave
or
mov
inc
xor
bound
outsl
jmp
pop
mov
pop
sbb
and
push
dec
das
jp
jp
shrb
sbb
lods
sbb
enter
fwait
jns
jg
adc
xor
fisttpll
xchg
fsubs
push
adc
adc
outsl
or
rorl
loop
loope
nop
out
and
andb
xor
mov
pop
imul
cmp
mov
aam
adc
mov
xchg
insl
and
xchg
imul
push
data16
xchg
pop
xor
rcrl
and
add
adc
add
push
mov
or
add
push
dec
mov
add
push
pop
sbb
pop
dec
lcall
mov
pop
cmp
xchg
dec
adc
adc
test
pop
add
pop
and
mov
test
xor
xchg
xchg
notb
data16
xor
mov
or
push
std
mov
fwait
sbb
sahf
movsl
fidivrs
in
repnz
fstps
xor
pop
fldl
fwait
dec
mov
stc
pop
or
add
jno
lea
and
and
jle
sbb
inc
shlb
outsl
jns
and
lahf
rolb
push
bound
sub
out
mov
pushf
sbb
shlb
pusha
jg
jnp
jg
cmpsb
js
mov
jmp
std
sarb
push
in
insb
sub
pop
sarb
mov
adc
adc
mul
jo
pextrw
test
or
sub
enter
fwait
mov
xchg
cmp
lahf
push
jle
sarl
and
shlb
adc
inc
mov
push
dec
repnz
xchg
mov
or
jg
stc
mov
sub
icebp
and
or
insb
xor
std
push
inc
push
add
sbb
sti
test
fbstp
pop
daa
adc
and
cs
test
and
into
movsl
aas
test
ficoms
sub
fsubrs
adc
xchg
lock
mov
bound
adc
fs
icebp
mov
sub
icebp
jge
xor
add
lcall
rorl
into
aad
xor
sub
ds
jle
push
xchg
popa
jge
cmp
push
adc
sub
push
mov
mov
sahf
dec
cmp
andb
imul
mov
xchg
lret
add
mov
addr16
sbb
xchg
icebp
cli
sbb
nop
sbb
sub
sahf
testb
ret
lea
icebp
jno
leave
inc
ret
xor
adc
lock
adc
aam
out
rorb
xchg
push
dec
pushf
cwtl
xor
push
push
nop
loop
mov
outsb
into
divb
or
insl
push
cmpsb
lds
mov
sbb
mov
sub
jbe
out
pop
hlt
push
stos
ficompl
int3
push
andb
lds
add
dec
mov
mov
sub
in
pop
mov
inc
add
jb
add
rcl
push
cmpsl
or
cmp
push
outsb
xor
ret
mov
cmpsl
notb
repz
dec
push
xor
or
lahf
arpl
loope
loopne
cs
imul
lock
push
js
lcall
and
jno
ljmp
mov
jne
push
mov
insl
pop
fcomps
fildl
mov
push
sub
xchg
test
in
mov
lea
aad
sti
mov
push
movsb
aam
pop
pusha
and
lock
dec
push
push
hlt
iret
dec
push
xchg
jg
sub
sub
push
pop
clc
add
xchg
roll
dec
hlt
mov
mov
inc
cmpsl
mull
aad
pop
inc
popf
cmp
mov
arpl
cmp
jg
ret
test
ljmp
imul
lea
imul
xchg
cli
pusha
xchg
jge
sahf
mov
gs
jecxz
call
or
push
fisubl
sbb
aaa
popl
jnp
cmpsb
push
pusha
orb
xor
pop
into
repnz
repnz
inc
mov
das
push
xor
cs
or
adc
aad
fimull
add
xlat
fdivrl
test
mov
loope
sub
dec
push
cltd
cmp
stos
push
or
scas
ret
mov
orb
ret
inc
jne
pop
pop
adc
rcll
sub
sbb
out
ficompl
cmp
inc
icebp
call
addr16
test
cld
pop
fisttpll
out
fbld
out
xchg
loope
fisttps
movsl
pop
mov
imul
xor
mov
filds
movb
and
xor
fistps
jnp
out
pop
sbb
cmp
sub
add
scas
mov
loopne
imul
adc
divl
cmpsl
xor
pop
imulb
push
sbbb
xchg
jl
pop
inc
daa
mov
pop
adc
mov
scas
insb
imul
jmp
shlb
subl
jp
ja
out
fwait
addb
aas
stos
addr16
xchg
lcall
add
daa
in
cwtl
sbb
jne
cmpsb
out
ljmp
mov
fnsave
or
scas
and
dec
test
icebp
adc
mov
in
aad
sarl
aad
xlat
enter
dec
mov
jg
inc
mov
mov
pop
data16
stc
out
das
int
pop
mov
pop
add
inc
sbb
dec
sbb
das
cmp
sti
scas
outsl
rolb
scas
dec
mov
rcrb
jbe
push
stc
pop
popa
jmp
les
mov
jg
fidivrl
enter
cwtl
loope
ss
pushf
or
int
mov
sahf
imul
adc
lret
mov
popa
sub
cmpsl
shrl
scas
dec
adc
push
xchg
jp
pop
and
js
js
inc
into
mov
inc
jg
pop
insb
rcr
pop
pop
stc
cmc
add
xlat
inc
and
in
mov
ja
push
fiadds
fistpll
cmpb
mov
mov
pop
jmp
and
nop
lea
fdivr
sub
pop
inc
leave
in
jbe
pushl
jg
jo
mov
pop
xchg
test
xchg
and
mov
push
dec
iret
frstor
mov
jg
dec
jecxz
jo
push
pop
pop
ss
lock
in
fnsave
cld
cmp
je
dec
loop
lcall
or
jge
test
bnd
xor
imul
mov
mov
mov
insl
insl
sub
leave
or
mov
shl
bound
fiadds
mov
cltd
lahf
ja
pop
push
into
dec
mov
imul
cld
stc
neg
pop
jp
in
icebp
dec
sub
mov
call
adc
dec
inc
ret
das
mull
cltd
scas
stos
xchg
cltd
ret
inc
das
push
push
imul
sbb
fs
ret
out
loope
xor
loopne
xor
sbb
ret
and
adc
mov
imul
out
inc
lcall
push
stos
jge
ret
add
mov
and
mov
adc
xchg
lret
mov
testb
push
jno
jl
jle
dec
out
rolb
sub
inc
rcrb
aam
cmp
add
outsb
lret
stos
test
xchg
imulb
cmp
xlat
dec
push
decl
jg
in
pop
or
mov
lods
inc
jl
in
push
hlt
inc
mov
bound
jno
cmc
mov
test
or
shl
jg
dec
cmp
es
adc
bound
add
loopne
mov
dec
adc
jb
movsb
lcall
mov
mov
in
mov
add
int3
fisubrs
lcall
jns
lcall
pop
xchg
outsl
push
mov
mov
cli
data16
sbb
bound
inc
xchg
sbbb
pop
xor
jnp
inc
in
pop
pop
out
and
mov
cs
cmpsl
inc
in
in
or
jae
incb
repnz
pop
jl
popa
mov
pusha
cmpsb
cmc
xchg
shrb
xor
xchg
sbb
scas
push
pusha
add
or
xchg
add
add
fistpll
mov
mov
or
push
mov
lea
and
test
iret
push
xchg
and
ja
pop
cmp
in
ja
repz
xchg
outsb
int
lods
jg
cli
icebp
or
fnstsw
pop
fmul
xchg
push
fidivrl
std
popf
stos
mov
inc
pop
cmpsl
mov
xchg
inc
add
or
ret
call
das
fmull
clc
popa
add
add
pop
pushf
rcrl
jns
cmpsl
jo
push
int3
int
dec
sub
mov
shlb
xor
fwait
inc
pop
sbb
es
ljmp
add
cmp
sub
or
inc
inc
xchg
dec
std
fists
loope
insl
and
out
popa
sub
push
push
in
pop
or
aam
mov
out
int3
das
cmp
rorb
lock
dec
mov
movsb
pop
inc
push
pop
add
scas
add
pusha
popa
sbb
jmp
in
iret
lods
imul
repnz
push
add
mov
testl
xor
ljmp
push
mov
sub
fidivl
popa
rcrl
sbb
mov
scas
icebp
mov
ret
cmp
int3
adc
xchg
push
pop
sbb
and
jge
xchg
int3
dec
jns
and
outsb
adc
mov
in
xchg
das
adc
mov
call
outsb
inc
cs
jnp
sub
or
cmp
aas
out
sub
mov
shll
or
mov
or
out
xchg
or
stc
bound
flds
arpl
scas
jl
shlb
repnz
inc
mov
or
jo
push
mov
and
push
jmp
ds
pop
dec
jb
or
in
in
pushf
scas
xchg
and
gs
leave
sbb
sub
jbe
adc
aaa
xor
sbb
jmp
adc
leave
addr16
daa
std
subl
jne
add
and
xor
js
insb
dec
mov
sti
loop
int3
mov
sbb
cmc
cmp
mov
mov
xchg
xchg
jae
and
stc
push
lea
or
mov
or
mov
in
cmp
xchg
rcrl
orl
jnp
sub
lret
sub
push
pop
jne
sbb
jb
sub
scas
fwait
xchg
in
dec
adcb
iret
rol
out
into
inc
std
sub
movsb
insb
repnz
inc
adc
pop
lahf
mov
les
jns
xchg
jmp
cmp
orl
out
xor
ret
jmp
push
xor
ret
outsb
jl
pop
adc
pop
xor
push
stos
lret
xchg
jge
dec
cmpsb
or
mov
hlt
mov
mov
pop
loope
mov
mov
jg
test
test
cwtl
add
jecxz
push
sti
cmc
mov
or
jne
into
or
pop
or
jns
inc
jle
push
andb
push
ret
sbb
sbb
adc
push
sbb
fld
arpl
sub
xor
cli
cmc
mov
mov
push
mov
lock
sub
mov
repnz
arpl
rcrl
cmpsb
jae
push
sahf
fdiv
push
loopne
aad
cltd
scas
arpl
pop
inc
out
inc
fwait
aad
std
sbb
and
cld
cmc
insl
ficompl
and
repnz
int
jp
outsb
push
inc
rorl
adc
dec
push
lea
sbb
aas
dec
adc
stos
sub
testl
and
orps
jmp
aam
sub
push
dec
xchg
pop
jecxz
xor
and
adc
or
mov
push
test
and
cmc
or
je
in
divb
add
in
shll
or
out
pop
sbbl
push
cs
int
mov
mov
call
icebp
scas
xor
lahf
ja
scas
jnp
mov
and
ja
fadds
dec
lods
movsb
xchg
popa
orl
pushf
add
inc
push
cmpsl
jo
cmp
sub
insl
mov
pop
push
fs
sub
dec
ficompl
ja
dec
mov
negb
cmpsb
push
adc
sub
std
add
sub
push
fldl
or
ror
ja
lret
sbb
cs
mov
jo
lahf
popa
xchg
pop
cs
xchg
pop
pop
xor
sbbb
sub
das
sub
push
mov
pop
outsl
jnp
push
inc
inc
pop
jg
bound
loope
and
dec
std
xor
xchg
hlt
mov
jg
xchg
push
addl
inc
and
popf
jmp
int
or
inc
fisttpl
popa
aam
adc
stos
mov
out
imull
jge
bnd
imul
mov
fstpl
pop
hlt
icebp
sbb
std
fcomip
jl
push
sub
iret
dec
movsl
jl
xchg
sti
inc
cltd
lret
outsb
push
fisttpll
dec
sbb
xor
push
sbb
mov
inc
mov
dec
sub
cmpsb
jae
test
cmc
sti
bound
leave
or
jnp
inc
or
xchg
or
lea
dec
outsb
or
xchg
test
add
xor
and
pop
mov
add
in
pop
insl
mov
xorl
imul
daa
xor
mov
enter
cmp
pop
int
inc
add
inc
xchg
shlb
fsubs
outsb
scas
iret
push
or
mov
mov
test
lock
out
iret
add
cmc
mov
fstps
and
pop
pop
daa
out
sti
imul
jge
sbb
adc
sub
xchg
dec
testb
cmpsl
loopne
jge
mov
divb
inc
inc
test
pop
das
imul
popf
sub
jae
scas
sbb
test
jl
std
xchg
push
jecxz
mov
out
mov
xor
cmpsl
test
xor
lods
shlb
cmc
imul
mov
pop
shrb
repnz
mov
andb
push
mov
xor
dec
push
jns
outsb
fildll
pop
cmovbe
pop
xchg
cmp
call
mov
xor
mov
or
sbbl
arpl
outsl
mov
pop
sbb
mov
insl
jg
push
push
dec
mov
out
movsl
in
xchg
mov
cmp
fbld
xchg
mov
lea
aaa
dec
dec
or
sbb
or
cltd
leave
fsubrp
lds
ficompl
pop
xor
mov
push
lds
add
js
sbbl
mov
or
hlt
ds
iret
adc
add
pushf
scas
add
data16
push
xor
mov
scas
pop
and
cmp
or
xchg
les
loopne
add
test
fcoml
ss
sub
pop
xchg
xchg
mov
adc
jae
mov
adc
inc
sub
sbb
mov
mov
enter
jbe
ja
add
adc
sub
push
fiadds
pop
dec
imul
inc
test
push
jge
dec
dec
and
sbb
sub
in
jb
push
out
cmp
jmp
fildl
into
dec
dec
jmp
xchg
cmp
sbb
rorl
push
rcll
ret
inc
xchg
mov
push
sub
dec
ret
push
and
clc
out
dec
mov
jae
cmpsb
sbb
insl
stc
sub
mov
in
add
into
outsl
inc
je
lret
out
mov
imul
dec
dec
dec
mov
or
bound
aad
and
in
and
fldcw
jbe
sbb
hlt
divb
test
movsb
push
ficoml
xchg
mov
fldl
insl
mov
je
out
sbb
mov
dec
fistl
iret
das
cmp
lds
push
inc
dec
mov
js
push
mov
adc
inc
mov
icebp
imul
out
cli
mov
adc
adc
icebp
or
mov
push
push
inc
call
es
dec
sar
push
leave
dec
sub
jp
movsl
std
stos
mov
fdiv
int
sbb
lret
mulb
rolb
xchg
xchg
hlt
sub
add
cmpb
aam
pop
mov
dec
test
inc
cmp
pop
daa
or
dec
and
ret
mov
roll
push
int
pushf
inc
data16
hlt
call
fisttpll
in
xor
aaa
mov
xchg
call
std
sti
dec
add
mov
icebp
sub
pop
fisubl
xor
push
push
pop
repnz
in
in
dec
xor
xlat
cmp
and
je
hlt
dec
fiaddl
adcb
test
add
dec
or
bnd
outsl
sub
negl
rolb
in
jmp
fwait
push
loop
addr16
jo
mov
popf
adc
cltd
aas
test
scas
cwtl
xchg
jp
sub
jne
sub
call
jl
and
shrb
mov
jb
jns
mov
cmpsl
jmp
mov
dec
lret
sub
fs
cli
lcall
ret
std
icebp
sub
icebp
or
imul
inc
insb
and
loope
jae
jnp
add
mov
pop
mov
js
into
fnstsw
dec
jo
and
jne
xor
shlb
xchg
mov
mov
insl
in
cwtl
sbb
ljmp
pop
pop
adc
ja
js
jae
cli
cmp
push
inc
jecxz
mov
xchg
adc
cs
xchg
xor
cmpsb
mov
jo
jp
fstl
mov
xchg
ja
popa
add
and
lods
lea
lahf
mov
jo
xor
or
cmp
jle
dec
addl
inc
cmpsb
add
insl
push
xchg
bound
push
shlb
jnp,pt
mov
mov
push
push
and
pop
jno
inc
fistps
test
ret
push
aam
pop
pop
out
out
les
xor
je
inc
push
inc
outsb
cmp
xchg
push
jmp
sbb
xchg
xchg
out
dec
mov
mov
fstpl
ss
cli
jne
adc
pop
fsubr
lcall
push
xchg
jmp
bound
out
subb
repnz
scas
sarb
dec
pop
clc
sbb
stc
icebp
cwtl
mov
hlt
loope
addr16
jae
mov
jl
and
addb
leave
cmp
enter
xchg
or
cmpsl
jns
cmp
or
leave
ljmp
jno
clc
xor
jnp
mov
pusha
stc
rcll
into
roll
push
rolb
add
adcl
ja
outsb
test
imul
and
int3
sbb
test
movd
shrl
js
icebp
lods
mov
test
sbb
add
mov
push
orl
cmp
jp
in
cmp
sbb
rclb
imul
xchg
movsb
push
ss
cmp
cld
iret
jl
push
dec
lods
lea
in
ljmp
push
dec
ljmp
repnz
leave
pop
in
ret
sahf
movsl
ret
lock
and
lods
pop
ret
movaps
mov
cltd
mov
rclb
mov
cmp
jecxz
fistl
or
xor
push
xor
and
in
jle
mov
push
jmp
repnz
fisubrs
push
clc
leave
popf
mov
dec
mov
and
shlb
andb
jae
idivb
cmp
sar
inc
inc
and
hlt
jp
pop
aad
cwtl
pop
xor
xor
aaa
scas
pop
arpl
lret
ret
inc
dec
cmp
mov
push
repz
mov
andb
mov
inc
xchg
andb
inc
ret
fcoml
xor
lret
push
jg
fwait
sti
cmp
in
iret
mov
das
jno
adc
mov
pushf
inc
into
daa
stos
daa
push
mov
lods
xor
popf
pop
xchg
inc
ret
xor
xchg
cmp
inc
or
cmc
fs
and
push
pop
shr
pop
call
pop
pop
and
sub
xchg
loop
add
inc
dec
aad
hlt
or
mov
push
test
inc
int
in
aad
out
repnz
inc
mov
xchg
aas
jb
jge
insb
fucomp
xchg
cmc
lcall
mov
aad
daa
sub
push
cmpsb
test
xchg
push
scas
mov
in
rcrb
sbb
negb
cmpsb
movsb
and
xor
add
insb
or
mov
add
xchg
cwtl
and
ret
in
test
fbstp
jl
pop
imul
lret
shll
mov
movsb
lcall
push
mov
imul
mov
xor
test
lahf
je
sarb
sbb
cmp
push
loope
roll
pop
pop
and
in
push
lret
int3
push
mov
repnz
out
sbb
cmp
lret
push
in
mov
lret
sub
hlt
sub
dec
mov
xor
xchg
push
std
adc
mulb
test
cmp
xorl
adc
cmp
imul
adc
dec
cmpsl
pusha
outsb
lret
mov
inc
jns
jnp
adc
mov
outsl
sub
mov
movsb
push
add
shll
fdivl
stos
jecxz
call
pop
out
mov
cltd
ret
cld
mov
xchg
inc
aad
sbb
mov
or
sysenter
inc
mov
push
sbb
mov
mov
addr16
cmpb
popa
pop
ret
aam
insl
sbb
push
and
push
enter
das
outsl
jl
adc
iret
push
das
in
jg
dec
iret
imul
ja
or
fistpl
cmp
xlat
idivl
push
out
dec
mov
dec
lods
dec
idiv
push
into
scas
xchg
insb
std
and
or
fdivrl
lods
cld
aas
mov
dec
pop
push
ds
out
insl
gs
add
inc
dec
mov
pop
mov
call
dec
outsl
popl
mov
cmp
into
imul
ret
fwait
push
out
pop
inc
fildll
lahf
lcall
nop
add
inc
jno
push
inc
pop
jbe
sti
push
fldenv
jl
dec
xor
sbb
aam
cli
das
mov
or
mov
lcall
test
pop
inc
lods
sti
pop
cmp
xchg
xlat
pop
and
lods
jg
outsl
sbb
outsb
lds
mov
nop
mov
flds
cmp
out
into
mov
iret
xchg
and
push
daa
add
and
or
les
adc
jno
xchg
add
repz
andl
jge
or
hlt
mov
loope
or
popf
jg
jmp
dec
in
fisttpl
pop
or
int
insb
push
jg
loopne
outsl
das
xchg
pop
gs
jecxz
mov
jmp
mov
cmp
jo
scas
cmp
movsl
aam
ror
mov
jg
mov
gs
arpl
pop
mov
cmp
fiaddl
and
mov
lods
mov
pop
loop
push
stos
push
and
push
js
data16
ficompl
xor
push
jmp
pop
cmp
test
pushf
lahf
or
leave
jae
fsubrl
push
dec
add
jle
jb
outsb
or
xchg
movsl
shr
dec
cmp
add
inc
adc
je
push
cmpsl
sahf
mov
add
sub
imulb
rcll
scas
pusha
mov
dec
cmp
push
push
sbb
push
dec
and
arpl
cmp
mov
jbe
pop
lods
daa
scas
sub
outsb
bswap
and
mov
aad
fcmovnb
add
xor
aad
adc
stos
and
test
shl
and
enter
sub
cli
jg
mov
sahf
or
jp
cwtl
mov
mov
cmp
dec
xchg
mov
stc
or
ja
and
jle
fsubr
dec
nop
rcrl
mov
xor
push
movsb
or
and
cmp
sub
dec
cmp
jae
mov
jns
jno
sbb
testb
mov
pop
popf
jbe
pop
daa
push
pop
stos
inc
in
pushf
sbb
int3
cmp
jno
out
std
sbb
iret
iret
in
imul
sbb
imul
out
xchg
cwtl
lods
push
xor
push
pop
dec
xlat
lds
jle
xor
sbb
mov
repz
scas
jns
gs
mov
sbb
add
and
arpl
or
sarl
xor
mov
fcmovne
mov
adc
mov
cwtl
loopne
int
pop
and
xchg
mov
push
in
dec
inc
jg
outsb
into
fnstcw
cld
add
call
bnd
or
scas
imul
add
outsb
arpl
scas
cld
div
xlat
outsb
jecxz
pop
out
jecxz
cli
xor
adc
daa
mov
bound
xor
imul
loope
jge
mov
jns
push
sarl
ret
fcmovb
lods
scas
mov
lea
fs
inc
inc
dec
add
add
orb
sub
fldl
movsl
pop
gs
jo
aad
cwtl
imul
ljmp
cmp
icebp
sub
mov
loop
mov
pop
inc
mov
loop
push
pop
xor
dec
add
cmp
sti
dec
repnz
sbbl
add
xchg
mov
cltd
inc
and
es
jb
test
xorl
jo
xchg
lret
cmp
sbbb
xor
arpl
mov
mov
pop
sahf
push
pop
das
sbb
lea
dec
cmp
jg
push
in
xchg
inc
test
lret
out
frstor
stos
cmp
mov
jne
mov
vmwrite
cmc
ds
adc
movsl
mov
push
xor
and
sub
mov
insl
int3
subl
and
sbb
push
jno
mov
nop
dec
xor
data16
inc
mull
rcrl
dec
fadd
pusha
sbb
pop
cli
pop
std
int
dec
cmp
mov
loope
out
cmp
in
jae
loopne
test
leave
or
cld
inc
xchg
xor
mov
leave
adc
fwait
sub
dec
push
insb
cmp
pop
jle
adc
push
cmp
negb
sbb
lahf
call
in
pop
jle
add
pop
mov
in
xor
aad
mov
ja
mov
dec
je
mov
cmp
out
pop
xchg
test
inc
fbld
xor
and
pop
inc
aad
mov
stc
add
inc
lds
add
js
and
shlb
lods
push
xchg
lods
mov
insl
fisubs
adc
dec
daa
mov
push
cmp
sub
xchg
pop
sub
inc
jae
mov
xchg
push
dec
sub
mov
dec
mov
push
or
mov
and
bound
jp
pop
std
pushf
push
in
lret
insl
cs
ret
add
inc
xlat
pop
lods
les
or
push
rcll
pop
and
bound
jecxz
mov
gs
adc
xchg
mov
mov
cmp
inc
push
pop
out
mov
adc
push
and
movsl
cs
jp
inc
ja
fstpt
jb
icebp
rclb
xchg
subl
jnp
insl
test
aaa
xchg
or
sub
sbb
aaa
mov
sbb
nop
mov
cmp
into
sbb
ficomps
jl
and
xor
loop
pop
xor
fnsave
xor
mov
hlt
jae
adc
mov
out
sbb
mov
call
movd
incl
nop
or
into
cmp
loope
xchg
jle
out
add
shll
rcrl
adc
push
test
out
mov
cwtl
jns
call
xor
mov
push
pushf
jne
out
scas
jmp
xorl
mov
cmp
or
xchg
arpl
lods
lea
pop
fstl
ficoml
pop
mov
mov
mov
ds
mov
stos
add
adc
dec
jmp
icebp
fistpll
mov
arpl
mov
mov
lods
inc
pop
xor
dec
or
cmp
andl
scas
scas
pushf
mov
cli
iret
inc
rcr
jl
adc
xlat
js
pop
jnp
ja
fwait
and
lea
push
test
lds
push
out
or
dec
pushf
lods
subb
int3
call
mov
ss
dec
xchg
iret
cmp
pushf
mov
push
lahf
loope
in
enter
mov
popf
stc
and
ret
test
stos
out
ja
sub
jmp
jae
orl
jns
hlt
or
adc
lds
mov
push
jecxz
enter
cmp
das
mov
fadds
mov
xchg
adc
or
int
jecxz
cmpsl
jo
jmp
subl
pop
push
mov
add
jno
insb
in
push
pop
pop
pop
pop
pop
cmc
das
shl
stos
xchg
popa
pop
and
sbb
imul
xchg
aaa
or
or
cmp
sahf
insb
adc
jbe
dec
repnz
and
dec
or
arpl
mov
mov
les
pop
loope
push
push
out
fcomps
jmp
aas
push
dec
mov
sub
std
xor
sbb
nop
push
or
xchg
in
mov
into
je
xor
loope
add
jmp
filds
xor
mov
and
jnp
call
push
push
inc
icebp
add
xchg
sti
xor
mov
in
test
add
mov
cmp
lock
pop
push
pop
and
and
call
fsts
mov
mov
sub
loope
add
xchg
insl
push
and
xchg
iret
pusha
ficoms
call
add
cmp
pop
jge
jge
pop
xchg
pop
xchg
leave
int3
aam
mov
ret
cs
cli
adc
stos
adc
push
mov
in
mov
dec
lds
cmpsl
cmpb
setbe
dec
cmpsl
mov
sahf
in
mov
aaa
mov
ss
gs
stos
push
scas
jne
insl
subl
jle
adc
inc
xor
shlb
fucomp
cmpsl
dec
je
stos
clc
imull
lret
std
adc
mov
push
mov
stos
sahf
lods
ret
adc
xchg
add
add
fisttpll
and
xchg
jp
add
pop
fcoml
mov
push
lret
push
ljmp
push
lea
sbb
jb
sbb
pop
cmp
push
cmc
ficompl
into
mov
lods
into
test
out
xchg
sub
rcrb
push
cmp
sbb
xor
jnp
push
idivl
ss
pop
jge
xchg
mov
test
adc
test
cltd
xchg
jne
int
nop
xorb
pop
in
jg
inc
push
push
aad
popa
ret
je
xchg
cmc
insl
push
inc
call
push
data16
or
adc
dec
push
arpl
scas
hlt
scas
push
and
xchg
sub
mov
mov
jnp
leave
movsl
mov
test
xchg
cmp
mov
add
stc
sub
push
mov
leave
shlb
leave
je
mov
mov
and
lds
rcl
je
sti
rcl
push
data16
stc
xchg
jbe
adc
fisubs
fistpl
fwait
jae
subb
sbbl
inc
test
dec
xlat
nop
popa
cld
in
fbstp
clc
dec
or
flds
sbb
nop
lock
or
ret
in
add
clc
adc
xchg
xor
dec
dec
cmpsb
mov
sub
lahf
jne
cli
leave
inc
sbb
dec
int
inc
pop
stos
aas
mov
push
ja
bound
pusha
sbb
or
or
fnsetpm(287
mov
lcall
loopne
pop
jmp
scas
ja
dec
std
sarl
cmp
add
sahf
movsb
lret
das
and
in
lea
lea
mov
pop
lods
aam
stc
out
mov
loopne
mov
and
mov
jbe
sub
pop
xchg
inc
and
jg
pushf
mov
je
push
in
pop
clc
test
pushf
pop
xor
and
cmp
adc
add
loope
jg
jb
das
rcll
and
xlat
cld
repz
adc
loop
dec
loop
or
stos
mov
mov
sub
loop
out
adc
sbb
mov
fimull
sbb
push
data16
je
jg
xchg
push
sbb
sbb
and
mov
popf
push
nop
rorb
lds
jl
add
mov
negl
xor
mov
fucomip
mov
xor
enter
mov
jns
adc
aas
jp
xor
ja
xor
lods
or
les
xchg
pop
xchg
enter
inc
fs
stos
or
nop
out
lret
sub
cmpsl
icebp
mov
mov
mov
mov
dec
sbb
mov
mov
dec
ja
pop
sbb
push
sub
lahf
loope
push
frstor
pop
in
arpl
pop
xchg
fildll
and
add
add
cmp
sbb
rolb
or
mov
xor
inc
insb
pusha
ficoml
sbb
xor
ret
imul
imul
shr
xchg
add
iret
dec
das
loopne
jecxz
cmp
cli
mov
add
jecxz
subb
lahf
sbb
daa
fsqrt
mov
push
jp
pop
mov
out
xchg
outsl
sbb
and
mov
cmp
cli
jne
out
add
push
hlt
push
jge
sub
jb
orb
xor
dec
mov
bound
clc
dec
mov
inc
xor
inc
inc
pusha
pop
inc
pop
inc
dec
inc
inc
test
in
fbld
mov
imul
mov
outsl
adc
fstpt
jp
std
cmc
sbbl
into
xor
fists
add
xchg
fstpt
adc
in
mov
or
add
imulb
push
xchg
sbb
push
insb
mov
arpl
sub
jge
ljmp
outsl
pop
dec
iret
xor
cli
xor
bound
push
aaa
sub
inc
mov
cmpsb
lea
sbb
inc
push
shlb
out
sbb
int3
cmpsl
inc
into
sbb
lods
arpl
push
dec
xchg
cmp
insl
xor
jns
mov
cmp
mov
das
mov
mov
sub
sub
xchg
cmp
mov
data16
push
inc
ljmp
jle
mov
sub
pop
inc
cltd
inc
mov
adc
add
stc
cmc
lods
int3
stc
xchg
mov
shlb
popa
add
ret
inc
jmp
xor
add
sbb
repnz
sahf
jae
cmp
outsl
cmp
mov
pop
les
hlt
push
ficomps
fstp
dec
add
aad
scas
push
rorl
lret
push
or
test
and
das
or
shr
test
test
subb
cld
push
inc
and
imul
out
add
jge
daa
mov
popf
js
lret
dec
cld
rorb
pusha
and
shl
lret
pop
movsb
mov
test
test
pop
lds
fs
dec
lds
jge
xor
pushf
pop
testb
sub
xchg
dec
jbe
enter
xchg
push
or
lds
inc
ret
scas
inc
mov
sub
cld
test
test
ljmp
in
cmc
popa
enter
jmp
sarb
mov
or
shrl
cmp
sub
hlt
das
mov
out
fs
lret
jecxz
jb
or
jecxz
push
popfw
daa
mov
mov
dec
inc
push
jo
inc
lret
inc
mov
mov
clc
test
ja
icebp
loopne
movsb
sbb
dec
push
pop
jle
cmpsl
js
movsl
xor
pop
cmpsl
or
mov
fcoms
jns
and
jmp
push
int
pushf
fidivrs
adc
xchg
mov
sahf
xor
pop
sub
nop
or
jecxz
stc
mov
push
pop
push
popf
mov
hlt
mov
mov
jl
roll
adc
movsl
xor
int3
shll
pop
sub
nop
xchg
lahf
call
fcmovbe
inc
int3
pop
ljmp
mov
lcall
decl
andl
in
movsl
mov
nop
cli
inc
adc
subb
fwait
mov
and
pop
emms
cltd
pop
lods
mov
mov
inc
xchg
push
mov
jle
mov
cs
push
loope
fdivrs
enter
inc
sahf
push
jp
sub
lods
fxam
jns
xchg
or
lahf
add
pop
mov
lahf
push
cltd
ss
popa
cltd
lcall
adc
in
and
inc
aas
fbstp
ret
push
mov
mov
push
or
das
mov
add
mov
and
pop
push
xor
shll
lahf
pop
cltd
push
push
mov
cltd
jecxz
pop
cltd
flds
call
mov
leave
fdivs
jbe
mov
xlat
clc
ret
push
add
out
subb
adc
adcl
sbb
les
insb
and
addr16
aas
push
imul
sub
push
mov
pop
xchg
jmp
mov
and
mov
mov
pusha
pop
lret
cmp
cmp
cmp
fs
cmp
fcmovne
cld
into
adc
lret
pop
sar
scas
push
rcrb
outsl
jbe
pop
xchg
rorb
lahf
insl
xchg
enter
pushf
shll
fs
popa
mov
sub
jno
jp
or
loop
shrb
add
inc
js
into
jg
ljmp
enter
stc
adc
loop
gs
pushf
mov
push
xchg
fdivl
cli
addr16
stos
in
out
cmp
daa
cmpl
adc
in
popa
inc
aas
pusha
test
jno
fdiv
adcl
repnz
inc
stos
or
stc
xor
cmc
push
and
dec
push
or
dec
or
loopne
pop
mov
dec
xlat
and
sub
jns
mov
in
mov
xchg
inc
cli
push
in
ljmp
push
rorb
dec
and
stos
fistpl
subl
cmpsl
cmp
sub
push
add
add
mov
add
cwtl
clc
push
push
xchg
testb
popa
ficomps
mov
and
inc
je
jle
sub
lahf
mov
in
inc
add
sti
jg
push
push
push
insl
cmc
mov
in
ret
ljmp
inc
or
ret
testl
dec
mov
push
jo
hlt
cmp
into
out
insb
push
fs
mov
aas
mov
sub
in
sub
aas
xchg
adc
push
xchg
cmc
les
shl
add
fmull
ja
fs
popa
fidivl
sub
fmull
notb
sub
dec
std
stos
pop
mov
or
iret
xchg
imul
mov
dec
dec
cli
sub
idivl
sti
mov
pusha
popa
daa
xor
xor
push
cli
daa
mov
mov
pushf
loop
dec
lcall
mov
inc
adc
call
scas
sbb
jmp
inc
add
push
rorl
mov
mov
scas
jae
outsl
je
test
xchg
adc
pop
add
fisubrs
repnz
jmp
inc
mov
pop
faddl
add
movsb
add
test
mov
pop
fs
int
mov
sarl
sub
xor
jne
out
push
mov
out
push
and
inc
fs
mov
movsb
loope
dec
into
loop
mov
jl
cmp
jbe
aaa
pop
imull
mov
std
pop
mov
leave
inc
pop
inc
pushf
sti
loope
outsb
jnp
mov
dec
push
scas
inc
adc
aas
rorb
lods
sahf
and
jae
lea
inc
mov
and
or
jae
sbbb
pop
xchg
mov
or
xor
xchg
pop
xor
lds
loop
sub
ret
daa
aas
ret
enter
and
pop
xchg
jno
mov
push
adc
mov
out
outsl
jp
rcl
cmp
jge
push
jp
sbb
loop
and
jecxz
insb
lahf
test
mov
jns
ret
fs
xchg
dec
mov
fimull
cltd
inc
mov
dec
pop
push
xchg
imul
pushf
sbb
inc
inc
lcall
dec
mov
inc
inc
mov
mov
insl
imul
lahf
js
inc
in
add
aas
pop
or
xchg
sbb
and
ret
cwtl
jbe
movsb
pop
outsl
inc
jg
out
xor
rolb
lock
sub
faddl
inc
leave
stos
out
loop
dec
mov
movsl
dec
adc
xchg
enter
es
add
xchg
cli
rorl
jns
gs
cmpsb
aaa
dec
and
lds
test
add
mov
mov
sub
in
pop
mov
jo
notb
push
xor
sbb
rorl
adc
mov
dec
lahf
pop
inc
outsl
lahf
push
lods
bound
cltd
jae
call
push
scas
mov
inc
out
popl
jne
cltd
sbbl
std
mov
cli
add
ljmp
push
das
cmp
nop
cld
out
xor
pop
mov
mov
into
and
outsl
push
xor
mov
test
push
vunpcklpd
push
iret
shll
cmp
lods
and
inc
stos
stc
aas
fdivrl
xor
ds
fxch
test
enter
jmp
ffreep
jg
push
pushf
mov
dec
and
pop
mov
movsb
int3
fs
sbb
test
cmc
imul
js
jbe
bnd
push
cltd
jmp
add
sbb
mov
rclb
lock
in
jle
xchg
add
std
movl
dec
lret
loop
mov
xor
jbe
ds
jno
cwtl
loope
mov
fiadds
lahf
xchg
push
cwtl
sub
jge
lds
pop
inc
callw
dec
test
out
inc
mov
fidivrs
ljmp
push
cmp
mov
or
mov
aaa
rclb
cmp
sbb
jb
sbb
in
fadd
sbb
xchg
fdivr
sbb
cmp
cmp
cmp
xor
adc
xchg
push
out
aam
rol
call
aaa
fstl
stos
mov
adc
inc
std
lret
int3
jae
adc
gs
repnz
mov
add
call
push
xor
popf
sbb
and
ss
inc
test
xor
fsubl
repnz
lcall
add
cmp
dec
rcrl
ljmp
idivl
test
mov
aaa
out
repnz
cmpsl
fstps
loop
push
aam
sbb
test
mov
cs
push
jne
cld
fisubs
push
repz
adc
mov
jo
sbb
ljmp
xor
popf
inc
mov
and
lods
cmp
sbb
and
fidivs
enter
ljmp
push
mov
or
stos
les
stc
pop
lcall
push
add
aaa
or
pop
ror
mov
or
xchg
push
cmc
inc
cmp
push
xlat
dec
scas
icebp
fwait
out
inc
scas
push
sbb
sub
cmp
icebp
in
sbb
mov
mov
imul
cwtl
test
mov
andb
orl
jl
push
dec
imul
dec
adc
ss
sub
push
out
mov
add
dec
pop
jle
mov
xchg
ret
aad
rcll
daa
mov
roll
in
mov
mov
roll
dec
mov
push
in
rorl
pop
mov
stos
inc
jnp
xor
outsb
adc
stos
loopne
mov
push
sbb
fistpl
inc
dec
lcall
dec
test
mov
dec
pop
lock
lea
cmpsl
std
push
dec
push
call
repnz
push
movl
jg
lea
mov
xorl
sti
ss
test
out
fiaddl
jg
sbb
cld
cmc
inc
inc
push
sbb
or
cmp
jnp
lock
add
pop
test
insb
dec
mov
mov
fidivs
rorb
insl
pusha
mov
dec
jbe
sub
shrl
imul
pop
mov
push
pop
inc
inc
loop
sbb
rclb
push
mov
cli
cmp
lcall
sub
jp
push
fincstp
jecxz
mov
lods
mov
jbe
ljmp
pusha
orl
bound
pop
adc
dec
push
jo
std
leave
mov
pusha
pop
popw
in
push
push
mov
inc
daa
sbb
mov
xchg
mov
flds
leave
movl
mov
xor
insl
vpaddusb
dec
dec
sbb
mull
into
jnp
loopne
adc
enter
or
add
pop
stc
loopne
mov
cltd
mov
fs
cltd
and
add
inc
je
mov
fstpt
pop
and
or
ds
dec
xchg
xchg
jbe
iret
xchg
xchg
lods
sti
repnz
arpl
idiv
jns
xor
std
push
mov
dec
pushl
push
push
test
pop
mov
pusha
sub
insb
lahf
clc
push
or
inc
repz
adc
xchg
fs
push
movsb
in
fstpl
dec
or
popa
cmp
mov
sub
mov
insl
dec
xchg
insl
ja
dec
inc
or
cmc
push
insb
in
xor
push
test
lods
test
out
lret
inc
cmpsb
jge
sbb
dec
xchg
cmpsb
jbe
icebp
sahf
rcl
cmpsb
cmp
test
xchg
out
cli
decb
xchg
inc
mov
pop
xchg
loop
stc
cmpb
addr16
lret
orb
inc
cld
repz
or
inc
test
aam
imul
mov
mov
add
adc
shlb
rorl
loop
movl
xchg
sarl
nop
inc
mov
jne
pop
push
push
mov
mov
jo
pop
ljmp
cmp
cmpb
push
aaa
xchg
in
inc
test
inc
fbstp
ret
hlt
or
cmp
pop
xorl
xor
cli
leave
std
cmpsl
lds
cli
aaa
movsb
dec
mov
movsb
into
leave
lretw
fsubl
mov
shrb
enter
mov
sbb
pop
or
lock
int3
push
jge
jmp
xor
dec
push
fiaddl
sub
les
ljmp
xchg
ljmp
xor
xlat
and
imul
je
sub
ret
inc
inc
movsb
data16
cmc
cltd
dec
mov
or
push
pop
ja
mov
ret
js
data16
int3
and
mov
out
out
and
and
sti
cwtl
dec
xchg
imul
push
pop
addr16
daa
idivb
xchg
mov
inc
mov
iret
pop
mov
andl
push
xchg
popf
inc
jno
and
outsl
fcomp
cli
sarb
jb
fisttpll
in
dec
jne
and
push
xchg
outsl
mov
dec
push
xor
ret
mov
pop
pop
xchg
xchg
fwait
pop
test
mov
xchg
sahf
and
mov
push
je
sub
cmp
jle
sbb
cmpsl
add
xchg
xchg
daa
mov
cmp
stc
jecxz
mov
mov
adc
test
or
inc
repnz
imul
rclb
dec
sub
sbb
cwtl
arpl
test
inc
ja
mov
add
adc
pop
xchg
dec
jo
jno
sbb
cli
sub
rolb
sub
imul
lods
cwtl
mov
fsubr
test
cmpl
stos
sub
push
jb
sub
cli
push
fldln2
jo
sbb
ss
mov
inc
lahf
xchg
dec
sub
insl
inc
mov
jb
inc
in
jno
pusha
and
jnp
inc
xchg
sub
mov
js
lods
aaa
mov
mov
out
jl
jecxz
cmpsl
stos
insl
cmp
sub
sub
out
imul
sub
push
push
stos
rcrl
das
jb
sahf
stos
decl
sbb
adc
xchg
lods
gs
mov
pop
nopl
cmp
test
sbb
xchg
imul
stos
cmp
push
test
inc
cwtl
jmp
test
xlat
sahf
add
push
pop
nop
push
xorl
mov
push
or
mov
inc
sbbl
ja
xchg
lock
scas
cmpsl
cld
pop
inc
pop
int
or
imul
js
xchg
jl
addr16
into
pop
and
xchg
fildll
mov
test
loope
fcmovnb
addr16
iret
pop
mov
pop
ss
xor
jns
inc
or
push
movsb
aad
jns
aas
ja
movsb
ljmp
and
outsb
outsl
iret
stos
pop
dec
sub
pop
jl
fcmovnu
fmul
mov
xchg
mov
insl
adc
lcall
jns
push
loopne
bound
rcrl
das
add
dec
xchg
mov
pushf
mov
mov
aad
adcl
nop
outsl
mov
inc
out
and
fldenv
lahf
push
int3
aaa
xlat
subb
or
cmpsb
xlat
mov
fcmovnu
dec
outsb
clc
shlb
icebp
mov
sub
loope
imul
inc
pop
cmp
std
lret
adc
mov
adc
ja
popf
loop
icebp
loopne
add
jo
fwait
icebp
popf
outsb
sahf
lahf
fcomip
cmpsl
ror
imul
jns
cmc
cld
sbb
pop
lods
aas
in
pop
fwait
dec
popf
add
pushf
sti
sti
mov
pop
arpl
jecxz
mov
out
dec
pop
mov
pop
mov
mov
dec
shll
enter
push
push
lock
mov
pop
cld
aas
mov
pop
scas
mov
xchg
jmp
fldcw
dec
out
push
mov
js
fnsave
pop
cmp
in
or
xchg
and
daa
lea
xor
fsubrs
cmp
cwtl
rcll
jge
mov
inc
leave
sub
cmp
in
cwtl
mov
mov
lahf
adc
xchg
sub
imul
roll
xor
xchg
jge
pop
mov
pop
mov
pop
dec
jge
and
cmp
mov
pop
popf
popf
das
sti
out
pop
rcrb
adc
fistl
bound
fs
mov
push
inc
dec
test
adc
xchg
fld
cmp
mov
cltd
arpl
inc
jno
imul
mov
lret
xor
or
adc
mov
cmp
mov
movsb
daa
gs
inc
inc
scas
push
stos
xchg
jmp
ljmp
imul
mov
outsb
pop
sub
sub
xor
mov
imul
push
xchg
dec
sub
xor
jbe
or
xchg
inc
je
negb
hlt
inc
mov
mov
jmp
imul
andb
test
pop
leave
mov
inc
jecxz
pusha
cmp
in
rcl
and
dec
xor
aaa
mov
mov
push
xlat
jle
push
outsb
jp
push
pushf
xchg
push
insl
shll
add
dec
or
addr16
cmp
je,pt
daa
mov
dec
and
je
cmp
jp
call
jp
push
add
rclb
mov
into
pop
sbb
outsl
xchg
push
ret
dec
jno
jnp
xor
jnp
shlb
jns
sub
aam
push
mov
repnz
xchg
dec
mov
gs
data16
in
cmp
aam
dec
add
push
dec
insb
jo
mov
cmp
jbe
mov
shl
mov
fisttpll
out
jns
shll
or
inc
es
pushf
not
cmp
mov
bound
daa
or
out
fs
mov
jb
push
fisubl
mov
pusha
pop
inc
fsubrl
mov
lahf
lret
test
ret
cmpl
fs
icebp
and
mov
mov
fisttpl
push
and
ja
and
mov
imul
and
add
mov
clts
test
or
popa
push
mov
add
pop
fistpll
cmc
inc
mov
inc
dec
sbb
scas
addb
jo
movups
stos
mov
push
sub
jle
loopne
jne
adc
xchg
movsl
mov
push
aam
daa
push
sbb
leave
aam
push
inc
mov
gs
insb
or
inc
push
pop
jne
aaa
lods
fisubrl
test
pop
pop
dec
xchg
mov
adc
std
mov
and
daa
fidivl
mov
sub
stos
mov
arpl
add
loopne
cmpsb
mov
sub
test
sub
mov
dec
or
or
ss
arpl
and
adc
pop
mov
test
lcall
xchg
scas
test
lock
push
cld
inc
out
push
mov
je
imul
mov
mov
ljmp
or
xchg
iret
mov
clc
jae
sub
push
pop
push
lds
loopne
popa
xchg
icebp
xchg
addb
push
ja
aam
pop
dec
rorb
mov
cld
fldl
test
and
inc
addr16
inc
fcomp
jg
test
inc
add
push
jne
inc
adc
outsl
inc
shr
adcl
mov
sbb
mov
cs
fidivrs
pop
cmp
imul
mov
aad
shrl
ret
cmc
popf
outsl
lods
nop
test
mov
xchg
negl
xchg
and
sbb
int
xchg
or
repz
jp
pop
xchg
jl
or
lea
cltd
adc
push
cmp
sqrtps
shlb
test
pop
pop
push
sub
pop
das
arpl
pop
pop
jp
inc
rcrl
push
mov
daa
push
pop
jl
aam
sbb
cmp
dec
fwait
scas
jae
pminsw
mov
mov
addr16
lea
adcl
cld
repnz
push
negb
cld
pop
inc
lahf
rcrl
shll
lret
and
out
lcall
mov
dec
dec
stos
imul
sti
and
les
js
inc
stos
je
push
mov
add
mov
imul
loope
adc
adc
jg
jbe
mov
xchg
lods
outsl
dec
and
sub
ds
jno
arpl
or
jecxz
hlt
ss
lock
mov
mov
mov
xlat
push
lret
push
pop
pop
sub
and
rolb
adc
testb
sub
pop
dec
mov
inc
stc
inc
sbb
cld
cld
rclb
subb
inc
sub
cmp
inc
shlb
cltd
mov
jbe
xchg
push
push
cmp
jns
mov
ds
or
rorl
cmp
popf
imul
pop
ret
mov
add
je
outsb
jecxz
data16
in
in
movl
clc
dec
add
clc
inc
jmp
cmp
pop
lea
int3
push
fnstsw
or
cmpb
dec
mov
pushf
push
mov
lret
xchg
jl
shll
repz
adc
xchg
push
mov
loop
or
mov
into
jb
cwtl
cli
inc
push
jmp
lahf
pop
icebp
and
and
rcrl
xchg
addr16
mov
enter
and
outsb
xchg
pop
and
cmc
jge
out
dec
jmp
les
xchg
fmul
push
push
ja
xor
jle
inc
das
aas
xchg
in
scas
int
jb
mov
sbb
and
dec
lret
ret
sub
dec
mov
jno
das
out
divb
test
std
jbe
push
mov
sbbl
xchg
loopne
sbb
movb
and
or
adc
repnz
outsl
inc
mov
cmp
cmp
mov
sub
fidivrs
cltd
add
or
add
mov
inc
repz
jmp
mov
dec
pusha
cmp
sbb
ds
dec
ss
mov
ds
movsb
bound
clc
icebp
or
imul
adc
adc
mov
das
out
movsl
sbb
mov
mov
das
mov
pusha
jns
aam
dec
pop
fbstp
cld
fisubs
cld
imul
xlat
insl
xchg
add
subl
inc
pop
adc
mov
mov
mov
sub
decl
negb
lea
inc
repnz
fnstenv
movsl
jne
negl
pop
mov
paddsb
inc
sub
lods
xor
rcll
fmull
mov
testl
push
lret
cwtl
movntps
push
xor
mov
fnstenv
fistl
or
bound
ror
fmull
repnz
test
in
xchg
lock
xchg
adc
js
push
lea
out
sub
xorl
and
outsl
xor
fs
xor
xchg
test
mov
stos
cmp
xor
cli
or
and
mov
mov
int
mov
lret
mov
iret
shrb
xchg
mov
ljmp
mov
pop
jb
pop
cwtl
in
jno
mov
fnstsw
adc
fadd
repnz
lea
cmp
loop
mov
mov
js
adc
scas
inc
add
jne
push
shrl
jb
cs
sarl
out
xor
aaa
and
sub
ljmp
loope
ret
fwait
and
push
push
insl
shl
mov
fucom
mov
sbb
mov
xor
pop
test
push
sbb
or
in
aad
mov
stos
es
imul
ret
cmp
cltd
cmp
hlt
cmp
loop
push
jl
jge
mov
push
xchg
mull
mov
es
ret
std
jl
xchg
jle
add
xchg
pop
and
bound
in
jne
mov
add
mov
repnz
ss
xchg
push
jmp
stos
sbb
mov
add
jbe
into
call
cmc
jl
push
out
push
popa
fsubrs
std
xchg
xchg
loopne
mov
test
add
fcmovne
pop
cli
bound
pop
pop
and
aam
mov
cmc
ret
ss
call
dec
popa
cltd
xlat
mov
inc
jg
pop
jmp
cmc
dec
pushf
jecxz
cmp
dec
das
xchg
mov
mov
pop
imul
mov
int3
xor
es
ja
push
mov
mov
mov
inc
aas
mov
inc
jo
dec
out
cli
rcll
xchg
mov
sar
xchg
ds
out
pop
insb
pusha
add
lods
dec
dec
in
fstpl
mov
xor
aas
pop
push
cmpsl
fsub
fstl
shll
dec
inc
pop
sub
and
bound
out
incl
inc
mov
adcb
jno
in
or
dec
mov
mov
mov
xor
test
adc
and
jns
aam
mov
js
and
lahf
dec
loop
in
repz
sbbb
mov
addb
subl
out
jl
and
test
stos
sub
mov
mov
out
xchg
rorb
or
ds
pop
fs
test
mov
mov
jmp
call
jne
stos
sub
jmp
push
dec
pushf
orb
dec
mov
fsubr
pop
lcall
jmp
mov
sub
pushf
and
sbbl
dec
mov
mov
jmp
sub
pop
shll
daa
mov
test
test
xlat
jae
cli
cld
mov
fnsave
orb
das
in
push
mov
xchg
adc
aas
in
cmp
dec
imul
outsl
cmp
es
cld
sbb
mov
pop
xchg
mov
mov
lock
xchg
push
mov
jb
mov
sub
xor
fisubrs
add
enter
xor
push
sub
call
xlat
xlat
add
jne
add
fucomip
inc
jmp
stos
popf
adc
divb
lea
insl
mov
sub
ds
pushw
sbb
pop
mov
cltd
lock
fldenv
push
cs
mov
out
or
cmpsb
aaa
and
xchg
dec
inc
sub
test
jnp
fldl
ror
cli
shr
mov
add
jne
mov
mov
xchg
sarl
inc
jmp
xor
in
push
ret
outsl
add
lahf
adc
add
movsl
or
pushf
jmp
sahf
add
inc
das
push
test
and
aas
or
dec
mov
out
xor
shlb
shll
loope
mov
pop
loope
xchg
nop
jo
add
es
jge
jo
pop
fisubs
mov
nop
add
pop
cmc
sub
jl
jmp
lret
repz
into
or
mov
mov
aas
fcmovu
fldl
lds
inc
int
jne
stos
arpl
push
and
jo
sub
lcall
lret
xchg
sbb
das
gs
mov
cmp
mov
gs
xor
push
iret
mov
rcrl
shlb
mov
into
cmpsl
movsb
popa
lods
sub
mov
dec
pop
insl
andb
imul
out
cs
push
mov
inc
xchg
ficomps
push
test
pop
dec
jo
shrl
scas
cmp
fisubl
stc
or
add
xchg
cmp
inc
repz
bnd
in
loop,pn
das
cmp
addr16
and
fnsave
add
mov
lds
xor
enter
cmp
lods
push
sub
cmp
pop
mov
cmp
shlb
ffree
out
and
ljmp
lock
popa
xor
and
arpl
or
mov
push
outsb
push
js
roll
mov
push
jo
add
dec
ret
push
push
sub
insb
pop
aaa
hlt
cld
inc
cld
imull
movsl
stc
or
nop
inc
and
lret
fldz
cmp
scas
mov
popf
fsts
or
lahf
mov
ror
divb
idivb
mov
je
or
stc
outsl
imul
push
out
in
test
push
lret
lret
push
rcrb
mov
ds
mov
inc
adc
pop
jl
insb
inc
fisubl
sbb
cmpsl
loop
cli
je
loopne
jmp
jp
cwtl
xor
fildll
iret
int3
push
out
aam
inc
flds
push
or
push
dec
pusha
push
and
das
sbb
repz
mov
push
imul
push
cltd
rclb
mov
xor
aad
mov
pop
ret
sub
gs
fcomps
mov
jecxz
xchg
aas
cltd
clc
jge
insb
cs
mov
xchg
add
and
jno
pusha
jl
insb
push
cli
out
adcl
jmp
lcall
fs
mov
dec
mov
fsubrp
add
stc
push
jg
push
adc
adc
andl
bound
ds
mov
fiaddl
cmc
pushf
or
or
push
mov
or
lret
orl
js
cmp
test
mov
sbb
xor
pop
xor
inc
lcall
cmpl
pop
or
cmpsl
icebp
dec
push
and
popa
push
test
mov
negl
dec
scas
push
mov
sbb
cltd
mov
aaa
jl
sub
lret
or
je
jg
int3
xchg
mov
call
movsl
jge
jp
stc
pop
ret
or
adcb
ja
jne
jge
lds
daa
jg
push
or
dec
adc
mov
or
adc
aaa
clc
fucomip
mov
xor
mov
popw
cli
cmp
mov
fldl
imul
pop
mov
add
adc
cmp
xchg
mov
subl
fbld
push
sub
jle
fdiv
mov
lods
jp
jbe
lret
into
adc
pop
cli
sub
xchg
ljmp
rcll
leave
mov
into
jl
gs
xlat
ja
pop
sbb
into
popf
xchg
and
inc
test
and
inc
shrl
jns
repnz
xchg
sub
mov
sub
test
sbb
dec
pop
repz
xchg
pop
fwait
ret
push
xlat
in
push
jns
push
repnz
mov
push
jbe
ds
ret
push
adc
inc
dec
ljmp
js
mov
xor
stos
add
sbbl
mov
lret
or
jb
cmp
stc
shrb
je
iret
dec
fistpll
lods
in
rcrl
popf
adcb
insb
xchg
or
push
fcoml
mov
push
mov
out
lds
push
jmp
repnz
xor
xchg
enter
push
int
aaa
lods
fwait
push
xchg
outsb
cmp
pop
mov
push
imul
and
push
jp
jae
imul
in
inc
scas
mov
pop
push
in
test
xor
fsts
cmp
mov
cmpsb
xor
and
xchg
aaa
test
add
cwtl
cmp
mov
aam
rcrb
mov
aad
mov
dec
add
cmc
iret
adc
aam
jo
pop
xchg
mov
ja
repnz
jmp
test
add
add
shrl
mov
xor
or
sub
les
mov
sahf
cmp
mov
jbe
mov
mov
mov
xchg
adc
out
pop
fdivl
and
mov
sbb
loop
sub
insb
jno
outsb
adc
pop
dec
jne
mov
ljmp
xor
andb
bound
cmp
out
push
test
dec
xchg
rcr
mov
sti
loop
mov
dec
mov
hlt
pusha
adc
xchg
and
and
inc
mov
cmp
add
movsb
jmp
jmp
inc
fs
mov
test
dec
push
xchg
test
notl
add
cmp
test
or
fisttpl
push
inc
sbb
movsl
cmp
cs
xchg
nop
icebp
ljmp
mov
mov
inc
add
int
imul
mov
sub
scas
and
or
mov
cmp
out
insb
cwtl
fdivrp
jecxz
addl
add
jne
test
xor
int3
push
inc
sub
inc
test
and
sub
sub
or
sub
mov
jbe
fsts
out
std
fwait
jmp
mov
sub
mov
cmpsb
lret
lods
rep
in
rcrb
bound
mov
mov
lahf
mov
out
sbb
cmovl
in
and
add
xchg
dec
pushf
inc
mov
or
jecxz
stc
pop
cltd
dec
and
sub
mov
fsub
jl
les
add
ret
mov
cmpsl
jmp
sub
push
popa
ret
xchg
cs
mov
sub
jp
mov
mov
lcall
leave
movsb
repz
jle
mov
ret
sub
int3
mov
arpl
adc
mov
mov
xlat
sbb
push
sahf
gs
cmp
hlt
sbb
std
push
mov
fisttps
jp
test
in
push
rcrl
sbb
mov
test
shr
cmp
out
or
mov
imul
loopne
pop
in
pop
mov
into
movsl
or
shr
push
or
cmp
push
pop
maxps
lock
pop
jle
add
mov
test
ds
testb
mov
push
sub
push
add
out
mov
lcall
xchg
jnp
daa
push
pusha
stos
mov
mov
jg
cmp
fidivrs
xchg
mov
fucomi
and
lret
ss
pop
mov
cwtl
in
aam
push
xchg
dec
mov
cs
mov
xchg
pop
sub
xor
inc
jmp
push
inc
pop
repnz
mov
sub
jo
mov
or
pop
lods
out
mov
in
aaa
add
shl
xor
lret
clc
inc
lahf
or
add
cld
mov
idiv
repnz
dec
or
test
imul
mov
icebp
lret
in
xchg
test
push
jns
pop
mov
loope
jg
out
push
movsl
xchg
cmp
inc
push
mov
pop
mov
das
cmpsl
jno
or
clc
shrb
xor
lcall
add
les
pop
push
ret
add
inc
testb
jns
aam
repnz
mulb
rcrl
pop
fiadds
adc
cmp
ljmp
cwtl
outsl
push
in
insl
jb
sbb
push
in
mov
out
sti
mov
flds
jmp
push
pop
mov
adc
imul
push
pusha
lret
xlat
xlat
pop
push
inc
sti
cwtl
decl
mov
loope
clc
ret
outsl
jle
rorb
adc
mov
mov
jne
clc
les
or
nop
pushf
mov
cwtl
lea
std
test
xor
xchg
xchg
xor
jne
jmp
jno
shrb
pop
push
inc
test
mov
pop
pop
jns
or
and
aad
add
sahf
cltd
push
lcall
ss
stos
mov
ss
cld
xor
imul
into
jmp
rol
inc
mov
lods
lea
jns
leave
or
popa
and
loope
xchg
nop
imul
aas
push
xchg
inc
out
aas
pop
mov
lods
and
add
inc
ret
mov
pop
mov
outsl
sub
aas
jbe
dec
addr16
and
mov
out
movsb
xchg
mov
add
ja
pop
sub
xchg
adc
imul
je
push
loopne
inc
aaa
xchg
add
loopne
xchg
fsubl
outsl
mov
stc
mov
fs
push
mov
adc
jbe
call
cli
mov
ljmp
fsubs
lret
pop
jae
dec
lret
mov
icebp
add
push
js
leave
mov
push
jmp
mov
jb
add
push
xor
dec
inc
in
xchg
out
out
insl
or
scas
xor
incb
fistps
out
scas
dec
jp
cmp
jno
inc
lcall
push
mov
push
cmp
xchg
push
dec
cmpsb
out
arpl
push
lret
dec
fsts
inc
cmc
aaa
loopne
cli
imul
jp
inc
and
and
sbb
or
jb
dec
rorb
lods
dec
gs
mov
stos
and
lea
mov
imul
inc
into
mov
and
imul
and
mov
ss
xor
in
inc
imul
sbb
jmp
dec
xor
push
fcoml
pushf
or
push
out
int
mov
push
dec
adc
rorb
sti
mov
lcall
mov
adc
in
inc
inc
test
mov
sub
adc
jb
adc
cli
or
or
xorl
mulb
roll
push
xor
dec
add
mov
fadd
xor
aam
jecxz
cmp
imul
popf
dec
testl
dec
mov
dec
push
xchg
inc
sub
push
jge
mov
mov
adc
jp
test
cld
cwtl
mov
push
xor
test
movsl
pop
push
fwait
mov
lods
pop
cmpsl
int3
in
cmp
or
cmp
loopne
adc
and
scas
std
cwtl
adc
bound
in
sti
xchg
les
sub
mov
inc
fs
mov
cmp
mov
mov
fisubrs
adc
inc
int
xlat
fbld
or
sub
xchg
jae
cmpsb
push
mov
stc
flds
lods
xor
les
subb
orl
jne
ljmp
jl
mov
aaa
cmp
addr16
rclb
dec
out
sub
cmpsl
add
out
inc
jecxz
jbe
testl
xor
out
dec
push
mov
push
xor
jb
cmpsb
into
pop
sbb
push
call
loope
cmpb
mov
mov
xor
fcmovu
jle
cmp
mov
setne
in
sbb
adc
fcos
mov
and
dec
jp
or
mov
sbb
iret
test
xor
add
fistpll
cs
dec
out
popa
in
ljmp
and
xchg
insb
or
popf
shlb
popa
or
clc
push
xor
popa
cltd
inc
pop
adc
mov
pushf
mov
std
mov
aaa
scas
jecxz
sbb
push
adc
xor
ficompl
outsl
sti
mov
out
xor
pop
cmp
testb
out
pop
push
push
lea
pop
pushf
enter
fwait
fwait
and
loop
fstl
adc
jmp
ljmp
es
mov
pop
jno
pop
dec
pop
insb
fiaddl
notl
add
adc
insl
inc
imul
xchg
mov
jmp
sub
les
sub
inc
cmc
test
rcll
jns
sti
out
int3
shr
adc
aas
cmpsl
inc
and
push
and
add
or
push
xchg
repnz
cmp
mov
mov
jae
adc
insb
inc
jp
add
mov
fwait
xor
sub
jecxz
lds
lods
arpl
sub
call
cmc
dec
xchg
push
icebp
inc
insb
xchg
outsb
iret
cltd
loopne
mov
fcomps
stos
push
mov
sbb
add
loop
cs
sub
aas
cltd
pop
dec
stos
and
add
mov
mov
jns
xchg
push
iret
dec
arpl
fs
jae
mov
nop
fidivs
jle
mov
mov
or
call
mov
imul
stos
xor
pop
ss
add
leave
adc
sub
mov
mov
sbb
mov
sub
jg
sbb
jnp
sbb
clc
ficomps
mov
mov
jecxz
xlat
and
adc
mov
stos
add
xchg
xor
cld
mov
jl
mov
mov
mov
push
cmp
add
pop
mov
leave
hlt
and
push
cwtl
and
imul
scas
sub
fucomip
push
adc
dec
or
imul
cmp
jae
mov
aaa
loope
das
sahf
lds
rorb
and
aad
cwtl
lods
in
adc
aad
hlt
mov
loop
imul
cwtl
sbb
xlat
push
sbbl
xchg
jo
jle
dec
divl
push
fbld
jle
pop
aas
lds
cmpsl
test
or
fdiv
pushf
adc
fwait
nop
and
ss
aaa
inc
cmp
mov
roll
cmp
fxch
sbb
push
pop
rcll
sub
inc
or
shrl
pop
test
dec
sbb
pop
xchg
cmpsb
and
or
int3
rcll
int3
rcll
or
push
fsubrl
daa
sub
ss
rcrl
fcomi
test
mov
filds
rcrl
xchg
pop
subb
jecxz
inc
xorl
mov
jb
mov
scas
xchg
and
insl
mov
push
mov
mov
push
test
or
iret
push
mov
add
add
cmp
mov
outsb
popf
mov
push
push
adc
push
scas
adc
dec
mov
repz
push
pop
mov
jae
sub
adc
arpl
inc
outsl
add
dec
mov
cmpsb
out
sti
add
lods
or
ret
mov
adc
cmp
ja
cmc
xor
ja
iret
dec
adc
push
mov
rcrb
pop
dec
fwait
into
int
add
in
out
dec
outsb
lods
mov
sbb
je
xchg
fcoms
pop
pop
add
push
adc
add
inc
stos
inc
xor
clc
mov
inc
add
repz
es
jge,pn
movsl
sbb
adc
jl
push
mov
dec
pop
nop
mov
cli
ret
rcrl
dec
data16
push
sti
dec
xor
pushf
sub
push
mov
adc
in
dec
jbe
subb
mov
dec
jp
mov
mov
push
mov
inc
pusha
leave
ficompl
incb
ret
lods
pop
sub
sub
xchg
jl
fstp
mov
pushf
cmpb
sbb
flds
push
jne
sarb
add
call
push
pop
xchg
sub
roll
fadds
mov
adc
xchg
push
addr16
xor
call
dec
fdivrs
iret
sub
push
cmp
xlat
cmpsl
cmp
xlat
insl
sub
adcb
sbb
xchg
les
cmp
js
inc
inc
scas
clc
icebp
xchg
loop
inc
mov
jne
std
pop
int3
jbe
pusha
jp
cmpsl
lret
cld
mov
cmp
mov
aas
je
inc
je
cs
idiv
mov
jbe
lcall
bnd
fwait
scas
push
ret
jge
inc
xchg
out
sbb
shll
shrl
fimull
push
push
jno
or
push
sub
add
ja
sbb
dec
mov
xlat
add
xorb
rcrl
jne
add
cmp
xchg
dec
leave
popa
dec
subb
insl
cld
xlat
int
push
sbb
mov
out
and
xor
ljmp
nop
out
sub
aad
and
fisubrl
bnd
out
pop
inc
aas
fldcw
gs
es
jno
and
dec
les
fiaddl
sbb
inc
jle
mov
inc
aaa
enter
lcall
insb
or
mov
cmc
mov
sbbb
test
ret
sbb
or
fnclex
test
sbb
clc
cmp
jg
dec
add
test
adc
sub
inc
pop
cmp
jmp
mov
xchg
inc
xchg
int3
int3
inc
pop
in
aaa
sub
rcrb
cmp
mov
push
loop
lret
mov
int
and
jnp
or
mov
adc
rolb
xchg
pop
scas
in
cmc
ret
cmp
sbb
sub
adc
outsl
in
xchg
lds
push
test
pusha
mov
push
dec
jnp
lret
push
sbb
je
and
inc
sub
incl
pushl
fcmove
jecxz
idivb
push
xlat
sbb
xor
rolb
test
testl
out
sbb
push
mov
cld
inc
cmpsb
xchg
imul
dec
imull
adc
rclb
mov
add
outsl
inc
test
mov
sub
mov
out
jp
jne
ds
adc
pop
scas
or
sbb
mov
aam
aaa
dec
loopne
mov
add
dec
inc
pop
dec
ja
fimuls
xor
inc
dec
repnz
dec
mov
sbb
inc
inc
jnp
and
movsb
and
sub
inc
out
in
scas
es
cwtl
test
mov
sbb
xchg
dec
or
push
imul
imul
adc
insb
mov
push
aaa
adc
out
inc
mov
mov
call
gs
jg
cmpsl
pop
inc
jl
ret
or
pop
dec
mov
xlat
mov
adcb
xchg
js
in
popa
mov
add
sbb
ror
adc
xor
fadd
pop
cwtl
xchg
pop
jae
or
sbb
and
mov
int
scas
mov
jns
mov
adc
lcall
and
mov
fsubrl
inc
push
xor
dec
add
push
push
add
out
push
cli
xchg
pop
push
aaa
addr16
pusha
sub
mov
fcomps
jle
mov
pop
mov
fsubrs
push
pushf
int3
loope
inc
aaa
jmp
and
imul
pop
sbb
out
push
call
loop
sbbl
rcrb
pop
sub
gs
sar
add
es
inc
seta
pop
inc
lods
push
and
dec
jecxz
subl
xchg
movsb
dec
push
add
gs
cltd
out
sub
pop
test
sub
daa
adc
cmp
aam
sahf
pushf
jbe
dec
xor
inc
xchg
jbe
mov
push
daa
fnsave
popa
adc
jnp
push
xchg
imulb
dec
insl
xchg
stos
das
sub
loope
add
add
cwtl
xorl
mov
pop
arpl
call
pop
inc
cmp
adc
sbb
cmpsl
leave
test
pusha
mov
in
adc
xor
sub
mov
fdivl
fs
enter
pop
push
or
jecxz
gs
call
mov
loop
cs
dec
pop
pushf
xchg
xor
sti
scas
sub
pop
call
std
ss
ret
testl
mov
pop
push
or
test
and
dec
gs
and
fsubs
outsl
lahf
loop
sbb
in
out
add
aad
dec
push
jns
loope
aas
test
xchg
xchg
outsb
pusha
jmp
lahf
inc
repz
jb
sbb
pop
jnp
or
lret
iret
cltd
lahf
lods
push
push
loop
xor
idiv
shl
jae
mov
add
lret
mov
cltd
cmp
add
fisubrs
lds
loopne
imul
xor
xor
push
jbe
xor
sbb
jg
xchg
fs
lcall
test
dec
jecxz
push
loope
neg
cli
jae
xchg
ret
add
fistpll
and
add
sbb
inc
mov
test
sub
out
int
in
outsl
insb
jecxz
outsl
clc
adc
rclb
sbb
cmp
and
clc
pop
lret
adc
add
cmp
sar
jbe
sub
jae
das
stos
mov
or
int3
es
leave
push
fwait
inc
push
add
cld
into
fstpt
jo
fwait
pop
pop
movsl
xchg
stc
jne
mov
outsl
in
bound
in
clc
popf
lods
shrl
adc
pop
xlat
jle
cltd
mov
dec
push
fwait
dec
popa
jno
sub
cmp
pop
sbb
cmp
cltd
mov
js
cld
add
push
shlb
push
ror
fsubr
fs
inc
mov
push
test
dec
js
and
shl
inc
fsubrs
scas
into
mov
mov
or
in
or
xchg
rclb
js
inc
in
cwtl
sbb
scas
dec
sbb
jp
pop
out
fstpl
jl
pop
insb
inc
add
addr16
cmp
sahf
jne
jg
ret
loopne
je
andl
fstpl
subl
sbb
cltd
pusha
jne
jp
bound
repnz
sub
std
and
insl
cli
mov
mov
xor
outsl
arpl
sub
and
xchg
dec
aaa
jns
jecxz
xchg
std
test
mov
nop
popf
movsl
sahf
jae
clc
fisttps
les
leave
outsb
cmp
add
stc
xor
xchg
aas
es
sbb
sahf
sbb
sub
push
nop
xor
jb
jl
sbb
push
pushf
ret
inc
xorb
xchg
xor
cmc
xor
pop
test
dec
jle
xchg
daa
pop
xchg
fldl
lods
mov
insl
cmp
pop
cmp
jne
pop
int
ss
jne
lret
xchg
lock
jg
push
gs
fisubl
mulps
mov
js
ficoml
cwtl
or
add
jge
stos
and
nop
sbb
aaa
push
pop
mov
outsl
ljmp
add
sahf
jmp
xchg
shll
sub
inc
mov
or
out
push
xor
sbb
arpl
cmp
adc
adc
cmpsl
mov
or
insb
and
inc
in
or
mov
xor
mov
mov
and
repnz
xor
dec
xor
mov
inc
shr
out
cmp
adc
and
stos
ret
sbb
roll
movl
cmp
push
das
mov
mov
mov
add
jecxz
outsb
lret
inc
hlt
fstpt
jbe
inc
sbbb
sub
fcomip
sub
lds
jae
xchg
inc
xor
mov
push
arpl
push
fldl
loopne
sbb
lods
ret
outsl
and
cmpsl
xchg
rcll
popa
ret
sbb
movsl
pusha
js
pop
mov
out
and
mov
iret
loopne
xchg
cmp
push
jecxz
dec
mov
fcompl
xlat
inc
fbld
rcrl
in
push
pop
sbb
lcall
fbstp
sub
fnsave
inc
sbb
jbe
jno
fstpt
mov
dec
push
test
pop
lahf
sub
pop
movsl
xchg
es
stc
cmpsb
stos
in
push
es
dec
mov
pop
xchg
fst
iret
xor
jns
mov
adc
lcall
fsubl
push
pop
fldcw
xchg
xchg
xor
dec
cmp
mov
or
sbb
outsb
add
les
pop
pop
add
or
lahf
jb
xor
movsl
cwtl
lahf
loop
mov
push
mov
xor
push
xchg
rcl
push
pop
ret
out
xor
adc
pushl
inc
rclb
out
in
jo
lahf
jbe,pn
jnp
lahf
and
mov
test
jge
cs
mov
push
int
fsub
push
cli
fstps
and
mov
mov
js
push
lods
insl
imul
sbb
sub
loopne
pop
jle
add
dec
shrl
adc
lahf
test
aad
push
and
test
cld
dec
cmc
and
insb
jp
pusha
fdivs
pop
or
clc
xlat
xor
shlb
jb
cwtl
push
adc
fbld
int3
test
idivb
ret
les
mov
inc
scas
adc
lods
mov
sbb
mov
jns
adc
add
add
test
mov
outsb
leave
and
and
ret
repnz
jle
mulb
dec
loope
or
cld
movl
xor
mov
jmp
lcall
test
mov
pop
outsl
mov
xorl
jnp,pn
adc
loopne
jbe
jnp
fsubr
dec
inc
sbb
and
and
insl
and
sub
and
dec
sbb
loopne
sub
xchg
push
add
mov
mov
popl
shrl
leave
ljmp
sbb
push
imul
adc
inc
test
mov
sar
shrl
mov
ficompl
stc
rolb
loope
test
xor
push
mov
jmp
rcll
dec
and
mov
adc
outsb
aam
mov
outsl
push
fidivl
add
pop
xchg
leave
pop
jb
ret
jg
inc
lahf
push
jno
loopne
push
dec
sbb
inc
push
ret
sti
test
sub
jecxz
mov
popl
mov
pop
jo
and
adc
clc
bound
jb
loope
xchg
push
inc
mov
add
sub
xchg
lock
int3
xchg
cmp
push
mov
movq
dec
cmp
dec
mov
mov
and
js
xchg
int3
idivl
outsb
inc
push
inc
mov
mov
scas
lea
jae
cmp
lods
or
mov
aam
fadds
enter
out
dec
lods
adcl
or
inc
sub
ljmp
pop
xor
mov
mov
ds
mov
dec
imull
and
xchg
scas
jle
adc
negl
loopne
stos
insb
lea
jbe
fs
xchg
pop
mov
mov
push
xor
pop
sub
dec
inc
xor
div
shrb
and
sub
int
pop
lds
stc
subl
das
lcall
jbe
mov
addl
nop
jl
shlb
in
in
push
add
sbb
sbb
dec
xchg
cmpl
les
fsubs
popf
inc
cltd
bound
movsl
in
xchg
mov
add
push
jo
call
add
je
push
in
daa
mov
jl
jnp
aaa
shrl
sub
sti
aam
push
mov
mov
decb
fsubrp
lcall
mov
dec
dec
aas
or
mov
add
rcll
mov
jne
lods
gs
dec
cmp
xchg
aaa
mov
ja
mov
inc
scas
jns
out
insl
scas
jne
sbb
test
popa
push
xor
fsub
inc
cli
mov
std
cmp
enter
pop
mov
cmp
js
outsl
cmp
cmp
lcall
xchg
adc
xor
mov
jns
mov
xor
aas
imul
clc
inc
add
push
fdivrl
icebp
mov
xor
inc
mov
cmp
mov
sbb
loopne
cmp
stos
out
addb
shll
rcll
push
add
add
lods
pop
icebp
movsb
adc
in
mov
cmp
lock
pop
push
dec
or
sbb
jnp
gs
xor
addr16
pushf
jl
dec
mov
sbb
test
pop
push
popa
test
hlt
hlt
pop
or
icebp
sub
push
pop
lods
fildl
clc
sub
dec
xchg
cmp
sub
dec
pop
mov
pop
mov
cmp
dec
cltd
pop
aam
add
xor
es
push
mov
popa
outsl
jno
dec
mov
push
std
rorl
dec
cmp
fwait
mov
insb
jmp
push
into
in
pop
jmp
ja
adc
mov
scas
jl
sbb
jae
adc
pop
cs
fidivl
daa
dec
cmp
jne
cld
sbb
cld
pop
sahf
aas
jmp
lahf
lcall
jno
push
fiaddl
xchg
or
pop
mov
inc
shl
xlat
pop
push
add
jno
mov
mov
ss
mov
leave
rcrb
daa
lahf
je
pop
pop
jns
nop
xorb
pop
fisubs
xor
lret
sahf
pop
scas
mov
nop
push
addr16
push
clc
lock
push
cmp
pop
push
movl
pop
dec
popa
lods
mov
sbbb
loop
push
xor
loop
cli
dec
and
mov
sbb
inc
or
sub
loop
dec
es
fxch
jnp
xchg
add
mov
sub
or
mov
and
dec
sbb
and
cmpsl
jle
push
pop
fidivs
aam
mov
and
out
pop
int
rorl
jg
dec
cmp
lahf
fcom
sub
ret
push
fldt
lahf
mov
jle
and
xor
sub
adc
adc
stos
mov
dec
adc
xchg
xor
sub
out
aam
mov
mov
stos
jo
pop
push
add
and
dec
cwtl
pop
sarb
mov
push
in
ljmp
popf
scas
sahf
fmull
mov
and
cmp
pop
sbb
dec
xor
fcmovnbe
push
sub
test
popf
jecxz
cli
enter
ja
aaa
dec
xchg
divb
xchg
in
rep
dec
test
push
mov
pushf
outsl
std
test
out
test
rcr
jg
xlat
fildl
push
icebp
adc
and
popf
out
cli
dec
jb
loopne
or
aam
add
sbb
xchg
std
fwait
sti
inc
addb
ja
shll
dec
jg
cmp
push
mov
sbb
push
dec
jmp
add
xchg
mov
mov
lds
sahf
xor
adc
stc
push
jp
add
mov
jo
add
push
fmuls
mov
in
pop
xor
lods
mov
sub
outsb
dec
push
outsl
popf
sbb
jge
push
push
popf
popa
mov
insl
push
cmp
imul
dec
fcoms
lret
add
lret
repnz
call
stos
nop
ds
sub
jmp
mov
xorb
das
and
add
ss
ljmp
pop
imul
mov
cmp
je
mov
les
inc
jnp
test
fs
roll
inc
fisubrl
xchg
mov
xor
shlb
sti
adc
push
jp
pop
or
sti
ss
popa
pop
or
mov
jmp
adc
std
pop
andl
pop
and
lret
in
fstl
sarb
add
jle
and
dec
jmp
fmuls
movsb
sub
push
fcmovb
inc
sbb
cmc
dec
jns
push
pop
cld
shr
int
jg
cmc
outsb
pusha
cmp
pop
shlb
xor
out
lock
push
dec
jae
dec
jg
stos
xor
out
jmp
fcmovnu
mov
aas
jl
xchg
pop
cmp
pop
arpl
dec
outsl
int
repz
scas
orl
daa
loopne
jmp
repnz
pushf
mov
and
push
cltd
loop
and
or
xor
stos
xchg
out
loope
pushf
ljmp
mov
mov
fucomp
icebp
hlt
push
js
loopne
xchg
push
or
adc
sbb
mov
cmp
lcall
ret
std
and
lcall
nop
stos
adcb
push
mov
jne
test
insl
adcb
fistpll
mov
lret
popa
sbb
push
or
leave
insl
mov
repz
call
mov
movsb
pop
sub
dec
push
dec
fldcw
mov
push
mov
in
data16
push
idivb
shll
and
ja
mov
xor
add
stos
enter
icebp
xlat
cmp
mov
add
push
lds
rcrl
int
or
sbb
mov
movsl
cld
cmp
hlt
cmp
pop
or
or
fisttpll
cmp
cltd
movsb
mov
inc
xchg
test
ret
dec
push
iret
js
fistpll
mov
sub
dec
lds
outsl
cmp
loop
jns
jge
inc
lea
pop
sarb
inc
sub
adc
cmpsl
xor
movsb
sub
mov
outsl
xor
mov
gs
repz
push
in
adc
je
sbb
jb
xor
xor
jnp
xchg
pop
xchg
rcrl
fdivp
jge
pop
in
ja
add
jo
dec
and
xchg
sub
mov
imul
lret
insb
mov
cwtl
push
cmp
and
pop
push
xchg
lahf
xchg
repz
scas
xor
push
adc
stos
add
xor
dec
into
push
push
divb
lret
xchg
and
cs
sbb
pop
test
push
in
jle
xchg
mov
xlat
fld
call
mov
push
jmp
push
out
mov
mov
fisubrs
mov
mov
dec
scas
mov
xor
cltd
and
ret
mov
cltd
or
fmull
popa
push
arpl
cmpb
add
dec
iret
rcr
xchg
mov
out
fld
ret
shrl
dec
lds
pop
hlt
lds
mov
push
add
mov
leave
mov
and
xchg
nop
stc
sbb
add
in
out
jge
repnz
mov
rcl
enter
adc
js
xorl
cmp
js
jno
and
bnd
stos
add
mov
ja
je
sbb
adc
shl
cli
std
scas
add
adcl
or
mov
inc
inc
sahf
leave
cmp
movsb
in
lods
jle
idivl
aam
push
push
mov
movsb
add
dec
fsubs
cwtl
pop
dec
mov
int3
cmp
js
mov
jb
jp
mov
mov
das
jl
ficomps
and
sub
enter
cmp
lahf
dec
mov
or
inc
adc
pop
mov
repnz
in
cmpsl
and
push
ror
push
jb
xor
xchg
pop
loop
inc
sbb
into
repz
andl
jg
icebp
cmp
adc
sub
popf
test
xchg
shl
push
mov
lret
mov
mov
adc
push
movsl
fidivrs
scas
jg
outsb
add
inc
push
sbb
ret
test
dec
test
jmp
dec
sbb
cld
dec
cmc
push
xchg
inc
gs
sbb
insl
push
es
jns
xor
cwtl
dec
dec
jmp
xchg
adc
mov
jnp
iret
jo
jg
pop
add
mov
pop
pop
sbb
xchg
or
loope
cld
jnp
repz
nop
cld
pop
mov
lahf
mov
out
cmp
adc
jmp
mov
adc
popa
mov
shlb
shll
mov
mov
and
andl
aas
mov
xor
lods
push
xchg
adc
int
ret
mov
xor
jb
inc
movsb
mov
repnz
repnz
into
adc
xchg
aad
mov
clc
add
repz
jb
xchg
shl
in
add
hlt
fbstp
mov
pop
sbb
and
xor
fstps
xchg
jb
lahf
or
inc
lock
push
dec
push
data16
adc
ret
or
imul
dec
pop
dec
push
das
mov
jns
pop
and
push
xlat
sub
mulb
ljmp
test
pop
mov
inc
leave
xchg
rorb
mov
mov
aad
mov
and
sti
in
mov
jne
leave
enter
mov
sub
mov
jae
jns
daa
sahf
test
nop
mov
sbb
cmp
push
xchg
jns
out
dec
aam
fsub
inc
jo
movsb
mov
les
test
inc
pop
adc
pop
pop
mov
inc
test
lcall
cmpsl
pop
fsub
jl
sub
fdivrl
adc
pusha
ja
jg
aas
sbb
sbb
aas
scas
mov
iret
mov
ljmp
pop
push
dec
push
and
pusha
xor
test
add
cli
outsl
stos
pop
fs
cmp
loop
fdivl
jp
in
jns
xchg
adc
inc
fcomi
je
cmp
xor
fimuls
add
lret
out
ret
sbb
jle
cmp
inc
in
pop
inc
xchg
cs
cmp
rolb
jmp
pop
pop
ffree
sbb
mov
roll
push
mov
loopne
test
loop
stos
jle
inc
ficompl
imul
out
sub
pop
jge
jl
lds
arpl
pop
repz
inc
dec
cmc
or
out
and
sbb
mov
push
insb
pop
adc
imul
call
mov
pop
adc
imul
pop
test
lds
adc
cwtl
or
inc
sub
inc
imul
and
inc
and
fmul
in
negb
daa
dec
imul
inc
test
iret
push
fdivr
adc
push
test
push
iret
int3
dec
or
mov
addr16
pushf
xor
cmp
arpl
xor
ror
or
addr16
mov
jl
add
jb
xor
lea
dec
cmp
fwait
add
or
out
inc
xor
add
divl
xchg
jns
sbb
jne
cs
daa
sub
mov
adc
cmp
jae
pushf
push
sub
lds
rorl
dec
cltd
rcrl
dec
dec
popf
cli
xchg
mov
stos
dec
in
ret
inc
sub
stos
jns
fsubl
mov
aas
jl
ds
sbb
cmp
test
pop
sub
push
dec
int3
in
je
jo
jl
loope
pop
rorb
sbb
lea
test
in
shlb
call
push
aad
sbb
bnd
sahf
popf
adc
jno
jno
hlt
fnstsw
das
jno
fidivs
cmpsb
mov
js
test
xor
pusha
pusha
int
test
add
dec
outsl
sub
stos
cltd
jge
pop
fwait
mull
daa
imul
ret
pop
add
fwait
adc
inc
hlt
repz
pop
mov
popf
ljmp
or
sub
lahf
dec
inc
pop
inc
outsb
ss
push
or
mov
sbb
test
loopne
pop
int3
out
mov
clc
inc
cmc
insb
sub
jecxz
mov
cmp
sahf
sbb
stos
test
jle
xor
ror
mov
cmp
inc
inc
test
inc
adc
fisttps
add
mov
inc
inc
fldl2t
push
ret
sub
mov
mov
imul
mov
sbb
xlat
nop
insl
xor
sub
and
inc
inc
push
loop
ja
iret
push
mov
sbb
mov
sbb
lret
jo
lret
lret
pop
and
fldt
jno
rcl
lods
xchg
cmpsb
mov
dec
sarb
mov
inc
xor
nop
xchg
loope
out
jecxz
xor
sbb
mov
aas
ss
ja
dec
mov
jne
ret
outsl
inc
mov
cmp
ficoml
inc
cmp
and
or
sbb
insb
int3
pushf
mov
jae
sub
test
fcmovb
hlt
jno
mov
rorb
adc
dec
xor
xchg
jge
fidivl
test
mov
mov
cli
mov
sub
repnz
ljmp
leave
addr16
push
in
sahf
aad
mov
push
ljmp
cs
mov
xor
fcom
mov
stos
inc
arpl
mov
xor
les
xor
jns
push
sub
into
jmp
bound
lock
mov
sbb
stc
cmc
fadds
roll
jl
push
dec
mov
cmove
addr16
fsubs
outsl
in
push
mov
imul
in
out
testl
jnp
fs
cwtl
test
xchg
mov
andb
inc
pop
pop
or
jae
sti
inc
test
jl
repnz
iret
int3
cltd
fistl
cltd
sbb
cmp
and
pop
mov
sbb
and
push
idivb
jle
cld
jno
aam
push
das
jnp
xchg
ror
dec
inc
fidivrl
or
enter
jmp
push
je
cmp
push
daa
and
popf
dec
sub
jbe
sti
jbe
stc
sub
cmpsl
lds
mov
je
jle
sub
pop
push
repz
pop
mov
mov
push
pop
mov
push
jnp
lahf
das
xor
jno
dec
dec
outsl
scas
add
mov
jl
jns
enter
lea
lahf
ret
insl
sbb
mov
hlt
mov
cmp
or
or
adc
movsl
sbb
popf
adc
lret
cmpsb
pop
push
repnz
mov
mov
push
mov
jge
adc
mov
fists
push
mov
mul
outsb
jmp
sbb
icebp
xor
mov
or
sub
mov
jae
and
add
pop
dec
pop
not
test
add
aas
pop
dec
add
shl
inc
call
xor
popa
mov
test
jb
pusha
gs
cmc
stc
ljmp
sub
or
ja
icebp
addr16
sbb
adc
iret
sbb
push
je
ljmp
xor
ljmp
arpl
ret
push
mov
mov
adc
and
mov
outsb
mov
rcll
jnp
fldenv
jp
sahf
sbb
cmp
xlat
out
test
cmp
lret
cmp
ret
stos
and
out
repz
add
pushf
jge
xlat
popf
pop
cmp
data16
ds
pop
cmp
fisubl
push
sbb
in
popa
outsl
sahf
imul
test
push
mov
mov
bound
ja
lret
mov
out
and
xchg
arpl
pop
mov
ja
ror
iret
fcomps
jo
jno
cmp
addl
scas
mov
or
mov
sub
bound
pop
out
icebp
sbbl
sub
shll
mov
adc
stos
out
add
outsb
mov
dec
sub
scas
iret
inc
push
sub
imul
fisttps
cmpsl
ret
test
cmp
inc
adc
push
je
add
ljmp
pop
loope
rol
int3
loope
loopne
insb
xchg
cmc
mov
js
inc
jp
in
stos
adc
fldcw
pop
fmulp
loop
inc
loop
mov
cld
sub
sbbb
cmc
std
cmp
leave
rolb
popa
adc
testb
add
mov
loope
int
jne
cs
les
lret
dec
adc
xchg
lds
int
sub
jmp
cmpsl
fwait
mov
xchg
or
mov
push
pusha
inc
lods
xchg
xor
mov
cmp
jo
inc
sub
jne
test
sbb
jmp
jo
cmp
xor
mov
aas
mov
test
das
inc
jp
pop
xor
push
pop
xlat
mov
inc
stos
mov
cmp
jb
inc
paddw
push
cmc
mov
mov
ja
cs
xor
pop
xchg
sbb
es
outsl
jp
jmp
or
fldcw
mov
jmp
inc
popf
jle
in
mov
test
sbb
lret
sbb
or
adc
cmp
rep
xlat
shrl
xchg
int3
in
in
adc
fs
fs
aam
lods
int3
or
and
sbb
adc
push
xchg
dec
jbe
lods
xor
adcl
or
cmc
and
xchg
mov
rorb
sbb
cmp
mov
loope
fs
push
mov
sbb
push
sbb
popf
iret
inc
dec
xchg
aas
mov
jmp
mov
jl
lret
jno
push
add
stc
into
jle
mov
clc
test
adc
cmpsb
dec
fsubrl
shr
lods
adc
xchg
mov
ss
cmp
insb
jo
add
mov
rcl
clc
mov
test
mov
cmpsl
ja
push
or
push
push
and
aam
jno
lahf
jg
rorb
sub
mov
outsb
sub
fstpt
repz
jg
dec
mov
jecxz
cli
inc
int
and
fstpl
xor
push
int3
xor
cmp
out
jl
pop
sbb
mov
xchg
js
ljmp
dec
add
nop
outsl
in
jae
ret
mov
or
pop
pusha
inc
xchg
adc
add
pop
xor
or
mov
rol
or
jnp
out
push
jge
test
xchg
scas
divb
les
mov
in
mov
inc
pushf
dec
sub
xor
mov
scas
sub
mov
dec
mov
into
jns
bnd
imull
idivl
out
ss
jno
cwtl
cwtl
add
into
sbb
outsl
movsl
stos
push
lods
add
into
dec
mov
pop
push
lods
xchg
adc
cmp
push
and
inc
pop
and
pop
xor
xor
stos
loope
adc
pushf
idiv
jl
scas
clc
add
push
ret
enter
pop
lods
jg
xor
mov
add
cmc
sahf
dec
adc
cmp
add
mov
sub
repnz
in
jae
sbb
cwtl
cld
pop
xor
repnz
mov
popf
xor
mull
lcall
fadds
and
xchg
arpl
cmp
jno
push
movsb
mov
shr
push
loopne
pop
sbb
or
xchg
sub
sahf
xor
fimuls
pusha
push
add
sarl
sub
movsb
cmp
ss
out
lods
idivl
mov
sbb
test
dec
inc
push
mov
aaa
mov
sub
mov
cld
push
cmpsb
insl
shlb
add
jno
int
mov
cmp
adc
out
data16
clc
mov
cmp
js
in
test
inc
adc
jg
loope
daa
frstor
lods
mov
xchg
dec
dec
shrb
jae
pusha
pop
fnstcw
or
adc
lret
dec
into
pop
lock
fsubs
dec
pop
push
dec
dec
and
push
jge
dec
dec
dec
jl
std
jecxz
out
mov
pop
adc
mov
xchg
in
adc
shll
arpl
sbb
cmp
test
mov
stos
mov
mov
or
xlat
icebp
and
xlat
mov
adc
xchg
jae,pn
push
jle
sub
cmp
movsb
bound
push
leave
repz
dec
fldl
or
push
sahf
nop
fidivs
cmc
mov
lcall
mov
dec
adc
call
push
pop
add
mov
cmpsb
cwtl
in
lods
out
push
dec
cwtl
in
cltd
dec
dec
out
xchg
add
repz
pop
jne
and
push
cli
mov
pop
push
add
sbb
scas
jb
jg
push
dec
sub
mov
pusha
fstpt
xchg
test
out
fs
jne
fimuls
push
inc
pop
iret
xchg
pop
push
aaa
emms
inc
jno
or
mov
fsubs
xchg
push
icebp
xchg
rorb
test
mov
loop
push
cmp
loopne
and
dec
add
pop
mov
cmp
ret
jno
add
mov
lods
push
and
imul
scas
in
adc
loopne
test
test
or
sbb
lcall
fistps
mov
dec
cmp
cs
pop
aam
fdivp
das
mov
fnstenv
mov
cmc
jae
lret
push
jmp
inc
mov
and
jae
lcall
rcr
dec
xor
stos
fidivrs
push
adc
cmp
sub
adc
and
sbb
insl
xor
sbb
mov
aad
test
inc
insb
mov
dec
push
push
arpl
das
inc
lds
inc
cmp
jle
test
or
cwtl
ret
jle
mov
pusha
fnstenv
ds
idiv
cmp
add
cmpsl
sub
scas
dec
and
fwait
out
popf
dec
sahf
in
das
mov
xchg
mov
push
lcall
jnp
les
sub
push
int
data16
xchg
jb
lret
dec
mov
sahf
mov
ljmp
imul
icebp
dec
mov
das
push
mov
mov
aad
cmc
sbb
mov
cmp
dec
xchg
jg
jg
lea
inc
lods
pop
inc
jae
pop
push
push
jae
fsubs
shr
sub
dec
add
out
jl
pop
cmc
pop
popf
inc
sahf
mov
add
fwait
and
addr16
je
lea
movsb
outsl
xchg
push
jecxz
sahf
mov
dec
mov
test
enter
sbb
jnp
imul
popf
jns
cwtl
aas
add
push
addr16
mov
arpl
and
test
pop
je
mov
pop
aam
insb
sbb
shrb
push
xchg
inc
movsb
sub
xchg
sbb
jg
enter
push
and
lock
notl
std
bound
push
xchg
cli
es
daa
hlt
fldcw
xchg
mov
test
out
sbb
fs
inc
test
aas
lods
loopne
enter
add
enter
adc
adc
pop
push
ret
mov
adc
aas
imul
cmc
xchg
mov
test
lcall
ljmp
mov
shl
adc
or
push
sub
xor
jno
lret
mov
sbb
jo
inc
xchg
xchg
push
xlat
push
pop
jb
adc
mov
xor
enter
sahf
or
pop
push
mov
cmpsl
inc
sarl
mov
jo
cmp
mov
pop
shl
adc
movsl
dec
mov
enter
iret
pop
out
inc
pop
aad
fwait
xchg
inc
xor
insl
xchg
adc
addr16
hlt
xor
inc
pop
push
mov
cld
mov
add
fwait
add
mov
cld
push
movsl
xchg
add
arpl
test
inc
cmp
repnz
popf
outsl
mov
rcll
and
add
or
jne
outsb
arpl
mov
dec
cs
loope
lods
jp
aaa
test
fidivrs
iret
mov
dec
xchg
cmp
cmp
push
xor
not
fidivs
pop
xlat
pop
sbb
hlt
das
das
cwtl
jmp
insl
cld
mov
adc
inc
insb
sbb
movsl
pop
or
jae
inc
loopne,pt
pushf
mov
cs
cmp
in
jo
fcompl
sub
pop
mov
cmc
icebp
mov
sbb
xchg
sbb
loope
lcall
aad
and
xchg
cmp
aas
mov
xlat
leave
in
or
xchg
clc
cmp
int
or
pop
test
mov
mov
xchg
push
aaa
xchg
jns
cmpsl
jne
mov
xor
or
push
psubd
addb
or
sbb
xchg
push
repz
mov
stos
xchg
push
push
js
mov
mov
jne
mov
and
mov
dec
xchg
fildll
test
roll
xchg
cmpsl
loopne
push
xchg
loopne
pop
rolb
push
push
jmp
orl
add
mov
xchg
pop
xor
cmp
pop
pusha
mov
pop
sahf
dec
mov
testb
fwait
test
aam
aaa
push
lds
sarl
movsl
je
arpl
cli
in
lret
sbbl
sbb
aaa
data16
std
scas
sbb
ret
mov
lret
push
sub
jle
inc
pop
addr16
mov
push
xor
adc
lret
add
xchg
inc
sub
aad
sbb
jae
jmp
lods
lret
pusha
mov
icebp
in
push
inc
dec
scas
movsl
dec
mov
cmp
cmp
test
pop
cmp
int
add
insb
push
xchg
jns
ss
pop
mov
movsl
jno
cmp
test
or
lcall
mov
test
xchg
std
sbb
and
pop
push
xorb
sbb
iret
sete
mov
sub
inc
jae
sbb
nop
add
cld
push
jns
aas
jmp
jmp
cmp
adc
mov
mov
loopne
sub
imul
popf
mov
mov
lret
js
stc
push
cli
scas
gs
adc
dec
sub
out
ds
mov
in
mull
add
push
push
arpl
sub
pop
movsb
xchg
test
cmp
leave
cmp
add
mov
sbb
fwait
jg
inc
push
aas
outsl
fs
insb
je
aad
pop
pop
inc
nopl
push
bnd
jg
push
clc
lods
xor
dec
inc
jo
push
mov
push
out
out
adc
shrl
fs
push
mov
or
addl
dec
push
push
xchg
stos
aad
adc
dec
inc
aam
pop
ret
push
sbb
add
sub
hlt
jns
sub
out
lret
xor
lock
xchg
mov
pop
sbb
and
pop
mov
mov
sub
or
ret
xor
mov
pop
cmc
jl
rolb
stos
mov
lcall
xlat
les
dec
subl
cltd
lods
adc
fwait
push
dec
inc
aaa
pop
movsl
xor
flds
cmp
cmp
je
and
adc
mov
mov
iret
into
push
adc
test
xor
mov
xor
testl
test
mov
das
mov
or
inc
dec
mov
push
pop
movsl
enter
cltd
subb
mov
dec
icebp
call
lret
fldenv
scas
push
sarb
mov
cs
sub
sahf
lods
sub
loope
test
mov
int
xchg
cmp
mov
or
je
ret
out
pushf
or
test
sub
aam
cld
out
pop
icebp
mov
add
sub
cmp
test
add
adc
call
lea
stos
cmpsb
xchg
in
mov
dec
filds
sub
pop
push
lods
push
pop
in
and
xchg
rcl
mov
pop
xchg
xchg
mov
fisttpll
lods
je
adc
sbb
dec
sbbb
push
cmp
jmp
sub
add
and
jbe
dec
jmp
mov
sbb
aad
rcll
sbb
mov
xchg
jmp
xchg
add
adc
movsb
cmpb
int
xor
popf
call
sbb
in
sti
mov
dec
ja
add
jmp
push
mov
addb
enter
shr
mov
movsl
shl
rcll
push
fwait
mov
cmpsb
sub
divb
pusha
adc
pushf
repz
shrb
inc
std
sti
mov
adc
shrb
in
push
xchg
mov
lea
aaa
loop
lods
sbb
testb
mov
dec
dec
pop
mov
repz
sbb
lds
pop
adc
out
mov
push
leave
addb
andb
stc
ljmp
ret
pop
inc
stos
aaa
mov
ds
dec
mov
cmp
mov
inc
repz
pop
fwait
inc
loop
xor
aad
movsb
xchg
or
or
js
pop
sub
cmp
ja
mov
and
push
push
xor
jo
adc
mov
inc
dec
sub
fisubrl
clc
xchg
popf
subb
movsl
popa
sarl
jp
pushf
mov
push
ds
mov
push
mov
push
inc
push
pop
push
imul
ficompl
mulb
or
inc
fisubs
cld
inc
lods
adc
imul
fistps
mov
jne
sbb
xchg
mov
int
mov
lds
xor
inc
imul
lds
jecxz
cmc
es
mov
cmp
inc
and
inc
mov
lock
dec
lret
adc
leave
pop
jmp
gs
sti
xchg
ds
cmp
es
out
dec
mov
xchg
mov
mov
shll
inc
loopne
sbb
clc
notb
inc
mov
aam
inc
stc
sub
pop
pop
add
aaa
fiaddl
sahf
fiadds
mov
aad
jmp
pusha
pushf
cmp
inc
xorl
shrb
cmpsb
clc
div
sti
sbb
mov
outsl
xchg
clc
adc
movl
mov
bnd
inc
mov
cmp
je
je
cmp
loop
push
ja
and
test
mov
or
in
sarl
sub
inc
pop
push
or
scas
xchg
mov
xorb
pop
mov
adc
inc
or
idivl
sbb
jb
sbb
lods
insb
ror
icebp
push
xchg
xchg
pop
adcb
repz
or
icebp
insb
imul
jmp
cmp
iret
movl
idiv
xor
sub
mov
fnstenv
jge
sarb
or
sub
mov
jp
mov
mov
push
sbb
les
or
and
outsl
inc
and
jne
test
dec
push
imul
movsb
std
leave
sbb
out
lock
xchg
add
mov
inc
jl
orl
fstps
mov
or
movsb
jo
ficompl
ret
jae
loopne
repnz
movsb
push
inc
ret
dec
push
movsb
push
push
pop
push
xchg
imul
push
push
jp
mov
sub
and
insb
cwtl
mov
mov
xchg
adc
fnsave
cmp
mov
sub
push
adc
pop
dec
leave
sbb
sub
cmp
into
lahf
ret
sub
mov
jle
pop
test
sub
popa
ficoms
add
outsl
xchg
fcoms
mov
fidivrl
add
cmpsb
sar
clc
xor
fcoms
in
in
fwait
sarb
adc
and
cld
sub
icebp
add
xlat
call
pop
daa
fdivr
rcrl
cli
cmpb
mov
gs
mov
push
pop
pop
jno
icebp
cmpl
sub
pop
adc
xchg
imul
mov
js
andl
cwtl
xchg
call
fld
pop
dec
xchg
aam
pop
pop
xchg
movlps
movsb
call
das
cmpsl
xor
out
mul
outsb
in
adc
ret
and
jmp
in
imul
jbe
fisubrs
ljmp
out
mov
mov
cmp
push
out
inc
mov
jb
push
sub
in
sub
mov
pusha
leave
inc
push
sub
ja
dec
cmp
lahf
outsl
in
iret
test
and
mov
xchg
mov
mov
mov
adc
push
mov
repnz
insl
ss
and
xor
imul
or
add
or
xchg
xchg
leave
jo
test
sbb
pop
sub
pop
pop
in
mov
xor
cmp
imul
inc
mov
testb
aad
lret
fstpl
inc
rorb
fs
clc
mov
sbbb
and
push
lcallw
cmp
outsl
ljmp
xchg
aaa
in
cmp
xlat
dec
mov
insl
dec
adc
ret
xchg
int3
das
movsb
enter
repz
dec
cmp
lcall
or
jecxz
call
dec
jmp
cmp
mov
call
mov
in
jp,pt
xchg
in
or
insb
into
lea
mov
and
inc
or
or
test
add
add
outsb
jae
imul
test
mov
pusha
clc
dec
rorb
clc
xor
lret
push
stos
inc
pop
test
mov
dec
cmpsl
ja
fwait
pop
pop
or
bound
inc
xchg
add
push
loopne
loop
fldenv
adc
lods
cmpl
xchg
rcl
mov
pop
mov
stc
pop
cmpsl
adc
dec
cmp
arpl
popa
shrb
xchg
stos
hlt
out
in
mov
shll
mov
jp
ss
movsb
push
mulb
stc
jbe
out
mov
cmp
test
repz
ljmp
or
cmp
adc
push
test
inc
and
mov
lea
jmp
push
dec
movsb
pop
cmp
sbb
adc
movsl
jo
mov
pop
aam
icebp
in
mov
cmp
int3
aam
mov
xchg
inc
adcb
sub
outsb
aas
rolb
mov
mov
lock
add
mov
mov
fidivs
test
std
pop
or
mov
in
ficoms
mov
and
sti
xor
fcmovnu
and
cmp
inc
insb
dec
pop
cli
jne
sbb
fsub
stos
test
pop
add
jne
sahf
ret
icebp
pop
aaa
xchg
fildl
fwait
xor
add
ja
int3
ret
aaa
add
xor
dec
jno
fisubrs
jg
nop
or
mull
dec
sbb
dec
out
inc
repz
imul
inc
mov
and
push
dec
xchg
jecxz
fisubrs
in
add
pop
cli
inc
and
test
mov
orb
mov
lahf
mov
mov
fnstenv
js
and
xor
test
loope
cmpsb
addr16
es
or
lret
fimull
aaa
int3
cwtl
jmp
xor
or
std
mov
lods
add
ja
aaa
call
imul
dec
cmpsl
iret
mov
add
mov
sub
sbb
add
dec
fwait
mov
xchg
add
sbbb
clc
movsl
xorb
out
jo
lea
mov
int3
or
dec
xchg
pusha
mov
repz
mov
push
mov
jg
insl
inc
inc
mov
xorl
xor
shrl
dec
jbe
inc
adc
test
dec
add
dec
call
mov
out
mov
popf
inc
pop
xchg
sbb
gs
mov
divl
xchg
xor
or
stc
cmp
xchg
test
loop
shll
and
dec
xchg
push
pusha
cli
insl
rep
sbb
std
lret
aam
inc
fs
stos
xchg
xor
and
shlb
xor
pop
cld
sbb
pop
xchg
push
mov
push
out
mov
fisttpll
cmc
pop
sbb
jl
jg
inc
lcall
mov
sbb
shlb
adc
test
enter
out
adc
add
jo
inc
add
pop
ret
mov
pop
or
mov
push
mov
fs
nop
inc
push
js
loope
test
addb
xchg
in
or
inc
into
hlt
jnp
sub
xor
cmp
cmp
sub
mov
and
loop
mov
xchg
lds
fsub
push
sbb
test
js
lcall
or
shlb
adc
lock
loopne
add
es
test
ret
fsubs
pop
jmp
shrb
lock
xchg
xor
imul
rcll
repz
scas
and
nop
sar
jo
sahf
movsl
js
mov
call
mov
sbb
cmp
js
or
outsb
pop
aam
sub
movsb
cmp
xchg
sub
add
addr16
shlb
push
cwtl
dec
and
ret
mov
test
bound
push
mov
popf
xorl
outsb
lock
inc
loope
in
add
bnd
cli
mov
inc
push
and
xchg
fldpi
mov
mov
rorl
repz
mov
jbe
lcall
jecxz
cmpb
test
mov
sbb
gs
pop
jnp
mov
mov
push
lods
adc
sahf
andl
jae
dec
xchg
dec
loope
test
xchg
ret
out
ret
rol
dec
xchg
xchg
in
or
icebp
mov
cmp
jae
aas
lcall
xlat
push
aaa
mov
jmp
dec
arpl
jno
inc
bound
es
mov
inc
dec
and
cld
movsb
dec
mov
int
mov
lahf
mov
clc
mov
icebp
pop
xor
imulb
sbb
shlb
in
ror
pop
icebp
aas
adc
fisubs
pushw
dec
push
fs
les
mov
sbb
shrl
std
fwait
jno
push
aam
jmp
imul
xchg
sarb
fisubrl
clc
filds
outsl
stc
stc
or
jbe
jno
xchg
xor
mov
or
xchg
cmpsl
push
mov
xchg
insl
add
repnz
mov
cmp
push
gs
int
xor
sbb
repz
aas
xor
fcompl
pop
int
jae
jg
lods
into
popf
jge
fucom
ljmp
jecxz
fldl
cmp
cmp
push
sbb
jmp
or
add
out
cwtl
das
add
sub
adc
shrb
add
xchg
cli
add
rolb
orl
aaa
cmpsl
stos
aam
imul
call
push
lcall
iret
cwtl
popf
xor
push
sbb
cmp
cmpsb
fldt
test
adc
xchg
popf
sbb
or
push
jns
cltd
loopne
dec
out
insb
les
and
sub
jl
xchg
mov
ja
mov
les
idivl
out
sti
jmp
push
fwait
inc
add
sub
testl
jb
xchg
xchg
aam
out
sub
pusha
push
mov
shrb
and
mov
fldt
xor
fiaddl
sahf
fldl
push
and
cmp
lds
mov
sub
out
push
mov
push
pop
jo
mov
test
pop
je
fidivrl
cltd
hlt
mov
hlt
mov
data16
orb
jmp
loopne
pop
mov
lahf
outsl
lods
push
dec
pusha
subl
lret
scas
addr16
outsb
outsb
cmp
push
mov
js
jge
xor
ss
fs
dec
stc
lret
sahf
pop
or
mov
dec
mov
leave
xchg
mov
and
rolb
mov
cmpsb
rcll
jecxz
add
bound
ss
dec
cmpsl
xchg
icebp
cmp
rcrb
jle
sahf
mov
ss
insb
js
xlat
call
or
sub
mov
adc
movsl
into
fbld
push
leave
js
rolb
mov
les
xlat
pusha
loop
push
pop
std
dec
xor
sbb
inc
aas
sbb
popl
mov
jb
push
getsec
jb
arpl
pop
pop
fimull
lods
push
pop
fstpt
rolb
out
nop
aad
popa
pop
lods
das
add
jmp
mov
push
pop
mov
jno
sub
int
shl
xor
mov
mov
ljmp
aaa
int3
je
andl
in
loop
cltd
frndint
in
jbe
test
rclb
enter
addl
mov
or
jg
ficompl
sub
and
xor
xor
xor
inc
test
into
pop
jle
stc
inc
adc
dec
xchg
and
pop
sbb
je
lret
pop
das
lret
loop
push
addr16
inc
add
pop
dec
xor
aad
nop
jp
sub
add
rcll
cmp
clc
cmc
test
add
scas
inc
jmp
or
fstpt
xlat
daa
sub
mov
jmp
adc
and
push
shl
test
and
dec
call
inc
sbb
mov
loopne
lahf
xchg
call
add
and
push
jno
xchg
inc
xor
aad
cli
and
sub
mov
test
pusha
inc
dec
stos
aad
pusha
jnp
mov
add
adc
jl
mov
rorl
test
adc
pop
pop
sbb
cmpsl
popl
push
nop
cld
mov
mov
and
or
mov
decl
mov
adc
hlt
cmp
inc
pop
faddp
or
dec
xorps
inc
decl
int3
dec
inc
movsl
into
and
push
lcall
adc
mov
dec
filds
pop
sub
or
cwtl
shlb
push
imul
ds
mov
push
push
test
jne
scas
sub
cwtl
scas
int3
out
add
jae
data16
cmp
fld
mov
rolb
sbb
fmuls
in
and
cmp
insb
xor
cmp
mov
in
rorl
movsb
jnp
cmp
mov
test
into
call
push
pushf
clc
pushf
pop
xchg
and
inc
xchg
cmp
adc
movsb
inc
stc
jnp
packsswb
loopne
hlt
or
and
jno
in
jbe
mulb
in
mov
lods
inc
or
pop
sarl
out
mov
mov
push
mov
xchg
xchg
jl
pop
out
aad
lahf
lret
rclb
int
add
andb
xchg
pop
enter
out
xor
clc
or
adc
test
mov
sub
mov
jo
repz
faddl
or
mov
insl
adc
call
ret
and
jo
nop
or
pop
lock
mov
add
inc
fisubrs
stos
adcb
mov
xor
fwait
mov
js
xor
and
jl
ja
xchg
adc
mov
shrb
and
insl
xchg
inc
mov
mov
xor
push
fsubrp
popf
add
cmp
cmp
inc
push
js
sti
sub
fidivrs
xlat
inc
cmp
add
fcomp
ret
cmp
test
or
xor
lret
sbb
ds
out
lea
call
mov
xorl
or
lods
je
cli
clc
dec
shr
into
aam
sarb
sbbb
cmp
lahf
leave
scas
mov
xchg
scas
test
dec
sub
and
adc
jae
movl
jo
mov
mov
movsb
jnp
sbb
out
iret
mov
jne
inc
repnz
xor
les
pop
loopne
sbb
cmp
or
mov
mov
jnp
cwtl
inc
adc
xor
sub
inc
push
enter
adc
aad
frstor
jge
out
scas
scas
inc
lcall
mov
and
inc
rcll
push
ret
jns
pop
jnp
adc
or
cwtl
push
and
sbb
adc
fsub
loopne
rclb
inc
mov
adcl
lret
inc
mov
insb
xlat
loopne
mov
fimuls
movl
mov
push
popa
das
fucom
push
mov
cltd
icebp
cmp
iret
dec
repz
push
mov
add
and
leave
lock
mov
fmull
out
xor
or
ss
cmp
repnz
xor
insb
dec
call
fbld
leave
dec
shlb
mov
shlb
loop
movsl
mov
dec
jle
and
mov
dec
in
jbe
jo
repnz
inc
inc
pop
mov
add
cmp
std
mov
mov
hlt
or
adc
adc
popa
inc
adc
stos
mov
outsb
arpl
outsb
ljmp
dec
scas
outsb
fldenv
je
fnstcw
dec
jae
jb
fnstcw
out
jns
sbb
int
les
insl
and
imul
movsb
repz
sbb
jp
xchg
je
and
mov
push
test
xchg
sbb
dec
popf
or
fdivp
call
xchg
inc
dec
cmp
sbb
inc
mov
fistpll
sub
push
dec
test
adc
push
test
inc
cmp
sahf
sub
mov
inc
repnz
add
sub
cmp
sbb
xor
test
ss
shr
paddsb
inc
adc
in
mov
jg
lds
test
lods
xchg
and
outsb
push
je
mov
sbb
jbe
sti
sub
sub
fstpl
pop
xor
lret
imul
push
loope
loop
into
push
pushf
dec
lcall
push
fiaddl
jle
cltd
mov
fucomi
jg
xlat
fcoml
sbbb
mov
push
jecxz
mov
add
mov
push
pushf
sub
stos
lret
push
fnclex
ja
jb
sbb
adc
lock
in
ja
out
mov
pop
dec
mov
enterw
push
or
push
jle
idivb
cltd
xor
cld
jl
enter
inc
test
adc
fdivrp
add
mov
cmp
sbb
popa
push
cmp
jle
ljmp
xor
add
pusha
nop
pop
jno
pushf
push
xor
mov
add
fcompl
repz
jp
mov
subl
arpl
adc
adc
mov
add
adc
dec
push
adc
aam
jecxz
jno
int3
fstpt
pop
sub
push
and
dec
insb
jge
cwtl
jo
sbb
into
adc
inc
mov
jae
inc
cmp
popa
jne
cmovbe
pop
fwait
jge
lcall
xor
aam
out
lds
notb
adc
aad
decb
jp
xor
ret
jmp
test
mov
pop
xor
or
ror
out
sti
or
push
int3
xchg
sub
sub
fdiv
mov
insl
dec
jns
stc
dec
push
in
fdivl
call
cltd
nop
push
iret
lret
cmp
mov
mov
mov
xor
in
dec
push
in
and
mov
adc
mov
shrb
mov
shll
xchg
fs
dec
sbb
rorl
mov
mov
hlt
popf
inc
pop
inc
orl
and
and
mov
insb
adcb
xchg
jmp
mov
cltd
daa
lods
push
mov
repnz
mov
jne
xchg
xchg
lret
sbb
mov
sahf
mov
sub
mov
inc
nop
cmp
movsb
add
lods
mov
enter
mov
cmp
mov
je,pt
les
test
cmpsb
dec
jmp
popf
cwtl
lds
sbb
jnp
jge
xchg
pusha
jge
jp
std
nop
test
sub
cmpsb
fstps
push
xlat
or
mov
cmpsw
data16
and
jmp
dec
fistl
and
scas
test
add
mov
push
pop
push
inc
std
ret
int3
repnz
lret
xor
mov
rorb
shrl
loope
ds
stos
inc
mov
jg
js
sbb
lds
sbbl
std
lahf
in
sti
mov
imul
out
or
add
xchg
mov
lds
jns
into
pushw
scas
add
pop
mov
mov
pop
or
push
sbb
xchg
stos
movsl
out
or
add
mov
shl
adc
inc
and
int
adc
pop
xor
in
cmp
sub
scas
ljmp
and
dec
mov
gs
mov
lcall
hlt
dec
cmp
loopne
add
dec
inc
std
addr16
jnp
push
sub
in
mov
cmp
inc
adc
orl
lock
mov
jle
iret
into
mov
fisubrl
mov
dec
jae
pop
adc
pop
pop
mov
cmc
sbb
nop
mov
popa
push
mov
add
fsub
dec
test
ja
andl
pop
stc
inc
and
jae
lea
into
add
pop
or
idivl
notb
test
add
lock
ds
fld
pop
mov
xchg
push
into
adc
lea
sahf
xchg
int
xchg
xor
clc
xor
mov
pop
dec
inc
and
adc
lds
or
out
mov
fsub
fimull
fidivrl
rorl
gs
and
dec
cmpl
das
adc
push
in
sahf
js
out
in
xor
or
dec
dec
out
stos
and
and
add
mov
cwtl
xor
fisubs
jl
adc
sub
cmpl
sbb
sbb
mov
je
xchg
ret
push
jmp
mov
cmp
dec
testb
inc
imull
jl
mov
popf
repz
fiadds
call
pop
xchg
fadd
lahf
push
push
pop
pop
std
add
stos
lcall
pusha
js
push
push
in
rorl
inc
dec
push
xlat
push
push
xchg
dec
insb
cmpsb
repnz
xlat
hlt
push
cmpsb
roll
dec
in
cltd
test
addb
pop
xchg
push
jo
xchg
loop
mov
push
repnz
jo
adc
lods
mov
lock
cmpsb
push
dec
jle
sbb
dec
jb
iret
mov
add
fstl
lock
mov
jp
cmp
xor
mov
inc
aad
aad
bnd
pop
adc
popa
fmulp
mov
cs
push
divl
inc
fsub
mov
ret
dec
popf
clc
mov
adc
fsubr
sahf
iret
adc
dec
dec
mov
in
lock
loop
test
daa
xchg
nop
jb
cmp
lcall
jge
mov
fistpll
jnp
sub
scas
rcrl
cmp
movsb
dec
das
add
xchg
add
leave
cmp
xchg
notl
pop
shl
shrb
adc
cmp
mov
sbb
fs
xor
lahf
xor
push
int
inc
loop
cmp
sbb
cmpl
dec
shll
iret
sub
int
push
and
push
mov
xchg
aaa
jb
jg
loop
shr
inc
sub
pusha
adc
adc
test
test
loopne
pop
sub
mov
in
dec
cs
lret
nop
xchg
or
mov
xor
xor
movsl
adc
lea
sahf
jne
add
dec
imul
lock
rorl
cltd
pop
mov
lret
jo
adc
adc
jo
pushf
mov
inc
stos
fdivrl
inc
pop
pop
and
stos
mov
flds
outsb
inc
add
fsubs
adc
outsb
lock
roll
xor
cmp
aam
enter
pop
mov
lock
jle
push
xchg
testb
jmp
mov
jmp
jl
lods
lcall
cwtl
inc
sahf
clc
test
xor
cmpsl
popa
call
repz
jae
mull
aam
mov
dec
jae
mov
mov
cltd
xor
xor
sbb
add
ja
pop
mov
xchg
in
cmp
sub
mov
jmp
cmp
sbb
mov
and
sbb
outsb
pop
cmpsl
aam
adc
ja
jnp
mov
popf
sbb
lret
je
psubw
pop
daa
add
jbe
addr16
xchg
dec
mov
sbb
xchg
lock
and
or
ret
fiadds
lds
sub
add
ljmp
sub
call
cs
jecxz
cli
jl
cli
xor
enter
cmc
cltd
in
ret
inc
xor
sbb
xchg
adcl
divl
test
sub
adc
sti
iret
test
xchg
out
inc
aaa
faddl
adc
fidivrl
mov
pmaddwd
sbb
stc
dec
loopne
ret
jb
movl
fwait
sahf
sbb
daa
mov
dec
xor
es
cltd
adc
rclb
xchg
pop
jmp
xor
mov
mov
test
jl
jnp
pop
fdivl
ror
sbb
pushf
movsb
shlb
cld
mov
and
dec
mov
pop
push
inc
push
out
mov
add
and
mov
in
fwait
popf
das
das
out
cmpb
xor
je
das
enter
add
arpl
in
pop
mov
inc
add
dec
inc
push
pop
lcall
sbb
cs
cwtl
out
clc
jo
or
add
movsl
in
push
ret
dec
jne
mov
push
sbb
push
jecxz
cmp
imul
fsubrs
insl
add
rolb
cs
out
xor
inc
les
sub
das
sub
ds
ljmp
scas
cwtl
out
shrl
cld
mov
stos
aam
lods
jno
stos
aad
inc
iret
ror
fildl
test
fiadds
lock
xor
insb
out
iret
in
ja
sbb
mov
add
imul
xor
mov
lods
movsl
ret
in
repnz
aaa
pop
fs
adcb
or
lcall
add
push
repz
lods
imul
jbe
jecxz
addb
out
icebp
aaa
cld
dec
push
fs
pop
jecxz
jnp
or
dec
pop
pop
imul
sbb
mov
cld
test
adc
dec
je
mov
pop
push
inc
xor
or
xor
in
mov
ss
icebp
mov
mov
lods
dec
jge
sbb
ds
gs
cli
and
mov
xor
pop
les
fistpl
jl
or
cmp
mov
out
fstl
mov
mov
sti
test
jl
xchg
mov
vaddss
out
cmc
stc
mov
mov
andb
movsb
out
faddl
stos
cs
and
cwtl
pusha
popf
enter
into
and
fldl
pminsw
outsb
lock
popf
push
mov
mov
in
sub
inc
lods
push
xchg
in
mov
cmp
cld
iret
fwait
mov
pop
dec
pop
filds
xchg
decl
push
fwait
in
mov
test
lds
scas
addr16
jb
xor
les
addb
icebp
and
lahf
stc
in
ljmp
mov
aad
sub
jo
or
xor
sti
fcoml
pop
xor
mov
in
test
cld
ret
push
cmp
push
out
or
jle
mov
fcmovnu
and
nop
lods
jge
push
or
test
cmp
movsb
lahf
adc
pop
jge
xchg
lret
dec
jns
test
cmpsb
repnz
mov
mov
and
mul
pop
aaa
nopl
jl
pop
lret
popa
cli
test
mov
andb
mov
xchg
jo
mov
je
mov
fimuls
jo
stos
xchg
and
jl
xchg
leave
cmp
stos
in
movsb
pop
lcall
flds
inc
lahf
test
jl
pop
jp
dec
add
add
jmp
sbb
pop
jbe
cwtl
add
in
pop
push
cs
inc
mov
lret
jne
push
mov
out
neg
adc
ss
xchg
add
data16
jmp
cmc
adcb
xor
rol
nop
jle
repnz
add
pop
inc
sub
xchg
dec
ret
pop
sub
and
add
cmpsb
or
aad
imul
gs
jno
or
test
mov
sarb
push
jo
push
xor
fistpll
mov
in
mov
das
and
rcll
push
mov
sbb
adc
lret
sub
pop
scas
fs
ljmp
fistpl
rcrl
nop
les
lcall
dec
mov
sbb
push
aas
std
dec
inc
mov
xchg
pop
adc
call
mov
int
mov
aad
cmpsl
pop
pop
dec
repnz
stc
inc
call
pop
jecxz
mov
push
sub
out
add
inc
sub
lret
bound
fldenv
sbbb
out
sub
push
stos
adc
nop
jp
and
add
mov
scas
ret
jmp
dec
cltd
mov
sbb
insb
mov
mov
cmp
push
mov
ja
adc
push
or
push
add
or
dec
test
xchg
dec
xchg
mov
int3
mov
das
cmp
xchg
push
dec
xor
dec
or
mov
dec
inc
out
into
mov
fscale
cli
filds
add
xor
repnz
fiaddl
mov
push
in
adc
dec
inc
jp
jecxz
mov
or
orl
dec
fnstsw
adc
inc
lret
dec
sub
pop
inc
mov
add
inc
sub
push
mov
xchg
jge
xlat
sbb
cld
push
ss
push
mov
cmp
adc
gs
cwtl
arpl
mov
imul
imul
dec
out
test
outsl
jae
shlb
cmp
mov
test
pushf
les
scas
repnz
ret
mov
aaa
sbb
notl
mov
mov
jno
ret
out
sbb
out
mov
xchg
jl
xchg
adc
test
into
mov
xor
popa
sbb
mov
push
test
mov
call
bound
mov
repz
cld
pop
pop
xor
xchg
cli
imul
xor
ss
or
push
jno
mov
push
out
mov
mov
mov
daa
imul
xchg
cwtl
adc
insl
loope
std
shr
pop
add
outsb
adc
nop
add
dec
data16
pop
arpl
push
xchg
fcmovnbe
cmp
cmpsl
push
fiaddl
push
scas
int3
jecxz
rcrb
push
push
cmp
jnp
in
mov
mov
pop
and
inc
xor
ret
pushf
mov
sub
stc
pushf
xchg
add
nop
pushf
js
mov
mov
sub
gs
cmp
mov
shr
cltd
jae
inc
jno
cltd
leave
mov
fsub
lcall
mov
dec
push
jnp
adc
dec
add
push
pusha
xor
jecxz
mov
adcb
or
mov
xor
les
cmp
gs
lods
test
xchg
daa
sub
in
insb
mov
mov
xor
out
inc
ret
lcall
test
icebp
and
movsb
sub
add
xlat
rol
sub
flds
mov
repnz
aaa
insl
pop
imul
pop
push
mov
cmp
pop
test
lahf
pusha
jp
sub
cmp
sbbb
cmpsb
xchg
sbb
add
lods
xlat
mov
fst
or
mov
lahf
pop
or
es
lods
add
lea
pushw
pop
gs
push
test
adc
mov
mov
dec
xlat
es
les
test
xchg
lods
shll
popa
mov
testb
dec
mov
jg
shll
inc
inc
enter
inc
inc
pop
mov
cli
dec
iret
sbb
mov
sahf
das
popa
out
outsl
inc
arpl
xor
cmovl
and
and
inc
sbb
cli
mov
data16
cmpsb
mov
adc
mov
shlb
lea
sbb
lret
sub
jnp
push
divb
xchg
xchg
stos
xchg
sti
inc
mov
shl
mov
dec
and
jbe
rclb
pop
add
mov
ret
loopne
pushf
sub
add
sub
cmp
jnp
sbb
pop
mov
and
xorl
in
or
push
fmul
mov
adc
pusha
and
dec
mov
or
jge
lods
aas
mov
insb
ljmp
inc
jmp
lds
mov
dec
imul
push
mov
pop
adc
subl
sarb
iret
in
dec
mov
cmp
dec
and
push
or
or
pop
addl
lret
push
enter
aaa
jle
xchg
jg
movsl
xor
mov
inc
in
fcmovnu
mov
stos
cwtl
add
mov
and
outsl
xlat
inc
call
gs
out
out
scas
inc
or
mov
dec
mov
push
push
lods
push
pop
cmp
subl
rcrb
rclb
cwtl
dec
push
gs
add
aad
jae
iret
movb
test
test
adc
int3
cmp
pop
jg
mov
inc
addr16
es
jmp
or
imul
cltd
push
les
out
sarl
sar
jns
mov
aad
mov
je
stos
imul
sbb
test
repnz
mov
icebp
ljmp
pop
xor
out
daa
or
push
mov
addr16
pop
mov
sub
pop
lret
jo
xor
xchg
iret
cmpsb
inc
inc
cs
cmp
sbb
dec
pushf
sti
cmpsl
mov
clc
js
mov
jg
cmp
les
mov
rcr
adc
std
aad
inc
pop
stc
in
xor
mov
dec
testb
xchg
imul
push
icebp
cmp
inc
dec
xchg
ja
outsb
dec
test
psubusw
insl
cwtl
mov
addb
out
sub
and
mov
sahf
xor
adc
push
ljmp
mov
and
push
xchg
lea
inc
or
popf
inc
ja
jg
ret
lods
pop
icebp
or
cld
pop
push
xchg
jo
jns
in
shl
loop
rcll
mov
daa
repnz
lock
xchg
lahf
pop
movb
pop
test
cmp
adc
lods
mov
ret
add
adc
daa
aam
int
cli
arpl
adc
mov
fldenv
lahf
pop
in
ss
jle
xchg
daa
pop
out
int3
xchg
jo
sbb
test
orb
cwtl
sub
jae
add
in
cmp
ret
sbb
sub
out
test
stos
inc
push
pop
jl
jbe
jne
mov
scas
pop
hlt
adc
in
repnz
jp
mov
mov
cli
shll
imul
lock
inc
lds
inc
cmpb
jecxz
pop
lret
lahf
ret
add
in
jp
movsb
inc
into
mov
mov
mov
inc
add
shrb
add
lret
jno
dec
addb
mov
sbb
mov
je
clc
or
fists
imul
inc
cltd
repnz
fdivl
or
push
mov
pop
fchs
xor
out
out
movsl
mov
sahf
push
notb
sub
outsl
inc
nop
loop
inc
pop
jno
scas
ljmp
dec
repz
stos
das
insb
add
divl
and
mov
mov
stc
ffree
filds
inc
out
jecxz
sahf
repz
call
test
in
es
cmp
xor
mov
orl
test
flds
or
fidivl
int3
jge
push
in
adc
int
fwait
cld
rorb
inc
stos
in
xlat
aad
cmp
cmc
sub
imul
bswap
lret
mov
sub
xchg
and
sbb
fisubs
mov
add
orl
rcr
mov
xchg
push
shrl
movsb
xchg
jns
sub
and
dec
fisttps
cld
jmp
and
and
adc
ficoms
roll
sub
sub
mov
xchg
push
sahf
js
add
pop
xchg
dec
out
gs
out
roll
lret
pushf
jbe
add
inc
add
sub
jae
ficoms
mov
popf
and
dec
xchg
popa
mov
dec
xor
je
sub
insl
dec
in
int3
stc
subl
jnp
mov
xor
pusha
mov
mov
add
fldenv
mov
xchg
hlt
xchg
and
roll
iret
push
ss
adc
movsb
add
cltd
mov
mov
xchg
pop
lds
mov
dec
inc
in
fcmovnbe
movsb
jge
lods
mov
shrl
cmp
ret
pop
mov
pusha
jecxz
inc
arpl
add
fcompl
jbe
leave
sbb
jge
mov
and
sub
ret
in
push
pop
js
out
repnz
enter
xor
test
in
pop
lret
fdivs
pop
loope
cwtl
lahf
decl
inc
inc
xchg
pop
dec
cli
or
sbb
xrelease
cmp
mov
xor
ss
mov
inc
out
lea
mov
pop
push
mov
pop
daa
inc
ljmp
and
sbb
in
out
mov
mov
pop
aaa
pop
cld
dec
jne
xor
cld
out
ljmp
lods
xchg
push
pop
mov
inc
gs
inc
pop
xchg
inc
scas
push
clc
int3
dec
ss
pop
test
xchg
fcmovnbe
mov
xchg
roll
insl
or
push
rolb
repz
in
in
sub
xchg
dec
mov
into
push
xchg
stos
lret
shll
dec
mov
mov
idivb
xchg
and
jmp
repz
pop
repnz
mov
dec
stc
fucom
mov
cmp
mov
sbb
rorb
lret
js
ljmp
in
repnz
xor
and
and
leave
and
daa
loop
add
ret
xchg
out
mov
push
and
shrl
push
pop
jb
cs
mov
and
mov
lcall
adc
xchg
inc
mov
jg
pushf
mov
xchg
inc
jne
xchg
mov
mov
jb
int3
adc
jp
dec
jmp
test
rcl
xchg
test
mov
xor
mov
sbb
sahf
mov
ja
and
fisttpl
inc
dec
mov
xchg
jb
sbb
aam
cmp
xor
lcall
loop
or
shlb
popl
mov
rorl
sbb
jecxz
jnp
mov
fs
das
inc
cld
mov
cli
jno
and
jb
and
testb
insb
hlt
mov
es
int
loop
lock
xchg
and
mov
inc
aad
sub
and
fwait
insb
jae
cmp
dec
pop
add
in
movb
xor
inc
iret
ja
fidivs
mov
out
mov
test
mov
cwtl
dec
jnp
adc
ljmp
les
sahf
sarl
xchg
js
cmp
sub
decl
sbb
subb
push
cmp
int
jge
jp
or
jl
add
negl
add
aad
fimull
nop
sub
shlb
dec
gs
push
out
pop
popf
cmp
mov
cld
scas
incb
xlat
cs
jb
push
sub
mov
pushf
lock
fimull
mov
jecxz
fdivr
push
pop
movsb
dec
cwtl
xlat
pop
ja
jg
out
repz
ret
jecxz
xchg
imul
arpl
and
and
mov
movsl
lahf
push
mov
pop
dec
lahf
add
jge
xchg
mov
sbb
pushf
mov
sahf
aad
adc
in
lea
mov
stos
mov
adc
pop
shl
ficomps
test
into
mov
scas
xchg
inc
out
into
and
iret
jnp
push
ret
shrb
iret
mov
fistps
sbb
lock
pop
test
nop
dec
cmpsl
xchg
in
cmpb
addr16
insb
jge
and
int3
sub
je
push
pop
pop
xlat
cmp
popa
mov
ss
add
push
ret
out
jb
add
lret
repz
push
mov
adc
imul
push
cmpsb
add
mov
jnp
aad
xchg
cmp
pop
sbb
jne
sub
cmp
mov
mov
sub
add
sar
aam
xor
cmp
and
lods
pop
insb
add
fs
mov
push
repnz
jbe
mov
daa
xor
sub
jp
xchg
repnz
outsb
in
bnd
xchg
fs
lds
cld
mov
sub
cmpsb
cmp
inc
inc
cmp
cs
inc
roll
push
cmpsl
push
jb
inc
jle
loope
imulb
in
ret
hlt
rcr
shlb
cs
add
les
cmpl
and
out
xchg
push
mov
xchg
fidivs
adc
dec
stc
or
mov
leave
push
popf
jnp,pt
inc
stos
xchg
iret
or
je
lea
jb
outsl
arpl
and
lods
cmc
cmpb
inc
loope
fiadds
adc
sti
inc
sub
adc
sahf
push
xor
int3
jbe
add
xor
leave
ljmp
mov
and
jp
movsl
or
mov
imul
xor
ja
jb
jnp
aaa
pop
jl
jns
or
xchg
push
dec
mov
sbb
out
cli
or
cmp
test
nop
gs
and
in
repnz
mov
mov
cltd
jae
jmp
cmc
jp
sarl
jnp
movsb
scas
push
and
pop
cltd
mov
jns
push
push
lods
fdivrl
add
fimull
jge
mov
lock
pop
movsb
sbb
push
or
push
mov
scas
adc
ljmp
imul
inc
fildll
xlat
lea
inc
enter
xor
push
and
dec
fidivrl
pop
int
mov
xor
mov
pop
aas
test
sub
adc
push
push
and
ljmp
orb
adc
dec
andl
push
cmp
mov
mov
jge
mov
mov
xor
sbb
imull
push
lcall
pop
pop
int3
shll
xor
dec
popa
jne
and
jno
mov
in
pop
adcl
cmp
fisttpl
cmp
mov
fisttpl
dec
sar
in
fcompl
mov
je
sub
mov
rcrb
cli
sub
outsb
inc
dec
in
sub
icebp
int3
js
jge
notb
cmc
insb
dec
lods
mov
pushf
cltd
or
inc
je
shlb
jge
cltd
dec
test
mov
ds
dec
inc
out
mov
scas
cld
outsb
fisttpll
stc
js
call
jnp
cmp
cld
fisttps
mov
imul
and
push
nop
das
insl
sahf
leave
xchg
mov
aad
pop
pop
adc
inc
and
arpl
push
lahf
mov
stos
repnz
and
fbstp
cmpsl
push
int3
mov
lock
add
push
in
and
rol
jg
inc
pop
jp
mov
push
or
das
mov
cmp
mov
sbb
xor
dec
jmp
push
adc
test
in
mov
and
mov
pop
push
xor
js
fdivrl
mov
js
stc
dec
ljmp
nop
xchg
xchg
or
mov
les
mov
mov
stos
xor
loope
cmc
mov
mov
out
into
scas
mov
xor
or
or
dec
mov
jno
iret
leave
dec
fstps
push
rol
int
xchg
cmp
add
push
mov
aaa
push
aam
cmpsl
pushl
add
clc
cmp
inc
or
inc
ljmp
cmc
scas
cs
dec
clc
or
rorl
push
mov
jecxz
pop
mov
cmc
add
and
cmc
jne
sub
lds
arpl
jmp
rep
lds
dec
cmc
ja
dec
mov
push
jle
and
fdivs
fs
fstps
ja
dec
repnz
lods
mov
adc
add
sbb
and
jns
inc
fs
jb
mov
outsb
xchg
and
xchg
lock
imul
nop
lret
pop
sub
icebp
inc
call
sbb
mov
lret
push
push
clc
cmp
fcoml
cli
xchg
push
and
cld
pushf
inc
fsubrl
out
mov
xlat
daa
cmpl
adc
push
hlt
pop
xor
ret
ret
mov
nop
cwtl
add
test
cltd
mov
hlt
ret
and
sbb
add
mov
aad
fs
push
xlat
mov
jmp
idivl
or
insb
dec
mov
fmulp
fistl
lock
pushf
test
hlt
ja
ds
and
xchg
mov
dec
out
pop
imul
loope
inc
popa
jl
sbb
inc
mov
popf
push
adc
popa
xlat
xchg
ja
jb
ficompl
sbb
ds
in
fidivrl
in
cmp
fisttpl
aas
mov
je
mov
push
shlb
loope
pause
cmp
in
pop
mov
jo
sbb
jo
mov
pop
jbe
mov
mov
movsl
in
add
iret
js
pop
int
outsl
fmul
fwait
in
jl
xor
adc
jl
mov
inc
pop
or
dec
push
mov
clc
inc
inc
add
repnz
fcomps
add
pop
stc
add
jg
cmp
jg
mov
stos
pushf
pop
imul
inc
call
dec
jns
pop
fst
lret
cli
lret
or
stos
in
popa
sti
mov
jg
scas
or
movsl
dec
into
xor
popa
inc
push
mov
fadds
xchg
out
aad
test
add
sbbb
shll
sub
xchg
mov
add
dec
ds
jle
leave
fdivl
insl
ss
jns,pt
icebp
out
or
mov
out
xor
xlat
cmpl
mov
mov
stc
cmp
inc
call
xchg
fcomps
cmc
movsl
js
jbe
rorl
ja
fwait
push
leave
fdecstp
jle
lret
and
xchg
mov
and
push
inc
ljmp
sbb
dec
or
mov
dec
mov
stc
mov
push
das
sbb
xor
insl
xor
cltd
std
push
call
inc
adc
test
shr
hlt
push
rorl
ljmp
add
jns
ds
and
ja,pt
sarb
sbb
stos
and
bound
or
movsb
push
rorb
mov
ror
rcrl
out
push
jl
sub
cmc
repnz
mov
push
ds
xor
xor
add
mov
pop
inc
mov
ja
sahf
jae
pop
lods
pop
mov
cmp
mov
mov
daa
aaa
cld
xchg
loopne
dec
mov
jmp
cwtl
cmpl
clc
inc
push
xor
fcoms
or
call
adc
fwait
in
aam
jmp
jbe
dec
and
xor
pop
xchg
mov
in
stc
or
push
mov
mov
push
pop
movsb
sub
call
leave
dec
inc
scas
subb
pop
jecxz
dec
jns
inc
int3
adc
jnp
je
leave
test
xchg
sbbb
mov
mov
and
cld
dec
add
sbb
push
ret
pop
addr16
loopne
sahf
lds
dec
jl
in
lret
bswap
sahf
sbb
rcrb
mov
scas
xor
mov
push
scas
pusha
dec
pop
sahf
xchg
and
stc
js
lret
mov
xor
mov
popf
fiadds
sub
jb
sub
test
push
cli
xchg
or
jb
nop
jo
and
lds
cmc
push
add
insl
push
insb
fists
jno
sbb
jb
rcrb
incl
out
xchg
cmpsb
cli
aam
lahf
sub
push
cwtl
xor
xor
adc
int
push
or
pop
and
movsl
or
ljmp
mov
sbb
cmpsl
and
push
repz
ja
sbb
pusha
xchg
mov
rcrb
arpl
push
cmp
push
push
sbb
push
js
enter
test
mov
dec
out
dec
sub
cmc
ss
mov
mov
movsb
mov
int3
aaa
mov
dec
cmp
mov
fldl
fcmovnu
jge
das
adcb
pop
das
xchg
std
imul
xchg
shll
pop
inc
addb
and
scas
xchg
fcoms
stos
int3
roll
aad
in
xchg
out
or
and
out
adc
hlt
xchg
hlt
mov
or
xchg
test
dec
enter
lds
push
ret
cltd
adc
push
sbb
and
cltd
push
mov
add
lahf
or
loope
popa
inc
pop
lcall
xor
push
push
popf
fstps
pop
xchg
sahf
dec
iret
xchg
dec
popf
and
movsb
test
xor
rclb
xchg
mov
inc
ror
divb
add
lret
fistpl
and
aam
ljmp
push
push
enter
pop
dec
lea
aad
sbb
sbb
in
daa
xchg
jg
nop
push
rorb
iret
adc
fiaddl
fs
outsl
stc
push
pop
dec
or
aas
mov
scas
cmp
inc
insl
add
pop
jne
mov
add
jl
ds
jae
aad
sahf
xchg
loopne
mov
fwait
xchg
repz
adc
xchg
mov
and
cwtl
sub
xor
pushf
in
jl
jp
dec
jp
adc
mov
xchg
in
or
push
test
add
cmp
test
cmpsl
cmp
popf
out
xchg
mov
jnp
mov
mov
cld
inc
cltd
add
push
fcompl
jl
loopne
sub
or
shll
leave
stos
xchg
xchg
push
jbe
jp
xchg
fwait
or
mov
cli
sbb
int
sub
nop
inc
mov
aad
pop
insb
mov
xchg
in
xor
data16
std
std
ds
sub
inc
outsb
das
add
hlt
negb
push
je
js
pushf
and
or
aad
into
ljmp
nop
inc
roll
in
push
and
in
xchg
or
filds
or
sub
push
sub
pop
xor
pop
mov
ja
scas
aad
mov
jnp
push
sbb
push
mov
jmp
xor
push
rcr
pop
sbb
fcompl
aam
lret
arpl
sarl
lds
jb
cltd
imul
and
xor
idivb
mov
test
mov
out
out
cmp
add
fildl
inc
rcll
inc
adc
out
js
ret
jmp
sub
fs
dec
lahf
jl
push
lds
or
neg
add
fisubl
lods
cmp
and
subl
mov
rorl
adc
dec
fsubrp
sahf
scas
and
cmp
nop
jno
mov
inc
pop
push
in
xor
sub
xchg
testb
jo
sbb
fildl
mov
leave
dec
xchg
enter
aas
test
add
and
stc
or
mov
test
mov
enter
pop
loope
mov
stos
mov
xchg
push
stos
lock
lret
pop
xor
iret
notl
call
nop
ret
cs
iret
lcall
xchg
push
xchg
jge
fwait
xchg
repnz
cmp
stos
push
push
push
sahf
test
pop
jecxz
lea
pop
jg
data16
gs
stos
test
sbb
movsb
pusha
jno
and
xorb
fs
test
ficoms
insb
push
add
jl
pop
loope
pop
push
mov
mov
into
imul
imul
cmpsl
dec
lock
jmp
jge
sahf
les
js
cmpsl
inc
push
inc
mov
ret
mov
jbe
inc
loop
in
es
cli
cmp
mov
push
das
add
fcomp
cs
imul
mov
push
inc
jo
push
and
mov
ja
pusha
sti
pop
lea
ret
mov
xor
ja
push
cld
xchg
sub
pause
fidivl
rolb
xchg
shl
lods
jmp
push
adc
inc
mov
mov
test
adc
adc
or
sbb
sbb
lds
movsb
loope
pop
hlt
mov
dec
push
jnp
and
lock
xchg
sub
or
sbb
daa
sti
xor
mov
or
and
add
jmp
and
outsl
mov
int3
jg
pop
mov
add
stos
adcl
scas
mov
xchg
xchg
inc
cmp
mulps
icebp
hlt
pop
jb
lods
insb
div
movl
cmpsl
aaa
iret
xchg
pop
repz
mov
imul
idiv
loop
les
mov
pop
push
ss
sbb
inc
xor
in
xor
mov
and
jbe
pop
mov
pop
aas
lea
aam
nop
mov
xchg
add
movsb
mov
jno
shll
out
push
iret
cmpsb
mov
orb
push
cmp
pop
jle
adc
and
jl
push
cmp
adc
jb
push
cmc
out
pop
outsb
leave
fiadds
add
mov
mov
mov
inc
enter
xor
cmp
adc
cmpsl
out
cltd
inc
cmp
nop
mov
loop
cmc
or
pop
mov
stos
xchg
jmp
cli
inc
aad
jl
dec
das
dec
mov
mov
pop
inc
mov
imul
or
mov
lods
jb
cmpsl
cmpb
push
mov
sahf
xor
pusha
mov
xchg
cmp
push
cmp
insl
repz
cmpsb
jb
fwait
inc
pop
jl
loop
into
fs
cld
stc
call
xor
inc
ret
ljmp
mov
daa
jmp
push
adc
js
mov
or
xlat
add
dec
xchg
mov
pop
mov
das
dec
sub
or
in
test
sbb
add
addr16
or
outsl
pop
and
sub
adc
dec
cmp
lock
sub
mov
inc
fistps
xor
adc
rcrb
mov
cltd
push
cwtl
xchg
pop
mov
mov
sti
push
and
shrl
in
call
bound
inc
leave
mov
cwtl
popf
mov
lahf
scas
sub
sahf
pop
mov
jl
xor
fmull
xchg
ret
push
inc
mov
daa
or
sub
and
je
push
shll
mov
dec
xchg
cmc
add
movsl
dec
addb
xchg
dec
or
stc
test
aas
cmp
dec
mov
sub
and
xlat
pop
pusha
jnp
add
add
pop
int3
sbb
pop
add
xchg
pop
lret
cli
cmp
and
and
inc
jno
je
push
xchg
rcrb
mov
sbb
mov
enter
sarb
iret
fisttps
adc
mov
imul
loope
xchg
cld
inc
ret
adc
pop
in
mov
add
rorb
and
lahf
push
push
mov
decl
movsl
clc
out
notl
xor
sub
dec
sbb
sahf
jb
dec
push
ja
sub
shr
ret
mov
pop
cmp
jg
jae
or
and
sbb
push
jg
ret
sub
mov
jmp
jp
inc
repnz
and
sbb
hlt
xor
mov
xchg
bound
dec
mov
rorb
pop
aad
cmp
repnz
cmp
mov
adc
cli
rorl
cld
jecxz
rclb
adc
jno
pop
and
hlt
jp
add
add
jno
mov
stc
ljmp
fdiv
andl
cmp
mov
adc
orb
jmp
pushf
add
sbb
hlt
dec
fidivrs
stos
mov
sub
outsl
push
out
fidivrl
sbb
and
sub
pop
test
xorl
mov
ffree
xor
sbb
add
inc
adc
mov
mov
mov
call
and
mov
dec
pop
push
jb
pushl
mov
pop
cmp
data16
lcall
out
fnstcw
inc
shl
and
sarb
pop
xchg
xor
mov
jge
mov
stc
cs
cmc
lock
push
xchg
jle
ja
pop
outsl
es
call
mov
shll
loope
loop
jge
mov
fs
push
out
inc
fs
inc
add
enter
xchg
cmp
push
mov
mov
fisttpl
in
xchg
rcrb
push
cmp
xor
test
inc
call
sbb
repz
push
fldl
mov
adc
shr
sbb
mov
idivl
jbe
pop
rorl
jmp
lcall
test
xchg
push
ror
xor
mov
pop
push
pop
sub
std
data16
jp
push
mov
sub
pop
popl
pop
test
and
orb
xchg
pop
fsubs
mov
xor
and
xor
in
lret
shll
lock
jmp
lret
lds
das
jnp
fcoml
push
addb
add
enter
je
or
inc
pop
add
roll
mov
leave
scas
icebp
adc
add
sbb
addr16
sub
mov
ljmp
sbb
mov
xchg
xchg
gs
and
lods
add
or
lcall
mov
fldt
jecxz
or
lods
xchg
in
lcall
adc
ja
popf
outsl
repz
mov
cmp
push
call
sub
mov
stos
xor
hlt
xlat
mov
sti
mov
inc
xor
negl
mov
mov
data16
push
test
and
inc
into
jns
out
mov
icebp
cmc
xor
pop
add
fwait
dec
jl
rol
xor
xor
push
push
push
add
mov
inc
lods
cmp
mov
xchg
stos
and
cld
std
xor
lods
cli
pop
jl
add
push
mov
ss
sbb
insb
push
jge
jmp
adc
inc
out
xchg
bound
inc
sahf
cmp
movsb
push
enter
dec
insb
sbb
scas
mov
pop
mov
xchg
shlb
inc
mov
or
cmp
lret
fidivs
into
mov
and
jle
pop
int
sarl
mov
mov
push
std
and
add
repz
inc
mov
sub
xor
xchg
pop
je
pop
fs
cli
cmp
mov
mov
mov
mov
jns
or
cpuid
repnz
out
adc
inc
sub
adcl
cmp
xchg
cld
loopne
mov
xchg
stc
inc
inc
loop
push
call
add
mov
mov
push
xchg
out
fnstcw
push
cwtl
dec
popa
dec
ljmp
stc
xchg
jo
test
cs
scas
mov
shll
loope
and
dec
dec
andb
bound
adc
es
jmp
aad
aad
add
loop
cmp
cmp
divb
sub
sub
rol
mov
cmp
insl
jle
add
int3
rolb
jne
aas
jns
sbb
push
push
movsb
sbb
repnz
dec
dec
test
xchg
jae
and
jb
add
mov
in
testb
testl
mov
lods
insb
lods
mov
mov
adcb
aad
or
adc
and
idivl
nop
scas
int
into
popa
inc
cmp
or
rorl
mov
out
cmpsl
popf
rcrb
pop
nop
push
sub
jne
aad
inc
dec
das
clc
xchg
push
xorb
scas
iret
mov
stos
mov
xchg
movb
lods
ss
ret
xlat
jle
repz
mov
int3
jle
pop
mov
jle
pop
inc
cltd
xor
jge
out
stos
sbb
or
sub
imul
into
push
mov
jno
rorb
cmpsb
cmp
call
inc
cmpb
mov
pusha
xor
sar
fildl
xchg
in
push
mov
jo
cs
sar
mov
stos
xor
lret
jl
mov
mov
jecxz
lods
push
pop
or
push
mov
psadbw
or
sbb
movsl
insb
xor
add
ljmp
adc
pushf
xchg
adc
test
adc
inc
pop
xor
and
pop
gs
pop
push
mov
jg
inc
enter
frstor
dec
scas
push
xor
pop
icebp
adc
mov
test
push
cld
fimuls
rcrb
pop
pop
and
in
jp
fisubrs
jecxz
cmp
jo
cmp
pop
adc
lds
hlt
aas
mov
int3
dec
sbb
and
loope
fwait
call
je
adc
pop
mov
jle
cmp
popl
jg
mov
daa
push
push
and
cmp
aas
les
push
push
mov
out
sub
outsl
orl
push
loope
out
call
in
inc
testl
jge
mov
mov
cmp
sbb
sti
dec
enter
push
and
loop
xchg
sbb
scas
std
sub
bound
cmp
nop
jns
mov
jecxz
shll
xchg
pop
xchg
adc
push
cmp
or
test
push
in
stc
jl
testb
into
cmpsb
movsb
lcall
adc
movsb
int3
lea
cwtl
xor
push
loope
mov
jle
fisttps
shl
mov
loop
sub
pop
data16
arpl
adc
xchg
sarl
stc
sub
rcl
lret
mov
lea
scas
hlt
mov
xchg
add
mov
and
push
insb
mov
and
jns
sbb
lds
inc
xchg
jmp
lock
push
mov
lock
out
bound
insl
test
push
in
inc
jp
push
xor
and
outsl
jns
inc
mov
iret
cmpsb
sbb
or
not
lahf
ret
and
mov
push
cmp
mov
addb
jne
push
sbb
enter
lods
cmp
pop
mov
add
je
mov
mov
jnp
pop
sub
lret
xor
loop
pop
data16
lock
add
jnp
or
lahf
jo
add
pop
inc
jns
rcr
mov
inc
pop
movsb
ds
lahf
or
push
cs
dec
mov
dec
out
es
lret
dec
ss
jmp
mov
xor
sbb
pusha
pop
push
adc
xchg
lret
mov
jl
jno
xchg
inc
stc
stos
mov
fmul
adc
push
iret
test
fstpt
xchg
push
in
ljmp
out
pop
xor
pop
gs
and
aaa
and
push
outsl
mov
ret
inc
and
adc
adc
xchg
repz
lods
inc
mov
push
das
in
xchg
scas
mov
mov
mov
push
and
lret
pop
xchg
in
fwait
lcall
imul
mov
imul
cmp
aad
xor
cmp
adc
cmp
mull
xor
mov
and
xor
cmpsl
inc
mov
inc
aaa
stc
jmp
xchg
in
adc
xchg
outsb
add
call
jmp
cld
sarb
dec
pusha
inc
xchg
ds
repnz
lcall
addr16
mov
das
pop
arpl
pop
xor
call
mov
pop
mov
mov
and
pop
aam
outsl
cmp
std
pop
jo
cmpsb
divb
jns
xchg
outsb
rcrl
mov
std
jns
xor
je
js
jae
mov
je
cmpsl
mov
push
rolb
popf
inc
push
outsb
ljmp
imul
roll
ret
in
notb
rorb
ja
adc
shrb
xor
push
adc
push
inc
pop
in
mov
pop
test
jle
int
in
mov
push
mov
push
lea
xchg
inc
fnstcw
cmp
into
inc
add
dec
rclb
lea
pop
inc
lds
insb
jecxz
inc
inc
mov
inc
jo
add
pushf
mov
push
sub
mov
jno
pop
addl
jg
clc
cs
push
aaa
out
mov
mov
jbe
decb
mov
iret
cmp
pop
pop
jmp
mov
cs
popl
jbe
mov
lods
inc
mov
icebp
rcrl
lcall
xor
and
fwait
push
ret
push
mov
push
xor
xchg
cltd
lds
add
test
stos
jne
loop
add
fcmove
call
fcmovbe
add
and
out
js
cmp
mov
testb
or
sub
shrb
cmp
add
cmp
add
xchg
mov
ficoml
xchg
mov
scas
xor
sbbb
jg
insb
daa
int
mov
insl
pusha
add
cmp
sbb
jno
test
mov
cli
pop
fwait
sti
insl
mov
xchg
imul
imulb
sti
mov
inc
sbb
and
loopne
nop
xchg
idivl
js
lahf
xor
cmp
inc
or
ret
push
lock
popf
clc
cli
or
aad
nop
sbb
add
or
and
fisubs
push
sub
test
andl
jge
push
xchg
push
das
fidivrs
jns
sarl
stos
enter
cmp
xor
sarb
sbb
je
fwait
or
fidivrs
cmp
rorb
es
leave
ds
jno
add
test
jg
mov
inc
mov
add
xor
xchg
adc
push
arpl
xchg
jae
xchg
in
pop
fldcw
add
cld
enter
push
mov
addl
xor
mov
movsb
dec
push
lea
call
daa
jle
leave
in
jmp
js
jp
fadds
jmp
mov
stc
push
call
adc
popa
push
ror
sbb
out
sti
sbb
jge
aad
fsubrs
or
mov
lahf
ror
in
jg
fistpl
outsl
sub
xchg
dec
or
add
lret
cmp
push
pop
xor
call
jg
mov
fisttps
data16
cmp
cmp
jge
jmp
sarl
sti
movsb
jae
call
das
rcrl
inc
push
out
mov
xor
push
inc
push
sahf
push
adc
jne
pop
mov
mov
mov
push
leave
jno
cltd
shrl
sub
and
out
aam
popa
inc
mov
in
je
fs
pusha
sub
cli
js
arpl
xor
outsl
xchg
mulb
xor
xchg
push
mov
pop
xchg
mov
call
cmp
mov
sub
cltd
mov
shl
push
jmp
mov
testl
popf
mov
sub
jg
sbb
or
cmp
jmp
dec
sbb
mov
pop
lcall
testl
cli
add
call
dec
cmp
mov
cld
or
mov
jl
imul
lds
data16
jmp
xchg
cmp
lods
call
ds
shrb
aam
pop
xchg
mov
fs
out
fadds
push
cmp
je
jo
neg
fiaddl
sub
inc
xchg
pop
out
mov
lret
mov
push
in
mov
lods
mov
cli
rcl
cmc
jecxz
stc
stos
fildll
in
push
xor
les
test
adc
movsb
sbb
xor
push
outsb
push
adc
test
inc
aaa
cli
adc
and
add
mov
in
or
add
cmpsl
iretw
pusha
hlt
push
pop
shll
fidivs
jge
jl
mov
cli
and
dec
or
push
imulb
sbb
lcall
pushf
int
push
xor
cmp
lock
es
jmp
call
lods
lods
in
mov
push
testl
push
loop
fwait
aam
pushf
adc
mov
add
ret
pop
jb
stos
into
cmp
fisttps
add
cwtl
lock
test
int
cwtl
enter
cmc
bound
add
adc
jae
loope
or
nop
mov
int
sbb
js
orb
imul
sub
xor
or
push
shlb
cmp
int
fbld
cld
xchg
je
cltd
lods
scas
ljmp
dec
sar
ss
jecxz
imull
icebp
xor
ljmp
in
cmp
pop
aaa
gs
bound
cld
pushf
insb
mov
test
fnstcw
repz
shrl
xchg
pop
je
add
out
add
inc
mov
fsub
mul
roll
pop
imulb
or
push
in
fbstp
movsb
pop
sbb
sub
andb
hlt
lods
enter
mov
mov
cmpl
inc
cwtl
sti
es
and
pop
or
inc
insl
jmp
mov
push
mov
jo
insl
mov
imul
cmp
arpl
out
mov
or
push
adc
test
adc
sbb
rorb
push
cmp
nop
pop
rorl
arpl
call
push
clc
and
xchg
fcmovne
cli
lods
inc
dec
sbb
dec
fs
add
mov
and
test
es
jmp
filds
jb
mov
mov
inc
pushf
mov
movsb
in
xchg
das
mov
mov
mov
mov
mov
mov
rcl
bound
cmpsb
dec
jg
adc
das
inc
adc
loopne
out
daa
dec
icebp
xchg
aaa
mov
jecxz,pn
dec
outsb
inc
addb
stc
orb
jle
lret
rorl
and
fwait
mov
pop
xchg
push
jnp
push
rolb
adc
mov
jmp
repnz
xchg
fnsave
mov
pop
mov
sub
jns
xchg
arpl
or
fs
mov
js
outsb
in
dec
jmp
dec
mov
mov
jge
pop
std
push
cmp
iret
fiaddl
out
mov
das
movsb
imull
inc
jbe
mov
push
test
xchg
dec
movsb
mov
call
and
out
fisubrl
stos
and
push
fisttpl
aas
and
pop
insb
inc
sub
mov
repz
cmpsl
mov
jne
subb
dec
not
mov
push
fdivl
xor
adc
ljmp
iret
fstpt
jno
or
xchg
fdiv
push
mov
out
jecxz
sbb
push
xchg
or
mov
add
mov
ret
sub
lods
sbb
sbb
scas
nop
pushf
xchg
cwtl
mov
lea
inc
inc
cltd
fsts
sti
fisubrs
cld
fcmovu
int3
sti
xchg
sbb
test
ljmp
outsl
mov
push
imulb
sbb
fdivrl
loope
xchg
test
push
leave
mov
lock
jne
adc
into
pop
repnz
sbb
mov
sub
iret
hlt
mov
stos
addl
mov
sub
call
and
loope
inc
dec
iret
cmp
lea
xor
sub
xchg
adc
jl
sbb
dec
ss
mov
divb
fcoms
into
add
loope
fsubl
lea
mov
mov
mov
jl
cmp
mov
xchg
gs
sbb
ficoms
insl
incb
addr16
fs
fdiv
fisubs
loopne
fnstsw
es
lds
sub
testb
cmp
jb
mov
xchg
cmpl
es
cli
popl
push
pop
out
xchg
push
loop
sub
fldenv
jl
and
adc
and
orl
xchg
mov
cs
and
addr16
fbld
dec
xor
incl
loopne
or
or
mov
insl
push
sahf
loope
jo
cld
jmp
xor
jl
pop
shrl
xor
icebp
and
sub
dec
inc
adc
push
daa
js
push
xorb
mov
mov
imul
sub
and
dec
add
pop
ljmp
out
ret
out
out
xchg
sbb
movsb
icebp
lret
lods
inc
jp
in
dec
jo
dec
cmp
cwtl
pop
mov
or
xlat
xor
lahf
cmp
xchg
scas
pop
int3
fisubrl
in
or
jnp
push
lahf
call
sub
jnp,pn
inc
push
push
pop
mov
mov
es
push
fldcw
enter
ss
mov
push
imul
stos
xlat
mov
jmp
mov
xor
stc
pushf
adc
xchg
sub
sub
or
out
aam
rcl
jecxz
sbb
mov
cmp
mov
cmpsb
mov
stc
inc
int
cs
loope
mov
popa
or
dec
lret
push
andl
mov
mov
mov
decl
push
xchg
jle
xlat
sarl
mov
pop
pop
push
popf
enter
push
mov
ja,pn
xor
dec
cld
jp
ljmp
adc
jecxz
xor
jae
repnz
movsl
and
mov
pushf
jnp
loope
mov
jne
mov
fs
sbb
int
loop
inc
cs
xrelease
cmp
enter
mov
jbe
subb
ds
ret
sub
dec
repnz
fninit
outsl
push
divb
jnp
call
add
into
mov
inc
sub
aad
repz
aam
pop
push
mov
lret
imul
push
jnp
cltd
pusha
lret
sbb
imul
sub
aam
jo
cmpsb
pop
push
jp
loopne
jne
push
aad
out
mov
aas
leave
push
adc
enter
dec
xchg
cmp
jo
rclb
mov
lds
std
xchg
mov
outsl
nop
push
sbb
mov
setae
sub
pop
scas
pop
test
inc
dec
jbe
pop
xchg
pop
jo
mov
in
popa
cmpb
xor
std
add
idivl
lds
paddsw
gs
pop
mov
ds
xchg
daa
or
mov
lock
jmp
dec
out
and
imul
pop
cmp
mov
cmp
jae
mov
or
add
mov
les
cmpsl
sbb
imul
mov
mov
je
xor
lea
xchg
aam
das
and
jb
mov
cs
adc
sbb
outsl
pop
add
jl
push
negl
lret
outsb
jle
push
pop
dec
je
stos
int3
mov
fimuls
mov
repz
dec
iret
mov
add
sahf
jnp
pusha
mov
bound
sbb
loopne
push
shl
jg
push
int
sbbb
fstl
push
jge
pop
in
loope
pop
jl
inc
cwtl
in
adc
adc
and
mov
mov
sbb
pop
jl
mov
jl
or
and
lea
sub
cmpsl
subb
scas
or
mov
fmull
push
bound
pop
fiaddl
lods
popa
dec
sub
and
add
pushf
in
fisubrs
sub
or
inc
into
aaa
jnp
cmp
inc
fmuls
sub
rcl
lods
adc
test
cmp
or
ds
mov
pop
or
outsl
fcoms
push
pop
jmp
inc
push
repz
inc
inc
push
addb
mov
scas
pop
lret
rcr
mov
dec
or
js
and
in
lahf
pop
cmovb
xor
pop
cmc
repnz
fstpl
lcall
std
sbb
cltd
jns
cs
rclb
dec
sti
mov
mov
add
fbld
jp
dec
loopne
adc
divb
rcrb
std
sub
and
je
push
in
shrl
aaa
notb
rol
xor
jg
not
and
fwait
push
sub
xchg
into
iret
insl
pop
cli
fcoms
loopne
arpl
cli
dec
insl
aas
jb
add
cli
cld
pusha
cltd
dec
fwait
pop
sti
arpl
dec
xor
sub
lods
pop
cmp
std
int
jmp
ffreep
mov
ret
in
sub
mov
fildll
cmpsl
popf
cmp
pop
or
loopne
or
mov
lods
stos
femms
add
in
dec
jo
incb
in
stos
push
and
add
cmp
mov
push
outsb
fisttpl
adcb
and
pop
push
sti
push
cmp
push
push
popa
inc
scas
or
cmp
lock
xor
push
or
lea
xlat
push
sbb
xor
xchg
pushf
sbbb
mov
add
push
jne
sbb
push
sti
jecxz
hlt
pop
mov
in
call
jl
in
ret
aad
stos
adc
ror
add
sub
cmp
sbbb
xchg
mov
sbb
push
push
packuswb
or
and
clc
mov
call
mov
push
icebp
or
fiadds
mov
roll
sbb
sub
and
inc
pop
cmpsl
push
sbb
push
mull
mov
lahf
mov
push
js
stos
out
in
add
push
test
sarl
dec
push
ret
aad
fcompl
jg
xor
pop
adc
xor
punpckhdq
in
add
lods
push
xchg
cmp
inc
xchg
inc
jmp
lea
mov
je
mov
add
or
pusha
xchg
inc
int
inc
std
lods
ror
movsb
push
push
push
imul
xchg
dec
fstp
and
ret
mov
or
sub
and
jns
push
or
dec
jae
inc
cld
push
and
lock
aad
addr16
std
mov
bound
adc
push
iret
push
cmc
push
sbb
pop
or
jle
push
ss
dec
xor
lock
push
fs
es
mov
mov
movsl
mov
test
leave
lea
or
negb
fwait
mov
call
int3
fwait
adc
mov
arpl
fnstsw
in
jecxz
sub
dec
sub
insb
sbb
ja
imul
sbb
xlat
pusha
mov
mov
and
fsubs
repnz
jge
inc
inc
jb
imul
and
shrl
inc
and
cmpb
or
adc
cmp
or
sarb
dec
loope
ss
dec
jnp
cmp
adc
jb
ret
jge
movsl
xorl
jmp
stos
lods
inc
pushf
repz
sbb
push
lret
sbb
jge
flds
idivl
and
mov
mov
lcall
rorb
cmpsl
scas
jbe
jbe
mov
jb
jns
repz
ret
xchg
mov
and
int
inc
xchg
add
test
aam
pop
xchg
xchg
popf
mov
dec
and
cmp
pop
dec
push
jne
xchg
cmpsb
popf
jno
and
pop
imul
inc
cmc
or
cwtl
or
ds
push
add
mov
and
xor
or
jbe
and
xlat
loopne
or
jae
stos
cmp
sub
sub
out
jmp
xlat
out
push
mov
mov
outsb
push
jno
xchg
push
adcl
jb
mov
jno
xchg
push
cmp
dec
adc
in
je
mov
aad
pushf
arpl
fldl
jg
push
mov
mov
mov
adc
in
or
rorb
inc
mov
xchg
pop
mov
out
call
fnstenv
xor
cmp
mov
cmpsb
aam
mov
inc
mov
cmpsl
push
les
lahf
cmp
outsb
inc
pop
jecxz
setle
hlt
or
mov
test
popa
sbbl
xchg
fidivrl
add
int3
std
repnz
or
or
mov
cmp
insb
add
or
jmp
adc
in
dec
inc
movb
int3
cmp
and
repz
test
les
pop
add
pop
mov
es
pop
adc
rcl
fbstp
jo
sbb
add
cltd
out
push
aas
popa
enter
testl
push
fwait
cmc
lret
fs
dec
or
and
fimull
in
xchg
loope
stc
fldt
xchg
aad
mov
loopne
in
cmpsb
pop
lea
mov
scas
jno
xor
mov
push
xchg
push
call
jo
decl
xor
out
js
fcoms
into
jnp
push
push
leave
mov
inc
xor
cltd
addl
inc
lods
mov
adc
xchg
push
pop
mov
push
movl
mull
outsb
pop
mov
inc
xchg
xchg
or
push
sbb
sahf
cmp
out
mov
fwait
stos
mov
mov
stc
test
fiadds
aas
lods
repz
inc
dec
sbb
inc
stc
jae
pop
inc
add
jo
jg
pop
mov
push
xor
mov
mov
fmull
into
cld
mov
push
push
xchg
loopne
test
dec
jge
fdivrl
jnp
or
aad
dec
nop
clc
pop
mov
shl
clc
jae
out
xchg
add
lret
sbb
bound
sahf
mov
pop
mov
dec
pop
mov
imul
sti
inc
inc
popf
sbb
fidivs
xchg
mov
inc
ffreep
sub
lahf
xchg
inc
mov
ljmp
lock
das
rorl
inc
repnz
xchg
pop
in
sub
les
push
mov
pop
stos
mov
jge
pop
mov
fsubrs
test
aas
mulb
push
clc
lock
mov
lds
cmp
dec
gs
adc
xor
inc
into
add
in
xchg
jle
loope
xchg
mov
sub
mov
xorl
loopne
in
fiadds
push
int3
cmpsl
pop
add
cmp
mov
mov
xor
ds
pop
sbb
aas
and
decl
ss
add
cmp
cmp
pop
sbb
mov
mov
add
pop
cmp
jne
loope
or
cmp
xor
out
cli
leave
add
mov
jbe
jmp
stos
arpl
pop
xor
stos
loopne
mov
lret
js
sub
jnp
mov
dec
mov
sub
cli
stos
xor
int
cmp
jb
dec
lahf
sub
mov
aam
mov
mov
xor
movsl
sub
lock
xor
mov
dec
lds
cmpsl
and
mov
inc
push
mov
push
shll
repz
xchg
push
ja
xchg
aam
xchg
xor
loope
jl
add
notl
jnp
test
push
sbb
rcr
xadd
pop
cmp
inc
and
ss
mov
mov
and
mov
gs
xor
lret
jmp
enter
movb
jge
out
icebp
dec
inc
or
mov
mov
ja
dec
jo
test
xor
sbb
out
xorb
cld
or
pushf
mov
cmpsb
sbbl
xchg
mov
mov
das
mov
idivb
jno
fnstcw
nop
loop
mov
jecxz
jg
clc
frstor
in
adc
int
or
jge
pop
call
pop
gs
pop
mov
imul
repnz
add
inc
daa
into
xor
cmpsb
aaa
mov
mov
push
sub
test
arpl
or
sbb
in
imul
xor
stos
jge
cmpsb
sbb
aas
dec
dec
insl
add
mov
mov
lcall
out
cmp
frstor
xchg
or
icebp
movsb
mov
mov
mov
addl
mov
popf
cs
xchg
dec
or
xor
push
lcall
mov
cmpsl
xlat
mov
mov
push
mov
mov
lret
sbb
jns
fs
inc
lds
aaa
rcl
or
mov
mov
inc
mov
arpl
add
lcall
push
cmp
pop
mov
pusha
mov
jb
and
fisubrl
cltd
lret
daa
or
sbb
sub
xorl
pushf
dec
push
jle
mov
emms
jae
jg
cmp
outsl
loop
sahf
dec
inc
add
int3
inc
lock
js
push
fnsave
pop
stc
ljmp
out
popa
lret
call
and
push
scas
add
mov
dec
aas
dec
xchg
lahf
hlt
mov
or
xchg
inc
stos
in
fs
nopl
adcb
hlt
in
push
and
mov
inc
je
aas
inc
aad
and
xchg
aad
int3
mov
mov
in
inc
addr16
pusha
xor
loopne
add
fidivrs
pop
jp
fnstcw
cmp
int3
cmp
or
les
loop
inc
sbb
stos
xor
out
icebp
sub
cmpsb
inc
shlb
ss
bound
call
mov
jecxz
je
cmp
sbb
jns
mov
jmp
sbb
sub
dec
jmp
mov
adc
push
pop
or
jne,pn
and
sbb
and
rcll
mov
outsl
jns
and
mov
enter
mov
mov
dec
mov
or
jno
adc
inc
iret
adc
fbld
jnp
sub
mov
xlat
and
sbb
push
clc
aas
or
call
insb
loope
rol
negb
gs
push
push
xchg
mov
cld
mov
add
popa
or
in
or
and
call
ret
xchg
repnz
inc
mov
fstpt
cwtl
or
pop
pushf
jb
add
add
xchg
std
mov
xor
mov
repnz
push
stos
adc
cld
test
and
and
incb
int
xor
dec
js
xchg
imul
dec
lea
xor
int3
sbb
pop
mov
mov
dec
or
cmpsb
shll
inc
jb
sbb
fisttps
inc
xor
or
mov
jae
mov
fwait
jbe
mov
mov
cli
js
sub
add
movsl
loopne
invd
jne
cmp
out
jnp
lcall
rcl
lods
xor
xor
leave
pop
call
pusha
pusha
mov
aaa
stos
jae
sbb
scas
jno
jge
sbb
dec
dec
and
decb
jnp
mov
mov
or
sti
cmp
jmp
push
clc
test
sarb
jb
cmc
or
lret
fwait
clc
adc
hlt
inc
outsl
fadd
push
sti
sub
adc
in
mov
dec
push
cmp
inc
pop
movsb
loope
dec
pop
add
scas
cmc
xchg
or
ss
js
mov
or
call
adc
sbb
mov
rorb
int
ficoms
cld
das
adc
test
mov
clc
test
gs
sbb
mov
lret
pop
imul
cmp
in
xor
mov
cld
pop
incl
outsl
xchg
push
sub
scas
mov
jae
add
dec
cmp
or
xorb
sub
and
add
fnstsw
and
js
inc
mov
xlat
pop
cs
cli
rorl
mov
push
jge
loopne,pt
ret
pop
mov
push
push
divl
aaa
outsl
push
sbb
loope
push
dec
movsb
lea
add
pop
stos
jl
in
xor
scas
adc
popl
jecxz
ljmp
hlt
cwtl
inc
lret
cmpsl
fwait
jae
jecxz
cltd
lods
cmp
add
add
repz
mov
xor
jmp
lods
sti
insb
ja
outsb
mov
hlt
mov
inc
int3
daa
sbb
xor
add
js
dec
adc
mov
xchg
notb
sti
mov
push
xor
orb
add
cmpsl
scas
arpl
inc
xchg
jl
jo
ret
arpl
cwtl
or
movsb
cltd
mov
sub
lds
add
inc
mov
jg
test
mov
int
cmovp
push
inc
and
sahf
gs
pop
adc
subb
xor
pextrw
push
add
int
or
dec
push
xchg
mov
shrb
dec
gs
das
daa
xor
inc
inc
dec
les
hlt
lock
add
jbe
jmp
push
inc
repnz
push
enter
xchg
jno
outsl
sbb
cs
push
or
mov
or
aad
push
push
xor
into
das
std
push
sbb
or
sbb
push
pop
roll
jnp
inc
insb
bound
inc
ljmp
sub
ss
or
lret
add
test
shrl
dec
es
lea
xchg
jno
dec
loop
inc
inc
ret
daa
mov
sub
xchg
in
sbb
test
xchg
ja
fcomi
ja
push
std
dec
sarb
pop
xchg
push
adcb
outsb
aaa
pop
pusha
popa
aas
decl
and
sub
mov
fldl
sub
cmc
mov
add
mov
mov
les
add
push
ja
in
xchg
xchg
js
push
xchg
fisubs
fisttpl
lock
popa
and
das
lea
dec
mov
xchg
lret
addr16
stos
jne
xrelease
cmp
push
pop
fcomp
movsl
dec
stc
ret
push
mov
in
test
int
nop
mov
pop
xor
dec
lahf
mov
push
adc
imul
into
jmp
inc
test
orl
inc
xor
xor
lcall
mov
inc
pop
mov
icebp
add
xchg
push
stos
ljmp
pop
jl
push
jmp
out
and
xchg
je
or
sbb
ja
int
fisttpll
lea
scas
loop
xchg
mov
mov
fnstenv
fsts
arpl
insb
in
mov
mov
mov
test
inc
adc
insb
cld
lahf
push
mov
std
add
add
xor
loopne
arpl
cmpsl
in
fcmovu
cmp
test
shrl
jmp
xor
mov
jmp
shlb
push
fisubs
push
aam
je
xchg
jg
test
dec
cli
cs
fstpt
pushf
nop
rcrb
mov
pop
add
dec
jmp
mov
mov
xchg
inc
insb
repnz
sbb
lods
and
out
fucom
iret
lret
cltd
insl
pop
dec
push
push
sub
push
push
push
jmp
jecxz
dec
ljmp
lods
stos
lahf
xchg
and
inc
ja
mov
jbe
rorl
xlat
ljmp
xor
push
cld
pop
out
bound
or
sbb
loop
and
adc
leave
mov
dec
push
ret
jmp
and
xchg
test
jno
xchg
call
call
in
dec
hlt
outsb
xor
cmp
xor
daa
adc
push
sub
pop
jmp
xchg
in
bnd
in
inc
repz
inc
lahf
imull
je
mov
jne
push
rcl
dec
sub
adc
or
and
fwait
call
leave
scas
sub
inc
jp
mov
push
push
movl
scas
lret
ljmp
loope
add
add
and
mov
mov
imul
inc
imulb
xor
popf
jle
les
js
subl
mov
lds
sbb
xchg
push
inc
mov
js
movsb
mov
inc
pushf
out
jo
xor
cld
adc
icebp
pop
adc
lea
pop
flds
push
mov
inc
lret
sub
push
loop
inc
divl
mov
clc
mov
push
jno
jbe
stos
pop
sbb
pop
lcall
jne
bound
lods
jno
xchg
mov
pop
pop
hlt
sub
cmp
pop
push
loopne
pop
mov
mov
inc
sub
bound
ds
lret
jbe
stos
jle
or
test
cmpb
ret
pusha
xor
cltd
mov
aam
jecxz
xchg
push
movsl
rcl
and
mov
adc
mov
test
push
sbb
test
xchg
xor
gs
xlat
pusha
stos
adc
ja
pop
out
lahf
lock
scas
movaps
or
mov
adcb
int3
sbb
mov
icebp
lahf
aam
lods
add
jmp
push
movsl
pop
sub
xlat
xor
cltd
stos
jno
pop
cmp
gs
ds
repnz
dec
or
adc
cmp
xchg
cwtl
iret
push
pop
xor
adc
mov
cs
jl
test
pop
push
xchg
dec
mov
or
xor
ret
inc
mov
dec
xor
clc
pop
test
scas
stos
scas
jns
jno
addr16
addr16
pop
popa
push
sbb
dec
repnz
xchg
jg
xchg
add
addr16
or
xchg
in
xchg
adc
cld
jb
dec
inc
jo
xchg
xchg
pop
jle
xchg
fadds
out
in
mov
repz
mull
cli
les
dec
bound
mov
cld
jno
dec
jecxz
lock
dec
je
and
or
or
stos
loopne
ds
insb
pop
fldl
dec
push
inc
sbb
push
jno
addr16
xchg
jb
jnp
shrb
fcmovne
fstps
add
xor
xchg
inc
sti
jae
pop
je
shrb
add
jle
ret
adc
dec
int3
adc
push
jne
cmp
and
fsub
sub
out
pop
mov
cwtl
shll
pop
inc
out
mov
adc
or
jl
hlt
fmull
nop
les
aaa
adc
inc
enter
lock
push
pop
xchg
sbb
push
jp
push
fstp
sub
sub
xor
lahf
loopne
nop
daa
lret
enter
mov
mov
les
js
incl
add
les
lods
rolb
cltd
test
adc
mov
out
vunpckhps
xchg
lret
cmpsb
fwait
mov
jge
in
cmp
jge
pop
out
aaa
push
repz
inc
shld
xor
adc
xlat
and
mov
scas
aaa
in
dec
push
cmpsl
daa
push
pusha
mov
mov
xchg
sbb
cmp
cmp
adc
xor
inc
rcrb
add
fldl2t
mov
popl
test
dec
and
xlat
cltd
mov
pusha
cmp
out
sbbb
mov
pop
mov
call
push
inc
xchg
push
xchg
inc
inc
adc
dec
pop
fstpl
add
imul
nop
add
xchg
inc
fs
mov
fbstp
adc
loope
icebp
jg
fwait
inc
xchg
inc
push
add
and
cli
in
iret
fisubrs
cmp
out
fstp
fstps
test
in
es
adc
pop
mov
pop
lret
call
mov
jle
add
data16
imul
jmp
jne
mov
pop
lock
pop
imul
ss
mov
in
xchg
mov
lods
lret
dec
loop
add
add
inc
std
gs
adc
sbb
js
out
xlat
adc
outsl
inc
test
xchg
sbb
jp
lahf
pop
sbb
xchg
mov
cmp
mov
dec
loope
xor
xor
or
sarl
into
lock
jnp
inc
es
aas
lret
cwtl
enter
jbe
sti
fucom
and
mov
add
repnz
jg
imul
push
mov
xor
cmp
jmp
push
cmp
inc
sub
xlat
push
call
jb
xchg
arpl
rolb
loopne
in
mov
scas
decl
add
inc
loope
mov
not
fbld
into
sbb
shr
mov
and
xor
mov
jne
pop
dec
mov
cmp
sbb
add
imul
or
dec
pusha
loop
jno
scas
leave
cmpsl
sub
and
jbe
sbb
mov
push
fsubrp
shll
fcoml
push
ret
mov
jo
lock
or
mov
loopne
jne
mov
inc
and
pop
shrb
pusha
inc
dec
addl
fwait
push
and
mov
outsb
mov
lods
mov
xchg
ret
mov
imul
dec
push
sbb
jp
and
mov
sbb
jnp
sub
cmpsl
in
enter
push
scas
sub
test
add
sub
lret
xorb
mov
mov
dec
loop
mulb
adc
jbe
int
inc
cmp
xchg
repz
add
or
outsl
sti
or
dec
pop
cmc
cmp
sub
jle
mov
mov
inc
mov
pop
mov
push
aaa
daa
cmp
jg
ja
pusha
or
icebp
push
daa
sub
sub
cmc
dec
xor
out
rcll
pop
leave
or
enter
mov
mov
data16
mov
cli
mov
int
jne
pop
pop
loope
add
hlt
sbb
pop
cmp
ja
sub
mov
xor
mov
cmp
hlt
fmuls
insl
pop
lods
addr16
xor
and
dec
test
xor
add
ret
out
aam
aas
cmovne
add
mov
mov
test
sbb
xor
fmul
mov
pop
sbb
or
fisubrl
adc
adc
divl
decb
jle
mov
dec
mov
xchg
or
in
sbbl
or
jo
jne
xchg
jbe
xsavec
xlat
in
add
rolb
xchg
rorb
mov
and
xchg
in
mov
sub
or
loop
sub
mulb
movl
rorl
mov
call
loop
ja
sub
push
dec
fwait
popf
cmp
cmp
push
std
bound
push
imul
movsl
stc
les
push
in
add
pop
inc
out
pop
add
xchg
testl
inc
mov
ret
lds
mov
sbb
push
negb
or
daa
push
push
mov
aaa
rcll
mov
pop
push
push
leave
mov
repnz
mov
scas
fwait
sbb
xchg
aad
hlt
lock
ss
and
cli
inc
xor
ja
shufps
shrb
in
xor
xor
das
mov
xchg
xchg
mov
jb
bound
lds
mov
test
mov
repnz
jmp
and
clc
add
sbb
adc
jge
cmp
jle
push
push
push
test
stos
xchg
push
inc
cmp
pop
es
inc
mov
ja
js
testb
inc
or
fldl
mov
jp
adc
es
xor
scas
xchg
dec
xorb
inc
cld
popl
imul
int3
lcall
sbb
sub
in
repz
popf
or
lcall
xchg
xchg
add
jbe
in
clc
cmp
pop
stc
call
roll
sbb
fst
ljmp
or
pop
lret
jb
and
cld
ja
pop
lea
dec
inc
sahf
stos
stos
mov
jg
mov
mov
dec
out
xchg
push
test
mov
repnz
test
mov
aam
adcb
cmc
mov
xorl
push
dec
or
adc
and
aaa
int
mov
add
jbe
pushf
lcall
inc
pop
adc
xchg
or
push
int3
lods
mov
icebp
icebp
test
out
push
test
and
fs
xchg
lock
addb
pushf
dec
test
out
jp
sub
fyl2x
cmp
xor
fadds
test
clc
int
lea
adc
pop
sub
outsb
xor
stos
icebp
bnd
add
sti
jge
add
loopne
int
cmp
mov
adc
xor
imul
iret
cmc
rol
or
test
int3
cmc
and
roll
xor
jbe
push
or
out
aaa
jb
lock
sub
jae
int
aaa
adc
lahf
mov
xor
sti
gs
das
add
lods
les
iret
add
adcb
pusha
je
les
shlb
pop
lahf
mov
sub
shlb
dec
xchg
outsb
stos
pop
cmp
and
ficomps
xchg
insl
sub
test
mov
pop
mov
sub
push
cli
ror
imul
cli
and
jno
inc
jl
imul
and
add
mov
inc
test
sub
dec
add
or
dec
add
and
test
outsl
and
dec
mov
dec
xor
and
outsl
pushf
aam
insb
icebp
adcl
sub
sahf
push
push
rcrb
inc
movswl
add
int
push
fistpll
lret
xchg
and
mov
and
inc
push
lea
ret
lock
int3
or
mov
pop
mov
and
ljmp
sub
dec
pavgw
push
push
orb
std
inc
push
mov
pop
addb
push
add
pop
xchg
test
add
dec
sbb
aad
or
or
push
or
inc
push
ret
pmulhuw
mov
inc
mov
les
mov
sbb
or
mov
lret
pop
lret
popf
dec
jg
xor
add
in
jl
clc
lret
xlat
aas
inc
push
push
adc
mov
jb
stos
jg
scas
jno
and
aam
xchg
outsb
and
add
std
mov
mov
pop
aas
xor
push
pop
jge
sti
mov
xor
sbb
mov
out
rcr
scas
xor
aas
lods
std
mov
pop
inc
cmp
jle
add
adc
loopne
push
mov
xor
cmp
xchg
ret
and
cld
rcll
mov
ljmp
popa
les
inc
dec
call
cmc
and
sbb
add
mov
and
loop
movsb
inc
pop
push
andb
sub
push
scas
jno
push
lock
inc
roll
cs
mov
stos
sbbb
icebp
mov
test
gs
hlt
inc
and
mov
cmp
movb
xchg
mov
hlt
jmp
into
ret
clc
mov
add
mov
adc
xlat
sub
orl
repnz
jg
gs
sbb
les
stos
pop
imul
bound
xchg
enter
ret
pop
shll
ret
ljmp
addr16
scas
mov
scas
adc
inc
sti
fsubs
inc
or
push
stos
test
out
das
inc
sbb
xchg
xor
lock
inc
mov
add
clc
sub
adc
cwtl
push
test
fidivrs
loopne
push
dec
insb
mov
dec
out
rol
cwtl
sahf
adc
adc
jo
mov
ss
mov
add
xchg
dec
adc
adc
cmp
das
cs
insl
dec
mov
xchg
jmp
pop
aas
xor
xor
inc
pop
add
cld
lret
xchg
xchg
adc
mov
shr
lret
es
or
mov
inc
or
idivb
sahf
aad
movsb
mov
fucomip
aas
and
fs
call
jle
cmc
stc
stc
enter
rol
inc
cli
sub
push
push
rolb
jmp
cmp
test
es
fs
mov
in
mov
sahf
aad
dec
std
mov
mov
mov
push
inc
cmp
lret
sbb
into
fsts
pop
sbb
lds
add
and
orl
aad
jmp
mull
pop
or
add
push
pop
es
xor
xor
lock
or
cs
ret
fidivl
lret
push
aas
pop
inc
xchg
sbbl
inc
pop
idivb
xchg
jecxz
sub
mov
scas
test
jb
jbe
pushl
sbb
cmp
and
pushf
mov
mov
testl
imul
xor
mov
mov
movsl
js
push
arpl
dec
loop
mov
popa
sbb
gs
mov
out
jae
gs
stos
mov
fisttpll
push
bound
sub
cld
pop
and
sub
jge
mov
dec
pop
pop
xor
or
lahf
mov
outsl
pushf
movsb
ficoml
ja
fcompl
ljmp
out
test
adc
xchg
xchg
sbb
mov
rorb
push
jle
fs
scas
outsb
std
mov
into
sahf
test
mov
ret
add
lds
cli
pop
xchg
call
sub
push
jb
jns
aad
jmp
pop
ret
incb
fst
mov
das
push
cld
push
inc
rol
mov
mov
cmp
mov
mov
imul
rol
cs
mov
lods
fnsave
ror
mov
scas
lds
and
es
je
jecxz
pop
ja
sub
add
mov
sbb
popa
clc
mov
cmpsb
rcl
popf
popa
insb
mov
popf
inc
push
xchg
iret
pop
vmovdqu
push
pop
cmp
and
pop
jo
mov
adc
dec
mov
aas
mov
out
hlt
dec
out
push
repnz
xor
xchg
insb
cmc
mov
outsl
outsb
sub
push
xchg
xchg
mov
arpl
rorl
mov
sar
mov
out
ds
popa
in
inc
lods
xor
sub
aaa
cs
add
and
mov
popf
lret
pop
push
call
xchg
push
shr
leave
addr16
add
mov
data16
mov
sbbb
xorb
std
ja
hlt
mov
jnp
movsl
inc
jmp
and
insb
cltd
inc
xor
lods
add
mov
mov
sbb
aad
jp
mov
adc
adc
subb
push
lods
insb
aas
cmp
dec
and
sbb
push
add
test
jns
es
xlat
sub
aad
das
filds
and
dec
repz
xchg
gs
dec
iret
rol
out
test
jg
out
inc
cmp
jbe
adc
fildl
test
dec
repz
lcall
call
mov
ret
mov
mov
sbb
and
mov
pop
es
seto
std
jmp
ss
loop
pmulhw
mov
sbb
shrl
fildll
ret
inc
lock
adc
out
aaa
mov
sti
ficomps
xchg
inc
dec
xchg
gs
push
mov
scas
inc
daa
xchg
push
add
xor
fwait
arpl
jno
push
push
push
cs
mov
enter
dec
push
daa
cmp
add
cmpsb
push
pop
out
push
mov
je
push
stos
mov
and
dec
arpl
movsb
inc
adc
mov
pop
aam
xor
mov
shll
lahf
or
xchg
ror
xor
add
lods
adc
xchg
fimull
aas
and
xor
dec
fwait
jno
in
mov
dec
out
insl
iret
loop
adc
adc
sbb
ja
xor
pushf
xlat
addr16
mov
rcrb
data16
rcrl
test
cmp
or
cmp
sbb
repnz
sub
jg
orb
ljmp
stc
cs
js
mov
repnz
rolb
pop
sbb
cmp
sub
mov
ds
out
leave
lods
shlb
lods
cmp
push
leave
les
andl
adc
shrb
movsb
push
sbb
or
popf
popf
mov
rorl
cmpsl
pop
iret
test
sarl
int3
test
lds
cli
dec
pop
lds
push
imul
loop
in
shrl
fwait
and
hlt
out
dec
fidivrl
arpl
and
or
inc
inc
adc
pop
shll
lret
adc
call
pushf
push
dec
jge
mov
popa
clc
mov
adc
out
sbb
sti
mov
add
jne
xor
rcl
shlb
inc
je
push
in
or
xor
adc
jb
movsl
pop
mov
jg
adc
inc
mov
out
fnstcw
pop
test
ret
call
jl
xchg
fwait
dec
loopne
sbb
jecxz
xorb
push
xchg
rorb
inc
pusha
sub
inc
imul
push
mulb
push
push
popf
out
mov
lock
inc
and
push
repz
sbb
out
xchg
divb
cwtl
and
lcall
xchg
insb
pop
fisubrs
jne
outsb
xor
pushf
adc
push
les
dec
in
daa
adc
hlt
daa
iret
cmp
flds
mov
mov
insl
mov
sbb
int3
popl
fdivr
mov
call
sbb
in
and
outsl
fsubl
cwtl
clc
invd
jbe
in
imul
jo
cwtl
and
test
fdivr
add
rcll
jae
in
scas
daa
addl
xchg
push
xor
test
das
and
mov
sub
out
pop
xor
jmp
or
aaa
cmp
int
jecxz
insl
mov
hlt
int3
xor
adc
sarb
adc
ret
mov
in
rcl
sti
sbbl
xor
jmp
shrl
int
xor
lock
xchg
mov
jb
jg
adc
push
call
loope
test
rorb
sub
push
jns
cmp
cmp
push
fisttps
and
popl
adc
pop
cmc
jae
jl
mov
mov
sub
adcl
adc
adc
mov
sub
pop
aad
add
inc
push
fwait
nop
dec
jmp
dec
daa
mov
cmpsl
inc
clc
dec
lret
stos
xor
pop
xor
cld
div
xor
push
test
mov
push
sub
jge
fistps
dec
fmul
icebp
lcall
or
imul
ficoms
push
adc
insl
sbb
jle
xchg
mov
and
or
out
xchg
pop
pop
pop
ljmp
cli
mov
scas
adc
scas
dec
dec
lea
mov
ja
es
sub
or
jg
dec
mov
cmp
jmp
jp
inc
mov
xor
dec
test
sbb
in
jns
js
cltd
fsubp
std
dec
push
mov
cmc
push
sbb
xchg
pop
mov
xchg
adc
es
or
xchg
into
icebp
lcall
mov
pop
push
in
das
or
aaa
out
add
sub
movl
in
out
in
mov
sbbb
mov
addr16
mov
push
ret
xchg
ss
ja
outsl
das
adc
adc
and
mov
gs
mov
test
mov
test
cmp
jno
aaa
fimuls
data16
add
add
lods
inc
cmp
test
xchg
xchg
adc
dec
mov
es
mov
inc
or
xor
or
lea
cmpsl
add
lock
xchg
sti
fcoml
xchg
add
push
jae
fnstsw
cmpsb
xchg
ret
out
jne
imul
dec
mov
xlat
xchg
mov
or
test
pop
xor
jae
and
dec
mov
sarl
dec
mov
pop
iret
test
mov
gs
mov
inc
mov
mov
imul
pop
pop
add
xlat
push
inc
or
lods
xchg
and
push
daa
lods
mov
or
pop
ja
pop
jb
or
sbb
xchg
cli
in
bound
and
rcrl
push
stos
mov
js
xor
lds
aad
adc
out
fistpl
insb
push
lods
mov
mov
push
sbb
lea
push
pop
add
out
jmp
enter
jb
test
inc
mov
popf
jne
sbb
jbe
and
mov
jp
push
inc
jno
rcrb
sbbb
daa
add
ljmp
xchg
inc
mov
push
pop
es
mov
pop
push
je
and
cwtl
and
insb
inc
adc
sub
push
pop
sub
imul
sahf
and
xor
jbe
rcl
xchg
movsb
xlat
ljmp
push
and
sub
mov
add
add
nop
cld
call
cmpsl
fsubs
test
andb
cmp
int
mov
mov
or
inc
les
in
cwtl
inc
in
sub
inc
fimull
jnp
mov
scas
and
ret
pusha
jl
insl
insb
test
inc
sbb
xchg
mov
out
bound
inc
xchg
lahf
sub
xchg
mov
xor
sbb
enter
jns
dec
pop
sub
fwait
push
scas
lret
push
mov
push
icebp
pop
dec
inc
jne
inc
pop
xor
roll
adc
aad
addb
stos
push
in
jp
cli
mov
les
inc
in
aaa
clc
xchg
imul
bound
andl
mov
adc
pop
xor
sub
ret
mov
not
imul
jnp
orb
xchg
dec
jb
push
push
dec
dec
aad
outsl
repnz
jb
mov
repz
push
xor
lahf
inc
sbb
test
into
cbtw
xchg
subb
fs
inc
fidivrl
jmp
stos
and
sub
ret
loopne
pop
mov
andl
pushf
sbb
add
add
movb
lret
sahf
pop
je
in
fnsave
movsb
pushw
loop
xchg
dec
inc
stc
sbb
push
stc
stos
push
sbb
add
jge
mov
arpl
sbb
dec
jg
enter
js
sbb
ja
sbb
jne
sti
push
test
and
adc
popf
xchg
sbb
mov
adc
sbb
add
int
inc
clc
cmp
iret
dec
or
aas
mov
stos
leave
xor
and
and
sbb
out
lret
gs
jl
xchg
mov
fidivrl
repz
adc
mov
sti
mov
mov
mov
mov
icebp
mov
inc
dec
cmp
ds
sub
and
push
xor
dec
fwait
andb
mov
lods
sub
mov
add
xorl
shll
push
push
push
bound
mov
cmp
mov
jp
icebp
xchg
insl
cltd
jp
jl
ljmp
stos
add
push
mov
mov
js
fstpt
pop
mov
xor
mov
ret
leave
arpl
jo
ret
lahf
outsl
jmp
cmp
cmp
cmpsb
jbe
bound
xchg
jmp
decb
rorb
shrl
ljmp
nop
jmp
lods
inc
outsb
xchg
xchg
cmp
jnp
iret
stos
aam
cmpsl
aad
pop
mov
insl
mov
mov
mov
mov
ret
push
push
xor
lea
mov
mov
xchg
les
mov
push
push
fildll
dec
add
and
pop
cs
icebp
testl
inc
cltd
iret
je
rcl
inc
cmp
push
ret
aad
popf
cmp
sbb
jecxz
pop
or
inc
sbb
xor
paddsw
test
pop
inc
pop
jns
fimull
leave
mov
adc
divb
inc
jno
push
lods
scas
mov
lock
pushf
repz
jne
mov
mov
push
ficomps
mov
sti
out
ja
pop
cmp
cmp
pop
cmp
add
test
test
pop
lahf
daa
mov
mov
add
outsb
stc
push
xor
fisubrl
sbb
outsl
hlt
push
cmp
and
xchg
test
ret
mov
popf
push
and
cmpb
xchg
test
xor
xchg
mov
shll
jmp
xchg
jbe
xchg
shrl
sub
sub
leave
loope
mov
stos
fimuls
sub
mov
mov
pop
push
call
mov
xchg
ljmp
out
sbb
adc
aam
cs
out
pop
ss
aad
mov
or
jp
popf
dec
dec
leave
rcrb
int3
cmpsb
jg
sbb
mov
in
pop
xchg
inc
in
dec
js
test
fcoml
popa
adc
pop
mov
into
and
shl
sbb
mov
pop
inc
fwait
mov
jp
push
leave
mov
pop
mov
fmuls
jne
xchg
sub
movsb
cmpsb
xor
sahf
mov
sbb
lret
cmp
adc
push
shll
sahf
jbe
adc
in
jae
insb
aam
dec
loop
jmp
jnp
xchg
ljmp
dec
mov
mov
add
dec
addl
pop
or
cld
push
push
in
mov
add
or
sbb
test
cli
xchg
jge
test
lock
sbb
dec
or
dec
xchg
jmp
leave
stos
jb
pop
imul
out
addr16
in
lahf
iret
fisubs
les
or
scas
rorb
fs
roll
push
in
push
or
xchg
outsb
xor
int
inc
jb
pop
dec
dec
fidivrs
cmpsl
lret
xlat
xor
sahf
cli
xchg
ss
popf
cli
dec
sub
add
sbb
mov
xchg
and
sbb
cmp
jne
sahf
mov
loop
or
outsl
ljmp
or
xlat
xchg
mov
into
or
push
push
into
dec
cmp
jno
out
jnp
jbe
jecxz
mov
fildll
in
iret
jmp
adcb
je
jns
mov
pop
jbe
imul
pop
fisttpll
outsb
jb
mov
inc
mov
ja
push
jmp
inc
cld
mov
fnsave
jno
movsb
adc
pop
ret
adc
jge
xor
inc
aam
in
push
orb
fst
xor
es
lods
sbb
or
pusha
test
sub
ds
or
dec
adc
int
jecxz
icebp
in
insb
icebp
xchg
adc
arpl
dec
or
ss
jle
add
jne
gs
and
cs
fcmovnb
push
sub
mov
pushl
pop
push
in
push
scas
push
fcompl
iret
mov
xlat
mov
outsl
adc
loope
xchg
push
stos
scas
cs
dec
fiadds
rolb
fsubs
rcr
fs
ss
pop
outsb
ss
mov
xchg
into
dec
mov
cmc
orl
data16
data16
enter
pop
push
lods
mov
dec
mov
jp
and
in
enter
ja
rorb
mov
jne
mov
inc
mov
dec
scas
add
inc
pop
cld
fcomp
xor
pusha
mov
outsb
dec
xlat
and
dec
push
pop
aad
fnstsw
into
pop
inc
hlt
popa
dec
popf
xchg
filds
push
sub
andb
test
sti
mov
adc
ret
pop
mov
arpl
call
mov
roll
cmc
inc
mov
lock
pop
lock
test
xor
push
add
stos
sti
in
xchg
push
ss
xor
dec
xchg
call
mov
or
mov
dec
fisubl
sub
xchg
insb
cmp
push
mov
js
rcr
dec
cmp
fcomp
sbb
cmp
cmp
lods
mov
mov
sub
dec
pop
push
fsubs
add
xor
pop
pop
jae
mov
aad
orl
xor
dec
push
movsl
mov
mov
lds
jo
add
jl
out
fisttps
adc
pcmpgtb
push
cmc
aad
push
and
mov
lret
ds
cmp
push
or
xchg
loop
das
dec
mov
mov
mov
popf
lcall
imul
inc
lcall
jbe
push
push
push
test
fdivs
rorl
sbb
dec
dec
shrb
push
mov
sub
mov
loop
lahf
sti
add
jnp
and
pop
or
mov
dec
xchg
dec
inc
lea
cmp
push
test
rcr
subl
daa
mov
cmp
sbbb
pop
mov
fwait
adc
push
pop
fnsave
jp
imul
mov
sub
lret
scas
adc
lods
fs
lock
dec
pop
shr
mov
lret
sub
fisttps
fisubrl
cwtl
pop
icebp
lods
add
sub
push
xchg
dec
popa
test
sar
mov
pop
cmp
imul
dec
cmpsb
jne
loopne
adc
mov
and
mov
xchg
ret
cwtl
jo
and
inc
gs
push
nop
test
push
xchg
lds
sub
repnz
inc
push
mov
push
pop
addl
cmpsl
mov
out
sti
icebp
pop
scas
ss
dec
pop
jg
sbb
lods
jmp
xlat
mov
ljmp
shrl
xor
popa
mov
negb
and
ss
sbb
jp
aaa
add
mov
icebp
sbb
pop
arpl
in
mov
push
xor
test
fisubrs
cmp
mov
xchg
enter
cmpsl
jns
inc
pop
negb
outsl
sbb
xor
pop
adc
xchg
sub
or
sbb
arpl
cltd
xchg
iret
push
mov
test
xchg
sub
fcom
stos
das
mov
mov
jb
jle
fidivrs
sub
dec
adc
mov
idivb
cmp
clc
xor
adc
aam
imul
xchg
movsl
mov
cld
and
sahf
scas
jmp
xchg
rcll
clc
sub
and
mov
sub
mov
fmulp
sbb
mov
pop
popf
leave
test
gs
mov
test
sub
dec
dec
iret
loopne
popf
sub
jp
incl
out
test
mov
rorl
arpl
stos
popf
xchg
mov
in
popa
add
sub
lods
jmp
push
loopne
adc
mov
xchg
lock
add
int
mov
xchg
dec
jo
inc
aas
add
sbb
jnp
insl
out
pop
mov
jbe
arpl
mov
cmpsl
sub
mov
scas
cmpsl
sbb
pop
mov
or
dec
jns
push
dec
stos
sbb
les
int
sbb
lods
jne
mov
adc
in
fs
divl
xor
push
sti
stos
lret
mov
loop
and
pop
ja
push
pop
jnp
adc
ret
fs
jp,pn
pushf
icebp
mov
adc
test
and
test
les
adc
jae
movsl
data16
ret
cmpsb
push
test
mov
scas
sahf
mov
jl
pop
popf
mov
popf
arpl
and
mov
push
pop
cld
out
aad
pop
inc
pop
or
orl
jl
or
subb
xorl
dec
xchg
jle
lea
subb
repnz
sbb
cmp
mov
and
pop
sub
jne
ja
mov
cld
or
pop
nop
fildll
stc
push
aam
out
loopne
push
leave
dec
mov
mov
push
push
jecxz
clc
mov
rolb
push
sahf
sub
push
sbb
dec
jge
xchg
mov
xchg
aas
shl
push
ret
cmpsb
negb
filds
aam
adc
in
pusha
subb
cmp
lret
mov
push
andb
out
cmc
stos
xor
lock
lret
mov
push
mov
jp
push
xlat
jns
es
das
in
jmp
mov
lods
xchg
stc
pushf
imul
push
nop
jnp
daa
fs
inc
push
cs
mov
ds
dec
test
sub
aaa
mov
mov
lock
enter
clc
jbe
inc
mov
lds
mov
jp
sahf
xor
xchg
mov
or
add
rcrb
lods
aam
sarl
mov
insb
mov
repz
pop
or
cmp
pop
mov
mov
dec
fisttpll
cmp
das
call
popf
js
jae
or
or
jb
lds
inc
aaa
adc
add
sbb
push
mov
int
inc
xlat
add
cmp
imul
sub
add
inc
xchg
inc
das
into
jge
inc
pusha
sti
cmp
loope
fbstp
inc
mov
xor
add
ds
xor
addl
pop
subb
inc
imul
popa
xor
push
mov
add
or
into
test
clc
mov
or
test
mov
push
orb
mov
sub
loop
jg
push
add
test
into
ss
and
sbbb
dec
pop
gs
inc
inc
arpl
xchg
imul
sub
lret
push
rcll
sub
sbb
repz
lret
das
push
mov
sbb
aaa
stc
ds
pop
or
sbb
ret
push
cmp
push
xor
insb
addb
and
out
dec
mov
add
push
lds
mov
loop
sahf
loopne
jo
adc
test
rcrb
mov
inc
push
popf
adc
mov
notb
mov
sub
js
pop
data16
mov
pop
pop
dec
push
das
jnp
call
sbb
jb
push
lds
mov
lds
push
mov
lods
mov
adc
xor
mov
cmp
orl
and
add
or
loop,pn
mov
dec
cmc
jns
push
ret
and
cmp
daa
daa
inc
loope
mov
out
inc
stc
xchg
cmc
fistl
adc
decl
repz
fs
push
dec
cwtl
stos
pushf
pop
xchg
pop
test
icebp
out
imul
lds
mov
arpl
and
xchg
xor
test
loopne
data16
xor
cmpsl
in
add
mov
addb
xchg
mov
int
push
mov
das
pop
mov
lcall
sahf
ret
xor
xor
sub
mov
mov
and
push
stos
push
adc
push
movsb
jae
aam
add
pop
popa
out
mov
push
push
ja
jbe
repnz
ret
adc
or
push
movsb
int3
repz
stos
cmp
mov
ds
xchg
mov
inc
subl
xchg
cmc
inc
push
push
sbb
dec
pusha
mov
mov
fmull
sbb
les
inc
les
cmc
mov
mov
in
pop
into
xor
repz
xor
push
mov
mov
sbb
sub
cmp
mov
push
xchg
push
add
popf
xchg
stos
orb
jnp
xor
pusha
lcall
pop
insl
addb
int3
sbb
lods
cmp
and
test
dec
rclb
pop
mov
clc
ret
cmp
jecxz
inc
lods
incl
cwtl
cli
movb
xchg
roll
cmp
jmp
push
in
jae
frstor
mov
nop
push
rclb
sbb
pop
push
lahf
or
dec
cmp
insb
aad
js
mov
jp
xor
jb
std
pop
cltd
pop
in
sarl
dec
push
add
ret
fimull
outsl
in
fisubrl
cmp
cmpb
inc
jb
mov
mov
pop
fisttps
fisttpl
ss
and
xlat
fwait
cs
xchg
lds
pop
andl
cmp
adc
repz
inc
ret
mov
inc
shl
mov
adc
cmp
sbb
cs
fcoms
leave
add
cmp
mov
xor
push
lret
sub
ss
mov
ljmp
cli
mov
lods
sub
insl
out
mov
lret
jmp
pushf
xchg
sbb
inc
sbb
inc
adc
jge
into
jnp
mov
stc
and
imul
xchg
mov
sub
mov
xlat
in
out
stos
test
sbb
pop
dec
xor
mov
pushl
sub
cltd
jbe
cmp
adc
mov
pop
cmp
dec
cli
cmp
mov
bound
xor
push
stos
push
movsb
insl
imul
adc
and
cmp
jbe,pt
cmp
mov
cmp
or
outsl
or
mov
cmp
in
ret
xchg
pop
mov
add
roll
push
in
in
les
lret
icebp
sub
add
pop
fpatan
lahf
out
test
stos
mov
jmp
mov
sub
test
pop
and
push
inc
cmpsl
or
in
dec
aad
cmpl
cmpsl
cwtl
push
imul
addr16
fbld
lods
or
bnd
fucomip
mov
mov
sub
sub
sub
push
jle
xchg
xor
ret
lds
mov
cmp
data16
aas
int
js
mov
movl
stos
pop
fbstp
ret
pusha
jmp
pop
pop
mov
out
mov
mov
mov
mov
rclb
out
call
and
mov
pushf
stos
out
imul
lods
lods
gs
cld
and
lcall
in
sub
xchg
cwtl
lea
and
in
push
mov
xchg
cmp
xchg
shll
and
mov
rorb
ret
add
dec
insb
add
cmp
fisubrl
jno
int
cs
popf
xlat
adc
and
dec
loope
jg
int
sbb
imul
andl
jbe
cmc
and
inc
movsl
mov
rorb
gs
jo
fistps
lea
aad
popa
sub
in
out
je
xor
subl
clc
jle
mov
js
cmpsl
movsb
cmp
xchg
inc
or
mov
mov
mov
pop
cltd
dec
loop
out
outsl
xchg
mov
hlt
add
stos
pop
pop
inc
int
push
jg
lds
std
imul
cmp
stos
dec
adc
mov
mov
stos
cs
mov
inc
push
icebp
adc
xlat
dec
mov
mov
pop
jo,pn
jae
enter
test
xor
ss
arpl
daa
and
mov
iret
mov
iret
xor
in
jno
sar
insb
xor
lret
fisttps
jp
adcl
loope
loopne
stos
gs
into
hlt
pop
or
and
sub
aaa
lahf
adc
cmp
sbb
sub
clc
mov
sub
mov
insw
sub
mov
lahf
mov
mov
xchg
out
enter
jae
sub
mov
pop
test
pop
mov
mov
push
push
fisttpl
addr16
jg
jge
mov
adc
loop
push
cmp
adc
loop
sbb
gs
cmp
jno,pt
push
cmpsb
outsl
cmpsb
lret
iret
aad
jp
and
pushf
jg
mov
and
insl
push
enter
lods
pop
cmpsl
inc
mov
mov
sub
mov
movsl
mov
cmp
xchg
lock
sub
mov
gs
mov
test
inc
inc
dec
cs
gs
in
cmpsb
pop
out
mov
das
inc
cltd
pop
loop
lods
or
push
sub
pop
mulb
ret
mov
xchg
sub
lahf
cmp
rorl
push
and
xlat
aad
lret
xchg
cltd
sbb
pop
divl
cmp
cs
arpl
lahf
inc
dec
out
mov
push
dec
mov
jp
lds
xchg
jnp
lock
pop
das
jns
cmp
jmp
pop
xor
call
popa
pop
mov
mov
jg
lret
add
xchg
cmpsl
addr16
mov
cmp
mov
in
cmp
imul
mov
pop
dec
dec
pop
aam
or
inc
addr16
cli
and
sub
pop
and
push
mov
in
jmp
int
push
push
inc
jo
outsl
insl
imul
fcom
cmpsb
pop
xor
insb
jno
mov
xchg
sub
and
jmp
sbb
cmp
adc
outsl
cmpsb
stc
je
xchg
lea
test
jge
cmc
sub
scas
insb
lret
and
stos
inc
cmc
push
pop
and
dec
mov
lock
scas
add
cmp
les
movsb
jg
enter
pop
out
mov
fsubrl
movsl
jns
lcall
push
shlb
lret
ficompl
pop
ljmp
or
insl
adc
xchg
cmc
int3
push
jnp
mov
repnz
sub
testb
daa
push
sahf
jb
add
mov
mov
pop
sbb
cmpsl
fs
xchg
ja
les
out
add
iret
shlb
rolb
in
push
push
mov
mov
mov
inc
aad
out
lods
push
lea
loop
inc
xor
lods
jo
hlt
cmpsl
lahf
xchg
jno
xchg
aad
sete
jl
and
fsubrs
movsl
push
sub
call
shll
cli
lea
adc
mov
sbb
cmp
incb
mov
sub
lods
xor
cmpsl
adc
mov
inc
cmp
imul
cs
cltd
push
pop
data16
shll
inc
sbb
je
into
aam
dec
lret
jmp
jbe
dec
data16
shlb
sub
lods
sbb
dec
cmp
cmpsb
pop
mov
out
jo
sbb
xor
fisttpll
jge
fldt
call
cli
movsb
pop
jge
sbb
and
jne
dec
xor
lock
jl
mov
mov
or
push
icebp
jb
mov
or
pop
aas
and
lods
and
and
push
push
imul
fildl
pop
mov
aaa
stos
push
xchg
int3
inc
lea
ds
movsb
cmp
jmp
arpl
pop
or
test
mov
out
xchg
test
pop
mov
inc
pusha
add
loope
xchg
mulps
xlat
mov
push
lret
lds
mov
jmp
aad
es
xchg
inc
sub
sti
xlat
sbb
xorb
inc
inc
movsb
inc
enter
jp
call
dec
jp
inc
push
sbb
cmp
fcmovu
dec
inc
inc
int3
popa
mov
and
outsb
bound
test
adc
sti
push
push
lret
aam
pop
or
test
push
loop
out
or
ja
cmp
icebp
or
test
lock
jne
pop
inc
pusha
inc
daa
test
leave
xchg
rcll
inc
in
lret
rcr
dec
and
mov
dec
dec
mov
lret
in
and
bound
cmp
fisubrs
in
push
mov
mov
add
sbb
nop
xchg
test
aam
push
pop
xor
sub
mov
imul
aad
or
lea
pop
dec
cmp
push
sub
add
xor
loope
aas
cltd
lock
pop
sub
mov
negb
nop
imul
pop
or
inc
ret
sbb
gs
mov
iret
mov
adc
fbld
sub
push
subb
nop
mov
mov
aaa
xchg
xchg
mov
sbb
pop
addl
dec
mov
pop
les
dec
cmp
lahf
xchg
push
cmp
or
decb
out
jmp
divb
movsl
and
or
out
mov
push
iret
push
mov
mov
inc
mov
repnz
xor
xchg
sbb
xchg
and
es
dec
js
daa
stos
push
sbb
dec
lods
xchg
adc
push
xor
in
sbb
ds
in
sbb
mov
shrl
cmp
sbb
mov
push
movb
jl
pop
daa
in
dec
cltd
jo
cmpsl
and
push
dec
or
inc
pop
out
inc
out
out
pushl
inc
frstor
sbb
and
adc
mov
dec
lcall
movsl
mov
es
dec
pop
dec
in
cmc
int3
test
cmp
orl
andl
push
lahf
imull
sbb
adc
or
fmuls
adcl
loop
sub
mov
sbb
mov
xchg
jge
or
rsm
cld
jns
imul
or
push
jne
sbb
and
cmp
xor
cmp
lods
loope
dec
jae
pop
enter
adc
fisttpl
rol
jecxz
mov
popa
adc
test
push
adcl
mov
push
ficoms
div
xor
out
test
stos
or
cmc
jns
pushl
mov
pop
movl
mov
shll
std
cli
rolb
clc
testl
test
dec
fidivs
pop
sub
cwtl
addr16
test
lods
cltd
in
or
aad
sbb
dec
test
aam
es
inc
ljmp
cli
cmp
push
mov
mov
enter
jmp
sub
popa
xor
fldcw
pop
in
sub
imul
jecxz
push
testb
sub
pop
xchg
mov
pop
jae
into
testb
test
xor
lock
mov
lock
xor
cmp
push
fs
subl
cld
xor
cld
jge
scas
pop
mov
stos
sub
or
cltd
push
out
push
in
sub
xchg
push
mov
rclb
jns
xchg
lods
jbe
ror
sub
outsb
popf
push
mov
ds
scas
leave
or
and
test
daa
ret
ss
sub
xchg
inc
inc
and
xchg
push
mov
or
ljmp
popf
test
mov
in
or
xchg
adc
xchg
dec
loope
adc
jo
insb
mov
mov
loop
jl
cmpsl
leave
push
sub
outsb
pop
call
jle
mov
imul
add
imul
add
inc
outsb
aad
or
popf
in
outsb
in
repz
cmpsl
fstp
stos
cmp
dec
and
pop
out
mov
repz
lret
pop
dec
mov
push
add
mov
pusha
fcomi
movsl
lods
fstp
cltd
fdivrs
insb
adc
jg
dec
ret
add
daa
jae
xor
movb
adc
inc
movzbl
mov
adc
iret
sub
fwait
mov
xor
push
pop
mov
pusha
in
jno
xchg
add
mov
pop
and
pop
adc
js
push
flds
jno
xor
popa
mov
aad
add
cmc
cltd
leave
fstl
mov
imul
mov
movsb
insl
xor
movsl
add
cmp
mov
cld
mov
adc
add
mov
cmp
test
adc
das
test
and
sbb
sub
into
add
stos
std
ss
std
call
ret
xor
negl
sub
jecxz
pop
dec
jbe
rcrb
outsl
xor
xchg
loope
xor
loop
or
jne
jbe
dec
jns
mov
loopne
mov
cmpsl
adc
mov
test
push
cmovb
and
mov
add
push
jbe
lret
lcall
pop
dec
add
jecxz
sub
mov
jmp
push
mov
and
inc
shlb
push
pop
mov
push
js
push
cmp
sub
cwtl
jmp
and
wbinvd
in
leave
cwtl
xlat
movsb
and
push
gs
or
dec
insl
sbb
outsl
push
stc
pop
cs
cli
jecxz
stos
fistps
push
push
ja
mov
ljmp
lcall
cmpsl
jmp
icebp
repz
cs
mov
fistpl
cmp
push
jge
jmp
jmp
and
loope
mov
push
sbb
xchg
mov
movsl
dec
ret
shrb
test
push
pop
popa
lcall
scas
adc
lock
xchg
imul
pop
sbb
cmc
out
mov
push
sbbl
stos
hlt
add
loopne
loope
andb
shll
dec
xor
loopne
movsl
or
add
cmp
mov
xor
repz
cmc
outsl
shrb
cmpsb
xor
fstpt
jo
mov
pop
mov
out
mov
ljmp
sub
xor
int3
loop
push
into
jb
insl
jl
xor
sbb
jmp
pop
cmp
cmp
stos
pop
jmp
fnsave
clc
sub
mov
cmpsl
jo
jl
push
adc
sbb
add
pop
or
jmp
in
pop
sub
mov
pop
ror
leave
add
stos
shll
imull
sub
cld
enter
jno
dec
pop
hlt
adc
rcl
dec
sbb
cmpsb
in
xor
pop
jns
dec
test
inc
jbe
mov
jge
scas
bound
or
lds
mov
cmp
cmp
leave
inc
xchg
jns
or
aas
stos
xor
push
add
xor
sbb
sub
jge
xchg
pop
push
and
add
fwait
pushf
ret
jl
mov
enter
push
lahf
mov
mov
jmp
sub
mov
lods
shrl
in
xor
ljmp
push
loop
inc
jmp
add
das
imul
ret
das
jns
inc
fwait
jns
dec
push
sub
sbb
in
testl
and
out
lret
loop
sub
fsubr
push
dec
lret
outsl
mov
int
lahf
mov
test
cld
xchg
arpl
adc
pop
cmpsl
rcll
outsb
add
adc
jp
cwtl
add
out
test
mov
xchg
mov
out
inc
add
adc
hlt
jl
movb
jmp
mov
int3
add
fists
jg,pn
je
xchg
or
mov
inc
les
push
xchg
lds
xchg
fucom
jl
in
inc
stc
cmp
popa
aad
inc
lods
stos
or
or
movsb
lcall
icebp
or
imul
dec
lret
and
xchg
lret
push
pop
dec
jns
enter
adc
stos
jnp
adc
mov
int
movsb
ret
or
jnp
mov
inc
add
imul
push
mov
add
lods
xchg
stc
mov
sbb
adc
stos
loope
push
sti
pop
inc
out
sub
and
pop
and
es
popf
jo
xor
gs
xchg
jo
xlat
ss
dec
fimull
add
rcll
jge
cmp
rclb
aam
lahf
out
rcl
jae
out
aam
insb
jmp
shll
popf
jmp
jge
push
sbb
xchg
hlt
shrb
ret
loope
ficoms
jb
or
sub
inc
jge
push
adc
adc
scas
xchg
enter
jp
inc
pop
lret
sahf
or
xchg
mov
adc
sbb
xor
inc
ds
rclb
jmp
aam
nop
pop
subb
out
jecxz
je
in
sbb
imulb
mov
testb
int
leave
bound
xor
xchg
or
cmc
cmpsl
fsubrl
insl
divl
hlt
mov
add
add
rolb
filds
sbb
jae
lret
xlat
dec
xlat
outsl
out
jbe
lret
jno
add
into
ja
leave
xchg
fldt
dec
mov
inc
sbb
sbb
scas
pushf
xchg
dec
loope
repz
stos
pop
out
gs
pushf
fildl
fists
int
ret
gs
mov
jp
lock
pop
add
popf
push
jge
cmc
shr
adcl
jnp
mov
sbb
call
xchg
and
push
sbb
jecxz
cmp
jl
outsl
dec
ficoml
cltd
ljmp
movsl
xor
jno
sbb
jnp
ret
mov
push
inc
cmp
enter
sbb
jne
or
cmp
bound
xchg
rol
pop
xchg
jnp
inc
mov
sub
adc
mov
cmp
jle
dec
cmp
jne,pn
rorb
push
dec
pop
fnsave
mov
repz
repz
cmp
cli
jnp
inc
jg
push
leave
pop
lahf
sbb
mov
add
pop
in
out
rolb
xchg
jne
jbe
les
push
xchg
or
out
dec
or
shll
xor
jbe
insl
jns
mov
hlt
mov
mov
sub
jno
add
push
inc
out
pop
cmp
add
mov
aaa
insb
adc
adc
lds
push
out
dec
in
fs
mov
inc
stos
lods
call
rcrb
mov
test
or
sub
jne
iret
jns
mov
add
imul
cmp
shrb
sbb
stc
jle
push
out
xlat
movsb
push
mov
arpl
stc
sti
jbe,pt
xor
jge
mov
mov
xor
in
ja
or
jb
loop
pop
jne
outsb
lds
mov
jmp
popf
inc
fwait
in
imul
inc
add
cli
fcom
in
idivb
stos
mov
cmp
adc
and
std
in
xor
test
jecxz
xor
sti
xchg
mov
and
fnstcw
fsubr
out
pop
xor
clc
jae
dec
nop
outsb
cmp
lods
push
pop
mov
lret
js
pop
add
call
push
std
inc
mov
cmp
shr
cltd
xchg
jge
roll
scas
imul
push
sbb
fdiv
cmp
mull
fists
mov
pop
pop
inc
cs
cld
mov
pop
lods
dec
jge
mov
mov
dec
movsb
or
jbe
push
mov
inc
mov
mov
fcmovb
leave
cmp
repz
fsubl
mov
scas
and
mov
mov
and
pop
sub
in
and
and
xor
adc
add
pop
jo
pop
movsb
adc
jae
push
fldenv
jno
sub
popf
mulw
dec
jno
add
scas
xchg
addr16
push
les
ljmp
sub
push
inc
adc
lcall
cltd
repnz
jbe
pop
pop
add
iret
xchg
inc
subl
in
dec
cmp
xorb
out
int
call
aas
push
xchg
shll
fadd
inc
xchg
adc
inc
aad
ss
movsl
ja
xor
fdivl
pop
rcr
loop
mov
push
dec
and
call
fcoms
subb
shlb
and
mov
mov
cmp
dec
bound
rcrb
push
test
jle
fnstcw
xor
xchg
hlt
scas
inc
clc
add
mov
mov
leave
or
testl
mov
push
outsb
mov
cltd
in
out
jg
adc
pushf
xor
imul
add
jno
sub
pop
in
sti
mov
out
loopne
lahf
fdiv
mov
out
shlb
sbb
mov
or
loope
mov
repz
rorb
fs
std
jmp
pop
sbbb
and
jmp
mov
adc
adc
push
orl
loopne
cli
orb
aam
push
sbb
shl
push
add
inc
sbb
pop
mov
int
mov
xor
clc
incl
push
sbb
cmp
insb
shll
mov
jge
add
mov
scas
mov
pop
add
mov
stos
push
pop
sahf
in
sbb
scas
or
sub
mov
js
js
imul
loop
ficompl
int3
mov
testb
dec
outsl
out
add
mov
jo
inc
mov
movsl
push
popa
clc
cmp
mov
push
cltd
lds
outsb
mov
imul
mov
out
into
fists
pop
dec
jnp
cwtl
mov
scas
sbb
addr16
jo
fnstenv
jae
and
cwtl
mov
dec
mov
push
imul
jae
jne
cmpl
scas
lods
and
fdivrp
cmpsl
test
sti
and
push
mov
mov
xor
je
add
add
call
sbb
arpl
iret
adc
movsb
and
outsb
and
jle
clc
push
xchg
pushf
mov
popa
jae
mov
jmp
sub
push
jno
in
pushw
pop
sub
movsb
pop
jo
and
push
es
xor
and
jns
push
int3
imul
xor
cmc
movsb
sbb
imul
lds
and
add
pop
add
inc
push
aas
jae
ds
push
xchg
in
pop
xchg
adc
push
mov
stos
mov
and
cmp
mov
cmp
push
cs
aad
inc
jp
add
lret
add
lods
leave
mov
jno
mov
out
xchg
cmp
and
mov
out
xor
mov
test
shll
dec
test
add
pop
add
pop
arpl
inc
pop
enter
cmp
xor
dec
cmp
aad
popa
mov
jp
dec
cltd
add
add
add
shr
sub
stos
sub
outsb
push
call
rcrb
das
adc
pop
pop
adc
cmp
lods
shrb
cs
sub
daa
sbb
jb
stos
sahf
and
cs
xchg
cltd
add
pushf
jle
je
mov
xchg
sub
sahf
add
mov
lea
mov
or
bound
mov
test
mov
negl
popf
xchg
ret
inc
push
dec
addr16
sub
test
into
out
xchg
cmp
inc
popf
inc
jp
mov
dec
sbb
aad
cmp
jae
or
dec
cs
imul
cwtl
xor
cltd
push
mov
sub
pop
mov
call
cltd
and
inc
jmp
shl
add
cld
movsb
subb
pop
hlt
adc
xchg
pop
pop
pop
das
stos
iret
popf
mov
test
movsl
pop
jl
sub
test
stos
sbb
lret
shll
and
xchg
cmpsl
or
push
cli
sub
out
xchg
pop
sbb
lcall
cwtl
mov
mov
inc
mov
pop
fwait
dec
nop
outsb
mov
rcrl
lock
std
mov
or
xchg
daa
jmp
sahf
daa
out
mov
push
cmpl
sbb
hlt
mov
shr
mov
inc
mov
and
out
icebp
or
rorb
or
out
jne
dec
orl
outsl
xchg
pop
push
xor
ds
lock
lcall
adc
or
loop
sbb
mov
push
inc
iret
stos
lods
xor
push
faddp
sub
mov
jecxz
xor
xor
jbe
jnp
pop
xor
test
dec
mov
cmp
fildl
xchg
push
int
nop
lahf
sbb
repz
mov
inc
lock
mov
loop
mov
xchg
mov
push
and
js
add
mov
push
dec
add
mov
jae
insb
leave
adc
stc
cmpsb
xchg
dec
cs
mov
test
sti
es
push
jecxz
pop
mov
lret
pop
push
lea
jb
or
mov
cmp
mov
out
jne
or
cmc
mov
or
mov
scas
mov
xchg
jl
mov
or
add
lret
lods
and
push
push
pop
dec
mov
mov
mov
mov
add
movsb
mov
rcrl
iret
jmp
popa
pop
push
jne
enter
push
lds
sbb
sbb
pop
pop
insb
negl
sbb
test
sub
push
cwtl
mov
or
jno
cmpb
mov
out
xor
pop
xlat
inc
adc
jle
add
pop
xor
inc
popf
cmp
dec
jne
pusha
aas
into
outsb
sub
hlt
cld
or
jg
jle
cmc
lcall
mov
mov
das
fimull
push
ror
cli
pop
clc
jbe
sbb
xor
fadds
mov
sbb
out
shl
and
stc
fidivrl
xchg
loopne
pop
ret
fdivrl
jmp
dec
mov
sbb
xchg
div
jge
cmp
mov
imul
test
sub
je
mov
imul
das
sub
or
insl
scas
dec
cwtl
jge
fwait
inc
stc
and
dec
jmp
mov
add
mov
inc
lods
icebp
pop
push
cmc
mov
ret
test
jp
jae
loop
mov
subl
jae
mov
movsl
mov
rcrb
mov
stos
sub
test
neg
add
stc
jne
test
pop
inc
cmp
shr
into
rolb
dec
or
xor
ljmp
mov
pop
push
test
mov
xchg
mov
sub
in
inc
mov
fmull
loopne
fmulp
popf
inc
lret
cmc
mov
xor
mov
xchg
sbb
jl
mov
adc
popa
les
xchg
add
dec
push
daa
lea
dec
jg
xchg
push
aaa
clc
mov
adc
inc
jns
adc
xorb
push
ret
imul
in
push
roll
pop
add
push
push
repz
jmp
sbb
mov
jne
pop
repz
fmul
mov
push
cmp
addr16
inc
xchg
mov
jbe
data16
dec
aad
mov
xchg
mov
mov
stos
inc
fwait
aaa
repz
add
adc
inc
and
mov
ret
addr16
xor
fstpl
icebp
test
idivl
adc
mov
hlt
outsb
add
aas
sbb
ja
out
push
push
jge
jp
ds
sbb
cmpb
or
xor
ret
je
stos
mov
dec
xor
arpl
fdivrs
and
jbe
pop
add
loopne
mov
out
dec
xchg
mov
shll
fiadds
adc
jno
pop
jno
jecxz
gs
out
push
and
setb
aas
testl
fcompl
fildl
mov
cmpsl
jbe
sar
cwtl
cmp
inc
adc
adc
fcomps
xor
pop
out
aaa
sbb
nop
adcb
stos
fdivs
lcall
lcall
xor
xor
sub
imul
mov
xlat
adc
outsl
insb
mov
pop
xlat
cwtl
sbb
repnz
notb
sbb
or
cltd
sbb
fwait
xchg
imul
add
fiadds
xor
pusha
fchs
mov
mov
movsl
jo
rcl
int
cmp
adc
cmpsb
loope
stos
in
out
dec
sub
stc
cli
lret
movsb
rcrb
repz
icebp
test
mov
dec
sub
jns
xchg
cmp
das
xchg
lcall
cmp
add
push
je
mov
xchg
mov
or
aad
mov
cmp
push
jmp
mov
push
imul
inc
xchg
sub
mov
imul
fld
ds
dec
popa
adc
fwait
ret
xchg
mov
mov
push
sahf
xor
sub
dec
sub
movsb
mull
xor
cmp
mov
stc
pop
shrb
sub
or
aas
and
mov
mov
addl
mov
cltd
push
mov
js
in
iret
or
cld
in
adc
mov
cltd
test
fwait
out
gs
test
push
push
cmpsl
in
sub
push
sahf
arpl
sti
mov
and
mov
repz
pushl
leave
aad
add
bound
inc
cmp
xor
pop
xchg
dec
sub
xchg
inc
cmp
mov
ljmp
or
test
int
xlat
inc
hlt
lret
xor
or
dec
sahf
aam
rorl
inc
inc
cli
sbb
sbb
sub
mov
ror
adc
adc
pusha
cwtl
lea
idivb
cmp
jmp
and
fsubp
je
repnz
into
mov
push
mov
sub
push
mov
rclb
inc
push
sarl
imul
or
jl
aam
inc
mov
data16
dec
xchg
push
mov
in
scas
dec
pusha
aam
rcl
add
xchg
ljmp
fbld
mov
xchg
cs
cmc
jge
sbbl
out
jmp
int3
and
adc
and
test
test
gs
push
nop
push
or
mov
pop
push
dec
loopne
ljmp
call
lea
insl
aas
dec
dec
jecxz
mov
cmpsl
scas
push
jb
stc
xchg
adc
dec
nop
push
fcoms
and
and
mov
pop
jecxz,pt
and
dec
enter
cld
cmpsb
dec
test
sbb
int
addl
aas
int
aas
pop
jno
aam
xchg
rorb
out
mov
xchg
adc
std
sbb
or
scas
or
lock
movsb
cmp
rorl
jo
lods
imul
mov
pop
mov
mov
ja
adc
lret
jb
out
sahf
jo
bound
lods
cwtl
insl
sbb
sbb
add
and
std
add
dec
imul
gs
xchg
daa
dec
stos
xchg
xor
stos
jp
inc
xchg
inc
daa
and
push
sub
dec
clc
dec
lods
incb
sbb
xor
js
je
shrb
sbb
lret
fisttpll
in
daa
xor
pop
scas
imul
iret
push
jl
movsl
add
fnstcw
cmp
insb
addr16
lods
stos
mov
mov
lcall
out
or
cmp
fwait
nop
clc
mov
lret
cmpsl
rorl
daa
aaa
lret
jb
jg
loope
inc
mov
cmc
jb
sbb
pop
pusha
lret
or
jns
jge
loope
jl
pop
xor
pop
and
lret
or
pop
sbb
cwtl
jg
jl
lcall
adc
daa
out
inc
pop
sub
jns
data16
fidivs
adc
lcall
adc
bound
push
mov
inc
jo
call
xchg
jg
outsb
adc
inc
les
loop
test
sti
adc
icebp
test
pop
in
iret
sahf
ja
nop
dec
inc
movsb
bound
sbb
idiv
xchg
xchg
cmpsl
test
sub
sarb
xor
add
push
divb
imulb
or
orb
sub
movl
mov
and
es
mov
ja
mov
and
and
sbb
sahf
mov
jecxz
sbb
je
not
cmp
push
movsb
cmp
pop
push
mov
xchg
in
popf
mov
insb
jbe
push
enter
gs
inc
cld
ror
push
jecxz
inc
jb
notl
fcomp
jo
insb
imul
in
push
fnsave
mov
int3
dec
cmpsl
jb
jo
scas
inc
ja
mov
inc
adc
lock
or
cmpsl
add
es
mov
dec
push
mov
test
ret
pop
jo
jle
xchg
mov
fsubl
adc
pop
xchg
ds
ss
iret
movsl
xchg
lds
cmp
cmp
out
outsl
cmp
stc
sub
movsb
xor
jmp
pusha
faddl
mov
sarb
inc
mov
cltd
lret
cmp
sbb
outsl
dec
sbb
sbb
xor
mov
not
lods
dec
movsl
push
fiadds
bound
sbb
out
out
fs
enter
mov
stc
outsl
shlb
sbb
dec
dec
arpl
ss
dec
clc
imul
dec
or
mov
scas
xchg
loop
cltd
dec
ja
pop
cltd
add
xchg
stos
push
shll
inc
faddl
add
push
popa
and
dec
xchg
cpuid
subb
imull
in
dec
in
xchg
push
in
adc
outsb
imul
jl
push
or
int3
adc
inc
in
pop
xor
call
jmp
xlat
nop
cltd
or
bound
lret
pushf
arpl
bswap
add
lods
add
psrlq
aad
mov
sbb
or
imul
setns
push
adcl
push
xor
in
jbe
aas
sub
neg
mov
add
repnz
push
int
jae
or
push
xchg
mov
imul
push
sub
ret
lds
test
aas
mov
ljmp
pop
mov
and
lods
mov
mov
pop
jnp
popa
mov
mov
out
mov
sahf
outsl
addr16
inc
mov
mov
and
cwtl
pop
adc
sti
decb
dec
jg
insl
cltd
decb
aad
in
xchg
jnp
push
sub
movb
push
push
xor
jae
mov
orb
in
cld
xchg
call
jp
loopne
or
sub
adc
icebp
or
mov
inc
lea
jecxz
fsubs
addl
repnz
rol
sub
cmpsb
iret
mov
out
xchg
test
rcrl
call
arpl
xchg
ficoms
pop
pop
push
cli
stc
fmuls
lea
xor
fcoml
fwait
cs
aas
cmc
adc
push
inc
daa
mov
call
lahf
and
sbb
shll
lret
stc
movsl
sbb
wrmsr
je
pop
or
dec
cmp
test
xchg
sbb
push
jge
and
and
dec
jns
sub
cmpsl
ror
jnp
fnstenv
xchg
sbb
mov
in
fcom
ficompl
outsl
sbb
ds
loop
dec
das
lds
mov
or
jp
jb
outsb
fnsave
cli
sahf
jmp
je
loopne
or
in
sub
in
push
xor
cwtl
das
xor
fdivr
ss
fsubrl
cmp
sarl
test
cmpb
mov
mov
inc
mov
mov
mov
sbb
fistl
sbb
in
xchg
cs
lods
inc
inc
lods
loope
push
jp
std
adc
jmp
pop
out
rcll
mov
out
lock
cltd
stos
flds
and
jmp
cmp
or
jnp
dec
maxps
insl
dec
pop
adc
mov
push
aaa
xor
cmp
push
int
mov
jle
cmp
sub
movsb
cmp
push
outsb
dec
dec
push
inc
mov
je
dec
sub
mov
lcall
mov
xor
fistpll
xor
push
pop
je
roll
pmullw
jo
sbb
jns
insl
inc
pop
add
es
lahf
or
out
mov
adc
je
mov
idivb
imul
lahf
insl
bnd
jns
mov
add
popa
mov
loop
adc
add
push
jae
ljmp
jg
rcrb
lret
dec
inc
lock
jbe
push
mov
testl
sarb
or
or
mov
mov
pop
push
xchg
xchg
out
cmp
mov
mov
or
ret
fadds
scas
inc
jbe
mov
push
int3
xchg
xor
cli
and
jb
ss
xor
int
iret
enter
sub
and
test
pop
xchg
lods
adc
aad
andl
pop
mov
testb
pop
push
subl
xchg
sti
rclb
stc
pop
push
xor
mov
and
jae
cld
addr16
mov
jns
pop
into
orl
loope
sahf
jns
lcall
imul
hlt
xchg
add
or
or
dec
outsl
push
test
hlt
sbb
rcl
pop
or
mov
pop
fidivl
mov
sbb
lret
and
inc
jae
adc
cltd
mov
cmp
js
scas
mov
pusha
cli
fldl
push
push
sub
mov
pop
push
adc
fnsave
sub
test
adc
and
test
mov
test
cmp
jecxz
jnp
push
mov
mov
add
jne
das
lea
fld
xchg
sahf
mov
push
andl
mov
dec
int
adc
into
jne
popa
popa
shll
pop
aas
imul
and
aad
call
xor
enter
xor
or
mov
mov
dec
fldt
mov
jp
jne
mov
xor
out
in
fldcw
aaa
push
mov
sarl
xchg
fdivrl
cmp
dec
les
jmp
pop
push
cld
inc
mov
sbb
pop
lea
jp
sub
inc
adc
orb
mov
inc
push
daa
inc
das
arpl
andb
dec
pop
jmp
ds
rcr
pop
inc
out
pop
lret
fdivs
shlb
scas
pop
and
cmc
lcall
in
test
pop
mov
sub
repz
sub
jae
aas
sbb
mov
pop
lretw
sub
cmp
std
push
outsb
sti
cmpsb
dec
ret
pop
sahf
arpl
add
in
cld
sub
cwtl
test
push
cmp
inc
mov
imul
pop
sbb
sub
ss
sub
fwait
bound
dec
out
aaa
add
mov
mov
iret
cmp
jmp
scas
or
in
lcall
out
push
jge
sub
shl
jns
aad
mov
or
repnz
adc
clc
dec
iret
stos
mov
mov
push
fcmovne
cmp
nop
out
dec
or
jecxz
notb
adc
xchg
xchg
loope
or
dec
nop
lcall
sbb
adc
mov
push
pop
gs
dec
ss
inc
leave
mov
jge
xchg
inc
insl
enter
les
in
enter
mov
inc
js
jbe
cmp
mov
je
rolb
outsl
mov
loop
in
pop
dec
mov
ja
sbb
lret
mov
leave
inc
xor
dec
call
movsb
push
fucomi
stos
pop
test
out
xlat
and
and
das
xor
out
bound
enter
rolb
lea
jg
inc
mov
xor
adc
insl
ret
sub
pop
cmp
outsl
popf
sub
pop
mov
les
inc
cmp
sbb
lret
xlat
enter
les
shrb
mov
lret
inc
add
bound
xor
mov
add
orl
cmp
and
xor
gs
fnstcw
insb
xchg
into
pop
clc
and
out
shr
mov
lock
sub
inc
xchg
cmc
ljmp
ljmp
fbstp
mov
push
mov
push
sahf
aad
jmp
pop
sub
mov
aam
jno
cmpsl
mov
cmp
mov
enter
inc
cmp
insl
mov
add
cltd
jns
aad
stos
sub
divl
mov
mov
xchg
mov
sub
cli
inc
inc
call
mov
adc
add
and
push
popf
adc
fcmovnb
add
ret
loop
repz
pop
push
push
std
mov
dec
fs
dec
movsl
jno
dec
lock
pop
jbe
sbb
cmp
cmc
inc
sbb
int3
in
sub
jo
leave
addr16
jmp
xchg
fwait
pop
ja
push
jns
and
fldl
inc
hlt
aam
push
adc
mov
lcall
pop
pushf
adc
movsl
jge
push
lds
mov
dec
adc
test
mov
arpl
enter
test
mov
movsl
jl
arpl
sbbb
loope
jo
movsl
nop
test
add
je
or
insb
out
mov
fs
pop
icebp
nop
jl
sbb
pop
sahf
xchg
test
outsl
aaa
inc
fwait
bnd
jg
sub
les
add
das
jnp
jno
mov
repz
cli
adc
cmp
in
xchg
jnp
mov
aas
or
inc
mov
inc
clc
out
leave
dec
mov
fsubs
push
stos
nop
or
in
cwtl
add
mov
cmp
xchg
rorl
xchg
gs
xchg
mov
jecxz,pn
push
and
ret
push
jno
out
nop
lcall
push
pop
add
stc
push
aad
aam
or
es
popa
push
andb
add
aad
fsubl
popf
es
test
cmp
dec
bound
add
jecxz
and
fwait
or
fcmovb
mov
rcl
mov
fisttps
xor
or
mov
push
sub
sub
lret
outsl
sub
test
jbe
inc
dec
mov
jnp
xor
mov
pusha
and
sarb
xchg
int3
repnz
mov
jl
movsb
cmp
fildl
fwait
add
fdivr
popl
inc
fucomp
cmp
hlt
fdivl
inc
or
mov
cli
mov
outsl
inc
xchg
imul
cmp
cmp
sub
dec
mov
xchg
ret
sbb
xchg
dec
fadds
subl
lea
dec
push
iret
adc
inc
repz
fcomi
mov
sub
jae
clc
jl
sub
jmp
mov
jmp
rorl
and
inc
sub
xchg
std
add
pop
loop
lods
inc
ljmp
dec
sbb
or
xchg
push
inc
adcl
cmp
outsb
cld
mov
cs
adc
xchg
inc
cwtl
mov
or
mov
shrb
xchg
ja,pn
pop
mov
jbe
xchg
sub
adc
in
loop
inc
mov
and
lcall
jge
test
xchg
push
cmpb
adc
xchg
inc
adc
mov
xor
rolb
dec
popl
adc
lahf
mov
lods
xor
jecxz
push
jp
pop
les
enter
loopne
xchg
lock
lods
ror
das
call
and
in
pop
stos
pop
dec
mov
cmpsb
movsb
lock
push
into
rorl
xchg
mov
pop
pop
nop
push
jno
pushf
iret
shrl
xor
sbb
mov
arpl
jnp
sub
nop
and
mov
mov
pusha
pop
aad
sub
pop
cmpsl
lods
push
add
xchg
or
xor
jle
mov
xor
out
bound
push
stc
nop
sarb
out
leave
sub
into
mov
cwtl
xor
jbe
pop
fmuls
push
insl
into
sbb
sub
cld
mov
les
jno
xor
cld
add
and
inc
pop
cwtl
mov
lret
daa
pusha
shll
dec
push
lea
mov
scas
add
xchg
mov
xchg
sbb
out
jns
inc
das
movsl
xchg
stc
int3
xchg
mov
xor
lods
fdivs
bound
repnz
sbb
pop
sbb
aad
test
out
insl
dec
push
ljmp
pop
xchg
dec
popa
jns
pop
lock
mov
sub
pop
jle
adc
clc
ds
inc
push
jecxz
dec
or
add
pop
push
dec
mov
xchg
mov
adc
enter
mov
jns
stos
rcrb
mov
add
js
mov
push
sti
test
cmp
mov
fs
dec
add
sub
jbe
in
ret
sub
enter
or
lcall
dec
sahf
mov
xchg
mov
stos
pop
cmp
sbb
xor
inc
xor
imul
mov
nop
dec
push
xchg
in
sub
movsb
andl
cltd
pushf
orl
in
lret
roll
lret
adc
xlat
lcall
sbb
xchg
xchg
lret
adc
ja
mov
pop
push
loopne
adc
lea
and
stos
pop
iret
xchg
pop
rorl
mov
scas
ss
add
sbb
push
push
dec
fsub
mov
ss
mov
and
loopne
es
jns
dec
daa
pop
nop
xor
into
xor
mov
jbe
mov
mov
pop
test
xlat
ret
cwtl
cmpsl
pop
cld
or
mov
mov
filds
mov
stos
jge
orl
mov
jbe
nop
mov
shll
fldt
jno
leave
mov
mov
push
sub
mov
cmp
jge
repnz
or
fwait
addr16
fs
nop
xor
dec
pusha
lret
test
jne
shl
pop
mov
mov
idiv
movsb
push
loope
add
aam
xchg
jp
sbb
daa
scas
and
sbb
mov
push
add
cmpsb
inc
mov
mov
add
cmp
dec
nop
stos
mov
sbb
les
in
push
movsb
push
icebp
or
pushf
inc
mov
sbb
xchg
and
fld
imul
jl
or
push
mov
cmp
xchg
iret
dec
loopne
dec
push
add
addr16
call
fwait
xor
dec
js
shlb
pop
sbb
outsb
jne
and
sub
inc
data16
push
jmp
nop
adc
lahf
xor
rcrb
cmc
inc
cwtl
insl
loope
ret
les
les
ss
pop
leave
push
push
xchg
push
add
jecxz
loopne
mov
fmuls
lea
mov
jnp
test
push
xlat
aas
je
add
pushf
movsb
push
jbe
dec
mov
and
cmp
xchg
xchg
sub
pop
pop
into
fs
sbb
dec
pop
out
sub
mov
add
and
xadd
jno
cli
xor
pop
push
xor
xorl
test
ss
mov
mov
sbbl
sub
in
insl
bts
dec
push
pop
stos
push
xor
dec
xor
inc
les
xchg
aaa
pop
jl
std
arpl
gs
jbe
lret
fcmove
xor
pop
cs
lods
ljmp
sbb
dec
mov
or
and
add
jge
mov
fwait
arpl
pop
cmpsb
loop
ja
imul
loope
mov
mov
jnp
iret
je
ss
cmp
and
inc
push
cli
orl
leave
or
cs
dec
add
je
dec
enter
fwait
int
xchg
xor
dec
jle
xor
pop
out
adcl
insl
rolb
out
jae
jmp
xchg
jne
insl
out
lods
icebp
jge
arpl
jge
mov
imul
stos
pop
adc
cmp
xor
mov
push
fcomps
push
sbb
ja
cmp
out
fwait
testl
xchg
mov
aaa
add
or
cmp
push
xchg
xor
cmp
dec
testb
test
jo
ret
mov
cld
aam
and
sbb
adc
fistl
repnz
lret
stos
mov
icebp
dec
faddp
adc
mov
cld
std
mov
sbb
dec
dec
test
movsl
mov
faddl
xor
xor
loop
add
add
jg
sti
dec
mov
sbb
adc
les
xor
xor
adc
mov
leave
pop
pop
nop
fs
and
call
mov
jle
divb
add
roll
pop
decb
movb
mov
std
mov
pop
sbbb
ss
jbe
scas
out
aas
mov
divb
and
cli
and
pop
xor
lret
cltd
lods
sub
pop
pop
or
adc
mov
sbb
gs
popf
and
ss
fisubrl
cltd
push
jbe
out
and
rcrb
std
icebp
aad
sbb
cmp
aaa
dec
mov
shll
in
aas
push
push
stos
shrb
leave
mov
aaa
imul
pusha
outsl
jp
mov
xor
loop
insb
push
inc
xchg
icebp
and
fdivrp
mov
negl
push
int3
mov
push
xchg
cs
rorl
orl
sub
repnz
pop
jo
fcmovu
cs
push
push
add
fwait
cmp
cs
xlat
ret
imul
pushf
fdivl
test
mov
pushf
daa
push
and
cs
pop
xchg
movsb
fidivrs
jge
push
test
or
mov
push
dec
inc
sbb
andl
adc
arpl
adc
or
or
cmp
xchg
int3
out
push
pop
push
testb
out
sub
xchg
mov
scas
or
fmuls
pop
iret
addl
mov
fisttpll
sub
xchg
test
xor
in
xchg
jbe
push
fwait
dec
mov
push
mov
pusha
mov
aas
xchg
cltd
fimull
in
cmp
icebp
mov
ljmp
xlat
mov
jl
sbb
mov
roll
cmc
pop
and
lahf
test
cmp
loopne
push
inc
imul
mov
or
mov
call
mul
cltd
mov
pop
imul
lods
sarl
jle
sub
fs
lods
or
push
stos
stc
xor
jp
lods
add
mov
or
jmp
cmc
jnp
mov
rcrb
mov
add
movsb
es
add
dec
fcompl
pop
das
xchg
addl
into
cmp
mov
push
int
ljmp
daa
mov
pushf
leave
push
adcl
insb
sarl
xor
sbb
and
add
pop
test
out
or
inc
shlb
and
mov
hlt
loopne
das
push
shl
inc
ret
adc
iret
jg
and
sahf
in
lret
lret
dec
popf
loopne
add
pop
mov
mov
cmp
xor
test
xor
aaa
sbb
xchg
jmp
cmp
mov
jl
or
test
sub
cltd
aas
aam
mov
dec
pop
loop
bound
arpl
add
sub
test
jp
cmp
dec
sub
jne
mov
push
jmp
jmp
orb
ja
decb
mov
and
pop
test
gs
sub
cmp
and
and
push
repz
inc
pop
int3
into
popf
sub
sub
adc
test
sub
int
hlt
jmp
lahf
stos
lret
or
xchg
mov
cmp
idivb
inc
aaa
cmc
inc
bound
leave
add
dec
fadds
call
jns
xorb
xchg
orb
sub
scas
cwtl
ret
idivb
or
mov
jle
add
mov
mov
cmp
and
mov
jmp
jne
push
pop
xchg
shlb
sti
imul
or
loope
pop
xchg
sbb
jo
popa
and
pop
mov
push
dec
add
add
roll
popa
stos
stos
push
lds
pop
shrl
xor
stos
and
out
lea
std
inc
fsubrl
fwait
push
shrl
adc
je
shlb
or
lret
outsl
test
filds
jne
jb
jno
dec
fcomi
xor
data16
lret
call
int
jmp
and
inc
shrb
xchg
mov
imul
push
mov
jl
pop
mov
or
jbe
inc
icebp
mov
jo
lret
loopne
push
push
out
js
cmp
xchg
jbe
push
dec
push
mov
test
pop
adc
push
and
push
sbb
push
or
incb
jns
add
ja
or
xlat
mov
ljmp
cs
jbe
ret
add
xchg
push
int3
sbb
test
rorl
pop
aas
sbb
cmp
sahf
repz
and
pop
loope
insb
jge
jb
fidivl
dec
popa
clc
push
sub
mov
and
nop
lods
dec
loop
rol
or
lahf
cmc
mov
inc
dec
out
cld
dec
imul
jno
add
loopne
cmc
addb
lcall
pop
inc
pop
cmpl
mov
sbb
fcmovnb
out
cli
add
js
outsl
push
xor
cmpb
roll
push
jle
sub
jp
gs
push
adc
add
cld
lahf
sahf
outsl
and
pop
stos
repnz
jo
repnz
lock
sub
out
popf
stc
jecxz
cmp
cmpsl
jl
in
outsb
sub
rclb
std
addr16
and
imul
or
jmp
inc
repz
inc
ret
adc
test
pop
or
divl
mov
inc
pop
imul
sub
inc
and
and
arpl
ss
xor
xlat
and
in
mov
cmp
sub
xchg
jo
mov
or
ds
mov
cmp
ficomps
adc
adcl
sbb
iret
lods
data16
loopne
pop
mov
outsl
shrb
out
enter
dec
mov
ret
dec
and
and
in
lret
sub
push
cmp
push
rolb
fsub
pop
push
pop
xchg
ss
adc
std
sti
loopne
fs
sbb
mov
xor
cmpsb
ljmp
fildll
xor
in
leave
test
jg
out
shlb
cmpsb
push
addb
sub
sti
dec
mov
mov
mov
jnp
filds
adc
pop
test
shrl
in
cmp
shlb
jno
sbb
push
ja
mov
outsl
jb
scas
pop
mov
pushf
inc
ds
lret
jmp
pop
mov
jl
mov
mov
in
dec
push
out
cld
test
sbb
jnp
sahf
jae
leave
cwtl
pusha
rcll
mov
cmp
dec
scas
das
insb
add
in
cli
sbb
dec
addr16
sub
mov
mov
out
ljmp
jnp
adc
lret
leave
mov
in
jae
dec
xchg
nop
sbb
test
sbb
xchg
push
sbb
pop
xor
or
popa
shlb
ret
adc
sub
loope
enter
jecxz
inc
or
ret
push
cmp
clc
add
sbb
ljmp
iret
jne
ja
dec
movsl
sbb
cmp
xchg
test
btc
dec
in
dec
xor
das
test
std
jle
and
mov
xchg
or
andb
cmpsl
stos
mov
je
fldl
ds
loope
js
sahf
add
and
pop
push
test
mov
neg
dec
jb
sub
test
and
loopne
adc
fcoml
mov
cs
mov
mov
mov
jp
das
stos
jp
out
pop
out
clc
mov
dec
fildl
add
cld
aam
in
in
dec
inc
sub
mov
movsb
dec
and
in
dec
test
sbb
cmp
scas
jecxz
jl
jecxz
cli
movsb
fistpll
sbb
add
cmp
inc
push
jo
cmp
mov
lret
xchg
test
movsb
jbe
sub
lods
dec
sarb
push
push
popf
cmp
xor
in
dec
sti
sbb
repz
cmp
inc
cmp
cld
pusha
shl
sbb
push
push
xchg
xlat
std
ss
inc
les
clc
and
fstps
mov
mov
inc
cltd
ja
xchg
sbb
lcall
dec
lcall
es
test
mov
in
stos
pop
inc
rcrl
or
inc
and
adc
and
add
or
mov
xchg
in
push
mov
pop
adc
pop
mov
cmpsb
aam
and
fwait
enter
jg
outsb
and
jo
xorl
std
adcb
ja
stos
ds
adc
pop
push
or
jb
in
lea
push
sub
add
mov
and
std
inc
das
scas
orl
mov
mov
jge
into
mov
outsb
jae
adc
testb
inc
jg
xchg
push
pop
push
bound
adc
adc
add
add
inc
mov
aaa
mov
adc
push
test
pop
mov
pop
and
inc
pop
gs
mov
cmp
stos
rcll
ficompl
pop
jp
lret
jle
and
dec
mov
cld
mov
jg
daa
out
sahf
sub
ficomps
push
push
bound
je
xor
pop
add
outsl
push
imul
mov
repz
dec
jno
rorl
lock
decl
xlat
xor
xor
push
cmp
add
jl
repz
xchg
out
stc
outsl
mov
mov
push
jno
sbb
rcll
mov
fxch
in
outsb
push
lret
cld
dec
in
leave
stos
addb
inc
aam
cltd
fadd
sbb
pop
jp
push
cwtl
ret
push
ret
test
and
test
addr16
jg
cltd
aas
push
ficomps
inc
and
cmp
pmaddwd
push
mov
xlat
dec
mov
movsb
enter
pop
push
mov
pop
popa
out
popa
bound
les
xchg
inc
mov
loopne
into
cwtl
daa
mov
xor
mov
arpl
sub
int
pop
shlb
fstl
xor
pavgb
jns
fwait
into
fsubs
xor
sub
mov
add
mov
inc
sbb
xchg
in
add
nop
dec
dec
inc
pushf
pop
mov
dec
mov
fidivl
push
sbb
sub
xchg
lea
lret
and
jnp
sub
pop
push
repnz
call
lea
mov
add
aam
sub
mov
out
adc
jno
stc
cltd
mov
data16
push
jmp
cmp
loop
and
mov
sub
lock
les
xchg
mov
insl
pop
mov
js
jge
push
sub
or
fsubp
fcmovnb
cmpb
sti
cmpsb
out
xchg
inc
add
mov
stos
cltd
lret
outsb
int3
outsb
inc
cwtl
add
iret
inc
dec
sbbl
push
scas
sub
dec
sbb
dec
aad
shrl
lahf
adc
aad
ljmp
mov
or
mov
imul
jns
sarb
popa
push
jae
insl
xor
jp
cmc
shrb
fmuls
and
xchg
xchg
or
xchg
aaa
mov
pop
mov
in
lods
ss
inc
fisttps
lods
fimuls
xor
and
dec
mov
jge
fists
cmp
insb
sbb
icebp
lea
jp
xchg
xor
sub
sbb
lcall
jp
js
or
popa
popa
mov
mov
mov
outsl
or
pop
inc
hlt
and
lock
mov
dec
dec
outsl
ret
or
xchg
inc
jmp
outsb
xor
mov
bound
jecxz
in
test
fs
jbe
shll
fistpl
sarl
imul
imul
pop
mov
sbb
sbb
jae
mov
dec
inc
je
xlat
fmul
and
outsl
push
rol
movsl
scas
mov
cld
push
push
sbb
xchg
push
popa
push
out
loopne
aas
mov
addb
orb
or
mov
pop
je
jg
or
xchg
xchg
mulps
and
mov
hlt
pop
stos
dec
sub
push
bound
push
mov
jg
fiaddl
xchg
add
ja
test
jg
call
out
cmp
iret
pop
sub
std
xor
pop
xchg
in
mov
js
push
test
cmp
xchg
xchg
or
sbb
sub
dec
test
xor
xor
adc
hlt
mov
cmp
sbb
pusha
insl
test
ja
push
sub
pusha
pop
outsb
pop
or
data16
jne
inc
sbb
aas
pushf
push
xchg
sarb
cmpsl
push
mov
mov
xlat
sbb
orl
fisubl
pop
push
push
mov
mov
xchg
aam
inc
cmp
mov
push
adc
insl
adc
popf
mov
push
adc
ds
push
lock
inc
out
cli
xor
ret
pop
out
and
incl
mov
enter
in
jl,pn
fcoms
ja
leave
jns
add
mov
stos
dec
xor
mov
dec
mov
loope
xchg
mov
popf
gs
push
adc
xor
pop
push
js
sti
int3
pop
cmp
sub
out
fxch
or
stos
or
call
sub
add
loope
dec
jae
aad
loop
loop
push
fimull
iret
pop
pop
mov
mov
sub
sub
pop
dec
mov
push
jecxz
ss
iret
inc
mov
dec
inc
jbe
dec
lds
mov
imul
js
inc
jp
ret
inc
xchg
repz
out
dec
sbb
xchg
int3
daa
js
or
mov
lods
adc
rcrl
jae
cmp
daa
sbbb
call
stos
ret
test
mov
and
jecxz
add
nop
ret
add
test
xchg
and
pop
dec
lds
pop
aam
add
pop
jge
gs
shll
negl
mov
movsl
push
daa
cli
clc
sub
dec
or
mov
aad
dec
jne
pop
daa
cli
cmpsb
neg
push
mov
mov
push
loopne
push
sti
xor
dec
loop
hlt
stos
in
cmp
mov
jecxz
cmp
roll
jmp
sti
movsb
jo
xor
jne
adc
lock
sarl
pop
loopne
cmp
cld
inc
push
xor
bound
shll
lahf
out
xchg
push
cli
xor
lcall
pop
mov
adc
inc
jmp
in
sub
ficoml
mov
aad
insb
xchg
mov
mov
mov
mov
fucom
lea
ror
jl
inc
and
insb
add
jb
loope
sub
cli
icebp
dec
arpl
mov
aas
std
popf
dec
mov
arpl
pop
jg
and
dec
aas
hlt
xchg
xor
and
loopne
xor
lret
or
mov
add
fwait
aam
fidivl
movsl
cli
aam
push
fistl
popa
daa
loope
loope
das
pop
movsb
popa
xor
fwait
cli
in
aaa
sub
imul
test
xchg
mov
jp
fwait
cmpsl
jb
sbb
int
cmp
into
clc
jmp
xor
inc
in
jns
sbbl
dec
add
mov
sub
push
or
or
or
stos
xchg
jmp
jp
mov
in
inc
push
jnp,pt
and
int3
add
stos
push
push
cmp
mov
insl
sub
rorb
popa
insb
iret
rorl
push
stos
cmp
xor
mov
pop
pop
adc
movsb
pop
mov
stc
mov
pop
jge
fs
std
dec
ret
mov
sub
add
pop
dec
aaa
inc
adc
push
push
rcll
into
dec
and
inc
inc
stos
push
jmp
sub
shrb
mov
in
push
push
fldcw
popa
mov
and
sub
xchg
mov
bound
fisttps
inc
sarb
loopne
push
cwtl
pop
leave
movsl
enter
adc
test
stos
push
call
mov
mov
lret
pop
add
sub
dec
in
dec
mov
or
push
mov
push
cmpsl
xor
aaa
pop
bound
push
xor
mov
jmp
xchg
stc
aaa
out
out
cmp
ror
inc
mov
fistl
pop
insb
and
sbb
leave
loopne
insl
adcl
in
aaa
and
rol
mov
dec
xor
add
sbb
pop
jecxz
mov
fisubl
sub
imul
loopne
dec
jbe
mov
or
pushf
or
js
inc
adc
push
test
xor
mov
xor
lods
mov
inc
sahf
in
aas
fcmovbe
pop
push
jo
mov
cmc
mov
loopne
jno
sbbl
ljmp
and
mov
repz
repnz
imul
mov
inc
call
push
pop
mov
mov
fimuls
xor
aam
icebp
movsl
lcall
jle
pop
adc
xchg
mov
pusha
adc
in
adc
or
dec
sahf
adc
fisttps
jnp
ret
adc
mov
leave
jnp
scas
jmp
repnz
les
add
andl
jno
test
jecxz
xor
push
outsb
in
sbb
test
loope
mov
sub
adc
cwtl
sbbl
stos
lret
mov
xchg
rcrl
xchg
ds
jl
jge
leave
or
jmp
push
mov
aad
mov
enter
or
add
fwait
mov
je
shll
ret
xchg
aam
scas
sub
sbb
dec
push
inc
decl
mov
push
mov
add
and
jnp
repnz
cpuid
xor
popa
inc
imulb
jle
push
es
cmpsl
scas
pusha
popf
rclb
mov
test
iret
or
pop
sahf
jecxz
mov
pop
mov
popf
mov
cmpsb
add
sbb
xchg
cmp
idivb
mov
mov
insb
push
out
lcall
addb
dec
jmp
mov
fsubp
outsl
jmp
inc
rorl
or
sbb
adc
pop
lods
ret
outsl
adc
adc
and
adcb
sbbl
mov
jb
ror
sbb
sbb
in
jne
in
rorb
and
inc
bswap
jge
inc
mov
insb
int3
or
pop
outsb
std
xchg
les
sbb
jne
xchg
and
xor
jne
xlat
pop
mov
imul
lods
mov
or
adc
ss
or
cmp
mov
mov
add
repz
jne
pop
insl
mov
pop
add
add
enter
cmp
lods
pop
fisubs
ret
sti
jae
loop
imull
add
hlt
mov
leave
sarl
mov
repnz
xchg
pusha
fsts
sub
mov
jmp
icebp
std
fidivl
lret
push
sti
mov
scas
popa
push
or
xchg
pop
nop
lock
jg
push
lret
sahf
jge
mov
dec
and
insb
mov
pop
add
cmp
and
jl
pop
inc
lret
add
mov
xchg
or
test
int
mov
pushf
rclb
cmp
sbb
or
jecxz
add
sbb
aas
jo
add
imul
addr16
dec
push
xlat
sbbl
pop
or
sbb
xor
aas
idiv
sub
jl
jle
and
fwait
mov
cmpsb
adc
pop
and
push
push
add
aad
jnp
clc
ss
fstpl
pusha
mov
mov
mov
sbbl
mov
sbb
pop
data16
add
test
pop
cltd
std
lods
cmp
pop
and
in
sbb
or
pop
inc
leave
mov
jl
clc
push
cmp
and
mov
xorb
cmp
fisubs
aaa
jne
aas
lahf
inc
ret
inc
xor
faddp
lods
push
cmp
xor
dec
and
ret
loopne
pop
adc
fiadds
in
mov
jno
test
adc
insl
test
shlb
sub
test
call
lods
cmp
clc
mov
test
out
pop
pusha
das
das
fucomp
out
dec
hlt
fsubr
mov
lret
sub
mov
jno
arpl
push
cli
mov
cmp
add
push
push
mov
xlat
adc
rcll
cmc
push
xor
mov
dec
lcall
dec
push
inc
scas
gs
popf
adc
js
mov
hlt
xchg
pusha
push
mov
mov
fbstp
jns
repnz
pop
pop
inc
loop
jle
jmp
mov
pop
sbbb
mov
and
adc
xchg
out
push
repnz
xor
cs
out
add
jnp
pop
sub
fwait
xchg
cmp
mov
btr
lods
das
inc
jmp
adc
or
je
xchg
pushf
mov
mov
shrb
in
les
das
lea
stc
and
pop
stc
imul
dec
push
or
fs
pop
popa
mov
inc
aas
or
jp
xchg
inc
push
or
mov
or
sbb
daa
cmpsb
lea
shr
push
stc
popf
lahf
jmp
jbe
push
push
loope
add
push
add
jno
and
ljmp
out
std
cmp
xchg
dec
addl
aas
cmp
ret
jg
int3
loop
sub
je
lcall
test
adc
shl
imul
fsts
xchg
ds
dec
aaa
mov
xchg
inc
cld
decb
jg
dec
mov
jo
mov
xchg
lret
or
jmp
xor
and
out
mov
mov
in
ss
stos
loope
ficompl
sub
or
movsb
sbb
mov
push
sti
mov
scas
or
and
pop
aam
fcomp
mov
fs
xchg
xchg
icebp
mov
imul
aad
xchg
lahf
and
and
std
push
mov
push
shrb
and
xor
out
fcom
mov
pop
pop
cmp
inc
mov
fwait
out
lret
int
int
int3
lcall
mov
xchg
cmpl
adc
loope
dec
aad
xchg
outsb
jmp
pop
scas
ret
add
cmp
inc
dec
sub
push
dec
mov
fsts
xchg
bound
int
ljmp
jo
xor
outsb
and
cwtl
cmp
fwait
push
fsubrl
mov
dec
pop
loop
xchg
inc
nop
jbe
add
dec
add
jne
cmp
pop
adc
inc
test
pop
in
inc
orb
shl
aad
es
mov
mov
outsl
mov
mov
lret
dec
dec
mov
outsl
jbe
xchg
icebp
sarb
mov
je
clc
dec
pop
mov
push
lret
movsl
push
cmp
fmuls
imul
dec
xor
mov
jb
adc
adc
lahf
mov
pop
add
mov
xchg
sarl
pop
jmp
je
out
inc
push
out
xor
push
mov
add
mov
scas
sahf
adc
les
stc
out
inc
cmp
mov
popf
adc
cmp
ret
cmc
repnz
mov
clc
dec
add
andl
inc
inc
xchg
push
int3
fs
insb
enter
pushf
mov
pusha
cltd
fsubl
hlt
mov
out
jecxz
jae
mov
mov
out
mov
xchg
loop
aas
cmpsl
dec
fs
out
sub
jmp
inc
test
out
ja
push
add
or
sbb
rorl
xor
push
add
sub
loop
dec
cmp
inc
sarb
movsl
sbb
scas
mov
mov
pop
repnz
mov
aam
cmp
xchg
arpl
dec
loopne
imul
inc
push
sbbl
or
pusha
xor
lahf
xchg
mov
popl
dec
adc
xchg
xchg
fisubl
lods
lock
dec
mov
dec
mov
mov
cmp
lret
iret
sub
xor
cld
outsb
jl
mov
pop
aad
jno
jne
ja
fcompl
movb
rcr
lcall
inc
pusha
sub
sbb
iret
pop
out
pop
adc
xor
int
xchg
and
jb
mov
dec
into
cli
mov
xor
adc
push
mov
in
in
pop
ret
fwait
clc
sbb
cmc
fsubr
imul
inc
and
xor
jl
push
inc
pop
add
pop
inc
jno
sub
cmc
cltd
adc
hlt
fstps
push
and
mov
shrb
xchg
xor
xor
sub
mov
or
ret
bswap
xor
fiaddl
cmp
movsb
mov
mov
sub
test
xor
mov
sbb
mov
mov
and
xchg
icebp
lods
xor
xor
sbb
dec
divl
sahf
inc
jno
fdiv
filds
jbe
add
inc
cmpsl
mov
cltd
cli
leave
cmp
outsl
cmp
ds
sbb
pop
jnp
imul
and
out
mov
jb
mov
cltd
sahf
out
jge
leave
outsb
xor
test
sarl
insb
stos
call
ret
xchg
popa
fs
mov
pop
test
and
push
mov
xor
inc
ja
add
loop
inc
pop
aaa
lds
test
xor
test
jle
mov
nop
stos
aad
jae
inc
sub
test
jg
jge
xor
ret
lods
ret
mov
lcall
push
out
in
pop
in
mov
dec
push
stos
cs
pop
daa
cmpsb
push
cmpsl
insl
push
ss
or
push
out
xor
cmp
or
imul
add
std
or
sub
hlt
pop
cmp
ss
repz
dec
lds
add
cwtl
push
mov
jg
pop
jns
push
and
mov
xchg
inc
mov
aaa
xchg
xchg
mov
movsb
dec
pop
out
xor
pop
xchg
fnstcw
lret
inc
push
xor
inc
cli
xor
cwtl
xchg
jp
mov
fstps
pop
iret
aad
inc
pusha
loop
paddw
mov
mov
gs
popf
cmp
cmp
pop
aas
mov
subl
sbb
outsl
fidivrl
repnz
fidivrs
dec
adc
cmp
test
cmpsl
int
pop
scas
shll
hlt
mov
lcall
int
loope
sub
or
or
jnp
loopne
jp
xchg
enter
add
in
jg
fcompl
mov
inc
pop
mov
jne
out
rclb
push
rolb
int
rcrl
jecxz
inc
push
loop
lods
aaa
mov
jae
leave
lret
decl
fcompl
jmp
or
ret
enter
in
pusha
outsl
mov
pop
xchg
mov
push
inc
mov
or
mov
adc
aad
fidivl
in
test
cwtl
pushf
test
pop
insb
loope
jo
mov
cmp
repz
and
gs
mov
adc
push
inc
imul
ja
and
jmp
xor
not
dec
les
inc
xchg
dec
mov
cmpsb
mov
push
lahf
xorl
adc
sbb
mov
cmpsb
out
lgs
ret
sub
popa
pushl
cmp
sbb
stos
sub
insl
push
out
shll
push
in
mov
mov
mov
mov
repnz
aam
and
xor
movsb
ja
pushf
insl
out
ficompl
repnz
jns
bound
in
mov
and
outsl
insl
jp
imul
repz
leave
aaa
nop
popa
imul
mov
or
push
mov
add
gs
icebp
mov
dec
xor
jg,pt
fs
imul
rorl
fwait
cmpsb
mov
mov
imul
sbb
loop
or
add
lods
and
movsl
popa
xlat
les
stos
loope
lods
dec
mov
test
or
ficomps
xor
push
pop
cmp
neg
shrl
rcl
adc
pop
dec
aam
stos
gs
pop
fstp
jo,pt
xor
or
stos
test
jne
jno
xchg
lret
and
ss
sahf
pushl
movb
imull
sahf
fs
dec
add
mov
cli
mov
push
bound
xor
pop
cmp
add
stos
leave
mov
testb
loope
iret
adc
xor
repnz
dec
mov
sub
mov
inc
jnp
fists
xorb
aad
mov
mov
jbe
roll
cld
cmp
or
out
jns
add
jl
jmp
lods
ljmp
sbb
jmp
lods
test
sub
loop
mov
and
push
loopne
or
mull
mov
cmpsl
bound
push
cs
mov
jo
loopne
js
pop
out
cmpsb
inc
ss
jg
into
daa
adc
repz
push
fsubs
push
xor
xchg
push
jl
sub
jno
jp
insb
es
out
mov
fldenv
sub
fs
mov
xor
lret
rcl
sub
mov
push
push
adc
inc
ds
and
dec
xor
sahf
or
sbb
adc
sbb
mov
or
sar
pop
out
cmc
pop
test
shl
cmc
fldt
adc
dec
loopne
push
mov
popa
and
popf
mov
pop
push
push
pop
mov
repnz
jecxz
cmc
rcrl
mov
sti
shl
push
js
mov
loope
in
scas
add
mov
scas
popa
sub
dec
iret
int3
cwtl
fstl
std
cmpsb
jo
push
xchg
cmc
xchg
stos
mov
mov
mov
popf
stos
enter
add
mov
push
cmp
ficoml
mov
cltd
or
pop
mov
pop
cmp
or
and
scas
data16
insl
pop
lods
jmp
cmpb
push
cmpsl
repnz
jns
dec
pop
jp
xor
mov
je
dec
adc
std
mov
mov
pop
shll
loope
xor
pop
jae
outsl
xor
inc
cmp
jo
inc
lods
pushf
mov
test
scas
into
mov
jbe
test
outsb
addr16
jle
arpl
sbb
inc
imul
mov
inc
leave
mov
not
hlt
out
jl
xchg
inc
jb
mov
sub
mov
gs
das
add
cwtl
aam
loop
sbb
adc
jmp
aad
or
jno
pushf
repnz
icebp
sbb
sub
jo
sub
mov
mul
lods
pop
aaa
in
insb
into
icebp
lock
icebp
and
and
iret
insl
add
test
out
and
jae
jg
jl
mov
jle
jg
inc
fucom
mov
sbbb
je
faddl
ja
cmpb
xor
movsb
and
cli
mov
mov
fisttpl
mov
cmp
mov
or
cmc
add
fisttps
push
test
mov
jp
xchg
in
scas
mov
cltd
mov
int
loope
out
flds
repz
aaa
js
popa
xchg
push
jp
movsb
ficomps
push
adc
jge
adc
aad
jae
shld
fstpt
push
jmp
xchg
jo
popf
out
stos
inc
into
mov
mov
push
sub
stos
sbb
pop
and
dec
and
into
xor
aam
lcall
sbb
push
in
in
push
inc
aaa
sub
loop
call
shl
cmp
lea
loopne
add
push
pushf
imul
xor
jmp
jnp
mov
mov
movsl
lret
ret
fsubrl
test
push
mov
mov
adc
leave
popa
lahf
sub
fsubl
in
fdivrl
sti
sbb
mov
cmc
push
scas
jae
push
test
sbb
mov
cwtl
fdivl
jmp
mov
dec
xor
and
shl
jl
stc
cmp
and
or
mov
and
dec
sbb
mov
mov
push
dec
xor
sbbl
jle
cmpsb
cwtl
les
in
mov
cmp
xor
push
jmp
sub
ret
xlat
push
lcall
cmpl
movsb
adc
test
popf
shll
mov
dec
sbbb
jg
jl
sub
xor
mov
test
repz
ss
add
pop
dec
clc
add
movsl
mov
mov
js
adc
sbb
jno
imul
xchg
in
stos
and
xchg
decb
jae
cmc
xor
je
nopl
or
loop
ficoml
push
or
dec
pop
outsb
scas
mov
mov
or
ret
jnp
ljmp
call
dec
into
nop
xchg
outsl
out
mov
xor
ss
pop
outsl
repz
popf
cmc
movsl
sti
and
dec
jge
scas
sbb
popf
jbe
ret
fwait
incb
xor
imul
xor
add
ret
cmpsl
dec
or
sahf
repz
in
rcr
testb
lret
cltd
lsl
xor
bound
xor
push
jne
xor
addl
sbb
int
std
sub
int
loope
push
xchg
cli
lahf
adc
inc
into
mov
dec
in
enter
and
fsubrp
sbb
mov
add
mov
dec
pop
aaa
pop
pop
popa
les
loopne
es
mov
sub
dec
mov
xchg
insl
imul
arpl
xcrypt-cbc
cmpsl
push
rorl
xchg
fwait
sub
cmp
push
insb
mov
cmp
dec
test
mov
cmp
sarb
js
xor
rol
pop
mov
jo
mov
xor
aas
jmp
and
rcrl
dec
sbb
mov
jno
mov
mov
pop
es
adc
cmp
les
sub
les
ror
or
or
insb
es
les
xlat
jae
and
hlt
cmc
or
xor
call
popf
sub
sbb
and
insl
or
mov
movsl
pop
bound
push
push
nop
jbe
dec
imul
mov
sti
stc
push
sti
addr16
jg
push
cmpsl
ljmp
bound
fisttpll
divl
push
dec
dec
lcall
jg
loop
lods
outsl
enter
mov
adc
inc
sbb
std
movsb
dec
cmp
mov
dec
std
dec
test
lret
insb
jno
ja
int3
add
or
push
mov
test
out
mov
mov
pop
rorb
mov
inc
and
jg
fists
fcmovu
or
test
inc
cmp
xchg
mov
repnz
sub
xor
cli
dec
shl
cmc
repnz
sbb
jg
cli
test
fnstsw
in
nop
dec
add
inc
push
or
ljmp
fs
int3
mov
xchg
and
inc
cmp
out
push
pop
mov
sbbb
mov
lock
adcb
imul
enter
cmp
or
nop
ds
dec
xchg
add
mov
mov
mov
lods
or
add
sub
jg
ja
int
mov
adc
inc
mov
aam
lahf
sub
mov
rorl
xor
and
pop
or
cltd
in
fwait
push
test
mov
idivb
jns
cmp
mov
lea
call
pop
ss
in
pop
pop
xor
xchg
not
repnz
movsl
imul
push
jbe
outsb
xchg
mov
mov
push
xchg
adc
pop
cmp
or
mov
or
cli
pop
mov
pop
aad
sub
mov
sbb
subb
loope
or
mov
out
ret
aam
xor
leave
aad
push
daa
inc
test
dec
rolb
adc
lods
inc
xlat
lret
mov
adc
test
ficomps
xchg
inc
jle
int
mov
push
push
mov
cwtl
mov
pop
das
pop
add
int
pop
cmc
addr16
loopne
cmc
lret
repnz
stos
pop
rcr
mov
repnz
mov
adc
out
adc
mov
mov
fmull
fiaddl
aam
icebp
push
jg
cmpsl
jmp
lds
cmpl
adc
fbld
mov
dec
jecxz
mov
jge
push
add
imul
dec
pusha
sbb
in
add
dec
xor
ret
shll
mov
lahf
push
in
pop
stos
loopne
adc
stos
pop
aam
stc
cmp
jge
aad
adc
test
ss
stc
cmp
mov
bound
xchg
shrb
mov
shr
dec
pusha
push
dec
push
scas
mov
test
adc
xchg
cmp
fistps
lods
sub
mov
xchg
test
ficoml
fwait
addr16
push
lock
cltd
imulb
mov
sbb
cmp
mov
mov
movsl
xor
aas
inc
pop
std
popa
cmpl
dec
arpl
and
stos
push
aaa
adc
scas
fs
fmull
push
and
pop
fildl
cmpsb
adc
pop
daa
addr16
adc
push
inc
cmp
xchg
inc
sbb
mov
mov
and
stos
stos
sub
les
dec
mov
xchg
mov
mov
loopne
ret
aad
cmpsl
loope
xor
jge
xchg
inc
jecxz
jp
pop
push
fdivrs
xor
leave
adc
out
cmpsl
xchg
or
out
sbb
lock
jns
clc
inc
or
scas
lods
sbb
lret
popf
mov
scas
jl
xor
test
cli
daa
pop
lea
adc
cmp
pop
shlb
xchg
jae
or
outsb
mov
mov
adc
mov
inc
pushl
xchg
rcll
daa
fs
in
adc
xchg
lods
sub
test
sub
cmp
loope
std
push
ret
or
push
and
aaa
mov
cld
shl
or
cmp
mov
je
mov
push
inc
inc
xchg
out
jno
mov
stos
stos
jne
inc
sahf
enter
loopne
or
push
jne
or
lcall
aad
in
iret
outsl
xchg
shlb
stos
aad
lods
shlb
pop
imul
movsb
cmp
insb
dec
in
inc
push
cs
lods
cmp
lods
lret
mov
clc
push
leave
adc
mov
dec
cmp
or
in
pop
aad
jg
or
stos
and
jp
jno
xor
fs
hlt
mov
mov
inc
mov
add
jecxz
sarb
jbe
fisubs
jl
pop
mov
xlat
shrb
sbbb
cmp
out
insl
roll
and
jle
arpl
ret
call
add
jge
cltd
pop
test
mov
pop
dec
ret
adc
xor
aas
movsl
jne
xchg
in
mov
xchg
and
loopne
cmp
xor
sbb
ja
scas
sahf
mov
pop
pop
addr16
adc
scas
inc
arpl
jbe
xchg
mov
pop
mov
or
pop
cmpsb
jnp
lret
and
mov
inc
and
adc
mov
dec
clc
ret
xchg
mov
leave
push
loope
out
add
lods
dec
clc
scas
sub
add
mov
inc
jmp
add
inc
sbb
pop
daa
outsl
data16
adc
and
sahf
sbb
sbb
lea
dec
mov
fildl
and
out
cmp
outsl
push
jecxz
lahf
pop
sbb
rcrl
dec
loopne
nop
push
inc
lea
lods
outsb
push
pop
xchg
jns
dec
inc
pop
xchg
enter
sub
popf
rorb
xchg
fnstsw
call
dec
or
negb
testb
sarl
cmp
stc
mov
adc
subb
sub
cmp
mov
xor
call
push
dec
ds
sbb
outsb
push
push
out
cmp
filds
sbb
daa
sahf
fwait
xlat
push
movsb
push
int3
lcall
mov
add
stc
mov
mov
or
xor
pop
sub
push
out
jle
add
sub
add
aam
shlb
jb
insl
mov
or
add
loopne
pop
shl
pop
jns
pop
aaa
sti
xor
pop
sbb
mov
ljmp
lods
jae
sbb
lret
mov
into
dec
ret
lret
inc
sbb
add
and
fdivs
pop
mov
sub
xchg
cmp
jecxz
mov
jge
jmp
nop
cmc
mov
stos
mov
xchg
jo
stc
fisubl
xchg
ss
sub
mov
sub
outsb
mov
sub
scas
negb
add
pop
cmp
push
in
mov
inc
push
mov
mov
cmp
scas
repz
adc
mov
cmp
cmp
inc
xor
mov
shll
cs
jo
sti
mov
and
jp
inc
pop
dec
mov
stos
and
pop
fdivrl
fidivl
test
mov
shll
sbb
cltd
leave
cwtl
les
xor
sbbl
sti
lds
out
pop
fwait
or
addr16
enter
push
jmp
test
arpl
pop
xor
inc
int3
mov
mov
xchg
pop
popf
xlat
mov
jnp
stc
stos
dec
dec
mov
stos
mov
jecxz
div
aad
lods
pop
sahf
ror
cmp
shlb
stos
cmp
mov
inc
push
cmp
mov
xchg
cmp
ljmp
loope
arpl
or
cmp
stos
lret
pop
cwtl
add
xor
cmc
ja
xor
xor
dec
and
jae
add
popl
daa
int
mov
loop
push
xor
cmpsb
call
lock
fcomp
rcl
mov
sbb
or
xor
push
push
mov
in
push
das
ret
adc
sub
int
pop
and
or
add
ret
push
adc
pop
jne
ljmp
push
cmp
test
xorl
cs
cmpsb
or
sbb
fwait
aas
repz
enter
sbb
adc
sub
pop
pushf
adc
leave
jmp
push
xor
adc
pop
punpckhdq
lahf
sbb
mov
clc
xchg
jp
cmp
shrb
in
outsb
lods
xchg
xchg
adcl
cmp
lret
sbb
movsb
push
clc
cmp
xchg
or
call
pop
and
out
adc
testb
push
out
mov
push
in
xchg
lods
jge
cld
jmp
xor
nop
data16
and
movsb
xchg
xor
int
xor
aaa
into
lods
mov
xor
dec
mov
pop
push
sbb
pop
je
pushf
mov
popa
lods
or
push
ret
mov
cmc
pop
out
inc
xor
pop
cs
lods
movb
cmp
fisubrs
aaa
sub
repz
lods
test
es
testl
lock
leave
popa
dec
push
pusha
or
out
mov
or
inc
inc
shlb
pop
adc
mov
dec
push
inc
stos
and
ds
dec
xchg
test
cs
adc
jo
mov
sbb
push
into
repnz
iret
jg
xor
mov
fidivs
iret
mov
int3
negl
push
mov
push
movsl
mov
in
mov
test
xor
lcall
daa
jmp
rorl
cmc
cmp
out
in
pop
pop
in
xchg
fbstp
inc
cmp
or
fsubr
stc
ja
inc
xor
sub
mov
cmpl
mov
int3
imul
int
cltd
adc
sbbb
sbb
or
jmp
mov
jne
push
js
sbbl
sub
test
jb
add
nop
arpl
fs
xchg
gs
dec
in
cmpsb
mov
xor
adc
sub
jns
push
sbb
outsb
cmc
jmp
outsl
ss
lock
ret
cmc
outsb
mov
aas
mov
cli
jl
in
xchg
push
stc
push
cwtl
test
xor
outsl
push
push
sti
cmp
mov
test
xchg
cmpsl
jbe
inc
adc
and
repz
pop
mov
adc
xchg
mov
int3
leave
clc
mov
xor
insb
pop
clc
test
rclb
int3
cmp
sub
jne
jae
pusha
or
push
movsb
adc
aaa
mov
leave
in
rorl
ficompl
dec
test
das
fiadds
mov
mov
or
jl
fbstp
and
leave
sub
sarb
popf
cmpb
or
xor
in
or
cmp
sub
cmc
jnp
sub
inc
push
dec
subb
cwtl
pop
sub
testb
fsubrp
lret
aam
inc
push
js
push
jecxz
cmp
notl
mov
adc
mov
loope
dec
push
sarb
outsl
dec
imul
jns
xor
sbb
xchg
insb
cmp
in
cwtl
loop
push
push
test
inc
insl
call
imul
ljmp
mov
push
aaa
xor
repnz
fistps
aas
add
in
cs
or
int
xchg
aam
or
leave
sub
out
sbb
and
cmp
and
mull
mov
and
mov
in
mov
mov
jl
dec
test
sub
xor
push
add
push
movsl
cmp
push
push
les
bound
cld
pop
xchg
in
sbb
dec
lods
add
imul
out
and
pop
loopne
ja
xor
jge
arpl
popa
mov
dec
push
gs
test
rcll
sub
in
cwtl
dec
fiaddl
xchg
js
and
push
repnz
jne
dec
in
out
mov
in
jge
push
pop
jle
push
jle
add
mov
mov
or
dec
lcall
lds
shl
mov
data16
jnp
adc
gs
sbb
cli
jle
pushf
push
mov
and
jmp
sbb
ljmp
lds
jge
mov
lcall
shlb
inc
lods
cltd
lahf
test
push
mov
call
push
sbb
loope
push
lea
test
or
push
lcall
cmpsl
mov
dec
inc
cmp
stc
and
jmp
in
cld
mov
decb
ret
dec
mov
fildll
sbb
bound
orl
lds
in
mov
cmc
dec
outsb
icebp
mov
adc
xchg
inc
ds
xchg
arpl
and
mov
and
sbb
les
test
movsl
push
push
out
shrl
lcall
pop
mov
or
je
xchg
rcll
xor
aaa
fidivrl
test
fcoms
leave
xchg
movsl
in
xchg
jbe
or
filds
in
pop
jno
in
mov
fstl
call
jl
xor
test
pop
cmp
push
dec
in
jp
jb
mov
xlat
cmpl
shrl
mov
dec
bound
shl
loopne
out
xor
jo
dec
imul
jcxz
inc
data16
popa
inc
pop
cmp
incb
and
mov
sbb
sti
mov
dec
sbb
pop
inc
lahf
inc
add
inc
mov
aas
ss
or
cli
imul
test
xchg
stos
jg
enter
mov
jb
dec
nop
nop
out
cwtl
jl
shrl
or
popa
xor
aas
jle
mov
jge
ds
jecxz
fsubl
stos
pop
push
pop
mov
mov
hlt
pop
out
je
movsl
faddp
fmull
loop
mov
out
sbb
mov
add
ss
mov
push
sti
mov
dec
lea
outsb
push
mov
cmp
repnz
push
inc
out
divl
adc
push
ret
push
test
add
daa
stc
or
or
sub
test
lret
xchg
sub
and
scas
popa
pop
stc
dec
mov
cmc
jp
sbb
pop
dec
mov
inc
and
dec
push
push
pop
shll
mov
and
hlt
lods
jno
rolb
dec
inc
ret
xchg
add
push
mull
and
enter
dec
push
ljmp
mov
pop
xor
mov
adc
aaa
mov
xchg
sbb
inc
pop
fmull
jbe
xor
cltd
int
fsubrp
and
jno
fwait
lock
fcmovu
sahf
or
xchg
std
xor
cs
in
lret
adc
and
push
or
daa
xor
fwait
fwait
movsb
pusha
mov
and
in
mov
outsl
popf
cmp
aad
mov
cmpsl
dec
mov
and
lods
push
inc
pop
incb
cmp
dec
xchg
mov
jl
mov
ss
leave
sbb
stos
mov
push
fsubl
aas
xchg
aaa
xchg
or
push
pop
fldt
das
adcb
scas
mov
insb
dec
out
cmc
fldenv
jecxz
sbb
lahf
in
push
mov
fidivl
flds
in
mov
mov
cld
mov
mov
push
sbb
aam
hlt
sbb
sbb
xchg
xor
lahf
push
je
jg
in
mov
dec
inc
ret
inc
push
aam
outsl
scas
test
mov
shrl
jae
pop
jg
aam
daa
call
fsubrs
ja
scas
xor
xlat
mov
mov
mov
push
push
addb
dec
mov
lret
xchg
sub
mov
cmp
in
or
insb
inc
push
mov
jge
lock
push
and
or
daa
adc
mov
notb
or
cmp
out
mov
repz
movsb
jns
pop
aaa
and
dec
and
pop
fidivrs
cs
push
mov
pop
shrl
out
ret
pop
dec
inc
push
fdivrs
and
les
insb
test
loope
sub
fdivl
and
mov
cmpsb
sbb
jns
lea
xor
rcr
aaa
int3
sbb
jno
push
jnp
inc
lcall
icebp
stc
sub
pop
pop
push
iret
sbb
cmp
mov
cld
lret
ljmp
inc
fsubs
jge
scas
fwait
mov
lret
int3
jle
pop
pop
std
dec
jge
and
pop
dec
ja
std
fs
negb
sub
mov
mov
push
insb
rcrl
xchg
jecxz
subb
fidivrs
xchg
sysexit
xor
push
js
add
mov
mov
or
mov
fiadds
push
add
and
mov
shl
push
mov
push
or
neg
or
cmp
mov
adc
insw
fists
sbb
mov
inc
push
lcall
xchg
dec
out
inc
and
rep
push
mov
fs
mov
orl
pusha
stos
ds
imul
hlt
xor
jmp
sbb
sbb
inc
mov
cltd
fisubrl
and
aas
mov
mov
push
cmp
sbb
jbe
add
insl
je
jmp
adc
mov
pop
jg
jbe
ds
rolb
dec
cmp
mov
mov
imul
sahf
sbb
xchg
popf
jno
cld
pop
rolb
mov
xor
add
adc
mov
push
cwtl
sbb
push
xor
sbbb
pop
mov
das
add
jp
popf
rorb
ds
xchg
cmpsl
fsts
inc
jae
add
adc
cltd
push
roll
jne
mov
nop
iret
shrl
int3
jbe
out
xor
js
movb
mov
fcmovu
stos
xchg
arpl
xchg
ljmp
lods
insl
les
and
or
or
push
cmp
sbb
aad
pop
dec
inc
push
mov
popf
mov
lods
nop
je
shrl
mov
xor
pop
and
or
mov
shl
cmpsl
mov
lds
mov
mov
dec
pop
mov
inc
cmp
jne
std
push
push
push
ss
subb
mov
imul
jbe
push
stos
ret
icebp
imul
ror
xchg
insl
incl
push
xor
push
sub
push
xor
mov
testb
push
push
push
jge
int3
push
dec
lcall
xchg
ljmp
call
out
pop
sbb
xchg
fdivr
test
movsb
test
and
aas
popa
lret
aad
pop
orl
pop
lods
xchg
jp
mov
inc
mov
push
movsb
cmp
stc
fbstp
add
iret
mov
mov
lock
lds
stos
and
mov
mov
sub
imul
fdivrs
cmpsl
stos
in
jle
repz
jmp
mov
fadds
xor
adc
push
sub
mov
mov
mov
sbb
orb
xchg
push
scas
xchg
add
test
out
hlt
jecxz
dec
sub
insb
in
cmpsb
xor
test
fcoml
out
cmp
mov
in
cli
pushf
rclb
xchg
fbld
xchg
notl
mov
pop
insb
data16
js
outsb
push
and
add
push
push
dec
dec
enter
cmp
sbb
pop
cmp
jbe
adc
sbb
test
popa
sbb
movb
cmc
jg
pop
mov
pop
xchg
push
pop
aad
sbb
addb
lret
cmc
lcall
test
add
xchg
and
daa
rcll
test
adc
add
lret
clc
lcall
movlps
arpl
cwtl
pop
add
jecxz
mov
repz
mov
iret
mov
aam
ja
out
add
xchg
pop
mov
push
pop
jae
cltd
clc
xor
mov
xor
add
out
out
mov
jbe
jecxz
clc
jp
pop
lret
subb
push
adc
popf
xlat
push
push
les
stos
ret
adc
jne
jecxz
push
pop
cli
or
push
xchg
inc
out
aaa
adc
jmp
adc
cli
adc
xor
pusha
mov
loopne
mov
mov
pop
mov
mov
add
jl
and
out
shlb
mov
xor
lcall
hlt
insb
cwtl
std
lahf
adc
sbb
and
inc
adc
pop
popa
aad
fsubr
cwtl
add
fcompl
imul
pop
push
ds
adc
hlt
jbe
cwtl
inc
cwtl
cld
xlat
lret
shll
sub
test
jp
push
sbb
fidivs
test
jp
in
add
pusha
and
pop
iret
or
push
sbb
dec
xlat
lea
and
inc
dec
xor
jb
in
in
mov
lods
xchg
ljmp
imul
jae
push
pop
sbb
add
rorb
sbb
scas
or
push
pop
mov
add
stc
jbe
jecxz
xchg
out
pop
jo
pop
js
cmc
mov
adc
stc
cmp
mov
das
call
repnz
pop
ret
int3
lcall
push
repz
icebp
mov
and
test
sbbb
cmpsl
xchg
repz
sar
add
scas
cld
gs
clc
add
mov
mov
or
bound
mov
xchg
mov
jge,pn
shrd
pop
fidivl
xor
in
addr16
push
mov
ror
sbb
lahf
ret
test
pop
in
gs
insb
adc
dec
test
jae
mov
cmpsl
adc
sbb
hlt
xor
loopne
ficomps
sub
lea
stos
sub
cmp
inc
mov
lcall
jno
pop
mov
ficoml
cmp
mov
lcall
data16
cmp
and
adcl
xchg
aam
xchg
sub
cmp
xchg
mov
xor
cwtl
stc
jge
sbb
iret
push
jns
add
fyl2x
or
mov
fldt
jl
push
fisttpll
inc
jns
hlt
rcr
pop
lahf
js
ja
out
inc
gs
rcrb
loope
mov
mov
addr16
xchg
add
out
mov
dec
mov
std
movsb
mov
inc
andl
lret
dec
mov
lret
dec
push
jae
pop
add
adc
test
push
adc
cmp
mov
mov
movhlps
nopl
out
jle
repz
jae
add
test
mov
leave
enter
fcomi
mov
and
mov
pop
mov
cmp
push
sahf
sub
inc
jle
aas
xchg
lds
out
xchg
call
jp
push
pop
lret
sti
mov
dec
adc
mov
cmp
pop
adc
cmc
mov
cmp
xchg
mov
js
icebp
and
loop
sub
shl
hlt
mov
sbb
cld
pusha
imul
es
jl
sarl
lods
inc
sbb
aas
enter
adc
dec
ss
xchg
rcrl
xchg
or
push
jae
jne
mov
push
mov
rcr
lods
sbb
push
andb
mov
les
push
adc
ret
mov
sub
imul
mov
xor
push
insl
dec
leave
cld
cmp
les
adc
xchg
popf
cmpsl
leave
sti
sub
push
sbb
xchg
in
push
mov
icebp
das
lahf
inc
lock
ja
cmpsl
test
scas
inc
fdiv
jae
int3
dec
shll
dec
mov
mov
add
test
jne
push
lahf
mov
sbb
lods
mov
icebp
mov
and
lahf
scas
or
mov
mov
out
cmp
mov
outsb
adc
fisubrs
add
add
xor
in
pop
add
mov
xchg
push
push
add
and
outsb
jp
je
inc
call
sarl
mov
cltd
out
inc
push
mov
mov
xor
lret
sub
xor
daa
inc
xor
cli
ror
inc
push
push
lock
loopne
push
mov
mov
cmpsl
push
add
mov
or
cmp
jl
ljmp
leave
test
inc
stos
add
lahf
repnz
cmpb
lret
out
rorl
test
push
dec
sub
leave
out
pop
pop
xor
int3
mov
sub
pop
es
push
into
jo
pop
mov
fldenv
dec
aas
jnp
jo
mov
mov
mov
lds
in
dec
sbb
shll
jnp
mov
mov
aas
scas
jp
insl
into
dec
inc
jb
and
fnstcw
das
mov
xor
mov
arpl
rclb
pushf
add
mov
jo
rclb
or
mov
mov
mov
push
cmc
aaa
lret
ret
mov
aas
aam
cmpb
cmp
mov
xchg
jnp
or
and
sub
xchg
fldenv
add
outsl
pop
and
fsts
movsb
mov
cli
cmp
scas
in
pop
xor
iret
jnp
ljmp
xor
dec
out
xor
jge
mov
cmpsb
inc
cli
mov
xchg
sbb
pop
fnstsw
xlat
push
out
enter
cmp
dec
mov
test
pop
pop
adc
sub
shrl
push
mov
mov
mov
jle
dec
adc
lret
cwtl
fstl
lea
add
daa
shl
add
loopne
mov
cmp
leave
lret
int
sbb
call
sub
test
inc
stos
or
mov
outsl
dec
push
sbb
in
es
pop
dec
mov
mov
pop
pop
shr
decb
rcr
test
stos
pop
mov
lods
sub
addr16
nop
inc
sbb
sub
sub
addr16
negb
aam
xchg
lods
add
int
xor
xchg
mov
push
add
sbb
inc
test
sti
bound
inc
in
cmp
stc
es
ds
mov
pusha
xlat
aaa
shrb
jecxz
push
lret
dec
sarl
pop
mov
or
cmpb
lods
push
add
fwait
stos
add
dec
pop
sahf
lea
sbb
pop
cwtl
lea
and
js
mov
mul
test
sarl
pop
popa
xor
add
and
jne
cmp
push
sbb
mov
add
jmp
stos
xchg
sbb
stos
and
push
test
adc
jb
test
xor
imul
add
and
pop
scas
sbb
mov
or
into
push
pop
std
sub
add
sub
aaa
out
in
xchg
xor
dec
xor
lret
aaa
inc
mov
popf
loope
es
inc
pop
xchg
pop
cmp
lcall
xor
cmpsb
cwtl
jp
bound
jmp
mov
push
sbb
stc
mov
loope
imul
jbe
add
js
add
adc
and
push
cmpsl
inc
scas
mov
mov
fidivs
fadds
call
addr16
sub
xchg
and
arpl
fisubs
or
leave
shlb
mov
jge
mov
movsl
push
dec
test
ret
cmp
dec
rcrl
push
sbb
loop
shlb
pop
xor
or
je
test
outsl
cmp
cmp
lds
rolb
jno
mov
iret
pop
dec
sti
mov
in
cmpl
mov
insl
mov
or
sub
lret
mov
jp
jae
pop
fwait
movsl
stos
shrl
sbb
mov
nop
sbb
pop
xor
mov
sbb
mov
arpl
cmp
xchg
add
stc
jnp
sbb
stos
enter
inc
xchg
mov
jne
fwait
inc
int
xchg
sbb
arpl
pop
in
movsl
cli
repnz
dec
cmp
adc
inc
testb
add
daa
in
imul
mov
fldl
pop
jno
orl
jae
addr16
pop
into
inc
rol
push
in
lea
push
mov
es
shll
arpl
idivl
lret
sub
add
movl
push
push
pop
push
in
dec
lcall
add
sar
sub
in
les
xchg
push
sbb
mov
sbb
outsb
mov
pop
scas
aas
or
test
xchg
jo
and
xchg
sub
sti
add
mov
add
dec
popa
xor
pop
mov
pop
clc
out
and
adcb
xchg
add
fs
adc
clc
add
test
test
sti
sub
and
push
push
orb
pop
xchg
out
movsb
ds
out
xor
aad
scas
stos
iret
jmp
dec
push
dec
stos
and
fidivrs
sub
pop
adc
iret
testb
cmp
jmp
inc
out
lret
or
cli
rcrb
pop
sbb
arpl
lods
push
pop
inc
inc
cmp
popf
mov
outsb
mov
shll
fstl
jne
lahf
out
sbb
movsl
hlt
dec
mov
dec
js
les
xchg
sbb
jl
xchg
mov
or
popa
add
or
stc
arpl
mov
imul
jge
insb
hlt
xchg
xor
pop
aas
out
inc
mov
enter
out
xor
int
mov
ja
movsw
or
xor
push
lds
aad
imul
add
jmp
push
cmp
sub
and
les
jbe
pop
sub
out
and
cmpsb
int
cmp
es
lahf
lods
in
and
stos
dec
xorl
rcr
mov
out
and
test
mov
pusha
mov
or
fidivrs
into
dec
pop
fsubl
xor
aad
pop
test
bound
int3
gs
xchg
add
xor
and
jae
mov
sbb
mov
cmp
add
fisubrl
jno
sub
lea
xor
nop
adc
mov
xor
sub
sbb
add
inc
inc
push
imul
scas
adc
mov
in
call
inc
sub
mov
mov
andl
mov
xchg
jmp
or
cmp
sbb
dec
fwait
gs
cmpsl
ljmp
xlat
inc
jbe
orb
cmpb
inc
mov
mov
and
scas
stos
rol
hlt
pshufw
jo
xorl
loopne
iret
jg
fsts
out
mov
xor
es
fldt
adc
cmpsl
std
lret
cmpsb
je
and
mov
mov
and
pop
sbb
sbbl
ret
mov
or
rcr
dec
retw
aad
popa
push
push
jbe,pn
xor
int3
int
aam
mov
mov
push
jae
adc
xchg
lock
xor
inc
test
out
in
mov
out
jbe
out
pushl
dec
ret
dec
lods
loope
jnp
add
push
sub
cmp
pop
or
cmp
pop
insl
int
insb
cli
addr16
mov
xorb
mov
jo
fistpl
mov
cmp
dec
dec
adc
xor
gs
daa
clc
add
mov
enter
subl
dec
orb
loopne
int
mov
iret
pop
and
fwait
out
jnp
adc
push
hlt
push
jmp
jnp
fnstenv
mov
lea
inc
in
pop
bound
push
jmp
pop
pop
add
inc
js
cli
mov
call
lea
outsb
sbb
push
pushf
movd
lock
dec
sarl
test
mov
data16
inc
andb
push
dec
std
stc
ljmp
jl
popf
adc
leave
push
xchg
mov
mov
mov
pop
sub
ss
lar
mov
jg
fxtract
and
shll
mov
shll
in
aam
push
popf
jbe
mov
lret
shrl
call
cmp
add
fsubp
jg
out
aas
dec
sarl
lock
pop
loopne
mov
cmp
mov
stc
jl
cltd
pop
ret
movsl
dec
cmpsb
mov
inc
adc
rclb
xchg
cltd
mov
ss
ret
adc
jl
loop
lds
les
cwtl
jle
ds
jl
dec
push
dec
idivb
mull
cmp
xchg
data16
push
mov
loope
and
enter
lods
push
loop
ja
je
push
je
mov
icebp
subl
cmp
mov
fisttpll
popa
std
stos
pop
and
jp
addr16
cmpsb
ret
lods
decb
out
and
subl
stos
pop
sub
pop
stos
jae
mov
mov
mov
les
dec
insb
arpl
push
add
clc
or
pop
es
aas
daa
test
jo
jmp
cmp
and
ror
lock
pop
and
imul
xor
clc
or
arpl
in
scas
rolb
and
addr16
cltd
mov
shlb
adc
repnz
jno
xchg
jne
scas
push
sbb
sbb
sub
mov
int3
cmp
int3
loope
loope
repz
mov
mov
imul
mov
sti
and
and
push
xchg
sbbb
dec
pop
mov
ss
sub
outsl
aad
mov
cs
inc
dec
cli
das
addr16
cld
in
jbe
jne
jo
lcall
add
sub
out
aas
push
loop
sub
jle
nop
pusha
and
mov
je
or
cltd
or
mov
popf
scas
in
push
mov
lock
fisubs
pop
dec
repz
mov
outsb
les
xchg
or
test
in
or
data16
daa
enter
inc
jmp
movl
mov
xor
or
sbb
or
adcb
xorb
push
pop
sahf
dec
and
or
jo
in
adc
out
in
push
cmpb
jne
push
sbb
jl
adc
addr16
lods
xchg
push
dec
and
cmp
push
repz
pusha
jno
xchg
xor
push
lods
jl
scas
sub
mov
inc
or
sahf
pop
sahf
je
inc
cld
pop
mov
rorb
test
or
and
pop
cmp
xor
cmc
push
and
sub
and
xchg
sbb
gs
fimuls
out
inc
push
inc
mov
popf
add
and
push
fdivs
pusha
mov
repnz
cli
dec
push
cmpb
lahf
mov
push
sub
lock
xchg
mov
scas
cmpsb
fcomp
stos
xchg
dec
push
adc
stc
mov
scas
and
jo
sub
xchg
ret
xchg
cmp
sarb
cmp
cmp
pop
cmp
inc
xchg
fs
imul
xchg
cs
mov
xchg
inc
pushf
cvttps2pi
js
lods
fistpl
cmp
add
xor
push
cmp
enter
ja
adc
jmp
pop
das
bound
xor
vmovaps
dec
or
aas
xchg
faddl
mov
int3
lds
mov
scas
xor
cmp
mov
and
jbe
mov
mov
inc
cmp
mov
sbb
jns
fld
shrl
rcrl
and
mov
lret
dec
lret
rorl
or
cmc
xchg
pop
adc
int
inc
cmc
and
std
sub
dec
scas
stos
adc
mov
pop
mov
mov
pusha
add
push
cmp
xchg
mov
movsb
sti
loopne
push
and
sarl
cld
movsb
stos
ficoms
add
mov
outsb
push
or
inc
mov
fnstcw
dec
xor
addb
jmp
rolb
mov
dec
repz
mov
je
xor
inc
call
js
push
and
rolb
ret
cmpsb
mov
add
imul
or
pop
stos
xor
mov
xchg
insb
fildll
mov
shrb
idivb
jne
adc
test
ja
test
test
or
jae
fisubrs
dec
xor
pop
inc
inc
sbb
jge
cli
pop
add
adc
adc
jns
sbb
subb
scas
pusha
lea
test
xor
mov
nop
adc
push
gs
add
out
and
adc
fcompp
sub
adc
cmp
push
andb
inc
add
and
push
ja
ss
or
jb
add
pop
push
dec
sub
cmp
or
mov
push
mov
push
jp
cmp
xchg
inc
pop
pop
daa
xor
gs
insb
cmpsb
aad
xlat
es
vmulps
lret
out
js
add
dec
pop
mov
dec
decb
cmp
rolb
jne
lds
mov
ds
cwtl
and
mov
sub
mov
and
test
loopne
inc
dec
inc
sbb
ljmp
xor
and
sbb
adcl
aad
jo
cmpl
bound
popa
add
repz
push
jo
movsb
lock
rcr
orb
xchg
or
xlat
test
lods
fistpl
xor
cmp
nop
data16
jp
inc
sub
push
pop
mov
xchg
mov
push
jp
adc
and
jge
cltd
dec
dec
cmp
push
jmp
orb
outsl
arpl
dec
push
pop
rcrl
enter
pop
test
sbb
mov
pushf
dec
add
cmp
mov
push
js
jns
fdivl
cmp
std
pop
dec
dec
in
shlb
or
sti
repz
imul
lods
js
mov
rol
sub
mov
nop
inc
test
pop
dec
push
lret
test
sub
mov
xor
dec
sbb
add
adc
clc
addl
add
push
xor
cltd
add
adc
insl
xor
scas
cmp
lcall
dec
mov
cmc
cmc
imul
xor
testl
lahf
inc
cmpsb
fcomip
out
cs
lret
inc
xor
mov
fimull
iret
cmp
dec
push
cmp
ljmp
in
cmp
mov
call
adc
push
dec
or
vpminsw
data16
out
daa
pop
gs
les
lret
push
mov
cltd
jg
pmullw
sbb
pop
cmc
out
je
sbb
fildl
mov
or
cld
pop
xchg
sti
xor
mov
js
mov
sbb
insl
repnz
dec
ret
mov
sbb
incb
nop
movsl
xchg
lret
and
xchg
jne
cmp
xlat
or
push
sub
mov
pop
aam
pop
mov
mov
ret
popf
dec
hlt
cmpsb
mov
imul
outsb
lcall
inc
lds
adc
jle
xchg
dec
popf
push
in
sbb
push
push
lret
ret
or
jno
int
outsl
push
jmp
or
ja
or
adc
jl,pn
cld
dec
cwtl
outsl
mov
loope
ret
mov
jno
sti
aad
mov
mov
xchg
xor
push
or
inc
mov
imul
pushf
into
jbe
sbb
adc
in
aaa
and
mov
or
sbb
out
pop
xchg
cmp
enter
push
pop
cmp
out
add
repz
in
fisttpll
cmp
mov
aad
les
mov
ss
sahf
push
xor
cmp
sbb
mov
gs
lds
in
cmovnp
pop
push
ljmp
adc
jns
ror
pop
push
pop
mov
sbb
movsb
add
icebp
iret
push
mov
jg
adc
fbld
dec
loopne
mov
cmc
mov
icebp
cld
mov
arpl
mov
cmp
stc
negl
std
aad
xorb
outsb
dec
adc
pop
add
pop
movsb
lods
jb
mov
leave
mov
mov
mov
jge
xchg
jo
inc
outsb
pop
ja
sub
pop
cltd
in
jmp
outsl
mov
aam
mov
imul
push
mov
std
or
xchg
fbld
mov
lret
mov
movsl
xchg
jne
push
or
xlat
cmp
push
sub
pusha
push
jle
dec
jbe
sub
lock
pushf
add
daa
dec
xchg
sar
add
add
nop
rolb
or
sbb
enter
loop
shlb
inc
lahf
dec
out
test
outsl
inc
loopne
mov
lods
bound
ret
les
gs
icebp
loopne
xor
sub
out
in
jle
js
push
push
daa
dec
push
xchg
shlb
lock
mov
jmp
jmp
jmp
cmp
or
fs
in
sbb
xchg
mov
insb
lods
addr16
sub
jge
lods
mov
lcall
sbbl
pop
adcl
sub
fsubrl
add
xchg
iret
jmp
sahf
mov
pop
std
pop
push
out
test
cmovl
jge
mov
dec
popa
mov
pusha
inc
idivb
add
mov
lret
dec
test
mov
cld
punpcklbw
sbb
popa
mov
mov
int
xor
pop
xchg
rclb
stos
aam
cmp
push
jno
jnp
mov
push
jmp
dec
je
add
cmpsb
jno
mov
add
loope
cs
xor
pop
hlt
movsl
aas
and
push
add
popa
xchg
jns
call
gs
test
ss
dec
dec
sub
into
mov
pop
mov
es
jg
jecxz
inc
mov
inc
inc
sub
insb
pop
sbb
xchg
inc
fnsave
push
sbb
and
and
sub
mov
sti
push
nop
inc
pusha
mov
out
cvtps2pi
sub
adc
or
in
mov
sarb
cmp
dec
or
in
icebp
adc
xchg
popf
data16
cmp
or
out
sarb
or
jp
add
cmp
loop
add
xchg
in
bswap
cltd
in
inc
push
lret
cltd
mov
icebp
test
sub
jb
push
push
and
icebp
mov
mov
ja
fistl
movsb
inc
cmp
dec
pop
sub
jg
push
loopne
lock
dec
inc
cmp
mov
nop
push
fisubrs
add
mov
sbb
jl
pop
sub
and
dec
xor
movsl
daa
les
lcall
inc
jns,pt
or
cmp
outsl
sub
pop
jbe
dec
shlb
repnz
xchg
jg
es
fisubrs
subb
in
movsl
imul
or
mov
in
lret
icebp
nopl
or
push
xchg
mov
repz
leave
inc
jbe
mov
scas
aas
inc
mov
cltd
loope
push
mov
push
clc
cltd
pop
mov
inc
pop
inc
xchg
rcrl
mov
dec
subl
aam
lock
data16
xchg
pop
ud0
or
testb
scas
js
nop
mov
in
add
lcall
jmp
pushf
and
bound
and
lea
xchg
hlt
jns
arpl
repz
mov
arpl
aas
int
push
push
pop
push
add
mov
dec
jle
pop
std
inc
fsubrl
push
aam
sub
push
daa
and
mov
call
fdivrp
rol
and
dec
ljmp
gs
push
test
jl
mov
repz
dec
mov
xor
adc
jecxz
movsb
fdivrs
cld
insb
xlat
or
xor
rcrl
cmpb
sub
inc
push
mov
movsl
mov
inc
test
or
xchg
push
fistpl
inc
sbb
inc
xchg
adc
inc
mov
jnp
shl
cwtl
or
inc
sub
test
lods
push
jp
aaa
icebp
in
mov
pop
shll
mov
mov
jle
dec
push
mov
jle
pop
sub
fwait
sub
cmc
mov
inc
fisubl
in
xchg
inc
jo
les
idivl
andb
loopne
mov
pushf
lret
sub
adc
scas
adc
ljmp
jnp
ret
mov
lcall
push
imul
adc
in
out
sub
lock
or
test
mov
lahf
dec
sbb
in
sub
loope
leave
push
inc
pop
add
xlat
movsl
cmp
fisubs
jl
xor
psubw
fildl
mov
and
lret
hlt
popa
int3
xchg
cmp
xlat
bnd
dec
mov
xchg
insb
sbb
jmp
or
cld
lcall
outsb
inc
addr16
jp
mov
iret
push
cmp
fsub
pop
fistps
ljmp
add
pushf
into
inc
sbb
mov
cld
xor
push
mov
scas
pop
xor
xchg
pop
mov
jne
xor
pop
jae
cmp
loopne
and
out
xchg
dec
jle
sub
inc
das
jnp
jnp
outsb
or
mov
fstps
jns
ret
dec
sub
xchg
cmc
or
and
mov
ds
xor
shrb
lcall
cmp
insl
inc
mov
add
stc
jae
or
das
mov
outsl
cld
pop
jmp
loopne
xchg
xchg
push
mov
cld
mov
add
daa
sub
out
ja
xor
xchg
push
out
sbb
mov
lahf
jge
addr16
xchg
iret
or
fisubl
sub
cli
pop
sub
ss
outsl
in
xor
rclb
or
mov
or
fnsave
notl
sahf
jb
repz
out
add
and
and
add
jl
push
jl
and
mov
inc
sub
les
jns
xchg
out
mov
loope
xchg
add
popa
cmp
pop
mov
mov
imul
ret
jecxz
cmp
sarb
inc
push
xor
ret
fidivrl
dec
jg
push
andl
fiaddl
xchg
mov
sub
mov
pop
andl
popf
into
cmp
cli
ret
ds
push
dec
arpl
dec
mov
js
sub
std
mov
aas
sub
in
imul
dec
cmp
sub
mov
pop
repnz
mov
test
jge
dec
mov
dec
dec
xchg
adc
xchg
adc
dec
and
cmp
out
jge
jecxz
jne
mov
mov
das
outsl
movsb
xchg
sbb
cmp
mov
call
push
cmpsl
cmp
shl
lahf
or
jmp
leave
adc
mov
pop
inc
repnz
mov
inc
xchg
push
pop
jbe
fidivs
mov
ljmp
aad
aaa
xchg
sti
enter
in
shlb
add
repnz
cmpsb
pop
xchg
push
adc
mov
xchg
lret
pop
pushf
jnp
insl
pushf
mov
std
pushf
repz
xchg
sub
add
add
cwtd
jle
and
cli
loopne
lea
mov
test
and
aas
das
das
push
xchg
loop
lahf
dec
cmp
cltd
repz
insl
xor
repz
xor
out
cmp
jmp
jnp
imul
das
or
scas
mov
mov
ss
xchg
sub
mov
aad
pop
test
jle
push
sub
push
aas
jnp
pop
jo
add
mov
xchg
or
fiadds
lahf
mov
addr16
subl
cwtl
or
dec
cmpb
ret
cmp
push
addl
and
pmulhw
jns
sti
icebp
xchg
bound
repz
jmp
daa
cmp
lea
dec
push
cmpsl
fcmovbe
popf
sub
lea
bound
movsl
arpl
pop
lods
pop
push
rcl
push
jnp
shld
ljmp
dec
cmp
mov
pop
mov
popa
lret
scas
mov
cmp
fldt
and
ljmp
fcomip
jl
jg
jle
adc
dec
push
mov
ret
push
adc
xor
test
inc
pop
insb
inc
daa
and
fsts
out
mov
repz
lcall
ds
js
mov
mov
mov
mov
sub
or
jmp
sbb
cmp
shl
sbb
cmc
and
pop
mov
frstor
mov
bound
and
sub
inc
mov
xchg
stos
test
lcall
xchg
mov
addr16
mov
pusha
xor
mov
clc
fcmovnb
fbstp
dec
mov
bound
imull
and
sbb
mov
sbb
shlb
mov
rorb
and
ja
outsl
sbb
dec
cld
mov
pop
fisttps
orb
lods
insl
ret
mov
pop
mov
insl
stc
mov
cmpsl
lcall
mov
jg
add
repz
inc
rcrb
cmpsl
mov
cmc
jge
push
repz
outsl
movsb
push
imul
xchg
inc
lahf
mov
mov
sti
cmp
lcall
xor
push
sub
sub
jo
in
xor
sub
xor
lds
inc
lods
icebp
cmp
in
jecxz,pt
outsb
loop
cld
sti
add
mov
out
add
mov
and
mov
xor
mov
loop
jno
imul
ret
scas
lods
push
or
xchg
push
mov
push
sub
fistpll
imul
cwtl
jne
shlb
xlat
pushf
enter
stc
test
daa
sbb
and
dec
mov
in
push
lcall
ret
lods
inc
fsubrl
jecxz
and
rolb
inc
in
mov
or
orb
or
mov
sahf
pop
lret
mov
inc
int
push
inc
cmovns
call
xchg
out
jnp
loop
sbb
mov
fldt
jae
xchg
xor
cmp
int
or
stc
pop
inc
ss
in
sub
iret
dec
daa
clc
ret
sbb
push
push
pop
movsb
pop
sahf
or
cmpb
adc
popf
divl
cmp
loope
sbb
loop
repnz
test
xchg
add
testl
dec
cmpsl
gs
cmpsb
and
fdivrl
lods
sub
cs
mov
and
repnz
xchg
mov
sbb
repz
pop
sub
jecxz
push
push
les
dec
xor
popf
pop
mov
or
addr16
cmpsb
mov
mov
adc
cmp
xchg
cmc
sbb
sahf
icebp
fidivl
leave
pushf
movsb
pop
cmp
xlat
mov
inc
sub
test
out
pop
or
in
or
repnz
and
dec
jmp
bound
psrlw
ljmp
mov
dec
xchg
jmp
pop
orl
or
inc
xlat
and
cmp
sub
cmc
fwait
jno
aad
or
imulb
jno
cmpsl
add
xchg
cmp
jmp
and
lahf
add
sbb
adc
pop
xor
popa
cmp
fsubrl
stc
cmp
xor
subl
dec
pop
test
in
cltd
add
add
jg
js
ja
fisubs
dec
push
into
js
pop
fnstsw
mov
rorl
in
mov
xchg
push
outsl
stos
cmp
lds
xor
pushl
sub
inc
mov
into
fstpt
push
cmp
and
repnz
std
push
lods
adc
pop
push
mov
mov
sahf
pop
mov
dec
mov
leave
mov
lahf
inc
push
inc
icebp
loope
loope
imul
pop
loopne
cmc
cmp
mov
stc
cmp
aas
stos
stos
cld
sbb
in
fdivr
mov
icebp
jp
pushl
mov
and
js
int3
lcall
push
pop
rcrb
mov
imul
push
pop
dec
std
jecxz
inc
push
mov
ficompl
scas
aaa
sahf
jl
push
enterw
arpl
mov
jns
cmp
mov
in
xor
pushf
std
inc
add
scas
fadd
mov
pop
movsl
test
mov
mov
push
ds
jne
mov
sbb
mov
inc
fs
add
sti
push
loop
pop
and
cmp
fildll
movsl
and
jb
inc
jmp
push
jp
ret
mov
cmc
sahf
and
dec
loope
pusha
push
cli
pop
jl
adc
mov
xchg
fbld
xchg
outsb
ja
pop
fildll
sub
imul
add
data16
sbb
adcl
mov
xor
mov
xchg
data16
mov
cli
sbb
inc
push
mov
loope
cmp
ds
out
push
xchg
jne
fwait
stos
aam
pop
mov
scas
test
sbb
pop
nop
inc
push
or
and
ljmp
pop
or
sub
lcall
dec
xor
pop
or
sbb
scas
enter
push
fwait
clc
mov
jne
and
les
xchg
pop
rol
or
ffree
inc
and
mov
fldl
and
aam
or
sub
imul
addr16
daa
dec
movsl
jae
ret
inc
repnz
adc
mov
call
mov
xlat
loopne
mov
jecxz
push
shrb
outsl
lds
dec
leave
mov
loope
or
inc
xor
mov
lcall
hlt
inc
sahf
lcall
fbstp
ljmp
and
mov
das
sbb
roll
adc
cmp
mov
xchg
mov
ss
movsl
cmp
mov
stos
xorb
aas
push
xchg
push
in
add
loop
bound
sbbl
sub
sbb
enter
or
or
push
scas
fcmovb
ja
rorl
mov
add
pop
dec
cmpsb
cmp
cmp
sbb
test
xchg
rcr
adc
push
test
incb
lock
cmp
mov
push
sub
mov
imul
out
insl
clc
xchg
fsubl
mov
xchg
cmp
or
fsubrp
jl
cwtl
and
mov
loop
test
ss
jg
jbe
adc
data16
dec
cmp
pushf
imul
enter
sti
pop
in
lahf
mull
lret
int
xor
icebp
pop
ss
push
xchg
inc
ret
pusha
pop
call
xchg
aas
ret
outsl
icebp
push
mov
int
pusha
mov
scas
pop
mov
shll
cmpsl
dec
inc
adc
dec
test
dec
xchg
filds
push
call
xchg
out
popa
cli
test
and
iret
scas
ss
in
test
add
lea
dec
jl
sar
es
and
push
cmp
mov
cmp
cvtps2pi
mov
dec
push
xlat
mov
sahf
lahf
into
sub
sbbb
or
mov
mov
push
xchg
dec
xchg
icebp
rol
mov
movsl
stos
jne
fmulp
jg
xorl
mov
fstpt
sbb
dec
imul
jle
gs
dec
fsubrs
aaa
pushf
add
les
mov
or
adc
sbb
popa
sub
or
dec
nop
push
sbb
sbb
rorl
jno
mull
jo
mov
icebp
xchg
mov
and
xchg
lret
stc
sub
jo
sbb
aas
lds
clc
and
test
add
dec
add
xor
fsts
push
xchg
adc
test
cmp
idivb
xchg
insb
ficoml
aas
fmuls
lcall
cmpsl
sarl
dec
fstps
outsb
cmp
mov
test
es
and
push
or
and
xchg
adc
inc
lea
loope
lds
cmp
imul
pop
movsl
dec
hlt
mov
stc
mov
lea
test
push
ret
mov
sbb
jne
or
inc
lahf
push
mov
dec
mov
dec
adc
xchg
popl
adc
mov
mov
adc
push
mov
std
iret
movsb
in
push
jns
imul
pop
fs
out
inc
push
sbb
cmp
adc
pop
daa
sub
loope
or
add
bound
jge
lret
movsb
adc
adcl
lea
or
push
movsl
gs
or
xchg
mov
in
sbb
dec
xchg
and
movsl
mov
sub
xchg
lock
push
insl
cmpsl
test
scas
lret
jle
lret
cmp
jae
sahf
mov
out
lret
cmp
mov
pushf
movsb
scas
mov
popf
orl
push
seto
push
loope
mov
dec
shrb
repz
xor
sub
mov
sbb
lods
dec
xor
mov
lret
lret
xchg
out
js
decb
dec
fmulp
push
push
cmp
popa
insb
cmpsb
pop
cwtl
out
dec
lods
xchg
xor
fwait
jecxz
and
mov
push
in
dec
cltd
test
inc
shll
jo
push
scas
pop
lods
ret
clc
push
mov
icebp
push
icebp
aaa
dec
outsb
pop
cwtl
mov
or
xchg
insb
sub
lea
loopne
test
or
dec
and
mov
sbb
or
adc
inc
rclb
sub
lds
icebp
cmpl
sahf
mov
mov
adc
jo
in
jnp
testb
clc
loop
mov
dec
sbb
pushf
and
xor
lss
mov
gs
xchg
hlt
push
and
jns
and
push
mov
xor
jmp
xchg
sbb
mov
mov
mov
pop
and
or
test
testb
cmp
push
adc
cmp
mov
push
xchg
rcl
pushf
js,pn
dec
loopne
lods
adc
lods
cmp
into
cmp
push
ljmp
cmp
xchg
jmp
add
jecxz
and
loope
cltd
stc
mov
scas
ret
cltd
push
popa
cmp
jne
mov
lahf
add
mov
jbe
fistl
sbb
int
sbb
into
pop
ljmp
mov
subl
push
adc
movsb
xchg
les
jl
jl
imul
bound
out
into
inc
adc
ret
mov
push
aas
sbb
xchg
dec
out
jmp
mov
cmp
mov
in
je
sbb
sbb
jno
cmpsb
adc
cltd
xchg
cld
movsb
loop
push
xchg
jcxz
pop
test
adc
xchg
jb
test
lret
shrb
inc
mov
pop
inc
mov
test
and
iret
inc
sub
rcrl
push
popf
mov
fwait
sub
xlat
repnz
and
add
dec
jns
dec
out
mov
loope
and
inc
cmp
popf
sub
lods
mov
hlt
scas
mov
xor
cmp
inc
icebp
ret
pop
test
mov
nop
or
das
cs
xor
iret
dec
mov
adc
fwait
in
aas
add
andb
adc
adc
adc
xor
std
push
test
mov
sahf
mov
addr16
daa
fwait
mov
mov
rcr
mov
xlat
cmp
xchg
lea
ljmp
pop
test
pop
mov
ret
icebp
lcall
jno
movsl
and
clc
cmp
dec
xchg
push
cmpl
cwtl
mov
push
mov
mov
mov
xchg
das
jne
in
popa
in
mov
data16
pop
mov
sbb
fmuls
jl
fs
and
cld
sti
stos
and
loop
iret
mov
jns
mov
sub
dec
pop
loopne
ljmp
leave
dec
cmp
pop
pop
add
push
notl
add
push
xor
rorb
out
imul
mov
mov
push
sub
iret
and
xor
lcall
into
dec
push
mov
inc
xchg
aad
nop
fs
clc
xchg
ret
mov
xchg
int
mov
jns
cmpsb
cwtl
lods
sbb
sbb
pop
xchg
fcomi
aas
inc
inc
loop
into
nop
cmp
push
out
stc
push
cmp
cli
in
push
add
out
in
out
aam
dec
pop
lcall
sub
sbb
xor
xor
or
scas
mov
popa
ja
or
cmp
ja
stc
mov
testb
test
xchg
jmp
push
xorb
loop
int
pop
mov
mov
mov
and
out
and
push
ret
shlb
jle
lock
insl
rorb
cmc
sub
cmp
es
inc
push
icebp
aad
testb
cld
pop
adc
mov
xor
int
jnp
jge
push
or
loopne
xchg
push
rorl
add
and
pop
lock
xchg
outsl
fwait
or
and
ja
push
ss
dec
ret
clc
or
bound
sbb
jle
rcrl
jo
in
movsb
sti
aas
xchg
shl
inc
add
pop
enter
mov
dec
lahf
jmp
cmp
ret
hlt
test
or
outsl
daa
aam
bound
adc
pop
pop
imul
xor
adc
cwtl
mov
xor
sub
scas
outsb
xchg
mov
aam
bound
daa
fidivrs
or
insb
enter
jne
inc
dec
repz
movsl
ljmp
sub
rcrb
icebp
xor
dec
gs
leave
mov
pop
mov
js
and
mov
sar
clc
xchg
push
jmp
pop
mov
call
xchg
or
fdivrs
xchg
and
addb
mov
lea
gs
sub
movl
adc
lret
leave
or
push
stos
jne
mov
cmp
aam
cltd
inc
scas
xor
dec
ja
cs
jg
push
fcomps
xor
push
icebp
fwait
iret
add
push
aas
jne
ljmp
shll
push
sub
frstor
and
movsb
mov
jae
adc
mov
aas
pusha
ds
int
xchg
test
addr16
jb
cs
mov
push
dec
push
in
push
lods
addr16
or
arpl
push
sbb
jne
mov
mov
ja
sbb
adc
arpl
imul
repz
or
and
jb
xchg
pop
imul
mov
mov
cmc
mov
andl
sub
in
jnp
rolb
and
cmp
inc
sahf
mov
lcall
out
cli
fwait
cmp
xchg
popa
cwtl
popf
fdiv
jmp
push
mov
jno
push
andb
push
push
push
gs
jp
pop
daa
mov
cltd
ret
mov
jne
repz
sub
xlat
sub
mov
stc
fidivrl
xchg
aam
cmp
int
and
jecxz
rorb
sub
cmp
push
sti
in
jno
xor
mov
dec
jecxz
cmc
adc
enter
rol
push
movsl
rolb
jo
sub
pop
andb
jmp
nop
lock
rorl
scas
fistpl
inc
push
xchg
or
adc
xor
fld
hlt
add
cmp
mov
into
imul
lret
imul
mul
hlt
nopl
sarl
daa
sub
push
test
mov
push
add
stos
push
pop
mov
jbe
jno
or
dec
inc
mov
fcompl
rcl
xchg
mov
mov
lock
mov
sbb
and
xchg
mov
lds
rcrb
cmp
dec
int3
stos
or
adc
xor
jae
pop
icebp
dec
pop
push
cmp
jge
fidivs
mov
test
dec
stos
sub
arpl
mov
sbb
in
lods
lret
mov
push
repz
lret
out
jbe
int3
push
mov
push
add
pop
mov
sbbl
xchg
sub
adc
sahf
out
xor
cli
adc
and
enter
mov
sub
gs
mov
push
out
inc
add
jbe
int3
and
mov
test
sub
push
ljmp
insl
add
testl
jbe
test
add
push
movsl
jnp
jbe
insl
and
jno
sbb
dec
xor
push
inc
hlt
xor
xchg
pusha
out
ljmp
arpl
push
insb
sub
mov
rcr
testl
rclb
mov
lret
xor
jo
es
inc
mov
xchg
sarl
outsl
cmp
mov
les
int
lahf
dec
pop
fs
pop
xchg
inc
sbbl
cwtl
push
xor
mov
ja
jae
push
inc
popf
roll
sbb
push
arpl
jg
push
lcall
mov
loope
fsubrl
sub
in
add
hlt
shrb
or
or
sbb
cli
movsb
cmp
push
push
inc
sbb
ja
adc
lret
outsb
push
fcom
fstpt
and
cli
xchg
addr16
sub
and
clc
push
xchg
in
adc
sub
scas
bound
mov
mov
ret
jp
jmp
aaa
pop
cmp
and
sti
shl
pop
jae
ljmp
dec
sub
pop
out
lret
arpl
adc
ret
ret
sub
sub
sbb
mov
popf
clc
pop
xlat
call
ret
mov
cmp
jle
cmpsl
jl
cmp
call
out
addl
push
or
adc
ljmp
and
xor
pop
mov
inc
mov
sub
xchg
int
lret
jbe
dec
cmp
jae
sti
testb
lcall
aad
iret
or
sub
cmp
shlb
or
pop
loope
adc
inc
cltd
push
popf
push
add
add
xchg
daa
cltd
add
adc
cmp
add
movsb
sbb
ja
aaa
out
outsb
iret
or
test
add
mov
dec
dec
adc
sbb
sbb
or
or
jns
adc
les
loopne
cmp
add
mov
push
call
jecxz
pushf
js
and
ljmp
jle
cmp
pop
push
xor
cmp
cmp
dec
pop
or
rcl
jb
test
rorl
ja
mov
or
dec
in
pop
pop
adc
xchg
mov
adc
adc
les
jecxz
jecxz
popa
icebp
dec
pop
sub
je
nop
push
aam
stc
fistpl
movsb
ret
out
sub
xor
sub
fmuls
movsb
or
mov
pop
xor
jb
call
incb
lret
es
ss
sbb
cmpsl
lahf
sub
popf
out
mov
outsb
cld
or
pop
aaa
mov
xlat
fiaddl
jo
popf
orb
add
pop
sub
shll
jl
mov
sub
imul
or
xchg
jb
cltd
add
adc
sahf
fsubl
das
pop
mov
test
daa
pop
pop
testb
jp
mov
jo
mov
outsl
stc
push
xchg
mov
lcall
cli
inc
fimull
lret
sub
pop
je
jb
cmp
dec
push
sbb
pop
lock
add
inc
mov
scas
push
cmpsb
popa
xbegin
pop
push
mov
jbe
mov
or
push
jns
mov
xor
aaa
adc
ds
jnp
notb
into
repz
xchg
mov
jmp
fwait
jne
nop
inc
shrb
xorb
inc
inc
push
shrl
push
in
enter
es
xchg
es
ss
inc
sub
push
mov
or
outsl
call
xor
lret
xor
mov
push
shr
sub
xchg
jns
sub
jo
xchg
xor
adc
fdivrl
cltd
ret
xor
or
enter
sub
mov
orb
mov
ficoml
stos
jg
mov
jp
test
dec
push
xor
fwait
xlat
aas
push
pop
or
ss
or
sarl
ficomps
jno
dec
jbe
xlat
and
mov
into
orl
lea
and
data16
iret
xchg
mov
loop
sti
cwtl
test
int
imul
cmpl
mov
jecxz
aaa
in
pop
mov
cmp
outsb
or
and
inc
inc
adc
jge
xchg
scas
call
cmp
test
push
inc
jecxz
cmp
aad
ljmp
mov
xchg
scas
push
pop
jb
and
leave
and
xor
in
imul
std
loopne
pop
mov
repz
push
lret
je
loopne
sub
ret
xor
xlat
dec
xor
xchg
xor
stc
mov
mov
pusha
mov
and
xor
adc
xchg
xchg
ja
or
xchg
push
sub
in
or
cltd
xor
cli
sub
in
fists
les
push
test
in
lods
mov
jmp
push
add
xchg
test
xchg
roll
add
cmp
aad
ret
jns
xchg
mov
icebp
xor
fstps
push
out
dec
xchg
iret
lods
lods
jno
lods
mov
pop
in
pop
and
inc
cmp
sub
imul
rcrb
shlb
cltd
dec
nop
pop
lock
adcl
int
call
xor
orb
cmpsl
adc
pop
shl
mov
lcall
insb
rorl
ljmp
sbb
mov
icebp
jnp
jb
pop
dec
adc
dec
das
sbb
cmc
stos
and
pop
leave
inc
imul
pop
pop
out
jle
je
out
inc
push
jp
movsb
jne
dec
aam
xchg
jo
pop
ret
mov
sub
int3
pop
call
or
sbb
ror
imulb
push
mov
dec
mov
cmp
enter
test
outsb
scas
shl
insb
ja
in
outsb
jbe
jnp
and
dec
sub
mov
or
jecxz
insl
loope
sbb
jno
jl
dec
movsl
ljmp
popf
pop
filds
add
jns
popa
sarb
dec
or
or
sti
mov
dec
add
test
outsl
imul
mov
mulb
and
in
mov
inc
cmp
mov
nop
and
shrl
mov
jle
pushf
repnz
test
clc
cmp
lea
xor
pop
or
popf
fs
jb
outsl
adc
cmpsl
adc
add
in
stos
jecxz
in
sub
mov
into
dec
out
test
inc
push
jmp
xchg
adc
push
aad
dec
sbb
mov
xchg
std
frstor
ljmp
xchg
sbb
fildll
mov
fsubs
je
dec
jge
cltd
mov
or
sub
xchg
dec
and
pop
in
push
je
rcll
and
bound
mov
loopne
mov
lcall
out
and
sub
notl
sbb
sub
dec
flds
dec
pop
inc
lea
mov
in
mov
outsb
ds
call
fadd
push
or
insl
inc
test
iret
jp
ret
gs
mov
dec
mov
aam
mov
popf
push
lock
adc
push
pop
das
push
fmuls
jge
dec
popa
mov
jge
add
test
loopne
lahf
movsb
inc
mov
mov
leave
push
loopne
cwtl
negb
cltd
movsl
or
test
je
loopne
lret
mov
fcmovb
enter
adc
mov
and
cld
popf
mov
stc
int
jo
cmc
icebp
shll
mov
xchg
mov
xchg
call
jbe
lahf
jnp
mov
jecxz
adc
fsubrp
adc
adc
push
mov
cmpsl
ret
mov
xor
lods
jle,pt
mov
mov
add
movsb
mov
mov
mov
jmp
cltd
dec
and
add
gs
mov
jae
xchg
push
jmp
out
cmp
mov
and
stc
cs
xchg
push
pushf
sub
jb
inc
adc
dec
xorl
sbb
aaa
test
xor
sbb
pop
inc
jo
adc
push
inc
daa
xchg
pop
scas
adcb
inc
ja
ret
sbb
clc
fmul
ds
and
mov
stc
fadds
adc
mov
sahf
dec
inc
mov
pop
roll
and
rcrb
nop
jno
xor
sahf
push
in
sahf
and
xchg
int3
cwtl
out
xor
subl
sbb
loop
fmull
loope
and
inc
xchg
xchg
rorb
mov
fists
sarb
dec
out
pop
push
repnz
or
icebp
xor
mov
push
mov
mov
push
ror
movsl
cmp
ds
bnd
orb
rcrl
out
push
sub
mov
push
mov
adc
mov
movsl
push
mov
pushf
pop
lahf
mov
data16
xor
sub
hlt
es
xchg
sbb
mov
into
inc
in
popa
cvtpi2ps
sar
mov
outsb
inc
cmp
adc
fldcw
out
scas
stos
inc
or
xchg
into
imul
mov
jbe
cmpsl
loop
sbb
xchg
or
dec
jmp
sub
idivl
mov
mov
in
scas
pusha
out
xchg
cwtl
imul
dec
or
stos
lcall
lods
inc
push
outsl
jns
or
push
adc
sbb
popl
nop
pop
xchg
xchg
pusha
mov
mov
lcall
or
mov
mov
adc
std
pusha
mov
jecxz
clc
stc
add
fildll
cs
xor
mov
pop
inc
pop
mov
dec
jbe
mov
cmp
cmp
add
xchg
sbb
popf
ret
lock
xor
js
xchg
mov
les
sub
add
inc
enter
repz
fldenv
cltd
mov
cmc
lock
push
lods
dec
in
xor
stos
sub
aas
xchg
fidivs
cmp
faddl
mov
test
xchg
cmpsb
movsl
addr16
xchg
mov
ljmp
and
shrl
in
inc
or
filds
mov
inc
mov
or
insl
jge
inc
xor
mov
mov
mov
pop
jp
mov
jo
clc
aad
mov
mov
movsb
icebp
pop
jne
adc
pop
leave
pop
roll
and
lds
arpl
lea
in
sub
lock
inc
mov
fidivs
mov
mov
lcall
mov
lds
jl
aam
adc
hlt
xor
cmp
pop
xor
or
out
sub
and
and
push
jge
jbe
and
imul
test
sub
fmuls
xor
adc
scas
cmp
pop
mov
popf
rcrl
adc
xlat
mov
test
cmp
push
loope
into
cmc
call
adc
or
xchg
sbb
pop
adc
xchg
or
fidivrs
mov
fistpl
xor
cmp
xchg
dec
cmp
bound
fnsave
or
pop
emms
inc
cmpsb
xor
bound
ljmp
inc
es
mov
test
dec
or
inc
add
mov
repnz
adc
mov
push
xchg
inc
adc
push
mov
sbb
push
xor
push
pop
and
push
loope
xchg
or
fwait
sub
add
popl
imul
inc
rcrb
jge
in
push
sub
add
leave
notb
outsl
xor
mov
setns
mov
lea
out
mov
mov
inc
mov
movsl
adc
scas
popf
cli
cli
repz
mov
jmp
andb
cmpsl
sarb
inc
icebp
jb
cmp
or
add
or
jb
pop
lahf
in
pop
pop
aam
je
sbb
subl
push
dec
pop
or
sarb
push
pushf
mov
fbstp
xlat
push
enter
pop
xor
mov
int3
fcoml
in
inc
popf
fwait
fwait
xor
cmp
insl
lahf
mov
mov
shll
mov
xor
inc
out
or
lcall
rorl
aas
or
mov
cmp
push
imul
inc
sti
in
cmp
cmpb
sbbl
shl
icebp
push
sbb
pop
add
jl
adc
jb
mov
push
scas
and
ljmp
dec
jecxz
sbb
stos
cmp
jg
fst
dec
jmp
mov
pop
xchg
in
sahf
outsl
lahf
or
xorl
and
dec
repnz
mov
xchg
fnstcw
test
jge
sbb
mov
mov
cli
test
mov
sarl
nop
pop
ja
jecxz
mov
jnp
mov
or
jo
push
dec
jl
call
and
sbb
out
adc
and
sbb
lcall
mov
fidivs
scas
gs
push
mov
scas
clc
lea
dec
mov
push
mov
test
ds
sbb
jno
dec
in
iret
lahf
cmp
dec
adc
push
jmp
lea
adc
cmc
mov
int
or
stos
data16
lods
aad
in
testl
xchg
pop
pop
adc
addr16
mov
gs
cmp
pusha
test
xchg
lahf
sti
add
scas
cltd
mov
xchg
fcoms
mov
jae
add
cwtl
fcompl
add
or
inc
out
roll
push
test
add
jmp
cmp
cmp
sub
insb
cli
movsb
mov
bound
test
mov
push
aam
jge
orb
out
sub
test
shrl
fidivl
je
in
sbbl
xchg
dec
pop
lock
xchg
pop
push
and
pop
adcl
pop
inc
pop
xor
sbb
xor
inc
jp
into
adc
pop
test
fs
cs
pop
movsl
xlat
or
int
pop
and
in
cld
push
popa
fs
neg
loop
mov
adc
and
push
sbb
jg
movsl
aam
ror
mov
mov
jle
lods
arpl
lret
and
adc
push
cmp
gs
sub
sbb
fidivrl
cmc
imulb
sti
mov
cmp
cmp
fcmovnu
repnz
scas
pop
insb
and
cmc
dec
and
cmp
movsl
rcll
adcl
cmp
sbb
push
shll
dec
and
ds
imul
and
insl
mov
and
mov
jge
roll
push
adc
jmp
data16
ljmp
jbe
mov
push
jp
jb
rcrb
pop
dec
mov
xchg
and
inc
adc
or
add
jne
and
xchg
movsb
inc
or
push
jg
inc
jg
add
je
jle
sub
pop
xchg
mov
inc
bswap
xor
imul
fwait
ds
and
dec
mov
or
mov
mov
and
rcrl
jbe
or
pop
xlat
aaa
nop
push
imul
mov
lret
pop
dec
pop
or
test
jl
pop
fildl
jo
jmp
lea
jg
dec
mov
fbstp
mov
mov
cmpsl
mov
mov
mov
pop
inc
daa
cmp
lods
clc
cmp
fstl
mul
jns
push
daa
rcll
fwait
push
scas
xchg
jle
sub
jns
xor
inc
inc
add
mov
aam
pusha
scas
rcrl
lods
sahf
movsl
xor
jg
out
xchg
xchg
pcmpgtd
fsubp
sbb
mov
adc
mov
in
scas
imul
adc
out
inc
sti
mov
mov
lods
dec
dec
mov
adc
fildl
mov
adc
out
rcrl
or
mov
push
ret
call
cmp
pop
test
ds
shrl
xor
jnp
add
rol
mov
jo
fstl
outsl
insl
enter
aad
cmp
jb
jmp
ljmp
jne
xor
push
sub
inc
les
xchg
mov
xor
mov
insb
into
inc
imul
lahf
inc
out
cmp
cwtl
mov
add
ret
movsb
inc
pusha
lahf
imul
rolb
lret
inc
cmp
sub
pushf
insl
fwait
push
xor
test
mov
dec
and
insl
imul
leave
jnp
push
fcompl
mov
not
iret
mov
cmp
enter
sub
icebp
jo
xchg
aaa
mov
out
xchg
js
adc
negb
fwait
cs
lret
movsl
cmp
add
imul
jg
mov
ja
inc
or
es
pop
les
adc
push
mov
mov
and
adc
scas
sub
ds
xchg
lock
add
xchg
xor
loopne
xchg
mov
add
mov
imul
sub
mov
pushf
and
clc
mov
icebp
jo
lahf
mov
mov
pusha
int
arpl
add
mov
add
mov
sub
or
or
xchg
xor
xorl
pop
add
bound
and
mov
push
sti
cmp
imul
aas
cmp
cmpsl
jno
inc
cs
fmuls
clc
mov
jo
xor
aam
lret
xchg
pop
es
dec
cmp
inc
mov
cmp
jmp
mov
lahf
lds
adc
and
aaa
dec
cmp
std
xchg
cmp
movl
inc
lods
icebp
push
int
push
stc
mov
inc
lea
ja
sti
lret
call
mov
cmp
popa
xor
mov
fs
cmp
sahf
ljmp
adc
sub
icebp
dec
mov
push
mov
adc
inc
cmpsl
data16
aam
shlb
js
loopne
jle
push
mov
data16
xchg
mov
push
hlt
loope
xor
mov
pushf
adc
aas
shr
mov
xchg
pop
mov
jp
outsl
cmp
stos
fwait
imul
dec
jl
jp
cmp
push
shl
push
daa
cmp
int
flds
ja
pushf
xor
aad
nop
in
std
fs
nop
int3
gs
cltd
adc
dec
pusha
cmp
mov
adc
rolw
jb
gs
add
xchg
pop
inc
icebp
in
cmp
arpl
sti
xchg
loopne
jge
inc
in
popf
xor
arpl
mov
or
mov
je
scas
daa
mov
mov
and
fistps
negl
cmp
js
xchg
sbb
pop
popa
push
lods
jo
mov
pop
or
jle
cmc
sbb
dec
jo
fldpi
cmp
shrl
sub
jae
jne
sbb
es
es
cmp
aaa
stos
cld
cwtl
iret
aad
or
mov
dec
cmpsb
mov
mov
dec
add
out
xor
mov
dec
xor
pop
xchg
stos
test
stc
and
cmp
jecxz
cmp
mov
mov
xchg
sti
jno
sub
and
mov
push
test
push
bound
out
pop
fisubrs
scas
jno
pop
shlb
sahf
sbb
mov
out
xor
and
mov
cld
adc
lcall
add
ret
mov
jmp
jae
adc
mov
and
testl
cmp
push
loopne
ror
addl
jl
mov
stos
mov
lods
test
sbb
jge
movsb
fwait
xchg
out
jo
or
adc
popf
xchg
js
inc
adc
call
scas
add
gs
pushf
jg
lock
pushf
jge
xchg
sbb
inc
sbb
cmpsb
addr16
roll
and
push
aad
cld
aam
mov
int
xor
sahf
lods
enter
push
imul
push
imul
inc
outsb
das
js
int
dec
arpl
adc
cmp
cwtl
cmp
push
and
das
int
mov
xchg
movups
jnp
es
ret
and
dec
scas
std
loopne
lret
addb
faddl
pushf
ret
lock
out
cmpsl
js
mov
and
sub
out
push
cmp
or
lret
add
pushf
jmp
fstpl
sbb
gs
stc
insl
sub
gs
imul
xor
rolb
hlt
inc
sbb
stc
sbb
add
xor
inc
xchg
cmpsl
flds
xor
popf
push
jg
fidivs
lds
adc
cs
addb
ljmp
jae
mov
push
inc
test
sub
cmp
loopne
ja
mov
insb
pop
sbb
dec
or
cmpsb
insl
lret
enterw
lahf
sub
cmp
mov
sub
arpl
mov
cmc
addr16
rcl
inc
filds
pop
in
loopne
dec
add
popa
adc
in
fnsave
push
xchg
aas
cmpb
mov
xlat
add
fmuls
push
fwait
insb
ret
lock
je
cmp
sbb
test
mov
cmc
lock
rorl
and
xchg
bound
iret
fs
mov
sbb
fs
mov
orb
cmc
fisubs
out
and
push
insl
pop
push
mov
jbe
nop
mov
pusha
xor
jg
add
mov
mov
dec
divl
jne
pop
pop
das
test
jbe
sbb
mov
cli
aas
xlat
ja
xchg
outsl
fisubl
lods
pop
movsb
add
cmp
mov
ret
xchg
and
jge
sbb
loope
imul
rcrb
sub
in
push
lahf
loope
popa
sbb
sbb
xchg
out
lret
xor
add
aad
mov
lret
add
jecxz
lods
xchg
inc
and
inc
push
in
jp
push
dec
ss
in
xchg
dec
jno
andb
add
ror
ljmp
mov
mov
fsts
jmp
stc
adc
dec
mov
pop
inc
fs
popa
cmp
cmpsb
mov
pop
xchg
add
dec
cmp
enter
shrl
cmp
or
fldt
xchg
out
in
inc
push
or
aad
or
xor
mov
jnp
pop
arpl
pop
inc
idivb
scas
in
in
fnstenv
inc
fstpt
dec
test
dec
in
jno
hlt
int3
cltd
rcl
shrd
inc
mov
xor
push
out
or
movsl
fistl
adc
inc
mov
jo
lret
jle
mov
xor
mov
jo
shr
sub
pop
call
stos
ds
sub
fwait
jp
out
pop
inc
int
mov
and
mov
jne
push
ljmp
mov
mov
aaa
repz
repnz
add
in
cmp
mov
jg
shl
cmpsl
insb
das
lds
inc
aas
pushf
mov
shlb
subb
iret
ljmp
aam
cmpsl
mov
pushf
jmp
pop
push
lds
mov
outsl
stos
pop
popa
xchg
js
mov
or
mov
nop
sti
add
mov
and
inc
pop
movsb
jbe
bound
fwait
test
inc
fsubrs
pop
push
mov
sbb
scas
mov
test
sbb
bnd
daa
pop
aam
repnz
adc
mov
and
sbbl
mov
adc
jne
in
mov
pop
repz
notb
aas
adc
push
ja
les
pop
push
adc
inc
xor
mov
adc
inc
outsb
frstor
pop
insl
out
mov
pop
into
scas
stc
decb
test
xchg
jae
mov
data16
mov
push
dec
xor
inc
in
cmpsb
mov
xlat
sbb
jb
adc
mov
fists
pusha
mov
subl
repz
lcall
sub
nop
add
shrb
xor
ljmp
aad
dec
in
in
adc
out
lret
jmp
dec
cwtl
mov
and
sbb
aaa
cmpsl
je
mov
inc
jecxz
repnz
jae
pop
imul
scas
out
in
popf
lods
fisubrs
sub
cmpsl
data16
aad
lcall
add
std
dec
adcl
loopne
sbb
pop
mov
pushf
jge
or
xchg
in
gs
adc
mov
and
xlat
jbe
jmp
mov
shrb
aad
lret
adc
imull
dec
xchg
add
jl
ja
out
fdivs
cmp
pushf
ds
push
sub
jg
and
bound
jp
lcall
mov
jne
pop
call
jb
pop
sub
add
aas
nop
gs
mov
jae
mov
cmp
push
cmp
rclb
jns
fidivl
xor
movsl
sti
push
ljmp
sbb
mov
pop
mov
jb
mov
jb
inc
mov
cmp
in
push
add
rcrb
xchg
pop
and
in
mov
stos
pop
inc
sub
adc
lods
sub
dec
or
andb
cmp
mov
cmpsl
xor
ret
stos
mov
iret
idivb
sbb
lods
lret
stos
pushf
stc
mov
or
inc
mov
nop
cmpsb
jb
xor
pop
outsl
dec
xor
lock
clc
test
cmpsb
rcll
fcoml
lcall
and
icebp
jl
mov
ror
mov
xchg
cld
cmp
xchg
or
pushf
mov
adc
cmp
movsb
aas
xchg
mov
std
cs
dec
pop
jg
sbb
fsubs
into
lds
mov
dec
call
cwtl
push
mov
in
cmp
daa
pop
mov
aam
mov
cmp
mov
jecxz
sbb
jb
adc
in
scas
push
sub
paddsb
popa
xchg
mov
sbb
std
fucomp
insl
mov
push
stos
das
cld
sbb
sarl
mov
jbe
jno
jo
inc
add
mov
cmp
jg
std
pop
jne
lods
jns
fiadds
mov
outsl
aaa
cmp
aam
aas
insb
fcoml
xchg
test
mov
pop
jnp
jnp
nop
addr16
call
shl
rorb
lcall
dec
xor
cmovge
sbb
ds
sahf
xchg
ficoml
inc
add
out
fcmovnbe
sbb
adc
ret
je
out
adc
jo
les
jecxz
sahf
es
jecxz
push
mov
scas
mov
je
ret
lcall
sub
out
ss
jnp
jns
inc
nop
xchg
adcl
lret
jne
mov
inc
and
aam
push
cmp
subl
sbb
dec
vandnps
dec
push
movsl
ss
mov
fistpll
cltd
jle
push
mov
lea
call
imul
sbb
mov
lods
pop
add
mov
mov
sbb
mov
pop
sub
decb
lahf
les
cmp
mov
push
push
inc
pop
stc
adc
ljmp
rclb
loope
bound
adc
inc
jbe
xchg
sbb
cmp
adc
mov
cld
arpl
fstpt
fcomi
dec
sbb
pop
fs
hlt
out
cmp
sub
xchg
and
add
mov
mov
sub
cwtl
or
sub
call
cmp
daa
jno
icebp
aas
iret
or
insl
add
inc
xlat
call
sti
push
xor
adc
shll
xor
or
add
fwait
bound
stos
aas
cwtl
push
mov
and
mov
xor
xchg
shrb
sub
inc
daa
loope
test
pop
lods
mov
mov
int
aas
jb
jle
xchg
mov
pop
cmpsl
iret
les
sub
sarl
jbe
lret
jg
mov
int3
mov
and
jg
pop
leave
xorb
clc
shrb
xchg
or
popf
lds
mov
outsb
sub
inc
mov
adc
pop
push
xchg
or
iret
subb
lret
fwait
outsb
jns
sbb
repz
insb
lods
fmull
test
inc
daa
mov
dec
dec
adc
gs
cli
jb
fcoms
cld
xor
js
jmp
jnp
jno
add
dec
loope
xorl
or
cmpsb
sbb
inc
mov
arpl
mov
sbb
es
sbb
xor
cmp
cld
mov
jle
out
add
ljmp
xchg
stc
aad
rcll
jne
data16
mov
mov
lahf
push
inc
stc
mov
adc
es
out
push
xor
mov
lahf
out
data16
js
cmp
out
mov
leave
dec
insb
lds
mov
add
xorl
setno
dec
sbb
jo
mov
push
insb
pop
sbb
pop
mov
sar
xchg
sbb
jnp
pop
ficompl
mov
lock
adc
insl
pop
andb
ret
cltd
aaa
ret
decb
mov
xor
aam
jno
sub
cmp
or
jle
mov
aam
cmc
fbstp
pushf
or
fiadds
cmpsl
call
jne
or
xchg
or
inc
jo
and
add
inc
push
mov
popa
mov
mov
mov
cmc
lahf
sub
fimull
and
push
jmp
mov
test
jge
inc
xchg
fisubrs
cmc
imul
fdivs
aaa
cmp
ret
mov
jecxz
mov
jmp
or
hlt
sbb
mov
popf
nop
mov
les
imul
popf
inc
mov
mov
insb
popf
aaa
test
icebp
mov
jp
ja
call
notl
addl
nop
and
xchg
cmp
or
mov
sbbl
pop
adc
add
fs
cwtl
std
aas
cmc
hlt
out
rcrl
movb
mov
je
sub
inc
and
or
add
cmp
jne
mov
popa
cmpsb
in
aam
mov
outsl
mov
subb
sti
cmp
cld
in
movsl
add
sub
jno
jge
test
outsb
xor
enter
sbb
ljmp
jl
out
push
stos
xlat
dec
fbstp
ds
sarb
fimull
std
ds
ds
dec
or
lock
cmp
jne
inc
std
adc
inc
sti
das
ss
lret
xor
add
jl
adc
mov
pushf
ljmp
in
sbb
push
lods
ss
cltd
fs
mov
aas
mov
addr16
fsts
mov
push
mov
mov
aad
lret
mov
mov
add
lret
sbb
test
add
stos
sub
test
add
test
jnp
in
xchg
scas
add
lock
pop
movsb
dec
loope
mov
add
mov
movsl
pusha
test
push
jle,pt
stc
sbb
pop
shrb
iret
mov
add
dec
mov
add
pop
push
sbb
mov
pop
sbb
pop
fs
xor
sbb
in
and
dec
mov
push
jecxz
idivl
lods
cmp
insb
daa
clc
sub
sub
sub
jge
out
sub
mov
push
sub
les
addr16
inc
sahf
subb
dec
cmp
in
imul
mov
clc
jbe
pop
inc
push
lea
jnp
cs
pop
fstpt
xor
mov
mov
sahf
call
fisubs
addr16
lea
movsl
jb
mov
sbb
xchg
push
fcomi
and
dec
sbb
mov
or
loope
sbb
aas
xchg
out
cmc
fstpl
inc
js
dec
pop
push
aad
dec
leave
or
mov
add
xchg
imul
mov
jo
test
insb
imul
or
add
mov
shlb
jl
cli
in
xchg
sbb
jno
jmp
fwait
pop
xchg
cmp
mov
arpl
push
iret
aad
mov
xchg
ss
insb
mov
je
icebp
or
add
xchg
imul
jnp
stos
lods
cld
repz
jmp
lret
scas
rorl
cmp
sbb
mov
sub
push
andb
rcrl
int3
ds
xor
jle
lahf
lock
es
jo
pop
sbb
rclb
fimuls
mov
cmc
push
lcall
jno
cmpsl
in
sub
sbb
jbe
pop
jmp
add
xor
fcoml
je
add
cmpb
pop
push
test
cmpsb
dec
adcb
mov
in
icebp
fsts
sub
cmpl
aaa
push
or
fdivrl
test
leave
jge
push
subb
jns
orl
xchg
xor
adc
inc
mov
xchg
sbb
fistl
lods
ss
stos
xor
addb
push
imul
cmpsb
ja
jecxz
push
test
sub
mov
repnz
fiaddl
sub
inc
enter
loope
jecxz
repz
lds
imul
in
sub
sbb
mov
mov
in
mov
xchg
stc
shl
xchg
dec
cmpsb
in
ljmp
mov
pushf
std
lret
sub
pusha
lea
mov
repnz
xchg
test
pusha
push
xchg
outsb
ljmp
ss
sbb
push
cltd
or
stos
pop
enter
xor
aas
add
cmp
cmpsl
mov
push
inc
fldenv
inc
icebp
inc
adc
sub
xchg
push
xorb
scas
dec
mov
xchg
addr16
repnz
jg
add
in
sahf
push
and
mov
roll
lea
popf
hlt
push
jp
ljmp
vpcomuw
cs
js
inc
mov
cmc
scas
push
and
ljmp
fimull
sub
cltd
into
jge
push
mov
add
and
dec
adcb
mov
push
movsl
std
sbb
mov
ret
aam
adc
pop
push
mov
cmpsl
sub
mov
pop
sbb
add
mov
movsb
in
adc
mov
add
push
sarl
mov
out
add
outsb
andl
sub
push
fnsave
test
add
xchg
insl
push
jnp
call
sub
out
notb
fsubrs
and
inc
or
daa
mov
ficomps
xor
jnp
mov
push
addr16
mov
adc
xchg
xchg
push
dec
pop
mov
ficoml
xchg
push
inc
data16
mov
adc
mov
cmpsl
clc
cs
mov
lea
test
mov
sarb
aaa
insb
xchg
push
dec
mov
add
ja
sub
jl
add
push
pop
add
ljmp
mov
sbb
sti
mov
stos
adc
out
mov
insb
push
adc
dec
sub
mov
iret
mov
push
mov
sub
out
testb
in
inc
data16
xchg
faddl
insb
dec
out
cmp
imul
sbb
out
mov
sub
stos
push
add
xor
cmp
repnz
mov
fiaddl
shlb
fiadds
pop
sbb
mov
lret
jno
cmp
fcomi
sub
inc
inc
fisttpll
push
lret
into
fcoms
jge
push
ds
scas
pop
jp
mov
arpl
pop
xchg
mov
into
shll
subl
push
sbb
mov
data16
scas
outsb
je
orl
and
iret
mov
loop
imul
test
push
inc
mov
popw
inc
inc
mov
add
out
outsl
inc
add
addr16
adc
roll
sbb
cmpsl
sbb
nop
sbb
or
aaa
lret
outsb
dec
fcmovbe
jle
add
jno
cmp
pop
arpl
orb
mov
testb
mov
js
mov
push
aas
sub
sbb
mov
sbb
sbb
fisubrs
xchg
pushf
sahf
in
adc
icebp
and
nop
lret
dec
shl
ret
pop
clc
leave
jns
and
das
aad
das
rcll
pop
in
mov
dec
in
mov
insb
or
inc
and
jno
pop
or
jnp
mov
bound
jmp
sbb
shll
daa
cli
xlat
ljmp
cld
and
mov
leave
gs
icebp
mov
dec
cli
and
test
lahf
pop
cli
fs
or
mov
rcrb
test
stos
push
mov
mov
or
push
iret
aaa
mov
and
in
and
add
xchg
rcrl
nop
xor
es
or
push
lock
sbbb
push
ds
inc
hlt
fldt
rolb
lcall
cmp
pushf
in
mov
mov
sahf
sbb
notl
pusha
ds
stos
dec
sbb
fsubrp
dec
jno
xchg
call
repz
nop
push
inc
aam
insb
ljmp
inc
fcomps
sub
push
rcrl
and
xchg
in
jg
bound
int
jg
lea
mov
adc
add
clc
jnp
lret
jle
testb
out
mov
pop
inc
push
cmp
sahf
stos
ror
dec
mov
add
pop
xchg
sub
adc
test
dec
std
cltd
mov
adc
clc
push
popf
and
in
add
adc
pop
lea
sahf
mov
pop
jbe
cmpsb
and
sub
ficompl
push
aam
and
addb
ds
jne
lret
inc
icebp
fstps
cmpsb
jp
dec
and
ja
and
add
negb
rcrb
addr16
int
test
mov
or
cmp
or
in
addb
inc
lods
xchg
les
out
and
mov
sbb
fldt
jae
cmpsl
pop
push
fs
cmp
mov
ja
test
xor
ja
sub
test
mov
je
popf
sub
jbe
mov
mov
je
add
jp
repnz
mov
push
lcall
jg
lock
int3
cs
mov
mov
lds
out
std
lcall
mov
fdivr
mov
add
mov
fadd
jno
lcall
push
je
insb
int3
dec
add
push
mov
pushf
lods
in
int
rorl
inc
lret
dec
cmp
rcll
mov
adc
sbb
add
jbe
inc
dec
shll
mov
bnd
out
mov
outsl
cmp
jmp
pop
lods
rolb
int
mov
mov
in
pop
dec
jbe
sbb
xor
mov
pop
das
loope
push
fsubl
pop
xchg
xchg
or
std
ret
sbb
pop
sbb
add
sub
add
push
movsb
lcall
leave
stc
add
dec
sub
jae
push
fcomp
xor
out
dec
inc
mov
mov
repz
sbbl
loopne
cmp
popf
shll
ret
out
ret
mulb
popa
mov
jp
add
jnp
test
aad
icebp
or
repnz
cmp
xchg
and
cli
jmp
clc
movsl
ja
add
nop
jmp
roll
cld
sbb
mov
ss
jnp
xchg
jo
fidivrs
lret
jae
mov
test
inc
daa
movsb
test
loop
insl
sub
in
call
inc
dec
lods
pop
jns
mov
and
test
cmp
pop
xor
imulb
add
out
inc
xchg
ja
ljmp
sub
rorl
inc
jge
xchg
pop
aam
rolb
or
add
xlat
enter
and
inc
adc
xor
add
and
xchg
cld
jne
out
xchg
push
loope
and
push
fidivl
jb
add
aas
rolb
and
mov
dec
aam
or
xchg
push
add
lods
popf
xchg
outsb
xchg
je
icebp
aad
es
pop
scas
cs
loopne
clc
cmpl
jae
data16
pushf
incb
in
sahf
fwait
shrl
pop
enter
push
lea
dec
jb
adc
inc
jmp
pop
fdivrl
jb
cmpl
push
test
std
in
js
lock
xor
les
lods
pop
jnp
jne
ljmp
cmp
rclb
iret
mov
dec
xor
or
and
push
jl
jne
push
jo
cmp
ljmp
xor
pop
test
pushf
lcall
jmp
ss
pop
std
bound
rorl
pop
inc
xchg
stc
dec
rcr
les
adc
cmp
mov
aas
cwtl
insl
dec
bound
je
aad
xchg
mov
repz
les
std
sub
jno
dec
shrb
xchg
ss
add
sbb
mov
and
pop
mov
mov
cmp
inc
xchg
sbb
jne
xor
lret
xchg
stos
push
ret
mov
or
ss
mov
xor
mov
mov
pop
jo
fwait
ja
mov
xchg
jle
pop
push
adc
ss
cld
out
or
mov
je
add
outsl
sub
adc
push
mov
xor
outsb
adc
add
pop
mov
xchg
insl
pop
loopne
hlt
in
inc
jb
neg
mov
sti
xchg
bound
clc
lods
mov
ret
clc
jbe
fnstsw
ja
push
jp
inc
test
push
addr16
add
mov
scas
inc
imul
scas
sbb
lock
and
and
repz
jg
lahf
ficomps
int
addr16
sahf
add
cmp
and
pop
mov
sub
lcall
lods
push
sub
sarb
push
mov
lcall
jae
cmp
inc
int
add
mov
sub
pop
or
cmp
pop
lea
rcl
idivl
insl
pop
jbe
sub
add
mov
outsl
rcrl
or
fldl
jmp
push
mov
in
sbb
lcall
xchg
xor
inc
filds
jl
sub
jnp
xchg
sbb
mov
fcmovu
jl
jb
cs
cltd
adc
repnz
leave
clc
int3
mov
pushl
inc
or
aas
je
push
sbb
stos
jecxz
repnz
cmc
pop
cld
dec
push
dec
dec
aad
xor
test
daa
lcall
mov
xchg
jle
test
das
lds
repnz
decb
notb
divl
mov
lret
rorb
in
imul
cmp
mov
les
les
lods
pop
pop
in
dec
add
mov
shlb
hlt
inc
fdivrs
pop
dec
ret
scas
subb
sahf
ret
inc
adc
fstpt
cmp
xor
loopne
add
inc
sbb
stc
jno
cmpl
or
stos
pop
pop
sub
out
loop
xor
adc
add
adc
and
mov
xchg
push
and
daa
mov
xor
leave
pop
enter
and
inc
ror
mov
add
aas
movsl
sub
mov
arpl
cmpsb
cmp
jl
fsubr
mov
mov
push
cmc
sub
xsha256
cmpsb
xchg
xchg
cmp
data16
icebp
or
mov
incl
push
test
repnz
dec
add
lcall
cmp
int3
inc
sub
mov
jge
jg
scas
pop
sub
mov
imul
cwtl
fildl
mov
pop
cld
stos
mov
bound
pop
add
add
test
push
mov
jg
daa
adc
loope
dec
cmpsl
faddl
fwait
in
ds
dec
mov
movaps
je
mov
stos
inc
mov
popa
icebp
movsl
push
push
shlb
sarb
scas
xchg
in
rcrl
push
or
mov
shlb
xchg
xchg
outsb
sub
inc
daa
mov
dec
add
in
mov
push
pop
repz
lcall
sub
dec
pushf
add
lods
insl
outsb
sub
aam
out
jle
add
fsubrs
push
ljmp
call
arpl
inc
dec
xchg
xor
push
and
inc
mov
sbb
mov
dec
inc
fists
xor
xchg
cmpsb
mov
mov
lret
test
add
div
add
into
mov
mov
xor
inc
aam
fucomp
adc
add
fwait
dec
push
inc
jne
xchg
xchg
fs
insb
push
les
fwait
cltd
xchg
mov
mov
push
lahf
xchg
jae
adcb
sti
or
movsl
jae
adc
in
fists
jge
out
jg
push
pop
test
inc
pop
pop
mov
mov
pop
pop
cs
insb
jo
push
leave
pop
lahf
adc
test
rclb
rcl
sbbb
lods
popa
jne
imul
push
loope
fnstenv
and
mov
fildl
and
jb
xchg
leave
ja
into
push
scas
or
fwait
adc
dec
mov
and
icebp
nop
jae
loopne
jne
shll
int
sbbl
or
mov
call
ds
sahf
lods
shrl
cltd
push
or
push
loopne
push
sub
mov
lcall
push
lods
xchg
loope
insl
cmp
adc
cmp
jo
dec
mov
stc
aam
mov
lea
sub
push
push
push
jge
mov
sbb
rorb
and
call
add
sub
jno
xchg
ss
cs
rorb
fdivs
mov
dec
lods
call
jo
mov
push
rorl
or
or
arpl
add
push
jb
sub
mov
xchg
in
jmp
push
ds
sbb
nop
pop
out
push
cmpsl
iret
ret
jg
push
mov
and
dec
xor
loop
add
mov
mov
fucom
push
test
mov
push
gs
clc
sbb
outsb
cmc
shll
dec
inc
fisttps
addl
pop
cmp
pop
sbb
ret
dec
pop
xor
cmp
jmp
push
cld
xchg
push
hlt
or
out
inc
scas
lea
inc
ds
mulb
mov
cmpsb
pop
inc
sti
mov
sbb
cmp
es
pop
cli
push
jns
loopne
sub
inc
jle
jbe
mov
mov
xchg
push
sub
pusha
sbb
dec
fmul
dec
aad
add
jno
push
fs
cmpsl
xor
xor
dec
gs
or
xchg
or
mov
jle
jecxz
fimull
sti
xchg
dec
stos
add
test
outsl
repz
mov
adc
aam
mov
cmp
popa
add
jge
test
and
lret
or
clc
add
xor
pop
push
xchg
mov
sub
imul
scas
cmp
daa
nop
push
repnz
add
js
sbb
xchg
and
lahf
xor
fildll
loope
push
jecxz
push
sbb
mov
enter
push
movsl
mov
push
dec
mov
sahf
imul
xor
xor
mov
lcall
ror
mov
pop
dec
frstor
jle
jge
dec
scas
loope,pt
xor
jb
ja
cmp
test
dec
loop
add
pop
movsb
inc
aaa
jo
ss
cmpsb
outsb
pop
dec
nop
jb
xor
lds
test
dec
xchg
add
shr
mov
and
out
gs
xlat
jp
mov
xchg
and
cs
inc
mov
stos
mov
clc
ja
loop
gs
test
jns
loopne
sbbb
xor
push
out
push
arpl
pop
or
lea
ret
mov
dec
orb
shrl
nop
fmull
push
add
add
fiaddl
ret
sbb
jo
add
divb
cltd
dec
jae
mov
push
jnp
aas
fldcw
int
movmskps
dec
aad
and
cld
inc
fisttps
cltd
cmpsb
dec
gs
adc
or
push
pop
movsl
js
push
xor
test
int3
loope
or
mov
adc
mov
andb
out
dec
jbe
nop
ds
dec
add
add
jne
push
cmp
movsl
cld
insl
cmc
adc
xor
mov
jg
push
in
xchg
adcb
daa
fimuls
jge
mov
or
ret
cwtl
outsl
mov
jb
lock
jle
inc
sbb
xchg
push
and
add
addr16
dec
sbb
data16
jl
lea
outsl
loopne
mov
cs
dec
or
jle
dec
push
lock
les
das
jg
andl
fistps
popf
rcrl
insl
inc
pusha
lea
mov
in
aam
in
mov
mov
dec
addl
lcall
adc
andb
cmc
push
inc
pop
push
jmp
push
decb
pop
icebp
popf
xor
enter
jmp
scas
fisubl
jne
andl
lock
test
std
movsb
addr16
rol
add
popf
lea
jg
mov
test
mov
sbb
cld
or
lods
fld
mov
mov
lods
lds
ds
icebp
outsl
enter
xor
pop
ss
push
leave
xor
shlb
daa
loopne
inc
push
mov
sub
and
stc
push
jp
rcll
jae
fwait
shrb
inc
ret
and
lahf
mov
fmul
int
aaa
add
add
cmpl
notl
sub
fcompl
sti
clc
addr16
enter
clc
xchg
iret
enter
mov
ret
mov
xor
je
sbb
movsb
fimuls
xor
cmpsl
jmp
fidivrs
ret
int
pop
jg
sbb
pop
adc
out
or
xor
stos
inc
adc
sbb
or
cld
mov
imull
sbb
repz
mov
icebp
inc
mov
cmpsb
nop
pop
push
int3
shll
push
fs
cmp
inc
movsl
cmp
mov
push
lahf
jg
xchg
dec
sub
les
inc
dec
inc
fildl
dec
push
adc
mov
xlat
ret
xor
lods
pop
add
jo
in
sub
push
int3
int
rorl
inc
inc
jmp
xchg
mov
daa
mulb
aaa
movsb
fisubs
imul
mov
test
gs
add
cmpsb
das
in
adc
jp
and
jge
ljmp
aad
or
push
mulb
sbb
int
sub
inc
xchg
aad
mov
pop
jmp
inc
stc
imul
enter
sub
mov
pop
leave
and
jmp
dec
ss
shrl
jmp
scas
loope
lahf
negl
imul
aad
call
inc
inc
mov
aam
inc
enter
ljmp
out
unpckhps
xorl
in
scas
inc
sbb
mov
mov
and
dec
sub
and
int
or
imul
push
mov
dec
sub
mov
jp
cltd
popf
movsl
jne
jmp
insb
fldenv
inc
imul
repz
mov
faddp
jo
mov
mov
adc
sub
dec
mov
mov
mov
out
ret
cwtl
add
jnp
rcrb
ljmp
mov
loop
pop
ja
sub
enter
fwait
rcll
sub
lods
pop
int
mov
fstl
pop
lret
mov
or
cwtl
push
lock
cmp
sbb
testl
mov
dec
andb
fidivrs
stos
popa
push
popf
in
scas
and
push
add
sbbl
cmpsl
add
lods
mov
leave
daa
push
fisubrl
popf
cmpsb
imul
jge
stos
call
jo
arpl
push
mov
jbe
mov
inc
adc
xorb
aad
dec
inc
adc
fst
xchg
jmp
and
das
shll
sbb
jbe
movsl
and
shlb
jb
mov
jnp
mov
xor
fsub
cmp
dec
push
mov
jnp
push
xor
popf
pop
fmull
ljmp
sub
jo
shll
outsb
xchg
lods
lock
imul
cltd
cmp
imul
pop
inc
daa
lock
sbb
test
aaa
aas
xor
pop
jne
in
popa
mov
and
adc
dec
into
dec
add
pop
dec
mov
clc
add
popa
mov
xchg
scas
lcall
or
insb
xorb
loop
addl
mov
jnp
xor
and
iret
xchg
push
mov
xor
cli
jecxz
mov
cs
push
idiv
int3
js
push
or
push
inc
test
push
cltd
and
call
fisubrs
sbb
adcl
adc
jns
loope
nop
lahf
cmpsb
cmp
and
jle
add
shl
cltd
pop
jecxz
lahf
loop
sub
outsl
sar
jae
add
mov
and
repnz
dec
lea
push
push
in
das
xchg
inc
cmpsb
dec
dec
pinsrw
imul
cli
dec
cmc
push
add
pop
inc
xchg
cmpsb
inc
jne
and
xchg
fcmovne
jge
jl
clc
sub
out
xchg
xchg
addr16
scas
cmp
jo
pop
cmp
pop
faddl
mov
push
adc
lahf
adc
xchg
divl
test
mov
faddl
out
jo
dec
shr
sbb
xor
test
jne
out
push
idiv
adc
lcall
rcll
int
mov
out
xchg
mov
mov
xor
leave
dec
mov
xchg
jecxz
pop
int
popa
add
add
jne
sub
mov
ret
or
iret
push
in
xchg
pop
mov
and
add
out
jbe
aad
cmp
nop
add
mov
pushf
mov
jae
cmp
sbbb
stos
dec
and
pushf
ss
in
je
and
mov
popf
adc
mov
lret
push
pop
inc
sbb
jmp
sub
push
jo
repnz
shrb
fisubs
and
adcb
mov
hlt
and
push
jmp
jns
sahf
jns
inc
sub
sub
das
mov
cld
cmp
shrl
sbb
xchg
clc
add
bound
sahf
andb
sbb
ss
mov
or
mov
xchg
mov
ret
nop
arpl
adc
int
add
int
cwtl
and
gs
dec
aaa
movsb
sbb
dec
xchg
jo
xchg
push
push
xchg
adc
mov
outsb
fisttps
add
arpl
push
out
xchg
xor
and
dec
scas
aad
test
mov
int3
icebp
repz
jne
xchg
cmpsl
test
dec
inc
or
push
movsb
and
mov
add
in
pusha
pop
pop
add
aam
roll
lods
jns
pop
dec
out
xchg
xchg
leave
push
add
sub
cmp
ficoms
rorb
mov
cs
lods
push
push
hlt
push
pcmpgtb
fisttps
fisubrs
les
push
sbb
inc
fs
sbb
jle
fcmovu
cmp
out
pop
mov
jae
xchg
mov
mov
call
mov
cli
sub
aam
dec
pop
cmp
push
shll
test
jmp
arpl
dec
dec
or
leave
adc
push
jno
mov
test
pop
dec
inc
inc
xor
adc
cmp
sub
outsl
lcall
or
fsubr
fucomip
arpl
mov
cmp
movsl
or
aam
push
dec
jl
aad
add
and
adc
pop
inc
ret
pop
mov
popf
cmp
adc
addl
mov
xlat
cld
loop
xchg
rcrb
inc
arpl
push
dec
jge
adc
mov
movlps
xlat
dec
dec
mov
fimull
gs
mov
dec
outsl
lea
jo
imul
imul
sub
outsl
xchg
push
pop
jecxz
fcomps
lahf
out
adc
cs
adc
scas
loope
xchg
fwait
inc
arpl
jecxz
dec
out
adc
loop
aas
add
popf
fidivrl
push
daa
dec
aas
dec
pushf
xor
gs
enter
ss
push
std
fisubs
and
dec
divl
pop
dec
iret
test
fstl
mov
test
inc
jmp
lret
dec
cmpsb
lods
xor
stos
int
neg
mov
mov
cmp
mov
push
loopne
outsb
lahf
cmpsb
jnp
jbe
loop
mov
pop
add
pop
pop
fwait
push
in
and
pop
mov
or
test
pop
lods
xor
xor
addb
js
add
mov
mov
mov
mov
and
adc
stc
icebp
test
test
push
sbb
mov
cld
pushf
aas
xchg
mov
cld
dec
inc
inc
mov
mov
inc
cltd
xor
sbb
fidivl
add
xchg
insl
shll
mov
rcrl
xor
dec
js
mov
in
scas
ljmp
lock
jecxz
test
dec
shll
aam
or
pop
inc
jb
mov
or
push
and
clc
push
in
into
stos
ficoms
add
ret
ja
mov
out
xor
mov
inc
into
and
add
adc
xchg
inc
xor
xorb
mov
int
fimuls
pop
dec
fucomip
sti
in
pop
sbbl
push
call
movsl
inc
loopne
testb
nop
dec
cmp
sbb
adc
arpl
mov
test
stos
sub
lret
js
jg
out
adc
xchg
jmp
fs
or
jnp
scas
mov
idivl
fsub
push
enter
js
int
and
mov
mov
jecxz
aas
lret
dec
dec
idivl
in
enter
jno
mov
loope
int
sub
fwait
in
push
cmp
add
and
addr16
fnsave
cmp
sbb
pop
mov
mov
loop
jns
jns
stos
mov
pop
les
cwtl
inc
xchg
pushl
repnz
fistl
outsl
out
jecxz
add
sahf
mov
dec
nop
mov
and
clc
ss
movsl
adc
sub
lret
ficompl
inc
frstpm(287
cwtl
push
add
mov
pushf
dec
and
and
das
mov
scas
jmp
adc
loop
ret
pop
push
popf
fmull
ja
inc
cmpsb
insl
xor
fsts
lret
outsb
stos
out
outsb
jno
jmp
mov
pop
push
or
xor
leave
sbb
dec
mov
int
daa
add
mov
lahf
cmp
pushf
test
xor
repz
shr
or
std
push
cmp
mov
and
stos
roll
sbb
add
or
aam
into
idivb
push
loop
imul
adc
sbb
enter
fxch
lret
das
fsts
out
lods
mov
fmulp
into
cs
push
pop
add
inc
out
pop
lcall
mulb
les
cmp
add
out
movzwl
outsl
dec
or
sbb
imul
outsb
xor
ljmp
rcrb
lea
jp
pop
mov
mulb
iret
add
cmp
pushf
shlb
inc
imul
aad
ficompl
aas
push
push
and
adc
cmpsb
ja
mov
add
aas
lret
test
ror
pop
jno
mov
sbb
pop
or
hlt
popa
into
jb
cmpsl
fmuls
insl
test
dec
ja
dec
push
negb
push
frstor
xchg
xchg
fwait
mov
add
dec
mov
arpl
fs
fists
cwtl
jge
push
xor
dec
dec
sbb
aam
mov
je
cltd
xchg
test
jae
xor
mov
xor
xchg
xchg
sbb
and
xor
jl
out
xor
jb
ljmp
add
and
hlt
in
cmc
fs
loope
lock
add
jo
mov
mov
push
mov
loop
in
dec
push
sbb
xchg
sbb
ficoml
out
sbb
out
clc
cwtl
or
inc
cld
push
jmp
ss
loop
bsr
add
dec
adc
jp
mov
out
les
pop
aad
cmpsb
push
push
cs
dec
mov
movzbl
mov
hlt
and
loope
outsb
sbb
cmp
cs
sub
lods
enter
mov
sahf
out
notb
sub
jne
stc
add
inc
push
pop
repz
imulw
in
jecxz
xchg
loop
mov
lock
mov
das
add
jne
push
push
sbb
pushf
push
or
sbb
adc
pop
cmp
aad
cmp
outsb
ret
loop
cmp
xor
incl
loop
push
or
mov
in
xor
sub
xchg
cwtl
data16
pushf
leave
dec
jns
jo
dec
in
in
jne
dec
push
mov
je
insw
adc
mov
aad
xchg
sub
push
addr16
loope
loope
shll
sarb
xor
xchg
xchg
pop
jmp
in
inc
das
outsb
mov
jl
aaa
dec
add
add
outsb
lret
pop
xchg
dec
xor
insl
cwtl
int
add
mov
lahf
lock
mov
add
addb
test
jno
arpl
push
xchg
mov
dec
lret
roll
das
jl
sti
mov
test
cbtw
mov
cld
insl
mov
xchg
sub
adc
scas
push
data16
lret
lea
adc
sbb
pop
rorl
pop
and
pop
cmp
repz
adc
xchg
mov
ds
jmp
rclb
xlat
rclb
fstps
mov
sub
mov
inc
outsl
mov
jno
repnz
fs
jmp
mov
xchg
sahf
sbb
add
notl
add
aad
sub
fwait
incl
pop
pop
mov
xchg
sbb
push
insl
dec
leave
and
xchg
cmpsb
scas
insl
cmp
sbb
gs
pop
cmpsl
jecxz
sahf
leave
push
mov
out
notrack
pop
push
sub
sub
mov
imul
xchg
movsb
test
in
and
xchg
inc
add
xchg
and
jnp
xor
jns
mov
test
lret
inc
mov
mov
cmp
popf
out
cmp
aas
sub
cmp
cmpsl
sbb
adc
pop
pusha
lock
fwait
mov
hlt
pop
cltd
repz
dec
insb
pop
push
arpl
mov
mov
aam
push
and
cli
cltd
xor
ss
test
cmp
or
xor
push
loop
or
shl
fldl
ljmp
and
or
mov
rcrl
lret
dec
mov
mov
xor
inc
lock
popa
add
lret
cld
daa
jb
push
outsb
subl
jp
cli
mov
adc
sarb
mov
mov
push
das
inc
pop
xlat
push
ss
scas
adc
xchg
idiv
psubq
cmp
cmpsl
call
and
push
and
lea
inc
adc
mov
lock
cwtl
adc
loope
fadd
fs
scas
adc
adc
and
mov
or
jle
cmc
push
xchg
rsm
sbb
adc
add
add
arpl
pop
and
loope
sub
jb
int3
addb
pop
inc
jecxz
jb
jecxz
adcb
cmp
mov
xchg
sub
cmp
repz
std
lret
jmp
scas
xchg
jnp
mov
cmp
ret
in
clc
jb
xorb
xor
or
dec
lret
mov
sbb
mov
dec
scas
or
jge
ds
xor
add
add
out
xchg
dec
add
mov
lret
jne
sahf
arpl
scas
mov
in
popf
aad
subl
dec
push
dec
adc
inc
push
ljmp
pop
jno
adc
mov
insb
cmpsb
adc
insb
das
mov
mov
mov
sahf
or
jp
xchg
adc
jle
jecxz
std
push
into
popf
xor
adc
fistps
lds
movl
shlb
mov
adc
jp
and
lcall
xchg
dec
nop
cmp
pop
xchg
sahf
aas
dec
leave
xchg
call
pop
add
mov
int3
lock
bndldx
fwait
insb
push
clc
mov
mov
pop
ss
cmp
push
jle
dec
xor
sub
lahf
adc
icebp
ret
call
lds
xorb
out
sbb
cmp
and
xchg
out
and
adc
jge
orl
loopne
or
cmp
adcl
xchg
std
cld
xchg
jp
mov
add
push
rorb
xchg
rclb
pop
pop
out
mov
cmp
pushf
rol
dec
movsb
xchg
icebp
xchg
imul
nop
mov
ficoml
add
cld
or
adc
mov
inc
or
nop
sbb
int
adc
push
or
int3
mov
push
mov
dec
sbb
adc
imul
mov
xchg
xchg
fidivrs
mov
js
or
insl
jp
fwait
lahf
and
inc
sbb
mov
std
add
mov
popa
jnp
jecxz
pop
inc
mov
or
popa
insl
pusha
pop
adcl
pop
cmpb
out
repz
loop
cmpsl
sub
ror
je,pt
fcompl
inc
ss
mov
jle
clc
sub
jge
cmpl
push
and
cli
ss
nop
mov
adc
orl
faddl
mov
mov
test
mov
lcall
xchg
outsb
push
push
sbb
ljmp
movsl
out
mov
outsb
popf
loopw
jnp
sub
mov
cli
xor
icebp
dec
jo
adc
sub
mov
std
push
scas
scas
rolb
test
mov
push
jb
inc
xor
testb
out
or
fnstcw
mov
popa
add
shrb
xchg
mov
leave
pop
repnz
pop
or
js
xlat
cld
or
mov
mov
jb
sbb
aad
xchg
and
mov
hlt
in
xchg
call
loopne
sub
test
push
mov
arpl
xor
add
pop
jecxz
add
or
rclb
cmpsb
mov
dec
add
sbb
push
dec
notw
stos
dec
insb
jg
lds
push
xor
jae
das
push
lea
movsb
lods
adcl
mov
inc
jo
sbb
sbb
and
in
jge
mov
ja
jle
cwtl
jae
xchg
add
adc
jl
add
sbb
pusha
loope
jb
subb
int3
sbb
or
mov
mov
fwait
push
lds
arpl
push
lock
shlb
push
mov
mov
add
mov
mov
inc
jbe
push
test
adc
div
in
adc
in
cmpsl
lret
pop
test
cmp
and
fidivl
lock
int3
clc
xor
lock
jle
xor
iret
int
roll
add
jl
sub
imul
inc
mov
sti
jecxz
mov
fldt
clc
popa
mov
mov
jnp
pop
jle
or
and
xor
ja
pop
jo
adc
daa
loopne
fidivrl
pop
aad
mov
push
jo
jb
cltd
lea
ss
es
xchg
out
jmp
in
sbb
notb
xabort
pop
or
sbb
pop
jp
or
int
pop
cmp
jl
cs
dec
fimull
aaa
into
or
not
enter
cmp
mov
out
roll
les
cmp
push
out
inc
int3
add
test
adc
inc
mov
inc
add
cmc
jg
inc
mov
xor
loopne
dec
push
sti
sub
sub
lods
dec
fidivrs
dec
or
or
es
idivl
pop
pop
test
push
inc
dec
ss
sahf
mov
pushf
es
and
popa
sub
sub
mov
jbe
adc
cmp
push
mov
jne
repz
pop
ror
mov
ljmp
insb
xor
sbb
out
mov
jl
pop
or
mov
out
sbb
int
js
jp
jae
outsb
jp
int
sub
add
imul
mov
in
enter
sbb
in
push
mov
adc
enter
out
xor
cmp
push
out
sub
lret
imul
lahf
pop
jle
inc
adc
adc
jp
dec
outsl
xor
hlt
jns
push
push
nop
stc
stos
mov
popa
xchg
imul
testl
sbb
ret
gs
scas
aas
adc
dec
cmp
rclb
repnz
lret
scas
push
into
shll
popa
je
mov
push
dec
sbb
mov
fiaddl
in
fldt
pop
mov
pusha
shrb
dec
jp
cmc
mulb
pusha
sub
mov
mov
cli
test
and
ljmp
jmp
in
jg
jb
push
int3
mov
lods
scas
hlt
sub
inc
push
mov
daa
xor
jb
mov
mov
or
mov
add
inc
mov
or
push
inc
cmpsb
nop
cwtl
dec
mov
js
sti
or
mov
mov
xor
lods
adc
scas
or
hlt
std
mov
inc
in
arpl
push
inc
add
das
sti
push
call
ret
adc
mov
push
xchg
lcall
nop
sub
jo
sbb
xchg
inc
jecxz
sub
jmp
or
imul
mov
es
jns
fidivl
push
mov
scas
mov
imul
push
in
clc
mov
stc
pop
or
add
xchg
sbb
mov
xsave
or
and
mov
aam
adc
add
stc
xor
mov
jo
lock
dec
addb
xor
adc
inc
push
or
hlt
dec
sarl
fmull
inc
stos
imul
pushf
mov
das
roll
sub
jle
xor
adc
jmp
repnz
stos
dec
push
bound
pop
dec
pop
jnp
out
rolb
lcall
out
xchg
push
push
stos
leave
adc
ds
mov
les
loopne
or
data16
mov
adc
inc
test
jp
inc
hlt
xchg
dec
daa
cmc
or
inc
jnp
jne
add
pop
fwait
js
pop
iret
add
add
adc
mov
dec
rorl
icebp
test
call
mov
rolb
out
dec
inc
mov
test
loope
decl
xchg
push
sub
xchg
lret
xor
mov
lock
sbb
pop
push
xchg
addr16
test
add
xchg
xchg
icebp
pusha
xchg
mov
jg
dec
imul
xchg
or
shr
cmp
es
clc
adc
lahf
and
popa
out
lods
pop
fidivs
inc
pop
adc
sub
or
test
das
int3
dec
and
lds
jns
or
mov
lods
sbb
roll
and
insl
bound
int
xor
xchg
sub
cmp
dec
jmp
mov
xlat
vmread
and
cmp
dec
gs
scas
outsl
sub
mov
xchg
int3
ss
and
mov
cmp
cmp
rorb
xor
dec
enter
jp
or
push
fistps
dec
mov
jb
xor
sub
sub
fs
mov
mov
outsb
insb
pop
test
imul
push
fnstcw
pop
test
es
sbb
in
enter
test
movsb
test
push
push
mov
adc
stos
or
out
imul
sbb
mov
inc
xor
adc
outsl
and
into
pop
add
scas
loopne
pop
mov
add
pop
addl
or
jp
inc
fnstcw
jge
mov
add
movsb
fbld
lock
dec
enter
mov
and
loopne
mov
stc
mov
inc
push
mov
lds
pop
fsub
je
subl
and
inc
push
cmp
adc
push
xor
ja
call
xchg
outsb
test
scas
and
nop
loopne
push
enter
pop
sbb
fs
push
fstpl
jp
pop
pop
sub
outsb
mov
in
sbb
adc
push
sub
mov
mov
cmc
dec
inc
jle
fdivrs
fwait
insb
jae
out
fcomp
imul
cmp
mov
push
not
cmpsb
std
outsl
mov
pop
push
push
fistpll
jl
iret
xchg
divl
jo
xorb
in
sub
stos
inc
orl
std
cmpb
dec
iret
out
ss
mov
std
repz
sbb
fsubl
xor
in
push
inc
mov
aad
inc
test
lret
push
adc
add
adc
mov
lahf
adc
push
insl
gs
mov
or
lret
icebp
inc
sub
roll
sbb
pop
push
xor
les
mov
cmp
sahf
push
jne
xor
sahf
ret
xor
jae
and
es
cmp
dec
hlt
sub
cmpsl
xchg
mov
ss
lahf
dec
dec
movsl
mov
test
sti
mov
shl
pop
pop
jnp
pop
movsl
loope
pop
lock
cwtl
roll
inc
movsb
cli
push
jecxz
negl
xor
rclb
push
lret
push
xchg
sub
pop
bnd
inc
aad
dec
frstor
mov
xchg
nop
insb
iret
or
call
out
daa
xchg
scas
leave
mov
mov
cmpsl
inc
rclb
lea
dec
inc
scas
push
clc
test
cwtl
adcb
into
daa
xchg
jo
inc
test
shll
adc
xchg
lahf
mov
jge
jmp
imul
sbb
jb
mov
sub
imul
aad
cmpb
call
inc
in
push
orb
push
or
mov
xchg
nop
adc
pop
jno
in
inc
cmpsb
xchg
sbb
pop
les
dec
mov
push
daa
add
in
lahf
xlat
push
cld
insb
adc
adc
inc
mov
add
adc
stos
enter
cmp
fsubrl
loope
in
mov
mov
insl
in
or
pop
mov
xchg
push
pop
fistps
jno
pop
add
stos
lds
sub
dec
mov
loope
mov
cmpsb
fcmove
mov
cld
test
mov
push
repnz
sahf
jns
or
sar
add
mov
or
mov
lahf
gs
repz
push
iret
loopne
sbb
add
aad
incb
cmp
push
lods
pop
outsb
dec
int3
xor
cld
push
cmp
dec
fstl
test
loop
jne
xchg
sub
addl
add
pop
add
sbb
scas
xor
mov
jl
stc
dec
cmp
mov
cld
xchg
out
test
jae
mov
sti
mov
fisubs
es
ja
xchg
sub
lock
sub
push
out
rolb
and
imul
dec
mov
rep
test
jecxz
mov
sbb
cmp
adc
mulb
cmp
mov
insl
iret
insb
add
in
pop
push
lret
in
xor
stc
dec
mov
addr16
leave
mov
inc
cmc
in
push
pop
rorl
jnp
roll
cmp
fmull
mov
adc
or
push
into
stos
loope
cmovbe
add
xor
dec
mov
lods
cmp
lods
stos
popf
orl
fwait
cltd
sahf
cmpsl
out
mov
jecxz
dec
add
cmp
lcall
lcall
inc
adc
int3
das
aas
fnstenv
mov
lods
and
xor
cmp
push
and
in
dec
andb
insl
or
ucomiss
aas
call
test
sub
cs
or
jb
sub
gs
repz
pop
lods
xchg
icebp
sbb
mov
fldenv
test
or
dec
fisttps
and
or
test
shlb
gs
xchg
aaa
push
jb
jl
std
jmp
inc
pop
sbb
in
sti
xchg
inc
lahf
mov
xchg
popa
inc
pop
in
int3
je
push
int3
push
xor
scas
adc
pop
add
xor
into
xchg
dec
mov
lcall
loopne
popf
push
cmp
push
mov
jl
data16
idiv
test
jmp
sub
xchg
clc
push
rolb
cli
and
fisubrl
and
jb
insl
mov
in
scas
or
inc
test
test
out
pop
dec
aam
push
cmp
je
lods
lret
pusha
mov
push
dec
mov
push
loope
pop
fadds
push
insl
daa
fisubl
add
mov
push
inc
inc
dec
into
sub
cmp
sbb
or
xorb
out
sub
or
jae
sub
daa
push
fidivrs
or
idivl
movsb
xlat
jmp
push
int3
cmp
mov
dec
pusha
int
pop
cmpb
pmaxsw
enter
add
mov
adc
push
pop
out
xor
repz
les
and
push
push
sub
ffree
cmp
push
stos
rolb
sub
fistpl
je
sbb
mov
daa
pop
push
mov
jo
mov
or
xchg
cmpsl
jb
cmpsb
and
mov
aad
dec
mov
loop
inc
test
icebp
jnp
push
mov
cmp
sub
inc
pop
xorl
stc
int
pop
mov
and
inc
sub
adc
mov
cwtl
lods
ficompl
sbb
pop
adc
mov
cmpsl
ret
add
into
and
iret
lock
jp
jecxz
das
fmul
fsubl
fdivs
xlat
jge
dec
fisubs
dec
mov
jge
in
add
fmull
xchg
jl
cmp
fcmove
rol
xor
push
lret
enter
push
xchg
inc
add
and
insb
fcmovu
in
or
aad
scas
cli
sbb
mov
fstpt
pusha
ret
aam
scas
aad
adc
inc
adc
data16
ja
mov
inc
sar
imul
int3
cmp
jbe
mov
lock
das
pop
fistl
xor
orl
mov
in
clc
lock
push
xlat
pop
ret
clc
shlb
inc
in
push
and
sti
dec
cwtl
mull
cwtl
jns
or
jbe
xchg
push
sbb
or
jmp
and
jl
inc
jne
das
in
sub
pop
shrl
imul
cmc
push
ljmp
jo
insl
push
jo
cmp
jb
mov
adc
jb
pop
push
xor
loopne
xor
xor
cwtl
neg
jns
pop
add
mov
jge
dec
sbb
xchg
xchg
prefetch
or
cmp
sbb
add
push
jae
jp
cmp
push
pusha
dec
nop
add
loope
sahf
sti
scas
cmp
jmp
sbb
mov
testl
xchg
mov
mov
pop
int
pop
jb
cmc
add
ret
mov
xchg
push
xor
fstpt
xor
enter
out
mov
dec
outsl
and
jl
jle
and
out
push
lds
lods
imul
adc
call
movsl
jnp
mov
or
add
lcall
mov
lods
in
fistpl
pop
rcr
pop
push
pop
popa
loope
std
flds
es
and
dec
lods
xchg
in
or
fwait
or
cmp
add
pop
jecxz
xor
in
scas
in
jp
sub
cmp
out
xchg
dec
push
mov
cli
xchg
xchg
or
xor
push
cld
jns
loopne
insb
jo
push
xchg
xor
mov
test
mov
or
add
xor
xchg
fwait
lods
cld
push
inc
jmp
sub
add
and
cmpl
rcl
jne
dec
jnp
fidivs
inc
ja
cmpl
sbb
pop
in
add
jg
ror
or
inc
cmp
push
loopne
jns
or
cltd
mov
or
enter
insb
mov
int3
sti
and
mov
mov
push
pextrw
jle
ja
mov
fs
pop
or
xchg
cs
and
mov
into
ja
es
xor
mov
loopne
mov
arpl
rcll
pop
in
cmp
sub
and
xchg
push
push
int
adc
jge
fs
scas
sahf
mov
fiaddl
push
mov
push
push
jns
jp
out
pushw
cmp
and
xor
ret
and
jb
mov
loop
xor
into
in
gs
push
loopne
fsubrs
and
arpl
xor
mov
mov
push
std
cmpsl
xchg
jle
push
icebp
inc
popa
imulb
mov
cld
mov
or
dec
mov
push
add
lret
lock
cli
ds
cmpsb
jge
sub
lret
cmc
and
xchg
dec
mov
xchg
in
adc
inc
enter
cld
dec
repz
rcrb
mov
ret
sahf
arpl
dec
xor
sub
push
enter
addl
xor
push
or
jno
jp
les
int3
mov
cli
aaa
mov
decl
hlt
testl
mov
mov
nop
lods
mull
mov
lret
aam
dec
push
fnstenv
lcall
outsl
add
adc
je
xchg
out
fsubrl
push
mov
fsubrl
aam
jnp
jmp
lcall
not
fisttpll
loopne
loopne
outsl
jmp
sbb
adc
mov
push
pusha
jno
aad
icebp
les
insl
fsubl
mov
mov
cltd
inc
adc
fs
cmp
cmpsl
sub
sbb
cmp
adc
mov
dec
fnsave
fbld
adc
test
cmpb
insl
in
xchg
lahf
das
loope
or
sub
imulb
xchg
repnz
ret
dec
mov
dec
adc
sbb
out
insb
pop
aas
bound
rcl
push
jecxz
inc
int3
imul
jno
out
in
fmuls
sub
or
inc
out
inc
inc
cmp
aas
sti
daa
mov
fdivrl
pop
sbb
test
rcll
cmp
leavew
dec
pushf
dec
or
in
xchg
shrl
leave
test
jle
add
inc
aaa
sbb
into
pusha
out
mov
in
pop
icebp
xlat
inc
cmpsl
popf
ss
out
mov
xor
push
rcrb
out
jl
push
iret
pop
jns
imul
fnstsw
mov
sub
jmp
add
xlat
test
aam
dec
mov
mov
dec
leave
sub
pop
xlat
xchg
jbe
imul
xor
add
das
fadds
pop
addl
fildl
setbe
ret
push
and
push
rcrb
scas
and
lret
outsl
push
jae
mov
mov
lret
fisubs
or
xorb
bound
inc
dec
xor
sub
fiadds
mov
daa
int
fmul
and
lods
mov
call
push
scas
sbb
adc
sbb
push
mov
pusha
xor
repnz
lret
mov
push
dec
mov
or
lahf
push
cmp
rcrb
mov
repnz
xor
jno
mov
jmp
popf
push
cmp
jge
pop
out
push
jbe
mov
mov
in
mov
imul
sub
mov
mov
push
scas
mov
pop
fildl
push
int
out
pop
faddl
dec
shlb
icebp
jns
popf
ret
add
dec
loope
mov
inc
cs
fdivrs
aaa
cmc
clc
in
fbld
xchg
inc
mov
aad
jp
mov
test
sahf
jnp
movsb
mov
or
out
mov
fistps
sbb
adc
cmc
scas
dec
stc
fimuls
xchg
loop
outsl
imul
adc
sub
and
fsubl
data16
xchg
and
subl
in
repnz
aaa
sub
movsl
cs
mov
push
pusha
pop
mov
cs
jno
fmul
movsb
xor
cmp
cmpsb
push
es
cmp
daa
or
mov
mov
pop
std
inc
mov
mov
cmpsb
push
test
out
dec
jbe
adc
outsl
sub
push
push
mov
add
push
ret
inc
inc
dec
xchg
icebp
cltd
jmp
fldcw
loop
in
xor
pop
pop
scas
inc
mov
fwait
xchg
cmpsl
adcl
aaa
xchg
cs
ret
xchg
lret
ss
test
add
leave
mov
daa
and
pop
or
clc
fcompl
sti
ret
sub
in
mov
mov
xchg
adc
test
inc
sbb
and
loop
movsb
sbb
int3
add
stos
data16
negb
add
cmp
pop
imul
or
arpl
adcb
xor
ss
cs
jge
sbb
xchg
out
mov
jge
pop
jle
jns
inc
cmpsl
call
loopne
fsubl
je
add
xor
mov
mov
add
push
into
sub
or
popa
xchg
int
mov
mov
push
aas
xor
rorl
jo
push
fs
or
scas
inc
fmuls
hlt
into
test
fstl
sbb
inc
stos
xchg
sbb
xchg
sub
clc
xor
shl
inc
insl
lea
roll
jbe
arpl
imul
or
sub
aas
xor
mov
stos
jns
fdiv
dec
push
sbb
and
lds
inc
pushf
outsb
jp
ja
das
add
and
mov
push
and
and
inc
in
sbb
in
xchg
lds
push
pushf
pop
mov
test
mov
add
add
outsb
xchg
roll
mov
add
out
cmp
push
pop
add
cld
ror
pop
dec
jle
sbb
jae
movsb
push
cmpsl
in
inc
mov
inc
psraw
jno
fucomi
sbb
jbe
cwtl
aaa
nop
add
mov
xchg
ret
add
js
adc
mov
ljmp
xor
xchg
in
sub
mov
lock
sbb
add
mov
lret
movsl
push
inc
add
or
data16
mov
cmpsb
andl
sbb
pop
or
roll
aad
inc
xchg
sub
push
cmp
movsb
andb
scas
xchg
fwait
dec
sub
ret
cs
in
mov
es
into
ficoml
ja
cmp
and
push
mov
and
xchg
xor
pop
push
xchg
mov
sahf
shlb
mov
scas
adc
mov
pop
and
mov
out
sti
xchg
push
es
xchg
mov
dec
inc
cmc
mov
sub
movb
xlat
push
loop
addr16
es
xchg
lahf
dec
sbb
stos
fmull
hlt
bound
mov
ret
push
lds
popa
das
pop
xchg
into
xchg
sbb
call
push
stc
negl
scas
iret
insl
adc
pop
mov
lds
mov
sbb
dec
fsub
and
shll
movsl
xor
pop
push
out
and
xor
dec
inc
sbb
out
jp
cs
pop
loope
and
aaa
cmc
adc
fcmove
push
fisttpl
loopne
sub
in
jle
jae
mov
mov
dec
and
push
movl
dec
cmp
mov
test
sbbl
mov
outsb
mov
insb
rcpps
cld
into
adc
mov
jne
jmp
hlt
and
int3
xchg
xchg
ss
addps
adc
mov
mov
pushf
xlat
sbb
jp
mov
sub
inc
cmp
into
xchg
inc
adc
shr
fcoml
jg
inc
jle
xor
cmc
jmp
push
mov
fldl
xchg
pop
xor
or
lret
aad
loope
cmp
sub
xor
test
scas
adc
hlt
ja
and
jp
xchg
xchg
sub
jg
test
xor
sti
mov
negl
push
pop
dec
imul
cli
jp
sub
mov
or
push
pop
push
inc
cmp
rclb
scas
xchg
arpl
jns
scas
mov
cltd
test
and
ret
and
sub
lcall
mov
inc
out
jns
pusha
mov
inc
jne
and
or
ret
std
cltd
jae
ret
or
mov
dec
cmp
dec
rclb
add
dec
dec
sub
pop
loope
push
std
mov
mov
mov
sti
cmpsb
xchg
push
xchg
xchg
or
mov
movsl
and
adc
xchg
sarl
stos
pop
fwait
rcr
mov
decl
sub
fldt
mov
movsb
cmp
lods
push
in
sti
addl
pop
outsb
repnz
xchg
pop
xchg
sbb
sub
repnz
insb
pop
pop
mov
inc
hlt
rorb
das
xor
and
or
mov
push
es
add
out
cmp
outsl
je
add
imul
or
cmp
inc
mov
xor
inc
pop
push
mov
mov
arpl
into
mov
jo
out
sbb
lcall
mov
imulb
loopne
mov
lcall
insl
lret
xchg
adc
or
jo
cmp
stos
pop
loop
test
jl
clc
outsl
rcl
cs
inc
rcl
mov
sbb
out
xor
sbb
mov
mov
cmp
adc
jns
jmp
inc
add
push
bnd
pop
lods
aas
sub
mov
pop
mov
adc
fidivl
ret
mov
andb
sbb
out
jae
les
loop
ret
dec
inc
push
into
ja
fdivs
inc
out
pop
fwait
mov
clc
jp
rcrl
dec
fstpl
xor
mov
std
dec
andl
aam
push
dec
xlat
mov
sbb
nop
aad
fnstsw
cmp
out
mov
jmp
ss
inc
lcall
mov
and
rolb
std
push
insb
icebp
aam
jmp
inc
inc
imul
in
lret
or
pop
pop
xor
int
int
xchg
scas
add
fdivs
pop
std
bound
lods
mov
dec
jnp
hlt
in
scas
cmp
or
mov
inc
ds
mov
mov
mov
pop
mov
shlb
lds
fcomip
mov
xor
push
mov
shll
inc
stos
sbb
lock
sub
add
stos
add
inc
inc
mov
add
sub
aad
mov
fsub
fadds
out
sahf
cmp
iret
out
pop
sub
mov
cmp
int3
icebp
in
push
or
jns
lretw
ds
or
bound
sbb
sub
add
xor
mov
dec
out
stos
sub
jle
fildll
pop
or
xchg
jmp
aam
loop
xor
cmp
cmp
lahf
adc
pop
inc
das
cmc
js
dec
insl
mov
mov
mov
push
sbb
repnz
je
mov
pop
mov
jge
nop
add
scas
inc
ret
sbb
pop
clc
in
adc
hlt
push
push
das
cltd
push
sub
jmp
fistl
inc
jb
out
sbb
icebp
test
mov
push
sbb
pop
cmc
inc
mov
xor
or
test
fwait
and
fst
dec
jg
mov
stos
xor
jmp
sbb
hlt
cli
ret
pop
mov
inc
inc
mov
addr16
cmp
leave
imulb
lcall
jmp
add
mov
sub
imul
out
std
ss
pop
adc
push
mov
sub
inc
ljmp
aam
loope
test
adc
mov
jl
ret
leave
test
dec
sbb
arpl
jnp
icebp
hlt
xor
or
adc
add
cltd
fst
dec
cmp
aad
adc
push
xlat
sbb
dec
add
loopne
fisttpll
mov
cwtl
repz
dec
push
aam
mov
das
fistl
push
xlat
or
adc
mov
shll
jle
movsb
dec
push
sbbl
leave
ret
pop
cmp
mov
outsl
mov
and
cmp
sbb
pop
sbb
sar
mov
mov
dec
mov
sbbl
mov
stos
arpl
fldt
jg
sub
jmp
xchg
xchg
mov
jp
pop
bswap
or
sbb
mull
fadds
insl
xchg
shll
popa
inc
jno
pop
lods
divl
popa
push
data16
fisubrs
xchg
sub
data16
in
movsl
rclb
mov
xchg
rcrl
test
mov
ljmp
or
push
popa
ficoml
leave
sti
fwait
xor
and
jnp
movsb
push
adc
jno
popa
pop
orb
xchg
mov
jns
mov
sti
xchg
lea
mov
xor
and
aam
mov
cmp
in
pusha
adc
pop
jge
jne
dec
hlt
jecxz
in
and
mov
in
ja
and
rorl
ljmp
stc
push
aam
fst
cli
and
andl
sbb
add
jl
sar
push
and
out
mov
movsb
sbb
rcl
dec
stc
mov
cmc
andl
xor
mov
rol
dec
xchg
pop
sbb
jle
pop
dec
lods
addr16
mov
jo
inc
out
push
pop
roll
loope
xor
ljmp
push
movsb
jle
jo
or
jne
aam
xlat
jo
and
xor
cwtl
jg
enter
push
test
sub
push
xor
cmp
jmp
fildll
cmp
pop
scas
adc
mov
neg
sub
jne
dec
adc
mull
jae
mov
adc
mov
pop
adc
repnz
lods
add
pop
lret
xchg
movsl
test
leave
jno
jg
pop
andb
stc
je
negb
xchg
pop
sbb
mov
pusha
jge
fistps
sahf
push
xchg
mov
jne
in
mov
push
js
push
inc
xor
mov
jl
cmc
scas
mov
xchg
in
scas
dec
and
cmc
mov
mov
gs
add
movsb
pop
and
jl
mov
cmpl
mov
mov
lret
push
add
jmp
sbb
icebp
sub
js
ljmp
call
or
dec
cmc
outsb
clc
xchg
add
aaa
and
test
mov
cltd
pop
stos
sarl
and
loop
cmpsl
mov
adcl
mov
cmp
outsb
cmpsb
jb
xchg
and
sub
dec
test
sub
fcoms
or
pop
add
mov
ja
cmp
jl
push
adc
insl
adc
test
cmp
sar
cmp
mov
add
sbb
into
push
sub
and
test
push
rcrl
leave
mov
xchg
movsb
xor
int
mov
leave
inc
or
push
lods
and
inc
and
subl
cmp
lods
test
xorl
mov
push
add
rclb
loop
or
loope
pop
sbb
das
sbb
aam
cmpsb
fdivl
dec
adc
push
loopne
mov
fucom
sub
cmp
mov
adc
push
dec
xor
ja
and
in
push
mov
adc
mov
div
loopne
outsb
mov
mov
hlt
ja
das
repnz
push
leave
ror
fdivp
push
sub
pusha
gs
out
ror
or
rcrl
int3
test
inc
xor
sub
jg
pop
negb
out
in
bound
data16
xchg
stos
sub
imul
cld
xor
inc
push
call
push
loope
adc
lret
adc
mov
pushf
sbb
add
or
shlb
cmp
rorb
adc
xchg
and
and
and
inc
add
ss
je
sbb
cmpsl
out
cmc
iret
and
cltd
in
cmp
push
cmc
fisubrl
test
mov
sbb
and
pop
cmp
and
imul
push
mov
xchg
pusha
ljmp
add
leave
fwait
inc
sbb
hlt
jmp
xchg
push
out
test
adc
adc
sahf
sbb
pop
dec
int
pop
shl
ror
sub
sbb
jge
cld
inc
ds
out
mov
mov
or
pop
jb
int3
inc
ret
andl
mov
add
push
pop
fs
add
in
sti
popf
data16
je
sub
mov
xor
mov
cmpsl
test
pop
xchg
rorb
std
ja
push
inc
push
sbb
stc
jl
add
and
insl
sub
stos
pop
sbb
jno
lcall
sti
testb
sti
popf
sub
in
es
pop
mov
mov
jmp
gs
dec
test
fwait
or
pushl
or
inc
mov
rcrb
xchg
xor
js
fdivrs
test
jmp
test
or
enter
adc
mov
sbb
cmpsb
or
dec
out
into
sub
cmp
ds
adc
mov
pushf
push
les
sbb
mov
lods
pushf
and
or
jno
test
jle
xchg
rcrb
jo
cmp
lock
gs
lret
xor
mov
rep
jb
ss
lea
push
mov
stc
mov
inc
mov
xor
dec
aaa
pusha
mov
xlat
sbb
pop
fistps
mov
jecxz
mov
sbb
pop
dec
cmpsl
lahf
mov
adcl
sub
rorl
push
mov
xor
scas
out
cmp
dec
and
movsl
mov
pushf
xor
xchg
dec
mov
xor
or
push
lcall
dec
inc
stos
lock
mov
aam
lahf
adc
pop
add
mov
arpl
test
xchg
scas
inc
ss
or
repnz
out
xor
mov
mov
shrl
sub
imul
mov
xlat
arpl
pop
icebp
inc
shr
js
insb
fnstsw
es
jbe
dec
mov
dec
mov
mov
sbb
inc
mov
mov
xchg
pop
ds
out
cmp
adc
pop
arpl
sbb
bound
push
or
mov
sbb
pop
scas
and
icebp
loope
pop
pop
mov
imul
jl
mov
lods
aam
icebp
xchg
xchg
negl
mov
movsb
int3
test
push
push
mov
pop
mov
fs
outsb
ljmp
xor
and
repnz
jecxz
mov
hlt
cli
mov
add
lret
out
iret
add
in
pop
out
add
xor
add
xchg
cmovp
loope
mov
cmp
in
arpl
pushf
mov
aad
xchg
mov
dec
mov
mov
mov
xchg
clc
roll
les
and
xor
adc
xchg
leave
mov
mov
add
push
popf
dec
data16
sub
sbb
fnstenv
add
and
fidivs
cmp
mov
lret
pop
sub
mov
lds
sub
adcl
adc
and
xor
rcll
inc
or
mov
push
je
jmp
add
js
cwtl
cmp
or
push
push
sub
cwtl
es
inc
pop
lret
test
cld
sbb
lods
cmc
push
testl
hlt
xchg
sub
xchg
call
scas
sbb
out
push
mov
dec
cmc
xchg
and
and
jg
fs
jns
into
dec
es
sbb
push
pusha
dec
sub
imul
loopne
ljmp
push
push
lock
shlb
inc
stos
in
les
mov
add
cmp
mov
lods
mov
dec
mov
insb
fnstenv
mov
stc
adc
inc
push
sub
out
roll
add
das
push
xor
cld
pop
push
daa
cmp
scas
dec
and
dec
mov
cli
sub
add
lret
sub
and
xor
mov
sahf
stos
sub
dec
lcall
mov
in
movsl
pop
mov
mov
imul
push
stc
dec
mov
push
test
sbb
es
test
cmp
call
sbb
lret
add
and
incl
shlb
adc
xor
adc
test
arpl
es
mov
add
rcrb
cmp
pop
cmpsl
mov
push
jne
jg
mov
or
inc
xchg
sbb
or
push
xor
ficompl
data16
xchg
repnz
mov
mov
sbb
je
ds
cmp
imul
sahf
inc
push
xor
add
in
movsl
loope
imul
in
mov
push
add
fidivl
lds
and
lret
push
mov
mov
sbb
cmp
xor
jle
push
xor
loope
jno
jae,pt
or
mov
xchg
lret
and
and
and
mov
or
xchg
jbe
dec
push
popa
frstor
pop
mov
iret
fdivs
add
sbb
pop
jns
rcr
mov
xchg
mov
cmpsb
mov
out
pop
cs
dec
enter
outsb
mov
insl
pop
loopne
cmp
enter
icebp
cmpb
out
cs
mov
jbe
sbb
fmull
push
int3
push
les
cmp
sub
add
add
mov
sar
add
push
cld
in
ds
add
imul
stos
lods
lahf
rcl
cmp
imul
movsb
call
test
pop
inc
bound
movsb
or
int3
cmp
jecxz
adc
sbb
lret
jmp
lcall
add
frstor
xor
adc
xor
xor
mov
mov
mov
sub
sbbl
pop
dec
fnsave
negl
push
mov
test
mov
dec
or
out
sti
daa
adc
xchg
sahf
ja
or
inc
mov
loop
mov
push
inc
pop
mov
lock
hlt
inc
aad
aas
int3
sub
js
dec
je
pop
mov
clc
sub
lahf
movsb
fs
mov
into
enter
mov
push
xor
or
in
fnstsw
int
notl
addl
xchg
ss
pop
fildll
adcl
in
lss
data16
leave
pop
sub
fidivrs
in
mov
fimull
adc
sahf
inc
mov
lods
ss
stos
pop
add
cld
mov
addl
jp
xlat
pop
inc
pop
lods
les
xor
shlb
add
shlb
adc
out
notl
xlat
arpl
add
jno
loopne
push
mov
popa
dec
jb
xor
sbb
inc
frstor
popf
fisubl
lret
add
mov
sarb
bound
ds
mov
cmp
push
lcall
insl
push
icebp
push
in
cmp
cmc
loop
xlat
outsb
push
cmp
mul
lahf
das
mov
adc
pop
inc
mov
out
pop
outsl
es
gs
cmc
and
and
mov
loope
mov
call
ljmp
and
mov
mov
jmp
lret
pop
out
pop
xor
dec
xchg
push
xchg
jecxz
hlt
jb
push
adc
ss
leave
xor
fiadds
push
repnz
sbb
fldenv
push
cwtl
pop
and
or
cmp
icebp
mov
mov
xlat
scas
je
add
cld
or
fildll
jmp
add
push
xchg
inc
mov
push
push
jo
gs
xor
mov
push
mov
pop
sahf
xor
andnps
gs
in
or
fcompl
sub
pop
pop
xor
adc
nop
push
mov
fs
sbb
lret
divb
cwtl
add
movsb
xchg
adc
pusha
leave
mov
subl
aad
fs
dec
popa
out
sbb
hlt
push
insb
mov
adc
mov
cltd
mov
sarb
sarl
push
andl
jmp
jp
xchg
inc
out
inc
imul
subb
repz
imul
clc
mov
outsb
and
mov
lea
sub
add
push
ja
or
ficomps
outsb
cmp
pop
movsl
add
and
ret
lret
lahf
inc
xchg
inc
add
adc
xor
xor
lock
icebp
mov
sti
mov
fnstenv
adc
dec
jp
lahf
dec
imul
insb
sub
repz
flds
fisttps
test
loope
inc
mov
out
pop
inc
push
shll
add
sbb
mov
push
cs
mov
mov
lret
sbb
inc
cmpsb
jo
push
add
sub
fsubs
cmp
sbb
cli
aaa
rep
push
dec
stc
cld
jns
dec
jle
dec
inc
dec
jmp
pop
pop
popa
jno
add
enter
fcmovnb
inc
lds
mov
daa
jnp
pop
and
data16
sarl
dec
mov
arpl
loop
iret
and
ss
mov
mov
jb
jb
faddl
insb
inc
xchg
mov
lea
add
sarb
cmp
clc
ret
push
pop
add
leave
shl
in
mov
adc
mov
mov
jl
dec
lea
push
lea
fidivrl
add
inc
fucomp
inc
shrb
inc
das
popa
iret
cmpsb
cmp
mov
in
cmpb
std
push
stc
mov
pop
mov
and
lock
mov
shll
nop
aas
jg
cmp
inc
cltd
or
cmp
jns
int3
lret
lret
lds
inc
fst
dec
lret
scas
adc
xchg
inc
add
mov
xlat
stc
or
ss
pushf
pushf
sub
jbe
dec
xchg
cmp
in
mov
xor
insl
push
repz
movsb
pop
pop
rcl
push
pop
movsl
ja
pop
jns
sbb
mov
add
or
gs
out
cmp
jno
sti
or
xchg
ja
inc
mov
xor
xor
popa
scas
xchg
jecxz
divl
xchg
mov
in
cmc
popf
push
rcll
into
test
data16
sub
cmp
int
gs
dec
cmp
cmc
mov
mov
andl
insl
add
xchg
cmc
mov
cmp
sarb
xchg
sbb
jg
iret
inc
test
push
dec
in
stos
mov
iret
pop
adc
std
or
inc
push
cld
inc
cld
mov
pusha
lret
shlb
clc
mov
imul
idivl
out
fcoml
jnp
adc
dec
cs
sub
fsubs
or
mov
mov
sub
mov
cmp
or
es
loopne
sbb
fadds
fs
push
xor
sub
cli
mov
xchg
movsl
adc
xchg
sub
mov
pop
sub
push
adc
aas
popf
fwait
mov
cmp
enter
mov
xchg
cmp
cmpl
xchg
push
testl
stos
and
lret
dec
dec
push
pop
push
sub
inc
dec
mov
in
outsl
pop
das
lret
sbb
sub
add
jo
pop
adc
lcall
sub
mov
mov
mov
push
outsb
xchg
test
pop
sub
mov
insb
or
hlt
inc
clc
add
sbb
xchg
and
mov
mov
cmpsb
mov
and
adc
inc
pop
test
xor
pop
mull
out
mov
push
mov
sub
jmp
pop
loopne
bound
arpl
in
pusha
movsl
pop
or
mov
flds
mov
mov
nop
jl
gs
jno
cs
int
test
jb
loopne
or
ret
fstl
sub
std
mov
test
shlb
pop
pop
frstpm(287
adc
shlb
aas
dec
fmull
fadds
outsb
cltd
mov
iret
or
push
mov
lods
out
adc
test
clc
cmc
push
adc
push
fists
lahf
mov
mov
xor
insb
pop
test
and
out
lods
pop
push
jno
jb
in
sub
rcrl
or
pop
ljmp
add
mov
mov
jb
xor
popa
jl
push
jno
add
dec
lret
insb
mov
push
int3
flds
and
mov
xor
inc
pusha
movsb
cbtw
and
pop
mov
stc
push
cmp
push
in
push
adc
nop
pop
xchg
push
cmp
sub
adc
ficompl
push
xor
xchg
xor
arpl
add
sahf
punpckldq
mov
mov
dec
mov
dec
mov
mov
or
mov
xlat
loop
pusha
nop
imul
sbb
bt
fimull
dec
rcll
add
out
mov
shll
imul
pop
inc
jecxz
mov
mov
in
inc
push
int3
adcb
mov
or
ret
pusha
cltd
xchg
cmp
lea
xchg
push
pop
dec
pop
and
xor
jecxz
jmp
sbb
jae
adc
mov
sti
sub
mov
stc
int
in
ret
sub
rol
je
outsb
arpl
test
and
push
dec
xchg
cmpsl
mov
aas
xchg
dec
fcoml
mov
push
push
ljmp
out
cmp
jo
push
cmp
push
int
xor
test
jno
pop
dec
in
jle
outsl
push
mov
mov
dec
sbb
addr16
cld
leave
lcall
fsubs
dec
rcrb
cmp
inc
pop
aas
and
adc
and
push
orl
repz
nop
lods
or
mov
lahf
jns
lds
jbe
cmpsl
ffree
or
ret
cmp
enter
ficoml
mov
scas
aaa
or
dec
jo
xchg
test
sub
mov
mov
adc
xor
fldt
mov
arpl
mov
fists
add
loopne
pop
or
jnp
sbb
push
jle
cwtl
imul
fwait
hlt
out
xor
repz
mov
hlt
mov
jl
les
jmp
and
and
mov
mov
xchg
insb
mov
aad
outsb
test
mov
mov
xlat
std
cli
gs
lahf
es
ret
mov
cs
out
xchg
adc
mov
inc
push
and
inc
pop
pop
iret
inc
jnp
std
xchg
out
lods
cwtl
das
addr16
jbe
cmp
and
sbb
ds
pop
imul
xchg
dec
es
and
pop
mov
adc
push
test
sbb
mov
inc
and
xor
ljmp
mov
push
insl
fdivl
inc
mov
lret
mov
xchg
ret
mov
stc
push
arpl
repz
leave
fs
daa
mov
pop
and
inc
int3
mov
test
jp
mov
cmp
aas
sub
lods
mov
iret
jb
jp
cmpsl
pop
in
popf
dec
mov
pop
push
push
js
js
lods
cmp
andb
mov
adc
popa
mov
mov
mov
out
cmp
into
fstps
repnz
pop
clc
leave
movsl
or
push
loopne
or
jo
push
loope
inc
fs
or
jae
mov
jg
test
pushf
pop
dec
cmp
xchg
sahf
xchg
fcom
inc
in
xchg
xlat
cmpb
cs
out
add
mov
push
cltd
xor
mov
clc
fbld
lahf
mov
stos
xchg
push
jae
jnp
mov
scas
insl
dec
push
xchg
sub
rol
lods
xchg
ds
in
xchg
mov
adc
lods
or
xor
in
sbb
loope
pusha
push
pop
movsb
stc
ret
xchg
inc
cmpsb
pop
xchg
stc
pusha
adcb
xlat
fstpt
adcb
inc
or
movsl
loopne
jg
gs
outsb
dec
mov
sub
cwtl
inc
in
pop
jl
pop
ljmp
js
lahf
test
cli
sbb
jmp
addr16
call
xor
adcl
inc
aam
add
pop
icebp
mov
sub
icebp
pop
mov
lods
jb
push
pop
mov
sbbb
mov
inc
push
jne
jae
adc
iret
iret
insb
lds
fld
sbb
stc
test
notb
jmp
in
addr16
scas
test
loope
aaa
hlt
sbb
nop
fcoms
dec
scas
test
adc
lods
cmp
push
in
jl
iret
adc
fisttps
push
je
inc
push
sub
mov
leave
es
ret
out
das
js
scas
cli
nop
sbb
jg
or
lock
push
sahf
gs
xchg
add
fimull
pop
push
inc
aad
push
mov
mov
inc
arpl
int
dec
arpl
bound
push
or
out
test
pop
mov
outsb
sbb
or
out
mov
les
scas
sbb
rcll
pop
xchg
aam
sahf
push
insl
pop
pop
adc
dec
cmp
fnstenv
lret
jbe
adc
clc
je
mov
adc
sahf
mov
jl
add
fwait
lds
lret
adc
hlt
push
sub
add
jnp
jmp
mov
fisubl
into
dec
and
adc
jecxz
pop
imul
stc
lods
popa
cmpsl
fsubrl
sti
pop
fidivs
mov
cs
sahf
jmp
cmp
xor
mov
push
bound
and
lahf
mov
idiv
movsl
inc
jp
mov
or
js
push
cmc
clc
xchg
daa
lods
push
lods
and
sub
pop
xchg
es
push
rcrb
push
pushf
sarl
cmp
inc
pop
lahf
mov
sbb
sub
idivl
js
push
xlat
add
push
pop
movsb
jge
cmp
inc
mov
leave
scas
and
adc
mov
mov
dec
jns
nop
fdivrl
in
arpl
stc
and
outsl
mov
arpl
xchg
js
cmp
push
ja
pop
call
mov
pop
enter
insb
add
cmp
inc
mov
pop
xorb
jge
xchg
xor
inc
inc
arpl
inc
mov
mov
jle
call
or
cmpsb
or
in
pop
mov
stc
pop
sub
cs
cmc
loopne
jnp
or
inc
into
loopne
loope
aam
cld
jg
pop
cmp
push
fildll
fnstcw
sub
pop
movsb
push
push
nop
pop
mov
jae
jne
xor
outsl
dec
dec
adc
js
adc
push
mov
imul
aaa
and
jbe
outsl
sub
fnstcw
imul
mov
scas
fdivl
cmp
outsb
hlt
aad
mov
dec
aam
pop
push
into
dec
mov
in
jp
scas
inc
ret
clc
inc
mov
hlt
xor
mov
xor
lret
xchg
inc
roll
or
sub
mov
sbb
rclb
out
jl
pop
daa
push
jecxz
gs
loope
loope
rorb
out
lcall
pop
add
or
ret
jno
push
mov
xor
push
comiss
mov
adcb
popf
stos
std
or
cmp
aam
cmp
cmp
mov
add
mov
pop
adc
rcll
sub
aas
xchg
ficoml
gs
sub
cmp
int3
std
dec
in
mov
jb
sbbb
ss
icebp
pop
push
sbb
dec
lahf
sbb
mov
push
outsl
inc
pop
jg
lock
mov
pop
imul
stos
pop
and
ret
add
add
add
xchg
mov
outsl
mov
stc
cmp
jl
mov
pop
mov
fcoml
stos
aaa
fs
cmpsl
sbb
popa
xor
or
sti
xchg
jle
imul
jae
mov
out
pop
and
pslld
cmp
jne
dec
call
cmpsl
adc
xor
lahf
imul
cltd
dec
dec
cmp
mov
adc
out
shll
fadd
ficompl
shrl
sub
scas
cwtl
mov
jns
pop
repz
stc
cmp
ja
lea
jmp
out
loope
inc
stos
cmp
in
or
jp
aad
jo
push
arpl
mov
adcb
or
aaa
inc
inc
sbb
inc
imul
push
movsb
pushf
lret
mov
jle
pop
or
adc
cmp
push
mulb
mov
mov
out
push
mov
es
aad
add
repnz
iret
jge
cmp
stc
popa
add
or
xorb
sbb
leave
mov
mov
in
sub
and
push
push
add
loop,pn
in
add
rcrl
pushf
imull
addr16
mov
ret
fwait
in
sub
mov
jg
sub
push
push
cmpsb
or
cmp
sbb
mull
jns
pushf
fadds
mov
and
imul
adc
pop
adc
das
imul
mov
jae
dec
lods
push
arpl
sbb
cmp
push
sub
xchg
cmp
push
cli
jle
cmp
fwait
and
test
test
push
addr16
and
pop
mov
lret
mov
stc
push
sub
data16
mov
stos
push
cmp
stos
rolb
loope
dec
adc
dec
aaa
sub
test
cmp
es
std
push
and
aas
xor
cmpsb
pushf
cmpsl
adc
pop
iret
mov
rep
inc
mov
out
push
xor
int3
sub
xor
enter
stos
add
hlt
inc
inc
sbb
inc
sub
sarl
cmc
adc
aam
sbb
movsl
mov
ret
adc
push
or
or
dec
push
je
mov
insl
fadd
xchg
cmc
add
je
jle
js
shrl
sub
jo
mov
add
or
popf
add
push
mov
push
loop
lret
repz
sbb
sarb
cmpb
adc
add
xlat
mov
mov
jge
arpl
pop
mov
xchg
out
mov
jmp
movsl
and
dec
sti
adc
adc
jb
aad
add
mov
and
pusha
es
lods
xchg
push
aad
jle
pop
mov
in
mov
sub
xchg
push
outsb
pop
lock
mov
test
xor
jne
inc
cmp
add
out
sbb
orb
test
inc
mov
into
loop
enter
jge
fnsave
add
movsl
rorl
scas
into
jecxz
inc
jnp
mov
loopne
scas
inc
loope
and
mov
stc
jns
lret
jp
stos
sarl
mov
jle
adc
adc
out
jge
pop
sahf
mov
mov
fmuls
or
jno
xor
mov
or
inc
insl
adc
insl
add
movsl
jg
imulb
cmp
sub
out
loopne
mov
xchg
stc
dec
lds
stc
test
mov
pop
pop
cwtl
adcl
push
sbb
dec
jg
dec
and
or
mov
imull
rolb
popf
cmp
es
fwait
sub
sub
gs
sbb
xchg
repnz
xor
fsubs
sbb
lds
dec
test
cmc
shrl
jns
into
sbb
in
popa
push
push
jno
in
jmp
loopne
ftst
aad
out
cli
pusha
test
push
lods
dec
addl
lcall
gs
lret
fisttpll
mov
cmc
sbb
mov
leave
mov
add
cmp
push
jecxz
rcrl
incb
lret
sbb
jl
and
out
fnstcw
push
xchg
cmp
in
scas
pop
fdivp
pop
fwait
std
mov
adc
push
xchg
aas
or
mov
xchg
jp
cmc
jmp
sub
outsl
sub
push
push
push
lods
or
mov
jne,pn
adcb
fldcw
out
jbe
push
or
jbe
into
fbld
and
jge
test
shlb
shrb
leave
sbb
bound
scas
mov
push
test
sti
or
xchg
or
pop
fs
test
mov
cli
test
outsl
mov
add
in
cli
xchg
pop
dec
shlb
repz
push
outsl
repnz
xor
repnz
xchg
es
xor
lcall
mov
push
push
or
push
leave
or
inc
mov
add
jg
or
cmp
xor
daa
shrb
sbb
aas
fistpll
fldt
out
cmp
lret
cli
sub
popf
in
cmp
sub
xchg
imul
jno
xorb
test
pushf
fldt
xchg
push
std
xchg
fptan
repnz
pop
ret
fiaddl
fnsave
aas
std
pop
jecxz
sub
or
xchg
mov
je
add
sub
or
sub
add
sarb
repnz
int3
push
mov
xchg
xor
push
cmpsb
dec
shlb
adc
jmp
shlb
cmc
lret
lock
jnp
iret
and
cmp
mov
hlt
fidivrl
mov
cwtl
xchg
mov
movsl
loopne
push
mov
sub
mov
and
or
aam
pop
fmuls
enter
xchg
jb
lods
lds
std
fimull
sub
adc
add
ret
adc
daa
mov
xlat
or
dec
mov
or
mov
in
jnp
mov
popf
inc
iret
mov
shll
fs
rcrl
inc
xor
push
cmp
inc
fwait
mov
and
jns
scas
push
xchg
push
add
call
mov
cmpsb
xchg
mov
push
dec
pop
wbinvd
adc
xchg
lahf
f2xm1
mov
bound
int3
test
inc
outsl
shrl
jle
pusha
jns
fisttps
and
xor
push
arpl
push
addb
cwtl
cltd
cmp
adc
jae
sti
shll
xor
addl
nop
insb
dec
cmp
or
push
test
or
cmp
jecxz
ret
sbb
jae
mov
subb
xchg
sub
je
jno
ret
adc
or
inc
roll
sbb
add
or
xor
dec
mov
arpl
stos
inc
in
mov
and
mov
add
sti
xchg
leave
dec
ljmp
cmc
scas
in
in
xor
icebp
dec
push
xor
xor
pop
sbb
int
xchg
lahf
stos
mov
inc
pop
mov
jle
movsb
push
leave
push
sbb
aaa
loopne
inc
adc
in
fld
add
data16
mov
inc
sahf
cs
jno
xchg
or
jb
xchg
mov
jns
rcll
inc
aaa
push
mov
faddl
int
sbb
push
arpl
lods
std
mov
test
pop
push
sub
inc
sbb
repz
loope
xor
and
add
mov
loop
movsl
aaa
push
adc
inc
je
ss
adc
fstl
pop
jnp
int
dec
adc
jg
push
pop
arpl
push
xor
cmp
mov
cmp
add
enter
cwtl
and
icebp
les
mov
dec
push
xor
mov
sbb
mov
lock
pop
xor
sbb
push
popa
add
jle
leave
mov
jge
cmp
aam
adc
rcrl
jnp
das
mov
lret
int
ds
mov
iret
enter
mov
loopne
mov
mov
insb
jne
pop
adc
cmp
cs
adc
xchg
jp
inc
mov
or
jae
cmp
lcall
pushf
adcb
xchg
xchg
pop
xchg
adc
adc
sub
lods
ljmp
mov
jbe
sub
mov
ds
xchg
push
dec
dec
test
movsb
popa
adc
mov
mov
mov
cmc
mov
xchg
callw
sub
push
push
in
sub
in
jl
pop
sub
jecxz
inc
shl
mov
data16
sbb
xchg
dec
js
je
dec
or
xchg
rclb
in
sub
and
imul
into
test
adc
mov
inc
std
mov
jo
outsl
mov
daa
sbb
jnp
sub
mov
or
lcall
cwtl
sub
jnp
xor
and
cmp
aam
cmp
mov
cmp
xchg
fimull
sub
mov
cwtl
scas
inc
cmp
xor
add
xor
jno
jle
int3
cmp
fidivrs
pop
mov
xor
and
pop
adc
lock
add
jae
mov
nop
testb
insb
ja
add
cs
mov
popa
ljmp
mov
loopne
and
loopne
xor
loopne
and
mov
jp
xchg
and
dec
idivb
and
mov
push
mov
cmp
xchg
lea
xchg
ds
fsubr
test
cmp
xor
das
mov
pop
xor
aam
out
stc
and
les
mov
outsb
xchg
loop
dec
ss
xchg
jecxz
iret
pop
jae
dec
fsubr
pushf
mov
mov
pop
mov
call
xor
push
out
adc
sub
pop
cmp
enter
inc
test
stos
int
test
xor
lock
or
dec
ret
mov
xchg
ljmp
dec
in
mov
call
sbb
test
sub
add
loope
mov
ja
int3
inc
sbbl
dec
shlb
test
push
sbb
mov
mov
dec
dec
arpl
test
cld
add
xor
add
xor
inc
pop
inc
push
dec
push
mov
xor
push
inc
pop
loopne
mov
pop
loope
stc
mov
mov
sarb
jmp
jno
into
repnz
mov
ljmp
ret
mov
es
ja
in
sarl
sub
jns
jno
pop
or
insb
sub
fsubl
sbb
js
es
test
ja
jno
jmp
sub
sti
fcoml
mov
dec
je
xchg
or
dec
inc
shll
mov
jo
pop
in
and
push
pop
andnps
in
xchg
pusha
mov
mov
mov
mov
ljmp
sbb
push
or
mov
aaa
sub
ja
xor
out
not
lock
jmp
cmp
xchg
pop
out
cmpl
sbb
repz
inc
nop
or
test
sub
sbb
push
loope
out
push
in
das
cli
fistl
adc
stos
jmp
and
jns
jecxz
jo
fdivrl
adcl
lods
push
xor
fisttpll
or
aaa
dec
lret
jmp
icebp
sub
jl
in
testl
enter
xchg
cmp
sub
aam
jae
out
fwait
repnz
cmp
add
aam
pop
fs
cli
jo
and
mov
rcl
mov
out
data16
test
out
push
cli
pop
xor
pop
rcl
test
inc
mov
xchg
int3
xchg
hlt
dec
cmp
mov
outsb
jo
out
jp
jmp
jg
push
mov
sbb
sbb
xchg
ss
xchg
jmp
jge
pop
inc
js
add
into
fwait
xor
jbe
popa
leave
pop
fwait
xchg
out
out
les
mov
outsl
push
fnstsw
mov
mov
ss
xchg
fcomps
imul
jno
or
cmp
or
adc
mov
xchg
es
inc
repz
lret
or
mov
cmp
lock
or
in
mov
js
in
inc
pop
dec
cmpsb
imul
iret
jge
popl
mov
dec
call
push
xor
lret
lods
sarl
je
pop
mov
adcb
add
sti
lret
xchg
clc
jb
hlt
outsl
push
mov
push
jmp
fnstsw
adc
sub
mov
xchg
ror
mov
pop
jecxz
and
or
adc
dec
jbe
imul
jno
shlb
add
flds
and
xor
js
lret
xchg
push
add
inc
sub
lahf
sbb
fistpl
xor
add
pop
fs
pop
in
pop
jbe
jno
push
jnp
out
push
xlat
clc
cmpb
testl
cltd
repz
push
sbb
lock
movsb
rcrb
jge
pusha
int
fisubs
cmp
jle
push
in
ja
loopne
cmpsb
mov
or
pop
cmp
subl
scas
push
mov
icebp
lods
cli
mov
sahf
dec
inc
jg
out
mov
mov
cmp
loopne
and
xchg
pop
pop
icebp
in
dec
shll
lcall
cmp
sarl
dec
jae
in
push
mov
bound
adc
outsl
inc
das
stos
xor
jmp
adc
mov
or
adc
lock
fisttpl
or
push
sub
sub
aas
stos
cs
push
addr16
stc
push
pop
leave
ljmp
inc
sbb
lods
leave
xor
push
int
adc
scas
jl
jne
mov
dec
mov
inc
xchg
and
je
rcl
out
push
cmp
push
and
inc
cmp
inc
mov
mov
sbb
cmpl
inc
orb
aas
mov
or
ss
test
add
loope
xchg
stc
pushf
repz
lods
fimull
popa
cmpsb
lea
and
test
inc
iret
jg
xor
add
clc
mov
popf
adc
dec
sbb
fisubl
cld
sbb
enter
fimull
adc
shrb
mov
test
sub
xor
sub
jnp
jp
fimull
sti
mov
aam
sbb
loope
sbb
or
cld
or
dec
jns
mov
pop
jns
insl
neg
xchg
sbb
popa
jecxz
hlt
leave
outsb
aas
movsl
ss
stc
shrb
cmp
sub
idivb
mov
sbb
cmp
xchg
loope
out
cmp
push
or
aaa
mull
fs
jge
mov
sarl
or
cltd
sbb
pop
je
nop
jns
hlt
idivl
add
inc
jecxz
add
lea
sub
lods
mov
dec
nop
sarb
out
call
mov
pmulhuw
test
test
jmp
sub
js
pop
in
xor
jae
dec
xchg
and
lock
inc
mov
outsl
or
mov
shrl
jns
test
ljmp
and
test
jl
push
and
jns
jecxz
fcoms
or
xor
push
jnp
pop
mov
dec
es
add
in
pushf
movsb
push
dec
inc
adc
ffree
mov
sbb
lahf
aam
mov
push
enter
or
mov
cmp
test
inc
or
rcrb
adc
jb
inc
jb
nop
push
cmp
int
pop
fcmovnbe
fldt
dec
pop
push
sbb
scas
push
insl
pushl
pop
rcr
xchg
imul
imul
ret
int
pop
push
mov
push
lahf
dec
sbb
add
sbb
dec
imul
jbe
mov
rorb
inc
fadds
dec
lods
dec
sub
push
or
rcr
sti
cmc
ret
adc
loope
imul
lea
inc
cmpsl
cmp
sub
ds
aaa
aaa
cltd
mov
cmpsb
inc
repnz
or
cmpsl
xor
fisttps
inc
mov
lahf
aaa
cmp
lcall
test
leave
std
sub
fsubrs
mov
xchg
test
dec
hlt
fidivrs
mov
mull
xor
sahf
aam
sbb
ret
dec
inc
push
and
adc
push
aam
mov
jmp
test
pop
ss
loope
xchg
fsubrs
insb
or
mov
pop
sti
enter
mov
jo
insl
or
adc
mov
ljmp
push
push
stc
pop
or
or
xchg
xor
fwait
push
daa
xor
and
movsl
shrl
dec
daa
popw
out
xchg
sahf
jno
jo
dec
popa
jb
popa
fs
xchg
xor
dec
push
sbb
mov
test
ljmp
jg
xchg
mov
and
mov
stos
inc
sbb
leave
sahf
xchg
pop
into
xchg
jecxz
push
cmp
pusha
add
fmull
repnz
call
jno
cmc
add
stos
or
push
bound
aam
std
out
and
cmp
xchg
outsl
test
sub
test
pushf
call
icebp
xchg
bound
insl
lock
xchg
mov
cmp
dec
std
aas
fildl
lods
xchg
pop
sbb
test
mov
xadd
pop
fwait
cmp
in
mov
push
add
es
xchg
adc
movsb
movsl
xor
pop
pop
cmp
jmp
inc
jg
pushf
xchg
xor
and
fcompl
ja
imul
popf
pop
shll
lock
dec
mov
int3
add
fcmovb
out
or
stos
insl
rcll
je
cmp
push
mov
mov
lcall
cmpsb
sahf
jne
cld
jns
ljmp
fdivl
pusha
xor
das
jle
push
das
xor
sbb
clc
push
lds
mov
adc
inc
pop
xchg
pop
daa
add
cs
fcmovu
sub
xor
jge
and
xor
imul
xor
xchg
inc
cmp
je
inc
sub
cmp
shl
and
and
jmp
int3
mov
call
pop
pop
and
mov
fsubp
sbb
loope
sub
push
push
dec
out
xchg
js
add
push
or
push
rol
fcoms
mov
cmp
fidivrs
cmc
and
scas
mov
sahf
mov
mov
in
fisubl
pop
fcomp
sub
rcrl
shll
mov
push
movsb
addr16
cmp
mov
push
pushf
std
inc
dec
sub
out
add
mov
inc
test
cwtl
mov
xlat
mov
xchg
mov
popa
sub
imul
jo
stos
xchg
adcl
outsb
mov
xor
shlb
sub
cmp
outsb
lds
popa
and
mov
jo
js
lret
sahf
or
fcomp
xlat
ss
mull
pushf
adc
shl
adc
inc
dec
pop
and
adc
and
mov
lds
int
mov
decb
xlat
outsb
rcrl
aad
adc
sbb
repnz
aas
and
sbb
ds
insb
xchg
pop
sbb
dec
sub
push
outsl
push
jno
or
mov
mov
test
add
mov
js
mov
cmp
mov
les
bound
movsb
inc
mov
push
jmp
jnp
cmp
pop
or
mov
or
ret
add
mov
xchg
insl
mov
les
xchg
push
rorl
and
mov
jmp
arpl
shlb
mov
push
fisubrl
dec
lock
test
push
mov
ret
fwait
xchg
jmp
and
add
mov
cld
ret
shrl
and
stc
lea
outsl
mov
andb
jp
sub
movb
mov
adc
int
lret
lcall
fwait
cmp
inc
mov
les
int3
les
xchg
arpl
mov
mov
mov
push
fs
nop
xor
nop
and
sub
jb
loopne
shlb
inc
rolb
and
mov
inc
enter
lea
clc
pop
ret
shlb
lret
xchg
into
int
inc
mov
imul
test
mov
add
sahf
ja
dec
xchg
mov
lods
jb
cs
aam
pusha
mov
xchg
mov
pop
out
xchg
mov
clc
lds
cli
lahf
mov
cmp
movsb
xor
cmp
cs
mov
push
pop
in
inc
xchg
dec
popf
xor
jmp
fld
push
sbb
ja
adc
fcmovnu
fs
and
sub
xchg
dec
push
sti
or
dec
dec
in
push
adc
test
lea
cld
adc
out
sub
das
scas
repnz
xchg
in
xor
or
adc
aas
lcall
sbbl
xchg
xor
pop
out
addr16
and
and
idivb
aad
lret
add
lea
mov
xchg
dec
inc
pop
imul
mov
aas
sub
loopne
xchg
push
xor
les
sub
jne
das
lds
mov
jge
xor
or
mov
out
cli
mov
sub
or
js
xchg
mov
mov
popf
sarl
mov
iret
sbb
adc
jl
xchg
loopne
xor
cmp
repz
iret
mov
aaa
out
add
data16
movsb
mov
pop
pop
int
insl
inc
aam
xlat
mov
movsb
or
mov
fmul
cmp
cmp
sbb
jnp
xchg
push
movsb
subb
orb
cmp
rol
jg
xor
scas
mov
xor
fmuls
shlb
push
int3
inc
icebp
test
inc
cmp
xchg
cmpsb
cmp
mov
fdiv
stos
fwait
or
or
adc
mov
hlt
fdivrs
adc
dec
ret
lahf
lods
add
sbb
cltd
aad
sbb
rorl
rorb
cmp
shll
jo
pop
pusha
insl
mov
mov
and
mov
add
popf
and
sahf
xchg
xchg
aad
pop
fcoms
cli
repz
add
cmp
dec
rcll
in
xchg
adc
sbb
arpl
das
inc
leave
fiaddl
les
shll
mov
xor
pop
pop
push
outsb
jecxz
lods
mov
adc
mov
mov
jmp
push
cmpsl
stos
fdiv
int3
xchg
push
and
repnz
jne
mov
sahf
sub
sub
movsl
jge
or
pop
xchg
in
scas
fnstsw
adc
jo
mov
test
test
mov
lahf
jge
adc
cltd
pop
fcoms
aam
sbb
outsb
xlat
out
mov
ds
or
push
ret
fldt
fidivrs
int3
xchg
popa
jg
stc
idivb
dec
and
arpl
popa
js
mov
push
pop
andb
call
ja
mov
leave
pop
jp
addl
pop
or
pop
int3
test
stos
cwtl
pop
mov
in
jg
lret
xchg
lret
les
lock
push
xchg
cmp
ffreep
and
xor
inc
mov
bound
and
fpatan
fwait
outsl
and
test
jns
sahf
sub
mov
jno
xor
sahf
pop
leave
ror
out
repz
aam
aaa
mov
pop
jp
call
cmp
imul
popa
push
das
push
push
in
bound
cld
lret
ljmp
push
mov
orb
and
xchg
rorb
cwtl
lcall
loopne
mov
pusha
xchg
mov
or
inc
sbb
push
mov
and
arpl
in
push
or
mov
fwait
pop
popf
lock
add
ja
pop
inc
mov
out
lcall
out
pop
fisubrs
mov
in
mov
pop
mov
pushf
sub
aas
cs
jl
or
out
inc
xchg
incb
scas
push
pop
jbe
fidivl
jne
cli
jbe
push
out
ret
mov
inc
repnz
in
das
pop
test
not
adc
push
mov
inc
dec
std
dec
pop
mov
hlt
dec
push
dec
or
sbb
mov
inc
cmp
jb
and
lcall
sbb
jecxz
vunpckhps
add
dec
sarb
cmpb
in
test
les
inc
jns
mov
lods
and
popf
xchg
dec
or
push
add
mov
cwtl
xor
pop
ds
add
dec
xchg
sbb
or
mov
andb
adc
jne
xchg
iret
ss
and
movsb
and
push
mov
mov
pop
cmpsl
xor
jle
xchg
ja
mov
outsl
in
and
and
push
in
cmpl
push
ret
sbb
test
adc
test
sub
test
mov
and
xlat
mov
push
sub
imul
inc
or
repz
iret
cli
lahf
addb
xlat
xor
adc
cmc
add
mov
cld
mov
popa
test
andb
mov
sbb
insb
enter
int
std
imulb
mov
mov
dec
mov
add
xor
test
test
pusha
add
out
mov
std
outsl
stos
in
fs
mov
mov
popl
dec
nop
insl
sbb
mov
and
mov
imull
and
pop
push
out
pop
lea
ljmp
cmp
aam
mov
lds
lock
or
push
stos
dec
idivb
xorb
pushf
daa
add
inc
shll
jmp
inc
lcall
add
mov
xchg
cltd
and
sub
cld
pop
mov
mov
dec
jb
sbb
mov
stc
fidivs
mov
shlb
push
push
sub
sbb
lret
std
mov
sub
mov
lea
out
js
add
test
add
push
dec
add
and
aam
mov
push
mov
and
mov
mov
jecxz
ficompl
test
xchg
mov
push
cs
fdivrs
jbe
mov
sub
ss
lds
mov
std
sub
jns
push
cmp
orb
mov
cmp
jnp
in
adc
cmp
mov
dec
sub
dec
mov
push
aad
dec
loopne
pop
jge
and
mov
imul
movsb
aad
shl
mov
pop
mov
xchg
je
lock
inc
add
repz
xchg
and
pop
arpl
rol
pushf
cmp
jle
xchg
add
inc
in
xor
push
xor
cs
xchg
pop
es
cld
pop
and
xchg
push
fimuls
push
push
fabs
incb
pop
pop
ret
int
divl
push
outsl
mov
dec
cmp
inc
push
shll
sbb
cltd
sub
xchg
mov
pop
into
das
popa
xchg
lahf
push
lock
adcl
adc
and
lods
or
fldt
mov
lahf
mov
mov
xlat
icebp
mov
sbb
pop
and
sub
stos
lret
daa
mov
mov
roll
dec
dec
call
sub
add
sub
dec
cmpsl
push
pop
stc
push
mov
aam
stos
std
jbe
mov
xorl
and
and
ljmp
jl
mov
jns
sub
negb
les
mov
push
mov
mov
adc
mov
in
fwait
cmpsb
andl
xlat
rcrl
hlt
jecxz
stos
out
iret
pop
cs
push
jo
out
jbe
negl
inc
lcall
xor
or
pop
ja
xor
in
adc
mov
push
fwait
lock
xchg
insb
push
sbb
call
mov
out
daa
inc
cmp
dec
or
adc
push
jbe
or
cmp
loopne
adc
lahf
bnd
mov
sub
and
stos
jb
mov
pop
subl
int3
fbld
or
cmp
mov
cs
add
or
jnp
mov
xchg
mov
and
mov
cmpsl
dec
imul
dec
sub
xor
cmpsl
cmpsl
jno
fs
cmp
adc
imul
pop
and
icebp
add
stc
or
adc
into
clc
iret
jp
sbb
lcall
imul
enter
adc
mov
jbe
cld
jnp
gs
in
fistpll
stos
mov
js
adc
call
imul
ds
mov
mov
mov
add
cmp
in
daa
js
iret
popf
imulb
add
cmpsb
mov
and
and
loopne
rcr
mov
add
dec
sti
adc
mov
rorl
dec
or
inc
out
jp
cs
rcll
lds
clc
xor
outsb
xor
mov
aam
aad
xor
xor
mull
into
or
sqrtps
cli
add
imul
ret
cmp
arpl
clc
push
xor
xchg
or
call
add
inc
mov
mov
out
lods
test
inc
ljmp
mov
into
daa
outsb
pop
scas
int3
bnd
dec
addr16
jo
jg
int
pop
push
cmc
jno
lret
push
xchg
cmp
jle
xchg
cli
icebp
inc
xor
andb
inc
mov
jmp
inc
cld
cmp
inc
pop
outsb
xorl
mov
mov
xchg
sub
pop
mov
in
cltd
mov
shlb
dec
add
adc
mov
xor
push
aas
cmp
call
mov
mov
dec
xchg
cmp
imul
push
popa
mov
inc
cwtl
cwtl
adc
cld
push
mov
iret
push
xchg
jne
ljmp
orb
and
subl
cmp
out
pop
mov
movsb
in
jmp
fiaddl
mov
ret
pusha
loopne
jno
in
cld
scas
sbb
inc
xorb
pop
je
or
pop
mov
push
cmpsb
loopne
out
into
fidivs
jnp
out
or
hlt
sti
pop
mov
scas
test
pop
ret
testb
pushf
call
and
mov
sbb
xchg
mov
mov
cltd
rcrb
push
loop
push
ds
nop
push
jb
cmp
mov
lds
and
enter
xchg
addb
scas
add
inc
mov
mov
push
int3
in
xchg
mov
cmpsl
jge
cs
mov
inc
cmp
sub
mov
xlat
inc
cmp
mov
xor
sub
inc
sahf
adc
lods
outsl
sub
inc
in
push
add
dec
mov
pop
bnd
pop
add
sbb
inc
xchg
dec
rorb
pusha
repz
sbb
out
push
sar
add
sbb
pop
fs
xchg
jae
les
push
pop
lret
add
xorl
mov
ja
mov
push
aaa
shlb
es
jge
rorl
insb
test
cvttps2pi
xchg
xlat
repnz
jns
dec
inc
dec
clc
test
jg
ds
xchg
leave
push
xlat
subl
ljmp
ret
sub
test
xlat
lcall
sub
jns
fdiv
test
cmc
cli
fldcw
arpl
and
movl
sahf
ret
adcl
push
cli
mov
jecxz,pt
fcomp
or
push
inc
add
pushf
push
repnz
cmpsb
jno
mov
mov
jnp
sbb
insl
jp
arpl
imul
fiadds
bound
cld
outsl
addb
cmp
sahf
pop
dec
icebp
shll
pop
dec
loop
dec
adc
ljmp
push
xchg
mov
mov
pop
sbbl
mov
mov
gs
xor
data16
inc
rcrl
out
cmp
pop
jb
lods
iret
adc
dec
sbb
push
das
dec
popl
mov
xor
fcomi
jge
popf
mov
xchg
js
gs
xchg
and
mov
cli
dec
popa
pop
mov
dec
ss
pop
jmp
xchg
fdivs
add
jae
sbb
and
scas
jmp
or
inc
jp
xchg
adc
in
cmpsl
je
jge
scas
pushw
out
jae
ljmp
test
scas
in
fmuls
push
jg
in
mov
fdivrl
sbb
test
xchg
cs
cwtl
inc
jecxz
jmp
mov
or
push
dec
add
aaa
push
sahf
imul
repnz
hlt
push
lds
lea
into
movsb
das
dec
sbb
jl
ret
shrb
sub
lea
mov
je
cli
or
sarb
out
push
arpl
xchg
imul
jl
lods
iret
xchg
push
das
lods
xor
fsqrt
loope
push
xchg
lret
das
popf
nop
lock
fsubr
stos
push
inc
mov
leave
outsl
or
adc
dec
inc
std
sbb
xlat
push
jb
inc
stc
xor
add
aam
cmp
cwtl
rcrl
out
lock
push
scas
bound
xchg
jo
adc
sub
cltd
xchg
mov
enter
dec
xor
mov
lcall
fmul
cltd
and
or
mov
cmp
lret
push
adc
sti
push
insb
xchg
mov
outsb
jge
and
jl
push
push
inc
mov
mov
mov
ret
mov
add
or
cmpsl
aaa
fidivrl
int
push
mov
add
mov
int3
lret
mov
pop
rcrl
adc
sti
inc
call
inc
mov
inc
sub
pop
adc
les
sbb
inc
icebp
jp
push
add
cmp
in
scas
aam
pop
insl
outsl
adc
or
std
mov
lds
cli
sub
lea
push
sti
imul
imulb
push
sub
xchg
pop
push
sub
outsl
imul
pop
pop
mov
test
jns
pop
loop
jle
lock
fwait
xor
sbb
jl
sti
aad
and
push
out
test
cmpsl
cmp
iret
adc
daa
and
jmp
xlat
pusha
inc
mov
pop
bound
loop
aas
jb
int
lods
mov
mov
xor
sbb
xchg
lret
in
pop
in
std
push
sub
jnp
lcall
pushf
cmp
in
cld
pop
popa
mov
or
mov
xor
stos
add
lahf
movsl
cmp
cld
aas
dec
dec
push
es
enter
enter
je
lods
sahf
mov
xor
push
mov
add
add
rcl
cmp
lret
sbb
mov
xchg
sti
insl
pop
div
xchg
add
in
push
outsb
out
jmp
aaa
pmulhuw
sbbl
jnp
rcll
mov
mov
and
jno
xchg
movsl
inc
es
xor
adc
or
aad
and
ljmp
mov
jno
mov
loopne
push
and
cmp
inc
inc
mov
xchg
xchg
fs
xchg
hlt
push
mov
push
popf
into
out
xor
pop
cld
mov
sub
lock
scas
je
push
ret
cli
sbb
dec
fldl
sub
sbb
sub
in
jb
hlt
fwait
dec
stos
jg
sub
fprem
push
sarl
sbb
lahf
shll
mov
sub
mov
xor
test
aam
cli
andl
mul
jle
and
arpl
cmp
mov
xchg
cmc
movsl
loop
lods
sub
push
lds
mov
ss
sbb
inc
aas
adc
faddl
cmc
mov
cwtl
pop
mov
cwtl
jmp
sbb
and
sub
jno
fiadds
test
cmpsl
mov
push
adc
pusha
test
shll
sub
or
adc
lret
dec
push
stos
push
shl
pop
leave
mov
notb
stos
jae
push
sbb
fsubp
pop
sub
xchg
pop
or
pop
lahf
nop
fwait
cmp
in
jno
jno
pop
xor
addb
lea
xor
adc
jmp
cld
mov
call
mov
hlt
sbb
clc
mov
mov
jge
movsb
insl
mov
sub
mov
repnz
and
mov
jg
rorl
pushf
das
add
adc
ss
fisttpl
mov
mov
mov
das
bound
dec
cmp
pop
popf
sahf
sahf
mov
push
and
mov
lds
xor
adcl
sarb
sbb
mov
mov
push
mov
daa
loop
addb
into
mov
lea
outsl
dec
sub
iret
adc
stc
sub
dec
cld
sub
roll
mov
mov
push
mov
xlat
adc
cmc
push
out
fimuls
ret
cs
pop
cltd
pop
mov
mov
lcall
mov
adc
in
xchg
push
repz
je
xor
icebp
cmpsb
sbb
pop
cltd
mov
jmp
mov
push
sub
and
fs
ja
repz
rcll
nop
dec
ret
cld
popa
lahf
loopne
dec
in
or
cmpl
xchg
cmp
movhps
movsb
lock
mov
fs
pop
punpcklwd
in
test
pop
adc
arpl
les
mov
cmpsb
out
mov
lahf
subb
xor
in
sbb
xlat
idivb
push
daa
mov
adc
sub
xchg
pushf
or
in
sub
add
fdivs
adc
mov
add
mov
sar
clc
sbb
fwait
mov
xor
addr16
inc
outsl
rcrb
jg
xchg
out
jb
pop
out
mov
push
in
mov
iret
movsb
add
sahf
add
push
ss
jmp
xchg
fnstenv
dec
adc
stos
ret
jecxz
adc
out
fisubs
pop
aam
mov
je
insb
je
rclb
push
jecxz
int
test
aam
outsl
push
dec
jbe
xchg
mov
pop
fisttpll
pop
mov
cld
fsubp
xor
ja
loop
jge
es
fstpt
jl
daa
and
push
and
pop
hlt
leave
jle
add
xor
adc
lahf
and
jmp
xchg
test
dec
dec
nop
ja
inc
in
mov
fisttps
xor
xor
mov
and
xor
sub
jmp
ret
insb
jecxz
push
mov
cmp
popa
and
add
xor
cmp
pop
roll
subps
daa
mov
sub
and
or
xlat
repnz
in
pushf
and
arpl
mov
or
rclb
mov
in
mov
or
cmpsb
xchg
fiadds
jb
fcmove
mov
mov
int
xchg
cmp
cmpsl
xchg
in
jno
and
mov
fsubrl
je
jl
loop
lods
jbe
loope
jbe
fisubrl
jg
sbb
inc
sti
adc
pop
mov
test
cld
mov
mov
mov
sahf
mov
inc
xor
in
imul
addb
cmc
dec
or
popf
inc
jp
stos
in
pop
orb
es
pop
xchg
out
push
sub
loope
push
push
sbb
xchg
cmp
mov
out
push
call
lret
xor
mov
imul
loopne
mov
push
or
sbb
mov
es
test
xchg
bswap
shl
stos
inc
pop
popa
bound
arpl
leave
xchg
stc
dec
nop
fwait
adc
in
cmp
popa
sub
jl
xchg
and
arpl
cmp
pop
dec
mov
jo
xchg
pusha
push
cwtl
les
pop
sub
ljmp
dec
arpl
xchg
jmp
stos
enter
sti
jmp
xchg
dec
cmp
adc
pop
lret
xor
or
daa
push
sti
daa
outsl
mov
and
xchg
jmp
adc
mov
or
rcll
adc
arpl
scas
cld
pop
es
pusha
rcl
sbb
or
pusha
sahf
inc
sahf
push
dec
mov
pushf
jecxz
fcmovu
add
aad
add
fs
push
fimuls
in
stos
aad
aas
xchg
stc
push
cmp
dec
cmp
dec
cwtl
mov
mov
lcall
dec
dec
push
cmp
add
pop
cmp
inc
bound
lahf
test
cmp
sbb
cmc
adc
shl
jmp
mov
and
add
fisttps
daa
inc
add
cmp
cmpsl
leave
out
or
cmp
into
pop
notl
dec
mov
sbb
sub
mov
ret
inc
inc
and
and
lea
xor
ljmp
sub
lock
push
jb,pt
rclb
pop
pushf
out
cmp
cmpsl
pusha
mov
push
pop
das
sub
cmovs
dec
or
pop
adc
lahf
xor
push
sub
leave
or
arpl
sub
mov
arpl
jmp
mov
test
sti
rcrb
jnp
sbb
ja
cmp
cmp
loope
lock
daa
xorb
subl
sbb
out
mov
or
or
sahf
movlhps
or
nop
movsb
stc
fwait
les
xor
lea
fistl
mov
adc
push
inc
dec
call
jbe
push
das
pop
int3
cltd
mov
sbb
xlat
int
loop
xor
xor
fstps
cs
mov
cmp
xor
mov
jecxz
bound
lods
pushf
cld
out
sub
loopne
adc
and
lods
sbb
jno
scas
mov
jmp
adc
mov
jg
jmp
cmp
imul
push
cli
pusha
mov
pop
lret
aas
jae
not
cmp
add
rorb
inc
shll
shlb
out
sahf
dec
lock
rorl
jno
and
cmc
push
ljmp
sub
lock
fs
fwait
cmp
lret
sti
or
testl
jae
outsl
pop
mov
gs
jne
jno
add
andb
aaa
insl
daa
mov
cmp
inc
fwait
jnp
filds
cmp
enter
out
xchg
mov
nop
mov
xor
xor
fnsave
popf
dec
fdivrs
inc
lret
shlb
loop
add
mov
subb
sti
repnz
xchg
dec
imul
pusha
into
in
sahf
fnsave
mov
mov
bswap
jae
out
hlt
cli
push
push
ret
mov
xchg
and
adc
pop
jge
je
jp
pop
fwait
sub
adc
ret
inc
pop
dec
xor
addr16
popf
xor
ss
mov
inc
fisubs
cwtl
stc
add
pop
push
xlat
mov
mov
rcrb
jbe
inc
jmp
add
in
lock
das
fidivl
jae
push
cmpsl
das
fdiv
jl
and
xor
fimuls
ljmp
ficoml
cmp
xor
jp
test
mov
cmp
mov
xor
pop
jle
les
xor
ficoml
adc
int3
cmp
jl
arpl
mov
sbb
adc
or
mov
add
inc
mov
push
lds
and
sahf
cli
xchg
je
aam
popf
int
xor
mov
inc
mov
in
cmpsb
lods
cmp
psubw
aad
inc
add
in
adc
cmc
movsl
pop
push
mov
add
inc
cmp
mov
mov
mov
push
inc
or
sti
push
adc
inc
fs
mov
into
insl
loopne
xchg
push
xchg
xorl
shl
cmpsl
test
insb
daa
fsubl
repnz
mov
mov
cld
pop
repz
rcr
shrb
js
fsubrp
std
mov
aaa
test
and
aaa
in
imul
mov
cmp
les
mov
loopne
xchg
mov
out
jge
fs
test
out
pop
add
insl
test
dec
mov
cli
test
xchg
mov
ficoml
mov
mov
jnp
out
jb
xchg
dec
xchg
xchg
pop
add
shr
mov
fstl
push
jnp
imul
or
ret
jmp
or
push
loope
jg
xor
mov
sbb
ret
scas
jmp
stos
call
xor
lahf
outsl
jo
inc
int
stc
mov
sbb
push
mov
mov
loope
repnz
jae
les
jae
xor
dec
and
out
mov
xchg
and
dec
dec
lea
xor
or
fstps
xchg
jbe
jnp
mov
cs
mov
cmp
add
cltd
mov
out
cltd
jle,pt
jecxz
push
fadds
sahf
cld
bound
loopne
cmp
xor
cmp
xor
inc
add
cmp
aaa
adc
ds
pop
mov
xchg
int
lock
aaa
fwait
scas
test
cltd
insl
push
sbb
iret
pop
add
and
test
push
add
mov
sub
jno
sbb
xlat
bound
aad
test
nop
and
cwtl
in
sub
repz
add
and
push
pop
xlat
inc
pushf
fs
adc
mov
in
jge
push
jmp
pop
sub
ss
sbb
ret
adc
aam
scas
test
popf
add
sbb
sub
imul
jbe
fsubs
popf
mov
pusha
or
leave
fimuls
shrb
or
test
jbe
sbb
jae
jbe
push
add
pop
jne
push
insl
mov
dec
int3
sub
dec
sbb
mov
aad
jne
sbb
loop
in
push
int
jge
addr16
cli
pop
adc
int3
insb
xor
subl
dec
xor
xchg
subl
lock
loop
mov
xor
and
dec
jmpw
mov
push
xchg
dec
jbe
repz
adc
orb
cmpsl
jecxz
andl
fstps
add
movsl
or
dec
aaa
addl
mov
mov
imul
mov
das
mov
pop
leave
dec
mov
cld
cmp
mov
loope
and
std
cmp
xor
fisttpl
out
cmp
sub
mov
dec
mov
out
adc
dec
and
es
xchg
dec
fidivrs
sahf
cmp
add
aam
fmul
xor
inc
cmp
xchg
cli
aas
adc
and
fcompl
cld
fwait
pushf
and
mov
aaa
sbb
sub
push
inc
les
insl
stos
fs
sbb
cmp
lahf
mov
out
and
mov
les
das
dec
fs
mov
jbe
sbb
adcl
js
orl
mov
mov
push
aad
xchg
ret
cmp
scas
sub
add
adc
xchg
popf
in
sahf
jo
stos
loopne
sub
cld
iret
pop
jmp
push
mov
mov
jmp
popf
mov
inc
lds
push
and
add
xor
dec
jmp
fs
call
xor
mov
jp
stos
fwait
dec
adc
pop
push
aas
dec
movsb
mov
rcrb
jp
mov
inc
add
mov
mov
cmpsl
ficomps
mov
sbb
cmp
xor
dec
inc
mov
loope
popa
pop
cmp
fdivrs
cmp
add
cmp
inc
xchg
xchg
loop
je
push
push
sbb
inc
pop
pop
cmp
and
testb
imul
pusha
icebp
push
mov
in
rcr
aas
fidivrs
push
jb
sbb
addr16
sahf
jnp
lods
inc
mov
pop
movsl
pop
sub
lret
iret
out
cmp
xchg
subps
sbb
test
daa
xchg
sub
sti
clc
fsubr
mov
out
cmp
mulb
inc
jno
stos
push
push
or
inc
push
bound
je
rcll
mov
test
iret
pusha
loop
sahf
in
mov
pushw
in
rolb
outsl
push
mov
arpl
lret
xchg
jecxz
lret
test
adc
es
lea
adc
push
aas
insb
test
cmpl
sub
inc
fwait
js
xor
inc
out
dec
aaa
add
inc
xchg
cltd
and
dec
mov
cltd
es
das
mov
xchg
jge
pop
bound
push
inc
icebp
arpl
xchg
lock
push
push
scas
xchg
xchg
test
arpl
inc
pop
xchg
mov
add
adc
inc
cwtl
mov
insl
add
inc
add
jge
lret
test
dec
mov
ss
add
daa
add
sbb
xor
xor
mov
mov
pop
xchg
stos
mov
mov
stos
stos
mov
in
push
mov
movsl
pop
fwait
ja
jns
in
pop
enter
sahf
cwtl
sbb
push
popa
push
sbb
into
sarl
and
cmp
lahf
xchg
lahf
shl
adc
inc
movb
jecxz
cmp
bound
jmp
xor
popf
call
ljmp
pop
dec
cmp
rcrl
jl
xchg
std
mov
mov
cld
sbb
outsb
mov
xchg
rcrb
mov
scas
xchg
data16
pop
pop
fs
xchg
scas
or
jb
sbb
lods
imul
jno
popa
and
out
xor
or
cmp
daa
jno
lods
pop
test
adc
popl
mov
and
xor
inc
cmc
lcall
mov
out
lret
jbe
and
cmp
fadd
int3
xor
adc
cltd
push
mov
inc
out
mov
mov
jnp
and
push
adc
and
in
inc
mov
pop
rclb
daa
mov
adc
xor
ret
loopne
dec
fwait
sbb
cmp
jb
push
mov
insl
mov
cwtl
jle
and
xlat
cs
ficompl
xor
addr16
pop
daa
pop
push
cmpsl
push
add
lods
push
mov
sbb
cmc
xor
cltd
sub
insb
jecxz
sbb
movsb
inc
shrb
xor
mov
sbb
cli
sub
aad
push
or
lcall
jns
push
mov
pushl
call
cmpb
and
std
mov
sbb
jbe
sbb
mov
fiadds
iret
fbld
jmp
jp
adcb
jg
bound
sbb
out
xchg
push
and
das
and
inc
loop
inc
ja
add
sbbb
cltd
call
mov
mov
lret
cmp
mov
aas
fisttpll
movsb
sbb
daa
xchg
dec
push
and
fsub
sub
ja
mov
pop
shl
fmuls
adc
iret
cmp
insl
addb
movsl
lods
sub
jle
lods
xchg
dec
cwtl
fwait
test
out
mov
js
dec
jl
stos
jo
adc
mov
daa
mov
cmpsb
lods
dec
sub
in
sub
stc
out
pop
cltd
rol
mov
push
sub
popa
les
imul
mov
shrl
jbe
loop
pop
sahf
jl
inc
xor
dec
aad
cmpb
div
fsub
push
inc
xchg
out
adc
lahf
dec
mov
into
scas
imull
pop
push
mov
popa
lahf
dec
aad
es
je
mov
push
push
jno
mov
lret
das
push
cmp
xor
xchg
dec
fstpt
add
popa
sub
addr16
adc
inc
pop
cli
mov
mov
into
movsbl
pop
movsl
mov
xchg
dec
add
lock
movsl
fidivrs
mov
ret
das
sbb
setp
xor
out
push
push
pop
push
jmp
xlat
pop
inc
repz
pop
fsubr
and
dec
adc
mov
std
pop
jp
push
xchg
shlb
arpl
sbb
dec
xchg
std
icebp
mov
rcll
jne
mov
mov
mov
enter
inc
mov
cld
push
push
add
jns
cmc
popf
outsl
cmpsb
js
loope
or
shll
lock
gs
xor
adc
add
xchg
addr16
jae
add
mov
je
negl
push
dec
lock
jbe
les
push
pop
loop
in
loope
outsb
call
sbb
cmp
out
cmp
das
testb
lock
jg
pop
add
sbb
cmp
xchg
fs
sarl
hlt
adc
out
inc
shrl
scas
fcmovnu
adc
test
mov
mov
cli
repnz
pop
gs
mov
mov
movsb
das
outsb
or
push
psrld
divl
sahf
pop
cmc
or
adc
leave
cmp
in
in
mov
jmp
cmp
lcall
cmp
repz
daa
or
into
into
inc
xchg
sub
sbb
sub
dec
gs
xchg
mov
aam
loope
jecxz
aas
sbb
push
addr16
rolb
mov
inc
iret
aaa
inc
mov
add
cmp
stc
xchg
inc
inc
sbb
testb
in
xlat
popf
in
hlt
das
sbb
xchg
cwtl
fnstcw
sub
lods
sbb
dec
xlat
push
sub
lahf
mov
cmpb
testb
xor
rep
outsb
push
pop
aaa
lcall
mov
add
push
lods
imul
push
data16
xchg
pop
fistpll
clc
pop
scas
xchg
fcmovnbe
cmp
data16
pop
mov
test
cmp
imul
push
mull
cmc
das
sti
jg
sbb
test
ljmp
xlat
sbb
cmpsb
ss
jne
clc
outsl
add
or
psrlw
loope
jno
pop
outsl
sub
popa
lea
lods
inc
add
push
scas
ret
and
pusha
dec
fptan
test
int
inc
push
cmpsb
loop
adc
in
sti
out
mov
dec
mov
loopne
js
xchg
mov
sbb
push
fistps
hlt
je
outsb
xor
xchg
dec
aaa
enter
and
inc
aam
enter
mov
sub
jmp
icebp
andl
fimuls
inc
dec
lods
int3
repz
dec
cmpsl
inc
test
movsl
pop
bswap
scas
in
or
lahf
push
push
dec
mov
fsubrl
cs
jno
push
ja
cs
and
roll
mov
loop
push
jns
aam
pushf
mov
xchg
insl
in
xor
mov
cmp
mov
stos
inc
lret
mov
pop
add
dec
mov
loopne
lods
push
lods
fbld
out
pop
pop
add
sub
cmpsb
insb
loop
inc
cmp
stc
dec
ds
repnz
lahf
sbb
pop
in
jge
mov
push
xlat
sub
jae
sti
aaa
aad
dec
in
adc
daa
jmp
pop
mov
arpl
aaa
test
or
subl
addl
jg
sbb
bound
dec
imul
dec
and
mov
xchg
sbb
mov
sub
add
addr16
jno
inc
test
xchg
xchg
mov
sbb
sbb
fisubrs
push
mov
push
outsb
xor
fsubs
jg
movsl
stc
iret
push
imul
bound
loopne
mov
push
addr16
cltd
add
mov
out
jl
push
mov
xchg
cmp
mov
out
lea
rcrl
bound
inc
mov
pop
jno
pop
mov
inc
inc
call
add
ss
add
ja
imul
sahf
jl
dec
cmpsb
inc
sub
aas
out
or
in
inc
aaa
mov
sub
inc
stos
and
dec
xchg
jb
cltd
repz
lds
mov
loope
dec
mov
in
ret
jnp
out
ret
xchg
mov
cmp
jl
adc
and
cld
add
adcb
sbb
mov
xchg
lahf
push
lods
les
outsb
xchg
aaa
bts
std
out
jg
inc
js
and
ficompl
stc
lcall
sbb
cmp
xchg
sar
fbld
mov
shr
mov
andl
mov
sub
orl
test
ss
sbb
or
lcall
xchg
mov
subl
push
xorb
push
push
scas
cmp
iret
xchg
test
inc
sub
pushf
mov
push
and
xchg
push
sbb
faddl
in
ret
xchg
xlat
jge
rcrb
xchg
cli
jmp
sbb
adc
test
jp
jg
popa
nop
mov
mov
dec
test
std
xchg
int3
sahf
sub
dec
mov
inc
ja
jbe
insl
xchg
jmp
xchg
jae
jns
pop
mov
xchg
pop
mov
xlat
xor
scas
add
pop
push
mov
mov
push
out
andl
add
ja
mov
and
push
dec
pop
in
popa
movsl
aas
jbe
adc
adc
ja
cld
cmp
out
lret
jmp
lret
pop
sbb
dec
inc
add
push
testb
mov
scas
mov
jns
push
daa
push
pushf
fldenv
int
mov
mov
sub
xchg
inc
into
xlat
in
push
into
cmp
scas
sbb
mov
cmp
inc
test
jp
inc
sbb
or
clc
jl
or
shll
push
outsl
stc
idivl
cmp
add
pop
add
cld
mov
outsl
dec
xchg
push
mov
xor
cli
sahf
pushf
aaa
jo
ss
ljmp
push
inc
mov
xor
mov
jo
xor
in
mov
adcl
mov
pop
movsb
sub
ja
sub
pop
out
mov
xor
icebp
inc
mov
dec
add
jb
mov
cs
xor
aaa
mov
jmp
mov
insb
or
push
outsl
push
test
mov
pop
fimuls
cmp
mov
in
pusha
jae
ss
test
call
out
adc
lret
xor
jl
mov
ja
sub
cmpsb
sub
jbe
xchg
sbb
dec
and
mov
subb
xor
push
adc
mov
pop
scas
dec
dec
sbb
sub
sbb
push
lods
jecxz
mov
push
cmp
add
pop
std
mov
sbb
mov
aad
cmpb
or
inc
mov
cmp
movsl
or
out
icebp
mov
std
push
loop
jle
sub
inc
push
jmp
daa
xchg
add
pushf
dec
mov
jmp
or
inc
xor
mov
cmp
jb
pop
mov
jbe
test
add
pop
sub
mov
add
pushf
mov
jbe
dec
imul
pop
stos
jo
and
sbb
loopne
hlt
andb
das
dec
jle
mov
mov
xchg
mov
xchg
xor
jp
or
int3
or
jno
jae
adc
pop
pop
dec
mov
or
fs
mov
pop
mov
mov
repnz
add
jbe
movsl
sub
add
inc
add
push
mov
sbb
cwtl
dec
pop
lcall
loopne
hlt
nop
xor
and
pop
fnsave
mov
or
pop
xor
xor
pop
rcll
mov
stos
sub
add
xor
call
dec
adcl
bnd
das
div
cld
aas
pop
sub
daa
out
jmp
jno
jne
mov
cld
lods
jbe
sti
sub
sub
notb
mov
data16
aam
sub
pop
dec
mov
aas
xchg
cld
pop
pop
sti
popf
mov
sbb
mov
mov
out
inc
pop
aas
or
or
push
sub
or
or
mov
fldenv
cmc
orl
sbb
mov
push
inc
subl
rolb
mov
xor
test
movsl
sub
faddl
gs
std
push
int3
pop
cmp
or
testl
subb
xchg
fildll
jecxz
cli
ss
cli
scas
scas
push
setg
popf
xchg
adcl
mov
push
or
fldenv
es
or
lods
cli
lods
movsl
addr16
and
aam
dec
stos
lea
ja
mov
mov
jle
enter
sub
adc
int3
xchg
movb
fcmovnb
xchg
lds
lcall
insl
mov
add
cmc
pop
push
and
lock
push
push
aaa
sub
mov
mov
out
in
fldcw
push
rolb
or
xchg
scas
sbb
ret
loopne
pop
dec
les
jne
fidivrl
or
das
loope
jmp
sub
cmp
in
addr16
sbb
add
jnp
pop
enter
xchg
out
lock
sbb
in
inc
inc
es
test
rolb
pop
adcb
and
inc
and
cmc
sbb
jb
dec
mov
cmova
out
stos
mov
test
adcb
dec
and
mov
je
cmp
sub
es
mov
lods
push
sbb
stc
or
mov
and
jbe
pop
xchg
test
and
mov
sbb
cli
add
pop
cmpl
sbb
xchg
lahf
push
mov
adcb
push
adc
decb
adc
flds
in
push
push
lods
jb
push
icebp
and
into
inc
cltd
inc
jl
mov
sbb
pop
cmp
data16
dec
xchg
dec
xor
adc
cmc
clc
mov
mov
jae
xorl
fwait
das
mov
jmp
mov
add
adc
or
loopne
cmp
xor
mov
pushf
lds
out
sbb
xchg
adc
pop
or
inc
lahf
pop
xchg
push
mov
mov
pop
dec
iret
pop
mov
add
add
xchg
hlt
ret
mov
jne
jge
push
ret
or
fbld
pop
inc
es
icebp
pushf
cmp
mov
xchg
sbb
out
mov
aam
mov
inc
in
push
pop
stc
cltd
in
arpl
jge
mov
cmpsl
call
js
cmp
cli
imul
inc
nop
jl
mov
pop
pop
mov
cmc
je
mov
sbb
popf
mov
cltd
mov
sbb
iret
mov
cmp
jb
mov
out
arpl
sub
je
aam
inc
push
mov
insb
jne
gs
hlt
xor
fsub
push
adc
lcall
and
leave
adc
es
push
shrb
cmp
mov
lcallw
loop
sub
xor
test
jns
pop
jmp
lock
jl
jp
sub
mov
arpl
pop
js
in
mov
andb
xor
nop
cld
fldcw
out
loopew
inc
pop
lea
subb
cmp
cmpsb
fwait
ret
inc
ljmp
gs
inc
or
fmull
sub
xchg
mov
js
jle
mov
hlt
adc
lahf
xor
jbe
add
shrb
lods
mov
stos
adcb
jmp
shr
inc
jge
mov
add
enter
aam
push
mov
mov
xchg
pop
ljmp
jnp
inc
test
fdiv
sbb
add
call
cmpsl
pop
nop
popa
daa
rcrb
rclb
clc
add
xor
aas
adc
mov
mov
lods
sbb
cli
and
or
jp
mov
aaa
xchg
leave
xchg
es
inc
lea
sar
in
bound
inc
popa
push
enter
outsl
push
cmp
mov
cmp
mov
imul
mov
pop
mov
sar
add
jno
in
mov
jno
fmulp
adc
imul
gs
sbb
movsl
sbb
scas
mov
push
mov
into
icebp
std
add
sbb
jnp
popf
sbb
and
jne
popa
sbb
fwait
push
mov
xchg
mov
cli
cmpsl
repnz
xor
into
sub
adc
test
imul
out
mov
jp
aad
dec
mov
xchg
cmp
adc
shll
adc
das
fwait
insl
je
dec
imul
mov
int
packsswb
mov
xlat
out
pop
hlt
popl
sti
mov
shrl
add
lret
jecxz
arpl
imul
mov
jo
and
add
sbb
mov
dec
push
clc
imul
mov
hlt
ror
rorl
xchg
adc
hlt
xchg
lcall
cld
ss
jmp
sbb
dec
outsb
pop
inc
and
cmpsb
xchg
pop
ljmp
and
xor
fwait
ret
dec
fs
mov
xchg
inc
adcb
out
push
repnz
inc
jbe
push
cmpsl
out
mov
les
add
pop
fsubl
push
sbb
je
dec
and
mov
dec
aam
out
jnp
pop
js
and
test
xchg
ret
repz
lods
dec
insl
sbb
and
mov
push
mov
lock
fsubrp
jno
cmc
xlat
jp
cmc
das
or
xchg
mov
mov
dec
ret
mov
hlt
jo
sbb
cmp
xchg
test
stos
add
dec
xchg
add
je
js
fs
jge
and
sbb
mov
inc
js
adc
sub
outsb
push
jne
bound
cmp
jg
and
sub
outsb
mov
pop
repnz
pushf
jmp
lret
cltd
sub
shlb
ds
scas
in
xor
push
leave
bound
dec
jns
jns
cmc
adc
jns
outsb
pop
rcrb
les
insl
addb
push
rclb
jecxz
in
cld
push
and
and
adc
mov
push
cmp
push
mov
sub
clc
clc
addl
out
mov
pop
pop
cmp
and
xchg
rclb
les
leave
xor
push
clc
mov
in
in
repz
sbb
clc
push
js
fdivrl
dec
test
mov
ret
xor
je
lahf
es
sub
mov
jns
outsl
pop
fs
pop
outsb
jb
outsl
inc
scas
inc
enter
std
std
lcall
mov
mov
aam
jp
xlat
test
dec
ror
mov
arpl
mov
mov
mov
orb
cmp
das
push
lahf
adcb
aaa
jbe
les
xor
nop
repz
or
sub
movsl
fiaddl
xor
xor
or
xor
mov
les
jge
or
ss
mov
xchg
mov
xor
xor
push
jg
xlat
fwait
repnz
gs
cmpsl
mov
outsb
mov
xchg
lods
imul
sub
xchg
jp
ljmp
out
aam
mov
lret
xchg
pop
xchg
aas
out
mov
cmpsl
jo
loopne
gs
out
add
add
dec
sarl
jbe
movb
inc
pop
gs
es
mov
add
adc
cmpsb
push
lea
lds
pop
pop
cltd
cmp
in
or
mov
sahf
lock
cmp
insl
pop
mov
or
roll
push
sbb
test
dec
jno
shll
and
push
lods
fidivrs
push
jbe
cmpsl
cli
xchg
ret
mov
mov
scas
sbb
out
add
pop
aam
es
call
int3
bound
lea
mov
cli
mov
cmpsl
in
push
fmull
shrl
push
int3
sub
jecxz
aas
mov
cmp
pushf
call
outsl
roll
sbb
and
adc
aas
jle
sahf
shrl
inc
mov
add
arpl
push
mov
xor
imul
pop
into
nop
movsl
clc
sub
test
lcall
fs
shll
xor
push
adc
pop
outsb
out
dec
push
cmp
sbb
outsl
jbe
outsl
adc
or
scas
add
data16
jo
adc
stos
sub
or
xor
xchg
xchg
shll
or
sbb
push
sbb
leave
pop
xor
xchg
push
mov
sbb
jbe
cs
and
aaa
xor
push
xor
cli
cmp
into
mov
aaa
sar
pop
jge
mov
push
push
outsb
popa
cmp
mov
inc
and
rolb
in
out
incb
insl
data16
or
test
adc
inc
insl
popw
nopl
movsb
bound
push
mov
sahf
sar
or
fucomp
es
push
jb
sbb
sbb
mov
clc
ror
lock
call
sbb
ljmp
addb
movsb
and
mov
movsl
ljmp
dec
outsb
imul
jp
test
insl
lret
jae
stos
int3
call
mov
aaa
mov
dec
mov
scas
pop
sub
push
stos
lahf
push
mov
pop
push
movsl
call
adc
xchg
cmp
pop
fists
test
cmp
mov
pop
cmc
lock
clc
int3
xor
fisubrs
sbb
jl
pop
mov
scas
ss
dec
pop
push
xor
lcall
ret
cmp
daa
fwait
stos
or
daa
decb
mov
test
sbb
cmc
adc
add
mov
jge
adcl
push
pop
lret
call
or
je
js
dec
pop
fimuls
cmp
add
fmulp
dec
sub
jmp
dec
push
lods
jb
cmp
add
imul
fsubrl
insl
lahf
mov
ret
xchg
dec
pop
fsubp
fcomp
movsb
ret
or
in
pushl
scas
sahf
leave
ret
test
dec
xor
lock
lods
xor
loop
xor
mov
in
fwait
mov
fsubrl
xchg
cmp
and
stc
mov
insb
frstor
sarl
push
out
mov
mov
lcall
nopl
push
out
cs
cmp
xor
adc
mov
lods
lcall
pop
cmp
cmp
pop
in
sub
int3
cmpsl
es
cld
adc
inc
leave
in
jns
or
shl
jns
iret
ljmp
popf
mov
fistl
xchg
int3
xchg
test
add
mov
sahf
into
jo
adc
pop
xor
loopne
sbb
faddl
jg
nop
jns
xor
mov
in
in
or
sub
dec
push
jle
insb
test
adc
sbb
pop
outsl
int3
mov
add
jmp
subl
stos
dec
movsb
insl
int3
push
mov
shrb
sbb
mov
mov
pop
xor
les
aas
lods
adc
test
mov
int
mov
cmp
ret
cmp
lahf
lods
pop
mov
or
loopne
or
cmc
lcall
inc
inc
xor
ja
mov
pop
push
lret
cmp
push
pop
orb
or
cmp
inc
mov
xchg
jno
add
mov
pop
jb
call
mov
loop
cltd
sub
lods
in
sbb
mov
jg
cs
loopne
or
clc
scas
jo
sarl
and
mov
push
loope
lcall
mov
lods
out
mov
lds
cmp
movsb
mov
std
dec
mov
dec
push
rcrb
outsb
test
pop
aaa
cs
xor
arpl
mov
dec
inc
mov
sub
xor
aas
jl
lods
repnz
adcl
mov
xchg
pop
xor
into
add
mov
jg
clc
xchg
sahf
pop
xchg
mov
subb
jp
or
pop
push
std
cld
xor
inc
jno
cli
mov
jmp
sbb
sahf
push
adc
pop
jge
mov
dec
inc
sbb
outsb
sbb
test
fsubrl
aas
mov
js
out
or
pop
fistpl
fs
test
popf
pop
inc
sbb
mov
testb
insb
xor
gs
jns
cmp
je
js
jbe
pop
icebp
dec
dec
fmuls
std
cmp
inc
mov
or
xchg
sub
hlt
int
inc
push
adc
inc
mov
inc
mov
das
adc
ljmp
and
jno
enter
mov
fcom
call
cltd
test
out
ror
pop
fbstp
sti
mov
clc
or
insl
dec
or
cmp
mov
xor
xor
insl
jb
mov
mov
mov
stos
sarl
mov
adc
rorb
push
movsb
dec
outsl
jae
ficoms
decb
add
xor
testb
sub
fidivrl
mov
ds
xchg
into
mov
cmpb
scas
imul
ds
test
ljmp
orb
lahf
dec
cs
sub
popf
pop
shrb
mov
fwait
int
adc
fildl
daa
push
icebp
test
mov
and
mov
xor
cltd
adc
add
mov
les
or
roll
movsb
repnz
cmp
shufps
xor
mov
mov
repnz
inc
in
enter
lea
outsb
in
or
push
popf
ss
mov
ficompl
pop
mov
and
cmp
gs
std
out
lea
push
mov
int3
outsb
loop
fdivr
pop
fdivr
adc
gs
std
mov
lock
xor
aas
repnz
test
ss
sbb
stc
cwtl
pop
out
dec
xchg
xchg
pop
mov
mov
iret
mov
jl
fwait
dec
scas
dec
daa
jecxz
or
gs
mov
jge
push
cmp
enter
xbegin
or
mov
dec
in
pop
xor
push
cmp
mov
jne
xor
cli
addr16
nop
lea
movsb
mov
aaa
mov
inc
sub
aas
enter
xor
push
or
outsl
cmpsb
dec
bound
adc
leave
sub
insb
jge
addr16
cmp
xor
xchg
idivb
out
jae
repnz
adc
in
test
pop
adc
mov
dec
mov
inc
insl
pusha
shll
aaa
adc
fwait
pop
ret
movsb
pushf
cltd
lods
xor
cmp
ljmp
jle
xchg
cmpsl
repnz
mov
repnz
fnsave
into
mov
das
cmp
mov
mov
cmpsb
adc
dec
filds
pop
lock
pusha
in
lret
and
scas
in
sbb
mov
std
cli
cmpb
sub
push
addr16
rorl
in
sbb
dec
sarl
pop
mov
mov
jle
je
movsl
and
call
jp
mov
dec
jo
pushf
roll
movsl
jae
mov
mov
inc
dec
xchg
je
or
inc
std
lea
add
pop
imul
in
sub
mov
cwtl
inc
mov
outsb
fucomp
iret
xor
sub
jne
enter
shlb
mov
loopne
insb
stc
sbb
push
movsl
out
test
dec
xchg
jg
add
mov
mov
mov
push
sahf
shll
std
inc
xchg
pop
icebp
or
sub
mov
pop
mov
mov
or
std
andb
rolb
loope
xor
adc
sub
mov
cmp
mov
clc
jecxz
and
cli
push
pop
std
sahf
call
lock
sbb
in
adc
sahf
and
mov
mov
mov
aaa
lea
pusha
mov
push
dec
jmp
js
and
xlat
cs
rcrl
loope
xchg
into
loope
or
js
adc
mov
idiv
mul
jl
sub
ljmp
push
incb
roll
test
and
jl
sub
add
bts
loop
jge
dec
aas
in
and
lcall
push
addr16
pop
in
cld
dec
mov
push
add
dec
or
add
das
cmp
test
xor
jl
and
cmp
adc
mov
dec
sbb
jle
xchg
cltd
push
insb
cmp
xor
into
faddl
inc
aas
pop
pop
inc
mov
ret
add
pop
jno
out
push
push
into
jg
pop
loopne
loop
jno
lahf
outsl
add
jecxz
scas
divb
fsubrl
sub
rcll
push
mov
call
popa
push
or
xlat
jb
shl
cltd
mull
inc
in
lahf
addb
lahf
sahf
dec
shlb
push
sub
and
adc
jnp
lahf
clc
scas
ljmp
lcall
xor
and
or
or
lods
dec
push
inc
adc
hlt
shrl
jae
push
cmp
inc
jg
mov
test
xchg
inc
xor
scas
pop
add
lcall
cmpl
and
pop
sub
mov
pop
movsb
aad
neg
mov
mov
fisubl
imul
fistpll
ja
mov
daa
outsb
mov
bound
lds
mov
enter
insl
rolb
sbb
push
xor
cmp
jmp
fwait
ja
movd
popa
and
stos
push
js
xor
outsl
sub
sub
and
pop
dec
fwait
pop
or
int
xchg
and
faddl
rorb
in
mov
cwtl
lahf
adc
pop
cmp
inc
adc
add
shrb
cs
movl
inc
mov
add
rcl
push
sub
push
or
jnp
xor
lret
mov
adc
mul
pop
fmul
xchg
mov
push
xchg
insb
xchg
mov
xor
pusha
adc
jb
and
inc
stos
iret
mov
orb
pop
mov
sbb
scas
mov
stos
or
xchg
push
jg
push
lret
lahf
push
sub
leave
loop
fildl
pop
xchg
and
out
popa
std
adc
or
inc
mov
pop
ret
in
rcll
inc
js
jl
jle
pop
inc
xor
adc
iret
lret
cmp
inc
push
push
pushf
cmc
loope
imul
idivl
xchg
adc
inc
cwtl
jns
movsb
adc
frstor
adc
sbb
cmp
and
sub
or
stc
data16
psllw
mov
add
ds
and
jmp
jl
sahf
jb
call
test
mov
jb
adc
pop
pop
jl,pn
xchg
add
sub
ficoms
xchg
xor
repz
cld
xchg
push
xor
into
imul
in
mov
push
addr16
xchg
call
mov
jl
push
sti
daa
mov
imul
aas
add
mov
out
repz
mov
bound
cmpb
xchg
shlb
imul
ja
test
lods
or
mov
mov
aas
pop
xchg
push
aaa
bound
xor
lret
jne
mov
pop
xchg
repz
mov
xor
negb
test
sub
jp
jne
push
test
fdivrl
mov
nop
out
shlb
sar
inc
sub
lcall
iret
dec
dec
cmc
sbb
xchg
jecxz
lock
mov
addb
push
dec
cltd
pop
xchg
xor
ret
mov
addl
sbb
adc
pusha
ret
push
shrb
insb
jb
and
add
daa
stos
lock
ss
loope
and
or
or
jl
iret
push
out
loop
imul
add
out
inc
mov
fs
xchg
je
subb
shll
jno
or
mov
outsb
mov
inc
adc
mov
imul
mov
adc
loop
jecxz
shll
pop
outsl
dec
insl
inc
sbb
pop
pop
bound
inc
pop
test
mov
aad
dec
sbb
jb
out
ficompl
int3
mov
rcll
and
sbb
jecxz
or
pop
sbb
out
pop
stos
pop
jecxz
mov
add
das
mov
adc
mov
mov
hlt
and
inc
mov
lea
sbb
insl
movsl
jae
mov
jl
es
mov
sahf
cmp
lret
xor
add
rclb
xor
lds
loop
ret
mov
jo
ret
cwtl
adc
ret
sbb
sub
adc
push
or
int3
mov
sub
loopne
insl
mov
pop
out
push
test
xor
inc
test
mov
fs
lahf
fmul
rcr
mov
xchg
mov
push
sub
shll
ret
popa
scas
cs
jb
jp
pop
push
push
push
mov
insb
lea
add
jno
adc
pop
dec
adc
jb
orb
xor
push
imul
inc
vcvtpd2ps
int3
test
loopne
jnp
lods
addr16
mov
daa
cmc
xlat
and
jecxz
movb
mov
stos
mov
pop
fsubrs
jge
push
pop
adc
aas
cltd
xor
xor
hlt
xor
iret
pushf
push
movsb
fisubl
push
dec
cmpsb
ret
push
stc
push
imul
cli
bound
repnz
jmp
adc
push
out
lea
aad
movsb
xor
mov
cli
add
ljmp
mov
xor
hlt
mov
mov
ret
inc
adc
movsb
ljmp
mov
mov
xchg
int
lahf
movsb
xchg
mov
pop
ret
cmp
add
es
and
jp
stos
sbb
lahf
pop
dec
add
nop
and
call
enter
jecxz
fbstp
repnz
into
sbb
pop
stc
roll
loope
mov
dec
jl
lock
inc
movsl
push
xor
mov
push
mov
xor
push
push
sbb
jns
pop
cltd
pop
dec
xor
mov
lods
call
les
mov
adc
test
loope
ss
jns
aad
push
loope
and
lret
mov
xchg
add
into
pop
or
and
pop
lret
iret
pop
cmc
lea
inc
jae
outsl
mov
insl
dec
xchg
dec
decl
pop
popa
fnstenv
sub
sub
xchg
jae
out
mov
mov
int
push
out
xchg
mov
adc
test
mov
xchg
pushf
push
dec
or
hlt
pushf
loope
jne
or
dec
jne
adc
dec
pop
subb
xchg
mov
fisubs
icebp
shll
xchg
xchg
in
adc
and
mov
sbb
pop
xor
lret
aad
enter
lods
mov
int3
adc
sub
call
add
stc
test
push
or
xchg
mov
dec
cltd
cmp
add
je
cmovl
cld
pushf
push
inc
cmpsl
mov
in
add
jecxz
mov
pop
dec
out
cli
insb
mov
ret
orb
cwtl
mov
loop
loopne
into
or
iret
sub
cs
jmp
jg
xlat
fcoms
jp
and
mov
fs
inc
shll
cmpsb
insb
pop
cmp
into
xchg
inc
mov
in
mov
fnstenv
pop
shlb
adc
mov
push
xchg
xchg
sub
push
sti
jmp
cmp
lock
lahf
sub
push
add
leave
int
mov
aam
jns
dec
sub
cmp
sbb
out
mov
push
movsb
add
loop
outsb
push
popf
jno
bound
daa
mov
dec
fnstsw
mov
push
and
lods
pop
push
push
sub
insb
and
add
pop
sahf
loope
pop
imul
std
loope
pop
xor
inc
ss
outsl
mov
jle
dec
pop
sub
jbe
movsb
and
add
fstpl
inc
imul
stc
ja
pushf
les
test
repz
ret
push
xchg
addr16
cmc
dec
hlt
sti
pop
mov
push
cmp
push
mov
sahf
jmp
jmp
mov
xchg
ss
inc
cmpsl
cmpsb
adc
loop
lcall
les
rcll
out
out
sbb
lds
imul
jbe
jb
mov
in
xorl
popl
jmp
data16
or
stc
cs
rcrb
aas
aaa
shrl
int3
xchg
cmp
int3
jp
sub
push
inc
sub
clc
push
ds
mov
mov
adc
adc
xchg
dec
mov
mov
in
in
jge
and
inc
mov
mov
mov
pop
push
into
repnz
sti
gs
adc
push
adc
mov
mov
mov
add
jae
mov
xor
ss
shlb
jbe
sti
les
push
das
jecxz
jecxz
adc
lahf
jnp
ret
xor
lcall
dec
fists
xchg
or
clc
roll
mov
and
loopne
in
imul
outsl
imul
aad
dec
add
cmpsb
add
daa
cmc
add
outsb
rcrb
inc
adc
add
mov
test
xor
pop
xor
xchg
push
mov
add
and
add
je
iret
cmp
pop
jp
test
pop
xchg
and
push
sub
jns
cld
mov
lea
jb
sub
or
mov
xor
mov
out
sub
adc
iret
mov
jl
adc
in
push
sarb
imul
adc
dec
jo
scas
cmp
aad
test
jmp
popa
mov
lods
insl
in
xor
bound
dec
mov
dec
rorb
mov
mov
or
imul
rolb
sbb
inc
adc
mov
fcoms
lea
jo
sbb
cmp
jecxz
rorb
adc
add
shrb
pop
mov
xor
lret
push
mov
mov
in
or
jg
inc
mov
lock
cltd
lret
xor
xchg
sub
in
xchg
add
das
push
sbb
aaa
lods
pop
sub
pushf
rcll
adc
pop
lods
scas
sub
nop
mov
loope
xorb
inc
sbb
xchg
je
jl
mov
in
xchg
inc
je
or
and
jno
data16
jmp
cwtl
iret
js
test
incb
test
mov
xor
or
ret
ds
pop
clc
or
and
xchg
out
jno
dec
outsb
xchg
icebp
movsb
ret
xchg
arpl
int3
shlb
aaa
add
insl
fwait
add
in
rclb
mov
dec
bnd
jg
mov
loopne
rorb
jp
rorb
pop
sarb
loop
mov
out
hlt
insb
push
mov
push
jecxz
sub
sbb
pop
add
sbb
xor
rorl
push
jae
lret
cmp
mov
adc
push
jb
cs
inc
out
and
mov
cmp
mov
mov
pusha
out
fisttpl
std
andb
mov
lcall
pop
xlat
dec
stc
xchg
adc
mov
add
incl
mov
and
xchg
pop
adc
lret
aad
int3
scas
jnp
daa
pop
mov
xchg
dec
add
idivb
iret
or
mov
jmp
sub
sbb
mov
cmp
call
jb
push
dec
push
outsb
int3
daa
pop
adc
add
pop
mov
inc
imul
ds
lea
pop
add
mov
pushf
cld
scas
fbstp
pop
lahf
in
js
shrl
jge
push
fisttpl
push
inc
jbe
stc
movsl
dec
xchg
fstpl
sar
mov
mov
pop
aaa
jbe
dec
push
idivb
and
or
js
xchg
sbb
jns
jns
mov
subl
in
add
ljmp
cmp
push
imul
and
sbb
pop
mov
fs
aaa
daa
jo
fwait
adc
push
jne
imul
shl
xor
push
in
rcll
mov
les
addr16
int3
xor
shl
ret
hlt
scas
dec
mov
sbbl
mov
mov
add
sub
stos
lods
ss
sbb
shlb
out
xchg
and
loop
mov
out
sti
shl
xchg
subl
ja
cmpsb
sub
pop
jmp
mov
scas
int
test
ss
insl
cmpsb
and
clc
daa
push
rclb
mov
cs
mov
fdiv
and
lods
mov
mov
mov
stos
adc
sub
lods
lock
jno
adc
xor
test
out
push
jne
mov
pusha
ljmp
xchg
jb
call
inc
cmpsb
lahf
adc
push
adc
movsl
mov
push
orb
shl
push
push
out
xchg
loope
adc
sub
and
xor
gs
inc
iret
mov
push
sub
jmp
and
add
cltd
es
out
scas
sub
mov
dec
mov
cld
add
rcrl
repnz
mov
les
and
push
mov
iret
xchg
dec
push
xchg
or
push
dec
shll
in
push
subb
and
push
in
out
lret
mov
iret
inc
push
lahf
jmp
push
nop
or
jp
xlat
scas
jecxz
fwait
nop
movsl
mov
jmp
loope
inc
jl
movb
enter
out
sub
jge
xchg
xchg
sbb
icebp
push
mov
add
roll
mov
sbb
or
orl
mov
clc
clc
jg
push
xor
jl
ja
je
and
inc
shrl
lods
movsb
cltd
pop
cwtl
mov
sahf
rorb
adc
push
cmp
aam
xacquire
jbe
nop
jae
cs
icebp
cli
mov
or
les
sub
scas
loopne
int3
in
addr16
cmpsb
xchg
shl
ds
ss
mov
cli
xor
std
aam
mov
ret
jb
xor
xor
cltd
push
repz
mov
insl
stos
xor
bound
dec
mov
cmp
xchg
push
and
sbb
push
xor
jno
xchg
pop
push
xor
push
clc
or
xchg
jp
std
leave
add
push
cmc
xchg
jg
pop
cmp
push
hlt
push
mov
aas
inc
das
popf
sbb
jmp
jp
mov
sbb
jge
mov
outsl
je
cli
inc
outsl
add
gs
sub
inc
sub
aaa
lock
xchg
dec
mov
mov
cmp
push
out
xor
out
jae
and
loope
sub
or
out
push
addb
pop
dec
mov
cmpsb
insl
jl
lds
xchg
dec
stos
scas
or
outsl
out
fldt
ret
popa
dec
sub
lock
mov
pushf
xor
sub
push
pop
js
mov
test
pop
xor
push
push
mov
int3
ret
addl
test
jge
adc
xchg
lahf
enter
mov
inc
sub
bound
sahf
or
push
icebp
in
adcl
push
and
adc
mov
jp
mov
call
mov
out
jnp
push
lahf
inc
mov
xor
add
ljmp
int3
outsl
shl
mov
rcr
xchg
jecxz
or
xor
enter
or
adc
stos
cmp
lahf
jp
enter
jne
incb
xor
leave
stos
mov
addb
pop
mov
or
fs
dec
leave
xchg
mov
ret
xchg
push
pop
mov
mov
sbb
gs
aam
and
repnz
inc
push
push
and
sub
push
pop
xor
jnp
mov
push
jecxz
adc
sub
sti
rcr
mov
xor
data16
push
inc
mov
ret
adc
clc
enter
sbb
sbbl
loopne
leave
cmp
xlat
lods
in
dec
sub
test
rclb
lea
repnz
outsb
cmp
ja
push
and
and
cwtl
bound
cmp
int3
dec
int
mov
cmp
imul
jge
mov
fs
mov
mov
mov
call
add
xchg
mov
sub
sbb
ss
add
outsb
int
rorl
inc
mov
loope
ret
jg
aad
cmp
in
cli
cmp
mov
pop
in
shll
cli
int3
push
cmpsl
addr16
add
loope
cli
inc
fimull
push
aas
mov
inc
insb
dec
or
jo
sahf
inc
add
pop
xchg
pushf
cmp
cmp
aad
dec
dec
int3
nop
mov
test
daa
inc
adc
aam
ds
js
xorl
adc
or
stc
jge
lods
mov
jno
and
cs
pop
lods
sahf
movsl
or
in
push
insl
sbb
sahf
popf
mov
test
mov
sbbl
cmpb
ds
push
cmpsb
jp
fwait
nop
inc
xchg
pop
mulb
fnstsw
testb
xchg
or
jp
jne
outsl
mov
inc
dec
gs
popa
pop
mov
dec
loop
mov
popf
outsl
stos
dec
mov
test
mov
and
pop
add
popa
shl
mov
sbb
push
insl
jne
mov
add
ficompl
sbb
aad
mov
out
dec
js
xor
jns
and
orl
or
add
push
test
xor
add
je
and
xor
leave
and
pop
add
inc
pop
mov
dec
sbb
out
dec
dec
jle
xor
inc
jg
jp
sbb
ja
pop
mov
cmp
pusha
jmp
push
mov
inc
jae
xor
pop
dec
lods
xchg
and
add
add
add
mov
adc
aas
jle,pn
inc
cmp
js
push
lods
int
and
stos
fsubrs
mov
cmpsb
xchg
sbb
ffreep
shlb
shlb
lods
xor
fcmovu
scas
rorl
idiv
fstl
inc
pusha
sbb
dec
inc
out
mov
insl
add
sub
ret
sub
inc
mov
sbb
icebp
or
mov
mov
js
and
xor
jb
mov
scas
cwtl
int
fimuls
inc
xchg
or
mov
sub
in
xchg
push
lret
jge
shll
adc
arpl
fcmovb
fisubrs
xor
cmp
stos
stc
es
adc
adc
nop
jmp
xor
les
inc
frstor
repnz
insertq
jns
into
ds
imul
cmpsl
in
xchg
or
out
stos
dec
and
fiaddl
jne
inc
jns
aam
mov
add
or
adc
push
mov
fisttpll
les
push
fsub
add
test
mov
inc
data16
inc
in
mov
mov
fldl
sbb
xchg
xor
inc
data16
faddp
dec
js
mov
pop
pop
pop
pop
pop
mov
sarb
insb
xchg
in
inc
rcll
push
sub
adc
popf
mov
mul
or
cmpsl
push
cld
shlb
mov
xchg
cs
lret
mov
ss
mov
pop
mov
addr16
aam
sar
lahf
pop
xor
lea
inc
push
es
jns
outsl
push
push
mov
ja
addr16
sbb
inc
xor
in
movsb
jge
fisttpll
jge
sar
pushf
rorl
pop
sbb
ja
fsubrl
xchg
cmp
inc
push
dec
out
addr16
pop
data16
stc
inc
sbb
sbb
mov
mov
pop
fnstsw
mov
mov
xchg
push
scas
jg
mov
enter
jnp
dec
xchg
leave
lret
bound
mov
nop
popa
mov
pop
mov
jnp
add
pop
push
imul
xor
scas
int
fisubrs
insb
test
dec
lods
hlt
sarb
pop
or
jns
mov
lods
inc
dec
orb
jle
mov
jnp
adc
fimuls
mov
jle
mov
push
inc
inc
fwait
into
and
les
loopne
mov
sub
inc
iret
and
cmc
lea
lds
stos
cmp
inc
xchg
xchg
call
imul
dec
mov
jecxz
repnz
pushw
repz
pop
stos
mov
jns
xchg
icebp
xchg
push
mov
dec
mov
loope
fdivrs
mov
lds
push
daa
outsl
repz
mov
cmpsl
mov
es
sub
and
iret
fstps
dec
insl
dec
mov
sbb
sarl
pop
push
inc
cwtl
and
adc
les
aad
fdivl
jne
std
push
adc
js
andl
dec
popf
jmp
and
cwtl
iret
add
mov
adc
mov
mov
out
mov
push
push
push
hlt
cmc
fs
daa
jo
jb
loop
pop
cs
sbb
mov
pop
stos
add
rolb
push
cmp
pusha
incl
ret
or
pop
jbe
loope
pop
test
mov
and
xor
xor
cld
jecxz
test
add
pop
add
daa
mov
mov
ret
adc
adc
mov
pop
imulb
rcrb
sub
push
jno
cmpsl
fsubrs
add
stos
inc
dec
test
jmp
clc
pop
mov
push
pop
fcomps
mov
inc
sbb
add
push
cmp
add
mov
sub
mov
dec
iret
or
sbbl
adc
push
imul
aam
stos
sbb
push
aam
fs
jle
push
xor
xor
pop
mov
xor
push
and
adc
lcall
pop
pop
call
es
nop
imul
stos
xor
mov
gs
dec
out
js
loopne
cmp
sub
fcoml
jo
popf
cli
jmp
push
imul
xchg
in
es
adcb
je
pop
dec
push
pushf
and
cmp
outsb
ds
inc
cmc
lea
push
subl
rcrl
dec
mov
negb
jo
test
arpl
and
les
cmp
jb
fdivl
inc
push
jae
fsubrl
sbb
inc
xchg
rolb
cs
or
or
rcrl
add
stos
sbb
popa
mov
mov
inc
push
jle
xchg
test
es
jle
rcrb
push
xchg
andl
sub
mov
xor
scas
ds
jg
insl
cmp
push
repz
xchg
imul
xchg
jp
xor
push
jg
mov
enter
cmpsb
enter
cs
sub
xor
fistl
leave
cmp
loop
popa
jae
mov
cmp
or
add
mov
test
sbb
cmp
inc
jnp
idivb
in
pop
fnstcw
add
jnp
loop
cmpsb
fcompl
mov
mov
dec
sbb
xchg
ljmp
lds
mov
sbb
or
dec
cmp
add
inc
cli
push
lods
aaa
lcall
or
jecxz
sbb
cmp
stc
or
dec
out
repnz
xchg
mov
pop
pop
ret
mov
test
xchg
aaa
inc
mov
sbb
out
cld
adc
les
inc
add
xor
jne
pop
mov
inc
das
in
dec
sub
jg
lcall
mov
mov
add
xor
cld
stos
cmp
push
sub
xchg
stos
or
lret
jecxz
jb
iret
std
xor
dec
pop
hlt
cmp
je
ja
and
pusha
call
mov
or
dec
add
mov
iret
push
imul
sti
sub
xchg
adc
mov
pop
test
in
sub
jp,pn
jmp
mov
je
or
movsl
out
loopne
or
loopne
clc
imul
int
loopne
insb
push
mov
or
movsl
je
xchg
xor
cmp
fldenv
xchg
push
xchg
fwait
dec
popa
std
loop
scas
bound
out
decb
jbe
jbe
in
push
cmp
stos
push
lcall
xchg
ret
cmp
pop
unpcklps
jae
push
fmulp
and
xor
push
jecxz
xchg
add
xchg
xor
mov
ss
imul
leave
sub
push
fsubrs
js
xlat
cmp
inc
mov
pusha
cwtl
cmp
into
movsl
shl
pop
into
insb
imul
sub
cmp
dec
pop
or
add
mov
or
sbb
jb
push
cmpl
and
fmul
push
lret
test
and
loopne
movsb
insb
mov
sbb
lret
jmp
xchg
sub
outsl
mov
sub
clc
jmp
clc
xchg
inc
loope
leave
daa
sarl
daa
cltd
pop
adc
jns
ljmp
addr16
lods
mov
xchg
pop
add
pop
xor
dec
pop
andb
nop
pop
or
decb
push
sbb
xchg
aaa
ret
add
cmp
outsl
xor
mov
or
scas
fs
movsl
lods
scas
mov
out
and
in
xchg
stc
out
add
mov
insb
sti
sub
aas
ret
jle
aad
cmp
xchg
out
or
cs
push
cld
sub
add
push
sahf
jecxz
cld
dec
inc
lret
push
xchg
sbb
les
decl
mov
inc
das
sbb
imul
test
lock
jle
push
jge
add
aam
push
mov
aaa
sub
and
stc
fsubl
mov
xchg
fisttpll
bound
adc
jne
jl
mov
xchg
mull
fisubs
sbb
pop
jle
add
mov
cmp
test
into
jno
adc
lcall
mov
enter
in
sub
mov
adc
out
pop
sub
inc
mov
mov
push
idiv
mov
xlat
and
xchg
cmp
lcall
das
sti
add
push
jns
fs
inc
push
loope
and
mov
insl
outsb
add
dec
aad
jg
cmp
mov
mov
cmp
nop
imul
jae
pop
sbb
mov
mov
jb
sub
test
jbe
or
fwait
mov
add
lcall
jg,pt
add
ljmp
sub
pop
stos
test
ret
cld
dec
push
jle
imulb
nop
scas
rcll
shrl
mov
sbb
jge
inc
sub
or
cs
sti
ret
mov
cs
mov
dec
inc
and
scas
test
lds
sti
push
push
subl
data16
pusha
jne
mov
je
test
mov
decl
lcall
cmp
push
popf
mov
aam
and
xchg
outsl
stc
outsb
je
mov
and
lcall
ljmp
pop
push
and
push
ja
aas
cltd
dec
pushf
loope
jecxz
leave
lahf
inc
cmp
pusha
inc
daa
aad
loope
shll
cmc
in
aas
jo
out
inc
jge
jl
pop
mov
into
xorb
or
mov
add
push
mov
dec
push
push
out
popa
push
test
xchg
mov
mov
fprem
pop
in
ret
add
xor
les
int3
pusha
and
and
mov
lock
pop
rorb
or
jns
sbb
mov
inc
cmp
roll
lret
sub
add
sub
xor
mov
and
inc
push
leave
ret
scas
add
jno
mov
cld
xlat
imul
addr16
xor
or
and
lock
je
or
dec
sbb
scas
push
iret
jge
lods
push
mov
cli
iret
loope
aaa
fs
mov
std
xor
lea
imul
in
fwait
stos
ficompl
sar
mov
sbb
or
data16
imul
fs
xor
repz
cli
ja
jmp
notb
jl
jne
std
sbb
mov
stc
jo
aam
stos
dec
lret
mov
and
add
int
inc
or
cld
cmpsb
push
sbb
lcall
or
add
mov
lcall
icebp
add
mov
add
iret
es
je,pt
jp
xchg
mov
movsl
ret
ds
or
or
add
test
jno
and
iret
adc
das
fs
mov
cmc
icebp
sub
sub
mov
aaa
xchg
ljmp
loope
mov
dec
xlat
bound
inc
inc
gs
inc
push
mov
lods
pop
bound
or
sub
shl
sub
je
data16
dec
jns
sub
sarb
pop
loopne
fwait
mov
mov
xabort
imul
lret
cmpsb
mov
jg
adc
insb
out
mov
rorb
cmpsl
mov
pop
mov
imul
push
stc
aaa
dec
loop
bound
pop
inc
xchg
inc
icebp
aaa
movsb
subb
pop
and
faddl
lret
imul
popa
stos
mov
add
fisubrs
out
sbb
cmp
mov
adc
xor
xchg
add
add
xchg
pop
mov
sbb
test
repnz
jbe
xchg
movsl
addb
sarl
jno
inc
enter
sbb
movsb
mov
lods
fstps
jle
cld
arpl
fisttpl
sbb
out
cmc
push
or
xchg
push
mov
in
mov
hlt
test
add
scas
sar
mov
ljmp
dec
je
xchg
and
lock
push
push
mov
xchg
sti
push
lds
data16
adc
jo
pop
cmp
cmp
sub
je
lock
mov
or
mov
in
jle
cmc
cmp
into
scas
push
mov
mov
dec
cmp
push
mov
cmpsl
cmp
mul
sbb
sbb
jle
lods
mov
inc
out
lock
and
adc
stos
ljmp
or
add
pop
add
std
cmpsl
aad
push
fidivs
stos
pop
into
mov
sub
aad
sbb
mov
sub
xchg
stos
stos
dec
arpl
in
xlat
lahf
ret
jno
out
mov
sti
xor
rorb
adc
fisubrl
leave
pop
or
movsl
inc
sti
insl
fisubrs
sub
int3
pop
cli
or
inc
scas
scas
jb
les
dec
call
push
push
adc
inc
js
mov
testl
pop
int
inc
adc
ret
mov
inc
add
cs
push
out
leave
xchg
pop
sub
xlat
mov
movsl
and
xor
ds
lock
cmp
and
stc
jae
cli
mov
mov
loope
push
je
ljmp
dec
dec
xor
je
dec
fwait
cltd
and
mov
mov
dec
repz
xchg
pop
sbb
push
push
dec
orb
testl
mov
divl
xchg
jnp
in
test
das
xchg
jmp
mov
popf
pushf
sahf
jecxz
cs
xchg
mov
mov
inc
jle
mov
dec
adc
fildl
cmpsb
and
jae
outsl
add
divl
sub
pop
les
inc
test
cltd
fcomi
jmp
sbb
mov
add
jne
cmp
sub
sbb
push
xor
sub
arpl
mov
pop
mov
push
xor
insl
int3
sbb
jno
cmp
mov
inc
or
or
add
imull
pop
add
sbbb
and
mov
cmp
or
arpl
xor
ja
ja
mov
insb
or
cmp
or
mov
call
in
loope
andl
xchg
mov
jge
fldt
sbb
xchg
shl
fnstcw
mov
pop
loope
mov
dec
inc
xchg
test
add
cs
sahf
dec
inc
iret
notb
sbb
ret
test
pop
cs
mov
aad
insl
les
xchg
cwtl
lods
sub
mov
adc
enter
into
dec
movsb
pop
hlt
mulb
ja
adc
scas
nop
cmp
add
mov
inc
pop
pop
cmpsl
bound
pop
movsl
scas
jne
sub
js
dec
mov
in
push
push
mov
push
push
sbb
lods
or
scas
sub
jb
or
xchg
and
movsl
mov
xchg
adc
cmp
lea
adc
notl
mov
dec
xchg
pusha
mov
pop
out
mov
ds
cmp
cld
dec
and
inc
int3
fsub
into
lods
mov
fisttpl
mov
and
sbb
mov
sarb
out
or
dec
push
jne
mov
pop
inc
enter
push
push
lds
sub
je
push
fs
cmpsb
insb
lock
mov
out
adc
mov
pop
mov
rolb
mov
pop
and
jbe
push
xchg
mov
and
ss
pushf
add
div
or
stc
negl
and
mov
push
ja
test
add
lds
insl
sahf
adc
aam
js
insb
movsl
test
push
xchg
push
add
sub
xor
xlat
iret
pop
or
add
adc
call
dec
ss
pop
sbb
rcll
xor
jge
fcomps
adc
push
hlt
sbb
frstor
mov
dec
aaa
in
mov
push
movsb
rcll
sbb
cmpsb
rol
test
call
in
decb
imul
xchg
mov
insl
add
cld
out
in
xchg
push
cmp
outsl
cmp
cli
jne
in
push
mov
iret
pslld
stos
out
icebp
pop
subl
and
cmc
sub
mov
sub
testb
insb
outsb
dec
mov
call
jle
jb
and
stos
xor
xor
dec
adc
das
inc
or
roll
icebp
xchg
mov
push
cmpsl
pop
aaa
inc
cmp
pop
xchg
cmp
loopne
add
mov
loope
daa
rclb
xchg
mov
or
idivb
sbb
idiv
dec
popa
in
std
into
fisubs
jmp
insl
mov
sub
and
xchg
cmpsb
cmp
fmull
iret
mov
bound
xor
cmp
leave
insl
loope
out
js
lods
adc
cmpsl
and
outsb
mov
jns
je
scas
into
add
int
loope
ljmp
mov
daa
jbe
call
int
arpl
fstps
push
push
scas
in
test
xrelease
mov
dec
add
imul
fnstenv
pop
xchg
aam
cmp
push
test
inc
mov
addr16
jecxz
push
jle
ljmp
mov
loope
std
das
sahf
adcb
in
daa
sbb
enter
mov
adc
push
cmpsl
fsubl
push
outsb
mov
ffreep
sbb
mov
leave
iret
pop
rorl
js
xor
mov
movsl
fs
movsb
jbe
xchg
outsl
mov
and
mov
xchg
in
scas
rclb
add
in
sub
call
dec
push
stos
loope
push
cli
in
arpl
jl
out
inc
jno
out
push
fnstsw
adc
pop
mov
cli
adc
xchg
scas
arpl
loopne
arpl
out
xchg
pop
jl
daa
lcall
repz
mov
jo
add
repnz
sbb
or
xor
ss
shll
mov
jbe
call
pop
insl
andb
xor
popa
call
xchg
daa
xchg
push
push
repz
fbstp
push
mov
flds
mov
or
xor
lret
adc
push
adc
jle
dec
lcall
cltd
mov
loopne
pop
arpl
mov
jo
out
lret
jbe
or
lods
lret
popl
mov
mov
xchg
xchg
daa
out
lods
stos
cmp
ja
fisttpl
sarb
fsubr
nop
xchg
jae
notb
xchg
lods
sbb
dec
lds
int
data16
xor
mov
push
dec
leave
inc
cmpsb
sar
mov
push
shrl
push
xchg
jl
mov
inc
jmp
sti
outsb
lret
orb
sub
repz
in
jecxz
repz
adc
cltd
sub
loopne
jnp
sub
cmc
push
in
inc
sti
mov
pop
insb
ret
mov
sbb
jmp
or
scas
aaa
add
lcall
std
addr16
xchg
pop
lods
mov
loop
cmc
mov
or
mov
into
test
jno
loop
cmp
repnz
mov
dec
xor
jo
inc
outsl
lahf
rcrb
popf
sub
sbb
nop
lret
jge
mov
test
push
mov
xchg
mov
ficoml
aad
jle
rep
sub
lahf
mov
jno
cmpsl
inc
scas
jnp
xlat
movsl
mov
mov
data16
cmp
sbb
push
or
xchg
add
xchg
nop
les
add
ret
sbb
xchg
repz
lock
mov
pop
push
loopne
sbbl
mov
pop
xlat
minps
movq
in
cmp
insb
scas
adc
push
pop
imul
outsl
push
cwtl
lret
mov
test
xor
shlw
daa
sar
mov
shll
adc
and
and
sub
and
pop
mov
jae
mov
push
fcmovbe
fmull
push
fsts
inc
pop
pop
pop
lods
test
jg
fs
jmp
rorl
or
rcrb
mov
pop
scas
or
mov
sub
push
mov
xchg
pusha
mov
inc
test
ret
add
push
dec
les
mov
jne
out
daa
jecxz
mov
mov
inc
nop
jmp
je
mov
push
inc
or
mov
mov
mov
xor
xchg
mov
jp
adc
mov
shl
outsb
out
sub
and
aad
sub
push
stos
sbb
push
fidivrl
push
push
jecxz
add
jl
insl
cmp
jb
insb
mov
aas
ret
cmpsl
cmc
xchg
insb
mov
leave
inc
lods
stos
push
hlt
push
dec
cli
in
jmp
rcrb
inc
stos
aas
ss
rcll
adc
push
xor
loopne
ja
mov
inc
push
mov
lods
jnp
adc
xchg
icebp
mov
out
icebp
add
jae
mov
mov
xchg
mov
mov
out
and
inc
jb
mov
xor
scas
insl
lods
or
les
xchg
push
mov
lahf
adc
aam
jb
or
and
pop
lret
adc
mov
mov
dec
jno
mov
int3
imul
cmp
push
sub
sbb
shll
xchg
aam
adc
in
or
mov
push
into
hlt
lret
push
sbb
mov
or
outsb
fnstsw
loopne
fisubl
in
cmp
sahf
int3
sub
mov
lea
mov
outsb
sbb
push
out
cmp
fmul
xchg
clc
lmsw
mov
addr16
inc
data16
lret
cmp
cmp
mov
or
sub
mov
aad
xor
pop
jnp
aaa
jo
lods
cmpsl
xchg
mov
dec
sti
pop
add
mov
ret
pop
outsb
xor
insl
lock
in
mov
mov
pop
fwait
inc
leave
or
jne
lcall
lret
loopne
mov
outsb
sub
psubd
scas
xor
xor
xlat
or
add
test
repnz
adc
sbb
insb
loope
add
sbb
frstor
movsb
jae
pop
fxch
call
das
mov
repz
movsb
push
and
or
aam
jae
xchg
shll
inc
lcall
pop
cld
push
mov
cmp
dec
pop
ffree
mov
lahf
sub
jge
jne
inc
jl
and
leave
aam
daa
orl
movsl
inc
jbe
mov
pop
cmpb
jg
enter
mov
jl
cmpsb
mov
cltd
icebp
mov
jo
and
mov
or
outsb
and
jnp
pop
mov
adc
sbbl
scas
cltd
xchg
jp
sub
jl
lea
pop
in
out
test
mov
rolb
mov
icebp
subb
add
cmp
pop
imul
inc
dec
inc
into
sahf
add
add
xchg
arpl
lock
sub
es
int
into
pop
aaa
pop
lret
sub
cmpsl
loop
movsb
jnp
sahf
pop
xor
call
dec
shrb
aad
or
arpl
clc
xchg
cmp
inc
dec
imul
aam
lods
push
outsl
adc
sbb
push
iret
imul
cmpl
rcll
sbb
jbe
xchg
mov
lahf
push
mov
std
imul
mov
push
jg
test
push
xor
call
pop
xchg
cli
jae
xlat
inc
in
jns
sub
out
mov
jp
jo
mov
cmp
scas
inc
mov
cmc
sbb
dec
mov
mov
aas
pop
in
pop
and
sbb
nop
fsubrl
das
mov
mov
lcall
cli
push
subb
or
movsb
nop
xor
push
out
xchg
sbbl
mov
ljmp
rcll
push
dec
ret
movsb
icebp
mov
lcall
push
cmpl
cmp
pop
loop
cmp
iret
fs
lods
clc
push
in
pushl
das
insb
inc
mov
mov
rcl
ret
je
xlat
das
or
jecxz
jmp
and
pop
cmpsl
push
pop
or
lcall
outsl
cmp
lods
jne
jge
repz
fnstenv
push
aaa
enter
movsb
add
scas
rcrb
ret
sti
div
dec
cs
jns
lods
or
test
cmp
or
push
add
sub
mulb
xchg
pop
mov
dec
ret
mov
adc
jns
pop
sti
rcrb
pop
das
jecxz
rorb
push
repnz
jmp
repnz
cmp
imul
sbb
and
mov
push
subb
in
wrmsr
repnz
ja
xor
sbb
scas
out
inc
adc
adc
dec
push
sbb
sti
in
pop
es
mov
in
lea
hlt
cmpsl
cmc
out
push
repnz
cltd
mov
sarb
in
xor
mov
and
adc
jnp
cmp
xchg
call
jnp
push
push
or
shlb
aaa
loopne
fiadds
sub
shrb
jbe
add
fucom
out
pop
mov
mov
jp
insl
enter
push
xor
lahf
out
xchg
das
sbb
mov
mov
mov
in
add
fisubrl
mov
hlt
insb
test
jmp
arpl
popf
and
mov
je
movsl
push
or
popa
push
bound
test
mov
call
ja
or
push
adc
cmp
add
adc
sbb
ljmp
aaa
test
mov
dec
jb
and
ja
dec
or
cmc
cltd
popa
fcmovbe
js
or
cmp
cmp
aas
mov
mov
mov
nop
loope
sahf
dec
outsb
mov
repz
xchg
out
fcoml
push
nop
cmp
cli
lcall
inc
sbb
in
jg
aaa
sbb
cmp
sti
lret
cmp
rcl
jg
pop
xor
scas
dec
dec
sarb
inc
xchg
sbb
pop
int3
dec
mov
cs
aad
mov
sarb
and
ret
ret
repz
ficoml
pop
scas
xchg
testb
loop
sub
cmp
pop
orb
inc
jne
mov
mov
xchg
je
rcrb
subb
movb
outsb
mov
in
or
insl
pop
lds
insb
pop
jb
stos
mov
push
xchg
mov
and
sbbl
pop
lahf
and
push
aad
std
mov
sarl
inc
sbb
push
fldcw
mov
sbb
push
jl
fiadds
imul
push
aam
insb
pop
icebp
jmp
into
pop
sbb
imul
ret
jno
cmp
xchg
and
jg
hlt
mulsd
loopne
push
arpl
enter
push
in
lods
adc
push
dec
lahf
or
pop
lret
pop
adc
test
mov
jnp
dec
out
popa
xor
xchg
pop
ss
xchg
out
sbb
fnstenv
or
leave
pop
push
dec
es
sahf
push
icebp
shrb
repnz
sub
iret
das
sbb
leave
mov
mov
and
dec
es
xchg
push
scas
sub
push
push
imul
pop
xchg
push
adc
out
xchg
std
jne
xor
leave
mov
and
add
push
mov
or
cmpsl
jmp
mov
sub
dec
mov
sbb
mov
addr16
pushf
jnp
sub
sbb
in
inc
cmp
sub
cld
pushf
lods
ds
bound
sbb
pop
mov
enter
dec
leave
outsb
or
inc
hlt
rol
sub
imul
xor
adc
xchg
inc
ss
sub
jge
ljmp
add
inc
roll
jns
test
lahf
test
cmp
xchg
sub
cmp
pop
mov
jge
and
into
pop
jnp
adc
ljmp
push
mov
xor
stc
xchg
ret
jno
sub
inc
shll
mov
fs
stos
inc
ja
inc
jl
fwait
and
mov
aaa
iret
arpl
pop
sbb
pop
xchg
mov
xchg
and
dec
xchg
test
push
aaa
inc
pop
movsl
test
imul
pop
rcl
xchg
fs
lods
sub
insb
pop
cmp
je
sbb
push
cltd
loopne
mov
outsl
pop
pop
xchg
push
std
pop
cli
mov
sub
adc
cmp
adc
and
push
jmp
inc
fistps
and
popa
enter
sahf
ljmp
repnz
xchg
outsl
or
nop
mov
das
icebp
ficomps
pop
pop
mov
inc
dec
out
pushf
js
pop
push
ror
cmp
xchg
into
jge
sbb
aam
jbe
into
mov
mov
and
xchg
xchg
inc
xor
inc
lock
iret
imul
lret
mov
mov
adc
pushf
push
push
pushf
daa
clc
stos
dec
xchg
popa
arpl
shlb
sub
and
mov
mov
rolb
inc
push
andl
in
or
cmc
pop
sbb
add
adc
ljmp
inc
repz
rcll
adc
pop
fistps
nop
test
jo
adc
les
hlt
jo
and
ja
and
xchg
sub
and
jle
bound
mov
or
xchg
scas
mov
ljmp
jno
cmp
push
stos
daa
push
mov
xor
xchg
cmp
test
jae
and
es
scas
imul
mov
sbb
in
call
or
push
in
dec
repz
arpl
dec
icebp
push
idivl
mov
aaa
dec
add
imul
mov
pop
sbb
cmp
mov
xor
fistl
sbb
ret
stos
test
les
enter
adc
bound
push
and
lock
jmp
out
xchg
divl
xor
loop
dec
stos
add
outsl
call
test
sarl
mov
popf
jo
sub
aaa
fiaddl
divps
hlt
imul
popf
bound
lcall
xor
dec
aaa
insl
mov
lea
adc
push
es
adc
cmp
notl
rolb
jge
or
repnz
sub
imul
lea
call
lods
aad
mov
mov
lods
in
dec
imul
gs
stc
popf
dec
pop
cmp
arpl
lds
push
jg
cli
cmp
sbb
cld
jmp
push
mov
dec
cmp
jno
loope
cltd
into
mov
jl
push
dec
arpl
add
popw
outsl
int
adc
fnstcw
mov
mov
and
cs
mov
into
ss
in
adc
cli
lods
inc
ret
je
arpl
leave
lret
pushf
ret
and
push
cmp
scas
mov
scas
mov
xor
jae
shrb
xor
jne
push
je
divpd
cmpl
xor
roll
popa
rorl
xorb
nop
shrb
subl
sub
test
add
sub
push
push
bound
fidivs
mov
mov
or
fistpll
inc
arpl
mov
xchg
cmp
fisttpl
sbb
add
cmp
in
dec
je
cmp
je
rorl
sbb
ljmp
iret
pop
icebp
inc
inc
dec
cmp
dec
and
and
mov
jge
cltd
jbe
mov
jae
ret
popf
inc
xchg
js
or
lcall
sti
mov
int3
sbbl
push
test
xchg
cwtl
jl
lcall
xchg
out
inc
sbb
push
mov
pop
xor
in
pop
jae
in
jp
sbb
addr16
hlt
pop
pusha
xchg
push
fs
rcrb
pop
cli
add
lock
and
push
mov
inc
sbb
gs
pop
pop
inc
pusha
lods
xchg
xor
dec
xor
test
je
out
xlat
xor
inc
fs
aaa
and
push
cmp
movsl
lods
sub
jns
cltd
dec
add
adc
mov
ljmp
ret
sub
inc
pop
inc
add
popf
and
xorb
pop
in
lret
mov
mov
mov
pop
inc
in
jae
sarl
mov
add
jne
jl
mov
sti
icebp
add
cltd
stos
popf
mov
les
and
imul
loopne
mov
sahf
or
pop
xor
cmp
fidivl
lahf
add
sbb
adc
mov
xor
in
push
mov
mov
jb
xor
sbb
xchg
pop
cmp
xchg
sbb
fsubrl
sahf
packsswb
cwtl
or
and
test
ljmp
xor
mov
or
xor
fbld
es
jns
aas
inc
cmp
xlat
and
pop
in
pusha
cmp
cmp
xor
jnp
push
mov
test
stos
xor
ja
push
jp
shlb
push
xchg
or
xor
mov
xor
jecxz
rcrb
inc
jae
out
mov
rorl
adc
push
ficoml
xor
mov
int3
bound
adc
dec
sahf
jl
xchg
leave
out
add
sbbb
fstps
or
push
mov
or
xchg
dec
pop
outsl
test
add
push
xchg
dec
cltd
aam
xor
out
daa
das
mov
into
icebp
into
pop
adcl
nop
movsb
xchg
cli
les
inc
or
adc
in
xor
lock
cmp
cmp
adc
xor
push
push
out
inc
cmp
cmc
scas
inc
and
jmp
jbe
out
clc
sub
mov
in
mov
xor
jb
xor
popf
and
test
push
cmpsb
rsm
lret
mov
in
inc
mov
sub
inc
pusha
and
imul
out
test
loop
sar
out
or
ret
les
mov
out
insl
leave
mov
gs
and
dec
stc
cli
and
dec
mov
inc
jo
ss
faddl
cmpsl
cmp
sub
popf
outsb
mov
dec
arpl
out
pop
sub
scas
mov
push
dec
push
and
aad
gs
jb
mov
pop
or
call
scas
sti
mov
ja
rorb
in
adc
icebp
outsl
jecxz
add
mov
mov
clc
fwait
mov
cmpl
xchg
insb
shlb
sbb
test
cmpsb
fs
cmp
cs
insl
ss
and
or
mov
jbe
mov
mov
dec
sub
mov
and
jns
sbb
in
push
subl
xchg
dec
add
xor
lea
and
sbb
push
das
repnz
xor
push
arpl
jb
jg
insl
mov
inc
addr16
push
fnsave
into
cs
leave
push
outsl
add
setnp
pop
aas
and
lret
nop
movsb
pop
rcll
mov
inc
mov
xchg
dec
icebp
inc
ret
push
test
adc
pop
cmp
test
jle
inc
mov
jmp
test
sbb
ret
ret
jns
adc
add
js
aas
out
mov
fistpl
insb
add
xchg
shll
cmp
ljmp
ffreep
stos
roll
bound
imul
mov
sti
xchg
icebp
stos
ljmp
adc
ret
mov
fisttpl
jmp
dec
push
jmp
lock
pushf
sub
adcb
cli
pop
mov
add
repnz
js
loop
jo
psllw
iret
xor
daa
shr
inc
lods
or
rcll
es
lds
mov
mov
add
and
mov
push
and
mov
dec
stos
ret
xchg
gs
push
pop
mov
mov
adc
pop
aad
and
inc
lret
push
xor
insl
xor
mov
pop
arpl
mov
sbb
xor
or
jno
cmp
addr16
movsl
or
or
repz
idiv
pusha
inc
cmp
xchg
mov
aaa
call
lret
push
pop
push
jl
and
xor
mov
push
push
fiaddl
mov
fsubp
pusha
mov
mov
pop
sub
mov
scas
lcall
jg
cli
mov
out
cmp
sub
mov
sub
and
xchg
mov
xchg
inc
xor
sbb
rcl
lcall
fs
add
ds
jae
inc
int3
inc
call
inc
test
arpl
inc
sub
sub
popa
inc
lods
aas
pop
icebp
out
sub
test
dec
rcll
xchg
xchg
mov
inc
inc
enter
shl
in
or
sbb
ret
ja
dec
test
addr16
sub
jmp
stos
daa
sarb
fbstp
fsubs
adc
fwait
and
pushf
mov
dec
jns
fimull
cmp
jno
mov
mov
out
aad
lcall
in
cli
rcrl
xor
pop
outsb
ja
notl
psraw
shll
in
mov
test
dec
in
sti
shl
ljmp
div
pop
pop
inc
ss
inc
inc
inc
xchg
xchg
hlt
mov
sti
and
jno
add
dec
divb
dec
xor
addr16
insb
inc
rcll
popf
outsb
scas
and
jl
xchg
lods
jns
rolb
dec
nop
or
xchg
sbb
notl
push
xchg
push
sbb
out
lea
push
in
mov
call
sbb
jl
mov
lods
loopne
imul
adc
in
gs
push
out
add
insl
or
inc
ljmp
outsl
aas
dec
arpl
cmpb
in
dec
add
cmp
adc
mov
lods
mov
cmp
dec
aaa
lock
jns
sbb
orb
sub
add
or
push
jae
push
mov
sub
int3
movsb
push
mov
cmpsb
addr16
xor
jg
cmp
jae
and
or
dec
adc
lds
inc
das
pop
mov
out
addr16
jno
into
cs
lret
stos
imull
cmp
add
adc
inc
ret
aad
add
lock
adc
mov
icebp
icebp
scas
clc
xchg
sbbb
lcall
sub
adc
pop
arpl
push
je
mov
scas
insb
aaa
mov
jge
jbe
js
cmpsb
iret
lock
imul
mov
xor
dec
jno
test
sub
dec
sbb
and
in
cmpsl
or
pop
adc
cmp
push
cli
or
mov
lods
call
outsb
jmp
dec
cmp
fstpt
mov
js
jnp
add
lret
jmp
in
notl
idivb
sbb
dec
dec
cmc
jbe
imul
and
jg
insb
pop
stos
jnp
pushf
xchg
mov
xchg
dec
popa
push
xchg
dec
sub
inc
test
test
cmp
dec
ret
test
clc
mov
xchg
pop
push
push
inc
and
or
sahf
push
cmp
aas
lret
cmpsl
into
je
or
int
loopne
idivl
inc
jnp
jb
xchg
pop
mov
jp
out
cmp
stos
scas
xchg
or
sbb
not
mov
aas
int3
jno
in
jb
je
lods
ffreep
jle
out
int
and
push
add
jnp
sub
jns
cltd
xchg
sbb
bnd
sub
cmp
jmp
scas
repnz
shlb
xchg
test
pop
aam
andl
aaa
sub
xlat
jae
jb
sahf
out
inc
lods
adc
xor
sti
mov
push
es
je
cmc
inc
pop
scas
mov
pop
push
repz
sbb
cwtl
notb
popf
jecxz
mov
dec
jo
mov
mov
xor
popa
and
and
inc
cli
sahf
add
leave
mov
cltd
cmpsb
in
jp
jp
shll
inc
dec
lds
sbbb
xlat
sbb
cltd
scas
in
jecxz
mov
aam
into
pop
jge
xor
mov
add
or
adc
xor
std
pop
loopw
inc
notl
xchg
add
sub
neg
arpl
adc
into
adc
test
lret
pop
or
adc
insl
pop
mov
jp
sub
aas
into
jno
fistl
insl
dec
add
imul
insl
popf
pop
xchg
arpl
ljmp
jno
cmp
cld
mov
shll
or
sbbl
int
ljmp
cli
cmpsb
sbb
mov
lea
cli
cld
loope
stos
lahf
jnp
sub
bound
pusha
in
xor
ss
pusha
pop
enter
jb
jle
int3
xor
lods
lods
std
dec
jg
inc
outsb
cmp
je
mov
jle
sub
imul
loopne
lcall
cmp
and
rcrb
roll
xchg
cs
pushf
xor
out
bound
pop
pushf
cmp
dec
jb
mov
inc
enter
dec
fyl2xp1
repz
out
inc
adc
lcall
or
jmp
int
mov
mov
xor
xor
jge
movsb
jo
fcomp
xchg
popf
aaa
cwtl
mov
inc
push
jb
cmpsb
pop
mov
test
stos
xor
int3
das
in
push
sbb
add
mov
fbld
cmp
fsubr
cmp
leave
cmp
mov
sldt
outsl
sbb
je
ds
add
jb
aas
ds
inc
jbe
rorb
push
jb
fimull
xlat
test
add
in
fwait
push
test
aas
ljmp
lahf
je
cs
add
cs
loope
sbb
mov
fdiv
jno
cmp
popa
scas
lahf
jae
insb
stc
mov
fimuls
aaa
jmp
testl
push
jbe
mov
inc
pushw
sub
mov
mov
mov
dec
lds
mov
mov
insb
pop
cmp
xor
imul
fwait
or
lods
fmul
clc
mov
das
out
jb
scas
push
jbe
push
dec
or
pushf
sahf
sbb
cli
imul
into
cmp
jno
xor
imul
cmpsb
nop
in
js
push
sbbl
mov
or
repnz
add
ss
xor
mov
xor
arpl
xchg
inc
int3
test
enter
lret
sub
addr16
adc
push
xadd
jl
out
fldl
push
mov
jne
mov
adc
lret
or
bound
test
mov
pop
sarb
sti
lods
out
push
adc
push
jle
ljmp
rclb
mov
imul
dec
test
lea
and
in
mov
mov
sti
sub
inc
and
int
test
jge
out
and
out
and
stc
in
add
jmp
sbb
inc
or
cmp
push
add
insb
jns
add
movsb
sbb
add
sbb
jge
loopne
pop
popf
cltd
push
loop
fsubl
pushl
mov
daa
mov
pop
jecxz
lcall
push
sbb
dec
mov
cwtl
mov
dec
icebp
sub
call
cmpsl
xchg
bnd
lret
stos
jge
lret
and
fisubl
pushl
and
jecxz
lock
mov
ret
xchg
and
mov
jbe
or
movb
pop
fwait
stos
leavew
sub
fisubrs
repz
jp
pop
push
push
jo
and
aas
and
dec
repnz
je
es
or
filds
ljmp
mov
cltd
add
shl
leave
lods
imul
mov
inc
insl
inc
push
bound
movsl
xchg
insl
in
in
mov
mov
cmpsb
clc
inc
dec
lea
xchg
in
and
bound
mov
adcb
push
lret
push
shrl
andb
xchg
sbb
sbb
mov
into
loope
xchg
clc
scas
push
hlt
push
insl
shll
and
pop
sub
rorl
mov
xchg
jecxz
in
lahf
or
sbbl
dec
add
ds
push
out
mov
sahf
jle
jle
lret
lret
scas
outsb
mov
push
or
sbb
mov
popf
scas
adc
mov
xchg
test
shlb
daa
icebp
test
sti
mov
lds
filds
pushf
out
es
scas
ds
xchg
xchg
sbb
or
outsb
cmp
cmpsb
test
int
lahf
inc
adc
cmp
loopne
dec
mov
push
outsb
mov
or
pop
xor
in
dec
jmp
xlat
into
fsubr
jp
lods
sti
xor
pop
inc
test
out
movsl
mov
lock
ret
sbb
jb
adc
cmp
lock
mov
push
mov
mov
into
mov
add
in
cmpsl
mov
shl
test
in
imul
mov
fmull
push
sub
adc
test
cld
add
dec
addb
add
addl
push
adc
mov
jns
xchg
dec
xchg
and
jmpw
pop
iret
fisubs
std
cwtl
lods
mov
pusha
xor
fbstp
mov
lea
dec
or
adc
stos
or
xor
sar
mov
rcl
jb
scas
xor
fiaddl
in
outsl
sti
in
jge
insb
or
pop
adc
mulb
sub
cmp
scas
iret
mov
inc
and
movsl
xorb
pop
fs
cld
neg
push
mov
aad
shrl
cld
or
cmp
repz
insl
sub
mov
xlat
inc
inc
aam
pop
lock
jecxz
psubw
adc
jg
inc
ss
mov
inc
mov
or
or
pop
pop
aas
dec
pop
ret
cmp
xchg
xchg
push
add
add
mov
mov
xchg
in
adc
sbb
ds
xor
and
jo
ljmp
addr16
fiadds
outsb
lea
pop
adc
inc
mov
dec
pop
call
jge
sbb
inc
fiaddl
loope
xchg
imul
cmpl
jle
ss
ret
mov
iret
in
dec
add
aas
arpl
js
mov
jecxz
jae
adc
push
or
and
cmp
mov
pop
cmpsb
lcall
cwtl
stos
popa
lods
push
push
daa
mov
popa
and
roll
loope
mov
pop
pop
sahf
int3
cmpsl
lret
cmp
sarb
xor
jbe
add
sbb
dec
je
jb
xor
push
cmpsb
and
push
inc
lahf
pop
in
lahf
sarl
aam
cmp
xor
rol
fistps
mov
jecxz
adc
sahf
xor
jmp
sbb
sbb
mov
leave
pop
xor
testl
jmp
xchg
ljmp
mov
mov
add
inc
xchg
mov
push
cmp
cmp
xchg
es
rolb
es
lea
or
popf
sbb
addr16
xor
into
sub
mov
int
sahf
dec
inc
leave
enter
mov
iret
cld
mov
test
loop
lcall
inc
cli
int3
ret
adc
push
cs
fldl
insl
outsl
sbb
fstl
jmp
pop
ret
movl
push
mov
cmp
push
inc
dec
in
cmp
js
jne
call
cmpsl
mov
arpl
int3
jmp
out
repz
lret
hlt
sarl
andb
adc
out
sbb
je
cmpsl
and
sbb
mov
mov
cld
push
push
lods
aad
jae
insl
pop
mov
push
sahf
jmp
and
scas
sahf
rolb
mov
lret
jp
mov
leave
scas
repz
ficoml
insb
test
inc
or
dec
dec
loopne
push
repz
sar
lcall
dec
outsb
xchg
addl
mov
in
ret
mov
dec
sub
cmpl
jns
pop
nop
call
aad
push
sahf
cmp
fiaddl
cld
scas
or
gs
xchg
push
movsb
jbe
bound
and
out
test
lods
int
fistps
add
ret
ret
in
xchg
in
push
pop
xchg
lods
adcl
cs
adc
scas
scas
ret
xchg
pushf
mov
es
loopne
lods
or
out
adc
or
enter
cmp
loope
xchg
leave
mov
pop
jle
add
paddb
push
pop
jnp
jae
lods
iret
push
jne
add
sti
lcall
rcrl
insb
sti
adc
push
inc
xlat
nop
push
loop
sahf
stc
das
dec
add
pop
jp
jb
push
imul
push
test
or
test
mov
inc
mov
into
popa
hlt
push
rcr
mov
push
and
jne
pop
mov
jnp
adc
sub
add
pop
icebp
dec
pop
cmpsl
insb
dec
enter
xchg
enter
jbe,pn
cld
jecxz
push
push
mov
test
andl
bound
fcompl
sbb
pushf
push
stos
dec
sub
sub
test
fs
push
jmp
jns
iret
push
mov
out
push
repz
ja
enter
cmpsb
orl
or
pop
lods
mov
xchg
push
dec
dec
add
push
jp
add
cmp
fistps
and
dec
mov
push
inc
insb
insl
sub
insb
popa
ja
jl
push
stos
xchg
iret
add
jge
scas
loopne
dec
cmp
mov
push
mull
and
pop
lret
imul
xor
inc
push
fs
jle
mov
fucomi
xor
lcall
js
pop
mov
ja
or
xchg
dec
pop
pop
push
xor
mov
inc
ret
hlt
enter
mov
mov
or
push
jns
push
mov
mov
push
inc
js
xor
stos
or
push
mov
insl
aam
iret
shrl
inc
cmp
inc
cli
stc
xor
xor
outsb
out
into
lcall
aad
adc
ljmp
andb
shrb
in
sub
mov
loop
xchg
push
bound
inc
lods
cmp
adc
repnz
xchg
push
out
cmp
adc
inc
ljmp
popf
pop
and
push
pop
xchg
jae
daa
adc
daa
aam
mul
in
fisubrl
sbb
cmp
int
add
sub
push
std
jmp
push
in
push
mov
mov
outsb
sbb
push
pop
loope
shr
fs
in
lret
lcall
jecxz
sti
push
push
call
pop
dec
cmpb
cli
ficompl
pushf
push
mov
sti
pop
jns
mov
sub
loop
cmc
add
jo
aaa
sbb
shl
sbb
aas
lret
cltd
xchg
dec
add
mov
shll
pusha
mov
dec
fmuls
add
pop
pop
lock
xchg
sbb
jnp
pop
iret
xor
inc
in
fists
sbb
jmp
lock
cwtl
push
adc
add
inc
and
jp
cs
sahf
mov
jge
outsb
mov
addr16
into
dec
push
cmp
or
push
jno
punpckhbw
inc
shlb
push
dec
dec
sub
jge
test
push
pop
mov
and
xor
les
xor
outsb
sbb
or
pop
jecxz
fwait
das
mov
int3
cmc
jnp
pop
jae
cmp
in
adc
mov
mov
sub
xor
movsb
lret
cmp
out
jno
dec
jle
jg
aam
and
push
fidivl
xchg
jecxz
jp
and
sbb
dec
cmpsb
sub
out
in
sar
stc
jne
mov
sbb
repnz
inc
cmpsl
push
notb
xlat
dec
lret
push
test
mov
sahf
xchg
or
inc
stos
sub
dec
add
std
dec
shlb
lods
or
pop
cwtl
pop
scas
adc
insb
adc
jecxz
sahf
or
in
add
into
jmp
jp
ret
or
popa
aam
lock
cwtl
push
test
rclb
cwtl
addr16
push
jmp
push
mov
jle
sbb
pop
sub
fucomip
sar
lahf
cltd
loope
andl
mov
push
pop
mov
daa
sbbb
add
movb
mov
push
jae
aad
jle
repnz
adc
pop
int
sub
test
fs
add
sarb
jecxz
mov
pop
fdivrs
xor
repz
mov
xor
je
fs
out
stos
hlt
xchg
jg
ja
inc
xchg
roll
mov
data16
out
cwtl
mov
and
sti
adc
ljmp
push
lcall
pushf
add
sahf
push
int
xchg
fwait
loop
outsb
fwait
aas
pop
cmp
cmp
dec
aam
stc
dec
scas
dec
dec
sbb
jle
ljmp
std
shr
push
scas
lock
jb
loope
xor
out
mov
inc
mov
shrl
je
hlt
into
insl
lahf
inc
orl
xchg
xor
hlt
adc
sbb
xchg
repz
out
ss
push
popf
dec
mov
cli
jb
xor
sbb
and
pop
cmp
mov
test
mov
out
int3
pop
mov
stc
call
pusha
jp
pop
dec
cmp
pop
idiv
add
pop
adc
ror
mov
cmp
movb
pushf
sarb
add
jb
loope
add
repnz
or
or
xchg
xchg
mov
mov
sbb
shl
pop
les
mov
cld
loope
xor
xor
ret
pop
xor
enter
pop
dec
mov
xchg
sub
sbb
push
mov
mov
xchg
mov
sub
jecxz
movaps
loop
jge
and
inc
clc
push
scas
sub
lods
lock
push
xchg
mov
test
cmp
inc
cwtl
inc
inc
cs
mov
inc
cmpsl
outsb
mov
bound
out
dec
ja
inc
sbb
cltd
shlb
in
out
sbb
mov
stos
test
iret
dec
bound
cld
sub
sub
mov
jmp
sbb
xchg
fwait
add
fmuls
mov
sbb
cli
fdivs
inc
mov
test
stos
sbb
pop
or
dec
xchg
jge
xchg
imul
and
nop
cwtl
inc
mov
jb
fwait
adc
lea
cmp
push
adc
jp
xorb
xchg
pop
out
andl
dec
or
xchg
jno
inc
gs
jge
out
leave
loopne
or
adc
ss
mov
insb
aam
mov
shll
pushf
jae
repz
xor
adcl
mov
pop
stos
adc
pop
jl
cld
subl
pop
jne
mov
or
dec
push
scas
fwait
xchg
pop
das
cmc
cmpl
nop
inc
add
fwait
xor
pusha
int3
dec
dec
mov
cmp
inc
jp
loop
das
testl
call
shrl
dec
in
pop
pop
inc
push
shll
mov
dec
or
sub
cmpsl
mov
mov
or
ret
mov
in
in
iret
adc
mov
jg
push
mov
into
xchg
loope
rclb
sbb
cmp
adc
add
xor
xorl
and
mov
retw
ret
stc
sub
inc
mov
lods
pop
js
sub
or
or
push
adc
pop
dec
or
jb
sarl
aam
in
jp
adc
mov
dec
outsl
aas
add
sti
test
xchg
add
cmp
xchg
popa
in
das
pop
cmc
ret
mov
test
cltd
push
lds
repz
test
fwait
clc
lcall
test
sbb
mov
insl
xchg
hlt
adcb
cmc
mov
ret
xchg
sbb
int3
cmpsl
cld
push
test
or
dec
xor
je
fcoms
push
pop
lds
aaa
leave
mov
mov
jns
in
xchg
push
adc
cmp
push
insl
inc
sub
mov
mov
jnp
mov
outsb
icebp
xchg
mov
and
push
ss
or
mov
cltd
mov
pop
ret
imul
push
jl
cmp
xchg
inc
or
popf
sub
enter
jp
clc
imul
bound
push
pop
sqrtps
mov
icebp
arpl
dec
sarl
lret
pop
shrl
fildl
insb
pop
test
cmp
leave
aam
rcr
repnz
shlb
cmp
lret
pop
je
pop
into
sbb
jge
add
xchg
or
je
pop
out
push
jge
ret
mov
pop
pop
mov
jl
adc
mov
out
adc
push
adc
shll
push
rolb
sbb
jg
sahf
inc
js
cmp
jmp
jno
pop
xor
inc
mov
popf
mov
sub
xlat
mov
dec
aaa
cmp
cmp
nop
push
sbb
fadds
adc
in
jae
daa
jle
jnp
jno
test
dec
nop
into
jge
std
inc
cmc
or
cli
inc
jge
jg
addr16
mov
dec
cs
pop
fcoms
sahf
lret
aaa
divb
bound
enter
incb
loope
imul
cmp
mov
subl
xor
mov
out
enter
stos
pcmpeqd
test
fstl
fwait
mov
mov
jo
mov
xchg
sti
jb
popf
outsb
pop
cwtl
lret
pop
popa
xchg
in
add
insl
addr16
movsb
popf
or
iret
std
dec
into
mov
jg
imul
jl
xchg
les
in
lock
ret
fwait
sahf
cmpsl
and
push
push
jmp
or
or
loopw
fs
xor
mov
and
loop
dec
pusha
jb
or
mov
in
fbld
ret
jg
mov
std
jns
add
lods
push
sarb
lock
adc
xorb
jo
jb
sub
arpl
fucomip
and
shlb
int
icebp
jmp
dec
jns
mov
aaa
stos
cmp
mov
inc
push
and
ja
dec
daa
sub
mov
mov
data16
mov
xchg
pop
xchg
push
ffree
jae
pop
into
in
cmp
imul
test
xor
add
push
insb
dec
pushf
andb
rclb
inc
cmp
mov
pop
popa
sahf
jae
adc
imul
in
jo
jo
dec
pop
push
sbb
sub
xor
out
out
mov
dec
outsb
lahf
pop
push
or
imull
sarb
push
popf
into
imul
fisubrs
pop
scas
mov
pop
cmpsb
jg
ret
aaa
call
aas
sub
and
add
sbb
sub
adc
pusha
xchg
lret
jne
push
xchg
out
cmpb
fucomp
int
in
inc
stos
jg
sarb
into
or
ss
cs
call
pop
jbe
fdivrs
or
and
and
repz
sbb
dec
lcall
pop
push
iret
jnp
ss
aam
jg
mov
add
insb
dec
out
inc
inc
pop
inc
sub
sbb
out
xchg
or
push
aad
std
mov
jns
pop
stos
hlt
mul
out
jecxz
out
cmp
shll
sbb
scas
dec
popf
sub
fisubrs
sbb
inc
mov
js
cmp
cmp
sbb
testl
fdivs
or
push
arpl
inc
repnz
test
mov
push
xlat
mov
jns
push
or
pop
push
jae
lods
rcll
stos
mov
arpl
sbb
icebp
push
ja
je
xchg
gs
bound
xchg
pop
jg
inc
push
out
dec
enter
nop
and
movsl
jp
call
pop
or
nop
jno
xchg
pop
xchg
dec
loopne
into
jge
andl
nop
cltd
repz
movsl
inc
js
call
in
sub
pushf
push
imul
xchg
dec
aad
aas
shl
mov
int
sbb
xor
repz
gs
jge
insb
xchg
mov
lods
je
inc
test
pop
popf
stos
mov
data16
daa
shr
pop
test
sbb
mov
inc
push
mov
scas
test
mov
loope
pop
push
or
cmp
adc
inc
les
sbb
push
dec
sub
cmpsl
int3
jns
mov
in
add
iret
pop
mov
data16
clc
fadds
dec
pop
lcall
stos
cmp
cmpsl
xor
xchg
lcall
or
insb
mov
jne
lds
ljmp
dec
add
fwait
stc
shrb
sbb
xchg
in
adc
sub
aaa
cmp
ljmp
mov
ret
pop
popf
test
sub
lods
scas
dec
imul
adc
or
clc
xor
mov
aad
ficomps
xchg
dec
mov
inc
pop
mov
mov
mov
sub
cli
mov
add
insb
inc
outsb
loop
loop
mov
lcall
and
adc
or
push
test
cs
add
out
pop
hlt
stos
add
add
in
rorb
pop
dec
pop
mov
cmp
cld
add
or
in
int
adc
rcrb
sbb
jge
mov
mov
mov
xlat
shll
push
cmp
sbb
dec
xchg
mov
into
jle
inc
rorl
pop
repz
ljmp
jne
into
mov
or
cs
dec
or
pusha
mov
call
clc
ret
test
das
pop
adc
in
js
gs
sbb
jae
fidivrs
sti
fistpll
dec
mov
into
aam
jb
ja
lock
test
jge
jp
dec
cmp
jae
inc
jmp
and
mov
adc
std
xchg
in
scas
scas
je
push
jno
mov
test
lods
aad
mov
sbb
arpl
inc
push
sarb
and
mov
push
mov
repnz
in
imul
loop
or
sbb
mov
jmp
test
mov
fs
mov
loope
and
andb
ficoms
sub
cmp
inc
jmp
mov
cld
popf
dec
push
daa
aaa
mov
lods
pop
or
pop
jmp
cmp
int3
fsubrs
int3
iret
std
repz
sub
in
and
mov
push
sarb
test
sarl
add
fadds
dec
push
inc
inc
sahf
ss
push
add
xchg
and
mov
push
rcrb
mov
je
mov
sub
adc
cmp
pop
inc
push
pop
sub
cmp
pushf
mov
stos
push
sub
sbb
cs
mov
pusha
xor
dec
cmc
mov
sahf
dec
loop
xchg
fcmovu
mov
clc
xchg
push
clc
nop
mov
rolb
cli
cmc
adc
cmp
mov
dec
loop
cmovae
inc
stc
movb
cltd
cld
clc
das
lods
inc
sub
aaa
jae
fsubrs
fs
out
xchg
cli
rolb
jae
fidivrl
inc
xor
or
mov
mov
loopne
scas
push
jg
leave
lods
ret
push
je
push
std
int3
xchg
push
cld
mov
push
cs
imulb
mov
add
jecxz
cld
mov
inc
rcrb
lods
jl
mov
cmpsb
lock
pop
loopne
xor
clc
pop
and
cmpsb
loope
sbb
test
push
push
sbb
or
mov
aad
jns
cmp
stos
out
xor
dec
stos
rorl
jp
mov
jg
pop
sbb
xchg
jmp
lea
and
mov
scas
mov
repz
inc
xor
or
xor
cltd
mov
pop
xorl
out
repnz
jmp
xor
stos
sbb
xorl
std
push
cmp
test
cmp
call
popf
add
push
insl
mov
cmp
inc
mov
xor
popa
pusha
aad
js
adc
sbb
int3
orl
adc
jp
push
pop
add
xchg
popa
cmpb
scas
adc
test
and
pop
cmp
add
add
push
add
negl
sub
xchg
jmp
push
push
ret
jle
push
mov
and
mov
push
addr16
pop
and
add
push
insl
fstpl
mov
inc
adc
push
sbb
dec
xor
and
xor
gs
test
adc
inc
loop
inc
mov
jg
mov
ds
lods
bound
inc
clc
int3
cli
or
mov
pop
dec
stc
lahf
mov
xchg
mov
push
rolb
data16
xor
ret
lock
sbb
or
repnz
rcrl
rolb
cli
leave
or
sub
and
imul
imul
mov
jg
outsl
lcall
mov
lcall
and
cmpb
adc
sub
xchg
mov
or
out
add
jmp
lcall
adc
jb
pop
scas
sbb
pop
fsubrl
jo
inc
pop
sub
je
push
push
and
inc
movsl
sbb
in
mov
hlt
or
jle
mov
sub
std
popa
les
jg
inc
stos
sub
out
cmc
jns
adc
test
rorb
addr16
jne
pop
popl
repz
mov
bound
sub
fmul
xor
inc
mov
adc
mov
dec
imul
ror
xor
xorl
and
rorb
mov
jp
mov
push
mov
clc
jno
rol
jno
and
jle
shrl
pop
inc
jmp
iret
lret
and
lock
push
jnp
aam
mov
sub
ret
xor
popf
insl
and
and
inc
movsb
lret
dec
stc
inc
xor
sub
sti
inc
mov
adc
inc
pop
sbb
imul
lcall
sub
mov
xor
xchg
je
jne
sbb
pop
in
xchg
loop
inc
outsl
or
lret
rorl
sub
loopne
loopne
out
and
adc
lods
mov
add
fcomp
cmp
add
lcall
rcr
add
faddl
xchg
push
xor
imul
push
call
enter
xor
add
pop
outsl
cmpsl
dec
ds
mov
fcoml
popf
lds
out
es
es
rorb
repnz
and
sbb
xor
ret
adc
shrl
sbb
enter
shll
add
cwtl
insb
mov
jne
repnz
and
pop
dec
sub
mov
dec
into
adc
out
pop
cmpsb
data16
sbb
push
xchg
lock
pop
add
jae
ja
mov
dec
jo
push
and
fcmovbe
cwtl
lds
shlb
or
loopew
call
jle
xchg
adc
jp
aad
fs
mov
jg
inc
pop
mov
adc
cmc
out
arpl
mov
jns
xchg
inc
jns
je
sub
in
mov
pop
sbb
xchg
cwtl
xlat
and
mov
ss
mov
pop
daa
insb
push
dec
inc
adc
js
sub
mov
cmp
mov
sbb
pusha
pop
jl
arpl
sub
mov
sub
pop
clc
pandn
movsb
push
mov
dec
mov
mov
jbe
or
aas
std
sbbl
xor
push
daa
or
mov
lahf
lret
xchg
test
inc
mov
sub
push
movl
xchg
decb
lret
lods
fdivrl
cmp
push
jl
gs
xchg
push
mov
div
jnp
adc
pop
xchg
in
jge
sbb
dec
mov
shl
sbb
popa
lahf
jecxz
or
shlb
aam
dec
cmp
sbb
jle
aam
sub
movsl
in
pusha
push
cmpsb
pop
mov
jp
mov
fimuls
mov
aas
mov
rclb
jmp
outsl
std
aam
leave
pusha
dec
cmp
call
incl
popa
adc
mov
jge
jno
test
mov
aaa
push
or
mov
xchg
xlat
lret
mov
push
lret
cmp
dec
xchg
adc
or
or
cwtl
and
xlat
sub
adc
aas
pop
sub
mov
or
adc
daa
fisubs
pop
int
jl
leave
test
pop
imul
repnz
pop
or
push
inc
jnp
cmp
and
push
mov
rolb
inc
nop
jbe
sub
pop
pushf
push
mov
jb
incb
jno
pop
xchg
sub
pusha
sub
lahf
cmp
popa
div
inc
nop
inc
mov
jmp
nop
shll
mov
sub
sbb
inc
hlt
idivb
jg
mov
pop
sub
lods
cmp
dec
jp
out
fs
pop
scas
jo
mov
xchg
iret
imulb
insb
adc
rcrl
adc
fmul
scas
xor
mov
xor
gs
pop
rol
xor
pop
ret
mov
lods
mov
adc
fcmovne
cs
rcrb
mov
lods
mov
out
fstl
and
inc
add
inc
outsl
xchg
repz
fucomip
fsubrs
sub
gs
ret
inc
outsl
or
sub
cmpsb
fisubrl
jmp
sub
jno
dec
sub
xor
inc
dec
or
cmpsb
nopl
fisubrl
nop
mov
cmpsl
ror
repnz
test
xchg
loopne
pop
fistpl
xchg
add
mov
push
mov
jb
ja
xchg
in
sub
les
mov
out
xor
hlt
mov
loope
sti
or
sti
mov
addl
mov
in
stos
adcb
dec
mov
loop
in
imul
daa
push
adcb
xor
add
icebp
sti
push
sbb
inc
sub
jo
add
movsl
shr
mov
xchg
sbb
sahf
push
mov
fs
lods
jb
push
sbb
mov
jo
mov
and
or
add
xor
out
pop
and
sbb
mov
mov
lods
push
lods
add
loope
sbb
pop
sbb
pop
lock
cmpsl
push
fwait
or
aad
pop
sub
gs
mov
push
jecxz
xchg
fnstcw
and
test
insb
movb
jmp
dec
push
ja
imul
xor
rcl
or
ret
insb
xchg
dec
push
sub
inc
cmp
lds
dec
ss
outsb
add
lds
xor
dec
imul
es
movsl
pop
mov
fs
jle
loope
and
cld
mov
outsl
cmp
loope
jns
int
adc
and
xchg
cmp
imul
jle
cmp
and
inc
xchg
in
outsl
mov
fldl
push
in
in
jle
push
loop
push
jge
xchg
cmp
ds
push
les
mov
sub
adc
movsl
inc
mov
jnp
jno
lods
jecxz
push
jmp
cltd
xor
cltd
jmp
into
jb
push
jl
lods
bound
ficomps
mov
test
pushf
movsb
idiv
incb
test
outsb
or
mov
adc
inc
cltd
inc
ret
loope
mov
lahf
mov
jg
stos
addr16
addr16
fld
pusha
and
sbb
stos
in
rorl
stos
xchg
fnstcw
add
repz
aam
fldl
adc
mov
xchg
jo
shr
mov
mov
cmp
lret
mov
cmp
sub
imul
or
push
push
dec
cmovge
sahf
dec
xchg
loopne
inc
fucomi
xchg
jmp
and
dec
aaa
mov
mov
std
inc
mov
pop
das
adcb
imul
sub
aad
inc
out
dec
sbb
push
push
sbb
fildl
leave
push
jb
xchg
cmp
andl
jo
dec
lret
xlat
fcoms
mov
cmpsl
movsl
js
divl
push
inc
dec
add
push
out
mov
xchg
lret
xchg
mov
cld
aad
xchg
jl
and
js
mov
outsb
in
stos
push
push
xchg
aas
xchg
stc
sub
adc
stc
insb
or
cmove
in
movsl
ret
imul
xchg
add
jl
mov
arpl
xchg
jecxz
das
fsubrs
jno
ret
ror
xorb
shl
sbb
push
scas
out
notb
lods
push
imul
mov
pop
push
jecxz
jbe
jg
mov
decb
or
fdivr
jl
jno
movsl
es
add
arpl
cli
mov
dec
mov
cli
mov
cmc
jl
pop
xor
adcl
cmp
outsb
ret
stos
hlt
mov
aas
aam
cltd
sub
aam
mov
outsb
ljmp
xchg
mov
push
add
jnp
adc
out
bnd
mov
jae
cmpsl
push
sahf
pushf
mov
clc
xor
fs
push
sub
push
test
jns
adc
mov
call
fldt
jecxz
pop
mov
iret
test
mov
sbb
add
dec
and
sbb
xchg
mov
imul
jb
jle
sub
cld
cmp
push
in
out
xchg
adc
cmp
sub
repz
jl
faddl
inc
arpl
add
lds
and
out
adc
or
fimull
aaa
hlt
jmp
mov
addr16
and
test
or
dec
push
sub
gs
adcb
std
jmp
push
fmulp
idiv
lcall
add
addr16
call
xchg
pop
sbb
mov
lods
xchg
andl
cmp
xchg
das
push
addr16
sbb
in
icebp
or
jnp
push
and
adc
xchg
adc
dec
fildll
jae
cmpsl
call
pop
cmc
mov
nop
leave
bound
add
movsb
cld
push
mov
nop
loope
les
push
shlb
inc
and
mov
insb
xor
lahf
mov
adc
or
or
and
scas
push
rorl
fisubs
mov
xchg
in
push
adc
int
pusha
add
outsl
push
xor
cmp
pop
aas
jnp
mov
into
mov
cmp
idivb
jecxz
cmp
loope
fbstp
add
ficoml
push
in
pop
xor
enter
clc
mov
loopne,pt
or
cmp
and
ljmp
mov
jns
cmp
jmp
lds
test
xchg
aaa
sbb
ljmp
adc
cmp
push
lret
stos
mov
xlat
mov
adcb
gs
adc
xchg
ud0
cmp
arpl
cmp
mov
jmp
clc
test
push
xchg
jb
fwait
push
jp
leave
push
dec
mov
sbb
mov
scas
sub
cmp
mov
insl
hlt
mov
sbb
leave
mov
push
mov
mov
sub
imul
dec
outsb
mov
mov
and
push
dec
sahf
int3
aas
imul
aam
rorb
pop
icebp
sbb
movsl
cltd
adc
push
lret
and
sub
or
lock
addr16
out
sbb
cmp
repnz
xchg
insl
xchg
daa
sbb
ds
in
test
and
je
mov
push
mov
dec
push
icebp
mov
outsl
in
inc
and
sbb
push
movsb
xchg
icebp
push
aas
cld
dec
xchg
mov
mov
jg
std
adc
les
mov
jb
xchg
add
pushf
jecxz
or
xchg
outsl
mov
mov
inc
add
cmp
loopne
subb
jge
sbb
jbe
addl
pop
cmp
jbe
arpl
fidivl
pop
es
sarl
imul
dec
pop
insl
mov
xor
sarl
xchg
mov
sahf
aad
ljmp
ljmp
mov
loopne
jmp
in
dec
scas
jp
adc
adc
aaa
std
pop
inc
dec
inc
stos
or
imul
and
mov
daa
lock
mov
fistps
into
jecxz
ret
inc
xchg
loope
mov
jle
push
inc
mov
jo
pusha
rcrl
and
fnstenv
stos
loopne
mov
ret
leave
lea
lods
xor
repnz
dec
ljmp
push
into
fsts
iret
mov
shrl
or
clc
xchg
sbb
dec
push
das
and
mov
aas
mov
imul
int3
xchg
stos
das
cld
int
es
push
stos
mov
fs
test
into
jmp
aas
push
imull
aas
loope
in
repnz
out
sbb
shl
sub
je
neg
imul
outsb
push
lahf
and
test
xor
sbb
dec
daa
cli
insb
lods
mov
push
lock
test
jmp
fidivl
out
dec
and
bound
inc
imul
mov
sbb
imul
js
cmpsb
sub
add
or
sbb
xchg
cmpsl
sub
and
push
pop
stos
rcrb
and
or
push
dec
mov
iret
mov
jg
cwtl
sbb
mov
push
enter
loopne
pop
sub
xchg
add
movsl
int
mov
int
jg
test
add
push
cmp
push
xor
jl
popa
fstpl
and
pop
mov
out
lock
das
or
inc
stc
mov
outsl
xchg
push
in
sub
xor
call
jns
iret
ret
push
lods
dec
outsl
xchg
sbb
pop
jno
add
outsw
inc
push
gs
dec
sbb
out
sub
xchg
xchg
les
sbb
pop
pushf
inc
and
out
xor
dec
push
push
fadd
in
daa
aam
aas
in
xor
negb
fwait
mov
jmp
jbe
adcl
stos
lret
addr16
enter
das
xchg
loopne
xor
insl
xlat
mov
movsb
jg
fcoms
inc
cmp
xor
mov
clc
scas
lods
mov
and
in
add
xchg
mov
test
sti
repnz
imul
jp
std
test
adc
cltd
xchg
insb
arpl
inc
test
add
dec
enter
fstpl
pop
jg
aaa
ret
mov
jle
jns
sub
cltd
rcrb
aas
out
fisttpll
mov
jg
inc
push
lods
cmp
mov
ja
mov
and
push
mov
dec
sbb
and
mov
incb
cmp
scas
cmp
push
and
or
stc
jae
cmp
dec
rcrl
imul
xor
adc
sub
addb
dec
dec
js
lock
out
cmp
or
push
mov
mov
fdivrs
aas
std
jne
xchg
ret
xlat
adc
jbe
in
fsts
ljmp
sbb
nop
mov
popf
pusha
sbb
dec
add
mov
aaa
in
in
ret
pop
xchg
pop
pop
xchg
mov
jp
or
inc
faddl
dec
adc
mov
aas
rcll
scas
add
xchg
cld
jecxz
inc
jno
sbb
sbb
or
ja
in
pop
push
add
sbb
add
pop
loope
scas
jno
add
inc
adc
sbb
sbb
cmp
xor
aas
movsb
sbb
or
arpl
jb
imul
push
inc
jmp
rolb
jmp
loope,pn
mov
cmp
lds
xor
cli
inc
andl
cmpsb
push
mov
mov
xchg
ljmp
insl
lcall
xor
and
arpl
pop
jecxz
nop
xchg
pop
fbld
cmp
loopne
sahf
inc
sub
sub
int3
mov
js
int
push
divl
das
decb
xchg
enter
out
xlat
jecxz
mov
push
ret
cs
lock
lock
xorb
push
mov
pop
popa
cld
jns
das
shll
daa
and
pop
push
rorl
cmpsl
cltd
fistpl
xchg
lahf
gs
mov
or
xlat
testb
aad
shll
dec
sti
pop
adc
push
ja
mov
xchg
push
dec
inc
scas
mov
pop
call
loop
scas
jl
fldt
aam
and
or
jae
mov
cmp
cmp
and
addr16
loopne
gs
mov
clc
lcall
repz
push
jecxz
in
cmp
pop
out
fstpl
and
sbb
lds
add
popw
test
adc
inc
aas
fisttpl
std
js
pusha
push
in
mov
lea
pop
fists
lahf
add
enter
out
push
lods
inc
cmp
mov
int3
int3
outsb
jecxz
push
mov
add
gs
imul
icebp
mov
into
cmp
es
or
sbb
and
and
push
mov
lods
jns
in
pop
dec
icebp
and
stc
movsl
mov
sbb
pop
outsl
loopne
lret
cmp
add
aaa
test
mov
mov
mov
pop
xchg
sub
outsb
mov
or
and
cmp
enter
push
icebp
push
or
cmpsb
xor
push
fs
jns
aas
xor
ror
fnstcw
dec
out
mov
gs
push
pop
dec
pushf
inc
xor
sbb
iret
ret
cmpsl
stos
mov
cmp
data16
xchg
and
fidivrs
adcl
mov
push
mov
addl
aas
push
xchg
push
out
or
dec
fwait
pusha
dec
into
lret
in
mov
movsb
stos
int
sbb
xchg
mov
xchg
icebp
add
inc
test
xlat
shrb
pop
inc
enter
mov
mov
xlat
sub
wbinvd
dec
jge
sbb
popa
test
jl
jmp
xchg
cld
mov
test
mov
xchg
fists
call
mov
imul
mov
scas
int
mov
outsb
push
mov
mov
mov
test
test
xchg
icebp
cmp
jbe
fiadds
mov
dec
out
mov
add
push
mov
and
cltd
sti
push
out
test
test
imul
bound
test
movsb
push
xor
push
sub
cs
jbe
sbb
lret
push
gs
jo
cmp
lods
add
inc
decl
and
xchg
imul
insl
push
insl
pusha
pop
adc
sbb
add
add
mov
imulb
rclb
sti
stc
lcall
xlat
pop
mov
scas
in
mov
or
jne
or
cvttps2pi
mov
push
sbbl
outsb
xchg
sbb
les
into
pushf
outsl
jge
dec
adc
repz
rcl
mov
mov
adcl
push
jno
jmp
mov
iret
sbb
lret
jmp
cmc
xchg
xchg
sbb
mov
es
dec
out
xor
imulb
push
or
and
stos
inc
in
outsb
pushf
sbb
mov
addr16
mov
jmp
cmpsl
inc
pop
cmp
ret
fwait
jle
cmpsl
in
adc
cltd
xor
sub
hlt
into
add
push
dec
mov
sub
push
cld
leave
pop
in
popf
ljmp
inc
sahf
push
inc
sarl
pop
push
mov
adc
imul
mov
or
or
out
xor
add
mov
aad
sbb
in
mov
cld
jg
loopne
es
aas
add
mov
scas
or
push
lret
das
adc
movsl
or
pusha
xchg
pop
fdiv
incb
push
test
aam
cmpsl
cmp
push
rcrb
dec
sbb
in
pop
push
iret
js
scas
imul
xchg
ficoml
stos
dec
repz
jae
fchs
testl
inc
mov
and
fsubrs
jle
stc
add
mov
sbb
enter
movsb
pop
idivl
xor
cld
mov
mov
pop
std
mov
clc
jno
ss
dec
xchg
fs
jmp
out
and
add
pop
lods
ds
add
jnp
and
add
xchg
in
jg
xlat
add
push
test
sub
mov
pop
or
jne
mov
xchg
add
sub
xchg
insb
sbb
xchg
lahf
js
pop
mov
shll
int
inc
add
push
dec
call
dec
add
fwait
xchg
call
shll
adc
push
dec
outsb
push
xlat
mov
test
push
jmp
mov
hlt
jle
xor
aam
inc
cwtl
js
push
mov
pushf
xchg
mov
gs
loop
aaa
outsl
shlb
xchg
inc
or
repz
lods
jl
xor
or
add
fisubl
int3
add
into
xor
lahf
shrb
pop
or
mov
sub
hlt
mov
out
jne
mov
imul
js
xchg
jmp
cmp
leave
in
adc
repnz
mov
sti
rcll
or
andb
shufps
std
cld
mov
mov
or
cmp
roll
xchg
test
mov
int
fs
dec
sub
arpl
cmpsl
jecxz
jbe
xor
sbb
jg
add
and
xchg
or
mov
jle
jo
cs
daa
push
push
popa
out
clc
sbb
pop
xchg
lods
addb
repnz
xor
sbb
in
in
insb
out
out
and
shr
fsts
jmp
mov
lcall
jbe
jl
sbb
insl
xchg
loope
add
cwtl
and
fucom
int
jp
lds
xchg
fisttpl
push
sahf
loopne
xlat
test
lea
pop
loope
hlt
sar
inc
cmp
lock
js
mov
inc
mov
xchg
fidivrs
push
adc
jns
dec
shrl
ss
mov
in
and
inc
push
rclb
movsl
ja
pop
das
jnp
xlat
push
lds
pop
gs
mov
cmp
jns
jns
push
loope
mov
jb
lahf
mov
out
dec
adc
inc
jnp
out
jmp
inc
push
scas
xor
sub
out
pop
push
mov
xchg
jle
or
adc
sbb
pop
push
andl
mov
xchg
mov
mov
push
js
dec
or
fwait
add
fisttps
mov
fwait
mov
clc
jbe
aad
stos
push
arpl
add
pop
enter
aas
adc
call
icebp
movsl
les
mov
xor
mov
pop
pop
mov
pop
inc
sub
int
out
xor
or
lret
cmpsb
lret
mov
sbb
mov
rclb
mov
xchg
cmp
stc
dec
jo
imul
mov
lea
rcrl
dec
adc
cmpsl
hlt
mov
lods
adc
cmp
test
out
mov
mov
xchg
xchg
adc
fwait
rolb
test
lahf
dec
sti
adc
lods
mulb
push
cmp
add
dec
push
loope
lret
xchg
inc
ja
cld
loope
rdtsc
sbb
sbb
hlt
mov
pushf
adc
jge
psrld
gs
adc
push
jo
cs
pop
fsub
jae
icebp
dec
xor
lock
pop
push
dec
mov
aad
mov
and
xor
inc
pop
adc
push
sahf
cmp
cld
pop
sub
cmp
and
pop
jbe
push
sub
inc
fidivs
inc
shlb
in
push
inc
cli
and
jno
jo
sbb
jno
loope
js
add
js
lcall
jmp
mov
or
into
repnz
xchg
shlb
push
ljmp
test
jno
add
jl
xor
adc
xor
das
push
test
mov
dec
inc
scas
outsl
mov
dec
fs
negl
adc
lret
jg
stos
or
push
adc
pop
jbe
out
xchg
addr16
pop
movsb
pop
hlt
sub
mov
mov
adc
es
loop
sahf
pop
pop
cmpsl
and
dec
pop
and
aaa
mov
cmpxchg
ret
pop
dec
out
xchg
inc
push
xor
cmpsb
xlat
ja
iret
or
cwtl
jae
add
xchg
movsl
aam
push
mov
jno
loop
inc
mov
insl
and
in
cmp
sti
cmp
add
mov
lods
fmuls
cmp
xorl
and
push
loopne
push
mov
mov
ljmp
sub
sub
or
bound
xor
push
or
aaa
pop
in
or
mull
xchg
mov
jp
fisubrl
lahf
sub
mov
jo
lahf
pop
or
rolb
movsl
das
je
aas
jbe
outsl
push
jns
aad
arpl
mov
mov
pushf
pop
imul
hlt
aaa
jo
or
sbbl
sbb
daa
pop
into
movsl
dec
xor
bound
xchg
xlat
pop
adc
adc
roll
aas
bound
dec
cli
jb
aaa
sbb
mov
cmpsb
in
inc
sbb
and
out
std
imul
stos
loop
add
inc
cmp
push
fsubs
sahf
or
jns
lods
movsl
fucomi
bound
loopne
fistl
pop
in
call
fmull
into
hlt
jb
mov
adc
xor
adc
mov
imul
cmpsl
push
mov
cmp
mov
or
pop
pop
ljmp
pushf
jecxz
cwtl
mov
or
lcall
scas
faddl
into
in
cwtl
jae
cmp
scas
and
imul
test
mov
loop
sbb
mov
cld
adc
in
or
adc
sbb
lds
jnp
jns
dec
adc
adc
inc
pop
cwtl
cmp
cmp
test
xchg
mov
enter
push
inc
push
sub
imul
and
dec
mov
xchg
stos
jnp
xchg
aam
push
leave
adc
cmc
shrl
push
enter
mov
mov
jecxz
jg
jbe
pop
pop
scas
aam
jge
jb
test
inc
adc
inc
xor
dec
in
movsb
sub
sbb
jo
es
fisubl
imul
sub
mulb
aam
mov
fimuls
add
xchg
pop
xchg
fsts
jmp
jnp
xor
push
mov
push
mov
dec
mov
dec
cmp
bound
stos
insl
inc
incb
inc
pop
jg
jl
test
fucom
cmp
ljmp
ss
and
xor
or
xchg
jmp
ret
or
sub
leave
sbb
scas
fisubs
fs
cmp
adc
add
mov
xorb
jo
inc
clc
enter
lds
inc
idivl
push
cld
cltd
ja
popf
call
mov
je
jle
push
je
push
loopne
cmp
sub
pop
in
aas
lods
hlt
sub
bound
cmp
mov
push
jmp
xor
jne
popf
loop
insb
test
iret
adc
mov
sbb
xchg
inc
lods
dec
ss
pop
js
add
dec
push
je
fistpl
or
call
pop
mov
xchg
inc
push
dec
popa
pop
ffree
mov
cli
push
fsubl
jnp
sub
sbb
les
les
dec
cmp
jne
test
jmp
xchg
std
push
pushf
int3
xor
mov
test
outsl
push
rcll
in
mov
push
fstps
jae
mov
cwtl
out
pop
mov
mov
jg
icebp
add
xor
mov
subb
jne
std
fcomp
ret
push
mov
test
out
lea
sarl
jne
enter
jp
pop
into
dec
xor
aad
bound
addl
lock
add
xor
sbb
mov
add
pop
inc
mov
and
jbe
testb
mov
sbb
sbb
ja
in
xchg
cmpsl
lods
lret
rorb
adc
dec
mov
xor
test
adc
cld
add
rcll
mov
jbe
subb
or
aam
pop
insb
lret
mov
pop
mov
mov
test
sub
ret
push
fistpl
push
je
mov
sahf
sbbl
mov
daa
jb
int3
cmpsl
ret
and
mov
bnd
rcll
out
cmpb
mov
aad
mov
add
dec
mov
ljmp
adc
push
loopne
stos
and
dec
pop
sbb
xor
jns
or
lcall
arpl
rorl
into
sbb
and
pop
popf
mov
push
lods
mov
or
push
cwtl
xchg
jo
ss
add
shrl
in
popa
add
dec
mov
inc
mov
int3
jecxz
mov
xchg
xchg
inc
push
pop
jb
sbb
shlb
dec
and
add
lods
mov
add
inc
inc
pusha
pop
rcrl
sbb
arpl
dec
dec
mov
mov
dec
or
dec
enter
pushf
add
repz
push
push
imul
pop
xor
jbe
in
sub
and
jno
sbb
dec
jecxz
orl
pushf
dec
addb
dec
mov
mov
out
mov
lds
adc
icebp
dec
cs
int
loopne
mov
sub
cmp
cmp
js
sbb
sarl
cld
mov
aam
js
sub
mov
scas
pop
mov
dec
cmc
or
and
and
rcrl
lret
test
rcl
and
scas
rcl
mov
ficompl
sbb
mov
inc
mov
shl
sub
xchg
jle
jb
rorl
fprem1
adc
cmp
sbb
xchg
or
sub
push
adc
push
xchg
pop
jecxz
movsl
pop
out
inc
mov
adc
cmp
imul
or
fwait
das
dec
lahf
dec
and
pop
cmpsb
nop
lock
pop
lret
jl
jecxz
push
pop
js
add
mov
lahf
pop
add
sarb
cltd
or
sub
mov
adc
insl
push
or
adc
cld
fs
cld
mov
aad
add
and
jg
sub
pop
push
movsl
inc
shll
dec
jb
js
push
inc
stc
push
jl
cld
xchg
pop
mov
insb
jecxz
pop
or
ds
push
ret
inc
sbb
cmp
insl
xor
jb
jg
push
pop
dec
ja
lds
ds
dec
mov
ret
cmc
popf
pop
sbb
xorl
mov
je
mov
sub
lret
lds
pusha
mov
mov
jno
dec
inc
call
sarb
inc
or
ficoms
mov
cld
in
mov
jecxz
mov
dec
ret
imul
out
in
inc
dec
int
and
sub
loope
mov
fdivp
les
bt
mov
xchg
icebp
jns
mov
aam
daa
lock
lock
push
mov
dec
insb
xor
les
mov
sub
and
mov
mov
loope
mov
add
rorb
fildl
test
lock
arpl
lret
jb
outsl
pop
cltd
ffreep
outsl
into
repnz
cmp
pop
mov
int
aam
dec
inc
xchg
lahf
pop
ficoms
data16
out
xor
ss
sub
es
mov
inc
idivb
int
and
dec
subl
cmp
cmpsb
push
mov
adc
inc
mov
rorl
fnstsw
enter
outsl
iret
or
mov
cld
movsl
adcb
mov
or
xor
ljmp
add
aas
repz
in
jbe,pn
shlb
add
pop
dec
push
rol
dec
xchg
aad
fidivs
int
lds
js
dec
jecxz
cli
or
jg
ljmp
inc
add
push
ss
out
stos
mov
mov
cmpsb
mov
std
xchg
fsts
arpl
push
jae
mov
or
pop
mov
jnp
movsl
bound
ds
or
into
aaa
adc
and
stc
hlt
pushf
mov
lahf
popa
mov
inc
add
cmp
outsb
nop
pushl
lahf
mov
xchg
xchg
dec
stc
lcall
xchg
pop
dec
dec
aaa
subb
es
mov
jnp
sub
xchg
outsb
and
pop
xor
adc
lea
mov
cmp
pop
adc
mov
addl
test
call
stc
loop
sub
mov
push
sbb
jmp
mov
cmp
pop
into
popf
add
fdivr
roll
pushl
xchg
lods
push
pop
adc
add
outsl
pop
stc
sti
mov
lahf
sarl
ljmp
inc
hlt
nop
repz
jp
enter
js
mov
pop
hlt
adc
and
lahf
lret
jge
xchg
cmc
aaa
divb
xor
or
arpl
jl
movsl
ret
cwtl
bound
or
sub
mov
shll
pop
aam
adc
and
sub
rclb
adc
flds
int
idiv
sbb
arpl
in
fdiv
and
or
xchg
int3
jns
cmovnp
push
xor
inc
adc
and
loope
dec
mov
loope
cmp
sbb
insb
or
inc
std
xchg
adc
cmp
jle
xchg
test
mov
sbb
push
add
int3
adc
data16
mov
add
adc
mov
pop
push
fs
sub
pop
dec
movb
add
cmp
jae
repnz
out
or
inc
push
add
popf
fistpll
pop
fistl
inc
adc
ret
mov
fs
cmp
int
and
xchg
mov
jo
xor
mov
cmp
test
pop
loop
mov
out
scas
mov
or
cmp
add
mov
neg
sbb
data16
pusha
dec
jmp
mov
and
loope
test
xchg
mov
arpl
pop
fisttpll
mov
inc
out
cwtl
std
jmp
pushf
imul
cmp
test
fwait
shrl
xchg
mov
mov
out
jb
adc
xchg
call
pusha
cmpb
or
imul
pop
or
aam
cmpb
ret
int3
lods
xor
mov
mov
cmp
add
lret
jmp
sbb
repz
imul
dec
jno
pop
test
sti
mov
imul
cli
shrl
cmpsl
popa
and
mov
and
in
loope
cmp
dec
mov
rcrb
movsb
xor
out
dec
aam
push
xor
jmp
push
popa
or
mov
mov
jnp
mov
sbb
repz
pop
and
push
dec
inc
call
mov
mov
dec
fcoms
and
pop
push
mov
jl
sahf
jnp
insl
jne
push
cmp
xor
popl
sbb
sub
cli
insl
push
insl
xor
stos
jecxz
fcmovnu
out
jbe
enter
mov
fninit
jle
inc
ret
lock
xchg
bound
sar
push
inc
outsl
xchg
add
push
mov
ficoms
data16
stos
and
and
xchg
sbb
nop
inc
push
aad
sarb
shll
add
dec
xchg
push
jecxz
push
loope
movsb
cmp
lods
push
mov
ret
outsb
shlb
xchg
lock
cld
push
popa
nop
jnp
jecxz
adc
xor
in
in
xchg
or
cmp
push
std
cwtl
inc
sbb
inc
lcall
arpl
jp
int3
call
in
enter
int3
xor
push
push
imul
fbstp
mov
pop
xchg
shll
adc
mov
inc
push
push
data16
out
cmpsl
sahf
ret
out
cmp
mov
inc
out
gs
out
leave
sub
jbe
dec
into
lds
inc
push
adc
imul
test
fimull
call
in
xchg
popa
js
lds
call
pop
adc
fildl
xor
lock
dec
shll
push
push
insb
pusha
and
inc
pushf
data16
das
cmp
test
mov
mov
lret
xorl
sub
fnstcw
clts
mov
jns
xchg
inc
jno
test
mov
ret
dec
push
sahf
ret
arpl
insb
adc
sub
pop
pop
aad
sbb
shll
jecxz
push
mov
std
sub
fisttpl
mov
rcrl
test
xchg
stos
sub
push
sbb
push
sub
popa
sarb
sub
xor
insl
stos
in
int
inc
cmpb
cmp
adc
push
and
mov
cld
sbb
les
and
xor
pop
mov
loope
shrl
ljmp
adc
cmp
in
jne
sub
repz
neg
aas
outsl
adc
cld
dec
test
adc
aaa
and
adc
ret
les
and
adc
mov
sub
data16
ja
mov
sbb
pop
cmp
outsb
or
das
lds
aam
mov
xor
and
sbb
movsb
imul
mov
xchg
mov
mov
and
jmp
pop
push
sbb
adc
mov
jmp
fisttpl
out
xchg
xchg
pop
push
dec
mov
sub
cmp
decb
wrmsr
or
sti
cmc
stc
ds
mov
xchg
inc
push
fwait
lods
inc
roll
outsb
fsts
push
enter
mov
sbb
cmp
lea
js
cmp
repnz
mov
inc
nop
cmp
dec
loop
sub
inc
mov
pop
pushf
sbb
shlb
adc
jecxz
mov
adc
xor
mov
scas
imul
adc
out
adc
add
xchg
leave
aam
xlat
adc
xor
push
mov
iret
adc
ret
sti
loopne
jbe
mov
adc
lea
sbb
es
inc
movsb
sbb
das
rcll
add
negl
test
out
lock
add
mov
mov
inc
fldl
adc
adc
sbb
cmpsl
or
push
xor
mov
movsb
out
xor
lods
pop
pop
jae
out
dec
pop
dec
pop
testb
jo
insl
stos
xchg
xchg
push
das
bound
mov
pushf
inc
into
mov
lods
mov
cmpl
xor
xchg
push
and
mov
xchg
hlt
cmp
inc
rolb
mov
jp
sets
jo
dec
jnp
pop
sub
mov
rcrb
pop
jns
or
popf
in
outsl
sub
mov
je
leave
sbbb
jo
jp
iret
ret
repnz
xor
jp
rorb
stos
and
mov
xchg
lahf
rclb
mov
test
and
cmpsl
fcmovnbe
loopne
sbb
pop
test
or
loope
out
lods
pop
dec
leave
stos
fldenv
lahf
into
inc
aaa
mov
sub
jl
movsl
cmp
pusha
mov
push
push
xchg
in
xor
xchg
lahf
push
add
movl
fcomps
xchg
jne
and
sub
push
es
adc
sub
cltd
and
adc
ds
jne
xor
mov
xchg
loopne
lret
repnz
adc
sbb
in
fdivrs
aaa
daa
ds
cmp
add
or
int
into
andl
popf
movsl
xchg
jmp
icebp
and
out
lds
lds
sbb
fldt
repz
aaa
xchg
push
push
bound
dec
sub
sub
stos
dec
in
adc
iret
sahf
enter
js
pop
mov
stc
sub
jmp
sbb
and
pushf
call
daa
mov
inc
sahf
push
fsubp
jnp
jge
shlb
dec
xor
mov
or
xchg
jns
sahf
outsb
fistpll
or
xor
shl
adc
push
inc
jnp
scas
pop
fs
mov
push
shrb
xchg
add
pop
bound
cmp
loop
mov
xor
fistpll
mov
shrl
adc
mov
sarb
or
push
test
push
into
cld
adc
pop
ss
testb
aad
and
jbe
arpl
lods
call
out
mov
shrl
add
fs
and
dec
and
cmp
lcall
das
sbb
mov
jg
pusha
arpl
aam
mov
jb
mov
fcoml
pop
fidivrl
bound
sub
and
push
dec
add
das
add
insb
push
fs
push
mov
adc
in
lods
pop
jl
pop
push
imul
jae
pop
mov
cmpsl
in
orl
adc
sub
cmp
xchg
jp
xchg
sahf
pop
shrl
divb
mov
push
lret
and
add
mov
aaa
lahf
stos
mov
xor
rcll
lcall
dec
xor
fwait
mov
xor
daa
outsb
cli
jmp
fwait
icebp
lods
mov
jg
je
xchg
cmp
add
sbb
test
or
xor
cmpsl
pop
fistps
fnstsw
test
sbb
mov
adc
mov
inc
xor
loop
int3
cmc
jle
xchg
lea
subl
pusha
push
mov
insb
cld
jne
and
arpl
lods
sti
sub
xchg
fisttpll
stc
jg
jge
in
fs
test
out
sub
mov
cli
dec
ja
nop
decb
lret
fidivrl
in
mov
mov
insb
in
cmp
push
ficoml
adc
enter
push
ljmp
jb
dec
adc
and
das
loopne
pop
cmp
sahf
lods
sbb
inc
mov
psubq
out
bound
in
dec
in
cmp
pop
pushl
xchg
adc
inc
xrelease
cmp
movsl
aaa
mov
loop
jno
test
dec
into
cltd
ljmp
pop
jbe
ljmp
rcr
mov
out
sbbb
mov
ficoml
sbb
push
enter
movsb
adcl
in
les
xchg
enter
or
sbbb
push
push
mov
mov
lret
rcrb
fnsave
sahf
in
push
shl
pushf
dec
dec
test
hlt
push
fwait
xor
cltd
sbb
push
pop
in
mov
cli
popf
push
push
adcb
cmpsl
ret
push
imul
inc
adc
movsb
repz
repnz
jae
sbb
mov
push
call
cmp
loop
sbb
or
mov
stc
ds
scas
jbe
in
mov
dec
push
jp
adc
add
fsubrl
mov
cs
fnstcw
jb
cmpsl
xchg
and
push
scas
push
jns
imul
sub
add
aad
test
data16
or
addr16
sti
outsl
cmpsl
adc
push
xlat
jne
into
and
pop
and
inc
pop
pop
fsubrs
fwait
inc
in
negb
add
lahf
pusha
mov
insl
sbb
cmc
les
mov
xor
jnp
adc
ds
lock
mov
sub
popf
movsl
cltd
out
dec
mov
adc
mov
mov
out
in
push
cld
imul
jecxz
push
fwait
cmpsl
dec
addr16
int3
jecxz
ret
in
sbb
sbb
std
fistpl
jns
addr16
mov
fs
push
mov
push
and
push
push
loopne
inc
adc
cmp
xchg
sahf
inc
xchg
xchg
jmp
icebp
mov
and
inc
jne
cmpsb
dec
sub
cs
and
xchg
cmp
sub
lock
lahf
mov
or
popa
or
and
icebp
adc
add
ret
dec
gs
ss
lahf
mov
xchg
daa
fisttpll
mov
xor
pop
jae
push
rorb
mov
mov
push
pop
cmc
jb
push
or
pushf
mov
test
cs
in
xor
fcoms
jbe
popa
js
es
dec
into
dec
outsl
sbb
dec
sbb
adc
sarb
dec
iret
or
es
mov
test
bound
popa
leave
and
sub
mov
dec
dec
loop
sub
fneni(8087
xchg
inc
jp
imul
xchg
mov
test
dec
jge
push
xchg
mov
faddp
scas
cli
pop
dec
outsb
scas
shrl
lods
and
cmp
cmpsb
aad
add
int3
fbld
rclb
mov
fwait
dec
repz
jnp
scas
push
leave
push
or
push
js
adc
xchg
xchg
arpl
push
and
ljmp
lret
cmp
inc
test
inc
int
shl
cmp
out
out
xor
ret
adc
hlt
popa
inc
fs
jle
daa
sub
test
push
inc
and
cmp
mov
cld
mov
mov
int
or
xor
repz
fmuls
stos
mov
mov
lret
pusha
sti
popa
jl
cmp
xchg
and
call
ror
xor
in
loope
sti
xchg
nop
push
add
icebp
ret
mov
push
sub
xor
add
dec
gs
mov
loope
mov
ljmp
mov
bound
shr
aas
stos
or
adc
sbb
and
cmp
adc
les
icebp
jo
imul
pushf
push
xchg
xor
pop
ds
or
repz
pop
inc
aaa
repnz
jno
jmp
adc
or
out
not
pop
mov
call
loopne
gs
loop
xor
stc
inc
pop
in
cmp
popl
pop
xchg
cs
ds
push
rcll
xchg
out
daa
pop
mov
dec
mov
pop
adc
movsl
cli
sti
mov
je
incl
push
dec
scas
push
jbe
sbb
repz
fs
nop
leave
push
ljmp
or
push
stc
repz
xor
and
fcoml
sbb
and
aas
ljmp
fnstenv
dec
jle
or
xchg
js
rolb
mov
hlt
cmpsb
xor
push
es
adc
lods
xor
cmpsb
pop
jns
or
repz
cwtl
out
mov
sti
imul
xchg
jp
test
fs
fadds
shrl
pop
dec
fwait
clc
pop
repz
push
add
jge
jge
movsb
bound
xor
lods
movsb
push
adc
mov
lcall
cmp
mov
inc
nop
scas
push
ja
dec
or
ja
outsb
add
dec
fldl
mov
mov
iret
mov
or
out
jmp
add
cs
push
insl
popf
push
pop
dec
daa
add
outsb
mov
outsl
sarl
scas
loop
sub
pop
sub
or
dec
clc
or
es
les
sbb
andb
adc
into
cs
popa
pop
enter
push
xor
xchg
xchg
inc
pop
leave
shlb
aad
xor
jbe
push
pop
dec
leave
aas
hlt
mov
jae
ror
push
addl
popf
mov
sti
outsb
xchg
shrb
adc
cmp
ljmp
mov
clc
aas
cmc
push
bound
stos
jmp
jnp
aaa
adc
adcl
jae
ret
repnz
pusha
fstl
adc
das
pop
cmp
push
repz
cmpsl
add
out
mov
inc
xchg
int3
leave
es
add
fsubr
je
cmp
sub
mov
fst
or
fbstp
mov
lret
lods
pop
add
pop
push
je
mov
dec
inc
mov
xor
sub
lods
pusha
dec
icebp
sbb
xor
mov
sbb
cwtl
ljmp
cmp
jb
fdivl
inc
scas
pop
push
sub
xchg
pop
les
stos
pop
lods
cmp
rolb
cmp
xchg
rcll
xor
jge
fstps
adc
sub
inc
mov
mov
mov
lds
jl
in
jp
stos
test
push
roll
movsb
bound
clc
push
cli
rorl
test
shrl
subb
xchg
xlat
cmpsl
adc
xorb
mov
ret
pop
mov
and
add
cmp
fisubrl
adc
push
ljmp
sub
and
movsb
dec
mov
adc
pusha
inc
and
push
jbe
mov
out
cmp
cld
and
jno
ja
ffree
push
jecxz
sub
sub
je
dec
inc
lret
mov
sub
je
jae
and
lods
mov
push
les
lds
dec
into
cld
popa
mov
aaa
bound
dec
inc
shll
xor
adc
cmp
jmp
dec
fiadds
fdivs
push
loopne
stos
mov
jle
inc
mov
lods
lret
mov
inc
jge
in
aad
jne
inc
push
lods
adc
out
or
bound
pushf
ret
iret
sub
mov
rcll
mov
mov
push
and
mov
pusha
add
sub
out
xor
test
mov
push
leave
repnz
jmp
cmpsl
aad
mov
push
fiaddl
dec
mov
in
sub
aas
mov
jl
push
sub
mov
mov
lcall
in
enter
jae
push
xchg
fisttpll
xor
imul
pop
mov
popf
add
fmull
lahf
jp
es
lock
test
daa
sbb
push
cmpsb
orb
and
gs
push
cwtl
jp
dec
pop
stos
clc
je
mov
loop
movsb
push
mov
adc
jmp
int3
mov
sub
push
popf
sub
mov
hlt
cli
arpl
and
icebp
lahf
lret
jg
fldcw
pop
push
adc
insl
sbb
sub
addr16
mov
xlat
xor
lret
add
xor
lods
xchg
imul
test
das
and
hlt
pop
inc
in
fcmove
mov
fwait
add
fldl
mov
push
adc
dec
testb
ja
mov
adc
mov
into
lahf
stc
aam
or
dec
inc
shrd
adc
jno
pop
mov
cli
fstps
push
mov
std
mov
filds
sbb
sub
out
xchg
cmpsl
mov
cmp
jae
fsubrl
lea
xorl
adc
ss
fsubrs
cmp
in
shl
neg
mov
sub
inc
imul
pop
rorl
scas
pop
insb
lock
mov
xchg
idivl
jno
mov
pusha
xor
push
jns
jmp
mov
xchg
fdivrl
jbe
sub
push
adc
shrl
dec
sub
jns
cmp
and
sti
pop
sub
test
cwtl
enter
std
fs
clc
orb
and
cs
adc
cmpb
subb
xchg
push
inc
pop
lea
push
push
push
adc
inc
into
ret
mov
mov
pop
repnz
cs
adcl
sbb
mov
pop
dec
push
xchg
jno
inc
sbb
sbbb
jnp
cmp
movsb
inc
iret
or
and
mov
rcll
sbb
out
lcall
out
jl
sub
xor
cmc
xchg
jb
pop
notl
pop
mov
adc
and
cmp
jb
std
dec
sub
or
push
dec
stos
cli
call
loopne
ljmp
mov
dec
jge
fs
mov
sti
fs
mov
jmp
or
pop
arpl
scas
scas
jnp
sub
adc
push
xlat
enter
in
dec
stos
rcrb
jecxz
or
gs
ss
hlt
js
or
inc
pop
daa
jp
push
and
adc
cmc
mov
inc
sbb
pop
push
negl
mov
arpl
push
or
enter
xchg
fsubp
jno
sub
repnz
dec
push
jp
sbb
pop
addl
mov
aas
iret
jns
es
pop
sti
imul
cmp
adc
mov
enter
out
pop
mov
mov
xor
lea
or
in
mov
mov
adcl
fdivrs
test
lock
cli
addr16
outsl
stos
push
jp
jno
mov
cmp
cmp
sub
outsl
mov
adcl
ret
fcoms
or
fistps
shrl
sti
adcb
test
iret
and
out
popa
movb
std
rorb
xor
mov
leave
xchg
mov
cmp
test
int
clc
sub
out
sbb
xor
imulb
cwtl
inc
pop
inc
jae
jl
xchg
mov
scas
in
xchg
aaa
andb
stc
in
cmpb
mov
push
sub
pop
nop
mov
insb
xlat
mov
add
dec
adc
lahf
push
es
or
and
lcall
mov
popa
inc
call
movsb
into
pop
pop
test
mov
test
cmp
mov
data16
push
stos
sbb
or
jp
dec
inc
jle
xor
mov
sarb
aam
lods
adc
jp
xor
sub
ljmp
hlt
mov
out
cld
cmpsb
jmp
add
fninit
scas
add
mov
push
push
or
sub
subl
sub
mov
mov
mov
mov
loope
push
jne
push
dec
loope
inc
sbb
pop
lret
imul
inc
dec
push
leave
push
out
inc
inc
pop
mov
call
push
cmp
jnp
repnz
push
rclb
and
popf
mov
scas
daa
sbb
mov
mov
jns
icebp
sahf
inc
xor
cs
push
jno
ljmp
inc
ja
lds
xchg
push
ja
mov
cmp
adc
orb
mov
outsb
scas
movsw
lcall
jmp
leave
mov
xchg
ret
pusha
mov
jnp
push
rorl
push
xchg
xor
jp
shrb
xchg
dec
shrl
fistps
cmp
pop
cltd
and
dec
sub
xchg
movsl
pop
pushf
fs
xchg
rcrb
lods
sbb
test
sbb
arpl
cmpl
fwait
je
xchg
or
cmp
add
or
cmpsb
jb
mov
cwtl
dec
jle
les
jmp
mov
mov
pop
lcall
xchg
mov
arpl
sbb
jbe
sti
xchg
mov
cmp
or
xor
push
pop
fmuls
mov
insb
mov
adc
cmpl
or
nop
inc
lret
mov
fnstcw
inc
dec
push
xchg
dec
nop
cmp
test
jl
cli
fmuls
movsl
mov
into
in
adc
mov
movsl
jmp
dec
mov
ljmp
xchg
add
mov
fwait
add
nop
loop
sbb
cmp
pop
adc
into
iret
fmuls
loop
or
jecxz
push
stos
push
test
push
mov
xchg
arpl
sub
xor
mov
xor
es
test
aas
mov
mov
add
ds
int3
mov
outsb
dec
jmp
icebp
aam
jl
or
xchg
call
push
push
jmp
xor
xor
dec
sarb
mov
rorl
xor
xchg
in
mov
int
sahf
xchg
mov
cld
stos
or
hlt
dec
pop
aas
dec
add
mov
aaa
xor
in
mov
push
test
cmp
adc
icebp
pop
pop
int3
add
ja
or
add
dec
imul
fprem
out
sbb
ret
imul
adc
movsb
xor
int
cmp
fstpl
sub
iret
jnp
adc
cli
int
movsl
and
sahf
scas
sti
adc
mov
mov
or
sub
ds
addr16
or
loopne
jg
lcall
cltd
push
sub
jne
dec
subl
and
fistpll
nop
xor
mov
imul
fst
push
ds
incl
cs
fstps
fsubrp
repz
in
jbe
cmp
xor
cmpsl
repnz
dec
shr
inc
cld
clc
bound
std
cmpl
adc
stos
jecxz
ret
add
pop
arpl
jbe
inc
es
xor
repz
mov
mov
test
cli
and
xchg
push
push
push
mov
les
sub
push
into
cld
scas
push
inc
jbe
jae
ja
jae
out
mov
and
loop
sub
push
inc
mov
sahf
and
and
xor
mov
dec
jns
lret
cmc
jl
cmpsl
int
fisubrl
mov
icebp
add
mov
pop
xchg
into
mov
xor
jecxz
xor
xchg
arpl
mov
jp
xor
inc
mov
mov
push
inc
addr16
arpl
sub
mov
mov
negl
shrl
and
lret
xor
cmp
jecxz
ds
into
test
inc
cs
add
ret
sub
pop
dec
xchg
bound
arpl
inc
lret
loope
mov
mov
popl
jecxz
push
xchg
jl
into
or
fwait
nop
call
ds
and
fmulp
cmp
xor
aas
flds
push
lock
xchg
dec
shlb
popf
adc
push
insb
jecxz
push
mov
test
std
inc
pop
push
cmp
mov
cmp
sbb
mov
imul
cmpsb
mov
cmp
movsb
xlat
cmp
nop
jle
jecxz
aaa
cmp
repz
into
lods
xor
push
orl
lods
std
lcall
mov
push
dec
mov
jnp
mov
push
data16
pop
xchg
shlb
mov
cmp
sbb
fnstsw
aaa
sbbl
scas
xchg
mov
or
mov
enter
mov
jmp
add
cs
mov
adc
jns
leave
int
mov
in
add
adc
mov
ja
pop
pop
icebp
xchg
movsl
adc
push
dec
repz
ret
sub
shrb
sub
imul
push
subl
push
aaa
pop
cli
jmp
push
push
test
xor
sub
lock
lahf
pop
decl
std
jmp
jbe
movsb
scas
jge
pop
scas
and
test
pop
cmp
int3
cmp
ret
mov
adc
pop
fidivrl
dec
push
dec
or
daa
xor
mov
fildl
hlt
dec
sub
jmp
mov
lea
rcr
mov
xchg
cmp
mov
in
leave
xor
fstpl
std
pushf
lock
ljmp
les
cmp
adc
xchg
and
adc
insl
lock
cmp
lock
cltd
cmpsl
xchg
xchg
popf
lods
std
mov
sub
and
and
mov
out
cmp
hlt
mov
xor
cmp
cwtl
in
nop
mov
je
sti
cmp
sbb
scas
shrl
fistpl
inc
or
push
xor
xchg
push
cltd
xchg
fnstsw
int3
ljmp
lds
repz
fnstcw
negl
push
mov
jbe
cld
test
je
pop
jbe
mov
test
clc
das
push
popf
sbb
mov
pop
jae
lds
and
jo
clc
aad
inc
cltd
jmp
stc
mov
in
sub
outsb
dec
dec
sub
adc
divl
hlt
pop
jo
popa
adc
subb
mov
test
loope
sub
ljmp
mov
repnz
add
fwait
mov
outsb
xor
mov
outsl
dec
inc
push
sbb
loop
jnp
aam
popa
jbe
and
mov
subl
add
pop
int3
xlat
imul
mov
data16
dec
in
and
add
js
adc
jecxz
mov
xor
mov
mov
jl
mov
push
test
gs
pop
mov
fwait
cmp
sbb
dec
jnp
add
loope
pushf
jno
and
sbb
call
pop
idivl
mov
sbb
push
adc
dec
mov
jno
in
movsl
out
pop
bound
jmp
imul
loopne
mov
inc
sbb
ja
dec
fdivrp
xchg
pop
cmp
in
pop
fisubs
add
push
jb
dec
popw
mov
dec
or
mov
cmpsl
shl
and
je
idivl
in
fsubr
or
filds
pop
ljmp
push
scas
mov
lret
dec
push
out
aaa
flds
sub
loopne
mov
fstpl
dec
gs
xor
mov
xchg
scas
into
dec
test
dec
jg
lods
jnp
pop
inc
test
add
pop
in
xchg
inc
sbb
rolb
xor
packssdw
loop
push
repnz
mov
push
out
arpl
pop
iret
push
out
sbb
ret
mov
cmp
and
les
mov
int
and
std
movsl
movsb
xor
scas
adc
pop
mov
mov
jnp
mul
popa
adc
imul
test
fidivrl
sbb
or
mov
push
dec
push
insb
inc
cmp
mov
jbe
lret
and
ret
orl
push
xchg
xchg
add
push
pop
loope
jge
out
xchg
jnp
hlt
imul
int
mov
dec
adc
xor
scas
add
fs
insb
cwtl
xchg
addr16
inc
pop
lods
mov
add
aaa
fwait
mov
clc
in
or
jne
mov
inc
pop
jl
and
aam
mov
push
mov
sbbb
movsl
lret
and
rcrl
popa
ret
xlat
push
sub
into
mov
xchg
and
addl
or
andb
xor
movsb
and
push
add
loopne
imul
push
sbb
jnp
jno
or
and
aad
or
repz
pop
add
insl
test
and
lods
aad
xchg
push
adc
clc
mov
jg
inc
pop
dec
shlb
aam
cmp
jecxz
fsts
daa
mov
mov
bound
xor
arpl
jne
mov
mov
xor
orl
cld
mov
cmp
pop
andl
sbb
sarl
lods
jae
aad
mov
mov
rclb
imul
xchg
xor
mov
arpl
cs
mov
pmaxsw
insl
into
gs
xor
testb
mov
inc
ss
xchg
cmp
cld
jecxz
push
out
push
mov
out
std
dec
mov
cmp
pop
sysexit
stc
cld
cli
insl
shlb
push
dec
into
inc
fwait
pop
lods
ljmp
cltd
fwait
scas
inc
js
fistps
dec
dec
ja
fisubrs
mov
jno
adcl
mov
jb
push
cmp
out
popf
and
xchg
repz
cmp
shlb
fisubrl
cltd
jmp
push
mov
hlt
imul
cld
pop
sbb
mov
retw
cmp
mov
aam
addb
enter
or
in
jns
mov
sub
cmpsl
js
out
sbb
push
popa
out
into
mov
mov
das
add
cmpsl
inc
mov
sbb
adc
or
ficomps
push
jecxz
adc
arpl
in
mov
xchg
dec
lds
add
push
or
insb
test
pop
mov
fucom
sahf
std
pop
fs
pop
sbb
push
std
mov
push
iret
mov
or
mov
nop
xchg
xlat
mov
push
adc
shrl
push
sbb
add
scas
jno
jg
push
cmp
cltd
pop
aad
pop
imulb
sbb
and
inc
mov
rclb
sti
into
sahf
inc
or
push
adc
test
not
ret
pushf
jnp
and
cmpsb
lds
add
ss
fcomps
fwait
adc
mov
jb
fwait
xchg
add
push
adc
lods
ss
ja
setbe
out
add
push
stos
int3
mov
lods
mov
jecxz
inc
or
ja
cmp
addl
out
add
mov
inc
loope
mov
into
jnp
dec
fists
stos
jno
inc
sbb
jbe
imul
xchg
inc
fcmovnu
popf
jns
lock
mov
mov
xor
in
loopne
mov
xor
xchg
push
mov
outsl
scas
ds
mov
inc
test
jp
add
ljmp
ljmp
iret
push
inc
mov
pop
pop
out
sbb
icebp
lahf
push
in
mov
mov
sbb
mov
fcmove
cld
pusha
jbe
insb
push
jge
push
inc
in
push
rorb
leave
arpl
repnz
fwait
sbb
scas
mov
mov
fadds
iret
xor
xchg
mov
cmpl
sbb
jmp
mov
jl
xor
or
test
inc
fstpl
sahf
repz
add
loopne
dec
pushf
mov
rcrb
cs
pop
mov
in
mov
jnp
mov
sub
pop
scas
fsubrs
mul
pop
jb
mov
push
ds
push
ds
and
je
sbb
mov
push
mov
and
jne
arpl
cld
cmp
fcmovu
out
xor
mov
ror
cmpsl
xchg
push
add
mov
adc
mov
jp
cmp
hlt
subb
sub
xchg
xchg
add
and
dec
jg
pop
mov
and
mov
pop
callw
jne
push
stos
inc
push
jo
int3
pop
in
pusha
incb
pop
mov
mov
pop
sbb
mov
or
dec
ja
int
mov
inc
cs
nop
sahf
push
add
in
sbb
and
aad
pop
mov
mov
xlat
mov
and
xchg
push
dec
test
mov
jecxz
lea
repz
movsb
dec
punpcklwd
into
mov
mov
leave
mov
out
sarl
mov
jbe
aaa
ljmp
fs
cmp
and
mov
add
add
flds
nop
nop
jbe
sbb
jge
xchg
orb
js
dec
xchg
add
es
xchg
or
sbb
out
loopne
inc
inc
mov
jae
mov
jno
orl
push
out
jmp
cmpsl
sbb
xlat
jo
imul
lcall
dec
mov
mov
int3
push
jmp
cmp
sub
cmpsl
sub
fs
cmp
daa
cmp
mov
test
cmpsb
divl
jg
lret
hlt
and
xor
loopne
fiadds
stc
and
shl
xor
out
cli
movsl
xlat
push
je
mov
subb
inc
or
mov
dec
and
ret
hlt
addr16
js
and
mov
pop
pushf
mov
adcb
aaa
addr16
jl
test
or
mov
add
inc
sbb
insb
or
push
push
ret
add
inc
mov
jl
xchg
lods
mul
jecxz
cmc
aas
in
and
xor
cltd
or
test
in
mov
cmpsl
add
ret
movsl
test
ja
and
jp
jne
mov
sbb
fsubrp
clc
std
rcrl
mov
and
fdivs
adc
aad
sti
aad
jne
aaa
lcall
push
xchg
and
in
mov
fbld
leave
hlt
sbb
lahf
arpl
dec
aaa
pusha
stos
fistl
jg
sbb
adc
inc
scas
test
insl
jne
push
add
insb
int3
shlb
test
or
mov
imul
dec
fldenv
mov
cmpsb
mov
mov
orb
fadd
stos
jmp
idiv
lcall
push
xchg
cli
jecxz
subb
or
aas
test
push
aam
clc
pop
sub
push
jp
or
rolb
xchg
mov
out
dec
sbb
xor
rcrb
and
push
stos
inc
call
es
hlt
xchg
sub
js
idiv
mov
dec
ss
ror
fnsave
sar
push
xchg
hlt
push
mov
cmpb
lea
stc
push
pushf
adc
push
stos
mov
outsl
jnp
adc
rorl
mov
adc
fmuls
test
leave
icebp
cmp
les
sbb
jo
add
sbb
sbb
sti
sahf
stos
aas
ja
mov
repz
mov
push
leave
enter
mov
mov
out
cs
mov
cli
icebp
mov
bound
mov
or
loop
call
leave
cmp
xor
cmpsb
ret
inc
and
shrb
adcb
or
jle
jnp
fldcw
dec
push
mov
vpaddusw
loop
stos
fwait
ds
lods
adc
in
cs
or
jns
sbb
rclb
lds
in
sti
loopne
inc
lret
sbb
pusha
mov
push
cmp
push
subl
loopne
aam
mov
jge
adc
jno
mov
jge
shr
fs
inc
push
rorl
fnstcw
aaa
out
shl
cmp
cli
mov
pop
push
push
mov
fcoml
xchg
enter
pop
jmp
in
push
mov
aam
pop
inc
pushl
xchg
add
or
mov
lock
pop
fdiv
jno
push
sbb
jmp
pop
mov
ds
adc
test
test
push
fwait
mov
call
gs
scas
sbb
xchg
test
jne
fimuls
sbb
lds
std
test
loope
sub
dec
lods
aaa
jg
mov
addb
sahf
push
mov
mov
push
dec
dec
add
mov
add
das
jnp
jmp
cmp
arpl
out
mov
push
jecxz
sbb
sbb
aam
sahf
imul
filds
mov
loop
or
cmpsb
in
and
bound
jmp
pop
or
add
dec
pop
subl
push
add
repz
cmc
push
stos
popa
push
in
loop
mov
push
fidivrs
cltd
mov
pusha
lahf
xchg
ss
arpl
clc
subb
or
push
cmpsl
ja
jecxz
ja
pop
push
cmp
test
xor
call
loope
test
fdivs
pusha
mov
pop
adc
js
loop
add
inc
lret
inc
cmp
xchg
sub
add
loope
lds
xchg
add
movsl
repz
mov
mov
push
ret
std
push
sti
mov
xchg
sarb
pop
in
inc
pop
ret
movsl
xor
into
or
insb
iret
dec
cmpsb
lret
mov
push
and
or
push
adc
jb
adc
xchg
icebp
xlat
cmpl
xor
mov
mov
mov
inc
stos
arpl
out
subb
aad
dec
pop
testb
fcompl
inc
out
rorb
sbb
push
cmpsl
or
je
jns
out
int
add
jecxz
test
mov
ss
andb
sbb
je
push
add
scas
ret
sbb
mov
imul
inc
sub
fsubs
lea
mov
ror
test
jmp
xchg
xchg
lods
mov
pop
mov
mov
mov
mov
pushf
dec
inc
filds
idiv
sbb
rcrl
nop
adc
sbb
and
test
or
sbb
clc
cmp
dec
pop
add
mov
idivl
mulb
push
loop
jb
subb
sahf
pop
mul
ret
movsb
xchg
out
imul
jmp
sub
jnp
lods
pop
cmp
into
outsl
lcall
push
pop
adc
push
mov
stc
mov
ret
pop
xor
andb
pop
pop
lret
imul
imul
dec
data16
in
push
stc
add
sti
sti
fwait
mov
pushf
fbld
inc
push
and
jge
mov
ja
add
pop
xchg
inc
addb
push
pop
mov
xor
repz
out
addb
sbb
sbb
mov
loopne
rcr
popf
int3
push
test
icebp
mov
pop
shll
push
das
cli
arpl
popa
adc
shlb
jp
push
lret
cmp
stos
mov
mov
sbb
roll
imul
stos
lcall
popa
and
arpl
data16
in
fcompl
fbld
inc
mov
frndint
ja
xchg
mov
lods
dec
mov
ret
rcr
xchg
inc
in
jne
xchg
push
movsl
add
in
pop
dec
sub
mov
cld
jns
inc
cld
sbb
sarb
mov
ss
lahf
xchg
sbb
pop
pop
iret
sub
sbb
out
push
in
sbb
or
dec
addb
adc
push
jne
dec
sbb
loopne
das
sbb
popf
inc
add
data16
xchg
sbb
pushf
addb
in
cs
scas
cmp
sbb
cmp
sub
sub
in
nop
bound
push
mov
inc
sub
cli
test
iret
fiaddl
pop
cmp
xor
sub
testb
lods
sub
je
dec
clc
rorb
inc
cmp
ljmp
dec
dec
lock
fmull
and
pmuludq
insl
pushf
cmp
xchg
rorl
lods
mov
and
jbe
mov
test
js
sahf
push
loopne
rcl
stc
xchg
jno
cmpsb
data16
sub
cmp
insb
sub
sahf
mov
stos
ret
sahf
pusha
dec
fwait
nop
outsl
push
or
testl
xlat
mov
pop
shlb
push
out
ljmp
xor
addr16
fbld
mov
dec
mov
and
dec
inc
and
push
jnp
loope
cmpsl
mov
cmpsl
sbb
sarl
mov
out
test
jne
xchg
mov
int
scas
stos
mov
inc
setns
mov
and
adc
sub
stos
adc
in
pusha
imul
cmp
pop
dec
cs
pop
xchg
test
push
stos
in
or
pop
loope
stc
dec
add
add
adc
dec
cmp
sbb
inc
stos
stos
cld
mov
jl
mov
adc
fsubr
and
push
jle
sub
out
adc
mov
scas
sub
leave
out
inc
jno
hlt
fistl
shrl
fcompl
sbb
out
push
call
push
lock
rclb
mov
ja
popa
mov
jno
cmp
sbbl
popa
pusha
dec
loop
jecxz
push
ds
rcrl
pop
repnz
stos
fidivs
or
mov
dec
stos
xchg
cltd
add
mov
lea
int
cmp
sbb
xchg
scas
or
cmp
cmp
icebp
in
mov
scas
das
rorl
xor
sbb
rcr
xchg
pop
leave
dec
std
and
cmp
xchg
xor
daa
pop
cld
pop
stos
jge
xchg
xchg
sbb
xlat
mov
push
test
xor
xor
inc
dec
enter
movsb
fs
addr16
inc
lods
enter
mov
or
movsb
es
xor
pop
jg
push
xchg
data16
xchg
fsubp
in
xorb
push
fisttpll
sti
jmp
push
adc
jae
cmpsl
jmp
pusha
add
push
jno
pop
dec
mov
or
or
xor
pop
and
jmpw
jb
mov
push
orb
test
mov
add
mov
and
not
insl
test
jbe
mov
repz
stos
sub
pop
jp
test
adc
test
sub
cmc
aaa
jecxz
call
pop
fnstsw
cmpsl
adc
movsl
fs
movsb
or
movsl
mov
inc
pop
adcl
outsb
into
imul
add
push
movsl
stos
jns
mov
test
es
push
jecxz
sbb
sarb
enter
push
dec
jb
pop
mov
cmc
adc
aaa
aas
push
and
addr16
mov
jo
or
adc
les
jge
xor
jns
pop
jo
add
push
dec
pop
dec
mov
push
je
int3
push
cmp
ret
jbe
icebp
mov
mov
push
push
mov
inc
sub
test
sub
in
imul
rol
nop
ret
sbb
in
and
xchg
xchg
sub
aam
pop
xchg
dec
aad
popa
and
mov
xchg
les
pop
jo
shll
inc
cmp
jecxz
pop
jmp
mov
test
sub
mov
shrb
xor
xchg
sub
scas
lods
aas
adc
popa
les
aaa
mov
cld
daa
dec
xchg
push
push
or
mov
sub
mov
inc
sbb
cmpl
adc
out
lods
jne
xchg
mov
test
cmpl
cmp
push
mov
ljmp
mov
add
jns
iret
xchg
into
jne
fstl
jbe
push
sbbb
xchg
rclb
sbb
push
xor
fnstcw
orl
mov
icebp
xchg
scas
ret
es
cmp
and
movb
sarb
push
mov
mov
mov
das
xor
in
push
xor
or
sbb
cmp
jbe
shl
xor
adc
outsb
stos
adc
lods
rorb
pop
mov
enter
push
add
ret
imul
or
lcall
cmp
pop
push
adc
cli
and
cmpsl
lcall
addr16
test
clc
jecxz
arpl
test
outsl
stos
and
in
cmp
int
fisubs
mov
insb
sub
cmp
sub
add
or
jg
xor
mov
fstl
or
es
jae
xor
aam
or
jmp
xor
xchg
sti
xchg
cmp
pushf
xor
mov
dec
repz
mov
stc
push
dec
xor
imul
filds
out
xor
subl
xor
and
xor
out
cli
xor
clc
nop
hlt
stos
adc
jl
mov
inc
mov
xlat
fnstcw
xchg
add
cmpb
pop
inc
cmp
xchg
test
ret
fsub
subb
jp
inc
les
mov
and
pop
out
dec
lods
mov
adc
shrb
mov
bound
sbbb
mov
xchg
shrl
jo
lods
push
test
pop
sarl
pop
fiadds
xchg
or
adc
cwtl
data16
cli
dec
jno
push
js
adc
or
inc
push
mov
jnp
pop
mov
cmp
rol
out
fisubrs
out
jg
lock
dec
cmp
leave
inc
mov
xchg
aaa
or
das
dec
mov
testl
pop
ret
lea
mov
pop
out
dec
and
cwtl
lock
pop
sub
adc
sbb
fbstp
xchg
rcll
mov
mov
sarb
or
movsb
push
sub
pop
shrb
mov
mov
das
lods
jg
jne
cmc
push
mov
hlt
or
fsubrs
sahf
mov
mov
lret
adc
jge
push
lods
jmp
lods
test
arpl
sbb
stos
ljmp
pop
inc
push
cli
xchg
mov
push
dec
inc
add
adc
xor
loopne
loopne
shrl
popa
add
into
or
sub
pop
mov
xor
pop
test
pop
cli
aad
and
mov
mov
xor
movsb
aaa
es
orps
mov
dec
mov
and
push
jecxz
or
and
mov
jge
and
out
das
adc
hlt
fildll
imul
cmc
sbb
add
inc
les
xchg
jle
fdivrs
cs
xor
scas
popl
scas
jge
pop
mov
cmp
pop
xlat
shlb
inc
mov
pop
dec
cltd
sarb
cli
test
gs
xor
push
sarl
mov
ror
xchg
gs
hlt
cmp
std
sbb
lea
std
dec
push
out
mov
inc
xchg
adc
cmp
jmp
sbb
pop
dec
sub
leave
pusha
adc
mov
lock
dec
cltd
sahf
xchg
ret
fidivrl
inc
fidivl
pop
fidivrl
mov
xchg
into
mov
jns
imul
pusha
add
add
inc
add
jle
imul
mov
sub
mov
jne
popf
sub
mov
jecxz
loop
cmp
xor
mov
xorl
inc
sbb
ret
fdivp
imul
test
ja
mov
and
push
insb
filds
and
das
mov
xchg
aas
enter
aad
xchg
sub
xchg
mov
dec
or
call
jo
fwait
stc
mov
sbb
push
addb
rolb
mov
mov
dec
cli
xchg
sub
pop
subl
outsl
outsl
in
sub
adc
fisubrs
das
jecxz
dec
cld
mov
movsl
xor
xchg
sbb
inc
insb
xchg
mov
cmp
cmpsb
inc
stos
xchg
in
sub
sub
jae
outsb
pop
int
mov
jmp
fcomps
lret
xor
push
and
cmp
push
stos
mov
stc
stos
cmp
sbb
dec
lcall
and
mov
les
push
loope
jb
into
daa
repnz
data16
and
adc
push
loopne
ljmp
std
fwait
mov
imul
ja
in
jnp
xor
mov
jmp
xor
cmp
stos
cld
std
leave
inc
mov
repz
lods
loopne
mov
inc
mov
dec
clc
mov
dec
fnstsw
lods
jo
mov
imul
adc
imul
sub
add
dec
mov
test
stos
aam
mov
stos
and
mov
push
mov
xchg
cmpsb
xchg
in
scas
or
gs
sub
add
rcrl
sub
or
push
sbb
fcompl
adc
dec
cmpsl
imul
mov
addb
insb
adc
idivb
xchg
cmp
lret
jns
cmp
les
int
mov
and
sub
sub
push
andb
push
lret
push
pushf
loop
jmp
jbe
ret
out
dec
mov
lret
inc
xchg
jg
fildl
cmpsl
cmp
dec
jg
xlat
jmp
xchg
push
outsb
fsts
subb
fs
mov
divl
jne
enter
jmp
adc
sbb
sahf
pop
popf
es
loop
jno
mov
cmp
pop
xchg
sbb
and
inc
hlt
imull
xchg
pop
cmp
andl
dec
int
loop
repz
xor
sti
icebp
and
and
call
dec
std
out
loope
sbb
mov
cmpb
mov
aad
xor
daa
jb
addr16
movsb
jns
test
sbb
js
stos
scas
lods
es
jge
imul
mov
stos
insl
nop
das
in
jecxz
mov
andl
pushf
jae
add
addr16
push
mov
daa
je
js
xchg
cmpl
sti
jg
shll
cmp
lret
in
or
rolb
xlat
fsubs
lret
pop
out
jbe
fcmovbe
pop
sub
sbb
mov
shrl
aaa
comiss
jecxz
xor
mov
pop
inc
xor
xor
pop
mov
or
sbb
inc
pop
sbb
cmp
xchg
fwait
loopne
repnz
mov
xchg
sub
push
mov
out
xor
xchg
fisubl
popl
daa
cmp
or
or
or
jne
push
jnp
lods
mov
iret
cmp
dec
fs
xor
inc
add
push
data16
xorl
cmc
popf
andb
mov
and
testb
ret
cmp
cli
push
aad
xchg
inc
and
push
cmp
lea
scas
psrad
push
cs
nop
and
aad
rcll
cmp
cmp
loope
push
sti
mov
loopne
dec
mov
imul
sub
sub
lret
or
clc
stos
int
push
ljmp
loopne
nop
test
add
lock
scas
pop
jmp
int3
push
scas
dec
or
push
cltd
outsl
ljmp
insl
testl
aaa
push
out
and
xor
pop
lods
imul
mov
mov
mov
fwait
out
push
mov
mov
sbb
jne
cmc
inc
xchg
cmpsb
push
and
leave
lods
das
lret
jns
pop
enter
mov
test
ffreep
lret
mov
fcmovnu
int3
or
jnp
push
push
inc
adc
and
inc
cmp
push
mov
push
adcb
mov
dec
bound
out
das
ljmp
out
es
jne
dec
mov
fdiv
js
pop
xchg
sbb
inc
iret
xchg
leave
in
xchg
push
add
xchg
ds
or
cmp
adc
mov
in
fisubrl
repnz
inc
sbb
ret
mov
scas
mov
jmp
dec
roll
sub
icebp
xchg
push
jo
mov
cmp
jmp
xor
sub
or
push
mov
xor
and
inc
lds
mov
nop
cltd
mov
mov
in
test
xor
test
shl
in
jno
shll
push
jmp
pop
outsb
scas
sub
insb
jg
push
adc
daa
movsl
notb
push
pop
test
mov
push
nop
sub
xchg
fcomps
in
cltd
xchg
shlb
insb
dec
cmc
out
push
add
in
add
add
lret
int
aaa
mov
fbstp
sbb
jnp
lahf
or
mov
xchg
lahf
negl
loopne
pop
loop
test
test
addr16
mov
adc
add
or
movsl
ljmp
mov
fwait
pop
jmpw
je
and
mov
push
iret
mov
xor
cli
inc
xchg
pop
sbb
or
mov
aas
ror
imul
gs
loope
sbbl
inc
jmp
testb
out
pop
lret
mov
fcomip
mov
mov
or
imul
adc
fucomp
sbb
rcll
nop
mov
rcll
cld
push
popf
xlat
rol
fdivrl
dec
popa
xchg
test
loop
nop
loope
jg
mov
cmp
dec
repz
xchg
dec
dec
cs
shlb
loope
stc
in
add
mov
xchg
lods
cmpl
loopne
pop
xchg
mov
pop
xchg
dec
pop
xor
jecxz
cmp
out
mov
inc
ljmp
ljmp
mov
xchg
dec
jb
dec
and
cmp
mov
dec
repz
out
mov
push
mov
out
or
stos
pop
sub
shrb
cmc
test
inc
xchg
jns
in
cmp
push
sub
or
inc
pop
push
jne
mov
ffree
aas
test
pop
imul
and
movsb
fs
adc
fcoms
pop
cli
inc
sub
test
dec
imul
jp
mov
pop
mov
cmp
bound
push
stos
adc
or
xchg
and
or
ja
nop
inc
jp
sbb
lea
pop
arpl
push
mov
or
dec
cli
lock
mov
fimuls
clc
icebp
outsl
inc
sbb
sub
jp
add
arpl
jo
mov
out
adc
bound
dec
js
sbb
mov
cli
pop
and
and
in
scas
mov
cmpb
xor
mov
nop
fs
stos
sti
lret
and
inc
loopne
in
jmp
mov
ja
in
add
adc
test
jno
jmp
in
int
pop
repz
stc
sti
inc
dec
add
ja
shll
pop
xor
mov
xchg
mov
stc
fimull
mov
sahf
add
imul
mov
std
jmp
decl
int3
cmp
xchg
cmpsl
dec
out
repnz
ret
xchg
int
popf
xchg
mov
adc
gs
std
repnz
mov
inc
add
lcall
mov
testl
mov
add
jo
lock
sub
push
adc
mov
fadds
in
push
stos
in
dec
add
cli
xchg
ret
pop
ds
inc
mov
popa
dec
dec
test
jb
xchg
xchg
and
and
stc
mov
mov
iret
insl
and
jmp
test
jae
fisubs
sti
pop
out
pop
pop
mov
sub
sbb
sub
dec
mov
and
or
and
imul
xchg
and
jns
lahf
ja
scas
data16
sub
leave
repz
mov
add
ljmp
inc
dec
pusha
call
jns
sub
or
cmc
outsb
mov
xor
cmp
stos
out
les
xor
add
inc
or
mull
dec
divb
mov
push
push
push
stos
addr16
pop
popa
push
ficoml
fists
or
cmpsb
inc
cs
cmp
insb
xchg
jno
stos
dec
in
dec
sub
je
mov
fdivr
fists
mov
or
adc
mov
cmpsb
fdivrs
les
lea
lock
ds
in
or
xchg
pop
cmp
out
hlt
and
stc
popl
cmpb
fdivrp
pop
sahf
add
ja
sbb
dec
sub
and
push
xchg
in
adc
pop
test
xlat
ss
shrl
movsl
xchg
repz
jmp
idivl
cmc
insl
add
ss
mov
mov
or
jecxz
cmpsb
mov
cld
jecxz
dec
inc
pop
or
push
pop
stos
dec
pop
arpl
and
sbb
inc
mov
jns
jo
adc
out
divl
mov
and
aas
imul
mov
add
loop
sbb
pushf
insl
cs
jae
inc
dec
mov
jno
mov
imul
int3
mov
pusha
int3
int3
or
notb
mov
inc
int
mov
push
xchg
rorl
sub
js
mov
pop
push
mov
dec
inc
sti
test
inc
lods
pushf
cmp
inc
xchg
imul
test
xchg
dec
xchg
xchg
pop
imul
push
and
xchg
in
sub
and
nop
sahf
mov
test
imul
lcall
sti
imul
mov
into
cmpsb
shrb
iret
mov
pop
xchg
movsb
jb
aam
sbb
mov
sbb
cli
adc
mov
dec
jne
cmpb
adc
enter
mov
popf
xchg
js
rorb
mov
inc
in
push
es
repz
iret
pushf
xchg
daa
or
popf
dec
or
call
fsubrl
lret
pushf
ss
pop
fiaddl
lods
rol
push
stc
int3
cwtl
xor
xchg
faddl
xorb
fwait
inc
fistl
cmc
aad
or
xor
mov
mov
call
pop
mov
popa
clc
sti
cli
jle
jb
cli
or
sbb
push
in
cwtl
int
movsb
pop
sahf
aad
test
sahf
jecxz
dec
sbb
lea
inc
dec
shl
imul
fistpl
mov
or
pop
sub
fwait
xchg
pop
or
arpl
mov
shlb
pop
insl
mov
pop
lods
aam
insl
aas
mov
jo
cmp
pop
adc
lret
and
stos
or
insl
mov
cmp
in
cmp
arpl
loop
mov
aaa
jecxz
xchg
xchg
jbe
jecxz
andl
or
loopne
push
adc
out
ficomps
je
lcall
sub
pop
in
xor
insb
xor
fisubl
add
fmull
lcall
dec
dec
inc
shl
fidivrl
sbb
push
sahf
outsb
subl
push
aam
sub
inc
mov
mov
or
mov
xlat
roll
pop
mov
sbb
in
dec
cmpsl
cmpsb
inc
mov
mov
push
sub
lahf
rcl
jo
fdivrl
jecxz
xchg
push
jmp
sbb
inc
insb
push
in
rcrl
fbstp
xchg
mov
loop
xlat
and
xor
xchg
ds
out
inc
mov
sbb
cltd
outsl
lods
out
ret
jg
stc
fstpl
add
fnstenv
jp
test
stos
cmp
movsb
test
aas
add
pop
fwait
dec
jecxz
scas
add
daa
sbb
jmp
push
imul
testl
ret
add
in
mov
or
mov
repnz
mov
push
lahf
jp
or
inc
jbe
shr
ret
xchg
fisttps
add
aas
incl
int3
jns
sti
dec
jae
shr
notl
dec
dec
jecxz
in
repz
insb
stos
mov
into
ljmp
mov
adc
in
mov
push
push
aas
shl
jb
sub
jnp
push
or
inc
pop
push
sbbl
mov
dec
ljmp
bound
xchg
in
jmp
pop
jmp
xor
jne
fbstp
xchg
adc
push
cmp
and
in
pop
outsb
fstl
xchg
xor
mov
add
jp
push
push
arpl
mov
dec
jnp
push
dec
mov
pop
pop
imul
in
fnstsw
mov
jnp
mov
push
xchg
in
adc
mov
mov
inc
inc
cld
sub
bound
xchg
fildll
fdivrl
inc
out
jb
int
push
mov
inc
mov
jne
fwait
cltd
mov
mov
je
or
inc
and
cmp
sbb
jne
add
mov
das
out
das
push
jo
or
mov
sbb
scas
add
inc
pop
ss
lds
mov
outsb
sbbl
or
popa
sahf
test
cmpsb
and
ret
xlat
xor
data16
js
scas
push
int
aad
subl
xorl
shll
jo
fwait
cmc
dec
mov
mov
pop
ret
pop
jp
sub
add
unpckhps
xchg
popa
adcl
inc
add
xor
mov
icebp
leave
popa
or
cmp
decb
cmc
test
repnz
stos
sarb
add
loopne
xor
shll
daa
push
jle
fucomi
repnz
inc
fwait
je
vorpd
sahf
sahf
sar
clc
sub
bound
push
es
push
mov
imul
and
test
cmp
js
push
dec
loop
xchg
ret
out
inc
push
sbb
jge
adc
sub
into
jl
arpl
sub
add
js
mov
mov
inc
aas
mov
stc
test
js
loopne
xchg
pop
cmpb
and
gs
data16
movsb
lock
fwait
icebp
lret
out
cld
cs
sub
lret
jbe
rcrb
int
inc
sti
xchg
xchg
jnp
fsubs
push
mov
inc
mov
sub
clc
jmp
push
shrl
es
mov
ss
mov
push
or
push
shlb
jle
stos
mov
adc
mov
mov
mov
push
jecxz
popf
cltd
mov
pushf
mov
test
leave
inc
add
mov
ljmp
cmc
mov
mov
jae
inc
and
xor
mov
sub
lret
pop
test
das
pop
dec
test
push
cmpsb
sub
imul
jbe
andb
or
test
adc
jmp
es
lds
mov
fisubrs
or
jge
filds
mov
adc
pop
mov
push
push
push
xlat
sbb
mov
cld
enter
jb
iret
sahf
add
fcmovb
xchg
mov
xchg
aam
sub
pop
sbb
jg
mov
inc
sub
cmpsb
jl
insl
mov
push
ds
sbb
mov
adc
adc
aaa
and
sbb
pop
xchg
add
add
mov
add
add
add
add
add
subb
add
sub
add
clc
add
addb
add
mov
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
mov
add
add
add
add
add
js
add
add
add
je
add
add
add
add
add
add
add
add
add
add
mov
aam
add
add
mov
add
mov
add
add
add
add
add
enter
sub
push
add
xor
add
add
add
add
add
add
add
add
add
add
lock
add
or
add
add
add
add
add
add
add
add
add
add
add
sbb
add
js
pop
add
lds
add
add
add
add
add
outsl
insl
add
add
add
add
pop
add
xorb
add
addb
xorb
add
test
add
rolb
add
lret
dec
inc
outsl
insl
add
add
add
add
jo
add
dec
repnz
add
add
add
outsl
insl
add
add
add
add
cwtl
add
add
cli
pop
add
add
add
add
add
add
add
outsl
insl
add
add
add
add
rolb
add
cld
pop
add
add
mov
add
mov
outsl
insl
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
mov
outsl
insl
add
add
add
add
sub
add
push
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
or
add
add
addb
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
add
add
adc
or
add
add
sub
add
xor
adc
add
add
add
add
xor
and
add
add
call
jne
and
add
add
add
add
add
add
add
or
xor
add
mov
or
add
add
in
add
add
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
jl
mov
push
push
xchg
mov
mov
popf
cmp
dec
aaa
mov
jge
pop
popa
xchg
out
addl
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
push
mov
mov
xchg
push
inc
adc
adc
add
pusha
push
jp
jae
sub
punpcklbw
or
jecxz
mov
icebp
inc
add
xor
push
cwtl
test
hlt
insb
mov
sbb
aaa
dec
setne
and
push
push
push
call
in
dec
push
call
or
add
arpl
push
or
jbe
add
repnz
lods
stos
add
nop
cmpl
adc
jae
cmp
and
shrb
movsb
out
iret
and
cmp
das
sbb
push
arpl
stc
lcall
test
call
cwtl
add
lea
dec
push
inc
mov
push
and
mov
call
mov
xchg
fld
sub
or
push
sti
nop
cmpsl
add
adc
test
push
inc
inc
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
ret
push
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
sub
sub
test
adc
repnz
sub
push
clc
aaa
rcrb
jno
pushl
cmp
inc
or
pop
pop
maxps
push
imul
mov
sub
loopne
pop
push
xchg
or
xchg
adc
pop
push
sub
jb
pop
sti
dec
jbe
add
fnstsw
ret
mov
xor
stos
pop
loop
rcrl
push
jne
scas
push
add
mov
shll
pop
enter
and
loopne
jmp
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
scas
dec
xor
insb
in
dec
cld
movl
jne
or
iret
jge
test
rclb
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
mov
jae
inc
jmp
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
cmp
add
in
add
jbe
adc
or
cmpsl
xor
mov
cmpb
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
dec
mov
push
fistps
mov
in
pop
dec
sbb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
add
push
push
call
sbb
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
mov
inc
jmp
push
inc
pop
dec
xchg
pop
xor
push
dec
mov
push
inc
mov
pushf
stos
pop
test
scas
repz
xor
icebp
mov
call
and
or
add
xor
xchg
insl
movsl
xchg
sbb
and
inc
mov
dec
adc
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
xor
cmp
sti
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
push
add
clc
or
add
add
add
inc
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
movsb
mov
jg
lds
in
.byte
.byte
