mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
jbe
add
mov
add
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
addr16
mov
fists
test
add
mov
push
repnz
iret
jne
jbe
add
sub
push
adc
mov
jge
cmp
inc
ss
mov
inc
sbb
mov
lcall
idivl
fiaddl
gs
mov
jns
xor
mov
sahf
push
or
sti
adc
into
int
aam
cmp
jge
pop
shrl
es
enter
push
rcrb
icebp
push
push
mov
std
in
ljmp
mov
xchg
xor
cmc
mov
sbb
or
mov
push
add
data16
fwait
in
mov
or
imul
push
pop
mov
cmp
addl
dec
xchg
sub
imul
jp
lahf
lret
pop
stos
pop
outsl
or
xchg
ja
in
movsl
fcompl
into
scas
xchg
cltd
xchg
or
push
inc
leave
rolb
mov
cmc
scas
outsl
inc
and
dec
jne
xchg
sub
andl
xor
ds
add
sub
mov
sbb
mov
jmp
out
pop
sbb
inc
cmc
inc
in
or
sub
adc
mov
lods
xor
dec
sub
xchg
pushf
xor
xchg
fcomi
ret
mov
and
fistpl
cwtl
pop
loopne
sbb
movsb
cmp
push
push
shr
shll
std
into
nop
gs
push
lds
insb
jmp
mov
shll
and
ret
ret
adc
jne
ret
push
mov
test
popa
loop
jbe
add
mov
cltd
cwtl
adc
mov
mov
lods
fcom
dec
popa
popl
jl
push
scas
daa
popf
cli
fstpl
addb
shl
xor
lea
test
fsubrl
lea
es
cmp
inc
in
test
sub
jmp
mov
mov
mov
daa
mov
mov
ss
orl
push
push
test
cmp
pop
and
mov
jp
xor
dec
cmp
repz
cmp
lret
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
addr16
mov
fists
test
add
mov
push
repnz
iret
jne
jbe
add
sub
push
adc
mov
jge
cmp
inc
ss
mov
inc
sbb
mov
lcall
idivl
fiaddl
gs
mov
jns
xor
mov
sahf
push
or
sti
adc
into
int
aam
cmp
jge
pop
shrl
es
enter
push
rcrb
icebp
push
push
mov
std
in
ljmp
mov
xchg
xor
cmc
mov
sbb
or
mov
push
add
data16
fwait
in
mov
or
imul
push
pop
mov
cmp
addl
dec
xchg
sub
imul
jp
lahf
lret
pop
stos
pop
outsl
or
xchg
ja
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
addr16
mov
fists
test
add
mov
push
repnz
iret
jne
jbe
add
sub
push
adc
mov
jge
cmp
inc
ss
mov
inc
sbb
mov
lcall
idivl
fiaddl
gs
mov
jns
xor
mov
sahf
push
or
sti
adc
into
int
aam
cmp
jge
pop
shrl
es
enter
push
rcrb
icebp
push
push
mov
std
in
ljmp
mov
xchg
xor
cmc
mov
sbb
or
mov
push
add
data16
fwait
in
mov
or
imul
push
pop
mov
cmp
addl
dec
xchg
sub
imul
jp
lahf
lret
pop
stos
pop
outsl
or
xchg
ja
in
movsl
fcompl
into
scas
xchg
cltd
xchg
or
push
inc
leave
rolb
mov
cmc
scas
outsl
inc
and
dec
jne
xchg
sub
andl
xor
ds
add
sub
mov
sbb
mov
jmp
out
pop
sbb
inc
cmc
inc
in
or
sub
adc
mov
lods
xor
dec
sub
xchg
pushf
xor
xchg
fcomi
ret
mov
and
fistpl
cwtl
pop
loopne
sbb
movsb
cmp
push
push
shr
shll
std
into
nop
gs
push
lds
insb
jmp
mov
shll
and
ret
ret
adc
jne
ret
push
mov
test
popa
loop
jbe
add
mov
cltd
cwtl
adc
mov
mov
lods
fcom
dec
popa
popl
jl
push
scas
daa
popf
cli
fstpl
addb
shl
xor
lea
test
fsubrl
lea
es
cmp
inc
in
test
sub
jmp
mov
mov
mov
daa
mov
mov
ss
orl
push
push
test
cmp
pop
and
mov
jp
xor
dec
cmp
repz
cmp
lret
sbb
pop
mov
xor
inc
les
pop
popa
cwtl
data16
pusha
mov
push
ds
adc
das
lods
dec
sbb
das
ja
mov
xlat
loop
sbb
fsubs
adc
sub
mov
loope
cmp
movb
mov
psubw
xchg
out
into
jecxz
jnp
hlt
hlt
negl
hlt
mov
jecxz
ds
std
test
js
inc
out
dec
push
repz
sub
cltd
jecxz
cwtl
lret
mov
dec
subl
sbb
cmc
test
shlb
imul
pop
or
popa
xor
lcall
inc
mov
adc
scas
xor
movsl
std
shlb
xor
cmp
xchg
aaa
les
divb
shll
inc
loopne
lcall
fbstp
xchg
mov
or
icebp
popa
mov
fsubr
jge
je
sub
punpckhdq
dec
pop
lahf
and
mov
dec
scas
xchg
mov
mov
repnz
stc
pusha
dec
lahf
xlat
jl
xchg
push
gs
jg
pop
add
pop
gs
aaa
ret
cmpsb
xor
addb
xlat
mov
pop
out
dec
pop
dec
hlt
xor
daa
fucomp
pop
sarl
ljmp
xchg
sahf
cmp
scas
fnstenv
daa
push
mov
outsb
xor
insb
mov
out
int
lds
mov
push
inc
fbstp
repnz
xchg
clc
loopne
test
enter
and
ljmp
aad
or
insb
arpl
xor
jp
jbe
cli
cmp
sarl
lret
xsha1
cmpsb
mov
mov
stc
pop
out
and
rolb
ret
jbe
dec
into
push
fisttpl
xorb
out
loopne
pushf
loope
sti
push
jo
scas
mov
sub
lea
cld
dec
adc
jo
mov
mov
xor
lods
or
nop
cmc
or
scas
xchg
and
sub
aam
jl
jno
stos
neg
jecxz
push
push
cmp
nop
sub
add
iret
pop
aas
sub
cmp
mov
shl
ror
dec
shrl
xorb
jecxz
pop
imull
sahf
in
jnp
pusha
insl
jbe
imul
mov
sarl
dec
mov
arpl
andl
adc
data16
cs
or
insb
cmp
push
cli
sub
sbb
dec
addb
xlat
jb
inc
lahf
addr16
and
pop
jmp
std
inc
js
sub
cmpsl
xor
add
pop
jge
adc
imul
int
xchg
sti
jnp
in
and
loope
aaa
popa
cmpsb
call
pop
enter
dec
in
out
stos
adc
cmp
sbb
push
adc
push
fcoml
inc
outsl
pushf
out
leave
jo
gs
aam
pop
pop
cmp
lock
lds
into
mov
xchg
inc
lods
jl
mov
push
cmpsl
insb
pop
jnp
psubusw
and
cmp
stc
add
pop
dec
in
add
adc
pop
and
mov
aaa
xor
pop
xor
jo
nop
xor
cmp
adc
outsl
rclb
dec
mov
sbb
jbe
or
xchg
sub
add
inc
inc
adc
in
ss
repz
mov
or
and
addb
mov
test
push
sbb
stos
push
pop
mov
adc
pop
cmp
ds
testb
iret
add
mov
add
jbe
xchg
adc
mov
ds
js
pop
adc
cltd
pop
cmpsl
xchg
push
pop
push
loop
in
pop
sbb
and
add
mov
push
int
aad
add
fwait
jmp
mov
idiv
imul
xor
dec
xchg
das
pop
daa
cltd
xor
cmc
jecxz
sbb
xchg
lods
repz
out
repnz
xlat
dec
nop
int3
lea
das
aam
push
std
adc
outsb
in
add
mov
adc
ss
jmp
in
mov
mov
jns
test
mov
push
mov
je
scas
ret
xlat
or
or
mov
leave
xchg
aaa
and
xor
or
pop
push
fs
shl
jp
scas
pop
subb
lahf
xchg
insb
mov
hlt
shrb
fisubl
repnz
cmp
mov
test
push
inc
mov
sbb
adc
or
imul
jle
out
adc
in
out
mov
cs
pop
mov
call
stos
gs
and
or
xor
push
push
ficoms
and
adc
orb
xchg
test
mov
xchg
sbb
cmp
jo
leave
or
icebp
stos
loopne
jns
lea
es
jmp
sbb
sub
cld
xchg
pop
adc
divb
gs
sbb
pop
sahf
and
jnp
push
in
cmpsb
pop
mov
jns
mov
jmp
adc
dec
ret
dec
and
dec
sbb
fistpll
test
push
push
inc
imul
xlat
or
dec
mov
sub
mov
add
cli
repnz
mov
cmp
int
hlt
cmp
movsb
mov
fldl
fmull
jno
sbb
pop
push
cmp
jp
in
cmc
add
mov
jmp
loopne
sub
mov
or
xor
repz
sbb
add
cmp
or
sarb
pop
mov
mov
ret
sub
push
stc
push
enter
gs
ja
test
mov
ret
mov
xchg
nop
js
loopne
lret
test
shlb
push
adc
lahf
push
push
and
adc
je
hlt
xchg
shlb
jecxz
aaa
stos
lds
xchg
sbb
inc
push
cmp
cmp
jl
out
jnp
scas
rolb
ljmp
jns
mov
into
push
icebp
cmp
mov
or
xor
xor
or
inc
push
sahf
or
stos
add
cmp
dec
sub
mov
jle
add
xor
xchg
or
aam
in
aam
pop
push
jp
push
or
mov
fldenv
fists
sub
push
mov
call
cld
mov
stos
xor
push
loope
fisubrs
or
or
lds
cmpb
mov
jb
cmpsl
pop
sar
push
adc
sbb
jle
pushf
mov
mov
pop
sbb
pushf
jl
arpl
and
sub
rcrb
and
ja
jo
cmp
test
cmc
js
in
cmp
cmp
sub
in
xchg
sbb
mov
scas
mov
sub
mov
aas
ds
push
fs
notb
add
ds
pop
insb
push
hlt
repnz
loop
pop
call
dec
push
add
jo
fwait
mov
xor
nop
adc
lret
out
mov
lock
movsb
mov
cmpsb
stc
jp
aam
push
jmp
dec
mov
xor
fldcw
cld
mov
lahf
sbb
adc
push
push
sahf
xor
fcompl
movq
xchg
push
mov
adc
pop
ja
notl
jmp
sub
and
nop
adc
mov
lods
dec
cmp
cwtl
clc
int
inc
mov
inc
push
ljmp
dec
push
sbbl
pop
fisubs
bound
jnp
sbb
pop
push
xor
mov
insb
data16
push
or
mov
or
sub
fbld
addb
mov
nop
jae
mov
pop
inc
mov
mov
jp
and
das
pop
sub
inc
lret
sub
test
xor
leave
inc
stos
test
mov
or
dec
inc
jecxz
sbb
popf
sub
mov
sub
bound
xor
push
loopne
and
das
jae
sub
sbb
out
dec
jbe
jp
mov
lock
icebp
xchg
pop
jne
scas
fsubrl
call
pop
rolb
ret
sti
outsb
aam
or
mov
push
leave
jp
cmpsb
mov
test
add
lds
inc
cmp
mov
jb
jmp
cwtl
mov
mov
insb
jnp
push
xchg
mov
sub
fs
push
ss
push
movsl
add
xchg
jl
sbb
add
fsubp
xchg
dec
adc
outsb
or
test
aas
sbb
in
pop
push
jno
int
or
sub
ss
aad
jns
pop
add
mov
mov
mov
addb
mov
jecxz
es
stos
or
leave
lahf
mov
outsl
mov
andl
cli
les
jns
std
ficompl
dec
push
es
cmp
arpl
es
stc
dec
jo
jle
adc
push
dec
pop
loop
inc
jno
jl
or
ds
cmc
in
cmp
pushf
push
lretw
jnp
mov
mov
mov
adc
sub
and
cltd
out
int3
sbb
enter
mov
jl
rorl
push
hlt
mov
add
jp
push
inc
add
cmpsb
adcl
sub
add
fisubl
add
lret
cld
repnz
aas
inc
cmpsb
ret
sub
mov
inc
jo
mov
das
roll
pop
in
inc
sub
jno
jp
mov
cmp
adc
dec
inc
ficoms
test
aad
and
push
or
push
and
pop
cli
jae
add
cmpsb
inc
enter
push
addb
clc
pop
mov
hlt
xchg
outsb
jge
cmp
test
fdivp
lret
shll
adc
xor
cld
adc
adc
sub
jmp
test
jbe
in
jb
imul
cmp
hlt
rclb
fs
icebp
jl
fadd
pop
inc
std
testb
jnp
lock
mov
out
mov
push
jle
int3
fbstp
fnsave
movsb
inc
sub
jge
icebp
adc
push
outsb
or
pop
push
pop
inc
add
pop
stc
aas
or
call
add
jle
pop
cmp
stos
xchg
lds
pop
sub
sarl
mov
ja
and
loop
xchg
adc
lahf
adc
xchg
pop
or
cmp
daa
shll
rcr
mov
repz
popa
scas
cmpsl
addb
mov
pop
lock
mov
jp
sahf
jbe
pop
out
ljmp
mov
mov
xchg
xor
inc
sbb
jmp
ja
cs
mov
outsb
dec
data16
cmp
pop
sub
pop
cli
sarb
sub
mov
ret
cmp
mov
into
int
pushw
test
roll
dec
sub
mov
sbb
jo
ret
test
cmc
aaa
fwait
enter
jno
adc
aam
loop
repz
jae,pn
pop
iret
sbb
dec
outsl
pop
scas
stc
dec
je
inc
fs
cmp
pop
shr
mov
les
in
mulb
adc
mov
or
mov
lret
push
dec
inc
jmp
push
adc
sub
bound
jne
mov
fcomps
cli
sti
std
fwait
outsl
fisubrl
cmpsl
popf
lret
xlat
add
mov
sbb
adc
xorl
jno
sbb
push
sub
fisubs
inc
jecxz
mov
inc
jmp
mov
cmp
mov
jnp
push
cmpsb
mov
sbbb
lods
lcall
sbb
loopne
xchg
inc
mov
adc
pop
scas
iret
mov
jge
add
bound
inc
adc
mov
xchg
adc
pop
sub
cmp
insl
int3
push
push
int
ret
insb
sbb
fldenv
pop
mov
inc
sub
pop
jne
jp
gs
sbb
dec
adc
xchg
mov
add
daa
fcomi
push
sbb
jmp
sub
xchg
imul
test
addl
test
sbb
cmc
insb
jp,pt
mov
jmp
std
or
daa
outsb
mov
mov
push
mov
mov
sbb
fwait
jg
dec
mov
mov
adc
jae
sbb
or
aam
insl
mov
pop
xchg
pop
inc
aas
mov
cmp
jnp
es
inc
roll
seto
sbb
adcb
inc
mov
mov
ret
aaa
lret
adcb
ficoml
push
cld
mov
ds
int
adc
adc
adc
fists
es
push
mov
cmp
movsl
mov
jne
pop
pop
pop
ds
dec
mov
cltd
jno
repz
mov
fsubr
cmp
gs
lock
shll
and
mov
pop
repz
aaa
cs
mov
xchg
mov
outsl
test
push
xor
into
push
lcall
lret
aaa
lds
sub
jbe
pop
mov
data16
cmp
es
sbb
pop
xchg
mov
test
mov
push
sub
popf
inc
std
std
mov
pop
jg
fidivrs
sub
and
cmp
sub
jmp
push
mov
xchg
sub
gs
cmpsl
dec
push
daa
daa
or
cs
stos
push
push
cmpb
dec
sub
jl
add
fs
cmovns
lods
xchg
fistl
mov
mov
sub
xor
sti
shrl
rcll
and
xor
movsl
cmpsb
add
mov
inc
dec
mov
adc
adc
add
jecxz
jl
popl
mov
or
adc
mov
test
push
pop
fstpt
js
jb
pop
xor
or
loopne
insl
mov
cwtl
lock
xchg
pop
leave
test
scas
in
pop
lcall
cmpb
das
imul
inc
cld
inc
std
add
xor
xlat
mov
out
hlt
std
pop
and
dec
movsb
xor
out
lahf
mov
stos
mov
jl
lahf
xchg
push
mov
mov
jbe
aaa
dec
ror
in
fcmovnbe
fnstcw
das
dec
pop
mov
mov
scas
xor
dec
out
jne
loope
out
ret
stc
push
pop
stc
cltd
jl
js
stos
pop
shrb
lock
pushf
sbb
pushf
or
imul
addb
pop
pop
lock
jmp
or
lcall
insb
sub
xchg
mov
iret
js
cmc
xchg
outsb
xor
inc
sub
push
out
data16
xchg
and
arpl
fs
jge
mov
add
mov
mov
add
push
adc
shll
addr16
test
jl
aad
add
cmp
dec
push
loop
sub
or
sahf
inc
sub
ret
les
dec
pop
add
sbb
daa
in
shlb
sti
cmp
pop
mov
loope
cmp
adc
pop
and
fdivrp
push
or
adc
jp
rorb
cs
mov
xor
cmpb
adc
pop
or
aam
cmp
pop
jmp
mov
out
bound
cmp
fwait
lcall
ss
lea
int
fstl
lods
int
xor
add
cmc
sbb
cli
and
jecxz
pop
mov
loopne
out
mov
push
jo
cmp
push
outsb
out
lret
mov
sbb
arpl
inc
inc
push
daa
sub
je
pop
mov
dec
inc
lea
sub
or
mov
cltd
test
fidivs
mov
popa
jns
jmp
enter
pop
cmpl
outsb
cmp
mov
cmpsl
xchg
fld
mov
test
sbb
inc
cmp
dec
adc
fldt
adc
addr16
scas
mov
pop
mov
add
add
movsl
pop
ror
jae
xor
repnz
adc
adc
inc
pop
mov
dec
dec
inc
in
mov
cmpl
gs
push
hlt
push
sub
mov
iret
fsubrs
fwait
enter
sti
push
xor
adc
mov
stos
cmpsl
sbb
cs
rcrb
pop
adc
andb
adc
scas
int
popf
xchg
adc
xor
into
cmpsb
xor
cs
pop
push
ss
in
dec
jecxz
loope
ja
inc
jns
test
inc
mov
cmp
lock
xchg
cmpsl
icebp
or
jmp
jp
push
xchg
and
lea
lock
cmc
mov
ljmp
mov
mov
adc
jbe
pop
xor
and
aam
jp
xlat
mov
repz
jg
pop
push
cmp
xchg
push
gs
dec
add
in
vpcomb
or
es
shrl
popa
scas
sbb
add
test
test
or
stos
cld
sbb
inc
cmpsl
push
mov
and
cld
imulb
jle
or
cmpsb
ss
sub
jle
je
jecxz
jne
pop
andl
outsl
fidivs
andl
data16
call
cmpsb
jg
mov
sub
icebp
cmp
aam
ja
xchg
cltd
jae
push
push
mov
cmpsb
xor
insb
insl
mov
mov
sub
and
xor
ljmp
pop
iret
enter
sbb
lcall
or
xchg
mov
mov
flds
adc
cs
jge
mov
cmpsl
lds
jecxz
sub
mov
cmp
mov
orl
decl
or
mov
scas
aam
call
pop
or
cltd
dec
in
or
fimull
sbb
bound
mov
xor
add
mov
mov
lret
aam
cmp
cmc
jne
insl
enter
mov
cmovbe
pop
cwtl
add
pop
je
pusha
out
mov
scas
cld
dec
aas
xor
push
mov
lret
in
repz
mov
jl
mov
push
leave
hlt
sub
inc
in
popa
int3
pop
cmp
xchg
xlat
shl
lods
not
ficoml
in
mov
push
ret
int3
xchg
dec
cmp
loopne
dec
xorl
pushf
mov
jmp
daa
out
shl
mov
ret
enter
ss
sub
adc
clc
sahf
and
push
cld
inc
sbb
jg
shl
jecxz
pop
cmp
jo,pt
cmp
fiaddl
test
cld
mov
push
pop
sbbl
sbb
fsts
imul
jb
adc
mov
add
fidivl
dec
leave
and
int
jno
mov
or
insb
imul
push
cs
xchg
pop
les
push
js
dec
adc
mov
arpl
out
imul
lea
inc
push
push
xchg
popf
sbb
cltd
fidivrl
inc
jecxz
xor
stos
jg
leave
xchg
cs
cld
rol
sbb
ljmp
cli
sub
orl
icebp
pop
lds
nop
add
add
fnsave
testl
sbb
jle
mov
xlat
push
xorb
lcall
in
cmpsl
fs
and
arpl
add
ret
dec
rcr
aad
in
sbb
mov
sti
or
fwait
mov
mov
js
or
jns
lods
push
sbb
adc
sbb
testl
aaa
sbb
daa
dec
pop
aaa
aam
dec
cmc
aas
mov
sbb
and
pusha
jle
cld
pop
das
push
sbb
xchg
jp
loop
loopne
je
daa
sar
sbb
scas
xor
fistps
jns
inc
jmp
test
mov
pop
cmp
mov
mov
cs
in
or
push
outsl
adcl
sbbl
mov
pop
stos
ret
iret
gs
flds
pop
icebp
shl
adc
movsl
out
mov
mov
fs
ss
mov
and
cmpl
in
fld
mov
mov
lods
test
das
push
pop
push
jle
mov
and
sbb
fs
cmc
xlat
pushf
add
push
addr16
mov
int3
mov
mov
cmc
jno
sbb
in
push
and
bound
icebp
gs
imul
mov
push
mov
adc
and
das
clc
cmp
jmp
inc
popf
lods
jecxz
dec
stc
arpl
adc
movsb
xchg
dec
or
cmpsb
mov
jp
popf
ret
loop
lahf
push
ds
dec
sarl
adc
xchg
xor
gs
out
insl
les
call
push
cmc
push
aas
push
aam
dec
cmovb
pusha
loope
mov
int3
cmp
pop
pop
nop
mull
sub
in
or
push
cmc
inc
mov
mov
pushf
push
fcomp
jmp
aad
fistps
ret
mov
mov
sbb
sbb
jne
sarb
sub
inc
pushf
outsl
sbb
adc
sub
jle
enter
lret
fisubrs
lret
fdivs
sti
repnz
pop
jl
adc
jno
mov
rcrl
push
aas
cmpsb
inc
or
clc
faddl
pop
xor
in
fisttps
testl
icebp
jbe
push
in
aam
cld
psrlq
mov
mov
sbb
ja
add
iret
mov
cs
loope
mov
lret
add
or
test
out
es
jne
cli
xchg
or
inc
iret
xchg
inc
std
imul
lcall
shl
out
ljmp
in
popf
ja
xchg
test
std
into
test
movsb
cmp
imul
sub
cwtl
out
mov
jle
mov
in
mov
stos
insl
decl
jns
push
sar
adc
sbb
xor
or
xchg
push
gs
mov
hlt
in
push
add
push
mov
cmpsl
cld
add
push
outsl
loop
repz
sub
push
adc
outsl
js
or
outsl
dec
inc
jae
scas
mov
int
lods
fs
mov
mov
push
cmp
push
cmp
in
sub
mov
out
movsl
push
icebp
and
pop
lahf
pop
inc
lea
sbb
xchg
lcall
mov
jns
ds
cmp
or
rorl
das
mov
mov
xchg
gs
mov
pushf
test
and
xchg
popf
lahf
bound
negl
call
add
stos
leave
shlb
xchg
add
es
int3
mov
aam
out
adc
pop
inc
jg
cs
scas
aas
mov
fidivrs
gs
adc
lea
cmovns
pop
sbb
xlat
lret
jae
nop
scas
fisubrl
sub
pop
fidivl
test
addl
cmp
xor
xchg
lret
push
mov
das
cltd
add
das
and
mov
or
pop
dec
shlb
daa
add
push
mov
sti
xchg
data16
inc
fisttpll
scas
out
add
outsl
xchg
add
mov
in
cmc
jecxz
jb
xchg
mov
inc
nop
and
lahf
push
mov
mov
insl
add
mov
stos
and
sbb
add
cmp
ret
clc
adc
pushf
mov
mov
cwtl
jp
xor
shl
xchg
movsb
add
nop
inc
adc
xchg
adc
popa
les
mov
jae
nop
leave
xor
ficoms
int3
arpl
ljmp
pop
lea
sbb
mov
push
in
mov
lahf
test
cmp
mov
jb
sub
cs
mov
mov
call
xor
incb
addr16
insl
adc
cmp
lret
jmp
out
shrl
push
faddl
aaa
mov
mov
cmp
incl
cwtl
arpl
dec
loop
and
sub
ret
in
cmpl
cli
fcoml
xor
std
xor
dec
stc
pop
xor
cmp
dec
mov
and
ficoml
mov
or
push
imul
lds
jecxz
test
into
mov
shlb
and
je
push
mov
out
ret
mov
or
add
pop
jo
sti
sub
in
inc
pusha
test
incb
arpl
cmc
es
xlat
sub
mov
lea
fwait
es
xor
mov
jns
stos
mov
repz
mov
cmp
sub
add
es
mov
rcr
add
std
pop
and
jg
add
jle
loopne
rcr
jg
clc
and
xor
jl
and
push
dec
movsl
out
jnp
add
movsl
rcrl
loopne
inc
mov
iret
lods
lea
pop
adc
xchg
fistpll
ljmp
shrl
sahf
aad
sub
jge
mov
shl
setns
cmpsb
sub
mov
dec
insl
in
aas
outsl
sub
test
pop
dec
iret
jle
adc
stos
lahf
jnp
shrl
cs
rolb
addr16
movsl
or
jnp
mov
in
xor
or
fiadds
add
mov
hlt
jbe
dec
push
dec
jp
push
test
lods
rclb
outsb
movsb
ja
adc
nop
mov
mov
test
bswap
dec
cmp
cmpsb
push
dec
cmp
lods
lea
stos
xlat
and
xor
push
loope
mov
mov
cltd
sub
push
repnz
cmp
rorl
repnz
shll
mov
xor
incb
mov
fistl
push
mov
ret
arpl
das
and
cmp
fildll
push
test
cwtl
lea
and
xor
call
mov
cli
xchg
mov
cltd
pop
inc
jge
mov
and
jnp
nop
mov
into
mov
dec
std
pop
cmc
add
push
gs
add
push
mov
pop
dec
call
lock
mov
dec
adc
add
and
cmp
cmp
jb
or
lods
jecxz
divb
popa
mov
loopne
outsb
jecxz
lcall
and
shll
push
mov
cmpsb
negl
dec
idivl
xor
sbb
and
push
cli
xor
outsb
int3
scas
inc
xor
xchg
xor
in
mov
cmp
push
xor
push
push
mov
and
cwtl
push
push
xchg
test
pop
negl
sbb
jmp
data16
test
ja
inc
divb
or
ret
das
cmp
mov
ret
clc
jecxz
push
scas
movsb
clc
mov
dec
add
roll
fcompl
inc
pop
sbb
cwtl
stos
xlat
syscall
cmp
mov
mulb
jmp
dec
inc
inc
pop
mov
ljmp
test
xor
push
outsb
dec
scas
push
movsb
mov
mov
shlb
lret
ret
and
mov
dec
lahf
push
jp
lock
out
insl
mov
xchg
dec
cmp
dec
adc
xchg
gs
sbb
or
or
push
and
mov
sbb
inc
xchg
cmp
iret
xchg
in
mov
orb
fadds
xor
or
adc
outsl
xchg
aaa
lea
inc
movsl
je
cmc
lods
lahf
pop
or
pop
js
call
sbb
mov
dec
xchg
mov
or
lret
movsl
or
std
or
jbe
xchg
xchg
xchg
or
aas
and
mov
stc
ret
pop
jge
adc
or
mov
or
mov
cmp
insb
mov
cs
xor
mov
pop
shr
pop
mov
cmpsl
sub
mov
out
xor
mov
cmpsl
jmp
out
les
aam
mov
loopne
mov
mov
aam
test
add
stc
ret
mov
imul
cwtl
dec
fiaddl
div
daa
pop
mov
adc
jle
adc
pop
repz
mov
fstpt
push
aaa
pop
out
push
add
ret
into
arpl
arpl
and
and
imul
jnp
pop
lods
inc
sbb
push
xchg
fsub
cmp
cltd
add
push
in
sbbl
stc
loopne
add
imul
adc
cmp
je
imul
mov
or
mull
jg
jo
mov
mov
xor
mov
gs
xchg
aaa
repnz
gs
push
or
inc
jb
rolb
or
push
aad
mov
fcom
mov
jns
icebp
loopne
add
push
mov
jns
fidivrs
pop
pop
add
or
pusha
jne
test
mov
lss
inc
fcmovb
sti
jns
rcrl
mov
jge
sbb
push
sub
dec
aaa
insl
in
int
imul
mov
ret
and
adc
add
jbe
pop
adc
popf
xor
mov
fucomip
jmp
outsl
inc
mov
pop
mov
imul
jl
xchg
insb
mov
cmp
testl
inc
jb
ja
mov
mov
push
mov
dec
imul
cmc
hlt
push
dec
lock
out
push
test
sub
xchg
notb
add
cmpsl
pop
int
sbb
dec
pushf
repnz
outsb
pop
test
scas
jp
fidivrl
mov
xor
sbb
jno
lea
cmp
dec
sub
mov
cmpl
jle
movsb
cwtl
enter
xchg
adcb
add
push
addb
inc
data16
fcoml
out
dec
call
cs
ljmp
out
sbbb
js
dec
xor
jge
ja
outsb
pop
daa
fcmove
adc
ret
sti
ficoml
and
mov
or
add
imul
xchg
movsl
fwait
movsl
mov
outsl
jl
adc
push
jp
das
inc
nop
or
jge
inc
insb
ljmp
test
pushf
pop
test
pusha
ret
ss
add
arpl
pop
stos
imul
or
aas
or
push
stos
in
enter
xchg
mov
in
and
sub
or
dec
imull
arpl
push
adc
or
xchg
pop
and
pusha
push
sbb
dec
jge
jl
sbb
dec
repz
loope
add
add
adc
fcom
adc
insl
ret
lods
imul
enter
lea
mov
mov
rolb
mov
loopne
cld
mov
into
adc
jnp
sbb
mov
mov
push
xlat
std
jae
or
cmp
push
lret
xlat
scas
mov
enter
sub
scas
adc
pop
fs
mov
shrl
xchg
pop
cwtl
and
outsb
cmpsl
pop
cmp
scas
je
outsl
mov
mov
jb
aad
call
mov
popf
mov
cmp
xchg
cmpsl
pop
and
cltd
icebp
sbb
push
xor
xchg
mov
pop
jne
pusha
xchg
pop
mov
stos
loopne
arpl
aaa
dec
jo
fidivrl
in
add
adc
adc
xchg
mov
sbb
xchg
xorb
or
stc
xor
cmp
loopne
imul
inc
adc
int
fsub
ret
fcoms
adc
mov
mov
xor
or
loope
push
push
xchg
scas
movsb
cld
and
dec
sbb
es
push
fchs
push
jo
xchg
dec
dec
ret
and
cmp
in
flds
jne
add
outsl
movsl
ds
pop
jecxz
pop
adcb
cltd
xchg
shll
test
mov
out
inc
test
pusha
cwtl
outsb
mov
leave
xor
dec
xor
xchg
ds
lock
fsubrs
add
and
or
popa
sub
out
jmp
pop
sti
or
add
iret
and
push
jmp
adc
loope
adc
lcall
push
es
and
and
pop
cmp
les
iret
xchg
inc
imul
cmp
mov
aam
fisttpl
repnz
adc
ja
jne
pop
and
scas
xor
mov
cmp
lds
xchg
ds
adc
enter
adcb
mov
jo
add
pop
dec
outsl
adc
sbb
negl
mov
mov
mov
dec
aas
pop
xor
mov
mov
push
rcrb
lods
test
in
cmpsl
stc
es
adc
or
les
add
repz
rcr
dec
inc
adc
sub
into
ret
or
pop
fcos
cmp
inc
scas
fiaddl
ds
mov
sbb
pop
add
pop
cmpsb
push
orb
rcl
test
lds
mov
shll
mov
xchg
div
mov
dec
mov
inc
pusha
jns
jmp
test
jno
mov
mov
sub
loopne
cld
ljmp
xchg
add
mov
ret
psubusw
in
sbb
sbb
call
repz
mov
or
xor
vdivps
sarb
mov
sbb
adc
mov
test
movsb
inc
add
jmp
or
stos
aad
fcom
aas
mov
popa
push
fistpl
xlat
fbld
or
adc
adc
loope
loop
out
dec
push
ja
sbb
inc
div
dec
sbb
cwtl
xrelease
or
faddp
in
fstps
dec
cmpsb
and
outsb
hlt
ljmp
push
mov
push
js
jne
call
jg
test
pop
xchg
and
loope
sub
into
xor
pop
mov
je
in
sahf
push
loop
adc
jns
cmp
add
mov
jl
into
arpl
subb
scas
or
sbb
inc
xchg
mov
mov
loopne
xchg
movsl
mov
sbb
pop
dec
and
mov
std
sbb
xchg
test
inc
mov
pop
dec
pop
pop
and
pop
xor
call
mov
das
into
addr16
inc
adc
jo
mov
pop
add
add
addb
in
or
and
test
cmp
lods
lods
decb
sub
push
sbb
fsubrl
aam
dec
adc
pop
cltd
dec
movsl
in
movsl
mov
jmp
sbb
imul
les
shl
dec
outsb
fs
add
add
and
xchg
sub
stos
test
nop
fsub
pop
push
int
bound
jp
xorb
push
sarl
mov
jbe
sbb
out
out
pop
cmp
aas
dec
sbbb
mov
jne
out
mov
fimull
rorl
cs
xchg
lods
loop
push
or
je
xchg
add
ret
ret
cmp
or
mov
setnp
fisubrl
push
jmp
fisubrs
pop
orb
mov
mov
inc
repz
enter
jecxz
pushf
popl
mov
rorb
aad
enter
mov
cmpsb
cmpsb
dec
shrb
add
mov
ret
fstl
mov
ret
xchg
in
pop
xor
ljmp
loopne
sbb
pop
cmp
in
inc
mov
inc
insl
rolb
cmp
scas
popf
into
inc
iret
cltd
out
push
lock
loop
jp
push
mov
ja
nop
xchg
les
sbbb
pop
jmp
sub
int
sbb
pop
dec
xchg
push
pop
test
mov
les
sub
ss
inc
push
or
or
push
sbb
gs
push
imul
mov
jle
std
fcoms
call
ret
xchg
daa
and
mov
mov
cmp
pop
add
or
insb
xlat
jmp
mov
out
xchg
insl
add
adcl
xchg
pop
dec
das
jne
cltd
sub
shll
sub
xchg
xchg
jg
xor
mov
gs
mov
enter
sahf
and
inc
mov
mov
insl
xchg
stos
jle
insl
fcoms
sbb
or
dec
jnp
dec
mov
mov
stos
push
push
adc
rolb
in
push
divl
aaa
imul
std
loopne
test
in
cmp
out
sub
and
mov
xorl
lods
mov
int3
adc
jp
in
lds
fucomi
cli
sbb
xlat
lahf
sti
call
inc
jg
in
and
mov
xor
mov
orb
cmp
repnz
pop
lock
fists
mov
add
jl
xor
cmc
adc
push
lret
xor
lcall
add
dec
jge
cs
lcall
out
inc
outsb
pop
adc
pop
push
mov
stc
mov
insl
sar
jnp
pop
scas
fdivs
enter
loop
fcoml
push
popf
lcall
mov
pusha
out
xchg
push
add
je
mov
mov
jo
mov
mov
js
mov
or
xchg
loop
ljmp
out
jmp
sbb
cmp
popf
aas
lcall
pusha
mov
icebp
and
shll
add
dec
mov
fadds
push
push
mov
and
addr16
stc
mov
daa
push
dec
imul
cmp
mov
mov
fisttps
icebp
fwait
movl
loopne
stc
inc
scas
dec
push
and
push
jmp
loop
sbb
jle
mov
lea
imulb
test
mov
lea
stc
mov
fidivs
or
add
jecxz
rcr
mov
out
push
lock
lea
push
mov
mov
insb
ljmp
outsb
orl
movl
cld
jne
xchg
in
add
mov
test
mov
out
push
jb
mov
push
lcall
xchg
dec
add
les
mov
insl
or
pop
idivb
addr16
push
inc
test
xchg
mov
mov
jbe
add
mov
mov
addl
jo
ret
mov
stos
enter
in
and
adc
lock
pop
in
cli
sbb
mov
cmp
jge
add
stc
dec
dec
adc
and
fdivrl
mov
cmp
sbb
sub
dec
push
pop
call
pop
movsl
sahf
and
insl
addl
addl
daa
pop
xor
mov
aaa
mov
aaa
lcall
ret
pop
dec
int3
mov
cwtl
sub
sti
mov
mov
sbbl
jb
test
test
dec
into
inc
add
shl
scas
shll
or
loop
inc
jl
pop
mov
call
mov
xor
andl
xchg
stos
lods
mov
push
pop
pop
je
dec
into
popf
clc
pop
jbe
nop
and
lea
sbbb
xor
sub
pop
lret
pop
fsubl
fs
jmp
xchg
sub
and
dec
cli
dec
or
pop
mov
mov
mov
push
jmp
mov
gs
push
shrb
xor
push
cmc
jmp
inc
ss
mov
insb
jle
daa
lret
hlt
inc
fstp
inc
xchg
fsubs
lcall
push
cmp
push
push
adc
addl
jo
cmpsl
add
dec
movsb
movsl
or
push
ljmp
lock
rorl
mov
lret
xor
push
fdivrs
cmp
popf
fldt
xchg
ret
mov
sub
imul
mov
xor
aam
and
push
mov
xlat
test
leave
outsb
sub
inc
and
das
sub
adc
cmp
dec
adc
inc
fmull
jne
jae
mov
push
xor
mov
test
shlb
xchg
cmp
sar
jle
cmp
lds
iret
and
inc
js
mov
mov
test
jne
imul
dec
ss
lret
dec
leave
call
cmp
xchg
loopne
push
pop
mov
xchg
ret
and
ja
fxam
mov
pop
js
mov
pop
popa
sub
jb
data16
jmp
fsubl
aas
test
je
cwtl
sub
push
jne
in
inc
adc
jb
fstpt
mov
mov
xor
lcall
bound
mov
divl
fists
add
mov
aad
sarl
inc
xlat
loop
xor
imul
mov
daa
call
jb
mov
mov
and
test
in
bound
test
cld
ss
call
xchg
push
dec
sbbb
es
jno
and
pop
int
bnd
setnp
out
scas
addr16
xor
inc
fdivr
xor
fnstenv
sub
cltd
aam
enter
daa
push
jbe
xchg
mov
int3
and
dec
sub
stos
and
call
sti
sbb
mov
or
enter
mov
mov
mov
and
sbb
lret
add
inc
stos
les
scas
or
pop
mov
scas
clc
mov
pop
jno
sbb
add
sbb
cs
pop
ret
daa
mov
or
sbb
cld
lds
push
inc
out
imul
insl
mov
pop
and
push
dec
imul
jnp
loope
xor
mov
xor
push
pop
xchg
inc
cli
daa
cmp
stc
repnz
sub
es
leave
pop
sbb
mov
aam
faddp
ss
loope
push
cli
out
or
push
cmp
xor
mov
inc
jle
sub
adc
pop
rorl
or
daa
jbe
dec
mov
gs
pop
xchg
add
in
sub
fcompl
loop
icebp
adcl
push
cmp
repz
fnstsw
pop
sahf
test
pushf
imul
dec
mov
cld
ja
cmp
pusha
aaa
jno
cmp
jmp
dec
into
scas
leave
jmp
xor
leave
das
cmp
dec
fstp
cwtl
ficompl
push
mov
mov
sbb
stos
insl
xor
cmpsl
mov
or
rcrb
sbb
das
and
inc
pop
push
cmc
insb
je
mov
xchg
pop
in
pop
movsl
mov
je
adc
mov
sbb
xor
sub
in
adc
movb
mov
jmp
repnz
leave
sbb
sahf
or
add
push
test
test
aaa
pop
fs
mov
cmpsb
popf
push
cmp
and
scas
cmpl
int
mov
je
sbb
and
inc
adc
dec
adc
adc
or
jl
aaa
cld
mov
sub
mov
cmp
fisttpll
jmp
repz
mul
pop
mov
mov
movsb
lock
loopne
mov
sarb
lds
ret
xchg
int
sub
rcl
cltd
and
lret
cmpsl
adc
popf
insl
rcrb
int3
mov
and
fcmovbe
xchg
jecxz
pop
sbb
mov
or
jns
add
outsb
xchg
in
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
addr16
mov
fists
test
add
mov
push
repnz
iret
jne
jbe
add
sub
push
adc
mov
jge
cmp
inc
ss
mov
inc
sbb
mov
lcall
idivl
fiaddl
gs
mov
jns
xor
mov
sahf
push
or
sti
adc
into
int
aam
cmp
jge
pop
shrl
es
enter
push
rcrb
icebp
push
push
mov
std
in
ljmp
mov
xchg
xor
cmc
mov
sbb
or
mov
push
add
data16
fwait
in
mov
or
imul
push
pop
mov
cmp
addl
dec
xchg
sub
imul
jp
lahf
lret
pop
stos
pop
outsl
or
xchg
ja
in
movsl
fcompl
into
scas
xchg
cltd
xchg
or
push
inc
leave
rolb
mov
cmc
scas
outsl
inc
and
dec
jne
xchg
sub
andl
xor
ds
add
sub
mov
sbb
mov
jmp
out
pop
sbb
inc
cmc
inc
in
or
sub
adc
mov
lods
xor
dec
sub
xchg
pushf
xor
xchg
fcomi
ret
mov
and
fistpl
cwtl
pop
loopne
sbb
movsb
cmp
push
push
shr
shll
std
into
nop
gs
push
lds
insb
jmp
mov
shll
and
ret
ret
adc
jne
ret
push
mov
test
popa
loop
jbe
add
mov
cltd
cwtl
adc
mov
mov
lods
fcom
dec
popa
popl
jl
push
scas
daa
popf
cli
fstpl
addb
shl
xor
lea
test
fsubrl
lea
es
cmp
inc
in
test
sub
jmp
mov
mov
mov
daa
mov
mov
ss
orl
push
push
test
cmp
pop
and
mov
jp
xor
dec
cmp
repz
cmp
lret
sbb
pop
mov
xor
inc
les
pop
popa
cwtl
data16
pusha
mov
push
ds
adc
das
lods
dec
sbb
das
ja
mov
xlat
loop
sbb
fsubs
adc
sub
mov
loope
cmp
movb
mov
psubw
xchg
out
into
jecxz
jnp
hlt
hlt
negl
hlt
mov
jecxz
ds
std
test
js
inc
out
dec
push
repz
sub
cltd
jecxz
cwtl
lret
mov
dec
subl
sbb
cmc
test
shlb
imul
pop
or
popa
xor
lcall
inc
mov
adc
scas
xor
movsl
std
shlb
xor
cmp
xchg
aaa
les
divb
shll
inc
loopne
lcall
fbstp
xchg
mov
or
icebp
popa
mov
fsubr
jge
je
sub
punpckhdq
dec
pop
lahf
and
mov
dec
scas
xchg
mov
mov
repnz
stc
pusha
dec
lahf
xlat
jl
xchg
push
gs
jg
pop
add
pop
gs
aaa
ret
cmpsb
xor
addb
xlat
mov
pop
out
dec
pop
dec
hlt
xor
daa
fucomp
pop
sarl
ljmp
xchg
sahf
cmp
scas
fnstenv
daa
push
mov
outsb
xor
insb
mov
out
int
lds
mov
push
inc
fbstp
repnz
xchg
clc
loopne
test
enter
and
ljmp
aad
or
insb
arpl
xor
jp
jbe
cli
cmp
sarl
lret
xsha1
cmpsb
mov
mov
stc
pop
out
and
rolb
ret
jbe
dec
into
push
fisttpl
xorb
out
loopne
pushf
loope
sti
push
jo
scas
mov
sub
lea
cld
dec
adc
jo
mov
mov
xor
lods
or
nop
cmc
or
scas
xchg
and
sub
aam
jl
jno
stos
neg
jecxz
push
push
cmp
nop
sub
add
iret
pop
aas
sub
cmp
mov
shl
ror
dec
shrl
xorb
jecxz
pop
imull
sahf
in
jnp
pusha
insl
jbe
imul
mov
sarl
dec
mov
arpl
andl
adc
data16
cs
or
insb
cmp
push
cli
sub
sbb
dec
addb
xlat
jb
inc
lahf
addr16
and
pop
jmp
std
inc
js
sub
cmpsl
xor
add
pop
jge
adc
imul
int
xchg
sti
jnp
in
and
loope
aaa
popa
cmpsb
call
pop
enter
dec
in
out
stos
adc
cmp
sbb
push
adc
push
fcoml
inc
outsl
pushf
out
leave
jo
gs
aam
pop
pop
cmp
lock
lds
into
mov
xchg
inc
lods
jl
mov
push
cmpsl
insb
pop
jnp
psubusw
and
cmp
stc
add
pop
dec
in
add
adc
pop
and
mov
aaa
xor
pop
xor
jo
nop
xor
cmp
adc
outsl
rclb
dec
mov
sbb
jbe
or
xchg
sub
add
inc
inc
adc
in
ss
repz
mov
or
and
addb
mov
test
push
sbb
stos
push
pop
mov
adc
pop
cmp
ds
testb
iret
add
mov
add
jbe
xchg
adc
mov
ds
js
pop
adc
cltd
pop
cmpsl
xchg
push
pop
push
loop
in
pop
sbb
and
add
mov
push
int
aad
add
fwait
jmp
mov
idiv
imul
xor
dec
xchg
das
pop
daa
cltd
xor
cmc
jecxz
sbb
xchg
lods
repz
out
repnz
xlat
dec
nop
int3
lea
das
aam
push
std
adc
outsb
in
add
mov
adc
ss
jmp
in
mov
mov
jns
test
mov
push
mov
je
scas
ret
xlat
or
or
mov
leave
xchg
aaa
and
xor
or
pop
push
fs
shl
jp
scas
pop
subb
lahf
xchg
insb
mov
hlt
shrb
fisubl
repnz
cmp
mov
test
push
inc
mov
sbb
adc
or
imul
jle
out
adc
in
out
mov
cs
pop
mov
call
stos
gs
and
or
xor
push
push
ficoms
and
adc
orb
xchg
test
mov
xchg
sbb
cmp
jo
leave
or
icebp
stos
loopne
jns
lea
es
jmp
sbb
sub
cld
xchg
pop
adc
divb
gs
sbb
pop
sahf
and
jnp
push
in
cmpsb
pop
mov
jns
mov
jmp
adc
dec
ret
dec
and
dec
sbb
fistpll
test
push
push
inc
imul
xlat
or
dec
mov
sub
mov
add
cli
repnz
mov
cmp
int
hlt
cmp
movsb
mov
fldl
fmull
jno
sbb
pop
push
cmp
jp
in
cmc
add
mov
jmp
loopne
sub
mov
or
xor
repz
sbb
add
cmp
or
sarb
pop
mov
mov
ret
sub
push
stc
push
enter
gs
ja
test
mov
ret
mov
xchg
nop
js
loopne
lret
test
shlb
push
adc
lahf
push
push
and
adc
je
hlt
xchg
shlb
jecxz
aaa
stos
lds
xchg
sbb
inc
push
cmp
cmp
jl
out
jnp
scas
rolb
ljmp
jns
mov
into
push
icebp
cmp
mov
or
xor
xor
or
inc
push
sahf
or
stos
add
cmp
dec
sub
mov
jle
add
xor
xchg
or
aam
in
aam
pop
push
jp
push
or
mov
fldenv
fists
sub
push
mov
call
cld
mov
stos
xor
push
loope
fisubrs
or
or
lds
cmpb
mov
jb
cmpsl
pop
sar
push
adc
sbb
jle
pushf
mov
mov
pop
sbb
pushf
jl
arpl
and
sub
rcrb
and
ja
jo
cmp
test
cmc
js
in
cmp
cmp
sub
in
xchg
sbb
mov
scas
mov
sub
mov
aas
ds
push
fs
notb
add
ds
pop
insb
push
hlt
repnz
loop
pop
call
dec
push
add
jo
fwait
mov
xor
nop
adc
lret
out
mov
lock
movsb
mov
cmpsb
stc
jp
aam
push
jmp
dec
mov
xor
fldcw
cld
mov
lahf
sbb
adc
push
push
sahf
xor
fcompl
movq
xchg
push
mov
adc
pop
ja
notl
jmp
sub
and
nop
adc
mov
lods
dec
cmp
cwtl
clc
int
inc
mov
inc
push
ljmp
dec
push
sbbl
pop
fisubs
bound
jnp
sbb
pop
push
xor
mov
insb
data16
push
or
mov
or
sub
fbld
addb
mov
nop
jae
mov
pop
inc
mov
mov
jp
and
das
pop
sub
inc
lret
sub
test
xor
leave
inc
stos
test
mov
or
dec
inc
jecxz
sbb
popf
sub
mov
sub
bound
xor
push
loopne
and
das
jae
sub
sbb
out
dec
jbe
jp
mov
lock
icebp
xchg
pop
jne
scas
fsubrl
call
pop
rolb
ret
sti
outsb
aam
or
mov
push
leave
jp
cmpsb
mov
test
add
lds
inc
cmp
mov
jb
jmp
cwtl
mov
mov
insb
jnp
push
xchg
mov
sub
fs
push
ss
push
movsl
add
xchg
jl
sbb
add
fsubp
xchg
dec
adc
outsb
or
test
aas
sbb
in
pop
push
jno
int
or
sub
ss
aad
jns
pop
add
mov
mov
mov
addb
mov
jecxz
es
stos
or
leave
lahf
mov
outsl
mov
andl
cli
les
jns
std
ficompl
dec
push
es
cmp
arpl
es
stc
dec
jo
jle
adc
push
dec
pop
loop
inc
jno
jl
or
ds
cmc
in
cmp
pushf
push
lretw
jnp
mov
mov
mov
adc
sub
and
cltd
out
int3
sbb
enter
mov
jl
rorl
push
hlt
mov
add
jp
push
inc
add
cmpsb
adcl
sub
add
fisubl
add
lret
cld
repnz
aas
inc
cmpsb
ret
sub
mov
inc
jo
mov
das
roll
pop
in
inc
sub
jno
jp
mov
cmp
adc
dec
inc
ficoms
test
aad
and
push
or
push
and
pop
cli
jae
add
cmpsb
inc
enter
push
addb
clc
pop
mov
hlt
xchg
outsb
jge
cmp
test
fdivp
lret
shll
adc
xor
cld
adc
adc
sub
jmp
test
jbe
in
jb
imul
cmp
hlt
rclb
fs
icebp
jl
fadd
pop
inc
std
testb
jnp
lock
mov
out
mov
push
jle
int3
fbstp
fnsave
movsb
inc
sub
jge
icebp
adc
push
outsb
or
pop
push
pop
inc
add
pop
stc
aas
or
call
add
jle
pop
cmp
stos
xchg
lds
pop
sub
sarl
mov
ja
and
loop
xchg
adc
lahf
adc
xchg
pop
or
cmp
daa
shll
rcr
mov
repz
popa
scas
cmpsl
addb
mov
pop
lock
mov
jp
sahf
jbe
pop
out
ljmp
mov
mov
xchg
xor
inc
sbb
jmp
ja
cs
mov
outsb
dec
data16
cmp
pop
sub
pop
cli
sarb
sub
mov
ret
cmp
mov
into
int
pushw
test
roll
dec
sub
mov
sbb
jo
ret
test
cmc
aaa
fwait
enter
jno
adc
aam
loop
repz
jae,pn
pop
iret
sbb
dec
outsl
pop
scas
stc
dec
je
inc
fs
cmp
pop
shr
mov
les
in
mulb
adc
mov
or
mov
lret
push
dec
inc
jmp
push
adc
sub
bound
jne
mov
fcomps
cli
sti
std
fwait
outsl
fisubrl
cmpsl
popf
lret
xlat
add
mov
sbb
adc
xorl
jno
sbb
push
sub
fisubs
inc
jecxz
mov
inc
jmp
mov
cmp
mov
jnp
push
cmpsb
mov
sbbb
lods
lcall
sbb
loopne
xchg
inc
mov
adc
pop
scas
iret
mov
jge
add
bound
inc
adc
mov
xchg
adc
pop
sub
cmp
insl
int3
push
push
int
ret
insb
sbb
fldenv
pop
mov
inc
sub
pop
jne
jp
gs
sbb
dec
adc
xchg
mov
add
daa
fcomi
push
sbb
jmp
sub
xchg
imul
test
addl
test
sbb
cmc
insb
jp,pt
mov
jmp
std
or
daa
outsb
mov
mov
push
mov
mov
sbb
fwait
jg
dec
mov
mov
adc
jae
sbb
or
aam
insl
mov
pop
xchg
pop
inc
aas
mov
cmp
jnp
es
inc
roll
seto
sbb
adcb
inc
mov
mov
ret
aaa
lret
adcb
ficoml
push
cld
mov
ds
int
adc
adc
adc
fists
es
push
mov
cmp
movsl
mov
jne
pop
pop
pop
ds
dec
mov
cltd
jno
repz
mov
fsubr
cmp
gs
lock
shll
and
mov
pop
repz
aaa
cs
mov
xchg
mov
outsl
test
push
xor
into
push
lcall
lret
aaa
lds
sub
jbe
pop
mov
data16
cmp
es
sbb
pop
xchg
mov
test
mov
push
sub
popf
inc
std
std
mov
pop
jg
fidivrs
sub
and
cmp
sub
jmp
push
mov
xchg
sub
gs
cmpsl
dec
push
daa
daa
or
cs
stos
push
push
cmpb
dec
sub
jl
add
fs
cmovns
lods
xchg
fistl
mov
mov
sub
xor
sti
shrl
rcll
and
xor
movsl
cmpsb
add
mov
inc
dec
mov
adc
adc
add
jecxz
jl
popl
mov
or
adc
mov
test
push
pop
fstpt
js
jb
pop
xor
or
loopne
insl
mov
cwtl
lock
xchg
pop
leave
test
scas
in
pop
lcall
cmpb
das
imul
inc
cld
inc
std
add
xor
xlat
mov
out
hlt
std
pop
and
dec
movsb
xor
out
lahf
mov
stos
mov
jl
lahf
xchg
push
mov
mov
jbe
aaa
dec
ror
in
fcmovnbe
fnstcw
das
dec
pop
mov
mov
scas
xor
dec
out
jne
loope
out
ret
stc
push
pop
stc
cltd
jl
js
stos
pop
shrb
lock
pushf
sbb
pushf
or
imul
addb
pop
pop
lock
jmp
or
lcall
insb
sub
xchg
mov
iret
js
cmc
xchg
outsb
xor
inc
sub
push
out
data16
xchg
and
arpl
fs
jge
mov
add
mov
mov
add
push
adc
shll
addr16
test
jl
aad
add
cmp
dec
push
loop
sub
or
sahf
inc
sub
ret
les
dec
pop
add
sbb
daa
in
shlb
sti
cmp
pop
mov
loope
cmp
adc
pop
and
fdivrp
push
or
adc
jp
rorb
cs
mov
xor
cmpb
adc
pop
or
aam
cmp
pop
jmp
mov
out
bound
cmp
fwait
lcall
ss
lea
int
fstl
lods
int
xor
add
cmc
sbb
cli
and
jecxz
pop
mov
loopne
out
mov
push
jo
cmp
push
outsb
out
lret
mov
sbb
arpl
inc
inc
push
daa
sub
je
pop
mov
dec
inc
lea
sub
or
mov
cltd
test
fidivs
mov
popa
jns
jmp
enter
pop
cmpl
outsb
cmp
mov
cmpsl
xchg
fld
mov
test
sbb
inc
cmp
dec
adc
fldt
adc
addr16
scas
mov
pop
mov
add
add
movsl
pop
ror
jae
xor
repnz
adc
adc
inc
pop
mov
dec
dec
inc
in
mov
cmpl
gs
push
hlt
push
sub
mov
iret
fsubrs
fwait
enter
sti
push
xor
adc
mov
stos
cmpsl
sbb
cs
rcrb
pop
adc
andb
adc
scas
int
popf
xchg
adc
xor
into
cmpsb
xor
cs
pop
push
ss
in
dec
jecxz
loope
ja
inc
jns
test
inc
mov
cmp
lock
xchg
cmpsl
icebp
or
jmp
jp
push
xchg
and
lea
lock
cmc
mov
ljmp
mov
mov
adc
jbe
pop
xor
and
aam
jp
xlat
mov
repz
jg
pop
push
cmp
xchg
push
gs
dec
add
in
vpcomb
or
es
shrl
popa
scas
sbb
add
test
test
or
stos
cld
sbb
inc
cmpsl
push
mov
and
cld
imulb
jle
or
cmpsb
ss
sub
jle
je
jecxz
jne
pop
andl
outsl
fidivs
andl
data16
call
cmpsb
jg
mov
sub
icebp
cmp
aam
ja
xchg
cltd
jae
push
push
mov
cmpsb
xor
insb
insl
mov
mov
sub
and
xor
ljmp
pop
iret
enter
sbb
lcall
or
xchg
mov
mov
flds
adc
cs
jge
mov
cmpsl
lds
jecxz
sub
mov
cmp
mov
orl
decl
or
mov
scas
aam
call
pop
or
cltd
dec
in
or
fimull
sbb
bound
mov
xor
add
mov
mov
lret
aam
cmp
cmc
jne
insl
enter
mov
cmovbe
pop
cwtl
add
pop
je
pusha
out
mov
scas
cld
dec
aas
xor
push
mov
lret
in
repz
mov
jl
mov
push
leave
hlt
sub
inc
in
popa
int3
pop
cmp
xchg
xlat
shl
lods
not
ficoml
in
mov
push
ret
int3
xchg
dec
cmp
loopne
dec
xorl
pushf
mov
jmp
daa
out
shl
mov
ret
enter
ss
sub
adc
clc
sahf
and
push
cld
inc
sbb
jg
shl
jecxz
pop
cmp
jo,pt
cmp
fiaddl
test
cld
mov
push
pop
sbbl
sbb
fsts
imul
jb
adc
mov
add
fidivl
dec
leave
and
int
jno
mov
or
insb
imul
push
cs
xchg
pop
les
push
js
dec
adc
mov
arpl
out
imul
lea
inc
push
push
xchg
popf
sbb
cltd
fidivrl
inc
jecxz
xor
stos
jg
leave
xchg
cs
cld
rol
sbb
ljmp
cli
sub
orl
icebp
pop
lds
nop
add
add
fnsave
testl
sbb
jle
mov
xlat
push
xorb
lcall
in
cmpsl
fs
and
arpl
add
ret
dec
rcr
aad
in
sbb
mov
sti
or
fwait
mov
mov
js
or
jns
lods
push
sbb
adc
sbb
testl
aaa
sbb
daa
dec
pop
aaa
aam
dec
cmc
aas
mov
sbb
and
pusha
jle
cld
pop
das
push
sbb
xchg
jp
loop
loopne
je
daa
sar
sbb
scas
xor
fistps
jns
inc
jmp
test
mov
pop
cmp
mov
mov
cs
in
or
push
outsl
adcl
sbbl
mov
pop
stos
ret
iret
gs
flds
pop
icebp
shl
adc
movsl
out
mov
mov
fs
ss
mov
and
cmpl
in
fld
mov
mov
lods
test
das
push
pop
push
jle
mov
and
sbb
fs
cmc
xlat
pushf
add
push
addr16
mov
int3
mov
mov
cmc
jno
sbb
in
push
and
bound
icebp
gs
imul
mov
push
mov
adc
and
das
clc
cmp
jmp
inc
popf
lods
jecxz
dec
stc
arpl
adc
movsb
xchg
dec
or
cmpsb
mov
jp
popf
ret
loop
lahf
push
ds
dec
sarl
adc
xchg
xor
gs
out
insl
les
call
push
cmc
push
aas
push
aam
dec
cmovb
pusha
loope
mov
int3
cmp
pop
pop
nop
mull
sub
in
or
push
cmc
inc
mov
mov
pushf
push
fcomp
jmp
aad
fistps
ret
mov
mov
sbb
sbb
jne
sarb
sub
inc
pushf
outsl
sbb
adc
sub
jle
enter
lret
fisubrs
lret
fdivs
sti
repnz
pop
jl
adc
jno
mov
rcrl
push
aas
cmpsb
inc
or
clc
faddl
pop
xor
in
fisttps
testl
icebp
jbe
push
in
aam
cld
psrlq
mov
mov
sbb
ja
add
iret
mov
cs
loope
mov
lret
add
or
test
out
es
jne
cli
xchg
or
inc
iret
xchg
inc
std
imul
lcall
shl
out
ljmp
in
popf
ja
xchg
test
std
into
test
movsb
cmp
imul
sub
cwtl
out
mov
jle
mov
in
mov
stos
insl
decl
jns
push
sar
adc
sbb
xor
or
xchg
push
gs
mov
hlt
in
push
add
push
mov
cmpsl
cld
add
push
outsl
loop
repz
sub
push
adc
outsl
js
or
outsl
dec
inc
jae
scas
mov
int
lods
fs
mov
mov
push
cmp
push
cmp
in
sub
mov
out
movsl
push
icebp
and
pop
lahf
pop
inc
lea
sbb
xchg
lcall
mov
jns
ds
cmp
or
rorl
das
mov
mov
xchg
gs
mov
pushf
test
and
xchg
popf
lahf
bound
negl
call
add
stos
leave
shlb
xchg
add
es
int3
mov
aam
out
adc
pop
inc
jg
cs
scas
aas
mov
fidivrs
gs
adc
lea
cmovns
pop
sbb
xlat
lret
jae
nop
scas
fisubrl
sub
pop
fidivl
test
addl
cmp
xor
xchg
lret
push
mov
das
cltd
add
das
and
mov
or
pop
dec
shlb
daa
add
push
mov
sti
xchg
data16
inc
fisttpll
scas
out
add
outsl
xchg
add
mov
in
cmc
jecxz
jb
xchg
mov
inc
nop
and
lahf
push
mov
mov
insl
add
mov
stos
and
sbb
add
cmp
ret
clc
adc
pushf
mov
mov
cwtl
jp
xor
shl
xchg
movsb
add
nop
inc
adc
xchg
adc
popa
les
mov
jae
nop
leave
xor
ficoms
int3
arpl
ljmp
pop
lea
sbb
mov
push
in
mov
lahf
test
cmp
mov
jb
sub
cs
mov
mov
call
xor
incb
addr16
insl
adc
cmp
lret
jmp
out
shrl
push
faddl
aaa
mov
mov
cmp
incl
cwtl
arpl
dec
loop
and
sub
ret
in
cmpl
cli
fcoml
xor
std
xor
dec
stc
pop
xor
cmp
dec
mov
and
ficoml
mov
or
push
imul
lds
jecxz
test
into
mov
shlb
and
je
push
mov
out
ret
mov
or
add
pop
jo
sti
sub
in
inc
pusha
test
incb
arpl
cmc
es
xlat
sub
mov
lea
fwait
es
xor
mov
jns
stos
mov
repz
mov
cmp
sub
add
es
mov
rcr
add
std
pop
and
jg
add
jle
loopne
rcr
jg
clc
and
xor
jl
and
push
dec
movsl
out
jnp
add
movsl
rcrl
loopne
inc
mov
iret
lods
lea
pop
adc
xchg
fistpll
ljmp
shrl
sahf
aad
sub
jge
mov
shl
setns
cmpsb
sub
mov
dec
insl
in
aas
outsl
sub
test
pop
dec
iret
jle
adc
stos
lahf
jnp
shrl
cs
rolb
addr16
movsl
or
jnp
mov
in
xor
or
fiadds
add
mov
hlt
jbe
dec
push
dec
jp
push
test
lods
rclb
outsb
movsb
ja
adc
nop
mov
mov
test
bswap
dec
cmp
cmpsb
push
dec
cmp
lods
lea
stos
xlat
and
xor
push
loope
mov
mov
cltd
sub
push
repnz
cmp
rorl
repnz
shll
mov
xor
incb
mov
fistl
push
mov
ret
arpl
das
and
cmp
fildll
push
test
cwtl
lea
and
xor
call
mov
cli
xchg
mov
cltd
pop
inc
jge
mov
and
jnp
nop
mov
into
mov
dec
std
pop
cmc
add
push
gs
add
push
mov
pop
dec
call
lock
mov
dec
adc
add
and
cmp
cmp
jb
or
lods
jecxz
divb
popa
mov
loopne
outsb
jecxz
lcall
and
shll
push
mov
cmpsb
negl
dec
idivl
xor
sbb
and
push
cli
xor
outsb
int3
scas
inc
xor
xchg
xor
in
mov
cmp
push
xor
push
push
mov
and
cwtl
push
push
xchg
test
pop
negl
sbb
jmp
data16
test
ja
inc
divb
or
ret
das
cmp
mov
ret
clc
jecxz
push
scas
movsb
clc
mov
dec
add
roll
fcompl
inc
pop
sbb
cwtl
stos
xlat
syscall
cmp
mov
mulb
jmp
dec
inc
inc
pop
mov
ljmp
test
xor
push
outsb
dec
scas
push
movsb
mov
mov
shlb
lret
ret
and
mov
dec
lahf
push
jp
lock
out
insl
mov
xchg
dec
cmp
dec
adc
xchg
gs
sbb
or
or
push
and
mov
sbb
inc
xchg
cmp
iret
xchg
in
mov
orb
fadds
xor
or
adc
outsl
xchg
aaa
lea
inc
movsl
je
cmc
lods
lahf
pop
or
pop
js
call
sbb
mov
dec
xchg
mov
or
lret
movsl
or
std
or
jbe
xchg
xchg
xchg
or
aas
and
mov
stc
ret
pop
jge
adc
or
mov
or
mov
cmp
insb
mov
cs
xor
mov
pop
shr
pop
mov
cmpsl
sub
mov
out
xor
mov
cmpsl
jmp
out
les
aam
mov
loopne
mov
mov
aam
test
add
stc
ret
mov
imul
cwtl
dec
fiaddl
div
daa
pop
mov
adc
jle
adc
pop
repz
mov
fstpt
push
aaa
pop
out
push
add
ret
into
arpl
arpl
and
and
imul
jnp
pop
lods
inc
sbb
push
xchg
fsub
cmp
cltd
add
push
in
sbbl
stc
loopne
add
imul
adc
cmp
je
imul
mov
or
mull
jg
jo
mov
mov
xor
mov
gs
xchg
aaa
repnz
gs
push
or
inc
jb
rolb
or
push
aad
mov
fcom
mov
jns
icebp
loopne
add
push
mov
jns
fidivrs
pop
pop
add
or
pusha
jne
test
mov
lss
inc
fcmovb
sti
jns
rcrl
mov
jge
sbb
push
sub
dec
aaa
insl
in
int
imul
mov
ret
and
adc
add
jbe
pop
adc
popf
xor
mov
fucomip
jmp
outsl
inc
mov
pop
mov
imul
jl
xchg
insb
mov
cmp
testl
inc
jb
ja
mov
mov
push
mov
dec
imul
cmc
hlt
push
dec
lock
out
push
test
sub
xchg
notb
add
cmpsl
pop
int
sbb
dec
pushf
repnz
outsb
pop
test
scas
jp
fidivrl
mov
xor
sbb
jno
lea
cmp
dec
sub
mov
cmpl
jle
movsb
cwtl
enter
xchg
adcb
add
push
addb
inc
data16
fcoml
out
dec
call
cs
ljmp
out
sbbb
js
dec
xor
jge
ja
outsb
pop
daa
fcmove
adc
ret
sti
ficoml
and
mov
or
add
imul
xchg
movsl
fwait
movsl
mov
outsl
jl
adc
push
jp
das
inc
nop
or
jge
inc
insb
ljmp
test
pushf
pop
test
pusha
ret
ss
add
arpl
pop
stos
imul
or
aas
or
push
stos
in
enter
xchg
mov
in
and
sub
or
dec
imull
arpl
push
adc
or
xchg
pop
and
pusha
push
sbb
dec
jge
jl
sbb
dec
repz
loope
add
add
adc
fcom
adc
insl
ret
lods
imul
enter
lea
mov
mov
rolb
mov
loopne
cld
mov
into
adc
jnp
sbb
mov
mov
push
xlat
std
jae
or
cmp
push
lret
xlat
scas
mov
enter
sub
scas
adc
pop
fs
mov
shrl
xchg
pop
cwtl
and
outsb
cmpsl
pop
cmp
scas
je
outsl
mov
mov
jb
aad
call
mov
popf
mov
cmp
xchg
cmpsl
pop
and
cltd
icebp
sbb
push
xor
xchg
mov
pop
jne
pusha
xchg
pop
mov
stos
loopne
arpl
aaa
dec
jo
fidivrl
in
add
adc
adc
xchg
mov
sbb
xchg
xorb
or
stc
xor
cmp
loopne
imul
inc
adc
int
fsub
ret
fcoms
adc
mov
mov
xor
or
loope
push
push
xchg
scas
movsb
cld
and
dec
sbb
es
push
fchs
push
jo
xchg
dec
dec
ret
and
cmp
in
flds
jne
add
outsl
movsl
ds
pop
jecxz
pop
adcb
cltd
xchg
shll
test
mov
out
inc
test
pusha
cwtl
outsb
mov
leave
xor
dec
xor
xchg
ds
lock
fsubrs
add
and
or
popa
sub
out
jmp
pop
sti
or
add
iret
and
push
jmp
adc
loope
adc
lcall
push
es
and
and
pop
cmp
les
iret
xchg
inc
imul
cmp
mov
aam
fisttpl
repnz
adc
ja
jne
pop
and
scas
xor
mov
cmp
lds
xchg
ds
adc
enter
adcb
mov
jo
add
pop
dec
outsl
adc
sbb
negl
mov
mov
mov
dec
aas
pop
xor
mov
mov
push
rcrb
lods
test
in
cmpsl
stc
es
adc
or
les
add
repz
rcr
dec
inc
adc
sub
into
ret
or
pop
fcos
cmp
inc
scas
fiaddl
ds
mov
sbb
pop
add
pop
cmpsb
push
orb
rcl
test
lds
mov
shll
mov
xchg
div
mov
dec
mov
inc
pusha
jns
jmp
test
jno
mov
mov
sub
loopne
cld
ljmp
xchg
add
mov
ret
psubusw
in
sbb
sbb
call
repz
mov
or
xor
vdivps
sarb
mov
sbb
adc
mov
test
movsb
inc
add
jmp
or
stos
aad
fcom
aas
mov
popa
push
fistpl
xlat
fbld
or
adc
adc
loope
loop
out
dec
push
ja
sbb
inc
div
dec
sbb
cwtl
xrelease
or
faddp
in
fstps
dec
cmpsb
and
outsb
hlt
ljmp
push
mov
push
js
jne
call
jg
test
pop
xchg
and
loope
sub
into
xor
pop
mov
je
in
sahf
push
loop
adc
jns
cmp
add
mov
jl
into
arpl
subb
scas
or
sbb
inc
xchg
mov
mov
loopne
xchg
movsl
mov
sbb
pop
dec
and
mov
std
sbb
xchg
test
inc
mov
pop
dec
pop
pop
and
pop
xor
call
mov
das
into
addr16
inc
adc
jo
mov
pop
add
add
addb
in
or
and
test
cmp
lods
lods
decb
sub
push
sbb
fsubrl
aam
dec
adc
pop
cltd
dec
movsl
in
movsl
mov
jmp
sbb
imul
les
shl
dec
outsb
fs
add
add
and
xchg
sub
stos
test
nop
fsub
pop
push
int
bound
jp
xorb
push
sarl
mov
jbe
sbb
out
out
pop
cmp
aas
dec
sbbb
mov
jne
out
mov
fimull
rorl
cs
xchg
lods
loop
push
or
je
xchg
add
ret
ret
cmp
or
mov
setnp
fisubrl
push
jmp
fisubrs
pop
orb
mov
mov
inc
repz
enter
jecxz
pushf
popl
mov
rorb
aad
enter
mov
cmpsb
cmpsb
dec
shrb
add
mov
ret
fstl
mov
ret
xchg
in
pop
xor
ljmp
loopne
sbb
pop
cmp
in
inc
mov
inc
insl
rolb
cmp
scas
popf
into
inc
iret
cltd
out
push
lock
loop
jp
push
mov
ja
nop
xchg
les
sbbb
pop
jmp
sub
int
sbb
pop
dec
xchg
push
pop
test
mov
les
sub
ss
inc
push
or
or
push
sbb
gs
push
imul
mov
jle
std
fcoms
call
ret
xchg
daa
and
mov
mov
cmp
pop
add
or
insb
xlat
jmp
mov
out
xchg
insl
add
adcl
xchg
pop
dec
das
jne
cltd
sub
shll
sub
xchg
xchg
jg
xor
mov
gs
mov
enter
sahf
and
inc
mov
mov
insl
xchg
stos
jle
insl
fcoms
sbb
or
dec
jnp
dec
mov
mov
stos
push
push
adc
rolb
in
push
divl
aaa
imul
std
loopne
test
in
cmp
out
sub
and
mov
xorl
lods
mov
int3
adc
jp
in
lds
fucomi
cli
sbb
xlat
lahf
sti
call
inc
jg
in
and
mov
xor
mov
orb
cmp
repnz
pop
lock
fists
mov
add
jl
xor
cmc
adc
push
lret
xor
lcall
add
dec
jge
cs
lcall
out
inc
outsb
pop
adc
pop
push
mov
stc
mov
insl
sar
jnp
pop
scas
fdivs
enter
loop
fcoml
push
popf
lcall
mov
pusha
out
xchg
push
add
je
mov
mov
jo
mov
mov
js
mov
or
xchg
loop
ljmp
out
jmp
sbb
cmp
popf
aas
lcall
pusha
mov
icebp
and
shll
add
dec
mov
fadds
push
push
mov
and
addr16
stc
mov
daa
push
dec
imul
cmp
mov
mov
fisttps
icebp
fwait
movl
loopne
stc
inc
scas
dec
push
and
push
jmp
loop
sbb
jle
mov
lea
imulb
test
mov
lea
stc
mov
fidivs
or
add
jecxz
rcr
mov
out
push
lock
lea
push
mov
mov
insb
ljmp
outsb
orl
movl
cld
jne
xchg
in
add
mov
test
mov
out
push
jb
mov
push
lcall
xchg
dec
add
les
mov
insl
or
pop
idivb
addr16
push
inc
test
xchg
mov
mov
jbe
add
mov
mov
addl
jo
ret
mov
stos
enter
in
and
adc
lock
pop
in
cli
sbb
mov
cmp
jge
add
stc
dec
dec
adc
and
fdivrl
mov
cmp
sbb
sub
dec
push
pop
call
pop
movsl
sahf
and
insl
addl
addl
daa
pop
xor
mov
aaa
mov
aaa
lcall
ret
pop
dec
int3
mov
cwtl
sub
sti
mov
mov
sbbl
jb
test
test
dec
into
inc
add
shl
scas
shll
or
loop
inc
jl
pop
mov
call
mov
xor
andl
xchg
stos
lods
mov
push
pop
pop
je
dec
into
popf
clc
pop
jbe
nop
and
lea
sbbb
xor
sub
pop
lret
pop
fsubl
fs
jmp
xchg
sub
and
dec
cli
dec
or
pop
mov
mov
mov
push
jmp
mov
gs
push
shrb
xor
push
cmc
jmp
inc
ss
mov
insb
jle
daa
lret
hlt
inc
fstp
inc
xchg
fsubs
lcall
push
cmp
push
push
adc
addl
jo
cmpsl
add
dec
movsb
movsl
or
push
ljmp
lock
rorl
mov
lret
xor
push
fdivrs
cmp
popf
fldt
xchg
ret
mov
sub
imul
mov
xor
aam
and
push
mov
xlat
test
leave
outsb
sub
inc
and
das
sub
adc
cmp
dec
adc
inc
fmull
jne
jae
mov
push
xor
mov
test
shlb
xchg
cmp
sar
jle
cmp
lds
iret
and
inc
js
mov
mov
test
jne
imul
dec
ss
lret
dec
leave
call
cmp
xchg
loopne
push
pop
mov
xchg
ret
and
ja
fxam
mov
pop
js
mov
pop
popa
sub
jb
data16
jmp
fsubl
aas
test
je
cwtl
sub
push
jne
in
inc
adc
jb
fstpt
mov
mov
xor
lcall
bound
mov
divl
fists
add
mov
aad
sarl
inc
xlat
loop
xor
imul
mov
daa
call
jb
mov
mov
and
test
in
bound
test
cld
ss
call
xchg
push
dec
sbbb
es
jno
and
pop
int
bnd
setnp
out
scas
addr16
xor
inc
fdivr
xor
fnstenv
sub
cltd
aam
enter
daa
push
jbe
xchg
mov
int3
and
dec
sub
stos
and
call
sti
sbb
mov
or
enter
mov
mov
mov
and
sbb
lret
add
inc
stos
les
scas
or
pop
mov
scas
clc
mov
pop
jno
sbb
add
sbb
cs
pop
ret
daa
mov
or
sbb
cld
lds
push
inc
out
imul
insl
mov
pop
and
push
dec
imul
jnp
loope
xor
mov
xor
push
pop
xchg
inc
cli
daa
cmp
stc
repnz
sub
es
leave
pop
sbb
mov
aam
faddp
ss
loope
push
cli
out
or
push
cmp
xor
mov
inc
jle
sub
adc
pop
rorl
or
daa
jbe
dec
mov
gs
pop
xchg
add
in
sub
fcompl
loop
icebp
adcl
push
cmp
repz
fnstsw
pop
sahf
test
pushf
imul
dec
mov
cld
ja
cmp
pusha
aaa
jno
cmp
jmp
dec
into
scas
leave
jmp
xor
leave
das
cmp
dec
fstp
cwtl
ficompl
push
mov
mov
sbb
stos
insl
xor
cmpsl
mov
or
rcrb
sbb
das
and
inc
pop
push
cmc
insb
je
mov
xchg
pop
in
pop
movsl
mov
je
adc
mov
sbb
xor
sub
in
adc
movb
mov
jmp
repnz
leave
sbb
sahf
or
add
push
test
test
aaa
pop
fs
mov
cmpsb
popf
push
cmp
and
scas
cmpl
int
mov
je
sbb
and
inc
adc
dec
adc
adc
or
jl
aaa
cld
mov
sub
mov
cmp
fisttpll
jmp
repz
mul
pop
mov
mov
movsb
lock
loopne
mov
sarb
lds
ret
xchg
int
sub
rcl
cltd
and
lret
cmpsl
adc
popf
insl
rcrb
int3
mov
and
fcmovbe
xchg
jecxz
pop
sbb
mov
or
jns
add
outsb
xchg
in
add
outsl
pushf
push
hlt
xchg
dec
mov
sub
push
adcl
std
fs
pop
sbb
xchg
sub
out
sbb
jns
push
mov
repnz
dec
jecxz
ret
std
nop
adc
std
or
leave
adc
out
cld
ds
jmp
pop
pop
lcall
outsb
push
xor
xor
mov
inc
push
ljmp
out
arpl
in
stos
mov
rcr
rcl
and
repnz
dec
inc
cmc
jno
insl
push
mov
or
bound
ret
and
mov
inc
sub
pusha
std
push
test
mov
sub
cmp
arpl
or
jg
cmpsl
sbbb
dec
and
js
xchg
ja
lret
sbb
jge
jmp
or
push
orb
xor
jnp
xlat
push
and
fcmovnu
inc
cmpsl
mov
adc
fnsave
pop
jb
std
popf
loop
sarl
aam
fnstcw
push
dec
fxch
sahf
hlt
stc
sbb
pushf
jne
loopne,pt
sub
inc
fdivrs
mov
inc
jge
ljmp
cmc
sti
sub
pop
add
cmpl
mov
mov
push
dec
cmp
ljmp
nop
and
leave
inc
fsubl
fbld
inc
xchg
inc
xchg
stc
rclb
in
xchg
or
or
cmp
rorl
fstps
jmp
sub
in
outsl
cli
shll
push
push
jo
jmp
xor
or
cs
lock
push
fsubl
jle
stos
mov
xor
cmpsb
lcall
and
push
repz
cmp
sub
jb
lret
ffreep
lea
xchg
inc
adc
fcmovnu
cltd
or
xlat
es
dec
pop
in
xchg
into
lahf
cs
in
lods
sbb
mov
movsb
jge
or
mov
adc
out
jl
mov
jp
lods
adc
add
dec
or
outsl
cmpsb
mov
ja
loopne
cmc
sbb
out
icebp
pop
fldl
out
jns
sub
fadd
cmpsl
jge
sahf
jge
xchg
mov
jne
mov
mov
imul
sti
lcall
inc
fs
aad
xchg
cmp
arpl
insb
sbb
cld
shlb
xor
loope
loop
bound
jge
inc
sub
pop
and
repnz
mov
mov
arpl
xchg
mov
fistpll
add
jmp
xchg
movsb
mov
adc
mov
int
jbe
lret
xchg
and
jb
imul
not
ret
pop
std
dec
pop
xchg
adc
push
enter
cs
cmpsl
das
push
dec
nop
daa
cmc
out
mov
cmpsl
sti
and
pop
subb
mov
xchg
sub
dec
test
insb
add
mov
pop
orl
in
xlat
and
sub
mov
negl
sbb
xor
int3
and
pop
pop
cli
sub
ss
aam
mov
xchg
pushf
ficoms
ljmp
arpl
and
loopne
push
jl
ljmp
sahf
out
jb
ret
pop
cmp
xchg
push
pusha
fwait
jge
and
nop
xchg
stos
push
pop
clc
adc
enter
mov
jns
xchg
insl
jbe
enter
inc
xchg
and
loope
cmp
or
jnp
or
imul
mov
gs
out
push
sbbb
inc
and
movsl
addr16
shl
int3
cmpsb
mov
aas
cvtpi2ps
dec
ret
mov
in
cmp
repz
ss
mov
add
cmp
and
dec
in
outsl
insb
cmc
gs
adc
test
push
stc
jnp
mov
imul
lds
bound
dec
mov
jle,pt
into
pop
outsb
sub
fadd
ficomps
ret
insb
sub
sti
int
mov
lds
sti
cmp
fistl
push
adc
dec
das
inc
sub
add
arpl
mov
push
cmc
into
xor
mov
dec
iret
ret
pop
mov
pop
or
std
jge
sahf
pop
shrb
lret
jle
inc
and
cmp
and
xor
xchg
lahf
xchg
dec
cmp
cmc
and
inc
fsubl
test
push
sti
cld
cmp
pop
scas
add
jl
add
outsb
iret
xor
push
xor
mov
sub
adc
imul
sbb
dec
imul
jle
in
push
lock
mov
aam
test
dec
xor
dec
xchg
or
add
jnp
dec
aaa
pop
xor
inc
loop
push
scas
add
loope
out
dec
mov
xor
cmp
inc
fistl
xor
lea
repnz
sub
lahf
fisubrl
xchg
adc
and
dec
cwtl
fiadds
je
pop
add
mov
arpl
mov
and
sub
mov
and
pusha
pop
jns
fidivrl
push
mov
data16
and
lods
icebp
test
js
push
cld
pop
mov
shl
xor
ja
xchg
sarl
mov
loopne
enter
lret
sbbb
add
xchg
jnp
mov
fs
and
fisubrs
mov
sarl
das
test
sub
ret
and
in
sbb
in
sbb
imul
mov
jnp
sbb
xlat
pop
push
sub
mov
pop
test
insb
push
ds
mov
fildll
in
ds
adc
orl
lods
mov
xor
push
sbb
dec
hlt
mov
push
loop
test
lea
dec
shrl
and
push
scas
out
mov
bound
pslld
push
mov
sarb
and
cmp
mov
addb
fsubl
pop
push
and
insl
jl
push
cmpsb
mov
pusha
cmp
dec
and
jp
sub
insl
mov
jne
mov
dec
fmuls
push
xchg
pop
and
push
mov
lods
add
inc
sub
jne
jb
pusha
lods
jae
and
inc
imul
jb
and
scas
cmp
in
push
cwtl
adc
movsl
inc
lock
cltd
xchg
enter
mov
cld
call
shrl
shr
pop
mov
ds
mov
dec
push
dec
or
aam
test
xchg
pop
lret
xor
es
rcrb
inc
push
pusha
jns
inc
mov
les
orb
imul
lcall
fldl
call
loop
mov
dec
jp
or
jno
or
aam
lock
mov
imul
mov
xor
scas
and
js
fnstenv
cmp
pop
mov
and
aaa
and
cli
jbe
push
sub
rclb
cmpb
cmpsb
mov
sbb
cmp
jmp
movb
test
push
int3
sub
icebp
push
or
movsb
mov
inc
inc
rol
push
cmp
popa
aad
jae
inc
push
leave
cmp
pop
imul
and
and
scas
push
test
dec
jecxz
mov
sbb
push
lret
bound
and
rcpps
in
pop
aaa
mov
adc
inc
stos
in
cmp
std
cmp
lret
shll
pop
daa
aas
sbb
in
pop
pushf
loop
jle
inc
inc
adc
mov
jo
fisubl
dec
test
inc
pop
enter
into
ljmp
dec
mov
xchg
push
mov
dec
inc
stos
mov
js
aad
pop
cmc
fmul
arpl
insl
and
sbb
add
ret
mov
mov
push
cmp
xchg
es
xchg
movsb
and
sahf
in
adc
mov
gs
xor
daa
nop
icebp
in
insb
cmp
xlat
aam
mov
arpl
test
cltd
pop
shlb
cmc
mov
fildl
icebp
xchg
or
pop
mov
daa
dec
aad
xchg
cmp
cmp
and
sbb
jmp
push
mov
sbb
xchg
mov
into
xchg
negl
fidivl
lds
fs
push
movsb
pop
out
sub
cs
ja
int3
roll
mov
push
mov
hlt
les
stos
adc
pop
pusha
pop
imul
xchg
hlt
adc
inc
das
icebp
add
cli
lret
pop
mov
out
out
ljmp
mov
xchg
nopl
sub
inc
addr16
les
scas
lret
repnz
rol
adc
sub
push
sbb
into
les
adc
cmc
dec
mov
cltd
mov
xchg
adc
pop
xor
out
leave
push
sub
flds
pop
mov
imul
scas
mov
push
or
jecxz
push
mov
inc
xchg
jo
cs
fdivrs
pusha
jmp
sbb
jnp
mov
mov
xorl
dec
xchg
ficoms
clc
test
paddusw
mov
xlat
ret
test
je
cmp
movsb
insb
nop
and
add
inc
add
movsb
in
das
sub
fcmove
mov
sti
mov
mov
mov
xor
call
pop
mov
pop
mov
loop
subb
push
gs
out
push
push
mov
incb
lret
or
icebp
push
lods
test
mov
enter
push
aad
mov
mov
test
mov
iret
sti
mov
sbb
into
cmp
out
and
push
lods
pushf
mov
mov
or
enter
mov
pop
mov
shrb
addr16
add
cmp
fcoml
pop
fisttpl
or
bound
ds
xchg
test
fs
xor
add
dec
push
xor
daa
cmc
notb
int3
scas
pop
sub
std
sbb
into
outsl
pop
popf
lcall
or
je
inc
je
dec
sbb
insb
mov
xor
xchg
and
jl
xorl
lret
and
inc
adc
pop
jg
repz
mov
dec
cltd
shlb
divl
into
sbb
xor
adcb
orl
fadds
mov
arpl
cltd
dec
jle
ds
adc
cs
mov
push
adc
pop
out
mov
inc
cmpsb
mov
xchg
cmp
sbb
popa
mov
mov
add
xor
call
dec
int3
les
mov
loopne
shll
fs
jecxz
mov
pop
call
dec
push
sub
fimull
push
call
push
cmp
mov
ret
out
xor
pusha
int3
push
pop
adc
fidivs
jmp
adcb
js
insb
mov
test
lcall
mov
scas
mov
and
mov
ret
mov
xchg
jae
in
scas
in
xor
aaa
xchg
pop
loopne
xchg
pop
call
sahf
icebp
sbb
sub
sbb
lods
scas
inc
adcb
pop
test
push
jmp
cwtl
pop
push
mov
push
xor
stos
shlb
mov
mov
jo
mov
mov
jmp
rcr
inc
daa
push
jno
lods
and
mov
std
and
fldt
int3
loope
neg
scas
add
fiadds
or
testb
mov
xchg
fnsave
push
hlt
adc
adc
fimull
or
cmp
xchg
repnz
faddl
cltd
es
mov
pop
mov
xchg
test
push
cmp
cmc
pop
lahf
flds
fsubr
jecxz
mov
pusha
repnz
cs
pop
adc
xor
push
push
dec
mov
mov
mov
sbb
xlat
mov
ret
pop
mov
mov
add
add
decb
movl
or
icebp
add
pushf
andb
daa
fwait
sub
sub
jge
cli
or
cld
cmp
mov
fst
fisubl
add
push
cmpsb
dec
mov
aaa
dec
xchg
out
jo
addr16
ss
popa
inc
test
bound
arpl
xor
fsubl
dec
push
cs
imul
divl
iret
dec
shrb
mov
mov
dec
in
les
mov
hlt
mov
nop
dec
ljmp
into
xchg
pop
enter
rcll
sti
pop
inc
pop
sbb
std
or
push
int
xlat
int
ret
loopne
or
int
es
leave
aaa
stos
aas
xor
dec
adc
xchg
int3
in
pop
leave
ss
cld
adc
stos
imul
xchg
gs
sbb
mov
push
cmc
or
and
jns
in
decl
lock
sbb
fdivrl
rcll
mov
ljmp
push
xchg
stos
lock
jge
xor
xor
stos
inc
dec
push
cmp
mov
mov
shrb
or
outsb
lahf
mov
jo
cwtl
dec
mov
xor
iret
dec
mov
push
out
in
dec
mov
inc
xchg
cmp
sub
iret
push
mov
and
fcmovb
or
sbb
ds
pop
clc
cmp
mov
cwtl
fists
in
dec
cmp
sti
jle
cmp
and
scas
pop
pop
pavgb
rolb
lock
sbb
jne
dec
int
mov
icebp
dec
leave
cmpsl
inc
cmpsl
xchg
fs
xor
cmp
mov
dec
push
mov
fistpl
sti
movsl
test
repnz
ds
fbld
push
push
repnz
push
xchg
mov
xchg
stos
mov
in
insl
icebp
mov
loop
xor
push
sbb
sub
lods
repz
aas
repnz
aaa
stos
cld
enter
lock
push
into
inc
cmp
fadds
sub
jg
scas
push
mov
jb
pop
pop
je
jge
dec
mov
int3
and
movsl
pop
dec
cltd
push
push
test
mov
rcl
adc
testb
mov
negl
xor
cmp
add
jle
xchg
mov
cwtl
jge
xchg
stos
imul
std
bound
sub
stos
or
repz
pop
rol
mov
outsl
icebp
outsl
mov
and
test
push
jge
fdivl
mov
adc
xor
rcrb
es
xlat
sbb
jp
mov
vmwrite
mov
subl
mov
inc
sbb
out
lock
add
popa
sub
xor
jp
ffreep
call
and
add
jl
lret
fnstenv
mov
mov
stos
das
fwait
mov
sbb
outsl
cmp
lock
test
xor
jg
cmpsl
dec
out
mov
outsl
repz
pop
xor
in
ljmp
scas
popa
or
jbe
and
xor
nop
or
iret
mov
insb
pop
mov
adc
push
sti
nop
inc
push
imul
test
mov
xor
mov
lcall
pop
cli
push
mov
xor
push
inc
jmp
into
mov
cmpsb
mov
jecxz
movsl
jp
mov
jge
cli
addr16
mov
daa
pop
mov
push
cmp
jnp
int3
stos
filds
mov
aad
mov
xor
mov
mull
cmpsl
inc
shll
sub
lret
xor
add
in
cmp
or
or
mov
dec
sub
je
pop
int
mov
ja
call
std
fists
nop
push
jg
testl
fadds
fstps
sbb
movsl
push
and
das
aaa
sysexit
push
cmpsl
lea
jnp
loop
mov
dec
adc
adc
push
xor
ret
and
and
addr16
jle
lret
push
dec
xrelease
dec
test
pop
andl
js
mov
ret
dec
fisubs
mov
dec
stos
xor
mov
mov
mov
fisubl
pop
adcl
jl
mov
xchg
fidivrl
pop
add
add
xor
imul
inc
insb
insl
out
rorl
xchg
test
mov
jns
inc
push
push
and
shr
mov
mov
jp
imul
movsb
pop
lret
and
jmp
scas
cmc
std
popf
fmull
dec
mov
dec
mov
xor
insl
cli
pop
xchg
jl
fldt
push
add
cmp
std
subb
cltd
in
xor
xor
mov
adc
test
jo
shrl
mov
xchg
aam
sbb
mov
lcall
xlat
dec
dec
jle
adc
cld
push
hlt
aaa
cwtl
mov
lcall
into
and
xchg
mov
das
nop
mov
pop
cmpsb
cmp
xchg
mov
add
jmp
jl
pushf
popf
pop
jecxz
outsb
jmp
dec
test
fstpt
int3
dec
dec
nop
mov
mov
daa
fwait
mov
loope
lahf
mov
pop
and
cli
in
repnz
push
cmp
es
outsl
insb
fimull
es
cli
std
and
push
into
and
mov
add
mov
cltd
es
sahf
sub
mov
mov
cmp
shrl
sti
pop
loope
pop
loope
or
pop
mov
mov
mov
fdivr
fs
add
shll
loope
dec
decb
mov
jp
roll
pop
jo
push
movsl
cmp
mov
push
mov
es
pop
mov
add
insl
xchg
pop
mov
mov
or
scas
cs
cmc
add
or
js
xchg
cmp
test
cld
mov
ret
mov
ret
ds
mov
testl
xchg
sub
push
mov
imul
jbe
add
dec
adc
push
jg
sub
rcrl
push
add
mov
mov
jle
add
xor
inc
mov
leave
cli
leave
jmp
lcall
mov
popf
sub
fdiv
test
adc
push
ret
sub
sub
jl
and
sbb
lcall
mov
rcrb
cmp
out
adc
notb
mov
mov
push
shr
add
add
fists
mov
jne
data16
pop
pushf
adc
jns
xchg
clc
insl
inc
fdivrp
frstor
ds
inc
bound
jge
jnp
pop
fdivs
pushw
cs
xchg
or
add
sbb
and
mov
inc
inc
pop
lcall
adc
mov
mov
mov
lods
loope
xchg
jle
or
pusha
add
int
mull
aam
sbb
dec
out
sbb
cld
pop
fsubrs
stc
xchg
inc
xchg
int
out
lret
daa
jp
xor
clc
ja
nop
sbb
mov
gs
fsubr
adc
stos
lds
push
out
mov
sbb
repz
xor
fisubrs
aaa
test
scas
jg
jge
adc
and
das
sbb
lret
fs
mov
mov
gs
mov
pop
sbbb
enter
xor
cld
push
repz
in
adcl
jno
push
jp
mov
or
jecxz
fs
inc
add
mov
lea
xorl
jmp
xchg
shlb
push
xchg
stos
mov
or
jns
jnp
scas
fwait
sbb
and
test
out
fmull
fistps
add
push
sbb
fwait
mov
addr16
stc
and
mov
sub
sahf
or
dec
lahf
or
xor
jnp
push
mov
fldenv
mov
jg
sbb
mov
fldt
add
jecxz
pop
add
mov
jg
or
mov
mov
mov
sbb
pop
dec
pop
jecxz
imul
adc
pushf
or
adc
add
incb
enter
cs
and
ret
mov
inc
sbb
pop
jno
mov
loop
cmc
outsb
push
xchg
fldlg2
rclb
xlat
cli
test
lea
or
sbb
cmp
fwait
mov
test
pop
xor
or
xor
test
mov
mov
das
lds
cmp
in
cmp
mov
sbb
test
fnstcw
cmp
jge
lods
xchg
jbe
mov
xor
push
dec
or
scas
xor
sahf
mov
mov
gs
popf
xor
and
cmpb
rorb
cs
lea
and
sbb
movsl
pop
sbb
pop
pop
loop
loop
int
sub
ror
rolb
mov
leave
push
fsubrl
pop
outsb
aam
les
push
cld
lds
scas
mov
push
xor
xor
jae
ja
sbb
lods
mov
dec
imul
aad
test
scas
or
in
jmp
push
das
gs
and
hlt
shl
sti
mov
arpl
mov
jg
push
jno
imul
lods
aas
ret
stc
xchg
rcrl
arpl
shll
dec
enter
adc
movsb
xchg
daa
adc
aad
inc
shll
cmpsb
fisubrl
sbb
and
sbb
or
movsb
nop
xchg
mov
iret
int3
loop
pop
xor
and
push
outsb
arpl
add
sbbb
mov
inc
xchg
test
ljmp
adc
imul
loop
and
lea
jg
insb
loope
out
push
loope
movsl
insb
dec
pop
mov
aad
es
mov
addr16
sbbb
in
leave
test
popa
jnp
dec
inc
sbb
ret
jns
jp
xchg
call
push
movsb
add
jp
add
lock
std
jnp
sub
mov
into
jl
mov
rcrl
dec
daa
jle
imul
mov
or
jg
jecxz
sub
lret
pop
out
test
icebp
or
je
xchg
adc
dec
sbb
gs
movsl
in
xor
fimuls
fucomip
jmp
mov
movsl
dec
je
gs
dec
cmp
rcll
cli
subl
out
add
mov
xor
ret
es
pop
gs
mov
inc
mov
fs
jp
rorl
jne
xchg
popa
or
sahf
cmc
add
mov
cltd
mov
lods
dec
and
sub
sbb
scas
jns
inc
imul
mov
movsb
jne
stos
mov
lret
fstps
cli
adc
adc
pop
and
popf
jno
stos
orl
adc
xchg
push
rol
sub
jmp
cmpsl
add
push
mov
or
imul
mov
xor
or
inc
iret
leave
or
aaa
ret
sbb
xchg
shll
cmp
test
stos
mov
aad
lea
sbb
cmc
fmul
adc
std
mov
cmp
in
pop
in
in
imulb
push
les
orl
mov
mov
push
mov
lods
inc
test
pop
sub
xchg
sub
jl
pop
jl
mov
lock
add
stos
xchg
mov
mov
pop
push
pop
test
rorb
test
loope
dec
dec
jns
movsl
pushf
cmp
ret
aam
adc
sbb
adc
lret
cmpsl
push
shll
out
xlat
inc
orb
push
std
xchg
jnp
rcrb
dec
orb
push
int3
dec
sub
lret
dec
loope
in
dec
outsl
shlb
pop
and
xchg
bound
frstor
mov
shlb
stc
lcall
and
jp
addr16
xchg
xchg
xchg
pop
push
addr16
mov
and
push
aas
mov
sub
jo
icebp
cmp
pop
stc
mov
xchg
call
arpl
mov
xlat
cwtl
xlat
add
sti
mov
push
sti
mov
push
xchg
repz
ljmp
jmp
mov
and
dec
or
mov
push
lahf
mov
stc
test
aas
mov
popf
mov
shrb
inc
inc
pop
ljmp
inc
shll
sub
movsl
leave
mov
sub
pop
stos
pop
and
push
movsl
mov
or
mov
or
ss
