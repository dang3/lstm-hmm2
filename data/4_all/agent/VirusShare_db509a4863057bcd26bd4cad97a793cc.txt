mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
jno
add
mov
add
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
jo
or
aaa
ljmp
add
push
scas
xchg
xchg
cwtl
add
iret
nop
jno
pusha
mov
mov
push
or
jmp
adc
sbb
add
out
push
ds
sbb
fildl
nop
mov
popl
daa
mov
fdivl
je
xorl
inc
test
jno
pop
jp
mov
and
outsl
or
add
mov
lret
adc
adc
jne
aad
or
mov
pop
out
sbb
das
mov
imul
testl
and
fisubl
into
jp
dec
mov
mov
lret
pop
xchg
gs
mov
and
fwait
add
int
push
dec
pop
test
xor
dec
stos
fmul
rcrb
push
and
jmp
in
movsl
mov
sub
jno
outsl
push
ret
fld
add
push
push
and
leave
xor
daa
xchg
sub
movsb
pop
add
or
dec
scas
push
shl
jmp
xor
shl
out
mov
inc
adc
aam
loopne
dec
push
jecxz
insl
push
pop
fisubrl
in
xchg
stos
xchg
jg
dec
xor
dec
into
xlat
cmp
sbb
dec
fnstenv
stos
addr16
or
out
dec
mov
sub
and
xor
into
cltd
shlb
jg
pop
pmullw
dec
or
ja
orb
mov
xor
adc
loope
arpl
movsb
xor
lret
or
lea
mov
cmp
xchg
bound
or
jb
mov
or
insl
insl
leave
call
scas
mov
insl
iret
es
lret
cmp
rclb
xor
icebp
mov
dec
sub
xor
mov
xorl
repz
fsub
fcompl
xor
mov
mov
sahf
fldl
and
arpl
mov
xchg
or
es
mov
cmp
sbb
out
xor
das
pop
scas
enter
or
outsb
stos
sbb
loopne
pusha
stc
insl
popf
cmp
in
and
std
arpl
popf
pushf
or
test
sbb
jnp
stc
clc
fwait
mov
mov
hlt
and
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
jo
or
aaa
ljmp
add
push
scas
xchg
xchg
cwtl
add
iret
nop
jno
pusha
mov
mov
push
or
jmp
adc
sbb
add
out
push
ds
sbb
fildl
nop
mov
popl
daa
mov
fdivl
je
xorl
inc
test
jno
pop
jp
mov
and
outsl
or
add
mov
lret
adc
adc
jne
aad
or
mov
pop
out
sbb
das
mov
imul
testl
and
fisubl
into
jp
dec
mov
mov
lret
pop
xchg
gs
mov
and
fwait
add
int
push
dec
pop
test
xor
dec
stos
fmul
rcrb
push
and
jmp
in
movsl
mov
sub
jno
outsl
push
ret
fld
add
push
push
and
leave
xor
daa
xchg
sub
movsb
pop
add
or
dec
scas
push
shl
jmp
xor
shl
out
mov
inc
adc
aam
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
jo
or
aaa
ljmp
add
push
scas
xchg
xchg
cwtl
add
iret
nop
jno
pusha
mov
mov
push
or
jmp
adc
sbb
add
out
push
ds
sbb
fildl
nop
mov
popl
daa
mov
fdivl
je
xorl
inc
test
jno
pop
jp
mov
and
outsl
or
add
mov
lret
adc
adc
jne
aad
or
mov
pop
out
sbb
das
mov
imul
testl
and
fisubl
into
jp
dec
mov
mov
lret
pop
xchg
gs
mov
and
fwait
add
int
push
dec
pop
test
xor
dec
stos
fmul
rcrb
push
and
jmp
in
movsl
mov
sub
jno
outsl
push
ret
fld
add
push
push
and
leave
xor
daa
xchg
sub
movsb
pop
add
or
dec
scas
push
shl
jmp
xor
shl
out
mov
inc
adc
aam
loopne
dec
push
jecxz
insl
push
pop
fisubrl
in
xchg
stos
xchg
jg
dec
xor
dec
into
xlat
cmp
sbb
dec
fnstenv
stos
addr16
or
out
dec
mov
sub
and
xor
into
cltd
shlb
jg
pop
pmullw
dec
or
ja
orb
mov
xor
adc
loope
arpl
movsb
xor
lret
or
lea
mov
cmp
xchg
bound
or
jb
mov
or
insl
insl
leave
call
scas
mov
insl
iret
es
lret
cmp
rclb
xor
icebp
mov
dec
sub
xor
mov
xorl
repz
fsub
fcompl
xor
mov
mov
sahf
fldl
and
arpl
mov
xchg
or
es
mov
cmp
sbb
out
xor
das
pop
scas
enter
or
outsb
stos
sbb
loopne
pusha
stc
insl
popf
cmp
in
and
std
arpl
popf
pushf
or
test
sbb
jnp
stc
clc
fwait
mov
mov
hlt
and
sbb
insl
pop
mov
sub
in
and
dec
scas
out
push
mov
outsl
mov
ret
iret
sub
push
xor
data16
ss
js
out
xor
aam
call
jbe
arpl
mov
adc
mov
xor
push
outsl
sbb
sub
aas
pop
popf
pop
add
inc
inc
mov
roll
jge
cmp
adc
adc
sub
sbb
mov
adc
sbb
sbb
testb
mov
mov
addr16
jnp
bound
adc
pop
sbb
sub
xor
jo
dec
push
into
into
jp
rcrl
adc
xchg
mov
xchg
mov
out
adc
cmp
pop
or
nop
mov
outsl
or
hlt
pop
movsb
ljmp
dec
pop
into
pop
out
push
test
sbb
shll
std
fs
sti
jno
sub
add
aaa
icebp
cwtl
sub
call
or
mov
pop
fstps
or
xchg
imul
ds
mov
es
sub
pop
inc
add
and
cmp
push
dec
mov
push
cmp
adc
mov
push
or
or
ss
hlt
jp
outsl
mov
shr
cli
pop
int
inc
shrl
push
call
pop
arpl
adc
inc
add
push
daa
push
jnp
mov
cmp
push
loop
ror
adc
or
rorl
sti
lret
and
and
ljmp
test
loope
cmpxchg
and
push
dec
mov
mov
cmp
loop
inc
iret
aas
mov
mov
aad
dec
rorb
pop
fwait
inc
cmp
jp
xor
dec
or
ja
xor
fdivl
daa
hlt
jno
lock
or
mov
push
insb
cmpsb
fwait
int3
xor
sub
push
pop
ds
enter
inc
fwait
cmpsl
movsb
movsb
xchg
dec
je
mov
jle
les
add
jp
add
decb
or
pop
dec
cld
popf
aaa
orb
jb
mov
cmp
adc
cli
or
fsts
add
ljmp
pushl
dec
in
jno
pop
and
mov
add
mov
mov
push
mov
sbb
mov
ret
push
jo
aam
jb
fstpl
test
xchg
mov
adc
mov
pop
add
mov
shrd
xchg
mov
mov
pop
and
mov
cmpsb
cmp
int
pop
xor
cmpsb
pusha
cld
add
repz
fnstcw
or
add
cmc
jmp
cmpsl
mov
mov
out
ss
cmpb
cmp
jge
mov
nop
sub
dec
dec
jle
out
xor
les
inc
ret
lods
jl
fimull
popa
mov
repnz
int
icebp
jbe
jae
xor
ret
push
aad
xor
js
mov
inc
mov
out
push
adc
sub
sub
aas
dec
hlt
cltd
andl
xchg
imul
cwtl
jns
pop
lcall
fcomip
mov
lret
pushf
test
pop
fsubr
icebp
adc
out
jmp
test
vcvttss2si
sub
pop
ds
enter
xchg
xor
mov
cmpsb
hlt
sar
sbb
jne
add
mov
loope
mov
sbb
cwtl
pop
popa
rorl
das
cmc
and
fs
shll
mov
inc
call
out
adc
je
jne
hlt
sub
loop
mov
push
add
pop
insb
fidivs
rcrl
inc
daa
lcall
adc
push
mov
mov
rcrl
repnz
xor
shrd
xchg
addl
out
and
ljmp
popf
mov
lods
ljmp
pop
dec
inc
and
sbb
repz
sbb
mov
adc
js
xchg
cmp
test
outsb
dec
xor
pop
lahf
adc
or
cmp
cmp
out
xchg
sub
xlat
mov
es
jbe
add
jp
stos
imul
stos
push
testl
xor
push
cmp
ret
push
push
push
into
cmp
xorb
test
shlb
les
stc
jle
ss
fbstp
je
xchg
lods
addb
insb
mov
xchg
mov
mov
popa
imulb
push
movsl
dec
sub
inc
iret
test
adc
and
enter
sbb
daa
cmp
cmpsb
mov
je
mov
fiadds
div
out
dec
mov
jo
int3
int3
icebp
mov
call
inc
shlb
xor
aam
inc
stos
or
cmp
and
jge
adc
xchg
rcll
ret
sub
fidivrl
dec
insl
mov
test
adc
xchg
fbld
add
or
jo
pop
push
outsl
ret
push
push
andl
mov
pushl
dec
pop
cs
cld
jnp
hlt
scas
div
sub
mov
sbb
push
vmovlps
mov
add
xchg
nop
ret
outsb
xchg
dec
add
push
cld
sbb
dec
sbb
bnd
imul
xchg
xor
push
sub
and
mov
lret
mov
cltd
inc
add
mov
mov
jnp
dec
xor
fstpt
loop
repz
call
aas
push
aad
and
push
cmp
sbb
out
pop
into
sub
sub
add
add
and
sarb
jl
cmp
insl
test
ljmp
test
or
inc
aaa
xor
pop
in
ret
jo
movsb
stos
test
mov
jnp
push
fcmovne
pop
in
test
pop
das
push
je
pop
jno
leave
push
sub
pop
sbb
inc
mov
sahf
popf
fnstcw
jo
dec
nop
outsl
fnstenv
lds
cmp
add
mov
jb
aad
popa
test
cltd
dec
dec
mulb
sbb
or
or
notb
mov
aam
mov
fmulp
mov
test
jne
inc
jg
sbb
int3
cmp
pop
mov
pusha
jge
test
jmp
cli
insl
cld
jae
cwtl
bound
cmp
cwtl
fsubs
orl
pop
mov
add
ds
jb
xor
mov
sub
sub
push
lret
js
sub
and
xchg
jb
dec
mov
out
or
jbe
mov
push
inc
cli
pop
push
jmp
into
cltd
dec
std
rcrb
xor
ret
dec
pop
lcall
xchg
or
das
add
adc
inc
loopne
aad
mov
jl
aad
iret
mov
ret
sahf
pop
subb
cmpb
mov
add
xchg
xor
js
pcmpeqd
inc
aaa
in
adc
jecxz
lock
roll
aas
addr16
addr16
push
sbb
inc
scas
pop
add
cmc
xchg
fld1
xor
push
sbb
dec
add
cmpsl
xchg
out
arpl
push
inc
enter
sbb
sbb
pop
push
iret
arpl
out
shll
cmpsb
ret
mov
loope
out
add
fsubs
shrb
rcrl
int
cs
mov
fs
nop
out
push
cmpsb
push
js
pop
pop
and
push
push
mov
stc
adc
cli
jge
loope
pop
movsb
lods
roll
clc
cmpb
push
das
mov
or
ljmp
xchg
daa
insb
add
out
nop
adc
pop
adc
push
shll
add
mov
lret
out
jbe
aas
and
loope
fmull
dec
pop
push
jae
out
inc
mov
jb
nop
int
add
jmp
rcll
mov
mov
mov
int3
aas
pop
sbb
dec
add
movsl
add
pop
pop
cmp
inc
into
inc
mov
and
movsb
adc
cmp
outsl
sbb
inc
xchg
push
rol
cmp
fistps
or
dec
xchg
je
mov
sub
pop
addr16
rcrb
ret
sbb
pop
adc
adc
fnstsw
test
mov
jp
cmp
aam
in
adc
mov
cld
popf
cmpsl
shll
cmp
loopne
xchg
mov
outsb
in
adc
push
out
dec
pop
aad
pop
lods
mov
test
sub
dec
sub
clc
xlat
sbb
pop
dec
int
outsb
xchg
fmuls
test
iret
aas
or
movsl
mov
and
fstp
test
xchg
sub
je
cmpl
bound
inc
pop
dec
ret
jge
pusha
cmc
lahf
or
ds
in
lods
sbb
repz
pop
aad
in
flds
aaa
cmp
mov
test
andl
adc
loopne
stos
rol
nopl
cmp
fxch
je
sbb
nop
stos
mov
aas
xor
mov
inc
jnp
test
lods
mov
into
inc
xchg
cmp
mov
test
sbb
sbb
repz
mov
add
cs
mov
shrl
mov
cmc
scas
nop
pop
les
mov
shrl
xor
mov
inc
add
fwait
cmp
stos
repz
dec
stc
leave
jno
cmp
cmpl
inc
cmp
add
jmp
mov
imul
aas
mov
out
jb
js
data16
div
ror
lcall
imul
xchg
xchg
in
test
xchg
pop
mov
out
cmp
add
sub
divl
adc
mov
adc
xor
rcrb
push
cmp
out
jo
pop
loope
add
lret
sub
jnp
sbb
add
movsl
push
dec
add
pop
mov
pop
jl
aaa
imulb
cli
pop
inc
pop
mov
push
js
push
filds
jne
stos
subl
jecxz
mov
mov
jecxz
push
xchg
sahf
repz
push
cmp
mov
cmp
lret
std
jo
pop
xor
xlat
aas
insb
inc
fld
mov
xchg
mov
sti
push
xchg
fisubrs
push
fldt
or
pop
xchg
sarl
mov
fmuls
cmp
push
sbb
cmp
adc
enter
xchg
cmp
push
jns
xor
push
or
sbbl
fs
push
out
mov
iret
inc
add
dec
fisubrl
jmp
lahf
push
mov
or
sub
leave
pushf
or
ret
mov
jle
mov
cmp
and
cmpsb
enter
int
sub
pop
dec
mov
loopne
cmc
cwtl
cltd
mov
inc
mov
enter
ret
jno
inc
fs
pop
xchg
mov
mov
movl
push
pop
je
jge
ss
xchg
inc
in
add
fldenv
mov
xchg
xchg
and
dec
ljmp
outsb
out
scas
push
add
js
cld
imul
mov
adc
sbb
or
cmc
xor
push
daa
mov
das
dec
or
mov
lds
sbb
popa
fcomps
frstor
rep
jo
test
sbb
sbb
lds
stos
mov
mov
lret
push
mov
ja
cmc
cmpsb
enter
fsubl
xor
das
pop
adcb
stos
dec
stos
xchg
sub
faddp
adc
fcomps
jne
mov
xchg
push
cmp
fisubrl
inc
sub
add
ja
push
pushf
incb
rorb
adc
xor
sbb
push
cmp
addl
repz
scas
arpl
movsb
test
jno
push
call
testb
dec
stc
and
xlat
popf
mov
dec
aad
in
lcall
mov
mov
rcll
xchg
jno
cs
ds
push
push
popa
loope
mov
mov
jb
add
or
add
popl
popl
dec
cmpsb
fldt
iret
lcall
shrl
das
push
jb
xchg
inc
xlat
push
dec
cmp
fiaddl
clc
insl
jnp
add
add
or
arpl
mov
push
or
cld
dec
out
sbb
mov
shrl
scas
xlat
lods
pop
jno
xchg
jg
jle
push
and
js
adc
cmpsl
xor
cmp
push
loope
mov
repz
pop
repnz
std
push
call
sahf
stos
scas
cwtl
inc
lea
clc
mov
sbb
mov
enter
movsl
nop
pop
pop
pop
ret
pushl
add
lcall
mov
cmc
inc
push
aad
dec
cmpsl
and
push
shl
and
adc
mov
sbb
push
repnz
imul
dec
push
adc
ficoml
lea
pop
shll
sub
xchg
jle
mov
sarl
or
pop
pop
and
mov
mov
add
mov
xor
rcl
and
nop
pop
fwait
pop
cmpsl
lods
js
arpl
int
ret
cwtl
dec
cmp
dec
add
ss
lock
pusha
sbb
ret
adc
arpl
aam
and
outsb
mov
bound
loop
add
xor
ret
rcll
xor
mov
adc
push
out
lcall
sbb
aad
mov
dec
or
loopne
lock
dec
add
xor
jns
fwait
adc
sarb
sbb
jb
movl
aaa
add
pop
in
in
jae
jo
jns
add
lahf
mov
jl
xchg
mov
push
mull
inc
xor
and
push
les
mov
stc
inc
jbe
sqrtps
sub
jp
xor
xorb
mov
test
xchg
lret
es
in
or
cmp
xlat
push
lea
lahf
sub
fs
fdivs
xlat
test
mov
xor
push
xor
sbb
or
pop
adc
popa
mov
add
adcb
jae
sbb
mov
pop
gs
dec
popa
movsl
ja
test
or
cld
scas
adc
sub
jo
sarb
and
test
cs
xchg
sbb
fwait
bound
jle
add
dec
arpl
imul
test
jnp
xchg
xlat
inc
andb
sub
test
bnd
adc
adc
mov
sub
pop
xchg
test
dec
shll
aas
fs
mov
out
mov
jecxz
inc
ror
pop
aaa
jl
loop
add
cmp
xor
or
test
pop
dec
mov
outsb
pop
mov
out
pop
mov
jno
pop
mov
inc
push
les
out
ljmp
test
daa
inc
test
scas
in
lcall
mov
dec
vmovntpd
push
mov
mov
lods
mov
inc
adc
adc
xor
mov
shl
adc
into
aas
add
push
adc
loop
stos
lods
push
xchg
fisubrs
lods
inc
ja
dec
mov
jo
cmpsb
inc
enter
sahf
stos
adc
imul
ds
cli
shl
fistpll
rcl
aam
data16
mov
cwtl
jo
subb
ja
notb
test
cmp
sarl
int3
sti
cmp
ficompl
sbb
xchg
push
pop
mov
push
xor
out
pop
rcll
imul
inc
idivl
mov
inc
mov
xor
mov
fists
dec
cli
push
bnd
out
or
mov
pop
leave
in
sub
inc
cld
jne
stos
hlt
sub
xchg
inc
call
push
pop
sarb
add
outsl
mov
test
pop
mov
fnstsw
and
imul
imul
nop
sub
push
or
inc
call
push
pop
or
les
dec
adc
mov
out
arpl
pusha
xorb
cmp
push
clc
push
mov
clc
cmpsl
jne
loop
jbe
jno
test
scas
jb
push
push
sti
add
pusha
mov
push
adc
std
pushf
mov
push
in
mov
cmpb
push
ffreep
testl
pop
jecxz
jne
popa
leave
push
pminub
pop
cwtl
pmaxsw
xlat
dec
in
lahf
rclb
leave
mov
or
inc
adc
mov
xchg
lods
dec
cmp
sti
xor
pushf
repz
fiadds
icebp
jl
enter
sbb
cmpsl
adc
mov
add
bound
rcrb
jge
testl
popa
cmp
mov
dec
mov
cmp
jo
pop
push
jae
gs
shr
jnp
jmp
sbb
pop
fisttps
fildll
iret
insb
dec
lods
mov
cld
pop
mov
jmp
jmp
in
sbb
dec
xchg
push
xor
loop
sbb
mov
out
jo
test
or
push
push
lds
push
sti
xchg
or
movsb
mov
fcmovu
cli
sub
dec
inc
insl
pop
jle
jo
xor
push
mov
out
scas
imul
cmp
repnz
pop
addr16
int
push
pusha
fsubp
sahf
adc
lock
cmc
xor
fistpl
stc
push
push
in
stos
mov
mov
and
mov
fdivs
mov
lcall
mulb
inc
sub
in
or
fnstcw
js
and
sbb
lret
mov
xchg
jo
gs
push
inc
or
xchg
pop
sbb
push
jecxz
popl
push
jbe
movsl
push
orb
test
testb
lea
lsl
frstor
insl
addr16
mov
stos
movsl
fisubrs
test
test
xor
inc
shll
inc
add
and
push
imul
scas
scas
add
out
xor
in
scas
dec
push
xor
pushf
nop
jl
pop
mov
rcll
pop
mov
pop
mov
loop
mov
inc
loope
in
and
daa
iret
scas
sbb
nop
xor
mov
inc
shll
and
mov
push
pop
mov
mov
and
jo
clc
sbbl
xor
ss
jbe
in
cmpsl
sbb
inc
pop
es
xchg
inc
mov
mov
imul
stc
test
ror
mov
pop
sbb
xchg
sahf
mov
dec
mov
clc
cmp
pop
ja
insb
jo
sub
mov
imull
and
mov
outsb
xchg
in
xchg
loop
xchg
fidivl
ss
sub
arpl
cmp
call
bound
aas
js
mov
lcall
rolb
pusha
enter
test
scas
mov
fwait
push
cmp
mov
cmpsb
cmp
sbb
dec
jns
cmp
xlat
cmp
repnz
xchg
jle
push
dec
xchg
jmp
movsl
fisubrl
xor
in
dec
inc
ja
mov
add
pop
sbb
cmp
jnp
fidivs
mov
aad
mov
out
adc
and
mov
push
popa
test
or
mov
xchg
jae
outsb
xorb
and
out
xor
icebp
lods
add
mov
mov
aaa
xor
jo
test
jns
ret
lock
inc
in
mov
push
push
xor
out
mov
add
push
adc
das
cmp
aam
fcmove
cwtl
loope
sbb
out
leave
pop
in
movsl
movsl
sbb
mov
outsl
icebp
and
push
ja
mov
xor
flds
sbb
jmp
loope
sbb
sbb
push
mov
dec
int
outsb
jl
xchg
fs
clc
adc
adc
push
pop
push
and
leave
hlt
add
addr16
imull
xchg
xchg
stc
ret
or
es
push
inc
hlt
lds
stos
stos
add
jo
cli
fisttps
ror
cltd
or
mov
jge
push
stc
mov
lret
dec
inc
cli
cltd
xchg
aam
or
mov
pop
pushf
insl
add
push
lock
lret
pop
gs
xchg
outsb
cmp
stos
icebp
fdivl
mov
push
mov
jg
xchg
mov
mov
xchg
scas
sub
xor
test
inc
sub
cmp
push
out
daa
and
shll
fimull
dec
cmc
pop
lcall
data16
scas
xchg
enter
push
addl
clc
stos
cmpsb
xchg
cmpsb
mov
jne
test
mov
mov
inc
inc
or
mov
aad
xchg
xlat
push
cmpsl
mov
in
jno
and
xchg
jbe
hlt
xchg
ja
add
stos
lods
pusha
or
stos
push
in
iret
movsl
push
sub
les
fdivr
aaa
inc
push
dec
aas
les
lcall
js
sarb
orb
fiadds
lock
xchg
jl
out
jne
pop
xlat
dec
xchg
add
jge
dec
ja
pop
sbb
or
scas
push
push
add
jbe
aam
call
push
ja
rclb
push
ds
fs
and
sub
fldl2e
mov
jo
cmpsb
inc
popa
xor
fcomps
outsb
ja
clc
cmp
ds
push
and
cltd
xchg
xchg
pop
lods
and
and
insb
aas
xchg
sub
lock
xor
lcall
stc
pop
das
pop
jl
xor
pop
cmpsb
imulb
adc
mov
push
adc
xlat
mov
mov
es
mov
xor
subl
adc
js
lods
int3
inc
gs
das
mov
or
cmp
ret
cmp
iret
mov
cltd
insb
clc
mov
jl
test
aas
sarl
punpckhbw
out
pop
add
dec
ss
jge
dec
lret
gs
loope
xchg
pop
in
flds
push
or
rcrl
lods
mov
lods
addr16
push
outsl
outsl
fs
mov
movsb
scas
out
das
jp
stos
pop
mov
addl
xchg
pusha
push
and
inc
ficompl
call
mov
and
int3
xchg
or
push
mov
pusha
mov
mov
imul
push
je
pop
lods
in
mov
or
mov
cmc
cmc
ret
add
jp
jo
sbb
movzbl
mov
test
dec
pop
out
mov
inc
mov
std
lret
mov
aad
fs
into
scas
cwtl
nop
lcall
stos
mov
mov
jae
xchg
push
fwait
clc
inc
arpl
popf
mov
pop
mov
pop
pop
rclb
adcl
and
nop
mov
pop
jmp
gs
pop
aad
mov
mov
mov
adc
xchg
loope
adc
ret
xchg
and
mov
pop
ret
es
pop
lds
push
lea
ljmp
xor
leave
sbb
push
dec
icebp
cmpsl
jecxz
icebp
push
mov
ds
xchg
outsb
lea
je
inc
jl
mov
push
mov
leave
cltd
test
enter
push
pop
jmp
sub
adc
push
mov
test
or
pushf
nop
repnz
pop
fisubrl
xchg
iret
xchg
add
push
adc
push
test
inc
nop
daa
push
and
mov
addr16
scas
xchg
mov
xor
xchg
aad
add
bnd
std
loope
mov
in
mov
inc
popa
mov
xor
fstl
dec
dec
sub
cmp
mov
or
int
pop
jns
ss
and
mov
stos
test
sub
testl
je
xchg
mov
jp
leave
inc
dec
and
mov
outsb
mov
cmp
movsb
insb
shrb
inc
add
or
in
inc
sub
or
xchg
jg
or
mov
cmp
pop
push
js
inc
and
mov
iret
sub
mov
fldl
hlt
adc
ljmp
movsb
dec
bound
adc
jo
add
pop
mov
es
jl
sbb
push
pop
adc
push
pop
fwait
inc
cmp
cmp
in
and
jl
scas
pop
daa
cmpsl
mov
mov
cmp
repz
xchg
aam
add
inc
jbe
add
fdivp
imul
bound
jecxz
pop
mov
fistpll
test
lds
enter
icebp
rorl
lea
cs
jne,pn
je
push
arpl
dec
je
std
movsl
std
mov
cmc
mov
in
loope
push
mov
sti
aam
mov
inc
les
jbe
sub
mov
adc
pop
add
push
or
punpckhwd
and
sbb
test
push
lret
pop
mov
lds
lahf
add
mov
mov
into
std
mov
dec
mov
or
dec
jecxz
inc
in
push
scas
gs
jno
or
add
fdivs
xchg
mov
rcl
loopne
cmp
mov
inc
mov
dec
sub
bound
out
rolb
push
pop
xchg
mov
rcrl
icebp
lsl
dec
add
inc
adc
in
add
mov
push
stos
inc
pop
out
call
mov
fildl
int
jae
pop
adc
sbb
sbb
frstor
gs
xchg
inc
dec
mov
xor
sbb
jl
popf
rolb
xchg
push
add
xor
mov
xor
mov
cmpsb
cs
es
mov
imul
jb
xlat
pushf
aam
inc
dec
ljmp
les
adc
sbb
es
cltd
filds
aas
test
adcb
subl
cltd
cmp
add
jmp
test
mov
cmpb
add
arpl
sbb
or
icebp
dec
arpl
imul
imul
xchg
iret
movsb
and
stos
push
lods
adc
test
dec
lods
movsl
movl
ds
jb
loope
sub
xchg
leave
cmp
sarl
cld
pushf
adc
mov
push
ds
fcomps
lcall
pusha
addb
cld
lods
jno
ljmp
pusha
fwait
mov
jmp
lods
aad
movsl
insl
add
mov
add
cmp
mov
jae
add
cmp
or
outsl
filds
sbb
sti
push
mov
inc
stc
shll
push
fistl
or
and
in
stos
inc
cmpl
adc
test
outsb
xchg
xchg
inc
sbb
push
lret
cs
push
mov
sbb
movsb
mov
hlt
sbb
inc
aas
shr
mov
scas
jns
pop
jmp
lret
fistpll
insb
and
jns
mov
ljmp
in
popa
lahf
stos
fs
clc
dec
xor
jmp
scas
fsubrs
cmc
ss
mov
out
stc
jne
dec
dec
pop
sbb
loope
leave
lds
mov
inc
jmp
jne
dec
xchg
xchg
push
push
insl
jl
imul
arpl
ljmp
dec
call
add
push
imul
cmp
lcall
add
shl
xor
movsl
lcall
imul
pop
test
dec
mov
insb
pop
jp
pop
and
xor
in
pushf
xchg
dec
push
ljmp
sbb
call
jbe
cmp
xor
jb
mov
inc
clc
lock
xchg
fwait
jg
mov
xchg
xchg
sub
mov
add
inc
vhaddpd
and
rcrl
pop
push
add
mov
push
jg
lods
mov
inc
divl
inc
pusha
out
jl
pushf
pop
call
shlb
push
mov
adc
push
xchg
push
push
cs
sbb
mov
inc
sbb
cmp
jp
or
test
leave
bound
out
mov
jo
inc
adc
test
add
sbb
icebp
mov
sbbb
adc
jmp
xor
jp
cmp
jnp
adc
movsl
pop
repz
mov
mov
xchg
or
fidivl
leave
hlt
repz
jecxz
sbb
mov
sarl
ja
jl
push
add
gs
mov
or
sbb
outsl
loop
in
push
popf
mov
mov
out
out
mov
imul
loopne
cmp
push
ds
xchg
sub
adc
lahf
mov
popa
jne
movsl
insb
cmc
stos
mov
es
adc
loopne
ja
mov
mov
push
and
add
push
cmp
sub
add
stos
sbb
sub
lret
push
mov
imul
jg
or
push
pop
ljmp
add
popf
popa
stc
mov
jns
in
cli
sub
mov
out
xor
fiadds
pop
mov
mov
sahf
leave
pop
xor
into
cmp
inc
pop
adc
repz
iret
movsb
inc
cmpsb
mov
pop
aas
or
xchg
mov
mov
incl
ja
loop
data16
mov
lret
push
or
popa
fnstenv
insl
jle
jmp
cmpsb
pusha
pop
leave
sbb
dec
mov
fidivrl
pop
addr16
stos
aaa
sti
arpl
adc
xor
jns
jne
leave
movsl
xchg
stc
clc
pop
fidivl
pop
adc
pop
sbb
in
es
or
test
jb
jg
push
mov
addr16
lods
outsl
test
jmp
mov
inc
cs
fs
or
fsubr
jmp
cmp
sbb
aaa
push
xchg
dec
pop
insb
sub
sub
mov
repz
push
dec
xor
stc
hlt
mov
int3
in
mov
dec
lcall
mov
adc
fnsave
and
inc
sub
fistps
sub
mov
daa
aas
and
insl
faddl
test
push
fdivr
out
fsts
mov
push
fs
bound
jae
or
lret
xor
cmp
lods
mov
out
inc
inc
mov
cmp
pop
insb
shlb
jns
mov
adc
xchg
movsl
adc
jns
jp
inc
sub
cmpsb
in
mov
adc
fmuls
movsb
rclb
xor
mov
push
ret
xor
std
fcoms
mulb
outsl
cmp
inc
and
out
cld
movsl
imul
ret
mov
out
je
or
pop
mov
add
fsubr
in
xchg
mov
outsl
pop
sub
fildll
mov
in
pusha
sub
or
add
xor
sub
outsl
mov
pop
aad
jmp
in
lods
mov
mov
dec
es
add
shll
lea
pop
push
cs
or
lds
dec
push
fiadds
pop
ds
fbstp
push
xor
sbb
xlat
outsb
lods
lock
dec
test
lret
mov
rep
sbb
xor
mov
aas
dec
je
xchg
jmp
pushf
cmc
js
outsl
mov
lods
call
nop
test
jno
dec
icebp
mov
xor
shll
jnp
mov
sub
push
jmp
xor
sbb
xchg
lods
sahf
sbbl
pusha
in
lret
roll
loopne
xchg
gs
aad
xlat
xchg
imul
and
rcrl
lcall
aam
adc
mov
addr16
fs
jmp
popa
and
pop
cmp
pop
ljmp
lea
add
insl
pop
imul
or
cmpsb
mov
xchg
sub
jbe
call
inc
xchg
xchg
hlt
lahf
call
aas
lret
mov
push
not
enter
sbb
pop
sub
adc
out
lret
arpl
test
insl
mov
sbb
ljmp
inc
mov
push
xchg
lret
inc
lret
insb
out
hlt
stc
inc
adc
movl
mov
outsb
ret
dec
rorl
jo
out
insl
stos
mov
inc
pop
or
popf
cmpw
ds
sbb
std
jb
xor
lret
movsl
mov
push
test
pop
xlat
pop
fisubrs
push
add
pop
mov
cld
lret
pop
pop
sahf
into
enter
jbe
fdivs
mov
mov
xor
outsl
xchg
adc
jno
scas
sbb
mov
in
pop
or
std
push
fstl
jb
mov
jp
xchg
and
mov
js
lcall
jecxz
mov
lea
fiadds
imul
mov
std
sbb
fstps
loopne
insl
xchg
dec
hlt
cli
fisubs
mov
inc
jae
test
mov
aas
mov
cltd
add
cwtl
dec
xchg
pop
test
fldcw
enter
adc
loopne
iret
call
wbinvd
add
inc
out
add
inc
and
pop
sub
maskmovq
notl
cmp
ret
add
out
pop
rcr
inc
pop
mov
pop
pop
cltd
jne
xchg
lods
rep
mov
inc
ret
lea
jne
mov
movsl
decl
or
ljmp
jb
inc
or
out
mov
aam
inc
xlat
inc
ret
add
push
mov
insl
in
or
mov
jg
js
ffree
xchg
jmp
iret
cs
das
cmpsl
fsubrs
pop
test
adc
dec
pop
out
sub
pop
and
loope
add
loopne
adc
mov
push
adc
cmp
xchg
dec
lcall
mov
popf
repz
and
jnp
std
repnz
dec
jbe
stos
mul
std
xor
push
cmpsb
insl
vsqrtpd
cmp
pop
push
and
or
aaa
adc
cmp
clc
rclb
mov
movsb
cmpsl
jge
pop
jbe
nop
adc
call
or
xchg
sub
mov
ds
cmc
addl
js
in
movsl
pusha
cltd
repz
hlt
fisttpl
imul
push
and
dec
lea
and
inc
daa
or
mov
adc
into
movb
push
clc
push
mov
dec
repz
jge
scas
pop
sub
ffreep
lods
bound
add
jae
add
or
or
sbb
aam
aas
push
aaa
vfnmadd231ps
cmpsl
mov
dec
insl
and
outsb
inc
hlt
shl
icebp
pop
pop
jecxz
popf
dec
mov
push
sub
lcall
daa
mov
subl
iret
and
pop
jl
data16
movsb
push
xor
pop
pop
mov
xchg
out
inc
jecxz
adc
dec
imul
in
loope
hlt
xor
cwtl
mov
xchg
cmpsb
inc
xchg
push
dec
dec
rep
mov
pop
sub
repnz
jmp
lret
cmpsl
or
call
or
lret
or
fidivrl
xchg
dec
fisubrl
lea
mov
xchg
sahf
sbb
sub
adc
out
push
sub
insb
aas
sbb
pop
sar
rorb
inc
flds
sbbl
es
pop
fists
iret
sbb
ljmp
fs
stc
fnstenv
add
pop
fwait
add
inc
fidivs
in
repz
mov
cmpsb
jb
mov
xchg
aas
mov
rcr
xchg
imul
popa
lahf
lock
jge
mov
out
cmpsb
nop
jmp
inc
imul
jae
sbb
in
je
inc
or
nop
jmp
push
xor
cli
jle
pop
cmpsl
leave
enter
lret
mov
xor
fistpl
adc
lahf
sub
xor
pop
lds
xchg
fldcw
dec
daa
dec
fstp
dec
jo
imul
test
in
mov
jnp
outsl
xchg
js
inc
ret
rorl
inc
inc
adc
scas
leave
mov
xlat
fwait
stc
hlt
imulb
and
int3
mov
mov
adc
out
fdivp
xchg
dec
and
ret
add
sub
stos
rorl
xorb
cmp
mov
bnd
sub
mov
add
push
ljmp
lock
loop
pop
pop
dec
mov
cmp
and
ljmp
jp
inc
sub
out
repz
mov
mov
stos
sbb
test
xchg
inc
jne
scas
and
out
decb
sub
xor
cmp
xchg
xchg
inc
pop
inc
push
lods
xchg
stos
xchg
aas
xor
call
outsl
in
pop
cmpsl
dec
pop
or
mov
xchg
xchg
or
jg
mov
mov
adc
mov
push
int
stos
push
or
or
arpl
mov
lds
push
adc
insb
lock
xor
xor
lods
leave
mov
imul
aad
mov
arpl
fucom
int3
jge
insl
push
lea
jae
pop
and
or
xchg
adc
or
pop
js
pop
insl
pop
jg
mov
mov
and
lret
aam
jle
jne
nop
dec
adc
push
sahf
and
insb
cmp
fldpi
cmp
rorb
add
and
mov
arpl
jmp
mov
lock
cs
aad
addl
test
ficomps
test
rcr
ds
test
adc
in
push
sbb
into
mov
out
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
jo
or
aaa
ljmp
add
push
scas
xchg
xchg
cwtl
add
iret
nop
jno
pusha
mov
mov
push
or
jmp
adc
sbb
add
out
push
ds
sbb
fildl
nop
mov
popl
daa
mov
fdivl
je
xorl
inc
test
jno
pop
jp
mov
and
outsl
or
add
mov
lret
adc
adc
jne
aad
or
mov
pop
out
sbb
das
mov
imul
testl
and
fisubl
into
jp
dec
mov
mov
lret
pop
xchg
gs
mov
and
fwait
add
int
push
dec
pop
test
xor
dec
stos
fmul
rcrb
push
and
jmp
in
movsl
mov
sub
jno
outsl
push
ret
fld
add
push
push
and
leave
xor
daa
xchg
sub
movsb
pop
add
or
dec
scas
push
shl
jmp
xor
shl
out
mov
inc
adc
aam
loopne
dec
push
jecxz
insl
push
pop
fisubrl
in
xchg
stos
xchg
jg
dec
xor
dec
into
xlat
cmp
sbb
dec
fnstenv
stos
addr16
or
out
dec
mov
sub
and
xor
into
cltd
shlb
jg
pop
pmullw
dec
or
ja
orb
mov
xor
adc
loope
arpl
movsb
xor
lret
or
lea
mov
cmp
xchg
bound
or
jb
mov
or
insl
insl
leave
call
scas
mov
insl
iret
es
lret
cmp
rclb
xor
icebp
mov
dec
sub
xor
mov
xorl
repz
fsub
fcompl
xor
mov
mov
sahf
fldl
and
arpl
mov
xchg
or
es
mov
cmp
sbb
out
xor
das
pop
scas
enter
or
outsb
stos
sbb
loopne
pusha
stc
insl
popf
cmp
in
and
std
arpl
popf
pushf
or
test
sbb
jnp
stc
clc
fwait
mov
mov
hlt
and
sbb
insl
pop
mov
sub
in
and
dec
scas
out
push
mov
outsl
mov
ret
iret
sub
push
xor
data16
ss
js
out
xor
aam
call
jbe
arpl
mov
adc
mov
xor
push
outsl
sbb
sub
aas
pop
popf
pop
add
inc
inc
mov
roll
jge
cmp
adc
adc
sub
sbb
mov
adc
sbb
sbb
testb
mov
mov
addr16
jnp
bound
adc
pop
sbb
sub
xor
jo
dec
push
into
into
jp
rcrl
adc
xchg
mov
xchg
mov
out
adc
cmp
pop
or
nop
mov
outsl
or
hlt
pop
movsb
ljmp
dec
pop
into
pop
out
push
test
sbb
shll
std
fs
sti
jno
sub
add
aaa
icebp
cwtl
sub
call
or
mov
pop
fstps
or
xchg
imul
ds
mov
es
sub
pop
inc
add
and
cmp
push
dec
mov
push
cmp
adc
mov
push
or
or
ss
hlt
jp
outsl
mov
shr
cli
pop
int
inc
shrl
push
call
pop
arpl
adc
inc
add
push
daa
push
jnp
mov
cmp
push
loop
ror
adc
or
rorl
sti
lret
and
and
ljmp
test
loope
cmpxchg
and
push
dec
mov
mov
cmp
loop
inc
iret
aas
mov
mov
aad
dec
rorb
pop
fwait
inc
cmp
jp
xor
dec
or
ja
xor
fdivl
daa
hlt
jno
lock
or
mov
push
insb
cmpsb
fwait
int3
xor
sub
push
pop
ds
enter
inc
fwait
cmpsl
movsb
movsb
xchg
dec
je
mov
jle
les
add
jp
add
decb
or
pop
dec
cld
popf
aaa
orb
jb
mov
cmp
adc
cli
or
fsts
add
ljmp
pushl
dec
in
jno
pop
and
mov
add
mov
mov
push
mov
sbb
mov
ret
push
jo
aam
jb
fstpl
test
xchg
mov
adc
mov
pop
add
mov
shrd
xchg
mov
mov
pop
and
mov
cmpsb
cmp
int
pop
xor
cmpsb
pusha
cld
add
repz
fnstcw
or
add
cmc
jmp
cmpsl
mov
mov
out
ss
cmpb
cmp
jge
mov
nop
sub
dec
dec
jle
out
xor
les
inc
ret
lods
jl
fimull
popa
mov
repnz
int
icebp
jbe
jae
xor
ret
push
aad
xor
js
mov
inc
mov
out
push
adc
sub
sub
aas
dec
hlt
cltd
andl
xchg
imul
cwtl
jns
pop
lcall
fcomip
mov
lret
pushf
test
pop
fsubr
icebp
adc
out
jmp
test
vcvttss2si
sub
pop
ds
enter
xchg
xor
mov
cmpsb
hlt
sar
sbb
jne
add
mov
loope
mov
sbb
cwtl
pop
popa
rorl
das
cmc
and
fs
shll
mov
inc
call
out
adc
je
jne
hlt
sub
loop
mov
push
add
pop
insb
fidivs
rcrl
inc
daa
lcall
adc
push
mov
mov
rcrl
repnz
xor
shrd
xchg
addl
out
and
ljmp
popf
mov
lods
ljmp
pop
dec
inc
and
sbb
repz
sbb
mov
adc
js
xchg
cmp
test
outsb
dec
xor
pop
lahf
adc
or
cmp
cmp
out
xchg
sub
xlat
mov
es
jbe
add
jp
stos
imul
stos
push
testl
xor
push
cmp
ret
push
push
push
into
cmp
xorb
test
shlb
les
stc
jle
ss
fbstp
je
xchg
lods
addb
insb
mov
xchg
mov
mov
popa
imulb
push
movsl
dec
sub
inc
iret
test
adc
and
enter
sbb
daa
cmp
cmpsb
mov
je
mov
fiadds
div
out
dec
mov
jo
int3
int3
icebp
mov
call
inc
shlb
xor
aam
inc
stos
or
cmp
and
jge
adc
xchg
rcll
ret
sub
fidivrl
dec
insl
mov
test
adc
xchg
fbld
add
or
jo
pop
push
outsl
ret
push
push
andl
mov
pushl
dec
pop
cs
cld
jnp
hlt
scas
div
sub
mov
sbb
push
vmovlps
mov
add
xchg
nop
ret
outsb
xchg
dec
add
push
cld
sbb
dec
sbb
bnd
imul
xchg
xor
push
sub
and
mov
lret
mov
cltd
inc
add
mov
mov
jnp
dec
xor
fstpt
loop
repz
call
aas
push
aad
and
push
cmp
sbb
out
pop
into
sub
sub
add
add
and
sarb
jl
cmp
insl
test
ljmp
test
or
inc
aaa
xor
pop
in
ret
jo
movsb
stos
test
mov
jnp
push
fcmovne
pop
in
test
pop
das
push
je
pop
jno
leave
push
sub
pop
sbb
inc
mov
sahf
popf
fnstcw
jo
dec
nop
outsl
fnstenv
lds
cmp
add
mov
jb
aad
popa
test
cltd
dec
dec
mulb
sbb
or
or
notb
mov
aam
mov
fmulp
mov
test
jne
inc
jg
sbb
int3
cmp
pop
mov
pusha
jge
test
jmp
cli
insl
cld
jae
cwtl
bound
cmp
cwtl
fsubs
orl
pop
mov
add
ds
jb
xor
mov
sub
sub
push
lret
js
sub
and
xchg
jb
dec
mov
out
or
jbe
mov
push
inc
cli
pop
push
jmp
into
cltd
dec
std
rcrb
xor
ret
dec
pop
lcall
xchg
or
das
add
adc
inc
loopne
aad
mov
jl
aad
iret
mov
ret
sahf
pop
subb
cmpb
mov
add
xchg
xor
js
pcmpeqd
inc
aaa
in
adc
jecxz
lock
roll
aas
addr16
addr16
push
sbb
inc
scas
pop
add
cmc
xchg
fld1
xor
push
sbb
dec
add
cmpsl
xchg
out
arpl
push
inc
enter
sbb
sbb
pop
push
iret
arpl
out
shll
cmpsb
ret
mov
loope
out
add
fsubs
shrb
rcrl
int
cs
mov
fs
nop
out
push
cmpsb
push
js
pop
pop
and
push
push
mov
stc
adc
cli
jge
loope
pop
movsb
lods
roll
clc
cmpb
push
das
mov
or
ljmp
xchg
daa
insb
add
out
nop
adc
pop
adc
push
shll
add
mov
lret
out
jbe
aas
and
loope
fmull
dec
pop
push
jae
out
inc
mov
jb
nop
int
add
jmp
rcll
mov
mov
mov
int3
aas
pop
sbb
dec
add
movsl
add
pop
pop
cmp
inc
into
inc
mov
and
movsb
adc
cmp
outsl
sbb
inc
xchg
push
rol
cmp
fistps
or
dec
xchg
je
mov
sub
pop
addr16
rcrb
ret
sbb
pop
adc
adc
fnstsw
test
mov
jp
cmp
aam
in
adc
mov
cld
popf
cmpsl
shll
cmp
loopne
xchg
mov
outsb
in
adc
push
out
dec
pop
aad
pop
lods
mov
test
sub
dec
sub
clc
xlat
sbb
pop
dec
int
outsb
xchg
fmuls
test
iret
aas
or
movsl
mov
and
fstp
test
xchg
sub
je
cmpl
bound
inc
pop
dec
ret
jge
pusha
cmc
lahf
or
ds
in
lods
sbb
repz
pop
aad
in
flds
aaa
cmp
mov
test
andl
adc
loopne
stos
rol
nopl
cmp
fxch
je
sbb
nop
stos
mov
aas
xor
mov
inc
jnp
test
lods
mov
into
inc
xchg
cmp
mov
test
sbb
sbb
repz
mov
add
cs
mov
shrl
mov
cmc
scas
nop
pop
les
mov
shrl
xor
mov
inc
add
fwait
cmp
stos
repz
dec
stc
leave
jno
cmp
cmpl
inc
cmp
add
jmp
mov
imul
aas
mov
out
jb
js
data16
div
ror
lcall
imul
xchg
xchg
in
test
xchg
pop
mov
out
cmp
add
sub
divl
adc
mov
adc
xor
rcrb
push
cmp
out
jo
pop
loope
add
lret
sub
jnp
sbb
add
movsl
push
dec
add
pop
mov
pop
jl
aaa
imulb
cli
pop
inc
pop
mov
push
js
push
filds
jne
stos
subl
jecxz
mov
mov
jecxz
push
xchg
sahf
repz
push
cmp
mov
cmp
lret
std
jo
pop
xor
xlat
aas
insb
inc
fld
mov
xchg
mov
sti
push
xchg
fisubrs
push
fldt
or
pop
xchg
sarl
mov
fmuls
cmp
push
sbb
cmp
adc
enter
xchg
cmp
push
jns
xor
push
or
sbbl
fs
push
out
mov
iret
inc
add
dec
fisubrl
jmp
lahf
push
mov
or
sub
leave
pushf
or
ret
mov
jle
mov
cmp
and
cmpsb
enter
int
sub
pop
dec
mov
loopne
cmc
cwtl
cltd
mov
inc
mov
enter
ret
jno
inc
fs
pop
xchg
mov
mov
movl
push
pop
je
jge
ss
xchg
inc
in
add
fldenv
mov
xchg
xchg
and
dec
ljmp
outsb
out
scas
push
add
js
cld
imul
mov
adc
sbb
or
cmc
xor
push
daa
mov
das
dec
or
mov
lds
sbb
popa
fcomps
frstor
rep
jo
test
sbb
sbb
lds
stos
mov
mov
lret
push
mov
ja
cmc
cmpsb
enter
fsubl
xor
das
pop
adcb
stos
dec
stos
xchg
sub
faddp
adc
fcomps
jne
mov
xchg
push
cmp
fisubrl
inc
sub
add
ja
push
pushf
incb
rorb
adc
xor
sbb
push
cmp
addl
repz
scas
arpl
movsb
test
jno
push
call
testb
dec
stc
and
xlat
popf
mov
dec
aad
in
lcall
mov
mov
rcll
xchg
jno
cs
ds
push
push
popa
loope
mov
mov
jb
add
or
add
popl
popl
dec
cmpsb
fldt
iret
lcall
shrl
das
push
jb
xchg
inc
xlat
push
dec
cmp
fiaddl
clc
insl
jnp
add
add
or
arpl
mov
push
or
cld
dec
out
sbb
mov
shrl
scas
xlat
lods
pop
jno
xchg
jg
jle
push
and
js
adc
cmpsl
xor
cmp
push
loope
mov
repz
pop
repnz
std
push
call
sahf
stos
scas
cwtl
inc
lea
clc
mov
sbb
mov
enter
movsl
nop
pop
pop
pop
ret
pushl
add
lcall
mov
cmc
inc
push
aad
dec
cmpsl
and
push
shl
and
adc
mov
sbb
push
repnz
imul
dec
push
adc
ficoml
lea
pop
shll
sub
xchg
jle
mov
sarl
or
pop
pop
and
mov
mov
add
mov
xor
rcl
and
nop
pop
fwait
pop
cmpsl
lods
js
arpl
int
ret
cwtl
dec
cmp
dec
add
ss
lock
pusha
sbb
ret
adc
arpl
aam
and
outsb
mov
bound
loop
add
xor
ret
rcll
xor
mov
adc
push
out
lcall
sbb
aad
mov
dec
or
loopne
lock
dec
add
xor
jns
fwait
adc
sarb
sbb
jb
movl
aaa
add
pop
in
in
jae
jo
jns
add
lahf
mov
jl
xchg
mov
push
mull
inc
xor
and
push
les
mov
stc
inc
jbe
sqrtps
sub
jp
xor
xorb
mov
test
xchg
lret
es
in
or
cmp
xlat
push
lea
lahf
sub
fs
fdivs
xlat
test
mov
xor
push
xor
sbb
or
pop
adc
popa
mov
add
adcb
jae
sbb
mov
pop
gs
dec
popa
movsl
ja
test
or
cld
scas
adc
sub
jo
sarb
and
test
cs
xchg
sbb
fwait
bound
jle
add
dec
arpl
imul
test
jnp
xchg
xlat
inc
andb
sub
test
bnd
adc
adc
mov
sub
pop
xchg
test
dec
shll
aas
fs
mov
out
mov
jecxz
inc
ror
pop
aaa
jl
loop
add
cmp
xor
or
test
pop
dec
mov
outsb
pop
mov
out
pop
mov
jno
pop
mov
inc
push
les
out
ljmp
test
daa
inc
test
scas
in
lcall
mov
dec
vmovntpd
push
mov
mov
lods
mov
inc
adc
adc
xor
mov
shl
adc
into
aas
add
push
adc
loop
stos
lods
push
xchg
fisubrs
lods
inc
ja
dec
mov
jo
cmpsb
inc
enter
sahf
stos
adc
imul
ds
cli
shl
fistpll
rcl
aam
data16
mov
cwtl
jo
subb
ja
notb
test
cmp
sarl
int3
sti
cmp
ficompl
sbb
xchg
push
pop
mov
push
xor
out
pop
rcll
imul
inc
idivl
mov
inc
mov
xor
mov
fists
dec
cli
push
bnd
out
or
mov
pop
leave
in
sub
inc
cld
jne
stos
hlt
sub
xchg
inc
call
push
pop
sarb
add
outsl
mov
test
pop
mov
fnstsw
and
imul
imul
nop
sub
push
or
inc
call
push
pop
or
les
dec
adc
mov
out
arpl
pusha
xorb
cmp
push
clc
push
mov
clc
cmpsl
jne
loop
jbe
jno
test
scas
jb
push
push
sti
add
pusha
mov
push
adc
std
pushf
mov
push
in
mov
cmpb
push
ffreep
testl
pop
jecxz
jne
popa
leave
push
pminub
pop
cwtl
pmaxsw
xlat
dec
in
lahf
rclb
leave
mov
or
inc
adc
mov
xchg
lods
dec
cmp
sti
xor
pushf
repz
fiadds
icebp
jl
enter
sbb
cmpsl
adc
mov
add
bound
rcrb
jge
testl
popa
cmp
mov
dec
mov
cmp
jo
pop
push
jae
gs
shr
jnp
jmp
sbb
pop
fisttps
fildll
iret
insb
dec
lods
mov
cld
pop
mov
jmp
jmp
in
sbb
dec
xchg
push
xor
loop
sbb
mov
out
jo
test
or
push
push
lds
push
sti
xchg
or
movsb
mov
fcmovu
cli
sub
dec
inc
insl
pop
jle
jo
xor
push
mov
out
scas
imul
cmp
repnz
pop
addr16
int
push
pusha
fsubp
sahf
adc
lock
cmc
xor
fistpl
stc
push
push
in
stos
mov
mov
and
mov
fdivs
mov
lcall
mulb
inc
sub
in
or
fnstcw
js
and
sbb
lret
mov
xchg
jo
gs
push
inc
or
xchg
pop
sbb
push
jecxz
popl
push
jbe
movsl
push
orb
test
testb
lea
lsl
frstor
insl
addr16
mov
stos
movsl
fisubrs
test
test
xor
inc
shll
inc
add
and
push
imul
scas
scas
add
out
xor
in
scas
dec
push
xor
pushf
nop
jl
pop
mov
rcll
pop
mov
pop
mov
loop
mov
inc
loope
in
and
daa
iret
scas
sbb
nop
xor
mov
inc
shll
and
mov
push
pop
mov
mov
and
jo
clc
sbbl
xor
ss
jbe
in
cmpsl
sbb
inc
pop
es
xchg
inc
mov
mov
imul
stc
test
ror
mov
pop
sbb
xchg
sahf
mov
dec
mov
clc
cmp
pop
ja
insb
jo
sub
mov
imull
and
mov
outsb
xchg
in
xchg
loop
xchg
fidivl
ss
sub
arpl
cmp
call
bound
aas
js
mov
lcall
rolb
pusha
enter
test
scas
mov
fwait
push
cmp
mov
cmpsb
cmp
sbb
dec
jns
cmp
xlat
cmp
repnz
xchg
jle
push
dec
xchg
jmp
movsl
fisubrl
xor
in
dec
inc
ja
mov
add
pop
sbb
cmp
jnp
fidivs
mov
aad
mov
out
adc
and
mov
push
popa
test
or
mov
xchg
jae
outsb
xorb
and
out
xor
icebp
lods
add
mov
mov
aaa
xor
jo
test
jns
ret
lock
inc
in
mov
push
push
xor
out
mov
add
push
adc
das
cmp
aam
fcmove
cwtl
loope
sbb
out
leave
pop
in
movsl
movsl
sbb
mov
outsl
icebp
and
push
ja
mov
xor
flds
sbb
jmp
loope
sbb
sbb
push
mov
dec
int
outsb
jl
xchg
fs
clc
adc
adc
push
pop
push
and
leave
hlt
add
addr16
imull
xchg
xchg
stc
ret
or
es
push
inc
hlt
lds
stos
stos
add
jo
cli
fisttps
ror
cltd
or
mov
jge
push
stc
mov
lret
dec
inc
cli
cltd
xchg
aam
or
mov
pop
pushf
insl
add
push
lock
lret
pop
gs
xchg
outsb
cmp
stos
icebp
fdivl
mov
push
mov
jg
xchg
mov
mov
xchg
scas
sub
xor
test
inc
sub
cmp
push
out
daa
and
shll
fimull
dec
cmc
pop
lcall
data16
scas
xchg
enter
push
addl
clc
stos
cmpsb
xchg
cmpsb
mov
jne
test
mov
mov
inc
inc
or
mov
aad
xchg
xlat
push
cmpsl
mov
in
jno
and
xchg
jbe
hlt
xchg
ja
add
stos
lods
pusha
or
stos
push
in
iret
movsl
push
sub
les
fdivr
aaa
inc
push
dec
aas
les
lcall
js
sarb
orb
fiadds
lock
xchg
jl
out
jne
pop
xlat
dec
xchg
add
jge
dec
ja
pop
sbb
or
scas
push
push
add
jbe
aam
call
push
ja
rclb
push
ds
fs
and
sub
fldl2e
mov
jo
cmpsb
inc
popa
xor
fcomps
outsb
ja
clc
cmp
ds
push
and
cltd
xchg
xchg
pop
lods
and
and
insb
aas
xchg
sub
lock
xor
lcall
stc
pop
das
pop
jl
xor
pop
cmpsb
imulb
adc
mov
push
adc
xlat
mov
mov
es
mov
xor
subl
adc
js
lods
int3
inc
gs
das
mov
or
cmp
ret
cmp
iret
mov
cltd
insb
clc
mov
jl
test
aas
sarl
punpckhbw
out
pop
add
dec
ss
jge
dec
lret
gs
loope
xchg
pop
in
flds
push
or
rcrl
lods
mov
lods
addr16
push
outsl
outsl
fs
mov
movsb
scas
out
das
jp
stos
pop
mov
addl
xchg
pusha
push
and
inc
ficompl
call
mov
and
int3
xchg
or
push
mov
pusha
mov
mov
imul
push
je
pop
lods
in
mov
or
mov
cmc
cmc
ret
add
jp
jo
sbb
movzbl
mov
test
dec
pop
out
mov
inc
mov
std
lret
mov
aad
fs
into
scas
cwtl
nop
lcall
stos
mov
mov
jae
xchg
push
fwait
clc
inc
arpl
popf
mov
pop
mov
pop
pop
rclb
adcl
and
nop
mov
pop
jmp
gs
pop
aad
mov
mov
mov
adc
xchg
loope
adc
ret
xchg
and
mov
pop
ret
es
pop
lds
push
lea
ljmp
xor
leave
sbb
push
dec
icebp
cmpsl
jecxz
icebp
push
mov
ds
xchg
outsb
lea
je
inc
jl
mov
push
mov
leave
cltd
test
enter
push
pop
jmp
sub
adc
push
mov
test
or
pushf
nop
repnz
pop
fisubrl
xchg
iret
xchg
add
push
adc
push
test
inc
nop
daa
push
and
mov
addr16
scas
xchg
mov
xor
xchg
aad
add
bnd
std
loope
mov
in
mov
inc
popa
mov
xor
fstl
dec
dec
sub
cmp
mov
or
int
pop
jns
ss
and
mov
stos
test
sub
testl
je
xchg
mov
jp
leave
inc
dec
and
mov
outsb
mov
cmp
movsb
insb
shrb
inc
add
or
in
inc
sub
or
xchg
jg
or
mov
cmp
pop
push
js
inc
and
mov
iret
sub
mov
fldl
hlt
adc
ljmp
movsb
dec
bound
adc
jo
add
pop
mov
es
jl
sbb
push
pop
adc
push
pop
fwait
inc
cmp
cmp
in
and
jl
scas
pop
daa
cmpsl
mov
mov
cmp
repz
xchg
aam
add
inc
jbe
add
fdivp
imul
bound
jecxz
pop
mov
fistpll
test
lds
enter
icebp
rorl
lea
cs
jne,pn
je
push
arpl
dec
je
std
movsl
std
mov
cmc
mov
in
loope
push
mov
sti
aam
mov
inc
les
jbe
sub
mov
adc
pop
add
push
or
punpckhwd
and
sbb
test
push
lret
pop
mov
lds
lahf
add
mov
mov
into
std
mov
dec
mov
or
dec
jecxz
inc
in
push
scas
gs
jno
or
add
fdivs
xchg
mov
rcl
loopne
cmp
mov
inc
mov
dec
sub
bound
out
rolb
push
pop
xchg
mov
rcrl
icebp
lsl
dec
add
inc
adc
in
add
mov
push
stos
inc
pop
out
call
mov
fildl
int
jae
pop
adc
sbb
sbb
frstor
gs
xchg
inc
dec
mov
xor
sbb
jl
popf
rolb
xchg
push
add
xor
mov
xor
mov
cmpsb
cs
es
mov
imul
jb
xlat
pushf
aam
inc
dec
ljmp
les
adc
sbb
es
cltd
filds
aas
test
adcb
subl
cltd
cmp
add
jmp
test
mov
cmpb
add
arpl
sbb
or
icebp
dec
arpl
imul
imul
xchg
iret
movsb
and
stos
push
lods
adc
test
dec
lods
movsl
movl
ds
jb
loope
sub
xchg
leave
cmp
sarl
cld
pushf
adc
mov
push
ds
fcomps
lcall
pusha
addb
cld
lods
jno
ljmp
pusha
fwait
mov
jmp
lods
aad
movsl
insl
add
mov
add
cmp
mov
jae
add
cmp
or
outsl
filds
sbb
sti
push
mov
inc
stc
shll
push
fistl
or
and
in
stos
inc
cmpl
adc
test
outsb
xchg
xchg
inc
sbb
push
lret
cs
push
mov
sbb
movsb
mov
hlt
sbb
inc
aas
shr
mov
scas
jns
pop
jmp
lret
fistpll
insb
and
jns
mov
ljmp
in
popa
lahf
stos
fs
clc
dec
xor
jmp
scas
fsubrs
cmc
ss
mov
out
stc
jne
dec
dec
pop
sbb
loope
leave
lds
mov
inc
jmp
jne
dec
xchg
xchg
push
push
insl
jl
imul
arpl
ljmp
dec
call
add
push
imul
cmp
lcall
add
shl
xor
movsl
lcall
imul
pop
test
dec
mov
insb
pop
jp
pop
and
xor
in
pushf
xchg
dec
push
ljmp
sbb
call
jbe
cmp
xor
jb
mov
inc
clc
lock
xchg
fwait
jg
mov
xchg
xchg
sub
mov
add
inc
vhaddpd
and
rcrl
pop
push
add
mov
push
jg
lods
mov
inc
divl
inc
pusha
out
jl
pushf
pop
call
shlb
push
mov
adc
push
xchg
push
push
cs
sbb
mov
inc
sbb
cmp
jp
or
test
leave
bound
out
mov
jo
inc
adc
test
add
sbb
icebp
mov
sbbb
adc
jmp
xor
jp
cmp
jnp
adc
movsl
pop
repz
mov
mov
xchg
or
fidivl
leave
hlt
repz
jecxz
sbb
mov
sarl
ja
jl
push
add
gs
mov
or
sbb
outsl
loop
in
push
popf
mov
mov
out
out
mov
imul
loopne
cmp
push
ds
xchg
sub
adc
lahf
mov
popa
jne
movsl
insb
cmc
stos
mov
es
adc
loopne
ja
mov
mov
push
and
add
push
cmp
sub
add
stos
sbb
sub
lret
push
mov
imul
jg
or
push
pop
ljmp
add
popf
popa
stc
mov
jns
in
cli
sub
mov
out
xor
fiadds
pop
mov
mov
sahf
leave
pop
xor
into
cmp
inc
pop
adc
repz
iret
movsb
inc
cmpsb
mov
pop
aas
or
xchg
mov
mov
incl
ja
loop
data16
mov
lret
push
or
popa
fnstenv
insl
jle
jmp
cmpsb
pusha
pop
leave
sbb
dec
mov
fidivrl
pop
addr16
stos
aaa
sti
arpl
adc
xor
jns
jne
leave
movsl
xchg
stc
clc
pop
fidivl
pop
adc
pop
sbb
in
es
or
test
jb
jg
push
mov
addr16
lods
outsl
test
jmp
mov
inc
cs
fs
or
fsubr
jmp
cmp
sbb
aaa
push
xchg
dec
pop
insb
sub
sub
mov
repz
push
dec
xor
stc
hlt
mov
int3
in
mov
dec
lcall
mov
adc
fnsave
and
inc
sub
fistps
sub
mov
daa
aas
and
insl
faddl
test
push
fdivr
out
fsts
mov
push
fs
bound
jae
or
lret
xor
cmp
lods
mov
out
inc
inc
mov
cmp
pop
insb
shlb
jns
mov
adc
xchg
movsl
adc
jns
jp
inc
sub
cmpsb
in
mov
adc
fmuls
movsb
rclb
xor
mov
push
ret
xor
std
fcoms
mulb
outsl
cmp
inc
and
out
cld
movsl
imul
ret
mov
out
je
or
pop
mov
add
fsubr
in
xchg
mov
outsl
pop
sub
fildll
mov
in
pusha
sub
or
add
xor
sub
outsl
mov
pop
aad
jmp
in
lods
mov
mov
dec
es
add
shll
lea
pop
push
cs
or
lds
dec
push
fiadds
pop
ds
fbstp
push
xor
sbb
xlat
outsb
lods
lock
dec
test
lret
mov
rep
sbb
xor
mov
aas
dec
je
xchg
jmp
pushf
cmc
js
outsl
mov
lods
call
nop
test
jno
dec
icebp
mov
xor
shll
jnp
mov
sub
push
jmp
xor
sbb
xchg
lods
sahf
sbbl
pusha
in
lret
roll
loopne
xchg
gs
aad
xlat
xchg
imul
and
rcrl
lcall
aam
adc
mov
addr16
fs
jmp
popa
and
pop
cmp
pop
ljmp
lea
add
insl
pop
imul
or
cmpsb
mov
xchg
sub
jbe
call
inc
xchg
xchg
hlt
lahf
call
aas
lret
mov
push
not
enter
sbb
pop
sub
adc
out
lret
arpl
test
insl
mov
sbb
ljmp
inc
mov
push
xchg
lret
inc
lret
insb
out
hlt
stc
inc
adc
movl
mov
outsb
ret
dec
rorl
jo
out
insl
stos
mov
inc
pop
or
popf
cmpw
ds
sbb
std
jb
xor
lret
movsl
mov
push
test
pop
xlat
pop
fisubrs
push
add
pop
mov
cld
lret
pop
pop
sahf
into
enter
jbe
fdivs
mov
mov
xor
outsl
xchg
adc
jno
scas
sbb
mov
in
pop
or
std
push
fstl
jb
mov
jp
xchg
and
mov
js
lcall
jecxz
mov
lea
fiadds
imul
mov
std
sbb
fstps
loopne
insl
xchg
dec
hlt
cli
fisubs
mov
inc
jae
test
mov
aas
mov
cltd
add
cwtl
dec
xchg
pop
test
fldcw
enter
adc
loopne
iret
call
wbinvd
add
inc
out
add
inc
and
pop
sub
maskmovq
notl
cmp
ret
add
out
pop
rcr
inc
pop
mov
pop
pop
cltd
jne
xchg
lods
rep
mov
inc
ret
lea
jne
mov
movsl
decl
or
ljmp
jb
inc
or
out
mov
aam
inc
xlat
inc
ret
add
push
mov
insl
in
or
mov
jg
js
ffree
xchg
jmp
iret
cs
das
cmpsl
fsubrs
pop
test
adc
dec
pop
out
sub
pop
and
loope
add
loopne
adc
mov
push
adc
cmp
xchg
dec
lcall
mov
popf
repz
and
jnp
std
repnz
dec
jbe
stos
mul
std
xor
push
cmpsb
insl
vsqrtpd
cmp
pop
push
and
or
aaa
adc
cmp
clc
rclb
mov
movsb
cmpsl
jge
pop
jbe
nop
adc
call
or
xchg
sub
mov
ds
cmc
addl
js
in
movsl
pusha
cltd
repz
hlt
fisttpl
imul
push
and
dec
lea
and
inc
daa
or
mov
adc
into
movb
push
clc
push
mov
dec
repz
jge
scas
pop
sub
ffreep
lods
bound
add
jae
add
or
or
sbb
aam
aas
push
aaa
vfnmadd231ps
cmpsl
mov
dec
insl
and
outsb
inc
hlt
shl
icebp
pop
pop
jecxz
popf
dec
mov
push
sub
lcall
daa
mov
subl
iret
and
pop
jl
data16
movsb
push
xor
pop
pop
mov
xchg
out
inc
jecxz
adc
dec
imul
in
loope
hlt
xor
cwtl
mov
xchg
cmpsb
inc
xchg
push
dec
dec
rep
mov
pop
sub
repnz
jmp
lret
cmpsl
or
call
or
lret
or
fidivrl
xchg
dec
fisubrl
lea
mov
xchg
sahf
sbb
sub
adc
out
push
sub
insb
aas
sbb
pop
sar
rorb
inc
flds
sbbl
es
pop
fists
iret
sbb
ljmp
fs
stc
fnstenv
add
pop
fwait
add
inc
fidivs
in
repz
mov
cmpsb
jb
mov
xchg
aas
mov
rcr
xchg
imul
popa
lahf
lock
jge
mov
out
cmpsb
nop
jmp
inc
imul
jae
sbb
in
je
inc
or
nop
jmp
push
xor
cli
jle
pop
cmpsl
leave
enter
lret
mov
xor
fistpl
adc
lahf
sub
xor
pop
lds
xchg
fldcw
dec
daa
dec
fstp
dec
jo
imul
test
in
mov
jnp
outsl
xchg
js
inc
ret
rorl
inc
inc
adc
scas
leave
mov
xlat
fwait
stc
hlt
imulb
and
int3
mov
mov
adc
out
fdivp
xchg
dec
and
ret
add
sub
stos
rorl
xorb
cmp
mov
bnd
sub
mov
add
push
ljmp
lock
loop
pop
pop
dec
mov
cmp
and
ljmp
jp
inc
sub
out
repz
mov
mov
stos
sbb
test
xchg
inc
jne
scas
and
out
decb
sub
xor
cmp
xchg
xchg
inc
pop
inc
push
lods
xchg
stos
xchg
aas
xor
call
outsl
in
pop
cmpsl
dec
pop
or
mov
xchg
xchg
or
jg
mov
mov
adc
mov
push
int
stos
push
or
or
arpl
mov
lds
push
adc
insb
lock
xor
xor
lods
leave
mov
imul
aad
mov
arpl
fucom
int3
jge
insl
push
lea
jae
pop
and
or
xchg
adc
or
pop
js
pop
insl
pop
jg
mov
mov
and
lret
aam
jle
jne
nop
dec
adc
push
sahf
and
insb
cmp
fldpi
cmp
rorb
add
and
mov
arpl
jmp
mov
lock
cs
aad
addl
test
ficomps
test
rcr
ds
test
adc
in
push
sbb
into
mov
out
jmp
pop
inc
pusha
cmp
sub
xchg
mov
sub
sbb
int
cmp
mov
jp
sbb
xchg
lods
cmpb
stos
lea
xor
mov
stos
sti
mov
out
loope
sub
outsl
mov
shlb
cwtl
ds
cmp
addr16
ja
xchg
inc
pop
popa
mov
cld
sbbb
fs
sub
push
xchg
jg
jl
mov
adc
mov
or
sub
incb
dec
lea
sub
popl
sbb
mov
or
test
and
test
subb
cmp
pop
jp
ret
cld
mov
pop
cmp
jge
xor
bound
sbb
pushw
loope
aam
add
push
sub
add
mov
lods
push
mov
xchg
test
stos
pop
cmpsb
jns
xchg
pop
test
in
pop
jl
pushf
sbbb
shrb
ljmp
push
sbb
mov
xor
out
inc
inc
jl
dec
or
xor
mov
imul
xchg
add
xlat
push
out
cld
pop
mov
add
mov
movsl
sub
loop
sti
jl
gs
dec
hlt
xor
or
ja
popa
insl
jecxz
mov
std
dec
xchg
out
inc
loop
cwtl
fwait
dec
sub
jnp
jnp
sbb
fdivrl
cmc
fisttps
lcall
leave
imul
jecxz
sbb
jg
fisubrs
mov
dec
jbe
or
jle
jbe
push
jle
mov
xor
xchg
test
mov
jbe
xor
repnz
in
jmp
inc
mov
jecxz
rol
sub
or
ds
rcrb
cmpsb
xchg
add
outsb
xlat
repnz
dec
xorb
fs
fcomps
and
cmp
pop
pop
es
mov
jecxz
sbb
mov
sbb
lret
and
in
insl
nop
lock
hlt
insl
inc
or
sbb
jle
fsubp
iret
fdivr
std
scas
sub
xor
xchg
inc
fsubr
xor
les
push
mov
inc
sbb
xor
mov
divl
sbb
sub
sahf
or
cmp
jno
fwait
popa
xlat
dec
shlb
loopne
inc
xorb
shll
inc
mov
sti
pop
insb
out
fmull
mov
push
pop
or
jmp
add
mov
mov
mov
mov
jge
inc
add
cmp
sbb
cld
loop
daa
insb
mov
cmp
fstpl
ror
mov
sub
icebp
es
fstps
mov
push
xchg
inc
inc
inc
enter
shrl
inc
mov
or
ret
pop
scas
aaa
int
mov
dec
mov
loopne
adc
push
jl
or
je
fwait
out
outsl
je
jmp
push
push
insl
xor
mov
dec
mov
out
push
jge
outsb
dec
cmp
cltd
out
fwait
loopne
xlat
loopne
push
nop
mov
mov
cmp
xor
jns
je
insl
aaa
push
add
mov
cmp
mov
adc
pop
outsb
xor
or
nop
cmp
insb
xlat
fsub
xor
fdivr
cmc
daa
clc
clc
fsubs
pop
mov
jge
fisubl
jmp
add
dec
adc
jb
sahf
lcall
mov
lahf
mov
push
in
and
mov
test
fsubrs
push
nop
mul
insl
mov
movsl
or
popf
inc
adc
add
cmp
adcb
lcall
lret
sti
dec
test
inc
das
and
daa
insl
pop
add
dec
ret
ret
pop
add
shrb
mov
jmp
and
mov
out
xchg
nop
mov
add
mov
xchg
clc
data16
outsb
and
repnz
dec
fidivs
push
hlt
in
xchg
icebp
loopne
add
pop
mov
mov
aaa
xor
imul
cmp
cmp
enter
jp
jnp
mov
add
icebp
cld
jecxz
cmp
cmc
lea
xchg
jb
mov
arpl
cli
jg
cmp
push
int3
into
jo
push
int3
je
fists
xor
nop
inc
add
or
int3
scas
and
stc
and
mov
mov
cmpsb
insl
jle
sahf
les
aad
out
idiv
fisubrl
jp
fildl
ds
push
adc
xchg
dec
mov
pop
add
xor
scas
mov
test
pop
inc
test
nop
fists
lcall
lea
fwait
push
xor
mov
cmpsb
push
dec
sbb
pop
dec
pop
mov
adc
stc
insl
and
jl
jp
push
cli
sub
mov
stos
jmp
jl
subb
xchg
fisubs
cs
ja
jl
shlb
aaa
or
xor
daa
cmp
push
lret
int3
sub
movsb
jp
mov
xlat
mov
fistps
jge
faddl
pop
jecxz
jne
push
les
dec
stos
jle
or
fsubrl
in
adc
loopne
cwtl
pop
imul
bound
ljmp
js
inc
lea
ror
mov
call
aaa
pop
pop
sbb
inc
popa
in
in
mov
push
inc
mov
out
shrl
mov
mov
aaa
addr16
aad
out
or
xlat
inc
mov
cli
sbb
stc
and
test
loope
and
into
je
arpl
leave
mov
sub
and
cmp
mov
inc
xlat
in
push
lcall
ljmp
pop
xor
push
push
int3
hlt
cmpsl
mov
sahf
mov
stos
lcall
dec
and
and
repnz
in
push
out
in
lcall
cld
out
pushf
fsubl
test
mov
pop
lods
or
push
jns
fxch
mov
cmp
je
xor
out
in
pop
and
lahf
loop
insb
inc
insl
sub
enter
sahf
aaa
outsb
inc
jge
enter
dec
fxch
loope
mov
js
and
jo
push
xor
ja
bound
adc
add
loope
lea
sub
lret
fimull
inc
idivl
inc
adc
mov
in
lret
pop
lahf
add
test
adc
iret
cmp
jb
out
lock
dec
cmp
int3
or
loopne
shl
insl
pop
dec
xchg
aad
pop
ret
fs
xchg
jno
lods
dec
inc
pusha
addl
stos
xchg
mov
cld
aad
cmp
loopne
lods
or
mov
roll
imul
outsb
mov
mov
sahf
mov
ret
xor
push
or
incl
test
push
inc
dec
mov
in
gs
dec
add
pop
adc
pop
add
cltd
shll
int3
ret
in
xor
subl
popa
out
xchg
add
lods
add
iret
xchg
pop
cmp
mov
xchg
mov
arpl
pop
stos
mov
push
into
or
hlt
ds
mov
jnp
sti
adc
cmpsb
lods
rcll
pop
xchg
sub
movsl
into
lahf
xchg
push
das
negb
testb
and
jle,pt
jns
testb
sbb
pop
dec
fisubl
mov
cmp
in
or
jl
fldcw
sbb
movsb
out
das
aaa
add
adcb
data16
insb
add
jl
xchg
push
and
dec
push
dec
in
hlt
psllw
mov
mov
stos
jp,pt
push
popf
clc
test
xchg
lcall
fs
arpl
es
push
out
aam
xlat
and
inc
sub
mov
mov
into
out
cli
inc
fidivs
aam
mov
cmp
xor
sbb
call
mov
dec
jecxz
fcoms
mov
adc
orl
pop
fidivl
push
jns
cwtl
jmp
ljmp
pop
sub
push
adc
dec
adc
inc
cltd
or
cld
rclb
sub
push
dec
jmp
xlat
sti
adc
hlt
icebp
push
gs
pop
js
sbbb
mov
jge
cmp
cmp
sbb
jecxz
push
ja
sbb
pop
push
push
shl
push
push
adcb
mov
jg
push
sub
popa
jp
cmp
xchg
movsb
test
mov
cmp
nop
mov
rclb
insl
push
shlb
or
jl
ja
pop
sbb
adc
mov
or
sbb
jae
dec
pop
lods
aas
mov
mov
add
lahf
cmp
mov
loop
or
into
aas
aaa
mov
rcl
cmpsl
int
jb
jle
xchg
fsubs
cmp
xor
mov
inc
pusha
addr16
outsl
adc
mov
dec
push
pop
mov
repz
fcoms
inc
out
fs
into
fs
dec
loope
jne
sti
sti
jno
jge
mov
mov
in
dec
inc
fcmove
push
mov
sbb
frstor
jmp
mov
xor
push
loop
testb
mov
dec
test
sbb
lock
movsl
add
jecxz
ljmp
xchg
mov
adc
dec
aam
ss
sbb
cmp
movsb
mov
std
cmp
adc
loop
ljmp
mov
mov
mov
and
clc
adc
leave
cwtl
ja
out
add
into
mov
sti
push
fldcw
scas
lock
andb
add
mov
mov
mov
test
sub
push
pop
fistpll
popf
aam
stc
adc
adc
mov
mov
mov
inc
sub
push
xor
scas
sbb
stos
daa
push
adc
xor
mov
into
fistpl
and
stos
or
push
fistpl
mov
orl
cmp
cmpsb
mov
test
inc
mov
mull
or
shll
mov
mov
xchg
mov
lret
mov
pop
xchg
int
in
lea
mov
aas
fs
mov
jle
shl
sub
mov
add
dec
or
sub
mul
mov
cli
xor
jnp
lea
outsb
bound
subb
fsub
push
push
dec
mov
cmpsb
fistl
insb
add
push
imul
movl
inc
sti
inc
xor
in
sbb
inc
ret
movsl
int3
dec
mov
les
cmp
scas
in
scas
xchg
push
dec
or
and
out
mov
test
add
lds
mov
jg
jge
shrl
arpl
jge
mov
loope
cmp
jge
shll
insl
dec
fs
int
jg
lods
pusha
xor
push
fiaddl
sti
xor
fdivr
cmp
adc
cmp
and
stos
mov
std
fs
outsl
das
lea
daa
push
xor
imulb
out
xchg
sub
lret
shll
mov
les
je
mov
fbld
gs
in
dec
dec
cmp
sbb
test
cmpsl
lds
rcl
addr16
adc
push
sub
jno
push
pop
cmp
aad
mov
adc
add
sbb
mov
xlat
cmpsb
or
xchg
les
imul
mov
pop
fsubs
lcall
imul
pop
dec
xor
notl
inc
fdivs
cmc
aam
sarb
pop
ja
pop
aas
fstp
loope
push
dec
jg
insb
cld
std
imul
push
fdivs
sub
rorb
mov
dec
mov
xchg
ss
loop
adc
cmpsl
rcpps
imul
mov
sbb
stos
pop
test
jle
jmp
mov
out
or
or
or
jbe
sbb
jo
inc
push
out
cmp
add
jp
xchg
xchg
mov
sbb
fisubs
mov
inc
loop
out
adc
xchg
lock
fdivr
int
jns
addr16
push
scas
sti
xchg
mov
push
jp
pop
shrl
inc
cmp
cmp
adc
add
bound
pop
addr16
mov
xlat
jne
and
sbb
popa
int
mov
sub
jg
pushf
adc
cwtl
rcr
inc
stos
cs
jbe
popa
xchg
call
mov
xor
cmpsb
cwtl
sarb
mov
mov
xchg
mov
push
mov
xor
daa
and
cmp
lock
push
push
add
adc
pop
repz
jne
gs
xchg
mov
addl
inc
cli
pop
jle
adc
push
add
or
mul
stos
enter
mov
push
movsl
push
inc
int3
xchg
nop
call
fucomip
ja
cmc
sbbb
lds
bound
jg
mov
into
das
inc
scas
cwtl
inc
lret
loope
addr16
sbb
pop
xchg
adc
test
test
inc
or
sbb
sbb
jbe
mov
inc
int
xor
mov
ret
out
cwtl
je
jle
pop
inc
daa
insb
in
pop
push
dec
test
jge
cmpb
xchg
push
cmpl
inc
stos
xor
adc
inc
xchg
cmp
push
sbb
mov
sub
cltd
mov
fadds
or
jmp
mov
in
jae
adc
adcl
xchg
mov
js
mov
mov
popf
loopne
cmp
adc
mov
sub
mov
jmp
movsb
bound
add
push
mov
dec
mov
dec
in
mov
ljmp
mov
xchg
mov
dec
in
mov
xchg
dec
inc
ja
push
xor
out
into
push
gs
jne
cmp
aas
sbb
std
sub
mov
icebp
paddq
into
adc
push
iret
cs
outsb
inc
mov
lahf
jns
jae
sbb
add
adc
cmp
fsts
les
popa
mov
or
adc
dec
or
dec
dec
daa
inc
loop
push
cs
aad
inc
in
mov
xchg
or
fidivs
pop
in
std
fld
mov
add
enter
or
dec
dec
and
icebp
mov
lods
sbb
pop
jg
push
cs
test
lods
mov
mov
push
mov
mov
nop
lock
sti
popf
xor
cmp
cmpl
lock
shll
ljmp
fdivrl
push
scas
lods
mov
jl
mov
fcos
mov
rcrb
into
pop
jl
sub
enter
stc
cli
bound
xor
mov
imul
mov
fidivl
lock
mov
push
push
sub
mov
pushf
icebp
sub
and
icebp
sti
push
out
and
clc
cli
adc
pop
pusha
shl
pusha
fistpll
dec
adc
cld
xchg
jecxz
mov
int
mov
stc
roll
pop
ja
loopne
cli
rcll
movsb
and
call
roll
push
iret
push
add
dec
aad
pop
adc
xlat
dec
inc
push
jbe
es
insb
mov
push
stos
mov
cmp
aam
shll
push
shrb
cmp
and
mov
push
stc
jl
jmp
loopne
push
in
cmp
int
mov
or
mov
lods
mov
add
int3
xorl
bound
mov
jge
mov
iret
mov
push
mov
push
imul
and
and
mov
pusha
pop
fcomip
jbe
inc
push
xchg
push
stos
int
cmp
andl
push
push
std
test
xor
clc
pop
inc
add
mov
shl
xchg
dec
aad
arpl
popa
or
add
orl
mov
push
ss
jle
xchg
xchg
pop
dec
mov
cmp
fisttps
popa
ficoml
add
add
xchg
mulb
pop
dec
jno
xchg
mov
out
push
leave
pop
popf
add
jbe
jmp
lods
stc
out
push
nop
negl
sbb
arpl
xor
cmp
ja
rorl
loop
adcb
incb
push
pop
jno
and
or
mov
stc
fwait
sub
pop
xchg
jae
add
push
shrl
jle
xchg
addl
mulb
nop
push
adc
imul
stc
gs
sub
inc
or
bound
imul
inc
out
shlb
scas
enter
lcall
xchg
pushf
or
sbb
imul
clc
push
cmp
mov
push
das
pusha
adc
cs
aas
test
std
lods
pop
lock
popa
push
sarb
xchg
aaa
mov
add
mov
dec
or
jnp
push
in
jb
daa
ret
adc
lods
outsb
dec
in
cwtl
inc
lods
stos
push
sbb
cmc
add
and
testl
or
lret
inc
mov
xor
fs
pop
fldenv
push
ret
sbb
cmp
push
in
pushf
sbb
add
adc
jle
add
test
in
test
imul
jmp
lcall
mov
jmp
xchg
ja
out
xor
xor
pop
ds
imul
pop
adc
and
adc
scas
imull
pushf
dec
ret
xor
and
mov
movsb
lret
pop
pop
push
outsb
test
cmp
out
pop
jno
mov
and
leave
les
sti
inc
sub
loop
push
ret
aam
inc
stc
push
inc
or
lcall
xchg
xor
sub
movsl
mov
push
in
dec
adc
lods
inc
sub
mov
daa
pop
addr16
sti
icebp
mov
add
sub
aas
lcall
pushl
mov
ret
push
mov
mov
jecxz
pop
dec
jecxz
aas
int3
in
and
jl
sbb
fildl
call
mov
mov
lret
add
ljmp
lahf
insl
cmpsb
je
mov
mov
les
aas
cmc
das
xchg
dec
addb
lods
push
lds
ljmp
and
adc
test
sub
jg
mov
inc
mov
rcrl
cmp
xorl
loop
das
das
stos
insl
push
daa
insb
stos
xchg
inc
mov
add
sub
es
cld
mov
pusha
lret
shlb
jno
sub
sbb
packssdw
push
or
daa
test
push
pop
ds
lahf
stos
xchg
sub
ds
mov
inc
push
fs
pop
add
aam
xor
jge
cmpsl
hlt
ds
pusha
sub
xchg
in
js
cltd
pop
push
jp
xchg
mov
adc
outsb
pop
divb
jns
aas
arpl
shl
jmp
add
and
cwtl
mov
addr16
fisttps
ret
mov
in
insb
test
push
fnsave
aas
mov
out
add
aaa
jl
into
sbb
or
gs
sbb
mov
leave
add
inc
lods
jge
loop
cmp
xchg
faddl
cltd
movsb
outsb
lahf
mov
mov
sbb
jo
ljmp
out
sahf
push
outsl
xchg
addb
mov
leave
push
dec
add
cmp
ss
adc
mov
mov
mov
loope
rolb
jns
push
into
add
fisttpl
fldl
out
in
out
jl
cmpsl
outsb
fisubrs
pushf
mov
pop
pop
out
test
lds
inc
sub
out
pop
mov
lock
popa
inc
addr16
inc
test
sub
mov
sub
and
sbb
movb
stc
adc
inc
lret
adc
xor
sbb
jo
clc
dec
lea
dec
jae
xchg
outsl
inc
pop
jge
pop
stc
jge
sbb
push
mov
pop
mov
and
and
push
imul
jnp
addr16
test
dec
in
cmpsl
in
aas
cmp
je
les
xchg
imul
lea
xchg
sbb
dec
lea
inc
fidivl
pushl
push
pop
std
out
inc
shrl
nop
adc
imul
sub
or
cwtl
popa
testb
div
xor
testl
cmpsb
sbb
cmc
aad
sahf
push
xchg
int3
ret
repnz
in
dec
pusha
loop
hlt
mov
outsb
and
cmp
iret
sub
mov
fmull
fidivrs
pop
test
nop
push
inc
mov
push
or
pop
push
pop
and
movsl
test
out
sub
sarl
cmp
pop
dec
ds
ja
add
aam
aam
jl
jno
dec
push
sbb
jp
sbb
xor
push
inc
xchg
scas
mov
insl
daa
outsb
icebp
mov
cld
mov
nop
and
jns
jno
ljmp
fdivl
stos
mov
xchg
fstl
add
sub
out
jecxz
cmpsl
jnp
test
cmpsl
xor
leave
add
dec
adc
addr16
or
imul
mov
push
in
push
addl
pop
dec
leave
mov
inc
in
jae
stc
lcall
or
clc
outsb
sub
xor
scas
negl
pop
cld
add
adc
jbe
mov
shlb
lahf
leave
out
repz
xchg
lahf
scas
outsl
pop
sub
dec
jno
mov
cmp
mov
cmp
imul
push
push
mov
mov
sub
icebp
ds
icebp
adc
lds
loopne
loopne
out
adc
inc
cmp
std
push
dec
adc
loop
mov
add
sti
cwtl
cvtpi2ps
shr
movsl
add
pushf
into
or
ret
out
in
cmc
out
cwtl
push
lds
cld
gs
jecxz
cmpsb
leave
push
xor
inc
mov
or
push
mov
imul
sub
and
mov
push
inc
in
lcallw
jnp
sbb
add
pusha
mov
and
repz
inc
daa
xor
cmc
jecxz
add
mov
mov
inc
rorb
pop
test
clc
je
xchg
mov
jne
pop
mov
hlt
divl
mov
mov
pop
jecxz
sub
fcomi
inc
rolb
mov
inc
pop
jbe
sti
or
xchg
insb
das
xchg
notl
jmp
enter
cmp
sub
pop
dec
or
cmp
push
aad
inc
sub
push
xor
push
mov
data16
mov
aas
push
dec
mov
es
in
aam
scas
and
std
jb
testb
jle
popa
mov
movsb
mov
or
pusha
push
sbb
cmpsl
orl
jmp
fwait
scas
adc
fistl
es
xchg
cmpsl
xchg
rorb
dec
js
sub
xor
xchg
ret
add
push
dec
add
loopne
xor
jae
mov
out
ret
or
pop
fidivs
repnz
xchg
fs
mov
dec
fildll
adc
mov
push
xchg
xor
in
lret
xor
jnp
test
adc
jbe
cli
lcall
aam
test
mov
sub
cmp
sub
mov
jmp
dec
jb
lea
jbe
mov
arpl
inc
xor
cmp
testb
and
jmp
mov
cmovle
jl
test
outsb
insb
fistpll
fistps
lcall
sbb
mov
divb
pop
mov
sub
mov
testl
daa
test
jnp
push
ret
out
and
inc
js
xchg
test
cmp
sub
stos
mov
xor
inc
xchg
jo
pop
je
mov
dec
orb
xor
pop
dec
pop
and
fmull
cmp
scas
cmp
je
out
repnz
jg
xchg
movsb
pop
adc
xor
cmp
and
xchg
pop
inc
mov
sbb
int3
jp
bswap
roll
ds
outsl
fildll
test
push
cmp
test
ds
pop
inc
imul
dec
outsb
jnp
push
and
daa
addr16
mov
outsb
xchg
push
jo
dec
and
loop
rclb
xor
xchg
lret
inc
push
push
xor
inc
pop
mov
sub
inc
push
test
sarl
xchg
pop
and
dec
fsincos
out
je
add
add
jns
push
divb
test
sahf
jge
add
loope
cs
xor
xor
das
sub
std
aas
aas
imull
fsqrt
lahf
push
das
mov
nop
xor
add
xor
ret
mov
cli
jl
mov
out
cmp
or
and
sbbb
clc
inc
fstps
xchg
fld
bound
dec
lds
fnstenv
xchg
loop
xor
out
ds
fimull
push
cmp
sahf
dec
std
xchg
adc
out
pop
