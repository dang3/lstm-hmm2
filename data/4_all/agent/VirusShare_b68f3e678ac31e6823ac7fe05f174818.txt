mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
add
xchg
push
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
.byte
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
cmp
mov
test
jecxz
xor
mov
cltd
mov
add
jb
testl
xchg
push
push
xlat
or
sahf
pop
je
out
push
fistps
inc
or
pop
mov
push
in
int3
repz
adc
dec
and
fsts
andb
mov
arpl
sub
and
repnz
das
orb
test
cltd
sti
outsl
ds
lock
outsb
mov
movsb
int3
pusha
jmp
jge
dec
lock
popf
popf
pushf
mov
out
js
stos
inc
add
push
inc
lcall
mov
ljmp
pop
fldl
lret
repz
test
les
push
out
cmpsb
mov
cmp
adc
lods
mov
jmp
mov
in
fisttpll
cs
out
dec
aas
dec
test
adc
cltd
lock
addr16
xchg
mov
jge
sarl
xchg
mov
push
lcall
push
sbb
sbb
cmp
xchg
movsb
adcb
imul
lea
push
out
adc
cmp
mov
pop
sub
inc
dec
out
jecxz
je
imul
push
xor
jns
dec
in
mov
inc
movsb
or
adc
aaa
aas
sbb
fs
lret
bnd
mov
sbb
call
js
jle
idivl
icebp
scas
test
dec
rolb
fidivl
mov
sbb
lea
in
jmp
addb
dec
or
xchg
push
add
sti
pop
xlat
and
pop
push
lods
mov
es
xchg
in
insl
xchg
sub
cmp
call
xchg
leave
and
adc
movsb
pop
les
xlat
in
jo
push
pop
mov
stos
xchg
mov
je
repz
push
pop
dec
lret
mov
fs
sub
lret
inc
cltd
jns
cld
aam
dec
adc
cmp
xchg
mov
das
cmp
jo
aam
mov
mov
mov
lcall
enter
jae
je
lds
call
stc
or
in
dec
sahf
add
xchg
add
cwtl
ret
dec
data16
insl
jle
adc
ds
mov
and
adc
push
decl
out
lods
js
cli
push
jo
dec
or
dec
sub
lds
mov
adc
leave
mov
test
in
sbb
and
ljmp
in
imul
fimull
ss
insb
loope
in
push
in
test
cmp
bound
sub
jp
iret
or
mov
sbb
popf
clc
mov
pop
jno
pop
or
aad
inc
mov
insb
dec
mov
jge
mov
sbb
mov
inc
pop
icebp
int
mov
jp
lea
xchg
sub
dec
repnz
lock
xchg
cltd
sti
push
daa
mov
mov
fcoms
or
ja
pop
pop
jmp
cmp
cmp
inc
lcall
and
addr16
insb
and
inc
aam
adc
pop
enter
cltd
mov
mov
and
sub
rcr
rclb
dec
movsl
sub
ljmp
orb
and
fists
push
test
adc
cmp
adc
mov
lea
and
lods
xor
mov
mov
xor
and
and
and
aad
adc
push
insl
jbe
dec
push
pop
mov
test
or
rdmsr
movsl
xlat
cmc
movntps
outsl
cmp
popa
bound
xchg
sub
out
dec
sbb
cwtl
icebp
aas
xlat
add
imul
out
and
sub
mov
push
add
xchg
push
inc
lahf
adc
fiadds
mul
fildl
xlat
pop
xchg
cmp
push
loopne
xchg
mov
rol
lods
lahf
std
addl
push
enter
mov
sub
icebp
fstps
sbb
aas
daa
lds
xor
sbb
loopne
insb
inc
jo
cmp
outsb
mov
insl
mov
mov
scas
xlat
lods
sahf
inc
stos
call
testb
lods
cmp
out
xchg
in
adc
pop
cmc
or
leave
pop
mov
ja
lds
inc
mov
adc
enter
loop
cmp
fcoms
add
cmp
mov
fadd
scas
cmp
inc
mov
stos
push
inc
loop
aaa
enter
mov
add
dec
fs
add
insl
sub
mov
dec
dec
repnz
aam
or
fisttps
mov
dec
sbb
aad
ds
adc
dec
js
push
mov
sbb
add
mov
scas
lahf
pop
push
pushf
sbbl
insl
xor
shll
cs
decb
mov
mov
mov
das
adc
notb
arpl
out
out
hlt
outsb
cli
fsubrl
sub
jle
lahf
cmp
je
pop
lock
cmp
mov
je
pop
scas
push
cmp
imul
jl
jg
and
cmp
lahf
leave
push
jge
dec
stos
mov
pusha
mov
sbb
push
shlb
leave
push
sbb
repnz
xchg
jne
ss
stos
xchg
dec
xchg
fldt
dec
dec
leave
pushf
push
cmpsb
lds
mov
xchg
fsubrl
imul
stc
dec
daa
addr16
sbb
mov
pop
out
fstpl
inc
mov
fisttps
cmc
mov
insb
out
movsb
push
sub
aad
out
sub
mov
mov
push
dec
popa
fbld
cmp
cmp
in
sbb
xchg
mov
and
mov
mov
clc
arpl
js
pop
test
inc
mov
ss
cmpsb
adc
hlt
mov
leave
add
imul
mov
daa
cmc
std
sbb
cmp
add
enter
lret
mov
stos
stc
mov
jno
add
push
addb
cs
push
movsl
sbb
push
testb
inc
xor
sbb
push
xor
sub
aaa
mov
jnp
mov
xchg
mov
cwtl
or
xor
packuswb
in
mov
pop
xor
cmp
adc
adcb
xor
scas
repnz
hlt
dec
jmp
sub
movsl
and
in
jb
lods
cmpsb
test
rcr
lds
ror
adc
mov
in
pop
scas
stos
xor
lahf
clc
push
mov
imul
aaa
dec
dec
addr16
daa
sbb
mov
mov
ja
iret
lea
add
push
pop
cmp
psubq
mov
ljmp
je
adc
fmull
fdivrp
call
out
movsb
stos
or
dec
or
arpl
sbb
das
push
popa
push
int3
pop
push
pusha
js
out
test
das
mov
imul
lcall
stos
mov
aas
out
jge
ficoms
cmp
test
mov
rsqrtps
bswap
outsb
xchg
xchg
pop
popa
out
cmc
jp
sub
test
mov
add
insl
adc
dec
sub
pop
dec
push
call
ljmp
or
push
sti
scas
sub
mov
jle
ds
xchg
inc
cmpsb
leave
xchg
lock
pop
aas
dec
filds
shlb
mov
rcr
dec
lahf
lea
ret
popa
pop
pop
cld
bound
xbegin
inc
jo
adc
scas
repz
and
rcrl
inc
out
sub
mov
sbb
into
and
push
fdivs
pop
cmp
sbb
dec
mov
dec
cld
in
enter
cmp
rcrb
or
mov
sub
pop
add
cmc
mov
adc
and
add
pop
push
dec
inc
inc
push
mov
sub
lea
lods
sbb
mov
push
cmp
frstor
sbb
push
push
dec
mov
shll
leave
jae
inc
cmc
jg
push
out
cld
push
xlat
mov
rcll
aam
mov
cltd
mov
sub
dec
mov
cld
jg
push
xor
ret
sub
mov
or
sbb
out
lock
dec
bound
adc
and
xchg
mov
sahf
pop
out
inc
mov
or
inc
test
ret
or
add
push
pusha
lret
lea
push
sbb
mov
sbb
push
sti
shrl
outsb
popf
push
daa
or
dec
add
and
cmc
fsubp
fs
dec
out
iret
jg
aad
xlat
push
fldl2t
sbb
mov
ficompl
es
adc
out
xchg
sbb
xchg
sbb
dec
sub
mov
orb
inc
es
insl
iret
aas
or
jl
cwtl
ds
xchg
lods
jne
js
popf
mov
jbe
inc
idivl
pushf
push
dec
sbb
inc
jbe
in
je
push
je
pop
lret
mov
fisttpll
push
mov
fmulp
dec
adc
inc
sbb
test
lret
xor
mov
adc
sub
in
or
and
or
aam
sbb
lret
pop
mov
pushf
jge
and
xor
ret
adc
sti
aas
outsb
xor
jae
mov
clc
add
mov
loop
aas
push
into
and
mov
xchg
sbb
insb
sti
cmp
xor
mov
aaa
cmp
imul
adcl
stos
add
ficompl
sbb
into
sub
stc
mov
sbb
adc
adc
arpl
icebp
insb
clc
std
movsl
sbb
es
dec
mov
sub
stos
outsb
outsb
mov
fildl
rcr
mov
mov
fcomps
into
mov
xor
jno
in
in
rorb
dec
inc
mov
out
pop
jl
and
shrb
rcll
sub
call
add
ret
xor
test
dec
mov
pop
xor
add
fsub
xchg
adc
cmp
in
sbb
pop
nop
dec
pushf
inc
cmp
mov
sub
in
fsubp
int
mov
mov
dec
dec
cmpsl
addb
lea
jnp
insl
add
mov
mov
fimull
orl
int3
push
out
push
shll
mov
push
cld
cmp
dec
loope
lret
xchg
push
sub
jge
movsl
cs
rcl
and
xor
lahf
push
out
pop
jne
xchg
adc
push
loop
sbb
out
xchg
sahf
xchg
clc
loope
or
jo
lahf
xor
lahf
and
negl
shrl
clc
adc
pop
pop
inc
push
or
enter
in
sbb
gs
es
test
add
cmp
push
push
stos
movb
rcrl
dec
fs
shlb
outsb
insl
cmp
iret
mov
enter
and
test
out
mov
clc
mov
imul
out
and
dec
adc
out
aaa
push
call
in
in
pop
pop
add
lods
rorb
test
jb
in
and
push
mov
scas
or
scas
daa
sbb
cwtl
jbe
sbb
mov
xorl
lods
fldcw
jmp
jnp
test
addb
rol
je
popa
xchg
in
sti
mov
mov
mov
ss
xchg
aad
cli
imul
pop
or
adc
fistps
mov
sbb
jecxz
jecxz
add
stc
bound
or
sbb
inc
pop
or
aas
cmpsl
faddl
stos
ror
cmp
cmpsl
jns
insb
inc
arpl
fstl
leave
test
aad
hlt
pop
cli
pusha
out
cld
subb
mov
cmp
pop
mov
sub
leave
fwait
negb
or
subl
lock
mov
sbb
xchg
mov
cmp
mov
xor
fstl
add
pusha
mov
or
movsl
outsl
xchg
loop
movsl
insl
rolb
dec
jne
mov
add
arpl
pushf
dec
or
jl
add
enter
xor
movsl
call
inc
mov
and
and
mov
xchg
test
inc
int3
std
mov
and
iret
je
or
mov
pop
loopne
xor
js
or
popf
popa
xor
xlat
outsb
push
jecxz
fadds
inc
lea
sub
mov
sbb
mov
and
xchg
pop
mov
push
xchg
add
int3
push
or
jmp
mov
or
int
loopne
pop
jl
call
ljmp
sahf
jp
movsl
lea
xor
lret
pop
fmull
ret
xorl
pop
jle
jns
jo
jbe
fsts
cltd
add
mov
ljmp
mov
xor
sub
mov
sub
ljmp
sub
int
popa
icebp
pushl
ret
jmp
jmp
stos
xchg
outsb
mulb
jns
sub
xor
push
test
mov
and
push
adc
cmp
fs
clc
mov
fisttpll
dec
scas
adc
mov
rcrb
push
dec
rolb
push
sub
mov
inc
xor
or
pusha
div
pop
mov
jle
fisttps
sub
std
ss
xchg
imul
out
and
inc
xchg
mov
arpl
jnp
test
int
mov
loop
pop
xor
mov
cmp
clc
mov
dec
cmp
xor
mov
nop
loop
cmp
pop
rcrl
add
cltd
cmp
and
jnp
add
clc
ljmp
loop
pushf
imul
pushf
std
pushf
mov
lds
ret
xlat
push
call
add
jp
gs
cli
jle
ss
add
xchg
add
mov
xchg
lret
outsb
dec
mov
fnsetpm(287
pop
jbe
adc
add
nop
cli
into
cmpsl
je
xchg
flds
pop
adcb
idivl
add
add
rclb
xchg
stos
or
push
jo
add
xor
dec
push
mov
loopne
mov
pop
int
jnp
nop
jge
mov
mov
sub
fldenv
pop
cwtl
ja
pop
push
rorb
mov
inc
lods
rorl
repz
cmovb
mov
sbb
and
nop
mov
xchg
adc
or
data16
gs
adc
push
mov
jecxz
and
repz
mov
sub
lds
enter
inc
into
pop
xchg
push
inc
lahf
xlat
xchg
shl
ficoms
add
ret
cmpsb
out
or
cli
imul
jb
mov
pop
pop
push
enter
jae
dec
mov
int3
loop
nop
sbb
ffree
iret
ljmp
add
lock
sub
pop
lret
test
lcall
or
sarl
cmc
cmpsb
std
push
aas
cmp
and
ljmp
lock
shlb
pushf
pop
mov
xchg
pop
cmpsl
lods
cmp
nop
outsl
subb
dec
mov
mov
stos
adc
sahf
push
loope
mov
test
jmp
imul
int
repz
xchg
inc
xchg
xchg
pop
adc
aas
imulb
stc
push
pop
push
popf
mov
or
sar
pop
cwtl
or
ljmp
hlt
andb
mov
sahf
mov
repz
cltd
inc
ret
xor
out
dec
lea
mov
es
cmp
adc
or
push
mov
jbe
dec
test
repz
push
cmpl
inc
orl
inc
lea
sub
cmp
sub
xchg
dec
xchg
or
sti
adc
aaa
jb
sbb
insb
in
cltd
mov
jns
inc
sbb
loopne
jne
xchg
xchg
cwtl
es
adc
cltd
negl
xchg
gs
jbe
daa
pop
mov
leave
daa
add
push
xchg
xor
out
out
mov
xchg
adc
xor
out
lods
pop
popa
insl
adc
xchg
dec
sbb
in
stc
fadd
test
lahf
mov
jle
sbb
inc
lock
inc
or
bound
movsb
scas
push
pop
mov
pop
xchg
out
mov
xchg
or
pusha
cmp
js
ss
stos
mov
sbb
pop
mov
insl
xor
inc
cmpsb
push
mov
or
adc
xor
mov
icebp
cld
cli
test
sarb
lods
out
inc
or
sti
xchg
pop
pop
pop
fnstcw
push
fstl
loope
cmp
push
lahf
pop
pop
mov
out
mov
add
mov
loop
sub
cmp
out
jb
movsb
mov
addb
ljmp
mov
xor
sbb
stc
rolb
fcomip
mov
sub
daa
jae
sahf
out
fsts
push
addr16
xor
popa
gs
and
jbe
insw
xchg
cmp
and
daa
movsb
inc
int3
cmp
sub
pusha
pop
ret
xchg
adc
mov
push
push
jae
pop
cltd
stos
int
add
jo
sub
shll
fwait
cltd
sub
fdivl
imulb
popa
loop
aad
stc
lods
inc
and
xchg
dec
xor
adc
shl
sarb
test
nop
or
add
fidivrs
add
dec
dec
pop
xchg
push
pop
add
inc
jmp
adc
mov
hlt
arpl
leave
popa
clc
insl
insb
push
bnd
mov
aas
lret
or
jnp
popa
inc
pop
cmpl
ds
adc
or
cmc
sub
mov
out
ret
into
mov
jge
pusha
outsb
sahf
dec
push
test
fnstcw
fcmovnb
fists
cmc
movsl
pusha
cli
adc
inc
lahf
sub
xchg
jmp
inc
jg
ja
xor
adc
lret
fidivs
das
mov
cmpl
sbb
mov
ljmp
fwait
mov
ds
loopne
cmp
cli
inc
jno
mov
popa
movsb
dec
mov
pop
cmp
fistpll
sbb
int3
je
lcall
test
dec
jp
jno
out
lock
or
into
push
aas
pop
sahf
filds
mov
cmpsl
lahf
cmpsl
clc
sbb
les
mov
mov
idivl
add
cltd
mov
xchg
pop
adc
test
fimuls
in
xchg
sbb
ljmp
int
or
mov
sub
sahf
mov
add
imul
movsb
xchg
in
outsl
xchg
movsl
push
test
adc
cwtl
and
mov
ja
dec
imul
adc
push
cwtl
sahf
sbb
lock
dec
mov
pop
jmp
lods
push
cmp
jae
divb
pop
xor
shlb
jno
or
loopne
xchg
xor
mov
cs
in
mov
sbb
dec
adc
stc
sub
xchg
dec
mov
repnz
mov
pop
into
fs
push
sbb
fxtract
fimuls
pop
push
pusha
cmp
in
xchg
les
popf
sub
mov
test
jge
xlat
or
rol
sti
jns
sbbb
popf
add
popf
push
adc
push
aam
mov
std
xchg
and
xchg
xor
mov
pop
push
jmp
mov
mov
xchg
sahf
push
jge
mov
cwtl
sbb
mov
inc
jl
or
cld
dec
cmp
push
mov
dec
cmp
cmc
xchg
mov
out
addb
mov
mov
mov
cmp
or
addb
mov
add
inc
test
adc
xchg
mov
cmp
fildll
stos
fwait
pop
add
cmp
mov
push
clc
push
scas
enter
in
push
mov
cmpsb
in
test
mov
pop
fbstp
rol
push
xchg
daa
dec
stos
jne
vpaddd
pop
jmp
stos
jo
std
repz
out
mov
loopne
or
dec
mov
test
add
mov
fs
fisttpll
or
adc
fs
lods
jno
cmp
or
push
fldcw
out
xchg
pop
mov
inc
aam
pop
sti
out
jns
lods
outsl
bound
repnz
ljmp
in
jbe
cmp
into
imul
loope
xlat
popf
iret
cwtl
test
cmp
std
shr
lahf
ja
in
pop
insl
popf
adc
out
fsubrs
cwtl
mov
push
push
mov
xchg
int
stc
imul
xchg
push
movsl
fnsave
insb
and
sbb
jbe
dec
jno
mov
clc
lock
jnp
loop
mov
or
out
lods
jb
add
xor
sub
sysenter
sbb
imul
inc
fucomp
cmp
jnp
xlat
jns
jmp
lcall
or
lods
sbbb
mov
pop
cmc
jl
nop
dec
inc
incb
pop
sub
cmpsb
jmp
jecxz
cld
imul
xor
pusha
mov
add
jle
xchg
js
mov
or
cmp
jle
and
adcb
outsb
jns
or
lock
mov
adc
add
xcrypt-cfb
cmpsl
xlat
loopne
test
dec
jg
jmp
insl
gs
pushw
mov
in
arpl
lock
call
xchg
jb
add
xchg
icebp
cmp
mov
movsl
fildl
ret
or
jns
aas
pushf
mov
out
add
std
mov
xchg
or
loopne
or
sti
arpl
int3
and
aam
lret
repnz
pushf
loope
inc
popa
and
cld
scas
movsb
add
jns
flds
or
cld
pop
push
pop
jge
stos
rorl
push
popa
mov
mov
adc
mov
frstor
mov
stc
test
pushl
test
xchg
bound
cli
adc
insb
loop
das
inc
cmpsb
jnp
in
jmp
push
mov
mov
mov
mov
jg
and
xor
cmc
xor
xlat
inc
or
mov
or
mov
mov
rcrl
loop
dec
ds
je
addl
ret
mov
or
lea
cltd
fwait
je
inc
enter
push
mov
dec
pushf
inc
jg
in
loopne
sbb
xor
scas
gs
pop
lret
mov
adc
aaa
test
push
arpl
rcrl
adc
dec
stos
lods
xor
jecxz
icebp
imul
inc
mov
stc
mov
dec
push
in
imul
jp
jns
dec
andl
inc
in
pop
lds
gs
mov
faddl
cmp
inc
push
insb
gs
push
cmp
adcl
pop
and
jns
sbb
push
into
jnp
sbbb
fisttpll
int3
xor
sbb
xor
push
jbe
aad
push
jns
sbb
inc
or
orl
jb
insl
or
dec
adc
fldl
out
or
in
mov
hlt
mov
cmp
inc
pusha
adc
into
sbb
mov
ret
repz
fmul
mov
dec
mov
dec
xchg
daa
lds
movsl
dec
loop
and
scas
aas
push
into
cmp
fwait
test
pop
cmp
popa
inc
add
sbb
push
pop
sub
pop
sbb
arpl
pop
jae
xchg
and
pop
insl
enter
sub
or
sub
and
and
and
std
ret
mull
inc
adc
push
jp
push
inc
lods
cmp
jno
adc
cs
pop
mov
jo
lods
out
sbb
add
pop
inc
cmp
mov
mov
sbb
fisubl
push
ss
cli
mov
test
inc
insb
jecxz
and
xchg
mov
dec
sbb
mov
dec
test
xchg
jmp
aad
xlat
cmpsl
inc
xchg
mov
fchs
push
sub
icebp
xchg
lahf
add
jmp
in
neg
sub
f2xm1
addr16
aaa
movsl
hlt
push
inc
ret
aad
jbe
cli
lods
sbb
data16
xor
mov
dec
inc
cld
xchg
lds
std
push
popf
je
out
mov
popf
jbe
shl
jnp
mov
and
push
outsb
push
scas
test
ljmp
and
call
add
or
movsb
pop
mov
add
inc
outsl
rclb
add
jbe
mov
aad
pop
lcall
xchg
sub
loop
dec
push
hlt
dec
addb
or
leave
ret
repnz
sub
push
jbe
push
adc
ret
pop
adc
mov
mov
sbbl
xor
sbb
push
cs
es
ret
dec
ret
xor
gs
ret
in
push
add
mov
sti
mov
xor
dec
or
adc
mov
xchg
mov
cmp
hlt
fdivl
xchg
pop
dec
pop
int3
aad
testb
add
movsl
jp
sub
sbb
fisttpl
addr16
sbb
lock
dec
pop
loop
mov
punpckhwd
scas
insl
lcall
mov
dec
out
jnp
adc
push
or
std
stos
mov
cmp
leave
dec
jle
xchg
pop
pop
mov
sbb
jns
rcr
push
cmp
adc
xor
int3
mov
scas
xor
inc
shlb
fcom
push
repz
sbb
cmp
dec
xchg
sub
nop
js
popf
rorl
jno
pop
mov
fdivl
in
cmpsb
fsubs
shr
push
xor
mov
push
dec
xor
fsub
mov
pop
xchg
push
sub
cli
xor
mov
int
push
jl
cmp
iret
push
xchg
repz
mov
push
cmp
jbe
loop
or
jne
out
cli
sub
mov
mov
mov
xchg
xchg
lcall
mov
lea
push
xchg
addb
test
loopne
sbb
aaa
adc
popf
scas
faddl
or
xorb
je
fstpl
cmp
sub
xchg
jecxz
push
pop
and
fsubs
fistpl
scas
mov
jae
popf
xor
xchg
ret
les
hlt
cmp
incl
dec
clc
or
dec
mov
pop
mov
or
outsl
lods
cli
dec
push
mov
and
dec
fadds
cmpsb
adc
or
mov
xchg
mov
adc
jg
lahf
es
pop
in
stos
push
mov
es
aad
cmpsl
out
mov
adc
pop
sub
fcmovnb
clc
cmp
cmp
int3
sub
lcall
mov
fneni(8087
ja
pop
lahf
jl
inc
int
mov
addb
and
loope
and
aam
add
insl
scas
pop
es
test
shll
into
jge,pn
sti
lcall
loopne
ss
xor
mov
adc
jge
or
dec
je
or
dec
sub
inc
jb
js
sbb
add
sub
adc
test
inc
fwait
cld
jecxz
jb
pop
add
sub
inc
and
sbb
fucomip
subl
mov
pop
stos
adc
mov
or
adc
gs
mov
jecxz
inc
popf
daa
aaa
ret
rolb
pushf
lret
dec
inc
out
or
insb
in
scas
sbb
mov
mov
mov
mov
test
fistpl
xchg
or
loop
jle
jle
fidivs
nop
in
sub
pop
jmp
jns
not
fidivrl
ficomps
cltd
int3
nop
test
rcr
loop
xchg
mov
incl
mov
in
mov
clc
mov
out
rorl
add
sti
das
mov
lods
and
insl
jne
loop
jae
mov
mov
xchg
jl
mov
xor
xor
mov
das
xor
dec
imul
addb
ficomps
lea
es
or
mov
mov
aam
cmp
push
pop
int3
add
cmpsl
cmp
jae
rol
pop
push
sbb
call
bound
xor
ficoml
jne
adc
cmp
ss
iret
imul
push
mov
pshufw
and
inc
call
inc
jnp
and
andl
cld
jae
mov
sub
aad
arpl
shrd
xor
mov
ret
sub
push
and
push
adc
movsl
addb
sbb
inc
cmp
jno
mov
lds
roll
dec
dec
cmpsb
jecxz
mov
aaa
add
inc
fldl
lcall
out
add
rorb
test
sbb
mov
sub
inc
sbb
and
mov
xchg
imul
xchg
and
or
mov
mov
popf
sbb
sbb
and
ljmp
dec
mov
xor
cmp
xor
dec
call
repnz
and
xchg
lcall
jecxz
and
pop
bound
mov
lds
xlat
push
enter
mov
loopne
xor
ret
fcoml
dec
lret
sub
imul
insb
lret
mov
dec
adc
mov
mov
push
hlt
movsl
sbb
sbb
stc
mov
jp
cmp
lret
cmp
sti
cmp
lahf
out
in
repnz
out
sbb
pop
aaa
adc
cmpsl
xor
bound
movsl
stos
mov
dec
pop
push
int3
popf
dec
lret
or
cld
loop
jo
and
xor
pushf
or
sbb
mov
dec
stos
ret
mov
imul
mov
xchg
rolb
dec
int3
popa
and
das
pop
mull
outsl
lret
aaa
scas
sub
bound
movsl
or
divl
iret
xchg
pop
fnstcw
shr
shrb
cmp
mov
int
addl
mov
add
push
pushf
movsl
mov
sub
sbb
subb
sarb
inc
mov
pop
fdivp
sbb
stos
enter
mov
repnz
jecxz
sbb
pop
sbb
pusha
cmp
mov
addl
sarl
xor
sub
add
mov
rcrb
or
into
cmp
sbb
cmp
mov
inc
stc
jle
ss
mov
mov
xlat
pop
sub
fstpt
je
repz
ret
push
jae
int3
ds
fsubrl
int3
mov
scas
or
shrl
pop
test
inc
mov
sbb
je
mov
jge
std
pop
pop
push
pop
loope
or
out
push
xchg
and
scas
xlat
cmp
imul
loop
cmp
mov
mov
push
xchg
mov
int3
xor
call
movsl
je
and
sbb
push
scas
shlb
rcr
xor
mov
and
push
clc
mov
bound
sti
iret
or
or
scas
inc
mov
add
and
fwait
push
hlt
jo
pop
test
movsb
gs
imul
mov
push
mov
mov
movsl
pop
out
push
loopne
data16
adc
mov
xor
fs
stos
mov
add
pop
dec
pop
cmp
pop
aaa
jne
leave
push
xchg
and
sbb
pop
push
data16
mov
push
pop
and
jmp
xchg
dec
push
and
jmp
adc
fcomp
push
sbb
arpl
mov
lret
xchg
icebp
ret
fsubs
inc
pop
adc
mov
and
lcall
jo
sbb
mov
and
cmpsb
dec
lret
stos
pop
iret
outsl
jl
into
jne
lea
cmpsl
rcr
push
loope
inc
and
lea
adc
cmp
xlat
rcll
xor
fdivrl
es
loopne
push
sahf
add
repnz
mov
test
inc
xchg
xchg
js
xlat
and
jae
hlt
or
xchg
aam
jns
cltd
mov
shr
out
addr16
sbb
add
ret
addl
iret
pop
sub
xlat
std
jo
jecxz
push
xchg
jno
pop
jne
pmaxub
push
adc
pop
gs
and
insb
mov
dec
pop
pop
iret
cwtl
jmp
mov
mov
fdiv
jne
mov
pop
cs
pop
ljmp
push
mov
jg
or
mov
or
je
idivb
pop
sub
lcall
repz
dec
and
add
sbb
or
shrb
jge,pn
sub
cli
xchg
add
pop
mov
fld
outsl
push
xchg
jl
jne
or
movsl
stos
test
mov
sbb
int
mov
mov
mov
pop
sbb
jecxz
fdivl
push
in
popa
fnstenv
mov
int
clc
arpl
push
xor
push
aam
mov
cmp
subb
push
iret
xchg
cmp
adc
add
mov
adc
lods
rcrl
lds
inc
pop
push
dec
jb
cmp
mov
mov
icebp
sbb
push
cmp
adc
enter
cmp
movsb
xor
inc
fnstenv
bound
jbe
cmp
pop
sub
insb
daa
cmp
lahf
lock
jg
popf
addr16
loope
push
testb
dec
mov
dec
in
inc
adc
sbb
push
aad
orl
leavew
mov
scas
push
icebp
jmp
mov
xorl
cli
lock
and
sub
cmp
pushl
mov
ja
testb
xchg
stos
jb
jl
dec
pop
mov
sahf
shl
lock
xor
fbstp
je
jae
add
or
inc
jl
adc
cmp
mov
or
loopne,pn
dec
insl
js
pop
add
lock
inc
jnp
mov
jp
inc
mov
push
repnz
or
add
and
xchg
lea
fistl
adc
push
pop
pop
pop
jmp
add
stos
inc
stos
out
jne
mov
sbb
xchg
xchg
dec
adc
mov
aaa
pop
insb
mov
mov
pop
push
add
ficoms
shlb
pop
nop
div
cmpsl
mov
loop
jg
rcrl
mov
and
mov
test
mov
mov
add
jbe
ja
lods
movsl
pushf
xchg
adc
pop
push
jo
jl
adc
dec
jmp
or
int
outsl
pop
or
out
push
test
pop
call
loopne
outsl
adc
cmp
sbb
inc
cltd
adc
push
ss
scas
pop
push
adcl
loope
test
popa
aas
cmp
fcoms
insl
fstps
jo
rclb
cmp
lods
jmp
add
add
dec
pop
clc
cmp
movsb
jg
jp
scas
or
sub
lcall
adc
sbb
jne
ljmp
fisttps
cmp
mov
inc
stc
test
pusha
scas
xchg
mov
aad
or
cli
std
mov
pusha
in
clc
std
jb
sub
stos
bound
push
mov
xor
sbb
inc
mov
sub
fists
jne
pop
sbb
cmp
inc
clc
lds
clc
adc
pop
das
rcr
in
dec
cltd
mov
fidivrl
sbb
jl
in
jle
bound
pusha
pop
outsl
push
cwtl
lcall
ljmp
push
sbb
pop
jle
scas
stos
scas
inc
je
enter
fsubs
shrl
jecxz
dec
push
mov
cmp
testb
and
scas
jge
push
adc
insl
mov
dec
fnstcw
iret
dec
test
das
fsubrl
add
dec
xchg
movsb
mov
test
imul
dec
das
das
lods
popf
cs
cs
push
test
subl
repz
sub
mov
jl
insb
popa
jne
pushf
hlt
xchg
faddp
idivb
xor
loop
jnp
xchg
dec
push
arpl
mov
aaa
xchg
rcrb
mov
leave
push
movl
push
sub
fistl
push
adc
sub
lret
add
add
addr16
dec
inc
mov
repnz
ficomps
sub
xchg
mulb
mov
je
add
xchg
out
xchg
adc
int
fcomi
loop
fbstp
pop
cs
sbb
and
daa
lods
imul
pop
add
cmc
jmp
inc
jb
loop
jo
scas
sbb
lret
fs
lock
mov
sub
add
push
pop
jno
jns
jecxz
mov
sub
arpl
xor
or
movsl
sub
std
int
jnp
loope
xorl
adc
adc
mov
loopne
mov
movsb
stc
call
negb
and
cwtl
popa
fcoml
push
sti
pop
ret
sbb
jecxz
aam
rolb
cmp
jmp
in
je
mov
or
xchg
outsl
out
pcmpeqw
movhps
dec
dec
imul
xor
sub
or
xorb
or
into
xor
test
ds
es
push
out
mov
pop
mov
scas
movsl
mov
jecxz
je
mov
mov
sub
shll
into
mov
pop
mov
ss
xor
push
mov
ret
jns
mov
leave
cld
cmpsb
cmp
ds
pop
je
pop
jbe
sub
mov
sar
jne
hlt
cmp
sub
repz
jb
mov
repnz
bswap
dec
dec
shlb
cmp
jge
and
sbb
jmp
out
fwait
pop
jp
repz
out
mov
imul
out
cmpb
mov
popf
or
jg
cmpsb
mov
stos
nop
mov
test
gs
pop
aam
dec
jb
dec
lods
pop
bound
adc
sub
cwtl
test
push
sub
neg
shl
or
test
mov
repz
dec
dec
nop
sbb
push
divl
sbb
lahf
lds
jmp
jge
fstpt
xchg
mov
fdivl
xlat
push
jecxz
dec
push
sbb
xchg
add
cmp
lcall
and
jge
fnstcw
cmp
sbb
shll
cld
imul
movb
or
shlb
repnz
inc
outsb
push
fildl
mov
nop
pusha
rclb
dec
jae
data16
cs
and
addb
outsb
dec
mov
movsl
cmp
cmp
mov
sbb
lcall
fcmovu
mov
push
ficompl
int
dec
div
or
add
dec
adcl
inc
inc
pop
mov
xchg
cmc
dec
mov
sub
pop
cmp
aam
in
mov
or
enter
movsl
xlat
test
push
cwtl
xchg
rcrb
fs
jge
adc
out
adc
mov
mov
mov
inc
push
push
in
mov
mov
clc
mov
fs
repnz
jle
xor
aas
xor
xchg
xchg
stc
adc
jnp
xchg
xor
mov
fwait
push
imul
push
xchg
push
inc
dec
dec
enter
mov
ja
jmp
push
sahf
sahf
in
mov
jcxz
dec
mov
fbld
pop
sbb
or
daa
mov
jae
mov
jae
stos
out
pop
into
pop
pop
gs
mov
xchg
js
pop
faddl
lock
in
ja
sbb
repnz
in
rorl
inc
xor
cltd
cmpsl
shll
add
fbstp
add
pop
fwait
add
ss
push
int
insl
iret
dec
rclb
fists
cmp
cmc
movsb
std
test
mov
and
popf
jns
lcall
andl
out
rolb
pop
xor
pop
jmp
dec
mov
sahf
push
push
movsl
aad
or
adc
testl
bound
mov
and
jnp
lcall
cltd
inc
sub
sbb
xlat
insb
pop
mov
cmc
inc
cmpsb
cmp
jmp
and
lcall
das
imul
sarb
fdivp
adc
fdivrs
add
pop
push
sbb
adc
push
inc
xor
cli
xchg
rorl
ss
mov
mov
aas
inc
mov
aad
add
or
cmp
and
mov
add
int3
add
jb
or
dec
mov
cld
pop
cmp
icebp
xchg
dec
cld
repz
lret
and
dec
jo
in
sar
dec
call
mov
adc
incb
addl
bound
icebp
aam
repz
add
addl
es
ss
imul
pop
dec
imul
shr
mov
xchg
daa
sbb
sub
add
cmp
gs
pop
loope
adcl
aas
arpl
ds
sub
addb
aas
pop
jg
mov
and
leave
cs
test
fimull
scas
stos
ds
in
mov
cmpb
int3
dec
dec
xchg
mov
in
fs
sbb
shll
add
cmp
mov
iret
xor
cmp
mov
push
fcmovb
das
lcall
sub
popf
jge
add
scas
xchg
and
lea
and
data16
ljmp
in
and
sbbb
xchg
stc
rcll
outsb
push
jg
and
mov
push
scas
mov
into
or
les
dec
scas
sbb
mov
scas
jne
fwait
sub
test
dec
in
decb
sbb
daa
popf
stos
popf
mov
testb
and
pop
lret
jle
lcall
cmpsl
cld
in
das
fwait
test
dec
xchg
clc
out
nop
jmp
adc
jg
push
xor
mov
mov
sub
test
sbb
jmp
pcmpeqd
and
mov
push
cmpsb
insl
jg
sbb
push
xlat
pop
lcall
cmp
push
jg
or
cmp
add
imul
clc
ljmp
jo
insl
and
jmp
inc
iret
sub
aaa
decb
jb
mov
dec
popa
inc
aad
int3
add
repz
insl
ret
cltd
popl
mov
xor
out
fimuls
mov
mov
add
add
add
clc
fsub
mov
pusha
adc
iret
sbb
add
dec
xchg
push
shr
adc
leave
mov
cmc
or
repz
sub
sub
push
push
comiss
fimull
mov
mov
mov
cmp
je
mov
jle
jo
and
mov
jnp
adc
mulb
andb
push
mov
aas
iret
xchg
jne
insl
in
inc
xchg
mov
js
cli
adc
out
or
xchg
fwait
in
mov
scas
fnsave
adc
pop
or
xor
sahf
adc
and
and
pop
jne
fcomip
mov
push
mov
push
out
pop
sarl
fldt
and
loopne
popf
jns
movsl
fldcw
mov
mov
dec
imul
adc
jge
fcompl
loopne
or
cmp
sahf
dec
pop
pop
outsl
pushf
nop
dec
addr16
stos
push
mov
sbb
out
mov
jae
movsl
or
mov
insl
or
faddl
out
xor
or
lock
jl
lahf
mov
cs
pop
and
lods
lea
fs
jmp
imul
ss
sub
inc
je
rcr
or
jl
inc
jb
mov
pop
mov
loop
jo
arpl
mov
jle
test
mov
adc
mov
mov
mov
lods
lret
or
jae
mov
stc
aad
mov
loope
rorl
pop
pop
sar
in
sbb
popf
cmc
pop
in
test
scas
inc
in
into
xorl
hlt
add
push
xchg
in
or
rol
push
xchg
xchg
cmp
pop
mov
mov
jnp
gs
adc
ret
add
out
mov
mov
out
dec
idivl
pop
jmp
dec
out
pop
cli
lods
sub
call
incl
push
mov
lods
xor
js
pop
lret
fsubs
lods
xor
out
lcall
push
das
sbb
xchg
push
and
fildll
js
pushf
push
popf
pop
lret
pop
aas
inc
or
shll
imul
std
push
aam
imul
push
push
hlt
sub
xchg
mov
dec
sub
jle
fcoml
test
mov
insb
clc
pop
xor
pop
xor
movsb
loop
mov
sbb
mov
xchg
xor
and
in
cmp
sbbl
sbb
in
into
dec
aam
jp
cmp
test
and
push
out
fcoml
or
cmp
adc
xor
cld
sbb
mov
mov
add
pop
icebp
xchg
rcll
test
xor
ja
pushf
mov
gs
out
mov
xchg
sbb
cmp
js
stos
shll
popa
cli
into
push
sbb
adc
dec
sbb
jbe
inc
test
dec
les
dec
cmp
in
test
sbb
mov
fsubrl
push
xor
ljmp
repz
push
les
sub
or
lds
test
push
jp
scas
jne
or
cmp
and
inc
stos
or
mov
xchg
sbb
lds
fildll
scas
testl
push
push
xchg
test
lods
sbb
lods
out
mov
cmpsb
stc
popa
orl
mov
mov
ja
lods
and
shrb
mov
arpl
lret
outsl
lcall
jmp
xchg
fnsave
icebp
arpl
imul
data16
mov
icebp
dec
das
mov
pop
jmp
or
jle
ljmp
dec
pop
repz
inc
or
gs
rcrl
and
dec
push
sti
xchg
sbb
add
punpckldq
mov
pop
or
push
mov
mov
jo
add
loope
daa
loope
in
dec
fnstcw
loope
jae
xchg
lret
ret
ret
dec
int
jne
sar
loop
inc
in
ss
jb
jmp
clc
mov
pop
pop
inc
cmp
fnstcw
dec
sbb
dec
mov
daa
lock
clc
pop
std
mov
adc
clc
dec
pop
std
popa
ret
outsl
lret
or
jne
stc
mov
mov
adc
push
pop
les
jg
push
push
pop
stos
insb
insl
mov
out
mov
nop
int
mov
gs
jae
es
xchg
daa
inc
add
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
cmp
mov
test
jecxz
xor
mov
cltd
mov
add
jb
testl
xchg
push
push
xlat
or
sahf
pop
je
out
push
fistps
inc
or
pop
mov
push
in
int3
repz
adc
dec
and
fsts
andb
mov
arpl
sub
and
repnz
das
orb
test
cltd
sti
outsl
ds
lock
outsb
mov
movsb
int3
pusha
jmp
jge
dec
lock
popf
popf
pushf
mov
out
js
stos
inc
add
push
inc
lcall
mov
ljmp
pop
fldl
lret
repz
test
les
push
out
cmpsb
mov
cmp
adc
lods
mov
jmp
mov
in
fisttpll
cs
out
dec
aas
dec
test
adc
cltd
lock
addr16
xchg
mov
jge
sarl
xchg
mov
push
lcall
push
sbb
sbb
cmp
xchg
movsb
adcb
imul
lea
push
out
adc
cmp
mov
pop
sub
inc
dec
out
jecxz
je
imul
push
xor
jns
dec
in
mov
inc
movsb
or
adc
aaa
aas
sbb
fs
lret
bnd
mov
sbb
call
js
jle
idivl
icebp
scas
test
dec
rolb
fidivl
mov
sbb
lea
in
jmp
addb
dec
or
xchg
push
add
sti
pop
xlat
and
pop
push
lods
mov
es
xchg
in
insl
xchg
sub
cmp
call
xchg
leave
and
adc
movsb
pop
les
xlat
in
jo
push
pop
mov
stos
xchg
mov
je
repz
push
pop
dec
lret
mov
fs
sub
lret
inc
cltd
jns
cld
aam
dec
adc
cmp
xchg
mov
das
cmp
jo
aam
mov
mov
mov
lcall
enter
jae
je
lds
call
stc
or
in
dec
sahf
add
xchg
add
cwtl
ret
dec
data16
insl
jle
adc
ds
mov
and
adc
push
decl
out
lods
js
cli
push
jo
dec
or
dec
sub
lds
mov
adc
leave
mov
test
in
sbb
and
ljmp
in
imul
fimull
ss
insb
loope
in
push
in
test
cmp
bound
sub
jp
iret
or
mov
sbb
popf
clc
mov
pop
jno
pop
or
aad
inc
mov
insb
dec
mov
jge
mov
sbb
mov
inc
pop
icebp
int
mov
jp
lea
xchg
sub
dec
repnz
lock
xchg
cltd
sti
push
daa
mov
mov
fcoms
or
ja
pop
pop
jmp
cmp
cmp
inc
lcall
and
addr16
insb
and
inc
aam
adc
pop
enter
cltd
mov
mov
and
sub
rcr
rclb
dec
movsl
sub
ljmp
orb
and
fists
push
test
adc
cmp
adc
mov
lea
and
lods
xor
mov
mov
xor
and
and
and
aad
adc
push
insl
jbe
dec
push
pop
mov
test
or
rdmsr
movsl
xlat
cmc
movntps
outsl
cmp
popa
bound
xchg
sub
out
dec
sbb
cwtl
icebp
aas
xlat
add
imul
out
and
sub
mov
push
add
xchg
push
inc
lahf
adc
fiadds
mul
fildl
xlat
pop
xchg
cmp
push
loopne
xchg
mov
rol
lods
lahf
std
addl
push
enter
mov
sub
icebp
fstps
sbb
aas
daa
lds
xor
sbb
loopne
insb
inc
jo
cmp
outsb
mov
insl
mov
mov
scas
xlat
lods
sahf
inc
stos
call
testb
lods
cmp
out
xchg
in
adc
pop
cmc
or
leave
pop
mov
ja
lds
inc
mov
adc
enter
loop
cmp
fcoms
add
cmp
mov
fadd
scas
cmp
inc
mov
stos
push
inc
loop
aaa
enter
mov
add
dec
fs
add
insl
sub
mov
dec
dec
repnz
aam
or
fisttps
mov
dec
sbb
aad
ds
adc
dec
js
push
mov
sbb
add
mov
scas
lahf
pop
push
pushf
sbbl
insl
xor
shll
cs
decb
mov
mov
mov
das
adc
notb
arpl
out
out
hlt
outsb
cli
fsubrl
sub
jle
lahf
cmp
je
pop
lock
cmp
mov
je
pop
scas
push
cmp
imul
jl
jg
and
cmp
lahf
leave
push
jge
dec
stos
mov
pusha
mov
sbb
push
shlb
leave
push
sbb
repnz
xchg
jne
ss
stos
xchg
dec
xchg
fldt
dec
dec
leave
pushf
push
cmpsb
lds
mov
xchg
fsubrl
imul
stc
dec
daa
addr16
sbb
mov
pop
out
fstpl
inc
mov
fisttps
cmc
mov
insb
out
movsb
push
sub
aad
out
sub
mov
mov
push
dec
popa
fbld
cmp
cmp
in
sbb
xchg
mov
and
mov
mov
clc
arpl
js
pop
test
inc
mov
ss
cmpsb
adc
hlt
mov
leave
add
imul
mov
daa
cmc
std
sbb
cmp
add
enter
lret
mov
stos
stc
mov
jno
add
push
addb
cs
push
movsl
sbb
push
testb
inc
xor
sbb
push
xor
sub
aaa
mov
jnp
mov
xchg
mov
cwtl
or
xor
packuswb
in
mov
pop
xor
cmp
adc
adcb
xor
scas
repnz
hlt
dec
jmp
sub
movsl
and
in
jb
lods
cmpsb
test
rcr
lds
ror
adc
mov
in
pop
scas
stos
xor
lahf
clc
push
mov
imul
aaa
dec
dec
addr16
daa
sbb
mov
mov
ja
iret
lea
add
push
pop
cmp
psubq
mov
ljmp
je
adc
fmull
fdivrp
call
out
movsb
stos
or
dec
or
arpl
sbb
das
push
popa
push
int3
pop
push
pusha
js
out
test
das
mov
imul
lcall
stos
mov
aas
out
jge
ficoms
cmp
test
mov
rsqrtps
bswap
outsb
xchg
xchg
pop
popa
out
cmc
jp
sub
test
mov
add
insl
adc
dec
sub
pop
dec
push
call
ljmp
or
push
sti
scas
sub
mov
jle
ds
xchg
inc
cmpsb
leave
xchg
lock
pop
aas
dec
filds
shlb
mov
rcr
dec
lahf
lea
ret
popa
pop
pop
cld
bound
xbegin
inc
jo
adc
scas
repz
and
rcrl
inc
out
sub
mov
sbb
into
and
push
fdivs
pop
cmp
sbb
dec
mov
dec
cld
in
enter
cmp
rcrb
or
mov
sub
pop
add
cmc
mov
adc
and
add
pop
push
dec
inc
inc
push
mov
sub
lea
lods
sbb
mov
push
cmp
frstor
sbb
push
push
dec
mov
shll
leave
jae
inc
cmc
jg
push
out
cld
push
xlat
mov
rcll
aam
mov
cltd
mov
sub
dec
mov
cld
jg
push
xor
ret
sub
mov
or
sbb
out
lock
dec
bound
adc
and
xchg
mov
sahf
pop
out
inc
mov
or
inc
test
ret
or
add
push
pusha
lret
lea
push
sbb
mov
sbb
push
sti
shrl
outsb
popf
push
daa
or
dec
add
and
cmc
fsubp
fs
dec
out
iret
jg
aad
xlat
push
fldl2t
sbb
mov
ficompl
es
adc
out
xchg
sbb
xchg
sbb
dec
sub
mov
orb
inc
es
insl
iret
aas
or
jl
cwtl
ds
xchg
lods
jne
js
popf
mov
jbe
inc
idivl
pushf
push
dec
sbb
inc
jbe
in
je
push
je
pop
lret
mov
fisttpll
push
mov
fmulp
dec
adc
inc
sbb
test
lret
xor
mov
adc
sub
in
or
and
or
aam
sbb
lret
pop
mov
pushf
jge
and
xor
ret
adc
sti
aas
outsb
xor
jae
mov
clc
add
mov
loop
aas
push
into
and
mov
xchg
sbb
insb
sti
cmp
xor
mov
aaa
cmp
imul
adcl
stos
add
ficompl
sbb
into
sub
stc
mov
sbb
adc
adc
arpl
icebp
insb
clc
std
movsl
sbb
es
dec
mov
sub
stos
outsb
outsb
mov
fildl
rcr
mov
mov
fcomps
into
mov
xor
jno
in
in
rorb
dec
inc
mov
out
pop
jl
and
shrb
rcll
sub
call
add
ret
xor
test
dec
mov
pop
xor
add
fsub
xchg
adc
cmp
in
sbb
pop
nop
dec
pushf
inc
cmp
mov
sub
in
fsubp
int
mov
mov
dec
dec
cmpsl
addb
lea
jnp
insl
add
mov
mov
fimull
orl
int3
push
out
push
shll
mov
push
cld
cmp
dec
loope
lret
xchg
push
sub
jge
movsl
cs
rcl
and
xor
lahf
push
out
pop
jne
xchg
adc
push
loop
sbb
out
xchg
sahf
xchg
clc
loope
or
jo
lahf
xor
lahf
and
negl
shrl
clc
adc
pop
pop
inc
push
or
enter
in
sbb
gs
es
test
add
cmp
push
push
stos
movb
rcrl
dec
fs
shlb
outsb
insl
cmp
iret
mov
enter
and
test
out
mov
clc
mov
imul
out
and
dec
adc
out
aaa
push
call
in
in
pop
pop
add
lods
rorb
test
jb
in
and
push
mov
scas
or
scas
daa
sbb
cwtl
jbe
sbb
mov
xorl
lods
fldcw
jmp
jnp
test
addb
rol
je
popa
xchg
in
sti
mov
mov
mov
ss
xchg
aad
cli
imul
pop
or
adc
fistps
mov
sbb
jecxz
jecxz
add
stc
bound
or
sbb
inc
pop
or
aas
cmpsl
faddl
stos
ror
cmp
cmpsl
jns
insb
inc
arpl
fstl
leave
test
aad
hlt
pop
cli
pusha
out
cld
subb
mov
cmp
pop
mov
sub
leave
fwait
negb
or
subl
lock
mov
sbb
xchg
mov
cmp
mov
xor
fstl
add
pusha
mov
or
movsl
outsl
xchg
loop
movsl
insl
rolb
dec
jne
mov
add
arpl
pushf
dec
or
jl
add
enter
xor
movsl
call
inc
mov
and
and
mov
xchg
test
inc
int3
std
mov
and
iret
je
or
mov
pop
loopne
xor
js
or
popf
popa
xor
xlat
outsb
push
jecxz
fadds
inc
lea
sub
mov
sbb
mov
and
xchg
pop
mov
push
xchg
add
int3
push
or
jmp
mov
or
int
loopne
pop
jl
call
ljmp
sahf
jp
movsl
lea
xor
lret
pop
fmull
ret
xorl
pop
jle
jns
jo
jbe
fsts
cltd
add
mov
ljmp
mov
xor
sub
mov
sub
ljmp
sub
int
popa
icebp
pushl
ret
jmp
jmp
stos
xchg
outsb
mulb
jns
sub
xor
push
test
mov
and
push
adc
cmp
fs
clc
mov
fisttpll
dec
scas
adc
mov
rcrb
push
dec
rolb
push
sub
mov
inc
xor
or
pusha
div
pop
mov
jle
fisttps
sub
std
ss
xchg
imul
out
and
inc
xchg
mov
arpl
jnp
test
int
mov
loop
pop
xor
mov
cmp
clc
mov
dec
cmp
xor
mov
nop
loop
cmp
pop
rcrl
add
cltd
cmp
and
jnp
add
clc
ljmp
loop
pushf
imul
pushf
std
pushf
mov
lds
ret
xlat
push
call
add
jp
gs
cli
jle
ss
add
xchg
add
mov
xchg
lret
outsb
dec
mov
fnsetpm(287
pop
jbe
adc
add
nop
cli
into
cmpsl
je
xchg
flds
pop
adcb
idivl
add
add
rclb
xchg
stos
or
push
jo
add
xor
dec
push
mov
loopne
mov
pop
int
jnp
nop
jge
mov
mov
sub
fldenv
pop
cwtl
ja
pop
push
rorb
mov
inc
lods
rorl
repz
cmovb
mov
sbb
and
nop
mov
xchg
adc
or
data16
gs
adc
push
mov
jecxz
and
repz
mov
sub
lds
enter
inc
into
pop
xchg
push
inc
lahf
xlat
xchg
shl
ficoms
add
ret
cmpsb
out
or
cli
imul
jb
mov
pop
pop
push
enter
jae
dec
mov
int3
loop
nop
sbb
ffree
iret
ljmp
add
lock
sub
pop
lret
test
lcall
or
sarl
cmc
cmpsb
std
push
aas
cmp
and
ljmp
lock
shlb
pushf
pop
mov
xchg
pop
cmpsl
lods
cmp
nop
outsl
subb
dec
mov
mov
stos
adc
sahf
push
loope
mov
test
jmp
imul
int
repz
xchg
inc
xchg
xchg
pop
adc
aas
imulb
stc
push
pop
push
popf
mov
or
sar
pop
cwtl
or
ljmp
hlt
andb
mov
sahf
mov
repz
cltd
inc
ret
xor
out
dec
lea
mov
es
cmp
adc
or
push
mov
jbe
dec
test
repz
push
cmpl
inc
orl
inc
lea
sub
cmp
sub
xchg
dec
xchg
or
sti
adc
aaa
jb
sbb
insb
in
cltd
mov
jns
inc
sbb
loopne
jne
xchg
xchg
cwtl
es
adc
cltd
negl
xchg
gs
jbe
daa
pop
mov
leave
daa
add
push
xchg
xor
out
out
mov
xchg
adc
xor
out
lods
pop
popa
insl
adc
xchg
dec
sbb
in
stc
fadd
test
lahf
mov
jle
sbb
inc
lock
inc
or
bound
movsb
scas
push
pop
mov
pop
xchg
out
mov
xchg
or
pusha
cmp
js
ss
stos
mov
sbb
pop
mov
insl
xor
inc
cmpsb
push
mov
or
adc
xor
mov
icebp
cld
cli
test
sarb
lods
out
inc
or
sti
xchg
pop
pop
pop
fnstcw
push
fstl
loope
cmp
push
lahf
pop
pop
mov
out
mov
add
mov
loop
sub
cmp
out
jb
movsb
mov
addb
ljmp
mov
xor
sbb
stc
rolb
fcomip
mov
sub
daa
jae
sahf
out
fsts
push
addr16
xor
popa
gs
and
jbe
insw
xchg
cmp
and
daa
movsb
inc
int3
cmp
sub
pusha
pop
ret
xchg
adc
mov
push
push
jae
pop
cltd
stos
int
add
jo
sub
shll
fwait
cltd
sub
fdivl
imulb
popa
loop
aad
stc
lods
inc
and
xchg
dec
xor
adc
shl
sarb
test
nop
or
add
fidivrs
add
dec
dec
pop
xchg
push
pop
add
inc
jmp
adc
mov
hlt
arpl
leave
popa
clc
insl
insb
push
bnd
mov
aas
lret
or
jnp
popa
inc
pop
cmpl
ds
adc
or
cmc
sub
mov
out
ret
into
mov
jge
pusha
outsb
sahf
dec
push
test
fnstcw
fcmovnb
fists
cmc
movsl
pusha
cli
adc
inc
lahf
sub
xchg
jmp
inc
jg
ja
xor
adc
lret
fidivs
das
mov
cmpl
sbb
mov
ljmp
fwait
mov
ds
loopne
cmp
cli
inc
jno
mov
popa
movsb
dec
mov
pop
cmp
fistpll
sbb
int3
je
lcall
test
dec
jp
jno
out
lock
or
into
push
aas
pop
sahf
filds
mov
cmpsl
lahf
cmpsl
clc
sbb
les
mov
mov
idivl
add
cltd
mov
xchg
pop
adc
test
fimuls
in
xchg
sbb
ljmp
int
or
mov
sub
sahf
mov
add
imul
movsb
xchg
in
outsl
xchg
movsl
push
test
adc
cwtl
and
mov
ja
dec
imul
adc
push
cwtl
sahf
sbb
lock
dec
mov
pop
jmp
lods
push
cmp
jae
divb
pop
xor
shlb
jno
or
loopne
xchg
xor
mov
cs
in
mov
sbb
dec
adc
stc
sub
xchg
dec
mov
repnz
mov
pop
into
fs
push
sbb
fxtract
fimuls
pop
push
pusha
cmp
in
xchg
les
popf
sub
mov
test
jge
xlat
or
rol
sti
jns
sbbb
popf
add
popf
push
adc
push
aam
mov
std
xchg
and
xchg
xor
mov
pop
push
jmp
mov
mov
xchg
sahf
push
jge
mov
cwtl
sbb
mov
inc
jl
or
cld
dec
cmp
push
mov
dec
cmp
cmc
xchg
mov
out
addb
mov
mov
mov
cmp
or
addb
mov
add
inc
test
adc
xchg
mov
cmp
fildll
stos
fwait
pop
add
cmp
mov
push
clc
push
scas
enter
in
push
mov
cmpsb
in
test
mov
pop
fbstp
rol
push
xchg
daa
dec
stos
jne
vpaddd
pop
jmp
stos
jo
std
repz
out
mov
loopne
or
dec
mov
test
add
mov
fs
fisttpll
or
adc
fs
lods
jno
cmp
or
push
fldcw
out
xchg
pop
mov
inc
aam
pop
sti
out
jns
lods
outsl
bound
repnz
ljmp
in
jbe
cmp
into
imul
loope
xlat
popf
iret
cwtl
test
cmp
std
shr
lahf
ja
in
pop
insl
popf
adc
out
fsubrs
cwtl
mov
push
push
mov
xchg
int
stc
imul
xchg
push
movsl
fnsave
insb
and
sbb
jbe
dec
jno
mov
clc
lock
jnp
loop
mov
or
out
lods
jb
add
xor
sub
sysenter
sbb
imul
inc
fucomp
cmp
jnp
xlat
jns
jmp
lcall
or
lods
sbbb
mov
pop
cmc
jl
nop
dec
inc
incb
pop
sub
cmpsb
jmp
jecxz
cld
imul
xor
pusha
mov
add
jle
xchg
js
mov
or
cmp
jle
and
adcb
outsb
jns
or
lock
mov
adc
add
xcrypt-cfb
cmpsl
xlat
loopne
test
dec
jg
jmp
insl
gs
pushw
mov
in
arpl
lock
call
xchg
jb
add
xchg
icebp
cmp
mov
movsl
fildl
ret
or
jns
aas
pushf
mov
out
add
std
mov
xchg
or
loopne
or
sti
arpl
int3
and
aam
lret
repnz
pushf
loope
inc
popa
and
cld
scas
movsb
add
jns
flds
or
cld
pop
push
pop
jge
stos
rorl
push
popa
mov
mov
adc
mov
frstor
mov
stc
test
pushl
test
xchg
bound
cli
adc
insb
loop
das
inc
cmpsb
jnp
in
jmp
push
mov
mov
mov
mov
jg
and
xor
cmc
xor
xlat
inc
or
mov
or
mov
mov
rcrl
loop
dec
ds
je
addl
ret
mov
or
lea
cltd
fwait
je
inc
enter
push
mov
dec
pushf
inc
jg
in
loopne
sbb
xor
scas
gs
pop
lret
mov
adc
aaa
test
push
arpl
rcrl
adc
dec
stos
lods
xor
jecxz
icebp
imul
inc
mov
stc
mov
dec
push
in
imul
jp
jns
dec
andl
inc
in
pop
lds
gs
mov
faddl
cmp
inc
push
insb
gs
push
cmp
adcl
pop
and
jns
sbb
push
into
jnp
sbbb
fisttpll
int3
xor
sbb
xor
push
jbe
aad
push
jns
sbb
inc
or
orl
jb
insl
or
dec
adc
fldl
out
or
in
mov
hlt
mov
cmp
inc
pusha
adc
into
sbb
mov
ret
repz
fmul
mov
dec
mov
dec
xchg
daa
lds
movsl
dec
loop
and
scas
aas
push
into
cmp
fwait
test
pop
cmp
popa
inc
add
sbb
push
pop
sub
pop
sbb
arpl
pop
jae
xchg
and
pop
insl
enter
sub
or
sub
and
and
and
std
ret
mull
inc
adc
push
jp
push
inc
lods
cmp
jno
adc
cs
pop
mov
jo
lods
out
sbb
add
pop
inc
cmp
mov
mov
sbb
fisubl
push
ss
cli
mov
test
inc
insb
jecxz
and
xchg
mov
dec
sbb
mov
dec
test
xchg
jmp
aad
xlat
cmpsl
inc
xchg
mov
fchs
push
sub
icebp
xchg
lahf
add
jmp
in
neg
sub
f2xm1
addr16
aaa
movsl
hlt
push
inc
ret
aad
jbe
cli
lods
sbb
data16
xor
mov
dec
inc
cld
xchg
lds
std
push
popf
je
out
mov
popf
jbe
shl
jnp
mov
and
push
outsb
push
scas
test
ljmp
and
call
add
or
movsb
pop
mov
add
inc
outsl
rclb
add
jbe
mov
aad
pop
lcall
xchg
sub
loop
dec
push
hlt
dec
addb
or
leave
ret
repnz
sub
push
jbe
push
adc
ret
pop
adc
mov
mov
sbbl
xor
sbb
push
cs
es
ret
dec
ret
xor
gs
ret
in
push
add
mov
sti
mov
xor
dec
or
adc
mov
xchg
mov
cmp
hlt
fdivl
xchg
pop
dec
pop
int3
aad
testb
add
movsl
jp
sub
sbb
fisttpl
addr16
sbb
lock
dec
pop
loop
mov
punpckhwd
scas
insl
lcall
mov
dec
out
jnp
adc
push
or
std
stos
mov
cmp
leave
dec
jle
xchg
pop
pop
mov
sbb
jns
rcr
push
cmp
adc
xor
int3
mov
scas
xor
inc
shlb
fcom
push
repz
sbb
cmp
dec
xchg
sub
nop
js
popf
rorl
jno
pop
mov
fdivl
in
cmpsb
fsubs
shr
push
xor
mov
push
dec
xor
fsub
mov
pop
xchg
push
sub
cli
xor
mov
int
push
jl
cmp
iret
push
xchg
repz
mov
push
cmp
jbe
loop
or
jne
out
cli
sub
mov
mov
mov
xchg
xchg
lcall
mov
lea
push
xchg
addb
test
loopne
sbb
aaa
adc
popf
scas
faddl
or
xorb
je
fstpl
cmp
sub
xchg
jecxz
push
pop
and
fsubs
fistpl
scas
mov
jae
popf
xor
xchg
ret
les
hlt
cmp
incl
dec
clc
or
dec
mov
pop
mov
or
outsl
lods
cli
dec
push
mov
and
dec
fadds
cmpsb
adc
or
mov
xchg
mov
adc
jg
lahf
es
pop
in
stos
push
mov
es
aad
cmpsl
out
mov
adc
pop
sub
fcmovnb
clc
cmp
cmp
int3
sub
lcall
mov
fneni(8087
ja
pop
lahf
jl
inc
int
mov
addb
and
loope
and
aam
add
insl
scas
pop
es
test
shll
into
jge,pn
sti
lcall
loopne
ss
xor
mov
adc
jge
or
dec
je
or
dec
sub
inc
jb
js
sbb
add
sub
adc
test
inc
fwait
cld
jecxz
jb
pop
add
sub
inc
and
sbb
fucomip
subl
mov
pop
stos
adc
mov
or
adc
gs
mov
jecxz
inc
popf
daa
aaa
ret
rolb
pushf
lret
dec
inc
out
or
insb
in
scas
sbb
mov
mov
mov
mov
test
fistpl
xchg
or
loop
jle
jle
fidivs
nop
in
sub
pop
jmp
jns
not
fidivrl
ficomps
cltd
int3
nop
test
rcr
loop
xchg
mov
incl
mov
in
mov
clc
mov
out
rorl
add
sti
das
mov
lods
and
insl
jne
loop
jae
mov
mov
xchg
jl
mov
xor
xor
mov
das
xor
dec
imul
addb
ficomps
lea
es
or
mov
mov
aam
cmp
push
pop
int3
add
cmpsl
cmp
jae
rol
pop
push
sbb
call
bound
xor
ficoml
jne
adc
cmp
ss
iret
imul
push
mov
pshufw
and
inc
call
inc
jnp
and
andl
cld
jae
mov
sub
aad
arpl
shrd
xor
mov
ret
sub
push
and
push
adc
movsl
addb
sbb
inc
cmp
jno
mov
lds
roll
dec
dec
cmpsb
jecxz
mov
aaa
add
inc
fldl
lcall
out
add
rorb
test
sbb
mov
sub
inc
sbb
and
mov
xchg
imul
xchg
and
or
mov
mov
popf
sbb
sbb
and
ljmp
dec
mov
xor
cmp
xor
dec
call
repnz
and
xchg
lcall
jecxz
and
pop
bound
mov
lds
xlat
push
enter
mov
loopne
xor
ret
fcoml
dec
lret
sub
imul
insb
lret
mov
dec
adc
mov
mov
push
hlt
movsl
sbb
sbb
stc
mov
jp
cmp
lret
cmp
sti
cmp
lahf
out
in
repnz
out
sbb
pop
aaa
adc
cmpsl
xor
bound
movsl
stos
mov
dec
pop
push
int3
popf
dec
lret
or
cld
loop
jo
and
xor
pushf
or
sbb
mov
dec
stos
ret
mov
imul
mov
xchg
rolb
dec
int3
popa
and
das
pop
mull
outsl
lret
aaa
scas
sub
bound
movsl
or
divl
iret
xchg
pop
fnstcw
shr
shrb
cmp
mov
int
addl
mov
add
push
pushf
movsl
mov
sub
sbb
subb
sarb
inc
mov
pop
fdivp
sbb
stos
enter
mov
repnz
jecxz
sbb
pop
sbb
pusha
cmp
mov
addl
sarl
xor
sub
add
mov
rcrb
or
into
cmp
sbb
cmp
mov
inc
stc
jle
ss
mov
mov
xlat
pop
sub
fstpt
je
repz
ret
push
jae
int3
ds
fsubrl
int3
mov
scas
or
shrl
pop
test
inc
mov
sbb
je
mov
jge
std
pop
pop
push
pop
loope
or
out
push
xchg
and
scas
xlat
cmp
imul
loop
cmp
mov
mov
push
xchg
mov
int3
xor
call
movsl
je
and
sbb
push
scas
shlb
rcr
xor
mov
and
push
clc
mov
bound
sti
iret
or
or
scas
inc
mov
add
and
fwait
push
hlt
jo
pop
test
movsb
gs
imul
mov
push
mov
mov
movsl
pop
out
push
loopne
data16
adc
mov
xor
fs
stos
mov
add
pop
dec
pop
cmp
pop
aaa
jne
leave
push
xchg
and
sbb
pop
push
data16
mov
push
pop
and
jmp
xchg
dec
push
and
jmp
adc
fcomp
push
sbb
arpl
mov
lret
xchg
icebp
ret
fsubs
inc
pop
adc
mov
and
lcall
jo
sbb
mov
and
cmpsb
dec
lret
stos
pop
iret
outsl
jl
into
jne
lea
cmpsl
rcr
push
loope
inc
and
lea
adc
cmp
xlat
rcll
xor
fdivrl
es
loopne
push
sahf
add
repnz
mov
test
inc
xchg
xchg
js
xlat
and
jae
hlt
or
xchg
aam
jns
cltd
mov
shr
out
addr16
sbb
add
ret
addl
iret
pop
sub
xlat
std
jo
jecxz
push
xchg
jno
pop
jne
pmaxub
push
adc
pop
gs
and
insb
mov
dec
pop
pop
iret
cwtl
jmp
mov
mov
fdiv
jne
mov
pop
cs
pop
ljmp
push
mov
jg
or
mov
or
je
idivb
pop
sub
lcall
repz
dec
and
add
sbb
or
shrb
jge,pn
sub
cli
xchg
add
pop
mov
fld
outsl
push
xchg
jl
jne
or
movsl
stos
test
mov
sbb
int
mov
mov
mov
pop
sbb
jecxz
fdivl
push
in
popa
fnstenv
mov
int
clc
arpl
push
xor
push
aam
mov
cmp
subb
push
iret
xchg
cmp
adc
add
mov
adc
lods
rcrl
lds
inc
pop
push
dec
jb
cmp
mov
mov
icebp
sbb
push
cmp
adc
enter
cmp
movsb
xor
inc
fnstenv
bound
jbe
cmp
pop
sub
insb
daa
cmp
lahf
lock
jg
popf
addr16
loope
push
testb
dec
mov
dec
in
inc
adc
sbb
push
aad
orl
leavew
mov
scas
push
icebp
jmp
mov
xorl
cli
lock
and
sub
cmp
pushl
mov
ja
testb
xchg
stos
jb
jl
dec
pop
mov
sahf
shl
lock
xor
fbstp
je
jae
add
or
inc
jl
adc
cmp
mov
or
loopne,pn
dec
insl
js
pop
add
lock
inc
jnp
mov
jp
inc
mov
push
repnz
or
add
and
xchg
lea
fistl
adc
push
pop
pop
pop
jmp
add
stos
inc
stos
out
jne
mov
sbb
xchg
xchg
dec
adc
mov
aaa
pop
insb
mov
mov
pop
push
add
ficoms
shlb
pop
nop
div
cmpsl
mov
loop
jg
rcrl
mov
and
mov
test
mov
mov
add
jbe
ja
lods
movsl
pushf
xchg
adc
pop
push
jo
jl
adc
dec
jmp
or
int
outsl
pop
or
out
push
test
pop
call
loopne
outsl
adc
cmp
sbb
inc
cltd
adc
push
ss
scas
pop
push
adcl
loope
test
popa
aas
cmp
fcoms
insl
fstps
jo
rclb
cmp
lods
jmp
add
add
dec
pop
clc
cmp
movsb
jg
jp
scas
or
sub
lcall
adc
sbb
jne
ljmp
fisttps
cmp
mov
inc
stc
test
pusha
scas
xchg
mov
aad
or
cli
std
mov
pusha
in
clc
std
jb
sub
stos
bound
push
mov
xor
sbb
inc
mov
sub
fists
jne
pop
sbb
cmp
inc
clc
lds
clc
adc
pop
das
rcr
in
dec
cltd
mov
fidivrl
sbb
jl
in
jle
bound
pusha
pop
outsl
push
cwtl
lcall
ljmp
push
sbb
pop
jle
scas
stos
scas
inc
je
enter
fsubs
shrl
jecxz
dec
push
mov
cmp
testb
and
scas
jge
push
adc
insl
mov
dec
fnstcw
iret
dec
test
das
fsubrl
add
dec
xchg
movsb
mov
test
imul
dec
das
das
lods
popf
cs
cs
push
test
subl
repz
sub
mov
jl
insb
popa
jne
pushf
hlt
xchg
faddp
idivb
xor
loop
jnp
xchg
dec
push
arpl
mov
aaa
xchg
rcrb
mov
leave
push
movl
push
sub
fistl
push
adc
sub
lret
add
add
addr16
dec
inc
mov
repnz
ficomps
sub
xchg
mulb
mov
je
add
xchg
out
xchg
adc
int
fcomi
loop
fbstp
pop
cs
sbb
and
daa
lods
imul
pop
add
cmc
jmp
inc
jb
loop
jo
scas
sbb
lret
fs
lock
mov
sub
add
push
pop
jno
jns
jecxz
mov
sub
arpl
xor
or
movsl
sub
std
int
jnp
loope
xorl
adc
adc
mov
loopne
mov
movsb
stc
call
negb
and
cwtl
popa
fcoml
push
sti
pop
ret
sbb
jecxz
aam
rolb
cmp
jmp
in
je
mov
or
xchg
outsl
out
pcmpeqw
movhps
dec
dec
imul
xor
sub
or
xorb
or
into
xor
test
ds
es
push
out
mov
pop
mov
scas
movsl
mov
jecxz
je
mov
mov
sub
shll
into
mov
pop
mov
ss
xor
push
mov
ret
jns
mov
leave
cld
cmpsb
cmp
ds
pop
je
pop
jbe
sub
mov
sar
jne
hlt
cmp
sub
repz
jb
mov
repnz
bswap
dec
dec
shlb
cmp
jge
and
sbb
jmp
out
fwait
pop
jp
repz
out
mov
imul
out
cmpb
mov
popf
or
jg
cmpsb
mov
stos
nop
mov
test
gs
pop
aam
dec
jb
dec
lods
pop
bound
adc
sub
cwtl
test
push
sub
neg
shl
or
test
mov
repz
dec
dec
nop
sbb
push
divl
sbb
lahf
lds
jmp
jge
fstpt
xchg
mov
fdivl
xlat
push
jecxz
dec
push
sbb
xchg
add
cmp
lcall
and
jge
fnstcw
cmp
sbb
shll
cld
imul
movb
or
shlb
repnz
inc
outsb
push
fildl
mov
nop
pusha
rclb
dec
jae
data16
cs
and
addb
outsb
dec
mov
movsl
cmp
cmp
mov
sbb
lcall
fcmovu
mov
push
ficompl
int
dec
div
or
add
dec
adcl
inc
inc
pop
mov
xchg
cmc
dec
mov
sub
pop
cmp
aam
in
mov
or
enter
movsl
xlat
test
push
cwtl
xchg
rcrb
fs
jge
adc
out
adc
mov
mov
mov
inc
push
push
in
mov
mov
clc
mov
fs
repnz
jle
xor
aas
xor
xchg
xchg
stc
adc
jnp
xchg
xor
mov
fwait
push
imul
push
xchg
push
inc
dec
dec
enter
mov
ja
jmp
push
sahf
sahf
in
mov
jcxz
dec
mov
fbld
pop
sbb
or
daa
mov
jae
mov
jae
stos
out
pop
into
pop
pop
gs
mov
xchg
js
pop
faddl
lock
in
ja
sbb
repnz
in
rorl
inc
xor
cltd
cmpsl
shll
add
fbstp
add
pop
fwait
add
ss
push
int
insl
iret
dec
rclb
fists
cmp
cmc
movsb
std
test
mov
and
popf
jns
lcall
andl
out
rolb
pop
xor
pop
jmp
dec
mov
sahf
push
push
movsl
aad
or
adc
testl
bound
mov
and
jnp
lcall
cltd
inc
sub
sbb
xlat
insb
pop
mov
cmc
inc
cmpsb
cmp
jmp
and
lcall
das
imul
sarb
fdivp
adc
fdivrs
add
pop
push
sbb
adc
push
inc
xor
cli
xchg
rorl
ss
mov
mov
aas
inc
mov
aad
add
or
cmp
and
mov
add
int3
add
jb
or
dec
mov
cld
pop
cmp
icebp
xchg
dec
cld
repz
lret
and
dec
jo
in
sar
dec
call
mov
adc
incb
addl
bound
icebp
aam
repz
add
addl
es
ss
imul
pop
dec
imul
shr
mov
xchg
daa
sbb
sub
add
cmp
gs
pop
loope
adcl
aas
arpl
ds
sub
addb
aas
pop
jg
mov
and
leave
cs
test
fimull
scas
stos
ds
in
mov
cmpb
int3
dec
dec
xchg
mov
in
fs
sbb
shll
add
cmp
mov
iret
xor
cmp
mov
push
fcmovb
das
lcall
sub
popf
jge
add
scas
xchg
and
lea
and
data16
ljmp
in
and
sbbb
xchg
stc
rcll
outsb
push
jg
and
mov
push
scas
mov
into
or
les
dec
scas
sbb
mov
scas
jne
fwait
sub
test
dec
in
decb
sbb
daa
popf
stos
popf
mov
testb
and
pop
lret
jle
lcall
cmpsl
cld
in
das
fwait
test
dec
xchg
clc
out
nop
jmp
adc
jg
push
xor
mov
mov
sub
test
sbb
jmp
pcmpeqd
and
mov
push
cmpsb
insl
jg
sbb
push
xlat
pop
lcall
cmp
push
jg
or
cmp
add
imul
clc
ljmp
jo
insl
and
jmp
inc
iret
sub
aaa
decb
jb
mov
dec
popa
inc
aad
int3
add
repz
insl
ret
cltd
popl
mov
xor
out
fimuls
mov
mov
add
add
add
clc
fsub
mov
pusha
adc
iret
sbb
add
dec
xchg
push
shr
adc
leave
mov
cmc
or
repz
sub
sub
push
push
comiss
fimull
mov
mov
mov
cmp
je
mov
jle
jo
and
mov
jnp
adc
mulb
andb
push
mov
aas
iret
xchg
jne
insl
in
inc
xchg
mov
js
cli
adc
out
or
xchg
fwait
in
mov
scas
fnsave
adc
pop
or
xor
sahf
adc
and
and
pop
jne
fcomip
mov
push
mov
push
out
pop
sarl
fldt
and
loopne
popf
jns
movsl
fldcw
mov
mov
dec
imul
adc
jge
fcompl
loopne
or
cmp
sahf
dec
pop
pop
outsl
pushf
nop
dec
addr16
stos
push
mov
sbb
out
mov
jae
movsl
or
mov
insl
or
faddl
out
xor
or
lock
jl
lahf
mov
cs
pop
and
lods
lea
fs
jmp
imul
ss
sub
inc
je
rcr
or
jl
inc
jb
mov
pop
mov
loop
jo
arpl
mov
jle
test
mov
adc
mov
mov
mov
lods
lret
or
jae
mov
stc
aad
mov
loope
rorl
pop
pop
sar
in
sbb
popf
cmc
pop
in
test
scas
inc
in
into
xorl
hlt
add
push
xchg
in
or
rol
push
xchg
xchg
cmp
pop
mov
mov
jnp
gs
adc
ret
add
out
mov
mov
out
dec
idivl
pop
jmp
dec
out
pop
cli
lods
sub
call
incl
push
mov
lods
xor
js
pop
lret
fsubs
lods
xor
out
lcall
push
das
sbb
xchg
push
and
fildll
js
pushf
push
popf
pop
lret
pop
aas
inc
or
shll
imul
std
push
aam
imul
push
push
hlt
sub
xchg
mov
dec
sub
jle
fcoml
test
mov
insb
clc
pop
xor
pop
xor
movsb
loop
mov
sbb
mov
xchg
xor
and
in
cmp
sbbl
sbb
in
into
dec
aam
jp
cmp
test
and
push
out
fcoml
or
cmp
adc
xor
cld
sbb
mov
mov
add
pop
icebp
xchg
rcll
test
xor
ja
pushf
mov
gs
out
mov
xchg
sbb
cmp
js
stos
shll
popa
cli
into
push
sbb
adc
dec
sbb
jbe
inc
test
dec
les
dec
cmp
in
test
sbb
mov
fsubrl
push
xor
ljmp
repz
push
les
sub
or
lds
test
push
jp
scas
jne
or
cmp
and
inc
stos
or
mov
xchg
sbb
lds
fildll
scas
testl
push
push
xchg
test
lods
sbb
lods
out
mov
cmpsb
stc
popa
orl
mov
mov
ja
lods
and
shrb
mov
arpl
lret
outsl
lcall
jmp
xchg
fnsave
icebp
arpl
imul
data16
mov
icebp
dec
das
mov
pop
jmp
or
jle
ljmp
dec
pop
repz
inc
or
gs
rcrl
and
dec
push
sti
xchg
sbb
add
punpckldq
mov
pop
or
push
mov
mov
jo
add
loope
daa
loope
in
dec
fnstcw
loope
jae
xchg
lret
ret
ret
dec
int
jne
sar
loop
inc
in
ss
jb
jmp
clc
mov
pop
pop
inc
cmp
fnstcw
dec
sbb
dec
mov
daa
lock
clc
pop
std
mov
adc
clc
dec
pop
std
popa
ret
outsl
lret
or
jne
stc
mov
mov
adc
push
pop
les
jg
push
push
pop
stos
insb
insl
mov
out
mov
nop
int
mov
gs
jae
es
xchg
daa
inc
add
mov
jecxz
sub
enter
jge
add
push
inc
mov
into
adc
rol
loop
mov
jmp
dec
cmc
push
xchg
fs
fstps
sbb
or
stos
cld
jns
fdivp
orl
jnp
add
add
mov
mov
jge
push
cmpsb
mov
shlb
pop
sbb
fs
or
stc
mov
or
test
pop
sub
xor
andb
and
adc
push
push
mov
out
pop
sub
xor
jne
inc
inc
rcrl
push
dec
test
mov
je
outsl
pop
insb
inc
stos
sub
jns
sbb
sub
jmp
cmp
push
rolb
fwait
cld
push
enter
mov
adc
dec
xchg
jp
cmpsl
lret
loopne
pop
cmpsl
mov
mov
wrmsr
in
inc
cmp
mov
add
and
aad
cltd
in
mov
mov
insl
pop
imul
outsw
hlt
pop
enter
shl
sbb
xchg
lods
and
mov
mov
push
inc
add
mov
rcll
pop
inc
jmp
int
shl
movsb
cmc
mov
pop
mull
push
inc
sub
push
test
inc
jne
add
xchg
jmp
or
add
inc
repz
cmpsb
jo
pushf
push
or
adc
test
push
out
dec
mov
pushf
push
fbstp
aaa
dec
xor
into
je
roll
daa
movsb
push
mov
adc
stos
xchg
xor
loope
mov
push
outsl
out
stc
dec
fwait
std
scas
adc
je
xor
iret
dec
push
dec
push
dec
lods
mov
mov
pop
dec
aad
jl
cmc
shll
mov
push
cs
jne
pop
mov
stos
inc
push
idiv
mov
cmp
jae
add
int
fwait
ja
mov
adc
insl
jmp
pop
adc
mov
pop
adc
dec
faddl
out
push
hlt
inc
dec
cmp
dec
mov
push
push
in
inc
int
out
mov
aam
arpl
adc
aam
outsb
pop
adc
push
mov
addr16
lret
or
sbb
into
imul
and
es
xchg
inc
shlb
mov
mov
cmp
stos
jae
mov
outsw
imul
jne
shrl
mov
sub
xor
scas
pop
mov
jg
fucompp
aam
cld
add
call
das
sahf
sub
in
adc
adc
cltd
repnz
stc
cmp
mov
pop
mov
lea
pop
push
jno
and
pop
sti
xchg
outsb
pop
lods
fisttpl
push
xchg
femms
inc
test
and
inc
arpl
fs
and
mov
movhps
lock
pop
es
jmp
fs
int3
sbb
pop
mov
frstor
mov
orl
lds
or
popf
mov
push
cmp
ja
mov
fistpll
sub
push
mov
push
pop
pop
imul
pop
mov
jge
fs
into
add
outsb
jnp
mov
xchg
in
pop
add
mov
cmpb
fnstsw
in
lcall
jnp
sbb
out
lock
jmp
adc
add
orb
and
mov
sbb
inc
pop
daa
inc
dec
jbe
shl
mov
hlt
fdivp
rcll
icebp
in
pop
imul
mov
insl
push
fxch
cmp
dec
outsb
inc
jns
icebp
out
pop
lock
add
mov
sub
fistps
lds
sub
cltd
out
sub
mov
inc
idivl
and
test
cmc
pop
and
dec
call
push
outsb
mov
out
and
stc
repnz
and
or
js
scas
mov
sbb
xor
aaa
xor
cs
shrb
popa
je
pop
cli
dec
insb
arpl
jg
data16
xchg
xchg
and
xchg
out
push
xchg
cld
mov
pusha
and
adc
mov
adcl
dec
xchg
jle
aad
push
loopne
sub
cli
out
cmp
inc
jecxz
mov
xor
sbbl
xor
ja
mov
cld
into
ljmp
pop
cmp
inc
cmp
xor
fwait
jns
jo
enter
mov
sub
inc
dec
pop
mov
out
insl
nop
cli
cwtl
adc
push
xor
lret
fimuls
mov
rclb
arpl
xchg
loop
iret
inc
lret
dec
outsb
subb
and
mov
arpl
andb
jg
and
cmpsl
cmp
lods
rcll
aas
ja
xchg
xor
xlat
xor
inc
xchg
xorb
xor
loop
cmc
inc
call
jmp
sub
add
push
or
push
jl
pop
mov
pop
ja
loope
test
insb
std
addr16
xchg
movsb
mov
cmp
imul
sub
jge
ss
push
scas
rclb
mov
add
jl
jg
xor
adc
inc
pop
sbb
popf
fcoms
pop
mov
sahf
jnp
dec
pushf
adc
pop
jo
fldt
cmpsb
pop
pop
xor
and
add
jl
cmc
fdivrl
ret
cmc
sub
fdivrs
scas
cwtl
and
add
pop
out
push
cld
repnz
inc
mov
xchg
data16
mov
and
cmpsb
sti
test
jp
inc
cli
mov
xchg
push
movsl
filds
pop
push
imul
sti
mov
mov
sub
loopne
sub
push
jb
orl
shr
xchg
ss
jbe
aam
in
add
stos
xlat
inc
lcall
jno
cmp
mov
mov
jge
or
fs
fimull
stc
mov
scas
sub
push
adc
sub
mov
pusha
gs
pop
and
mov
cmp
call
test
jb
divb
inc
stos
xchg
mov
pop
or
push
stos
fstp
push
push
mov
movsl
aas
bnd
into
pop
out
jmp
je
push
dec
rcr
cwtl
xor
mov
ljmp
iret
push
jmp
mov
jmp
lods
pop
cmp
arpl
sbb
or
xor
jecxz
out
jne
cli
dec
cmpl
cmp
xlat
and
repnz
fisubs
dec
inc
in
pop
mov
shrl
repz
rclb
std
call
sub
and
loop
sbb
fcomp
jl
aas
movsb
jbe
mov
push
movsl
xchg
mov
inc
mov
aam
pop
inc
jno
lds
or
hlt
mov
adc
pop
mov
mov
or
adc
call
je
and
outsb
imul
and
mov
xchg
mov
movsb
dec
lea
loop
pop
mov
divl
dec
mov
inc
popf
mov
mov
outsb
jne
mov
repz
sbb
mov
jb
ljmp
push
ret
dec
out
inc
pop
scas
or
hlt
lds
sbb
dec
inc
inc
sub
movsb
and
ss
test
pop
fsubs
out
mov
aaa
mov
push
inc
jecxz
mov
mov
bound
cmp
xchg
mov
jo
mov
out
xchg
fs
mov
jl
add
mov
clc
or
fsub
sbb
adc
test
cwtl
es
push
inc
decl
insl
inc
in
jge
iret
sub
mov
inc
mov
aaa
lret
add
cld
sbb
pop
inc
sbb
inc
rcll
les
insl
xchg
pop
cmp
push
popf
cmp
dec
movsb
repz
in
lds
mov
mov
sbb
mov
popf
cmp
cmpsb
xchg
je
jle
xchg
flds
mov
fs
xchg
mov
pop
ret
arpl
repz
and
inc
ret
jg
ss
dec
pop
push
xchg
loop
sbb
lea
idivb
aam
dec
xor
js
insl
xchg
mov
xor
cmc
jle
pop
mov
int3
inc
adc
enter
std
push
cmp
cld
scas
xchg
jnp
out
jecxz
nop
cmp
xor
adc
sbb
ror
add
sbb
bound
pop
inc
in
ret
js
int3
mulb
xor
pop
js
stc
lods
nop
aas
xor
mov
fnstcw
fiadds
loop
mov
dec
mov
fucompp
jae
inc
into
pop
ret
pop
test
rorb
pop
inc
mov
sub
les
sbb
cmp
punpckhbw
mov
and
xor
xchg
data16
sub
push
cs
mov
mov
das
and
and
ror
add
in
jge
dec
fists
cs
cmpsl
sahf
cwtl
int
jg
mov
insb
adc
loop
jle
sbb
or
ljmp
fs
xlat
cmp
jnp
add
jmp
pop
xchg
sti
xchg
mov
pop
cli
jp
cltd
loopne
in
push
mov
push
stos
je
out
ja
lret
fnstsw
popf
cmc
fisttpl
xor
mov
sub
mov
sar
sahf
push
hlt
sub
hlt
mov
sub
dec
mov
out
lcall
mov
xchg
jl
mov
pop
mov
js
rcl
xchg
orl
fwait
mov
add
sti
sti
cmp
push
imul
sbb
dec
mov
dec
repz
mov
loopne
add
cmp
inc
mov
mov
xlat
inc
pop
cmp
xor
ja
push
int
push
mov
cmc
add
ss
cld
arpl
arpl
nop
inc
shrl
out
nop
adc
add
dec
or
fildll
sbb
loope
and
push
mov
into
push
lock
mov
pop
mov
std
adc
stc
mov
nop
test
ja
jle
es
mov
popa
sub
stos
mov
repnz
mov
js
mov
cmp
and
repz
and
mov
rep
mov
adc
dec
aam
pop
inc
out
fldcw
repnz
push
cmp
pop
aad
ljmp
cmpsb
push
xor
mov
mov
fwait
outsl
mov
cltd
xorb
xchg
jo
imul
mov
xchg
mov
sub
lods
das
sub
lods
aas
pop
pop
shrl
mov
adc
push
pop
push
jl
sbb
jge
xchg
push
mov
mov
or
dec
and
shll
add
jo
outsb
ds
fwait
sbb
jnp
aad
pop
daa
dec
lea
push
popa
add
out
imul
or
jbe
orl
inc
xlat
aas
fsub
rcrl
lods
mov
repz
loopne
test
shl
mov
adc
mov
js
repnz
sub
cmp
in
push
cmp
lcall
or
nop
out
and
or
add
ja
nop
pop
pop
cli
cmp
xor
dec
push
enter
jno
stos
test
outsb
sbb
mov
pop
cs
out
xchg
sarl
jns
mov
xor
shlb
inc
int
mov
int
lret
jmp
push
mov
aam
scas
fdiv
pop
aaa
push
pushf
sbb
pop
jno
or
in
push
xchg
sub
mov
bound
sbb
xchg
hlt
popf
jg
imul
in
inc
mov
bound
cmp
mov
xchg
js
and
jne
and
insb
or
lcall
rcll
dec
imul
lcall
ficoml
sub
push
push
imull
lods
mov
scas
mov
jbe
imull
sbb
sub
outsl
test
cli
cmp
jcxz
nop
sub
pop
icebp
xchg
hlt
mov
sub
enter
push
movlps
add
add
lret
sub
sub
xlat
andb
test
sbb
dec
outsb
repz
inc
jmp
xchg
fpatan
imul
pop
xor
xchg
sbb
mov
xor
cmc
insl
ds
or
add
or
lods
or
in
orb
or
mov
dec
mov
mov
jl
scas
add
cwtl
inc
or
shll
shll
mov
mov
ficompl
pop
dec
icebp
adc
gs
mov
jmp
jo
imul
lahf
fldt
adc
dec
cmp
stos
aam
in
xchg
xor
fistps
jmp
sub
sbb
out
mov
repz
ret
ja
shr
xlat
bound
jno
aad
fsubrp
int3
mov
movsb
loopne
inc
jne
lea
sbb
cmp
push
notb
mov
pop
imul
and
cmpsl
lds
push
pop
and
sub
xchg
movsb
or
sub
int
iret
mov
pop
mov
aaa
fiaddl
xor
popf
or
shll
mov
movsl
lret
or
sbb
imul
ret
add
dec
fdivr
adc
bound
cwtl
xor
mov
movsl
pop
dec
iret
add
cltd
stos
fsubrs
js
jmp
fwait
clc
push
enter
loop
loop
mov
adc
or
loop
insl
mov
mov
add
pusha
verr
pop
push
fistpll
sbb
popf
pop
dec
mov
leave
cmp
add
add
loope
mulb
in
clc
mov
imul
dec
repnz
frstor
inc
leave
jp
bound
add
mov
xchg
xor
or
jnp
mov
lret
pop
cli
orb
inc
dec
mov
imul
and
ljmp
mov
sahf
shr
lahf
dec
or
icebp
push
mov
femms
push
repnz
das
lret
insb
mov
xlat
sti
mov
mov
jb
xchg
pushf
or
mov
repz
mov
or
call
xchg
or
cmp
mov
jp
lcall
mov
fbstp
icebp
push
shlb
std
jp
jmp
mov
sbb
xchg
xchg
mov
fldt
sub
mov
mov
xchg
mov
xor
fnstenv
fldl
repz
repnz
jmp
xor
repnz
jno
in
xor
in
rcrl
pop
inc
into
jge
and
loopne
jecxz
and
jns
sbb
jno
or
add
dec
std
add
pop
pop
jmp
inc
add
mov
es
rcrl
cmp
inc
daa
and
mov
fiaddl
jecxz
add
mov
nop
nop
sti
notb
or
jae
decb
mov
xorl
lods
stc
adc
sub
sbb
jns
mov
out
xchg
cli
inc
mov
out
xor
push
out
or
or
das
inc
mov
arpl
push
stos
xor
jbe
mov
xchg
sub
test
adc
and
jle
nop
sti
cli
shrl
jae
sbb
movsb
in
add
sbb
xchg
scas
mov
xchg
imul
inc
dec
jbe
dec
in
add
adc
push
jmp
jns
or
mov
imul
test
sub
movsb
test
mov
stos
sub
and
mov
into
sbb
in
and
insl
mov
test
pop
mov
push
pop
aas
in
jge
mov
jmp
popf
inc
cmpsl
iret
sahf
lods
dec
or
and
mulb
in
mov
clc
jle
pop
pop
gs
lcall
jb
adc
add
xor
cmpsl
aas
xchg
pop
mov
in
mov
aas
push
mov
adc
jg
cmp
dec
int
xlat
les
fsts
filds
push
pop
cmp
into
push
inc
sub
sbb
movsl
push
incl
push
sub
ret
sub
shlb
testb
jno
and
mov
mov
and
daa
sbb
pop
or
or
cmp
mov
add
pop
mov
sbb
add
cmp
es
loope
mov
adc
xchg
cli
repnz
sub
int
in
sub
mov
fs
mov
cltd
jb
jecxz
fcomps
adc
rcrb
inc
into
mov
js
in
fcompl
scas
and
dec
push
add
addb
divl
ret
out
hlt
stos
shll
in
push
or
push
cmp
into
push
cmpsl
jae
cmpsb
adc
pop
and
imul
push
sbb
mov
xlat
push
popf
xchg
lock
scas
mov
and
dec
ja
test
pmulhw
addr16
dec
enter
mov
sbb
or
leave
call
jns
push
pop
push
fiaddl
stos
fisttpl
push
jp
cmp
das
in
mov
test
loope
je
addr16
pop
sub
test
push
mov
stc
push
pop
adc
xchg
xlat
or
out
and
jbe
mov
lds
mov
mov
mov
out
insb
xlat
pop
sti
mov
testb
add
sarl
shll
mov
lret
inc
lods
dec
mov
add
xor
ja
cmpsl
and
cmp
das
test
scas
mov
aam
outsl
movsb
add
idivb
cmp
adc
imul
lret
xchg
and
mov
das
jns
pop
stos
arpl
in
inc
movsb
pop
scas
icebp
dec
jle
sub
adc
mov
loope
add
push
std
pop
cmp
mov
clc
dec
pop
aas
sbb
aam
xchg
gs
je
das
jae
and
pop
les
sub
loopne
jmp
insb
push
mov
mov
lahf
les
sahf
test
adc
jb
shrb
int3
ljmp
out
mov
jle
in
aaa
popfw
nop
xlat
testl
push
cld
jne
jbe
mov
pop
inc
push
repz
test
mov
adc
or
or
in
mov
arpl
and
test
lcall
addb
adc
clc
test
add
mov
jl
pop
xchg
test
push
cmp
xchg
or
sbb
inc
insl
imul
cltd
fmull
aaa
out
insl
push
mov
testl
mov
aam
jp
lods
cmp
xadd
icebp
mov
clc
inc
cmp
sbbl
cld
insl
repz
jmp
pop
mov
js
and
pop
rcrb
inc
cltd
mov
mov
stos
mov
fcompl
outsl
jo
cwtl
loope
pop
js
push
pushf
lahf
dec
inc
xor
bound
cmpl
xchg
lret
adc
in
cmpsl
insb
mov
xchg
jle
mov
data16
jnp
call
bound
mov
inc
xchg
inc
sbb
cmpsl
sbb
lds
xchg
cmpb
and
leave
rcll
pop
test
cmp
movsl
dec
push
adc
pop
push
int
in
lcall
lods
test
loopne,pn
fucomip
adc
fildll
lcall
scas
or
call
dec
cmpsb
jle
fldenv
adc
inc
popf
into
js
scas
inc
shrb
and
sbb
cmp
sub
loop
aad
pop
inc
jmp
cltd
imul
pop
xor
add
mov
mov
jl
ret
fwait
inc
mov
int3
adcl
and
jbe
inc
push
ja
or
mov
dec
xchg
mov
repnz
fwait
adc
inc
sahf
jp
adc
and
in
jb
xor
dec
xchg
insl
inc
jmp
lret
push
pop
test
sar
mov
xor
pop
fwait
inc
mov
mov
jns
mov
adc
mov
imul
or
lock
xchg
inc
fcmovnu
mov
negb
xchg
pop
pop
fsubs
and
jmp
in
test
popf
mov
daa
lock
xor
cli
test
outsb
jmp
cmp
lock
sbb
das
sti
icebp
dec
aas
ror
test
fcoms
mov
call
push
jns
scas
gs
mov
jmp
xchg
sbb
push
addr16
lock
mov
mov
sbb
lods
inc
xor
rcrl
inc
pop
je
push
fiaddl
dec
and
pop
xor
in
add
std
pop
xchg
in
or
cmp
in
mov
pop
rcrl
sbb
lret
push
sbb
daa
inc
insl
fnstenv
jle
adc
movsl
jge
fmull
in
cmp
into
addr16
fs
es
fmuls
xchg
adc
leave
lcall
insl
sub
ficompl
push
push
inc
add
flds
push
mov
pop
repz
and
out
dec
add
mov
pop
aad
cmp
orb
fs
lods
pop
pop
lock
popa
outsb
scas
mov
cmp
ds
mov
int
mov
icebp
insl
adc
ss
or
fsubs
mov
and
xor
mov
xchg
lock
sahf
and
adcb
lcall
sbb
xor
shll
jne
and
mov
adc
call
mov
outsb
ret
dec
test
fsub
andb
stc
sub
mov
xchg
pop
pop
dec
aam
sahf
mov
das
sti
mov
pop
or
push
data16
sbb
push
lret
lods
xor
stc
dec
int3
xor
sub
scas
in
idivb
sub
push
cs
int
fcoms
fisubs
push
loopne
push
ss
mov
ror
daa
mov
jnp
test
xchg
push
cs
xchg
mov
cmp
sbb
ss
adc
or
call
sbb
clc
dec
adc
stc
dec
pop
jbe
insb
cli
popa
sub
add
push
xchg
jnp
xchg
addr16
dec
adc
push
lods
ljmp
lret
pop
mov
dec
in
in
mov
aaa
es
inc
fdivrs
sahf
push
lret
jo
les
fisttpll
xor
les
mov
bound
jo
adc
cmp
and
sbb
call
push
or
lret
xor
push
hlt
pushf
shlb
dec
pop
in
xor
jp
push
and
xor
cli
jae
and
and
sbb
cld
mov
mov
ficoms
lock
