mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
add
insl
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
lods
push
fimull
sbb
add
nop
cmp
idiv
js
adc
cmp
lcall
and
cs
loopne
xor
lcall
fdivrl
popa
dec
xchg
test
pop
pusha
fndisi(8087
leave
sbb
inc
cmp
sbb
xchg
push
mov
fildl
repnz
int3
jns
push
adc
dec
add
aaa
push
jno
mov
pop
or
in
add
dec
add
inc
pusha
lret
dec
xchg
jl
and
insl
dec
ret
lretw
mov
pop
jae
dec
dec
ja
ja
mov
pop
jg
mov
xor
dec
sub
stos
mov
sarl
pop
inc
mov
pop
mov
popf
jne
inc
das
cmp
inc
add
repnz
movsl
xchg
inc
inc
mov
aas
xor
int3
xchg
sahf
mov
movsl
jecxz
mov
das
dec
hlt
push
jle
sbb
jno
mov
data16
jg
into
or
cs
pop
sub
cmp
push
les
cmp
repz
cwtl
add
add
jp
fiaddl
pop
js
push
sbbb
or
arpl
cld
scas
ss
into
ret
stc
pushf
ret
xor
cli
adc
or
and
push
adc
out
cwtl
mov
arpl
dec
daa
or
xor
or
push
dec
inc
lahf
ljmp
rcl
rclb
xor
sub
xchg
pop
xchg
inc
pop
mov
xchg
push
mov
add
dec
xchg
shlb
arpl
mov
xchg
je
cmp
or
and
int
test
fildll
push
clc
jle
test
sbb
and
into
jae
sub
jl
jns
mov
push
inc
mov
mov
insb
cmpsb
xchg
push
scas
xor
add
jg
mov
xor
cmp
or
ss
movsb
pop
dec
sbb
sub
hlt
in
add
xor
xor
clc
lret
inc
pop
push
push
xchg
lret
sbb
stos
or
inc
mov
cmp
fsubs
push
push
jg
cmpsl
mov
sbbl
jl
or
inc
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
lods
push
fimull
sbb
add
nop
cmp
idiv
js
adc
cmp
lcall
and
cs
loopne
xor
lcall
fdivrl
popa
dec
xchg
test
pop
pusha
fndisi(8087
leave
sbb
inc
cmp
sbb
xchg
push
mov
fildl
repnz
int3
jns
push
adc
dec
add
aaa
push
jno
mov
pop
or
in
add
dec
add
inc
pusha
lret
dec
xchg
jl
and
insl
dec
ret
lretw
mov
pop
jae
dec
dec
ja
ja
mov
pop
jg
mov
xor
dec
sub
stos
mov
sarl
pop
inc
mov
pop
mov
popf
jne
inc
das
cmp
inc
add
repnz
movsl
xchg
inc
inc
mov
aas
xor
int3
xchg
sahf
mov
movsl
jecxz
mov
das
dec
hlt
push
jle
sbb
jno
.byte
daa
.byte
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
lods
push
fimull
sbb
add
nop
cmp
idiv
js
adc
cmp
lcall
and
cs
loopne
xor
lcall
fdivrl
popa
dec
xchg
test
pop
pusha
fndisi(8087
leave
sbb
inc
cmp
sbb
xchg
push
mov
fildl
repnz
int3
jns
push
adc
dec
add
aaa
push
jno
mov
pop
or
in
add
dec
add
inc
pusha
lret
dec
xchg
jl
and
insl
dec
ret
lretw
mov
pop
jae
dec
dec
ja
ja
mov
pop
jg
mov
xor
dec
sub
stos
mov
sarl
pop
inc
mov
pop
mov
popf
jne
inc
das
cmp
inc
add
repnz
movsl
xchg
inc
inc
mov
aas
xor
int3
xchg
sahf
mov
movsl
jecxz
mov
das
dec
hlt
push
jle
sbb
jno
mov
data16
jg
into
or
cs
pop
sub
cmp
push
les
cmp
repz
cwtl
add
add
jp
fiaddl
pop
js
push
sbbb
or
arpl
cld
scas
ss
into
ret
stc
pushf
ret
xor
cli
adc
or
and
push
adc
out
cwtl
mov
arpl
dec
daa
or
xor
or
push
dec
inc
lahf
ljmp
rcl
rclb
xor
sub
xchg
pop
xchg
inc
pop
mov
xchg
push
mov
add
dec
xchg
shlb
arpl
mov
xchg
je
cmp
or
and
int
test
fildll
push
clc
jle
test
sbb
and
into
jae
sub
jl
jns
mov
push
inc
mov
mov
insb
cmpsb
xchg
push
scas
xor
add
jg
mov
xor
cmp
or
ss
movsb
pop
dec
sbb
sub
hlt
in
add
xor
xor
clc
lret
inc
pop
push
push
xchg
lret
sbb
stos
or
inc
mov
cmp
fsubs
push
push
jg
cmpsl
mov
sbbl
jl
or
inc
mov
mov
sarl
in
mov
mov
add
shll
lea
sbb
icebp
or
out
lret
fistl
or
sbb
es
fstpt
shlb
mov
out
jno
jmp
addl
cmc
ret
sar
add
cmp
xchg
inc
sub
adc
je
jle
mov
mov
xchg
xor
pop
mov
jae
inc
fistl
rcl
mov
divl
mov
mov
sbb
inc
push
xor
icebp
inc
adcl
loope
cmp
ljmp
mov
fwait
sbb
cmp
fsts
testl
cmp
jl
pop
mov
or
mov
in
push
sub
xchg
pop
repnz
mov
pop
xchg
fcomps
xor
leave
clc
sbb
jecxz
imul
xchg
sti
les
push
add
dec
mov
xchg
cmpsb
test
cltd
push
insb
test
mov
xor
fwait
mov
jno
sub
pusha
push
movsl
cld
ret
icebp
inc
das
movsl
out
adc
pop
divb
call
mov
fidivs
movsl
add
mov
inc
jae
pop
aam
pop
loopne
mov
push
clc
sbb
outsl
add
push
dec
bound
movsb
outsb
pop
mov
xor
mov
pusha
dec
testl
hlt
in
lea
iret
jp
movsb
test
imul
pop
jae
jbe
or
inc
adc
outsb
sbb
leave
in
popf
lcall
aam
scas
cmp
push
lret
xchg
sahf
cltd
mov
imul
pop
fwait
leave
jmp
mov
dec
dec
fnsave
testb
scas
mov
xor
test
jo
cli
xorl
cmp
shrl
add
scas
push
adc
cmp
dec
push
sbb
and
and
add
popf
mov
test
mov
cmp
sarb
cmpb
xchg
or
stc
and
mov
sub
scas
xor
pop
push
add
xorl
jecxz
cli
repz
out
jbe
mov
popa
lods
xor
and
mov
outsl
pop
mov
sti
xchg
arpl
in
adc
inc
cli
hlt
add
popf
xor
lds
xchg
test
jmp
xchg
push
hlt
stc
mov
test
push
test
pusha
adc
repz
fwait
cs
dec
cmpl
inc
sbb
or
nop
or
push
lods
jae
gs
dec
das
lea
mov
aas
pop
xchg
popf
xchg
out
dec
push
imul
sub
pop
addr16
pop
sub
or
adc
lods
imul
sub
mov
dec
adc
mov
push
mov
mov
in
xor
icebp
int3
es
jno
pop
mov
into
std
popa
js
jnp
clc
int3
mov
push
cmp
jbe
cmp
imul
jle
sbb
cmp
push
icebp
imul
adc
xchg
adc
psubsb
je
cmpsl
leave
test
jle
xchg
mov
xor
cmp
pop
and
jno
and
jno
pop
sbb
das
test
es
mov
xchg
push
sbb
fmuls
nop
fcoml
out
addl
mov
ficoms
enter
mov
loopne
pop
inc
add
sbb
sti
mov
pop
das
adcl
jne
dec
cmc
mov
jecxz,pt
loope
lods
push
into
adc
push
movsl
pop
cmpsl
push
cltd
cmpsl
roll
sub
idivl
in
dec
mov
pop
lods
sub
cltd
sub
pop
and
jp
jge
loope
sbbb
stos
loopne
mov
sbb
loope
cmp
inc
mov
push
sub
sti
mov
jmp
inc
dec
aaa
out
xor
add
jbe
scas
mov
mov
insl
xchg
lret
sub
dec
ret
mov
sbbb
mov
test
cmp
jecxz
loop
pop
fsubr
rolb
xchg
pop
mov
mov
fdivrs
andb
and
adc
popa
jns
aaa
mov
gs
jnp
adc
sti
mov
xlat
loop
das
mov
sarb
add
adc
push
pop
daa
cmp
xchg
xchg
add
cs
inc
sbb
outsb
push
mov
test
mov
push
xchg
xor
stc
aas
sub
fwait
scas
je
lods
push
sub
or
jnp
xlat
arpl
mov
mov
leave
test
add
aad
out
push
movsb
lock
and
adc
fimull
jbe
and
lahf
add
shlb
aas
mov
mov
mov
test
movsb
rorl
xchg
push
lcall
adc
dec
and
and
mov
and
dec
repnz
push
jl
in
imull
sub
push
mov
lock
sti
xchg
mov
jecxz
xor
xchg
rcl
movsl
xchg
push
mov
insb
or
sbb
inc
pop
pusha
push
add
outsb
mov
adc
out
leave
out
int3
sub
adc
inc
cs
sbb
dec
mov
pop
sub
pushf
or
push
rcrb
nop
or
ds
mov
rolb
bound
or
sbb
movsl
stc
pushf
push
jb
lcall
sbb
aad
dec
bound
loopne
sbb
divl
fsubl
jg
mov
mov
xor
lcall
mov
xchg
gs
xlat
cmc
int3
xlat
cmp
jo
insb
jbe
sbb
mov
sbb
xorl
xchg
jge
cmp
cmpsl
sbb
mov
push
add
dec
insl
cmpsl
mov
ret
xor
sub
daa
aam
jg
mov
addb
stos
mov
jb
or
cmp
stos
fprem1
jmp
jg
xchg
or
pop
les
sbb
cvtdq2ps
xchg
jb
mov
icebp
push
icebp
push
subb
cs
mov
cmp
or
mov
lahf
jecxz
push
mov
adc
cmovp
or
iret
insl
rcr
repz
enter
mov
iret
popf
push
scas
push
push
inc
packuswb
mov
mov
repnz
pop
sti
das
pop
test
jp
fldl
inc
data16
popf
mov
scas
xchg
daa
ja,pn
popa
mov
arpl
arpl
mov
enter
in
pop
cmp
mov
mov
jae
push
and
popf
dec
leave
enter
jp
daa
repnz
mov
andb
fimuls
inc
or
jae
fwait
xor
pop
mov
adcl
ds
push
sub
ret
lods
int3
stc
pop
mov
lret
jp
cmp
das
push
daa
lret
lods
cmp
jno
sbb
in
dec
loope
outsl
and
pusha
dec
ret
mov
or
and
lock
fiadds
lret
push
or
adc
cmpsl
pop
in
mov
mov
hlt
and
nop
xchg
lods
fisubl
leave
pop
mov
clc
sbb
mov
gs
dec
cmp
cmp
mov
jle
cmp
pop
fbstp
stos
int
outsl
fwait
lahf
stos
xor
aam
daa
add
cmp
jmp
addr16
stos
add
loop
scas
stc
pusha
xchg
xchg
xchg
xor
xchg
adc
or
sbb
inc
pop
testl
xchg
hlt
dec
xor
je
movsl
bound
call
jg
cmp
inc
scas
imul
pop
out
lcall
xchg
test
jmp
sbb
push
sbb
mov
es
mov
pop
cmp
push
aam
insl
mov
inc
rcr
jg
mov
je
mov
pop
jb
std
or
jns
lea
jbe
inc
sbb
pop
shrb
xchg
adc
lret
xor
adc
pop
or
into
push
fiaddl
jbe
dec
repz
jl
movsb
in
mov
test
push
sub
mov
lret
je
and
fwait
sahf
pop
jno
pop
inc
gs
cmp
xchg
mov
jno
mov
add
rorb
ss
push
pop
mov
cmpsl
icebp
adcl
xchg
fcmovnbe
cmp
lret
sbb
dec
rclb
ret
add
das
pop
dec
arpl
jge
pop
push
push
cwtl
loop
cvtps2pi
dec
gs
xlat
mov
ja
rcrb
xchg
push
test
sbb
inc
jbe
sbb
hlt
add
cmp
xor
popf
aam
adc
sarl
ljmp
push
rcrl
mov
cmp
popf
movsl
mov
sti
sahf
imul
imul
repnz
sub
jge
adc
ds
xor
outsl
mov
scas
in
lcall
jl
aas
jo
shl
test
aam
mov
dec
repnz
daa
mov
enter
lahf
inc
test
shll
and
xchg
fidivl
xor
out
negb
lds
push
test
pslld
scas
mov
pop
jnp
cmp
sbb
jns
int3
lods
jp
cmp
and
sbb
jne
sub
call
outsl
mov
dec
mov
push
mov
sahf
mov
mov
push
lret
test
pop
inc
mov
cmpsb
add
sub
sub
aaa
hlt
pop
loopne
jmp
jo
push
leave
in
imul
cmpsl
clc
or
mov
pop
adc
in
jo
outsl
fisubrs
pushf
xchg
pop
roll
add
movsl
out
stc
xor
pop
movsb
adc
pop
lods
pusha
sub
and
xchg
in
cmp
or
fisubrl
pop
cmpsl
or
iret
mov
lds
mov
push
mov
pop
cmpsl
ss
lret
mov
clc
test
pop
cmp
fiadds
or
xor
xor
mov
jp
div
sub
jle
xor
adc
dec
insl
push
cmp
icebp
inc
ss
not
mov
push
pop
in
or
rcrb
jmp
in
in
pushf
fistpll
dec
fsubr
adc
jns
mov
int3
icebp
xchg
nop
stos
lahf
mov
jae
dec
testl
jl
dec
jb
dec
sbb
enter
inc
adc
push
cmp
pop
add
sahf
enter
arpl
iret
push
add
enter
out
jp
mov
cli
sub
cmp
xor
mov
push
mov
jno
sahf
xchg
out
gs
aam
in
loopne
out
insl
dec
clc
mov
xchg
sub
jp
mov
dec
out
ja
and
ret
cld
out
jo
xor
lods
push
in
bound
xlat
xlat
jecxz
jle
ja
mov
and
jns
mov
mov
incb
pop
add
ja
ljmp
enter
sbb
cmp
pushf
push
or
jp
or
ljmp
inc
jno
push
push
mov
inc
lahf
loopne
xchg
xchg
jae
fs
fiaddl
sbb
testl
es
cmc
xchg
jnp
or
leave
cwtl
rcr
pop
ret
ret
outsl
loopne
xor
cmp
jns
out
pop
pop
or
cld
xchg
jo
fistpl
add
fs
fwait
jbe
jae
cli
into
dec
cmp
pop
leave
imul
jbe
nop
cmc
loopne
nop
pop
jo
adc
mov
sub
push
cmp
or
mov
loopne
mov
mov
dec
subb
or
aad
xor
and
in
ror
inc
push
sub
pusha
mov
and
mov
sbb
int3
push
pop
lods
cwtl
lods
jne
lock
add
adc
ret
adc
sbb
arpl
enter
fidivrs
push
jne
mov
jno
loopne
mov
pop
push
js
mov
push
mull
sub
push
call
ds
cmp
leave
mov
sub
icebp
sti
mov
sub
psubusw
and
cmpsw
dec
cmp
or
sbb
mov
or
jae
inc
jb
adc
in
pop
sbb
fisttpll
mov
loop
push
sub
dec
dec
test
sub
icebp
js
jl
loop
cmc
xor
lret
fwait
test
lret
add
ljmp
cwtl
mov
nop
jge
sbb
int
pop
cmp
cmp
inc
sub
jae
sarb
daa
jnp
sbb
adc
arpl
pop
inc
add
jae
inc
jo
dec
push
xor
pop
cltd
cmp
or
rcrl
lds
xor
xor
fsubrl
mov
in
pop
sbb
pop
xchg
out
or
cmp
xchg
dec
cvtps2pd
cmc
sub
push
je
jmp
in
xchg
ljmp
and
scas
push
lretw
in
test
in
sbbl
lret
add
mov
pop
in
and
inc
mov
mov
sub
adc
out
sbb
mov
cmpsl
dec
mov
mov
sub
push
sbb
aad
pop
lahf
test
into
mov
sbb
hlt
enter
mov
dec
rclb
sub
cmp
or
dec
bound
pop
cld
dec
lock
and
scas
inc
xchg
jne
ja
cmp
dec
inc
js
in
or
mov
adc
test
icebp
imul
jbe
cmp
aas
pop
icebp
cmc
dec
imul
cmpsb
or
xchg
inc
mov
fildl
xchg
aad
repnz
hlt
mov
push
sbb
das
adc
push
movsb
adc
inc
pop
jmp
inc
and
mov
lods
rcrb
push
mov
repz
out
mov
xchg
cmpsl
mov
pop
je
lods
dec
int3
mov
jbe
int3
cmp
leave
icebp
test
aas
or
cltd
adc
xchg
mov
mov
jg
nop
mov
cmp
sbb
sbb
jne
test
add
jge
sbb
inc
jmp
enter
sbb
insb
leave
adc
mov
das
aas
dec
std
sbb
sti
fprem
nop
or
stos
mov
movsl
inc
add
loop
addr16
cmp
and
push
cmp
fdivl
prefetch
aam
sbb
sub
mov
cltd
and
hlt
inc
test
mov
jo
and
aad
and
mov
sub
lea
fdivl
lods
cld
xchg
mov
lahf
mov
int3
clc
in
push
psrlq
or
xlat
rcrb
cmc
rcl
xor
xor
and
aad
inc
pop
orl
pop
fiadds
hlt
pop
mov
or
sbb
xor
xchg
in
bound
in
add
cltd
add
adc
jae
add
out
xchg
fdivrl
mov
pop
cmp
sbb
sbb
fwait
mov
xor
lea
dec
icebp
push
fcomps
mov
outsb
data16
push
xor
fs
adc
aam
jno
jnp,pn
mov
push
inc
mov
add
lock
bnd
adc
pop
xchg
aaa
jbe
push
stos
shrl
shr
add
test
or
dec
xor
jae
fsubrs
dec
or
testl
jns
mov
imul
xor
hlt
sahf
cltd
push
popl
pusha
xchg
pop
es
push
mov
ja
addr16
or
leave
sbb
cmpsl
mov
jnp
cmp
popf
adc
int3
jge
in
jge
rcl
loope
adc
or
or
scas
das
xchg
orb
adc
pop
rorb
hlt
or
cwtl
movsl
std
dec
shrl
pop
aas
xchg
lds
pop
sub
bound
push
mov
rcr
mov
inc
mov
cmp
loop
test
gs
bound
int
test
movsl
xlat
out
add
sub
sub
scas
and
jmp
aaa
sbb
cmpsl
dec
jbe
mov
aaa
loop
loope
in
mov
xor
cmp
and
cmp
jae
lahf
add
lods
ret
jp
and
mov
push
daa
lods
out
outsb
into
mov
roll
out
fnstenv
call
xchg
push
mov
xlat
mov
inc
push
fstl
jp
mov
std
jp
or
in
dec
stos
cwtl
push
lock
mov
enter
jecxz
inc
enter
movsl
push
adc
mov
movsb
pushl
out
mov
je
xor
movsb
inc
movsb
dec
into
dec
jle
cwtl
dec
dec
in
call
cwtl
push
clc
dec
sbb
or
and
sbb
into
aaa
scas
inc
les
add
test
sub
mov
mov
mov
xchg
xchg
das
imul
fnsave
xchg
mov
leave
cmp
loopne
test
inc
sub
and
cli
and
test
and
or
sarb
mov
xor
cli
icebp
dec
jnp
jl
movsb
andl
inc
mov
mov
pop
pop
add
add
push
loopne
adc
push
cmpsl
xchg
xchg
mov
popf
fsubr
cmp
add
add
mov
inc
lods
xor
and
pusha
mov
push
data16
jl
sbb
add
pop
inc
lret
fs
cmpsl
mov
mov
push
sti
xchg
push
popa
dec
sub
fcoml
addr16
pop
movsb
stc
icebp
jecxz
test
pushf
adc
scas
lods
xchg
inc
or
es
xor
outsb
adc
xor
add
add
dec
mov
in
pop
shr
movsb
pop
lock
pop
into
lret
jne
adc
add
or
mov
adc
daa
sbb
test
pop
pop
in
pushw
mov
mov
mov
and
jnp
cmp
sub
push
loopne
lret
pop
lds
shl
jno
mov
stos
mov
faddp
or
leave
mov
shrb
pop
or
clc
lea
popa
mov
fsubr
jb
xchg
push
aam
xchg
into
lods
dec
test
das
out
xchg
and
les
pop
sub
lcall
push
jbe
and
or
repz
sahf
xchg
sarb
sbb
stos
roll
and
mov
movsb
mov
mov
xor
mov
cmpsb
into
das
fmul
cmp
enter
out
jns
lret
int
data16
mov
lods
inc
xchg
cmpsb
hlt
stc
cmc
sbb
les
mov
notb
jbe
cmp
lret
ljmp
cmpsb
add
dec
inc
cltd
pop
mov
or
jle
jnp
insl
shrl
push
cmpsl
sti
inc
fstpl
mov
mov
mov
push
inc
mov
aas
mov
push
push
push
inc
sbb
xor
mov
dec
push
mov
sbb
out
mov
test
sub
xchg
mov
push
cmp
push
pop
jb
or
jecxz
mov
pop
mov
adc
mov
push
xchg
xchg
in
in
shl
xchg
sti
in
xchg
push
repz
xor
xchg
aad
stos
sub
xor
mull
mov
cmpsl
pop
lock
pop
xchg
out
inc
sbb
enter
inc
repz
leave
vmread
pop
mov
xor
xor
mov
add
in
dec
pop
call
faddl
repz
rorb
fbstp
ss
inc
movb
mov
insb
imul
cmc
test
repz
xor
jae
push
jg
arpl
push
jns
pop
or
jo
out
or
adc
xchg
out
movsl
sub
test
jge
icebp
dec
lea
test
pop
sub
mov
mov
xor
push
dec
jle
les
dec
shrl
sarb
add
mov
call
sarl
aas
enter
ss
cmc
dec
dec
xor
imul
sub
xchg
sub
or
lret
fmuls
loop
int
negb
sbb
testl
leave
sbb
and
insl
fisubrl
mov
stc
fnstenv
fs
dec
mov
sbb
fwait
jp
lods
jecxz
and
cwtl
jae
dec
fcmovnbe
jno
movsb
sbb
mov
ss
gs
xchg
and
xchg
mov
sbb
cmp
pop
stos
cld
mov
or
out
pushf
inc
or
xor
push
bound
sahf
imul
push
xchg
shlb
inc
sbb
xorl
inc
cmp
sub
push
push
xchg
cmp
std
and
repnz
cmc
and
ds
imul
daa
lea
rol
inc
sub
pop
and
jg
insl
sub
push
lds
je
jecxz
push
mov
or
mov
std
stos
mov
je
push
out
idiv
cli
mov
push
into
inc
xlat
and
fisttpl
dec
fadd
inc
call
cmpb
fldl
mov
mov
sbb
fidivrs
int3
scas
loopne
out
add
sub
nop
enter
lods
pop
repnz
sbb
xchg
sbb
push
pop
jno
cmc
cmp
xor
lock
jmp
adc
shlb
adc
pusha
rcrb
inc
sub
push
pushf
stos
enterw
addl
std
mov
ret
dec
cmp
pop
rcrl
loop
cwtl
pushf
aam
scas
mov
pushl
add
jns
insl
pop
negb
and
js
add
leave
xchg
movsb
cwtl
test
push
push
jmp
mov
xchg
push
push
pop
icebp
mov
leave
xchg
xchg
cmpl
sarl
ljmpw
mov
and
popf
pop
je
sti
outsl
lret
jmp
jne
jp
iret
jnp
out
mov
fwait
sbb
mov
cmp
arpl
mov
nop
adc
cltd
stos
arpl
ja
push
mov
xchg
scas
adc
les
push
shll
popf
xor
cmp
nop
rcrb
fidivrs
xor
jp
xchg
sub
mov
repz
adc
add
add
std
push
mov
push
push
aad
cmpb
push
xor
movsb
jae
jb
lock
mov
xor
cld
mov
fimull
mov
insl
ficoml
push
mov
push
shll
jnp
mov
lahf
repz
xchg
jl
enter
xor
arpl
pushf
aad
subb
xor
sbb
mov
adc
inc
push
pushf
mov
lds
adc
popf
stc
xchg
pushf
mov
ret
mov
nop
scas
jnp
inc
and
jle
repnz
dec
cmp
pop
sub
jno
fwait
pop
dec
mov
out
pop
int3
je
lahf
loopne
and
mov
jnp
mov
movsb
push
scas
in
xchg
mov
fucomp
int3
in
sbb
lock
adc
jnp
xchg
pop
test
fcoml
test
xchg
push
sbb
fs
sarl
idiv
pop
ret
mov
add
call
sub
push
sub
fmull
rclb
xchg
xor
bound
jnp
cwtl
mov
and
inc
std
mov
dec
aam
movsb
cmp
popa
pop
in
sarl
jnp
outsb
pop
cltd
js
adc
inc
or
scas
insb
push
sahf
xchg
adc
or
add
movsl
in
mov
daa
cmc
insb
xchg
movsl
cwtl
outsb
aam
inc
mov
sti
je
mov
into
pop
cmp
aaa
adc
mov
and
repz
popl
scas
scas
push
jne
dec
pop
jmp
cli
cli
sbb
ficompl
add
movsb
pusha
clc
hlt
jo
cmp
add
out
aam
mov
test
jo
cs
nop
jge
cmpsl
add
sbbb
pushf
in
lods
movl
je
popf
fisttpl
pop
in
xor
icebp
lds
or
iret
addr16
cmp
mov
push
push
popf
inc
test
das
dec
add
enter
fwait
inc
cmp
jle
inc
loope
shlb
jnp
push
xchg
push
iret
ror
pusha
pop
stos
xor
inc
mov
mov
clc
mov
or
mov
faddp
mov
cmp
out
sub
mov
dec
rclb
xchg
insl
add
cmpsb
xor
pop
repz
dec
lods
mov
ret
pop
aas
cmpl
adc
dec
add
nop
das
mov
adc
sbb
cmpsl
inc
imul
insl
mov
cmp
scas
stc
in
mov
mov
test
lea
xor
jo
mov
jecxz
scas
ss
int
shrl
in
jle
mov
adc
and
ja
mov
sarl
xchg
je
rorb
xlat
fmuls
mov
push
je
xlat
outsb
pop
sarl
sbb
into
jg
jg
inc
push
adc
xorb
cltd
dec
add
cld
in
lret
in
addl
and
xchg
jecxz
pop
adc
cmpl
daa
dec
xor
ret
xor
add
mov
jge
add
jne
xor
stos
loope
add
push
call
or
fstl
and
pusha
popf
pop
cwtl
or
mov
lret
mov
add
mov
push
push
pop
and
sub
adc
pop
sahf
ret
popa
lret
mov
jecxz
pop
fnsave
aam
dec
int
xchg
cwtl
out
jg
imul
mov
icebp
cld
jle
repz
bound
lret
out
jne
adc
std
shlb
cltd
sarl
fsts
push
adc
pop
add
lods
push
lahf
mov
jo
jno
pop
outsb
cmp
adc
insl
or
xchg
imul
inc
loopne
lods
pop
inc
adc
movsl
jle
ja
repz
or
mov
test
xor
mov
sbb
mov
mov
out
movsl
fadds
mov
xorb
andb
adc
cmc
ja
mov
xchg
adc
pushf
and
pop
mov
cld
pop
adc
mov
mov
inc
push
jmp
mov
cmp
into
aam
jge
std
or
jge
notl
adc
mov
sub
push
cmp
pop
xor
lock
or
mov
int3
push
xor
pop
sbb
cmpb
mov
xchg
cmpsb
out
cli
jle
sbb
or
das
push
lea
jge
stos
andb
mov
jns
inc
sbb
lods
pop
gs
lds
inc
mov
mov
mov
xlat
in
repz
fsubl
or
and
addr16
or
dec
fstpt
sbb
and
xchg
icebp
pop
sub
jns
mov
jns
push
mov
clc
push
lret
cmpsl
cmpsb
in
xchg
in
fs
sub
lcall
dec
aas
jp
repz
push
sbb
dec
fldt
cmp
sub
in
notl
test
repz
sbb
imul
aad
mov
cmp
aaa
sub
pop
cwtl
daa
lret
std
scas
idivl
inc
pop
dec
int
or
mov
dec
fbstp
or
cs
cmc
push
ficompl
and
movsb
and
jae
jb
jno
mov
idivl
jge
ja
mov
dec
adc
xor
push
adc
mov
out
nop
ja
inc
xor
cli
cltd
jb
ss
xchg
jb
in
dec
hlt
mov
push
mov
js
test
outsl
mov
scas
jns
inc
sti
cwtl
adc
leave
cmpsl
or
enter
ret
fs
dec
push
push
jbe
outsb
sarb
sarl
ret
mov
jl
outsl
adc
pop
mov
sbb
pop
xchg
sbb
pop
insb
jge
sbb
adc
adc
push
cli
lea
sub
cmp
mov
lcall
mov
in
fistl
outsb
in
out
adcl
pusha
inc
and
insl
data16
mov
sahf
or
mov
fimull
add
or
push
ds
cli
xchg
stc
popf
pop
xor
ret
xchg
mov
add
por
fwait
pop
mov
push
shlb
out
loop
mov
in
xor
mov
sbb
cmp
fstl
push
push
push
dec
xchg
fidivs
pushl
cmpsb
ss
jae
xchg
in
popa
mulb
loope
mov
xor
loope
pop
call
pop
and
adc
inc
imul
mov
and
loope
scas
lret
cld
loope
in
sbb
pushf
mov
sub
sub
mov
dec
adc
pop
orb
push
in
xlat
js
xor
aam
aad
mov
jecxz
cmp
lds
in
nop
cmpsl
mov
adc
sub
fdivr
lret
mov
push
mov
daa
jmp
xor
push
movsb
iret
out
loop
push
in
push
or
jp
or
cmc
jne
push
jg
ljmp
mov
lods
outsb
insb
adc
iret
fcmovnbe
dec
mov
xlat
cld
and
pop
push
neg
addr16
pusha
repnz
je
adc
sub
jg
scas
arpl
mov
mov
add
pop
repz
scas
inc
in
ret
movsl
jp
add
push
pop
push
pushf
push
incb
pop
shll
add
add
mov
clc
les
ja
out
jo
inc
mov
imul
jp
or
int
cmpsl
push
lock
outsb
js
push
imul
cmp
sbb
push
fwait
xchg
xchg
fistps
jo
in
vmwrite
movsb
sarb
int3
fs
mov
shl
test
movsl
sahf
dec
push
pusha
ret
and
mov
jns
jl
in
or
out
push
into
mov
or
xor
jbe
jbe
jmp
cmp
push
pop
sbb
roll
aad
cld
leave
fcomi
sub
or
xorl
mov
scas
adc
fistpll
lahf
add
lock
mov
inc
mov
xor
adc
pop
pop
push
mov
inc
jo
aam
cs
das
adc
sub
sarl
inc
out
inc
sub
in
push
lcall
xchg
and
out
jle
xor
jmp
pushf
push
cmpb
mov
push
call
lret
dec
fdivs
hlt
daa
test
popa
mov
int3
out
sub
mov
xchg
xor
fisttpl
daa
push
das
sbbl
ffreep
jnp
xchg
jg
sub
mov
stos
insl
mov
pusha
outsb
sbb
jb
mov
push
xchg
or
sbb
bound
fwait
stos
inc
jo
ret
insb
cmp
jnp
and
stos
rcl
mov
pop
sbb
es
sbb
ds
aam
jae
xchg
mov
or
and
iret
mov
in
add
jae
jmp
mov
es
pushf
jge
sahf
scas
in
push
lea
push
scas
pop
xor
sub
sti
fdivrl
adc
push
stos
insb
cwtl
loope
mov
into
and
add
decl
and
inc
in
xchg
sti
fcoml
jnp
or
or
aad
add
into
inc
in
jae
jb
mov
lods
cltd
cmp
lock
and
leave
out
stc
jne
mov
ljmp
imul
adc
push
adc
mov
pop
add
and
push
stos
pop
out
dec
out
int3
dec
mov
cmc
cltd
adc
sub
jae
inc
adc
xor
inc
lea
outsl
mov
push
xchg
cmp
cmpsl
xlat
mov
out
xchg
jmp
jge
mov
popf
popa
cmc
dec
xchg
lods
jmp
push
push
sbb
clc
sub
adc
std
cmpsb
mov
in
mov
imul
xor
movsb
sbb
adc
adc
mov
fstl
icebp
std
ret
jg
mov
lret
jo
jmp
divb
xlat
jno
or
movsb
repz
lret
jno
jl
repz
adc
ds
xor
mov
mov
sub
ss
movsl
mov
ja
mov
int3
sarl
test
sbb
lret
out
stc
sahf
mov
mov
rorb
cli
nop
sbb
outsl
gs
leave
in
popa
inc
sbb
adc
sub
ret
lods
jne
mov
sbb
addr16
sub
jle
pusha
lods
sti
sub
push
stc
or
fs
dec
inc
fdivrs
mov
bnd
std
push
cld
jno
inc
xchg
test
in
jle
sub
xor
mov
mov
adc
jne
out
fisubl
and
jp
push
jecxz
ret
ljmp
aad
push
push
xlat
mov
mov
pop
fldl
mov
loop
and
inc
push
dec
mov
addr16
xchg
inc
push
push
sbb
hlt
hlt
repnz
inc
mov
sbb
push
pop
inc
pop
mov
push
lock
inc
lods
push
je
inc
orb
dec
inc
cmc
mov
xchg
push
xchg
jl
and
popl
pop
leave
mov
jae
dec
cmpsb
dec
mov
ficoms
arpl
testl
and
xor
push
sbb
ljmp
test
xchg
push
jmp
leave
push
jae
movl
pushf
fisttpl
std
or
push
or
arpl
cmp
mov
xchg
insb
ds
inc
hlt
mov
jp
xchg
lret
ficoml
in
call
int3
divl
popa
pop
xor
cmp
iret
push
mov
movsb
push
sub
add
and
and
dec
add
bound
outsb
or
pop
mov
cmpsl
fcmovnb
fildl
stos
mov
ljmp
xchg
lcall
shll
pop
mov
xchg
add
xlat
bound
inc
sbb
stos
mov
hlt
and
icebp
dec
int
pop
mov
push
lds
out
mov
inc
cmp
sbb
push
test
inc
rcrl
sbb
call
cmp
movsl
push
jle
mov
adc
loop
stos
push
fcmovnu
cmp
jne
popa
jp
dec
movsb
xchg
adc
and
adc
sbb
jb
ret
xor
or
and
and
movl
aad
push
pop
in
or
mov
add
mov
add
pop
xor
push
jp
out
in
xchg
push
out
iret
mov
or
nop
adc
iret
mov
mov
das
ret
xchg
fnstcw
scas
lcall
aas
jg
inc
sbb
pushf
push
int
aam
loop
stc
lret
inc
outsl
sbb
jae
ret
and
pop
pop
orb
and
push
pop
cmp
push
lret
orb
xchg
fistpl
iret
fcom
in
clc
cmp
je
ljmp
dec
in
xchg
jmp
jbe
fistps
dec
or
inc
adc
insl
jmp
rcrl
cld
or
sbb
rol
or
xchg
stos
dec
xchg
pop
and
jb
jecxz
fsubs
ljmp
push
roll
or
pop
or
fsub
arpl
mov
xor
out
or
push
inc
push
fildl
xchg
sarb
adc
movsb
dec
aas
inc
sti
iret
rcrb
xchg
arpl
xor
mov
rcr
ret
ja
sub
arpl
cmpsl
mov
sbb
mov
sbb
shrl
fisttps
mov
out
mov
adc
je
je
pop
sbb
inc
or
xorb
pop
out
push
lods
std
in
das
movsb
sbb
aas
fucomip
xacquire
in
mov
add
call
push
jl
xor
fimuls
sbb
pop
cmp
cld
add
imul
test
sarb
push
mov
dec
cmp
ja
repz
mov
das
fstl
in
pop
mulb
xchg
push
andl
lock
fwait
dec
inc
imul
outsb
in
jp
sub
add
and
in
jae
inc
aam
js
jmp
in
inc
iret
mov
stc
push
inc
jp
shrb
or
inc
and
sbb
inc
fbld
cmpsl
out
sub
mov
dec
jecxz
std
out
or
mov
add
idivl
cld
cmpsb
jmp
mov
cmp
movb
insl
cltd
mov
insb
loope
xchg
push
insb
daa
sub
inc
popa
inc
push
lcall
out
or
test
pop
jns
into
sahf
push
pop
xor
ljmp
call
ds
das
add
jbe
jl
pop
mov
call
pop
push
sbb
das
pop
mov
inc
outsb
in
cmp
inc
rcr
enter
test
sub
movsl
fdivl
adc
sar
cmc
mov
iret
jno
repz
dec
fisubrl
dec
mov
mov
fldt
pop
aas
shl
and
xchg
cmpsb
xchg
movsl
add
xor
jns
xchg
dec
add
dec
push
dec
pop
mov
addr16
mov
pop
jns
and
xchg
test
lods
sbb
jnp
ja
ja
inc
repnz
lds
outsb
negb
jne
out
imul
ret
cmp
leave
xlat
adc
jecxz
and
imul
add
imul
sahf
adc
push
sbb
dec
cmp
add
in
punpcklbw
lret
or
fildl
and
mov
cld
stos
enter
pop
cmp
ja
pushf
cmp
add
push
and
mov
push
mov
outsb
and
sbb
stos
dec
popa
adc
dec
cmp
out
jl
add
pop
inc
xchg
mov
push
out
js
mov
mov
in
push
dec
lea
xor
and
xor
data16
sbb
jae
iret
mov
mov
cmc
pop
xor
ss
dec
mov
hlt
imul
dec
lea
add
push
out
pusha
cltd
shrl
jle
iret
xchg
pop
push
popf
stos
in
gs
test
scas
enter
mov
jae
aad
cmp
hlt
xor
mov
pusha
pop
in
cmp
xorl
mov
ja
out
stc
ljmp
fildl
out
rcrb
and
mov
testb
jb
negb
jg
popl
or
pop
cmp
test
ds
nopl
inc
es
inc
jge
push
fnsave
xchg
aam
gs
lcall
xor
mov
pop
push
outsl
lret
gs
cmp
mov
mov
sbb
sub
adc
pop
and
inc
sahf
aad
cli
sbb
push
adc
push
je
repz
std
imul
js
repz
xor
dec
shrl
jl
data16
mov
loop
in
xchg
movsbl
iret
mov
add
xor
loope
popf
out
dec
shll
aam
popf
xor
sbb
mov
adc
xor
push
jb
xchg
cmpsb
mov
je
adc
mov
dec
mov
mov
mov
mov
divb
pop
push
data16
jecxz
sti
add
mov
call
mov
scas
xor
and
out
pop
cmp
insb
cmpb
lret
pop
jo
cli
mov
sahf
mov
das
and
pusha
adc
xor
cwtl
ret
andb
inc
mov
mov
xchg
ss
jg
sbb
jmp
inc
movsb
jb
scas
mov
cli
pop
subl
xchg
pushf
inc
hlt
sbb
add
inc
xchg
dec
adc
es
sbbl
dec
adc
negl
data16
jl
jge
dec
adc
mov
adc
aad
dec
int
stos
mov
dec
roll
sbbl
jns
mov
cmpsb
or
pop
mov
into
inc
xor
lret
nop
dec
daa
push
push
gs
pusha
inc
sbb
push
cld
test
repz
testb
mov
mov
pusha
jmp
inc
aad
daa
fwait
dec
enter
mov
jo
fcomip
inc
jle
cmc
roll
idivl
pop
lret
jo,pn
xchg
jo
cltd
cmpl
in
out
xor
xor
pop
xor
mov
in
jl
mov
sbb
cmc
pushf
mov
scas
enter
in
jecxz
icebp
movsb
mov
push
xchg
pusha
cwtl
les
sub
mov
pop
fucomi
or
push
cmc
sbb
pushf
popa
xchg
fdivr
dec
rcl
lods
bound
sbb
push
repz
pop
sub
mov
fnstcw
pop
add
fidivrs
out
jecxz
push
icebp
pop
aaa
pop
sub
adc
scas
cmp
lods
and
imul
xlat
add
mov
adc
mov
mov
sbb
and
shrl
and
pop
adc
mov
sahf
ret
push
pop
jo
daa
and
repz
push
and
not
xchg
lods
cld
mov
sbb
lahf
test
inc
dec
hlt
movsl
xchg
popf
cmpsb
test
add
jp
or
iret
sub
jns
and
pop
push
bound
or
and
or
ret
jecxz
test
je
sti
or
idivl
push
and
ret
insb
and
pop
and
adc
dec
dec
fiadds
inc
push
out
pop
cmpsb
ficompl
sahf
jmpw
inc
sub
adc
and
mov
push
mov
das
sub
push
je
cmp
out
push
daa
movsb
inc
dec
mov
dec
mull
loope
inc
daa
fnstenv
and
mov
inc
ljmp
ljmp
add
mov
fdivrl
mov
inc
adc
lds
xor
popf
ss
or
sub
jmp
push
dec
cmc
mov
jecxz
insb
pop
jmp
mov
aaa
insl
fcomps
dec
push
lcall
stos
adc
aam
cmpsl
repz
jnp
pusha
mov
xchg
adcb
std
inc
push
shl
dec
sub
lds
imul
and
mov
out
sbb
jne
es
pop
push
dec
pop
pop
xor
test
arpl
mov
aas
outsl
aam
test
push
cmp
add
push
sub
mov
sbb
add
daa
push
ror
imul
lret
push
mov
xchg
inc
xchg
adc
mov
movl
unpcklps
shl
or
pop
xchg
lods
cwtl
or
in
inc
fwait
pop
mov
in
mov
test
stos
add
cld
hlt
dec
cmp
or
aaa
out
jne
mov
mov
xor
xor
lock
out
push
cld
adc
faddp
mov
or
add
rorl
push
out
xchg
and
mov
repz
mov
mov
mov
dec
stos
hlt
ffreep
test
mov
mov
sub
and
push
in
bound
cwtl
movsb
out
inc
clc
sbb
pop
mov
incl
xlat
insl
sub
mov
jl
xchg
negb
dec
sti
dec
add
lcall
sub
stos
insl
mov
jmp
dec
jnp
push
test
mov
sbb
sub
jge
fwait
stos
add
movsl
lock
dec
fimuls
or
inc
ljmp
cmc
sbb
add
jne
in
in
aas
ds
js
jae
push
loope
xor
incb
or
sub
jno
test
mov
ss
fsubrl
sub
rorl
pop
and
mov
test
movsb
shlb
imul
jbe
or
push
push
sub
dec
mov
mov
movsl
call
xchg
cmp
iret
dec
jp
mov
xlat
jl
movsb
aaa
xchg
cmp
pop
sbb
mov
xor
pop
stos
pop
repnz
jp
inc
dec
ljmp
fstps
in
pop
mov
xor
inc
mov
iret
movsl
lcall
sub
pop
insl
ljmp
jno
adc
or
stc
test
loope
repz
ss
cmpl
pushf
push
lahf
jmp
xor
insb
cli
jecxz
cmpl
inc
xor
and
and
rorb
inc
aas
sti
mov
push
adc
movsb
fstl
daa
pushf
adc
push
aam
stc
fiadds
mov
and
daa
mov
push
adc
xchg
lock
inc
inc
inc
cwtl
xor
pop
cli
inc
sahf
pop
push
and
pop
std
subl
and
adc
aam
dec
in
int
cmp
pop
out
cmp
mov
divb
movsb
adc
into
push
shlb
movlhps
subb
push
int3
mov
int
xchg
cmp
xchg
data16
jle
mov
xchg
sub
ljmp
cmpsb
cwtl
push
negl
add
test
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
lods
push
fimull
sbb
add
nop
cmp
idiv
js
adc
cmp
lcall
and
cs
loopne
xor
lcall
fdivrl
popa
dec
xchg
test
pop
pusha
fndisi(8087
leave
sbb
inc
cmp
sbb
xchg
push
mov
fildl
repnz
int3
jns
push
adc
dec
add
aaa
push
jno
mov
pop
or
in
add
dec
add
inc
pusha
lret
dec
xchg
jl
and
insl
dec
ret
lretw
mov
pop
jae
dec
dec
ja
ja
mov
pop
jg
mov
xor
dec
sub
stos
mov
sarl
pop
inc
mov
pop
mov
popf
jne
inc
das
cmp
inc
add
repnz
movsl
xchg
inc
inc
mov
aas
xor
int3
xchg
sahf
mov
movsl
jecxz
mov
das
dec
hlt
push
jle
sbb
jno
mov
data16
jg
into
or
cs
pop
sub
cmp
push
les
cmp
repz
cwtl
add
add
jp
fiaddl
pop
js
push
sbbb
or
arpl
cld
scas
ss
into
ret
stc
pushf
ret
xor
cli
adc
or
and
push
adc
out
cwtl
mov
arpl
dec
daa
or
xor
or
push
dec
inc
lahf
ljmp
rcl
rclb
xor
sub
xchg
pop
xchg
inc
pop
mov
xchg
push
mov
add
dec
xchg
shlb
arpl
mov
xchg
je
cmp
or
and
int
test
fildll
push
clc
jle
test
sbb
and
into
jae
sub
jl
jns
mov
push
inc
mov
mov
insb
cmpsb
xchg
push
scas
xor
add
jg
mov
xor
cmp
or
ss
movsb
pop
dec
sbb
sub
hlt
in
add
xor
xor
clc
lret
inc
pop
push
push
xchg
lret
sbb
stos
or
inc
mov
cmp
fsubs
push
push
jg
cmpsl
mov
sbbl
jl
or
inc
mov
mov
sarl
in
mov
mov
add
shll
lea
sbb
icebp
or
out
lret
fistl
or
sbb
es
fstpt
shlb
mov
out
jno
jmp
addl
cmc
ret
sar
add
cmp
xchg
inc
sub
adc
je
jle
mov
mov
xchg
xor
pop
mov
jae
inc
fistl
rcl
mov
divl
mov
mov
sbb
inc
push
xor
icebp
inc
adcl
loope
cmp
ljmp
mov
fwait
sbb
cmp
fsts
testl
cmp
jl
pop
mov
or
mov
in
push
sub
xchg
pop
repnz
mov
pop
xchg
fcomps
xor
leave
clc
sbb
jecxz
imul
xchg
sti
les
push
add
dec
mov
xchg
cmpsb
test
cltd
push
insb
test
mov
xor
fwait
mov
jno
sub
pusha
push
movsl
cld
ret
icebp
inc
das
movsl
out
adc
pop
divb
call
mov
fidivs
movsl
add
mov
inc
jae
pop
aam
pop
loopne
mov
push
clc
sbb
outsl
add
push
dec
bound
movsb
outsb
pop
mov
xor
mov
pusha
dec
testl
hlt
in
lea
iret
jp
movsb
test
imul
pop
jae
jbe
or
inc
adc
outsb
sbb
leave
in
popf
lcall
aam
scas
cmp
push
lret
xchg
sahf
cltd
mov
imul
pop
fwait
leave
jmp
mov
dec
dec
fnsave
testb
scas
mov
xor
test
jo
cli
xorl
cmp
shrl
add
scas
push
adc
cmp
dec
push
sbb
and
and
add
popf
mov
test
mov
cmp
sarb
cmpb
xchg
or
stc
and
mov
sub
scas
xor
pop
push
add
xorl
jecxz
cli
repz
out
jbe
mov
popa
lods
xor
and
mov
outsl
pop
mov
sti
xchg
arpl
in
adc
inc
cli
hlt
add
popf
xor
lds
xchg
test
jmp
xchg
push
hlt
stc
mov
test
push
test
pusha
adc
repz
fwait
cs
dec
cmpl
inc
sbb
or
nop
or
push
lods
jae
gs
dec
das
lea
mov
aas
pop
xchg
popf
xchg
out
dec
push
imul
sub
pop
addr16
pop
sub
or
adc
lods
imul
sub
mov
dec
adc
mov
push
mov
mov
in
xor
icebp
int3
es
jno
pop
mov
into
std
popa
js
jnp
clc
int3
mov
push
cmp
jbe
cmp
imul
jle
sbb
cmp
push
icebp
imul
adc
xchg
adc
psubsb
je
cmpsl
leave
test
jle
xchg
mov
xor
cmp
pop
and
jno
and
jno
pop
sbb
das
test
es
mov
xchg
push
sbb
fmuls
nop
fcoml
out
addl
mov
ficoms
enter
mov
loopne
pop
inc
add
sbb
sti
mov
pop
das
adcl
jne
dec
cmc
mov
jecxz,pt
loope
lods
push
into
adc
push
movsl
pop
cmpsl
push
cltd
cmpsl
roll
sub
idivl
in
dec
mov
pop
lods
sub
cltd
sub
pop
and
jp
jge
loope
sbbb
stos
loopne
mov
sbb
loope
cmp
inc
mov
push
sub
sti
mov
jmp
inc
dec
aaa
out
xor
add
jbe
scas
mov
mov
insl
xchg
lret
sub
dec
ret
mov
sbbb
mov
test
cmp
jecxz
loop
pop
fsubr
rolb
xchg
pop
mov
mov
fdivrs
andb
and
adc
popa
jns
aaa
mov
gs
jnp
adc
sti
mov
xlat
loop
das
mov
sarb
add
adc
push
pop
daa
cmp
xchg
xchg
add
cs
inc
sbb
outsb
push
mov
test
mov
push
xchg
xor
stc
aas
sub
fwait
scas
je
lods
push
sub
or
jnp
xlat
arpl
mov
mov
leave
test
add
aad
out
push
movsb
lock
and
adc
fimull
jbe
and
lahf
add
shlb
aas
mov
mov
mov
test
movsb
rorl
xchg
push
lcall
adc
dec
and
and
mov
and
dec
repnz
push
jl
in
imull
sub
push
mov
lock
sti
xchg
mov
jecxz
xor
xchg
rcl
movsl
xchg
push
mov
insb
or
sbb
inc
pop
pusha
push
add
outsb
mov
adc
out
leave
out
int3
sub
adc
inc
cs
sbb
dec
mov
pop
sub
pushf
or
push
rcrb
nop
or
ds
mov
rolb
bound
or
sbb
movsl
stc
pushf
push
jb
lcall
sbb
aad
dec
bound
loopne
sbb
divl
fsubl
jg
mov
mov
xor
lcall
mov
xchg
gs
xlat
cmc
int3
xlat
cmp
jo
insb
jbe
sbb
mov
sbb
xorl
xchg
jge
cmp
cmpsl
sbb
mov
push
add
dec
insl
cmpsl
mov
ret
xor
sub
daa
aam
jg
mov
addb
stos
mov
jb
or
cmp
stos
fprem1
jmp
jg
xchg
or
pop
les
sbb
cvtdq2ps
xchg
jb
mov
icebp
push
icebp
push
subb
cs
mov
cmp
or
mov
lahf
jecxz
push
mov
adc
cmovp
or
iret
insl
rcr
repz
enter
mov
iret
popf
push
scas
push
push
inc
packuswb
mov
mov
repnz
pop
sti
das
pop
test
jp
fldl
inc
data16
popf
mov
scas
xchg
daa
ja,pn
popa
mov
arpl
arpl
mov
enter
in
pop
cmp
mov
mov
jae
push
and
popf
dec
leave
enter
jp
daa
repnz
mov
andb
fimuls
inc
or
jae
fwait
xor
pop
mov
adcl
ds
push
sub
ret
lods
int3
stc
pop
mov
lret
jp
cmp
das
push
daa
lret
lods
cmp
jno
sbb
in
dec
loope
outsl
and
pusha
dec
ret
mov
or
and
lock
fiadds
lret
push
or
adc
cmpsl
pop
in
mov
mov
hlt
and
nop
xchg
lods
fisubl
leave
pop
mov
clc
sbb
mov
gs
dec
cmp
cmp
mov
jle
cmp
pop
fbstp
stos
int
outsl
fwait
lahf
stos
xor
aam
daa
add
cmp
jmp
addr16
stos
add
loop
scas
stc
pusha
xchg
xchg
xchg
xor
xchg
adc
or
sbb
inc
pop
testl
xchg
hlt
dec
xor
je
movsl
bound
call
jg
cmp
inc
scas
imul
pop
out
lcall
xchg
test
jmp
sbb
push
sbb
mov
es
mov
pop
cmp
push
aam
insl
mov
inc
rcr
jg
mov
je
mov
pop
jb
std
or
jns
lea
jbe
inc
sbb
pop
shrb
xchg
adc
lret
xor
adc
pop
or
into
push
fiaddl
jbe
dec
repz
jl
movsb
in
mov
test
push
sub
mov
lret
je
and
fwait
sahf
pop
jno
pop
inc
gs
cmp
xchg
mov
jno
mov
add
rorb
ss
push
pop
mov
cmpsl
icebp
adcl
xchg
fcmovnbe
cmp
lret
sbb
dec
rclb
ret
add
das
pop
dec
arpl
jge
pop
push
push
cwtl
loop
cvtps2pi
dec
gs
xlat
mov
ja
rcrb
xchg
push
test
sbb
inc
jbe
sbb
hlt
add
cmp
xor
popf
aam
adc
sarl
ljmp
push
rcrl
mov
cmp
popf
movsl
mov
sti
sahf
imul
imul
repnz
sub
jge
adc
ds
xor
outsl
mov
scas
in
lcall
jl
aas
jo
shl
test
aam
mov
dec
repnz
daa
mov
enter
lahf
inc
test
shll
and
xchg
fidivl
xor
out
negb
lds
push
test
pslld
scas
mov
pop
jnp
cmp
sbb
jns
int3
lods
jp
cmp
and
sbb
jne
sub
call
outsl
mov
dec
mov
push
mov
sahf
mov
mov
push
lret
test
pop
inc
mov
cmpsb
add
sub
sub
aaa
hlt
pop
loopne
jmp
jo
push
leave
in
imul
cmpsl
clc
or
mov
pop
adc
in
jo
outsl
fisubrs
pushf
xchg
pop
roll
add
movsl
out
stc
xor
pop
movsb
adc
pop
lods
pusha
sub
and
xchg
in
cmp
or
fisubrl
pop
cmpsl
or
iret
mov
lds
mov
push
mov
pop
cmpsl
ss
lret
mov
clc
test
pop
cmp
fiadds
or
xor
xor
mov
jp
div
sub
jle
xor
adc
dec
insl
push
cmp
icebp
inc
ss
not
mov
push
pop
in
or
rcrb
jmp
in
in
pushf
fistpll
dec
fsubr
adc
jns
mov
int3
icebp
xchg
nop
stos
lahf
mov
jae
dec
testl
jl
dec
jb
dec
sbb
enter
inc
adc
push
cmp
pop
add
sahf
enter
arpl
iret
push
add
enter
out
jp
mov
cli
sub
cmp
xor
mov
push
mov
jno
sahf
xchg
out
gs
aam
in
loopne
out
insl
dec
clc
mov
xchg
sub
jp
mov
dec
out
ja
and
ret
cld
out
jo
xor
lods
push
in
bound
xlat
xlat
jecxz
jle
ja
mov
and
jns
mov
mov
incb
pop
add
ja
ljmp
enter
sbb
cmp
pushf
push
or
jp
or
ljmp
inc
jno
push
push
mov
inc
lahf
loopne
xchg
xchg
jae
fs
fiaddl
sbb
testl
es
cmc
xchg
jnp
or
leave
cwtl
rcr
pop
ret
ret
outsl
loopne
xor
cmp
jns
out
pop
pop
or
cld
xchg
jo
fistpl
add
fs
fwait
jbe
jae
cli
into
dec
cmp
pop
leave
imul
jbe
nop
cmc
loopne
nop
pop
jo
adc
mov
sub
push
cmp
or
mov
loopne
mov
mov
dec
subb
or
aad
xor
and
in
ror
inc
push
sub
pusha
mov
and
mov
sbb
int3
push
pop
lods
cwtl
lods
jne
lock
add
adc
ret
adc
sbb
arpl
enter
fidivrs
push
jne
mov
jno
loopne
mov
pop
push
js
mov
push
mull
sub
push
call
ds
cmp
leave
mov
sub
icebp
sti
mov
sub
psubusw
and
cmpsw
dec
cmp
or
sbb
mov
or
jae
inc
jb
adc
in
pop
sbb
fisttpll
mov
loop
push
sub
dec
dec
test
sub
icebp
js
jl
loop
cmc
xor
lret
fwait
test
lret
add
ljmp
cwtl
mov
nop
jge
sbb
int
pop
cmp
cmp
inc
sub
jae
sarb
daa
jnp
sbb
adc
arpl
pop
inc
add
jae
inc
jo
dec
push
xor
pop
cltd
cmp
or
rcrl
lds
xor
xor
fsubrl
mov
in
pop
sbb
pop
xchg
out
or
cmp
xchg
dec
cvtps2pd
cmc
sub
push
je
jmp
in
xchg
ljmp
and
scas
push
lretw
in
test
in
sbbl
lret
add
mov
pop
in
and
inc
mov
mov
sub
adc
out
sbb
mov
cmpsl
dec
mov
mov
sub
push
sbb
aad
pop
lahf
test
into
mov
sbb
hlt
enter
mov
dec
rclb
sub
cmp
or
dec
bound
pop
cld
dec
lock
and
scas
inc
xchg
jne
ja
cmp
dec
inc
js
in
or
mov
adc
test
icebp
imul
jbe
cmp
aas
pop
icebp
cmc
dec
imul
cmpsb
or
xchg
inc
mov
fildl
xchg
aad
repnz
hlt
mov
push
sbb
das
adc
push
movsb
adc
inc
pop
jmp
inc
and
mov
lods
rcrb
push
mov
repz
out
mov
xchg
cmpsl
mov
pop
je
lods
dec
int3
mov
jbe
int3
cmp
leave
icebp
test
aas
or
cltd
adc
xchg
mov
mov
jg
nop
mov
cmp
sbb
sbb
jne
test
add
jge
sbb
inc
jmp
enter
sbb
insb
leave
adc
mov
das
aas
dec
std
sbb
sti
fprem
nop
or
stos
mov
movsl
inc
add
loop
addr16
cmp
and
push
cmp
fdivl
prefetch
aam
sbb
sub
mov
cltd
and
hlt
inc
test
mov
jo
and
aad
and
mov
sub
lea
fdivl
lods
cld
xchg
mov
lahf
mov
int3
clc
in
push
psrlq
or
xlat
rcrb
cmc
rcl
xor
xor
and
aad
inc
pop
orl
pop
fiadds
hlt
pop
mov
or
sbb
xor
xchg
in
bound
in
add
cltd
add
adc
jae
add
out
xchg
fdivrl
mov
pop
cmp
sbb
sbb
fwait
mov
xor
lea
dec
icebp
push
fcomps
mov
outsb
data16
push
xor
fs
adc
aam
jno
jnp,pn
mov
push
inc
mov
add
lock
bnd
adc
pop
xchg
aaa
jbe
push
stos
shrl
shr
add
test
or
dec
xor
jae
fsubrs
dec
or
testl
jns
mov
imul
xor
hlt
sahf
cltd
push
popl
pusha
xchg
pop
es
push
mov
ja
addr16
or
leave
sbb
cmpsl
mov
jnp
cmp
popf
adc
int3
jge
in
jge
rcl
loope
adc
or
or
scas
das
xchg
orb
adc
pop
rorb
hlt
or
cwtl
movsl
std
dec
shrl
pop
aas
xchg
lds
pop
sub
bound
push
mov
rcr
mov
inc
mov
cmp
loop
test
gs
bound
int
test
movsl
xlat
out
add
sub
sub
scas
and
jmp
aaa
sbb
cmpsl
dec
jbe
mov
aaa
loop
loope
in
mov
xor
cmp
and
cmp
jae
lahf
add
lods
ret
jp
and
mov
push
daa
lods
out
outsb
into
mov
roll
out
fnstenv
call
xchg
push
mov
xlat
mov
inc
push
fstl
jp
mov
std
jp
or
in
dec
stos
cwtl
push
lock
mov
enter
jecxz
inc
enter
movsl
push
adc
mov
movsb
pushl
out
mov
je
xor
movsb
inc
movsb
dec
into
dec
jle
cwtl
dec
dec
in
call
cwtl
push
clc
dec
sbb
or
and
sbb
into
aaa
scas
inc
les
add
test
sub
mov
mov
mov
xchg
xchg
das
imul
fnsave
xchg
mov
leave
cmp
loopne
test
inc
sub
and
cli
and
test
and
or
sarb
mov
xor
cli
icebp
dec
jnp
jl
movsb
andl
inc
mov
mov
pop
pop
add
add
push
loopne
adc
push
cmpsl
xchg
xchg
mov
popf
fsubr
cmp
add
add
mov
inc
lods
xor
and
pusha
mov
push
data16
jl
sbb
add
pop
inc
lret
fs
cmpsl
mov
mov
push
sti
xchg
push
popa
dec
sub
fcoml
addr16
pop
movsb
stc
icebp
jecxz
test
pushf
adc
scas
lods
xchg
inc
or
es
xor
outsb
adc
xor
add
add
dec
mov
in
pop
shr
movsb
pop
lock
pop
into
lret
jne
adc
add
or
mov
adc
daa
sbb
test
pop
pop
in
pushw
mov
mov
mov
and
jnp
cmp
sub
push
loopne
lret
pop
lds
shl
jno
mov
stos
mov
faddp
or
leave
mov
shrb
pop
or
clc
lea
popa
mov
fsubr
jb
xchg
push
aam
xchg
into
lods
dec
test
das
out
xchg
and
les
pop
sub
lcall
push
jbe
and
or
repz
sahf
xchg
sarb
sbb
stos
roll
and
mov
movsb
mov
mov
xor
mov
cmpsb
into
das
fmul
cmp
enter
out
jns
lret
int
data16
mov
lods
inc
xchg
cmpsb
hlt
stc
cmc
sbb
les
mov
notb
jbe
cmp
lret
ljmp
cmpsb
add
dec
inc
cltd
pop
mov
or
jle
jnp
insl
shrl
push
cmpsl
sti
inc
fstpl
mov
mov
mov
push
inc
mov
aas
mov
push
push
push
inc
sbb
xor
mov
dec
push
mov
sbb
out
mov
test
sub
xchg
mov
push
cmp
push
pop
jb
or
jecxz
mov
pop
mov
adc
mov
push
xchg
xchg
in
in
shl
xchg
sti
in
xchg
push
repz
xor
xchg
aad
stos
sub
xor
mull
mov
cmpsl
pop
lock
pop
xchg
out
inc
sbb
enter
inc
repz
leave
vmread
pop
mov
xor
xor
mov
add
in
dec
pop
call
faddl
repz
rorb
fbstp
ss
inc
movb
mov
insb
imul
cmc
test
repz
xor
jae
push
jg
arpl
push
jns
pop
or
jo
out
or
adc
xchg
out
movsl
sub
test
jge
icebp
dec
lea
test
pop
sub
mov
mov
xor
push
dec
jle
les
dec
shrl
sarb
add
mov
call
sarl
aas
enter
ss
cmc
dec
dec
xor
imul
sub
xchg
sub
or
lret
fmuls
loop
int
negb
sbb
testl
leave
sbb
and
insl
fisubrl
mov
stc
fnstenv
fs
dec
mov
sbb
fwait
jp
lods
jecxz
and
cwtl
jae
dec
fcmovnbe
jno
movsb
sbb
mov
ss
gs
xchg
and
xchg
mov
sbb
cmp
pop
stos
cld
mov
or
out
pushf
inc
or
xor
push
bound
sahf
imul
push
xchg
shlb
inc
sbb
xorl
inc
cmp
sub
push
push
xchg
cmp
std
and
repnz
cmc
and
ds
imul
daa
lea
rol
inc
sub
pop
and
jg
insl
sub
push
lds
je
jecxz
push
mov
or
mov
std
stos
mov
je
push
out
idiv
cli
mov
push
into
inc
xlat
and
fisttpl
dec
fadd
inc
call
cmpb
fldl
mov
mov
sbb
fidivrs
int3
scas
loopne
out
add
sub
nop
enter
lods
pop
repnz
sbb
xchg
sbb
push
pop
jno
cmc
cmp
xor
lock
jmp
adc
shlb
adc
pusha
rcrb
inc
sub
push
pushf
stos
enterw
addl
std
mov
ret
dec
cmp
pop
rcrl
loop
cwtl
pushf
aam
scas
mov
pushl
add
jns
insl
pop
negb
and
js
add
leave
xchg
movsb
cwtl
test
push
push
jmp
mov
xchg
push
push
pop
icebp
mov
leave
xchg
xchg
cmpl
sarl
ljmpw
mov
and
popf
pop
je
sti
outsl
lret
jmp
jne
jp
iret
jnp
out
mov
fwait
sbb
mov
cmp
arpl
mov
nop
adc
cltd
stos
arpl
ja
push
mov
xchg
scas
adc
les
push
shll
popf
xor
cmp
nop
rcrb
fidivrs
xor
jp
xchg
sub
mov
repz
adc
add
add
std
push
mov
push
push
aad
cmpb
push
xor
movsb
jae
jb
lock
mov
xor
cld
mov
fimull
mov
insl
ficoml
push
mov
push
shll
jnp
mov
lahf
repz
xchg
jl
enter
xor
arpl
pushf
aad
subb
xor
sbb
mov
adc
inc
push
pushf
mov
lds
adc
popf
stc
xchg
pushf
mov
ret
mov
nop
scas
jnp
inc
and
jle
repnz
dec
cmp
pop
sub
jno
fwait
pop
dec
mov
out
pop
int3
je
lahf
loopne
and
mov
jnp
mov
movsb
push
scas
in
xchg
mov
fucomp
int3
in
sbb
lock
adc
jnp
xchg
pop
test
fcoml
test
xchg
push
sbb
fs
sarl
idiv
pop
ret
mov
add
call
sub
push
sub
fmull
rclb
xchg
xor
bound
jnp
cwtl
mov
and
inc
std
mov
dec
aam
movsb
cmp
popa
pop
in
sarl
jnp
outsb
pop
cltd
js
adc
inc
or
scas
insb
push
sahf
xchg
adc
or
add
movsl
in
mov
daa
cmc
insb
xchg
movsl
cwtl
outsb
aam
inc
mov
sti
je
mov
into
pop
cmp
aaa
adc
mov
and
repz
popl
scas
scas
push
jne
dec
pop
jmp
cli
cli
sbb
ficompl
add
movsb
pusha
clc
hlt
jo
cmp
add
out
aam
mov
test
jo
cs
nop
jge
cmpsl
add
sbbb
pushf
in
lods
movl
je
popf
fisttpl
pop
in
xor
icebp
lds
or
iret
addr16
cmp
mov
push
push
popf
inc
test
das
dec
add
enter
fwait
inc
cmp
jle
inc
loope
shlb
jnp
push
xchg
push
iret
ror
pusha
pop
stos
xor
inc
mov
mov
clc
mov
or
mov
faddp
mov
cmp
out
sub
mov
dec
rclb
xchg
insl
add
cmpsb
xor
pop
repz
dec
lods
mov
ret
pop
aas
cmpl
adc
dec
add
nop
das
mov
adc
sbb
cmpsl
inc
imul
insl
mov
cmp
scas
stc
in
mov
mov
test
lea
xor
jo
mov
jecxz
scas
ss
int
shrl
in
jle
mov
adc
and
ja
mov
sarl
xchg
je
rorb
xlat
fmuls
mov
push
je
xlat
outsb
pop
sarl
sbb
into
jg
jg
inc
push
adc
xorb
cltd
dec
add
cld
in
lret
in
addl
and
xchg
jecxz
pop
adc
cmpl
daa
dec
xor
ret
xor
add
mov
jge
add
jne
xor
stos
loope
add
push
call
or
fstl
and
pusha
popf
pop
cwtl
or
mov
lret
mov
add
mov
push
push
pop
and
sub
adc
pop
sahf
ret
popa
lret
mov
jecxz
pop
fnsave
aam
dec
int
xchg
cwtl
out
jg
imul
mov
icebp
cld
jle
repz
bound
lret
out
jne
adc
std
shlb
cltd
sarl
fsts
push
adc
pop
add
lods
push
lahf
mov
jo
jno
pop
outsb
cmp
adc
insl
or
xchg
imul
inc
loopne
lods
pop
inc
adc
movsl
jle
ja
repz
or
mov
test
xor
mov
sbb
mov
mov
out
movsl
fadds
mov
xorb
andb
adc
cmc
ja
mov
xchg
adc
pushf
and
pop
mov
cld
pop
adc
mov
mov
inc
push
jmp
mov
cmp
into
aam
jge
std
or
jge
notl
adc
mov
sub
push
cmp
pop
xor
lock
or
mov
int3
push
xor
pop
sbb
cmpb
mov
xchg
cmpsb
out
cli
jle
sbb
or
das
push
lea
jge
stos
andb
mov
jns
inc
sbb
lods
pop
gs
lds
inc
mov
mov
mov
xlat
in
repz
fsubl
or
and
addr16
or
dec
fstpt
sbb
and
xchg
icebp
pop
sub
jns
mov
jns
push
mov
clc
push
lret
cmpsl
cmpsb
in
xchg
in
fs
sub
lcall
dec
aas
jp
repz
push
sbb
dec
fldt
cmp
sub
in
notl
test
repz
sbb
imul
aad
mov
cmp
aaa
sub
pop
cwtl
daa
lret
std
scas
idivl
inc
pop
dec
int
or
mov
dec
fbstp
or
cs
cmc
push
ficompl
and
movsb
and
jae
jb
jno
mov
idivl
jge
ja
mov
dec
adc
xor
push
adc
mov
out
nop
ja
inc
xor
cli
cltd
jb
ss
xchg
jb
in
dec
hlt
mov
push
mov
js
test
outsl
mov
scas
jns
inc
sti
cwtl
adc
leave
cmpsl
or
enter
ret
fs
dec
push
push
jbe
outsb
sarb
sarl
ret
mov
jl
outsl
adc
pop
mov
sbb
pop
xchg
sbb
pop
insb
jge
sbb
adc
adc
push
cli
lea
sub
cmp
mov
lcall
mov
in
fistl
outsb
in
out
adcl
pusha
inc
and
insl
data16
mov
sahf
or
mov
fimull
add
or
push
ds
cli
xchg
stc
popf
pop
xor
ret
xchg
mov
add
por
fwait
pop
mov
push
shlb
out
loop
mov
in
xor
mov
sbb
cmp
fstl
push
push
push
dec
xchg
fidivs
pushl
cmpsb
ss
jae
xchg
in
popa
mulb
loope
mov
xor
loope
pop
call
pop
and
adc
inc
imul
mov
and
loope
scas
lret
cld
loope
in
sbb
pushf
mov
sub
sub
mov
dec
adc
pop
orb
push
in
xlat
js
xor
aam
aad
mov
jecxz
cmp
lds
in
nop
cmpsl
mov
adc
sub
fdivr
lret
mov
push
mov
daa
jmp
xor
push
movsb
iret
out
loop
push
in
push
or
jp
or
cmc
jne
push
jg
ljmp
mov
lods
outsb
insb
adc
iret
fcmovnbe
dec
mov
xlat
cld
and
pop
push
neg
addr16
pusha
repnz
je
adc
sub
jg
scas
arpl
mov
mov
add
pop
repz
scas
inc
in
ret
movsl
jp
add
push
pop
push
pushf
push
incb
pop
shll
add
add
mov
clc
les
ja
out
jo
inc
mov
imul
jp
or
int
cmpsl
push
lock
outsb
js
push
imul
cmp
sbb
push
fwait
xchg
xchg
fistps
jo
in
vmwrite
movsb
sarb
int3
fs
mov
shl
test
movsl
sahf
dec
push
pusha
ret
and
mov
jns
jl
in
or
out
push
into
mov
or
xor
jbe
jbe
jmp
cmp
push
pop
sbb
roll
aad
cld
leave
fcomi
sub
or
xorl
mov
scas
adc
fistpll
lahf
add
lock
mov
inc
mov
xor
adc
pop
pop
push
mov
inc
jo
aam
cs
das
adc
sub
sarl
inc
out
inc
sub
in
push
lcall
xchg
and
out
jle
xor
jmp
pushf
push
cmpb
mov
push
call
lret
dec
fdivs
hlt
daa
test
popa
mov
int3
out
sub
mov
xchg
xor
fisttpl
daa
push
das
sbbl
ffreep
jnp
xchg
jg
sub
mov
stos
insl
mov
pusha
outsb
sbb
jb
mov
push
xchg
or
sbb
bound
fwait
stos
inc
jo
ret
insb
cmp
jnp
and
stos
rcl
mov
pop
sbb
es
sbb
ds
aam
jae
xchg
mov
or
and
iret
mov
in
add
jae
jmp
mov
es
pushf
jge
sahf
scas
in
push
lea
push
scas
pop
xor
sub
sti
fdivrl
adc
push
stos
insb
cwtl
loope
mov
into
and
add
decl
and
inc
in
xchg
sti
fcoml
jnp
or
or
aad
add
into
inc
in
jae
jb
mov
lods
cltd
cmp
lock
and
leave
out
stc
jne
mov
ljmp
imul
adc
push
adc
mov
pop
add
and
push
stos
pop
out
dec
out
int3
dec
mov
cmc
cltd
adc
sub
jae
inc
adc
xor
inc
lea
outsl
mov
push
xchg
cmp
cmpsl
xlat
mov
out
xchg
jmp
jge
mov
popf
popa
cmc
dec
xchg
lods
jmp
push
push
sbb
clc
sub
adc
std
cmpsb
mov
in
mov
imul
xor
movsb
sbb
adc
adc
mov
fstl
icebp
std
ret
jg
mov
lret
jo
jmp
divb
xlat
jno
or
movsb
repz
lret
jno
jl
repz
adc
ds
xor
mov
mov
sub
ss
movsl
mov
ja
mov
int3
sarl
test
sbb
lret
out
stc
sahf
mov
mov
rorb
cli
nop
sbb
outsl
gs
leave
in
popa
inc
sbb
adc
sub
ret
lods
jne
mov
sbb
addr16
sub
jle
pusha
lods
sti
sub
push
stc
or
fs
dec
inc
fdivrs
mov
bnd
std
push
cld
jno
inc
xchg
test
in
jle
sub
xor
mov
mov
adc
jne
out
fisubl
and
jp
push
jecxz
ret
ljmp
aad
push
push
xlat
mov
mov
pop
fldl
mov
loop
and
inc
push
dec
mov
addr16
xchg
inc
push
push
sbb
hlt
hlt
repnz
inc
mov
sbb
push
pop
inc
pop
mov
push
lock
inc
lods
push
je
inc
orb
dec
inc
cmc
mov
xchg
push
xchg
jl
and
popl
pop
leave
mov
jae
dec
cmpsb
dec
mov
ficoms
arpl
testl
and
xor
push
sbb
ljmp
test
xchg
push
jmp
leave
push
jae
movl
pushf
fisttpl
std
or
push
or
arpl
cmp
mov
xchg
insb
ds
inc
hlt
mov
jp
xchg
lret
ficoml
in
call
int3
divl
popa
pop
xor
cmp
iret
push
mov
movsb
push
sub
add
and
and
dec
add
bound
outsb
or
pop
mov
cmpsl
fcmovnb
fildl
stos
mov
ljmp
xchg
lcall
shll
pop
mov
xchg
add
xlat
bound
inc
sbb
stos
mov
hlt
and
icebp
dec
int
pop
mov
push
lds
out
mov
inc
cmp
sbb
push
test
inc
rcrl
sbb
call
cmp
movsl
push
jle
mov
adc
loop
stos
push
fcmovnu
cmp
jne
popa
jp
dec
movsb
xchg
adc
and
adc
sbb
jb
ret
xor
or
and
and
movl
aad
push
pop
in
or
mov
add
mov
add
pop
xor
push
jp
out
in
xchg
push
out
iret
mov
or
nop
adc
iret
mov
mov
das
ret
xchg
fnstcw
scas
lcall
aas
jg
inc
sbb
pushf
push
int
aam
loop
stc
lret
inc
outsl
sbb
jae
ret
and
pop
pop
orb
and
push
pop
cmp
push
lret
orb
xchg
fistpl
iret
fcom
in
clc
cmp
je
ljmp
dec
in
xchg
jmp
jbe
fistps
dec
or
inc
adc
insl
jmp
rcrl
cld
or
sbb
rol
or
xchg
stos
dec
xchg
pop
and
jb
jecxz
fsubs
ljmp
push
roll
or
pop
or
fsub
arpl
mov
xor
out
or
push
inc
push
fildl
xchg
sarb
adc
movsb
dec
aas
inc
sti
iret
rcrb
xchg
arpl
xor
mov
rcr
ret
ja
sub
arpl
cmpsl
mov
sbb
mov
sbb
shrl
fisttps
mov
out
mov
adc
je
je
pop
sbb
inc
or
xorb
pop
out
push
lods
std
in
das
movsb
sbb
aas
fucomip
xacquire
in
mov
add
call
push
jl
xor
fimuls
sbb
pop
cmp
cld
add
imul
test
sarb
push
mov
dec
cmp
ja
repz
mov
das
fstl
in
pop
mulb
xchg
push
andl
lock
fwait
dec
inc
imul
outsb
in
jp
sub
add
and
in
jae
inc
aam
js
jmp
in
inc
iret
mov
stc
push
inc
jp
shrb
or
inc
and
sbb
inc
fbld
cmpsl
out
sub
mov
dec
jecxz
std
out
or
mov
add
idivl
cld
cmpsb
jmp
mov
cmp
movb
insl
cltd
mov
insb
loope
xchg
push
insb
daa
sub
inc
popa
inc
push
lcall
out
or
test
pop
jns
into
sahf
push
pop
xor
ljmp
call
ds
das
add
jbe
jl
pop
mov
call
pop
push
sbb
das
pop
mov
inc
outsb
in
cmp
inc
rcr
enter
test
sub
movsl
fdivl
adc
sar
cmc
mov
iret
jno
repz
dec
fisubrl
dec
mov
mov
fldt
pop
aas
shl
and
xchg
cmpsb
xchg
movsl
add
xor
jns
xchg
dec
add
dec
push
dec
pop
mov
addr16
mov
pop
jns
and
xchg
test
lods
sbb
jnp
ja
ja
inc
repnz
lds
outsb
negb
jne
out
imul
ret
cmp
leave
xlat
adc
jecxz
and
imul
add
imul
sahf
adc
push
sbb
dec
cmp
add
in
punpcklbw
lret
or
fildl
and
mov
cld
stos
enter
pop
cmp
ja
pushf
cmp
add
push
and
mov
push
mov
outsb
and
sbb
stos
dec
popa
adc
dec
cmp
out
jl
add
pop
inc
xchg
mov
push
out
js
mov
mov
in
push
dec
lea
xor
and
xor
data16
sbb
jae
iret
mov
mov
cmc
pop
xor
ss
dec
mov
hlt
imul
dec
lea
add
push
out
pusha
cltd
shrl
jle
iret
xchg
pop
push
popf
stos
in
gs
test
scas
enter
mov
jae
aad
cmp
hlt
xor
mov
pusha
pop
in
cmp
xorl
mov
ja
out
stc
ljmp
fildl
out
rcrb
and
mov
testb
jb
negb
jg
popl
or
pop
cmp
test
ds
nopl
inc
es
inc
jge
push
fnsave
xchg
aam
gs
lcall
xor
mov
pop
push
outsl
lret
gs
cmp
mov
mov
sbb
sub
adc
pop
and
inc
sahf
aad
cli
sbb
push
adc
push
je
repz
std
imul
js
repz
xor
dec
shrl
jl
data16
mov
loop
in
xchg
movsbl
iret
mov
add
xor
loope
popf
out
dec
shll
aam
popf
xor
sbb
mov
adc
xor
push
jb
xchg
cmpsb
mov
je
adc
mov
dec
mov
mov
mov
mov
divb
pop
push
data16
jecxz
sti
add
mov
call
mov
scas
xor
and
out
pop
cmp
insb
cmpb
lret
pop
jo
cli
mov
sahf
mov
das
and
pusha
adc
xor
cwtl
ret
andb
inc
mov
mov
xchg
ss
jg
sbb
jmp
inc
movsb
jb
scas
mov
cli
pop
subl
xchg
pushf
inc
hlt
sbb
add
inc
xchg
dec
adc
es
sbbl
dec
adc
negl
data16
jl
jge
dec
adc
mov
adc
aad
dec
int
stos
mov
dec
roll
sbbl
jns
mov
cmpsb
or
pop
mov
into
inc
xor
lret
nop
dec
daa
push
push
gs
pusha
inc
sbb
push
cld
test
repz
testb
mov
mov
pusha
jmp
inc
aad
daa
fwait
dec
enter
mov
jo
fcomip
inc
jle
cmc
roll
idivl
pop
lret
jo,pn
xchg
jo
cltd
cmpl
in
out
xor
xor
pop
xor
mov
in
jl
mov
sbb
cmc
pushf
mov
scas
enter
in
jecxz
icebp
movsb
mov
push
xchg
pusha
cwtl
les
sub
mov
pop
fucomi
or
push
cmc
sbb
pushf
popa
xchg
fdivr
dec
rcl
lods
bound
sbb
push
repz
pop
sub
mov
fnstcw
pop
add
fidivrs
out
jecxz
push
icebp
pop
aaa
pop
sub
adc
scas
cmp
lods
and
imul
xlat
add
mov
adc
mov
mov
sbb
and
shrl
and
pop
adc
mov
sahf
ret
push
pop
jo
daa
and
repz
push
and
not
xchg
lods
cld
mov
sbb
lahf
test
inc
dec
hlt
movsl
xchg
popf
cmpsb
test
add
jp
or
iret
sub
jns
and
pop
push
bound
or
and
or
ret
jecxz
test
je
sti
or
idivl
push
and
ret
insb
and
pop
and
adc
dec
dec
fiadds
inc
push
out
pop
cmpsb
ficompl
sahf
jmpw
inc
sub
adc
and
mov
push
mov
das
sub
push
je
cmp
out
push
daa
movsb
inc
dec
mov
dec
mull
loope
inc
daa
fnstenv
and
mov
inc
ljmp
ljmp
add
mov
fdivrl
mov
inc
adc
lds
xor
popf
ss
or
sub
jmp
push
dec
cmc
mov
jecxz
insb
pop
jmp
mov
aaa
insl
fcomps
dec
push
lcall
stos
adc
aam
cmpsl
repz
jnp
pusha
mov
xchg
adcb
std
inc
push
shl
dec
sub
lds
imul
and
mov
out
sbb
jne
es
pop
push
dec
pop
pop
xor
test
arpl
mov
aas
outsl
aam
test
push
cmp
add
push
sub
mov
sbb
add
daa
push
ror
imul
lret
push
mov
xchg
inc
xchg
adc
mov
movl
unpcklps
shl
or
pop
xchg
lods
cwtl
or
in
inc
fwait
pop
mov
in
mov
test
stos
add
cld
hlt
dec
cmp
or
aaa
out
jne
mov
mov
xor
xor
lock
out
push
cld
adc
faddp
mov
or
add
rorl
push
out
xchg
and
mov
repz
mov
mov
mov
dec
stos
hlt
ffreep
test
mov
mov
sub
and
push
in
bound
cwtl
movsb
out
inc
clc
sbb
pop
mov
incl
xlat
insl
sub
mov
jl
xchg
negb
dec
sti
dec
add
lcall
sub
stos
insl
mov
jmp
dec
jnp
push
test
mov
sbb
sub
jge
fwait
stos
add
movsl
lock
dec
fimuls
or
inc
ljmp
cmc
sbb
add
jne
in
in
aas
ds
js
jae
push
loope
xor
incb
or
sub
jno
test
mov
ss
fsubrl
sub
rorl
pop
and
mov
test
movsb
shlb
imul
jbe
or
push
push
sub
dec
mov
mov
movsl
call
xchg
cmp
iret
dec
jp
mov
xlat
jl
movsb
aaa
xchg
cmp
pop
sbb
mov
xor
pop
stos
pop
repnz
jp
inc
dec
ljmp
fstps
in
pop
mov
xor
inc
mov
iret
movsl
lcall
sub
pop
insl
ljmp
jno
adc
or
stc
test
loope
repz
ss
cmpl
pushf
push
lahf
jmp
xor
insb
cli
jecxz
cmpl
inc
xor
and
and
rorb
inc
aas
sti
mov
push
adc
movsb
fstl
daa
pushf
adc
push
aam
stc
fiadds
mov
and
daa
mov
push
adc
xchg
lock
inc
inc
inc
cwtl
xor
pop
cli
inc
sahf
pop
push
and
pop
std
subl
and
adc
aam
dec
in
int
cmp
pop
out
cmp
mov
divb
movsb
adc
into
push
shlb
movlhps
subb
push
int3
mov
int
xchg
cmp
xchg
data16
jle
mov
xchg
sub
ljmp
cmpsb
cwtl
push
negl
add
test
insb
jae
ds
jnp
imul
pop
adc
movsb
sbb
xchg
jmp
jp
loopne
cmp
je
fisttps
lock
loope
int
insb
add
in
and
xchg
aam
mov
dec
mov
aam
cmpsb
movsb
adc
sbb
push
jnp
adc
jg
leave
push
mov
xchg
das
repz
mov
lcall
es
call
movb
xor
mov
mov
dec
les
mov
xor
stos
hlt
into
ret
pop
xchg
jae
push
push
push
mov
popf
push
sub
popf
sub
cmp
ret
movsl
rcrl
or
cmc
adc
pusha
adc
pop
xchg
in
push
xor
inc
lods
sub
xor
repnz
mov
pop
roll
inc
into
cmp
stos
test
test
orl
adc
cmp
je
test
punpckhbw
xor
movsb
xchg
dec
sbb
mov
jo
call
sbb
vcvtss2si
repz
jg
jmp
mov
imul
mov
shlb
pop
pushf
jecxz
adc
mov
sbb
mov
lahf
push
insl
das
pop
cs
dec
jns
mov
and
nop
aas
orl
inc
fsubrl
out
add
das
xchg
sbb
jno
pop
mov
pop
cmp
pop
xchg
dec
or
xchg
or
ret
jmp
insb
lods
mov
mov
iret
xor
sbb
call
sub
sub
jb
dec
xor
sub
hlt
fdivr
mov
and
jnp
hlt
shlb
or
push
xchg
jmp
xchg
add
and
ljmp
sub
sarl
cld
stc
repz
xchg
pusha
push
inc
add
and
xor
sub
xlat
fisttps
rcrb
cmp
cwtl
fists
cltd
lcallw
and
cmp
push
shll
mov
loope,pt
jns
nop
mov
lds
stc
or
in
add
dec
mov
pop
loopne
mov
cltd
fiaddl
out
dec
inc
cmp
ja
push
mov
decb
mov
push
and
mov
add
or
gs
cmpsl
push
test
add
movsl
xor
inc
loope
mov
rorb
push
jae
inc
cmp
scas
test
nop
push
pop
adcl
mov
mov
in
pop
sub
inc
sub
push
mov
pop
fstp
sbb
sub
mov
add
inc
push
jne
add
mov
fistl
and
cmp
loope
das
adc
cli
ror
add
and
into
scas
mov
jae
clc
mov
movl
out
cltd
and
dec
aad
fcmovnu
or
xor
imul
jb
insl
mov
inc
jns
in
mov
xchg
sbb
ret
add
ret
jmp
ljmp
mov
cmp
roll
or
jg
test
jp
adc
sbb
xchg
mov
mov
adc
dec
out
outsl
add
loopne
gs
cmpsl
lds
xchg
mov
testl
jo
shll
incb
sub
push
mov
mov
xor
or
or
push
sub
add
dec
scas
loopne
shrl
lds
out
add
xor
jns
loope
xchg
push
xchg
stos
cmp
pop
jmp
pop
inc
cwtl
sti
int
and
rep
pop
std
jnp
push
movsb
lea
dec
mov
testl
fstpl
add
xchg
repz
push
add
mov
sub
in
push
popa
lea
rol
icebp
iret
scas
mov
cwtl
std
mov
sbb
pop
or
xchg
cmp
cli
cmpl
inc
mov
loop
push
sti
imul
icebp
outsl
dec
jns
dec
pop
sbb
stos
adc
mov
add
test
mov
fimuls
adc
fs
pop
pop
sub
in
sbb
fisttps
jmp
jo
xchg
aad
lahf
cmp
or
mov
test
aas
adc
fcomps
adc
jle
adcl
repz
mov
cmpsb
and
xchg
stos
xchg
fyl2x
pop
mov
push
jl
in
mov
mov
adc
scas
mov
scas
and
jnp
cmp
sbb
pop
xchg
aas
je
das
loope
mov
mov
sub
inc
mov
aam
cltd
mov
lds
mov
nop
rorb
mov
fcmovnu
pop
arpl
mov
divl
sbb
mov
scas
popf
js
xor
shlb
mov
sub
and
dec
mov
adc
pushl
xchg
jecxz
cmp
push
pop
push
cmp
inc
xchg
fucomi
dec
fs
mov
mov
lret
subb
sub
test
jno
pop
sbbl
or
xor
lret
sbb
mov
gs
jns
push
cld
or
out
stc
sbb
mov
jno
inc
mov
stc
shl
cs
loop
sbb
jle
dec
xor
repnz
shr
mov
inc
adc
xchg
cs
add
jae
xchg
sub
stos
in
stos
inc
loope
inc
daa
stc
pop
fmul
dec
xor
lods
push
sti
jno
pop
repnz
stos
jg
lahf
mov
daa
mov
pop
scas
dec
fiaddl
sub
cmpsl
xorl
sub
xchg
sahf
gs
inc
lahf
and
cmpsl
popa
movsl
cltd
stos
jp
idivl
test
cmp
dec
mov
lods
pop
aam
lret
push
pop
lods
dec
shlb
call
mov
pop
ljmp
sarl
aaa
insl
inc
imul
nop
add
and
movsl
cmpsl
mulb
xchg
lods
mov
enter
test
and
jb
mov
mov
fnstenv
adc
fstps
adc
sub
adc
std
out
nop
int3
into
loope
cmp
mov
sbb
repz
push
stos
fwait
adc
mov
aad
out
and
dec
sahf
cmp
popf
xlat
sub
cs
add
ds
ret
sub
lods
sub
xor
add
loop
cmp
or
mov
stc
mov
jbe
dec
xor
out
test
fwait
movsl
pop
inc
jae
add
test
or
mov
out
push
pop
scas
mov
mov
mov
lret
ficompl
rcll
mov
mov
sub
pop
xchg
mov
sbb
cmc
loopne
ret
enter
add
push
in
push
lods
daa
andb
xchg
aad
adcb
jl
xchg
and
int
aas
cmc
stos
test
mov
sbb
ja
test
loopne
mov
and
mov
and
insb
fildl
mov
or
lods
out
cli
scas
ret
stc
jecxz
and
stos
test
test
inc
je
add
andb
shll
popa
mov
adc
testl
movsb
push
and
mov
sbb
jb
jecxz
daa
std
push
mov
jecxz
pop
stos
pushf
adc
decb
add
or
loop
mov
sub
gs
out
adc
aas
test
add
jbe
insb
mov
mov
push
jb
lahf
mov
jae
or
nop
xchg
cld
adc
jbe
ss
inc
jge
fstpl
sub
es
js
pop
inc
arpl
cmpsl
xor
push
lret
cpuid
dec
mov
cmp
lods
andb
icebp
js
in
xchg
mov
add
lds
out
data16
xor
mov
cmp
and
mov
icebp
out
xchg
out
sub
or
aam
jecxz
or
pop
xchg
mov
pop
sbb
sarl
out
imul
cmp
stc
add
scas
push
adc
mov
pop
jnp
jmp
repz
mov
sti
or
add
fdivrl
jp
scas
cltd
iret
shll
and
jb
daa
xchg
dec
pop
mov
in
and
adc
stos
jmp
lock
shl
pop
lods
add
xchg
mov
fdivrl
cmp
inc
xor
sub
rcll
lcall
pavgb
ret
pop
or
popa
leave
add
push
cwtl
stc
jg
jecxz
mov
mov
fs
out
pop
cmp
scas
jl
fisubs
pop
lods
dec
mov
dec
mov
repnz
and
and
jnp
add
lret
insb
xchg
xlat
or
inc
lds
test
cmp
shll
jne
pop
sti
cmp
sbb
cld
ret
cltd
lods
mov
cmp
xorb
sbb
int
ds
jno
cwtl
js
mov
adc
fmuls
inc
push
lds
data16
inc
scas
out
je
les
push
aam
pop
insb
push
aam
pop
pop
add
outsb
lods
fnstsw
insl
negl
scas
push
hlt
ret
adc
xchg
shrb
adc
imul
mov
sub
jmp
push
inc
arpl
adc
pop
out
push
fisubrl
je
fistl
xor
push
jge
aad
add
test
sbbl
push
imul
add
repnz
rorb
pop
icebp
daa
mov
aas
sub
rclb
xlat
sub
dec
jo
push
xor
xlat
mov
inc
movsl
int
les
aas
pop
das
ret
cmpsb
xchg
push
fistpl
pop
nop
outsb
xchg
jo
add
pop
shll
mov
popf
pop
pop
adc
jo
inc
inc
incb
iret
mov
adcb
sub
shr
loop
jnp
sbb
loopne
jns
add
mov
ret
mov
pop
xor
int3
shrl
clc
out
mov
testb
in
pop
enter
xchg
mov
test
sbb
rcrl
daa
mov
sarb
push
pop
jl
sub
xchg
clc
xchg
mov
xchg
loopne
adc
popa
mov
aad
jno
cmp
es
lret
add
sbb
mov
lds
out
push
xchg
ss
out
push
mov
push
call
mov
sbb
outsl
xorl
in
mov
pop
xor
lret
xor
push
fwait
stos
mov
fildll
repz
dec
fstps
loop
icebp
xor
push
enter
sahf
adc
jo
aam
jmp
dec
lret
ja
jge
and
jmp
xchg
clc
and
orl
inc
sbb
adc
clc
pushf
jae
cmp
call
push
stos
xor
push
cmp
jne
int3
mov
mov
clc
cli
jmp
ja
mov
add
dec
inc
shl
sarl
sbb
hlt
sahf
jge
xchg
and
cmpsb
lea
pop
cmpsb
cmp
add
popl
int
or
das
dec
mov
inc
mov
inc
add
cmp
mov
sbb
pop
push
mov
xor
lods
scas
in
loope
pop
sbb
pop
jae
jo
pop
fsubrp
mov
call
outsb
push
mov
movsb
xchg
hlt
enter
pusha
or
icebp
int3
lds
nop
dec
mull
push
add
data16
adc
gs
repz
sub
or
mov
outsb
mov
fisttpl
ret
and
jl
lods
decb
mov
movsb
pushf
nop
out
loopne
xor
call
aas
mov
xor
dec
ret
xchg
pop
jge
cltd
push
xchg
sub
pop
adc
push
test
xchg
sub
lahf
mov
jl
hlt
fdiv
mov
icebp
sahf
insb
dec
loope
mov
sbb
iret
mov
mov
jecxz
movsl
fdivrl
inc
push
pop
aad
mov
int
pop
mov
scas
lret
adc
add
jo
cmp
jns
mov
jne
jge
out
gs
stos
dec
push
sbb
call
shll
xlat
scas
fwait
xchg
add
push
pop
imul
in
xchg
push
dec
dec
dec
pop
subl
cmpsl
loop
int
aaa
aad
loop,pn
mov
dec
xchg
inc
fld
insl
fdiv
push
lcall
cmp
mov
sbb
add
scas
sub
pop
fcmovnbe
adc
jno
sbb
filds
sti
pop
add
jp
mov
stos
xchg
push
or
pop
push
pop
push
xor
into
pop
fdivrs
mov
xor
xchg
cld
push
xchg
mov
mov
sbb
mov
jg
cltd
and
or
inc
push
dec
fdivl
sbb
pop
mov
adc
fistl
das
hlt
andl
pop
mov
dec
xor
cld
mov
fs
mov
pop
inc
jb
into
xchg
cwtl
push
outsl
sub
out
js
xor
cmp
fiadds
cmp
sarb
dec
xchg
es
pop
jnp
push
cmp
cs
shlb
push
mov
out
insl
rclb
and
mov
fldt
lret
insl
cmc
push
mov
scas
mov
and
push
add
lds
out
test
lahf
and
stos
fldenv
popf
mov
pop
arpl
addl
cwtl
lcall
jmp
push
mov
pop
scas
or
cmc
inc
shl
sub
mov
jle
mov
sub
pusha
adc
sbb
out
or
dec
out
gs
das
jl
and
push
ds
cmc
stc
rclb
inc
mov
sub
pop
mov
pop
cmp
incl
imul
cld
movsl
jmp
xor
adc
lahf
les
mov
fs
loope
lea
push
and
or
insl
movsb
es
das
shrb
xor
push
out
popa
mov
push
push
xor
sbb
rorb
push
repnz
push
mov
sub
jns
call
mov
adc
and
sbb
or
mov
push
ret
mov
dec
pop
jnp
inc
cmp
hlt
cli
pop
mov
ret
cmp
mov
inc
adc
aam
rolb
dec
pop
out
push
js
icebp
jecxz
mov
test
scas
mov
sbb
pop
sub
mov
test
jg
iret
xor
xor
mov
mov
mov
pop
mov
mov
sbb
rclb
add
loope
cltd
add
jbe
rcll
in
cs
stos
hlt
mov
popa
outsl
sbb
mov
into
sbb
repnz
cli
imul
mov
push
lahf
and
popa
subl
stos
sahf
mov
data16
pop
outsb
add
stos
lahf
jl
rclb
mov
ja
in
addl
adc
cmp
test
in
out
sub
faddl
dec
mov
stos
stc
xor
cli
push
xchg
stos
mov
mov
push
add
and
pop
or
jg
push
cmp
jmp
stos
jbe
clc
mov
adc
add
push
dec
cmp
fisubrs
xor
push
test
inc
mov
sub
pop
sub
dec
jmp
addr16
xchg
mov
pop
or
movsb
loope
inc
sub
lahf
cmp
cmp
xchg
lcall
inc
dec
stos
imul
push
popw
xor
out
lods
push
lods
sbb
inc
inc
mov
lret
cwtl
ss
iret
clc
sbb
and
int
arpl
mov
fwait
cmc
jnp
cmp
jns
out
mov
push
add
insb
sub
jo
out
repz
mov
adc
or
xor
lods
in
fldln2
push
loopne
xor
test
iret
inc
sub
sub
scas
dec
jno
pop
sub
mov
or
fs
xchg
adc
cwtl
icebp
cmpsb
pop
xchg
inc
xchg
aas
jns
jbe
sbb
pop
fbstp
fisttpll
std
jnp
and
xchg
mov
cmpsl
push
scas
jns
cmp
testb
adc
or
fcomps
inc
inc
jno
xchg
lret
test
lock
js
xor
sahf
pop
jns
or
mov
jmp
mov
nop
inc
lods
inc
cmovg
sub
mov
xrelease
inc
test
adc
add
das
add
out
and
or
pop
and
ret
std
imul
mov
jo
leave
pop
inc
nop
dec
push
cmc
or
pop
pop
mov
sub
sbb
ja
jp
jnp
xchg
ds
xor
pushf
lods
sub
dec
sub
xchg
sarl
jbe
xor
scas
arpl
arpl
sarb
adc
sbb
aad
xor
adc
mov
mov
mov
data16
sbb
inc
adc
and
movsb
xor
loopne
xlat
pop
xor
repz
and
push
xor
repnz
add
add
sub
sub
and
xor
dec
mov
ljmp
in
xchg
inc
jecxz
push
pop
pushf
in
mov
addb
and
cltd
fnsave
sbb
xor
fstpt
sbbb
call
sbb
mov
mov
call
jns
lods
lret
ficomps
dec
sub
sub
divl
dec
cmpl
imull
ja
gs
mov
cmpsl
jmp
outsb
stos
jle
pop
movsb
mov
movsb
test
inc
push
dec
jp
sub
xor
lock
sarl
pop
sar
jne
outsl
jp
call
and
and
sub
dec
add
mov
pop
loopne
jg
jbe
inc
or
loop
jo
xor
ja
int
bound
sub
data16
push
repz
jp
stos
push
dec
gs
or
enter
stos
scas
fisubs
leave
sbb
mov
int
popf
inc
ret
cmpsl
aas
es
out
aas
xchg
rcrb
inc
xorb
xor
push
dec
mov
mov
loop
rolb
mov
lods
das
scas
push
xor
out
push
mov
xchg
ret
xorl
cld
mov
sub
inc
cli
mov
and
aam
mov
adc
movsl
push
cmc
insb
dec
fidivrl
mov
xchg
in
testb
mov
push
mov
sbb
enter
xchg
inc
add
nop
sbb
jmp
or
push
lods
lret
enter
mov
stc
leave
int
jno
pop
stc
flds
sti
ret
and
lock
arpl
mov
push
add
addr16
cmp
push
clc
scas
mov
sbb
adc
out
pop
push
dec
mov
scas
push
cltd
mov
mov
pushf
data16
add
xchg
add
cmp
add
pop
mov
ret
cld
jp
sbb
std
in
int3
ds
mov
mov
pop
jp
vmwrite
pop
xlat
jae
movaps
dec
jmp
nop
pusha
or
mov
mov
enter
adc
jns
push
clc
adc
push
sahf
inc
js
push
adc
mulb
or
imul
mov
in
inc
es
inc
adcl
je
mov
aad
leave
lods
in
aaa
call
cld
cmpsl
xchg
nop
add
out
sti
jp
out
push
jno
push
mov
cmp
xchg
adc
jno
das
js
out
cli
mov
push
loopne
lret
daa
imul
push
cltd
je
ds
arpl
push
adcl
sbb
out
in
pushf
enter
into
cli
mov
loopne
pop
push
stc
out
xlat
pop
mov
cmpsl
pusha
and
xorb
in
lods
es
mov
and
push
test
mov
imul
or
mov
pop
das
mov
sbb
addb
dec
arpl
pop
test
push
insl
jne
out
sbb
jg
cmc
cltd
jecxz
scas
mov
inc
out
dec
sti
scas
loopne
enter
jns
push
cmp
les
sub
mov
adc
pop
lret
and
push
in
leave
cwtl
inc
js
inc
push
notb
pop
push
out
add
pop
dec
js
shll
mov
dec
aam
adc
jnp
cmpsb
cmp
movsb
sbb
jae
push
sub
jbe
out
imul
dec
add
mov
daa
loop
or
add
incl
test
rcll
loopne
push
xlat
test
inc
imul
inc
loope
sbb
ljmp
lcall
ds
jl
push
jno
mov
push
mov
and
push
je
fstpt
in
out
js
arpl
xor
xor
loopne
scas
pop
adc
scas
sti
mov
fxch
in
lods
rcrl
incl
sbb
dec
push
loope
push
inc
sbb
cmp
icebp
adc
xchg
jo
fisttps
int
out
lds
imul
push
fwait
repnz
js
push
shl
mov
fs
decl
leave
cmp
cmpsl
xor
ds
das
sbb
into
jae
repnz
sub
aad
daa
adc
mov
mov
and
loope
mov
out
and
jge
cmp
test
addr16
stos
xchg
rorb
cmp
in
incb
ja
test
scas
inc
inc
xchg
xchg
les
test
addr16
cs
fsts
inc
adcb
pushf
cmp
push
push
in
mov
scas
mov
lahf
mov
addl
sub
daa
inc
mov
add
int3
fsub
movsl
and
aas
incb
lcall
addl
adc
pop
outsb
das
sbbl
popa
mov
pop
and
mov
mov
push
push
xor
movsl
ret
call
xchg
mov
test
fistps
push
mov
nop
stos
into
xchg
jo
push
lea
imul
dec
inc
sub
or
testb
cmpsl
cmp
int3
adc
xchg
lret
xchg
fstpl
mov
aaa
adc
cmpl
imul
aam
jae
cmp
mov
cmpsl
pop
adc
add
inc
xor
pop
in
xchg
es
adc
mov
mov
rol
mov
outsb
or
jbe
mov
imul
movsb
shll
test
mov
rorl
mov
add
stc
shrl
xchg
movl
call
rcll
sub
cs
add
pop
loope
popf
dec
movsl
push
pop
pop
mov
arpl
aam
mov
sbb
cmp
arpl
pusha
dec
shlb
adc
ret
sub
cs
fimuls
dec
or
jbe
push
sub
repnz
jmp
out
out
mov
push
aam
call
das
mov
pushf
mov
mov
mov
xchg
mov
adc
outsl
jae
or
lds
pminsw
cmp
ret
fwait
rcl
lcall
mov
cs
mov
cmp
ret
in
mov
dec
cmpsl
daa
or
test
sub
test
jo
ret
mov
fimuls
jle
add
sub
test
imul
mov
inc
cmp
cmpsl
call
movsb
shrb
jbe
dec
leave
xor
sbb
jnp
loop
mov
ja
lods
addr16
jecxz
fwait
mov
dec
mov
cmp
inc
or
popa
into
fdivrs
fsubrl
cli
add
int
fstl
push
xchg
int
jmp
sbb
into
enter
xor
xor
dec
lcall
or
jl
lods
pop
jo
lret
outsb
ret
mov
push
cmp
push
in
pop
test
xlat
arpl
out
dec
ss
pop
hlt
mov
sbbb
lcall
inc
adc
pop
jmp
out
mov
jns
or
clc
jno
and
subl
jo
inc
xor
jo
jg
andb
int
shl
jo
vminpd
lahf
out
sub
mov
std
inc
aaa
sbb
adc
stos
lret
sub
push
add
test
push
pop
stos
cmc
pop
loope
dec
xchg
mov
mov
testb
jae
int
push
mov
mul
ljmp
leave
mov
imul
dec
out
mov
divb
inc
cwtl
mulb
mov
push
mov
xchg
fisubl
and
mov
sbb
bound
