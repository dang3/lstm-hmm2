mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
add
sti
pop
add
push
add
das
imul
jge
or
jae
jb
addr16
push
or
push
imul
mov
push
imul
dec
lret
adc
add
imul
aas
add
sub
xor
cmp
cmpsl
stc
cmp
js
xchg
rolb
push
cld
decb
push
arpl
pop
sbb
push
push
jns
xlat
xor
insl
jo
dec
popa
jb
popa
arpl
data16
fildl
rcrb
in
out
push
adc
pop
or
imul
insb
sbb
add
jg
nop
add
int3
addl
jmp
out
std
nop
arpl
mov
adc
loope
ja
jnp
add
sbb
stc
dec
fnstcw
clc
adc
push
and
insb
push
movsb
sti
adc
and
xadd
in
in
mov
in
mov
test
in
in
xor
pushf
cwtl
in
in
xchg
nop
mov
test
in
xor
in
in
and
push
adc
in
in
pusha
pop
pop
push
adc
push
add
mov
ret
int
imulb
je
movzwl
mov
ss
pop
ret
addr16
mov
sub
insl
mov
popa
jl
dec
and
jb
out
call
sub
adc
imul
xor
xor
or
ficompl
xor
jb
and
imul
das
and
data16
push
sbb
push
push
je
popa
pop
icebp
incl
gs
insb
outsl
jo
rolb
lock
ret
xchg
fidivl
or
push
dec
add
inc
or
and
or
or
or
dec
shrl
cmp
adc
dec
shll
adc
fildll
fildll
add
jnp
dec
adc
xor
cs
jp
add
lcall
inc
and
sub
inc
dec
sub
in
dec
shll
xor
cmp
xor
push
pop
xor
cmp
xor
mov
inc
inc
call
int3
imul
jmp
lret
jns
fbstp
add
jl
push
cmp
add
js
and
int3
int3
notb
inc
sub
push
adc
js
mov
add
nop
pushl
jge
adc
rorl
push
sub
lret
idivl
jmp
mov
and
pop
mov
jecxz
shll
add
ljmp
mov
incl
sbb
and
add
xchg
mov
pop
push
lock
lret
push
add
mov
shl
or
sbb
jl
loopne
cmpl
sbb
push
icebp
call
inc
cld
add
orl
adc
dec
add
sbb
push
add
cmp
dec
pop
mov
lock
and
sub
loopne
mov
mov
pusha
push
mov
inc
mov
add
push
subb
add
test
push
fsubs
test
adc
or
enter
mov
sbb
loop
sbbb
cmp
mov
sti
push
sub
mov
mov
sub
stc
data16
stos
sbb
xor
mov
cmpb
mov
sub
in
test
stc
shlb
or
test
push
xor
jmp
add
jle
push
push
mov
lea
scas
orb
add
out
fwait
and
je
adcb
test
je
sti
mov
sbb
filds
pushf
pop
mov
or
xchg
mov
ss
add
jle
push
out
jbe
pop
pop
mov
mov
sub
in
mov
jae
jle
adc
mov
push
and
or
shll
or
in
outsb
loop
jns
loopne
outsl
incl
jmp
or
cmp
in
push
push
lea
or
push
inc
push
adc
fists
mov
cmp
jbe
sub
add
jmp
test
jne
lods
js
adc
add
fisubrs
dec
mov
add
nop
inc
loopne
repnz
push
call
jecxz
jmp
fisubrs
in
cmp
add
bound
add
cmp
jbe
ljmp
out
mov
adc
xchg
adc
loopne
xor
push
mov
cmp
in
test
jo
fs
mov
stos
inc
push
cmp
jae
mov
add
dec
and
popa
sbb
fdiv
and
lods
and
xchg
iret
lea
push
adcl
mov
rolb
pop
or
icebp
fwait
leave
push
pusha
or
lds
add
insl
in
jg
cmp
jbe
ret
push
mov
push
mov
test
shr
cmp
jb
addb
das
dec
jle
in
and
mov
das
or
ret
lea
push
fadds
pusha
bound
mov
roll
je
rclb
lds
ds
push
mov
inc
or
ljmp
dec
and
outsl
mov
std
idiv
je
and
add
movzwl
ja
incl
add
cmp
ja
dec
mov
cmp
cmp
fimull
adc
es
mov
pop
pusha
and
and
xchg
sbb
inc
pause
jns
aaa
or
test
jae
sbb
cmp
cmp
sbb
pop
sbb
out
out
push
jl
or
mov
bsf
xor
in
icebp
lea
mov
leave
or
mov
cmp
add
push
ja
outsl
add
cmp
jne
mov
add
xchg
test
btr
mov
int
jmp
add
dec
jnp
sub
lea
add
aaa
mov
mov
sbb
mov
cld
sbb
add
inc
cmpsl
mov
jmp
ds
sbb
mov
outsl
mov
adc
andb
lea
mov
xor
mov
mov
movl
inc
and
call
pop
push
or
imull
iret
mov
addr16
cld
fisttps
or
fidivs
jge
or
faddl
out
test
xor
jne
lea
pusha
xchg
or
pushl
and
or
or
rol
or
jmp
mov
cmp
push
vmread
jl
mov
loopne
xor
sbb
mov
push
adc
fdivs
push
scas
xchg
cld
jmp
mov
dec
mov
cmp
pop
or
dec
xor
int
inc
cmp
cmp
adc
adc
xor
popa
xor
jb
xchg
or
testl
fisttps
jns
mov
nop
and
mov
test
sar
jo
add
mov
jne
cmpl
push
ljmp
xor
fadds
data16
xor
cmpsb
imul
cmpsb
xor
push
mov
jo
xchg
inc
adc
cmp
jne
or
insb
push
mov
iret
adc
push
test
xchg
scas
mov
push
push
mov
pop
leave
outsl
mov
dec
fidivs
or
aam
inc
inc
xchg
rorl
out
loop
fmull
mov
testl
jne
or
daa
cld
lahf
mov
or
cmp
inc
js
jo
fiadds
xor
xchg
mov
xlat
mov
adc
pop
and
rorb
fbstp
lret
cmp
je
ficomps
clc
sub
sub
subl
push
lahf
add
mov
mov
shrl
add
lret
add
inc
xor
test
movl
loopne
add
or
out
dec
xor
pop
push
in
or
in
mov
cs
or
cmp
jb
sbb
push
sbb
pop
cli
cmp
jb
jns
jb
cld
pop
push
lds
ret
jg
call
sub
lea
push
mov
sti
mov
loop
roll
add
hlt
repz
push
sub
mov
test
push
sbb
clc
xor
lock
sahf
mov
mov
add
test
cli
jecxz
cmp
push
xchg
cvttps2pi
cmp
jb
ds
jbe
add
sub
adc
loopne
inc
jl
les
lea
jmp
lds
add
sub
cmp
inc
jnp
push
jge
sbb
or
cmp
mov
cld
or
mov
push
mov
mov
jne
or
adc
pop
data16
jecxz
push
std
mov
roll
xlat
sub
clc
mov
inc
cs
sahf
sub
sbb
lods
lea
mov
in
pusha
out
lock
call
imul
add
sbb
add
ljmp
and
pop
xor
subl
sarl
aaa
cmpb
ja
cmp
xchg
pop
mov
and
add
xor
sub
adc
fiaddl
add
lea
ja
andl
sbb
pop
push
add
push
jle
push
lea
xchg
mov
push
pop
add
sub
jg
or
mov
jecxz
sbb
insl
pop
rcl
dec
iret
push
lock
pcmpgtw
roll
imul
pop
push
jecxz
dec
shll
aad
jp
push
jecxz
lea
or
lcall
cltd
jae
neg
fldz
fstl
add
js
or
shl
int
dec
mov
in
mov
faddl
rorl
lods
or
test
jne
xor
inc
sbb
je
mov
adc
mov
and
rclb
adc
je
sub
outsl
ja
ret
and
adc
mov
cmp
jbe
mov
mov
sub
outsl
push
negb
and
scas
inc
add
fmuls
pop
subl
push
add
mul
fs
mov
loop
xchg
jmp
cs
mov
sti
imul
inc
sbb
wbinvd
shrl
xchg
cmp
dec
aaa
sbb
add
jb
sbb
mov
add
add
dec
in
pop
jg
push
cltd
inc
sub
adc
pop
xor
inc
add
clc
adc
icebp
mov
inc
ds
mov
add
clc
lods
mov
push
mov
push
inc
cli
pop
jbe
loop
loope
jo
arpl
enter
jg
jmp
jbe
or
push
lock
push
jae
ss
mov
pop
jecxz
lock
adc
mov
js
add
std
negl
mov
hlt
jne,pn
push
testb
je
call
sub
jmp
mov
pop
pop
lds
push
push
nop
test
cli
loop
mov
cmp
gs
data16
cwtl
pop
test
fdivr
fidivrl
aas
sbb
sbb
test
daa
dec
movb
fistps
add
jne
or
sbb
xor
lods
loopne
in
sbb
mov
push
xor
mov
mov
fistpl
pop
mov
dec
scas
sub
shlb
daa
jne
sub
rcrb
xchg
ja
dec
mov
movsb
sub
or
sbb
xor
push
mov
add
jp
fndisi(8087
mov
out
mov
mov
mov
fwait
mov
mov
pusha
jl
inc
pop
mov
cmp
jne
jbe
add
push
mov
and
mov
fdivrs
jne
mov
ret
frstor
mov
cs
insb
faddl
lea
add
dec
in
call
add
mov
call
mov
and
jo
cmp
movb
adc
xchg
mov
test
pop
mov
je
movsb
enter
sbb
mov
or
cmpl
mov
xor
int3
or
dec
or
mov
adc
test
jle
sbb
cmpb
jp
mov
cmp
jb
jo
out
pop
imul
loopne
pop
clc
adc
push
sub
cltd
loopne
fidivs
mov
sti
das
in
fldenv
hlt
jle
movq
lcall
or
pop
add
adc
sbbl
and
jbe
sbb
mov
jl
fstpt
mulb
fdiv
ret
cmovnp
cwtl
push
es
and
adc
fadds
inc
add
clc
test
xchg
push
cmp
lcall
orl
push
jb
push
xor
mov
push
add
or
push
cmc
inc
scas
loopne
pop
jmp
mov
and
xchg
fisttpll
sub
mov
and
fdivr
or
in
int3
loope
xchg
cmp
cmp
jecxz
jne
mov
int3
sub
jb
ss
mov
sbb
aaa
adc
daa
mov
jae
in
xchg
scas
ds
or
sti
mov
jge
dec
jl
cmpb
cmpsl
adc
negl
xchg
mov
xchg
dec
mov
add
cmp
cmp
and
fmull
adc
cld
dec
loopne
shrl
fs
pop
sbb
pop
scas
in
scas
mov
mov
xlat
mov
or
pop
lock
cmpl
xchg
add
lock
in
daa
cmp
outsb
jg
inc
testb
or
mov
jo
data16
adc
sub
push
adc
add
stos
or
jmp
fs
testl
mov
inc
mov
sub
push
and
mov
mov
sub
or
push
fldcw
dec
das
js
scas
cmp
or
sbb
sub
pop
incl
or
xchg
out
repnz
lcall
push
push
aad
sbb
outsl
inc
sbb
mov
pusha
cmp
scas
loop
inc
inc
js
outsl
xorb
mov
mov
inc
mov
ja
ljmp
cmpsl
dec
sarb
jne
mov
adc
sub
js
pusha
jne
xor
or
fldt
outsb
and
gs
jg
lock
gs
outsl
jb
pop
popa
imul
popa
jae
add
lock
arpl
jl
mov
sub
jae
popa
insb
insb
and
dec
imul
add
or
fildll
jae
addr16
outsb
imul
outsb
add
xchg
jp
mov
cltd
xorl
nop
outsb
and
jo
mov
lahf
mov
cmp
dec
cs
xor
push
pop
add
sbb
repnz
out
add
cmp
jbe
mov
xor
ja
mov
add
cmp
jne
fisttps
add
xchg
mov
jge
lock
cmpsb
push
movl
in
inc
clc
or
outsb
xchg
xlat
pop
sbb
movl
shlb
filds
lea
add
pop
pusha
ja
add
sub
call
jbe
pop
sti
incl
enter
loop
push
in
loopne
add
mov
movsl
sahf
out
xor
loope
lea
add
filds
call
gs
dec
repz
jbe
mov
cmp
xlat
mov
xor
div
imul
mov
popf
js
data16
in
dec
inc
xor
sbb
movl
mov
loope
test
mov
mov
or
repz
js
lcall
cli
ja
out
push
push
mov
add
adc
lret
push
mov
cmp
jne
mov
pop
pushf
dec
mov
dec
adc
add
inc
or
fmuls
loop
or
and
stos
sbb
pop
add
or
cmp
dec
mov
pop
mov
fisubrs
mov
or
adc
mov
xchg
repnz
push
mov
sub
adc
mov
sbb
shl
jae
push
sbb
call
fucom
inc
adc
repz
mov
add
inc
ret
jle,pn
int3
fisubl
imul
addr16
aas
push
mov
test
je
test
je
push
mov
popa
sbb
imul
add
pop
repz
jmp
bound
xor
fildll
frstor
ss
loopne
je
pop
ds
mov
mov
xor
jle
mov
xor
mov
or
dec
sahf
ret
enter
mov
sub
jle
fadds
xchg
or
or
cwtl
in
aam
hlt
jne
lahf
cwtl
push
jmp
or
sti
sbb
movzbl
add
inc
mov
pop
adc
pop
in
scas
call
aaa
pop
jmp
push
xor
addl
pop
pop
jne
mov
out
jg
repnz
mov
testb
ret
inc
or
je
pop
jle
cmp
jg
sub
inc
fsubrl
jg
adc
sarl
mov
inc
rep
jmp
mov
jmp
iret
cmp
in
mov
jmp
mov
insb
ret
pop
cltd
loope
pusha
repz
in
fistpll
cmp
je
cmp
ja
sub
jg
jmp
xor
test
sub
or
dec
aam
sbb
push
or
int3
sbb
sahf
out
movsb
stos
mov
jnp
aad
push
mov
or
inc
or
neg
and
or
jl
das
js
cmc
pushf
sbb
ret
jle
or
shrl
lret
adc
jbe
incl
add
clc
sub
pop
mov
lock
inc
cmc
pop
fmuls
mov
or
int
or
decb
inc
add
cmp
pop
ja
and
add
pop
into
rcrl
adc
ret
mov
stos
xlat
push
fucomp
or
mov
lock
and
cmpb
idivl
add
out
in
mov
jmp
sub
xor
adc
sub
add
inc
jmp
cmpsb
js
inc
out
sbb
cmp
aad
inc
sub
mov
xor
jmp
jne
imul
mov
or
xor
ja
outsb
aad
iret
frstor
arpl
pop
loope
mov
in
daa
clc
or
xor
xor
add
jbe
jnp
lea
sahf
and
adc
jge
outsb
mov
cld
rolb
inc
jmp
pop
pop
pop
pop
adc
jo
es
sarl
xchg
xor
jmp
movsb
mov
pop
pop
pop
add
cmc
mov
test
jne
push
inc
or
arpl
add
aas
cmp
jmp
std
dec
adc
jmp
push
or
fwait
loopne
sti
lock
jmp
mov
loopne
lods
add
mov
aad
sub
add
sbb
xor
imul
cmp
jmp
loop
xchg
jb
cmp
ja
sub
pop
pop
pusha
out
out
mov
fldcw
cmp
pop
fsubrp
fimull
sub
adc
or
fnstenv
add
add
fldcw
add
fnstcw
and
inc
insb
sub
fs
mov
push
pop
sbb
push
mov
jb
data16
sbb
cmpsb
add
cmp
shrl
js
mov
sbb
popw
cmp
fsubrl
mov
inc
cli
mov
mov
sbb
push
pushl
mov
cmp
mov
ja
shlb
xlat
adc
jne
mov
cmp
add
adc
out
sti
lahf
dec
lahf
jmp
cmp
mov
aas
pop
adcb
cmp
jbe
mov
mov
adc
inc
sar
adc
xchg
xor
mov
mov
inc
inc
fisttps
add
push
mov
mov
mov
cmp
jne
dec
je
mov
mov
sbb
add
ja
fiaddl
loop
push
adc
add
push
add
in
mov
pcmpeqw
push
adc
add
adc
add
jne
add
jmp
pop
cmp
cmp
jne
shr
roll
add
push
mov
shr
out
fsub
or
pop
cmp
mov
inc
mov
loope
ret
jg
add
and
mov
cmp
jne
dec
dec
dec
add
int
and
jg
add
pop
jecxz
cmp
mov
popf
addr16
xlat
jl
xchg
in
pusha
push
add
shl
mov
add
adc
fstl
shll
lahf
test
push
stos
add
neg
sub
notb
jl
ffree
push
mov
clc
push
mov
idiv
cmp
push
lods
ss
iret
ss
jmp
cs
sbb
sbb
sahf
out
sahf
push
adc
adc
or
fnstsw
sti
push
or
ret
jge
je
pop
push
adc
mov
mov
inc
cmp
je
mov
or
je
or
je
fmulp
int
and
je
pop
je
xor
dec
std
fnsave
test
and
add
sub
pop
icebp
mov
cmp
ja
lea
push
add
push
lcall
pop
out
int
or
jge
jmp
adc
neg
jle
js
pop
sub
lods
cmc
sti
fsubrp
inc
inc
inc
jmp
mov
andb
xchg
and
pusha
xchg
std
add
or
stos
aad
sub
int
cwtl
pop
xor
mov
ud1
and
cmp
mov
xor
mov
inc
mov
dec
jne
pop
testb
cmpsl
daa
mov
push
jecxz
add
lea
lcall
insl
aam
lods
push
outsl
cmp
sub
je
faddl
pushf
das
movsl
cmp
popa
out
inc
cmp
xchg
adc
inc
mov
xchg
lret
xor
sbb
xor
stc
jmp
fstp
fldt
fldz
in
mov
test
mov
inc
sahf
jl
aas
mov
lahf
jl
leave
cli
or
or
ret
mov
adc
xchg
cwtl
push
and
pop
repnz
sbb
add
mov
std
lret
enter
sub
test
out
sub
adc
xor
leave
sbb
mov
lahf
aaa
inc
jbe
imul
cmp
mov
mov
bound
jmp
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
jg
outsl
mov
or
push
push
int3
into
sbb
rorl
mov
push
pushl
lcall
push
inc
enter
mov
inc
and
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
jl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
ljmp
loopne
jmp
xchg
test
stos
pop
out
sub
imul
divl
push
cld
jmp
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
fcomip
lcall
cld
sarb
repnz
test
nop
fcmovnb
movsb
lahf
nop
inc
pop
ljmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
incl
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
cmp
pushl
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
lcall
mov
and
addr16
repz
mov
subb
and
and
clc
lcall
outsb
bound
xor
jmp
jp
rorb
sub
pop
jecxz
lea
repz
insb
jp
mov
add
push
clc
or
pop
hlt
movzwl
jbe
mov
pushw
jo
mov
hlt
jle
xlat
or
jne
cs
cmp
hlt
insb
pop
hlt
push
data16
inc
ja
roll
mov
ret
and
out
outsl
mov
and
pop
aas
or
cld
pop
jmp
dec
inc
push
push
inc
push
inc
pop
dec
inc
jecxz
inc
gs
jo
imul
push
dec
popa
jae
push
mov
insb
jne
fninit
fwait
inc
add
mov
mov
jge
add
push
lret
into
sbb
mov
pop
js
xor
mov
inc
rep
mov
cld
and
push
cmp
cld
in
rcrl
lea
xchg
push
lods
sbb
fisttpll
pop
ds
push
cmovo
cmp
and
mov
sete
dec
bound
ja
dec
ret
cmpsl
mov
mov
je
std
sub
push
imul
push
hlt
mov
sbb
pop
aaa
xor
pop
adc
rcr
test
ja
daa
rolb
jbe
add
movups
dec
mov
adc
or
xor
xchg
add
and
call
ljmp
add
dec
fdivs
rclb
aam
jmp
pop
and
rep
mov
mov
sub
adc
loop
pop
fmull
jmp
cmp
je
mov
or
xchg
push
mov
mov
sub
push
sbb
jne
jne
aas
lods
mov
add
push
les
pop
dec
mov
or
inc
xchg
cmp
fbstp
paddd
shufps
and
loope
loope
and
shll
dec
lods
clc
pop
push
in
in
sub
mov
mov
mov
clc
sbbl
ds
sbb
out
add
shrl
and
xor
lods
pop
ljmp
and
insb
mov
pop
lea
push
sbb
sub
mov
cmp
jns
mov
xor
mov
outsb
mov
sub
add
mov
movsb
jb
cmp
xor
in
add
adc
or
jne
or
popa
sbb
dec
push
inc
inc
fcoml
jns
fbld
addb
das
or
dec
xor
rorl
cmp
je
mov
leave
jne
mov
in
push
xchg
jmp
outsl
mov
lret
test
test
add
scas
je
pop
sbb
pop
add
sub
mov
pop
cs
js
lds
dec
cs
pop
ljmp
sti
mov
cs
xor
das
in
call
or
pop
pop
jp
es
les
cwtl
rorl
pop
push
data16
outsl
pop
out
sub
cmp
inc
push
stos
fiaddl
lea
adc
lock
notb
pop
ds
mov
rcrl
adc
adc
dec
push
cmp
sbb
add
dec
jne
icebp
fcomi
std
fucomip
sbb
add
sbb
and
jne
dec
cmp
lret
rcr
ret
push
popf
enter
xchg
push
sbb
fcompl
mov
push
xor
call
add
lcall
push
push
bound
hlt
xor
lea
mov
mov
mov
movl
inc
in
rcl
cmp
or
xor
sub
or
or
xor
or
push
clc
rcll
sbb
sarb
pop
dec
mov
and
cmc
ds
jae
jmp
mov
outsb
jmp
add
mov
ja
pop
pop
pusha
sbbl
add
dec
test
cli
in
push
call
out
sub
push
cmp
xchg
cmpsl
sbb
loopne
shll
jae
mov
jge
xor
xlat
pop
push
push
and
in
lcall
inc
add
or
jne
movsbl
inc
inc
jmp
add
aas
push
inc
mov
xor
add
and
popl
xchg
push
adc
loop
fsubrl
add
cmp
jecxz
pop
jle
jle
pop
testl
or
cmpl
sbb
add
dec
shlb
mov
push
mov
psrld
out
fisttpl
dec
addb
je
sbb
cmp
aam
sub
sub
ja
lea
sbb
xor
stos
leave
cmc
inc
sahf
lea
jne
jbe
ret
les
jns
mov
pmaxub
dec
add
jbe
mov
xchg
push
sub
adcl
mov
cmpsl
push
sub
aaa
push
enter
les
ret
add
test
xor
clc
jle
dec
adc
xor
fdiv
nop
mov
je
scas
xchg
daa
ret
dec
or
add
mov
xchg
jb
push
or
das
xor
jno
mov
lock
xchg
orb
mov
lods
aas
jb
pop
and
dec
fdivrs
dec
fsubs
aam
push
sti
jge
adc
inc
mov
mov
fsubl
jne
inc
dec
jne
cmp
push
sbb
shll
outsl
inc
jmp
pop
lds
push
sub
adc
adc
insl
or
das
push
mov
pop
loop
inc
adc
or
push
push
orb
arpl
cmp
sub
sbb
xor
pop
inc
hlt
inc
xor
sub
add
das
sbb
or
rcrl
mov
mov
std
lods
adc
and
rorl
jmp
dec
lock
in
push
dec
test
pop
ficompl
mov
out
mov
test
ret
outsl
or
fcomps
call
pop
push
push
push
push
push
or
jb
pop
push
dec
mov
or
nop
or
jg
or
pusha
add
inc
or
call
sahf
test
mov
mov
adc
jae
jo
aas
pop
mov
push
cld
pop
xor
cli
or
ret
xor
add
roll
cmpsb
xorb
xor
xchg
ret
jecxz
loope
add
jg
je
cmp
push
sub
decl
fbld
jmp
add
add
je
jmp
push
stc
out
push
cmp
cmp
adc
jmp
ljmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xlat
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
pop
and
sub
idiv
movzbl
push
or
add
add
pop
loop
and
iret
shrd
call
push
mov
lret
inc
pop
add
hlt
jmp
outsb
inc
sbb
jge
data16
sub
push
pushl
pushf
mov
pop
sbb
js
fld
jo
add
outsb
sbb
pop
sbb
movsb
fmul
mov
mov
add
aas
mov
mov
enter
repnz
cmp
or
add
and
iret
ds
rclb
mov
mov
repnz
inc
test
jle
dec
mov
je
push
loopne
filds
cmp
sub
pushf
jo
jg
adc
mov
adc
pop
dec
leave
add
mov
fs
mov
dec
cmp
jle
xchg
iret
mov
jbe
fadds
iret
cmp
jg
xor
movl
sbb
or
mov
ja
ret
cmp
adc
push
ret
inc
and
mov
mov
xlat
inc
mov
mov
add
enter
sbb
pop
addr16
arpl
mov
dec
or
push
ret
jo,pt
or
inc
enter
mov
and
mov
mov
mov
cltd
idiv
add
lock
and
popf
clc
fldcw
and
dec
hlt
fdivl
fldt
and
inc
addb
mov
shlb
cmp
add
rolb
out
pop
in
sti
testb
sbb
and
rep
push
leave
push
inc
rcll
mov
inc
les
js,pt
fwait
add
loopne
sub
jbe
mov
pushf
movsb
cmp
push
sbb
push
push
js
bnd
ds
cwtl
xor
inc
pop
xlat
test
jne
pop
jb
mulb
fs
cmp
mov
ja
ds
outsl
gs
sub
adc
lock
jnp
lcall
icebp
cmp
cs
fsubl
or
push
add
sbb
jg,pn
loop
addr16
xor
jnp
lds
test
sbb
push
pop
mov
xlat
loopne
jg
adc
jne
je
sbb
loopne
loopne
rorb
add
adc
cmp
inc
sub
mov
inc
xlat
addb
sti
int
pop
shlb
inc
in
pop
hlt
inc
cmp
pop
popl
pop
daa
inc
mov
leave
push
pop
push
xor
push
push
push
pop
pop
pop
or
jp
mov
or
dec
sbb
dec
mov
sub
jmp
xchg
mov
jbe
mov
mov
ljmp
dec
dec
jge
push
push
mov
push
iret
shlb
add
ja
mov
pop
shll
ljmp
mov
cld
negb
add
dec
jl
lock
clc
pop
scas
rorb
ja
adc
sub
jb
movl
jnp
aaa
add
fidivl
dec
and
inc
jg
pop
push
lea
adc
cmp
mov
pop
push
dec
jae
or
jmp
insb
lret
pop
xchg
adc
xchg
std
push
or
and
add
push
clc
pop
ss
push
inc
pop
movw
xor
popf
or
movl
call
iret
mov
das
dec
loop
sub
push
or
add
aam
cmp
sub
pusha
jmp
sub
test
add
mov
xchg
inc
pop
mov
add
icebp
jbe
adc
cmpb
adc
jmp
lea
cmp
push
movsb
das
inc
hlt
push
mov
clc
or
add
push
jl
lea
mov
fldl
fistpl
dec
push
rcrb
sbb
add
cmp
clc
mov
push
mov
mov
rcl
push
nop
inc
mov
je
lcall
add
mov
cmp
call
pop
sub
jmp
pop
pop
sub
and
mov
out
pop
pop
or
push
push
addr16
in
add
mov
add
xor
or
inc
shlb
sti
inc
shl
rcl
add
pop
pop
xor
add
mov
pop
cld
sbb
cmp
jl
add
out
xchg
aas
testb
push
sar
mov
pop
inc
mov
jp
add
cmp
decb
cli
jo
cmp
push
push
rorb
xchg
cmp
ficompl
repnz
sub
arpl
pop
cmp
ja
push
jl
movsb
mov
jae
adc
inc
cld
jo
popf
rorb
fmuls
add
pop
push
mov
dec
clc
mov
mov
movsl
mov
divl
cmpsb
mov
pushl
pop
fs
cmp
inc
cld
dec
jmp
jbe
or
outsl
sub
add
jo
cmp
nop
push
dec
jne
adc
mov
negb
cld
popf
cmp
test
aaa
add
dec
jmp
xor
inc
pushf
aad
call
add
xchg
iret
xchg
dec
jne
sahf
fmull
xor
loopne
dec
pop
xor
lea
fmuls
and
aaa
xor
or
or
or
movsb
pop
cld
sub
jo
outsl
jg
adc
and
sub
mov
xor
je
sbb
enter
sahf
std
inc
jmp
add
jns
mov
cmp
pop
and
or
mov
cmp
cmp
push
into
push
add
inc
dec
scas
push
scas
cmp
inc
add
mov
pop
mov
lods
sti
cmp
cmpsb
movsl
gs
cmc
and
push
stos
pop
adc
int3
cmp
mov
xchg
inc
jl
rcpps
arpl
es
jl
cmp
je
xchg
lock
sub
xchg
sbb
jg
add
clc
cltd
push
inc
or
adc
shr
in
jmp
scas
xchg
push
mov
insb
pop
pushf
jle
int3
aaa
int3
inc
sarb
jl
test
or
mov
ss
sbb
add
lea
inc
dec
cmp
pop
cli
inc
add
loop
xlat
push
dec
cltd
mov
push
cmove
fisttps
adc
imul
add
gs
cmpl
mov
mov
lea
lock
pop
hlt
jnp
push
add
mov
push
mov
cmpsl
cmp
or
cld
enter
cld
fdivrl
fidivrs
cmp
add
add
and
je
add
pop
neg
jge
push
ret
jne
rclb
jmp
or
inc
dec
movsb
cmp
in
or
or
jb
add
xor
lods
push
test
add
lea
pop
ret
mov
sub
lret
xor
and
test
sahf
jne
push
or
cmp
dec
push
shll
cmc
add
mov
xor
jne
pop
mov
fwait
cmpb
sbb
sbb
stos
push
icebp
arpl
adc
mov
pop
dec
fiadds
pop
jo
sarb
scas
sbb
or
pop
scas
push
add
fsubr
inc
cmc
in
mov
test
arpl
out
push
pop
push
lock
cmp
xor
das
shr
fists
xor
jge
add
in
ja
jo
inc
sti
push
push
das
sbbb
add
push
sub
ja
in
dec
push
cmp
push
adc
imul
pop
push
js
insl
jmp
fidivs
xchg
cmp
pop
enter
cmp
clc
xchg
inc
test
sub
ret
in
mov
dec
or
mov
push
enter
clc
out
inc
sar
pushl
mov
cmp
iret
inc
test
adc
add
scas
sbb
insb
inc
pop
aaa
scas
add
push
outsl
add
bound
push
das
mov
shr
inc
or
sub
ljmp
mov
inc
mov
add
mov
pop
adc
pop
scas
in
and
lret
push
imul
sbb
or
xlat
pop
cmp
clc
mov
adc
and
in
rcrb
test
enter
pop
popa
jo
pop
fsubr
or
aad
fstpl
cmp
jne
and
lock
mov
adc
push
and
imul
xor
add
inc
adcb
lea
or
bound
fwait
inc
add
inc
and
xchg
fucomp
push
cmpsb
or
pop
das
or
adc
xchg
inc
imul
pop
cmp
jge
mov
sub
pop
dec
cmp
sbb
cmpsb
out
fistpl
or
ret
cmp
push
xor
rolb
int3
andl
jmp
dec
sub
scas
mov
je
fidivrl
js
mov
fistpll
lahf
adc
cmpsw
jl
sbbb
pusha
sbb
add
inc
pop
mov
pop
xchg
cmp
mov
es
cmp
test
dec
mov
cmp
push
fmul
out
lock
nop
rorl
push
insb
testl
sbb
jl
push
cwtl
jbe
xchg
dec
dec
pop
lahf
je
call
arpl
inc
mov
decl
push
add
or
or
and
or
jle
push
je
cmp
xchg
cmp
into
mov
loopne
js
mov
outsb
cwtl
clc
jmp
adc
or
aaa
lods
or
adc
jmp
push
mov
mov
cld
fldt
pop
jo
pop
jo,pn
cs
adc
cmp
pop
cltd
into
xchg
fucomp
adc
xor
mov
push
jmp
add
jp
sbbl
call
mov
mov
fiadds
call
repz
jae
and
or
fimuls
mov
push
fadds
dec
scas
pop
int3
jg
popf
pusha
mov
ja
mov
cmp
loopne
ds
ja
inc
movsb
jmp
es
cmp
sub
jmp
dec
aam
xchg
adc
dec
mov
sub
push
or
xchg
pop
loop
push
hlt
icebp
jmp
jle
or
xchg
fstl
add
dec
sbbl
sbb
or
or
cld
lret
push
nop
sub
jle
pop
mov
cltd
into
inc
add
pop
ret
lahf
call
push
xor
or
je
cwtl
fwait
fwait
dec
or
jo
andb
mov
pop
ret
xchg
adc
xlat
sbb
insb
dec
jmp
and
insb
lea
adc
lahf
dec
int3
mov
inc
cs
sub
add
je
clc
or
mov
jmp
aas
add
jns
cwtl
lea
xor
mov
in
ds
push
xor
cwtl
pushf
dec
jne
sbb
sbbb
pop
aas
xchg
pop
and
insb
and
mov
dec
movsl
jb
in
inc
push
popa
dec
enter
xchg
sahf
add
xchg
dec
jmp
jo
enter
jne
sub
in
inc
enter
dec
cmp
adc
jo
push
les
cmp
cmp
or
movd
pushl
incl
pop
add
inc
call
clc
xor
add
add
inc
mov
push
cmp
sub
push
in
or
dec
adc
popa
push
sub
dec
xor
push
pop
addr16
fldenv
push
push
dec
jl
popa
rcrb
call
pop
mov
orl
rorb
and
pop
push
xor
pop
inc
or
shl
add
push
push
jl
shlb
mov
mov
and
add
inc
adc
pop
pop
ret
push
sub
push
pop
es
mov
leave
jne
or
pop
push
jns
idiv
insl
push
rcr
notl
add
add
jns
neg
neg
sbb
jg
loope
int
jb
xor
shl
rcl
rcl
rcl
cmp
xor
jg
jb
xchg
cmp
jb
sub
sbb
inc
loop
push
sub
test
call
div
xchg
es
mov
mov
in
xchg
lock
jns
sbb
lock
or
call
mov
sbb
cmpb
lods
jg
fsubrs
sub
jmp
cmp
jne
loope
insl
or
add
je
cmp
pop
je
fistl
ds
add
das
lret
fidivrs
insl
and
jle
jg
jp
roll
or
add
sub
jb
add
or
jmp
rcll
out
xor
push
getsec
jmp
push
cmpl
sbb
jmp
jl
andl
fs
jbe
jmp
jg
mov
cltd
cmp
push
adc
xor
pop
push
inc
push
add
push
mov
xchg
movsb
ficoms
or
test
dec
xor
adc
lock
shrb
shll
cmp
pop
add
jl
cmp
inc
loopne
scas
or
adc
int3
and
sub
shll
daa
mov
clc
loopne
xchg
and
jmp
add
setb
jmp
setl
push
inc
push
mov
dec
int
or
jbe
pop
cmp
movsl
jmp
xchg
adc
ficomps
jo
push
testb
dec
sub
iret
lock
mov
nop
add
pop
test
or
mov
xor
sbb
jg
fiadds
stos
pop
incb
mov
insb
ss
or
jmp
push
xchg
out
ret
fnsave
aam
or
test
inc
add
sub
xchg
sub
adc
or
imull
dec
mov
in
idiv
cmp
je
andl
mov
cmp
jne
mov
cmp
jge
es
fildl
imul
sub
mov
lea
mov
testl
xlat
stos
push
inc
adc
in
scas
cmp
jge
or
mov
jle
xor
repz
in
push
dec
je
arpl
adc
into
stos
cmp
sbb
dec
shll
push
shr
add
add
sarl
lock
test
xchg
insl
add
cmpsl
cmpl
jle
cwtl
or
xchg
push
adc
inc
jl
inc
push
sbb
sbb
cmp
fisttpll
sar
pop
lcall
dec
jne
enter
mov
add
push
andl
mov
xor
pop
push
sbb
lock
jne
cmpsb
int
adc
push
mov
push
movsl
arpl
sbb
add
push
mov
jl
push
push
push
mov
dec
mov
icebp
or
pop
pop
mov
in
test
pop
int3
push
lds
inc
outsl
push
mov
inc
sbb
push
scas
push
mov
in
lea
movnti
xchg
inc
push
addl
push
in
mov
xchg
push
and
xor
inc
loop
in
xchg
loopne
jl
ret
and
jae
add
int
or
je
or
ret
fists
mov
cli
sbb
shrl
sbb
xlat
insb
sub
jno
xchg
stos
or
sti
pop
jne
cmp
aas
scas
lods
xor
or
std
push
clc
lret
int3
push
mov
arpl
add
cmp
dec
inc
push
jo
cmp
popf
test
adc
jge
dec
enter
add
push
test
idivb
vmread
pop
mov
sbb
cmpb
imul
and
ljmp
outsb
mov
loopne
inc
add
arpl
mov
jbe
mov
inc
cmp
and
push
addr16
xchg
pop
xor
xorb
js
fsub
pushl
add
int3
fdivrp
out
cmpsb
lahf
cmp
jg
movb
pop
mov
push
push
movl
jg
add
imull
xor
aaa
cli
lcall
gs
gs
xor
cs
insb
scas
inc
gs
mov
decl
addr16
popa
je
dec
popa
insl
gs
and
loopne
scas
pop
sub
jecxz
sarl
sti
inc
inc
movb
int3
push
nop
and
add
xor
ja
xchg
mov
loopne
repnz
cmp
mov
pop
and
mov
je
or
sbbl
addl
repnz
cld
fs
push
sti
mov
pop
mov
rcrl
incb
add
sbb
mov
lock
es
mov
out
mov
mov
push
sarl
fcomps
sti
int3
hlt
sub
add
cmp
lock
cmp
jne
adc
ja
or
inc
xorl
adc
sbb
add
fldcw
push
je
das
xchg
xor
inc
push
mov
cmc
add
cwtl
pop
imul
test
arpl
subb
dec
pushf
add
push
insb
push
mov
pop
xor
fstpl
adc
pop
mov
mov
push
cmp
jne
mov
pop
mov
dec
mov
xor
jp
sub
mov
aad
jo
pop
adc
push
mov
dec
push
inc
loop
pmullw
out
jo
out
adc
mov
insb
in
sbb
push
xor
adc
icebp
mov
lock
sbb
lcall
fsubl
mov
fs
les
nop
ffree
inc
add
push
lock
addr16
cmp
cmp
mov
pop
mov
or
jne
xor
test
mov
test
inc
ljmp
inc
icebp
mov
movsb
xlat
sub
loope
les
add
pop
mov
je
inc
inc
subb
add
outsl
insl
fwait
and
xchg
ds
xor
adc
pop
call
mov
mov
mov
mov
pop
ret
sbb
dec
xor
nop
out
mov
add
call
push
xor
push
fidivrs
add
imul
adc
lret
es
or
in
xor
add
or
loope
enter
mov
cmpsl
pop
or
inc
fbld
mov
jl
aam
xor
jns
or
add
inc
call
mov
lea
add
push
inc
xchg
sbb
inc
divb
leave
add
pop
cmp
dec
inc
fwait
add
incl
mov
inc
jmp
sub
xor
pop
add
pop
cld
ja
fcmovb
jmp
or
mov
adc
sti
aaa
in
outsl
sbb
and
lret
add
pusha
arpl
dec
pusha
rolb
mov
or
cmp
jb
or
dec
pop
scas
loopne
add
or
xor
in
add
add
cmp
lea
or
or
ret
mov
mov
push
cli
rclb
push
cld
pop
stc
loopne
popf
push
xchg
add
jg
cmpsl
out
cld
mov
mov
xor
roll
add
xlat
cmp
aas
and
je
std
add
jp
rolb
pushl
cmp
cmp
xchg
cmp
shl
or
mov
decl
inc
inc
dec
cld
mov
push
fsubrs
or
inc
nop
or
imul
adc
or
subb
cmp
inc
inc
mov
sub
and
stos
sbb
adc
push
loop
xorb
sbb
mov
int
mov
mov
inc
divb
bound
cmpsl
add
adc
adc
je
movsl
lea
into
push
movsb
push
sub
jnp
push
cmp
and
and
mov
clc
or
sbb
or
loop
inc
jb
or
mov
mov
add
cmp
dec
push
mov
mov
dec
add
mov
inc
and
xchg
sbb
jae
push
jbe
pop
xchg
or
aam
pop
jns
inc
je
mov
enter
mov
and
add
inc
cmp
jnp
roll
sub
lahf
movb
mov
xor
fwait
int
cmpl
nop
jge
test
hlt
imul
add
push
shlb
insb
fldenv
adc
pushf
sbb
xchg
imul
and
adc
subb
or
adc
sub
mov
xor
adc
call
cmp
fcoms
loop
cmp
in
movsb
push
aam
int3
push
push
xorb
pop
nop
push
mov
mov
aad
pop
fnsave
cmpl
cwtl
je
loop
pop
test
add
sub
mov
cs
or
loope
lods
and
mov
mov
sti
jns
push
cwtl
push
ret
mov
lea
pushf
inc
testb
mov
mov
popf
jnp
mov
mov
rorb
mov
imul
push
jmp
or
push
shrb
ret
cmp
mov
push
push
sbb
push
mov
push
loope
jle
shr
mov
mov
sarb
add
outsb
add
push
or
inc
add
outsb
push
dec
push
dec
inc
mov
add
add
xor
arpl
aas
dec
lods
and
outsl
fs
gs
cmp
fstps
adc
jb
jns
pushl
bound
inc
push
outsl
arpl
ja
sti
das
inc
gs
jne
je
dec
outsl
je
imul
lahf
imul
mov
gs
outsl
inc
arpl
or
pop
xor
or
or
jb
xor
pop
add
fbstp
push
outsl
insl
bound
outsl
js
pop
push
imul
nop
mov
push
andps
outsb
dec
inc
xor
pusha
push
lock
je
dec
add
jb
jge
pop
inc
wrmsr
sub
daa
pop
jb
and
adc
daa
daa
daa
adc
add
jg
sub
adc
jge
add
rolb
push
push
repnz
jle
sub
sahf
mov
pusha
nop
pop
add
pop
psubb
in
call
in
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
pop
clc
dec
dec
dec
dec
hlt
lock
call
in
dec
dec
dec
dec
aam
int3
enter
dec
sarb
lods
movsb
mov
pushf
cwtl
xchg
nop
dec
dec
dec
dec
mov
dec
dec
jl
je
dec
dec
dec
dec
insb
push
dec
dec
pop
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
dec
dec
dec
dec
cmp
xor
dec
dec
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
dec
dec
dec
dec
or
add
daa
daa
and
pop
clc
hlt
lock
daa
daa
daa
in
call
daa
daa
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
mov
daa
daa
daa
mov
daa
daa
daa
daa
push
daa
daa
daa
andb
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
pop
clc
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
daa
daa
daa
test
mov
daa
cwtl
xchg
nop
mov
daa
daa
daa
mov
daa
js
jo
daa
daa
daa
daa
push
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
jbe
daa
cmp
xor
in
in
sub
dec
dec
cs
sbb
dec
dec
dec
dec
or
add
daa
daa
and
pop
clc
hlt
lock
daa
daa
daa
in
call
daa
daa
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
jb
and
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
pop
clc
hlt
cmp
cmp
lock
call
cmp
jg
jbe
inc
cmp
lock
sub
sahf
out
das
fisttpl
adc
sbb
mov
jns
and
push
dec
inc
cmp
and
mov
inc
add
pop
gs
stc
and
jnp
mov
or
pushw
pop
mulb
popf
pop
imul
mov
aam
push
movsb
arpl
pop
sbb
movsb
adc
jbe
cmpsb
jmp
inc
or
nop
cmpl
push
hlt
movl
add
pusha
dec
popa
gs
sbb
jg
cwtl
and
push
dec
inc
inc
dec
add
outsl
sti
fcmove
scas
ret
and
dec
push
inc
push
dec
pop
and
push
push
push
dec
push
push
pop
sub
push
inc
dec
pop
dec
enter
dec
dec
inc
push
das
jg
jl
ds
mov
add
inc
movsb
push
xchg
mov
out
xchg
jl
sbb
or
push
dec
push
dec
pop
push
xchg
cmpsb
cltd
rorb
add
scas
inc
jle
inc
invd
dec
push
gs
imul
insl
or
add
inc
movsb
stos
nop
jne
pop
sub
mov
in
xchg
adc
push
jl
or
loopne
or
rclb
ds
pop
cld
inc
pop
inc
inc
push
rolb
and
add
adc
or
add
mov
adc
fadds
iret
adc
sub
or
inc
cs
adc
pop
pop
jnp
sub
arpl
jmp
cmp
enter
pushf
jg
mov
adc
aam
or
outsb
xchg
outsl
insb
fimull
mov
mov
mov
add
sub
or
adc
imul
test
andb
jg
dec
sbb
scas
sub
adc
iret
inc
ja
push
mov
jp
fdivs
je
inc
jb
sub
icebp
stos
shrl
inc
cmp
in
xorl
es
push
ret
jle
incl
mov
stos
pop
push
outsb
xchg
push
sub
dec
dec
dec
insb
push
dec
dec
pop
pop
push
push
dec
dec
dec
dec
dec
inc
inc
cmp
sbb
pmulhuw
in
icebp
repnz
in
in
cmc
div
clc
in
in
stc
cli
sti
cld
in
in
std
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
out
out
shl
in
in
rcl
aam
in
in
xlat
fsub
in
in
fcmovu
fsub
in
in
shl
in
rol
in
in
enter
in
lret
in
in
int
iret
mov
in
in
mov
mov
in
in
mov
mov
mov
in
in
mov
in
mov
in
in
cmpsb
cmpsl
test
in
in
stos
stos
lods
in
in
lods
scas
scas
nop
xchg
aam
in
xchg
mov
mov
pop
lea
xchg
xchg
rclb
adc
inc
js
sbb
sbb
mov
repnz
iret
lock
adc
add
push
inc
inc
bound
nop
inc
andl
adc
dec
gs
in
cmp
mov
stos
in
or
dec
jne
dec
data16
fdivrp
outsl
jge
xchg
cld
pop
or
outsb
nop
adc
mov
push
test
adc
jb
mov
or
ss
lods
scas
cltd
dec
sahf
pop
lods
or
xlat
or
mov
nop
test
push
sbb
sbb
fs
mov
inc
inc
imul
outsl
nop
lods
inc
cs
mov
push
jle
popa
outsb
addr16
scas
adc
aaa
cmp
out
outsb
jbe
jb
cs
data16
outsl
ja
mov
or
dec
sbb
mov
enter
xchg
jbe
imul
dec
mov
scas
and
insl
jle
gs
jo
inc
js,pn
mov
sbb
scas
js,pt
adc
fs
sub
movaps
movswl
imul
or
or
or
inc
sbb
in
jge
loopne
loopne
cmp
shrb
cmp
xchg
cmp
or
and
jae
push
adc
repnz
add
push
pushf
mov
jno
in
mov
lock
in
insl
test
daa
lock
inc
push
imul
xchg
nop
push
mov
mov
out
inc
or
ds
pop
xchg
adc
jno
add
xchg
add
shll
xchg
mov
popa
faddl
fcmovb
mov
xor
scas
push
out
insl
add
mov
push
and
rclb
mov
data16
sbb
popl
mov
inc
push
mov
push
je
mov
mov
addr16
popa
data16
fwait
sub
inc
mov
add
aaa
xor
or
ss
add
mov
push
rclb
jae
inc
cmp
add
mov
in
push
xor
aas
int3
call
xor
push
push
push
aam
push
les
int3
add
xor
add
pushf
sbb
pcmpeqb
or
aam
aam
iret
repz
addr16
jno
inc
dec
jg
repz
xchg
adc
sbb
push
loopne
sbb
aas
jl
sub
mov
sub
xor
sbb
out
push
and
ljmp
push
pop
adcl
insb
jne
loop
inc
mov
pusha
fadd
lods
outsb
arpl
sub
jb
and
dec
push
sub
shr
div
sub
mov
add
iret
sbb
mov
mov
cmp
lods
jg
xor
cmp
aas
iret
insb
sub
pusha
jmp
ja
add
mov
or
das
xor
or
enter
xchg
rcrl
or
sbb
adc
jo
mov
mov
add
daa
push
push
jl
dec
add
inc
outsb
cmpsb
push
movsl
sub
xor
or
sub
ds
sbb
push
sbb
das
les
rorl
add
jmp
fistpl
mov
xor
data16
or
lods
jae
data16
and
jle
pop
add
add
xchg
push
inc
dec
and
lea
cmp
je
and
ret
repnz
push
shlb
inc
testl
xor
pop
add
sub
pop
mov
aas
sbb
inc
cld
out
mov
xor
clc
add
into
sbb
jge
or
inc
sahf
cmp
in
or
sub
pop
add
pop
adc
enter
pop
sub
cmp
jg
out
out
outsb
aaa
sub
and
mov
sbb
pop
jg
ss
pop
cmp
add
pop
jne
cmp
sub
loopne
pop
inc
neg
ret
pusha
add
push
push
mov
mov
ffree
jmp
sbb
xor
mov
xor
hlt
neg
je
cmp
sub
add
cmp
jg
mov
cmp
or
sbb
and
fdivs
shl
popa
pop
cmp
je
hlt
or
pop
add
pop
jl
mov
pop
pop
push
orb
sbb
or
ljmp
cld
jne
pusha
add
roll
iret
sub
daa
and
pop
clc
push
mov
popf
add
sub
fiaddl
in
shlb
outsl
dec
inc
push
nop
push
hlt
ljmp
mov
out
ss
cld
sbb
test
adc
inc
add
lock
inc
int3
dec
out
xchg
psubusw
add
adcb
aas
pop
inc
loope
inc
rorb
cmp
outsb
inc
add
cmpsl
in
enter
and
mov
lea
jo
pop
lea
ds
js
push
mov
sbb
rolb
data16
cld
or
mov
and
stc
push
test
int
loope
jne
add
xor
mov
es
push
psubb
das
mov
push
rorb
and
push
rolb
inc
shll
loope
sub
sub
mov
out
sub
and
fisubrs
sub
or
add
leave
sub
sbbl
sbb
nop
xlat
dec
cmp
aaa
sub
lock
notb
std
add
repz
jbe
adc
or
divb
sub
clc
jb
cwtl
ret
lock
sub
inc
pop
dec
shrb
and
add
lock
add
out
pop
cmp
mov
cmc
lahf
xchg
test
cmpsb
fcoml
rcr
adc
and
es
push
gs
pop
sti
fwait
sar
cmp
add
and
negl
outsb
dec
int3
mov
jmp
mov
and
lcall
sti
mov
inc
out
sbb
movb
into
mov
pop
jne
inc
add
clc
inc
xchg
push
and
insl
push
testb
add
sbb
push
push
cmpsb
xchg
lock
mov
mov
pop
mov
lcall
pusha
jmp
add
and
jo
sbb
or
or
incb
leave
jmp
mov
xor
sahf
test
ss
inc
and
sub
add
mov
mov
je
or
mov
stc
or
dec
jne
jmp
and
lds
or
sbb
ficoml
push
or
sarb
push
pushl
sub
ret
mov
lods
push
jmp
push
xor
fiadds
in
cmp
push
pop
mov
lods
ljmp
jbe
sti
jg
incl
shll
add
push
mov
sub
xor
push
outsb
pop
cmp
cmp
fwait
xchg
cmc
sahf
ret
aam
xor
or
je
pushl
mov
loopne
sbb
sbbl
push
inc
inc
cs
aaa
xor
inc
incl
sub
mov
add
xor
and
sub
mov
adc
movsl
mov
mov
andl
push
and
fistps
ret
stos
and
add
or
mov
mov
clc
fdivr
mov
xor
jg
pop
scas
add
push
sub
rcrl
loope
mov
ret
ffree
ffree
ffree
ffree
pop
aad
rclb
daa
rcll
into
or
lock
pushf
movsb
in
pop
push
lods
cltd
lods
adc
jbe
inc
push
push
push
sbb
inc
setbe
lods
lock
push
lea
mov
jg
sub
mov
fst
inc
pop
pop
jle
andb
push
sarl
insl
imul
xchg
push
cmpsl
mov
push
insb
adc
aas
dec
adc
add
outsb
mov
inc
mov
jbe
dec
sub
sub
pop
in
mov
addb
mov
sti
cmp
mov
sub
adc
push
push
fs
adc
adc
sarl
mov
inc
mov
pop
add
fisttps
dec
in
adc
inc
jecxz
inc
lcall
push
call
or
inc
subl
out
inc
cmp
push
out
aas
inc
pop
cs
ss
lock
dec
pop
lock
clc
push
mov
and
decl
jne
inc
shl
push
daa
push
loopne
incb
aaa
cmp
push
lock
adc
fcomip
adc
insl
lock
setne
jmp
cmp
xchg
xor
pop
mov
imul
dec
rorb
jae
outsb
ret
sahf
sbb
add
pop
add
or
fsubs
in
jb
jle
mov
cmp
jmp
lods
imul
adc
cmpsb
xchg
sbb
adc
bound
clc
pop
push
rcrb
test
or
mov
call
cmp
ja
mov
and
add
in
push
mov
jl
sub
push
jno
gs
push
push
mov
sbb
or
jle
xchg
inc
inc
adc
push
or
aad
bound
pop
es
and
pop
push
sarb
arpl
and
push
push
jl
nop
or
jae
lcall
adc
mov
mov
inc
cld
imul
mov
outsl
pushl
ficomps
jns
sbb
add
adc
je
jo
push
jg
push
ret
jne
mov
push
add
pop
pop
pop
sbb
scas
lds
mov
pop
data16
orl
adc
cli
movl
in
xchg
push
loopne
into
call
jo
pop
lods
or
add
mov
dec
jmp
addr16
mov
jge
inc
call
xchg
xor
xchg
lret
cmp
lock
ja
je
fmuls
mov
inc
dec
push
or
lods
dec
xor
jno
int3
pushf
add
shrb
jno
iret
insb
push
loope
imul
jne
sbb
mov
outsb
outsl
and
push
cld
lret
jo
add
push
call
pop
push
pop
mov
iret
outsl
clc
adc
call
ds
cmp
clc
mov
fcoms
push
rol
cmpsl
jne
dec
jle
and
sti
xorb
adc
jo
mov
sti
lea
and
cwtl
fmul
rcr
rclb
arpl
xor
pop
cmp
push
test
mov
lahf
fimull
lock
mov
shrl
jne,pn
push
jg
or
pop
lahf
inc
add
sahf
add
nop
push
pop
add
inc
mov
rolb
scas
daa
sbb
sub
rorl
and
dec
sti
xor
add
push
hlt
clc
cld
push
mov
dec
scas
gs
xchg
cld
imull
mov
mov
je
push
xor
and
mov
mov
repz
movsl
mov
and
adc
sbb
mov
pop
jp
aaa
inc
xor
mov
ret
orb
inc
into
popw
cld
jmp
jne
test
je
test
jne
mov
lret
push
jp
cld
pop
hlt
clc
inc
imul
lea
mov
addb
out
jnp
mov
sub
test
out
dec
sbb
adc
in
adc
mov
mov
fnstenv
xlat
adc
mov
inc
imul
cmp
mov
xchg
pop
or
add
lret
mov
mov
ljmp
lds
sahf
fldenv
sbb
out
mov
jg
mov
xchg
mov
nop
lock
addl
cmp
jne
lret
jno
jb
add
cmp
jne
sbb
push
sahf
fwait
add
jne
push
add
jne
lret
outsb
dec
add
cmp
enter
sbb
iret
loope
jb
jne
mov
add
adc
mov
das
or
adc
clc
push
repz
je
mov
lahf
loope
lods
std
mov
cmp
or
sbb
sub
sub
je
sub
and
mov
xchg
icebp
es
lock
shlb
inc
inc
push
arpl
in
ret
mov
cs
mov
pop
cld
vmovaps
jbe
sbb
pop
mov
mov
push
rcrb
adc
cli
pop
mov
jne
call
pop
ljmp
rcl
cmpsl
push
or
test
xchg
sub
addr16
push
movsl
dec
sub
or
inc
xor
inc
jo
ja
fidivl
movq
dec
pop
mov
cmp
jbe
ljmp
dec
lds
ljmp
xchg
push
cmp
inc
and
fwait
push
and
lahf
lcall
mov
cmp
loope
cmp
cmp
mov
push
jb
xchg
xor
into
es
add
test
clc
adc
js
fimull
and
rorb
sbb
clc
sub
push
jns
sub
sar
mov
add
call
add
xchg
sbb
movsl
aas
xchg
xor
lret
lods
jmp
enter
jl
aas
cmp
sub
sarb
mov
jno
bound
sub
les
cmp
cmpb
or
ret
sub
lret
shrl
xchg
pop
mov
sub
sbb
or
loopne
call
pushf
jmp
xor
xor
cmp
ja
imul
subb
ret
cmp
cmp
add
pop
dec
jb
cmp
jg
in
cld
or
jl
sbb
mov
je
xchg
ret
and
shlb
mov
pop
cmp
pop
xchg
lea
mov
push
add
and
lea
ficompl
movsb
push
rorl
push
push
movsl
xchg
repz
cwtl
push
ret
inc
sbb
aaa
lahf
push
call
mov
xchg
mov
sbb
lea
and
and
or
jmp
repnz
sub
xchg
data16
sbb
or
popf
imulb
jmp
push
pop
outsb
adc
in
imul
decb
out
and
jne
pop
addr16
cmp
jbe
mov
xor
outsb
aad
jmp
xor
inc
inc
or
xchg
jmp
mov
mov
fs
cld
aas
and
ret
pop
js
mov
pop
mov
mov
shrb
add
cmp
ja
push
and
int3
or
pop
aad
lock
dec
mov
rcrb
pop
push
shrb
pop
lods
and
inc
pop
out
dec
mov
xchg
push
pop
push
fiaddl
aas
mov
or
insl
mov
mov
inc
je
mov
dec
je
dec
jl
dec
jg
aas
mov
mov
ret
les
add
xorl
movsl
inc
adc
and
loopne
adc
sar
js
jp
loopne
mov
inc
iret
push
mov
dec
dec
xchg
fs
xchg
ret
xor
pop
push
loopne
and
movsb
adc
xchg
pop
arpl
mov
test
lods
jo
popf
sub
pop
cld
xchg
cmp
push
fcoml
jg
mov
fcomp
xor
jg
fs
push
or
or
scas
xchg
inc
pop
rclb
pushf
xchg
hlt
fimull
sbb
lock
push
testb
jge
and
clc
dec
cld
lea
flds
push
cli
mov
adc
in
push
jle
test
in
dec
cmp
jg
jmp
add
inc
mov
or
xor
insl
prefetcht2
ds
movsl
out
idivl
push
hlt
insl
enter
and
hlt
arpl
xor
jmp
stos
or
xor
jg
incl
xchg
jge
mov
neg
jmp
or
add
mov
inc
sbb
pushf
pop
cli
decl
cmc
mov
inc
dec
push
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
jecxz
cwtl
inc
xlat
aam
inc
cld
mov
shlb
mov
or
shl
in
mov
repnz
or
call
add
cmp
dec
int
loopne
cmp
jle
jmp
data16
daa
push
sbbl
xor
add
fiadds
es
inc
sub
les
cwtl
arpl
mov
ljmp
hlt
xlat
imul
sub
add
ja
movswl
mov
aam
imul
inc
pop
pop
sbb
jge
mov
cld
cld
jmp
pushf
xchg
out
xor
push
add
outsb
fwait
push
add
dec
inc
dec
lods
or
dec
into
jge
mov
jo
ret
std
ret
mov
aam
dec
or
sbb
sbb
mov
into
je
mov
stos
imul
fildll
stos
jmp
jnp
mov
loop
enclu
mov
inc
stos
pop
pop
inc
clc
dec
ja
mov
push
mov
pop
mov
idivl
jno
ds
sbb
sub
add
mov
mov
mov
das
mov
and
loopne
fbld
adc
mov
loopne
es
je
mov
cmpb
stos
dec
in
div
mov
inc
test
jne
sbb
pusha
pop
mov
xor
call
or
mov
or
je
inc
jne
pop
jge
push
xchg
repnz
or
sarb
cmp
mov
js
ret
ja
lea
clc
adc
lock
jle
inc
je
push
push
cmp
adc
add
push
cltd
mov
mov
inc
loop
push
loopne
jbe
bound
out
mov
and
inc
add
idivb
and
and
adc
and
sub
inc
sub
frstor
sub
sbb
jae
jne
and
sub
sub
sahf
popf
fs
xor
sub
xor
fs
mov
adc
jmp
je
repnz
ds
xchg
mov
ret
movsb
cmp
or
testw
mov
or
xor
inc
inc
push
push
imul
adc
push
add
enter
fabs
push
call
inc
decl
mov
frndint
rcr
scas
jo
fcomp
fstsw
fwait
jg
cmc
outsl
mov
testb
je
fidivl
jne
lea
mov
or
mov
nop
rcrb
test
jbe
push
cmp
xor
stos
or
push
leave
mov
fucomi
lea
pushf
or
cmpb
clc
mov
movb
js
decb
and
pop
data16
ja
mov
jmp
mov
ficompl
icebp
notb
clc
shr
mov
test
ret
xchg
out
push
push
pop
jge
xchg
adc
pop
idivl
rorl
je
add
or
or
outsl
xchg
cmp
adc
jl
mov
cmpsl
and
fidivl
repnz
add
in
mov
fildll
cli
add
and
cmp
mov
ja
mov
setnp
sbb
push
sub
pushf
and
jne
dec
cmp
out
sub
cmp
and
mov
inc
ljmp
enter
or
push
into
cmpb
divl
pop
jmp
xor
je
mov
iret
dec
sub
js
pop
or
rorb
lret
loop
inc
ret
f2xm1
fwait
and
push
fldz
cmpsb
popf
sbb
lods
or
lods
out
inc
mov
daa
test
pusha
jne
inc
fnstsw
cmp
je
and
fistpll
sub
loopne
out
pop
add
jg
jne
mov
sahf
xchg
push
xor
cld
push
mov
add
loopne
adc
aas
jmp
fstpt
adc
in
test
add
sbb
add
test
insl
and
push
and
cmp
mov
outsl
mov
sub
add
jae
fimull
adc
ljmp
cs
dec
mov
imul
push
cmp
add
push
mov
xor
pop
mov
mov
and
popa
xchg
pop
adc
push
ror
xor
push
pop
fistps
adc
cmp
loope
add
mov
mov
lcall
or
xchg
cmc
and
mov
and
xchg
imul
push
pop
xchg
cmp
push
shr
push
sbb
fwait
aas
push
leave
mov
add
fstpt
fldl
inc
test
pop
dec
cmp
divl
push
adc
xorb
in
inc
add
pop
mov
pop
or
cmp
or
int
jae
or
cmp
inc
stc
inc
jnp
push
test
movzwl
fiadds
fwait
mov
jp
imul
adc
call
and
or
add
xor
mov
sbb
add
mov
mov
test
push
jo
pop
addr16
push
and
leave
sahf
call
add
mov
inc
fnstsw
pop
mov
dec
sub
lods
mov
jp
or
and
ljmp
orb
sub
add
and
call
mov
roll
stos
push
and
fldenv
mov
adc
adc
push
xchg
shl
nop
add
lret
popa
xchg
inc
mov
shl
idiv
add
int3
adc
hlt
push
nop
loope
or
inc
enter
mov
xchg
ja
and
inc
imul
jb
or
jb
sti
insb
je
outsb
jmp
ja
adc
add
outsl
test
out
add
inc
dec
jne
sub
lock
sarl
idiv
imul
negb
jns,pn
ret
cli
add
repnz
ds
loop
outsb
ds
add
pusha
ret
or
push
xchg
push
inc
std
std
mov
cmp
xchg
clc
rcll
mov
std
add
pop
pop
movsb
mov
dec
ja
scas
inc
xchg
sub
sub
dec
in
mov
jne
test
jg
mov
or
clc
add
add
mov
inc
fstpt
mov
dec
xchg
cmp
jl
addl
xchg
loop
and
jl
jo
lods
mov
mov
decw
cmpl
fs
fcoms
movzwl
add
loope
lock
add
xchg
sub
or
mov
cmpsl
mov
adc
jbe
dec
cmp
lods
jmp
cmp
jb
adc
lods
test
sub
inc
jmp
mov
imul
mov
pop
hlt
mov
add
pusha
pop
jbe
xchg
cmp
add
jne
sub
bswap
int
mov
cld
mov
xchg
test
out
jae
add
popa
dec
and
or
adc
insb
jno
cltd
cld
fstp
cli
dec
movsl
shr
sbb
push
adc
add
xlat
out
faddl
xchg
lret
shlb
and
lock
xchg
and
inc
je
pop
incl
jge
sub
add
sbb
add
mov
xchg
adc
adc
out
add
cltd
iret
xor
push
dec
mov
pslld
jb
pusha
in
mov
push
xor
dec
inc
es
movsb
adc
push
xchg
inc
lock
popf
mov
outsb
inc
je
pusha
cmp
mov
or
dec
and
cmp
je
mov
inc
add
dec
fs
hlt
iret
push
cmpb
jne
scas
sub
jo
add
push
sti
sti
mov
push
lock
repnz
movb
jo
and
xor
xor
repnz
out
ljmp
jecxz
inc
in
pop
inc
out
lea
into
fidivrl
fidivl
xchg
jmp
lock
add
cmp
ss
push
adc
lret
stos
mov
cmp
mov
mov
lea
movsl
loopne
test
fs
mov
int3
call
push
push
or
add
int
mov
sbb
cmpl
sub
sub
aam
mov
and
add
lret
lods
cmp
aas
jbe
add
and
mov
pop
push
imul
dec
adc
push
pushf
mov
inc
ljmp
cmp
aam
ss
ljmp
dec
in
dec
ds
pop
addr16
imul
inc
sub
xor
fs
xor
pmaddwd
mov
or
adc
je
or
cs
cmpb
jne
lahf
sub
lds
add
jmp
mov
pop
add
add
in
iret
arpl
aam
mov
add
lcall
nop
mov
movsb
insb
cmp
lods
into
sbb
cmpl
mov
push
pop
loop
push
in
add
loope
push
std
inc
nop
scas
pop
mov
push
ret
into
or
repnz
sahf
jns
shll
pop
xchg
int
adc
out
lods
xchg
and
mov
xchg
jge
lock
lahf
sub
jae
popf
notl
outsl
nop
jo
dec
jne
jge
dec
add
pop
loop
push
fmulp
cmp
xchg
pop
das
test
sub
test
fsts
or
or
mov
or
or
add
add
pop
cmp
or
cmp
dec
or
imul
jmp
mov
sub
pop
mov
hlt
xor
int
mov
push
mov
rcrb
cld
pop
and
in
pop
sbb
inc
mov
add
mov
les
jae
inc
lods
das
popf
adc
dec
push
lea
and
fcomps
aam
pop
and
movsl
lock
dec
ljmp
jmp
sbb
scas
fldt
js
inc
sub
inc
jnp
xor
test
ret
dec
je
add
jmp
xchg
fdivl
push
adc
add
cwtl
pusha
out
leave
add
mov
nop
dec
into
dec
mov
sbb
xlat
nop
and
jo
sbb
shll
sbb
outsb
pop
jl
xor
dec
jg
je
mov
add
cld
outsl
sbb
pusha
sub
je
pop
je
jmp
push
inc
cmp
mov
nop
xchg
jl
fstpl
sub
mov
test
or
shr
adc
or
pop
add
arpl
inc
ljmp
adc
or
and
push
or
or
add
jb
cltd
dec
and
mov
fiadds
fsubrs
pop
popa
call
out
push
rolb
add
or
add
push
lds
jmp
aam
add
sub
out
loopne
cmp
stos
js
pop
xor
cmp
in
ja
add
lock
ja
adc
fbld
jp
and
mov
xor
xchg
mov
add
jnp
xchg
mov
mov
jne
mov
out
dec
or
and
or
lods
add
sahf
out
call
jno
mov
js
shrb
cmpb
imul
popa
movl
pusha
push
sbb
mov
mull
daa
jl
sbb
dec
sub
lock
shll
pop
sub
mov
sbb
jmp
or
into
adc
stos
push
cld
clc
inc
mov
iret
and
xchg
mov
or
dec
das
push
dec
fimull
fcmovnu
cmp
adc
repnz
negb
cmp
push
sub
nop
add
lods
mov
ljmp
test
scas
pop
jnp
nop
lea
inc
add
pusha
or
xor
inc
out
pop
and
pop
push
or
and
pop
or
in
sbb
imul
mov
sbbb
add
push
shlb
mov
ss
jp
pop
and
lea
rcrl
jle
xchg
sbb
pop
jl
add
fisttpll
arpl
in
scas
in
mov
cwtl
cmp
xchg
pop
xchg
sahf
rolb
jbe
ret
aad
push
repz
dec
push
mov
into
jnp
adc
rclb
inc
shl
lock
adc
iret
mov
jbe
sbbl
ja
shr
or
add
and
iret
ret
test
push
sbb
pop
jl
push
inc
push
cmp
inc
inc
hlt
add
jne
sub
sbb
fisttpll
cmpsl
imul
incl
and
sub
je
dec
mov
ja
sub
je
jmp
mov
jmp
push
push
push
sahf
movsl
notl
jbe
push
inc
out
clc
jle
out
adc
aad
add
mov
or
sbb
add
jnp
add
jl
pop
mov
mov
adc
or
push
pop
push
xor
mov
mov
hlt
or
in
and
fstpt
rolb
dec
loopne
mov
jmp
inc
pusha
outsb
inc
dec
sub
sbb
or
mov
sub
jl
jne
cmp
jg
sbb
ljmp
xor
sub
add
inc
cld
xor
stc
imul
add
add
add
testl
popa
dec
cld
gs
xchg
fcomp
add
loopne
ja
test
sbb
push
popa
sub
sarb
and
or
cwtl
push
repz
and
repnz
sub
sub
addr16
out
mov
sbb
lock
fmull
aaa
cli
fadd
loopne
adc
sub
dec
fucomip
sub
jbe
notb
sub
cmp
mov
jle
mov
mov
filds
test
cmp
stc
sbb
push
das
mov
pop
repnz
and
out
or
push
pop
and
add
in
popl
pop
fldenv
repnz
jb
testl
es
push
mov
lock
call
lock
or
sbb
out
sbbl
mov
les
sub
jo
jge
add
flds
mov
rcrl
ja
jo
out
ds
add
cmpb
idivb
enter
fs
jne
mov
add
or
or
xchg
adc
adc
cmp
or
mov
js
popa
sahf
je
mov
pushf
mov
stos
and
stc
cmp
mov
or
jl
mov
fwait
jb
jne
ret
cmp
shr
inc
fsubl
dec
adc
push
fsubrl
andb
fisttpl
nop
cmpsb
push
fsubs
das
push
addl
jne
sub
dec
imulb
add
mov
out
daa
xor
cld
sbb
jae
add
xor
add
inc
cwtl
fwait
mov
call
fs
mov
adc
pushf
repnz
push
clc
lret
decb
imul
and
movl
iret
sub
lahf
mov
mov
dec
fs
sub
or
and
add
xor
dec
xor
or
mov
out
je
push
enter
or
or
dec
or
add
sbb
sbbb
cmp
mov
push
inc
sahf
push
inc
decb
or
jne,pt
adc
loope
subl
xor
xchg
adc
or
xor
movsb
sahf
and
cmp
adc
xchg
mov
fadds
pop
push
push
call
cmc
mov
and
add
enter
mov
enter
cwtl
pop
inc
mov
into
jnp
sub
fwait
es
mov
add
pop
in
cmp
xlat
mov
adc
mov
lods
pop
xor
xor
sub
mov
or
inc
pusha
or
inc
pop
pop
or
cld
mov
adc
push
sub
xchg
adc
xor
jne
and
fdivrp
mov
xor
mov
push
adc
pop
cmp
xor
scas
or
add
or
sbb
notl
fmul
fstpl
fwait
jmp
sbb
adc
lret
arpl
adc
scas
add
out
add
mov
out
push
push
sbb
adc
cwtl
jmp
rorb
add
xorb
loopne
ljmp
in
push
lret
xchg
dec
fs
fwait
sub
pushf
in
mov
or
mov
popa
xor
jno
out
add
inc
cmp
xchg
fprem
push
sub
xchg
add
xorl
push
sbb
lock
test
sbb
lods
mov
or
loope
mov
sbbb
jecxz
fists
push
lcall
jl
testb
pusha
or
scas
mov
mov
fwait
adc
testl
enter
jno
inc
lock
jl
push
testb
adc
or
arpl
rorb
pop
add
xor
push
in
lock
mov
dec
call
or
sub
call
or
sub
adc
or
rorb
fnstsw
inc
cmp
xor
imul
pop
je
sbb
cmp
pop
inc
add
add
js
mov
sub
dec
xchg
push
cmp
adc
xchg
sub
mov
push
lock
ficomps
or
imul
and
mov
sbb
fildll
in
mov
sbb
or
or
cmp
test
fidivrl
std
subl
jbe
jl
push
mov
loopne
push
aas
inc
nop
popa
pop
dec
dec
jne
push
push
lods
push
cmp
ret
adc
and
das
xor
popa
jb
mov
inc
push
loop
imul
into
or
insl
mov
orb
or
repz
ret
cmp
ljmp
test
jmp
mov
je
sub
je
mov
das
enter
in
lock
inc
lds
sub
mov
test
loope
in
loop
push
loopne
fcomi
stos
add
jge
mov
dec
xchg
cmpsl
fwait
adc
sub
jne
pop
xor
mov
sahf
add
jae
mov
fstpt
inc
jmp
icebp
pop
je
jne
ss
in
in
iret
jmp
in
in
movsl
mov
dec
jle
sarl
stos
into
in
mov
inc
sbb
xlat
addr16
sbb
stos
adcb
ja
pop
sub
and
pop
pop
and
push
push
sbb
test
js
xchg
sti
xor
xchg
sbb
loopne
pop
jne
jg
mov
xor
and
in
stc
inc
popa
cmp
aaa
add
push
mov
jb
or
popf
gs
or
movsb
mov
inc
push
repz
mov
in
xchg
or
sub
push
cmp
out
repnz
inc
pop
pusha
sbb
les
add
jae
cld
push
add
inc
add
pop
adc
cwtl
pop
push
aaa
lods
mov
sbb
lods
iret
in
cmp
and
mov
mul
rorb
push
mov
sarb
xchg
out
lret
mov
stc
ljmp
or
mov
xchg
sti
inc
jno
cs
or
pop
dec
addr16
pusha
mov
movsl
adc
aam
mov
dec
push
and
int3
aam
ljmp
pusha
lods
jnp
add
adc
hlt
nop
iret
or
pusha
rolb
xor
xchg
inc
ss
pop
lock
adc
inc
lds
pop
inc
pop
dec
adc
insb
fists
lods
mov
push
outsl
pusha
bound
pop
popa
jmp
xor
mov
xchg
xchg
cs
lcall
mov
test
or
loope
lods
xor
mov
es
mov
adc
fistl
add
test
or
adc
dec
fwait
inc
test
test
test
or
daa
cmpb
sub
ret
push
adcb
xor
or
inc
stos
pop
mov
mov
loopw
mov
lea
lods
mov
or
xor
fucomip
ret
shlb
sbb
jmp
adc
push
and
push
push
orl
in
cli
push
push
mov
jo
pop
call
decl
push
jge
adc
rcl
lret
pushl
push
adc
ljmp
nop
dec
fildl
sub
and
cmp
dec
push
popf
mov
fdivl
pop
adc
hlt
aam
mov
ret
pop
loopne
xchg
ds
cld
inc
xchg
rol
aam
fisubrs
cmp
lea
mov
push
mov
jbe
movb
dec
sti
call
or
jge
clc
cmpsb
in
ud1
test
loopne
mov
mov
inc
ret
add
imul
xchg
insl
add
push
les
lea
aas
bound
push
in
inc
aam
xchg
adc
sbb
insl
push
sbb
cld
lret
in
push
cmp
je
jmp
xor
jb
je
jmp
xor
dec
sti
xchg
and
ret
mov
add
push
xor
shll
or
or
push
push
jle
lock
cmp
sub
mov
sahf
nop
out
inc
mov
lods
mov
in
sti
jg
lods
pop
cld
cmpl
mov
pushf
incb
or
cmp
cld
jae
add
adc
add
cwtl
daa
or
mov
cmp
sub
ret
in
rolb
fs
xchg
lock
fcmovnbe
inc
push
fcmovne
add
mov
mov
jae
or
push
enter
shrb
pop
push
jno
mov
outsb
lock
mul
and
pop
sub
jl
pushf
mov
out
xchg
add
leave
nop
sub
cmp
adc
rclb
ret
mov
lock
fcom
jg
xchg
cld
std
rolb
or
stos
mov
push
or
imul
test
out
cmp
rcrb
push
cmpsb
mov
add
mov
push
sbb
lcall
xchg
adc
push
nop
out
shlb
fdiv
cmp
or
xlat
cmp
or
rcll
gs
sub
cld
faddl
cmc
mov
adc
mov
pop
fcomp
sub
pop
fimuls
cli
push
das
lods
aad
mov
outsl
mov
test
add
cli
mov
and
test
push
sub
inc
or
adc
adc
sbbb
inc
sub
and
add
loopne
jg
aaa
sbb
sbb
fsubl
pusha
adc
in
add
pop
js
adc
gs
enter
insb
mov
xchg
cmpsl
popa
nop
push
aaa
mov
repnz
jns
add
rorb
mov
sub
jne
and
push
idivl
xchg
cli
push
adc
into
ss
add
int3
mov
addr16
pcmpeqw
cmp
mov
push
mov
pop
call
mov
clc
dec
xor
or
mov
inc
sub
test
xchg
mov
xor
mov
loopne
jmp
dec
push
out
pop
dec
xor
mov
adc
pop
aam
les
and
icebp
fidivrl
push
mov
inc
shlb
popf
clc
mov
cmpb
add
xor
sbb
jmp
mov
dec
dec
sub
test
jl
enter
or
jb
mov
sub
and
ljmp
inc
sbb
lcall
lea
mov
sub
jo
aas
in
xor
add
je
in
add
sbb
lret
xor
push
adc
xchg
pop
daa
push
sarl
aam
dec
cmc
cmp
jle
and
inc
sub
movsl
cli
stos
sub
mov
testb
iret
push
adc
and
data16
lock
lcall
into
sbb
js
lock
bound
jge
mov
pop
imul
ds
xchg
leave
cmp
inc
scas
fwait
movl
jge
jl
jne
in
nop
mov
or
and
aam
stos
mov
ds
mov
dec
out
jle
fidivrs
add
cmp
jno
dec
mov
and
int3
cmp
in
jp
loop
enter
jp
mov
fimuls
decl
add
pop
movhps
add
and
shl
add
or
jno
add
stc
pop
fwait
or
fsubrs
repnz
iret
mov
mov
imul
ret
cs
pop
gs
lahf
das
int
popa
fcomps
rclb
adc
adc
and
add
iret
or
xor
subb
movsl
pop
fs
imul
outsl
rol
and
aas
or
push
pop
mov
test
pop
sbb
sbb
push
pusha
xor
pop
mov
cmpsb
cld
add
and
into
push
enter
insl
ret
mov
mov
push
pop
xchg
pop
test
je
cmp
aas
inc
inc
clc
pop
pop
dec
shlb
rorl
xor
push
push
dec
ja
pop
add
frstor
fisubrl
movsl
jae
test
daa
rolb
cmc
xchg
push
jne
pop
xchg
pop
cmpsl
loope
icebp
mov
inc
adc
dec
cmp
adc
mov
cmp
sbb
jb
subb
mov
insb
lock
fldl
clc
push
jl
test
fiadds
dec
jb
jo
mov
or
loop
adc
ljmp
test
adc
lret
xchg
mov
and
je
scas
push
push
push
or
mov
daa
aaa
dec
inc
inc
add
jp
cwtl
xor
mov
sub
cmp
jbe
lds
emms
test
ljmpw
xor
jbe
adc
bound
stos
cld
out
addr16
mov
or
sub
push
xacquire
inc
jne
jg
or
dec
jge
mov
push
int
enter
aaa
cs
aaa
add
aaa
pop
sub
jb
inc
mov
inc
and
cs
and
jne
adc
mov
or
or
push
pop
jne
ret
push
mov
add
push
or
inc
add
add
mov
and
mov
data16
fsubrs
mov
pushfw
add
and
call
push
outsl
push
push
mov
add
pop
cmpl
lods
movq
movb
punpckhdq
lea
rclb
push
sbb
ret
mov
cwtl
pop
push
rcrl
pop
outsl
adc
roll
xchg
leave
sub
dec
mov
rolb
sub
je
dec
iret
adc
inc
daa
dec
mov
xor
xchg
pop
adc
add
lock
adc
dec
sbb
subb
sub
mov
in
iret
and
call
jl
fdivrl
mov
push
setae
aaa
enter
in
insl
movsl
mov
sbb
and
mov
fwait
shl
mov
and
xchg
inc
aam
fdivrs
pop
mov
mov
jle
dec
repnz
sarb
dec
movsl
inc
pop
sub
mov
test
hlt
enter
pop
out
and
sub
mov
mov
je
jl
and
xchg
ss
les
ret
adc
enter
hlt
mov
push
sbb
push
jne
mov
add
aas
insb
cmp
lock
in
jo
insl
push
in
mov
sub
loopne
push
insl
das
fs
xchg
jg
and
filds
popa
xlat
mov
jo
push
mov
test
pop
sbb
in
cmp
pop
push
cmp
push
adc
andl
dec
popa
jae
push
add
push
daa
push
les
add
dec
es
push
or
fs
dec
add
outsw
or
in
jmp
or
xor
jmp
testb
adc
inc
jl
pop
jg
or
xor
add
push
cld
inc
jmp
pop
pop
ret
dec
dec
pushf
add
std
loop
or
cmp
or
inc
add
adc
cmc
xor
and
test
sbbl
pop
adc
cmc
and
and
or
aam
in
adc
cmp
inc
add
lock
pop
cli
call
dec
inc
xor
lea
cmpl
pop
xchg
ss
cmp
adc
dec
adc
fldcw
sbb
jmp
cmp
decb
mov
cs
inc
ret
add
std
add
fprem
xor
sub
cli
cmp
jne
insb
loope
adc
mov
scas
in
xchg
cmp
xchg
adc
inc
in
adc
inc
sub
jo
push
mov
or
push
or
shrl
jne
negb
stos
je
imul
mov
leave
iret
sub
js
push
push
idiv
cmp
test
ret
jp
mov
test
std
adc
pusha
push
adc
sub
jp
xor
and
sbb
loop
dec
xchg
out
out
cltd
test
insl
jge
mov
outsb
and
ljmp
add
mov
sbb
icebp
clc
jnp
xor
mov
sub
dec
lret
mov
jl
sub
aas
push
inc
hlt
out
xor
push
push
and
cmp
pushf
aam
lea
or
sub
and
test
gs
jo
dec
pop
dec
in
inc
js
pop
xchg
lock
mov
lods
call
dec
ret
xchg
push
out
or
sbb
les
inc
call
sub
mov
movsb
aam
and
adc
loop
jg
insb
cld
icebp
inc
cmp
jne
movzbl
cld
rcr
sbb
jle
sbb
push
pop
adc
movsl
add
pusha
call
pusha
push
xor
and
out
push
add
add
jle
insb
inc
inc
mov
add
xchg
in
sub
jne
push
fldcw
mov
push
fcompl
mov
inc
popa
ds
or
jg
fs
inc
or
cmp
orl
icebp
mov
repnz
or
fistpll
fldenv
pop
subl
in
lea
jbe
and
sbb
inc
mov
and
sub
cmp
fdivr
add
cmpsl
cmc
jb
scas
push
lcall
sbb
adc
pop
lret
sbb
sahf
mov
lcall
out
clc
xchg
outsb
fldcw
mov
push
pop
mov
push
adc
int3
push
xorl
sbb
dec
adc
bound
mulb
imul
adc
sbb
xor
adc
or
xchg
cmp
arpl
dec
xor
sbb
lea
fnstcw
pusha
repz
or
ret
les
loope
mov
jmp
adc
cmpsl
gs
sub
test
xor
sbb
inc
jne
mov
test
insb
jge
sub
in
incl
inc
or
rcrl
push
fimuls
decl
negb
jnp
xchg
cs
jo
push
int3
mov
fmull
mov
daa
mov
clc
mov
incl
mov
jo
cmp
je
xchg
fdivs
jmp
inc
jecxz
int3
push
jb
xchg
pop
xor
mov
mov
loop
pop
xor
push
jg
dec
or
dec
mov
xor
inc
xor
ror
xor
or
stc
or
xchg
lds
decl
cmpsl
add
pop
pop
xor
push
pop
sbb
add
movsl
imul
mov
mov
inc
pusha
xor
xlat
popf
hlt
push
xchg
cmp
in
cmp
pop
cmp
mov
lret
div
xchg
jne
fs
popa
cmp
and
in
in
cld
mov
cmp
mov
push
arpl
aaa
or
out
fnstcw
and
scas
pop
push
gs
imul
mov
jmp
repz
jp
popf
and
call
sbb
pop
outsb
je
js
inc
dec
clc
or
inc
adc
add
ret
scas
adc
loope
fs
dec
mov
and
lock
cld
jmp
dec
cli
hlt
adc
idivl
sbb
dec
sahf
out
sahf
aam
int3
push
sub
les
mov
mov
jle
imul
xchg
sahf
idivl
test
js
out
fdivp
push
xor
insb
cld
jns
idivl
add
out
out
dec
jle
inc
dec
sub
sbb
push
lock
enter
cs
rolb
and
push
cli
ja
sbb
das
sbb
push
leave
mov
ja
or
push
or
sti
add
cld
add
xchg
xchg
cmp
mov
hlt
push
lock
cmp
loopne
push
test
call
popf
in
and
loopne
cmp
iret
fcompl
inc
aam
jns
fmulp
sub
push
lods
int3
inc
daa
iret
leave
cmp
mov
xor
cmp
in
adc
mov
std
mov
mov
cld
daa
out
in
lods
push
xor
fwait
cmp
mov
push
or
jns
popf
cwtl
mov
notb
nop
jbe
insb
sar
push
pop
xchg
sbb
xchg
pop
add
push
jp
or
rcr
fdivrl
outsb
or
push
mov
fisubrs
fsubs
enter
bnd
enter
mov
das
xchg
call
adc
and
sub
js
sub
sub
or
mov
dec
aam
pusha
enter
nop
pop
lods
or
add
add
or
pop
hlt
push
pop
lods
xor
mov
adc
or
imul
jnp
shrl
pusha
push
int3
in
push
or
repnz
sub
and
pop
pop
popa
cmp
jae
cmp
jge
lret
pop
dec
push
xchg
jno
jmp
jbe
sub
mov
loop
pop
ret
in
pop
jp
pop
pop
or
jecxz
mov
aas
or
movsb
add
pushf
mov
adc
pop
movb
mov
test
dec
xor
gs
repz
xlat
dec
push
test
pop
or
repnz
data16
and
pop
leave
adcl
inc
push
cmpl
sub
inc
cmc
inc
fimuls
out
fcomp
loop
ds
movsb
sbb
decl
dec
cmpb
cmc
sbb
adc
mov
std
inc
xor
js
inc
mov
sbb
or
notb
sbb
insl
mov
mov
iret
add
mov
lods
sub
filds
sbb
ljmp
test
adc
mov
rcrl
cmp
mov
dec
jmp
inc
mov
nop
cmp
adc
divl
nop
into
xchg
nop
mov
mov
in
mov
pop
lret
clc
adc
push
notl
rorb
cmp
rol
out
push
subb
scas
mov
add
out
pop
mov
pause
xor
and
adc
sbb
in
mov
and
and
dec
mov
dec
xor
xor
xor
cmp
xor
and
cmp
dec
in
dec
call
fs
inc
mov
cltd
in
or
adc
jb
movsb
and
xor
push
cmc
inc
pop
jns
movsb
jb
push
pop
inc
mulb
mov
and
cltd
mov
jne
xlat
ljmp
mov
jl
mov
add
outsl
je
fs
das
pop
mov
jne
inc
imul
adc
mov
stc
repnz
jb
pop
outsl
jb
insl
jo
inc
jb
nop
jl
outsl
insl
push
je
pop
push
cmp
ret
pop
adc
jns
dec
aas
add
adc
inc
jns
sbb
add
pop
outsl
lahf
push
loope
enter
pop
loope
enter
cli
into
jnp
xorb
add
and
cmp
push
sbb
sub
cli
ss
and
sar
sahf
test
fimull
fisubs
add
and
push
iret
repz
les
fcomps
adc
xor
repnz
push
insb
clc
cmp
inc
sub
or
ret
fbstp
push
mov
adc
sub
sbb
testb
subb
or
and
or
sub
cld
cmp
cld
pop
mov
inc
add
mov
lods
inc
fisubrl
mov
pusha
add
jb
sub
es
loopne
insb
and
movl
test
jb
lret
test
mov
inc
popa
adc
shll
push
or
adc
or
xchg
pop
mov
inc
ficoms
jo
sbbb
dec
push
imul
ficompl
leave
popa
scas
popl
gs
iret
inc
call
call
popa
scas
inc
pop
dec
insl
jo
movsb
and
fcmovu
rorb
iret
and
inc
sti
inc
insl
cmp
jo
or
loop
ds
ficompl
aam
push
push
dec
int3
sti
pop
sbb
add
jne
insb
jg
movl
fiaddl
dec
cld
divb
cld
mov
sbb
aam
lds
in
aad
iret
cltd
in
add
in
out
xorl
mov
es
add
in
adc
gs
cs
movsb
ficoml
push
xor
or
and
sub
add
test
sti
xor
ret
or
xchg
add
add
adc
mov
sbbb
jb
dec
outsb
add
sti
mov
and
nop
jne
in
adcl
pop
adc
cmp
jg
enter
mov
mov
dec
sbb
mov
popf
fnstcw
sub
dec
je
sbb
cmpsl
push
sbbb
lahf
leave
jbe
push
nop
es
jbe
add
push
fldl
xchg
mov
stc
pop
inc
push
pop
std
dec
pop
icebp
jb
aas
clc
mov
pop
repnz
ss
hlt
mov
dec
cmp
push
sbb
div
cmp
push
repnz
and
in
mov
repnz
hlt
call
nop
sbb
inc
sbb
mov
jnp
jae
cmp
loopne
jmp
seto
enter
aaa
int3
or
lods
push
les
fcomp
enter
inc
scas
shlb
mov
jno
les
push
pop
enter
dec
loopne
or
filds
xor
je
inc
push
sbb
ss
mov
sub
or
test
shll
jmp
adc
repnz
addr16
xor
shlb
lahf
roll
adcl
cmc
aam
jns
add
sub
adc
jbe
jmp
inc
xchg
mov
push
mov
in
pop
mov
fiaddl
or
in
jb
and
push
les
sbb
outsl
stc
js
sahf
push
sbb
lahf
add
xor
push
roll
rcr
lock
loope
xchg
addl
dec
sbb
sarb
add
xor
incl
in
ret
jnp
mov
add
xchg
and
mov
jmp
mov
mov
fimuls
push
and
in
pop
ror
das
call
test
aaa
or
dec
inc
or
inc
add
pop
push
add
cmp
mov
add
add
inc
adc
test
cld
push
movsl
and
xchg
pop
les
rcr
dec
sbb
clc
jmp
and
and
xor
imul
lea
push
call
popf
repnz
cmp
cmp
clc
out
and
mov
adcl
fs
dec
inc
rcrl
jmp
inc
mov
scas
jge
jge
cmp
dec
repz
dec
jnp
hlt
out
rcrb
in
test
fsubl
cmp
fsts
movsb
jge
insl
mull
les
pop
aam
push
cmpsl
jge
mov
clc
adc
or
add
add
add
pusha
popa
nop
lahf
push
fs
inc
sub
or
or
js
push
jmp
div
and
sub
sbb
dec
scas
and
adc
shlb
and
or
dec
loop
mov
jb
pop
add
mov
add
es
jne
ret
jge
adc
iret
pushf
loop
or
jne
and
bound
inc
enter
and
xchg
and
neg
mov
jmp
cs
inc
nop
popf
out
adc
fwait
mov
cld
and
mov
cmp
sbb
inc
jb
sahf
push
jmp
sub
lea
pcmpeqw
cmpl
addr16
push
xchg
add
sub
jmp
sub
movsb
ds
pop
inc
push
lret
xchg
mov
push
jns
mov
pop
addr16
xchg
or
adc
sbb
mov
movsb
jmp
arpl
push
inc
mov
enter
lods
cmp
clc
fimull
movsb
sub
add
imul
sbb
mov
loopne
and
jb
in
in
sbbb
loopne
out
xchg
cmpsl
lcall
and
jp
cltd
xchg
cmp
jnp
sbb
data16
push
inc
cmc
xor
cltd
cli
cwtl
and
rclb
in
pop
aad
sub
outsl
push
push
mov
xchg
pop
fstl
enter
push
jecxz
xchg
lock
ret
pop
xor
aam
push
add
xchg
sbb
lcall
sbb
jns
xlat
xchg
push
jns
add
or
add
xorb
pop
cmp
adc
cmp
dec
push
stc
mov
adc
hlt
or
mov
sbb
add
inc
mov
xor
or
test
push
out
cmc
pop
fistpll
repz
pop
jne
push
or
adc
add
or
or
int3
or
sbb
cld
clc
xchg
jp
lock
pop
jne
cld
repnz
push
xor
lock
mov
and
xor
sub
dec
fs
or
cmc
push
ja
mov
fdivs
mov
add
xchg
lcall
popf
lods
nop
imul
push
xchg
loop
and
jmp
cmp
cs
cmpl
cmp
xor
scas
nop
int3
jp
insb
dec
and
xlat
xorl
sub
jl
jecxz
xchg
push
push
mov
imul
popf
sbb
cwtl
loop
jbe
jae
push
push
aad
out
pop
adc
cs
xchg
lsl
pushf
std
call
pop
std
call
sbb
lds
push
rcl
popa
loope
adc
sbb
es
notb
in
xor
jmp
mov
test
xchg
mov
add
cmp
jne
dec
std
movsb
out
add
cmp
push
shlb
in
add
sbb
mov
iret
repz
mov
pop
outsb
ds
repz
mov
mov
in
punpcklwd
daa
stc
icebp
cmp
jns
and
xor
mov
inc
sbb
lock
lock
rcl
dec
sub
xlat
pop
mul
repnz
arpl
add
orl
xchg
lahf
inc
inc
xor
jae
adc
fstl
enter
fistpll
jl
pusha
xchg
cmovbe
test
aas
push
and
jns
adc
cmp
sbbl
cmp
jp
or
jns
nop
fadds
mov
mov
push
push
call
and
nop
adc
or
test
sub
sbb
mov
adc
mov
iret
xchg
adc
das
insb
repnz
ja
inc
adc
mov
push
mov
call
dec
lods
orl
std
jg
sub
xor
or
ljmp
mov
cmp
add
cmp
es
add
jno
dec
adc
push
sbb
mov
push
mov
add
fisubrl
push
adc
inc
sbb
pop
dec
cmpsl
das
cmp
cltd
add
shl
in
cmp
lock
outsl
and
pop
push
xorl
pop
cwtl
and
aas
mov
aam
push
outsl
loopne
xchg
mov
aad
push
sub
cltd
lock
xor
push
sbb
mov
push
or
sbb
aad
pop
sbb
add
in
arpl
imul
leave
cmp
out
jmp
dec
jnp
iret
rep
nop
and
repz
fnsetpm(287
adc
daa
scas
mov
cmp
fdiv
jecxz
or
stos
dec
imul
and
sub
shll
insl
daa
std
push
sar
cmp
pop
xchg
sub
fldl
fdivs
test
sbb
and
enter
dec
sbb
pusha
add
jno
adcb
add
xor
inc
lock
mov
cwtl
je
dec
je
jmp
mov
mov
mov
test
push
push
jle
stc
repnz
mov
test
mov
sbb
jecxz
hlt
add
daa
outsl
jns
jae
pop
inc
cmpsb
push
sbb
jnp
sub
in
nop
loopne
cli
mov
fadds
pop
fldcw
cmpsl
xchg
mov
fstp
sub
and
push
fwait
test
imul
mov
sbb
mov
adc
push
push
loop
adc
nop
or
aaa
or
adc
jmp
add
lcall
aaa
jmp
shlb
push
push
push
repnz
and
testb
mov
mov
sbb
push
mov
or
xor
mov
add
jle
or
add
and
sub
adc
mov
andb
pop
or
pop
adc
push
sbb
mov
inc
daa
sub
jbe
pop
jb
andl
adc
add
xchg
mov
fs
add
push
push
sbb
pop
add
xor
fdivs
addl
sub
or
ret
fiadds
jnp
add
sahf
imull
cmp
inc
pop
arpl
xchg
shlb
inc
jp
mov
adc
enter
aas
mov
add
dec
add
out
add
jb
add
call
sbb
stc
add
arpl
jns
out
cs
push
pop
testl
mov
and
sbb
or
xor
test
sbb
add
push
sub
iret
repz
inc
dec
sbb
lret
rorl
inc
sahf
mov
mov
inc
jle
andb
mov
nop
add
sahf
ret
dec
cwtl
loope
sbb
cmpsl
sbb
movsb
addr16
inc
and
push
push
pusha
cwtl
add
pop
aaa
in
jno
inc
leave
jne
adc
shlb
sub
pop
adc
int3
and
test
dec
inc
dec
adc
push
gs
jge
pop
lds
ds
imul
cmp
mov
mov
je
cli
movsl
and
cltd
repnz
ficompl
popa
dec
loopne
cld
shr
push
adc
ss
int3
push
xor
arpl
lock
cmc
inc
push
faddl
mov
jg
call
leave
enter
mov
jb
xor
loope
call
test
adc
jbe
add
adc
xor
popf
aaa
cmp
mov
jns
jnp
pop
cmp
push
mov
xor
lock
and
dec
in
fstl
popa
pop
je
iret
repz
fwait
scas
ret
push
stc
push
adc
adc
adc
mov
mov
dec
es
sub
sbbb
and
adc
in
or
imul
xchg
mov
and
bound
xchg
inc
sarl
mov
xchg
adc
mov
jno
and
xor
and
and
iret
rcrl
hlt
or
leave
fwait
imulb
inc
and
push
lret
sahf
outsb
pop
push
xchg
movsl
dec
adc
lahf
rorl
daa
scas
das
fstpl
mov
and
add
and
pop
inc
xor
push
sub
add
js
mov
fiaddl
adc
add
inc
out
sub
daa
jmp
lret
mov
push
cmp
lret
adcb
jmp
pop
pushf
or
and
cld
adc
cmp
cs
in
push
ret
lock
mov
jne
add
sub
adcl
push
enter
or
cmp
fdivrs
lret
out
dec
push
rolb
out
movsb
and
test
and
cmp
mov
pop
stos
das
pusha
cmp
stc
dec
jmp
xchg
or
out
or
cmc
shlb
push
or
mov
std
add
jle
and
sahf
out
xchg
movsb
mov
cmp
out
or
adcb
jb
pop
sub
iret
push
pop
jb
xchg
sbb
cmp
pop
jnp
xchg
sbb
pop
or
sbb
inc
xor
inc
nop
pop
push
iret
sub
das
movsb
pusha
pandn
sub
adc
sbb
mov
jb
sbb
stos
test
lcall
add
scas
add
sbb
sbb
sub
dec
add
add
addr16
loopne,pn
and
pop
xor
inc
sti
cmp
repz
imul
mov
dec
ret
daa
rcr
xor
testb
sub
and
nop
mov
pop
flds
ret
mov
sbb
jne
xchg
mov
sbb
sbb
sbb
inc
adc
jne
and
mov
inc
xor
test
jmp
loopne
mov
imul
xchg
mov
mov
or
lock
jno
jne
jecxz
jmp
pop
loopne
stc
cmpb
adc
fldt
fstpl
fwait
jmp
add
add
pop
andb
and
orl
adc
fmuls
daa
daa
ja
dec
pop
mov
pop
clc
fwait
pusha
and
sbb
shrb
push
movsb
pop
clc
pop
add
push
xchg
sub
repz
xchg
lahf
xchg
xor
test
xchg
mov
jns
out
into
cmp
adc
stos
mov
repz
pop
xor
enter
pop
arpl
dec
jbe
sbb
and
fbstp
pop
fisttpl
ret
fsts
add
push
mov
mov
lds
mov
testl
push
sub
mov
arpl
pop
mov
repnz
add
fsubr
fildll
inc
dec
repnz
repz
and
push
sbb
mov
dec
add
pop
pop
pusha
push
ss
mov
or
pop
sub
pop
pusha
sub
jl
sahf
xchg
ja
jns
movb
dec
sahf
idivl
daa
in
add
sbb
mov
imul
fcom
lret
daa
sbb
rorl
inc
add
loope
icebp
sub
movsb
xor
fucomp
jg
mov
mov
mov
insl
add
ja
jmp
inc
adc
push
mov
sbb
add
dec
adc
mov
popf
jbe
repnz
cmpsl
jge
jns
es
or
cs
or
in
sahf
sub
dec
int
sahf
ja
pop
daa
outsb
push
test
lock
pop
or
aaa
mov
in
aas
sahf
enter
fbld
dec
mov
add
in
hlt
fildl
sub
mov
and
add
in
xchg
sbb
in
sub
cmp
sbb
pop
xor
das
add
or
test
mov
xchg
clc
das
or
inc
test
in
in
mov
xor
xor
es
mov
cmpsl
xchg
lock
inc
push
pop
dec
loop
sbb
ljmp
jle
and
xchg
loopne
jecxz
inc
sub
inc
or
fldcw
out
or
pop
ret
xor
loope
inc
push
or
xchg
push
add
pop
jne
rolb
and
pop
pop
or
das
xchg
xor
and
stc
mov
push
loop
xor
repz
xchg
push
cs
inc
jmp
iret
push
fadds
gs
or
xor
and
pop
and
jge
and
and
movsb
pop
pop
inc
pop
sbb
push
adc
add
add
popa
pop
and
add
pusha
mov
and
cmp
jnp
pop
mov
movsb
adc
pop
add
xor
lods
scas
cmp
fiadds
sahf
addr16
push
jbe
add
lock
pop
xor
and
xor
mov
das
stos
or
ret
sub
cmpsb
in
gs
mov
push
and
sbb
xchg
and
and
rclb
enter
xor
sbb
das
ret
repz
sub
sahf
mov
push
addr16
in
fildll
xchg
or
push
push
push
cmpsb
nop
and
fildll
push
cmp
jno
leave
dec
and
ss
cmpsb
inc
push
fildll
sahf
negb
mov
push
dec
outsb
sahf
out
jns
xchg
mov
sarl
fwait
aam
jp
jl
repz
out
or
enter
iret
sub
sub
jge
xchg
outsl
xchg
and
out
int3
lods
mov
movsb
pop
out
pop
add
mov
mov
xor
inc
cmpsb
mov
daa
or
aas
inc
and
pusha
jae
icebp
or
push
inc
int
rclb
pushf
pop
arpl
pop
repz
cmp
inc
cmp
mov
xchg
aaa
in
pushf
cmp
push
push
daa
leave
orl
cmp
push
inc
daa
fildl
stos
stos
and
pop
scas
pop
fisubl
sbb
xchg
mov
add
mov
pop
mov
lods
cmp
lds
mov
or
sbb
imul
mov
pop
pop
addb
mov
add
or
outsl
fs
xchg
flds
mov
push
testb
std
xchg
or
lods
ss
mov
mov
stos
out
je
and
push
dec
and
jg
mov
inc
adc
es
lock
jle
push
jnp
xchg
mov
ret
and
mov
inc
mov
sbb
imul
loopne
add
or
jno
jbe
inc
inc
add
adc
inc
and
movsb
or
cmpl
into
sub
jg
rol
fwait
dec
inc
fdivrs
sbb
inc
lcall
mov
xchg
mov
cmp
and
pop
xchg
inc
push
inc
push
out
cmp
nop
sbb
sub
in
lds
out
ds
push
cmp
and
testb
sbb
add
mov
lret
out
test
mov
adc
push
adc
cmp
cwtl
in
outsl
push
push
push
test
scas
or
sahf
cmpsl
jge
add
push
inc
popa
jns
out
jnp
mov
dec
repz
in
sbb
aas
pop
pop
repz
jae
push
insl
mov
addb
nop
xchg
add
pusha
hlt
push
out
push
sub
lret
dec
mov
call
xor
or
clc
xchg
movsl
pop
pushf
cmp
popf
js
fnsave
pushl
add
mov
jge
ljmp
nop
add
adc
call
lahf
sub
inc
js
addl
test
imul
loopne
loope
fdivrs
xor
inc
mov
andb
rcrb
ss
int3
jne
shrb
enter
es
pusha
in
adc
sub
ss
fadds
jb
sub
les
add
inc
inc
dec
jae
or
pop
lcall
cmp
sbb
push
inc
inc
jnp
sub
daa
test
iret
mov
mov
rorb
xor
jbe
sbb
lods
jno
mov
fnsave
mov
sub
mov
lods
cmp
add
sbb
iret
fwait
test
inc
sbb
mov
fwait
mov
je
mov
lods
cmp
int3
stos
cwtl
jno
jmp
xorl
xchg
dec
mov
jmp
pushf
nop
nop
inc
sub
dec
sahf
sub
adc
lcall
xchg
push
stc
cmp
test
sub
js
cli
or
lret
add
inc
push
in
out
in
in
repnz
push
dec
inc
or
push
lods
mov
push
movl
jno
in
adc
cmpsb
and
nop
mov
into
inc
xor
aad
inc
call
xor
mov
aad
inc
in
loope
dec
fs
jne
sbb
and
push
push
loopne
movsb
jb
cmp
jle
in
xchg
lret
inc
loopne
adc
adc
cmp
jmp
xor
sahf
out
push
cmp
repz
out
stc
push
inc
out
repz
iret
cs
pop
dec
cmp
ds
jg
mov
testl
add
dec
adc
cmp
xor
inc
cmp
dec
cmp
mov
fcoml
push
aaa
shlb
in
and
test
loopne
test
pop
mov
popa
dec
enter
xor
and
aam
add
cmp
and
cmpsl
push
int
es
jns
xor
or
sbb
ret
and
dec
jae
and
dec
pop
lods
inc
leave
in
out
or
dec
imul
jp
daa
daa
xchg
mov
enter
shr
or
les
xchg
shlb
dec
or
shlb
mov
mov
jae
mov
arpl
mov
popa
enter
popa
in
cmp
or
popa
lods
and
test
test
ficoml
cmp
mov
es
adc
pushf
jno
outsl
dec
pop
adc
pop
aaa
jno
cmpsl
or
xor
xchg
popf
inc
into
test
xchg
and
xor
add
cs
push
nop
jmp
lock
nop
mov
ret
test
add
or
rcrb
jno
aaa
xor
sbb
push
adc
nop
inc
bound
movsl
add
add
adc
ret
dec
push
in
imul
add
fwait
cs
bound
sarb
pusha
add
or
bound
je,pn
sub
cs
clc
andl
pop
xor
mov
fstpl
aas
sbb
out
cmp
jmp
int3
add
mov
sub
inc
pop
and
xchg
push
or
movsl
hlt
fmull
ret
pop
xor
nop
mov
push
cmpsl
repz
lea
sub
outsb
inc
cltd
xchg
dec
push
insl
or
roll
pop
js
add
fmuls
add
sub
and
add
movsb
hlt
nop
outsl
pop
shll
in
xlat
aam
mov
pop
sbb
add
xor
cmpsl
sub
dec
add
stos
sbb
dec
repnz
adc
mov
sbb
dec
cs
or
adc
add
inc
sub
loopne
sub
vmovaps
add
jmp
dec
or
push
xchg
movsl
xchg
push
bound
push
push
pop
dec
loop
and
or
stos
repnz
push
nop
pop
xor
and
and
pop
or
xor
add
js
and
dec
push
or
sbb
adc
pop
sahf
pusha
lds
push
push
fistps
loop
dec
push
jb
or
adcb
or
push
mov
inc
dec
ljmp
inc
dec
addb
mov
les
mov
movsl
dec
jmp
mov
pop
xchg
mov
mov
stos
dec
adc
mov
pop
jmp
cmp
xchg
inc
or
shrb
loopne
push
inc
lods
fsts
test
pop
sarb
sub
sbb
idivl
xorb
push
add
cmpl
ja
jmp
jg
and
push
xorb
aad
pop
and
adc
xor
push
repnz
adc
adc
jne
int
cmp
jmp
inc
ljmp
hlt
add
inc
jmp
xlat
lods
or
shlb
dec
fwait
loopne
and
jae
movsb
push
cmp
and
fiaddl
sbb
in
push
fcmove
pop
icebp
loope
jecxz
xchg
mov
jbe
adc
bound
or
dec
dec
sbb
fbstp
xor
repz
push
shrl
std
out
mov
add
xor
push
cmp
sbb
fistl
insl
or
fistpll
iret
insb
dec
icebp
out
xchg
adc
push
jns
mov
in
jle
push
push
lds
inc
sub
call
or
cli
add
inc
cmp
outsb
daa
push
sbb
mov
add
fstpt
fdivrp
push
je
dec
je
dec
adc
adcb
sbb
icebp
add
js
add
pop
fists
rcrb
sub
js
jnp
inc
sbb
adc
push
in
dec
adc
std
es
jecxz
jl
xchg
or
jmp
xchg
dec
in
sahf
add
or
and
sbb
inc
jle
adc
sub
rcr
mov
sbb
inc
push
movsl
test
or
sbb
mov
mov
cmp
push
xor
aaa
or
and
leave
xchg
adc
testl
and
sub
jae
xor
bound
jbe
outsl
or
fldl
pop
or
pop
addr16
adc
jbe
cmpl
fnstcw
pop
adc
rolb
mov
pop
pop
fiaddl
push
pop
loop
push
shlb
rcll
clc
aas
test
jnp,pt
hlt
pop
and
pop
sub
cmp
push
inc
test
jmp
das
lret
inc
sbb
push
cmp
pop
imul
add
imul
hlt
pushl
shll
cmp
ja
jns
fsubp
push
icebp
decl
push
inc
cmp
repz
mov
imul
orb
inc
xchg
dec
jmp
int
sub
mov
inc
cmp
push
pop
shll
shlb
aaa
xor
outsb
aad
inc
sbb
fbstp
sbb
jmp
lods
pop
mov
inc
xlat
sbb
imul
dec
inc
clc
jmp
pop
add
call
inc
loopne
or
dec
mov
scas
inc
jmp
add
mov
andl
mov
pop
dec
dec
mov
jnp
pusha
pop
dec
push
cld
adc
insb
pop
mov
test
jp
dec
or
dec
in
ss
add
cs
fs
jnp
xor
aaa
adc
mov
pop
mov
dec
or
je
fadd
fldenv
dec
hlt
je
cmpb
mov
sbb
dec
gs
sarb
cmp
or
popa
xor
mov
add
repnz
or
dec
push
pop
fcomps
xor
push
xchg
test
adc
or
adc
dec
stos
loopne
xor
ret
insb
cmp
fs
mov
rclb
dec
add
push
clc
sub
nop
mov
xor
leave
jb
mov
jo
in
pop
icebp
pop
movsl
or
je
sub
repnz
pop
add
mov
cmpsb
push
in
dec
push
movsb
xor
pop
ss
sbb
cmp
imul
andb
or
fsubrs
andb
mov
dec
mov
jns
xchg
js
pop
inc
or
mov
jl
and
cmovb
cmp
les
and
loope
or
or
push
daa
dec
mov
repnz
cmp
out
pop
lods
jmp
and
jb
int3
lods
out
jns
out
addl
mov
ficoml
or
ljmp
or
push
filds
and
divl
inc
insl
jo
movsb
lcall
fsubrl
scas
add
or
es
cwtl
cmp
pop
lret
cmp
cld
fadds
inc
xor
pop
inc
outsl
jne
clc
fs
int
jo
xchg
addr16
jnp
cmp
enter
push
add
pusha
fisttpl
xorb
test
repz
arpl
pop
add
push
inc
iret
push
fnsetpm(287
inc
inc
inc
jns
inc
or
jp
out
or
jnp
daa
add
and
dec
dec
scas
clc
rcrl
in
sbb
clc
fs
sbb
ss
inc
push
xlat
lock
sbb
adc
mov
lcall
jno
popf
jl
add
cltd
sbb
xchg
cld
add
mov
or
jb
xor
decl
dec
push
cmpl
cs
inc
fildl
adc
pop
sbb
and
or
adc
in
insb
xchg
lcall
push
pop
in
cmp
push
or
inc
outsb
jns
and
fstl
gs
dec
test
xchg
dec
jg
cmpl
dec
jo
pushf
loop
mov
cli
xor
sbb
sti
inc
in
lea
movsbl
sbb
and
xchg
sbb
cmp
pop
fmuls
xor
mov
cmp
ret
out
or
pushl
out
jb
popa
jo
jmp
call
push
jb
jo
dec
inc
in
pop
xor
push
pop
popl
into
test
or
fcompl
add
cmp
sbb
mov
je
or
adc
jo,pt
and
test
inc
inc
inc
cli
out
add
push
xchg
add
cmpsb
add
or
ret
rorl
adc
fst
addb
imul
mov
call
mov
lea
mov
and
xchg
or
xor
rcll
xorl
push
std
xchg
and
mov
add
lahf
and
or
sbb
repnz
cmp
sahf
pop
add
or
int3
xor
sbb
push
aas
xorb
rorl
xchg
push
lods
add
adcb
adc
out
fdivrs
mov
psadbw
test
into
mov
cs
mov
aas
loopne
dec
xchg
roll
stos
add
jb
or
jbe
bound
inc
mov
outsb
nop
pop
imul
mov
add
cmp
jg
call
jno
inc
mov
sbb
ds
nop
roll
fnstenv
loope
fstl
out
and
decb
or
popa
inc
add
aad
xchg
add
xor
dec
sbb
cmp
or
ljmp
push
sub
pop
sbb
lock
rolb
cld
mov
scas
jno
ljmp
jne
sbb
and
fdivrl
ret
pop
xchg
or
xchg
mov
mov
push
xor
cmpl
mov
mov
dec
inc
mov
pop
ret
adc
mov
xchg
sbbl
dec
and
pop
inc
mov
xchg
bound
fcmovne
xchg
into
xchg
xchg
setne
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
jb
je
scas
bound
mov
mov
push
outsl
push
push
cltd
and
lea
aas
push
xor
js
add
push
pop
add
lea
jl
add
mov
dec
mov
mov
insl
mov
mov
ret
fbstp
sub
push
cs
pop
adc
dec
xor
cmp
jle
fsub
push
or
fmull
mov
xor
cmpl
xor
jge
adc
ja
lods
shl
sub
pop
add
fucomi
adc
fwait
pusha
add
mov
and
mov
mov
les
ds
mov
sbb
mov
cmpsb
mov
or
sbb
jmp
and
mov
and
cmp
je
mov
and
mov
rcrb
sbb
mov
mov
fnstsw
in
je
jmp
cmp
sbb
test
push
add
pop
shlb
add
aas
pop
je
cli
in
or
add
decb
jne
insb
or
and
jb
jmp
xor
add
pop
es
testl
adc
in
lcall
pop
pop
cmc
mov
int
sbb
mov
ss
ds
add
mov
adc
mov
jns
loopne
mov
cmpb
ja
jb
add
add
call
insb
cmp
in
lock
mov
or
insl
sub
xchg
ja
push
mov
adc
mov
jge
adc
pop
dec
mov
mov
sub
jmp
ret
ret
adc
xchg
lret
dec
jmp
pop
dec
imul
jne
xlat
stos
push
and
add
inc
jg
inc
lds
ficoms
jle
inc
lock
adc
pop
add
outsb
aaa
and
xlat
or
sarl
and
bound
add
movsb
mov
fimull
xlat
inc
push
adc
lock
adc
mov
push
push
cmpsb
lahf
incl
add
inc
dec
rcr
clc
inc
mov
fxrstor
js
addr16
movsl
xlat
jnp
adc
push
int3
dec
in
xchg
adcb
inc
testl
movsl
orb
or
adc
int3
data16
lahf
and
hlt
and
and
cli
xor
into
fmull
add
push
rolb
inc
hlt
push
add
xchg
push
inc
mov
pop
mov
leave
xor
aaa
cmp
and
clc
mov
inc
push
jge
sbb
add
mulb
dec
mov
cmp
mov
dec
sahf
push
xor
iret
lods
and
sahf
push
push
jecxz
rcrl
xor
xchg
pop
inc
jnp
int
inc
jp
xlat
psrlq
xor
les
cmp
sbb
fldt
fstps
addr16
repnz
adc
mov
push
lahf
addl
jbe
inc
fistpll
pop
fmuls
int
test
lret
out
test
push
adc
xor
or
jge
mov
xchg
aaa
or
cmp
repz
loope
ret
add
out
jbe
insl
mov
sub
push
mov
cmp
fstl
movsb
xchg
or
mov
jp
and
push
inc
cmp
jge
and
jo
pop
jmp
sbb
sub
jmp
or
iret
or
push
fdivp
mov
pushf
mov
scas
rcl
jp
enter
pushl
xor
popa
dec
fildl
sbb
adc
roll
adc
negl
mov
mov
ja
jae
and
jne
pop
adc
lcall
dec
add
sub
enter
in
xchg
jge
mov
mov
sub
lret
lock
jp
sbb
aam
cmpb
in
jnp
mov
adc
xchg
sbb
nop
push
mov
insb
lods
test
mov
pop
mov
xchg
je
jmp
sub
loopne
daa
nop
xor
or
inc
imul
add
fs
gs
outsb
and
push
outsl
push
lock
sbb
repz
sbb
inc
insb
outsb
sbb
dec
jp
sbb
mov
xchg
cmp
insb
jns
inc
insb
popa
sbb
repz
roll
pusha
outsb
iret
pushf
pop
ss
push
mov
fdivrl
je
insb
or
cmpsl
fsubs
dec
imul
andl
or
sub
add
or
dec
popl
gs
mov
add
nop
sub
add
sbb
sbb
or
or
dec
gs
mov
movsl
int3
or
cmpsl
outsb
pop
sbb
add
js
or
int3
or
jns
sub
mov
dec
or
push
gs
pusha
aaa
add
push
in
push
add
push
or
inc
iret
fisubs
lret
dec
outsb
mov
aaa
dec
aas
xchg
push
repnz
and
test
cwtl
stos
in
or
mov
outsl
mov
sub
dec
lods
outsb
pusha
mov
scas
ds
inc
repnz
mov
jb
mov
test
outsl
or
and
ficompl
scas
or
sub
or
jmp
enter
fs
fs
ljmp
inc
sbb
sub
insl
nop
shlb
mov
mov
sbb
mov
adc
mov
into
inc
mov
scas
je
sbb
inc
enter
je
int3
aad
in
int3
push
push
or
add
imul
and
fisubrl
mov
shrb
mov
jo
enter
push
mov
sub
into
push
orl
mov
mov
in
or
pop
in
and
sbb
mov
ja
adc
out
mov
xchg
into
xchg
push
cltd
sub
icebp
sbb
push
add
test
and
inc
call
pushl
fsubrs
inc
push
scas
fcomps
mov
sbbb
push
outsb
cmpsb
add
push
jp
je
lcall
cmp
subl
popf
mov
fldenv
pop
leave
test
movl
add
mov
or
test
out
or
mull
aad
nop
adc
mov
mov
in
leave
or
xchg
icebp
dec
cmpsb
inc
jne
in
jo
push
push
addb
data16
enter
inc
filds
imul
sub
sti
fnsave
mov
out
xor
and
cmovns
pushl
inc
jbe
popa
jo
lds
xor
pushf
jae
push
rclb
sahf
cmpsb
shll
inc
sbb
sti
adc
into
xor
mov
fdivs
inc
lds
inc
xchg
jno
test
fbstp
sti
sbb
les
jo
stos
xchg
cmp
jnp
cmp
push
cld
lahf
pop
pop
js
pop
outsl
fs
data16
movsl
mov
sar
fistpll
adc
push
push
push
stos
lods
inc
stos
outsl
and
icebp
push
lods
push
aaa
xor
jne
jnp
xor
mov
sbb
in
es
inc
push
or
insl
ret
cmp
sub
inc
push
mov
adc
add
outsb
dec
enter
jne
scas
push
mov
sbb
out
push
push
mov
pusha
fistpll
jl
mov
jo
lock
hlt
jbe
scas
addr16
fimuls
mov
mov
call
and
mov
mov
push
scas
out
inc
int3
jle
mov
push
pop
add
pop
and
call
pop
shlb
cmpb
js
jl
pop
dec
ss
movb
mov
pop
fbstp
push
xor
mov
lahf
lock
mov
dec
dec
jnp
pusha
fucomip
mov
mov
movsl
pop
ja
ffreep
push
or
jmp
or
inc
push
ror
test
xchg
or
push
mov
cltd
cmpsl
add
fwait
out
pusha
orl
jns
jp
inc
or
adc
sbb
inc
in
xor
push
mov
ds
sti
insb
jp
daa
xchg
iret
xor
vmwrite
enter
mov
push
push
add
pop
testl
jl
mov
testl
pop
in
repz
jb
pop
cmp
sbb
pop
jb
pop
adc
sbb
pop
jb
and
les
jb
push
add
inc
dec
add
in
jns
ret
enter
mov
jns
out
adc
out
sahf
dec
pop
imul
jl
or
cs
dec
cmp
xchg
jl
lahf
push
icebp
push
cld
pop
inc
dec
or
pushf
add
int
repz
in
hlt
or
or
pop
iret
repz
and
push
pop
adc
test
nop
cld
jl
jl
ljmp
push
push
rorb
add
in
push
outsb
jge
push
xchg
dec
mov
xor
pop
rcl
pop
push
mov
pop
in
sarl
mov
cmp
popf
or
hlt
push
movl
nop
pusha
lret
outsb
enter
mov
shl
imul
arpl
rolb
rorb
jle
arpl
pop
inc
dec
movsb
cmpsl
in
js
lods
cmp
dec
clc
inc
rclb
cld
clc
mov
inc
and
xor
mov
mov
inc
adc
movsl
nop
mov
mov
fists
aaa
pop
call
rcll
stos
mov
rorb
mov
xchg
hlt
mov
enter
adc
lock
or
pop
push
and
aas
sahf
out
sub
inc
add
decl
inc
int
dec
addb
dec
jg
cmp
test
pop
hlt
sbb
push
fcomp
imul
push
add
mov
push
xor
xchg
pop
std
inc
pop
loopne
and
pop
pop
jl
inc
cld
push
mov
imul
xchg
cld
sbb
jle
adc
mov
sti
cmp
stc
clc
push
push
push
push
push
ficoms
repz
push
pushl
cmp
jnp
aam
sahf
fsubs
loopne
lock
imul
rolb
push
fadd
push
lods
or
push
or
and
mov
adc
aam
mov
test
add
cmp
std
xchg
add
pop
add
test
push
popa
notb
je
aaa
sbb
imul
mov
pop
xchg
pop
lock
push
adc
imul
pop
xlat
dec
cli
imul
cmp
out
ds
sbb
push
push
mov
sahf
dec
cld
add
divl
pop
inc
enter
ret
jns
mov
cmp
call
add
aaa
pop
pop
lds
subl
movsb
andb
push
mov
push
dec
dec
fs
cltd
fmuls
or
les
adc
gs
add
dec
push
data16
cmpsb
call
imul
out
add
nop
aas
mov
cmpl
jne
bound
addb
pushl
cld
dec
in
push
pop
sbbl
add
push
inc
jb
jne
mov
mov
int
in
push
mov
jbe
sub
test
or
dec
cld
sbb
xor
push
mov
dec
jp
shrl
lock
xlat
bound
jo
sbb
sub
je
ret
dec
sub
and
or
popf
inc
jmp
lret
mov
jo
test
cmp
add
inc
sbb
je
int3
mov
into
cld
sub
fldt
or
xor
das
mov
mov
adc
fldt
add
aas
fistps
pop
xor
jge
ljmp
xchg
add
or
cmp
mov
data16
inc
and
in
cmp
adc
paddusb
or
and
aad
ja
mov
mov
and
dec
setno
push
daa
loope
pusha
es
std
nop
shrb
rcl
inc
dec
jne
pop
or
xor
push
jnp
scas
jmp
push
or
sbb
xchg
and
push
out
nop
popa
rcrl
add
cwtl
mov
inc
int3
sbb
int
aaa
add
mov
jne
sub
and
mov
in
jmp
xchg
les
movb
loop
jne
push
dec
xchg
loop
mov
lods
or
jns
es
sbb
addl
sub
cli
jne
dec
xchg
mov
loopne
aas
dec
imul
out
dec
pop
dec
sub
jae
es
ret
xchg
pop
and
xchg
xchg
sbb
cs
mov
dec
sub
mov
js
add
inc
cmpl
jecxz
and
jbe
popa
xchg
sub
mov
sbb
pop
cwtl
xor
fidivl
lods
jo
jg
adc
cmp
daa
mov
dec
jno
jge
jne
dec
jne
xchg
inc
and
adc
adc
add
cmc
push
scas
cltd
and
sbb
xchg
adc
loop
dec
cwtl
mov
inc
push
adc
fisubrl
js
mov
add
or
jo
or
add
fcmovbe
addr16
mov
adc
aad
aam
fidivl
mov
loopne
sub
sbb
push
and
mov
and
rorl
cmpsl
push
and
lds
cltd
out
aam
aas
call
lock
and
sbb
out
cmp
dec
jne
fiadds
gs
das
loop
lods
cmpb
dec
ljmp
inc
xchg
push
es
bound
loope
mov
mov
push
js
hlt
add
add
aas
add
inc
hlt
jb
jle
mov
mov
ret
or
dec
xchg
lahf
call
adc
and
jl
lods
sub
jns
cs
dec
xor
inc
and
inc
cmp
push
lret
jle
push
call
jmp
push
in
int
pop
lock
dec
or
mov
fisubs
inc
inc
fldt
insl
jne
push
stc
cmp
in
mov
lock
push
mov
mov
call
out
mov
negl
adc
mov
push
cld
adc
inc
inc
jbe
xor
fisttpll
test
adc
xor
pop
aad
into
shl
jge
and
int
shlb
mov
les
sub
mov
lock
stos
loopne
jno
loopne
cmpl
xlat
xchg
call
lahf
push
pop
add
mov
ljmp
or
or
les
add
test
or
adc
or
shlb
mov
adc
add
xor
insl
enter
out
into
callw
pushf
test
movsl
hlt
rolb
sub
ret
sbb
nop
cmc
scas
dec
mov
jnp
mov
roll
cs
adc
adc
iret
lahf
pop
loope
inc
mov
xchg
sarl
dec
test
nop
cli
mov
jb
loopne
push
ja
pop
jne
jmp
push
cmpsl
orb
adc
or
add
xchg
xor
cwtl
hlt
mov
mov
icebp
sub
sbb
decl
shl
inc
cmp
enter
inc
xor
and
inc
push
mov
shl
xbegin
iret
in
hlt
sbb
push
jb
xor
in
jmp
and
jp
cmp
lahf
xchg
in
push
test
jb
and
adc
sub
push
cltd
xor
xchg
jbe
clc
and
leave
jge
popf
in
dec
cs
into
mov
add
into
sub
mov
nop
cmp
shll
mov
ja
jl
add
rolb
adc
or
push
hlt
data16
xor
lar
stos
insl
xor
shll
ret
cmp
test
sbb
test
rolb
push
or
fs
pop
cmp
push
xchg
pop
popa
or
inc
mov
or
cmpsb
cmp
jo
mov
js
enter
sub
cs
or
sub
lea
fsubl
push
mov
aaa
or
and
mov
mov
add
pop
xor
and
inc
add
test
cmp
jne
sbb
inc
pop
movsb
xchg
sub
cwtl
or
xor
sub
or
ret
jp
scas
add
cwtl
enter
shrl
daa
cmp
mov
pop
jecxz
pop
cmp
inc
fisubrl
ja
xor
mov
jnp
xchg
cmp
enter
adc
loope
mov
pop
ds
testl
and
cmpsl
sub
cmp
adc
adc
xchg
pop
ret
push
mov
cmp
or
push
negl
out
or
pop
xchg
mov
push
xor
pushf
jp
adc
mov
inc
cmp
push
push
test
mov
and
push
inc
sub
cwtl
cmp
push
es
sbb
fdivrs
mov
nop
dec
or
push
in
jl
aas
punpckhbw
pop
data16
shlb
jp
insl
xchg
or
mov
call
addb
loope
adc
int
add
mov
push
or
call
sbb
add
mov
inc
arpl
add
mov
xor
cmp
push
push
inc
sti
test
dec
ret
ret
xchg
movb
pop
push
pop
push
orb
mov
cld
pop
push
repnz
cmp
pop
shl
es
push
pop
jns
add
ret
jge
push
sbb
and
adc
jl
cmp
mov
neg
nop
out
push
ss
mov
or
clc
jmp
push
jbe
add
das
into
mov
cwtl
mov
aas
insl
dec
outsb
jecxz
sub
inc
adc
xor
pop
or
decl
rolb
cmpsb
js
lods
adc
push
mov
incl
or
leave
aam
mov
lahf
enter
dec
cmp
adc
push
mov
or
jb
cwtl
or
jl
call
add
adcb
dec
or
jle
in
cli
sbb
add
lea
or
jle
movsl
in
mov
cs
jmp
orb
out
popf
inc
push
mov
pop
insl
push
add
sub
jae
pop
pop
pop
jb
leave
sub
repnz
xchg
les
fisubs
mov
into
test
jecxz
rcll
pcmpgtd
ret
mov
push
mov
or
add
aaa
test
sbb
in
lret
adc
leave
fadd
add
stc
add
jnp
push
adc
or
jmp
jp
inc
sbb
lret
int
inc
dec
dec
pop
loop
inc
cmp
jge
negl
gs
adc
jne
sbb
leave
imul
orb
std
mov
xchg
jle
sbb
push
adc
adc
sbb
cwtl
inc
add
imull
push
mov
test
sahf
mov
cmpsl
test
leave
rcrb
mov
insl
sbb
sbbl
enter
push
es
shrl
fs
cld
cmpsb
je
push
rolb
pop
mov
cmpsb
nop
jecxz
lods
xchg
pop
mov
push
popa
fwait
nop
xlat
jns
sti
jle
mov
icebp
ret
lock
jle
movl
push
rcr
xchg
jge
hlt
pop
push
sub
jg
dec
testb
movsb
adc
inc
adc
xchg
or
mov
inc
inc
ja
les
inc
movb
pop
popf
rorb
pop
clc
cltd
inc
push
js
sbb
mov
jmp
jns
mov
push
pop
cmc
in
call
or
pop
lcall
sub
adc
adc
jmp
dec
add
or
rol
cmp
cmpsb
adc
push
arpl
mov
ret
addb
popa
rcll
push
sahf
movsb
lds
subl
out
add
mov
sub
enter
push
in
or
inc
movsl
add
test
or
add
pushl
test
sar
mov
add
add
mov
call
out
je
ss
roll
push
hlt
inc
dec
fbstp
xlat
rcrl
push
add
es
push
adc
adc
sbb
rolb
adc
fstps
adc
add
mov
push
add
rsqrtps
leave
je
stos
adc
btr
pop
add
mov
test
cli
lock
push
inc
adc
ficompl
add
dec
loop
sbbb
enter
add
mov
add
xor
into
jb
ljmp
push
and
bt
jb
shl
test
in
ret
add
jl
ret
inc
cmp
jne
inc
decl
jne
sub
jmp
adc
lds
mov
orl
rol
jae
cmpsl
add
popf
and
or
mov
sbbb
inc
shlb
gs
test
sub
pop
aas
adc
stos
mov
push
adc
seta
imul
cwtl
sbb
push
popa
cli
and
repnz
xchg
fisttpll
sbb
test
sbb
mov
and
xor
cmp
pushl
adc
jne
sahf
popa
adcl
adc
jmp
add
fdivrs
ds
xlat
jge
mov
dec
test
iret
sub
scas
push
mov
or
and
mov
mull
xchg
into
sarl
or
inc
sub
sub
sub
push
inc
cmp
sbb
aam
loope
jge
push
xchg
add
mov
lcall
cmpsl
xor
lahf
or
fnstcw
pop
jnp
call
fstpl
and
adc
push
fwait
or
mov
cmp
xchg
jo
adc
cmpb
mov
add
mov
lahf
cmp
xchg
and
xchg
xchg
je
in
test
xchg
imul
repz
lea
iret
or
cmp
push
or
sbb
out
jl
fists
push
loopne
pop
xor
dec
jne
lea
loope
pop
pop
stos
add
and
pop
dec
jecxz
inc
in
inc
cmp
pop
shll
mov
cld
inc
inc
inc
add
sbb
repnz
sahf
lret
or
stos
sub
leave
iret
imul
push
pusha
inc
cld
inc
or
jns
fwait
mov
adc
bound
nop
dec
mov
mov
add
or
sub
mov
outsl
or
cmc
add
shrl
and
and
cld
lahf
ret
adc
and
mov
movsb
sbb
adc
and
stos
pop
push
and
lret
outsl
pop
cmpsb
sub
adc
jbe
dec
or
inc
jae
in
cmp
jmp
aas
shll
mov
fdivs
mov
pop
push
cmp
jge
dec
sub
push
sahf
in
int
and
jne
subb
mov
repnz
mov
nop
aaa
xchg
loopne
push
or
jno
nop
sub
cmp
imul
xchg
in
outsl
mov
out
rol
mov
aaa
dec
shll
movsb
xchg
sub
rcll
outsb
lods
orl
xchg
xor
push
in
ret
and
xorl
cmp
inc
lcall
ss
add
or
dec
hlt
lock
test
inc
pop
jecxz
insb
lahf
xor
xchg
xor
xchg
in
movsb
sbb
xchg
je
sub
dec
dec
mov
shll
lahf
or
ror
scas
lock
hlt
in
movsl
test
dec
adc
sub
adc
shll
popf
mov
aas
inc
stc
test
push
lea
mov
and
and
dec
lsl
add
push
xor
mov
dec
outsb
lods
sti
std
cmp
sbb
outsb
loopne
pusha
adc
nop
cld
cld
add
rclb
and
in
popf
addl
clc
cmp
mov
movsl
rclb
sub
mov
lods
sbb
incl
je
xor
xor
ret
subl
outsb
cmp
dec
cld
xor
rcll
dec
or
sbb
in
mov
push
xor
dec
call
nop
mov
cmpsl
inc
addr16
sbb
mov
movsb
hlt
sbb
adc
push
cs
icebp
dec
add
or
mov
mov
push
outsb
mov
xchg
pop
clc
test
outsb
add
jne
les
push
cmpsl
outsl
cltd
repnz
bound
out
add
insb
imul
scas
adc
cmp
push
push
into
call
sub
cmpsb
test
xor
mov
pusha
push
or
sbb
push
lret
orps
sbb
jb
stos
and
enter
or
dec
push
add
push
and
enter
mov
in
sub
add
test
dec
movsl
jo
push
add
into
sbb
test
jg
int3
or
pop
pop
sub
fwait
test
add
leave
testl
mov
cwtl
mov
and
test
bound
dec
push
inc
fs
dec
test
or
add
jmp
adc
adc
icebp
and
jno
les
stos
sbb
leave
sub
and
jae
push
push
pop
pop
roll
and
int
jb
popf
sub
in
cmpsl
dec
stos
out
and
dec
pop
daa
push
xchg
cmp
stos
js
stos
sbb
inc
add
inc
addb
addr16
stos
jge
daa
sbb
and
fldenv
aam
stos
or
mov
jmp
adc
adc
sub
das
outsb
and
lock
dec
popl
xchg
nop
and
sub
mov
das
loopne
pop
cmpsb
inc
jb
adc
in
in
jmp
clc
in
outsl
jmp
add
sub
js
rclb
jl
add
add
mov
inc
rcrb
push
sub
or
sub
add
push
jns
sti
cltd
push
jns
cmp
or
or
xor
pushf
shll
adc
subb
jnp
add
jmp
mov
call
inc
pop
mov
jne
mov
andl
andb
shrl
cmp
jne
rcl
adc
pop
hlt
add
sub
repnz
and
or
les
out
jno
mov
test
jecxz
aas
loop
add
or
lret
mov
push
in
lret
in
call
push
mov
inc
add
jne
mov
ret
lock
pop
sub
ja
lcall
push
jg
orb
adc
stos
imul
stos
inc
testl
out
cmp
mov
sbb
outsl
cmp
sbb
add
pop
orb
sbb
inc
adc
movsb
cmpsb
imul
xor
icebp
orb
inc
sbb
push
daa
jne
xchg
push
sbb
cmp
mov
test
xchg
jle
sbb
cmpb
pop
pop
sbb
sbb
das
js
imul
inc
push
sbb
jo
enter
or
push
jmp
and
push
xchg
sbb
pop
fadds
data16
jg
mov
xlat
jnp
data16
roll
sub
rcrb
mov
aaa
xor
popf
shlb
sbb
mov
mov
dec
sbb
inc
ffree
insb
test
nop
or
pop
dec
arpl
sar
rolb
sbb
in
add
in
dec
adc
or
flds
sub
loopne
decl
iret
mov
movsb
mov
or
not
mov
fmuls
sbb
xor
or
pop
add
add
cmp
addr16
push
in
orl
add
dec
fcomp
mov
je
jg
mov
jmp
dec
dec
xor
mov
or
push
mov
dec
hlt
xor
adc
sahf
std
add
sbb
imul
rcr
sbb
repz
jle
mov
add
jle
adc
inc
or
pop
mov
repnz
aaa
lods
push
xchg
inc
push
negb
mov
in
mov
stc
repnz
push
mov
repnz
movb
pop
dec
mov
and
pop
out
mov
aaa
xchg
clc
lret
sbb
and
lret
mov
pop
pop
push
fs
enter
int
je
call
test
xor
mov
sub
ret
inc
aas
roll
jg
mov
and
lea
push
seto
inc
mov
xchg
jno
in
pop
xchg
inc
xor
call
scas
stc
nop
cltd
shll
insl
xchg
mov
les
orl
and
hlt
shll
mov
js
mov
iret
xor
dec
jg
fiadds
outsb
jl
and
and
add
outsb
fildl
or
add
inc
jge
sbb
jle
xor
mov
fisubs
jl
scas
addl
mov
pop
cmpsl
xchg
gs
ds
adc
push
rcrl
and
andb
mov
add
cmpsl
lock
xor
dec
and
cwtl
xchg
xchg
pop
mov
sub
jle
jo
add
push
cmp
push
mov
shlb
lahf
lcall
cmpb
stos
dec
cmp
inc
add
aaa
sbb
nop
pusha
mov
lret
vshufps
xlat
les
push
mov
sbb
push
aam
insl
sub
lret
aaa
shrb
add
test
dec
das
popa
cmp
cwtl
or
in
imul
pusha
pop
test
leave
lahf
sbbl
sub
and
jecxz
cmpsl
push
arpl
shll
add
push
lret
cmp
mov
push
pop
das
mov
stos
call
push
fadds
add
mov
dec
push
ja
cmp
pop
dec
data16
adc
or
cmp
jne,pt
sbb
mov
add
cmpsb
pop
pop
xor
jne
arpl
push
cmp
xor
scas
inc
xor
cs
movsb
push
stc
aaa
push
dec
aad
lret
push
ror
inc
sbb
sti
inc
push
mov
cmp
outsl
fisubrs
push
lret
in
sti
pop
repnz
in
add
push
stos
xchg
dec
nop
inc
movlps
popf
sbb
aam
test
sub
or
loopne
push
jbe
mov
sbb
cli
or
sbb
adc
and
xchg
adc
or
cltd
adc
or
add
push
sub
add
push
pushf
adc
lods
sub
sbb
mov
xor
mov
cmp
push
outsl
inc
cmpsl
movsb
sub
add
jge
xor
shrl
loop
mov
inc
jp
sbb
mov
clc
sbb
out
adc
lds
mov
movsl
or
shrl
and
adc
in
push
pop
mov
push
or
and
rcrb
bound
rclb
pop
dec
fisttps
or
lock
xor
imul
or
or
add
call
cwtl
sub
out
mov
adc
jmp
jne
testl
adc
repnz
xor
push
lret
mov
jmp
pusha
clc
jge
jae
inc
add
bswap
dec
xor
pop
rclb
cmp
lock
push
in
add
outsb
jmp
nop
mulb
xlat
xchg
mov
loopne
dec
es
push
or
mov
xor
adc
addl
xor
jl
aam
push
js
pop
jp
hlt
rorl
js
ds
dec
test
xorb
testl
cmp
and
xor
add
or
push
push
adc
std
faddl
jb
je
dec
std
insb
fimuls
jmp
mov
add
add
sbb
mov
mov
mov
pop
addr16
cmpsb
inc
or
addr16
inc
mov
lea
cmc
or
push
add
jp
mov
popf
lcall
or
popf
adc
repnz
push
mov
out
pop
cmp
jge
or
lods
data16
je
sbb
insb
cmpsl
xchg
mov
adc
xchg
pusha
adc
lret
add
es
sub
loopne
adc
ret
into
call
lret
or
pop
addb
pop
xor
ss
rolb
sbb
inc
fcomps
subb
or
push
mov
dec
pop
push
stos
pop
scas
and
scas
or
cmp
xor
incb
jo
and
cmp
or
rorl
adc
and
add
add
pushf
mov
push
movsb
adc
mov
pop
enter
dec
push
scas
or
lods
sub
scas
mov
mov
pop
push
repz
sar
or
push
cmp
fwait
vmwrite
or
and
xor
add
je
and
push
or
xchg
outsb
cmp
push
mov
cli
mov
stc
mov
cld
inc
scas
insb
pop
mov
popa
clc
insl
mov
push
adc
nop
jl
call
add
pusha
cmpsl
aaa
dec
pusha
xchg
sbb
add
xor
push
fcmove
push
dec
repnz
sbb
test
nopl
adc
rclb
or
push
and
inc
adc
ret
mov
js
shlb
cmpxchg
iret
in
mov
adc
fs
cmpsl
lods
push
mov
imul
or
out
cmp
inc
lods
cmpsl
sbb
sarb
ret
nop
iret
shrb
ljmp
fwait
data16
or
inc
mov
shlb
dec
adc
or
pushf
aas
push
inc
mov
fsubp
sbb
mov
ljmp
pop
add
jmp
out
mov
lea
mov
lcall
sub
lret
cmp
clc
push
insb
aaa
ret
sub
fnstsw
cs
add
and
pop
rorb
or
add
push
aaa
cmp
in
add
fstl
inc
sub
cs
pop
rorb
jns
ret
addb
inc
and
clc
and
cmp
pop
xchg
adc
sub
push
add
mov
clc
shrl
jae
stos
dec
hlt
hlt
pusha
cld
mov
scas
xchg
icebp
mov
loopne,pn
add
and
push
add
stos
sbb
jbe
inc
inc
or
inc
pop
add
popf
clc
outsb
pusha
enter
icebp
cwtl
add
mov
and
fldenv
xor
dec
rcll
imul
or
rclb
adc
outsl
xchg
sub
and
das
ss
inc
test
lea
xor
nop
sub
inc
push
lods
cwtl
js
inc
lret
icebp
dec
insb
insb
push
dec
cmp
add
mulb
add
icebp
pushf
adc
inc
cmp
add
cmp
push
cs
sub
mov
testb
jne
adc
bound
into
lock
adc
or
fmuls
sti
inc
pop
inc
jmp
sbb
sarl
ret
mov
cmp
jl
or
jnp
cmpsb
andb
mov
sbb
inc
add
adc
pop
andl
xchg
push
adc
and
xor
mov
lret
and
pop
leave
push
lds
aaa
jae
cmp
pop
faddl
ss
mov
mov
scas
cmp
lock
and
lods
push
push
adc
daa
adc
inc
loopne
divb
add
and
push
sub
dec
sbb
inc
jg
sub
adc
cmp
adc
xor
xchg
sub
xchg
addr16
popf
les
mov
or
and
mov
xchg
or
cli
mov
pusha
pop
sub
scas
cmpl
sbb
out
cmpb
popa
mov
push
adc
push
loope
jo
sbb
test
dec
repnz
pop
bound
clc
cmp
dec
dec
adc
ret
xchg
add
sti
add
and
sbb
add
cmp
adc
push
adc
jo,pt
dec
daa
dec
mov
nop
add
add
je
mov
jo
adc
jno
dec
and
push
stos
addl
movb
adc
and
enter
push
cmp
pop
arpl
jo
orl
aad
pop
arpl
cmp
popa
enter
push
dec
push
sbb
jne
decl
dec
pop
xchg
out
push
inc
mov
bound
inc
lret
icebp
or
lods
sub
lahf
les
jge
data16
int
inc
inc
cmp
sahf
movsb
jno
add
add
das
pusha
and
xor
inc
notl
fdivl
rcl
inc
inc
jmp
mov
cmpb
adc
xchg
ror
jp
jo
arpl
push
scas
pop
pop
or
xchg
in
lcall
jecxz
lds
sbb
mov
jo
ljmp
and
pusha
adc
or
adc
and
test
jne
aad
jno
push
or
jne
pop
cmp
add
sub
rcll
lret
ret
push
jne
out
lock
lret
or
inc
xor
repz
lret
mov
or
adc
pop
push
pushf
mov
pop
cld
push
sbb
or
sbb
insb
mov
jp
aas
xchg
inc
ds
inc
jl
fbld
pop
js
or
fbld
sub
es
shrb
int3
xor
leave
adc
std
xor
pop
jne
push
inc
bnd
push
loope
lret
xchg
mov
sbb
cmp
mov
in
push
ja
jle
or
dec
lcall
lret
mov
xor
je
xor
hlt
or
ret
adc
add
mov
inc
rcrb
jecxz
movswl
addr16
pop
xchg
and
dec
insl
lahf
movsl
fistpll
loopne
push
add
and
jne
jle
pushf
pop
adc
mov
cmp
fisttpll
jle
cs
add
xor
ljmp
sub
xlat
out
sti
sbb
ficompl
mov
inc
pushl
lret
mov
jmp
mov
scas
ret
outsl
jbe
adc
mov
xchg
sbb
fsts
js
fcompp
push
sub
sbb
nop/reserved
adc
dec
int3
jle
rcl
cld
xor
pop
or
jne
pop
mov
loopne
mov
sbb
mov
xor
dec
lods
jge
sub
cmp
push
cmp
pop
adc
or
or
inc
and
sub
add
movsl
push
and
mov
dec
cs
mov
lock
adc
mov
xchg
jecxz
mov
sbb
into
test
or
sbb
inc
divb
add
sub
jae
enter
sub
mov
and
lret
je
cmp
arpl
insl
xor
mov
in
test
pushf
into
aam
or
adc
cmpsb
faddp
rcrl
int
xor
adc
adc
in
stos
int3
xor
cmp
rcrl
mov
in
cmp
int3
adcl
shll
test
movsb
testb
inc
mov
inc
push
test
popf
cwtl
into
inc
imul
cmc
pop
xor
cld
lretw
outsb
cmpsl
movsl
pop
jnp
cli
mov
cwtl
pop
inc
nop
jle
add
jge
add
movsl
or
or
xorl
shlb
test
data16
int3
ret
addb
dec
xchg
ror
sub
xchg
add
and
push
rcrb
dec
sub
pop
xchg
cmpsl
cmp
pushf
mov
out
xor
popf
adc
add
mov
jle
aam
sbb
popa
int
xor
xchg
mov
or
inc
push
cli
sbb
popa
addb
into
jb
mov
ret
pop
int
xchg
jo
imul
fdivl
xchg
in
push
add
test
push
hlt
lea
pop
lds
iret
push
pop
mov
dec
sbb
dec
sbb
addl
loope
pop
pop
dec
sub
lret
sub
cmp
pop
das
mov
push
rolb
push
and
in
sahf
sbb
jo
dec
fimull
pop
lea
push
sub
mov
sahf
push
and
sub
aas
dec
aam
jns
shl
adc
xor
cmp
push
loopne
je
inc
or
adc
push
dec
repnz
enter
add
xor
xor
dec
xchg
push
adc
sbb
adc
inc
sub
in
jno
iret
fmuls
das
mov
aam
mov
and
sbb
xchg
addr16
sbb
rcrl
in
sub
movsb
sarb
sbb
fsubs
jbe
fdivrl
push
mulb
or
lods
cmc
imul
push
pop
ss
scas
push
cmp
sbbb
cltd
push
dec
xchg
nop
lock
mov
add
xchg
pop
mov
pop
lahf
jne
shll
movsl
xor
mov
outsb
les
out
mov
enter
push
sbb
add
jg
pop
arpl
in
call
mov
in
xor
jecxz
adc
test
in
inc
sbb
fldt
xor
imul
mov
jge
sbb
mov
jecxz
sbb
push
xchg
or
add
cmpsl
cmp
push
or
aad
sub
fadds
adc
daa
out
add
aam
pop
pop
test
fst
out
rcr
pop
fbstp
dec
xlat
mov
dec
pop
mov
fiaddl
cld
jae
jno
lds
mov
push
dec
or
cld
pop
or
testb
das
out
or
ret
ja
ljmp
push
and
adc
or
mov
mov
cmp
imul
jge
popa
sub
sbbb
xor
ret
imul
cld
clc
adc
shll
xchg
out
stos
dec
mov
mov
nop
jmp
ljmp
pusha
mov
jmp
lock
and
enter
mov
cmpsl
andb
adc
adc
lret
add
in
loopne
add
flds
adc
inc
mov
fmuls
addl
shll
scas
adc
and
das
mov
out
pusha
stc
or
and
test
mov
add
inc
inc
add
fsubs
into
cmp
or
rcrl
sub
add
adc
mov
sbb
push
or
sub
pop
or
fsubrs
sbb
jae
pop
and
inc
jl
enter
push
add
cmp
mov
iret
outsl
insb
loopne
movd
sub
lock
imul
push
ss
jo
test
inc
xchg
mov
xchg
cld
xor
mov
push
popa
shl
and
adc
xchg
cmp
movb
cli
in
shufps
xorl
dec
fisttpll
mov
add
add
mov
mov
jne
ret
jmp
ucomiss
push
nop
mov
pop
jmp
xchg
fmull
insl
fiaddl
add
push
or
jo
and
enter
and
jne
sbb
push
cmp
cwtl
sub
in
push
and
js
fsubrl
cli
mov
mov
xchg
add
xchg
push
aad
add
lret
add
pushf
cld
shl
enter
loopne
fsubrl
mov
pop
sbb
xor
test
and
mov
mov
xchg
cld
lods
fbld
pop
orl
inc
arpl
push
icebp
cmp
sbb
add
ljmp
mov
mov
mov
stos
in
push
push
mov
mov
arpl
add
roll
cmpl
cmp
jmp
mov
test
leave
inc
add
mov
push
pop
xor
cmpsb
in
xor
and
je
clc
pop
xchg
lret
add
jle
jge
je
jne
iret
inc
sub
je
push
inc
cmp
sbb
xor
sbb
jl
insl
pop
xor
cmp
mov
incb
push
xor
repz
push
movsl
push
sbb
fdivr
adcb
mov
popl
pop
or
fnsave
shr
pusha
add
xchg
push
insb
fwait
pop
sahf
nop
sbb
fld1
push
ds
ss
cmp
xor
dec
push
mov
cmp
push
xchg
xor
xchg
jbe
sub
lock
xlat
pop
inc
pop
pop
fbld
push
hlt
ret
popa
loope
pop
mov
into
sbb
pop
jbe
testl
std
add
lods
std
or
lods
push
or
test
addr16
sti
mov
or
mov
jle
jge
jl
xor
xchg
inc
adc
fimuls
dec
faddl
call
pop
mov
shrb
push
shll
cmpsl
jnp
fisubrl
aam
add
sub
sbb
xor
les
adc
pop
and
xor
ja
repz
jo
addr16
stos
push
loope
loopne
out
sahf
daa
arpl
fbld
popf
out
sahf
inc
dec
pop
jo
imul
cmc
cmp
and
xorb
dec
call
shrl
push
cmc
xor
insb
push
bound
jmp
movzwl
fimull
in
loop
mov
sub
lret
add
loopne
aaa
pop
ret
push
and
xchg
xchg
pushf
adc
mov
aad
in
push
popa
inc
cs
adc
xor
push
ja
inc
icebp
xor
pop
xor
push
mov
fmul
xor
shlb
fwait
mov
mov
jmp
nop
pop
xchg
mov
nop
aam
test
sbb
inc
sbb
imul
je
inc
imul
iret
je
and
in
push
aas
xchg
aas
pop
sub
pop
rcrb
cmpsl
loope
pop
xchg
cmp
fsubrl
and
and
inc
imul
cmc
cmp
ret
in
and
jge,pt
mov
pushf
test
cwtl
and
daa
dec
jbe
add
lret
push
and
int
addb
and
out
aam
push
push
roll
fsubs
jb
in
in
pop
xchg
rcl
lahf
hlt
popa
or
repnz
arpl
int3
in
mov
xchg
sub
xor
addb
call
lods
cld
add
jbe
cmp
xor
fdivl
aaa
or
or
jmp
sub
mov
movsb
jge
add
ror
mov
mov
aam
sbb
loopne
loopne
popf
enter
rolb
adc
mov
or
push
sub
dec
call
dec
cmp
xor
adc
xor
dec
jbe
dec
fcmovbe
mov
lods
inc
das
test
jbe
adc
push
das
mov
xor
pop
das
xchg
outsl
and
mov
sbb
fdivs
pushl
je
jl
adc
in
or
pop
xor
das
loopne
mov
pop
js
jae
loopne
subl
mov
sub
pushf
stos
jo
jmp
mov
mov
pop
das
nop
jge,pn
in
adc
inc
bound
jge
mov
cld
sbb
in
mov
sbb
pop
call
std
mov
push
jle
or
outsb
sbb
push
and
cmp
jge
push
fadds
jbe
add
bts
jmp
push
popa
fmuls
and
or
icebp
in
or
or
lahf
push
arpl
sarb
add
ficoms
je
mov
les
inc
sbb
xor
test
jle
out
js
dec
call
push
stos
pop
adc
inc
scas
test
lock
push
adc
dec
inc
pop
push
and
mov
das
pop
xchg
or
les
mov
xchg
shll
jae
movsl
cmp
push
push
push
ja
fsubs
scas
gs
addr16
push
jae
adc
je
jmp
mov
clc
pop
inc
inc
addb
mov
push
and
push
mov
arpl
das
inc
add
mov
pop
rcr
out
mov
enter
stos
lock
pusha
lds
xor
popa
add
jne
rcll
ret
pop
nop
pop
add
aam
mov
add
jl
out
out
adc
pop
sub
pushf
mov
scas
rcl
fstl
pop
or
inc
cmp
leave
outsl
xchg
mov
gs
repz
pop
mov
pop
lods
aad
ljmp
ja
dec
imul
fwait
dec
mov
in
sahf
mov
rep
iret
repz
add
pop
pop
sub
cmp
inc
push
arpl
mov
je
push
mov
pop
pop
xor
pop
sub
mov
and
add
mov
pop
mov
rcl
jl
movsb
jmp
xor
jmp
push
adc
or
es
sbb
jbe
mov
cmp
rorl
mov
and
repnz
or
nop
fimull
cmp
jmp
sub
lea
cwtl
mov
cli
aas
sub
sbb
lock
es
fadd
ret
ret
jmp
xor
loope
push
cltd
sbb
leave
in
jmp
lock
rclb
xlat
stc
loope
in
test
pop
das
cmp
sti
jae
je
push
push
mov
loope
pop
inc
adc
lea
pop
dec
or
inc
pop
call
push
test
or
insb
sti
mov
in
test
dec
ret
push
jnp
jge
insb
lret
sarb
mov
addl
adc
cld
sbb
dec
call
adc
pop
into
popf
pop
fsub
jb
mov
aam
ljmp
nop
in
inc
sbb
push
out
sbb
push
sub
insb
push
cmpsl
adc
loop
add
adc
test
pop
mov
imul
jle,pn
fs
adc
sub
xchg
outsb
jle
ss
jg
js
jg
jmp
mov
jp
sub
inc
cmp
push
out
and
cmp
xor
mov
inc
call
sar
movsl
hlt
push
jb
and
cmp
and
lret
and
jbe
mov
stos
push
cmp
sbb
mov
daa
pop
lock
sub
inc
lea
popf
mov
sbb
dec
lods
xor
mov
mov
nop
push
sub
xchg
lock
lret
ja
cmp
jmp
lock
or
sbb
add
or
inc
pop
sub
add
sbb
xor
inc
dec
xchg
pop
pop
fwait
ret
lcall
loop
push
std
lock
jns
repz
stc
adc
push
nop
std
ja
mov
mov
inc
push
into
leave
repz
ljmp
or
std
les
fcompl
fsubrs
pushl
in
add
cld
or
ja
sub
cmp
pop
leave
xchg
pusha
call
xchg
xchg
cmp
aaa
add
sbb
or
cmp
insl
fcmovnu
in
shl
ret
adc
fs
daa
ror
pop
or
ret
jmp
push
lea
inc
testl
jmp
insb
jae
adc
icebp
lock
lret
push
mov
repz
dec
or
dec
clc
add
and
nop
sbb
sub
fsubl
and
jle
or
inc
adc
cmp
xor
mov
pop
adc
aam
cmpl
not
js
sub
or
jecxz
ret
mov
inc
add
xchg
scas
cmpb
or
sbb
cmp
loope
test
andb
cltd
idivb
mov
push
add
add
andl
testl
imul
xor
mov
push
jnp
adc
aam
sub
data16
push
xchg
push
addl
push
add
cmpb
test
ds
lods
push
adc
ljmp
inc
bound
lret
sub
dec
jmp
lock
aas
icebp
mov
dec
test
sarl
cwtl
mov
jecxz
and
cmp
cmp
jne
outsl
inc
adcl
inc
inc
in
mov
or
lahf
aaa
jae
sbb
mov
daa
shlb
cmpsl
add
dec
adc
push
add
mov
inc
clc
pushf
jecxz
add
rorb
push
sub
hlt
inc
test
jmp
or
pop
add
dec
xor
jl
lret
inc
pop
mov
sbb
jecxz
mov
pop
mov
pop
mov
push
ret
push
nop
pop
xchg
cltd
push
cmp
mov
sarb
add
and
sbb
mov
pop
lock
add
gs
push
inc
mov
add
add
jnp
ja
dec
repnz
dec
notb
sbb
inc
aaa
mov
cmp
sub
sbb
jg
das
jge
loop
test
xlat
out
aam
lods
in
hlt
push
ljmp
xor
call
push
or
scas
xor
mov
call
orl
mov
mov
cmp
mov
sub
pushf
push
sbb
outsb
sub
shrb
add
add
cmp
js
jmp
xor
div
sbbl
in
and
testb
sub
mov
mov
sarl
stc
cli
jb
fucomi
dec
mov
pcmpeqw
adcl
inc
inc
adc
or
sarb
movsb
mov
in
mov
or
sbb
and
fldenv
and
push
fwait
scas
testl
push
or
push
call
mov
rcrl
test
dec
pop
add
test
enter
lock
push
repnz
and
adc
mov
add
mov
sbb
jle
and
jle
sbb
in
xor
or
je
mov
cmpsb
sbb
jmp
xchg
xchg
je
cmp
fcompl
and
xlat
sti
add
aas
push
jp
fidivrl
clc
inc
add
daa
xchg
add
pop
mov
leave
pushf
mov
adc
and
inc
repnz
xor
sub
call
xor
sbbl
and
pop
adc
sahf
jne
jl
fcoms
aaa
mov
or
push
iret
dec
add
sbb
mov
mov
popa
call
jne
lret
out
stc
lea
insl
ret
punpckhwd
dec
xor
pop
adc
dec
call
mov
or
sbb
jne
adc
jne
jno
sub
ret
pop
mov
mov
add
stos
pop
call
cmp
add
mov
xor
lock
cs
data16
insb
lret
mov
jl
add
and
adc
push
movsl
sbb
jmp
mov
xor
jb
xor
loope
add
mov
mov
push
daa
ljmp
ret
xor
data16
jmp
fwait
addr16
fildl
push
push
pop
inc
inc
xor
jo
push
push
mov
mov
xchg
das
popa
call
ss
jne
mov
adc
xchg
add
adc
or
sub
mov
dec
call
les
loop
rclb
xor
push
es
arpl
mov
clc
scas
add
shll
setge
jg
xor
inc
dec
jne
movb
rolb
out
movb
aas
fsubs
dec
jmp
pop
xor
pop
pop
cmp
es
push
adc
mov
inc
push
or
push
out
add
setne
aaa
sbb
add
cld
popa
xor
loope
jmp
mov
cmp
add
shlb
scas
icebp
pop
test
data16
fdivr
inc
and
sub
dec
or
dec
jne
movsl
rorl
and
cli
pop
sbb
out
inc
ss
mov
add
or
mov
out
aas
mov
ljmp
addr16
dec
imul
shl
call
movsl
jae
mov
xchg
xor
scas
dec
or
jle
in
sbb
push
mov
add
or
or
adc
pop
add
adc
mov
jnp
orw
fidivl
pop
data16
sub
add
sbb
repnz
loope
push
sbb
jmp
adc
adc
ja
adc
addr16
lcall
insb
js
or
xchg
adc
xlat
cmp
add
xor
sbb
xchg
and
jo
mov
inc
repz
inc
ss
push
or
xor
inc
aam
shlb
fs
or
and
outsb
or
sbb
xchg
imul
insb
mov
jmp
inc
clc
ror
test
push
sbb
mulb
or
and
adc
cmp
xchg
shlb
ret
mov
fldenv
cs
inc
push
adc
test
push
loopne
stos
lea
ds
push
lea
gs
adc
hlt
fadds
adc
test
lock
es
sbb
mov
adcb
dec
outsb
pop
sub
gs
add
and
movsb
adc
fsubrs
inc
jb
cli
xlat
adc
cmp
adc
push
jge
call
sbb
inc
and
cld
push
push
and
or
jle
xchg
xor
sarl
lock
add
rolb
xchg
lock
incb
test
and
fiaddl
jg
faddl
jle
jg
outsl
jo
jg
es
out
pop
pop
mov
nop
cmp
test
daa
inc
dec
mov
arpl
decb
add
dec
das
call
push
and
or
shlb
and
jne
cmp
jne
das
icebp
xor
loop
mov
and
jne
shlb
jno
jecxz
aas
test
jbe
push
cmpb
lret
xchg
cmp
mov
or
rorl
dec
pop
outsb
add
orb
jno
mov
jl
inc
inc
sbbl
pop
arpl
push
aam
push
inc
dec
jne
push
mov
jg
mov
add
push
lcall
mov
cmp
test
stos
mov
lret
push
das
jmp
sbb
cmc
sbb
out
les
cmc
add
cmpsb
fwait
rclb
mov
cwtl
mov
adc
mov
xor
add
aas
les
es
xor
jp
push
sahf
jge
fcompl
cmpb
jg
push
dec
cmp
aam
xchg
aam
xlat
imul
movsl
loope
dec
jo
out
in
cmp
sbb
push
insl
or
data16
sub
nop
shrb
sti
mov
or
jge
xor
inc
add
cld
add
xlat
mov
adc
adc
jl
fisubrl
mov
cs
cmpsl
popa
das
leave
inc
adc
pop
or
inc
jmp
and
dec
xchg
mov
and
mov
lods
pusha
fmuls
repz
or
sub
sbb
inc
and
sbb
and
or
xor
add
or
int3
jnp,pn
loopne
ficompl
sbb
daa
test
xlat
out
adc
or
mov
addb
xchg
insl
fs
cmpsl
insb
or
aaa
or
adc
movsb
loope,pn
aas
adc
dec
lret
or
push
add
adc
adc
push
ljmp
inc
sub
rcrl
and
xchg
ljmp
jne
orb
out
mov
call
xchg
cmp
lock
int
add
or
divl
add
or
scas
dec
and
lock
imul
cwtl
es
movl
jge
sub
pop
fisubs
sbb
insl
rorb
ja
jl
ficoms
dec
out
inc
push
xor
arpl
mov
inc
lock
or
mov
rclb
cmp
stos
push
call
push
dec
inc
add
nop
xchg
push
and
je
cwtl
inc
lahf
aaa
dec
dec
adc
mov
cmp
in
or
inc
je
dec
mov
pop
sbb
ret
aaa
xlat
sub
adc
repz
stos
adc
insb
mov
int
rcll
shlb
sub
ss
iret
std
xlat
xlat
fimuls
sbb
nop
sbb
lret
cmp
jne
push
scas
in
or
and
test
push
fnsave
mov
xchg
cmp
xor
imul
cs
or
sub
decb
sub
fildll
loopne
inc
insb
jecxz
sub
sbb
jmp
lods
divl
leave
bound
inc
sub
fs
or
add
dec
js
js
data16
dec
out
add
mov
fs
sub
lret
inc
lods
icebp
addr16
jmp
and
and
add
add
aaa
xchg
xchg
andb
adc
repnz
or
add
sbb
add
pop
addl
lret
ss
out
mov
or
test
adcb
add
xor
rcl
pop
add
sbb
in
lcall
mov
add
pusha
leave
incl
fistpll
imul
and
or
xchg
add
adc
loopne
or
xchg
in
mov
imul
hlt
sbb
adc
movsl
and
pop
pop
clc
jne
cmp
or
lret
insl
pop
mov
inc
pusha
xchg
mov
jnp
add
pushf
push
adc
clc
cmpsl
lock
mov
jo
pop
mov
push
int3
add
fadd
mov
xchg
add
jae
orl
pop
loopne
mov
push
and
fdivrs
jp
or
rcll
fcom
call
sbb
pop
push
ret
std
cld
xor
or
ja
xlat
add
adc
arpl
jmp
loopne
xchg
loopne
xchg
sub
imul
xor
rol
out
movsb
xchg
xor
inc
loopne
and
sbb
or
cld
pop
and
add
sbb
or
cmp
cmp
xchg
cmp
inc
add
inc
sub
cs
jmp
sbb
cmp
and
sub
imul
aaa
or
pop
dec
arpl
ret
xor
movsb
xchg
or
and
adc
fstl
sbb
xor
out
jle,pn
rolb
mov
adc
push
add
gs
add
adc
pop
ja
sub
into
or
push
ret
aaa
mov
pop
push
insb
push
mov
fisubrl
pop
mov
push
add
cmp
pop
pop
sub
btsl
movsl
pop
sub
mov
pop
or
add
jge
int3
jno
fsubs
or
sbb
pcmpeqb
xor
xor
pop
mov
pop
push
inc
push
or
rcll
mov
mov
pop
test
jb
scas
inc
inc
xchg
loopne
popa
dec
xor
mov
adc
adc
nop
xchg
fs
mov
je
clc
fcmovnu
leave
mov
jo
cmp
adc
imul
pop
lcall
push
and
push
popf
cmpsl
loope
mov
lods
subl
add
adc
icebp
xchg
add
push
push
cld
push
cmp
ss
mov
mov
push
addr16
pcmpgtw
xchg
cmpl
iret
pop
nop
cmovb
loop
sbb
aaa
add
adc
mov
lods
mov
mov
xchg
mov
test
sub
mov
mov
aam
mov
cmovb
fsubs
pop
push
cs
int
and
add
sub
sbb
xor
clc
adc
inc
daa
sbb
inc
mov
add
call
sub
mov
push
or
dec
jb
gs
mov
or
test
pop
and
dec
adc
lea
loopne
push
pop
nop
sbb
sub
out
adc
daa
push
enter
add
inc
fcoml
daa
xlat
xor
dec
dec
jbe
rol
mov
jmp
nop
sub
loopne
lds
andl
or
sub
mov
pop
xchg
cld
mov
pop
rcll
mov
jnp
lods
cmp
inc
cld
and
ffree
pop
xchg
outsl
or
fists
ja
test
xor
or
ja
fbld
pop
shl
adc
dec
mov
cmp
loope
sarb
adc
xorl
add
outsl
adc
cmp
and
inc
inc
test
movb
lock
or
fcoml
mov
imul
fmull
sbb
ror
test
xchg
inc
push
jmp
xchg
pop
inc
add
jns
sub
push
int
iret
rcrl
sahf
test
and
ds
jnp
adc
out
push
idiv
pop
adc
mov
aas
push
dec
sub
and
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
incl
lds
jno
inc
mov
movsl
leave
aam
sub
push
cmp
ja
mov
xor
stc
dec
and
pop
and
sub
out
fnstenv
push
pop
add
inc
add
andb
pop
push
insl
jge
push
inc
mov
push
pop
mov
aas
jmp
dec
nop
fmul
or
push
mov
shrl
dec
cmpsl
cwtl
xchg
rorl
repz
jne
jbe
dec
dec
dec
ja
jns
scas
dec
mov
sbb
inc
imull
aam
add
test
jg
cmp
mov
push
and
ja
orb
test
ret
cmpl
mov
inc
roll
sub
mov
nop
adc
andl
xor
scas
xchg
sbbl
mov
movsb
xlat
ljmp
xor
inc
cmpb
push
or
iret
gs
pop
shlb
fptan
adc
xchg
shlb
aas
mov
inc
push
pop
cmp
dec
nop
nop
add
or
mov
stos
xchg
shl
cmpsb
xchg
push
and
fs
add
clc
leave
fsubr
mov
lahf
loop
mov
jp
rcr
clc
mov
mov
cld
test
inc
shll
sub
in
ret
adc
mov
and
ja
outsb
ljmp
mov
sbb
jge
cmp
inc
insl
pushf
push
push
insl
adc
inc
test
pop
repz
and
in
xchg
js
adc
sbb
adc
ja
adc
ja
xor
jne
hlt
clc
add
ret
add
cmp
hlt
cmp
rolb
xor
xchg
nop
icebp
scas
fdivs
xlat
movsl
mov
push
or
and
sbb
pop
leave
xor
lret
leave
push
lods
cmp
inc
adc
add
sub
aas
movl
mov
mov
lcall
inc
and
mov
push
xlat
rorb
jo
lock
sbbl
shr
mov
jns
sbb
clc
pushl
and
scas
push
adc
cmp
clc
divl
lock
pushf
cmp
rcl
insb
fsts
mov
xor
rcrl
add
inc
add
in
movsb
xor
loopne
loope
mov
pop
mov
stos
push
pop
ljmp
mov
fdivl
push
mov
sub
mov
cwtl
aam
call
fcom
push
or
pusha
es
fstps
loopne
iret
imul
and
divl
out
fwait
mov
adc
invd
sub
arpl
lcall
xor
loope
jmp
ret
xlat
rolb
int
sub
mov
sbb
sbb
push
in
jne
or
inc
jle
xchg
push
inc
call
clc
jmp
lea
inc
cs
jmp
bound
xor
add
push
adc
pusha
es
out
pop
cmp
jle
and
addb
stos
cmp
mov
inc
jp
add
mov
xor
sub
mov
repnz
push
mov
inc
outsl
add
clc
in
leave
cmpsl
push
orl
ror
jge
add
int3
xorb
dec
add
xchg
adc
pop
in
mov
aam
push
sahf
cld
xor
jns
sbb
lods
add
dec
addl
daa
push
jo
fcomi
fdiv
mov
nop
pop
fmuls
or
mov
cli
jb
push
inc
jne
mov
orb
rclb
push
lock
adc
pop
jmp
cmpsb
out
and
mov
fdivrs
pop
lock
mov
mov
and
cmp
cmpsl
loopne
leave
pop
and
pop
jge
adc
adc
ret
test
faddl
aam
or
outsl
pop
dec
es
test
sbb
mov
ljmp
lock
pop
mov
loopne
xchg
mov
aad
iret
int3
shll
or
mov
mov
inc
insb
jno
in
push
pusha
roll
jmp
dec
aam
lock
ud0
mov
push
sub
test
aas
ret
sbb
addr16
pop
loopne
int
lret
mov
cwtl
add
dec
or
add
and
dec
adc
cwtl
pushf
lcall
jno
or
test
popa
xor
mov
stos
adcl
or
mov
push
pop
or
and
ret
hlt
and
and
or
pop
add
add
lods
pop
mov
mov
movsl
dec
notl
dec
je
or
das
sbb
mov
xor
fmuls
or
xor
and
pop
sub
mov
adc
cld
xchg
aam
dec
add
test
adc
push
pop
bound
pop
clc
aad
or
add
shll
cmp
add
adc
mov
cmp
pop
cs
adc
scas
loopne
inc
mov
out
add
or
cwtl
aad
xchg
stos
lods
adc
mov
or
ds
or
test
ret
inc
xchg
cld
pop
sub
add
push
cmp
mov
jl
out
pop
sub
je
rorb
test
icebp
lcall
incl
popl
dec
pop
cltd
dec
sahf
adc
data16
sbb
push
mov
mov
push
mov
add
sbb
push
rolb
fistps
sub
je
pop
adc
pop
or
jnp
jns
imul
iret
and
add
lods
and
or
mov
popf
cmp
jg
cwtl
sbb
mov
xor
mov
mov
sub
adc
xor
aas
adc
mov
jo
repnz
lods
adc
or
dec
mov
jno
out
mov
add
imul
or
movb
stc
in
movb
aam
movb
testl
push
dec
inc
mov
push
and
mov
ss
dec
xor
pop
push
jmp
jmp
ds
and
clc
mov
sbb
je
dec
popa
dec
call
jae
repz
xchg
cmc
cltd
cmpb
rol
inc
jo
sbb
push
sub
dec
adc
arpl
ret
orl
or
es
push
test
and
js
adcl
ss
sub
imul
or
mulb
mov
cmp
jle
push
pop
inc
add
add
fsubs
iret
movsb
test
sub
outsl
push
das
sbb
jle
or
and
and
test
dec
pushl
jne
cli
daa
jmp
test
cmpsl
jo
adc
jmp
push
lcall
mov
iret
sbb
push
adc
inc
fdivrs
and
test
daa
shlb
dec
or
xchg
inc
sbb
stos
push
inc
or
xchg
or
jmp
xor
es
jge
lgs
lock
pop
ret
xchg
or
and
addb
xchg
or
dec
sahf
mov
jne
jge
mov
inc
testl
data16
cmp
pusha
and
dec
lock
xor
push
je
ret
push
dec
pop
add
or
and
push
adc
jle
lea
inc
fcomip
movsl
add
inc
and
ds
jb
push
es
xor
mov
and
xchg
push
daa
push
xchg
test
dec
push
push
dec
inc
pop
cmpsl
sub
and
add
add
test
or
xchg
cmovno
leave
dec
movsl
repnz
sub
adc
cmp
leave
adc
sub
scas
or
movsb
push
stc
in
sub
mov
aad
mov
push
pop
sub
fs
movsl
test
addb
pop
shl
gs
arpl
cs
jo
cmp
fadd
clc
or
adc
lds
pop
sbb
scas
mov
push
inc
push
lock
jne
aaa
dec
pop
adc
push
pop
cld
push
out
add
adc
sbb
rorb
adc
aas
lahf
insb
inc
adc
insl
ret
mov
popa
jns
jae
mov
add
das
mov
rol
add
pop
sahf
outsb
add
and
lahf
lret
push
stc
dec
es
adc
sub
sub
pusha
cmpsb
jbe
rorb
fcoms
jmp
sub
popa
ret
dec
out
sub
jb
push
clc
hlt
pavgb
in
lock
call
dec
dec
loopne
xchg
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
nop
xchg
xchg
xchg
mov
leave
insl
fs
jge
leave
leave
leave
jle
pusha
popa
leave
leave
leave
leave
bound
gs
leave
leave
leave
addr16
leave
leave
leave
push
insb
insl
leave
leave
leave
leave
outsb
outsl
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
push
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
pop
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
inc
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
xor
leave
leave
leave
leave
xor
xor
leave
leave
leave
leave
ss
cmp
leave
leave
leave
leave
cmp
cmp
iret
leave
leave
leave
ds
and
pop
or
ds
test
sbb
cltd
ds
mov
or
scas
dec
repz
push
pop
adc
mov
fwait
xor
clc
mov
sbb
in
xor
pushw
xor
dec
cmp
add
sub
pop
push
fldenv
enter
mov
inc
repnz
das
insb
cs
sarl
cmp
jo
rcrb
cmp
cmp
cmp
inc
or
xchg
push
outsl
xchg
inc
adc
cmp
test
jns
mov
jno
fcoml
lock
lret
adc
popa
add
add
scas
xor
push
xor
std
add
cmp
jne
test
add
jnp
pop
and
add
mov
mov
mov
movsb
outsb
ljmp
sbb
inc
test
inc
imul
test
xchg
sbb
sbb
cwtl
cld
addb
sbb
mov
or
or
jno
fidivs
sub
lods
cmc
push
dec
jg
sbb
popf
popa
inc
mov
cmp
sbb
mov
loop
push
addb
rorb
ret
xor
roll
ljmp
mov
xor
mov
lret
mov
popf
xor
or
bound
popf
fcoms
enter
xor
movsb
inc
enter
push
xor
and
in
xor
fdivrl
xor
pop
and
xor
xor
fadd
xor
mov
clc
sbb
adc
mov
mov
test
xchg
iret
mulps
cmp
xor
mov
sub
cmpsb
sbb
jb
push
and
and
mov
insl
add
mov
pop
test
inc
jg
lods
lret
xchg
mov
adc
stos
xchg
stos
or
jb
rorl
pop
or
pusha
inc
mov
or
sti
lahf
push
and
jb
ss
adc
xchg
xchg
or
pop
xor
add
pusha
orl
mov
and
mov
or
inc
jbe
xchg
xchg
mov
adc
jo
xchg
and
loopne,pn
adc
rcl
sti
in
roll
add
aam
insb
cs
dec
jns
adc
mov
sti
int
inc
jne
mov
movsb
dec
xchg
cmc
roll
pop
or
and
inc
cmp
iret
int
sarl
clc
pop
rolb
dec
inc
push
sbb
lock
test
sbb
inc
ljmp
add
andl
mov
jecxz
outsb
pop
das
rep
shl
ret
cmpb
push
fimull
orl
sub
sbb
mov
xchg
and
rorb
adc
xchg
and
out
and
xor
fwait
cmp
push
xchg
movq
pop
mov
in
dec
and
fcoms
loop
in
addr16
rcrb
xchg
xchg
rcrb
aad
cmp
in
and
and
dec
dec
push
popl
aam
inc
in
xor
xor
or
in
cmp
clc
xchg
push
or
mov
sbb
push
adc
mov
cmp
pop
lret
mov
xor
or
dec
push
add
call
cmp
and
dec
arpl
add
cmp
scas
mov
mov
fsubl
lea
mov
inc
xchg
adc
popa
dec
fcoms
dec
cmp
xchg
and
lea
dec
shlb
push
dec
ljmp
mov
loope,pn
fldcw
pop
jnp
test
mov
adc
adc
inc
hlt
cmp
pop
das
or
add
jnp
cmp
fistps
jmp
shrb
adc
sub
dec
push
adc
and
sti
cmp
cmp
out
and
cmp
imul
xchg
sbb
and
enter
std
cmp
popa
adc
jns
sbb
cmp
push
repnz
test
loopne
push
inc
add
ds
lock
push
incl
gs
dec
push
aaa
ds
js
cmp
pop
sti
mov
mov
fbstp
push
xor
dec
pop
xchg
loopne
loopne
pop
dec
jno
test
mov
add
xrelease
or
inc
lods
jae
ds
fiaddl
fiadds
cmp
cmp
sbb
cmp
popa
out
inc
addb
push
dec
jae
inc
stos
mov
insb
and
push
jo
ljmp
lods
dec
or
sti
jl
ss
add
cmpsl
insb
aas
inc
sbb
fwait
xorl
adc
and
les
sbb
push
mov
adc
jb
mov
insb
add
iret
mov
pop
daa
ss
sbb
xlat
in
inc
pop
or
in
and
or
stc
loop
pop
mov
push
jge
or
sub
and
add
dec
add
sbb
add
rcl
cld
mov
adc
jmp
add
inc
add
dec
aaa
cwtl
mov
jge
xor
push
sbbb
movb
sbbb
out
xor
cli
inc
or
cmpb
sbb
enter
add
sbb
adc
orb
mov
push
movb
jae
loopne
push
in
xchg
sub
cltd
pop
sub
add
andb
xchg
cmp
xchg
lock
iret
mov
inc
je
inc
adc
sub
and
lea
cmp
sahf
sbb
sbb
add
inc
jo
sbb
loop
or
rcll
iret
and
adc
ds
pop
mov
add
pop
jbe
jmp
and
push
mov
hlt
scas
inc
lods
lahf
cmp
adc
out
cmp
ret
fldpi
data16
bound
add
inc
pushf
pusha
cs
adc
push
jmp
push
jb
add
int3
lds
push
xor
pop
loopne
xchg
add
mov
or
sbbb
lcall
add
and
insl
nop
jge
sbb
addr16
lods
fiaddl
or
adc
orl
lods
push
pop
pop
sub
push
xor
mov
xchg
shlb
adc
das
rolb
and
and
ja
popa
popa
xchg
push
jg
push
xchg
test
push
pusha
shll
inc
cltd
dec
ret
test
mov
js
orb
mov
cmp
jns
mov
jns
cmp
and
push
addb
add
movsb
add
sbb
jg,pt
adc
adc
inc
mov
inc
mov
inc
insl
sub
or
fcmovnu
inc
cwtl
inc
xchg
mov
or
je
xchg
inc
xor
sub
xor
data16
or
nop
nop
adc
xorb
mov
fisttps
jae
xchg
or
repnz
push
add
or
cwtl
jae
je
hlt
imul
je
insb
data16
push
data16
enter
push
in
rorl
arpl
adc
nop
mov
gs
dec
imul
fdivl
xchg
loopne
jmp
mov
lahf
jae
nop
shrl
jo
dec
iret
es
outsb
int
fiaddl
cmp
pop
jo
outsl
sbb
push
inc
fldcw
or
je
sbb
fimuls
push
inc
jl
mov
lods
mov
dec
mov
or
push
lods
jb
push
inc
insb
sbb
pop
push
or
int3
adcb
es
je
insl
inc
insb
push
sarl
jnp
push
push
push
jo
call
push
inc
jns
sbb
or
mov
addr16
and
xor
sbb
fucomi
ret
and
xchg
jge
or
adc
push
pop
adc
int
cmpsl
xor
add
jne
and
sbb
xor
sub
mul
push
xor
dec
jl
jp
mov
lods
push
data16
push
fidivl
or
inc
inc
imul
addr16
inc
outsl
jb
jae
mov
and
add
fidivs
push
or
adc
dec
insb
popl
rorb
add
push
mov
pop
mov
shrb
or
xor
push
fucomi
dec
jecxz
sti
imul
cmpsl
inc
xchg
insl
adc
int3
xchg
jae
iret
fdivr
cmpsl
ljmp
lods
dec
inc
lock
inc
add
push
loop
bound
cmpb
sbb
add
xor
adc
mov
cmpsl
jo
pop
addr16
pusha
add
pop
xor
inc
inc
call
arpl
add
jnp
push
inc
data16
addb
repnz
les
pop
cmp
pop
add
push
add
cmp
nop
push
or
mov
dec
pop
enter
sub
add
add
mov
rolb
push
push
xor
faddl
lock
mov
jns
pop
jl
nop
insb
dec
sahf
mov
out
pop
js
ret
sub
cld
addr16
add
sub
cld
lahf
pop
pop
xchg
pop
negl
rorb
xor
leave
adc
scas
leave
or
add
lock
leave
or
add
add
or
sub
cmpl
lods
push
add
push
mov
insb
dec
lcall
sbb
mov
push
push
pop
outsb
jmp
test
add
fs
add
inc
sub
pop
arpl
movl
roll
dec
insl
add
fwait
or
xor
push
pop
dec
and
cmp
inc
pop
lahf
inc
js
je
push
inc
jae
push
lods
imul
popa
nop
jae
pop
sbb
lds
orb
xchg
add
int3
pop
and
pop
aas
push
int3
push
or
add
flds
add
mov
jecxz
xor
in
jno
add
lahf
inc
insb
fs
push
fs
xchg
shlb
in
add
ret
sbb
inc
push
movsb
rcr
mul
jns
int3
cmovle
les
dec
iret
jge
icebp
jg
adc
mov
sbb
pusha
mov
xor
mov
inc
or
mov
dec
push
add
dec
pop
sbb
push
sub
adc
fdivrp
or
cmp
movhps
mov
neg
jae
mov
shlb
inc
cmp
testl
imul
orl
and
and
stos
sbb
divb
je
int3
fwait
cmpb
stos
fcomp
fsub
repz
push
jge
pop
dec
xor
mov
jbe
xchg
or
sbb
push
add
push
cmp
sub
add
xchg
test
and
push
cs
sub
out
jo
out
mov
xchg
fdivs
out
pop
and
das
mov
scas
mov
mov
pop
das
inc
punpckhdq
adc
pop
cltd
andps
test
rolb
sahf
mov
add
js
mov
pop
push
scas
pop
push
or
mov
or
fisubrs
push
hlt
popa
jl
insl
popa
addr16
mov
mov
mov
and
jbe
push
lods
pop
fcomp
ret
nop
sbb
nop
pop
sbbb
aas
cmp
inc
lock
inc
das
pop
repnz
lcall
hlt
into
hlt
imul
fs
push
sahf
dec
fistpll
inc
pusha
mov
test
cmp
xchg
cltd
add
adc
xchg
in
xchg
test
pop
add
and
loop
dec
cld
push
xchg
sbb
lods
push
push
sub
dec
rorb
insl
mov
jb
push
fcompl
sarb
leave
stos
xchg
pop
mov
mov
sbb
sbb
mov
pop
mov
pushf
mov
in
leave
outsb
lret
jbe
dec
pop
lret
push
je
mov
shrl
rol
mov
cmp
xor
shl
iret
jbe
insb
push
mov
sahf
pop
xchg
subl
test
daa
sbb
movsb
fimuls
xchg
dec
push
fistpll
xor
cwtl
iret
push
or
dec
hlt
dec
arpl
pop
movsb
mov
push
pop
repnz
call
xor
out
enter
rol
rorb
rorl
push
fisttps
fimuls
jns
jnp
inc
orb
push
fsubp
iret
cmp
imul
les
fsubs
shlb
jg
push
pop
sbb
inc
mov
add
std
mov
add
push
dec
ret
xchg
push
xchg
dec
sbb
movsl
aaa
pushf
push
mov
shrb
xor
add
enter
cld
add
dec
push
inc
testb
std
cmp
push
rorl
aam
sub
cld
addb
notb
mov
or
sbb
fneni(8087
push
inc
dec
popa
sbb
stos
xchg
xor
aam
outsl
cmp
lds
enter
push
adc
sbb
cmpsb
jmp
add
push
pop
je
sbb
mov
push
dec
jne
jmp
push
fisubrs
add
dec
jne
cmp
xor
mov
test
aam
sbbb
adc
imul
sub
push
andb
or
mov
inc
testl
pop
or
push
add
clc
add
sbb
xlat
shlb
cwtl
insb
mov
adc
test
mov
lock
jne
fbstp
lahf
cmc
cmp
jne
adc
dec
pop
call
test
imull
dec
push
sbb
daa
mov
or
inc
or
jno
pop
push
xchg
pop
dec
loopne
lds
push
outsl
fistpll
enter
pop
jnp
xchg
aaa
movsb
insb
insl
add
cltd
cmp
xorb
std
xlat
cmp
dec
adc
cmp
scas
pop
and
fcomi
scas
icebp
icebp
in
nop
pop
sub
sar
je
incl
xor
push
xchg
fst
jle
inc
push
das
pop
iret
cmpb
dec
cmp
fwait
fs
sub
xlat
out
test
orl
ud0
add
add
push
stos
adc
sbb
ljmp
and
pushf
inc
int
pop
jmp
popf
mov
jle
clc
flds
adc
inc
cmp
jg
mov
inc
mov
fsubrl
mov
xchg
pop
cmpsb
push
cmpsl
dec
popa
mov
cmp
enter
xor
sbb
arpl
pop
or
jb
outsl
outsb
add
lret
pop
stos
xor
outsb
pop
dec
insb
imul
push
xchg
jbe
add
jb
insb
gs
in
mov
push
gs
insb
pop
jbe
mov
shll
insb
cmpsb
jb
add
cld
xchg
gs
xorb
cs
daa
dec
jnp
inc
inc
insb
jne
inc
jne
lock
arpl
imul
adc
pusha
lods
scas
pop
or
sub
cmpsb
jns
add
push
imul
xchg
inc
jo
add
inc
dec
data16
std
and
lret
push
arpl
js
insb
dec
je
cmovae
bswap
sbb
pop
jo
push
pop
imul
inc
push
addr16
mov
inc
je
inc
push
xchg
dec
enter
movsb
insb
lods
das
or
add
and
jg
jb
xor
je
or
insl
das
push
ret
pop
push
outsb
daa
pop
xchg
fs
inc
sbb
sbb
mov
push
mov
aaa
fsts
dec
jnp
jmp
xchg
inc
sarl
int3
lock
aaa
adc
ss
pop
adc
inc
loopne
sahf
inc
push
daa
or
push
mov
jne
pop
xchg
daa
bswap
popa
xor
mov
das
lahf
dec
jnp,pn
ret
push
arpl
mov
inc
inc
imul
pop
roll
das
cmp
or
or
insl
das
or
mov
or
add
ret
push
mov
sbb
pop
fs
adc
sub
mov
adc
rcrl
pop
mov
jg
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
mov
xor
pop
push
pop
dec
inc
dec
dec
arpl
inc
inc
pusha
jg
pusha
push
adc
inc
push
dec
dec
push
mov
and
inc
shlb
xacquire
popa
out
inc
inc
xor
xor
divb
inc
dec
inc
and
inc
xor
popl
inc
inc
dec
notl
dec
xor
dec
mov
mov
test
das
sbb
mov
inc
repnz
inc
dec
push
mov
inc
jae
adc
dec
pop
ret
fwait
aas
inc
adc
push
push
push
dec
push
inc
scas
sbb
inc
dec
push
mov
adc
pop
fs
xchg
cmp
mov
mov
pusha
imul
or
mov
test
dec
orb
mov
fistps
jl
orb
adcb
adc
repnz
or
xor
incl
pop
mov
bound
sbb
and
sbb
and
cmovs
decl
es
repz
or
jmp
add
xor
js
xchg
mov
test
mov
jb
sub
sub
cli
mov
push
push
adc
es
xchg
inc
and
pop
or
rclb
push
and
and
mov
dec
mov
inc
add
mov
bound
dec
jb
ret
das
rorb
ljmp
cmp
xorb
adcl
mov
jne
mov
adc
cmp
int3
outsl
fldenv
dec
hlt
sbb
dec
add
cld
or
mov
insb
inc
adc
sub
mov
mov
or
mov
jg
arpl
jae
jmp
xor
pop
bound
push
sbb
jo
sub
repz
xor
fildll
out
jl
add
mov
or
loope
adc
pop
sub
adc
mov
sbb
mov
add
mov
gs
adc
mov
pusha
stos
test
dec
into
sub
sbb
gs
jge
inc
mov
scas
les
gs
out
enter
inc
push
movl
pop
das
jnp
nop
xor
je
and
add
or
cmp
cmpsb
mov
sbb
roll
rolb
out
jbe
cmp
jmp
or
xor
pop
push
jne
add
in
or
sbb
iret
push
pop
add
sbb
mov
jb
sti
addr16
pop
jmp
xchg
xor
mov
sahf
push
cmp
jo
dec
cmp
cmp
inc
lods
sub
push
addr16
jo
addb
xor
push
mov
int3
sbb
inc
fwait
outsl
pop
jmp
fadds
flds
popa
push
and
xlat
into
push
filds
push
or
loop
fildl
or
dec
push
pop
or
mov
and
push
scas
sbb
subl
lcallw
adc
scas
adc
ret
mov
pop
dec
clc
rcrb
cltd
push
adc
sbb
xor
jmp
push
test
add
pop
or
xor
adc
das
sbb
jg
shlb
inc
lea
push
adc
fildl
es
rol
sbb
pop
and
dec
and
jl
sub
testl
xor
push
das
pop
neg
push
jmp
addl
mov
ret
js
xlat
int3
das
jnp
mov
out
cmp
fildl
adc
push
js
outsb
das
jp
xchg
xor
mov
in
pop
push
push
in
jmp
loopne
inc
lods
pop
fsubr
and
xchg
je
mov
inc
sbb
add
sbb
push
mov
mov
dec
seto
xor
popa
xor
mov
xchg
scas
loope
or
dec
dec
push
sub
mov
out
cmpsl
cmp
push
leave
orl
pop
fcoms
xor
jg
in
push
loopne
inc
jne
filds
outsb
inc
into
jno
imul
loope
out
rclb
mov
lock
add
enter
mov
pop
cmp
and
ss
lock
or
pop
xor
mov
sbb
sub
rcrb
xchg
subb
cld
mov
mov
pushf
inc
push
inc
xchg
imul
imul
xor
mov
nop
pop
test
cmc
imul
push
out
mov
fisttpll
inc
ds
inc
cltd
into
pop
lods
pop
mov
xchg
nop
subb
mov
pop
ja
leave
adc
add
and
imul
mov
adc
sbb
pop
jo
push
add
sbb
inc
cmpsb
inc
or
cmp
mov
or
in
mov
jmp
jbe
push
pop
js
hlt
adc
jmp
mov
addr16
lock
iret
or
adc
adc
and
or
and
nop
fcmovnb
mov
mov
inc
cmp
push
rclb
push
add
jbe
adc
es
pusha
xor
stc
inc
and
mov
xor
sub
pop
dec
pop
adcb
das
loope
movl
mov
inc
jno
scas
xchg
inc
cltd
mov
sbb
add
mov
pusha
mov
arpl
in
and
pop
lock
add
mov
nop
pop
std
lock
jge
stc
loopne
sbb
outsb
rcl
sbb
sbb
outsl
mov
cmpsb
mov
sub
or
sub
or
or
xor
push
dec
ret
or
push
push
loope
or
adc
or
ficomps
push
or
cmpb
cmovnp
int3
mov
pop
and
shll
xchg
ja
add
or
icebp
push
adc
movsb
pop
sarl
xchg
adc
push
inc
or
cmp
pop
or
in
in
and
in
pusha
test
dec
pop
test
fcmovu
popa
xchg
push
insl
fs
rep
or
bound
repz
inc
push
xor
inc
insl
sbb
dec
repnz
movsl
cmpxchg
shlb
mov
js
popf
pop
or
adc
emms
pusha
xor
sub
and
push
shll
test
fisttpll
js
or
inc
lds
adc
loope
mov
add
pusha
shl
aaa
mov
cmp
repnz
pop
inc
das
scas
movsb
jno
mov
push
jnp
pop
aam
add
call
or
outsb
dec
jb
out
adc
mov
sbb
dec
push
sbb
jp
out
xchg
fstps
or
in
push
das
sub
jb
stos
inc
and
shll
dec
lea
movsl
movsl
or
enter
push
repnz
jb
jne
lcall
cmpsl
adc
pusha
aas
cmp
lds
pusha
dec
scas
jge
jge
data16
lret
pop
orl
inc
jae
shlb
fstl
or
shlb
inc
mov
enter
dec
pop
loope
dec
jnp
gs
add
push
add
inc
call
dec
adc
lahf
mov
add
arpl
sub
orb
addr16
rorl
or
sub
jg
and
or
shll
dec
call
adc
je
test
mov
adc
jne
mov
pop
cwtl
mov
xorl
cmp
add
pushf
mov
xor
xchg
or
sarb
test
push
sub
enter
or
push
lods
cwtl
inc
ds
push
adc
es
adc
adc
add
xor
loopne
shrb
sbb
jnp
pop
cmp
adc
clc
and
push
movsl
imul
dec
mov
rclb
pop
sbb
or
add
ds
mov
mov
popa
add
xchg
iret
mov
inc
das
xchg
mov
sbb
add
push
push
add
jbe
aaa
cmpb
cmp
sbb
inc
insb
add
sbb
pop
movsl
addl
add
shlb
pop
jecxz
sbb
shlb
jge
sbb
lea
xor
popl
jmp
fnstsw
addb
les
orb
xchg
add
rorb
mov
pushf
js
clc
mov
stc
add
jl
js
pusha
movsb
bswap
push
push
out
cwtl
ret
scas
or
add
mov
adc
bound
in
inc
jbe
xchg
ja
jo
and
ret
or
clc
mov
inc
movsl
imul
push
je
cmp
sbb
adc
lock
push
out
adc
dec
push
out
pop
push
add
jno
mov
push
xorb
push
adc
js
arpl
adc
call
scas
inc
push
ret
lahf
rcrb
and
cmp
or
enter
push
lds
and
filds
add
not
and
addl
ret
mov
outsl
fcoml
and
lret
or
cmpsb
insb
cmp
imul
jne
xchg
sbb
and
push
add
sarb
push
xchg
jo
in
jns
add
sbb
in
pop
sbb
imul
and
and
jp
mov
sbb
push
rolb
in
loopne
jmp
lock
mov
es
movsb
mov
mov
and
data16
or
push
sub
dec
jmp
fcomp
jbe
jns
pop
js
dec
ret
add
inc
out
sbb
lock
push
and
push
dec
push
pushw
test
ret
fnstsw
push
movsl
dec
jmp
in
scas
add
add
rcll
loopne
je
xor
push
lds
xchg
add
sbb
pop
cmp
lea
pop
fimull
outsl
insl
fwait
gs
lcall
lea
add
dec
pop
add
add
or
add
dec
or
out
xor
fcmovnb
inc
adc
mov
mov
aas
dec
add
mov
sbb
into
mov
lea
xchg
cmp
pop
pop
pop
pop
push
push
pop
clc
add
jne
and
mov
sti
jne
sub
adc
adc
mov
or
in
sbb
add
movsl
and
jo
jae
pop
and
inc
cmp
fs
js
fldcw
jne
or
mov
xor
and
mov
sub
shl
mov
pusha
add
jmp
imul
sldt
adc
or
stos
dec
fs
cld
push
mov
mov
cld
mov
cmp
or
sbbl
mov
fisttps
or
sbb
shlb
jne
ds
add
xchg
inc
xor
lock
std
lea
xor
push
cs
dec
pop
ss
jmp
addr16
data16
adc
insl
jmp
sbbl
push
cmp
sbb
push
ljmp
cmp
add
xchg
jl
push
pop
and
icebp
inc
or
jp
fadds
xchg
outsb
mov
and
or
or
clc
and
add
or
and
addr16
and
pop
inc
cltd
push
sub
cmp
lods
adc
inc
dec
xchg
shrb
mov
in
insl
aas
and
ret
lea
repnz
add
and
xor
adc
les
xor
in
and
push
push
sti
pop
add
bound
or
mov
add
pop
or
mov
jge
movsl
daa
je
push
push
in
add
popa
addb
data16
inc
sbb
cmpsl
push
outsl
push
dec
clc
cwtl
or
shlb
mov
push
and
shrl
adc
push
divl
xor
cmpsb
pop
add
scas
mov
das
xor
sub
nop
cli
jecxz
popa
cmpb
sbb
repnz
fld
pop
sub
jb
push
gs
movsb
xchg
or
cmp
inc
dec
jle
xchg
mov
cmp
mov
adc
rcr
sub
out
sbb
mov
adcl
shrl
cmc
inc
movl
fld
pusha
insb
data16
in
dec
stc
insb
pop
cld
push
push
inc
pop
repnz
mov
in
sbb
xchg
add
adcb
insl
push
cmp
and
add
jecxz
jge
mov
rolb
nop
dec
and
addr16
sbb
mov
or
pop
pusha
jne
sbb
sbb
add
xchg
subl
cli
jmp
jg
test
jle
cmp
jl
cmpsb
aaa
dec
loope
imul
or
cmp
jle
mov
mov
or
loope
inc
sbb
or
jge
adc
and
test
add
push
imul
lds
or
jne
push
push
push
push
fsubl
push
pop
mov
mov
and
sub
mov
jne
lcall
flds
xor
lods
xchg
sbb
fmuls
movsb
scas
push
or
add
inc
xor
jg
push
sbb
xchg
sbb
das
add
sub
xchg
sbb
push
andl
or
loope
hlt
mov
mov
xor
push
inc
ret
fcmovnu
pop
adc
jg
or
jl
push
cmp
int
mov
pop
std
dec
push
jle
mov
inc
dec
jne
add
rcrl
add
pop
out
inc
pop
xor
ret
loop
cld
jmp
xchg
push
repnz
add
sub
mov
dec
adc
test
or
add
pop
bound
lea
out
mov
test
outsb
mov
and
jbe
ja
rcll
inc
mov
loop
ret
mov
push
mov
add
test
xor
out
fwait
es
jne
add
xchg
mov
nop
push
push
cmpb
push
shlb
mov
mov
scas
add
push
mov
jmp
cmp
jo
aaa
imul
hlt
jecxz
mov
and
ret
cmp
pop
or
popa
cmpsb
xor
cmp
test
pop
push
lret
or
loope
push
outsb
rorb
xor
shrb
fdivrl
sarb
cld
scas
mov
out
lods
insb
mov
push
rorl
pop
jns
jmp
and
ret
inc
jl
push
cli
lea
test
stc
jmp
and
jge
jnp
add
adc
dec
je
dec
or
adc
mov
jle
lock
jmp
sbb
mov
int3
push
in
jmp
setb
loopne
sbb
test
adc
insb
and
add
or
inc
and
inc
mov
and
and
pop
add
sub
inc
inc
mov
pop
adc
test
or
sub
pusha
lret
mov
sbb
out
adc
lds
je
addl
jmp
pop
test
je
jo
add
add
xchg
mov
addl
imul
hlt
and
mov
and
push
or
rcl
or
dec
and
insb
and
push
repz
pop
ret
test
js
sub
sub
mov
data16
sub
sub
leave
dec
xor
clc
clc
hlt
hlt
sarb
or
mov
es
push
aas
push
xchg
ret
mov
xor
lods
loop
call
sbbb
testb
lods
mov
mov
push
mov
in
push
push
mov
adc
sbb
fucomip
push
adc
int3
shlb
jo
cmp
push
xor
sub
jbe
adc
in
loopne
add
loop
jbe
adc
loope
and
call
rclb
int3
jg
mov
sbbl
lock
daa
test
movsl
adc
fmuls
fidivl
mov
push
insb
in
push
add
push
lods
add
lods
mov
orb
jle
push
nop
inc
in
jb
lods
mov
jl
add
push
xchg
dec
hlt
lods
add
fsubr
in
jns
das
sub
mov
loopne
fcoml
xor
lock
add
fmul
adcl
arpl
lea
cmpsl
push
push
jmp
and
out
adc
mov
pop
add
fists
clc
dec
rorb
dec
adc
call
shll
lret
fcompl
es
or
xor
nop
ds
mov
push
jae
mov
pop
add
ret
xchg
jb
dec
mov
push
push
jne
dec
popa
xchg
addl
adc
cmp
orb
cmp
je
sub
xchg
sbb
jne
cwtl
pop
and
jp
sbb
gs
mov
add
xchg
lret
outsb
push
lods
and
rcr
test
xchg
push
loopne
pop
jne
cmp
dec
shrb
mov
test
iret
loop
jo
jne
xchg
sbb
popa
and
ret
add
in
es
hlt
xchg
cld
push
in
insb
push
sar
cld
pop
cmpsl
test
add
in
sbb
pop
adc
or
test
clc
mov
cmp
pop
dec
mov
sarb
push
jns
push
lock
inc
pop
add
pop
dec
inc
push
or
addr16
aaa
leave
lcall
and
mov
mov
cwtl
ret
daa
pop
rcl
imul
push
jne
outsl
jb
xor
xor
sbb
movsl
add
push
jmp
inc
xchg
pop
test
sbb
lea
mov
test
add
pop
xchg
fbld
pop
xchg
adc
bound
pop
push
int3
lock
aam
dec
repnz
mov
ds
jge
inc
clc
mov
cmpb
addps
lods
hlt
mov
add
push
lock
out
adc
dec
lea
mov
xchg
xchg
ja
popw
jge
xchg
sbb
imul
xlat
sbb
xchg
je
adc
fmuls
push
jp
and
mov
test
je
call
xchg
mov
sbb
icebp
and
xchg
mov
and
fimuls
dec
push
xchg
push
test
rcrl
or
call
mov
mov
clc
sarl
push
xor
cli
add
xor
add
push
push
push
movsb
clc
inc
add
ja
xorl
pop
mov
cmp
or
clc
inc
push
and
decb
aas
or
dec
mov
movsl
adc
aad
dec
and
xchg
test
addb
xchg
jge
jp
adcb
mov
nop
lret
add
push
xor
int3
xchg
daa
shll
pusha
hlt
sarl
rcrl
dec
xor
inc
jnp
jne
cmp
cmpb
movsl
ja
cmp
mov
jl
mov
das
vmwrite
sub
jg
mov
xchg
sub
and
jo
pop
jl
pushf
daa
inc
sub
push
push
and
mov
mov
addl
lea
xchg
xlat
pop
jne
mov
mov
and
mov
mov
pop
pusha
cmpsb
adcl
and
sbb
sbb
test
push
insb
and
xchg
iret
mov
pusha
add
cmp
xor
pop
push
sub
xlat
add
or
xchg
rorb
adc
or
push
mov
push
pop
jno
in
dec
mov
das
sbb
sbb
xor
xchg
inc
mov
les
mov
cmpsl
mov
or
js
mov
mov
xor
scas
aad
jae
insb
das
xlat
inc
push
das
jne
inc
in
mov
cli
js
dec
cmp
mov
jmp
mov
sti
xchg
mov
ss
in
mov
test
or
mov
adcl
sub
jnp
mov
cmpsl
sbb
sbb
dec
inc
mov
lea
test
and
bound
pop
mov
jp
push
or
xchg
mov
or
repz
dec
mov
jecxz
jbe
jmp
mov
mov
lds
cmpsl
adc
add
dec
adc
inc
jno
stc
xor
imul
cmp
sub
shlb
add
stc
jg
ja
mov
pop
arpl
dec
jnp
mov
adc
jecxz
and
jg
sub
subl
mov
inc
mov
dec
push
jns
fucomip
push
dec
daa
faddp
in
test
pushf
sbb
push
mov
je
lds
addl
cmp
aam
pop
setne
xchg
rolb
bnd
repz
cmp
rclb
adc
aas
cmp
adc
rorb
or
das
dec
mov
lret
and
push
les
js
add
or
add
pop
xchg
xchg
push
mov
pop
sub
xchg
stc
aam
inc
insl
sahf
data16
flds
add
cld
clc
mov
adc
cmp
dec
sbb
add
push
pop
dec
icebp
pop
and
aaa
mov
sub
jne
out
in
inc
and
inc
sbb
or
or
test
add
push
sbb
adc
cwtl
pop
push
mov
jge
mov
std
inc
std
sbb
push
aad
imul
push
xchg
and
add
imul
aaa
push
xor
push
dec
mov
idiv
lea
pop
jo
movsb
and
repz
push
enter
and
dec
icebp
dec
inc
mov
mov
add
dec
inc
std
mov
popa
pusha
jle
jmp
xor
push
psubusb
pop
cltd
insl
add
dec
call
dec
cmpl
lcall
mul
mov
add
xor
add
outsb
dec
subl
jecxz
mov
add
lods
fld
movsb
add
push
bound
adcb
insb
inc
pop
fld
outsl
stc
mov
sub
mov
incb
js
movb
push
and
and
cmpsl
sub
xchg
push
jl
or
fisttps
adc
int3
push
imul
shlb
movsb
inc
sub
adc
push
cli
fisttpl
sub
mov
xchg
test
push
inc
aam
and
inc
mov
and
clc
adc
sub
lret
jb
popa
aaa
mov
push
adc
jecxz
pop
fld
fadds
sbb
sub
or
push
push
jecxz
pusha
pusha
adc
inc
fs
or
lea
insl
and
test
dec
adc
adc
cmp
arpl
dec
repz
jo
adc
sbb
in
inc
fs
or
daa
dec
sbb
js
je
out
xchg
lock
xor
cs
js
sbb
or
pop
filds
movsl
sbb
in
cltd
mov
addr16
sbb
dec
mov
add
fmuls
add
inc
pop
movsb
rcr
cmp
test
aam
push
ret
pusha
add
sarb
pushf
rsqrtps
in
out
mov
data16
sub
test
in
adc
xor
xor
sbb
loopne
int3
push
mov
iret
cmc
adc
or
sub
pop
shll
or
subb
aaa
sarb
rcr
dec
imul
cs
push
popa
call
divb
incb
ret
ror
xchg
mov
mov
adc
cs
ss
inc
adc
pop
fwait
add
mov
enter
sbb
nop
add
mov
jmp
xchg
aam
adc
mov
mov
inc
dec
movsl
jo
sub
aaa
jl
mov
and
scas
daa
push
aaa
fmuls
lods
faddl
test
dec
push
and
mov
cmpsl
adc
add
jl
cmp
add
lret
sub
inc
out
cwtl
push
push
test
lods
mov
push
or
mov
and
inc
je
add
js
xchg
mov
jge
sub
jo
lea
cmc
test
mov
fs
mov
push
test
enter
and
cld
dec
call
sub
mov
adc
sbb
iret
ja
enter
sub
les
add
lods
fimuls
adc
or
or
int
lcall
fidivs
daa
add
lret
subl
sar
hlt
fldcw
andb
mov
cmp
and
adcl
stos
and
jecxz
push
lret
imul
roll
fiadds
push
in
ret
cmp
out
into
or
rorb
fisubrl
xorps
clc
gs
dec
cmp
lea
mov
xchg
pop
mov
or
mov
add
mov
and
ljmp
lock
add
mov
xchg
inc
sti
das
xchg
in
jge
lods
sti
push
iret
jo
mov
pusha
dec
ficoml
mov
jnp
std
dec
mov
loop
fsubrs
inc
loopne
ja
mov
sub
add
cwtl
add
les
mov
je
xchg
cmp
inc
into
adcl
adc
push
jmp
add
popa
out
xchg
xor
rorb
add
aam
or
cmp
sbb
in
test
dec
xchg
sub
push
or
and
nop
orl
push
push
pop
rcrl
pop
and
les
mov
shlb
jmp
pop
push
sbb
mov
scas
jno
jp
xor
daa
aaa
aaa
add
push
in
loope
popa
lock
data16
mov
sbb
or
gs
xchg
fistps
pushf
inc
pop
dec
push
xchg
and
xchg
push
jmp
sbbl
push
push
fs
clc
sub
xchg
mov
and
andb
nop
or
sub
cmp
iret
aad
or
cs
add
push
ret
adc
xor
rorb
cmp
jp
adc
jbe
inc
and
data16
les
xor
sbb
and
push
cld
les
jae
out
loop
rol
imulb
pop
add
mov
loopne
jmp
dec
xchg
push
ljmp
sbb
test
xchg
adc
pop
cltd
test
dec
out
ret
out
lds
ret
mov
pop
pop
repnz
adc
dec
insb
pop
pop
shrl
and
push
repnz
mov
adcl
fcoml
push
test
mov
push
ljmp
adc
or
xor
js
jmp
push
mov
int3
mov
enter
or
and
push
repnz
mov
or
inc
adc
pushf
xor
lcall
mov
ss
ret
push
sbbl
addl
dec
and
push
inc
pop
lea
add
jge
sub
sbb
jge
lods
adc
mov
sbb
inc
pop
clc
xor
out
pop
mov
enter
sub
add
movsb
adc
ss
pushf
call
sub
xchg
pop
mov
mov
adc
push
stc
add
iret
or
dec
enter
push
xor
imul
aas
xor
adc
mov
test
or
fmuls
test
in
add
inc
nop
stos
pop
stos
push
or
sub
sbb
call
add
xor
inc
fxch
push
add
lcall
repz
jecxz
inc
sbb
popa
push
inc
mov
imul
mov
mov
out
test
mov
ret
cmovge
mov
sbb
adc
inc
jmp
out
inc
pop
pusha
mov
out
imul
orb
ja
lcall
pop
mov
jl
cmpb
fimull
fimull
adc
int
push
ja
cmpsl
pop
xchg
add
inc
out
adc
cmp
aas
repnz
push
add
pop
add
or
sub
xor
pop
xchg
inc
mov
lret
push
stos
cld
mov
pop
inc
pop
xchg
in
mov
rolb
cmp
scas
adcb
mov
scas
xorb
jo
inc
orps
and
adc
cmpsb
and
pop
int3
push
mov
xor
pusha
vmwrite
faddl
lock
and
enter
mov
add
or
inc
mov
pop
inc
push
mov
mov
push
push
or
es
lea
adc
iret
push
fiaddl
jbe
add
or
adc
fistl
test
xor
adc
cmp
cmpsb
iret
lock
pop
sbb
sahf
out
jns
sbb
xchg
ss
mov
jp
mov
mov
imul
aam
mov
push
stc
mov
lods
test
cwtl
mov
xchg
lret
adc
js
mov
imulb
add
aam
int3
testb
mov
es
adc
movl
jbe
inc
loopne
dec
pop
mov
jnp
sbb
and
add
and
fdivl
and
jge
lock
sbb
iret
addr16
mov
push
sbb
sbb
aaa
repnz
jne
sub
or
cmc
add
and
nop
dec
cmpb
sbb
js
push
push
and
jge
mov
mov
mov
shr
and
jecxz
mov
les
pop
mov
add
inc
adc
or
jne
scas
or
es
jle
popa
mov
mov
mov
mov
das
fldenv
add
inc
lock
or
inc
imulb
add
xchg
cmpsb
push
lahf
enter
pop
rcrb
mov
dec
mov
out
push
fmull
pop
arpl
inc
adc
push
in
push
or
jge
mov
push
or
push
fsubrl
push
adc
mov
push
sub
mov
and
cmpsl
lret
mov
jb
cmp
pusha
stos
add
xorb
in
nop
add
mov
enter
scas
lret
cmpb
jge
inc
cmp
and
insl
fistpll
dec
jnp
sbb
jmp
mov
cmp
je
mov
pop
loopne
cmp
push
adc
and
cli
inc
mov
mov
push
in
jne
xchg
adc
xor
shlb
jl
movsb
inc
push
mov
test
loopne
int3
dec
dec
cmp
jne
mov
add
sbb
xchg
lock
stc
or
sub
iret
loope
jnp
fmull
xchg
rol
mov
stos
and
in
rolb
pop
sub
xchg
mov
sbb
mov
nop
xchg
xchg
call
or
xor
ficompl
dec
insl
mov
popa
sub
pushaw
jno
rorl
mov
dec
in
lock
adc
in
push
lea
test
clc
jmp
push
dec
je
enter
repnz
mov
mov
xchg
fldl
sbb
fcoms
jbe
je
std
loopne
sbb
fnstenv
test
dec
jl
mov
and
dec
add
lcall
cmp
lds
test
outsb
dec
cmp
aam
xchg
adc
shll
or
xor
in
call
add
into
lock
fstpt
mov
push
mov
jle
mov
jb
inc
xor
push
add
shlb
mov
inc
sub
push
xor
and
adc
push
xchg
adcl
nop
dec
fildl
sbb
adc
arpl
mov
ret
bswap
emms
and
cwtl
mov
add
adc
jp
lock
xchg
pop
jb
push
or
inc
addr16
lods
xchg
sub
mov
or
arpl
addl
lods
pop
test
or
adc
add
sahf
sbb
adc
pop
movb
das
mov
inc
stos
sub
push
mov
cmpsb
lock
insb
inc
lods
imul
xor
mov
out
and
sahf
mov
sbb
ret
movsl
js
in
popa
out
xor
leave
mov
lea
aaa
pop
pusha
movsb
jbe
aaa
out
pusha
xorl
and
and
mov
ja
out
cmpb
call
scas
pop
jno
test
inc
sub
movsb
mov
sub
adc
shll
scas
push
add
mov
sahf
cmp
adc
inc
jge
sbb
jno
movsl
push
mov
xor
xor
sub
inc
in
loop
popf
js
sbb
xchg
loopne
pop
mov
push
dec
xlat
das
test
sub
push
inc
pop
test
push
push
pop
aad
pop
stos
push
mov
mov
in
or
leave
dec
jmp
mov
mov
mov
fldenv
movsb
jl
cwtl
sub
fst
pushf
inc
and
xchg
push
jo
iret
stos
lods
pusha
scas
and
xchg
push
outsl
dec
dec
fdivr
cld
lea
add
dec
shrd
or
push
je
add
pop
sbb
aam
xor
loope
xchg
fsubs
push
gs
dec
jmp
mov
fdivp
cmpsb
push
and
mov
sbbb
pop
xor
aaa
xor
add
orb
xor
dec
cmp
inc
mov
ret
fcmovnb
and
or
pop
dec
xlat
cmp
fadd
lods
and
inc
add
imul
and
mov
mov
sub
dec
in
scas
shl
sbb
pop
test
mov
sbb
push
ret
loopne
mov
push
dec
fs
mov
adc
xor
mov
xchg
dec
fnstenv
mov
sti
sub
pop
leave
sub
pop
rolb
sbb
jecxz
xchg
cld
rclb
mov
sbb
jle
call
fsubrs
pop
dec
unpckhps
repz
or
inc
lret
repz
sbb
push
outsl
imul
push
adcb
mov
jo
mov
or
scas
or
mov
pusha
insl
cmp
icebp
adc
das
adc
lea
jmp
cmp
adc
outsb
and
clc
jmp
pusha
inc
sub
mov
movsb
push
jbe
mov
add
lea
les
lea
andb
leave
mov
out
ret
sahf
xchg
pop
es
loope
dec
cmpsl
sub
mov
insb
add
test
dec
clc
sub
clc
adc
mov
test
adc
push
mov
mov
sub
sub
movl
add
fldl
fisttpl
add
scas
aas
ja
pop
scas
xchg
loope
mov
jne
sbb
test
mov
dec
pop
sqrtps
lahf
test
js
in
sub
in
jno
out
or
push
popa
inc
sbb
pop
scas
test
add
add
sub
cmp
dec
jne
jmp
mov
mov
jae
dec
fbld
call
adc
mov
xor
lds
ja
jb
and
gs
pop
fists
pusha
pusha
adc
jb
lahf
shrb
sbb
sbb
cmpsb
ss
add
xor
cltd
or
adc
adc
fstpt
dec
jae
sbb
jmp
imul
inc
mov
dec
test
gs
jne
imul
insb
inc
push
fs
negb
out
adc
hlt
mov
mov
dec
ffree
insl
pop
insb
adc
push
pop
je
adc
sub
adc
push
mov
das
shlb
push
push
mov
data16
xor
sbb
dec
mov
or
andl
lods
sbb
inc
adc
add
xor
jle
and
lahf
shrb
jg
mov
mov
xchg
and
xorb
xchg
add
ret
fmuls
rorl
lret
lods
sbb
pop
cli
sub
daa
push
push
loope
shlb
test
imul
cmp
jl
aaa
mov
mov
sbb
xchg
test
outsb
push
mov
rclb
inc
xor
cmpsl
mov
xchg
mov
test
push
je
adc
push
push
mov
fiadds
xlat
sub
lds
movb
shlb
sub
loope
jns
push
or
inc
and
mov
fisttps
cld
and
add
xchg
out
test
jge
inc
sbb
jp
orb
fs
mov
sbbl
loopne
or
dec
clc
scas
nop
ret
mov
insb
xchg
nop
mov
in
push
sub
mov
and
sbb
pop
xchg
jmp
roll
xchg
and
dec
push
or
aas
jo
xchg
aas
dec
rcll
ficoms
push
jmp
fst
or
mov
and
loopne
call
movsl
loopne
mov
rorb
pop
loopne
loopne
insl
pop
dec
or
add
pop
cs
mov
insb
fists
mov
sbb
xlat
lds
out
movsl
and
outsb
or
hlt
out
lahf
or
pushw
or
push
sub
pop
push
inc
sbb
movsb
push
cwtl
mov
call
lcall
add
je
lahf
test
xchg
add
clc
push
aam
add
aas
and
out
xchg
cs
sbb
or
mov
or
outsb
mov
pop
pop
and
movb
adcb
inc
clc
lcall
xor
push
dec
or
or
std
nop
jle
add
inc
xor
lds
jnp
add
mov
addr16
test
mov
pop
pop
sbb
push
in
push
mov
mov
jno
push
or
call
xor
test
mov
cmp
in
push
lcall
push
pop
xor
lahf
mov
cmp
jbe
mov
mov
dec
push
aas
ret
sbb
movb
or
or
icebp
dec
cmp
sbb
mov
loope
mov
jno
lds
into
imul
imul
and
sub
pop
xor
scas
sarb
cmp
movb
add
push
push
das
jb
scas
xchg
scas
adc
push
inc
iret
and
mov
sbb
add
xor
int
sbb
xlat
sub
loope
je
add
es
cmp
sahf
inc
in
dec
ss
test
xor
leave
pop
fadds
es
add
pusha
jno
push
in
out
push
or
sub
loopne
jle
sbb
aad
fadd
push
pop
dec
and
push
test
push
and
jmp
xchg
pop
lcall
pushf
and
sbb
shlb
pop
jo
xor
jo
push
and
out
fists
add
pop
aaa
lods
mov
daa
jmp
push
das
add
frstor
cmp
mov
lds
or
shlb
repz
xchg
adc
dec
add
mov
and
int3
push
hlt
and
and
push
sub
jle
mov
mov
jo
inc
data16
pop
push
pop
pop
xor
add
cmp
ret
sub
adc
or
jmp
xchg
adc
gs
adc
mov
lods
scas
insl
cmp
fsub
add
imul
or
loope
mov
sbb
faddp
push
orb
js
imul
mov
jnp
xchg
dec
fbstp
loop
loop
push
test
pop
loope
xor
nopl
push
notb
push
sbb
cwtl
int
xchg
mov
aaa
adc
dec
adc
jnp
add
enter
xchg
lea
or
mov
jmp
popf
or
clc
in
mov
adc
add
pushf
xor
lahf
inc
mov
ret
pop
push
in
push
addl
add
js
dec
mov
mov
inc
xor
or
add
imul
scas
jbe
ja
sub
cmp
or
inc
xchg
dec
adc
and
xchg
js
and
xlat
adc
inc
in
xor
push
out
test
outsl
lock
cld
push
cmp
sbb
cwtl
repz
sbb
arpl
fninit
nop
pop
cmp
sbb
push
dec
mov
and
mull
adc
sbb
push
add
movb
push
shll
xlat
xchg
xlat
add
out
mov
insb
mov
aam
xchg
fucom
ret
and
mov
insb
and
mov
int3
jl
cwtl
addb
add
xor
aam
pop
insb
cmovne
fdivrs
add
jmp
loop
pop
mov
dec
inc
notb
xchg
cmpsb
push
push
sqrtps
push
and
movsl
cmp
sub
fdivrl
rorb
adc
ja
lods
rcll
push
scas
sub
cmp
mov
lcall
jns
into
out
sub
scas
and
pop
or
sub
inc
arpl
daa
mov
imul
outsl
or
ss
inc
gs
rolb
insl
inc
mov
inc
je
dec
and
fildll
test
popf
adc
loopne
or
pop
adcl
ret
pop
pusha
fs
stos
adc
adc
out
out
hlt
xchg
mov
mul
adc
loopne
daa
and
mov
fcoms
fists
cmpb
dec
mov
jns
jbe
mov
repz
movl
inc
push
outsl
sub
mov
cld
cmpsb
int
push
push
mov
decb
sarb
xor
testb
je
mov
add
ss
jns
jo
mov
xor
fwait
push
mov
sbb
jo
pop
ja
push
push
push
inc
jns
sub
push
jbe
stos
rorb
sub
out
and
and
mov
das
xor
mov
fdivr
test
dec
data16
loopne
in
pop
mov
pushf
lret
in
mov
movsl
cmpsl
iret
loop
out
leave
push
xchg
push
iret
sbb
lock
cmpsl
add
inc
xchg
sbb
cwtl
imul
jae
push
clc
mov
add
inc
mov
rolb
scas
jae
lock
push
mov
sbb
push
stos
inc
cwtl
cmc
jl
push
leave
in
pop
or
and
inc
incl
sub
pop
push
punpckhbw
jo
and
ret
inc
fdivr
push
mov
sbb
ret
xor
ja
inc
rolb
out
and
jg
mov
les
fcomps
nop
xchg
xor
inc
ret
cmp
es
imul
add
add
lock
divb
dec
add
sbb
and
data16
cmpsl
in
mov
or
rcrl
movd
inc
adc
nop
lret
mov
stos
daa
adc
add
inc
testl
mov
or
jmp
xchg
mov
mov
xchg
or
adc
jmp
mov
mov
loope
and
inc
mov
and
sbb
push
adc
add
shlb
xor
lods
insl
inc
jmp
testl
orl
cmpsl
cld
aas
popa
rol
pop
cmp
add
cmp
push
imulb
pop
ret
pop
adc
rorb
pop
inc
sbb
xor
dec
ret
and
dec
repnz
cmp
mov
shlb
push
xor
je
add
stos
pop
lret
lock
pop
sbb
nop
sub
shlb
nop
in
outsl
and
add
xchg
outsb
xor
inc
insb
adc
add
or
addr16
pop
jmp
aam
mov
andl
aam
mov
ret
clc
xorb
outsl
inc
adc
aam
xor
adc
cmp
inc
add
jns
clc
inc
imul
dec
rorb
cmp
pop
mov
or
jnp
sbb
dec
xor
sbb
mov
or
cmp
or
pop
sbb
ffreep
push
pusha
shrb
inc
daa
repnz
push
outsl
xor
sbb
orl
inc
add
jo
dec
cmp
hlt
inc
insl
ret
insb
mov
mov
cli
aaa
out
mov
int
test
xorb
jno
pop
push
adc
sbb
and
xchg
or
xchg
pusha
mov
clc
aas
sbb
dec
test
sbb
add
mov
or
xlat
adc
lods
insb
pop
shlb
aas
or
movsb
movsb
clc
mov
shrl
or
test
push
push
xor
loop
xlat
insl
cmp
aaa
dec
push
popa
push
inc
test
sub
push
fsubl
sub
sbb
and
daa
push
popa
push
cmp
test
or
dec
imul
jae
pop
sbb
adc
dec
push
pop
xor
mov
xchg
je
inc
das
or
dec
pop
or
mov
push
imul
cmp
push
and
or
and
and
push
pusha
fdivl
pop
mov
int3
push
icebp
dec
test
andps
mov
pop
push
add
popa
pop
test
pushf
adc
shrl
push
insl
add
lea
jae
rcrb
sbb
in
add
push
test
sub
pop
cmpb
pop
cmp
ror
lcall
sub
jmp
out
mov
rcrl
and
pop
inc
scas
push
xchg
cmpsb
in
jg
or
insb
sbb
movsl
cmpps
clc
xchg
insl
inc
fstl
pop
sub
add
sbb
insl
lea
inc
inc
daa
cmc
pop
int3
xchg
fcmovnbe
and
enter
jmp
dec
or
inc
cmp
push
mov
stc
push
je
imulb
sub
or
inc
cmp
ret
push
pop
jo
jl
test
sbb
xor
pusha
fcoms
jae
aad
and
push
repnz
dec
or
jno
insl
lock
mov
xchg
stc
sbb
popf
and
cmp
fisubs
loop
ret
ret
xsavec
pop
mov
xor
and
cmp
push
adc
ljmp
pop
add
nop
pop
push
cmp
fadds
add
jo
mov
pop
push
in
out
ja
dec
xor
addb
sub
nop
mov
and
cmpb
push
out
testl
push
push
xor
ret
leave
or
ficompl
in
fiaddl
fildl
jo,pt
sub
adc
imul
jno
mov
add
adc
add
pop
and
pop
pusha
pop
dec
add
dec
ss
push
sbb
lods
mov
pop
push
add
cmpsl
or
lock
fs
sbb
loopne
dec
sbb
inc
sub
hlt
cs
pop
jle
insb
jl
xor
adc
xor
mov
sbb
inc
adcl
mov
cmp
icebp
inc
jne
data16
push
popa
cs
xchg
cmovb
jmp
out
repnz
sub
dec
outsl
sbb
ffreep
inc
outsb
shll
addl
or
jmp
mov
mov
lock
jno
arpl
jg
adc
sbb
inc
bound
pusha
push
clc
imul
cs
or
pop
jo
addr16
sbb
dec
cmpl
xor
xor
mov
xor
lods
mov
mov
mov
xor
xor
rcl
fdivs
xor
xor
loopne
call
in
lock
clc
xor
xor
add
or
xor
xor
adc
xor
xor
sbb
and
xor
xor
sub
xor
xor
xor
cmp
inc
dec
cwtl
les
xor
mov
sti
sub
mov
lahf
mov
or
mov
pop
jnp
pop
arpl
push
ret
add
xchg
fdiv
test
je
add
nop
test
mov
sub
movsb
fcoml
lods
cld
push
cs
sbb
sbb
mov
push
shrb
les
xor
xchg
add
mov
movsb
enter
sbb
clc
lret
add
or
in
push
sbb
dec
gs
sub
dec
xchg
add
insb
pop
movsb
xor
cld
jl
dec
nop
lret
xchg
add
sub
push
sbb
mov
gs
adc
adc
xchg
add
test
adc
sub
and
adcb
sub
push
sbb
andb
add
pushf
cmp
test
int3
mov
and
out
add
xlat
add
mov
ja
jecxz
lods
xchg
push
lods
enter
sahf
test
push
sub
add
push
sbb
sbbl
insb
outsl
jae
and
mov
push
js
dec
daa
sbb
add
fsubs
inc
inc
mov
mov
push
popa
jb
mov
add
test
dec
xor
jae
daa
sub
mov
mov
xchg
gs
addr16
sti
inc
fcomps
dec
arpl
jae
mov
dec
sbb
in
push
scas
fs
lea
imul
jns
jp
out
or
or
outsl
xchg
xchg
pusha
int
pop
pop
pop
inc
dec
cmp
xor
lcall
sbb
or
test
in
mov
or
dec
cmp
or
inc
orb
cmpsb
popf
sbb
imul
cmp
stos
pop
lock
outsb
popa
and
bound
push
stos
das
fcmovb
fiaddl
pop
in
pop
insb
ret
fcmovb
xchg
pop
pop
xchg
xor
jl
dec
or
xchg
or
sbb
sarl
push
jg
das
adc
outsl
addr16
in
fcompl
xchg
jne
insl
outsb
das
pop
rorb
mov
imul
push
das
pop
jmp
cmp
aaa
or
outsl
arpl
test
pop
push
xchg
enter
pop
outsl
pop
es
in
sbb
adc
or
inc
enter
add
dec
inc
hlt
pushf
out
sti
sub
les
xchg
out
add
inc
add
jp
repnz
xchg
out
xchg
js
sub
adc
sbb
cmpsl
mov
dec
aaa
je
call
xchg
inc
push
dec
inc
push
dec
add
rdmsr
dec
inc
ja
mov
push
cld
outsl
or
adc
sbb
shl
sbb
sbb
jl
inc
push
ds
nop
cmpsl
nop
mov
push
leave
xor
inc
pusha
jg
jl
mov
inc
sub
outsl
push
arpl
aas
jmp
jo
sbb
jl
pop
js
ret
inc
inc
push
or
pop
dec
pop
ret
push
inc
xor
andb
dec
jo
das
or
fwait
sub
or
dec
pusha
cmp
cmp
or
cmp
cmp
add
sub
add
dec
add
aam
nop
sub
adc
outsl
and
lock
sub
add
testb
je
jl
lods
aaa
roll
xchg
fstpt
adc
mov
xchg
add
fisubrl
add
mull
cmovne
pop
aas
dec
popa
or
push
frstor
xor
add
or
and
popa
pushf
movsl
add
std
pop
xor
or
push
mov
cltd
insb
loope
sub
mov
shll
jne
fisubrs
stc
subb
add
and
push
inc
mov
daa
adc
mov
pop
mov
jbe
mov
insb
clc
aaa
or
mov
in
dec
insb
fs
or
push
fisubl
mov
daa
or
bound
dec
imul
sbb
gs
adc
imul
pop
and
dec
je
push
or
or
enter
cmova
je
in
test
shll
xorb
jae
aas
mov
popa
and
in
std
imul
push
popa
jo
jns
enter
sub
popa
push
stc
iret
dec
dec
xor
and
lahf
or
cmp
outsl
fs
jp
mov
movsb
mov
fisubs
push
jbe,pn
mov
cld
pop
xchg
or
mov
xchg
outsb
pop
sarb
insl
pop
inc
inc
data16
xchg
jp
adc
adc
and
xor
aaa
or
shl
jae
pop
push
adc
cltd
test
or
adc
jg
in
popa
les
inc
popa
jb
dec
add
jg
sbb
sbb
mov
cs
push
xor
cmp
das
dec
js
stos
or
das
jbe
push
push
popa
mov
and
dec
inc
or
adc
pop
mov
insb
je
daa
sub
inc
mov
insl
jae
mov
xchg
ja
add
pop
es
jns
sbb
popa
call
rol
aaa
jno
insl
dec
in
sbb
popf
mov
das
inc
imul
xchg
add
call
cmpl
popa
movsl
test
pop
or
mov
movsb
or
add
push
xor
lahf
adc
out
cmp
mov
lock
iret
mov
mov
adc
jge
pop
push
mov
je
adc
ds
out
mov
fidivs
xor
call
shrb
stos
fists
and
push
cmp
push
mov
adc
bound
xor
mul
addr16
out
lcall
fs
add
mov
adc
xchg
or
and
push
aaa
out
and
xlat
lahf
adc
ja
enter
inc
das
or
mov
jo
aaa
mov
xchg
inc
call
push
pop
inc
inc
xchg
adc
stos
push
jne
cmpsb
pop
adc
xchg
jae
jg
and
test
add
mov
iret
xchg
or
inc
repnz
enter
addr16
or
outsl
unpcklps
sub
aaa
cmp
and
pop
dec
aas
sbb
pop
call
test
or
pop
mov
xchg
test
adc
outsb
push
and
xor
roll
imul
mov
add
inc
aam
jae
andb
out
bound
mov
xor
dec
adc
and
pop
arpl
testl
int
aaa
iret
lret
lods
movsl
mov
repnz
dec
sbb
or
aaa
das
adc
add
sub
mov
xor
xchg
pop
inc
pop
daa
push
cs
or
insl
cmpsl
fiaddl
test
les
jne
das
adc
je
or
and
rcr
cmp
adc
inc
add
mov
sbb
or
and
jg
int3
sub
add
inc
xchg
bndstx
push
insl
outsl
imul
cmp
std
inc
imul
outsl
int3
jns
gs
pusha
push
push
pop
aaa
pop
pop
adc
mov
inc
test
outsl
popa
pop
or
into
daa
cmp
jg
cmpb
mov
dec
mov
and
aaa
in
shr
push
add
pop
or
push
adc
adc
inc
pop
add
dec
loop
or
stc
xlat
pusha
sti
jne
jo
cs
or
testl
sbb
hlt
add
or
fisubs
add
sbb
sub
jne
insb
xchg
out
sub
jl
xor
cmpb
test
in
je
mov
leave
imul
testb
push
sbb
movb
fimuls
movsb
add
subb
sub
hlt
and
jle
ljmp
jns
xlat
cmp
movsb
in
in
fcompl
mov
in
xor
adc
sar
cli
iret
pusha
or
add
pushl
sbb
ljmp
ljmp
xorb
xchg
jae
push
les
adc
call
pop
push
push
mov
rcll
jnp
cmp
xor
cmc
mov
clc
pop
sub
lret
and
clc
andb
push
inc
or
or
and
xchg
pop
imul
push
cmp
xchg
dec
repnz
aad
xchg
cltd
sti
cwtl
daa
cmpsb
push
or
lock
ss
cmp
push
cld
psubw
imul
fidivrs
and
xchg
jle
push
loopne
pop
dec
jl
std
dec
add
not
add
cs
int3
pushf
pushl
push
inc
jo
or
and
pop
pop
sub
cltd
xor
jae
pop
or
in
mov
push
xchg
sub
imul
pop
movsl
bnd
rorb
or
lods
push
inc
dec
setp
add
dec
faddl
xchg
std
push
inc
mov
push
les
push
test
add
cwtl
nop
push
sbb
sbb
xchg
add
xor
mov
jge
mov
pop
les
xchg
push
mov
pop
or
and
sbb
pop
mov
mov
cmp
cmp
dec
adc
xchg
mov
inc
ret
faddp
es
inc
add
pop
inc
rcrl
aam
add
add
dec
js
inc
mov
pop
das
in
mov
xlat
jb
inc
scas
mov
pop
pop
push
and
pusha
in
ret
fisttps
xchg
out
mov
scas
and
pop
add
cmp
nop
add
scas
xor
sub
shrb
add
pushf
mov
add
arpl
repnz
push
and
sbb
mov
test
rcll
push
inc
lahf
sub
mov
dec
jl
imul
sub
jnp
and
mov
int
imul
mov
lcall
addr16
pop
add
add
dec
xchg
xor
adc
pop
out
shll
push
cmp
or
outsb
outsl
jnp
fsubrl
movl
pop
dec
inc
xchg
or
xor
aas
xor
shrb
cli
fucomi
add
mov
sbb
sbb
push
cmc
or
repnz
jns
imul
lcall
pusha
lret
mov
lds
pop
cwtl
mov
ret
scas
and
fs
addr16
push
xorl
hlt
pop
mov
mov
adc
arpl
and
mov
pop
inc
push
hlt
mov
pop
xchg
aas
push
push
mov
dec
addr16
jns
sub
fdivr
inc
in
mov
pusha
cmp
push
daa
iret
enter
sti
xor
xor
cmp
int3
sub
push
clc
repz
hlt
push
mov
lock
sub
lar
test
sub
cltd
mov
cmp
dec
xor
pop
xchg
stos
and
and
inc
xchg
and
pop
push
sbb
jae
push
in
stos
outsb
mov
pop
inc
jb
fdivp
mov
test
jo
push
aad
movsb
push
xchg
mov
into
es
inc
xchg
insb
pop
enter
inc
iret
pop
mov
out
push
js
or
lods
shll
add
xor
jns
xor
js
repnz
je
outsb
push
sub
data16
dec
add
popl
cld
movb
into
js
aas
cmp
and
jle
add
call
sbb
jbe
push
push
repnz
dec
sub
fs
push
mov
adc
or
push
mov
cmp
push
xchg
dec
fcoms
lods
push
adc
sub
fs
jb
pop
mov
les
push
jns
fdivrl
ja
hlt
rolb
test
push
nop
dec
gs
les
cmp
in
jns
xor
gs
add
in
push
push
cmp
add
iret
dec
inc
adc
adc
jbe
mov
ss
push
sub
daa
adc
popa
pop
inc
mov
int
test
das
push
mov
aaa
push
mov
sbb
dec
inc
push
pop
orb
stos
das
mov
push
dec
add
daa
mov
fcmovb
jg
nop
das
sbb
mov
inc
aam
push
inc
jecxz
mov
loopne
add
jo,pt
mov
decl
dec
xor
push
push
push
add
in
cltd
sahf
xor
or
and
adc
lahf
in
xor
and
imul
subb
push
arpl
hlt
das
adc
add
pop
jle
arpl
imul
inc
outsl
pop
js
jge
popf
add
es
jb
outsl
jne
push
jb
popa
or
sbb
es
jbe
jge
insb
bound
jbe
es
scas
cmp
scas
imulb
jo
addr16
imul
mov
mov
mov
mov
fisubs
arpl
insb
daa
push
jnp
out
push
jg
sub
insb
das
insl
sti
ficomps
loop
sbb
and
data16
xchg
pop
cmc
daa
mov
cmp
pop
je
jo
fidivs
arpl
jns
outsl
xor
pushw
das
add
cwtl
shl
mov
pop
inc
jmp
test
out
fwait
xor
or
lock
adc
sbb
fldt
pop
mov
xor
sub
pop
pop
mov
add
mov
sub
or
out
iret
les
add
test
add
xchg
js
pop
rolb
arpl
add
arpl
push
xchg
cmpsl
jns
das
dec
cli
inc
xchg
rorb
daa
out
lahf
mov
loopne
jle
je
and
adc
xchg
adc
and
nop
lock
pop
add
jge
inc
sub
sub
mov
ret
repz
mov
js
outsl
dec
iret
pushf
rorb
jl
mov
sub
inc
aam
xor
sbb
in
inc
fbld
mov
add
or
mov
sbb
imul
pop
aas
icebp
outsl
push
push
xor
adc
or
sbb
push
push
dec
fidivrl
inc
adc
stc
fcom
je
pop
mov
and
addb
xchg
aas
lock
sbb
sub
outsb
sub
push
lods
mov
adc
cmp
xor
adc
dec
lcall
das
out
movb
mov
mov
xor
les
in
fisubrs
xchg
ja
jmp
sbb
ss
mov
adc
sub
inc
mov
jbe
inc
fcoml
ja
dec
fnsave
pusha
inc
jmp
stc
mov
dec
or
add
cmp
repz
adc
sub
sbbl
sbb
add
and
add
or
push
scas
pop
daa
add
mov
xchg
xchg
pop
jns,pt
loop
add
add
fbld
xor
push
add
pop
or
or
or
or
or
or
push
movups
adc
cmp
repz
cmp
sbb
sbb
sbb
out
push
pop
and
and
and
aam
fdivrs
push
mov
mov
push
cmp
repz
and
inc
push
repz
repz
out
cmp
mov
setle
jns
adc
xor
push
fs
out
jb
mov
mov
mov
clc
sub
and
bound
xchg
or
pop
push
cltd
mov
and
adc
xchg
push
cs
and
or
dec
in
lret
or
push
mov
push
and
cs
sub
dec
sub
in
lret
cmp
movsb
jb
cmp
inc
push
cs
dec
sbb
xchg
push
dec
sbb
lret
sbb
jmp
pop
sbb
xchg
push
ja
push
popa
imul
bound
arpl
adcl
and
and
adc
nop
addr16
mov
out
inc
cmp
push
popa
add
aam
xor
mov
mov
push
in
rolb
fsubs
jo
inc
fmuls
inc
adc
xchg
inc
push
lea
lea
xchg
dec
adc
lock
dec
je
or
pop
push
imul
push
adc
push
add
call
sbb
lock
sahf
sub
add
mov
push
ja
mov
in
push
loopne
mov
faddl
cmp
int3
mov
test
orb
jmp
imul
rcl
mov
push
or
out
sub
push
jns
and
mov
out
addr16
xchg
lock
insb
adc
push
inc
in
add
and
je
and
mov
xor
pop
jecxz
mov
mov
xchg
mov
push
xchg
sub
shlb
pop
in
inc
inc
add
hlt
mov
or
out
pop
adc
movl
cmpsb
jno
push
sbb
sti
ss
sbb
insl
out
sti
ds
or
popa
jb
add
imul
jle
adc
add
cmp
addr16
inc
sub
clc
mov
pop
push
bound
insb
fs
leave
ret
jnp
popa
js
cmp
mull
xchg
add
adc
adc
xor
sub
das
mov
add
or
add
jecxz
mov
cli
out
fcmovne
aam
insb
xlat
sbb
jbe
mov
push
add
jnp
icebp
pop
sub
in
push
sbbl
lea
or
movl
pop
jle
pop
cmp
add
je
sti
sbb
in
or
das
outsb
nop
int3
fwait
or
or
jne
insb
outsb
mov
jecxz
add
leave
rcll
dec
and
data16
mov
sbb
xchg
stos
sub
andb
in
xchg
inc
cwtl
sub
sub
sti
cmp
idivl
cld
push
sub
rcrb
sahf
cmpsl
stc
pop
mov
cld
push
xor
fs
jl
sub
loopne
inc
push
call
in
push
pop
addb
rcrb
aad
dec
jnp
loopne
scas
sub
pop
push
pop
inc
push
or
pop
mov
inc
mov
dec
lcall
inc
pop
das
push
inc
inc
out
pop
or
call
loopne
insl
push
push
push
dec
inc
dec
inc
shlb
inc
xor
pop
pop
hlt
add
repnz
add
pop
test
dec
gs
push
clc
push
in
dec
push
imul
jl
sbb
jmp
fs
adc
je
nop
mov
push
inc
rorb
and
or
popa
inc
adc
cmp
sti
cmpsb
xor
sub
mov
popl
out
test
jae
cmp
pop
mov
add
and
xchg
cli
mov
js
push
sub
cmpb
sbb
xchg
inc
mov
add
or
mov
rclb
orl
fildl
cmp
cld
mov
add
cmc
pusha
mov
jp
outsb
add
add
int3
cmpsl
dec
enter
jae
cmp
lods
dec
or
das
cmp
push
xchg
nop
iret
sbb
xchg
xor
add
or
push
cmp
pop
cmp
jb
insb
popf
pop
push
lea
cmp
cmp
arpl
xor
in
fmuls
sets
push
shl
jo
cmp
or
pop
push
or
cmp
iret
cmp
push
imulb
pop
sbb
rclb
adc
pop
lea
inc
aam
out
sbb
mov
jae
lock
out
push
mov
rclb
cmp
adc
nop
adc
pop
add
push
fildl
sub
adc
pop
pop
enter
mov
add
ficompl
push
jmp
cmpsb
sbb
ds
mov
pop
push
jo
inc
sbb
pop
inc
das
add
and
push
pop
adc
imul
cmpl
mov
daa
movsl
shl
cld
push
and
mov
cmp
outsb
xor
mov
push
pop
sbb
add
inc
xor
pop
aad
sub
add
or
add
out
push
pop
and
cmp
inc
pusha
idivb
add
outsl
fwait
pop
addl
cmpsl
pop
pop
and
js
or
mov
sub
pop
dec
pop
or
mov
jo
add
pop
pop
dec
jmp
add
jb
negb
imul
and
cltd
dec
lea
pop
dec
enter
inc
into
and
or
mov
inc
into
mov
jg
inc
dec
cmp
push
inc
or
or
nop
pushf
sbb
ss
sub
js
jo
push
nop
xchg
or
or
jno
sbb
popa
loopne
mov
out
popa
push
inc
inc
cs
fdivrl
push
dec
sbb
fsincos
sbb
or
lock
mov
or
xchg
sbb
sbb
lods
sub
push
xor
add
or
stc
sbb
dec
pop
insl
popa
sbb
jo
inc
outsl
ret
sahf
mull
sub
sbb
in
sbb
int
test
push
push
add
and
call
cmp
jp
xor
sub
js
ja
and
mov
jle
push
sub
xor
push
or
dec
hlt
pop
pop
and
sbb
dec
adc
pusha
and
mov
pop
and
add
rorb
inc
xchg
and
cmp
xchg
ja
nop
and
pop
enter
sbb
xor
push
dec
jecxz
or
push
xor
or
cs
mov
pushf
xchg
or
lods
sbb
ficoms
cld
jo
jo
mov
out
and
xorl
cmp
test
inc
dec
jno
pop
mov
rcrb
clc
xlat
add
inc
and
ljmp
mov
add
ret
xor
xor
xor
fildll
jecxz
inc
inc
add
dec
dec
dec
dec
dec
dec
dec
xchg
incb
push
push
push
pop
pop
pop
icebp
shrl
stos
testb
push
jp
fists
in
xlat
add
ret
add
sbb
adc
es
lret
movsl
push
push
je
sbbl
inc
jmp
mulps
shlb
push
loopne
pop
push
testb
imul
adc
dec
pop
sahf
inc
add
sbb
mov
jle
dec
cmp
mov
and
inc
mov
push
push
imul
adc
rorb
pop
aas
daa
fsubs
mov
and
pop
movsl
inc
cld
or
clc
sub
fcompl
add
les
test
sti
or
xorb
rol
add
xchg
jge
rorl
or
sub
xor
and
fwait
jns
adc
imul
test
push
xchg
mov
mov
jo
xchg
jle
loopne
xchg
faddl
nop
xchg
out
and
jl
or
in
gs
add
inc
lcall
push
inc
inc
aas
mov
and
dec
pusha
sub
call
xchg
push
xchg
mov
clc
mov
or
xchg
aam
mov
jecxz
mov
mov
or
popf
cmc
inc
pop
movsb
and
adc
enter
sbb
cs
fcmovne
cmpsb
adc
pop
xchg
ffree
add
adc
hlt
adc
mov
roll
sub
stc
mov
rol
stos
xchg
xor
and
inc
or
mov
push
inc
cmp
xor
mov
push
mov
add
sub
add
xchg
mov
pop
sbb
daa
cmp
iret
and
or
aaa
mov
add
mov
orw
out
in
xor
fists
inc
jmp
gs
mov
cli
dec
sbb
mov
fbld
mov
pop
les
pop
jb
sbb
hlt
movl
or
add
sarb
jmp
inc
call
jne
or
movups
xor
mov
xchg
inc
addb
pop
push
mov
add
shll
add
int3
ja
loopne
adc
mov
clc
dec
add
cs
js
lock
out
and
out
mov
pushl
sbb
pushl
fdivrs
fdivs
jbe
mov
jp
or
ror
mov
add
mov
inc
mov
das
add
add
adc
add
or
push
fwait
sub
push
ljmp
pop
adc
jmp
bound
adc
xchg
fs
orb
xchg
adc
movsl
jmp
cmp
adc
sub
xlat
cmp
push
fidivrs
pop
cmp
je
in
and
add
pop
rcrl
inc
mov
in
in
fists
and
fnstsw
in
shll
outsb
icebp
jg
inc
cmp
push
aam
push
movsb
cmp
or
insl
in
sub
xchg
xchg
cmpsl
adc
cwtl
xorl
mov
sbb
and
or
sbb
add
and
push
fs
and
or
imul
movb
sbb
fcomp
mov
inc
cmp
and
push
add
jb
push
sbb
and
pop
cmp
nop
jl
sub
repnz
jl
xchg
fadds
adc
cmpb
daa
pushf
and
flds
insb
stos
or
aas
cmp
fists
mov
fwait
push
roll
inc
pushf
addb
push
sbb
movsl
xchg
aaa
push
xor
add
pushf
adc
and
adc
aaa
fnsave
in
js
jb
sbb
adc
jb
stos
sbb
shlb
jg
xchg
in
push
mov
aas
cmp
fwait
sbb
sub
testl
aaa
cmp
add
stos
aas
jbe
add
cmp
loopne
inc
aas
add
or
mov
rcl
cmp
inc
jg
pop
sbb
nop
and
or
pop
adc
popa
movsb
addl
int
jge
inc
add
cmp
add
lret
loopne
sub
inc
icebp
and
pop
inc
cmp
add
jp
sar
inc
add
out
pop
orl
in
xchg
test
nopl
inc
and
xor
shrb
mov
leave
dec
jg
cmpl
mov
cmp
mov
adc
push
fdivl
pusha
inc
push
mov
cmp
inc
dec
or
xor
sub
xor
les
mov
lea
inc
adc
jnp
add
sbb
cmp
hlt
push
xor
imul
adc
dec
dec
mov
addb
push
push
adc
or
rolb
sbb
outsb
push
jno
addb
push
test
mov
les
push
imul
adcb
inc
lret
into
aas
out
inc
cltd
test
dec
xor
loopne
cld
push
adc
and
les
mov
dec
add
dec
lods
push
push
cltd
divl
mov
cld
mov
pop
clc
fldenv
cld
scas
adc
adc
lea
ja
sti
or
sbb
or
fisubs
mov
rcrb
cmp
outsl
testb
pop
adc
push
imul
or
loop
shlb
out
adc
xchg
or
mov
fadds
sub
imul
and
test
or
pusha
or
sbb
and
imul
xor
pop
lcall
push
or
push
fbld
jmp
imul
imul
inc
and
mov
cmp
sbb
pusha
dec
sti
add
cmp
inc
sbb
xchg
cltd
pop
jo
xor
lods
addl
dec
je
dec
pop
pop
or
or
mov
cmp
outsb
arpl
push
push
pusha
add
xor
popf
add
sar
mov
inc
and
pusha
mov
in
ss
fstl
add
iret
outsl
js
jp
testb
push
mov
pop
insb
mov
and
mov
das
pop
test
or
in
cmpsl
jns
clc
jecxz
push
push
xor
sub
adc
push
and
popf
push
je
adc
test
pop
call
add
mov
stos
cmpsb
jno
je
inc
je
jmp
adc
sahf
pop
and
sti
adc
jo
divb
xchg
jb
sub
push
lret
decb
paddsb
rolb
add
adc
mov
icebp
add
mov
adcb
mov
jge
xor
jo
and
fcom
pusha
iret
inc
adc
adc
inc
push
int3
xchg
xor
lds
xor
and
mov
icebp
aaa
cmp
jge
mov
mov
mov
fstpl
mov
jbe
sbb
dec
add
mov
ret
pop
das
call
cmp
dec
ss
sbb
divb
add
or
nop
push
or
lock
data16
test
xchg
js
add
inc
ds
aam
icebp
mov
ljmp
adc
sbb
push
adc
outsl
in
scas
add
and
cmp
clc
fsubrs
loope
inc
xorb
mov
jecxz
cmpsb
mov
xor
jmp
cmpsb
pop
sbb
pop
add
push
and
add
loopne
or
inc
push
jo
movl
cs
pop
es
add
mov
adc
loopne
jecxz
adc
xor
mov
and
in
inc
push
dec
clc
addl
out
sbb
or
jg
andl
mov
jle
and
add
iret
mov
js
mov
push
and
bound
in
sbb
adcl
push
fbld
test
adc
or
das
sbb
inc
or
mov
push
dec
push
jo
sbb
jge
data16
inc
mov
mov
lock
lock
pop
dec
test
jo
mov
adc
xor
xchg
mov
push
outsl
dec
sub
pop
lock
cmpw
rcrl
lods
push
adc
adc
or
jbe
xor
adcl
add
inc
and
cmpsl
cmpsb
cs
bound
inc
fisttps
fstps
fmulp
and
mov
insl
adc
add
or
inc
cmp
fdivs
adc
xchg
sbb
mov
adc
or
and
insl
pop
add
popa
push
push
xlat
pop
adc
mov
loopne
inc
pop
int3
fisttpll
cld
cmpl
inc
iret
fidivrs
rorb
xchg
dec
push
movsl
adc
pusha
gs
pop
xchg
inc
iret
in
pop
mov
loopne
lock
jmp
enter
cmp
add
pushl
jne
cld
jp
dec
fistpll
sub
rclb
sbb
pop
inc
and
sbb
and
test
jl
aas
loop
sahf
mov
push
sbb
les
add
lea
inc
loope
and
cmpsl
dec
enter
fimuls
mov
xchg
mov
add
sub
push
sub
rcrb
out
clc
sub
xor
jmp
push
push
cwtl
roll
dec
sbb
cld
jno
rol
inc
lods
push
lds
sub
test
or
rolb
mov
cmp
clc
sub
mov
mov
dec
pop
cld
adc
jmp
xchg
fcoms
adc
push
mov
or
cmp
adc
cs
in
imul
pop
divl
inc
adc
cmp
dec
repz
fsubrs
insb
sub
lds
fnstenv
mov
pop
sbb
dec
ljmp
or
mov
add
lahf
fwait
add
pop
push
or
xchg
cmc
dec
or
test
sub
sar
inc
rolb
push
add
inc
repnz
push
sub
pop
lock
nop
push
mov
roll
pop
cmpsl
and
and
fwait
or
icebp
leave
cmp
jne
enter
and
test
lock
test
xchg
push
lock
testb
mov
push
or
das
sbb
push
lods
mov
mov
jl
pop
iret
hlt
cmp
insl
fs
iret
hlt
hlt
pop
into
mov
add
das
add
int
mov
lock
mov
stos
cmc
imul
clc
or
aad
sbb
jne
xchg
fdivs
adc
push
inc
xor
mov
aas
leave
lock
rcll
push
lock
dec
add
inc
push
jns
add
pop
fistpll
mov
push
fistl
cmp
adcb
ret
rolb
loopne
je
or
mov
rorb
jnp
or
inc
mov
mov
xchg
pop
or
add
and
and
add
lret
xchg
jne
pop
dec
daa
pop
sbb
xor
or
mov
and
loopne
fstl
dec
adc
dec
daa
jl
or
push
rclb
fwait
les
addb
orl
in
loopnew
in
test
bound
add
adc
bound
test
xlat
pusha
ficompl
daa
xchg
pushf
or
movsb
add
push
inc
xor
jl
jge
push
int3
adc
test
in
mov
stos
mov
es
push
testl
pop
pop
in
inc
popa
adc
sub
daa
cmp
hlt
mov
pusha
data16
push
dec
cmp
pop
lods
sub
or
sbb
enter
out
sbb
dec
push
and
mov
mov
sarb
adc
sbb
bound
sbb
in
call
aad
lea
jmp
add
cmp
je
clc
loope
movsb
add
lods
lods
nop
xchg
lret
clc
sub
inc
ds
and
loope
inc
enter
dec
lock
inc
jb
dec
clc
xor
sbb
stos
in
in
inc
dec
pop
adc
or
andb
add
rorb
inc
iret
xchg
pop
test
dec
call
ret
sbbb
lods
adc
movsb
ja
jb
inc
and
and
leave
inc
xor
pop
cmp
pusha
les
mul
add
ret
or
inc
push
mov
sbb
loopne
adc
xchg
aad
lods
adc
cmp
inc
mov
xor
ds
loopne
add
mov
cmpsb
add
adc
push
add
xchg
aad
in
cmp
jne
mov
dec
cmpsl
jae
cmp
jge
shlb
mov
ds
or
push
leave
lock
or
es
or
push
movsl
test
mov
pop
inc
and
ficomps
and
pushf
sbb
mov
test
pop
lcall
xchg
sahf
xchg
add
shlb
fcmovu
adc
lret
xor
gs
enter
dec
cmp
and
sub
ljmp
fisttpll
fmuls
pushf
adc
pop
cmp
and
add
sub
xchg
fmuls
add
push
orb
jl
and
xchg
pop
jl
or
inc
mov
mov
lods
movl
pop
dec
insl
loop
xchg
sub
xchg
inc
xchg
out
sub
aam
or
add
push
adc
fmull
push
loope
xchg
sub
inc
rol
cwtl
or
mov
scas
cmp
pop
daa
mov
adc
mov
add
subl
dec
cld
inc
movl
lcall
rcll
add
push
lret
jmp
shll
test
or
jmp
dec
dec
repnz
popf
push
cltd
jnp
sbb
pop
sbb
int
mov
ds
and
pop
xor
adc
adc
add
mov
dec
les
add
pusha
leave
and
dec
sbb
jl
push
hlt
mov
fsubl
xor
push
jnp
dec
or
cmp
lock
push
and
and
adc
or
pop
sbb
loopne
push
fsubr
loope
imul
push
jl
pop
incb
add
mov
jne
xor
hlt
loopne
cmc
fadds
xor
sbb
popa
lds
clc
stos
pop
adcb
sbb
ret
inc
outsb
dec
sbb
lods
daa
pop
dec
or
nop
xchg
mov
pop
jnp
fidivrs
sub
ret
dec
cmovl
or
dec
jmp
cmpsb
mov
and
fs
pop
nop
cmpsl
rorb
stc
test
or
stos
aas
cmp
inc
les
sbb
lcall
pop
cmp
or
rorb
and
push
cmp
cmpb
dec
xor
push
push
cmp
fwait
adcl
jle
repz
dec
lock
adc
cmp
lock
stos
sahf
sbb
out
adc
or
xchg
mov
in
popw
mov
lahf
out
aas
je
mov
fxch
popaw
aas
lock
frstor
ds
add
jecxz
xchg
mov
mov
or
push
cs
xchg
js
out
xor
dec
add
fwait
pop
push
sub
pop
cmp
push
fmull
pop
mov
outsb
out
shrb
push
inc
inc
subb
out
je
and
mov
outsb
and
mov
mov
lock
pop
sbb
inc
pop
add
push
lock
pop
mov
ret
jo
adcl
mov
enter
or
lea
or
or
in
xchg
lret
rolb
not
inc
fcoms
mov
adc
cmp
clc
outsl
ds
dec
pop
cmp
rolb
lret
cs
sub
andb
pop
movb
subl
push
xchg
lret
daa
es
es
rcrb
jle
incb
push
pop
pop
mov
xchg
pop
sbb
cmp
xor
dec
cwtl
aad
imul
aas
jbe
and
push
dec
and
aas
sbb
jecxz
sbb
stos
cmp
inc
xchg
pop
out
cwtl
mov
xchg
ficoml
and
and
or
and
faddl
test
into
mov
push
loopne
push
cld
mov
in
std
and
mov
jmp
lret
loopne
add
inc
or
push
daa
icebp
sbb
in
push
inc
jne
xor
ds
xor
popa
cmpw
push
or
js
ret
cmp
mov
nop
sahf
push
pop
mov
adc
fildl
les
popf
push
arpl
or
lods
sahf
adc
jo
jecxz
pop
rcr
roll
cmpsb
push
inc
stos
or
cmp
xor
dec
pop
jne
jmp
enter
pop
or
mov
sbb
insb
divl
adcb
lock
test
cmp
cmp
pop
add
pop
push
shrl
adc
mov
mov
outsl
or
ljmp
pop
out
pusha
adc
shrl
test
push
dec
adc
popf
push
cmpl
pop
xchg
push
sahf
pop
setne
jo
dec
adc
xor
push
adc
ja
adc
jge
or
mov
or
cwtl
imul
adc
pop
insb
in
xchg
ja
sub
addr16
stos
ret
orl
jne
mov
mov
sarb
or
cmpl
push
addb
ljmp
fadd
or
and
aaa
enter
pop
jno
mov
mov
lds
push
dec
scas
test
xlat
in
ja
dec
mov
push
cmp
xchg
dec
sets
jnp
insb
sub
adc
lahf
adc
mov
repz
cmp
cmp
mov
mov
fsubl
mov
xor
addl
push
sbb
in
daa
stc
insl
lcall
sub
pusha
xor
mov
mov
push
fwait
xor
je
push
pop
pop
jb
loopne
testb
test
test
lcall
xchg
jge
loopne
mov
pusha
add
ja
in
xchg
test
mov
mov
xchg
movsl
ljmp
shll
fwait
adc
xchg
inc
mov
rorb
jmp
and
scas
pop
stos
insb
enter
in
pop
dec
cwtl
adc
dec
mov
mov
and
cs
xor
xchg
mov
and
movsb
test
push
lret
out
hlt
mov
push
fmuls
mov
ret
inc
dec
adc
enter
jns
adc
push
xor
push
push
jg
lret
mov
mov
mov
xor
lea
sub
lret
outsl
adc
dec
sysenter
movsl
or
or
inc
push
cmp
xchg
int
pop
inc
mov
or
ja
jl
rol
rcpps
mov
mov
adc
loop
es
imul
inc
sub
cmp
add
aad
jl
or
cmpsb
push
push
vmovlhps
sti
orb
jb
mov
lods
pop
push
or
iret
cmp
adc
cld
mov
imul
mov
or
test
xor
ror
push
sbb
pop
fst
mov
add
pop
call
es
popa
add
add
fcomps
mov
mov
pop
xchg
ja
xor
sbb
mov
fcoml
and
jae
cmp
dec
jne
push
jl
xor
jne
scas
add
adc
inc
xor
dec
mov
sbb
popf
dec
imul
push
and
sub
add
cs
lods
in
int3
pop
push
out
mov
je
lea
lret
inc
xor
in
divb
pushl
dec
inc
add
fimull
xchg
adc
dec
out
test
gs
incl
cs
ljmp
add
and
sbb
dec
add
addr16
daa
add
adc
adc
mov
test
pop
dec
mov
adc
add
sarb
or
or
leave
pop
dec
les
xor
adc
aam
jl
mov
cmc
jp
add
mov
int3
repz
jecxz
pusha
sub
inc
ret
and
and
aaa
mov
sub
jl
lea
imul
jmp
or
mov
mov
loope
and
pop
dec
xor
ret
lea
jmp
sbb
pop
into
push
sbb
adc
dec
repz
xor
les
mov
pop
push
adc
out
xlat
imul
jne
pop
aaa
add
popa
cmp
arpl
cld
fcoml
adc
mov
int3
push
nop
and
fs
and
mov
xor
dec
int
jno
adc
in
les
lcall
inc
jmp
jmp
daa
roll
or
mov
je
push
enter
idivb
sbb
cmp
cmp
jmp
rol
lahf
push
mov
lods
fwait
cmp
in
xor
mov
jle
sub
fisttpl
pop
jp
xchg
jne
sub
inc
adc
inc
jo
inc
popa
pop
and
test
push
fisubrl
rclb
aam
popa
jo
stos
mov
addl
aam
jo
shll
adc
mov
dec
sbb
add
sub
jp
pop
stos
add
xor
aaa
mov
adc
movl
iret
push
sub
out
call
jae
lcall
shl
sub
pop
movsl
fnstenv
sbb
fdivrp
push
jmp
sub
rclb
inc
push
aam
stos
xor
mov
cmpl
mov
imul
sub
add
and
pop
add
cmp
cmp
cmp
repz
push
mov
mov
adc
fiadds
xchg
xchg
movsl
xchg
inc
and
in
xor
insb
loope
test
in
mov
xor
aas
inc
sbb
xor
mov
mov
adc
inc
sbb
add
push
mov
mov
push
pop
mov
popf
rorb
jge
or
inc
test
add
adc
daa
add
dec
fsts
pop
jne
loope
in
or
test
sub
xor
pop
jle
aaa
dec
and
dec
inc
jne
sbb
nop
sbb
add
cmp
mov
cmp
js
inc
adc
addr16
or
adc
jb
filds
pop
cmp
loop
test
xor
or
sbb
mov
sbb
xor
lea
ljmp
pop
jo
je
mov
or
inc
mov
lods
test
ret
cmp
inc
xor
jl
pop
les
push
add
adc
ret
nop
insl
mov
scas
xor
movsb
and
pop
push
inc
add
pushf
lahf
inc
xor
in
jae
pop
and
aaa
jns
xor
dec
into
or
pusha
push
mov
inc
push
xor
pop
push
push
loop
push
popa
rolb
jmp
pop
jge
lcall
lret
xor
sub
popa
push
stc
xor
push
add
pusha
adc
pop
hlt
xchg
out
xor
lock
and
and
jecxz
je
loope
or
pop
add
sbbb
push
and
pop
into
ss
xor
jl
push
sarl
sbb
add
ljmp
and
notl
scas
daa
int
mov
cld
inc
and
pop
addr16
inc
clc
jmp
add
sbb
outsl
push
inc
fs
js
xor
cs
mov
jmp
addb
pop
or
add
ja
mov
add
add
mov
add
mov
or
cmpsb
xor
lahf
or
jb
cli
dec
pop
or
outsl
mov
into
aas
pop
test
mov
add
adc
adc
xor
or
mov
jbe
dec
data16
pop
icebp
jne
mov
das
ret
or
mov
add
shrb
jecxz
adc
add
jno
faddl
iret
rcl
test
ljmp
and
arpl
jb
jno
dec
lea
mov
sbb
sarb
lcall
int
adc
inc
hlt
mov
insb
cmp
xchg
addr16
cmc
cmp
push
fdivr
xor
adc
arpl
add
sete
shll
fwait
arpl
mov
stos
mov
sbb
adc
je
or
xor
xor
pop
push
adc
adc
pop
pushf
jbe
incl
insl
and
outsl
jne
jae
ja
and
jle
popa
and
dec
bound
push
icebp
add
gs
jb
je
daa
js
add
push
pop
test
je
jge
pop
int3
mov
jg
cmp
and
push
mov
shl
sbb
sbb
lods
mov
or
fadds
cmp
gs
add
add
adc
inc
and
pop
push
pop
sbbb
mov
mov
jle
pop
hlt
dec
pop
xlat
sub
lea
testl
mov
push
in
movsb
xchg
mov
xor
add
add
iret
and
jbe
and
test
mov
inc
out
inc
loope
and
push
cli
xchg
mov
inc
fisttps
imul
add
dec
and
test
in
inc
xchg
mov
xchg
sub
push
sbb
lods
cs
jp
push
shlw
inc
mov
jo
dec
sbb
je
loopne
pop
mov
aad
adc
push
dec
pusha
pop
push
add
orb
mov
lea
jo
das
shlb
sbbl
hlt
lcall
mov
nop
loope
leave
push
jge
addr16
push
cli
or
bound
jne
push
mov
dec
push
in
pusha
lds
cmp
inc
jmp
xchg
ss
rol
and
repz
push
addr16
mov
sbbl
sahf
inc
xor
iret
fcmovb
sub
fdivs
jae
jnp
js
dec
sahf
xchg
mov
and
lcall
pop
outsl
loop
push
sub
add
daa
add
sub
xchg
mov
and
push
mov
je
or
dec
jne
push
loope
or
lahf
mov
mov
ss
ret
mov
jbe
gs
cmp
add
rol
sahf
mov
test
lock
push
cwtl
outsb
add
push
call
jmp
dec
inc
pop
pop
sub
cmpsl
xor
addb
ss
and
jge
mov
pop
xchg
loope
rol
movsb
pushf
pop
pop
mov
push
add
inc
inc
add
or
inc
cmp
mulb
lods
jo
cmpl
push
mov
cwtl
rclb
inc
adc
sti
loopne
fistl
sub
pop
cmp
js
or
cmp
pop
faddl
call
sbb
cmp
pop
mov
sarb
add
pop
lods
xor
or
lahf
movsl
inc
jno
sti
je
and
inc
push
push
adc
mov
and
mov
int3
dec
les
xor
ret
jecxz
push
xor
mov
inc
xor
out
or
clc
mov
mov
and
jl
arpl
sub
jle
mov
cmp
cmp
insb
lahf
dec
add
mov
test
mov
xchg
ret
sub
movsl
lahf
dec
add
lods
insb
adc
push
cmp
add
dec
arpl
test
pop
fistps
jp
push
add
push
dec
xor
pusha
divb
or
sbb
inc
dec
inc
dec
add
sbbb
sub
push
inc
dec
adc
rorb
pop
pop
sbb
clc
loope
adc
xor
sbb
xchg
test
je
push
fstl
cmp
mov
xchg
aas
lock
xor
adc
in
mov
cmp
leave
jl
or
test
out
je
xor
pop
dec
and
insl
pop
in
movsb
lods
aaa
add
jb
imull
push
inc
clc
push
clc
jmp
and
jbe
inc
das
jne
add
outsl
jge
stos
xor
mov
rclb
mov
mov
add
mov
into
ds
or
pop
hlt
and
movsb
lea
sub
sbb
lcall
mov
inc
or
jb
jne
fistps
insb
sbb
push
cmp
cmp
jg
fidivl
popa
rcrb
or
in
and
jg
ja
into
mov
js
out
inc
add
or
sub
mov
fcompl
inc
sbb
std
mov
jmp
sbb
cs
test
cmpb
add
in
mov
jl
adc
psrad
mov
decw
jb
mov
xchg
pop
out
mov
jb
push
jns
pop
cmp
or
jmp
and
imul
or
xchg
sbb
xchg
in
out
mov
aaa
in
or
push
iret
and
push
je
fsts
pop
in
and
and
imul
rcll
xor
xor
sub
sbb
jnp
cmp
dec
or
inc
shl
call
push
sbb
or
or
sub
xor
or
mov
jmp
leave
pop
cli
inc
js
out
sbb
es
insb
hlt
add
pop
lods
mov
push
je
sub
sbb
xor
movhlps
xchg
rcll
rorb
push
cmpsb
cmp
enter
push
ja
push
xchg
les
push
xchg
and
inc
cmp
adc
lcall
cmp
rorb
push
punpcklwd
nop
push
xlat
sbb
dec
shll
rol
mov
jne
loope
dec
arpl
cmp
and
mov
rorb
mov
sbb
rorl
loopne
adc
pop
movsl
inc
pop
xchg
ret
bound
out
nop
ss
cmp
jne
xor
dec
fsub
dec
inc
lds
rcl
shlb
or
or
outsl
xor
inc
adc
xchg
push
xchg
mov
jo
or
xor
and
cmp
pop
or
add
sbb
jl
jns
cmp
fisubrl
aad
lcall
fdiv
push
and
or
push
mov
out
ret
jl
inc
je
sub
notb
das
movsl
lea
jo
sbb
mov
insb
rorb
and
addr16
adc
and
dec
subb
jmp
cmp
call
sub
ror
aas
add
daa
sub
xchg
dec
sub
pop
adc
ja
pop
xchg
add
add
int
mov
outsb
inc
mov
fdivl
push
add
push
lods
cmp
pop
and
fsub
imul
mov
mov
pop
loop
aad
pop
sbb
inc
push
in
add
add
int
movl
inc
negl
movups
push
stos
xor
adc
scas
adcl
mov
inc
push
pop
rcl
push
repz
test
and
and
jno
sbb
test
xor
jbe
mov
adc
add
add
dec
fistps
sti
push
loopne
inc
or
sub
adc
and
add
inc
push
stos
xor
jbe
mov
nop
inc
or
xchg
inc
inc
fs
jge
pop
das
adc
data16
add
push
cld
rorb
clc
jge
or
or
loop
xorb
sbb
dec
xchg
mov
in
lock
call
xor
jo
dec
sbb
sub
jg
xor
or
shll
dec
ret
sbb
in
mov
xchg
fs
je
inc
sbb
xchg
aad
cmp
xchg
push
sbb
pop
xor
ss
scas
mov
xchg
sub
inc
sar
rcr
push
push
lea
mov
add
and
fucomi
pushf
lods
mov
orl
mov
fisubs
inc
inc
sahf
jbe
adc
push
fdivs
pop
pop
rclb
add
mov
fcomi
jne
jns
add
int
in
dec
cmp
dec
mov
mov
sbb
sbb
inc
fmuls
cmp
jne
dec
push
jb
cmp
aam
cmpsl
rclb
jne
lret
imul
call
mov
ds
xchg
divl
fisubrl
add
cmc
pop
std
pop
adc
sbb
push
push
lds
pop
mov
sub
das
pop
mov
adcl
fildll
and
push
push
push
or
mov
ret
mov
cmp
and
add
add
pop
fsubrs
pop
ljmp
lods
push
ss
xor
pop
jae
ljmp
popa
add
data16
add
sub
add
inc
add
or
je
xor
mov
nop
loope
push
out
fs
sbb
sub
mov
les
xor
adc
or
gs
cs
inc
outsl
leave
xor
mov
jle
mov
cmpb
rorb
adc
or
shr
pop
cmovs
cmp
lcall
ret
ds
adc
int3
xchg
jb
mov
and
cld
jmp
loopne
addr16
mov
pop
sahf
insb
movsb
fiadds
inc
xor
or
and
imul
arpl
push
outsb
dec
pushl
xchg
or
sbb
shl
or
push
daa
data16
aas
xor
jno
push
pop
inc
xchg
add
adc
pop
push
adc
add
rcll
gs
or
xor
dec
add
push
sbb
cmp
mov
shrl
jmp
shrl
lret
pop
xchg
movsl
dec
icebp
inc
adc
test
clc
jp
fisubrl
out
or
and
and
push
push
jp
dec
fnstcw
cmp
dec
jmp
xor
push
je
add
bound
xor
sbb
pop
sbb
mov
lods
hlt
aad
sub
jmp
test
scas
out
jl
adc
sub
push
and
loop
cmp
inc
xor
es
adc
arpl
test
movsb
or
cmp
jo
lock
and
push
sub
insl
add
out
xorl
setge
push
aaa
push
lea
hlt
sub
xor
xchg
addl
push
push
add
adc
push
sbb
xlat
dec
mov
sti
int3
loopne
scas
push
sbb
pop
inc
jle
out
add
clc
jle
jecxz
daa
lock
pop
test
mov
jl
inc
and
cmp
fstpl
insb
or
test
adc
fcompl
jne
fcmovnb
and
dec
xchg
push
push
lds
outsl
cmp
or
jge
lret
cmp
add
pop
inc
fimuls
and
dec
ror
jge
jge
or
push
sbb
mov
add
mov
in
cld
cld
dec
or
inc
cmpsl
icebp
mov
and
cmp
adc
loopne
sahf
push
dec
mov
nop
adc
xor
stc
cmp
or
or
sahf
je
or
cld
hlt
sti
push
clc
mov
hlt
sbb
cs
cmp
imul
push
loopne
call
out
sahf
insb
loopne
fdivrl
adc
iret
repz
push
aam
and
xor
sub
cld
cmp
mov
js
xor
aam
cmpl
cld
push
or
pop
cmp
add
push
push
mov
or
sbb
clc
jge
rclb
push
ret
cmc
or
sub
popa
dec
xorb
add
lods
push
or
and
or
adc
popa
insb
push
aas
insb
fldl
mov
fisttpl
ret
add
pop
xor
sbb
inc
stos
or
stos
push
push
push
aas
xor
mov
push
push
fsubrl
repz
stos
cld
add
or
je
out
addr16
jnp
pop
and
sbb
pushf
jle
cmp
add
jge
leave
or
call
test
dec
les
je
inc
sub
cmp
sbbl
push
shll
pusha
jg
lcall
push
jle
insb
dec
sbbb
lods
or
in
lods
pusha
lods
adc
mov
sbb
leave
dec
subb
js
jl
pop
mov
js
in
mov
pusha
scas
sbb
jl
test
sarl
lods
cmp
insb
push
or
loopne
inc
mov
icebp
or
dec
inc
shl
pop
sub
shll
popl
jb
test
shlb
bound
movsb
ds
sbbb
ds
rolb
jl
loopne
push
push
and
nop
movl
inc
inc
adc
cmp
mov
fsubrs
add
inc
lock
jle
roll
imul
pop
cmp
lock
nop
insb
adcl
orl
add
ret
lods
lds
xor
fidivrs
jnp
aam
mov
mov
cmp
mov
test
js
rorb
aam
into
stos
iret
repz
loopne
mov
mov
sbb
aaa
push
inc
push
movsb
sahf
in
js
mov
inc
ret
ss
sbb
adc
push
add
test
dec
add
add
loopne
ja
or
dec
bound
mov
in
fldcw
insl
bound
pusha
xchg
mov
jle
inc
jne
cmp
insl
popa
movsb
or
inc
adc
addb
insl
imul
push
and
cmp
or
mov
fs
jno
mov
mov
fisubs
test
fists
cmp
adc
insb
das
add
out
xor
or
fsubrs
fstl
adc
push
xchg
or
or
adc
cmovl
push
cmp
imul
and
out
add
xlat
add
sti
ret
xchg
pushf
or
push
lods
adc
xor
jae
insl
adc
add
lods
popa
imul
cs
pop
or
aaa
adc
pop
or
xchg
adc
or
sbb
mov
or
xor
sbb
pop
test
out
cmp
inc
xor
fldl
ret
mov
adc
push
mov
pop
xor
jne
add
adc
sub
sarl
clc
test
add
or
out
insl
dec
dec
push
or
xchg
je
leave
lea
add
in
dec
imul
out
imul
mov
xchg
pop
repnz
mov
mov
nop
cmpsl
inc
dec
scas
inc
nop
push
or
iret
xorb
xchg
fcomp
xchg
call
cmpb
push
xchg
je
sarb
outsb
popa
mov
or
inc
fwait
pop
add
add
cmp
cmp
dec
add
add
mov
push
inc
mov
add
inc
aam
iret
mov
add
das
jo
inc
aaa
sub
int3
mov
popa
fs
pusha
lods
mov
add
mov
das
add
enter
add
ret
pop
movsb
inc
or
xchg
pusha
dec
jle
push
add
pop
dec
arpl
sbb
inc
pop
pop
jno
pop
sub
lods
lock
add
insb
inc
sbb
out
nopl
or
iret
arpl
dec
les
int
loopne
mov
into
adc
add
rol
pop
fsubs
dec
and
aad
mov
push
and
pop
jbe
cmp
mov
adc
add
fldln2
out
pop
add
mov
mov
out
mov
add
sub
ja
inc
ds
push
popa
rcll
pop
inc
ret
add
xchg
add
lcall
sbb
mov
mov
xchg
or
in
adc
or
push
mul
call
jb
leave
dec
dec
and
or
or
mov
popf
sub
or
or
push
js
shll
add
arpl
in
shlb
lods
sub
push
mov
out
stos
mov
cmp
sub
and
mov
leave
jmp
icebp
jo
dec
xlat
js
gs
icebp
int
bound
sub
movzbl
push
jmp
jecxz
inc
pushf
fnstenv
adc
and
push
xor
loopne
adc
mov
or
jnp
adc
fsubrs
dec
and
adc
mov
jp
addb
lcall
xor
mov
pop
subb
add
push
or
or
and
jb
in
cmp
clc
fists
fbld
or
mov
sub
imul
fs
dec
popa
js
dec
cmp
pop
nop
or
pop
mov
fists
add
add
adc
lret
jne
cmp
mov
loop
pop
push
push
push
jo
ja
lods
pusha
and
in
jmp
out
add
popa
or
test
leave
mov
push
mov
pop
or
add
dec
sbb
inc
jo
push
std
xchg
xchg
push
push
push
cmp
test
inc
inc
sti
mov
inc
js
jmpw
nop
ljmp
push
rcrl
shlb
sahf
neg
negl
cmp
xor
mov
mov
je
adc
or
fucomi
mov
in
out
and
xchg
and
stos
sbb
jbe
or
fildl
test
pop
add
add
add
add
add
sarb
imul
dec
add
add
decl
dec
or
or
mov
mov
mov
mov
mov
mov
mov
dec
clc
call
sbb
cmp
inc
mov
fwait
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
loope
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
dec
nop
lock
push
into
dec
dec
dec
dec
int
clc
ja
leave
dec
inc
pushl
push
aam
sub
mov
faddl
push
pop
push
mov
dec
mov
stc
inc
fs
out
lods
cli
pushw
in
fs
mov
mov
push
cmp
xchg
push
mov
es
les
add
push
push
incb
js
out
imul
es
jp
loopne
sbb
hlt
cmp
xchg
push
in
loopne
fiadds
in
loop
and
jecxz
roll
inc
out
jl
jecxz
push
jo
jns
je
fsubrl
push
insb
sub
addb
mov
cmpsb
xor
out
imul
push
clc
scas
sub
fldcw
lret
add
int3
in
jo
fidivrs
cmpsl
mov
loopne
push
dec
push
jl
cmp
xchg
testl
pop
dec
or
sbb
inc
lea
js
adc
mov
adc
adc
rol
or
cmp
inc
je
sub
mov
inc
into
sbb
repnz
mov
movsb
xor
rolb
jno
dec
cmp
test
mov
cmp
add
xchg
push
test
cs
cmpsl
lods
incl
add
movsb
mov
adcl
or
testb
sub
adc
or
and
or
and
inc
adc
out
dec
dec
insl
or
add
shll
pop
xor
nop
add
cmp
inc
iret
movl
cmp
fsubrl
add
test
add
add
sub
xor
mov
push
dec
in
pop
or
jmp
ja
hlt
icebp
adc
jb
js
dec
sub
lcall
sbb
fisttpl
movsl
push
xchg
int
jmp
pop
adc
pusha
mov
add
roll
lods
adc
in
rclb
or
push
mov
push
dec
inc
ficoms
cwtl
into
adc
inc
jle
iret
movl
test
mov
pop
push
js
dec
xchg
inc
sbb
pop
pop
adc
push
and
loop
mov
dec
mov
or
mov
add
push
cwtl
iret
xor
pushf
pop
sbb
loope
push
mov
mov
and
push
sbb
push
insb
sbb
jle
lock
mov
inc
push
lods
rcr
ja
dec
cwtl
bound
mov
pop
es
je
inc
mov
nop
inc
pushf
daa
inc
add
sarb
mov
push
movsb
dec
or
adc
aam
mov
insb
ss
sbb
nop
ss
out
and
xchg
enter
push
in
push
push
jnp
ss
es
push
cmp
xor
push
inc
mov
rorb
adc
dec
ljmp
adc
push
mov
inc
enter
add
inc
subl
add
sahf
fisttps
lock
add
mov
add
jp
adc
sbb
ljmp
jmp
add
inc
test
add
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
adc
sbb
sbb
and
mov
sub
pushl
add
sub
dec
mov
mov
mov
mov
dec
mov
add
inc
inc
inc
inc
inc
incl
inc
adc
mov
es
mov
inc
mov
push
mov
stc
mov
mov
mov
mov
mov
mov
sahf
divb
aaa
push
enter
repz
rcrl
call
cmp
fcompl
cmp
cmpsl
inc
lock
ss
push
cld
movsb
out
ss
inc
je
and
je
shrl
push
or
adc
clc
adc
dec
ds
mov
mov
or
cmp
xchg
out
adcb
imul
dec
out
ds
rcrl
dec
dec
mov
mov
mov
es
and
xchg
push
movsb
sahf
out
or
adc
and
mov
jns
fs
jle
push
pushf
in
insb
dec
imul
dec
push
mov
pushf
pop
and
addb
cmpsl
fnstenv
cwtl
in
scas
sub
pop
imul
mov
mov
fsts
in
push
fcoml
push
cmp
sti
sahf
enter
arpl
push
mov
jl
jnp
sbb
out
push
inc
mov
xor
add
imul
or
adc
push
and
test
or
pop
and
lock
push
cmp
and
sahf
push
cwtl
add
adc
je
je
dec
leave
or
add
psraw
sahf
push
push
dec
nop
push
cmp
pop
pop
sub
sbb
outsb
sahf
xlat
data16
adc
lahf
cwtl
lahf
mov
in
and
insb
dec
sbbb
add
sahf
cwtl
jno
outsl
push
pop
mov
sbb
jb
xchg
fidivrs
add
or
mov
add
xor
mov
sbb
les
adc
mov
fnstsw
sub
or
in
jnp
xchg
mov
adc
nop
sete
add
add
and
and
xor
sub
mov
outsl
xor
les
mov
mov
jns
out
mov
dec
push
out
sahf
out
data16
lea
cmpsl
mov
sbb
js,pn
mov
outsb
push
add
pusha
add
ss
rcl
cmp
jle
push
inc
mov
stos
dec
sbbb
xchg
fnstcw
int
mov
or
adc
xchg
push
lods
xchg
lock
fildll
clc
xchg
es
ss
test
adc
das
push
je
test
xor
scas
lcall
aas
ss
and
mov
push
outsb
mov
push
mov
testb
shrb
aaa
movsb
dec
pop
xor
mulb
ljmp
push
and
pop
sbb
fs
or
loopne
cli
es
loopne
add
adc
loop
sub
nop
rcrb
jle
imul
loope
jns
adc
loop
xlat
dec
cmpl
adc
js
dec
ret
mov
and
inc
sbb
or
inc
or
mov
dec
jne
xor
and
adc
shrb
cmp
std
push
jl
jne
xchg
dec
dec
fs
xchg
cmp
int3
ret
pop
daa
insb
mov
mov
dec
rcrb
add
lods
xor
or
movb
rcrl
adc
lcall
scas
movsb
jno
cltd
nop
js
xor
pop
daa
pop
and
ljmp
pop
dec
inc
inc
js
shlb
pop
fisubrl
xchg
daa
leave
pop
cmp
dec
dec
push
push
inc
adcl
push
push
inc
daa
push
jo
add
mov
or
inc
insb
popa
testb
or
push
adc
dec
outsl
push
xchg
daa
or
push
jo
imul
pop
mov
bndldx
push
movl
bound
lea
jnp
das
lods
mov
cmp
mov
and
mov
sbb
jle
mov
enter
fs
cmpsb
rcrl
inc
dec
adcl
jmp
adc
dec
and
sub
fiaddl
mov
lea
xchg
mov
cmp
mov
mov
push
cmovo
gs
and
mov
icebp
mov
inc
xor
sbb
das
dec
inc
pop
add
fstps
daa
add
inc
jmp
sbbl
mov
xchg
push
mov
loop
pop
imulb
enter
fldl
les
jmp
mov
bound
nop
mov
cmpsl
push
js
push
pop
adc
js
inc
outsb
mov
or
push
addr16
lea
ja
add
ret
les
or
js
js
or
and
in
adcb
xor
rorb
or
mov
js
repnz
sbb
lock
dec
fstps
ljmp
inc
cmp
stos
add
inc
es
inc
addb
ss
lock
pop
inc
mov
or
jecxz
push
push
inc
push
pop
push
xchg
jecxz
add
pushf
push
cmp
ja
dec
add
mov
pop
adc
mov
test
xchg
fidivs
dec
jne
push
pop
movsb
xchg
cmp
cmp
rcl
cmp
es
adc
pop
xor
ds
cltd
es
push
or
imul
popf
push
movl
mov
imul
imul
cmpsb
imul
mov
or
or
jg
fimull
lcall
push
out
mov
cltd
and
mov
cwtl
imull
jbe
mov
add
stos
stos
push
jp
inc
add
bound
adc
arpl
xchg
imul
std
gs
je
and
inc
movswl
or
repnz
cltd
andb
movsb
xchg
mov
or
loopne
xor
jmp
in
sti
movsb
test
outsb
hlt
adc
add
cltd
rcrb
add
pop
sbb
cmpl
jne
mov
data16
subl
xor
dec
add
add
ret
xor
je
cmp
inc
or
out
add
push
sub
sub
pop
mov
inc
push
pop
and
and
mov
mov
jmp
or
ljmp
call
loope
xor
dec
pop
xor
add
leave
mov
push
pop
xor
cmp
sub
dec
add
sbbl
shlb
and
not
loopne
xchg
mov
inc
jo
jbe
cmp
movsb
add
xchg
cmpsl
movsb
cltd
fdivrs
test
js
fists
iret
pop
and
mov
push
inc
mov
jle
and
dec
push
pop
or
inc
sbb
out
and
aas
mov
rclb
jmp
push
jo
inc
cmp
jecxz
inc
and
jae
mov
loope
test
mov
int
sbb
add
dec
lods
pushf
mov
or
or
cmp
mov
int
test
sbb
adc
push
dec
lea
sub
bound
dec
dec
ret
sbb
idivl
pop
inc
sbb
mov
scas
enter
dec
lods
dec
ret
adc
add
mov
dec
addr16
add
mov
push
or
lock
mov
sub
xchg
adc
dec
adc
leave
in
decb
jle
or
jp
dec
lcall
out
fimuls
pop
adc
mov
ss
xor
mov
shrb
out
hlt
adc
push
xchg
out
or
notl
mov
cmp
push
inc
adc
or
mov
add
push
enter
ja
int
pusha
sarl
jb
jne
movb
lods
mov
fs
test
push
sbb
xlat
call
add
mull
fs
push
rcl
in
pop
or
jp
in
dec
mov
and
sbb
and
notl
ficoml
push
cs
inc
mov
nop
mov
cmp
adc
inc
je
sbb
push
movsl
in
sub
mov
or
arpl
sbb
lods
dec
sub
hlt
sti
inc
addb
jb
test
clc
add
test
cmp
sub
sbbb
les
fimull
enter
daa
rolb
cmpsl
jne
sbb
mov
aas
sub
xorb
fiaddl
dec
in
mov
or
in
gs
and
and
jecxz
mov
cwtl
ds
negl
push
cmp
or
push
pop
cli
and
cmpl
xlat
cmp
pop
xor
mov
scas
aaa
insl
mov
pop
js
add
jecxz
add
cs
ds
push
cmpb
lea
movsl
push
sahf
push
jno
pushf
push
add
push
bound
mov
adc
fidivrs
push
inc
insb
testl
fadds
mov
or
ret
push
sti
add
jo
xchg
fmuls
cmp
inc
dec
imul
jne
cmp
test
adc
jae
ljmp
sub
push
xor
cli
test
addl
and
insb
aas
fiaddl
pop
and
or
shlb
pop
and
mov
sbb
pop
push
add
data16
pop
in
dec
sbb
pop
mov
cwtl
cld
dec
dec
je
js
add
rorl
inc
sub
sub
push
push
stos
add
mov
push
push
sahf
and
inc
cmp
lock
es
jmp
lds
adc
dec
sub
push
mov
mov
aaa
mov
mov
xlat
ret
push
lea
push
mov
push
mov
je
fsts
xchg
cmp
or
cmc
sub
lods
or
pop
adc
push
dec
add
addl
repnz
fsts
loop
push
ja
pop
or
add
dec
xchg
mov
xorl
cmpb
mov
aaa
mov
dec
adc
rcll
add
inc
std
or
js
mov
test
addl
sti
xchg
fs
jg
mov
jne
mov
fcomp
shrb
mov
in
inc
inc
scas
dec
jge
mov
sub
add
jne
or
sbb
in
xor
mov
loopne
inc
dec
jnp
xchg
xor
mov
mov
cmp
lcall
movb
xchg
int
fnstcw
push
sbb
add
insl
mov
mov
add
hlt
int3
cmp
repnz
shrb
add
fwait
pushf
cwtl
insl
roll
inc
pop
adc
aam
es
mov
rcr
les
xor
cmp
or
sbb
js
dec
xor
inc
pop
sub
and
and
std
movsl
outsb
or
testb
jne
test
mov
push
xlat
outsb
xchg
mov
sub
jne
sahf
adc
push
jmp
popa
pop
mulb
and
jmp
pop
fwait
xchg
push
cli
fs
movswl
add
sbb
mov
xchg
test
jecxz
ljmp
push
inc
xchg
cli
out
pop
or
mov
xor
mov
daa
pop
fmul
xchg
mov
and
imul
mov
dec
add
push
inc
cld
movsl
push
repnz
subl
sub
imul
xor
xor
mov
adc
fs
xor
or
fisubl
cmp
push
cs
ljmp
out
rclb
cmp
aaa
mov
inc
imul
mov
aas
hlt
mov
lea
outsb
push
scas
mov
mov
sub
sub
addb
and
fwait
adc
lock
or
call
stc
fstpl
fwait
jmp
jl
add
pop
mov
sub
sub
in
pop
push
adc
sub
imul
mov
push
push
ret
xor
sub
adc
nop
push
dec
jmp
pop
js
popa
jnp
push
jmp
sub
mov
dec
inc
or
sub
jb
cmpsl
inc
push
sub
pop
mov
and
das
sub
sub
jg
test
dec
sbb
inc
sbb
lret
ljmp
pop
loop
test
add
daa
add
sbb
mov
fbld
xchg
jecxz
sbb
xchg
sbbb
jo
mov
in
or
push
outsl
adc
pop
pop
das
sahf
popa
pop
lods
sub
repnz
cmp
or
mov
or
add
jmp
push
jae
jbe
fadds
ret
pushf
push
call
lods
lret
push
sub
add
mov
add
pop
jno
push
pop
sbb
add
nop
mov
nop
imul
in
rorb
rolb
js
ljmp
or
mov
add
jecxz
cmp
sub
cmp
and
xchg
mov
bound
je
mov
mov
adc
or
xchg
fisttpl
cmpsl
dec
insl
pusha
xor
xor
lock
sub
jle
das
mov
add
sub
adc
decl
aad
xor
xchg
mov
out
mov
shll
mov
je
adc
cmp
xor
xchg
adc
mov
or
pop
outsb
aaa
repz
and
sbb
adc
mov
test
dec
sub
cmpsl
adc
in
clc
xchg
xchg
inc
xchg
dec
mov
je
mov
xchg
and
hlt
or
nop
push
lock
xor
add
idivb
mov
xchg
and
jmp
testl
jmp
mov
jl
inc
or
and
ss
lahf
add
sbb
add
mov
and
add
test
inc
xchg
decb
repz
clc
pop
pop
sub
inc
push
adc
mov
adc
imul
xchg
call
add
lock
cli
cmp
dec
jb
push
je
mov
movsl
outsb
jp
sbb
push
and
sbb
outsb
or
pushl
int3
xor
mov
es
mov
out
pusha
jns
fistl
clc
xorb
push
loopne
push
jecxz
outsl
insb
test
stc
or
sbb
dec
adc
mov
mov
cwtl
push
out
orl
mov
pop
call
fmull
addr16
jge
mov
lret
jp
fnstenv
enter
int3
inc
lea
inc
add
dec
adc
or
push
mov
add
scas
test
stc
or
popa
push
data16
out
sub
insl
sub
push
or
and
aam
je
mov
nop
scas
aas
cld
mov
inc
inc
insb
mov
or
dec
dec
dec
aas
sub
xchg
je
aad
add
cmp
jmp
fcompl
test
dec
inc
gs
mov
add
cmp
inc
ja
cmpsb
xlat
cmpsb
and
mov
insl
hlt
test
add
imul
adc
and
rolb
pop
ljmp
jmp
aas
push
sub
icebp
sti
rcrl
fiadds
dec
scas
sbb
fs
lea
movsl
pop
push
or
fildl
cwtl
mov
cmc
insb
or
mov
clts
rol
push
inc
imul
andb
aas
roll
push
out
pusha
mov
je
cmpl
pushf
dec
loope
xchg
cmp
insb
ret
pusha
sarb
mov
pop
pop
add
inc
stc
add
or
mov
sub
dec
push
sbbb
or
xor
adc
mov
mov
and
push
adc
or
sub
sbb
add
fstps
lea
outsl
sub
fdivrp
fwait
call
pop
jmp
cmp
je
mov
test
jbe
mov
es
push
pushf
jge
push
sbb
cmp
push
or
adc
sub
aaa
inc
jbe
jbe
and
cmp
cmp
cmp
xor
or
push
xchg
cmp
pop
pop
enter
xchg
loop
mov
filds
fiadds
or
dec
adc
dec
jbe
add
sbb
or
fs
js
sub
adc
test
loope
mov
fwait
push
lods
push
pop
inc
sahf
in
or
add
inc
mov
loope
mov
and
in
pusha
insb
arpl
and
ret
sbb
and
lods
add
sbb
in
mov
and
pusha
and
in
mov
sub
cld
lcall
push
and
ficoml
lcall
addb
jle
fmull
scas
mov
loop
data16
push
push
outsl
adc
ss
and
imul
sub
sbbb
mov
cmc
pmulhuw
outsb
adc
push
sbbl
adc
push
cmpsb
pop
push
out
cmp
pusha
inc
or
sbb
loopne
sbb
add
aad
cmp
and
sub
add
push
test
pusha
test
sub
xchg
in
mov
jne
cmp
xchg
push
lea
cmp
fistpl
xor
or
dec
ret
shll
sbb
mov
out
test
or
inc
xlat
mov
pop
cmp
js
cmp
push
mov
cmp
mov
loopne
fldcw
insb
dec
mov
pop
push
xor
sbb
iret
fdivl
sbb
in
jo
add
add
mov
rclb
inc
inc
push
add
pop
arpl
int
pop
pop
orl
shl
adc
push
pop
add
jle
stos
clc
pushf
insl
inc
insl
pusha
mov
dec
insl
rorb
push
stos
lods
ret
mov
sub
push
add
cmpsb
rorb
les
shlb
add
rcrl
sbb
pop
adc
pop
insb
mov
mov
lods
das
pushf
xor
int3
int3
das
imul
inc
insb
mov
lahf
xchg
mov
push
cmp
jae
and
dec
lea
imul
dec
rcrb
adc
das
xor
gs
sbb
out
ss
push
jle
adc
inc
lea
std
dec
add
and
mov
push
push
fcoml
icebp
adc
ret
ja
push
cmp
or
insl
xchg
enter
insb
fisttpll
add
ret
cmp
dec
mov
adc
sbb
and
jbe
jne
aad
cmp
inc
pop
adc
ficoml
inc
inc
jne
adc
inc
jne
sub
dec
jne
mov
push
add
mov
pop
mov
cmp
das
jno
sbb
outsl
push
mov
inc
lea
mov
lcall
push
inc
js
sbb
xchg
addr16
pop
inc
fldcw
movsb
xchg
xchg
insb
mov
add
mov
mov
or
push
cmp
shlb
arpl
or
xor
cmpsb
stos
fadds
fmuls
adc
neg
adc
cwtl
inc
int
dec
popa
and
loop
xor
scas
mov
xchg
sub
and
mov
call
add
or
xor
sbb
adc
or
lods
push
push
mov
shll
sti
pop
nop
or
adc
mov
pop
inc
lahf
cmp
mov
or
jmp
cmpsl
or
fld
mov
adc
jp
adc
cmp
dec
mov
pop
jl
push
pop
add
or
bound
pop
jns
cmpsl
lds
xchg
adc
push
mov
adc
add
xchg
dec
sub
idivb
ret
ljmp
xor
add
lock
jbe
and
push
dec
dec
inc
mov
loopne
movsb
and
in
xor
xchg
aad
pop
or
cltd
stc
pop
aaa
add
sbb
pop
add
sbb
shlb
cmpsb
jns
lcall
movsl
inc
xor
dec
test
push
clc
or
dec
sbbb
push
sahf
jns
out
mov
inc
mov
adc
xor
hlt
rorb
or
sbb
pusha
hlt
mov
roll
test
lock
cmpb
into
or
cmp
or
insl
inc
js
adc
jle
clc
mov
dec
dec
loop
clc
pop
inc
add
xchg
sub
mov
icebp
lods
pop
sbbl
dec
sti
movsb
and
iret
xor
and
jne
vmwrite
loopne
add
xchg
in
sbb
mov
imul
jmp
pushl
or
sub
mov
dec
jae
je
add
imul
sub
daa
or
add
mov
pop
icebp
loop
mov
shlb
out
add
sbb
sbb
lods
jo
push
sbb
je,pn
or
enter
xlat
ss
jg
lret
inc
xchg
xchg
mov
inc
test
scas
mov
addr16
leave
arpl
dec
fcoms
or
xor
inc
dec
mov
daa
add
add
pop
je
adc
lock
add
cmpl
pop
and
push
pop
or
insl
inc
and
jg
cmovs
pop
cmpl
jae
xchg
push
nop
roll
adc
xlat
adcb
push
aam
xor
outsl
cmp
aam
fs
addb
mov
gs
outsb
insl
ret
mov
ret
test
or
subl
pusha
push
sti
mull
or
mov
or
fsub
xlat
sbb
or
pop
push
add
inc
or
dec
lods
mov
cmpb
sbb
dec
mov
xchg
xor
xor
and
jo
inc
ror
sub
inc
add
fcomps
dec
icebp
xchg
mov
pop
and
sub
push
add
add
iret
adc
sbbb
scas
dec
outsb
sti
push
or
cmpl
sbb
inc
jbe
or
leave
les
lods
or
sub
pop
xor
test
cwtl
daa
xchg
push
nop
or
adc
jb
inc
inc
xchg
hlt
pop
gs
mov
inc
je
pcmpgtb
mov
xor
push
add
lock
push
adc
ret
mov
roll
in
push
sub
pop
stos
mov
add
add
push
inc
pop
mov
lock
cmp
pop
je
imul
gs
sub
enter
add
shll
and
jb
adc
cmp
cmp
or
stos
inc
mov
pop
xor
jb
sub
sbb
lcall
inc
and
and
or
xchg
push
jne
push
scas
scas
and
cmp
mov
inc
adc
jb
lds
adc
adc
add
loopne
cld
popf
sub
ret
lret
push
xor
les
push
adc
sarl
inc
movsb
lret
cmp
or
inc
sub
xor
lock
mov
sbb
jo
repnz
jmp
les
call
xchg
outsb
inc
je
xor
jb
test
jo
add
psrld
add
pop
sub
nop
pop
outsl
dec
add
ret
or
jo
jbe
filds
pop
nop
add
pop
ret
mov
dec
in
or
push
sbb
daa
or
adc
ret
enter
fwait
cmc
adc
dec
xor
sub
cld
jecxz
sbb
notb
adc
and
fldt
and
xchg
sbb
pop
cmpb
mov
adc
dec
insl
add
inc
movsl
int
fistps
cwtl
sub
pop
cmp
jne
xchg
sbb
push
or
mov
xor
or
loop
pop
jno
fisubl
dec
cld
mov
testb
je
mov
jne
andl
push
dec
cmp
jmp
sbb
jno
sub
dec
leave
push
mov
push
clc
mov
push
or
ja
xchg
xlat
inc
dec
rclb
loopne
jo
fsubr
js
cwtl
mov
ljmp
push
enter
or
fadds
rclb
cmp
cmp
jle
push
cmp
mov
mov
mov
cld
add
orb
mov
inc
idiv
cmp
mov
adc
add
mov
dec
insb
jp
mov
or
xchg
mov
scas
aam
sub
mov
push
or
sti
nop
lahf
sahf
pop
push
add
or
rorb
mov
nop
out
dec
mov
jae
mov
mov
xorb
pop
in
imul
dec
and
push
in
ss
and
lds
xor
outsl
jl
and
sbb
xchg
dec
mov
enter
and
fld
jno
test
mov
inc
push
repnz
xchg
je
mov
movb
jg
aam
leave
cmp
push
add
shrb
push
out
push
adc
in
xor
or
dec
push
or
push
or
clc
cwtl
xor
sub
fs
adc
pop
inc
andb
test
pop
sub
or
jp
js
nop
mov
mov
nop
out
add
inc
mov
mov
mov
setnp
xchg
xchg
mov
cmp
js
mov
add
and
pop
sbb
inc
pop
in
enter
add
or
push
inc
pop
pop
repz
xchg
push
fiadds
pusha
cmp
push
jl
mov
loop
add
xor
mov
push
xchg
mov
mov
jl
popl
lret
fs
jp
sbb
sbb
push
push
pop
or
push
jae
or
xchg
into
lahf
xor
loope
aaa
jne
or
ja
popa
or
in
add
stos
inc
or
popa
cmp
jno
aad
jmp
or
gs
rorl
add
sbb
push
add
jbe
loopne
or
dec
pop
mov
leave
je
mov
mov
jl
orl
mov
adc
lahf
mov
neg
adc
lods
shll
mov
push
inc
mov
push
inc
popa
and
adc
std
fsubrl
or
notb
dec
enter
add
jecxz
mov
push
dec
dec
push
jmp
addb
jo
sbb
add
dec
xor
pushf
sub
faddl
cld
arpl
out
pop
bound
pop
or
inc
jg
and
das
jmp
inc
rcl
test
xchg
and
xor
pusha
pop
push
adc
daa
sarb
dec
pop
loope
in
and
ret
syscall
cmpb
pop
aas
push
cmp
or
int
lsl
dec
xor
test
mov
adc
add
xor
pop
or
inc
insb
incb
insb
sub
ds
mov
push
pop
adc
or
push
xchg
test
xor
xor
cmp
sub
sbb
lea
popa
mov
dec
jmp
pop
add
pop
or
fidivs
inc
js
cmp
inc
push
addr16
xchg
pushf
dec
frstor
inc
shll
lcall
mov
aam
or
aaa
out
jo
adc
dec
dec
dec
pop
pop
mov
cmpb
pusha
or
mull
fcmovb
adc
decl
lock
xor
pop
test
jg
ret
add
cmpsl
test
stc
adc
filds
inc
clc
sti
sti
punpcklbw
add
push
popa
inc
mov
sbb
mov
fldenv
xchg
insb
jl
mov
sbb
mov
loopne
jbe
xchg
dec
jecxz
and
xor
adc
add
sbb
jns
das
add
lcall
xor
cmp
cmp
add
push
mov
je
pop
sub
push
xchg
clc
fsubr
sbb
das
adc
sbb
cmp
movsb
mov
iret
fsubl
test
dec
or
pushl
aaa
sbb
pop
mov
push
js
push
std
lea
aam
test
or
inc
ja
aaa
iret
or
sbb
or
mov
add
mov
pushf
xchg
call
test
xor
fistpll
add
xor
popa
cmpsl
or
jge
add
jmp
add
jl
add
push
outsl
in
loopne
xor
sbbb
cmp
pop
iret
push
faddl
inc
pop
pop
fcomps
sub
add
inc
fmuls
add
pop
push
xchg
push
jb
add
or
xchg
loop
push
out
lahf
xor
pop
push
or
mov
jae
insl
cld
pop
ret
xchg
lods
nop
adc
mov
xchg
pop
into
adc
xchg
fmull
dec
mov
loope
sbb
daa
xor
mov
test
jae
fst
cmpsl
push
inc
lret
adc
or
outsb
add
outsb
push
rorb
dec
out
sub
inc
adc
inc
loop
loope
je
or
sbb
jecxz
push
mov
xor
push
repnz
sbb
xchg
fcoml
sbbl
in
add
add
and
jo
insb
mov
inc
add
or
jle
inc
movsb
aad
inc
or
addl
push
inc
add
ss
clc
roll
lds
push
mov
xor
notb
dec
ret
push
imul
jge
lahf
pop
bound
into
jbe
psadbw
fidivrs
jnp
call
cs
les
neg
xor
enter
int3
loope
jmp
ds
xlat
sub
jge
or
xlat
hlt
add
sbb
mov
aam
or
dec
add
add
mov
push
jmp
fsubrs
rorl
sub
mov
xchg
push
add
and
push
push
test
lea
loopne
pop
test
mov
push
repnz
inc
inc
sbb
or
dec
adc
pop
or
cltd
mov
enter
push
xor
out
inc
jmp
cmc
insb
roll
fdivl
add
sub
sub
add
in
testb
outsb
mov
mov
inc
in
sub
cmp
or
xlat
push
aaa
call
sahf
mov
addl
adcl
sbb
pop
shrb
fincstp
cli
cmpl
in
orps
xchg
push
addr16
or
jge
ja
and
sbb
sarb
sub
in
push
adc
jo
sbb
lock
lea
lds
pop
rorb
cli
add
jbe
adc
mov
sub
les
adc
or
ret
std
and
adc
adc
fdivp
outsb
or
cmp
jmp
movsb
sbb
dec
dec
ficoms
fisubl
lret
loope
nop
pop
int3
adc
shlb
mov
rolb
imul
dec
pop
jmp
les
or
and
adc
test
movb
mov
pop
dec
dec
add
mov
sbb
outsl
loope
sbb
stos
xchg
aas
ret
cwtl
inc
int3
push
pop
into
in
nop
push
push
push
cs
xchg
fbld
icebp
int3
lea
repz
pop
xchg
mov
lea
push
adc
int3
push
and
ret
dec
dec
bound
inc
push
cwtl
adc
xorb
or
xor
or
sub
sbb
xor
decl
inc
andb
push
push
lret
and
xchg
adc
xchg
stc
testl
jne
pop
push
imul
jnp
dec
lods
jp
call
cld
in
pusha
and
subl
mov
xchg
mov
xchg
adc
sbb
inc
pop
inc
push
lods
in
inc
sbb
sbb
pop
adc
arpl
sbb
cmpsl
les
ja
ss
xor
int3
and
adc
and
sbb
outsl
add
dec
call
push
push
mov
sbb
xor
lcall
add
test
mov
dec
data16
xor
fcmovnbe
adc
jbe
or
insl
sbb
push
pop
cmpsb
test
nop
std
and
or
mov
hlt
push
xchg
jae
cmpsb
test
clc
dec
mov
cmovbe
mov
cltd
xor
fistpl
inc
inc
roll
sbb
out
xchg
cltd
mov
mov
ja
push
movsl
int3
out
adc
sbb
out
fiadds
mov
add
xor
rclb
push
add
cmp
push
xchg
mov
dec
dec
push
scas
or
push
je
lods
shr
lcall
rorb
xlat
ret
es
adc
dec
push
sub
leave
leave
ja
sub
or
setae
push
lock
adc
inc
sbb
in
mov
nop
or
mov
adc
addl
or
xor
mov
or
push
jmp
sub
push
push
or
mov
push
ja
jmp
lock
cmpsb
pusha
lods
sar
sub
inc
rolb
push
rorl
adc
mov
adc
lods
gs
xchg
and
test
jp
dec
aaa
push
fldcw
pop
jae
imul
adc
std
mov
or
jns
or
add
or
sbb
or
and
xchg
imul
sub
add
pop
hlt
or
lock
adc
ret
fstps
mov
out
sbb
jo
add
or
imul
ja
adc
jae
push
cmc
out
add
jns
mov
cmpsl
xor
push
mov
add
xchg
push
cmc
pop
adc
sub
mov
dec
add
stc
pop
dec
fsubl
add
mov
mov
add
leave
push
ljmp
dec
cmp
out
pop
fidivs
or
jnp
sbb
lret
and
inc
popf
mov
cwtl
out
call
push
pushf
out
dec
xorb
in
and
jmp
mov
je
lahf
sbb
add
in
inc
push
add
push
push
shrl
inc
fcmovne
push
jno
sub
pop
out
mov
gs
and
inc
mov
test
lods
xchg
dec
push
sub
lea
mov
pop
pop
sbb
pusha
js
sub
stos
mov
dec
push
add
jle
push
jmp
xorb
sbb
popa
push
incl
and
push
lea
mov
and
add
inc
hlt
ljmp
test
xor
add
stos
push
out
rclb
mov
test
in
inc
lret
repz
fcompl
mov
cmp
je
dec
dec
add
jmp
or
add
pop
pop
jl
mov
dec
loop
adc
or
or
and
adc
xor
repz
sbb
add
and
sub
or
push
sub
adc
or
xlat
xlat
mov
insb
pop
mov
loope
cmpsl
imul
or
cmp
sbbb
cmp
inc
test
out
outsl
adc
cwtl
sbb
pop
inc
xchg
in
dec
push
add
or
or
cmp
adc
jmp
adcb
pop
add
jne
sbb
arpl
sbb
popa
and
fsts
decl
imul
cltd
inc
inc
dec
jmp
add
test
nop
xchg
mov
and
pop
jb
and
inc
insl
jle
mov
cwtl
cwtl
pusha
inc
das
mov
and
push
dec
or
jmp
ret
pop
mov
push
push
xor
push
cmp
stc
mov
repz
lcall
nop
add
or
push
aam
js
leave
sub
dec
push
enter
lock
dec
cmp
jb
and
arpl
pop
add
lods
jne
lcall
test
jae
pop
fs
dec
jg
js
arpl
lods
pop
mov
or
pop
repnz
sub
pop
add
push
push
into
test
enter
adc
js
and
mov
sbb
mov
adc
inc
fwait
or
arpl
and
sbb
sbb
sbb
dec
adc
mov
ret
or
ss
jp
les
loope
jo
ja
stos
sti
dec
mov
xor
jg
jbe
or
call
jle
jecxz
mov
outsl
mov
enter
or
jo
cmp
scas
and
dec
and
or
dec
cmp
aad
setbe
loopne
bound
les
lock
xor
test
pop
rcrb
data16
xchg
loop
fidivrs
mov
cmp
cs
xor
or
rcl
pop
jp
sub
dec
in
not
adc
movsl
mull
das
mov
or
push
aaa
mov
add
or
push
lods
mov
xchg
pushf
gs
mov
add
sbb
lret
jecxz
xchg
lock
dec
or
fwait
pop
dec
fwait
xor
popa
call
repnz
cmpsb
out
ja
stc
jo
fstpt
divb
or
push
sub
jbe
orb
add
adcb
call
lret
sbb
test
mov
enter
sub
lahf
jnp
sbbb
in
cmpl
xchg
rcll
popa
cmp
mov
pop
mov
clc
mov
and
in
out
rcl
xor
and
adc
ror
add
lahf
test
jnp
rclb
insb
add
mov
lods
pop
mov
push
or
adc
pop
push
mov
adcb
ss
jae
jmp
test
mov
call
sbb
inc
inc
test
push
push
daa
sbb
mov
inc
add
mov
adc
sbb
push
xchg
and
xor
leave
and
and
ret
mov
jns
test
movb
push
cs
loopne
pop
ret
adc
outsl
test
inc
ss
cli
test
jle
pop
imul
in
inc
push
dec
stos
or
jbe
cmp
jle
adc
or
test
or
dec
xchg
je
pop
inc
inc
xchg
jno
jbe
adc
mov
inc
sbb
aad
adc
int
bound
call
inc
dec
fsubrs
inc
inc
xchg
inc
sbbb
movsb
adcb
cmpsb
inc
cmp
je
sub
popa
adc
dec
pop
stos
test
or
mov
push
dec
je
cmp
push
inc
jmp
pop
jmp
push
xorb
push
inc
jo
sbb
add
jb
out
repnz
and
and
jle
mov
nop
cmpsb
clc
stos
pop
fwait
je
arpl
and
fs
jne
mov
lea
add
loope
jp
loop
or
fwait
lret
ja
repnz
dec
lea
shll
mov
add
fwait
pop
sub
inc
adc
mov
adc
sahf
or
xchg
testb
sbb
es
mov
sbb
lret
mov
int3
test
ret
jnp
dec
and
inc
push
push
mov
pop
sbb
in
out
push
sbb
or
faddl
mov
push
sahf
test
push
add
std
sub
cmp
xchg
mov
adc
pop
cmp
xor
push
xor
out
and
mulb
fmuls
add
ret
dec
daa
xor
mov
inc
clc
loop
xchg
push
subb
rcrb
fisttps
adc
mov
sub
arpl
loopne
orl
rcr
repnz
or
add
lcall
cmpsb
cmp
push
das
inc
jle
inc
cld
lret
push
adc
xor
int
push
sub
test
fcomi
notb
add
push
dec
or
add
mov
inc
loop
push
cld
cmp
or
mov
decb
push
test
mov
test
adc
lahf
pop
sub
push
inc
in
les
adcl
daa
pop
sarb
sub
push
ret
and
out
pusha
pushf
std
loop
aaa
mov
movsb
incl
xchg
add
and
frstor
clc
fstl
dec
pop
adc
repz
cmp
push
cmp
adc
adc
lahf
aam
sbbb
test
frstor
lea
in
lds
sub
lcall
inc
adc
add
je
stos
incl
dec
and
xor
mov
dec
pusha
mov
xchg
xlat
lahf
insb
aas
cmp
and
or
pop
and
mov
movsb
push
mov
push
push
add
enter
cwtl
push
jno
and
push
jg
mov
xchg
jno
mov
iret
inc
adc
adc
or
loope
xchg
cmp
inc
cltd
xchg
push
fisttps
clc
and
dec
pop
and
clc
call
fldl
mov
sbb
cmc
ss
xchg
std
push
fiadds
dec
jmp
mov
cmp
cmpsb
mov
xorb
jbe
adc
add
mov
push
and
lock
mov
jmp
aas
test
push
add
insl
cmp
push
dec
xor
ljmp
lock
mov
or
dec
sub
sub
ficoms
sbb
sbb
shl
jl
xor
and
cmp
add
inc
sub
mov
jle
or
je
add
jmp
bnd
in
aam
pusha
rol
int3
xor
scas
inc
sub
fsubs
arpl
mov
subb
call
dec
push
adc
dec
inc
movsb
inc
pop
sub
mov
or
sub
das
jge
out
sbb
in
jp
cmp
pop
sub
fmuls
movntps
dec
push
sub
mov
add
push
mov
mov
test
outsb
mov
mov
mov
out
hlt
push
cmp
add
adc
or
ljmp
inc
inc
mov
outsl
test
lods
daa
adc
out
inc
out
push
adc
and
insl
shll
xor
push
dec
cmp
adc
jnp
into
jmp
mov
push
push
outsl
or
sahf
xor
mov
ds
std
insb
loopne
add
ret
ret
sub
movl
repnz
mov
clc
lock
adc
fcom
flds
shrb
and
xchg
je
fisubs
nop
rcrl
lret
mov
inc
push
das
je
stc
outsl
js
push
dec
jae
mov
push
hlt
cwtl
sbb
dec
push
mov
inc
dec
lock
outsb
push
inc
jne
cltd
and
rcl
cli
rorb
test
mov
mov
test
orb
orb
dec
mov
mov
xchg
push
lock
and
push
inc
mov
dec
test
and
aad
andl
stos
testb
mov
push
push
shlb
inc
mov
xor
repz
lea
lret
in
pop
sub
sbb
cmp
aam
add
mov
adc
fnsave
adc
ret
sbb
adc
cmp
mov
fcmovnu
sbb
imul
sbb
xchg
add
xchg
movsl
inc
jb
cwtl
or
and
mov
movsb
stos
fsubrl
xchg
adc
xchg
std
push
inc
imul
xchg
lds
jmp
jne
mov
adc
xchg
jp
out
ret
push
and
xor
stos
in
andb
dec
jnp
add
clc
cltd
fmuls
push
mov
xor
mov
roll
sub
dec
pop
xchg
lock
int3
js
imul
jne
enter
cmp
sbb
andl
add
xor
mov
mov
or
inc
shl
pop
dec
fbld
inc
jl
mov
test
dec
arpl
inc
sbb
inc
pop
add
cmp
add
addr16
aam
outsl
dec
ret
sbb
xor
adc
push
or
adc
out
orl
lcall
test
mov
adc
jg
nop
or
fstpt
push
sbb
pop
sub
mov
adc
xor
inc
arpl
pop
negb
jmp
or
or
dec
add
adc
dec
or
imul
iret
fsub
test
pop
adc
adc
and
outsl
jge
xor
adc
mov
sub
adc
sub
jp
mov
jns
push
or
xchg
iret
inc
sahf
xchg
inc
jg
hlt
mov
stc
lock
add
xor
ja
sbbb
loop
leave
sub
jne
ret
inc
sub
jmp
pop
jne
add
jmp
fidivl
pop
push
lock
idivl
jecxz
push
or
add
daa
xchg
jbe
add
jns
in
jmp
sub
insl
in
mov
jne
pop
inc
and
in
hlt
lods
stc
aad
arpl
push
or
out
ss
or
inc
enter
and
cmc
jno
sub
lods
mov
jecxz
imul
nop
cmp
icebp
push
out
add
jl
mov
or
or
jb
sub
loope
push
test
push
out
mov
xor
dec
push
add
mov
jae
and
hlt
dec
cmp
ja
push
or
cmp
or
sti
push
add
push
sbb
es
add
imul
loopne
push
testb
jmp
or
mov
mov
or
sub
jbe
inc
inc
xor
cmpsb
cmp
adc
xor
lods
int
adc
lds
jne
popa
push
adcb
cmp
daa
js
xchg
addl
mov
cmp
add
push
cmp
or
sub
sub
outsb
sub
push
aam
mov
pop
jmp
sub
ss
mov
or
sub
dec
jmp
adc
call
out
mov
add
rcl
test
mov
or
or
cwtl
inc
ror
insl
jecxz
orl
ret
lods
insb
push
sbb
push
add
popa
jno
idiv
xchg
push
sti
cmp
pop
mov
mov
add
decb
daa
jmp
push
nop
out
pop
arpl
sub
inc
mov
and
xor
shrl
add
out
insl
adcb
inc
lock
insl
add
fstpl
ret
xlat
ds
lret
pop
dec
add
add
sub
sub
and
xchg
je
je
pop
call
jno
addr16
pop
sbbl
test
inc
stc
js
insl
add
dec
push
mov
or
sarl
lock
jmp
jg
pop
jns
pop
sbb
pop
sbbb
pop
pop
jne
das
xchg
adcb
cltd
dec
pop
loope
popa
icebp
aad
lret
xor
int
xchg
cmp
mov
xchg
imull
push
mov
mov
adc
fs
jmp
or
pop
mov
fwait
sbb
cmp
xchg
je
cmp
add
cmp
jge
push
push
stos
nop
sbb
cmpsl
icebp
std
mov
dec
js
mov
insb
mov
xor
out
inc
mov
push
mov
xlat
loop
int
into
pop
ror
stos
popa
loope
call
scas
mov
jmp
fiaddl
or
lds
inc
add
dec
sbb
lea
lock
popa
jne
fst
lea
add
add
sub
lock
sub
fistpl
inc
pop
dec
movsl
adc
pop
jecxz
mov
rolb
mov
push
sbb
dec
nop
xchg
test
mov
repz
lods
jge
fstl
adc
orl
add
daa
xor
xchg
and
and
cli
adc
xchg
pop
xchg
fimull
inc
sbb
mov
pop
in
mov
jbe
aaa
out
sbb
nop
xchg
sbb
imul
lahf
adc
xchg
push
mov
pop
sbb
loopne
inc
cmpsb
pop
pusha
push
out
aas
adc
push
adc
and
movsl
jne
ret
push
mov
jne
mov
cwtl
and
lock
shlb
aam
stos
enter
iret
in
adc
push
ss
in
pop
test
sbb
xor
xor
inc
andb
lret
rclb
imul
push
dec
sub
ja
mov
ss
shlb
ds
in
test
adcb
popf
adc
xchg
jo
mov
pop
sahf
cld
xor
sbb
pop
mov
sahf
adc
imul
das
inc
clc
rcrl
adc
repnz
mov
jge
jmp
je
subl
add
add
xchg
jo
int
or
aam
into
je
call
mov
std
fisubs
or
inc
insl
xor
sub
push
data16
into
xor
and
and
push
adc
mov
or
scas
or
cmp
cmp
aad
lea
add
rcrb
enter
popa
cmp
xor
jne
test
add
and
aaa
pop
dec
mov
or
in
add
aam
add
mov
push
and
jge
or
sub
mov
pop
cmp
lods
sbb
test
jmp
adc
or
sbbb
xchg
adcb
adcb
into
xor
in
in
jbe
decb
sub
out
add
jmp
das
or
mov
cmp
repnz
add
xlat
movsl
push
jmp
repz
mov
stos
popa
inc
insl
sub
notb
sarb
idivl
movsl
inc
jmp
mov
add
adc
pop
fidivrs
mov
xchg
notb
push
or
rol
inc
inc
or
mov
and
jmp
pop
jne
sbb
int
call
pusha
inc
mov
push
push
push
dec
pop
sarb
mov
xchg
or
jbe
xchg
adc
movzwl
xorl
jne
xchg
rorb
add
mov
popl
xchg
flds
orl
pop
and
iret
xorb
inc
adc
mov
cmp
rsqrtps
inc
sub
aas
or
pushf
mov
hlt
add
inc
and
movl
fnsave
adc
add
inc
cld
add
dec
sub
push
or
push
add
xchg
cmp
or
dec
imul
mov
dec
sbb
push
xchg
movsl
cmpb
test
push
subb
mov
sbb
sbb
cltd
inc
std
and
les
pop
push
rolb
sub
sbb
pop
and
inc
call
jl
out
push
xor
jp
call
jae
test
inc
dec
arpl
testb
mov
mov
or
mov
incl
lcall
sub
jg
dec
outsb
lea
cmpsl
inc
pushf
mov
push
pop
jo
mov
test
out
inc
or
xchg
push
inc
je
cld
fidivrs
mov
aas
add
cmpsb
jne
pop
cwtl
push
jo
call
or
adc
inc
pusha
nop
out
add
inc
ret
cmpl
hlt
sub
nopl
repz
mov
mov
inc
dec
fs
dec
loopne
jp
push
and
xor
jecxz
xorb
lcall
sidtl
leave
movsb
sbb
jbe
inc
inc
fwait
addr16
repz
or
or
adc
pusha
dec
cmp
aam
xor
push
sbb
jl
cli
xchg
or
cwtl
stos
mov
jo
add
push
pop
or
add
pop
enter
dec
mov
dec
sbb
ja
cli
insl
mov
lea
jnp
mov
icebp
or
cmp
out
add
fimull
add
and
pop
call
add
icebp
ret
xchg
add
mov
push
sub
out
sbb
add
jg
mov
push
nop
or
les
add
xchg
rcrb
lret
rorb
aaa
or
es
push
scas
adcb
xchg
add
cwtl
xor
in
sbb
inc
add
mov
test
popa
push
sbb
in
cmp
rcll
ja
and
enter
adc
adc
cmc
jbe
jle
ret
and
mov
faddp
pop
lock
mov
sbb
pop
mov
repnz
xchg
add
ret
fs
gs
leave
and
or
inc
jo
lods
inc
outsl
mov
or
in
rorb
push
sub
out
insl
fcomps
sbb
or
fdivrl
ret
sbb
inc
xorb
cld
mov
repz
sbb
jmp
imul
aas
inc
ret
and
mov
and
mov
mov
inc
pop
test
inc
ret
rclb
mov
sbb
out
add
add
add
in
xlat
push
push
div
cmp
mov
je
pop
fadds
mov
imul
xchg
xor
and
jp
ret
mov
aaa
cmp
push
test
pop
jbe
lret
les
adc
fwait
cmp
call
testb
xor
stos
push
add
gs
push
mov
pop
inc
and
sbb
mov
das
shll
rolb
arpl
push
and
jle
pusha
xchg
lock
push
test
repz
out
mov
das
lcall
jp
sbb
add
mov
pop
in
pusha
inc
inc
ss
sbb
adc
test
fucomi
sbb
or
imul
inc
xlat
pop
je
dec
sbb
and
xchg
mov
xchg
mov
jne
pop
push
imul
movsl
adcl
xorl
pop
sbb
adc
add
arpl
mov
leave
movsb
repnz
je
nop
sbb
and
and
xchg
sbb
xor
lea
jo
test
jns
jl
dec
mov
mov
shlb
pop
jo
rol
adc
in
jne
lock
mov
sub
es
je
cmpb
pop
js
mov
test
cmp
inc
inc
fstpl
jmp
in
pop
xchg
dec
lcall
mov
enter
and
add
adc
adc
add
inc
and
mov
scas
mov
nop
and
or
outsl
movsb
sbb
or
cmp
popf
pop
cld
dec
mov
rolb
cmpsl
mov
inc
test
cmp
mov
sbb
out
movsb
test
push
inc
popf
sub
andl
je
dec
pop
inc
in
pushl
add
data16
in
arpl
adc
or
shr
push
dec
xor
push
in
ljmp
repz
je
jg
mov
clc
mov
push
sbb
inc
xchg
out
leave
call
xchg
push
lods
pop
or
jg
cltd
jo
scas
repz
nop
pop
cltd
add
shrb
xchg
rclb
adc
dec
jb
cmovae
jl
sub
mov
dec
push
cltd
test
mov
adc
mov
push
inc
aaa
or
push
mov
jne
xor
sub
in
daa
rcrl
int3
loop
pop
push
pushf
mov
fdivr
cmc
pop
pusha
daa
cmp
mov
repnz
add
mov
jne
sub
lea
sti
cmpsl
pusha
add
push
orb
adc
jecxz
repz
bound
mov
cltd
xlat
sbb
fimuls
sub
sbb
movsb
xor
xchg
sub
cmp
mov
pop
mov
dec
or
in
inc
xorb
lea
xchg
sbb
mov
subb
repnz
fcompl
add
adc
cmp
testl
adc
mov
and
xchg
hlt
and
das
dec
mov
sub
or
inc
jb
das
xchg
inc
xchg
add
or
jge
or
jl
jae
mov
adc
xor
xchg
jns
mov
je
and
adc
or
lret
mov
sbb
mov
aam
les
push
push
mov
repnz
jne
imul
rcrb
cmp
add
xor
call
pop
jg
push
pop
movsb
xor
adc
sub
cmp
jno
sbb
sub
cmp
add
mov
jl
push
jg
test
mov
inc
fldl
dec
stos
xlat
add
pop
pusha
sub
aam
into
inc
ljmp
lea
dec
adc
inc
sti
repz
sbb
push
hlt
ret
arpl
fs
subb
shlb
cmp
jp
or
add
xor
loopne
fdivrl
cs
inc
add
pop
sub
jne
add
add
pop
lcall
push
xor
cmpsb
jnp
and
xchg
add
int3
inc
movsl
hlt
pusha
inc
ja
rorl
push
movb
in
pop
cltd
shr
mov
push
mov
push
insl
adc
int3
inc
push
adc
pushf
or
jnp
jnp
mov
inc
int3
leave
lods
stos
cmp
xor
lret
cmp
ret
test
and
add
or
test
push
and
aaa
filds
inc
lea
push
inc
mov
or
or
adc
xor
push
push
test
loope
fwait
pushf
and
loopne
mov
or
add
sbb
fwait
jge
adc
xchg
add
and
sub
xor
jmp
push
and
movsb
in
psubq
orb
outsl
mov
adc
sbb
xchg
mov
adc
push
jl
cmpb
movl
mov
fdivrs
xchg
and
adc
cmp
mov
sbb
dec
add
xlat
int3
popa
pop
mov
sbb
mov
add
sub
or
mov
js
mov
lods
jnp
cwtl
aaa
and
fnstenv
ficomps
inc
mov
sbb
fs
test
and
mov
or
adc
adcl
cmpsb
imul
cmp
and
call
push
xor
bound
sub
enter
jae
imul
data16
cmc
addb
add
mov
sub
es
das
mov
jp
decl
jne
sti
push
test
xlat
cltd
adc
clc
fadd
decl
call
movl
inc
adc
jle
and
add
xchg
loop
and
outsb
imul
push
aaa
insl
adc
jge
add
sub
cmp
sbb
jb
dec
push
adcl
or
test
les
mov
pop
pop
add
add
xor
mov
xor
mov
inc
test
push
or
or
or
and
push
ret
and
xor
mov
mov
adc
mov
add
out
mov
and
imul
popa
nop
jo
aaa
add
sbb
dec
and
int3
cmpl
sbbl
ljmp
xor
sub
je
add
insl
ffreep
push
stos
lret
push
push
push
push
add
adc
arpl
push
push
or
dec
je
push
inc
cmp
inc
out
das
dec
add
or
lock
jp
xchg
cmc
arpl
pop
pop
imul
ret
sbb
add
pop
adc
lea
int3
fsts
cmp
stc
dec
es
in
sbb
pop
cmc
cwtl
and
adc
xchg
js
pop
add
lods
push
sbb
ret
or
adc
pusha
test
fcmovu
cmp
ds
pop
jle
inc
pop
scas
jb
xlat
call
sub
int
dec
fsub
sbb
xlat
mov
inc
cmp
add
pop
pop
inc
mov
push
and
test
jb
xor
loopne
fwait
std
dec
jb
addb
sbb
pop
fisttpll
cmp
and
sbb
cmp
mov
sbb
or
pop
mov
and
cmova
enter
inc
inc
xor
clc
pushf
or
dec
or
xchg
pop
aas
cmp
dec
sub
fildl
fdivs
inc
cmp
popa
pop
push
dec
andb
fstps
inc
ficompl
ja
push
push
push
sub
js
xlat
mov
lahf
inc
lsl
hlt
add
inc
rorl
adc
in
stos
dec
sub
pop
adc
lret
data16
push
xlat
fdivrs
inc
roll
aaa
xchg
dec
and
mov
inc
sbb
mov
inc
push
xchg
xchg
push
xchg
vmwrite
add
mov
cld
lds
test
adcb
mov
jbe
addb
mov
or
push
xlat
cld
pusha
add
push
dec
gs
arpl
pop
xor
or
aad
cld
aam
add
xchg
add
or
mov
pinsrw
fistps
push
jno
je
mov
aam
or
or
mov
push
aam
testb
sub
sub
inc
subl
or
incb
insb
jmp
push
push
or
mov
jmp
xor
shlb
push
cmpsl
mov
or
in
lock
enter
sbb
push
les
cmpb
pop
gs
mov
cld
and
xor
xor
pop
dec
leave
sub
lldt
mov
daa
dec
jl
and
xlat
movsl
xor
push
pusha
xor
outsb
sub
test
xchg
jp
ret
inc
add
daa
xor
add
rcll
mov
daa
popf
leave
sbb
push
pop
hlt
fcom
scas
addl
jnp
xor
mov
rclb
int3
xchg
cmp
jno
test
add
inc
pop
or
mov
cmp
mov
mov
es
out
leave
add
adc
in
clc
cmc
adcl
imul
fildll
movsb
cmp
dec
popa
and
mov
xchg
mov
jo
pop
es
lods
sbb
sbb
mov
daa
leave
push
mov
pop
pop
or
enter
movsb
loopne
shll
push
mov
rol
pop
arpl
inc
mov
in
mov
in
or
jne
pop
xchg
sub
xor
sbb
dec
push
push
add
and
jo
push
es
add
daa
pusha
adc
test
inc
inc
nop
inc
xchg
add
insb
test
pop
mov
je
aad
inc
jecxz
push
js
inc
loopne
test
xchg
scas
or
negl
mov
aas
cwtl
cmp
inc
push
add
and
inc
xor
sbb
xchg
fs
sti
idivb
pusha
cmp
mov
bound
lods
inc
or
outsb
xor
adcl
mov
lahf
push
or
pusha
fwait
cmpsl
addb
bound
pop
sarb
pusha
inc
adcb
inc
push
shlb
xchg
stos
call
sub
xchg
mov
and
add
jmp
adc
sub
enter
mov
inc
fsubr
push
out
pushf
ret
sbb
out
clc
push
sbb
jbe
and
shlb
xchg
inc
adc
in
dec
cli
call
cmp
sar
pushf
cli
push
inc
adc
push
adc
and
pop
cmp
pop
add
sbb
outsl
sbb
movsl
rorb
sub
and
mov
push
xlat
ja
psubsw
add
push
xor
mov
pop
ret
call
jle
shrb
rolb
js
data16
test
ds
pop
cmpsl
mov
jp
add
jne
add
and
lcall
jl
sub
or
push
pop
je
int
sbb
cwtl
jle
add
sbb
sbb
xlat
and
xchg
add
pusha
push
cmp
cwtl
cmp
imul
sub
mov
pusha
push
inc
sub
mov
xchg
pop
out
add
add
inc
sbb
clc
clc
cltd
cmp
scas
inc
xor
mov
mov
pop
pop
jecxz
lea
or
jge
sbb
inc
xchg
mov
fmull
into
sub
mov
lods
jbe
out
dec
imul
das
xchg
pop
js
cmpb
mov
push
push
adc
xchg
jne
ss
fcoms
and
push
xchg
xchg
push
lcall
into
cmp
sbb
cmpsl
xor
insb
push
mov
popf
sbb
push
or
adcw
roll
and
inc
inc
add
and
cmpsb
sbb
lock
sub
inc
scas
ds
mov
mov
ds
stc
movsb
es
hlt
lock
cli
adcb
add
daa
push
dec
cld
out
push
or
in
psubsb
movsl
movsl
fisttpll
inc
lcall
iret
lea
in
ljmp
push
in
imul
mov
es
xchg
mov
test
push
push
push
cmp
sbb
ss
mov
out
mov
pop
ds
push
pop
iret
pop
and
add
and
in
adc
cmp
sub
pop
adc
sbb
scas
inc
ret
icebp
mov
pop
add
mov
nop
notb
shrb
mov
or
push
mov
sahf
jge
call
icebp
addr16
inc
or
or
push
inc
or
xchg
add
and
mov
add
jb
mov
sub
sub
pop
fbstp
sbb
sbb
pop
shll
xlat
out
xchg
lret
pop
xchg
adc
xor
ficompl
mov
push
adc
pop
inc
das
aam
xchg
je
shr
push
js
inc
sub
jne
mov
ret
add
push
ja
daa
mov
sbb
jbe
inc
hlt
adc
ja
shrl
nop
lods
xlat
jo
cmp
add
push
stos
add
fbld
or
xor
mov
orl
int
adc
cmp
sbb
int3
movsb
xor
aaa
ja
inc
push
dec
sub
add
mov
sub
or
loopne
lahf
xor
jno
sub
push
leave
movl
ja
add
imul
leave
xor
fwait
in
sti
bound
mov
push
cmp
out
dec
loopne
rorb
add
pushf
leave
rolb
xor
loopne
or
pop
std
push
inc
clc
cmpl
icebp
sub
sub
rcll
xor
outsb
inc
in
inc
inc
or
dec
dec
push
adc
mov
out
loopne
adc
dec
mov
xchg
jp
je
dec
jg
sub
push
sbb
mov
pusha
cmpsb
jl
inc
add
sbb
cmpsl
mov
or
shlb
iret
clc
inc
sub
pop
xor
test
cmc
push
mov
jge
or
loope
push
push
push
add
pop
dec
cmpsl
and
insb
int3
jo
ret
or
and
and
into
nopl
ss
lahf
sub
mov
or
sbb
xchg
dec
sbb
mov
add
xchg
add
xchg
fwait
and
arpl
lcall
xorps
sbb
in
sbb
push
in
nop
xor
add
push
and
add
mov
fnstcw
shrl
sahf
jae
or
adc
and
sub
xchg
adc
jns
mov
popa
mov
loopne
aam
mov
daa
ds
mov
mov
outsl
cmp
pop
cmpl
je
je
mov
adc
push
push
add
ret
and
dec
cld
aam
add
imul
dec
add
cltd
add
and
scas
punpcklbw
adc
and
push
add
shr
and
sub
sbb
jecxz
cmp
js
cmp
xor
andl
push
pop
pop
shrl
js
aaa
pusha
sub
or
mov
add
sahf
xchg
add
lcall
popa
push
pop
xchg
xor
cwtl
rclb
stc
jl
popf
ret
lock
dec
inc
cmp
and
sbb
cmp
mov
inc
dec
cld
and
pop
test
pop
arpl
sbb
cmp
add
jle
push
or
int
inc
xchg
add
mov
movsl
out
mov
jge
jmp
clc
out
test
add
js
pop
or
pop
mov
push
orl
xchg
and
add
aas
rorb
inc
or
lret
mov
inc
les
pop
jo
mov
in
xchg
addb
cmp
ret
mov
cmp
es
movsb
inc
dec
inc
or
cmp
or
and
cmp
cmp
mov
pop
push
nop
pop
push
nop
sar
in
pandn
pop
sahf
mov
and
pop
sub
push
or
ror
or
dec
scas
ror
sub
inc
push
and
push
out
push
jl
adc
dec
push
push
xchg
adcb
fsubrl
sbb
stos
test
sbb
inc
lret
loope
xor
aas
ret
test
out
adc
mov
and
sbb
arpl
loopne
sbb
lcall
or
js
mov
dec
add
les
pop
jb
push
jmp
pop
pop
call
scas
loope
imull
push
xor
test
mov
loope
mov
je
dec
and
dec
xchg
pop
pop
fisttpll
repnz
jmp
rorb
aaa
fldl
xor
imul
rolb
subb
cmp
rclb
push
cmp
and
aaa
dec
xchg
mov
or
xchg
xchg
sub
jb
jg
or
or
mov
add
dec
jmp
bound
inc
push
arpl
lock
jne
mov
xchg
or
xchg
flds
xchg
adc
imul
fs
dec
add
jp
add
xor
or
dec
pop
xlat
cs
push
or
test
adc
shll
lcall
add
dec
nop
dec
add
push
daa
xchg
clc
mov
repz
or
pop
and
imul
inc
add
add
push
dec
dec
add
add
and
xor
call
cmp
mov
add
jo
into
sub
push
push
pop
sbb
jge
xor
fistl
jb
ljmp
jmp
sub
das
sub
add
insl
in
dec
cmp
sbb
xor
inc
roll
test
add
pushf
jp
xchg
cltd
mov
jle
dec
push
jae
movsl
push
sbb
jmp
add
ret
push
iret
adc
mov
add
mov
push
mov
bound
xchg
aad
fstps
idivl
mov
loope
and
mov
push
and
dec
adc
mov
addr16
mov
sbb
js
jns
or
test
inc
dec
xlat
jo
sub
sbb
adc
jnp
push
push
add
loope
jmp
aas
adc
mov
xor
inc
and
lock
jne
sub
les
inc
push
mov
loop
lret
push
pop
ja
adc
lret
mov
and
and
dec
and
les
jae
aam
lcall
push
ds
sti
xor
je
push
adc
push
push
incb
adcb
ljmp
int
sbb
cli
cwtl
dec
sbb
cmc
adc
cmp
xchg
cmp
pop
xor
out
add
jo
divl
or
mov
cmp
imul
fs
insb
int3
dec
or
inc
dec
insl
pop
or
outsb
cvtps2pi
push
or
jmp
jmp
jge
lret
jne
inc
ret
idivb
loopne
pop
inc
add
push
popa
insl
sub
aaa
push
mov
std
shrb
add
lock
xchg
int3
sbb
bound
loope
jnp
movsb
rorb
add
jb
mov
loopne
cmp
push
dec
aas
sub
mov
mov
and
sbb
xlat
pusha
leave
push
inc
cmp
adc
nop
mov
fwait
jmp
mov
cmp
test
or
sbb
mov
dec
enter
in
mov
fucomi
adc
jle
and
pop
aaa
xchg
sub
ret
movsb
inc
pop
inc
or
pop
shrb
pop
nop
ret
jo
cmpb
mov
not
sbb
test
adc
inc
mov
sarb
jp
adcb
xor
ss
lds
push
jno
lods
jmp
enter
push
pop
insl
loopne
fdivr
cmp
jp
pop
xchg
scas
push
addr16
int3
add
xor
xchg
dec
ret
ret
jl
daa
sbb
xor
nop
daa
adc
cs
inc
mov
push
ljmp
xor
inc
imul
push
pop
inc
call
or
sti
mov
cmp
cmp
daa
sub
loopne
rolb
adc
or
sub
cmp
push
arpl
dec
int3
adc
mov
rcrl
sbb
cltd
scas
inc
sub
xor
xchg
add
cmp
jne
movsb
scas
addl
mov
jmp
addb
jne,pn
rorb
insl
xchg
mov
sbb
sub
mov
test
mov
adc
bsr
pop
sbb
xlat
shlb
shlb
add
lahf
xchg
ret
neg
push
pushf
or
mov
cwtl
or
lret
ss
sub
jp
mov
aaa
mov
inc
xorl
add
test
xlat
xchg
imul
mov
pop
inc
lahf
push
jge
sbb
testb
push
cmp
adc
mov
lcall
aaa
add
cmp
jle
aas
jb
insb
int
mov
ss
or
and
xchg
or
and
xor
push
adc
push
lea
push
push
addr16
xchg
test
jecxz
xor
push
mov
push
inc
popa
adc
cmpsl
xchg
cmp
sbb
mov
notl
nop
jns
movb
stos
daa
ss
pop
sbb
xchg
inc
or
shrb
leave
les
push
mov
and
stos
arpl
add
xor
cmp
mov
cwtl
inc
inc
xor
aad
xlat
addb
or
add
or
add
outsl
addl
fwait
dec
mov
and
xor
scas
imul
push
cmp
movsb
push
setne
sub
fdiv
ds
stc
inc
push
pop
xchg
fldt
mov
sub
or
shlb
mov
adcl
add
nop
xor
loopne
add
hlt
mov
and
loop
pop
push
or
and
fimull
cmpl
mov
pop
adc
add
ljmp
in
mov
and
xchg
xchg
and
sub
mov
push
cmp
xchg
fdivs
cltd
mov
sarl
xor
pop
xchg
lea
mov
bnd
xchg
push
ror
ja
test
sbb
hlt
in
cwtl
jb
xchg
cwtl
jbe
mov
clc
mov
and
dec
xchg
addr16
cltd
add
jne
les
sub
sub
and
xor
mov
fmull
out
dec
adc
dec
outsl
jo
push
adcb
ds
addr16
or
mov
adc
push
mov
ror
pop
test
jge
les
add
inc
dec
add
inc
popa
hlt
inc
lcall
movsl
mov
jl
pop
or
int3
push
aam
push
nop
add
insl
ret
dec
imul
add
sub
push
in
loope
sbb
loop
or
rcrb
loop
mov
xchg
or
mov
push
fld
faddp
push
lds
add
pop
je
pop
fs
int3
ret
rorb
adc
out
adc
fidivs
xchg
and
ficompl
xor
js
decl
nop
push
ja
andl
sbb
adc
js
js
inc
adc
stc
add
add
int3
add
pop
mov
cmpl
mov
or
mov
xchg
push
add
xchg
or
mov
xor
pop
add
das
aad
ja
dec
sbb
mov
pusha
insl
adc
push
jp
pusha
bound
insl
inc
mov
sub
mov
mov
dec
fisubrs
add
repz
bound
hlt
mov
in
or
adc
clc
clc
xchg
out
shl
or
in
or
xor
or
das
loope
test
ja
sub
rorb
fmul
stos
fmuls
sbb
jns
les
inc
imul
in
jne
add
mov
movsb
cmp
xchg
es
jp
jae
lock
add
inc
int3
inc
test
push
push
rcr
inc
sarb
jmp
movb
add
ja
sbb
inc
or
mov
inc
sbb
outsl
lcall
add
mov
dec
add
sub
mov
fstpt
add
or
or
cmp
xor
loopne
mov
xchg
bound
sbb
test
inc
mov
push
mov
daa
or
mov
adc
pop
jmp
pop
cmp
add
rclb
fdivrl
adc
add
push
jo
inc
cs
jle
int
out
out
push
and
jle
adc
xchg
sbb
in
or
mov
clc
push
test
mov
dec
movsl
clc
fdivs
test
or
add
pop
xchg
loope
jmp
lcall
cwtl
mov
push
fwait
mov
cmp
and
fmull
or
pop
mov
sbb
xchg
cmp
mov
sbb
dec
cmp
dec
les
sbb
hlt
test
repz
int3
add
add
lods
lret
or
notb
or
add
mov
out
mov
sub
loopne
test
jle
mov
dec
rcrl
mov
rclb
xchg
test
jge
test
hlt
push
fs
das
jge
jmp
sbb
xor
inc
dec
add
add
dec
mov
push
daa
hlt
sbb
jg
mov
sarl
in
test
add
test
push
shl
mov
push
xchg
dec
loop
loopne
insl
pop
dec
lods
outsl
clc
add
jae
jne
sub
out
mov
jo
sub
jge
sub
mov
mov
sub
add
loopne
jne
sbb
xchg
mov
and
push
mov
ret
cwtl
sahf
pop
std
clc
in
mov
inc
xchg
mov
add
or
sub
sub
push
cmpsb
add
and
loope
push
and
imul
call
nop
dec
movsl
shl
add
push
stos
inc
dec
pop
jo
adc
dec
mov
inc
call
stc
push
adc
xchg
orb
les
adc
and
dec
rolb
dec
sbb
and
add
mov
mulb
mov
push
adc
jb
jae
pop
add
inc
or
or
orb
stc
adc
dec
test
popf
push
pushf
lret
xchg
add
mov
push
inc
push
scas
imul
aam
sub
or
inc
sub
roll
incl
jns
lea
lea
mov
inc
push
insl
sbb
sbb
cmp
aam
sbbb
mov
mov
adc
test
add
and
adc
imul
nop
clc
xor
jo
add
icebp
sub
mov
shll
adc
sbb
xchg
arpl
jbe
dec
adc
xor
mov
adc
or
shlb
fnstenv
leave
pop
test
test
enter
pop
or
andl
loope
jno
leave
xor
or
movsb
les
clc
add
and
inc
pop
and
outsl
inc
test
xchg
cltd
adc
es
add
rolb
xchg
enter
popa
pop
jne
and
jno
pusha
icebp
pop
push
daa
inc
ret
jnp
fwait
mov
insb
mov
ss
es
cmovae
inc
jmp
add
jmp
add
sbb
in
popa
icebp
xchg
pushw
adc
adc
push
dec
sub
sbb
or
les
hlt
es
lods
mov
dec
inc
pusha
ret
jno
testl
inc
or
ret
in
adc
aam
jae
pop
add
push
dec
pop
pop
daa
and
sub
je
mov
leave
enter
adc
out
or
dec
fldl
pop
or
mov
xor
or
shrl
mov
fidivrl
cwtl
sub
lea
sub
mov
repz
sub
sti
or
mov
sbb
shlb
sbb
push
push
test
testl
les
xchg
dec
xor
dec
push
push
out
or
xchg
les
pop
sarb
movsl
sbb
test
in
cmp
or
pop
and
xor
lods
out
xor
aaa
cmp
add
lahf
xor
dec
jg
mov
add
jmp
lods
jns
xor
hlt
lcall
inc
jmp
fisttps
outsl
popa
dec
or
push
sub
psrlq
inc
push
sahf
call
cmc
xor
or
adc
or
cmpsl
in
sub
mov
push
stos
test
sbb
push
repnz
or
add
inc
orb
test
push
or
pusha
scas
clc
aas
mov
aas
test
adcb
inc
sub
mov
inc
das
insb
jl
push
sarb
and
xlat
fs
or
test
lret
ret
addr16
addb
adc
adc
pusha
out
jmp
lock
jl
imul
add
adc
mov
sub
leave
xchg
in
sahf
add
lcall
xchg
adc
sub
dec
sub
aam
scas
mov
bound
add
imul
das
fsubs
outsb
scas
adc
xor
push
pop
push
hlt
add
mov
jne
mov
orb
adc
cmpsb
xchg
mov
ret
ljmp
stos
add
out
adc
lea
loope
cmpsl
inc
add
pop
lcall
jge
mov
inc
push
add
cmpl
rcll
xor
sub
add
add
jbe
push
or
sub
stos
or
inc
add
xchg
cmp
xchg
cmp
and
adc
pop
popa
mov
mov
sbb
xchg
xor
add
clc
clc
adcl
xchg
fstpl
outsl
inc
les
cmp
scas
bnd
fnstenv
outsl
dec
pop
incb
cmp
sub
call
movsl
cwtl
stos
add
sub
rorl
push
adc
int
sbb
in
int3
inc
dec
dec
call
dec
dec
call
mov
adc
pop
sub
hlt
rorl
mov
popa
pop
out
xchg
mov
push
or
ret
sbbb
xor
jp
adcb
pushf
or
mov
lock
pop
lret
inc
push
adc
add
dec
fstpl
sbb
sbb
or
add
hlt
jle
add
nopl
or
out
and
call
dec
pop
shll
lods
push
xchg
inc
sarb
pop
lret
or
mov
ja
add
bound
dec
mov
lock
mov
sub
mov
adc
jg
ffree
push
sbb
frstor
insl
add
sub
push
or
loope
adc
mov
or
pop
add
dec
dec
shlb
xor
cmpxchg
psubsb
lcall
push
ds
add
inc
jmp
mov
sbb
cmp
and
fldenv
sbb
adc
adc
add
test
movsl
xlat
adc
inc
popf
push
lock
push
aas
call
fiadds
inc
mov
in
mov
arpl
arpl
das
mov
jnp
lahf
push
mov
mov
cmpsb
add
scas
jo
and
out
mov
push
mov
jp
and
jp
rcll
inc
pop
sti
data16
ds
dec
cmpb
fcmovnbe
and
mov
js
bound
rclb
pop
pop
arpl
sbbb
inc
pop
push
mov
inc
faddl
sbb
push
jb
pop
jge
not
ljmp
insb
adc
arpl
mov
mov
sub
fcoml
andb
in
fildl
dec
sbb
push
push
jne
cwtl
test
popa
mov
add
xchg
and
mov
and
pop
push
flds
out
and
cmp
push
push
dec
cwtl
das
xor
add
movl
xchg
push
cltd
js
inc
cs
in
fwait
jl
push
xchg
hlt
mov
dec
or
stos
aaa
ljmp
add
sub
pop
xlat
inc
arpl
adc
enter
imul
ljmp
lock
lds
daa
mov
xor
loop
inc
aaa
push
push
stc
sub
cmp
mov
daa
test
pop
push
mov
xor
rolb
dec
pop
add
xor
lods
add
and
call
or
add
add
cmpb
cmp
insb
rolb
adc
cmp
mov
inc
add
loope
repnz
push
fnstenv
xor
fisubrl
add
push
sbb
rorb
repnz
out
sub
push
jmp
mov
popa
push
push
push
je
or
rolb
test
mov
adcb
push
dec
sbb
or
xchg
adc
test
ret
push
add
mov
pop
jmp
fcoms
addb
or
inc
es
cli
rolb
pop
xor
pop
sub
and
inc
adc
mov
sub
les
js
lods
jo
push
mov
fs
ljmp
mov
adc
in
xlat
sbb
mov
in
push
jne
ja
push
adc
pop
add
hlt
sub
add
ret
jb
es
stos
rorl
push
cmp
adc
inc
adc
sbb
inc
cmpsl
push
into
call
or
mov
repnz
push
xor
push
adc
sub
mov
mov
dec
inc
pop
stos
mov
push
les
fcomps
call
ljmp
stos
push
cmp
add
ret
push
add
dec
pusha
shl
fadds
or
adc
movb
or
cmp
add
mov
or
addl
jle
js
pop
xchg
aaa
adc
jne
imul
outsl
les
add
daa
or
inc
cmp
pop
leave
out
mov
sub
fs
or
inc
loop
mov
mov
mov
aas
mov
mov
xor
mov
inc
or
cmp
repnz
sahf
icebp
jns
push
sbb
mov
xlat
clc
or
les
cmp
fs
mov
mov
sahf
pop
mov
cmpsb
das
or
ficomps
dec
xor
mov
dec
push
rcr
sbb
insb
outsl
mov
adc
sbb
jp
push
test
test
lahf
sbbb
xlat
push
push
fdivrl
fdivrs
lock
push
and
adc
cld
pop
or
sub
jo
pop
test
jo
imul
idivb
and
inc
adc
add
jl
lea
imul
lret
push
cmp
add
pop
xchg
pop
fs
pop
aaa
movsl
or
jo
imul
mov
sbb
ret
das
mov
pop
mov
inc
jne
lds
or
fs
mov
or
add
adc
mov
movsb
or
scas
aam
or
repz
or
sub
sbb
pop
roll
push
mov
xor
inc
call
dec
comiss
mov
imul
adc
mov
imul
sbb
push
jle
push
ficomps
andl
loop
mov
mov
adc
sub
sbb
or
or
or
sbb
pop
xor
jmp
and
or
dec
sub
daa
imul
sbb
cmp
xor
adc
cmp
pop
jge
adc
mov
in
nop
ljmp
hlt
push
aas
adc
inc
out
mov
adc
or
cmp
fs
push
mov
mov
mov
movsb
lods
in
repz
cli
xchg
out
mov
dec
cmp
add
cmp
and
ljmp
mov
cli
or
sbb
xor
mov
xchg
jmp
std
cmpb
push
ljmp
add
add
xorl
mov
lods
cmpsl
incl
ret
decl
loope
add
jg
rorb
mov
add
add
pusha
sbb
fdivrp
ja
mov
mov
clc
add
add
test
aaa
and
push
sbb
jmp
and
movsl
das
ret
mov
clc
add
push
fcomps
pop
mov
test
aam
in
sbb
jo
sub
mov
dec
cmpsl
gs
mov
add
ret
ficomps
aaa
xchg
and
bsf
mov
inc
in
rolb
cmp
xchg
arpl
mov
and
rclb
or
dec
or
mov
jbe
xchg
lock
xchg
nop
dec
rolb
cs
div
or
sub
insl
or
jb
es
lcall
adc
jge
push
pop
or
cmp
or
sahf
push
push
adc
jp
jo
or
shlb
push
rcrl
int3
rorb
dec
insl
cmc
ja
sub
push
cmp
lret
aaa
add
jns
fs
push
test
fsubrs
xchg
add
fistl
jg
cmp
mov
push
fsubrs
or
test
sbb
dec
dec
add
and
fs
pushf
fmuls
add
sub
in
add
mov
mov
jmp
sbb
sub
add
and
lods
lcall
cltd
xor
adc
add
sub
push
ljmp
push
xchg
rclb
cmp
daa
ret
jae
dec
mov
enter
notl
jb
ja
push
test
jb
clc
sub
into
sbb
pusha
aad
push
sahf
add
or
sbb
cmp
push
idiv
jne
push
inc
movl
shl
imul
pop
add
cwtl
add
test
lcall
inc
pop
outsl
js
adc
fsubl
or
inc
xor
mov
inc
xor
mov
sbb
sar
push
addr16
xchg
push
or
push
push
movl
push
sarl
sub
sbb
sbb
pop
mov
adc
aas
pop
adc
ret
adc
ret
sarl
sbb
shll
js
jmp
mov
daa
sbb
jb
loopne
dec
mov
iret
and
loopne
movsl
fldenv
adc
setp
sub
sbb
shll
pop
ss
or
push
dec
inc
xchg
imul
or
mov
and
sbb
lock
adc
adc
dec
pop
bound
push
pop
sbb
sbb
sbb
mov
sbb
jg
xor
mov
jp
outsb
adc
and
xchg
adc
insb
pop
xor
sub
loopne
popf
cmpb
mov
sub
cmp
jge
xchg
out
test
cmp
add
cmp
jle
jl
or
sbb
push
xchg
jg
idivl
cmp
clc
and
sub
sbb
push
inc
add
ret
inc
push
or
pushw
add
and
or
sbb
and
sub
adc
aaa
adc
or
push
loope
sub
lods
add
int3
pop
movsb
lcall
adc
or
adc
sbbl
xor
lods
das
mov
pusha
and
sub
jg
push
and
inc
inc
incl
fisttpll
mov
add
push
fadds
xchg
add
xchg
and
lods
or
cmovo
add
jnp
push
cltd
jne
or
sub
xor
jno
jb
or
jb
mov
cmpsb
test
sub
adc
cwtl
mov
or
pusha
adc
aaa
push
call
inc
inc
dec
cmpsl
sarb
hlt
mov
fisubl
call
hlt
adc
sbb
rcll
mov
inc
and
out
or
fistl
xchg
inc
or
jne
test
push
xor
dec
daa
push
or
sti
mov
fmuls
and
je
inc
sbb
pop
or
adc
adc
leave
ficomps
mov
loopne
mov
sbb
mov
and
push
push
je
add
fisubl
jmp
pop
data16
and
sub
dec
addb
inc
fiadds
mov
movsb
sbb
sub
daa
mov
pop
and
sub
fstl
cmp
add
ret
cmp
mov
leave
test
lock
test
mov
pop
lock
jnp
dec
aam
dec
shlb
test
ljmp
jno
mov
sbb
xchg
test
inc
push
dec
imulb
outsb
ret
cmp
and
hlt
xchg
pop
mov
jg
mov
fwait
and
sbb
adc
jo
or
adc
shl
sbb
adc
ss
xor
jmp
push
add
or
shl
xchg
outsb
add
bound
jle
cwtl
fisubrl
lahf
push
mov
jbe
mov
xor
mov
inc
data16
and
jmp
pop
jle
sub
push
je
ficoml
fdivr
in
lods
and
lods
sub
jb
test
and
inc
cmp
into
mov
cmp
test
inc
jns
mov
mov
adc
inc
push
mov
test
rcrl
inc
adc
jns
adc
cmp
mov
and
adc
cmpsb
test
test
add
jge
iret
add
or
add
adc
and
xor
xchg
fldt
add
popf
inc
mov
lods
mov
sbb
xlat
inc
add
roll
sbb
inc
or
jmp
pop
dec
inc
mov
mov
dec
sbb
push
xlat
or
pop
adcb
and
inc
lret
dec
and
pop
aaa
aaa
rcrb
ss
stc
cmp
dec
or
sbb
adc
mov
sti
mov
adc
pop
xchg
pop
cli
cmp
pop
cld
xor
mov
mov
outsb
push
inc
push
jnp
pop
out
add
mov
inc
mov
push
inc
or
out
test
dec
sbb
inc
mov
xor
clc
fs
pop
test
lret
push
dec
inc
dec
cmpsb
fistl
movsb
mov
adc
dec
jnp
pop
inc
or
adc
adc
inc
xor
sub
or
loopne
xor
sub
adc
mov
das
jmp
push
xadd
fdivl
add
xchg
cmp
repnz
add
xorb
sbb
cmp
inc
xchg
cld
dec
cld
adc
push
mov
insl
mov
inc
pop
sbb
and
mov
iret
icebp
mov
clc
cs
sti
dec
loope
loope
inc
cmp
and
inc
bound
fdecstp
lret
or
adc
push
add
lret
loopne
xchg
and
stos
mov
jno
mov
out
xor
out
cmp
sub
cmp
popl
push
xor
xlat
lock
adc
adc
sub
adc
scas
add
scas
lret
and
inc
or
imul
filds
cmp
inc
aas
insl
or
inc
push
push
or
cmpsb
andb
inc
dec
or
mov
nop
pop
mov
xor
pop
mov
adc
pop
or
pop
jb
or
xchg
mov
loopne
inc
lods
bound
rolb
sbb
orb
sbb
or
hlt
ss
jns
pusha
sub
dec
sub
sub
xchg
mov
mov
or
jge
jl
add
hlt
add
or
inc
imul
pop
xchg
mov
sti
pop
dec
sbb
inc
adc
test
push
xchg
fcoms
addb
lahf
and
dec
push
pop
push
outsl
sbb
or
sbb
push
or
call
out
cmp
mov
pop
mov
dec
daa
cmp
mov
push
hlt
icebp
movb
sbb
testl
cmp
adc
dec
scas
xchg
or
and
adc
pop
inc
daa
loopne
jne
mov
mov
sbb
lock
xchg
xor
pusha
pop
popf
fdivs
adc
mov
cli
stos
push
scas
add
xorl
rclb
jne
lock
or
clc
xchg
ljmp
xchg
scas
je
jne
add
mov
push
mov
push
dec
arpl
sbb
mov
jb
or
mov
xchg
out
add
out
and
sbb
jecxz
sbbb
test
adc
push
int
or
jb
call
jp
xchg
into
cmp
sub
aad
sub
jle
repz
pop
outsb
out
cltd
inc
js
or
dec
adcl
roll
shr
adc
lret
pop
outsb
inc
daa
mov
xchg
push
pop
or
frstor
shrb
mov
ss
push
ja
int
add
in
xchg
inc
lock
or
out
pop
sar
stos
ja
cmpsl
leave
jo
mov
fs
out
xor
std
push
mov
cmp
rclb
test
imul
push
sbb
mov
cltd
add
mov
sbb
lock
adc
lret
sbb
xor
lret
mov
mov
iret
popf
pop
inc
pop
xor
fidivrs
dec
or
mov
inc
mov
mov
add
sub
pop
add
cs
sub
or
inc
dec
scas
ret
add
fildl
dec
inc
repz
and
xor
cltd
clc
xor
or
xor
enter
pop
rcr
bound
xchg
sub
dec
mov
rcrl
data16
adc
adcb
or
dec
int
mov
and
add
fnstsw
mov
sbb
mov
add
xchg
mov
hlt
fnstsw
or
xor
sub
or
daa
dec
push
adc
inc
pop
imul
dec
and
cmp
mov
repz
add
lcall
push
pop
pop
mov
xchg
dec
and
pop
inc
loopne
inc
jge
sbb
cmp
and
int
adc
or
mov
push
cmp
movsl
aam
mov
dec
ja
dec
pop
lock
test
in
mull
and
lahf
stos
stc
xchg
lcall
sub
int3
shl
stos
rcll
movsl
daa
aaa
jecxz
mov
clc
clc
stos
hlt
push
xor
mov
inc
or
cmpsb
push
sbb
dec
mov
repnz
cwtl
call
pop
divb
aam
in
jne
jae
ds
pop
inc
jbe
sub
adc
jne
pop
ret
pusha
pop
aaa
adc
add
jg
pop
pop
and
jg
sbb
push
or
inc
test
imull
xorl
or
shlb
insb
jb
pop
lahf
adc
add
cmp
daa
icebp
xor
shrl
in
pop
push
xchg
nop
daa
adc
push
and
outsl
test
movb
push
mov
mov
and
xchg
cmp
inc
adc
pusha
js
lods
inc
dec
cmpb
sub
add
jmp
daa
push
arpl
rclb
outsl
ror
mov
sbb
jbe
push
shl
xor
ss
es
les
xchg
out
js
pop
loopne
sbb
mov
xchg
mov
out
jae
add
leave
adc
xor
inc
orl
mov
or
inc
inc
push
and
adcb
add
addr16
adc
sbb
and
inc
mov
lods
movsl
mov
mov
push
adc
mov
add
lret
rorb
mov
push
adc
jnp
dec
push
adc
push
mov
cld
je
xchg
mov
popf
inc
mov
fucomip
jle
cmc
nop
adc
or
mov
cmp
push
popa
js
cli
enter
hlt
clc
movsl
mov
rorb
pop
daa
cmovp
popa
adc
aam
or
cli
pop
loop
or
or
rolb
je
push
add
mov
arpl
mov
push
fistpl
mov
andl
in
add
jge
jle
cmpsl
shrb
ss
fisubrs
daa
ss
ss
andb
lahf
jo
push
icebp
adc
pop
out
cmp
cmp
xlat
pinsrw
push
push
inc
and
or
mov
cmp
rcrb
xchg
jno,pn
leave
or
dec
das
sbb
push
popa
adc
jae
sahf
and
sub
aad
lea
inc
loopne
pop
adc
jg
push
push
inc
jo
xchg
mov
mov
add
sbb
cmp
add
lds
pop
push
stc
and
xor
lock
dec
mov
call
jbe
sub
arpl
pop
aam
add
cltd
iret
insb
dec
pusha
mov
aaa
adc
insl
adc
inc
arpl
xchg
into
mov
and
xchg
push
jo
lret
jge
test
and
push
add
lret
js
inc
outsl
les
push
sub
inc
jmp
loopne
lock
filds
ror
fiadds
push
add
push
xchg
add
fwait
ret
push
cmp
movsb
jg
int3
jl
sar
xor
cs
imul
scas
sub
das
insb
xchg
subl
int3
sub
jb
cmp
jbe
sub
add
divb
mov
rolb
sbb
xchg
ljmp
jo
icebp
lea
mov
xor
addl
cwtl
les
add
cmp
add
xchg
add
mov
test
mov
cmp
add
add
dec
dec
data16
mov
sbb
pop
lcall
mov
rcll
pop
insl
jge
mov
adc
push
adc
inc
faddl
add
push
outsl
sub
cmp
xor
push
nop
xor
xorl
dec
popf
push
cmp
sbb
sub
xor
dec
fildl
xor
mov
mov
adc
hlt
loop
xor
adc
dec
sub
nop
ss
dec
outsl
xor
pop
cwtl
jl
mov
mov
fmuls
adc
sub
mov
mov
mov
and
push
cld
mov
inc
add
sub
inc
add
inc
cmpsl
shrb
adc
sub
pop
dec
sub
and
and
dec
or
sub
dec
add
ret
or
dec
xchg
js
xchg
pushl
add
adc
inc
mov
mov
push
sub
ret
and
jl
lock
ficoml
push
push
imul
xchg
cmp
pop
dec
aam
sub
mov
mov
inc
jbe
lret
sbb
adc
mov
shll
adc
inc
mov
or
xor
ret
sbb
mov
adc
sbb
jl
mov
test
cltd
mov
popf
fcmovnbe
or
mov
and
adc
pop
xor
jo
aaa
pusha
cwtl
imul
leave
add
test
add
pop
xor
sub
jmp
push
movsb
lea
push
xor
shl
push
inc
add
cmp
or
loopne
and
jb
test
push
cld
push
lods
mov
push
push
insb
xchg
mov
inc
dec
sti
iret
add
sub
das
or
cmp
sbb
or
das
jmp
ja
cmp
lock
lea
pop
add
ret
adc
shlb
inc
xor
jp
mov
lock
or
adc
mov
ret
inc
aad
xchg
mov
dec
and
into
or
jo
mov
sub
push
jo
inc
push
imul
cltd
les
jnp
fisubs
call
mov
fwait
cld
pop
and
lea
sub
inc
and
sbb
roll
cmp
orl
dec
xlat
ret
mov
or
stc
or
test
daa
fcomps
mov
dec
call
inc
or
mov
inc
or
arpl
add
mov
push
push
mov
arpl
add
ret
push
xchg
or
lds
iret
sbb
addr16
fiaddl
or
xor
dec
jg
jns
frstor
push
xlat
fsubrl
adc
outsl
adc
xor
xchg
jbe
or
dec
cmp
inc
and
loopne
pop
and
cld
inc
adc
sbb
lods
push
ficoms
decl
push
and
sbb
push
insl
push
test
pop
adc
ret
dec
imul
adc
push
add
sbb
push
xchg
nop
adc
inc
lret
jo
sbb
sub
mov
ja
hlt
nop
loope
pop
or
and
push
mov
or
negb
push
pop
xchg
sbb
jnp
sub
loopne
inc
jmp
jo
dec
jg
cltd
and
fstps
adc
adc
popf
inc
sbb
ljmp
or
fldenv
sub
pusha
and
fsubl
jo
sub
push
mov
cmp
in
fimuls
mov
mov
push
jns
rcr
mov
push
mov
push
pop
insb
adc
jo
push
movsb
sub
inc
push
mov
jl
in
sub
orb
mov
xor
jb
sbb
xchg
push
dec
dec
dec
dec
push
adc
dec
inc
dec
dec
inc
sub
arpl
cs
dec
push
inc
gs
pop
push
gs
sbb
inc
jbe
and
jae
adc
xchg
xorl
das
xorl
mov
xchg
dec
jae
pop
fsubrs
call
into
cmp
sbb
push
rcrb
je
mov
mov
pop
add
mov
xlat
or
push
xchg
mov
sbb
into
inc
dec
jmp
inc
movsl
jge
push
sub
ret
fistpl
sbb
je
or
je
push
adc
aam
loopne,pn
popf
xchg
push
or
push
sahf
xchg
jbe
dec
mov
add
or
jne
xor
push
fadds
loope
sbbb
stc
lods
xor
jo
add
popa
mov
pop
and
xchg
add
shrl
and
cmp
sbb
cmp
pop
pusha
mov
xchg
mov
insl
call
dec
loopne
mov
mov
xchg
adcb
and
mov
imul
sub
push
out
fwait
call
imul
nop
and
sbb
mov
and
and
dec
ret
jae
lock
test
cwtl
cmp
or
popa
fsubs
lahf
push
xor
cli
fsubr
lock
sub
sub
cld
and
iret
push
aas
xor
cmpsb
push
mov
nop
mov
add
mov
xor
inc
rolb
inc
data16
and
or
lock
dec
in
popa
ljmp
scas
out
jae
jae
aaa
outsl
call
gs
add
aad
pop
and
aaa
mov
outsl
inc
or
xchg
mov
das
jo
cmp
lods
pop
jge
adc
movl
sub
or
pop
mov
dec
je
inc
dec
call
jmp
cmp
hlt
or
sub
nop
sbb
sbb
adc
fwait
xchg
inc
add
add
cmp
mov
movb
xchg
mov
enter
jnp
xchg
dec
sbb
iret
inc
pop
sarb
or
jo
lahf
mov
or
add
pushf
dec
aam
adc
or
mov
insl
stos
std
das
mov
jnp
adc
lea
add
mov
sbb
adc
sub
add
mov
jg
call
daa
mov
cmp
imul
add
cmpsl
cmp
push
add
loopne
aad
push
iret
cs
add
sub
loop
ret
imul
insb
dec
es
sbb
repz
add
dec
xchg
cmpsb
mov
imul
fs
jmp
andl
mov
test
add
mov
lea
and
xor
shll
jmp
and
push
pop
divl
comiss
pop
adc
cmp
and
lods
mov
mov
add
pop
push
ss
test
xlat
test
sbb
aaa
mov
inc
jl
sub
movsb
enter
scas
orl
in
cmp
pushf
jle
and
adc
fcmovb
dec
cmpsl
mov
pop
inc
adc
inc
push
dec
push
push
test
mov
mov
or
int3
scas
pushf
mov
push
test
mov
jg
inc
push
adc
imul
fiaddl
xor
pop
and
addr16
sub
icebp
sub
ret
xchg
push
and
mov
ret
adc
add
jae
aas
fcmovb
pop
cmp
add
movl
movsl
or
jne
push
or
dec
adc
xchg
test
ja
das
or
mov
aas
das
cmpsb
fcomps
ret
rorb
push
mov
rorb
mov
mov
xorl
inc
xor
dec
xor
mov
dec
xor
jge
xor
push
bswap
sbbb
adc
pop
or
inc
sub
inc
add
inc
jne
dec
or
sbb
loope
push
movsl
dec
inc
cmp
mov
inc
push
jne
cmpsw
adc
sbbl
icebp
sub
pop
sbb
xchg
or
out
mov
insl
adc
out
andb
sub
cmpsb
inc
dec
ret
add
jnp
inc
sub
or
push
push
jns
pop
mov
aas
or
adcl
dec
iret
clc
scas
xor
mov
pop
out
push
test
andl
or
or
push
movsb
pop
outsl
adc
fisubrl
adc
push
add
mov
inc
sarb
xchg
fisubs
and
cmp
and
or
sub
test
adc
adc
cmpsl
pop
adc
dec
or
mov
pop
addl
add
mov
xor
xchg
inc
or
fistpll
mov
ds
xor
sub
loope
cmp
sbb
xlat
dec
push
cmp
mov
adc
inc
pop
and
inc
sub
pop
rcrl
arpl
mov
add
pop
xor
test
push
cmp
mov
jp
inc
xchg
jecxz
icebp
or
mov
adc
and
pop
inc
cmovne
dec
cwtl
push
cmpl
push
add
mov
lock
inc
inc
dec
or
push
arpl
sarb
pop
enter
js
xchg
mov
mov
mov
popa
dec
jmp
rcll
les
mov
inc
push
adc
jg
dec
adc
xor
fdiv
push
dec
arpl
ret
inc
add
icebp
mov
mulb
jo
data16
pusha
das
sub
jmp
stos
arpl
push
jbe
movsb
inc
or
mov
xchg
sbb
xchg
adc
adcl
inc
loope
cmp
pop
add
xor
push
pop
mov
dec
pop
adc
rol
cmp
add
mov
mov
mov
push
or
push
add
lock
test
pop
loope
lret
stc
push
sti
and
pop
cltd
bound
mov
mov
das
cld
and
pop
inc
or
jo
sbb
xchg
dec
xchg
push
push
xorb
push
sub
lock
push
inc
adc
negb
or
sbb
push
lret
or
fisubs
or
push
imul
cmpsl
dec
in
mov
mov
je
hlt
cmp
sti
mov
mov
sub
stos
jmp
sti
inc
stos
jg
and
mov
ret
xchg
ret
cmpsl
sbb
mov
jl
add
add
idivl
fbstp
int3
call
jno
loopne
adc
sub
xchg
lret
neg
pop
call
xor
mov
mov
xchg
dec
mov
popa
cltd
inc
test
adcb
and
sub
mov
hlt
ret
sti
stos
pop
es
push
aas
jne
es
nop
das
sub
mov
inc
out
pop
mov
mov
or
mov
push
inc
add
inc
or
dec
and
adc
jmp
popf
sub
jbe
daa
mov
test
jg
dec
mov
pushf
or
adc
outsl
push
jo
lea
xor
addb
inc
imul
nop
mov
cmp
cmp
jl
pop
sub
dec
adc
nop
push
add
xchg
mov
jg
mov
js
sbb
push
test
adc
mov
xor
push
test
push
dec
and
inc
xor
fisttpl
mov
sub
test
fsubrp
adc
dec
nop
adc
xchg
cltd
or
cs
xor
mov
or
leave
xchg
dec
dec
dec
pop
daa
addl
movsl
loope
addb
or
push
pop
test
pusha
idivl
jp
sar
pop
push
pop
push
add
sbb
mov
cmp
cmp
dec
xchg
jmp
add
dec
add
mov
mov
inc
cmp
and
hlt
mov
sub
call
push
add
pop
and
xor
xchg
roll
xor
fists
sub
test
dec
or
sysret
lods
fists
add
mov
ror
pop
popf
lret
add
push
dec
insb
pop
inc
repz
adc
cld
fmull
rolb
dec
ret
subl
mov
lea
push
add
in
test
sbb
mov
lea
or
pop
push
cmp
or
roll
mov
inc
sbb
and
in
dec
in
ret
fildll
in
or
sahf
xor
sub
push
xor
or
imul
lret
insb
andl
push
sub
xor
pushf
xor
push
mov
and
adc
movsl
add
roll
xlat
adc
es
inc
xlat
inc
dec
pop
lret
jnp
adc
adc
inc
jl
cwtl
mov
dec
js
sub
in
jae
leave
xchg
decl
inc
mov
loop
inc
mov
cmp
movsl
les
inc
loopne
ret
hlt
dec
and
cmp
mov
mov
adc
pop
repnz
stos
fimuls
sub
xorl
paddb
or
inc
xor
and
dec
or
inc
test
inc
cmp
jbe
sarl
lret
imul
lock
mov
sub
pop
sub
out
dec
dec
mov
dec
jne
dec
add
jle
dec
cmp
enter
mov
or
ret
out
xchg
jl
insb
pop
mov
inc
add
lock
jl
add
imul
das
rcrb
insl
sub
inc
outsl
cli
push
or
in
and
lcall
sub
mov
jl
pusha
pop
and
and
mov
and
xchg
mov
xchg
movl
sbb
cmp
jne
mov
dec
or
and
adc
mov
in
scas
cmp
mov
lock
mov
jb
push
dec
outsl
pusha
mov
js
push
icebp
nop
dec
hlt
into
or
jns
enter
or
sbb
add
push
mov
xor
cmp
dec
cmpb
mov
and
pop
jae
les
cmp
inc
xor
add
cmp
movsl
pop
add
pop
ret
push
push
cmp
decl
cmpb
inc
xor
imul
aad
das
add
mov
adcb
sahf
imul
push
test
enter
leave
fidivrl
into
mov
call
inc
cwtl
dec
loopne
iret
inc
jg
pusha
pop
cltd
pop
clc
out
outsl
sub
push
push
cmp
dec
adc
imul
adc
rolb
and
add
call
arpl
cmpl
js
rorb
pop
push
inc
sbb
push
outsb
lret
pop
adc
mov
or
jo
inc
or
roll
cltd
shrb
sbb
fiadds
roll
sbb
repz
or
and
push
adc
shll
dec
shlb
rorl
adc
lret
mov
jno
fsubrs
nop
ja
fildl
addb
in
bound
pop
sub
mov
inc
aaa
pop
int3
jns
mov
pop
shl
sub
jmp
scas
lock
or
js
sahf
lahf
fwait
ja
add
out
in
push
xor
and
cmpsl
push
mov
in
pop
add
outsl
mov
add
sbb
cmp
or
repz
xchg
sbb
xor
cmp
pop
insb
adcb
rcl
fcomp
loopne
cmp
repz
in
lock
inc
mov
iret
clc
cld
or
xor
pusha
xchg
add
in
add
clc
rclb
pop
adc
xor
movsl
ret
sbb
dec
fistl
sub
ret
test
add
cmp
movsb
lds
addr16
inc
in
rolb
out
pop
rol
mov
sub
cmp
in
leave
jp
pop
mov
movsb
xor
and
push
in
push
and
jmp
sbb
pop
or
push
sub
mov
rcll
xor
cmp
sbb
aaa
pusha
jb
fcompl
mov
sbb
lods
movsl
movsb
jnp
mov
mov
addr16
sub
inc
int
mov
jmp
lret
idiv
adc
lods
mov
push
lock
nop
test
mov
add
rclb
add
xor
or
sub
aad
or
mov
or
ja
mov
cmp
push
fldl
ja
lock
fmull
sbb
pop
xchg
and
inc
cwtl
mov
loopne
test
aas
scas
mov
and
cmp
fs
dec
xlat
adc
cmp
mov
pop
or
or
enter
cmp
dec
lcall
mov
cmp
jle
movsl
dec
xor
jge
ds
js
nop
enter
and
les
and
mov
jl
pop
xlat
push
adc
roll
inc
adc
xor
xorl
imul
popa
mov
mov
hlt
inc
call
aad
or
mov
and
xchg
jae
shll
loop
mov
sub
mov
sbb
cmpsb
lock
mov
mov
into
adc
sbb
push
or
push
sbb
mov
add
jbe
sbb
jg
lret
dec
mov
or
addl
adcl
dec
fbstp
sbb
and
arpl
aas
inc
xchg
out
push
push
push
std
mov
pop
cmp
fadds
inc
mov
xor
mov
dec
in
cmp
inc
sub
add
jmp
mov
movb
mov
mov
test
mov
adc
dec
fcoms
mov
and
adc
insb
or
daa
fcomps
push
push
pop
push
xor
andl
add
pop
xor
icebp
std
scas
xchg
mov
sub
mov
sub
push
cmpb
sbb
or
xchg
add
in
add
push
pop
cld
mov
stos
xchg
andb
adc
nop
and
or
xchg
add
mov
xchg
scas
fs
into
cmp
add
das
cmpsb
imul
mov
cmp
or
or
pop
push
sbb
jae,pn
test
daa
push
fcmovne
orb
int
shrl
dec
push
fmull
cmp
push
inc
pusha
out
jne
push
push
out
movb
and
xlat
cmp
daa
add
and
push
mov
nop
add
adc
adc
push
cmpsb
cmp
test
inc
notl
cmc
out
dec
jnp
inc
cmp
jne
mov
clc
mov
pop
push
xor
loopne
je
and
jno
nop
insb
pop
out
pop
xor
ret
rcll
or
dec
in
mov
lods
add
cltd
dec
jmp
pop
les
sub
push
arpl
sbb
pop
mov
mov
sub
les
add
sub
testb
push
fisttpl
pop
movl
ret
push
pop
insb
lret
push
mov
mov
pusha
lock
js
mov
ret
pop
iret
xchg
xchg
cmpl
cmp
je
lea
add
jb
jge
xchg
add
je
or
jl
addl
mov
sti
inc
jne
mov
mov
mov
cltd
mov
pop
inc
cs
jg
test
movl
jno
cmp
je
adc
mov
dec
movsb
pop
xor
jne
aam
mov
movsb
inc
mov
aas
movsl
imul
jg
pop
push
push
adc
out
inc
lcall
dec
add
add
lods
adcl
rcrl
jl
or
inc
orb
sub
mov
sbb
or
rclb
mov
push
imul
rcl
mov
pop
pop
mov
pop
lock
repnz
lret
imul
lds
enter
sahf
sub
adc
cmp
loope
inc
push
imul
mov
mov
inc
inc
push
jg
mov
or
inc
add
insl
aad
and
sbb
add
xchg
mull
xor
dec
das
sub
add
mov
outsb
arpl
add
jg
add
pop
fcoml
daa
loopne
fisubrl
sub
jne
ss
inc
push
int3
adc
je
push
sbb
xorb
shll
rorb
hlt
pop
aam
icebp
pop
fmull
fs
inc
xor
inc
dec
or
or
xchg
mov
xor
clc
sbb
and
mov
and
or
les
repz
and
sar
out
pop
repnz
sub
aaa
pop
les
pop
and
or
push
pop
sub
aas
or
or
dec
push
fisubrs
sbb
mov
mov
inc
sub
xor
add
xor
lret
add
aad
or
adc
add
inc
adc
or
pop
push
andb
adc
adc
test
pop
ds
test
xor
sahf
sub
mov
jns
movsb
or
cmp
mov
or
push
pop
sbb
test
enter
rol
push
pop
sbb
push
or
test
ficomps
ss
and
or
dec
lcall
dec
sbb
fstp
inc
imul
or
pop
insb
fists
nop
loopne
ljmp
push
fs
test
fisttpll
adc
test
movb
lret
xchg
adc
adc
mov
sub
adc
dec
push
inc
xchg
mov
cmp
in
scas
stc
fisubrs
lret
add
and
test
pop
in
jb
popa
lcall
mov
xor
or
adc
hlt
movsb
xchg
sbb
add
add
jo
dec
outsb
push
pop
enter
cwtl
pop
xor
push
add
out
push
xchg
cld
push
cpuid
adc
sysenter
dec
nop
jp
stc
je
popa
dec
push
or
cmp
in
lcall
push
adc
imul
insb
push
sbb
push
bound
or
push
push
nop
or
or
or
push
rolb
es
insl
pop
cmp
mov
fisttps
and
int3
nop
prefetch
outsb
inc
sub
dec
ss
int3
add
sbb
out
mov
das
mov
pop
or
test
xchg
testl
es
push
sub
test
leave
int
pop
dec
sbb
cmpsl
xor
push
and
xchg
push
adc
or
pop
push
hlt
inc
mov
xchg
jb
pop
loop
mov
or
pop
xchg
or
adc
pop
fwait
mov
out
gs
xor
imulb
xor
mov
push
notb
sbb
push
mov
and
sahf
push
or
add
nop
adc
into
sbb
lret
or
cld
sahf
pop
adc
or
mov
adc
adc
xor
inc
jle
and
ds
addr16
and
push
gs
out
adc
je
mov
andb
sbb
and
jmp
imul
fwait
mov
arpl
lods
cmp
fs
mov
push
jb
popa
jbe
int3
jb
or
mov
or
sbb
imul
push
cmp
add
xor
outsl
addb
sbb
cmpsb
pop
and
push
ja
test
inc
add
or
inc
or
movl
xchg
arpl
dec
imul
or
iret
or
xchg
out
xchg
mov
or
push
rcr
mov
xchg
adc
inc
lods
sbb
xchg
lods
sub
outsb
dec
addl
in
push
lods
lcall
pop
adcl
dec
jae
push
push
push
dec
inc
mov
xchg
js
adc
ja
cmp
repnz
add
add
lock
sub
popa
pop
ret
pusha
or
add
mov
push
ja
in
pop
ds
mov
in
jo
lods
mov
or
xchg
out
inc
testb
inc
das
sbb
int3
pop
data16
call
mov
pop
add
inc
jl
enter
push
inc
mov
and
ret
test
push
call
xchg
inc
test
test
sbb
xor
inc
and
inc
adc
inc
pop
loope
add
sub
cld
ss
les
js
out
sub
or
movsb
dec
push
test
stc
mov
xchg
jnp
in
jb
pop
pusha
sbb
ss
int
jbe
sbb
push
cmp
add
les
pop
add
push
das
es
loope
push
cld
xorb
sub
mov
pop
insb
mov
scas
add
add
add
adc
daa
inc
add
add
lcall
adc
sbb
and
sub
add
shlb
xchg
pushf
push
shlb
push
pusha
imul
aaa
fsubrs
push
dec
push
mov
pusha
jmp
pop
push
sbb
add
sub
mov
mov
mov
ljmp
pop
scas
ljmp
ljmp
lea
loopne
jmp
in
push
add
and
movsl
dec
es
lahf
out
rdmsr
pop
push
mov
in
pop
imul
push
inc
int3
xor
push
cmpb
ja
out
popa
loopne
bound
push
or
aam
iret
idivb
dec
outsb
ja
in
add
jge
jnp
push
cmp
in
push
pop
idivb
mov
push
clc
sbb
out
imul
test
push
add
xor
or
ss
push
pusha
push
cs
dec
mov
out
xchg
nop
push
shlb
lock
dec
jo
cmp
mov
jp
lahf
imulb
add
push
push
push
aaa
lock
fdivrs
jns
test
or
mov
push
testb
andl
add
sbb
dec
jl
jmp
or
cmp
mov
rcl
insl
popa
mov
fldcw
pop
ljmp
push
pusha
imul
in
sbb
outsl
popl
sbb
lods
xor
bound
jmp
fidivs
jg
add
test
or
mov
adc
sahf
lock
push
cmp
or
daa
incl
xorl
adc
add
add
jnp
test
pop
pop
jbe
inc
insb
lock
dec
sub
cmp
add
cmp
mulb
popa
insb
lock
sbb
and
push
add
add
or
jno
shl
ror
rclb
pushf
loope
or
dec
dec
pop
fadds
add
push
dec
js
rorb
dec
out
push
ds
rcll
je
fiaddl
sbb
inc
and
jo
jo
cmp
and
adc
dec
sahf
dec
mov
add
lods
arpl
push
push
add
inc
or
in
inc
sbb
insb
cmpsl
cmp
adc
push
inc
xchg
sbb
pusha
fisubrl
pop
cmpsb
fs
inc
push
movsb
or
adc
push
test
and
dec
das
repnz
add
fisttpll
mov
pushl
mov
push
loopne
xor
movsb
add
push
xchg
nop
jl
scas
push
push
int3
and
adc
rcrl
nop
lods
pop
and
pusha
inc
add
add
add
pop
fldenv
or
mov
aas
fldt
cmp
and
jmp
sbb
loop
jns
pop
mov
push
cmpsl
sbb
jae
enter
sub
push
jmp
push
and
faddl
or
pop
fs
in
inc
sub
mov
xor
cmp
push
loopne
div
test
pop
hlt
cmp
shlb
sti
jns
mov
mov
dec
test
adc
push
and
sub
add
jge
ja
pop
cmp
inc
or
stc
sub
arpl
test
movl
mov
stc
or
jno
adc
pop
mov
cmp
xor
pop
cwtl
xor
jb
fwait
jne
jne
xor
add
ja
enter
mov
in
xor
add
jb
dec
sbb
dec
enter
xchg
aas
xor
pop
enter
lret
jl
jl
inc
add
sbb
mov
sub
dec
daa
jl
mov
dec
xor
pop
frstor
sbb
pusha
fidivs
mov
and
push
or
mov
imul
xor
push
imul
shrb
lock
mov
shll
ret
xor
jl
sti
sbb
cmp
sub
cmp
imul
cmp
test
cmp
js
pusha
inc
inc
arpl
test
adcl
loop
jge
jge
cmp
inc
cmp
mov
hlt
sbb
mov
xchg
aas
sbb
dec
sbb
jne
imul
jo
test
and
ss
ja
fisubl
dec
test
iret
and
test
pop
and
sbb
push
mov
or
cmovo
stc
mov
stos
inc
dec
or
add
popa
inc
ds
inc
inc
sahf
push
test
mov
inc
and
dec
test
repnz
rcrb
jno
adc
add
add
push
add
add
cmp
adc
push
pushf
xorb
inc
aaa
pop
jb
xor
inc
jns
add
adc
inc
loopne
xchg
das
in
inc
add
mov
and
add
dec
mov
mov
pusha
sbbb
mov
dec
add
frstor
sbb
push
out
sti
dec
add
incl
mov
inc
icebp
add
dec
inc
es
bnd
iret
and
dec
imul
jns
ja
in
call
enter
popa
movsl
dec
lea
loopne
or
pop
dec
fbstp
mov
call
mov
xor
fadds
cs
push
dec
pop
repnz
test
mov
dec
loopne
jns
mov
cli
clc
cmp
or
inc
clc
mov
test
add
or
clc
clc
push
add
or
js
push
lcall
mov
or
test
cmp
jns
add
addb
xchg
add
push
lods
pop
enter
xchg
sbb
sbb
loop
cmpsl
dec
push
jo
mov
pushf
cs
arpl
dec
roll
rol
or
jb
push
sub
and
outsb
cmp
dec
and
inc
dec
xor
dec
add
jb
pop
enter
sbb
test
rorb
cmp
or
test
in
inc
pop
and
pop
sbb
dec
dec
dec
cmp
adc
push
push
imul
scas
add
popa
push
and
stos
push
add
rcll
xchg
bound
jno
sub
mov
loope
sbb
pushf
or
xchg
mov
fs
adc
and
mov
lods
mov
lock
jo
lahf
in
nop
mov
and
and
xor
fwait
mulb
push
clc
mov
stc
pop
movsb
push
test
stc
xlat
inc
jle
and
iret
enter
out
test
inc
loope
add
ret
mov
push
loopne
je
int3
mov
enter
in
xor
and
xor
into
sysret
sub
adc
adc
pop
xchg
push
stos
cmp
outsb
shlb
nop
mov
inc
ds
xorb
or
push
outsb
cmc
scas
fwait
pop
and
sti
iret
and
ret
mov
rolb
adc
hlt
addl
cmp
imul
sub
ret
xchg
xor
outsl
sub
outsb
xor
ds
adc
inc
xchg
adc
ret
jo
cmpsl
add
inc
cmpsl
loope
in
pop
adc
push
outsb
push
daa
add
sbb
cld
xchg
pop
fldt
adc
pop
push
wrmsr
push
sahf
xchg
push
mov
loop
fmuls
popa
add
cmp
nop
ja
and
or
aam
hlt
pop
mov
cs
pop
pusha
lods
outsb
popf
and
leave
rolb
adc
add
or
mov
jnp
pop
and
sbbb
pop
repnz
nop
rolb
push
repnz
leave
movsb
frstor
daa
xlat
clc
inc
lods
or
adc
inc
add
cmp
out
subb
jnp
push
mov
sbb
xchg
loopne
leave
add
rclb
lret
lods
nop
cmp
push
mov
push
cwtl
imul
je
imul
ret
imull
sbb
inc
mov
xor
cmpsb
mov
hlt
fwait
dec
inc
mov
sub
dec
jmp
push
je
and
lcall
or
pop
and
outsl
mov
movsl
xor
test
add
and
or
mov
mov
sbb
adc
jae
lahf
xchg
push
sbb
or
je
jecxz
scas
xchg
mov
adc
je
xor
psubb
pop
jbe
mov
and
and
push
inc
movsb
int
push
or
sub
mov
notb
adc
sbb
mov
cmpsb
inc
and
jl
inc
sbb
sbb
cmpsb
je
icebp
je
adc
gs
pushl
adc
ret
dec
data16
push
rol
daa
hlt
pop
cmp
shlb
push
clc
jae
hlt
mov
popa
cmp
inc
orb
add
adc
mov
inc
das
mov
shr
mov
add
imul
push
sub
mov
int3
testl
sbb
mov
mov
push
jge
push
sbb
cs
test
inc
aam
xchg
dec
xchg
out
pop
xor
ss
add
sbb
cld
mov
mov
jne
mov
ret
sbb
in
xchg
or
pushf
add
out
mov
mov
pop
and
jb
inc
mov
xor
daa
xor
add
clc
addl
mov
adc
ret
fs
jae
jo
call
mov
push
jne
addr16
iret
and
inc
inc
arpl
pusha
mov
push
subb
mov
fdivr
inc
movsl
call
jmp
sbb
and
sub
mov
sbb
sub
loop
sbb
add
mov
or
jae
int3
cmp
xchg
adc
js
addr16
loopne
subl
pop
add
add
in
pop
pop
aaa
sub
add
or
xchg
out
add
add
adc
push
mov
adc
sbb
and
imul
or
and
cs
out
outsl
ret
cwtl
xor
pop
xor
testb
sub
adc
add
add
cs
mov
and
cmpsl
mov
sbb
adc
or
or
add
into
in
clc
pop
adc
shll
inc
or
sbb
sub
jle
jbe
push
cwtl
cwtl
add
or
jne
fadds
dec
loop
adc
push
add
mov
and
push
repz
nop
or
mov
pop
jb
push
and
xchg
ret
cmpsb
or
filds
ljmp
mov
sarl
cltd
push
inc
or
daa
add
test
pop
ss
add
or
adc
sub
push
inc
add
xor
inc
into
inc
pop
xor
pop
adc
shll
fcoml
push
sar
mov
sbb
jo
adc
std
call
jecxz
xchg
sahf
bound
or
lret
xchg
testl
jno
insb
stos
inc
insb
jg
push
adc
icebp
or
push
aas
ret
pop
xor
sub
inc
outsb
mov
inc
cs
add
and
mov
into
adc
inc
mov
mov
icebp
imul
add
dec
mov
pop
sbb
or
add
pop
scas
and
push
in
cmp
xchg
data16
xchg
inc
dec
mov
adc
ret
out
add
add
jl
cmc
imul
hlt
sbb
cmp
cmp
cmp
push
xchg
adc
cmp
mov
jmp
sub
sub
cmp
loope
sub
push
sbb
ret
mov
mov
fwait
shlb
push
and
mov
inc
mov
or
icebp
cmp
and
inc
popf
mov
lock
fwait
lahf
mov
movb
cmp
sub
outsl
fmuls
xchg
or
inc
test
push
sar
xorb
jecxz
test
insl
jnp
or
inc
or
sub
neg
jmp
arpl
je
xorb
sub
or
cli
mov
push
push
test
and
sbb
and
push
mov
jo
adc
and
mov
ljmp
mov
mov
ret
push
or
sar
es
sub
pushf
shlb
push
lahf
je
cmpb
sbb
aas
out
pop
fwait
or
jg
jo
jmp
call
shll
orl
or
inc
mov
in
js
adc
cmpsb
aas
cmpsb
call
or
xchg
and
or
xor
sub
lea
ret
cli
frstor
movaps
jmp
inc
inc
or
int
mov
pop
cmp
sti
adc
aaa
mov
sti
jmp
lret
or
test
cld
orl
push
sub
jmp
mov
and
test
add
dec
inc
adc
sbb
or
inc
xor
xchg
mov
out
jp
or
jmp
push
lods
cltd
jge
mov
add
leave
aam
and
adc
or
jno
mov
mov
jge
xchg
sbb
pusha
mov
orb
inc
jmp
adc
and
jmp
mov
add
push
or
cmp
stc
cmp
ja
enter
aad
push
fs
cmp
rcl
and
and
inc
out
and
lds
xor
notl
ret
push
dec
rcrb
push
rorb
lods
push
and
cmp
push
sub
and
stos
inc
fcomps
gs
adc
jg
mov
call
leave
inc
repnz
hlt
sbb
je
cld
cmp
push
test
fs
scas
or
mov
loope
add
push
popa
call
sahf
lret
scas
cmp
je
mov
and
into
add
push
dec
inc
mov
cmpsb
mov
stos
ret
or
fs
pop
or
sahf
ret
dec
xor
or
std
push
sti
jle
push
pop
inc
dec
jge
xchg
cmp
ja
cmpsb
sub
inc
mov
or
fs
je
pop
das
out
cmp
xor
mov
inc
dec
adc
fscale
enter
insb
pop
mov
loop
lock
mov
xchg
ret
jne
push
je
imul
add
push
cmp
stos
mov
jbe
and
and
sar
or
aas
xor
js
mov
push
cmp
and
test
jge
xor
xor
test
push
movb
ret
add
pop
cmp
pushf
lret
jbe
sbb
mov
flds
and
or
inc
xor
sbb
andb
es
cmpsl
add
add
cs
mov
push
xor
and
pusha
popa
dec
cmp
inc
push
in
push
xor
in
push
xor
andb
push
pop
pusha
adc
enter
mov
dec
push
repz
in
mov
int
adc
dec
xchg
ret
clc
mov
push
xchg
fsts
rclb
ret
push
cltd
xchg
stos
cmp
xor
or
loop
push
mov
loop
lret
movsl
push
dec
and
adc
or
cmpsb
loop
or
lods
jmp
inc
or
add
xchg
les
sbb
sbb
pop
add
or
pop
incb
faddl
jle
adc
lods
or
add
lds
shr
jno
xor
pop
push
aam
adc
cmpsl
lcall
fistpll
addb
or
jmp
scas
mov
mov
mov
sbb
pushf
mov
push
sub
sbb
pop
xor
inc
loop
aam
xchg
popf
es
test
fisubs
popf
andl
arpl
jecxz
or
add
xchg
daa
ja
dec
jne
mov
dec
icebp
push
adc
test
dec
movsl
mov
adc
sti
movsb
xchg
movsb
xor
jle
lock
inc
mov
out
addr16
push
push
cmp
jg
aaa
out
out
sbb
sub
mov
rorl
sbb
inc
adc
xor
push
add
adc
mov
ss
pop
xorb
lock
xchg
lods
push
in
push
test
adc
sub
xor
xchg
adc
adc
add
das
xorb
ja
xor
pop
je
mov
lock
ret
mov
mov
sbb
test
orl
dec
test
mov
mov
inc
pop
adc
adcb
rcrb
in
clc
test
add
add
jmp
insl
sti
pop
lea
and
pop
dec
outsl
sbb
push
and
ret
mov
mov
push
imul
aaa
inc
pop
ds
inc
inc
dec
dec
inc
push
jno
cwtl
cmp
dec
jmp
sar
pushf
inc
sbb
xchg
and
xchg
sub
add
xlat
sbb
xor
sbb
pushf
sbb
xor
and
imul
push
push
lea
push
push
xlat
mov
aaa
mov
sbb
sti
push
lret
inc
outsl
or
lds
sbb
out
sbb
pop
mov
mov
mov
ja
fs
data16
inc
int3
shr
sahf
or
sbb
mov
or
int3
or
test
or
sbb
jns
mov
mov
out
lods
inc
std
adc
test
es
cmp
popa
xchg
jne
fcoml
imul
ds
in
add
add
add
mov
movb
inc
cmpsl
or
xorb
repnz
mov
in
sub
add
adc
jmp
add
mov
and
cs
adc
pop
test
movsl
dec
dec
shl
and
dec
pop
stc
xor
cs
in
popa
out
adc
mov
sbb
push
arpl
ffreep
ljmp
jns
or
in
push
outsl
stc
and
sub
ret
inc
push
enter
push
pop
je
xchg
cmp
clc
add
xor
pop
add
int3
push
or
xor
jle
cli
push
dec
loop
pop
aaa
push
neg
data16
dec
negl
and
notl
stc
dec
dec
call
pop
mov
rcll
test
ljmp
add
dec
xchg
icebp
fstl
mov
cmp
insb
jb
jno
rclb
add
adcb
ret
mov
stos
or
popf
pop
xchg
mov
nop
or
sbb
or
sbb
fmuls
mov
ss
filds
rolb
xor
inc
testb
arpl
orb
or
cld
sbb
mov
dec
adc
pop
rolb
push
test
in
cld
adc
nop
or
inc
inc
movsl
rcrl
and
and
and
fildll
mov
xor
inc
incl
bound
outsl
add
xor
mov
popa
icebp
testb
add
adcb
push
fbld
mov
inc
inc
popa
ljmp
leave
xor
cmp
sbb
inc
popa
outsl
arpl
and
test
stos
mov
mov
pop
push
inc
push
jge
stc
mov
mov
daa
adc
insl
push
daa
xchg
cmp
orl
nop
pop
movsb
add
adc
mov
cmpl
mov
cmpb
sbb
lcall
or
xor
add
mov
add
inc
or
add
push
mov
cmp
mov
or
pop
movl
cld
or
jge
popa
loope
cmc
aam
sub
adc
adc
sbb
pushf
xchg
lret
scas
add
jb
jne
movl
push
stos
or
add
addr16
iret
mov
mov
sub
jmp
xchg
ds
lods
jge
lods
inc
lahf
xor
imul
push
bound
xchg
mov
jp
lock
mov
andnps
repz
mov
es
mov
or
add
inc
mov
loopne
out
into
inc
inc
xor
lea
mov
leave
in
cmp
xor
aad
enter
sbb
mov
push
xchg
fbld
dec
jmp
pop
gs
sbb
cmp
rcrl
popa
and
pop
cmpsl
repnz
xor
push
push
cmp
jg
push
cmpsl
mov
mulb
xchg
and
inc
gs
and
mov
xor
pop
cltd
js
loop
in
jg
dec
movl
xor
popa
mov
mov
into
call
add
xchg
sti
ss
mov
xor
push
jp
push
out
fidivrl
adc
cld
dec
jmp
popf
jle
xchg
repz
mov
sahf
mov
fisttpll
push
out
imul
out
xchg
add
mov
jae
insl
pop
mov
fstps
test
xor
xor
cmp
push
xchg
ja
or
data16
xchg
or
scas
sub
or
push
les
adc
sbb
ret
arpl
xchg
adc
or
add
dec
xchg
cmp
mov
xchg
fmul
mov
mov
jne
adc
test
inc
sub
in
jne
xchg
aam
sbb
stos
sbb
imul
dec
outsl
cmp
rolb
je
imul
add
push
and
gs
scas
cmp
jae
jmp
jnp
inc
inc
push
sub
push
int
jecxz
push
jmp
adc
push
std
push
inc
not
and
cmp
cmp
push
sbb
in
add
or
mov
jnp
enter
cmp
je
mov
daa
sbb
mov
inc
cmpsb
in
pop
or
and
pop
stos
mov
inc
or
stos
mov
xor
push
outsl
inc
movsl
shr
mov
sub
mov
daa
or
mov
xchg
fstl
jp
cmp
mov
dec
push
daa
and
mov
push
mov
loop
out
lcall
inc
add
pop
add
xor
mov
daa
xchg
sub
rolb
nop
xor
and
sbb
sub
inc
pop
rol
or
movsb
pop
push
lret
push
insb
dec
pop
into
add
mov
sbb
std
cmp
inc
dec
in
loopne
xchg
xor
lods
shl
jge
mov
dec
add
ja
adc
jb
in
dec
inc
add
inc
push
outsb
adc
fwait
pusha
xor
mov
add
jl
dec
lret
leave
test
and
add
sub
pop
add
xchg
mov
repnz
cmpsl
adc
ret
xor
loop
jbe
aaa
adc
xchg
xchg
mov
fldt
nop
outsl
adc
pop
xchg
add
adc
in
pusha
push
or
mov
push
mov
pop
and
rcl
aam
push
pop
xlat
leave
inc
and
add
cmpsl
rcrb
shll
xor
adc
fsubs
call
add
adc
inc
jl
adc
push
xchg
jns
cmp
mov
mov
js
dec
push
rcll
pop
mov
insl
push
popf
adc
dec
test
je
xor
call
cmp
stos
sbb
or
push
and
push
insb
cltd
sbb
jecxz
or
imul
out
mov
mov
push
lret
fdivl
mov
nop
mov
sub
jo
sbb
cwtl
in
fadds
and
xor
cmpb
sbb
pop
jp
cvtps2pi
dec
outsl
sub
jecxz
xlat
sub
add
and
and
fidivrl
addr16
test
fdivrs
cmpsl
xchg
sar
add
add
add
add
adc
xor
arpl
xlat
dec
add
push
into
pusha
dec
xchg
daa
push
and
dec
lock
imul
push
inc
xchg
mov
cli
mov
add
and
repnz
inc
dec
mov
popl
dec
enter
xchg
movsb
jns
ss
xor
rol
test
add
adc
dec
push
cs
adc
loopne
mov
incb
push
inc
movsb
mov
or
push
or
sbb
inc
test
mov
adc
lds
inc
aaa
xchg
jmp
arpl
imul
pop
addb
jno
test
push
add
xchg
aaa
fwait
xchg
sbb
or
insb
ljmp
lahf
xchg
sub
jmp
inc
cmpb
int3
stos
and
push
lods
xchg
pop
fdivr
outsl
and
adc
pop
aam
xchg
cmc
ret
sbb
cmp
out
sub
jnp
jmp
add
xchg
imul
pop
cs
mov
or
jne
aaa
testb
inc
orb
adc
push
jge
or
cmp
xchg
cltd
xchg
or
repnz
loope
xchg
mov
inc
or
jne
jns
imul
roll
cli
jae
sub
inc
jne
aad
pop
xchg
mov
jns
sub
mov
add
out
push
aaa
inc
js
sbb
adc
sti
cltd
sbb
das
jmp
imul
aas
outsl
inc
adc
cmp
cmp
sub
mov
enter
mov
sbb
pop
test
pop
pop
sbb
jecxz
jmp
xor
add
and
push
scas
lahf
pop
mov
or
mov
lahf
xlat
hlt
push
rcrb
add
sbb
push
enter
das
andl
mov
rolb
xlat
sti
add
test
dec
adc
je
add
negb
adcb
jl
or
imul
or
sbb
push
test
push
pop
jp
jle
ret
lcall
pop
jns
mov
addb
add
and
fs
sub
add
and
pop
mov
sub
cmpl
and
hlt
mov
cmp
outsb
test
dec
cmp
jne
testb
sub
sar
sub
sub
dec
imul
xchg
sbb
add
xchg
stc
cmp
inc
xor
pop
add
jae
les
mov
inc
js
imul
push
repz
inc
gs
dec
iret
aaa
lock
push
mov
ret
mov
loope
fs
stos
mov
lods
jne
xor
mov
pop
adc
add
push
push
push
or
rorb
or
mov
xor
mov
xor
rorb
xor
mov
pop
js
jl
adc
sbb
cwtl
js
sbb
inc
subb
add
outsb
lret
add
sbb
sti
sub
or
pop
lcall
push
mov
nop
gs
cmp
or
nop
inc
cs
cmp
sub
outsb
xchg
inc
jle
xor
clc
cmp
xor
nop
and
hlt
xchg
push
inc
inc
scas
and
pop
xor
sub
xor
lgs
ret
xchg
in
adc
call
hlt
pushf
add
and
outsl
add
mov
xor
outsl
xor
xor
stos
sub
popa
lds
sub
push
lock
jl
xor
dec
or
cmpsb
xchg
xor
xor
adc
leave
and
sbb
bound
lock
ss
pop
dec
clc
jmp
cmp
sbb
and
and
xchg
and
or
rclb
lcall
insb
mov
add
jae
or
sbb
pop
inc
jmp
sub
je
xor
movsb
xor
sub
mov
lds
adc
sub
pusha
fmulp
cmpsb
cmp
sub
mov
movsb
push
xor
pop
dec
lods
mov
js
les
jb
and
fnstcw
shll
jmp
adc
jecxz
jbe
cmp
lds
dec
inc
sti
ss
movsb
add
movsb
mov
inc
xchg
iret
dec
imul
add
nop
sub
out
inc
push
inc
shr
mov
loope
or
adc
ret
inc
sbb
mov
cmp
mov
dec
testl
andb
push
push
stos
mov
movsb
pop
mov
je
push
mov
dec
test
fsts
sahf
and
in
outsb
mov
loope
je
and
nopl
sub
in
nop
inc
or
scas
inc
loope
push
ss
add
loopne
sub
add
pop
cmp
adc
add
hlt
push
or
push
push
push
sub
sub
ja
xor
push
popa
or
insb
cltd
daa
push
lods
sbb
push
shrl
pop
pop
orl
enter
adc
das
sbb
or
shrl
or
sub
orl
rclb
mov
push
mov
mov
and
add
call
rcr
xor
add
mov
sbb
jno
push
movsl
lock
add
mov
inc
add
mov
or
cmpsl
or
enter
inc
lods
mov
clc
iret
inc
inc
out
ret
adc
and
push
or
adc
sbb
clc
add
fdivs
or
out
daa
push
xor
or
add
jb
mov
arpl
xor
xchg
sub
into
inc
adc
in
ret
and
adc
mov
pop
add
test
ljmp
xor
jns
cltd
aaa
sbb
or
cmp
add
add
add
mov
add
sbb
ficompl
or
orb
inc
ja
pop
adc
push
mov
add
imul
rcrb
mov
pop
cmpb
jns
adc
fs
xchg
push
ret
or
and
adc
sbb
mov
mov
dec
push
push
xor
and
pusha
xor
push
lret
push
inc
imul
jge
xor
xor
adc
cmp
and
cmp
jle
loop
insb
inc
andl
ss
xor
add
sub
push
cmp
cmp
pop
sub
inc
mov
movsl
lods
push
mov
nop
cmp
test
dec
dec
jne
orl
rolb
insl
pop
sbb
les
push
fdivrl
aaa
adc
or
mov
jae
mov
mov
mov
cmpsb
dec
inc
add
dec
push
or
lret
jp
push
or
pop
dec
adc
or
add
and
negl
test
jmp
daa
or
mov
aam
pop
xchg
out
out
and
sub
mov
xchg
lret
testb
add
xor
mov
loope
cmp
sbb
xchg
sub
and
cbtw
sub
xor
test
arpl
push
mov
jnp
jl
jge
pop
aam
iret
imul
cld
pop
or
in
mov
adc
daa
jl
push
mov
dec
sbb
mov
and
and
xor
xchg
or
sub
push
aaa
rolb
test
pop
mov
jns
out
sbb
outsl
jne
cmpb
addl
nop
outsb
cmp
jbe
or
sbb
outsb
or
outsl
imul
jmp
sbb
push
add
shrb
movb
rcrl
lea
and
cld
ret
mov
and
sub
xchg
jmp
aaa
and
xchg
mov
fisubrs
and
test
scas
sub
inc
mov
cmpsl
jg
cmp
ret
and
add
loop
pop
dec
xor
dec
loopne
cs
pushf
adc
mov
loopne
pop
mov
inc
pop
add
push
stc
sarb
clc
fisttps
sbb
inc
sub
pusha
xlat
and
pop
adc
and
xor
lods
into
addl
xor
test
xchg
and
pusha
jmp
outsl
push
add
stos
xor
test
push
cmp
decb
add
add
adc
push
sar
xorb
jmp
cmpsb
shll
push
adc
xor
jl
add
and
ret
faddl
jne
js
xorb
cld
mov
ss
jne
repnz
sarb
cmpsb
adc
xor
push
sbbb
add
fidivrs
xor
xor
cmpsl
jno
xchg
sbb
movsl
pop
pop
ds
call
mov
lock
nop
mov
imul
xor
adc
sbb
cmc
mov
or
push
dec
lcall
fcmovnb
sub
rcrl
test
inc
adc
in
fs
jmp
dec
adc
xchg
ljmp
cmovl
sub
xor
xor
lock
ljmp
jo
mov
mov
cmp
lods
inc
daa
fdivs
push
lea
jnp
sti
xchg
xchg
mov
mov
rolb
cmpsl
pop
mov
or
rclb
adc
mov
jno
jo
movsl
dec
xor
sub
xchg
xchg
xor
lret
sbb
xchg
mov
dec
ret
or
movsb
sbb
push
jo
insb
push
sub
cmpb
aas
or
pop
imul
push
mov
jbe
pop
icebp
push
sahf
in
pushf
gs
cmp
mov
mov
test
imul
xor
add
loope
or
mov
dec
xchg
sub
pop
or
ret
mov
pop
dec
cmp
dec
add
cmp
add
inc
jmp
and
and
outsb
cwtl
xchg
sar
add
jge
test
xlat
cmp
lret
mov
call
xchg
das
adc
mov
icebp
push
cmp
add
lcall
ret
push
dec
xor
or
mov
xlat
rorb
outsb
addl
dec
ds
adc
cmpl
jne
add
aaa
jo
push
or
pop
orl
pop
stc
ret
pop
add
sbb
popa
popf
mov
cmp
mov
or
push
jo
push
push
adc
add
mov
dec
outsl
ja
test
cmpsl
aaa
loopne
pushf
cmp
jne
xchg
jmp
mov
cmpl
cmp
push
xor
nop
enter
pop
mov
cmp
rorl
nop
aaa
dec
es
push
lea
js
and
lock
add
movsl
subl
in
insb
pusha
adc
addl
pop
xchg
lds
xor
out
jp
orl
in
shr
lods
inc
jns
add
jo
push
rclb
push
loope
pushf
aas
push
pushf
icebp
inc
xchg
sbb
cs
mov
jb
inc
ret
adc
imul
jge
jb
inc
jns
add
xorl
test
mov
rclb
imul
mov
loope
jno
push
and
lds
test
cmp
fwait
sbb
push
sub
or
or
or
mov
push
sti
loope
or
fisubl
mov
add
jecxz
hlt
pusha
xor
mov
add
js
inc
shrb
imul
pop
add
mov
pop
fsubrl
arpl
jp
sahf
sbbb
dec
mov
xchg
rolb
jne
adc
mov
cmp
jb
push
pop
add
test
adc
mov
push
and
pop
cmp
cmp
inc
inc
and
ja
ljmp
mov
xor
out
in
dec
bound
add
adc
adc
xor
lock
inc
negb
jecxz
xor
sub
or
pop
scas
lock
xchg
adc
cmp
or
sub
test
pop
push
mov
mov
mov
clc
icebp
movsb
out
pcmpeqb
enter
xchg
push
push
lods
sbb
push
or
or
and
int
push
mov
cs
or
pop
inc
dec
cmpl
push
mov
or
add
ret
xchg
push
inc
or
inc
dec
inc
pusha
mov
mov
pop
notb
or
aaa
aam
scas
out
inc
jae
popf
insb
push
jne
cmp
pusha
dec
push
daa
jne
mov
subl
shll
xorb
and
xor
sbb
xor
add
cmp
sub
out
push
pusha
daa
ja
sbb
inc
fcmovb
addr16
or
jo
jmp
and
loope
sahf
adc
jmp
loope
add
push
fnsave
sub
pop
icebp
int3
mov
in
push
and
sbb
cmp
rorl
std
or
popf
andl
xor
mov
adc
fimull
or
or
mov
sub
push
sbb
in
test
insb
or
or
jmp
mov
dec
or
movsb
mov
pop
add
mov
xor
sbb
outsl
movsl
sub
pop
xchg
cmp
add
adc
add
and
pop
daa
fdivrl
sbb
jae
fs
test
pop
add
mov
mov
mov
and
inc
and
sub
imul
inc
sub
int3
js
stos
mov
pop
pop
sub
pop
jnp
push
inc
loope
add
add
mov
push
jl
filds
stc
fs
xor
mov
push
int3
shl
ja
or
popf
cmpsl
add
je
and
popf
test
mov
fsubrs
xor
fmul
inc
cmp
dec
xor
fs
rsm
sbb
sbb
inc
idivb
push
push
out
push
push
adc
test
loope
mov
inc
shlb
lcall
mov
add
sub
insl
cmc
cmp
or
nop
xchg
daa
movsl
jbe
add
js
adcb
push
lock
push
dec
clc
sbb
ds
int3
inc
and
inc
or
bound
jp
sbb
sbbl
and
dec
dec
inc
dec
push
inc
dec
jmp
roll
lret
push
dec
mov
push
and
in
mov
pop
mov
fnstenv
lea
sub
or
dec
rorb
cs
loopne
cmpsb
imul
adc
cmpsb
imul
jbe
loop
hlt
mov
inc
fisubl
add
pop
cmp
xchg
pop
popa
test
lea
shr
and
andl
pop
cmp
out
loope
movsb
pop
inc
push
dec
push
pop
enter
inc
dec
call
incl
inc
jmp
sbb
inc
mov
ja
dec
sti
xor
mov
stos
xchg
fwait
pop
shlb
xchg
sub
jmp
jo
or
outsb
test
xor
xchg
and
test
movsl
mov
sub
pusha
lret
insb
orl
adc
push
add
das
leave
adc
icebp
cwtl
hlt
das
dec
adc
push
inc
ret
orl
xorb
movsb
sub
sbb
inc
cmpl
jne
mov
popa
pop
test
fsubr
cmp
or
pushf
jmp
add
xor
sbb
mov
dec
into
sub
pop
testl
repz
xchg
les
les
jge
or
adc
roll
or
pop
and
lock
dec
jo
add
mov
insl
pushf
mov
xchg
mov
mov
int
cltd
add
xor
jne
and
mov
add
xor
lds
cmp
insb
mov
lods
lahf
fcoms
sbb
jge
sti
out
arpl
jo
add
fists
fs
sarb
push
push
mov
sbb
iret
push
push
add
sub
cmp
dec
jmp
and
add
and
loope
movsb
pop
xor
pop
or
cmp
sbb
push
jl
push
cltd
js
pop
mov
scas
xor
shlb
inc
pop
push
shl
fiadds
cmpsb
cmp
inc
loopne
add
push
fisttps
push
insb
push
mov
mov
cmpsb
jmp
jmp
and
sub
es
sbb
or
mov
adc
mov
ss
fwait
inc
xor
mov
xor
lahf
inc
mov
addb
orl
and
jne
scas
fisttpll
cwtl
ja
and
je
inc
xchg
sub
or
sub
xchg
lods
or
pop
mov
movsl
mov
sbbl
out
cmp
jge
pop
mov
dec
adc
and
pusha
sbb
ror
push
push
ret
test
sahf
or
and
and
mov
or
push
adc
movsl
movsb
push
xor
push
jg
adc
xorl
cmp
jmp
mov
sbb
imul
dec
fisttps
or
mov
mov
push
lea
sbb
rolb
lock
add
pop
jecxz
aas
movsl
sbb
cmp
xor
out
pop
push
add
rcrl
les
outsl
mov
inc
sbb
or
adc
in
test
dec
inc
cmpl
ror
cmp
je
divl
jp
hlt
jnp
mov
arpl
and
cld
mov
ret
jbe
mov
outsl
shlb
jo
nop
push
cli
sbb
inc
mov
fcompl
clc
fwait
rclb
scas
stc
mov
pop
inc
fimuls
adc
test
ja
dec
out
push
cmp
sub
or
mov
push
cmpsb
xchg
push
mov
stos
adc
sub
test
add
dec
scas
inc
pop
aas
rcrb
mov
gs
ljmp
pop
add
sbb
or
inc
or
xchg
or
in
adc
shr
push
fsubs
fistpll
pop
inc
aaa
lds
cmp
and
xchg
loop
sahf
pop
into
je
and
ds
call
jnp
test
in
mov
adc
lods
adc
mov
xor
sti
and
stos
popf
xlat
out
inc
sbb
push
adc
mov
inc
fisubrl
fbstp
push
add
pop
add
arpl
push
sub
add
push
and
or
mov
push
aam
movsb
pop
jo
xchg
sub
test
sub
daa
mov
pop
cs
or
push
mov
add
jmp
dec
push
js
cmpsb
xchg
fistl
inc
sub
dec
xor
mov
sub
xchg
imul
cwtl
pop
jns
jae
fistpl
push
or
rcrb
add
test
mov
rolb
inc
fildl
in
inc
jb
xor
pop
xchg
mov
sti
pop
sub
gs
push
jg
addr16
xor
mov
mov
popf
cmc
jne
and
push
loopne
or
mov
sub
add
pushf
popf
ds
xor
lds
shrb
add
ret
sbb
add
pop
push
mov
rolb
mov
enter
fcoms
push
add
xor
jmp
dec
push
mov
pusha
daa
or
std
pop
and
sub
push
daa
and
push
test
xor
fldt
aaa
push
lcall
lcall
add
jge
xchg
add
movsl
mov
push
mov
hlt
add
cld
xor
fwait
gs
sbb
add
es
dec
lock
sub
mov
xor
jae
add
or
nop
lret
shlb
xor
dec
sbbl
pushf
mov
and
test
pop
pop
dec
hlt
push
push
inc
sub
xlat
or
popa
insb
fsub
imul
adc
or
rorb
mov
jp
adc
and
push
mov
add
and
sahf
inc
dec
jmp
lea
mov
daa
push
in
int3
ret
sti
add
mov
and
fimull
dec
add
iret
sub
pop
jecxz
sub
xor
pop
cmp
ror
cmpl
cmp
dec
adc
pop
lahf
dec
xor
jge
jle
or
pop
push
sub
jb
test
movsl
pop
ljmp
inc
mov
cmovns
incb
hlt
jp
push
jnp
and
ljmp
out
lea
push
pop
das
pop
sbbb
push
jno
mov
test
xchg
xchg
sbb
xchg
rolb
popf
fwait
jmp
xor
sub
xor
nop
outsl
or
insl
push
lods
popa
add
add
movsb
mov
test
sub
dec
dec
adc
inc
enter
xchg
jl
mov
aad
adc
push
and
icebp
push
pusha
or
adc
rorb
push
ja
cmpl
xchg
rcr
pop
sub
push
je
add
inc
push
mov
into
push
hlt
jae
jmp
test
sbb
pop
ds
sub
outsl
test
push
xchg
sbb
dec
mov
xchg
push
inc
ja
and
negl
pop
or
testl
and
ret
jbe
add
pop
pop
or
jmp
xchg
jae
cli
pushf
push
mov
inc
inc
in
and
andb
dec
pop
out
xchg
hlt
dec
and
pop
or
fcoml
jecxz
iret
adc
fwait
or
cmpb
cwtl
rclb
enter
adc
push
xchg
loopne,pn
pop
add
mov
gs
out
rorb
inc
lock
and
sub
add
adc
stos
in
xor
sbb
cltd
aaa
jo
xchg
divb
insb
call
jb
or
pop
xor
inc
dec
pop
xchg
or
or
xorl
lods
jmp
inc
xor
mov
inc
loope
orl
loop
cmp
add
adc
jp
ficoml
lea
ror
and
xor
dec
fwait
cmp
dec
pop
into
dec
pop
inc
xor
ss
fs
xchg
adc
mov
adc
push
lea
inc
dec
scas
clc
dec
mov
dec
je
repnz
ljmp
leave
mov
inc
enter
mov
inc
sub
xchg
mov
mov
sbb
cs
mov
lret
sub
leave
js
test
out
and
add
inc
cmpl
mov
fs
or
data16
shrb
add
cmp
adc
mov
xchg
push
lcall
test
int3
and
sub
add
sub
or
adcb
popf
dec
add
cmp
dec
mov
outsb
push
repz
push
fnstenv
jae,pn
out
sahf
push
and
in
jecxz
stos
loopne
jmp
inc
xchg
andb
adc
addb
shrb
mov
jns
fisttpl
fprem
push
xchg
inc
inc
pop
dec
out
in
xor
xchg
shll
clc
push
enter
sub
int3
sar
adc
pusha
jmp
rolb
push
shrb
clc
movsb
rcl
adc
sarb
mov
mov
cmpsl
mov
jb
dec
lods
mov
je
push
lds
xor
outsb
add
jge
mov
adc
add
or
and
inc
and
mov
push
mov
inc
xchg
add
shrl
dec
and
push
jge
sub
mov
cmpsl
mov
dec
pop
cmpb
loope
push
scas
movl
inc
test
dec
lock
jno
push
imul
jge
dec
test
mov
jecxz
dec
jne
cmp
mov
xchg
pushf
push
adc
mov
fidivl
pop
aas
rorb
xchg
xor
cs
gs
lret
mov
dec
fsubrs
xchg
shlb
mov
push
out
in
add
loopne
dec
subb
add
add
jp
fisubl
cmc
or
inc
lcall
xchg
loope
ficoml
rcrl
and
mov
or
or
cmp
and
pop
xor
add
mov
aas
add
pop
aad
adc
add
inc
mov
add
in
mov
out
jle
sub
stc
or
lret
in
jge
or
xchg
cmpsb
fsub
cmp
jmp
cmp
jecxz
cmpsl
inc
ljmp
and
les
or
or
adc
dec
stos
loopne
paddsw
xorl
sub
xor
inc
scas
inc
pusha
add
push
daa
aam
mov
jl
fisubl
dec
sbb
lds
idivb
adc
xor
addr16
inc
pop
test
and
setge
pop
in
sarl
mov
mov
imul
je
mov
lock
je
into
adc
scas
xchg
imul
test
pop
in
outsl
dec
nop
push
xor
ja
je
leave
and
test
mov
loope
movsl
stos
sub
add
dec
and
pop
outsl
jmp
add
mov
pusha
pop
add
and
dec
inc
fucomp
fadd
push
dec
and
push
dec
cmp
movsb
and
cmc
push
jecxz
imul
jne
mov
lea
lods
push
sub
mov
aaa
shl
jo
sar
jns
mov
add
mov
mov
xor
addr16
xor
push
dec
or
sbb
mov
cmp
sub
scas
lret
cmp
pop
les
shll
inc
or
aad
push
aas
inc
pusha
ret
orl
divl
sub
pop
inc
pop
jne
mov
xor
rolb
lea
iret
push
sbb
mov
fstpl
xorb
dec
sbb
mov
outsb
pop
enter
or
cmp
push
scas
dec
cmp
popa
pop
xchg
add
nop
inc
add
ss
sub
lock
sbb
jl
dec
lock
sbb
inc
gs
orl
js
dec
aaa
jmp
in
sbb
pushf
inc
cmc
aas
and
xor
loop
or
mov
rorb
nop
xchg
aam
fnstsw
pusha
iret
xchg
jnp
push
jnp
pop
aas
in
mov
outsb
pusha
add
lods
lods
dec
pusha
bound
sbb
sbb
jno
pop
inc
or
dec
and
sti
je
push
inc
pop
xorl
sub
sbb
insl
pusha
xchg
mov
pop
sbb
adc
pop
in
mov
inc
das
inc
cs
or
mov
cmc
sbb
cmp
pop
dec
push
add
jne
mov
cmp
xchg
and
xchg
ret
cltd
sbb
rcrl
pop
add
std
dec
cwtl
popa
mov
inc
cmp
test
aad
sbb
imul
push
push
sbb
jl
mov
dec
pushf
pop
push
test
pop
or
in
pop
adc
push
inc
inc
sbb
push
cld
lds
add
jo
inc
xchg
add
mov
pop
movsb
xor
mov
je
xchg
into
loope
adcl
or
and
repnz
incb
jmp
or
mov
adc
imul
daa
ss
add
ds
jmp
sbb
jmp
xor
xchg
xor
adc
add
dec
xor
mull
sbb
mov
and
aas
add
bnd
loop
or
lahf
cmpsb
xchg
add
dec
dec
fnstenv
push
nop
aaa
stc
adc
xchg
jecxz
adc
or
adc
fstpt
loopne
inc
lea
jmp
sarl
or
jae
fwait
sub
push
ret
insb
inc
test
push
xorl
pop
cmc
sbb
sbb
addr16
popf
test
scas
jne
movsl
or
sub
pop
adc
push
adc
jb
jl
dec
mov
dec
iret
inc
or
rcrl
add
add
mov
movsl
add
cmp
cmp
daa
sub
fildl
or
andl
push
sub
add
loopne
and
in
cld
loopne
imul
xor
adc
inc
dec
and
dec
or
cwtl
or
jle
or
mov
add
cltd
cmp
add
stc
lods
mov
orb
cwtl
daa
lods
add
daa
mov
lea
sub
sarl
sbb
inc
cmp
or
gs
es
dec
dec
incb
jne
inc
sub
movsl
cmovae
add
inc
test
lret
add
fwait
movsb
adc
cmp
adc
xchg
bswap
jnp
shll
inc
mov
adc
add
and
push
jmp
clc
stos
cmpsl
push
shrb
cmp
xchg
int3
adc
cmc
cmp
cmp
inc
sbb
sahf
mov
out
xor
sbb
pusha
popa
push
jp
pop
jl
and
in
mov
mov
xorb
sahf
xor
popf
js
jae
inc
cwtl
or
lock
sub
pop
mull
ret
jno
shll
adc
jae
sarl
sub
and
push
add
cmp
push
fildl
es
or
xorb
add
or
stc
xchg
ss
push
inc
rcr
push
addr16
or
add
dec
mov
mov
adc
pop
ja
or
push
fldt
mov
cmp
push
mov
and
sub
das
jne
lods
and
xor
out
pop
push
jo
lea
pop
repz
and
and
adc
imul
dec
adc
push
pop
cmpsb
or
adc
add
repnz
mov
mov
nop
cmpsl
xchg
push
jb
stos
ds
neg
mov
push
rorl
jo
nop
mov
dec
push
test
lock
push
subb
inc
insb
push
cmc
movsbl
push
daa
daa
mov
ss
pop
addr16
dec
cmpsl
mov
sbb
and
cmp
adc
stc
mov
outsl
inc
pop
into
fdivrs
inc
aam
les
push
mov
or
dec
lret
sbb
dec
ret
movsb
and
push
icebp
imul
rolb
inc
cmovno
fwait
dec
push
push
inc
mov
gs
xor
push
xor
lock
cmp
or
adc
es
or
sbb
fdivrs
aaa
inc
lods
jae
add
js
ljmp
and
punpcklbw
mov
in
lds
int3
inc
sub
or
ss
jo
cmp
push
pop
pop
add
cmp
xor
or
push
je
loop
sahf
test
cmp
ja
sub
add
icebp
push
daa
call
out
test
cmp
add
adc
mov
rorl
jp
scas
dec
mov
std
ret
es
cs
jb
cmp
js
mov
push
xor
and
sbb
insb
mov
mov
les
dec
pusha
div
and
mov
xor
inc
fisubl
dec
sbb
xor
lret
lahf
adc
pop
or
add
xor
add
outsl
inc
ja
sub
push
jae
push
and
inc
mov
xchg
xchg
pop
pop
add
add
and
les
dec
je
ja
cmpsb
test
pop
mov
sbb
jle
xor
inc
imul
nop
sbb
ja
inc
and
and
push
pop
mov
roll
jle
mov
cltd
movsb
dec
mov
xchg
pushf
xchg
gs
jne
add
jnp
inc
fcomp
inc
outsl
nopl
mov
jle
mov
mov
nop
popa
or
je
shrl
inc
xor
inc
sbb
sub
std
xchg
lock
fs
dec
push
mov
aad
or
or
jge
pop
and
fisttpll
into
pop
int3
jmp
add
lods
inc
xchg
lahf
pop
dec
cmp
sahf
add
adc
subl
xchg
ret
aas
jl
adc
je
insl
pop
xlat
adc
ret
push
pop
leave
xchg
lods
adc
nop
fs
mov
inc
imul
adc
xchg
scas
cmp
pop
jg
push
cmp
or
cmp
xchg
jg
inc
andb
jecxz
sbb
test
daa
mov
add
pop
sbb
mov
sbb
pop
push
imul
mov
insl
mov
imul
popa
add
mov
insl
imul
and
add
insb
shlb
jp
add
mov
verw
or
arpl
xlat
add
ljmp
add
pusha
sub
xchg
fidivl
das
or
lahf
add
cmpsb
and
imul
mov
xor
sti
sti
dec
aad
mov
pop
pop
in
push
xor
push
imulb
or
ret
aam
dec
adc
mov
xchg
bound
loopne
jbe
cwtl
test
add
sbb
jne
mov
ret
fimuls
es
es
jl
sub
xchg
pop
cmp
mov
pop
push
mov
and
pop
mov
in
sub
and
out
call
data16
adc
mov
xor
pop
test
and
pop
insl
adc
test
jb
inc
push
dec
xor
jl
lret
xchg
or
xchg
or
xchg
add
in
inc
inc
sbb
xchg
add
fsubrl
mov
push
add
ret
pop
xchg
pop
jb
dec
dec
dec
dec
adc
andb
and
ss
pop
sbb
mov
xor
push
push
mov
xchg
fwait
dec
pop
push
cmpsl
dec
in
mov
dec
ss
push
in
mov
inc
cmp
sbb
push
lock
fs
inc
xchg
cmpsl
jo
dec
sbb
adc
pop
iret
test
xor
push
xchg
cmpsb
outsl
loope
outsb
pop
xor
adc
pop
sub
xchg
std
cmpl
cmpsl
xor
js
dec
into
insl
xchg
push
call
rclb
aas
insl
cmp
jg
pusha
mov
mov
sbb
out
jl
or
jle
jmp
cmp
pusha
clc
cmpb
sub
pop
int
push
inc
cmp
les
xor
setno
decb
or
push
roll
lea
push
cmp
cmp
cmp
cld
jne
sub
push
fimull
mov
mov
pop
and
add
cs
pop
cs
cwtl
shrb
mov
cltd
in
sarl
orb
and
xor
bound
divb
in
mov
sarb
add
popa
sub
pop
add
dec
inc
out
xor
insl
cmp
jmp
mov
gs
cmp
sub
jno
mov
cmp
sbb
adc
pop
inc
adc
dec
outsl
adc
aaa
imul
pop
iret
ret
add
imul
mov
fldl2t
jne
cmp
add
std
sbb
xor
adc
imul
adc
push
xor
sti
cmp
push
out
sbb
rorl
mov
sbbb
negb
sti
inc
xor
fwait
movsb
dec
and
sarl
pop
xor
inc
cmp
orb
jo
bound
mov
pop
js
insb
sbb
xor
jbe
mov
aaa
aaa
data16
dec
add
test
cmp
xchg
das
cmpl
sub
arpl
lahf
cli
in
pop
scas
push
push
xor
cmp
psubusw
dec
pop
push
or
jne
sbb
cmp
insl
imul
jne
es
dec
dec
shrl
xor
jae
je
scas
sub
divb
roll
dec
icebp
rorl
call
ret
call
movl
xor
rolb
mov
and
mov
mov
incl
cltd
rol
bound
insb
sbb
pop
xchg
pop
xchg
dec
mov
ret
mov
sbb
mov
ja
clc
adc
mov
sbb
push
xchg
and
adc
nop
adc
insl
enter
or
lret
sub
test
pop
enter
xor
dec
jmp
sub
xor
or
cmp
iret
and
test
xchg
out
dec
sub
pop
xchg
xor
pop
mov
cmp
xor
add
cmp
xchg
orl
add
mov
sub
lahf
mov
dec
push
pop
xchg
js
out
jbe
or
leave
mov
and
add
loope
jmp
cmp
lea
or
ret
fldt
pop
dec
inc
enter
xor
xor
sbb
sbb
inc
dec
adc
scas
inc
rcr
mov
shr
ret
sub
stos
or
pop
xchg
jp
or
cs
or
dec
adc
cld
jns
mov
cmp
and
sub
adc
push
movsb
push
test
xchg
jge
addl
sub
pop
mov
inc
int
adc
scas
inc
push
push
sbb
xor
imul
sbb
add
sub
inc
push
adc
sbb
sbb
xor
adc
add
rclb
mov
dec
jp
cmp
imul
sub
xchg
sub
mov
sbb
sub
je
or
out
repnz
add
mov
lahf
push
dec
pop
add
cmp
insb
js
daa
imul
in
and
inc
or
xor
lock
sub
bound
xchg
add
sbb
je
ror
inc
jp
rclb
add
adc
hlt
dec
pop
sub
inc
daa
cmp
push
inc
das
ret
dec
scas
cmp
push
xchg
xchg
jno
pop
cmovne
test
ja
cmp
imul
mov
orb
inc
and
cmp
les
jae
aas
mov
clc
push
adc
aas
cmp
fdivrs
adc
or
inc
imul
sub
and
pop
adc
jnp
call
dec
dec
sub
mov
pop
jl
mov
scas
mov
ds
adc
int
imul
push
orb
getsec
push
sub
imul
nop
add
sbb
out
lret
fs
mulb
jge
pop
adc
add
push
sbb
jecxz
popl
adc
nop
outsl
jg
loopne
add
je
sbb
add
cmp
sahf
or
nop
jb
pop
and
inc
arpl
jg
pop
xchg
mov
out
xchg
aad
test
jnp
jg
rorb
in
mov
pusha
testl
pop
lret
inc
enter
fisubrs
or
xor
push
push
orl
rolb
testl
cmp
cmc
push
movsl
dec
mov
mov
scas
ja
add
inc
fistpll
test
adc
sub
cmp
sub
ret
adc
or
int
cmp
lods
or
mov
jp
and
or
mov
jg
lcall
fistl
push
mov
inc
add
rol
xor
orb
loop
pop
or
lods
pop
sbb
mov
pop
adcb
push
jbe
je
lcall
sub
adc
mov
mov
mov
je
out
add
pop
jmp
leave
je
pop
push
mov
xorl
push
rdtsc
push
mov
outsb
in
sbb
push
xchg
and
sub
adcb
fldl
dec
aaa
or
cmp
sub
or
dec
jnp
xor
es
cmp
in
insl
or
push
jno
cmc
and
fimuls
jle
test
pop
sbbb
push
mov
and
sub
xor
push
cltd
fdiv
push
pop
sub
lods
sbbl
push
mov
sbb
push
in
push
je
test
enter
testl
shll
out
dec
inc
inc
xor
push
sbb
addl
inc
stos
add
ret
or
cld
sbb
push
pop
push
pop
andb
push
imul
xor
std
or
adc
or
stc
and
mov
cmp
insl
movl
adc
inc
js
test
add
xor
jno
je
or
sub
add
mov
pop
ljmp
test
aas
and
xchg
add
mov
pop
mov
scas
arpl
daa
or
mov
cmpsb
insl
in
daa
pop
testb
push
cs
pop
lea
mov
pop
or
lea
popf
or
cs
inc
ljmp
or
inc
fwait
repnz
jno
push
fadd
test
lods
movntq
out
inc
pop
add
add
int
mov
adc
negl
inc
dec
dec
dec
inc
dec
dec
icebp
add
mov
rcrb
and
ljmp
scas
hlt
jb
pop
pop
or
mov
or
jg
inc
sbb
out
xchg
mov
cmp
pop
pusha
mov
mov
cmp
mov
ljmp
and
sbb
inc
popa
popf
push
xor
adc
lods
add
add
cmp
pop
and
add
push
mov
add
or
pop
jl
dec
sub
int3
inc
movsb
inc
ds
mov
adc
or
cltd
cwtl
mov
scas
cmp
rorl
add
invd
jmp
cwtl
inc
rcll
xchg
ficoml
cltd
sbb
call
or
inc
dec
mov
mov
xor
cmp
mov
sbb
and
daa
mov
rorl
add
cli
aam
pop
fistl
lods
test
add
push
ja
movb
or
das
mov
roll
lods
ror
mov
xor
push
inc
or
pop
sub
xchg
or
sub
sbb
push
sbb
and
nop
outsb
enter
xchg
sbb
mov
dec
repz
repz
inc
aam
sbb
sub
bound
inc
adc
add
add
sbb
inc
out
push
movsb
jae
sbb
push
push
or
je
rcrb
jg
pop
dec
ret
mov
into
pop
dec
pop
test
cltd
pop
in
les
xor
cli
pop
insl
je
adc
leave
and
sub
and
aam
or
jl
and
nop
or
pop
dec
mov
or
dec
mov
mov
xchg
sbb
sbb
cltd
hlt
adc
cmp
push
jle
lock
or
ss
xor
inc
dec
and
pop
or
lea
sahf
add
fs
pop
xchg
inc
aad
or
scas
incl
aad
pusha
cmpsb
sahf
sub
jmp
xchg
pop
es
mov
adc
lods
addl
xchg
test
hlt
mov
ret
in
filds
mov
cmp
inc
cmp
xor
mov
icebp
cmp
mov
enter
mov
pop
fidivs
add
shrb
pop
or
int3
nop
cmpsl
jle
les
or
cmp
sub
aaa
fdiv
pop
pop
fsubrs
xchg
cwtl
fwait
inc
pop
ret
pop
xor
adc
push
adc
outsb
inc
aaa
adc
outsl
nop
push
sbb
push
je
push
or
and
sbb
xchg
jmp
xor
inc
cmp
adc
mov
mov
mov
jne
je
pop
je
mov
xor
push
pop
nop
out
mov
xchg
fwait
inc
inc
les
ficomps
adc
mov
lahf
imul
inc
add
test
jecxz
cmp
mov
nop
xorb
push
lock
mov
fs
add
and
popa
gs
or
inc
push
ret
xlat
das
dec
lock
icebp
out
xor
incl
int3
std
adc
jle
and
test
insl
push
pop
jne
add
adc
inc
and
mov
roll
adc
push
or
add
ret
clc
push
sbb
dec
lfs
push
lds
sarb
sub
addl
frstor
daa
sbbb
imull
rcrl
mov
shlb
js
push
shl
and
add
sbb
inc
add
xor
inc
push
fcomps
and
or
mov
mov
lods
mov
rorb
ficoml
adc
add
daa
and
and
test
rep
mov
nop
lock
icebp
jge
mov
lea
imul
pop
add
xchg
jecxz
frstor
mov
push
sub
sub
fsubr
jg
add
xchg
xchg
ret
out
rcr
push
mov
mov
mov
rolb
loop
mov
jnp
jbe
mov
mov
movsl
jge
mov
call
mov
lahf
ss
add
add
sbb
ss
sarb
daa
cmpsb
jg
out
cmp
mov
sub
fidivs
daa
add
jb
cmpsb
insb
imul
sub
rorl
add
xchg
pop
mov
mov
dec
fadds
lock
or
shl
andb
add
stos
je
sub
xchg
sbb
sub
in
xchg
or
fcompl
adc
fdivs
xor
jno
mov
ds
or
arpl
xchg
dec
jae
lock
imul
pop
and
xchg
sbb
add
add
sub
call
lcall
repz
iret
imul
dec
popa
sub
shlb
mov
and
out
mov
jl
add
mov
inc
sbb
cmp
adc
sub
push
cmp
adc
fbld
andl
xchg
or
adc
xlat
or
push
addb
mov
shlb
in
test
mov
cmp
adc
addr16
or
mov
dec
fdivs
aaa
add
and
sbb
sbb
sub
rorb
xchg
xor
push
jns
mov
inc
adc
int
push
cmp
and
or
sub
and
invd
mov
cmp
into
mov
jns
ja
add
dec
sbb
xor
cmp
cmp
insb
and
in
xor
pusha
sbb
cmp
ljmp
xchg
sbb
mov
xchg
js
adc
and
sarl
xor
ja
or
add
push
and
nop
int3
out
or
insb
outsl
ljmp
xchg
add
add
sub
fsubl
jne
cmp
cmpsb
movsl
gs
pushf
hlt
adc
popf
push
sti
out
sub
data16
jmp
push
in
xchg
je
imul
jo
jmp
sbbb
lods
and
adc
je
adc
imul
push
sbb
mov
dec
out
adc
movsl
test
cmpsl
loope
xcrypt-ecb
cmpsl
leave
add
test
jnp
les
test
mov
das
jle
cmovo
sub
fmull
outsl
adc
je
push
jbe
hlt
gs
cmp
mov
insb
sbb
push
cmp
ljmp
rcrl
test
push
aam
inc
test
xlat
push
xchg
shlb
mov
xchg
sbb
andl
test
add
subb
mov
xor
sbb
rcll
push
push
dec
scas
movsb
icebp
or
lods
mov
je
das
and
or
rolb
and
mov
pop
cmp
jp
loop
push
aaa
or
and
lds
aam
nop
and
insl
and
mov
mov
cmp
cmp
je
mov
cmp
jno
mov
ret
push
movsl
jne
or
push
scas
and
inc
adc
inc
mov
repz
push
xor
mov
call
mov
sarl
jmp
and
sub
push
xchg
or
dec
push
push
add
aad
adc
fucomi
cmp
jne
cmp
push
or
xor
fstl
push
xchg
or
aad
push
jge
shr
mov
cmp
fisttps
cs
mov
inc
cs
out
push
fistps
cmp
or
js
and
cmp
jmp
push
adc
pop
mov
fstl
push
push
xor
iret
add
cmp
js
cmp
cmpsb
clc
xchg
adc
adc
in
or
jne
jns
add
dec
mov
pop
jae
call
inc
js
je
in
imul
inc
push
insb
add
inc
sbb
jle
add
add
xlat
stos
loope
pop
enter
fwait
stos
inc
cmp
adc
adc
cmpsb
sbb
and
dec
sub
inc
pop
adcb
sub
mov
or
pop
shll
lea
mov
cmp
dec
sbb
sbb
loope
jl
mov
cmpb
xor
fs
mull
pusha
sub
mov
inc
sbb
test
pop
loope
das
cmovs
cs
dec
rcll
sub
das
lods
and
je
sarl
inc
add
adc
sub
call
fdivrl
xor
leave
add
fxam
dec
sarb
pavgb
dec
call
iret
fcmovnb
xor
pop
sbb
iret
fwait
ljmp
sbb
cmp
sahf
mov
cwtl
hlt
and
push
cli
sbb
gs
pavgb
sub
pushf
and
inc
sub
in
outsl
or
fwait
mov
xor
lock
lods
adc
or
pushf
nop
mov
mov
sub
rolb
dec
dec
insb
or
inc
insl
inc
xchg
rolb
pop
in
sub
mov
enter
jge
cwtl
lea
loope
ss
mov
adc
shlb
cmp
or
lea
lods
sbb
mov
mov
sbb
sbb
mov
nop
pop
inc
dec
sbb
jp
les
pop
sbb
nop
scas
into
mov
dec
adc
push
xor
rorl
lret
inc
sub
mov
shll
js
arpl
ds
or
sbb
mov
or
ret
lea
pop
insb
jl
fimull
fadd
or
fcoms
jl
repnz
lods
add
cmpsl
pop
aaa
push
jno
mov
and
xchg
lahf
adc
mov
push
pop
xor
push
add
idivl
idivl
adc
dec
jbe
push
repnz
scas
mov
inc
jmp
je
and
incl
xorb
inc
mov
and
cli
xchg
fsubr
or
mov
sub
adc
xchg
and
insl
outsb
fidivrl
loope
sbbb
outsb
push
mov
and
rorb
lahf
pushf
inc
daa
movsb
jne
sub
out
cmp
pop
cmp
and
pop
push
enter
dec
dec
xor
or
xchg
inc
adcl
or
mov
cmc
add
lock
clc
adc
mov
sub
fwait
inc
push
call
rorl
sub
mov
sbb
jo
add
dec
test
lret
pop
push
movsl
and
scas
shr
js
inc
test
push
jno
imul
rolb
call
pop
nop
adc
jo
mov
add
or
dec
rolb
sti
inc
insl
or
loopne
sbb
dec
lcall
jmp
and
leave
xchg
xlat
lahf
jp
and
pop
clc
adc
in
inc
ret
mov
add
bound
and
outsb
and
ss
or
xchg
shrb
jbe
lods
xchg
inc
sbb
push
sti
outsl
rorb
cwtl
je
test
test
xchg
rcll
pop
cmp
add
lret
clc
xor
pop
movsl
sub
and
pusha
das
pop
jnp
adc
adc
movsb
add
call
or
rol
push
pop
daa
cltd
sbb
ud2
cli
add
add
ret
push
mov
mov
add
pop
mov
cmp
dec
test
mov
pop
xchg
pop
in
stos
mov
jl
sbb
dec
mov
inc
dec
inc
sti
xchg
add
aam
cmpl
cmp
adc
add
addr16
test
cmp
sbbl
daa
jne
into
movzwl
movsl
cs
lds
pop
and
pop
mov
out
dec
leave
cmp
mov
dec
testb
lods
fs
xor
enter
repnz
insb
sarb
je
mov
xchg
montmul
cmpsb
add
adc
lods
sub
push
inc
or
jns
fstp
push
pop
mov
pop
inc
xchg
sbb
pop
mov
outsl
xchg
cmp
les
xchg
jmp
lea
popa
sbb
js
or
pop
dec
inc
sub
push
mov
sahf
out
xlat
mov
push
xlat
pop
mov
nop
es
clc
roll
push
sub
adc
inc
xchg
dec
nop
mov
iret
xchg
and
cmp
dec
icebp
mov
out
test
js
movsl
adc
sub
test
push
sbb
jmp
dec
stos
mov
mov
mov
pop
xchg
adc
test
fcom
mov
enter
xorb
int
or
dec
pop
mov
inc
push
insb
or
nop
iret
roll
and
loopne
nop
nop
ja
into
in
push
cmpsb
push
push
or
loope
xchg
and
mov
mov
xor
rclb
sbb
mov
jns
shlb
mov
xchg
push
or
nop
adc
cmp
dec
inc
pop
adc
ret
dec
je
nop
addr16
insb
add
or
add
pop
pop
push
jmp
cmp
pushf
subl
push
das
imul
pop
cmp
pop
jmp
popf
jo
adc
syscall
out
inc
inc
cwtl
pusha
outsb
syscall
addb
ret
and
or
adc
arpl
inc
add
clc
popa
mov
ret
popf
add
imull
xor
jb
push
sbb
mov
dec
sbb
lahf
test
inc
mov
mov
loope
movsl
imull
lds
pop
fadds
or
adc
and
inc
and
mov
add
repz
xlat
enter
dec
pop
mov
mov
jp
mov
mov
in
pop
xchg
ret
addb
push
sbb
out
xor
sbb
cmp
in
je
push
add
dec
jmp
dec
jno
push
hlt
es
jb
add
add
and
test
imul
daa
push
fnstcw
adc
test
inc
lods
fidivl
out
dec
shll
or
imul
push
and
xor
sub
dec
les
stos
adc
les
pcmpgtd
mov
mov
cwtl
call
xorl
es
push
data16
shll
aas
aam
add
lods
inc
inc
sbb
or
mov
pop
adc
and
add
andb
inc
cmp
adc
std
daa
lock
pusha
xchg
cmpsl
xor
inc
mov
sbb
rcrl
jne
loop
shrb
pop
lea
stc
imul
xor
imul
pop
adc
scas
lret
adc
mov
rolb
add
js
inc
fs
outsl
mov
dec
and
or
ret
mov
or
jge
sbb
add
scas
test
dec
mov
cs
or
es
xchg
jo
push
push
stos
mov
out
jne
cmp
add
jmp
mov
mov
push
jbe
mov
push
jmp
popa
inc
sub
nop
push
js
ficompl
shlb
sub
pop
out
or
add
mov
sbb
and
sub
mov
pop
sar
add
repz
mov
mov
dec
push
xchg
adcl
mull
call
xchg
mov
mov
xchg
clc
jecxz
xchg
jle
jne
lods
push
pop
push
add
faddl
mov
arpl
mov
jl
mov
dec
leave
mov
jl
adc
push
sbb
setbe
loop
dec
pop
sar
insl
sti
mov
clc
jge,pn
mov
sub
jl
cmp
xor
cmp
in
test
add
sarb
mov
movsb
xlat
inc
xchg
add
or
jmp
fisubs
test
dec
inc
loopne
lock
add
imul
xchg
cmp
mov
or
fisttpl
aaa
loope
ja
mov
push
push
flds
ja
xor
cmp
ret
sub
subb
xchg
orb
test
inc
and
daa
jne
clc
lds
repz
push
fwait
dec
jmp
cmpsb
fmuls
adc
push
call
les
mov
add
cmp
mov
in
jg
sbb
rolb
jo
or
ds
in
jle
movsl
movsl
jmp
pop
dec
sti
xchg
inc
push
pop
and
ret
add
cmp
pushf
mov
mov
adc
cs
jbe
cmpsl
push
fsubp
mov
in
icebp
clc
es
adc
jbe
fiadds
jne
mov
inc
insb
cmpsb
imul
inc
add
je
sbb
add
int3
push
pop
add
and
int3
lds
sub
nop
jne
push
movsb
or
pop
add
aas
jmp
inc
adc
and
ja
flds
in
xchg
inc
or
jmp
adc
pop
movsb
or
leave
lea
js
scas
mov
sub
test
and
jo
cmp
shrl
je
xchg
sub
push
adc
xchg
ja
clc
mov
push
add
pop
sbbb
and
pop
jge
test
mull
jge
xor
movsb
xor
icebp
cltd
pop
push
or
mov
mov
cwtl
js
jnp
or
in
push
adc
add
orb
pop
inc
cmp
add
in
movsl
aaa
test
xchg
mov
sub
int3
xor
pop
outsb
mov
divb
dec
xchg
ja
and
adc
hlt
clc
xor
andb
fwait
iret
or
xor
xchg
bts
adc
fmull
push
sbb
jo
or
icebp
push
shr
imul
push
xchg
in
xorl
stc
or
jbe
mov
int3
push
aam
sbb
inc
repz
sbb
inc
ret
cwtl
inc
mov
push
adc
dec
gs
mov
imul
mov
pop
shr
push
jns
insb
mov
pop
pop
insb
adc
test
add
pop
rorb
cmp
adc
mov
ljmp
insl
lods
dec
in
adc
sub
or
and
sub
lds
add
add
pusha
inc
loopne
adcb
insb
addb
mov
iret
inc
lods
rorl
fs
movb
sbb
mov
ror
sbb
push
pop
lods
and
imul
mov
bound
or
and
xchg
adc
xor
cli
cld
clc
or
imul
push
mov
xchg
lds
adc
xchg
push
bound
mov
or
inc
adcb
cmpsb
leave
lds
xchg
loopne
mov
in
dec
call
xchg
int
adcl
testb
and
fcmovu
fdivrs
loop
loopne
add
add
lds
mov
xor
pusha
inc
add
add
adc
imul
gs
cmp
inc
xor
bound
aad
push
push
ret
mov
inc
mov
lret
and
push
mov
mov
out
in
enter
pop
dec
mov
mov
adc
ret
lds
mov
js
cmp
out
sqrtps
and
ret
xlat
inc
add
push
mov
or
mull
fistl
mov
mov
fcoms
aaa
adc
inc
mov
pop
sbb
fadds
daa
mov
pop
cli
shlb
sub
and
fimull
adc
pushf
sbb
das
loope
in
or
or
or
push
or
inc
int3
push
mov
addr16
incl
push
imul
xlat
xor
jmp
adc
rcll
xlat
fsubrs
loop
fcoml
out
test
cmp
outsl
or
push
xchg
cmpsb
adc
outsb
sbb
cltd
adc
push
pop
mov
or
shll
sbb
inc
cli
test
fldl
or
mov
push
xlat
xor
fnclex
mov
insl
push
or
adc
adc
adc
adc
sbb
rcrb
add
mov
leave
bound
cltd
pop
jno
sbb
clc
xchg
pop
and
jne
push
rclb
add
sbb
imul
pop
xchg
dec
cwtl
sbb
cmp
push
adc
jg
pop
popa
popf
ret
jnp
pop
es
fcoml
ds
mov
addr16
cmp
icebp
test
inc
sub
mov
and
je
adc
and
xchg
cmpsb
mov
adc
sbb
cmp
mov
sub
mov
sbb
inc
je
or
aam
dec
rcll
push
sbb
rolb
or
mov
add
pop
push
incl
not
shrb
mov
lahf
ret
push
test
jle
into
and
xchg
in
movsl
addb
pop
mov
mov
jne
adc
cli
mov
sbb
dec
jne
add
xor
xchg
mov
ljmp
pop
push
ss
xor
cmp
and
popf
sub
dec
hlt
sub
fwait
shll
and
aam
xchg
and
add
cmp
or
stos
stos
imul
pop
sahf
inc
xor
stc
cmp
or
mov
stos
cmp
add
out
mov
mov
rolb
mov
clc
add
subb
and
out
mov
inc
daa
daa
popf
cltd
and
and
outsb
int
add
pop
outsl
ds
mov
insb
cmpsl
pop
scas
and
adc
sbb
sbb
outsb
mov
mov
leave
out
into
sbb
push
or
test
ljmp
je
push
js
aam
push
jne
xchg
push
sbb
pushf
jg
pop
cmp
std
or
dec
gs
insb
adc
mov
lock
fwait
insb
cmpsl
imul
ds
aam
xor
jb
mov
add
dec
mov
add
adc
sbb
and
xlat
push
add
adc
xor
mov
dec
pop
and
mov
mov
enter
sub
in
shlb
lock
lahf
xchg
inc
leave
inc
push
ret
or
or
insl
and
inc
xor
sti
nop
add
adc
pusha
pusha
add
or
mov
mov
insb
test
lock
adc
adc
pop
test
addr16
iret
inc
adc
mov
lods
lret
add
pushf
add
subb
insl
mov
outsb
shrb
push
notl
sbb
loopne
xchg
cmp
sub
aas
fidivl
pushf
adc
inc
rorl
rclb
sub
inc
ret
cmpsl
insl
sbb
add
arpl
enter
ret
push
addr16
jle
ret
xchg
add
and
loopne
sub
inc
and
add
es
ret
mov
xchg
inc
push
inc
cmp
inc
push
mov
sbb
cmpsb
mov
movsb
xchg
pop
dec
jle
sub
ds
xchg
jae
inc
cmp
sbb
push
dec
dec
rorl
add
mov
sbb
loope
mov
mov
jl
lea
xchg
movsl
fs
add
cmp
insb
lods
adc
adc
dec
and
xchg
jge
lahf
enter
and
int3
inc
push
outsb
inc
movsb
cmp
inc
inc
sub
pop
inc
pusha
outsl
adc
xor
push
pop
dec
insl
mov
fs
test
ss
inc
add
push
xchg
shrb
adc
push
mov
or
test
cmpsl
test
and
out
pop
mov
adc
sbb
sbb
sbb
push
or
mov
cs
out
paddsb
sbb
inc
inc
and
out
sbb
and
in
adc
scas
xchg
mov
adc
pop
sub
push
lret
cmovae
sarl
pop
call
cmc
rolb
fldt
enter
push
subb
push
dec
xor
xor
sarb
sarl
add
sbb
lods
test
mov
push
jmp
cmp
lods
xchg
cmpsb
in
adc
pop
pop
cwtl
aam
or
nop
dec
pushf
add
loopne
in
sbb
add
jns
pusha
add
aam
adc
push
push
pop
add
pusha
push
cmp
xchg
lret
dec
dec
dec
movsb
xor
push
jl
xchg
xchg
and
popf
pop
clc
ja
xor
cmp
je
negl
es
inc
js
inc
addr16
pop
inc
fs
dec
or
imul
dec
ljmp
ret
call
mov
xchg
pop
mov
jne
lret
push
push
inc
dec
pop
mov
loope
rclb
pusha
adc
pop
outsl
mov
push
fiadds
cltd
nop
mov
and
adc
add
lock
sbb
push
push
std
fimuls
jne
sub
sbb
in
in
xor
dec
repz
hlt
dec
loopne
push
mov
add
int
adc
sub
test
xor
pop
mov
fsubs
fcompl
pop
add
adc
sbb
shl
mov
movzbl
cmpl
jmp
mov
int
xor
adc
lods
and
and
lods
push
test
in
fildl
insl
enter
mov
cmp
or
dec
inc
push
enter
or
icebp
rcrl
enter
push
and
inc
or
enter
jne
js
shlb
push
les
mov
gs
jle
fnstsw
and
in
or
inc
stos
push
les
enter
outsb
das
push
push
add
pop
call
outsl
add
jle
or
and
rclb
dec
mov
rorb
sbb
or
out
sub
jae
jo
push
int
shrb
std
rcrb
pop
and
xor
shlb
notl
call
push
adc
adc
adc
aaa
movsb
outsb
push
or
dec
sub
rorb
and
mov
mov
js
push
add
decb
xor
addr16
jne
xor
mov
cmp
fistl
mov
jge
adc
sbb
add
add
adcl
test
hlt
adc
xor
mov
in
andb
flds
fs
mov
push
int
pop
dec
add
bound
int3
xlat
mov
cmpsb
pop
ret
add
push
push
subb
xchg
fsubrl
push
loopne
cld
add
add
orb
lea
dec
mov
xor
jns
lret
mov
pop
adc
test
dec
jp
push
dec
outsl
or
lret
and
jnp
xor
cmp
cmp
mov
xchg
xchg
lahf
sahf
pop
std
adc
add
stos
int
loopne
push
inc
push
gs
inc
shl
sub
jo
and
jge
sub
dec
xchg
xchg
inc
push
pop
aas
pop
mov
sarb
cld
pop
call
mov
push
xchg
sub
push
lds
imul
stos
outsl
ret
xor
in
add
inc
cmp
hlt
jne
mov
push
xchg
shrb
ljmp
add
pop
adc
push
leave
in
jmp
pop
add
jb
push
xchg
or
hlt
fsubs
test
xorb
add
mov
add
imul
sub
cli
or
cltd
movsb
inc
jmp
push
sbb
sbb
std
lret
and
adc
rorb
inc
pop
push
fisubs
add
dec
leave
push
js
mov
lea
shll
addb
rcll
or
push
rcrb
and
les
sbb
int
xor
inc
adc
or
cltd
add
jecxz
ret
or
mov
dec
mov
mov
jno
xor
cld
movsb
mov
jmp
fstpt
andb
mov
adc
lcall
add
shlb
push
inc
shlb
scas
out
insl
mov
sbb
sub
xor
mov
or
adc
add
jb
cmp
ja
pushl
ss
push
xchg
pop
push
or
or
push
fidivs
pshufw
jg
push
inc
pop
dec
jne
rcll
mov
lock
cld
gs
lods
push
xchg
dec
jne
sub
stc
dec
push
push
xor
add
je
or
push
or
add
push
push
rorl
sbb
lock
sub
aas
adc
add
push
cmp
add
jmp
xlat
mov
daa
sbb
mov
mov
stos
and
call
add
xorb
dec
dec
mov
pop
fdivrp
xor
popw
push
stc
add
fidivl
or
inc
xor
outsl
ja
sub
test
or
insb
or
cmp
push
pop
outsl
loope
mov
data16
xchg
daa
mov
dec
imull
inc
inc
sarb
add
jmp
lock
insb
mov
fiaddl
add
sbb
ret
inc
mov
dec
adc
xchg
mov
scas
and
mov
jo
dec
xlat
push
testb
sarb
push
not
fstl
pop
outsb
mov
ret
jg
cmp
dec
movb
mov
or
jbe
xor
mov
adc
cmpb
iret
sarb
add
dec
add
jns
cli
nop
test
out
fists
mov
mov
out
cmp
cmp
imull
xor
unpcklps
or
push
push
cmp
jecxz
outsl
lock
xor
js
add
xor
lock
xor
icebp
sub
push
add
fnstsw
push
add
mov
sbb
test
popa
xchg
test
and
adc
rolb
es
add
adc
push
imul
adc
fadds
xchg
shl
push
addr16
sub
fmull
cmp
loopne
hlt
xchg
test
push
sbb
cmp
repz
xor
push
int
mov
ja
iret
repz
not
loope
pop
movsl
testb
lret
push
push
rclb
mov
addl
rolb
ficoms
nop
mov
daa
push
add
js
mov
filds
and
out
or
js
xlat
aas
fnstsw
lock
fnstcw
jecxz
ds
repz
in
leave
roll
loop
out
mov
add
xor
jns
inc
in
ret
xchg
xchg
and
inc
cmp
jb
loope
rclb
dec
loop
fsub
inc
int
add
punpckhwd
insb
adc
sbb
mov
fildll
call
pop
in
or
inc
cmp
inc
push
push
cmp
fisttpll
push
sub
inc
sarb
push
lock
fisubs
jg
adc
inc
pop
push
cmp
xor
jnp
push
lods
push
xor
jl
cmp
jle
xchg
push
xorl
fs
push
leave
pop
pop
inc
js
int3
cwtl
xor
mov
add
call
dec
sub
or
xchg
mov
adc
or
add
mov
pop
mov
fs
jo
sub
and
lret
jns
add
mov
pop
call
pop
lahf
sbb
xchg
hlt
sbb
mov
sbb
nop
daa
repz
add
mov
add
pop
ja
in
clc
push
das
outsb
sbb
cmp
nop
imul
movsl
popa
in
shrl
pop
outsl
stos
enter
in
mov
mov
inc
scas
aas
in
loope
int3
dec
loopne
clc
lea
stos
enter
adc
xchg
mov
jns
cmp
jns
out
push
inc
js
and
mov
and
cli
sbb
adc
ret
xor
call
inc
adc
addr16
xor
adc
div
dec
call
inc
xchg
and
pop
jg
xchg
iret
or
pop
out
nop
add
js
adc
scas
loope
sbb
loopne
sarb
sub
dec
and
mov
ret
mov
ffreep
mov
fs
jne
add
dec
adcb
inc
out
aam
lret
cmp
or
push
mov
and
push
adc
pusha
pop
test
sbb
in
sub
add
inc
push
fs
or
pop
pop
test
out
sbb
or
adcb
cltd
lcall
into
push
sub
push
fildll
fdivs
mov
ret
das
aam
sub
enter
pop
push
inc
adc
mov
adc
dec
jo
add
push
pop
jo
inc
jno
fsubl
loopne
add
pop
push
loopne
mov
xor
sarb
adc
movl
cs
jbe
fs
and
xor
ljmp
sub
jmp
mov
or
cmp
or
mov
inc
push
ja
shlb
or
pop
and
test
fmuls
mov
and
fs
push
add
add
push
fs
xor
dec
push
cmp
cmp
insb
das
xchg
adc
lret
out
and
fsts
add
jb
cmpsl
adc
mov
mov
xchg
cs
aaa
pop
add
lods
add
xchg
and
inc
aad
add
sub
psubusb
shrb
fistpll
fwait
das
add
ret
mov
decb
add
push
seto
xor
imul
rcll
in
add
dec
sbb
in
hlt
xchg
cmc
sbb
sahf
in
push
cmp
push
pop
jmp
mov
cmp
in
dec
push
andl
cmpsl
add
pop
mov
in
xchg
mov
call
add
es
pop
loop
test
mov
add
push
mov
cmpsb
or
leave
stos
imul
jle
adc
shrb
dec
in
leave
test
nop
adc
das
or
mov
inc
xchg
stc
sub
sub
fwait
insb
ret
rcrl
or
sbb
cmp
addl
gs
mov
jl
pop
push
or
insl
hlt
sbb
js
xchg
ficoml
testl
lea
out
mov
out
mov
movsb
repnz
inc
jl
xor
fs
push
das
daa
sub
mov
pop
int3
push
mov
jne
ss
imul
test
push
xchg
mov
dec
xrelease
dec
lcall
enter
popa
and
push
call
mov
movlps
out
hlt
xchg
mov
fimull
mov
call
and
xchg
lcall
in
sub
je
aad
sbbl
push
jg
ret
shll
pop
bound
xor
push
sub
mov
push
inc
jg
dec
mov
xorb
shl
jmp
xor
icebp
inc
push
fcomps
and
jb
xor
add
and
adc
lea
push
mov
dec
cmp
or
lock
roll
in
int3
aam
xchg
dec
inc
mov
sub
xchg
js
sub
mov
popa
and
add
or
dec
add
mov
sbb
lcall
sbb
adc
adcb
add
pop
push
pop
daa
lock
adc
mov
filds
test
lods
sarb
loopne
nop
push
das
dec
pop
lahf
les
inc
iret
iret
mov
test
dec
sbb
inc
aam
sub
xor
scas
or
aas
dec
dec
or
sbb
jl
push
fdivs
sbb
or
in
ret
add
nop
das
imul
adcb
aas
inc
adc
sarb
jb
nop
mov
or
mov
xor
inc
sub
mov
inc
jb
pop
in
repnz
jno
lds
dec
orps
and
cmp
repz
rep
xor
mov
push
es
dec
leave
scas
scas
insb
movsl
pop
stc
sar
inc
addb
adc
imul
hlt
push
lods
cmp
dec
mov
mov
addr16
stos
xchg
add
hlt
xchg
or
add
jbe
nop
imul
mov
cld
mov
push
sub
jne
sub
mov
test
call
mov
jne
adc
and
mov
int
in
push
push
movsb
mov
test
add
into
clc
ljmp
gs
xchg
mov
imul
xchg
das
test
pusha
fistl
sbb
pop
mov
pop
cmp
aaa
dec
outsl
popa
xor
xor
je
ja
adc
test
ds
psraw
ficoms
inc
pop
jmp
dec
outsb
adc
imul
jne
not
lea
out
mov
sub
or
mov
sub
push
add
aas
push
shl
aam
sahf
loopne
lret
mov
mov
out
mov
pusha
mov
push
jne
cmp
sub
sub
fwait
dec
sarb
das
clc
icebp
pusha
and
nop
arpl
jo
inc
cmpsb
mov
imul
dec
int3
int3
and
inc
mov
xor
idiv
dec
push
lahf
out
notl
add
xchg
inc
fcoml
inc
cs
ficoms
pop
aaa
in
pop
push
cmpl
pop
jb
sete
inc
cmp
dec
sbb
jle
jno
mov
mov
adc
outsb
pusha
scas
cmp
sbb
sbb
xor
dec
dec
sbb
mov
mov
lock
and
add
and
sbb
and
mov
add
pop
loopne
xor
das
sbb
pop
andb
and
insb
xchg
sbb
or
les
pusha
lea
fs
mov
cmp
rcrb
or
cmpb
leave
sub
or
add
nop
xor
jmp
xchg
lea
inc
push
fs
cmp
fs
push
in
xchg
mov
push
les
mov
mov
cmp
nop
add
xor
xchg
leave
xor
add
enter
inc
push
fs
sbb
hlt
push
and
stc
cmp
jnp
testl
repz
repz
scas
mov
lcall
clc
out
ds
jecxz
stc
aad
sahf
out
sahf
stos
mov
adcl
sub
cmp
out
mov
pushf
test
iret
jle
stc
cld
or
push
iret
repz
and
cmp
out
ds
and
mov
ret
ds
repz
fucomp
testl
mov
jns
out
arpl
or
aaa
insb
roll
ss
adc
cs
fisttps
push
sub
sbb
xchg
dec
call
ss
mov
sub
mov
push
aaa
pop
enter
cld
rcrb
adc
jno
les
cmp
enter
add
roll
ficompl
sbb
pop
add
decl
mov
mov
push
rcrb
jns
daa
inc
or
add
clc
or
pop
repnz
push
push
inc
and
fsubl
out
in
mov
sbb
test
nop
inc
pushf
or
addl
fs
pminub
adc
mov
jl
cwtl
bound
inc
sub
div
ds
pop
in
pusha
add
add
sarb
sahf
imulb
pushf
adc
insb
inc
jo
repz
pop
js
cmpsb
or
inc
into
verw
pop
or
jle
test
dec
sub
mov
push
out
jl
mov
and
xor
clc
rclb
bound
and
pop
add
fsts
mov
push
shll
xor
xor
cmpsb
add
inc
adc
stos
push
or
inc
daa
aam
mov
cmp
lods
sbb
mov
frndint
lds
movsb
jae
loope
mov
mov
xlat
pop
les
mov
imul
out
out
add
xchg
addl
lahf
add
pop
push
rolb
dec
daa
mov
and
lea
pop
mov
insl
mov
lods
scas
daa
add
or
push
cmp
mov
inc
daa
jl
cmp
dec
or
adc
shlb
pop
adc
push
dec
jp
adc
ffreep
clc
inc
pushf
jge
cmc
cmp
jl
cmp
div
mov
jae
pop
fmuls
and
stos
and
xor
aas
dec
call
dec
and
add
lahf
test
loopne
incl
adc
xor
andl
pop
sbb
jns
loopne
jecxz
sub
adcb
add
ror
nop
xor
or
cmp
xchg
sbb
leave
mov
cmp
cmpb
xchg
stos
adc
mov
push
cmpsb
in
lret
and
es
lods
lock
sbbl
push
aas
clc
jo
xchg
roll
in
lea
jnp
xorl
pop
add
aaa
testb
push
addl
adc
add
popf
push
push
mov
xchg
imul
fidivs
add
inc
adc
and
movsb
test
pop
add
mov
mov
andb
dec
mov
repnz
pop
pusha
and
dec
cmc
add
mov
lock
add
add
adcl
test
dec
ljmp
adc
lcall
shll
sub
fisttpl
push
dec
or
pop
out
scas
inc
push
jl
sbb
cwtl
or
std
inc
lea
popa
inc
fimull
pusha
sub
fisttps
sar
mov
mov
inc
sbb
dec
dec
adc
rolw
adc
or
call
inc
mov
push
adc
cmp
xor
cmpsl
rorb
xorl
cwtl
inc
jnp
push
ret
lret
decl
pop
imul
jecxz
bound
jno
jne
jge
daa
jge
lock
cwtl
pop
data16
fs
push
gs
and
fnstcw
outsl
inc
push
cltd
test
mov
jge
sbb
add
out
push
movl
imul
xchg
insb
in
xchg
dec
rolb
jo
add
mov
inc
leave
mov
dec
xor
repz
mov
movsb
adcl
out
pop
add
lea
add
bound
adc
shlb
out
nop
repnz
dec
adc
or
std
mov
jle
add
das
in
push
addr16
dec
jecxz
cmp
dec
dec
jp
hlt
addr16
cmp
mov
inc
jg
add
pop
add
lods
cmp
jne
rcrl
rolb
inc
mov
push
and
xor
leave
dec
jmp
or
cltd
add
dec
inc
add
xor
mov
pop
call
inc
aas
sar
inc
pextrw
or
subl
fists
insb
cli
push
mov
mov
mov
lods
add
add
pop
jmp
jl
mov
into
insb
and
pop
mov
push
enter
or
jns
or
xor
je
clc
fninit
push
loop
inc
jg
sub
sbb
jg
clc
or
mov
roll
ret
cmc
pusha
pop
mov
push
pop
pop
test
jbe
or
mov
lods
add
lea
adc
mov
adc
xchg
xchg
fdivs
mov
clc
adc
rcrb
lock
mov
les
roll
icebp
sub
jecxz
mov
jo
xchg
cld
mov
add
add
sbb
or
sub
and
xchg
push
rolb
and
es
xchg
jge
rorl
andb
dec
jl
mov
jb
or
add
scas
jne
add
add
nop
jl
dec
sbb
jo
or
sbb
adc
and
rclb
out
push
dec
adc
mov
xchg
or
out
and
or
arpl
cltd
adc
or
xchg
mov
jle
cwtd
push
bound
testl
mov
mov
in
add
and
sbb
or
xorb
cmpsb
mov
pop
push
fsubs
scas
sbb
jl
hlt
ret
rol
addl
notb
xchg
into
or
xchg
inc
dec
mov
dec
dec
sbb
adc
pop
addb
bound
mov
cmp
scas
jnp
lods
sbb
mov
and
mov
pop
inc
cmp
in
arpl
sub
inc
fldt
pop
jno
xor
aaa
inc
outsb
cmp
je
inc
cmp
jne
mov
jmp
push
cmpl
add
addl
movsb
cli
mov
nop
clc
and
add
or
xchg
add
fadd
pop
push
adc
mov
cmp
and
fistpll
mov
and
cmp
cs
popf
mov
scas
add
adc
mov
das
cs
movzwl
outsl
decl
sbb
mov
or
or
xor
mov
ud2
arpl
push
mov
sbb
sub
pop
ret
out
adc
das
dec
adc
aam
inc
add
or
push
push
ss
test
push
imul
adc
cmp
int
inc
sbb
lahf
jnp
and
and
lock
loope
je
repnz
push
and
pop
pushf
cmpsb
movsl
mov
lock
pop
lcall
pop
inc
ds
mov
add
shrb
aad
fcomps
push
ret
inc
cmp
in
je
lods
in
dec
pop
pop
movsb
xchg
pop
and
inc
jp
push
in
movsl
pop
and
xor
pushf
xchg
and
imul
push
mov
cwtl
decl
adc
mov
cmp
ja
sub
jp
add
inc
cli
outsl
ret
mov
add
dec
jb
xor
add
pop
adc
mov
std
and
lea
imul
ret
std
std
lods
cmpl
cmp
inc
lahf
mov
sub
insb
mov
je
hlt
adc
fs
dec
push
pop
adc
scas
mov
sub
mov
add
dec
sub
dec
nop
mov
ret
pop
cmp
ljmp
adc
or
adc
jle
jmp
sub
adc
pop
mov
hlt
jmp
mov
mov
ja
fisttps
add
dec
je
jmp
scas
add
jmp
adc
xorb
adc
and
mov
adc
fidivl
sbb
inc
adc
push
push
ljmp
mov
jne
xor
hlt
movsl
or
loop
aas
mov
push
dec
add
loop
test
test
cli
cmp
je
pop
ja
pusha
inc
sub
and
cmpl
and
xor
cmp
pushf
add
stc
inc
cmpsl
clc
jns
lock
add
cltd
adc
mov
cmpsl
add
mov
mov
xor
insl
or
rolb
imul
add
xchg
ja
daa
nop
mov
mov
inc
test
push
add
rclb
or
pop
fdivl
and
jne
jns
adc
call
jmp
push
inc
and
js
sub
fistl
dec
xor
inc
and
daa
jnp
add
enter
outsl
dec
adc
movb
inc
fistpl
call
mov
mov
mov
jb
jmp
inc
or
sub
pop
pop
mov
xchg
add
mov
mov
std
or
jbe
mov
scas
std
adc
inc
aad
adc
scas
pop
lock
movsb
xor
pop
mov
mulb
dec
fisubs
inc
rolb
xor
inc
jns
xchg
pop
xor
inc
nop
xchg
cld
addr16
pusha
dec
pop
testl
or
mov
adc
or
cmp
inc
ret
add
adc
xor
pusha
adc
outsl
push
loope
daa
pop
xor
and
pop
mov
shrb
setns
push
add
push
cmp
or
adc
pop
ret
pop
or
js
push
xor
push
and
and
nop
fcoml
sub
add
das
add
inc
cmp
add
dec
sbb
hlt
dec
psubb
test
cmp
and
sub
xor
out
inc
xchg
add
mov
scas
mov
leave
popa
insl
xor
enter
adc
sbb
and
inc
mov
or
jae
lods
je,pn
add
sbb
bound
lcall
pop
xor
sub
loopne
test
popf
pop
dec
addr16
clc
clc
xchg
push
sub
scas
adc
in
push
sbb
dec
and
mov
cli
outsb
mov
pop
dec
push
stc
int3
xchg
push
movb
out
add
lods
subb
xor
inc
hlt
jne
dec
rcll
adc
xlat
dec
mov
mov
inc
inc
cmp
rolb
jno
loopne
shll
mov
in
imul
adc
jns
sbb
pushf
inc
sub
or
sarb
adc
fsubl
or
movsb
pop
lret
gs
dec
fdivrl
or
push
push
loope
inc
repnz
sbb
cmp
lock
jno
rcll
adc
xor
fsubrl
pop
sbb
shr
add
or
mov
subl
adc
daa
add
ljmp
enter
mov
mov
inc
mov
pop
inc
xorl
insl
inc
push
xor
sub
int
adcl
daa
mov
lods
push
subb
xor
push
ret
flds
lcall
adc
psubusw
xor
sbb
dec
das
dec
sbbl
lods
mov
test
sbb
push
or
xchg
mov
pop
xchg
out
xchg
jmp
or
and
add
jl
rcll
add
mov
out
out
sbb
ss
inc
out
add
out
mov
mov
jbe
jmp
repnz
mov
or
push
ss
mov
mov
adc
pushf
loope
mov
inc
icebp
jbe
mov
jns
or
push
push
push
data16
add
push
add
mov
movsl
sbb
and
out
sbb
cwtl
sti
ljmp
test
orb
sti
outsb
adc
pusha
aam
mov
xchg
mov
ret
inc
ror
mov
dec
sti
out
cli
xlat
aam
inc
ds
sti
pop
shr
inc
fs
shlb
xchg
ud0
mov
mov
ja
cmpl
rcl
sub
incl
sub
lea
mov
xorl
adc
adc
ljmp
or
lods
or
push
mov
xor
and
test
inc
push
psrld
sbb
push
and
cli
es
clc
add
lret
movsl
into
pop
cmp
arpl
sbb
aas
stc
mov
sbb
pop
movsb
cmp
enter
mov
jb
adc
push
in
out
xor
push
lods
jne
or
or
inc
add
sub
add
jl
add
cmp
push
push
dec
push
jne
mov
lds
pusha
dec
inc
test
push
rorb
lock
jne
loope
adc
add
add
push
add
adc
mov
inc
std
sub
mov
sub
push
mov
jp
rolb
or
xor
push
inc
push
sub
andl
bound
mov
push
push
stc
cmpsb
pop
outsl
dec
movb
mov
mov
loope
ss
dec
mov
fistl
pop
pop
or
and
xchg
push
inc
sbb
decl
leave
mov
xchg
lret
inc
pusha
out
push
and
xchg
inc
and
das
add
mov
movsb
inc
aas
enter
movsl
popf
cmpsl
cmp
enter
cltd
mov
push
xchg
rorl
sub
in
dec
push
enter
xlat
push
std
popa
je
jbe
dec
aam
pop
cmpb
mov
rol
mov
je
sbb
or
cwtl
adc
xchg
sub
lea
int
jae
mov
jne
add
sbb
sub
lods
jge
inc
add
adc
or
pop
adc
ds
push
bound
inc
addl
add
sub
sub
popa
loope
movsl
jns
cmp
or
pop
inc
sbb
lods
or
cwtl
push
and
and
and
sbbb
add
sahf
push
sub
mov
sbb
and
inc
movsl
push
pusha
xor
cmp
xchg
outsl
test
or
das
mov
or
mov
xor
popf
inc
pop
adc
xchg
or
mov
inc
loopne
stos
xchg
rcl
jno
cmpsl
jo
jo
jge
dec
sub
add
or
add
clc
clc
sub
ds
mov
inc
xchg
mov
cmp
pop
cmp
adc
or
pop
and
mov
jl
push
pop
mov
mov
cmpsl
or
pop
incb
adc
fildl
mov
repnz
fstps
fwait
inc
add
pop
add
jmp
ljmp
or
fcmovnu
stc
dec
push
inc
in
daa
adc
inc
add
inc
jg
pop
add
mov
sahf
add
adc
xchg
enter
cmpb
add
mov
jae
inc
jne
sbb
and
js
dec
add
popf
mov
mov
gs
icebp
sbb
fildll
cmpsl
shrl
adc
jnp
and
push
push
xorl
aad
cmp
add
jl
push
pushf
or
ret
sarl
fdivs
dec
cltd
scas
or
adc
out
aaa
rcpps
shll
imul
lahf
inc
xchg
mov
popa
cmp
jmp
sbb
outsl
imul
adc
and
pop
mov
jg
mov
lods
dec
pop
ja
sbb
mov
or
jmp
cmp
fstpl
pop
clc
and
push
inc
js
add
push
push
or
mov
mov
icebp
or
ss
pusha
pushf
sbbb
jnp
add
rolb
pop
fisttpl
rol
inc
lea
push
mov
call
xchg
add
xor
jecxz
dec
shrb
out
cmp
mov
pop
mov
cmp
xchg
pop
pop
mov
aam
ret
and
sub
sub
scas
nop
xor
les
stc
ror
add
xchg
jns
imul
sub
push
push
cmp
out
mov
jmp
daa
pop
loopne
pushf
out
sahf
into
mov
shlb
add
jo
push
sbb
inc
lahf
lock
lea
mov
xor
push
js
xchg
or
add
cbtw
push
pop
loop
sbb
adc
inc
mov
sbb
popa
andb
data16
add
pop
adc
cltd
or
xor
dec
pop
cmp
and
andl
popa
cmp
mov
test
sbb
outsb
sub
sub
fcoms
inc
ret
cmp
imul
arpl
push
sbb
sub
cwtl
je
dec
dec
ss
and
push
nop
testl
sbb
jae
xor
cmpsl
inc
sbb
cmp
out
lock
sub
adc
dec
dec
sub
and
adc
leave
jg
std
xchg
dec
pop
ja
mov
xor
dec
pop
rclb
or
sub
mov
rorb
les
push
xchg
jne
shll
loope
sub
std
inc
cmp
andl
aam
loope
insb
arpl
fistl
xchg
negl
sbb
ret
add
sub
mov
push
push
inc
bound
fsubr
add
dec
pushf
or
adc
repnz
or
inc
lock
push
cld
sbb
add
sub
sub
mov
push
adc
mov
jge
pop
sub
jg
or
lret
pusha
add
outsl
outsb
outsb
inc
test
inc
mov
lret
lret
push
arpl
jne
mov
or
sbb
fldl
cmp
jno
and
je
push
outsl
adc
and
push
ret
out
hlt
enter
inc
and
pop
daa
insb
mov
push
jb
and
aam
repnz
dec
pop
cs
adc
stc
aad
fucomip
repz
adc
lds
mov
cmp
in
push
add
sub
and
adc
cmc
xor
ret
lfs
sbb
loopne
out
mov
cmc
add
scas
mov
decl
das
or
mov
push
jl
insl
ljmp
in
adc
adc
inc
test
jge
hlt
pop
cmpl
pop
add
mov
gs
pop
and
jle
pusha
arpl
xchg
push
lret
pop
pop
mov
jnp
push
dec
fs
inc
out
add
psubb
lcall
mov
enter
sbb
and
imul
mov
ret
and
lahf
xor
test
xchg
into
movsl
adc
dec
xchg
bound
jnp
mull
mov
nop
adc
push
push
jnp
orl
adc
decl
jb
fnstenv
pop
pop
loope
xor
sbb
sub
mov
inc
popa
movsl
and
jne
add
xor
test
push
lock
mov
int3
pop
inc
lock
sub
ret
or
loopne
and
daa
lcall
fsubr
das
imul
leave
sbb
or
in
addb
add
je
fisubl
ret
push
push
jne
inc
sbbb
mov
add
arpl
jnp
lret
mov
pop
push
mov
jnp
sub
push
iret
push
popa
pop
lods
imul
hlt
add
fildl
inc
push
push
dec
adc
fsts
jl
inc
aas
pop
lods
movsb
cmp
js
leave
or
or
outsb
xchg
fsubl
sbb
les
mov
xchg
xchg
cmc
shll
adc
and
insb
pop
jnp
push
and
inc
cmp
push
leave
sbb
incb
dec
sub
imul
shll
pop
cwtl
sub
jl
out
adcb
add
loope
mov
mov
outsl
mov
mov
mov
int
sbb
and
push
inc
aam
in
sbb
cs
cmc
insb
xchg
pop
sbb
lods
pop
adc
xor
imul
sub
and
jmp
pusha
push
popf
test
pusha
shl
cwtl
aad
rcll
add
adc
push
add
test
xlat
dec
sbb
ret
cs
repz
cmp
cmp
adc
xchg
mov
loope
dec
cmp
and
pop
enter
clc
xor
jecxz
dec
lods
add
aam
mov
sub
adc
or
pop
push
dec
push
push
ja
xchg
je
insl
addr16
push
lock
add
sbb
jmp
or
xor
push
push
or
push
stc
call
scas
int
adc
leave
loop
adc
stc
data16
push
in
dec
rcl
movsb
pop
sub
push
movsb
pop
inc
or
dec
cmpsl
add
adc
enter
sbb
stos
push
pop
xor
leave
in
push
fwait
add
and
mov
mov
mov
cmp
sub
add
sbb
pop
dec
stos
push
xchg
add
sub
xor
int
mov
jmp
push
imul
xchg
or
aaa
cmp
popf
or
rorb
test
pusha
cmpsl
sbb
pop
adc
in
popa
mov
imul
add
jo
inc
or
and
adc
push
push
dec
sti
push
lea
adc
dec
adc
setae
mov
mulb
scas
push
data16
pop
pop
dec
icebp
mov
or
pop
add
xor
and
push
call
mov
adc
add
mov
or
jo
jmp
jge
mov
sbb
je
add
nop
add
mov
mov
push
jmp
mov
adc
cs
das
dec
outsb
movsl
lods
inc
pop
mov
fucomp
mulb
push
ds
call
aaa
clc
bound
pop
sub
repnz
ficoml
aaa
popl
push
pop
sub
push
inc
xchg
or
push
cmp
inc
sbb
fcoms
sbb
fcompl
sbbl
js
out
or
mov
sub
cmpsl
rorl
je
popa
cltd
cmp
movsl
nop
andb
test
dec
push
mov
jmp
pop
lods
aad
mov
mov
or
data16
xchg
sbb
mov
mov
repz
inc
lods
movsb
jb
sbb
or
cltd
push
push
or
sbb
cmp
mov
loopne
add
aam
or
scas
xor
loope
mov
push
pop
pop
adc
movl
pop
dec
mov
clc
aad
xchg
flds
add
gs
pop
dec
js
pop
sub
xchg
sbb
add
insb
mov
adc
push
inc
imul
iret
les
divl
imul
insb
mov
and
add
ficoms
aas
sbb
push
pop
xlat
inc
test
jb
or
inc
jno
xor
lret
imul
and
sbb
sbb
adc
stos
add
mov
push
shrl
scas
xchg
inc
enter
add
mov
mov
test
ret
xor
vpavgb
outsb
popa
mov
enter
pop
outsb
and
dec
lock
ret
loopne
dec
jbe
arpl
mov
or
pop
ja
add
push
bound
test
mov
test
push
pushf
push
add
push
aam
sar
inc
add
push
sbb
push
xor
push
mov
jbe
pop
and
loope
and
pusha
add
dec
add
push
fsubl
cld
int3
popa
bound
add
add
mov
lods
aaa
jb
cmp
jle
jle
xor
hlt
and
ret
inc
pop
enter
rcll
fs
sbb
jl
fisubrl
insl
dec
push
adc
jmp
fsubr
adc
xchg
adc
ss
sbb
cmp
repz
cltd
js
push
or
subl
push
inc
dec
loope
mov
pop
inc
or
mov
int3
pop
inc
sbb
mov
dec
add
inc
lock
add
pop
repnz
std
stc
inc
sahf
clc
clc
sbb
push
js
je
mov
and
int3
add
sbb
jne
inc
sarb
cwtl
push
and
pop
or
into
inc
xchg
push
sbbb
xchg
sbb
mov
inc
inc
adc
sbb
out
or
push
sub
xchg
pop
sti
aad
dec
pushf
or
and
jb
and
dec
xchg
mov
add
js
data16
fimull
inc
daa
and
dec
jo
ljmp
inc
sub
fwait
stos
je
cltd
xchg
jae
and
fs
adc
mov
jns
cmc
pop
sub
test
or
shrb
pop
or
dec
sub
xor
mov
lahf
sub
loop
inc
in
pop
fcomp
shll
add
test
loopne
add
lods
push
and
add
sub
syscall
mov
push
inc
push
pusha
lock
inc
loope
or
xchg
into
test
cs
das
pop
es
or
xorb
fwait
pop
push
inc
xor
leave
adc
push
sub
mov
and
mov
into
pop
repnz
xor
adc
loop
adc
mov
add
repnz
jecxz
sub
jnp
pop
pop
xor
push
jne
lcall
xor
cs
inc
cmp
ss
enter
hlt
inc
inc
inc
aaa
add
pop
movsl
cmp
dec
scas
inc
add
movq
push
jb
mov
dec
pop
imul
jns
sub
pusha
pusha
cmp
jns
shll
icebp
jl
push
or
cmpsl
in
jns
les
jo
add
cmp
sbb
js
inc
lret
sub
pop
push
cmpb
inc
jmp
push
mov
scas
inc
lret
test
or
scas
cs
push
nop
nop
inc
pop
cmp
subl
cwtl
inc
aaa
xchg
or
rclb
mov
aaa
orl
aaa
xchg
or
cwtl
das
in
push
mov
inc
add
fisubl
push
or
insb
mov
or
pop
std
lret
mov
rolb
mov
mov
enter
test
sbb
mov
xor
je
popa
dec
fs
nop
pusha
test
pop
inc
adc
xchg
mov
lret
inc
jmp
pusha
bound
inc
sbb
adc
rolb
cmp
adc
mov
add
add
ljmp
out
cmpl
pop
mov
or
es
ret
add
fstps
add
addps
insl
cmc
adc
or
ds
push
popf
aam
sbb
orl
fdivl
pop
dec
push
cmp
inc
mov
or
icebp
push
xor
orb
or
dec
push
inc
push
jmp
idiv
mov
inc
dec
dec
dec
sub
cmc
xchg
je
add
iret
push
imul
add
ja
jnp
repnz
or
call
jns
or
outsl
bound
movsb
cmpsl
xor
mov
cmp
inc
addr16
xor
fcmovne
mov
add
es
mov
flds
sbb
imul
push
xor
or
loope
ja
dec
test
jo
ret
add
inc
daa
int3
mov
sub
sbb
aam
xchg
pop
mov
sub
sbb
xchg
and
outsl
adc
or
and
int
adc
js
push
xor
dec
out
sahf
cmpsl
stc
cmp
or
pop
imul
jl
dec
fnstcw
push
sub
add
movsb
xor
cwtl
dec
push
shll
in
fisubl
out
out
xchg
fcoml
and
dec
iret
insl
cmp
push
pop
pop
and
loop
add
push
in
xor
adc
movsb
push
mov
cwtl
dec
add
jne
clc
fsubs
scas
loope
lods
xlat
mov
daa
jb
dec
cmp
inc
xor
inc
dec
push
ja
movsb
pop
cmpsl
arpl
push
cmp
xchg
or
ret
mov
imul
push
inc
mov
xlat
cwtl
xchg
adc
mov
mov
inc
mov
add
push
test
or
pusha
andl
jp
sub
fadds
std
push
xchg
orb
ret
cli
adc
mov
dec
movl
lahf
dec
in
push
adc
sbb
inc
jl
mov
push
daa
ret
pop
cs
popa
sbb
or
inc
addl
imul
out
adc
shlb
xchg
cmp
shrb
cmp
jne
mov
mov
and
pop
lea
or
pop
ret
movb
push
imul
mov
adcb
and
sub
push
dec
mov
add
ds
ja
pushf
fdivs
jl
cmp
xchg
pop
mov
out
push
sbb
xor
pop
jl
cmp
icebp
add
push
cmp
push
mov
ficomps
rclb
sbb
lds
pop
dec
jge
add
and
jecxz
inc
inc
daa
fsts
cs
cmp
push
inc
insl
adc
push
jle
nop
jecxz
and
andb
lea
or
xchg
popa
push
inc
pop
pop
inc
push
xchg
mov
int3
push
inc
data16
outsb
dec
add
xchg
xchg
adc
fsubs
pop
xor
xorl
xor
inc
lahf
adc
xor
lock
mov
adc
outsl
push
jl
loop
xor
fcompl
jp
dec
add
shlb
je
enter
mov
jmp
xorl
hlt
dec
sub
lock
dec
aad
stos
sub
add
push
scas
mov
push
ds
cmp
and
loope
push
jne
in
adc
in
mov
xor
out
push
xchg
out
pushf
test
mov
and
inc
xlat
push
xor
dec
inc
adc
push
adc
movsl
jo
stc
insb
call
mov
sbb
sbb
fsub
and
jae
push
push
push
insb
sub
inc
or
adc
adc
push
clc
push
adcl
sbb
pop
loop
cmp
cld
push
inc
enter
cmc
pop
pop
xchg
ret
add
insl
push
loope
sub
add
in
stc
lock
mov
ret
sbb
cld
int3
insl
sbb
ljmp
mov
adc
hlt
hlt
clc
push
inc
mov
xor
imull
and
jg
push
lock
imul
lret
pop
stos
je
mov
pop
cld
inc
pop
fistpll
dec
mov
test
ffree
movsl
arpl
test
imul
mov
or
and
mov
inc
xor
dec
push
outsl
adc
test
imul
adc
fldl
jae
gs
mov
repnz
mov
clc
and
adc
inc
xchg
lcall
add
inc
cmpsb
sub
push
aas
or
or
xor
dec
adc
mov
scas
popf
nop
scas
mov
les
push
shrl
dec
push
cmpsb
mov
jne
fwait
test
mov
mov
mov
sbbl
test
ss
adc
enter
mov
or
movsl
test
sbb
inc
rcrb
add
and
xchg
push
or
and
cmp
test
jge
call
jne
jo
pop
mov
ficompl
movsl
lods
jne
adc
gs
movsl
insl
jo
and
pop
cmpl
gs
cwtl
es
jne
testl
jl
lea
or
xchg
cmp
push
loopne
and
shlb
push
js
in
jmp
cs
mov
pusha
push
and
add
pusha
adc
rorl
xchg
pop
pop
jae
ss
adc
cs
cmp
dec
mov
jp
insb
insb
popa
das
xor
xor
sub
cld
xor
push
sub
cmp
push
dec
inc
and
sub
aas
or
ja
xor
inc
push
stos
push
xchg
mov
aas
dec
xor
xchg
repnz
inc
shll
and
inc
cmp
sub
or
test
jmp
lock
push
jo
inc
inc
fs
rorl
cltd
fcoml
and
je
push
clc
insl
dec
fsubrl
sbb
jmp
fiaddl
nop
cmpsl
shrb
mov
int3
sbb
ret
push
jno
xchg
or
xchg
js
je
jo
das
das
imul
data16
repnz
aaa
xor
pushf
push
and
bound
xor
pop
daa
cmp
dec
ret
adc
shlb
push
jne
insb
add
xchg
add
inc
ret
lahf
cmp
or
movb
dec
aam
jnp
or
add
add
or
scas
xchg
jno
fildll
addr16
pop
aaa
jae
xor
rorl
rorl
mov
dec
aas
dec
pop
das
lret
imul
jne
js
out
jb
xchg
inc
push
cmp
inc
dec
add
adc
pop
pop
mov
aam
inc
dec
mov
in
or
jle
cmpsb
fiaddl
sbb
or
hlt
pop
ja
enter
push
in
mov
pop
inc
sub
sbb
mov
leave
fstpt
sub
add
xor
jae
and
fst
mov
cmpsb
lods
jecxz
jecxz
stc
push
or
push
inc
push
dec
dec
push
dec
cltd
adc
fists
cmp
shlb
adc
mov
pop
movsb
sbb
pop
fcoms
dec
popf
fildll
lahf
pop
jnp
stc
sbb
adcb
sahf
jno
popa
lock
mov
add
in
push
or
mov
pmuludq
push
sahf
xor
add
push
sub
pop
xchg
subb
call
jne
and
dec
in
cmp
adc
sub
test
roll
push
sub
incb
push
rcrb
cmpsl
mov
fmull
xchg
xchg
sub
cli
mov
and
jo
dec
push
inc
mov
push
mov
loop
rcrl
addl
aam
inc
mov
or
push
or
imul
jne
stc
pusha
adc
sarb
fcoml
pop
les
imul
fs
in
xor
mov
nop
daa
cld
adc
adc
les
or
xor
cld
dec
int3
cmp
repnz
jg
push
inc
ljmp
lea
mov
or
or
add
and
dec
add
push
add
into
adc
cld
xor
mov
pop
add
pushf
cmp
subl
sub
test
nop
clc
movsb
and
adc
jge
sbb
and
add
add
and
mov
push
loopne
lock
fiaddl
push
sbb
sbb
push
pop
out
test
jge
rorb
aas
adc
inc
lds
outsl
dec
enter
adc
jno
and
push
add
jmp
adc
int
inc
push
adc
in
mov
pop
or
js
pop
imul
into
repnz
push
sarb
insb
mov
xchg
sbb
mov
cli
lods
imul
lock
sub
add
sub
push
lods
add
cmp
rol
loopne
or
sub
push
xor
add
sahf
pop
or
add
inc
dec
mov
lds
xchg
adc
data16
mov
loop
xlat
rorl
incl
mov
and
repnz
add
scas
cmpb
sbb
sub
fdivrp
outsl
mov
jmp
and
fmuls
add
add
and
cmp
fsubs
pop
adcb
add
inc
sbb
xchg
inc
xchg
mov
mov
mov
testb
stc
cmp
mov
add
bound
mov
fwait
aam
loopne
xor
adc
xorb
push
pop
addr16
cvtps2pd
xor
xor
cpuid
test
pop
pop
push
ljmp
rcrb
sbb
or
shlb
aam
mov
push
cmp
push
pusha
sub
push
adc
sub
repz
add
or
or
push
in
and
adc
pop
add
dec
add
mov
xchg
xor
xchg
mov
inc
pop
push
test
add
pop
xor
mov
jae
clc
xor
add
cmp
sub
int
sub
arpl
xchg
std
movsb
inc
insb
pushf
pop
push
mov
inc
jo
stos
ja
dec
mov
dec
cs
or
dec
mov
xchg
mov
add
pop
enter
iret
and
add
add
cmpsb
dec
hlt
dec
movsb
out
add
dec
pusha
sub
data16
add
fldt
push
or
inc
add
outsl
inc
push
es
pop
add
stos
inc
add
xchg
or
popa
aad
mov
imul
roll
push
mov
pop
jbe
outsb
cmp
flds
stc
or
dec
sbb
sub
xor
jge
mov
jae
push
sbb
cmpl
adc
nop
lock
ret
sub
mov
dec
pop
inc
pop
mov
fcomps
dec
adc
gs
sbb
dec
cs
in
js
push
pop
adcl
sbb
mov
adc
add
mov
add
jl
jnp
es
mov
mov
push
lea
sbb
aam
dec
pop
ss
jne
das
sbb
or
xchg
test
push
add
mov
imul
addb
or
es
inc
sbb
sbb
xchg
push
xorb
aas
test
xchg
nopl
fistl
inc
adc
dec
ret
fucompp
mov
fs
add
push
push
sbb
mov
push
or
inc
cmpb
cli
inc
or
and
xor
cmpsb
jo
insb
mov
push
fs
xchg
out
mov
push
cmp
stc
add
add
sbb
out
inc
insb
loope
dec
cmp
je
cltd
aad
inc
jmp
xor
jbe
je
gs
xchg
sub
inc
dec
push
inc
push
outsl
dec
sbb
bound
daa
mov
sbb
jg
ja
addl
dec
repnz
sbb
pusha
insb
insb
ss
push
call
sbb
cmp
and
aam
add
mov
inc
xchg
call
int3
inc
inc
mov
push
daa
sbb
mov
jo
cmp
das
add
daa
mov
push
ja
popa
inc
jno
cs
addb
and
jmp
sbb
add
push
pop
fcomps
or
stos
jo
sbb
xor
sbb
sbbl
push
jp
pop
test
int3
adc
adc
pop
xor
pop
cmpb
mov
lret
jmp
movb
and
push
lock
dec
inc
dec
inc
fldcw
and
fcomps
jge
pop
nop
dec
mov
sarl
ss
mov
in
inc
jge
jg
outsb
enter
outsl
and
cmp
pcmpeqd
mov
sbb
outsl
xchg
or
pushf
das
dec
mov
sub
outsl
adc
icebp
pop
gs
and
mov
inc
lahf
add
lahf
cmpsl
aam
ja
insl
pusha
cmp
movb
inc
call
sarb
pop
loope
movsl
push
subl
pcmpgtd
xchg
popl
call
cmpl
call
hlt
out
push
jg
repnz
sti
jo
lds
or
adc
fidivs
mov
adc
fcomps
stc
mov
lock
jle
dec
lret
xor
and
add
rorl
jnp,pt
or
cltd
clc
add
mov
jp
pop
into
pop
aam
add
jmp
xchg
into
mov
xor
call
cmp
bound
pop
adc
mov
lds
shlb
push
and
jno
js
or
or
jmp
lods
cmp
push
cmp
jecxz
fdiv
aas
xor
rcll
lock
add
xor
xor
or
push
mov
push
or
in
lea
fisttps
dec
inc
sub
sub
jb
icebp
inc
and
dec
test
jo
repz
clc
mov
sub
mov
rolb
fistpl
adc
and
shlb
sub
fdivrl
aam
test
ret
xor
xchg
or
sahf
ret
subl
inc
inc
sbbl
addl
cmp
add
and
add
jae
outsl
jne
sar
mul
das
arpl
pop
outsb
gs
xor
xor
xchg
push
push
xor
arpl
and
adc
push
xchg
movsb
mov
adc
sbb
sbb
je
and
add
xchg
inc
adc
orb
pushf
stc
sub
andl
loope
rolb
sub
cvtps2pd
or
int3
jne
mov
xchg
push
cwtl
mov
inc
ret
adc
scas
or
fcompl
adc
repz
push
ret
hlt
push
xor
into
xchg
cmpsb
rclb
or
roll
insb
and
dec
inc
inc
aaa
loope
pop
sub
fdivs
lds
mov
push
dec
fcomp
bound
sub
daa
pop
pop
je
or
fisubrs
clc
sbb
es
adc
xor
inc
adc
pop
rorb
pop
test
or
aam
or
add
mov
inc
enter
mov
arpl
out
scas
imul
jmp
jb
pop
or
add
daa
sub
jno
xor
jbe
inc
mov
mov
sbb
dec
nop
movsl
cmp
xorl
cmp
bound
or
in
ja
sahf
push
cmp
jbe
lods
dec
inc
sub
nop
psrlw
testb
mov
cwtl
and
push
add
cmp
andb
in
push
and
jle
adc
dec
inc
es
xor
movsl
scas
cmc
push
push
xchg
dec
adc
lods
sub
movsb
lock
shll
clc
jne
add
mov
fisttps
fsubrl
xor
fsub
sub
push
adc
dec
or
fsubrs
inc
jecxz
test
push
cmpsl
aam
adc
sub
and
lret
mov
mov
aam
stc
sub
jecxz
stc
in
and
adc
cwtl
dec
cwtl
mov
pop
mov
xor
xor
mov
mov
xchg
add
jg
testl
xor
jp
push
es
in
call
xor
jp
rcrl
pop
xor
and
in
inc
push
rolb
in
add
xor
movsb
jecxz
inc
add
call
dec
call
js
sbb
mov
rclb
loope
test
pop
ret
push
xchg
sub
dec
xor
jne
cmp
in
inc
gs
add
addr16
je
add
es
mov
and
mov
or
xor
lret
sub
sti
adc
add
cmp
cld
into
add
push
inc
xor
jns
xchg
int3
add
adc
fsubrs
push
idivb
das
faddl
and
lock
call
fidivrl
xchg
pusha
sub
sbb
arpl
and
roll
cmp
push
or
aas
sbb
jle
sub
and
jo
ret
in
xor
inc
pushf
xchg
inc
xlat
movb
jmp
fmull
loopne
jge
sub
or
iret
stos
stc
sarl
gs
dec
sub
push
inc
push
jge
push
in
pop
add
xchg
test
xchg
jg
inc
inc
cmp
stc
int
jl
xchg
sub
mov
lock
mov
xorb
fsubs
sub
adc
xor
je
mov
mov
push
pop
int
arpl
xchg
enter
sti
mov
dec
inc
pop
lahf
imul
add
jp
mov
sbb
xor
or
mov
lock
xor
pop
add
and
cs
enter
aas
pop
das
mov
rolb
xor
sbb
mov
inc
sub
mov
loope
and
sbb
xor
mov
hlt
arpl
xchg
sub
in
and
gs
or
mov
addr16
nop
imul
lods
mov
pushf
xor
mov
cmp
xor
cwtl
push
add
mov
in
orb
add
nop
rcr
xor
or
lahf
push
inc
add
dec
outsb
cmpsl
insl
pop
sbb
xlat
cmp
sbb
or
dec
jg
inc
es
pop
dec
ret
dec
jno
push
in
xchg
jle
pop
fwait
cmp
test
movsb
in
mov
insl
dec
jae
adc
push
jb
mov
dec
fists
sti
inc
loopne
cmpsl
inc
cmpsb
xor
lret
xchg
adc
hlt
mov
xchg
cmp
pusha
and
cmp
or
add
push
add
mov
fldcw
jg
sub
subb
xorl
pop
xor
push
clc
mov
push
insl
inc
pop
rcrl
movsb
scas
jno
mov
lods
mov
pusha
sbb
sbb
or
flds
dec
add
jae
xor
jmp
cmp
adc
xor
dec
and
xor
int3
add
addl
or
in
push
popa
or
sub
loop
and
mov
inc
push
in
and
je
mov
xchg
decl
xor
cmpsb
pop
inc
lcall
sbb
mov
or
je
push
hlt
pushl
sbb
or
inc
xchg
dec
xlat
nop
or
hlt
and
mov
jnp
and
int
dec
pop
fdivl
mov
and
hlt
xchg
add
decb
clc
push
and
sub
lock
pusha
leave
in
add
adc
cmp
call
xorb
das
loopne
pop
mov
cmp
mov
sub
loopne
add
repnz
fmuls
aam
stc
sub
out
push
sub
popf
test
daa
dec
sbb
in
out
aam
inc
sahf
mov
xchg
push
mov
mov
popa
jle
in
ss
jmp
jg
jle
or
pop
aaa
pusha
inc
fisttpll
cmp
cltd
repnz
sub
xor
xchg
pop
xchg
push
push
int3
shlb
jo
pushf
pushf
xor
dec
je
push
cwtl
fsts
or
aam
dec
mov
mov
lds
test
mov
shrb
inc
mov
scas
dec
cs
aam
sbb
pop
and
fcomps
inc
test
cmpb
lea
call
inc
inc
int3
scas
and
enter
inc
or
addr16
xchg
std
inc
sbb
test
push
mov
stos
jnp
add
jg,pt
mov
mov
mov
roll
jge
bswap
push
mov
add
and
jae
mov
mov
sub
sub
aad
jae
pop
push
imul
xor
cwtl
dec
sub
inc
add
dec
push
lea
in
inc
aaa
push
nop
lock
add
push
and
scas
cs
jbe
adc
or
mov
add
push
sub
inc
adc
xor
mov
jecxz
fwait
or
add
push
sub
and
cmp
je
mov
int3
sub
sbb
out
mov
cs
xchg
test
in
adc
push
add
shr
push
xchg
push
push
and
lcall
dec
std
dec
cmp
mov
or
je
ja
pusha
mov
clc
es
adc
in
movb
inc
or
enter
mov
add
push
or
push
mov
repnz
jb
ret
sub
dec
dec
out
loop
push
mov
add
add
and
mov
outsb
insl
xor
insb
testb
outsl
cld
dec
jp
jae
test
sub
and
imul
mov
add
adc
xor
pop
dec
xor
cmp
movsb
cmp
inc
push
xchg
inc
inc
test
loope
inc
rorl
xchg
inc
inc
daa
add
loope
enter
push
popa
or
ficoml
inc
adc
ljmp
inc
dec
add
cmp
scas
imul
fcomp
inc
rorb
dec
outsb
cmp
or
lds
loope
jo
stos
dec
cld
push
sbb
sbb
xor
cmpsb
nop
pop
or
add
pushf
lea
cmp
xor
or
add
or
mov
xchg
sarl
ja
test
pop
and
xchg
or
push
jne
les
jl
cmpsb
jmp
nop
dec
out
or
or
pusha
hlt
adc
adc
loope
insb
loop
jle
inc
cmp
mov
test
mov
and
sub
sub
js
in
sub
jb
push
aam
ljmp
fisubl
add
push
das
dec
aam
jl
xchg
test
insb
push
int
insl
mov
cmpsl
ret
je
push
roll
adc
fisubl
add
cli
cmc
push
mov
add
lcall
mov
and
adc
subl
adc
dec
test
insl
int
stc
and
pop
subl
or
xor
push
xchg
push
dec
ret
es
add
mov
or
aam
imul
add
dec
sub
sbb
pop
jg
dec
fucom
nop
int
pusha
dec
xor
negl
rcrb
nop
mov
xchg
mov
mov
lret
sbb
leave
adc
pop
pushf
and
dec
jae
lods
lods
mov
xchg
mov
bound
or
adc
shr
outsl
mov
mov
stos
adc
sub
and
or
ja
ret
shlb
repz
jns
out
leave
repz
test
sbb
nop
push
lcall
jl
sub
mov
lock
push
add
or
gs
mov
cwtl
and
lods
xchg
pushf
lods
shll
inc
int3
arpl
stos
pop
ljmp
loop
mov
jbe
push
fcomip
sbb
scas
cmp
jo
push
xchg
movsl
arpl
add
ljmp
add
and
addr16
mov
sgdtl
lock
ret
pop
or
jae
rol
shrl
lahf
adc
imul
sub
lock
scas
out
xchg
mov
push
adc
push
les
mov
inc
xchg
push
sub
or
andl
inc
and
lcall
mov
inc
add
out
pop
or
test
std
fildll
pop
nop
and
mov
sarl
sub
inc
movb
fs
xchg
cld
mov
movsb
push
popf
cmpsl
mov
loope
adc
mov
sbb
mov
add
jge
xlat
add
add
ljmp
lret
pop
mov
aaa
dec
setg
and
or
push
push
ret
data16
into
mov
jmp
inc
call
pop
cmp
xor
subb
addl
dec
cwtl
mov
jne
sub
adc
leave
dec
xchg
mov
bound
cmpsl
out
pushf
add
popa
rcr
dec
xchg
add
and
insb
gs
in
daa
or
or
aas
xor
xor
xor
lahf
aaa
outsb
push
or
test
imul
subb
jae
mov
rolb
out
adc
aam
cmpsl
jbe
test
dec
mov
xor
mov
sbb
mov
nop
and
sub
push
pop
push
add
add
mov
test
mov
fstp
push
jbe
push
sbb
push
push
cmp
in
cmp
addb
xchg
test
or
cmp
mov
aaa
scas
xchg
daa
mov
push
hlt
fistl
jle
inc
jb
cmp
jl
sub
adc
jmp
xchg
or
pushf
or
mov
dec
mov
xchg
sbb
ret
sbb
rclw
sbb
ss
or
je
enterw
ja
into
xchg
lds
mov
and
std
les
in
xlat
sub
dec
outsb
xchg
sbb
sbb
add
or
add
push
test
inc
in
adc
fstl
or
xor
hlt
mov
call
xchg
xchg
mov
shrb
popa
xchg
ret
and
xchg
inc
add
nop
mov
adc
cld
and
push
cmp
adc
nop
lret
mov
inc
test
xor
arpl
cs
sbb
or
ja
flds
ja
and
cmp
add
cwtl
or
xchg
sbb
cmpsl
lock
xor
or
jle
mul
dec
test
add
mov
adc
xchg
xor
mov
inc
xchg
add
in
add
add
pusha
mov
xlat
insb
jne
shlb
add
add
orb
add
fwait
mov
or
call
test
ret
rorb
push
mov
adc
lea
stos
add
xchg
or
nop
sbb
lock
loopne
add
pop
xor
loopne
fdivl
xchg
cmp
sbb
mov
inc
xchg
fwait
xor
or
add
fsubs
fwait
xlat
mov
pop
add
lds
and
cld
mov
mov
pop
sbb
lcall
mov
jne
inc
cmp
cs
jge
out
arpl
jno
push
push
mov
cmp
arpl
cmpsl
leave
dec
dec
pop
push
icebp
popf
xchg
cmc
mov
sub
jae
xor
loopne
sbb
loopne
sbb
rcrb
pop
add
fdivs
mov
test
add
cmp
mov
js
add
inc
movl
jno
cmpps
push
add
fdivs
sarb
sub
pop
or
pusha
lods
call
xchg
inc
nop
or
push
lea
dec
xchg
imul
in
aam
pop
sbb
call
enter
inc
push
das
lods
jne
or
imul
cmp
les
inc
or
or
pop
in
or
inc
jb
and
call
icebp
clc
popf
or
add
push
das
xchg
and
jb
jb
nop
add
cmpb
mov
inc
loopne
mov
pop
pop
or
xor
push
enter
les
or
mov
adc
and
mov
mov
or
loopne
shrl
daa
inc
pop
or
loop
pop
or
pop
daa
jge
adc
mul
std
adc
cmpsb
mov
dec
dec
insb
rolb
imul
xor
shl
jno
or
insb
push
mov
into
sarl
cmp
negl
cmpsl
cmp
sahf
xor
stos
lock
adc
sub
jge
add
add
and
out
and
jb
pop
jnp
out
add
push
push
sub
inc
daa
fistpl
jae
push
jl
nop
pop
jmp
pop
dec
lcall
or
mov
lahf
xor
mov
pop
inc
in
push
dec
cmpsb
cmp
mov
popa
cmp
xor
fwait
lods
mov
xchg
aas
pop
xor
sub
xchg
push
xchg
cmp
adc
pop
add
push
inc
movsl
pusha
pop
inc
cld
inc
jecxz
xor
add
pusha
hlt
xchg
xchg
mov
and
mov
mov
popa
andb
inc
lahf
imul
push
inc
and
inc
sub
popa
popa
lods
jge
pushf
sbb
nop
daa
lret
mov
ds
push
cmp
jb
mov
shlb
loopne
clc
lock
push
jg
lods
push
rcrl
dec
xchg
push
mov
pop
and
mov
cmc
add
ljmp
adc
push
dec
sub
cs
or
test
lock
add
inc
push
mov
inc
inc
and
in
pop
fsubs
popf
outsb
and
call
sbb
add
inc
adc
movsb
xor
inc
and
nop
lret
xor
add
push
pop
push
push
pop
js
and
cwtl
push
push
movsb
xor
mov
insb
enter
add
je
adc
and
sbbb
es
orl
add
pop
mov
fildl
inc
cmp
xorb
inc
jae
outsl
je
dec
xor
imul
xchg
xchg
or
shlb
aaa
mov
xchg
rol
xchg
lods
rol
mov
test
sbb
sub
aas
push
sbb
lea
pop
jbe
add
inc
fcoms
lret
sbb
aas
js
mov
adc
subl
inc
jb
aas
push
pop
mov
mov
movsb
cmpsl
pop
test
adc
fs
into
pop
mov
je
inc
and
fisubrs
xchg
lods
adc
insb
push
pusha
add
inc
loopne
leave
pop
sub
mov
ljmp
repnz
dec
and
add
add
daa
xor
rclb
mov
pop
daa
xchg
shr
dec
jge
scas
or
pop
xor
sub
outsb
hlt
jnp
adc
add
dec
xchg
and
cs
ss
sub
bound
xchg
dec
adc
dec
jg
sub
sti
out
bound
xor
add
ja
or
cmpsb
adc
nop
rcrb
inc
sub
aam
dec
cmp
lds
cs
loope
stos
addr16
mov
dec
cltd
push
xchg
hlt
sbb
xchg
cmc
daa
decl
aaa
and
aas
dec
mov
adc
and
xchg
das
xor
aam
add
test
lods
sub
mov
fdivr
add
insb
insb
sbb
insl
andl
insl
mov
scas
add
mov
lret
jmp
pop
loopne
jge
mov
xchg
loopne
adc
push
and
int
xor
ret
xchg
jb
sbb
pop
xor
push
xor
cmp
out
cmp
or
push
push
xlat
loopne
add
sub
lods
adc
and
lods
pop
ljmp
imul
loopne
cmpsl
in
xor
stos
and
adc
xchg
push
mov
pop
ja
and
pushf
mov
push
fs
test
mov
mov
std
ret
inc
mov
and
and
out
or
int3
lock
dec
mov
jne
les
enter
inc
cmc
lods
xor
mov
pop
sub
jmp
sbb
mov
lea
or
into
pushf
ja
ret
mov
add
fbstp
jo
repnz
fcom
add
adc
cmp
movsb
dec
ret
test
mov
xor
test
push
adc
sub
sub
lock
nop
jp
fisubrs
add
test
arpl
inc
and
aas
or
or
lods
inc
aas
je
lock
inc
push
and
cmp
cmp
call
mov
cmp
daa
test
rclb
xchg
ret
push
cld
lods
mov
xorb
imul
add
mov
mov
mov
mov
inc
dec
add
mov
or
inc
insb
pop
aas
push
in
punpcklwd
je
outsl
jmp
xor
add
lcall
shll
scas
cmp
sar
outsb
scas
add
jle
push
jl
jmp
pushl
je
scas
add
xor
mov
cmp
mov
fmull
inc
notl
in
loopne
pop
in
mov
je
out
nop
loope
icebp
bound
inc
push
enter
movsb
icebp
bound
lahf
pop
add
jne
mov
and
pushl
and
loopne
push
stc
popa
movsb
shll
fsubrs
sbb
das
dec
dec
sarb
and
mov
shrb
enter
add
setb
cltd
mov
add
dec
and
sub
enter
shl
dec
loope
imul
jne
pusha
or
ds
unpckhps
cmp
mov
lret
repnz
das
arpl
or
sub
aaa
movsl
pusha
rorb
je
jnp
cmpsl
add
pop
add
push
cmp
inc
and
pop
pop
adc
int
dec
cmp
jbe
repz
leave
pop
adc
jle
jbe
pusha
mov
push
scas
imul
mov
mov
test
add
jno
mov
and
jbe
imul
xor
pushf
lret
andb
jecxz
test
movsl
sbb
imul
ss
in
loopne
and
loopne
sub
and
add
cmp
xchg
ret
pusha
add
imul
inc
mov
mov
ss
dec
xchg
inc
repz
sub
mov
sbb
and
mov
cmp
add
xor
outsl
aas
cmpb
movb
enter
add
data16
push
cmpsl
push
movsb
dec
and
or
std
enter
push
out
or
push
xchg
add
dec
push
mov
test
hlt
mov
xor
sub
pop
je
xchg
jl
aad
jmp
leave
pop
jmp
jecxz
mov
addr16
es
bound
ljmp
xor
inc
pop
add
orb
dec
ret
push
xchg
mov
imul
jmp
inc
pause
popf
pusha
jecxz
mov
or
push
ja
cltd
or
dec
jo
and
int
popa
cmp
add
mov
out
shll
test
cmp
jl
fimull
push
leave
push
jne
add
xchg
pop
and
inc
sbb
call
jmp
pop
jl
dec
repz
sti
mov
cltd
nop
dec
xor
add
mov
inc
rcrb
aad
loope
or
lcall
add
xor
jo
cmp
mov
movsl
lock
repnz
mov
imul
push
jo
sbb
inc
insl
sahf
aam
mov
stos
lock
repnz
ds
jp
sbb
push
cli
jns
fcmovu
ja
mov
or
addr16
icebp
adc
xor
cmp
sub
mov
jmp
cmp
mov
adc
jae
fs
xor
cs
xchg
jg
or
in
mov
jo
jecxz
mov
and
sbb
cmpsb
mov
fcomps
inc
loopne
xor
cs
out
in
adc
fmuls
dec
enter
sbb
adc
std
jl
mov
popl
adc
add
xor
push
mov
test
cmc
dec
pop
enter
cmc
push
push
jp
pushf
jge
jb
pop
sti
pop
js
orb
in
addb
scas
repz
adc
out
adc
xchg
nop
sbb
push
aaa
pop
pop
or
insl
out
or
movl
lods
and
inc
or
and
mov
mov
pop
mov
mov
or
nop
cwtl
xchg
pushf
mov
out
in
adc
pop
dec
movsb
inc
jne
std
addb
dec
lea
ljmp
leave
rcll
mov
jb
dec
and
pop
xlat
shll
adc
inc
mov
pop
jge
mov
mov
addr16
stos
scas
stc
hlt
add
movsb
and
je
push
cwtl
test
push
mov
xchg
dec
pop
xor
cld
cmpsl
mov
pusha
out
nop
sbb
ds
and
clc
push
sarb
orl
pusha
mov
dec
lock
movsl
popa
cmp
jl
mov
inc
pushf
int
pop
std
fcmovne
icebp
jl
loope
push
sub
jg
mov
add
sbb
pop
inc
aad
pushf
scas
add
mov
cs
xchg
popf
dec
adc
mov
popl
or
sbbl
cld
aas
or
mov
or
or
jmp
pop
adc
add
push
mov
and
adcl
push
dec
push
not
xor
js
in
mov
mov
iret
jb
pop
sub
and
cmpsl
hlt
mov
scas
mov
mov
add
xchg
shlb
jbe
loope
das
cmpb
lea
mov
jge
pop
push
inc
pop
andb
inc
add
mov
dec
push
and
pop
lret
xor
mull
insb
xor
rcrb
sbb
pop
xor
aaa
insl
pusha
inc
mov
inc
jp
insb
lods
adcl
imul
jg
mov
pop
push
movl
fnstenv
test
mov
jecxz
mov
or
mov
sub
sbb
add
loopne
cmp
loope
push
roll
mov
xlat
push
popf
push
nop
dec
fiaddl
pusha
fs
pop
lods
add
ret
adc
call
add
inc
ds
sub
add
sub
dec
clc
jecxz
sbb
pop
mov
fs
add
mov
mov
sbb
inc
push
nop
ja
loope
subb
in
shlb
add
lock
or
aaa
clc
mov
mov
fstpt
jo
inc
out
daa
rolb
rolb
leave
xchg
jle
shrb
mov
jae
insl
inc
pop
cwtl
in
jnp
inc
xchg
out
ds
jle
lods
jle
push
cmp
sbb
inc
aas
lock
ds
jl
fsubrl
in
push
sub
outsb
aas
push
lods
clc
inc
inc
aas
mov
pop
xchg
jl
in
fiaddl
add
fwait
in
mov
cs
out
aad
mov
mov
loopne
mov
imul
hlt
fistpl
enter
sahf
out
in
and
pop
xchg
jmp
sbb
insb
mov
fs
je
mov
ds
dec
mov
sbb
pushf
dec
and
inc
pop
leave
aaa
leave
testb
fs
insb
idiv
popf
push
xor
xor
sub
dec
jl
fsubs
xchg
sub
cs
mov
inc
rcrl
outsb
add
imul
bound
aas
cld
ret
inc
add
stos
mov
pop
xor
adc
std
mov
inc
pusha
gs
rcr
out
sbb
imul
cmp
xchg
out
mov
adc
add
add
jnp
mov
inc
cmp
cmp
cmp
pushf
es
xchg
or
sub
adcb
pop
js
daa
gs
mov
dec
sbb
out
cmp
dec
mov
ja
dec
out
adc
or
hlt
cmpb
insl
and
mov
jnp
jno
cli
lahf
in
neg
dec
xor
outsl
xchg
sbb
or
or
cmp
jae
pushl
insl
call
sub
insb
in
push
lock
repnz
das
in
inc
jns
sti
leave
add
and
loopne
push
inc
add
std
sbb
loopne
adc
mov
xor
push
or
js
sbbb
xchg
out
gs
cli
test
xor
test
xchg
xchg
movsb
inc
adc
cltd
sbbb
add
sub
xchg
jns
jb
xor
xchg
dec
pop
push
ret
addr16
cltd
cli
call
cmpl
insb
sbb
or
out
filds
aam
out
arpl
addl
mov
les
and
mov
push
lret
and
loopne
aaa
mov
out
jno
xchg
or
dec
out
push
sti
push
mov
dec
xor
cmp
addr16
mov
add
jmp
or
stc
mov
push
imul
call
inc
test
xchg
daa
pop
dec
or
mov
movsl
and
and
mov
xor
in
mov
test
sub
dec
gs
out
orb
popf
mov
adc
mov
fchs
addb
dec
mov
out
inc
insl
mov
inc
mov
les
fucomip
sti
or
mov
es
pusha
jo
jmp
ret
jns
pop
push
dec
aaa
adc
popa
ja
out
fstpt
or
aaa
jo
cmc
clc
ja
aas
orb
push
jl
sbb
xor
pop
or
sbb
sbb
cltd
dec
in
xor
and
daa
xchg
xchg
lret
sub
sub
dec
loopne
pop
scas
cwtl
movaps
loope
mov
xchg
movsb
jnp
stc
push
faddl
test
stos
movsb
xchg
imul
jae
bound
imul
pop
jge
xchg
mov
jb
sub
jns
fstps
mov
pop
out
lahf
lods
jg
out
sti
jns
mov
cmp
test
push
cmp
add
es
scas
and
add
ret
enter
setbe
dec
jne
loope
xchg
cs
call
loopne
sar
jl
inc
mov
mov
push
mov
mov
mov
iret
mov
data16
data16
stos
add
xchg
xchg
es
and
hlt
dec
lods
int
aad
add
data16
iret
adc
pop
call
sarb
inc
xchg
add
std
test
push
lods
mov
jecxz
pop
lock
sahf
xchg
adc
sub
insl
mov
or
cld
xchg
and
aaa
mov
idivl
icebp
in
or
mov
push
clc
mov
out
je
push
jmp
cld
inc
adc
movsb
inc
mov
movsb
icebp
push
adc
in
push
scas
sbb
jl
mov
push
inc
int3
mov
test
adc
add
sbb
je
pop
mov
frstor
lods
aad
jo
push
lret
pop
sbb
add
mov
pusha
fimuls
fwait
ret
mul
scas
sbb
repnz
dec
xchg
jno
adc
push
call
and
cmp
rcl
or
push
mov
call
cwtl
sub
dec
ss
shl
out
xlat
xlat
mov
lahf
insb
out
adc
jge
lcall
xor
iret
mov
aam
cmp
jo
es
leave
push
sahf
mov
mov
pop
mov
xchg
clc
and
jp
fldenv
call
xor
pop
cs
sbbb
call
and
call
leave
aad
mov
iret
es
pushf
sbb
das
andb
xor
and
pop
push
xchg
add
sub
js
xor
adc
adc
xchg
adc
inc
pop
sahf
es
push
fwait
decb
pop
cmpsl
add
add
arpl
lret
jno
mov
xor
ret
lock
call
mov
insb
inc
insb
and
or
and
imul
push
adc
add
or
lahf
xor
scas
negb
adc
inc
dec
ljmp
jl
sbb
and
enter
xor
cmp
xchg
inc
add
inc
xor
in
mov
inc
fwait
call
xchg
pop
and
push
jb
orb
cwtl
and
leave
inc
mov
pop
rcl
and
leave
loopne
add
in
cltd
dec
adc
dec
cs
mov
inc
mov
and
cs
mov
repnz
add
pop
and
jo
in
add
jmp
add
mov
pop
leave
inc
repnz
lock
dec
pop
and
add
and
adc
and
xchg
mov
orb
pushf
dec
dec
push
or
or
test
add
ss
data16
and
je
cwtl
dec
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
mov
scas
je
xlat
lods
and
and
and
popa
je
xor
mov
sarl
hlt
inc
inc
iret
rorl
or
mov
imul
movl
test
adc
inc
pop
xor
pop
jnp
xorb
cmpsb
or
mov
lcall
popa
add
pop
es
add
repz
imul
adc
and
iret
repz
xor
inc
dec
push
pop
cmp
repz
insb
je
test
cmp
repz
cmp
mov
int3
aam
ds
repz
in
hlt
cld
add
into
repz
incb
adc
and
lcall
faddl
andl
leave
enter
mov
adc
enter
sbb
repnz
test
cmp
pop
hlt
test
setl
lods
test
je
addb
mov
pop
out
add
dec
fisttpl
add
mov
loop
pop
scas
sbb
add
xchg
lea
adc
adc
adc
push
into
dec
xchg
add
add
ret
mov
add
sub
out
gs
add
add
add
add
add
fimull
add
pop
addl
iret
sub
add
or
sub
xlat
or
add
lods
stos
mov
sahf
int3
loopne
add
and
iret
repz
inc
pop
push
xrelease
loopne
iret
fsubr
cld
mov
stos
add
sahf
add
adc
adc
mov
push
inc
sbb
push
mov
jl
cli
add
push
mov
or
add
or
push
or
or
rclb
jg
xchg
test
out
icebp
cmp
lahf
bndstx
inc
negb
inc
push
add
mov
add
push
adc
aad
repz
pop
push
mov
in
int
cmp
gs
xchg
jmp
ljmp
leave
jl
adc
pop
andb
mov
mov
aas
push
in
add
jns
cmp
xchg
or
adc
push
sahf
jnp
sub
and
add
add
xor
pop
jle
subb
lret
cwtl
out
stc
cmpsl
push
sti
push
lods
mov
or
sarl
call
add
repz
sbb
xor
adc
repz
adc
test
xlat
jmp
pushf
push
sbb
jns
push
adc
or
iret
repz
sbb
dec
repz
repz
sbb
repz
mov
push
ds
repz
sbb
out
mov
push
and
push
adc
cmp
push
add
out
jl
xchg
pop
cmpsb
pop
repz
rorl
add
add
iret
repz
pop
subb
cmp
repz
xchg
iret
repz
mov
jns
out
mov
mov
sahf
int3
fidivrs
mov
mov
cs
dec
jg
incl
mov
cmp
pop
prefetcht2
push
pop
bound
cmp
icebp
or
mov
adcb
sbb
out
mov
or
ret
sbb
add
inc
cli
cli
out
out
lcall
lock
add
out
xor
incl
xchg
pop
stc
xlat
jl
cmc
lods
push
cli
jmp
add
fidivs
scas
jge
clc
mov
in
out
in
ret
mov
and
cmc
pop
cmp
jmp
add
push
pop
jns
aad
insb
fisubrs
ss
jl
outsb
fidivrs
jle
cmc
incl
shll
push
cmp
xor
mov
int
por
sub
fidivrl
mov
mov
dec
movsl
jmp
mov
cmp
loopne
clc
int
cld
imul
imul
mov
out
pop
jg
imul
mov
mov
movsl
sub
push
shrb
jns
outsb
or
hlt
movsb
pusha
dec
mov
mov
loop
push
in
pop
movsl
outsb
out
push
inc
aas
cld
rcrl
mov
and
xor
mov
repz
add
aas
add
xchg
jle
push
mov
adc
call
rolb
fsubr
out
out
idiv
mov
mov
lock
lods
ljmp
add
lret
mov
push
nop
out
nop
add
sahf
push
push
mov
nop
fisubl
mov
lock
sbbb
lcall
pop
sti
int3
int
cwtl
sti
cwtl
push
data16
dec
push
cmp
cltd
dec
out
add
or
mov
fisubs
scas
jge
imul
push
sbb
push
xor
fldl
testl
sbb
sub
repz
lcall
and
scas
je
scas
out
cs
push
loopne
lods
push
jl
push
lods
fsub
add
xchg
out
fdivrl
xchg
in
add
push
push
popa
push
out
repz
mov
dec
rcrl
inc
push
inc
loopne
add
gs
pop
sarl
mov
jle
repz
shl
dec
repz
imul
out
fdivp
sbb
jo
into
sarl
hlt
pop
repz
mov
pop
jmp
rclb
push
call
rcrl
add
roll
xlat
jmp
push
fmull
mov
mov
ds
adc
xchg
add
imul
fs
xchg
jo
add
outsl
mov
call
movzbl
add
jg
lahf
loopne
subb
push
fidivl
add
cld
repz
mov
imul
fs
fiadds
js
push
mov
xchg
mov
push
roll
mov
aas
cld
jle
adcb
mov
jmp
into
push
push
jo
outsb
inc
push
cmc
add
pop
scas
push
ds
xchg
imul
idivl
cmp
mov
outsb
das
dec
dec
push
faddl
into
test
test
psubusw
xor
sub
push
fsub
sub
dec
test
mov
scas
jmp
sahf
out
addb
and
cmp
repz
jns
in
data16
push
cld
add
iret
repz
adc
and
xor
sub
xchg
jns
out
push
sub
inc
pop
fs
sahf
out
mov
jns
int3
fsubr
clc
adc
and
repz
cmp
pop
insb
icebp
ds
repz
mov
add
addb
nop
jg
pop
repnz
repnz
inc
and
orl
jns
add
add
add
pop
testl
add
add
jbe
add
push
add
or
nop
pop
sub
iret
repz
pop
inc
push
std
push
cld
cmp
repz
cli
jo
test
cmp
repz
cwtl
imull
shl
hlt
call
cmp
repnz
icebp
and
out
lock
dec
out
out
sahf
out
in
insb
in
and
jns
jmp
ljmp
rclb
jne
mov
mov
flds
rclb
sbb
push
addr16
outsb
lods
pop
sti
fisttps
or
or
iret
add
pop
outsl
pop
xlat
call
adc
mov
popa
add
shrl
cmpsl
and
jne
xchg
cwtl
das
mov
push
ficoms
pop
pop
add
iret
repz
jg
jg
stc
mov
cmp
sti
cld
std
push
cmp
repz
add
or
cmp
test
ret
push
aad
lahf
in
xchg
inc
pop
push
pop
rol
pop
xlat
dec
pushf
and
push
mov
int
into
sbb
push
adc
add
adc
and
xor
pusha
test
icebp
pop
add
data16
imul
mov
sti
cld
add
repz
incl
add
repz
add
or
or
cmp
repz
or
push
cvttps2pi
lock
loop
lahf
int
push
stc
push
mov
xor
imul
mov
xchg
push
scas
fcomps
xchg
dec
int3
scas
lods
dec
xlat
mov
and
leave
mov
pop
fcoml
fcomps
adc
mov
xor
adc
out
jmp
roll
inc
pop
pop
xchg
push
jnp
rol
xlat
mov
rolb
push
push
test
scas
test
jge
nop
fsts
xor
push
test
jl
cmp
test
scas
jbe
scas
movsl
sub
mov
inc
pop
mov
pop
js
lods
or
in
sub
push
pop
loopne
out
adc
inc
addr16
cs
mov
inc
mov
jl
test
lcall
dec
pop
mov
xchg
xchg
stc
jle
stc
ss
fists
out
cmp
inc
cld
mov
dec
imul
mov
jg,pt
cmp
sub
mov
jle
add
movsl
xchg
int3
add
push
insl
cmp
imul
jmp
mov
dec
xchg
pushf
push
insb
ds
imull
inc
jmp
pushf
push
cmp
js
adc
jle
fsubl
jl
cwtl
dec
out
or
pop
or
sub
sub
ficomps
push
enter
jle
cmpsb
fnstcw
ds
push
add
negl
mov
lock
inc
je
sub
add
faddp
inc
jno
push
cs
inc
ss
cmc
test
push
pusha
daa
add
sub
pop
lea
data16
loope
out
xchg
ficomps
insb
pop
iret
jnp
aaa
es
insb
int3
mov
mov
addb
sub
pop
iret
loopne
push
rcrb
mov
mov
cmp
add
cmpsl
cmp
es
mov
sbb
testl
ds
inc
outsb
jl
js
jns
lods
cs
sahf
je
xor
jle
aaa
xchg
push
mov
shl
divl
lods
sahf
les
cld
adc
xorb
addb
or
outsb
movsb
pop
cs
and
cmpsb
int3
push
jl
pop
fisttps
xorb
cmp
sub
aam
fdivrl
scas
xchg
push
push
dec
dec
mov
out
adc
les
mov
ja
ljmp
sub
push
in
jbe
iret
outsb
and
mov
out
hlt
push
fmull
testl
es
push
pushf
push
outsb
cmp
mov
adc
aaa
sahf
dec
testl
and
ds
mov
jbe
pop
out
mov
loop
pop
cs
xchg
lock
fadd
ss
mov
fsubrl
sbbl
cmp
or
push
iret
jae
dec
jl
ljmp
push
push
push
pushf
aaa
iret
ja
shll
pop
adc
push
je
xchg
inc
mov
lods
aam
push
movsb
push
xchg
es
fidivs
push
push
xor
push
test
imull
cmp
cld
dec
mov
add
testl
pop
sbb
in
sahf
adc
push
int3
cmp
mov
addr16
push
pushf
push
fidivrs
outsb
pop
les
adc
pop
je,pn
int3
fiadds
incb
enter
cs
iret
scas
mov
sbb
inc
inc
popa
addl
push
add
or
das
inc
add
jo
push
bound
nop
or
or
loopne
xchg
add
subl
ljmp
jp
inc
push
or
push
push
sbb
add
mov
pop
dec
add
movsb
dec
mov
dec
ljmp
aas
pop
lcall
and
enter
add
add
inc
mov
mov
pop
jl
sub
add
add
jns
rolb
sbb
xchg
nop
cmpsl
sbb
mov
add
add
incb
pop
mov
clc
aas
push
pop
jmp
mov
pushf
cmp
cld
add
pop
ret
or
sahf
or
push
aas
add
xchg
add
pop
push
inc
add
fldcw
test
or
pop
jo
pusha
in
roll
rcrb
add
jge
push
psubb
addr16
xchg
push
out
ficompl
jl
out
cmp
add
stos
xor
in
add
pop
sbb
pop
push
fidivrl
xchg
fs
aas
pop
cs
pop
add
mov
out
pop
lock
xor
pop
std
fisubs
rorl
mov
insb
jl
push
data16
iret
jbe
jg
sbbb
repnz
inc
add
jo
iret
and
mov
incb
lock
iret
pop
aas
pushl
or
push
add
inc
fdivp
pushf
nopl
es
icebp
cmp
repz
add
nopl
jmp
test
into
push
add
add
iret
or
mov
daa
add
out
ficomps
add
comiss
dec
pop
mov
ja
daa
add
pop
int
repz
std
clc
lock
aas
shlb
stos
xchg
pop
clc
dec
add
push
imul
inc
pop
outsl
clc
popl
and
or
add
mov
add
loopne
pop
sbb
fwait
stos
dec
test
inc
nop
mov
add
push
xor
pop
mov
data16
adc
adc
jbe
pop
aas
nopl
adc
out
add
addr16
ss
cmp
cld
pop
cmp
fsubl
mov
stos
xor
xacquire
and
data16
xchg
std
or
push
sbb
pop
adc
cmp
aaa
inc
add
mov
sti
in
inc
addl
pusha
xor
sbb
push
push
sbb
pop
adc
shrl
sbb
lock
fwait
int
mov
sbb
push
sbb
or
test
repz
incl
xchg
scas
dec
jmp
pop
sub
repz
add
jmp
into
sbb
je
mov
jb
mov
and
add
lcall
pop
insl
xchg
jae
add
fwait
adc
cs
cmp
xchg
jb
xchg
jbe
jb
dec
jmp
jnp
push
and
jnp
mov
xor
mov
dec
cmp
gs
and
fnstsw
mov
outsl
addr16
push
out
xor
lret
mov
shl
xlat
outsl
je
fstpt
popa
xchg
and
push
cmovg
das
divb
jb
adc
es
jecxz
push
sbb
mov
pop
mov
aaa
dec
imul
subb
jecxz
sti
jbe
pop
pop
adc
out
add
fimuls
push
lahf
jmp
fiadds
sub
push
sahf
dec
mov
sbb
aas
sbb
sbb
fmul
cmp
imul
outsb
shll
ret
mov
call
out
mov
and
subl
jae
imulw
push
push
aas
ja
push
arpl
xchg
out
mov
sub
inc
sbb
jbe
sub
popa
inc
and
add
daa
push
xlat
cmp
addr16
pop
mov
push
push
sahf
bound
xlat
in
cwtl
mov
jg
push
jbe
insl
sub
jecxz
adc
jp
xor
outsb
repz
xor
insl
fwait
addr16
das
sbb
sub
addr16
pop
jo
sarb
jp
out
add
adc
iret
sub
inc
add
addr16
loope
js
inc
mov
outsb
dec
testl
andl
add
outsl
sub
dec
ja
sbb
inc
push
sub
push
out
sub
mov
sbb
dec
repz
push
dec
inc
mov
jae
xor
lods
fdivs
outsl
xchg
imul
or
jae
aaa
push
mov
insl
xchg
stos
cmpsb
outsb
inc
cmp
add
pop
jbe
and
outsb
rcrb
cmp
push
or
add
dec
or
mov
insb
or
stos
adc
es
ss
push
bound
out
call
dec
jg
add
hlt
jmp
xchg
or
cs
mov
or
sub
jno
outsl
outsb
inc
dec
push
fisubrl
push
inc
pop
out
jno
mov
mov
add
out
mov
adc
pop
inc
jne
sub
cmpsl
fldt
pop
cmp
das
push
icebp
cmp
cmp
jb
aad
fdivrl
jbe
sub
jns
adc
inc
fistpl
outsl
js
and
push
fidivs
inc
ja
jo
icebp
arpl
ds
pusha
out
je
daa
das
xlat
xor
call
sub
loope
jo
rorb
inc
dec
xor
xchg
pusha
scas
data16
neg
sub
sti
je
jns
sub
mov
adc
mov
ja
mov
inc
sbb
adc
pop
add
fs
addr16
popa
or
ret
popa
and
inc
aas
outsb
xchg
adc
push
jne
dec
add
filds
pop
push
adc
add
and
pop
mov
imul
push
jo
pop
decl
push
data16
push
jb
outsl
xchg
mov
sbb
test
mov
repnz
ja
adc
jo
adc
fidivrl
sbb
jp
adc
stos
ss
push
dec
add
inc
adc
imull
mov
sbb
jnp
and
xchg
jae
sbb
cmpsl
ja
pop
mov
pop
mov
stos
cmpsl
aas
jnp
lods
mov
cs
push
sub
fimull
sbb
arpl
popa
sub
loopne
cmp
out
outsl
enter
out
arpl
imul
nop
test
mov
lret
filds
repz
xchg
js
mov
pop
inc
xor
inc
daa
sub
pop
and
push
jae
in
lods
jo
into
inc
mov
lcall
cmpsl
insl
dec
imul
subl
push
push
das
outsl
sub
jecxz
mov
dec
sbb
iret
and
push
dec
popa
fldt
jb
sub
sbb
jo
es
inc
cmc
and
rorl
das
stos
es
das
sbb
punpckhwd
push
mov
xorps
in
bound
inc
inc
or
push
inc
sub
data16
rcrl
push
aas
fisubl
or
adc
push
daa
adc
and
movsl
or
or
ss
mov
addr16
loop
push
or
in
mov
pusha
sbb
adcl
add
push
push
sub
call
jnp
pusha
xchg
push
fwait
jg
cmpl
mov
sub
jmp
sbb
mov
jge
pop
add
sbb
cmp
rcrl
lods
add
or
pop
lods
push
mov
aaa
daa
mov
jo
daa
popa
das
add
pop
hlt
pusha
insl
sbb
aas
imul
stos
adc
push
cmp
test
and
stos
push
pusha
sarl
xor
test
arpl
mov
fbld
fldenv
aad
sbb
push
mov
ja
and
dec
mov
sub
rolb
jns
push
andl
mov
pop
repz
sub
addl
pop
mov
stos
shlb
pop
imul
mov
xchg
or
scas
push
xchg
mov
push
xor
pop
cmp
mov
jae
shrb
sbb
notl
cmp
dec
xor
pusha
je
mov
pop
aad
pop
insb
roll
mov
ljmp
sbb
cmp
or
mov
inc
mov
daa
xlat
xsaveopt
pop
in
jo
xchg
popa
andl
pop
pop
jae
test
cmp
stos
mov
scas
psrlq
inc
xor
inc
stos
adc
out
incl
je
push
mov
push
mov
sbb
aaa
cmpsb
andb
jle
outsl
mov
jo
inc
aas
dec
repnz
mov
insl
add
or
mov
add
bound
shrb
cmpsl
adc
pop
xor
lcall
cmp
fisubrl
shlb
xlat
sub
push
subl
jne
andb
inc
insb
test
adc
in
pusha
or
cs
fadds
outsb
inc
stos
jmp
aaa
test
jo
fcmovnbe
jecxz
bound
pop
lcall
push
pop
imul
inc
cmp
push
and
scas
jbe
repz
dec
jecxz
push
gs
fistpll
push
cmp
mov
mov
outsl
inc
push
jnp
pop
jbe
jbe
xchg
or
jnp
jo
jb
add
adc
dec
mov
movsl
sahf
insb
inc
jg
orb
mov
mov
pop
dec
out
mov
mov
bound
and
sub
jp
repz
arpl
divl
imul
cmpsl
jbe
and
xchg
mov
push
aas
dec
and
loop
sti
gs
pop
sub
cmpb
cmpb
packsswb
imul
mov
ret
sub
das
mov
sub
out
add
shlb
xlat
jge
jno
sti
adc
cvttps2pi
add
mov
push
fistl
rolb
mov
and
fimuls
jae
ja
or
mov
mov
pop
in
rclb
sbb
stos
xor
xor
fiadds
bound
xlat
ss
sarb
fldt
pop
xor
xlat
push
and
mov
jmp
xor
mov
mov
xchg
add
xor
mov
scas
pop
push
ss
test
jecxz
mov
addr16
add
pushl
test
mov
data16
jmp
xor
jae
add
out
adcb
or
daa
mov
dec
xchg
xlat
sbb
fadd
jns
push
push
popa
adc
jo
pop
rolb
insb
jmp
jmp
popa
xchg
inc
fistpl
push
push
lret
bound
jbe
addr16
push
pusha
daa
push
jnp
jecxz
or
pop
and
sub
rorb
testl
mov
xor
mov
repz
int3
push
push
cmp
rcll
jae
mov
notl
dec
aad
cwtl
or
adc
inc
adc
stos
adc
rol
mov
cli
aas
adc
insl
sbb
mov
jb
jl
scas
dec
jb
and
imul
xor
sub
push
sbb
roll
pop
jg
ss
arpl
pop
lods
cmpsb
mov
push
arpl
addb
stos
mov
mov
inc
mov
inc
jnp
out
and
xor
push
adc
ret
inc
addr16
pop
popa
pop
imul
add
and
add
lods
cmp
push
or
and
xchg
sub
movsb
or
dec
cmp
dec
mov
sbb
mov
arpl
push
test
and
adc
ljmp
push
push
sub
pop
mov
inc
mov
mov
or
and
mov
xchg
fisttps
fildl
xchg
inc
insb
movsb
mov
cmpsb
cmp
jg
mov
divl
pop
inc
pop
je
inc
and
mov
and
add
lret
adc
fisubrs
mov
aam
jns
pop
jl
shll
push
imul
pop
outsl
push
pop
lock
mov
jae
shrl
add
loop
and
in
xchg
jb
arpl
mov
push
lcall
aaa
mov
icebp
cld
inc
add
fwait
cmp
test
dec
add
popa
and
pop
add
mov
dec
push
xor
cs
sub
add
adc
fadd
jmp
xchg
imul
cmp
or
cmp
fwait
adc
jne
mov
sbb
insb
add
es
or
jmp
ja
inc
jo
ficoms
test
inc
shll
outsb
sarb
pop
es
pop
inc
cmpsb
and
dec
js
push
dec
push
jae
shll
dec
ss
push
push
dec
fadds
fwait
sbb
in
add
and
cmpsb
sub
movsl
cmp
mov
or
notb
lea
push
push
inc
pop
cmc
adc
cmpsl
pop
fsts
pop
sub
lods
jmp
add
cwtl
mov
adc
push
outsl
fwait
insl
ja
sub
insb
sub
mov
push
mov
mov
aas
sbb
je
mov
xchg
push
jb
sub
inc
push
dec
je
and
mov
xchg
int
hlt
adc
mov
and
push
cmc
push
sbb
xor
outsb
jb
movsl
adc
xchg
es
iret
adc
mov
fwait
sbb
inc
insb
insl
xchg
movsl
pusha
test
xchg
cmp
jae
mov
cltd
and
mov
test
xchg
push
lds
push
jo
or
xor
pop
in
stos
ds
cmpsl
sbb
dec
out
mov
popa
and
adc
cmpsl
or
or
loopne
roll
in
add
dec
xchg
jne
insl
xor
jge
neg
lock
imul
push
add
sbb
mov
dec
sbb
bound
movsl
loopne
bound
xor
stos
sbb
xlat
push
push
movsb
outsb
inc
pop
push
orl
mov
sbb
inc
ss
rorb
adc
push
test
push
adc
arpl
adc
stos
add
mov
dec
inc
bswap
icebp
add
loope
add
ret
pop
or
or
cmp
lds
paddsw
or
mov
cmp
loope
jnp
dec
or
lret
add
or
and
push
push
add
xor
inc
inc
pop
and
shll
and
addb
lods
lret
add
test
xor
cwtl
add
pop
add
cwtl
mov
or
inc
or
imul
inc
jae
add
add
add
push
jb
add
push
pop
xchg
inc
xor
mov
sub
arpl
inc
adc
mov
and
daa
test
add
cmp
callw
and
aaa
or
popa
cmp
dec
ret
in
rolb
inc
pusha
outsl
mov
loopne
les
sbb
js
insl
and
cmp
sti
ret
push
gs
and
imul
outsl
lock
addr16
lock
and
data16
add
pop
or
imul
push
or
sub
mov
fsts
filds
sub
xchg
mov
xchg
loope
dec
adc
mov
imul
cs
fcmovnu
dec
mov
mov
cltd
loop
rorl
mov
mov
xchg
inc
jns
outsl
xchg
add
inc
sub
inc
push
push
fimull
xchg
sbb
dec
adc
pop
mov
pop
add
sub
inc
gs
je
bound
or
insb
loopne
sub
or
push
mov
or
and
rclb
mov
jmp
add
xchg
push
insl
inc
js
pop
push
xchg
mov
dec
inc
dec
inc
daa
push
push
addb
sub
mov
and
xor
inc
into
sbb
nop
ja
push
sub
xor
popa
loopne
mov
lret
mov
sbb
or
pop
or
push
sbb
inc
jp
leave
push
xchg
data16
push
lock
inc
js
inc
cli
cmc
push
xor
mov
dec
rclb
addr16
dec
fs
insb
inc
pusha
daa
cmp
enter
es
sub
dec
inc
push
aad
sub
push
addr16
mov
mov
sub
mov
gs
mov
insl
jmp
mov
sbb
inc
push
sbb
adc
adc
popa
mov
xchg
lret
and
cmp
aaa
inc
lret
mov
sbb
mov
sbb
in
imul
sbb
and
bound
mov
loopne
lods
inc
aam
mov
xor
pop
push
aaa
pop
pusha
mov
lahf
int3
dec
push
insb
jae
inc
rolb
and
mov
imul
inc
jno
lds
push
jns
inc
xor
nop
mov
int
ljmp
adc
pop
adc
add
ljmp
into
gs
dec
push
rcll
outsl
inc
call
or
push
test
jo
ret
mov
imul
inc
imul
loop
sub
das
push
or
xchg
adc
inc
test
jb
scas
jmp
pop
loop
sbb
sbb
push
cmp
popa
cmp
push
adc
xor
je
ja
adc
imul
sbb
orb
repnz
sub
mov
mov
and
or
or
add
and
inc
jle
loopne
stos
sbb
cmpsb
sub
pop
dec
mov
sub
lea
cmpsb
inc
add
or
push
cmp
fiadds
sub
and
rcrb
mov
inc
mov
dec
or
fisubs
hlt
sub
mov
mov
sbb
push
mov
insl
movl
and
insl
xor
ljmp
sub
sbb
push
mov
mov
in
lahf
mov
dec
pop
fldt
pop
cmp
sahf
or
and
arpl
insb
jae
inc
add
loopne
jb
jl
or
pusha
scas
lock
rclb
fisubs
daa
mov
ljmp
insl
sbb
jge
dec
push
xor
sti
adc
jo
inc
fwait
dec
inc
push
movsl
in
mov
jnp
jae
add
add
imul
mov
in
sbb
aad
inc
inc
in
cmpsb
pusha
fwait
add
test
sbb
jnp
add
and
js
sbb
mov
and
mov
push
push
mov
push
push
jae
test
add
mov
leave
inc
add
and
add
mov
out
xor
inc
sbb
jbe
adc
mov
jmp
outsb
inc
outsl
inc
xchg
lods
jbe
outsl
gs
pop
push
cmp
or
fisubl
mov
shrb
push
lahf
push
adc
imul
outsb
sbb
inc
mov
and
mov
adc
rcrb
push
sbb
add
xchg
bound
arpl
or
and
pop
cltd
adc
push
xchg
ret
and
fsubrs
mov
and
insl
sbb
sub
rcrl
rol
stc
stc
daa
aaa
es
lods
or
insl
mov
adc
push
daa
or
adc
jns
and
les
inc
ret
add
mov
pop
push
loop
lds
cmp
clc
movsl
lret
adc
fucomip
cmc
imul
rcrb
push
mov
dec
dec
testl
hlt
jecxz
or
cmp
jg,pn
fisubrl
ret
cmp
popa
rorb
or
xor
pop
dec
inc
ficoml
push
fcmovbe
dec
push
adc
and
add
and
scas
pop
daa
add
and
pop
les
mov
jno
lcall
add
cld
mov
gs
sub
pushl
data16
and
sub
inc
jne
daa
dec
xorb
aaa
push
imul
sbb
adc
dec
cmp
xor
or
adcl
push
xchg
insl
xchg
dec
insb
test
out
sbb
or
push
sahf
mov
and
cwtl
leave
adc
mov
subl
inc
das
push
dec
cmp
dec
movl
js
nop
dec
inc
lods
jecxz
add
in
push
mov
test
or
add
cmp
xchg
adc
sub
mov
dec
pop
fldcw
insl
in
outsb
lea
movsb
mov
jmp
je
add
mov
mov
add
pop
out
sub
or
mov
ds
mov
cmp
rcrb
adc
mov
popa
or
sbb
aad
lea
jo
push
sar
cs
mov
pop
mov
sub
add
inc
jo
cmp
xchg
ret
add
lcall
inc
mov
sub
int
pop
out
lret
xor
push
in
xor
sub
push
inc
push
sbb
cmp
insl
push
bound
dec
jge
outsl
sub
pop
adc
test
jecxz
adc
shll
pop
js
adc
aad
sbb
loope
adc
fwait
cs
stos
daa
rcrl
and
pop
imul
aaa
add
in
lcall
add
hlt
lods
push
dec
sub
ret
ret
add
dec
pop
cmpsl
sbb
jae
or
and
jo
stos
cltd
sbb
imul
sub
fcoms
adc
cmp
sbb
inc
or
adc
imull
and
mov
fs
mov
loopne
jmp
fmull
push
clc
out
and
testl
sahf
dec
popf
rclb
aas
sbb
or
inc
and
inc
sub
pminub
push
xor
sub
pop
clc
test
test
outsl
cmp
pop
add
imul
sbb
in
sbb
mov
pop
inc
xchg
jecxz
nop
inc
inc
dec
inc
mov
or
pop
fwait
sbb
cmp
in
pop
mov
cmc
and
gs
call
or
sub
movsl
test
test
sub
and
sbb
push
in
push
inc
adc
mov
ss
adc
rcr
adc
dec
inc
and
or
sbb
and
gs
mov
fsubp
movsl
movsl
inc
sbb
mov
and
adc
dec
in
sbb
push
add
mov
xor
or
es
and
jae
xchg
sub
adc
sub
sbb
jo
adc
shr
fs
mov
scas
and
int3
insl
and
cmp
mov
rcrl
push
sbb
sbb
jg
fwait
inc
call
inc
insb
pop
dec
sbb
push
das
and
jmp
adc
push
sbb
add
cld
inc
jo
jo
push
mov
rclb
and
mov
dec
outsl
iret
cmp
aaa
inc
dec
outsl
ja
fadd
and
inc
pop
inc
ja
shll
mov
fs
xchg
orb
lds
mov
lcall
test
push
push
pop
sub
lods
inc
sub
jo
jo
sbb
lahf
aaa
pusha
arpl
or
mov
dec
cmp
lods
mov
sarb
mov
loop
mov
and
cmp
add
xchg
dec
adcb
pop
add
jo
mov
xchg
cmpsl
pusha
mov
jb
dec
dec
cmp
mov
and
xor
fwait
sub
stc
decl
sbb
dec
add
add
jp
dec
addb
jg
sbb
mov
xchg
fcoms
adc
daa
inc
pop
ss
loopne
add
sbb
or
xorl
das
outsb
and
mov
push
enter
sbb
fstpl
mov
fdivs
test
mov
push
out
mov
imul
push
or
adc
outsb
clc
repnz
inc
and
inc
shr
inc
aaa
shrb
push
test
pop
nop
push
es
add
repnz
leave
sti
aaa
push
dec
xor
leave
repz
adcb
jb
in
inc
sbb
add
add
sahf
inc
dec
gs
mov
dec
jb
inc
jae
dec
movsb
jbe
mov
xchg
jbe
pop
pusha
das
test
mov
add
add
add
xchg
xlat
push
add
daa
stc
insl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
xchg
mov
xchg
out
