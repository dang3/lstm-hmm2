and
cltd
adc
outsb
xor
in
out
lods
push
cli
mov
sbb
cmp
jge
push
cmp
sahf
dec
pop
mov
sub
pusha
adc
xorl
push
shll
out
mov
es
mov
out
mov
adc
imul
addr16
xchg
cmp
xor
cs
daa
andl
rorl
inc
fcomp
jnp
int3
xlat
rolb
in
push
stos
das
sub
call
in
cmc
pusha
mov
pop
test
xor
or
mov
mov
adcl
outsl
xor
jmp
cmc
aas
or
mov
dec
pop
jne
ss
es
sbb
add
movsl
fwait
mov
js,pt
pop
insb
mov
sub
inc
jg
sbb
add
aam
into
out
in
rcrb
iret
clc
sti
dec
pop
les
iret
je
test
sub
movsb
ret
inc
ret
movsb
in
pop
xchg
xchg
sar
lock
dec
cmp
adc
jp
adc
addr16
push
cmp
bound
ljmp
mov
pop
jg
sbb
dec
stos
adcl
xor
insb
insb
movsb
dec
xchg
mov
loope
xorl
or
cmp
add
dec
adcb
in
fsubrs
dec
push
or
add
xor
mov
sub
aad
jmp
xchg
int3
lahf
cmpsl
outsl
test
xchg
shl
jae
fsubp
or
cmp
pop
xlat
xchg
lds
add
pop
nop
fcmovu
or
fs
xchg
cmp
xchg
mov
sub
sub
in
sub
stc
inc
cmp
repnz
inc
pusha
jp
cmp
push
lret
scas
cmp
mov
jns
ret
push
push
ret
inc
sbb
xlat
xlat
popa
outsl
call
pop
cmpsb
jns
cmpsl
cmc
add
jmp
std
ljmp
ja
add
fs
cmp
dec
xor
rcr
adc
or
sbb
push
pop
repz
in
push
cmp
ficompl
pop
aam
xlat
push
push
mov
pusha
aaa
dec
adc
pop
dec
sbb
ds
addr16
xor
adc
jg
mov
fcomps
add
sub
xchg
adc
mov
inc
push
cmp
cmp
adc
shlb
mov
repz
sti
jmp
pop
cmp
xor
xchg
mov
sahf
add
jmp
cwtl
ljmp
lret
xchg
iret
mov
in
inc
sbb
xchg
xchg
cmp
inc
stos
xor
inc
ja
lods
dec
pop
aaa
shlb
jns
out
xor
pushf
and
hlt
push
inc
aad
rcl
add
adc
sbb
push
shr
mov
adc
pslld
das
xchg
repnz
fwait
cltd
mov
jnp
int
inc
mov
nop
sub
andl
sub
out
lock
lea
cmp
sub
jno
mov
insl
push
or
push
jbe
sbb
mov
lret
and
xchg
jno
shl
xchg
out
fdivp
arpl
mov
nop
in
dec
push
lods
inc
jmp
jp
popf
rcl
or
mov
jl
mov
fprem
jge
cmp
push
xchg
add
nop
fcmovnu
cs
cmp
inc
mov
leave
dec
jmp
cmpsb
cmp
push
dec
cmc
jmp
xor
add
cmp
sub
adc
out
repnz
xor
jp
gs
and
cmc
mov
and
dec
push
and
addl
aaa
pop
arpl
lods
lods
adc
lret
icebp
add
mull
ja
lods
and
insb
push
bound
sub
divl
jp
sub
pop
popa
lahf
gs
and
mov
int
cld
mov
aam
add
xor
xchg
jg
mov
dec
pop
and
add
test
iret
test
dec
mov
cmp
aas
scas
clc
fistpl
ret
xchg
out
call
not
xor
loope
or
sub
mov
mov
sti
cmpsb
lret
mov
adc
jae
xor
ds
ret
mov
out
inc
xor
movl
sarb
sub
adc
ds
dec
jbe
pop
out
adc
pop
jb
mov
call
repz
or
push
cmpsb
dec
fcompl
lret
mov
cmp
hlt
hlt
or
jbe
pop
out
das
dec
mov
movsb
dec
int3
mov
pop
imul
add
test
sahf
mov
inc
push
inc
popa
pusha
jmp
sbbl
das
rorl
int
mov
push
xchg
std
test
aaa
fsts
sbb
bound
sahf
jns
es
ficoml
push
lret
cli
xchg
jne
cmpl
ret
mov
out
scas
push
add
iret
jge
pop
out
and
inc
in
jmp
cmpsb
out
fidivl
dec
xor
std
xchg
or
mov
adc
roll
addr16
cmp
jp
and
mov
ljmp
inc
jno
leave
mov
hlt
inc
mov
in
inc
cld
pop
adcb
xchg
fwait
inc
mov
jle
jp
loopne,pn
test
call
jecxz
inc
xchg
ror
rcrl
sbb
scas
pop
scas
ret
mov
fimull
mov
loopne
dec
mov
cmp
push
mov
or
test
mov
adc
push
or
inc
pusha
jns
gs
cmp
sbb
clc
xchg
rorl
in
xchg
nop
sbb
arpl
inc
dec
icebp
xchg
xorb
incl
les
or
loop
lds
ficoml
add
or
mov
xor
sub
xchg
stos
lar
dec
mov
loopne
stc
dec
add
addr16
push
aas
mov
mov
sahf
aaa
push
nop
pop
cmpsb
lods
xor
ds
inc
push
adc
leave
and
enter
push
aam
popa
daa
movsb
and
adc
and
inc
xchg
dec
mov
bound
jae
push
loopne
dec
pop
aas
insl
or
push
mov
into
sahf
clc
sti
int
pop
or
xor
sbb
xchg
out
xor
jbe
jns
mov
js
ja
mov
push
xchg
fcmovne
loopne
jg
rclb
cwtl
pop
or
inc
frstor
test
neg
popa
cmpsl
mov
stos
inc
pop
lods
imul
jp
pop
pop
repnz
xchg
jnp
aam
or
jno
testb
gs
dec
popa
bound
dec
xchg
insb
lret
sub
out
dec
aam
dec
push
enter
jae
pop
push
mov
in
insb
cmpsb
mov
mov
cld
clc
test
dec
jne
repz
hlt
dec
cmpsl
add
jecxz
jmp
xchg
scas
mov
cmp
mov
push
cmp
cmpl
push
xchg
push
and
cmpl
out
dec
mov
in
mov
fadd
in
shl
and
mov
mov
mov
fld
add
in
push
add
sti
aaa
xchg
mov
and
push
adc
adc
hlt
push
gs
mull
or
adc
scas
sub
sti
mov
insl
push
jl
mov
inc
or
pusha
sub
out
mov
pop
sbb
mov
lcall
mov
push
xchg
daa
scas
cmp
adc
mov
cmp
in
jle
pop
push
lea
add
inc
pop
gs
popa
xchg
pop
scas
dec
movsb
shll
sbb
fs
mov
mov
xchg
mov
and
fsubr
push
cs
in
jne
sbb
ss
jbe
sti
imul
iret
mov
inc
daa
push
push
insl
or
fwait
adc
enter
lock
pop
push
shr
in
pop
add
inc
dec
call
push
popf
dec
sub
sbb
aam
lret
cmp
dec
in
mov
jmp
pop
in
jle
insb
or
push
arpl
sub
or
push
fcomps
mov
js
dec
fcompl
mov
mov
scas
dec
mov
int
pushf
xchg
sub
mov
mov
inc
push
icebp
xchg
outsb
clc
jb
sub
mov
pop
fists
inc
push
test
xchg
xor
mov
jl
jecxz
lock
gs
jg
push
xchg
xlat
hlt
lahf
lret
enter
lods
xor
jno
je
aad
dec
dec
jmp
sti
add
xor
outsb
xor
rclb
adc
lcall
push
sbb
inc
push
int
mov
and
mov
movsb
fisttpl
xchg
outsl
dec
jecxz
and
push
enter
mov
cmp
sti
jnp
rcll
mull
or
movsb
cmpsb
dec
adc
pop
adc
pop
sbb
xor
out
pop
outsb
adc
sarb
and
inc
and
sbb
clc
mov
jnp
sbb
dec
test
mov
jno
push
push
mov
push
cli
dec
fdivs
xor
cltd
out
mov
pusha
pop
cld
adc
dec
insb
cmp
adc
jno
outsb
mov
pusha
mov
jp
pop
jle
fwait
xchg
dec
dec
and
prefetcht0
xchg
js
arpl
lret
int3
and
sbb
add
push
fcompl
stos
call
jecxz
sub
icebp
sbb
lret
shlb
add
fs
test
fs
push
fistps
fnstcw
lar
xor
dec
xchg
push
out
fsubrp
and
mov
fldt
stos
mov
flds
pop
pop
pushf
lret
imul
ja
insl
cmc
test
xchg
cmp
xchg
lret
push
dec
hlt
pop
subb
adc
dec
sbb
adc
loopne
and
cmpsl
loopne
cmp
inc
or
in
cmp
or
push
add
int3
inc
mov
fwait
adc
stc
mov
ret
jl
inc
je
mov
jnp
jae
ja
or
adc
push
add
in
dec
or
insb
pop
jp
lret
jo
push
test
pop
flds
insb
idivb
jp
jno
and
in
adc
dec
stc
sbb
test
ficoms
insb
scas
mov
insl
sub
aad
inc
jb
div
pop
sahf
test
and
and
xlat
mov
arpl
jno
rcrl
inc
test
testb
pop
pop
cs
xor
add
loop
idivb
sbb
repnz
mov
or
adcb
push
and
inc
xchg
stc
mov
setb
mov
sbb
imul
sbb
shll
push
subb
dec
inc
pop
insb
or
xchg
ja
inc
push
shll
pop
mov
fstpt
out
push
jmp
or
in
hlt
loop
ljmp
mov
xor
clc
in
fnstenv
mov
das
mov
lret
fs
mov
pop
and
jecxz
cmp
pusha
ret
jo
enter
add
jbe
std
lret
mov
push
addr16
outsb
test
aad
loope
jp
push
negl
popa
and
xor
or
inc
gs
mov
xlat
pop
test
ret
mov
dec
xchg
inc
cmp
pushf
adc
inc
jae
ja
loope
sub
into
mov
cmp
dec
imul
insl
out
adc
test
je
mov
dec
es
xchg
ja
mov
push
xorb
ss
pop
in
push
aad
cmp
jl
xor
js
xchg
sub
dec
js
pop
sti
push
lock
cmp
add
push
mov
filds
push
inc
xchg
movaps
repz
inc
dec
jecxz
jae
add
and
adc
repz
adc
sbb
push
iret
popa
out
sub
or
push
sub
std
popa
jle
aad
sub
insb
cmovae
sbb
movsl
mov
cmc
test
out
cmp
ja
mov
mov
jg
cmp
insl
sub
setp
lahf
std
lds
cltd
add
daa
mov
fnstcw
shlb
popf
clc
addr16
or
pop
push
or
es
xor
repz
pop
mov
pop
cmp
cmpsb
addr16
mov
mov
ljmp
or
mov
icebp
ret
or
or
xchg
xchg
jle
mov
sbb
add
ljmp
dec
mov
clc
and
mov
mov
xchg
fcmove
lods
loop
jg
je
fildll
stos
dec
jnp
das
ret
cmpsb
jnp
jno
mov
xor
or
jae
cli
pop
mov
mov
shlb
leave
lods
adc
daa
shrl
stos
xchg
adc
xchg
xchg
xchg
popl
jb
pop
inc
hlt
test
adc
js
or
fsts
cmp
lahf
push
lahf
sahf
hlt
in
adc
sub
fidivrl
rcr
lcall
lods
sub
fwait
sbb
cmp
loop
lea
push
push
fcoml
fmul
sbb
scas
sti
sbb
and
push
fldl
es
xchg
lret
dec
mov
push
push
jo
pop
pop
sbb
movsl
xor
ret
xchg
xchg
mov
js
loop
and
cmp
jbe
mov
and
add
jno
sarb
ror
cmpl
bound
mov
adc
ljmp
addr16
cltd
jmp
jecxz
pop
addb
mov
lret
or
ret
cmp
nop
mov
push
in
hlt
dec
bound
sub
or
ficomps
inc
in
popf
imul
loop
icebp
add
xor
pop
movsl
sbb
fistl
mov
hlt
or
fsts
icebp
add
or
jns
iret
push
jmp
movsl
cmp
ljmp
jno
or
fistps
out
insl
mov
lock
addb
sub
bound
imul
gs
dec
or
add
outsl
lock
ret
mov
xor
mov
cli
sbb
push
pop
jne
and
ja
xor
psllw
mov
and
into
mov
in
fisubrs
xchg
sub
jmp
imul
mov
scas
ftst
lds
decl
lea
xchg
xchg
lds
jge
mov
sub
jg
dec
inc
mov
outsb
lret
out
xchg
popf
ret
in
fisubs
cmpsb
sub
jmp
inc
test
adc
jp
arpl
mov
dec
loope
pop
scas
rorl
or
insl
sub
mov
icebp
ret
mov
adc
and
xlat
or
mov
cwtl
enter
fstpt
xor
sub
jne
lods
int
imul
out
fs
out
test
pop
sub
ja
outsb
push
mov
push
sub
or
xchg
iret
ja
mov
fbstp
mov
sbb
sbb
xchg
dec
popf
bound
je
fs
lds
jg
mov
or
cli
sub
cld
insl
test
mov
inc
lret
xlat
test
dec
loopne
cld
pop
test
das
fisubrs
and
test
andl
mov
shr
mov
push
insb
std
pop
clc
out
dec
dec
shrb
loopne
lods
in
inc
icebp
lahf
in
pop
xor
add
jecxz
scas
jns
xor
push
lods
fldz
out
jp
dec
xchg
dec
dec
lahf
pop
mov
mov
lret
popl
mov
jge
mov
data16
inc
repnz
pop
cmp
mov
fistl
inc
jp
int
mov
adcb
shrb
xor
pop
popa
fldcw
leave
outsb
bound
pop
loop
mov
imul
and
les
lds
push
xchg
xor
push
pushf
xchg
push
push
jo
into
adc
and
jp
xor
adc
imul
cmp
aaa
mov
ljmp
mov
stos
dec
xchg
clc
pushf
jno
lret
in
fwait
es
jns
sarb
lds
ret
ja
loope
sbb
icebp
jecxz
je
les
insb
mov
fsubrs
out
and
cmp
in
jmp
or
cmp
push
push
fwait
xchg
sbb
adc
push
adcl
push
sbb
push
xor
nop
fprem1
sbb
rol
lcall
lods
std
lret
stos
mov
add
sbb
out
pop
or
or
jbe
scas
movsl
push
sbb
je
lods
sbb
inc
sub
iret
pop
fldcw
aaa
or
ret
cmp
ljmp
hlt
mov
sarb
sub
sub
fldenv
mov
cmc
mov
aas
call
dec
outsl
mov
push
or
shll
movsb
xor
in
sbb
mov
jno
cwtl
mov
jecxz
dec
jno
jecxz
ret
lret
cmpsl
pop
call
cmpsl
sbb
push
sub
xchg
sbb
jl
cmc
mov
pop
std
daa
lret
jne
inc
decl
mov
cwtl
int3
daa
repnz
test
cmp
mov
xlat
push
pop
jne
sahf
xor
mov
shlb
mov
in
inc
mov
push
or
enter
loope
cmp
pop
inc
rorl
loope
sbb
mov
and
mov
inc
cld
aad
pusha
jmp
push
cli
and
sahf
call
call
mov
arpl
popf
sbb
mov
aaa
orb
or
loope
xorb
and
mov
daa
cli
das
and
pcmpeqb
out
test
stos
rcr
inc
shl
stc
stos
in
xchg
test
cli
cld
push
stos
push
sub
scas
inc
scas
iret
xor
loope
cmp
sub
std
jge
xor
cmpsb
mov
push
pop
xor
xchg
stos
adc
push
xor
cmp
inc
loope
add
add
mov
cmp
jecxz
call
inc
lcall
mov
sbb
inc
mov
jno
push
lret
pushf
jl
icebp
xor
mov
jns
cwtl
mov
pop
lcall
mov
lret
add
xchg
push
cmp
shrb
inc
sub
insb
in
adc
sbb
testl
and
adc
dec
hlt
lods
fcomip
jns
cmp
xor
mov
and
lods
add
push
xor
arpl
ficomps
pop
xchg
stos
mov
cmpsl
int
lea
mov
sbb
push
mov
mov
xor
ss
pop
imul
icebp
mov
sub
pop
fcom
out
cs
or
mov
lcall
imul
cmp
jns
sahf
cmp
movsl
sub
movl
out
jl
cltd
inc
es
inc
lds
dec
pop
mov
adc
push
push
and
out
inc
pop
lods
mov
mov
and
bound
pop
jae
xchg
bnd
daa
xchg
cmp
aaa
js
popf
scas
mov
lcall
inc
mov
popa
add
sbb
pusha
mov
mulb
adc
inc
and
add
ljmp
faddl
sbb
sbb
out
mov
mov
subl
iret
sbb
push
lret
pop
loope
fcoms
dec
aas
mov
and
loop
neg
mov
adc
jae
pop
jp
mov
xor
sbb
sub
pause
sti
gs
mov
lahf
jns
das
popf
lods
cmpsb
jecxz
sti
sub
jnp
andl
and
les
push
insl
mov
je
pop
icebp
cli
mov
adc
cmp
sbb
sub
and
int3
insl
ljmp
fwait
dec
push
int3
leave
stos
mov
leave
sbb
int
das
stos
idivb
cmc
pop
pop
scas
inc
lds
cmp
repz
data16
rclb
mov
pushf
call
das
mov
imul
cmpsl
inc
jns
jo
sbb
inc
enter
pusha
or
and
mov
mov
mov
xchg
adc
jb
fstpt
and
jno
shll
out
sub
mov
or
xchg
cmpsl
dec
sti
or
stc
icebp
xor
or
cmpb
mov
iret
not
xchg
pop
inc
xchg
rcr
sbb
into
mov
outsb
dec
cmp
xchg
sub
mov
inc
rolb
push
sub
into
fistl
mov
test
clc
adc
loopne
mov
cwtl
cmp
jnp
push
sbb
sbbb
rol
shl
loopne
cmp
ror
push
jne
mov
xchg
lods
stos
add
scas
stos
in
call
mov
xor
xchg
loope
push
push
push
jbe
popa
pop
xchg
imull
inc
arpl
mov
cmp
roll
xor
scas
mov
sbb
add
shlb
adc
xchg
inc
fiadds
jno
push
and
add
sbb
dec
jb
gs
test
fsubr
pushf
add
jmp
pusha
dec
lahf
sbb
mov
cmp
nop
push
movsb
rcl
push
fnstcw
loop
sti
mov
jl
aad
and
inc
mov
inc
sub
hlt
adc
fildll
lock
ds
add
mov
sarb
imul
cltd
pop
dec
xchg
mov
inc
leave
xchg
roll
xchg
mov
xchg
inc
gs
fisubl
stos
sbb
adc
mov
adc
xchg
push
cmp
aad
adc
popf
cmp
adc
aam
fildl
mov
test
jmp
xchg
push
adcb
sbb
nop
std
cmp
cltd
clc
fcomip
xorl
jle
add
adcb
cmp
inc
das
cmp
outsl
jno
fildl
xor
mov
fisttpl
pop
out
adc
popf
mov
daa
or
jl
add
shlb
jmp
or
mov
push
push
shrl
pop
pop
fwait
rcl
mov
mov
mov
std
jmp
pop
lock
out
mov
addr16
sub
popa
and
inc
ret
inc
add
cwtl
rol
lods
dec
repz
out
xchg
inc
mov
pop
add
inc
jno
lahf
mov
ds
pop
xchg
imul
mov
sbb
jmp
pop
stc
xchg
mov
insl
inc
loope
les
fwait
push
ljmp
in
cmp
cmp
in
adc
hlt
pop
lret
int3
movsb
fidivrl
nop
lret
adc
daa
mov
test
pusha
or
push
jns
cmpsb
movsb
xchg
sub
dec
or
push
sahf
dec
jb
into
test
push
and
sub
das
and
and
mov
or
mov
mov
movsb
aaa
push
icebp
stos
pop
mov
js
in
xchg
popa
lret
sub
negl
movsb
dec
adc
imul
xor
cmp
gs
aad
inc
mull
mov
popf
push
xor
or
mov
sti
enter
xchg
dec
add
mov
inc
and
adcb
divb
adc
pop
add
inc
sbb
push
push
adcb
hlt
add
ljmp
inc
js
lds
in
dec
jne
xor
inc
icebp
jle
int
dec
add
or
call
faddl
ror
inc
ljmp
lea
or
inc
das
cmpsl
addl
xchg
pushf
xor
in
daa
mov
xchg
xchg
push
into
je
mov
push
push
dec
mov
leave
inc
stos
adc
add
cmpsl
pop
shlb
rcr
iret
in
adc
pushf
inc
or
ds
je
or
jb
adc
sub
loope
xor
cs
es
scas
dec
dec
or
lods
ljmp
mov
das
filds
movsl
mov
add
subb
ret
fstpl
cmp
xor
dec
or
mov
mov
aaa
cmp
jae
push
fwait
jmp
pop
sub
or
dec
inc
imul
push
inc
sbb
stc
mov
nop
sub
xchg
pop
xchg
mov
imul
outsb
jp
and
lds
adc
enter
sub
mov
jg
std
cltd
stos
or
insb
mov
imul
repz
pop
cmp
pop
mov
inc
push
pop
cltd
or
dec
xchg
xchg
add
jg
addl
mov
cmpsb
int3
ljmp
int
clc
outsl
andb
and
and
jle
ljmp
mov
mov
cmp
inc
fisubl
je
addr16
fs
pop
adc
inc
fsts
das
outsl
add
scas
or
cld
in
xor
lock
scas
rcl
outsl
push
and
pop
or
pop
mov
mov
or
sbb
xchg
mov
sbb
cmp
popa
iret
add
enter
xchg
sbb
fisubrl
mov
ss
dec
sarl
movsb
into
jns
push
xchg
dec
adc
mov
sbb
pop
ljmp
mov
inc
xor
jp
pop
mov
xlat
and
negb
push
push
mov
dec
fisubrs
movb
pop
mov
loope
xchg
jge
in
sub
lret
xor
adc
les
cmpb
ret
loopne
pushf
je
lds
in
or
daa
shrb
stos
dec
inc
adc
cmp
ss
jnp
fldl
fsubs
inc
cltd
mov
out
dec
jbe
pop
adc
fnstcw
cli
pop
shlb
sub
lret
bnd
hlt
test
add
mov
jno
push
jp
mov
push
das
xor
xlat
jle
sbb
pop
mov
push
divl
mov
mov
push
dec
mov
loop
sar
add
in
inc
stc
cs
testl
les
push
add
jne
pop
adc
repnz
fmuls
jo
pop
std
sbb
lret
pop
repnz
inc
mov
shlb
push
pop
mov
icebp
lods
xchg
inc
ljmp
lcall
push
push
xchg
xor
xchg
pop
idivl
xchg
xchg
add
cmpsb
xlat
into
aad
or
shufps
cltd
pop
fs
dec
dec
cmc
dec
lahf
hlt
sahf
jl
add
fldenv
insl
push
adcl
fstp
sahf
and
int
movsl
jae
or
pop
lret
sahf
xor
fs
sub
loop
imul
mov
in
enter
sbb
ds
mov
mov
push
fisttps
mov
add
sbb
sar
andl
inc
ss
aad
outsb
mov
ret
xlat
mov
lock
pop
ja
pop
mov
dec
mov
pushf
idivb
pop
sbb
clc
mov
push
mov
int3
aaa
aam
xchg
mov
ss
sub
pop
mov
mov
popa
dec
ret
add
xor
sub
or
and
jge
sub
test
fs
push
es
ror
jp
mov
mov
pop
inc
fdivrs
lea
and
repz
lods
adc
pop
dec
jp
cld
push
subb
mov
sub
or
sub
jmp
push
xchg
push
pop
mov
fidivrl
jno
or
pop
jns
pop
lock
mov
andl
out
dec
lods
jp
fisubs
in
and
cmp
in
dec
loop
call
movb
dec
mov
sti
aaa
mov
popa
push
mov
or
shll
scas
gs
sbb
arpl
pushf
stos
jecxz
mov
adc
jae
sahf
into
pop
inc
es
or
ljmp
inc
pop
mov
adc
imul
xor
mov
adc
xchg
movsl
or
add
lcall
int3
mov
jmp
jge
cltd
pop
lds
mov
mov
movsb
lret
adc
sbb
cmpl
fdiv
ss
iret
cltd
in
add
fwait
outsb
inc
je
push
pusha
lds
pop
int
lahf
lods
and
lcall
sub
or
sub
add
aam
scas
mov
xchg
xor
lea
inc
dec
xchg
into
and
add
add
add
sub
cmp
lea
sbb
fwait
cmp
or
mov
and
jae
rcrl
xchg
cmc
lret
jl
jp
idivl
xchg
push
ds
jl
inc
ja
mov
lahf
and
jg
fbld
mov
cmp
and
mov
pop
sub
mov
ds
sbbb
popf
push
rcrl
inc
sbb
mov
xor
lahf
inc
ja
mov
or
xor
daa
leave
outsb
pop
adc
sub
sti
mov
std
cmp
fildl
ret
std
jg
test
fwait
sub
inc
jns
lahf
jns
dec
ds
pusha
or
cmp
inc
inc
ret
pop
xchg
pushf
pop
xchg
bound
xor
roll
xor
ret
repz
andb
data16
rol
xchg
lods
loopne
jle
xchg
sub
jns
stos
dec
pusha
xor
mov
stc
pop
pop
adc
call
fiadds
mov
mov
sahf
sbbl
mov
sbb
out
and
pusha
jecxz
fldt
inc
pop
lods
rol
mov
das
or
adc
dec
pop
lea
mov
dec
enter
lret
cmp
jl
popf
cltd
std
stc
pop
aad
xor
repz
or
dec
hlt
push
enter
sbb
test
jmp
out
out
es
std
imul
push
test
push
xchg
pop
mov
rcll
fsubrs
int3
imul
sbb
flds
mov
lahf
push
aaa
rcr
lcall
jae
addr16
stos
push
shll
pusha
popa
mulb
or
pop
add
sti
in
fmuls
dec
es
loope
sbb
mov
push
and
mov
fadd
pop
sbb
mov
sub
dec
imul
sbbl
xchg
sbb
or
sbb
nop
fiaddl
testl
mov
cltd
inc
push
jae
in
jmp
iret
push
clc
out
adc
mull
imul
mov
add
xlat
rclb
push
add
imul
inc
jg
xor
xchg
repz
push
aas
push
repz
add
inc
sbb
clc
cmp
mov
mov
out
xchg
loop
lods
movsl
xchg
pop
clc
jle
inc
cmp
pop
or
fstl
or
cmp
in
fnsave
vmread
jge
cmp
and
test
lret
adc
in
xchg
sbb
adc
adc
or
fisttpl
mov
loop
mov
adc
ss
icebp
lds
mov
insl
jmp
addr16
ss
cltd
jge
pushf
pushf
dec
test
movsl
xor
adc
or
cmp
cli
lds
dec
movsb
inc
jecxz
test
or
repz
jecxz
je
pop
mov
incl
leave
pop
xor
bound
mov
fwait
add
dec
leave
xchg
lahf
add
adc
pop
jne
jp
jmp
xlat
repz
addr16
fprem
mov
jns
in
dec
mov
je
in
sub
inc
xor
dec
repnz
ja
cmpb
pop
push
inc
add
in
scas
mov
pop
into
mov
fiadds
stos
test
cwtl
stos
movsb
outsb
xchg
fnop
lcall
movsl
push
sub
xchg
sti
mov
repnz
mov
insl
mov
dec
and
pop
lret
inc
insl
dec
and
packuswb
add
add
dec
xor
aam
mov
inc
flds
push
loop
cmp
leave
sbb
and
xchg
jle
data16
jo
aad
aaa
pop
jecxz
cmc
pop
adc
jecxz
pop
xor
popf
rorb
test
add
xor
fdivl
neg
xchg
int3
fs
fsubrs
mov
in
cmc
add
mov
cld
test
dec
push
xchg
bound
fisttps
in
dec
xlat
popf
pop
lret
push
flds
nop
mov
push
cmc
or
push
xchg
mov
xchg
andb
pop
add
xor
sub
mov
int
jmp
dec
cwtl
dec
cwtl
cmp
frstor
pop
pop
ljmp
xor
mov
push
jp
inc
repz
and
sub
pop
mov
shlb
mov
cmp
cld
xchg
and
jae
shlb
stc
imul
jo
out
sahf
jg
mulb
or
sub
mov
loope
or
mov
jp
pusha
sbb
add
cmpsb
jge
stc
adc
pushf
lds
int
and
jno
adc
fldt
jae
mov
sbb
xlat
mov
lahf
or
stos
xlat
and
and
xor
rclb
jl
stos
mov
rolb
xor
cmpsb
sbb
mov
subl
pop
out
cmp
in
push
pop
dec
adc
cmpsb
out
insb
sub
mov
shll
stc
pop
in
sbb
mov
loopne
push
jb
call
jle
mov
loope
inc
cmpsl
or
push
out
cltd
jl
push
iret
inc
mov
mov
std
daa
sub
movl
mov
std
int
mov
test
jo
push
or
loope
shr
xchg
mov
mov
or
mov
and
andb
sub
push
dec
call
cmp
and
sub
pop
insb
cmc
jbe
icebp
sti
sbb
mov
inc
insl
pop
std
rolb
not
dec
fadd
cmpsb
add
icebp
pop
add
je
jns
mov
jbe
xorb
test
jp
popa
cmpsl
in
sarl
cwtl
es
fimull
sbb
ret
push
cmpl
and
sub
stos
out
faddp
mov
jg
leave
sub
ficoml
jno
jp
jecxz
and
ret
ret
sarl
mov
mov
adc
add
ljmp
arpl
dec
inc
jmp
mov
imul
dec
xchg
xchg
push
scas
imul
mov
sub
test
or
xchg
jp
mov
jbe
lods
mov
and
adc
jle
daa
sti
int
cmc
fsubr
insb
notb
lret
mov
push
pusha
and
cwtl
loopne
loop
sub
pop
pop
push
lods
mov
movsl
xchg
xchg
fstpt
outsl
test
popa
xor
adc
mov
cltd
lock
jle
xchg
mov
in
rcrb
das
xor
pop
ret
mov
inc
mov
mov
jg
cld
std
adcb
pop
sbb
add
test
mov
pop
ss
test
or
xor
lcall
stc
std
jnp
push
xchg
xor
js
fdiv
dec
xchg
ret
pop
sub
push
cmp
mov
or
and
sub
push
daa
jl
ss
mov
clc
and
mov
pop
lock
sub
dec
push
loope
aad
sti
ljmp
xlat
stc
subb
pop
sub
gs
cmp
xchg
pop
lcall
cmc
imulb
mov
pusha
dec
dec
add
rclb
pop
ja
int
aaa
in
lea
out
fsubp
out
jno
lods
aaa
inc
sbb
or
mov
aad
mov
repnz
pop
sbb
inc
aas
mov
cs
addr16
pushf
cmpsb
push
jmp
jmp
scas
dec
in
xchg
test
xchg
xchg
adc
mov
retw
mov
adc
mov
cltd
dec
xchg
adc
mov
inc
push
sbb
pop
lahf
mov
shr
jmp
loope
jae
negb
jg
pop
mov
sub
aaa
pop
movl
rolb
adc
sub
jle
and
leave
xlat
pop
jg
das
cwtl
add
mov
lods
push
mov
adc
lahf
mov
inc
add
rorl
insl
insb
fsubrs
push
addr16
subb
enter
push
or
addl
jl
pop
sub
and
xchg
sbb
pop
pop
lea
push
addr16
jp
inc
movsl
lcall
inc
mov
xchg
lods
push
jne
in
push
push
push
xor
push
sbb
jno
jno
hlt
mov
mov
inc
xchg
and
shrl
push
inc
cmp
adc
cld
cltd
xor
adcl
and
cmp
sub
into
in
push
aad
adc
sbb
xor
dec
jp
sub
popf
out
mov
les
jnp
daa
sub
xchg
roll
int
scas
sbb
inc
xchg
jns
mov
add
jl
inc
mov
inc
and
and
inc
mov
mov
scas
jae
mov
cltd
pop
adc
cmp
in
imul
dec
rcrl
ljmp
or
lea
outsb
inc
dec
mov
imul
cmp
cmp
xchg
jns
scas
stc
xor
mov
mov
lds
pop
setg
repnz
mov
not
adc
jl
cmpsl
xchg
mov
data16
jmp
mov
cwtl
imul
in
dec
sub
ds
push
orb
pop
pop
pop
mov
mov
add
jne
dec
xor
jge
and
jmp
jno
mov
xchg
pop
and
xchg
dec
not
pop
or
xchg
in
in
jecxz
mov
and
xor
dec
dec
dec
lods
add
and
push
jle
out
xor
out
aad
xor
push
xchg
inc
cld
adc
scas
or
test
mov
dec
inc
push
sahf
cwtl
sahf
cs
aad
push
jno
jne
and
lods
xchg
cwtl
dec
xor
add
or
ret
stos
pop
shll
pushl
shrl
xor
hlt
xchg
pop
ret
xchg
inc
dec
hlt
mov
mov
and
aad
and
xor
fs
cmp
adcb
and
push
cli
fcoms
mov
das
js
jmp
sbb
xchg
and
aad
lret
mov
loopne
push
or
out
out
out
dec
and
cmp
cltd
jo
outsb
add
push
jmp
adc
lods
pop
dec
push
iret
into
cmc
icebp
repnz
pop
adc
fldenv
pop
mov
in
mov
cmc
hlt
shlb
cmpb
lret
sti
int
xchg
and
push
dec
icebp
sti
sub
jmp
jl
push
into
insl
cmp
or
pop
xor
lret
xchg
iretw
insl
shrb
sbb
adc
pushl
ficompl
daa
jp
fs
xor
xchg
in
imul
lret
xor
xchg
clc
call
xchg
sbb
inc
lret
cld
mov
std
gs
addr16
aas
push
xchg
popf
cmp
mov
lret
mov
jae
popf
pusha
mov
sub
cmpsb
neg
mov
lods
lret
adc
pop
sbb
push
xchg
test
ja
fxch
sub
mov
add
shll
jmp
and
rcrl
mov
mov
push
jp
xchg
xchg
pop
mov
pop
mov
cmp
stos
shll
fidivs
popf
xchg
ds
inc
cltd
sarl
xchg
mov
or
mov
jle
pop
xchg
popa
adc
jecxz
orb
mov
call
sarl
mov
loope
loopne
jl
outsb
sbb
in
add
adc
pop
lcall
and
xchg
mov
mov
outsb
pop
call
dec
incb
dec
pop
xchg
cltd
enter
into
mov
in
and
loop
sub
jg
pop
sbb
pop
adc
aas
sub
das
dec
fstl
mov
mov
pop
or
ret
push
mov
imul
loopne
or
jnp
cmp
cmp
mov
hlt
jle
jne
ds
pop
les
jbe
sti
popf
enter
push
arpl
push
cmp
inc
sbb
roll
push
adc
mov
ja
push
cmp
fs
mov
in
inc
pushf
sbb
imul
mov
gs
test
cwtl
rcrl
scas
sub
xlat
out
mov
push
scas
imul
dec
lret
ja
xchg
sub
jns
xchg
mov
cmc
push
push
rolb
inc
ljmp
loop
mov
std
xor
cltd
mov
jecxz
sbb
push
xor
sub
push
or
or
rcrl
sahf
test
push
or
mov
cld
sub
pop
sarb
mov
lds
inc
repz
cmp
xlat
test
or
mov
push
pop
js
push
jle
and
repnz
in
loope
xor
int
mov
or
fcomps
push
xchg
daa
lahf
cmp
je
inc
out
nop
add
push
pop
iret
cmp
jge
stos
mov
outsl
adc
jp
aam
add
or
push
hlt
iret
xchg
iret
or
sbb
bnd
sbb
sahf
lock
pop
insb
lock
daa
inc
or
or
add
jo
mov
inc
clc
mov
cmp
int3
adcb
jbe
call
jb
femms
and
add
outsb
and
sub
inc
pop
push
mov
xor
sub
xchg
push
mov
and
cmp
mov
adc
sbb
int
push
sub
fucompp
cmp
sbb
orb
sbb
pushf
or
cmp
es
xchg
enter
filds
or
arpl
outsl
lea
jbe
mov
or
pop
daa
cmpsl
pushf
call
xchg
icebp
and
cli
jecxz
outsl
mov
movhps
jge
mov
inc
and
push
rorl
jmp
loopne
sbb
ss
stos
outsl
cs
mov
stos
out
fcmovne
adc
fdiv
in
add
fimuls
or
mov
mov
int3
fsubs
filds
jno
mov
or
repz
xchg
push
lret
shlb
ficomps
cmp
xchg
sub
mov
mov
adc
fistl
rclb
pop
inc
mov
stos
hlt
add
cli
sarb
insl
jns
jnp
jo
test
pop
push
gs
ss
push
test
cmp
ret
adc
xor
adc
mov
orl
cmp
mul
fs
xchg
rcrb
rclb
es
dec
repz
xchg
fsubrl
jmp
mov
mov
cmc
xchg
cmpsl
push
cmp
xchg
jmp
testl
in
aam
or
fadd
push
outsl
out
ret
fldcw
jg
sbb
int3
leave
frstor
adc
jo
or
repnz
pop
push
and
outsb
sbb
sbb
sub
int
scas
faddp
leave
loopne
scas
and
ret
add
jb
bound
ja
cmp
loopne
add
xor
loopne
mov
in
add
mov
mov
pop
mov
arpl
mov
mov
stos
addr16
ds
sub
pop
pop
xchg
dec
in
jae
mov
imul
dec
pop
xchg
bound
mov
scas
loope
lods
loopne
ljmp
loopne
xor
adc
jl
xor
ljmp
js
dec
jp
jg
sub
sbb
shll
fsubs
shrb
insl
aas
cmp
sub
ss
loope
lods
inc
insl
mov
cwtl
dec
and
push
add
jb
push
fstpt
scas
xor
movsb
js
jp
insb
test
dec
outsb
inc
out
popa
loopne
pushf
lea
pop
fstpl
pushf
scas
dec
out
movsl
push
fsubp
cmpsl
pusha
jnp
ror
sahf
pop
enter
or
pop
cmp
arpl
jbe
out
sarl
xchg
add
push
sbb
andb
stos
push
fildll
add
cli
cli
std
test
mov
mov
mov
jae
cmpsl
xor
or
jns
ds
xchg
fucom
jmp
test
xor
data16
push
mov
pushf
lahf
and
test
js
sahf
sub
fidivs
jg
jae
jmp
loopne
mov
inc
pop
in
ds
shll
adc
add
cmp
rcrb
add
loope
arpl
fmuls
cltd
movsb
inc
cmp
push
loop
cmpb
pop
mov
cmpsb
sbb
loope
adc
std
int3
jbe
fldcw
adc
push
fidivrl
xchg
ret
ret
cli
orb
push
jg
jmp
mov
aad
inc
bound
jg
cmpsb
test
xchg
xchg
dec
jle
adcl
and
das
cs
xor
pop
imul
dec
inc
scas
mov
jle
mov
cmpsb
cltd
repnz
in
mov
insb
fcomi
dec
out
mov
fistps
das
divb
mov
mov
adc
dec
xchg
pop
add
mov
and
dec
in
jmp
pop
sbb
or
adc
cmpsb
loop
pop
enter
push
aas
adc
push
js
in
or
xchg
mov
sub
pusha
fdivrs
lods
cmp
pop
lcall
lret
cli
jmp
imul
inc
cmp
mov
mov
out
shrl
popf
or
out
pop
dec
int
jns
fcoml
cmp
and
xchg
aas
les
lret
pop
xchg
test
nop
data16
xchg
mov
adc
ret
mov
jns
adc
gs
stc
pop
jbe
jle
sbbl
and
imul
enter
imul
daa
movsb
js
addr16
pop
xor
mov
ljmp
mov
es
aad
jo
mov
dec
push
scas
jno
in
subl
rolb
sbb
lods
lock
jmp
aaa
aam
into
or
shll
les
outsl
rolb
inc
jl
jmp
xchg
cmp
rcrl
or
loop
aas
insl
imul
pop
dec
xor
or
adc
sti
call
loope
fcomp
and
cmp
mov
pop
dec
push
sbb
mov
repnz
sbb
jae
mov
push
dec
outsb
stc
lds
add
jge
mov
sbbb
test
sbb
add
hlt
sbb
je
xor
sbb
ret
insl
aad
mov
movsb
cmpsb
mov
mov
sarb
inc
push
jb
in
repz
push
and
movsl
mov
add
cmpsb
pop
cmp
mov
push
cmpl
or
pop
pop
lods
loope
sub
and
movsl
push
pusha
mov
cwtl
repz
jmp
bnd
js
shrl
mov
jns
ror
and
pop
test
jae
mov
inc
inc
xchg
fld1
ds
repnz
cmpb
mulb
popf
das
leave
cwtl
mov
sti
and
jo
es
jbe
pop
pusha
inc
and
imul
fwait
insb
fldt
jbe
std
outsb
loope
gs
aaa
in
mov
dec
loopne
scas
jnp
mov
mov
mov
or
movsb
gs
mov
daa
mulb
push
cmc
cmp
test
loope
adc
mov
mov
aaa
fistl
cmp
std
or
pop
jle
lods
push
jns
pop
add
es
flds
adc
push
push
stc
stc
jno
mov
dec
icebp
stos
iret
loop
push
cmp
cmpsl
dec
loopne
mov
push
inc
adc
sub
sarl
clc
in
popa
ret
push
xchg
sbb
lock
gs
lea
push
test
les
dec
xchg
push
sub
or
cs
test
or
mov
jo
adc
bound
cli
out
push
movsb
aad
adc
es
decb
sub
mov
out
pop
cmp
movsb
repnz
imul
mov
adc
push
pop
push
lods
movsb
xor
test
rolb
mov
mov
test
jo
mov
jl
push
mov
adc
jecxz
pop
push
xchg
mov
icebp
in
inc
loop
movsb
fidivrs
mov
jae
leave
into
sub
add
mov
pop
sub
inc
icebp
or
hlt
mov
dec
lret
mov
push
sbbl
ja
mov
loope
test
mov
or
jle
adc
insb
jg
inc
dec
aad
sarl
les
xchg
std
cmp
je
sbb
test
lds
fsubrs
push
shrl
add
cwtl
in
aaa
jge
adc
mov
test
mov
jp
aaa
cli
adc
cmpsb
jmp
adc
pop
les
dec
fadd
inc
movsl
sbb
xchg
testl
jae
jne
notl
or
les
jnp
decb
jns
mov
cmpsb
fcmovne
push
sub
test
pop
inc
adc
jecxz
insb
jmp
inc
fcompl
cmp
shl
jle
push
outsb
cltd
xchg
add
xchg
mov
push
gs
movlps
rclb
loope
sub
xor
loopne
sbb
dec
xchg
sbb
xchg
jae
jp
mov
out
in
loopne
inc
int
fwait
sarl
stos
fmuls
xor
push
and
jl
bts
cld
lock
add
int3
jb
mov
mov
pop
pop
jecxz
cmpsb
ss
mov
lcall
in
lods
dec
stc
out
mov
or
fwait
and
fstl
adc
xchg
mov
out
or
push
dec
add
mov
or
cwtl
pop
adc
cmp
adc
xor
dec
pop
push
lcall
sahf
clc
push
daa
out
in
add
shll
popf
push
stos
push
mov
sbb
aad
lods
cmp
adc
pusha
jo
jge
jmp
and
sbb
inc
mov
cmp
lods
incb
and
xchg
gs
adc
movb
popa
mov
cs
xchg
pop
shlb
jae
pop
sub
mov
push
mov
fdivr
xchg
std
xchg
in
push
icebp
mov
repz
les
scas
push
adc
add
mov
shrb
mov
sbb
fucomp
push
sbb
cmp
push
mull
jg
pop
adc
dec
dec
addl
inc
std
inc
jnp
lret
orb
ret
mov
insb
adc
imul
mov
dec
or
inc
loopne
push
pop
test
mov
xchg
addr16
adc
imul
or
iret
jmp
gs
lea
js
into
mov
inc
add
push
sbb
cmp
inc
add
leave
mov
jge
add
or
dec
aas
adc
enter
jmp
mov
cmp
sbb
gs
dec
stos
cmp
cmp
mov
push
test
xchg
into
cld
insb
arpl
cmpsb
cmp
adc
mov
or
xchg
out
movaps
imul
dec
test
icebp
pop
mov
sub
fs
fsubrl
aam
or
jno
xchg
loopne
repnz
xor
mov
or
mov
iret
push
outsl
and
or
cmp
inc
mov
popf
pop
addb
xchg
adc
mov
mov
mov
fldcw
int
mov
test
roll
mov
nopl
inc
pop
pop
push
dec
add
pop
push
lea
cld
sbb
daa
dec
mov
pushf
mov
cmp
push
push
daa
xchg
sub
in
hlt
sub
xor
mov
or
hlt
pop
lock
mov
or
mov
push
mov
ljmp
push
icebp
or
in
and
xchg
ljmp
loop
lods
pop
test
ja
addl
pushf
testl
adc
lods
cld
sbb
adc
ss
mov
std
jno
mov
lock
sub
jne
jns
repz
or
add
xchg
push
in
jno
pop
clc
inc
inc
pushf
adc
xlat
cs
insb
loope
cltd
arpl
mov
in
mov
sub
rcr
bound
mov
call
arpl
sbb
lods
xchg
or
movsb
xchg
xchg
rcl
add
ljmp
mov
repnz
sbb
sbbb
xchg
and
jmp
mov
cmpl
stos
movsl
repz
sbb
xor
push
mov
adc
into
jo
push
lds
lret
stos
fcoml
mov
mov
out
fisubs
shl
adc
mov
dec
dec
adc
cmp
bound
repz
les
mov
mov
out
xor
jmp
hlt
push
dec
mov
cmp
in
push
leave
or
loope
movsb
dec
sub
mulb
and
xchg
shl
pop
sub
imul
cld
aam
sbb
lcall
inc
sbb
push
mov
xchg
xchg
jns
jbe
mov
jg
cwtl
push
lock
shll
pop
aaa
jne
fldcw
ljmp
inc
push
jns
notl
sti
repz
insl
pop
sbb
or
mov
jnp
sbb
jmp
lret
aaa
add
wbinvd
lock
xor
mov
shll
push
mov
scas
sub
jp
sub
fcom
mov
pslld
stos
in
or
daa
aaa
popa
mov
test
shrl
or
and
jg
cli
or
mov
icebp
jno
loope
pop
lea
outsb
or
out
scas
cli
pop
or
add
aad
cld
shll
jge
jg
loopne
push
ss
xor
mov
xchg
jl
mov
inc
in
sbb
lahf
xor
jo
insb
repnz
mov
and
call
pop
pushf
pop
int
mov
outsb
cwtl
pusha
inc
or
mov
scas
xlat
jp
mov
scas
sbb
and
push
jne
scas
inc
in
jl
shrb
loop
push
sub
mov
pushf
in
cmp
jle
mov
pushf
lds
call
out
jmp
pushf
inc
or
ja
enter
outsl
addr16
and
lds
fildl
jg
pop
cmp
push
inc
mov
sbb
xchg
lahf
gs
call
ret
lret
rcrb
lds
mov
inc
nop
pop
xor
jno
jnp
jo
xchg
jmp
ja
call
push
lcall
sahf
imul
xorl
mov
sbb
mov
outsl
insl
daa
jmp
push
inc
and
stc
jb
imull
arpl
jo
imul
xchg
xchg
in
aad
js
xchg
jo
sbb
mov
div
jge
lret
jge
mov
pop
nop
or
rcrl
xchg
lcall
hlt
out
gs
lds
sub
mov
sti
int
in
push
out
pop
shll
mov
push
add
test
push
jge
or
jmp
es
popf
and
jo
in
jbe
xor
push
pop
xchg
push
sbb
pop
cmp
jbe
sub
leave
repz
xorl
pop
inc
lea
and
fs
repnz
sub
or
fcoml
daa
dec
adc
cmp
mov
pop
in
movsl
int3
and
arpl
push
push
dec
mov
or
dec
push
ds
lret
lahf
adc
shl
sub
in
pop
lcall
and
sbb
xor
sbb
inc
shll
fisubrs
mov
adc
push
and
hlt
ret
out
sti
pop
cmpl
mov
lahf
xchg
pop
jbe
repnz
aam
inc
mov
cmp
pusha
aad
notb
std
mov
mov
push
pop
mov
ss
aad
fnstenv
and
int
push
in
xchg
lcall
out
push
push
dec
shll
lahf
adc
testb
adc
sbb
and
dec
sub
pop
inc
cs
stc
cmp
mov
clc
insb
lods
fcom
in
cltd
mov
jl
shrb
push
cmpl
decb
dec
ljmp
or
mov
dec
lcall
xor
dec
dec
sub
fimuls
adc
sbb
in
push
js
or
data16
test
cltd
jbe
rolb
out
shr
xchg
fstpt
out
dec
push
jg
mov
fisttps
adc
ret
fsubrl
jmp
cmp
xchg
xchg
pop
adc
fldcw
in
xchg
iret
lods
inc
mov
push
int
sbb
loopne
xor
pop
mov
ja
mov
dec
push
pop
mov
push
mov
sbb
insl
out
xor
mov
and
outsl
or
sbb
psrlq
mov
jbe
and
repz
cmp
int3
aas
xor
cmp
insb
fldcw
dec
or
fidivs
movsb
dec
pushf
inc
idivl
mov
mov
mov
sub
or
lret
or
sub
daa
xor
push
lret
inc
hlt
lahf
std
pop
fisttpl
rcrb
cmc
or
sub
xor
js
ret
iret
or
into
jge
jecxz
fsubrs
call
dec
push
adc
mov
jl
and
movl
add
pop
xor
add
sbb
jmp
lret
xchg
cmp
cmp
xor
aas
pop
xor
sbb
xchg
sbb
mov
daa
es
jb
or
int
ljmp
pop
xor
mull
sbb
lret
in
aad
cmp
js
push
js
ja
dec
sub
and
nop
xchg
lods
ret
dec
scas
push
cmpsl
lahf
pop
das
jns
mov
shlb
mov
pop
sbb
movsl
sub
jl
pop
jb
ss
outsb
loope
ljmp
push
mov
stos
fsubs
add
lea
sub
lods
pop
fsts
xor
mov
test
or
add
cmp
cltd
push
lcall
dec
mov
mov
in
fmuls
dec
adc
pop
bound
lret
sub
hlt
loopne
pusha
mov
and
fmul
movsl
insl
movsb
fcmovnbe
sbb
jbe
lea
stc
dec
pop
dec
jmp
push
xor
in
daa
or
mov
push
sbb
pop
or
and
xchg
mov
jae
insl
mov
push
push
dec
ljmp
faddl
mov
mov
test
lods
into
ljmp
pop
jae
xor
jp
jno
ds
ficomps
popa
cmp
aas
mov
lahf
icebp
add
fdivrl
or
lcall
cmpl
fwait
xlat
mov
jae
xrelease
inc
or
adc
add
dec
push
stos
pop
sub
dec
xlat
lods
xchg
lret
testb
in
mov
or
xor
std
add
and
cld
leave
insb
in
mov
push
test
xor
pop
scas
sbb
pop
mov
sub
sub
sub
pushf
pop
push
mov
adc
or
fidivs
or
ret
push
cmc
mov
inc
gs
push
loopne
icebp
push
fwait
pop
sbb
jge
std
mov
sbb
mov
scas
sub
cltd
pop
icebp
push
xchg
int
pop
imul
cltd
inc
xchg
sbb
push
ficompl
cmp
mov
pop
call
pop
movsb
dec
mov
scas
inc
adc
xorb
jno
and
popa
pop
mov
popa
aam
loope
jl
lock
xchg
xchg
hlt
nop
lahf
ljmp
sbb
fistpll
jns
mov
adc
or
jbe
movhps
mov
js
sti
mov
lods
pusha
out
push
adc
dec
inc
test
push
fmul
jp
shrd
dec
lahf
pop
sub
idivl
mov
and
mov
mov
call
pop
mov
in
rorl
jb
and
cmp
mov
lds
adc
fbstp
push
addr16
sub
xchg
mov
and
pop
sti
xchg
je
mov
shl
and
mov
iret
inc
divb
pop
jo
mov
call
sar
jb
stos
push
in
xor
cmpsl
popa
dec
ret
data16
xor
outsb
cmp
outsb
or
outsb
jp
shll
and
std
lock
int
pusha
fmull
add
sbbb
inc
dec
xor
pop
bound
push
sub
test
pop
mov
test
fcmovbe
in
xchg
or
mov
test
or
mov
stc
jnp
cmpsl
xchg
aad
cmc
mov
mov
pusha
jno
dec
inc
dec
in
add
xchg
sbb
pop
mov
sbb
push
mov
addl
pop
push
mov
pop
or
mov
xchg
add
and
adc
movsb
mov
push
and
sbb
mov
and
add
lea
jecxz
test
dec
lret
xchg
cmp
nop
aaa
adc
push
cmp
in
lahf
and
lock
push
cmp
jns
outsb
inc
mul
icebp
mov
movsb
dec
push
push
sbb
dec
ds
pop
add
pop
leave
xchg
inc
mov
pop
inc
js
movsb
mov
mov
add
and
xlat
pop
push
test
imul
and
lahf
adc
xor
loopne
lods
in
imul
movsb
icebp
jne
lahf
lds
cmc
fidivrs
cwtl
and
fisttps
jp
pushf
aaa
mov
mov
out
lds
loope
sub
fld
ret
les
enter
cmp
leave
and
and
xchg
or
or
ret
push
pop
cmpsb
push
popa
loopne
cmp
data16
cmc
mov
inc
fsubrs
cmc
lods
mov
jmp
fistpll
xor
dec
movsl
and
pop
mov
mov
fwait
inc
test
xchg
clc
and
sbb
cmp
mov
repz
xor
iret
fisttpl
xchg
insb
fcomps
mov
dec
cmp
cltd
push
add
and
xlat
push
fldt
fsubr
aam
dec
pushl
fcos
sahf
rcrb
and
repnz
inc
push
jmp
je
mov
mov
add
push
cmp
inc
je
cmpsb
xchg
xchg
inc
mov
popf
lds
int
mov
int
adc
add
enter
lahf
xor
sbb
xchg
pop
add
hlt
or
adc
push
dec
rorb
mov
icebp
cwtl
xchg
xor
xor
pop
and
add
lock
pop
fstl
jmp
sub
pop
into
pop
or
aad
jae
and
xor
es
incb
dec
fidivl
cmc
cli
test
push
pop
lock
xor
movsb
or
pop
cmpsl
imul
pop
shlb
pop
mov
pop
cmp
dec
push
mov
scas
jmp
adc
xor
int3
cmp
jns,pn
jge
bnd
scas
arpl
xchg
pop
subl
push
pop
xchg
xchg
lret
pop
push
pop
fcmovu
imul
test
add
mov
inc
pop
outsb
repnz
in
jecxz,pn
sbb
les
jne
es
mov
imul
scas
pop
fyl2x
xchg
pop
adc
push
cli
filds
xlat
jge
adc
ss
repz
adc
stos
pop
es
je
lret
adc
push
sbb
cli
outsb
fnstcw
mov
inc
rcr
push
mov
cs
pop
add
mov
clc
push
push
imul
fs
pop
test
cmp
test
cmc
and
cld
jb
pop
mov
nop
std
push
nop
push
push
xor
inc
fwait
js
daa
sbb
mov
lcall
pushf
and
jb
fsubrs
daa
add
mov
push
sub
and
pop
aas
xchg
icebp
sub
cmp
pop
cmc
scas
daa
pusha
inc
jge
jg
xchg
rorb
test
mov
repz
mov
or
pop
test
mov
mul
pop
push
cld
push
inc
js
mov
ret
call
ret
mov
mov
and
push
ja
loopne
dec
ss
idivl
imul
inc
ds
out
xchg
aaa
mull
jmp
scas
push
stc
lods
cmc
xchg
nop
movsl
and
mov
bound
pop
xchg
push
push
cmp
fcomps
xor
popf
and
and
fldl
jg
jae
pop
sbb
mov
fsubp
mov
push
and
cmc
shll
rclb
and
jo
jns
sub
aas
add
jge
ret
lahf
sbb
insb
icebp
ficoml
insl
movsl
cmpsb
ret
jmp
mov
lahf
xor
jl
pusha
xchg
outsb
mov
mov
push
pop
mull
into
hlt
push
or
pushf
mov
or
js
pop
mov
cmp
aad
aam
mov
clc
inc
inc
add
repnz
enter
push
dec
push
add
aam
sub
ret
cmp
jmp
mov
adc
xchg
fdivrl
push
outsl
push
cs
pushf
addb
stos
push
jl
int3
mov
and
xor
pusha
loopew
jge
test
call
push
add
lret
into
addb
rcr
cmp
xchg
jmp
ds
lret
or
push
add
lahf
sbb
inc
cmp
out
sub
mov
lret
inc
jae
lods
push
stc
or
lret
test
add
cld
enter
insb
xlat
ret
pop
sbb
inc
dec
add
pop
int3
add
mov
cmp
mov
lea
sar
iret
insl
push
xchg
adc
in
movsb
ss
loope
fisttps
mov
cmp
jg
xchg
icebp
add
adc
test
jb
mov
ret
in
rcrb
dec
jb
dec
in
adc
mov
pop
mov
dec
push
dec
lret
and
arpl
sbb
in
jns
inc
scas
inc
sahf
jb
out
jno
movaps
lock
push
or
jp
and
cmp
xchg
test
push
arpl
sub
mov
push
pop
push
jnp
and
nop
pop
pop
stc
lahf
mov
cmpsb
mov
stos
aam
xchg
mov
mov
xlat
std
test
mov
stc
pushf
add
pop
xor
lock
das
mov
or
push
clc
ret
cltd
mov
out
push
cmp
fsubp
push
pop
ret
icebp
pop
insl
cmpl
jge
add
dec
lods
cmp
js
repz
push
cs
adc
insb
pop
mov
lahf
cli
iret
inc
mov
sbb
xor
ss
shll
xchg
rcrb
lret
cs
mov
cli
xlat
mov
cmp
out
mov
xchg
outsb
movsb
sub
fistps
incl
pop
out
rcl
aam
adc
ja
mov
mov
or
cld
sub
pop
adc
into
mov
adc
orl
adc
or
xchg
jb
inc
xor
sub
or
dec
outsb
int
fabs
cwtl
fidivrl
aad
and
sbb
lret
pop
popf
scas
repz
rclb
jmp
pop
fwait
mov
pushf
repnz
xor
xchg
fs
pop
mov
xchg
leave
pop
mov
aas
test
pop
scas
xor
mov
push
sarb
scas
sub
imulb
cli
stos
fisubrs
mov
push
negl
fisttpl
imul
sub
and
ret
jmp
movsl
ficoml
cli
popf
push
and
aaa
adc
cmp
popa
sub
jp
fbstp
cmp
lret
out
cmpsl
das
icebp
nop
test
ret
pop
mov
jp
scas
or
imul
cmp
gs
lods
sub
push
in
fadd
outsb
push
aad
jmp
test
mov
push
repz
nop
scas
lods
push
mov
jb
jmp
lods
cmp
das
adc
inc
sbb
xor
lods
mov
push
in
cmp
or
pushf
movsb
adc
push
gs
mov
mov
adc
ficompl
or
cmp
push
cmp
outsb
cmp
int
sbb
movsb
inc
or
xor
std
sub
sub
sub
mov
popa
jg
xor
mov
jg
cmp
cld
or
push
or
insb
repz
cmp
mov
xor
jnp
add
and
cli
shlb
mov
jl
outsl
dec
cli
cltd
stc
add
inc
aas
or
test
hlt
iret
dec
out
mov
stc
xchg
cmp
push
xchg
dec
aam
ds
ja
pop
add
cmp
and
das
pop
sarl
loope
das
sub
push
cmp
stc
xor
mov
adc
jo
ss
push
push
pop
lea
jbe
stc
nop
dec
sbb
insl
inc
add
aad
adc
dec
xor
enter
cmpsl
fdivrs
das
mov
pusha
stc
mov
lods
add
ja
or
xchg
pop
pop
pop
sbb
pop
mov
xor
stos
add
adcl
ljmp
call
roll
cmp
pop
fstpl
pushf
scas
repz
incb
mov
or
cmc
xor
xchg
mov
fcoms
and
or
mov
pusha
jae
jecxz
adc
es
pop
jae
test
lret
jmp
fnstenv
cli
arpl
xchg
push
repnz
in
adc
lahf
push
inc
out
fidivrl
cmp
popa
sub
scas
xor
xor
push
dec
adc
loopne
inc
cmp
mov
icebp
js
jp
outsl
push
sub
dec
and
lret
mov
mov
cmp
cmp
call
cmp
lock
sub
cmp
and
scas
flds
jno
sub
insb
out
test
cmpsl
std
mov
lods
mov
push
and
stc
loope
adc
xchg
inc
loope
cmpb
cli
pop
mov
mov
mov
and
push
rcrl
and
mov
bound
gs
inc
sub
mov
push
pushf
xor
pop
inc
into
daa
sub
mov
stc
jno
insl
cmp
or
repz
mov
lods
push
jno
lret
mov
sub
repnz
test
shll
mov
push
pop
mov
shl
gs
xor
inc
push
outsb
mov
fmuls
pop
test
popa
xlat
inc
adcb
or
imul
outsl
mov
fidivs
popa
das
xlat
push
push
pop
push
jg
enter
sarl
sbb
add
rclb
or
ret
repz
gs
int
cmp
ret
rorb
inc
and
push
mov
int3
jbe
fwait
add
jle
vhaddpd
cmpsb
in
push
xorl
call
test
mulw
mov
es
sub
imul
jecxz
pop
arpl
ljmp
pop
xchg
fldt
mov
add
xor
cmpsl
push
add
xor
outsl
xor
xchg
jno
or
inc
and
sbb
lret
jge
jbe
test
imul
sbb
gs
dec
inc
pop
pushf
movsl
push
popf
push
mov
rorb
inc
lds
and
or
ds
jns
inc
mov
lock
cmp
push
jp
lods
fwait
in
jmp
into
pop
mov
adcl
fwait
and
add
jp
adc
pop
mov
xor
mov
popa
loope
ljmp
orb
arpl
stos
mov
fwait
cmp
lods
mov
mov
out
popa
roll
inc
and
test
das
push
add
sbb
jno
sub
mov
lods
test
or
in
adc
pop
xchg
aas
sbb
jnp
cmp
push
into
add
xchg
test
incl
sarb
mov
jp
cmp
cli
int
loop
ret
jb
and
push
push
insl
jnp
mov
divb
cmp
xchg
ljmp
mov
cwtl
jle
xor
xor
lods
push
sbb
leave
and
sub
pop
out
add
mov
subb
pusha
scas
pop
out
lea
and
popa
or
jg
stos
cs
sub
and
and
lods
sbb
das
jl
mov
cmc
cld
in
cmp
xor
xorb
je
mov
imul
push
cs
das
add
pop
pop
xlat
xor
leave
in
je
outsl
mov
in
jp
fcmovnu
inc
adc
cltd
mov
add
dec
cmp
cmp
lods
sbb
andb
mov
mov
cmp
lds
shrb
push
jge
int3
fmull
outsb
pop
mov
out
in
dec
and
mov
repnz
lea
js
cmp
shl
mov
stos
xchg
scas
pop
insb
lods
fisubrs
pop
jns
in
xchg
nop
ja
std
aas
fmull
inc
jo
add
fwait
rorl
insl
shrl
inc
sub
add
push
or
pop
notb
test
mov
dec
addr16
pop
shl
and
cmp
leave
cmp
mov
enter
js
or
and
mov
inc
aad
mov
arpl
cmp
push
lahf
dec
pop
sub
test
push
aas
push
cmp
aam
lret
dec
mov
lock
jmp
add
xchg
loope
hlt
ficoml
inc
adc
cmpsl
pusha
jp
std
arpl
out
out
popa
cwtl
mov
cmp
mov
ficoml
pop
sbb
int3
pusha
mov
cmc
mov
fldl
inc
out
push
add
add
inc
outsl
mov
lret
sub
loop
mov
xchg
jle
stc
xor
adc
sub
ret
cltd
add
test
outsb
cmpsl
sbb
pop
bound
mov
mov
enter
push
arpl
cmpsb
mov
sahf
ja
arpl
nop
mov
pop
cmp
cmp
dec
push
daa
std
dec
cmp
sahf
out
adc
xchg
xchg
outsl
cmp
push
dec
fmulp
in
test
mov
push
inc
dec
popa
stos
imul
aas
push
std
iret
dec
mov
adc
xor
and
dec
jle
mov
cmp
outsl
test
ljmp
mov
or
push
push
das
out
push
inc
std
xchg
cmpsb
bnd
xchg
stos
repz
mov
in
sub
sarl
fisttpll
xor
jge
test
js
ds
mov
xor
sub
in
cmp
shrl
or
jg
sbb
scas
adc
xchg
push
or
or
dec
pop
push
dec
lods
out
faddl
out
pop
in
addl
aaa
les
push
add
in
cmpsl
sti
adc
push
mov
shll
jno
aas
ret
jno
jae
xchg
pop
inc
pop
sub
fsubs
mov
jg
push
js
or
pop
xor
dec
mov
mov
hlt
inc
jmp
lods
xchg
pushf
rcrl
test
inc
or
jg
sbb
cmp
nop
mov
out
xchg
unpcklps
das
xor
jp
xor
popf
and
out
sbb
add
ds
pop
lock
adc
test
or
fcoml
je
cwtl
int
jmp
insb
lahf
ljmp
dec
jecxz
clc
js
jecxz
sub
adc
repnz
mov
out
push
lods
xchg
shrb
mov
popf
xchg
loope,pt
push
or
leave
adc
clc
test
jp
mov
dec
shrb
lea
dec
test
push
or
or
lds
shrb
out
or
roll
push
aas
push
inc
shlb
sahf
adc
scas
fs
adc
cmp
aam
pop
dec
cmc
jl
subl
adc
cmpl
jge
push
inc
andb
xor
xor
mov
push
pop
mov
in
cli
das
xchg
js
or
test
scas
fisubrl
xor
cld
jmp
xchg
adc
lret
loop
push
lret
js
xor
pop
xor
pop
mov
cmp
rcll
sub
mov
incl
rdmsr
mov
stc
dec
inc
mov
cs
pop
mulb
in
cli
bound
jbe
cmpsl
leave
pusha
jb
out
inc
xor
aad
mull
jl
lcall
aam
sahf
jl
sub
cmc
cld
out
dec
sar
nop
jbe
jmp
push
mov
iret
adcb
fistps
lods
mov
push
gs
ret
pusha
jl
inc
xchg
mov
adc
test
dec
inc
mov
es
out
mov
jg
cmc
xchg
dec
jne
cmpsb
add
mov
add
test
dec
lret
test
sub
addr16
mov
ds
fdiv
add
lods
push
js
mov
lret
aaa
lds
inc
rolb
sub
decl
loopne
sarl
shl
test
sub
fistpll
test
xchg
sbb
testl
sub
xor
mov
ror
lahf
cltd
pusha
adc
stc
xchg
pop
push
mov
or
insl
push
mov
in
jmp
cmpsb
stos
clc
test
shll
jns
lret
lods
das
fildl
lods
cmpb
or
and
outsb
and
sar
arpl
hlt
sbb
notl
and
xchg
xchg
or
cmp
xchg
out
mov
mov
out
add
jmp
aam
pop
rcrl
add
xchg
stos
fcoml
adc
xchg
pop
ret
incl
loop
mov
or
outsl
mov
inc
pop
sbb
sub
sbb
mov
cli
add
sub
inc
jb
fadds
out
jb
and
fcoml
scas
sbb
push
fidivrl
lods
cmp
popf
std
cmp
lret
test
xor
movsb
cmp
cmpsl
sbb
imul
addr16
push
cmp
dec
inc
into
cmp
mov
adc
and
lahf
dec
mov
xor
arpl
or
fstpl
adc
xorb
dec
movsb
mov
pop
adcb
jg
dec
enter
sbb
nop
cmp
jb
push
test
jecxz
jae
popl
sub
lds
and
jmp
sbb
insl
jae
fdivs
sub
and
bnd
inc
mov
pop
pop
repz
clc
addr16
xchg
dec
sbb
les
adc
mov
leave
jne
cmpsb
inc
aaa
jo
mov
sbb
cmp
clc
nop
sbb
std
aas
rclb
ds
lcall
xor
push
pop
jl
mov
mov
lods
add
push
xorl
mov
and
dec
inc
or
cmpsl
push
sub
mov
popf
js
mov
call
add
inc
xlat
out
push
and
and
jle
jae
and
jne
push
dec
adc
or
int
sbb
lret
adc
or
push
sub
subb
in
call
test
sub
sub
js
adc
adc
push
cwtl
jecxz
idivb
mov
add
mov
cwtl
hlt
in
sub
xor
push
jnp
adc
imulb
jae
add
xor
js
xlat
mov
xchg
rcrb
shlb
inc
xor
mov
mov
js
imull
or
xor
iret
cmpl
cmc
pusha
dec
push
fstpl
call
sbb
mov
push
sbb
push
xor
in
fsubs
push
mov
inc
push
dec
mov
add
xchg
sahf
pop
mov
pop
push
sbb
jo
push
adc
cmp
sub
jle
aad
popa
adc
add
cmp
and
dec
pushf
sbb
mov
subb
fs
stos
pop
roll
mov
sbb
nop
jg
sbb
mov
loopne
nop
jecxz
popa
lock
xor
fdivl
sbb
jge
in
adc
xchg
inc
ss
mov
inc
adc
jo
cli
lea
inc
leave
loopne
imul
mov
movsl
rcrb
out
xchg
rcl
cs
inc
mov
jae
int
pop
movsb
push
xlat
push
mov
mov
into
lea
pop
scas
and
push
scas
aam
add
mov
ss
mov
enter
out
sub
jl
sub
xor
pop
mov
test
cmp
dec
ljmp
loop
in
sub
frstor
xchg
lret
incl
pop
icebp
lock
test
bound
jl
push
mov
pop
faddl
mov
fmul
sub
fimull
das
inc
dec
sbbb
sbb
sub
dec
inc
add
cmp
leave
sub
test
das
or
fimuls
add
lods
out
push
add
mov
jl
sbbl
mov
sub
xor
das
ljmp
lret
std
lahf
fsubrs
jae
shrl
arpl
xor
in
dec
pop
sub
cmpsb
push
mov
test
cld
push
movsl
ja
cltd
sti
insl
add
cmp
push
aam
mov
xor
test
and
pop
push
jo
out
insb
xor
jg
loopne
sarb
adc
aad
insb
dec
and
fsubrs
mov
mov
xchg
jmp
cmc
push
lock
add
sarb
int3
bts
mov
mov
out
xlat
add
jb
lgs
push
mov
mov
hlt
lock
fdivrs
push
mov
push
int3
fldt
sbb
xor
dec
pop
push
arpl
sbb
int
lcall
clc
inc
cltd
rcll
je
mov
or
mov
xchg
sbb
or
jmp
mov
adc
int
cld
std
and
pop
inc
push
sub
mov
adc
and
mov
pop
pusha
insl
push
cmp
ret
pop
out
xchg
lahf
mov
mov
xchg
pop
mov
push
sti
call
lret
cmp
and
pop
adc
pop
ss
jle
rol
ja
pop
out
push
subb
sbb
aas
loop
es
jo
xchg
sbb
mov
mov
and
imull
lret
sbb
fistpll
lret
pop
adc
jb
filds
dec
or
stos
int
dec
sti
mov
cmp
mov
aas
mov
and
pop
mov
or
imul
mov
xchg
cwtl
testl
xor
cmpl
enter
in
lods
mov
xor
jg
xchg
leave
dec
push
stc
data16
xchg
cmp
xor
loop
stos
xor
inc
and
scas
fstpl
sub
cli
jbe
cmp
inc
jl
sbb
lret
fst
out
or
aad
push
fsubl
sub
xor
lock
fisubs
cs
rorl
dec
cmpl
popf
jbe
fcmovnu
dec
lds
sbb
add
xor
xchg
fdivrl
stos
sub
sbb
and
add
dec
and
or
or
and
clc
ss
rol
xchg
sahf
sarb
xchg
imul
cmpsb
dec
lods
mov
sub
jp
js
icebp
loopne
das
pop
lcall
or
mov
std
aad
call
es
stos
nop
insb
outsb
xlat
xor
adc
es
dec
loope
rcl
rclb
xor
pop
push
sbb
gs
inc
jb
inc
scas
pop
in
mov
clc
scas
xchg
or
push
mov
xchg
cltd
loope
dec
mov
imul
add
sbb
push
sahf
push
cmpsb
pop
mov
outsb
out
add
insb
or
imulb
mov
movsl
ds
enter
xchg
fildll
jae
rcl
iret
add
and
repnz
add
sahf
pop
inc
cli
xchg
cmpsl
push
sahf
inc
jae
loope
pop
or
fadds
xor
sahf
inc
jg
iret
jle
in
cmpsl
into
mov
rcl
pop
cmp
movsl
xchg
jo
mov
push
dec
adc
adc
push
loop
popa
push
lds
xchg
int3
pop
addb
or
mov
addr16
adc
iret
inc
and
imul
insb
adc
in
lea
gs
sub
je
lods
test
or
xor
push
jno
push
loop
pop
mov
sub
lcall
mov
lcall
push
sbb
lret
and
add
add
negb
xor
and
sub
adc
pop
mov
idivb
inc
aad
jb
push
lds
mov
cs
inc
scas
jo
inc
xchg
cli
mov
mov
mov
pop
push
push
lods
fsubrp
leave
popf
mov
cwtl
dec
sahf
sub
fsubl
jecxz
adc
out
aam
int
xchg
lock
pop
rorl
jl
lds
cwtl
mov
xchg
in
fs
add
xlat
mov
jecxz
leave
pop
daa
dec
loop
jmp
cmpsb
dec
inc
mov
idivb
adc
ret
mov
xor
and
lds
out
clc
fisubrs
inc
xchg
pop
outsb
into
ja
enter
xlat
cmp
dec
fistpll
lea
clc
les
jl
inc
dec
jo
cmp
test
in
notl
or
add
cmp
das
lods
stos
cmp
and
xlat
pushf
cmc
jae
inc
inc
adc
insl
fbstp
jbe
push
and
inc
stos
mov
jne
inc
xchg
mov
outsl
or
or
inc
ljmp
mov
push
xor
out
repnz
movb
lods
add
pop
mov
sub
cmpsl
xor
cltd
jns
inc
inc
xchg
push
mov
jbe
shlb
jge
mov
call
push
push
mov
push
mov
pop
aam
fdivs
out
jns
stos
rcrb
jno
and
xchg
add
or
outsb
mov
adc
es
iret
fbstp
ds
push
pop
mov
add
sbbb
push
adc
fidivs
push
ret
icebp
cmc
hlt
mov
mov
addr16
in
cltd
cld
xchg
pop
jne
lahf
out
jl
leave
out
xchg
repz
cmp
out
test
aas
mov
push
outsl
in
scas
jp
insw
iret
and
xor
out
sub
add
and
push
cwtl
and
ljmp
xor
rcl
stos
jmp
mov
mov
push
adc
adc
xor
cltd
ja
inc
fs
es
jb
mov
mov
add
out
sbb
ret
push
xor
mov
push
push
dec
cltd
je
ret
adcl
out
pop
popf
out
inc
mov
add
inc
testl
jge
stos
xor
cmp
test
mov
fs
pop
and
test
mov
and
fwait
ja
ljmp
dec
sub
es
fs
dec
dec
mov
jbe
and
and
pop
xor
add
mov
mov
frstor
mov
sarl
rolb
fisttpl
jae
pop
imul
jmp
mov
shrl
shr
xor
scas
pop
xchg
rolb
mov
or
and
in
or
lods
adc
cmp
lds
cwtl
push
cwtl
adc
add
test
call
xor
inc
cmp
leave
stc
enter
clc
testl
mov
gs
lds
rclb
and
repnz
fcomps
sbb
fs
pop
add
sbb
and
cmp
pop
scas
mov
pop
das
and
test
imul
dec
xlat
jae
or
xchg
int3
out
icebp
xchg
push
or
pop
loope
cli
jge
pop
or
dec
stos
call
cs
mov
enter
das
dec
fcmovnb
ss
jbe
push
mov
dec
mov
jle
bound
pop
ret
repz
sbb
lret
mov
jp
cmp
es
imull
enter
jnp
insl
mov
in
pop
mov
repz
enter
sbb
jns
pop
addb
notl
sahf
sub
add
mov
inc
cmp
out
inc
or
push
pop
es
or
cmp
pop
loopne
aaa
movsl
test
mov
push
lret
sahf
inc
pop
rolb
clc
mov
mov
jle
xor
out
or
and
dec
dec
xor
loope
pop
xchg
pop
adc
or
mov
pop
xchg
xchg
insl
das
mov
dec
cmpsl
aam
lods
xchg
movsb
jne
aam
daa
cmp
mov
fldl
and
dec
es
cmp
mov
jns
jno
sbbb
std
pop
repnz
mov
dec
mov
mov
sbb
test
inc
fs
xlat
jp
aam
inc
xchg
xchg
adc
sub
push
inc
mov
cmpsb
loopne
movsb
stos
jae,pt
aas
sub
nop
sbb
mov
hlt
adc
dec
cmp
or
jecxz
outsb
int
and
or
mov
sbb
mov
and
cld
or
push
add
mov
insb
cmpsl
inc
mov
ljmp
rclb
add
push
test
stos
bnd
ds
xchg
mov
arpl
ret
icebp
xchg
filds
adc
push
mov
mov
ret
nop
mov
cld
adc
inc
add
dec
popf
mov
rolb
mov
dec
imul
sbb
sti
and
inc
xor
dec
js
push
add
sti
pushf
data16
into
cmp
out
pop
dec
sub
pop
push
das
mov
mov
test
lret
push
cmpb
lea
btrl
aas
jnp
in
in
mov
xor
lods
sub
out
das
mov
xor
jg
mov
fldt
xlat
cltd
decb
mov
rorb
cwtl
push
or
and
jo
mov
sub
clc
mov
mov
sbb
and
dec
popf
pop
mov
dec
pop
mov
push
mov
inc
adc
mulb
push
pop
ret
popf
or
jmp
fisubrl
adc
mov
cmp
mov
cmp
mov
movsl
shrl
sbb
repz
clc
add
mov
negb
cmp
cmp
mov
rclb
inc
ss
cmp
test
mov
mov
dec
loopne
mov
int
pushf
inc
mov
rolb
adc
lret
mov
incb
push
in
insw
dec
mov
add
mov
push
scas
imul
and
inc
cmp
add
test
jb
mov
rcrb
cmp
xlat
mov
jle
stc
mov
test
jne
leave
xor
cmp
cmp
leave
mov
push
nop
mov
out
or
xor
inc
hlt
shlb
enter
loope
sbb
fildll
int
adc
mov
inc
retw
inc
adc
stos
outsl
filds
cmp
and
pop
lods
lods
sbbb
jnp
and
xchg
add
xchg
aas
cmpsb
xchg
mov
xchg
xchg
inc
lret
adc
push
xchg
imul
aaa
mov
ds
imul
pop
jge
jns
ljmp
js
test
inc
sbb
pop
xor
fwait
xchg
cmp
call
pusha
daa
je
xchg
adc
sub
or
lods
int
mov
xor
and
sub
scas
nop
push
les
sub
outsl
andl
incl
xor
aam
cmc
inc
mov
dec
out
dec
je
rolb
cmpsb
jbe
xchg
in
cs
lock
or
sbb
add
dec
int3
and
imul
lock
dec
and
fimull
mov
lods
add
ret
pop
jns
ds
insb
inc
add
xchg
sbb
add
add
clc
jo
sub
sbb
push
aad
cmp
subl
inc
xchg
mov
and
hlt
push
or
and
and
ja
in
xchg
repz
ss
mov
pop
je
inc
cmp
and
and
mov
mov
sbb
inc
push
pushf
mov
jmp
push
cmp
mov
cmp
add
leave
imul
jp
popf
stos
pusha
rorb
mov
mov
notl
pop
stos
add
cltd
push
mov
jae
scas
jo
push
das
add
mov
imul
or
andb
stos
sub
ds
cld
push
xor
dec
lahf
mov
jecxz
or
xchg
clc
mov
iret
je
movsl
push
add
xchg
push
mov
cld
xchg
inc
mov
sbb
mov
mov
loope
das
jns
push
jno
shrb
mov
loop
inc
rcl
mov
mov
mov
dec
mov
pop
mov
mov
push
xchg
not
out
add
lcall
cwtl
jnp
sbb
imul
into
add
cmp
push
jo
mov
cmp
test
cmp
neg
out
rcrb
jecxz
jnp
mov
icebp
cmp
in
aam
mov
pusha
xor
loop
fdivrp
mov
gs
mov
ljmp
mov
lret
sbb
mov
lahf
adc
enter
daa
push
jae
sbb
mov
je
fcmovne
jb
in
xchg
xchg
test
and
aaa
ja
outsl
dec
and
repz
mov
mov
mov
clc
sbb
xchg
jecxz
pop
cmpsl
sbb
arpl
mov
pop
xor
loop
stc
sbb
lcall
adc
cmc
add
icebp
sub
cltd
cltd
adc
dec
bound
sub
jp
mov
mov
dec
out
xorb
adc
xor
imul
fs
rcr
sub
inc
xor
lds
dec
mov
push
adc
repz
mov
pop
andl
sbb
stos
fwait
mov
push
lret
xchg
or
push
sbb
xor
dec
mov
out
inc
mov
push
mov
adc
out
xor
xorb
add
fisubrl
dec
lcall
mov
mov
in
loope
jae
jle
inc
dec
aaa
repz
hlt
push
test
icebp
push
cmp
iret
xor
call
mov
xor
adc
lds
jecxz
jle
rol
mov
mov
js
pop
cld
push
inc
or
mov
push
pop
jmp
std
push
call
jnp
mov
add
jo
adc
pop
loope
movsl
daa
out
push
sbb
fistpl
mov
adc
fistl
jmp
mov
pop
lock
push
mov
testl
inc
sub
xchg
jge
sbb
lods
popf
cmp
insb
insb
insl
leave
cmp
jl
popf
pop
push
mov
sub
xchg
dec
in
adc
fnstsw
adc
push
or
outsb
or
sbb
sbb
jge
inc
je
dec
ja
leave
sub
cmpsl
shll
cs
xchg
rol
and
pop
xor
push
mov
xchg
out
dec
test
fcmovnbe
pop
arpl
es
inc
sbb
sbb
mov
dec
popf
das
in
or
add
cmpsb
dec
movsb
test
lods
fdivrl
leave
les
add
addb
lea
dec
jno
shlb
test
pop
popf
pop
mov
movsl
bound
jp
and
testb
mov
outsb
push
jo
stos
sbb
xchg
movsb
out
negl
push
sbb
pop
out
ds
std
test
stc
into
hlt
mov
lcall
or
imull
test
mov
add
int3
sub
push
fsubrs
cmp
dec
in
mov
das
jne
filds
dec
mulb
add
pop
mov
jb
cltd
or
sub
lret
js
push
lods
lret
pop
testb
dec
add
rcll
sub
mov
mov
dec
jle
cmpb
push
or
cmp
mov
imul
jne
aas
icebp
enter
sub
pop
cmpsl
mov
cmp
or
jle
fwait
push
shl
movsl
add
xchg
xorl
loop
aaa
stos
out
lcall
lret
jmp
cmp
push
fiadds
stos
push
mov
adc
lahf
xor
rolb
aas
mov
or
outsb
test
inc
jns
jecxz
repz
nop
and
shll
sarl
inc
pop
ret
sbb
in
xchg
fsubrs
fsub
mov
xchg
daa
aam
repnz
push
movsl
sbb
push
aas
cmpsb
test
jmp
shlb
mov
and
in
dec
mov
fdivrl
fwait
paddusb
insb
aad
push
pop
dec
inc
jmp
dec
movsb
jle
imul
and
inc
dec
cmpsl
jnp
sahf
cld
sbb
push
stc
hlt
movsl
push
xchg
sti
sahf
icebp
mov
jo
cmp
or
bound
push
test
enter
insl
adc
inc
jb
cmp
cmp
xlat
and
loopne
je
aad
or
xchg
adc
in
mov
xchg
push
outsl
push
test
push
and
pop
movsl
and
stc
add
mov
and
stos
lods
adc
mov
fnstcw
cwtl
jle
mov
mov
cmc
test
loop
mov
sub
jp
xchg
test
in
dec
repz
cmpsb
add
jmp
inc
notb
pop
push
lock
cmp
rorb
js
std
imul
enter
jle
sub
popf
dec
ds
arpl
or
xchg
std
push
shrb
cmp
lods
stos
pop
ret
out
cmpsb
dec
xor
mov
push
lods
pop
cli
jbe
pushf
hlt
out
sbb
ss
inc
jbe
int3
add
lcall
push
into
sbb
arpl
pop
lea
or
stos
jo
imul
add
loopne
shrb
push
or
je
cs
adc
inc
cli
and
jp
aas
add
dec
cmp
fadds
adc
pop
pop
fsubs
shrb
jmp
lcall
lret
pop
inc
mov
emms
add
cld
lods
jecxz
inc
outsb
fs
ja
cld
test
arpl
mov
push
rorl
cmpl
mov
test
mov
add
and
xchg
arpl
xchg
mov
in
test
mov
addr16
and
adc
pop
or
ljmp
insl
push
push
lret
fbld
xor
jecxz
xchg
adcb
in
popf
jno
jge
or
xchg
sbb
arpl
xchg
or
or
scas
push
sbb
ret
popa
lahf
mov
ja
push
inc
mov
or
or
icebp
nop
push
or
sub
cld
dec
or
addb
push
out
mov
xchg
nop
mov
dec
mov
sbb
pop
daa
imul
xchg
inc
push
test
add
mov
or
les
xor
cmp
fidivrs
dec
pop
jo
lds
flds
xor
rcrb
cli
setns
jb
xchg
dec
xchg
cli
jge
mov
cmpsl
or
arpl
lods
ss
add
jno
insl
and
and
loope
lds
data16
dec
sarb
adc
push
insl
outsb
gs
cld
fs
icebp
dec
pop
mov
push
addr16
dec
nop
dec
outsl
push
push
jle
push
xchg
push
push
cltd
xor
cmp
add
xor
sarl
mov
sbb
xor
lea
sub
add
jp
notl
and
les
in
int3
and
aaa
and
insb
xor
mov
std
mull
std
sahf
push
lods
es
imul
add
in
and
push
and
popa
in
dec
mov
push
fwait
adc
xor
jo
fldt
lcall
xor
pop
fs
ja
and
mov
xchg
in
lahf
test
mov
cmp
outsb
sbb
incl
pop
xchg
mov
push
dec
sbb
imul
xor
or
rcr
xchg
orl
scas
pop
sub
notl
mov
fwait
mov
loope
xchg
psubusb
std
out
stos
inc
dec
add
push
pop
push
data16
call
in
ret
cwtl
popl
adc
mov
in
shl
xchg
or
inc
mov
lret
mov
mov
cltd
sub
repz
dec
stc
inc
ds
and
arpl
pop
push
dec
xor
test
imul
fcomps
push
jno
or
inc
repnz
fdivs
ret
ret
cltd
jne
es
std
add
insl
or
negl
mov
add
fists
xchg
push
lret
fldt
sbb
in
xchg
lea
inc
scas
cli
loop
ror
popa
pop
sbb
pusha
mov
aam
or
arpl
imul
mov
adc
mov
loopne
or
add
cmp
cmp
mov
xchg
pop
insl
lret
inc
movsl
mov
scas
iret
push
sub
jmp
dec
ret
nop
jo
in
jo
pop
lcall
dec
lock
out
in
adc
mov
adc
dec
xchg
inc
shll
mov
sbb
dec
xchg
push
xor
out
sbb
jecxz
aaa
pushf
not
mov
dec
mov
adc
pop
je
mov
xor
ficoml
fs
sbb
jmp
mov
outsb
lods
lea
sti
sahf
repnz
inc
out
mov
sahf
dec
in
push
fstpl
out
fs
test
xchg
and
out
popl
jo
cld
mov
lret
das
loopne
and
in
cmp
pop
add
xchg
adc
adc
or
inc
lds
popf
fidivrs
jmp
push
leave
out
mov
mov
pusha
jno
jno
into
imul
push
clc
dec
jge
pop
icebp
cmp
mov
and
sbb
rorl
sub
dec
inc
inc
push
pop
std
inc
ja
or
es
dec
cmc
fiadds
loop
stos
and
ret
pop
jno
negb
or
cmp
int
imul
fs
sub
mov
scas
lea
hlt
jge
adc
jle
test
push
movsl
js
push
rcr
cmp
stos
mov
push
mov
sbb
scas
testl
into
fsubs
lret
movsb
sub
pusha
scas
inc
loop
jge
loopne
mov
adc
cs
or
leave
out
sahf
stc
int
dec
popa
loop
or
jns
testl
adc
insl
add
dec
mov
xor
mov
sub
push
mov
fwait
sbb
sub
aaa
stc
push
imul
dec
inc
idivl
out
inc
xor
mov
pop
pop
in
sarb
lcall
insb
and
cld
dec
lret
divl
jmp
nop
pushf
addr16
dec
add
xchg
xor
lret
scas
mov
pop
ret
inc
cmp
test
call
andl
push
push
cmp
add
rcll
sub
mov
in
call
mov
mov
addr16
in
xor
push
lock
aam
mov
pushf
pop
dec
push
or
stos
xchg
loopne
pop
push
push
mov
insb
mov
out
or
or
inc
mov
add
arpl
push
sub
lcall
lods
dec
pop
mov
lock
mov
pop
popa
sub
xchg
in
sub
mov
stc
jne
mov
inc
cmp
jbe
pop
adc
push
or
sub
andl
fsts
xchg
xchg
and
or
jle
negl
push
shl
clc
insl
jbe
pop
lds
orb
jmp
out
push
inc
cmp
push
mov
mov
dec
stc
inc
scas
xor
mov
mov
cli
dec
testl
cmp
das
ret
fstl
shll
cmp
insl
xchg
in
mov
in
push
out
xor
sbb
outsb
ret
mov
mov
mov
dec
cmp
dec
int3
aad
sub
out
jne
fwait
stos
mov
shrb
shrb
sub
push
jge
mov
dec
lcall
and
mov
clc
jg
test
add
pusha
mov
imul
pop
cmp
popf
pop
in
lcall
stc
push
stos
mov
pushf
nop
fwait
pop
and
add
xchg
fdivr
cltd
and
out
mov
pushf
or
movsb
and
subb
adc
out
mov
xor
into
divb
sub
mov
xchg
dec
clc
sbb
pusha
jge
call
jecxz
pop
mov
lds
sub
pushf
outsb
dec
xchg
pushf
push
aas
jle
push
sub
fidivs
popa
mov
pop
nop
mov
xchg
stos
xor
sub
jecxz
fucomi
in
lds
and
sbb
icebp
mov
jp
adc
xor
xchg
loopne
mov
rorl
pusha
call
inc
jp
adcb
sub
ljmp
xlat
int3
add
mov
push
pop
sbb
inc
dec
dec
mov
sub
pop
push
mov
add
test
jb
push
arpl
fdivr
ret
js
bound
in
sbb
add
jns
outsb
xor
sbbb
xchg
shl
icebp
iret
pusha
sarb
pop
fiaddl
sub
cmpsl
stos
fsubr
mov
and
ja
and
mov
adcb
call
clc
push
or
mov
movsl
fldenv
push
repnz
dec
es
scas
fmulp
pop
lret
sbb
lea
adc
loop
vprotq
xorl
add
popf
jne
add
inc
loopne
roll
xchg
popf
cli
pop
jg
sub
mov
inc
cltd
mov
push
sbb
rcrb
sti
hlt
test
fsubrl
ljmp
fistps
fcompl
cmp
bound
xchg
pop
ror
notl
jae
aas
mov
pop
mov
mov
or
loope
ret
cmp
ret
cmc
push
jb
fs
xchg
and
push
xor
test
int3
jl
bound
xchg
sub
sub
cmpsb
popa
and
icebp
or
je
inc
sbb
push
lcall
cmp
mov
lret
stos
loopne
mov
std
ret
call
mov
aam
inc
add
int
mov
xchg
sub
pop
adc
xchg
adc
mov
ja
adc
adcb
push
push
outsl
out
push
aam
cmp
mov
call
scas
jle
fldl
cli
lds
jg
loopne
jecxz
daa
pusha
ja
out
cltd
out
jbe
mov
push
je
cmpsl
in
sbb
dec
in
cmp
dec
inc
mov
xchg
mov
jecxz
pop
mov
nop
in
je
pop
cmp
dec
inc
shl
int
sub
or
pop
outsl
mov
fnstsw
insb
or
push
dec
test
jb
dec
mov
pop
pusha
xchg
cmp
mov
fs
sarb
pop
mov
push
cmpb
fs
pop
xor
popf
dec
push
arpl
add
addr16
pop
add
sbb
in
xchg
rclb
rolb
xor
and
test
pop
gs
les
add
sub
aad
cmpsl
rcrb
push
pop
mov
loop
mov
ret
xchg
scas
ss
sub
sub
scas
outsb
cmp
push
or
inc
inc
sbb
inc
pop
inc
push
sbb
popa
mov
push
mov
cmp
jge
daa
ljmp
gs
mov
mov
shll
test
icebp
data16
mov
test
jb
lahf
push
jb
cmp
inc
sarl
loopne
mov
pop
in
xor
xchg
mov
sbb
scas
pop
nop
in
loop
lods
mov
mov
pop
sub
adc
pop
ja
test
inc
mov
aaa
pop
dec
fnstcw
movsl
in
cmc
nop
mov
vmovaps
xchg
dec
sub
test
mov
dec
icebp
pop
cmp
mov
dec
mov
push
sti
daa
cli
aad
sbb
cmpxchg
shrb
adc
push
dec
aaa
iret
xchg
xor
aas
jmp
jno
test
scas
testl
stc
fmuls
sub
arpl
xchg
push
in
lret
sbb
and
lock
jns
adc
add
lea
or
jg
js
and
cld
lret
jb
cmp
xor
lods
and
leave
dec
bound
jnp
jb
cmp
xchg
hlt
ret
push
ljmp
or
pop
push
sahf
ret
cli
and
push
test
fwait
cld
mov
or
dec
mov
popa
cli
push
icebp
adc
in
cmp
ja
xor
loope
lahf
jae
stc
enter
jle
or
lret
pop
push
xor
out
outsl
mov
into
pop
out
imul
mov
shll
out
add
cwtl
addr16
cs
dec
cmpsb
insl
test
cmpsl
or
mov
stos
cmp
cltd
mov
mov
cld
std
repnz
adc
test
stc
mov
int
cmpsl
pushf
sbb
popf
hlt
ja
fadd
lea
dec
xor
scas
outsb
hlt
sbb
dec
pop
repz
mov
imull
push
add
cmp
push
mov
incl
lahf
push
test
and
jns
jp
cvttss2si
sbb
js
dec
mov
iret
sbb
loopne
fstpt
xchg
lret
add
and
adc
rolb
pop
mov
jae
mov
adc
mov
xor
in
and
xor
insb
aad
add
dec
or
dec
add
pop
ficomps
int3
push
xchg
adcb
adc
mov
movsl
fcom
ljmp
lret
inc
imul
fdiv
jb
xchg
ret
pop
lcall
xchg
insl
inc
mov
push
mov
push
sbb
add
stc
or
mov
xor
popa
cld
xor
pop
mov
xchg
jge
xor
fcmovnb
push
fsubrs
sbb
mov
sti
push
push
pusha
pop
push
mov
sub
je
cli
jge
lahf
ss
xchg
in
cltd
sub
adc
mov
js
into
lret
fidivs
insb
in
mov
paddsw
daa
pusha
add
jg
pop
stos
or
push
fnsave
scas
or
jne
adc
add
mov
xchg
ficompl
je
push
addr16
fxtract
xchg
jne
fisttpl
push
or
into
pop
out
jno
shrb
subl
sbb
pop
mov
sub
push
fs
or
pop
cmp
cmp
pop
insl
fwait
xchg
or
movsb
adc
mov
fstpt
mov
push
fdivrs
andb
test
pop
dec
push
fidivs
mov
xorl
cmpsl
imulb
imul
dec
inc
in
jecxz
ret
aas
xor
or
cmc
and
fldcw
xchg
push
cli
mov
inc
rcrb
leave
or
mov
sub
ja
xchg
add
das
arpl
mov
jo
cld
fisttpl
cmc
enter
xchg
mov
mov
stos
sbb
scas
push
fs
and
mov
add
outsb
clc
inc
mov
pusha
inc
jb
stos
addr16
fsts
stc
cld
stos
mulb
movsl
push
pop
test
sub
mov
push
cmpsl
xor
add
and
dec
adc
mov
mov
lret
mov
test
addr16
sarl
int3
pop
insl
ljmp
cwtl
mov
pusha
outsb
xchg
inc
xchg
sbb
loopne
sbbb
mov
inc
cmp
jbe
push
mov
pushf
punpcklbw
in
sub
jecxz
push
repz
xchg
jmp
ja
lds
int3
push
shll
sbb
pusha
cli
sti
inc
and
in
push
dec
fmull
push
clc
int3
mov
mov
pushf
dec
pusha
cmp
jns
xchg
and
jecxz
fsubl
movsb
imul
jl
push
push
fldcw
pop
or
fdivrl
dec
adc
jecxz
xchg
in
xchg
mov
mov
arpl
lea
out
xlat
test
inc
popa
mov
adc
push
push
loopne
int3
es
sub
out
call
lahf
in
push
xchg
add
push
xor
cmp
sahf
movsl
and
xchg
mov
mov
imul
popa
stos
dec
push
xchg
adc
xor
inc
push
jb
lods
in
repz
xchg
movsb
je
xlat
icebp
cmp
cli
and
pop
push
sar
ja
pop
mov
js
pusha
into
aas
push
mov
dec
jae
mov
dec
lock
push
insl
adc
test
cwtl
add
xchg
hlt
push
repz
daa
or
ja
mov
pop
movsl
andl
dec
inc
int
dec
or
sbb
popa
data16
movsl
xor
stos
cmpl
loopne
dec
push
xchg
outsb
pop
testb
inc
movsb
cltd
stos
insb
lock
loopne
push
aaa
mov
mov
cs
outsl
insl
aas
fstpt
dec
xor
inc
call
in
lods
insl
sbb
push
ss
sub
mov
push
and
loop
sbb
push
mov
mov
ret
jge
test
dec
dec
pop
out
jo
xor
sti
jmp
sti
js
popw
jo
cmp
cwtl
xlat
fmuls
decb
add
movsb
std
popa
xlat
inc
jp
pop
enter
jno,pn
jecxz
xchg
clc
add
fildl
int3
das
cmp
push
pusha
mov
cltd
push
cmp
mov
mov
outsb
loopne
gs
cmpb
or
movsb
mov
ret
bswap
nop
inc
test
loope
out
mov
inc
stos
xorl
fidivl
mov
adc
pop
ret
push
lret
fadds
sub
int3
push
sbb
mov
stos
movsl
data16
sarl
iret
cmc
clc
jno
test
cmp
lock
fidivs
fwait
mov
and
fs
jg
mov
inc
dec
scas
lods
out
sub
xor
push
imul
stos
add
insb
ljmp
dec
imul
sub
sbb
lret
add
jle
dec
adc
xlat
int
xlat
or
dec
sbb
mov
ficompl
insl
arpl
sub
fnstsw
mov
rolb
imul
mov
mov
xchg
inc
fucomp
repnz
add
arpl
xor
pusha
sbb
sahf
addr16
jae
scas
or
push
lea
daa
sahf
es
adc
xor
sbb
inc
lea
dec
call
movsb
xorl
dec
das
push
push
jnp
pop
or
jp
lds
movsl
pushf
sti
out
orb
mov
scas
cmpsl
out
js
fs
sub
sub
imul
cmp
shlb
loop
addb
dec
out
mov
out
xor
jno,pt
mov
xor
cmp
lds
aam
dec
and
mov
push
add
mov
call
pop
and
lret
jecxz
lret
mov
dec
imul
sbb
int3
add
or
sti
xor
insl
and
ljmp
jmp
inc
inc
mov
cmpl
pop
jo
ds
push
out
int3
jp
mov
pop
lods
jae
add
leave
pop
pop
sahf
addb
shll
dec
mov
or
ficomps
inc
insb
sahf
and
sub
rorb
pop
xlat
fistpl
repz
push
call
and
or
pop
lret
js
pop
jmp
rcr
push
fisubrs
frstor
in
xchg
sbbl
sti
out
add
cltd
xchg
xorl
rep
push
gs
icebp
int
mov
sahf
cmp
lcall
rorb
mov
imul
lret
mov
iret
nop
jge
sar
mov
roll
test
push
out
cmpsl
lods
bound
fidivs
lahf
adc
es
xchg
add
mov
push
dec
imul
cmp
ret
mov
cmpsl
cmp
fstps
fmuls
and
jb
pop
dec
nop
lods
jb
mov
push
icebp
sub
or
adc
pop
fildll
shrl
and
lret
pop
push
ds
or
sub
addb
cmpsl
clc
aaa
mov
in
and
scas
inc
addl
pop
pop
fcmovbe
or
and
xchg
add
leave
and
xor
mov
test
imul
jns
sub
scas
add
jno
cltd
int3
call
push
jno
jbe
sbb
dec
jg
and
mov
or
pop
dec
loope
xor
sub
sti
shll
fst
daa
push
fidivl
mov
mov
push
add
dec
mov
push
pop
and
lea
es
jnp
je
arpl
rorb
outsb
fsincos
fs
pushf
cmp
repz
add
aad
mov
outsb
popf
gs
mov
sub
add
pop
mov
lock
test
adc
cmp
out
fidivrs
fldenv
inc
jmp
lahf
pop
add
jne
push
into
sub
cmpsl
lods
dec
mov
imul
and
ficomps
shll
xchg
xchg
inc
or
test
cmpsl
mov
mov
cli
fiadds
in
or
pop
or
or
push
negb
icebp
je
in
bound
test
stos
pushf
iret
xchg
iret
inc
inc
popa
fnstenv
pushaw
xor
ret
lahf
dec
jnp
inc
sarl
xchg
les
loope
pop
fstpl
and
hlt
xor
mov
mov
pop
push
jb
iret
sarb
xchg
mov
xlat
mov
imul
pop
jmp
push
add
movsb
adc
sti
pop
cmp
and
sti
sbb
pop
jo
cltd
dec
movsl
pop
repnz
or
mov
dec
xchg
adc
dec
repz
and
adc
xchg
rorb
sarl
mov
es
jmp
mov
dec
or
mov
cmpl
pop
jae
rorl
xchg
pop
mov
inc
mov
mov
cs
sbb
pop
and
add
mov
xchg
sub
xchg
jne
mov
ds
daa
pop
push
pop
test
mov
push
imul
mov
shl
scas
icebp
incb
call
add
jmp
adc
cmpsb
jns
xor
adc
scas
stos
inc
jbe
pusha
fwait
shlb
adc
popf
insb
xchg
fs
mov
jb
cmc
jbe
xchg
hlt
pop
xchg
movsl
jo
sub
fcomip
les
mov
add
xlat
int
jmp
daa
add
aaa
push
fisttps
pop
cwtl
movsl
call
mov
jp
movsb
push
outsb
icebp
jne
jle
mov
pop
sub
clc
jb
aaa
popa
out
sbb
ret
jp
cwtl
sub
aas
jo
sub
xchg
push
movsb
sarl
int3
push
push
arpl
mov
movsl
cmp
popl
push
add
xchg
xchg
mov
fcmovu
ss
in
pop
xchg
outsb
out
sub
fdivs
or
scas
arpl
jnp
insb
cmp
iret
adc
add
inc
mov
or
dec
test
gs
insb
aaa
enter
leave
pusha
xchg
scas
or
inc
dec
inc
mov
jae
mov
cmp
sub
repnz
adc
jb
xchg
or
lea
push
cli
dec
pop
sub
adc
ret
push
jns
xor
mov
pop
lcall
xor
or
cmp
xor
enter
xor
fcmovb
cmp
adcl
dec
or
xor
test
lret
out
pop
jbe
mov
mov
rorl
mov
pop
out
andb
sbb
sti
sub
pushl
sbb
paddsw
pusha
push
mov
sub
sahf
pop
arpl
jbe
sarl
sahf
fimull
jb
arpl
shl
add
popf
sub
in
mov
jbe
jle
mov
mov
xchg
call
out
mov
and
call
cmpsb
sbbb
dec
pop
sub
mov
cli
push
sub
mov
sub
lahf
xor
mov
js
push
sub
pop
adc
out
push
dec
cld
dec
push
mov
xor
cmp
sub
outsb
sbb
bound
mov
sub
pop
lds
ds
and
aad
gs
imul
or
push
test
xchg
sbb
xchg
outsb
jecxz
xorl
fsubl
ss
mov
mov
pop
enter
xchg
into
push
push
or
or
xor
xor
xchg
aam
mov
jge
mov
sbb
mov
in
icebp
sub
shr
jb
lahf
div
jno
sub
test
inc
push
pop
movsl
cwtl
or
cs
int
testl
jmp
idivl
imul
cmp
loopne
arpl
scas
std
pop
rol
mov
dec
enter
push
fstpt
inc
test
pop
sub
movsb
inc
aam
dec
std
push
orb
cmp
push
push
adc
lret
mov
sbb
push
mull
fs
addr16
jb
fldl
mov
test
imul
inc
es
cmp
dec
and
jne
sbb
test
shr
imul
xchg
xchg
ljmp
fistl
jbe
add
mov
inc
sbb
or
jmp
stc
call
sti
and
call
cmp
mov
pushf
sahf
sarl
xchg
setb
loopne
sub
xor
mov
scas
lds
mov
jae
stc
cmp
jl
jge
popf
push
lock
add
fisubrs
inc
pop
fcmovnb
dec
add
dec
mov
inc
xor
mov
pop
sbb
insb
rcl
push
pop
dec
insb
jnp
test
mov
imul
fidivrs
mov
mov
movsl
lods
mov
push
and
mov
fwait
jne
mov
outsb
xchg
das
in
aad
mov
mov
ret
das
outsb
mov
popf
push
and
or
xchg
scas
mov
mov
fsub
push
iret
aas
leave
dec
jge
mov
xor
sbb
jo
loop
popa
shlb
daa
mov
cltd
test
data16
xor
mov
pusha
lahf
add
pop
lret
sbb
sub
ss
xor
pusha
inc
cs
idiv
mov
cs
mov
jg
and
xchg
out
xchg
jmp
jnp
insl
movsb
xchg
xorl
sub
push
mov
inc
sub
mov
mov
pop
out
and
jns
jg
dec
sbb
and
in
ret
daa
or
out
outsl
ret
inc
les
xchg
loope
xchg
fistpl
mov
les
lods
cmc
mov
mov
les
out
mov
mov
or
cmpsb
xchg
jl
fstpt
mov
inc
push
test
pop
lods
nop
pushf
mov
clc
repz
cli
fsubl
mov
xchg
mov
movsb
sar
jmp
pop
bound
rclb
test
or
repnz
pusha
fistl
scas
dec
jmp
jmp
popf
sbb
pop
cmc
mov
dec
cwtl
or
xchg
and
inc
xor
outsl
inc
lcall
data16
pop
or
mov
shl
mov
dec
jmp
stc
and
lcall
popa
jne
xor
mov
hlt
jne
imul
add
add
xchg
mov
stc
leave
xchg
xchg
mov
pop
mov
and
inc
sub
cmp
jae
movsl
addr16
jp
or
xor
icebp
or
inc
stos
pop
pop
popa
pop
pop
loop
loopne
imul
add
xchg
std
jecxz
inc
dec
dec
xor
mov
mov
pushf
adc
jbe
mov
push
push
sbb
icebp
and
pop
mov
mov
cltd
stos
leave
add
push
repz
hlt
dec
or
adc
mov
ja
scas
cmp
sbb
and
or
add
mov
aad
mov
or
xchg
or
or
das
push
mov
out
jb
dec
cmp
push
fs
les
mov
jbe
jecxz
dec
aad
mov
mov
into
mov
jge
mov
mov
cmp
icebp
cmc
insl
or
jmp
add
mov
jno
aaa
xchg
mov
clc
sbb
cltd
lods
adcl
rolb
add
loope
stos
orl
xor
push
clc
test
cmp
jg
push
adc
xchg
sbb
into
push
cld
loop
xor
movsb
cmp
les
add
arpl
js
jbe
and
test
cwtl
in
cmp
mov
mov
dec
cld
xor
jl
fnstcw
dec
les
out
enter
out
inc
pop
and
jo
outsb
mov
pop
insl
or
sub
cmp
shlb
dec
and
inc
ret
test
sub
pause
aad
xor
jns
arpl
inc
mov
xor
cmp
mov
jl
adc
stos
push
outsl
fbld
mov
jmp
js
mov
pushf
adc
outsb
xchg
cmp
or
jle
pop
movsl
into
add
mov
cmpsb
lahf
fnstcw
into
jmp
add
add
cmp
or
dec
mov
das
pushl
and
push
sbb
test
js
push
pop
pusha
mov
fsubr
mov
mov
mov
push
idivb
imul
push
dec
jns
pop
mov
xchg
add
sbb
addl
adc
rolb
xchg
sbb
clc
out
adc
dec
popf
cmpsl
ljmp
push
outsl
shl
scas
imulb
gs
adc
gs
orl
inc
and
cmc
mov
sub
rorb
out
or
pushw
fs
push
adc
jp
push
bnd
movsl
and
sahf
xchg
xchg
in
fs
push
outsb
aad
ljmp
das
fsubrp
xchg
stos
popf
push
popa
push
das
push
cmp
das
fwait
sub
gs
shrl
mov
pslld
aas
jo
stos
xor
xor
sub
into
aam
or
loope
inc
dec
xor
pop
stc
xlat
mov
sub
pop
stos
dec
loop
add
cmpsb
popl
arpl
add
subl
stos
cmp
sbb
mov
cmp
inc
adc
mov
inc
ljmp
imul
xchg
mov
add
or
and
std
inc
xchg
mov
ja
scas
mov
imull
ljmp
mov
pop
pusha
negl
fcoml
cs
add
popf
movsl
push
pushf
adc
ljmp
movsl
or
ljmp
roll
adc
mov
aas
mov
in
fldcw
movsb
sbb
in
es
movsl
xor
insl
or
sub
or
or
pop
inc
mov
and
jo
adc
out
dec
test
mov
pushl
ds
cli
in
sbb
push
imul
popa
jno
sahf
jb
and
leave
nop
cmpsb
into
lods
xchg
cld
or
jl
gs
stc
inc
inc
mov
iret
mov
xchg
mov
fimull
mov
pop
les
lea
cld
fcompl
ss
jp
mov
add
cmp
popf
pop
int
fucomp
push
inc
enter
xor
aad
scas
fstl
jle
push
fildll
insl
mov
and
jg
cmp
aas
sbb
mov
sub
sti
pop
lds
cli
and
mov
pop
xchg
movsl
mov
flds
cli
rorb
lods
push
bound
xchg
inc
jp
jmp
nop
inc
dec
mov
xchg
out
cmp
pop
dec
lret
push
push
loope
cltd
lcall
inc
movsb
daa
cmpb
ljmp
test
fldt
notl
dec
push
push
push
mov
xor
dec
jmp
shll
mov
movb
push
fistl
inc
js
insl
fst
sti
mov
scas
sbb
je
movsl
xchg
sub
and
movsl
inc
pop
stc
gs
andl
pop
push
fsubs
rolb
add
mov
out
mov
flds
test
scas
out
mov
in
faddl
xchg
sub
inc
lock
sbb
gs
rolb
popf
shll
subl
mov
or
xchg
ja
test
sti
xchg
clc
stos
adc
jmp
inc
push
dec
or
jns
pop
pop
mov
fdivl
loope
pop
sbb
and
adc
enter
out
lret
loop
fsubrl
int3
push
pop
dec
dec
push
inc
jecxz
jbe
nop
dec
lds
in
push
fcoms
ds
xlat
fs
rclb
loop
inc
js
adc
adc
jne
cmpl
jno
xor
dec
cmpsb
jns
xor
mov
xor
les
stos
movsl
testl
loop
cmp
cmp
pop
inc
push
nop
mov
mov
mov
adc
outsb
in
jae
jo
scas
mov
xor
sarl
mov
loope
inc
mov
mov
jae
loop
das
fdivrs
jle
jae
ja
shl
in
jb
arpl
pop
bnd
adc
cmp
inc
in
outsb
add
cld
fisttpl
shl
sub
mov
pop
mov
pop
cwtl
rolb
mov
mov
inc
push
and
outsl
rorl
push
cmp
xchg
lret
xchg
jp
lahf
push
into
jne
sbb
mov
sub
popa
dec
fstps
scas
cld
cmpsb
outsl
in
loope
dec
push
sarb
mov
and
jne
and
inc
mov
sahf
cli
mov
mov
and
push
mov
loope
into
push
jmp
mov
sbb
push
cmpsb
in
sub
movsb
fs
fbstp
ffree
jo
dec
jp
inc
mov
pop
inc
push
arpl
mov
dec
dec
movsb
jl
andb
js
inc
popf
insl
enter
arpl
jo
jnp
pop
add
sub
adc
add
adc
mov
test
out
lock
dec
cwtl
insl
je
shl
push
sub
sub
fnstenv
std
pop
daa
mov
push
call
out
xor
mov
jnp
xchg
js
mov
and
faddl
sub
jno
fcmovb
ss
sub
xor
adc
push
fbstp
scas
xor
xchg
and
shlb
fiaddl
imul
movsl
push
nop
and
dec
gs
xchg
lea
and
dec
insb
jl
aam
mov
ficompl
jp
int3
cmc
aad
add
clc
mov
mov
xchg
sti
dec
cmp
out
push
movsl
stos
cmp
std
outsl
sbb
pop
cmpsl
pop
dec
out
imul
mov
jg
xor
jne
add
int3
js
mov
subb
mov
add
jle
fdivs
xchg
jmp
nop
or
or
mov
sbb
add
daa
jg
pop
sub
aaa
test
aas
sbb
std
in
sbb
outsb
std
push
inc
push
ljmp
in
jnp
test
hlt
shlb
mov
xor
inc
pushl
pop
push
loop
push
cltd
std
enter
lcall
leave
pop
jmp
xchg
push
cmp
mov
sub
add
or
sub
cmp
sub
aas
es
xchg
lcall
test
jp
scas
push
and
pextrw
mov
add
cmpsl
ja
adc
push
pop
nop
rorb
shrl
push
out
jle
xor
fsubr
xor
fucomp
sbb
cmp
loop
daa
cmc
pop
das
ds
or
lock
cld
xchg
movsb
add
mov
fisubs
mov
mov
cmp
mov
push
cs
push
and
push
out
add
icebp
in
xchg
add
cmp
frstor
inc
jns
mov
xchg
gs
iret
cmp
in
pop
insl
cmpsb
dec
pop
shl
roll
dec
scas
dec
lea
pop
xchg
push
jbe
push
jo
sahf
cwtl
das
mov
stc
cli
leave
arpl
ret
fstpt
adc
sbb
subl
mov
xchg
ret
dec
xor
inc
mov
scas
lcall
loope
xchg
pop
xchg
jp
inc
lods
aad
or
push
fs
cmp
lahf
pop
iret
jne
adc
cmpsl
dec
mov
pop
lcall
cmp
pushf
sbb
rolb
add
mov
imul
out
es
imul
lods
adc
adc
pushf
and
hlt
push
cmp
cmp
push
jne
push
dec
je
or
sbb
push
add
sub
les
mov
es
xchg
xchg
insb
mov
test
mov
and
dec
or
cmc
cltd
sbbl
js
adc
cmpsb
sbb
mov
leave
out
aad
aam
pop
xchg
jle
pop
fdivrs
xor
mov
stc
ds
js
jmp
add
pop
out
ja
std
xor
dec
hlt
lcall
cmp
lea
pusha
loopne
adc
cltd
inc
adc
popa
add
fnstcw
or
or
cmp
sbb
sub
lahf
fwait
sub
inc
int
das
xor
mov
sbb
push
in
mov
xchg
bound
andb
push
cs
push
sub
pop
or
sub
fiadds
pushf
jmp
ret
adc
and
and
lret
adc
leave
mov
sbb
xor
xchg
cmpsl
mov
add
jp
out
lcall
aas
mov
dec
mov
stc
cld
popa
pop
jne
jns
pop
mov
cmp
xor
or
out
test
cltd
push
mov
dec
sbb
cmp
ret
xchg
sar
inc
xor
bound
aaa
mov
ret
xchg
xchg
mov
sbb
mov
lret
jnp
cwtl
vmovd
test
push
cmp
mov
dec
adc
inc
outsb
sbb
pop
jb
lods
mov
mov
stc
jg
or
stos
in
rclb
jnp
mov
popf
aaa
lods
mov
inc
fldlg2
lock
test
pop
push
push
lret
in
stos
clc
and
sub
xchg
in
jecxz
jnp
aad
stc
fs
mov
push
inc
sbb
je
jmp
dec
adc
pop
xchg
ds
stc
jne
xor
leave
nop
push
imul
jecxz
ja
cld
mov
mov
mov
int
mov
mov
or
loop
es
stc
xor
or
xchg
fistl
ret
and
cld
cmp
push
xlat
mov
add
jmp
and
loopne
js
add
addr16
and
dec
jg
push
fcoml
mov
push
cld
cli
inc
xchg
setno
cs
cmp
pop
insb
mov
mov
mov
xor
scas
aas
cmp
call
mov
xor
push
inc
mov
andb
sub
lret
inc
push
jmp
mov
inc
and
je
shlb
push
mov
jbe
sarl
pop
stc
fidivrs
push
add
adc
lahf
stos
sub
cmpsb
cmp
sbb
movsl
cmp
lock
xor
stc
mov
rclb
inc
outsl
je
js
hlt
inc
inc
mov
pop
scas
clc
ret
in
push
pop
inc
jle
jb
dec
push
pop
sbb
fcmovnb
addr16
in
dec
xchg
outsl
ljmp
inc
mov
pop
and
js
sbb
mov
ljmp
dec
or
push
cld
repz
mov
test
jp
rcrl
mov
orb
sbbb
add
packuswb
pshufw
lock
cs
lret
pop
push
mov
clc
cmp
rcll
idiv
scas
scas
inc
sbb
es
aaa
cmp
mov
jecxz
fwait
jg
hlt
inc
andl
add
insb
ss
je
shlb
push
sbb
test
bound
aaa
jg
dec
jecxz
mov
cmp
push
icebp
and
cmp
xchg
rcr
and
push
pop
or
mov
mov
cmp
cmp
adc
gs
call
imul
mov
lods
and
movsb
hlt
push
xor
popf
pop
xor
fstpt
jo
push
addr16
mov
jl
lahf
sub
inc
xchg
xchg
icebp
js
xor
lods
or
mov
bound
pop
insl
xchg
mov
lods
and
mov
rclb
inc
xchg
dec
xchg
mov
adcb
lret
in
jb
cmp
lods
push
ja
in
push
jmp
scas
mov
inc
fucomp
dec
enter
pop
xchg
jle
mov
js
shl
sbb
push
add
xchg
insb
pop
pop
loop
subl
and
je
stos
cs
adc
xor
cmp
jl
push
outsl
popl
repz
leave
sub
out
enter
aas
ds
push
aas
mov
out
xchg
mov
out
mov
xor
out
inc
movsl
js
es
fadd
jnp
cltd
popa
jmp
sbb
pop
sbb
dec
mov
stc
adc
cmova
repz
or
enter
lods
mov
cmpsl
ja
jmp
in
clc
arpl
push
stos
pop
mov
cli
mov
inc
mov
jmp
or
mov
pop
mov
pop
ss
sub
jg
out
fiaddl
mov
dec
fldl
mov
fildl
aas
incl
or
mov
pop
adc
cmp
outsb
out
int
adc
aam
add
cmp
lock
movsl
inc
jno
mov
or
scas
mov
lock
ficomps
lods
dec
mov
push
lret
orb
in
sub
dec
stos
dec
or
xlat
scas
xchg
mov
cltd
popf
clc
pop
sbb
mov
stos
je
cld
push
jae
dec
add
mov
push
lods
aaa
mov
popw
sub
dec
push
enter
lret
mov
sub
mov
imul
mov
sbb
xchg
push
adcl
ss
mov
and
jle
cmp
jb
loop
les
stos
add
jne
jmp
mov
rcr
dec
adc
ss
jmp
jbe
mov
inc
int3
xchg
xchg
inc
lock
fsubrs
lods
or
daa
cmp
iret
add
addb
xchg
scas
cmp
pop
lahf
sbb
sbb
xor
add
inc
pop
mov
jl
lcall
push
test
sub
mov
dec
sub
outsb
sbb
sbb
ss
xlat
cld
push
pop
std
clc
push
mov
mov
jecxz
mov
into
adc
movsb
fnstenv
push
sub
mov
jns
addr16
out
push
mov
cmp
shl
inc
and
incb
and
ja
je
mov
mov
mov
or
daa
fsts
push
mov
shll
xlat
cmc
test
adc
mov
sbb
dec
idivl
scas
mov
cmc
outsl
inc
pop
inc
loopew
cmc
addr16
call
inc
push
and
es
rol
xchg
pop
or
test
dec
cwtl
xlat
rcll
sbb
in
dec
lods
push
inc
js
mov
fsubrs
add
lock
pop
ds
mov
or
aad
sti
ja
ljmp
bound
fmuls
or
push
sub
mov
scas
inc
pop
xlat
jmp
push
xchg
sbb
xchg
aad
xchg
rcl
ret
dec
les
rolb
inc
jge
and
mov
aam
xchg
mov
add
mov
cmpsb
out
mov
pop
inc
mov
sbb
cltd
fwait
push
cwtl
pushf
push
sbb
dec
fdivr
pusha
mov
mov
lods
hlt
sbb
cmovno
into
rorb
jl
push
lock
stc
iret
or
cmpsl
sub
ret
jle
jmp
sbb
dec
mov
add
xor
mov
out
jbe
fnstcw
mov
mov
pop
ret
ss
pop
dec
lods
mov
mul
fcmovb
xor
cmp
ja
pop
scas
jns
imul
xchg
lcall
push
stc
adc
cmp
stos
loop
orb
inc
xchg
das
pop
int
lds
or
int3
out
int
mov
sahf
jecxz
inc
push
in
sbb
inc
pop
lret
bound
sarl
test
outsl
out
out
iret
mov
fidivl
gs
int3
testb
and
ret
aad
push
lret
clc
jl
mov
icebp
add
mov
pop
lock
fmuls
fwait
jno
inc
aad
sahf
roll
aad
sbb
in
push
fisttpl
aam
mov
sub
lods
push
pop
fsubs
dec
cmp
ljmp
push
add
cld
negb
adc
aaa
sub
mov
cwtl
pop
loopne
aad
ret
jle
ror
cmp
xor
add
pushf
test
je
inc
add
mov
inc
cmc
xchg
call
xor
shl
pop
add
test
push
push
arpl
mov
or
and
bound
shrl
push
push
dec
mov
mov
jp
mov
stos
lahf
jmp
movnti
adc
sub
xorl
pusha
shrl
dec
movsb
or
inc
jg
jle
fucomp
movsb
mov
lock
jle
mov
dec
adc
cvtps2pi
gs
scas
sarl
xchg
fdiv
lock
or
lcall
leave
dec
mov
cs
and
pop
mov
pop
mov
push
sbb
lods
loope
lea
fs
sti
fistpl
into
jbe
sbb
xchg
and
ret
ret
mov
pusha
or
lea
pop
ss
pop
aad
jns
or
inc
push
mov
mov
scas
xchg
pop
test
bound
inc
std
int3
push
cmpsb
sbb
mov
xor
push
test
in
sarb
jne
push
sbb
inc
stos
xor
pop
cmp
jecxz
repz
dec
pop
cld
fucomp
fdivr
and
repz
test
mov
shll
lahf
dec
dec
adc
mov
repnz
test
xchg
pop
push
jo
push
mov
adcb
lods
adc
lret
clc
lock
rol
repnz
sbb
outsl
mov
xor
imul
push
popa
arpl
mov
nop
fwait
into
and
movsl
adc
in
js
inc
xchg
ljmp
mov
rcrl
jle
mov
jp
orl
stc
pushf
outsb
or
xlat
ret
ss
mov
lods
sub
jbe
cmp
sbb
dec
test
sub
push
cmpsb
mov
stos
fnstenv
and
outsl
shll
ja
lods
push
lret
pop
mov
out
sahf
jae
aaa
xchg
cmc
or
ja
popa
cli
fiadds
enter
xor
enter
lcall
dec
sbb
fisubrs
fdivrs
ds
push
push
push
in
cld
jbe
pop
push
mov
negl
cs
popf
fwait
or
mov
or
lret
and
stos
mov
xchg
pop
xor
stc
jp
outsl
clc
int
inc
or
sub
push
xchg
jl
adc
lea
sub
loopne
leave
xchg
test
icebp
inc
sbb
cmp
movsb
fwait
mov
fisttpl
sub
push
jne
mov
add
jb
js
gs
cmpsb
xchg
inc
aad
add
xor
jns
mov
add
cwtl
fistpl
pop
xlat
cmp
xchg
adc
mov
shrl
xchg
mov
jmp
loope
movsb
mov
adc
adc
cli
push
push
ficompl
movsb
fsubl
hlt
cmc
adc
fidivrs
nop
shll
loop
div
jle
lcall
xchg
mov
mov
fidivs
xor
xor
inc
leave
fnstenv
mov
fwait
outsl
xchg
lahf
jnp
push
das
rorb
or
mov
pop
fwait
xchg
and
and
jo
dec
xchg
sbb
sahf
insl
leave
xchg
add
lret
and
outsl
ds
jl
insb
fistps
sbb
pop
dec
cmp
xlat
push
mov
push
pop
scas
testb
lcall
sbb
out
xchg
into
mov
xchg
inc
xor
xor
pushf
inc
add
mov
cwtl
sub
int3
xor
int3
pop
xor
or
xchg
repnz
pop
daa
xor
pop
popf
dec
sti
shll
and
push
pop
cli
cld
mov
push
and
jb
add
scas
testl
out
sti
jbe
push
pop
xchg
inc
and
jno
cs
rol
mov
sti
jb
in
add
mov
pop
int3
cmpsl
ret
jecxz
testb
dec
jg
dec
xchg
xorl
je
push
pop
jmp
les
daa
insl
in
out
aas
adcl
inc
add
mov
popf
dec
inc
xchg
repnz
jle
xchg
jno
add
sub
add
fmuls
mov
icebp
or
cwtl
and
stos
dec
dec
ret
xchg
mov
std
and
or
xchg
cmp
xchg
mov
mov
push
fdivl
dec
sbb
mov
out
cli
sbb
jb
frstor
outsb
mov
movsb
cltd
mov
cld
outsb
mov
mov
jl
dec
mov
sub
call
mov
mull
mov
mov
lock
mov
pusha
sbb
outsb
scas
xor
jge
jp
outsl
add
mov
out
sub
cmp
pop
xchg
xor
jge
outsl
aam
and
pop
or
add
movl
jbe
sub
fldenv
fsubl
stos
pop
fistps
cmp
cmp
clc
mov
mov
adc
dec
dec
cmp
mov
lds
insl
inc
cmp
jecxz
push
mov
sti
in
scas
jmp
sbb
data16
lock
push
out
aaa
scas
daa
xchg
mov
dec
cmp
mov
xchg
push
inc
sub
inc
xor
jo
lds
sbb
in
jge
cmpsl
hlt
pop
in
js
mov
inc
mov
hlt
cmp
cmp
cwtl
xchg
ret
sti
push
cli
mov
fsubl
fwait
call
ror
mov
es
dec
lods
pop
push
cmp
shll
jmp
or
rclb
adc
stos
mov
cmpb
add
in
ret
push
cwtl
cmpb
test
add
and
push
mov
int
xchg
ret
inc
je
stos
je
lods
sbb
or
push
loope
and
push
adc
addr16
xor
pop
adc
pop
ds
push
sbb
pop
jb
dec
outsb
dec
push
sub
adc
inc
adc
stc
or
push
pop
in
cmpl
mov
xor
xchg
jnp
add
push
divb
sbb
push
out
push
call
rcll
cmpsl
mov
adc
mov
sbb
ret
inc
sbb
movsb
dec
leave
pop
inc
sub
ret
xchg
mov
shrl
mov
xchg
sbb
jo
fdivs
sub
xor
push
adc
cwtl
popf
pop
orl
and
in
fucom
mov
dec
bound
nop
push
xor
ja
shlb
and
xor
dec
arpl
jbe
loopne
or
jnp
cmp
cli
pop
lret
xchg
jns
repz
movsl
and
dec
and
add
inc
cwtl
sbb
test
sbb
pusha
out
icebp
xsavec
test
ds
or
lods
dec
sub
sbb
push
pop
inc
cmp
into
aaa
ret
adc
gs
lock
push
fisttpll
add
iret
push
ret
mov
mov
push
push
mov
mov
enter
lds
add
sub
in
or
add
scas
xchg
lock
fwait
mov
insl
mov
push
dec
cs
jb
movsl
push
sbb
dec
mov
inc
sub
mov
subl
scas
stos
mov
pusha
out
lea
dec
hlt
ret
cmp
stos
push
cmp
aam
add
gs
cmp
push
cli
jmp
jecxz
sbb
imul
movsb
cmpsb
inc
dec
push
cmp
mov
mov
sbb
movsb
jnp
push
jb
xor
add
mov
xor
sbb
movsb
js
mov
sub
add
add
mov
adc
mov
pop
sbb
xorb
fistpl
test
sbb
add
lods
jne
loop
cmpsl
mov
dec
and
aam
stos
popf
nop
nop
cmp
sti
rcl
xchg
cmp
aas
jle
add
outsl
nop
xor
or
mov
lret
or
subb
testl
lods
out
inc
mov
dec
adc
movb
push
in
data16
mov
mov
jne
lods
xchg
sbb
js
cmp
fildll
gs
fisttps
lock
cmp
dec
sub
ja
fwait
std
scas
ss
out
int3
push
mov
mov
andl
inc
fsub
ja
xchg
sub
stc
push
out
fistpl
call
ljmp
jbe
insl
adcb
push
lahf
ja
jae
sbb
mov
pop
inc
shlb
sub
push
aam
imul
push
push
dec
push
cltd
cmc
and
sbb
mov
xchg
push
jecxz
cltd
cmp
mov
xlat
call
mov
mov
lods
insl
fsubrl
pushl
jle
test
mov
xlat
lods
mov
cmp
ja,pt
jae
jmp
jge
adc
pop
adc
cld
gs
lea
ljmp
mov
jecxz
test
lcall
sub
push
mov
cwtl
pop
je
push
cmp
lods
iret
das
mov
js
imul
jbe
inc
sarl
imul
mov
and
add
adc
cmpsb
pusha
int3
xchg
test
mov
and
xchg
loopne
outsl
fdivrl
insl
and
jnp
xor
cmp
jp
mov
mov
cmp
lret
adc
enter
mov
in
adc
push
aas
cmp
push
pop
lcall
or
loopne
sahf
cmp
sbb
pop
loopne
or
push
sub
jne
sub
stos
test
fcoms
pop
mov
inc
or
xchg
and
out
sub
sub
sbb
lret
and
imull
rclb
push
xchg
lods
jae
aad
cmp
fsubrl
push
pop
in
loopew
int3
loop
lock
mov
mov
cmp
xchg
mov
or
mov
xor
sbbb
mov
pop
in
outsl
sbb
inc
cltd
lret
sbb
and
pop
arpl
iret
leave
pshufw
jg
cmp
dec
rolb
sub
jns
in
adc
lret
jle
push
iret
push
sbb
enter
inc
add
push
aad
xor
mov
cld
test
cmc
movsb
cmpl
pop
sbb
mov
pop
mov
inc
ret
cmp
jb
arpl
mov
in
jl
out
jnp
and
pop
push
call
push
int
mov
adc
pop
jns
xchg
jns
loop
push
xchg
xchg
enter
xor
mov
hlt
push
arpl
out
pop
or
test
out
lcall
dec
cmpb
xchg
imul
insl
pop
xchg
push
sub
lock
nop
mov
scas
xchg
jno
mov
adc
push
xchg
sbb
adc
jl
mov
out
jne
mov
dec
je
lods
mov
in
pop
shrl
jno
or
pop
dec
sti
jo
xchg
fdivs
pop
test
cs
call
sub
out
and
loopne
aaa
xor
mov
dec
jp
jmp
scas
ret
rcll
lds
xchg
push
aam
xchg
sahf
jp
or
ja
pop
arpl
lahf
pop
mov
mov
push
enter
adc
xchg
cmp
push
jo
xor
das
xchg
inc
push
scas
test
scas
sub
adc
arpl
int3
es
fs
mov
out
mov
lret
cli
pop
push
dec
stc
movsl
ret
and
jl
pop
pop
cmpsb
dec
pop
int3
popa
aas
push
jo
push
jae
xchg
cmp
lock
movsl
loope
mov
ja
fdivl
push
aam
xchg
inc
mov
push
add
pop
sbb
inc
pop
xchg
lret
pusha
aaa
jecxz
or
push
adc
mov
pop
sub
sbb
sbb
out
jp
pop
or
pop
cmp
iret
sbb
setbe
pop
sub
dec
shll
inc
sahf
in
ja
pushf
add
sub
pop
rep
imul
cwtl
cmp
inc
shl
adc
inc
out
lods
or
mov
mov
sbb
aad
and
cmp
lds
in
mov
data16
div
inc
out
jmp
cld
inc
and
xchg
in
jnp
jl
das
xchg
and
sbbb
aaa
ret
popa
sbb
icebp
push
jle
add
pop
jg
cmp
pop
jp
xor
cs
adc
pop
sti
xchg
dec
ss
mov
xor
sbb
add
mov
movsl
stos
pop
and
popa
mov
jle
test
daa
mov
iret
gs
adc
pop
push
xor
push
dec
dec
test
hlt
xor
xchg
ja
xchg
dec
bound
pop
push
out
dec
jno
xchg
mov
xor
iret
fcoms
push
dec
sbb
cltd
insb
pop
inc
in
or
loop
add
pop
xchg
or
mov
sub
pop
jb
inc
sub
jp
lret
pop
in
xor
popa
arpl
mov
popf
iret
loop
filds
or
ss
lret
sarb
sbb
push
jge
je
inc
fcompl
dec
call
lea
dec
sbbb
in
mov
inc
sub
mov
bnd
popa
cmp
cmp
rolb
or
popa
lcall
cmp
push
cmc
push
xchg
fstps
pushl
test
sub
divl
cld
jae
outsb
std
or
cld
das
in
and
xchg
dec
nop
mov
push
dec
ret
rcrb
add
pop
shl
insl
in
gs
popf
icebp
cmp
cmp
jge
scas
xchg
ljmp
imul
pop
and
xor
popf
jns
push
ds
xchg
jmp
nop
ljmp
and
mov
data16
idiv
mov
cmp
or
sti
inc
xor
test
mov
jg
push
sar
enter
cs
jge
adc
push
imul
mov
adc
ljmp
jl
mov
call
add
dec
pusha
or
lret
mov
hlt
inc
jecxz
test
mov
aad
inc
pop
lret
jg
inc
mov
jl
add
or
xchg
daa
inc
out
in
roll
out
push
or
pop
loope
les
lods
inc
test
adc
shll
pop
sahf
flds
out
sti
cmp
pop
or
jb
daa
ds
pop
pop
loopne
sbb
adc
popf
pusha
enter
rcrb
or
bound
or
mov
lods
clc
test
clc
shr
adc
arpl
mov
adc
icebp
jbe
lock
mov
rorl
sahf
loopne
mov
inc
gs
adc
movsb
xchg
ficompl
cmpsl
addb
jl
sbb
ss
insl
add
test
call
cmp
pop
and
sub
in
lds
in
push
aas
pop
and
jp
or
dec
lea
pushf
mov
mov
mov
movsl
jge
scas
fwait
inc
insl
dec
push
movsb
push
jge
add
mov
xchg
cltd
rcll
je
mov
lods
repnz
fistl
cwtl
cmp
cmc
in
stos
push
sub
and
inc
enter
insl
push
push
ljmp
adc
push
pop
mov
fs
ds
inc
or
les
jp
outsl
addr16
mov
arpl
sub
lock
sahf
nop
fcomip
jb
cli
bnd
inc
cmp
daa
jp
mov
loope
cmp
je
push
dec
xor
negl
daa
aaa
xchg
cmc
outsb
hlt
inc
ljmp
push
fs
stc
push
stc
ljmp
es
cltd
mov
mov
enter
jmp
mov
or
xor
xchg
fs
call
and
je
int3
in
xchg
xor
bound
test
aad
mov
dec
sub
ja
mov
mov
cmpsl
cmc
add
and
testb
pop
push
fnstcw
inc
sub
jle
sub
push
xchg
add
and
push
jno
ret
bound
iret
xor
and
adc
mov
adc
mov
imul
lods
cmpsb
out
aad
push
adc
mov
jne
ljmp
int3
jne
pop
sub
jne
jnp
daa
cmp
xlat
pushf
mov
in
dec
leave
scas
cmp
shrl
loope
or
mov
or
sub
jb
mov
sbb
movsl
xlat
rcl
fwait
xchg
enter
nop
mov
inc
repnz
shrl
and
inc
inc
insb
ds
xor
shll
jmp
insl
mov
mov
push
sub
push
loopne
fwait
fs
repnz
push
into
push
mov
add
mov
out
in
popa
jp
fsubr
hlt
xchg
insl
add
and
shrb
mov
cmp
repnz
add
sub
jo
jp
jnp
ja
xlat
jmp
xor
push
mov
adcl
mov
dec
sub
xor
shlb
int3
cmp
int
lret
push
lock
mov
xchg
das
sub
test
adc
xchg
jns
out
jg
arpl
or
cmpsl
dec
cmpsb
in
or
ja
out
out
nop
xchg
jmp
sbb
dec
jmp
mov
lock
mov
lock
jmp
sti
xchg
out
icebp
cli
cmp
lods
mov
arpl
call
xor
mov
adc
dec
mov
mov
xor
in
stos
jmp
and
scas
orb
stos
xchg
hlt
and
fiadds
pop
lahf
cltd
and
lea
add
mov
aad
call
mov
js
pop
fistl
into
dec
jp
aam
xchg
jo
in
add
mov
adc
iret
testb
imul
pop
fsts
or
xor
cwtl
or
xchg
cmp
imul
push
and
jnp
sbb
ja
mov
jmp
aaa
shl
mov
or
xchg
dec
movsb
outsb
sub
mov
into
dec
mov
lds
sub
jle
cs
xchg
aad
inc
sub
pop
mov
negb
addr16
nop
cli
addb
xchg
add
dec
add
push
fcmovnu
jnp
or
mov
add
and
test
push
and
lcall
dec
pop
repz
test
add
out
scas
jns
je
cwtl
shlb
sub
cmp
push
inc
jnp
pushl
arpl
divl
cmp
jb
pop
xchg
mov
call
stos
dec
in
in
aad
mov
mov
imul
pop
mov
addr16
imul
jl
xchg
daa
adc
push
std
pop
mov
dec
add
pop
call
and
push
cmp
mov
push
pop
das
subb
cli
cmp
bound
aad
bound
nop
jb
ja
adc
aaa
jge
push
push
nop
jns
ret
in
in
or
icebp
sbb
pop
sbb
xchg
lret
les
adc
js
ss
adc
hlt
jae
push
dec
xor
int3
pop
inc
ljmp
xlat
hlt
lods
cmp
inc
and
jo
xchg
loop,pt
movsb
mov
out
aam
inc
mov
icebp
xlat
sub
in
inc
stos
jo
outsb
or
or
jno
adcb
inc
push
jp
stos
hlt
add
cmp
inc
or
mov
cmpsb
mov
xor
nop
dec
stc
pop
shl
in
or
std
add
cmp
lcall
mov
xchg
in
fcoml
adc
or
lret
xchg
jle
xchg
shl
clc
xchg
out
or
sbb
xchg
mov
lods
xor
das
push
push
ds
mov
mov
or
inc
call
subb
push
dec
ja
push
sub
outsl
push
insb
fstpl
addr16
lret
mov
popa
stc
mov
xchg
aam
loopne
xlat
arpl
es
addr16
out
mov
mov
pop
mov
xor
pushf
aad
ficoml
les
sub
inc
adc
pop
pop
xchg
ficomps
jge
lods
dec
pop
xorl
jecxz
ret
and
sti
add
dec
dec
sub
mov
jno
sbb
or
pop
mov
pop
lcall
pop
icebp
push
inc
or
lret
sub
insl
test
jns
lea
push
mov
shr
fwait
mov
add
aad
popf
xchg
setne
mov
pop
int
dec
aad
insb
ficoms
mov
jb
ret
jecxz
addr16
or
push
loopne
mov
add
push
xor
mov
dec
loopne
push
add
add
xchg
mov
push
rclb
and
sbb
divl
outsb
addb
mov
mov
je
mov
or
out
movsb
sbb
cmp
fs
mov
cs
sbb
scas
or
sbb
pop
xorb
xchg
test
mov
mov
je
in
xchg
xchg
in
das
fsubl
arpl
mov
negb
cmp
es
pop
cmp
inc
add
pushf
xchg
roll
xor
mov
sub
fstps
cmp
mov
jecxz
in
add
loopne
popa
pop
cmpsb
push
jecxz
packsswb
cwtl
or
add
and
sbb
out
jg
daa
cwtl
pop
decl
in
mov
mov
cwtl
jl
dec
stos
sub
nop
sub
stc
rcrb
mov
or
lea
pop
or
and
ja
int3
flds
mov
and
cwtl
adcl
push
lea
adc
cmp
dec
jae
mov
lret
aas
jg
scas
cld
sbb
mov
jg
sub
ja
push
pop
mov
xor
and
cmp
cmp
imul
cltd
inc
sub
stos
sub
loop
dec
ja
pop
stc
xchg
mov
ror
repnz
decb
xor
and
sbb
les
cs
jns
pop
mov
loop
outsb
cmp
adc
jne
pop
mov
mov
stc
jl
mov
dec
sub
pop
or
jae
pop
or
add
adc
cmp
mov
add
inc
add
push
xor
jg
das
mov
fnstcw
into
rcll
fcomi
xchg
xchg
or
addr16
mov
ljmp
fwait
lret
cmp
sub
nop
xchg
je
pop
roll
dec
mov
ljmp
test
xchg
dec
sbb
jg
pop
adc
aad
add
push
inc
inc
or
sub
mov
mov
dec
and
gs
fisttpll
xchg
push
sahf
sbb
mov
aaa
cmp
xor
movsl
mov
out
push
jo
inc
scas
lahf
jbe
jmp
inc
cs
add
aad
jnp
push
lcall
cmovle
push
mov
sub
mov
jp
sub
mov
xor
dec
fcmove
leave
xchg
jle
adc
sub
inc
pop
xor
aam
and
jge
inc
pop
popa
pop
fs
ficoml
shl
jnp
adc
mov
or
fwait
out
and
jno
adc
cmp
movsl
mov
add
inc
xor
imull
dec
jbe
test
out
jbe
mov
sbb
decl
fidivs
in
out
inc
int3
les
cmpsl
pop
mov
add
xorl
dec
cs
mov
decb
push
inc
repnz
movsl
cmpsl
cmpsb
xchg
ja
mov
mov
mov
mov
repnz
leave
ret
pusha
ret
out
repz
and
pop
adc
mov
add
adc
xchg
sub
pop
mov
fcomp
call
cltd
mov
cmp
popf
mov
mov
push
cli
and
sub
mov
dec
test
mov
loope
andb
jo
int3
movsl
push
pop
xchg
outsl
add
lds
xor
ds
test
push
int3
scas
clc
pushf
std
pop
and
addr16
xchg
xor
test
fistl
inc
xor
mov
push
loopne
leave
mov
ja
adc
test
fbstp
pop
jb
ret
stc
or
pop
dec
cmp
xchg
cs
or
lock
inc
cmp
in
lea
push
cmp
jle
int
imul
mov
movsl
hlt
cmp
lods
pop
jp
lea
ret
roll
pop
into
adc
jb
in
mov
je
inc
pop
or
pop
jno
cmp
ret
mov
cs
fimull
mov
iret
fmulp
xor
aas
out
and
mov
xchg
and
outsl
jge
and
mov
mov
inc
incb
js
push
in
loope
pop
lock
std
pop
push
and
xchg
lcall
and
mov
add
pop
das
addr16
mov
pop
adc
shll
inc
out
jno
fdivr
test
push
xchg
inc
xchg
mov
test
fbld
mov
add
js
mov
fsubrs
popf
pushf
jge
push
pushf
repnz
cli
cmp
inc
cmp
mov
adc
add
jmp
sahf
jecxz
push
push
mov
inc
mov
pmaxub
and
dec
dec
insl
fldcw
test
enter
into
mov
mov
push
stos
arpl
cmp
xor
mov
push
fnstcw
loopne
push
and
test
inc
jo
invd
mov
sti
xlat
and
sbb
xor
mov
mov
sbb
aam
loopne,pn
xchg
pop
cmpb
cmp
lds
loopne
xor
in
cmpsb
mov
repz
push
stc
pop
into
movsb
inc
xlat
test
cmp
mov
jnp
aaa
daa
jno
sti
pop
in
cmp
aam
popa
xchg
cs
lods
stos
sub
push
insb
sahf
stc
test
cmp
sub
lret
dec
xor
cltd
addr16
test
lock
mov
cld
nop
or
inc
aad
xchg
xor
push
fcoms
mov
push
mov
hlt
dec
mulb
or
das
ror
inc
push
jge
sub
or
inc
rcl
fucomp
notl
pop
shl
adcl
push
pop
sub
cli
mov
js
jbe
rcr
stos
inc
sub
jnp
lock
push
pushf
jb
or
leave
int
fildll
cltd
and
notb
add
mov
pop
ret
sbb
or
pop
add
test
push
frndint
xor
xchg
clc
fs
pop
ret
fnstcw
es
xchg
int3
mov
xor
jle
mov
insb
xor
pushf
sbb
popa
popa
push
push
cltd
frstor
cmpsl
cwtl
fisttps
sbb
jle
rorl
call
push
and
repnz
dec
test
sub
inc
in
ljmp
das
in
mull
push
scas
pushf
pop
jecxz
cmc
mov
inc
pop
into
rcrl
fmull
adcl
call
lods
leave
push
sub
mov
fstpt
cmpsl
cwtl
cmp
cmp
nop
clc
or
fsubr
and
cmpb
ljmp
adc
aam
fnstcw
adc
out
adc
cmp
ja
fstpt
pushf
fsubrl
fbstp
pop
sbb
or
jecxz
and
fcmovnu
out
ja
jge
test
sbb
or
jno
mov
sub
mov
fs
mov
out
xor
fsubs
or
stos
dec
pop
adc
out
in
test
insl
mov
fisttpll
xchg
dec
mov
imul
bound
imul
mov
leave
lods
psrad
mov
sub
mov
jmp
lahf
or
add
pop
cmpsb
mov
inc
out
lret
cmp
and
inc
cmpsl
loop
in
outsb
loope
test
jge
sbb
in
icebp
jns
sub
lock
cmp
mov
xchg
test
xchg
hlt
inc
fisttps
xchg
in
inc
or
adc
cmp
sub
cwtl
cmp
nop
pop
popl
outsb
cmp
pop
mov
sub
mov
or
nop
jne
negb
cmp
into
incl
push
or
sbb
sub
jg
mov
mov
add
push
repz
rcrl
xor
xchg
leave
cmpsb
pop
cmp
adc
lahf
mov
int3
rorl
inc
inc
fnstsw
decb
dec
nop
fisttps
bound
in
xor
insb
mov
and
dec
repz
sahf
adc
sbb
cmpsb
sbb
pop
jg
daa
icebp
sub
outsl
push
adc
test
rcl
adc
lock
into
cmp
add
lret
add
xchg
xor
mov
mov
icebp
sbb
lods
lds
adc
into
pop
sub
or
in
rcr
adc
xor
xor
test
scas
pop
les
mov
mov
shrl
mov
es
mov
lret
call
sahf
es
xor
sbbl
xchg
xor
lahf
repnz
in
xor
aas
jbe
ficoml
pop
pop
call
jno
push
lods
and
stc
repnz
push
fisttps
xor
int3
xchg
xor
or
pop
xchg
jmp
idivb
xchg
add
push
lret
fdivrl
jmp
lea
sbb
dec
push
push
xchg
xchg
xchg
and
push
xor
outsl
sub
nop
mov
rorb
jnp
fsts
adc
jnp
ret
jg
lock
adcb
sahf
push
sub
jb
dec
and
in
out
pop
pop
cmpb
sbb
lods
movsl
inc
inc
scas
mov
test
mov
cmp
xor
mov
add
ss
add
or
dec
rol
bound
mov
sahf
push
sbb
jo
mov
xchg
loop
push
cmc
xchg
pop
js
mov
lock
pop
jno
jno
movsb
push
das
ja
xchg
repz
adcb
or
mov
sbb
xchg
aad
adc
jae
push
mov
into
xor
icebp
sub
pop
cmc
push
adc
ret
lods
push
cli
pop
mov
nop
xchg
cmp
fs
sbb
and
insl
fcmovne
xchg
shlb
lock
les
xchg
add
fidivs
cltd
push
pop
push
sub
mov
imul
xor
push
xchg
sbb
sti
sbb
in
scas
add
pop
testl
mov
out
jb
inc
jae
imul
adc
fnstsw
lret
mov
imul
jno
call
or
adc
or
push
sub
add
and
add
stos
out
pop
hlt
push
sbb
stc
dec
xchg
and
pop
scas
xor
fstps
sub
rorl
pop
popf
inc
dec
scas
pop
lcall
stos
sub
xchg
cmp
ret
mov
dec
mov
int3
stos
ja
push
pop
imul
or
scas
stos
jl,pn
jl
xchg
adc
xchg
clc
add
push
pop
cmp
cmp
neg
dec
lea
mov
jns
andb
mov
inc
into
jge
pop
dec
inc
loope
fwait
push
stc
cmpsb
les
cs
cs
in
lea
pop
or
fiaddl
out
adc
aad
test
xchg
or
dec
stos
pop
fwait
sbb
xchg
mov
xchg
jmp
or
jae
sub
sbb
sbb
imul
lcall
stc
or
inc
dec
nop
out
imul
cmpsb
clc
fs
pop
mov
sub
loope
neg
pop
cmc
cmp
mov
cmpsl
roll
jne
std
pop
fcoms
cmp
or
repz
or
imul
ret
rol
jecxz
xchg
lock
shrl
and
punpcklwd
mov
sbb
adc
subl
add
lret
sbbl
cmp
jnp
repz
test
cmp
push
stos
jo
repz
mov
mov
sarb
inc
jbe
jecxz
cmp
push
mov
les
dec
push
out
add
sbbb
jns
lods
orl
inc
outsb
mov
into
xor
xchg
test
fsubs
adc
push
dec
fadd
xchg
add
sbb
cwtl
cmc
add
mov
adc
xchg
pop
test
icebp
lock
js
jl
mov
lcall
adc
sub
cmpsl
pop
jecxz
fidivs
rcrb
mov
ret
jp
mov
std
pop
pop
mov
sbb
or
mov
ds
jge
enter
add
cltd
push
mov
push
popa
jg
mov
or
lock
dec
cwtl
testb
das
mov
xor
jle
and
outsl
jmp
or
adc
fs
mov
sub
xor
adc
adc
call
movsb
sub
jg
inc
lcall
mov
push
and
fbstp
enter
sub
daa
shll
pop
lret
mov
lret
or
dec
dec
jecxz
incb
mov
ret
mov
scas
dec
dec
fucom
mov
lock
jecxz
inc
test
lods
imulb
rolb
adcb
mov
inc
sti
sbb
push
in
mov
inc
push
mov
push
pop
dec
and
out
aas
sbb
adcb
adc
test
rorl
scas
arpl
loope
xor
jge,pt
pop
out
aaa
xchg
jnp
sbb
xchg
std
jp
inc
addr16
mov
or
pop
jnp
stc
sbb
shrl
mov
aad
shl
push
jno
mov
stos
push
out
dec
fdiv
test
ljmp
mov
mov
cltd
addb
or
aaa
mov
jecxz
sub
adc
decl
adc
jmp
adc
push
push
outsl
int
mov
leave
mov
rcrl
dec
or
sahf
jg
mov
fwait
movsl
mov
lsl
add
jmp
inc
pop
imul
adc
sbb
out
cmp
cmp
sbb
fsubs
test
cld
aaa
dec
mov
push
mov
cmp
arpl
adc
jb
dec
testb
cmc
mov
push
jg
clc
ljmp
cmpsl
test
jle
fldcw
ljmp
xchg
push
mov
jbe
fwait
mov
dec
lret
mov
mov
fnsave
jmp
dec
not
xor
les
xorl
add
not
cmp
add
sbb
inc
mov
imul
leave
or
pop
mov
inc
dec
lret
xchg
cltd
imull
mov
mov
repnz
bswap
in
test
sti
imul
inc
fmuls
mov
push
or
cmpsb
cmp
insl
sub
dec
aad
stos
leave
or
fnstenv
lcall
decb
subb
daa
movsl
int3
sbb
inc
and
pop
add
inc
or
out
test
push
push
adc
xchg
sub
or
lock
xchg
subb
dec
mov
mov
mov
and
cli
sbb
cmp
cmp
cmp
stc
adc
mov
or
popa
adc
inc
das
sbb
adc
fcoms
sahf
xor
fsubl
xor
sub
push
ret
mov
jno
icebp
nop
bound
daa
scas
data16
jns
leave
pop
test
dec
insb
pusha
mov
mov
hlt
adc
xchg
fucomp
jmp
call
out
adc
mov
enter
adc
inc
and
idiv
add
dec
xor
pusha
mov
inc
jmp
data16
push
stos
sbb
bound
popa
or
fs
lds
aad
das
or
dec
scas
ds
mov
loop
rorl
outsb
inc
add
xchg
mov
out
adc
ja
rcrl
cs
mov
jbe
lcall
mov
dec
jp
mov
aad
mov
in
mov
adc
push
sub
ss
das
pop
xchg
scas
hlt
jbe
fistl
pop
cs
cs
dec
or
filds
xor
cmc
lret
or
add
cmp
stos
push
ficomps
lds
xchg
inc
fs
std
fcom
mov
or
add
stc
inc
enter
pop
push
inc
cmc
inc
mov
call
pop
sbb
imul
jge
and
add
jae
add
rcrl
mov
sbb
jae
ds
insb
nop
cs
mov
lock
mov
inc
mov
aad
add
push
ja
cltd
xlat
jg
stc
andb
sti
inc
mov
jle
inc
rcll
push
jae
xor
sti
lahf
testl
clc
std
shll
jno
loop
lds
xchg
dec
push
mov
push
call
xor
mov
push
push
fisubrl
in
mov
call
stc
jge
loope
jno
mov
nop
dec
push
add
xchg
adc
mov
ja
pop
.byte
jo
sbb
mov
add
enter
fdivr
imul
hlt
int
mov
orb
fistpll
xchg
sbb
push
icebp
lcall
lahf
and
insl
insb
aam
pop
ss
push
ja
in
push
dec
pop
repz
idivb
cmp
ljmp
push
inc
inc
xchg
mov
dec
mov
loop
mov
mov
movsb
mov
mov
call
inc
add
pop
movsl
in
aad
gs
shrb
dec
imul
inc
mov
add
int3
jecxz
xchg
mov
fmull
inc
cs
add
ror
mov
into
sub
test
into
cmpl
sbb
repz
add
shll
sub
mov
enter
je
cmp
push
pop
aad
jb
and
push
gs
mov
xor
call
fstpt
xchg
imul
xchg
dec
cmp
out
pop
push
and
inc
cs
lods
mov
sbb
mov
jp
shlb
scas
lret
pop
xchg
lret
pop
jb
in
xchg
ljmp
cmp
mov
xor
xor
les
aam
pop
cmp
jne
test
mov
lock
mov
outsl
xchg
leave
xchg
xor
inc
shrl
or
mov
inc
xor
test
push
js
and
in
hlt
std
mov
push
bound
mov
jge
incl
adcb
xor
push
push
and
sub
mov
hlt
ds
sbb
inc
pop
mov
push
xchg
data16
sub
and
test
movsl
sti
dec
push
push
fcoml
push
mov
add
lds
mov
fisubrl
push
jg
cmpsb
shl
fwait
sbb
xor
xchg
test
icebp
enter
cmp
inc
rorl
arpl
adc
ja
or
xchg
xchg
sub
cs
jnp
adc
sti
mov
mov
xchg
add
mov
push
jae
imul
les
xchg
addb
mov
pusha
cmp
push
push
sahf
jne
lahf
int3
in
pop
gs
loope
push
sbb
mov
push
jns
add
add
or
or
test
add
outsb
movsl
test
xor
xlat
divb
sti
aad
dec
or
mov
mov
cmp
outsb
loope
jo
in
fistpl
sbb
jnp
and
cmpsb
rorb
testb
lods
lret
xlat
pusha
sub
mov
nop
ret
mov
cwtl
xlat
mov
xchg
mov
std
leave
lods
out
shlb
xor
add
test
pop
aam
jmp
mov
xchg
sub
xlat
popf
cld
lcall
xor
movsl
or
es
je
cmp
inc
push
cmp
jns
pop
inc
cwtl
in
push
xchg
loop
mov
xchg
mov
cmp
sub
stc
orl
dec
mov
or
je
aam
nop
es
pop
dec
stos
adc
jne
push
pusha
icebp
jnp
inc
stos
pop
pop
pop
dec
test
std
daa
mov
inc
loop
jmp
jo
mov
sbb
sub
inc
mov
mov
aaa
push
loopne,pt
xchg
loope
je
mov
dec
and
mov
stc
sbb
xor
jnp
lods
add
mov
jo
das
ds
popa
pop
out
mov
sar
fisttpl
cmp
hlt
sbb
sub
popa
repnz
aas
hlt
cmc
clc
adcb
cmpb
ja
repnz
test
mov
xor
shl
iret
test
inc
lret
cltd
cld
rcll
add
mov
xchg
cmp
push
xchg
nop
es
adc
mov
push
mov
add
es
jns
hlt
xor
mov
xchg
pop
push
jnp
jecxz
sub
faddl
xor
dec
mov
cmp
dec
inc
push
lcall
dec
adc
mov
das
inc
cmpsb
mov
add
imul
xor
out
gs
fdivs
lock
addr16
test
push
push
sbb
mov
jmp
outsb
xchg
mov
mov
lds
or
dec
xor
jecxz
in
loopne
mov
cli
imul
je
mov
adc
push
inc
lret
sub
push
mov
dec
xor
inc
xadd
clc
xchg
adc
nop
inc
cmp
aam
cmpsb
lods
repnz
in
lods
push
scas
rcll
sbb
roll
push
inc
cmc
inc
mov
xor
mov
fcomi
pop
dec
mov
insb
cli
dec
imul
aam
rclb
std
pop
jge
fistps
lods
cmp
das
sahf
lret
jecxz
outsb
and
mov
dec
or
sub
mov
jle
ss
cwtl
aam
push
mov
ret
mov
mov
mov
pop
push
pop
movsl
xlat
mov
mov
mov
sbb
cmpsl
ret
mov
push
movsl
loopne
pop
fidivl
dec
pop
fsubrl
adc
mov
mov
cmp
xor
jecxz
popf
addr16
aad
mov
jp
jbe,pt
call
mov
call
push
imul
lea
or
nop
push
xchg
clc
pop
mov
add
pop
sub
dec
jae
call
sbb
push
xor
and
xor
sbb
out
sti
test
pop
shlb
ret
cmp
sub
or
in
cmp
jno
es
pop
jo
mov
into
out
les
and
stos
adc
mov
fsts
inc
aad
jge
jbe
mov
daa
push
in
adc
test
mov
lds
js
or
pushf
jmp
add
and
sbb
mov
insb
mov
shll
push
sub
out
and
int
push
jo
mov
dec
add
push
mov
jbe
stos
sbb
jnp
add
outsl
lret
sub
cmp
mov
ja
lock
push
stc
and
jae
mov
test
testl
lods
ret
cli
iret
clc
push
or
in
iret
mov
fisttpl
jmp
pop
dec
lahf
mov
aad
jno
jmp
inc
incb
or
imul
inc
inc
je
fcoms
and
or
insl
in
rolb
cmp
mov
mov
mov
movups
insb
idivl
lods
cmp
dec
xchg
mov
in
arpl
lret
or
icebp
and
test
mov
aad
add
xchg
sarb
xor
cmc
sbb
enter
ljmp
adc
flds
fs
adc
sbb
ja
xor
test
dec
in
sbb
cmpb
mov
hlt
push
mov
mov
das
lea
test
or
das
ds
iret
sbb
mov
and
jle
ret
test
push
inc
sbb
or
scas
test
mov
push
or
imul
push
cmp
js
push
sub
and
xor
lods
in
mov
sub
ja
popa
cmp
lret
add
fisubrl
lds
fisubrl
sub
sub
movsb
add
lret
jns
loopne
add
adc
add
jns
pop
sub
shlb
out
imul
add
clc
cmp
imul
jae
mov
jg
ja
xor
mov
mull
pop
mov
in
xor
mov
js
testl
pop
jno
outsb
pop
add
add
pushf
nop
mov
xchg
lock
fiaddl
test
mov
add
mov
mulb
cmc
cmp
sub
jl
insb
daa
out
loopne
inc
sbb
fwait
push
cmp
icebp
fldcw
cmpl
fdivp
nop
cwtl
sub
cmp
inc
mov
iret
jno
xlat
add
shll
or
jg
cld
dec
pop
cli
les
add
dec
out
ret
dec
sahf
mov
and
loopne
fst
sub
out
sbb
adc
test
add
ret
int
mov
rclb
and
je
nop
outsb
mov
lock
ret
lock
nop
and
add
ret
movsb
pop
dec
leave
repz
addr16
call
jl
sub
mov
pop
in
mov
xchg
xchg
lds
rol
xchg
xorb
xchg
mov
jnp
fistl
shll
mov
aas
dec
xchg
inc
mov
loope
andl
push
lea
mov
out
test
cmp
jle
xlat
push
push
popf
ss
js
xor
sbb
cli
adc
rcrb
insb
mov
push
push
jmp
stos
call
push
movsl
xor
xchg
sti
inc
xor
cltd
xchg
mov
sub
push
sub
xor
std
repnz
mov
xchg
fstpt
dec
add
popf
add
arpl
jo
lcall
push
arpl
popa
pushf
lods
add
nop
lcall
cld
shll
aaa
push
andl
jg
fs
inc
cmp
cmpsb
ret
int
and
add
es
pop
sub
jbe
call
sbb
stc
aad
jae
shlb
and
in
insl
inc
push
mov
fs
xchg
mov
cmp
aaa
enter
fldenv
shlb
inc
cmp
dec
scas
pusha
cmpsl
test
gs
xor
cmp
sbb
in
push
das
push
pop
cmp
jno
sbb
cmp
call
sbb
pushf
xchg
xchg
mov
popa
xchg
cli
push
in
lret
int3
rcr
shl
add
imul
sti
fidivrl
ret
push
adc
stos
mov
andb
std
mov
vmovntps
lds
dec
insl
stc
sub
inc
das
adc
std
scas
jo
inc
or
enter
adc
mov
imull
adc
leave
in
push
xchg
stos
ljmp
out
fwait
push
pop
or
pop
shlb
sbb
inc
add
cmp
fisttpll
mov
aas
mov
loop
mov
call
xor
repz
cmp
mov
out
in
xor
xchg
stc
sub
or
fs
inc
insl
test
adc
sbb
sub
ss
pop
call
push
adc
mov
mov
fdivs
or
inc
fldl
iret
lret
xor
sbb
pop
inc
mov
divps
ja
fdivrl
push
cltd
adc
xor
out
gs
jmp
pop
cld
inc
imul
mov
jmp
loopne
ret
stc
iret
stos
scas
push
or
adc
jb
cmp
shr
sub
inc
mov
adc
addr16
inc
lcallw
ret
frstor
ret
dec
aas
and
or
dec
ret
rorl
bound
fneni(8087
insb
and
ja
in
jne
cmp
fs
mov
jno
pop
sub
xchg
or
out
cld
and
cld
in
cli
movsb
push
inc
insb
dec
dec
push
sahf
outsb
movsb
mov
rorb
enter
ret
lods
pop
push
pop
mov
outsb
rolb
icebp
dec
lock
inc
stc
pop
push
sbb
xchg
inc
fwait
shrb
arpl
loop
cmp
push
or
cli
push
insb
enter
jae
fiadds
inc
pop
or
lret
in
mov
push
mov
movsb
scas
dec
scas
popf
jae
mov
lcall
out
pushf
test
repnz
xor
adc
out
lahf
lods
mov
inc
lret
push
xor
das
mov
mov
mov
aas
bound
xchg
xchg
andb
cmpsb
xchg
out
pop
lds
clc
jmp
out
inc
into
outsb
sti
and
out
pop
mov
ret
jl
mov
or
dec
mov
fmuls
pop
popa
dec
jge
push
in
pop
shll
int3
xchg
mov
es
insb
insb
dec
adc
stc
leave
fmul
mov
sbb
daa
push
cwtl
mov
mov
mov
into
mov
fsubs
add
push
cltd
lahf
dec
data16
lds
jns
mov
pop
das
popf
pop
fs
pop
lods
xor
lea
cs
xchg
aad
fs
leave
fs
pop
push
jge
pop
clc
mov
pop
cmp
mov
push
cmp
in
mov
pop
lret
dec
icebp
adc
test
outsb
mov
cli
fistpll
add
ret
rol
sti
sub
call
fs
dec
lcall
rolb
nop
fstl
cmp
pop
adc
inc
adc
push
jne
xchg
sarb
mov
in
xor
cld
jo
arpl
addr16
inc
fildl
cld
out
mov
js
mov
xchg
cmpsb
mov
test
pop
push
jle
push
cli
lahf
or
jge
test
jp
iret
addl
dec
inc
fsubr
push
movsl
jecxz
sti
push
fadds
dec
add
inc
xor
outsl
push
ja
ret
mov
mov
lret
xchg
mov
adc
in
mulb
inc
test
xchg
in
adc
mov
icebp
sub
jecxz
stos
arpl
movsl
sbb
or
dec
psrld
loop
je
or
dec
outsl
and
dec
loopnew
or
sbb
and
pop
inc
xlat
mov
mov
adc
test
jg
negl
add
sbbl
into
sbb
adc
and
pop
stos
sti
mov
pop
test
pop
arpl
jmp
in
mov
clc
push
js
cmpsl
nop
incl
cld
mov
ficoms
iret
sahf
hlt
jns
repnz
sbb
jns
incl
std
arpl
sub
stos
sub
sbb
movsl
std
cmpsb
push
pusha
test
shlb
adc
fidivl
sbb
fsubrs
push
cld
push
and
popf
inc
fisubs
lods
cltd
lods
dec
push
nop
out
iret
mov
xchg
sub
in
mov
pop
xor
mov
bsf
lret
xlat
hlt
jns
pop
icebp
push
adc
cli
lods
jns
addb
fistl
inc
ficomps
mov
ds
jae
shll
int3
lods
sbb
add
in
lods
into
ret
or
cltd
into
add
mov
xchg
outsb
jo
push
pop
cmp
std
rcrl
rol
shrl
mov
jns
jns
mov
out
cmp
sti
int
js
adc
xor
test
xchg
mov
jecxz
clc
pop
fidivrs
bound
imul
inc
and
pop
cmp
add
cmp
push
stos
sahf
cltd
cmpsl
mov
scas
sub
and
lcall
add
ficoms
insb
rolb
pop
push
fisubrl
mov
sub
mov
mov
sub
mov
mov
out
jmp
jb
mov
ljmp
movsl
scas
pop
sbb
pop
pop
fiaddl
jmp
dec
fadd
fisttpl
mov
call
sbb
add
ljmp
jge
test
adc
into
add
mov
call
adc
sbb
xor
pop
mov
iret
icebp
and
xchg
sbb
mov
fdivrs
scas
ficoml
xchg
cs
dec
inc
sbb
inc
xor
test
push
cmp
mov
fcomip
mov
mov
roll
repnz
or
cld
pop
mov
lcall
push
xor
and
mov
stos
mov
cmc
std
push
push
es
out
sub
pop
pop
mov
push
scas
sub
pop
test
adc
and
fdivrl
mov
pop
dec
mov
ja
and
lea
pop
rcl
enter
add
or
scas
xor
jge
data16
scas
clc
adc
or
jge
xor
fsubs
in
mul
cmc
mov
jb
xor
mov
bound
je
push
movsl
ss
aaa
jl
mov
add
jle
loop
aam
push
mov
and
in
jno
mov
inc
clc
arpl
mov
jns
mov
cmpsl
cmp
sbb
movsb
sbb
inc
and
stc
dec
mov
insb
sahf
je
mov
hlt
adc
in
dec
ficomps
mov
sub
fstps
sub
mov
and
movb
cmp
xor
pop
test
cld
xchg
and
mov
movsb
add
jmp
in
add
jne
mov
sbb
cmp
sahf
cwtl
mov
xor
ljmp
or
and
pushf
jne
ljmp
daa
xor
inc
xchg
cmp
push
in
loop
xchg
mov
sub
jno
pop
sbb
call
or
clc
fwait
cmp
inc
notb
mov
es
inc
adc
icebp
jg
sub
cmp
mov
mov
cld
icebp
cmp
mov
and
ljmp
dec
jle
adc
adc
dec
fimuls
shll
sbb
lds
sbb
out
nop
mov
jle
imul
sbb
mov
xchg
mov
nop
push
pop
add
cmpsb
cmp
divb
gs
adc
es
movsl
xchg
bound
and
arpl
inc
dec
mov
ds
mov
mov
mov
jne
sahf
or
inc
arpl
jecxz
push
or
hlt
inc
mov
dec
out
nop
mov
lret
cwtl
subl
cmc
ret
inc
mov
nop
sbb
mov
jp
jl
dec
in
mov
shrb
sub
test
stos
add
fcmovu
add
imul
movsb
or
dec
dec
or
icebp
lahf
in
lock
inc
push
gs
inc
out
test
testb
mov
push
movsb
movsb
xchg
fwait
into
daa
dec
jb
fists
sbb
or
popa
dec
pop
bound
stc
addl
dec
ds
lea
mov
and
cltd
push
adc
notb
and
lret
shlb
mov
das
push
xchg
pushf
or
mov
xor
or
aaa
push
sub
jp
or
arpl
push
push
push
fwait
movsb
out
rcl
jno
sti
je
and
pop
sarl
xchg
mov
aad
filds
inc
sub
add
push
jo
lods
xor
cwtl
lods
xchg
rorb
xchg
lods
push
loop
into
mov
mov
js
loop
inc
movsl
popf
pop
or
test
cmp
jg
cmp
imul
mov
pop
sti
sub
cmp
inc
cld
pop
in
stos
movsb
out
sbb
stos
fisubs
jo
insb
push
xchg
je
dec
push
shll
mov
jnp
jp
add
sbb
adc
cwtl
xor
or
fs
adc
sbb
and
outsl
in
fwait
int
lock
add
adc
loop
repz
pop
sti
addr16
adc
adc
push
sub
mov
cmpsb
sbb
push
orb
adc
mov
je
mov
sti
fstpl
test
or
js
pop
cmp
add
cmpl
mov
and
push
ret
cmp
xor
test
xor
mov
mov
icebp
ljmp
adc
push
cmp
je
mov
add
mov
cmc
cltd
add
jmp
js
pop
push
insl
ret
sar
int
push
mov
push
or
sarb
mov
mov
xor
popf
fimull
out
mov
pop
repz
and
pavgw
xchg
bound
es
inc
sub
call
mov
jle
data16
jmp
insl
lahf
mov
scas
xor
jg
cmc
ljmp
out
test
clc
dec
lret
test
add
je
sbb
fs
leave
adc
mov
stc
xor
lods
mov
out
mov
sub
mov
push
cmp
jbe
mov
fnstsw
ds
mov
hlt
ss
sbb
push
push
push
pushf
outsl
adc
aad
pop
aam
sbb
sub
sbb
fstps
sub
sbb
mov
mov
adc
ljmp
xchg
sarb
jb
fnsave
clc
pop
mov
jle
mov
sub
inc
cwtl
out
shr
popf
push
dec
sbb
imul
repz
sub
xchg
sahf
addl
das
jnp
xchg
je
bound
sbb
dec
push
stc
fisubrl
sbb
ret
sub
jns
cwtl
jg
xchg
icebp
sub
fisttpll
adcl
bound
mov
mov
inc
jecxz
arpl
popa
nop
stos
shl
cmp
sub
lods
iret
add
loop
cs
mov
fisubrs
dec
ss
push
enter
add
inc
outsb
jno
aam
push
fildll
fwait
or
adc
mov
shl
mov
jecxz
push
dec
lods
test
cld
cmc
xor
fwait
or
inc
jmp
sarl
add
mov
add
jmp
inc
jecxz
mov
cmp
cmp
sbb
data16
out
cmpsl
bound
mov
jo
add
rcrl
cmp
push
imul
sbb
iret
push
fsubrp
cmp
mov
movsb
orb
jecxz
xlat
cmpsb
push
adc
pop
cmp
pop
sarl
insw
cwtl
mov
bnd
mov
out
mov
dec
cmp
call
aam
pop
inc
mov
mov
rcrb
cwtl
lds
push
cmp
push
push
std
sbb
xchg
dec
inc
clc
pop
outsl
leave
push
psllw
ficoml
orl
stc
push
ds
inc
fwait
inc
and
or
mov
mov
mov
aas
jmp
mov
push
js
inc
popa
cmpl
push
rolb
sub
fstl
fmuls
xor
aas
and
push
dec
cmp
fistpl
cmp
jbe
jge
fs
jge
push
mov
movsb
mov
out
or
mov
popa
int
or
stos
cwtl
addr16
pop
fbstp
jg
popa
cmpsb
xchg
gs
mov
js
sub
mov
subl
xchg
sbb
xchg
inc
fdivl
mov
fadds
fs
add
dec
int3
mov
adc
jp
rcll
test
sub
pop
sbbl
andl
pop
inc
cmc
cmp
sub
push
pop
fdiv
repz
jo
sub
std
or
cmp
mov
in
pusha
push
in
push
xor
xchg
mov
fldenv
sub
adc
push
push
vsubss
xor
cmpsb
dec
xchg
imul
and
jp
out
cmpsl
and
cmpsb
jl
mov
mov
pusha
mov
shrb
mov
orl
mov
out
aam
cmpl
ljmp
jge
inc
insb
stos
xor
adc
mov
add
mov
jne
push
or
fcmove
xchg
push
sbb
shlb
loopne
mov
fldcw
sub
pusha
aam
mov
hlt
cmc
mov
pop
cmp
and
orl
loop
lods
or
jb
pusha
jne
xor
insb
pusha
dec
out
es
clc
in
movsl
dec
insl
out
incl
ja
push
hlt
mov
addr16
xchg
popa
xchg
cmp
adc
mov
push
mov
shlb
adc
lret
xor
inc
mov
and
bound
lds
andb
cltd
mov
mov
push
aas
outsl
fldz
movsb
xchg
jo
push
sub
sbb
mov
add
xor
hlt
roll
cmp
aas
jmp
shlw
std
dec
ja
jae,pn
jb
and
push
fsub
inc
and
mov
popf
adc
jae
pop
in
cmpsb
mov
xor
jmp
mov
or
lret
mov
jle
cs
dec
inc
cmp
dec
loopne
ret
test
aam
mov
xor
int
cmp
outsl
scas
addr16
add
fwait
adc
pop
shrb
sti
icebp
or
cs
sub
mov
cli
flds
leave
push
dec
pushf
jbe
inc
nop
rcl
int3
dec
dec
jle
aaa
cmpsb
fidivs
xorb
push
cld
dec
pop
pop
lret
loope
lret
imul
add
shlb
aaa
xchg
mov
push
cmp
ret
mov
jne
cmp
jmp
pop
push
cvtps2pi
and
sub
cmp
or
mov
xor
mov
ret
cmp
or
lret
mov
hlt
ret
adc
push
dec
faddl
pop
fs
push
jae
inc
out
data16
fsubrl
imull
fsubl
out
mov
into
and
loopne
push
and
lea
aas
dec
sbb
sub
xchg
stc
push
std
pop
lret
aaa
idiv
subb
push
or
cmp
enter
pop
out
dec
push
cs
scas
push
jecxz
cmp
aad
xlat
clc
push
pusha
xor
lret
pushf
jg
fimuls
push
mov
nop
sarb
test
sub
int
cmc
xchg
inc
push
dec
mov
fldcw
sarb
loop
dec
xchg
fstps
push
fiadds
xchg
inc
daa
decb
hlt
sub
sbbl
adc
ficomps
shl
xchg
out
dec
outsl
repnz
inc
xor
jmp
dec
imul
push
sub
jbe
mov
mov
jb
jg
rcr
lds
sahf
mov
rolb
push
imul
idivb
bound
add
cs
sbb
stc
inc
into
sbb
fisttpl
in
adc
sti
insl
in
inc
sbb
dec
sti
gs
mov
cmp
scas
jmp
push
cmpsl
rcll
roll
ficoml
pop
push
scas
lods
ror
mov
push
pushf
leave
pop
jmp
jmp
shrl
fcomps
inc
push
jae
jl
les
push
cmpl
cmp
stc
adcl
adc
bound
gs
int3
sbb
outsb
loope
pop
adc
into
push
add
adc
pop
fimuls
or
sahf
dec
push
pop
mov
cld
xchg
jne
xor
cmc
pop
jb
mov
pop
sub
push
int3
dec
pop
xchg
pop
movsb
and
xor
add
add
add
add
add
add
add
inc
add
sub
add
xor
add
inc
add
add
ja
gs
outsl
gs
cs
insb
add
jb
imul
and
mov
cltd
adc
xchg
js
nop
shlb
dec
ss
mov
cmpsb
popf
mov
inc
into
scas
repnz
push
orb
fnsave
sbb
lret
sarl
addb
mov
adc
mov
dec
mov
popa
leave
adc
rcl
ja
jne
sbb
in
movsl
inc
les
xor
mov
aam
loop
xchg
mov
in
push
imul
mov
addb
xchg
imul
inc
push
ds
iret
jno
xchg
lret
shlb
mov
mov
cmpb
and
loop
fiadds
into
mov
sub
adc
or
test
addr16
mov
dec
fnsave
outsl
mov
pop
lods
ss
shl
and
ret
xchg
mov
je
xchg
hlt
std
pop
dec
and
dec
in
mov
xchg
push
insl
lret
jae
repz
ds
sbb
mov
mov
push
ljmp
imull
dec
adcl
xchg
sub
push
ss
mov
lahf
iret
jnp
inc
pop
out
mov
sub
clc
sub
int
pushf
xchg
fincstp
mov
jb
movsb
dec
in
test
sub
mov
fnstsw
stos
sbb
adc
fcoms
and
add
xchg
jae
dec
push
xor
mov
jp
mov
movsb
shl
push
aad
stos
jge
jmp
lret
icebp
jl
pop
movsl
pop
adc
add
daa
xor
bound
adc
testl
out
lods
mul
mov
jne
xor
xor
ret
div
xchg
adcl
into
insl
mov
cltd
pushf
mov
in
inc
dec
daa
mov
pop
adc
cmp
add
fcompl
mov
cmc
xchg
pop
xchg
jnp
jmp
mov
xor
pop
push
mov
test
inc
dec
repnz
les
ljmp
filds
push
shlb
jne
mov
into
lcall
fildll
aam
lahf
loop
cwtl
push
mov
clc
inc
dec
repz
lret
testl
fwait
rol
xor
div
mov
adc
mov
xor
or
jo
jmp
push
aam
jmp
ss
pop
jmp
jo,pn
xor
aam
lods
movsl
int3
inc
addb
push
pop
push
out
in
mov
and
pop
sarb
stc
orl
aad
notb
jne
mov
cmpb
popa
lret
icebp
test
shlb
mov
arpl
xor
xor
add
push
aas
es
dec
int3
fisubrs
xchg
and
mov
mov
das
mov
out
repz
cmp
add
jmp
movsb
cmp
jle
pop
insb
insb
pop
jnp
dec
sbb
xchg
test
and
loope
insb
out
icebp
xchg
add
idiv
icebp
daa
cmp
sarb
jmp
bound
jp
andl
pop
dec
sub
jae
and
pop
mov
sub
push
jl
sbb
cs
test
fldenv
mov
les
push
xorl
aaa
mov
imul
ss
push
out
in
fisubrs
mov
iret
xor
xlat
inc
lret
rolb
inc
filds
mov
incl
xchg
dec
iret
je
inc
cmp
push
hlt
dec
push
inc
add
push
cmp
jecxz
add
sbb
cmpb
or
jbe
and
push
pop
sbb
jnp
add
jns
cmp
int
out
push
pop
inc
fdivrs
sub
ss
aaa
push
xchg
lcall
mov
jmp
out
shll
sbb
ljmp
mov
cmp
cs
out
adc
pop
jo
nopl
ljmp
sub
sahf
outsb
and
inc
push
lcall
shlb
aaa
rorb
push
movsl
lret
push
inc
movsb
lods
and
fsubl
int
jno
xor
clc
dec
aaa
je
push
testl
shlb
inc
add
je
out
cmp
in
in
or
fisubs
das
jge
or
fs
xor
fs
xchg
mov
adc
mov
into
out
sbb
test
sbb
pop
nop
mov
fs
ret
jl
ja
push
fsubrl
hlt
or
mov
jmp
imul
push
jns
adc
bnd
pop
arpl
cmc
mov
mov
je
xor
lods
cwtl
mov
sbb
cmp
mov
cmp
jno
jmp
or
cld
xchg
pop
jecxz
mov
scas
sbb
adc
clc
mov
sub
push
push
inc
push
and
pop
in
or
or
and
jne
push
sbb
push
push
int
adc
fldenv
cmp
clc
ss
mov
test
lds
mov
mov
pushf
xor
call
mov
cmp
inc
inc
repnz
repz
scas
test
xor
sbbb
into
cs
mov
mov
cmc
cmp
inc
cmpsb
jne
pop
jecxz
adc
sbb
fimuls
or
movsb
jle
mov
loop
sub
xorb
inc
out
mov
and
rcrl
mov
fucomi
inc
lock
mov
push
ret
mov
test
mov
imul
pop
add
stc
mov
lea
aaa
in
sti
add
stc
xchg
add
bnd
into
xchg
mov
mov
jae
movsl
mov
rorl
insl
jle
jno
je
push
out
stc
lods
outsb
negb
or
sub
pushf
push
sbb
in
push
lds
mov
lret
aas
lcall
in
lcall
nop
mov
mov
mov
xchg
mov
loope
dec
sub
push
in
pop
in
out
pop
stos
inc
cmp
adc
pop
sbb
sar
lret
addr16
addr16
and
xchg
xchg
out
and
pop
lcall
mov
test
popf
ljmp
imul
jmp
sbbb
roll
shlb
or
popf
jb
mov
stos
push
mov
test
pop
clc
cmc
ret
rorl
sbb
inc
mov
out
inc
jo
lods
jbe
mov
out
jle
jge
mov
ja
inc
pop
mov
movsb
mov
mov
mov
push
les
arpl
xor
call
lods
lock
inc
gs
sub
pop
ror
loop
dec
repnz
sbb
out
or
add
insl
pop
test
add
mov
xchg
xor
es
lds
inc
adc
and
push
out
pusha
adc
sahf
aaa
xchg
pop
in
sub
sahf
jae
pop
test
sub
popf
jl
push
jmp
popa
mov
inc
aas
and
in
cltd
xor
add
sbb
jge
sbb
xorl
daa
sub
or
adc
ds
xchg
imul
cmp
or
rclb
inc
cmp
loop
cmpsb
cmp
and
sbb
pop
sbb
imul
mov
into
adc
daa
data16
out
jno
inc
jge
xlat
mov
aad
mov
sbb
mov
cmp
test
jne
dec
rclb
out
jbe
mov
fcomps
xor
jle
repz
mov
ret
ljmp
dec
ds
repnz
lods
adc
iret
push
inc
cmpsl
mov
sub
fwait
lods
icebp
pop
scas
sub
je
mov
sub
xchg
xchg
fisttps
call
sub
cmp
das
repnz
xchg
neg
push
cmp
push
jns
mov
inc
cmp
aad
or
les
int
divb
mov
push
adc
xchg
add
mov
dec
or
lds
shrl
jl
scas
insl
push
lods
js
xor
jno
and
mov
lds
push
in
jmp
ja
stc
cmp
cmc
ds
pop
idivb
imul
addr16
sar
sbb
stos
xor
in
shr
es
inc
aam
pop
inc
data16
xchg
icebp
sub
xchg
cmp
ror
repz
lret
loop
xchg
loopne
popf
or
movsl
addr16
fldl
xor
in
test
xchg
jbe
push
aad
iret
mov
lds
addl
push
push
cmp
jmp
aas
jg
repz
xchg
dec
cmp
sbbb
inc
in
scas
mov
idivb
fcomps
dec
and
dec
out
xchg
cmp
ret
mov
dec
ss
jno
aas
call
ja
into
ds
orl
and
xchg
sub
pop
fwait
lock
lock
cmpsl
lea
bound
pop
std
clc
add
bndstx
pop
dec
or
in
mov
into
stc
jmp
fs
mov
add
dec
lcall
and
jle
cmp
cmp
xor
aam
and
bound
rclb
push
jno
loop
cmp
in
jo
pusha
scas
insl
xor
and
addps
les
jg
and
hlt
cmc
cmp
stos
in
sub
sub
and
push
mov
call
add
popf
dec
cld
roll
jp
cs
shlb
add
pop
test
dec
in
ret
jns
and
repz
inc
or
mov
add
or
mov
addr16
jge
cli
or
fistpll
sti
aaa
and
dec
jno
xlat
mov
aad
push
in
shlb
or
pop
movl
or
out
jne
push
inc
fcom
dec
adc
mov
test
dec
adc
or
in
dec
sbb
mov
push
pop
add
jo
lods
in
jmp
add
add
fsubrl
add
clc
test
insl
sbb
lods
movsl
call
out
xor
ret
shrb
jbe
dec
loopne
pop
les
cmpb
mov
sub
jbe
stos
insb
cmc
scas
aam
mov
adc
pop
sub
mov
dec
in
sbb
xchg
xor
dec
jl
jnp
bswap
add
adc
fbstp
adc
je
lods
filds
addb
pop
stos
and
sbb
pop
fbstp
and
jo
les
jge
xor
and
pop
enter
mov
movsl
add
mov
xchg
ret
sub
shr
mov
xchg
nop
stc
mov
adc
cwtl
fwait
push
xchg
fsub
ds
or
stos
xor
jg
xor
inc
sub
popa
addr16
mov
movsb
nop
ret
repnz
pop
in
call
imul
insb
ss
test
repz
xchg
outsb
jbe
out
sti
hlt
pop
dec
lds
push
scas
push
scas
iret
mov
or
mov
xchg
dec
mov
jnp
or
in
add
mov
cmpsb
fimull
stos
jl
movsb
sar
xchg
xchg
sub
mov
and
adc
enter
jno
jle
cltd
loop
nop
leave
jnp
fildll
xor
dec
ficompl
movsl
aaa
pusha
xor
out
sub
pop
pop
out
sub
push
adc
push
inc
mov
mov
cs
xor
iret
ret
pushf
jle
xchg
xchg
mov
dec
xlat
daa
cmp
mov
jnp
jbe
xchg
dec
ljmp
mov
mov
in
and
idivb
daa
imul
scas
fildll
movsl
jno
sub
leave
fsubr
or
pop
xchg
aas
jns
or
cltd
adc
movsb
cmpsb
es
gs
mov
hlt
sarl
out
loopne
mov
test
out
incb
int
negb
push
push
mov
test
jae
stos
inc
sub
scas
xlat
jno
lret
in
xchg
cwtl
bnd
push
jns
mov
pop
fldenv
mov
dec
out
mov
mov
andl
gs
xlat
in
dec
movsb
and
out
je
movsl
or
jge
mov
inc
sub
jnp
xor
lods
adc
inc
add
and
sub
or
or
lahf
dec
dec
push
sbb
popa
or
pop
sub
sub
and
bound
xor
lods
pop
movd
mov
stos
mov
fldcw
sbb
outsl
xchg
inc
push
outsl
icebp
sbb
push
scas
xchg
xchg
rorl
enter
dec
js
test
daa
data16
xchg
shrb
inc
mov
test
leave
inc
jne
outsl
pop
repz
mov
or
lcall
add
mov
inc
jp
inc
cs
dec
rcrb
imull
mov
lds
jne
lea
imul
xchg
cld
sahf
inc
lock
push
call
jecxz
push
stc
dec
cmpsb
xor
sub
and
jnp
add
xchg
cld
jle
loopne
and
les
pop
inc
andl
cld
mov
test
mov
dec
rcrb
es
push
jle
addb
decb
push
fidivrl
lods
rcrl
mov
or
imul
icebp
push
mov
sbb
push
jge
dec
push
imul
call
mov
pop
test
sub
aad
jle
pop
push
mov
sub
loope
movlps
or
enter
test
push
cmp
gs
psubb
sbb
xchg
and
cmpsl
mov
insb
sbb
negb
call
dec
lret
in
push
pop
mov
aam
mov
cltd
test
mov
jo
mov
sub
jmp
pop
mov
in
adc
or
xchg
repz
mov
lods
mov
dec
sbb
sbb
pextrw
notl
jecxz
shrl
adc
outsl
ljmp
mov
fdivrs
or
push
dec
sub
pop
adc
sbb
mov
movsl
sbb
cmc
mov
data16
test
adc
sbb
mov
dec
mov
in
out
sbb
test
mov
sbb
into
std
out
pop
add
pop
scas
sub
pop
xor
fmuls
mov
imul
jle
mov
out
mov
pop
scas
in
dec
push
mov
push
inc
icebp
jge
mov
lods
subb
lock
das
pop
sbb
cwtl
mov
adc
pushf
cmp
rcrb
lock
jno
adc
push
rorb
cmpb
jl
inc
repz
cltd
sub
xchg
mov
cmc
dec
mov
pop
mov
std
sbb
data16
hlt
mov
icebp
test
lahf
cmp
mov
mov
pop
aad
mov
in
fwait
cmp
hlt
xchg
fwait
pop
neg
xor
mov
incl
dec
pop
mov
push
leave
jmp
mov
rcll
mov
cmp
aam
adc
outsb
in
pop
add
dec
rcll
add
xor
jns
xchg
scas
push
rol
jae
test
cmpsb
into
jne
es
dec
xchg
outsl
pop
punpckldq
imul
loop
je
cmpb
push
add
push
les
bound
leave
mov
jno
lahf
fistps
arpl
je
mov
int
adc
pushf
clc
and
out
das
cmpsb
mov
lds
dec
cltd
pop
scas
pop
data16
popf
lret
addb
or
aas
fcmovnu
out
xchg
les
mov
adc
adc
push
dec
mov
xchg
or
test
subb
or
icebp
stc
movsb
daa
dec
sub
insl
mov
dec
nop
sbb
cmp
inc
bnd
les
inc
add
mov
dec
in
js
sub
jo
xorl
cltd
sub
pop
xchg
inc
jmp
pop
jg
mov
adcb
into
out
jns
adc
add
adcb
mov
and
out
mov
mov
or
fs
mov
inc
aas
clc
and
int
repnz
lods
pop
push
enter
or
mov
popf
mov
icebp
fdiv
pop
jp
and
cmp
pcmpgtd
cmpsl
cmp
or
rclb
subb
icebp
xchg
mov
iret
fmull
popa
or
inc
pop
call
xchg
and
mov
loope
sti
es
adc
ljmp
push
mov
cmp
xchg
daa
and
adc
test
ljmp
mov
mov
jl
or
pop
dec
mov
xor
test
push
xchg
call
jmp
les
lds
shll
push
stos
adc
sahf
gs
push
rorb
sarl
push
sbb
aaa
mov
sahf
cltd
int
sub
rcl
dec
jnp
notb
cmpsl
jg
and
adc
imul
pop
xchg
sarl
lds
xchg
xchg
pop
hlt
leave
xor
stos
mov
mov
pop
je
fs
push
aad
hlt
bnd
push
std
sbb
mov
std
mov
cmpl
popf
sti
jmp
pushf
fdivp
pushw
mulb
outsb
int
mov
push
xchg
push
xchg
loopne
je
imul
pop
cs
adc
insl
push
cmp
dec
out
xlat
mov
xor
int
lret
mov
mov
or
add
mov
std
inc
jae
rclb
mov
les
cmp
testb
lods
inc
sbb
jmp
cmp
fnstenv
mov
mov
js
fcmovnu
mov
adc
add
out
mov
push
daa
push
mov
sub
loop
stos
mov
imul
sbb
xor
xchg
and
jmp
jno
roll
insb
inc
jmp
dec
cs
ret
push
in
sahf
shlb
pop
adc
xchg
mov
rorl
dec
shrl
ds
mov
repz
pop
outsb
sub
add
dec
sbb
xor
loop
enter
inc
jle
adc
adc
xchg
shrl
hlt
jo
jne
or
inc
insl
std
int3
or
cltd
dec
cmp
pop
out
pop
lahf
int3
imul
std
out
cmp
push
xor
daa
sub
add
in
dec
mov
test
jl
inc
add
or
add
aas
or
push
mov
mull
mov
mov
orb
test
mov
das
mov
loope
lahf
mov
mov
or
das
jo
enter
fnstcw
imul
jae
jp
ljmp
lcall
cmp
pop
push
pop
sub
nop
pop
push
or
ret
sub
enter
add
cmp
mov
das
cmpsb
fidivs
push
pusha
repnz
clc
pop
or
mov
test
pop
dec
pusha
sahf
rcll
xor
mov
lods
repnz
insb
and
addl
jg
push
jb
pop
decb
sub
loope
ljmp
dec
outsb
dec
pop
jl
call
loope
in
enter
cmp
mov
rcrb
mov
sbb
es
jle
jbe
es
call
add
adcb
mov
cmpps
pop
jl
jge
jmp
pushf
mov
sbb
inc
outsl
add
or
push
jecxz
lea
mov
sub
imul
fnstenv
cmp
test
repz
xchg
and
rcr
subl
push
sbb
mov
movsl
cmp
adc
inc
lret
js
enter
testl
das
inc
sub
ds
bnd
xorl
jne
cmp
lods
xchg
dec
nop
mov
sbb
and
aaa
gs
push
popa
mov
movsb
adc
ss
movsl
rclb
add
out
push
aas
dec
sbb
je
mov
cmpsb
jo
test
xchg
sub
xchg
cmpsl
int
adc
stos
and
ljmp
int3
cmp
adc
mov
jle
adc
adc
out
sbb
mov
cwtl
ss
scas
pushf
xchg
push
xchg
cmc
aas
push
pop
fiaddl
ret
jb
jo
popf
cwtl
and
and
dec
jecxz
cmp
xchg
mov
fists
xchg
mov
subb
mov
arpl
enter
cli
mov
xchg
push
pop
xor
fwait
mov
out
jns
dec
in
sbb
lret
loopne
dec
rorb
dec
cmp
mov
xchg
sbb
inc
enter
mov
std
lsl
cli
aad
mov
cmpsl
hlt
popf
push
jmp
mov
mov
lret
xor
inc
rcll
out
hlt
ret
mov
prefetch
out
and
ret
and
mov
push
xor
add
xor
push
pop
leave
or
shrl
cld
aas
push
pop
mov
xor
add
cmp
cmc
dec
sub
std
lcall
cmp
sti
fwait
push
mov
push
repz
mov
inc
negb
in
pushf
or
push
mov
push
fcomps
xchg
jg
adc
shlb
mov
aas
pop
sbb
xchg
lahf
jns
lods
inc
lods
fcoms
xorl
sub
enter
dec
insl
dec
stos
jbe
jle
push
aam
push
jno
xchg
xor
and
test
xor
pop
cmpsl
jge
xchg
jae
inc
push
dec
mov
loopne
shrb
jb
out
insb
fbld
cld
clc
rorl
ret
loopne
iret
das
jns
sbb
test
lea
pop
lcall
fucomp
dec
lcall
and
lods
sti
clc
fcom
roll
jge
sbb
lods
loopne
add
mov
push
cmp
pop
push
xchg
cmpsb
shl
adc
in
cs
insl
fscale
je
lods
and
jb
xchg
push
and
jbe
idiv
lret
pop
rcrl
xchg
into
or
dec
add
mov
mov
sbb
dec
xor
mov
dec
nop
fstpt
cmp
jnp
add
pop
sbb
outsl
int3
jle
lods
cmp
xor
sbb
push
lock
hlt
fidivrl
fwait
lock
lds
push
jns
mov
mov
lods
dec
cmp
add
push
enter
push
fcmovb
out
cmp
out
xchg
xor
pop
cs
lahf
dec
popf
aaa
es
add
add
cld
mov
add
add
add
add
add
add
add
orb
add
push
add
add
mov
add
add
add
add
sldt
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
cld
mov
add
add
add
add
add
xorb
add
dec
add
addb
add
cld
mov
add
add
add
add
add
add
add
add
add
cld
mov
add
add
add
add
add
add
add
add
add
cld
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
addb
clc
add
add
test
add
add
add
test
add
add
add
xchg
add
add
add
add
orb
add
add
add
mov
add
add
add
adc
add
adcb
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
sbb
xor
or
cmp
push
rcr
or
cld
sbb
pop
jbe
aad
dec
in
xchg
jo
cmpsl
push
fcompl
jb
adc
add
pop
sbb
or
movsb
lahf
lcall
jp
push
bound
dec
test
mov
int
mov
das
mov
aam
aam
add
xchg
clc
or
mov
jb
mov
fsubs
int
lods
outsb
mov
adc
xchg
xor
mov
dec
mov
cmp
pop
fisubrl
je
dec
bound
mov
stos
sbb
fs
jmp
ret
sub
push
rol
stos
xchg
cmp
add
arpl
cwtl
mov
arpl
lahf
aas
sbb
mov
scas
pop
inc
and
adcl
jae
lret
stos
pop
enter
sahf
lret
sbb
push
movsl
loopne
xchg
mov
icebp
lods
ss
or
sub
cld
mov
fnsave
xor
cmp
cmpsb
jmp
xorb
mov
shrl
mov
push
stos
jle
xchg
loop
mov
jecxz
xor
ss
stos
mov
xchg
mov
push
in
mov
jnp
inc
mov
sbb
mov
sub
aaa
fdivl
jbe
add
xchg
je
ds
scas
jb
out
cwtl
lret
add
subl
jnp
mov
repnz
lods
sbb
insb
into
and
aaa
movsb
and
aas
cmp
shlb
mov
loope
push
clc
int3
imul
stos
in
or
jo
nopl
lock
scas
enter
dec
and
inc
xor
lahf
aad
insl
icebp
pop
out
jp
add
pop
dec
jb
mov
sar
mov
cmc
or
or
rep
jle
add
pop
or
std
push
pushf
pushf
mov
fildll
lret
pop
push
invd
shl
lcall
aas
lock
imul
int3
adc
fwait
sbb
notl
out
push
lea
push
cmp
divb
and
jge
call
outsb
mov
test
push
push
jmp
xor
push
popa
jp
dec
pop
lods
cmp
xchg
mov
test
call
xor
sub
fdivrs
pop
add
adc
and
addr16
test
push
shll
inc
pop
cmp
and
in
scas
ja
test
lret
repz
xchg
in
mull
call
and
mov
mov
pop
cli
xchg
dec
pop
sqrtps
push
adc
mov
std
lret
and
roll
add
adc
loopne
fldl
fmuls
or
add
decl
pop
dec
inc
adc
fwait
movsb
xor
mov
jle
push
ljmp
sbb
push
inc
xchg
mov
jmp
adc
mov
int
push
xchg
out
jb
cmc
push
scas
outsl
cmp
in
dec
leave
imul
sbbb
loop
int3
adc
push
gs
push
test
js
or
mov
jne
sub
out
jns
sub
ret
add
sbb
scas
subb
and
loope
and
cmc
mov
xor
cmp
dec
add
aam
in
fiaddl
jbe
xchg
jo
xor
sbb
inc
testl
dec
push
jle
xchg
cmpb
and
fmull
mov
je
dec
stc
push
inc
dec
lock
jle
pushf
mov
shll
iret
in
das
cmc
fisttps
mov
push
arpl
pushf
or
mov
cmp
cmpsb
aad
push
dec
sbb
dec
or
fstl
adc
test
add
mov
jp
mov
jmp
scas
add
je
in
pop
sub
jmp
stos
cwtl
cmc
stos
mov
cli
push
push
jmp
xchg
add
fwait
push
ret
popa
sbbl
push
adc
jl
and
mov
jne
push
cmp
sti
sbb
fistps
sub
in
out
sub
sub
mov
mov
notl
pushf
jge
or
gs
pop
call
lock
orb
ret
adc
sarb
add
test
fdivrs
mov
mov
dec
shlb
push
xchg
in
rorb
xor
and
testl
cmp
test
pop
cmp
cmp
inc
inc
sbb
push
notb
add
imul
sbb
or
test
cmp
pop
or
mov
scas
pop
enter
adc
cwtl
bound
das
pop
sbb
cmp
jmp
xor
loop
ljmp
mov
cld
mov
sbbb
lahf
xchg
xchg
mov
sub
scas
jp
jg
dec
sub
jns
fsubr
mov
ret
and
mov
lods
inc
in
jle
adc
clc
rcll
outsl
sub
dec
pop
cwtl
cmc
jmp
inc
ret
out
ss
inc
mov
js
fiaddl
call
adc
xchg
mov
sbb
dec
cld
mov
leave
push
fsubrl
lcall
sbb
jp
dec
push
pop
inc
in
loop
or
mov
in
loope
or
and
jbe
xor
xor
sti
mov
xlat
incl
adc
push
aas
cwtl
jg
mov
or
stc
test
mov
dec
push
aas
data16
in
xor
adc
test
sbb
xor
out
mov
adc
adc
sbb
out
push
jae
aam
ljmp
sti
adc
push
clc
out
adc
jge
fdivs
mov
adc
in
je
lock
daa
jmp
xchg
jp
sbb
pop
mov
fs
hlt
jno
movb
push
dec
fwait
pop
and
dec
mov
les
inc
and
mov
stos
clc
dec
popf
fnstcw
or
popf
lret
dec
icebp
fisubrl
fsts
sub
aas
unpcklps
aas
ljmp
jne
fistpl
ja
imul
loop
outsb
cmp
jb
icebp
or
push
dec
icebp
and
cmpsb
mov
repnz
mov
mov
test
mov
lods
push
mov
mov
jns
call
jge
inc
xor
negl
xchg
xor
pop
push
popa
adc
xor
hlt
dec
xor
popl
push
mov
nop
out
test
test
sbb
or
add
cmpsl
pop
mov
lds
dec
stc
leave
subb
stos
rorb
fucom
aas
in
jl
sbb
lret
jo
scas
mov
xor
xchg
cmpsl
mov
add
test
jmp
mov
lretw
push
push
mov
ds
mov
add
sub
cmp
js
cmp
shr
inc
sbb
dec
sub
adc
addr16
lret
cld
loopne
jge
mov
pop
dec
fisubrs
rcrl
bound
xchg
sub
xor
cmp
cld
data16
adc
les
cmp
jno
ffree
add
insb
ficomps
mov
and
in
jmp
push
aad
pop
cmp
.byte
.byte
push
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
add
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
pop
call
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
pop
pop
xor
add
mov
push
adc
pop
mov
mov
mov
sub
add
mov
sub
push
sub
pop
mov
sub
and
dec
dec
mov
sub
jne
mov
jmp
loope
hlt
sbb
fidivrs
fldl2t
movsb
pushl
nop
mov
cmp
sub
imul
mov
fldenv
nop
adc
or
jp
nop
jmp
jp
add
cmp
sbb
jp
inc
xor
pop
popa
and
cmp
xchg
cmp
adc
jmp
add
cmp
loopne
std
daa
scas
mov
lods
xchg
lods
push
and
es
ss
add
mov
sub
int3
hlt
adcl
cmp
jne
fmul
imul
xor
sub
xchg
jbe
loopne
bound
aaa
stos
xor
jg
roll
pop
sub
shrl
inc
or
xor
fbstp
lock
scas
and
adc
sub
add
in
dec
rcl
cmp
adc
mov
aaa
adc
jae
lods
movsl
outsl
push
or
sub
int
add
out
add
jp
aad
stc
add
imul
push
ret
jmp
dec
pop
mov
push
sbb
rclb
pop
fdiv
pop
jno
es
mov
jp
or
dec
jb
mov
inc
insl
pop
imul
pop
dec
pop
sarl
push
xchg
jnp
lods
clc
mov
sahf
sti
sub
insl
js
pop
lahf
xorl
cmc
addr16
pop
ret
lret
call
arpl
mov
sti
inc
sti
cmpsb
push
shl
loope
ljmp
push
mov
pop
imul
dec
insl
scas
leave
out
mov
or
mov
imul
pop
imul
push
pop
shll
or
adc
inc
xorb
cmc
stos
cld
xor
pop
sbb
repz
setno
enter
fnstcw
movsl
sub
xchg
out
xchg
xor
sub
sub
push
xchg
data16
jnp
push
loopne
add
xor
sbb
sub
out
ret
movsl
sub
aaa
outsb
push
and
or
lods
movsl
sub
dec
cmp
repz
adc
cltd
das
fcoms
fisubrs
push
mov
mov
cs
cli
mov
movsl
sub
pop
pop
cmp
push
mov
lret
jl
xchg
or
pop
jne
bound
mov
jnp
mov
jg
mov
and
bound
and
mov
mov
push
loopne
cpuid
jae
adc
xchg
adc
mov
fdivl
pop
aas
ja
sbb
sbb
jle
jg
push
cmp
orb
out
sarl
aas
ja
sbb
sbb
jle
icebp
adc
bound
mov
sbbb
hlt
mov
xchg
mov
inc
jg
mov
jne
jmp
jne
bound
mov
bound
jne
and
das
bound
das
pop
adc
mov
adc
int3
popf
arpl
jne
arpl
dec
mov
cmp
jb
bound
cmp
jne
inc
pop
dec
mov
inc
cmp
xchg
adc
jne
pop
cmp
and
faddp
jns
bound
add
rcr
dec
mov
pop
mov
mov
and
add
divb
and
adc
or
bound
ret
bound
out
or
aad
push
insl
or
repnz
je
mov
jne
xor
jmp
sub
xlat
mov
lds
test
out
lret
iret
xchg
mov
adc
xchg
cmp
jne
fnop
jns
fsubrp
insb
mov
sub
popf
ficoms
bound
adc
bound
add
sahf
sub
mov
mov
cwtl
sub
je
outsb
jb
arpl
ret
fwait
into
arpl
mov
bound
mov
jge
in
xchg
push
inc
sub
cwtl
popa
lret
pusha
sbb
out
pusha
mov
popa
jne
fs
fnstsw
cpuid
sbb
out
pusha
mov
popa
jne
dec
inc
mov
jne
fs
fnstsw
xor
popf
jno
pop
cmc
outsb
pop
ja
rorb
iret
int3
and
sub
mov
popa
jne
cld
jle
or
push
fistl
mov
push
ja
rorb
iret
int3
and
sub
mov
popa
jne
out
jecxz
ja
stc
popa
jb
bound
cmc
rorb
iret
int3
and
sub
mov
popa
jne
out
xor
xchg
cmp
xor
pop
mov
hlt
idivl
lds
jne
mov
jbe
jno
pop
cmc
outsb
push
ja
rorb
iret
int3
and
dec
cmp
sbb
enter
mov
das
mov
fs
cmpb
adc
jns
jp
imul
jbe
icebp
insb
les
int3
sbb
loopne
jp
mov
xor
data16
cmp
imul
jbe
icebp
xor
inc
sbb
clc
enter
inc
xchg
pop
test
jne
bound
jge
push
mov
arpl
mov
bound
stos
push
and
inc
xchg
imulb
sbb
cwtl
mov
fnstsw
lret
sub
out
insb
mov
arpl
ds
sbb
mov
sbb
mov
in
jne
cmp
dec
shlb
push
sbbl
mov
adc
negl
jne
xchg
cmp
pusha
cltd
xor
cmp
fs
xorl
push
fs
dec
sub
pop
sarb
pushf
mov
pushf
mov
jo
movsl
sbb
into
ret
cmpsl
repnz
pop
add
in
and
jns
push
out
cmp
xchg
lahf
xor
cmc
mov
mov
js
ja
repnz
sbb
jne
bound
mov
bound
mov
bound
mov
bound
pop
mov
bound
mov
bound
outsl
gs
pop
gs
mov
bound
mov
bound
leave
arpl
in
dec
mov
movl
aam
mov
cmc
mov
cmp
push
mov
push
fwait
xor
mov
fldcw
bound
sbb
in
testl
push
addb
scas
xor
imul
push
aad
pop
push
out
adc
sbb
test
jl
lea
dec
out
inc
cltd
ljmp
mov
icebp
and
mov
inc
inc
lret
or
pusha
sbb
fnstenv
leave
hlt
xchg
jb
inc
stc
lret
push
or
movb
loop
rorl
ss
mov
cld
scas
arpl
dec
cld
daa
shr
js
pusha
addr16
dec
movl
jg
sbb
dec
xchg
inc
mov
inc
dec
stos
daa
int
fwait
jg
insl
incb
add
add
add
or
add
sbb
stos
add
inc
stos
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
stos
add
cld
test
add
int3
stos
add
lcall
add
stos
add
mov
add
add
stos
add
stos
lods
add
icebp
stos
add
mov
add
stos
add
mov
add
add
lods
add
ret
add
lods
add
lret
add
lods
add
shrb
add
lods
add
fisubrl
add
lods
add
loop
add
inc
lods
add
ljmp
add
add
repnz
add
pop
lods
add
cli
lods
add
lods
add
add
add
je
add
or
add
subb
lea
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
imul
fs
insb
add
popa
addr16
insb
insb
add
insl
xor
cs
insb
add
imul
fs
insb
add
outsl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
lods
add
add
add
xor
add
add
add
inc
lods
add
add
add
push
lods
add
add
add
push
add
add
add
add
add
xchg
add
pushf
lods
add
add
add
scas
lods
add
add
add
mov
add
add
lods
add
add
add
ljmp
add
scas
add
add
add
sbb
add
xor
add
add
add
add
add
pop
scas
add
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jb
je
push
je
add
add
jne
gs
gs
outsb
je
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
push
je
jb
push
gs
imul
push
push
js
arpl
gs
add
add
jo
gs
jb
jbe
jb
gs
jb
jo
imul
dec
popa
jo
imul
arpl
jne
inc
add
add
insl
inc
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
movsb
cmp
add
loopne
mov
out
or
jo
xchg
adc
mov
inc
adc
inc
and
and
sub
sub
adc
add
sbb
push
hlt
inc
nop
push
sub
mov
fiadds
mov
adc
or
sub
ss
adc
or
add
jb
outsb
xor
add
push
and
xor
or
test
sbbl
add
arpl
and
xor
cmp
xchg
and
in
test
cmp
xchg
je
mov
in
jb
cmp
pusha
add
xchg
push
enter
dec
jb
cmp
add
cmp
xor
xor
cmp
cmp
sub
clc
and
push
xchg
fmul
fsub
aam
rcrb
push
add
or
subb
add
or
add
fdivl
mov
push
xor
pop
jmp
sub
xor
and
xor
sbb
sbb
adc
movups
or
add
push
mov
adc
push
int3
push
call
add
test
jne
xor
rolb
lret
mov
add
or
mov
add
jge
rcrb
sbb
add
fs
sahf
aas
mov
xor
add
mov
cmp
shll
cmp
fadds
xchg
test
add
dec
mov
mov
push
or
cltd
push
add
aas
adcb
xor
adc
inc
cmp
add
mov
stc
push
xchg
push
adc
mov
nop
push
jg
add
aam
pop
pusha
xchg
add
inc
push
jmp
add
mov
jns
adc
jne
push
add
call
xchg
pusha
jg
add
inc
add
jmp
dec
add
dec
cmp
aam
sbb
fildll
pop
add
loope
call
test
pop
pop
pop
movsb
add
je
in
mov
xor
mov
jge
sbb
add
call
fmul
ja
and
jne
mov
ss
or
arpl
stos
cmpl
inc
add
jmp
xchg
or
push
jb
ja
into
je
fbstp
push
iret
incb
sbb
sub
and
stc
push
jl
pop
xchg
adc
sar
loopne
jbe
xor
sub
or
add
jle
gs
sbb
pop
bound
fisubrl
into
dec
adc
pushf
or
jmp
add
adc
mov
jae
push
push
sbb
nop
out
cmp
or
test
cmp
or
sarl
fs
adc
and
mov
cli
call
clc
jp
adc
pop
flds
cmp
add
popa
push
mov
push
push
push
lds
jns
lret
and
cmp
movl
lahf
in
add
dec
adc
dec
in
adcl
or
pop
push
data16
push
nop
sbb
clc
lds
jns
adc
addb
push
and
repz
inc
push
out
ja
dec
cmp
mov
je
add
mov
adc
packssdw
dec
xchg
or
movl
filds
xor
xor
jle
add
sub
jmp
and
xchg
sbb
adc
je
add
jb
ljmp
aaa
add
xchg
ret
setae
loop
clc
mov
mov
dec
sbb
or
dec
inc
cmc
xor
pop
je
adc
add
xchg
nop
jbe
add
fstp
add
call
cmpb
add
adc
sub
add
cmpsb
jmp
nop
xor
mov
mov
or
xchg
imul
xor
mov
repz
push
es
flds
add
pop
leave
clc
divl
add
cmovno
sbb
jae
fisttpll
loope
jge
add
addl
add
xchg
enter
add
pusha
shll
movl
out
shlb
cmc
pop
aam
cmp
jg
pop
sub
jl
xlat
push
push
add
push
add
push
add
inc
arpl
test
leave
or
fiadds
call
and
int3
sbb
cmpsl
int
add
cmp
lahf
add
pop
fisubrs
adc
fs
mov
sub
cmpb
xchg
add
bound
jne
test
push
add
jle
add
sub
pushf
es
imul
mov
xor
add
enter
add
mov
or
rorb
leave
mov
mov
orb
pop
pushw
lahf
dec
jo
dec
sub
sbbl
mov
cmpsb
jp
inc
inc
and
sub
imul
adc
inc
adc
movl
es
lds
sbb
or
jnp
push
out
cmp
fiadds
jae
ror
push
je
roll
mov
jmp
int3
inc
mov
mov
test
fcmovne
pop
mov
ret
nop
mov
cmp
mov
adc
mov
repnz
cmp
inc
add
xchg
add
pop
mov
pop
addl
push
dec
add
xor
add
gs
jle
and
pop
add
popa
mov
sahf
jb
mov
adc
push
sbb
mov
push
push
sbb
popf
adc
leave
add
hlt
inc
sub
add
jo
sub
add
bound
add
mov
mov
adc
pop
xchg
sub
jmp
adc
in
cs
pop
les
add
out
xchg
test
add
movsb
shlb
dec
sbb
loopne
lock
adc
add
ja
and
add
push
cmp
in
out
add
std
pop
add
xor
adc
add
lret
xchg
sbb
pop
push
or
and
fistpl
loopne
push
sbb
jl
orb
subl
or
fists
add
cmp
jg
add
test
jns
sbb
add
xchg
inc
add
rclb
jmp
dec
pop
push
fimull
inc
sbb
pusha
cmc
mov
adcb
popfw
mov
sub
shll
out
or
sysret
push
ret
cli
lock
sahf
add
mov
push
mov
sub
xchg
sbb
add
cli
adc
jl
movl
add
and
mov
repz
leave
enter
mov
or
sbb
xchg
sub
lock
loop
xchg
in
pop
adc
adc
add
lods
cmp
or
jl
add
sub
or
push
dec
or
cmpsl
ret
add
mov
dec
dec
nop
xor
add
je
sub
add
mov
mov
add
xor
test
lods
and
inc
testb
cli
mov
jb
or
cmp
pop
push
add
mov
dec
mov
or
add
or
fs
pop
mov
and
and
clc
mov
and
add
jbe
js
push
xor
add
mov
incb
dec
sub
clc
xchg
or
pop
dec
cwtl
aas
pop
fdivrl
add
push
repz
xchg
scas
pushf
les
cli
jmp
cmp
push
xchg
xchg
les
inc
psubb
inc
out
adc
sub
add
in
jns
push
xor
aad
sub
mov
jecxz
stos
adc
pop
jo
cmp
adc
mov
or
pusha
add
dec
jmp
fisttps
sub
roll
rcll
cltd
dec
cwtl
aaa
mov
hlt
ret
fwait
dec
cs
or
adc
pop
sbb
xchg
jmp
imul
add
xchg
pop
mov
inc
cmp
dec
or
or
addl
sbb
cs
push
add
pop
adcb
ljmp
bound
sub
xor
push
mov
adc
pop
scas
push
xchg
imul
inc
lea
pop
cld
ret
or
mov
inc
addb
sbb
fadds
es
sub
add
and
add
and
aas
movb
xor
test
mulb
ffree
xor
insl
fistps
outsl
cmc
xor
dec
add
adc
iret
aam
icebp
or
add
xor
les
and
pop
nop
cmp
or
mov
loope
push
cs
sti
ret
pusha
dec
or
mov
cmp
xchg
pop
add
push
addb
add
ljmp
mov
mov
jne
pop
ja
add
insb
add
jnp
xchg
sbb
xor
jg
mov
jmp
pop
sub
add
in
shll
push
add
fmuls
dec
xchg
sbb
add
jp
idivb
jmp
sbb
sub
cmpl
cwtl
test
cmp
mov
les
xor
fnstcw
add
repz
into
xor
push
dec
sbb
mov
gs
pop
add
xchg
xor
jmp
adc
inc
mov
add
imul
dec
jle
pop
fs
xchg
push
lea
add
mov
dec
call
cli
aad
leave
bound
sub
xor
and
mov
push
add
sti
shrb
add
xor
add
test
xor
jge
jns
and
add
cmpsl
add
jne
imull
and
aas
add
popf
add
sahf
dec
lret
cmp
inc
jbe
mov
test
subb
or
push
imul
nop
add
and
adc
sarb
loope
sub
jo
push
push
inc
or
in
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
jnp
pop
mov
andb
pop
test
and
mov
cmp
cli
sub
pop
sub
lock
in
add
mov
add
cmc
test
push
test
jne
movsb
inc
dec
inc
inc
add
jns
cwtl
fs
roll
ror
pop
push
add
inc
mov
stos
pushf
push
add
pop
addr16
notl
loopne
xchg
int3
xor
or
dec
pop
sub
cmp
push
adc
mov
or
cmpsb
movsl
lcall
and
cmp
out
aas
dec
push
addb
mov
test
faddl
orb
dec
cmp
cmp
jb
mov
inc
add
orl
ljmp
js
mov
mov
push
lds
push
or
add
push
mov
xor
mov
imul
pop
pop
sub
xor
out
dec
adc
jo
cmc
xlat
shl
mov
and
enter
add
mov
popf
mov
add
sar
push
jne
shl
sub
xchg
in
jge
jge
js
pop
enter
imul
pop
testb
add
stos
add
push
sahf
aam
test
mov
fldl
imul
add
dec
jne,pt
and
subb
add
daa
fsubl
jl
add
ret
adc
repnz
push
xor
mov
sub
sbb
shll
dec
add
xlat
jmp
add
and
js
xchg
ret
cmc
in
push
adc
sbbl
cwtl
add
jmp
xchg
sahf
sub
rorl
dec
inc
ret
movl
cmp
xor
loop
imulb
add
notl
and
add
scas
stos
mov
add
add
arpl
fs
cli
jmp
sbb
adc
pop
repnz
mov
les
pop
and
adcl
adc
add
dec
ss
pop
sbb
xor
rolb
ret
push
hlt
dec
lock
add
xchg
test
adc
xchg
call
inc
pop
cld
or
mov
xchg
and
and
mov
adc
xlat
mov
cmp
mov
push
shlb
xchg
jne
add
leave
je
xchg
jl
add
push
mov
and
add
sbb
and
fdivr
jle
push
cmp
adc
rcl
cmpsb
faddl
add
or
scas
add
add
sub
mov
ja
orl
add
int3
enter
iret
ror
into
sbb
lret
fcmovu
fstp
push
fnstsw
add
jecxz
in
nop
pop
push
add
test
cmpl
add
shlb
add
popl
push
adc
psubb
mov
mov
adc
rclb
fcom
push
cmp
or
ja
je
pusha
sub
add
rep
clc
sbb
shlb
xor
cmp
push
sbb
push
std
sbb
add
movl
or
les
or
jmp
decl
mov
inc
shl
cmp
jbe
pop
add
push
jnp
loop
pop
add
out
pop
and
sbb
inc
adcb
add
bound
adc
lock
cs
shrb
pop
cmp
jl
popa
pop
into
and
add
adc
out
add
lret
sbb
ret
js
loopne
push
push
add
and
mov
cmp
repz
push
add
push
push
cmovnp
jmp
aad
and
loopne
scas
sbb
jb
inc
jae
pavgb
sarb
out
repnz
hlt
add
imul
pop
fs
loopne
add
add
pop
cmpb
or
ffreep
mov
insb
push
add
fstps
mov
std
fistps
push
sub
adc
sbb
xor
pop
psubusw
mov
add
jb
cmp
enter
pusha
shrl
add
jp
addl
addb
dec
leave
mov
push
test
pop
loopne
and
push
daa
and
push
hlt
or
imul
adc
mov
sbb
addb
cmp
jne
dec
clc
adc
loope
pop
lret
sbb
ret
dec
inc
loop
push
out
push
cmp
lock
je
mov
cmp
jne
xor
xchg
dec
add
add
mov
push
inc
or
js
add
mov
adc
mov
sbb
add
mov
push
xchg
adc
data16
mov
sbb
add
xor
add
cmovno
mov
mov
cmp
dec
push
adc
inc
es
outsl
add
xchg
mov
fistl
xchg
dec
add
clc
pop
sbb
movl
jge
movb
cli
mov
pop
pop
inc
mov
stc
adc
out
test
push
mov
xchg
jnp
add
mov
adc
dec
jne
inc
lods
add
and
jmp
xor
xchg
jae
arpl
mov
mov
push
inc
cmp
xlat
clc
int3
mov
add
sub
shlb
and
or
popa
rcrb
add
psrad
lods
sub
dec
test
dec
int3
and
add
jmp
or
shlb
sub
clc
call
add
add
fcoms
xor
jne
dec
xchg
aam
jl
add
xor
dec
add
jle
js
fldcw
fidivs
add
outsb
lds
mov
mov
xor
je
xchg
popa
jb
add
mov
or
adc
adc
add
or
mov
add
rcl
jge
add
cli
sub
shr
add
inc
mov
dec
adc
repnz
push
cmp
add
add
add
je
nop
xor
push
clc
in
ss
add
mov
or
dec
mov
adc
add
dec
sbb
pop
cld
or
mov
lock
add
push
rolb
xor
sub
add
sbb
nop
jmp
mov
fneni(8087
push
arpl
je
add
sub
add
inc
cwtl
repnz
dec
pop
push
mov
cwtl
mov
mov
jo
dec
pusha
inc
mov
cld
push
bound
push
cmp
inc
call
add
adc
popa
mov
xor
mov
sbb
inc
hlt
add
lret
or
add
lods
and
add
ljmp
push
cwtl
loopne
sub
jno
in
and
lahf
clc
add
or
sti
push
mov
add
inc
push
push
inc
loopne
add
inc
outsl
jb
popa
cmp
outsb
cmp
inc
gs
jo
imul
rolb
push
add
jae
push
mov
xchg
add
cmp
lods
xlat
pusha
jo
xor
and
inc
scas
cli
in
cmp
fadds
call
pop
adc
ljmp
push
jne
ss
dec
faddl
push
pop
call
inc
pushf
inc
divb
push
mov
push
pop
imul
add
sbb
or
sets
add
add
loopne,pt
add
and
add
mov
xorb
cld
dec
add
xlat
stos
mov
and
fisttpl
pop
call
dec
loop
mov
push
add
jo
sbb
jmp
cmp
cs
add
jae
testb
push
sub
orb
jg
add
dec
jne
inc
jecxz
push
add
leave
adc
cmpl
hlt
js
inc
add
ret
dec
mov
test
xchg
add
dec
push
sbb
sarl
add
movl
clc
or
mov
ret
pop
add
sub
lock
add
notl
adc
adc
add
sbb
call
add
faddp
xchg
inc
out
adc
add
loope
push
lahf
or
add
push
mov
popl
adc
pop
adc
jle
add
xchg
imul
add
or
add
or
pop
inc
lock
push
or
adc
je
add
sbb
pop
and
xor
inc
and
adc
push
clc
xchg
sub
add
in
lods
mov
out
stos
push
push
call
adc
add
adc
imul
add
pushf
xor
sub
push
cmc
add
push
cmp
or
or
jbe
add
or
mov
jae
jmp
mov
movsb
adc
add
cmp
cmp
jmp
or
mov
cmpsb
cmp
push
mov
adc
xor
mov
pop
or
push
adc
and
inc
loop
ret
jbe
loopne
mov
dec
inc
sbb
andl
in
cmp
add
inc
inc
sbbl
dec
adc
je
cld
push
call
dec
or
mov
add
cs
call
mov
out
and
add
orb
push
je
pop
lods
movsl
loopne
or
cmp
ja
add
scas
adc
and
add
stos
sub
xor
lret
loop
mov
sbb
adc
or
out
pop
cmp
add
dec
add
add
fildl
loop
popa
sbb
out
inc
movsl
pusha
mov
push
shrl
fwait
nop
call
out
pushl
mov
aad
add
movl
stc
pusha
push
cmpsl
mov
jecxz
mov
adcb
mov
nop
test
inc
inc
sub
jmp
pop
add
enter
je
xchg
es
xorb
sbb
jmp
add
inc
sub
or
addr16
add
in
lds
inc
push
out
dec
pop
add
and
clc
test
add
fdivrs
dec
out
addr16
fs
mov
shrb
or
popa
into
je
les
pop
imul
or
add
xacquire
es
clc
xchg
jmp
and
sub
and
inc
push
icebp
insb
mov
cwtl
push
inc
mov
mov
lcall
lea
call
or
loopne
loope
or
mov
inc
add
fisttps
test
rorl
sub
add
push
mov
pop
xchg
add
inc
das
imul
push
mov
push
xchg
mov
sub
inc
or
jns
pusha
add
std
cmp
or
add
xor
mov
sbb
pop
fcoms
mov
add
outsl
lea
add
fs
mov
xchg
les
cs
add
movl
pop
dec
pop
int
adc
add
mov
add
push
cmp
pusha
adcl
sub
pop
xchg
mov
wbinvd
adc
enter
xchg
orb
pusha
xor
aas
pop
addl
sub
add
adc
sub
cs
adc
push
and
sbb
sbb
push
mov
sub
enter
leave
cmp
popf
and
iret
and
movl
cmpsl
push
or
fchs
push
lret
daa
push
ss
mov
pop
ret
addr16
repz
sub
cli
icebp
nop
es
mov
lret
cltd
ss
add
push
divb
cmpl
xor
sbb
mov
mov
out
add
pop
dec
pop
add
aaa
pop
xchg
jne
push
adc
xchg
adc
or
ja
in
xchg
add
imulb
clc
add
fmuls
lods
or
mov
add
cmp
shrb
pop
pushl
add
cmc
popf
and
mov
add
dec
loope
add
jo
xchg
cmpsl
jmp
test
sbb
lock
aam
xchg
add
shlb
out
cmp
adc
mov
add
stc
dec
or
pop
cmp
pusha
test
dec
add
xor
xor
adc
cmp
jle
sbb
ffreep
ds
out
sub
jg
dec
pusha
jecxz
adc
lea
mov
rep
popl
fwait
inc
add
mov
out
clc
movsb
or
dec
cmc
or
xchg
cmpl
mov
jns
add
sub
cli
inc
or
inc
mov
pop
inc
mov
jmp
xchg
das
push
popa
addl
sbb
and
jne
or
adc
fstps
and
and
xor
rcll
inc
je
sbb
lahf
cmp
mov
push
push
js
and
cmp
and
dec
add
test
push
in
lods
adc
rol
mov
out
mov
add
dec
adcl
call
or
add
pop
pop
lcall
mov
push
pop
rclb
call
and
ljmp
or
ja
push
and
add
xchg
movsb
push
es
adc
neg
sbb
pop
leave
test
test
mov
xor
and
nopl
cmpl
loopne
pop
mov
rolb
ret
adc
jne
or
cmp
je
adcl
and
test
add
adc
mov
subb
or
pusha
and
jo
outsb
dec
add
push
ds
adc
lods
sub
add
jne
mov
pop
mov
inc
or
lock
and
mov
push
pop
add
stos
shr
insl
aaa
pop
cs
jns
cmp
add
pop
push
jg
and
ljmp
ret
sub
adc
cmp
pusha
lret
mov
add
push
jnp
insb
sti
cmp
jp
add
mov
jns
cmp
add
pop
sub
xorl
sub
scas
lret
int3
add
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
push
daa
add
enter
in
add
mov
and
inc
jg
mov
add
inc
add
scas
pcmpgtb
dec
adc
add
jmp
mov
jl
dec
dec
xchg
add
adc
cmp
push
add
jne
pop
or
add
adc
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
nop
jecxz
and
pop
in
incb
mov
jp
add
xchg
pop
in
xor
add
cmp
in
xchg
test
add
shl
fptan
ljmp
dec
and
sti
push
js
jge
add
or
push
sub
adc
inc
jnp
xchg
test
inc
add
add
into
cmp
push
xor
in
jnp
cwtl
pusha
add
cwtl
push
and
pusha
xor
add
inc
lret
mov
adc
loop
rcll
push
and
cmp
adc
loop
add
or
add
bound
pop
imul
xor
sbb
rcrl
in
adc
add
xor
or
and
xor
or
sub
jmp
xchg
push
jbe
xlat
and
pop
nop
cmp
ret
push
inc
dec
add
push
push
push
sbb
repnz
scas
mov
not
pop
add
rcrl
mov
add
popa
jo
ljmp
ja
jnp
leave
xor
add
test
std
xor
mov
add
test
cli
push
cmp
add
ja
sub
jp
push
dec
add
movsb
cmc
add
stos
adc
cmp
xchg
inc
mov
je
add
mov
stc
rolb
jmp
pop
cmp
rcll
into
push
add
add
inc
outsb
jne
fisttps
fadds
mov
ja
cli
mov
xchg
addps
divl
dec
clc
decb
lret
push
push
scas
add
push
cmpsb
inc
in
mov
dec
xchg
dec
adc
das
adc
cld
dec
jno
push
pop
xor
add
mov
outsl
shl
add
into
push
rolb
jne
sub
out
enter
les
pop
lea
add
loopne
fldcw
icebp
add
rorb
jg,pt
add
fcoml
sarb
add
adc
add
mov
push
in
mov
dec
mov
sub
mov
out
xchg
pop
add
push
and
cmp
xor
push
cmp
adc
lret
add
jae
add
sub
and
cli
aam
pop
adc
add
shlb
push
clc
add
js
inc
xchg
adc
fildl
cmpb
addb
dec
mov
cmp
and
adc
fcomps
int3
sbbb
ss
mov
jle
and
es
jne
add
fidivrl
sub
push
sahf
jg
push
hlt
leave
xchg
arpl
and
or
mov
fsts
adc
aad
mov
rolb
add
adc
add
jle
sub
jmp
mov
repnz
dec
jg
pop
sti
push
mov
inc
dec
filds
test
xor
add
orl
js
mov
inc
rcr
adc
aad
add
mov
cmp
repz
adc
mov
in
pop
sbb
pop
inc
shlb
daa
add
push
inc
xor
sub
fwait
dec
cld
ret
cmpl
outsl
jne
in
call
mov
clc
movsl
cmp
jne
out
inc
sbb
nop
pop
scas
push
xor
sub
fwait
xchg
stos
pop
xor
sar
and
add
push
add
jne
mov
lret
inc
sbb
repz
push
mov
add
inc
adc
ss
aas
mov
loopne
mov
add
nop
sbb
repz
or
pushl
inc
fninit
push
adc
sbb
les
leave
clc
stos
and
dec
push
pop
xor
roll
dec
push
sti
xchg
push
inc
into
pusha
dec
pop
adc
xlat
or
and
adc
adc
in
add
mov
mov
popa
push
bound
sbb
test
incl
cs
adc
jg
sahf
add
jl
stc
loopne
fisttpll
mov
add
jnp
or
test
inc
push
or
pop
aas
or
push
inc
jnp
enter
mov
add
mov
pop
outsl
mulb
iret
sub
sarb
jmp
adc
repz
js
xchg
sbb
xor
int3
sbb
inc
sub
lock
in
add
xchg
repz
push
shlb
or
add
or
arpl
sub
sbb
jno
std
aaa
push
push
lock
jmp
push
inc
add
call
ja
xchg
repnz
push
icebp
dec
add
mov
dec
cwtl
test
mov
mov
dec
fiaddl
movb
popa
ja
stc
push
push
pop
pop
mov
sub
cmp
cmc
and
push
sbb
ja
jle
sub
filds
and
xchg
inc
int3
fwait
add
or
push
add
push
mov
fdivs
sub
dec
sub
fwait
add
mov
xor
sub
pop
mov
test
test
sbb
std
sub
test
add
mov
test
cmp
mov
mov
adc
xchg
jns
cmp
gs
jne
cmp
jb
loopne
cltd
mov
adc
cmp
loopne
sbb
daa
add
dec
loopne
mov
aam
movsb
popf
nop
mov
andw
shlb
lea
test
and
jmp
adc
push
adc
mov
pusha
cmp
add
adc
xchg
jp
inc
or
ret
cltd
jo
jg
adc
movd
jns
xor
add
xchg
adc
or
in
mov
jp
push
ret
xchg
fs
rorb
sbb
cmp
lock
add
jge
push
sub
add
xor
adc
push
xor
push
pusha
sub
jbe
cwtl
dec
ds
xchg
xchg
pushf
icebp
add
mov
cmp
and
push
jo
mov
imul
jnp
pop
add
bound
es
and
pop
jno
xor
daa
incl
enter
xor
roll
iret
call
loopne
lret
rolb
push
sub
std
add
das
cwtl
sbb
pop
mov
xor
inc
fs
or
add
xor
dec
popl
jge
daa
push
rcrl
pop
push
add
dec
sub
pushf
xchg
inc
add
xchg
mov
std
cmp
jecxz
pop
insb
in
shlb
lock
xchg
ret
loopne
fmuls
push
call
pop
lcall
jbe
out
add
pushf
fimuls
xor
fadds
jne
filds
pop
loop
xor
adc
add
and
shll
or
aad
add
and
add
xchg
xchg
ret
add
fwait
das
xchg
rcrb
adc
clc
ja
add
adc
jns
push
mov
into
add
pop
scas
gs
jb
push
inc
cltd
mov
movsl
rclb
out
add
sub
fdivrs
js
add
or
repz
daa
movntps
loopne
and
push
pop
add
mov
pushl
or
les
add
mov
cmp
sub
push
adc
jp
push
roll
add
and
mov
push
mov
cmp
add
cmpsb
je
addl
test
test
in
sbb
xchg
rclb
jl
adc
movsl
add
jmp
add
inc
sbb
cld
adc
int
add
ja
pop
add
or
or
loopne
test
ss
hlt
out
jmp
add
xchg
adc
ret
out
inc
clc
mov
fs
dec
leave
xor
xor
subb
add
xchg
ret
rolb
lock
hlt
cmpl
rcrb
mov
ja
insl
sarl
movsb
adc
inc
add
ss
cmpb
cmp
vmread
std
in
out
loopne
adc
adc
xlat
xor
adc
lea
lds
pop
push
add
psllq
jne
jge
push
add
cmp
clc
dec
movl
add
nop
movsb
jg
inc
add
add
xor
loope
pop
jecxz
inc
je
fidivs
addr16
mov
iret
aam
cmp
add
inc
cmp
dec
movb
inc
inc
dec
lods
inc
nop
lock
aaa
jbe
add
test
and
test
call
add
sub
pop
or
rorl
gs
shrb
cs
jnp
cmc
setb
outsl
jae
push
popa
out
push
add
adc
test
loopne
setb
jno
jecxz
inc
stos
pusha
pop
inc
out
add
jnp
fldcw
loopne
and
faddl
adc
add
jo
jne
les
and
add
push
sbb
pusha
ret
movsl
mov
aam
nop
outsl
cmp
add
jp
push
jae
pop
aaa
sbb
push
push
cmp
inc
xsha256
cmpsb
push
mov
xor
xchg
call
add
add
sub
sbb
adc
testb
mov
scas
mov
or
mov
into
loopne
adc
dec
mov
cmp
add
sub
add
adc
leave
add
insl
inc
mov
cmp
sub
add
stos
inc
xchg
xor
inc
imul
and
add
cmc
inc
and
leave
fneni(8087
adcb
add
jb
gs
dec
fidivrs
arpl
jae
cmp
sti
cmp
and
pop
mov
mov
add
and
pop
daa
and
push
cmpsb
and
loop
mov
outsl
add
pop
cmp
mov
add
push
ja
mov
fsts
std
sbb
add
lods
mov
shr
dec
pop
aaa
shll
push
add
and
mov
jae
mov
or
mov
in
or
cs
mov
loopne
cli
ljmp
shlb
jecxz
cmp
addb
mov
mov
or
add
mov
jnp
push
add
repz
xchg
sub
jecxz
inc
enter
adcb
adc
loopne
sub
push
lea
mov
sub
jb
mov
adc
pop
clc
insl
pop
repz
sbb
push
mov
add
jge
scas
jmp
inc
mov
and
xor
imull
jg
jbe
dec
pop
je
jne
dec
sbb
jbe
add
dec
mov
lret
push
and
pop
add
or
jge
cld
cs
sarb
bound
repnz
inc
rol
inc
sbb
call
daa
or
cli
les
in
mov
js
dec
mull
add
cmpb
and
scas
mov
sti
cltd
sqrtps
or
pusha
jo
and
cmp
and
sub
mov
pop
decl
push
add
ss
jnp
enter
mov
push
sub
inc
push
cmp
stos
sub
aad
popa
adc
jl
pushl
inc
add
andb
outsb
fmul
add
push
or
test
add
dec
sbb
inc
adc
or
and
xchg
adc
push
xchg
mov
inc
pop
push
jle
divps
call
push
cmp
pop
leave
outsl
imul
pusha
shlb
add
dec
cli
loopne
in
ret
jl
add
and
add
jmp
mov
lock
nop
iret
dec
adc
add
mov
push
ljmp
adc
sbb
pop
mov
adc
nop
adc
dec
add
jp
push
adc
mov
xorb
sbb
clc
adc
int
movsb
add
ret
sub
xchg
mov
mov
out
rcrl
out
push
ret
and
cmpsb
scas
sbb
mov
and
in
xchg
xorb
sub
push
mov
cmp
mov
sbb
and
push
loope
and
dec
jmp
add
femms
dec
cld
out
adc
rcrb
js
or
movsb
mov
jae
clc
push
cmp
cmp
addl
hlt
loope
pushl
or
test
mov
les
pushf
xor
inc
xorl
jbe
push
add
adc
add
add
sbb
incl
push
xorw
adc
dec
cmp
cli
pop
aad
cmp
jb
fildl
pop
mov
icebp
call
lods
xchg
dec
dec
ret
hlt
add
orl
lret
les
andb
adc
cs
stos
pusha
add
jmp
xor
adc
mov
add
cmpsl
into
fs
push
pop
aam
rorb
pop
jmp
lods
push
ret
inc
or
loopne
xor
je
xchg
pop
cld
adc
jo
icebp
sbb
mov
dec
add
mov
cwtl
add
and
mov
inc
or
loop
pop
xorb
pop
add
sbb
xchg
and
icebp
mov
jne
mov
pop
mov
mov
mov
cmc
lds
inc
xor
nop
jle
add
mov
inc
add
sarl
add
mov
sbb
movsb
dec
pop
add
push
pop
test
add
bound
xchg
push
cmp
jne
add
cmp
add
pop
cmpsb
dec
es
add
sub
pop
js
push
mov
cmp
jle
and
pop
jmp
lcall
push
xor
pop
add
jle
add
pusha
jmp
ret
sbb
jno
aas
and
cmp
or
or
inc
or
icebp
cmc
add
add
jmp
fisttpl
repz
pop
jge
adc
adc
test
adc
pop
sub
lret
add
lret
leave
mov
imul
call
shll
shrb
add
test
loopne
jnp
add
inc
hlt
repnz
shll
in
and
add
xlat
nop
aaa
cmpsb
stos
lahf
and
loopne
dec
je
lret
push
adc
mov
shrb
loop
add
xchg
fldt
sbb
fmulp
shr
add
bound
push
mov
add
inc
add
test
ljmp
add
mov
push
or
pop
addr16
loopne
mov
gs
add
adc
enter
mov
inc
add
ja
pushf
or
push
ret
inc
jp
add
adc
adcb
and
out
sbb
push
jp
xchg
subb
inc
mov
add
aam
or
out
je
mov
out
sub
xor
cmp
or
leave
sbb
mov
aaa
cli
jbe
cmp
cmp
xchg
ds
mov
mov
lods
add
jmp
lods
inc
rolb
adc
fadds
lods
add
js
xchg
xor
push
push
in
int3
add
into
sbb
rorl
mov
popa
push
jbe
jp
pop
add
movsl
sbb
push
mov
hlt
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
ret
add
sub
inc
add
mov
dec
or
mov
stos
and
out
push
mov
xorb
cmp
lea
divl
xchg
inc
xor
cmp
jecxz
adcl
sti
jmp
add
inc
mov
push
sbb
paddb
sarb
int3
repnz
inc
sbb
or
lahf
outsl
inc
pop
stos
clc
add
cli
in
pop
pushf
sbb
jmp
repnz
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
rclb
or
cmp
xchg
add
dec
dec
in
xchg
loope
cmp
push
in
pop
cmp
mov
lock
movsl
mov
aaa
popa
sti
in
popf
and
fildl
addr16
repz
mov
lret
fwait
xchg
and
mov
add
les
aad
bound
add
aas
cli
dec
adc
jge
cmp
fs
cmpb
rcrl
pop
ret
movsl
and
sub
xchg
inc
xchg
dec
rcrb
or
sbb
shlb
pop
add
jns
es
out
in
cmpl
jae
iret
add
jle
xchg
fucomi
and
jne
add
xorb
add
loopne
rorb
cmp
jb
xchg
jo
sbb
sbb
inc
loop
pop
test
je
inc
imul
repz
jmp
rcrb
lock
cwtl
and
or
cmp
jne
add
lret
repnz
add
ret
add
pushl
addb
clc
xor
sub
stos
test
in
andl
inc
mov
sahf
jnp
add
fs
dec
pop
push
inc
pop
out
enter
jle
pop
jb
hlt
pop
lods
xchg
lret
and
int3
inc
add
inc
xor
orb
rsqrtps
stos
cmovo
and
add
sbb
pop
stos
xor
loop
adc
sti
pop
sbb
and
cli
pop
mov
out
cltd
xor
clc
cmp
pop
aas
xor
fs
cmp
scas
add
inc
push
popf
add
and
rcll
sub
lods
pop
push
or
jg
outsl
or
or
adc
stc
cmpl
in
movsl
xor
push
fcoml
add
clc
push
pop
push
addl
and
psraw
mov
cltd
and
cmp
add
add
inc
inc
clc
inc
add
add
call
cmpsl
xor
sub
or
adc
add
andb
aas
imul
nop
or
pop
imul
repz
jns
fwait
adc
add
stos
popf
stc
add
cmp
dec
cvtps2pd
sub
loopne
add
fstpt
dec
and
repnz
ja
xor
repz
pusha
xchg
add
mov
xchg
mov
clc
in
jb
cmp
or
push
das
mov
subl
add
xlat
loopne
sbb
lock
call
push
jne
add
cwtl
add
add
xor
add
adc
add
xchg
sub
mov
push
out
mov
movsl
loopne
push
ja
lds
dec
dec
sarb
or
add
sub
pop
sbb
test
adc
sub
dec
mov
add
inc
adc
add
sub
imul
add
lods
outsb
pop
xor
pop
push
mov
and
pop
jp
out
mov
mov
mov
imul
or
mov
mov
or
add
or
jnp
xchg
add
stc
jne
out
and
sahf
leave
mov
add
aad
daa
out
rcrl
in
dec
and
add
xor
mov
and
int3
push
cltd
int3
or
push
add
and
cmpsb
push
pusha
jmp
iret
sahf
movsb
rclb
jb
and
cltd
or
or
sbb
or
test
mov
pop
mov
cmp
jg
jo
add
in
jb
cmp
push
and
sbb
add
inc
jb
cmp
pusha
cmp
xor
xor
in
jb
cmp
adcb
cmpsb
add
inc
hlt
and
xchg
in
iret
add
lahf
mov
loopne
or
fdivrs
inc
inc
rolb
xchg
fiadds
loope
movzwl
rolb
roll
adc
ret
call
xchg
das
mov
add
jg
aad
sbb
or
adc
fs
xchg
nop
jg
sbb
xchg
jl
add
jo
adcb
cmp
inc
mov
push
cwtl
or
icebp
ds
jb
cmp
sbb
ror
and
xchg
stc
add
cli
in
jb
cmp
push
sbb
mov
mov
sub
add
loop
jecxz
in
in
out
cmp
sbb
and
dec
mov
jmp
sbb
and
in
xor
add
shlb
jne
call
sbb
sub
add
fsts
inc
rcr
fisubs
sbb
add
and
xchg
ret
in
les
cmp
sbb
mov
xchg
lret
in
jb
int
into
sbb
add
and
mov
xorl
mov
mov
cmp
adc
mov
pop
jo
and
inc
popl
inc
add
pop
out
sbb
sub
cmp
dec
jg
pop
stos
sub
inc
push
add
sub
inc
js
gs
shll
cmpsl
xor
sbb
pop
push
addl
add
push
in
mov
adcb
inc
dec
jne
je
data16
insl
outsl
jb
cmp
and
inc
mov
or
dec
outsb
fnstsw
cwtl
mov
sub
xchg
or
je
inc
sub
mov
mov
xor
test
adc
push
pop
jle
and
lock
adc
add
sarb
jns
testb
inc
inc
imul
outsl
add
pushf
adc
out
dec
add
add
outsb
addr16
popf
and
add
or
or
jbe
scas
data16
outsl
dec
hlt
je
sbb
pop
fld
sbb
or
mov
arpl
repz
or
imul
icebp
pop
mov
shlb
dec
insb
icebp
popa
movsb
rcl
bound
pop
lcall
or
pop
cmp
sub
mov
mov
xchg
outsl
dec
ss
test
or
sbb
or
inc
mov
add
inc
jne
add
outsl
aam
add
mov
int3
ljmp
ret
mov
mov
mov
mov
sub
sub
es
push
xor
mov
in
cmp
lret
or
orb
push
add
arpl
push
nop
addr16
mov
or
add
and
out
cmpsl
xor
scas
pop
fs
test
xchg
or
cld
aam
pop
ljmp
rcrb
inc
popa
and
outsl
lea
pusha
mov
sbb
bound
mov
pushf
orl
dec
inc
lods
shlb
je
pusha
in
mov
push
sub
fsub
jo
incl
imul
in
cmpsl
fimull
add
ret
adc
repz
hlt
pop
or
stc
rclb
fadds
mov
add
iret
insb
pop
push
sub
add
imul
insl
and
push
cmpsb
sub
popf
inc
sbb
add
dec
cmc
pop
or
add
cmp
clc
dec
loope
jmp
fisubrl
dec
mov
nop
push
leave
mov
mov
or
rorb
push
fmull
shll
inc
ds
repz
je
add
js
jo
jp
ja
dec
jge
jg
and
cmc
cmp
add
xor
sub
imul
ljmp
in
add
outsb
out
inc
cmp
jl
pop
jae
push
pop
jmp
jbe
hlt
push
or
mov
xchg
popa
jmp
pop
dec
xchg
sub
xor
insb
add
sub
jne
shll
xor
xchg
add
pop
cmpsb
push
or
mov
mov
dec
pusha
add
inc
push
dec
notl
add
add
mov
test
psubw
add
loop
sbb
xor
clc
loop
add
push
sub
push
add
or
adc
add
jne
xchg
cmp
add
cmc
and
add
cs
loop
repnz
xchg
aas
cmp
xchg
cs
sbb
lock
add
in
pop
inc
dec
in
push
movsl
decb
lock
add
gs
int3
or
add
mov
aam
scas
add
inc
bound
dec
pop
add
aam
aaa
xor
pop
outsb
popf
pop
xor
imul
popf
ret
out
mov
je
adc
ljmp
imul
test
pop
jbe
inc
push
out
dec
mov
inc
add
push
dec
mov
test
jg
popf
fxch
add
lods
cli
lahf
rcll
add
out
lock
int
mov
aam
xorb
adc
stos
push
rcll
xchg
lods
iret
xor
push
or
and
add
jo
inc
shld
das
add
insl
shlb
shlb
cmp
scas
add
mov
cmp
cli
add
fstpl
or
add
or
sub
cmp
ret
adc
add
pop
daa
popa
fimuls
nop
pop
add
adc
xchg
xchg
push
and
mov
cwtl
jecxz
add
cmp
xor
lret
xorb
jmp
rcl
mov
lock
outsb
std
and
out
ficomps
add
dec
inc
ss
lds
pop
push
push
mov
pop
inc
idivl
out
popf
fwait
lret
mov
imul
dec
dec
add
jne
inc
js
add
pop
test
cmp
or
rolb
lahf
lds
push
sub
jp
and
hlt
sub
xor
decl
shlb
sahf
and
add
clc
adc
push
mov
adc
ljmp
pop
cwtl
test
cwtl
lret
out
adc
xor
cmpsl
inc
fs
push
cmp
adc
cmp
pop
mov
xchg
arpl
cwtl
add
add
clc
dec
inc
mov
cwtl
sub
ljmp
stos
mov
jb
add
stc
imul
adc
lahf
ja
js
jo
fnstcw
repnz
push
pop
jbe
add
mov
add
lahf
dec
filds
les
sti
pop
repnz
add
sbb
jmp
mov
stos
push
lret
and
lock
push
lock
mov
add
popl
out
neg
stos
lea
loop
push
pusha
xchg
add
add
push
mov
add
cld
nop
sub
hlt
adc
int3
push
push
cmp
mov
dec
and
inc
sub
aas
dec
sub
or
mov
call
or
in
add
sbb
xor
xor
fisubrl
sarb
add
xor
and
filds
adc
mov
les
sub
mov
es
add
ret
jne
push
pop
push
cmpsb
add
sti
pop
out
orb
xor
cmpb
jl
or
lret
add
inc
lods
movsb
pop
xchg
pop
or
jp
xchg
push
lcall
cmp
inc
add
add
sbb
mov
sbb
clc
sub
je
or
jb
cmp
cmp
aaa
imul
shl
add
sub
ret
adcb
xchg
or
pop
jmp
inc
add
cmpsl
ja
call
ja
cmp
xorb
xchg
pop
dec
fsubrl
sar
add
push
jo
pop
add
or
xor
fadds
cmovp
mov
inc
and
popf
insw
inc
hlt
add
or
add
icebp
adc
inc
lret
dec
add
add
fs
shlb
rcrb
mov
call
push
mov
sub
aad
xor
adc
cltd
adc
push
or
enter
pusha
sub
pop
fiadds
mov
sub
add
inc
push
push
push
xorb
sbb
stc
add
cli
and
mov
sub
push
shl
fisttpl
icebp
add
mov
popf
dec
pop
js
inc
sbbb
loop
pusha
add
cmp
ret
pop
sub
push
push
inc
cmp
daa
mov
lret
dec
scas
sub
mov
push
push
jbe
cmp
ljmp
mov
lgs
adc
inc
test
loopne
add
sarb
fsubr
sub
sbbl
gs
jnp
nop
pminsw
into
adc
mov
add
and
rol
test
in
clc
std
or
out
pop
and
cmp
jmp
add
leave
and
mov
add
shrd
mov
pop
fldl
jns
add
mov
push
pop
pop
lret
pop
xchg
jl
xor
or
je
ljmp
ja
sbb
pusha
or
xchg
sbb
jecxz
orb
xchg
push
orb
sbb
xor
xchg
mov
jmp
add
loope
outsb
mov
inc
shlb
add
nop
add
inc
out
inc
inc
add
dec
enter
rcrb
add
cld
jae
xchg
in
cmp
ret
mov
jne
add
or
mov
mov
jnp
sbb
sub
rorb
push
push
cli
xchg
or
call
sarl
bound
push
stos
flds
lock
adc
out
cli
icebp
add
jecxz
jge
adc
or
or
cs
xor
xlat
call
addr16
add
incb
jl
imul
xchg
cmp
xchg
test
vpinsrw
fiaddl
xchg
lock
inc
aam
jge
add
jl
pop
loopne
sub
cmp
pusha
sbb
jecxz
add
out
add
push
cwtl
jnp
push
inc
pop
rolb
cmp
add
add
add
fnsave
das
jb
cmpsl
dec
imul
add
cmp
in
xor
ds
sub
loopne
and
pop
mov
add
fcoml
jp
or
call
sti
jns
sub
add
sbb
dec
fadd
push
jmp
movsb
or
add
mov
out
add
cs
add
test
inc
mov
add
or
cli
cmp
inc
add
inc
clc
addl
cmp
add
shl
xchg
push
pusha
aad
push
inc
ret
rcll
call
or
js
scas
enter
push
xchg
sbb
inc
fwait
cmpsl
add
dec
push
cmpb
xchg
push
xchg
rorb
jb
movsw
jns
sysret
dec
or
aad
rclb
test
add
cmpl
shl
pop
xor
xchg
push
add
mov
fidivrl
clc
pop
xchg
sub
loope
hlt
cmpsb
add
and
add
and
adc
mov
fs
sbb
jbe
mov
and
pop
mov
inc
lea
mov
adc
adc
cli
out
fadds
jo
stos
cmpsl
inc
sbb
bound
lcall
in
xor
vucomiss
and
jge
or
mov
cmp
ja
and
add
lock
sbb
cld
movl
adc
push
pop
xor
add
incb
jne
add
dec
or
shll
imul
add
cmp
lock
insb
add
std
repz
add
sub
test
std
lds
push
inc
test
lock
ja
jnp
bound
mov
shrb
cmp
adcb
adc
sub
push
pop
or
jne
mov
or
pop
call
rolb
jg
sub
pop
pop
fildll
or
mov
mov
shrb
adc
pop
dec
cmpl
loopne
adcl
pcmpgtd
add
rcrl
std
adc
adc
jge
mov
add
xorb
add
add
or
or
imul
pop
inc
je
push
sub
nop
inc
mov
pop
mov
add
lock
loopne
pop
add
dec
mov
out
lret
add
bound
insl
push
adc
xchg
xchg
inc
enter
lods
add
cmp
add
fs
pop
jmp
jg
mov
sbb
or
jge
add
fs
hlt
dec
pop
mov
dec
push
rolb
and
or
addr16
and
add
jmp
jle
adcb
dec
xchg
add
or
arpl
cld
inc
pop
rcpps
pop
cmpsb
out
mov
push
fdivr
or
add
adc
and
popa
pusha
adc
mov
mov
mov
xchg
add
push
lea
das
int
lcall
xchg
cmp
add
dec
ret
repz
and
xlat
enter
mov
bound
cmc
cltd
xchg
add
inc
add
idiv
add
mov
xor
mov
add
or
adc
mov
xor
cmpsl
add
push
xchg
pop
or
jbe
dec
rorl
dec
add
int3
dec
push
push
out
cmpsb
jle
add
ja
jecxz
dec
fucomi
dec
add
lret
mov
pop
inc
push
sbb
push
shlb
cmp
add
dec
call
repnz
and
inc
lock
xorb
xchg
add
push
pop
hlt
adc
enter
scas
popa
mov
inc
push
add
adc
pop
clc
cwtl
push
add
add
in
sbb
xorl
leave
jne
add
sahf
add
add
jne
mov
xchg
ja
push
loope
imul
lret
repz
movsl
data16
mov
pop
add
je
xchg
cmp
mov
loop
add
mov
or
aas
xor
rclb
mov
loop
dec
les
pop
inc
in
inc
repnz
rclb
add
sub
movsb
dec
leave
and
sbb
add
mov
cmp
pop
filds
mov
mov
jl
movhps
dec
ror
mov
mov
pop
push
jge
mov
popl
std
into
jmp
push
push
push
xor
push
push
and
mov
aam
nop
lods
hlt
pop
cwtl
push
add
cli
imul
stos
xchg
inc
js
xchg
add
push
dec
fsubrl
xor
cmpsb
dec
mov
add
das
movsl
pop
lret
lret
jnp
add
rol
cmpb
mov
pop
pop
or
add
fisttpll
push
add
fld
das
ret
push
xor
inc
nop
sub
inc
dec
sbb
psubb
push
repnz
scas
add
cli
pop
dec
inc
fcoms
je
jle,pt
add
and
add
adc
and
bt
add
jae
xor
and
push
into
dec
ja
push
add
dec
hlt
mov
cmp
insl
mov
ja
add
call
mov
add
jmp
add
mov
adc
pop
movsb
adc
mov
lods
lahf
add
mov
pop
je
mov
pop
fs
aaa
les
mov
stc
lock
je
add
les
jp
lock
dec
fcompl
fs
lds
add
sbb
loopne
into
adc
aaa
add
mov
call
cltd
and
sbb
call
addb
les
cmc
nop
ficompl
push
add
clc
mov
or
inc
das
jne
sbb
cwtl
pop
out
inc
std
mov
aam
mov
inc
inc
jne
and
lock
mov
popa
dec
push
mov
or
popf
xor
int3
and
daa
mov
call
pop
rolb
add
and
adc
add
pop
adc
add
adc
call
inc
and
mov
xor
mov
jecxz
dec
into
sub
insl
add
ljmp
adc
pop
dec
add
es
aas
mov
and
repz
or
inc
dec
inc
xchg
movsb
hlt
mov
pop
or
shrb
insb
mov
shufps
lret
xchg
int3
es
xchg
mov
mov
add
mov
cld
push
ljmp
lea
push
mov
mov
pusha
cmp
mov
push
cmpsb
add
add
nop
test
outsl
mov
add
inc
jns
push
add
jg
sub
sbb
setg
enter
add
out
daa
jg
add
mov
add
and
add
adc
inc
outsb
inc
ljmp
pop
shrb
inc
add
xchg
cmpsb
mov
fstl
inc
ficoms
add
jge
sub
add
or
cmp
mov
ret
iret
fistl
pop
jno
add
mov
xor
add
mov
shl
insb
ds
pop
pop
les
jle
and
mov
mov
cmpsl
or
stos
add
xor
lea
push
or
add
push
arpl
mov
repz
xor
or
push
enter
pop
aas
cmp
jg
cmp
or
adc
call
pushf
jo
pop
cmp
fimull
add
add
mov
ja
in
orb
xchg
mov
add
sub
mov
dec
je
add
push
punpcklbw
add
jmp
mov
and
cld
add
ja
vpunpckldq
xor
dec
icebp
iret
push
jge
push
fsubrl
mov
xor
int3
cmp
push
cld
add
iret
les
add
shr
add
aam
or
scas
lock
cmp
jge
pop
imul
or
shl
jl
pusha
sub
add
push
push
ljmp
into
xchg
mov
bound
aad
or
lock
adcb
dec
mov
int3
outsl
mov
stos
jb
mov
cmp
add
ror
sub
add
rcrb
xor
sbb
popa
subps
addb
xchg
sti
add
fcoms
push
add
cmp
jl
mov
inc
add
xor
xor
adc
add
sbb
add
ss
in
xchg
add
lret
or
or
add
jne
out
xchg
cmpxchg
test
out
push
xorb
inc
mov
dec
sub
test
mov
test
cmpl
jg
and
dec
mov
pushf
pop
add
xchg
es
das
js
xorb
jge
lock
and
pop
dec
popa
or
inc
push
cmpsb
jno
jo
cld
test
data16
mov
add
xchg
or
add
sub
push
fs
and
push
xor
mov
les
or
adc
jge
mov
or
push
jg
xor
add
mov
call
xchg
dec
sub
pop
aam
xchg
push
enter
into
pushf
shlb
xor
or
sbbl
test
loopne
outsb
pusha
outsb
mov
mov
mov
mov
jmp
add
jp
daa
mov
pop
inc
orl
mov
lret
or
je
xor
add
ret
pop
test
cmp
hlt
cmpsl
int3
imul
in
std
add
loopne
add
jbe
add
jge
movsb
pop
test
dec
cmp
inc
add
lock
xchg
leave
fcmovne
testl
add
and
aam
test
cmp
lret
mov
fsubs
bound
and
inc
cld
add
cmpsl
jg
rcl
pop
add
push
or
and
ds
cmp
cmp
call
add
mov
and
loopne
fisttpll
sbb
xor
add
or
or
jb
mov
mov
sbb
call
xor
test
push
jge
add
cwtl
inc
fsubrs
call
sub
rcr
or
adcb
xor
push
xor
pop
sub
add
pusha
inc
adc
or
faddl
inc
mov
pop
adc
mov
imul
adc
add
jp
ja
pusha
fs
add
mov
inc
add
testl
add
mov
and
inc
add
jmp
es
add
or
add
mov
add
mov
add
adc
jp
and
das
pop
add
les
push
or
je
psadbw
loop
dec
incb
xlat
mov
leave
push
add
pop
push
adc
int3
das
shl
add
mov
lock
mov
mov
inc
adc
mov
add
sbb
scas
xor
and
push
pop
stos
mov
add
jb
adc
inc
cmp
or
jne
cli
cmp
add
sub
mov
add
lods
jne
movl
push
aas
inc
clc
mov
notl
jecxz
lea
mov
pop
xchg
cmp
and
out
test
mov
jmp
add
mov
adc
mov
or
sub
add
stc
pop
or
inc
push
sbb
inc
xor
imul
and
push
rcrl
add
add
jb
inc
mov
es
or
int3
lret
add
out
add
pop
and
sub
lock
int3
stos
add
pop
pop
sub
adc
imul
inc
cwtl
jl
adc
call
mov
pop
adc
add
xchg
jmp
pop
push
inc
jns
mov
ret
mov
add
mov
adc
jns
add
fwait
mov
mov
mov
push
add
dec
add
xor
pop
adcb
jmp
mov
adc
mov
mov
repnz
adc
rorb
repz
outsb
sbb
and
movsl
aaa
nop
cmc
enter
mov
pop
roll
cmp
jnp
mov
sub
or
mov
and
enter
add
cld
pusha
sub
mov
jne
rcr
int3
aas
sti
cmp
push
xor
in
iret
sub
or
aas
cmp
add
cmp
gs
and
popf
inc
sbb
add
mov
lock
add
aas
and
xchg
fdivl
lock
pop
in
cmp
hlt
nop
mov
repnz
cmp
and
push
jl
add
and
adc
mov
iretw
sub
sub
add
dec
stc
or
push
add
jne
jge
shrb
sub
mov
dec
lret
and
push
insl
cmp
jge
paddusw
inc
pop
and
add
shrb
jecxz
data16
jo
sbb
and
mulb
fsubs
inc
dec
jb
push
loope
add
inc
mov
push
into
test
sbb
add
adc
push
mov
adc
jg
inc
adc
lahf
test
shl
push
add
xchg
inc
or
dec
jne
mov
xchg
cwtl
and
push
add
inc
and
cmp
or
adc
test
ds
pop
add
inc
jb
call
arpl
inc
js
inc
mov
mov
pop
add
cwtl
out
enter
movl
outsb
in
mov
ficoml
loopne
dec
mov
xchg
sbb
push
mov
test
es
xor
cld
enter
sbb
sahf
inc
adc
and
dec
mov
sarb
adc
inc
jl
cmp
adc
inc
sub
shlb
dec
sbb
cltd
mov
pop
mov
push
xor
cmpl
aam
mov
fildll
and
pusha
data16
fadds
bound
add
xor
shrb
and
xorb
pusha
pop
les
dec
cmp
lods
test
push
adc
cmp
int3
jmp
cmc
test
lock
movsb
cld
ror
sbb
iret
xor
pushf
iret
enter
in
sete
les
mov
call
and
lods
loopne
cmp
pop
jl
sbb
js
sub
pcmpeqb
scas
fs
push
cli
clc
pop
pusha
repz
dec
clc
loop
je
enter
mov
iret
adc
inc
pusha
cmp
dec
xchg
xor
inc
clc
adc
std
out
repz
cld
or
call
mov
andb
loopne
jb
je
inc
mov
cli
mov
cmp
repz
dec
pop
push
or
add
sarb
dec
mov
or
in
addb
adc
add
mov
sub
pop
sbbl
clc
sub
xor
add
enter
jle
lea
inc
cld
shlw
out
movzbl
add
add
add
repz
jle
add
popf
dec
jle
inc
mov
push
xor
fcoms
loopne
popl
mov
loopne
sub
inc
out
adcb
paddb
in
test
jg
pop
add
or
add
dec
stos
cmpb
daa
pop
inc
mov
fldenv
repz
jmp
mov
xchg
add
loop
add
adc
and
xchg
mov
jg
addl
repnz
xchg
bound
hlt
sub
mov
sbb
or
xor
pop
out
mov
clc
mov
shr
nop
jge
addl
neg
xlat
outsl
push
mov
mov
les
fdivl
add
xor
mov
add
inc
dec
or
adc
mov
pop
add
cmp
clc
adc
jae
cwtl
femms
cmp
sbb
push
loop
outsl
dec
mov
add
sub
add
mov
rorb
add
repz
inc
lods
mov
sub
hlt
mov
lds
jmp
dec
test
inc
pop
jecxz
cmp
addb
sub
iret
es
mov
push
or
icebp
sbb
add
fnstenv
add
add
fisttpll
nop
pop
and
add
shlb
jbe
jle
cmp
jp
sub
or
int3
idivl
pop
pop
adc
loop
jmp
lods
xor
add
add
add
inc
mov
fwait
add
pop
negl
sub
lods
std
sub
aam
jle
mov
dec
jmp
stc
push
sbb
sti
jg
adc
cmc
sbb
adc
push
std
add
addr16
xor
popf
sub
ja
pop
cltd
rolb
outsb
push
or
flds
imul
add
nop
or
dec
ljmp
adc
ja
add
dec
fisubrs
sbb
push
dec
call
and
adc
pop
add
testl
cltd
cmc
scas
jecxz
out
inc
cmp
pop
or
stc
adc
add
jne
push
push
sub
add
pop
adc
dec
setns
mov
xor
push
ret
push
mov
rolb
je
add
div
push
add
and
sbb
sti
jmp
or
sbb
je
cmp
adc
push
out
loop
mov
jg
pop
or
or
mov
mov
adc
jmp
add
gs
mov
mov
mov
clc
push
popa
add
xor
and
sub
xchg
xor
inc
cs
cmp
add
fists
add
cmp
fmuls
add
fistpl
fidivrl
lret
addl
call
push
in
add
pusha
mov
add
scas
sub
mov
cli
setl
add
xchg
pop
add
imul
clc
add
mov
shl
mov
xchg
dec
push
out
pop
ret
and
sub
pusha
sub
popa
adc
pop
ret
and
push
jecxz
or
faddl
roll
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
push
and
inc
inc
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
inc
andl
add
mov
sub
iret
lea
lods
stos
lock
jmp
int3
add
mov
add
pop
cmc
add
dec
and
add
xor
les
in
adc
inc
xchg
pop
or
jno
stc
xor
fiadds
mov
xchg
insb
cs
push
sahf
and
inc
add
loopne
jle
pop
mov
sbb
repnz
lcall
inc
sbb
add
jp
add
insl
jae
xor
leave
or
cmpsl
lea
inc
shlb
add
pop
or
lahf
adc
cmpl
inc
adc
add
inc
fmull
imul
aas
add
and
insb
pop
add
andl
fabs
aaa
call
cld
fildl
sub
repnz
dec
cmp
addl
test
jo
inc
cld
or
add
fbstp
pop
bnd
add
adc
inc
adc
call
pcmpgtd
loop
jmp
add
mov
das
or
add
or
cmp
or
jae
cmpb
and
loopne
sbb
adc
adcb
ja
jmp
pop
cwtl
das
add
pop
push
xor
sbb
nop
mov
xorl
xor
ljmp
push
add
subb
add
into
cs
enter
je
cld
jns
popf
sub
popa
addl
repz
push
roll
jp
testb
mov
push
sub
sbb
or
add
daa
js
cwtl
cwtl
adc
filds
insl
adc
mov
add
jns
xor
rcrl
inc
popa
add
mov
or
stc
push
add
pop
dec
int3
in
jmp
cmp
or
add
stos
and
add
xor
cwtl
add
lea
add
movb
adc
aas
test
testl
daa
jmp
loopne
rorb
jmp
lock
jge
push
es
daa
add
call
adc
cmp
pop
xor
add
cld
lock
xchg
cmp
sub
pop
cmp
into
fmuls
and
mov
mov
cmp
subb
sub
rolb
add
and
mov
adc
xor
sbb
push
loopne,pt
fistpll
add
outsb
fisttpl
add
mov
rcll
add
insl
nop
fwait
test
ret
lods
add
dec
frstor
add
repz
lock
add
fimull
into
add
mov
adc
mov
popa
sub
imul
inc
nop
addl
or
cmp
mov
lds
xchg
push
and
jne
push
jbe
adc
jp
aas
and
add
cmp
cmp
mov
fbstp
inc
pop
mov
pop
push
cmp
sub
aas
scas
push
inc
add
or
push
nop
dec
adc
inc
inc
and
adc
jns
mov
or
cld
je
and
fs
sub
sub
pusha
daa
add
adc
xchg
xchg
pop
xchg
icebp
or
cld
bound
jae
inc
mov
xlat
and
lea
inc
addb
leave
dec
lret
adc
xor
mov
lea
add
les
mov
inc
xchg
je
cmpb
repnz
push
outsl
add
js
in
jle
push
sbb
add
out
inc
orl
add
sub
and
mov
cmpsl
pusha
clc
dec
fsubs
add
jecxz
not
pop
mov
inc
xchg
jns
push
fdivs
jae
xor
fistpl
out
add
ret
test
add
sbb
xor
repnz
or
out
fistpl
jl
adc
mov
shl
std
dec
xlat
add
pop
add
add
fs
loopne
add
jmp
pop
add
call
and
es
into
add
cmp
ja
rcrb
lahf
push
adc
cli
jae
loopne
and
mov
mov
inc
cmp
mov
jmp
add
jb
nop
in
int3
loopne
add
popf
mov
test
cwtl
in
jp,pt
cmp
cmp
pop
dec
adc
dec
in
add
dec
jge
mov
ret
or
cmpsl
jno
into
and
cmp
lea
ret
add
xor
lret
push
leave
test
jbe
cmp
xor
adc
inc
in
add
leave
or
adc
mov
xorb
add
clc
cmp
xchg
xor
or
mov
mov
add
mov
movsl
inc
adc
ja
or
js
add
cmp
mov
mov
sub
mov
or
sar
add
bnd
xchg
or
add
cli
mov
jg
push
push
add
daa
lret
loope
pop
fimull
add
dec
outsl
pop
repnz
enter
and
mov
lahf
jne
stos
xor
lea
mov
inc
pop
test
add
daa
inc
inc
add
xor
sub
cmpb
add
ds
or
pop
out
xor
cmp
sbb
aaa
fcoml
push
add
inc
inc
dec
jne
flds
icebp
out
sub
cmp
call
dec
iret
in
and
push
mov
mov
mov
xchg
add
adc
sub
fstpt
jbe
pop
xlat
lahf
jns
add
add
loope
incl
cmp
flds
push
or
add
mov
and
pop
add
ret
sub
add
cs
adc
jle
jne
add
cld
push
add
xor
mov
jo
dec
pop
sub
jae
jge
bound
mov
in
mov
xchg
mov
fstpl
adc
popf
test
xchg
add
jecxz
dec
std
call
jle
mov
inc
loopne
jge
adc
dec
scas
and
xchg
add
mov
add
pop
sbb
leave
pop
jne
cld
lods
xor
jl
lea
inc
or
adc
mov
addb
pop
inc
inc
inc
dec
dec
add
dec
dec
add
push
push
or
push
cmp
add
pop
popa
bound
fs
push
insb
insl
outsb
pop
outsl
jo
jb
add
ja
js
jp
add
xor
xor
sbb
aaa
cmp
cmp
das
cmp
popf
add
jnp
sub
cmp
add
sub
daa
or
or
in
addr16
xchg
and
lds
ljmp
es
and
add
out
mov
and
pusha
jmp
or
cld
add
sbb
pop
imul
add
sub
ret
and
add
data16
in
pop
sbb
jmp
xchg
jo
push
or
pop
iret
aam
adc
daa
push
mov
add
pop
dec
or
add
mov
movsl
push
xor
flds
data16
lock
add
insb
loope
add
sub
xor
push
call
add
adc
clc
add
std
mov
in
push
mov
dec
inc
add
add
jbe
into
mov
push
sbb
out
and
movb
lods
add
cli
inc
mov
adc
mov
push
insl
and
or
out
jnp
dec
push
push
dec
jp
add
mov
sbb
push
sarb
cmpsl
ret
sub
dec
lahf
push
pop
fldlg2
and
add
ss
loope
mov
aam
pop
lods
inc
mov
jg
add
mov
movsb
pop
insl
test
incb
aas
enter
sub
add
jl
sub
sbb
loopne
dec
in
xchg
add
lahf
xorl
pop
push
push
mov
jno
bound
jae
push
lret
add
test
mov
pop
mov
mov
cld
adc
clc
and
mov
push
add
imul
add
lock
inc
mov
scas
dec
ret
xorl
xchg
sbb
or
inc
or
je
js
add
dec
inc
mov
or
inc
push
ror
loope
add
insb
xchg
and
cli
ljmp
aam
lods
lahf
pop
jg
mov
leave
xchg
or
add
subb
sub
mov
mov
stos
pop
inc
mov
add
or
str
and
push
test
add
mov
cmp
out
loopne
shlb
xor
xchg
testb
add
inc
loop
add
xchg
pop
clc
addl
pop
mov
or
xchg
adc
push
sbb
leave
mov
add
add
fcompl
mov
mov
add
dec
jne
xor
jge
je
adc
mov
or
cmp
sarb
cmpsb
add
rcll
dec
add
nopl
testl
std
in
add
cmp
pop
add
sub
adc
sbb
mov
fcom
mov
mov
sbb
int
inc
mov
call
notb
out
test
lock
ret
in
pushf
jle
gs
in
in
push
add
idivl
bound
mov
daa
enter
adc
shrl
cs
mov
scas
push
in
lret
frstor
mov
shlb
fisttps
xchg
js
add
fsubrs
sub
or
cmpb
loop
decb
fidivs
mov
adc
ja
xchg
add
mov
or
pop
add
hlt
cmp
movsl
xchg
lock
add
pop
dec
repnz
daa
add
movsb
inc
dec
push
jmp
add
inc
xorl
jp
add
popf
jno
mov
add
pop
xchg
pop
fstpl
lock
rcll
adc
add
push
rcll
push
mov
jae
popf
jns
add
xchg
in
xor
scas
fs
xchg
les
mov
mov
pop
testl
ret
aas
add
cmpsb
pop
dec
or
mov
int
mov
stos
out
add
xchg
xchg
sbb
gs
mov
repnz
sub
mov
out
add
push
add
mov
fisttpll
xchg
dec
pop
mov
cmpb
pop
jle
mov
add
ret
add
dec
pop
push
mov
in
rolb
outsl
dec
pop
jne
cmp
inc
lahf
mov
popa
inc
flds
sub
jbe
add
xor
xchg
add
je
xor
filds
and
dec
add
sbb
and
dec
mov
cwtl
or
orl
dec
add
add
mov
arpl
mov
sbb
rcll
les
dec
adc
or
inc
sub
cmp
stos
rclb
xchg
xchg
cld
jge
testb
lea
bnd
add
lock
shl
adc
adc
sub
movsl
fs
pusha
imul
push
adc
pop
call
xchg
out
lock
push
sub
in
pop
cmc
add
pop
pop
hlt
andb
les
inc
test
fsub
push
pop
add
xchg
cld
push
xor
dec
add
inc
subb
jmp
mov
jl
add
jmp
fdivs
lock
add
into
add
jmp
rorl
pop
not
insb
out
ds
movsl
rclb
test
popa
aam
les
mov
fiaddl
loopne
lock
pop
cld
mov
arpl
test
pop
sbb
add
push
xchg
fistps
sahf
cmp
aam
pop
push
add
cmp
mov
mov
pop
out
dec
add
sub
push
adc
and
add
dec
fucomp
mov
jno
xchg
inc
and
push
rclb
repz
lods
dec
int3
pmulhw
sub
adc
add
pop
sarl
push
lock
push
mov
dec
jns
into
jmp
inc
mov
cmp
in
icebp
in
rcrl
fsubl
rcll
jne
mov
call
clc
dec
xorl
add
movl
mov
test
cwtl
xchg
cmp
dec
adc
add
push
adc
shl
ss
mov
inc
pop
jno
sub
sub
sbb
push
in
sub
or
bound
enter
push
pusha
xchg
clc
pop
stos
adc
mov
mov
inc
or
js
pusha
test
or
push
lods
inc
mov
fcoml
jnp
add
iret
dec
inc
and
add
inc
cwtl
stos
add
mov
addr16
repz
sub
lahf
call
lret
movsb
inc
pushl
add
ret
call
sub
or
lods
lret
sbb
xchg
out
in
into
ja
cmpsb
sub
push
stos
xchg
inc
andl
add
pop
dec
sub
fmull
loop
mov
sbb
xchg
in
inc
cmp
jne
pop
lcall
mov
push
and
test
ficomps
add
mov
cmp
add
mov
js
scas
or
push
inc
mov
incb
lea
rep
add
push
pop
sub
dec
jae
lret
mov
loopne
or
ja
cmc
add
sub
daa
jl
addl
mov
push
cmpl
mov
mov
or
add
stos
and
leave
ret
nop
pop
xchg
ljmp
pop
cmpb
outsb
adc
test
add
sub
or
enter
leave
or
out
add
or
adc
xor
add
and
xor
lods
loopne
add
lret
stos
sub
bound
call
mov
add
xor
add
jmp
and
xor
outsl
push
repnz
enter
or
and
mov
rolb
dec
and
fimull
cwtl
ja
daa
or
lods
mov
add
ret
xor
aam
cli
fiadds
xchg
call
jle
add
jmp
verr
mov
popa
add
xchg
jecxz
and
lahf
jo
and
xorl
jb
and
jae
pop
and
lods
movsb
sbbb
sbb
fmull
push
sub
add
xchg
inc
iret
jno
lods
sub
dec
jo
cs
mov
pop
xchg
add
push
sub
add
fcoms
loopne
test
add
or
sbb
repnz
mov
rorb
std
add
enter
add
je
pop
dec
dec
or
sbb
pushf
call
in
add
pop
sbb
arpl
hlt
add
dec
push
scas
add
adc
xor
mov
jne
jne
jl
add
cmp
inc
push
sbb
mov
sub
or
sbb
scas
and
leave
jae
xlat
into
test
nop
mov
xchg
or
jge
cmp
ja
adc
push
mov
repz
fcmovne
add
iret
mov
mov
mov
or
out
fists
sbb
add
pop
icebp
hlt
ret
push
add
lret
push
sub
adc
ret
inc
sahf
adc
aas
jo
xchg
xchg
cmc
add
clts
adc
jecxz
or
adcb
inc
clc
mov
jmp
cmp
imul
out
mov
pushf
inc
push
pop
add
add
dec
imul
insl
jae
or
repz
xchg
and
sbb
fnstcw
je
push
sti
out
jne
popa
add
push
in
mov
rorl
jmp
repz
out
add
pop
adcb
mov
call
add
jmp
add
xchg
adc
and
add
xchg
adc
fistl
adc
shrl
add
mov
sub
pop
dec
dec
xchg
push
mov
out
xchg
js
nop
xlat
add
add
jne
push
inc
adc
cld
in
jmp
pop
add
fisttps
or
in
cmp
add
rcrl
jmp
add
push
mov
sub
stos
popf
mov
xor
lds
out
push
adc
call
mov
adc
mov
add
cmp
mov
adc
add
cmp
jbe
add
dec
call
add
or
adc
jle
add
mov
xchg
lret
xchg
add
jb
mov
mov
lock
and
cmpl
je
sub
cmpb
and
cwtl
dec
xchg
test
cmp
dec
adc
mov
jl
sub
in
add
test
movsb
mov
mov
adc
add
cwtl
mov
nop
test
add
mov
push
dec
dec
fimuls
sub
xchg
sti
call
push
mov
mov
inc
xor
les
sub
or
push
cs
insb
clc
and
dec
sarl
orl
sbb
sbb
inc
jae
nop
mov
add
sarl
push
pop
push
lock
mov
loopne
dec
cs
adc
data16
mov
sub
rcll
and
mov
pushf
jne
dec
adc
test
lods
add
or
je
inc
jl
push
and
aaa
cmpsl
or
mov
repnz
sub
das
jbe
iret
mov
mov
push
mov
add
arpl
cld
in
lea
xchg
push
hlt
sub
jg
add
shlb
or
adc
pop
add
add
mov
mov
outsl
lcall
ret
popf
push
jge
sahf
fiadds
enter
inc
and
xorl
and
add
incb
sbb
test
xor
adc
es
out
addb
jge
push
push
xchg
ret
std
push
inc
inc
inc
dec
repz
cmp
dec
add
mov
mov
sahf
add
push
dec
inc
clc
dec
add
mov
or
xchg
add
movsl
mov
cld
mov
add
lods
imul
sub
sub
mov
aas
push
cmpb
mov
int3
pop
es
xor
pop
out
inc
adcb
and
je
inc
mov
lock
add
dec
inc
mov
xchg
js
add
rcr
add
mov
dec
imul
add
jns
mov
mov
sub
add
jb
je
outsb
xchg
jge
jmp
push
adc
xor
or
mov
dec
mov
cmpl
push
cmp
and
inc
sbb
dec
cmp
sbb
out
std
hlt
in
pop
cli
xchg
push
lock
nop
das
mov
sub
addl
sbb
inc
sti
or
adc
leave
shl
mov
pop
cli
pop
es
jl
out
inc
pop
call
loopne
add
mov
xchg
push
add
pop
enter
popl
das
jle
psraw
add
outsb
or
add
sub
add
cmp
jle
cld
cwtl
or
or
lock
js
cli
add
cmp
sub
aam
clc
and
sbb
in
add
sub
push
dec
shrd
push
add
ss
dec
xor
out
xlat
push
dec
push
add
popa
jae
mov
add
fsts
or
jge
loop
mov
inc
cpuid
mov
movsb
push
jb
add
add
cs
ret
pushl
loop
loopne
imul
jl
and
cmpsl
dec
add
cltd
les
in
mov
hlt
movb
lret
xor
call
cld
pusha
fsubrl
inc
sub
or
xor
and
in
dec
roll
fistpl
test
adc
add
dec
faddl
and
rclb
in
cmp
call
test
cmc
mov
mov
add
push
xchg
clc
enter
lea
sarb
xchg
jmp
lret
dec
add
jae
xchg
dec
or
push
jnp
add
mov
popf
imul
mov
jnp
add
lods
fsubrs
bound
add
fisubrl
test
and
movsl
mov
push
dec
das
ja
scas
cmp
cmp
jmp
out
xor
dec
pop
sub
test
xor
xchg
mov
test
xor
in
add
repnz
mov
mov
imul
dec
jnp
mov
add
pop
xchg
dec
sub
push
sub
xchg
ret
in
sti
into
add
jnp
or
inc
push
arpl
push
cmp
scas
adc
fdivl
pop
pop
sbb
add
add
mov
adc
int3
mov
mov
push
es
sbb
ret
mov
shrl
push
movsb
adc
and
jns
mov
lds
lods
cmp
jmp
dec
fisubl
popf
adc
add
mov
mov
in
fldcw
pop
jo
in
xor
lock
mov
pushf
int3
iret
shlb
jae
add
adc
push
add
adc
fbld
hlt
in
rep
xchg
xchg
fs
cmc
aaa
jbe
add
je
mov
add
pop
enter
add
add
jns
xchg
pop
push
cmp
lret
loopne
cltd
adc
mov
pop
jmp
pop
jecxz
fists
fiaddl
popa
and
and
dec
js
ret
mov
and
mov
xor
lea
sbbl
and
jl
ror
mull
testb
mov
add
in
scas
dec
fists
mov
out
mov
hlt
in
sahf
inc
xor
add
dec
sub
or
adc
inc
adc
adc
cmp
or
add
test
inc
push
xor
outsb
add
orl
jne
sub
jno
mov
cld
sub
ja
dec
or
pushf
add
inc
jne
je
fdivrl
ret
imul
mov
dec
push
sbb
push
call
sbbb
fldl
add
pop
pop
push
push
lods
loop
or
cmp
fiaddl
jae
jnp
lds
and
test
aam
dec
mov
xchg
divl
and
add
add
mov
mov
ljmp
mov
inc
add
hlt
fstpt
faddl
push
mov
or
add
lock
xchg
repz
hlt
sub
mov
test
call
add
enter
test
popa
adc
jbe
adc
and
rcll
pop
loopne
inc
add
scas
jno
fcompl
mov
add
mov
cmp
add
dec
inc
inc
and
mov
fdivr
and
testl
dec
xor
sub
pop
add
cld
xchg
mov
add
inc
cmp
adc
jg
cmp
add
inc
cmp
jb
or
loopne
adc
popa
add
mov
sub
rcrb
bound
jae
rcrb
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
cmp
in
je
cwtl
or
je
add
sbb
add
add
xor
or
add
dec
adc
mov
sub
cmp
sub
inc
sbb
add
in
dec
add
imulb
pop
pop
push
push
and
imul
cmpsb
add
ljmp
jne
sbb
je
sub
cmp
mov
jp
and
sbb
sbb
scas
inc
jne
leave
into
stc
ret
fcmovb
andl
nop
xor
je
push
add
jbe
rorb
add
cmpsb
sbb
dec
add
ret
test
enter
std
call
scas
sbb
cmpsb
add
xorl
or
add
add
inc
adc
movsb
push
loope
les
jne
mov
dec
cli
mov
add
add
repnz
sbb
and
add
sbb
pop
ss
push
add
inc
nop
subl
mov
sub
add
adc
xlat
stc
or
outsb
mov
pop
jne
mov
addr16
repz
push
dec
in
add
push
out
jg
adc
and
xor
faddp
push
jno
ja
pop
nop
mov
mov
loope
adc
push
clc
or
rcl
je
xor
adc
sbb
aas
jmp
mov
mov
xor
xor
adc
in
fld
cli
call
faddl
xor
adc
movsb
jnp
add
stc
push
enter
add
mov
shl
xor
or
xchg
adc
jo
enter
dec
push
shlb
xchg
mov
out
add
icebp
push
or
adc
sbb
push
mov
sub
add
push
and
ret
ret
lsl
scas
cmp
stc
cmp
jmp
add
dec
shrl
add
loopne
dec
cmp
inc
adc
lret
pop
and
cmc
popf
inc
je
cli
inc
and
pop
add
std
add
adc
add
je
cld
shlb
or
add
jnp
addr16
add
fistpl
dec
test
jle
add
and
pushf
pop
enter
add
mov
sub
xchg
mov
push
pop
jnp
add
jo
cmovo
add
sti
call
aad
pusha
pop
add
cmp
iret
loopne
shl
int3
jmp
cmc
lea
sti
and
sbb
or
jp
add
cmc
clc
pushf
cmp
fsubr
loopne
ret
pop
sbb
and
push
fxch
mov
idivl
xchg
add
xor
adc
rep
inc
push
add
add
mov
cmp
adc
fisubrl
jae
pop
sbb
mov
les
and
push
xchg
sub
inc
call
jb
scas
sbb
clc
call
and
pop
enter
xchg
sub
sbb
clc
lds
les
cmp
scas
iret
and
sbb
scas
adc
je
mov
movsl
or
adcl
lds
cltd
jns
pop
jp
scas
jg
inc
mov
ss
mov
sub
push
mov
add
push
sbb
push
add
int3
adc
aam
enter
mov
add
or
mov
out
and
inc
adc
subb
add
movsb
add
mov
lods
insl
inc
xchg
push
and
sub
cmpsl
subb
rolb
pop
ljmp
sub
ret
xor
mov
sub
and
dec
stos
or
inc
testl
jl
daa
add
loop
mov
mov
xor
shlb
mov
icebp
sbb
xor
addl
add
popf
xor
loopne
cltd
daa
add
pop
mov
pusha
cmp
jmp
popl
xchg
and
pop
sbb
pop
jmp
mov
adc
roll
ds
xchg
mov
jo
add
les
pop
cmp
fidivrs
enter
lods
xchg
mov
pop
leave
verr
inc
inc
test
pop
and
cmpsb
shll
in
sbbl
jp
mov
sub
insl
ret
inc
mov
sbb
adc
loopne
push
inc
jmp
clc
xor
nop
stc
add
xlat
in
add
dec
jl
add
dec
add
pop
inc
dec
adc
test
andb
push
fidivrl
cs
sti
rcrl
shl
mov
xchg
fadds
lock
add
add
addr16
dec
mov
push
or
fdivrl
jbe
xor
add
loope
ret
add
rorb
add
fs
int
add
and
shrb
sub
loope
add
outsb
pop
jl
cmp
aas
add
inc
add
and
clc
cmp
jle
test
sub
imul
fistl
hlt
sub
sbb
push
adc
xchg
push
xor
add
cli
jg
das
fdivrs
mov
sbb
insb
adc
lods
lcall
xchg
sbb
add
sub
push
jnp
ja
in
outsb
test
jbe
cli
xlat
and
std
pop
cmp
jge
lea
cmp
lret
andb
scas
sub
test
add
lea
cld
cmp
sbb
out
add
add
fnstcw
ret
sbb
add
popf
push
sti
mov
dec
add
push
outsl
push
imul
mov
jo
push
or
call
inc
mov
add
lret
xorb
loope
push
mov
call
shrl
or
cmp
lret
jl
repz
mov
and
imul
mov
adc
movd
inc
stos
jge
into
mov
test
add
mov
or
pop
lsl
lahf
scas
mov
scas
sarb
mov
adc
rcll
js
add
sub
xchg
icebp
push
add
nop
sbb
add
inc
xor
inc
sbb
adc
nop
add
cwtl
invd
imul
sub
scas
add
jp
mov
mov
popf
in
mov
fildl
sub
mov
push
rclb
mov
add
adc
or
inc
cld
jg
int
xor
xchg
jno
std
mov
scas
mov
inc
jns
pop
cmpsb
and
stc
cmp
add
mov
dec
call
ret
add
push
imulb
inc
mov
mov
mov
inc
jb
push
shrb
inc
mov
js
sub
sbb
mov
add
pop
es
cmp
xorl
pusha
lock
adc
dec
cwtl
stos
inc
mov
dec
rcl
add
add
add
adc
or
mov
rcrb
das
call
push
sub
push
adc
inc
add
mov
les
out
fdiv
in
add
cwtl
enter
inc
out
adc
fiadds
mov
loope
pop
ret
push
jns
addb
adc
aaa
ret
js
cld
insb
adc
iret
add
or
lods
inc
pop
pop
adc
add
adc
inc
cld
xchg
xor
sbb
add
mov
mov
add
add
mov
adc
mov
outsl
addr16
in
sbb
and
mov
testb
add
cmp
jnp
add
mov
mov
jno
loopne
data16
push
dec
rolb
sub
and
mov
mov
add
push
jo
cmp
or
add
mov
sub
push
pop
orl
ljmp
xchg
mov
jb
cs
adc
flds
pusha
mov
scas
and
mov
mov
inc
movsb
add
jle
fwait
sub
ret
or
inc
rcll
daa
orb
push
pop
cld
into
sbb
add
xor
aam
mov
add
and
aam
flds
je
add
in
cltd
test
icebp
roll
loopne
and
jl
mov
scas
cmp
add
lods
inc
les
inc
jno
add
inc
and
hlt
xchg
adc
pop
out
add
push
add
and
test
add
inc
add
or
js
dec
xchg
add
cs
and
xchg
nop
lds
inc
pop
rclb
adc
adc
xchg
xor
add
push
shl
add
nop
add
fcomps
push
add
ret
pop
pop
inc
mov
aad
or
xchg
int3
ljmp
in
mov
out
mov
xor
int
and
sahf
adc
je
mov
aas
and
cmp
fs
sub
inc
decb
nop
inc
andb
add
mov
xor
mov
add
xor
sbbb
push
testl
add
mov
mov
aam
adc
or
mov
add
mov
sub
fwait
mov
in
mov
hlt
mov
das
push
in
dec
cmpsl
shl
inc
cs
sbb
add
inc
push
push
pop
std
jl
mov
cli
add
mov
adc
or
mov
movsb
mov
xchg
clc
test
jg
dec
push
cmc
test
jno
add
stos
cld
jb
out
add
sub
adc
icebp
les
jae
mov
push
jg
add
and
enter
dec
aaa
dec
pop
clc
adc
cli
sub
xlat
mov
adc
push
add
pop
mov
sti
sub
jmp
fisttps
mov
xchg
aad
pop
xlat
jnp
int3
mov
pop
add
insb
fldl
enter
repnz
pop
jbe
xchg
out
cmpsl
xlat
into
xchg
push
loop
add
push
push
sub
data16
mov
adc
fisttps
into
mov
pop
inc
push
sbb
xor
int
sbb
sbb
lea
or
inc
cmp
repnz
loop
adc
adc
mov
cmp
add
insb
outsl
insl
mov
in
jb
add
and
leave
mov
test
lods
dec
out
add
mov
mov
aaa
fs
or
sbb
sti
daa
inc
insb
sahf
decl
add
mov
inc
or
pop
mov
pop
add
das
insb
int
or
dec
mov
movsb
roll
inc
fadd
popf
lret
mov
cltd
shl
add
xchg
adc
sahf
lret
or
push
mov
clc
sub
mov
fistpll
popa
add
pop
les
mov
mov
xchg
out
leave
or
mov
ds
inc
adc
inc
inc
cmp
pop
icebp
or
les
and
adc
mov
dec
loop
add
mov
in
sti
shlb
or
cmpxchg
repnz
shll
sub
mov
int3
les
popf
cmp
pusha
add
fistpl
cmpsl
into
sbb
call
push
cwtl
and
daa
outsb
ja
call
add
pop
leave
pop
mov
cmp
mov
inc
int
add
lods
icebp
dec
fldt
adc
inc
scas
jae
les
add
inc
fdivrl
and
inc
mov
pusha
pop
xchg
sbb
cmpsl
jb
or
sbbl
mov
and
leave
stc
fildll
add
imulb
push
and
add
cs
mov
in
stc
adc
or
jge
movsb
mov
mov
pop
mov
pushl
iret
mov
ljmp
jmp
add
fisubrl
sarb
stc
pop
mov
mov
aaa
das
jno
scas
dec
fisubs
pop
out
and
clc
out
pop
out
or
xor
aaa
lret
sbb
stc
add
call
dec
push
push
mov
fimuls
xchg
jnp
mov
and
inc
mov
and
movsb
push
add
or
flds
out
push
and
test
or
stc
and
mov
cmp
inc
fistpll
adc
shrl
jmp
pop
inc
test
sahf
mov
adc
stos
loop
aas
nop
mov
stos
sbb
xchg
add
pushf
push
push
cmpb
and
pop
jbe
add
or
xchg
shl
pop
fsubrl
add
les
loope
adc
push
mov
repnz
loopne
shlb
test
and
pop
test
ds
aas
xor
scas
outsb
lret
add
sarl
or
xor
call
add
push
add
negb
mov
xor
call
jb
dec
sti
xor
sbb
xor
push
pop
add
dec
outsl
jnp
out
xor
and
add
lods
pop
call
xchg
aam
nop
out
jge
add
sub
pop
mov
cmp
inc
ljmp
sub
movsl
idivb
scas
imul
pop
adc
jg
add
decl
sbb
scas
add
sub
add
insb
aas
hlt
inc
add
sbb
scas
lea
adc
lock
daa
in
inc
cmp
sbb
add
pmuludq
cmp
dec
mov
addb
dec
and
hlt
ret
add
jl
dec
adc
and
add
push
es
inc
out
add
call
aas
xorb
xchg
out
mov
enter
in
cs
and
mov
add
shll
pop
in
adc
or
jmp
mov
xor
int3
lods
pop
dec
mov
xlat
sub
fnstsw
das
jl
adc
mov
clc
inc
add
mov
bound
push
xor
incl
nop
sub
shl
pop
add
out
pop
push
cmp
ret
or
pop
shlb
and
data16
mov
lods
sub
and
mov
rolb
pop
out
arpl
rcr
mov
sub
or
pusha
jmp
xor
ret
mov
cmp
mov
sbb
add
daa
dec
pop
mov
sbb
push
mov
push
sub
pop
cmp
insl
adc
xor
aas
or
adc
hlt
push
sbb
andb
mov
push
xor
repz
cmp
call
fildl
and
lock
jmp
mov
xor
pop
cmp
adc
call
lret
lds
sbb
jmp
or
inc
ljmp
daa
adc
push
adc
and
mov
xor
sub
mov
andb
mov
repnz
pop
cwtl
stc
xchg
jp
and
psubb
adc
scas
jae
orb
sub
cmpsb
or
movsl
add
les
mov
jo,pt
insl
push
inc
mov
adc
cld
xchg
jo
lret
add
cwtl
subb
out
dec
or
sub
or
enter
sub
pusha
or
in
jae
mov
pop
mov
jp
push
pop
cld
sub
push
in
pop
push
inc
test
cld
shrl
mov
mov
xchg
les
dec
mov
inc
and
or
in
pop
insl
cmp
ret
xor
or
pop
jecxz
mov
adcl
fists
in
cli
pop
add
push
xor
data16
test
sub
dec
in
les
jo
into
test
jl
out
cld
in
loopne
sbb
mov
mov
mov
popa
inc
loopne
loopne
push
add
rorl
jnp
hlt
mov
addb
lahf
loop
mov
outsl
inc
jbe
jno
es
ds
add
mov
xchg
mov
mov
mov
gs
or
cmp
out
pusha
fisubs
sbb
sahf
dec
and
clc
pop
cmp
jmp
add
xchg
cli
mov
add
test
lock
cmp
add
push
test
dec
lock
xchg
inc
notl
sub
or
mov
loop
mov
jnp
jle
add
lods
xor
testb
icebp
cld
or
mov
or
shl
pop
inc
cld
mov
or
push
cltd
mov
daa
xchg
jecxz
cld
dec
add
add
cmpsb
aam
push
icebp
adc
add
or
pop
cltd
pop
jle
mov
repnz
rcrb
pushf
lcall
xorb
sahf
xor
das
lock
pop
lahf
roll
sarl
mov
test
ret
push
adc
sub
not
push
and
sub
shrl
into
mov
inc
loopne
rorl
dec
cmp
lods
ds
jnp
inc
rclb
or
or
cmp
sub
xor
nop
and
and
dec
repz
or
dec
aam
repnz
add
adc
rcrb
inc
hlt
enter
pop
shll
cli
push
outsl
pusha
movsl
mov
out
pop
stos
and
add
add
hlt
xor
add
add
bound
xchg
or
mov
adc
xlat
adc
pop
push
push
movsl
jecxz
xor
dec
push
adc
and
inc
add
xchg
mov
lock
ljmp
mov
jo
add
mov
xor
leave
addl
cmp
inc
push
add
pop
add
mov
add
mov
add
inc
cmp
pop
clc
das
adcb
mov
cli
xchg
add
sbb
hlt
xor
loopne
push
enter
lret
add
ss
dec
sbb
add
in
cmp
cmpb
mov
jo
adc
or
mov
into
inc
out
add
sbb
pop
fsubs
xor
add
inc
sub
add
add
push
in
pop
add
xor
inc
dec
sete
xor
add
or
and
pop
addb
loop
add
jecxz
out
mov
nop
xor
xor
jo
xchg
or
sbb
outsl
add
push
in
out
add
xor
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
xor
push
mov
mov
push
call
cli
cmp
push
and
sbb
icebp
mov
inc
sbb
mov
outsl
enter
nop
sub
and
pop
inc
xor
add
stc
cmp
mov
pop
add
enter
dec
and
and
push
clc
jb
pop
or
or
cwtl
pop
stos
testb
in
and
mov
pusha
cs
xchg
dec
ret
ss
stc
dec
mov
add
call
movzwl
sub
nop
js
jl
pop
add
repz
and
test
negb
bound
hlt
jb
ds
xor
rcll
inc
pushf
jp
mov
mov
enter
push
test
test
std
jnp
add
jge
add
call
add
daa
or
outsl
mov
fstpl
xchg
out
sub
pusha
pop
lock
inc
add
jb
sbb
faddl
dec
test
add
movsb
pop
and
push
add
test
fmul
rolb
mov
in
jp
add
xor
push
sbb
inc
fiadds
xorb
aas
les
jb
fdivrs
fmull
add
out
or
loopne
int
shlb
push
pop
fbstp
aas
negb
pop
bound
mov
repz
or
or
arpl
xchg
mov
clc
xchg
shll
ja
cld
xor
add
mov
cmp
ret
loopne
or
sbb
aas
enter
xor
and
sbb
inc
and
movb
and
inc
add
test
push
inc
sbb
je
mov
or
push
pop
add
sbb
fadds
jns
lret
cld
enter
sbb
add
fldl
mov
aas
xorb
mov
push
or
roll
shll
dec
and
add
in
add
adc
jp
pop
je
adc
test
mov
add
adc
ljmp
loopne
add
add
dec
jne
idivb
sbb
icebp
xor
rcl
es
add
and
xor
mov
das
xor
aam
add
jo
scas
add
pop
pop
sub
pop
xor
add
jle
in
mov
cmp
ret
mov
add
or
jle
add
int3
rolb
xadd
iret
push
or
xchg
nop
lret
orb
add
rcr
or
neg
negl
inc
sbb
add
rcr
sub
jmp
push
add
inc
filds
pop
add
rcrb
cmp
add
aam
aad
rclb
adcb
js
in
call
jo
add
rcl
rorb
loopne
lock
xor
shl
repnz
xor
push
ss
cmp
add
add
shlb
cmp
adc
cmp
rolb
cmp
cmp
add
jo
add
sar
cmp
sbb
sub
jmp
pop
sub
out
scas
nopl
pxor
sub
arpl
js
in
and
lcall
test
and
xor
or
jecxz
and
cmp
shlb
and
xlat
mov
xlat
mov
mov
ja
add
cmpsb
xchg
andl
push
insb
shrl
scas
add
outsl
sbbb
inc
scas
shrl
sbb
stos
add
test
push
inc
mov
rclb
jp
aas
mov
push
jg
mov
cmpl
jne
cmp
ja
mov
mov
inc
jbe
jb
mov
mov
jae
mov
jno
jo
jo
adc
nop
add
rclb
inc
je
jbe
js
sbb
sbb
add
xchg
adcl
pop
inc
jo
in
roll
sbbl
loopne
pop
mov
pop
pop
inc
cwtl
fisttps
lahf
mov
sbb
dec
xchg
add
dec
out
dec
cmp
or
or
rolb
inc
inc
xchg
addr16
addb
cmp
data16
cmp
test
jl
push
mov
adc
cld
pushf
mov
pop
rcrl
popf
mov
xor
ret
inc
and
and
push
sbb
cpuid
sub
loopne
sbb
add
fcompl
pop
outsb
jecxz
andb
xor
lods
push
ds
out
add
jae
call
mov
pop
fnstcw
jbe
in
xor
out
ret
and
and
cwtl
mov
push
add
in
lock
adc
add
add
push
mov
cmp
sub
arpl
xorl
push
add
shrd
jmp
sub
jmp
push
pop
out
pusha
rclb
add
cld
mov
add
pop
dec
or
lods
xor
ret
orb
lcall
add
dec
or
xlat
lcall
add
pop
sbb
pop
pop
adc
adc
pop
lods
add
jle
and
mov
outsl
enter
cld
dec
bnd
aad
ror
push
lods
cmp
cmpsb
jmp
add
call
inc
leave
clc
or
add
jb
xchg
outsl
pop
inc
ljmp
test
cld
jbe
adc
cmp
je
shrb
ja
add
push
lea
add
jmp
mov
xchg
add
jp
mov
pop
scas
js
add
add
push
and
addr16
push
mov
shr
cmp
add
mov
mov
sub
or
subb
push
clc
aad
add
lcall
add
ljmp
mov
insb
add
inc
jno
sub
fiadds
add
not
and
pop
daa
add
or
pop
add
ret
inc
incl
ret
jb
sbb
clc
cmp
rol
jne
jg
add
dec
or
bnd
dec
rep
xchg
mov
into
roll
adc
addl
gs
cmp
push
mov
stc
iret
fsubp
icebp
push
push
and
rorl
inc
adc
lret
lock
add
scas
and
and
and
xchg
jno
sub
add
add
mov
fwait
enter
xor
addb
cmp
cmp
push
adc
loopne
cmp
dec
mov
add
add
push
xchg
cli
fisubs
sbb
movsl
stc
or
sub
xchg
mov
sar
pop
call
sbb
movsb
ret
addr16
adc
ljmp
and
inc
inc
popa
adc
cmp
xchg
mov
xor
mov
and
add
xor
mov
ja
lods
inc
mov
sbb
push
adc
add
leave
or
nop
testl
push
repz
mov
outsb
sub
dec
lock
or
pop
leave
loope
adc
add
adc
cmp
add
adc
jle
lock
xchg
mov
mov
sub
add
pop
fnstenv
xchg
nop
sub
sbb
aas
jno
addb
and
enter
or
push
sbb
and
lret
or
pop
icebp
shll
cmp
add
pop
push
or
stos
enter
orb
xor
sbb
rcl
repnz
out
xchg
pushf
sbb
or
or
add
out
idivl
jmp
sub
les
stos
and
inc
aad
xor
and
pop
sub
ret
dec
cld
icebp
or
mov
test
cld
xchg
loopne
popf
sahf
push
lret
mov
or
push
or
pop
je
hlt
add
inc
pop
mov
rclb
test
add
fadd
and
leave
je
jl
cs
ljmp
int
pop
dec
mov
xor
xor
psubw
daa
call
add
or
add
dec
sbb
push
dec
lahf
mov
data16
and
jmp
inc
push
mov
cltd
add
imul
cmp
andb
in
push
add
jae
mov
add
add
mov
in
int3
inc
lds
pop
test
pop
lea
mov
mov
adc
adcl
add
push
push
add
adc
or
lret
adc
sub
adc
adcb
push
mov
je
add
push
pop
mov
das
pop
mov
inc
mov
dec
subb
or
in
pop
add
mov
adc
lret
add
movsb
adc
pop
sbb
add
enter
jae
jns
shlb
sub
rcl
in
push
xchg
add
jbe
test
clc
jle
mov
push
push
mov
sbb
pop
add
jb
loop
std
in
pop
lods
adcl
enter
and
ss
push
insl
cmc
and
rcll
hlt
in
repnz
data16
test
mov
xchg
push
ljmp
sub
fwait
jnp
lsl
sbb
jne
push
int3
sub
add
dec
xor
repz
inc
jecxz
jecxz
hlt
mov
jmp
xor
add
nop
adc
sub
xchg
sbb
rolb
shll
inc
add
nop
jl
mov
cld
sbb
sar
rol
pop
jl
add
dec
gs
hlt
cld
lret
fisttps
test
inc
dec
jmp
mov
push
imul
hlt
fcompl
xchg
mov
or
and
inc
rcrb
adc
jl
add
dec
cmp
xchg
push
inc
fs
jo
aas
shr
addb
mov
js
jne
sbb
mov
add
dec
loopne
out
xchg
add
mov
rclb
fwait
aam
and
shl
inc
adc
cmp
fistps
movsl
xor
shrl
fcoms
rcrb
mov
nop
lods
jns
add
mov
lahf
add
adc
or
pop
aad
inc
popf
std
insb
sbb
add
push
out
add
pushl
fs
push
push
mov
add
or
mov
cmpl
or
out
sbb
xor
lahf
inc
xchg
adc
mov
loop
fs
add
mov
add
add
sbb
shll
inc
mov
imul
jb
push
or
das
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
and
xor
mov
pop
cltd
sub
aam
or
pop
rolb
push
shl
cmp
divb
and
test
sbb
pop
movsb
in
jmp
addl
loope
std
sbb
jbe
inc
and
mov
add
push
push
icebp
mov
cmp
sti
pop
jmp
xchg
into
push
mov
lock
adc
cmp
aam
call
rclb
int
mov
add
es
stos
dec
push
dec
fsubr
arpl
push
sub
rorl
pusha
mov
add
aaa
shll
dec
das
fstpl
jns
adc
pop
mov
cwtl
push
arpl
imul
pop
inc
mov
dec
loope
sub
and
inc
inc
add
scas
push
push
cli
add
fdivs
push
push
jge
adc
add
mov
pop
inc
inc
lock
imul
sub
js
pop
jb
push
decl
lcall
pop
pop
dec
jns
outsl
in
call
adc
add
lock
test
loope
adc
push
jge
es
rclb
ljmp
movsl
cmp
add
dec
pop
leave
repz
mov
aad
or
push
inc
into
inc
mov
repz
mov
fs
pop
jo
rolb
dec
push
in
shrb
cld
enter
out
jb
ret
call
mov
movw
add
push
inc
or
adc
or
lods
cs
adc
add
push
sub
xor
sub
sbb
sbb
or
mov
mov
add
imul
verr
outsb
sub
push
les
xchg
sbb
addb
lea
adc
add
bound
ret
xchg
xchg
mov
jns
add
and
test
lods
hlt
inc
movsl
push
ds
ficomps
xor
jns
sbb
dec
test
push
aam
outsl
mov
and
xchg
dec
iret
cli
cmp
daa
add
inc
mov
mov
mov
arpl
cmp
xor
inc
cmp
adc
jl
or
pop
or
add
xchg
movb
or
adc
dec
inc
arpl
push
pop
mov
add
sti
ret
je
or
jmp
adc
repnz
dec
xorb
pop
jne
out
and
push
add
repz
inc
outsl
xor
cs
add
aas
loopne
fdiv
inc
pop
add
and
pop
sub
or
scas
jne
lret
add
ds
push
in
push
lds
mov
jl
fsts
in
or
sub
inc
jno
sub
sarl
push
js
adc
add
outsb
mov
or
jb
sbb
repnz
cmp
jne
inc
pop
add
push
jmp
add
dec
and
mov
xor
adc
loopne
sub
gs
add
mov
add
mov
jb
pop
insl
pop
std
stos
mov
jo
mov
xor
aas
arpl
xlat
imulb
rclb
cli
xchg
lea
pop
mov
mov
dec
or
jge
mov
add
lds
and
jo
mov
adcb
sub
sub
cmp
sbb
pushf
lret
repz
sub
jl
mov
or
jmp
cmpsb
hlt
call
jns
mov
fistpl
inc
rcr
add
je
rcrl
or
test
cld
enter
lret
add
push
push
js
add
or
adc
add
std
repz
cld
mov
movsb
sbb
mov
xorl
inc
add
test
cmc
and
cli
clc
add
pusha
add
mov
mov
fistpl
out
mov
lea
addl
scas
sbb
sbb
cmp
mov
push
add
imul
add
sub
out
cmp
pop
jmp
jb
mov
sub
cmp
movl
inc
ds
mov
jne
push
cwtl
xchg
mov
add
push
out
ja
sbb
test
jmp
inc
adc
nop
pop
fldl
xor
sbb
test
dec
adc
push
mov
rorb
mov
pop
pop
orb
adcb
xor
dec
inc
dec
scas
dec
or
xchg
ja
adc
xorl
pop
leave
sbb
flds
jle
and
inc
add
ret
fistps
inc
xor
xlat
loop
inc
pop
sub
adc
cmp
cmp
cltd
inc
push
mov
mull
ret
adc
and
enter
loopne
add
add
mov
loop
faddl
sbb
sbb
add
xchg
xchg
addr16
or
xchg
pushl
push
push
cmp
pop
dec
jge
sub
mov
cmp
jb
add
dec
xchg
fnsave
add
cmpsb
jge
adc
push
loope
dec
mov
sbb
ljmp
xor
rolb
pop
ret
test
cmp
hlt
inc
testb
cmp
roll
mov
or
idivb
and
cmp
xchg
add
or
rcl
push
jmp
inc
roll
out
fadds
push
or
fstpl
dec
add
ret
sub
pop
mov
mov
add
test
cld
rcl
je
add
dec
mov
cmp
mov
add
pop
pop
xor
add
rcll
cmp
inc
sbb
out
fsubrl
adc
inc
jne
aas
mov
xchg
add
adc
cmc
les
testb
stc
adc
repnz
adc
jmp
xor
add
sti
rorb
xor
xchg
mov
gs
notl
rclb
pop
cmp
mov
add
popa
xorl
or
xor
mov
add
mov
outsl
repnz
pushf
ds
adc
xchg
sbbb
rolb
es
cmpsl
fisttps
and
inc
adc
mov
sbb
pop
add
sub
rcr
jb
dec
adc
adc
ja
or
lods
sub
sbb
pop
repz
frstor
pop
inc
mov
add
dec
scas
xor
add
dec
rcr
add
mov
or
push
cld
pop
shll
out
cmp
andb
pop
add
mov
out
or
adc
jmp
push
add
add
push
inc
or
sbb
inc
or
ljmp
sub
ds
add
test
lock
sbb
add
out
sub
fwait
dec
xor
in
sub
mov
add
inc
mov
add
les
xchg
mov
add
inc
mov
sbb
fisubs
ja
add
sbb
and
sbb
mov
and
lret
inc
lock
cwtl
add
orb
mov
outsl
call
sbb
dec
mov
mov
or
cs
repnz
push
movb
sub
dec
jmp
andb
adc
test
rol
mov
cli
sbbb
getsec
test
notl
mov
adc
jne
jns
push
rclb
xchg
sbb
adc
push
push
rclb
mov
push
inc
stos
rolb
mov
sahf
push
out
cld
call
cmp
inc
jg
or
push
addb
add
push
pusha
data16
dec
add
daa
dec
cmp
sub
mov
add
inc
jnp
push
sub
push
sub
test
xchg
mov
or
push
aam
push
xchg
cmp
rolb
push
jg
add
sub
push
lock
adc
rcrl
xchg
xor
cmc
and
or
cmp
lods
nop
in
add
pop
dec
push
xor
sbb
pop
sbb
inc
movsb
xchg
pop
mov
sub
push
cs
mov
insb
imul
ret
cltd
xor
stos
call
xchg
dec
push
mov
xchg
or
xchg
rcll
and
dec
inc
std
and
add
push
aam
adc
inc
lret
add
stos
cwtl
fnstcw
add
add
or
add
cltd
add
fisubrs
mov
cmpsb
mov
adc
es
add
stc
ds
call
test
lea
xor
call
rolb
sbb
mov
inc
dec
sub
testb
inc
add
push
dec
out
xchg
lea
mov
gs
mov
cmp
xor
push
inc
jo
scas
pop
nop
cli
pop
aas
lock
or
mov
in
jle
mov
adc
ds
mov
cmp
push
add
sub
test
lahf
hlt
or
add
push
cs
das
pop
jbe
jo
push
add
xor
add
add
clc
pop
jg
push
mov
jbe
pusha
sub
pop
and
add
push
mov
xor
lret
xchg
add
jge
mov
das
push
adc
or
inc
or
push
push
gs
xchg
out
add
fs
add
mov
pop
push
add
xchg
pop
adc
clc
or
divl
add
mov
jae
aam
or
lahf
inc
xchg
add
mov
pop
mov
or
hlt
cmp
out
aad
outsl
xor
or
xchg
ljmp
fistpl
fsubs
cmp
add
enter
icebp
insb
mov
fadds
add
jge
push
jg
mov
add
call
enter
loop
adc
getsec
pop
dec
dec
and
mov
fsubs
lea
rolb
stos
and
xchg
push
adc
scas
jne
cwtl
and
jo
fdivrs
add
fs
add
mov
add
rcr
sbb
aas
add
loope
xor
inc
fdivs
pop
mov
jle
jo
pop
add
dec
xor
push
or
pop
das
es
sbb
push
xor
mov
cs
hlt
in
adc
pop
ds
add
outsl
cltd
and
jae
cli
add
jl
orb
pop
es
leave
lret
sub
inc
jo
and
mov
add
in
mov
imul
call
dec
daa
add
fisubs
mov
jge
fs
push
shrl
pop
pop
test
push
pop
push
jp
and
test
inc
sub
inc
jns
or
mov
bound
nop
add
mov
xor
in
and
and
adc
pusha
add
add
xor
sub
sub
sbb
add
adc
mov
sbb
add
add
adc
add
insl
mov
xor
orb
out
mov
movb
cmpb
add
or
add
sub
add
cli
add
push
push
mov
add
add
test
or
xor
add
pop
push
xor
sub
add
cmpsb
push
mov
adc
js
cld
inc
push
push
pop
fucom
scas
sbb
cli
sub
push
add
and
pusha
pmuludq
mov
add
sarb
sbbb
dec
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
xor
jmp
cltd
sub
pop
int
sbb
add
into
mov
fadd
push
push
inc
mov
push
add
out
fimuls
leave
add
pop
jecxz
add
sbb
fcomps
fwait
mov
in
enter
sub
mov
push
inc
dec
xchg
dec
inc
push
pop
mov
lock
xchg
add
xor
push
fstpt
ds
gs
adc
clc
shl
add
ljmp
add
push
pop
sbb
jle
xchg
test
jo
push
nop
addb
and
cmp
sub
popa
inc
movsl
mov
sub
pop
jno
inc
xchg
add
xchg
movsl
mov
mov
dec
add
add
iret
int3
xchg
ret
pop
add
adcl
int
jge
mov
repnz
call
repz
jnp
andb
ds
push
add
insl
orl
adc
popf
adc
cmpsb
adc
xchg
lcall
and
aas
shlb
and
mov
cmovb
add
repnz
add
std
in
ret
pop
mov
add
xchg
xor
jns
pop
sarl
sbb
add
rcrb
add
test
fldcw
push
shlb
call
push
iret
add
inc
sub
add
mov
rol
rorb
fadds
xchg
inc
dec
stos
jp
add
je
flds
add
cld
int3
test
pop
es
cmp
mov
in
mov
andl
hlt
test
jp
add
aas
daa
cmp
mov
mov
mov
add
push
mov
rcrb
enter
xorl
subb
cmp
add
adc
or
sub
add
dec
mov
add
add
scas
lds
ds
add
xor
sub
sub
mov
add
repz
push
cmp
add
add
sbb
sbb
push
loopew
sub
add
xor
add
stos
inc
rcr
in
push
add
xchg
push
mov
xor
dec
cmpsb
push
std
add
add
daa
or
adc
loope
sub
or
mov
aad
xchg
sbb
cmp
jnp
xor
loope
xor
pop
cwtl
pop
icebp
int
push
decb
lcall
in
add
gs
cmp
outsb
jl
adc
add
test
add
sub
inc
cli
add
xor
fs
and
push
sbb
fwait
add
jecxz
sbb
push
add
push
dec
add
in
arpl
lds
mov
dec
add
mov
aas
ret
sbb
or
xor
aaa
lock
arpl
jb
imul
push
stos
inc
insl
add
sahf
add
ret
and
stos
xor
mov
icebp
add
movsl
ret
sub
test
mov
pusha
xchg
insb
xor
jne
push
data16
sarb
aam
push
pop
into
test
mov
out
add
lret
add
adc
push
stos
sub
icebp
add
dec
pop
in
xor
pop
les
jecxz
jns
ss
add
pop
mov
or
add
inc
or
lds
push
ret
add
cltd
fnstsw
sub
js
pusha
adc
add
push
pop
fsubrs
xchg
mov
push
ds
cmp
push
sub
jecxz
jo
subl
nop
out
sbb
mov
or
fs
je
ret
adc
xor
jb
sub
sbb
cmp
or
fs
rolb
test
leave
cmp
lods
pop
adcb
jmp
adcl
movsb
push
and
sub
clc
pop
lcall
in
scas
add
test
repnz
repnz
imul
stos
mov
nop
je
cmpsl
sbb
add
cmp
or
or
clc
dec
int
mov
add
sbb
hlt
scas
xorb
adc
outsl
andb
push
test
mov
push
lock
inc
fildll
dec
ja
cmp
aas
xor
pushf
and
lds
call
gs
sbb
sti
lcall
in
addr16
pop
shlb
lea
xchg
adc
adc
add
cmp
xor
inc
test
mov
mov
add
xchg
stc
sbb
xor
mov
cmp
add
and
movsl
cld
add
xor
or
enter
scas
xchg
and
loopne
jmp
adc
or
xchg
stos
scas
adc
ret
jns
repnz
sub
inc
cmc
or
icebp
push
sbb
jle
and
loop
sbb
sub
mov
add
dec
xor
dec
mov
add
sub
add
pop
hlt
pop
pop
xchg
add
lret
clc
lcall
add
mov
pushf
ret
and
sub
or
or
lea
aam
mov
pop
fstl
and
jno
fisttpl
cmc
push
mov
cwtl
add
lret
mov
add
stos
xchg
iret
test
popl
int
or
add
les
dec
fistl
cmp
mov
push
jg
call
and
mov
stc
nop
mov
inc
xor
add
inc
add
xor
add
xlat
mov
aas
cld
mov
or
lods
fisubrl
ror
add
push
not
movsl
cmpsl
sbb
add
test
fists
cmp
pop
add
cmpb
and
xor
sarb
dec
imul
iret
inc
shlb
jmp
pop
add
xor
sub
inc
sbb
add
int3
and
dec
out
or
add
mov
subl
sbb
push
das
xchg
pop
movsb
rorb
out
setno
and
xor
add
push
loope
and
or
test
add
and
dec
lods
sti
cmpxchg
scas
dec
inc
ficoml
shrb
mov
sahf
test
jns
mov
or
cmp
fdivrs
lea
add
test
into
sbb
mov
push
inc
add
add
mov
call
cmp
lock
jne
cwtl
daa
out
add
xchg
lahf
cld
movsb
adc
mov
sarb
xorb
loop
dec
ds
repnz
and
addr16
shlb
and
mov
mov
div
add
xchg
rcrb
cmp
dec
or
mov
imul
lock
add
lock
je
adc
mov
xchg
les
jl
dec
add
sti
pop
sub
dec
movl
xor
sbbb
loope
lret
pop
das
xchg
sahf
adc
jle
aaa
mov
call
cmp
cmp
js
in
clc
or
cmp
dec
mov
or
scas
add
mov
je
pusha
adc
sbb
das
add
mov
lret
push
add
mov
and
gs
sahf
hlt
xor
cmp
lahf
push
adc
call
add
repnz
add
ja
cmpsl
aad
inc
jg
sub
aas
mov
push
add
or
int
inc
pop
xchg
out
adc
ret
mov
out
cld
loop,pn
cmpsl
add
scas
je
inc
mov
lea
xor
gs
dec
mov
enter
data16
pop
leave
mov
daa
iret
add
sub
add
pushf
cmp
add
cmp
sbb
pop
cmp
das
dec
mov
fdivs
movl
cmp
pop
cmpsl
fcoms
xchg
jecxz
xchg
mov
add
mov
pop
add
inc
jge
pop
movsb
pop
push
sub
push
sbb
jns
push
enter
inc
dec
jno
xchg
fs
jge,pn
fidivl
out
les
add
sbb
mov
fbld
push
pusha
sub
cmp
jno
add
jne
xchg
add
push
jns
or
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
add
lock
loope
scas
add
xchg
sub
add
sub
mov
pushf
hlt
mov
add
fildll
aas
lcall
inc
inc
mov
std
lret
push
pop
sbb
mov
rcrb
popf
mov
in
sbb
cmp
les
push
test
sub
jb
inc
dec
or
lret
pop
xor
jo
pop
std
add
popf
or
adc
mov
lods
sub
add
scas
jecxz
imulb
mov
dec
xor
cwtl
adc
or
dec
sbb
jne
stos
movsb
adc
mov
and
stos
inc
repnz
push
add
push
fucom
inc
fdivrl
xchg
into
sbbb
les
out
mov
add
lea
mov
repnz
mov
adc
push
out
xchg
inc
daa
push
inc
push
xchg
jne
add
mov
je
add
adc
imul
add
inc
push
aad
mov
fiaddl
add
xor
imul
lods
fisttpl
test
xchg
mov
out
cmc
cwtl
hlt
jne
or
std
push
add
dec
push
push
ret
jmp
and
jae
adc
mov
sub
push
or
and
cld
rcll
mov
in
mov
and
ljmp
xor
or
test
and
xor
sub
inc
sbb
push
cltd
jl
add
sub
adc
movsb
push
jns
jge
je
add
neg
add
pop
and
out
or
xorl
add
jne
incl
jle
mov
aad
add
loopne
bound
call
and
jmp
roll
repnz
jnp
or
in
adc
out
pop
sub
addb
ljmp
js
sar
cli
add
insb
xlat
cmovg
cmpb
xor
mov
je
bound
push
pusha
push
sbb
rol
jnp
or
cmove
add
and
jmp
inc
sbb
dec
jne
addl
jg
pop
sub
sbb
aas
aaa
pop
sbb
and
cltd
in
pop
test
add
dec
es
scas
sub
loopne
cwtl
sbb
mov
add
and
cwtl
push
add
pop
jp
mov
pop
push
rolb
ss
add
jle
ret
sbb
and
inc
dec
cmpsb
out
push
add
sbb
push
and
add
inc
jo
mov
xor
cmp
pop
je
add
xor
cmp
loop
add
idivb
add
sbb
add
movsl
inc
lea
add
ret
sti
mov
ja
add
or
mov
xlat
movl
mov
add
xchg
mov
add
push
call
prefetch
pusha
leave
mov
or
add
push
sbb
push
mov
dec
or
jbe
sub
ret
js
xor
pop
inc
lret
mov
sbb
dec
mov
sahf
pop
jae
jb
cmp
mov
mov
xchg
mov
dec
inc
subb
lret
adc
xchg
inc
push
jo
aaa
push
jle
shll
add
jl
cmc
jp
insl
clc
dec
pop
pusha
add
icebp
shlb
sub
mov
xchg
mov
or
dec
pop
pushf
loop
sbb
decb
dec
add
inc
jb
out
and
nop
pop
cmc
decb
mov
stos
jo
add
dec
sbb
pop
mov
setno
pop
xlat
add
stos
cmp
testl
mov
pop
add
lret
adc
daa
add
and
in
fisubrl
push
jo
add
inc
ljmp
ret
movb
cmp
push
add
aaa
out
sub
les
pop
mov
xchg
push
xor
inc
add
in
or
sbb
cli
jns
xchg
add
push
movsl
cmp
xchg
mov
add
nop
push
dec
ljmp
mov
inc
insl
ja,pn
bound
pusha
fistps
adc
arpl
jge
push
jbe
outsb
pusha
addr16
sbb
push
add
inc
pusha
jbe
outsb
stc
add
dec
fnstsw
imul
fs
cmpsb
or
inc
push
popa
add
jge
jl
inc
nop
add
outsb
loope
addr16
clc
stc
push
jo
inc
pop
sbb
pop
outsl
insb
andb
pusha
ror
jae
jge
pop
inc
mov
and
inc
adc
xorb
push
fwait
or
jno
jp
out
fimuls
adc
arpl
push
insl
ja
add
mov
fs
add
xchg
or
jbe
sbb
mov
ret
je
loopne
outsb
lods
sbb
icebp
dec
push
jbe
fs
jg
mov
or
push
jae,pn
add
inc
outsl
ljmp
sbb
push
xchg
imul
arpl
inc
jno
je
jns
pop
addr16
popa
andb
xchg
je
sysret
mov
dec
sahf
loop
outsb
imul
sarl
sahf
inc
decb
add
push
push
imul
sti
and
xchg
pusha
clc
lahf
add
push
push
xor
xchg
sbb
inc
adc
adc
add
jbe
mov
push
mov
insl
data16
jp
lock
call
xor
outsl
sub
loopne
push
push
ljmp
adc
pusha
movsl
xor
inc
ja
dec
arpl
mov
je
cmp
imul
lret
insl
jnp
add
fcoml
or
loopne
add
mov
mov
les
pop
movsb
add
test
inc
cmpsb
xchg
cltd
add
sub
add
dec
sub
or
pop
push
mov
inc
push
cmp
adc
cmp
sub
add
rolb
push
cmp
ret
inc
pop
subb
and
cmpsl
sbb
lcall
popa
divl
sbb
xor
xchg
lods
loopne
pop
jecxz
sbb
push
inc
jns
sbb
cmp
sti
loopne
adc
jl
and
fldl
xchg
hlt
mov
or
adc
js
pop
cmpb
sbb
sub
inc
gs
into
dec
xorl
and
inc
inc
add
xor
adc
das
es
rorl
call
add
push
sbb
and
inc
push
adc
xor
xor
sbb
add
shrb
add
test
mov
in
push
adc
icebp
in
out
or
pop
push
es
mov
sarl
add
pop
ret
push
add
popf
pop
xchg
cmp
repnz
mov
pop
or
push
subl
sarb
mov
sub
mov
pop
cld
mov
xor
cmp
jne
mov
add
jmp
test
pop
clc
sbb
xor
xor
in
push
movsl
stos
mov
xchg
scas
add
enter
ljmp
push
add
das
test
fildl
cld
lock
add
nop
enter
lea
lock
push
mov
mov
decb
insb
ds
mov
andl
int3
add
fisttpl
je
pop
mov
pop
mov
jbe
filds
por
add
test
aaa
push
mov
pop
cmp
stc
jmp
push
add
mov
fldcw
push
push
inc
dec
addr16
add
js
mov
fcoms
lahf
scas
pop
mov
mov
iret
inc
les
ret
int
cmp
inc
adc
add
pop
jg
les
test
xchg
les
jbe
aaa
xor
hlt
push
add
mov
jg
sbb
cmp
rolb
push
push
add
out
and
adc
add
repz
sub
add
in
das
mov
sbb
out
add
movb
fisubrs
mov
cltd
push
xor
jle
add
adc
pop
add
mov
mov
movsl
add
aas
cmc
dec
jl
add
jp
inc
add
and
pop
push
jo
dec
dec
pop
add
mov
fcoms
cmp
push
sbbb
add
add
dec
jmp
mov
fisubrl
jmp
pop
add
cmp
adc
ret
sub
adc
add
adc
mov
add
jmp
xchg
mov
add
je
add
das
push
dec
pop
jmp
jp
add
mov
stos
xchg
sbb
or
scas
into
pop
push
rcll
add
scas
push
or
mov
in
fadds
or
mov
rolb
dec
cmp
or
imul
mov
sbb
add
and
pop
addb
xor
add
incb
mov
imul
jae
add
jecxz
add
fsubr
push
add
and
pop
nop
ret
daa
xchg
jmp
inc
dec
sbb
cmc
sarl
fstpt
mov
jmp
outsb
add
jb
loopne
add
test
scas
adc
dec
xchg
add
cmp
lahf
daa
push
pop
ja
mov
jmp
icebp
bound
fldenv
and
add
cli
into
and
mov
jbe
mov
add
cmpsl
push
and
out
xchg
inc
inc
jmp
or
add
or
lret
and
add
or
add
or
xor
jmp
cltd
push
add
xchg
subb
push
jne
sub
and
ret
fst
mov
pop
cmpb
sbb
loopne
inc
add
xchg
lods
cmc
cmp
shll
push
ret
jg
add
test
testl
stos
shll
mov
addr16
adc
adc
pop
pop
bound
inc
cwtl
or
push
xchg
cli
cmpsb
in
hlt
xor
sbb
cwtl
test
adc
xchg
adc
adc
sub
aas
js
and
test
rorb
pop
lds
xlat
mov
dec
sub
rolb
jge
icebp
jl
loopne
cwtl
pusha
das
andb
outsb
add
sti
cmp
push
fcomi
scas
out
inc
or
subb
add
aad
push
pop
add
dec
loope
jnp
add
xchg
mov
lock
sub
or
cmp
add
movl
sbb
or
ret
pop
lret
leave
sbb
sbb
sbb
cmp
push
adc
add
jne
lods
lahf
hlt
mov
push
pop
inc
inc
or
lret
xchg
sbb
inc
scas
add
mov
call
mov
cmp
jle
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
add
loop
fs
and
jnp
jns
adc
and
add
insb
pop
fsubrl
xchg
adc
dec
push
pop
cli
mov
pop
jle
or
pop
jmp
loop
xlat
nop
jno
fistl
pop
inc
push
add
or
repnz
in
ds
mov
push
xor
jmp
repz
rolb
call
cmp
inc
jae
mov
sti
neg
pop
sub
pusha
inc
inc
mov
rorb
jmp
push
push
sub
test
ljmp
dec
js
mov
cmpb
and
rorl
add
add
in
add
cs
add
out
jmp
out
inc
jne
add
add
jb
xorl
nop
add
cld
and
int3
setb
add
ljmp
cmp
aaa
mov
in
lea
mov
push
cmp
sbb
push
sarl
add
pop
mov
xor
cld
add
mov
add
mov
jb
fadds
repz
mov
cmp
adc
ds
dec
add
aaa
xchg
loopne
add
cmp
shlb
enter
dec
mov
out
push
scas
stos
ffreep
jle
call
aam
cmpb
shll
add
add
aaa
adc
out
adc
and
cvttps2pi
add
cli
or
xchg
mov
rcrb
addl
loopne
iret
mov
in
data16
push
sbb
cmp
sbb
adc
add
sbb
fimuls
clc
jge
add
rolb
add
loopne
jle
out
lods
fadds
add
add
cmc
add
xlat
iret
test
mov
inc
inc
shr
and
mov
fstl
push
mov
sti
lret
jne
rorb
jg
xchg
and
add
adc
dec
ficoms
push
adc
or
push
jmp
xchg
or
mov
out
push
test
add
dec
mov
addb
inc
cltd
sbb
or
rorl
adc
mov
insb
fadds
xchg
adc
clc
inc
sbb
scas
add
dec
inc
push
lret
mov
jno
and
mov
aaa
mov
sarl
testl
adc
icebp
jp
jbe
pushf
enter
ljmp
mov
xor
add
hlt
xlat
clc
lahf
xchg
add
scas
cmp
add
inc
movsb
test
sbb
in
add
jmp
call
add
xor
cmpsl
loopne
xchg
lcall
les
stos
pop
insb
hlt
and
inc
sbb
lahf
sub
sbb
call
pop
scas
loopne
add
int3
add
add
aam
inc
in
mov
ficompl
inc
nop
scas
je
pop
mov
jl
pop
cld
lret
add
outsb
lods
jecxz
adc
inc
mov
icebp
inc
mov
cmp
inc
fadds
push
push
add
dec
lock
pop
test
shlb
sbb
mov
mov
push
lcall
fcomip
pop
jnp
jp
js
and
dec
aas
cmovb
mov
push
xor
add
mov
inc
gs
sbb
in
insb
mov
xor
pop
rsqrtps
imul
add
or
sub
fstpt
add
jmp
hlt
adc
test
xchg
addr16
insb
sbb
inc
cmp
add
clc
push
sbbb
add
std
or
aam
pop
test
mov
push
sahf
adc
fists
ficoms
outsb
add
inc
jo
add
sub
pop
or
mov
pop
bound
enter
dec
leave
jo,pn
js
mov
and
dec
xchg
les
dec
rcrl
push
std
mov
push
mov
push
mov
pop
or
pop
mov
add
fwait
dec
sub
popa
add
jnp
mov
sete
inc
mov
enter
or
outsl
add
ret
sub
lret
add
add
insl
in
cmp
inc
subb
add
jp
dec
add
sarb
adc
mov
add
jne
pop
pushl
fildl
out
add
push
cs
and
pop
xchg
mov
jae
add
or
shlb
test
in
aad
sbb
enter
sbb
pop
lret
push
sub
ljmp
icebp
xor
pop
pop
xchg
add
int3
or
mov
mov
push
jno
push
adc
mov
das
icebp
mov
or
cmp
inc
pop
and
in
psubsb
rcrl
add
pusha
mov
xor
add
add
test
aam
jg
in
aas
adcl
mov
or
sarb
or
add
xchg
add
push
cmc
xor
xorb
adc
sbb
add
jbe
cli
xchg
sbb
iret
pusha
mov
jb
cld
push
mov
cmp
in
mov
lea
add
testb
stc
push
lods
sbb
add
push
cld
add
jnp
faddl
dec
test
cmpsl
aam
sub
jne
call
adc
hlt
aas
addb
and
xor
xorb
loop
mulb
ret
or
jne
jge
add
push
mov
push
dec
sarl
ljmp
jg
and
mov
inc
adc
push
xor
clc
inc
cmp
sub
and
inc
add
sub
or
mov
dec
pop
sub
add
push
jo
or
es
cmpsb
dec
aas
add
ds
fadds
push
or
xchg
cmp
je
mov
dec
subb
rolb
add
adc
testb
jo
repnz
cmp
cmp
jbe
js
add
jnp
cmp
inc
inc
add
jae
push
cmp
inc
ja
out
psrlq
inc
pop
mov
sub
inc
jp
loop
push
in
lock
sbb
pusha
fmul
inc
negb
mov
mov
or
cmp
push
shr
cli
add
neg
push
adc
mov
jmp
jge
add
and
and
icebp
mov
mov
movsb
push
or
cmp
xchg
jae
cmp
les
and
bound
add
das
lock
add
lods
push
cmp
and
ret
xor
sub
jp
cmp
add
je
pop
pop
fnstcw
jmp
adc
fsubrs
and
enter
add
jo
loopne
mov
daa
sub
mov
add
rorl
mov
ror
mov
push
les
add
je
push
sbb
aaa
lea
inc
jecxz
xchg
call
je
shr
sub
call
dec
rcrb
mov
test
xor
aaa
aam
mov
in
add
sbb
adc
cmp
add
mov
mov
add
mov
adc
hlt
pshufw
lods
add
mov
enter
cmp
sbb
push
add
xchg
or
adc
adc
ret
push
pop
sub
add
fidivl
xor
lock
and
sbb
xorb
jl
adc
stc
scas
push
or
sbb
clc
daa
lret
cmc
push
test
mov
cmp
push
jnp
inc
mov
dec
jmp
add
mov
test
adcl
jmp
ret
jne
add
dec
fs
sbb
mov
sbb
pop
cwtl
clc
sub
push
lcall
jmp
int
mov
push
sub
xlat
mov
test
mov
cmpl
call
imul
je
addl
or
rorb
add
add
pop
ret
push
push
push
data16
pop
mov
dec
sub
shlb
fbld
add
jae
sahf
inc
imul
lea
add
jg
arpl
push
out
xlat
mov
add
pop
andl
xchg
add
or
xorb
js
shrb
ret
in
add
inc
inc
add
ret
les
mov
add
add
xor
test
repnz
inc
add
or
sub
call
scas
xchg
push
test
shlb
pop
add
sub
jno
add
and
shlb
push
lret
xor
xchg
orb
je
call
mov
pop
repnz
add
push
adc
xchg
sbb
mov
push
pop
and
push
jae
lret
sbb
jmp
lahf
cmp
mov
add
cmpsb
push
xorb
mov
xchg
ret
pop
sub
popa
push
hlt
cmp
add
pop
jg
shll
addb
dec
sti
shlb
xchg
xchg
in
xchg
add
add
push
cmc
pop
hlt
add
push
cld
lcall
sbb
or
stos
pop
cs
lea
add
loop
adc
xor
lods
shl
sbb
pushl
dec
addl
or
pop
cs
xchg
jno
mov
pop
and
dec
mov
pusha
cmp
ret
jo
icebp
clc
push
adc
adc
js
pop
add
sarb
add
xchg
or
out
add
cmp
inc
dec
adc
adc
add
push
pop
add
jg
test
add
add
imul
adc
fnstsw
xchg
test
in
inc
movups
adcb
push
mov
inc
inc
outsl
jne
add
mov
daa
or
cmp
pusha
adc
mov
std
mov
add
add
xchg
add
mov
add
ljmp
pop
mov
or
push
xor
mov
sub
push
push
push
push
push
inc
jle
mov
xchg
xor
push
push
add
je
push
or
add
jp,pn
dec
push
test
inc
push
xlat
test
in
popa
addr16
and
lods
gs
lock
push
mov
add
push
enter
inc
mov
mov
inc
sub
jae
iret
xchg
or
lock
or
sub
sbb
adcb
nop
fs
mov
jno
pop
aam
add
sub
add
nop
xor
test
jb
clc
pushf
js
daa
in
adc
adc
mov
lock
sbb
inc
push
mov
sub
xchg
add
int3
nop
or
push
add
jno
aaa
sti
cmpb
cs
comiss
stos
cmp
push
nop
cmp
loopne
mov
sbb
dec
add
inc
add
xchg
lods
jmp
xor
adc
sub
movsb
pop
rep
cmp
and
nop
add
add
push
xor
mov
cld
movb
sti
and
rolb
or
cmpsl
pop
cmp
or
jo
sbb
lret
sti
cmp
mov
shrb
jns
loop
add
cwtl
push
into
jmp
call
dec
cmp
add
mov
add
cmpsb
inc
push
mov
add
add
lock
iret
add
sub
push
pop
xorb
add
shl
xlat
addl
scas
sub
mov
je
sub
add
pop
xorl
xor
stc
std
jle
add
pop
mov
mov
sub
repnz
adc
add
push
push
inc
lds
add
and
fs
adc
dec
dec
add
test
mov
sahf
sbb
xchg
enter
pop
push
sbb
sbb
fsubs
sub
movsb
push
add
jge
mov
mov
in
add
lea
subl
scas
lods
adc
dec
mov
add
jnp
lods
and
ds
test
adc
andl
or
lock
cltd
add
dec
pop
rorb
cmpsb
jae
or
andb
sub
clc
mul
cmp
testb
xor
mov
pusha
pop
jl
and
or
addb
dec
cld
sub
xchg
shlb
xor
or
je
cmpb
add
adc
inc
cwtl
incb
shr
pop
jo
inc
dec
jmp
out
push
aad
mov
cmp
cmc
jne
cli
loopne
push
popa
pop
add
or
mov
pop
pop
add
or
pop
mov
ficoms
add
shll
stc
cld
add
into
pushl
mov
daa
or
aam
add
or
inc
and
je
sar
add
cmp
test
test
fidivrs
or
xor
mov
sbb
mov
and
sub
iret
add
mov
and
js
jmp
add
call
repnz
and
shlb
jge
add
pop
inc
leave
xchg
sbb
dec
sbb
rol
push
inc
clc
int
add
xor
sub
hlt
aam
dec
leave
jecxz
data16
loop
stc
inc
nop
mov
add
fwait
xor
lret
test
xchg
jne
movsl
cli
add
and
mov
pop
xor
inc
fdivrs
mov
repnz
out
xorb
add
inc
out
and
mov
cwtl
cmpsl
fdivrs
ds
aas
cmc
push
adcb
pop
test
xlat
add
movsb
pushf
cmpsl
outsb
mov
filds
pop
inc
mov
adc
adc
cli
add
sub
add
sub
ds
cmp
mov
push
push
ljmp
pusha
test
xor
les
adc
clc
test
lods
cli
and
sarl
sbb
add
stos
mov
push
rorb
dec
sarb
or
adc
adc
ret
pop
sub
fadds
in
xchg
inc
add
xor
inc
iret
pop
jmp
popf
andb
ljmp
dec
add
stc
cli
or
aas
push
lahf
jnp
mov
add
cmpsl
xor
pop
inc
xchg
jne
fwait
pop
add
test
xchg
adc
ss
push
ret
ljmp
cli
rclb
repz
add
call
movb
jns
cmpsl
lock
sti
add
ja
sub
jge
pop
and
clc
shrb
or
addb
mov
inc
or
add
jo
xchg
or
cltd
add
out
jg
add
add
mov
in
push
insb
test
mov
dec
adcb
rcr
les
cmp
daa
add
ja
mov
inc
adc
dec
mov
bnd
xchg
and
push
imul
and
push
inc
pop
js
add
not
or
fwait
aam
arpl
add
imul
test
pop
xchg
push
adc
push
mov
adc
je
dec
mov
pop
sub
inc
add
aaa
test
js
add
push
je
or
pop
lcall
inc
mov
lret
lds
add
push
inc
fs
stos
xor
iret
mov
jbe
adc
ret
or
pushf
sbb
cwtl
jnp
pop
push
out
lds
cmp
xor
push
and
pop
add
je
jp
arpl
ja
add
mov
or
add
shlb
insb
cmp
test
loop
imul
and
cli
into
je
lcall
add
pop
movlps
dec
xchg
rcrb
mov
subb
and
inc
pop
js
movsl
sti
xchg
add
pop
rcrb
adc
mov
lds
mov
inc
jmp
or
push
sub
adc
loop
fsubl
mov
jne
add
sub
subl
push
add
cmp
mov
inc
roll
pushf
sbb
lea
sbb
aam
dec
test
scas
pop
loopne
mov
jo
mov
xchg
xor
outsl
and
sub
add
push
outsb
add
mov
add
popa
cmp
or
add
push
push
pop
pop
mov
sahf
cmp
out
adc
add
push
adc
xor
push
dec
sub
sub
push
in
adc
hlt
add
mov
pusha
and
fwait
add
push
mov
add
jge
cmc
bound
loopne
notl
popf
fdivr
inc
aad
mov
sbb
inc
adc
add
mov
xor
sub
push
xor
loopne
pop
adc
mov
or
rorb
add
mov
test
cwtl
testl
xchg
push
jmp
add
add
movsl
push
popa
out
sbb
push
cmp
and
clc
and
pushf
fistl
push
popa
mov
aaa
adc
stos
cmp
pop
add
add
push
jg
cwtl
flds
aas
fdivr
add
enter
movsb
mov
jbe
cmp
inc
roll
inc
add
and
dec
mov
pop
mov
shlb
add
imul
dec
outsb
mov
test
pop
add
xor
cmp
fstpt
or
push
das
adc
mov
sahf
insl
add
or
outsl
loopne
push
dec
add
xor
movsb
jo
in
loopne
mov
sysenter
test
add
jecxz
pop
mov
sbb
in
and
shr
add
test
add
repnz
dec
push
hlt
jmp
enter
or
pop
std
in
pop
aad
out
dec
test
sub
jo
or
pop
sub
sbb
mov
push
inc
sbb
xchg
add
add
or
xchg
or
mov
cmp
clc
push
jmp
cmc
add
xor
add
and
lock
or
decl
add
call
or
cs
jnp
mov
mov
and
jo
inc
push
mov
sbb
mov
mov
into
lcall
push
mov
test
or
call
add
scas
sarb
inc
push
push
add
in
mov
xchg
mov
int3
jne
add
pop
pop
adc
nop
scas
pop
xchg
cmp
cli
jp
out
xor
push
mov
adc
sub
pop
and
sti
lock
dec
imulb
cmpb
sbb
mov
pop
call
andl
mov
cmp
jno
mov
ds
or
push
push
pop
pop
dec
inc
adc
pop
adc
inc
loope
mov
mov
add
xchg
dec
arpl
ja
adcb
jmp
dec
adc
sub
ret
loope
add
call
cmp
sub
popl
mov
movsb
add
fldcw
dec
test
mov
pop
mov
add
movl
sbb
jno
rorl
dec
test
ret
push
aaa
add
dec
es
in
sub
push
add
mov
dec
push
xlat
mov
add
mov
mov
sub
mov
cltd
dec
sub
imul
cmp
cmp
cltd
insl
or
dec
xchg
sbb
sub
push
and
and
xchg
push
add
aas
mov
enter
notb
lret
mov
xor
inc
mov
add
pop
mov
mov
pop
mov
add
pushf
jmp
jp
add
mov
jg
ret
jo
lret
rcrb
sahf
lods
mov
add
mov
in
cwtl
cmc
jns
pop
mov
or
mov
sub
cld
pop
into
arpl
mov
ret
and
and
ljmp
leave
out
or
andl
int3
add
xor
jg
add
mov
ja
add
sahf
lods
scas
dec
in
add
push
enter
out
xlat
andb
jno
add
xor
pop
xlat
fmul
ljmp
adc
lret
es
std
xchg
shrl
mov
pop
cld
fdivp
data16
xchg
mov
dec
dec
stc
ret
pop
pop
mov
lret
in
mov
imul
xor
test
movsb
lods
pop
mov
lea
add
sub
mov
dec
sbb
iret
cmpsl
xor
jnp
movb
add
cmovp
push
mov
mov
add
imul
sbb
jle
xorb
in
push
jle
add
adc
adc
or
add
aas
loop
xchg
adc
sub
stc
push
add
subl
inc
mov
sub
ret
cmpsl
xchg
adc
add
sub
lock
or
add
add
mov
pop
xor
pushf
int3
jnp
cmp
adc
pop
add
clc
sbb
lock
rol
add
sbb
sub
jae
jmp
add
dec
movsl
or
jne
add
pop
adc
sub
fcomps
pop
cmp
adc
add
inc
call
and
fwait
ljmp
adc
jne
out
pop
xor
mov
adc
mov
pop
jns
xor
add
xor
shrl
jg
add
mov
cmc
cmp
adc
add
repnz
push
cmp
dec
cli
adc
push
aam
scas
clc
inc
add
adc
add
mov
imul
add
add
pop
sbb
faddl
les
mov
push
jne
inc
adc
dec
xlat
xchg
loop
clc
adc
xchg
add
jb
dec
aam
mov
jno
add
and
div
mov
test
cmp
adc
sbb
mov
out
mov
sarl
insl
cmp
jbe
push
add
mov
push
or
cmp
adcb
jnp
inc
add
lcall
pusha
iret
mov
cwtl
clc
add
jne
jb
in
into
sub
add
mov
add
jg
cwtl
aam
add
insb
shlb
add
cltd
xor
aas
pop
mov
add
jmp
add
in
jmp
adc
add
or
outsl
cmp
mov
add
lods
in
mov
lock
add
cwtl
inc
int
popf
lcall
inc
rcrb
or
xchg
add
aam
ret
loopne
insl
mov
es
cmp
pop
shlb
aaa
hlt
add
cltd
in
enter
incb
jo
dec
andb
add
xorl
add
daa
lahf
sub
or
cmp
add
sub
push
add
pusha
pop
or
push
pop
fadds
add
push
loopne
fildl
jnp
das
fidivrl
push
dec
pop
pushf
enter
pop
pusha
push
cmp
or
and
inc
mov
adc
rcll
sub
stos
sbb
sahf
or
sub
inc
test
lcall
sbb
aam
xor
or
add
adc
in
sub
or
ja
add
sub
add
push
xor
sahf
add
je
mov
inc
sbb
pop
add
push
leave
pop
sarb
add
mov
fs
add
xchg
cmpsl
xchg
push
jb
xchg
cmpb
cmp
movsb
push
or
or
mov
inc
push
xor
sbb
cld
lret
filds
inc
jmp
mov
sahf
or
test
pop
add
add
adc
sbb
outsl
hlt
cld
sti
add
jbe
fiaddl
js
mov
adc
add
dec
scas
mov
sbb
int3
aas
orb
and
lcall
clc
lock
dec
lds
inc
orb
jp
add
mov
pop
lds
cmc
add
aaa
adc
and
mov
mov
pop
icebp
pop
dec
xchg
pusha
loopne
cmp
add
inc
iret
pop
ljmp
bound
and
scas
jae
les
sbb
sahf
inc
push
xchg
das
mov
shl
add
add
bnd
sbb
in
das
fs
fadds
mov
dec
xor
push
sbb
lds
sbb
popf
adc
sbb
add
test
dec
xchg
xadd
cmpl
add
pop
sbb
enter
inc
cmp
pop
inc
xor
or
and
push
mov
lahf
mov
xchg
lock
mov
push
mov
add
call
lea
mov
pop
adc
sub
popa
pop
push
dec
or
mov
xchg
xor
movsb
sahf
xchg
popfw
jae
and
sub
cmp
mov
mov
push
xchg
cwtl
cmp
add
jb
pushf
pop
jmp
ja
add
fnsave
stos
inc
cmp
shll
jb
cld
jle
inc
xor
adc
fisubl
clc
mull
stos
ja
lcall
stos
sub
add
inc
and
aam
and
sub
in
nop
push
lock
adc
push
add
ljmp
cld
ret
adc
mov
mov
call
pop
into
adc
insb
lods
add
nop
push
mov
movsb
mov
movsl
pop
setb
frstor
adc
sbb
and
xor
pusha
fnsave
fnstsw
cwtl
mov
push
rorb
xorb
and
pop
out
mov
sbb
push
cwtl
dec
dec
fsubrp
add
xchg
iret
add
adc
dec
inc
out
mov
cli
lret
push
loopne
add
fldcw
test
nop
les
mov
and
add
pop
ror
stos
add
movsl
decl
push
jnp
inc
fdivp
shrb
push
push
enter
sbb
mov
es
orl
add
xor
ficomps
test
add
jb
pop
adc
enter
inc
loop
dec
pusha
adc
dec
push
das
or
dec
fs
push
pop
xor
add
xor
jmp
jae
fiadds
and
add
add
or
aad
pop
in
inc
add
jns
cmc
fld
cmp
xchg
insb
jmp
xor
add
and
push
pop
jns
push
mov
addb
gs
lcall
insl
sbb
pop
ja
mov
ret
add
addl
adc
in
pop
push
xchg
scas
ljmp
add
and
sqrtps
xor
mov
popa
xchg
outsb
or
ret
dec
pusha
adc
push
and
mov
cmp
scas
std
sbb
mov
pop
or
or
adc
and
jo
lahf
loopne
pusha
jo
addb
shl
add
add
add
add
loop
add
push
addb
mov
ret
or
repz
adc
push
mov
push
push
mov
add
xor
popf
mov
inc
sub
stos
or
pop
lret
mov
out
pop
xorl
cld
jp
add
add
mov
xlat
pop
adc
cmp
rorb
lcall
sub
shr
aam
movsb
add
jns
iret
and
mov
ds
pop
mov
pop
fdivl
pop
lods
sarb
mov
pop
mov
push
mov
add
sub
push
push
push
cwtl
push
and
mov
cs
loopne
popf
mov
rep
mov
cmp
hlt
lock
add
mov
cmp
add
inc
inc
cmp
mov
call
add
cwtl
push
inc
pop
adc
rcrb
dec
enter
addb
sbb
adc
xchg
push
xor
shl
add
add
les
add
xor
jo
add
add
cmp
mov
add
inc
shlb
dec
mov
movsb
leave
insl
shl
in
mov
add
sbb
and
add
sti
sub
add
mov
mov
sti
mov
and
jge
dec
jnp
fcomip
ljmp
sbb
cld
add
jle
test
add
lea
inc
add
rorb
jae
add
adc
and
push
cmp
mov
andb
enter
and
inc
xchg
mov
insb
mov
mov
or
loop
pop
or
inc
addr16
dec
pop
inc
xchg
enter
lods
mov
sbb
add
lcall
add
or
out
mov
mov
sti
fmull
add
or
push
adc
or
mov
scas
pop
js
stc
xor
shlb
cld
cs
loop
pop
sub
addb
and
pop
add
movsb
adc
addb
in
fcompl
mov
add
inc
sub
cmp
ret
add
sbb
js
push
add
adc
scas
pop
xlat
das
mov
xor
pop
or
adc
add
add
mov
leave
jns
test
add
or
xchg
mov
ret
and
call
add
pop
rorl
shlb
adc
shrb
mov
mov
push
mov
jnp
sbb
jp
jecxz
add
inc
cmp
jb
xchg
rcrb
cmp
pop
add
int3
testl
mov
in
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
or
rcrl
add
lea
pushf
add
call
idivl
inc
mov
push
add
push
jle
add
add
pop
add
call
pop
pop
xor
ret
add
mov
enter
add
rcl
jno
push
add
sub
sub
stos
xor
roll
mov
rorl
addl
adc
lea
repz
push
xchg
dec
pop
cltd
xchg
or
pop
ret
add
xor
or
adc
adc
mov
mov
jo
add
inc
jmp
jne
sub
cmpsb
pop
sbb
jle
adc
rorb
and
add
ljmp
adcb
testb
pop
push
cltd
or
sbb
pop
push
mov
cmovs
and
jl
mov
xchg
cmp
add
stos
or
add
and
mov
add
inc
xor
movb
cmpb
cs
fiaddl
and
sbb
cmp
add
gs
push
mov
mov
add
divl
call
fwait
pop
lock
mov
loope
in
ljmp
mov
add
adc
fcompl
pop
add
adc
xchg
push
dec
xor
push
add
fistpl
mov
mov
lds
and
adc
add
xor
sti
leave
add
push
pushf
adc
roll
lea
cs
mov
pop
adc
and
cli
mov
add
dec
or
nop
or
and
jo
add
lea
pushf
sbb
cmp
jnp
testl
sub
ror
rcl
ljmp
pop
in
xchg
ficoml
hlt
add
adc
lret
ja
adc
xchg
scas
push
xchg
sbb
insb
nop
mov
addl
add
jno
add
inc
add
push
add
cs
loop
and
es
or
add
out
push
or
push
mov
mov
jns
xchg
sub
or
sbb
inc
or
inc
out
lahf
mov
xlat
call
jmp
pop
adc
insb
test
or
lods
adc
xlat
pop
add
sbb
add
add
add
mov
mov
or
repnz
sbb
sbb
add
dec
mov
aam
push
jg
fisttpll
push
mov
adc
inc
lea
pop
xchg
fisubs
shrb
roll
mov
add
lock
add
mov
cmp
mov
movsl
and
cmp
sub
add
inc
adc
cli
add
pop
ret
int
sub
add
mov
cmp
les
adc
mov
sbb
std
pop
out
ret
nop
roll
xchg
push
stc
jecxz
mov
mov
jne
add
andl
inc
adcb
cld
cmpsl
loope
out
xchg
scas
dec
rclb
mov
aaa
call
cmp
pop
add
push
jl
push
jle
into
jg
or
inc
push
andb
xor
pop
mov
push
add
pop
mov
bound
inc
ja
xor
add
push
add
jmp
add
rolb
aas
cmpsb
or
stc
out
or
inc
add
or
mov
sarl
je,pt
xchg
das
addb
add
inc
in
shll
pop
add
add
lret
rcrb
cli
pop
push
xchg
mov
rolb
sbb
or
dec
sub
cmp
mov
mov
orb
xchg
add
mov
and
xchg
in
pop
sbb
push
lret
js
and
push
pop
inc
fwait
push
test
dec
jb
jg
sbb
xchg
and
add
and
cmp
add
lods
xchg
jb
imul
sbb
mov
movsl
pop
pop
pusha
test
add
addb
jmp
sbb
add
inc
aam
xchg
dec
and
add
or
sub
stos
xchg
jp
mov
dec
je
aam
add
and
decl
in
xor
jg
lea
pop
sub
ror
sbb
fsubrl
mov
lock
je
hlt
aas
lret
xor
lea
ret
rclb
test
aad
popf
push
add
jbe
jmp
sub
mov
in
gs
aaa
aad
mov
out
pop
les
mov
cmpsb
addb
fs
outsl
add
push
push
add
or
inc
dec
mov
cwtl
fs
jne
or
lea
mov
adc
lods
pop
add
test
or
lods
pop
fcoms
jne
ror
pop
adc
sub
push
sub
add
stc
into
xor
cmpsb
add
and
cmp
test
cmp
je
jne
mov
mov
rcrb
or
adc
scas
lahf
xor
and
test
lcall
adcb
outsl
add
faddl
add
in
sbb
dec
jle
scas
lds
and
mov
jle
dec
inc
xor
lahf
dec
imul
xor
and
dec
xor
jns
or
push
add
jo
push
andb
lret
jle
leave
jg
shl
add
jp
hlt
hlt
add
fistpll
jb
ds
add
lock
xchg
jg
add
es
add
int
push
push
dec
inc
paddsb
mov
mov
add
jg
jge
xor
adc
jnp
pop
in
popf
push
add
cli
stos
fs
mov
add
lods
imul
out
mov
pop
mov
add
adc
repnz
xchg
or
dec
push
cld
cs
fcoms
stos
mov
inc
sub
xchg
clc
testb
cmpb
jp
dec
aam
add
cld
push
jnp
push
imul
jle
dec
sbb
lods
lock
aam
push
mov
jae
js
stos
inc
inc
add
cld
pushf
pop
cltd
pop
pop
popf
icebp
rcl
les
outsb
stos
mov
add
loop
dec
sub
popa
and
xchg
ja
adc
push
stos
mov
push
int3
push
and
lock
xor
mov
rorl
or
verw
test
pushf
je
add
addr16
push
add
out
xor
dec
lea
dec
adc
push
add
mov
add
mov
pop
and
sub
cmp
sbb
or
add
jns
mov
inc
and
add
push
or
jle
inc
adc
movl
jmp
add
sub
or
mov
push
mov
jb
sbb
jecxz
orb
push
xchg
mov
push
je
shlb
add
xchg
and
lods
push
dec
stc
dec
add
movsl
or
inc
add
adc
adc
pop
test
pop
pushf
stos
jne
push
adc
dec
or
add
call
push
jl
das
add
bound
cwtl
xchg
or
xchg
scas
je
add
inc
add
ljmp
inc
pop
xor
je
add
push
jne
add
outsb
dec
mov
xchg
inc
cli
and
dec
fadds
clc
and
sbb
xchg
sbb
cmp
mov
and
xor
mov
jl
test
cli
add
or
dec
ljmp
fimuls
cld
ja
add
icebp
mov
cmp
roll
push
lcall
int3
cmc
paddw
mov
popl
mov
xchg
js
ja
add
mov
pushf
add
xlat
ds
dec
xchg
testl
inc
clc
fs
cmp
jg
pushf
nop
das
ds
add
pop
inc
jne
jb
mov
lods
bswap
push
jle
loopne
fisubrs
xor
in
jae
mov
push
dec
add
dec
push
cmp
push
sbb
inc
push
push
push
inc
es
dec
call
add
scas
sub
loop
add
cwtl
xorb
inc
cmp
or
ja
inc
jbe
xchg
aas
loope
and
rcll
add
inc
add
sbb
xor
jnp
js
js
cmp
mov
daa
or
adc
jmp
sbb
add
in
xor
push
lock
mov
pop
xchg
jo
jnp
clc
je
add
sub
out
repnz
imul
lds
cwtl
xchg
popf
fs
pop
lock
push
inc
push
loop
mov
gs
jmp
mov
add
aaa
mov
xchg
add
sub
pop
mov
pushf
daa
test
ja
addb
push
imul
push
jge
mov
mov
add
in
lahf
pop
add
sbb
loopne
add
clc
cmpsl
sbb
mov
mov
jno
sbb
inc
dec
add
push
adc
jb
add
mov
je
sbbl
or
inc
add
outsb
cmp
sub
and
cmpsl
fidivrs
outsl
insl
jmp
adc
cmp
rolb
shll
jae
mov
les
dec
inc
into
lret
add
mov
xchg
mov
es
jecxz
fs
icebp
or
loop
int
pop
jbe
mov
mov
pop
pop
xchg
cmp
cmpsl
mov
sbb
push
push
xchg
lea
dec
mov
pop
pop
add
xchg
rol
fs
add
sub
sbb
repz
sahf
or
cmp
mov
dec
add
dec
pop
cmp
and
jbe
cmc
add
out
pop
add
ret
mov
out
sbb
mov
push
push
mov
daa
xor
fadds
cwtl
lcall
jns
repnz
rorl
dec
xchg
aad
jge
fs
jnp
push
sti
loopne
mov
xchg
popf
sbbb
cmp
jnp
pop
fidivs
rcll
jae
je
lea
mov
mov
dec
orb
cwtl
add
xchg
rorb
shll
scas
add
stos
xor
or
push
sbb
mov
xor
jge
hlt
ret
pop
hlt
lret
or
adc
fsubp
sub
push
outsl
test
pop
add
xchg
inc
inc
mov
ret
stc
sbb
adc
and
rcl
push
cmp
mov
nop
pop
rorl
rdtsc
aam
les
add
push
out
mov
push
fxch
inc
faddl
mov
shlb
daa
scas
add
call
adc
and
push
xlat
add
sbb
nop
fcomps
rolb
test
adc
jbe
or
jmp
xor
sbb
xchg
pop
pop
rolb
mov
mov
or
sbb
dec
push
lods
cmpl
std
add
mov
or
adc
jmp
mov
mov
pushf
out
rcrb
add
pop
cli
cmpsl
and
icebp
jnp
add
jb
pop
cmp
test
hlt
sub
sbb
aam
cmp
add
gs
jg
or
addl
and
int3
cmp
sbb
jmp
adc
repnz
mov
cld
loope
add
sbb
jp
add
add
xor
mov
int3
in
shlb
mov
rolb
sbb
push
dec
cmp
mov
inc
mov
sub
and
add
in
shlb
fildl
pcmpeqb
cmp
add
sub
cltd
xor
jne
in
cmc
xor
popl
xchg
xchg
enterw
cmpl
nop
test
add
lret
ljmp
mov
scas
addl
ja
add
in
add
int
andb
jne
xor
push
jle
pop
insl
out
inc
add
lea
add
or
sbb
mov
jno
sub
incl
bound
push
test
movsb
or
or
dec
add
call
mov
add
lret
les
inc
and
xchg
cmp
testb
mov
add
addl
adc
inc
xor
data16
mov
incb
fiadds
add
mov
push
aad
pop
insl
lea
dec
cmp
push
cmp
ja
cld
cli
dec
cli
fiaddl
adc
shrb
xor
mov
jmp
sub
sbb
cmpb
and
or
nop
sbb
adc
add
pop
andb
into
sbb
jne
inc
ds
add
orl
push
invd
cli
mov
mov
jmp
mov
clc
sldt
sbb
add
lods
adc
enter
mov
push
inc
add
xor
cli
and
and
ss
mov
jmp
add
pop
inc
mov
in
mov
mov
je
test
add
and
mov
jbe
andl
cmpsb
aaa
cwtl
mov
ss
mov
inc
pop
inc
pop
aam
cmc
add
cwtl
int3
pop
call
rclb
ja
xchg
test
cmp
add
xor
or
pop
clc
push
pusha
or
mov
jg
add
xor
dec
dec
cmpsl
lds
add
pop
push
xchg
dec
xchg
or
pop
adc
add
push
je
push
add
inc
push
mov
jmp
add
mov
cmp
imull
mov
arpl
fdivrl
mov
pop
sub
pop
jg
pop
or
inc
pop
nop
push
andl
adc
pop
adc
and
dec
adc
cmp
sbb
enter
mov
movsb
mov
pusha
inc
mov
lahf
or
mov
add
add
add
xor
ss
jbe
mov
adc
arpl
ret
sub
adc
push
cli
in
cmp
ucomiss
pusha
movntq
out
mov
jb
loopne
add
arpl
inc
outsb
pop
add
push
jp
push
sbb
add
jbe
push
add
add
test
add
add
inc
add
mov
outsb
mov
insl
cwtl
jb
pop
out
push
jo
lods
dec
xor
movsl
sub
scas
fcompl
sub
dec
outsl
fs
mov
dec
xor
fdivr
lcall
lods
jo
fidivs
add
pop
shrb
mov
orl
inc
or
sbb
jl
dec
jo
testb
dec
cmp
pop
int3
jge
mov
pop
les
jecxz
es
pop
add
mov
add
inc
aam
push
add
jge
push
pop
add
mov
xchg
dec
adc
loopne
in
add
rorb
sub
pop
dec
mov
mov
mov
mov
gs
add
inc
jns
xor
dec
cwtl
out
and
xor
popa
inc
out
add
cmp
fmul
push
sbb
movsl
add
dec
pop
add
or
xchg
jp
add
inc
mov
js
pop
inc
xchg
dec
mov
test
and
push
push
pop
test
dec
pusha
shr
adc
jns
add
js
jp
inc
ds
mov
cwtl
and
dec
or
cmp
add
xchg
aas
mov
cmpsb
fists
pop
sbb
ljmp
add
mov
les
sub
jne
pop
xchg
nop
mov
adc
in
mov
ret
add
inc
dec
cmp
jns
push
jl
sbb
dec
dec
adcb
inc
mov
push
push
sub
call
xor
mov
aam
sub
shrl
cld
xor
xchg
xor
in
icebp
lret
add
xor
cmpsl
cwtl
jnp
rcrl
test
xor
push
cmp
outsb
imul
add
jne
lret
push
jg
pop
inc
in
ret
call
adc
nop
mov
fs
repnz
adc
popa
outsb
jae
insl
gs
sbb
jb
pop
outsl
xchg
xor
popf
inc
int3
push
inc
aad
mov
xchg
or
or
sbb
jmp
movsl
bound
mov
daa
movb
jo
add
jb
je
jne
repnz
add
sub
push
addb
test
fmull
add
push
jae
xor
jbe
add
mov
fldt
and
jp
cmp
sbb
mov
movsb
pop
cmp
mov
add
outsb
jno
jne
sbb
out
imul
test
xchg
scas
lea
pop
xor
imul
or
and
arpl
jmp
push
xchg
add
cmp
dec
js
subps
mov
sub
and
add
push
adc
andb
clc
xchg
push
push
or
jmp
and
ret
add
sub
mov
xchg
add
js
lods
mov
jbe
repnz
pop
call
imul
xchg
ss
ds
sarb
test
and
dec
mov
push
aad
fxch
cmp
sbb
fwait
in
and
repz
sub
add
or
mov
inc
pop
sbb
mov
rcrl
mov
push
mov
mov
push
jne
add
xor
loopnew
add
jmp
jle
movsb
fldt
add
or
fisubl
stc
push
adc
aad
jo
sbb
pushf
pop
push
xchg
sub
add
test
push
add
test
scas
sub
sub
stos
mov
mov
cmp
add
lret
loopne
xchg
push
xor
add
shr
cmovle
sbb
mov
inc
mov
mov
loope
out
or
mov
pusha
pop
ljmp
adc
adcb
shrb
pop
add
pop
jp
test
int
add
push
mov
add
mov
or
dec
mov
lea
je
fsubs
adc
and
je
add
adc
mov
jbe
out
mov
dec
inc
mov
gs
pop
sbb
and
movsb
lods
cmpsl
add
insb
dec
adc
inc
xor
mov
add
adc
cmp
mov
clc
mov
addr16
rclb
and
dec
leave
ror
dec
or
fdivl
inc
sub
xchg
jle
sbb
add
inc
xchg
mov
pop
adc
outsb
or
xorb
cmp
xor
or
sub
movsb
push
push
les
push
add
mov
iret
pop
push
rorb
mov
aam
jno
hlt
test
add
fcompl
lahf
push
mov
add
sbb
fmul
or
add
pop
loope
mov
movsb
add
adc
add
or
leave
push
das
add
enter
mov
movsl
rcrb
pop
call
icebp
outsb
cli
mov
and
mov
jmp
sbb
add
in
test
inc
test
pop
shrl
dec
inc
add
adc
pop
add
or
test
adc
int3
and
add
les
add
dec
stos
fimuls
fmull
mov
jmp
add
in
subb
jno
cld
fs
jle
push
hlt
sub
jbe
in
mov
cmp
filds
inc
ds
add
in
adc
fldl
adc
int3
xor
subl
pop
sub
inc
loopne
outsb
mov
lds
push
in
xor
movsl
lea
xor
add
into
fisttpll
cltd
loopne
jp
sub
scas
dec
sub
push
add
rclb
cmp
ja
add
mov
mov
stc
add
std
orb
sub
gs
movb
ud2
out
rorb
add
fs
add
pop
or
inc
shll
xchg
dec
jg
jl
dec
jp
push
add
ss
fadds
add
outsb
sub
xor
xchg
ret
inc
push
push
jns
push
call
mov
jg
add
lock
imul
sbb
push
adc
jle
gs
and
dec
pop
dec
pop
lock
push
popa
add
clc
lods
dec
jnp
sub
dec
sti
aam
xlat
ds
nop
pop
push
clc
outsb
in
mov
add
test
out
outsl
jg
adc
into
fbld
pop
jae
pop
push
and
jb
jo
pop
shlb
mov
scas
or
add
and
dec
and
and
in
subb
sub
out
lret
fsubl
xor
mov
insb
sbb
ja
push
pop
sub
sbb
mov
or
mov
shr
add
cmp
clc
add
cld
rclb
inc
pop
in
in
rcrb
pop
push
in
add
test
xchg
adc
or
pop
push
je
adcb
stos
movsl
daa
add
in
sbb
mov
shrb
dec
add
inc
outsl
insl
add
xor
or
in
cmp
mov
les
or
sarl
push
addb
or
jnp
dec
jo
push
sarl
insb
xchg
sbb
arpl
mov
dec
enter
lods
les
xor
das
add
imul
cwtl
and
or
mov
insb
push
lods
push
fmull
inc
push
dec
xor
or
jo
pop
leave
push
sub
loopne
stos
fsubs
sbb
xchg
lds
sub
enter
mov
es
mov
push
nop
add
les
pop
inc
adc
add
mov
add
fs
push
dec
jecxz
add
fmull
inc
jl
pop
mov
inc
inc
jne
adc
fs
orb
xor
mov
and
or
les
pop
packssdw
pop
push
clc
xlat
data16
add
inc
adc
sbb
sbb
add
cs
cmp
sbb
jl
add
stos
adc
add
adc
daa
lock
lods
rolb
mov
mov
fists
pop
popf
ja
xor
pop
loope
sub
sarb
sub
in
and
mov
inc
add
cmpsl
mov
aad
addl
sti
dec
cmp
add
jb
loop
mov
leave
add
mov
mov
push
add
inc
add
sbb
inc
push
push
push
sub
in
imul
pop
ljmp
pop
jae
cmp
jmp
push
pop
adc
mov
movntps
mov
add
dec
daa
std
adc
ljmp
add
je
cmp
jbe
push
andl
pop
cmpb
add
cmp
mov
mov
jne
imul
push
ss
add
lahf
inc
aam
jbe
add
loop
shl
nop
sbb
inc
orb
sub
sbb
in
into
lock
inc
add
or
inc
and
aam
or
push
cmpsb
aad
fidivs
movsl
fldenv
add
cmpsl
fistl
pop
push
push
je
or
add
cmpsb
sub
push
jecxz
fisttps
and
sub
push
dec
ret
push
or
pushf
or
into
or
mov
push
mov
xlat
test
incl
jb
sbb
into
jmp
insb
add
pop
pop
in
push
mov
ja
mov
sub
sti
mov
pop
pop
xorl
pusha
out
pop
int3
add
incb
pop
xor
loope
sub
cmc
shll
imul
icebp
mov
add
fsub
sbb
pop
inc
add
add
addb
add
xor
inc
scas
sub
sbb
inc
daa
pusha
push
cmp
mov
add
addb
inc
iret
rclb
pop
dec
flds
stos
fnstenv
jecxz
test
xor
cmp
xchg
add
mov
cmp
jb
mov
adc
nop
mov
cmp
add
cwtl
out
hlt
insb
adc
add
dec
pop
add
push
cmp
lods
cld
loopne
add
xor
add
pop
add
out
cmp
sahf
sbb
sbb
stos
fstpt
dec
pop
inc
lahf
push
mov
adc
cmpsl
mov
sahf
mov
adc
sub
lds
add
in
call
mov
add
mov
sub
add
xchg
add
cwtl
sbb
add
sub
loop
dec
pushf
ds
inc
lret
xor
xor
mov
push
gs
add
add
add
and
sbb
scas
add
std
adc
pop
add
push
bound
pop
mov
pop
mov
movsb
mov
adc
jg
out
mov
adc
and
inc
pop
outsl
dec
and
add
inc
cmp
xchg
out
add
mov
movsl
sbb
aam
aas
iret
repz
fdiv
mov
decl
push
pmaxsw
and
add
in
inc
fwait
mov
aas
lods
aam
outsb
xor
add
ljmp
xlat
add
and
ss
cs
inc
jno
ljmp
loopne
xor
repz
mov
push
add
pop
outsl
pusha
push
loop
and
and
adc
push
loopne
rorb
jae
push
mov
call
jbe
pop
cmc
sbb
xlat
mov
test
sar
sbb
dec
mov
shll
inc
mov
mov
push
and
lea
jecxz
call
mov
pop
mov
nop
mov
enter
cwtl
inc
out
xchg
adc
add
neg
add
test
out
adc
aad
pop
lods
test
mov
inc
imul
gs
cmp
add
addr16
lods
push
sahf
sub
mov
push
inc
ret
add
and
int3
aad
sbb
mov
dec
push
or
or
add
add
pop
inc
add
jecxz
sub
loop
bound
pushf
push
mov
lods
add
repnz
adc
add
dec
mov
fimull
test
sbbl
pop
out
loopne
pop
push
cmp
loope
aam
adc
and
mov
fidivl
faddl
shrb
popl
cmp
stos
cmpsl
jmp
cwtl
shll
pop
cmp
push
jo
dec
loope
or
mov
cmp
hlt
mov
in
and
icebp
fstpt
inc
mov
push
std
pop
inc
xchg
add
jmp
xchg
pusha
scas
shrb
ss
add
mov
clc
sbb
adc
les
sub
pop
hlt
inc
jp
pop
in
push
or
dec
mov
mov
mov
lret
mov
mov
imul
fsubrl
dec
sti
xchg
add
or
jno
imul
gs
jecxz
jmp
jmp
clc
push
jmp
cltd
adc
cmp
mov
and
xor
add
sub
cmp
sbb
mov
aas
add
sub
adc
add
dec
mov
add
shlb
mov
add
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
add
movzbl
sub
jne
cmp
dec
xchg
push
and
add
sub
call
or
js
or
fcmovb
scas
stc
and
mov
frstor
outsb
testb
push
xchg
loop
push
mov
fisubrs
les
int3
mov
sbb
lods
aam
addb
mov
sbb
mov
ficomps
and
dec
sbb
and
shr
add
ljmp
cmpsb
sub
add
add
push
flds
movsb
sbb
or
rorb
and
lds
xor
add
or
add
push
push
aad
add
outsb
fbld
or
add
test
nop
jp
fildll
mov
add
and
jle
aad
out
jl
pop
fmuls
jo
pop
xor
loopne
lods
push
and
sti
test
xchg
test
jne
roll
mov
mov
pop
add
pop
inc
lock
enter
mov
add
aaa
stos
pop
mov
sbb
sbb
cmpsb
xor
mov
js
add
mov
push
jne
lods
movsb
ret
jp
pop
dec
daa
adcl
add
xlat
ja
adc
enter
and
sub
ret
pop
int
loopne
push
add
in
subb
add
inc
stos
fmuls
xchg
aam
adc
push
add
add
out
inc
scas
add
jg
or
push
push
comiss
mov
lret
cmp
addb
push
or
pop
cltd
cmp
rcrb
pushf
or
je
roll
cmp
add
and
add
jp
fists
in
xor
jge
pushf
add
mov
call
add
cmp
cmp
adcb
decb
xor
add
xchg
imul
mov
sbb
test
and
addb
adc
je
adc
jecxz
mov
xlat
and
cmpsl
pop
or
xor
cmp
sbbb
xchg
jns
movsl
inc
jg
add
cmp
mov
dec
add
and
or
add
scas
and
sub
aam
iret
add
mov
xor
sub
add
das
fiadds
sbbb
mov
push
loop
add
mov
mov
add
xchg
loope
pop
pop
pop
push
dec
xor
pop
andb
shl
jmp
sbb
jmp
out
add
test
rclb
pop
inc
sar
rcll
add
test
cli
ds
mov
stos
iret
pop
and
mov
add
sbb
or
add
inc
mov
mov
sbbb
sbb
add
ss
sbb
jno
mov
popa
fcomip
das
incb
push
xchg
jns
pop
movsb
shll
jne
and
sbb
inc
mov
rcll
adc
dec
add
dec
and
push
jae
add
push
imul
mov
xchg
scas
aad
xchg
sti
add
sub
mov
out
cmp
add
xchg
das
add
nop
dec
jmp
add
mov
enter
mov
jae
and
inc
test
sub
add
shlb
xchg
inc
movsl
add
mov
dec
jo
clc
cmp
cld
or
test
dec
adc
xor
rorb
add
mull
js
in
add
dec
imul
ds
shrl
repnz
mov
add
and
dec
lock
fiadds
loop
or
ficoms
and
dec
pop
add
lret
call
mov
push
xor
scas
add
lahf
rorb
rcl
movsb
fsts
gs
dec
or
mov
pop
lock
fs
add
sub
sbb
lock
add
aaa
mov
loope
pop
add
shll
cmp
inc
add
inc
inc
cmp
faddl
cmpsl
repz
push
fcoms
inc
or
cmpsb
fadds
enter
xchg
sti
hlt
sub
or
lods
lea
sub
mov
sub
sub
add
js
das
enter
add
outsb
cmp
add
and
cmp
add
loop
jne
push
xor
and
lret
jp
inc
in
in
hlt
cmp
andb
sub
bound
push
daa
testb
in
jle
xorl
and
pop
mov
aam
adc
dec
in
mov
and
iret
out
xor
rolb
add
imul
push
add
idivl
xchg
xchg
cmpb
cmp
cmp
add
insb
rolb
mov
add
dec
js
add
pusha
adc
add
adc
clc
or
ss
or
imul
sub
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
mov
ret
push
add
jmp
mov
push
orl
pop
inc
push
push
cmc
jmp
dec
adc
lcall
pop
outsl
enter
jns
inc
push
js
pop
or
test
ficoml
pop
xchg
testl
in
sub
fs
add
jo
jb
cmp
cmp
cmp
mov
rclb
dec
jne
stc
mov
out
je
clc
incb
or
add
gs
sbb
xchg
xchg
sub
sub
add
add
addb
push
add
push
lea
mov
add
das
dec
pop
pop
sub
xchg
rcrb
dec
sub
and
nop
add
xorb
sbb
addr16
inc
loopne
jmp
mov
sub
cmp
sub
dec
add
lea
cmc
add
push
lahf
xorb
clc
ljmp
sbb
nop
stos
cmp
sarb
mov
push
loopne
xchg
xchg
ret
lret
addb
or
mov
in
and
sub
add
dec
shlb
inc
cmp
sbb
and
sub
sbbb
add
jmp
mov
cmpb
cli
aas
and
dec
and
or
loope
jae
add
xor
sub
imul
call
mov
add
push
fiaddl
inc
xchg
mov
ljmp
cmpsl
push
inc
lods
cwtl
add
repnz
dec
into
and
sub
sbb
sbb
sar
enter
cli
call
add
popf
push
inc
nop
int3
add
inc
in
enter
pop
dec
jp
psubusw
jmp
out
sub
mov
adc
in
mov
mov
or
in
aas
add
push
inc
add
idivb
adc
int3
in
add
adc
mov
inc
fsubs
push
jns
add
mov
arpl
xchg
mov
add
jnp
xlat
repz
mov
ja
imul
in
inc
jns
and
xchg
dec
add
push
dec
jo
add
mov
add
push
data16
insl
mov
add
clc
and
leave
jns
addr16
mov
fimuls
and
aad
iret
in
cmpsl
scas
test
cmpl
mov
sub
mov
pusha
cld
push
add
pop
inc
movb
adc
adc
shlb
dec
les
xor
and
add
xchg
fmuls
and
shr
add
test
xor
insb
fmuls
mov
stos
mov
add
cs
clc
enter
push
jne
jo
add
and
popa
lods
xor
arpl
adc
mov
jae
mov
mov
or
sti
or
imul
out
test
movsb
cmp
dec
add
dec
xor
iret
cmp
add
stos
int3
or
pop
lar
clc
sbb
jl
pop
sbb
dec
repz
pop
bound
pshufw
mov
dec
scas
das
add
aam
add
adc
rcrb
dec
jl
scas
add
cmp
insl
mov
adc
pushf
mov
inc
or
add
inc
imul
aas
xor
cmp
or
mov
add
xchg
js
mov
push
js
add
ja
or
dec
and
mov
adc
add
es
xor
add
mov
iret
and
ljmp
mov
cwtl
dec
mov
push
xchg
adc
push
in
jno
adc
cmc
out
add
loopne
add
dec
jbe
nop
fiaddl
imul
push
sbbl
sub
cwtl
mov
xor
test
arpl
ja
pushf
or
or
dec
repz
adc
lret
rclb
add
adc
adc
mov
add
dec
cmp
pusha
add
aaa
add
mov
je
jbe
and
xchg
sub
xchg
mov
sbb
or
test
aaa
and
or
daa
daa
mov
cld
movsb
into
sbb
add
and
cmp
lods
enter
inc
xor
xchg
jle
cmpsb
xchg
push
les
enter
and
xchg
rorb
sub
xchg
insl
or
cmp
fildll
lods
xlat
cmp
pop
jno
in
cmp
mov
push
sub
inc
add
or
in
add
adc
xlat
and
out
rorb
xor
push
fs
cmp
dec
add
jmp
and
loop
dec
hlt
arpl
gs
lcall
loopne
andb
inc
pop
and
mov
cli
adc
adc
dec
js
dec
orb
jae
insl
repnz
add
and
mov
hlt
push
jns
jns
jbe
psubb
jns
addb
push
in
fimull
xchg
mov
daa
dec
mov
jl
prefetch
int
incl
xor
xchg
imul
ds
or
ja
xbegin
test
add
js
loopne
dec
add
pop
cli
mov
inc
mov
add
adc
popa
mov
sub
cmp
stos
fisttps
xchg
push
push
and
stc
xor
in
xchg
add
push
pop
adc
adc
nop
inc
sub
int3
jns
add
jl
enter
and
jne
lods
and
sub
mulb
jo
insb
add
lods
test
arpl
sub
xchg
fcom
add
cmc
inc
mov
fistl
sub
xor
pop
jl
mov
imul
hlt
mov
add
into
sub
adc
mov
in
movsl
add
sbb
aad
mov
data16
hlt
in
mov
frstor
cmp
add
lods
jb
add
mov
or
pop
dec
mov
loopne
jno
pop
and
add
or
add
mov
or
in
mov
shll
sub
popf
add
ss
cmp
cmp
jb
jo
inc
bound
ret
fs
sub
sbb
mov
test
adc
pop
inc
pop
add
outsb
push
gs
popl
mov
js
add
sub
repz
mov
cmp
mov
call
daa
and
int3
dec
ficoml
add
out
dec
adc
and
fisubrs
hlt
and
sub
ljmp
divb
xchg
or
inc
mov
arpl
adc
fs
and
ja
jae
jo
es
sbb
jl
sub
nop
stc
adc
pop
jg
jg
add
jnp
add
push
xchg
add
mov
mov
jmp
out
mov
dec
dec
add
sbb
les
push
add
and
xlat
fs
out
push
jecxz
push
add
fsubrs
ret
pop
in
daa
or
and
pop
lcall
pop
test
jmp
dec
sbb
add
lahf
add
push
inc
or
sbb
clc
push
xchg
pop
adc
cmpsb
add
outsb
dec
pop
inc
inc
add
push
adcw
adc
add
push
pop
ret
jg
jmp
orl
adc
mov
or
aam
les
add
inc
push
ret
fsub
cs
and
xchg
sbb
inc
or
sub
xor
ljmp
sub
out
pop
jo
or
mov
inc
adc
shrb
push
xchg
add
xchg
add
loop
push
enter
mov
pop
xchg
lods
dec
adc
mov
adc
or
or
in
dec
adc
test
pushl
cmp
pop
cmp
in
flds
xor
add
inc
or
inc
and
ja
pavgb
sub
mov
push
add
push
loope
test
pop
movsb
adc
push
aad
sahf
pop
dec
lret
divps
push
add
mov
pop
add
mov
les
cld
cmp
movsl
add
repz
push
dec
add
pop
add
dec
je
cwtl
push
adc
adc
jmp
shr
and
das
mov
add
sbb
push
mov
outsb
loop
jl
push
xor
jno
push
xor
enter
sub
add
sbb
xor
and
add
cli
out
gs
sub
les
aaa
pusha
call
cs
popa
outsb
daa
je
and
insb
outsl
fisubl
sbb
aas
pop
push
jae
ret
and
pop
test
sbb
sbb
add
adc
add
cli
or
mov
sahf
insb
add
mov
repz
and
add
adc
or
add
adc
sub
add
sbb
pop
adc
push
aad
mov
hlt
repnz
mov
mull
and
push
lret
dec
mov
jnp
sub
sbb
xor
inc
push
add
sbb
cmpl
das
dec
add
ficomps
push
movsb
inc
and
cmp
mov
xor
jp
jbe
leave
ja
sti
cmp
aam
inc
mov
and
adc
or
aaa
lahf
ljmp
lds
jb
ret
stos
mov
mov
jl
add
cmp
flds
mov
adc
faddl
xchg
out
test
ret
add
test
xor
sbb
jbe
dec
jns
cmp
xchg
out
add
addb
xor
and
adc
cld
sub
int
push
in
and
and
xor
and
jmp
xchg
jle
les
lock
mov
stos
ret
mov
sub
push
xchg
ret
add
ret
add
cld
leave
mov
sbb
push
popf
fmuls
mov
lock
push
popf
jp
adcb
das
sbb
cmpsb
jnp
adc
and
mov
pop
orl
dec
cld
inc
add
push
negl
pushl
mov
adc
jp
add
mov
call
add
push
jle
loopne
lea
xchg
cmp
add
sub
push
pop
aad
push
add
add
clc
js
fdivs
and
pop
ja
in
xor
sub
lods
adc
mov
xchg
pop
mov
add
jmp
add
dec
stos
xchg
fidivs
xorb
fsubrl
sub
es
cli
cmpsb
imul
jge
out
cltd
jmp
pop
mov
rolb
pop
pop
enter
jl
arpl
add
fwait
add
push
adc
inc
data16
mov
dec
adc
push
lea
mov
ss
push
hlt
adc
aad
loopne
aas
add
rsm
int
nop
stos
inc
sub
in
add
cmp
in
inc
test
stos
loopne
daa
lcall
inc
test
repz
lock
clc
notb
js
jb
dec
add
inc
test
xor
mov
push
ljmp
aam
cwtl
jno
lock
inc
jns
pop
and
enter
int3
push
jo
filds
sub
fwait
and
pop
sti
mov
or
jae
addl
jp
mov
pushf
xor
das
sub
jle
add
out
jo
mov
imul
int3
jno
ljmp
mov
cltd
mov
sti
imul
adc
inc
popf
mov
ret
in
sbb
add
jb
pop
add
pop
xor
adc
cmc
inc
adc
add
xchg
and
ljmp
scas
mov
push
and
test
loopne
test
or
push
test
jo
lods
popf
add
add
jbe
adc
rolb
add
and
or
mov
cmpsl
cmc
lea
push
push
push
jne
xchg
push
jmp
adc
cmpsl
aad
add
or
inc
pop
mov
andb
lds
xchg
cs
push
cmp
sub
nop
cltd
rcrb
sub
add
dec
push
xor
add
cmp
cmp
push
mov
pop
in
mov
popa
push
jb
cmpsb
push
push
and
cmp
and
call
cld
ret
add
repnz
push
dec
add
das
ds
adc
pop
cmp
clc
mov
data16
xchg
add
in
pop
adc
aad
cli
push
test
js
add
mov
mov
adc
add
in
mov
lock
mov
into
adc
mov
lods
sub
adc
push
out
cmpsb
pop
inc
xlat
movsb
sub
sub
or
in
call
loopne
fs
pop
xchg
or
int
mov
sti
iret
stc
add
xchg
fidivrl
xchg
rcrb
add
aas
aad
mov
stos
andb
pop
pop
mov
test
imul
ret
mov
je
add
repz
add
ret
and
mov
add
pushf
sbb
xchg
mov
jl
push
clc
out
and
inc
pop
pop
loopne
add
rolb
mov
orl
mov
lea
inc
add
aad
add
std
loopne
add
or
mov
sahf
std
fld
ja
add
in
xchg
push
cld
inc
mov
sbb
sbb
popa
xchg
lea
push
mov
insb
cmp
push
adc
cli
icebp
add
dec
pop
pop
stc
jg
mov
adc
je
push
jne
inc
xchg
dec
add
sbb
std
fwait
jle
bound
inc
add
mov
add
or
sbb
mov
adc
in
inc
jmp
add
xchg
mov
inc
icebp
cld
adc
xchg
sbb
hlt
test
sub
das
inc
jbe
mov
jp
mov
cmp
add
mov
jge
ja
push
out
cli
mov
sub
adc
sub
mov
push
mov
and
mov
in
ja
jnp
or
sub
clc
push
loopne
enter
add
sub
add
jns
hlt
inc
mov
or
and
xor
or
adc
mov
jmp
addb
cwtl
dec
adc
pop
jg
loopne
mov
clc
nop
sbb
lcall
xchg
inc
adc
loopne
rorl
addb
and
aas
add
dec
and
and
sbb
and
add
mov
xlat
out
imul
pop
pop
bound
fmull
push
cmp
sarb
in
ret
push
nop
and
add
repnz
adc
aad
inc
ljmp
ja
add
clc
cld
movsl
flds
or
shrb
call
add
adc
clc
and
add
mov
push
call
dec
jp
add
andl
lock
ret
add
mov
ja
add
mov
or
add
jecxz
jae
adc
add
and
aam
sub
xchg
test
push
roll
inc
cmp
pop
sub
adc
adc
add
icebp
cmp
adcb
jo
outsl
cmp
sbb
add
xor
inc
or
fninit
add
not
jne
test
repnz
fsubs
or
pop
push
lret
inc
xchg
loop
ljmp
clc
jb
pop
les
mov
sarb
je
xorb
movb
lret
dec
cmpsl
jp
add
sub
addl
mov
xor
pop
jo
hlt
adc
mulb
sub
xchg
outsl
addb
jmp
cli
pop
rcrb
fnstcw
ret
ja
xchg
aas
repnz
repz
jae
nop
negl
gs
adc
popa
cmp
add
and
jb
push
dec
jp,pt
pop
clc
push
and
lock
out
push
add
test
jne
push
push
nop
add
mov
fmul
fimuls
mov
inc
pop
or
test
and
sub
dec
add
xchg
lock
xor
pop
cmpsl
push
dec
cmp
jmp
decl
pop
invd
cs
notb
mov
call
inc
outsl
lcall
lea
push
dec
inc
jmp
and
ret
movl
loope
lea
ficoml
and
pop
test
mov
xor
cs
add
lret
pop
mov
mov
movsl
mov
pop
test
test
dec
daa
mov
pop
in
dec
cs
and
les
lcall
cmp
xchg
ret
daa
add
icebp
and
aaa
xchg
mov
je
dec
pop
cmp
mov
xchg
push
add
mov
adc
push
sbb
push
mov
mov
movsb
sub
adc
shr
add
addl
loop
dec
imul
push
stc
jl
add
push
lea
inc
jmp
insl
call
pushf
adc
add
call
outsl
mov
andl
scas
ret
leave
out
cli
enter
stos
loopne
or
mov
and
or
loop
push
test
push
or
repnz
out
movsl
pop
daa
add
jge
add
in
repz
add
clc
cmp
add
test
pmuludq
adc
cmp
ret
pop
sbb
inc
into
and
call
adc
pusha
add
enter
and
inc
add
pop
mov
mov
ljmp
sub
jge
add
jnp
push
and
fs
lock
jno
mov
rorb
or
add
mov
inc
add
mov
ficoml
cmp
xor
cltd
jle
aam
pop
add
and
cmp
inc
mov
mov
add
mov
rep
xor
scas
mov
or
mov
ret
push
call
loopne
adc
add
mov
rolb
dec
ja
pushl
inc
add
mov
add
pop
sub
stos
pop
pop
xchg
xchg
push
mov
sub
jno
pop
dec
sbb
js
shll
sbb
mov
xlat
dec
fs
add
push
cld
adc
hlt
xchg
es
stos
out
pop
cmp
jae
sbbb
adc
testl
dec
pop
out
push
or
js
bound
inc
jecxz
sbb
dec
lret
enter
pop
push
dec
jl
add
jl
sbbb
add
inc
mov
lods
add
cmp
add
jle
out
jmp
fidivrl
dec
scas
dec
push
add
call
sub
mov
frstor
mov
push
lcall
ror
std
dec
jo
and
maskmovq
notl
mov
dec
adc
and
dec
add
add
cmp
cmpb
cmpl
pop
cli
jns
and
data16
dec
xlat
test
add
inc
cmp
mov
xor
inc
push
push
ds
push
js
cmp
rorb
add
lcall
inc
mov
es
xor
or
out
faddl
mov
dec
pop
fs
adc
cmp
test
clc
mov
sub
dec
in
add
lock
into
push
fdivl
jnp
pop
lcall
push
subb
fadd
fadds
in
shll
jmp
ret
dec
and
jle
dec
mov
pop
sbb
shr
mov
divb
cmpsb
add
stos
hlt
scas
insl
mov
jns
add
std
xor
ja
xorps
rcrb
dec
rcrb
add
scas
sbb
add
add
call
cmp
ficoml
push
add
lea
xchg
std
adc
sarb
sbb
add
pop
push
dec
add
xchg
mov
jae
sbb
adc
mov
ret
add
test
les
pusha
call
sahf
jae
jge
js
jo
cli
pop
mov
xchg
rcrl
hlt
das
xchg
dec
or
adc
mov
arpl
xchg
xor
adc
sbb
xchg
cs
or
sbb
shl
jp
pusha
push
or
out
adc
lock
push
add
and
mov
mov
add
pop
cmp
je
test
or
dec
jae,pt
cmp
pop
outsb
in
sbb
add
and
rcll
cld
xchg
fadd
sub
push
add
lcall
add
sbb
dec
jne
outsl
xchg
addr16
xchg
imul
jl
jmp
mov
and
push
dec
xchg
fistl
add
ret
push
adc
inc
addr16
add
aad
add
fimull
addb
ja
push
jne
aam
sbb
enter
sbb
ljmp
xchg
push
imul
add
enter
in
ja
add
pop
je
add
jmp
cld
push
nop
jno
add
cs
sbb
dec
aad
push
adc
scas
sub
std
rolb
xrelease
scas
mov
jne
addr16
pop
lret
cltd
xor
ret
dec
adcb
inc
add
insb
push
pop
dec
and
das
mov
fiaddl
int
xchg
inc
cwtl
add
push
cltd
ret
pop
jl
nop
add
imul
inc
push
outsl
dec
jne
pop
add
mov
mov
xchg
lcall
dec
stos
data16
xchg
nop
aad
add
call
into
cmovs
loopne
jge
rcll
cmp
or
cmp
or
add
ret
inc
and
into
rorb
add
lock
movsl
adcb
loopne
cmp
and
dec
mov
pop
inc
cmp
inc
fs
les
test
pusha
add
jo
popf
add
into
ljmp
decl
jle
or
pop
add
mov
ficoms
js
or
es
mov
cmp
and
pop
ret
rcr
and
mov
add
pop
push
inc
mov
add
movzwl
add
xor
add
pusha
or
cmp
push
je
push
add
push
or
es
add
mov
add
repnz
push
cli
xor
inc
or
pop
test
rorb
repnz
sub
repz
daa
imul
sbb
cltd
sbb
in
add
sti
or
and
incl
and
jmp
or
push
mov
pop
add
call
subb
es
or
je
out
mov
push
jmp
push
cmp
push
adc
push
inc
stos
and
cmp
add
mov
and
call
add
idivb
push
out
pop
mov
and
lcall
adc
adc
iret
inc
bound
mov
mov
inc
popf
mov
movsb
cmp
mov
aad
add
push
in
push
clc
add
xchg
dec
add
sub
dec
xchg
dec
adc
xor
test
mov
jae
inc
add
fiaddl
loope
cmp
fmul
add
fadds
cmp
xor
sbb
push
or
fwait
xchg
dec
xchg
xchg
rolb
add
cmc
push
stos
in
inc
dec
add
inc
xchg
add
xchg
adc
mov
add
xchg
ja
cmc
fcmovnb
push
clc
and
fildll
addb
mov
into
add
sbb
pop
jle
pop
inc
sbb
cmp
push
and
pop
xor
sbb
push
test
pusha
aam
xor
sbb
xchg
adc
push
in
pop
adc
mov
jmp
aaa
push
aas
push
movsl
addb
or
jg
mov
inc
adc
mov
loopne
dec
fiadds
push
sbb
mov
sti
jmp
insb
ret
cmp
aam
dec
push
js
adc
repz
testl
and
push
and
add
dec
aam
cmpsl
and
loop
jg
je
loopne
mov
loopne
sbb
xchg
repnz
push
mov
push
cli
rorl
xchg
aas
ret
lea
test
inc
mov
sub
cmp
jle
xor
sub
add
lret
in
pop
loopne
cmp
add
jae
add
push
call
divb
pop
dec
add
mov
add
pop
sub
and
push
push
adc
xchg
and
out
inc
pop
pop
push
mov
roll
addr16
dec
jb
and
cmp
mull
dec
add
sbb
lahf
movb
inc
mov
gs
shr
add
add
add
cmp
adc
mov
shlb
dec
push
add
adcl
ja
ds
inc
cmpsl
clc
jne
or
cld
push
or
filds
ret
or
insb
and
iret
hlt
lahf
add
dec
test
in
je
orb
cmp
dec
pop
mov
stos
loope
popa
cmp
or
vpmadcsswd
loope
aaa
pop
xchg
push
in
inc
mov
dec
in
lea
mov
jge
mov
ret
pop
jno
out
lret
pusha
lcall
mov
jbe
push
ljmp
xchg
cld
pop
pop
sbbb
add
sbb
loopne
sbb
jl
pop
aam
fmul
orb
hlt
je
add
movsl
and
fcoms
in
mov
push
in
mov
pop
and
sub
les
dec
fcoml
add
push
outsb
stos
xor
push
lret
fcomp
mov
add
add
push
add
or
bnd
adc
pop
out
loope
in
or
add
testb
jb
add
leave
aas
push
add
adc
inc
adc
xchg
xchg
cmp
imul
std
jle
leave
nop
add
repz
je
add
ss
xchg
xchg
test
add
popl
sub
dec
inc
inc
push
roll
mov
xchg
mov
cld
aas
add
lahf
enter
dec
lcall
mov
pusha
jmp
inc
sub
add
std
mov
and
cmpsb
inc
adc
push
sarl
lock
jmp
cld
paddusb
inc
jmp
rorb
test
ss
in
sub
nop
xorl
push
mov
inc
fadds
cmp
lea
fucomi
push
lcall
mov
jnp
jecxz
cmp
xchg
daa
push
pop
jno
iret
add
sbb
dec
add
rcrl
inc
bound
inc
into
pop
data16
xchg
and
inc
pop
dec
and
add
or
stc
mov
jo
sbb
sub
aaa
sbb
sbb
cmp
pop
es
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
loope
call
adc
xchg
sub
addl
add
fisubrs
xorb
push
mov
or
add
fiadds
ja
sbb
xor
inc
rorl
push
adc
push
lods
mov
sub
sti
cmp
mov
ret
cltd
mov
pop
add
popa
xor
add
xchg
inc
sub
sbb
das
or
nop
es
jecxz
aas
add
mov
and
int
and
roll
add
daa
add
rcrb
push
pop
les
mov
add
xchg
add
pop
add
inc
frstor
add
jge
add
push
clc
in
jg
add
adcl
add
inc
xor
push
add
inc
mov
add
pop
cld
or
jp
pop
push
leave
and
sarl
mov
in
cld
enter
add
rcrl
sub
add
pop
mov
rcrl
cmp
scas
dec
std
sti
cmpsb
add
and
inc
sbb
mov
movsb
or
xchg
inc
xchg
pushl
and
das
icebp
fwait
mov
shll
push
mov
add
popa
sub
addb
mov
jge
pusha
leave
inc
aam
mov
add
and
cmpsl
shll
insb
jno
add
jmp
ss
push
add
mov
idivl
inc
push
dec
outsl
jne
mov
sti
pop
aad
and
jle
xor
test
dec
push
xchg
jne
and
and
and
ljmp
jae
mov
add
dec
hlt
lock
lret
lds
rcrl
xchg
adc
loope
xor
pop
sbb
xlat
das
jb
jecxz
cmp
ror
in
jmp
or
clc
ret
xchg
out
mov
adc
sub
inc
push
ret
out
mov
sub
dec
lods
dec
shr
mov
mov
ds
fisttpll
push
mov
out
sub
in
movsl
shlb
push
pusha
adc
adc
lahf
cmp
jo
add
sub
mov
sbb
push
fmuls
xchg
jne
add
cli
inc
xorb
push
sbb
jne
nop
or
jno
pop
add
js
loopne
je
push
addb
cld
adc
cmpl
adc
add
idivb
cld
imul
and
mov
je
sbb
sbbl
add
pop
je
adc
bound
jmp
idivb
js
mov
and
inc
ds
xchg
je
pop
push
and
aad
jg
mov
push
pop
ja
add
jae
lea
fldl
shll
iret
test
cmp
in
push
dec
or
insb
add
adc
add
inc
stos
push
dec
seto
mov
ja
nop
lods
mov
push
add
xor
dec
iret
lret
shlb
mov
sbb
mov
mov
daa
sbb
mov
xor
inc
jne
sbb
cmpb
fwait
rcrl
shl
add
and
in
enter
les
dec
inc
inc
aad
jmp
push
add
loope
cs
ja
push
xor
ret
mov
push
pop
add
pop
adc
add
push
scas
xor
punpckhbw
pop
mov
pop
xchg
push
mov
test
mov
add
or
pop
lock
add
mov
sub
stc
pop
pop
repz
pop
je
in
jb
sub
enter
cld
xlat
sbb
cwtl
dec
cs
js
pop
add
mov
incb
mov
or
jecxz
sub
dec
pop
mov
aas
jae
add
cmp
xchg
scas
jne
sbb
add
add
adc
add
fcom
mov
cmp
sbb
out
add
and
repnz
pop
sbb
xorb
mov
dec
stos
cmp
adc
loop
sub
mov
mov
mov
mov
inc
out
mov
or
ds
cmp
das
daa
jle
idivl
hlt
cmp
xor
and
add
call
int
cmp
jae
lcall
mov
mov
adc
or
sbb
sub
bound
pop
sub
clc
add
out
dec
xchg
jmp
mov
xchg
mov
pusha
jl
push
scas
inc
xchg
loopne
lods
add
xchg
push
movb
add
jmp
or
and
push
adc
sub
jns
push
sub
mov
jae
movb
lea
lods
mov
add
mov
pop
and
mov
sub
mov
pop
sti
shlb
push
shll
imul
jne
cmp
push
sub
mov
jle
std
add
call
push
add
loopne
faddl
pop
fcom
push
repz
xor
sti
scas
mov
or
gs
pop
andb
pop
js
push
mov
loopne
sub
add
cmc
mov
pusha
xchg
mov
inc
push
addl
inc
sbb
mov
jg
lsl
push
movsb
loopne
clc
leave
add
push
lock
mov
add
jbe
insl
inc
mov
add
popf
subb
pop
xchg
inc
dec
ljmp
add
ja
sbb
mov
add
sbb
addb
lds
jbe
mov
lret
movsb
fsts
or
xchg
movl
mov
cmpb
mov
int
lea
das
arpl
adc
mov
addb
mov
ljmp
je
mov
shrb
jns
addr16
sbb
loop
repz
add
imul
add
fmuls
pop
adc
icebp
aam
in
jge
pop
cmp
repnz
je
int3
bound
xchg
or
or
add
mov
pop
add
ret
rolb
stos
or
cmp
shll
mov
test
add
adc
sti
pusha
sub
loope
cs
adc
xchg
aas
add
inc
jo
mov
add
ja
xchg
nop
pop
subl
dec
shlb
adc
hlt
add
and
mov
add
and
jb
fcomps
mov
push
add
jb
add
and
dec
xor
adc
je
add
xchg
add
hlt
loopne
incl
pop
and
addr16
adc
add
mov
push
mov
and
or
and
loopne
or
loop
in
sub
je
push
negb
push
sbb
shll
dec
in
sub
add
nop
movsb
mov
cmpb
daa
ja
xor
inc
jno
mov
sbb
add
pop
add
mov
add
fcom
pop
or
inc
test
dec
int
mov
lret
jg
out
add
sbb
cmp
add
ss
xor
movsl
adc
mov
push
popf
in
jmp
cltd
or
mov
jne
add
cmpsl
lret
adc
mov
xlat
ljmp
mov
jbe,pt
or
add
out
add
out
mov
fildll
aam
mov
add
lock
mov
add
pop
clc
push
push
loop
add
xor
cmpsb
bswap
sub
mov
mov
inc
push
les
xor
repnz
rcrb
add
clc
jne
push
mov
pushf
inc
clc
int3
pop
mov
inc
insb
and
cmp
in
pop
adc
aad
cmp
lock
fstpt
out
sbb
push
in
xor
adc
fs
push
cmp
popa
cmp
inc
clc
mov
cli
or
mov
sub
and
xchg
jg
shrb
dec
cmp
jb
and
pop
repz
inc
inc
pop
sbb
add
sub
mov
mov
aaa
call
bound
mov
dec
add
inc
in
or
cmc
push
test
fcoml
sbb
dec
sbb
inc
gs
je
popa
icebp
cld
fs
jp
jae
and
imul
shll
add
stc
sbb
insl
adc
and
mov
bound
add
loope
fnstsw
lods
add
jge
pushf
add
cs
bound
lret
ds
addl
out
js
mov
cmp
test
sahf
sub
loop
movsl
add
call
add
rorb
je
and
jle
add
out
stc
fs
inc
add
sub
adc
lret
add
aas
jmp
call
add
xchg
cmp
les
stos
sbb
pop
call
out
push
add
adc
dec
push
dec
add
mov
jp
leave
lret
jne
push
cli
ret
add
add
push
pop
clc
repz
into
adcb
movsb
add
imul
or
es
push
lret
cmp
sub
cmp
inc
sub
enter
mov
mov
je
mov
ljmp
pop
mov
push
in
arpl
js
sub
sbb
inc
add
in
call
add
mov
in
outsb
push
mov
sub
in
sti
adc
add
xchg
push
add
in
add
loopne
andl
add
sub
sahf
pop
shl
jge
push
lock
push
mov
ss
cmp
add
shlb
imul
jge
push
cmp
je
add
pop
pop
pop
nop
repnz
xlat
add
wbinvd
in
shrb
pop
dec
ret
cld
lock
push
pop
in
xor
inc
inc
cmp
mov
mov
cld
mov
sbb
xchg
notl
sbb
in
add
add
jo
cmp
adc
push
hlt
fmull
add
loop
arpl
jnp
add
jl
js
add
sbb
add
testb
or
pop
dec
add
xchg
cmp
and
sbb
lock
mov
xchg
lods
sbb
add
xchg
mov
jae
jg
add
les
jmp
push
jge
xor
jle
xor
loopne
outsl
push
jp
pop
das
add
jmp
lret
push
xor
and
push
mov
rcrb
push
mov
mov
fs
sub
cmp
cld
out
add
pop
bound
sti
std
popa
add
mov
clc
arpl
sbb
fldcw
and
testl
dec
jecxz
jns
into
fldl
cmp
lods
fcoms
add
jo
mov
jne
adc
lahf
push
push
iret
pop
sar
dec
in
mov
push
mov
adc
add
mov
dec
add
sub
cmp
and
aad
mov
inc
sub
rorb
insl
out
sub
data16
lcall
xchg
inc
cld
push
setae
and
icebp
or
addr16
push
add
iret
into
sbb
mov
adc
add
adc
popf
dec
pop
mov
add
lods
push
lret
adc
xchg
add
dec
or
adc
xchg
sub
xor
inc
or
and
fnstenv
rcll
jmp
ds
add
in
mov
jne
push
sub
data16
inc
cmp
jmp
test
cmp
stos
clc
jo
xchg
orb
xor
pop
das
je
fcomip
cmp
mov
sbb
push
cmp
pop
inc
xor
add
mov
dec
adc
and
imul
enter
subps
sahf
pop
push
jae
addl
lea
clc
je
mov
adc
add
enter
cs
add
stc
mov
inc
js
pop
xor
xchg
jo
push
mov
xchg
lock
ds
iret
pmulhw
jmp
insb
inc
push
rorb
mov
pop
lods
inc
clc
add
mov
pop
jns
movsl
add
dec
rolb
inc
dec
add
or
or
lock
and
call
pop
mov
add
inc
dec
in
inc
add
push
pusha
add
pop
sbb
jne
movsb
add
mov
sub
and
fadds
jmp
enter
jl
and
push
sbb
incb
jb
xchg
mov
xor
add
mov
dec
shlb
and
gs
outsb
jecxz
test
orb
aas
inc
pop
sets
cmp
mov
sbb
dec
nop
mov
out
rclb
adcb
mov
test
das
push
ds
dec
jb
xchg
cli
jmp
out
add
cld
and
adc
jne
add
mov
nop
cmc
inc
fbstp
pop
pop
xor
ficoms
add
and
jp
mov
stos
lcall
jg
cmc
mov
xchg
jns
pop
ret
jbe
lahf
push
loopne
fdiv
mov
out
orb
test
mov
inc
add
mov
shrb
addl
jge
and
add
dec
test
adc
mov
stos
lcall
pop
push
movl
fistps
call
add
jle
sbb
push
jmp
in
in
test
add
dec
sbb
add
mov
outsl
cmp
adc
and
or
mov
incb
push
xor
add
gs
sbb
and
pop
add
les
add
ja
clc
sti
sub
jecxz
pop
adc
inc
and
dec
sub
insl
and
add
sbb
addl
jns
dec
cmp
xchg
mov
xchg
add
pusha
inc
sub
add
push
subb
stc
sub
pop
gs
add
pop
out
sbb
mov
call
inc
das
pushf
mov
or
and
add
enter
jb
je
inc
mov
add
orb
xor
in
ret
fcoml
mov
pop
testl
push
and
add
push
or
dec
add
aad
and
adc
cmp
test
push
adc
push
sbb
push
push
xor
pop
repnz
aas
inc
xor
push
add
add
add
mov
stos
cmp
lcall
adc
push
add
pusha
and
dec
inc
xchg
cmp
xorl
leave
test
xor
into
push
idiv
pop
mov
add
inc
movsl
addb
adc
cltd
or
dec
adc
arpl
dec
lods
push
les
mov
adc
stos
inc
out
mov
orb
and
add
leave
mov
js
add
test
cmp
and
and
fiaddl
push
cmc
adc
daa
scas
movsl
add
jmp
pop
pop
aas
pop
std
shlb
in
scas
icebp
push
mov
mov
or
add
inc
popa
sub
mov
add
and
out
dec
or
cmp
jg
xlat
adc
loopne
dec
std
add
jle
cwtl
or
xchg
loopne
mov
test
out
dec
addb
fidivrl
lds
imul
sbb
or
jle
faddp
xchg
daa
sub
pop
mov
jp
xchg
in
inc
into
jle
xchg
jl
mov
in
add
fstl
push
pop
dec
adc
sti
xorb
cmp
sub
hlt
das
mov
test
je
cvtps2pd
dec
imul
and
in
jg
sub
pop
or
iret
aas
sbb
cmp
cli
mov
adc
xchg
cmp
sbb
add
xchg
ds
add
cld
add
or
jo
xor
push
push
ds
sbbb
cmp
inc
sti
pop
inc
adc
dec
push
sarb
jbe
gs
test
dec
into
repz
andl
add
ja
push
cmc
out
mov
daa
adc
and
add
dec
mov
enter
add
push
and
fmuls
inc
pop
ja
push
mov
je
add
pop
and
adc
push
sbb
add
or
inc
mov
and
adc
stc
loopne
addb
push
testb
cld
or
test
xchg
sahf
xchg
rcrl
fists
push
pusha
add
call
movsb
push
add
mov
add
nop
repz
and
sbb
xchg
sub
jns
pushf
sub
jo
jae,pn
xchg
add
push
imul
and
cmpsl
je
jmp
cmp
jbe
add
xchg
test
xchg
out
add
inc
js
rolb
mov
clc
les
dec
cmp
dec
out
repz
and
imul
inc
add
in
insb
inc
test
test
push
movsb
sbb
add
and
fsubl
js
int3
pop
or
xchg
addb
mov
add
lcall
add
mov
mov
lcall
clc
ret
push
nop
push
adc
or
or
add
sbb
pop
call
or
mov
faddl
sbb
mov
and
movsb
add
pop
and
lock
andl
das
call
xor
add
cmp
movsb
and
add
sub
mov
add
mov
lods
add
adc
loopne
xor
pop
xor
scas
add
or
and
pusha
hlt
and
or
int3
push
mov
lret
mov
push
enter
loopne
fcoml
dec
sbb
xchg
adc
stc
and
sbb
test
sub
or
and
je
xor
mov
jne
fs
adc
lods
dec
aas
add
lods
pop
arpl
add
test
cmp
cmpsl
or
add
rclb
pop
mov
mov
cmp
jo
pushf
inc
shrl
jle
pop
and
dec
pop
icebp
insb
jbe
subb
fcoml
lods
adc
cld
insl
add
and
fs
push
jne
mov
pop
mov
add
adc
dec
push
inc
sahf
mov
movsb
or
push
sub
and
testl
sbb
mov
push
lea
adc
test
sbb
or
and
andb
out
loopne
add
je
insl
gs
add
outsl
out
addl
cld
ljmp
inc
sbb
sbb
cmpb
inc
mov
pop
adcb
in
or
dec
rol
push
or
xor
aam
adc
stc
rcrl
sbb
repz
fmuls
loop
add
jl
movsb
add
pop
adc
pop
or
pop
es
dec
je
add
mov
xchg
and
pushf
dec
movsb
xchg
xchg
repz
aam
fdivr
in
in
sti
hlt
clc
cld
add
add
adc
sbb
les
pop
xchg
xor
cmp
pop
dec
icebp
push
pop
clc
in
fs
insb
jo
jl
test
dec
cmpb
cmp
inc
and
ds
add
or
rorb
fs
mov
mov
addb
and
mov
in
pop
loop
gs
add
and
adc
add
xchg
sub
inc
dec
dec
dec
add
incl
push
pop
pop
add
in
add
inc
dec
push
dec
adc
addr16
insl
pop
outsb
scas
add
add
add
and
imul
fcoml
mov
cmpsl
add
call
je
push
xor
inc
cwtl
mov
pushl
adc
or
xchg
xor
and
inc
xor
cmp
inc
add
imul
lock
nop
sub
sbb
inc
cmp
and
je
mov
mov
add
sbbl
and
and
pop
add
lea
cmp
add
push
scas
mov
sbb
hlt
add
sbb
js
add
push
xchg
divl
test
mov
or
cmc
add
jecxz
mov
pusha
insb
add
clc
daa
push
and
cwtl
gs
popl
xchg
psubsb
test
cltd
pop
jo
or
jg
add
add
mov
jne
adc
movsb
or
jle
add
xor
loopne
in
jo
inc
cmpsl
or
int3
dec
clc
xchg
or
movsl
pusha
cmp
jecxz
adc
dec
nop
test
mov
shlb
xor
cmp
inc
inc
push
add
and
rcl
mov
ds
cwtl
push
add
add
add
add
pop
pusha
or
push
or
femms
inc
adc
add
cltd
or
and
sarb
and
xor
add
push
fwait
loopne
rolb
xchg
adc
nop
jbe
add
sbb
pushf
sbbb
test
and
adc
xlat
mov
mov
and
daa
jp
sub
and
push
mov
xor
cmp
add
push
aas
add
adc
loopne
xor
mov
ds
xor
push
ss
cltd
add
xor
les
cmp
dec
xchg
add
inc
pop
mov
adc
add
arpl
xor
xor
sbb
jo
fstps
sahf
call
scas
and
mov
adc
pushf
cmp
pop
cltd
jns
insb
ret
shll
loopne
add
les
jne
add
sub
fsubl
andb
loopne
and
mov
sbbb
or
and
pusha
adc
mov
add
aam
test
pop
sbb
or
inc
add
push
dec
cltd
mov
mov
fldenv
inc
xor
gs
or
pushf
mov
sbb
add
sub
inc
notl
lea
sub
flds
pop
adc
mov
mov
xor
xor
test
je
hlt
outsl
pop
inc
cmp
rcll
xchg
jnp
ret
movsb
or
sbb
pushf
adc
add
movsl
lods
dec
pop
sbb
imul
xor
add
movsb
fcomp
test
popa
dec
or
dec
repnz
jns
inc
and
jp
data16
cmp
enter
hlt
jne
mov
add
adc
xchg
pusha
push
lcall
mov
popa
insb
in
adc
xor
add
pop
mov
test
jo
mov
and
lods
xchg
or
pushf
xor
mov
inc
mov
nop
add
push
inc
push
add
jl
mov
push
lods
mov
xchg
nop
xchg
push
jo
xchg
sbb
enter
add
jl
lea
add
or
loope
cwtl
add
and
inc
mov
pushf
sarb
fwait
add
sub
push
xchg
aas
xchg
adc
push
lods
xchg
cli
mov
pop
cltd
xor
or
dec
aam
loop
and
inc
decb
pusha
push
xor
and
lahf
jle
nop
mov
fdivrp
lock
mov
iret
cmp
iret
dec
rcrb
and
std
sarb
mov
sub
xchg
rclb
ss
sub
push
adc
adcb
add
aam
in
hlt
add
xchg
sbb
adc
daa
jle
add
inc
fs
and
test
xor
mov
sbb
sub
cmp
add
mov
cmp
xchg
aam
loop
lock
adc
cmc
pop
add
cwtl
stos
mov
push
lret
decb
or
and
lods
sbbb
xchg
mov
shl
loopne
and
cmp
xchg
jg
add
orb
push
add
sub
or
xor
scas
movsb
in
fs
je
jle
lcall
xor
add
outsb
pop
insb
xor
add
adc
inc
xchg
leave
add
into
outsb
out
push
fs
add
insl
inc
inc
xor
add
jne
in
jnp
add
jmp
adc
xor
dec
lret
pop
push
loopne
fidivrl
mov
sbb
add
jp
xor
in
jne
incb
xor
mov
outsl
arpl
call
sbb
sbb
cmpsb
sub
in
adc
push
push
imul
push
shl
add
inc
jns
xor
add
lock
je
mov
dec
or
add
jo
std
xchg
push
je
imul
popa
mov
jmp
mov
and
push
xchg
add
or
jl
add
jb
jno,pt
into
add
xor
dec
outsl
cli
add
outsb
stc
or
inc
dec
adc
inc
imul
insl
push
push
pop
push
dec
push
adc
mov
fsubl
insl
add
push
xor
add
push
sub
mov
sbb
inc
pushf
inc
xor
jae
sub
rcrl
push
mov
push
outsb
push
inc
cmp
push
inc
cltd
fidivl
shlb
push
outsl
xchg
add
add
cmp
addb
aam
or
pop
push
sbb
rep
lock
shlb
fs
mov
and
sub
xchg
add
imul
jo
and
jp
cmp
xchg
jno
add
jne
jb
lret
dec
xor
inc
mov
jge
add
addr16
dec
incl
sahf
popa
mov
dec
add
mov
or
jnp
sub
jo
movsb
dec
repnz
pop
push
inc
xchg
add
add
sub
cmpsb
cmp
add
aam
mov
and
popa
jne
sub
mov
in
mov
hlt
pushw
sub
outsl
cwtl
mov
sub
lcall
lods
or
mov
mov
aam
movsl
add
test
call
inc
sbb
ficoml
stos
dec
pop
sub
mov
lahf
sub
and
aas
dec
fiadds
adc
in
xchg
inc
xchg
pusha
add
loop
insl
inc
jo
add
push
mov
lds
jp
adc
or
push
inc
or
mov
es
lds
movsl
sbb
add
sub
inc
out
and
mov
in
lods
repnz
xor
imul
dec
sbb
div
push
test
int3
push
insl
repnz
xor
xor
mov
add
cmp
add
mov
add
mov
sub
jbe
or
movsb
cld
add
aas
pop
popa
arpl
repnz
push
add
ja
xchg
and
inc
hlt
out
fwait
and
addb
imul
mov
jne
jle
add
sub
xor
pop
cmovne
cmpsl
mov
filds
add
pop
pop
cmpsl
adc
cmp
add
add
in
and
jo
adcb
pop
or
pop
out
fcom
js
sub
xchg
inc
xor
inc
ret
in
add
movsb
out
shll
add
loopne
test
cmp
and
add
mov
pushf
add
sub
aam
sbb
cmp
adc
xchg
test
ljmp
push
xor
and
mov
sub
mov
cmp
repz
adc
dec
cmp
test
in
repz
xchg
aaa
add
sub
push
add
sub
inc
stos
inc
insb
in
add
and
sbb
popa
mov
gs
or
mov
add
jge
or
cwtl
movsl
mov
or
mov
pop
jle
push
and
js
push
sbb
xchg
outsb
fiadds
into
push
sarb
cmp
aad
pop
movsl
add
hlt
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
decb
lods
xchg
add
je
jbe
js
add
jl
jle
nop
mov
cmp
es
pushf
inc
loopne
popa
and
push
leave
push
sarl
add
sbb
cmp
ret
push
aad
fistps
je
add
xchg
cmp
daa
sbb
cmp
pop
sub
js
jp
jl
jle
jle
jle
jle
push
pop
cmp
add
inc
sub
xchg
or
popf
adcl
push
movb
sbb
xor
jg
add
cmp
faddl
sbb
cmp
aaa
add
push
pop
pop
call
xchg
hlt
in
clc
hlt
or
andb
add
sub
jmp
stc
mov
sti
andl
pop
add
or
pushf
xor
popf
add
test
cmp
xchg
mov
out
out
ret
sbb
push
xchg
mov
push
subps
and
xchg
les
lret
push
jle
sbb
xor
popf
pop
sbb
mov
lahf
xchg
pop
out
cmp
add
or
daa
sbb
addr16
lock
mov
xchg
out
leave
mov
xchg
add
fnstcw
jb
je
jbe
add
dec
xorl
mov
leave
rcl
push
add
cmp
push
test
iret
lock
hlt
add
loope
icebp
imul
dec
cmp
scas
add
loop
or
sub
mov
ret
rorl
aas
cmp
enter
int3
sbb
pop
pop
out
xchg
xor
push
enter
iret
je
xor
inc
fmuls
add
jp
jl
jle
repnz
xor
popf
dec
sbb
push
pop
lahf
fs
nop
sub
js
push
xchg
hlt
mov
mov
sbb
inc
cmp
cmpsl
imul
mov
jmp
cld
call
ss
pop
sarl
sti
cmp
addb
insb
adc
xchg
dec
xchg
cmpsl
add
xor
in
mov
mov
loopne
in
std
call
sub
jbe
sbb
cmp
popf
add
sbb
loop
add
inc
lds
test
mov
mov
add
add
push
leave
loopne
sar
and
cmp
add
push
icebp
cwtl
lret
push
push
adc
xor
mov
rcrb
jecxz
repnz
mov
pusha
sbb
repz
fcompl
in
in
pop
testl
call
sub
sbb
aas
push
dec
pop
mov
orb
dec
xchg
lcall
iret
shl
add
je
cmp
js
jp
jl
jle
test
ja
jns
jnp
jge
jg
add
sbb
aaa
sbb
sahf
dec
push
test
xchg
xchg
lahf
scas
pop
mov
mov
lahf
lahf
ficomps
testb
daa
pop
push
inc
push
addr16
ss
push
out
inc
iret
dec
inc
push
bndldx
outsb
hlt
jbe
jle
lret
aas
cs
outsb
sahf
scas
cmpsb
out
scas
das
mov
mov
iret
iret
fmulp
out
out
iret
test
push
push
cmp
dec
push
add
cs
add
cmp
adc
in
hlt
add
jle
cs
hlt
enter
sub
call
fcoml
cld
inc
dec
dec
mov
pcmpgtb
je
jl
and
cld
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
int3
aas
aam
fdivrl
in
in
ds
pusha
add
cmp
cmp
sbb
and
sub
xor
aas
in
call
pop
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
mov
aam
fsubl
stos
xchg
cld
xchg
mov
add
sbb
and
sub
xchg
int3
push
add
jl
test
inc
mov
mov
loopne
hlt
pop
cli
cmpb
or
js
dec
mov
cmp
cmp
pop
cmp
insb
aas
jo
je
js
sub
xchg
jl
jmp
stc
enter
rcrb
pop
loopne
push
adc
ds
and
cmpsl
add
les
pop
out
je
insb
in
je
js
jl
cmp
cld
mov
mov
nop
cld
xchg
cld
movsb
cld
cld
int3
cld
sar
aam
in
xorl
call
add
push
sub
xor
xor
loope
xchg
pop
inc
dec
xor
dec
test
sub
aas
mov
adc
dec
sub
and
lock
xor
div
cltd
mov
pusha
aam
and
push
pause
push
xor
mov
je
jbe
add
call
mov
ret
clc
sar
jo
add
add
or
cmp
cmp
lahf
dec
xchg
add
insb
pop
cmpsl
outsb
pusha
out
jo
cwtl
in
pushf
lock
lods
stc
mov
sbb
jle
add
addb
mov
and
inc
add
dec
dec
or
add
pusha
xchg
subb
leave
pushf
shll
mov
cmp
rolb
and
loopne
pop
add
lods
xlat
add
cs
lahf
sbb
xchg
and
dec
and
pop
iret
pusha
leave
shrl
insb
loope
jno
lock
pop
jl
xor
dec
and
es
jle
add
out
je
xor
cmp
adc
and
sub
std
lahf
add
mov
in
js
jl
sbb
test
mov
adc
iret
enter
rol
aam
fmuls
loopne
jb
dec
call
add
sub
hlt
cmp
mov
fidivrl
js
jp
jl
mov
push
mov
leave
fsubs
pop
in
dec
pop
mov
shlb
adc
xor
cmp
jo
or
clc
add
push
rorb
dec
lcall
stc
clc
int
add
push
pop
jno
cld
cmp
inc
inc
push
outsb
mov
jp
jle
popf
xchg
and
sub
push
pusha
into
cmpsb
cmp
add
or
xorl
test
add
es
nop
dec
shrl
or
lahf
add
push
sbb
addl
xor
ss
daa
dec
add
rcrl
stos
shlb
out
pop
and
cmp
mov
cmpsl
add
repnz
xor
out
xor
faddl
loope
cmp
pushf
shll
scas
ljmp
pop
add
sub
imul
js
iret
mov
jno
popa
jg
movsl
fsubrs
xor
pop
add
ljmp
ret
int
xchg
es
push
or
test
rclb
das
pop
add
js
xchg
cwtl
scas
adc
mov
or
or
add
fsub
mov
mov
sbb
sub
mov
in
dec
sti
orl
es
add
insl
dec
movb
sub
sub
mov
ret
iret
popf
aad
ficompl
jmp
lock
add
and
sub
push
push
clc
push
add
into
jns
jb
je
add
inc
movb
xor
and
int3
and
or
cmp
sbb
xor
cmp
imul
aas
xchg
pop
or
out
loope
cmp
leave
sub
popa
pop
inc
jmp
mov
and
sub
mul
adc
cmp
cmp
andb
sbb
xor
add
jnp
hlt
cmp
mov
mov
fmuls
add
movsl
cmpsb
call
add
jecxz
xchg
jp
add
mov
mov
sub
cmp
movsl
mov
jmp
ret
les
add
xchg
jo
lret
add
adc
mov
shlb
fcompl
mov
mov
stc
shlb
aas
add
cs
or
cmp
ficoms
fstps
jae
sub
add
loop,pn
inc
in
int3
dec
in
or
out
test
push
mov
nop
ljmp
in
call
shl
stc
jle
add
in
popf
cs
jne
stos
add
cltd
clc
and
and
sub
and
stc
cmp
sahf
add
pop
pop
xchg
pusha
mov
sub
add
and
adc
push
dec
jo
or
jp
dec
pop
or
cli
mov
mov
xchg
xor
movb
fidivl
or
nop
pusha
mov
ud2
xor
xor
add
ljmp
notb
pop
cmpsl
test
inc
jb
xchg
add
lds
in
push
shlb
dec
push
add
add
dec
out
dec
pop
mov
jae
test
fwait
ror
adc
int3
mov
shl
sbb
daa
or
mov
cmp
add
cmp
daa
add
inc
ljmp
push
jb,pt
je
push
aaa
add
jo
pop
add
xor
adc
adc
mov
jbe
push
sub
add
ss
mov
fcomp
ljmp
xor
in
pusha
sub
pushf
rcrb
lahf
and
les
push
lock
addl
and
sbb
addb
rolb
jl
loopne
dec
sbb
out
dec
iret
icebp
or
add
push
inc
mov
leave
loopne
sbb
orb
sub
jecxz
push
pop
xor
dec
das
inc
dec
add
scas
xchg
mov
add
mov
in
loop
lock
hlt
and
xor
cmp
cmpb
cmp
cmp
xor
dec
dec
loope
xchg
out
add
xlat
icebp
ljmp
jge
add
or
lea
xchg
aaa
lahf
dec
mov
lock
add
inc
sbb
mov
jo
jb
int3
inc
jbe
cwtl
js
hlt
pop
cmpb
xchg
cmpb
push
cmp
aam
jle
sbb
popa
fs
fcos
jecxz
rcr
xchg
and
or
xor
call
sbb
sub
clc
pop
mov
dec
jae
cs
loop
mov
lret
aad
out
cli
sti
xorl
dec
push
or
fs
and
sbb
leave
mov
sub
add
and
jb
mov
jbe
dec
add
rdmsr
sbb
popf
dec
sub
pop
enter
fs
js
jle
jne
rorb
jb
je
jbe
js
roll
call
xchg
mov
cmp
pop
adc
out
in
cld
roll
xchg
sub
xor
add
sarb
stc
inc
push
push
cs
adc
pop
nop
lock
hlt
pushf
xchg
push
pop
movsb
lahf
test
lods
test
mov
enter
leave
lock
sbb
add
cmp
test
roll
add
subb
imul
into
icebp
sarb
jle
mov
addb
inc
xor
data16
push
sti
fidivs
jb
sbb
jl
test
mov
jp
sti
jmp
js
add
jo
dec
sub
stos
inc
mov
cwtl
jecxz
out
sub
popa
pop
mov
pop
cmp
pop
pop
pop
jle
fldl
stos
add
lret
loop
add
xchg
push
addr16
xchg
movsl
mov
or
out
loopne
xor
dec
add
push
dec
arpl
shll
hlt
pop
xor
push
dec
xlat
sbbl
push
xchg
jae
jp
add
out
sti
add
or
in
sbb
in
sub
stos
pop
add
insb
sbb
repz
subb
jge
ds
mov
in
push
shlb
add
je
jbe
pusha
je
and
iret
sbb
rolb
daa
negb
out
add
jle
clc
mov
repnz
and
mov
adc
fldl
dec
aam
cmp
push
cmp
lahf
arpl
psubsw
jg
xchg
cmpsl
xchg
mov
int3
add
popa
mov
stc
xlat
xchg
frstor
sarb
add
cmpsb
loop
push
pop
fmull
add
subb
push
clc
push
or
cmp
outsb
les
in
add
xchg
or
mov
iret
in
add
ss
add
cmp
push
cmp
loopne
jle
add
pushf
pand
orb
pop
inc
dec
adc
loope
cmp
push
push
sbb
mov
adc
add
dec
in
pop
xchg
popa
push
fsubrs
jb
scas
into
push
test
cmp
ds
loopne
add
mov
or
ljmp
jmp
pop
nop
lods
in
call
add
mov
and
sbb
xor
popf
add
pop
mov
das
rclb
cmp
pop
inc
or
add
into
or
cld
xchg
xor
xor
cmp
pop
inc
or
add
loope
enter
jbe
leave
jp
bound
roll
aas
je
cmp
mov
add
bound
in
jge
pop
cmp
mov
ret
xor
add
lahf
in
add
sbb
inc
daa
lods
cli
jno
in
and
sbb
out
mov
cmp
mov
mov
xor
pushf
jnp
xchg
add
fcomps
fiadds
cmc
xchg
or
mov
cmp
ds
aas
out
add
add
and
add
lock
cmp
push
xchg
cwtl
clc
adc
aaa
add
fmull
aas
and
add
js
cld
test
cmp
daa
inc
loope
fs
inc
push
or
sbb
add
push
jl
cmp
and
or
dec
sub
loopne
pop
repnz
dec
roll
mov
ds
dec
xlat
add
push
testb
sub
mov
xor
xchg
xchg
fadd
pusha
mov
dec
xchg
fadds
add
sahf
pop
add
fiaddl
lcall
clc
pusha
nop
pop
cld
jb
pop
mov
rep
nop
and
into
jbe
adc
addb
and
mov
lock
cwtl
mov
loopne
dec
and
add
mov
xchg
push
cmp
dec
and
xor
mov
into
pushf
sahf
pop
add
adc
sub
cli
inc
add
lock
outsb
clc
jnp
add
pushf
jl
push
pop
mov
add
out
cli
jo
push
adc
add
setbe
cld
add
mov
orl
or
sbb
rorb
pop
xor
add
sarb
cld
aas
cltd
in
add
out
enter
aad
mov
add
push
js,pt
dec
push
add
in
add
xchg
testb
in
cmc
lock
xor
iret
insl
sub
or
pop
stos
cmp
inc
jg
shrb
mov
mov
jl
dec
fldcw
xchg
leave
cmpsb
mov
mov
adc
js
sub
add
push
sahf
loopne
and
adc
ljmp
je
add
repnz
jo
mov
and
leave
unpcklps
and
inc
loope
jmp
sub
insb
pop
mov
mov
add
popf
pop
mov
out
in
add
mov
orb
mov
sarb
test
fcomps
je
jbe
pop
lret
or
or
push
mov
sti
cmp
cmp
daa
push
xchg
push
data16
ret
lock
mov
loopnew
jnp
dec
pop
sbb
lahf
out
repz
std
mov
add
ror
mov
insb
add
aas
push
xor
scas
hlt
orb
enter
mov
xor
and
mov
inc
mov
scas
push
dec
mov
mov
xor
nop
pop
add
dec
cmpb
dec
add
pop
or
lods
adc
daa
sbbb
cli
add
pop
cmp
aas
insl
leave
js
or
lea
adc
aas
repnz
pop
in
cmp
cmp
sub
inc
dec
add
add
xorl
cmp
ds
ja
stos
xchg
jo
jle
stos
add
ret
xor
repnz
fsubs
scas
add
mov
inc
shlb
add
pop
push
fs
mov
inc
add
jmp
jmp
mov
shll
addl
mov
xor
clc
pop
push
pavgb
xchg
leave
stos
punpcklwd
mov
hlt
cld
or
cmp
adc
sub
dec
and
nop
lahf
insb
xchg
je
ret
add
adc
loop
in
cmp
jo
add
ficoml
pusha
insb
add
adc
or
repz
add
repnz
shlb
inc
je
rorb
data16
jle
andb
stc
cmpsb
inc
mov
push
fld
add
push
ljmp
shrb
add
push
popa
cli
test
xchg
rolb
in
xchg
add
mov
and
inc
add
push
and
outsl
xchg
les
popf
ret
inc
fcmove
subb
mov
mov
shll
stc
popf
fstpt
cmp
jb,pt
je
add
mov
jo
pop
add
jl
dec
test
add
fmull
nop
add
cmovle
mov
loopne
ret
push
jbe
xrelease
sbbb
mov
or
jb
push
dec
and
loop
add
data16
insl
in
pop
clc
cltd
shlb
pusha
into
xchg
inc
push
add
adc
pop
sub
mov
jecxz
repnz
fcomps
outsb
dec
cli
jo
pop
nop
jl
lock
xchg
add
divps
int3
faddp
jb
sub
cli
scas
push
pop
jbe
lea
daa
roll
stc
jmp
add
cld
in
pop
jle
test
add
cld
icebp
xchg
jp
add
ss
xor
andb
arpl
dec
jl
testb
lret
test
and
xchg
cmp
cmp
push
add
shl
loop
icebp
add
pop
ret
daa
filds
clc
loop
adc
pop
ret
fs
shrl
mov
nop
stc
xlat
and
in
lahf
test
pop
cmp
cmpsb
clc
stos
xchg
lcall
cmp
ja
pop
push
ds
in
rolb
xor
or
or
loopne
adc
jbe
in
test
cwtl
aas
pushl
imul
adc
add
daa
jl
aam
insb
adc
add
clc
xchg
lahf
bound
or
dec
cmp
subb
mov
out
inc
push
add
push
clc
sbb
std
add
sub
dec
cltd
xchg
pop
cmp
addl
push
lods
jnp
add
insb
shrb
fidivs
fs
add
dec
sub
js
push
lock
ret
bound
mov
cmp
push
push
push
jle
inc
icebp
pop
or
and
scas
arpl
movsb
adc
lods
cmp
cmp
add
mov
subb
pop
fcomip
jecxz
and
stc
repz
sar
insb
add
or
iret
aaa
dec
sahf
push
push
subb
pop
rorb
adcl
enter
jmp
cli
testl
icebp
les
sbb
push
cmp
push
cmp
arpl
xchg
imul
subb
mov
push
xor
idivb
jbe
daa
loopne
add
fdivrl
jb
pop
sbb
test
xor
mov
cmp
aaa
add
add
or
enter
add
stc
popf
push
add
movsl
repnz
add
in
lock
test
clc
mov
sahf
rorl
mov
xchg
dec
in
inc
jl
cmp
add
ret
jl
adc
adc
orb
fcomps
jle
pop
jmp
and
dec
cmp
cmp
sahf
sub
jo
mov
insb
add
add
push
test
rorb
test
ds
mov
mov
mov
ret
or
cmp
negl
xor
sbb
sub
dec
jno
sub
mov
mov
fmuls
dec
cmp
loope
ljmp
sar
fiaddl
xor
dec
lahf
je
add
ret
or
xchg
sbb
in
mov
scas
cld
add
push
mov
mov
mov
dec
repz
add
inc
andl
and
pop
xor
jnp
ja
add
xor
pusha
sub
fisubrs
clts
rclb
pop
add
je
dec
cmp
testb
clc
push
sub
cli
sti
push
movsb
ss
inc
push
cmp
jo
faddl
je
dec
aad
int3
loopne
sbb
push
sub
lock
loop
rorb
xor
sahf
mov
notl
xor
ret
imul
or
test
test
dec
jle
into
and
cs
scas
push
mov
inc
add
inc
imul
rcl
test
dec
add
xor
mov
jmp
out
jae
jle
fiaddl
stos
ret
mov
xchg
or
loope
pop
loopne
jp
pop
xchg
leave
sahf
repnz
pop
mov
aas
or
add
cmp
das
add
jo
aas
sub
cmp
dec
scas
stos
add
pop
add
cmp
cmp
jbe
xchg
fcompl
add
dec
inc
or
lock
push
xlat
add
xchg
test
mov
cmc
cld
sbb
ds
push
cmp
adc
adcb
lock
pop
add
adc
fsubrs
inc
cmp
jp
jl
dec
fmull
dec
add
mov
shlb
dec
sbb
ljmp
cmp
xchg
fldl
dec
in
lock
pushf
sahf
add
insb
adc
add
lcall
add
movl
dec
int3
adc
enter
jge
mov
leave
mov
jmp
mov
push
cmp
sbb
aas
adc
sub
incb
lahf
mov
roll
es
sarl
sub
popa
jo
aas
or
cwtl
cmpb
rcrl
lret
xor
mov
xchg
jbe
scas
add
add
add
dec
leave
cmpb
add
test
sbb
mulb
mov
outsb
push
or
ficompl
pushf
mov
movsl
xchg
add
inc
popf
dec
sbb
push
xorl
jb
je
jbe
add
pop
cmp
es
call
icebp
mov
lret
add
add
mov
ret
push
jle
add
pcmpgtd
mov
ss
fs
fldpi
add
int3
or
out
inc
add
dec
adc
sub
cld
call
sub
mov
dec
roll
cli
xor
fldl
xor
xor
jbe
or
sbb
stos
inc
out
add
leave
pop
and
mov
or
mov
shrb
jo
and
cwtl
in
xchg
xor
jb
sbb
les
clc
and
or
pushw
add
fadds
lock
sbb
cmp
loop
shrb
mov
push
es
and
xor
xor
call
xchg
sub
bound
popf
movsb
sbb
cmp
dec
cli
enter
sbb
aas
jno
jns
mov
pusha
and
cld
dec
fstpl
add
rol
sbb
test
add
and
hlt
add
push
cmp
je
dec
jo
add
repz
push
shl
jmp
cmp
dec
repnz
cmp
fdivs
dec
retw
add
mov
xchg
fsubrl
pushf
daa
sbbl
dec
pop
pop
mov
test
or
xchg
and
popf
mov
jo
jl
jle
mov
mov
inc
pop
xor
ja
add
loope
jmp
add
in
cmp
xchg
ds
pop
xorl
icebp
add
pop
shr
test
js
daa
rolb
mov
mov
into
mov
pop
or
mov
mov
orl
popa
mov
mov
mov
xchg
xchg
aad
loop
mov
pop
or
xchg
daa
push
push
pop
mov
xchg
aas
xor
jo
mov
add
imul
movsl
add
lock
insb
test
mov
aam
enter
rclb
add
or
aas
daa
mov
mov
pop
dec
je
add
jl
shlb
lock
add
jl
add
push
stc
std
mov
popa
or
add
push
loopne
in
sub
sub
push
aas
xor
inc
pop
mov
and
and
popa
xchg
gs
add
loopne
lcall
in
pop
fimuls
testl
pop
push
jbe
xorl
add
lods
aam
adc
mov
push
jbe
pop
enter
lock
lret
xchg
add
in
aam
ret
es
dec
and
notb
hlt
xchg
loop
sub
fs
dec
fidivs
loopne
xchg
mov
add
sbb
add
loopne
int3
cld
sarb
lret
mov
lock
or
loopne
sub
dec
adc
adc
rcrl
jecxz
repnz
xchg
pop
sub
sar
jns
jno
pop
stc
pop
cli
inc
dec
in
add
mov
call
adc
loopne
leave
pusha
fmuls
lahf
mov
enter
leave
add
push
dec
cmp
shr
stc
or
js
out
mov
xchg
jp
pop
push
ret
cmc
shl
loop
jbe
sub
fcompl
lret
sbb
stos
pop
sub
or
cmp
jl
xchg
add
stc
je
das
and
add
les
pop
fs
or
sbb
rolb
or
cld
push
jo
mov
test
sub
outsl
or
mov
sbb
cmp
mov
add
setp
insb
jnp
lock
jns
arpl
clc
xor
ds
fs
jmp
or
js
test
cmpb
enter
hlt
fs
cli
add
icebp
rcr
pop
xor
or
jl
add
dec
cwtl
and
hlt
add
test
stos
mov
mov
add
lahf
notb
xchg
test
and
or
add
je
test
das
cmpxchg
dec
xchg
ficomps
push
ror
aam
push
jle
nop
loopne
in
or
hlt
jbe
orb
add
or
dec
dec
jae
lock
sbb
hlt
pop
mov
add
xchg
sub
scas
mov
fadds
cmp
loopne
inc
mov
pop
clc
jne
in
mov
pusha
add
mov
test
add
add
adc
addb
loopne
dec
ficomps
mov
fstpl
sub
xor
xor
orl
test
add
loopne
push
call
mov
sbb
in
adc
inc
call
inc
cli
and
jge
mov
dec
push
push
pop
push
push
inc
fildll
inc
es
cmp
or
push
call
enter
loope
inc
sbb
movsb
loop
and
mov
lea
push
test
out
pop
rol
add
add
or
push
adc
adc
inc
int3
and
push
and
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
or
popf
add
lcall
jo
sub
test
jnp
push
decl
aaa
movb
ret
cmpsl
xlat
iret
mov
add
mov
aas
pop
xor
or
push
add
sbb
cli
jmp
add
jmp
sub
add
add
repz
cli
loopne
pop
pop
pop
pop
pop
bound
dec
adc
rorl
add
movsl
loope
add
movsb
pop
push
mov
addb
mov
jp
push
rol
ljmp
sub
loope
push
dec
xchg
rcrb
shr
inc
mov
add
dec
pushl
mov
or
add
pop
roll
or
sti
add
pop
add
cmp
sub
adcl
jns
add
aam
sbb
cmp
add
mov
or
adc
loop
pusha
or
rolb
push
add
mov
add
jne
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
shl
add
aas
jnp
pop
and
add
pop
mov
fisubs
push
pop
push
and
pop
orl
add
xor
xchg
call
adc
shl
and
add
cmp
add
adc
add
or
mov
dec
cmc
sub
ret
add
mov
push
add
fiadds
and
in
or
xor
add
cmp
add
adc
xor
inc
loope
xor
leave
add
inc
sub
xchg
cmp
pop
cwtl
je
sub
inc
out
lahf
xchg
adc
into
ret
sbb
hlt
aam
stos
add
dec
lods
outsb
sbb
push
mov
fwait
in
cwtl
lds
enter
adc
mov
out
xor
pop
pop
cmp
mov
pusha
out
cmp
loop
jb
xchg
add
dec
mov
add
cmp
int
and
enter
jns
icebp
mov
pop
loopne
stos
ljmp
push
inc
shrb
add
mov
sub
sarl
sbb
pop
add
xor
add
xchg
fists
jns
add
aad
push
sub
add
int
cmpb
mov
xchg
mov
mov
and
jmp
jbe
aad
inc
push
mov
daa
add
mov
sub
outsb
add
xor
std
add
mov
or
les
mov
and
inc
pop
fstpl
fiadds
sbb
aas
cmp
mov
add
shrb
pop
ret
and
iret
inc
mov
sub
mov
or
pop
in
cld
mov
lock
fwait
xlat
inc
sbb
stos
pusha
add
add
je
popa
int3
push
lock
dec
cmpl
mov
xor
pop
aad
add
mov
add
sbb
cmc
xchg
pusha
das
mov
push
push
cs
imul
cmovle
cli
pusha
test
mov
mov
xchg
fildl
or
lcall
mov
ljmp
add
fucomip
mov
jbe
pop
xor
cltd
push
cmp
sbb
sub
fs
push
mov
lock
hlt
add
scas
sbb
sub
add
and
gs
jae
inc
inc
xlat
push
sbb
push
in
imul
aaa
popf
jnp
mov
add
inc
push
jmp
or
xor
ret
sub
scas
mov
adc
mov
fnstenv
call
dec
in
pushf
rolb
pop
aam
inc
addr16
fs
dec
or
rcr
outsb
ret
mov
mov
stos
add
rorb
add
rcrb
and
enter
insl
test
cmp
push
mov
loopne
in
add
lods
lds
and
push
add
adc
mov
in
sbb
cmpsl
jbe
jmp
adc
into
rolb
test
aam
add
addb
jbe
push
stos
insb
pop
dec
aam
jl
ja
or
jle
cmpsl
pop
xchg
daa
fdivrl
add
loop
test
add
insl
ret
push
lods
js
repz
testl
mov
fwait
test
sub
fs
add
loopne
add
in
mov
push
xor
xor
jge
cld
mov
orb
add
shlb
sahf
push
popf
adc
jae
or
xor
or
bound
mov
or
je
push
sub
pop
pop
mov
dec
shll
call
pop
and
leave
loopne
mov
sub
cmc
rep
pop
jmp
dec
shl
mov
xor
sbb
push
add
inc
and
adc
add
test
imulb
xor
leave
shr
je
adc
add
pop
pop
mov
xchg
ret
jns
pop
mov
jl
cmp
push
cmp
orps
je
popa
repz
adc
mov
gs
outsl
lcall
js
icebp
jp
jae
push
inc
jne
mov
popa
addr16
decl
lock
emms
pusha
jo
imul
dec
lock
inc
push
outsb
and
sahf
jnp
cwtl
in
gs
jo
outsl
jne
pop
aaa
inc
jns
mov
fisubs
pop
shrl
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
and
rol
xor
or
sub
std
xor
inc
idiv
aad
lcall
mov
cmpsb
jge
arpl
dec
outsl
fildll
mov
addr16
movsb
dec
xchg
filds
ljmp
in
add
sbb
sub
jns
pop
inc
dec
lea
andl
fists
jbe
daa
xchg
fcomi
insb
jne
test
negb
add
xchg
cmp
pop
inc
sbb
adc
out
sbb
push
int3
cmp
gs
dec
iret
mov
jno
test
das
adc
inc
mov
popf
mov
add
ret
pop
cmp
cltd
or
outsb
cmc
imul
dec
jmp
fs
sahf
fiaddl
dec
mov
pop
movsl
std
mov
fnstsw
sti
mov
push
cwtl
jge
movsl
mov
pop
sarb
or
scas
push
mov
imul
sahf
data16
gs
jle
ja
mov
sub
and
adc
pop
shrl
std
fisttpl
xchg
std
cmc
jo
lods
xchg
lret
ss
popa
add
lret
and
sub
ss
mov
jnp
leave
mov
testb
sbb
xor
imul
test
ret
ja
in
rorl
cmp
aad
mov
pushf
imul
push
pop
mov
push
shrb
popa
and
outsb
insl
ljmp
mov
sub
ljmp
fstpl
lret
xchg
jnp
xor
popa
ret
insl
cmpsl
inc
cmp
lea
adc
dec
add
pop
xchg
enter
add
xchg
int
fisubl
jnp
or
add
std
or
scas
popa
mov
pop
mov
mov
jecxz,pt
fistps
dec
fsubs
adc
mov
mov
sbb
mov
cwtl
cmp
xor
lock
sti
clc
movsl
je
mov
lods
pushf
sub
subl
lahf
test
mov
test
adc
xchg
mov
pop
fwait
pusha
test
dec
mov
pushf
rolb
imul
xchg
in
xlat
rcll
lahf
fldt
lcall
xor
add
pop
xchg
int
dec
jae
inc
pop
or
loope
ss
xchg
cmp
loope
cmp
pop
xor
fidivrs
pop
dec
dec
jmp
jl
inc
adc
int3
jp
cli
or
inc
dec
or
sti
mov
push
loope
sbb
inc
add
push
add
jge
aad
test
ret
loop
mov
or
test
scas
dec
or
and
cmc
mov
mov
sbb
mov
mov
jle
jns
push
mov
push
movb
mov
cwtl
js
fdiv
sbb
bnd
pop
adc
pop
inc
adc
aam
adc
and
push
in
inc
mov
lahf
cmp
mov
addr16
jge
adc
rorb
in
out
ror
mov
in
cmp
les
pushf
je
subl
leave
or
pop
cmp
movsl
pushf
mov
enter
pop
sub
enter
subb
xchg
add
sub
or
in
xchg
js
test
inc
cld
pop
fiaddl
add
push
mov
stc
or
sub
mov
pop
stos
cld
xchg
ss
xor
popa
nop
inc
xchg
push
and
adc
mov
flds
mov
popf
jb
flds
loop
lcall
icebp
push
in
enter
js
jmp
test
mov
iret
xor
je
sbb
mov
or
jle
rcrb
int3
pop
nop
mov
mov
jb
cltd
add
mov
mov
xchg
cwtl
in
movsb
and
out
xchg
enter
cmp
mov
or
sbb
or
push
mov
add
sti
fisttpl
pop
loopne
das
and
mov
xchg
xor
enter
mov
fildl
push
dec
icebp
xor
sub
jl
xor
jae
lods
adc
clc
loopne
inc
maskmovq
idivl
stos
dec
mov
loop
push
xchg
je
xchg
mov
faddl
cs
and
mov
jle
xor
scas
sarb
sub
add
ss
mov
lret
call
xor
mov
aas
sarl
js
movsb
icebp
fsubs
lcall
mov
mov
clc
xchg
fsubr
sub
xchg
fsubrp
in
inc
daa
int3
popf
xor
lea
dec
js
negb
mov
sub
lret
stos
pusha
lods
std
lahf
push
pop
mov
pop
fwait
mov
dec
call
imul
rol
sub
lock
scas
add
cltd
mov
mov
push
cld
test
mov
push
sbb
xchg
inc
or
cmp
sbb
sbb
jmp
pop
lcall
pop
jl
mov
test
push
sub
es
pop
lock
in
or
jbe
add
sub
test
mov
gs
add
cmp
dec
inc
hlt
cwtl
push
cltd
mov
popa
xchg
sub
xchg
or
imul
out
mov
cwtl
push
push
out
jo
gs
push
rcr
push
push
fisubl
insl
enter
in
mov
rorb
in
xchg
iret
mov
or
je
out
sub
ret
mov
fimull
fs
pop
imul
stc
fiaddl
pop
out
cmp
push
insl
mul
or
into
and
ret
ljmp
lock
rcl
adc
shrb
push
addb
pop
jb
push
aam
mov
lcall
ljmp
loopne
cmp
mov
lea
jmp
icebp
jge
mov
cmc
and
jp
sbb
xor
addr16
out
xor
push
arpl
imul
mov
dec
in
mov
mov
ljmp
mov
andl
xchg
enter
fwait
sub
sbb
es
inc
mov
mov
inc
imulb
mov
fcomps
movnti
lea
ss
popw
leave
movsl
pusha
xchg
lcall
test
sub
scas
jle
and
push
out
lahf
adc
sub
and
jns
ss
push
add
fadd
jno
adc
in
ss
push
pop
jae
sub
dec
aas
in
xchg
xor
dec
stos
bound
fidivs
das
push
addr16
cmp
cltd
add
adcb
jnp
fistl
inc
xchg
jge
mov
mov
call
adcb
bound
loop
jmp
jns
icebp
out
jno
sub
es
bound
cmp
mov
jmp
inc
stc
mov
int3
subb
jne
lret
xchg
jecxz
gs
nop
int
xchg
mov
popf
sbb
sbb
aam
xchg
add
ljmp
ljmp
push
ficoms
mov
in
dec
clc
xchg
mov
and
push
cmc
lds
or
das
scas
ljmp
mov
aam
adc
xor
cmpsl
stc
test
cmpsb
cmp
xchg
add
lock
sbb
rorl
and
sbb
dec
jae
add
push
pop
xor
xchg
sbb
add
lods
call
adc
testb
mov
inc
adc
sbb
jmp
xor
jnp
in
jl
imul
std
inc
jecxz
stos
cmp
xchg
dec
inc
ret
xor
sbb
outsl
pushf
lods
jae,pt
pop
xor
jb
jmp
push
push
jne
rolb
xlat
inc
push
rcrl
and
stos
mov
jb
lahf
rorb
out
cmp
and
dec
dec
cmp
sbb
in
pushf
pusha
std
jp
fmull
test
hlt
fists
dec
xchg
hlt
pop
fwait
xchg
imul
js
lods
mov
ljmp
aam
push
lcall
push
lods
push
scas
fs
daa
outsl
sbb
mov
adcb
push
ficompl
pop
push
outsl
jl
inc
cmp
adc
sub
jg
xor
pop
inc
fwait
aas
in
or
pop
iret
leave
jno
outsb
sub
inc
xchg
mov
insl
orl
jl
fwait
and
sbb
rcr
push
and
out
push
adc
sarl
sahf
lcall
mov
leave
and
imul
sbb
and
stos
add
ljmp
and
out
lea
xchg
mov
lods
inc
rolb
ja
fs
mov
push
jae
das
int
lds
pop
mov
push
sti
dec
dec
dec
mov
sub
data16
inc
mov
bound
lret
ds
pusha
mov
sarb
lods
ljmp
in
ret
and
and
scas
xchg
fists
test
adcb
das
inc
fwait
test
cmp
mov
ss
in
mov
xchg
add
push
sbb
jg
push
jb
sti
test
aas
je
jno
dec
sub
pop
mov
jg
ljmp
stos
xchg
scas
nop
add
xchg
sub
andl
mov
leave
sbb
loopne
mov
popa
jecxz
call
sbb
or
or
push
sbb
push
dec
sub
and
mov
fildl
rcr
dec
sbb
sub
ds
pop
and
cld
push
dec
xor
pop
cwtl
mov
sti
mov
inc
jge
adc
jbe
int
sub
adc
pop
adc
mov
xchg
xchg
push
adc
and
fimuls
push
adc
sbb
jl
sub
xchg
pop
cmc
sahf
push
imul
mov
sbb
test
cltd
fiaddl
mov
testl
add
push
nop
and
mov
fsubrs
out
stc
das
pop
nop
xor
lret
jo
xlat
outsl
testb
sbb
aam
dec
jmp
pop
and
mov
pop
rcll
xor
and
sbb
stc
sub
xchg
and
rolb
pusha
lret
loope
je
inc
jae
cmp
sahf
std
mov
insl
es
test
mov
mov
cli
test
jnp
cmc
adc
repnz
lods
out
loopne
add
in
sub
and
ja
hlt
ss
cs
pop
lock
orb
add
or
adc
mov
in
mov
and
mov
shlb
push
stos
pop
movsl
inc
jae
or
dec
jae
mov
pop
mov
fld
mov
insl
mov
inc
outsl
cmp
clc
and
or
shrb
loop
jnp
cmp
push
dec
roll
icebp
push
cli
icebp
mov
ljmp
pop
test
decl
sti
inc
adc
aas
idivb
and
into
sub
jns
jmp
cwtl
inc
mov
sub
test
into
xchg
pop
cmp
adc
mov
jno
pop
lods
or
mov
out
pop
ret
cltd
sub
push
rolb
dec
mov
fcoms
jns
faddl
xchg
or
inc
jne
fs
inc
xchg
and
push
mov
push
mov
popa
shll
test
repz
lods
ds
ret
push
push
pop
adc
or
nop
repnz
jg
and
jne
aad
jns
pop
sub
test
push
fs
icebp
sbb
insl
sub
dec
fwait
and
rolb
cltd
cmp
stos
lock
mov
push
push
ljmp
ja
pop
call
mov
jns
std
sahf
les
mov
lret
adc
mov
test
xchg
mov
cmp
push
mov
subb
pop
loopne
sahf
jle
mov
out
jns
sub
jg
sbb
jge
mov
jb
lahf
xchg
addr16
cmp
scas
out
fisubrl
sahf
scas
es
jmp
push
push
call
out
dec
mov
and
sarl
push
jg
in
cld
test
dec
shll
add
bound
test
mov
mov
mov
push
push
mov
cmc
pop
inc
pop
pop
leave
jno
inc
mov
mov
xlat
outsl
dec
loop
cmp
movsb
mov
xchg
jp
jle
jl
cltd
hlt
xchg
fdivs
daa
adc
xorl
test
in
shll
and
das
dec
mov
bound
je
xchg
adc
fs
ret
jne
or
xchg
in
or
mov
out
pusha
lds
fildl
stos
adc
insl
cmp
mov
mov
inc
jmp
jmp
test
fildl
push
sbb
mov
cmp
dec
iret
lahf
je
sbb
push
cmp
jecxz
gs
imul
and
int
sti
daa
ss
jle
in
rep
adcb
out
push
sbb
lea
sub
stos
push
pop
andb
mov
pop
add
stos
mov
test
sbb
inc
insb
push
cmp
ds
lods
loop
and
push
das
and
sbb
xchg
xchg
pusha
loop
or
pop
sahf
ss
das
mov
cmc
xchg
sar
lret
scas
mov
aaa
dec
jl
aam
nop
scas
mov
ja
cmc
les
loopne
cmpsb
loopne
shlb
loope
xchg
sarb
add
sbb
repz
outsl
cmc
adc
sub
mov
dec
sbbb
sarl
jge
mov
inc
in
mov
cmp
loop
pop
pop
pusha
bound
ret
imul
test
orb
ret
xor
pop
stos
fcompl
jl
dec
jne
clc
mov
jnp
sarb
jg
leave
out
andb
sub
into
mov
jle
flds
pop
inc
into
mull
xor
or
mov
movsl
or
sbb
xor
and
ss
inc
xor
rcr
scas
loope
dec
movsb
popf
subl
cmp
cmp
pop
call
jl
pand
dec
mov
leave
pop
inc
xchg
mov
mov
pop
sub
sub
dec
mov
stc
xchg
sbb
xlat
and
mov
faddl
jae
cmpsb
adc
pop
lret
and
pop
mov
pop
cmpsl
and
mov
sbb
cmc
mov
sbb
loop
push
std
mov
jo
dec
jle
sar
cwtl
lret
xchg
pushf
int3
lock
and
adc
fnstenv
xchg
xchg
fisubl
in
sbb
pop
testb
in
adc
aaa
adc
in
inc
push
jno
popa
icebp
call
adc
jno
mov
dec
dec
aam
loopne
dec
leave
leave
mov
mov
ds
mov
andl
cmp
cli
dec
xchg
xchg
nop
hlt
adc
fwait
popf
xor
mov
hlt
rcrb
sub
push
add
push
xor
xor
jbe
lret
pop
rcll
out
xor
push
push
mov
xchg
mulb
icebp
or
out
mulb
xchg
pop
sub
xorl
mov
pop
push
adc
das
aaa
out
dec
mov
gs
mov
daa
push
dec
ss
mov
and
fs
in
jno
mov
fidivrl
cmp
into
push
rcl
add
push
pop
stc
pop
or
jns
and
pop
lods
pop
xchg
and
ljmp
add
sbb
dec
aas
insl
jecxz
sbb
mov
loopne
aas
dec
lds
xor
lret
icebp
loopne
imul
and
jge
es
inc
mov
mov
addl
test
mov
mov
mov
mov
xor
inc
or
fst
aaa
scas
inc
mov
cli
or
mov
cmp
mov
call
jge
mov
add
loopne
cmc
cs
test
jo
sbb
mov
xchg
inc
sub
push
push
push
and
out
xchg
dec
mov
push
xor
fadds
dec
adc
clc
js
loope
push
mov
push
jmp
xchg
fwait
daa
mov
inc
mov
dec
sub
pop
lods
xchg
fcomp
or
mov
sahf
out
and
sub
pushf
dec
test
fisttpll
jbe
dec
xor
push
shlb
sti
popf
subl
mov
push
js
cli
adc
cmovne
mov
adc
pop
icebp
sar
mov
pop
pop
setp
call
or
pushf
xchg
or
sbb
xchg
xchg
mov
pop
dec
cmp
mov
fs
lret
or
jnp
inc
sbb
dec
mov
pop
xchg
gs
cmp
rep
outsl
push
xchg
mov
dec
mov
ret
sub
xchg
pop
mov
adc
xchg
xor
push
pop
sbb
xchg
push
sbb
cmpsb
push
sbbb
out
sub
mov
mov
mov
add
jo
test
adc
dec
sub
mov
mov
call
jae
aam
lret
cmpsb
ficoms
sub
je
testl
bound
out
cli
aam
gs
clc
mov
pop
cltd
scas
sub
mov
sbb
jnp
stc
rcrl
fmul
fisubrl
shll
sub
sub
sbb
lock
cmpsb
rcll
outsb
mov
and
adc
mov
ret
test
repnz
and
test
xchg
mov
pop
xchg
xchg
lods
push
js
push
push
pop
mov
fdivr
in
dec
and
test
sahf
inc
add
and
inc
addr16
int3
dec
pop
adc
repz
std
das
inc
push
in
pop
xchg
loop
movsl
push
or
jmp
jb
sahf
mull
fs
mov
add
xchg
jno
mov
dec
shll
lods
push
ret
fistl
test
loop
pop
pop
cmp
xchg
inc
or
push
or
in
orl
jb
xchg
insb
dec
push
icebp
iret
std
jge
roll
and
push
test
adc
roll
pop
mov
pop
mov
lods
adc
xchg
and
mov
js
ljmp
jmp
imul
xor
sub
mov
add
dec
push
push
gs
sbbb
aad
inc
mov
push
sti
lds
cli
push
pop
iret
cmp
shlb
scas
or
mov
loopne,pt
and
cmpsl
add
imul
inc
lods
jo
fdivl
popl
jae
inc
cmp
lcall
sub
inc
push
cmp
addl
jmp
popf
mov
ja
icebp
xchg
insb
mov
mov
in
adc
loopne
mov
cmpsb
outsb
xchg
jmp
mov
and
xchg
push
mov
data16
outsl
stos
cmp
mov
xchg
mov
xchg
push
xchg
mov
sub
adc
incl
cmp
mov
jo
fcmovnbe
adc
aad
mov
push
xor
pop
inc
loope
xor
test
and
push
shlb
je
sbb
xchg
mov
ljmp
xor
mov
cmp
mov
pop
pop
in
fwait
add
fwait
ret
add
fcmovnb
xchg
or
cwtl
mov
pop
sbb
adc
cltd
shrb
and
pop
fcmovb
mov
jb
hlt
mov
mov
pop
es
mov
cmpsb
xor
pushf
ud1
inc
mov
cwtl
hlt
subb
sbb
test
int
sbb
sbb
fiaddl
ret
and
cmpsw
add
insb
nop
jg
or
mov
fstl
inc
xchg
mov
inc
repz
jl
push
inc
xor
scas
cmp
mov
xchg
push
mov
movsb
out
lahf
sub
les
xchg
rolb
cmp
sub
lock
insb
sub
andb
xlat
mov
iret
shl
repz
pop
out
cmp
in
out
cmp
out
rcrl
lods
mov
push
aad
sahf
mov
dec
clc
xchg
xlat
cmp
leave
cmp
shl
add
xor
xchg
sbb
mov
pop
xor
sbb
lea
int3
clc
test
cmp
data16
test
fdivl
idiv
inc
jnp
jns
cwtl
mov
jo
xchg
mov
xor
sbb
rsqrtps
mov
adc
sub
arpl
loopne
repz
psubusb
push
or
repnz
mov
or
icebp
jne
pop
in
jge
or
add
xlat
jle
mov
pop
fwait
jg
jae
int3
or
mov
xor
sarb
and
jge
lods
xchg
movsl
jno
xchg
xchg
add
mov
into
or
sbb
push
xchg
in
pop
inc
dec
mov
pop
lahf
xchg
imul
jns
inc
out
pushf
rcrl
jp,pn
push
sbb
sub
dec
addr16
pop
out
jecxz
fdiv
mov
push
add
and
xchg
adc
nop
mov
jg
inc
xchg
cmp
mov
scas
inc
xadd
mov
insl
shlb
xchg
int
insl
bound
and
insb
xor
lods
xlat
push
and
ja
add
push
loopne
cltd
push
es
stos
jmp
scas
pop
aad
daa
lea
lods
insl
fmuls
test
sti
lods
ds
scas
testl
out
push
mov
xchg
pop
pop
repz
or
pop
jb
jne
insl
push
jmp
xchg
mov
mov
cmpsl
imul
repz
sti
xchg
mov
jecxz
lahf
and
sub
xor
mov
nop
test
scas
sbb
jmp
mov
cmp
or
xchg
sub
roll
ret
lret
data16
scas
stos
fsubrp
mov
xor
lret
leave
jecxz
addr16
cmp
loop
popf
push
jmp
enter
arpl
testl
jo
aaa
sub
cmp
aaa
jp
shll
mov
pop
jnp
inc
out
fwait
mov
es
int
adcb
pop
popa
fldt
iret
mov
push
in
push
mov
cmp
jg
and
or
inc
mov
inc
imul
jecxz
in
cmp
ds
bound
sbb
les
das
adcl
loop
ret
jo
mov
in
add
xchg
jbe
in
pop
mov
mov
push
js
add
sahf
push
js
pop
add
push
mov
xchg
cmp
jg
cwtl
cmp
aam
add
je
cltd
inc
dec
xor
cltd
jecxz
and
pusha
subl
xor
out
std
test
scas
adc
cmpsb
push
pop
xchg
jae
sub
or
adc
mov
jp
shll
jno
push
das
xchg
adc
mov
sub
or
lret
insl
mov
inc
add
cld
push
jge
in
mov
gs
fwait
adc
pop
lods
aas
loopne
leave
test
out
inc
nop
or
in
jmp
and
xchg
push
mov
cmp
insb
cmpl
aad
into
out
sbbl
xlat
push
push
pop
andl
sar
or
and
mov
mov
insb
xchg
scas
mov
hlt
sbb
scas
loopne
popa
dec
and
dec
cmp
xchg
sbb
out
lret
pusha
add
cmpsl
sub
inc
scas
adc
pminub
out
push
mov
fisttpll
sbb
mov
in
add
xor
popf
or
adc
xor
cmpsl
push
arpl
repnz
mov
cmp
lods
pop
inc
pop
insb
pop
scas
mov
push
dec
into
mov
in
pop
push
inc
sbbl
popl
ja
mov
mov
addb
sbbb
mov
sbbb
mov
dec
dec
dec
xor
push
clc
cmpl
dec
cmp
pusha
outsb
add
movsb
sbb
shl
test
mov
push
pop
cmp
jg
inc
sub
add
ror
fimuls
lret
mov
aas
cmp
inc
xor
mov
xor
add
sub
xor
mov
mov
je
sbb
cmp
fidivs
lret
mov
mov
inc
out
subl
dec
mov
fwait
jle
ss
in
xchg
aad
lds
pop
cmp
dec
in
pop
shr
sbb
test
push
aad
stos
out
jnp
stos
fistpl
lds
data16
int
out
dec
enter
pop
or
mov
mov
hlt
pop
cmpsl
roll
cli
jmp
imul
jmp
lret
loopne
mov
mov
test
sub
ljmp
sbb
jae
xor
inc
por
xor
orl
cmp
sub
pop
sbb
or
fwait
sub
dec
insb
fucomi
ja
jp
inc
mov
xor
sub
mov
fiaddl
shlb
fistps
arpl
jbe
xlat
xchg
pop
jb
sub
or
xchg
xchg
push
cli
push
jb
setns
dec
jnp
mov
inc
fwait
addr16
test
or
fadd
mov
jg
dec
repnz
js
mov
iret
mov
jae
ljmp
jno
repnz
out
jg
out
jb
cltd
xchg
xor
add
icebp
fwait
arpl
rolb
adc
mov
jo
jge
testl
add
jmp
rol
and
fsub
add
jnp
sbb
and
sbb
clc
fmuls
push
cli
js
jnp
int
push
cmp
push
cltd
xchg
in
add
sbb
adc
ss
mov
sahf
sbb
stc
jle
cmp
fwait
lcall
fdivrp
pop
xor
loop
xor
inc
and
mov
in
mov
sub
outsl
xchg
adc
jg
shlb
movsb
mov
sub
test
repz
stos
and
ret
add
aam
cmp
out
jne
inc
pop
out
mov
dec
mov
mov
outsl
gs
inc
pop
daa
andl
jle
cli
aam
inc
and
mov
cli
enter
lcall
xor
inc
cmp
mov
inc
cmc
mov
dec
nop
adc
divl
xchg
js
hlt
pop
in
lods
fmull
jns
lret
in
jle
or
loopne
aas
mov
xchg
sbb
push
movsb
xchg
mov
xchg
jnp
testl
dec
leave
js
aam
mulb
pop
fmul
int3
and
mov
int3
in
fstpt
loop
stos
loope
sbbb
outsb
sub
stos
test
xchg
lret
add
int3
icebp
cltd
outsl
fmull
fists
adcl
sti
stos
or
test
sbb
dec
push
xchg
jle
adc
push
movsl
and
stc
or
xchg
out
lret
jae
aad
je
sbb
cs
and
out
add
jp
inc
pop
cmp
js
add
sub
ret
jb
lods
push
mov
and
sbb
popf
jle
adc
push
int
push
push
mov
xor
stc
out
lahf
lea
xor
cmp
mov
out
fstps
mov
fsubr
aad
jns
push
mov
mov
stc
sub
and
divb
mov
cmp
xchg
js
pop
sub
cmp
rclb
enter
js
out
test
jmp
pop
or
addr16
out
dec
adc
pop
and
inc
bound
jae
push
dec
adc
mov
rcll
test
mov
mov
clc
in
es
div
fwait
mov
mov
imul
sub
imulb
cmp
out
xchg
repnz
sbb
loopne
bound
or
sbb
ret
pop
pop
insl
insl
mov
sub
sarb
lret
int
ficomps
mov
mov
xchg
cld
add
pop
insb
and
xchg
addr16
add
mov
in
adc
sub
mov
inc
rorl
lods
outsb
imul
push
fiadds
and
mov
cmp
test
pop
mov
cli
xchg
repz
mov
ret
jbe
and
out
mov
sbb
xor
outsb
popf
ret
gs
lahf
hlt
xlat
imull
lretw
adc
jp
sub
pop
adc
mov
adc
jge
dec
cli
mov
bound
sarb
cmp
dec
test
cmc
or
loopne
add
inc
and
mov
push
das
mov
inc
mov
out
out
sbb
add
pusha
rcrl
push
jb
adc
mov
fimuls
repz
movsb
xchg
lea
sub
and
pop
inc
push
mov
pushl
inc
or
xor
jbe
cwtl
mov
mov
test
addr16
adc
ja
xchg
and
jmp
lds
pop
mov
or
xchg
test
lret
or
cmc
jp
jbe
sub
push
rolb
adc
xchg
cmp
push
dec
fdivrl
aaa
js
mov
push
cmp
pop
out
mov
pop
inc
lods
fcmove
inc
rclb
stos
xchg
fwait
mov
jg
cmp
lret
pop
xor
jge
lea
cmpsb
ljmp
jle
xchg
lods
sbb
dec
dec
cmp
sub
clc
arpl
jle
pop
xchg
int
or
subl
xchg
in
mov
mov
ja
add
adc
rcrb
sarl
pop
xor
in
fsubrl
xchg
std
inc
sub
inc
mov
sub
imul
sahf
or
aaa
and
aas
inc
loop
lret
add
xchg
sbb
add
jne
pushf
arpl
pop
lret
loop
loope
and
in
dec
stos
sub
ds
mov
jge
adc
je
adc
roll
aam
neg
dec
push
jl
in
cmp
jbe
pop
outsb
and
sbb
repnz
xchg
sub
loop
mov
fwait
aad
sbb
xlat
xor
and
xchg
loop
into
xor
push
sbb
ss
or
xchg
adcl
inc
xlat
add
sub
mov
mov
mov
mov
shll
push
loope
xlat
mov
scas
movsb
mov
fwait
stos
push
into
aam
out
sahf
mov
and
in
fnstsw
stos
dec
lods
in
adc
inc
jmp
out
and
push
aad
pcmpgtw
xchg
in
jo
push
subl
rclb
sub
shlb
fcompl
loope
cmp
stos
push
lods
fwait
int3
mov
es
cmp
xor
jp
insl
cmp
sub
pop
dec
sti
lret
shl
data16
repz
movsb
pop
ud1
out
dec
mov
jne
shll
adc
pusha
pop
scas
xchg
add
mov
add
rorb
iret
icebp
dec
pop
inc
mov
cltd
cwtl
test
cli
pop
mov
dec
and
cmp
rclb
lods
fadd
cmp
mov
stc
mov
es
adc
scas
mov
mov
jns
jge
je
push
outsl
pop
scas
xchg
je
xchg
outsb
push
test
les
testb
jb
popa
push
pop
pop
sarl
xchg
subb
cmc
inc
push
leave
pop
lock
sub
sub
orl
mov
inc
adc
xchg
fmull
push
mov
lods
ljmp
lahf
iret
inc
mov
mov
or
stos
dec
clc
ficoms
fstpt
jle
dec
sbb
das
cmpb
pop
mov
test
push
adc
lock
sarl
outsb
outsb
jle
iret
adc
pop
inc
inc
add
cmpsl
adc
lret
xchg
clc
mov
ret
imul
mov
and
ret
jnp
xlat
sbb
es
scas
lock
adc
and
mov
repnz
test
sbb
test
in
stc
xchg
dec
addr16
popa
xchg
pop
inc
aad
and
scas
cmp
push
lea
adc
pop
xlat
dec
mov
repnz
jp
jl
popa
movsl
repz
out
and
ret
out
ljmp
jge
sti
fbstp
sub
lods
jmp
fsts
ret
movswl
lcall
xlat
in
ljmp
push
cmp
mov
mov
ficoms
add
jbe
dec
inc
pop
jmp
sbb
data16
mov
outsb
xchg
out
lret
or
dec
xor
jae
lret
push
adc
shr
out
popa
test
outsl
sbb
dec
jo
fisubrl
repnz
xchg
popl
aam
fsubrl
pop
inc
dec
ljmp
insb
add
mov
sahf
data16
int3
push
lret
jl
xor
lret
mov
inc
adc
popf
push
insb
add
mov
scas
push
subb
out
shll
ss
adc
mov
jbe
fwait
jae
fdivr
pop
test
xlat
sub
jae
or
dec
cmp
stos
ror
lret
adc
jo
cmp
or
jl
xor
lds
imulb
and
bnd
int
pop
sbb
inc
ljmp
xlat
adc
cltd
push
ja
and
lret
mov
loope
imul
inc
xlat
shl
int
lcall
gs
xchg
xchg
mov
xchg
and
mov
jae
pop
pop
jl
lret
adc
cmp
enter
push
repnz
pusha
and
adc
test
sahf
arpl
jno
cmp
divb
lds
pop
dec
sub
clc
pop
add
cmp
pop
inc
pop
xlat
les
mov
pop
sbb
inc
jb
fldenv
cld
add
add
adc
roll
cmp
mov
in
mov
xchg
xor
dec
fmuls
xor
sub
mov
pop
mov
or
sbb
mov
shll
sti
inc
andl
cltd
ja
xchg
icebp
ss
xor
pop
inc
or
arpl
push
mov
lahf
fidivrs
pop
cmp
xor
jge
adc
cmp
pop
xchg
xchg
inc
push
repnz
mov
mov
mov
xchg
inc
sti
lods
call
dec
pop
movsb
in
rcl
adc
aas
pop
add
pop
data16
mov
gs
pop
or
jmp
insb
int3
test
mov
lds
inc
and
dec
gs
adc
lds
adc
push
mov
test
es
bound
scas
pop
push
adc
adc
rol
into
push
pop
lods
mov
addl
loop
fnstsw
roll
lahf
jl
push
out
lret
pop
inc
sti
fidivl
mov
xor
pop
je
repz
dec
jb
aas
sub
nop
cmp
cmc
rclb
sub
adc
dec
adc
int3
ljmp
jle
adc
and
lds
subb
ficoms
and
push
scas
bound
aas
cmp
insb
test
and
fstps
add
jae
mov
inc
and
mov
sarl
mov
xor
popl
push
cmp
mov
sbb
fwait
insl
xor
cs
mov
cmpsb
mov
test
scas
xchg
aam
pop
cmp
popa
mov
cmp
fcmovnbe
data16
popf
sub
loopne
rorl
jle
push
popf
popl
mov
shll
fcom
addb
loop
fcoml
jecxz
je
push
cmp
out
ret
jp
mov
lock
xlat
sbb
push
add
daa
aas
push
push
pop
add
popa
inc
push
jmp
shl
lret
cwtl
sbb
arpl
call
sbb
test
or
cld
sub
and
out
and
nop
push
mov
repnz
shlb
mov
cs
sub
jp
jl
push
xchg
cmpl
jp
jecxz
inc
mov
cltd
ljmp
scas
fldcw
lea
scas
mov
imul
mov
cltd
and
mov
fildl
inc
pop
mov
mov
sub
leave
int
cli
xchg
sub
or
loopne
movsb
jl
jmp
pusha
jne
push
fdiv
popa
pop
push
push
xlat
lock
and
dec
mov
das
pop
pop
dec
out
dec
sarl
movl
fcomps
subl
jne
sub
ja
imul
mov
es
mov
cmpsb
mov
lret
fistpll
icebp
je
and
xor
adc
push
into
xor
pop
aad
fsubl
insb
aaa
mov
out
popa
loopne
pop
mov
loopne
pusha
daa
ficompl
outsl
sub
addr16
mov
jbe
jo
rolb
je
stos
cmp
jne
subl
daa
jmp
loope
dec
push
lahf
xor
push
push
sbb
mov
cmp
repz
push
mov
push
xor
jecxz
sbb
cmp
jo
leave
std
aad
mov
sarb
inc
mov
movsb
gs
push
fs
imul
sbb
je
jnp
xor
lcall
leave
arpl
fcoms
mov
mov
andl
cwtl
pushf
pusha
outsb
popa
mov
arpl
push
sbb
les
mov
clc
sahf
inc
pop
add
pusha
cmp
mov
xor
cmp
out
xchg
push
subl
test
xor
lods
xlat
pusha
push
dec
test
mov
sub
insb
dec
cltd
add
inc
or
push
add
sub
and
mov
fwait
in
mov
push
test
cs
and
rcrb
daa
push
leave
rcll
popf
lret
dec
mov
and
hlt
mov
mov
dec
cmc
insl
mov
cmp
rorb
aas
push
ss
call
cmp
out
pop
mov
movsl
add
inc
es
rcrl
pop
movsl
xchg
or
lock
test
jge
data16
dec
push
jno
aaa
fcmove
dec
lcall
mov
iret
aas
in
cltd
mov
ret
cmp
stc
jbe
andb
imul
pop
xchg
cmp
jno
adc
nop
fmull
stos
pusha
test
mov
cli
aas
jp
jmp
push
mov
cwtl
call
inc
movsl
rorl
sub
push
int3
push
mov
jnp
mov
pop
pop
js
jne
mov
stos
pop
sbb
icebp
out
insb
xchg
jns
test
inc
test
dec
aam
xor
mov
cltd
jmp
fisubrs
jecxz
pop
dec
scas
stc
mov
loop
sbb
rcrl
bound
push
xor
xchg
fs
or
and
stc
mov
xchg
xchg
push
addr16
cli
lcall
mov
mov
fwait
or
ljmp
add
sbb
data16
push
es
sahf
sbb
mov
aas
jo
enter
xchg
dec
dec
enter
daa
cmp
sbb
nop
sub
cmp
bound
cmp
jecxz
jne
jnp
mov
sbb
push
dec
ret
mov
lcall
arpl
fldt
mov
sub
popa
cmpsl
shrl
xor
test
sbb
aas
mov
stc
cmpsb
mov
jecxz
dec
jg
add
and
lods
rcr
ret
sbb
adc
jmp
mov
rol
sahf
mov
add
mov
aad
cmp
rol
sbb
push
cmp
dec
pop
mov
or
stos
fnsave
lcall
lods
loopne
hlt
jo
pushf
dec
cwtl
lret
and
test
jne
inc
pop
inc
xchg
rorl
mov
addr16
pop
loope
arpl
sbbl
ljmp
xorb
cmpsl
jmp
xlat
mov
pop
ljmp
jle
cli
js
js
dec
pop
aaa
imul
call
stos
pop
sbb
es
add
imul
rorb
pop
inc
jne
fcoms
inc
jno
mov
cli
pop
out
xor
stc
adc
ficomps
push
test
pop
mov
add
jle
xor
pop
pushf
add
jl
aaa
mov
sbb
popa
push
int
stc
out
popa
lahf
test
sbb
insb
ljmp
les
sti
jg
pusha
pop
shrb
push
inc
mov
pop
iret
add
inc
fidivl
mov
adc
test
dec
or
cmpsl
jp
mov
mov
idivl
roll
lcall
sub
addr16
int3
xchg
xor
cs
mov
add
pushf
insb
dec
rorb
mov
mov
lgs
jae
mov
sub
fwait
shll
jmp
test
fimuls
addr16
fldl
pop
lods
outsl
add
gs
pop
mov
inc
inc
sbb
jns
cmc
imul
dec
loopne
fcmovne
cmp
daa
fs
mov
fsubrs
jge
loopne
lock
jo
sbb
imul
or
rorl
insl
pop
sbb
pop
je
leave
std
xor
add
lods
sub
dec
push
mov
sbb
out
in
imul
clc
lahf
jne
test
fistl
outsb
je
in
loope
pop
sub
mov
dec
jge
test
jno
popf
mov
repz
fs
mov
fsubl
lds
out
ja
sub
mov
aaa
mov
inc
out
or
out
sub
cltd
fwait
jl
jno
std
enter
xor
xor
inc
into
cmp
repnz
push
sbb
out
gs
roll
cltd
jp
push
dec
inc
inc
mov
outsb
out
and
shll
push
fisubs
sub
jmp
or
das
jnp
test
repnz
xchg
xor
fwait
pop
arpl
icebp
imul
sub
fistps
xor
mov
leave
push
out
mov
ljmp
je
outsl
rcrb
test
sahf
dec
push
xor
gs
out
and
into
je
fisttpll
jle
insl
jae
movsl
leave
int
push
mov
mov
sbb
sub
rcrb
insl
jae
cmp
aaa
es
add
ret
mov
mov
ret
mov
hlt
lret
shll
or
add
cs
stc
sub
pop
out
mov
movsl
in
int
pop
sbb
in
pop
sub
call
jl
pop
daa
test
xchg
jecxz
jp
sub
testb
imul
cmpsl
in
push
stc
aaa
outsb
pushf
mov
sub
adc
dec
mov
adc
adc
roll
daa
stc
xchg
out
std
mov
pop
lods
jg
lcall
jne
and
rorl
push
and
mov
cld
outsl
fstps
push
in
lret
mov
xchg
imul
mov
mov
dec
cmpsb
lock
ljmp
das
out
sub
js
aad
ljmp
xchg
lods
hlt
mov
dec
xor
inc
jmp
jbe
push
fadds
pop
push
inc
cmpsb
sbb
lods
addr16
fldl
outsl
add
jno
sbb
ror
call
sub
div
test
scas
shl
es
jo
mov
lcall
jno
enter
cmp
iret
fcmovnbe
mov
in
popf
int3
mov
icebp
sub
jl
pop
xor
dec
sbb
mov
fs
cmpsb
inc
leave
cmp
xchg
pop
aas
insl
inc
daa
int
ss
mov
add
outsl
lods
in
loop
adcb
cmp
and
js
cmp
scas
movl
mov
iret
ss
jo
or
add
mov
test
xor
or
insl
repz
stos
outsl
adcb
xchg
push
decb
test
mov
mov
mov
push
clc
xchg
dec
repz
iret
repz
je
pop
push
inc
pop
cmp
adc
jle
test
test
lock
cld
and
fists
add
sub
popa
aas
jo
std
add
fisttps
pop
mov
dec
out
jno
lretw
dec
mov
aas
push
pop
andl
lret
in
cmp
sbb
sbb
insb
cmc
xor
dec
xchg
and
es
hlt
mov
mov
inc
or
data16
push
cmpsb
jmp
xorl
pop
cmp
inc
repnz
push
bound
dec
inc
inc
push
mov
push
loopne
movsl
or
stc
in
scas
sbb
outsl
int3
add
mov
insb
test
fstpt
loopne
popa
mov
sbb
ds
sbb
mov
loopne,pn
mov
sub
sbb
xchg
sbb
and
push
imul
in
loope
cltd
dec
out
pop
or
loope
outsb
bound
mov
push
mov
or
out
in
in
loopne
xor
roll
mov
int3
inc
add
adc
xor
dec
inc
mov
test
iret
dec
std
testb
shlb
gs
insb
mov
mov
dec
cli
filds
andl
fcomp
test
mov
call
lea
mov
pop
xchg
jle
test
ret
inc
std
outsb
lea
scas
dec
push
enter
lea
xorps
adc
add
mov
sahf
pop
pusha
daa
adc
jae
inc
mov
test
inc
add
insb
sbb
mov
dec
mov
sbb
dec
sub
std
call
xor
jmp
data16
in
xor
cmp
popa
cld
inc
ljmp
sbb
lea
pushf
dec
xchg
pop
iret
pop
inc
cwtl
adc
xchg
lods
push
and
dec
fnsave
hlt
push
repnz
pop
js
pop
fildll
cmp
jne
ljmp
xor
fmul
pop
aad
aas
test
arpl
push
das
dec
dec
xor
es
decl
push
cmp
adc
and
jae
xchg
pop
push
packssdw
sbb
notl
fisubrl
jg
es
insl
int
call
fwait
xchg
mov
aam
pop
dec
pop
imul
sub
cli
mov
jge
or
mov
ficoms
adc
imul
or
jno
ret
sbb
xchg
xchg
mov
iret
sub
jle
lret
ret
dec
push
aaa
xchg
das
int
sbb
daa
xchg
or
jl
dec
in
adcb
popa
push
mov
lods
dec
ss
movsb
jecxz
jmp
in
arpl
fisttpll
add
sub
sub
pushf
loopne
xchg
and
shll
push
mov
test
leave
jo
and
dec
aam
enter
dec
cmp
inc
jo
jo
test
push
mov
popa
mov
stos
jg
pop
hlt
jmp
flds
stos
dec
jnp
pop
js
jns
enter
inc
sub
dec
cmp
inc
jp
adc
ret
sti
sbb
add
in
in
mov
pop
add
cmp
lcall
fimuls
outsb
dec
lods
xchg
mov
jnp
stos
dec
ret
icebp
cmpsl
shrl
mov
xor
loope
adc
cmp
mov
push
in
loop
pop
enter
pop
out
andl
push
fdiv
decl
stos
xchg
shlb
andb
cmpsl
imul
lds
sarl
aas
test
xor
add
popf
mov
jp
std
and
sub
mov
cs
sarl
fadd
jno
mov
cmp
lret
xchg
mov
mov
add
outsl
rep
mov
lea
push
pop
jb
push
push
std
adc
je
dec
int
psrld
fstps
sbb
jb
dec
cmp
mov
test
cmp
daa
out
or
dec
out
imul
inc
fdivrs
adc
xchg
cltd
sbbb
fs
lods
jo
and
out
insb
pop
js
bswap
fs
inc
jo
mov
pop
add
lahf
out
insl
orb
dec
or
mov
and
and
adc
scas
sub
adc
sahf
sub
imul
shl
loopne
and
mov
scas
lea
pop
mov
int3
out
cld
js
pushf
in
jmp
shr
out
mov
push
fidivl
hlt
mov
push
pop
rorb
inc
stos
fdivrl
inc
pusha
daa
sbb
fdiv
test
and
push
inc
ret
push
sub
or
imul
lea
fadds
and
mov
dec
jecxz
mov
sub
or
jp
sbb
loopne
andb
and
mov
mov
mov
into
ss
bound
inc
scas
in
inc
mov
subb
lock
or
mov
in
pop
mov
fsub
xchg
test
inc
out
jmp
out
jno
and
xlat
sub
std
mov
icebp
aad
sbb
add
xchg
sub
push
pop
pushf
mov
adc
fldcw
ret
lret
mov
mov
arpl
pop
leave
fisubl
ja
test
mov
jb
jb
jnp
popf
sbb
rorl
mov
mov
pop
cmpsl
in
es
lods
push
mov
ret
xchg
push
add
negb
xor
loope
xchg
mov
and
jle
jbe
scas
insl
inc
xchg
clc
pop
xchg
or
popf
ss
or
jecxz
dec
repnz
xor
xchg
push
das
mov
rcrb
push
sub
int3
sbb
filds
out
add
mov
or
inc
push
xchg
ss
pop
jnp
inc
add
rcrw
icebp
lock
cmp
ja
leave
mov
push
mov
fs
scas
out
ret
ret
sti
jo
dec
dec
sub
fwait
out
sbb
mov
push
movsl
pop
movsb
loopne
xor
lds
out
out
dec
cwtl
cmpsb
add
cltd
inc
cmc
adcl
inc
adc
dec
fnstenv
push
sbb
lds
pop
pop
jnp
mov
stos
jno
aam
arpl
in
js
fistpll
bound
ss
push
imul
gs
sub
and
out
inc
and
fdivrp
cmp
and
rolb
adcl
adc
fimull
add
sub
xlat
out
or
in
inc
pushf
stos
mov
push
mov
inc
jae
lods
inc
repz
sbb
inc
andb
enter
mov
lock
jg
incb
push
xchg
jno
dec
fldenv
loopne
mov
sahf
xchg
call
dec
push
js
and
mov
insl
fmuls
orb
mov
push
sub
jnp
mov
mov
jecxz
and
sbb
cmp
pop
imull
mov
inc
das
push
push
mov
clc
or
test
sbb
jne
or
loopne
add
dec
cwtl
xchg
cld
mov
xlat
jecxz
add
mov
sub
pusha
int
rcr
fwait
mov
ds
sub
movsl
and
mov
hlt
clc
push
mov
xchg
enter
adc
xchg
insb
iret
mov
push
movsl
sti
jp
repz
cmp
in
pop
int3
js
mov
cmpsb
cwtl
insb
ss
int3
stos
pop
sahf
mov
pushf
clc
xchg
pop
neg
enter
inc
push
sbb
cmp
sbb
fdiv
xchg
test
jmp
pusha
adc
fsqrt
push
inc
adc
pop
sub
fadd
jge
sbb
rol
cmpsb
sbb
fwait
add
mov
pop
pop
roll
adc
jl
leave
sub
shll
std
stc
add
movb
mov
mov
sbb
jno
aam
pusha
lock
insl
decb
lret
in
lds
testb
xor
lock
inc
cli
inc
std
call
xchg
mov
jo
test
fwait
negb
pop
lea
dec
sbb
je
shl
fdivrs
lret
sbb
push
mov
rcrl
and
cvtps2pd
vpackuswb
jnp
movb
mov
push
test
xchg
iret
lret
out
ja
jle
fcompl
lret
loop
in
mov
or
fsubr
pushl
mov
outsl
stos
sbbl
cmp
inc
pushf
imul
andb
lea
dec
xor
cwtl
mov
call
out
dec
and
in
stos
mov
sbbb
push
inc
push
imul
mov
repz
movsb
sub
inc
hlt
inc
mov
xchg
push
and
fwait
or
iret
inc
adc
pop
jecxz
ss
pop
sub
mov
jns
fstps
ret
inc
inc
xchg
iret
xor
fs
mulb
push
iret
adc
adc
in
xchg
inc
gs
enter
inc
stos
adc
push
dec
push
jmp
mov
mov
sbb
es
je
push
mov
pushf
dec
push
std
inc
lock
fidivrl
push
sub
lcall
inc
shl
cltd
sbb
push
int3
push
call
add
inc
icebp
mov
scas
xor
push
repz
les
daa
arpl
ror
callw
in
lahf
xchg
inc
js
fwait
pop
lret
push
add
cmovae
sbb
andl
rclb
jo
push
std
cmp
pushf
cmp
sub
and
inc
lods
sbb
mov
loop
ljmp
ret
sbb
je
cmp
and
insb
and
xor
sbb
test
jne
adc
xor
or
aam
adc
aaa
arpl
and
ljmp
dec
in
test
cmp
rorl
mov
int
jo
out
adc
pop
xor
lahf
rcrb
inc
adc
rorb
pop
sbb
aam
inc
or
xor
mov
mov
popa
inc
ds
div
dec
or
mov
pop
mov
das
andl
imul
lea
push
push
pop
jne
mov
in
add
pop
cmp
orl
ret
movsl
imul
xchg
movl
mov
jno
mov
sahf
aaa
xchg
ja
in
mov
mov
js
test
pushf
jle
mov
mull
pusha
dec
int3
push
sub
mov
mov
and
mov
cmc
pushf
nop
pop
in
aad
xor
rcll
sbb
sub
into
pop
and
test
mov
enter
icebp
in
and
sbb
arpl
loopne
push
mov
dec
inc
pop
stos
fidivs
xlat
mov
mov
and
lock
pushf
or
sbb
repnz
pop
repz
push
lds
pusha
pop
aam
insl
jbe
imul
andl
mov
cmpsb
inc
pop
scas
mov
pop
ret
iret
cmp
xor
and
dec
jne
test
jge
mov
pshufw
push
add
movsl
repz
dec
push
jbe
sbb
cmp
mov
pop
aaa
rcll
frstor
xchg
mov
addr16
jp
pop
jnp
or
leave
or
mov
sbb
mov
or
shl
daa
add
stos
add
lods
dec
adc
mov
sbb
mov
push
xchg
pusha
pop
mov
inc
or
scas
mov
mov
pop
lret
push
and
imul
xchg
movsl
je
cmp
adc
aam
jb
enter
xor
adc
stc
dec
aaa
sub
fsubs
push
rol
dec
lods
mov
sbb
and
aad
out
pop
and
gs
mov
inc
pop
add
add
fmuls
repnz
mov
leave
mov
lds
out
loope
imul
xchg
ret
cmc
jmp
scas
push
js
add
mov
jge
sbb
push
fidivrs
mov
jge
add
dec
add
js
push
loope
push
mov
xchg
mov
push
scas
jno
aam
mov
jmp
out
cwtl
sub
mov
ja
jae
cmpsb
or
jns
dec
sub
inc
xor
loope
lea
sub
push
in
jne
ret
in
cmp
inc
ljmp
ja
push
mov
scas
and
pusha
xchg
xor
aaa
daa
jo
push
sub
adc
dec
dec
add
data16
add
pop
cmc
add
in
stos
cmpsb
outsb
xchg
cmpl
shrl
addr16
es
