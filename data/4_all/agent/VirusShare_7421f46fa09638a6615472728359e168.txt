pop
jbe
adc
add
add
mov
add
add
add
cld
sbb
jae
testb
add
push
sbb
push
sbbl
pop
push
cmp
pop
data16
popa
aad
sbbb
inc
ficoms
call
cmp
pop
jecxz
xor
imul
dec
cmpsb
repnz
jmp
daa
push
rolb
mov
pop
mov
repnz
cmp
aad
aam
mov
cmp
in
stos
outsb
mov
push
ja
adc
adc
push
pop
inc
inc
mov
and
adc
pop
dec
ret
imul
fildll
bound
out
loop
push
pop
jns
add
dec
and
push
fists
xor
testb
dec
int3
add
pop
dec
dec
ret
lahf
and
popf
cmp
enter
aam
pop
pop
ljmp
pop
test
mov
daa
pop
das
and
lret
mov
filds
call
add
lret
cmpsl
xchg
loopne
or
xchg
jo
jg
jp
dec
jb
aad
pop
imul
xchg
push
mov
xchg
push
pop
dec
imul
and
rcrl
jmp
fistps
mov
mov
xor
or
aaa
scas
repz
mov
in
jbe
jne
xchg
mov
dec
mov
xor
stos
dec
mov
sub
and
and
outsl
mov
mov
and
xor
push
int
adc
pop
jecxz
sahf
dec
push
adcb
mov
rcl
fs
adcl
scas
jge
hlt
addl
jl
xor
cltd
inc
iret
icebp
jle
mov
cld
dec
out
enter
adc
mov
aad
mov
xor
xor
movsl
pop
jecxz
lahf
xor
icebp
mov
add
mov
or
aad
lcall
lods
mov
xchg
add
dec
outsl
repz
outsl
xlat
xlat
push
fcmove
xchg
cwtl
push
cmpsl
ficompl
clc
push
lock
mov
inc
xchg
jmp
jns
pop
bound
mov
enter
adcb
xor
push
loope
movl
mov
outsl
mov
ss
rep
and
ljmp
cmp
imul
js
aam
cmc
sub
div
stc
cmc
je
mov
or
xor
fildl
inc
xor
dec
or
pop
inc
rcll
movsb
mov
mov
push
scas
pop
push
fisttps
in
jno
dec
jne
push
mov
test
lods
sbb
dec
jecxz
and
xchg
in
flds
jle
mov
mov
testl
xchg
cs
ss
test
int3
je
test
stc
lret
sub
mov
pop
rcrb
data16
sbb
fstps
ret
test
dec
jle
js
mov
and
and
js
add
sbb
arpl
stc
enter
loopne
pop
sub
imul
stos
or
repz
das
call
pop
sbb
xor
add
in
clc
xor
xlat
cld
iret
cld
and
inc
jns
jp
stc
mov
xor
shrb
sub
mov
lcall
andl
cmp
mov
cmp
inc
mov
lock
sub
stos
daa
xor
cmp
ficoms
xlat
dec
hlt
in
shll
mov
orl
mov
cmp
sbbl
jbe
faddp
repnz
shll
scas
pop
repz
sbb
adc
pop
inc
mov
jnp
sti
mov
int3
lret
dec
pop
lods
sbb
cli
jp
and
popa
xor
fmuls
pcmpgtb
ror
push
push
jnp
push
ja
ret
sbb
push
dec
outsb
fsts
sahf
and
inc
xlat
and
cmp
icebp
into
scas
out
into
jo
xor
test
pop
jae
push
imul
leave
mov
lods
mov
test
js
mov
adc
add
sbb
ss
test
pop
fnsave
ret
cmc
lret
mov
in
fisubrs
roll
aam
nop
dec
outsl
dec
adc
adc
psadbw
inc
sahf
and
enter
pop
out
sbb
gs
xor
xchg
pusha
sti
cmp
ds
mov
pop
out
cltd
add
loope
mov
pop
fsubl
std
ds
addr16
aaa
mov
mov
mov
inc
cs
es
inc
ret
jl
lods
jg
out
mov
leave
mov
inc
or
arpl
push
pop
mov
jg
jg
or
je
pop
dec
xchg
call
xchg
lret
or
inc
xor
xlat
in
push
movsl
sbb
mov
lcall
lods
data16
gs
adc
fistpll
xchg
shrb
push
add
cmp
pop
xorl
push
pushf
or
inc
addr16
sbb
jg
rorb
ss
repz
dec
cmp
push
xchg
mov
in
lock
sub
and
inc
inc
mov
dec
add
mov
xor
jno
loop
dec
test
and
fldenv
adc
cmpsb
pop
jae
push
and
inc
popl
subl
enter
rcrb
pop
jl
jnp
mov
add
mov
mov
loope
shll
leave
call
mov
pusha
add
sbb
loop
out
insl
xor
dec
lea
sbb
mov
test
mov
stc
xchg
sub
push
sahf
pop
push
dec
mov
test
adc
std
mov
aad
cmp
pop
jo
sub
mov
xor
xlat
insl
fwait
add
gs
xchg
cmp
in
cwtl
rcll
xchg
jmp
shll
loopne
test
pop
imul
sub
ret
and
push
movsl
ja
ljmp
addr16
bound
mov
push
ret
push
mov
mov
shrl
lock
mov
mov
mov
mov
out
or
xor
es
mov
scas
xor
add
loop
into
fisttpl
xor
mov
mov
mov
add
pop
xlat
mov
xchg
push
mov
or
jae
xchg
psrlw
push
inc
jge
bound
inc
xor
loopne
nop
aam
cltd
aad
and
mov
lret
dec
dec
cmp
shll
arpl
push
mov
cmpsb
inc
sub
outsl
fldz
sbb
and
lods
or
fdivr
loop
and
pop
inc
rorb
pushf
mov
imul
mov
pop
adc
into
lods
out
push
or
mov
jle
shlb
lea
data16
mov
adc
push
bound
outsl
hlt
push
mov
push
inc
repz
mov
fstp
fwait
popa
xchg
aad
cmp
mov
aad
shrb
mov
or
jnp
mov
fidivrl
fistpl
mov
es
xlat
pop
lock
push
xchg
les
xchg
pop
push
push
cltd
or
movsb
xchg
adcb
loop
cmpsl
movsl
mov
xor
mov
out
jb
pop
mov
cvtps2pi
idivb
incb
fstpl
sahf
imul
test
pop
addb
popf
jno
push
and
xchg
std
inc
fisttpl
ds
pop
fadds
adc
sbb
mov
in
popa
test
insl
or
loope
aaa
out
orl
subl
sub
inc
das
fisubs
cmp
popa
lods
jb
lcall
mov
pusha
jge
scas
loop
adc
andb
and
cmp
sub
dec
dec
enter
pusha
jl
cmp
jne
push
les
cmpsb
je
and
pushf
xchg
lret
cs
flds
ljmp
outsl
push
inc
add
inc
filds
mov
and
mov
adc
ss
sub
mov
xor
pop
dec
adc
subb
aad
push
mov
mov
int3
mov
adc
push
gs
pop
cld
ljmp
mov
add
mov
imul
xchg
xchg
push
cmp
and
sahf
movsb
xchg
je
lods
cmp
mov
les
imul
inc
out
mov
mov
scas
leave
loopne
and
pusha
mov
adc
insb
cmp
inc
pop
pop
fnsave
pop
lods
xchg
mov
mov
das
popa
cmp
sub
out
lcall
insb
mov
inc
mov
push
jne
cmp
arpl
dec
icebp
adc
mov
fisubs
lret
adc
inc
xchg
pushl
imul
test
jle
fists
dec
pop
add
push
sub
push
mov
and
movsl
dec
arpl
loope
or
mov
jb
jne
mov
mov
xchg
mov
pop
mov
mov
adc
and
arpl
cs
ret
lcall
or
addl
fs
pop
cmp
cmp
push
in
mov
frstor
mov
loope
bound
repz
loopne
scas
mov
clc
pop
aaa
inc
inc
pop
mov
xor
add
negl
out
mov
mov
lods
xor
dec
push
pop
mov
in
mov
popf
sbb
clc
fisubrs
into
cltd
loope
xor
xor
sub
jle
pop
or
insl
push
mov
arpl
lods
test
test
sbb
xchg
push
adc
inc
add
cmpsb
mov
roll
out
inc
addr16
rorl
jle
es
dec
sub
outsb
fisubrs
mov
push
push
dec
mov
mov
push
xor
popa
lods
pop
dec
setne
xor
std
push
lret
adc
sub
inc
cmp
cmp
daa
inc
cltd
xchg
sub
pop
or
aam
xchg
stc
icebp
xor
mov
rcr
enter
jp
lock
gs
cmpsl
dec
jo
cmp
insl
shl
xchg
ljmp
pop
xor
adcb
loopne
sbb
or
xchg
pop
loopne
sub
test
jno
add
lahf
add
jle
aaa
adc
jge
pop
mov
pop
mov
imul
fwait
je
sub
ror
push
push
ficoml
dec
dec
cmpsl
js
mov
xchg
cltd
push
sbb
mov
mov
aad
sbb
push
inc
out
cmpb
mov
hlt
push
pop
push
daa
xchg
mov
fsubl
jmp
jo
mov
daa
lret
call
fisubrl
adc
jle
loopne
inc
lahf
push
mov
popa
negb
pop
mov
jp
cmpsl
or
aad
ret
jns
stc
or
and
out
inc
sbb
mov
es
pop
ret
paddusb
arpl
dec
xor
and
pop
js
jge
add
mov
or
push
je
or
pop
pop
daa
popf
mov
das
add
test
jge
add
scas
lds
xor
movsl
daa
dec
mov
xchg
sub
inc
in
sbb
lea
pusha
jb
jp
sbb
test
das
int
jbe
xor
push
jmp
jmp
mul
sub
stc
fistpl
arpl
xchg
bound
lods
jo
gs
adc
cmc
push
pop
leave
xchg
aas
jb
fnstsw
dec
xchg
insl
imul
push
int
das
sbb
mov
cmp
jne
sbb
adc
addr16
jnp
test
cmp
pop
repz
gs
dec
inc
push
xchg
bound
and
iret
fadds
jb
cmc
lahf
stos
mov
addr16
and
lea
mov
hlt
mov
mov
loop
lods
mov
mov
daa
pusha
outsl
and
pop
or
adc
fstl
sbb
dec
out
jge
shll
sti
es
in
xor
xchg
push
inc
cmpl
add
int
mov
js
mov
and
stc
cmp
inc
je
mov
xchg
fstp
insl
xchg
enter
mov
call
xor
sar
pop
xlat
call
jle
sub
jae
int
or
fidivl
call
pop
data16
mov
push
jmp
push
dec
push
fisubl
sahf
fidivs
addb
leave
in
sbb
popl
out
loope
jns
adc
bound
mov
fs
dec
cmpsl
sbb
xchg
and
lret
mov
dec
cld
or
inc
mov
xchg
pop
pushf
loop
mov
fnstsw
jb
mov
jge
mov
inc
lcall
mulb
sbb
lea
inc
shrl
adc
clc
out
cmp
mov
dec
mov
push
mov
jno
std
loope
adc
fadds
pop
ret
std
jo
pop
sub
mov
mov
sub
add
int
inc
fidivrl
cmp
add
pop
aas
insl
leave
push
adc
fs
mov
pop
push
ret
popa
pop
xchg
popa
fwait
sbb
lret
push
add
add
fyl2x
rolb
push
test
leave
adc
cli
xor
clc
call
popf
push
adc
mov
data16
sub
lds
dec
and
mov
ds
daa
push
sbb
out
and
or
ljmpw
mov
mov
out
adc
stos
xor
adc
fs
subb
fsubs
in
add
outsb
ret
setno
call
scas
push
cwtl
mov
and
es
les
inc
push
fsub
mov
and
mov
mov
ret
xchg
dec
mov
cld
lahf
adc
push
int3
out
call
sahf
outsb
sbb
jbe
pop
mov
push
mov
ret
cmc
mov
out
lods
mov
ja,pt
sub
movsl
ret
jg
mov
jp
mov
mov
loop
jmp
pop
lods
mov
pop
pusha
mov
mov
xchg
push
xchg
outsb
clc
inc
xchg
pop
dec
enter
jecxz
sub
jge
dec
or
out
lods
ja
lods
lods
xchg
rcrb
rcrl
mov
mov
adc
pop
repnz
scas
out
sbb
stos
sub
je
dec
inc
int3
dec
mov
cs
lods
sahf
mov
dec
iret
ds
rclb
mov
sub
stos
rcrb
xor
adc
pusha
in
lds
test
cmp
imul
sub
xchg
iret
js
cmpsb
inc
stos
in
adc
mov
sub
adc
shr
fidivrs
pop
push
cld
mov
aad
lret
pushf
and
ss
sub
add
jo
mov
add
xchg
stos
popa
arpl
nop
or
xor
xor
mov
lds
or
cmpsl
mov
popf
or
int
lods
insl
xchg
jmp
ret
mov
ret
lds
jno
int
sbb
mov
mov
jnp
adc
inc
sti
imul
daa
daa
stos
or
and
xorl
mov
dec
jge
jle
ds
ret
mov
or
jns
push
mov
subb
push
mov
xchg
pop
xor
and
mov
aas
lret
enter
jnp
daa
adc
pushf
sub
ss
or
sub
ljmp
mov
mov
ret
jp
jbe
aaa
sbb
jb
aad
fsubp
mov
mov
movl
pop
out
jg
xor
inc
xor
push
add
sub
leave
sub
out
xor
cli
pop
imul
icebp
mov
cwtl
lret
push
fwait
adc
adc
mov
xor
clc
sarl
lcall
test
mov
mov
aad
jnp
lcall
add
es
ljmp
push
push
pop
push
subb
leave
adc
sahf
mov
cli
xor
add
dec
js
jecxz
stos
call
mov
daa
adc
cltd
jmp
adc
jno
sar
sahf
fs
icebp
pop
xor
aas
mov
and
test
aaa
ret
jg
cld
pop
xchg
mov
jle
cmp
pop
repnz
pusha
addr16
fcmovnb
clc
fnstsw
aas
out
xchg
mov
adc
es
mov
jnp
xchg
dec
sbb
jae
mov
insb
or
loop
mov
cli
jnp
daa
das
inc
adc
test
pop
adc
cmc
mov
xor
sub
addl
mov
push
scas
shll
mov
inc
mov
enter
scas
adcl
dec
shlb
popf
nop
gs
in
aad
movsb
movl
aam
dec
fcoml
mov
leave
xchg
jnp
andb
pop
sub
in
sbb
sbb
mov
stos
mov
ds
and
imul
repz
fldenv
cli
cmp
cld
daa
jge
scas
or
push
dec
push
popf
sbb
cwtl
aad
icebp
mov
xchg
insl
nop
ficoml
and
add
movsl
sub
and
testl
scas
fstl
cmp
xor
mov
pop
cltd
mov
sbb
aaa
lcall
test
in
cmp
inc
hlt
pop
pop
rcll
nop
xchg
in
mov
xchg
ja
dec
lahf
mov
js
xchg
sub
inc
cltd
pop
inc
movsb
sbb
mov
jb
repz
pushf
fistps
add
xchg
xor
sti
push
sbb
jae
aas
add
inc
lret
int
imul
adc
arpl
inc
mov
and
sti
xchg
inc
in
ret
stos
mov
push
add
xor
mov
stos
movsl
stc
das
xorl
mov
faddp
adc
xor
shl
les
lds
cmp
pop
scas
mov
mov
repz
jo
das
scas
jecxz
int3
cmp
icebp
popf
in
lock
mov
sbb
inc
out
mov
jge
or
push
adc
mov
mov
mov
sub
in
imul
fs
and
xchg
fmull
pop
call
xchg
das
pop
vminpd
sti
jns
je
aaa
inc
jno
sar
jp
push
sbb
out
fsub
pop
mov
leave
and
or
ds
loop
lret
cli
pushf
mov
lods
arpl
mull
idivl
inc
sub
sub
push
divb
or
push
aaa
outsb
loop
insl
arpl
pop
or
loopne
sbb
addr16
xor
or
stc
mov
sub
ret
leave
inc
jp
mov
into
lret
or
lret
hlt
aaa
lods
pop
flds
je
push
int3
pop
cli
sbb
jb
outsb
mov
pop
push
rclb
jp
sbb
xor
cwtl
cmpsl
aaa
jg
aaa
les
call
repz
and
lock
ja
xchg
idivl
cmp
hlt
lods
xor
add
xchg
and
loop
inc
rcll
jg
aam
add
or
leave
inc
test
dec
mov
mov
mov
js
pop
push
leave
push
rcll
or
rcrb
ret
scas
ljmp
sbb
lcall
ret
mov
inc
lods
loop
sub
add
sahf
ds
inc
mov
addr16
xchg
fnstenv
rcrb
xor
jbe
lahf
push
cld
mov
push
jmp
sbb
pop
imul
push
cltd
mov
adc
shll
pusha
rcrb
dec
mov
outsb
jmp
mov
push
jecxz
adc
or
mov
in
shrb
add
aas
mov
push
inc
addl
xorl
fadds
add
jge
gs
clc
jl
mov
sbb
jae
sub
xor
dec
xor
movsl
add
mov
jp
inc
jnp
bound
jne
hlt
mov
pop
scas
pop
test
pop
fucomip
jg
fcoml
sub
push
fst
xor
or
dec
aas
imull
int
jp
jbe
jns
or
inc
jbe
rcl
es
movsb
ss
push
dec
mov
sbb
outsl
xchg
rcr
ds
shrl
pop
addr16
inc
cmp
sbb
jae
and
lahf
daa
mov
outsb
or
fsubrl
popf
xor
or
or
pushf
push
push
call
jg
sub
pop
pop
push
out
pop
lahf
jns
or
dec
dec
mov
lret
and
ret
ds
stos
xor
adc
xor
popa
popa
addr16
in
push
aas
lret
jae
add
daa
cmp
push
push
cmp
fsubl
mov
add
cs
push
cmpsb
add
cli
pop
jecxz
out
test
jmp
incl
movsb
add
mov
cs
fiadds
or
cmp
in
cmpsb
imul
xchg
testb
and
sub
pop
movsl
add
sbb
add
inc
sbb
aam
xchg
xchg
aam
out
cmp
and
inc
add
ret
in
or
or
jae
mov
mov
mov
imul
fwait
add
mov
shlb
xor
iret
push
sti
push
sub
dec
inc
xor
push
xor
and
cmp
call
mov
scas
int3
stos
cmp
and
in
mov
mov
jmp
sbb
call
jg
cmpsb
push
icebp
push
leave
push
mov
pop
dec
dec
mov
jno
add
pusha
stos
incb
test
fidivrl
aam
mov
jl
ja
push
jno
sub
fsubs
test
loop
sti
pop
sbb
clc
jae
int
cmc
mov
xor
sbb
int3
push
cmp
mov
call
or
fs
stos
ds
addr16
in
lods
loope
call
das
mov
mov
xor
in
movsb
sub
sub
cmp
jecxz
dec
sub
add
loopne
sbb
fsubl
iret
rcll
mov
jne
push
sub
cwtl
in
cwtl
aad
ficoml
jg
lds
lret
or
sub
ss
fwait
push
pusha
xor
mov
pop
inc
dec
sbb
mov
mov
adc
or
jl
pop
cltd
push
pop
adcb
mov
aad
pop
stos
rolb
jns
nop
mov
imul
cld
sub
push
jmp
out
xchg
gs
lods
fsubrl
add
fisubrl
dec
clc
ds
nop
push
repnz
push
arpl
retw
outsb
add
dec
mov
xor
sub
pusha
xchg
adc
adcl
js
enter
leave
mov
jne
mov
lds
call
lret
mov
add
push
mov
int3
outsl
repz
std
rorl
inc
sahf
daa
sub
xchg
xor
test
push
mov
stc
inc
loopne
lcall
lret
shl
jne
std
adc
pop
pop
mov
jecxz
nop
dec
sub
stos
mov
or
aad
sarl
dec
sti
mov
sarb
popf
stos
mov
in
iret
or
mov
int
in
aad
pusha
or
cli
loop
jmp
push
dec
cltd
dec
jne,pt
jle
dec
pop
fstpt
and
dec
push
mov
cld
icebp
sbb
sti
sbb
adc
leave
jb
out
mov
vphaddubw
filds
loopne
sub
push
pusha
stos
std
and
adc
sahf
mov
add
nop
or
inc
inc
pop
shll
stos
leave
mov
test
sbb
xor
mov
ret
ja
add
mov
and
inc
les
jge
jge
aad
mov
adc
mov
inc
in
nop
jmp
sbb
mov
mov
inc
sti
jg
out
loopne
notl
test
xchg
and
bound
mov
jne
pop
mov
dec
aaa
cli
mov
push
mov
into
ds
push
xor
in
jnp
xchg
jne,pt
ljmp
std
out
xor
inc
cmp
pop
repnz
gs
push
lds
sbb
out
mov
inc
dec
fcoms
xchg
mov
scas
mov
jl
lcall
adc
test
adc
dec
sub
mov
fistpl
sbb
sub
mov
aas
adc
xchg
inc
xor
jg
cmp
test
jp
in
dec
orl
pop
cmpsl
sub
ret
jnp
push
push
imul
push
outsb
sbb
aam
inc
or
sbb
and
nop
xchg
les
jo
jb
movsl
dec
jmp
inc
sti
xchg
jge
pop
int
shlb
pop
daa
insb
pop
sarb
mov
mov
shlb
inc
clc
aam
xlat
lret
push
std
scas
dec
aad
dec
sbb
repz
cmc
imulb
lcall
push
cmp
cmp
dec
mov
dec
push
fdivl
mov
sbb
adc
mov
dec
xchg
les
and
call
xchg
into
jecxz
sub
push
test
pop
pop
into
scas
jno
roll
mov
test
fisttps
int3
ds
in
cmp
pusha
xor
and
cmp
arpl
xor
push
jl
mov
pop
inc
mov
sbb
jle
mov
lcall
adc
jecxz
push
add
and
cmpsl
negb
mov
push
jle
into
sbb
das
ljmp
push
cmp
stos
popa
lret
movhps
pop
shlb
sbb
jge
pop
mov
scas
jns
mov
aas
iret
nop
sub
cltd
inc
mov
int
pop
pop
imul
jmp
sti
stos
sbb
mov
jno
jno
sub
call
xor
sbb
mov
imul
fucomp
lret
ret
fidivrl
push
adc
jae
fdivr
xor
scas
or
ss
out
cld
and
sbb
mov
test
xchg
out
loop
hlt
push
out
nop
inc
cmp
jb
xchg
sub
call
cmp
or
lret
aaa
mov
cli
fdivr
jmp
sub
and
jp
pop
pop
or
lock
shlb
sahf
mov
mov
adc
popf
int3
dec
repz
sbb
mov
push
inc
mov
pop
inc
mov
lret
sbb
bound
out
mov
add
sub
xor
push
cmp
cwtl
outsb
ds
ss
loop
add
cmp
pop
scas
push
pop
enter
scas
cmp
scas
xor
lods
and
inc
mov
movsb
stos
js
outsl
mov
shlb
sti
insl
inc
push
jmp
sub
sbb
inc
clc
ds
divl
loopne
xor
sti
xor
cld
mulb
inc
and
sub
fstps
or
int3
fidivl
fstpt
and
xchg
lea
xor
aad
xor
adc
call
outsl
mov
xchg
mov
xchg
jo
mov
loop
push
sbb
sub
jbe
sar
and
inc
pop
cmc
sahf
mov
cmp
adc
mov
stos
adc
mov
imul
pop
pushf
cmp
inc
lock
movsl
push
add
and
xchg
lods
fcoml
mov
push
push
sti
enter
jo
lcall
mov
pop
push
les
lahf
lds
jns
out
je
mov
add
movsb
mov
and
dec
cld
push
pop
push
push
mov
sbb
adc
fsubl
les
insl
out
inc
outsl
cwtl
add
fcmovnu
cs
or
shl
mov
lcall
decb
mov
outsb
jmp
sub
scas
repnz
outsl
test
popf
repnz
adc
dec
jecxz
aad
leave
xchg
test
jb
xchg
ror
scas
ja
jb
mov
or
mov
cmp
dec
adc
lods
rcll
aas
lds
fs
cmc
fiadds
lods
int
dec
and
ja
push
aad
in
outsl
loope
aam
mov
jb
xchg
out
jnp
xchg
dec
les
mov
insl
push
loop
jl
add
fstps
or
mov
pop
les
mov
sti
icebp
mov
rorb
push
sar
cmpsl
sti
or
push
pop
aad
fistl
jp
mul
pusha
test
xchg
sub
bnd
dec
push
adc
cwtl
push
int
notl
lret
mov
pop
mov
adc
ret
stos
sub
aaa
jg
test
jl
pop
xchg
fdivrs
aas
mov
cmp
cmp
ret
movsl
loope
sub
pop
mov
mov
sub
stc
inc
clc
lret
mov
cmp
mov
loopne
clc
les
sub
call
lret
jo
scas
push
pop
jmp
inc
cli
enter
inc
sub
xor
pop
mov
jmp
mov
cmp
inc
std
xor
pop
jne
fcmovnbe
add
adc
clc
xchg
mov
daa
jl
not
xor
cmp
lods
adcl
sbb
out
jg
xor
jne
fucomp
out
lret
sub
cmc
scas
add
mov
arpl
cmp
cld
jecxz
mov
adc
push
bound
mov
or
cmp
and
std
xchg
lods
xchg
pop
aad
push
xchg
sub
popf
mov
cmp
sub
out
sub
repz
adc
dec
sbb
add
imul
addr16
cs
out
and
jl
int3
lods
mov
pushw
ret
fistpll
enter
push
shl
xchg
mov
add
je
sbb
in
push
cwtl
movsb
dec
lret
loopne
mov
add
repnz
dec
in
aaa
mov
mov
lcall
clc
add
dec
jo
call
add
pop
mov
out
mov
push
dec
xchg
sub
or
bound
outsb
push
cmp
sbb
add
xchg
fnstsw
shlb
hlt
pop
push
test
inc
lds
xchg
cmpsb
or
and
rcr
iret
xchg
jg
mov
push
mov
adc
add
mov
je
loop
mov
cmpsl
xlat
cs
test
push
fsubs
jle
addr16
aas
jne
repnz
fadd
fiadds
std
mov
stc
nop
push
dec
lret
daa
dec
ja
sbb
add
dec
out
sti
test
nop
inc
loope
out
mov
leave
push
fwait
test
jmp
das
stc
pop
or
mov
cs
dec
inc
inc
daa
or
sbb
mov
mov
cmp
sub
pushf
out
xor
inc
bound
mov
nop
add
jns
adc
xor
test
jecxz
inc
cld
insb
out
ficomps
push
imul
data16
mov
cmp
lods
push
mov
test
dec
lret
insb
iret
mov
enter
jmp
dec
insb
imul
and
push
scas
xchg
xor
sub
aas
dec
mov
sub
testb
cmp
fs
mov
mov
fisubs
adc
out
repnz
aad
xor
mov
addr16
push
add
insl
sbb
movsb
fimuls
shll
jp
std
add
test
mov
mov
shll
inc
inc
or
push
cli
cli
roll
mov
pop
push
mov
add
neg
rolb
sbb
std
mov
add
aam
sbb
pop
pop
test
ljmp
mov
daa
mov
pop
mov
inc
stos
fistpl
imul
jne
jae
clc
inc
mov
adc
push
lea
xchg
sub
rol
cmp
pop
mov
leave
out
scas
mov
sub
cmp
icebp
adc
repnz
cmp
ss
int
ds
add
and
xchg
pop
movsb
pop
add
repnz
out
sub
leave
pop
in
adcb
inc
sbbl
sub
lods
dec
add
divl
cmp
xchg
lret
enter
jbe
add
mov
repz
loopne
popf
je
inc
adc
inc
sarb
xor
inc
inc
loope
sarb
or
cmp
inc
dec
push
mov
das
cltd
les
pushf
gs
inc
scas
inc
aad
jecxz
mov
aaa
test
lds
mov
add
addb
add
data16
fsub
mov
or
fistl
push
mov
and
lods
xor
and
dec
subb
mov
into
lahf
fisubrs
shrb
stos
cmp
push
cmp
icebp
jbe
repz
mov
jne
mov
and
pop
sbb
dec
fdivl
pushf
leave
add
xchg
pushf
jmp
inc
pop
cmp
inc
cmp
aad
aaa
cld
xchg
idiv
cmp
and
jbe
ror
or
lcall
dec
mov
inc
fcom
sub
mov
pop
pop
pushf
adc
aam
aas
ljmp
inc
call
jb
xchg
sti
push
and
inc
cli
pop
mov
mov
scas
push
xchg
sub
fimuls
cli
les
mov
cwtl
scas
movsl
cmpsl
xor
jmp
push
mov
jae
or
popa
stc
xchg
loop
sti
es
mov
sahf
adc
xor
mov
iret
mov
cmp
rclb
push
fwait
test
adcl
or
rcrl
inc
sub
cmp
jp
mov
rclb
stc
mov
std
mov
shr
cltd
mov
rorl
inc
xor
push
jle
sub
mov
lcall
movsb
xor
pop
icebp
push
jg
fstpt
shrl
out
cmp
pop
mov
adc
mov
pop
mov
and
subl
fs
sub
push
je
sbb
xchg
pop
das
mov
sub
or
fcompl
insl
mov
cmp
roll
cmpl
push
lods
mov
enter
cld
hlt
pop
cltd
mov
jge
jnp
jle
pop
adc
mov
scas
mov
insb
call
sbb
xchg
add
and
movsb
cld
jmp
loopne
into
dec
dec
loopne
mov
pushfw
and
cmp
lea
xchg
ficomps
xchg
pushf
stos
repnz
pop
cmp
mov
xor
sub
ficompl
push
and
inc
dec
lock
or
adc
mov
and
or
adc
daa
pop
int
data16
pop
cmp
gs
dec
mov
inc
push
push
in
inc
jnp
inc
jmp
dec
jg
cmc
out
xchg
push
scas
les
aaa
idiv
stc
push
stos
push
adc
lcall
xchg
push
jb
hlt
lds
cwtl
repz
js
lds
and
scas
aam
ds
mov
push
int
outsl
ret
adc
xor
mov
cltd
pop
adc
cmpsb
jl
addr16
ja
int
loop
xor
pop
loopne
fisubs
into
jbe
sbb
stos
inc
movsl
leave
mov
lea
gs
inc
push
cltd
mov
cmc
and
daa
ja
movl
js
jmp
or
js
insb
into
movsb
pop
xchg
push
xchg
cmp
mov
stos
xchg
and
scas
mov
push
dec
daa
add
xchg
push
xchg
sbb
sbbl
in
or
push
xchg
mov
sub
mov
dec
mov
sbb
xchg
out
or
xor
scas
push
push
sub
and
call
jbe
sbb
inc
cs
pusha
xchg
ret
push
xor
ret
flds
js
mov
idiv
lds
and
sub
cltd
fisubrl
repnz
push
shll
push
mov
sbb
xchg
ror
aas
mov
popf
pushf
mov
inc
lcall
adc
dec
aad
in
jno
pusha
out
mov
notb
sub
add
clc
outsl
add
jb
dec
hlt
mov
pop
cmp
xchg
pop
js
push
sbb
xchg
sub
cmp
or
push
pusha
aas
pop
inc
out
xor
cmpsb
loopne
xchg
stc
mov
push
cmp
jbe
xor
enter
dec
cmp
or
in
les
imul
gs
aam
mov
xor
sbb
inc
sbb
mov
lods
paddq
jns
lcall
and
xchg
add
pop
pop
xchg
arpl
adc
ret
xor
add
xchg
int3
in
js
daa
xchg
adc
test
test
xchg
xor
mov
out
cmp
dec
hlt
or
in
inc
fsubrs
and
ljmp
sbb
sub
xor
adc
or
cli
push
inc
sbb
lock
icebp
lods
loopne
push
lahf
sbb
movl
or
in
test
jecxz
iret
imul
outsb
mov
jno
inc
push
dec
mov
daa
xor
jmp
xor
xchg
push
xor
pop
ret
push
or
aam
sbb
adc
fildll
pop
adc
das
mov
sbb
in
and
jl
push
add
mov
loope
scas
xchg
in
push
push
mov
cltd
fists
push
repz
daa
cmp
cmpsb
cli
xorb
sbb
add
stos
in
enter
inc
xlat
mov
fcmove
loope
pushf
in
enter
and
adc
mov
pop
insb
and
stc
in
mov
fimull
aas
sub
in
sbb
aas
fistl
cmp
sub
test
lcall
insl
sbb
mov
or
outsl
stos
sbb
jecxz
fnsave
je
sbb
inc
pop
push
icebp
aad
ljmp
and
jp
es
out
out
or
mov
push
fistpll
js
fidivl
cld
outsb
jg
pop
ljmp
mov
nop
sarb
pop
mov
xor
dec
pusha
adc
sti
or
ja
mov
cli
push
jb
pop
mov
adc
repz
out
and
rcll
daa
test
sub
nop
daa
imul
les
shrb
cltd
add
adc
mov
sbb
fmull
xchg
inc
xchg
fbstp
sbb
mov
xchg
cmp
ret
fdiv
push
mov
cli
and
in
movsl
mov
pop
sub
jg
sub
sahf
ret
aad
pushf
imulb
jg
scas
adc
dec
ds
sbb
cmc
aad
in
clc
push
je
call
cmp
add
fcoml
inc
in
ficomps
add
and
cs
mov
scas
jg
out
push
and
mulb
push
push
xlat
jns
or
and
adcl
aad
imul
cwtl
add
cmc
ficoms
lahf
clc
inc
cmp
adc
xchg
jns
cmp
lahf
mov
dec
fnsave
xchg
movsl
test
xchg
xorl
cs
data16
jmp
push
sub
dec
push
loopne
mov
push
fbld
lea
ljmp
push
stc
add
cs
stos
add
aad
and
sbb
mov
xchg
out
push
push
adc
adc
data16
test
push
fwait
pop
jae
out
pop
bound
mov
push
pop
push
xchg
sbb
int
cmp
xor
sti
dec
outsb
sub
push
mov
out
sti
outsl
orl
adc
and
ja
and
cmc
arpl
insl
notb
or
jb,pn
or
jl
pushf
inc
iret
xchg
pop
insl
xchg
push
shll
xchg
test
adc
and
adc
pop
adc
and
pushf
jmp
inc
push
jmp
add
fcmovb
and
add
out
pop
mov
outsb
pop
mov
and
push
xor
xor
mov
das
xchg
hlt
inc
out
xor
test
xorb
fs
out
stos
ljmp
std
fimuls
out
jnp
push
pushf
dec
rorl
pushf
sub
push
or
mov
jp
subl
sbb
inc
iret
cmp
add
sbb
push
scas
fs
inc
sub
mov
dec
sbb
pop
pop
movsl
jno
xor
jge
push
mov
sti
jp
push
arpl
cmc
or
cld
rorl
repnz
pop
cmp
dec
lret
sar
addr16
pop
sbbb
adc
idiv
cmc
scas
push
in
add
rcrl
jmp
out
dec
sbb
imul
popa
pop
dec
lods
imul
push
idivl
mov
stos
mov
push
int
inc
int3
adc
loop
adc
lcall
gs
dec
out
fidivrl
cli
shlb
push
or
incl
jae
imul
dec
mov
adc
jno
fwait
es
test
or
hlt
sub
out
push
xor
pop
adc
lock
test
movsl
mov
fimuls
push
mov
dec
adc
jmp
les
sbb
jge
xor
adc
jl
mov
jnp
add
or
inc
jecxz
sub
jle
mov
test
int
hlt
stos
dec
out
mov
xchg
fdivrl
in
pop
sbb
lock
and
shll
les
ret
in
ret
nop
inc
bound
fstpt
imul
mov
lret
lret
lret
and
jae
xor
out
hlt
loop
movb
icebp
jl
das
xor
dec
xchg
out
mov
cli
pop
pop
ret
gs
cmp
push
or
sub
rcrb
adc
xlat
sub
or
pop
fmuls
cmp
imul
stos
pop
movsl
scas
lods
out
loop
rcrb
and
jge
add
verw
and
ret
call
jp
mov
fistps
scas
xor
mov
jecxz
stc
rcrl
mov
sub
cmp
loop
mov
jge
mov
jmp
mov
faddp
xchg
cmp
subb
jl
cmp
in
mov
inc
or
mov
or
loope
mov
js
push
pop
je
add
in
aas
aad
jne
ja
movsl
lds
js
fiaddl
inc
inc
or
jle
dec
fdivl
cmpsb
movsl
loop
pop
fwait
add
fistps
lds
rcrl
jae
outsb
fisttps
enter
inc
out
outsl
hlt
dec
inc
push
lret
out
xchg
aam
cmp
cmp
xor
mov
mov
sarl
shlb
and
push
test
in
push
inc
data16
outsb
adc
dec
push
mov
push
or
sbb
and
pop
pop
pop
stos
rorl
popa
int
popa
push
test
pop
test
and
cmp
and
hlt
push
jecxz
jns
les
popa
cli
lcall
in
push
xor
inc
cltd
dec
pop
sbb
mov
es
jb
jmp
sub
mov
xor
jo
and
xor
inc
pop
push
in
cmp
scas
fisubs
scas
outsb
push
sub
pop
rcl
cmp
lret
cmp
jmp
xchg
gs
xchg
pop
out
mov
mov
push
mov
inc
aaa
mov
gs
imul
int3
notl
xor
aaa
fs
in
mov
dec
adc
pop
and
xor
or
insl
mov
xchg
call
rorb
mov
sarb
jecxz
sbb
adc
xchg
mov
inc
add
test
jge
cs
mov
push
xchg
pop
ljmp
xchg
sahf
mov
es
and
rolb
xchg
adc
insl
cmp
cmc
lods
mov
out
fwait
or
push
mov
push
rcll
mov
repnz
adc
add
ret
push
mov
aas
push
cltd
inc
pusha
stos
mov
cwtl
cmpsb
inc
adc
cmpsb
cltd
pop
pop
jae,pn
mov
hlt
popf
pop
nop
sarl
sbbb
imul
pop
test
cwtl
fimuls
adc
cmpsl
mov
enter
push
xor
scas
pop
pop
lcall
daa
mov
cltd
fisubrs
dec
sub
cli
jo
cmpsw
or
xor
mov
mov
cwtl
lret
fcmove
sbb
inc
cmp
sbb
jmp
or
leave
dec
in
icebp
and
addr16
mov
pop
sti
push
insb
adc
outsl
inc
mov
mov
movsl
movsb
in
test
cmp
and
and
mov
pop
int3
adc
test
sub
push
ljmp
dec
jp
rclb
pop
pop
call
test
jb
xor
jg
das
shll
xchg
lahf
mov
or
push
outsl
jge
push
dec
aad
aam
mov
pop
pop
adc
sbb
and
jle
and
and
or
or
popf
out
pop
jp
xor
push
pop
mov
cli
mov
xor
lods
push
jmp
jo
out
dec
xchg
inc
imul
mov
sbbb
fists
outsb
inc
jae
cmp
into
pop
jl,pn
lret
imul
jae
popf
test
loop
in
fld
mov
ljmp
fildll
dec
jmp
xchg
inc
push
sbb
xchg
rcl
in
fsubr
movsb
faddl
sbb
add
jbe
lods
mov
int3
pop
iret
loopne
mov
mov
lods
add
xchg
dec
cmpsl
arpl
daa
cltd
int
xorl
jb
xchg
cmp
jns
shll
or
sti
mov
jno
dec
sub
cltd
mov
movsb
lock
xchg
mov
inc
ljmp
dec
lret
cmp
popf
mov
mov
add
dec
mov
sub
aam
call
stc
bnd
xor
mov
pusha
fcomps
cld
popf
or
pop
jle
cmpsl
pop
sarl
dec
out
xchg
jbe
arpl
in
and
inc
cmpsb
sub
out
xchg
cmp
pop
shrl
call
addr16
jl
sarb
push
repz
push
fstpl
fcmovne
imul
cmpsl
sub
adc
push
int
xchg
pop
cmpsb
fnsave
mov
out
pushf
jbe
xchg
ja
sub
xchg
inc
or
fwait
mov
or
jo
push
bound
stc
jo
cmc
inc
dec
cmc
cmp
or
and
push
add
nop
int
pop
fdivs
stc
lock
sub
jl
mov
sub
bound
adc
mov
daa
inc
fdivl
outsl
push
imul
push
jns
pop
xchg
dec
daa
and
fdivp
sbb
or
jmp
int3
cld
jmp
sarl
mov
adc
sbb
dec
decl
add
adcl
mov
insb
in
cmp
test
int3
fld
sbb
rcl
std
mov
xor
mov
mov
dec
mov
jnp
shlb
sahf
jp
mov
xchg
scas
jmp
xor
in
xchg
adcl
jae
std
dec
sti
jle
or
shll
ret
jg
pop
js
or
jns
test
add
movsl
inc
enter
imul
cwtl
and
mov
nop
cmp
and
popa
gs
out
lret
cmc
das
rolb
adc
cmpsb
in
jno
adc
push
or
bound
dec
inc
pop
adc
iret
cltd
std
push
mov
xchg
xor
movsl
mov
and
test
mov
push
aaa
testb
mov
push
push
cmpsl
pop
xchg
or
and
in
pop
dec
cmp
scas
jne
bound
xor
insb
lods
xchg
repz
xor
sbb
mov
adc
jmp
xor
arpl
push
dec
sbb
push
enter
mov
and
and
roll
inc
in
pop
jmp
loopne
mov
btc
jo
ret
and
test
mov
pop
cmp
fsts
into
inc
and
aad
in
jmp
sbb
mov
cmp
push
lds
outsl
mov
xlat
mov
sahf
clc
hlt
push
cmp
sbb
xor
mov
adc
push
pop
loop
cmp
ficoms
test
push
dec
sbb
gs
fldenv
clc
mov
xchg
xor
xchg
pop
dec
jo
lcall
push
sub
fisubs
subb
xchg
sub
sub
jmp
jb
jns
call
rorl
lea
jg
adc
outsl
mov
call
xchg
fld
scas
push
cmp
ret
arpl
shrl
mov
aad
fwait
inc
pusha
imulb
hlt
mov
cmp
xchg
into
mov
mov
fwait
pop
adc
fisubrl
adc
aas
xor
popf
aad
sub
and
jle
push
push
stos
rorb
sub
cmp
mov
or
cmp
pop
xor
jp
test
mov
xor
stos
push
data16
fwait
add
bswap
pop
fadds
iret
fwait
mull
push
mov
inc
jle
pop
pusha
cmpsb
mov
pop
cmp
out
add
jmp
jg
pop
inc
inc
lret
mov
and
push
mov
jecxz
std
or
fbld
lret
xor
adc
popf
cmp
in
test
mov
adc
lds
or
inc
adcb
push
loop
inc
into
out
std
dec
into
ds
add
xchg
mov
xor
dec
aas
xor
or
mov
mov
cmp
stos
test
fnsave
sub
lock
out
cld
xchg
inc
inc
les
or
push
vhaddps
cmp
push
das
inc
sub
add
and
out
pop
adc
mov
arpl
icebp
dec
mov
mov
push
gs
dec
dec
into
mov
stos
cmpsb
and
push
mov
jmp
sti
lea
add
mov
cmpsl
xor
jg
cmp
jp
lcall
cmpsl
ja
clc
inc
and
push
and
add
aaa
daa
xchg
clc
cmp
xchg
mov
lods
repnz
in
sub
mov
pop
mov
ljmp
daa
push
jno
dec
fmuls
in
sbb
loopne
sti
sbb
push
dec
xor
push
iret
mov
jp
sbb
loop
repz
inc
mov
cmp
jge
lods
push
cmp
sub
sub
add
aas
push
movsl
fs
popf
lcall
sarl
push
sub
adc
adc
xchg
inc
push
dec
mov
pop
andb
into
jae
jbe
sub
dec
push
sub
pusha
cld
nop
xchg
sti
fwait
push
je
loopne
out
push
sbb
push
sbb
loop
dec
clc
stc
push
popa
or
or
pop
pushf
je
push
dec
push
je
std
inc
scas
mov
adc
mov
bound
imul
jecxz
pop
push
mov
or
notb
xor
pop
lods
sbb
sub
inc
inc
notb
or
adc
mov
ds
movsl
fnsave
aad
mov
sbb
insb
add
xorb
and
xchg
int
jle
insl
adcl
mov
arpl
xor
mov
pop
mov
dec
cmp
test
jl
pcmpeqb
and
lcall
mov
cmp
pop
ja
gs
cmp
xor
xchg
xchg
and
shll
popf
jecxz
dec
mov
push
hlt
roll
lds
lods
into
jne
mov
pop
cmc
movsb
les
insl
inc
cmp
xchg
sbb
adc
fstps
clc
loope
lods
mov
aaa
mov
ret
out
cwtl
ds
adc
dec
jbe
cwtl
sub
jle
lock
pop
push
push
sahf
stc
jo
insl
cmp
stc
push
mov
inc
jp
and
ja
aaa
cmp
cmp
sti
mov
cmp
jl
pop
rorl
adc
inc
lods
mov
jecxz
imul
in
jmp
xchg
ret
or
mov
inc
jmp
inc
pop
or
out
rorl
mov
mov
mov
or
enter
pushf
dec
sti
add
out
lds
sbb
in
out
cli
gs
in
mov
push
mov
mov
std
int3
daa
pop
sti
mov
sti
imul
xchg
inc
es
cmpsl
scas
dec
inc
or
hlt
movb
adc
pushf
mov
and
dec
mov
pop
xchg
insl
sahf
rolb
push
sbb
mov
adc
xor
lea
cltd
cmp
ds
leave
mov
movsl
lret
dec
mov
fildl
lret
mov
daa
inc
mov
mov
cmp
and
out
lds
xchg
leave
dec
test
lret
mov
orb
cmovo
push
ja
jg
scas
push
cmpsb
pop
or
addb
lret
cwtl
cmc
xchg
add
jo
add
adc
ljmp
imull
rclb
nop
movsb
je
std
mov
cmp
xlat
pop
lock
push
movsl
pusha
pop
shrb
dec
mov
add
shl
js
data16
jns
jno
mov
inc
mov
jmp
dec
dec
adcl
cwtl
cmp
add
movsb
pop
xchg
xchg
pop
daa
in
cli
das
imul
mov
add
pusha
pop
mov
add
pop
mov
xchg
and
icebp
cmp
push
adc
and
popa
arpl
sbb
imul
imul
mov
cmp
lods
inc
popf
sub
xor
xchg
fdivrl
adc
xchg
outsb
int
imul
xor
push
mulb
idiv
pushf
inc
mov
cmp
mov
test
mov
jne
lods
ss
sahf
mov
daa
enter
das
sub
subb
ds
inc
add
xchg
fucomi
push
push
mov
cmp
pop
mov
stc
dec
ss
mov
mov
sbb
lret
push
in
fdivrs
or
mov
in
or
add
mov
loop
or
and
jns
xor
cmc
in
sub
xchg
adc
in
sub
or
inc
jb
sub
mov
sbb
ret
das
shrb
mov
sbb
fidivrl
leave
idiv
sub
cltd
push
add
pop
popa
cli
stos
sub
stc
enter
adc
dec
pop
sbb
cmp
outsl
rcll
inc
imul
or
adc
out
add
ss
sbb
outsl
sbb
or
shrb
icebp
inc
fnstenv
in
outsl
rcl
test
adc
popf
lds
lds
jnp
loope
sub
sbb
iret
aas
pop
dec
or
aaa
lock
and
imul
daa
cli
data16
jg
out
sbb
shrl
mov
pop
add
mov
dec
test
push
mov
arpl
loop
cmc
xor
cmp
mov
out
xchg
shlb
sub
jne
and
pop
jns
clc
jae
pop
cltd
int
psllq
jge
pop
rcr
pop
inc
shrb
push
pusha
and
and
xchg
or
push
xchg
bound
mov
cmc
and
ss
cmp
jle
xchg
scas
add
test
scas
inc
push
push
push
imul
xlat
ja
mov
sub
fistps
and
loope
pop
test
fldcw
add
jl
lock
jb
loopne
loope
ds
sbb
jle
or
repz
scas
xchg
lock
add
pop
lret
faddp
pop
adc
sbb
shl
xor
add
mov
cli
cmpsl
or
mov
lods
push
stos
cli
je
daa
sub
pop
jne
into
into
pop
lock
xchg
aam
inc
ficoms
shl
jmp
orl
and
mov
test
test
or
xchg
pop
arpl
mov
pop
rcl
dec
pop
cmpsl
mov
mov
dec
cmc
arpl
mov
cwtl
call
fstpt
fsubs
in
cmp
outsb
fwait
sub
pop
lret
push
and
movsl
mov
mulb
lret
movsl
adc
mov
inc
jo
push
mov
cs
push
in
inc
xchg
lock
lods
sahf
and
fcompp
inc
lret
aam
and
mov
cmp
aaa
fildl
ret
pop
or
out
pop
mov
cmp
adc
lds
jecxz
pop
pop
arpl
adc
cli
in
lret
pop
es
jl
sub
daa
pop
mov
scas
push
outsl
jo
rcrb
push
pop
mov
loopne
idivb
shrb
cltd
adc
out
scas
popl
movsb
xlat
cmp
mov
jecxz
cmc
mov
sub
cli
loope
jmp
jbe
xchg
push
push
rclb
lret
mov
test
mov
popf
add
pushf
mov
icebp
aas
in
in
fistpl
push
insl
aam
test
cld
sbb
call
cmp
xor
or
fisttps
xor
cmp
sub
jp
out
outsl
mov
mov
std
dec
scas
adc
arpl
mov
xor
xchg
jge
sbb
dec
xlat
add
imul
pop
sbb
sahf
jbe
ret
or
sub
cli
test
pop
jb
ds
mov
lock
xor
mov
xchg
jne
or
pop
dec
es
ljmp
mov
adc
cltd
negl
or
sahf
jnp
cmpsl
daa
mov
push
rcrl
jmp
mov
inc
or
cmpsb
xor
push
stos
cmpsb
test
arpl
lock
pop
cmp
dec
popa
jne
jp
jns
cmp
or
movsl
call
pushf
lea
std
xchg
or
jmp
ret
jp
inc
cltd
lret
test
cmp
imul
out
lds
sbb
addl
pop
jne
inc
decb
dec
and
cmp
dec
insb
roll
or
popf
lock
inc
adcb
mov
push
mov
push
hlt
pop
add
neg
mov
cltd
add
out
fwait
xchg
pop
push
repnz
shll
fwait
push
cs
and
jne
dec
repnz
shl
lock
adc
ret
sbb
pop
dec
sbb
les
jge
cs
movsb
add
ljmp
out
mov
pop
cld
sbb
xchg
or
dec
and
loop
cmpsb
xchg
fdivl
jmp
call
adc
mov
outsb
scas
mov
jno
sbb
inc
js
nop
add
repz
movsl
jg
and
ja
or
sbbb
leave
lea
cs
push
test
rorb
mov
inc
jae
leave
and
dec
lock
gs
sbb
dec
xor
sahf
ljmp
pop
sub
insb
fdivrl
mov
sbb
vmulps
mov
push
movsb
xchg
xchg
cli
lahf
dec
lds
pop
jecxz
and
pusha
lods
fwait
mov
or
add
jecxz
test
mov
pop
fadds
push
adc
inc
cs
sti
sbb
pusha
pop
ret
add
push
or
pop
jl
pop
adc
es
test
xchg
lahf
jb
data16
cwtl
test
pop
inc
sbb
push
jmp
rolb
div
sub
enter
repz
xchg
lds
lods
sti
inc
and
cmp
out
mov
xchg
mov
or
mov
push
and
loop
push
ja
add
add
lock
pop
clc
cmp
ja
ja
mov
ds
movsb
xchg
pop
sarl
es
push
xor
and
dec
xor
pop
leave
lret
mov
cs
gs
mov
outsb
loope
jbe
jl
push
xor
cmpb
or
lea
cmpsl
xor
inc
push
out
add
sbb
pusha
jno
and
inc
gs
addr16
add
xor
jne
arpl
aam
in
out
sahf
enter
jno
aad
dec
sub
jns
sub
std
lods
stos
mov
pop
lcall
fldcw
cmpsl
xchg
jge
adc
mov
arpl
bound
inc
inc
dec
adc
stos
sarl
js
ds
cltd
mov
or
mov
vcvttss2si
cwtl
scas
pop
mov
sbb
mov
fldt
or
mov
in
in
fwait
xor
pop
cmp
add
pushf
fmull
mov
ficompl
push
jmp
or
sbb
jns
inc
into
xchg
insb
xchg
jb
or
push
sub
jecxz
pop
mov
sub
int3
insb
cmpsl
fstpt
aaa
jg
movsb
push
push
movb
mov
testl
pop
mov
std
push
sub
aam
mov
sarl
pop
mov
rcll
std
inc
hlt
xchg
adcl
inc
rolb
cmp
cmp
adc
xchg
adc
mov
dec
inc
dec
jl
push
call
rcrb
in
mov
andb
add
add
jne
push
lock
push
sti
mov
pop
stc
out
cmp
mov
sti
jp
insb
dec
dec
imul
xchg
das
fldt
inc
cmpsb
lcall
xchg
mov
or
pmaddwd
xor
jge
push
out
decl
jb
adc
fimuls
xchg
clc
loop
cmp
daa
popa
mov
hlt
sub
xor
adc
test
pop
mov
cmpsb
gs
js
jmp
sti
mov
jmp
imul
data16
es
jge
addr16
movsl
aas
cmp
fwait
xor
outsl
gs
mov
movsl
je
pop
mov
addr16
cltd
mov
pop
pop
scas
fldenv
ds
fisubs
mov
jns
mov
jmp
js
ret
and
outsl
sbb
shlb
and
out
mov
insl
scas
cmp
mov
fisttps
movsbl
pop
sub
mov
mov
xchg
sub
inc
inc
pop
jne
push
in
nop
fimuls
es
test
jecxz
mov
ja
mov
mov
adc
mov
mov
push
imul
adc
mov
mov
and
dec
mov
jnp
outsb
jge
or
test
nop
clc
adc
outsl
out
stos
enter
push
xchg
mov
icebp
jb
int
ss
mull
xchg
or
pop
inc
pop
cs
xchg
stc
mov
xchg
je
add
fcompl
mov
cmpl
repz
pushf
push
iret
xor
xor
cli
outsb
jnp
test
enter
notl
repz
push
sub
dec
or
pop
insl
xor
push
sbb
cmp
ficoms
jnp
test
in
enter
stos
scas
hlt
mov
outsl
mov
mov
jno
test
sbb
jp
sub
push
nop
in
push
mov
popa
mov
xchg
inc
push
cld
sbb
sbb
xchg
push
int
mov
pusha
shlb
movsb
loop
loope
and
cmp
rcrl
arpl
and
fcoml
jb
mov
rcr
sbb
add
mov
jne
fstp
mov
dec
aaa
cmp
pop
sarb
pop
push
sbb
lahf
mov
push
imul
mov
pop
inc
xor
adc
cmp
pmovmskb
cmp
sub
inc
adc
sub
cmpsl
fiadds
outsl
mov
sub
rclb
adc
arpl
push
jb
cld
pop
mov
jl
jmp
inc
sarb
push
movsl
or
sarl
xor
stos
adc
push
jbe
imul
fsubrs
mov
mov
xchg
pop
fbld
mov
mov
subl
cmc
mov
mov
pop
lret
dec
inc
pop
pop
adc
xor
pop
std
jnp
test
rclb
loop
inc
f2xm1
icebp
int3
mov
mov
adc
push
xor
iret
iret
and
lods
sbb
dec
movsb
xchg
add
adc
add
sub
out
pop
js
lret
out
pop
mov
leave
mov
hlt
iret
inc
push
fildl
or
pop
dec
movsl
mov
sbb
add
int
test
mov
jne
add
pop
cs
out
fwait
scas
dec
out
out
lcall
test
mov
jl
jg
mov
or
or
dec
fidivs
mov
fsubl
mov
and
addl
call
and
fcomps
add
add
add
add
adc
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
