mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
int3
inc
inc
test
inc
and
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
xor
add
add
add
call
adc
add
jbe
add
push
add
xor
add
add
add
add
add
mov
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
cwtl
xor
icebp
int
or
fisttps
ret
sbb
adc
int3
xchg
es
xchg
lock
cmp
pop
test
fcoms
jnp
rclb
fsubs
pop
dec
rcrl
mov
dec
lds
push
fdivl
fstpl
mov
push
es
addr16
and
lret
fistps
or
loope
popf
cmc
repnz
xor
mov
les
and
scas
rclb
mov
push
out
push
out
fs
aam
out
cmp
je
orl
xor
add
outsl
mov
ret
daa
imul
imul
sbb
cmp
lds
movsb
movsl
add
scas
or
or
xorl
clc
cmova
daa
sub
in
les
addr16
movb
inc
rorl
push
in
mov
push
mov
ljmp
dec
es
out
lcall
test
add
fwait
ljmp
ret
mov
cmc
lret
fsubl
pop
imul
adc
pop
movsl
xor
xlat
jno
out
in
enter
mov
ljmp
add
cli
fmull
inc
enter
mov
push
mov
loopne
std
and
ficompl
mov
stos
adc
lea
in
repz
push
out
or
cmp
mov
sarb
push
mov
fs
aas
ss
xor
add
loope
sub
mov
ret
jle
stos
out
push
pop
dec
jp
mov
cmp
push
xlat
icebp
or
in
lahf
fcmovnbe
rolb
cld
add
inc
and
mov
jl
mov
aaa
and
jge
inc
mov
jb
mov
insl
mov
cmc
mov
sbb
std
test
adc
enter
repnz
cld
dec
fwait
sub
aam
sub
jge
mov
sbb
pusha
cmp
xorb
push
mov
add
and
addr16
or
sub
.byte
mov
std
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
.byte
inc
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
cwtl
xor
icebp
int
or
fisttps
ret
sbb
adc
int3
xchg
es
xchg
lock
cmp
pop
test
fcoms
jnp
rclb
fsubs
pop
dec
rcrl
mov
dec
lds
push
fdivl
fstpl
mov
push
es
addr16
and
lret
fistps
or
loope
popf
cmc
repnz
xor
mov
les
and
scas
rclb
mov
push
out
push
out
fs
aam
out
cmp
je
orl
xor
add
outsl
mov
ret
daa
imul
imul
sbb
cmp
lds
movsb
movsl
add
scas
or
or
xorl
clc
cmova
daa
sub
in
les
addr16
movb
inc
rorl
push
in
mov
push
mov
ljmp
dec
es
out
lcall
test
add
fwait
ljmp
ret
mov
cmc
lret
fsubl
pop
imul
adc
pop
movsl
xor
xlat
jno
out
in
enter
mov
ljmp
add
cli
fmull
inc
enter
mov
push
mov
loopne
std
and
ficompl
mov
stos
adc
lea
in
repz
push
out
or
cmp
mov
sarb
push
mov
fs
aas
ss
xor
add
loope
sub
mov
ret
jle
stos
out
push
pop
dec
jp
mov
cmp
push
xlat
icebp
or
in
lahf
fcmovnbe
rolb
cld
add
inc
and
mov
jl
mov
aaa
and
jge
inc
mov
jb
mov
insl
mov
cmc
mov
sbb
std
test
adc
enter
repnz
cld
dec
fwait
sub
aam
sub
jge
mov
sbb
pusha
cmp
xorb
push
mov
add
and
addr16
or
sub
and
mov
xor
mov
add
ja
sbb
popf
pop
stos
mull
je
std
push
shll
fldl
arpl
push
mov
fisttpl
popa
in
mov
sbb
cwtl
adc
mov
jne
pop
pushf
add
cltd
jno
adc
enter
insl
mov
in
outsl
dec
pushf
hlt
mov
fwait
es
sub
add
sub
test
in
fyl2x
push
ljmp
call
popa
or
fnsave
addl
les
sub
adc
leave
cmp
cmp
mov
xchg
cmc
ja
ss
rclb
dec
ds
ret
cmp
pop
ljmp
jb
and
sub
mov
dec
imul
xchg
cmc
adc
outsb
push
xchg
sub
into
pusha
pavgw
lock
clc
mov
out
lds
out
sbb
mov
dec
mov
aad
addl
push
cmpsl
sbb
les
xchg
or
pusha
pop
loope
cwtl
push
icebp
pusha
add
in
pop
jp
jb
xor
push
or
add
ficoms
dec
push
inc
sbb
in
xchg
and
pop
jge
test
sub
sbbl
int3
and
pop
lret
imul
adc
pop
mov
repnz
pop
adc
lret
cmpsl
mov
xchg
inc
mov
xor
leave
push
fimuls
xor
jmp
js
fs
push
stos
shrl
daa
in
xor
mov
pop
das
cld
mov
mov
xchg
es
cltd
sbb
mov
jno
xor
cmpsb
std
hlt
leave
lcall
jl
push
stc
add
inc
inc
lret
repnz
add
stos
inc
jb
sahf
sbb
daa
mov
stos
lea
mov
xor
sbb
jl
mov
pop
cmp
shlb
dec
or
xchg
sbb
je
lret
loop
lock
stc
and
addr16
jno
mov
sub
jge
repz
add
js
mov
mov
fdivrs
movsl
mov
clc
aam
lahf
stos
or
in
lods
adc
fs
inc
or
jns
push
jno
stos
push
mov
inc
dec
lcall
mov
aam
popf
add
mov
xor
cli
push
or
xor
icebp
or
aas
mov
and
add
xlat
les
test
cmpsl
movsl
das
scas
nop
inc
or
mov
clc
out
push
cmp
xchg
sub
fsubrl
test
ret
cltd
inc
and
or
add
pop
cmpsl
sarl
dec
dec
mov
popa
shrl
mov
leave
sbb
mov
xor
xchg
ret
xchg
movb
pop
inc
mov
sbb
int
xor
xor
pop
dec
stos
lods
and
mov
mov
in
push
aas
lock
loopne
xchg
mov
sbb
mov
sub
push
dec
xor
int3
xlat
jne
andb
ja
lcall
xchg
push
dec
mov
sbb
jle
sbb
add
ljmp
sbb
push
jmp
pop
jp
mov
ljmp
rolb
sub
add
and
inc
insl
cmpsb
lea
fwait
inc
fs
scas
lock
xor
and
pop
jae
test
popf
pop
sbb
lds
movsl
testb
das
fs
sub
stos
or
movsl
out
movsb
xchg
jo
repnz
outsb
dec
sub
ljmp
dec
aaa
mov
arpl
aas
dec
or
cltd
shrl
scas
sti
jbe
jmp
cmpsl
push
sbb
cs
scas
xlat
dec
pop
jnp
and
gs
push
jb
push
test
push
mov
sub
push
lret
mov
in
push
mov
cltd
mov
mov
inc
push
das
jecxz
adc
outsl
xor
ss
cmpb
psubq
aas
iret
or
dec
fsub
cmp
and
mov
daa
and
iret
push
cmp
aad
jg
mov
push
inc
jle
repnz
fidivrl
jle
test
mov
movsl
inc
aad
or
stc
leave
sbb
inc
and
daa
mov
stos
cmpsl
dec
fs
std
fisubrl
cmpsb
jle
cmp
mov
lret
ljmp
pop
jg
jmp
mov
fistl
and
fisubl
stc
fwait
scas
and
lds
lret
out
movsl
jo
loopne
iret
sarl
ret
add
bound
ds
dec
aam
rcrl
xor
add
mov
mov
xchg
std
and
xchg
es
pop
ds
jp
add
mov
xor
push
and
sub
cmpsb
scas
mov
push
repz
fdivrs
or
jns
or
imul
lock
rcr
sbb
xchg
arpl
sub
and
sti
cli
shll
insl
decb
mov
in
loop
and
or
je
dec
fadd
ds
ffree
int
fbld
popa
sbb
movsb
push
inc
jecxz
lret
std
mov
je
add
insb
pop
ja
movsb
popa
pop
lds
sub
outsl
test
push
jb
mov
dec
subl
js
push
dec
sub
dec
sti
faddp
test
mov
jmp
push
mov
inc
lcall
cmc
pop
dec
push
pop
negb
sarb
adc
lods
adc
or
xchg
divps
stc
and
pop
testl
xchg
xchg
mov
or
stos
icebp
mov
mov
fcmovb
fsts
pop
shlb
add
mov
pop
sbb
lea
adc
sub
pop
out
sahf
cmp
ss
xchg
dec
xor
adc
or
sahf
cmp
jno
or
dec
addr16
sub
or
xchg
cmp
sub
mov
sbbb
mov
cmp
pop
test
inc
xchg
bound
jmp
push
jb
cmp
dec
pushf
mov
jg
cmpsl
shrb
fstpl
imul
push
into
jnp
repz
xchg
or
and
movsb
xchg
inc
stos
mov
mov
dec
adc
icebp
mov
xor
iret
add
xor
aaa
or
fdivrs
bsr
pop
pop
jbe
popf
xchg
push
or
push
decl
test
or
inc
fs
stc
mov
fcompl
jae
dec
arpl
or
xchg
add
or
or
xchg
adc
lcall
cmpsb
shlb
dec
into
mov
mov
mov
lcall
out
push
fnstsw
jne
add
jl
mov
xchg
ret
and
sub
dec
mov
shlb
push
jbe
jp
ss
inc
mov
loop
insb
stos
imul
push
jno
mov
repnz
mov
push
js
into
cmpsl
adc
mov
xchg
sbb
sub
cld
lods
pop
scas
mov
lahf
add
leave
jp
pop
adc
iret
int
pop
mov
es
scas
jbe
int
int3
adc
ret
xchg
xchg
inc
and
cmp
cmc
mov
iret
add
cmpsb
lret
sub
cld
test
and
adc
js
test
dec
shlb
mov
push
popf
imul
xchg
inc
cli
bound
imul
test
push
adc
push
adc
testb
xor
imul
mov
jne
lea
sub
sbb
lods
in
push
xchg
pop
sbb
cmp
inc
mov
subl
sub
loope,pn
fwait
inc
xchg
and
or
hlt
inc
dec
leave
sub
test
addr16
cmp
insb
mov
mov
je
lcall
and
into
lock
ljmp
call
outsl
insb
xchg
int3
cmpsl
pop
cmp
push
sub
dec
add
shrl
and
arpl
inc
rcrb
xlat
cmc
mov
mov
pop
mov
xchg
gs
adc
cld
popf
loopne
daa
sub
jge
jnp
mov
orl
sbb
dec
lret
xor
scas
or
sub
mov
adc
sub
inc
mov
adc
mov
movsb
sbb
or
jp
add
xor
jmp
jle
sub
rcrb
pusha
js
cmpsl
push
aad
mov
rcr
in
and
xor
icebp
lods
lret
insl
hlt
sbb
xchg
cli
pop
xor
in
xor
pop
in
aas
stos
push
sub
cmp
pop
pop
add
xchg
jl
js
nop
cmp
sbb
jo
lcall
lahf
jo
adc
push
inc
push
jo
clc
adc
sub
int
push
movsl
pop
mov
inc
xchg
sub
addl
test
add
arpl
push
lock
in
scas
scas
pop
sti
xchg
xchg
xchg
jge,pt
fmuls
int
jp
mov
dec
dec
mov
mov
cmp
lock
push
mov
and
adc
push
or
shlb
mov
xor
mov
jge
and
push
jb
insl
pop
cmp
push
and
enter
push
insl
add
jg
stos
in
and
outsb
pushf
pop
dec
lahf
stos
jnp
cli
adc
cmpsb
push
lods
or
mov
mov
pusha
fimuls
in
fildll
mov
push
insb
dec
pop
cmp
cmp
insb
pop
or
test
fsubl
out
mov
or
pop
test
mov
sub
adc
pop
cld
push
xchg
repz
clc
fs
cmp
imul
stos
movsl
cmp
sub
nop
or
jno
xor
mov
inc
mov
loopne
lahf
mov
outsl
insb
scas
mov
mov
imul
nop
mov
mov
out
ds
sbb
mov
dec
test
leave
ljmp
loop
push
xor
jns
ljmp
adc
xor
cmp
ja
mov
push
xchg
icebp
sub
sub
adc
push
jmp
pop
fwait
push
pop
sub
push
movsb
and
cmc
jge
je
cwtl
push
movsl
mov
imul
cmpsl
adc
or
lret
jge
or
push
lcall
scas
fwait
pushf
data16
aad
add
aaa
and
les
xchg
cmp
into
jg
mov
adc
outsb
jno
jo
aas
mov
pop
xor
xchg
mov
mov
jae
sub
in
pusha
mov
xchg
cmp
cmp
mov
cmovo
mov
repz
notl
xchg
dec
xor
imul
fldln2
cmpsb
nop
int3
outsb
sub
fmuls
push
ss
int3
loopne
testl
rcrb
jbe
mov
outsl
loop
adc
aad
mov
jmp
sub
ljmp
cmp
jge
push
jle
sub
stos
xor
cwtl
iret
cwtl
arpl
loopne
js
movsb
dec
fsub
icebp
dec
cmp
mov
dec
sahf
aam
je
rorl
add
mov
movhlps
pop
lock
adc
scas
and
sub
in
mov
data16
imul
inc
scas
lcall
lcall
insl
inc
mov
xor
mov
adc
mull
shr
mov
jle
mov
jns
xchg
add
sub
xor
out
bnd
cld
push
and
and
mov
dec
shlb
dec
lcall
shl
sarb
cmp
enter
cwtl
jecxz
xor
jge
sub
or
imul
cld
lcall
scas
fdivs
pop
fldl2e
outsb
push
jp
adc
popf
or
aaa
inc
sub
push
ljmp
sbb
jno
ret
mull
xor
push
lcall
xor
data16
mov
rorl
sbb
jge
pop
pop
mov
add
push
in
out
mov
stos
pop
gs
test
lret
push
addl
pop
sub
inc
imul
mov
and
push
sti
mov
mov
mov
and
and
jl
inc
imul
out
scas
out
cwtl
and
xchg
std
ss
fmull
mov
fcomi
fmulp
cld
push
outsl
enter
mov
loopne
ror
and
bound
mov
inc
mov
imulb
xlat
adc
sbb
fisttpll
outsl
cwtl
dec
adc
imul
dec
imul
xchg
mov
jb
xchg
lret
xchg
jno
mov
lock
mov
out
loope
shrb
xor
scas
pop
pop
pop
fstl
xchg
in
mov
xor
mov
rcrb
push
aad
lods
sbb
mov
pop
test
mov
imul
out
in
loope
fidivs
add
andl
xor
and
std
sahf
sub
cwtl
cmpsb
pop
mov
xor
xorb
shll
js
popf
sub
lea
mov
loope
mov
nop
lock
dec
xor
push
dec
notl
sbb
add
mov
cmp
stc
dec
fwait
std
pop
cmpsb
pop
sbb
arpl
cmc
sub
or
subb
jbe
or
gs
fs
aam
xchg
loope
mov
jp
fcomps
test
add
outsl
cli
sbb
xchg
icebp
push
dec
pop
or
into
sbb
push
test
pop
sbb
inc
outsb
lret
test
out
shrb
jae
clc
stos
aaa
bound
cmp
or
fadd
or
adc
sub
xor
fdivrs
aam
orl
xor
jb
push
rcr
pop
repnz
jl
xchg
cltd
mov
mov
mov
sbb
fldl
pop
push
push
sub
mov
xchg
fidivrl
es
cmp
sub
das
lea
loopne
mov
nop
fistps
xchg
lods
push
jno
mov
lea
add
jg
add
mov
xor
mov
push
fsubs
add
add
cmp
sbb
pop
cltd
pop
xchg
cmc
cmpsb
mov
loopne,pn
pop
cmp
js
icebp
pop
scas
push
loopne
inc
mov
jae
popa
popa
test
les
xchg
xchg
in
xor
cmc
or
mov
loop
mov
fucomp
sbb
gs
xor
ja
mov
push
or
jge
push
mov
mov
mov
xor
mov
int3
jmp
cltd
mov
xor
repnz
shlb
cmp
repz
push
jne
arpl
sti
and
jecxz
sbb
inc
jg
xor
xchg
pop
cmp
cmp
int
movsl
and
xor
test
pop
adc
leave
lds
aam
js
pusha
lcall
dec
cs
shlb
adc
imul
out
jno
sub
add
inc
out
sbb
dec
sti
mov
das
cmpsl
adc
std
sub
pop
xchg
lods
sbb
push
andl
sbb
stc
test
fistpll
movl
pusha
in
adc
loopne
imul
sahf
jl
sbbl
push
cmpsb
cmp
push
mov
bound
mov
in
inc
into
mov
fwait
movsl
sub
out
mov
stos
jmp
cmp
lahf
cmp
outsb
or
pop
rcrl
fcos
js
jge
pop
xor
shlb
movl
int
fwait
cmpsl
adc
mov
outsl
mov
les
mov
fisttpl
push
mov
dec
dec
push
aad
rolb
loop
add
or
jae
in
mov
in
pusha
inc
imulb
cmp
mov
mov
loop
out
mov
jae
sbb
es
lret
ja
icebp
xchg
out
pushf
subl
rcll
inc
mov
push
push
sbb
nop
lcall
sub
popa
push
outsb
rcrl
daa
sbb
mov
test
pusha
push
or
jbe
mov
sub
add
nop
xchg
mov
fldl
mov
jp
mov
aad
xor
xchg
call
fadd
imul
sub
mov
loopne
jo
push
out
and
fnstenv
xchg
fsubl
inc
aam
frstor
inc
nop
fldenv
popf
sub
sbb
orl
lock
flds
jb
adc
leave
jno
fildl
sarb
xlat
mov
fsubrs
pop
cmp
bound
loop
sub
aaa
add
ret
adc
gs
fistpl
rorb
pop
test
out
scas
daa
pushf
pop
mov
lods
cli
cmpsb
xchg
out
clc
cmc
adc
dec
jae
sub
clc
cmp
outsl
fs
frstor
lahf
mov
pop
xchg
and
fdivrs
fwait
mov
insb
fdivl
ljmp
dec
xor
jb
rcrl
pusha
fs
cmp
outsb
int3
push
aas
aad
adc
dec
add
popa
cmp
ret
mov
lds
ds
xchg
sbb
out
cs
insl
pop
and
push
add
pop
mov
cmp
psubusb
nop
push
push
loope
movsb
pop
xchg
xchg
rorb
inc
or
mov
fs
push
mov
test
adc
imul
std
dec
adc
pop
mov
testl
jl
pop
inc
flds
pop
loopne
ficomps
push
mov
and
push
cmpsb
sub
cwtl
cmp
loope
xor
inc
pop
test
xor
decl
adc
or
scas
and
xor
jae
je
mov
mov
xchg
pop
mov
cmpsl
icebp
imul
stos
or
or
fldl
sahf
in
imul
imull
inc
lahf
push
rcll
test
xor
push
cmp
fdivs
mov
nopl
sbb
js
inc
leave
adc
in
mov
loope
repnz
sub
stos
lods
inc
sbb
pushf
das
stos
cs
in
jb
add
jl
movl
mov
mov
push
cmp
pop
lret
and
hlt
popa
test
in
shl
leave
dec
jae
lahf
pop
mov
xor
flds
fstl
jp
mov
mov
out
cmpsb
shll
fs
mov
hlt
pop
sbb
xor
mov
jns
dec
xor
mov
movsl
pop
inc
push
add
push
cld
sub
test
test
jge
xlat
push
xchg
repnz
imul
test
jg
enter
xchg
movsb
cmp
xchg
les
xor
xchg
in
shl
xchg
pop
in
sub
sbb
inc
inc
jecxz
add
push
mov
or
aaa
pop
inc
jne
pushf
sahf
xchg
movsb
jae
fistl
cmpsb
xor
jge
add
add
mov
mov
popa
adc
sahf
mov
xchg
ficoms
xchg
popf
fucomp
enter
mov
sbb
ljmp
xchg
enter
jo
pushf
jl
pop
push
frndint
mov
push
cmp
sbb
jae
sbb
jg
jo
das
vpavgb
cmpsb
loopne
inc
jns
data16
inc
mov
xchg
jno
mov
cmp
mov
fimuls
or
jnp
repz
fisubrl
sbb
xchg
stos
xchg
mov
aam
lret
into
loop
fildl
or
mov
ret
addr16
pop
lods
add
bound
push
es
adc
and
stos
xor
push
nop
in
out
mov
gs
int
test
pop
inc
cs
out
pop
fyl2xp1
xchg
xchg
sub
sbb
pop
test
into
push
adc
das
push
sub
imul
cmpsl
jno
xchg
imul
push
sahf
ret
insl
into
or
loopne
jmp
ljmp
xor
repnz
jmp
mov
jns
fs
mov
mov
xchg
jo
enter
push
jmp
loope
shrl
mov
je
adc
fsubrl
in
cmp
aad
fs
fildl
push
ret
xor
leave
lock
test
out
mov
mov
push
loope
ljmp
sti
bound
imul
in
xchg
cltd
fldl
lods
pop
xchg
jae
cwtl
xor
inc
ret
adc
lods
in
in
and
add
ja
push
jno
or
sub
mov
cwtl
aaa
lretw
out
xor
arpl
or
fadds
int
mov
aam
or
inc
xchg
mov
cmp
neg
mov
pop
sbbb
sbb
push
cmp
adc
mov
or
dec
push
dec
insb
repz
scas
inc
sti
shlb
cmp
mov
cs
mov
andb
pop
xchg
or
adc
mov
sbb
mov
shlb
jnp
sub
lahf
arpl
xlat
inc
dec
jp
fisubrl
cmc
xor
mov
pop
iret
push
mov
dec
mov
es
cmp
icebp
inc
pop
flds
push
nop
and
repz
add
add
jbe
lret
test
stc
adc
xchg
or
subl
mov
jno
test
int
sbb
mov
jle
rcll
jnp
pop
and
jns
nop
dec
leave
popf
add
adc
movsl
rol
sbb
or
enter
add
dec
sbb
mov
iret
xchg
pushf
pop
push
out
pusha
mov
imulb
call
into
dec
xchg
and
lods
or
mov
test
lock
add
hlt
adc
cs
lods
mov
xchg
out
sub
loopne
insb
pop
mov
mov
mov
jne
add
jp
cmp
jnp
add
pop
xor
sbbl
jo
pushf
ret
inc
lahf
xor
fmuls
mov
xor
xor
pop
sub
fwait
jns
dec
in
lret
or
out
je
jne
mov
dec
ret
lret
or
cld
fisubrs
mov
jae
test
jl
loop
or
scas
nop
int
add
dec
lret
shl
out
push
push
push
sub
xor
out
cmpl
cli
sub
push
repz
stc
fisttpl
xchg
mov
pop
dec
push
or
push
imul
mov
lock
addr16
mov
in
sub
jns
aaa
or
and
xor
push
jb
dec
mov
mov
loop
cmp
inc
mov
pop
insl
mov
xor
mov
arpl
mov
fists
jbe
bound
mov
cmp
pop
adc
sbb
mov
in
out
inc
mov
adc
fbstp
mov
jl
lock
fiadds
inc
iret
cli
xchg
add
frstor
pushf
gs
arpl
inc
xchg
leave
xor
fcomi
bnd
jbe
cmp
imulb
popf
cmpsl
push
pop
ret
out
jbe
adc
scas
scas
pushf
inc
mov
add
lods
and
mov
pop
add
inc
push
lret
sbb
xor
jp
ja
cmp
inc
icebp
cmpsl
and
and
cmpsl
adc
and
in
aad
add
repz
sub
adc
aas
jge
dec
jb
jno
sub
pop
rorl
jbe
xor
lods
lcall
sub
aad
cli
inc
jo
and
pop
jnp
or
and
loope
jae
in
mov
add
jae
and
sarb
aas
and
ds
rcrb
out
push
mov
push
icebp
iret
cmp
pusha
call
and
pushf
notl
shl
inc
dec
pop
ret
imul
shll
sub
and
cmp
ljmp
mov
hlt
dec
stos
pop
cwtl
int
adc
dec
lods
push
jnp
rcr
xor
xlat
push
xor
jmp
xchg
xchg
aaa
aam
lahf
or
js
aam
xor
daa
fimuls
cltd
fisubl
cmp
inc
mov
popa
int3
test
testl
test
xlat
inc
sti
adc
mov
sbb
sahf
cmp
cmp
mov
scas
xchg
mov
daa
mov
jno
js
sbb
cmp
push
sub
sub
jno
or
in
pop
mov
in
jl
or
movsb
or
xchg
inc
mov
adc
jmp
std
cmp
movsb
sub
sti
xor
xchg
and
or
sub
std
inc
ficomps
icebp
ret
ret
mov
and
int3
sub
jno
rolb
ds
cmp
inc
imul
jle
mov
in
pushf
pop
pusha
in
or
jmp
ljmp
sahf
mov
loopne
push
jns
push
je
lret
jae
nop
repnz
pushf
rcrb
xor
inc
xor
dec
shlb
faddl
mov
fists
push
push
ret
inc
add
dec
std
mov
scas
push
mov
daa
xchg
out
insb
sub
dec
bound
cmp
mov
adc
jle
xchg
gs
xchg
xchg
dec
sbb
popa
or
mov
movsl
mov
cmp
shlb
pop
inc
jnp
lcall
pop
mov
or
fisubrl
loope
xchg
jbe
cltd
pop
sbb
push
sub
stos
ret
rorl
outsb
daa
stos
scas
mov
into
and
stc
pop
fdivrs
pop
or
leave
dec
cli
loop
inc
push
iret
mov
add
lods
cmp
test
sahf
test
sbb
pop
fdivrl
pop
add
adc
arpl
push
push
and
and
daa
xchg
jmp
int
into
lea
loopne
sbb
mov
nop
int
cmp
roll
cmp
mov
imul
enter
add
shlb
das
mov
rcll
fists
stos
pop
or
inc
jne
std
shrl
fwait
sbb
sti
xchg
rorl
ja
mov
movsl
lods
pop
arpl
out
dec
mov
or
jns
jmp
push
and
adc
cs
scas
or
pop
arpl
sti
arpl
push
push
mov
jns
fprem
jg
adc
xor
aaa
jg
dec
sbb
std
inc
xchg
gs
and
push
xorb
or
inc
jl
xchg
or
push
cmp
insl
aam
sbb
adc
fdiv
and
xchg
sub
les
lret
sbb
adc
adc
mov
push
mov
daa
ja
cs
xor
ret
inc
gs
xchg
xchg
push
fists
jno
mov
pop
lods
jbe
jg
mov
iret
mov
inc
pop
nop
repnz
mov
mov
icebp
dec
rcll
jnp
sbb
cltd
inc
cmp
or
pop
xlat
gs
subl
popa
inc
pop
jle
sbb
xor
xlat
in
lock
out
stos
mov
es
xchg
sub
mov
in
lock
inc
in
cmpsb
adc
pop
pop
push
push
subl
mov
sub
pop
nop
mov
rcr
test
insl
or
out
addb
shll
das
or
jmp
shrb
add
xchg
cmp
mov
adc
ja
ret
fwait
push
gs
sbb
mov
mov
out
gs
jnp
push
or
mov
repnz
stc
cltd
test
inc
mov
add
dec
adc
add
and
xchg
xor
repnz
in
xchg
and
cmc
xchg
cmpsb
or
sbb
push
in
dec
pop
dec
leave
push
loope
add
je
inc
loop
das
call
movsb
pop
jb
dec
xor
inc
jnp
cmp
mov
mov
xor
repz
and
cmp
jg
xor
jecxz
das
fistpl
cmp
data16
les
xchg
scas
xchg
shrl
pop
mov
mov
ljmp
push
cli
lock
sub
test
sahf
in
fadds
aas
adc
xor
imul
adc
mov
inc
dec
ds
out
repz
jp
decb
test
inc
push
and
xchg
std
cmpsb
cmp
dec
mov
iret
inc
pop
and
mov
out
insb
clc
or
push
push
dec
outsl
negb
ret
test
push
loopne
sub
mov
dec
aaa
mov
inc
repnz
lds
rol
push
mov
dec
idiv
pop
fsubrl
xchg
stos
or
scas
xchg
test
cmp
dec
mov
jmp
mov
add
cmpsl
cmp
and
lods
test
jne
jmp
xchg
dec
out
pop
dec
or
fwait
mov
test
mov
sbb
mov
push
jns
out
cmp
cli
push
ret
in
icebp
add
dec
lcall
push
cmp
xchg
mov
iret
pusha
xor
and
jp
outsb
mov
sub
pop
popf
shlb
sub
js
adcl
aaa
cltd
add
xor
outsl
iret
outsb
mov
xchg
roll
jns
xchg
imul
inc
mov
das
mov
or
rcr
ficoml
negb
push
jle
subb
in
and
adc
dec
pop
mov
int3
adc
xor
jmp
shll
negb
pop
sub
inc
push
ja
out
sub
add
dec
faddp
aam
pop
cli
jnp
push
fiadds
ds
scas
push
outsb
fstpl
sub
dec
sahf
push
push
icebp
call
inc
popf
and
cmp
mov
aad
movsb
fnclex
nop
ds
sti
popa
out
call
dec
mov
testl
xor
mov
pop
jecxz
stc
iret
pusha
cli
addb
sub
rcll
push
stc
call
js
add
insb
bound
dec
lds
pop
dec
ret
pop
pop
lcall
push
into
nop
int
mov
lcall
sub
mov
dec
push
mov
pop
lcall
push
fldcw
enter
scas
add
das
cwtl
sbb
ss
xchg
lret
jne
pop
rcll
and
pop
push
jne
inc
xor
mov
clc
jp
mov
xor
loop
nop
push
xor
fildl
shlb
bound
sbb
lock
pusha
add
and
xchg
inc
fcomps
pop
mov
ret
adc
divb
xor
xchg
sub
jnp
jmp
dec
cmp
popf
dec
gs
sbb
sbb
cmpsl
xor
inc
test
jne
dec
outsl
pop
je
je
cmp
and
push
mov
xchg
fimull
or
lock
iret
inc
outsl
ljmp
cmp
shr
repnz
stos
push
jbe
pop
loop
mov
jp
das
or
lret
inc
leave
jb
ds
cmp
mov
xchg
lods
scas
shr
pop
push
pop
stos
push
jbe
test
push
movsb
lea
jmp
js
mov
aas
js
and
inc
rcrb
push
dec
fnsave
loop
sub
outsl
movsb
sub
outsl
lahf
xor
rol
cmp
add
mov
xor
aaa
mov
shll
aaa
push
movzwl
shl
pop
aaa
cmpsb
loope
push
int
popf
daa
push
fistl
mov
mov
clc
or
xor
sub
mov
add
xor
jg
sbb
ja
push
push
pop
mov
xor
pop
xor
inc
popa
outsl
or
mov
bound
clc
and
test
ja
fwait
mov
fs
xchg
addr16
cmp
test
iret
push
inc
in
pop
lea
arpl
scas
push
and
mov
popf
pushf
outsl
push
xor
lods
sub
inc
push
jae
mov
mov
fwait
and
mov
lds
mov
in
cmp
call
out
sbb
lahf
bound
rcr
jo
mov
push
push
or
jo
notl
orb
cwtl
rol
xchg
enter
aaa
imul
repz
cld
mov
dec
adc
sarl
xor
in
adc
mov
mov
xorl
aam
aam
insl
mov
cld
cmp
pusha
out
sbb
out
lods
pop
ljmp
movsb
dec
daa
inc
cmp
stos
sti
xchg
fwait
addr16
add
lods
push
ss
sbb
pop
adc
lock
fstps
inc
scas
into
repz
loopne
add
imul
ds
repnz
aad
or
pushf
addl
jo
sarl
mov
mov
je
pop
lret
cmpsb
inc
orl
dec
add
je
or
jle
rep
fcomps
add
movsb
aam
push
int
mov
mov
mov
and
mov
cmp
aam
ret
cltd
mov
mov
pop
adc
pop
sub
mov
sti
mov
pop
fdivl
xor
and
std
outsb
mov
sti
xor
pop
xor
cmp
cmp
add
mov
jnp
ret
fwait
insb
sti
mov
jecxz
jae
mov
xor
pop
iret
cltd
cmp
mov
push
fcmove
add
hlt
sub
in
pop
pop
cmp
ficomps
lret
mov
inc
adc
ds
in
dec
sbb
clc
and
sti
push
lahf
enter
pop
movsb
and
adc
dec
out
adc
int
lahf
push
stos
mov
mov
or
mov
xchg
jne
pop
into
js
add
fistpl
and
and
sbb
test
lds
xchg
call
push
mov
aaa
sbb
outsb
dec
mov
xor
les
rolb
jae
push
sbb
adcl
cmpsb
int3
mov
mov
xcrypt-cbc
cmpsl
adc
sub
bound
lock
int
adc
loopne
add
push
cmp
les
push
out
gs
cmp
into
lret
mov
jne
arpl
dec
push
push
lea
mov
pop
mov
fdiv
fs
stc
inc
sbb
dec
push
xchg
sub
cltd
repnz
xchg
fisttpl
inc
mov
mov
imul
arpl
mov
insb
dec
xchg
clc
adc
icebp
mov
int3
sbb
dec
fiaddl
sbb
cld
daa
lds
mov
into
jg
ja
int
frstor
cmp
jbe
mov
lcall
repnz
jbe
mov
stos
xor
lahf
inc
aad
stos
push
pop
fdivrl
mov
lea
dec
jp
mov
outsb
pop
pop
push
or
sbb
mov
pusha
fldt
mov
mov
inc
aas
aad
push
pop
adc
arpl
xlat
in
test
sub
or
add
pop
std
call
movsl
popf
ja
adc
mov
sub
or
mov
mov
push
mov
test
int
test
es
ss
inc
mov
pxor
xchg
subb
shrl
mov
jo
loope
sbb
std
pop
xchg
sbb
pop
xor
mov
mov
pusha
shlb
cmc
jge
bnd
dec
cs
leave
mov
dec
push
dec
xor
adc
cmp
push
jle
sub
ret
lea
imul
mull
loop
pop
jns
xlat
int
ss
shrl
cwtl
std
dec
ss
out
ret
popf
mov
or
insb
or
aam
ret
stc
push
inc
fwait
cmp
cmc
fistpll
stc
mov
cmc
sbb
test
lret
mov
jge
mov
fisttps
mov
out
je
test
and
jp
pop
mov
mov
ds
cmp
mov
adc
jecxz
cs
lret
cltd
jbe
xor
add
and
rcrl
push
push
out
cmp
out
xchg
mov
sub
lahf
fisubrs
imul
inc
fbld
push
sub
lret
add
sbb
and
push
sub
popa
popf
es
or
lock
sub
mov
sbb
ror
adc
adc
mov
adc
dec
jmp
sbb
jg
int
mov
fs
xchg
mov
lret
in
adcb
jl
movl
shl
sub
in
mov
jnp
mov
pushf
sub
push
xchg
sbb
pop
or
ret
xchg
leave
or
push
scas
out
pop
mov
dec
aas
rcrl
adc
data16
mov
mov
rcll
fisubrs
xchg
pop
jecxz
daa
in
mov
outsl
out
mov
fsubrl
jae
imul
les
push
jo
mov
pop
pop
int
mov
notl
fisttpl
fcoms
dec
cmp
cmp
and
aam
addr16
in
sub
pop
sbb
cli
pop
in
dec
or
mov
lret
test
orb
sub
dec
scas
pop
out
xor
inc
das
and
dec
xchg
int3
add
jmp
ret
in
jp
sahf
outsb
pusha
sti
sbb
jge
xchg
cmp
out
pop
cmpsb
jb
out
xor
sub
and
sub
jecxz
xrelease
inc
test
push
pushf
jae
fildl
or
aam
xlat
or
push
fbld
push
sahf
pop
hlt
add
sbb
sub
cmp
push
add
outsl
popa
jle
adc
lds
dec
pop
xchg
loop
mov
popa
mov
and
das
jno
clc
or
cmp
jg
inc
mov
cli
sub
jo
idivb
xlat
ret
notb
mov
mov
testb
loop
push
clc
iret
roll
in
add
popf
dec
test
gs
pop
xchg
mov
mov
jne
push
mov
or
lret
fsubl
sbb
cmp
aam
cmp
loopne
sarl
sub
pusha
repz
mov
cmpsb
mov
lock
outsb
inc
or
roll
out
mov
jp
int3
ja
dec
dec
mov
shlb
sbb
addb
mov
cmp
jno
add
jmp
inc
dec
xchg
pop
sbbl
outsb
xchg
or
and
jmp
dec
fildl
cmpsb
iret
and
mov
enter
scas
dec
xor
stos
mov
lods
push
sbb
jo
mov
push
dec
mov
xlat
stos
mov
mov
mov
in
mov
mov
adc
sbb
dec
xor
pop
xlat
pop
int
je
mov
shrb
and
pusha
stc
xor
shl
xor
cli
inc
add
fcmovbe
out
lods
pusha
popf
das
popf
mov
insb
sahf
fwait
sub
lods
pop
subl
scas
and
cwtl
je
adc
inc
incl
sbb
xchg
shlb
adc
outsl
pop
cmpsb
repnz
mov
clc
xchg
jae
or
sarb
adc
add
add
xchg
push
data16
in
cmpsb
paddsw
aam
xchg
jno
pop
sub
cmp
pop
out
shl
jecxz
pop
cmpsl
test
shlb
jmp
fs
jbe
dec
push
popa
fs
mov
in
fiadds
test
lret
push
cmp
clc
mov
jne
lahf
adc
lods
add
cmp
add
scas
into
adc
addl
xchg
and
test
ffreep
dec
test
cmp
and
dec
mov
leave
jmp
inc
cmp
push
jae
inc
lcall
fbstp
cmp
daa
dec
push
mov
loope
sub
push
int3
movsb
cltd
popf
sub
lret
dec
cmp
rcll
std
call
pop
into
fwait
aas
pusha
jp
cs
pop
ret
xor
das
ja
or
fadds
test
fld
mov
jle
cmp
xchg
mov
mov
sub
adc
cmc
iret
movsl
xlat
movsl
ss
jmp
push
push
lahf
loope
imul
or
ljmp
repnz
mov
shl
stos
out
out
ljmp
decl
mov
ja
clc
and
push
push
iret
push
ljmp
mov
loop
adc
push
scas
sbb
or
xchg
daa
lds
add
cltd
fldcw
cmc
movsb
std
pop
rclb
push
mov
into
loopne
mov
andb
adc
aas
lea
ljmp
nop
pop
xor
jl
cmc
and
lea
sub
adc
dec
adc
outsb
movsl
sub
xorb
or
rorb
fcmovbe
aam
or
fsubs
jae
fadds
fiadds
sub
inc
mov
std
lods
mov
pop
jl
jno
outsb
or
xchg
push
jecxz
mov
bndstx
push
cmp
xchg
hlt
cmp
dec
popf
lods
enter
test
subl
mov
stos
mov
jnp
loop
mov
dec
mov
lds
jecxz
movsl
cmp
push
into
aam
stos
mov
adc
push
lcall
roll
mov
lods
adc
sbb
dec
push
and
mov
imul
sbb
xor
shlb
fsubl
push
mov
fsubs
fidivl
popa
dec
nop
imul
jns
stc
cmpl
sbb
jg
pop
mov
movsb
loopne
and
and
sahf
insb
in
inc
xor
popf
shll
mov
mov
sub
cmp
adc
mov
aas
dec
jle
add
sbb
sub
and
sbb
or
xchg
mov
sahf
js
mov
cmp
cmp
lock
rol
aaa
adcb
imul
push
cli
inc
sarb
clc
insl
or
or
data16
cmp
or
sbb
dec
sub
and
inc
mov
mov
xor
mov
fldl
push
push
cmp
test
lcall
xor
cmp
mov
movl
jl
mov
dec
mov
inc
ss
push
sbb
mov
sbbl
push
cmp
mov
shll
nop
cmp
icebp
adc
jp
popa
in
jle
mov
mov
cmp
rol
sub
sti
test
inc
vucomisd
mov
testl
jmp
mov
addl
fadds
mov
out
sub
cmp
ljmp
gs
mov
jge
inc
stos
daa
scas
leave
push
fnsave
lds
or
sbb
das
cwtl
mov
add
ja
mov
or
sbbb
orb
cld
push
lods
test
and
sbb
xlat
or
shll
mov
cmp
movsb
lret
push
push
enter
xor
mov
cld
push
je
sbb
jl
jnp
jo
jle
jl
mov
dec
shlb
push
imul
out
pop
imul
cli
cmp
sub
and
jno
lds
jne
outsl
jnp
scas
or
inc
pushf
sub
sbb
fwait
cmp
or
imul
push
int
fcmovnb
inc
mov
daa
sbb
scas
fistl
out
shlb
add
xchg
xlat
arpl
jns
push
test
mov
mov
or
mov
and
jae
test
enter
ja
popa
push
out
push
mov
loope
fs
ror
mov
pushw
int3
icebp
push
xchg
xchg
shrb
inc
rclb
sub
mov
cmp
jns
jge
sbb
push
lret
cltd
fnstenv
sti
mov
ja
sbb
popa
sub
or
push
cwtl
sarb
push
fcmovnu
stc
push
in
dec
js
or
dec
xor
jmp
lock
cmp
jl
lds
push
pop
ffreep
mov
jl
lret
inc
and
mov
pushf
enter
dec
lret
jbe
cli
das
xor
cmp
inc
push
mov
addr16
jecxz
push
or
in
mov
xor
fstl
in
sbb
sub
daa
sahf
test
imul
sbb
push
fistpll
rorb
rcl
addb
jns
leave
jl
xor
sbb
data16
aad
cmpb
clc
sbb
orb
into
mov
pop
ss
xlat
mov
adc
andb
lods
ficomps
roll
mov
or
lock
xchg
jnp
mov
inc
jnp
jae
pop
out
jb
add
jnp
rep
ret
jno
adc
inc
xlat
sbb
sbb
cmpsb
push
ret
xchg
sbb
xor
xor
jb
inc
sub
out
movsl
jg
test
cltd
test
and
mov
pop
or
add
ja
lods
adc
int3
std
arpl
adc
push
sbb
xchg
dec
push
sbb
clc
xchg
test
cmpl
ret
jo
mov
ss
or
adc
daa
jge
insl
jo
mov
jbe
add
push
mov
js
push
ds
mov
xor
stc
call
mov
jmp
mov
inc
push
test
jbe
fsubr
add
pop
mov
jmp
jmp
dec
jns
repz
push
les
loope
xor
push
sub
push
sbb
arpl
hlt
mov
add
mov
data16
push
lret
push
sbb
xchg
lcall
add
mov
pop
icebp
jp
pop
add
movb
inc
ds
sub
dec
add
ret
sub
test
adc
cli
xchg
jno
dec
stos
roll
sbb
loopne
sub
push
adc
mov
pushf
or
aad
pop
sbb
std
imul
call
mov
jmp
js
dec
adc
mov
ja
dec
dec
rolb
xlat
pushf
jecxz
daa
daa
sub
pop
push
sbb
leave
dec
daa
rclb
jle
lcall
out
sahf
ja
and
push
dec
fistpl
inc
ss
icebp
dec
push
pop
icebp
xchg
addr16
out
ror
adc
xor
in
xor
sub
fldl
mov
iret
sbb
enter
shlb
sub
cmpsl
and
push
inc
jle
or
cmp
addl
add
cld
pushf
out
fidivrs
hlt
mov
pop
cmp
jo
mov
push
repz
pop
nop
orb
dec
cmpsb
push
lods
lcall
loopne
jg
out
and
jecxz
jb
roll
push
insb
adc
push
in
insb
repz
repnz
loope
lret
xchg
cmpsw
pop
repnz
dec
repnz
fstl
pop
inc
add
push
xchg
pop
sub
dec
lds
into
loop
push
xchg
dec
pop
sub
ret
or
xchg
push
dec
push
and
mov
sti
and
pop
rcr
loop
mov
lret
add
mov
call
adc
jmp
pop
test
cmp
pop
adc
out
xchg
paddq
push
push
jp
je
lods
cmp
push
ja
inc
push
aam
sbb
xlat
sti
movsb
shlb
js
dec
pusha
setns
cld
push
cmpsl
enter
lahf
push
or
adc
add
dec
mulb
dec
iret
xlat
imul
inc
lahf
sub
adc
subl
dec
test
and
inc
dec
xchg
fisttps
push
cmpsl
or
adc
stos
add
aas
xchg
bound
test
mov
fsts
adc
das
out
das
jecxz
xor
mov
cmp
pusha
pop
push
xor
shl
sbb
inc
jg
in
sbb
divb
mov
xorb
in
mov
sbb
cmc
add
sub
pop
xlat
add
mov
cmp
aam
sub
sarb
or
push
leave
data16
jbe
aaa
mov
dec
fs
mov
inc
jge
insb
outsl
test
ljmp
mov
push
xchg
hlt
and
push
mov
push
xchg
enter
outsb
jnp
clc
lds
rcrl
shlb
cmpl
lcall
sub
sbb
daa
lret
inc
addr16
ret
cld
hlt
jno
sub
shr
repnz
sbb
push
pop
and
loop
pop
adc
adc
imul
jae
scas
popa
daa
in
in
sub
sub
push
out
sbb
outsb
jnp
mov
or
xchg
and
cmp
pop
shrb
in
in
int3
xor
cld
push
xor
decb
rorl
or
push
std
test
sbb
pop
adc
shll
and
inc
fistpll
dec
add
orb
pop
into
in
and
cmp
dec
ljmp
outsl
sti
or
adc
es
adc
enter
out
pop
or
dec
sbb
mov
mov
jno
xchg
in
sub
xchg
fs
mov
clc
push
test
jnp
xor
adc
stc
pop
xchg
sar
add
mov
sbb
adc
mov
jle
mov
push
dec
and
into
test
clc
popa
and
inc
pop
addl
adc
pop
adc
test
jl
pop
insl
xor
decb
inc
js
pop
repnz
xor
bound
std
jl
cmc
rcr
inc
sub
aaa
mov
mov
mov
mov
divl
dec
push
jle
out
or
rolb
lret
cmpsl
mov
mov
mov
sbb
push
and
scas
and
lock
out
jecxz
xlat
xchg
rorl
mov
inc
arpl
int3
or
pushf
or
pop
pop
pop
pop
inc
cmp
jge
inc
cli
push
pop
js
insl
insb
pop
push
mov
fbld
xchg
add
ja
xlat
sbb
mov
addr16
loopne
into
popa
inc
loope
addr16
push
sbb
mov
sub
lret
jae
shrl
adc
icebp
pop
repz
outsb
pop
int3
lcall
add
gs
aad
or
mov
iret
xchg
mov
push
mov
int3
dec
dec
push
or
popf
outsb
push
jnp
pop
mov
cmp
clc
mov
das
sahf
sbb
mov
flds
sub
dec
sbb
add
js
aaa
rcrb
stos
stc
iret
mov
push
outsl
fisubrl
insb
sbb
jl
or
and
stos
sbb
jnp
lret
mov
incl
dec
in
mov
mov
loopne
ljmp
repnz
sub
jle
hlt
mov
sahf
sub
sbb
adc
or
jge
mov
adc
fmuls
xor
aam
push
out
jns
and
mov
pop
mov
jg
sub
out
dec
and
mov
enter
inc
pop
mov
ret
sub
es
insl
fildl
pop
jecxz
jecxz
shll
xchg
jmp
xchg
jno
out
test
inc
push
stos
mul
sub
faddl
pop
jecxz
mov
in
aas
add
lods
sub
dec
sti
and
hlt
icebp
dec
aad
dec
fisubrs
push
aam
in
jmp
lcall
add
imul
mov
push
cvtdq2ps
add
mov
or
jns
xchg
xchg
divl
das
xchg
and
and
cmp
stos
adc
mov
je,pn
mov
jmp
icebp
sbb
loope
pop
xorb
clc
cmp
imul
sub
lret
enter
xor
pop
jne
adc
cmp
push
pop
jnp
cmc
push
pop
push
cld
jnp
pop
lock
cmp
pop
or
push
or
out
cmp
mov
mov
sbb
push
inc
mov
ret
cmc
cmc
sub
lahf
jle
fidivs
pop
mov
mov
pop
push
sub
mov
rclb
dec
inc
add
cmp
jge
push
mov
push
xchg
inc
cs
inc
xchg
ss
jle
xor
hlt
dec
cld
xor
mov
mov
popa
jp
pushf
ja
loop
dec
jno
xchg
in
xchg
inc
pop
xchg
add
xor
imull
xchg
filds
mov
cs
cmp
inc
enter
aaa
mov
mov
repz
dec
cwtl
repnz
aad
sbb
sub
lods
daa
sub
sbb
cmp
shrl
ds
sbb
imul
cs
add
pusha
push
outsb
adc
ret
sub
shrl
xchg
pop
mov
and
decb
jne
jge
pop
call
jae
push
sbb
imul
leave
xchg
icebp
or
stos
add
pop
fildll
push
xchg
fcomip
jmp
lcall
pop
mov
push
daa
sbb
aad
pusha
xchg
jae
inc
sub
mov
jbe
mov
sub
into
push
mov
and
out
iret
jo,pt
jae
sti
pop
and
loop
movsl
mov
adcl
inc
cmp
cwtl
cltd
into
icebp
xchg
pop
daa
xor
mov
ret
fbstp
sub
sbb
call
cmp
mov
sbb
scas
loop
test
outsb
inc
fidivl
jmp
xchg
pop
xor
cs
fcmovnb
ret
mov
es
jne
xor
jge
divl
stos
sub
js
and
add
sub
insl
jmp
in
out
sbb
loope
call
mov
pop
mov
sub
cmp
inc
loope
ja
pop
dec
nop
jbe
adc
inc
pop
fs
adc
sbb
adc
stc
rclb
je
aas
ljmp
cmpsl
push
insl
icebp
xor
dec
jae
mov
xchg
test
pop
bound
shlb
jp
cmp
test
or
xchg
mov
imul
in
fs
in
xor
ret
or
imul
lcall
mov
movsb
push
inc
xor
push
jo
pop
jmp
data16
mov
adc
das
inc
stos
lds
cmp
or
dec
dec
std
mov
jno
xchg
xchg
cli
das
repnz
push
or
sub
jge,pn
icebp
jecxz
or
sub
shl
fistps
ss
mov
push
pop
sbb
lods
add
pop
aad
mov
push
mov
rolb
push
out
or
dec
leave
push
testl
push
pop
push
cmpsl
cmpsl
ret
cltd
adc
loopne
rcll
test
lea
dec
data16
fldcw
stc
mov
test
jae
add
pop
xchg
inc
jmp
pop
pushf
aas
and
andl
jge
lcall
nop
jmp
and
push
test
clc
pop
nop
fsubr
out
lods
mov
jnp
insl
pop
loop
push
add
inc
pop
lahf
lea
push
sbb
mov
mov
or
test
daa
xor
sbb
add
pusha
push
jmp
testb
pop
sbb
pop
lahf
mov
jno
xchg
dec
adc
les
dec
pop
ret
gs
out
movsb
rclb
sub
fdivs
jmp
ret
sbb
aas
jge
ret
push
das
or
inc
lea
cltd
pop
add
inc
and
jp
mov
fcmovne
pushf
lods
xchg
inc
fldenv
flds
shrl
mov
in
sti
sbb
xor
adc
rorl
lea
sub
outsb
mov
dec
daa
push
nop
in
dec
test
push
mov
test
popa
movsl
std
ds
repz
enter
js
jle
in
and
sbb
imulb
in
addr16
cmp
es
imul
fs
rorl
sbb
pop
xchg
stos
mov
mov
fsts
sub
call
es
push
aad
das
mov
push
and
inc
xchg
rorl
lcall
mov
mov
and
and
xor
add
cmc
and
dec
adc
ja
cli
sbb
dec
xchg
mov
sub
repnz
int
xor
testl
cmp
ficompl
movsl
loopne
xchg
loop
lods
sbb
sbb
rcrb
idivb
mov
push
jp
dec
or
or
sub
pop
pop
add
cltd
lret
jb
pop
push
mov
or
lret
in
jl
xchg
or
cwtl
jp
pop
outsb
inc
gs
xor
cmpsl
jno
xor
pop
xchg
inc
jge
mov
cltd
dec
dec
xor
and
pop
mov
push
xor
or
fs
and
push
in
imul
test
jp
aaa
mov
shr
jmp
rclb
pop
inc
inc
outsl
xchg
and
cltd
jmp
xchg
out
jmp
lahf
adc
pop
mov
dec
xchg
movsl
out
mov
xchg
cli
or
inc
dec
scas
movsb
cmp
sbb
push
outsb
popf
xor
xchg
and
dec
in
mov
and
shl
icebp
scas
sub
js
and
cmp
sbb
adc
xlat
out
out
xchg
inc
stc
ss
loop
dec
jbe
or
sbb
imul
loope
push
sbb
xchg
lods
sub
cmp
inc
xor
data16
xor
leave
sahf
loop
sbb
jmp
mov
testb
scas
ret
sti
add
hlt
push
ror
inc
xchg
cmp
gs
fucom
add
mov
mov
mov
imul
sbb
xchg
and
or
enter
lods
dec
dec
push
sbb
dec
mov
inc
jle
hlt
sbb
les
jbe
lods
lret
xor
xchg
mov
popf
test
imul
inc
loopne
jge
leave
mov
ljmp
mov
jl
push
adc
mov
cmp
jno
bound
lret
cwtl
loope
mov
cwtl
out
jl
ds
lds
lret
imul
jg
stos
add
movsl
adc
shl
imul
arpl
in
ret
aad
add
push
mov
xor
addb
nop
mov
cmc
xor
loopne
out
push
inc
repz
das
xchg
sar
mov
cmpsb
inc
cmpsl
cs
add
and
ss
mov
inc
mov
mov
mov
dec
push
or
dec
mov
loop
insb
rcl
jmp
jge
.byte
.byte
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
cwtl
xor
icebp
int
or
fisttps
ret
sbb
adc
int3
xchg
es
xchg
lock
cmp
pop
test
fcoms
jnp
rclb
fsubs
pop
dec
rcrl
mov
dec
lds
push
fdivl
fstpl
mov
push
es
addr16
and
lret
fistps
or
loope
popf
cmc
repnz
xor
mov
les
and
scas
rclb
mov
push
out
push
out
fs
aam
out
cmp
je
orl
xor
add
outsl
mov
ret
daa
imul
imul
sbb
cmp
lds
movsb
movsl
add
scas
or
or
xorl
clc
cmova
daa
sub
in
les
addr16
movb
inc
rorl
push
in
mov
push
mov
ljmp
dec
es
out
lcall
test
add
fwait
ljmp
ret
mov
cmc
lret
fsubl
pop
imul
adc
pop
movsl
xor
xlat
jno
out
in
enter
mov
ljmp
add
cli
fmull
inc
enter
mov
push
mov
loopne
std
and
ficompl
mov
stos
adc
lea
in
repz
push
out
or
cmp
mov
sarb
push
mov
fs
aas
ss
xor
add
loope
sub
mov
ret
jle
stos
out
push
pop
dec
jp
mov
cmp
push
xlat
icebp
or
in
lahf
fcmovnbe
rolb
cld
add
inc
and
mov
jl
mov
aaa
and
jge
inc
mov
jb
mov
insl
mov
cmc
mov
sbb
std
test
adc
enter
repnz
cld
dec
fwait
sub
aam
sub
jge
mov
sbb
pusha
cmp
xorb
push
mov
add
and
addr16
or
sub
and
mov
xor
mov
add
ja
sbb
popf
pop
stos
mull
je
std
push
shll
fldl
arpl
push
mov
fisttpl
popa
in
mov
sbb
cwtl
adc
mov
jne
pop
pushf
add
cltd
jno
adc
enter
insl
mov
in
outsl
dec
pushf
hlt
mov
fwait
es
sub
add
sub
test
in
fyl2x
push
ljmp
call
popa
or
fnsave
addl
les
sub
adc
leave
cmp
cmp
mov
xchg
cmc
ja
ss
rclb
dec
ds
ret
cmp
pop
ljmp
jb
and
sub
mov
dec
imul
xchg
cmc
adc
outsb
push
xchg
sub
into
pusha
pavgw
lock
clc
mov
out
lds
out
sbb
mov
dec
mov
aad
addl
push
cmpsl
sbb
les
xchg
or
pusha
pop
loope
cwtl
push
icebp
pusha
add
in
pop
jp
jb
xor
push
or
add
ficoms
dec
push
inc
sbb
in
xchg
and
pop
jge
test
sub
sbbl
int3
and
pop
lret
imul
adc
pop
mov
repnz
pop
adc
lret
cmpsl
mov
xchg
inc
mov
xor
leave
push
fimuls
xor
jmp
js
fs
push
stos
shrl
daa
in
xor
mov
pop
das
cld
mov
mov
xchg
es
cltd
sbb
mov
jno
xor
cmpsb
std
hlt
leave
lcall
jl
push
stc
add
inc
inc
lret
repnz
add
stos
inc
jb
sahf
sbb
daa
mov
stos
lea
mov
xor
sbb
jl
mov
pop
cmp
shlb
dec
or
xchg
sbb
je
lret
loop
lock
stc
and
addr16
jno
mov
sub
jge
repz
add
js
mov
mov
fdivrs
movsl
mov
clc
aam
lahf
stos
or
in
lods
adc
fs
inc
or
jns
push
jno
stos
push
mov
inc
dec
lcall
mov
aam
popf
add
mov
xor
cli
push
or
xor
icebp
or
aas
mov
and
add
xlat
les
test
cmpsl
movsl
das
scas
nop
inc
or
mov
clc
out
push
cmp
xchg
sub
fsubrl
test
ret
cltd
inc
and
or
add
pop
cmpsl
sarl
dec
dec
mov
popa
shrl
mov
leave
sbb
mov
xor
xchg
ret
xchg
movb
pop
inc
mov
sbb
int
xor
xor
pop
dec
stos
lods
and
mov
mov
in
push
aas
lock
loopne
xchg
mov
sbb
mov
sub
push
dec
xor
int3
xlat
jne
andb
ja
lcall
xchg
push
dec
mov
sbb
jle
sbb
add
ljmp
sbb
push
jmp
pop
jp
mov
ljmp
rolb
sub
add
and
inc
insl
cmpsb
lea
fwait
inc
fs
scas
lock
xor
and
pop
jae
test
popf
pop
sbb
lds
movsl
testb
das
fs
sub
stos
or
movsl
out
movsb
xchg
jo
repnz
outsb
dec
sub
ljmp
dec
aaa
mov
arpl
aas
dec
or
cltd
shrl
scas
sti
jbe
jmp
cmpsl
push
sbb
cs
scas
xlat
dec
pop
jnp
and
gs
push
jb
push
test
push
mov
sub
push
lret
mov
in
push
mov
cltd
mov
mov
inc
push
das
jecxz
adc
outsl
xor
ss
cmpb
psubq
aas
iret
or
dec
fsub
cmp
and
mov
daa
and
iret
push
cmp
aad
jg
mov
push
inc
jle
repnz
fidivrl
jle
test
mov
movsl
inc
aad
or
stc
leave
sbb
inc
and
daa
mov
stos
cmpsl
dec
fs
std
fisubrl
cmpsb
jle
cmp
mov
lret
ljmp
pop
jg
jmp
mov
fistl
and
fisubl
stc
fwait
scas
and
lds
lret
out
movsl
jo
loopne
iret
sarl
ret
add
bound
ds
dec
aam
rcrl
xor
add
mov
mov
xchg
std
and
xchg
es
pop
ds
jp
add
mov
xor
push
and
sub
cmpsb
scas
mov
push
repz
fdivrs
or
jns
or
imul
lock
rcr
sbb
xchg
arpl
sub
and
sti
cli
shll
insl
decb
mov
in
loop
and
or
je
dec
fadd
ds
ffree
int
fbld
popa
sbb
movsb
push
inc
jecxz
lret
std
mov
je
add
insb
pop
ja
movsb
popa
pop
lds
sub
outsl
test
push
jb
mov
dec
subl
js
push
dec
sub
dec
sti
faddp
test
mov
jmp
push
mov
inc
lcall
cmc
pop
dec
push
pop
negb
sarb
adc
lods
adc
or
xchg
divps
stc
and
pop
testl
xchg
xchg
mov
or
stos
icebp
mov
mov
fcmovb
fsts
pop
shlb
add
mov
pop
sbb
lea
adc
sub
pop
out
sahf
cmp
ss
xchg
dec
xor
adc
or
sahf
cmp
jno
or
dec
addr16
sub
or
xchg
cmp
sub
mov
sbbb
mov
cmp
pop
test
inc
xchg
bound
jmp
push
jb
cmp
dec
pushf
mov
jg
cmpsl
shrb
fstpl
imul
push
into
jnp
repz
xchg
or
and
movsb
xchg
inc
stos
mov
mov
dec
adc
icebp
mov
xor
iret
add
xor
aaa
or
fdivrs
bsr
pop
pop
jbe
popf
xchg
push
or
push
decl
test
or
inc
fs
stc
mov
fcompl
jae
dec
arpl
or
xchg
add
or
or
xchg
adc
lcall
cmpsb
shlb
dec
into
mov
mov
mov
lcall
out
push
fnstsw
jne
add
jl
mov
xchg
ret
and
sub
dec
mov
shlb
push
jbe
jp
ss
inc
mov
loop
insb
stos
imul
push
jno
mov
repnz
mov
push
js
into
cmpsl
adc
mov
xchg
sbb
sub
cld
lods
pop
scas
mov
lahf
add
leave
jp
pop
adc
iret
int
pop
mov
es
scas
jbe
int
int3
adc
ret
xchg
xchg
inc
and
cmp
cmc
mov
iret
add
cmpsb
lret
sub
cld
test
and
adc
js
test
dec
shlb
mov
push
popf
imul
xchg
inc
cli
bound
imul
test
push
adc
push
adc
testb
xor
imul
mov
jne
lea
sub
sbb
lods
in
push
xchg
pop
sbb
cmp
inc
mov
subl
sub
loope,pn
fwait
inc
xchg
and
or
hlt
inc
dec
leave
sub
test
addr16
cmp
insb
mov
mov
je
lcall
and
into
lock
ljmp
call
outsl
insb
xchg
int3
cmpsl
pop
cmp
push
sub
dec
add
shrl
and
arpl
inc
rcrb
xlat
cmc
mov
mov
pop
mov
xchg
gs
adc
cld
popf
loopne
daa
sub
jge
jnp
mov
orl
sbb
dec
lret
xor
scas
or
sub
mov
adc
sub
inc
mov
adc
mov
movsb
sbb
or
jp
add
xor
jmp
jle
sub
rcrb
pusha
js
cmpsl
push
aad
mov
rcr
in
and
xor
icebp
lods
lret
insl
hlt
sbb
xchg
cli
pop
xor
in
xor
pop
in
aas
stos
push
sub
cmp
pop
pop
add
xchg
jl
js
nop
cmp
sbb
jo
lcall
lahf
jo
adc
push
inc
push
jo
clc
adc
sub
int
push
movsl
pop
mov
inc
xchg
sub
addl
test
add
arpl
push
lock
in
scas
scas
pop
sti
xchg
xchg
xchg
jge,pt
fmuls
int
jp
mov
dec
dec
mov
mov
cmp
lock
push
mov
and
adc
push
or
shlb
mov
xor
mov
jge
and
push
jb
insl
pop
cmp
push
and
enter
push
insl
add
jg
stos
in
and
outsb
pushf
pop
dec
lahf
stos
jnp
cli
adc
cmpsb
push
lods
or
mov
mov
pusha
fimuls
in
fildll
mov
push
insb
dec
pop
cmp
cmp
insb
pop
or
test
fsubl
out
mov
or
pop
test
mov
sub
adc
pop
cld
push
xchg
repz
clc
fs
cmp
imul
stos
movsl
cmp
sub
nop
or
jno
xor
mov
inc
mov
loopne
lahf
mov
outsl
insb
scas
mov
mov
imul
nop
mov
mov
out
ds
sbb
mov
dec
test
leave
ljmp
loop
push
xor
jns
ljmp
adc
xor
cmp
ja
mov
push
xchg
icebp
sub
sub
adc
push
jmp
pop
fwait
push
pop
sub
push
movsb
and
cmc
jge
je
cwtl
push
movsl
mov
imul
cmpsl
adc
or
lret
jge
or
push
lcall
scas
fwait
pushf
data16
aad
add
aaa
and
les
xchg
cmp
into
jg
mov
adc
outsb
jno
jo
aas
mov
pop
xor
xchg
mov
mov
jae
sub
in
pusha
mov
xchg
cmp
cmp
mov
cmovo
mov
repz
notl
xchg
dec
xor
imul
fldln2
cmpsb
nop
int3
outsb
sub
fmuls
push
ss
int3
loopne
testl
rcrb
jbe
mov
outsl
loop
adc
aad
mov
jmp
sub
ljmp
cmp
jge
push
jle
sub
stos
xor
cwtl
iret
cwtl
arpl
loopne
js
movsb
dec
fsub
icebp
dec
cmp
mov
dec
sahf
aam
je
rorl
add
mov
movhlps
pop
lock
adc
scas
and
sub
in
mov
data16
imul
inc
scas
lcall
lcall
insl
inc
mov
xor
mov
adc
mull
shr
mov
jle
mov
jns
xchg
add
sub
xor
out
bnd
cld
push
and
and
mov
dec
shlb
dec
lcall
shl
sarb
cmp
enter
cwtl
jecxz
xor
jge
sub
or
imul
cld
lcall
scas
fdivs
pop
fldl2e
outsb
push
jp
adc
popf
or
aaa
inc
sub
push
ljmp
sbb
jno
ret
mull
xor
push
lcall
xor
data16
mov
rorl
sbb
jge
pop
pop
mov
add
push
in
out
mov
stos
pop
gs
test
lret
push
addl
pop
sub
inc
imul
mov
and
push
sti
mov
mov
mov
and
and
jl
inc
imul
out
scas
out
cwtl
and
xchg
std
ss
fmull
mov
fcomi
fmulp
cld
push
outsl
enter
mov
loopne
ror
and
bound
mov
inc
mov
imulb
xlat
adc
sbb
fisttpll
outsl
cwtl
dec
adc
imul
dec
imul
xchg
mov
jb
xchg
lret
xchg
jno
mov
lock
mov
out
loope
shrb
xor
scas
pop
pop
pop
fstl
xchg
in
mov
xor
mov
rcrb
push
aad
lods
sbb
mov
pop
test
mov
imul
out
in
loope
fidivs
add
andl
xor
and
std
sahf
sub
cwtl
cmpsb
pop
mov
xor
xorb
shll
js
popf
sub
lea
mov
loope
mov
nop
lock
dec
xor
push
dec
notl
sbb
add
mov
cmp
stc
dec
fwait
std
pop
cmpsb
pop
sbb
arpl
cmc
sub
or
subb
jbe
or
gs
fs
aam
xchg
loope
mov
jp
fcomps
test
add
outsl
cli
sbb
xchg
icebp
push
dec
pop
or
into
sbb
push
test
pop
sbb
inc
outsb
lret
test
out
shrb
jae
clc
stos
aaa
bound
cmp
or
fadd
or
adc
sub
xor
fdivrs
aam
orl
xor
jb
push
rcr
pop
repnz
jl
xchg
cltd
mov
mov
mov
sbb
fldl
pop
push
push
sub
mov
xchg
fidivrl
es
cmp
sub
das
lea
loopne
mov
nop
fistps
xchg
lods
push
jno
mov
lea
add
jg
add
mov
xor
mov
push
fsubs
add
add
cmp
sbb
pop
cltd
pop
xchg
cmc
cmpsb
mov
loopne,pn
pop
cmp
js
icebp
pop
scas
push
loopne
inc
mov
jae
popa
popa
test
les
xchg
xchg
in
xor
cmc
or
mov
loop
mov
fucomp
sbb
gs
xor
ja
mov
push
or
jge
push
mov
mov
mov
xor
mov
int3
jmp
cltd
mov
xor
repnz
shlb
cmp
repz
push
jne
arpl
sti
and
jecxz
sbb
inc
jg
xor
xchg
pop
cmp
cmp
int
movsl
and
xor
test
pop
adc
leave
lds
aam
js
pusha
lcall
dec
cs
shlb
adc
imul
out
jno
sub
add
inc
out
sbb
dec
sti
mov
das
cmpsl
adc
std
sub
pop
xchg
lods
sbb
push
andl
sbb
stc
test
fistpll
movl
pusha
in
adc
loopne
imul
sahf
jl
sbbl
push
cmpsb
cmp
push
mov
bound
mov
in
inc
into
mov
fwait
movsl
sub
out
mov
stos
jmp
cmp
lahf
cmp
outsb
or
pop
rcrl
fcos
js
jge
pop
xor
shlb
movl
int
fwait
cmpsl
adc
mov
outsl
mov
les
mov
fisttpl
push
mov
dec
dec
push
aad
rolb
loop
add
or
jae
in
mov
in
pusha
inc
imulb
cmp
mov
mov
loop
out
mov
jae
sbb
es
lret
ja
icebp
xchg
out
pushf
subl
rcll
inc
mov
push
push
sbb
nop
lcall
sub
popa
push
outsb
rcrl
daa
sbb
mov
test
pusha
push
or
jbe
mov
sub
add
nop
xchg
mov
fldl
mov
jp
mov
aad
xor
xchg
call
fadd
imul
sub
mov
loopne
jo
push
out
and
fnstenv
xchg
fsubl
inc
aam
frstor
inc
nop
fldenv
popf
sub
sbb
orl
lock
flds
jb
adc
leave
jno
fildl
sarb
xlat
mov
fsubrs
pop
cmp
bound
loop
sub
aaa
add
ret
adc
gs
fistpl
rorb
pop
test
out
scas
daa
pushf
pop
mov
lods
cli
cmpsb
xchg
out
clc
cmc
adc
dec
jae
sub
clc
cmp
outsl
fs
frstor
lahf
mov
pop
xchg
and
fdivrs
fwait
mov
insb
fdivl
ljmp
dec
xor
jb
rcrl
pusha
fs
cmp
outsb
int3
push
aas
aad
adc
dec
add
popa
cmp
ret
mov
lds
ds
xchg
sbb
out
cs
insl
pop
and
push
add
pop
mov
cmp
psubusb
nop
push
push
loope
movsb
pop
xchg
xchg
rorb
inc
or
mov
fs
push
mov
test
adc
imul
std
dec
adc
pop
mov
testl
jl
pop
inc
flds
pop
loopne
ficomps
push
mov
and
push
cmpsb
sub
cwtl
cmp
loope
xor
inc
pop
test
xor
decl
adc
or
scas
and
xor
jae
je
mov
mov
xchg
pop
mov
cmpsl
icebp
imul
stos
or
or
fldl
sahf
in
imul
imull
inc
lahf
push
rcll
test
xor
push
cmp
fdivs
mov
nopl
sbb
js
inc
leave
adc
in
mov
loope
repnz
sub
stos
lods
inc
sbb
pushf
das
stos
cs
in
jb
add
jl
movl
mov
mov
push
cmp
pop
lret
and
hlt
popa
test
in
shl
leave
dec
jae
lahf
pop
mov
xor
flds
fstl
jp
mov
mov
out
cmpsb
shll
fs
mov
hlt
pop
sbb
xor
mov
jns
dec
xor
mov
movsl
pop
inc
push
add
push
cld
sub
test
test
jge
xlat
push
xchg
repnz
imul
test
jg
enter
xchg
movsb
cmp
xchg
les
xor
xchg
in
shl
xchg
pop
in
sub
sbb
inc
inc
jecxz
add
push
mov
or
aaa
pop
inc
jne
pushf
sahf
xchg
movsb
jae
fistl
cmpsb
xor
jge
add
add
mov
mov
popa
adc
sahf
mov
xchg
ficoms
xchg
popf
fucomp
enter
mov
sbb
ljmp
xchg
enter
jo
pushf
jl
pop
push
frndint
mov
push
cmp
sbb
jae
sbb
jg
jo
das
vpavgb
cmpsb
loopne
inc
jns
data16
inc
mov
xchg
jno
mov
cmp
mov
fimuls
or
jnp
repz
fisubrl
sbb
xchg
stos
xchg
mov
aam
lret
into
loop
fildl
or
mov
ret
addr16
pop
lods
add
bound
push
es
adc
and
stos
xor
push
nop
in
out
mov
gs
int
test
pop
inc
cs
out
pop
fyl2xp1
xchg
xchg
sub
sbb
pop
test
into
push
adc
das
push
sub
imul
cmpsl
jno
xchg
imul
push
sahf
ret
insl
into
or
loopne
jmp
ljmp
xor
repnz
jmp
mov
jns
fs
mov
mov
xchg
jo
enter
push
jmp
loope
shrl
mov
je
adc
fsubrl
in
cmp
aad
fs
fildl
push
ret
xor
leave
lock
test
out
mov
mov
push
loope
ljmp
sti
bound
imul
in
xchg
cltd
fldl
lods
pop
xchg
jae
cwtl
xor
inc
ret
adc
lods
in
in
and
add
ja
push
jno
or
sub
mov
cwtl
aaa
lretw
out
xor
arpl
or
fadds
int
mov
aam
or
inc
xchg
mov
cmp
neg
mov
pop
sbbb
sbb
push
cmp
adc
mov
or
dec
push
dec
insb
repz
scas
inc
sti
shlb
cmp
mov
cs
mov
andb
pop
xchg
or
adc
mov
sbb
mov
shlb
jnp
sub
lahf
arpl
xlat
inc
dec
jp
fisubrl
cmc
xor
mov
pop
iret
push
mov
dec
mov
es
cmp
icebp
inc
pop
flds
push
nop
and
repz
add
add
jbe
lret
test
stc
adc
xchg
or
subl
mov
jno
test
int
sbb
mov
jle
rcll
jnp
pop
and
jns
nop
dec
leave
popf
add
adc
movsl
rol
sbb
or
enter
add
dec
sbb
mov
iret
xchg
pushf
pop
push
out
pusha
mov
imulb
call
into
dec
xchg
and
lods
or
mov
test
lock
add
hlt
adc
cs
lods
mov
xchg
out
sub
loopne
insb
pop
mov
mov
mov
jne
add
jp
cmp
jnp
add
pop
xor
sbbl
jo
pushf
ret
inc
lahf
xor
fmuls
mov
xor
xor
pop
sub
fwait
jns
dec
in
lret
or
out
je
jne
mov
dec
ret
lret
or
cld
fisubrs
mov
jae
test
jl
loop
or
scas
nop
int
add
dec
lret
shl
out
push
push
push
sub
xor
out
cmpl
cli
sub
push
repz
stc
fisttpl
xchg
mov
pop
dec
push
or
push
imul
mov
lock
addr16
mov
in
sub
jns
aaa
or
and
xor
push
jb
dec
mov
mov
loop
cmp
inc
mov
pop
insl
mov
xor
mov
arpl
mov
fists
jbe
bound
mov
cmp
pop
adc
sbb
mov
in
out
inc
mov
adc
fbstp
mov
jl
lock
fiadds
inc
iret
cli
xchg
add
frstor
pushf
gs
arpl
inc
xchg
leave
xor
fcomi
bnd
jbe
cmp
imulb
popf
cmpsl
push
pop
ret
out
jbe
adc
scas
scas
pushf
inc
mov
add
lods
and
mov
pop
add
inc
push
lret
sbb
xor
jp
ja
cmp
inc
icebp
cmpsl
and
and
cmpsl
adc
and
in
aad
add
repz
sub
adc
aas
jge
dec
jb
jno
sub
pop
rorl
jbe
xor
lods
lcall
sub
aad
cli
inc
jo
and
pop
jnp
or
and
loope
jae
in
mov
add
jae
and
sarb
aas
and
ds
rcrb
out
push
mov
push
icebp
iret
cmp
pusha
call
and
pushf
notl
shl
inc
dec
pop
ret
imul
shll
sub
and
cmp
ljmp
mov
hlt
dec
stos
pop
cwtl
int
adc
dec
lods
push
jnp
rcr
xor
xlat
push
xor
jmp
xchg
xchg
aaa
aam
lahf
or
js
aam
xor
daa
fimuls
cltd
fisubl
cmp
inc
mov
popa
int3
test
testl
test
xlat
inc
sti
adc
mov
sbb
sahf
cmp
cmp
mov
scas
xchg
mov
daa
mov
jno
js
sbb
cmp
push
sub
sub
jno
or
in
pop
mov
in
jl
or
movsb
or
xchg
inc
mov
adc
jmp
std
cmp
movsb
sub
sti
xor
xchg
and
or
sub
std
inc
ficomps
icebp
ret
ret
mov
and
int3
sub
jno
rolb
ds
cmp
inc
imul
jle
mov
in
pushf
pop
pusha
in
or
jmp
ljmp
sahf
mov
loopne
push
jns
push
je
lret
jae
nop
repnz
pushf
rcrb
xor
inc
xor
dec
shlb
faddl
mov
fists
push
push
ret
inc
add
dec
std
mov
scas
push
mov
daa
xchg
out
insb
sub
dec
bound
cmp
mov
adc
jle
xchg
gs
xchg
xchg
dec
sbb
popa
or
mov
movsl
mov
cmp
shlb
pop
inc
jnp
lcall
pop
mov
or
fisubrl
loope
xchg
jbe
cltd
pop
sbb
push
sub
stos
ret
rorl
outsb
daa
stos
scas
mov
into
and
stc
pop
fdivrs
pop
or
leave
dec
cli
loop
inc
push
iret
mov
add
lods
cmp
test
sahf
test
sbb
pop
fdivrl
pop
add
adc
arpl
push
push
and
and
daa
xchg
jmp
int
into
lea
loopne
sbb
mov
nop
int
cmp
roll
cmp
mov
imul
enter
add
shlb
das
mov
rcll
fists
stos
pop
or
inc
jne
std
shrl
fwait
sbb
sti
xchg
rorl
ja
mov
movsl
lods
pop
arpl
out
dec
mov
or
jns
jmp
push
and
adc
cs
scas
or
pop
arpl
sti
arpl
push
push
mov
jns
fprem
jg
adc
xor
aaa
jg
dec
sbb
std
inc
xchg
gs
and
push
xorb
or
inc
jl
xchg
or
push
cmp
insl
aam
sbb
adc
fdiv
and
xchg
sub
les
lret
sbb
adc
adc
mov
push
mov
daa
ja
cs
xor
ret
inc
gs
xchg
xchg
push
fists
jno
mov
pop
lods
jbe
jg
mov
iret
mov
inc
pop
nop
repnz
mov
mov
icebp
dec
rcll
jnp
sbb
cltd
inc
cmp
or
pop
xlat
gs
subl
popa
inc
pop
jle
sbb
xor
xlat
in
lock
out
stos
mov
es
xchg
sub
mov
in
lock
inc
in
cmpsb
adc
pop
pop
push
push
subl
mov
sub
pop
nop
mov
rcr
test
insl
or
out
addb
shll
das
or
jmp
shrb
add
xchg
cmp
mov
adc
ja
ret
fwait
push
gs
sbb
mov
mov
out
gs
jnp
push
or
mov
repnz
stc
cltd
test
inc
mov
add
dec
adc
add
and
xchg
xor
repnz
in
xchg
and
cmc
xchg
cmpsb
or
sbb
push
in
dec
pop
dec
leave
push
loope
add
je
inc
loop
das
call
movsb
pop
jb
dec
xor
inc
jnp
cmp
mov
mov
xor
repz
and
cmp
jg
xor
jecxz
das
fistpl
cmp
data16
les
xchg
scas
xchg
shrl
pop
mov
mov
ljmp
push
cli
lock
sub
test
sahf
in
fadds
aas
adc
xor
imul
adc
mov
inc
dec
ds
out
repz
jp
decb
test
inc
push
and
xchg
std
cmpsb
cmp
dec
mov
iret
inc
pop
and
mov
out
insb
clc
or
push
push
dec
outsl
negb
ret
test
push
loopne
sub
mov
dec
aaa
mov
inc
repnz
lds
rol
push
mov
dec
idiv
pop
fsubrl
xchg
stos
or
scas
xchg
test
cmp
dec
mov
jmp
mov
add
cmpsl
cmp
and
lods
test
jne
jmp
xchg
dec
out
pop
dec
or
fwait
mov
test
mov
sbb
mov
push
jns
out
cmp
cli
push
ret
in
icebp
add
dec
lcall
push
cmp
xchg
mov
iret
pusha
xor
and
jp
outsb
mov
sub
pop
popf
shlb
sub
js
adcl
aaa
cltd
add
xor
outsl
iret
outsb
mov
xchg
roll
jns
xchg
imul
inc
mov
das
mov
or
rcr
ficoml
negb
push
jle
subb
in
and
adc
dec
pop
mov
int3
adc
xor
jmp
shll
negb
pop
sub
inc
push
ja
out
sub
add
dec
faddp
aam
pop
cli
jnp
push
fiadds
ds
scas
push
outsb
fstpl
sub
dec
sahf
push
push
icebp
call
inc
popf
and
cmp
mov
aad
movsb
fnclex
nop
ds
sti
popa
out
call
dec
mov
testl
xor
mov
pop
jecxz
stc
iret
pusha
cli
addb
sub
rcll
push
stc
call
js
add
insb
bound
dec
lds
pop
dec
ret
pop
pop
lcall
push
into
nop
int
mov
lcall
sub
mov
dec
push
mov
pop
lcall
push
fldcw
enter
scas
add
das
cwtl
sbb
ss
xchg
lret
jne
pop
rcll
and
pop
push
jne
inc
xor
mov
clc
jp
mov
xor
loop
nop
push
xor
fildl
shlb
bound
sbb
lock
pusha
add
and
xchg
inc
fcomps
pop
mov
ret
adc
divb
xor
xchg
sub
jnp
jmp
dec
cmp
popf
dec
gs
sbb
sbb
cmpsl
xor
inc
test
jne
dec
outsl
pop
je
je
cmp
and
push
mov
xchg
fimull
or
lock
iret
inc
outsl
ljmp
cmp
shr
repnz
stos
push
jbe
pop
loop
mov
jp
das
or
lret
inc
leave
jb
ds
cmp
mov
xchg
lods
scas
shr
pop
push
pop
stos
push
jbe
test
push
movsb
lea
jmp
js
mov
aas
js
and
inc
rcrb
push
dec
fnsave
loop
sub
outsl
movsb
sub
outsl
lahf
xor
rol
cmp
add
mov
xor
aaa
mov
shll
aaa
push
movzwl
shl
pop
aaa
cmpsb
loope
push
int
popf
daa
push
fistl
mov
mov
clc
or
xor
sub
mov
add
xor
jg
sbb
ja
push
push
pop
mov
xor
pop
xor
inc
popa
outsl
or
mov
bound
clc
and
test
ja
fwait
mov
fs
xchg
addr16
cmp
test
iret
push
inc
in
pop
lea
arpl
scas
push
and
mov
popf
pushf
outsl
push
xor
lods
sub
inc
push
jae
mov
mov
fwait
and
mov
lds
mov
in
cmp
call
out
sbb
lahf
bound
rcr
jo
mov
push
push
or
jo
notl
orb
cwtl
rol
xchg
enter
aaa
imul
repz
cld
mov
dec
adc
sarl
xor
in
adc
mov
mov
xorl
aam
aam
insl
mov
cld
cmp
pusha
out
sbb
out
lods
pop
ljmp
movsb
dec
daa
inc
cmp
stos
sti
xchg
fwait
addr16
add
lods
push
ss
sbb
pop
adc
lock
fstps
inc
scas
into
repz
loopne
add
imul
ds
repnz
aad
or
pushf
addl
jo
sarl
mov
mov
je
pop
lret
cmpsb
inc
orl
dec
add
je
or
jle
rep
fcomps
add
movsb
aam
push
int
mov
mov
mov
and
mov
cmp
aam
ret
cltd
mov
mov
pop
adc
pop
sub
mov
sti
mov
pop
fdivl
xor
and
std
outsb
mov
sti
xor
pop
xor
cmp
cmp
add
mov
jnp
ret
fwait
insb
sti
mov
jecxz
jae
mov
xor
pop
iret
cltd
cmp
mov
push
fcmove
add
hlt
sub
in
pop
pop
cmp
ficomps
lret
mov
inc
adc
ds
in
dec
sbb
clc
and
sti
push
lahf
enter
pop
movsb
and
adc
dec
out
adc
int
lahf
push
stos
mov
mov
or
mov
xchg
jne
pop
into
js
add
fistpl
and
and
sbb
test
lds
xchg
call
push
mov
aaa
sbb
outsb
dec
mov
xor
les
rolb
jae
push
sbb
adcl
cmpsb
int3
mov
mov
xcrypt-cbc
cmpsl
adc
sub
bound
lock
int
adc
loopne
add
push
cmp
les
push
out
gs
cmp
into
lret
mov
jne
arpl
dec
push
push
lea
mov
pop
mov
fdiv
fs
stc
inc
sbb
dec
push
xchg
sub
cltd
repnz
xchg
fisttpl
inc
mov
mov
imul
arpl
mov
insb
dec
xchg
clc
adc
icebp
mov
int3
sbb
dec
fiaddl
sbb
cld
daa
lds
mov
into
jg
ja
int
frstor
cmp
jbe
mov
lcall
repnz
jbe
mov
stos
xor
lahf
inc
aad
stos
push
pop
fdivrl
mov
lea
dec
jp
mov
outsb
pop
pop
push
or
sbb
mov
pusha
fldt
mov
mov
inc
aas
aad
push
pop
adc
arpl
xlat
in
test
sub
or
add
pop
std
call
movsl
popf
ja
adc
mov
sub
or
mov
mov
push
mov
test
int
test
es
ss
inc
mov
pxor
xchg
subb
shrl
mov
jo
loope
sbb
std
pop
xchg
sbb
pop
xor
mov
mov
pusha
shlb
cmc
jge
bnd
dec
cs
leave
mov
dec
push
dec
xor
adc
cmp
push
jle
sub
ret
lea
imul
mull
loop
pop
jns
xlat
int
ss
shrl
cwtl
std
dec
ss
out
ret
popf
mov
or
insb
or
aam
ret
stc
push
inc
fwait
cmp
cmc
fistpll
stc
mov
cmc
sbb
test
lret
mov
jge
mov
fisttps
mov
out
je
test
and
jp
pop
mov
mov
ds
cmp
mov
adc
jecxz
cs
lret
cltd
jbe
xor
add
and
rcrl
push
push
out
cmp
out
xchg
mov
sub
lahf
fisubrs
imul
inc
fbld
push
sub
lret
add
sbb
and
push
sub
popa
popf
es
or
lock
sub
mov
sbb
ror
adc
adc
mov
adc
dec
jmp
sbb
jg
int
mov
fs
xchg
mov
lret
in
adcb
jl
movl
shl
sub
in
mov
jnp
mov
pushf
sub
push
xchg
sbb
pop
or
ret
xchg
leave
or
push
scas
out
pop
mov
dec
aas
rcrl
adc
data16
mov
mov
rcll
fisubrs
xchg
pop
jecxz
daa
in
mov
outsl
out
mov
fsubrl
jae
imul
les
push
jo
mov
pop
pop
int
mov
notl
fisttpl
fcoms
dec
cmp
cmp
and
aam
addr16
in
sub
pop
sbb
cli
pop
in
dec
or
mov
lret
test
orb
sub
dec
scas
pop
out
xor
inc
das
and
dec
xchg
int3
add
jmp
ret
in
jp
sahf
outsb
pusha
sti
sbb
jge
xchg
cmp
out
pop
cmpsb
jb
out
xor
sub
and
sub
jecxz
xrelease
inc
test
push
pushf
jae
fildl
or
aam
xlat
or
push
fbld
push
sahf
pop
hlt
add
sbb
sub
cmp
push
add
outsl
popa
jle
adc
lds
dec
pop
xchg
loop
mov
popa
mov
and
das
jno
clc
or
cmp
jg
inc
mov
cli
sub
jo
idivb
xlat
ret
notb
mov
mov
testb
loop
push
clc
iret
roll
in
add
popf
dec
test
gs
pop
xchg
mov
mov
jne
push
mov
or
lret
fsubl
sbb
cmp
aam
cmp
loopne
sarl
sub
pusha
repz
mov
cmpsb
mov
lock
outsb
inc
or
roll
out
mov
jp
int3
ja
dec
dec
mov
shlb
sbb
addb
mov
cmp
jno
add
jmp
inc
dec
xchg
pop
sbbl
outsb
xchg
or
and
jmp
dec
fildl
cmpsb
iret
and
mov
enter
scas
dec
xor
stos
mov
lods
push
sbb
jo
mov
push
dec
mov
xlat
stos
mov
mov
mov
in
mov
mov
adc
sbb
dec
xor
pop
xlat
pop
int
je
mov
shrb
and
pusha
stc
xor
shl
xor
cli
inc
add
fcmovbe
out
lods
pusha
popf
das
popf
mov
insb
sahf
fwait
sub
lods
pop
subl
scas
and
cwtl
je
adc
inc
incl
sbb
xchg
shlb
adc
outsl
pop
cmpsb
repnz
mov
clc
xchg
jae
or
sarb
adc
add
add
xchg
push
data16
in
cmpsb
paddsw
aam
xchg
jno
pop
sub
cmp
pop
out
shl
jecxz
pop
cmpsl
test
shlb
jmp
fs
jbe
dec
push
popa
fs
mov
in
fiadds
test
lret
push
cmp
clc
mov
jne
lahf
adc
lods
add
cmp
add
scas
into
adc
addl
xchg
and
test
ffreep
dec
test
cmp
and
dec
mov
leave
jmp
inc
cmp
push
jae
inc
lcall
fbstp
cmp
daa
dec
push
mov
loope
sub
push
int3
movsb
cltd
popf
sub
lret
dec
cmp
rcll
std
call
pop
into
fwait
aas
pusha
jp
cs
pop
ret
xor
das
ja
or
fadds
test
fld
mov
jle
cmp
xchg
mov
mov
sub
adc
cmc
iret
movsl
xlat
movsl
ss
jmp
push
push
lahf
loope
imul
or
ljmp
repnz
mov
shl
stos
out
out
ljmp
decl
mov
ja
clc
and
push
push
iret
push
ljmp
mov
loop
adc
push
scas
sbb
or
xchg
daa
lds
add
cltd
fldcw
cmc
movsb
std
pop
rclb
push
mov
into
loopne
mov
andb
adc
aas
lea
ljmp
nop
pop
xor
jl
cmc
and
lea
sub
adc
dec
adc
outsb
movsl
sub
xorb
or
rorb
fcmovbe
aam
or
fsubs
jae
fadds
fiadds
sub
inc
mov
std
lods
mov
pop
jl
jno
outsb
or
xchg
push
jecxz
mov
bndstx
push
cmp
xchg
hlt
cmp
dec
popf
lods
enter
test
subl
mov
stos
mov
jnp
loop
mov
dec
mov
lds
jecxz
movsl
cmp
push
into
aam
stos
mov
adc
push
lcall
roll
mov
lods
adc
sbb
dec
push
and
mov
imul
sbb
xor
shlb
fsubl
push
mov
fsubs
fidivl
popa
dec
nop
imul
jns
stc
cmpl
sbb
jg
pop
mov
movsb
loopne
and
and
sahf
insb
in
inc
xor
popf
shll
mov
mov
sub
cmp
adc
mov
aas
dec
jle
add
sbb
sub
and
sbb
or
xchg
mov
sahf
js
mov
cmp
cmp
lock
rol
aaa
adcb
imul
push
cli
inc
sarb
clc
insl
or
or
data16
cmp
or
sbb
dec
sub
and
inc
mov
mov
xor
mov
fldl
push
push
cmp
test
lcall
xor
cmp
mov
movl
jl
mov
dec
mov
inc
ss
push
sbb
mov
sbbl
push
cmp
mov
shll
nop
cmp
icebp
adc
jp
popa
in
jle
mov
mov
cmp
rol
sub
sti
test
inc
vucomisd
mov
testl
jmp
mov
addl
fadds
mov
out
sub
cmp
ljmp
gs
mov
jge
inc
stos
daa
scas
leave
push
fnsave
lds
or
sbb
das
cwtl
mov
add
ja
mov
or
sbbb
orb
cld
push
lods
test
and
sbb
xlat
or
shll
mov
cmp
movsb
lret
push
push
enter
xor
mov
cld
push
je
sbb
jl
jnp
jo
jle
jl
mov
dec
shlb
push
imul
out
pop
imul
cli
cmp
sub
and
jno
lds
jne
outsl
jnp
scas
or
inc
pushf
sub
sbb
fwait
cmp
or
imul
push
int
fcmovnb
inc
mov
daa
sbb
scas
fistl
out
shlb
add
xchg
xlat
arpl
jns
push
test
mov
mov
or
mov
and
jae
test
enter
ja
popa
push
out
push
mov
loope
fs
ror
mov
pushw
int3
icebp
push
xchg
xchg
shrb
inc
rclb
sub
mov
cmp
jns
jge
sbb
push
lret
cltd
fnstenv
sti
mov
ja
sbb
popa
sub
or
push
cwtl
sarb
push
fcmovnu
stc
push
in
dec
js
or
dec
xor
jmp
lock
cmp
jl
lds
push
pop
ffreep
mov
jl
lret
inc
and
mov
pushf
enter
dec
lret
jbe
cli
das
xor
cmp
inc
push
mov
addr16
jecxz
push
or
in
mov
xor
fstl
in
sbb
sub
daa
sahf
test
imul
sbb
push
fistpll
rorb
rcl
addb
jns
leave
jl
xor
sbb
data16
aad
cmpb
clc
sbb
orb
into
mov
pop
ss
xlat
mov
adc
andb
lods
ficomps
roll
mov
or
lock
xchg
jnp
mov
inc
jnp
jae
pop
out
jb
add
jnp
rep
ret
jno
adc
inc
xlat
sbb
sbb
cmpsb
push
ret
xchg
sbb
xor
xor
jb
inc
sub
out
movsl
jg
test
cltd
test
and
mov
pop
or
add
ja
lods
adc
int3
std
arpl
adc
push
sbb
xchg
dec
push
sbb
clc
xchg
test
cmpl
ret
jo
mov
ss
or
adc
daa
jge
insl
jo
mov
jbe
add
push
mov
js
push
ds
mov
xor
stc
call
mov
jmp
mov
inc
push
test
jbe
fsubr
add
pop
mov
jmp
jmp
dec
jns
repz
push
les
loope
xor
push
sub
push
sbb
arpl
hlt
mov
add
mov
data16
push
lret
push
sbb
xchg
lcall
add
mov
pop
icebp
jp
pop
add
movb
inc
ds
sub
dec
add
ret
sub
test
adc
cli
xchg
jno
dec
stos
roll
sbb
loopne
sub
push
adc
mov
pushf
or
aad
pop
sbb
std
imul
call
mov
jmp
js
dec
adc
mov
ja
dec
dec
rolb
xlat
pushf
jecxz
daa
daa
sub
pop
push
sbb
leave
dec
daa
rclb
jle
lcall
out
sahf
ja
and
push
dec
fistpl
inc
ss
icebp
dec
push
pop
icebp
xchg
addr16
out
ror
adc
xor
in
xor
sub
fldl
mov
iret
sbb
enter
shlb
sub
cmpsl
and
push
inc
jle
or
cmp
addl
add
cld
pushf
out
fidivrs
hlt
mov
pop
cmp
jo
mov
push
repz
pop
nop
orb
dec
cmpsb
push
lods
lcall
loopne
jg
out
and
jecxz
jb
roll
push
insb
adc
push
in
insb
repz
repnz
loope
lret
xchg
cmpsw
pop
repnz
dec
repnz
fstl
pop
inc
add
push
xchg
pop
sub
dec
lds
into
loop
push
xchg
dec
pop
sub
ret
or
xchg
push
dec
push
and
mov
sti
and
pop
rcr
loop
mov
lret
add
mov
call
adc
jmp
pop
test
cmp
pop
adc
out
xchg
paddq
push
push
jp
je
lods
cmp
push
ja
inc
push
aam
sbb
xlat
sti
movsb
shlb
js
dec
pusha
setns
cld
push
cmpsl
enter
lahf
push
or
adc
add
dec
mulb
dec
iret
xlat
imul
inc
lahf
sub
adc
subl
dec
test
and
inc
dec
xchg
fisttps
push
cmpsl
or
adc
stos
add
aas
xchg
bound
test
mov
fsts
adc
das
out
das
jecxz
xor
mov
cmp
pusha
pop
push
xor
shl
sbb
inc
jg
in
sbb
divb
mov
xorb
in
mov
sbb
cmc
add
sub
pop
xlat
add
mov
cmp
aam
sub
sarb
or
push
leave
data16
jbe
aaa
mov
dec
fs
mov
inc
jge
insb
outsl
test
ljmp
mov
push
xchg
hlt
and
push
mov
push
xchg
enter
outsb
jnp
clc
lds
rcrl
shlb
cmpl
lcall
sub
sbb
daa
lret
inc
addr16
ret
cld
hlt
jno
sub
shr
repnz
sbb
push
pop
and
loop
pop
adc
adc
imul
jae
scas
popa
daa
in
in
sub
sub
push
out
sbb
outsb
jnp
mov
or
xchg
and
cmp
pop
shrb
in
in
int3
xor
cld
push
xor
decb
rorl
or
push
std
test
sbb
pop
adc
shll
and
inc
fistpll
dec
add
orb
pop
into
in
and
cmp
dec
ljmp
outsl
sti
or
adc
es
adc
enter
out
pop
or
dec
sbb
mov
mov
jno
xchg
in
sub
xchg
fs
mov
clc
push
test
jnp
xor
adc
stc
pop
xchg
sar
add
mov
sbb
adc
mov
jle
mov
push
dec
and
into
test
clc
popa
and
inc
pop
addl
adc
pop
adc
test
jl
pop
insl
xor
decb
inc
js
pop
repnz
xor
bound
std
jl
cmc
rcr
inc
sub
aaa
mov
mov
mov
mov
divl
dec
push
jle
out
or
rolb
lret
cmpsl
mov
mov
mov
sbb
push
and
scas
and
lock
out
jecxz
xlat
xchg
rorl
mov
inc
arpl
int3
or
pushf
or
pop
pop
pop
pop
inc
cmp
jge
inc
cli
push
pop
js
insl
insb
pop
push
mov
fbld
xchg
add
ja
xlat
sbb
mov
addr16
loopne
into
popa
inc
loope
addr16
push
sbb
mov
sub
lret
jae
shrl
adc
icebp
pop
repz
outsb
pop
int3
lcall
add
gs
aad
or
mov
iret
xchg
mov
push
mov
int3
dec
dec
push
or
popf
outsb
push
jnp
pop
mov
cmp
clc
mov
das
sahf
sbb
mov
flds
sub
dec
sbb
add
js
aaa
rcrb
stos
stc
iret
mov
push
outsl
fisubrl
insb
sbb
jl
or
and
stos
sbb
jnp
lret
mov
incl
dec
in
mov
mov
loopne
ljmp
repnz
sub
jle
hlt
mov
sahf
sub
sbb
adc
or
jge
mov
adc
fmuls
xor
aam
push
out
jns
and
mov
pop
mov
jg
sub
out
dec
and
mov
enter
inc
pop
mov
ret
sub
es
insl
fildl
pop
jecxz
jecxz
shll
xchg
jmp
xchg
jno
out
test
inc
push
stos
mul
sub
faddl
pop
jecxz
mov
in
aas
add
lods
sub
dec
sti
and
hlt
icebp
dec
aad
dec
fisubrs
push
aam
in
jmp
lcall
add
imul
mov
push
cvtdq2ps
add
mov
or
jns
xchg
xchg
divl
das
xchg
and
and
cmp
stos
adc
mov
je,pn
mov
jmp
icebp
sbb
loope
pop
xorb
clc
cmp
imul
sub
lret
enter
xor
pop
jne
adc
cmp
push
pop
jnp
cmc
push
pop
push
cld
jnp
pop
lock
cmp
pop
or
push
or
out
cmp
mov
mov
sbb
push
inc
mov
ret
cmc
cmc
sub
lahf
jle
fidivs
pop
mov
mov
pop
push
sub
mov
rclb
dec
inc
add
cmp
jge
push
mov
push
xchg
inc
cs
inc
xchg
ss
jle
xor
hlt
dec
cld
xor
mov
mov
popa
jp
pushf
ja
loop
dec
jno
xchg
in
xchg
inc
pop
xchg
add
xor
imull
xchg
filds
mov
cs
cmp
inc
enter
aaa
mov
mov
repz
dec
cwtl
repnz
aad
sbb
sub
lods
daa
sub
sbb
cmp
shrl
ds
sbb
imul
cs
add
pusha
push
outsb
adc
ret
sub
shrl
xchg
pop
mov
and
decb
jne
jge
pop
call
jae
push
sbb
imul
leave
xchg
icebp
or
stos
add
pop
fildll
push
xchg
fcomip
jmp
lcall
pop
mov
push
daa
sbb
aad
pusha
xchg
jae
inc
sub
mov
jbe
mov
sub
into
push
mov
and
out
iret
jo,pt
jae
sti
pop
and
loop
movsl
mov
adcl
inc
cmp
cwtl
cltd
into
icebp
xchg
pop
daa
xor
mov
ret
fbstp
sub
sbb
call
cmp
mov
sbb
scas
loop
test
outsb
inc
fidivl
jmp
xchg
pop
xor
cs
fcmovnb
ret
mov
es
jne
xor
jge
divl
stos
sub
js
and
add
sub
insl
jmp
in
out
sbb
loope
call
mov
pop
mov
sub
cmp
inc
loope
ja
pop
dec
nop
jbe
adc
inc
pop
fs
adc
sbb
adc
stc
rclb
je
aas
ljmp
cmpsl
push
insl
icebp
xor
dec
jae
mov
xchg
test
pop
bound
shlb
jp
cmp
test
or
xchg
mov
imul
in
fs
in
xor
ret
or
imul
lcall
mov
movsb
push
inc
xor
push
jo
pop
jmp
data16
mov
adc
das
inc
stos
lds
cmp
or
dec
dec
std
mov
jno
xchg
xchg
cli
das
repnz
push
or
sub
jge,pn
icebp
jecxz
or
sub
shl
fistps
ss
mov
push
pop
sbb
lods
add
pop
aad
mov
push
mov
rolb
push
out
or
dec
leave
push
testl
push
pop
push
cmpsl
cmpsl
ret
cltd
adc
loopne
rcll
test
lea
dec
data16
fldcw
stc
mov
test
jae
add
pop
xchg
inc
jmp
pop
pushf
aas
and
andl
jge
lcall
nop
jmp
and
push
test
clc
pop
nop
fsubr
out
lods
mov
jnp
insl
pop
loop
push
add
inc
pop
lahf
lea
push
sbb
mov
mov
or
test
daa
xor
sbb
add
pusha
push
jmp
testb
pop
sbb
pop
lahf
mov
jno
xchg
dec
adc
les
dec
pop
ret
gs
out
movsb
rclb
sub
fdivs
jmp
ret
sbb
aas
jge
ret
push
das
or
inc
lea
cltd
pop
add
inc
and
jp
mov
fcmovne
pushf
lods
xchg
inc
fldenv
flds
shrl
mov
in
sti
sbb
xor
adc
rorl
lea
sub
outsb
mov
dec
daa
push
nop
in
dec
test
push
mov
test
popa
movsl
std
ds
repz
enter
js
jle
in
and
sbb
imulb
in
addr16
cmp
es
imul
fs
rorl
sbb
pop
xchg
stos
mov
mov
fsts
sub
call
es
push
aad
das
mov
push
and
inc
xchg
rorl
lcall
mov
mov
and
and
xor
add
cmc
and
dec
adc
ja
cli
sbb
dec
xchg
mov
sub
repnz
int
xor
testl
cmp
ficompl
movsl
loopne
xchg
loop
lods
sbb
sbb
rcrb
idivb
mov
push
jp
dec
or
or
sub
pop
pop
add
cltd
lret
jb
pop
push
mov
or
lret
in
jl
xchg
or
cwtl
jp
pop
outsb
inc
gs
xor
cmpsl
jno
xor
pop
xchg
inc
jge
mov
cltd
dec
dec
xor
and
pop
mov
push
xor
or
fs
and
push
in
imul
test
jp
aaa
mov
shr
jmp
rclb
pop
inc
inc
outsl
xchg
and
cltd
jmp
xchg
out
jmp
lahf
adc
pop
mov
dec
xchg
movsl
out
mov
xchg
cli
or
inc
dec
scas
movsb
cmp
sbb
push
outsb
popf
xor
xchg
and
dec
in
mov
and
shl
icebp
scas
sub
js
and
cmp
sbb
adc
xlat
out
out
xchg
inc
stc
ss
loop
dec
jbe
or
sbb
imul
loope
push
sbb
xchg
lods
sub
cmp
inc
xor
data16
xor
leave
sahf
loop
sbb
jmp
mov
testb
scas
ret
sti
add
hlt
push
ror
inc
xchg
cmp
gs
fucom
add
mov
mov
mov
imul
sbb
xchg
and
or
enter
lods
dec
dec
push
sbb
dec
mov
inc
jle
hlt
sbb
les
jbe
lods
lret
xor
xchg
mov
popf
test
imul
inc
loopne
jge
leave
mov
ljmp
mov
jl
push
adc
mov
cmp
jno
bound
lret
cwtl
loope
mov
cwtl
out
jl
ds
lds
lret
imul
jg
stos
add
movsl
adc
shl
imul
arpl
in
ret
aad
add
push
mov
xor
addb
nop
mov
cmc
xor
loopne
out
push
inc
repz
das
xchg
sar
mov
cmpsb
inc
cmpsl
cs
add
and
ss
mov
inc
mov
mov
mov
dec
push
or
dec
mov
loop
insb
rcl
jmp
jge
or
jno
lock
or
sbb
stos
movsb
adc
xor
mov
sbb
jecxz
jo
xor
cmp
pop
pop
loopne
and
inc
jecxz
pop
movsb
mov
and
xor
jl
cmp
xor
sub
mov
rolb
jnp
clc
add
cmp
cmpsb
pop
xchg
jl
mov
and
inc
dec
xchg
cmc
mov
push
inc
mov
adc
jle
shll
clc
popf
dec
mov
pushf
fdivrl
inc
iret
add
xchg
mov
aam
xor
inc
push
or
in
sarb
filds
pop
jge
jno
mov
shrb
add
call
je
xchg
shll
aad
jb
add
or
push
fimuls
and
aas
push
arpl
mov
mov
aas
mov
mov
adc
ficoml
arpl
jno
outsb
cli
in
mov
imul
gs
mov
or
insl
scas
pusha
xchg
subb
fdivs
add
insb
imul
pop
jecxz
and
xor
dec
mov
or
arpl
clc
jae
and
cmc
or
add
sbb
insl
loop
cmpsb
and
test
jmp
mov
mov
dec
cli
xlat
roll
cwtl
fidivrl
hlt
mov
jmp
aam
mov
mov
ds
sub
sbb
mov
and
ret
push
cmp
aaa
mov
rcll
mov
sbb
and
jp
scas
jns
leave
jle
and
je
lret
cmp
andl
icebp
jmp
xchg
mov
or
jl
push
mov
mov
adc
pop
not
insl
adc
cmpsb
dec
scas
pop
xchg
sti
fwait
dec
cmpsb
and
mov
test
scas
adc
sbb
ljmp
decl
push
jne
dec
out
and
pop
jno
jl
xchg
xor
outsb
bound
stc
movsl
sub
push
pop
sub
sub
mov
xchg
mov
dec
mov
arpl
adc
das
jecxz
cs
sbb
cwtl
mov
shlb
das
cmp
cmp
les
out
fcompl
in
mov
xor
insb
pop
test
fwait
out
sub
sub
xor
repz
fldenv
push
xor
ficoms
bound
cmp
rolb
popf
mov
adc
sub
inc
inc
or
add
pop
addr16
xor
cmp
mov
push
cwtl
mov
push
fwait
int
test
pop
pop
adc
daa
mov
pop
inc
ret
shl
dec
int
mov
into
sbb
push
imul
sbb
xor
mov
mov
push
stos
mov
sub
cmp
ret
pop
jae
das
lret
jle
or
or
pop
xor
sub
mov
jp
lret
arpl
sbb
jge
jg
xchg
jbe
mov
xchg
lds
fwait
xor
adc
jmp
sub
insb
imul
and
push
mov
xchg
lcall
fmuls
cmp
addr16
inc
scas
decl
es
push
das
fcomps
es
out
mov
cwtl
ret
out
xchg
shll
pushf
push
cmp
adc
stos
jge
dec
fstpt
cmp
mov
flds
popf
inc
cwtl
sti
or
in
sbb
inc
test
scas
call
and
fadd
and
shl
nop
jno
or
add
stos
cmp
pop
lahf
add
in
bound
cmpsl
inc
mov
jecxz
xchg
inc
in
or
out
jmp
inc
push
xlat
mov
sbb
mov
jbe
xor
xor
and
inc
std
xchg
sub
push
adc
push
lret
cmc
mov
imul
adc
dec
xchg
outsl
mov
fdivr
dec
out
mov
push
insb
adcl
iret
popf
mov
dec
int
mov
push
cmpsb
mov
arpl
xchg
movsb
pop
out
push
adc
inc
pusha
orl
xchg
cmp
add
xchg
notl
dec
add
mov
ret
les
xchg
jge
push
lahf
mov
mov
movsl
jae
mov
push
xchg
sub
imulb
or
inc
push
sti
sub
inc
mov
pop
add
les
or
xchg
pmulhuw
arpl
push
xchg
xor
xorl
jecxz
mov
adc
dec
mov
mov
pop
in
out
mov
mov
ret
fcoms
ret
cmpl
and
sub
cmp
out
fadds
hlt
mov
les
or
lcall
push
inc
mov
cli
sti
xor
mov
and
push
jp
jb
mul
fcomip
jg
nop
inc
sti
and
cmp
mov
jp
shl
in
pop
xchg
inc
aam
das
pusha
aaa
icebp
mov
pop
out
xlat
add
sub
and
ds
sti
roll
movsl
cmp
xlat
ret
pushf
pop
jnp
in
repz
jmp
dec
push
dec
ret
mov
shrl
hlt
push
or
xor
push
sub
pop
cmp
test
add
jge
mov
stos
lret
scas
fidivl
xchg
cmpsb
arpl
stos
adc
popa
mov
fnstsw
and
push
jge
dec
mov
scas
or
lahf
pusha
movsl
ljmp
mov
or
cmp
add
fisttps
sar
lods
push
xor
aam
sahf
xchg
mov
imul
aaa
mov
sub
stc
mov
cmpsb
push
xor
push
outsl
cmp
xchg
or
scas
rorl
stos
add
fs
cmpsl
push
dec
daa
or
and
in
mov
mov
rorl
sbb
test
inc
arpl
jo
ret
and
and
mov
cmp
shrb
and
gs
ficomps
pop
mov
rolb
je
jns
mov
xchg
dec
push
cmp
mov
mov
pop
xchg
lods
add
dec
adc
add
outsl
xor
nop
mov
insl
hlt
mov
pop
mov
mov
into
stc
lods
mov
loopne
aaa
pop
dec
sbb
pushf
in
push
inc
out
jne
lcall
and
rclb
push
push
fistl
notb
icebp
pop
inc
pop
pop
iret
imul
jle
xlat
add
jge
jmp
leave
mov
mov
aas
daa
lcall
flds
out
popa
cmp
mov
popa
mov
mov
jp
out
es
fcomip
dec
fnstcw
push
mov
sbb
insl
fwait
test
push
mov
xor
sub
pop
pushl
mov
fucomi
sbb
push
pop
popa
dec
in
fldenv
xlat
popa
dec
adc
stc
loop
or
inc
js
xchg
jnp
fcmovne
iret
lret
sbb
fstps
pop
ljmp
mov
and
mov
les
xchg
daa
add
inc
add
adc
inc
mov
and
cmp
mov
push
divb
mov
dec
inc
adc
int
pop
popa
dec
fldt
adc
rclb
pop
fistpl
adc
xchg
rorl
adcb
pop
icebp
in
fbstp
add
decb
ret
lds
push
lret
push
sarl
repnz
jns
add
jnp
ja
inc
sbb
sbb
push
outsl
jecxz
iret
sub
push
stos
mov
enter
enter
pop
call
int
inc
les
jmp
psrlq
mov
mov
or
mov
lret
push
xchg
fadds
mov
mov
aad
mov
ret
mov
inc
push
je
lcall
adc
dec
push
nop
push
adc
pop
es
lret
xchg
icebp
push
aad
mov
gs
cld
dec
pop
addr16
mov
out
sahf
je
aam
push
and
or
outsl
mov
into
add
test
lock
mov
push
xchg
mov
dec
adc
push
mov
or
dec
rclb
ja
or
sub
arpl
ret
stos
jbe
xor
inc
scas
mov
enter
cltd
sub
mov
sbb
ret
jmp
es
or
xor
dec
pop
fs
aas
mov
push
inc
and
push
ds
fistpll
call
ss
movsl
das
aaa
jae
movsb
sti
es
jbe
in
xchg
arpl
mov
cmp
pop
jl
insb
call
cmpsl
or
ds
repnz
sub
jg
sub
sarl
arpl
out
mov
add
int
int
mov
icebp
push
fldl2t
mov
sbb
or
jno
pop
ss
fdivp
out
xchg
push
sbb
cmp
popa
in
sub
sbb
add
loopne
push
cltd
cmp
push
dec
xchg
clc
ret
rcll
shlb
arpl
pop
xchg
lock
js
push
insl
cmp
test
pop
fldcw
cmp
or
xchg
pop
into
cmpsb
mov
movsl
cmpsb
in
inc
xor
mov
out
out
fsts
and
dec
adc
adc
shlb
sub
mov
loopne
sub
and
dec
ljmp
adc
xchg
pushl
xor
lret
adcb
mov
adc
stc
inc
mov
mov
inc
popf
movsl
mul
mov
pop
adc
sar
xorb
fiaddl
push
push
ret
pop
mov
pusha
out
push
add
cmp
jg
xchg
inc
ror
inc
dec
aaa
outsb
and
sub
jmp
xor
call
imul
sbb
lds
inc
shll
fistl
dec
adc
movsl
xchg
popf
xchg
sub
rcrb
scas
cmpsb
xor
mov
mov
inc
shlb
dec
xor
popf
pop
or
jp
push
lret
and
and
mov
lock
sti
xor
mov
pusha
in
push
adc
fnstenv
jo
stc
shrl
sub
nop
push
sub
out
loopne
jno
jl
sub
ret
in
xchg
jmp
pop
jb,pt
std
movsb
mov
lea
pop
or
mov
jl
inc
cmp
push
imul
mulb
or
clc
xchg
push
les
xchg
outsb
push
mov
enter
dec
lahf
add
inc
imul
mov
cmp
lcall
popf
pop
loop
clc
insb
cmp
inc
inc
leave
adc
add
sti
push
aaa
mov
ret
push
nop
sbb
imul
bound
adc
xor
mov
sbb
mov
jecxz
jle
push
pop
sbb
push
jmp
stos
fisttpll
push
orb
inc
pop
xchg
cmc
inc
lahf
jl
in
mov
push
inc
jne
add
out
test
pop
sub
stos
push
sub
lahf
add
mov
cld
push
fisubs
and
insl
rcl
xlat
pop
add
sbb
popa
xchg
add
xchg
inc
jmp
arpl
ja
std
loope
lock
jns
push
orb
aam
inc
adc
and
movsb
mov
or
out
inc
fists
inc
xchg
insl
sub
mov
jb
xlat
pop
sbb
adc
jg
jmp
push
mov
sarb
imul
fsubs
aad
es
inc
add
jmp
mov
mov
push
push
add
shlb
adc
fnstenv
scas
xlat
lea
andl
ret
insl
mov
sbb
sub
lahf
inc
fst
add
mov
ss
loope
cmp
aam
sub
sub
cld
adc
ds
xor
xor
outsl
pop
cwtl
sub
push
dec
mov
inc
push
cwtl
sbb
cli
aam
sub
xorb
stos
xor
call
ljmp
fsubrl
inc
push
push
je
xchg
clc
cwtl
lods
ficoms
cmp
jb
push
cmpsb
dec
inc
or
cmc
ret
fidivrl
cmp
pop
stos
push
test
aaa
loope
dec
les
pop
sub
jnp
mov
bound
mov
mov
jne
jae
in
push
sbb
lods
rcll
mov
xor
mov
dec
lcall
adc
mov
mov
test
lods
push
movl
les
repnz
mov
dec
sub
cvtps2pd
hlt
pop
inc
sbb
xor
ljmp
add
loope
dec
cwtl
lock
jbe
pop
push
jmp
mov
or
push
xor
mov
dec
or
in
mov
mov
add
rolb
