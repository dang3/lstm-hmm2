in
fmull
add
out
add
mov
add
jle
add
cmp
add
push
or
rorl
loop
or
out
pop
cmp
push
or
cmp
mov
or
scas
movsl
pop
cmp
movsl
or
cmpsb
cltd
and
fiadds
cmp
sbb
sbb
cs
pop
cmp
push
sbb
loop
sbb
mov
pop
cmp
shrb
testb
cmp
loope
cmp
and
jle
push
cmp
sbb
cmp
pop
cmp
cmp
inc
aas
cmp
inc
sub
scas
fcoml
cmp
dec
cmp
push
movsb
sbb
cmp
cmp
and
cli
fwait
or
divb
add
stos
jo
cmp
scas
xor
incb
data16
cmp
out
cmp
mov
es
sbb
inc
jmp
cmp
fs
cmp
and
cmpsb
or
cmp
or
cmp
xor
out
ss
inc
sbb
cs
pop
cmp
jg
cmp
subb
push
imul
mov
sbb
out
clc
xchg
bound
push
into
popa
cmp
jge
cmp
and
cs
cmp
and
xchg
xchg
cmp
dec
cmp
push
cmp
or
cmp
push
xchg
cmp
pop
jg
dec
outsl
cmp
inc
cmp
pop
pop
cmp
add
ds
sub
into
sti
inc
cmp
cmp
pushf
cmp
pushf
cmp
adc
cmp
sub
orb
sahf
jns
cmp
jecxz
cmp
popf
cmp
mov
cmp
ljmp
xchg
jmp
push
cmp
movsb
adc
data16
cmp
shll
out
pop
cmp
xor
stos
mov
leave
cmp
inc
cmp
sub
adc
out
cs
lcall
mov
cld
cmp
jbe
cmp
or
cmp
mov
aaa
cmp
add
mov
cmp
cmp
jl
cmp
push
bound
into
xchg
cmp
push
cs
jp
cmp
test
cmp
cwtl
out
cmp
inc
cmp
or
scas
cmp
cmp
or
xor
iret
cmp
mov
cmp
into
cmp
jnp
cmp
sbb
cmp
dec
cmp
aaa
sub
push
pop
adc
cmp
mov
cmp
scas
cmp
xchg
lods
cmp
fiadds
cs
add
movsl
xor
cmpsb
mov
cmp
daa
cmp
pop
cmp
sbb
cmp
pop
dec
cmp
into
cmp
test
cmp
fnstcw
mov
repnz
insb
or
cmp
sub
cmp
add
cmp
popf
mov
cs
popa
cmp
xchg
cmp
fdivrs
push
mov
pop
cmp
pop
cmp
in
cmp
pop
mov
stos
fmull
cmp
push
mov
mov
sub
cmp
hlt
jmp
cmp
mov
cmp
lret
out
cmpl
cmp
xchg
cmpb
flds
cmp
ret
cmp
mov
push
cmp
dec
cmpsb
cmp
outsl
cmp
mov
cmp
mov
cmp
fld
cmp
inc
sub
dec
jnp
cmp
mov
stos
dec
xchg
scas
movsb
inc
cmp
adc
jle
cmpb
es
cmp
cmpl
mov
cmp
fimull
cmp
ds
cmp
cmp
loop
cmp
mov
mov
cld
cmp
or
sbb
out
xor
cmp
mov
sub
cmp
jp
cmp
pop
cmp
sarb
cmp
jo
dec
pop
out
cmp
out
add
and
lahf
cmp
mov
cmp
inc
xor
pop
push
out
into
imul
or
mov
aad
cmp
call
mov
cmp
mov
cs
into
cmp
xchg
xor
xchg
cmp
outsb
or
jb
cmp
sbb
dec
and
pop
cmp
cmp
dec
test
pop
or
cmp
mov
cmp
in
cmp
inc
int3
cmp
sub
cmp
aaa
cmpb
jae
cmp
add
out
jmp
es
je
dec
aaa
sarb
mov
jne
ret
cmp
cmp
mov
cmp
insb
sub
fdivp
outsb
cmp
cmp
sub
sub
cmp
into
xchg
cmp
in
xor
xchg
or
push
jo
cmp
pop
cmp
or
mov
addr16
lahf
cmp
jecxz
cmp
lcall
dec
jg
lcall
cmp
fidivrl
ficomps
cltd
cmp
es
cmp
pop
cmp
ret
cmp
idivb
sahf
dec
xchg
cmp
ret
dec
push
lock
dec
cmp
lock
outsb
dec
cmp
in
cmp
or
mov
cmp
fwait
mov
data16
cmp
add
cli
dec
jg
negb
fistpll
push
mov
inc
cmp
into
inc
cmp
aaa
mov
push
insl
lret
cmp
mov
cmp
cmp
xchg
jmp
cmp
out
ds
cmp
lds
cmp
stc
mov
cmp
in
aam
push
mov
cmp
xor
cs
jmp
cmp
movsb
cmp
mul
cmp
fs
mov
imul
cmp
mov
andb
cmp
fmuls
pusha
outsb
cmp
push
sarb
cmp
cmp
jae
cmp
jbe
into
adc
popf
sub
cmp
ljmp
jle
movsb
cmp
add
fisttpll
cmp
jmp
movsl
cmp
or
push
dec
cmpsl
cmp
fiaddl
cmp
mov
cmp
andl
push
pop
mov
cmp
or
inc
xor
cmp
dec
mov
cmp
addb
es
into
or
cmp
push
movsb
cmp
ja
cmp
mov
aad
cmp
push
cmp
xor
cmp
lea
bound
insb
cmp
repnz
xor
dec
cmp
aaa
xchg
cmp
adc
cmp
mov
mov
cmp
xchg
jno
out
cs
shlb
jb
jl
neg
ss
jp
cmp
cs
mov
cmp
jmp
cmp
stos
inc
cmp
cmpsb
insb
sahf
cmp
ss
pop
in
cmp
cmp
jo
cmp
dec
das
cmp
pop
push
cmp
or
cmp
out
xchg
enter
cmpb
std
lcall
dec
test
idivb
insl
cmp
rcrl
cmp
inc
adc
scas
xor
cmp
mov
cmp
adc
cs
mov
sub
cmp
dec
cmp
stc
in
cmp
je
cmp
dec
dec
cmp
scas
jmp
cmp
jge
cmp
cmc
xchg
cmp
out
sub
into
sbb
lcall
sti
xchg
cmp
popf
cmp
and
cmp
in
cmp
pop
gs
pop
mov
cmp
jmp
cmp
fwait
pop
cmp
enter
movb
data16
cmp
jmp
cmp
xor
pop
pop
ljmp
shl
cmp
mov
cmp
loop
cmp
aaa
push
cmp
ja
cmp
mov
xchg
cmp
repnz
dec
pop
cmp
pop
cld
cmp
in
cmp
jg
cmp
cmp
cmp
push
xchg
cmp
or
movsb
cmp
push
pop
cmp
in
repz
fildll
lret
cmp
cwtl
jmp
cmp
outsl
cmp
push
cltd
cmpb
into
cld
cmp
add
cmp
fidivrs
enterw
insl
push
ds
mov
add
lods
cmp
clc
in
scas
lret
fidivrl
adc
cmp
les
cmp
cmp
cmp
jle
pop
ds
cmp
mov
dec
cmp
into
ret
mov
cmp
push
ja
xchg
or
cmp
inc
cmpsl
cmp
outsb
xor
stos
scas
cli
cmp
sub
mov
scas
lock
cmp
loop
add
mov
or
cmp
and
or
out
mov
cmp
dec
cmp
fisubl
cmp
decb
push
ds
and
inc
add
fimuls
cmp
stos
cmp
test
jp,pt
dec
cmp
jb
add
mov
cmp
cmp
xchg
cmp
jb
aas
cmp
hlt
imul
inc
xchg
bound
cmp
push
pop
cmp
push
add
enter
add
cmp
jns,pn
cmp
xchg
cmp
pop
lret
cmp
fdivrs
xchg
sub
dec
jle,pt
cmp
push
pop
cs
scas
mov
cmp
insb
ds
cmp
sbb
cmp
mov
cmp
cmp
cmp
lock
lock
cmp
push
nop
loopne
outsb
arpl
cmp
mov
jno
bound
ds
nop
push
cmp
cmp
cmp
xchg
mov
cmp
mov
pushf
or
push
and
aas
push
xchg
pusha
cmp
fisubrs
es
pop
cmp
dec
loope
dec
push
int3
cmp
push
cmp
xchg
xchg
out
cs
jl
cmp
inc
mov
sahf
in
iret
ds
xchg
mov
ds
pop
cmp
dec
cmp
xchg
cmp
xchg
in
cmpb
adc
into
mov
ds
loope
outsb
jb
cmp
jnp
out
cmc
sarl
sarb
jle
ret
repnz
cmp
dec
and
cmp
movsl
ds
loopne
mov
ret
cmp
sbb
ds
shrb
ds
aas
dec
in
cmp
push
or
inc
fdivrl
cmp
outsl
sub
dec
popa
adc
add
jns
into
cmp
xchg
into
nop
push
aas
mov
sub
cmp
fs
cmp
aam
cmp
xchg
jecxz
mov
push
in
cmp
cli
or
cmp
cmc
sbb
xchg
xor
ds
cmp
jp
cmp
add
cmp
inc
movsb
aas
out
push
ds
push
cmp
jmp
mov
cs
xor
dec
adc
test
inc
int
cmp
mov
rsqrtps
bound
jbe
xchg
and
ds
inc
bound
jb
and
cmp
push
cmp
xchg
inc
jb
scas
aaa
cmp
cs
push
cmp
jbe
or
push
cmp
cmp
into
int
cmp
stos
fdivrs
mov
ret
and
sub
mov
cmp
sarl
cmp
ja
cmp
mov
jb
cmp
hlt
add
lret
inc
cmp
xchg
push
cmp
dec
cmp
jb
cmp
xor
pop
cmp
inc
lods
ds
or
cmp
test
ds
cmp
xor
cmp
xchg
mov
cmp
cmp
xchg
out
ds
xchg
adc
adc
into
jecxz
ds
cmp
sbb
cmp
icebp
adc
rolb
cmp
repnz
cmp
aaa
pop
cmp
scas
xor
ds
les
cmp
int
cmp
push
mov
aas
push
ret
aas
movb
ds
dec
scas
cmp
dec
mov
cmp
inc
jae
cmp
push
in
cmp
push
jp,pt
insb
cmp
ljmp
sahf
shll
cmp
sub
in
out
int
cmp
cwtl
das
inc
ds
scas
cmp
mov
cmp
push
push
xor
cmpsw
dec
cmp
mov
aas
push
sbb
negb
cmp
enter
sbb
cmp
mov
ds
and
ss
out
mov
cmp
or
inc
rolb
cmp
sub
inc
fidivrl
cmp
cmpsb
pop
cmp
and
push
cmp
add
cmp
push
cmp
cmp
aam
cmp
daa
in
outsb
dec
ja
adc
inc
xlat
movsb
cmp
dec
cmp
xchg
cmpl
ljmp
cmp
add
cmp
and
aas
jbe
push
cmp
bound
jle
aas
ds
lahf
aas
jbe
roll
mov
inc
dec
nop
sub
cmp
push
cmc
cmp
mov
xlat
aaa
cmp
add
cmp
aad
inc
mov
sbb
ds
cmp
pop
xchg
cmp
ljmp
aas
repnz
cmp
jle
cmp
repnz
pop
cmp
cmpsl
mov
ss
inc
fimull
std
aas
push
add
aas
pop
xchg
sub
movl
or
scas
stos
sub
sbb
jb
mov
add
cli
mov
loop
cmp
inc
push
scas
inc
cmp
scas
sbb
ret
aas
cs
cmp
pop
dec
cmp
mov
ror
ds
xchg
or
cmp
sarl
push
popl
cmpsb
adcl
xchg
cmp
repnz
inc
aas
push
or
pop
cmp
out
cmp
inc
push
cmp
or
cmp
or
ds
aas
cs
es
js
inc
dec
xchg
aam
ds
sarb
cmp
mov
out
pushf
loop
ficoms
out
ds
es
out
sahf
mov
cmp
push
inc
pop
and
ds
mov
cmp
mov
scas
xor
add
cmp
les
xchg
int
and
js
cs
aas
lret
jle
jl
push
jbe
ds
std
cmp
mov
cs
pop
cmp
es
cmpsb
xchg
sub
pop
imul
ja
ds
or
sbb
jb
mov
inc
inc
into
and
cmpsb
push
stos
aas
out
in
inc
shrl
inc
push
jnp
inc
push
xchg
inc
cmp
lret
adc
mov
mov
mov
imul
scas
sbbl
push
inc
ds
sahf
faddl
push
outsb
adc
inc
sahf
lods
int3
cmp
mov
inc
push
sbb
push
mov
add
dec
xor
cmp
xor
mov
out
dec
inc
aas
fisubl
arpl
push
loopne
inc
push
and
ds
rcrl
outsb
mov
inc
jbe
cmpl
into
aas
insl
aas
mov
sahf
sarl
mov
inc
into
ret
test
inc
ss
add
pop
push
sti
inc
stos
mov
inc
mov
lret
cmp
push
out
ds
cmp
jle
mov
sbb
sti
aas
mov
stos
mov
scas
mov
mov
inc
xor
ds
test
aas
dec
out
inc
inc
pushf
int
outsb
xor
inc
cs
fdivrs
or
dec
cmp
fists
cmp
mov
aas
dec
imul
push
cmpsl
fdivrs
out
lret
jp,pn
aas
mov
pop
inc
into
sub
cmp
loopne
cmp
mov
cmp
xchg
inc
cmp
sbb
mov
push
outsl
ja
out
cltd
idivb
ficompl
jo
push
fwait
cmovno
imul
xchg
pop
xchg
lcall
push
in
sarb
test
aas
sub
out
cmp
push
lock
inc
push
push
cmp
push
adc
inc
outsb
pop
sbb
jp
sahf
cmp
adc
cmp
shlb
inc
out
mov
in
scas
loope
ds
or
cmp
mov
ficoms
mov
cmp
mov
jne
push
pop
inc
outsb
and
mov
push
jle
xor
inc
iret
idivl
fidivrs
xchg
cmp
xor
cmp
fiadds
cmp
lea
inc
push
aaa
cmp
xchg
pop
aas
in
aas
out
xchg
jmp
adc
inc
pop
mov
or
cmpl
xchg
mov
xor
push
jns
rorl
cs
lcall
pop
cmpsb
inc
out
movsl
mov
inc
outsb
adc
aas
mov
in
dec
push
and
fiaddl
stos
inc
jle
mov
jb
out
fimuls
cmp
lcall
scas
fistpl
inc
es
adc
push
push
push
push
cltd
adc
retw
mov
loop
and
into
roll
cli
inc
push
insb
inc
cmp
into
inc
decb
inc
lret
inc
push
mov
cld
cmp
arpl
cmp
push
dec
inc
mov
push
inc
mov
cmp
shll
inc
ss
stos
inc
popa
and
aas
inc
xchg
fistpll
out
push
inc
outsb
in
outsb
cs
mov
dec
movsb
inc
mov
push
test
cmp
incb
loop
cmp
mov
sub
lods
cmp
push
insl
scas
cmp
mov
cmc
cmp
jb
cmp
mov
adc
sahf
add
outsb
stos
push
aas
jp
mov
out
cwtl
jnp
adc
push
cmp
adc
ja
mov
inc
adc
jmp
inc
out
mov
out
data16
loop
stos
inc
jbe
adc
mov
jmp
fidivs
cmp
les
inc
mov
add
es
ds
test
cmp
fidivrs
mov
inc
lret
inc
lcall
scas
aas
loopne
jle
clc
cmp
jbe
addb
insl
cmp
gs
mov
ret
cs
jnp
sahf
cwtl
add
mov
repz
cmp
push
cmp
repnz
aas
mov
and
test
cmp
xorl
push
push
pushf
cmp
pop
in
inc
jge
aas
push
jge
cmp
fmull
xor
ds
xor
jb
adc
cmp
and
cmp
scas
mov
aas
cs
lea
adc
outsb
jbe
cmp
frstor
cmp
jmp
cmp
mov
clc
inc
out
imul
into
enter
js
inc
pop
sub
cmp
or
aas
ss
jne
ds
out
jbe
cmp
icebp
adc
es
inc
lret
inc
pop
mov
cmp
in
dec
cmp
orl
ss
jmp
dec
add
mov
daa
inc
out
pop
lods
cmp
call
pop
inc
cs
arpl
cltd
idivl
push
subl
push
out
cmp
dec
xchg
push
loope
inc
cs
cld
inc
cs
pushf
cmp
cld
mov
cmp
push
shrl
inc
es
xchg
inc
outsb
es
cmp
fwait
in
data16
int3
cmp
xor
dec
or
push
inc
inc
push
fdivrl
cs
daa
inc
mov
lcall
mov
cmp
cmp
push
jle
cmp
inc
mov
fidivrl
cmp
jno
inc
mov
push
push
fwait
inc
loop
stos
cmp
repnz
dec
inc
out
in
cmp
addr16
dec
sub
inc
outsb
test
mov
lds
out
popa
mov
cmp
mov
mov
sahf
dec
fiadds
cmpsl
dec
inc
jb
jne
mov
inc
ljmp
inc
xchg
adc
cmp
jg
cmp
cs
inc
push
push
sahf
inc
scas
mov
imul
add
inc
cmp
dec
pop
inc
outsb
fs
cmpsb
out
sub
push
loop
and
inc
notb
cld
cmp
mov
dec
addl
mov
not
in
outsb
rol
mov
mov
data16
inc
sahf
inc
inc
fiadds
jbe
into
mov
cmp
out
and
cmp
jl
inc
outsb
insb
imul
lods
adc
xchg
leave
mov
fmuls
cs
xchg
inc
and
inc
out
test
negw
out
and
inc
mov
mov
pop
adc
mov
lcall
inc
loop
nop
cmp
jno
ds
inc
movsl
inc
lcall
cmp
push
test
out
ljmp
scas
mov
shl
pop
ds
bound
jbe
idivb
dec
je
cmp
shrb
inc
fisubrs
std
cmp
push
aas
je
push
dec
sbb
fidivs
inc
shl
xchg
cmp
lds
es
pop
ds
lods
xor
sub
inc
dec
xor
cs
imul
push
cmp
jp
dec
inc
ds
dec
inc
and
inc
fimuls
push
inc
dec
icebp
inc
inc
lret
sbb
arpl
inc
push
add
ds
fldcw
aas
push
aad
cmp
sub
xchg
pusha
inc
mov
xor
push
cs
outsb
sbb
sub
fildl
adc
cs
cmp
daa
inc
imul
ret
out
cmp
cmp
inc
frstors
inc
not
leave
inc
dec
jo
push
push
arpl
inc
mov
mov
cltd
idivl
push
popf
sbb
inc
fidivrl
addr16
push
mov
inc
inc
ds
xlat
inc
ljmp
inc
jp
and
cs
test
inc
xchg
cmp
sbb
aas
inc
xor
mov
cmp
sbb
inc
out
mov
cmp
mov
inc
mov
mov
sahf
cmpsb
cmp
mov
scas
inc
cmp
adc
jbe
bound
lds
inc
inc
pop
adc
cmp
repz
fldcw
inc
mov
sub
inc
jae,pt
inc
jbe
inc
xchg
test
inc
jbe
leave
inc
sahf
pop
sti
cmp
imul
xchg
mov
pop
push
loope
ss
inc
into
xchg
mov
inc
dec
out
cmp
dec
loope
cmp
out
mov
fidivrs
rolb
lcall
movsw
sti
cmp
xor
ds
cmp
mov
pop
sbb
jecxz,pt
inc
loop
pop
inc
ds
daa
inc
ret
cmp
cmpsb
jbe
aas
jle
cmp
xchg
icebp
inc
jle
cs
jg
inc
push
dec
jl
and
outsb
cmp
jnp
ret
aas
outsb
or
inc
jle
rolb
push
xlat
inc
incb
jp
sbb
aad
cmp
adc
cmp
decb
inc
sbb
cmp
cmp
ds
push
inc
cmpsb
test
inc
and
lret
cmp
stc
movb
mov
cs
xor
scas
stos
sub
push
fsubs
cmp
push
out
inc
mov
cmp
adc
inc
into
rcrl
inc
outsb
call
sub
pop
xor
cmp
pop
fnstcw
cmp
dec
testb
ds
mov
cmp
cld
cmpsb
inc
test
ds
pop
mov
icebp
fildl
bound
cmp
jbe
out
dec
pushf
inc
ficomps
adc
dec
fimuls
scas
aaa
dec
inc
lret
cmp
inc
imul
sahf
sbb
jp,pt
lds
movsl
jmp
cmp
outsb
scas
sbb
inc
sub
aas
into
rorl
outsb
ret
mov
cmp
xchg
inc
mov
andb
imul
mov
or
cmp
stos
inc
and
jo
scas
mov
cmp
aas
fiadds
iret
sub
mov
aas
mov
test
lds
cmp
cmp
pop
cmp
dec
cmp
mov
pop
repz
rolb
xchg
pop
inc
sarb
inc
mov
mov
cmp
jl
inc
scas
es
cld
arpl
ljmp
data16
cmp
jb
add
cs
repnz
inc
ljmp
cs
inc
push
sub
ds
mov
cmp
mov
inc
xchg
lock
dec
fwait
inc
out
push
push
cmp
mov
inc
into
cs
inc
ficomps
push
cmp
dec
jo
ds
test
inc
dec
add
data16
and
inc
out
cmp
inc
cs
mov
scas
push
mov
aas
loop
jge
dec
mov
pop
inc
movb
mov
inc
into
ss
inc
adc
inc
mov
push
inc
mov
push
sub
cmp
mov
xchg
inc
out
repnz
aas
sarb
scas
inc
add
sahf
dec
sbb
mov
cmp
bound
inc
push
leave
xor
addb
push
xorl
pop
fwait
lods
inc
lret
inc
mov
aad
mov
jae
inc
ret
inc
push
sbb
inc
test
inc
out
sbb
mov
in
push
repz
cmpsb
pop
xchg
ds
sbb
fidivrs
cmp
mov
arpl
cmp
push
mov
inc
incb
mov
aaa
push
inc
cs
inc
xchg
cmp
inc
js,pn
cmp
out
xchg
adc
mov
inc
jle
mov
out
lea
inc
push
call
fldl
jb
cmp
push
inc
sbb
inc
jbe
xor
xchg
outsb
fs
cmp
pusha
bound
pop
ret
inc
mov
enter
fprem1
cmp
sbb
add
cmpsl
or
cmp
cmp
jbe
inc
movsl
pop
inc
sahf
sub
inc
dec
sub
inc
xchg
sub
stc
inc
cmpsb
sbb
mov
inc
into
mov
mov
cmp
adc
cs
repnz
cmpsb
shlb
push
ja
inc
mov
inc
andb
movsl
mov
ds
xchg
or
scas
inc
ss
adc
push
in
inc
inc
ret
inc
adc
inc
jbe
fadds
cmp
inc
idivb
pop
testl
cmp
and
cmp
dec
bound
xor
inc
scas
push
inc
ds
aad
inc
mov
mov
cmp
push
cmp
je
jp,pt
sbb
inc
jns
ds
enter
add
cmp
mov
inc
out
inc
sbb
lret
pop
sbb
cld
push
inc
push
ljmp
into
pop
sbb
lret
ds
xor
pusha
cmp
and
leave
in
cmp
push
jae
cli
sub
ds
aam
cmp
push
shll
sarl
sbb
cmp
xor
cmp
sahf
pop
inc
push
leave
jns
cs
adc
push
outsb
ds
fisubrs
inc
cli
sub
inc
push
jmp
out
cmp
scas
pop
aas
scas
push
ds
lods
ds
pop
mov
pop
inc
sbb
xchg
xchg
aas
into
mov
inc
dec
mov
cmp
faddl
stos
dec
jmp
inc
decb
add
jle
faddl
pop
dec
inc
jbe
ret
sbb
ds
jmp
and
cmp
jl
inc
fiadds
in
aas
cmpsb
int3
push
dec
scas
push
inc
dec
or
inc
incb
push
dec
lds
cmp
add
inc
mov
add
ds
cmp
dec
jle
mov
dec
xchg
inc
adc
adc
dec
sahf
cmp
pop
mov
aas
push
call
add
cmpsb
mov
cmp
adc
mov
cmp
insl
das
inc
outsb
pop
fnstcw
shlb
inc
int3
jecxz
stos
mov
sub
aas
inc
push
inc
movsl
cmp
push
faddl
movsb
sahf
inc
ss
xor
int3
icebp
ds
pop
mov
inc
insw
out
pop
sub
cmp
dec
jns
into
mov
inc
repnz
jb
out
push
gs
mov
dec
pop
mov
push
inc
fmulp
cmp
jecxz
cmp
pop
fs
scas
push
gs
into
xor
pop
cmpsl
xchg
xchg
inc
lcall
cmp
outsb
ss
cs
mov
dec
ds
push
inc
inc
outsb
cwtl
adc
aas
mov
or
outsb
out
cmp
outsl
aaa
cmp
jp
mov
jle
int3
cmp
leave
cmp
push
pop
sbb
xor
inc
cli
loopne
inc
outsb
jl
inc
adc
mov
inc
cmpsb
mov
jecxz
pop
mov
mov
sahf
xchg
out
stos
add
adc
cli
inc
loop
stos
inc
scas
insl
adc
jb
cs
inc
pop
xchg
ds
mov
push
mov
cmp
cmpsb
lret
sbb
scas
js
inc
loop
push
inc
cmp
roll
mov
cwtl
inc
dec
repnz
fidivl
cmp
pop
xor
loopne
jle
mov
pop
std
fiadds
pop
or
mov
inc
mov
mov
rorl
jb
inc
shlb
daa
aas
cmp
lods
cmp
xchg
mov
lods
addr16
dec
xor
sti
cmp
ss
inc
into
jmp
cmp
pop
pop
dec
pop
mov
cmp
dec
cmp
dec
je
into
and
cmp
int
inc
ss
cs
mov
cmpsb
push
aam
push
fdivrs
inc
inc
stc
inc
scas
pop
cltd
inc
sbb
push
adc
aas
cmpsb
jo
dec
cs
sub
adcl
jle
cmp
cmp
pop
mov
ds
repnz
sub
mov
push
iret
inc
mov
push
popa
inc
cli
add
lock
sub
cmp
xchg
inc
out
push
inc
out
scas
ljmp
inc
add
pop
mov
cmp
imul
idivb
dec
out
pop
stos
inc
push
jg
inc
and
or
mov
xchg
push
mov
mov
outsb
fildll
cs
inc
add
add
cmpsb
xchg
ds
int3
cmp
in
add
push
mov
cmp
cmp
mov
aas
notb
hlt
cmp
ljmp
inc
jle
and
push
xchg
cmp
pusha
or
xor
jbe
cmp
out
mov
inc
out
jge
mov
or
es
test
fsubp
inc
into
dec
inc
inc
add
loope
mov
les
push
gs
xchg
or
movsl
fidivrl
cs
and
push
lods
inc
mov
or
cmp
sub
dec
inc
push
mov
inc
jnp,pn
inc
cs
inc
scas
stos
inc
dec
fiaddl
inc
outsb
and
dec
add
aas
into
cmpsb
test
cli
or
outsb
push
inc
pop
dec
inc
inc
xchg
dec
cmpsb
loopne
cmp
sub
xchg
faddl
xchg
cmp
cmp
divl
cmp
dec
cmp
inc
xor
push
test
inc
dec
and
cs
inc
fisubl
or
ds
cmp
add
in
or
inc
outsb
xchg
subl
repnz
and
mov
addl
stos
mov
inc
mov
insb
popl
mov
cmp
and
cmp
xchg
dec
xchg
xor
push
daa
cmp
push
adc
cmp
xor
cmp
cmp
xor
and
ret
ret
inc
dec
ds
sahf
mov
ds
repnz
mov
cli
cmp
pushf
movsb
dec
jb
dec
cmp
stc
sti
inc
cmpsb
add
cmp
pop
ja
sbb
mov
dec
xchg
orl
cmp
cmp
mov
cmpsb
and
cmp
pop
in
negb
inc
outsb
inc
add
dec
inc
cmpsb
mov
pop
cmp
inc
push
cmp
movsl
or
jle
insb
inc
scas
add
jnp
sub
pop
jne
ds
in
cmp
ss
cmp
into
cmpsb
dec
cmp
push
and
inc
pop
add
cmp
sub
test
adc
inc
jbe,pn
inc
data16
mov
loopne,pt
out
jae
ds
adc
dec
mov
cmpsl
inc
outsb
fsts
inc
dec
lock
mov
inc
push
addr16
mov
sub
cmp
mov
inc
into
rolb
jno
inc
lret
dec
sub
ds
daa
roll
imul
cs
mov
jp
pop
inc
xor
popf
cmp
or
inc
add
cmp
loope
inc
scas
pop
std
dec
mov
lret
push
cmp
lods
jle,pt
loope
push
jo
inc
into
xchg
xchg
cmp
iret
es
outsb
and
dec
push
das
repz
ret
into
subl
lds
push
mov
add
scas
ret
push
cmpsb
test
dec
push
inc
push
inc
fidivs
mov
lds
inc
scas
dec
arpl
dec
dec
inc
push
insb
and
inc
add
jmp
inc
push
gs
push
movsb
cmpsb
aas
adc
inc
outsb
insl
bound
or
adc
lret
push
sbb
xchg
cmp
xchg
pop
dec
jb
jnp
outsb
lea
jbe
int3
inc
outsb
pop
test
and
inc
data16
out
jge
inc
cs
inc
ds
push
dec
stos
aas
loop
mov
inc
push
xchg
cmp
data16
xor
mov
pop
cmp
push
outsl
cltd
dec
mov
dec
dec
mov
movsb
test
mov
inc
stos
inc
sahf
inc
scas
fucomip
dec
or
sub
push
inc
inc
cs
or
jle
int
sub
insb
dec
movsl
fidivrl
mov
push
stos
inc
mov
into
cmp
fsubs
cmp
popf
in
scas
push
inc
push
mov
xor
movsb
dec
push
dec
test
add
inc
push
fsubrl
push
mov
inc
cs
in
cs
push
inc
data16
cmp
jle
out
bound
inc
divb
push
inc
cs
aas
dec
out
rolb
sub
dec
je
inc
scas
sub
inc
push
cltd
mov
xor
push
or
inc
push
mov
cmp
sbb
aas
leave
mov
out
cs
les
cmp
pop
cmp
cli
mov
outsb
inc
repnz
aas
inc
loopne
inc
xchg
cmp
mov
ds
nop
inc
into
shr
cmp
jge
lcall
inc
fcmovbe
bound
xor
cmp
push
cmp
or
jecxz
sahf
xorb
xchg
arpl
xlat
stc
dec
scas
wrmsr
mov
lea
push
fistpl
int3
sub
or
inc
mov
jle
inc
push
cmp
inc
cs
inc
testb
dec
fidivs
inc
xchg
dec
ss
dec
mov
inc
dec
xchg
pop
push
dec
scas
pushf
das
inc
sbb
cmp
call
faddl
jmp
lock
cmp
dec
aad
mov
or
cmp
stos
fiadds
push
mov
inc
ss
fstpt
dec
xchg
jno
xchg
popl
stos
test
adc
mov
aas
adc
dec
cs
cmp
fnstenv
dec
dec
cs
jb
sub
jbe
push
inc
call
mov
es
pop
cmp
idiv
cmp
mov
cmp
movsl
inc
fidivs
clc
inc
pop
adc
bound
inc
mov
push
inc
dec
ficoms
out
sahf
lds
scas
cmp
jmp
scas
cmp
or
pop
dec
inc
jbe
out
push
mov
dec
ds
cli
xor
ds
into
ficoml
bound
mov
push
push
pop
inc
mov
mov
mov
lods
inc
into
stos
inc
inc
push
mov
rorl
lret
scas
ds
stos
push
or
push
cmp
mov
dec
mov
dec
mov
mov
stos
inc
xor
sahf
insl
rorl
ficoml
inc
outsb
pop
sub
jne
dec
mov
ljmp
out
jle
push
mov
inc
inc
stos
xchg
cmp
stos
addr16
inc
fisubrs
xor
inc
dec
xor
idiv
out
dec
mov
les
xor
xchg
pop
xchg
aas
mov
nop
mov
and
filds
sbb
cmp
fnstcw
bound
xchg
cli
jns
ds
jno
mov
into
inc
out
mov
scas
cmp
mov
icebp
dec
dec
aam
dec
xchg
lods
ljmp
cmpsb
in
dec
mov
loopne
jle
insl
inc
scas
pop
inc
dec
cli
loopne
cmp
decb
mov
scas
inc
rorb
mov
js
mov
sti
inc
push
cmp
inc
dec
pop
and
neg
inc
jb
push
dec
jle
push
inc
dec
scas
mov
xchg
pop
inc
shlb
sub
out
push
jne
mov
jmp
jnp,pn
inc
push
cmpsl
push
cmp
rorb
stc
inc
jp
idivb
xor
inc
cli
cmp
dec
into
popa
dec
ds
out
mov
cmp
dec
outsb
pop
into
dec
cs
add
out
dec
push
push
jb
push
es
jge
inc
jle
pop
cmp
xchg
dec
sbb
inc
push
lret
addr16
scas
inc
sub
xor
or
jae
push
push
repnz
out
ds
inc
jno,pn
cmp
cmp
mov
cmp
xchg
sbb
inc
mulb
push
popa
or
dec
fwait
cmp
nop
jnp
xchg
or
push
dec
mov
inc
push
sbb
dec
jb
flds
inc
dec
cmp
and
dec
jb
inc
into
popf
fldl
mov
cmp
insl
dec
push
dec
imul
xor
cs
push
dec
sahf
in
jne
ds
cmp
dec
pop
fisttps
les
dec
dec
fisttpl
loop
dec
lcall
inc
dec
adc
out
clc
loope
add
inc
push
pop
filds
mov
scas
out
dec
jle,pt
dec
cs
pusha
cmp
mov
and
movsl
dec
imulb
and
cs
cmp
inc
inc
push
push
inc
xchg
jns
inc
pop
das
pop
ds
lret
xchg
ds
scas
loope
inc
into
sahf
cli
dec
jb
insb
cmp
mov
idivl
arpl
inc
outsb
sub
dec
outsb
mov
mov
xchg
add
jnp
ret
add
cltd
cmp
xor
fiaddl
xor
add
and
mov
pop
verr
pop
add
lahf
aaa
xor
jo
in
jns
out
adc
add
lret
adc
add
pop
add
sub
ljmp
add
cmp
lahf
sbb
mov
xchg
les
js
fnsave
xchg
sti
push
aam
jae
popa
add
add
movsl
rorl
add
scas
fmuls
add
push
call
add
rclb
adc
cltd
bound
push
fmuls
mov
data16
sub
pop
adc
incl
add
jnp
push
pusha
add
xor
add
cmpsl
les
pop
add
mov
ja
repnz
loop
mov
add
xchg
add
icebp
add
add
insb
add
add
jecxz
aas
inc
test
add
xlat
mov
mov
cmp
pop
repnz
cmp
mov
mov
dec
add
and
xchg
pusha
add
stos
fiaddl
mov
in
add
push
fildl
xor
add
xchg
pop
add
aas
jmp
xchg
and
cmp
xor
add
fwait
call
mov
add
icebp
add
add
stos
jp
mov
xchg
adc
fwait
sub
mov
pop
add
dec
add
or
cmp
mov
pop
das
push
add
bound
orb
div
inc
add
xchg
xchg
mov
cmpsl
nop
movsb
mov
shrl
fld
test
cmc
add
add
rcl
cmp
mov
stos
mov
test
lds
add
add
test
add
dec
add
jns
dec
add
or
cmp
jmp
loop
mov
xchg
iret
and
sub
lods
dec
test
call
xchg
mov
flds
inc
rcrl
ficoms
cmc
add
lds
xor
add
xchg
gs
inc
lahf
adc
js
out
mov
mov
add
mov
sub
or
add
add
push
add
mul
pop
movsl
add
push
add
push
inc
add
leave
and
popf
jnp
stc
cmp
mov
sbb
scas
sahf
lret
jmp
pop
add
sbb
cltd
mov
scas
jo
push
add
jecxz
adc
add
sub
mov
inc
aad
xchg
dec
add
add
ds
sbb
sbb
cmp
add
push
mov
outsl
stc
stc
mov
call
std
leave
or
push
add
xchg
cmp
mov
icebp
jmp
inc
add
mov
add
add
cmpsb
xor
js
pop
add
hlt
out
pop
dec
xor
xchg
push
add
xchg
sahf
add
lahf
pop
pop
add
filds
add
add
inc
add
mov
pop
add
adc
add
roll
push
add
or
leave
push
add
add
outsl
test
add
mov
add
aas
mov
cmp
jnp
add
add
push
mov
aad
add
pop
add
xchg
stos
das
in
out
add
jle
insb
add
push
cmp
add
add
scas
out
mov
rcrl
les
in
dec
add
rorl
xchg
sbb
push
idivl
add
add
rolb
mov
imul
rol
add
add
pop
add
mov
stos
clc
insl
cmp
leave
icebp
lds
fnstenv
pop
add
sub
lret
mov
in
pop
push
add
lods
sub
mov
mov
xor
leave
inc
add
mov
cmp
add
mov
add
sub
inc
push
les
push
add
bound
addr16
repz
xchg
sub
cwtl
mov
fildll
adc
xor
mov
add
add
lds
add
faddl
add
add
add
pop
add
enter
push
jnp
pop
add
push
fistpl
add
add
dec
pop
adc
add
sub
inc
add
adc
push
xlat
pop
add
out
or
enter
rclb
jmp
jnp
add
jp
stc
jae
dec
add
inc
add
bound
movsb
xchg
cld
ja
add
ret
inc
roll
mov
xor
mov
inc
mov
arpl
jle
sar
jne
push
test
jecxz
imul
cmpsb
jmp
sbb
or
lret
lock
push
add
shrb
jns
orb
xchg
scas
xchg
cs
xor
add
imul
mov
lock
add
add
mov
loop
mov
bound
push
add
add
fadds
add
mov
add
xor
loopne
add
push
add
aaa
rolb
in
pushf
call
stos
sbb
and
add
add
test
adc
jo
mov
xor
add
mov
cwtl
push
jb
mov
sub
mov
pop
subb
push
fdivrs
daa
jmp
push
loopne
sarb
ja
mov
xchg
add
add
add
dec
bound
add
add
dec
jl
sub
cwtl
add
push
add
jnp
add
mov
add
sub
lods
xchg
add
and
insl
inc
add
add
jle
movsl
idivb
rorb
add
add
in
adc
add
into
add
jmp
cmp
dec
push
add
inc
mov
mov
add
cld
pushf
scas
mov
test
add
clc
adc
add
add
in
add
je
sbb
add
pop
les
scas
pop
add
ret
and
add
test
add
push
add
add
or
pop
add
lea
addl
add
nop
lea
dec
add
add
mov
add
cmp
std
loopne
in
in
adc
cs
inc
adc
sti
jb
repz
jge
mov
jnp
push
fwait
add
insl
cmp
gs
add
inc
dec
add
jl
pop
cmpsb
add
mov
add
xor
jl
fadd
iret
imul
jl
inc
mov
cmp
movsb
insb
add
add
push
add
inc
test
adc
out
sub
loop
in
sti
js
jle
and
out
xchg
push
add
stos
lea
mov
mull
adc
add
add
jo
push
or
mov
and
inc
add
loopne
push
push
add
add
and
add
movsb
mov
out
xchg
and
ss
add
stos
imul
repnz
push
lahf
fstpl
outsb
add
add
iret
lret
push
inc
add
adc
and
add
cmc
sbb
mov
data16
in
fcomip
sub
jge
jns
cmpsb
cs
pop
xchg
mov
add
jbe
jp
xchg
ss
add
movsb
pop
add
fldt
add
inc
rcr
lcall
aam
push
fsub
sub
mov
add
or
shrl
push
add
stc
gs
sti
xor
fisttpl
mov
xchg
xchg
iret
scas
das
pop
add
push
mov
lock
pop
add
xchg
and
add
cmp
aaa
ds
pcmpgtb
stc
xchg
outsb
add
jmp
lock
cli
dec
nop
icebp
jge
mulb
mov
daa
pop
add
std
and
pop
repnz
orl
jno
arpl
sarb
add
add
add
mov
add
stos
out
push
add
stos
jmp
add
fisubrs
popa
lods
daa
loop
stos
ffreep
das
mov
push
push
add
add
fldl
je
fisubs
add
cmpsl
cmp
sti
loop
add
out
insb
add
scas
iret
push
add
scas
pushf
pop
push
add
insb
add
xor
push
push
ret
dec
add
mov
push
add
pop
add
jge
pop
fucomp
inc
data16
fadds
adc
testl
ja
adc
add
add
lret
or
add
and
add
leave
call
add
gs
dec
add
out
add
pop
add
stos
mov
repz
push
in
cwtl
fldl
pop
add
add
add
dec
add
mov
stos
add
push
mov
add
mov
les
inc
jg
out
insl
add
mov
ljmp
out
jp
sbb
xlat
mov
mov
or
lahf
add
add
popf
mov
aaa
cltd
add
xchg
data16
xchg
add
std
xor
inc
push
add
push
jle
or
mov
xchg
inc
jns
pavgb
add
arpl
add
nop
cmp
fiaddl
and
loope
add
and
jns
add
mov
inc
lret
xor
add
add
js
sbb
and
aas
int3
and
add
incb
fdivl
pop
popa
add
subb
add
and
pop
add
call
int3
add
add
or
xchg
das
mov
push
add
pop
add
loope
cmp
fidivrs
add
adc
add
rol
sbb
sub
pop
sahf
jp
cmp
repnz
jle
lds
mov
popa
cmpb
jne
sub
dec
adc
add
test
add
add
ret
add
add
add
cwtl
cs
test
das
into
and
sahf
jae
sub
insb
add
add
cwtl
dec
add
mov
add
add
or
je
andb
add
add
jecxz
incl
push
add
movsl
jnp
add
sti
das
inc
je
xchg
int
add
sub
cmp
push
add
inc
add
mov
roll
js
fsts
push
add
dec
add
bound
add
add
add
push
add
add
add
inc
add
add
fiaddl
arpl
testl
mov
push
adc
outsl
and
add
jo
mov
cmpsb
mov
data16
mov
je
push
lods
pop
add
clc
outsb
add
add
fnstsw
outsb
add
xchg
mov
or
jb
add
cmpsb
sbb
and
inc
add
add
in
gs
add
lods
fs
adc
add
mov
jecxz
rol
mov
push
add
inc
add
sbb
and
add
add
pusha
add
inc
cmp
movsl
dec
imul
imul
add
add
xchg
repnz
add
mov
push
add
xchg
in
push
dec
dec
mov
cmp
add
lcall
mov
xchg
add
ja
and
add
pop
add
and
ficomps
shll
out
add
shlb
add
add
test
loopne
adc
add
adc
add
lret
add
xchg
lret
sbbl
adc
add
mov
add
ja
mov
add
test
add
cmp
xchg
icebp
sbb
mov
repnz
cli
out
js
out
add
adc
stc
pop
add
and
add
push
add
mov
adc
add
test
mov
lcall
movsl
std
dec
and
add
jnp
add
fs
ret
mov
mov
lea
cmp
sub
pop
add
jo
fnstcw
add
js
int
add
dec
sbbl
jle
mov
xor
mov
jmp
add
xchg
add
test
cmpsb
setne
imul
loopne
repnz
loopne
jb
cmp
nop
aam
xchg
lret
add
and
pop
dec
add
add
xor
add
add
sub
dec
adc
sub
jb
mov
sbb
xor
add
mov
cmp
sbb
jb
in
pop
jl
cmp
sbb
mov
add
sbb
pop
add
inc
out
jbe
xor
add
jge
add
add
sub
imul
add
push
add
push
add
xchg
add
into
add
cli
add
add
xor
je
add
add
int
mov
loopne
sub
add
add
rclb
add
add
les
mov
mov
cmp
jg
movsb
and
and
add
bound
mov
gs
stos
pop
add
addr16
jno
xchg
push
dec
add
negl
rol
cmp
repnz
push
add
add
add
add
cmp
mov
mov
adc
or
xor
add
decb
pop
mov
add
push
add
pop
push
add
jp
pushf
mov
cld
mov
mov
hlt
inc
add
cmp
pushf
sub
jne
add
lcall
add
mov
out
inc
add
adc
test
add
ret
and
add
in
jo
iret
fldt
add
sub
xor
test
movsl
add
pop
add
cmp
inc
add
negl
add
std
add
cmp
add
add
or
cmc
add
jmp
out
ljmp
add
js
ss
add
push
into
push
add
inc
sbb
shlb
add
or
sub
add
add
data16
xchg
jmp
inc
push
add
rorl
cmpsl
daa
popa
add
and
add
xor
inc
add
pop
add
or
jo
xor
add
sbbl
add
stos
jnp
popa
xchg
inc
add
cs
icebp
aam
test
cmp
sahf
aad
sbb
mov
add
sbbb
add
add
add
fucomip
cmpsb
adc
jecxz
add
add
stos
pusha
add
add
add
stos
add
add
ljmp
clc
dec
push
add
lcall
or
inc
add
or
dec
add
and
add
orl
lods
cmp
popf
xor
add
fwait
idiv
testl
mov
add
inc
add
add
add
and
or
pop
add
das
gs
jecxz
or
dec
add
int
mov
and
movsl
or
jne
in
pop
add
add
cld
dec
add
add
jle
xchg
shrl
fcoml
jns
es
add
out
aad
addr16
mov
lret
cwtl
stc
bound
xlat
insb
add
xor
nop
jecxz
mov
mov
loop
cmpsb
add
scas
add
pushf
idivl
adc
add
rol
insl
loope
add
gs
add
test
cmp
add
xchg
dec
add
add
cmc
add
mov
data16
shrl
inc
leave
sarl
inc
loop
roll
aad
lret
outsl
notl
xor
add
pop
add
push
lods
add
std
enter
loope
add
shl
cmc
pop
jp
mov
pushf
add
ja
in
loop
ss
xor
sahf
test
add
add
push
add
lahf
repz
scas
push
in
sub
lahf
mov
add
add
sub
and
add
add
add
pop
add
and
add
dec
mov
sahf
cmc
xor
sub
adc
inc
add
or
push
add
daa
addl
mov
lds
pop
xchg
add
add
mov
jo
nop
repnz
adc
add
add
and
cmc
xor
mov
sbbl
inc
sbb
cli
inc
add
xchg
cld
dec
add
add
aas
sbb
adc
ret
lcall
add
add
shr
mov
xchg
outsb
add
addl
gs
rol
ja
adc
add
jo
addr16
mov
inc
add
scas
add
mov
outsl
add
lock
add
mov
arpl
out
cmp
filds
ljmp
xchg
addb
flds
mov
xor
pusha
add
mov
xlat
je
cmpsl
sbb
pop
add
add
add
cltd
add
fistpll
jmp
add
add
sar
push
in
data16
cltd
sbb
out
iret
add
add
std
add
movl
inc
jne
sub
add
add
add
push
add
int
into
insb
add
and
add
and
arpl
xorl
addr16
add
js
dec
push
addl
add
push
rcrl
data16
in
add
roll
add
cmp
push
in
sbb
rep
add
std
enter
dec
add
add
icebp
pop
jg
add
add
add
cmpsb
add
push
xchg
popf
rolb
repnz
sub
sub
popf
aam
add
mov
jbe
insb
add
jns
inc
mov
add
add
or
repz
jmp
popf
orb
adc
and
pop
insb
add
xlat
add
add
adc
out
xchg
fimuls
add
test
add
loopne
fiadds
or
sbb
xchg
loopne
mov
shrb
and
adc
inc
cs
aad
add
jae
imul
add
int3
or
lahf
mov
push
add
mov
add
inc
adc
add
mov
shrb
cmpsl
testl
adc
add
add
add
insb
add
mov
push
adc
sbb
imul
cmp
fwait
sub
xchg
cmp
popf
sub
mov
lret
repnz
xor
mov
xor
add
les
and
add
leave
fbstp
add
adc
add
jno
sbb
and
sbb
add
stos
rcrb
push
lret
mov
push
add
outsl
adc
add
mov
add
add
add
adc
pop
add
cmp
jno
add
testb
fcmovbe
cmp
sub
mov
fiadds
lret
dec
xor
ss
add
scas
add
imul
add
add
data16
sub
add
add
add
rolb
aam
aam
out
add
xchg
mov
imul
add
inc
add
setge
cltd
add
add
mov
popa
add
or
pushf
cmp
je
and
add
cmp
sbb
outsl
xchg
daa
mov
movsb
pop
sub
movl
add
add
inc
add
xchg
xchg
pop
inc
int
subb
fwait
rol
cmpb
test
xchg
mov
push
sub
add
add
add
cmp
cmp
loopne
mov
sbb
fwait
add
stc
nop
add
add
adc
jecxz
add
add
cmp
cmp
xor
add
add
jno
popa
jnp
lahf
adc
minps
je
xchg
fildl
add
adc
add
out
popa
repnz
or
dec
add
add
jl
and
add
add
add
xchg
mov
sarl
dec
and
and
sub
push
xor
add
pop
mov
and
add
subl
mov
cmpsl
lahf
hlt
and
add
enter
sub
sarb
inc
fsubrs
cmc
int
pusha
add
stos
sbb
mov
add
lret
sahf
push
arpl
cld
clc
repz
add
add
add
je
lds
add
leave
mov
add
adc
dec
add
add
data16
pop
add
lock
add
inc
add
jp
cmpsl
mov
adc
mov
or
inc
inc
add
add
add
add
cmpsl
fbld
mov
pop
lret
mov
insl
add
lret
scas
cmp
ret
sub
mov
jae
mov
les
fidivrl
loop
enter
lcall
xor
add
fiaddl
jmp
add
js
push
add
aaa
add
add
aaa
lods
add
flds
or
xor
add
repz
add
add
fwait
add
add
insb
add
sub
add
sub
enter
cmc
fwait
shrl
pop
cmc
add
orb
adc
add
in
in
and
add
add
xor
inc
int
xchg
push
popl
xlat
prefetch
mov
js
outsl
testb
add
in
js
mov
out
sbb
inc
testl
mov
into
mov
inc
jle
cmpsl
xchg
and
fdivrs
add
jecxz
ljmp
fcmovnb
lods
andb
pop
mov
sub
push
add
nop
add
adc
jae
addb
jg
or
jno
sub
notb
pop
in
add
add
dec
lret
push
jnp
rclb
push
add
inc
add
add
imul
mov
sar
leave
adc
add
fyl2xp1
icebp
mov
out
sub
add
fucomip
loop
cltd
imul
mov
add
int3
sbb
add
jo
or
or
or
data16
cli
jnp
add
clc
xchg
pop
xor
gs
push
and
insb
add
shrb
mov
pop
shll
add
mov
mov
int
add
xchg
pop
cmp
add
add
add
add
daa
repz
xchg
mov
add
fsts
imul
les
and
add
les
push
hlt
sub
cwtl
add
add
rolb
mov
cmp
leave
enter
add
fisubrs
add
jno
add
push
add
xor
outsl
insl
pop
add
push
add
scas
iret
lret
add
out
push
add
sub
jmp
push
mov
add
aam
add
add
popa
add
pop
or
xchg
bound
xchg
in
add
data16
mov
cld
add
inc
add
iret
mov
dec
add
mov
cmp
push
add
dec
add
push
and
add
call
imulb
idiv
push
add
cmpsl
add
jnp
add
dec
add
add
add
aad
psubusb
add
repz
push
rolb
stos
test
loopne
lds
jne
add
aaa
or
add
push
push
mov
sub
call
mov
lea
push
push
push
push
call
cmpb
jne
mov
push
push
call
add
and
xor
cmp
jb
lea
and
or
es
push
mov
test
je
shr
test
jne,pn
nop
leave
lret
or
xchg
call
lcall
mov
jl
test
add
into
inc
sarb
roll
add
add
and
add
jp
inc
sub
cmp
mov
pusha
add
outsb
add
lahf
jl
pop
add
outsl
add
add
pop
add
push
add
add
popa
mov
mov
add
and
aad
inc
shl
cmp
mov
add
add
and
or
add
add
lods
rcr
cmp
add
add
clc
adc
and
add
outsl
jnp
dec
jle
mov
add
cwtl
loope
js
insl
pop
add
jnp
adc
add
add
les
jmp
adc
add
add
add
jle
inc
pop
ret
lds
pop
xchg
ret
fisttps
add
movsb
faddl
sub
stc
add
add
fwait
dec
add
add
add
adc
and
add
aas
call
jo
and
add
add
add
add
mov
into
or
sub
add
sbb
push
add
xor
inc
add
in
mov
add
inc
add
add
jecxz
inc
add
lods
dec
add
pop
add
repz
test
and
add
add
add
fldcw
out
loop
imulb
adc
stos
imul
or
lret
fidivrs
sbb
lock
and
add
int
movsb
dec
add
out
ret
add
out
inc
add
sarl
cmpsb
test
daa
fiadds
add
add
mov
ret
loop
sbb
cmpsb
lods
cmp
push
xchg
lahf
push
push
add
clc
mov
adc
cld
adc
dec
add
add
xor
fwait
orb
mov
push
pop
sub
add
inc
stos
das
shrb
add
inc
xchg
sub
loop
js
gs
mov
push
add
push
roll
insl
mov
dec
add
add
leave
push
out
rep
push
dec
loope
lods
xor
jecxz
pop
xor
add
push
add
add
xchg
inc
lret
data16
add
add
add
jo
sub
mov
rclb
movl
jns
sar
jo
pop
add
mov
adc
add
mov
data16
add
add
add
or
enter
test
pop
cmp
fs
in
js
lds
push
lock
add
pop
add
rcll
test
mov
into
sbb
sahf
jp
xchg
insl
mov
mov
xor
add
adc
add
popf
in
add
pop
stos
mov
jle
mov
or
jb
sbb
push
pop
and
sbb
push
adc
xchg
stc
and
jo
repnz
fs
adcl
push
xor
mov
test
in
icebp
je
mov
filds
cmc
xor
add
popf
sub
int
nop
lds
dec
lods
bound
pop
add
scas
add
add
push
out
pop
or
push
add
xor
iret
mov
aas
add
dec
add
mov
add
cmp
sub
xchg
adc
mov
mov
push
pop
add
xchg
mov
add
inc
add
fstl
cmp
loop
lods
add
clc
fistpl
add
jne
pop
add
mov
movsl
mov
int
dec
popa
mov
add
sbb
fadd
xlat
fs
dec
mov
add
leave
mov
add
outsl
test
add
sub
mov
add
add
add
mov
sbb
fisttps
nop
add
add
fisubrs
xchg
loopne
call
add
incl
dec
add
loopne
hlt
imul
xor
scas
shrb
add
call
xor
add
insb
add
add
push
add
fwait
add
add
int
lret
stos
dec
sub
cmpl
mov
pop
add
or
popf
push
xchg
ljmp
add
and
lahf
stos
dec
add
sbbl
add
daa
pop
add
add
jo
jbe
cmp
js
pop
add
add
add
xor
add
add
mov
adc
mov
lret
cmpsb
sbb
insl
add
adc
add
jo
mov
add
xor
pop
dec
add
dec
sub
inc
and
add
jne
nop
inc
outsl
shlb
add
dec
add
dec
jb
testl
sbb
sbb
inc
add
int
and
or
movsb
cwtl
icebp
lods
fcoms
push
add
add
out
mov
add
popa
mov
addb
xor
mov
fcmovbe
jge
ja
lahf
mov
jns
add
dec
add
mov
cwtl
fdivr
push
add
bound
pop
xchg
add
addb
mov
mov
mov
subl
push
add
jae
mov
mov
add
push
rcl
and
and
add
xchg
pop
add
add
je
mov
add
xchg
add
add
dec
push
push
add
mov
in
jb
repz
add
insl
add
jl
pop
xor
add
test
repz
xchg
pxor
cmc
cmp
popa
lea
jbe
push
repz
test
fucom
xlat
lret
add
add
add
add
in
xchg
sub
aad
mov
xchg
das
imul
add
cltd
dec
orl
stos
cmp
ss
push
testl
pop
loope
add
loop
mov
nop
add
inc
cmp
push
xor
mov
ret
fstpt
sahf
mov
or
add
add
dec
add
fbld
aam
arpl
mov
repz
push
insb
add
ja
sarb
fstpt
mov
test
mov
mov
dec
or
mov
jg
ljmp
pop
fisubs
add
push
add
mov
xor
add
add
cmp
je
addps
iret
cmp
dec
add
pop
mov
add
scas
and
add
sub
int3
dec
add
mov
xchg
ja
ret
xchg
add
xchg
int3
les
ret
les
push
add
lods
add
sbb
mov
pop
nop
imul
pop
adc
add
add
sub
add
sbb
push
fs
fwait
xchg
jns
enter
fidivs
and
pusha
add
pushf
filds
mov
jmp
into
movlhps
add
pop
andl
dec
add
mov
jp
adcb
add
inc
add
shlb
jg
mov
cli
cmpsb
sti
dec
add
add
das
add
insl
sbbb
int
dec
add
push
fiadds
test
pop
cmp
jle
add
out
xchg
jp
loop
push
add
xor
add
inc
inc
add
in
adc
stc
lock
xor
add
and
nop
mov
addr16
add
imul
pop
dec
add
add
mov
data16
test
add
add
adc
add
and
add
inc
xchg
push
lods
add
add
jle
push
add
aad
add
adcb
test
mov
jno
add
add
add
add
xor
out
mov
push
mov
fistps
add
xor
lcall
xlat
add
add
push
add
mov
mov
mov
sbb
or
jnp
test
std
not
les
repnz
add
add
in
jnp
xor
jmp
mov
or
jo
mov
mov
fsts
test
leave
dec
pop
sti
add
bound
mov
sub
pop
add
mov
inc
add
inc
mov
idivb
add
add
mov
sub
jno
add
fsubrs
adc
inc
add
xor
add
cmp
repz
call
mov
test
lods
jecxz
add
add
in
mov
xchg
add
lcall
rolb
mov
add
sahf
mov
push
add
xchg
adc
add
inc
add
fdivp
pop
xlat
lock
lods
jmp
lock
add
xchg
and
add
pop
xor
cmc
inc
add
sub
add
into
sbb
dec
add
addr16
jecxz
aaa
inc
add
aaa
std
add
add
add
add
aas
sbbl
jle
in
inc
add
aam
jecxz
mov
add
add
add
add
add
pop
add
repnz
fiadds
inc
mov
lock
out
add
jo
cmp
mov
int
sbb
inc
pushf
xor
pusha
add
add
lock
push
add
out
imul
adc
add
push
add
pop
rolb
add
or
dec
add
adc
add
lock
or
jg
dec
insl
jg
ss
add
ret
add
fimuls
add
dec
sbb
inc
mov
lock
fldl
add
sti
shr
or
add
mov
adc
xor
call
xchg
lods
xor
add
dec
add
popa
adc
add
add
insb
add
pop
lret
add
sub
or
test
fisubrl
sbb
push
add
add
mov
filds
jno
mov
cwtl
inc
daa
xchg
jmp
sbb
xchg
ffreep
repz
into
jns
repz
filds
sub
jle
sbb
mov
bound
xor
add
push
add
in
mov
out
pop
or
xchg
xor
add
xchg
sbb
sub
inc
add
sbb
sbb
push
add
lock
mov
verr
stc
ficompl
loop
xor
mov
add
cltd
sub
add
add
js
ljmp
push
add
cmp
jl
and
in
add
addl
xor
add
in
and
add
jg
xchg
xor
daa
jnp
repz
sbb
push
add
add
pop
add
fidivl
add
in
icebp
jl
inc
add
add
loopne
add
adc
add
jae
sub
add
out
xchg
xor
add
jl
jo
in
fsubs
or
dec
add
sbb
adc
add
inc
add
test
mulb
add
mov
mul
repnz
daa
bound
je
pop
add
and
lods
push
add
add
mov
dec
add
push
add
mov
xor
nop
add
mov
fwait
cmp
daa
add
lret
adc
add
clc
adc
add
mov
test
stc
loopne
add
sti
hlt
lds
outsl
jo
push
shr
cmpb
out
add
imul
test
xor
jmp
xor
scas
iret
pop
adc
dec
add
inc
add
int
mov
test
add
add
jno
add
add
mov
mov
mov
mov
shr
push
les
lds
inc
add
testb
pushf
sbb
mov
mov
pusha
add
add
jl
call
mov
add
add
mov
add
xor
adc
imul
pop
add
inc
add
mov
divl
mov
repnz
add
cmp
das
ret
imul
xchg
imul
xor
add
mov
or
add
leave
mov
add
arpl
data16
and
cli
dec
add
sub
std
aam
xchg
test
mov
mov
pusha
add
add
push
cmp
or
xor
add
pop
cmp
pop
stos
stos
jmp
cltd
pop
add
loopne
jbe
aas
shll
add
insb
add
sbb
lahf
mov
pop
inc
int3
js
into
inc
sub
aam
fiadds
jne
addl
add
popf
mov
aam
aam
pop
clc
daa
xchg
add
add
pop
enter
movsb
push
push
add
jl
sub
and
add
outsb
add
cltd
mov
rcll
push
add
add
add
add
add
mov
das
fwait
mov
aas
cmp
fadds
addr16
add
aas
add
mov
sbbb
data16
pop
add
jl
sub
xchg
add
out
adc
scas
add
push
add
mov
add
mov
dec
add
pop
pop
lods
add
add
add
stos
add
jae
cmp
mov
push
add
sbb
mov
xchg
stc
scas
push
add
addb
add
mov
cmp
push
add
pop
mov
add
add
cmpsb
or
pop
adc
add
sub
incl
out
imul
xchg
inc
add
cli
add
add
jmp
mov
fdivs
cmp
cld
fistl
js
xchg
cmp
lret
add
add
popf
sbb
cmp
imul
push
add
add
mov
pop
shl
sub
dec
add
sbb
mov
add
sub
add
and
jae
outsl
sub
add
rorb
add
add
add
cltd
sbb
andl
add
add
or
adc
add
mov
or
jns
mov
mov
popf
rorl
cmpsb
sbb
add
add
int3
adc
int3
incl
adc
sub
mov
outsb
add
mov
mov
lds
or
sbb
btsl
sub
in
xchg
xchg
dec
add
add
jle
pop
jge
sti
add
xchg
fsts
out
mov
push
add
out
lahf
push
mov
add
enter
push
add
ss
add
dec
sti
jne
pop
add
scas
add
pop
add
xchg
xor
add
movsl
out
sub
pop
sub
test
repnz
aam
xor
addr16
add
data16
roll
and
add
pop
add
lods
aaa
add
add
outsl
add
aaa
push
add
fildll
lds
add
jge
jge
cmpsb
mov
and
cld
aad
add
scas
lds
add
sbb
out
shlb
sub
pop
repz
dec
push
add
add
dec
out
push
inc
add
mov
icebp
mov
ret
add
iret
jle
cmp
std
loopne
jmp
call
push
int3
mov
aam
add
add
jge
or
inc
mov
add
add
add
xlat
mov
aam
mov
mov
sub
je
loopne
aam
dec
add
cmp
in
cmpsb
fs
dec
add
pop
icebp
inc
add
ljmp
out
cli
rorl
add
mov
add
xchg
dec
add
pop
in
add
mov
addr16
sbb
call
jae
cmpsl
ja
add
adc
push
sub
fildl
call
cli
cmp
loopne
pop
push
mov
push
add
pushf
mov
adc
add
mov
adc
add
xor
add
push
add
lea
mov
add
add
stos
mov
dec
xchg
jg
mov
insb
add
add
add
pop
cwtl
fdivrl
add
adc
add
sub
xor
lret
add
out
clc
pop
add
add
pop
mov
mov
sub
pop
movsl
sbb
or
xchg
jg
cmp
aaa
mov
inc
fisubrl
add
push
and
add
add
add
shrb
push
add
fstpt
add
into
add
int3
add
add
insl
or
in
or
add
add
adc
cmp
bound
jl
mov
jae
mov
dec
inc
add
add
ret
mov
dec
pop
add
lea
jbe
add
add
lds
sbb
pop
and
pop
int
xchg
mov
repnz
inc
add
es
add
call
pop
ret
ret
cmp
add
add
hlt
outsl
add
mov
add
lahf
or
or
cli
loopne
out
mov
mov
clc
xchg
cmpsb
cld
fwait
outsl
arpl
and
insb
add
add
mov
das
in
mov
add
leave
ss
in
sub
pusha
add
sti
jnp
xor
add
arpl
loope
call
shl
cmpl
loope
int3
xor
add
push
cmp
cmpsl
pop
jbe
jle
push
xor
or
stc
mov
mov
pop
pop
mov
andl
mov
and
add
movsb
jg
mov
vmread
sub
mov
shrb
xchg
add
mov
aad
mov
mov
int
jle
fadds
inc
add
push
add
add
subl
push
add
dec
add
cld
mov
add
mov
add
loop
and
add
fiadds
int3
pop
das
and
add
add
js
test
test
pop
add
and
add
mov
rolb
sbb
imul
and
add
je
repnz
add
iret
test
mov
enter
cltd
or
enter
add
test
lret
jbe
imul
xchg
mov
cmp
imul
xchg
fcoms
add
andb
add
cmp
pop
dec
add
inc
je
rorl
add
add
inc
aaa
icebp
add
fmuls
add
into
dec
lret
adc
out
push
add
lds
add
call
jmp
js
movsl
mov
adc
add
jne
dec
lret
sbb
xchg
shrl
add
sbb
ja
add
incb
adc
clc
and
mov
inc
add
pusha
add
stc
popa
mov
stos
outsl
or
jns
push
les
add
mov
add
cmpsb
lret
add
xchg
sub
cmp
ret
fisubl
push
loopne
push
pop
and
push
add
jno
test
jnp
xchg
sbb
jp
fidivs
test
push
stc
cmpsl
mov
daa
mov
inc
add
cld
lret
lret
mov
enter
add
ja
jl
mov
jne
fdivp
cmp
xchg
lods
inc
add
neg
pop
faddl
mov
add
pop
add
faddl
aam
lods
sbb
cmpsl
mov
xchg
add
add
adc
dec
pop
or
and
add
mov
add
add
cmp
pop
add
xlat
add
xchg
add
inc
or
scas
or
loope
mov
cmp
mov
cmp
ret
sub
clc
imul
dec
pop
add
or
pop
add
sub
jb
stc
adc
add
testb
add
add
or
in
cltd
stos
sub
add
cmpsl
imul
sub
and
add
mov
cmp
mov
add
rorl
add
inc
add
pop
add
and
push
adc
mov
add
repz
mov
mov
add
sbb
mov
fbstp
popf
add
out
push
add
aam
mov
pop
cli
ret
push
mov
push
add
or
mov
jge
xchg
movb
add
fldl
imulb
add
cmp
mov
add
push
cmp
add
je
xchg
inc
sahf
sbb
xchg
lcall
push
add
pop
jne
xchg
mov
add
jo
sub
repnz
nop
test
add
push
push
add
add
add
mov
adc
addl
add
mov
insl
mov
aad
add
sbb
dec
add
scas
sbb
pushf
mov
roll
jle
ja
add
adc
cmp
leave
push
add
xor
add
scas
pop
mov
iret
mov
mov
test
stos
lahf
cltd
xorl
add
andl
pop
add
scas
loope
fmuls
scas
add
adc
cmp
push
add
dec
add
mov
xchg
mov
es
adc
add
pusha
add
mov
mov
testl
mov
xor
clc
mov
fdivs
outsb
add
mov
scas
les
mov
xor
add
xchg
ljmp
push
add
mov
push
je
data16
add
mov
imul
or
aaa
xor
xor
add
or
incl
shll
add
pop
add
add
add
in
out
xchg
std
add
test
iret
xchg
out
cli
lcall
mov
movb
add
out
add
add
out
push
add
jnp
dec
add
add
add
jnp
shll
cld
inc
add
xchg
add
cmpb
xchg
add
pop
inc
add
aaa
add
xor
push
add
add
sbb
pop
add
std
aaa
push
add
dec
add
repz
inc
cmc
or
outsb
add
mov
jns
enter
loope
push
add
add
test
pop
push
stc
fldenv
bound
hlt
scas
lods
out
rorb
add
push
add
outsl
mov
sahf
clc
mov
sub
dec
repz
add
adc
add
pop
fldcw
push
add
outsb
add
add
push
inc
add
stc
adc
mov
data16
movsb
add
test
add
add
mov
add
push
sbbb
jbe
sarl
xor
add
pop
sub
add
pop
popf
add
lret
xchg
les
jmp
fimull
and
inc
int3
push
add
shlb
jle
in
lock
add
shl
je
mov
dec
add
fildl
movsb
ja
push
jo
fsubs
add
mov
add
add
pusha
add
add
mov
push
jb
jmp
test
mov
mov
jns
test
pop
add
lock
add
cmp
add
dec
add
xchg
sub
add
and
xchg
test
add
add
add
mov
jle
push
add
insl
int
cmp
or
cli
scas
xchg
mov
mov
lret
mov
outsl
dec
xlat
mov
add
aas
add
add
add
adc
pushf
ja
into
std
add
add
add
xor
add
add
mov
add
fldenv
lods
add
sbb
test
add
dec
movsb
or
add
dec
add
in
adc
add
add
rolb
cltd
sub
mov
addb
cmpsl
divb
out
pop
mov
lahf
pop
adc
cmp
sahf
adc
lock
add
imul
add
popa
add
add
in
inc
add
stos
in
add
insb
add
pop
les
cld
mov
flds
lret
add
sub
push
decl
push
cltd
pop
lods
add
add
rorl
push
add
pusha
add
cltd
ret
in
xchg
mov
add
lcall
inc
add
add
add
add
add
bound
xor
add
add
lds
bound
xchg
xchg
mov
add
add
dec
add
fstpt
push
add
test
mov
xchg
xchg
and
add
jnp
js
adc
jge
aas
push
jns
add
inc
add
add
loop
add
and
xchg
push
add
in
leave
xchg
loope
or
arpl
cld
inc
inc
add
fdivrs
inc
add
leave
in
mov
add
icebp
dec
add
add
fisttpll
add
test
add
xchg
add
jmp
cmp
or
xor
xchg
jge
xor
add
add
sbb
mov
cmpsb
sub
xor
pop
add
stos
add
add
add
and
add
out
lods
dec
add
insl
add
add
jb
dec
call
add
sar
in
std
mov
fs
bound
stos
out
inc
push
inc
mov
stos
cwtl
popa
jecxz
cmp
add
jbe
push
inc
add
repnz
add
jp
xor
add
add
xchg
mov
insb
add
mov
fwait
inc
ljmp
data16
mov
jp
xchg
popa
shlb
add
pushf
cmpsl
pop
cmc
push
jb
lods
sarl
push
add
aaa
add
push
add
lods
and
mov
cmp
push
add
mov
add
add
andb
leave
insl
scas
push
mov
cli
xor
inc
push
push
add
mov
mov
push
add
in
mov
add
add
cmp
data16
loopne
lcall
add
pushf
add
add
popa
and
add
add
inc
add
test
pop
mov
lods
imul
adc
fmuls
add
outsl
jo
sub
pop
cmpsb
sbb
fstpl
push
push
add
inc
add
cmp
dec
add
dec
add
gs
add
lods
xchg
imul
or
xchg
add
or
icebp
out
jge
into
or
jne
add
add
outsb
add
int
add
int
bound
adc
push
add
jecxz
cmp
loope
imul
lock
rolb
sbb
fstp
mov
add
out
xor
or
and
add
mov
jb
push
add
or
out
stc
je
test
xchg
cmpsl
call
sbb
mov
jmp
test
and
add
mov
cwtl
xchg
pop
add
data16
lds
ficoms
dec
add
inc
ljmp
fisttpll
add
ret
fwait
or
mov
scas
push
or
rclb
jo
cmc
dec
add
or
dec
rol
fistl
cmp
fsts
pop
add
inc
jp
dec
add
add
repz
dec
leave
lods
outsb
add
cmpsl
pop
add
pusha
add
add
xor
add
push
lea
cmpsb
sbb
add
push
add
loope
cli
aas
add
lcall
and
sahf
cld
icebp
xorb
enter
fld
pop
add
lds
fsub
add
add
pop
add
pop
add
push
add
dec
add
mov
mov
mov
dec
hlt
xchg
adc
pop
xor
cmp
test
pop
stos
cmpsl
push
cmp
pop
add
mov
pop
lock
test
testl
stos
fisubs
mov
jns
stc
mov
add
add
or
out
add
sbbl
sbb
jmp
add
lcall
push
lods
add
add
cmp
or
xchg
loop
add
add
lods
incl
add
add
add
add
add
inc
and
add
mov
pushf
pop
add
add
push
add
mov
fiadds
addb
cmp
sbb
inc
add
mov
add
mov
roll
out
ljmp
add
add
cli
addr16
add
sbb
cmp
lock
arpl
lods
and
add
add
cmp
fiaddl
cmpsb
adc
jmp
mov
lods
sub
add
push
add
mov
rclb
outsb
add
mov
cmc
add
fcoml
add
add
push
xchg
out
mov
mov
hlt
mov
lcall
ljmp
add
and
pop
cmp
dec
add
sti
inc
add
and
add
mov
xchg
pop
jae
bound
push
add
and
add
mov
add
mov
xchg
fsubrp
daa
mov
addr16
or
lret
enter
das
push
cmpb
mov
mov
mov
aaa
mov
fldl2e
lahf
jne
inc
add
stos
dec
add
add
xchg
xor
add
add
add
mov
cli
lcall
xor
add
jno
sub
sbb
shll
or
add
std
pop
add
dec
pand
or
jle
mov
add
fsubrl
les
sbb
stos
xchg
mov
add
rcrl
add
insb
add
add
add
pop
rolb
in
mov
loop
aas
mov
icebp
les
add
stc
dec
add
add
addr16
dec
add
dec
add
fisubl
loop
dec
add
nop
cmp
scas
sbb
inc
add
xchg
repnz
add
pop
add
test
outsb
add
add
jmp
add
xlat
adcb
add
add
xor
add
add
xor
mov
xchg
ret
enter
clc
das
jmp
in
add
pop
add
and
shlb
add
outsb
add
mov
inc
ret
hlt
xor
add
jbe
in
cmc
into
add
sbb
jecxz
add
xor
add
pop
ret
xor
add
push
add
imul
add
ljmp
add
aad
xchg
loopne
xor
cmc
cmp
jo
cmp
and
add
mov
lods
add
add
mov
pop
cmp
push
add
xor
push
push
or
cmpsb
push
add
lock
jb
sub
xchg
add
ltr
sub
jl
jne
cld
adc
add
jp
jecxz
mov
or
add
ds
jg
jb
sub
movsb
mov
testl
js
mov
cmp
mov
lahf
add
aas
push
add
add
add
add
push
add
insb
add
fadds
test
add
add
pop
and
cmp
add
xchg
std
push
in
sarl
or
ljmp
rcrl
hlt
or
roll
test
add
bound
out
cmp
xchg
mov
add
cltd
mov
mov
xchg
add
add
unpcklps
add
out
add
jns
jl
pop
add
outsb
add
fmul
ja
mov
push
add
ja
imul
adc
inc
add
ljmp
mov
jp
hlt
sub
and
add
ja
pop
dec
decl
mov
frstor
pusha
add
and
repnz
int
add
cmc
icebp
sub
add
add
xchg
add
stos
or
scas
arpl
xor
add
mov
xchg
push
xorl
mov
out
icebp
mov
aas
js
insl
cmp
adc
cltd
dec
add
hlt
sub
outsb
add
aam
xchg
inc
inc
add
mov
adc
push
fwait
and
pop
add
add
outsl
xchg
jo
cmp
outsl
sub
sbb
addr16
add
aam
add
sbbl
sub
test
mov
adc
aad
sti
add
push
fdiv
xor
add
sbb
mov
mov
push
add
add
cwtl
add
add
and
and
add
xchg
outsb
add
std
push
in
xor
add
xchg
push
add
add
push
add
fwait
add
out
arpl
add
dec
sbb
data16
add
push
add
add
add
add
add
daa
add
add
add
fisttpll
jmp
dec
cmp
xchg
ret
add
cmpsl
out
fisubl
add
in
pop
sub
adc
add
add
add
xchg
iret
push
add
add
insl
add
pop
add
repnz
outsl
xchg
xchg
fldcw
inc
add
push
add
ja
add
add
pop
sbb
xchg
or
xor
int
pop
add
add
mov
mov
pop
add
or
and
push
add
mov
fcoml
add
inc
pop
outsb
add
sldt
and
add
xlat
fbld
outsl
add
stos
jns
add
scas
adc
mov
mov
pop
add
lods
xor
mov
push
add
pop
jl
push
add
inc
mov
jp
je
rorb
fiaddl
mov
push
add
add
sub
cmp
inc
in
imul
add
sbb
cmp
add
je
pop
add
mov
push
add
xchg
gs
aam
add
xor
arpl
xchg
pusha
add
aam
inc
add
in
add
dec
add
inc
repz
xor
add
push
sbb
add
add
add
mov
shr
mov
push
fwait
jle
pop
add
mov
cmpsl
outsb
add
in
mov
cltd
xchg
repnz
in
add
add
gs
add
lds
add
jge
in
push
mov
fsubr
sbb
mov
fiaddl
daa
jno
gs
aad
add
jo
decb
add
add
add
dec
add
add
add
loop
sbb
cltd
inc
out
mov
add
or
mov
xor
or
add
out
xchg
push
add
mov
icebp
xchg
push
add
inc
add
cmp
dec
jnp
add
sbb
and
xor
insb
add
add
mov
in
inc
add
add
outsb
add
movl
inc
data16
mov
enter
add
clc
and
add
fwait
add
insl
sahf
xchg
call
pop
add
add
cmp
and
add
or
inc
add
pushf
lds
add
add
aaa
or
add
add
cmp
fildl
or
add
pushf
mul
dec
adc
add
add
mov
mov
pop
add
mov
scas
fsubl
cld
add
rol
fdivs
mov
add
cltd
push
add
push
cmp
push
add
loopne
repnz
test
mov
lcall
cmpsb
je
dec
add
int
adc
jecxz
ret
rolb
fxch
adc
add
sbb
sub
daa
int3
add
xor
add
mov
add
add
jmp
add
dec
add
add
mov
mov
add
lods
jno
add
add
daa
sbb
dec
js
inc
add
xchg
hlt
push
add
add
xchg
rcl
cmp
sti
lock
data16
xor
add
cmpl
xchg
repnz
jae
adc
add
inc
add
mov
dec
add
mov
ret
add
add
inc
fistpl
fdiv
into
sahf
out
pop
add
add
lret
adc
ljmp
add
add
aaa
pop
add
push
jb
mov
inc
push
adc
add
vsubss
mov
add
out
pop
jae
std
add
push
add
mov
outsb
add
add
nop
add
pusha
add
mov
lahf
andb
add
iret
jo
rorl
sbb
scas
xchg
jmp
cmp
repz
pop
inc
add
fstl
cmpsb
add
add
stc
push
add
sarb
add
mov
jg
in
call
mov
dec
cmp
pop
fsubl
call
insb
add
cmp
push
cmpb
test
negb
push
add
xchg
add
add
push
add
test
je
or
add
in
inc
add
int3
add
add
or
movsl
push
sub
mov
push
add
push
add
cld
add
add
sub
add
add
add
or
in
push
jo
cmp
add
sub
jge
adc
add
xorl
das
adc
add
add
loop
jb
and
inc
daa
fiadds
lods
stos
outsb
add
pop
insb
add
sarl
add
add
aas
inc
add
call
in
int
add
lods
adc
lock
add
aaa
into
add
add
insl
add
push
adc
push
add
xchg
popa
jnp
add
test
add
xor
fists
add
inc
out
ljmp
mov
dec
rolb
gs
add
iret
add
pop
add
adc
mov
push
cmp
mov
dec
add
mov
add
fisubrs
insl
push
std
or
ss
sub
sub
add
add
adc
jo
out
movl
mov
popa
data16
mov
test
add
sub
add
and
sbb
push
xchg
add
mov
and
jno
push
dec
add
push
add
js
sti
push
stc
andl
add
add
xor
add
imul
movb
add
shrb
imul
in
jae
push
add
add
sahf
pop
sbb
jl
or
fiadds
sahf
lahf
dec
add
neg
xor
add
dec
add
filds
lcall
add
sub
add
sbb
movsl
pop
mov
add
add
add
jge
adc
insb
add
call
movsl
push
nop
mov
add
les
mov
add
adc
add
push
add
sub
xchg
add
xchg
es
add
int3
add
add
mov
aaa
xchg
add
dec
add
loop
add
mov
repnz
add
out
add
or
ret
outsb
add
add
cmp
nop
inc
add
add
add
loope
pop
dec
add
inc
fcoml
inc
add
add
clc
out
push
push
add
xchg
shrb
add
adc
add
pop
add
data16
cmp
into
add
push
add
arpl
jp
cmp
xor
ljmp
andl
jb
stc
hlt
mov
adc
add
fnstenv
mov
rolb
xchg
and
push
add
sbb
add
ljmp
lahf
shlb
in
imul
sub
jmp
add
insb
add
iret
in
dec
add
andb
flds
iret
add
ja
add
or
imul
sbb
out
jns
dec
cmp
xchg
outsb
add
daa
addb
and
jnp
adc
add
mov
nop
shr
add
push
sub
xchg
jge
xchg
add
push
add
add
jbe
inc
adc
jg
leave
jl
andb
add
push
jp
jecxz
dec
add
add
dec
mulb
add
add
bound
stc
push
outsl
push
in
add
lods
add
in
stos
xor
jg
icebp
and
sarl
jne
cwtl
xor
add
mov
icebp
inc
add
push
imul
stc
add
mov
nop
xchg
and
add
rolb
aas
fiaddl
add
add
mov
cmp
xor
add
and
add
jmp
add
inc
inc
add
push
mov
movsl
fisttps
add
add
ja
lret
lea
mov
add
add
add
sub
outsl
repz
das
rcrb
adc
jnp
sub
jmp
and
scas
xor
add
sbb
xor
add
cmc
cmp
pop
lret
adc
sub
test
add
fsubrs
add
pop
and
fcoms
add
movsl
add
adc
mov
add
lods
add
arpl
push
sub
push
fmulp
dec
add
push
add
sub
add
mov
or
or
push
dec
add
and
test
mov
add
data16
mov
stos
mov
xorl
xor
add
iret
add
add
xchg
xor
cmpsb
xchg
add
mov
fsubrp
mov
mov
mov
add
mov
fisttps
add
jge
xchg
jo
leave
icebp
sbb
or
pop
push
add
add
ss
push
add
dec
add
adc
add
in
decl
add
popl
popa
cmp
add
sti
fs
in
imul
pop
lods
add
jge
push
push
mov
fstl
mov
pinsrw
fwait
dec
add
add
push
add
mov
dec
bound
and
add
pop
popf
testl
add
add
add
sub
cwtl
and
add
xchg
mov
mov
ret
cmpb
add
test
add
add
aam
and
dec
mov
cmp
mov
add
add
jp
nop
addb
cmp
mov
es
sub
addb
lds
lods
dec
push
adc
add
jae
pop
add
xchg
dec
add
add
add
jecxz
sub
push
xchg
mov
lock
ret
or
lock
jb
sahf
mov
or
pusha
add
push
add
add
push
add
mov
lods
jle
cmp
or
sub
push
fdivrl
pop
add
clc
jae
mov
cmpsl
adc
fsubr
mov
add
mov
dec
add
sbb
push
cmp
testl
pop
add
add
ficoms
lods
add
add
cmp
push
add
add
cmpsb
inc
pop
push
dec
add
push
pop
sbb
push
add
jno
add
add
pop
inc
add
cmp
mov
ror
loopne
cmp
push
add
add
stos
pop
add
add
mov
mov
add
pop
arpl
add
hlt
imul
ljmp
push
add
and
adc
add
enter
scas
add
add
add
clc
jae
lock
add
shr
xchg
jmp
dec
xchg
hlt
hlt
adc
mov
xchg
cmpsl
test
xor
xchg
push
repnz
jae
dec
or
ss
and
or
add
ljmp
add
and
push
sbb
mov
cltd
fwait
fldl
fidivrl
loopne
repz
fdiv
pop
stos
cmpsb
addb
add
add
js
cli
jge
incl
xor
mov
add
pop
push
add
daa
dec
add
push
add
loop
sti
and
add
add
add
push
xor
mov
add
pop
adc
add
push
add
pushf
add
inc
sar
cli
cltd
cmpsb
jb
add
je
push
mov
lock
ret
mov
fcomp
stos
out
push
add
or
pop
bound
add
add
test
cmp
incl
lock
ret
mov
lock
and
fdivr
test
xor
add
push
loop
push
mov
adc
fcoml
subl
add
mov
and
xchg
jae
adc
mov
hlt
push
clc
inc
mov
repnz
jae
fdiv
gs
xchg
mov
mov
ret
lock
xchg
mov
cmp
daa
jae
xor
add
add
add
clc
jae
mov
mov
mov
int3
int3
add
pop
into
push
add
daa
add
iret
inc
test
scas
cld
jnp
push
add
fdivrp
and
xchg
jmp
or
gs
out
aam
or
mov
cmc
sub
outsl
scas
add
add
add
add
add
xor
add
sub
movsb
add
xchg
stos
mov
sbb
add
rcr
insl
in
mov
add
dec
add
add
mov
fisttpll
sbb
lret
data16
adc
jne
xor
mov
add
stos
and
add
pop
add
add
pop
sub
add
xchg
mov
and
gs
mov
lcall
insb
add
or
lods
outsl
cld
pop
std
mov
jb
scas
mov
add
cld
add
add
arpl
mov
lock
ret
push
cli
push
mov
add
std
adc
fdivs
add
in
sub
icebp
adc
imul
repnz
movsl
and
add
add
addb
jns
subb
repnz
sub
pop
imul
in
fistl
xchg
push
mov
lock
ret
push
ss
mov
xchg
lahf
test
push
add
sub
add
rclb
add
cwtl
test
test
divb
xchg
popl
repnz
jae
lock
or
mov
pop
push
add
popa
xchg
jmp
mov
jae
mov
cmp
ss
add
cmp
loopne
sbb
push
pop
add
adc
add
jne
add
sub
xchg
add
push
mov
lock
ret
mov
mov
and
imul
mov
mov
pop
add
test
mov
sbb
ljmp
dec
push
cmp
lea
popf
mov
jne
push
mov
lock
ret
mov
cmp
jmp
xchg
outsb
add
add
and
add
add
mov
sti
sub
stos
mov
sbb
add
es
add
add
sti
xor
lds
add
arpl
sub
in
adc
mov
add
mov
inc
add
push
add
add
add
adc
add
add
cmp
xchg
and
add
and
int
add
in
imul
add
xor
add
adc
jno
add
jp
push
pop
or
repnz
jae
mov
add
and
pop
mov
or
and
add
jae
pop
jno
push
xchg
jmp
push
or
jae
cmpsl
cmpsl
mov
lcall
push
add
sub
ja
adc
dec
add
add
jb
subl
sti
mov
sub
push
mov
lock
ret
lock
mov
and
mov
repz
stc
int3
int3
int3
add
ss
mov
mov
fwait
push
add
jp
push
clc
test
add
into
add
add
sbb
stos
rcrb
pop
add
clc
jae
push
adc
push
add
jae
popa
out
add
enter
dec
add
repnz
jae
push
jne
fcoml
cmp
lahf
and
mov
fwait
notl
mov
lret
inc
add
jl
rorb
ja
add
add
mov
mov
push
add
and
jp
push
add
add
push
das
cmc
mov
cmp
mov
jne
xchg
jmp
dec
dec
push
adc
scas
pop
add
push
add
cmp
add
add
dec
add
addl
mov
cmpsl
and
cmp
push
add
push
loope
pusha
add
xor
add
pop
add
xor
jae
cltd
cmp
push
int
add
add
sbb
clc
daa
cmp
push
add
add
sahf
lods
push
movsl
mov
loop
lds
and
add
cmp
inc
add
pop
add
adc
add
test
out
xor
or
jnp
das
push
enter
jg
fldt
add
add
shl
xchg
jmp
or
hlt
jae
dec
xchg
pop
and
push
sbb
dec
xchg
and
push
add
sub
jne
mov
add
dec
add
pop
add
add
sar
fcoms
pop
add
mov
sbbl
add
mov
push
push
add
gs
mov
add
jecxz
jmp
outsb
add
lea
pop
add
pop
add
xchg
add
repnz
jae
jne
mov
ss
xchg
or
add
imul
data16
xchg
into
jne
add
popf
push
add
push
mov
push
in
add
inc
add
add
clc
jae
xchg
mov
dec
mov
xchg
mov
daa
sbb
add
idivl
ror
pop
add
insb
add
roll
inc
add
add
adc
add
sti
add
add
xchg
jmp
mov
fcomp
mov
push
stos
aam
cltd
lea
arpl
cwtl
push
add
aaa
cmpsb
add
add
jmp
add
cmp
xchg
inc
xor
repnz
jae
mov
jne
and
cmp
imul
lds
add
inc
jae
mov
pop
add
xchg
dec
and
add
push
fcompl
add
mov
push
add
add
outsb
add
push
add
and
repnz
add
and
jge
inc
add
repnz
jae
mov
or
cli
mov
xchg
in
jb
and
arpl
mov
add
sbb
and
xlat
into
jle
mov
add
out
pop
sub
rcrb
rcrl
ja
data16
fstpl
add
repnz
jae
push
jne
mov
mov
and
and
xchg
in
leave
xchg
jmp
fdivs
add
pop
cmp
xor
push
add
mov
ret
js
sub
cmp
xchg
outsl
add
xor
xchg
mov
xchg
fnstcw
jb
daa
sbb
pop
xorl
cmp
mov
xor
shlb
add
je
xor
add
es
mov
add
aaa
sbb
lea
mov
insb
add
outsb
add
mov
je
sub
loop
inc
add
xchg
ret
jne
or
mov
pop
adc
movsb
enter
jecxz
int3
std
out
pop
add
dec
fists
popf
add
imul
cwtl
insl
dec
add
in
loopne
add
add
les
scas
add
add
sbb
int3
and
movsb
repnz
lret
icebp
add
or
sbb
xor
xchg
jns
add
and
add
add
add
push
lock
jmp
mov
dec
lock
pop
xchg
test
push
cmp
insb
add
mov
cmpsl
ss
jae
les
inc
add
pop
jo
inc
fdivl
add
ss
fcos
loop
out
xchg
add
add
dec
pushf
sub
mov
adc
or
push
pop
add
inc
add
sbb
cld
mov
push
add
sbb
xor
arpl
les
mov
add
and
add
lods
add
cmpl
add
add
mov
or
add
push
js
mov
scas
mov
add
inc
add
clc
mov
std
xchg
jmp
jne
push
adc
and
lcall
add
mov
or
sahf
push
add
mov
push
add
pusha
repnz
jae
fcoml
jne
or
dec
add
add
aad
cmc
into
fwait
inc
data16
bound
arpl
cmp
add
cld
data16
mov
mov
inc
add
call
lods
cmp
orl
cmp
jmp
jbe
or
mov
sti
jne
test
test
addl
add
add
repnz
jae
mov
and
mov
dec
cmpsl
push
frstor
popl
aaa
and
xlat
pop
add
add
ficoms
mov
gs
mov
xchg
adc
add
cmp
andl
add
xchg
xor
push
mov
lock
ret
mov
add
stc
add
repnz
jae
lock
mov
mov
in
and
add
movb
add
inc
scas
cmc
and
in
sub
mov
push
push
xor
or
push
mov
lock
ret
hlt
push
mov
push
fdivl
mov
imul
pop
add
inc
call
repnz
jae
xchg
mov
gs
cmp
cmc
imul
add
enter
add
outsb
add
sub
xor
add
adc
jmp
mov
sbb
hlt
and
pusha
xchg
jmp
mov
fcoms
sbb
sbb
mov
dec
add
clc
jae
mov
mov
mov
aaa
test
repnz
fadds
xor
add
add
pop
add
es
dec
jb
pop
call
sub
sub
lea
fiaddl
leave
cld
inc
add
add
out
inc
int3
int3
int3
add
insb
add
cmp
add
pushf
or
jle
jbe
clc
sub
mov
inc
ja
jne
push
add
add
push
les
or
mov
loope
das
aaa
mov
stc
je
push
mov
lock
ret
lcall
xor
jp
jle
or
add
add
mov
lret
jmp
adc
or
xchg
shl
xchg
jmp
mov
push
mov
push
dec
and
mov
add
dec
testl
in
inc
add
push
add
aad
add
or
imul
add
jb
mov
bound
loope
sub
and
add
adc
lock
ret
and
mov
mov
lock
icebp
xchg
jmp
mov
add
lcall
add
add
inc
add
cmp
xor
add
inc
add
test
test
add
je
lock
idiv
or
jae
pusha
add
mov
and
xchg
jmp
mov
cmp
add
adc
and
add
add
test
sbb
popa
dec
add
jb
inc
add
sub
dec
add
add
add
clc
jae
push
xchg
cmpsl
cmp
mov
repz
repnz
lcall
lret
inc
add
mov
test
add
add
add
outsl
sbb
cs
and
lret
ds
in
pop
add
and
sahf
jo
adc
add
add
add
xor
ret
mov
add
lcall
or
std
mov
pop
repnz
jae
push
add
filds
stos
sbb
leave
cli
xchg
mov
add
fwait
add
and
sub
shrb
add
jne
sbb
sarb
std
or
sbb
add
aad
dec
fs
andb
add
pop
iret
add
add
aas
int
sbb
add
adc
mov
lret
mov
or
add
mov
lock
ret
xchg
jae
and
daa
insl
add
pop
mov
add
adc
add
lahf
add
jns
shlb
add
in
jb
shll
add
test
int
sub
pop
jne
stos
test
loop
lret
les
dec
add
sub
sbb
stos
lods
lahf
lret
mov
add
add
clc
jae
ss
adc
mov
lods
cmp
add
fiaddl
in
out
dec
xchg
cmp
lret
bound
mov
es
add
insb
add
dec
add
int
add
jmp
add
in
cltd
repnz
int
shrb
add
mov
stos
mov
jmp
lock
mov
mov
and
and
or
sub
pushl
pop
repz
xlat
push
add
or
mov
ljmp
mov
repnz
jae
cmpsl
push
fadds
jne
adc
mov
xchg
jmp
mov
mov
sub
decb
mov
repnz
jae
ss
mov
icebp
push
lock
add
rorb
add
add
add
cmp
cld
and
mov
or
and
add
ret
push
mov
repz
nop
mov
mov
in
xchg
mov
je
repnz
add
xor
add
fidivl
adc
add
add
lret
mov
and
stos
add
add
pop
mov
add
mov
add
in
add
add
add
dec
add
pop
add
and
add
push
add
rolb
and
add
xor
nop
mov
lea
int3
jnp
pop
or
cmp
jo
sub
pusha
add
add
add
inc
stc
inc
xchg
jmp
jae
push
add
add
pusha
add
jae
fcoml
cmp
add
add
lcall
add
test
push
add
in
add
mov
clc
xchg
cmp
add
pop
mov
add
push
xchg
add
dec
js
and
add
add
jo
repz
cmpsl
xor
add
sahf
in
add
repnz
lock
add
pop
cmpl
add
pop
add
lods
out
jno
mul
imul
cltd
fcomps
adc
add
lods
pop
mov
dec
jmp
insb
add
hlt
add
mov
xchg
jmp
adc
mov
push
mov
xchg
repz
mov
lock
ret
adc
push
adc
add
inc
push
cmp
jae
shlb
sub
xchg
jle
xlat
adc
add
pop
add
mov
pop
add
lcall
enter
add
loop
xchg
fdivs
dec
insb
add
imul
dec
sub
cltd
dec
arpl
adc
lds
pop
add
aad
lock
and
add
loope
sub
popf
bnd
add
add
add
add
or
fdiv
push
and
mov
mov
movb
add
push
repnz
jae
mov
cmp
mov
xchg
xchg
lret
mov
add
mov
add
fiadds
push
add
rolb
add
repz
fiaddl
push
add
in
cld
inc
mov
repz
push
add
inc
add
adc
add
adcl
xor
add
mov
xchg
cmp
add
bound
addr16
clc
jae
hlt
mov
and
mov
jae
dec
out
insl
call
add
cmp
sub
sbb
adc
add
add
dec
add
add
jmp
in
in
add
xchg
jmp
faddl
ss
cmpsl
in
jg
dec
loop
add
cmp
fimuls
xor
add
add
add
xor
mov
jnp
idivb
loope
dec
in
imul
push
mov
jge
pushf
sahf
xchg
ficompl
add
push
sbbl
testb
add
mov
fcomps
push
add
add
mov
add
add
add
add
cli
mov
dec
add
lods
das
test
inc
or
clc
jae
and
mov
and
adc
decl
and
add
inc
or
lods
mov
repnz
jae
pop
mov
pop
mov
ds
pop
dec
pusha
add
loope
add
popf
mov
inc
lea
xchg
jmp
hlt
cli
mov
cmp
nop
fwait
mov
loop
dec
inc
addb
cmp
shll
add
rcrl
add
dec
add
add
dec
test
lods
out
popf
add
mov
and
push
repnz
jae
gs
xchg
fcoms
test
pop
add
xor
sub
ret
in
cmp
dec
add
jb
mov
sti
mov
test
pop
add
dec
addr16
adc
shll
lcall
add
cmp
xlat
test
mov
fistpl
xchg
jmp
aaa
add
xchg
add
jne
gs
push
inc
add
xchg
jmp
add
mov
stos
push
add
movsl
add
add
cmp
push
inc
mov
mov
test
loopne
cwtl
xchg
clc
jae
or
adc
hlt
lcall
inc
add
add
clc
jae
mov
mov
ds
lock
inc
xchg
pop
xor
cwtl
adc
add
repnz
dec
add
or
add
out
push
add
xchg
xor
push
xchg
test
loope
jo
mov
add
pusha
add
inc
add
and
add
dec
add
cltd
cli
mov
notb
add
add
mov
push
gs
fcoms
popa
dec
add
push
repnz
jae
mov
cmpsl
xchg
and
pop
mov
inc
add
dec
pop
jge
mov
inc
incl
add
add
push
xchg
loope
pop
add
ss
add
inc
addl
push
add
fwait
in
mov
out
int3
int3
int3
add
add
arpl
add
imul
push
add
jmp
or
xchg
faddl
mov
mov
and
sub
in
pusha
add
add
lds
xchg
push
mov
lock
ret
mov
adc
scas
mov
and
mov
lock
ret
and
ds
pop
xchg
mov
movsb
push
mov
lock
ret
lock
pop
and
cmpsl
mov
mov
js
inc
add
ret
arpl
rolb
lcall
enter
xchg
mov
shl
jae
push
mov
lcall
adc
add
data16
add
jmp
sti
push
add
pop
icebp
mov
ss
add
add
adc
push
add
jl
mov
andl
sbb
test
add
movsb
inc
add
xchg
ret
cli
mov
fcoml
mov
jecxz
cs
mov
jge
sti
jns
mov
or
lock
inc
add
xchg
ret
lcall
add
add
loopne
push
add
or
lcall
iret
jno
gs
add
es
fstpl
jmp
mov
arpl
mov
pop
adc
lock
ret
push
and
mov
push
fcomps
jae
mov
or
adc
iret
add
movsb
cmp
add
out
cmpsb
stos
xchg
jmp
mov
lock
or
fcoms
xor
jns
outsl
aaa
fldl
das
sbb
dec
or
add
push
repnz
jae
mov
pop
jne
jne
add
cmp
sbb
xchg
mov
repnz
jae
mov
xchg
lock
mov
fs
pop
fwait
add
test
sahf
pop
enter
mov
xchg
arpl
lds
les
daa
icebp
add
add
push
add
mov
repnz
jae
mov
adc
fists
cmp
lds
pop
add
pop
int
cmp
add
sub
or
adc
lods
mov
mov
sub
icebp
adc
or
dec
pushl
add
add
inc
push
push
cmp
mov
add
inc
add
hlt
push
std
jle
fmull
sti
add
fsubs
or
inc
add
and
xor
pop
add
add
adc
pop
repnz
jae
mov
mov
cli
mov
push
mov
mov
add
mov
add
push
xchg
iret
xor
add
out
xor
arpl
inc
xor
xchg
jmp
and
dec
jae
mov
mov
add
add
and
xchg
pop
iret
add
jl
imul
add
std
add
add
or
push
add
add
add
and
add
add
push
add
add
sub
das
mov
add
pusha
add
add
add
and
add
add
repz
lret
add
aad
sbb
jo
sbb
mov
sbb
push
add
add
sbb
mov
sbb
inc
add
pop
add
fisubrs
add
dec
inc
add
call
add
add
mov
arpl
xorl
mov
add
mov
repnz
jae
pop
jne
lcall
data16
aam
or
out
dec
add
lcall
add
popa
fsubl
xor
add
sbb
lret
repz
mov
clc
jae
push
mov
and
hlt
hlt
ss
inc
add
add
pop
add
mov
jmp
add
adc
add
aam
bound
xchg
adcb
out
movb
loopne
add
push
repnz
jae
lcall
mov
xchg
push
xchg
repnz
jae
pop
mov
pop
gs
add
add
and
mov
cmc
jne
jns
xor
push
scas
add
aad
mov
add
xor
mov
push
xorb
add
add
add
add
ret
add
jg
mov
incl
int3
subb
add
clc
jae
xchg
lock
add
or
sub
je
xchg
xchg
xor
jmp
push
and
and
adc
mov
jae
xchg
push
gs
dec
mov
hlt
gs
test
cmp
fildl
addl
add
mov
fcoms
cmpsl
xchg
push
mov
mov
cmp
add
test
aas
call
pushf
loope
lods
icebp
jo
cmp
testl
xchg
jmp
add
push
jne
lock
push
mov
ret
mov
inc
leave
decb
xchg
jmp
repnz
jae
lock
push
cli
hlt
mov
add
sbbl
enter
push
mov
jnp
mov
lods
mov
add
popa
cmp
add
mov
xchg
jmp
adc
fsubs
repnz
add
add
add
xchg
jmp
and
mov
mov
ss
cmp
mov
push
mov
lock
ret
lock
in
mov
mov
jae
hlt
mov
mov
push
adc
add
js
fistpl
add
les
call
jmp
push
mov
gs
mov
mov
cmp
and
roll
pushf
pusha
add
pop
add
dec
xchg
jmp
mov
and
dec
mov
add
adc
mov
in
xor
add
add
xchg
jnp
push
add
enter
xchg
mov
pop
add
sub
dec
add
push
sbb
mov
dec
or
and
xor
add
in
out
dec
add
rolb
add
jne
add
mov
out
add
roll
add
inc
add
sahf
jmp
jp
sbb
add
cld
es
fucomip
push
jle
cmpsl
mov
add
ss
add
add
add
add
rolb
or
repnz
jae
push
jne
pop
and
lahf
add
push
xor
jecxz
std
das
or
clc
add
add
cmc
in
sti
xchg
call
repnz
jae
jae
mov
ds
fdivl
sbb
or
leave
xchg
jmp
mov
fsubl
mov
mov
cli
mov
adc
xchg
cltd
loopne
add
add
arpl
xor
dec
mov
scas
and
add
sub
arpl
dec
sbb
adc
add
xlat
sub
subl
adc
add
inc
mov
add
jb
sbb
or
mov
cs
and
cmp
adc
add
add
xchg
jmp
cli
fdivs
fcomps
mov
aas
stc
call
xchg
jmp
push
jae
mov
xchg
push
hlt
into
add
xchg
jb
push
add
add
add
stos
inc
add
add
ss
add
sbb
je
arpl
jb
and
adc
add
testl
scas
and
add
cmp
movsl
mov
pop
add
fstps
add
mov
xorl
add
dec
mov
mov
pop
add
jecxz
jno
movsb
jp
cwtl
int3
add
add
cld
loop
dec
insb
add
ret
stos
push
js
loop
add
cmp
sub
add
xorl
aam
add
stos
push
add
nop
sbbl
and
into
mov
add
in
pop
add
out
pushf
nop
lods
mov
jmp
and
add
mov
mov
mov
mov
test
and
add
bound
inc
add
xchg
ret
fdivl
xchg
out
cmc
push
fistpll
xor
add
inc
add
mov
arpl
pop
add
mov
add
je
lods
xchg
add
add
stos
fwait
shl
enter
or
push
add
xchg
cmp
push
add
lods
stos
and
add
ret
add
add
js
push
or
rcrb
int3
add
fwait
add
lcall
js
int
mov
ror
outsl
dec
add
jae
pop
repnz
jae
mov
cmpsl
fcompl
jae
inc
fldl
add
mov
loop
pop
clc
mov
fxch
mov
and
repnz
jae
xchg
hlt
cmp
or
sahf
arpl
sbb
add
pop
outsl
into
inc
add
popa
cmpsl
sub
fildl
fnstsw
mov
add
sahf
add
mov
add
add
enter
ja
adc
cld
ficomps
je
lock
add
scas
sub
fstpl
cld
mov
add
test
cli
mov
rorb
add
jg
push
cmp
inc
popa
xchg
jmp
adc
cmpsl
mov
xchg
adc
pop
cmp
call
lahf
jge
stc
add
testl
lock
add
lods
lea
dec
mov
add
test
push
add
mov
movsb
mov
scas
loopne
mov
out
push
add
mov
push
mov
mov
aas
jp
data16
mov
roll
sub
lods
insl
jno
jge
push
add
cmp
jo
sahf
dec
add
or
enter
add
add
and
mov
xchg
mov
hlt
mov
mov
fst
movsl
xor
add
push
repnz
jae
mov
or
and
and
or
cmp
add
repnz
jae
push
jne
cli
mov
mov
push
in
shll
lods
pop
add
cmp
adc
add
daa
add
pop
add
out
or
insb
add
stc
add
mov
push
mov
lock
ret
add
gs
aam
call
je
lcall
jae
inc
add
popf
push
add
cmp
ret
lret
push
add
enter
inc
add
loop
mov
jno
repnz
jae
dec
push
jae
adc
gs
add
xchg
pop
push
jg
mov
push
xchg
jmp
or
lock
hlt
push
mov
nop
cwtl
push
add
sub
mov
add
pop
cwtl
add
lret
lds
add
push
inc
add
add
add
mov
fwait
adc
and
add
jbe
inc
add
inc
add
jmp
fdivs
cmp
jp
pop
sub
jmp
mov
cmpsl
lcall
pop
repz
mov
pop
add
pop
inc
add
sub
addr16
mov
das
push
add
add
add
mov
cli
lcall
push
rorb
jo
call
pop
add
fnstcw
pushf
sub
fists
loopne
mov
add
add
pop
popa
cmpsl
ret
repz
jnp
push
add
push
sbb
lock
imulb
adc
add
in
add
jg
scas
movsl
clc
xor
pop
incl
pushl
mov
xor
pusha
add
add
data16
test
aas
sub
mov
sub
sarl
pop
add
add
repnz
jae
mov
or
mov
add
push
hlt
push
add
add
add
add
aam
add
dec
add
cmp
add
add
cmp
cmp
or
sub
daa
mov
arpl
aam
add
leave
in
mov
add
add
cmc
mov
add
add
insl
add
pusha
add
dec
ftst
jmp
mov
fistpll
sub
add
mov
inc
xor
add
add
into
add
add
lea
xorl
inc
add
rcrb
add
cmp
jle
jno
sub
hlt
push
add
add
add
lock
out
add
push
add
mov
clc
jae
push
add
mov
push
push
add
dec
add
push
scas
jno
les
stos
in
dec
inc
xchg
dec
sub
add
push
add
push
lret
add
adc
add
add
add
fnsave
sbb
add
dec
mov
jae
fdivs
push
mov
popf
leave
and
xchg
clc
jae
adc
ds
add
cltd
popf
dec
out
push
pop
add
add
data16
xor
sub
push
and
push
sub
sbb
lcall
movsl
or
stc
lea
repnz
jae
ss
mov
add
sub
inc
add
xchg
imul
add
add
fnstenv
popa
ret
sub
adc
add
xchg
and
add
add
add
xchg
jmp
mov
push
mov
mov
mov
sub
push
add
add
mov
sub
test
add
jae
push
push
mov
xchg
mov
sub
pop
insl
test
xchg
jmp
lock
mov
fsubl
mov
addl
mov
repz
add
sbb
outsb
add
cmpsl
mov
add
add
jle
push
add
cld
add
dec
xchg
sti
movsl
dec
mov
add
repnz
jae
push
or
rol
sub
mov
pop
xchg
xor
add
xor
loop
popl
shlb
add
push
add
addr16
jg
pop
add
push
add
cmpsb
sub
stos
lret
add
add
inc
mov
jle
fisubrs
add
ret
lcall
fwait
mov
add
add
inc
add
fiadds
ss
xchg
icebp
inc
add
mov
in
xchg
aad
pop
add
movsl
icebp
adc
mov
int3
jae
scas
lcall
jecxz
nop
xchg
push
inc
add
add
aam
add
pop
pop
mov
mov
out
addr16
xchg
popa
add
clc
jae
mov
mov
mov
out
sub
jne
add
repnz
jae
mov
xchg
adc
add
mov
push
xor
add
enter
fcoml
jge
xor
cmp
rclb
mov
into
inc
add
cmp
fsubs
cltd
adc
mov
lret
add
dec
fldenv
mov
jno
mov
add
dec
add
add
pop
mov
in
xor
sub
call
mov
repnz
jae
mov
hlt
cli
xchg
or
mov
repnz
jae
mov
lcall
lods
push
add
sbb
add
mov
and
pop
add
add
pop
add
and
add
js
dec
aas
mov
mov
pop
and
clc
jae
mov
mov
xchg
hlt
lcall
jmp
dec
add
call
xchg
jmp
mov
xchg
mov
ss
pusha
add
stos
add
add
push
add
add
cmp
add
sbb
add
dec
add
add
fldenv
adc
pusha
add
jne
mov
jnp
je
imul
xchg
call
add
pop
pop
add
dec
mov
mov
arpl
jmp
aam
notl
and
mov
shrb
inc
mov
xor
add
add
sub
fdivrp
outsb
add
in
sub
gs
sub
adc
add
mov
add
jb
jmp
mov
adc
mov
xchg
roll
xchg
ret
lock
mov
mov
add
add
dec
add
mov
xor
add
pusha
add
push
stc
add
shll
inc
add
insb
add
xchg
jmp
cli
fdivl
mov
mov
mov
cmp
add
xor
fdivl
in
add
mov
popa
js
sub
fistpl
xlat
xor
add
jl
cmp
pop
jno
add
add
lcall
imull
add
add
jle
push
add
add
out
add
add
add
cld
outsb
add
incl
and
add
mov
popa
add
clc
jae
and
lcall
repnz
add
add
push
test
out
add
add
movhps
ds
sub
cmp
in
aaa
loope
adc
dec
add
addb
add
mov
sub
xor
lcall
sahf
add
add
aas
add
xor
enter
leave
insl
je
mov
add
rcll
xor
add
shr
repnz
jae
push
jne
push
cmpsl
push
add
mov
add
push
cmp
hlt
or
stc
mov
repnz
jae
mov
fdivl
cli
mov
sbbl
lcall
lock
mov
push
add
data16
dec
add
push
incb
pop
add
mov
xor
mov
pop
int
fst
push
add
add
lcall
and
mov
push
push
and
ss
std
add
push
jp
or
dec
int3
sub
mov
add
xor
add
add
lea
je
cmp
add
js
add
add
pop
cmp
sarl
add
subb
out
push
and
add
adc
iret
add
inc
or
pop
mov
add
add
sbb
and
loopne
notl
repnz
jae
mov
mov
fdivrl
adc
add
add
dec
add
pop
shlb
add
add
imul
fmuls
mov
rolb
mov
cmp
and
inc
sub
pop
add
push
pop
add
repnz
jae
push
and
pop
add
sub
or
lods
jl
inc
std
mov
fcoms
inc
add
jmp
dec
ret
cmpsb
adc
add
test
add
ja
imul
shl
mov
mov
test
fisttps
add
inc
add
cmp
dec
mov
mov
lock
ret
lcall
dec
sti
dec
add
jb
xor
or
out
mov
sahf
ljmp
add
and
add
add
mov
sbb
add
sub
out
mov
out
and
add
adc
add
je
lods
lods
push
push
lea
fcoms
pop
add
test
push
add
fmul
cmp
pop
add
push
dec
add
jns
xchg
or
xchg
jmp
mov
mov
push
fdivr
fdivrs
mov
add
sub
repnz
push
add
mov
inc
cmp
xor
cmp
rclb
cltd
add
add
cmpl
add
xchg
ret
push
lock
add
add
xchg
lret
and
ret
std
int3
int3
out
add
xchg
add
mov
xchg
add
sbb
arpl
addb
add
adc
sub
or
lock
xchg
sahf
or
lods
adcb
mov
jge
hlt
mov
inc
test
push
test
outsb
add
scas
fsubrl
test
add
sub
jg
push
add
add
aas
push
cmp
jl
jae
pop
add
mov
jae
daa
mov
imul
mov
push
mov
lock
ret
add
lock
ss
js
ss
add
adc
test
jae
lock
jae
mov
jbe
or
sub
jne
stos
lods
int
imul
xchg
mov
int3
xor
push
out
test
add
xchg
cmp
xchg
jmp
mov
jae
gs
and
ss
jno
add
lds
divb
divb
mov
daa
jecxz
in
jns
mov
mov
add
xchg
lds
add
inc
lods
loopne
std
mov
xor
cmc
xchg
dec
ljmp
add
adc
or
dec
mov
shlb
xor
add
and
mov
add
repz
add
int
pushf
orl
add
add
pop
nop
addl
loopne
clc
jae
mov
hlt
mov
ss
adc
add
add
push
add
add
sbb
cmpsb
repnz
mov
mov
incl
xchg
pop
add
jmp
add
call
and
xor
ret
fsubs
and
and
aad
ja
gs
lea
or
dec
sub
add
test
add
cli
cmpsl
gs
sahf
push
add
jmp
jnp
jne
mov
faddl
fiaddl
mov
add
jge
dec
add
ret
add
cmpsb
dec
add
loopne
or
sbb
add
add
pushl
repnz
jae
push
mov
add
out
mov
mov
xchg
jmp
push
mov
cmp
fdivs
mov
lods
xchg
movsl
dec
add
push
add
pop
add
pop
pop
mov
add
scas
add
jo
ss
inc
push
cmc
add
stc
push
push
mov
lock
ret
add
xchg
iret
sahf
push
add
add
daa
movsl
add
into
add
fidivl
or
loop
add
sahf
xchg
repnz
jae
pop
or
jne
push
push
mov
push
sahf
lahf
pop
add
pop
mov
cmp
hlt
mov
add
out
add
cmpsb
add
loope
icebp
pop
add
cli
jl
mov
mov
mulb
push
ret
add
add
dec
scas
jne
mov
sbb
cmp
add
popa
repnz
jae
cli
mov
mov
pop
mov
push
mov
decl
int3
add
popf
xor
sub
sbb
loope
add
fdiv
aam
nop
mov
add
imul
or
add
outsl
dec
js
mov
ret
popa
push
or
pop
jbe
jge
adc
add
out
xor
and
sub
ret
cmpsb
and
dec
add
add
jmp
cmp
jae
lcall
inc
in
in
dec
outsb
add
sub
fdivs
loopne
push
data16
in
add
hlt
into
add
test
incl
and
push
add
jmp
xlat
ja
int
push
mov
jne
adc
add
sub
add
jmp
cmpsl
inc
add
inc
add
sbb
xor
dec
add
aad
add
push
add
mov
fwait
mov
xlat
xchg
dec
and
add
clc
jae
dec
and
fdivl
inc
add
ficomps
mov
push
mov
out
pop
shrl
add
jnp
ficompl
push
add
das
add
mov
or
push
jbe
xchg
pop
push
mov
lock
ret
dec
mov
add
pushf
add
adc
add
outsl
dec
add
insb
add
add
pusha
add
xchg
mov
xlat
add
jnp
push
xchg
je
and
add
xlat
inc
add
mov
add
mov
add
fwait
sub
pushf
dec
add
inc
add
addr16
mov
sub
jnp
out
cmpsl
push
loopne
jp
and
fwait
popa
mov
mov
add
add
jp
inc
add
repnz
jae
hlt
cmpsl
or
adc
xchg
jmp
mov
push
mov
mov
xchg
mov
mov
mov
push
add
cli
xor
add
test
leave
xor
add
add
js
inc
add
xchg
ret
cmpsl
ss
lock
rcll
loopne
push
sub
push
or
xchg
lahf
push
iret
jnp
xchg
pop
fiadds
mov
idivl
enter
add
je
test
sbb
cmpsb
loopne
fimuls
add
add
mov
xchg
cwtl
adc
add
or
lock
sub
add
in
add
gs
pop
add
add
js
lods
pop
sbb
fwait
and
add
xchg
inc
add
roll
int3
adc
add
push
aad
xchg
loop
mov
add
pushf
and
add
loope
loopne
pop
add
shrl
orl
xchg
xchg
iret
or
pop
add
pop
hlt
mov
mov
mov
gs
outsb
add
add
inc
add
cli
clc
add
enter
std
add
add
incb
imul
add
mov
add
lret
add
add
repz
pop
or
ss
add
mov
inc
add
mov
add
cmp
in
inc
add
lods
pop
add
aaa
ja
adc
add
lret
dec
add
xchg
add
push
dec
add
ret
add
int
mov
mov
repnz
jae
push
mov
fdivrl
and
fcoml
popf
pop
add
add
mov
and
lock
add
aas
shlb
adc
add
xchg
pop
push
mov
lock
ret
lock
mov
mov
add
rolb
add
cmpsb
daa
jmp
cmp
add
jmp
add
add
push
add
add
repz
add
cmp
aas
and
add
add
pop
add
adc
add
inc
add
cmpsb
add
add
jl
test
mov
mov
stos
sbbl
and
add
aad
xchg
cmp
adc
mov
xchg
mov
pop
push
add
xor
add
imul
mov
pop
add
je
hlt
xchg
fsubl
clc
repnz
jae
jae
push
or
mov
jbe
mov
out
test
mov
add
data16
cmpsl
add
mov
mov
sbb
aaa
mov
and
add
push
add
xchg
cmc
cmpsb
xchg
mov
pop
add
and
dec
add
sbb
ja
cmpsb
mov
add
add
lret
mov
sub
pop
mulb
mov
add
movsb
pop
fxch
xchg
mov
cwtl
or
out
cmp
add
and
add
jecxz
je
enter
push
pushf
add
add
dec
push
test
push
add
xor
add
add
mov
mov
adc
push
and
add
lahf
sti
add
add
adc
stos
scas
ret
adc
add
std
add
add
cmp
mov
mov
push
push
clc
jae
or
cmpsl
add
add
jne
add
nop
add
and
lea
in
stc
rep
repnz
jae
ds
ss
add
movl
mov
pop
add
add
xchg
jb
je
cmp
pop
add
cmp
inc
add
xchg
ret
fdiv
xchg
add
inc
adc
clc
jae
lock
pop
and
xchg
xchg
sub
fistpll
inc
movsl
cmpsb
insb
add
dec
add
add
iret
add
mov
add
mov
pop
add
enter
inc
div
xchg
jmp
fdivs
gs
fnstcw
pop
add
add
repnz
jae
or
xchg
lcall
fninit
outsb
add
in
int
aam
add
add
mov
add
pushf
nop
jge
js
ljmp
or
and
add
jae
pop
push
adc
push
pop
push
stos
ss
add
jmp
and
test
arpl
xchg
jne
pusha
add
stos
gs
cmovb
xor
add
enter
add
inc
aad
addb
add
and
add
add
xchg
push
repnz
jae
mov
push
mov
mov
push
cli
mov
js
addr16
add
xchg
add
fdivp
mov
add
push
add
mov
jbe
and
add
adc
lods
cmp
sbb
lcall
out
outsb
add
or
jae
cmp
gs
mov
hlt
sub
in
rolb
test
add
add
hlt
ljmp
mov
insl
pop
add
jo
imul
and
mov
push
test
add
add
mov
add
cld
pop
mov
mov
adc
push
es
outsb
add
loopne
xlat
add
add
xchg
sbb
test
add
add
rolb
add
ss
cli
dec
cmp
out
sbb
fdivr
xlat
cmp
mov
sar
push
add
add
dec
add
sbb
pop
add
inc
add
into
cmp
push
add
sbb
mov
xor
je
push
add
shr
jl
add
cltd
cmc
mov
add
xor
jge
repnz
jae
and
cmp
push
xor
inc
add
pushf
outsb
add
out
jle
fldl2t
bound
out
mov
add
lret
mov
ja
xor
out
mov
lea
dec
add
fldl
mov
clc
jae
push
push
push
jae
cmpsl
cli
xchg
mov
loopne
cld
jecxz
out
call
add
sub
add
jp
pusha
add
xchg
rep
repnz
jae
cli
hlt
push
mov
hlt
fdivs
sub
lea
lahf
push
add
cli
jae
cmp
imulb
insl
add
add
out
add
or
and
lret
incl
and
jae
pushl
push
add
cwtl
xchg
gs
jg
xchg
std
pop
cmp
ss
add
add
out
add
cli
pop
mov
int3
push
add
sbb
cmpsb
push
sbb
adc
add
add
stc
add
test
mov
dec
add
fmull
mov
out
add
xor
push
mov
lock
ret
lcall
cld
out
es
add
add
arpl
add
xchg
cltd
add
outsb
add
jae
xor
cmpsl
mov
adc
cmc
bound
cmp
jae
pop
add
add
push
add
cmp
repnz
cmp
inc
push
push
mov
lock
ret
cmpsl
mov
mov
mov
cmpsl
dec
add
pop
add
pop
adc
add
flds
cmp
xor
add
cltd
inc
add
and
mov
dec
add
or
xchg
jmp
pop
mov
lock
push
ss
add
inc
mov
add
push
add
or
fimuls
push
add
add
add
add
in
roll
pushf
jno
imul
les
roll
mov
add
xchg
add
add
add
std
div
inc
add
jae
add
add
add
insl
filds
cwtl
add
dec
add
flds
fnsave
add
and
add
sub
add
cmpsl
ds
mov
gs
lock
ucomiss
popf
adc
fucomp
push
inc
add
add
add
mov
cmp
repz
imul
repnz
jae
jae
jae
gs
lods
mov
xchg
and
add
lods
into
adc
or
mov
lock
ret
jae
push
lock
jmp
push
or
xchg
xor
add
xchg
jmp
push
add
cli
loope
cmp
add
push
inc
adc
add
gs
fnstenv
mov
push
and
add
jmp
pusha
add
cmp
call
push
lock
int3
add
add
xor
add
mov
not
repnz
jae
push
push
and
mov
mov
adc
mov
jmp
lods
loopne
xchg
push
add
add
sbb
xchg
test
clc
jae
mov
cli
lcall
push
add
call
inc
add
cmp
jb
add
add
add
add
ret
dec
add
dec
add
add
fadds
outsl
dec
lret
push
or
fst
into
xchg
lock
dec
add
fildl
add
add
xor
cmpsl
mov
inc
push
xor
std
add
dec
add
mov
add
jp
add
add
clc
jae
and
add
push
ss
hlt
sub
add
adc
or
cmc
inc
loope
cmp
stos
push
add
add
scas
add
sbb
inc
add
inc
add
loop
add
pop
xadd
cld
ljmp
adc
add
and
add
dec
add
add
add
lods
ljmp
insb
add
add
mov
inc
add
or
bswap
pop
push
add
jmp
mov
xchg
test
clc
jae
cmpsl
cli
jne
xchg
and
add
inc
add
or
ret
leave
fwait
or
sbb
ret
dec
add
mov
fcomip
stos
mov
or
pop
add
add
in
xchg
sub
cmp
add
xchg
popa
add
jmp
fmull
add
add
sahf
movsl
dec
dec
pusha
add
lea
pop
xchg
insl
stc
cmpl
xchg
jmp
xchg
mov
add
xchg
lods
sub
mov
shl
call
out
sahf
loopne
ds
pop
add
pop
add
iret
xor
shl
mov
std
add
jmp
and
mov
mov
mov
xchg
and
mov
mov
mov
jae
mov
cli
and
mov
mov
test
stos
inc
add
mov
outsl
aas
out
jp
cmp
sub
cmpsl
test
pop
xor
add
add
in
lret
stos
add
add
add
insb
add
dec
inc
fadd
xor
add
push
hlt
outsl
xchg
jbe
cmp
test
cmp
out
add
pop
add
add
add
rolb
popa
ss
mov
add
loopne
jns
mov
pop
add
pushf
and
add
mov
sbb
mov
ljmp
mov
add
out
pop
flds
jge
mov
add
in
pop
add
popf
add
mov
ss
pop
add
ljmp
sarl
cmp
inc
add
pop
xchg
jmp
push
mov
gs
pop
cmp
cli
ds
fucomi
adc
ret
push
xchg
movsl
and
push
add
add
cmpsb
add
inc
call
jp
lods
popa
and
sbb
xlat
cs
cli
mov
shrb
mov
add
shl
jae
dec
or
jne
push
adc
add
xlat
imul
xchg
sub
data16
xchg
rclb
incl
lock
ret
mov
adc
add
xor
jl
dec
push
mov
daa
dec
add
repnz
jae
lock
dec
mov
push
add
inc
add
and
clc
jae
gs
push
ds
or
stos
push
cmpsl
fwait
cmp
imull
scas
add
inc
add
mov
sub
daa
add
inc
add
jle
vmulss
add
or
pop
add
and
fcmovb
push
stc
mov
repnz
jae
push
and
mov
fcompl
add
and
pusha
add
std
mov
mull
incl
push
mov
lock
ret
push
mov
mov
push
mov
xorb
sbb
cmp
imul
dec
add
jo
jnp
in
dec
add
push
aad
xchg
pusha
xchg
jmp
mov
cmp
jne
lock
adc
mov
add
jg
fwait
mov
add
add
lret
and
add
pop
pop
mov
xor
add
push
mov
lock
ret
ss
inc
mov
sbb
pop
adc
mov
sub
fcoml
cltd
add
add
hlt
push
xor
les
out
or
xchg
mov
fisubl
add
inc
add
insb
add
add
ljmp
add
lds
add
leave
ss
add
dec
popf
loop
add
push
add
mov
cmp
outsl
push
mov
lock
ret
xchg
mov
and
or
cmp
into
mov
push
add
pop
out
adc
test
lock
push
add
xchg
cmp
inc
add
rcrl
push
add
les
add
sub
mov
jbe
jle
ljmp
adc
jns
add
add
dec
add
int
inc
call
push
mov
lock
ret
adc
mov
add
inc
add
sbb
into
dec
add
add
and
imul
push
add
add
mov
cmp
adc
add
mov
mov
add
loop
add
bound
loop
dec
loope
add
add
lea
push
add
orl
push
mov
mov
cli
lock
repnz
jae
mov
mov
cli
mov
adc
mov
jb
dec
add
adc
add
arpl
sbb
das
push
add
imul
jae
adc
mov
or
imul
add
mov
jae
jne
jne
and
mov
mov
add
in
aam
lods
shl
rcl
rorb
inc
rep
xchg
jmp
or
push
push
jne
cmp
add
jecxz
clc
fadds
dec
add
fisubl
enter
mov
dec
add
xlat
adc
mov
add
adc
add
add
push
mov
insl
or
jnp
add
xlat
xchg
push
lea
jmp
push
mov
or
cmpsl
fadd
adc
add
shrl
lock
lds
add
pop
add
es
ljmp
add
mov
lods
shll
orb
hlt
out
cmp
ljmp
ret
cmpb
std
dec
dec
imul
cmp
lcall
test
adc
push
add
add
add
leave
test
xor
or
aad
cmp
hlt
sbb
divl
sbbb
mov
inc
call
repnz
jae
mov
or
out
adc
sbb
add
mov
xchg
pop
or
cltd
sbb
push
add
add
lret
add
sbb
ljmp
pop
add
ljmp
stos
add
add
adc
add
mov
aad
sub
mov
cmp
roll
sahf
cwtl
mov
jmp
or
push
and
and
sahf
pop
add
lods
push
and
ja
adc
mov
aaa
aad
or
es
add
add
roll
and
lods
aas
xor
jmp
lock
in
add
mov
jl
icebp
lock
and
add
insb
add
bound
jmp
iret
add
add
add
rcl
add
xorl
gs
cmp
int3
into
xchg
xchg
jmp
push
push
push
mov
xchg
adc
xlat
dec
sarl
jo
jle
adc
add
xchg
jmp
lcall
push
xchg
cmp
add
fcompl
add
test
add
jp
outsb
add
add
or
outsb
add
addl
ss
mov
or
js
out
or
scas
sbb
lret
cli
enter
add
idivl
cmp
cltd
and
add
mov
pop
add
cmp
adcl
call
xchg
popa
dec
add
repnz
jae
hlt
cmpsl
mov
mov
lcall
call
or
mov
add
inc
pop
repnz
add
mov
jmp
fcompl
std
leave
call
add
add
mov
aaa
stc
add
ja
lds
inc
add
xchg
in
add
xchg
ret
cmp
push
dec
add
test
add
add
loop
lret
mov
push
cli
add
add
mov
jl
ret
push
sbb
pop
add
add
xchg
ja
subb
enter
out
xchg
cli
dec
aad
xchg
xorb
add
push
add
lods
movsl
arpl
rcr
in
cmpsb
xor
and
loope
enter
add
add
add
add
add
lods
inc
add
pop
add
xor
ds
or
stos
dec
add
add
mov
ds
jne
cmp
mov
add
mov
sub
cmp
or
push
add
cmpsb
sub
ret
jmp
add
jae
add
add
mov
gs
add
lea
or
arpl
xor
add
add
push
js
mov
cmp
mov
push
pusha
add
sbb
push
or
jns
addl
add
lcall
data16
test
ljmp
pop
mov
mov
mov
mov
xchg
pop
add
popa
data16
sub
add
fidivs
mov
inc
add
add
jne
std
mov
test
push
clc
jae
cli
gs
adc
lea
add
repnz
jae
mov
add
test
jle
out
mov
add
or
lret
mov
xchg
jmp
add
out
jne
add
je
dec
add
xor
add
scas
mov
hlt
adc
icebp
mov
out
add
xchg
fsts
imul
inc
xchg
jmp
pop
mov
pop
lcall
mov
push
add
mov
xchg
push
add
rcrb
iret
imul
dec
cwtl
mov
mov
mov
add
je
mov
test
jae
xchg
mov
std
xchg
lods
repnz
jae
and
jae
push
mov
adc
dec
add
std
inc
add
dec
add
add
fisttps
cmpsl
xor
mov
add
data16
push
add
pop
add
add
nop
in
xchg
arpl
std
add
sbb
aaa
ja
dec
xchg
xor
add
add
pop
fldcw
add
add
sub
sub
repnz
jae
jae
cmp
adc
cs
add
clc
jae
mov
push
mov
lcall
je
into
sarl
leave
xchg
scas
jmp
and
add
cltd
out
shl
pop
fcom
or
bound
sub
adc
add
fnstsw
movsl
add
dec
mov
sub
jne
stc
add
sub
aad
out
sahf
stc
mov
xchg
jmp
cmpsl
pop
gs
mov
call
pop
repnz
jae
fcoms
mov
fdivr
jle
js
push
add
add
add
add
aad
cmpsb
dec
add
push
clc
jae
add
push
ja
mov
add
dec
push
add
into
outsl
test
add
add
cmp
add
add
pop
add
jmp
xchg
jmp
mov
mov
push
mov
cli
mov
mov
push
mov
lock
ret
pop
mov
add
mov
loope
mov
insl
hlt
cwtl
in
add
add
inc
add
cltd
stos
ret
mov
add
mov
inc
add
xor
pushl
lock
lock
fcoms
test
or
sbb
dec
cmp
pop
add
jns
mov
cmpsl
jno
mov
add
insl
or
stc
pop
xchg
jmp
mov
mov
ds
cmpsl
or
add
cmpsb
xor
add
add
inc
add
repnz
jae
mov
and
dec
fsubl
mov
int
in
ss
add
loopne
xor
sub
repnz
jae
push
hlt
mov
adc
adc
add
pop
add
clc
jae
gs
and
add
hlt
scas
jge
add
add
and
jmp
mov
add
add
mov
inc
add
add
sbb
push
out
and
xchg
jmp
push
ss
cmp
add
add
scas
int
ror
sahf
push
dec
add
clc
cmp
cmpsl
icebp
aam
std
lea
adc
lock
ret
pop
cli
adc
dec
xchg
jae
mov
es
add
add
adc
pushf
idiv
push
cwtl
add
sub
sbb
push
add
cmpsl
call
add
and
addr16
mov
add
pop
add
lahf
or
add
repnz
jae
mov
mov
xchg
lock
adc
add
fisubs
sbb
adc
add
sub
mov
data16
push
adc
dec
rcll
push
pop
mov
sub
stos
mov
addl
jb
stc
mov
repnz
jae
gs
mov
dec
fcoms
in
int3
mov
mov
popf
xchg
pop
repnz
jae
or
mov
and
mov
add
pop
add
mov
mov
add
leave
out
add
xchg
jmp
mov
adc
sbb
ss
sub
lods
imul
sub
dec
add
addb
add
push
mov
fucom
test
jge
xchg
jmp
dec
lcall
adc
shrb
pop
jmp
aaa
addl
add
add
pop
add
mov
mov
lock
ret
mov
mov
ds
cmp
add
loopne
mov
subb
lods
pusha
add
add
pusha
add
add
flds
cmp
pop
add
inc
add
inc
push
mov
lock
ret
mov
mov
add
pop
add
ret
out
scas
dec
rolb
xor
sbb
bound
push
add
jne
inc
shr
push
xlat
add
push
pushf
mov
scas
rcrl
aam
aam
push
push
in
mov
adc
sbb
xor
add
push
add
add
faddl
stos
cwtl
dec
test
popa
add
add
out
test
lret
add
pop
in
add
rcl
dec
and
pop
add
movsb
insl
test
ljmp
mov
sbb
clc
jae
fcompl
mov
or
xchg
cmp
cmpsb
add
add
add
mov
add
mov
scas
pop
mov
pop
imul
cltd
xor
add
fcoml
mov
pop
stc
mov
xchg
jmp
and
fsubs
imul
add
sbb
adc
repz
add
push
add
jp
decl
inc
pop
popf
add
sbb
ret
xchg
rol
sbb
sbb
add
clc
dec
add
add
into
add
push
xchg
jmp
or
mov
adc
jne
mov
and
dec
add
clc
repnz
jae
ss
ss
mov
add
mov
add
xor
sub
inc
add
sbb
pop
add
sbb
fadds
jg
js
pop
add
add
xor
add
add
lods
add
aas
and
fdivrs
adc
jae
add
fdivl
and
sub
ret
pop
mov
pop
sbb
stos
pop
add
jge
movsl
jg
pop
add
sarb
js
sub
aad
add
xchg
mov
cmp
test
movsb
dec
add
jp
sub
inc
in
lods
push
add
adc
add
mov
cmp
test
pop
mov
stc
mov
repnz
jae
xchg
push
xchg
cmpsl
push
gs
xchg
push
call
add
pop
add
push
jb
inc
xor
add
stos
pusha
add
pusha
repnz
jae
fdivrl
lcall
mov
dec
add
nop
sahf
mov
shrd
fildl
and
loop
je
je
in
shlb
add
pop
add
inc
icebp
adc
mov
add
arpl
pop
or
push
add
imul
out
xor
add
data16
rolb
es
sub
sub
imul
mov
jae
lock
mov
dec
xchg
ds
push
xchg
jmp
mov
lcall
pop
cmpsl
fdivl
cmp
in
roll
mov
js
pop
cwtl
adc
add
jo
data16
jmp
mov
dec
mov
gs
mov
add
add
div
mov
push
add
sbb
lcall
add
inc
mov
repnz
jae
hlt
mov
gs
fdivs
lock
lahf
fcomps
jle
icebp
out
jne
repnz
jae
and
adc
mov
mov
repnz
jae
mov
cmp
fdivs
jo
stc
xor
repnz
jae
push
and
adc
out
in
add
outsb
add
add
aaa
stc
add
add
or
add
jne
pushf
std
jae
std
jnp
add
shrl
in
cld
sub
mov
dec
fnstsw
mov
cmc
mov
add
pop
add
and
add
push
add
add
loop
add
sub
add
push
stos
ret
add
call
push
or
sub
enter
daa
fiaddl
in
cmpl
testl
jbe
repnz
jae
mov
xchg
notb
and
dec
jl
push
add
in
add
cli
jo
jl
mov
pop
cmp
clc
jae
cmp
dec
xchg
mov
cmp
cld
sbb
mov
lret
lahf
inc
and
push
mov
lock
ret
fmuls
ljmp
jmp
adc
xchg
jae
lock
push
adc
add
jae
fmull
fdiv
cli
and
hlt
mov
or
sbb
pop
inc
add
out
adc
add
adc
add
pop
addb
add
xchg
mov
repnz
jae
push
mov
push
cmp
xchg
xor
shrb
pushf
mov
add
add
fwait
cmp
add
pop
test
lea
jmp
mov
or
gs
lea
hlt
mov
xchg
leave
xlat
dec
sbb
mov
add
push
cltd
add
addb
add
jnp
iret
mov
mov
push
clc
into
mov
push
add
adc
andb
adc
add
sbb
adc
mov
std
call
xor
add
repnz
jae
mov
adc
ds
add
add
inc
sbb
test
out
aam
add
add
movsl
or
bound
xor
pop
data16
arpl
jb
mov
jmp
lea
repnz
jae
adc
lock
ss
add
add
andb
sub
add
add
mov
mov
bswap
repz
mov
add
and
add
and
add
add
mov
sti
push
add
dec
add
cmpsl
ret
mov
lret
add
add
add
cli
push
jl
rolb
leave
add
and
add
add
add
es
outsl
fld
or
sbb
bound
stc
popf
inc
add
xchg
ret
push
ss
shrl
roll
xchg
jmp
mov
pop
jae
adc
cmp
ret
add
mov
push
mov
lock
ret
mov
mov
xor
add
or
or
repnz
jae
and
mov
jae
pop
fcomps
add
jl
mov
int
loope
jge
daa
fiadds
and
lret
xor
add
add
fcomps
addr16
roll
out
add
sub
add
add
add
jnp
add
xchg
jmp
mov
adc
and
push
lcall
xchg
jae
add
mov
pop
mov
jae
pop
pop
add
add
pop
add
cmpl
call
push
push
jae
xchg
mov
mov
push
add
imul
push
cltd
xchg
dec
add
add
fisttpll
push
aad
ret
inc
mov
repnz
jae
lock
pop
cli
push
xchg
mov
xor
add
dec
mov
movzwl
push
mov
lock
ret
push
lcall
pop
add
xlat
loop
mov
loop
mov
add
and
hlt
fists
clc
jae
mov
xchg
push
lcall
add
add
pusha
add
data16
fcom
and
mov
lock
ret
lock
add
cli
aam
cld
adcb
add
mov
sub
push
push
add
jnp
add
jbe
or
mov
outsb
add
xlat
pop
nop
push
add
add
xchg
out
pop
dec
inc
add
add
push
xchg
call
xchg
jmp
xchg
mov
lret
repnz
jae
cli
and
pop
xchg
jae
dec
cli
cmp
add
mov
shr
mov
add
add
js
aam
outsl
add
dec
add
jge
lock
mov
xchg
jmp
and
or
mov
pop
push
lock
add
add
mov
sti
sti
adc
dec
add
sub
aas
jns
les
fwait
scas
cmp
inc
add
pop
pop
add
push
fldl
pop
add
add
sar
hlt
xchg
adc
add
add
mov
add
sub
xchg
clc
jae
fdivl
push
dec
mov
in
add
in
scas
and
rclb
and
add
xor
jo
and
add
mov
add
lods
ljmp
or
movsb
mov
repnz
jae
push
push
adc
fdivl
ljmp
add
add
and
mov
imul
cltd
mov
movsb
dec
jns
jo
inc
mov
push
mov
lock
ret
mov
adc
insl
nop
mov
add
imul
add
push
add
inc
add
mov
inc
mov
add
push
stos
andl
jp
inc
and
add
hlt
lret
cmp
pop
add
add
aas
aad
lds
adc
dec
add
add
jbe
xchg
call
repnz
jae
push
mov
adc
pop
add
cwtl
add
jmp
mov
push
outsl
add
cmp
add
in
jecxz
sbb
push
test
in
dec
add
add
add
jge
dec
rorl
mov
lds
popa
xchg
jmp
mov
xchg
xchg
lcall
les
int3
int3
arpl
add
div
clc
jae
fcoml
ss
pop
jae
cld
adc
add
mov
jle
rcr
insb
add
clc
jae
mov
xchg
mov
push
and
add
add
lret
mov
fisttpl
add
or
mov
push
mov
lock
ret
fsubs
pop
mov
cwtl
xchg
add
repnz
jae
push
push
push
dec
xchg
mov
lcall
add
shl
push
add
dec
or
test
mov
add
adc
add
adc
shlb
mov
push
jle
test
mov
das
loop
add
push
xchg
sbb
adc
add
notb
repnz
xchg
add
mov
sarl
sbb
add
xor
mov
push
mov
lock
ret
jae
sbb
nop
cltd
jg
sub
shll
push
add
mov
add
adc
sbb
add
addl
cmc
add
ljmp
xor
xchg
mov
jge
mov
jmp
add
fdivl
push
push
gs
mov
mov
lock
ret
xchg
mov
sub
subl
call
repnz
jae
jae
lcall
mov
sbb
pop
ljmp
jl
sbb
out
leave
add
xlat
popa
mov
lods
and
imul
add
cli
xchg
xchg
push
xchg
jmp
dec
push
pop
cmp
ss
mov
jne
add
roll
int
sbb
dec
add
jbe
mov
add
ja
call
push
lret
add
lea
jo
cmc
shl
je
repnz
jae
xchg
gs
out
push
add
sbb
mov
mov
cmc
sub
jne
iret
enter
sub
stos
mov
sbb
cwtl
push
add
outsl
mov
add
jl
add
adc
mov
xor
add
icebp
xlat
jmp
add
adc
add
dec
add
add
mov
out
cmp
sub
pop
out
lods
movsb
mov
add
iret
out
sub
mov
dec
xchg
jb
stos
mov
clc
add
xor
mov
push
add
fs
pminub
es
add
push
sti
inc
add
xchg
ret
fdivl
cmp
das
or
scas
add
andl
add
sbb
mov
loop
subb
add
dec
add
mov
clc
jae
mov
mov
mov
loopne
jnp
insl
or
leave
push
aam
push
jbe
rolb
vpaddw
add
scas
inc
add
jmp
jns
jp
push
add
mov
xchg
jmp
mov
add
fdivl
lea
jle
mov
movsb
repnz
jae
xchg
mov
jne
mov
add
shld
lret
add
fwait
add
add
lahf
lcall
adcl
test
clc
jae
or
xchg
jne
test
fptan
cmp
adcl
sub
add
jne
add
mov
gs
mov
mov
aas
add
add
add
mov
pop
insl
cmp
push
jle
in
jbe
test
pop
add
je
movsb
inc
scas
fisttps
add
add
add
in
out
mov
movsb
pop
add
lds
movsb
js
test
and
add
add
add
lar
add
mov
and
add
mov
sti
cmp
lahf
popf
lods
add
pop
sti
add
movsl
lds
popa
rclb
add
xchg
subb
add
add
clc
jl
pop
std
jns
je
cmp
and
add
xchg
jne
repnz
jae
mov
cmp
mov
mov
clc
jae
mov
mov
and
mov
adc
call
add
ret
in
push
mov
pop
mov
scas
dec
mov
test
add
add
testb
ret
dec
push
mov
cmc
add
lds
add
dec
adc
clc
jae
mov
jae
mov
jne
adc
leave
add
mov
xlat
mov
inc
into
pop
add
mov
fildl
pop
add
add
test
fsubrs
mov
adc
add
fwait
jecxz
shr
mov
xor
cmpsl
jmp
es
mov
add
adc
add
add
cltd
stc
mov
push
mov
lock
ret
or
gs
mov
add
in
insl
jecxz
push
add
add
clc
jae
jne
hlt
mov
ds
dec
mov
or
mov
jae
mov
push
xchg
mov
jae
cmp
icebp
and
add
xchg
fdivp
mov
shl
pushl
and
gs
mov
mov
jae
pop
add
cli
mov
xchg
loop
xor
xlat
xchg
push
push
mov
lock
ret
adc
adc
lret
sbb
daa
pop
add
negb
pop
out
fldt
cmp
xor
add
imul
pop
add
adc
xor
add
jl
test
jge
lock
aaa
addb
add
adc
test
push
add
outsl
jae
add
push
repnz
jae
mov
cmpsl
push
adc
fsubrl
push
add
mov
ret
call
jae
inc
add
xchg
ret
xchg
gs
sub
mov
jo
es
add
and
add
add
adc
xlat
pop
lods
loope
push
ret
add
out
pop
add
lahf
add
or
push
add
dec
xchg
jmp
mov
push
add
push
add
add
in
lds
add
out
adc
add
add
cmp
inc
into
int
out
add
mov
xchg
shll
xchg
jmp
hlt
ds
push
mov
mov
add
xor
cmpsb
and
add
outsb
add
and
adc
in
cmp
xor
add
cltd
cmc
push
push
xor
add
adc
hlt
arpl
mov
xor
add
adc
in
stc
push
repnz
jae
add
hlt
mov
fcoml
lcall
rcr
aad
test
add
pop
mov
dec
add
cmp
add
mov
jae
ds
push
hlt
cmp
mov
cmp
in
add
cmp
mov
jae
add
xlat
es
movb
cltd
mov
mov
nop
add
add
add
dec
cmp
lea
lock
jns
xor
fdivrl
add
inc
pushf
je
stos
add
fwait
sbb
inc
add
sub
iret
stc
mov
push
mov
lock
ret
adc
rcll
push
inc
add
loop
xchg
jmp
adc
add
and
repnz
jae
mov
add
ds
cmpsl
cmpsl
imul
into
dec
lds
or
dec
add
inc
add
jnp
out
pop
mov
or
pop
scas
add
leave
test
mov
jb
imulb
add
dec
add
add
xor
arpl
mov
add
test
add
add
xchg
jmp
xchg
mov
push
shl
add
jnp
add
enter
add
dec
lock
inc
repnz
jae
jae
mov
cli
push
lock
mov
mov
add
add
clc
jae
mov
mov
cmp
push
inc
pop
mov
addb
jecxz
add
testb
and
add
jnp
fdivrl
mov
jb
sub
jae
and
repnz
jae
gs
cmpsl
fdiv
mov
xchg
gs
or
fidivl
add
or
mov
sbbb
pop
add
add
mov
jmp
push
add
or
xor
push
add
cwtl
in
je
mov
add
jp
rclb
inc
add
test
add
add
repnz
das
fimull
add
rcl
shlb
popl
sub
or
loope
cmpb
bound
lock
push
sbbb
cmp
aas
mov
in
rorl
adc
add
out
lret
push
xor
dec
push
repnz
jae
push
add
pop
push
adc
add
and
add
insl
adc
add
add
icebp
rorb
aad
or
add
stc
dec
xchg
jmp
and
mov
gs
cmpsl
adc
cmpsb
dec
cli
lods
mov
xor
lahf
arpl
add
xor
out
test
xchg
jmp
fcomps
or
jne
mov
adc
ljmp
clc
jae
hlt
push
push
jae
ds
cli
fcoms
xor
dec
add
ficoms
fadds
test
add
add
dec
add
add
inc
mov
xchg
jmp
mov
push
adc
mov
and
add
mov
movsb
xchg
jmp
mov
mov
fucom
mov
cmp
data16
dec
rclb
ret
xchg
jmp
ds
dec
mov
cli
or
adc
add
mov
inc
stos
shrl
out
add
std
cltd
push
add
hlt
and
add
mov
out
jns
add
add
out
xlat
cmp
mov
and
mov
testb
jge
add
call
add
adc
add
mov
mov
shll
push
add
loope
add
xorl
faddl
and
mov
xchg
addr16
call
push
mov
lock
ret
lcall
jle
data16
add
xchg
jge
jnp
add
jp
inc
test
mov
mov
add
add
ficomps
add
lods
mov
add
dec
add
jmp
jae
add
cmpsl
mov
mov
pop
cmp
pop
mov
or
pushf
stos
dec
popa
fldt
add
or
add
add
mov
cmp
ss
mov
addb
add
add
sub
add
xchg
repnz
jae
pop
dec
cmpsl
mov
and
xor
jns
out
outsl
jnp
inc
add
and
adc
add
in
sahf
pop
into
xor
fadds
and
dec
add
aaa
jmp
add
clc
jae
pop
xchg
mov
lcall
add
add
call
adc
mov
mov
mov
mov
jne
mov
add
push
repnz
jae
fdivl
mov
and
loopne,pt
testl
out
andl
scas
dec
loopne
nop
add
and
add
add
inc
fadds
movl
ret
lock
mov
gs
mov
mov
add
pop
sub
lea
jo
pop
cli
lahf
lcall
add
mov
add
sub
xchg
ret
gs
push
sub
mov
jecxz
cmpsb
sbb
aam
popf
imul
jbe
cwtl
cwtl
rcll
stc
decl
push
mov
lock
ret
mov
add
add
push
movsb
pop
mov
add
out
add
pop
add
test
js
sub
aad
inc
adc
mov
adc
pushl
fcoms
pop
mov
inc
cmpsl
mov
negb
and
jns
add
push
push
add
cmp
stos
jle
mov
ret
lahf
add
and
push
movsb
in
lret
outsl
sub
sub
mov
rolb
xor
add
adc
xor
add
push
aaa
add
sub
add
mov
repnz
jae
cli
ss
gs
push
add
loope
bound
xchg
int3
int3
add
stc
dec
add
sub
in
cli
and
add
or
in
cmp
fstpt
xchg
fisubl
or
add
push
add
cmc
loope
push
xor
add
cmp
jae
xor
add
call
call
xchg
ret
lock
push
iret
add
ret
repnz
jae
or
dec
gs
ds
ds
add
push
loopne
add
add
sbb
mov
mov
faddl
sarl
pop
sbb
mov
addr16
jns
fstpt
lods
aas
add
cmpsl
stc
inc
repnz
jae
add
dec
xchg
cli
dec
push
push
add
mov
pop
stc
push
repnz
jae
ss
jne
jae
mov
mov
push
inc
xchg
inc
repnz
jae
or
jae
mov
add
cltd
sar
mov
jmp
shll
lret
adc
add
scas
add
in
pop
addb
insl
dec
test
repnz
in
in
mov
add
and
xchg
movsl
pop
sub
xlat
jge
int3
inc
lods
pop
jb
add
add
dec
add
lock
add
jb
add
add
pop
add
loope
aaa
adc
imul
add
clc
add
xchg
sbb
outsl
insl
pop
out
inc
add
mov
add
pop
fcomps
cld
add
jno
ja
jecxz
add
and
add
mov
lods
add
leave
add
push
outsb
add
pop
sub
movsl
jae
repz
xchg
push
ret
and
add
shll
add
repnz
jae
cmp
xchg
fdivs
lods
cld
mov
add
popf
loope
add
mov
pushf
pop
cmp
jp
add
add
cmp
sbb
mov
jp
mov
test
vpmulhuw
icebp
mov
loop
cmp
inc
add
mov
add
pop
dec
add
add
addl
jbe
rolb
pop
add
outsb
add
dec
add
and
add
outsl
ret
xchg
inc
cmp
xchg
jmp
xchg
mov
cmp
subb
sbb
and
shrb
cmc
jne
push
push
add
xchg
jmp
lock
xchg
mov
mov
and
dec
pop
out
ds
adc
add
xchg
and
add
clc
jae
ds
xchg
adc
jb
shlb
add
xor
xchg
jmp
add
ds
xchg
ss
pushf
xchg
jmp
mov
cli
cli
and
ds
mov
push
popf
adc
add
out
gs
add
ffree
addr16
push
add
out
clc
fstps
inc
add
add
sub
push
add
mov
add
out
cmp
add
iret
add
imul
je
pushf
inc
push
xchg
jmp
mov
gs
push
mov
jno
lods
and
add
sarl
add
xchg
jmp
hlt
mov
push
mov
gs
mov
adc
adcl
ljmp
lcall
pop
add
popa
push
add
pop
pop
add
stc
lea
repnz
jae
xchg
gs
mov
ret
add
pop
nop
repz
repnz
jae
ds
cmp
jne
push
outsb
add
sub
dec
jmp
fiadds
add
scas
jno
mov
adc
add
mov
add
test
mov
pop
addl
add
and
mov
rep
xchg
jmp
push
mov
fmuls
or
jnp
sahf
aas
data16
icebp
sahf
sub
repz
fildll
mov
add
rorb
jmp
fcoms
fdivs
add
inc
pop
mov
cmp
sub
push
and
add
dec
jbe
add
and
add
add
add
js
jmp
mov
ss
lcall
add
xchg
in
jae
mov
fildl
lds
sti
push
xlat
cmc
sbb
dec
add
add
fisubs
sub
popf
mov
xchg
jmp
jne
adc
mov
dec
push
insl
inc
add
les
aaa
leave
add
add
sti
movsb
or
loop
imul
add
and
add
and
add
push
in
insb
add
stos
add
adc
add
sub
mov
and
add
add
add
jle
pop
xor
add
push
push
mov
lock
ret
fcomps
gs
mov
mov
add
sbb
xlat
adc
dec
add
cli
int
adc
sub
sbb
add
clc
jae
and
or
fsubl
add
sub
push
stos
add
shrb
add
xor
add
test
add
add
hlt
jp
shll
add
xchg
add
add
fadds
clc
fs
pop
mov
push
imul
inc
add
out
add
cmp
inc
lds
cmp
add
add
pop
add
stos
sub
jbe
sub
add
or
out
std
jbe
roll
inc
add
test
xorb
push
add
lods
add
mov
popf
add
clc
jae
mov
cmpsl
cmpsl
push
cmc
out
push
dec
add
add
push
mov
add
or
push
jae
add
xchg
dec
cmp
jmp
mov
fdiv
mov
and
add
sahf
add
popa
mov
add
adc
mov
dec
add
adc
inc
lods
repnz
jae
gs
gs
ss
adc
mov
daa
mov
andl
add
ss
rorb
loop
sub
push
add
push
add
mov
popf
add
xchg
add
cmp
cmpsl
dec
add
jae
shrb
out
mov
push
xchg
add
jmp
push
adc
hlt
pop
jne
imull
cmc
data16
add
pushf
clc
aaa
xchg
add
addr16
pop
add
push
add
add
xchg
jmp
mov
mov
mov
jae
sub
xor
add
jmp
mov
adc
mov
nop
and
inc
add
fwait
mov
add
jmp
into
cmp
int
add
dec
add
fisubl
in
popf
ret
test
push
add
add
mov
outsl
xor
add
adc
idivb
frstor
ret
insl
push
cwtl
mul
jp
stc
mov
repnz
jae
push
mov
xchg
and
add
and
outsl
jecxz
inc
stc
stos
push
mov
lock
ret
cmp
add
push
hlt
xchg
jl
arpl
pusha
add
jo
push
push
mov
rolb
jmp
add
stc
jmp
repnz
jae
mov
push
mov
mov
add
xchg
clc
jae
hlt
mov
lock
mov
faddl
or
add
dec
les
mov
sub
outsb
add
xor
add
insb
add
inc
in
lea
or
xchg
and
add
or
mov
loop
sbb
add
shll
mov
in
sub
xorl
add
sub
loopne
in
arpl
pop
jns
in
cmpsl
xchg
mov
lock
ret
push
cmpsl
gs
mov
cmp
rcrl
dec
out
add
subl
lcall
lods
jg
inc
add
sub
jg
xchg
data16
pushf
movsb
and
cltd
xchg
jecxz
fildl
push
add
add
jge
data16
add
stc
pop
repnz
jae
mov
adc
gs
pop
adc
add
addb
dec
pop
rcrl
sbb
inc
add
add
add
repnz
jae
add
push
mov
mov
add
movl
add
add
push
mov
lock
ret
mov
jne
pop
push
sub
sahf
sub
enter
and
push
test
fnop
dec
add
inc
mov
xor
call
clc
push
add
xchg
xchg
in
incl
pushl
gs
fadd
mov
test
cld
add
add
add
cmp
clc
xchg
dec
add
add
push
add
cmp
not
jns
dec
add
movq
mov
mov
mov
lock
ret
xchg
mov
jne
cmpsb
loopne
dec
add
mov
add
add
mov
add
xor
add
add
pop
add
je
sarb
sub
cmp
test
add
stc
mov
xchg
jmp
push
gs
mov
gs
xchg
and
mov
add
pushf
pop
add
movsb
mov
mov
sbb
or
fucomp
inc
rclb
nop
add
test
cltd
add
lods
push
add
add
fistpl
add
mov
push
repnz
jae
dec
cmp
mov
mov
mov
mov
sbb
in
xor
add
insl
add
fstpt
add
mov
into
and
add
hlt
mov
cltd
dec
push
add
add
add
xchg
bound
cmp
je
xchg
jmp
and
add
push
xchg
arpl
pop
loope
nop
stos
push
dec
add
push
push
lea
mov
add
in
add
lcall
rol
adc
xchg
daa
das
add
repz
mov
icebp
test
hlt
lds
cwtl
inc
add
or
movsb
js
mov
add
repnz
jae
mov
and
lock
lcall
inc
add
movsb
add
adc
aad
adc
add
out
inc
add
mulb
adc
in
dec
add
jp
lock
pop
sbb
sbb
mov
sbb
ss
shl
push
add
loope
jecxz
gs
ljmp
jns
add
add
xor
add
xchg
jmp
mov
xchg
mov
and
jno
adc
or
scas
jge
mov
lock
data16
xor
add
jae
add
mov
xor
cmp
add
cmp
movsb
or
cli
mov
dec
add
ljmp
ret
push
add
decl
add
add
mov
ret
scas
push
ficomps
add
add
mov
inc
add
add
add
add
add
lods
jp
jae
test
mov
dec
cmp
jmp
push
mov
mov
mov
mov
inc
shrb
add
stos
add
or
in
out
aaa
flds
call
or
in
xchg
jmp
mov
add
xchg
push
add
or
test
add
add
cmp
ret
push
add
movl
mov
add
mov
lods
mov
popf
call
cwtl
lds
jb
mov
fldl
inc
add
sbb
add
add
add
pop
add
mov
inc
add
stos
add
in
jo
lcall
leave
or
inc
sub
repnz
jae
hlt
push
hlt
xchg
jne
lcall
rcl
rcrb
mov
jmp
inc
pop
scas
sub
add
mov
inc
add
sub
aaa
mov
sub
add
and
add
add
push
xchg
jmp
lcall
jne
gs
ss
add
inc
add
faddl
out
aaa
mov
in
cmp
repnz
push
add
add
jg
popf
cltd
jb
mov
shl
jae
lcall
push
mov
mov
add
hlt
inc
je
repnz
jae
mov
mov
push
movsl
in
loope
add
or
cmp
nop
leave
or
dec
in
add
mov
cmp
insb
add
add
leave
addr16
cwtl
test
add
mov
les
sbb
add
push
add
in
fcmovnu
repnz
mov
fsub
cld
jno
andl
cmc
xor
lcall
daa
inc
add
clc
jae
jae
adc
dec
hlt
pop
add
outsl
out
insl
add
inc
jp
sub
mov
nop
pop
imul
adc
sbb
or
or
sbb
inc
add
cmpsb
mov
add
in
inc
add
mov
clc
jae
mov
dec
push
and
xchg
sub
xchg
push
popa
sub
jb
daa
or
inc
add
repnz
jae
adc
cli
cmp
add
dec
add
dec
add
fcos
jl
add
add
sahf
pop
add
mov
jl
sbb
clc
jae
mov
xchg
hlt
cmp
mov
sbb
or
sarl
dec
add
add
sbb
dec
addb
add
lea
add
dec
push
add
outsl
add
push
fistps
sub
andb
xor
pop
repz
add
add
jbe
imul
movsl
dec
add
cmpsl
add
ljmp
sub
inc
add
xchg
ret
push
cli
ss
mov
pop
and
out
mov
call
repnz
jae
xchg
jne
mov
hlt
lcall
and
clc
jae
mov
mov
mov
push
push
add
popf
int3
jno
out
insb
add
add
add
jmp
add
add
add
shr
push
mov
lock
ret
mov
mov
dec
sbb
ja
je
cmc
aad
xchg
test
mov
stos
push
add
add
add
jl
add
add
mov
aam
adc
xchg
loopne
add
movl
xor
jecxz
inc
add
nop
filds
lock
ret
mov
fdiv
fdivrs
adc
push
xchg
jmp
adc
or
adc
add
leave
mov
adc
add
mov
dec
adc
add
push
add
pushf
ljmp
fiaddl
add
outsl
arpl
add
xlat
xlat
inc
add
xchg
ret
mov
jae
pushf
or
dec
dec
data16
lret
push
add
es
add
dec
add
xchg
ret
arpl
push
add
in
and
add
je
push
mov
lock
ret
push
and
scas
mov
imul
inc
add
data16
in
loope
xchg
xor
push
mov
lock
ret
mov
mov
gs
scas
inc
add
xor
push
sbb
mov
adc
sbb
dec
mov
add
push
mov
mov
pushf
in
cmpsb
push
jae
cltd
sub
and
add
xorb
add
mov
xor
mov
incl
icebp
or
cmc
adc
add
add
push
sbb
aas
loopne
jne
xchg
jmp
mov
shlb
mov
xchg
jmp
gs
xchg
aaa
roll
add
or
pop
pop
add
lock
pop
adc
cwtl
lea
cmp
add
add
add
push
and
add
fldcw
jne
mov
push
lcall
jne
repnz
jae
mov
lods
sbb
pop
scas
add
popl
dec
add
add
or
xor
add
jns
int
nop
ret
mov
jecxz
push
inc
add
mov
add
jnp
add
sbb
leave
in
push
pop
jmp
add
add
add
scas
and
add
pop
add
xchg
mov
add
incb
dec
add
lret
dec
add
rorl
repz
pop
add
dec
pop
inc
pusha
add
out
outsl
cmp
mov
push
gs
repnz
jae
mov
gs
add
add
add
clc
jae
push
dec
cli
xchg
xchg
push
dec
mov
fadd
inc
add
pop
test
adc
fmuls
adc
add
xchg
mov
repnz
jae
hlt
push
xchg
ss
xor
inc
mov
int3
in
cwtl
lcall
add
mov
dec
add
and
stos
add
dec
test
add
enter
pop
add
clc
pushf
mov
pushl
sbb
shlb
mov
adc
popf
xorb
or
add
add
or
mov
push
push
mov
lock
ret
lock
cli
mov
mov
scas
add
sbb
xchg
add
jo
xchg
xor
add
xchg
jmp
ds
mov
or
add
add
fadds
mov
mov
lock
ret
pop
gs
mov
mov
lea
xchg
jmp
cmpsl
xchg
or
jne
and
mov
fdivr
pushl
and
add
enter
cli
or
mov
out
sbb
inc
add
add
push
test
mov
lea
add
mov
push
mov
lock
ret
cmp
push
mov
aad
flds
insl
add
pop
shlb
pop
add
cmp
aad
inc
add
xchg
ret
mov
mov
mov
dec
fdivr
popf
xchg
jmp
lock
xchg
push
jae
ror
cs
sub
sub
and
push
roll
scas
and
mov
jmp
push
and
pop
cmpsl
or
mov
add
enter
xor
add
add
mov
add
push
mov
lock
ret
mov
mov
xchg
xchg
jmp
mov
ds
push
mov
fcom
xor
sti
push
add
out
hlt
movb
add
jbe
add
add
push
add
add
dec
pop
lock
or
paddb
pusha
add
and
add
lds
add
stos
lahf
int
add
fmuls
add
adc
sub
jg
pop
add
jne
jecxz
or
test
lcall
cmp
push
cmpsl
fmuls
popf
sbb
mov
add
mov
repnz
jae
push
mov
add
mov
add
in
daa
pop
add
adc
stc
je
repnz
jae
cmpsl
ds
gs
mov
ss
add
push
add
cmp
add
add
call
in
inc
add
xchg
ret
push
mov
int3
mov
add
xchg
add
int3
mov
add
loope
test
repnz
insl
add
push
add
dec
add
jns
mov
ret
xchg
cmc
test
jae
mov
mov
ds
hlt
jae
mov
lods
daa
lods
add
mov
repnz
jae
jae
push
mov
mov
mov
xorl
dec
add
lods
pop
cmp
mov
leave
decl
add
out
and
xchg
nop
jle
add
rorb
xor
xor
add
sub
sub
shlb
add
xor
data16
inc
mov
sbb
clc
jae
gs
mov
mov
mov
xchg
push
add
mov
add
mov
lock
ret
pop
fcoms
pop
cmp
mov
scas
jmp
filds
lret
dec
pushf
lret
or
test
ljmp
add
dec
add
sbb
push
add
add
adc
dec
cmp
popl
pusha
add
add
mov
add
add
add
das
mov
add
jb
xchg
test
mov
call
push
sbb
lock
ret
fdivr
add
adc
add
add
add
add
lea
add
add
clc
jae
push
push
mov
fmul
adc
sub
mov
xchg
mov
push
mov
lock
ret
mov
mov
mov
xor
dec
cmp
mov
lock
ret
mov
ds
lcall
push
add
add
ljmp
outsl
push
add
repz
jmp
dec
add
add
clc
jae
mov
and
xchg
mov
add
mov
mov
mov
xchg
jmp
mov
cli
add
ss
mov
jl
push
adc
add
fcoml
add
add
add
push
or
leave
sbb
pop
addr16
mov
subb
push
mov
add
jne
mov
xchg
jmp
push
pop
add
mov
fcomps
sbb
jae
cmp
fcomps
add
mov
lret
mov
add
in
loopne
mov
add
mov
jle
ret
mov
or
mov
push
mov
lock
ret
gs
push
pusha
add
add
adcl
add
or
cmpsb
popa
out
push
add
add
incl
push
adc
lcall
xchg
jmp
pop
and
dec
and
mov
stos
inc
add
mov
subb
xchg
jae
cmp
xchg
and
nop
add
bound
pusha
add
loope
add
int3
arpl
loope
mov
movb
add
in
inc
mov
mov
xchg
ret
cli
mov
push
jne
gs
pushf
add
repz
lcall
clc
jae
mov
dec
add
mov
mov
gs
ror
mov
add
in
push
add
mov
xchg
jmp
mov
pop
push
gs
and
add
add
out
jmp
add
out
pop
jle
or
jg
jp
cmp
push
sub
mov
cmp
mov
add
add
hlt
cltd
aad
add
ljmp
ret
push
mov
cli
or
pop
bound
cmpsl
cmp
mov
add
xor
xchg
add
jb
cmpsb
jge
imulb
pushf
add
cmc
imul
or
and
add
mov
repz
out
add
add
or
push
fmull
imul
inc
add
sub
add
mov
add
sbb
clc
jae
jne
gs
cmp
dec
lock
add
sti
inc
xchg
jae
mov
adc
mov
add
add
lds
pop
cli
inc
add
xchg
ret
fcoml
add
xchg
mov
and
add
lods
jo
xchg
push
add
add
add
mov
scas
push
dec
add
loop
add
inc
or
cwtl
inc
jbe
inc
push
add
jb
cmp
sbb
pusha
add
jmp
push
xchg
jne
dec
xchg
add
adc
mov
jmp
push
push
mov
cmpsl
mov
xchg
add
push
push
hlt
pop
add
lea
add
je
cmc
mov
cmp
add
sbb
push
and
add
rcl
push
add
imul
imul
sbb
cmp
jns
cwtl
adc
add
rcl
push
add
add
in
test
bound
divb
pop
movups
pop
add
shl
jmp
adc
add
jp
jle
push
sub
ds
sub
or
add
sub
dec
mov
scas
dec
add
inc
or
sahf
push
pop
add
xchg
stos
dec
add
add
lea
mov
add
out
cmp
rclb
sahf
inc
add
xchg
ret
push
add
dec
add
jg
add
pop
add
fcoml
xor
add
xlat
xor
dec
sar
call
mov
add
xchg
ret
cli
gs
mov
add
mov
ret
add
insb
add
xchg
add
call
or
lds
mov
ret
sbb
push
add
cmp
push
add
nop
inc
add
xchg
jmp
mov
adc
fdivrl
cmp
mov
pop
add
rcll
add
roll
add
mov
outsl
add
lods
pop
jne
add
dec
pushf
sarl
mov
call
sub
inc
add
xchg
ret
mov
cli
data16
add
ljmp
popa
adc
add
add
add
inc
or
movsb
dec
add
add
ds
mov
cld
jecxz
jns
add
pop
mov
popf
mov
divb
data16
xchg
shll
rcl
in
std
jns
nop
add
add
xchg
push
add
xchg
push
outsl
jae
clc
jae
cmpsl
pop
dec
mov
mov
add
and
add
cmpsb
add
arpl
xchg
jmp
mov
ss
lock
pop
add
add
add
mov
mov
push
clc
jae
mov
push
gs
jo
in
insb
add
lcall
inc
add
xchg
mov
xchg
jmp
push
mov
dec
push
cmpsl
and
push
push
mov
xor
dec
add
stc
pop
repnz
jae
push
mov
mov
jae
mov
cmp
push
lock
mov
jmp
push
mov
pushl
hlt
push
push
lock
mov
repnz
jae
push
xchg
fdivs
rorb
jp
jg
push
aad
aam
jb
add
add
add
outsl
add
lret
add
test
or
inc
movl
add
push
lcall
push
add
push
idivl
in
addr16
jg
add
add
lret
adc
notb
clc
jae
and
mov
pop
cli
and
adc
inc
add
nop
push
pop
lea
adc
mov
in
cmp
bnd
or
scas
add
in
xlat
addr16
add
mov
jae
mov
dec
mov
and
gs
mov
repnz
jae
mov
mov
push
add
ror
stc
pop
repnz
jae
pop
adc
mov
scas
mov
fmull
pop
push
ljmp
mov
add
add
mov
and
popa
inc
add
add
push
data16
pop
push
bound
adc
pop
xor
call
dec
add
jg
push
pop
mov
jns
mov
add
push
add
fcompl
sub
mov
add
xchg
and
into
push
sbb
mov
hlt
lds
add
add
addl
stos
insb
add
adc
mov
cli
nop
outsb
add
loopne
add
outsl
push
mov
lock
ret
mov
mov
popa
push
add
pop
add
cmpsb
int
push
add
or
mov
cmpsb
add
pop
add
addl
jmp
mov
mov
lock
mov
jo
jmp
mov
push
and
mov
lock
arpl
add
lahf
repz
mov
push
mov
lock
ret
gs
jne
mov
jg
add
jne
add
fistpll
fistps
repnz
jae
jae
adc
add
jne
add
jne
data16
mov
add
add
jno
inc
dec
xchg
jmp
and
xchg
adc
xor
jmp
mov
mov
hlt
mov
push
add
adc
inc
add
xchg
ret
add
mov
and
mov
mov
add
push
add
cmpsl
push
sbb
and
jle
popf
ss
or
inc
jge
adc
add
push
scas
cmc
fdivrs
xchg
cld
inc
add
xchg
ret
push
ds
jae
mov
fiaddl
push
add
mov
bound
je
mov
loopne
lods
aad
scas
xchg
mov
add
push
fadds
mov
ja
add
clc
xchg
lret
cmp
xorb
add
sbb
scas
not
pop
xchg
add
fiadds
push
enter
add
outsl
xor
aas
add
repz
dec
in
lret
dec
jg
lea
xor
stc
mov
xchg
jmp
mov
adc
mov
cli
mov
add
add
loopne
add
daa
xlat
add
pop
mov
xchg
jmp
mov
gs
fdivs
mov
decl
push
mov
lock
ret
add
adc
loope
shlb
dec
add
add
add
mov
xor
add
or
mov
das
jge
or
jmp
lds
lds
lret
ret
mov
dec
add
push
add
loopne
mov
sbb
and
add
add
lahf
js
clc
jae
pop
mov
dec
jae
xchg
lock
sahf
push
add
add
and
adc
add
test
add
outsl
or
push
test
sub
int
jg
xchg
ficompl
sbbb
lea
push
into
add
shlb
add
stos
repnz
jae
mov
mov
dec
jne
gs
push
add
add
mov
jae
rcr
add
ror
repnz
jae
fdivs
mov
mov
pop
mov
push
sti
adc
gs
into
dec
add
add
add
test
xchg
jmp
xchg
add
and
mov
add
arpl
push
add
hlt
add
mov
test
pop
adc
subb
adc
or
cmpl
jmp
mov
dec
mov
je
rcl
popl
data16
jp
inc
add
or
scas
sub
cmp
sub
dec
add
jae
mov
add
sbb
outsl
cmc
add
add
sub
rol
add
nop
mov
jae
pop
add
mov
add
cli
and
sub
push
add
add
sub
sbb
or
xchg
icebp
xor
ljmp
imul
add
push
mov
lock
ret
xchg
add
and
cmp
add
dec
jae
or
je
es
push
clc
jae
cmp
mov
cmpsb
or
pop
add
icebp
dec
add
out
jp
cmpsl
ja
cmp
sarb
andb
xchg
jmp
lcall
mov
je
cmpsl
cwtl
dec
mov
push
xchg
jmp
lcall
hlt
adc
mov
iret
cmc
ret
in
out
pop
add
xchg
jmp
mov
and
gs
dec
and
cli
fists
jns
add
mov
xor
add
lret
pop
add
bound
orl
mov
ljmp
test
add
sub
add
fldl
dec
dec
add
add
cwtl
push
add
add
mov
add
add
add
cmc
sub
add
jle
and
add
xchg
jl
add
mov
adc
adc
push
adc
add
cmpsl
test
in
jl
aas
call
and
scas
cmpl
mov
dec
add
lcall
inc
movsb
leave
lds
aaa
add
outsb
add
xchg
dec
add
shlb
add
cmpsb
push
pop
cmp
movsl
jmp
jg
add
ret
add
or
sbbl
pushl
dec
gs
add
cmp
add
das
add
inc
cmc
fmull
add
pop
inc
test
push
add
sti
mov
lock
ret
mov
mov
gs
xchg
mov
clc
jae
push
mov
faddl
xchg
mov
adc
add
in
add
mov
push
push
add
das
push
sub
cli
pop
add
and
js
fadds
mov
sbb
sbb
mov
or
nop
insb
add
add
fdiv
adc
adc
mov
cmp
scas
sahf
mov
push
lods
or
xchg
add
nop
sar
jmp
fcomps
xor
add
lahf
add
je
shrl
daa
push
add
mov
sbb
loope
insb
add
pushf
arpl
add
push
add
lock
fwait
andb
adc
inc
add
and
ret
lods
add
and
add
ja
nop
mov
std
andb
push
clc
jae
mov
ds
ds
jnp
mov
add
lret
cld
and
add
pop
imul
stos
push
xlat
add
jmp
mov
jmp
call
pop
adc
or
sub
and
add
mov
repnz
jae
ds
add
mov
fistl
xor
inc
ret
mov
lock
mov
xchg
fsubs
add
lahf
adc
add
outsb
add
mov
mov
lock
ret
mov
hlt
and
mov
dec
push
add
movsl
stos
shlb
jo
lcall
jg
add
clc
jae
cmp
mov
push
push
lock
xchg
mov
xor
adc
cs
or
push
mov
inc
jge
add
add
pop
add
add
ss
add
pop
aas
out
push
daa
inc
add
or
add
adc
add
add
mov
xchg
jmp
cmp
cmp
add
add
pop
repnz
jae
and
and
mov
hlt
mov
fdivrl
or
sti
fucomi
mov
imul
cmp
repnz
jae
add
mov
or
mov
mov
lock
add
sub
das
loope
push
repnz
jae
cmpsl
push
push
lcall
mov
repz
push
jle
frstor
jnp
adc
add
cli
js
or
mov
xor
push
add
roll
ss
pop
es
add
add
in
insl
out
xor
in
sub
inc
add
iret
cmp
out
jne
jg
jno
add
shll
ret
test
sti
dec
add
and
inc
add
pop
sub
mov
inc
add
mov
pushl
xchg
mov
adc
inc
xchg
fdivr
call
dec
cli
push
mov
std
push
lods
aad
pusha
add
dec
inc
adc
xchg
filds
jp
cwtl
jbe
adc
xor
add
pushf
jmp
jnp
add
push
add
arpl
mov
xchg
shl
sbb
or
inc
add
ret
repnz
jae
mov
mov
lcall
es
add
imul
add
stos
mov
pop
adc
push
in
out
scas
sub
add
lds
add
popf
inc
hlt
add
jmp
ret
incl
jmp
gs
jae
and
push
push
add
add
add
je
or
sub
add
jae
pop
add
jo
mov
xchg
add
shl
add
lods
dec
add
mov
add
add
call
ret
or
add
add
push
push
mov
lock
ret
add
pop
push
mov
mov
cmp
je
scas
lret
pop
loopne
xchg
call
aas
pushf
mov
mov
xchg
call
repnz
jae
lock
xchg
dec
cli
add
add
add
add
addb
add
jmp
cli
xchg
push
mov
cmp
mov
inc
add
aas
scas
pusha
add
jae
aas
add
aas
pop
add
cmp
pushf
pusha
add
mov
add
verw
dec
add
jb
push
add
jne
dec
fdivr
and
add
add
add
ljmp
clc
jae
mov
mov
mov
add
add
clc
add
not
jecxz
or
xchg
xor
add
subl
jmp
mov
mov
push
push
cmpsl
cli
or
dec
add
jle
push
mov
mov
cmpxchg
fistpll
popf
add
add
add
mov
push
inc
push
repnz
jae
and
or
jae
ret
add
test
clc
jae
fdivs
inc
dec
in
addl
xchg
jmp
mov
cmp
dec
mov
lcall
test
je
jo
pop
add
imul
gs
lock
add
pop
loopne
push
add
push
add
js
test
xor
mov
xchg
xchg
jae
xchg
mov
mov
cli
mov
push
add
jb
inc
jne
push
mov
lock
ret
ds
push
add
and
add
notb
add
adc
add
add
addb
mov
mov
out
scas
sub
scas
aaa
testb
add
add
in
lods
or
push
lods
fldt
mov
add
adc
sbb
bound
push
lods
repz
into
push
dec
add
mov
imulb
test
mov
push
add
mov
add
add
add
sbb
in
mov
add
test
loopne
popl
lods
push
je
in
cmp
ret
jae
pop
fdivrl
imul
std
jae
ja
push
add
dec
add
cmp
cmpsl
add
add
inc
jmp
nop
add
push
add
sbb
aad
xchg
shl
clc
jae
lock
mov
fcoms
pop
add
pop
add
jp
call
imul
add
or
shlb
add
cmp
add
int3
mov
jmp
xor
adc
add
and
mov
lock
ret
mov
push
mov
pop
call
add
bound
icebp
mov
sub
mov
iret
add
testl
xchg
jne
xchg
jmp
push
fsubs
push
cmp
mov
jecxz
or
in
mov
jmp
fdiv
push
fcompl
adc
lcall
add
aad
xchg
add
cmp
leave
ret
jb
jo
gs
jmp
cmp
sbb
cmpsl
lret
xchg
mov
pusha
add
add
jmp
mov
xchg
add
add
ljmp
scas
add
add
dec
xchg
jmp
mov
and
mov
lock
rolb
lret
add
add
pop
xor
add
pop
mov
inc
add
mov
add
sahf
xor
add
add
leave
pushf
xchg
pop
repnz
jae
mov
lock
xchg
mov
gs
scas
jo
imul
add
sti
into
cwtl
xchg
testl
jp
in
or
sbb
fisttps
jecxz
xchg
jmp
mov
adc
add
cwtl
dec
popf
add
jp
dec
add
add
add
fmuls
push
add
lea
sub
xchg
cltd
dec
add
repnz
inc
add
or
stc
and
repnz
jae
cmp
mov
mov
cli
lock
cltd
inc
push
add
push
push
add
push
add
mov
and
es
sub
inc
add
cmp
or
push
jo
and
push
repnz
jae
mov
mov
fcoms
adc
add
push
add
add
add
add
iret
addr16
add
xor
add
push
aad
add
add
dec
or
cmp
mov
push
add
add
add
add
cmp
push
gs
dec
dec
mov
and
rorb
xchg
adc
add
test
jmp
and
add
fmuls
mov
jae
sbb
aad
push
push
add
and
clc
jae
pop
push
add
xchg
and
scas
pop
js
sub
lahf
ffree
adc
add
dec
fld
mov
int3
pop
mov
mov
push
sub
lret
xchg
dec
or
fisttpl
test
roll
push
add
inc
xor
repnz
jae
add
xchg
cli
lock
imul
add
cmp
cli
jmp
add
add
inc
add
pop
add
iret
insb
add
cld
xchg
and
repnz
jae
cmpsl
jae
add
mov
mov
add
xchg
sti
push
add
aam
add
add
call
jp
inc
add
xchg
ret
lock
sub
mov
xor
out
push
pop
pop
add
test
xchg
pop
add
jmp
fdivs
mov
pop
push
jae
push
add
loope
out
movsb
in
mov
adc
hlt
sbb
movsb
gs
jmp
jns
add
mov
sbbb
hlt
push
add
inc
add
or
dec
add
pop
mov
repz
loope
or
push
ret
add
mov
loopne
add
add
negb
mov
dec
push
mov
push
gs
mov
fbstp
or
lret
adc
sub
std
inc
imul
loopne
ret
mov
add
fwait
xor
add
add
add
fucom
icebp
je
call
adc
cmp
push
add
pop
add
push
sti
cmp
mov
mov
or
incl
jle
clc
sbb
inc
and
jmp
inc
add
push
add
xorb
add
jg
data16
push
lods
jae
mov
xchg
jmp
dec
fdivs
mov
mov
mov
mov
and
push
mov
lock
ret
adc
cmpsl
mov
mov
pop
add
xchg
test
clc
jae
pop
mov
xchg
bound
push
add
push
add
sub
jmp
daa
add
call
jae
mov
jne
dec
and
fmuls
and
xor
add
cmp
loopne
add
sbb
inc
add
or
add
loop
andl
or
xor
mov
enter
add
roll
mov
adc
xchg
icebp
les
test
sub
cmpsb
aaa
movl
insb
add
sbb
pop
dec
add
test
pusha
add
sub
push
xchg
ret
fadds
lock
adc
add
dec
add
jae
jge
test
adc
mov
int3
int3
int3
rolb
daa
add
xor
mov
aas
in
add
fistl
add
mov
xchg
add
sub
jns
bound
sbb
adc
mov
add
add
leave
lds
jmp
xchg
pop
flds
frstor
cltd
or
pusha
add
jns
jmp
add
jae
add
add
mul
cmp
out
mov
add
ficompl
repz
or
pop
add
icebp
pushf
insb
add
pop
add
dec
add
cli
fdivrl
movsl
add
js
and
adc
mov
call
sub
movsb
divb
add
cltd
movsb
or
push
jns
lock
cmp
ret
aaa
push
add
cld
lods
lahf
xchg
pop
inc
lock
sub
inc
add
add
add
add
test
mov
lods
lods
and
add
pop
cmp
pop
push
add
cmpsl
mov
pop
add
imul
add
push
add
add
pushf
scas
jp
mov
jae
test
mov
jg
lods
xchg
mov
add
push
fbstp
inc
pop
and
stos
std
push
add
pop
iret
add
addb
add
out
pop
add
jecxz
push
add
ljmp
add
add
outsl
push
xchg
inc
add
test
addb
sbb
add
add
inc
or
add
add
add
dec
xchg
mov
add
and
out
pop
pop
add
add
das
pop
jg
das
pop
add
add
cmpsb
jmp
add
mov
add
and
add
nop
ljmp
mov
imull
cmp
xchg
shl
aaa
inc
add
add
popa
cmp
fadd
sub
fildl
dec
cmp
push
add
add
nop
xchg
repz
repnz
repz
mov
mov
ljmp
add
jecxz
xchg
mov
or
mov
push
add
hlt
repnz
sbb
dec
add
xchg
das
sti
pop
lret
cmp
fdiv
icebp
mov
in
pop
mov
push
add
test
jmp
add
add
insb
add
or
add
add
pushf
lds
push
cmp
mov
push
add
push
add
lahf
sbb
sbb
add
or
xor
cmpsb
mov
xor
aaa
inc
add
mov
mov
or
sub
add
add
cmpsl
dec
sub
rorl
add
out
and
xchg
mov
mov
repz
sar
mov
add
in
mov
mov
insl
inc
lods
dec
add
mov
jle
loope
add
and
xchg
ss
add
add
sbb
arpl
pop
lret
add
std
fstp
mov
addr16
push
bound
js
in
sub
loop
adc
jo
popa
mov
dec
add
mov
adc
add
add
loopne
xchg
ja
shll
add
cs
push
es
add
divb
movsl
add
fcoms
int
cltd
out
adc
lock
hlt
xor
add
adc
add
rcll
aas
add
or
aas
and
add
das
out
add
popa
pushf
cli
clc
adc
and
add
sbb
push
mov
pop
add
add
sbb
fsubl
pop
add
push
add
cmovp
mov
fnstsw
out
mov
lea
add
jg
inc
add
sbb
std
das
sub
fwait
jp
mov
push
lcall
pop
push
add
xchg
add
test
adc
add
xchg
cs
js
cmp
daa
jmp
loope
fdivl
fistpl
mov
std
add
dec
add
add
adc
add
add
add
repz
or
in
pop
add
add
jl
push
xchg
xlat
lret
cmp
mov
add
jno
add
stos
add
push
add
add
add
lret
add
fadds
add
push
add
into
mov
add
xor
jp
ja
iret
jbe
aam
cli
sbb
mov
mov
cmp
movsb
lds
add
add
sbb
ret
add
int3
and
mov
mov
add
xor
add
lret
add
add
jae
sbb
enter
dec
add
add
jae
bound
add
jnp
sbb
subl
add
add
and
inc
hlt
mov
mov
imul
xor
adc
fidivrl
mov
andb
add
add
cwtl
add
push
add
adc
mov
mov
jmp
js
inc
jp
inc
orb
cpuid
dec
mov
and
add
add
mov
add
add
mov
inc
add
sub
bound
sub
inc
add
add
gs
call
or
inc
add
data16
add
iret
enter
pop
add
bsf
adc
add
jno
cwtl
ljmp
out
mov
push
loope
and
rorl
add
sub
xchg
dec
add
jle
ljmp
xor
shlb
mov
icebp
lea
cmc
enter
pop
add
minps
add
outsb
add
sub
jge
add
sti
fcmovne
repnz
add
add
mov
jns
mov
xchg
fildll
jp
sub
cmpsl
add
push
mov
add
insb
add
and
cld
sub
outsl
xchg
jle
jne
arpl
jne
pop
add
xchg
jge
les
test
pop
add
cmp
cmpsl
add
out
pop
add
jb
xor
add
xor
jp
jecxz
add
add
out
pop
add
in
pop
add
fdivp
testl
add
add
add
lods
and
and
add
push
add
mov
pop
add
std
mov
add
push
movsb
jno
push
add
sub
leave
fistpll
inc
add
cmp
jo
sbb
push
add
add
add
aad
enter
loope
cmpl
add
dec
add
push
add
ss
add
add
hlt
cmp
fdivp
je
add
add
cmpsb
ret
cmpsb
dec
add
sbb
xor
add
sub
mov
sbb
testb
add
xor
add
add
add
pop
mov
push
add
xlat
aad
fsubrs
push
add
pop
add
rcrl
scas
add
xlat
dec
add
dec
add
inc
aad
clc
push
mov
push
cmpsl
jle
idiv
mov
add
stc
push
add
mov
adc
add
add
sbb
xor
scas
push
add
fdivrp
mov
add
stc
aaa
testl
xor
scas
rcl
inc
add
sub
mov
add
cmp
pop
add
cli
jmp
push
add
mov
mov
xor
inc
add
leave
sub
xchg
push
add
push
add
lcall
add
add
add
cmp
sti
add
icebp
xor
add
fbstp
add
js
mov
cmpb
add
mov
leave
sbb
dec
in
addr16
sbb
fwait
sub
stc
add
hlt
lods
out
mov
add
push
mov
mov
and
add
dec
mov
or
mov
xor
add
hlt
pop
add
push
add
add
aad
lock
aam
mov
pop
into
add
mov
cli
xchg
sbb
add
sbb
jle
in
add
aaa
jo
cld
push
lret
ja
add
add
stos
lcall
add
push
add
adcl
add
jmp
jbe
call
sbb
sarb
push
jae
data16
push
sub
add
add
xchg
add
xchg
push
cmpsl
inc
jae
add
add
cmp
mov
jle
xchg
cmp
int
xchg
leave
rolb
lret
cmpb
movaps
mov
sub
push
add
dec
add
test
sbb
or
sub
dec
and
add
imul
loopne
icebp
mov
lret
xchg
add
add
ja
dec
inc
add
loop
xor
fmull
push
dec
add
call
rolb
mov
xor
add
add
jo
out
cmp
xchg
cltd
fisubl
aad
out
dec
add
imul
notl
fiaddl
sbb
cld
out
push
add
and
add
mov
out
mov
inc
mov
jnp
cmp
jge
ret
add
jg
sub
cmp
sti
out
xor
add
jns
incb
jno
push
add
hlt
and
add
repz
daa
add
add
mov
add
mov
jecxz
add
insb
add
push
add
insl
dec
cmp
testl
loopne
inc
cmp
adc
add
scas
xlat
add
add
add
popf
add
pop
scas
in
mov
mov
leave
xchg
jns
push
mov
in
ret
mov
sti
punpckhdq
pop
insb
add
outsb
add
push
xor
xchg
aas
pop
push
add
les
add
clc
leave
scas
mov
inc
add
add
add
data16
push
rorb
add
mov
fiadds
loopne
jae
lret
pop
cltd
pushf
dec
std
sub
fadd
mov
fldl
pop
insb
add
lcall
mov
add
add
clc
jecxz
xlat
int
adc
add
xchg
loop
add
repz
sbb
clc
insl
jae
and
lahf
gs
add
add
add
add
add
clc
lock
add
mov
add
pop
add
int
push
test
add
orb
add
mov
fcompl
rolb
and
add
fs
dec
add
mov
out
fwait
mov
sub
xchg
add
xchg
js
in
push
jb
xor
push
sahf
bound
and
add
add
inc
in
rcll
add
scas
adcl
jle
leave
xlat
add
pushf
fcmovnb
in
js
xchg
sub
dec
add
rcl
test
ss
add
lock
add
add
inc
and
in
jmp
jae
fnstenv
cmc
add
xor
in
sub
cmpsb
add
pop
mov
notb
add
add
add
aam
je
mov
mov
xchg
in
jecxz
xlat
movsl
out
jae
add
lcall
mov
inc
xor
add
pop
add
mov
add
aaa
cmp
cmpl
out
mov
push
popa
sbb
add
pop
add
add
je
add
inc
add
fnstcw
mov
mov
icebp
loope
or
cmc
add
sub
test
adc
mov
push
popl
or
sbb
or
jnp
mov
add
push
add
das
mov
jns
add
inc
add
add
mov
adc
add
xor
or
push
add
add
add
lods
add
repnz
adc
stos
xor
add
cmpsb
adc
adc
inc
add
dec
add
add
adc
add
loope
and
inc
add
mov
cmp
adc
mov
push
mov
adc
add
xchg
xor
testb
xchg
inc
add
icebp
sbb
movsl
les
cli
add
xchg
add
push
add
je
xor
add
sub
mov
jecxz
or
inc
add
mov
incb
mov
add
and
dec
add
add
sahf
fwait
mov
sahf
mov
mov
lods
pop
aaa
cld
add
add
inc
dec
add
psrlq
and
jl
movsb
mov
push
add
incl
mov
sub
imul
jb
add
out
cwtl
mov
cmp
or
cld
jbe
aam
xchg
adc
or
mov
cmpsl
in
js
dec
add
adcl
data16
je
adc
loope
mull
fiadds
mov
adc
add
shrb
add
pop
pop
add
pop
loop
movsb
add
sbb
dec
sbb
fistl
jo
dec
dec
test
sub
add
roll
fld
xchg
add
mov
outsl
int3
stc
mov
pusha
add
jg
insb
add
or
loop
jne
idivb
adc
fwait
jecxz
lret
insb
add
add
fmull
test
pusha
add
aad
nop
xchg
lcall
push
add
movsb
mov
mov
jmp
jg
stos
xchg
dec
add
dec
add
add
add
push
push
add
ds
inc
scas
sti
xchg
data16
hlt
cmpb
add
mov
inc
add
xchg
scas
lock
or
inc
xor
add
arpl
shrl
pop
add
lahf
mov
add
out
nop
ficompl
addl
pop
add
hlt
testl
leave
push
add
fmulp
xchg
xchg
pop
jnp
sub
out
xchg
sub
and
xchg
mov
outsl
cmp
push
add
aam
sub
je
dec
mov
jb
or
xchg
xchg
rorb
ljmp
jae
inc
add
add
add
mov
icebp
or
adc
aad
push
ss
add
pop
add
push
mov
add
add
jge
add
pop
add
add
in
inc
js
mov
cmp
shr
insb
add
xchg
hlt
xchg
sahf
sbb
and
test
jae
lcall
mov
fwait
mov
in
and
push
mov
mov
add
pop
fld
push
fwait
add
sub
xor
popf
mov
add
adc
pop
add
insl
cmpsb
daa
aas
add
lods
icebp
push
add
or
jmp
add
mov
int3
add
add
xchg
add
repnz
add
mov
add
test
sbb
shr
lods
ret
xlat
mov
xchg
add
add
aaa
test
iret
add
sbb
push
adc
add
fildl
pop
icebp
add
add
cmp
xor
popf
jnp
and
pop
add
mov
cltd
add
int3
adc
add
ret
adc
add
push
push
add
cwtl
int
cmc
ret
pop
add
mov
mov
fwait
pop
orl
add
add
add
pop
add
mov
add
fiadds
xchg
fcom
test
outsl
add
add
arpl
push
add
xor
mov
pusha
add
jmp
add
loop
add
aad
or
cli
std
dec
add
mov
pop
adc
lcall
xchg
mov
sbbb
mov
and
add
inc
je
int3
mov
mov
xchg
and
add
push
int
cwtl
into
inc
add
mov
enter
add
add
lahf
pop
jmp
sub
imul
popf
adc
add
jp
decb
add
and
add
sub
add
mov
add
jmp
sbb
mov
pop
add
movsb
jno
iret
sbb
mov
imul
jp
cmp
or
add
mov
into
cmp
jmp
ja
push
add
xor
sub
lcall
flds
mov
xor
add
into
add
adc
add
jl
mov
je
frstor
sub
add
push
add
les
and
add
mov
cmp
add
add
test
cltd
in
dec
adcb
add
mov
adc
popf
xlat
mov
add
mov
add
lock
add
xchg
or
data16
mov
fstpt
add
pop
add
cmp
add
popf
stc
sub
loopne
add
rep
inc
add
je
sbb
push
add
int3
iret
xchg
test
popa
xor
divl
clc
mov
mov
inc
add
pop
add
add
mov
xlat
and
mov
and
add
test
add
jge
into
pop
aam
sbb
xor
outsb
add
cmp
push
add
add
pop
mov
push
add
mov
add
bound
test
cmp
test
mov
add
add
add
repz
stos
sub
xor
add
dec
add
cmp
mov
pop
add
mov
push
mov
jge
jne
add
xchg
movsb
sbb
aam
in
add
popf
add
add
push
add
jns
incl
jae
cmp
or
push
add
or
test
adc
inc
aam
js
sbb
lds
add
sahf
or
add
test
push
sbb
sbbl
push
add
and
add
add
pop
push
add
push
add
notl
iret
add
jmp
shlb
enter
dec
add
inc
js
and
cmpb
je
and
mov
cmp
test
xlat
add
stos
mov
sbb
cmpsb
mov
add
rclb
add
testl
add
lret
add
ljmp
into
lds
inc
add
dec
rcrb
xchg
aam
sub
ja
icebp
xchg
adcl
pop
repz
add
add
jcxz
mov
push
add
xor
add
dec
mul
add
add
mov
add
aad
mov
insl
in
xchg
jns
in
hlt
sbb
imul
cmp
push
in
inc
dec
xchg
add
fstl
and
add
shl
dec
add
leave
test
pop
or
xor
add
test
push
or
imul
mov
hlt
repz
in
loopne
xchg
out
movsl
jl
add
add
aas
add
add
xor
add
rolb
add
in
out
adc
incl
jo
lret
xor
add
leave
add
pop
in
add
fs
xor
jp
xchg
jne
add
fists
or
add
fidivrl
pop
add
and
mov
or
mov
je
mov
add
pop
add
cmp
into
ret
rolb
sub
mov
add
rcll
std
add
xchg
sahf
shl
xor
add
int3
dec
add
flds
cmp
inc
popa
adc
sarl
dec
add
filds
inc
in
cs
test
imul
cmp
add
je
fsubrp
add
add
inc
add
dec
xchg
scas
pop
add
xchg
add
cmp
or
leave
test
bound
mov
mov
jg
and
add
sub
scas
pshufw
repz
add
lods
add
add
add
add
les
cmp
fcomps
stos
insb
add
std
push
xlat
imul
add
push
jo
test
les
dec
jp
xorl
add
jg
ss
add
add
lods
push
add
outsl
add
jbe
test
xlat
mov
inc
inc
xchg
cs
mov
mov
dec
add
pop
testl
loope
dec
add
cmpsb
arpl
test
faddl
push
int
ret
inc
add
add
pop
cwtl
xchg
ja
ljmp
outsb
add
xor
lods
mov
andl
inc
in
cli
push
sub
and
push
add
pop
add
jl
mov
pusha
add
mov
add
pop
js
loop
scas
dec
mov
add
inc
add
or
outsb
add
xchg
add
pop
add
and
add
xchg
test
fldl
inc
add
je
lds
sub
cmp
and
add
xor
call
mov
ja
mov
add
shr
ljmp
pushf
add
jno
push
push
add
xchg
sbb
in
neg
pop
add
imul
and
loope
add
add
into
scas
out
add
jb
or
inc
add
cltd
aaa
push
add
sub
or
mov
xorb
jae
lea
iret
jae
add
add
fs
sbb
dec
xlat
mov
add
dec
xchg
or
add
add
pop
add
add
incb
pushf
pop
xchg
sarb
add
mov
add
add
xchg
outsb
add
dec
mov
es
add
inc
add
divb
les
mov
and
xchg
aas
fdivr
mov
adc
mov
ret
add
leave
cltd
cmp
mov
into
xlat
stos
pushf
mov
add
push
add
int
test
add
sbb
and
inc
add
xchg
in
or
jle
enter
sub
xchg
frstor
add
pop
add
xchg
jb
in
push
rorb
rcll
enter
and
add
movb
es
add
adc
add
add
pop
add
inc
add
push
int3
inc
jns
cwtl
add
xor
add
add
scas
inc
add
pop
loope
sarb
hlt
lods
jno
xchg
cmpl
jmp
add
test
outsb
add
add
and
add
push
add
add
in
cmpsb
xchg
pop
add
inc
add
inc
jge
mov
jge
add
lods
scas
mov
push
add
in
jns
add
aaa
cmp
mov
vpunpcklqdq
jle
mov
push
add
dec
add
lret
sbb
cs
pusha
add
push
add
call
lods
add
scas
dec
add
or
or
cwtl
aaa
data16
imul
rcll
hlt
sub
pop
outsl
cwtl
add
push
add
or
fadds
add
addl
lret
gs
add
into
lods
jo
xorb
sbb
mov
popa
add
add
add
and
add
sbb
inc
add
add
add
adc
inc
mov
cmpsl
and
add
add
add
jno
movsb
adc
mov
inc
sub
and
add
dec
cld
les
add
cmpsb
inc
mov
xchg
add
add
and
add
adc
add
mov
xchg
repz
add
add
and
add
jo
shr
scas
xchg
jge
pop
add
cmp
iret
inc
add
add
add
lret
or
add
jne
add
jne
outsb
add
ret
jecxz
rolb
neg
push
add
leave
add
fdivrs
cwtl
xor
add
aaa
add
movsb
cli
mov
arpl
rolb
cmp
stos
std
sbb
movsb
out
stos
xlat
mov
xchg
jecxz
cmp
mov
mov
sbb
xchg
add
add
push
add
into
loopne
add
add
inc
pop
add
fistpll
add
ss
mov
add
xchg
aaa
add
add
mov
cmp
add
push
and
lods
arpl
push
add
in
mov
dec
pmaddwd
and
push
call
mov
insb
add
xchg
ret
ret
add
xor
lods
scas
rolb
add
add
mov
mov
flds
out
xchg
gs
mov
push
lret
sub
xchg
xor
add
inc
add
add
adc
lock
mov
out
sbb
cmpl
adc
add
add
sbb
scas
or
push
clc
push
aaa
add
cmp
mov
insb
add
add
lock
addr16
push
sbbb
hlt
cmp
adc
pop
inc
add
addr16
mov
faddl
push
add
or
pusha
add
mov
mov
cmc
add
add
mov
stc
add
xchg
and
inc
ja
add
xor
out
testb
push
mov
add
add
add
loope
add
roll
scas
pop
add
std
lds
add
add
movsb
adc
add
aas
test
mov
and
add
sbb
fcmovnu
sbb
rcrl
fs
jns
and
lret
adc
xchg
popl
subps
lods
adc
add
loope
int3
dec
add
fistps
fmuls
insl
aam
add
in
add
add
inc
sarl
bound
in
movsl
xchg
mov
leave
scas
mov
jne
push
add
sbb
loope
lods
adc
out
pop
outsl
out
sbb
add
cmp
mov
add
aaa
add
add
adc
sub
loopne
out
cli
into
in
add
sub
jae
push
mov
add
pmulhw
addl
lods
aas
pop
add
ret
add
lea
add
mov
add
add
pop
add
add
and
xor
mov
test
mov
and
adc
add
das
jno
lock
pusha
add
mov
add
mov
pop
and
add
lods
je
outsl
fcmove
add
add
add
data16
lods
adc
add
lcall
xchg
sbb
add
mov
sub
xchg
popa
sbb
outsl
shlb
and
dec
add
mov
inc
mov
lods
push
add
mov
and
shll
pop
movsb
add
jg
pop
fiadds
lret
xorl
inc
add
cmc
fldln2
lods
mov
mov
incb
jne
add
ltr
mov
pop
cmpsl
push
add
or
pushf
in
jg
ret
je
add
add
sub
add
push
add
add
and
add
in
pop
xchg
leave
mov
das
add
roll
sbb
imul
cmp
lret
imul
fistpll
and
add
movb
mov
sub
inc
add
jmp
mov
and
pop
int3
add
data16
push
mov
sbb
inc
add
cltd
add
cmc
aad
lock
jle
aas
add
add
add
rclb
fiadds
push
xchg
inc
add
add
imul
out
movsb
and
push
add
movsl
sahf
mov
jecxz
add
or
lea
add
sub
out
hlt
jns
pop
sti
mov
add
dec
nop
jnp
mov
out
loop
xor
cmp
in
add
push
sbb
dec
fsts
lret
add
sub
inc
add
sbb
js
xor
add
add
dec
inc
push
xorl
popf
jb
mov
add
add
mov
add
pop
add
mov
sbb
lods
add
add
jo
movsb
push
add
push
push
popa
xor
add
cmp
inc
and
ffree
sarb
add
add
cmp
fdivl
movsb
lods
mov
in
lret
mov
add
pop
jno
es
cmp
jmp
add
xchg
push
cs
aaa
in
and
add
sbb
roll
in
mov
add
add
add
stc
add
into
add
mov
aam
mov
inc
add
add
jnp
jecxz
repz
popa
mov
add
add
mov
imul
std
cld
sub
and
testl
add
add
add
outsb
add
xor
jbe
xor
imul
xchg
jne
je
mov
push
add
mov
add
lahf
out
fwait
jecxz
call
and
test
int3
shrl
xchg
stos
and
add
jo
out
add
add
sbb
cmc
add
jecxz
push
pop
xor
clc
dec
cs
and
insl
xchg
or
insl
hlt
push
scas
inc
add
sahf
lcall
loope
sub
scas
push
add
outsb
add
out
sbb
outsb
add
jbe
push
insb
add
push
add
loop
lret
push
xor
add
add
sbb
push
add
imul
or
fistps
add
mov
data16
cmp
jle
sahf
and
mov
jns
add
add
or
in
adc
add
cwtl
mov
add
add
mov
mov
loope
adc
add
add
adc
mov
movb
imul
sub
sti
push
add
in
xchg
imul
add
dec
mov
data16
lcall
insl
dec
mov
daa
lret
jo
ret
dec
mov
add
add
add
jno
loopne
add
adc
add
pop
sub
cmp
dec
add
add
ficoml
mov
bound
dec
add
add
out
mov
jo
cmp
add
mov
add
adc
push
add
mov
add
sahf
push
sbb
add
and
add
stc
cmpsl
movsb
int3
dec
add
int3
rcr
mov
test
add
add
out
add
cmp
mov
or
sub
sbb
mov
add
jg
push
add
pop
add
pushf
pusha
add
xchg
xchg
inc
add
inc
add
lea
add
addr16
repnz
add
rcl
pop
add
lods
add
jg
or
pop
add
xor
outsl
pop
add
aam
mov
add
add
add
or
mov
add
mov
jg
adc
add
add
sub
add
add
add
adc
add
shr
ljmp
mov
stos
testl
add
or
addl
sbb
int
outsl
sub
push
ror
jge
adc
mov
add
add
pop
add
add
cwtl
xchg
pushf
sub
xchg
sub
jae
add
adc
add
aad
push
bound
push
add
fildl
sub
dec
stos
xchg
sbb
mov
cltd
add
cmp
aaa
add
lcall
je
xchg
jno
pop
add
sub
lret
dec
add
sbbb
add
lahf
inc
add
sbb
cmp
add
out
add
inc
add
mov
mov
cwtl
ljmp
rcll
add
add
add
je
adc
add
and
pop
loopne
add
add
popf
xchg
testl
jnp
gs
add
push
add
mov
mov
rol
in
dec
add
add
stos
mov
rolb
insl
sub
out
add
push
add
add
add
divl
testl
add
push
cmp
add
add
aaa
mov
add
adc
add
add
jmp
xchg
jne
xor
xchg
xchg
cmp
ja
lahf
add
xor
test
inc
add
pop
jno
fistps
mov
xchg
push
sbb
add
add
jo
add
adc
add
inc
and
cmp
or
dec
add
lock
pop
sub
push
leave
mov
fstl
mov
mov
add
lahf
and
add
add
shrl
icebp
jnp
daa
add
or
lret
add
pop
pop
add
mov
add
add
pusha
add
xor
push
add
mov
add
mov
push
add
and
testl
xor
inc
add
cmp
rorb
add
cmp
das
bound
dec
sar
lahf
call
jg
add
aas
mov
lcall
roll
bound
pop
add
into
fwait
xor
fcomps
loope
popa
mov
fcmovu
testb
je
dec
add
or
f2xm1
stc
cmp
mov
lcall
cltd
sbb
jge
push
add
sub
mov
movsl
push
jb
add
dec
fsubs
and
addr16
pop
add
add
jl
lret
faddl
add
add
inc
mov
adc
add
loopne
add
shrl
jno
pop
add
pop
add
xchg
add
push
add
adc
lcall
pop
mov
adc
outsl
add
testb
movb
add
lcall
leave
lds
add
mov
mov
movsl
call
add
xchg
fstpt
out
mov
sbb
pop
sbb
mov
xchg
or
or
mov
add
add
aad
mov
and
add
add
cwtl
add
push
add
fwait
jb
fisttpl
jecxz
adc
sub
lods
sbb
stos
pop
add
add
jns
aad
add
movb
es
add
loopne
add
out
add
das
add
add
add
cmp
addb
test
test
hlt
add
jb
mov
lock
mov
dec
jmp
add
push
inc
add
call
add
add
insl
pop
add
cli
push
icebp
cmp
mov
int3
adc
into
jae
sub
test
add
mov
mov
add
add
cmpsb
add
add
lods
movsl
mov
inc
mov
sub
jecxz
rcll
push
call
and
add
inc
mov
xlat
fcomip
inc
sub
decl
add
nop
fsubs
insb
add
add
push
add
add
enter
add
jbe
imul
mov
out
imul
sub
lsl
add
arpl
or
mov
flds
lahf
and
mov
lahf
in
mov
push
add
cltd
xchg
pop
jp
cs
adcb
test
hlt
icebp
add
add
and
imul
iret
out
xchg
and
add
xchg
add
ret
add
add
pop
mov
push
add
push
dec
add
jle
inc
add
mov
ds
push
bound
ljmp
inc
add
stos
ja
adc
add
ja
add
dec
add
stos
add
cli
addr16
add
imul
or
dec
js
jg
add
pop
lods
std
clc
in
jbe
jge
add
sub
push
int
add
add
ret
jnp
add
test
fcoms
add
outsl
jmp
add
sti
add
cmp
cmp
mov
add
imul
add
sub
mov
lds
js
xlat
mov
ss
add
add
xlat
adcb
xor
imulb
icebp
sahf
mov
das
outsb
add
repnz
push
add
fstpl
fistl
push
add
mov
sub
jl
sub
sbb
pop
hlt
cld
das
inc
xchg
in
das
jecxz
mov
pop
xor
add
add
push
add
mov
lret
cmpl
add
shlb
add
push
mov
add
les
push
aaa
call
scas
cmp
add
and
add
add
movsb
adc
add
or
cmp
add
pusha
add
fimuls
jecxz
mov
hlt
cmpsl
and
push
je
inc
ljmp
add
add
adc
mov
into
imul
inc
bound
inc
add
sbb
push
add
add
imul
mov
adc
cmpsb
inc
add
add
outsl
mov
jo
stos
lds
les
xchg
mov
mov
add
arpl
int
sahf
cwtl
and
imull
add
jge
stos
lods
arpl
mov
lahf
fstpl
jne
out
arpl
add
add
push
lcall
add
mov
add
pop
pop
add
pop
mov
repz
sub
mov
and
lea
mov
mov
andl
hlt
aaa
sti
add
sub
push
add
add
or
out
jno
in
rclb
xchg
incl
sub
xchg
test
xor
vpsllq
jmp
or
mov
adc
add
add
jp
dec
jno
pop
popf
rorl
add
or
add
lcall
jbe
ss
add
mov
mov
pop
clc
add
pushf
repz
add
or
add
clc
popa
in
lret
scas
pop
xchg
add
mov
add
add
xchg
adc
add
push
add
out
mov
out
pop
add
dec
add
cmp
dec
call
mov
repnz
icebp
loope
ud2
push
in
jo
jp
int
popa
dec
mov
jne
je
xchg
fwait
sub
pop
push
mov
data16
jbe
dec
add
int
fnstcw
xor
nop
and
jg
add
pop
add
mov
jg
cltd
fdivrl
daa
iret
add
data16
xchg
into
mov
out
in
out
cld
movsl
fistl
loop
out
mov
nop
add
cmp
mov
movsl
add
sar
add
cli
add
inc
lds
into
pop
mov
sbb
les
adc
jne
push
movsb
int3
test
xchg
add
subl
add
sarb
je
inc
pop
add
add
add
daa
or
lret
f2xm1
mov
pop
add
add
jge
pop
add
subb
mov
in
add
mov
mov
or
cmp
add
popa
data16
fisubrs
fs
and
xchg
add
out
add
ret
movsl
push
add
add
in
fidivrl
mov
add
filds
mov
inc
add
push
cmp
dec
add
inc
add
daa
addb
lock
les
cli
repnz
mov
imul
xor
add
roll
inc
add
add
adc
cmp
std
mov
mov
jns
mov
pop
test
jl
mov
mov
xor
outsb
add
xorl
sub
dec
add
aaa
jl
lock
push
add
xchg
in
rcrl
push
adc
add
add
mov
or
popl
mov
mov
mov
aam
mov
ret
out
pop
or
mov
mov
dec
add
add
adc
add
lea
push
add
fstl
int
lds
add
lods
sbb
lret
add
pop
add
sub
adc
add
jns
int3
and
add
adc
push
add
icebp
add
add
daa
add
ret
add
add
subb
into
out
dec
sub
cli
leave
xor
add
push
call
add
lahf
xchg
adc
add
test
lea
stos
add
add
aad
stos
add
xchg
jb
lahf
test
cld
inc
add
push
push
loop
outsb
add
lahf
add
cmp
adc
add
inc
add
sub
xchg
adcl
xor
push
cmp
add
into
clc
fdivl
fdivrs
add
ljmp
aaa
dec
add
add
outsl
mov
inc
add
filds
sbb
adc
add
lea
xchg
add
xor
sbb
sarb
add
push
add
sub
imull
mov
sub
lock
xchg
add
add
and
add
test
data16
pop
add
add
add
add
insb
add
add
test
xchg
pop
add
mov
aaa
add
sub
xchg
frstor
jp
jbe
pop
add
inc
shll
or
loope
sub
adc
add
xchg
cmpsl
sub
pop
xchg
add
add
sbb
shll
add
lods
popf
xchg
dec
add
add
adc
mov
and
cmpsl
ljmp
sub
pop
fildl
xor
or
add
sub
add
inc
inc
add
add
outsl
pop
mov
sbb
mov
data16
ret
add
xchg
lods
popf
pop
mov
add
out
test
add
add
add
jb
ret
fists
add
add
add
lea
dec
add
sub
cmp
dec
add
jp
loope
inc
mul
adc
add
imul
sti
cmpsl
add
ss
add
and
pop
mov
add
add
push
add
cmp
add
xchg
pop
push
adc
add
stos
test
sarb
add
cmp
mov
add
iret
xchg
and
push
mov
roll
inc
add
add
add
sbb
pop
imul
add
mov
jns
jl
mov
push
add
mov
add
ja
push
movl
mov
movsb
add
sahf
mov
mov
add
outsb
add
popa
add
adc
add
add
add
adc
xchg
fiadds
adc
add
sahf
out
mov
jbe
xchg
fisubrl
mov
add
add
add
into
xor
add
pop
lods
add
adc
add
xor
add
sub
push
xchg
cltd
adc
mov
fnstcw
testl
in
add
std
imul
add
fisubs
mov
add
jo
popa
addr16
add
add
inc
add
jl
pop
jecxz
mov
add
pop
or
pop
add
mov
adc
fwait
sahf
mov
jae
stos
shlb
or
insl
das
das
jne
imul
xchg
adc
mov
lds
call
adc
cmpsb
inc
dec
das
call
pop
inc
jp
mov
add
push
add
add
addl
add
add
popa
test
xchg
xor
dec
add
xchg
push
jbe
mov
push
ret
sbb
popf
add
add
jecxz
cmpsb
lahf
movsl
and
add
mov
dec
add
enter
cmpsl
sbb
pop
repnz
mov
fimuls
add
jnp
push
add
push
add
add
sub
xchg
and
add
add
xchg
inc
add
jecxz
fstl
test
add
add
add
push
enter
outsb
add
add
push
add
push
add
cmp
psrld
scas
fcmovne
in
dec
add
jmp
cmpsl
es
popf
test
les
rcl
mov
rclb
rcrb
inc
or
or
mov
dec
add
scas
cmc
out
pushf
leave
add
pop
inc
add
add
dec
add
mov
jp
push
and
add
neg
shll
cwtl
add
stc
adc
incl
xchg
rcrb
add
sbb
add
add
repnz
xor
add
adc
fdivl
ja
stos
daa
fiadds
hlt
lcall
adcl
nop
add
outsb
add
rorl
jg
xor
xchg
aaa
add
mov
jbe
mov
lahf
jae
or
or
fcomps
arpl
xchg
add
mov
add
jnp
rcrb
inc
add
lods
test
add
js
and
cmp
mov
cmp
sti
repz
loopne
das
out
int3
sbb
cld
sahf
pop
add
mov
shrl
cmpsb
icebp
test
ljmp
lods
add
fucomp
sub
sbb
scas
pushf
lret
pusha
add
add
lahf
mov
lret
add
add
add
sub
pop
lods
stos
cwtl
repz
add
mov
stos
in
jns
add
inc
and
cmp
fwait
and
and
push
add
and
add
lret
dec
stos
dec
add
cmpl
add
add
inc
xor
add
fwait
add
lcall
je
or
jbe
out
mov
add
out
add
add
in
xchg
jle
sti
cli
add
add
lret
bound
rcrb
fiaddl
movsl
fistps
add
jns
or
clc
fwait
push
add
add
lods
mov
mov
jge
xor
cmp
dec
add
stc
add
das
call
sub
sbb
xchg
in
inc
add
add
in
add
mov
pop
in
sbb
mov
pop
and
add
adc
add
lcall
add
jg
add
rolb
outsb
add
sub
imul
add
add
ret
add
shlb
add
movb
add
mull
add
fldcw
add
mov
add
test
cmp
fcomps
mov
xchg
insl
neg
fldcw
iret
adc
in
add
stos
test
pop
or
sbb
fwait
cmp
add
add
stos
loopne
andl
fnsave
lahf
mov
fdivs
sub
inc
add
test
cmp
inc
add
popf
jge
add
push
add
add
int
add
cmp
cmp
sahf
adc
add
insb
add
push
add
add
add
xor
add
popf
pop
add
push
add
str
sub
mov
sbb
loope
mov
dec
iret
sti
in
iret
mov
push
popa
mov
lds
add
movsl
roll
dec
add
mov
and
add
add
mov
mov
push
add
push
stc
push
aam
pop
mov
rorb
add
adc
stc
arpl
mov
int
mov
rcrl
add
mov
and
cmc
pop
dec
mov
cwtl
add
mov
add
jge
adc
test
pop
add
add
inc
add
enter
cli
sbb
mull
jbe
movsb
ret
inc
jnp
fidivs
jae
out
movsl
in
clc
add
shl
lcall
icebp
orb
jb
stos
jmp
in
add
test
test
pop
add
mov
add
adc
xor
cmp
fnstenv
inc
pop
cwtl
add
push
push
dec
add
popl
andb
fisttpl
aam
add
fwait
ret
push
outsl
pop
cwtl
mov
adc
popf
nop
inc
out
cmc
setnp
outsb
add
pop
data16
pusha
add
push
add
rolb
repnz
xchg
adc
add
add
jmp
imul
pusha
add
or
cmp
negb
add
add
loopne
add
mov
mov
push
add
add
add
ret
add
and
imul
outsl
add
add
mov
outsb
add
dec
add
xchg
ja
mov
loope
xor
sarb
mov
cmp
add
sbb
add
add
xor
sbbl
cmpsl
mov
add
add
push
or
dec
add
test
add
add
add
inc
add
int3
lock
add
add
mov
aas
dec
cmpsl
cmp
add
add
add
add
add
lds
outsb
add
add
add
jbe
bound
mov
hlt
pop
add
push
add
sbb
sub
int3
dec
inc
add
add
xchg
xor
pop
add
add
add
call
sbb
in
push
add
jge
pop
fsub
jl
testl
push
add
add
jne
pop
add
and
lret
sbb
dec
pop
xchg
and
add
mov
cmp
aas
add
sbb
pop
ss
filds
addl
add
out
add
add
adc
mov
fxch
mov
or
in
mov
add
add
cs
xchg
in
dec
add
shl
jo
xchg
in
popf
ljmp
iret
decb
mov
push
add
shrl
inc
add
pop
out
sub
adc
pop
inc
add
xchg
inc
das
adc
add
insl
pop
cmp
loopne
aaa
mov
and
test
jae
lock
add
dec
imul
xchg
add
jge
js
cmc
mov
jle
out
sbb
lret
pop
add
add
add
jl
fadds
xor
fwait
sub
lret
imul
add
add
aaa
out
add
in
and
add
push
aam
add
bound
mov
add
hlt
sbb
sbb
mov
add
xor
add
mov
bound
add
add
add
add
or
mov
into
push
repnz
add
add
add
inc
add
dec
add
dec
add
sub
mov
je
adcl
add
mov
mov
leave
add
add
mov
add
xchg
add
jl
clc
shll
ja
cmc
lock
jae
jecxz
add
add
fdivr
push
cli
inc
add
mov
ja
stos
add
dec
adc
add
or
sbb
arpl
dec
jg
ljmp
in
int
pop
add
pop
sahf
add
fisubl
ljmp
mov
inc
add
push
add
cli
add
add
xor
xchg
add
bound
mov
cmpsl
out
in
les
aaa
mov
pop
add
into
or
sub
les
addl
cmp
lahf
cmpsb
lret
add
push
add
add
sbb
fcoms
xchg
stc
sub
sbb
rcll
jmp
jno
cmc
add
insl
or
xor
das
or
add
mov
push
lret
xchg
jge
dec
push
into
add
and
add
sti
dec
add
and
add
out
les
add
les
pop
add
add
add
mov
out
dec
add
add
shlb
push
add
out
add
sbb
xchg
xor
add
aaa
add
into
jno
repz
jns
imul
add
ret
add
fldenv
sub
pusha
add
lods
add
gs
mov
sbb
into
pop
add
pushf
add
inc
add
add
mov
int3
jge
je
jp
stc
arpl
hlt
push
add
inc
fbstp
push
add
neg
mov
mov
add
mov
mov
or
cmpsb
lret
std
mov
test
add
add
mov
adc
sbb
add
loope
mov
in
xchg
andb
and
lea
sbb
add
js
shr
xchg
jae
and
ficomps
rolb
pop
add
pop
dec
add
lods
lds
mov
xchg
enter
mov
push
add
sub
inc
add
shrl
pop
add
xor
add
add
sub
add
in
add
mov
add
jle
dec
addr16
add
movsb
pop
mov
mov
cld
fld
xchg
stos
add
push
lret
test
cmp
mov
add
scas
add
pop
stos
movsb
cmp
dec
cmp
cmc
xchg
mov
add
lods
daa
pop
add
add
add
add
ss
mov
cmp
xchg
inc
add
outsl
xchg
mov
add
or
mov
mov
pushf
add
sahf
lret
add
dec
add
add
push
add
mov
lret
pop
jo
mov
add
sub
stos
int3
hlt
jo
test
repz
popa
movsb
add
clc
aas
insl
xchg
iret
aas
or
add
add
add
jno
push
add
add
sahf
loop
inc
repnz
jge
stos
mov
add
ficompl
dec
pop
add
pop
add
and
add
pop
add
add
xchg
add
das
shll
xor
add
add
jno
addl
daa
and
mov
sub
addb
or
ret
loopne
mov
fiadds
push
add
std
pop
add
or
jge
nop
stc
inc
add
lds
add
pop
add
sub
cmp
das
xchg
xor
pop
add
dec
inc
pop
add
or
addb
add
add
jmp
inc
add
xchg
in
add
add
je
inc
mov
scas
pop
add
lret
shlb
and
add
add
pusha
add
loope
in
push
mov
pop
push
add
push
add
scas
xor
add
mov
or
or
jge
ss
add
pop
dec
add
add
test
or
insl
jmp
pop
add
repz
xor
or
test
imul
pop
mov
sub
fwait
and
add
cli
shll
mov
inc
push
imul
jg
enter
out
add
or
lahf
addb
sub
mov
jb
cmp
data16
scas
int3
sbb
out
scas
leave
addr16
pop
add
rorl
fldl
popa
call
pusha
add
das
add
add
icebp
ljmp
jmp
mov
aas
xchg
loop
add
add
add
inc
sbb
shll
je
lock
jg
mov
add
fsubr
in
or
fnstsw
add
dec
add
mov
xor
in
ds
cmp
pop
add
push
add
js
push
int3
lret
roll
popa
adc
add
rol
fsubl
inc
add
jb
dec
add
add
mov
jle
scas
cmp
movsb
add
aad
add
inc
add
dec
in
imul
adc
adc
mov
lret
cmp
pop
jns
adc
add
xchg
add
fs
sub
sub
in
pop
ds
xchg
popa
xchg
rcrb
mov
add
mov
push
mov
add
add
mul
pop
dec
pusha
add
add
sub
adc
add
movsb
enter
call
mov
and
jae
enter
orl
add
in
inc
add
sub
add
add
dec
add
cmp
add
xor
mov
mov
ss
mov
push
dec
add
fsubrl
popa
mov
mov
mov
test
adc
add
xchg
sub
mov
call
mov
xchg
add
scas
lods
cmpsb
nop
adc
add
pop
add
addb
add
jnp
inc
mov
dec
cmp
push
cmp
push
add
sub
adc
add
xor
int3
nopl
aad
and
sti
sarl
xchg
jl
sti
pop
in
fiaddl
insb
add
and
add
js
push
add
incl
dec
adc
add
add
inc
js
pop
lds
fnstsw
into
add
add
or
add
add
mov
add
mov
add
insb
add
fdivl
adc
lahf
gs
ss
test
add
mov
mov
call
flds
cmp
aas
dec
add
lods
cmp
sub
daa
fldl
sbb
inc
cmpsl
cmp
add
aas
xchg
xorb
add
flds
and
loopne
aad
fisttpll
and
add
add
test
sbbb
add
fistpl
sbb
dec
xchg
mov
adc
add
cmp
push
into
and
add
add
and
add
shl
imul
adc
add
inc
rcll
add
cmp
pop
lds
mov
sbb
add
inc
jb
stc
xor
inc
add
cmp
jg
notl
test
add
mov
add
das
xchg
icebp
mov
add
add
rcr
mov
aaa
data16
and
add
out
negb
cmp
adc
mov
and
add
pushf
push
add
mov
xchg
in
xor
add
add
add
dec
add
testb
add
add
sbb
popf
mov
jo
jge
fsubl
mov
fistpl
scas
mov
sbb
mov
js
enter
lock
icebp
add
cwtl
adc
pop
lret
and
add
xor
add
jg
sbb
fiaddl
xchg
add
sbb
dec
jnp
add
jne
jg
inc
add
jae
mov
add
sbb
dec
add
data16
lods
add
addb
jo
jo
sbb
push
add
test
add
ja
xor
sub
sub
push
sub
aas
add
or
push
add
dec
xor
add
jno
xchg
and
negb
add
std
add
loope
lcall
cmc
push
add
pop
and
add
jo
mov
adc
add
in
push
fiaddl
cmp
push
add
mov
mov
aad
sub
mov
add
cmpsb
scas
push
add
adc
jmp
clc
push
movsb
lcall
sub
pusha
add
sub
fcomi
adc
add
cmp
mov
lock
leave
mov
cmc
lock
pop
stos
add
decb
mov
or
jae
loope
xor
cmpb
fstpl
jnp
jmp
add
mov
into
add
add
add
scas
lods
cmp
dec
pop
mov
js
mov
jp
shll
cld
add
lods
mov
mov
add
push
add
add
sbb
xchg
dec
cwtl
dec
add
imul
add
add
mov
dec
add
lock
jae
adcl
ss
rclb
or
add
add
add
push
add
add
cmp
mov
lcall
add
jge
call
xchg
out
add
add
add
dec
leave
shrb
lds
add
sub
add
lds
push
add
repnz
int
mov
add
cmpsb
add
pop
push
add
add
cltd
filds
add
push
push
repnz
jno
add
add
and
add
ret
add
inc
add
add
repz
add
push
lcall
pop
mov
push
push
add
sub
in
fidivrs
sbb
dec
or
cltd
add
add
popl
inc
sub
mov
ds
lret
mov
out
mov
push
add
out
rcr
jle
loop
add
or
stc
scas
lds
push
enter
pop
add
fwait
push
mov
inc
add
jmp
push
xchg
lea
dec
add
mov
jmp
inc
xlat
popf
das
sarb
popa
cmp
scas
inc
pop
cmp
jae
imul
outsl
add
cmp
stos
clc
in
sub
dec
add
push
adc
mov
add
lahf
mov
add
add
add
add
jmp
lea
and
add
mov
add
xor
js
loope
outsb
add
popf
jle
xchg
mov
imul
push
fdivs
mov
ret
dec
add
add
enter
mov
xchg
test
jg
add
loope
sub
or
add
xor
add
xor
inc
add
mov
pop
mov
out
or
or
movsb
add
add
lcall
leave
xchg
ret
lods
or
fisttps
cmc
out
jge
add
mov
ja
cwtl
jns
dec
add
mov
out
sub
adc
add
pushf
jb
rcl
xor
add
les
add
push
add
add
add
daa
add
push
fiadds
imul
pop
sub
ret
mov
cmpsl
sbb
xor
cmc
nopl
mov
sub
jge
cmp
mov
test
adc
xchg
or
pusha
add
mov
and
pop
add
add
push
out
inc
add
xchg
adc
js
sbb
or
data16
das
push
jge
add
stos
add
xchg
int
add
xchg
imul
pop
add
mov
lahf
jmp
sbb
add
addb
add
jecxz
mov
add
mov
cs
in
dec
add
xor
daa
add
stos
push
add
les
les
xchg
sbb
mov
push
add
pop
add
add
subb
add
jecxz
adc
lahf
xor
dec
add
add
call
cli
add
xchg
sbb
lds
add
add
add
aaa
add
jle
jl
jl
mov
into
int
add
into
mov
pop
push
mov
mov
fwait
adc
add
xchg
cmpsl
in
cmpl
adc
ljmp
jmp
mov
add
pop
cmpsl
inc
add
add
mov
movsl
jmp
dec
add
test
loopne
aaa
sbb
add
add
fists
addb
in
and
add
jl
adc
add
aaa
addb
pop
pop
add
stos
add
mov
rcll
lret
add
sahf
jp
sub
aas
add
xchg
test
xchg
mov
add
mov
cmp
hlt
pop
inc
fbstp
arpl
fadds
data16
loopne
add
push
add
mov
roll
add
sub
adc
add
push
add
and
add
push
pavgw
add
mov
in
mov
push
mov
add
add
xchg
pop
add
xchg
pop
mov
cli
ret
iret
and
add
add
add
sub
jnp
add
addr16
add
sbb
pop
fdivs
mov
xchg
in
test
or
cmp
lret
mov
add
add
add
faddl
in
add
aam
shr
ret
add
imul
cmp
pop
add
pop
pop
cs
push
mov
and
bound
popl
xlat
xor
add
andb
lret
cmpb
add
add
add
lcall
add
dec
add
lods
out
setb
imul
outsl
and
push
dec
mov
lea
jb
cmp
add
inc
add
add
add
jb
imul
xchg
sbb
roll
or
add
jl
inc
and
add
cmpsl
bound
dec
add
push
popf
movsb
jg
stos
dec
cmp
sub
cmp
pop
add
stos
add
add
xor
cmp
adc
add
sub
dec
add
fiaddl
data16
dec
add
push
add
xor
jbe
in
cmp
xchg
sbb
cwtl
rcr
adc
add
pushf
add
sbb
sub
js
int
pop
clc
add
sub
dec
add
add
jmp
add
add
sub
mov
lods
mov
dec
sub
add
add
loop
lock
sbb
pop
addr16
cmpsb
repnz
add
loope
in
fadds
add
add
sbb
mov
sub
pop
inc
ret
mov
aaa
or
shlb
imul
nop
add
mov
add
push
in
add
push
cmpsb
add
add
data16
adc
add
xor
xor
add
inc
call
dec
fucomi
in
mov
cld
movsl
inc
add
add
xchg
int3
ljmp
lods
adc
pop
sub
in
mov
sbb
add
test
adc
lods
jbe
mov
inc
dec
mov
test
lock
add
xor
add
jne
orb
add
scas
out
scas
mov
mov
fdivrp
xchg
cmpsb
outsb
add
mov
or
adc
add
mov
add
pop
mov
mov
fstpt
sbb
loopne
shll
add
add
call
jle
in
inc
add
push
je
and
add
ret
int3
lock
sub
and
add
adc
push
sub
xor
add
jge
sub
add
pop
fildl
xorb
jecxz
jle
sbb
shrb
mov
jae
mov
int
mov
add
arpl
mov
pop
cltd
mov
cmp
add
cmp
rcrl
add
mov
imul
mov
dec
add
or
adc
add
add
inc
add
add
testb
add
add
mov
add
dec
add
fisubrs
xchg
mov
mov
sub
xchg
cmp
cmpsl
imul
xlat
ret
movsb
mov
xchg
pushf
aaa
and
sbb
mov
add
add
pop
icebp
add
aas
insb
add
add
cmp
add
jle
lock
add
ret
lds
push
add
in
mov
and
addl
add
or
ror
add
jmp
shrb
and
sti
pop
jae
add
out
add
jne
test
push
add
add
in
xchg
pop
cmpsb
enter
add
mov
inc
add
jns
lock
inc
xchg
stos
gs
lods
sub
add
lcall
cli
insb
add
add
push
add
testb
test
add
push
add
xchg
imull
add
add
lahf
out
mov
jg
push
add
cmp
fstpl
lret
pop
add
mov
add
lret
pop
jb
insb
add
add
lds
cmp
dec
shlb
add
jle
push
add
jmp
push
movsb
xorl
out
xchg
sbb
and
test
push
jbe
xchg
sub
stc
repnz
inc
add
add
mov
imul
add
add
shlb
aas
add
add
add
add
aaa
push
add
iret
lret
not
rcrl
add
repz
adc
add
adc
add
xchg
add
add
das
xor
add
mov
dec
add
push
add
test
jl
outsl
inc
mov
adc
add
lcall
xchg
clc
xor
incb
push
jno
lcall
add
push
dec
add
cld
fyl2x
stos
daa
sub
outsb
add
adc
add
push
add
cmpsl
loopne
lret
push
add
jno
pop
and
aaa
pop
add
add
fstpt
clc
clc
mov
mov
repz
pop
movsb
add
add
sbb
stos
sbb
adc
add
movl
mov
ret
sub
xor
add
jnp
test
add
adc
fmul
loopne
adc
or
pop
add
add
and
xor
add
add
cmpsb
push
jb
add
clc
sbb
sti
ret
mov
ror
add
movsb
jne
pop
add
add
aas
add
add
xchg
ret
or
dec
and
add
daa
add
mov
mov
sti
adc
in
xchg
das
fisubl
stc
dec
shl
xorl
mov
xor
add
pop
add
add
dec
add
mov
jl
rcl
sti
mov
fsubr
sti
mov
xchg
outsb
add
add
add
add
lret
add
mov
cmp
add
adc
outsl
xchg
int
fmulp
shrb
add
mov
out
loope
sub
or
gs
add
jmp
push
out
mov
adc
adc
xchg
add
xor
add
cmp
out
add
push
pop
push
add
cmp
mov
dec
add
testb
mov
addb
add
add
jg
add
lret
out
ficoml
fldl
xor
add
in
push
sbb
out
popf
les
mov
pusha
add
mov
out
and
add
les
popf
adc
or
xlat
mov
ret
jae
test
add
into
mov
add
pushf
add
out
lahf
pop
add
and
sbb
pop
jno
mov
dec
add
cli
das
aas
outsb
add
stos
jae
cmp
and
add
jno
and
and
add
aad
add
xlat
add
scas
rcrl
daa
add
mov
repz
push
add
mov
jno
jbe
dec
add
mov
pop
add
lret
add
ficomps
xchg
jle
enter
or
outsl
fstpl
add
imul
xor
aam
ss
add
cld
mov
add
mov
lret
sti
js
dec
add
jecxz
inc
add
addr16
xchg
add
insb
add
mov
sbb
add
out
add
and
add
pop
add
add
andl
pop
add
add
add
roll
push
add
cmc
jecxz
sbb
out
gs
add
mov
pop
add
loop
adc
enter
add
inc
add
lret
mov
push
add
adc
cmp
xchg
cli
stc
cmp
cmp
or
ficoml
mov
roll
loope
xchg
add
mov
faddl
icebp
add
movsl
push
add
mov
pop
add
xor
add
pop
xor
xchg
sbb
inc
add
add
loopne
xchg
jo
es
add
pusha
add
mov
pop
add
jbe
aam
lock
xchg
add
cmp
int3
add
fprem
sahf
inc
adc
add
stc
dec
jnp
jo
sbb
loop
int3
add
add
sbb
add
add
fidivrl
add
call
pushf
jb
adc
mov
iret
jp
sti
cmpsb
sub
push
cltd
clc
insl
add
mov
jnp
push
sub
lcall
mov
add
cmp
add
add
sbb
mov
add
or
add
lock
add
add
jnp
popa
cmp
inc
add
xor
add
cmp
xor
mov
sub
jg
push
add
or
ss
sbb
cmp
out
mov
sahf
into
lock
sub
pop
mov
and
cmp
icebp
push
add
inc
test
hlt
jmp
jp
and
add
mov
add
aam
xor
int
cmp
add
fstl
xor
mov
or
jno
add
loop
cli
das
sbb
fistps
lcall
aas
pop
add
in
popa
add
mov
scas
push
add
mov
xchg
sbb
xor
add
test
fsts
add
xchg
adc
push
sti
ja
add
mov
dec
add
xchg
aad
add
sbb
popa
add
shlb
add
jnp
and
pushf
cltd
scas
fcoms
aaa
filds
jg
add
push
add
fildl
out
mov
push
xchg
aad
add
add
js
out
sti
sti
das
out
imul
push
add
iret
repz
fdivrl
lock
lahf
push
add
and
add
add
sbb
xor
inc
cmp
repz
add
rclb
jp
lock
in
gs
add
jb
clc
push
add
mov
int
aad
add
adc
add
arpl
add
enter
hlt
add
add
cld
push
add
aam
add
iret
add
xlat
add
mov
add
stos
lret
or
aad
xchg
add
push
aaa
nop
add
xchg
push
add
scas
cmpsl
and
add
sbb
add
pushf
add
fcmovbe
fwait
add
add
pop
call
loopne
cmp
xchg
mov
aad
pop
push
xchg
xchg
out
jecxz
add
add
lods
add
aam
add
add
adc
push
add
add
aad
cwtl
test
mov
cmp
rorl
add
inc
add
hlt
insl
inc
add
add
add
xchg
push
dec
add
hlt
mov
or
mov
jbe
icebp
daa
sahf
add
das
in
addr16
sbb
jecxz
lret
stos
xor
pop
jl
mov
std
loope
add
inc
dec
add
sub
mov
jo
add
test
push
add
lret
repz
add
stos
xor
mov
add
add
scas
cmp
subb
rcrb
leave
in
xchg
mov
add
fisubs
or
add
sbb
jne
add
add
add
add
add
mov
adc
xchg
add
adc
xor
add
mov
add
push
add
mov
add
incb
mov
xor
add
jmp
jae
fcmovnu
sti
lret
add
sub
push
add
jmp
add
pop
mov
pop
mov
aas
pop
add
les
lods
loop
xchg
add
add
mov
sub
lds
pop
adc
add
adc
push
or
lcall
add
sarl
cmp
push
add
and
add
mov
in
sub
bound
js
das
mov
add
adc
add
loope
in
mov
and
add
outsb
add
and
or
mov
add
inc
add
xchg
out
xchg
ret
ficoml
add
inc
add
add
outsb
add
or
inc
add
add
mov
out
mov
iret
fwait
xchg
push
outsl
add
add
cmp
lods
add
imul
aas
fwait
ret
out
push
add
add
sbb
lahf
pop
add
jmp
sub
pop
add
call
cmp
and
pop
add
push
fiaddl
cmp
jno
gs
addr16
movsl
roll
fimuls
add
add
adc
mov
sub
mov
sahf
add
cmp
xor
add
sbb
add
mov
add
aam
add
inc
subb
add
add
or
les
imul
shr
push
push
add
mov
cmc
cwtl
add
add
and
add
add
xchg
dec
xor
add
cmp
lret
add
dec
pop
add
add
in
sbb
sbb
inc
add
push
cmpsb
dec
add
sbb
outsl
dec
xor
add
push
les
insl
add
movsb
stc
into
lea
inc
add
add
mov
xchg
in
dec
mov
fbld
xchg
add
popf
movl
rcrb
addr16
add
pop
add
sbb
jg
push
add
add
add
punpckhbw
and
sub
dec
jae
cmp
add
insb
add
repz
and
sti
push
jle
mov
out
les
add
movsl
inc
add
sbb
lret
add
add
adc
jecxz
push
add
sub
cmp
clc
hlt
sahf
fstpl
sub
mov
add
movsl
in
and
add
push
xor
das
pop
mov
pop
add
add
stos
xchg
stos
adc
add
add
or
rcll
leave
fwait
adc
loope
mov
add
inc
add
add
add
add
dec
and
add
imul
adc
ja
gs
push
dec
mov
add
add
imul
add
inc
add
das
and
add
add
out
mov
add
dec
mov
sub
outsl
sub
fwait
jnp
into
push
add
sub
push
xlat
jmp
add
mov
mov
mov
fimull
add
inc
cwtl
imul
mov
mov
mov
sar
lcall
mov
add
jbe
cmp
dec
add
add
add
push
test
jb
pop
into
cli
sub
repnz
test
data16
std
movsb
popa
lea
lret
or
sti
sbb
mov
imul
mov
mov
push
cmc
cld
mov
aas
xor
xor
add
not
push
add
sbb
addb
mov
insb
add
mov
mov
iret
dec
add
dec
add
pop
cmc
js
push
sahf
mov
sbb
add
pop
add
nop
or
sub
or
in
lret
jl
or
add
mov
add
lret
pop
in
add
push
dec
add
add
loop
in
lods
stos
cmp
in
xchg
sbb
or
sarl
adc
adc
add
aaa
cmp
mov
add
add
sub
addr16
add
add
lcall
loopne
jmp
add
js
xchg
sub
add
lcall
pop
add
add
fimull
repz
sub
arpl
iret
int3
sbb
mov
xchg
mov
sbbl
dec
add
mov
add
adc
add
mov
xor
mov
add
add
sub
xor
int3
rol
push
add
shll
add
add
add
test
pop
add
pop
mov
les
push
add
movsl
jae
mov
add
iret
xor
add
test
mov
jmp
loop
or
push
jnp
insb
add
add
jbe
aad
pcmpgtb
das
sbb
xchg
ficoms
xchg
roll
xchg
add
pop
add
xor
fadd
jecxz
jmp
add
xor
add
sbb
jmp
add
add
mov
add
pop
add
xor
add
sahf
lock
testb
add
or
xchg
push
add
add
push
add
jl
adc
add
aas
das
pop
xchg
push
jb
pop
inc
add
add
shrb
jp
aad
add
testb
pop
add
sahf
std
test
test
repnz
fdivrl
add
push
add
xorl
add
repz
aad
push
add
adc
lods
dec
jns
or
das
jo
ja
add
pusha
add
jmp
cmpsb
and
adc
add
add
out
inc
mov
or
pop
jg
fwait
sti
ret
stos
test
add
add
inc
add
roll
and
in
pusha
add
repz
add
or
std
add
jnp
inc
add
add
adc
cmp
adc
cmp
xchg
pop
ret
and
add
fcomip
dec
add
add
add
add
ret
or
sub
mov
imul
aam
bound
mov
push
sahf
add
inc
add
add
and
mov
xlat
fcomi
xor
ja
mov
add
clc
sti
enter
add
add
rolb
movsl
stos
sahf
xor
pusha
add
mov
cmp
inc
add
add
lds
add
add
add
inc
add
ljmp
add
sub
mov
mov
adc
add
add
xlat
sbb
adc
xchg
ljmp
xchg
ficomps
fwait
mov
jecxz
lcall
cmp
int
add
add
xor
aas
mov
mov
js
mov
add
mov
mov
aaa
jo
bound
in
imul
xchg
push
and
jb
mov
icebp
adc
out
adc
add
add
push
mov
daa
dec
add
add
fimuls
cmp
test
rcrl
lret
inc
add
lret
fcomps
clc
mov
mov
xor
lahf
aad
mov
add
add
loope
inc
add
cmp
add
filds
add
ja
or
shll
jae
stc
jg
pusha
add
flds
fildll
push
add
fnstsw
add
loopne
cmpsl
xor
pushf
xchg
mov
add
ja
lcall
jp
add
add
add
mov
push
rcl
adc
add
cmp
push
add
add
aam
push
fstpt
call
add
fldenv
add
add
pop
iret
jno
int3
add
and
add
out
aaa
jge
xchg
push
add
popf
add
add
add
mov
sub
cmp
daa
cmp
fwait
lods
shrl
xchg
fsubs
ret
out
loopne
addb
inc
add
mov
dec
es
add
add
add
add
lds
add
sub
bound
in
jl
dec
and
add
cmpl
sub
or
mov
pop
add
negb
jecxz
inc
add
xchg
mov
mov
push
pop
jmp
add
adc
aas
add
mov
ss
add
mov
rolb
jne
add
repz
add
jne
shl
push
jge
data16
add
add
adc
pushf
add
add
push
insb
add
jl
mov
loope
pop
mov
into
or
push
and
loop
jg
movsl
mov
cmp
xchg
cwtl
in
add
ltr
xchg
add
movsl
jae
loope
out
add
daa
add
iret
lods
add
add
jae
and
add
aaa
leave
add
jmp
ret
add
sub
cmp
aas
std
jo
lea
addl
xchg
icebp
movsb
orb
and
jb
stos
stos
cmp
repnz
repnz
add
jmp
add
out
push
es
add
mov
pop
sahf
add
push
add
lret
add
insl
xor
add
jno
adc
add
add
xlat
ljmp
data16
negl
and
add
inc
add
mov
xchg
dec
mov
mov
add
add
shll
push
add
mov
jmp
add
xor
push
orl
add
jnp
add
add
add
add
dec
add
pop
add
mov
add
push
add
xor
loop
jg
rclb
flds
pop
push
outsb
add
dec
add
ljmp
loop
or
lahf
daa
js
lahf
dec
mov
inc
add
mov
mov
inc
pop
arpl
add
add
out
arpl
push
add
repz
add
ror
mov
fildl
push
xchg
lcall
xchg
add
adc
mov
add
imul
mov
xor
add
add
shlb
lahf
mov
add
push
push
insl
add
jo
ret
add
repnz
mov
andb
int
cli
fnstenv
scas
aam
mov
sub
lock
mov
je
add
add
outsl
jns
call
cmp
stc
jg
out
and
add
into
lods
pop
add
add
add
out
dec
add
mov
jg
and
add
in
mov
cmp
hlt
mov
add
xchg
testl
dec
das
jns
jecxz
cli
mov
jb
pop
add
add
cs
add
pusha
add
mov
xchg
shr
pop
jno
fimuls
pop
add
add
leave
pushf
stos
jae
add
add
add
imul
jmp
aam
mov
incb
in
adc
add
add
testl
xor
add
and
add
mov
add
std
ja
les
add
add
push
add
cmp
sbb
stos
add
nop
xor
push
push
add
mov
out
sbbl
mov
jg
adc
add
sub
jno
inc
add
add
sbb
arpl
or
mov
pop
jno
insb
add
add
mov
idivb
pop
add
nop
pop
and
add
and
adc
daa
iret
add
mov
jecxz
outsb
add
sbb
pop
add
push
add
cmp
incb
fisubl
sbb
insb
add
lret
sbb
lods
add
mov
dec
rcll
add
or
xor
add
adc
lods
xor
div
and
pop
add
and
add
add
and
mov
ret
pushl
mov
iret
lds
data16
add
add
adc
add
rcrl
sub
cltd
cmp
or
hlt
adc
xor
add
add
lcall
add
jecxz
sub
and
fs
fnstenv
cmp
mov
les
test
test
insl
add
inc
out
cmc
fwait
stos
ficompl
add
out
add
and
dec
pop
sbb
pop
xchg
sub
xchg
out
arpl
cmp
notb
cli
int3
cmp
lock
and
add
jecxz
xchg
insl
xlat
push
add
push
add
roll
mov
fcmovbe
and
jns
fwait
scas
cmp
data16
add
add
mov
call
xchg
lea
inc
add
mov
add
js
rorl
adc
jl
inc
cmpl
pop
add
imul
arpl
cltd
jp
dec
sahf
ja
lods
add
add
repnz
in
shll
cltd
xor
stc
idivb
add
flds
and
add
lea
inc
add
lret
insl
movsb
icebp
fs
mov
pop
sahf
ds
fdivs
out
mov
fbld
lods
pop
imul
jbe
xchg
faddl
or
fcmovne
pop
rorb
mov
jle
mov
and
add
cmp
aaa
aam
jns
pop
sub
mov
sti
mov
mov
sub
sbb
add
movb
inc
fistpl
inc
add
aas
xchg
std
pop
cmp
pop
pushf
sbb
arpl
sub
dec
add
gs
inc
negb
jne
or
add
push
adc
jb
and
add
dec
addr16
loop
cmp
bound
inc
sahf
stos
jmp
mov
add
mov
jp
ljmp
lds
es
add
sbb
and
add
jne
add
or
lods
fistps
sub
ja
adc
cmc
movsl
mov
call
jl
sbb
popl
loop
jns
xor
add
mov
cmpsl
and
add
clc
add
add
or
scas
lock
inc
jno
xor
add
xchg
sti
sti
aaa
aad
and
mov
add
mov
push
jns
and
dec
data16
sub
cmp
mov
mov
sbb
cmp
lds
push
add
cmp
add
add
mov
out
dec
add
aad
mov
lret
add
divl
jmp
mov
mov
jmp
xlat
or
inc
jmp
add
add
xchg
xor
add
sti
cmp
sbb
add
pop
add
test
imul
add
mov
add
add
sub
popa
add
jo
mov
lock
aam
add
xchg
sub
push
add
xorl
in
lar
add
cmc
add
add
jp
test
add
add
cmpb
add
xchg
repz
add
cmc
pop
add
inc
mov
mov
xchg
push
add
fistps
dec
add
push
xlat
leave
or
jmp
add
call
push
add
pop
add
sub
cmpsb
roll
add
cmp
jge
xor
add
lret
std
cmp
push
jmp
pop
add
ret
jmp
sbb
jg
into
pop
add
dec
add
lret
add
add
and
add
jle
mov
jae
je
pop
add
sahf
add
dec
add
or
aad
push
add
popa
xchg
jl
jle
les
out
add
xchg
xor
adc
movb
idiv
add
add
and
add
in
inc
popf
cmp
add
mov
popf
inc
mov
add
test
add
add
pop
add
out
pop
add
lahf
xlat
adc
pushl
jne
xchg
subb
add
jle
rcrl
loopne
mov
add
jle
iret
lea
add
jne
add
movsb
dec
xor
add
add
testl
adc
add
pop
add
add
mov
aad
ret
out
mov
cmp
dec
add
arpl
mov
sub
leave
or
data16
lret
add
std
rcl
les
icebp
lret
dec
push
ja
js
dec
jne
push
add
lods
inc
mov
push
sbb
jge
mov
test
mov
mov
jp
inc
pop
add
cltd
js
call
push
add
sti
scas
push
pushf
mov
fldl
push
mov
fistps
in
push
test
mov
add
mov
add
add
pop
iret
cmpsl
in
out
sub
jo
adc
add
aas
pop
add
addr16
flds
cmp
add
dec
test
mov
jp
sti
shll
add
adc
or
orb
pop
push
pop
add
add
pop
cmp
lods
inc
jg
dec
adc
and
add
add
popa
add
mov
xor
add
push
add
xchg
adc
add
test
pop
jns
jmp
sub
add
add
flds
icebp
jns
pop
add
out
imul
or
add
cmp
xchg
push
mov
cmp
add
lods
pushf
add
add
xchg
cmp
add
inc
movb
add
test
cmp
push
xchg
in
movl
push
cli
lret
add
jae
add
cmp
add
push
add
pop
add
add
add
sbb
cmpsb
mov
xchg
dec
fstpt
inc
add
ret
out
cli
sub
movzbl
frstor
mov
fdivs
cmp
add
out
fwait
xchg
add
pop
add
jns
xchg
shlb
sbb
sbb
add
jle
dec
in
mov
or
jmp
into
and
mov
add
add
cltd
add
lods
pop
out
stos
add
jmp
lods
imul
je
xor
add
add
daa
rolb
cmp
cld
jo
sub
loopne
add
push
add
push
add
add
stos
add
ss
add
repnz
cld
mov
pop
add
rolb
add
xchg
das
mov
add
dec
dec
add
sbb
mov
add
add
push
add
popa
out
fists
cmp
das
sarb
popa
aam
add
add
sbb
inc
add
add
add
loope
add
add
add
dec
add
int3
add
out
fcmovnu
int3
lea
push
popf
arpl
cmp
out
inc
pop
add
pop
sahf
ja
lret
cwtl
ret
xor
add
mov
popf
mov
add
ret
stos
adc
add
mov
lds
daa
and
add
jmp
test
mov
sbb
rcrb
add
xchg
jmp
add
scas
push
fsubs
cld
add
sbb
pop
enter
jmp
pop
arpl
cmc
rorb
add
add
add
inc
add
mov
js
or
jnp
das
stc
mov
add
mov
icebp
popa
imul
lods
sub
ficomps
add
xchg
pop
mov
inc
add
jge
pop
pop
add
add
leave
add
add
outsb
add
add
popf
jp
mov
stc
and
add
sub
pushf
jp
jmp
outsb
add
mov
and
xchg
cmpsl
andb
add
add
ret
jne
sbbl
add
push
test
push
add
icebp
add
nop
mov
cmp
push
add
mov
sub
dec
inc
add
iret
popf
mov
push
testb
add
cld
test
loope
cmpsb
cwtl
repz
into
sbb
add
add
add
sbb
mov
lods
xor
loopne
push
clc
add
mov
mov
scas
fistpll
add
adc
add
sbb
push
lret
lds
add
idivb
sti
data16
add
ror
test
or
jecxz
cli
cltd
iret
and
add
lahf
stos
xlat
and
mov
mov
add
jns
filds
xor
and
add
cmc
add
add
cld
add
pop
add
insl
adc
add
jo
xchg
icebp
cmp
ss
add
into
ret
cmpsl
insb
add
xchg
in
dec
add
idivl
sub
insb
add
ja
add
and
pop
mov
jp
cli
xor
add
add
insb
add
outsl
add
add
push
add
add
fnsave
rolb
add
pop
rolb
insl
mov
xchg
sbb
dec
mov
xor
leave
or
jns
loope
fnstcw
mov
out
inc
add
add
arpl
or
xchg
pop
incl
mov
mov
or
sti
add
add
fnsave
fidivl
adc
mov
je
xchg
jo
xchg
hlt
inc
add
jae
cs
mov
dec
add
lahf
mov
dec
add
pop
mov
in
xchg
add
cmp
xchg
call
add
add
inc
lahf
or
sbb
scas
fldenv
add
add
das
mov
adc
out
pop
stos
imul
adc
inc
pop
data16
mov
out
push
mov
clc
add
add
inc
add
add
inc
rcll
add
add
add
scas
stos
push
add
jg
loopne
popa
add
sub
add
inc
and
mov
add
dec
pop
mov
add
add
or
clc
add
mov
lods
push
shlb
add
add
jbe
movsb
or
inc
cwtl
ret
dec
scas
movsb
movb
test
add
jb
sub
fucom
pop
add
bound
scas
inc
add
mov
add
add
adc
dec
lret
add
adc
add
sti
jae
or
mov
add
sub
adc
fildl
add
xchg
in
mov
pop
adc
add
adc
add
add
js
mov
call
lock
mov
pop
add
jg
stos
sub
push
add
inc
push
addr16
add
pop
xchg
sbb
pop
add
mov
mov
mov
testb
aas
mov
add
add
jno
incb
add
or
push
add
mov
add
movsb
out
xlat
aas
push
inc
call
cmp
lds
mov
add
sarb
jne
add
mov
jno
inc
and
add
shll
mov
mov
add
jnp
mov
push
add
and
adcl
push
add
out
xlat
mov
into
mov
or
xchg
adc
add
xchg
cmc
movl
jae
loopne
add
add
mov
stc
add
add
popf
xor
add
inc
add
xchg
adc
add
push
popl
sahf
sbb
xchg
pop
push
add
call
add
imull
gs
adc
add
mov
in
test
icebp
fists
jge
and
insl
enter
mov
cmp
push
js
xor
add
frstor
insb
add
nop
test
inc
add
scas
adc
add
add
cs
leave
sbb
aam
lock
jle
cmp
add
adc
scas
pop
add
cmp
add
add
movsl
insl
jle
out
mov
cmpsl
and
add
mov
and
add
add
pushf
add
xchg
xor
sub
notl
add
adc
pop
add
jbe
lds
xchg
add
dec
add
mov
out
add
push
add
call
add
test
and
jns
jbe
es
add
addl
xchg
sti
in
mov
add
add
mov
xchg
xchg
push
add
push
add
sahf
pop
mov
cmp
popa
ficomps
mov
add
mull
in
fidivl
push
add
add
mov
push
add
add
add
add
fwait
push
jmp
les
jo
mov
paddq
inc
add
add
xchg
pop
add
sub
cli
data16
sbb
shll
fbld
test
dec
add
btc
push
add
fst
sbb
xchg
add
mov
xor
add
sbb
push
push
add
adc
add
loopne
rcll
add
lret
inc
add
add
pop
add
out
add
jb
mov
add
sbb
cmp
pop
iret
data16
mov
add
std
mov
or
add
add
in
mov
dec
lods
mov
add
add
std
add
push
or
movsl
sahf
inc
xor
add
jbe
add
dec
add
cld
lds
mov
in
fisubl
aam
adc
mov
add
add
add
std
sbb
jecxz
adc
add
aam
cld
adc
add
pushf
cmp
add
mov
and
std
sub
add
out
fiaddl
dec
add
mov
ljmp
push
mov
std
mov
push
push
add
mov
pusha
add
dec
xor
add
add
lret
add
dec
add
fldl
je
adcl
add
dec
mov
adcl
add
fucomip
sub
mov
scas
xor
add
cmp
add
or
push
add
rcll
lea
lahf
add
add
cltd
lea
movsl
sbb
mov
adc
mov
lea
out
cmp
sub
sbb
pop
pop
add
add
rcrl
dec
add
fwait
lret
pop
add
pop
pop
add
jae
adc
jns
add
jne
iret
in
xchg
mov
shl
dec
add
imul
push
add
pusha
add
adc
pop
xor
mov
int3
add
out
pop
inc
into
fldcw
add
jb
repz
shl
xchg
inc
add
push
add
cmp
test
fildl
dec
add
xchg
add
push
mov
lea
aaa
add
mov
std
adc
mov
lods
and
sbb
cmp
jl
lock
imul
jmp
ret
add
xchg
arpl
cmpsb
mov
addr16
insl
sti
rcrb
lea
mov
add
mov
imull
inc
add
xchg
rorl
xchg
adc
add
add
imul
mov
xchg
das
mov
add
sub
mov
add
out
mov
push
outsl
out
int3
and
add
data16
movsb
aam
add
mov
sub
test
outsb
add
orb
push
add
aad
insl
js
pop
add
movsl
sbb
dec
jmp
add
stc
cli
daa
or
mov
push
add
outsl
add
icebp
es
add
cmp
mov
jns
or
mov
add
add
push
add
push
add
and
add
out
hlt
rcr
pushf
lock
inc
add
lret
add
cmpsl
ja
lea
add
in
or
rorl
outsl
insl
mov
pop
add
xchg
mov
push
push
sbb
mov
push
dec
add
add
test
sub
add
xor
ds
mov
int
add
outsl
pop
add
mov
add
add
aad
xchg
outsl
idivb
add
call
inc
leave
std
mov
add
add
add
add
sbb
push
pop
add
add
in
call
test
fwait
mov
add
pop
out
dec
and
add
add
pop
xor
inc
add
xor
add
add
and
add
mov
push
fsubrs
dec
into
add
pop
add
das
jecxz
jne
lret
dec
xlat
shlb
jmp
or
mov
adc
add
sbb
or
jecxz
ss
add
mov
cli
rcrb
aas
pop
and
jbe
adc
add
add
add
in
lods
and
clc
push
add
add
mov
mov
push
lods
and
dec
fwait
lret
add
ja
ret
jg
repnz
pop
mov
add
cld
add
add
inc
add
xchg
fs
into
jle
pop
add
adc
add
divb
icebp
sub
fidivl
sbb
repz
and
add
and
xor
add
aad
inc
xchg
cmp
push
movsb
sarl
in
outsl
add
add
jnp
arpl
inc
add
jmp
leave
cmp
rclb
and
or
repz
jns
pop
add
mov
lcall
mov
rcrb
stos
lods
push
add
insl
pop
insb
add
add
movsl
inc
mov
sbb
mov
xchg
add
adc
add
test
dec
fimull
sbb
jne
pop
add
cmc
cli
sti
movsb
pop
int3
adc
mov
add
bound
imul
add
mov
pop
add
fadds
out
fiaddl
pop
adc
add
add
int
and
add
mov
aam
int
sbb
mov
imulb
cmc
mov
jl
mov
xchg
gs
jns
add
stos
jmp
add
xchg
add
rorl
add
mov
outsl
test
inc
sbb
push
movsb
push
bound
dec
add
jl
out
jbe
push
xlat
or
add
subl
outsb
add
cmp
add
inc
add
adc
jns
add
mov
jb
dec
add
jg
jbe
mov
mov
sub
add
xchg
jnp
out
rcrb
imul
in
inc
add
add
cmp
add
inc
cmp
je
sub
jge
add
xor
add
push
jnp
add
add
xlat
mov
adcb
cmp
stc
inc
daa
jno
xchg
je
in
jl
sti
dec
add
insb
add
dec
cld
shlb
roll
dec
add
or
xchg
incb
xchg
push
cltd
push
jno
add
add
xchg
pop
ret
add
mov
dec
add
add
mov
ja
scas
push
call
add
pusha
add
xchg
push
mov
add
cwtl
lds
dec
add
icebp
mov
std
lods
add
add
xchg
mov
lods
sub
mov
add
negb
cmp
or
xchg
sti
sub
inc
xchg
sbb
sbb
shlb
inc
add
push
int3
or
dec
add
pop
popa
jle
je
ret
pop
add
add
loope
pusha
add
dec
sahf
and
js
pop
mov
mov
cwtl
mov
sub
or
les
add
stc
push
adc
fdivrp
jbe
addb
add
mov
cmp
roll
inc
js
fcomip
icebp
pop
add
sbb
add
mov
or
xchg
dec
add
pop
add
pop
add
mov
add
rcrl
cmp
pop
inc
add
or
mov
std
rolb
and
add
lret
add
idivb
add
fs
add
stos
mov
das
or
add
or
or
mov
xchg
cmp
xchg
cmp
add
lahf
rcl
outsb
add
loop
add
aas
add
xchg
scas
dec
inc
sub
inc
xchg
add
pop
mov
and
add
inc
mov
pop
jns
add
adc
pusha
add
rep
es
add
add
sbb
add
add
inc
add
add
add
add
mov
pop
add
in
dec
mov
xchg
std
cmp
ret
xor
add
add
jbe
fstl
sub
dec
scas
stos
xchg
neg
je
cmp
jp
jne
adc
add
add
add
and
add
mov
shrb
fisubs
add
out
dec
rcrb
leave
mov
xor
sub
pop
add
loopne
popl
sbb
fisttpll
push
add
jo
xchg
int
cmp
add
pusha
add
and
sub
mov
add
adcb
sub
data16
xlat
mov
adc
add
inc
bound
and
shll
sub
mov
movsl
add
mov
xchg
add
scas
mov
fiaddl
loope
lret
add
jns
add
dec
xchg
mov
jnp
js
daa
dec
add
aas
add
fucompp
in
sub
fistps
or
lret
shlb
mov
scas
push
add
cmp
sub
jae
mov
cmp
shr
sbb
add
mov
ror
cmp
push
aaa
ret
add
pop
add
push
add
sbb
sbb
data16
add
add
add
inc
sbb
adc
mov
jno
pop
add
cmp
fdivl
xor
cmpsb
sbb
lods
dec
add
lds
mov
sub
pop
scas
add
nop
cmpsl
mov
inc
add
pop
add
mov
test
add
sub
lods
inc
fwait
add
xchg
add
daa
mov
rolb
adc
xor
sub
cwtl
jmp
fisubl
fstpl
pop
sbb
jmp
lcall
mov
pop
mov
popa
repz
call
lret
sub
and
add
fldl
add
stc
mov
ljmp
xor
add
jp
aaa
mov
xor
in
leave
out
popa
popf
mov
pusha
add
mov
add
sub
mov
clc
test
add
add
push
add
cmp
xchg
cmpsl
mov
mov
jno
data16
add
add
add
pop
aad
ret
push
add
add
add
cmpsb
inc
add
dec
add
add
outsb
add
int3
xor
add
and
add
add
add
add
stc
sub
pop
mov
test
sbb
and
add
std
js
imul
leave
mov
ss
mov
push
enter
inc
add
lea
add
add
add
in
insb
add
xchg
add
sub
jb
push
add
lods
dec
add
popl
jl
cmp
sti
or
sahf
push
add
add
imul
mov
sub
sub
aaa
dec
add
lcall
and
add
enter
test
and
les
rcrl
sbb
es
pop
add
mov
add
lods
fwait
pop
add
cmp
mov
fldcw
mov
hlt
cmc
sub
cmp
or
out
in
mov
xchg
fcoms
addr16
push
add
ja
outsb
add
xchg
in
add
add
add
jno
sbb
mov
in
je
cmp
push
dec
pushf
cmp
xor
add
jle
push
cmpb
push
or
or
lcall
inc
add
seta
xchg
es
add
add
cmp
mov
test
or
outsl
jmp
mov
xchg
add
imul
cmc
popa
jle
mov
pop
data16
cmp
test
xchg
sub
dec
cmp
fwait
comiss
mov
mov
sub
push
add
mov
xchg
cmpsl
stc
dec
mov
adc
xchg
rcrb
push
add
add
aad
jmp
addb
add
add
add
stc
repnz
xchg
inc
fisttps
inc
pusha
add
jg
int3
cmp
stc
inc
add
add
dec
add
bnd
sarb
lea
dec
add
daa
add
inc
sbb
jle
out
mov
add
mov
add
push
mov
and
add
mov
pushl
xor
add
mov
str
lahf
sti
mov
xor
add
sub
notl
lods
add
sub
xor
cltd
push
sti
icebp
add
xchg
add
ss
add
adc
add
mov
xor
add
jg
add
jg
andb
add
lds
das
add
inc
add
or
outsl
add
pop
insl
mov
pop
add
pushf
sahf
or
pusha
add
mov
mov
cwtl
sahf
std
push
jae
imul
nop
or
cli
repz
jne
das
in
mov
jp
imul
add
sub
scas
outsl
dec
out
mov
in
out
cmpsl
add
pop
sub
std
push
add
add
jnp
in
mov
mov
rdpmc
mov
or
cmpsl
fsts
add
and
jne
gs
call
add
mov
add
add
add
add
add
les
ret
cmc
xchg
neg
outsb
add
xchg
cmp
pop
int
cmp
xchg
sub
orl
in
sub
sub
aad
jp
aaa
mov
dec
ret
cld
xchg
aas
mov
adc
add
fwait
loop
loope
cmpb
push
popf
xchg
push
shlb
adc
add
sbb
and
add
xchg
jp
xchg
mov
push
mov
add
pop
cltd
mov
push
add
aad
jl
adc
pop
add
mov
add
add
sbb
lret
jae
mov
lock
into
inc
in
push
xchg
add
je
test
sub
test
add
add
add
add
pop
add
and
lret
add
push
add
adc
mov
movsb
dec
add
imul
mov
pop
add
data16
jb
decb
add
jno
lahf
add
in
xor
add
outsl
pop
into
mov
adc
sbb
das
into
pop
fsubl
add
or
dec
add
jecxz
adc
dec
add
popa
ljmp
mov
xor
mov
mov
add
mov
add
jg
add
mov
add
andb
add
add
daa
push
add
cmpsl
loope
mov
mov
xor
mov
add
add
add
pop
add
xchg
cmp
push
sbb
fcomps
lcall
bound
imul
adc
add
pop
add
hlt
cmpl
loopne
test
cmp
movsb
out
leave
dec
stc
repz
pop
add
add
xchg
mov
inc
add
and
add
jg
testl
add
dec
add
sbb
adc
add
ja
sbb
or
loope
push
cltd
leave
int3
push
int
xchg
add
sbbb
add
bound
fsubl
mov
xorl
testb
add
dec
add
add
cld
cmc
mov
add
add
mov
xchg
std
add
mov
jmp
sub
jecxz
mov
fldlg2
add
add
roll
add
jecxz
add
pop
mov
repz
loope
add
cmp
mov
cltd
xchg
rcrl
in
in
cmpsb
cmpsl
out
lcall
rorl
add
add
add
cwtl
push
add
lahf
add
mov
out
shlb
add
lods
add
lret
push
add
mov
in
mov
add
add
add
fdivp
enter
add
add
gs
sub
loope
js
les
mov
mov
out
push
xor
xor
or
mov
add
sarl
stc
stos
pop
das
jnp
fstpl
fwait
push
add
std
dec
add
jbe
pop
add
push
fst
decl
add
add
jmp
and
xchg
nop
or
add
add
repnz
jge
or
lds
push
add
fadd
adc
add
ljmp
cli
push
cmp
dec
add
add
stos
mov
add
mov
add
inc
add
xchg
cmp
lcall
sarl
lds
adc
sbb
data16
add
cwtl
add
jns
pusha
add
push
add
push
dec
add
mov
mov
add
add
pop
add
testl
add
add
add
sbb
adc
add
testb
mov
outsl
add
mov
pop
dec
aam
add
iret
jg
add
add
ficomps
shll
je
or
add
add
lods
add
icebp
push
push
add
cli
mov
imul
hlt
adc
add
cmp
cmp
sbb
add
add
pop
pop
add
repz
jns
lds
ret
mov
cltd
sub
jmp
mov
stc
pop
jp
xor
push
cmp
adc
bound
lret
jle
pop
lods
in
xor
jg
mov
leave
add
int
ss
add
jnp
fdivrs
pop
mov
pop
and
jp
jp
push
popl
in
ja
add
and
add
fs
out
cmp
add
add
bound
jle
xchg
fcompl
sarb
add
hlt
jns
mov
pop
add
sub
inc
add
add
jbe
pop
xor
stos
lods
shlb
aas
add
movb
xchg
pushf
movsl
sbb
icebp
data16
xchg
xor
mov
inc
fidivrl
jns
sbb
mov
xor
add
popa
add
mov
add
add
mov
filds
push
xchg
add
leave
adc
aad
cmp
mov
push
add
add
mov
mov
cwtl
dec
add
sub
ret
mov
imul
aaa
data16
xor
add
add
mov
add
dec
and
mov
or
pop
add
add
add
ljmp
push
add
loopne
jo
xchg
push
add
add
cmpsb
in
stos
fimuls
and
pusha
add
add
pop
sahf
sub
jl
in
arpl
add
mov
fwait
sbb
and
add
inc
add
add
andl
cltd
out
mov
lock
scas
mov
subl
mov
into
aaa
inc
add
sub
mov
bsr
jnp
ss
insl
mov
or
cmc
loopne
or
pop
and
add
xor
add
testb
jno
add
xchg
cmp
fbld
insb
add
jno
shrb
inc
int
add
rcll
fldl
and
add
or
xchg
aas
sbbl
fdivr
mov
add
jecxz
add
push
das
pop
add
cmpsl
dec
add
cli
add
add
lcall
in
push
add
test
mov
nop
add
add
jge
push
add
movsl
in
scas
jb
dec
sub
add
lret
add
mov
ja
dec
lcall
rclb
ret
out
aaa
addl
inc
add
add
add
jl
dec
add
push
pop
flds
stos
icebp
outsl
enter
xchg
stos
ljmp
gs
add
inc
adc
add
ret
push
add
fwait
mov
in
aad
push
cmp
aad
das
mov
add
shll
pop
add
pop
arpl
jle
fists
lods
insl
mov
dec
add
in
inc
inc
fsubl
add
xor
add
jb
rcrb
in
stos
sbb
test
jae
xchg
daa
adc
and
pop
add
sbb
mov
mov
xchg
jo
mov
lea
push
cld
cmc
aad
mov
popa
std
pop
add
and
xor
add
ljmp
add
jno
sahf
nop
dec
rcll
popa
mov
mov
out
or
cmp
jle
outsb
add
sbb
jmp
lds
shrb
cmp
cmp
lods
sub
adc
or
mov
jg
shll
add
lods
xchg
mov
fsubl
dec
sbb
lea
in
push
jae
add
add
add
add
shlb
daa
bound
or
in
outsl
sti
push
shrl
add
add
sahf
daa
cli
add
add
mov
stos
add
aaa
mov
inc
add
add
in
add
out
and
push
and
add
add
adc
xchg
and
add
loope
jnp
das
ja
xchg
add
pop
pop
add
je
aaa
das
add
mov
in
stos
outsl
push
pop
add
push
add
fildl
add
sbb
iret
add
sub
int
add
mov
xor
add
out
cli
adcl
mov
insl
mov
push
mov
jecxz
data16
mov
mov
or
xlat
pop
adc
dec
add
add
push
add
rcll
push
inc
add
mov
mov
mov
add
add
xor
add
lock
add
add
add
movsb
jo
adc
add
inc
jl
nop
mov
add
andb
cltd
pop
add
xchg
add
cmp
push
int
cwtl
movsb
cmp
movsb
add
test
mov
std
lds
xor
add
sub
loope
jns
sub
mov
lds
mov
inc
adc
add
push
add
fnsave
pusha
add
inc
add
inc
add
dec
add
or
pop
popf
push
jb
cmp
pop
enter
dec
add
jge
and
add
mov
xchg
fnsave
lock
rcrb
mov
mov
add
add
add
dec
add
loop
das
incb
add
pop
add
insb
add
add
sbb
pop
in
push
outsb
add
decb
add
add
add
test
orb
outsb
add
jae
inc
xchg
adc
inc
xor
add
add
das
adc
mov
xchg
jo
enter
les
shlb
add
mov
jb
int
insl
mov
xor
add
or
jp
jno
xchg
out
dec
add
add
fadds
push
movsb
or
and
add
out
mov
add
mov
cld
shlb
add
je
sbb
sub
mov
add
add
push
mov
mov
inc
add
or
and
fimuls
add
incl
pop
lea
add
insl
add
outsb
add
add
pop
sbb
loopne
pop
lods
inc
and
add
mov
add
stc
push
fdivrl
outsb
add
sbb
add
add
pop
inc
add
mov
mov
rclb
cmp
cmp
out
xchg
mov
sbb
test
dec
cld
cmpsb
jmp
cmc
mov
lahf
mov
mov
jl
fs
rolb
add
fnsave
addb
sbb
pop
add
pop
cwtl
cmp
add
fimull
pop
mov
frstor
cmc
lret
xchg
repnz
add
stc
add
inc
add
add
arpl
add
clc
stos
test
lods
vpshad
push
add
cmp
call
mov
jmp
sub
pop
add
and
add
add
sub
cwtl
push
mov
pop
add
cmp
sub
xor
add
add
inc
add
gs
mov
mov
sub
jne
add
add
mov
bound
jl
and
mov
ret
imull
add
mov
lds
add
pop
add
xchg
ret
sbb
push
pusha
add
cli
add
or
rclb
push
add
xchg
add
add
add
or
add
pop
add
loop
pop
popa
imul
add
mov
add
out
and
add
rclb
mov
pop
repz
psrlq
add
push
xor
in
sti
mov
into
les
xor
add
hlt
leave
and
add
pop
add
lahf
addb
fcomps
add
add
and
sbb
push
and
cmc
push
sbb
scas
adc
add
push
mov
or
out
dec
add
xorl
mov
ljmp
aad
jg
fisubrl
pop
add
cwtl
add
add
frstor
insl
push
cmpsl
data16
xor
add
cmp
imul
in
add
std
add
add
add
jmp
xchg
mov
push
add
add
ss
icebp
sub
test
mov
test
sub
mov
push
jo
push
hlt
add
rolb
sub
and
add
addb
sbb
movb
push
cltd
add
sbb
add
push
pushf
add
cmc
mov
nop
int3
sbbl
push
movsl
add
mov
inc
mov
jge
xchg
daa
jmp
jmp
add
popa
add
add
jecxz
adc
adc
aas
mov
add
add
inc
add
add
add
and
and
data16
mov
clc
test
inc
push
add
pop
add
cld
add
inc
mov
or
pop
imul
cmp
sbb
jge
js
lods
imul
mov
rcrb
stos
push
add
daa
mov
jecxz
add
pop
testl
xchg
pop
add
mov
hlt
pop
pop
pop
add
add
jo
xchg
jle
or
mov
out
aad
push
xchg
rcrl
faddl
cmp
aas
mov
add
or
out
mov
add
mov
notb
adc
mov
outsb
add
pusha
add
cmp
dec
fsts
add
mov
roll
push
and
add
pop
add
ljmp
add
sbb
xor
rclb
in
add
xor
jle
inc
js
or
test
add
add
pop
add
cmp
add
add
mov
testb
sbb
sub
mov
cmp
out
inc
or
subb
inc
add
add
cli
add
movsl
jecxz
pusha
add
aaa
loope
pop
mov
das
popf
pop
ja
mov
mov
ret
mov
inc
add
and
or
xchg
add
xchg
inc
adc
add
mov
jae
pop
add
cmp
rolb
xchg
add
push
cli
sub
popa
cli
sub
testl
and
dec
sub
int
cmp
repnz
add
mov
add
push
outsl
pop
das
add
add
or
dec
jmp
xor
add
jb
adc
xchg
sub
cld
mov
lock
add
jmp
adc
add
sub
push
add
mov
add
mov
add
aam
lcall
mov
jb
cmp
xchg
adc
je
andb
xor
mov
rcrl
sbb
jl
jbe
pop
or
lret
in
xchg
test
mov
xchg
incb
sub
push
push
add
ret
sbb
add
dec
add
dec
add
push
xchg
mov
push
xchg
sbb
mov
sti
add
fwait
subl
movsb
daa
xchg
add
add
xor
mov
add
add
push
inc
add
adc
add
push
xchg
add
mov
in
push
add
roll
cmp
insb
add
cmp
lea
dec
sbbb
inc
add
add
mov
mov
or
icebp
test
mov
xchg
add
add
aaa
dec
add
inc
aas
insb
add
imul
pop
add
subl
add
mov
lock
pusha
add
mov
aad
test
add
add
push
loope
iret
mov
pop
addb
jno
sti
mov
inc
add
movsl
repz
stc
lock
push
add
add
mov
into
and
add
loop
and
and
lods
pop
add
mov
add
or
add
scas
mov
dec
je
add
add
repz
mov
gs
xchg
and
add
add
add
rolb
mov
cmpsb
lahf
imul
push
lods
add
movsl
push
lahf
icebp
testb
add
inc
add
add
aam
xor
add
add
add
sub
popf
cwtl
andl
add
lahf
add
inc
add
add
add
add
out
cmpsb
jns
add
xchg
nop
jecxz
imul
add
mov
xchg
add
sbb
mov
or
sub
push
out
repnz
adc
add
pusha
add
divl
jbe
shll
imull
dec
jge
add
addl
add
add
push
or
test
add
inc
add
push
add
or
and
fs
sahf
xor
add
add
pop
add
out
lcall
outsl
xchg
sar
xchg
call
enter
das
sti
pop
or
imul
add
mov
xchg
icebp
mov
jno
pop
rolb
lcall
ljmp
xor
dec
fldenv
dec
add
push
lret
pop
aas
mov
push
dec
add
cmp
or
add
adc
add
sar
xor
test
outsl
xchg
shrl
in
mov
add
sub
bound
cmpsl
push
and
rclb
sub
sti
add
add
push
add
popa
ja
add
aas
jp
xor
add
loopne
add
add
xor
add
add
sub
adc
add
jmp
pop
jl
xchg
or
in
ss
sub
add
clc
add
addl
add
add
add
movsb
sarb
push
add
mov
add
sub
add
repz
sbb
add
sub
fists
jbe
in
call
jns
shrl
add
add
ja
rcrl
add
roll
shrb
add
add
es
addr16
add
adc
rorb
add
lahf
int3
nop
pop
add
loop
outsl
arpl
add
sbb
test
inc
or
jbe
stc
jge
loope
fcompl
daa
sbb
mov
dec
test
les
rcr
add
add
push
lcall
add
loope
sahf
daa
out
jge
call
mov
mov
mov
jae
loop
add
inc
add
pop
add
into
pop
mov
and
add
add
add
add
jo
test
adc
sub
bound
repnz
add
fnstsw
add
jno
add
ret
xchg
ret
stos
mov
into
pushf
sub
inc
or
add
mov
arpl
jl
push
and
scas
aaa
cmp
sbb
add
rcrb
add
mov
and
add
mov
inc
add
lret
inc
add
xor
add
gs
pop
add
add
add
mov
jo
lods
lea
stos
incb
inc
mov
add
add
aas
pand
or
js
xchg
das
pop
sub
jle
loopne
push
push
dec
fmull
mov
xchg
sbb
inc
add
adc
mov
cmc
add
add
movl
xorl
mov
jb
sub
pop
add
push
hlt
nop
leave
rolb
add
fsubr
jne
mov
dec
add
push
add
xlat
jmp
push
test
mov
add
pop
lods
add
cmp
jl
imul
aam
scas
divb
out
adc
push
xchg
add
sub
aam
pusha
add
and
add
jmp
ret
fstpt
and
add
fldenv
scas
add
add
add
mov
push
add
arpl
in
add
add
add
adc
add
outsl
mov
xor
rclb
insl
jne
jo
sbb
popf
add
pop
xchg
mov
sub
mov
add
ficoms
mov
mov
pop
cmpsl
add
int
cmpsb
jne
dec
aad
add
mov
aad
mov
jg
sahf
sbb
sbb
and
add
mov
or
or
inc
arpl
loop
dec
mov
leave
ret
push
add
add
and
pop
test
add
add
add
jae
lcall
dec
xchg
add
out
add
and
add
add
cmp
add
rcl
add
jle
std
into
jmp
add
sub
popf
cmp
jbe
fucomip
add
add
cmp
jmp
notl
add
sub
mov
cmc
lahf
xor
xorl
fisttpl
shlb
mov
lret
pop
add
lcall
add
xchg
add
inc
dec
mov
testb
push
add
push
jg
xchg
pop
cld
outsl
jge
loope
add
push
int
mov
xlat
mov
or
ljmp
arpl
xor
pop
mov
ficoms
jae
jno
add
inc
mov
add
pop
adc
add
loopne
add
in
push
add
and
add
xor
add
leave
push
add
add
add
mov
add
mov
ja
mov
adc
xchg
push
add
stc
jecxz
inc
add
push
add
lahf
mov
movb
add
pop
add
jle
lods
rorb
jmp
mov
test
mov
cmp
add
sub
cmc
out
mov
add
inc
jp
xchg
and
add
ret
add
leave
cmc
lcall
cli
cmpsb
or
imul
sub
bound
push
add
sbb
cmc
cltd
std
xor
add
pop
ja
add
mov
sbb
fstl
fistps
adc
add
and
insl
aam
pop
rcr
pop
add
negb
mull
or
in
sbb
add
add
andl
push
jge
push
das
add
mov
xor
add
mov
sub
leave
stos
cmpsl
pop
add
xchg
push
in
add
aas
add
or
loopne
xor
fstpl
add
push
add
sub
xchg
jecxz
and
pop
add
popa
outsb
add
shrb
sti
cwtl
mov
add
pop
add
push
jo
mov
jbe
mov
lods
pop
add
push
inc
add
sarl
sub
add
add
add
mov
add
mov
push
add
inc
add
insb
add
add
add
shr
push
scas
ficompl
scas
pop
sub
dec
add
loope
add
dec
add
add
sub
lcall
mov
and
out
stos
aad
cmpsl
aad
add
or
add
aad
pop
add
fwait
add
push
add
xor
sahf
mov
insb
add
incl
mov
insl
mov
add
sub
pop
add
add
data16
xchg
add
sub
add
cwtl
inc
add
gs
aam
add
clc
jbe
jle
cld
and
rol
add
stc
inc
add
lcall
movsb
int
imul
inc
add
and
mov
movsl
testl
add
add
fdivl
lock
inc
jns
jo
push
pop
add
outsl
int3
mov
add
add
add
mov
test
enter
leave
add
shlb
add
pop
sub
mov
and
add
aaa
dec
add
adc
add
sub
and
add
jg
xor
mov
add
xchg
or
xor
add
lret
inc
pop
ljmp
lret
cli
jmp
add
call
lahf
add
xchg
cmp
push
add
enter
push
loopne
popf
or
or
fidivrs
stos
mov
mov
mov
out
add
add
adc
lds
fwait
mov
cmc
mov
jg
cmp
test
mov
add
insb
add
cmc
or
mov
in
cld
xchg
scas
xchg
cli
jno
add
add
jb
fisttps
dec
jmp
add
iret
or
mov
fstps
mov
sub
add
push
scas
add
cmp
mov
jge
sbb
mov
sub
add
out
add
add
sahf
xor
push
add
scas
rorl
add
in
cli
mov
add
add
xchg
movb
stc
out
lods
lret
fldl
insl
sbb
sub
mov
add
aas
xchg
mov
mov
add
or
or
xorb
loopne
fbld
icebp
add
add
test
dec
sbb
ljmp
pop
push
mov
je
cs
insl
std
adc
xor
add
jp
adc
aam
mov
xor
add
push
pop
icebp
mov
addl
lock
and
add
iret
dec
add
add
in
or
jle
pop
les
jl
iret
add
jae
pop
add
add
lea
add
sbb
add
mov
pop
cwtl
mov
add
insl
pop
add
dec
add
mov
add
cld
add
adc
add
cmp
or
push
add
std
add
fwait
push
add
inc
adc
xor
add
cli
xor
add
cli
inc
add
aad
mov
lret
push
add
add
lock
jae
fadds
xlat
jmp
adc
out
fsubrs
sub
fdivrl
add
sti
add
mov
sub
imul
and
cmpsl
mov
loopne
popf
ret
call
aas
loopne
mov
cli
incl
fldl
dec
add
pop
pushf
add
lods
repnz
addr16
mov
cmpsl
jbe
mov
loopne
repz
sti
aaa
mov
dec
add
add
xor
add
cmpsl
out
cmc
or
rcrl
incl
ret
add
add
push
add
xchg
cwtl
lahf
xchg
insl
or
inc
add
ljmp
and
add
add
add
add
arpl
xchg
xchg
inc
test
mov
or
push
jge
jns
pop
add
roll
or
add
add
push
cmp
xor
xor
movsb
and
add
out
jl
pop
rolb
pushf
enter
lock
or
lock
cmc
and
add
pushf
je
sub
cmpsl
dec
xchg
mov
and
insl
fstpt
sbb
insb
add
lret
push
push
add
mov
mov
gs
push
add
mov
aaa
ltr
js
xorl
add
dec
add
xor
add
mov
mov
add
fistl
sub
jle
enter
add
add
ret
sub
or
les
mov
faddl
xchg
xchg
add
insl
jecxz
jp
sub
lock
data16
in
lret
push
add
add
push
add
add
cmpsl
dec
inc
add
xor
add
and
add
and
add
add
dec
add
xchg
xor
hlt
pop
add
cld
xor
testb
xor
jb
mov
add
inc
add
sub
add
add
mov
inc
adc
fistpl
jge
add
daa
pop
add
sub
jne
arpl
outsl
fildl
add
fildl
sbb
push
data16
loope
incb
inc
add
mov
loope
push
add
out
push
cmp
repz
add
lcall
sub
add
jae
pop
jecxz
sbb
or
out
sub
int3
push
inc
add
jb
leave
mov
and
testb
pop
add
rcrb
push
mov
xchg
add
add
add
lret
mov
and
or
add
add
add
iret
in
push
stc
add
lahf
add
mov
sub
push
add
mov
and
add
add
cmp
push
add
nop
mov
or
push
in
sarl
add
jmp
add
lea
sti
popl
adc
jno
nop
jge
push
arpl
test
mov
xchg
cwtl
xchg
mov
int
add
mov
pop
or
sub
mov
lods
int
push
sti
add
add
mov
inc
add
sub
pop
fcmovb
add
add
test
test
inc
pop
loope
inc
mov
add
pusha
add
in
aas
and
scas
pop
pusha
add
movsb
movsl
shl
add
fimull
push
mov
es
add
js
dec
cmovnp
addb
outsl
or
cmp
js
mov
add
add
push
add
in
cmp
adc
add
push
add
add
inc
add
push
add
mov
rorl
push
add
add
add
add
jnp
inc
add
mov
cli
pop
cmp
adc
lds
mov
adc
add
imul
je
lcall
cs
orb
fwait
xor
jbe
xchg
icebp
inc
add
adc
add
add
jg
dec
sarl
aad
push
add
cmpl
or
or
insl
inc
add
imul
mov
fld
scas
sbb
subb
add
icebp
add
pop
add
arpl
or
inc
popa
xchg
jle
pop
cmc
add
fwait
add
add
sub
ljmp
roll
xor
add
xchg
lods
in
scas
jno
and
add
add
xor
add
jl
adcl
test
lds
pop
cmp
loope
push
add
out
lods
and
and
shr
pop
add
loopne
testb
push
sub
popf
and
mov
popl
movl
movsl
xchg
sbb
add
add
mov
mov
inc
add
and
cltd
js
adc
xchg
add
mov
add
add
adc
add
cmp
movsl
add
lock
pop
add
jecxz
add
stos
std
xchg
cmp
xchg
jb
sti
dec
add
mov
pushf
out
lahf
sbb
add
mov
add
push
inc
mov
sahf
inc
add
js
in
daa
push
add
cmp
pop
cmpb
mov
icebp
add
cwtl
dec
dec
add
shll
lock
adcl
add
add
mov
lea
add
jns
adc
add
xchg
add
push
mov
dec
add
add
add
xchg
or
andb
and
repnz
add
mov
xchg
add
sbb
xchg
loopne
inc
add
xchg
push
push
mov
add
call
cmp
lock
add
mov
rcrb
jge
push
add
xor
and
push
add
add
les
and
dec
add
add
add
sar
push
jnp
and
lret
push
fcompl
scas
sahf
repz
int
add
pop
add
dec
add
fs
ljmp
push
or
ljmp
stos
add
outsl
jmp
xor
mov
pop
add
cwtl
xor
add
int
arpl
gs
or
loope
add
add
mov
mov
cmp
std
sbb
ds
sub
add
lock
int3
xlat
xor
add
jnp
int
add
cmc
and
int
add
std
mov
add
and
push
mov
add
push
add
add
stos
add
adc
add
pop
call
add
jno
add
sbb
mov
add
pusha
add
add
add
faddl
add
pushf
imul
add
dec
fildl
add
or
sahf
xor
add
add
dec
repz
jecxz
stos
stos
jae
lret
out
mov
xrelease
addl
mull
add
jp
cmp
or
cli
xor
add
xchg
les
mov
jae
add
shlb
fldt
stc
in
add
sbb
pop
push
mov
jae
mov
dec
add
jno
add
daa
into
add
add
mov
and
inc
jne
in
pop
add
cli
add
popa
pop
add
cmp
ja
add
push
push
add
repz
cmpsb
jno
xchg
sub
sbb
mov
push
lahf
sbb
loope
adcl
sub
fstps
pushf
out
inc
xor
push
add
jl
adc
adc
ss
add
add
add
fistpll
out
jmp
outsb
add
sbb
insb
add
fcmovu
mov
dec
add
or
aas
test
sub
lcall
add
mov
lcall
es
dec
dec
out
lcall
pop
add
mov
add
inc
add
stc
aam
add
dec
mov
cmc
sbb
or
imul
clc
sub
lds
bound
pop
add
arpl
and
dec
pop
mov
ds
aad
inc
cmp
insl
inc
xchg
jae
fildl
add
mov
repz
adc
sbb
jne
adc
pop
add
lahf
mov
jno
test
icebp
loope
stos
inc
mov
add
ja
dec
sbb
xor
add
fsubp
adc
add
xchg
add
in
add
push
add
or
add
nop
or
lods
jns
sub
hlt
jl
pop
add
add
cs
cmp
sar
sarb
add
lds
sbb
and
add
push
add
cmp
push
add
testl
add
inc
add
cwtl
add
inc
add
iret
add
cmp
orb
add
xchg
push
add
rcl
sbb
ret
gs
sbb
push
add
sbb
in
ljmp
pop
jecxz
adc
xchg
pop
or
movsl
out
jmp
aas
int3
inc
add
add
ja
mov
pop
sub
xchg
popf
lret
cld
mov
subb
mov
dec
ds
push
cmp
add
sti
aaa
outsl
add
push
clc
or
add
out
xor
lret
add
add
add
lods
shrl
inc
add
test
insl
or
icebp
into
pusha
add
outsl
xchg
pop
add
jle
sbb
pop
add
add
lods
add
sbb
out
lock
pop
mov
add
push
loopne
out
popa
daa
das
add
ret
cmpsb
lcall
or
icebp
sbb
insb
add
mov
mov
add
popa
nop
add
add
nop
mov
inc
add
and
sahf
pop
add
popl
adc
add
sahf
add
mov
add
ret
loope
push
add
rorb
rolb
or
insb
add
subl
ret
add
add
cmp
add
dec
mov
xchg
push
sub
and
add
add
in
add
add
add
add
push
add
and
icebp
fsubrp
xor
adc
sbb
leave
push
add
insb
add
mov
in
mov
int3
in
cmp
add
mov
adc
mov
mov
mov
pop
add
insl
mov
xchg
add
cmp
stc
rcrl
jecxz
jmp
add
add
dec
out
inc
push
add
out
mov
cmp
call
add
int3
add
push
pop
add
out
pop
add
sub
xchg
dec
roll
and
mov
add
mov
scas
pop
bound
mov
popa
dec
add
xor
add
mov
sub
pop
xchg
add
ret
add
and
mov
mov
fldl
jg
add
add
sbb
jmp
enter
inc
and
push
int
jge
test
pop
add
add
pop
cmp
mov
pop
mov
add
push
repz
push
add
add
dec
xchg
push
sub
sar
clc
pop
sub
and
add
mov
adc
mov
push
add
lahf
or
add
add
push
add
dec
add
fldenv
add
dec
add
mov
stos
aam
add
out
loop
ret
mov
add
popa
jg
inc
jns
add
cmpl
rorb
mov
popf
cltd
adc
add
mov
add
push
cmp
mov
subl
add
aas
clc
xchg
lock
or
mov
adc
add
mov
add
scas
bound
push
add
xchg
mov
add
add
lcall
add
adc
push
add
inc
add
sub
cmpb
add
push
mov
in
jb
stc
data16
fnstcw
ltr
mov
mov
add
movb
loope
shl
add
fwait
sbb
stos
sbb
inc
or
mov
mov
dec
add
dec
add
pop
add
push
scas
popl
push
insb
add
add
jbe
dec
add
movhps
add
mov
stos
out
push
sub
mov
aad
aam
add
xchg
mov
cmc
out
pop
scas
jecxz
add
add
adc
add
pop
add
repz
sti
or
sbb
test
rcrl
ljmp
add
add
add
pop
add
inc
hlt
mov
sub
lret
xchg
sub
ds
inc
add
add
negl
ret
add
add
add
adc
add
insb
add
jb
sbb
sahf
sbb
pop
ljmp
adcl
pop
add
and
fstps
xor
sbb
gs
inc
add
sub
sbbl
call
jecxz
mov
sub
add
jmp
xchg
jl
push
add
gs
popa
add
cmp
mov
mov
in
xor
sub
cld
jmp
roll
add
pop
add
xor
add
sti
je
jl
mov
pop
sbb
adc
add
enter
cwtl
ret
and
dec
add
xchg
int3
lds
jne
mov
mov
loop
mov
cmp
sbb
add
jmp
xchg
mov
test
jb
sub
out
add
mov
cwtl
add
les
adc
add
add
add
push
add
lahf
add
jp
jle
mov
sar
add
pop
add
jae
out
dec
cmc
inc
add
aaa
jno
pop
movsb
add
push
ret
add
jno
add
add
cmp
xchg
or
sbb
add
aam
add
stos
test
add
cld
imulb
mov
add
fistl
sub
pusha
add
and
adc
in
cmp
movsl
ljmp
inc
add
imul
add
outsl
mov
sahf
lea
filds
lcall
add
out
add
jbe
sbb
add
imul
and
add
dec
add
and
add
xchg
inc
add
dec
aaa
and
add
add
xchg
jge
fs
fcompl
add
test
sbbb
or
push
add
mov
fildl
xchg
in
flds
dec
dec
add
pop
and
dec
rclb
sti
sbb
leave
mov
mov
movb
sahf
sarl
add
testb
and
adc
cmp
iret
add
add
movb
fmull
jns
hlt
sbb
fldt
pop
add
add
add
add
jo
sbb
and
out
lea
add
or
cli
dec
add
cmpsl
movswl
add
mov
add
mov
add
sub
jmp
add
popf
add
add
inc
add
es
add
and
push
add
sahf
insb
add
test
mov
add
sbb
aas
cmpsb
jns
push
insb
add
add
add
push
add
std
add
bound
and
loope
mov
jg
fnsave
fldl
push
xchg
cmc
pop
aas
jl
jne
lods
mov
ljmp
and
add
add
add
xor
mov
mov
jo
andb
add
inc
add
iret
movsb
daa
sbb
push
xor
jne
fidivs
jmp
imul
inc
xor
add
sub
ljmp
pop
pusha
add
fidivrs
jae
sub
add
mov
or
add
mov
rorb
ss
add
add
jecxz
loop
sbb
and
add
add
enter
out
jbe
sub
xchg
pop
add
pusha
add
add
std
lds
jp
insb
add
add
xchg
fwait
add
add
mov
push
add
push
mov
add
add
div
mov
adc
add
scas
stos
jbe
xor
or
icebp
jl
mov
clc
fsubl
xchg
add
pusha
add
inc
add
mov
lods
sti
lods
pop
add
pop
add
stos
push
add
sbb
cwtl
jns
imul
add
mov
jae
xchg
mov
push
add
add
lods
sbb
hlt
pop
popa
xchg
add
add
jmp
repz
stos
jne
xor
add
cli
add
add
fidivrl
out
arpl
lcall
cmpsl
jmp
mov
xchg
fdivl
cmp
in
add
add
andb
add
test
add
test
data16
pop
xchg
das
adc
pop
or
inc
rol
call
repz
push
add
inc
add
xchg
lret
or
and
fwait
add
mov
add
or
loope
push
test
or
xchg
out
in
cmp
test
xchg
loop
inc
imul
cld
inc
shlb
out
and
add
adc
addr16
adc
or
orb
jge
add
out
add
stc
loop
add
add
xor
add
adc
add
sub
jns
int3
xlat
inc
add
mov
add
mov
addb
data16
js
sbb
push
aas
xor
add
ficompl
fimull
add
lds
out
dec
cmp
filds
loope
add
mov
add
lds
mov
notl
rorl
add
mov
mov
add
and
add
das
stc
mov
mov
popf
push
cmp
xchg
mov
test
test
cmp
clc
and
add
add
ret
shlb
add
xlat
push
add
add
adc
pop
add
add
fadds
ficompl
add
scas
and
mov
adc
pop
test
clc
rcll
add
lcall
add
add
add
mov
add
add
push
mov
out
lret
mov
cmp
sbb
add
add
jns
inc
ljmp
div
in
out
fimull
jns
add
ljmp
add
mov
cmp
add
cmp
data16
adc
add
lret
or
jns
filds
and
jbe
jne
cwtl
mov
int3
fldcw
jne
aad
sbb
cmp
add
add
add
pop
add
add
jo
stos
mull
add
pop
add
psubw
add
int3
gs
dec
shr
and
xchg
inc
add
sub
jp
xchg
mov
frstor
cmp
cli
xchg
xchg
add
push
add
fistl
cld
add
int
les
pop
and
add
mov
add
xorb
jbe
ss
add
add
mov
add
iret
and
into
mov
jbe
jle
in
jg
jae
addl
das
push
jnp
enter
add
add
adc
pop
add
sub
int
push
add
add
add
add
sbb
pop
mov
scas
add
sarl
repz
add
sahf
xchg
jo
adc
add
xchg
mov
lcall
add
les
add
dec
je
decl
out
je
mov
add
push
aad
add
add
add
jg
add
lock
add
add
lcall
rcrb
outsl
add
cmp
lods
sbb
add
faddl
dec
add
xor
add
add
add
add
dec
add
sti
mov
add
hlt
mov
lods
push
add
jmp
je
rcr
add
add
xor
add
cmpsl
movsl
aaa
lret
daa
push
add
add
cmc
adc
filds
bound
mov
movb
dec
push
incb
xlat
jb
scas
push
add
or
mov
inc
scas
jg
add
sub
adc
push
cltd
add
add
in
test
lret
hlt
stc
inc
add
add
push
add
mov
pop
pushf
add
add
xchg
out
add
enter
add
xchg
decl
outsb
add
pop
add
test
stos
ret
mov
or
leave
scas
inc
imul
or
add
or
or
lret
mov
lret
inc
add
mov
add
add
push
add
out
fisttpl
add
pop
add
inc
ret
mov
je
and
xchg
cmp
jbe
gs
xor
add
mov
ret
enter
shll
ret
inc
add
or
bound
adc
sub
jle
or
add
pop
add
lds
out
add
mov
add
pop
add
sbb
inc
add
inc
add
in
push
xchg
add
inc
add
ret
add
lret
mov
add
add
push
and
add
enter
pushf
imull
movsb
gs
add
testb
arpl
jo
stos
push
xchg
add
mov
bound
xor
add
mov
xchg
jae
adc
jnp
lods
and
add
mov
sub
movsb
cltd
jmp
xlat
out
out
add
sbb
cmpsb
pop
add
jle
fucomip
repz
dec
add
fiadds
add
stc
or
add
int3
add
add
aaa
jle
push
testl
xor
add
mov
fisubs
add
add
repz
pop
add
das
lea
aas
add
pop
addl
sbb
xor
jne
cmp
outsb
add
push
add
sbb
lds
bound
scas
call
rolb
dec
add
lret
outsb
add
shlb
sar
sub
inc
add
add
ja
add
lods
gs
or
inc
or
xchg
jp
adc
into
add
insl
cmovbe
dec
leave
hlt
mov
insb
add
push
add
and
lret
sbb
xchg
hlt
adcb
add
add
jecxz
mov
add
add
imul
or
out
int
mov
dec
pop
add
iret
push
sub
inc
add
add
jne
jl
pop
mov
or
jb
cmp
outsb
add
cmp
jmp
sbb
and
add
daa
fwait
add
bound
mov
add
inc
lcall
sti
dec
aas
test
les
jg
mov
push
add
subl
push
add
fcoms
xor
jg
pushf
add
add
mov
fwait
mov
addb
enter
or
mov
mov
lret
add
fcomps
sub
in
hlt
jecxz
and
ret
lret
cld
inc
incl
mov
mov
and
out
add
push
or
insl
les
add
sbb
sbb
enter
sub
inc
add
inc
add
rorl
or
fldcw
add
jge
mov
aas
lret
add
add
add
add
cmp
cmpsl
dec
cwtl
pop
push
add
pop
cld
in
data16
add
sbb
push
push
add
adc
add
xor
add
in
push
xor
add
icebp
push
add
mov
add
mov
xchg
jbe
in
add
clc
jge
dec
add
add
mov
sarl
add
dec
in
aam
mov
scas
fists
push
ret
add
push
add
push
adc
add
bound
mov
movsl
pusha
add
fisubrs
mov
sti
repnz
add
and
jnp
dec
add
push
add
adc
xchg
dec
add
inc
add
and
add
dec
mov
sahf
stc
push
add
add
add
lret
pop
dec
xchg
pop
add
inc
mov
test
add
push
add
shll
shrl
into
add
add
cmpsl
pop
push
add
add
add
xchg
add
mov
pop
mov
add
add
mov
andl
fstl
aam
cmc
add
and
add
add
add
dec
cltd
mov
xor
add
lret
push
iret
add
addl
add
add
add
add
add
loope
sub
add
or
lock
lahf
iret
mov
or
jge
testl
inc
add
inc
add
add
in
inc
add
iret
add
mov
js
jle
ss
add
dec
add
push
pop
add
lret
ror
jns
add
add
clc
stc
andb
bound
sbb
ret
xchg
fsub
loope
mul
out
mov
and
pop
add
add
jmp
add
mov
add
ds
inc
add
add
add
lahf
xlat
cmp
das
xchg
outsb
add
cmpsl
add
add
add
icebp
lock
mov
cmp
xor
add
dec
lods
stc
inc
add
dec
add
jbe
repnz
add
outsl
sbb
sbb
arpl
add
bound
psubw
pop
pop
call
sub
add
add
bound
mov
or
add
jmp
loop
add
ja
pop
loopne
sub
xlat
add
adc
sub
push
xchg
add
movsl
add
sub
idivb
out
dec
sbb
insb
add
enter
and
add
mulb
inc
and
cwtl
jmp
jp
fwait
push
add
add
icebp
dec
add
sbb
shlb
add
data16
cli
add
add
daa
popa
add
adc
and
add
inc
add
xchg
add
fcomps
add
jp
mov
or
cltd
xchg
daa
aam
push
add
add
cltd
sbb
jne
int
jge
jmp
mov
add
lea
cmp
or
xor
add
sub
add
xor
add
inc
or
dec
fldenv
push
jne
outsl
in
add
js
fimull
mov
or
push
add
mov
add
xor
sbb
mov
xchg
add
mov
fst
mov
mov
inc
orb
or
pop
xor
add
in
add
add
add
push
add
sbb
dec
xchg
mov
int
lods
inc
add
fwait
out
lods
sbb
pushf
imul
push
sbb
mov
aad
cli
push
add
rolb
push
add
xlat
mov
add
add
ficompl
add
leave
addl
adc
add
sub
sub
pop
add
lea
add
add
lahf
xor
add
add
add
subb
cmp
les
add
mull
add
xlat
dec
into
insb
add
js
adc
cmc
scas
iret
jmp
aam
add
nop
in
adcb
add
pop
jp
mov
add
jecxz
add
std
add
lret
add
add
add
xchg
mov
faddl
jo
jne
add
mov
add
jge
add
mov
into
lock
xchg
adc
stos
out
pushf
or
jl
sti
push
add
das
fadds
mov
add
add
sub
mov
jnp
inc
add
mov
add
jge
mov
mov
add
fldl
mov
sbb
adc
outsb
add
daa
add
dec
mov
adc
add
sub
mov
mov
sub
clc
bound
into
and
add
mov
add
adc
add
aaa
sub
insl
xchg
dec
add
push
xchg
add
data16
scas
lret
aas
and
xlat
cmp
das
xchg
pop
test
dec
add
add
add
ds
add
ds
push
add
add
mov
sub
imul
mov
add
mov
inc
push
fisubs
add
add
add
add
int
pop
add
pop
jnp
pop
pop
add
xchg
add
or
add
pop
pop
ret
add
mov
repnz
lret
mov
jns
add
mov
add
add
sub
sbb
icebp
cmp
pop
add
add
mov
add
xor
add
std
add
daa
add
fnstenv
cmpsb
popa
lret
and
add
cmc
add
and
add
add
in
faddp
mov
imul
add
data16
add
add
test
add
add
ret
adc
fmuls
xchg
shl
xchg
add
jle
testl
add
jecxz
mov
add
pusha
add
loopne
ret
add
repnz
into
loopne
mov
xor
add
jle
add
mov
add
or
loope
add
movsb
push
jl
or
out
test
cmp
xor
in
loop
add
add
add
and
add
fldenv
scas
add
sbb
and
add
add
lahf
jae
add
int3
mov
fcoml
add
into
les
ja
xor
add
jmp
add
add
cmp
xchg
cmc
out
pop
sub
add
dec
add
cli
jle
cld
xor
add
sbb
data16
std
aad
add
or
add
add
pop
add
jb
jnp
sbb
jo
mov
repz
inc
add
popa
jp
jmp
divb
cmp
xor
add
xor
sbb
rcrb
divl
push
add
add
add
notb
add
add
mov
add
out
stos
mov
xchg
adc
iret
popa
xchg
inc
loope
addb
add
add
add
stc
xchg
sbb
sarb
add
adc
pushf
imul
inc
add
cmp
test
mov
mov
mov
cwtl
cmp
clc
dec
add
add
add
sub
mov
add
jle
cltd
or
add
outsl
add
inc
add
mov
dec
add
cmp
or
out
dec
add
sub
notl
xchg
add
out
cmpl
or
lods
xchg
mov
call
xchg
mov
mov
dec
test
add
mov
dec
add
xchg
jp
sub
mov
mov
xchg
sbb
mov
jae
push
add
push
add
add
stos
mov
je
mov
incb
add
jb
je
cmc
sahf
bound
sbb
stos
add
xlat
pusha
add
aam
inc
add
addr16
pop
sahf
sbb
inc
add
jb
lock
scas
insl
pop
incl
dec
push
add
push
add
nop
rclb
dec
add
add
lret
add
add
clc
or
lret
pop
add
cmpsb
subl
push
add
pop
add
fldenv
inc
add
push
add
ret
sbb
pop
add
mov
or
lods
imul
pop
test
jmp
int3
jl
inc
inc
add
loop
cmp
outsb
add
pusha
add
and
lods
cwtl
xchg
mov
jge
movl
add
popf
xchg
adc
add
mov
add
fiadds
add
scas
sub
add
pop
add
addb
in
out
jle
mov
test
dec
mov
ja
movl
dec
mov
test
dec
xor
add
inc
sbb
xchg
sbb
out
dec
addb
popl
int
and
add
xchg
lcall
add
outsb
add
dec
add
mov
lock
xor
fcom
in
dec
add
cmc
or
in
movsl
pop
add
jg
mov
add
or
sbbb
sub
js
daa
dec
add
sub
pop
add
add
mov
add
fdivs
add
hlt
fwait
xchg
test
jg
or
les
loope
sub
lock
push
add
inc
scas
add
sub
data16
pop
mov
ret
add
enter
adc
add
mov
lret
add
loopne
add
xor
add
sbb
stos
sub
dec
add
mov
in
push
outsb
add
cmp
test
xlat
mov
mov
ljmp
popf
dec
add
test
out
cmp
mov
lret
cltd
in
add
add
notb
cmp
pop
and
das
cmp
aas
inc
test
xchg
pop
sbb
add
imul
sbb
sbb
lds
push
clc
mov
loope
icebp
enter
movsb
push
add
movsl
add
push
add
add
or
sub
sahf
add
add
imul
add
cmp
push
add
jb
push
movsl
out
adc
add
sbb
les
fimuls
ret
mov
add
roll
mov
arpl
cmp
add
inc
add
jno
iret
jg
mov
popa
pop
add
push
add
push
in
in
jge
in
test
sbb
pop
add
add
add
mov
imul
xchg
add
ret
mov
mov
and
dec
sbb
add
add
insl
sarl
add
xor
add
push
add
stos
cmc
dec
loope
divb
add
clc
das
lahf
repnz
add
xor
add
xor
mov
add
mov
mov
sbb
inc
sbb
or
add
cmc
inc
cmp
pop
dec
add
test
icebp
cwtl
xchg
add
loope
jo
push
add
and
jp
add
adc
fdivr
lock
push
enter
lret
add
mov
add
mov
mov
lds
sbb
add
add
fwait
cltd
mov
jno
add
fistps
add
pusha
add
add
daa
sbb
call
add
add
data16
add
test
nop
cmp
insb
add
xchg
stos
fisttpl
bnd
sub
jnp
add
cmp
into
lcall
repnz
mov
add
sarl
fnsave
stc
test
stos
inc
add
add
jb
inc
add
cwtl
mov
add
add
out
inc
add
push
repz
adc
add
std
add
mov
testb
lcall
stos
adc
add
data16
fcmove
xchg
repnz
pop
pop
add
lcall
mov
sbb
sub
jnp
pop
add
xchg
add
or
mov
popf
add
add
add
fcompl
mov
xor
add
outsl
jae
add
push
cli
push
sub
add
addr16
or
aaa
ljmp
mov
stos
test
loopne
lcall
sbb
xor
jp
sbbb
sarl
in
cwtl
add
sub
ret
adc
cmc
sahf
test
ficompl
lock
add
les
add
push
add
aad
pop
mov
add
mov
popa
jae
arpl
add
add
popf
inc
dec
mov
sub
insb
add
aad
pop
add
aad
cmovl
mov
add
sti
dec
add
clc
jp
sub
ljmp
test
movsl
stc
inc
aam
scas
add
sti
xorps
lock
jb
call
nop
xor
fcoml
pop
add
mov
cmp
enter
xchg
mov
jge
in
jge
scas
sbb
push
add
xchg
add
push
repnz
fistl
dec
add
mov
divl
push
loopne
add
ret
add
nop
sub
iret
cwtl
leave
mov
lock
xchg
sub
adcb
add
sub
jbe
fdivp
adc
add
cmpsb
mov
and
add
add
stc
nop
aad
add
add
aad
add
add
jb
xchg
std
sbb
add
enter
add
dec
add
add
add
mov
mov
aas
inc
add
insb
add
sub
sbbl
int3
loope
add
inc
add
jge
and
add
pop
add
rol
stos
add
inc
add
loope
cld
add
testl
add
pop
add
rcll
push
popf
add
add
add
dec
rolb
add
movsb
ret
iret
out
add
jp
out
add
sub
xor
mov
add
js
iret
pushl
rorb
mov
fwait
push
pusha
add
add
data16
dec
add
or
sbb
out
out
lea
dec
rcrl
fsubr
sbb
rorl
add
mov
aas
xlat
sahf
xchg
and
or
ja
dec
enter
inc
add
jecxz
dec
aam
cmp
pop
add
sbb
ja
add
sbb
mov
xchg
jle
in
inc
sar
or
inc
add
sub
jno
cmp
imul
lret
data16
in
add
sub
jmp
push
add
add
popf
sub
scas
pop
add
sti
push
add
add
pusha
add
pop
fyl2xp1
add
stc
push
cli
add
add
add
int3
or
inc
aad
sbbb
add
and
mov
or
add
bt
scas
andb
add
cmp
mov
jmp
stos
std
push
add
and
das
xor
add
fsubr
pushf
jae
cli
scas
add
push
jl
xor
add
add
add
fs
rcrb
jge
lcall
add
fbstp
mov
repz
xlat
add
add
add
shll
add
mov
mov
stc
lds
pushf
add
add
jge
cmp
or
add
lret
jmp
andl
add
jns
cmp
pop
add
je
fisttpl
mov
and
clc
scas
adc
add
and
inc
add
sub
dec
sub
cmp
mov
add
or
fnstcw
add
andb
add
add
test
std
imul
mov
sub
push
add
sbb
inc
iret
xchg
pop
add
dec
and
add
loop
lret
das
std
jnp
popf
add
add
popf
inc
dec
add
in
xor
add
pop
cmp
dec
sbb
add
add
into
add
cmp
scas
mov
imul
xrelease
dec
push
add
movsl
gs
dec
mov
imul
add
add
out
jne
xchg
add
das
in
pop
add
sbb
bound
mov
add
mov
adc
add
add
fists
push
pop
stos
test
mov
mov
insb
add
imul
pop
cmpsb
add
cmp
ficoml
mov
xor
add
add
test
add
xchg
sbb
pop
aas
add
xchg
and
add
pop
je
jle
lds
add
add
mov
sahf
in
fsave
leave
add
mov
test
mov
sub
adc
enter
ret
neg
inc
add
test
add
imul
or
inc
add
in
mov
mov
xchg
mov
add
ret
xor
mov
lock
pop
sub
ljmp
adc
add
jmp
mulb
mov
cmp
and
add
pop
add
jecxz
push
add
in
out
inc
add
add
sti
in
jb
push
dec
xor
leave
jp
sbb
add
add
out
mov
add
nop
inc
xchg
push
add
push
add
movsl
pop
push
add
add
call
xchg
data16
add
and
push
fdivs
inc
add
cmpsb
dec
out
mov
movsb
add
repnz
test
insb
add
push
add
pop
add
inc
add
test
fcompl
adc
add
imul
inc
loopne
movsb
sbb
dec
add
mov
iret
xor
sbb
dec
xchg
mov
or
jnp
mov
cmp
cmp
mov
mov
mov
add
inc
mov
aas
sti
xchg
inc
mov
add
pop
add
cltd
add
pop
jl
jb
mov
mov
mov
rorb
imul
add
pop
add
add
cmp
lret
cmp
fcomip
and
sub
jno
pop
pusha
add
mov
decl
test
add
pop
push
add
fnstcw
add
xchg
in
sub
and
add
push
add
dec
add
jecxz
mov
mov
or
lods
fidivl
mov
mov
add
sahf
xor
add
xchg
mov
data16
dec
xor
add
pop
xchg
int
sub
sub
xor
add
inc
pop
dec
mov
stos
adc
add
add
mov
in
subb
add
cmp
cmp
add
cli
jo
xorl
jo
movsl
mov
push
add
fadds
cltd
add
data16
lahf
mov
jge
jno
into
rcll
add
shlb
sub
pusha
add
add
mov
add
testl
ret
orl
sbb
sbb
or
movl
jno
add
popa
adc
add
xchg
data16
shrb
out
iret
sti
sub
ja
test
and
sahf
enter
xor
add
pop
imul
shrl
stos
and
fists
les
lods
lods
cwtl
shlb
rcpps
add
call
mov
outsl
add
add
lret
addr16
mov
das
out
adc
add
push
add
xchg
xchg
inc
add
mov
jge
sbb
push
add
or
into
push
push
add
mov
daa
movb
inc
add
add
arpl
sub
out
aaa
js
pop
add
nop
and
add
mov
cmc
mov
pop
lods
test
add
push
add
scas
mov
xchg
add
or
repz
loope
out
dec
push
pop
mov
dec
add
push
adc
inc
add
add
into
add
fiadds
xchg
lcall
add
sub
sub
mov
jo
lock
enter
jg
mov
add
xor
mov
mov
sbb
mov
loopne
add
cmp
addr16
dec
add
pop
aas
shll
add
jnp
pop
xor
inc
or
ljmp
pop
add
hlt
clc
xor
add
dec
add
jge
lods
out
mov
dec
add
mov
add
add
out
cmp
lods
cmp
push
add
aam
dec
inc
add
mov
js
dec
add
stos
inc
in
sbb
sub
scas
adcb
cmp
dec
add
out
cli
xor
add
adc
jo
test
push
sub
cltd
sub
out
pop
add
nop
pop
add
mov
jge
jo
es
add
add
dec
add
cmp
xchg
or
repz
push
add
push
add
add
aam
mov
es
sbb
test
rol
mov
add
cmp
add
mov
aas
push
call
fucomp
adc
outsb
add
and
add
jmp
cwtl
push
add
xchg
outsl
data16
mov
add
and
mov
mov
jge
sub
ret
jl
ret
lret
and
add
mov
inc
add
test
add
mov
xor
negb
test
and
add
and
add
xchg
cwtl
adcb
add
pusha
add
rolb
pop
add
xchg
and
das
pop
cld
add
verw
pop
add
out
add
add
or
xor
repz
fmulp
faddl
sbbb
adcl
push
add
imul
add
push
xor
add
add
add
fucomi
jle
filds
shlb
add
mov
pop
add
icebp
jns
add
sub
icebp
xchg
xchg
test
jne
das
test
jmp
mov
jb
and
add
pop
add
int
jp
push
add
cli
mov
dec
add
lods
test
mov
in
mov
inc
cld
pop
lods
add
lret
push
mov
mov
add
add
aas
loop
pop
flds
add
aaa
jle
mov
cmp
lock
jne
adc
push
add
repnz
add
and
imul
outsl
pop
jp
lret
push
add
add
add
mov
xchg
fnstsw
mov
xor
push
add
call
cmp
push
push
add
repnz
push
insb
add
add
data16
lret
dec
subb
insb
add
add
push
inc
add
mov
adc
add
test
data16
in
nop
aam
js
xor
add
dec
add
test
add
add
nop
leave
fadd
xchg
cmp
dec
add
lods
dec
add
mov
add
add
mov
dec
add
int
mov
pop
add
add
roll
inc
dec
inc
or
mov
pusha
add
fs
divl
es
inc
add
mov
pop
add
xchg
mov
sbb
scas
je
sbbl
or
push
add
mov
jbe
loopne
jnp
add
iret
adc
add
add
xor
add
outsl
jmp
in
aaa
mov
add
add
adc
adc
add
pop
imul
and
xchg
mov
jo
add
cmp
mov
push
add
add
fdivrl
push
add
addl
add
out
inc
add
inc
cmp
mov
xor
add
notl
popf
add
push
and
add
add
and
add
pushf
pop
add
aas
out
mov
dec
add
add
outsl
loop
add
and
test
test
jecxz
popa
mov
mov
add
cmp
movsb
cmp
adc
add
ja
sub
add
add
mov
push
add
and
outsb
add
or
mov
pop
push
mov
fsubs
add
scas
jl
mov
add
test
sbbl
loope
inc
and
add
jl
add
add
aad
test
popf
add
adc
add
add
xchg
xchg
call
mov
movsl
mov
sub
cmc
mov
loop
orb
aad
mov
pop
scas
add
add
jmp
addb
ja
add
or
mov
enter
in
jg
ficompl
jge
test
add
add
popf
pusha
add
test
mov
mov
insl
fsubrp
roll
mov
pushf
mov
inc
scas
sub
negb
mov
xor
add
movsb
mov
popf
and
add
inc
add
xchg
in
ja
test
out
or
xor
xor
jge
push
jae
call
ret
pop
add
mov
push
add
push
daa
cmp
pop
add
insb
add
out
jb
mov
push
add
and
add
negl
cmp
imul
add
cmp
aaa
stc
add
adc
add
imul
xchg
push
add
mov
test
bound
pop
add
add
add
insl
dec
cld
dec
add
bound
out
mov
mov
pop
add
lcall
push
jnp
nop
shlb
add
jbe
ret
rorl
add
rorl
popa
push
in
dec
push
cld
add
pop
pushf
add
xor
loopne
add
xor
das
or
dec
add
inc
mov
adc
lds
mov
add
sub
sbb
push
push
add
insb
add
add
and
add
add
sub
jmp
out
scas
adc
stc
add
out
or
adcl
dec
add
add
out
add
add
add
not
xchg
cwtl
jbe
ror
dec
dec
add
add
and
gs
add
fnstsw
sbb
and
add
add
push
out
and
push
stc
lahf
mov
adc
add
out
inc
add
cmpb
ljmp
add
xchg
jbe
lods
in
sub
repz
push
add
add
int
add
add
cmpsl
int3
xor
add
jno
dec
fidivrs
call
sbb
adcl
add
mov
popa
add
int
mov
orl
add
adc
mov
dec
cmp
xchg
imul
ret
inc
test
imul
ja
add
xchg
add
add
cmpsb
pop
add
sub
and
add
rcrl
add
dec
jmp
repz
lret
add
and
jae
rolb
sub
mov
mov
add
and
fmuls
push
push
mov
sub
xchg
jp
nop
or
add
les
xchg
xchg
xor
add
dec
xor
sbb
lock
dec
add
push
add
jne
int3
cmpsb
pop
lock
push
int
add
pop
add
ss
aas
add
mov
add
loopne
pop
repz
add
mov
sarl
push
add
mov
add
fldl
jnp
mov
add
dec
add
add
in
out
inc
pop
test
cwtl
add
dec
cmp
cld
xchg
pop
add
popf
add
lods
pop
ret
add
mov
icebp
in
and
add
inc
add
stos
push
add
inc
add
or
loope
cmpsl
into
mov
add
add
inc
add
mov
dec
jge
mov
loop
add
add
add
data16
adc
inc
add
ja
iret
xchg
mov
fwait
mov
or
jo
mov
push
add
ja
cmc
pop
adc
fbstp
push
add
jl
jo
xchg
inc
jmp
pop
add
fwait
add
add
out
and
add
cs
jae
add
in
rcrl
mov
mov
or
repz
and
add
inc
add
add
divb
inc
add
xchg
xchg
fdiv
or
test
add
addr16
cwtl
add
add
popf
mov
inc
add
xchg
fnstenv
pop
push
cmp
push
insb
add
cmp
mov
fiadds
mov
mov
jns
pop
hlt
add
add
add
int
shl
mov
ja
add
push
add
mov
add
dec
add
test
je
add
out
add
and
add
hlt
sub
in
sub
mov
daa
inc
add
xchg
dec
add
pop
add
mov
loope
push
add
push
add
add
pop
or
add
lret
add
xchg
ret
cmpsl
and
add
sahf
test
xor
repnz
and
cmp
inc
add
arpl
jge
dec
out
jl
xchg
and
add
out
add
aaa
add
pop
stos
outsl
mov
cmpsl
add
dec
add
add
add
add
dec
add
out
push
add
add
mov
stc
add
push
push
inc
add
pushf
fmull
mov
add
insl
push
add
mov
test
dec
push
inc
aas
pop
add
fldt
stos
outsb
add
add
aam
add
add
add
adc
add
cmp
out
out
mov
lds
int3
add
fsts
out
jmp
add
xchg
xchg
sub
in
les
xchg
test
fwait
scas
xlat
mov
add
or
fwait
pop
xchg
add
pop
inc
negb
loope
or
je
lods
cmc
cmp
ret
or
and
leave
outsl
mov
jno
push
jae
xchg
aam
mov
push
mov
bound
fmuls
cmp
out
cld
test
push
add
mul
in
cmp
loopne
add
lcall
xor
or
push
pushf
push
add
lods
add
mov
shr
pshufb
dec
add
sbbb
mov
in
add
sbb
push
xchg
stos
mulb
cmp
adc
add
add
sbb
mov
add
mov
add
push
lret
push
add
or
lea
sub
notb
stos
add
add
pop
add
cmp
mov
mov
repnz
xor
cmp
fwait
xchg
mov
andl
mov
add
add
inc
push
add
add
add
xor
out
sti
xor
add
lret
stos
out
fidivs
add
mov
push
lods
push
push
add
mov
inc
je
inc
add
insl
insl
add
add
add
mulb
mov
mov
cmp
cmp
sub
add
mov
xchg
lret
add
or
rcrb
js
and
add
lret
add
les
add
mov
ljmp
in
mov
pop
add
loop
jecxz
insb
add
add
xchg
incl
push
add
mov
add
and
add
fisttpl
add
inc
add
or
and
add
in
out
mov
pop
jbe
push
add
arpl
sti
mov
jno
rclb
xchg
add
addb
add
rol
cwtl
ja
mov
call
inc
push
ror
ljmp
add
movl
test
adc
mull
mov
lea
shll
sbb
imul
mov
fistps
les
mov
mov
add
and
and
add
xchg
and
pop
add
add
add
addl
add
sub
xchg
test
cmp
xchg
push
lock
add
hlt
arpl
scas
fdivs
inc
add
leave
in
add
add
mov
sbb
jmp
add
std
ret
mov
add
dec
add
add
insb
add
scas
inc
ret
cmc
push
aam
xlat
lods
out
jb
pop
add
push
out
js
or
mov
push
pop
add
add
sahf
xchg
cmpsl
loope
in
sub
mov
add
push
add
lea
loop
mov
add
cmp
repnz
movsl
in
pusha
add
stos
or
mov
lock
test
mov
fldl
loope
add
movsb
in
cmp
insb
add
mov
mov
add
enter
add
jle
ljmp
outsl
sahf
mov
push
mov
xor
jo
pop
or
dec
mov
cmp
lahf
sub
into
jecxz
lock
out
sub
adc
sub
jne
xchg
fwait
add
add
add
in
imul
fucomi
xchg
jae
sbb
adc
stc
mov
lcall
fbstp
addb
add
mov
add
ljmp
add
add
cli
add
cmc
jnp
add
imul
roll
testl
cmc
adc
add
add
test
stos
and
add
and
add
nop
imul
add
jnp
loopne
jl
sub
mov
cmc
les
push
add
and
add
add
mov
pop
xchg
add
in
aaa
fldl
rorb
push
xchg
in
or
outsl
movsl
mov
fwait
ret
add
enter
jo
inc
shr
add
add
insl
imull
cmp
les
or
mov
cmpsb
in
and
push
push
add
stos
mov
or
mov
dec
orb
enter
lods
jo
neg
sub
push
cmp
inc
add
repz
fldl
adc
add
aaa
xchg
add
dec
add
inc
add
add
add
insl
test
and
add
out
leave
xor
add
dec
add
add
xchg
aam
je
lret
sarl
ljmp
aas
sub
lock
in
lcall
add
rolb
movsb
jg
fs
dec
add
add
iret
or
dec
jns
and
sbb
inc
add
add
jp
push
fidivl
call
add
shlb
stc
ljmp
xor
dec
xchg
pop
add
add
jge
aam
cmpsb
aam
stos
or
mov
jae
add
dec
add
in
imul
mov
jne
mov
data16
cli
add
jl
and
add
int3
fildl
add
int3
arpl
hlt
jbe
or
shl
inc
scas
or
xor
jo
ljmp
out
imul
or
ret
aam
rorb
dec
add
xchg
pop
add
sub
add
add
sbb
out
mov
sahf
add
mov
int
add
mov
mov
lea
add
test
add
add
or
add
stos
stc
or
mov
inc
add
mov
or
mov
push
push
add
pop
sbb
daa
in
in
xor
das
add
or
add
ret
repz
lods
jbe
loopne
mov
push
add
hlt
add
mov
push
cli
xlat
test
jns
add
mov
add
in
mov
add
dec
or
push
les
fldt
aam
sbb
inc
add
cmp
in
mov
cmc
mov
loopne
xchg
add
add
push
arpl
clc
cmp
add
lahf
repnz
stos
cmpsl
jno
repz
dec
add
jnp
push
add
jl
sahf
cmc
ss
add
int
jmp
push
add
jp
inc
add
hlt
sbb
shrb
mov
fidivrs
add
mov
add
jne
dec
add
push
add
add
mov
fadds
add
cmc
pop
addl
loope
cld
popa
fidivl
pop
add
add
icebp
push
add
ret
mov
jecxz
cwtl
mov
add
movsl
mov
pushf
jb
shlb
mov
vmwrite
lds
or
and
out
dec
add
scas
adc
add
jge
dec
add
add
ljmp
sahf
pusha
add
cmc
popf
push
jns
sub
sub
jecxz
aaa
add
mov
js
mov
pop
xchg
pop
dec
add
addl
add
and
sbb
dec
inc
add
incb
pusha
add
and
add
mov
sahf
cli
leave
cld
pusha
add
add
rcrb
addr16
xlat
in
xor
mov
mov
xorl
add
inc
add
add
mov
add
mov
loopne
push
pushf
add
add
add
pop
add
outsb
add
add
rolb
inc
add
cld
push
add
add
add
add
add
out
loope
adc
add
inc
add
dec
add
pop
cmp
in
jo
movsl
adc
add
sahf
sub
cmp
pop
xlat
sub
lcall
add
add
add
ss
add
out
pop
adc
dec
cmp
test
add
iret
add
adc
add
push
add
lahf
outsl
aad
fadds
mov
add
cwtl
lahf
in
adc
add
jno
add
sbb
xchg
push
add
jbe
gs
fadds
pop
add
rorl
add
enter
es
add
push
add
subl
mov
aaa
mov
je
sbb
int3
call
enter
mov
xor
add
add
dec
push
push
add
mov
mov
addl
stos
add
add
push
ljmp
add
pop
dec
add
xor
add
xlat
add
add
inc
add
mov
inc
call
mov
into
jae
xor
add
add
sub
add
dec
add
andb
sbb
xchg
xchg
adc
add
addl
cld
or
rcrl
das
add
mov
stc
cmpsb
add
subb
add
add
push
add
xor
add
pop
add
outsl
add
add
jno
and
aas
imul
stos
fdivl
add
test
dec
outsb
add
push
adc
sbb
sbb
arpl
add
mov
movsb
shr
adc
mov
lods
dec
lcall
pop
addb
inc
add
subb
hlt
mov
xor
mov
cmpl
dec
sbb
mov
sbb
dec
jnp
adc
add
pop
imul
cli
add
xchg
aam
add
ljmp
and
add
nop
lods
xor
add
and
in
bound
sub
xor
add
cld
push
sahf
sub
mov
add
cmpsb
add
add
add
sbb
xor
add
add
mov
out
xor
add
adc
mov
xor
add
mov
xchg
xchg
xor
add
sub
dec
add
pop
mov
pusha
add
mov
sub
lret
add
mov
loop
add
or
mov
popa
cmp
cs
pushf
ds
jo
les
dec
mov
pop
add
jo
fwait
xor
add
add
dec
add
roll
sub
aaa
sbb
loop
jnp
inc
int3
cmc
dec
add
pushf
mov
add
and
add
hlt
or
add
add
roll
movsb
repnz
push
add
rorb
jnp
xchg
jecxz
or
pop
add
pop
add
add
sub
or
and
add
add
lods
sbb
lcall
mov
movsb
add
or
xchg
mov
fcoms
jge
fwait
pop
add
cwtl
mov
cmp
stos
push
add
mov
and
pop
lret
nop
mov
inc
in
inc
loop
adc
pop
add
add
add
add
mov
stos
js
push
sub
push
add
aad
pop
loop
ja
cmp
mov
pop
xchg
add
lcall
enter
adc
inc
add
cmp
jp
mov
popa
add
pop
add
ret
into
add
imulb
add
in
jle
or
cmp
add
nop
dec
lea
je
mov
jl
mov
and
add
add
ret
pop
and
add
mov
dec
add
sub
xchg
cmpsb
inc
add
scas
mov
add
add
js
imul
sub
out
pop
repnz
dec
sub
cmpsb
mov
mov
add
lahf
sbb
nop
stos
push
add
filds
sub
and
xchg
sub
dec
add
arpl
xor
cmpsl
das
xor
pushf
add
add
sahf
jae
add
stos
call
incl
jecxz
aad
jg
jg
insl
adc
add
inc
and
jns
rolb
stos
pop
push
add
data16
add
loopne
lret
loopne
adc
ror
add
mov
cmp
dec
add
add
add
jg
mov
pop
add
sub
leave
mov
cs
lcall
jb
push
add
sub
inc
add
add
jl
stc
lahf
push
add
out
cmp
test
add
add
jl
jmp
add
ljmp
xchg
add
aam
les
cmp
add
or
push
add
and
lds
add
push
add
jbe
xor
insl
dec
stos
adc
add
aad
push
or
xor
add
mov
sbb
shll
shr
mov
add
add
lock
adc
sub
dec
cmp
aam
in
xchg
and
add
dec
mov
faddl
and
add
push
mov
add
sbb
add
loop
add
imul
jno
arpl
addr16
add
add
sub
add
fdivs
add
adc
add
add
int
bound
sub
aam
xor
add
add
add
aas
rclb
pop
add
sbb
cmp
add
add
loop
pop
fadds
cli
push
test
imul
add
pop
add
movsl
xor
hlt
clc
aaa
movb
lods
mov
ret
xchg
int3
pop
add
inc
add
test
cmpsl
push
lret
inc
add
pusha
add
add
mov
es
add
enter
jae
sti
inc
aas
dec
add
aas
add
add
add
inc
add
and
cmp
pop
pop
mov
push
add
xor
add
pop
mov
data16
and
push
push
stc
hlt
cmp
decb
lock
add
add
fdivrs
es
add
add
popa
and
dec
add
mov
insl
adc
add
jmp
add
xlat
push
add
jae
add
mov
add
mov
push
out
outsl
dec
add
aam
push
add
repz
add
repnz
add
enter
test
lea
push
testb
add
repnz
add
dec
sub
pusha
add
test
fadds
push
jne
sbb
hlt
jo
lods
xchg
lahf
sub
cmp
mov
out
adc
add
push
add
jo
roll
mov
jl
xor
mov
dec
add
sbb
fwait
mov
push
add
test
sti
stos
push
mov
push
js
incb
in
sub
notl
add
add
inc
nop
loop
jge
cs
call
shlb
add
mov
or
add
aas
sbb
divl
mov
add
roll
mov
pop
add
test
and
add
sbb
rolb
add
enter
incb
push
lar
or
aam
test
mov
inc
inc
xor
shl
push
xchg
add
add
ret
jg
push
add
jle
jbe
inc
iret
xchg
das
or
imul
add
xchg
pop
jmp
shrb
xchg
aaa
scas
add
ja
lea
out
add
fidivl
mov
add
add
leave
add
pop
add
shll
adc
pop
or
add
fimull
xor
add
shr
add
shrb
add
pop
add
xchg
pop
add
sub
add
dec
add
mov
add
mov
add
xchg
movsb
jmp
add
xlat
in
stc
out
add
stos
enter
add
add
sub
cmp
add
cli
ljmp
aad
cmp
dec
add
addb
add
test
pop
scas
add
mov
mov
add
fstps
add
and
mov
mov
add
or
or
pop
fwait
add
mov
sbb
jg
add
push
add
hlt
push
aad
fldln2
movsl
sub
loop
iret
cmp
jbe
push
mov
in
test
add
or
cmp
mov
addl
push
add
xchg
sub
inc
add
xorb
movsl
and
filds
cmpsl
aad
jae
mov
inc
loop
int3
push
add
das
add
jle
add
or
dec
add
add
pop
add
lcall
jbe
roll
cmp
cmp
stos
into
or
add
jbe
es
xchg
iret
dec
add
jmp
dec
add
cmp
dec
aas
sbb
xor
add
add
lock
add
stos
jg
add
mov
jle
sbb
mov
mov
mov
add
mov
mull
mov
out
or
dec
add
rcrb
mov
add
cmp
add
dec
add
xchg
cmp
ret
lret
add
mov
cmp
rorb
add
add
in
mov
sub
pushf
imul
adc
mov
mov
out
xor
add
lods
in
stc
push
push
sub
sbb
add
pop
add
cmp
ljmp
not
xor
add
add
ret
add
mov
cmc
jb
fsubs
add
dec
add
add
cwtl
test
add
xchg
fucomp
sub
lcall
fadds
test
mov
int
add
push
mov
pop
add
rolb
add
add
das
and
mov
add
mov
add
xlat
jns
rolb
mul
loope
pop
cmp
adc
pop
cld
add
jns
xor
repnz
mov
add
mov
fcmovnu
mov
add
incl
mov
cmpsb
fisubrl
dec
add
add
add
pop
insb
add
dec
inc
add
mov
aad
repz
loopne
add
inc
jge
add
lods
cmp
adc
add
or
fcomps
cld
xor
call
aad
add
adc
inc
add
loop
mov
xchg
add
and
xchg
lret
inc
insb
add
mov
out
dec
les
xchg
js
lock
shlb
add
daa
fldl
in
jp
jb
cltd
mov
push
add
ror
loope
add
add
addb
add
std
pop
gs
push
push
add
or
xchg
int3
push
fidivrs
fwait
cmp
or
jb
fisttpl
add
add
mov
cmp
or
out
inc
add
cmpsb
add
sbb
jbe
jae
fxch
xor
and
lret
add
mov
cmp
push
add
jl
xchg
add
add
sbb
js
mov
add
loopne
jg
mov
add
loope
mov
dec
adc
add
mov
leave
xchg
scas
movsl
rclb
add
jae
add
mov
dec
in
cmc
push
add
icebp
add
sti
sbb
add
add
jns
sbb
subl
int3
add
pop
gs
jge
lds
mov
stos
and
add
les
jg
add
add
in
xor
lret
aad
push
add
sbb
adc
lock
add
and
cmc
insb
add
add
rolb
or
add
add
pop
add
dec
or
inc
add
gs
lret
pop
add
sbb
aam
sub
inc
add
lret
repz
add
xlat
push
add
jnp
ds
stc
mov
dec
add
add
into
cld
inc
add
dec
add
shrb
add
add
sbb
movsb
ljmp
sar
stos
mov
add
add
mov
mov
add
decl
add
in
rcr
dec
add
jmp
cmp
add
lahf
pusha
add
insl
sahf
mov
scas
add
add
cs
inc
add
mov
daa
addl
add
add
test
sti
add
ljmp
add
sub
call
shl
jbe
in
jbe
adc
or
stos
sub
pop
add
mov
aas
iret
mov
add
data16
ds
cltd
xchg
clc
jbe
fistpl
pop
add
add
push
add
add
mov
add
cwtl
dec
repz
or
add
data16
mov
add
lret
lods
add
cmc
xchg
jge
sub
lret
add
adc
data16
mov
movsb
mov
ficoml
jnp
out
stos
push
sub
into
mov
arpl
jge
idivb
add
inc
sbb
and
add
cmp
adc
add
idivb
add
dec
add
mov
dec
add
push
sti
or
es
add
sti
adc
jecxz
sbb
or
xor
add
cmp
decb
sbb
add
imul
inc
lds
add
leave
pop
jnp
add
jp
popf
aaa
in
adc
add
add
adc
bound
mov
push
add
add
leave
pop
jbe
fwait
mov
cmp
inc
add
dec
add
clc
mov
lds
test
jae
fmull
leave
out
stos
xchg
mov
shll
add
in
cmpsl
add
jns
movsl
data16
add
dec
add
lret
add
cmp
inc
pushf
mov
xlat
ss
add
andl
adc
add
fcomp
aas
ja
xor
lret
xchg
rorl
outsb
add
dec
lods
jb
sub
fidivrs
pop
add
popf
add
sbb
fcompl
aam
add
test
dec
pop
pop
sub
and
add
sbb
or
pop
aam
xchg
fsubr
pop
testl
or
adc
dec
add
cmp
xchg
es
add
mov
pop
add
jl
stc
out
lcall
out
or
xor
into
xchg
mov
xchg
fmul
mov
add
add
xor
add
in
cmp
inc
mov
notb
add
shlb
mov
mov
les
cld
lret
lods
pusha
add
add
pop
shrl
mov
jp
data16
mov
add
add
add
add
xchg
ret
jo
mov
mul
xor
pop
sbb
mov
add
mov
add
out
add
push
add
js
or
les
lods
add
add
add
add
xchg
dec
add
mov
add
push
add
sub
lahf
insb
add
fwait
push
add
inc
add
das
mov
push
add
out
add
inc
pop
out
add
stos
or
add
and
add
add
push
add
xchg
mov
bound
mov
push
add
add
aad
shlb
movsl
adc
aaa
fadds
imul
push
add
stos
jmp
add
ficoms
add
add
add
add
mov
xor
add
cltd
xchg
xor
add
insl
add
hlt
call
adc
add
add
add
sub
xor
add
inc
add
sub
ret
aaa
adc
jae
sbb
mov
testb
dec
add
dec
pop
add
in
add
test
add
mov
fcompl
jmp
add
sbbl
lcall
js
std
lret
mov
adc
add
and
adc
inc
add
data16
add
xor
add
push
js
lock
pop
add
mov
or
jb
add
add
push
roll
push
push
add
daa
bound
test
add
dec
test
sahf
add
pop
add
clc
add
add
add
shl
pop
mov
pop
mov
movsb
jp
jns
scas
pop
movsl
add
mov
lds
add
lret
xor
add
push
add
dec
adc
add
in
mov
xor
mov
es
add
ja
add
dec
sbb
adc
add
mov
mov
add
inc
add
int3
add
add
xor
push
fsts
dec
add
inc
add
add
nop
mov
pop
push
in
and
mov
xchg
adc
add
sub
testb
add
add
fwait
mov
add
add
add
sub
pop
add
mov
mov
sahf
or
xor
add
add
dec
add
rolb
add
cmpsl
add
xchg
fimuls
arpl
or
cmpsl
sbb
addb
repnz
mov
ja
jecxz
pop
xchg
add
pusha
add
icebp
mov
or
movb
stos
sub
mov
inc
add
sub
dec
or
mov
int
push
add
aaa
lahf
add
add
ror
sti
and
push
add
add
adc
loope
or
and
add
lahf
dec
add
pextrw
imul
shll
pop
addb
adc
lods
sub
add
mov
test
in
repnz
dec
add
loop
add
mov
dec
add
mov
and
mov
lods
sbbb
mov
xor
add
lcall
add
ret
repz
jbe
cltd
aaa
dec
add
and
add
roll
jbe
add
inc
insb
add
add
push
stc
in
fists
fcompl
leave
or
add
cmp
inc
jmp
add
dec
add
and
add
test
data16
xchg
ficompl
cli
aam
in
jno
add
dec
add
pop
fstl
add
les
les
sbb
aad
sbb
aas
inc
add
xchg
aam
leave
sub
jle
data16
loope
jne
mov
or
mov
add
add
fistpll
repnz
add
cmpsb
mov
das
enter
inc
add
jns
lock
repz
lea
add
dec
push
outsb
add
ss
int
movsb
test
add
dec
add
in
add
dec
add
add
push
add
ss
shl
test
inc
jg
mov
add
mull
add
add
dec
add
dec
add
data16
adc
add
and
add
add
add
cli
std
rcrl
xchg
mov
add
add
test
test
cmpsl
jmp
jne
leave
add
add
js
aaa
xor
adc
add
sbb
cmp
add
push
add
mov
test
mov
scas
outsl
sub
and
out
mov
add
shrl
add
lret
popl
nop
or
cmp
iret
dec
add
adc
push
add
rcrl
add
popf
arpl
jnp
dec
and
push
fadds
add
cld
dec
xchg
mov
sub
insb
add
add
lahf
lea
push
repnz
push
dec
add
call
add
fwait
ret
adc
add
out
or
das
cmpsb
ret
pop
add
test
mov
add
add
ret
test
test
inc
stc
mov
movsl
mov
adc
in
mov
add
dec
pop
mov
js
nop
in
add
cmpsl
and
add
repz
mov
push
push
mov
add
add
neg
mov
std
mov
sub
pop
cmpl
add
cmp
hlt
subl
addr16
or
and
add
outsl
add
pop
add
add
cmp
add
add
cmp
xlat
cmpsb
jecxz
mov
cli
add
jge
popf
xchg
mov
ljmp
cmp
outsb
add
or
dec
add
dec
clc
out
stos
pop
add
add
add
pushf
mov
scas
add
aas
repz
addr16
roll
cmpsl
sbb
mov
push
add
sbb
sub
andb
add
arpl
cmpsl
dec
adc
add
add
add
addr16
das
lahf
push
add
pop
mov
mov
ficoms
xor
sbb
insb
add
mov
andl
mov
add
push
add
push
add
sbb
lea
ret
add
mov
shlb
test
mov
test
mov
rcll
cmp
or
xchg
xor
dec
add
clc
leave
pop
test
sbb
add
addr16
and
add
push
add
inc
add
pop
je
int3
shl
dec
add
push
das
add
xor
outsl
fstpt
add
xor
insl
dec
jle
pop
outsb
add
mov
mov
imul
sahf
sub
popf
rclb
mov
xor
adc
les
inc
and
add
lods
jl
mov
fmuls
mov
add
test
fstps
in
adc
mov
push
add
add
mov
movsl
sub
aas
and
add
mov
sub
cmp
insl
pop
add
nop
xchg
cs
stos
jmp
out
mov
addl
dec
in
mov
call
icebp
xchg
ret
testl
stos
adcb
adc
lock
aad
add
xchg
sti
lds
inc
add
add
xor
add
adc
sub
pop
add
mov
add
cmpsl
add
push
add
and
jb
ljmp
call
lds
mov
add
leave
adc
cmp
stc
dec
add
lahf
add
pusha
add
insl
call
inc
sub
mov
and
add
pop
data16
loop
add
push
insb
add
add
daa
mov
sbbl
add
ret
jge
push
dec
add
bound
jle
mov
addb
leave
cwtl
push
dec
add
add
inc
cmp
push
push
sub
xor
jns
add
dec
add
xchg
out
and
cmpsl
ficomps
std
or
add
add
jno
insl
sbb
mov
dec
add
add
add
add
stc
xchg
std
outsb
add
add
movsl
cltd
cmc
jge
out
add
mov
xchg
sbb
xor
add
repnz
dec
dec
push
add
scas
rol
dec
add
movl
add
out
add
js
mov
add
mov
add
xchg
call
add
leave
add
cmp
je
sti
add
out
fidivs
ljmp
popa
sti
sub
push
add
or
add
lahf
iret
cld
mov
stc
mov
enter
or
push
dec
aas
adc
jle
gs
or
ret
adc
add
cmp
repz
rcrl
mov
sbb
in
ret
add
inc
add
pusha
add
enter
or
das
jmp
xor
add
cmpl
push
add
mov
add
add
inc
add
mov
jmp
pop
andb
add
mov
das
xchg
mov
enter
aaa
lock
add
mov
jae
push
sti
cmp
add
bound
dec
mov
jo
fadds
xlat
mov
inc
add
add
add
out
add
frstor
fwait
mov
xchg
adcb
or
and
mov
cli
cmpsb
sub
stos
add
mov
jo
dec
add
xor
jne
jbe
outsl
xlat
int
mov
mov
cmp
out
cmpsl
roll
call
adc
add
add
gs
and
pop
add
cmp
imul
add
clc
mov
sub
add
sahf
jl
es
add
test
add
js
sarb
cmp
daa
mov
fnsave
mov
add
andl
xlat
jo
shrl
das
aad
pusha
add
cwtl
les
pushf
add
add
fwait
test
sbb
jae
push
xchg
add
std
repnz
arpl
ljmp
insl
add
iret
sbb
imul
ja
mov
add
inc
add
add
bound
bound
lods
lods
jl
mov
mov
jge
add
add
es
add
add
add
jae
stc
ret
add
add
add
jp
and
add
add
add
add
movsl
add
jae
movsb
jb
xchg
sbb
mov
enter
sub
add
adc
add
push
inc
add
lahf
sbb
rcll
push
sub
inc
add
xor
add
mov
add
mov
lods
popf
in
cmp
icebp
mov
dec
add
loop
mov
pop
add
jle
sarb
js
sub
bound
popf
adc
add
mov
inc
add
popl
adc
add
jae
gs
sbb
add
pusha
add
or
inc
add
push
jno
inc
add
sub
int
inc
divb
int3
add
lcall
pop
add
mov
push
add
mov
cmc
hlt
aaa
addb
xlat
lock
in
sub
ret
or
subb
add
add
pop
cwtl
inc
sub
adc
add
mov
lods
js
jmp
xchg
push
sub
push
xchg
add
sub
xor
add
xor
add
inc
add
mov
fstl
fists
add
xchg
add
enter
inc
dec
add
xor
add
add
mov
jnp
mov
cmpsl
xchg
inc
add
int
sti
ds
fisttpll
cld
repz
mov
jb
fsubl
lods
stc
mov
cmc
sub
mull
loopne
inc
mov
add
xor
pop
pop
add
add
sub
mov
fisubrl
mov
xor
add
xorb
data16
popf
sbb
inc
movsl
out
fcomp
dec
nop
add
add
add
add
cli
roll
add
cmp
jns
and
add
xchg
sbb
add
sub
mov
test
dec
add
sbb
mov
sub
mov
xlat
nop
aaa
je
mov
or
cmp
pop
sbb
mov
jb
cmpl
add
sti
arpl
and
jmp
and
add
pop
daa
sub
sbb
in
icebp
pop
pushf
add
popf
xor
add
jne
dec
add
push
add
jne
jae
add
add
ficompl
dec
cmp
add
push
dec
add
add
pop
sarb
les
xor
xchg
cmp
cmpsl
out
dec
add
test
add
jno
xorb
popf
jp
jecxz
pop
pop
add
ljmp
sbb
bound
dec
add
mov
inc
mov
xchg
mov
add
xor
xor
add
dec
sub
roll
add
clc
fadd
xchg
daa
in
add
and
add
add
push
add
add
jno
mov
cltd
stos
sbb
stos
sbb
dec
add
sbb
adc
js
inc
rclb
cmp
jl
cmp
incl
imul
push
xchg
fildl
testb
xor
mov
mov
add
shlb
cmpsl
add
mov
add
movsl
jnp
add
daa
add
add
cmp
add
fists
loopne
add
pop
test
and
add
cmpb
loop
jg
movsb
add
add
aas
push
add
push
add
clc
and
add
add
in
add
sbb
pop
add
fsubs
lds
xor
mov
mov
add
std
xor
add
ljmp
push
add
fidivl
add
mov
add
add
fs
jae
add
xor
rolb
inc
cmp
and
gs
add
push
add
push
sub
xchg
iret
stos
test
jp
cmp
ret
mov
add
sub
jb
in
pmullw
imul
hlt
xorl
mov
dec
add
push
add
incb
dec
loopne
xchg
or
adc
add
mov
mov
mov
mov
push
add
add
inc
add
mov
mov
pop
add
xor
arpl
sub
jns
call
add
fldl
rcrb
aas
inc
das
push
sbb
ljmp
pop
add
je
adc
dec
add
arpl
push
add
stc
int3
cwtl
daa
aas
add
add
inc
adc
add
pusha
add
loop
xchg
sub
data16
add
jnp
add
xor
add
sahf
add
test
roll
movsl
ljmp
sub
dec
add
out
fmuls
bound
mov
pop
mov
xor
shrl
add
jno
or
addl
lahf
jl
mov
xchg
sub
pop
test
inc
add
mov
jl
std
pop
add
cltd
fwait
cmpsl
adc
out
push
insb
add
push
add
lea
push
mov
xchg
push
test
add
fistl
pop
sub
jns
in
add
and
repnz
adc
add
add
aaa
xchg
add
movsl
add
add
mov
add
jno
cmc
lret
ret
addb
movsb
xchg
mov
js
xchg
js
xor
push
add
add
push
or
or
lret
enter
adc
add
push
add
add
sbbl
pop
es
mov
jecxz
xchg
popa
test
xor
nop
add
sbb
cld
sahf
std
push
add
repz
data16
add
xor
xchg
jb
mov
lds
loopne
add
div
jg
outsb
add
lods
hlt
mov
push
add
mov
out
shl
rclb
add
or
push
dec
add
push
add
cmpsb
jno
rcll
add
gs
hlt
stos
mov
ret
sbb
mov
mov
add
cmc
insl
filds
test
adc
pop
add
cmp
pop
add
xchg
and
push
in
pop
inc
mov
mov
xchg
popa
adc
movsl
inc
add
je
inc
add
cmpl
add
shl
cmpl
cmp
mov
in
in
mov
add
cmp
push
add
push
add
or
roll
add
ja
and
add
sahf
data16
lea
push
add
mov
mov
cmp
add
add
addr16
add
mov
fsubrl
add
ficoms
cmc
into
mov
add
sub
xor
inc
add
jo
inc
out
sub
lahf
ffree
int3
sbb
jne
scas
mov
dec
mov
dec
add
add
and
add
sbb
mov
add
add
add
add
push
add
add
add
push
add
enter
popa
mov
push
ret
cmp
jge
add
add
in
add
jle
dec
fs
in
xchg
add
mov
add
add
movsb
pusha
add
push
scas
or
enter
add
push
add
push
pop
add
mov
mov
add
add
add
js
cmp
ret
lea
insl
cwtl
inc
add
sub
inc
add
add
out
outsb
add
pop
sbb
add
add
add
pop
aas
add
add
mov
adc
int3
add
add
add
add
das
andl
add
imul
sbb
or
lea
out
sti
daa
and
mov
sbb
ret
add
add
das
mov
aad
sti
add
pop
add
xor
add
add
cmp
inc
nop
outsl
in
ss
xor
add
sub
xchg
adcb
add
cmc
lcall
add
pop
cmp
or
int3
xchg
orb
jge
add
add
arpl
lock
add
add
sbb
scas
mov
mov
lock
sub
inc
add
add
add
test
xor
inc
jbe
fs
dec
sbb
jae
addr16
clc
mov
add
add
adc
add
pop
jmp
and
add
imul
add
test
add
lret
ss
add
out
mov
add
add
stos
cmp
jmp
scas
push
lcall
add
jae
add
sub
mov
add
add
insb
add
sub
xchg
add
cmp
loopne
add
inc
fistpl
add
pop
add
jne
add
push
and
das
adc
add
add
sub
add
push
add
shll
jmp
mov
mov
xor
add
cmpsl
push
fiaddl
idivl
add
sbb
mov
add
jns
xor
push
add
pop
cli
aaa
sub
cmp
add
jnp
mov
outsl
and
add
mov
outsb
add
add
xchg
add
imul
fadds
jecxz
add
add
or
xor
movntps
fiaddl
and
add
repnz
sbb
mov
add
ljmp
and
out
loope
jmp
das
and
jp
inc
add
add
adc
pop
push
add
add
add
push
add
and
sti
dec
add
xorb
add
mov
add
sbb
lods
sbb
imul
and
jmp
xchg
das
mov
add
sbb
or
xchg
add
add
fbstp
lds
mov
or
int
icebp
xlat
pop
cltd
add
in
push
add
add
imul
sahf
add
add
sbb
xlat
cmp
and
add
loop
sub
test
push
in
ljmp
add
add
pusha
add
add
add
mov
outsl
add
cmp
in
add
sbb
add
gs
and
add
add
fldl
aam
xchg
in
mov
xchg
iret
lret
addr16
pop
movsb
data16
cmp
jae
mov
sub
nop
out
rolb
add
in
dec
movsl
pop
add
hlt
mov
incl
xor
add
or
pop
pop
add
mov
add
fisubrl
mov
add
add
jne
movsb
in
jle
addl
adc
add
mov
movsl
add
sub
mov
add
mov
rolb
xchg
add
mov
sub
push
ret
jg
mov
rorl
xchg
jle
add
shrl
add
adc
negb
xor
xchg
iret
cld
lcall
popf
inc
shl
pop
faddl
out
add
shl
mov
xor
insb
add
sahf
adc
add
xchg
data16
add
jo
pop
insl
jp
pop
cmpsl
pop
add
push
add
hlt
add
in
icebp
push
add
out
mov
cmc
jge
rcrl
cs
sub
sbb
add
scas
jmp
jns
xchg
pop
add
mov
dec
jmp
cmp
add
mov
push
sbb
dec
rcll
add
insb
add
cmp
in
add
roll
into
sbb
push
cmp
popa
mov
cmpsb
cmpsb
int3
cmp
les
add
mov
sahf
daa
addb
cmp
testl
add
dec
push
test
mov
mov
sub
or
aaa
mov
add
add
xor
adc
add
ret
xchg
add
lcall
fwait
inc
and
in
jl
adc
pop
subl
orl
inc
add
add
in
add
cwtl
add
sahf
cmp
data16
adc
add
data16
sbb
fwait
pop
add
push
add
dec
add
add
xor
xchg
aas
test
adc
add
test
rolb
xor
mov
js
das
sub
nop
xchg
int3
xor
add
jl
mov
push
repz
push
add
cmpsb
add
xor
xor
add
xor
add
push
stos
dec
cld
fwait
sahf
cmp
jmp
stos
sbb
mov
add
xchg
sub
inc
add
call
mov
adc
add
xor
fdivs
or
xor
or
jge
jl
cmpsl
jmp
testl
into
ja
jmp
add
add
sbb
repnz
outsl
sbb
cmp
fwait
sbb
lock
add
sti
mov
jo
pop
add
mov
add
jnp
or
adc
inc
add
outsl
fdivrs
lret
inc
xchg
jnp
loop
pop
add
adc
add
cmp
push
add
mov
mov
aaa
adc
popa
fwait
int
add
addb
gs
xor
add
add
add
lahf
pop
pop
add
add
add
add
fiadds
add
shlb
popf
aad
mov
add
scas
dec
add
jae
sbb
xchg
xchg
inc
add
pop
dec
add
or
add
add
sub
hlt
inc
push
in
inc
mov
add
int3
xchg
std
icebp
sarl
xchg
or
out
pop
mov
add
rcrb
or
or
pop
add
lcall
add
test
add
add
add
lret
int
xchg
pop
add
pop
add
add
add
fstpt
push
add
add
mov
mov
dec
out
inc
add
fisubs
adc
sarl
gs
sarb
add
add
ret
data16
bound
mov
mov
adc
add
add
add
push
int3
rolb
fildll
ss
mov
jecxz
push
sahf
cmp
jmp
ret
jge
stc
jne
in
pop
add
jae
sub
adc
add
add
pusha
add
ret
outsl
xor
js
add
add
cld
movsl
mov
add
pop
adc
add
add
add
add
inc
add
adc
add
jo
shlb
add
divb
pop
add
scas
dec
mov
jge
sbb
inc
add
arpl
xchg
sbb
add
add
dec
add
leave
add
dec
add
add
add
push
dec
add
and
ss
cmp
inc
pop
bound
sub
loopne
inc
add
aaa
pop
add
mov
add
add
jl
sub
adc
add
aad
sbb
or
into
mov
sub
mov
add
add
test
add
aam
cwtl
lret
imull
inc
add
repnz
push
add
pop
data16
std
add
test
rcrl
testb
mov
inc
pushf
jne
sarb
dec
add
inc
dec
add
pop
mov
add
test
xchg
pop
add
add
mov
out
ret
movsb
xchg
mov
add
out
in
jp
push
add
xchg
fwait
inc
add
mov
push
add
js
inc
mov
or
pop
add
add
add
out
or
insb
add
jae
add
pushf
jg
icebp
xchg
add
jle
jb
jnp
ficompl
shlb
cmpsl
add
jle
insl
fsubp
pusha
add
mov
dec
add
add
sbb
stos
imul
lock
cmpsb
decl
imul
jns
xchg
scas
iret
ljmp
pusha
add
testb
push
add
adc
add
jne
sub
add
dec
add
in
add
add
add
jl
iret
push
mov
loope
inc
jle
ror
out
inc
add
int
pop
add
push
add
testb
int3
out
sbb
out
in
sub
pusha
add
sbb
roll
shlb
pushf
call
add
add
les
xchg
add
imul
mov
lret
aam
add
jb
push
add
faddl
loop
xchg
lea
cmp
mul
repz
cmp
jg
sub
mov
cmp
cmpsb
call
lds
sbb
stos
in
insl
inc
add
xor
xchg
jb
jle
sub
mov
js
jge
add
xchg
add
pop
aad
dec
add
in
jns
les
mov
add
mov
cmp
and
fldenv
add
add
add
push
xchg
push
pop
inc
add
aaa
sub
add
pop
mov
add
add
filds
stos
add
dec
add
out
lcall
movsl
sbb
push
rolb
xchg
or
jbe
mov
leave
add
and
mov
fsubrl
add
mov
aam
mov
pop
add
in
andb
add
xchg
nop
pop
aas
enter
rclb
outsl
imul
jge
dec
lret
mov
rorb
xor
loope
add
bound
mov
jnp
movsb
sbb
lods
inc
jle
outsb
add
add
add
shrl
mov
cmpb
aam
stos
add
add
add
mov
pop
std
call
cmp
testb
or
mov
pop
mov
inc
add
xchg
movsl
mov
sbbb
sub
sbb
xor
add
or
cmp
notb
negb
add
push
jl
jnp
add
mov
aam
mov
xor
jns
sbb
imul
or
sbb
jle
xchg
adc
sbb
rol
jns
add
mov
hlt
or
add
sahf
push
lods
addl
add
add
dec
add
insb
add
mov
repz
inc
add
sub
push
push
add
add
xchg
pusha
add
add
adc
add
inc
add
aas
add
add
jae
in
nop
add
add
or
aaa
inc
add
repnz
push
add
imul
mov
movsb
add
and
add
sbb
xor
add
fucomi
cmpsb
pop
inc
add
add
aaa
push
add
add
add
add
subb
add
sub
sti
cmp
add
add
imul
add
dec
js
ss
add
hlt
or
add
xchg
add
aam
add
repz
cmpsl
xor
popa
lret
add
out
leave
pop
mov
imul
rcrl
movsl
add
out
cltd
bound
sub
iret
andnps
adc
add
xor
insl
mov
nop
shrl
jae
pop
push
stc
adc
xchg
je
mov
add
push
daa
adc
xchg
jmp
add
push
add
cmp
or
inc
add
add
std
xor
add
into
outsl
mov
lods
xchg
loope
mov
add
add
lods
xchg
fldl
rcrb
pop
xor
dec
add
das
jle
sbb
mov
or
into
xchg
ss
arpl
mov
hlt
add
adc
and
mov
xchg
les
pop
add
pop
add
mov
or
jnp
add
outsb
add
jo
imul
out
in
inc
imul
fs
dec
out
add
pop
mov
add
cmp
icebp
add
pop
add
test
add
add
popa
add
leave
ljmp
in
xchg
mov
add
ja
push
push
jne
call
mov
test
adc
add
or
mov
add
cmp
jp
leave
xchg
dec
sub
add
leave
add
dec
mov
or
push
mov
inc
xchg
or
pop
loope
stos
add
sub
lods
cmp
testl
push
push
outsl
sub
add
pop
add
inc
add
mov
add
ret
les
add
push
dec
mov
js
sbb
cmp
pop
jl
xchg
sbb
xor
add
sub
shll
jecxz
adc
outsl
and
pop
or
nop
in
xor
add
aam
push
add
add
sub
movsl
cmp
push
mov
add
mov
add
stos
sbb
add
and
inc
add
add
dec
add
movlps
cmp
sbbl
data16
or
mov
sub
cmpsl
in
lds
add
xchg
lock
cmp
fwait
mov
jne
rolb
pop
add
fiadds
sahf
push
add
xchg
popa
mov
add
mov
add
ficoms
testb
inc
add
add
add
push
add
xchg
add
jno
in
adc
add
adc
add
rolb
daa
loopne
jo
aam
les
add
adc
and
or
mov
adc
add
add
adc
mov
lods
lcall
dec
cmpl
xchg
mov
popa
add
sbb
dec
add
mov
imul
sub
movsl
inc
mov
add
add
out
cli
add
cmc
cmp
push
adc
add
stc
push
add
xor
lret
xchg
cwtl
add
add
fisttpll
sbb
lds
add
fwait
cmp
dec
add
add
and
add
ud2
mov
add
movb
jl
pop
lds
rclb
jae
int3
in
sub
imul
push
add
add
adc
fldl
inc
shl
sbb
or
loope
sahf
out
mov
mov
sahf
mov
add
jp
cmp
mov
cwtl
repnz
push
add
jl
inc
add
add
add
mov
add
add
test
in
fstpt
add
pop
add
pop
jmp
or
dec
add
sub
lods
push
add
wbinvd
loopne
incl
das
or
pop
loop
mov
add
add
and
add
test
mov
adc
mov
jle
xchg
sub
add
cli
fsubrl
fs
bound
cli
pop
sub
xor
stos
stc
or
std
add
js
mov
add
or
inc
add
push
add
or
in
and
add
xorl
mov
push
add
mov
jbe
xchg
std
fsubrp
movsb
lahf
int
jl
test
mov
int
push
add
fcmove
aaa
xchg
add
test
cmp
xor
add
les
add
mov
movsl
ljmp
push
mov
mov
push
add
stos
fwait
cmpsb
or
jge
pusha
add
int
daa
roll
xchg
xchg
repnz
and
add
add
add
sub
jecxz
inc
add
xor
cli
cmp
imul
out
jno
sti
lods
pop
inc
add
add
dec
add
jmp
add
cld
or
ret
sahf
int3
xor
lcall
or
sbb
add
sbb
out
jg
add
add
add
add
add
sahf
aaa
jne
pop
insl
xor
xchg
mov
mov
add
popf
fwait
pop
add
xchg
xchg
cmpl
stos
xor
ja
mov
add
add
mov
add
sub
cmp
adc
jle
cmp
lods
lret
mov
dec
add
sahf
or
add
ret
imul
xchg
cmpsl
inc
outsl
lods
repz
cmp
sbbb
add
xor
add
push
rcrb
inc
adc
add
push
add
cmp
packuswb
cmp
jecxz
add
fwait
sbb
sti
add
dec
add
add
push
add
ret
repnz
push
stos
inc
add
adc
jecxz
imul
loope
adc
cmp
hlt
fsts
add
and
xchg
fcmovnbe
test
add
add
bound
frstor
lcall
jo
insl
ljmp
add
call
add
sub
stos
clc
movsl
add
add
jbe
out
clc
clc
shrb
adc
add
lret
add
and
pop
sub
stc
aam
add
cmp
out
movsl
cmp
or
mov
xlat
jno
add
shr
call
sub
out
inc
add
cwtl
cld
xchg
mov
add
mov
xor
add
loop
inc
fisttps
add
inc
add
add
dec
add
hlt
adc
add
imul
add
ret
add
sahf
dec
ficompl
xchg
fwait
enter
addr16
aas
call
add
jnp
push
add
roll
add
add
adc
add
aas
add
xchg
add
jb
cmp
loopne
popa
mov
push
add
pop
add
xchg
and
add
push
add
sub
add
and
push
add
cmp
add
sub
daa
leave
add
testl
adc
add
and
jne
jb
mov
add
adc
xchg
mov
add
jbe
insb
add
jns
enter
icebp
xchg
ds
xor
gs
add
fdiv
mov
add
jp
stc
push
add
add
jns
out
outsl
cmp
dec
sbb
rcr
daa
iret
add
daa
int3
add
in
lods
sarb
lahf
jecxz
insl
rcl
popf
sub
dec
add
inc
add
xor
ficompl
add
push
loope
add
mov
add
add
rolb
leave
rcpps
mov
faddl
mov
jmp
aam
out
add
pop
ret
fdivrs
add
ror
adc
data16
or
push
add
add
cmc
and
add
add
mov
cmp
sub
add
jbe
lods
out
test
stc
inc
imul
jo
cmp
jo
sub
aad
mov
push
movl
cld
dec
xlat
inc
add
xchg
in
inc
push
or
insb
add
imul
pop
hlt
ss
add
adc
inc
mov
lods
fldlg2
rol
shl
push
add
add
pop
repz
test
push
add
add
adc
shrb
add
incl
scas
add
mov
or
adc
std
push
mov
jmp
test
xchg
out
arpl
in
stos
fildl
mov
decb
mov
or
daa
xor
movsb
movd
clc
scas
je
cmp
mov
adc
push
add
movsl
push
add
add
lahf
ret
cmpsl
mov
add
mov
hlt
mov
add
dec
add
pop
jnp
dec
add
or
or
xrelease
xlat
add
and
add
add
daa
pop
add
sub
add
add
lock
mov
push
add
add
push
cwtl
cmpsl
popa
jmp
insl
xchg
cmp
pop
xor
add
adc
and
add
dec
mov
gs
shr
iret
jmp
and
sub
push
add
pop
andl
add
sub
shlb
cmpsl
add
add
inc
add
sti
fdivp
nop
pop
add
outsl
add
xchg
call
sub
push
adc
sub
mov
cmp
sbb
fiadds
jle
lock
add
push
jb
lea
repz
push
repz
add
test
test
jle
inc
xchg
ja
ret
sbb
xor
add
mov
mov
push
std
ret
push
add
add
add
add
add
aas
in
das
mov
add
sbb
add
add
icebp
out
roll
lock
ret
dec
add
sub
es
mov
ss
add
mov
add
ljmp
pop
push
add
insl
add
loopne
sbb
cld
mov
out
xchg
mov
push
imul
push
lldt
lret
add
dec
imul
add
mov
xchg
test
and
add
push
add
add
push
add
xor
daa
jns
dec
add
cmp
cmp
push
add
push
add
add
fsubr
xor
popf
inc
inc
add
add
add
ret
cmc
inc
add
add
push
add
sub
xchg
pop
add
add
das
sbb
mov
jg
adc
into
enter
push
add
add
cli
add
rcr
xlat
sub
sub
fucomp
jne
adc
add
xchg
jb
stc
pop
add
xor
cmp
outsl
add
test
cwtl
clc
mov
test
dec
add
addb
mov
xchg
mov
jb
inc
add
jge
jmp
cmpl
pushf
xor
add
xor
std
fdiv
popf
je
mov
and
add
daa
sub
sbb
bound
jmp
add
ret
xor
add
mov
movsb
out
jno
fmuls
add
add
sub
loop
mov
std
int3
xchg
mov
test
inc
jl
data16
inc
add
mov
data16
add
jne
out
dec
add
jns
jecxz
jns
jne
mov
add
and
add
fdivrl
jmp
add
aam
add
sbb
mov
add
add
rcrl
add
push
add
add
add
imul
shl
insl
jg
jns
mov
inc
add
sbb
mov
icebp
push
add
outsl
pavgb
jp
idivb
jp
pop
add
movl
cmp
xchg
scas
dec
add
xchg
fnstcw
xchg
cltd
std
xchg
in
pop
add
jns
aas
cmp
add
dec
add
push
inc
add
xor
add
sbb
xor
add
xchg
popa
xor
cld
jp
enter
gs
fstpl
mov
ss
add
add
dec
lods
bnd
jl
xchg
bound
mov
mov
movntq
add
add
add
or
jp
pop
xor
dec
add
add
es
add
or
dec
add
mov
xor
push
into
sub
pop
pusha
add
adc
jl
jo
fcoms
cmp
jne
hlt
bound
out
push
mov
inc
bound
pop
loope
pushf
push
mov
mov
and
ljmp
add
and
add
xchg
add
adc
add
daa
add
push
add
rolb
inc
add
jb
lahf
add
mov
add
add
jb
xchg
cmp
add
and
jae
mov
push
add
mov
in
add
ds
inc
test
enter
mov
sub
rorl
xchg
add
or
lahf
add
inc
loope
add
add
andl
xchg
push
add
dec
add
jbe
mov
gs
into
jle
cmp
sub
in
in
aam
fwait
cmp
adc
add
mov
sarl
clc
jle
aam
in
jge
add
jmp
mov
xlat
or
cwtl
or
lea
add
add
mov
mov
test
pop
mulb
icebp
jp
fwait
shrl
imul
add
gs
dec
fldenv
add
test
mov
mov
test
mov
mov
add
cmp
mov
cmp
inc
add
test
dec
add
inc
xor
mov
dec
push
cmp
lods
cmp
movsb
lret
lock
repnz
push
ss
in
adc
add
sahf
fsubrl
mov
xchg
int
xchg
cmp
mov
filds
ret
push
add
inc
and
sahf
mov
xlat
lcall
xor
add
xor
add
mov
das
pop
add
add
add
push
cmp
fildll
cmp
add
add
xchg
outsb
add
out
jmp
rcrl
mov
push
sbb
ret
adc
add
add
add
sub
loopne
pop
add
data16
or
add
mov
in
bound
sub
add
pop
add
xchg
xchg
cmc
aam
aam
add
cmpsb
add
rcrb
add
mov
pop
add
ret
ror
adc
add
add
aas
add
push
adc
mov
iret
rorb
add
hlt
jae
lret
mov
mov
push
add
add
sbb
popl
adc
add
in
out
sahf
pop
add
add
mov
mov
test
or
add
xchg
or
add
popa
pop
add
lret
imul
jno
lods
test
fucomip
mov
add
jnp
jg
les
mov
repnz
add
inc
add
inc
add
mov
lret
std
sub
mov
mov
ljmp
add
movsb
mov
jl
mov
lds
sbb
lahf
xchg
imul
add
add
and
add
cwtl
add
cmp
xor
add
js
mov
add
call
push
je
jg
inc
add
add
rorl
in
mov
add
pop
add
mov
ja
push
add
hlt
out
mov
pop
add
aam
add
sbb
adc
add
ror
add
jns
shl
jecxz
pop
cmc
aad
mov
add
int3
add
mov
mov
movb
mov
add
add
sbb
lea
add
aaa
cmp
addl
add
sbb
fucomp
ljmp
jb
xchg
pop
add
test
pop
add
adc
ss
add
mov
add
add
ret
lods
jmp
xlat
data16
in
xlat
pop
cwtl
addr16
sbb
mov
cmp
add
sarb
mov
add
add
jbe
sbb
das
aaa
push
add
dec
xor
adc
add
faddl
daa
push
add
push
mov
data16
lret
sbb
shrl
negl
outsl
call
adc
add
and
je
cltd
fs
leave
push
add
or
mov
scas
mov
add
xor
imul
hlt
mov
mov
add
jae
inc
add
add
aaa
add
add
inc
add
pop
add
adc
add
flds
fistpll
fisubs
xchg
ljmp
vmovsldup
add
les
adc
pop
test
fisttpl
imul
xchg
push
ret
roll
jg
cmpsl
insl
pop
add
jmp
jae
xor
push
add
add
shll
adc
pushf
inc
add
negb
jge
clc
mov
js
adc
or
sub
cltd
sub
xchg
cmp
enter
js
imull
outsl
xchg
fld
cmp
ret
andl
mov
mov
out
jne
add
add
sub
bound
test
xchg
hlt
fwait
mov
push
js
arpl
fdivr
fldcw
xor
add
inc
lea
add
mov
arpl
or
ret
inc
ror
push
arpl
add
icebp
xor
add
add
pop
test
cmc
jns
sbb
and
add
test
and
ja
out
fisubrl
gs
add
mov
pusha
add
add
sbb
jbe
lret
sbb
mov
popf
push
int3
jbe
adc
mov
fimull
dec
cmc
cwtl
or
add
sbb
addr16
fidivrl
int3
and
add
add
adc
subb
in
mov
sbb
out
subb
adc
add
cmp
mov
dec
jmp
jbe
rcrb
in
jae
push
cwtl
out
sub
fistpll
jg
in
jns
xor
aam
add
js
xchg
push
add
scas
inc
into
xchg
jmp
popl
push
add
aad
dec
add
add
setl
adc
dec
add
push
add
mov
dec
add
mov
add
cwtl
dec
add
fiaddl
xorb
add
mov
cmp
adcb
jmp
filds
xlat
mov
mov
mov
push
sahf
inc
rcrb
cmp
mov
adc
ss
add
xor
cltd
add
add
mov
cmp
int
addr16
jg
mov
mov
add
mov
add
add
xchg
clc
shl
loopne
pop
add
jg
xor
add
jns
ret
rorb
inc
add
push
dec
add
ret
add
push
add
xor
add
add
xor
add
lret
dec
add
inc
add
lock
cs
pusha
add
push
movsl
sbb
add
add
inc
add
mov
and
inc
mov
add
loope
mov
in
dec
add
lret
pop
jne
ret
add
add
add
inc
add
add
incl
cltd
sub
clc
stc
mov
pop
add
fildl
cmp
and
mov
pop
or
mov
add
aas
mov
nop
sub
sub
in
add
or
cmpsl
test
add
inc
add
sub
data16
xchg
stos
lods
addl
js
xchg
ja
add
jae
repz
roll
fsubrs
mov
add
sbb
out
inc
pop
add
xchg
stc
data16
push
add
scas
add
xorb
and
add
lcall
jge
int
stc
xor
add
outsb
add
scas
in
pop
add
in
add
fildl
incb
into
add
add
mov
mov
clc
mov
dec
push
add
push
add
add
hlt
pop
add
dec
mov
fs
cltd
sub
add
add
add
inc
mov
add
add
push
sub
jns
lods
lret
xor
pop
add
add
jb
mov
and
sub
out
in
add
adc
add
add
nop
mov
arpl
add
push
into
add
aad
out
bswap
cmp
popf
call
lods
scas
out
jge
jp
imul
stc
xchg
fisubs
jb
imul
jno
add
stc
sbb
add
in
mov
scas
dec
lcall
enter
mov
stos
jmp
add
add
out
xor
stc
add
ss
add
popf
cmp
mov
inc
or
aaa
ret
add
int3
arpl
jle
xor
add
sbb
add
cmp
sahf
repnz
fldl
xor
jae
pusha
add
loopne
add
sub
xchg
dec
aad
push
dec
add
push
add
pop
lret
add
jb
sub
cwtl
fildll
xorl
push
cmpsb
int
mov
popa
add
xor
fiaddl
adc
add
cmp
sarb
add
mov
add
aaa
mov
aas
fisubs
add
jo
adc
sbb
add
or
out
cltd
les
pop
add
out
in
cmpsb
and
add
hlt
int
cmc
add
jnp
cmp
push
add
cmp
jmp
ljmp
add
fildl
into
dec
mov
outsb
add
cmp
rcll
inc
ret
fcmovnbe
das
add
pop
add
xor
cmpsl
roll
add
add
ret
frstor
pop
add
notb
mov
sahf
bound
test
add
outsl
dec
loop
add
and
cmpl
in
ss
inc
add
jbe
mov
lods
cltd
jnp
sub
jns
add
mov
cltd
lds
outsb
add
xor
add
mov
add
add
push
add
push
fbld
testb
add
add
lods
das
xor
add
insl
inc
test
mov
jp
filds
xor
add
jbe
cli
in
add
sbb
jecxz
fstl
sub
or
add
cmp
mov
xor
mov
std
xchg
and
xlat
stos
out
sub
push
add
inc
test
pop
add
call
lock
pop
add
add
sub
add
icebp
data16
add
mov
add
call
sub
cmpb
add
add
hlt
cmp
sbb
out
jmp
xor
jg
adc
lret
jnp
sub
out
pop
add
xchg
mov
add
jp
sbb
lods
mov
loope
int
and
add
pop
add
add
add
add
rolb
nop
adc
add
loope
shlb
or
repnz
sbb
lods
inc
xor
mov
add
add
add
lcall
dec
cli
addr16
add
sbb
cmp
cmp
mov
loopne
dec
add
add
int
imulb
add
out
lahf
mov
mov
scas
in
popl
add
into
cld
leave
shlb
add
nop
add
xorl
xor
test
out
push
push
add
test
insb
add
loopne
dec
xchg
je
testb
add
add
inc
or
icebp
adc
add
mov
push
add
movsl
enter
adc
mov
add
mov
filds
sub
cmp
jae
rcrb
daa
fildl
jge
test
xchg
imulb
add
pushf
pushf
andb
add
mov
testb
mov
adc
add
inc
add
add
add
push
add
jne
add
xor
add
leave
insl
xor
add
add
les
add
sub
rclb
add
adc
and
imull
mov
das
inc
mov
inc
add
add
inc
add
mov
push
or
shrb
jae
aas
cwtl
sub
add
dec
add
mov
stos
mov
dec
add
add
add
sub
and
add
incl
dec
add
fcompl
mov
add
lock
add
imul
ret
dec
xor
add
xchg
clc
out
nop
das
outsb
add
jb
push
adc
cmp
icebp
mov
push
rolb
mov
add
aam
mov
and
lret
in
mov
dec
add
es
add
add
outsb
add
arpl
fdivl
test
popf
add
add
add
out
pusha
add
jo
mov
add
add
cmp
jmp
arpl
add
pop
add
mov
lock
aas
test
shrb
lahf
cmpsb
mov
add
stos
les
push
xor
sbb
mov
testb
sub
sbb
popa
jno
and
jbe
xchg
std
in
loop
pop
inc
cld
aas
adc
adc
pop
xchg
add
and
inc
fwait
repnz
add
add
add
add
pop
add
xor
add
fbstp
xchg
add
test
das
mov
add
xchg
and
add
mov
sbb
add
add
cmp
or
add
fildl
sub
aas
mov
in
int3
rcrb
jl
daa
test
js
mov
add
leave
mov
in
sub
cld
divps
push
testl
popf
data16
add
add
add
shrl
in
or
jb
lds
add
add
cltd
and
add
mov
lret
imul
mov
add
and
inc
add
push
add
mov
mov
jl
push
add
add
xchg
xchg
aas
push
lods
xor
mov
negl
add
mov
mov
mov
pop
add
inc
push
nop
packuswb
mulb
push
add
add
mov
loopne
mov
add
outsb
add
cwtl
mov
add
lret
ret
add
push
add
testl
icebp
fcmovb
mov
jo
cmpsl
popf
daa
test
sbbb
mov
sbb
dec
mov
xchg
mov
or
enter
mul
pop
add
clc
sub
ljmp
sbb
aad
add
into
or
fwait
add
add
jg
cmpsb
or
test
std
mov
jb
jbe
es
loopne
mov
sub
cmpsl
mov
inc
add
mov
das
adc
add
add
add
add
xchg
out
pusha
add
aam
add
push
jl
int3
mov
add
in
jg
add
pop
add
or
cmp
cmp
pusha
add
movb
popa
push
add
pop
dec
add
push
add
clc
mov
xor
add
pop
xchg
add
int
icebp
pop
xchg
add
push
add
mov
sub
xchg
xchg
pop
add
or
subb
mov
mov
ss
pop
add
add
add
cmp
int3
iret
push
add
dec
add
mov
cmp
cld
adc
add
outsl
sti
gs
sub
cmc
jmp
roll
scas
imull
add
add
repz
lods
push
lret
popf
scas
push
dec
out
and
add
add
adc
mov
test
xchg
into
pop
and
mov
add
inc
testb
add
jle
xor
fsubrs
roll
add
out
add
cli
fcmovne
lock
das
stc
negl
add
out
add
mov
into
xor
add
stos
mov
dec
mov
adc
add
dec
add
adc
sbb
add
negb
sti
adcl
pop
and
jge
add
sbb
movsl
jne
xchg
scas
out
enter
aaa
dec
add
fimull
in
aaa
add
add
and
mov
ret
lahf
loopne
add
repz
out
aam
das
add
daa
cmp
movb
gs
clc
mov
popa
lock
outsb
add
pop
add
mov
lahf
sub
test
jmp
add
xor
add
add
negl
add
add
ljmp
sub
add
fimull
lods
mov
inc
mov
xchg
xchg
mov
push
rorl
add
add
int
adc
add
push
add
add
sbb
aaa
arpl
push
inc
add
movsb
jns
daa
pop
add
imul
dec
mov
fdivrl
add
or
inc
arpl
jmp
cwtl
les
add
or
xchg
and
in
cmp
out
out
xor
add
dec
cmp
inc
mov
adc
add
fsubl
sub
and
inc
add
xor
add
add
dec
add
enter
scas
ss
add
add
rcrl
movsb
dec
mov
pop
add
jbe
movsb
sarl
adc
add
add
cld
pop
cmpsl
lahf
cmp
add
mov
xor
mov
jo
loope
js
aas
imul
data16
clc
add
add
out
push
push
aad
xchg
mov
mov
fildl
xchg
sub
test
in
mov
lcall
movsl
shrl
pop
bound
iret
test
mov
add
imul
add
lds
add
cmp
mov
add
sub
pop
mov
jl
test
push
add
mov
imul
imul
add
xor
mov
add
in
lods
cmp
adc
add
or
add
inc
or
and
xchg
les
dec
add
les
add
add
add
add
lret
add
and
add
dec
add
jne
aaa
mov
pushf
adc
add
add
pop
mov
pop
add
push
add
lods
push
inc
out
shlb
add
mov
add
icebp
add
push
add
dec
lret
gs
xchg
test
aad
mov
push
add
gs
aad
lds
mov
push
add
iret
scas
xchg
test
mov
lret
adc
add
inc
add
hlt
lret
and
mov
mov
add
push
xchg
sti
addr16
add
scas
jo
add
add
lock
inc
mov
fwait
or
nop
adc
add
and
int3
int
aaa
xlat
add
jbe
pop
std
add
or
push
hlt
and
add
decb
add
cltd
sub
daa
daa
add
sbb
pop
dec
out
sbbb
mov
add
jb
cmpsl
cmp
xor
add
pop
xchg
add
add
imulb
push
dec
add
inc
add
sti
add
xor
idivb
add
push
ljmp
and
add
inc
lock
add
mov
add
lret
mov
add
sub
sub
leave
mov
jecxz
add
stos
cmpsl
add
insb
add
or
mov
add
test
add
jno
mov
add
into
mov
sahf
inc
outsb
add
das
divb
adc
sarl
adc
add
jo
mov
popa
mov
jne
add
or
dec
add
add
add
ss
inc
add
push
add
test
add
out
add
imul
or
mov
sub
add
es
add
lahf
clc
cmp
test
add
std
scas
js
out
test
cmp
pmaxub
repz
aas
add
inc
add
outsb
add
jae
fiaddl
push
add
add
iret
daa
test
cmpsb
sbb
add
in
sbb
mov
rolb
ror
pop
cmp
in
mov
mov
mov
inc
add
add
add
outsb
add
es
sahf
mov
add
bound
add
inc
add
scas
add
je
or
pop
lcall
inc
lcall
inc
js
mov
adc
xchg
lcall
mov
jl
movsb
call
sbb
mov
in
cmpsb
dec
cmp
out
add
mov
jmp
sbb
rorl
sub
mov
jae
cmp
jb
add
add
pop
add
add
test
in
add
push
add
enter
add
cli
and
add
add
add
jg
mov
mov
movsb
cmpsl
in
loop
inc
adc
add
daa
movb
inc
add
in
lds
test
call
mov
ja
sbb
pushf
mov
in
dec
add
inc
clc
jmp
pushl
cmpsl
mov
jne
add
add
mov
xchg
out
add
inc
add
int
movsb
sub
cltd
dec
add
lahf
add
int
push
add
sub
add
call
add
add
xorb
add
loope
ja
add
hlt
pop
cmp
add
out
sbb
hlt
outsb
add
add
sub
loope
add
add
add
imul
xchg
out
dec
xchg
add
cmc
add
add
jae
add
ss
add
and
mov
jmp
rep
inc
sbb
dec
add
imul
add
je
repnz
pop
imul
pop
sbb
add
add
mov
add
stc
add
addr16
rolb
iret
add
stos
push
lds
into
add
mov
inc
and
add
adc
add
outsb
add
mov
add
add
add
pop
movsb
xchg
outsl
cmp
fnstenv
add
add
into
je
pushf
add
fistpll
unpckhps
xchg
mov
xorb
add
sub
add
fildl
addr16
jge
ljmp
hlt
inc
adc
add
jmp
jmp
add
pop
sbbb
add
data16
jne
enter
and
insl
xchg
daa
in
test
popf
or
movl
imul
stos
rcrl
fnstcw
test
dec
add
add
arpl
push
add
js
out
add
push
add
mov
repz
pop
out
pop
jbe
mov
add
cwtl
int3
out
mov
test
popf
mov
add
sbb
add
add
aam
inc
std
rorb
add
and
add
add
dec
popa
scas
xchg
loopne
dec
add
and
enter
add
clc
push
shrb
daa
mov
fistps
sbbl
add
pop
mov
mov
imul
popa
push
add
or
xor
cld
sub
sub
shr
sub
daa
rolb
bound
and
add
and
rclb
clc
jl
jb
imul
add
adcl
in
add
inc
or
and
add
inc
add
jl
stos
mov
inc
add
pop
adc
xchg
setno
ja
pop
jno
cmpsb
fidivs
cmp
in
add
adc
add
inc
and
add
add
ret
add
mov
inc
add
add
loopne
movsl
mov
cmpsl
ret
ret
push
stos
scas
mov
add
add
mov
add
push
push
add
stos
lds
add
add
popa
cmp
sub
ja
and
xor
das
fwait
and
add
loop
add
add
dec
add
out
mov
shl
add
lock
pop
pushf
clc
lahf
ja
clc
les
adc
cmp
sub
loopne
lea
xorl
add
pushf
adc
add
push
filds
fwait
sub
xor
add
clc
ja
das
add
lds
ljmp
inc
or
stc
mov
add
dec
add
push
add
push
scas
fmuls
add
and
add
dec
push
clc
int
adc
add
xchg
sub
adc
pop
outsb
add
add
loopne
jge
add
add
add
cwtl
out
and
mov
dec
add
movsb
mov
cli
int3
mov
insb
add
inc
sub
incb
push
add
stc
loop
mov
add
insb
add
punpckldq
inc
sbbl
or
adc
jbe
movsb
cmp
sarl
js
adcb
add
cli
imul
outsl
insb
add
mov
add
inc
cmc
mov
xor
add
xchg
outsl
mov
rcrl
mov
out
test
testl
out
jmp
mov
mov
sti
inc
add
fwait
lods
scas
dec
add
cltd
fadds
or
mov
add
imul
inc
xchg
je
dec
add
aam
and
add
mov
add
mov
cmpsl
add
ret
or
fcomp
mov
jl
pinsrw
add
add
outsb
add
jb
in
adc
in
inc
add
jmp
adc
or
sbb
ljmp
add
pop
add
add
loop
iret
push
out
mov
out
add
cmc
add
mov
add
add
fldt
cli
in
add
add
aam
bound
bound
jp
or
xchg
std
out
in
push
add
mov
push
add
rol
mov
dec
xchg
add
add
sbb
call
pusha
add
icebp
lods
repz
add
pop
lret
loopne
fldl
aaa
add
icebp
out
add
push
cltd
jns
in
cld
push
cmp
add
mov
add
pop
fldl
outsb
add
inc
add
add
test
sub
out
add
push
add
fldcw
js
test
ret
add
xor
add
xchg
lods
dec
add
into
add
dec
add
pop
jo
mul
mov
mov
xchg
cwtl
icebp
loope
cmpsl
lahf
dec
add
add
aam
jmp
out
cmc
add
add
xor
test
and
add
pop
add
add
hlt
enter
mov
ljmp
xchg
pop
add
mov
iret
mov
add
add
push
push
add
mov
outsl
lock
jge
or
inc
jae
out
add
add
add
mov
lret
dec
inc
or
repnz
in
push
cwtl
dec
add
hlt
leave
add
add
in
cmp
inc
jg
rcrl
in
cwtl
cmp
xor
dec
add
jns
add
mov
jnp
and
add
roll
push
push
lds
sar
lea
inc
add
push
add
pop
xor
hlt
mov
jmp
ja
add
incb
mov
scas
add
jecxz
aad
push
and
mov
add
xchg
add
add
mov
pop
xchg
rorb
inc
add
lds
add
loop
mov
or
jno
mov
adc
add
push
add
mov
dec
ja
and
pushf
pop
add
push
add
in
sti
nop
cwtl
dec
and
add
iret
or
movsb
xlat
out
pop
inc
nop
cs
jp
add
add
outsb
add
push
sub
lock
clc
push
pushf
ficompl
mov
cs
orb
add
mov
sar
in
int
mov
in
pop
xor
add
add
mov
jge
bound
loopne
adc
dec
push
add
mov
push
add
aas
cmp
inc
add
insl
in
int3
and
add
mov
mov
pop
add
add
add
xor
sbbl
add
or
xor
add
pop
daa
loope
in
jne
adc
fwait
inc
lods
push
add
jecxz
lea
or
sub
mov
ret
mov
jle
push
leave
das
rcrl
add
and
lcall
dec
add
sub
mov
jo
scas
lret
xor
add
ret
mov
inc
add
sbb
addr16
xor
add
add
fists
das
add
imul
inc
add
adc
add
hlt
or
jnp
add
dec
aam
add
sbb
pop
mov
cld
rclb
sub
add
enter
scas
cltd
pop
add
add
rcll
add
stos
add
xlat
loop
jl
or
add
xchg
das
xlat
xchg
mov
inc
aaa
pop
add
add
add
les
mov
gs
test
mov
outsl
push
cmp
cmp
push
push
mov
jge
add
mov
mov
xor
add
les
xchg
add
mov
mov
add
mov
lea
xchg
lahf
or
add
add
sbb
add
xchg
add
sahf
sti
sbb
xchg
mov
add
mov
fidivrl
xlat
sub
iret
xchg
xor
add
int
xchg
add
add
aad
add
add
add
dec
repnz
stc
insb
add
sub
add
sahf
jb
sbb
mov
cmp
mov
scas
xor
add
add
push
add
push
add
data16
ret
test
cmpsl
mov
jmp
add
insl
pusha
add
push
add
mov
mov
push
add
cmpsb
ficompl
add
pop
pop
add
in
add
mov
add
add
in
add
add
add
testl
push
mov
cmp
cmpl
clc
mov
roll
jbe
xor
xchg
mov
add
or
inc
jo
jo
xor
add
mov
repnz
adc
xchg
dec
add
clc
shrb
in
mov
dec
jg
cmpsl
in
scas
adc
add
addr16
adc
fistpl
add
jge
add
roll
push
mov
pushf
hlt
add
pop
add
xor
dec
add
or
push
aad
mov
pop
test
imul
sbbb
xchg
lods
dec
push
add
das
pop
add
add
outsb
add
mov
movsl
adc
and
loope
push
add
roll
pop
add
enter
push
loop
xchg
pop
xor
add
lret
add
jg
cmp
xchg
xor
add
add
faddl
mov
add
mov
mov
add
jp
mov
out
loopne
test
add
jp
adc
add
add
mov
scas
sbb
aad
jae
add
dec
add
jbe
fstps
jmp
cmp
divl
sahf
add
add
xor
add
xor
pop
mov
jmp
js
cmc
push
add
add
add
int
insb
add
imul
movsl
pusha
add
rorb
fnstenv
leave
dec
and
add
add
orb
out
mov
jne
pop
fwait
add
add
fiadds
daa
sahf
add
cmpsb
mov
test
add
add
xchg
pop
add
push
add
pop
lock
xor
add
repnz
imul
or
mov
aam
and
or
push
add
adc
add
lcall
sub
lcall
and
pop
add
movsl
xchg
cs
rcll
mov
mov
aaa
jle
pop
js
push
push
call
test
push
add
popl
sub
pop
add
sbb
add
add
push
insb
add
xor
out
mov
jns
mov
aam
cs
rep
add
cmc
repnz
add
inc
add
and
add
adcb
out
scas
xchg
out
add
lds
int
add
add
aad
xor
add
cli
into
mov
add
sub
add
add
xlat
xchg
stos
pop
sub
lods
push
rorb
jle
adc
add
out
sub
sbb
mov
sub
cmp
lea
push
add
or
cmp
hlt
enter
jnp
add
add
sub
jmp
outsb
add
add
and
ret
jbe
in
cltd
sbb
outsb
add
add
add
mov
pop
sub
add
jb
jl
sahf
pop
fildl
icebp
add
pop
add
and
add
push
mov
lret
mov
adc
add
mov
add
add
add
push
je
cmpl
inc
pop
sub
repz
xchg
aaa
fiaddl
cmpsb
mov
add
cmp
fldenv
push
add
push
add
jae
mov
cmpl
add
das
add
add
sbb
js
pop
push
add
add
fs
or
pop
add
add
lock
std
sbb
adc
dec
add
leave
add
dec
add
mov
add
push
add
adc
mov
add
fdivl
cltd
jb
in
xchg
or
stos
in
int3
lods
popf
cmp
cmp
adc
mov
sbb
lods
xor
add
lods
push
add
add
add
add
add
pop
add
add
or
pop
add
fcoms
sub
dec
add
add
mov
add
mov
aaa
popa
add
js
shrb
out
aas
mov
sbb
fildll
dec
add
add
push
pop
in
cmp
test
sbb
out
es
add
add
sub
movsl
imul
jo
jo
push
add
lock
jle
imul
pop
add
loope
sub
xchg
add
test
mov
add
adc
add
push
add
pop
sub
sbb
xchg
add
fisubl
mov
dec
add
mov
lock
sub
mov
clc
insl
sub
mov
into
and
xchg
add
mov
add
add
daa
mov
aam
out
sbb
sti
mov
add
add
stos
xchg
mov
jo
jae
cmpl
jl
enter
add
push
in
sbb
cmp
pop
add
cltd
mov
add
popa
add
outsb
add
stos
mov
sbb
inc
xchg
in
xlat
rcr
leave
aas
adc
add
gs
sbb
push
add
xchg
imul
add
mov
fnstsw
test
out
jns
imul
add
xchg
add
addb
add
inc
add
add
or
pop
aaa
or
push
add
add
hlt
sbb
and
out
outsl
je
out
push
add
push
inc
add
add
mov
push
add
out
test
cli
jae
pop
add
sub
xchg
out
mov
jg
arpl
push
rorl
sbb
js
mov
add
sbb
mov
mov
ror
fstp
movsb
push
outsb
add
add
xchg
add
sbb
cmpb
mov
xchg
ljmp
add
fisubrl
dec
add
aad
aaa
sti
add
stos
leave
or
scas
stos
adc
dec
add
add
int3
add
data16
mov
add
sbb
xlat
inc
mov
add
cmp
mov
add
adc
add
push
mov
inc
mov
jns
fbstp
jae
push
dec
add
test
xchg
push
add
push
pop
push
add
sub
push
add
pushf
mov
js
icebp
mov
add
sbb
in
test
mov
pop
add
adc
fists
mov
and
mov
adc
xlat
pop
add
push
and
test
xor
clc
push
add
push
add
inc
sbb
arpl
fisttpl
pusha
add
cmp
xchg
add
stc
pop
inc
add
enter
sbb
sbbb
dec
add
pop
add
add
inc
add
push
add
add
push
add
jne
pushf
or
fmuls
add
loope
add
add
or
mov
call
sbb
cmp
add
stos
test
lret
mov
jl
xchg
push
add
add
jmp
js
mov
push
add
imul
ret
add
add
add
or
add
add
data16
in
fisttpll
dec
add
sub
xor
cmp
movsl
movsl
xchg
gs
es
sub
test
push
add
fiadds
xor
add
sbb
sbbl
and
add
add
hlt
mov
inc
add
jl
cmp
cmp
ror
mov
add
add
ret
xor
sub
je
lcall
out
xchg
std
dec
inc
add
int3
sbb
mov
out
or
sarb
jnp
pop
add
hlt
imul
add
lret
add
add
int3
cltd
inc
add
sahf
xor
add
or
add
call
add
add
xor
add
jae
inc
add
movl
add
add
add
sub
mov
and
add
add
dec
add
notb
xchg
sahf
stos
movsl
cli
std
je
pusha
add
add
sbb
clc
push
add
dec
add
add
mov
adc
push
pop
add
or
addl
pop
call
add
adc
add
cwtl
addr16
sbb
fnstenv
or
add
testb
insl
pop
mov
add
mov
add
add
leave
testb
sarb
mov
pop
addb
adc
mov
repz
add
ret
aaa
roll
cld
cmp
adcl
cmp
add
add
in
add
sub
push
dec
add
mov
sub
ficompl
add
scas
into
std
mov
or
adc
lock
mov
push
cmp
add
lea
loope
movsl
ljmp
jns
pop
add
add
mov
fdivs
push
add
push
add
add
adc
add
add
pusha
add
lcall
add
xchg
repz
add
add
add
dec
add
lds
rolb
cmpsl
jae
add
adc
icebp
aad
cld
push
mov
xchg
pop
ficoml
pop
lret
insl
scas
icebp
and
add
xchg
out
adc
add
mov
mov
pop
sub
xchg
rolb
mov
mov
add
lahf
add
mov
pop
in
cmp
or
gs
and
add
repnz
aaa
out
add
and
add
push
add
add
inc
mov
and
add
push
push
pop
add
mov
push
add
daa
hlt
add
xchg
shll
mov
sbb
fucomp
cld
lods
and
sbb
inc
add
add
mov
add
js
push
add
ffree
mov
add
in
sbb
xchg
rol
cltd
inc
add
lods
or
shrl
mov
ljmp
push
add
add
add
and
jne
or
inc
push
add
jp
jecxz
mov
push
repz
add
cwtl
inc
add
add
mov
or
mov
push
add
mov
add
cwtl
lock
fiadds
push
add
call
add
test
add
cmpsb
mov
dec
test
mul
push
mov
cmp
lcall
adc
add
in
bound
jo
adc
add
add
add
test
cld
inc
add
and
adc
pop
mov
rclb
add
outsl
mov
xchg
adc
add
mov
add
inc
add
push
add
xchg
repnz
add
mov
int
shl
pop
add
in
dec
test
pushf
pop
add
add
fisttpl
sub
iret
inc
fldenv
cltd
add
add
pop
pop
add
or
into
lock
add
add
mov
movsl
out
repz
mov
sbb
mov
add
mov
xchg
add
dec
cmp
add
call
add
push
outsl
add
add
cmp
and
add
mov
xchg
mov
add
add
cmpsb
add
add
mov
mov
ja
movsb
out
add
lods
fsubl
incb
cwtl
out
and
add
pushf
jmp
out
lret
enter
das
addb
fistpl
shll
leave
add
aaa
add
mov
arpl
cmp
push
add
pop
fadd
mov
sub
insb
add
std
out
dec
add
mov
xor
and
add
cmpsb
inc
add
add
fldenv
mov
add
add
add
add
adc
add
adc
add
jl
push
mov
jb
rclb
add
jne
add
cmpsl
pop
add
xchg
add
cmpsb
ljmp
test
mov
sub
add
push
add
add
add
scas
icebp
mov
fistps
ljmp
jge
sub
fidivs
pop
mov
xor
add
mov
jne
add
push
add
pop
add
add
push
add
or
sub
mov
jns
dec
add
loopne
xlat
cmp
mov
sarb
lods
jo
pop
xchg
add
add
cmpb
mov
mov
test
xchg
sahf
hlt
or
cmp
into
das
iret
sbb
mov
int3
push
add
add
je
pop
and
add
icebp
push
add
lods
fwait
add
add
add
arpl
sarb
add
jge
inc
das
and
js
xor
add
add
and
add
jp
xchg
push
and
jne
or
push
add
test
add
mov
clc
fwait
xchg
aas
outsb
add
sahf
mov
sarl
xchg
cmp
push
inc
mov
mov
mov
add
out
inc
loop
movsl
pushl
push
jg
dec
insl
stos
arpl
mov
inc
bound
std
stc
push
sbb
mov
aaa
das
add
fwait
lds
roll
adc
add
sbb
lods
movsl
or
mov
add
xorl
add
jecxz
add
add
aaa
add
xor
add
or
adc
pop
test
jl
push
and
popf
imul
mov
mov
xor
lret
inc
add
add
add
add
pop
incl
xor
add
add
inc
cmp
fidivrs
cmp
lcall
or
push
add
mov
mov
mov
in
add
jns
mov
enter
push
add
jb
pop
mov
jmp
add
int
jnp
xchg
test
popa
add
jo
mov
hlt
add
cmp
dec
add
add
mov
add
aaa
dec
add
pushf
jbe
shr
jl
jle
mov
jb
stc
enter
pop
subb
or
cli
sbb
roll
mov
addl
pop
mov
dec
add
mov
push
add
les
jmp
xchg
test
mov
in
jg
push
pop
add
pop
in
sarb
add
cli
out
mov
scas
arpl
sbb
outsb
add
add
mov
ja
dec
add
ja
dec
add
xor
daa
add
ds
cmpsl
test
sub
adc
add
ret
mov
pop
add
add
pop
or
int3
mov
js
cmpsb
mov
add
popa
adc
pop
imul
mov
repz
push
jecxz
and
jmp
aas
arpl
or
cld
sub
fsub
outsb
add
jo
stos
arpl
add
rolb
adc
add
pop
add
cmp
push
lods
xchg
mov
add
mov
push
add
add
sbb
mov
pop
add
pop
pop
out
mov
add
lret
add
hlt
shll
arpl
jecxz
add
cmp
pop
aaa
pushf
add
mov
xchg
pop
sbb
xchg
jae
sub
ss
lock
or
push
add
add
adc
add
das
int3
sbb
loop
cmpsb
sbb
imul
icebp
mov
inc
add
inc
pop
icebp
jb
in
clc
call
je
mov
add
data16
cmp
lcall
add
adc
test
xchg
jmp
mov
xchg
add
movsb
leave
xor
add
sub
imul
cmp
add
add
add
mov
add
xor
les
cmp
std
insb
add
add
add
in
mov
icebp
add
add
add
add
mov
inc
add
inc
add
add
ljmp
stc
add
or
int3
sub
les
or
hlt
sbb
loope
push
add
xor
add
cld
add
fistpl
push
xchg
inc
add
jnp
push
and
push
add
fdivl
mov
sub
dec
add
fisubrs
pcmpeqw
jnp
dec
add
or
xchg
pop
testb
pop
add
add
out
test
xor
add
fildll
ret
xlat
in
push
ja
xor
add
inc
sti
lods
std
and
imul
add
cmp
xor
add
bound
movsb
mulb
sub
movsl
stos
adc
xchg
inc
add
sub
xor
mov
dec
add
add
mov
imul
add
pop
cmp
and
aad
dec
add
into
into
lret
add
in
add
js
adc
add
add
cmp
add
outsb
add
inc
add
cld
sbb
or
mov
sbb
inc
inc
add
add
stos
mov
scas
dec
hlt
xchg
mov
and
jne
xchg
or
scas
adc
add
add
setp
jbe
rclb
dec
add
lock
add
cmpsl
and
add
or
movsl
loopne
mov
movsl
lods
add
add
pop
add
xchg
xchg
scas
les
jae
add
push
and
push
inc
add
out
add
not
inc
mov
pop
sub
push
adc
sbb
aam
add
add
and
js
es
out
ss
andl
adc
mov
and
add
stos
ja
inc
add
and
add
add
lock
repz
add
add
scas
pop
in
push
add
dec
ds
adc
add
add
je
mov
jmp
mov
dec
in
dec
add
sahf
dec
add
xor
mov
add
and
add
out
lcall
add
aad
mov
cmp
enter
add
adc
add
or
arpl
add
push
add
cmp
cmpsb
add
mov
add
hlt
outsb
add
cmpsl
fistl
add
mov
out
mov
add
add
sbb
cwtl
test
mov
jno
add
shl
pusha
add
jp
cltd
add
add
cmc
pop
add
xchg
push
notb
mov
add
test
gs
mov
or
pushf
in
outsl
jo
aam
add
jge
adc
add
cmp
push
add
fmuls
packuswb
inc
add
xchg
add
push
add
movsb
add
mov
js
test
cld
xchg
fnstsw
insb
add
std
sub
mov
in
popl
int3
sti
or
xlat
stos
mov
or
and
sub
or
mov
jle
adc
add
dec
xchg
add
add
push
add
add
mov
jecxz
add
add
mov
mov
add
add
add
xor
add
add
cmp
cltd
add
and
scas
mov
add
inc
push
add
pop
mov
icebp
loopne
or
ret
incb
pusha
add
add
add
add
sbb
ficompl
mov
stc
mov
add
movsl
add
add
add
and
add
ret
xorl
jp
cwtl
and
add
mov
add
add
xchg
mov
add
jecxz
jl
xor
add
test
mov
sbb
enter
xor
loopne
mov
out
add
mov
fcmovu
push
add
dec
subl
add
add
add
lahf
cmp
mov
push
sarb
scas
push
add
lret
or
or
stos
mov
add
push
add
add
add
out
add
lods
std
xor
add
dec
jl
int
in
lret
popa
jecxz
add
sbb
loop
mov
call
inc
lods
sti
jmp
push
dec
add
inc
pop
jp
test
mov
and
xchg
jp
mov
and
add
add
xor
add
roll
dec
insb
add
cmp
jle
sub
add
add
add
or
xor
add
in
decl
scas
sub
dec
call
push
add
jmp
stc
jns
mov
sbb
mov
push
add
cmp
cmpsl
shl
pop
add
cmpsb
out
gs
int
cmpsl
out
mov
pop
add
sub
add
in
mov
sbb
mov
add
rcr
push
add
je
mov
mov
test
notb
mov
xchg
in
in
jb
arpl
arpl
pop
dec
add
add
pop
jecxz
add
xchg
jmp
add
dec
add
push
add
adc
pop
add
incl
test
add
and
jmp
pusha
add
or
sti
bound
cmp
xchg
add
mov
add
dec
add
test
arpl
mov
movntps
int3
add
add
xor
add
jae
rclb
sbb
mov
or
mov
std
imul
add
fistpll
sub
jnp
cmp
add
add
mov
gs
lahf
jle
stc
clc
repz
add
cli
cmp
add
add
std
arpl
cmpsb
in
jl
add
inc
add
xlat
into
movsl
bound
cmp
sarl
sbb
push
add
scas
popa
lods
cmp
sti
or
imul
and
add
push
add
and
add
dec
add
ds
daa
sldt
pusha
add
cmp
addr16
and
int3
out
pop
add
adc
js
sub
testb
bound
or
jne
add
faddl
adc
add
test
dec
add
call
dec
add
add
adc
add
cld
add
jmp
fcom
pop
lock
mov
add
add
popf
sub
add
stc
jnp
add
test
test
movsl
mov
sahf
add
or
imul
add
xor
fistl
in
pop
add
jnp
cmp
les
movsb
xchg
push
mov
nop
xchg
lcall
add
add
imul
addl
sub
push
je
push
add
add
pop
add
jnp
inc
loop
jmp
out
inc
add
push
add
push
add
jae
in
rcrl
shlb
add
mov
mov
lock
std
dec
dec
adc
movsl
not
ret
in
jae
stos
gs
sub
sbb
jg
jne
or
vpsrad
sub
lahf
xor
jl
aam
push
lcall
sub
clc
sub
rcrl
repz
loop
add
add
pop
jge
jmp
ficompl
in
dec
add
add
xlat
add
add
lahf
xchg
mov
add
push
add
filds
push
inc
add
lret
add
add
sbb
add
mov
dec
add
pushf
cmp
fisubrl
add
jne
mov
or
add
xchg
test
imull
int3
ss
add
sub
mov
add
push
roll
add
add
enter
dec
mov
mov
push
loop
jmp
add
add
add
repnz
sub
push
add
cwtl
aas
loop
in
popa
jnp
aam
xchg
add
add
test
pop
pop
fwait
xchg
sahf
sbb
insb
add
xor
pop
add
insl
jae
inc
add
imull
test
dec
add
cmpsl
mov
cli
mov
dec
add
mov
inc
add
mov
push
jecxz
inc
hlt
nop
jne
loope
xor
add
jge
inc
add
popf
sbb
cmp
xchg
pushf
out
add
cmp
scas
clc
shl
adc
sub
out
add
push
add
call
add
adc
add
add
add
push
adc
add
lock
xor
scas
clc
mov
in
in
lret
add
adc
xchg
addr16
jg
add
mov
add
fnstcw
mov
jo
push
sti
add
das
sti
lahf
inc
add
lods
push
dec
outsl
inc
sti
fwait
jecxz
mov
xor
add
ficoml
xchg
add
mov
add
jae
add
je
outsb
add
sbb
sti
dec
ret
daa
cli
add
data16
jmp
add
cmpsb
mov
out
into
adc
jmp
aad
add
add
out
icebp
mov
mov
xchg
cwtl
mov
sub
add
iret
mov
mov
movlps
add
sub
repz
rorl
sbb
pop
out
scas
repnz
or
xchg
add
inc
add
sbb
add
pop
stc
add
insl
push
add
add
lods
subb
das
pop
add
lds
cmpsb
cmp
sti
push
add
pusha
add
in
add
das
mov
push
add
cld
cmp
jns
mov
lcall
add
xchg
and
out
or
loop
mov
adc
add
rorb
add
adc
xorl
js
or
mov
add
imul
out
out
sbb
pop
add
xchg
test
adcb
add
add
push
add
add
lahf
pusha
add
pop
popf
add
hlt
dec
add
aad
add
add
cmp
inc
xor
add
out
ret
imul
fdivrl
call
loop
xchg
mov
pop
add
test
pop
loope
mov
out
dec
sub
aad
add
test
xchg
pop
loopne
inc
add
add
jg
mov
push
add
add
repz
pop
daa
inc
add
test
add
add
add
cmp
push
mov
add
testl
orl
mov
and
xor
add
mov
cld
fcmovne
add
mov
push
add
pop
popf
add
inc
add
js
pop
push
add
add
push
add
add
rorl
rorl
add
add
add
jecxz
es
jg
cmpsb
lods
imul
xor
add
xchg
scas
movsb
push
xchg
xor
dec
jmp
movsl
rorl
cmp
addr16
sbb
cmp
out
add
add
rcrb
fadd
mov
add
add
fbld
test
std
loop
add
ficoms
push
add
or
add
nop
jb
jo
je
adcb
aad
sbb
mov
arpl
sub
stos
xchg
out
pushf
adc
loope
sub
dec
fcmovnbe
pop
cltd
add
add
cmp
test
test
jle
xchg
inc
add
out
add
outsb
add
add
das
ss
cmp
xor
add
adc
add
mov
lock
mov
mov
leave
xchg
push
lods
add
ds
xor
add
adc
add
roll
sbb
xchg
icebp
in
dec
call
lahf
icebp
add
add
dec
add
add
push
je
sbb
scas
icebp
push
dec
int
add
jns
add
out
or
sub
lods
add
testl
lds
add
int3
add
add
add
mov
pop
sbb
icebp
dec
add
je
ficoms
repz
mov
mov
mov
xchg
out
add
adc
mov
add
sti
aas
xchg
loope
repz
shrb
mov
add
js
ror
std
sub
gs
into
push
mov
xor
add
add
add
loop
in
push
imul
add
lret
filds
and
stc
dec
add
mov
jae
je
cmc
xchg
sub
loope
sub
stc
rclb
enter
xor
add
mov
add
xor
cmpsb
rcll
nop
add
add
xchg
add
add
dec
add
add
sub
lds
add
imul
cld
aam
mov
mov
add
add
jmp
ds
popa
lods
sti
lcall
jb
test
add
pop
add
add
outsl
icebp
push
add
sub
nop
mov
rolb
pusha
add
fsub
rorl
iret
mov
add
addb
add
imul
add
or
fcmovnbe
and
lret
idivl
or
mov
mov
outsb
add
add
adc
push
add
inc
add
push
add
dec
add
add
pusha
add
jae
ror
outsl
xor
add
sbb
add
pop
in
inc
add
sbb
stos
pop
add
les
hlt
jl
aad
nop
pop
xchg
xchg
jecxz
fidivs
fwait
lret
mov
loope
mov
out
add
leave
and
popf
icebp
adc
add
add
inc
add
daa
mov
add
aaa
and
sub
loopne
add
add
pop
add
pushl
and
roll
add
in
add
cltd
inc
add
push
add
enter
adc
add
clc
and
test
add
jnp
and
dec
pop
fstpl
rcll
aaa
in
mov
add
and
add
add
add
pop
rolb
adc
jnp
add
mov
lods
mov
add
mov
add
data16
and
add
mov
cmp
or
subl
add
fs
cld
aas
lods
adc
sbb
mov
adc
push
add
mov
xor
or
stc
adc
mov
mov
sahf
add
repz
jbe
jmp
push
xor
add
ja
add
xchg
stc
sti
xchg
sbb
call
scas
in
cmc
repz
cmp
arpl
add
jns
add
inc
add
push
add
add
or
mov
add
insl
cmp
add
add
inc
push
scas
subb
add
add
cltd
mov
pop
cmp
mov
adc
mov
push
add
es
dec
and
add
add
cmp
es
add
imul
stos
jmp
mov
adc
add
add
sbb
out
es
add
lahf
test
add
pop
mov
xor
add
add
pop
xchg
and
add
stos
das
or
js
sub
insb
add
jo
aam
or
inc
dec
add
dec
add
add
add
loop
jmp
sahf
add
pop
aas
add
sbb
loopne
pop
add
and
add
push
add
mov
fld
lods
je
and
add
in
add
sbb
and
add
add
aad
sub
mov
push
add
movsb
daa
fiadds
xchg
xchg
cmp
leave
lea
xor
dec
add
insl
enter
cwtl
add
test
mov
push
add
add
add
cmp
out
add
add
ss
out
add
and
add
push
les
stc
sarb
sbb
jg
pop
test
fsts
add
add
fstps
add
xchg
test
sbb
mov
mov
pop
add
cmp
pop
les
mov
xor
mov
dec
add
loopne
in
sub
adc
add
add
dec
add
jl
in
or
add
or
sbb
xchg
jo
add
add
mov
movsb
jae
ret
and
sub
pusha
add
pop
add
pop
cmp
xor
add
ja
push
add
cld
add
out
inc
ret
jp
fwait
orl
add
scas
int3
xchg
insb
add
jecxz
or
push
nop
pop
add
addr16
movb
jb
cli
mov
mov
adc
add
fnsave
add
fstps
ret
jbe
jo
adc
add
icebp
lahf
fwait
data16
enter
rolb
add
sub
adc
add
roll
in
pop
cmp
jg
and
imul
jno
and
push
add
arpl
in
mov
push
add
adc
add
add
pusha
add
inc
add
and
add
and
jnp
fisubs
push
add
cmp
xlat
push
add
add
add
or
add
add
add
adc
mov
cmp
das
pop
add
add
outsl
mov
add
add
mov
add
xchg
roll
or
dec
and
lods
arpl
testb
ss
add
inc
add
bound
pop
int3
movsb
mov
xchg
in
rorb
add
add
sahf
inc
cld
into
cs
aad
or
adc
inc
jnp
add
add
loop
rolb
add
push
add
jne
add
mov
xor
int3
mov
scas
cmp
push
add
movsl
in
mov
cmp
or
ss
add
test
adc
pop
repz
fcoml
cmp
in
cmpsb
inc
sub
out
cmp
imul
cwtl
add
sbb
call
adc
cmpxchg
xchg
add
popa
pop
addb
call
repnz
jp
cmp
push
add
fstps
add
lods
push
add
add
leave
add
fstps
out
sbb
cmc
mov
lods
imul
add
cmc
xchg
mov
mov
mov
add
mov
add
popf
add
mov
add
push
add
add
out
xor
add
sbb
sahf
sbb
cmpsl
cmp
enter
add
addl
scas
pop
pop
add
mov
jno
mov
mov
mov
or
add
xchg
cmp
xor
enter
add
into
cmp
cmpsb
push
mov
enter
dec
pop
xlat
addr16
mov
fwait
mov
int
add
sbb
sbb
call
ficomps
xchg
pop
add
mov
adc
and
int
mov
je
movsb
fbstp
aad
sldt
push
add
add
adc
add
fadds
mov
insb
add
test
jo
sti
pop
add
add
add
add
jo
jns
cmp
inc
scas
sub
or
mov
add
mov
add
xor
out
jg
add
cmp
xchg
lahf
shr
pop
add
pop
mov
and
add
add
dec
jne
push
add
pop
and
and
add
rcl
inc
js
cmp
push
add
jg
fiadds
jp
cmc
inc
add
mov
add
add
out
add
cmp
sbb
add
add
fcoms
stc
enter
add
mov
dec
sti
pop
add
push
xor
add
ret
add
add
popa
mov
adc
add
subl
cmpsl
out
or
iret
repnz
xor
cmp
xchg
xor
pusha
add
add
add
add
sbb
add
cltd
sbb
nop
jl
flds
mov
add
nop
sahf
mov
or
shlb
mov
popl
mov
inc
popf
add
add
data16
addr16
jb
xor
dec
add
sti
push
imul
mov
add
xchg
arpl
add
or
out
addl
insb
add
test
arpl
fisubs
add
add
add
movsl
mov
pop
add
jle
mov
jo
fmuls
add
pop
add
mov
add
add
out
cmc
stc
pop
add
add
js
add
add
dec
ljmp
push
adc
iret
sbb
xor
add
loope
xchg
add
jl
testb
xor
xchg
pop
stos
mov
jmp
add
mov
xchg
ljmp
int3
jae
std
add
int3
outsl
and
add
add
add
xor
add
bound
and
add
lea
data16
sar
rol
sbb
scas
imul
clc
rorl
mov
push
mov
inc
mov
out
fadds
scas
add
add
int3
sub
sbb
ss
ficoms
scas
xor
xchg
lds
rolb
add
push
pop
fcoml
push
add
push
mov
iret
add
push
mov
pusha
add
pop
mov
add
add
lret
jae
jmp
adc
add
sub
sub
lret
es
add
add
shl
sbb
lret
mov
int3
arpl
addb
divb
inc
xor
jmp
add
out
mov
cmc
sub
and
add
out
icebp
xchg
mov
hlt
fsubrs
fisttpll
sub
out
push
add
stos
add
push
pop
rolb
xor
add
add
xchg
shrb
fsubl
mov
rolb
mov
add
add
or
cmpsb
lods
jns
ja
add
cmpsl
jge
ljmp
repnz
fsubrs
mov
adc
add
faddl
sti
cmp
add
xchg
inc
dec
add
push
push
add
xlat
ljmp
push
add
cli
call
inc
add
call
test
inc
inc
add
std
mov
mov
pop
pop
add
lods
add
jmp
roll
add
add
fcoms
add
dec
add
cmp
jno
add
stos
add
add
add
and
nop
daa
and
inc
add
cltd
add
add
inc
add
push
add
add
test
inc
popa
xor
add
add
jmp
rclb
xor
loopne
jp
xchg
pop
cmpsl
add
add
add
imul
lods
cmpsl
ret
mov
int
add
pushl
out
add
sub
fildl
xor
xor
pop
loop
push
mov
add
add
add
xchg
out
or
xor
add
in
cld
mov
fldl
jle
cli
adc
lds
aam
ret
cltd
cmp
pop
xchg
lret
lldt
mov
sub
add
outsb
add
in
add
add
inc
add
aaa
lods
add
std
mov
sbb
mov
mov
pop
add
arpl
lock
add
cld
iret
jge
add
add
add
cmp
add
lods
dec
add
push
add
push
add
lds
add
sbb
mov
mov
jg
inc
push
add
roll
jge
cli
jmp
sbb
and
add
out
sbb
cli
mov
mov
mov
add
or
dec
inc
add
lea
adc
add
cmp
cwtl
loopne
add
or
icebp
xlat
mov
pop
outsb
add
stc
mov
add
in
adc
push
add
pop
jecxz
or
add
insb
add
mov
fsubp
aam
movsl
inc
add
test
add
mov
sub
sub
leave
dec
jp
mov
jnp
push
add
lret
jge
cmp
mov
push
add
ljmp
push
push
add
popa
pusha
add
add
cmp
or
or
add
mov
imul
sar
test
add
mov
push
add
mov
addb
add
cmp
rcrb
add
popa
add
add
ja
sti
lds
and
adc
aad
cmp
mov
mov
xchg
fs
aad
jl
mov
sbb
pop
cmp
outsb
add
and
add
int3
add
add
les
fistl
lock
add
filds
push
add
aas
pop
add
stos
test
pushf
add
cmpsl
aas
pop
lret
mov
mov
add
mov
das
insb
add
add
repnz
stos
or
repz
mov
loopne
add
mov
shlb
je
cmp
xchg
ljmp
shlb
test
outsb
add
pop
add
sti
add
or
add
mov
adc
add
stc
cmc
add
push
or
mov
jg
push
add
arpl
fstps
add
mov
insl
insb
add
rcrb
fcoms
jbe
ret
mov
int
je
test
or
data16
and
outsl
cmp
out
xor
push
add
gs
xor
faddl
cmpsb
add
add
xchg
insb
add
add
adc
add
mov
nop
add
and
add
movsb
xchg
mov
nop
xchg
xchg
dec
add
mov
andb
add
adc
add
repnz
mov
add
mov
stos
jge
xchg
add
cli
outsl
rcl
dec
add
push
loopne
add
add
sub
icebp
add
int
jl
mov
xchg
or
cmp
add
add
sub
inc
add
add
add
popa
mov
xor
xchg
mov
sbb
call
dec
pop
and
jg
fcomps
cmp
cli
xchg
ret
ret
sub
mov
jns
and
add
dec
stc
push
add
xor
add
push
add
aad
lea
cmp
sub
data16
jnp
adc
xor
out
in
shlb
add
xor
lods
or
adc
dec
add
pop
add
roll
andl
mov
push
mov
dec
add
mov
js
mov
cmpsb
dec
gs
add
xor
add
sahf
mov
add
and
adc
pop
push
in
push
das
mov
iret
add
cld
mov
popl
pop
mov
mov
fists
jle
mov
inc
add
ss
add
xor
add
pop
mov
pop
sub
xlat
insl
stos
cwtl
push
sbb
pop
add
add
cmpsl
push
arpl
mov
jae
faddl
dec
add
lock
push
pop
mov
mov
adc
lahf
add
mov
idivb
or
jno
add
xorl
add
icebp
dec
add
or
out
shlb
pop
add
add
jg
imull
mov
adc
in
insb
add
jecxz
sub
xor
add
data16
xor
add
bound
xor
push
arpl
mov
add
fwait
lea
adc
push
out
add
lahf
sub
mov
add
cld
into
pop
xchg
ret
xor
add
xchg
add
jle
dec
inc
add
add
fcmovnu
gs
push
add
mov
dec
add
add
cmp
dec
add
test
add
sub
push
jl
jae
dec
add
xor
addr16
in
aam
in
in
into
popf
js
pop
add
sbbl
xor
add
xor
add
push
add
rol
pop
gs
and
fadds
pop
je
out
arpl
add
sub
popf
fsubl
sub
sub
push
add
add
dec
add
add
inc
add
add
fidivs
push
add
xor
add
arpl
ret
sbb
fisubrl
ljmp
cmpsb
add
adc
lret
sbb
pop
add
mov
neg
aad
add
sbb
mov
mov
repz
in
sbb
hlt
mov
popa
cmp
cld
or
or
mov
mov
lret
jns
mov
xchg
push
mov
adc
mov
and
add
mov
negb
addr16
add
ja
xchg
in
stos
pop
add
jle
ljmp
mov
add
inc
add
aam
bound
ljmp
and
data16
jbe
pop
aaa
and
pop
faddl
movsl
adc
arpl
call
scas
jl
arpl
andb
add
roll
scas
cmp
inc
aas
jno
int
xchg
stos
mov
dec
add
adc
in
mov
xchg
popf
inc
adc
add
rcll
add
pop
add
shrl
add
inc
lahf
mov
and
lret
add
dec
push
push
add
add
fistps
add
add
aas
mov
dec
and
add
cmp
leave
xchg
ss
add
orl
mov
fdivs
adc
add
xchg
dec
add
xchg
add
out
sarl
cltd
lods
movsb
cmpsb
cmpsl
sub
xchg
pop
stc
test
gs
add
push
add
fsubs
fwait
mov
mov
add
add
arpl
in
iret
add
push
and
add
mov
push
add
push
add
testb
inc
add
dec
add
pop
add
pop
mov
add
repnz
test
data16
data16
mov
xchg
dec
mov
or
mov
inc
add
cltd
fdivrl
sbbl
add
add
push
add
aas
ja
add
aas
bound
mov
sbb
push
inc
add
mov
adc
add
mov
fwait
scas
xchg
popf
arpl
add
outsb
add
add
insl
les
or
les
iret
push
pop
add
addb
ja
add
movsl
add
add
jae
ret
add
add
add
adc
push
call
outsb
add
std
xor
pop
add
dec
add
movsl
scas
out
add
sbbb
flds
testb
add
or
add
add
dec
add
cmc
insb
add
sub
movsb
outsl
sarl
movsl
movsl
cmp
xchg
push
add
gs
dec
add
mov
call
push
repnz
das
jne
cmc
pop
pop
add
add
dec
add
add
cmpsb
pop
cli
add
ljmp
movsl
sub
addr16
icebp
and
lea
or
cmp
cmpsb
mov
mov
mov
daa
int3
add
fisubs
jb
lods
fisubs
push
out
xor
scas
aas
cmp
fdiv
lahf
mov
or
testb
int
mov
aam
mov
test
jp
mov
jno
lock
jge
fistpl
insb
add
jl
and
add
xor
mov
jb
cmpsl
mov
add
push
in
jae
in
add
out
ret
in
add
inc
add
adc
hlt
daa
pop
add
ficoml
add
mov
enter
pop
rolb
add
inc
add
mov
mov
ret
add
into
xchg
je
xor
icebp
pop
std
data16
mov
push
add
arpl
out
inc
add
int3
cld
sub
mov
inc
add
jmp
stos
add
aas
add
push
add
clc
mov
data16
push
cld
add
jl
ret
sti
scas
push
xor
add
mov
into
add
sti
mulb
inc
sbb
add
jge
add
adc
add
inc
in
outsb
add
fsub
aaa
pop
add
fildl
or
enter
mov
lds
sbb
xchg
dec
cli
das
mulb
and
popa
int
je
mov
dec
fstl
in
pop
add
sti
ret
or
dec
es
add
mov
cmp
cmp
xlat
dec
add
sub
rclb
enter
pop
pop
mov
push
add
sbb
add
je
xchg
mov
into
dec
add
mov
cmc
xor
add
add
sub
and
add
dec
pop
add
negl
mov
in
fists
and
add
mov
add
adc
add
repnz
aas
or
add
add
dec
mov
imul
jecxz
cmc
push
add
push
add
sahf
outsb
add
gs
or
push
add
add
add
ljmp
lret
pop
loope
popf
subl
sub
and
mov
add
out
jns
cmp
sub
pop
daa
add
add
lret
jbe
add
mov
divb
fiaddl
repz
mov
sbb
add
sbb
notb
dec
add
and
lds
push
and
jp
sbb
add
add
adc
aas
adc
add
data16
mov
mov
push
lfs
out
pop
xor
add
mov
ficomps
add
faddl
arpl
ret
es
fsub
jl
nop
mov
in
lods
cmp
pop
add
pop
aam
add
and
jbe
mov
jg
mov
sahf
incb
addb
cli
add
stos
mov
pop
add
mov
stc
add
cwtl
lret
out
add
push
add
cld
mov
dec
add
mov
lcall
add
mov
add
xor
add
sbb
testb
leave
aas
imul
lock
add
cwtl
ret
addl
xor
test
mov
cmp
and
mov
movsl
daa
fwait
add
jle
loope
das
mov
xchg
push
add
in
in
add
sbb
add
shlb
add
divb
imul
xor
int3
mov
mov
add
mov
ljmp
scas
arpl
test
ficoms
or
mov
aam
ljmp
or
clc
adc
add
mov
leave
das
in
jb
mov
add
push
add
dec
add
xor
add
xchg
mov
jmp
mov
lahf
fsubrl
dec
add
mov
aam
std
push
mov
jl
dec
mov
pop
add
inc
lret
xchg
scas
call
pop
jne
rcrb
add
push
add
sub
out
pop
cmp
hlt
push
pop
outsl
xor
add
nop
pop
and
in
cmp
or
aad
int
jp
pop
out
xor
add
int
pop
add
sbb
inc
mov
hlt
mov
stos
rolb
push
add
mov
push
movsl
add
push
add
jle
push
push
add
incl
testb
loope
sbb
lods
lret
fsubs
add
in
jb
cmp
mov
idivb
sub
jbe
shlb
add
add
xor
add
push
add
add
insb
add
rcrb
lcall
pop
rolb
aam
fsubr
dec
push
in
add
popf
and
inc
add
mov
das
ficoml
mov
mov
roll
neg
jmp
fdivp
ljmp
adc
cmpl
addr16
sub
arpl
btr
mov
bound
insl
ret
pop
cmpsl
sbb
ret
divb
xor
inc
add
xor
add
addr16
xchg
pushf
add
dec
add
std
add
jo
data16
pop
add
daa
dec
add
add
pop
mov
push
add
or
add
test
rcl
rcrl
add
add
dec
test
push
iret
add
pop
lea
arpl
add
into
clc
mov
mov
aas
cmpsb
xchg
test
cld
rorb
add
mov
mov
jecxz
movsl
add
inc
sbb
add
stc
pop
dec
sub
xchg
or
mov
js
cmp
clc
jae
add
movsb
add
add
add
bound
pop
add
add
js
lock
xchg
add
xor
add
ja
inc
add
outsl
loopne
jl
inc
sbb
jae
push
xor
add
add
test
js
cmpsl
cmp
jne
mov
adc
add
pop
add
scas
rolb
xchg
sub
xchg
add
pop
sti
lock
nop
add
add
cs
mov
jnp
sbb
fcoml
cmp
cli
lahf
shll
add
rol
jne
add
scas
loope
scas
ja
je
mov
addr16
add
call
scas
notl
add
xchg
dec
add
mov
mov
dec
add
push
add
popf
cmc
cmp
mov
push
loope
push
add
add
add
inc
bound
and
add
mov
xchg
add
std
les
jg
lods
sub
mov
add
add
addl
sahf
imulb
pop
add
cmp
push
add
jne
sub
andb
xor
add
add
out
dec
outsl
dec
add
add
dec
add
add
add
xchg
inc
add
movsl
jns
cmp
nop
dec
add
ds
and
hlt
jne
add
add
sti
in
mov
inc
xor
add
xor
sbb
dec
ficoms
shlb
fidivs
push
imul
inc
add
lods
stos
ja
add
rolb
inc
shrb
in
outsl
ja
add
ljmp
pop
out
sub
inc
add
sbb
pop
inc
add
add
cmp
ds
add
add
and
pop
or
sub
mov
lods
xchg
mov
push
add
pop
or
outsl
xchg
mov
lods
test
add
dec
add
jnp
addb
mov
mov
add
push
jne
cmp
sbb
add
jb
in
cltd
pop
adc
hlt
cltd
lea
addb
insb
add
adc
add
xchg
inc
add
sub
lcall
fistpll
insb
add
and
add
lcall
movsb
movl
aaa
push
add
pop
push
stos
mov
add
sti
pop
or
loop
add
loop
test
sbb
fidivl
fistpll
scas
out
push
pop
add
add
mov
jne
dec
add
jge
add
add
add
adc
add
cs
jmp
aaa
test
add
and
dec
mov
aam
mov
jl
sti
xchg
add
cmpl
add
adc
inc
add
xchg
pushf
sbb
popa
mov
jne
push
lods
pop
or
add
cmpsb
jnp
add
roll
xchg
cmpsb
mov
or
ljmp
sbb
cld
shll
aaa
mov
pop
add
fldenv
add
jae
mov
bound
push
add
sti
add
add
test
add
mov
adc
add
sbb
hlt
add
add
out
test
add
cmp
int
ds
push
mov
and
add
add
add
push
add
arpl
in
add
sub
add
scas
popf
dec
add
dec
add
cmp
mov
dec
add
lcall
leave
adc
int3
rolb
addr16
push
lret
in
mov
add
iret
mov
outsb
add
testl
outsb
add
xchg
std
pop
pop
add
fiadds
add
add
pop
add
pop
notl
inc
push
push
add
aas
pop
add
add
outsb
add
hlt
pop
add
sahf
push
add
idiv
jb
pop
sub
pushf
and
add
add
add
adc
push
fwait
sub
dec
test
xchg
shlb
ret
mov
dec
pop
add
sub
mov
jae
xorb
movb
add
push
cld
notl
xor
cmp
add
sbb
mov
sub
orl
cmp
lahf
mov
movsl
add
pushl
mov
in
add
insl
cli
push
scas
sarb
andb
je
arpl
rcl
fmull
stos
dec
add
add
adc
add
loope
icebp
mov
imul
mov
or
hlt
sub
leave
xchg
jns
xchg
add
outsl
lods
not
sbb
xchg
dec
or
jle
jmp
add
inc
add
dec
add
push
add
ds
pop
add
sbb
pop
or
push
add
daa
insl
add
pop
add
inc
stos
pushf
rcll
pop
add
jbe
mov
mov
add
addl
sub
jl
add
or
add
cmc
dec
call
fcoml
adc
icebp
scas
add
lods
adc
sbb
mov
push
add
mov
mov
add
mov
adcl
add
and
insb
add
add
mov
mov
sub
push
add
fildll
dec
stos
or
add
mov
jo
incl
sbb
mov
data16
add
add
cmc
jecxz
cmp
pop
push
add
xchg
add
jbe
lods
dec
add
xor
add
cmp
fdivrl
dec
sub
sbb
out
hlt
jno
push
xchg
add
data16
mov
roll
outsb
add
inc
dec
add
mov
shlb
and
add
jg
sub
nop
cmc
sahf
fisubrs
insb
add
fstpt
add
add
adc
add
add
add
bound
les
test
jg
add
mov
fisubrl
insb
add
repz
fidivl
addb
add
cmpsl
add
sub
add
cmpsl
add
pop
add
dec
add
dec
ss
adc
add
adc
add
lret
add
add
lods
pop
add
add
add
dec
add
cmpsb
and
or
jle
or
jge
repz
inc
add
sahf
xchg
into
mov
add
aad
or
push
add
flds
xchg
inc
pop
add
nop
es
inc
outsb
add
roll
shlb
jge
dec
add
or
rcl
push
and
sbb
add
add
sbb
cli
popf
cmp
mov
das
mov
xchg
cld
pop
int3
mov
add
faddl
push
fsub
mov
dec
mov
pop
xor
add
adc
add
xchg
jge
fsubr
or
popf
add
outsb
add
js
or
xchg
jg
mov
dec
xchg
addr16
mov
add
add
inc
add
or
daa
and
gs
xchg
xchg
in
xlat
push
hlt
add
icebp
scas
fisubl
fwait
add
add
andl
xor
inc
out
xchg
or
push
add
leave
inc
shl
rorb
icebp
sahf
jecxz
mov
dec
add
add
ret
shrb
add
add
call
movsb
xlat
scas
mov
add
adc
mov
sub
xchg
fiadds
outsl
repnz
add
or
or
xor
add
xor
mov
add
jmp
xchg
mov
xchg
pop
add
lods
icebp
or
dec
push
add
mov
popf
add
out
arpl
iret
in
add
outsl
jae
insl
imul
adcb
add
shl
lods
mov
js
cmpsl
aas
lock
aas
stos
rcll
push
add
and
mov
jl
jo
mov
pop
jecxz
sbb
sbb
addl
mov
mov
add
pop
add
push
addb
rcl
sbbb
add
add
lods
cmpsb
xchg
cmp
dec
add
call
or
mov
cmpb
add
sahf
mov
pop
pop
add
ret
sbb
sbb
ficoml
imul
push
add
inc
outsl
push
stos
add
sbb
lahf
add
scas
add
or
add
pushf
add
add
mov
lcall
jp
and
mov
inc
add
add
jbe
outsl
dec
icebp
in
loope
pop
add
jno
adc
sub
sbb
dec
and
jecxz
ljmp
sbb
fisubrl
in
ja
push
add
cmp
and
add
dec
add
fwait
jge
scas
inc
add
push
add
mov
aad
sub
decl
movsb
pop
add
popa
lea
call
add
xor
sub
inc
add
ss
dec
push
out
inc
add
inc
add
stc
cmp
xorb
adc
add
out
add
ret
cmpsb
daa
lods
add
add
jb
lods
inc
movsl
push
add
push
mov
add
lar
add
or
rcr
stos
lods
lret
jge
in
add
add
xchg
add
cmp
or
test
mov
lahf
sbb
into
dec
add
inc
push
inc
adc
add
ja
push
jo
sbb
out
enter
pop
push
into
mov
fwait
hlt
fsubrl
xchg
inc
imul
add
loopne
jbe
popa
stc
xchg
push
lcall
jbe
pushf
gs
cmp
shl
mov
push
imul
insb
add
mov
jo
fnstenv
mov
fcompl
jbe
or
testl
dec
or
int3
mov
add
mov
mov
aas
into
lret
jecxz
xor
add
movsl
or
insb
add
seto
and
add
add
add
loope
addr16
xchg
pop
add
bound
xor
add
out
je
add
add
and
add
sahf
enter
cmpsl
and
add
out
add
out
or
add
xor
mov
aaa
lods
add
add
aaa
add
cmp
xor
add
addr16
js
pop
rdpmc
push
lret
nop
push
add
add
and
xchg
movsl
or
inc
jne
push
add
jg
pop
and
push
add
in
add
popa
add
jl
add
add
jp
fiaddl
add
or
push
add
adc
add
inc
add
fiaddl
mov
inc
add
stos
cmc
jl
mov
add
add
sub
mov
lods
sbb
mov
sbb
jb
daa
add
add
aad
fs
std
jns
add
add
addl
add
mov
add
push
add
cmpsl
add
add
add
jae
jno
add
jecxz
add
add
in
imul
add
add
add
add
inc
popa
mov
inc
aaa
pushf
add
and
add
scas
ret
rol
mov
lock
mov
mov
xchg
mov
push
flds
pop
add
in
es
and
adc
cwtl
sti
cmp
mov
and
add
mov
insb
add
cmp
cld
pop
push
jl
add
ret
mov
fsubl
jle
xor
int
pusha
add
and
icebp
dec
add
insl
add
rorl
sahf
add
cli
pop
ret
xchg
push
add
lret
ja
xlat
lahf
cld
push
add
add
sub
cmp
add
xchg
add
add
add
xchg
test
sbb
dec
xor
add
inc
add
mov
dec
add
roll
les
add
aas
mov
es
fnstcw
mov
rolb
jmp
mov
std
add
mov
add
add
add
and
add
out
addr16
dec
add
xchg
fmulp
or
fstpl
mov
jmp
mov
xchg
cmpl
sub
add
and
mov
lods
mov
mov
jno
add
add
inc
add
push
add
addr16
les
lret
push
add
lock
nop
add
add
add
jecxz
arpl
xor
insl
mov
imul
sub
negl
cli
xchg
sbb
mov
push
scas
add
xor
mov
pop
add
rcrl
scas
sti
push
add
xlat
xchg
xchg
xchg
mov
xor
je
dec
push
adcl
add
xchg
je
test
xchg
sbb
cmpsb
test
xchg
sub
add
jbe
jge
std
push
mov
cmp
mov
int3
les
stc
sti
out
inc
add
das
add
adc
mov
lea
shrb
mov
pop
xor
add
add
popa
add
mov
test
inc
add
xlat
loopne
sub
movsb
adc
add
cwtl
leave
push
add
add
dec
push
add
mov
xchg
add
loop
add
push
mov
jl
in
ret
addl
movsb
data16
sub
or
add
add
inc
xchg
popf
inc
cmp
add
add
add
scas
test
getsec
mov
int3
xchg
pop
add
aam
add
add
stos
bound
pusha
add
lods
add
add
iret
mov
mov
add
decl
dec
add
loopne
scas
outsl
js
imul
xor
add
insl
out
adc
add
sub
lret
sbb
add
fcomp
mov
xor
cld
test
push
add
pop
add
jl
dec
add
add
and
sub
into
popa
test
add
into
and
ja
lods
data16
lret
or
and
add
inc
xor
add
out
mov
mov
nop
es
add
loop
sbb
pusha
add
xchg
or
pop
add
cli
add
jge
push
xchg
add
loop
imul
sbb
ret
fwait
add
sub
jecxz
add
std
add
sbb
imul
mov
add
mov
js
adc
add
add
jmp
adc
push
add
cld
rorb
mov
add
add
add
out
add
xor
add
rolb
mov
mov
fbld
mov
cmp
paddb
add
inc
imul
daa
in
push
add
and
add
add
mov
jae
add
ljmp
add
les
gs
mov
xchg
sbb
cmp
add
jnp
xchg
inc
push
add
lret
sbb
out
or
push
jbe
cmp
pusha
add
lahf
jne
mov
add
add
add
push
add
pop
add
jno
inc
add
add
adc
add
or
test
in
sbb
aad
roll
cwtl
cmp
adc
add
rclb
sub
add
add
add
xor
mov
ficompl
and
rolb
xor
xchg
aaa
xor
lcall
hlt
inc
add
jbe
mov
sub
pop
loope
add
add
arpl
add
add
push
add
out
popf
mov
loope
push
add
add
vmread
xchg
xor
inc
add
aad
pop
add
add
add
add
add
xchg
pop
add
bound
fildll
fcmovnbe
sub
mov
or
push
add
testl
mov
mov
bnd
inc
add
nop
ret
int3
sbb
cmpb
aad
fisubrl
jmp
aad
shl
clc
repnz
insl
mov
gs
add
add
adcb
dec
add
mov
add
mov
fs
inc
add
js
jno
mov
push
sub
cmp
jle
addl
add
ljmp
add
jle
mov
fsubrl
jbe
mov
add
add
add
push
add
add
adc
sbb
or
add
add
outsl
lds
popf
dec
jae
arpl
cmp
int
fildl
out
xor
add
or
rcl
pop
roll
push
test
push
add
xor
add
andb
add
aam
add
adc
adc
jmp
addb
push
add
add
jle
enter
sbb
test
add
in
add
addb
cmp
xchg
pop
add
add
add
or
add
in
lock
add
xor
add
shrl
in
push
sbb
xchg
sti
push
popf
pop
icebp
add
dec
cli
jns
mov
add
sbb
daa
loopne
or
add
in
mov
add
js
xchg
adc
add
jnp
cs
dec
add
add
not
and
add
lds
inc
xchg
loopne
add
add
jg
lret
push
add
add
add
add
add
pop
or
es
adc
add
inc
pop
cmp
test
add
add
add
push
fsubl
mov
stos
out
loopne
lods
mov
push
xchg
lods
cmp
add
enter
jae
push
aaa
mov
data16
add
or
mov
xor
xor
js
inc
add
mov
pop
cmpsl
add
mov
mov
add
inc
add
lcall
movsb
or
push
add
aam
xchg
inc
add
push
mov
outsl
lods
mov
cmp
ret
or
add
mov
push
add
cmpsb
in
icebp
lods
dec
add
and
add
cmpsl
xchg
pop
add
aad
cmpsb
add
add
inc
inc
add
dec
add
or
pop
sub
sbb
fldpi
mov
cld
cmp
movsb
arpl
add
or
test
dec
add
add
and
add
mov
push
jge
scas
sbb
push
sbb
push
add
sbb
mov
xor
add
mov
fldcw
hlt
dec
add
add
jb
insl
xor
add
xchg
clc
lahf
xchg
aaa
push
outsb
add
jg
gs
popl
pushf
push
jl
sbb
or
es
or
pop
add
add
push
add
mov
jae
push
lods
lret
in
cltd
dec
add
add
add
in
xor
add
cwtl
add
je
pop
das
sti
dec
add
or
jle
sub
cmc
jge
pop
test
jle
pusha
add
cli
mov
add
add
add
dec
add
add
jle
cld
mov
lock
cli
inc
add
add
popf
mov
or
pop
add
and
add
leave
cmp
cmp
sub
add
inc
cltd
adc
mov
loope
mov
add
add
adc
add
mov
lock
insb
add
dec
mov
fadds
sub
add
in
mov
add
add
mov
les
flds
jmp
iret
add
insb
add
into
dec
mov
add
xor
add
sbb
jns
mov
jp
mov
cmpsb
add
add
ficompl
mov
xor
add
and
add
add
add
add
