jmp
mulb
rclb
fldenv
cltd
lret
add
dec
inc
xchg
pop
rolb
mov
gs
ljmp
xchg
dec
add
scas
lods
dec
popa
push
or
scas
int
mov
das
leave
ljmp
jmp
outsb
and
lfs
mov
mov
mov
dec
fdivr
pushf
add
add
dec
add
push
call
pop
pop
pop
out
dec
ret
jne
add
lock
add
add
rorl
inc
adc
pop
ret
xchg
pushl
pop
incl
pushl
push
or
jmp
cld
pop
mov
shr
shl
outsl
pop
sti
fisttpll
dec
adc
sub
pop
or
dec
idiv
mov
sub
das
inc
mov
push
shl
push
call
pop
jmp
adc
ljmp
xor
pop
mov
sub
cmp
imul
ja
pop
push
adc
mov
movb
mov
out
in
mov
mov
cmp
inc
and
pop
mov
pop
xor
dec
je
push
mov
push
sbb
idiv
gs
add
or
mov
mov
shr
sti
fbstp
xchg
push
pop
ret
mov
inc
std
mov
arpl
sti
dec
je
sub
and
test
jnp
cmp
inc
add
push
mov
cld
ret
dec
add
pushl
push
lret
mov
or
sub
xchg
mov
loop
push
push
pop
push
push
push
push
xor
inc
cmp
pop
push
repz
cmp
lcall
push
ja
sub
aas
hlt
add
jns
ret
push
push
mov
fldl
mov
fs
fisttps
add
shr
and
xchg
in
sbb
add
push
loopne
fwait
jae
push
xor
mov
jne
push
test
push
je
es
and
pop
mov
mov
push
dec
pop
flds
fdivrs
push
pop
add
add
js
adc
pusha
pop
sub
mov
decb
loop
out
test
aaa
or
or
idivb
pop
or
sub
js
int3
int3
push
pop
orl
jg
test
sbb
mov
cmp
adc
add
adc
fs
pop
xor
sub
into
mov
mov
sbb
or
insb
in
aas
icebp
add
inc
aam
jmp
hlt
mov
jnp
push
push
mov
ljmp
mov
push
fldt
or
or
out
fildll
adc
pop
push
pop
pop
adc
push
jae
sub
mov
stc
sbb
out
lret
clc
add
test
and
sub
incb
adc
and
fsubs
add
xor
daa
fisttpl
mov
xchg
pop
test
pop
sub
jno
jge
jne
and
outsl
imul
lea
cmp
aas
pop
inc
dec
divb
jns
jge
pop
add
xchg
ds
push
mov
mov
xlat
fcmovnb
mov
subl
push
popf
enter
xchg
cmc
push
lahf
jge
jns
movsb
cs
outsb
std
jnp
inc
or
cmp
add
jbe
sub
stos
stc
push
push
dec
cld
pop
pop
mov
hlt
cmpsb
push
add
insb
lock
mov
mov
cmp
inc
test
mov
sub
test
mov
test
test
in
jbe
js
loopne
add
inc
in
sub
not
and
cwtl
lods
push
pop
jne
mov
sub
push
and
sub
push
ret
inc
stos
movsb
call
dec
dec
mov
ret
sbb
std
fs
sub
xchg
ds
stc
pop
aam
pushl
mov
ret
cmp
rclb
xchg
push
adc
push
or
mov
popa
sti
adc
cmp
inc
lcall
ds
out
or
lods
mov
cmp
pop
iret
test
inc
add
arpl
mov
jne
movb
adc
xor
ljmp
js
sahf
hlt
movb
adc
repnz
in
or
or
pop
jg
xchg
push
push
pop
cmp
jge
sbb
repz
imul
adc
pushf
push
fildl
test
mov
ret
andb
ret
add
enter
sbb
cmp
insb
pop
dec
repnz
push
or
sub
loop
push
mov
movsl
mov
lahf
rorl
inc
or
adc
out
mov
in
mov
mov
or
push
jl
sub
fsubrs
xchg
or
sub
punpckhwd
stc
or
or
inc
push
mov
mov
mov
jbe
or
xchg
xor
ss
cld
aas
push
cltd
push
jecxz
jo
pushf
cmp
je
sbb
mov
push
pop
push
popf
xor
movsb
cmp
frstor
push
add
adc
add
mov
std
sbb
inc
xchg
or
popa
in
mov
pop
inc
xor
mov
jns
mov
sar
cs
cmp
dec
lahf
imul
icebp
pop
adc
jbe
daa
add
decb
sub
pop
cmp
mov
mov
adc
add
hlt
ret
jbe
shll
movl
outsl
jnp
cmp
fdivrs
sbb
xchg
add
jle
mov
or
or
fcom
add
pushf
pop
icebp
pop
ljmp
jmp
cld
pop
lea
out
push
loopne
sbb
clc
or
xchg
mov
cmp
mov
push
pop
cmp
adcb
icebp
test
ficompl
mov
mov
setns
sbb
mov
nop
jl
popa
mov
outsb
hlt
mov
sbb
cs
adc
movl
lods
ror
sarb
or
push
push
pop
or
jbe
dec
add
sbb
sarb
or
cmp
push
pop
inc
jae
fucomi
mov
add
daa
flds
jo
push
shlb
outsl
push
js
pop
das
out
mov
dec
test
or
push
inc
pop
fisttpl
fidivrl
mov
push
loope
pop
jl
test
cld
mov
cs
jl
sbb
push
dec
inc
js
add
push
das
and
xlat
loop
jmp
pop
pop
pop
pop
ret
pop
repnz
arpl
jmp
mov
sti
test
fimull
ret
icebp
fisttps
movsl
adc
jnp
dec
cmp
subl
pop
repnz
mov
mov
mov
jg
mov
mov
sbb
popa
inc
lcall
popa
sbb
jnp
add
call
mov
dec
xchg
push
push
sbb
aad
pop
jl
orl
fldcw
call
dec
or
icebp
push
loope
push
or
addb
pop
outsb
mov
mov
stos
or
pop
loope
pop
mov
call
and
pop
sub
cmp
cmp
sbb
leave
cmp
loope
sarb
push
aam
mov
mov
pop
int
jp
jno
mov
sbb
or
jp
mov
bound
mov
pop
push
pop
mov
scas
mov
add
shl
inc
and
xor
std
iret
mov
sahf
lock
push
jg
ja
jle
sbb
stos
sub
add
sbb
cld
lea
cmp
push
fneni(8087
jecxz
adc
mov
leave
roll
or
sbb
test
int3
pop
pop
cwtl
mov
ret
cs
sbb
out
dec
adc
jb
call
fmuls
addl
enter
fcompl
jge
andb
push
in
das
add
int3
inc
jl
loopne
and
adc
bound
sub
out
adc
insb
dec
cmpsb
adc
lcall
bound
fimull
mov
sbb
outsl
ret
dec
or
addl
pusha
pop
jl
sahf
out
mov
cmpb
push
mov
and
lock
inc
add
or
mov
jae
pop
pop
jb
rorl
add
mov
call
push
shr
adc
out
lock
push
fcmovnu
aas
jmp
scas
sbb
xorl
cmp
cmp
aas
daa
mov
sbb
icebp
test
add
add
aad
add
add
mov
and
mov
test
add
dec
out
mov
pop
arpl
ds
xchg
daa
negb
in
jmp
pushl
mov
lea
or
dec
adcb
jl
mov
shrb
xchg
adc
pop
pop
insl
xor
test
div
rorl
push
sbb
or
dec
ja
or
loope
mov
or
jge
dec
dec
je
sbb
cmp
mov
icebp
imul
clc
pop
mov
orl
dec
cmp
pop
add
popa
or
push
repnz
sarb
arpl
adc
xor
enter
push
shl
sub
inc
pop
cmp
ret
sbb
inc
push
hlt
and
cmp
addb
jl
ret
or
inc
inc
test
cli
mov
rcll
hlt
cmp
or
add
lret
movsb
push
mov
cmp
adc
inc
push
cld
mov
fiaddl
inc
movb
sbb
rcrl
cmp
adc
jbe
ffreep
cmp
popl
adc
sbb
cld
sub
xbegin
icebp
xchg
mov
dec
outsl
dec
rorl
ret
fdiv
call
lock
or
cs
and
rclb
aam
lea
popa
js
sub
push
jle
scas
cmp
jbe
add
inc
fstps
push
xor
in
add
xor
push
sub
call
lods
addr16
test
rcll
aad
mov
sub
add
ss
jbe
add
pop
insl
mov
jno
or
xchg
jecxz
shrb
cmp
repnz
add
inc
sbb
mov
dec
call
xor
repnz
push
fiadds
arpl
ret
push
test
or
inc
mov
add
loopne
or
pop
das
push
pop
mov
aam
cmp
sbb
xor
sub
gs
inc
lea
adc
mov
push
push
inc
clc
int3
mov
mov
nop
pop
inc
cmp
into
or
ljmp
sbb
ss
sub
inc
out
push
jecxz
loop
mov
test
mov
test
out
sub
daa
incl
sub
outsl
pop
xor
cmp
and
or
lods
and
js
or
push
mov
mov
clc
pop
test
push
or
pusha
pop
jmp
mov
cwtl
jo
push
hlt
or
popa
dec
dec
fadd
dec
ficompl
add
and
push
push
addb
and
sub
ficoml
push
sub
cli
push
jecxz
pop
sbb
jns
sbb
bound
in
inc
lods
mov
sub
int3
rcr
pop
es
fcomps
or
jno
pop
adc
outsl
mov
or
mov
sub
divl
cmp
push
add
jge
push
mov
jl
sti
mov
clc
sub
push
jmp
loope
push
addr16
jecxz
hlt
orl
sbb
frstor
nop
add
cmp
adc
push
push
cmp
loop
push
repz
xchg
jge
fistpll
addr16
sbb
jne
adc
popa
push
xorl
lcall
divb
decl
lahf
shrb
cmp
sahf
je
mov
dec
or
cmp
pop
ret
adc
inc
ss
in
lahf
mov
xchg
adc
movsb
cmp
push
pop
adc
push
notb
jp
and
pushl
jne
aas
xchg
sbb
loope,pt
icebp
add
movb
fstps
loopne
out
pop
add
loopne
ds
xchg
adc
sbb
pop
adc
xor
push
cmpsb
sahf
shlb
and
jbe
sbb
clc
adcl
jmp
mov
mov
or
jp
lsl
mov
mov
mov
in
pop
ret
adc
scas
sub
fcom
enter
dec
pusha
and
lahf
fadds
and
dec
cld
or
mov
cs
or
sbb
cmp
sub
cmpb
jbe
add
pop
add
js
mov
xchg
in
sbb
jle
push
mov
fstpt
cwtl
pusha
adc
in
mov
add
clc
and
sahf
xlat
jp
repz
mov
shl
mov
mov
gs
movsl
mov
clc
add
bound
jp
adc
lock
push
push
insb
pop
das
jge
lret
les
lock
movsl
cmc
push
sahf
cmc
fmulp
push
adc
add
inc
push
push
jnp
fldenv
push
pop
or
mov
hlt
pop
icebp
addr16
jne
mov
mov
push
cmp
fcmovb
sti
mov
xchg
or
sub
jmp
and
or
lcall
fnstenv
mov
or
clc
mov
testl
mov
or
je
rcl
inc
das
addr16
in
sar
mov
sub
add
mov
rol
cmpsb
pop
icebp
jecxz
imul
jne
inc
push
nop
addr16
and
daa
pusha
pop
fistpll
inc
js
push
mov
or
and
rcrb
or
pop
cld
adc
sbb
sti
daa
inc
mov
sub
sub
imul
pusha
mov
in
jnp
into
push
insb
xchg
outsb
lahf
rcl
inc
inc
pop
cmpl
shlb
xorb
cmp
jne
adc
rorl
add
mov
aam
icebp
mov
jne
gs
imul
xor
push
mov
inc
cwtl
push
jle
lahf
jne
dec
add
mov
lock
loopne
lods
cwtl
lcall
push
test
jnp
and
lock
xor
push
push
pop
in
roll
enter
mov
mov
inc
das
je
add
std
sti
adc
pusha
imul
cmp
cli
mov
fiadds
cmpsl
scas
cmpsb
and
loopne
xor
and
sbb
adc
pop
out
arpl
popa
push
push
jnp
fbstp
lea
fcmovnbe
in
js
aad
pop
test
xor
adc
in
addr16
jecxz
aad
repz
mov
hlt
adc
fldl
fdivs
fistpl
xor
js
push
mov
test
add
cld
mov
test
and
lret
push
push
push
mov
mov
in
arpl
popf
nop
jl
pop
push
push
adc
psadbw
pop
cmp
in
jnp
push
push
shrl
ja
mov
push
jmp
lock
lods
jle
mov
push
push
jne
sbb
mov
or
pop
push
fmulp
push
xor
adc
mov
adc
mov
mov
pop
arpl
jo
pop
and
bound
mov
adc
lock
or
mov
test
pop
scas
add
sbb
repz
mov
aam
add
das
leave
xor
push
aaa
pusha
mov
fmuls
mov
inc
add
pusha
in
int
pop
in
es
mov
mov
in
popa
and
pop
xchg
and
popa
sbb
push
andb
mov
mov
dec
outsl
push
jg
ja
inc
and
aam
lods
mov
jp
cltd
fnstcw
popl
inc
bound
pop
sbb
mov
lds
adc
pop
mov
jge
out
mov
add
cs
sti
cmpsl
ljmp
cmp
daa
aam
sbb
lea
sub
mov
jbe
dec
ljmp
scas
roll
inc
cmpsb
jg
jge
sub
or
push
cmp
cmp
neg
fdivs
je
loopne
shr
shr
fcoms
sahf
inc
mov
outsb
pop
jb
pop
out
divl
cmp
pop
mov
push
xchg
sub
adc
outsl
bound
jbe
adc
xor
fidivs
ffreep
jp
xor
insb
add
rol
mov
mov
clc
pop
sbb
push
outsl
cld
ffreep
or
and
testb
inc
adc
jb
pop
movsb
mov
and
jne
dec
sbb
sub
xlat
jbe
jmp
inc
pop
push
adc
pushf
adc
or
jbe
push
subps
mov
jmp
push
addb
mov
push
xor
add
jge
insb
roll
pop
xchg
adcb
imul
div
pusha
mov
out
dec
mov
cmp
pop
or
add
in
fadds
mov
and
test
gs
push
mov
cmpl
js
stc
inc
sbb
jmp
popa
pop
neg
or
push
mov
dec
test
push
sbb
or
sarl
test
cmp
sub
fidivs
rcr
push
mov
test
mov
adc
cmc
mov
cwtl
shl
jno
aas
lcall
xor
sbb
sbb
inc
testb
dec
mov
leave
inc
cmp
hlt
mov
pop
adc
into
movb
cmp
cmp
add
pop
cmc
movsb
sub
add
mov
mov
movsb
pop
cs
mov
hlt
mov
pop
clc
clc
mov
xor
xor
cmp
mov
mov
ret
aaa
jg
shrb
loopne
pop
testb
mov
mov
iret
dec
addr16
mov
test
mov
js
insl
shlb
aaa
xchg
add
push
fisubl
adc
mov
jl
std
push
aaa
dec
insl
push
lea
fs
outsl
mov
insl
insb
xchg
into
cmc
cmp
scas
call
incl
rcrb
in
adc
add
or
jge
sbb
jnp
mov
mull
pusha
daa
xchg
aaa
ss
gs
sbbb
int3
mov
jl
roll
adc
sub
add
add
jb
sub
add
das
push
add
clc
ljmp
xor
testb
push
cmp
cmp
leave
ret
insb
test
xor
je
lods
sti
pop
adc
and
and
fsubs
aad
pop
pop
in
mov
pop
cmp
insl
adc
and
xor
sbbl
call
xchg
push
cmp
je
in
add
adc
jg
push
and
sbb
sbb
pop
fidivl
icebp
loopne
call
clc
jl
scas
sub
pop
sbb
sbb
push
or
pop
xchg
jbe
xor
sub
mov
xor
sub
mov
jge
and
add
rorb
jns
and
loop
cmp
dec
decl
rorb
cmpsb
dec
cmp
pop
arpl
xor
std
aaa
mov
mov
mov
enter
fimull
in
dec
pop
or
add
push
jbe
push
sub
daa
cmp
push
decl
jmp
call
jb
push
push
int
xchg
mov
hlt
sti
xchg
test
jno
push
mov
pop
or
js
bound
xor
in
lock
insl
call
inc
push
and
test
push
sti
and
adc
divl
mulb
mov
loope
rcrb
icebp
and
mov
push
mov
cmp
sub
inc
push
xchg
cld
pop
push
push
dec
push
push
mov
int
pop
sbb
or
sub
into
shlb
add
add
mov
adc
and
push
sub
mov
lods
incl
jle
jo
testb
aaa
mov
cmp
cmc
mov
cmp
loopw
pop
and
pop
cmp
fbld
pop
inc
sbb
adc
and
xor
mov
mov
sbb
jge
pop
push
sub
ss
shlb
dec
je
pop
jne
pusha
mov
mov
test
and
xlat
movsl
movsb
or
daa
rorb
test
push
cmp
jmp
cld
pop
or
add
inc
stos
sub
and
pop
mov
push
and
dec
mov
inc
js
andl
or
addl
in
pop
bound
or
sub
test
test
int3
push
stos
xchg
adcl
movsb
xchg
sbb
jb
fiadds
in
sub
mov
mov
add
or
aam
fnstcw
pop
fdecstp
sub
fs
add
pop
clc
and
cmp
xchg
popa
and
dec
insl
jmp
fildl
adc
testw
sti
call
cmp
jg
mov
lods
js
pop
imul
adc
dec
rolb
jae
iret
pop
sbb
fdivs
sbb
mov
pop
jmp
hlt
cmc
inc
sub
mov
lock
test
shll
test
push
and
mov
or
orl
mov
ret
insb
jo
or
cli
or
inc
js
or
cmp
jb
fstl
xchg
or
xchg
xchg
cmc
daa
loope
rolb
push
and
inc
nop
jnp
or
sbb
shlb
sub
cmp
movsb
push
mov
cmp
add
lods
xchg
inc
mov
arpl
in
out
frstor
js
sub
mov
adc
out
push
sti
xor
cmp
leave
sub
sub
and
sbb
in
sbb
sar
lcall
and
fmuls
lret
lds
xchg
sbb
out
mov
in
arpl
jmp
sbb
pop
iret
dec
and
shlb
push
jp
adcb
insb
sbb
je
mov
jo
add
movsl
jmp
mov
sub
test
cwtl
add
inc
xchg
outsb
pop
mov
adc
std
jg
cmc
mov
daa
pop
loope
inc
mov
push
cltd
and
push
sbb
xlat
mov
pusha
adc
loope
and
add
jbe
push
xor
lods
pop
or
pop
cmp
cmovno
cmp
out
pop
idivb
jge
and
fsubrl
push
xchg
xorb
insl
lea
adc
scas
xchg
sbb
mov
jge
push
sub
clc
dec
mov
mov
mov
incl
mov
icebp
or
add
add
xchg
call
mov
mov
sub
push
sub
cmp
or
dec
push
xor
rclb
addr16
xor
push
cmp
jge
cld
das
ja
jno
pop
lahf
push
or
jbe
adc
pusha
flds
mov
divb
daa
shlb
xchg
testl
mov
aam
fmull
loopne
sub
cli
cli
adc
sub
push
sbbl
mov
jns
pusha
mov
xor
jbe
insb
xor
loop
and
and
cmp
sub
rol
lahf
idivl
cld
jmp
adc
faddl
movsb
push
add
insl
call
xor
in
cmp
sub
ret
add
aam
mov
insb
loope
pop
imul
idiv
test
xorb
pop
je
jl
jnp
rcrb
mov
add
add
adcb
jns
mov
push
mov
negl
ficoms
negl
pop
mov
jo
and
pop
rcr
lahf
push
sub
in
sti
fidivs
jl
out
cs
pop
adc
sbb
inc
cmp
pop
adc
ds
or
jae
jge
push
pop
fs
arpl
pop
cmpb
or
icebp
inc
mov
in
lea
jg
mov
inc
inc
or
jne
popa
pop
mov
aaa
shll
jne
add
dec
jmp
xchg
clc
fs
popl
insb
xchg
inc
testl
aas
leave
add
pop
cli
adc
ds
cmp
pop
pop
push
push
mov
movzbl
pop
pop
leave
dec
and
pop
sub
pop
push
insl
mov
mov
sbb
jge
lret
pop
sub
pop
sti
sbb
sub
sbb
pop
sub
jmp
xchg
dec
mov
mov
arpl
shl
jb
in
or
sub
pop
imul
add
adc
sub
push
out
sti
pusha
fsubl
inc
clc
xor
jge
mov
pop
clc
sub
sub
or
push
adc
fsubp
sub
xor
jbe
add
sahf
sub
aad
mov
test
mov
adc
jns
and
sbb
inc
insl
push
push
insl
sbb
sbb
cmp
adc
std
sbb
ss
lods
lods
add
mov
push
ret
outsb
jo
mov
pushf
jl
sti
pusha
pop
lret
mov
aaa
push
pop
push
mov
mov
push
push
or
rclb
mov
call
push
roll
sbb
sbb
aaa
cld
movsb
mov
pusha
or
pop
or
popf
sbb
sbb
push
lahf
or
mov
jne
in
das
push
hlt
jle
nop
mov
cmc
push
xchg
sub
add
xchg
call
les
pusha
dec
fdivs
cli
movsb
push
js
mov
pop
nop
push
xor
sub
lods
out
jno
pop
ret
rolb
mov
jo
test
or
mov
xchg
xor
dec
and
jmp
inc
sahf
xor
dec
lods
cli
jb
or
es
outsb
dec
mov
and
out
or
mov
sub
imul
imulb
dec
sub
jne
les
call
and
pusha
fisttps
pop
push
call
rolb
hlt
mov
sub
andl
push
shlb
mov
add
jge
xchg
mov
call
rep
push
sbb
clc
in
leave
mov
dec
or
jl
pop
pop
sub
popa
repnz
add
push
pop
sub
pop
jge
fcom
pop
icebp
jle
iret
or
mov
pop
cmpsl
test
sbb
sub
jle
scas
mov
sub
andl
shll
ret
ds
pop
xor
mov
mov
cmp
jl
xor
test
or
jl
mov
pop
and
sbb
jecxz
cmp
pop
push
sbb
testb
stc
enter
push
clc
inc
add
mov
xchg
and
adc
cmp
lea
push
fstl
bound
mov
mov
test
and
outsl
sub
ljmp
mov
pop
js
aam
clc
mov
adcl
push
das
pusha
sbb
cmp
sub
pop
xchg
pop
mov
push
mov
inc
aas
jbe
sbb
adc
mov
cmp
mov
data16
jo
xor
push
outsb
call
sbb
mov
xor
pop
sti
rcll
fiaddl
xor
ret
loope
inc
cmp
ss
mov
cs
sbb
cmc
mov
push
mov
mov
pop
cmpl
or
int
aas
dec
js
cld
rcl
xor
add
mov
sub
pop
in
test
pop
sbb
pop
std
and
imul
cld
addr16
xor
movsb
mov
jb
rcrb
cmp
movsb
pop
jnp
pop
pop
in
inc
test
cmp
adc
hlt
xor
mov
dec
fdiv
mov
sub
xor
popf
inc
add
or
loopne
xchg
lds
mov
inc
mov
das
roll
fistl
out
mov
sbb
jge
lret
dec
add
push
pop
imul
ret
aas
add
mov
rorb
mov
orl
rcpps
cld
mov
lock
xor
adc
or
mov
jne
call
inc
jno
cmp
jbe
push
ret
add
shlb
inc
cmp
stos
jmp
les
cmp
mov
jo
push
mov
decl
jmp
sub
int3
cmpsb
hlt
inc
stos
daa
push
arpl
sbb
hlt
mov
xorb
and
lods
pop
fldcw
jle
add
scas
in
rorb
pop
adc
sub
loopne,pn
inc
mov
insl
insb
push
mov
xchg
lds
les
cmpsl
and
int3
sbb
mov
and
mov
xchg
push
cs
jmp
dec
call
mov
pop
xlat
mov
pop
pop
ss
sub
arpl
adc
idivb
dec
sbb
notb
movsb
ja
fisubrl
and
ds
sbb
mov
adc
inc
scas
pop
dec
out
lods
and
jge
jge
mov
dec
adc
mov
pop
aas
les
adc
ss
pusha
xchg
les
pop
pop
popa
arpl
insb
sarb
popa
repnz
push
mov
sbb
es
xchg
in
sbb
shll
out
mov
push
fwait
jge
adc
stos
sub
cmp
lret
lods
bound
loope
and
inc
aam
loop
pusha
sbb
adc
pop
mov
mov
add
push
inc
fisttpl
fs
jmp
pop
add
pop
sbb
into
push
lock
push
sub
add
lcall
cs
nop
jo
test
mov
push
xor
jge
mov
push
fs
and
rolb
cmp
pop
xor
push
push
push
jbe,pn
je
xor
shll
outsb
insb
mov
lock
lcall
mov
mov
and
add
or
mov
ja
push
cmp
mov
cmpb
cmp
popa
mov
sub
adc
mov
inc
dec
push
add
mov
test
or
xchg
add
add
dec
je
or
jl
rorb
cmp
push
sbb
shr
xor
cmp
dec
lea
xor
xor
xchg
mov
loope
sbbl
aam
push
int3
push
jle
nop
out
subl
add
ret
dec
dec
cld
jb
add
loope
mull
dec
jmp
shl
daa
push
insl
mov
cmp
mov
mov
fdiv
outsl
in
or
shrb
dec
dec
cmp
hlt
sahf
scas
dec
clc
jle
sub
ret
push
mov
sub
div
imul
popa
inc
sbb
shlb
mov
insl
in
pop
cs
mov
movsl
or
jae
xchg
aaa
das
les
mov
cmp
dec
jecxz
push
sub
pop
push
sub
sbb
aaa
mov
push
sbb
inc
mov
sub
roll
push
pop
push
mov
lock
inc
sub
dec
out
adc
fucom
pop
cmpsl
xchg
cmp
add
jne
imul
and
cld
lea
lds
cmc
ss
cmc
lcall
popa
insb
add
out
js
and
sbb
mov
add
adc
push
jle
inc
bound
outsb
aaa
loopne
ret
js
sbb
lea
adc
sub
mov
xor
js
sbb
adc
rorb
div
push
mov
dec
and
mov
add
sub
orl
pop
sub
fadds
xadd
jmp
push
aaa
sub
arpl
mov
daa
or
icebp
or
mov
jge
and
daa
xor
arpl
cmp
fcom
xor
inc
es
out
xchg
push
insb
push
xsaves
push
xor
lock
daa
jl
pop
cmp
jle
push
ljmp
mov
jge
push
cmp
sub
test
dec
dec
lods
cld
or
and
push
jmp
add
jne
inc
mov
mov
lods
xchg
movsl
shl
push
add
in
mov
andb
jg
jbe
lcall
pop
roll
sbb
fistl
add
xor
aaa
xchg
push
mov
je
jo
pop
std
rcl
fisubrl
mov
adc
push
jbe
scas
mov
test
rclb
or
and
fwait
movsb
jmp
mov
call
pop
jbe
sbb
xor
loopne
rclb
jbe
insl
pop
jns
or
cmp
into
lea
cld
or
sbb
pop
mov
add
mov
test
mov
loopew
sub
ds
test
loope
mov
mov
fwait
mov
and
test
add
scas
xchg
cli
aas
adc
dec
or
cs
adc
popa
or
int3
in
ret
fsub
lahf
jae
arpl
inc
or
ror
pushf
mov
cmp
fwait
adc
jge
cmp
clc
jmp
and
mov
pusha
je
jbe
inc
pushf
adc
stos
scas
loopne
insb
push
or
imul
adcl
mov
jbe
incl
inc
mov
inc
leave
aas
test
aas
imul
or
pop
push
mov
cmp
mov
mov
lea
push
add
mov
bound
cmc
mov
adc
mov
aas
xchg
je
and
int3
loope
jl
sub
lods
inc
mov
mov
add
push
cmp
sub
lods
cmp
mov
fcomps
mov
int3
cmp
stos
mov
mov
adc
mov
lea
push
pop
add
push
shlb
adc
add
or
xchg
out
shll
mov
dec
xor
daa
ss
push
xchg
rolb
insb
inc
loope
clc
cmp
test
dec
push
xchg
clc
idivb
fimull
in
jo
data16
sti
inc
adc
fnstenv
xchg
inc
jnp
add
roll
sub
cmp
ret
pop
inc
test
jne
mov
xchg
ljmp
cmp
clc
aam
sub
mov
sti
push
dec
mov
punpckhdq
or
inc
test
sub
pushl
mov
mov
mov
add
sahf
data16
xor
sub
outsl
xchg
rol
add
outsl
mov
pop
push
test
add
or
cmp
pushl
jp
cmpsb
or
mov
insl
das
mov
sar
mov
sbb
xchg
fimull
out
add
pusha
pcmpeqb
aad
jae
pop
mov
dec
adc
orl
movsl
sarl
push
or
clc
mov
call
cwtl
push
dec
mov
jle
cmpl
jno
cmp
sbb
pop
and
push
and
aas
mov
xor
cmp
add
jbe
and
sbb
ds
fdivs
or
xor
and
rclb
push
jecxz
in
adc
add
pop
mov
fidivl
ss
dec
mov
leave
or
fcomps
divb
ret
jnp
mov
push
push
add
mov
cmp
inc
scas
and
jbe
mov
std
sbb
cmp
ret
popf
cmpl
adc
jge
xchg
pop
pop
and
sbb
inc
push
hlt
sbb
in
sub
fdivrs
adc
insb
pop
mov
sbb
inc
cld
pop
pop
je
cmp
lock
subl
xor
pop
push
push
repnz
ds
into
ret
outsb
lea
cmp
and
inc
pop
pop
mov
out
cmpsl
mov
jo
scas
mov
xor
jne
and
push
pop
push
add
adc
sahf
mov
ljmp
idivb
add
fucomi
in
xor
inc
sbb
in
imul
in
add
ja
xchg
xor
inc
lods
testb
daa
mov
inc
adc
loop
subl
out
lock
hlt
fstpl
push
and
push
sbb
mulb
add
push
cmp
test
mov
dec
jae
and
iret
and
mov
inc
pop
add
imul
call
orl
lea
sub
mov
adc
push
lods
insb
xchg
ret
pop
xchg
jb
push
sbb
cli
inc
cmp
insl
sbb
ljmp
mov
mov
jl
gs
add
push
xchg
fs
fdivrs
rorb
add
mov
scas
push
mov
sbb
stc
mov
mov
sbb
aam
rol
push
push
push
cld
pop
pusha
xchg
add
inc
sbb
outsl
gs
or
pop
sbb
add
dec
repnz
loop
inc
cmpsb
push
mov
fadds
or
and
mov
jo
shlb
or
movsb
int3
inc
pop
ffreep
jbe
push
test
adc
ja
jle
jbe
jne
inc
jle
add
xor
add
bound
adc
lock
pop
les
dec
dec
sbb
les
into
mov
dec
push
je
inc
add
gs
loopne
mov
or
adc
popa
loop
clc
push
aam
out
adcl
xchg
roll
jne
std
push
mov
call
push
add
jmp
inc
adc
jae
and
pop
jl
pop
xchg
xchg
pop
push
aaa
add
daa
cmp
jmp
inc
add
pop
xchg
xor
mov
fsubs
or
xchg
push
push
push
bound
sar
int3
xor
pop
andb
cli
bound
adc
push
js
xor
inc
jb
int3
mov
sub
mov
inc
sbb
push
insb
add
sbb
lock
cwtl
push
movsb
cmp
inc
fimuls
fcomps
sarb
clc
std
and
lret
xlat
data16
faddp
inc
out
addl
dec
push
aaa
jne
push
mov
jle
jno
clc
mov
mov
push
inc
xor
in
adc
inc
cmpsb
cmp
in
jne
or
aad
outsb
scas
sbb
test
aam
iret
or
inc
adc
stos
movsb
mov
xchg
bound
and
sbb
jb
or
jbe
mov
out
pop
mov
mov
aaa
mov
or
sbbl
jne
je
dec
push
cmp
leave
fsubrp
out
add
cmp
dec
xchg
clc
in
push
inc
pop
stos
sub
cmp
or
mov
lock
fdivr
pop
pop
mov
push
fstps
leave
push
and
fildl
push
pop
and
mov
push
and
psrld
push
sbb
xor
xor
js
and
leave
mov
call
in
aaa
fdivs
mull
dec
in
mov
mov
push
in
adc
add
pop
jbe
jecxz
push
jle
and
fistpll
jle
lahf
shrb
dec
into
push
add
mov
push
adc
push
pusha
cmp
push
push
mov
jno
mov
mov
push
leave
lret
sub
mov
dec
inc
and
es
inc
sub
push
les
sbb
sti
cwtl
arpl
pop
push
in
sub
pop
adc
fidivrs
adc
sbb
fimull
hlt
dec
ja
cs
push
stc
jmp
mov
inc
push
and
and
adc
sub
jo
in
mov
lock
mov
aaa
sub
xchg
jmp
sbbb
bound
inc
andb
insl
aaa
add
push
add
sbb
faddl
cmp
and
push
jl
sub
out
mov
lret
test
rclb
inc
dec
inc
clc
mov
sbb
fs
pop
ret
sub
push
mov
jb
dec
outsl
mov
jge
pop
push
inc
repnz
jo
mov
mov
mov
sub
push
push
mov
rclb
into
mov
ss
inc
push
adc
jbe
ja
xor
push
and
and
dec
pop
push
adc
mov
sbb
rcll
or
cmc
cld
xor
mov
inc
sbb
pusha
adc
idivb
sbb
pop
icebp
cwtl
mov
addr16
ss
add
push
push
in
test
jne
add
pop
stos
iret
mov
or
cmp
sbbl
mov
mov
andl
mov
add
xchg
call
push
fsubs
pop
mov
adc
inc
hlt
mov
mov
add
pushl
or
xor
push
cmpb
jle
imull
push
into
cmp
fcomi
fstpt
nop
inc
or
and
in
push
inc
mov
stos
mov
aas
mov
cmp
dec
xor
mov
pop
or
push
ss
or
and
dec
jne
hlt
movups
push
int
and
xor
test
mov
or
push
inc
cmp
mov
add
xchg
stos
jle
sub
push
dec
int3
insl
mov
lcall
test
mov
add
add
fcoms
mov
out
jl
jmp
fcomps
cmp
mov
or
clc
and
in
fldcw
jp
arpl
push
or
mov
ljmp
add
std
jp
lcall
cmp
sbb
sub
les
push
xchg
jp
mov
pusha
cli
cmp
push
push
add
shll
add
fistpl
inc
push
inc
pop
and
mov
out
or
add
add
sub
xlat
add
sub
test
std
sbb
sub
push
nop
push
popf
test
xchg
push
jns
jbe
cmp
fs
cmp
and
int3
inc
cmpsb
aad
arpl
cltd
push
pop
idiv
jne
ds
lret
cmpb
mov
inc
push
push
ss
push
imul
sbb
pop
pusha
mov
or
out
add
xorl
fstpl
push
aam
push
sbb
js
lcall
mov
decl
cmpb
dec
jecxz
test
mov
fs
test
adc
cmpl
add
sbb
jae
neg
cmp
jle
lea
sbb
mov
inc
arpl
pop
inc
push
or
aas
dec
scas
shlb
arpl
sub
and
add
loope
iret
js
jmp
test
cmp
popa
push
pop
sbb
aas
sbb
xlat
push
mov
push
sbb
dec
lods
pop
aad
insl
es
or
fisubrs
inc
push
rorb
push
test
repz
xchg
pop
arpl
sub
movsb
or
push
adc
cwtl
lcall
mul
mov
pop
sahf
shlb
std
addl
std
or
test
dec
pop
xchg
mov
test
mov
and
and
loop
cmp
daa
push
pop
popa
testb
jbe
sub
cmp
xor
iret
add
cmp
test
dec
fidivl
int3
jecxz
xor
and
sbb
repz
inc
lds
insb
adc
adc
insb
inc
push
mov
push
rolb
push
and
ss
dec
adc
mov
pusha
sub
enter
dec
and
push
sbb
mov
xchg
cmp
dec
dec
pop
add
stos
test
lret
fnstcw
sti
test
orl
cwtl
outsb
pushf
pusha
and
or
mov
add
dec
out
mov
sub
rorb
iret
push
inc
dec
pop
mov
ljmp
and
push
jg
mov
add
scas
push
ret
pop
das
pop
push
subl
xor
xchg
cmp
cli
mov
mov
cmpb
rorb
mov
bswap
test
cmp
jbe
jmp
push
lds
sbb
rcrb
sar
daa
nop
cwtl
xor
dec
popa
sbb
push
mov
adc
iret
inc
sub
or
dec
addr16
inc
jg
pop
jnp
and
mov
mov
outsb
xor
add
add
cmp
xchg
mov
adcl
pop
pushf
scas
popf
sti
or
sbbl
jecxz
dec
mov
aad
push
loopne
out
int3
test
arpl
pop
mov
in
lea
xor
jns
sbb
mov
push
fcoml
mov
jns
pop
mov
popf
jge
or
xor
dec
sbb
popl
testb
sub
pop
cld
dec
clc
inc
pop
jbe
aam
mov
nop
mov
pop
or
jmp
aad
dec
inc
mov
push
movsl
push
sbb
and
jl
test
mov
lret
ss
scas
mov
mov
add
jae
daa
xchg
stos
add
addr16
mov
or
xchg
mov
pop
push
push
neg
mov
jl
or
push
mov
jo
and
mov
jbe
sbbb
loope
and
jno
movb
add
jp
arpl
jle
loope
mov
adcl
sahf
sbb
inc
xchg
dec
scas
aaa
xor
or
gs
and
enter
ss
adc
mov
add
adc
inc
pop
push
push
dec
jecxz
arpl
stos
push
xchg
out
push
fsubrs
add
and
adc
ror
in
pop
scas
xor
jne
cmpl
fstps
ret
mov
fisubs
fcompl
cmp
sbb
pop
sar
mov
nop
xor
cmpsl
mov
incb
xor
fadds
das
xchg
push
mov
xchg
xchg
pop
sub
mov
sbb
dec
clc
imul
inc
dec
jmp
cmp
xlat
push
dec
jns
sbb
sub
movl
cmp
repz
xor
movsb
cmpsl
sub
je
xchg
xchg
push
dec
mov
ficompl
rorb
push
lea
jnp
add
inc
dec
push
cmp
pushf
cmp
ret
push
dec
mov
jo
xchg
shlb
lds
jmp
adc
std
sbb
insb
out
sar
push
rol
popa
xchg
nop
adc
test
cmc
pop
insb
mov
sbb
add
push
in
push
add
xchg
mov
pop
nop
mov
add
inc
pop
or
add
xlat
cmc
sub
or
or
sub
es
and
insb
sbb
or
xor
push
mov
mov
mov
repz
es
test
push
mov
cmp
or
adc
iret
sub
xchg
scas
popa
push
sbb
dec
push
gs
cmp
lret
es
dec
cmp
in
popa
mov
push
lock
xchg
pop
mov
sbb
stos
cli
mov
test
pop
jecxz
mov
and
imul
pop
sbb
mov
cmp
aaa
fnsave
movb
inc
jmp
test
sbb
inc
jle
cmp
outsb
test
sbb
pop
adc
shr
or
cmpsb
or
mov
cltd
popa
dec
inc
inc
mov
idivb
dec
fsubl
dec
mov
add
insb
loopne
cli
xchg
das
test
sarb
add
popf
cmovl
adc
adc
or
pop
pop
inc
in
mov
cli
push
adc
lods
adc
push
ret
fcoms
pop
jae
cmp
and
dec
in
cmpb
xchg
dec
and
clc
shll
dec
scas
test
arpl
fiaddl
into
push
dec
sub
or
pop
mov
add
mov
add
in
push
pop
xchg
gs
mov
mov
or
test
movsl
jo
push
or
stc
bnd
push
add
adc
fcom
rclb
call
test
cmp
push
add
dec
add
out
add
push
arpl
shll
xor
or
pop
push
mov
sbb
and
jge
gs
adc
xor
and
xchg
cmp
negl
jnp
addb
mov
mov
shlb
adc
adc
rcrw
adc
lea
pop
mov
cmp
jno
mov
jl
icebp
push
popf
ss
add
add
sub
mov
lea
and
push
cmp
mov
stos
stos
push
add
pop
push
test
stos
push
xorl
cmp
add
loopne
xor
clc
pop
xchg
movb
sbb
fidivl
leave
pop
mov
jge
test
int3
ja
jmp
sbb
or
sub
inc
mov
cmp
pop
pop
push
inc
in
into
push
add
cmp
scas
dec
cmp
mov
data16
sbb
nop
cmpl
xor
cmp
jl
push
sbb
and
push
or
clc
ds
lds
les
or
cmp
ljmp
hlt
mulb
push
rcll
or
adc
test
testl
cli
arpl
dec
fs
jl
mov
and
adc
pop
cmp
out
pop
inc
push
sub
push
or
mov
outsl
adc
xor
cltd
imul
push
mov
mov
pop
rcrb
dec
pusha
add
aaa
push
mov
dec
cmpl
mov
loop
cmpsl
jo
push
sbb
mov
push
sub
lea
test
movsl
pop
or
push
call
test
lock
push
xchg
dec
ss
mov
or
testl
push
push
mov
popa
push
mov
dec
nop
pop
lds
fcompl
pop
sets
shrl
and
outsb
add
sub
xor
xchg
mov
cmp
or
and
and
adc
out
dec
je
add
inc
sti
repnz
mov
test
or
jp
jae
adc
dec
aas
pop
pop
notb
dec
xlat
dec
pop
sti
sub
xor
cmp
inc
push
and
push
jg
mov
cmp
or
xor
xor
and
pop
cmp
inc
mov
adc
sbb
sub
test
add
les
and
or
mov
adc
loopne
arpl
mov
jmp
mov
lock
pop
push
loopne
xor
insl
xor
jecxz
shll
push
adc
dec
rcrl
push
sbb
push
mov
add
pop
adc
stos
add
dec
add
xor
mov
ret
out
pop
and
enter
adc
jbe
push
rcll
dec
xchg
cmp
pusha
pop
mov
push
sub
aas
sub
sub
dec
dec
pop
pop
aad
cltd
lcall
loop
stos
inc
pop
je
cmp
mov
mov
lods
push
xchg
lret
xor
xchg
shlb
shrb
shll
adc
cmp
pop
negl
loopew
sti
sub
dec
pop
push
inc
xchg
pop
lahf
mov
dec
loopne
inc
push
cmp
xlat
arpl
xchg
icebp
cmp
roll
mov
add
add
cltd
pop
sbb
daa
je
rcrb
push
sbb
dec
and
jl
add
lock
cmp
pop
sub
outsl
lret
pop
sub
or
sbb
jbe
add
push
mov
push
fs
popa
mov
inc
xchg
sbb
mov
cmp
cmpb
and
push
popa
test
aaa
and
icebp
mov
fnsave
xor
repz
xchg
cmp
jp
rcr
and
or
lahf
incl
fdivrs
test
test
fsubrl
adc
or
daa
sbb
mov
mov
lock
mov
fisttpl
jno
invd
fcomps
pop
mov
push
sub
sbb
mov
mov
add
or
or
pop
rclb
pop
jne
in
cmp
and
jecxz
arpl
push
push
mov
pop
mov
ret
and
add
dec
and
or
insl
add
mov
sahf
or
push
jge
std
push
hlt
add
rclb
add
in
jo
mov
mov
imul
cmp
or
mov
inc
mov
leave
int
xor
sub
xor
xchg
rcrl
roll
or
inc
mov
or
add
xchg
lahf
loopne
loopne
jmp
lods
sahf
add
dec
iret
mov
or
js
cmp
pop
out
call
jl
or
adc
nop
pop
sarl
mov
push
push
push
les
push
pop
rcrb
mov
ret
push
or
arpl
xor
jle
mov
in
test
pop
or
pushf
inc
jp
lock
jbe
jne
push
dec
roll
cmp
scas
pusha
sbb
lret
sbb
and
inc
and
inc
call
mov
rorl
and
inc
lock
sbb
outsl
rcrl
rorl
lds
push
mov
pop
mov
sbb
mov
sub
and
loop
pop
bound
orl
rcrb
inc
push
xor
push
mov
pop
cmp
inc
das
mov
orl
or
je
mov
popf
mov
sub
sub
add
sub
jmp
add
mov
inc
inc
lods
hlt
in
mov
add
lcall
daa
out
inc
cld
bound
cmpsl
out
mov
arpl
add
and
movb
sub
sbb
icebp
sub
inc
xchg
mov
mov
mov
pushf
dec
sbb
in
stos
movsl
lods
mov
push
mov
push
xor
out
push
jmp
inc
sbb
out
cli
inc
sub
mov
mov
in
dec
mov
pop
mov
cmp
xor
push
mov
or
or
add
outsb
adc
cli
sub
sub
mov
shl
cmp
test
jle
loop
and
shl
pop
sub
fcmovb
pop
addr16
add
lea
adc
xchg
jecxz
cmpb
sbb
cmpsb
in
xor
andl
imul
pop
mov
mov
testb
add
adc
add
add
dec
mov
out
daa
mov
xchg
sbb
adc
or
xchg
sarl
mov
xor
shlb
rclb
ljmp
or
pusha
pop
out
stos
pop
push
mov
xchg
push
into
fistl
push
xchg
push
mov
sbb
mov
aam
jo
leave
call
loopne
arpl
pop
lahf
jecxz
pop
je
push
aad
pop
push
stc
test
or
xchg
mov
adc
add
xchg
out
jno
movb
inc
stos
push
out
adc
dec
pop
out
arpl
test
ja
lea
push
mov
aam
adc
adc
jb
mov
adc
int3
adc
sub
inc
imul
push
push
ds
leave
lock
dec
enter
rolb
hlt
hlt
sbb
arpl
mov
push
pusha
rcr
or
dec
fs
andb
push
addr16
dec
pushl
add
orl
pop
imul
mov
loop
aam
fdivrs
inc
inc
cmp
jmp
xor
jge
jmp
xchg
bound
imul
lcall
cld
sbb
mov
sub
js
adc
sub
lds
mov
add
ss
jg
dec
push
push
xchg
sbb
inc
or
into
push
cli
insl
mov
jno
lods
pop
mov
ljmp
inc
dec
mov
mov
adc
lods
test
cmp
and
pop
dec
aad
outsb
add
and
xchg
popa
push
les
push
mov
cld
pop
adcl
mov
adc
xchg
adc
pop
mov
add
dec
jne
mov
rclb
in
mov
fs
out
adc
push
adc
shlb
dec
in
adc
and
mov
sub
add
inc
cmpsb
xchg
orb
test
adc
rcll
outsb
inc
jp
arpl
sub
loope
lds
loop
and
add
push
cmp
jne
fdivl
int
inc
xchg
roll
gs
stos
and
and
jecxz
mov
punpckhdq
xor
add
lods
jp
out
out
out
push
test
inc
leave
mov
clc
add
lds
pop
cmp
aam
jmp
mov
ret
in
jp
lds
in
cmp
lret
rcrl
xor
and
cmp
daa
add
out
jno
mov
or
xchg
das
int
add
add
push
jo
mov
inc
sub
lods
dec
cwtl
jae
sbb
push
inc
pop
sti
mov
std
fsubrs
mov
push
in
xor
or
add
pop
xor
sbb
fdivp
movsb
daa
test
push
dec
ljmp
dec
dec
adc
ss
popf
dec
sub
jmp
sbb
cmc
push
push
or
adc
mov
cmovp
js
mov
dec
dec
or
je
lahf
xor
pop
dec
outsl
pop
hlt
add
mov
sub
or
xchg
push
sub
imul
sub
dec
shlb
mov
mov
lds
pop
and
push
cmp
push
scas
adc
push
mov
in
test
bound
adc
adc
test
sbb
sti
add
push
xor
loopne
outsl
inc
sbb
aad
add
loopne
lea
mov
jmp
or
jg
sub
push
repz
inc
fisttps
adc
or
adcl
inc
ljmp
shll
cwtl
sub
mov
fimull
subb
dec
sbb
test
jecxz
or
or
int
fcoms
pop
mov
xchg
xor
jno
test
loopne
inc
loopne
outsl
dec
test
aam
and
sub
jg
push
xor
dec
and
and
fistps
xchg
loopne
sub
mov
xor
sti
mov
dec
js
jo
pop
and
sub
add
cld
int3
rolb
popf
test
adcb
stos
jmp
xchg
sub
xor
leave
adcl
aad
mov
js
push
lds
sbb
or
popl
adc
mov
adc
jbe
lods
sbb
cld
adc
xor
adc
rcll
mov
mov
cs
sbb
hlt
mov
mov
loopw
sahf
inc
push
cmc
pop
push
push
adc
popf
or
mov
sbb
sub
xor
sbb
addb
mov
dec
push
push
adc
push
push
mov
pop
mov
decl
xor
stos
sahf
adc
add
xor
or
inc
adcb
lcall
pusha
xchg
sbb
dec
testb
and
aaa
sbb
test
push
push
push
adc
xor
hlt
sbb
test
inc
or
cs
test
add
mov
dec
enter
mov
and
or
leave
fildll
in
das
cmp
jns
xchg
adc
ret
or
call
jmp
cld
push
push
dec
mov
jno
adc
dec
cmp
dec
push
push
comiss
adc
inc
xchg
rcrb
push
add
std
dec
xlat
pop
imul
ret
or
test
push
mov
add
cmp
mov
lods
out
pusha
aad
cmp
dec
loopne
xlat
test
or
xlat
adc
ds
pop
adc
lods
cmpl
loopne
mov
cmp
ljmp
mov
sbb
sbb
lds
pop
jo
inc
mov
sub
sub
jge
out
les
ss
sbb
mov
lret
push
movsl
cmpsb
mov
dec
aam
fs
out
add
dec
lcall
sbbb
lret
inc
int3
adc
test
xchg
push
adc
test
mov
fldcw
mov
int
lcall
dec
popa
repz
cmp
int3
sahf
rcl
mov
sub
push
repz
cmp
sti
test
repnz
lds
arpl
jmp
push
push
daa
xor
cs
pop
out
orl
mov
lods
push
pop
or
mov
aad
mov
dec
jge
jo
fcoml
adc
jnp
dec
mov
fadds
movb
stos
fwait
push
mov
lcall
daa
nop
mov
aas
pushf
mov
lods
jno
pop
or
cmp
push
push
addr16
loopne
push
jmp
and
icebp
cmp
push
int
add
lcall
jno
add
imul
cmp
std
pop
dec
push
adc
and
or
jo
call
es
sbb
sub
es
jbe
and
or
dec
dec
dec
mov
inc
lock
inc
ret
std
push
push
in
add
push
mov
test
lds
dec
adc
mov
push
pop
popf
ss
shrl
gs
mov
sub
adc
xor
xor
jp
push
js
cmp
or
adc
sub
test
cwtl
cmc
movsb
mov
repnz
sbb
mov
sub
in
xor
fidivs
jnp
jmp
push
or
jge
push
add
xor
addr16
clc
mov
jmp
adc
cmp
popa
jo
pop
lea
jl
js
in
and
movsb
jle
or
add
cmp
and
push
test
dec
add
jmp
dec
insl
add
push
cld
sbb
or
inc
cmp
pushf
jg
inc
in
mov
and
xchg
jo
stos
fs
sbb
adc
mov
inc
mov
arpl
out
push
jne
pop
rcrb
repz
pusha
and
jne
iret
pusha
add
xchg
sub
imull
cmp
xchg
mov
dec
add
roll
mov
xor
adc
inc
sub
xchg
xor
lret
add
jbe
sbb
cmp
arpl
push
jmp
push
xchg
inc
sbb
push
push
mov
sub
sbb
jle
xor
mov
pop
add
enter
iret
pusha
mov
push
pop
mov
lock
inc
dec
add
sbbl
mov
or
sbb
inc
jo
xor
roll
pop
cltd
sub
push
movl
int
cmpsb
jae
sub
push
and
or
rcll
loopne
add
mov
idivl
rol
adc
cmp
dec
andb
dec
jle
push
mov
loopne
and
dec
push
mov
inc
xchg
inc
dec
cld
mov
in
and
test
pop
push
addr16
pop
call
outsl
cld
push
iret
outsb
sbb
sbb
jno
sub
dec
iret
xor
lea
xlat
mov
fbstp
fisttpl
add
test
push
shlb
sbb
mov
mov
xor
mov
pop
pop
sbb
dec
jb
adc
cmp
pop
adc
arpl
pop
sub
adcb
adc
faddl
rorb
shlb
cmp
and
push
les
mov
fs
or
sub
or
pop
fwait
push
and
mov
cmpsb
xor
mov
test
push
add
dec
xor
stc
cmovb
dec
push
pusha
mov
mov
push
lock
subl
cmp
aad
push
inc
mov
clc
ds
lods
in
sti
test
push
mov
stc
nop
xchg
pop
call
push
push
ja
lock
aas
out
mov
fmuls
out
loopne
call
loop
js
sub
push
cmp
push
adc
fldenv
pop
subb
and
or
push
cmp
dec
lds
dec
iret
pop
imul
daa
pop
and
or
inc
dec
outsb
sub
aam
mov
inc
nop
or
push
js
mov
inc
cmp
pop
sub
push
inc
jns
or
call
cmp
pop
cmpsb
mov
inc
add
cmp
test
and
lcall
push
add
jmp
shr
shr
test
push
xlat
inc
mov
sti
jns
mov
movsb
test
ja
inc
push
push
and
jle
aaa
movsb
pusha
imull
push
push
pushl
add
sbb
push
push
lock
call
jmp
pop
push
add
mov
lock
mov
leave
xchg
mov
add
and
sbb
jl
xor
mov
cmp
arpl
cld
xchg
push
mov
sub
jl
lock
mov
movsb
cmp
and
roll
call
dec
mov
cmpb
sbb
or
sbb
pusha
jnp
add
jne
cli
pop
pop
push
cld
push
pop
mov
add
test
fdivs
add
jo
nop
add
stc
jns
push
push
pop
sbb
and
jbe
add
push
loopne
inc
imul
aad
dec
notb
popf
xchg
mov
cmp
inc
loope
jnp
lea
lea
daa
mov
push
pop
mov
pop
cmpl
and
fucomip
push
cmp
fdiv
add
add
add
test
push
add
lock
sub
and
in
fisubl
fcmove
lcall
enter
sub
add
pushf
shlb
jp
ds
push
push
sbbb
testb
and
fimuls
dec
lea
andl
adc
mov
cmc
inc
pop
mov
loop
cmp
inc
pop
mov
mov
inc
lcall
aad
ret
movsl
inc
and
or
imul
inc
mov
or
inc
icebp
ficompl
sbb
mov
out
test
cmp
add
pop
test
movsb
add
in
pop
or
cmc
mov
push
lahf
lret
jns
loopne
inc
push
inc
mov
scas
push
arpl
sbb
push
xchg
jnp
xor
stos
add
ds
xor
add
dec
push
test
das
cmp
or
inc
xchg
cmp
pop
mov
mov
subl
or
dec
dec
das
idiv
mov
or
test
mov
sub
dec
hlt
inc
sbb
pop
ret
std
push
mov
adc
inc
int
aam
adc
or
pop
or
cmp
push
push
fldenv
sub
or
je
jmp
push
out
test
rorl
leave
cmp
insl
jbe
sbb
push
hlt
sbb
push
int3
mov
je
dec
pop
in
daa
mov
mov
add
leave
ret
pop
mov
add
fwait
adcl
mov
stos
shll
jge
in
je
jnp
bound
xor
adc
jmp
testb
arpl
dec
imul
repnz
and
nop
dec
inc
pushf
test
push
xor
and
xor
or
push
add
mov
arpl
or
and
sbbl
dec
mov
jp
dec
sbb
push
loopne
mov
xchg
int3
cmp
outsb
mov
sbb
or
les
inc
loopne
push
mov
sub
cmp
cli
jo
std
pop
adc
dec
testl
xchg
jle
mov
xor
xorl
push
push
xchg
adcb
add
rclb
xor
pusha
std
sahf
leave
int
pop
push
and
bound
and
mov
sarl
lcall
sbb
aad
mov
mov
push
add
ret
fwait
sub
into
cmp
mov
add
fadds
dec
popa
clc
mov
mov
sub
dec
sub
or
push
outsl
dec
mov
mov
inc
cmpsb
add
or
sbb
or
mov
adc
xor
stos
fdivl
pop
push
outsb
mov
pusha
call
mov
xor
repnz
mov
cmpl
mov
aad
pop
or
addb
cmp
xor
insl
bound
repz
jp
sbb
lods
fwait
mov
es
stc
adcl
js
jb
pop
fwait
xor
shll
loop
arpl
xchg
inc
mov
xor
push
cli
or
je
mov
mov
fbstp
aam
aam
gs
mov
daa
xchg
ja
andb
push
repz
loop
pop
mov
mov
rcrb
dec
out
aad
mov
mov
push
lcall
out
lock
mov
push
mov
jl
out
pop
pop
ror
mov
bound
addr16
rorl
inc
sbb
add
lret
pop
cmp
in
popa
jge
in
rol
push
pushf
push
int
cmp
aas
lret
or
addr16
mov
stos
mov
xchg
pop
decl
insl
pop
sbb
pop
neg
lea
mov
bound
cli
pop
cmp
rcrb
sub
sahf
dec
lock
movsl
stos
dec
test
xchg
jb
mov
inc
stos
jge
pop
dec
jl
adc
xchg
outsl
orb
mov
fistps
sar
out
xchg
das
call
and
test
sbb
mov
pop
imul
cld
push
imul
mov
sbbl
push
xor
or
test
adc
int3
push
roll
inc
cmp
pop
lret
ds
mov
insl
adc
sub
inc
add
sbb
ljmp
jae
test
xchg
sub
shlb
in
fs
mov
sub
aam
push
add
pop
and
push
xchg
xor
mov
loop
sbb
loopne
addb
adc
mov
push
or
imulb
sub
xchg
adcl
mov
jne
outsl
loop
pop
add
cltd
xor
dec
sbb
sbb
inc
mov
test
pop
mov
mov
iret
xchg
pop
xor
jb
dec
in
lds
mov
addr16
rolb
outsl
je
mov
loope
mov
in
insl
add
xchg
shlb
imul
aas
cli
sub
jge
xor
inc
inc
jl
adc
push
aad
rcrb
jb
repz
jno
push
cmp
dec
push
cmp
ret
and
test
ljmp
sub
and
xor
xchg
cmc
inc
xchg
inc
mov
jp
sahf
ret
cli
cmp
and
or
imul
sbb
outsl
rorl
inc
cmpsl
cltd
lds
lds
dec
sub
mov
enter
mov
mov
inc
xor
push
mov
mov
push
je
mov
ret
add
add
fisubrl
stos
or
pop
mov
daa
ror
out
aad
jo
pushf
frstor
xor
xchg
xchg
pop
inc
push
jno
push
cmp
and
cmp
inc
cld
push
push
sete
jnp
add
into
lret
daa
or
fbld
push
in
push
dec
out
repnz
mov
jne
subl
pop
incl
pop
push
aas
inc
xlat
pop
push
pop
add
scas
or
or
xchg
cmp
data16
dec
push
add
sub
sbb
push
out
loop
sbb
sti
push
cmp
push
addr16
push
dec
push
pop
and
xchg
loopne
adc
repnz
cmpsb
add
xchg
or
cs
jl
xor
imul
int3
out
push
adc
xchg
ret
loopne
shlb
pushf
push
movb
subl
xor
ret
push
stos
xchg
lret
sbb
or
les
sti
out
sahf
orl
scas
push
cmc
xor
stc
call
dec
mov
xor
mov
loopne
inc
xor
pop
cmp
mov
ret
xchg
pop
sub
in
negl
push
dec
mov
fistps
mov
inc
mov
jnp
sbb
xchg
test
push
les
scas
pop
lahf
sub
fdivs
dec
jl
push
aas
idivb
mov
push
sub
push
fisttpll
and
loop
adc
xlat
sbb
rcrb
pop
pop
xchg
inc
mov
or
icebp
push
je
cltd
enter
insl
sub
adc
push
dec
mov
adc
sbb
cwtl
jp
pop
sbb
ret
xchg
sbb
ljmp
leave
cmpb
sbb
mov
and
jle
insb
inc
cld
dec
pop
or
rolb
adc
cmc
inc
and
in
dec
cvtps2pi
cli
mov
push
add
fimull
adc
shl
insl
test
sahf
jecxz
adc
xor
bts
xlat
mov
sbb
cmpsl
movb
xchg
addb
xor
add
pop
adc
push
xor
cs
mov
add
push
push
shrl
pusha
js
dec
add
clc
add
xchg
push
push
in
push
sub
shrb
xchg
inc
xchg
mov
push
cld
jbe
xor
adc
dec
inc
mov
pop
call
inc
adc
jge
mov
cmpb
jmp
test
xor
sub
movsb
js
shl
movl
sbb
cli
push
sbb
inc
inc
pop
test
push
pop
test
js
test
shl
jne
xchg
dec
pop
push
pop
arpl
cmc
dec
sub
cmpsb
mov
jno
and
pop
int
inc
dec
xcrypt-cbc
cmpsl
xchg
dec
inc
sbb
test
aam
aad
insl
mov
adc
xor
test
pop
cmpsl
or
shlb
jb
xchg
push
addl
loop
pop
inc
inc
mov
pop
push
ret
and
dec
rcrl
lea
icebp
mov
adc
dec
loope
dec
cmp
and
ret
aaa
fs
sbb
les
sub
push
xchg
xchg
add
jbe
cmc
and
pusha
add
sbb
dec
adc
idivl
or
mov
cli
xchg
or
cmp
shrl
xor
test
leave
add
lea
cmc
xchg
mov
sub
or
into
add
pusha
movsl
clc
cld
adc
movsb
addl
shlb
add
pop
push
or
loopne
cmp
daa
adc
mov
imul
xchg
testl
pusha
add
loope
pop
lods
out
arpl
sahf
dec
mov
and
mov
stos
mov
pusha
or
mov
jbe
pop
test
sub
sbb
test
adc
pop
jg
sub
add
enter
adcl
or
push
inc
fcmovnu
dec
add
jnp
or
sarb
mov
push
rolb
loope
pop
loopne
xchg
or
pop
shrb
xchg
sahf
js
mov
add
imul
movb
popf
xor
andb
push
adc
push
cs
pop
cmp
or
lock
mov
addl
cmp
jbe
ljmp
pop
test
push
mov
push
pop
and
push
je
push
sbb
repz
push
je
jecxz
xor
push
stos
lea
or
cmp
cld
jle
mov
sbb
mov
adc
pusha
push
add
dec
rol
leave
mov
jne
stos
sbb
sbb
lock
jg
dec
jl
pusha
lock
jle
xor
inc
ss
stos
dec
lds
testl
push
cmp
inc
dec
cmc
andl
sub
add
push
pop
inc
inc
add
xchg
out
push
stos
dec
inc
hlt
pop
inc
add
mov
clc
cmpb
or
push
xor
imul
jmp
push
pop
jge
sbb
clc
pusha
push
jl
jmp
and
mov
in
cmpsb
push
jl
andl
dec
adc
adc
pop
push
sub
push
add
iret
inc
dec
dec
push
push
jno
jae
cli
mov
cmp
adc
xlat
xor
sub
xlat
fs
bound
insb
xchg
mov
call
jne
adc
jns
mulb
insl
adcb
xlat
push
mov
mov
test
sbb
adc
add
push
xchg
loopne
push
add
xchg
test
and
cmp
push
sbbl
or
inc
ja
sbbl
dec
shlb
mov
rcll
cmp
xor
xchg
andb
cmp
push
sbb
sbb
jno
arpl
and
push
sub
add
mov
push
or
and
and
mov
lods
fimuls
cmp
mov
lret
mov
and
pop
repz
sbb
cmovbe
adc
pop
jne
push
sbb
mov
mov
xor
push
testb
rcll
add
jns
xchg
jl
add
aad
jo
fcoml
inc
icebp
add
dec
in
and
mov
daa
insl
push
cmpsb
jg
aam
sahf
mov
movsl
dec
add
jbe
mov
inc
subb
pop
lea
mov
popf
or
lahf
stos
pop
push
fisttpl
sub
pop
fiaddl
out
xlat
sbb
pop
je
pop
in
jno
or
ljmp
and
stos
add
add
dec
shrb
mov
ss
jne
pusha
std
lcall
xchg
cs
inc
xor
sbb
inc
rcr
mov
add
pop
cmp
mov
pop
pushf
jecxz
push
mov
push
test
loopne
inc
aas
add
in
jnp
xor
cwtl
sub
sarb
xor
loopw
inc
sbb
jge
sbb
dec
loopne
addb
add
pop
rcll
fiaddl
jo
movsb
clc
mov
out
movsl
dec
cmp
pusha
pusha
cli
or
test
push
pop
inc
push
pop
bound
push
xchg
add
pop
das
les
popf
or
dec
sbb
pop
dec
fs
sub
push
or
test
mov
adc
jge
js
mov
or
dec
out
imul
sub
in
fs
repz
inc
sbb
ja
sub
and
test
shlb
mov
add
xchg
repz
pushf
mov
xor
xor
xor
jp
ss
add
and
dec
push
or
cmpsl
sbb
lock
push
inc
xchg
mov
mov
xor
cmp
inc
andb
jae
jmp
jo
mov
std
and
pop
add
add
sub
popf
movl
cmp
pop
cmp
daa
push
sbb
pop
sub
sub
imul
push
ss
mov
cmp
es
shrl
popf
add
shrb
fildl
test
and
iret
loopne
add
and
mov
pop
lock
nop
push
pushf
or
jbe
cmp
xor
fbstp
in
mov
pop
test
and
jne
movsl
mov
adc
pop
scas
or
sahf
push
sub
outsl
jge
mov
cmpsb
jl
jmp
movb
add
adc
mov
add
neg
sbb
and
add
shlb
scas
and
add
adc
add
pop
xor
and
or
push
mov
shlb
aas
push
xchg
add
in
daa
lcall
mov
lahf
in
ss
and
sub
mov
adc
stos
mov
push
movl
add
mov
mov
jle
pop
or
pop
sbb
subl
jns
push
xor
push
and
inc
cwtl
out
insb
lret
mov
inc
inc
inc
inc
mov
test
adc
into
cmp
or
mov
cmp
pop
xor
push
push
push
mov
les
popf
pop
inc
mov
jne
sbb
das
adc
mov
xor
mov
push
sub
cld
jge
or
and
and
out
dec
add
outsb
insl
fldt
cli
jmp
fwait
icebp
rcll
stos
pop
sub
xchg
mov
pop
jmp
push
sbb
mov
mov
inc
add
push
jl
mov
sbb
lods
and
mov
sbbb
mov
xor
cmp
jo
icebp
add
lahf
mov
ja
clc
dec
int3
movl
pop
sbb
pop
and
cmp
pushf
sub
xor
lds
adc
mov
push
add
xchg
data16
rcl
fisubs
fisttpll
das
in
test
mov
add
mov
and
arpl
or
icebp
adc
sub
cmp
push
cli
inc
sbb
push
pop
divl
adc
or
out
inc
shll
pop
aaa
repz
fiadds
stos
iret
adc
sbb
pop
or
lds
add
bound
fcmovbe
mov
into
clc
pop
or
mov
sbb
fs
mov
xor
add
pop
push
repnz
jmp
hlt
add
ja
xchg
jb
push
xchg
fwait
ds
stos
test
pop
sbb
fiaddl
adc
push
add
xor
cmp
out
push
sub
add
inc
testb
mov
out
clc
mov
lods
pushf
mov
aad
mov
cld
push
rorl
in
mov
xor
or
xlat
pop
mov
and
lods
call
sarb
sarb
ret
ret
loopne
int
lahf
mov
orl
mov
mov
mov
arpl
bound
mov
inc
or
pop
or
pop
and
mov
sbb
sbb
shl
loope
mov
xchg
mov
add
push
pop
pop
test
clc
clc
xorl
jnp
loopne
gs
movsb
mov
add
sbb
ret
push
xchg
or
inc
js
and
fbld
sbb
pop
ret
adc
enter
insl
inc
ficompl
dec
test
in
adc
mov
clc
xorl
cmp
clc
aas
adc
cmp
jnp
jge
add
add
mov
add
pop
mov
addb
push
mov
xlat
cmpsl
adc
cmp
push
or
outsb
sub
add
or
push
js
push
les
je
mov
test
push
shll
mov
add
jb
adc
add
add
mov
mov
fdivl
pop
jg
pop
daa
push
push
hlt
addb
pop
pop
adc
push
cmp
data16
sbb
sbb
push
dec
ficomps
mov
adc
ret
inc
mov
mov
sbb
loope
or
push
sub
cs
pop
sbb
and
or
sbb
inc
lret
pop
mov
pop
add
pop
pusha
xchg
and
mov
pop
xor
sahf
cmp
lds
cmp
mov
jo
mov
push
iret
inc
or
sti
shll
nop
adc
xor
and
out
cwtl
or
popf
lahf
cmpb
cmp
pop
enter
inc
rol
sarl
jo
inc
dec
push
dec
cmpsl
push
push
push
mov
sbb
mov
fistpl
push
lock
aaa
sbb
cmpl
inc
jl
stos
inc
adc
test
xor
jmp
lahf
test
shlb
push
adc
mov
xorb
add
pop
or
sub
clc
mov
inc
scas
jb
and
test
cmovno
or
xchg
or
jge
xor
mov
pop
sub
and
fstpt
adc
jge
inc
and
andb
js
xor
stos
xchg
jge
mov
push
adc
lea
ja
and
mov
mov
push
bound
sbb
pop
inc
test
mov
decl
aaa
stos
mov
out
push
mov
movsl
lahf
icebp
scas
or
xchg
push
push
call
enter
clc
sbb
lock
mov
leave
mov
push
push
add
jbe
dec
xchg
stos
push
pop
pop
stos
mov
push
jg
sahf
sbb
adc
push
pop
mov
ret
mov
mov
mov
pusha
pop
rorl
cmp
lds
mov
and
jb
lcall
push
stos
hlt
adc
sbb
jle
loop
pop
push
pop
faddl
das
ss
std
jne
pop
sbb
shlb
or
pop
rorb
out
stc
mov
shll
aaa
cmpsl
movsl
push
jl
mov
push
into
push
or
push
xor
adc
je
subl
adc
mov
sub
push
stos
pop
adc
mov
int3
push
dec
outsl
pop
aad
pop
sbb
pop
xchg
shr
mov
add
add
push
and
mov
lea
js
mov
mov
push
mov
adc
jge
icebp
mov
jg
and
movsb
sbb
mov
daa
xor
sarb
pop
add
int3
loop
ljmp
xorb
ficoms
xchg
jne
inc
jg
and
cmpsl
xor
sahf
lcall
mov
adc
or
mov
enter
dec
aas
pop
push
dec
xchg
or
mov
adc
add
jmp
mov
add
pop
lret
insb
test
add
mov
xchg
fbld
mov
test
mov
or
xorb
sub
cmpsb
add
push
push
inc
loopne
jnp
call
push
in
inc
mov
cmp
paddb
ss
pushf
jns
cmp
mov
test
or
sub
rol
sarl
xor
jmp
jo
jge
icebp
push
and
aaa
sub
cmpb
or
push
imulb
scas
imul
pop
xor
cmp
inc
add
mov
stc
ret
sbb
rcr
push
dec
pop
cmp
mov
insl
test
js
pop
popf
fmull
out
jbe
scas
xor
push
mov
movsl
call
pop
or
out
pop
pop
push
movsl
ljmp
sub
pop
int
and
roll
scas
xchg
pop
jnp
push
mov
cmc
jp
je
jmp
pop
mov
push
sub
scas
pop
push
cmovge
push
fisubs
or
rcrl
shl
xchg
ret
andb
test
and
pop
adc
movsb
aam
adc
ror
and
imul
sub
and
jbe
test
adc
cld
call
and
push
out
mov
push
in
pop
out
lret
sbb
sub
adc
add
or
cmp
test
mov
pop
xchg
shlb
fcmovnbe
mov
inc
cmp
jne
mov
mov
call
out
loopne
mov
sub
pop
test
mov
mov
mov
cmp
inc
push
test
adc
push
xchg
outsb
lods
in
je
ret
rclb
popa
mov
and
fsubrl
xchg
or
cld
sbbl
in
les
mov
mov
in
dec
shll
pop
lods
xlat
mov
shll
roll
call
inc
in
movsl
xor
push
push
push
or
dec
lock
mov
mov
and
adc
mov
mov
cmpl
mov
rorb
pusha
adc
test
inc
add
jg
or
jbe
ja
mov
pop
test
pop
inc
lahf
scas
pop
lds
ds
imul
or
pop
scas
push
test
cmp
pop
mov
or
xchg
out
pusha
pcmpeqd
lret
mov
fsub
and
addl
push
sarl
fs
pop
scas
testl
jae
repz
out
cmp
dec
pop
out
or
pop
pop
sarl
sbb
dec
clc
mov
aam
pop
add
pop
push
or
outsb
lods
insl
hlt
test
outsl
test
xor
xor
cmp
arpl
adc
and
and
mov
lods
push
push
push
daa
sarl
sbb
xchg
mov
cmp
jo
fcoms
mov
fldl
xchg
add
pop
loopne
es
push
add
cmove
fnstenv
mov
sbb
scas
pop
aas
cmpl
or
xor
jo
rorl
pop
or
mov
clc
jne
push
xor
jne
bound
daa
mov
jne
out
dec
ret
mov
jb
xor
pop
outsb
or
andb
outsl
lods
pop
shlb
and
add
mov
out
cli
mov
push
adc
pusha
mov
dec
xchg
adc
push
movsl
and
and
sub
xchg
cmp
jne
push
push
and
xor
andb
inc
icebp
add
mov
mov
sbbb
pop
cmp
jne
add
jae
push
jns
adc
cmp
adc
adc
or
div
js
push
add
scas
xchg
mov
ret
xchg
fildl
aam
jb
mov
jmp
cmp
jno
mov
gs
cmp
adcb
mov
addl
push
adcl
pop
dec
adc
jmp
push
ficomps
sbb
and
repz
roll
les
mov
ret
adc
push
mov
sub
sub
lea
nop
icebp
mov
pop
mov
push
ret
cmp
push
and
jo
scas
adc
xor
dec
mov
ret
mull
mov
sti
push
ret
mov
mov
add
mov
dec
push
inc
mov
sbb
scas
mov
test
cmp
cmp
push
mov
xor
inc
sbb
rcll
bswap
push
lcall
xor
xor
loope
cmpsl
inc
je
lds
sub
lock
push
sahf
nop
xor
lea
inc
inc
cmp
clc
aam
ds
inc
push
mov
jae
mov
jns
adc
outsb
icebp
stos
fcoml
or
sbb
and
and
sub
adc
ret
scas
in
cltd
imul
pop
xchg
adc
sub
push
jge
in
mov
pop
xor
add
les
xchg
enter
mov
pmuludq
jge
lea
push
pop
roll
out
test
shll
mov
push
dec
ret
mov
addl
mov
mov
cmp
inc
add
xor
pop
or
sbb
pop
add
mov
and
test
jo
dec
insb
orb
adc
pop
add
lods
in
jp
jo
and
mov
dec
ficoml
lock
mov
movsb
jle
jo
aas
into
inc
repnz
lret
xor
jb
es
xchg
es
and
test
xchg
pop
fidivs
arpl
mov
or
mov
xchg
mov
call
mov
pop
push
insb
add
je
adc
jne
nop
pop
inc
icebp
js
push
les
xor
push
push
push
push
add
inc
sub
xchg
add
adc
mov
jbe
orl
pop
loopne
pop
shl
pusha
ss
jle
push
int
inc
sub
inc
sub
or
rorl
in
add
mov
inc
outsl
pusha
pop
shll
mov
cmpl
rcr
mov
jle
and
and
ret
stos
stos
fldenv
out
pushf
xor
iret
pop
mov
sbb
mov
push
fimuls
mov
or
pop
ret
js
cmp
bound
lods
pop
mov
test
rorb
adc
add
cmp
call
in
sbb
push
repz
loope
mov
pop
mov
scas
and
insb
and
les
xchg
repz
sub
int
push
pop
push
lea
dec
movb
add
xor
sbb
sub
imul
inc
push
push
outsl
sbb
pop
push
adc
fwait
inc
push
test
xor
into
and
or
adc
ror
cmp
xchg
mov
fisttpl
cld
mov
dec
push
subb
sub
inc
xchg
test
enter
mov
ret
ret
cltd
cmpsl
rcrb
and
pop
mov
addl
stos
in
andb
sahf
jo
iret
cwtl
data16
xor
jb,pt
in
icebp
dec
popa
and
inc
shll
adc
lea
mov
idivl
adc
xlat
xor
out
push
or
mov
ret
sti
rorb
xor
js
in
fdivr
andb
iret
movb
cmp
adc
and
pop
push
in
xchg
andb
lea
push
int3
pop
jle
and
lods
push
jne
mov
push
out
lods
push
cld
jge
pop
inc
xchg
ret
rcll
sbb
mov
push
adc
mov
cld
and
jo
mov
movsl
add
sub
push
cmpsl
jp
and
ret
add
mov
aam
push
mov
jmp
das
cmp
adc
pop
dec
add
push
sahf
mov
pop
adc
jge
or
je
xchg
or
pop
sbb
test
add
lock
pop
inc
lea
scas
xor
imul
push
es
movsb
sbb
clc
scas
inc
adc
loopne
pop
inc
test
dec
loop
push
pop
cmp
std
push
icebp
test
arpl
pop
rclb
jl
xlat
mov
mov
dec
mov
fadds
adc
stos
mov
pop
inc
cmp
loopne
test
cmpsl
ss
mov
sbb
and
mov
inc
loopne
mov
movsb
and
adc
scas
fnstcw
jge
roll
mov
xchg
push
fwait
test
push
or
or
ljmp
add
cmp
inc
out
mov
mov
movsb
loop
mov
iret
mov
or
test
xchg
lret
shl
in
call
jbe
sub
arpl
arpl
cwtl
add
and
mov
mov
xchg
mov
cltd
add
scas
insb
cld
and
movsb
add
rorb
cmp
push
dec
aas
popa
js
push
push
sub
scas
sbb
test
je
in
mov
stos
or
sbb
push
push
iret
or
test
xor
xlat
mov
add
mov
sbb
sub
movsb
dec
inc
jo
dec
les
xor
mov
lods
mov
jno
ljmp
cmp
enter
lea
mov
or
push
or
mov
or
popa
loop
push
push
push
leave
imul
adc
ret
pop
sbb
test
es
ret
int
movsl
or
arpl
lock
mov
xor
push
mov
or
andb
lods
adc
push
pop
push
mov
cmp
and
inc
mov
cltd
pop
and
lds
in
arpl
lea
sbb
mov
mov
sub
or
aaa
pusha
nop
ss
out
add
xor
movsl
sub
adc
lcall
adc
push
out
int
jnp
jo
inc
xchg
mov
es
inc
clc
or
enter
xor
mov
aam
loope
or
inc
sub
rcrb
mov
mov
cwtl
push
pop
or
shl
adc
mov
cld
pop
out
fadds
ljmp
mov
sub
inc
add
icebp
sti
shrl
clc
std
xor
mov
jge
mov
add
arpl
lock
sbb
sbb
std
add
mov
sar
shl
test
inc
sbb
pop
ret
and
lods
rorb
cld
rcll
loope
ss
mov
inc
push
inc
loope
fwait
dec
clc
sub
push
and
add
je
pop
push
xchg
movsb
and
mov
mov
call
cmp
jmp
dec
or
iret
cmp
lret
sbb
pop
inc
int3
andb
test
out
bound
fldcw
pop
push
sbb
lock
push
xor
adc
nop
xorl
sbb
or
push
leave
mov
leave
andb
mov
push
cmp
add
mov
mov
shrb
push
sbb
xchg
movsb
inc
lret
mov
adc
jmp
jbe
ret
js
stos
push
and
nop
mov
pop
add
cmpsb
jecxz
add
mov
pop
adc
adc
pop
push
xchg
xor
int3
push
subb
movsb
adc
pop
shlb
pushl
shr
popa
mov
mov
ret
xor
xor
jg
mov
and
loope
hlt
pop
add
push
je
clc
inc
push
sbb
lods
add
add
iret
filds
add
cmc
adc
mov
lock
fwait
sbb
add
xchg
notl
mov
jecxz
lods
sbb
xchg
mov
icebp
pop
lret
inc
andl
rorl
xor
jo
in
pop
fidivl
ret
std
mov
les
pop
call
sahf
es
and
jecxz
mov
inc
cmpsb
jecxz
push
sub
pop
cli
sbb
movsb
push
hlt
mov
sub
testb
add
cmc
mov
push
je
pop
call
test
fildl
or
out
push
and
mov
ffree
fwait
cmc
cmp
add
subb
std
xchg
push
mov
leave
leave
mov
js
test
idiv
mov
xor
jns
pop
xor
mov
mov
sbb
fwait
jns
adc
jge
and
pop
and
sub
or
cmpsl
mov
nop
push
push
loopne
ds
mov
arpl
add
cmp
dec
adc
ret
push
pop
sub
mov
repz
insb
xorl
xor
sbb
ljmp
stc
andb
inc
sbb
in
lcall
sbb
addl
push
sub
icebp
lret
testb
xchg
mov
add
sub
sbb
add
pusha
ret
mov
pusha
pusha
inc
mov
ret
mov
xorb
mov
daa
and
mov
sub
cmpsb
dec
negl
xor
cmp
in
and
adc
mov
jle
push
clc
mov
adc
push
sti
push
dec
and
shr
inc
andb
vpclmulqdq
jl
rcll
dec
data16
adc
cs
js
cltd
pop
sub
sarl
xor
cmpsb
xor
pop
mov
mov
test
pop
ds
loop
mov
mov
js
mulb
xor
cmp
or
fcoms
jne
lods
loope
and
hlt
addr16
fidivs
js
or
mov
push
pop
sahf
push
rorl
decb
pop
add
fsts
add
or
jne
shlb
pop
dec
mov
pop
inc
push
movb
inc
outsl
push
cltd
and
pop
sti
mov
sbb
jecxz
add
idiv
stos
addl
sahf
xchg
mov
sub
sbbb
jge
or
mov
rcll
clc
pop
test
mov
mov
in
pop
mov
or
cmp
jbe
push
ret
js
out
pop
push
mov
stos
mov
xchg
push
mov
call
inc
xchg
mov
ljmp
dec
test
lcall
xor
nop
mov
pushf
lahf
icebp
xor
mov
lock
jge
push
test
xchg
mov
sub
mov
adc
mov
cmpsl
mov
adc
in
adc
add
sub
mov
and
fiaddl
mov
cmp
push
cmpsl
jno
push
insl
pop
push
adc
sarl
lock
sti
rcrl
dec
cmp
mov
cmp
loop
push
ret
and
pop
cmp
add
xchg
std
inc
inc
xor
jno
xchg
aaa
mov
call
add
pop
pop
clc
sub
sarb
jmp
cmc
mov
fistpl
ds
sub
pop
mov
scas
jno
or
and
xor
mov
lea
pop
sub
clc
inc
into
js
mov
ret
inc
sbb
leave
sbb
push
or
cltd
inc
adc
cmp
inc
adc
imul
das
imul
dec
sbb
sub
inc
and
inc
aad
fnstcw
xor
push
push
movsl
push
imul
fimull
fistpll
adc
or
sub
test
mov
cli
addl
test
pop
xlat
lret
push
xor
push
pop
sub
imul
or
insb
pop
jecxz
into
cmp
push
add
pop
jmp
test
test
jmp
cmp
cmp
lret
incl
cmovbe
popf
adc
and
out
adcb
pop
push
and
leave
cmp
sar
pop
mov
fildll
int
pop
movzbl
shl
push
lds
orb
or
aam
fdivrl
push
iret
sahf
pop
sub
shl
or
mov
mov
mov
popa
xor
add
push
and
dec
in
inc
and
jge
push
add
and
leave
pop
and
mov
pushf
cmp
outsb
sub
sub
arpl
lret
push
cli
lea
pop
adc
roll
lahf
add
sub
mov
push
std
test
xor
bound
sub
shr
sub
filds
pop
mov
testl
or
pop
pusha
inc
inc
movsl
xor
sbb
mov
inc
add
mov
ljmp
mov
ljmp
or
adc
rcrl
and
cmp
sub
pop
shl
dec
lret
add
mov
add
inc
xor
adc
adc
and
add
and
rcr
lods
imul
and
cmp
mov
adc
roll
aaa
sub
jo
dec
dec
mov
shr
inc
cmp
fidivrs
push
jmp
adc
mov
pop
addr16
int3
push
mov
cmpb
sub
sbb
scas
mov
inc
aam
aad
test
testb
shlb
clc
inc
adc
loope
cld
or
jle
push
mov
in
jo
xchg
fimull
or
and
lods
scas
shl
pusha
cmp
out
fstl
push
add
test
mov
adc
jo
stos
mov
bound
jbe
ds
test
rclb
pop
sbb
mov
jg
add
rcr
lahf
and
leave
mov
inc
ljmp
roll
add
daa
jle
bound
lret
mov
push
and
push
test
and
mov
pop
mov
push
or
or
dec
lock
or
orb
mov
dec
push
decb
push
enter
pop
fwait
data16
or
sbbl
cmp
dec
dec
dec
loopne
subb
movsl
cmp
pop
in
sbb
bound
icebp
dec
imul
lock
int
shll
xchg
enter
sti
repnz
add
mov
or
sub
add
xor
push
mov
mov
lcall
add
lock
cmpl
pop
popa
jae
arpl
into
push
mov
pop
ss
add
mov
dec
iret
xor
inc
mov
sbbl
jecxz
je
or
adc
adc
filds
dec
shrl
pop
sub
cwtl
push
cmp
sbb
pop
mov
sbb
inc
fimull
fildll
les
sbb
sbb
dec
push
cld
aad
or
scas
push
mov
data16
int3
mov
enter
insl
push
and
pop
add
jnp
inc
jne
jecxz
mov
loop
dec
adc
shl
adcl
sbb
inc
pop
out
daa
push
jo
cwtl
mov
push
outsl
scas
adc
and
rclb
sbb
dec
in
test
data16
push
es
cltd
lea
mov
jne
sbb
inc
xchg
pusha
push
xor
test
sbb
sub
idivb
lret
lock
hlt
dec
dec
sub
inc
fcoml
xor
adc
push
sarb
dec
test
push
clc
std
imul
call
and
bound
sbb
and
pop
and
enter
mov
rorb
mov
lret
ret
cmp
std
int3
add
jge
je
push
outsb
scas
or
jle
sub
leave
add
clc
dec
out
xor
mov
push
pop
and
test
dec
in
lods
out
sahf
out
shl
adc
xchg
sub
bound
xor
xchg
or
jle
loope
inc
inc
sbb
push
mov
lods
int3
sbb
prefetch
xor
and
pop
mov
shlb
movw
jp
call
in
push
sub
xor
stc
mov
testl
insb
and
popa
sub
xchg
stc
sbb
rcl
pusha
js
adc
jne
xor
clc
xchg
loope
cmp
jbe
sbb
xor
push
or
add
cmp
dec
mov
loopne
or
cmp
or
jbe
ss
push
jl
das
lea
add
xor
es
mov
inc
mull
clc
xchg
dec
push
xchg
cmpb
jge
iret
lods
xor
jg
shr
mov
cltd
dec
addl
xchg
or
fadds
mov
jmp
mov
clc
ret
fsubs
or
aas
or
fmuls
dec
test
xlat
cmp
jno
sbb
sub
jb
pop
dec
dec
and
mov
into
std
push
ror
rolb
clc
andl
mov
push
orl
jb
jb
mov
fcoml
pusha
ret
roll
and
fsubrs
lret
rcrl
fadds
jp
call
fwait
xor
inc
sbb
sahf
pop
stos
sbb
add
mov
orb
flds
xchg
cmpsb
sbb
movsb
aas
je
or
mov
cmp
les
push
sub
pop
cmc
cld
or
jg
mov
inc
mov
inc
rolb
pop
imul
mov
in
add
xlat
mov
dec
sbb
push
imul
rcrb
mov
jge
sub
mov
cli
mov
clc
fnstenv
xor
pop
cmp
add
jo
popa
pop
lods
mov
clc
bound
or
daa
rorl
outsl
xchg
add
xor
push
iret
ficompl
add
xchg
ljmp
sub
fildl
xor
bound
push
loopne
ret
inc
cwtl
and
jne
adc
cmp
aad
int
sbb
inc
sub
ret
ret
dec
test
shrl
sub
icebp
pusha
inc
cwtl
js
in
shrb
or
jl
push
cmp
add
fs
mov
pop
dec
ficompl
sub
out
and
testl
enter
fdiv
pusha
sbb
adcb
shlb
xor
add
push
int
faddl
jo
push
push
icebp
aad
xchg
or
adc
sub
popa
push
pusha
sub
mov
shl
iret
sub
adcl
and
add
mov
shr
mov
push
sub
shll
inc
fwait
inc
lret
das
test
popa
jno
push
rcrl
pop
push
aas
outsb
cmp
or
fidivl
cwtl
scas
sub
cld
cmp
adc
cli
or
lea
call
pop
pushf
sahf
jno
ds
jb
andl
mov
sbb
insl
xor
push
dec
les
stos
mov
lods
ret
insb
xor
and
pop
sti
rolb
cmp
popa
inc
mov
fdiv
dec
les
xor
lds
mov
dec
dec
cwtl
outsl
jmp
mov
add
mov
push
scas
add
pop
sbb
adc
sbb
add
les
xchg
pusha
loopne
cld
loopne
movsl
and
add
jle
rcl
stos
fcompl
or
cmp
gs
push
push
dec
or
jmp
testl
iret
and
adc
adc
ret
aam
adc
jo
stc
xlat
fstpl
scas
sbb
scas
cmp
orb
jbe
shlb
cmp
xlat
and
pop
sahf
pop
push
xor
cmp
sbb
test
sbb
and
rorb
out
fidivs
cmp
xchg
xchg
adc
adc
cmp
dec
call
lcall
inc
aam
arpl
sbb
pop
ss
cmp
decl
mov
xchg
in
lds
aad
decl
cmpsb
sbb
ficoml
add
inc
or
xor
cmpb
enter
cmpsb
popa
je
ret
fsub
mov
sbb
jns
and
pusha
lea
das
lcall
add
add
xor
fmulp
lret
in
adc
clc
pop
sub
inc
xor
aaa
add
sub
dec
je
xchg
ret
iret
lret
daa
lock
lret
fs
pop
add
cli
in
mov
add
test
pop
les
push
icebp
mov
in
ja
dec
dec
mov
mov
ret
imul
es
mov
mov
cmp
leave
cmc
sub
pop
test
loop
or
pusha
dec
mov
mov
add
xchg
push
pop
mov
dec
jg
sbb
int
mov
pop
cwtl
push
sub
inc
or
dec
sbb
and
dec
push
inc
ljmp
sbb
adc
pushl
mov
mov
sahf
jb
and
or
out
xchg
fbstp
jno
rorb
lea
cmp
test
cmpb
and
sub
mov
fdivr
mov
or
and
aas
xor
fidivrl
sti
adc
in
data16
jne
pop
push
pop
mov
add
jo
test
data16
pop
cmp
mov
xchg
or
js
mov
or
or
dec
stos
dec
inc
popa
cld
adc
rcrl
js
leave
icebp
push
in
fcom
inc
inc
and
cmpb
int
popa
fcoms
and
fmuls
pusha
mov
or
mov
xor
andl
inc
leave
roll
in
pop
popa
pop
push
inc
rolb
add
xchg
ret
add
adc
iret
lret
adc
xor
mov
ss
add
shrb
mov
repz
shlb
imul
xchg
push
sbb
sub
outsb
push
inc
inc
repz
push
dec
loopne
ljmp
lock
js
femms
inc
mov
call
inc
aaa
push
add
cmp
add
sub
add
loopne
out
insl
pop
movsl
bound
adc
pop
mov
add
lea
pop
sbb
pop
repnz
push
xor
jbe
inc
mov
push
pusha
sbb
sbbl
xor
icebp
adc
and
add
adc
mov
outsl
add
andl
fcoml
mov
cld
cltd
lea
cli
negl
test
pop
stc
cld
xor
mov
push
push
jnp
addr16
std
pop
push
sbb
dec
insb
jge
mov
xchg
push
iret
ljmp
insl
in
add
popa
outsl
pop
insb
pop
inc
add
xchg
pop
add
xlat
or
das
sbb
pop
push
push
push
pusha
mov
push
test
dec
mov
shll
push
lret
loopne
fiaddl
insb
jge
xorb
into
xlat
xchg
mov
nop
or
mov
xchg
pop
xor
xor
add
into
mov
loop
cmp
mov
xchg
pusha
or
or
adc
insl
fcomp
cld
loop
sbb
aaa
out
push
push
rcrl
xchg
jp
pop
jae
mov
addl
mov
or
fistl
mov
inc
sbb
add
cmp
sbb
std
fists
inc
popa
shll
imul
das
test
mov
test
mov
and
mov
and
inc
adc
pushf
je
loope
cld
xlat
cmp
inc
arpl
aas
mov
sbb
loop
push
sbbb
add
mov
push
pop
add
pusha
test
xorb
ret
jmp
lea
ret
and
add
std
into
stos
loop
push
push
xlat
hlt
cmp
inc
pop
mov
ret
pop
call
xor
adc
sbb
inc
fcoml
lock
or
iret
sbb
pop
cmp
or
in
daa
or
pop
dec
push
xor
into
inc
loopne
bound
fsubr
pusha
jl
jmp
lds
arpl
and
in
out
dec
mov
mov
push
mov
fstpt
fcoms
jmp
div
int3
inc
cmp
loope
push
popaw
add
outsb
adc
pushf
cmpl
adc
mov
sub
dec
mov
jmp
daa
jne
cld
mov
pslld
add
or
shrw
push
ret
js
imul
mov
sbb
mov
cli
mov
bound
cmp
inc
roll
rcrb
cmp
fstps
fdivrp
mov
pop
cltd
push
sub
je
leave
sahf
enter
push
adc
add
in
test
mulb
cmp
mov
fdivs
dec
and
shrb
out
add
pop
sub
and
orb
call
add
jno
add
jne
jle
rcr
xor
add
aaa
dec
inc
inc
dec
jne
xor
jl
or
in
add
sub
repnz
mov
and
popa
push
xchg
in
cli
out
mov
movsb
add
daa
cmpl
xchg
adc
inc
inc
push
inc
insb
call
lcall
fbstp
mov
inc
sbb
adc
jl
xor
mov
pop
ficoms
mov
divl
inc
call
jbe
sbb
shrb
mov
shl
insl
sbb
mov
sub
imul
ja
mov
mov
lret
pushl
pop
mov
and
dec
and
add
mov
pop
sbb
or
mov
fisubs
pop
jle
or
leave
pushl
mov
test
jge
neg
add
sbb
pop
mov
adc
cmp
inc
imul
sub
push
xor
ud0
mov
add
add
inc
lds
xor
mov
xor
cmp
push
outsl
sub
pop
pushf
pop
or
mov
and
in
or
lret
or
std
in
xchg
and
dec
jne
push
jmp
xor
decl
mov
incl
addr16
jp
mov
jl
arpl
pop
adc
je
sbb
repz
cmp
xor
push
addr16
push
loope
pop
dec
inc
sub
loop
jb
xchg
mov
fcoms
mov
arpl
dec
jl
dec
pop
rorb
add
loope
dec
dec
mov
pop
mov
and
jg
adc
inc
dec
jmp
inc
pop
inc
lods
aam
imul
inc
pop
test
cmp
sbb
testl
or
jge
ljmp
pop
jl
and
push
aad
jbe
mov
mov
pushf
das
inc
fsubrs
call
movsb
pop
adc
popf
mov
aaa
dec
loopne
xor
xlat
in
inc
loop
push
push
push
popa
ret
arpl
adc
mov
aas
adc
cmp
jl
jmp
push
add
or
pop
fistpl
inc
xlat
rorb
or
fbstp
mov
popf
mov
scas
push
imul
adc
jbe
mov
ds
sarb
xor
add
movhps
leave
ret
bound
and
adc
cwtl
jle
jle
shlb
push
andb
inc
xor
mov
addl
push
cmp
adc
pop
popa
in
xor
pop
pop
in
or
dec
jns
pop
call
loope
mov
adc
fisubrs
jecxz
pop
push
lock
pop
or
xor
andb
mov
repz
add
adc
test
lea
add
nop
mov
nop
test
in
lea
mov
sub
adc
adc
in
and
ror
bound
lock
aam
test
sbb
mov
mov
xor
movl
cld
mov
mov
push
adc
shlb
push
and
or
add
dec
dec
add
shrb
or
and
sbb
mov
mov
movb
mov
ret
std
add
sub
cs
adc
test
mov
jecxz
ret
leave
cmp
push
daa
jmp
cmpb
fcoms
mov
fwait
cmp
fdivrp
cmp
sbb
add
pop
or
arpl
cmp
pop
push
and
sbb
pusha
outsb
fs
jnp
stos
leave
js
jae
leave
ret
and
fsubr
mov
leave
pop
push
pop
xchg
pop
ret
or
sbb
mov
and
sbb
into
stos
shlb
mov
loopne
sub
cli
incl
adc
das
push
lret
ss
xchg
mov
and
loop
mov
mov
xchg
rcll
push
jne
mov
ss
mov
mov
movsb
inc
mov
inc
not
std
adc
in
mov
movsl
jg
cltd
xor
dec
mov
or
sbb
loopne
mov
and
jb
inc
clc
inc
mov
adc
and
lcall
les
fidivrs
xchg
xchg
jecxz
adc
cmp
mov
out
mov
adc
nop
mov
cmp
push
inc
inc
sub
and
or
lahf
shl
or
xchg
test
xchg
fistps
std
or
xor
call
jno
mov
push
fs
mov
push
pop
push
pop
adc
adc
incl
ficoms
sbb
lods
andb
shlb
mov
adc
lods
data16
dec
sbb
aam
rol
test
int3
flds
push
xchg
pop
adc
push
inc
dec
ds
in
es
adcb
rclb
clc
jbe
sarl
xor
and
xor
loope
fisttpl
inc
inc
sbb
pushf
bound
mov
dec
mov
xor
lds
hlt
in
push
push
aas
add
ror
mov
es
mov
lcall
push
push
xor
mov
lret
pop
aas
push
hlt
mov
or
cs
mov
sub
jmp
add
jecxz
push
jns
pop
jne
mov
mov
push
in
fsubrs
sub
into
aad
mov
cmp
les
push
xchg
mov
shlb
pop
divl
jbe
and
data16
fs
lea
and
or
lock
les
mov
fs
xorl
in
add
in
pop
orb
lea
sbb
sub
js
adc
or
sbb
jbe
pop
addb
ret
in
xchg
cld
and
sub
push
jp
add
inc
mov
inc
daa
and
and
in
adc
pusha
lock
and
sub
sub
adc
in
lret
je
sbb
jmp
insl
pop
add
mov
push
js
sbbb
pop
lock
or
adc
inc
cmp
cld
sbb
inc
fsubs
out
gs
pop
rolb
inc
pop
pop
inc
xor
or
push
sbb
and
sti
add
shlb
pushl
aad
cmp
sbb
adc
add
xor
icebp
and
pop
pop
sbb
or
scas
sahf
cmc
adc
addl
or
sbb
jo
pop
push
push
xor
add
sbb
cmp
in
test
xchg
stc
pop
xor
pop
mov
push
push
jae
sahf
sarb
sbb
mov
mov
push
icebp
mov
mov
rorb
fistpl
mov
rdtsc
je
aaa
out
push
dec
pop
jecxz
lea
push
pop
add
bound
add
adc
inc
cmp
sbb
fs
mov
add
xchg
push
fisubrs
icebp
push
jecxz
dec
fdivs
push
imul
gs
inc
cmp
sbb
or
push
pop
lahf
sbb
scas
jmp
mov
sub
mov
mov
pop
cmc
test
outsb
pop
jl
pop
cmc
jmp
clc
push
loopne
push
lods
out
push
mov
call
inc
jmp
or
and
dec
lods
out
fnstenv
mov
cld
push
or
iret
rcr
mov
mul
mov
mov
popa
into
into
jmp
lods
xor
gs
sbb
cmp
adc
add
lahf
dec
pop
int3
shr
shl
or
xchg
add
pop
imul
add
out
out
push
insl
jmp
std
mulb
push
lea
push
xchg
jg
out
cli
or
cli
push
xchg
shrb
lea
or
adc
pushf
xchg
push
ja
in
stos
jg
push
mov
mov
adc
pop
test
mov
test
push
jns
cmp
jmp
jae
adc
enter
add
jae
xor
xchg
icebp
or
clc
pop
imul
push
pop
shr
notl
subb
cld
add
les
cld
or
ljmp
adc
notb
mov
sub
or
sub
dec
mov
insl
jno
cli
not
and
inc
icebp
mov
push
fnstsw
dec
outsl
imul
fs
repz
or
and
xor
mov
mov
outsl
ficoms
push
mov
inc
test
fstps
add
inc
popa
sti
mov
lods
adc
cmp
mov
andl
cli
jmp
cmp
insb
mov
seto
sub
pop
stos
push
icebp
mov
push
pop
mov
dec
stos
clc
push
pop
pop
ss
add
xor
mov
push
and
sti
mov
push
mov
test
loop
xchg
inc
inc
insb
je
arpl
mov
push
movsl
add
lods
hlt
push
test
sub
xor
les
mov
adc
call
rclb
clc
pop
push
pop
add
mov
mov
or
push
push
mov
mov
iret
popa
sbb
fstpt
clc
pop
push
cli
and
cld
out
iret
loope
test
cmp
jbe
fcmovu
xchg
dec
inc
pop
cmp
icebp
xor
inc
push
sarb
js
or
call
mov
push
push
push
scas
call
mov
inc
lock
inc
js
lea
pop
cmp
outsl
clc
mov
mov
out
iret
add
cld
pop
add
aaa
dec
push
xor
cltd
jns
mov
or
jmp
mov
shr
push
mov
ret
test
ret
add
mul
sbb
dec
arpl
lcall
gs
sbb
or
fldenv
in
int3
or
mov
or
aad
or
mov
out
dec
mov
sbb
dec
imul
xor
or
push
push
popf
das
mov
jmp
addr16
push
int
xor
fsubrs
push
fdivrl
leave
sbb
andb
clc
sbb
dec
bound
jno
add
ret
pop
bound
stos
repnz
sub
add
push
loope
dec
xor
push
dec
or
je
lahf
push
xor
enter
lock
mov
inc
xor
mov
clc
pop
push
cmove
mov
orl
gs
js
gs
push
pop
jae
mov
pop
push
scas
mov
stc
add
add
movsl
pop
shll
mov
cmp
xchg
add
ret
mov
dec
and
pop
mov
rcll
push
add
inc
add
loope
lret
push
cmpsl
adc
imul
js
adc
test
arpl
mov
or
pop
push
lret
test
adc
mov
inc
inc
push
or
cmp
enter
push
insl
arpl
add
jbe
pop
adc
mov
idivl
lea
cmpsb
bound
pop
push
int3
mov
xorb
mov
fildll
xor
outsb
xchg
movsl
pusha
addr16
push
mov
push
outsb
pop
fidivrl
mov
xchg
xor
xchg
fcmovu
mov
rol
push
pop
popa
shlb
enter
arpl
mov
mov
mov
mov
js
loop
jbe
js
enter
pusha
in
jge
inc
mov
daa
sub
mov
pushf
xor
sbb
xor
adc
add
xor
pop
arpl
adc
out
jmp
inc
sbb
orb
jmp
mov
cmc
fsubrs
shlb
sbb
test
push
cmp
ret
inc
in
jl
insb
or
lock
pop
adc
lahf
mov
or
test
adc
push
int3
add
clc
or
cltd
mov
fdivs
push
mov
sbb
addr16
xchg
enter
ljmp
cwtl
adc
dec
push
lahf
fnstsw
imul
mov
jg
js
dec
sarl
pop
in
repnz
daa
sti
in
add
adc
push
or
push
or
jo
or
mov
lock
mov
xor
sub
hlt
mov
adc
jmp
cmp
pusha
iret
dec
dec
push
mov
inc
xchg
xchg
or
pop
inc
add
daa
sub
or
push
mov
std
mov
pushl
mov
mull
or
cmp
aad
in
push
out
add
inc
je
imul
pop
cmp
cmpb
mov
out
sbb
adc
xor
pop
cmp
shr
xchg
or
fbld
fwait
inc
or
sbbb
aam
addb
out
les
cmpsl
out
sub
rcr
aam
lods
stos
js
rolb
xchg
jne
jp
adc
and
loopne
adc
dec
sub
iret
aas
testb
dec
xor
aam
stos
pop
add
pop
pop
pop
addb
dec
push
xchg
add
sub
cmp
testl
sub
and
mov
mov
dec
cmp
inc
xchg
stos
imul
adc
mov
xor
pop
sbbl
jle
xchg
and
or
adc
nop
mov
push
test
or
push
or
cld
and
fistpl
push
test
or
dec
push
adc
add
insl
movsl
pusha
add
jae
fadds
mov
iret
neg
std
inc
sub
push
pusha
inc
mov
out
out
jno
sbb
mov
xchg
xchg
and
out
clc
roll
and
pusha
dec
sbb
add
jbe
add
sti
push
mov
xorl
imul
data16
loope
lods
and
mov
lock
enter
jbe
jnp
add
repz
inc
xchg
adc
pop
insb
loopne
xor
sbb
mov
sti
add
inc
adc
stc
sahf
test
adc
xlat
mov
pushf
mov
adc
push
jg
sub
shrb
mov
aam
jbe
pop
xor
sbb
cmp
stc
fldenv
ds
fsubrl
xor
outsl
or
out
push
or
pop
mov
pop
nop
jle
insb
das
inc
or
sbb
mov
xchg
hlt
fwait
cmc
jmp
mov
and
xchg
shr
std
lahf
or
std
ds
and
rorl
es
insb
ljmp
jp
movsl
or
jno
cmp
scas
sub
jg
loope
cmc
in
pop
add
bound
push
cmp
sti
popf
adc
inc
lret
mov
mov
lret
sbb
jg
rol
and
jne
jle
lds
adc
jno
pop
fsts
and
mov
inc
gs
mov
inc
jge
or
addr16
push
adc
dec
sub
push
mov
flds
jle
cmp
adc
sbb
sub
ret
push
int
ret
dec
movl
and
sbb
ss
jae
cmp
and
or
iret
or
or
insb
jg
push
daa
cmp
xchg
or
pop
jne
mov
add
xchg
adc
lock
ss
add
sahf
add
pop
fs
pusha
mov
xchg
or
out
clc
std
and
cli
jnp
push
push
pusha
dec
push
sbb
jge
lods
sahf
js
or
push
or
loopne
stos
sahf
add
data16
repnz
mov
adc
push
push
stos
mov
shrb
jns
ret
stc
xchg
push
lret
jno
sarl
inc
mov
dec
add
test
xor
jbe
push
cs
dec
ret
jno
or
ss
fcomi
jp
mov
adc
sahf
and
ret
jne
imul
and
mov
lret
inc
stc
rcll
xchg
and
add
ja
sbb
xorl
inc
inc
and
dec
xor
jp
add
lret
in
shr
push
int3
add
xchg
cli
cmp
outsb
dec
add
pop
add
mov
outsb
mov
out
dec
rclb
in
add
add
addl
or
mov
pop
push
outsb
hlt
cs
std
or
dec
or
xchg
popa
jo
push
gs
and
xor
ljmp
les
adc
sbb
xorl
pop
test
inc
or
loop
mov
cmp
ds
daa
rorl
jle
cmpsb
mov
push
insl
push
mov
notb
in
add
push
and
sarb
push
mov
push
xchg
mov
jae
addr16
inc
add
cmp
pop
pop
cmpsl
rorl
movsb
mov
jae
xchg
icebp
test
lods
jno
mov
mov
pop
sbb
dec
cli
sbb
jno
sub
es
pusha
shll
add
fadds
ret
or
mov
push
loope
in
ljmp
scas
pusha
adc
inc
lds
push
mov
jle
test
andl
sahf
jo
loopne
pushl
jo
fsubs
or
das
jns
jno
jg
jp
adc
xor
sub
cli
lret
inc
inc
mov
lock
and
test
dec
loopne
inc
in
imul
insl
add
cvtpi2ps
fldl
push
fsubl
xchg
inc
xchg
jne
wbinvd
fimull
sbb
in
push
sbb
into
mov
cs
lods
push
out
cmp
or
and
cld
enter
xor
jne
enter
lock
outsb
nop
movswl
daa
dec
dec
mov
hlt
fdivrs
mov
adc
cmc
sbb
jmp
cmpl
inc
test
mov
stos
mov
pop
add
and
aam
pop
dec
add
xor
call
add
dec
mov
mov
push
push
push
mov
and
test
hlt
cli
mov
add
pop
xor
cli
add
andl
in
sbb
jb
pop
add
rol
mov
and
dec
sbb
mov
fisttpl
xchg
fidivrl
sbb
test
test
inc
inc
and
cmp
sbb
sahf
clc
loopne
add
sub
mov
and
ss
repz
inc
test
nop
mov
testb
arpl
test
clc
insb
push
shll
jnp
sub
or
movsl
cwtl
and
add
lds
add
movsb
and
or
mov
jb
rcrb
inc
and
push
jo
jb
lock
pop
fiaddl
dec
incl
je
adc
add
cld
aaa
mov
sbbl
hlt
arpl
pop
add
movsb
rcll
and
cmp
scas
mov
jl
add
push
cmpsb
bound
lea
pusha
addr16
adc
shlb
data16
push
addr16
cmpl
jnp
jmp
adc
add
mov
mov
jb
shlb
sbb
mov
fwait
xchg
das
test
sub
fidivs
push
sbb
movsb
inc
add
jo
in
rcr
inc
std
xchg
mov
inc
fsubl
push
mov
or
push
sbbb
loope
daa
frstor
pushf
adc
push
push
lock
mov
xor
xor
das
pop
repnz
or
dec
adc
and
mov
push
jb
test
jne
insl
mov
addb
and
fiaddl
sbb
jne
dec
mov
into
mov
mov
push
shl
mov
push
leave
pop
xchg
push
stos
std
lock
repz
les
sbb
jae
hlt
and
add
subb
lock
push
mov
jns
jp
xchg
adc
imul
push
and
inc
cmp
dec
test
and
pusha
je
mov
ss
sub
sti
mov
sub
sbbl
clc
or
pminsw
push
mov
fdivs
pop
insb
cwtl
push
pop
les
test
cmp
loopne
jo
push
sbb
dec
sbb
ljmp
jge
popf
stc
stos
pop
adc
mov
lcall
popf
clc
leave
bound
push
insl
add
andb
cltd
mov
mov
dec
jl
lods
push
mov
inc
adc
mov
dec
ret
push
and
push
inc
mov
pop
sahf
or
test
sbbl
mov
sbb
sbb
andb
addl
xor
lahf
pop
jne
test
rep
lds
lret
daa
add
lcall
ret
repz
jle
push
adc
add
add
push
dec
add
add
call
sbb
repnz
add
and
add
push
jmp
andb
and
jle
mov
jl
repz
pusha
and
aam
data16
cld
lret
and
pushf
jl
jl
cmp
mov
jns
xchg
in
push
or
pop
cmp
add
and
mov
sbb
mov
les
jno
sub
clc
adc
mov
push
push
sbb
rcll
lcall
into
loopne
pop
sbb
pop
mul
sub
sbb
rorb
imull
add
push
out
cmpsb
pop
test
test
andl
sbb
ret
xor
shll
jg
jl
fsts
push
cmc
xchg
ror
jae
xor
cmp
pop
add
mov
jg
mov
xchg
dec
add
sbb
test
dec
jmp
xor
or
and
addr16
sbb
pop
pop
icebp
push
test
stc
sub
cmpb
in
pop
push
hlt
pop
push
sar
lds
ds
test
xorl
sbb
mov
add
pop
lods
xchg
lea
inc
pushl
push
loopne
inc
sub
mov
push
push
pop
jg
and
push
inc
test
adc
xchg
cmc
gs
lret
pop
push
xor
or
adc
push
and
ja
es
mov
mov
and
lock
jmp
xor
add
mov
jle
jne
inc
and
sub
and
sub
test
mov
stos
cmpsl
clc
mov
aam
adc
inc
je
and
jmp
insb
sub
and
pusha
add
adc
add
aam
sbb
mov
push
dec
jnp
dec
aam
das
sbb
cwtl
push
call
scas
pop
add
call
sub
imul
fs
add
arpl
xorl
insb
jbe
pop
lods
subb
call
adc
sbbb
adc
push
lcall
hlt
sub
popf
sahf
xor
notb
push
xor
xor
cwtl
daa
sbb
fists
addr16
mov
roll
mov
cli
inc
adcb
imul
loop
stc
jbe
int3
pop
or
add
jg
test
fadds
nop
fsts
bound
adc
out
sbb
push
and
mov
cmp
shrb
outsl
sbb
mov
popl
int3
cmpl
sbb
dec
movsb
add
nop
add
sarl
add
adc
or
pop
lea
movsl
add
cmp
sahf
push
aad
dec
pop
push
lods
jmp
insb
adc
or
call
out
int
mov
dec
sbb
jb
sbb
in
or
notl
or
or
jnp
adc
add
in
mov
lcall
and
or
inc
mov
jbe
push
or
pusha
mov
mov
cmpb
xor
outsb
add
pop
leave
push
push
ja
ds
or
or
dec
loopne
inc
mov
mov
cmpb
xor
add
and
push
sbb
das
inc
pop
mov
push
xor
pop
cld
aam
dec
rorb
stos
pop
add
testb
movsb
pop
test
adc
sub
mov
sbb
stos
jp
mov
push
or
mov
shll
mov
add
rorb
push
icebp
mov
adc
and
pop
add
sbb
mov
sub
call
xchg
mov
pop
jl
push
mov
orl
add
out
sbb
cld
cmp
add
mov
inc
stos
add
pop
and
js
pop
push
cmpsb
add
ss
pop
xchg
push
rol
out
loop
je
shll
mov
mov
add
movsb
xchg
push
add
mov
imul
sti
add
hlt
dec
ljmp
or
add
cmp
or
and
push
je
test
add
push
pop
clc
sbb
dec
push
fsubl
enter
cmp
repnz
mov
xor
push
or
rcr
lds
add
or
in
jp
push
jbe
xor
ss
and
subl
push
or
add
xor
fdiv
shr
lea
mov
mov
sub
vmwrite
or
icebp
xchg
lock
sub
push
sahf
and
cld
and
dec
or
or
add
inc
and
push
es
sbb
dec
mov
cmpsb
es
or
or
enter
lock
push
push
cli
mov
nop
test
jno
in
test
push
xlat
adc
je
sbb
fdivrs
pop
adc
pop
pop
or
or
or
mov
push
push
and
sub
add
add
add
clc
or
mul
hlt
mov
mov
sub
rsm
subl
in
aam
in
std
or
inc
es
or
add
enter
jl
fs
fcmovnu
jl
push
cmp
add
mov
mov
and
gs
mov
por
jne
in
mov
popw
or
das
inc
adc
pop
in
popl
bound
xchg
mov
xor
inc
rcr
ja
xlat
scas
push
xor
sbb
mov
jbe
ds
add
or
jne
add
lret
jne
push
int
pop
fadds
or
loop
mov
out
or
sti
or
pusha
mov
add
or
pop
in
mov
fwait
dec
adc
fsub
cmp
mov
lahf
cmc
icebp
cmp
subl
xor
inc
push
sarb
es
pop
add
sldt
and
les
push
adc
xor
nop
and
push
imul
jle
in
push
cld
sbb
testl
push
dec
push
mov
or
lret
or
aaa
add
sti
movsb
add
add
add
mov
arpl
ja
mov
adc
rorb
add
or
push
in
iret
dec
ja
clc
mov
jbe
str
je
dec
sbb
ss
mov
xor
add
fidivrl
sbb
vcvtsi2ssl
adc
push
lahf
adc
push
xor
jge
stos
fists
or
mov
inc
out
imul
shl
loope
lahf
test
pop
lea
mov
loopne
push
inc
sub
sbb
adc
out
push
pop
pop
push
cmp
daa
or
adc
pop
pop
jo
add
add
mov
xor
adcb
das
add
add
or
push
or
mov
es
add
js
bound
xor
adc
aaa
lea
inc
add
out
fildl
mov
mov
int
cmp
mov
cmp
leave
mov
push
adc
aad
ja
mov
aad
adc
sub
jecxz
sbb
dec
mov
mov
add
lods
rol
lods
and
insb
xchg
shlb
and
xchg
xchg
adc
dec
pop
mov
loopne
repnz
dec
mov
sub
insl
cld
xor
shlb
ss
fmuls
push
add
mov
test
dec
daa
shr
fsts
insl
sub
push
dec
adc
stos
mov
xlat
roll
push
test
pop
inc
ret
add
mov
iret
ss
cld
addl
test
and
nop
xlat
mov
loop
adc
pop
mov
xor
mov
sbb
jle
push
lea
mov
daa
arpl
pushf
and
mov
xor
sub
xchg
in
lret
pop
js
and
rorb
adc
dec
adc
into
push
mov
adc
sbb
pop
adc
sub
jle
add
push
mov
pop
loop
cmpsb
cmpb
cmp
jge
insb
mov
or
pop
sub
cmp
inc
ret
push
and
mov
mov
pop
rorl
mov
and
jns
or
jbe
pusha
adcl
mov
sub
xor
pop
shufps
mov
outsb
lds
ljmp
adc
adc
push
test
inc
shlb
stos
aam
add
sub
mov
test
sub
sarl
mov
or
mov
stos
ljmp
or
jge
fmul
fmuls
pop
or
sub
push
push
inc
jne
roll
mov
add
cmp
sbb
jb
aam
dec
lret
adc
push
add
loop
pop
add
insb
or
roll
cmp
inc
adc
xlat
outsb
cmp
clc
fadds
call
aaa
xchg
loop
mov
movsb
mov
sub
mov
or
leave
loopne
xor
xor
xor
fisubrs
popf
pop
incl
jno
frstor
stc
add
and
lcall
adc
mov
shll
flds
stc
mov
push
aad
aam
pop
mov
pop
popa
loope
add
mov
ss
push
js
inc
loopne
cmp
inc
aaa
inc
add
fnstcw
inc
or
jbe
xchg
test
jbe
add
lret
mov
sbb
cli
add
rolb
push
inc
lods
push
mov
adc
mov
movsb
adc
dec
dec
jo
pop
lods
lods
dec
add
and
shll
jp
cmp
inc
inc
dec
sbb
add
mov
push
scas
aam
and
xor
mov
scas
adc
sahf
inc
shl
dec
mov
fsin
dec
into
fadds
mov
mov
push
mov
cmp
rcr
mov
lock
lock
pop
in
pop
jb
mov
cmp
nop
sbb
push
adcl
mov
lea
or
es
push
push
mov
std
scas
add
add
icebp
movl
or
jnp
rcrb
push
push
xchg
dec
fldt
and
lea
stos
and
xor
cmp
cmp
add
dec
or
jbe
scas
in
movsbl
lea
or
mov
mov
mov
jnp
jle
or
pop
mov
insb
cmc
in
push
or
mov
or
stos
push
imul
movsl
add
fmuls
adc
push
add
loope
mov
imul
add
cmp
test
jnp
mov
or
sarb
dec
inc
sbb
ljmp
and
test
push
sbb
mov
and
bound
in
push
aad
lock
movsl
mov
sbb
and
push
fwait
jecxz
mov
dec
push
mov
mov
push
sub
movsb
arpl
jb
std
cwtl
and
add
popf
inc
mov
dec
and
pop
mov
pop
mov
ds
adc
lock
arpl
jne
call
sub
pop
sbb
xorb
push
and
mov
shlb
inc
std
add
and
ja
jg
mov
adc
lcall
mov
or
mov
mov
rolb
arpl
adc
push
adc
sub
dec
jne
adc
mov
aas
or
sbb
xor
clc
fdivrs
mov
mull
inc
cmc
das
jb
mov
mov
push
mov
cmp
xor
adc
mov
add
data16
ds
test
jmp
aam
mov
std
adc
fs
or
mov
push
les
mov
ljmp
push
push
pop
les
ljmp
orb
push
add
inc
dec
fcomps
sub
in
inc
adc
push
popf
add
push
loop
mov
jg
sub
stos
scas
or
lea
stos
or
and
aam
repz
adc
push
jns
sub
jl
out
adc
or
xchg
ds
jnp
inc
insb
sbbb
insb
adc
push
sub
xor
jg
fs
or
icebp
dec
callw
mov
push
push
sub
adc
movswl
add
mov
sub
aas
insl
inc
push
stos
push
inc
push
rorl
adc
daa
stos
add
test
arpl
jp
push
mov
sbb
and
enter
add
add
movb
insb
mov
push
push
stos
mov
test
jo
mov
push
les
mov
or
andl
xchg
jbe
dec
clc
jne
pop
cmp
push
movl
mov
inc
mov
mov
lea
push
cmp
iret
dec
mov
adcl
cmp
addr16
mov
add
daa
jne
adc
mov
pop
es
push
int
aad
sbb
dec
test
inc
jnp
es
jne
sub
andb
sahf
add
mov
pop
loopne
mov
or
mov
lock
push
add
xor
pop
ljmp
push
xchg
sbb
fcoms
sbb
cmp
adc
pop
stos
jo
es
mov
mov
cmp
adcb
add
call
lea
cmp
push
xor
movl
cmpl
mov
adcl
jp
inc
pop
and
scas
push
and
out
jp
cwtd
mov
inc
and
loope
jle
movsb
pop
push
mov
xor
cmp
sub
xlat
out
push
dec
pop
gs
arpl
fisubs
mov
insl
test
pop
or
dec
cmp
jbe
mov
push
je
push
and
sbb
sub
fimull
addr16
neg
sbb
inc
jp
ljmp
enter
xor
and
cmpsb
add
ss
xchg
insl
push
adc
xor
pop
inc
jns
mov
mov
dec
pop
inc
cltd
dec
iret
fisttpl
push
push
adc
add
roll
jne
cmpb
adc
pop
xor
inc
mov
repz
andl
negb
fidivrs
movsl
mov
rolb
push
in
mov
jne
push
xor
clc
idivl
mov
jmp
inc
add
insl
sti
pop
fsubrl
ljmp
jnp
sar
mov
iret
sbb
mov
sub
flds
roll
sbbb
inc
pop
icebp
imul
push
es
ds
arpl
add
or
clc
int3
jo
pop
inc
push
fwait
popa
sbb
dec
andl
ljmp
aam
inc
adc
test
ret
cs
test
or
push
inc
out
mov
fsub
dec
push
and
mov
lds
sub
xchg
jb
hlt
adc
ret
test
cmp
stos
inc
push
adc
mov
inc
out
lea
lea
mov
pop
xor
aam
jmp
clc
fsubr
and
pushl
pop
mov
sub
push
test
sub
cld
push
lds
jmp
or
add
je
mov
stos
mov
or
int
std
jl
jae
cmp
sbb
pop
call
imul
inc
cmp
push
dec
ja
mov
inc
ljmp
sub
push
ljmp
add
push
mov
shll
xchg
mov
std
fidivs
cmp
jl
fstps
mov
rcl
shrl
rorb
shrb
adc
mov
in
mov
mov
loope
cmc
xchg
pop
cmp
loop
push
mov
and
in
pop
out
adc
rclb
sub
enter
gs
inc
mov
add
cs
sub
insb
mov
xchg
das
lods
fstpl
jb
xchg
andb
ljmp
loopne
cmp
mov
leave
xchg
push
pop
inc
adc
push
push
fcmovnb
js
adc
inc
or
inc
jmp
lahf
xchg
test
xor
arpl
adc
fisubrs
inc
lret
pop
sahf
xchg
sub
mov
in
ret
adc
push
mov
push
mov
xchg
mov
sti
dec
mov
sub
sub
sub
mov
adc
push
adcl
mov
sbb
push
mov
inc
mov
popa
dec
inc
pop
iret
roll
pusha
pop
dec
add
movsl
stos
dec
cmp
or
adc
or
and
dec
and
std
arpl
sarl
inc
sbb
cmpl
add
sti
dec
xchg
std
sub
pusha
or
jns
sbb
rcl
sbb
xor
xchg
int3
daa
mov
or
pop
jnp
push
mov
cmp
pop
fwait
aad
mov
loopne
les
mov
lea
add
mov
dec
in
adc
frstor
mov
add
andb
jge
andb
jmp
pop
pop
sbb
lret
hlt
shrb
pop
data16
imul
add
jl
mov
mov
adc
mov
fisubl
sti
arpl
cli
xchg
pop
add
cmp
push
mov
cs
and
sbb
test
lods
xor
mov
mov
hlt
xchg
test
push
adc
shlb
xlat
mov
jmp
daa
inc
shll
cmpsb
cmp
push
sar
lea
add
into
loop
andl
sub
add
push
std
push
outsb
add
fcompp
call
insl
aaa
push
cmpl
and
mov
dec
mov
dec
fistpll
lea
mov
push
js
mov
xor
in
jmp
dec
test
and
pop
shlb
mov
xchg
test
stos
data16
std
push
xchg
sub
in
jnp
push
or
sub
xchg
cmpsb
ret
push
mov
rclb
aam
pop
dec
rolb
out
or
cmp
out
mov
out
test
cmp
pop
xor
cmp
stc
stos
adcb
push
dec
or
jmp
pop
aad
mov
loop
adc
andb
cmp
lret
ret
cmp
inc
mov
arpl
cmpsb
mov
mov
mov
aas
dec
pop
jno
cmp
fnsave
add
jg
or
lea
sbbl
sbb
lods
pop
inc
pop
mov
jns
fcoml
inc
push
ljmp
add
push
shlb
add
shll
add
mov
jne
cmc
test
sbb
sbbb
call
bound
pop
adc
imul
add
shr
aas
pop
xor
push
and
popf
fadds
pop
mov
push
jle
movsb
or
xor
inc
hlt
xchg
jnp
push
push
add
and
daa
xchg
enter
or
adc
add
add
add
fisttpll
les
add
rol
push
lea
les
pop
or
and
add
pop
jne
popa
push
fidivl
sbb
aam
mov
movl
push
subb
mov
xchg
mov
mov
dec
dec
sub
arpl
fsubrs
sub
mov
dec
add
xchg
rcrb
lods
dec
das
and
cs
cmp
lcall
shll
adc
sbb
inc
insb
or
sbb
inc
in
xchg
rcrb
insl
insl
ret
mov
aam
sub
push
jg
js
jns
fistpll
add
and
lock
fsubs
pop
cmp
sbb
pop
mov
jb
orb
mov
xchg
mov
push
out
pop
mov
subb
mov
fcoml
lahf
loopne
in
mov
or
daa
push
cmpsb
push
loopne
inc
and
xchg
add
jno
pop
adc
mov
sbb
push
bound
jl
xor
xchg
test
pop
push
into
fisubs
cli
pop
jmp
insb
cmp
xchg
lea
push
cmpsl
addr16
dec
cmc
subb
imull
xor
mov
inc
aam
daa
fildl
add
inc
add
rorb
add
out
mov
fidivl
call
fdivrl
subl
pop
push
imul
in
cmp
mov
or
movsb
ret
push
sub
mov
insb
movsl
mov
jg
fs
or
ja
dec
push
adc
push
sbb
cmp
aaa
push
mov
es
inc
inc
inc
mov
cmpb
inc
xor
movsl
fidivl
xchg
push
adc
stc
pop
orb
xor
mov
movsl
insl
fsubp
dec
sub
sub
or
mov
mov
pop
inc
adc
mov
mov
add
inc
ror
cmc
sbb
xor
pop
push
dec
test
and
or
mov
sub
mov
mov
xchg
mov
xor
mov
pop
and
mov
imul
mov
jmp
rolb
sbb
mov
mov
add
clc
std
icebp
mov
xor
jbe
dec
and
sub
add
mov
push
insb
movsb
sbb
fs
xchg
lods
or
push
loope
add
inc
fmull
push
shlb
sbb
adc
frstor
or
push
test
pop
and
push
mov
je
sbb
inc
fdivs
push
fcomp
pop
xor
in
iret
and
inc
stos
cmp
sbbb
mov
dec
push
cs
push
jns
rorb
inc
sbb
push
adc
mov
pusha
lock
inc
pop
aas
sti
dec
daa
pop
or
les
adc
pop
lock
adc
arpl
xorl
push
add
mulb
pop
inc
xor
or
aas
inc
mov
aam
pushl
pop
in
cmp
add
adc
daa
roll
out
enter
xorl
adc
cmp
fimull
aaa
les
rol
in
push
fildl
outsb
push
xor
push
jae
mov
addl
adc
mov
pushf
sbb
clc
push
or
add
jns
lds
dec
adc
test
cmpsb
add
mov
add
add
call
imul
lret
mov
inc
sbb
addb
mov
lods
add
rolb
dec
in
cmp
and
fsubr
pop
mov
mov
or
adc
mov
outsb
call
jnp
enter
test
andl
dec
add
jl
fwait
mov
enter
mov
test
xor
ret
pusha
pop
cli
cmp
sahf
je
or
add
dec
les
popa
roll
ret
cmp
push
test
ds
adc
mov
inc
add
aas
mov
mov
push
push
shlb
fidivrl
fs
scas
or
cmp
aam
cmp
call
jl
xchg
popf
scas
aam
sbb
rolb
sub
fistl
orb
std
fimuls
jb
inc
or
ret
mov
push
jne
lock
mov
add
add
ss
cmp
andl
mov
fdivs
fisttpl
lods
rcrl
mov
add
stc
ja
popa
stos
dec
push
sub
ret
cs
cmp
and
jbe
adc
xor
sbb
push
sub
sub
pop
sbb
sub
inc
mov
stos
push
mov
mov
dec
xor
adc
adc
mov
lds
add
sbb
fmuls
stc
pop
outsb
fucom
sub
adc
pushl
call
jmp
xchg
outsb
cld
pusha
pop
push
sbb
mov
push
stos
popa
adc
inc
push
pop
loopne
iret
dec
xchg
or
lock
roll
dec
add
leave
pop
repz
lcall
lea
dec
call
out
into
jbe
push
lock
adc
pop
jo
lret
ss
cmp
stos
mov
inc
insb
inc
sbb
jge
stos
xchg
inc
xor
js
pop
mov
pop
fs
push
pushf
add
cwtl
add
lods
and
jp
mov
inc
lret
push
adc
adc
xchg
push
jecxz
lea
inc
cmp
push
icebp
scas
repz
pop
adc
or
add
ds
pop
test
xchg
pusha
or
jp
mov
mov
nop
or
sbb
adc
mov
push
add
clc
inc
movb
sbb
mov
idivb
push
ficompl
cmp
push
mov
inc
cmp
mov
fmull
js
pop
and
mov
inc
xchg
idiv
inc
push
and
sub
or
mov
adcl
inc
shll
hlt
inc
jb
rolb
cmpsb
inc
mov
lods
and
daa
add
in
hlt
push
pop
sub
push
inc
mov
fsts
mov
fwait
push
add
mov
lock
pushl
sbb
rolb
insl
cmp
jne
and
jae
popf
rcrb
in
push
pop
pushf
add
pop
outsb
inc
xchg
xchg
add
and
insb
rcrb
mov
jbe
sbb
sahf
jbe
mov
pushf
mov
or
push
xor
clc
test
mov
add
dec
jae
mov
out
clc
lods
ret
jmp
mov
push
add
lcall
cmp
or
out
icebp
mov
cmp
mov
fcmovnu
mov
fsubs
push
push
test
sti
pop
rclb
sbb
pop
add
cld
das
test
fucom
pusha
mov
out
add
insb
test
addl
inc
add
jnp
xchg
sub
push
push
mov
cmp
movl
add
mov
mov
sbbl
xor
cwtl
pusha
and
adc
insl
xchg
arpl
add
add
dec
adc
imul
cltd
mov
mov
jne
push
cmpsb
mov
adc
add
inc
sti
je
lahf
rorb
decb
fnsave
xchg
pop
es
mov
adc
lret
sub
arpl
push
sbbb
cmovge
adc
aas
daa
hlt
je
rcll
jne
xor
lock
or
sub
push
lahf
cli
shll
jl
sti
das
push
jnp
ret
pop
inc
loopne
sbb
pop
shl
and
push
jle
int
add
push
orb
add
push
pop
add
lea
push
mov
out
xchg
pop
sbb
jp
adc
mov
push
leave
out
cmpl
lock
add
test
mov
mov
xchg
mov
push
sbb
pop
cmp
add
sbb
pusha
popf
pop
mov
jo
adc
icebp
in
push
xor
mov
adc
mov
dec
sub
inc
push
push
push
inc
lock
push
inc
cmp
pop
sub
xchg
mov
jb
mov
mov
movb
xchg
mov
scas
xchg
xor
stos
or
mov
mov
push
push
pop
dec
inc
aas
mov
pop
pop
inc
mov
lods
bound
pop
movsl
mov
adc
test
dec
and
add
nop
sbb
addl
pop
roll
and
insl
subl
mov
shrb
pop
xchg
xchg
cwtl
pushf
inc
jbe
clc
je
loopne
je
lret
cltd
and
xor
pop
ss
push
loopne
ds
xor
fcoms
lret
mov
xchg
mov
mov
sbb
rorb
dec
orl
mov
xor
in
adc
mov
inc
lret
pop
aam
adc
jge
mul
sbb
jo
hlt
mov
jecxz
cmp
add
les
subl
faddl
jmp
roll
bound
cli
sarb
xor
push
or
jecxz
push
xor
into
aam
adc
mov
scas
sbb
add
push
or
ficoml
and
lds
add
int3
push
inc
inc
cmp
fnstcw
cld
cwtl
fs
pop
push
xchg
push
stos
adcb
movsb
insb
mov
adc
pushf
dec
aad
shlb
mov
inc
sbb
push
ljmp
or
flds
out
subl
ljmp
aas
int
aas
mov
or
out
test
addb
aam
mov
add
push
xor
loop
jno
inc
dec
enter
dec
dec
call
sti
or
sub
or
sbb
cmp
or
and
xor
clc
push
scas
dec
adc
fucomp
sbb
call
test
or
mov
lock
mov
movl
or
or
or
or
xor
sbb
jl
adc
push
mov
bound
insb
jl
pop
push
outsb
sbb
xchg
pop
or
ds
je
mov
inc
insb
rcrb
jne
mov
jmp
mov
outsl
inc
inc
inc
rcrl
add
inc
pop
push
xchg
xor
mov
pop
mov
add
lea
adc
xchg
clc
xor
push
test
nop
fdivs
test
insb
xchg
aaa
sbbb
push
inc
addr16
adc
add
mov
xchg
mov
adc
mov
insb
fstpt
adc
lea
lock
clc
inc
movsl
in
pushf
sub
loopne
sub
sub
fcomps
and
mov
mov
adc
push
inc
pusha
leave
addr16
push
push
pushf
or
mov
sub
adc
adc
inc
inc
iret
mov
dec
rcrb
push
lret
dec
clc
inc
sbb
dec
das
subl
sbb
jne
loope
cmp
stos
add
sti
jg
mov
test
mov
test
push
orb
mov
cmp
in
push
cmp
push
xor
pusha
and
cmp
xor
icebp
inc
rorb
rcrb
sub
inc
andb
or
fsubrl
sbb
sbb
popa
pop
pop
sbb
aam
push
xchg
mov
data16
cmp
mov
adc
push
mov
mov
fsubl
pop
cmp
aaa
xchg
std
clc
and
into
inc
movb
push
push
adc
fisubs
mov
dec
push
push
aas
push
add
cmpsl
sahf
test
test
inc
xor
notl
mov
dec
pusha
pop
cmpsb
fcom
sub
rolb
jmp
mov
xor
sbb
adc
into
jae
loopne
je
sbb
call
inc
mov
jno
or
xor
add
pop
inc
push
iret
rorb
xchg
test
or
push
hlt
sub
fcoms
mov
push
out
pop
push
lea
into
mov
add
mov
jge
into
or
xchg
data16
mov
sub
xchg
mov
or
or
enter
decb
mov
mov
sub
add
leave
fdivr
mov
sahf
add
push
es
dec
stos
subl
sbb
fs
neg
test
fldcw
call
push
or
adc
or
pop
add
and
sbb
jge
outsb
lcall
adc
xor
jle
lods
loope
out
testb
or
les
push
add
cmp
mov
or
fmulp
pusha
pop
imul
xchg
fstps
ja
sbb
pop
jne
pop
mov
cmpb
ret
pop
fisubrl
testb
sbb
sbb
movb
pop
test
add
loop
sbb
or
pop
mov
cmpb
adc
xor
test
sbb
dec
xchg
dec
jo
mov
loop
and
add
jo
or
or
cmpl
call
or
mov
push
outsl
push
fisttpll
orb
testl
je
in
adc
bound
iret
mov
arpl
dec
push
jo
andl
pusha
es
push
mov
inc
mov
sub
add
js
jbe
and
pop
xlat
xchg
loope
mov
sbb
test
pop
fimull
push
rcrb
out
les
inc
sub
aad
fcompl
xorb
adc
es
xlat
pop
dec
adc
ljmp
add
lock
insb
lret
roll
mov
inc
test
pop
dec
test
pop
fiadds
arpl
sti
or
in
mov
mov
adc
sbb
inc
loope
dec
in
mov
mov
and
cmp
lret
jg
push
test
mov
sbb
mov
xchg
push
add
mov
loop
mov
int
clc
stos
add
cmpsl
push
pop
dec
push
adcl
and
mov
lds
bound
testb
fisttpl
repnz
out
sbbb
cmp
mov
fcoms
cmpsb
ret
jp
test
inc
out
pop
das
xchg
mov
fucomip
addb
pop
pop
push
lcall
add
mov
mov
popf
into
sub
fistps
cmp
xor
or
and
mov
pushf
out
inc
roll
push
xor
cmp
popl
push
jne
daa
pop
mov
or
inc
sbb
inc
sub
adc
inc
sbb
push
adc
push
add
shrb
or
sbb
jl
test
out
fistl
or
insb
js
jl
mov
mov
data16
jne
add
fisttpl
insb
jnp
inc
lock
int3
adc
mov
push
loopne
mov
imul
mov
add
xchg
les
dec
adc
cwtl
test
lret
push
test
sub
lods
addb
in
inc
pop
outsl
mov
add
adc
mov
mov
push
fcoms
add
mov
push
inc
mov
pop
mov
iret
pop
and
lods
add
xlat
push
mov
and
jo
scas
dec
xchg
or
test
add
inc
rol
sub
add
in
cmp
rol
hlt
mov
push
lods
and
cwtl
dec
fildll
dec
push
addb
jne
fcmovnu
mov
dec
add
dec
push
arpl
andw
jge
gs
add
out
test
test
les
ret
je
jg
push
insb
add
cwtl
pop
addl
jl
fwait
cwtl
rcrb
sbb
jo
add
je
nop
adc
jle
dec
les
je
sbb
add
or
mov
add
mov
sbb
lret
lds
icebp
lods
fcoms
xlat
lea
rorb
adc
sub
mov
xchg
repz
add
and
xchg
mov
inc
and
xchg
add
repnz
pop
and
lret
mov
sbb
xchg
jecxz
adc
push
addr16
xchg
add
sbb
daa
cld
or
add
repz
add
sbb
add
inc
bound
inc
daa
inc
lock
shrb
in
pop
lods
cltd
sbb
dec
xor
push
inc
adc
adc
ror
cmp
cli
push
add
pop
jge
sbb
push
js
inc
mov
dec
fs
rorb
and
xlat
mov
loop
insl
mov
rolb
ja
test
add
adcl
push
xor
rcrb
cmpsb
mov
mov
andb
mov
mov
add
xchg
mov
push
shll
ds
loope
mov
je,pn
push
cwtl
into
and
pop
push
push
pop
mov
clc
dec
movl
sbb
mov
add
pushf
aas
mov
orb
sub
and
mov
aam
add
xchg
rol
pop
adc
fdivl
jmp
pop
shll
or
iret
pop
push
pop
mov
adc
jne
out
leave
add
bound
add
pop
inc
jmp
lds
inc
hlt
jl
sub
loop
sbb
or
sarl
lods
sbb
insl
mov
test
jg
sbb
pop
push
jmp
pushf
mov
movb
pop
sbb
sar
inc
out
inc
push
sbb
inc
pop
adc
sub
mov
add
dec
les
pop
bound
xorb
inc
pop
mov
mov
ret
mov
rcl
call
adc
push
add
imul
hlt
in
adc
mulb
pushl
mov
xlat
mov
mov
es
adc
or
iret
mov
push
add
adcb
jp
ficompl
inc
sbb
mov
test
xor
bnd
in
test
jbe
in
push
or
les
mov
pop
and
add
inc
pop
arpl
fldcw
andb
insb
sti
sub
mov
ror
fs
cmp
test
mov
std
pop
sub
sbb
jle
mov
push
pushl
cmp
adc
test
loopne
pop
push
adcl
dec
cmp
das
cs
rorl
jo
push
mov
xchg
mov
xor
xchg
shl
ss
add
mov
push
adc
or
inc
sbb
lock
pop
add
sbb
leave
inc
aas
adc
jb
sarl
les
pushf
or
sbb
cmp
and
clc
adc
add
movsb
push
outsb
sub
mov
cmp
dec
stos
jne
sbb
in
movsl
stos
insb
dec
cmp
cld
cmp
retw
cmp
adc
mov
sub
add
mov
shlb
add
rcrl
sub
push
shl
xor
fcomps
cmpb
push
pop
mov
push
bnd
add
test
push
jl
daa
dec
fcoms
in
clc
out
movb
ljmp
pop
mov
mov
pop
push
mov
push
inc
enter
dec
and
movsb
cmp
ljmp
dec
test
push
jae
bound
mov
xor
mov
lcall
jle
rolb
sbb
adc
mov
les
xchg
test
sub
ss
sub
sub
push
mov
stos
js
shlb
add
sub
or
mov
dec
push
test
sub
mov
cli
or
sar
insl
xlat
add
inc
mov
mov
push
dec
add
pushf
fsubp
addr16
cmp
add
addb
cld
aam
ss
bound
or
loopne
cwtl
rclb
xchg
mov
or
iret
sub
xor
hlt
inc
inc
lea
ljmp
fs
adc
lds
jp
jo
mov
insl
mov
add
mov
xorb
sarl
scas
mov
xchg
fs
push
enter
push
xorb
sti
cmp
sbb
xor
mov
outsb
sarl
mov
lods
pop
xor
add
mov
xor
daa
les
push
push
mov
adc
jo
adc
loopne
mov
mov
add
shl
push
jle
xchg
adc
jnp
mov
frstor
mov
fdivs
add
add
adc
out
dec
add
inc
fistl
daa
add
lea
lds
mov
pop
or
add
pop
lea
adc
mov
dec
sbb
adc
sbb
xor
push
or
push
lea
mov
call
roll
jge
fidivl
inc
das
add
mov
mov
andb
mov
into
lret
and
and
or
sbb
int3
mov
adc
sbb
rorb
inc
and
ss
fiaddl
clc
xor
cli
pushf
mov
add
adc
xchg
mov
popa
in
int
dec
sub
shlb
and
inc
sub
and
scas
addl
mov
mov
sub
fcomi
movb
in
ret
mov
or
cld
xor
push
adc
xor
call
lea
or
out
stos
cwtl
add
sbb
test
outsb
add
ja
xchg
mov
adc
add
les
roll
sahf
inc
in
test
test
cmpb
lock
aas
lds
and
mov
rorl
or
push
jge
js
push
sbb
mov
push
aad
and
lea
cmpsb
add
sub
adc
repnz
inc
adc
push
enter
sub
daa
push
stos
or
fstpl
icebp
mov
add
pop
mov
xor
jecxz
arpl
outsl
cmc
xlat
or
arpl
jle
mov
push
je
subl
addl
push
stc
mov
ds
ret
add
movsl
pop
pop
in
out
js
or
or
or
push
jb
roll
and
rolb
jp
icebp
inc
push
mov
push
popf
shrb
popf
xor
or
sbb
aaa
pop
fmuls
daa
mov
ds
aam
aas
sub
mov
xchg
pop
cld
imul
pop
mov
jl
mov
push
or
push
and
mov
jne
ficompl
into
xor
sub
mov
jbe
or
mov
xchg
loopne
int3
scas
test
cmp
test
or
push
mov
xor
and
adc
adc
scas
add
stos
cs
pop
pop
dec
lock
xchg
adc
adc
jge
cld
sbb
outsl
add
sbb
mov
pop
je
add
fisubrs
outsb
inc
rcr
xchg
mov
ss
sub
or
loop
fisttps
mov
and
push
pop
mov
ljmp
arpl
addr16
loope
jo
mov
xchg
addl
adc
xchg
popa
add
sbb
mov
sub
test
data16
leave
mov
fnstsw
mov
aaa
lea
jle
mov
dec
test
dec
add
lea
cld
and
ljmp
jp,pt
cmp
adc
aam
xchg
fs
inc
or
inc
jno
inc
mov
rorl
std
and
in
les
ja
mov
andb
bnd
subb
loopne
mov
push
pop
test
push
adc
xchg
and
ror
mov
dec
sbbb
addr16
dec
jle
push
pop
pop
sub
sahf
jae
and
fsubl
push
adcb
fcomps
add
in
cmp
cmp
push
jp
cmp
mov
je
or
daa
insb
mov
mov
lret
iret
cli
and
js
xor
inc
popa
jl
pop
movsb
xor
add
and
popf
add
shrb
sub
mov
inc
orb
inc
sbb
jno
mov
mov
and
stc
lds
mov
sbb
inc
daa
and
cwtl
nop
dec
add
loop
adcl
add
cmp
les
push
shll
pusha
mov
sbb
sub
or
insb
add
or
test
clc
add
in
mov
std
add
inc
fcomps
jbe
push
push
cmpsb
mov
jb
nop
lods
bound
sub
xchg
adc
adc
inc
adc
adc
sub
mov
or
dec
inc
push
clc
lret
inc
push
xchg
data16
pusha
cwtl
int
ljmp
out
jbe
pop
push
popf
pop
ja
cmp
js
add
sarb
push
pop
add
daa
add
dec
push
push
mov
jo
clc
movb
pop
mov
or
and
mov
popf
ds
cld
push
jge
pop
push
jns
movsb
cmp
dec
xor
or
cmp
inc
sub
fdivl
mov
or
test
mov
mov
adc
sub
int3
jne
jo
add
or
cwtl
dec
pop
stos
inc
mov
and
leave
or
and
inc
mov
aas
lds
int3
insb
and
jne
mov
icebp
xchg
mov
pop
pop
scas
mov
add
add
pop
ljmp
js
mov
mov
addb
cmp
and
test
orl
rclb
lcall
push
shll
sbb
or
xor
mov
mov
subb
xor
lcall
lret
roll
cmp
adc
push
mov
adc
jmp
stc
inc
jnp
sub
inc
or
or
or
xor
mov
mov
xor
inc
or
push
arpl
adc
mov
pop
sub
xchg
addl
push
fistl
nop
xorl
outsb
aad
dec
aad
mov
adc
pop
orb
ss
add
push
in
mov
cmpsl
daa
out
jne
mov
ret
pop
or
incl
ret
pop
leave
inc
xorb
cmp
push
jg
arpl
mov
add
dec
in
mov
xor
es
cmc
or
and
mov
popf
add
xor
sbb
sbb
and
dec
in
pop
add
icebp
mov
adc
add
sub
test
testb
outsl
incl
jno
sub
sub
sub
rorl
repnz
arpl
iret
cmp
addr16
xor
pop
sbb
leave
daa
add
inc
pop
imul
cmp
mov
cmp
push
fidivl
xchg
loope
fadds
mov
mov
insb
cmc
shrl
xchg
jbe
and
pop
lea
xor
dec
orb
cli
mov
pop
es
and
xchg
rcll
mov
dec
clc
mov
add
cmp
cmp
inc
and
push
push
aam
push
ret
dec
clc
cmc
push
adc
mov
xchg
lds
add
jae
pop
adc
pop
push
inc
psrlw
sbb
out
mov
or
mov
xor
repnz
test
add
aad
mov
add
xchg
in
mov
fcmovnbe
mov
pusha
push
in
jo
mov
pop
pop
add
push
imul
iret
aas
mov
mov
sub
adc
sub
cmp
sbb
icebp
push
dec
leave
inc
xor
sbb
popa
jno
mulb
call
movsl
mov
in
and
add
or
dec
push
mov
jo
add
xor
ds
stos
and
mov
rorl
add
lahf
add
fs
jmp
jbe
fistps
mov
mov
xor
add
jae
and
and
jl
fmuls
xchg
sbb
rol
hlt
xchg
sahf
adc
xor
push
sub
int3
xchg
in
cli
mov
bound
pop
shlb
test
repnz
pop
add
jne
fcomps
loope
lds
or
or
push
mov
push
std
xchg
in
addr16
cmp
mov
aas
dec
sbb
jno
push
sub
add
or
xchg
push
jno
adc
nop
adc
sub
cmp
mov
mov
push
fdivs
pop
out
cmp
jbe
jg
xor
adc
mov
and
sahf
add
and
loop
sbb
icebp
add
sub
gs
insb
in
mov
mov
sbb
clc
adc
test
push
into
xchg
cmp
inc
pusha
mov
sbb
and
popf
and
cmp
daa
rcrl
jno
pop
movsb
jns
push
xor
addb
push
cmp
nop
jne
popa
adc
jecxz
pop
mov
ret
add
scas
adc
mov
pop
xadd
xor
or
jbe
push
pop
ficompl
dec
jne
add
xchg
stos
and
aam
lea
movsb
fadds
push
mov
and
add
popf
add
pushf
out
mov
pusha
push
int3
mov
dec
leave
add
push
push
mov
mov
or
jge,pn
gs
sbb
sbbb
idivl
cmp
sub
pop
push
mov
dec
mov
cmpsl
jo
xorl
add
push
jo
fisubrs
dec
outsb
xor
ljmp
aad
mov
rorl
and
or
shr
lock
sub
mov
movl
cmpsl
cs
sbb
daa
add
aad
or
inc
fcmovnbe
pop
aas
lock
sbb
es
add
sahf
mov
mov
cmp
cmpl
daa
xlat
popa
loop
nop
add
sub
pop
roll
addr16
or
and
test
xchg
addl
jp
aad
jno
es
fwait
imul
ret
aam
xchg
and
addb
adcb
and
test
inc
fsub
dec
and
push
rcrl
clc
push
sub
sahf
push
pop
mov
mov
push
mov
push
test
test
arpl
aaa
add
mov
mov
push
pop
inc
in
mov
daa
xchg
mov
add
xchg
sti
and
dec
popa
movsl
mov
mov
dec
add
mov
lea
dec
sti
pushf
movb
sar
lods
sti
push
mov
xor
cmp
inc
mov
push
dec
and
inc
insb
adc
mov
adc
out
sbb
andb
and
shlb
push
inc
les
das
ret
daa
push
cmp
xor
dec
pushf
xchg
rclb
mov
push
in
fcoml
push
scas
or
push
mov
lret
sbb
xchg
test
movsb
ret
shl
idivb
mov
test
lods
and
lds
mov
push
push
xor
sbb
andb
mov
add
and
repnz
sub
fiaddl
fadds
push
out
inc
gs
push
and
pop
or
lcall
pop
jo
stos
mov
iret
mov
fcmovbe
cs
push
test
es
fsubrs
dec
and
insb
mov
into
fs
mov
loopne
popf
push
adc
dec
rcr
and
jnp
pusha
je
lahf
mov
andl
push
pop
mov
xor
mov
sbb
fisubl
stc
push
push
lock
push
addr16
cmp
add
sbb
mov
push
push
addr16
mov
aaa
pop
cmp
xchg
sub
push
push
mov
add
pop
sub
hlt
lock
add
ja
rcrb
lock
movsb
outsl
xchg
divl
dec
inc
mov
pop
roll
mov
mov
sbb
icebp
jle
and
add
jae
mov
jno
imul
mov
push
fadds
sub
push
fsub
pop
subb
andb
mov
aas
clc
loope
push
cs
bound
mov
push
cs
stos
sub
add
sub
repnz
fisubl
push
cmp
mov
inc
sbb
cmp
stos
arpl
bound
sbbl
pop
mov
sbb
jl
inc
test
fmul
sub
sbb
add
imul
or
sbb
push
pushf
mov
mov
outsl
cmp
sbb
xchg
lods
push
mov
loopne
testl
pop
jo
lea
lret
xor
adc
lds
xorb
push
insl
inc
mov
mov
inc
xor
andb
call
inc
mov
add
addr16
icebp
movsb
pusha
test
sub
jo
cmp
lret
rol
xchg
movswl
and
push
mov
mov
loopne
or
lahf
insl
sub
movsb
push
push
xchg
lret
sbb
and
lods
loopne
jle
stc
xor
testl
dec
pop
wrmsr
inc
mov
cmp
mov
lret
mov
sbb
jne
pop
aaa
sbbb
mov
push
mov
adc
xor
not
lock
js
inc
cmp
mov
or
pop
cmp
sbb
adc
inc
mov
inc
lea
pop
adc
xor
sbb
cli
inc
add
sub
clc
and
mov
add
fimull
cli
pop
xchg
mov
jae
jno
mov
adc
enter
pop
das
mov
mov
push
imulb
cmp
and
js
inc
fiaddl
shlb
call
mov
fwait
pusha
adc
cli
xchg
test
out
icebp
mov
inc
xor
rorb
jb
rclb
mov
xchg
push
cmp
fld
mov
inc
jnp
xchg
cwtl
in
data16
mov
push
push
xor
jns
inc
mov
int3
jmp
pop
rcrl
inc
mov
mov
ret
xchg
cmp
xchg
adc
inc
lock
scas
mov
icebp
cmp
push
mov
push
push
and
cs
jno
push
insb
std
push
cld
cli
push
fmull
add
inc
movsb
test
movb
and
insb
fsubrs
cmp
add
or
aas
add
add
lret
cld
or
dec
pop
dec
push
stos
rorb
or
inc
sub
push
push
cwtl
mov
lea
push
push
or
jmp
inc
or
jbe
into
add
pushf
add
dec
jo
and
out
cmpsl
adcb
add
shll
in
dec
bound
cmp
mov
and
inc
xchg
bound
mov
jp
push
mov
jb
adc
nop
mov
fimuls
movsl
dec
test
cs
loopne
test
je
adc
jl
mov
push
push
pop
add
and
inc
enter
add
lock
je
adc
jb
lods
jnp
rcr
mov
inc
push
inc
xchg
out
gs
mov
mov
mov
mov
xor
lods
in
push
in
jbe
mov
jns
inc
mov
rolb
insb
xor
sbb
jne
cmp
shrb
pop
daa
inc
or
ds
sbb
sbb
int3
adc
and
lock
fs
add
xor
add
add
pop
adc
mov
add
gs
adc
push
cmp
sub
inc
sbb
mov
ret
xor
out
adc
sub
mov
jg
call
pop
jae
add
bound
adc
aam
rclb
cmp
jecxz
sbb
stos
xlat
push
fmull
and
ja
loop
call
cmp
rol
js
rcll
clc
xchg
adc
bound
icebp
insb
xor
mov
push
push
adc
sbb
pop
notb
in
push
adc
rcrb
inc
pop
xchg
add
mov
jns
test
lods
lods
andb
sub
xor
mov
mov
lea
rep
inc
stos
ss
mov
nop
cmp
inc
cmp
add
stos
dec
lret
add
mov
add
xor
ret
mov
push
test
add
lahf
push
jns
and
outsl
mov
sbb
push
dec
push
xor
push
mov
notb
sub
inc
test
adc
sub
jle
xor
iret
leave
movb
cmp
push
inc
xor
jae
cmpsl
test
push
jne
push
mov
mov
pop
sti
inc
inc
jae
jl
push
jl
inc
xor
sub
xor
cmp
mov
popf
adc
add
dec
testl
push
fdivs
dec
shl
push
add
and
push
fadd
pushf
movsb
xor
cwtl
insb
add
ljmp
pushf
aam
dec
std
lret
mov
push
xor
add
ja
mov
xchg
adc
and
adc
push
popa
pop
dec
mov
dec
xchg
mov
ss
test
sahf
jo
mov
mov
fidivrs
mov
enter
test
sub
and
add
loop
mov
mov
cmpsb
and
aad
add
add
xchg
add
xchg
mov
ret
or
shrb
test
push
les
das
pop
test
andb
xor
bound
test
repnz
push
pop
adc
aam
andb
mov
adc
mov
cmp
insl
mov
jno
push
roll
adc
sbb
mov
pop
fs
dec
and
bound
cwtl
aam
xor
add
mov
popf
add
mov
xchg
jne
lock
cmp
jno
push
mov
sub
insb
test
imul
add
mov
pusha
push
es
adc
gs
mov
xor
inc
or
shlb
mov
out
ds
cmp
adc
sub
jl
add
sahf
or
fadds
hlt
cmpb
out
cmc
and
or
add
sub
adc
popa
and
mov
shrl
adc
lcall
and
arpl
sub
aam
loop
push
psrlq
mov
add
loopne
push
add
mov
retw
xor
rclb
add
std
lds
xlat
inc
mov
inc
sub
add
mov
jb
cmpsb
lea
negb
xor
mov
and
adc
test
sub
push
loopne
push
mov
fmul
push
rolb
lahf
sarb
mov
xchg
imul
stos
sub
adc
inc
lods
mov
mov
out
fcoml
mov
mov
insl
and
xchg
call
push
inc
mov
rclb
mov
mov
xor
push
lock
lcall
and
push
inc
movsb
push
int
or
mov
fstps
mov
roll
xlat
shlb
lea
dec
stc
lods
adcb
sub
push
hlt
pop
inc
jo
cmp
lea
add
ds
inc
int
out
inc
test
aas
loopne
daa
xor
loop
fsubl
add
sbb
lahf
mov
push
add
inc
aam
mov
rclb
out
sbb
inc
fcmovnbe
mov
rcrl
jle
rcrl
lock
lds
mov
lods
or
sbbl
adc
pop
fbstp
enter
add
or
dec
or
inc
dec
xlat
adc
loop
stos
clc
push
cmp
je
sbb
or
sub
cmp
fnstsw
lret
xchg
mov
push
fidivl
push
jo
sbb
mov
inc
inc
les
lock
ret
outsl
cmp
mov
jge
inc
and
loope
clc
adc
mov
fldenv
mov
jecxz
bound
adc
jns
data16
push
jecxz
movsl
movsb
sbb
fldenv
jne
hlt
fimull
test
loop
outsl
sbb
inc
sub
lods
stos
mov
add
aam
sub
outsb
add
add
cmp
mov
clc
or
cmp
fwait
adc
adc
jnp
adc
fcoms
jno
mov
mov
repnz
pusha
inc
mov
jl
mov
mov
hlt
shl
outsb
push
rorb
pop
loopne
rcll
mov
jnp
inc
mov
out
xchg
mov
push
adc
insb
stos
fcoms
mov
sbb
or
loopne
dec
insl
inc
jle
pop
int3
hlt
push
dec
add
gs
into
sbb
push
ret
pop
jecxz
add
jno
inc
or
outsb
jmp
and
adc
add
mov
push
insl
insl
ror
leave
pushf
pop
mov
pop
mov
aaa
or
ds
pop
sbb
test
jb
sub
clc
cmp
adc
jge
mov
or
cmp
adc
andb
xchg
jg
cwtl
js
sbb
adc
lock
fldt
sub
ss
adc
movsb
mov
mov
rorb
jne
push
and
push
arpl
stos
push
sbb
imull
push
inc
and
mov
loop
jnp
mov
adcb
mov
lock
pop
int
inc
push
push
adc
add
ss
test
inc
clc
inc
add
lcall
clc
jge
pop
sahf
cwtl
adc
mov
pop
sarb
fdivrs
pop
stos
jecxz
andb
lcall
push
mov
mov
or
mov
add
add
lds
cmp
sub
xor
adc
sar
push
adc
aas
gs
inc
add
mov
cld
into
xorb
add
into
mov
jne
subl
inc
xor
xor
movl
pop
xor
cmpb
xor
test
sub
inc
mov
mov
pusha
rcll
aad
das
or
int
inc
cmp
mov
mov
imul
push
sahf
pop
sub
pop
rorl
push
fdivl
call
outsl
subb
or
sti
andps
movsb
dec
jne
imul
mov
sbb
mov
daa
jno
push
hlt
cmp
in
aam
jl
inc
fadds
push
rorb
mov
xchg
iret
mov
ficoml
and
pop
add
sbb
mov
in
fsubs
jne
lea
mov
adc
pop
pushf
and
hlt
ljmp
dec
pop
mov
call
js
pusha
add
pop
inc
sub
add
mov
lds
ror
adc
test
inc
mov
xchg
add
xlat
add
sbb
pushf
into
mov
adc
sbb
add
push
pop
rcl
sbb
and
hlt
pusha
clc
add
dec
fsubrl
add
sbb
outsb
mov
insl
jg
rorb
adc
sbb
mov
sbb
mov
mov
cmp
sbb
fadds
cld
jmp
mov
cmp
push
xchg
nop
sub
cmc
mov
add
sub
fistpl
arpl
stc
lea
or
xlat
mov
jae
or
jo
push
lods
add
les
mov
pop
int3
adc
loop
push
xchg
mov
dec
addb
dec
adc
add
mov
movsl
mov
xchg
clc
cmpsl
and
sbb
xchg
adc
loopne
or
cmp
sbb
pop
mov
cmp
mov
or
add
mov
dec
or
rclb
les
jno
sbb
call
adc
and
fstpt
in
jo
add
gs
jno
int3
popf
adc
mov
hlt
nop
filds
xor
jns
test
sahf
jo
stc
fs
shlb
or
jmp
inc
sarb
and
test
nop
xorl
js
jecxz
add
pop
inc
ret
push
jmp
xchg
popa
cmc
lds
add
movb
or
pop
jecxz
sub
inc
shll
add
jge
mov
xor
jno
out
mov
aad
sbb
jmp
mov
lock
or
jae
push
push
inc
test
add
jmp
lret
dec
inc
in
mov
popl
mov
clc
push
push
push
movsl
xchg
inc
je
inc
mov
lods
stos
xchg
in
insl
pusha
jne
andb
lds
mov
call
fildl
loopne
notb
addr16
push
mov
inc
add
or
sti
adc
lahf
push
push
fldt
pop
hlt
lret
sbb
add
iret
xor
fwait
icebp
add
push
push
popa
jnp
popw
hlt
ja
sbb
in
mov
test
mov
mov
pop
cmpsb
sbb
push
xor
lds
add
or
mov
jo
add
sahf
xor
inc
sbb
mov
inc
mov
inc
inc
cmp
movsl
ds
pop
xchg
ret
push
pop
imul
loope
sbbb
ficompl
sbb
sub
sbb
call
dec
mov
xor
mov
pause
rorb
movsl
ret
pop
in
loopne
mov
or
or
js
xchg
bound
leave
push
adc
leave
loope
dec
mov
add
adc
sahf
popf
push
ss
adc
adc
sub
test
jb
stos
sbb
jno
in
and
lds
aad
sbb
adc
or
int
dec
jne
mov
int
lds
sahf
inc
sbb
add
orb
dec
adc
mov
mov
and
fsubl
inc
cmc
adc
loopne
push
icebp
adc
sbb
add
mov
stos
push
and
shrb
push
xor
adc
call
pop
pop
add
pop
mov
add
cmp
and
movzwl
fwait
push
mov
imul
add
add
lret
mov
lea
mov
push
aam
iret
add
mov
cmpsb
stos
sub
mov
mov
movsb
addb
loop
mov
add
mov
arpl
adc
nop
pop
sbb
xor
inc
push
mov
push
push
inc
sub
pop
adc
and
mov
mov
les
ja
shlb
adc
cmp
push
hlt
and
popa
enter
hlt
inc
add
pop
sub
adc
rolb
pop
jge
ret
cmp
mov
push
sarl
or
sarl
inc
lea
outsl
cmp
push
sub
push
jle
and
rcr
dec
ljmp
pop
add
push
add
movsb
inc
mov
cli
nop
push
pop
cmp
data16
add
sar
xlat
mov
lds
loopne
add
clc
aad
mov
sbb
and
mov
mov
arpl
mov
ljmp
mov
or
sahf
push
scas
cs
xchg
loopne
pop
insl
enter
popf
dec
scas
inc
mov
sub
sbb
xchg
cs
or
jmp
dec
call
mov
and
cmp
ror
imul
jecxz
push
stos
imul
cmp
xchg
sbb
or
cmp
popa
adc
mov
cmp
jo
fwait
mov
and
dec
mov
add
add
cmp
sbb
jae
icebp
rclb
insl
and
mov
add
push
and
into
push
cld
push
push
pusha
test
push
sub
jne
dec
inc
stos
ret
jl
paddusw
repz
fwait
aam
jne
mov
mov
xor
lea
int
loop
jno
adc
je
adc
test
sti
mov
dec
ss
out
xorl
shrb
comiss
add
push
pop
test
add
cs
leave
adc
mov
insb
ret
fisttpl
call
pop
sbb
pop
jl
mov
mov
mov
adc
hlt
ljmp
dec
push
popf
ficoml
push
add
sti
mov
loop
into
inc
cmp
push
jae
lock
mov
rolb
stos
dec
fdivrl
add
push
mov
mov
mov
fadds
fabs
clc
mov
imul
fisubs
test
push
jl
pop
out
rcll
mov
nop
ljmp
adc
mov
push
movsl
sub
iret
out
test
sub
cmc
les
inc
call
nop
cmc
pushf
adc
jl
ret
mov
push
stc
cwtl
xor
mov
ret
mov
and
cmc
adcl
js
cmp
xchg
adc
ret
sti
sub
add
add
cmpb
cmp
xor
sbb
jle
or
int3
add
inc
or
jo
hlt
nop
xorb
shlb
cmp
jbe
jg
push
add
or
pop
mov
pop
cmp
mov
jbe
subb
cmp
mov
jbe
pushf
les
loopne
mov
sub
mov
sar
fdivs
insl
jo
or
fistl
pushf
sub
push
adc
push
cmp
mov
pop
subl
insb
sar
test
mov
ss
mov
sbb
inc
jecxz
push
add
xor
dec
adc
pop
cltd
mull
rorl
add
lahf
xor
or
or
mov
sub
subl
sbb
jle
les
std
stos
jno
shrl
out
roll
enter
test
subb
cli
jno
fsubs
aaa
imul
push
pop
xchg
jne
stos
jb
test
ljmp
loopne
add
js
mov
ret
stos
call
mov
and
js
mov
mov
nop
push
xor
rolb
pop
faddl
dec
add
inc
sbb
jg
mov
mov
pushf
loopne
shll
fs
jbe
les
xchg
into
push
inc
inc
cld
sbb
mov
stc
arpl
aas
fiaddl
test
push
adc
mov
and
iret
xchg
and
push
inc
mov
int3
and
xchg
loope
in
ret
into
xor
mov
scas
in
sub
adc
or
mov
leave
mov
cmpsl
push
mov
inc
sbb
add
jecxz
inc
lahf
add
xor
dec
adc
or
sbb
xchg
daa
and
lock
xor
cmp
lret
lds
aad
gs
daa
pop
sbbl
mov
jmp
adc
cmp
and
fiadds
scas
pop
loop
fdivl
or
or
xchg
jo
mov
or
mov
notb
pop
mov
mov
adc
push
sbb
or
xchg
adc
cmp
lea
int3
and
jge
sbb
inc
ret
mov
loopne
inc
add
mov
popa
ljmp
loop
push
dec
inc
call
pop
rcrb
je
clc
pusha
sub
stc
fucomi
cmp
mov
sub
and
shlb
mov
add
test
push
cmp
xchg
cmpsl
mov
or
sbb
sub
push
aam
pop
pusha
mov
das
cli
push
cmc
rcl
inc
stos
mov
sub
rol
pusha
and
xor
add
lock
xchg
mov
lldt
pop
ljmp
jge
lea
mov
int
pop
pop
xchg
dec
push
rol
dec
mov
and
inc
inc
sub
enter
push
adc
addb
lods
xchg
inc
es
adc
xchg
add
and
sub
lea
mov
clc
pusha
les
jle
jmp
loop
in
ljmp
call
pop
xchg
jae
movl
push
push
es
sahf
adc
cmp
rolb
xchg
mov
jno
daa
js
sub
lods
mov
inc
in
dec
test
test
rcrl
xchg
and
push
dec
aam
push
outsb
sbb
pop
lods
sub
dec
sub
inc
xlat
iret
add
xchg
cld
jbe
js
addr16
and
cmp
add
cld
mov
scas
cli
roll
or
insl
mov
cmp
push
addr16
out
cli
mov
int3
mov
out
fsub
mov
add
add
lock
push
aad
jne
push
mov
inc
or
push
and
or
inc
add
sub
pop
mov
jecxz
push
mov
xor
xor
int
pop
ret
sbb
repz
jp
test
mov
stos
push
mov
lods
in
out
sub
rolb
sub
leave
pop
aas
add
adc
inc
mov
les
xchg
stos
test
pop
leave
les
pop
arpl
lock
test
pop
sub
mov
push
or
mov
jne
aam
fiadds
stos
pop
push
fisttps
rcrb
pop
mov
mov
add
xchg
adcl
and
in
push
rclb
push
and
or
push
push
and
leave
hlt
or
sub
out
in
addl
bound
int
loop
cmpsb
mov
lcall
sbbb
loop
rol
enter
push
pop
icebp
sub
movsb
push
mov
mov
and
adcb
or
push
cmp
inc
xchg
mov
aaa
or
and
push
pop
divb
pusha
fs
in
push
addr16
aam
add
ror
nop
mov
dec
pop
or
movsl
dec
cmp
adc
jns
mov
add
inc
mov
std
adc
xchg
out
and
iret
push
inc
sub
adc
cs
pop
cmpsb
xchg
push
testb
or
aad
out
jmp
xchg
clc
aas
adc
rorb
cld
or
adc
cmp
and
outsb
stos
cltd
xor
bound
xor
outsb
movb
xor
lret
push
mov
loopne
mov
add
mov
lahf
cli
sub
in
ret
sub
rclb
adc
popf
push
mov
cs
pusha
dec
mov
and
cmp
clc
jle
das
adc
sub
roll
push
cld
pop
icebp
mov
add
mov
mov
cmp
hlt
push
mov
pusha
or
inc
das
mov
sub
jl
pop
mov
pop
ss
or
push
add
add
sahf
or
pop
rclb
sbb
popf
mov
addl
sbb
push
push
aam
mov
add
push
hlt
or
ss
mov
leave
adcb
add
push
aad
aad
or
inc
inc
aad
or
mov
sbb
mov
andb
popf
mov
mov
xchg
fs
sbb
mov
inc
addl
add
inc
arpl
dec
dec
or
icebp
movsb
call
shl
mov
mov
push
cwtl
pushf
jp
fsubrl
sbb
pop
inc
jb
jmp
push
adc
gs
push
sti
clc
jmp
xorl
insl
add
add
add
mov
or
add
aaa
mov
inc
push
pop
inc
pop
fiadds
loopne
sbb
push
cmc
inc
popa
mov
mov
sub
jl
xor
sbb
dec
push
xor
lret
scas
iret
clc
pop
shl
add
sbb
xor
popf
mov
test
inc
aaa
loopne
cld
pusha
fistl
in
sub
pop
add
adc
or
loope
and
ss
adc
jnp
push
call
dec
ret
into
mov
push
adc
shl
repnz
jg
aad
adc
jmp
pop
xchg
push
cwtl
add
hlt
mov
pop
push
xor
jp
shll
out
call
orl
pop
adc
mov
icebp
push
shl
pop
int3
lods
mov
rorl
xchg
sub
add
jl
test
fistps
addl
fdivr
cmpsl
cld
lock
mov
jbe
xor
sub
and
filds
sub
pop
or
dec
rcrl
adcb
dec
push
andb
or
mov
js
enter
jle
or
arpl
nop
aad
pop
cmp
out
mov
test
inc
cmp
lea
imul
mov
add
mov
sbb
rolb
inc
inc
pop
inc
mov
inc
inc
sub
mov
push
dec
inc
add
add
xchg
push
or
sub
rcrl
sbb
clc
stos
cmpb
mov
scas
sub
mov
addb
fsubs
fcoml
adc
in
jmp
sbb
mov
xor
xor
aam
adcb
dec
andl
cltd
or
pop
js
sbb
fsubrl
add
mov
adc
fdivs
mov
scas
sub
popa
sub
push
adc
lock
les
push
inc
mov
add
add
or
daa
mov
sahf
add
fistl
imull
jp
dec
push
mov
cmpl
rorl
js
scas
je
bound
cmp
adc
bound
add
insl
xchg
pop
inc
push
sbb
mov
jo
push
xor
pop
sbb
jp
and
adc
dec
mov
add
dec
add
arpl
js
inc
lea
cs
pop
aam
cwtl
mov
enter
inc
mov
push
sbb
mov
sbb
lcall
push
or
jo
les
push
mov
mov
fisubl
pop
jg
je
sub
int
dec
das
test
xchg
dec
dec
cwtl
lea
pusha
push
fwait
pop
mov
inc
jl
or
add
and
lea
adc
xchg
popa
add
jbe
ljmp
lea
mov
mov
push
pop
sbb
icebp
test
xchg
jge
pop
pusha
push
inc
dec
test
cld
jbe
push
cmp
adc
test
arpl
cmp
dec
or
sbb
cmpsl
pop
push
test
mov
or
adc
stos
mov
mov
fwait
sub
sub
pop
mov
dec
mov
jmp
das
inc
push
inc
cs
mov
add
ret
andl
mov
sub
adc
aam
pop
pop
push
add
or
add
adc
divb
call
inc
aas
mov
pushf
jne
push
or
lea
add
inc
daa
mov
lret
adc
pop
adc
mov
push
and
mov
and
inc
fbld
mov
outsb
cmp
push
pop
mov
es
inc
pushf
and
add
test
fldt
xchg
out
dec
test
mov
inc
cmp
fs
loop
add
sahf
leave
mov
jl
cmp
pop
movsb
dec
mov
hlt
adc
or
push
push
mov
sahf
and
push
iret
mov
xor
inc
push
stos
xchg
mov
cvttps2pi
cmp
push
push
or
rorl
movsl
pop
cmp
stos
push
mov
cmp
xor
and
sbbb
pusha
pop
lock
mov
lods
call
add
cmp
sarl
adc
icebp
pusha
pop
popa
loope
or
sbb
xor
dec
add
adc
loop
add
push
out
add
push
insb
loop
add
pop
clc
pop
mov
sub
cmp
push
mov
ja
lcall
add
or
rorl
xor
pop
inc
xchg
add
dec
ljmp
lret
mov
xchg
mov
movsb
push
aam
mull
adc
jp
or
pushf
xor
test
jbe
pop
add
iret
dec
push
mov
testl
add
jbe
adc
sbb
imul
cmp
dec
cltd
inc
xlat
inc
andl
inc
jge
in
cmpb
cmp
add
xor
push
pushf
cmpl
pop
push
jg
call
lea
sub
mov
test
leave
mov
pop
inc
jno
pop
ret
movsb
andb
sbb
filds
sti
add
mov
lds
dec
and
add
dec
arpl
cmc
push
bound
clc
xchg
add
movl
sbb
aad
inc
jge
mov
ds
insb
inc
cmp
xchg
jne
add
leave
adc
add
cwtl
or
pop
rcll
in
mov
adc
adc
bound
mov
mov
inc
mov
pop
cmp
fcomi
jle
push
xor
pop
ljmp
mov
andl
pop
add
pop
add
pop
les
inc
adc
ret
dec
call
clc
adc
mov
jle
or
in
insb
sahf
sbbb
shll
inc
cmp
movb
inc
mov
cltd
pop
cmp
rol
test
adc
sub
lds
inc
les
adc
icebp
adc
mov
xchg
dec
mov
cmc
stc
icebp
inc
inc
hlt
ret
sub
movsb
inc
mov
cmp
mov
add
push
adc
pop
mov
xchg
aad
fcompl
add
and
rcll
icebp
and
imul
fs
inc
sub
cmp
and
fadd
mov
push
addb
in
lods
push
mov
inc
mov
push
les
in
jl
pop
add
scas
jo
inc
cmp
movsb
data16
adc
out
pop
js
sub
add
loope
popf
inc
inc
cld
xlat
int3
aas
mov
int
lock
daa
add
sub
push
jge
cmp
ljmp
test
mov
arpl
std
inc
lock
jge
inc
mov
cmp
test
mov
mov
jnp
dec
add
int
sbb
sahf
xchg
add
shll
sub
or
addr16
iret
jle
stos
enter
pop
lock
shrl
push
mov
jno
sbb
dec
aad
adc
jp
ds
dec
xor
dec
inc
add
inc
out
or
adc
inc
push
dec
hlt
sub
mov
mov
pop
and
in
cmp
push
cmovg
and
sarb
push
jmp
push
and
jmp
loop
cmp
mov
mov
or
or
cld
adcb
and
and
push
pop
add
lds
adc
sbb
push
add
jo
clc
loop
or
xchg
aaa
jl
sub
pop
insb
sbb
add
inc
jle
pusha
fwait
jle
js
testb
mov
pop
shlb
inc
or
add
insb
lock
pop
mov
enter
push
stc
mov
aad
and
xchg
xchg
xor
stos
push
lds
sbb
adc
inc
jg
rolb
xchg
rcrb
pop
lods
add
lret
jecxz
add
sahf
sahf
push
out
fldl
xchg
addb
cmpsl
pusha
das
inc
pop
push
mov
inc
cld
jb,pn
push
out
push
test
push
sub
mov
sbb
cmp
cli
movsb
mov
mov
ljmp
mov
cmp
mov
add
jb
and
sbb
mov
dec
push
inc
stos
call
push
adcl
ret
sbb
arpl
dec
pop
mov
mov
push
js
lea
add
add
add
outsl
pushf
test
sub
sahf
add
bound
or
xchg
pop
inc
sub
xor
fisttpl
jmp
out
imul
add
xor
cmp
loop
xor
adc
int3
mov
cmp
mov
push
mov
sbb
mov
mov
shl
lahf
push
repnz
fcmovnb
and
sub
push
adc
stc
mov
icebp
mov
mov
sub
pop
jo
ret
push
lock
enter
push
xchg
adc
sbb
mov
rolb
mov
push
ds
jae
loopne
mov
jb
scas
mov
mov
mov
andl
sbbb
js
cltd
adc
maxps
mov
or
mov
fwait
shlb
xchg
adc
xchg
add
adc
sbb
pop
pop
jge
pop
jbe
jae
orl
sbb
lods
mov
arpl
mov
sbb
xchg
out
pop
add
mov
or
into
ds
inc
mov
lcall
add
call
cmp
loope
loopne
call
xchg
and
xchg
jno
mov
mov
test
add
xchg
test
scas
adc
dec
lock
add
loopne
sub
or
mov
js
jecxz
pop
mov
sub
adc
shlb
xchg
adc
jg,pn
aad
pusha
pop
xor
pop
xor
test
scas
call
ljmp
andl
shlb
add
add
jg
xor
xchg
mov
pop
xor
in
adc
loope
adc
in
mov
sub
push
mov
inc
inc
push
sbb
les
scas
adcb
ja
push
inc
adc
aaa
orb
adc
in
inc
je
lock
jg
fldl
sbb
inc
aaa
push
stos
sbb
into
xor
cmp
lock
sbb
xchg
adc
mov
test
push
movsl
adc
lea
push
fsubp
dec
xchg
out
mov
sti
leave
jge
jno
fsubrs
sbb
sub
add
xchg
adc
loope
cld
inc
popf
cmpsb
pop
push
je
mov
mov
adc
cmp
daa
ret
ret
pop
or
pop
jl
andb
jg
sarl
cmp
ljmp
insb
call
mov
nop
sbb
and
leave
imul
fistps
jp
jecxz
mov
pop
push
fidivrl
jno
mov
sbb
mov
lds
pop
and
and
or
daa
rcrb
pop
andb
adc
adc
jge
loope
add
add
pop
add
inc
add
or
push
push
adc
add
and
adc
sub
sbb
add
xor
mov
xorb
inc
shr
cwtl
adc
iret
cmp
shll
adc
sbb
outsl
dec
adc
push
sub
rolb
imul
push
mov
pop
mov
mov
lea
das
je
add
sahf
ss
mov
sub
je
mov
jecxz
inc
daa
cmp
mov
rol
fadd
mov
push
pusha
les
aam
test
daa
loopne
jne
mov
push
inc
ljmp
jecxz
mov
mov
add
xchg
push
loope
aaa
repz
and
pop
and
es
inc
lcall
adc
push
push
xchg
and
orl
mov
test
inc
or
test
mov
pop
mov
jl
mov
add
mov
push
mov
mov
jns
mov
pushf
movsb
cmp
out
sbb
jnp
mov
sbb
testl
les
shrd
daa
sub
xor
mov
add
or
xchg
mov
inc
or
vpaddd
mov
cmp
shrb
rolb
or
jns
adc
sub
and
xchg
push
int
int
pop
clc
and
mov
add
lcall
clc
push
pop
push
xchg
push
mov
mov
jmp
inc
mov
adc
and
push
mov
mov
test
ljmp
inc
pusha
sbb
sbb
xor
mov
add
cmp
mov
out
pusha
adc
bound
push
lock
sbb
icebp
mov
mov
adc
cmp
mov
or
mov
pusha
iret
fidivrs
sahf
inc
push
jne
jne
fstpt
sub
cld
xor
sbb
sahf
add
cmp
imulb
add
adc
adc
pusha
jge
insb
push
push
clc
push
inc
flds
sahf
fistpll
arpl
sbb
inc
sbb
add
jmp
xchg
xor
daa
pop
mov
sbb
dec
loop
ficompl
repnz
lds
cmp
sub
mov
aad
lods
call
pusha
inc
xor
mov
outsl
mov
bound
popf
jle
mov
cmp
push
iret
mov
lcall
inc
pop
mov
fbld
ss
xor
jns
push
sub
inc
lret
pop
fdiv
clc
sahf
jne
or
jle
pop
mov
add
addl
xchg
in
or
sub
cmpl
cmpsb
inc
lds
push
or
sub
and
adc
jmp
or
ror
push
mov
outsb
lea
push
sbb
mov
ds
rol
mov
xor
subl
mov
orl
push
dec
push
rorb
and
mov
adc
lock
lock
push
fimull
xor
stos
rcrb
inc
mov
adc
add
lock
cmpl
inc
test
add
push
push
fistl
xchg
or
jle
shrb
xchg
pop
jmp
jge
mov
daa
addb
lods
cmp
or
add
inc
out
xor
aad
mov
sub
je
hlt
cmc
aam
popf
push
or
push
enter
adc
nop
repz
xor
sbb
pushl
jbe
rolb
inc
ficomps
leave
add
push
js
xor
sbb
jl
mov
pusha
xchg
cmp
adc
or
xchg
nop
mov
shll
push
adcl
cmp
sub
and
mov
sbb
add
clc
add
cmp
sahf
test
and
add
pop
inc
adc
sbb
mov
lea
inc
or
cmp
mov
or
insl
cmp
add
shrl
lret
xchg
inc
adc
mov
lea
cld
pop
clc
inc
movsb
or
sub
push
pop
aam
lds
and
mov
js
add
outsl
add
daa
xor
add
aad
adc
cs
mov
test
in
adc
mov
sbbb
pushf
fadd
inc
rolb
mov
mov
sbb
out
xchg
mov
lahf
shll
add
or
dec
mov
mov
dec
push
clc
or
push
cmp
roll
and
adc
jo
sbb
sti
add
subb
jnp
hlt
pushf
je
push
lcall
call
pop
pop
add
mov
or
ret
inc
push
mov
les
rcll
andb
out
rolb
or
add
add
mov
cmp
add
fdivr
jb
push
and
sbb
stos
mov
movsb
xor
or
push
jbe
int3
js
mov
in
test
sub
jp
inc
loop
pop
push
insb
inc
adc
or
mov
sub
test
adc
inc
jecxz
fwait
mov
adc
jle
lret
mov
push
mov
add
mov
cmpsb
cmp
jno
xor
rorb
jle
pop
sbb
inc
testl
sub
inc
mov
lds
aad
loopne
andb
mov
fiaddl
sub
inc
push
mov
add
cli
icebp
sbb
ljmp
bound
cmp
in
push
sbb
aad
add
in
mov
orl
fldt
inc
aad
push
adc
dec
adc
adc
xchg
jae
mov
jae
mov
pop
cld
ret
push
mov
inc
jo
ret
ds
push
or
mov
repz
out
addb
adc
addl
mov
and
xor
roll
mov
ljmp
and
xor
loopne
xor
mov
jo
fwait
imul
clc
sbb
daa
mov
adc
mov
xor
test
lahf
pop
sti
sbb
xchg
test
inc
in
dec
std
data16
xorb
dec
cmp
add
sub
imulb
bound
pop
stos
lea
addb
mov
subb
mov
aad
pop
in
pop
pushf
push
adc
into
jle
popf
test
or
movl
adc
sbb
out
and
jns
pop
push
add
insb
cmp
jp
pop
test
aad
mov
dec
cltd
push
pushf
push
mov
sbb
js
mov
pop
lock
add
dec
or
jnp
adc
add
inc
jo
xor
inc
pop
pop
jno
sub
aas
es
sbb
daa
mov
or
js
dec
mov
rol
imul
cltd
dec
lahf
hlt
push
sbb
test
mov
loope
sub
mov
aaa
xor
scas
jp
in
push
mov
sbb
push
mov
mov
mov
ret
ljmp
inc
fadds
loope
mov
mov
test
js
jo
add
aaa
clc
push
mov
and
daa
mov
cmpsb
mov
cmp
fwait
subb
fidivl
fisttpll
inc
add
adc
or
data16
or
mov
sbb
or
mov
int
clc
and
addb
flds
push
std
adc
xor
pusha
popa
jo
nop
aaa
xchg
and
in
mov
mov
mov
mov
dec
push
int3
addr16
mov
xchg
jbe
imul
pusha
add
adc
adc
inc
push
ror
les
sbb
test
jle
inc
jne
rcll
rorb
sbb
mov
in
lea
addb
js
jl
adc
mov
xchg
adc
sbbb
mov
in
mov
lds
push
enter
adc
cmp
mov
pop
pop
and
popl
push
push
nop
add
stos
mov
push
cmp
pop
or
aam
in
fidivl
ret
setne
pop
xchg
jno
das
and
jae
and
aad
jo
lds
cmpsl
mov
sbb
int
xlat
xchg
mov
daa
mov
sbbb
roll
call
fs
jl
or
mov
add
addr16
je
push
popa
fistpl
mov
push
add
mov
outsl
mov
jecxz
inc
or
jl
jno
outsl
pop
push
aam
nop
cmp
int
cmpsb
hlt
adc
inc
cmpsl
inc
mov
pop
inc
and
xchg
fsub
movsb
jbe
hlt
fucom
stos
mov
jp
cli
and
lods
mov
adcb
les
inc
std
call
xor
andb
adc
adc
xchg
and
fstpl
dec
pop
ret
inc
push
arpl
insl
adc
pop
stos
pop
gs
test
and
cwtl
dec
fisubrl
adc
int
daa
push
pusha
andb
inc
sub
add
push
imul
push
mov
shl
dec
jge
jecxz
icebp
dec
sbb
les
sahf
push
rclb
jbe
push
xchg
ret
inc
shlb
or
aam
xchg
and
inc
lahf
imulb
js
push
or
push
and
adc
cmp
hlt
filds
inc
and
leave
lret
mov
test
mov
mov
sub
ds
jnp
mov
sub
mov
sbb
jb
icebp
adc
ja
mov
xorb
ja
mov
in
jno
mov
and
stc
cmpsb
pop
aad
mov
adcl
xchg
adc
in
sub
or
arpl
mov
mov
mov
cmp
and
in
and
push
mov
mov
adcb
cmpsl
mov
xor
cmpsb
cmp
mov
mov
cwtl
pop
loope
lea
jnp
mov
movsb
sbb
fisttpl
adc
add
loop
adc
push
gs
add
ret
mov
or
sub
stos
inc
adc
out
cwtl
push
and
add
sarl
insb
imul
inc
mov
roll
dec
add
push
loopne
push
mov
cmp
repnz
add
push
rol
je
jmp
cmp
ffreep
aaa
and
pop
add
add
sahf
mov
in
orb
jnp
lea
adc
out
add
daa
insl
xlat
outsl
mov
push
dec
jb
mov
lock
push
or
icebp
mov
mov
rolb
sbb
lea
stos
mov
and
movsb
and
mov
mov
adc
xlat
push
add
movsb
call
push
ljmp
and
mov
adc
adc
movb
sbb
in
ret
mov
or
clc
sbb
cmp
pop
mov
add
les
adc
test
cmp
std
xorl
pop
mov
subb
push
adc
clc
mov
sbb
push
mov
iret
pop
fs
stos
or
mov
jbe
dec
neg
sbb
and
inc
nop
loop
xlat
pop
mov
push
cmpb
aad
inc
mov
inc
hlt
push
fdivl
push
push
dec
fs
mov
xor
insb
addl
cmc
addl
push
aam
push
jp
xchg
cmp
mov
arpl
sub
or
pop
rorb
rorb
fadds
lods
sub
add
mul
mov
xor
mov
aaa
mov
lret
fidivrl
push
inc
sbbb
inc
pop
andb
mov
das
pop
jae
stos
aad
js
adc
fdivs
into
mov
rolb
sahf
bound
les
shll
mov
and
mov
push
xor
pop
adc
mov
push
pop
mov
call
push
xchg
push
test
add
scas
cmc
test
adc
rorl
xchg
cmp
mov
xor
inc
sbb
add
mov
loop
aad
xor
fisubs
sub
test
inc
mov
pop
jl
xchg
adc
mov
test
dec
jl
ficoms
adc
scas
fisubs
sbb
ds
xchg
mov
add
movsb
jns
scas
sub
pop
cld
add
loop
sbb
iret
hlt
sub
js
mov
mov
sub
out
sub
bound
push
mov
daa
push
pop
shll
test
mov
lret
inc
movl
pop
outsb
mov
and
dec
idivb
loop
popa
outsb
mov
add
sub
dec
push
push
xor
xchg
add
or
add
mov
and
test
push
and
mov
xlat
adcl
add
inc
lret
xor
pop
loopne
cmp
sub
jp
adc
fdivrl
mov
adc
xchg
xchg
addr16
jb
add
push
jno
cs
inc
mov
insl
push
push
ret
and
mov
into
cmc
fisttps
xlat
int
push
jo
lock
push
sti
and
jae
rclb
lds
cld
scas
mov
sub
popf
loop
pop
mov
xor
push
pushf
pop
add
push
or
icebp
xlat
xchg
or
jmp
mov
or
hlt
leave
rcr
sub
pop
xchg
inc
test
xorb
pop
sub
popf
xchg
adc
add
test
sbb
mov
les
sbb
mov
push
shl
pop
jne
add
push
push
cld
aas
dec
dec
ja
add
leave
lea
mov
sbb
js
shrb
add
lds
test
in
xor
mov
sbbb
or
lock
pusha
sbb
xchg
cs
mov
insb
xor
jo
cmp
jae
and
xchg
int
rcll
mov
pop
nop
mov
mov
ds
mov
cmpsb
stos
bound
push
ds
sti
and
push
loop
cmp
aas
mov
popa
cmp
push
test
push
aam
rolb
add
mov
loop
filds
inc
adc
push
mov
dec
xor
and
imul
pop
mov
xchg
gs
inc
mov
outsl
jb
cmc
jbe
sub
and
test
loop
or
push
mov
stos
addb
stc
sbb
push
mov
and
mov
cld
std
sub
ljmp
mov
les
inc
out
inc
insb
adc
call
sub
cwtl
adc
mov
sub
incl
addb
or
add
jo
sbb
xor
jns
fwait
xchg
and
adc
mov
iret
stos
enter
fisubs
fidivrs
or
mov
fmulp
mov
cmpb
lods
and
inc
imul
mov
xor
sbb
call
cmp
cmpb
push
sarl
out
and
pop
insl
lods
popa
imul
or
xchg
cmp
push
push
test
mov
pop
xlat
mov
pop
std
push
mov
ret
ja
mov
pop
sub
movl
movl
cmpsl
fucomp
mov
cwtl
xchg
addl
push
dec
add
xor
adc
call
add
pop
cmpsl
push
xorb
inc
xchg
insb
sbb
mov
imul
lcall
cmp
mov
sbb
les
push
cmpsb
mov
insb
adc
loopne
pop
mov
add
test
add
sub
push
shrl
adc
push
push
cmp
cmp
lcall
mov
jbe
inc
pop
inc
orl
cltd
insb
rcll
push
push
ret
rol
and
outsb
mov
into
ljmp
cmp
sbb
or
repnz
dec
test
fisttpl
add
xchg
sbb
frstor
pushf
hlt
push
insl
sub
stos
addr16
orl
bound
push
daa
cmp
test
pushf
adc
sub
imul
test
rclb
in
sub
pop
shlb
adc
cmp
fcompl
and
adc
rorl
push
push
xor
or
sub
jecxz
or
lcall
aad
test
cwtl
and
mov
push
rclb
mov
icebp
push
or
mov
mov
addr16
lock
test
stos
jae
pop
lds
vmulss
and
in
rolb
pop
xor
xor
push
cmp
inc
cmc
rorl
fiaddl
adc
pusha
lret
mov
stos
push
andl
push
or
arpl
push
inc
int
xchg
xchg
roll
adc
cmpsb
pop
jge
mov
test
mov
mov
push
inc
mov
cmp
test
sbb
mov
sub
push
or
ds
imul
gs
push
mov
stc
lds
shll
movsb
xorl
jge
xchg
mov
cmp
int3
inc
shr
or
adc
push
daa
adc
lods
add
jne
testl
push
inc
int
shl
add
loop
pop
push
mov
and
xor
pop
jmp
dec
lahf
adc
sbb
cld
inc
lahf
sub
sbb
in
into
mov
rorb
inc
iret
or
sarl
sub
or
sbb
or
shll
cmp
mov
lock
inc
pop
sub
adc
stos
in
push
push
clc
pop
aam
xchg
rolb
lock
or
jnp
xchg
jp
mov
sub
xor
push
mov
cmp
add
add
xor
movsl
incb
outsl
adc
mov
arpl
andb
dec
xlat
in
fimull
js
cmp
add
xchg
mov
or
psubusb
pop
inc
adc
mov
push
cmpl
enter
inc
rolb
push
push
add
cmpb
dec
add
in
mov
sbb
mov
adc
pop
shll
je
loopne
sahf
cmp
aaa
sti
loop
arpl
js
push
sub
mov
test
add
mov
ss
mov
cmp
push
rcrl
adc
sahf
loop
mov
and
pop
fistps
aaa
mov
cmpsb
and
push
shlb
loopne
adc
inc
pop
cld
mov
cs
xor
inc
adc
push
imull
push
mov
call
jl
test
pop
mov
add
adc
sbb
xor
sbb
fdivs
fdivs
inc
lock
lahf
push
jne
mov
sub
cmpsl
push
mov
or
push
push
insb
rolb
or
mov
cmc
and
int
aaa
pop
js
ret
push
jecxz
out
jns
sub
mov
sbbb
loop
adcb
jnp
jg
loope
mov
loop
and
mov
jg
enter
hlt
loopne
mov
cmp
insl
xchg
pop
daa
cli
jo
insb
scas
mov
int
push
fldcw
lock
add
ret
add
and
fistps
clc
pop
dec
push
sbb
mov
mov
test
in
les
mov
stos
xor
test
iret
mov
hlt
mov
mov
cmp
cld
sub
sub
push
data16
faddl
shlb
sbb
fcom
xor
pop
push
cld
mov
mov
cmc
aaa
or
leave
cmpb
push
fmull
pop
mov
popa
add
and
or
and
inc
mov
rorl
loopne
add
xchg
cmp
inc
ret
mov
xchg
push
mov
jg
mov
jmp
out
and
adc
clc
cmpsl
fildll
add
add
mov
cmp
clc
push
jp
inc
incl
dec
ficoml
mov
sbb
push
push
inc
mov
adc
dec
lea
mov
and
rcrb
jae
sahf
adc
xchg
cmp
fldenv
or
mov
push
cmpsl
fisttpll
or
push
inc
add
repnz
outsb
subl
xor
push
bound
int3
mov
inc
rorl
add
xchg
mov
sub
add
lods
or
add
add
mov
loopne
mov
adc
mov
rcr
or
xor
mov
rorl
es
xlat
mov
inc
add
mov
lret
fcoms
dec
bound
test
mov
scas
add
adc
cmp
in
ret
xchg
out
cwtl
sbb
xchg
cmp
rorl
jb
int3
mov
mov
int3
add
fcmovb
fldl
inc
iret
pop
push
in
dec
stos
aam
mov
pop
jp
in
fiaddl
movw
sbb
ds
std
jp
pop
ds
xor
or
sub
push
xlat
xlat
cmpsl
dec
mov
pop
rclb
aad
in
inc
push
inc
stos
repnz
mov
pop
shl
int
add
xor
hlt
mov
sub
int
xor
push
lret
in
mov
outsb
outsl
in
add
movsb
mov
in
inc
push
and
or
or
test
add
cmpsb
addr16
and
push
or
push
mov
mov
or
roll
and
and
scas
sub
je
out
pop
hlt
and
adc
add
nop
mov
decl
mov
mov
sbb
nop
push
jp
pop
mov
cmp
add
in
push
adc
call
cmpsb
push
enter
add
and
mov
add
shr
lret
add
xchg
and
push
mov
or
and
shll
mov
test
and
inc
repnz
xorb
push
push
sub
cmp
cwtl
inc
arpl
adc
jnp
mov
and
into
xor
inc
cmpsl
lods
cmp
add
push
dec
shlb
ret
mov
movb
imul
push
inc
addl
in
sub
adc
dec
ss
test
test
pop
movsb
inc
xor
sub
mov
loopne
cli
cmp
push
push
adc
cmc
shlb
xor
in
or
and
pop
xchg
sub
mov
pop
mov
adc
sbbb
in
lea
fadds
pop
stc
push
xchg
shrl
xor
pop
dec
cmp
int
inc
pop
orb
les
push
daa
aaa
test
inc
mov
lret
lds
xchg
dec
inc
aaa
in
int3
add
in
movsl
or
xchg
add
push
push
inc
xor
scas
sbbb
and
jge
shlb
stc
push
and
icebp
inc
jg
mov
push
test
push
lret
pop
loopne
sub
scas
push
pop
sub
pop
clc
add
inc
sub
and
push
dec
mov
test
imul
add
sbbb
push
fdivs
sub
push
jnp
xor
rclb
or
mov
cmpsl
cs
cwtl
and
inc
lods
fbstp
inc
mov
call
lcall
test
adc
adc
and
mov
inc
xor
jbe
adc
and
iret
sub
lods
xor
add
popa
rclb
shrl
dec
pop
sub
jp
loop
add
incb
jo
and
iret
in
inc
pop
inc
lret
or
sub
vpermd
roll
jno
fidivrl
cmp
subl
lock
dec
call
arpl
bound
inc
push
push
xchg
in
pop
pop
jne
arpl
xor
push
test
xor
xor
cmc
pop
mov
cmp
xchg
sahf
mov
inc
cmp
icebp
les
jge
xorb
cmp
into
cmp
rcll
lahf
cmp
push
test
movsb
sub
pop
roll
in
add
jns
push
aaa
mov
pop
xchg
arpl
pop
jecxz
xor
mov
cli
jl
mov
out
jae
clc
scas
mov
hlt
inc
adc
js
adc
add
aam
add
mov
jns
inc
icebp
les
or
loop
pop
add
and
aad
push
pop
in
cmpsl
lcall
dec
js
sbb
mov
mov
mov
lea
mov
sub
cmp
loopne
xor
mov
and
xchg
les
and
fs
orb
sbb
pop
xchg
outsb
cmc
and
lret
call
sbb
inc
mov
and
push
jno
dec
mov
aam
pop
push
adc
inc
push
out
int
or
and
icebp
adc
cmpsl
cwtl
xchg
aaa
lahf
mov
iret
xor
or
int3
adc
ret
mov
xor
pop
push
adc
ret
inc
fistl
sbb
mov
lcall
cmp
add
mov
pop
sub
jmp
or
orb
push
popf
add
push
call
xchg
out
repz
inc
jo
add
fnstenv
test
xor
cmp
mov
shr
xor
add
orl
cmpl
mov
repnz
cmpsl
popf
sub
mov
mov
inc
and
push
add
mov
jbe
sub
mov
inc
arpl
inc
or
dec
decl
rcrb
mov
xchg
loopne
sbb
dec
jge
fsubl
test
std
dec
sbb
lahf
popf
stc
cmp
push
inc
adcb
jp
cmpsl
mov
sub
push
cwtl
mov
and
insl
adc
add
pop
xchg
mov
lods
ds
sahf
in
rorl
lock
mov
add
sarb
dec
and
daa
push
iret
inc
iret
add
test
sbb
adc
ss
mov
loop
xor
outsl
inc
hlt
adc
mov
gs
sub
jne
clc
push
mov
mov
fs
mov
inc
push
rorb
xchg
test
cwtl
pop
and
add
pop
mov
mov
push
adc
pushf
mov
pop
jp
or
outsl
add
mov
push
dec
add
add
add
in
jle
stc
imul
mov
pop
jecxz
jne
xor
in
sub
jne
add
sbb
xor
push
dec
add
add
xchg
and
in
ja
or
orl
add
jae
sub
mov
mov
mov
aas
sbb
sbb
test
mov
xor
aaa
les
add
add
fisttpll
push
add
or
aad
cmp
js
imul
dec
push
fldl
ret
push
mov
out
lods
mov
mov
or
andb
or
adc
test
or
test
imul
jne
jmp
out
jmp
jnp
add
add
sbb
or
lcall
cmp
jg
bound
xor
jno
cmp
jb
mov
shr
std
test
je
call
push
sub
jmp
push
mov
and
sub
inc
inc
dec
sub
mov
mov
jne
sti
mov
es
add
jne
inc
mov
rorb
jbe
or
dec
or
fsub
xorb
xor
mov
cmc
push
and
push
fcomp
testb
es
and
lds
or
loope
ret
ret
mov
add
add
add
enter
jo
lods
add
test
mov
mov
mov
test
dec
filds
stos
dec
inc
push
jl
and
pusha
pop
adc
add
push
fdivs
xchg
xchg
add
lcall
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
decl
inc
gs
insb
popa
jae
dec
bound
arpl
imul
insl
scas
insb
add
xor
ljmp
xorb
inc
inc
pop
inc
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
lcall
pop
popa
bound
gs
imul
jo
jb
jne
ja
fdivr
js
jp
xor
xor
sub
inc
add
pop
xlat
je
push
ud2
pop
lods
pop
sbb
jne
mov
pop
imul
aas
ud1
outsl
jb
pop
mov
fidivrl
mov
or
jb
xchg
pop
es
jmp
pop
lods
jb
push
adc
inc
js
outsb
mov
mov
in
stc
jg,pt
outsb
cmp
add
sbb
int
or
push
and
mov
fldt
mov
andb
mov
or
jbe
adc
jne
jmp
push
inc
sbb
or
sarl
in
inc
clflush
adc
xchg
rcll
push
and
and
adc
mov
ljmp
adc
sbb
push
jnp
jnp
push
je
insb
sbb
add
jne
or
mov
adc
push
inc
imul
scas
fisttpl
sbb
daa
dec
cmp
pop
mov
mov
mov
or
stc
push
pusha
dec
sbb
mov
outsl
outsb
jae
insb
gs
jbe
insl
fidivrl
cs
cmp
je
jmp
cmp
nop
in
push
sub
test
dec
or
dec
fsts
in
cmp
pop
jmp
hlt
or
or
test
out
mov
or
jne
adc
mov
mov
testl
in
mov
xchg
repz
add
cmp
lea
clts
xor
es
xor
inc
inc
xor
sub
pushl
arpl
sub
xor
xor
inc
inc
out
dec
fsubrs
lock
pop
inc
icebp
push
sbb
mov
xor
call
xchg
dec
mov
lahf
mov
lock
cmpsl
sbb
jle
sbb
jl
test
insl
fisubs
inc
push
mov
test
sub
and
je
roll
orl
imul
xor
sbb
or
cld
cmp
adc
mov
sbb
cmp
inc
pop
es
push
xlat
inc
in
test
out
and
or
xchg
mov
scas
cli
lods
or
mov
push
inc
push
pop
ss
daa
adc
mov
gs
sbb
inc
cld
scas
iret
ret
cmp
cmp
jmp
imul
adc
test
or
scas
cmc
dec
test
fstps
jbe
adc
pop
push
pop
xchg
add
push
add
add
adc
outsb
or
fcmovb
pop
ret
loopne
pop
push
pop
dec
hlt
je
imulb
ja
fs
pop
into
sub
adc
or
dec
add
xchg
and
sub
pop
shrl
lcall
fldl
leave
mov
xor
enter
addb
test
dec
jns
daa
jns
dec
sbb
push
inc
pop
cli
aaa
mov
outsl
cmp
pop
push
imul
dec
outsl
test
ret
outsb
je
jmp
outsb
push
pop
gs
push
negb
sbb
mov
sbb
dec
out
cmc
dec
and
outsb
imul
cs
sbb
push
in
jle
cmpsl
repz
sub
and
xor
sbb
incl
dec
outsl
arpl
xor
mov
add
adc
bound
xor
inc
xor
loope
add
lock
nop
and
andb
push
loope
ss
pop
jmp
int
loop
mov
fdivl
xor
sahf
lods
jg
jo
ja
add
shll
jne
xlat
in
xchg
fmuls
sub
pop
xchg
jo
rcrb
sbb
ja
cmp
ja
enter
jbe
mov
jmp
jnp
cmp
xor
inc
sub
decb
sub
xor
pop
inc
xor
inc
inc
inc
cmp
add
xor
inc
inc
js
jne
popa
and
insl
push
push
addr16
dec
pop
popa
or
and
sbb
jg
addr16
es
sbb
dec
or
sbb
fndisi(8087
add
je
mov
inc
subl
and
sbb
mov
add
jns
mov
mov
sub
xchg
sub
adc
sub
mull
add
das
fidivrl
xor
cmpb
xor
pop
xor
idivb
dec
cmp
xor
dec
mov
nop
sbb
inc
testl
gs
adc
cmpsb
add
test
ja
jl
popa
inc
xor
pop
dec
outsb
xlat
mov
sub
sbb
sahf
cmp
inc
add
xor
push
push
jbe
jmp
jle
icebp
jnp
pop
cli
cmp
data16
xor
xor
push
out
scas
and
scas
xor
push
push
mov
push
daa
dec
das
mov
outsb
xlat
jne
push
fs
sub
mov
pop
inc
xchg
rcll
mov
or
pusha
je
mov
sahf
clc
outsl
adc
pop
push
arpl
jo
push
jnp
call
gs
jae
popaw
sbb
inc
mov
fs
inc
push
js
movsl
mov
frstor
das
data16
jne
push
xlat
xor
push
xchg
mov
pop
xlat
jne
jo
mov
jb
movsl
lea
cs
rorl
mov
insb
inc
push
loop
in
sub
push
cmp
push
xor
fdivl
loop
mov
fs
std
xor
mov
je
xchg
mov
je
pop
mov
sbb
aaa
adc
and
sbb
fs
pop
nop
cmp
pop
nop
mov
fldl
loopne
push
pop
mov
and
push
outsb
add
push
inc
and
outsb
outsb
and
and
add
inc
sbb
orl
outsl
or
xchg
or
jl,pn
and
xor
iret
mov
fistpll
repnz
out
jg
cwtl
inc
stos
out
insl
push
out
jae
in
mov
pop
push
cld
out
jge
mov
out
jl
fstps
push
movsl
out
jno
subb
outsl
cmp
loope
loop
jnp
mov
mov
and
add
sbb
add
nop
mov
testb
add
hlt
pusha
pop
cmp
adc
add
add
pop
sahf
in
loopne
push
pusha
push
add
or
or
pop
or
pop
xor
jo
shlb
jnp
add
out
loopne
xor
lret
sub
inc
daa
inc
lret
in
xor
shlb
inc
daa
adc
enter
add
aas
xorl
pop
and
add
xchg
pop
andl
call
bound
es
adc
sti
in
cmc
sbb
es
sbb
xor
adc
neg
push
sub
jo
pusha
sub
mov
lock
test
aam
jo
adc
mov
sub
xchg
imul
out
decl
fisubrl
les
push
push
jae
jg
mov
mov
test
ljmp
push
roll
or
and
clc
sub
jno
push
sti
fucomp
pop
add
add
pop
pop
pop
and
cli
movsl
jg
nop
jmp
fidivrl
or
dec
push
incl
inc
cwtl
mov
fucomip
push
xor
lds
aad
icebp
aas
inc
scas
inc
jo
fstp
mov
ljmp
pop
adc
cmp
lret
outsl
daa
mov
and
notb
jbe
push
sbb
push
jo
mov
sub
ljmp
pushl
call
cmp
and
push
pop
sbb
adc
sub
sbb
adc
popa
out
jnp
cmp
add
or
xchg
pop
pop
decl
and
inc
xchg
jge
pop
sub
call
test
ficomps
stos
in
shlb
leave
add
nop
jg
and
lods
fisttps
in
push
jno
fdivs
xchg
pop
fcoms
mov
lret
stos
mov
std
jmp
ret
mov
xchg
jecxz
insb
xchg
jo
popl
fldcw
pop
jo
push
clc
mov
pop
jle
leave
ja
push
pop
mov
call
clc
add
push
insl
sbb
int
ds
push
inc
popa
or
ljmp
dec
fisubl
out
test
stos
pop
inc
inc
aas
leave
push
mov
cwtl
mov
mov
mov
aas
sub
decb
push
and
pushl
mov
sbb
mov
bound
mov
adc
xchg
inc
pop
mov
jmp
adc
dec
pop
add
ljmp
and
inc
mov
inc
inc
push
mov
cltd
or
pop
je
mov
aas
push
test
add
adc
sub
mov
test
mov
and
mov
xor
movsb
mov
imul
pop
pop
jmp
or
and
mov
or
jle
jmp
lds
mov
mov
in
icebp
jmp
add
ret
movb
pop
ret
push
push
sub
mov
mov
mov
scas
adc
and
cmp
and
jne
clc
lahf
mov
out
or
adc
jecxz
or
fists
mov
cs
sbb
call
mov
adc
icebp
jne
test
sbb
dec
push
jmp
incb
ja
fldl
push
daa
and
add
je
pop
popa
test
adc
and
or
decl
jns
jle
sub
dec
fsubs
mov
out
or
or
pop
adc
push
mov
decl
repnz
nop
add
push
jae
or
dec
xor
mov
add
cld
jb
cltd
pop
insl
fidivl
mov
incl
adc
adc
adc
or
es
je
leave
bound
inc
or
adc
hlt
fldenv
das
add
shlb
inc
mov
xlat
js
ficompl
adc
pop
jecxz
fmuls
lcall
ljmp
mov
push
pop
pop
adc
andl
fdivl
and
movl
jg
fucomi
ret
rclb
je
clc
and
adc
push
ret
insl
idiv
pop
dec
into
test
jne
sahf
call
jl
addl
or
incl
adc
mov
push
or
ret
mov
scas
jmp
incl
add
xchg
pusha
fdiv
lock
jle
jne
sbb
call
sbb
bound
jbe
inc
fwait
stc
add
mov
mov
out
pusha
or
clc
fsubl
shlb
das
adc
movsl
mov
shll
cmc
decl
mov
mov
mov
fsubs
insl
mov
and
dec
or
push
sbb
or
jne
jo
jne
inc
ljmp
and
fidivrs
or
or
sbb
adc
into
sub
and
sub
pop
cltd
notb
jmp
bound
fdivl
push
add
lock
mov
or
cwtl
fwait
sub
ljmp
jl
inc
jnp
stos
stos
cld
les
ret
sub
adc
jge
mov
outsl
add
subb
loope
adc
pop
outsb
shlb
decl
adc
sbb
pusha
lcall
sbb
jno
jo
jb
jle
pop
pop
jbe
mov
adc
xorb
jbe
insl
push
push
cli
jg
jo
xor
adc
mov
dec
xor
adc
cmp
and
push
insb
lret
or
jl
dec
call
or
dec
sbb
xchg
or
adc
inc
or
or
mov
xchg
and
sbb
adc
decl
jmp
cmp
push
jl
aaa
fbstp
xchg
idiv
mov
pop
cmp
sbb
jg
sti
jg
and
and
js
outsb
mov
jg
je
push
xor
push
push
stos
incl
mov
fwait
jecxz
and
jne
mov
ret
mov
mov
fisttpl
in
incl
inc
sbb
ljmp
xchg
push
ljmp
xchg
out
roll
ljmp
jl
push
adc
sub
jne
mov
add
pop
fnsave
add
push
xor
pop
out
jno
mov
call
mov
inc
loopne
mov
insb
mov
adc
adc
push
lret
sbb
nop/reserved
fbstp
ja
add
cmp
sti
ja
mov
insb
add
je
jl
pop
cli
aaa
push
call
sbb
loop
adc
call
ds
or
sub
sahf
test
in
jmp
cli
jg
call
ret
xor
repz
cmp
popa
add
push
rorb
xorb
js
outsb
dec
push
pop
andl
push
loope
je
mov
outsb
jle
je
lods
mov
pop
push
outsb
mov
jns
js
notb
out
xchg
in
or
adc
add
std
fistpl
and
cmp
cmp
clc
jne
sbb
jg
cmpl
xorps
imul
fdivl
push
out
andb
or
mov
pusha
movsl
mov
push
cmp
cmp
cmp
jne
mov
xchg
add
inc
pop
mov
pop
cli
jg
addr16
rcrb
sbb
je
adc
mov
cld
xor
lcall
adc
pop
adc
loope
ret
flds
ja
and
in
mov
popf
pop
loope
dec
loop
outsl
or
jmp
std
jne
cmp
sbb
mov
cli
xchg
mov
outsl
lods
xor
movsl
js
xor
xchg
out
fdivr
aaa
push
les
je
repnz
mov
ljmp
mov
lds
jecxz
cmp
iret
call
daa
mov
enter
lds
or
fisubrs
adc
jmp
push
push
ljmp
push
add
outsl
adc
cmp
jmp
pop
bound
pop
xor
fistps
loopne
fldt
mov
mov
fcoml
sub
cmp
fcom
scas
rorb
or
adc
imul
mov
mov
and
fimull
jnp
push
or
jle
xchg
rcrl
xor
clc
jns
mov
les
dec
lea
mov
mov
and
add
pop
call
jne
add
sub
sar
pushl
ja
xchg
fisttpll
jmp
xlat
rolb
pop
add
jg
pushl
test
add
sbb
rorb
add
ror
push
in
int3
sub
lea
inc
push
ret
cltd
mov
or
cmp
mov
mov
cld
pop
inc
mov
pop
mov
and
push
cmpsl
cld
sub
movsl
pushl
pop
loopne
lcall
subl
fcomps
push
fdivs
mov
jmp
test
sbb
adc
into
push
push
mov
roll
sahf
or
mov
xchg
or
xor
aad
decl
fnstcw
mov
rcr
ljmp
jnp
inc
shlb
negb
or
add
insl
lea
arpl
cld
jecxz
mov
pushl
add
pop
stc
movsl
or
jle
sub
ss
push
jl
das
lock
pop
pop
fcmovnbe
enter
adc
je
imul
in
push
mov
je
mul
movsl
lods
roll
and
push
jne
lea
packsswb
outsb
aad
xchg
movsb
scas
insl
scas
in
in
and
sub
aaa
sbb
or
fs
sbb
pushl
lock
dec
mov
lods
mov
pop
jmp
cli
jg
xchg
leave
xchg
arpl
push
cmc
cli
jecxz
roll
push
push
scas
xchg
jecxz,pt
std
pushl
mov
les
cltd
sbb
cli
cltd
aaa
jmp
xor
lret
xor
sub
and
pushl
xchg
mov
les
add
xchg
inc
dec
push
icebp
jg
jbe
data16
mov
lock
cld
decl
sub
xchg
in
push
fdiv
fstpt
shrl
or
decl
inc
movsl
div
cmp
fistpl
call
hlt
js
mov
jne
inc
sub
fnsave
scas
jg
test
xchg
xchg
clc
inc
scas
mov
xchg
adc
mov
lea
push
loope
cmp
and
push
cmp
cmp
aaa
stos
sub
dec
aas
pop
mov
sarb
call
jg
jns
push
daa
or
inc
sar
arpl
sbb
outsb
sbb
push
lcall
mov
loop
sub
mov
mov
or
cld
jg
xchg
xor
jb
mov
fsubl
xlat
push
and
mov
or
pop
ss
icebp
mov
push
or
xchg
pop
cmp
insb
dec
js
or
fldl
andl
push
popa
cld
test
inc
insl
or
rorl
mov
subl
xchg
ljmp
aad
sbb
cmp
ss
movsb
sbb
jmp
call
jmp
fsubs
push
sub
out
mov
fildl
inc
fstpt
pop
aam
cmp
std
xchg
sbb
mov
mov
shl
decl
sbb
xchg
mov
adc
adc
jmp
insb
addr16
or
stos
ss
stos
outsl
mov
icebp
and
mov
icebp
inc
aas
push
imul
push
rcl
add
outsl
jo
das
data16
pop
push
outsl
pop
mov
je
push
faddp
pusha
xor
pushl
mov
popa
jnp
fisttpll
daa
add
inc
and
jne
sbb
cli
mov
sbb
mov
xchg
lcall
aaa
int3
out
dec
adc
pop
clc
pop
adc
push
pop
mov
gs
jg
xorb
inc
daa
iret
mov
fwait
inc
data16
pusha
decl
std
je
sub
pushf
push
xor
sbb
pop
stc
lods
int
and
sbb
sbb
add
or
dec
mov
lea
push
lret
xor
lcall
jmp
test
jg
jle
jno
inc
sbb
push
adc
pusha
nop
cmp
outsl
lcall
aam
movb
lods
pop
inc
mov
adc
sbb
cli
and
lahf
pop
fsts
jmp
sbb
jbe
cmp
adc
pop
aas
xchg
lcall
adc
mov
test
mov
adc
fdivrs
sub
fisttpll
mov
scas
std
and
decl
mov
call
push
data16
xchg
xor
lcall
jne
dec
cs
ficoml
adc
mov
or
out
adc
call
add
sbb
add
outsb
shr
mov
js
imul
fld
ret
incl
lret
xor
enter
cmp
push
popa
or
inc
aad
or
fbstp
inc
arpl
mov
sbb
ja
test
sbb
jo
xchg
rorl
jb
repz
jmp
loop
lahf
mov
movsl
loopne
add
mov
pop
test
rcrb
mov
incl
hlt
pop
idivl
adc
add
or
and
mov
mov
push
mov
add
rcrb
sub
xchg
mov
dec
add
and
xor
cmpsb
nop
or
inc
and
mov
xor
xlat
push
lahf
add
in
je
or
aaa
mov
stc
in
shll
call
call
ljmp
hlt
hlt
clc
clc
ret
dec
cld
cld
cmc
lea
mov
clc
or
out
sbb
incl
ror
fld
fidivrs
xchg
mov
stc
nop
adc
mov
int3
or
lea
jl
out
decl
std
cmp
jecxz
ja
inc
xchg
mov
fldenv
jg
stc
xlat
popf
daa
daa
sub
dec
sub
or
add
insl
add
outsl
mov
dec
jg
dec
pop
dec
hlt
xchg
fucomip
adc
out
add
mov
jne
pushl
stos
fdivrs
sub
jmp
test
es
clc
in
pop
jg
cli
push
cmpsb
imul
aaa
xchg
lea
ffree
sbb
rcrb
decl
fisttpll
or
mov
ret
pop
add
and
out
mov
mov
cld
lcall
sub
dec
or
pop
or
jge
pop
or
push
subl
pop
or
mov
add
sub
and
xchg
add
cmp
je
cmp
pop
jne
dec
jg
std
adc
sub
mov
cmp
cmp
jne
inc
cmp
loop
call
add
push
dec
adc
test
int3
xor
mov
movsl
sub
stos
push
testl
cmc
inc
outsb
push
mov
jge
lea
popa
call
mov
mov
stos
add
jg,pt
cmp
and
or
rorl
mov
jle
mov
push
clc
inc
mov
shl
cmp
pop
dec
mov
mov
mov
jg
cmp
inc
cmpb
cmpsl
push
pop
or
xchg
or
or
mov
shll
jl
in
mov
inc
test
jne
outsl
mov
mov
add
adc
ret
ja
in
roll
call
xorl
in
mov
mov
xchg
insb
mov
clc
jg
repnz
push
sub
ret
or
std
pop
enter
jmp
loop
pop
push
movsb
and
cmp
nop
xchg
rcll
xor
and
push
jns
lret
fistl
cli
call
jmp
std
in
notb
pop
sbb
mov
ljmp
xchg
test
fcom
pmaxsw
adc
movsb
add
outsb
frstor
imul
imul
xor
test
test
test
adc
insl
pushf
fstl
or
jae
lahf
xor
adc
lea
and
pop
adc
sarb
cli
hlt
inc
mov
push
jecxz
push
mov
jle
mov
mov
ret
arpl
insl
xchg
loopne
jg
jmp
aas
jo
mov
xchg
sti
mov
xor
jg
mov
leave
call
addr16
push
cmp
xor
int
pushf
and
sub
push
mov
lcall
je
pop
in
add
inc
or
movsl
inc
jae
fwait
adc
cwtl
push
mov
add
jmp
xor
mov
subb
sbb
mov
xchg
in
lock
dec
lcall
clc
fisubl
in
mov
or
pop
push
xor
sbb
rcr
pop
xchg
mov
push
movl
mov
outsb
mov
xor
js
add
fistpl
jo
sub
gs
add
call
cmpsl
ss
cmp
cli
xchg
in
mov
adc
incl
test
int3
add
fmuls
aam
int
xorl
lret
xchg
test
jge
and
sub
push
aam
incl
das
fmul
int3
add
lock
inc
xchg
cld
js
or
mov
sarb
xlat
mov
adc
push
test
add
ljmp
xchg
push
jne
push
pop
mov
jo
xchg
imul
arpl
dec
je
movsl
in
jmp
xchg
daa
lock
inc
mov
and
mov
mov
call
cmp
add
jg
lock
andl
mov
das
js
scas
dec
movsl
xor
js
or
jge
cltd
add
xor
add
mov
lock
aam
pop
jae
ja
out
push
push
cmp
ljmp
lcall
lods
fldl
xchg
xchg
push
cld
mov
push
aas
loop
add
adc
test
ret
ds
cld
imul
das
lods
popa
and
sbb
je
fucomip
shrb
cmp
ljmp
cmc
jg
xor
mov
mov
pop
rcr
dec
pop
jl
add
adc
sub
cmp
cli
out
mov
and
call
ret
popl
rorb
aas
cmpl
push
lea
fwait
mov
adc
outsb
push
mov
out
dec
add
call
mov
or
pop
mov
es
jle
push
insl
movsl
pop
add
add
aaa
clc
call
sbb
sti
inc
jmp
sub
bound
xlat
cmp
pop
mov
add
or
sbb
push
add
and
loopne
pop
cmp
jne
mov
ljmp
shlb
cmp
call
mov
mov
ret
shlb
jg
push
cmpsl
mov
dec
cltd
popa
je
test
push
adc
ljmp
icebp
aaa
cli
test
jne
xor
mov
lock
push
push
mov
cmp
jne
xchg
cmp
jne
push
loop
or
pop
out
and
pop
sbb
pop
pop
mov
sbb
mov
call
std
fildl
xor
imul
rcll
jg
push
dec
mov
js
sub
and
outsl
hlt
add
into
shlb
xlat
push
lods
push
cmp
lret
loop
inc
call
lcall
in
pop
jg
add
jno
outsb
sub
je
inc
in
xor
pop
and
xchg
xor
and
fnstsw
add
pushl
adcl
icebp
cmc
cld
push
in
jge
mov
xor
jg
orb
in
leave
add
fnstsw
and
adc
enter
stos
call
loopne
in
arpl
lea
aam
fsubr
lea
push
inc
pushl
inc
jge
frstor
push
loope
aaa
push
imul
inc
mov
aam
mov
in
mov
jp
push
inc
ret
imul
outsl
cmp
push
xor
mov
clc
mov
adc
mov
je
pop
mov
insb
in
adc
push
inc
cmp
lcall
adcb
or
jo
fldcw
jp
cmp
pop
push
mov
push
das
mov
imul
jne
cmp
jle
pop
or
fbstp
jg
cmp
fs
mov
push
or
and
lods
in
inc
or
jmp
mov
or
cmpl
sub
repz
pusha
mov
rclb
arpl
or
fistpl
pop
sub
decl
push
sub
xor
add
or
inc
jns
xor
sbb
jp
hlt
aaa
clc
mov
and
rolb
shrb
fidivrs
sbb
xchg
hlt
add
pop
mov
filds
jae
inc
lods
push
es
je
in
push
std
jg
sub
mov
and
inc
test
je
inc
xchg
aam
shll
cltd
clc
jae
jg
out
insb
imul
cli
inc
mov
js
mov
push
or
mov
cmc
test
incl
adc
jne
lea
popa
add
sub
or
ljmp
jg
or
loopne
les
mov
sarl
pop
pusha
add
push
inc
and
je
fsubp
or
movl
ljmp
pop
cmp
lds
fwait
xor
shl
in
fistpll
daa
dec
out
and
add
xor
mov
mov
je
mov
jne
jl
jne
movsb
ror
les
sbb
test
inc
pop
mov
sub
and
pop
fisubl
lcall
cmp
rep
stos
stc
jbe
mov
pop
mov
test
pop
mov
addr16
imul
push
pushl
mov
jl
jle
jmp
jecxz
dec
lea
push
enter
mov
lea
andl
dec
and
jg
cmp
ja
mov
cld
mov
inc
inc
adc
imulb
jae
fildl
mov
or
jnp
push
cmp
loop
xchg
mov
decl
and
lea
inc
movsl
movsl
pop
mov
ljmp
jns
cmp
sub
mov
sahf
adc
cmp
jmp
push
jmp
sbb
or
xor
stos
add
cmp
arpl
aas
cld
pushl
dec
stos
jne
ljmp
adcl
mov
inc
inc
sub
inc
sahf
pusha
sbb
or
and
std
decl
mov
mov
jnp
sbb
xor
call
or
sbb
add
testb
ret
popa
in
add
cmp
decl
iret
or
push
jno
xchg
test
pop
add
in
push
ds
jg
pushl
push
push
fcoml
push
aas
sarb
sub
add
mov
jb
mov
mov
or
push
repz
ja
sbb
mov
push
inc
jecxz
sub
add
pop
lcall
mov
mov
shlb
test
pop
pop
lcall
mov
into
push
inc
jp
push
out
mov
xchg
dec
inc
fsubs
std
sbb
push
push
push
jne
clc
call
adc
cld
sbb
popf
pop
jge
or
or
fistl
data16
fldcw
adc
sub
fildl
mov
je
and
jmp
andb
shlb
xor
mov
inc
jb
add
fcmovnu
aas
lods
mov
enter
outsl
lds
xor
leave
lret
jb
jp
push
and
and
jmp
dec
loop
arpl
dec
mov
sub
imul
pop
cld
or
jp
xor
jno
icebp
mov
sbb
mov
jne
cmp
mov
xchg
sub
je
pop
stos
xor
fdivl
cmpsb
movsl
pusha
push
xchg
clc
call
cmp
insb
mov
adc
pop
xlat
push
int
or
mov
pop
pop
js
xor
cmp
adc
cmc
pop
insl
sbb
jbe,pt
out
incl
push
mov
fcomps
cmpl
sarb
incl
pop
push
inc
sub
jmp
jmp
jp
aaa
pop
mov
inc
pop
adc
and
push
push
adc
cwtl
inc
dec
hlt
nop
sbb
clc
fidivrs
add
inc
push
mov
outsl
hlt
pop
xchg
mov
pusha
lods
inc
sbb
mov
in
shll
jmp
cmc
fldt
lock
imul
cmc
das
dec
jge
jle
fildll
pop
dec
mov
incb
jb
cs
push
cmc
dec
jmp
jg
call
inc
roll
xlat
push
mov
cmp
jae
loope
push
pop
adcb
test
pushl
or
lret
ret
push
jl
insl
lods
filds
pop
mov
ficoms
adc
incl
scas
jmp
jl
rcr
pop
jnp
adc
add
popa
and
sahf
jmp
push
mov
dec
in
sbb
rorb
fadds
mov
lcall
inc
or
js
ss
int
aad
push
fidivl
dec
adc
fs
adc
push
decl
and
test
in
xor
outsl
mov
lods
lcall
sub
faddp
mov
fisttps
push
fs
inc
imul
and
mov
add
sbbl
aad
cwtl
and
aaa
and
mov
push
xor
lcall
lods
pushl
clc
lea
or
call
dec
xchg
repz
lcall
adc
pushf
call
ret
push
push
sahf
push
inc
inc
pop
pop
popf
jge
adc
insb
cmp
xorl
push
jl
add
aaa
mov
jnp
and
push
stos
ja
adc
pop
xchg
pushl
cli
out
push
jne
cmp
adc
into
or
dec
push
inc
test
inc
ja
push
ja
test
sbb
jg
outsl
mov
pop
sub
ret
incl
scas
addl
xor
test
adcb
add
lcall
je
mov
and
andb
test
mov
jle
push
outsl
adcl
xchg
dec
fstpl
dec
dec
push
and
bound
and
jmp
std
or
adcl
jae
loopne
js
push
mov
dec
sbb
dec
or
das
fstl
push
js
push
out
call
push
inc
mov
shr
pop
outsb
pop
nop
insl
sbb
imul
mov
push
fsubrs
cwtl
xor
dec
jg
mov
mov
imul
mov
jg
jg
fadd
push
insb
dec
sub
push
cmp
cmp
jne
or
std
push
std
adc
cmpl
pop
push
lods
push
cmp
mov
incl
inc
jo
pop
rcr
rcll
roll
aam
jmp
cs
stc
add
or
mov
decl
shrl
insb
into
and
enter
fstpl
jno
push
out
sbb
pop
ficoml
xchg
xchg
cltd
adc
decl
sbb
push
xchg
mov
cmp
cmp
jg
mov
or
inc
add
std
pop
jle
mov
subb
cs
mov
pop
clc
adc
jle
jbe
aaa
push
dec
shlb
xchg
jne
call
jecxz
test
loope
hlt
addl
pop
js
hlt
ret
and
inc
jmp
jp
jns
mov
xor
xlat
fdivl
outsb
sub
pop
adc
das
inc
sub
jg
xor
call
in
mov
mov
cmp
lock
aad
ljmp
pop
insl
xorl
imul
xchg
addr16
xchg
xor
fs
push
jmp
call
cmp
jl
cmp
sub
pop
decl
lret
test
outsb
cmpsb
dec
hlt
fs
mov
insl
es
cmp
sti
pop
pop
pop
push
outsb
jmp
adc
test
aam
lock
mov
testb
cmpb
push
sbb
bound
cmpsb
add
and
pop
stos
ja
lcall
push
or
and
xlat
jbe
testb
sbb
pop
and
sub
gs
or
pop
or
nop
jb
lock
mov
scas
adc
pop
jmp
push
jo
push
mov
scas
je
dec
or
cmp
pop
jecxz
rcl
mov
test
mov
adc
dec
mov
push
dec
sbb
into
mov
dec
rcll
test
fnsave
pop
jmp
mov
shll
xchg
clc
call
popa
imul
mov
sbb
or
movsb
or
das
cmc
das
aaa
dec
sub
xor
mov
lret
add
mov
dec
pop
outsb
push
push
mov
inc
in
sub
cmp
jg
jmp
xchg
push
int
push
dec
cmp
cmpsb
cmpl
mov
xchg
loopne
adc
addb
cmp
insl
nop
mov
insl
add
add
rorb
dec
jo
jl
decl
icebp
adc
lahf
fsubp
xchg
ret
sti
incl
dec
pop
add
aam
insb
adc
jns,pt
insl
gs
mov
icebp
lcall
enter
jg
fisttpl
xchg
mov
mov
dec
aas
sub
into
movsl
call
test
jg
mov
xorl
add
dec
pop
dec
mov
mov
fcmovnb
aaa
sbb
sbb
add
jle
pushl
stos
inc
jb
pop
in
popa
mov
testl
imul
or
jl
sbb
mov
adc
pop
dec
call
pop
popf
std
lcall
add
jmp
lock
pop
sub
cmpsb
ret
jmp
sub
test
dec
loope
push
dec
jae
shlb
jbe
es
pushl
cli
out
pop
loopne
add
mov
idivb
dec
jmp
sbb
add
cmp
jge
call
cmp
mov
jle
test
pop
clc
decl
add
cmp
sahf
dec
fdivs
dec
stc
dec
and
clc
call
fs
repz
pop
sbbl
imul
jmp
decl
ret
fists
add
xchg
call
ljmp
fcomps
lcall
clc
ljmp
sub
shll
adc
pusha
cwtl
xchg
mov
cli
incl
cli
jl
pop
loopne
fsubrs
xor
pop
clc
dec
pop
pop
rcrl
lods
shrl
cwtl
mov
inc
insl
mov
and
ljmp
pop
shlb
mov
jnp
cmp
std
sbb
add
push
xchg
cli
jg
pop
rcr
sub
js
lret
je
stos
aad
cmp
mov
push
add
test
icebp
lcall
daa
lods
call
sbb
ss
pop
xor
insl
dec
cld
lcall
push
pop
pop
add
mov
fcoml
jecxz
in
or
cmp
sub
push
adc
mov
lods
shr
shlb
jnp
fildll
hlt
xchg
sbb
inc
jae
fldcw
leave
adc
popa
dec
jo
fucomip
movsl
ss
int3
ret
xchg
cmp
jne
ljmp
xchg
outsb
je
cs
push
and
mov
rorl
xor
inc
inc
add
das
icebp
push
cmp
sbbl
lock
pop
inc
enter
cmp
cmp
out
test
pusha
mov
xorl
bound
int3
jnp
and
or
test
add
pop
cli
push
inc
mov
push
sbb
jg
jbe
int3
push
inc
call
xor
leave
xor
xchg
or
inc
sbb
jb
pop
mov
inc
mov
pop
and
stos
or
lret
testl
call
decl
cmp
mov
ja
push
rolb
push
lea
push
or
pop
inc
or
xchg
push
fdivl
dec
jnp
push
cld
test
pop
inc
scas
inc
push
adc
jae
ljmp
decb
xor
cmp
movsl
dec
je
inc
jmp
pop
push
mov
aas
pop
push
inc
adcl
or
jg
sub
incl
xlat
jge
idivl
fadds
inc
jo
incl
es
add
mov
mov
xor
add
cmp
push
subb
sub
or
movsb
xchg
xchg
ljmp
dec
insb
jo
loopne
push
and
mov
mov
cmp
clc
jmp
pushf
jne
xchg
and
add
push
xchg
ljmp
out
and
and
pop
xchg
repz
std
fistps
sbb
adc
xlat
dec
and
pop
mov
mov
notl
ljmp
cld
ret
subl
cmpsb
or
jbe
ljmp
pushl
jo
data16
movb
ret
nop
push
push
scas
dec
xchg
mov
incl
fistps
jl
and
push
xchg
mov
ljmp
jg
or
icebp
movb
mov
stos
std
add
mov
push
es
js
data16
adc
icebp
jge
lods
dec
pop
sub
ficoml
out
call
xchg
ja
fstl
jl
cmp
addr16
mov
pop
and
arpl
std
out
outsb
and
andb
das
jo
inc
mov
push
mov
add
jae
dec
jl
outsl
mov
jle
fldl2e
pushl
aad
push
dec
cmpb
cmp
jg
push
stos
mov
inc
add
sar
jl
mov
shll
je
mov
cmp
mov
mov
sub
test
fisttpll
mull
test
iret
and
test
fildl
xorl
das
shrb
scas
push
cmp
dec
mov
shl
shl
cmp
pop
aam
incl
pop
lock
or
test
pop
mov
paddusw
ljmp
add
add
adc
pushl
int3
jb
push
insl
test
mov
jnp
aaa
push
js
rcrl
jae
adc
and
push
rolb
mov
lcall
int
mov
and
inc
sbbl
mov
aaa
incb
xorb
das
adc
jns
mov
cmp
push
sbb
sub
lea
add
stc
mov
incl
aas
xor
inc
or
xor
je
push
push
xor
pop
outsl
lock
dec
aas
dec
fstpt
jbe
push
xor
ret
std
cs
mov
aam
ljmp
popf
sbb
lcall
jmp
jnp
js
sbb
xchg
push
shl
mov
lret
outsl
cld
mov
int3
xchg
xchg
sub
xor
decb
dec
stc
push
push
lahf
cmp
fmuls
aam
sbb
mov
int
ss
das
daa
and
push
adc
cld
mov
pop
jl
or
std
decl
flds
mov
push
adc
ss
ljmp
mov
insb
mov
out
jne
mov
mov
cli
jns
jne
inc
mov
testb
pushl
add
roll
jmp
mov
jmp
call
decl
lret
inc
outsb
outsl
inc
push
jmp
push
add
add
ljmp
lock
andl
fsubl
je
or
or
test
cmp
jg
push
jo
dec
data16
jmp
dec
lods
push
add
loopne
xor
daa
add
aaa
lcall
pop
enter
xor
pushf
out
or
push
hlt
mov
incl
notl
mov
or
and
ljmp
repnz
or
rcrb
divb
mov
clc
xchg
mov
cli
imul
push
inc
mov
mov
jne
andb
xor
push
mov
fistl
mov
adc
loop
or
push
pushl
cmovo
pusha
jae
add
jo
mov
xor
push
jg
mov
push
sti
dec
das
call
jmp
lods
push
push
fadds
fisubrl
rcll
jne
aad
dec
rcrb
mov
jnp
lcall
push
ds
aam
ljmp
addb
inc
imul
mov
aas
jns
decl
fsts
inc
inc
cmp
push
fcmovb
pop
hlt
repnz
inc
cwtl
sar
mov
incl
adc
mov
dec
push
nop
call
sbb
lods
sbb
mov
mov
and
jmp
lock
pop
js
push
sahf
scas
jge
sbb
icebp
call
push
bound
push
andl
or
imul
mov
fsubrs
into
test
notb
call
sbb
lcall
or
rclb
mov
lods
add
dec
std
call
fs
leave
and
sub
sbb
stos
pop
jl
jae
add
jl
outsb
movsb
jle
dec
sbb
lahf
inc
dec
in
lea
inc
add
test
lcall
xchg
orb
push
jle
add
aad
xchg
dec
pusha
lret
fidivrl
adc
sbb
mov
xchg
sub
cld
xchg
cmpb
add
pop
cmp
pop
cld
decl
add
lods
movsb
aam
stos
mov
ret
mov
inc
inc
daa
loope
inc
icebp
lcall
std
incl
icebp
test
xchg
sbb
cltd
test
sub
sbb
aaa
clc
decl
leave
inc
shl
or
icebp
and
xor
cmp
jnp
pop
adc
mov
fisttpl
gs
sub
in
add
sbb
sbb
lea
or
clc
jge
add
inc
hlt
clc
or
pop
push
push
cmp
in
insb
jb
pusha
fsubrs
cmp
loop
pop
pop
adc
mov
mov
jae
sti
insb
adc
and
loopne
cli
push
movsl
nop
ds
fwait
inc
inc
les
ds
jg
xor
lock
sarl
scas
lea
popf
fidivl
mov
decl
scas
and
out
cmp
fdivs
pop
les
pop
test
ljmp
addl
sar
fildl
adc
or
xor
cli
pushl
jecxz
or
mov
icebp
test
divl
lret
das
stc
xor
push
sar
aaa
mov
aaa
jp
xor
adcl
stos
jne
dec
ljmp
cmpsl
mov
sar
or
xor
pop
pop
pop
cltd
mov
inc
cld
cmp
ss
push
mov
cld
out
cmp
je
das
out
in
cmpsb
imul
mov
mov
aaa
push
std
cld
pop
enter
fucomip
lcall
sbb
and
add
sbb
push
decl
daa
mov
sbb
xor
test
mov
into
add
hlt
outsb
add
inc
fisubs
jmp
mov
in
adc
sbb
insl
inc
lea
sar
stc
mov
and
rclb
aam
push
arpl
mov
pop
hlt
xchg
stc
sbb
mov
push
and
pop
xchg
push
decl
lods
sub
push
pop
mov
push
xlat
mov
jmp
push
ror
push
pop
imul
pushl
ret
loopne
sbb
inc
loopne
sbb
pop
lahf
jl
stos
mov
adc
call
decl
pop
mov
cmp
sub
mov
movsl
or
aam
ljmp
pop
iret
adc
or
loope
xchg
xchg
add
or
cli
mov
cld
xor
jle
jp
imul
test
or
mov
jg
call
inc
cltd
lret
cs
cs
cmpl
loopne
pop
xchg
jb
sarl
iret
jbe
insl
aam
jge
dec
adc
add
aas
mov
inc
push
stc
and
mov
movsl
jg
add
xlat
and
pop
sub
cmp
orb
xorb
cld
mov
lea
jns
dec
mov
pushl
mov
add
lcall
mov
sar
adc
addr16
jnp
mov
mov
and
lcall
adc
sti
clc
dec
pop
cmp
cmpsb
jbe
mov
lret
sti
jbe
call
incl
cmp
jbe
cli
mov
shrb
aam
push
mov
fs
push
ret
sbbb
or
push
mov
add
mov
xchg
in
int3
cli
movsl
jg
inc
ljmp
xchg
or
pop
loop
out
pop
mov
and
xchg
dec
sti
out
fistpll
mov
ljmp
out
and
insl
dec
cmpb
dec
mov
ja
mov
decl
or
or
fbstp
and
dec
loopne
in
adc
mov
pop
add
incl
les
gs
mov
btr
or
dec
push
outsl
mov
lcall
cmpsl
adc
das
or
cmovnp
pop
mov
adc
xor
fsubr
and
pushl
cmp
movsb
mov
jnp
push
jge
inc
or
pop
sbb
jg
mov
out
adc
outsb
rcll
push
adc
mov
xlat
adc
mov
pushl
test
hlt
mov
mov
xchg
lret
enter
ljmp
dec
adc
sti
imul
push
dec
int3
test
add
xor
js
push
jmp
sbb
decl
or
mov
push
je
ss
jbe
pop
push
push
or
hlt
xor
push
lahf
shrl
outsb
lea
hlt
jmp
loopne
fbld
mov
shr
stos
icebp
pop
loopne
pop
dec
adcb
adc
ljmp
mov
test
sub
decb
iret
sbb
mov
out
ja
sbb
pop
jne
mov
cmp
xchg
hlt
out
mov
add
incl
jnp
mov
pop
or
aaa
jmp
es
cltd
mov
or
push
add
int
dec
pop
and
loopne
call
dec
outsl
pop
adc
pop
cmpl
jae
aam
call
mov
sub
dec
mov
mov
mov
nop
inc
mov
mov
jo
adc
push
test
pushl
jge
or
mov
jne
mov
call
sbb
mov
xlat
je
mov
ljmp
mov
imul
jmp
push
into
xor
cli
ja
push
fs
mov
pop
loop
leave
jl
loope
pop
mov
ljmp
lock
jnp
incb
pop
add
cmp
jle
pop
xchg
or
test
jge
adc
cmp
dec
and
pop
sub
inc
mov
decb
jne
inc
mov
jmp
pop
sub
fucomip
pop
mov
cwtl
cmp
fbld
or
pop
sarb
add
out
inc
jae
test
sbb
mov
or
and
push
mov
decl
inc
jge
les
or
mov
bound
fldt
cmp
popl
decl
jl
jmp
sub
sti
nop
push
mov
incl
mov
mov
push
jb
arpl
pushl
cld
mov
jne
lock
adc
cld
ljmp
jge
lahf
ja
frstor
jns
jne,pt
dec
adc
dec
cmp
inc
or
sub
frstor
jg
fstl
js
nop
and
mov
jb
test
inc
mov
adc
mov
xor
push
push
filds
xor
or
je
push
iret
fsubs
dec
or
cld
lcall
insb
or
push
insb
adc
jbe
movsb
cmp
mov
push
jl
and
decl
out
pushl
push
and
sub
test
popa
jno
pop
ljmp
std
sbb
inc
inc
mov
outsb
xor
aaa
imul
push
mov
inc
lea
jne
call
test
out
jns
shll
mov
jg
push
mov
shll
dec
lea
mov
mov
cmp
inc
ja
repnz
hlt
jb
push
movl
lock
push
mov
cmp
movl
push
sub
xchg
jbe
push
outsl
add
dec
decl
jnp
ficompl
lods
lea
or
inc
test
pushl
sahf
jecxz
inc
inc
decl
clc
aaa
push
lret
dec
inc
jne
or
sub
sub
add
add
add
push
adc
and
add
push
mov
mov
in
mov
pop
lods
jl
loopne
mov
cmp
pop
clc
push
cmp
xchg
pushf
dec
mov
mov
rcrb
add
fdivl
adc
aad
pusha
add
mov
mov
pop
icebp
ret
push
movsb
pop
std
add
cmp
add
lret
lea
and
cmp
or
sbb
adc
fwait
sub
call
add
out
rorb
cld
inc
ret
or
mov
lcall
mov
out
inc
inc
jmp
xor
adc
test
pop
xor
mov
jmp
xor
add
mov
sbb
jae
dec
xor
dec
lods
nop
mov
decl
inc
add
nop
add
das
sbb
mov
decl
jae
add
push
in
in
aam
xor
clc
inc
lock
or
mov
add
cmp
in
pop
and
call
push
pusha
mov
fldenv
push
mov
enter
addr16
or
outsl
push
push
enter
mov
mov
shll
push
fs
je
push
or
xchg
cmpsl
jne
inc
outsl
pop
add
enter
outsl
ljmp
movsb
subb
decl
push
js
loopne
ficoms
subl
icebp
nop
ja
ja
dec
into
or
stos
test
or
sbb
mov
mov
mov
aaa
fcom
inc
xor
push
clc
je
inc
adc
jmp
lock
xchg
cli
fucomip
or
push
cmpb
and
pushl
aam
out
mov
and
insl
mov
call
cld
push
push
scas
jge
repz
pop
sbb
adc
or
test
mov
cs
push
cmc
jge
je
adc
adc
ljmp
test
sbb
out
dec
xchg
nop
stos
popa
lahf
fisttps
push
aam
push
jg
call
flds
dec
cmp
sbb
ret
jne
jmp
stc
adc
incl
xlat
sahf
sub
sub
jne
sub
push
and
je
and
push
mov
xchg
ret
sub
pop
mov
cmp
mov
mov
ss
sbb
cli
sub
rclb
sub
arpl
clc
push
mov
pushf
lcall
clc
sub
or
pusha
imul
lcall
push
or
add
sub
repz
or
movsl
sbb
pop
jne
mov
test
jb
xor
inc
sub
ljmp
in
jge
sub
in
pop
sub
shlb
mov
adc
std
jg
jne
sahf
jmp
xchg
stos
es
ljmp
icebp
fiadds
mov
dec
push
in
dec
je
std
fcmove
mov
inc
add
cmp
add
jno
push
jle
push
and
push
adc
fbld
jle
or
sbb
sub
jns
shll
xlat
push
scas
pop
test
fcomip
pop
jmp
sub
stos
pop
push
jp
add
fisubl
cld
ljmp
adc
and
jns
push
int
cmpl
aam
addl
imul
xchg
adc
fwait
mov
pop
mov
clc
pop
mov
clc
jg
or
mov
push
xlat
sti
lret
loop
ss
inc
dec
or
xchg
jno
ja
hlt
pop
sbb
aam
rorl
pusha
jmp
cmp
jge
or
push
push
or
add
adc
inc
add
jl
lcall
mov
sbbb
mov
shrl
adc
or
outsl
mov
adc
outsb
fmuls
inc
fisttpl
movl
inc
sub
stos
inc
arpl
mov
xchg
lcall
loopne
sbb
ljmp
lea
add
mov
sbb
decl
aad
je
sbb
jl
pop
push
orb
lret
mov
jmp
cli
mov
pop
and
or
mov
jmp
sbb
popa
sbb
inc
mov
push
stos
pop
popa
pop
or
and
add
popa
xchg
out
inc
xchg
cli
fildll
add
inc
mov
fistps
jg
sbb
dec
mov
ret
inc
mov
jg
shr
lods
add
inc
lods
fildll
int
rclb
mov
lds
or
mov
xchg
imul
adc
dec
add
sbb
pshufw
mov
decl
push
mov
cmp
adc
jae
pushf
dec
rcrl
ljmp
roll
lcall
xor
adc
or
lcall
out
subb
add
jb
xchg
rcrl
leave
ljmp
pop
loop
cltd
lods
imul
mov
icebp
ja
cmp
mov
and
or
and
ljmp
mov
adc
xor
inc
pop
sbb
ljmp
int3
loopne
mov
jmp
xchg
cmpsb
lret
inc
jg
add
push
inc
mov
gs
jg
pushl
scas
lods
decl
dec
popa
push
or
scas
int
mov
ljmp
movsb
dec
leave
loop
test
sbb
mov
cmp
stos
add
pop
loop
jmp
inc
add
repz
imul
insb
jge
add
fucomip
or
sub
add
lods
ja
xor
sbb
jmp
jne
xor
or
push
addps
aaa
mov
ja
mov
sub
adc
adc
jp
je
icebp
jg
push
cmp
and
jb
jb
lock
mov
or
push
dec
dec
push
jmp
ljmp
push
jg
dec
dec
inc
mov
inc
dec
dec
inc
adc
push
xor
cmp
test
cld
mov
mov
mov
mov
popa
insb
aas
xor
gs
jo
jmp
xchg
ja
jg
cmp
and
popa
arpl
ljmpw
inc
out
ja
lret
cmp
outsl
outsb
aaa
xor
cmp
jae
fs
jne
sub
jb
push
jg
movsl
arpl
pop
insb
sti
and
arpl
sub
jnp
mov
mov
das
pop
push
fcompl
leave
pop
loop
xor
daa
mov
ja
pop
xor
in
pushl
pcmpgtb
arpl
mov
inc
and
gs
popl
and
stc
mov
jge
push
insl
jne
lods
je
mov
imul
xchg
cli
mov
mov
add
jge
push
push
ljmp
push
dec
dec
shrl
ret
das
sub
dec
adc
sub
xor
clc
test
jb
jne
jae
imul
pop
ljmp
shrw
sbbb
fldt
je
adc
mov
sub
call
shufps
inc
sub
and
dec
imul
jae
push
sub
mov
jbe
cmp
adc
cmp
mov
lcall
and
outsb
ds
fldl
inc
aad
flds
pop
cld
jg
popa
ds
pop
mov
gs
adc
outsl
push
fcmovne
xorps
xor
jae
lods
icebp
test
addr16
outsl
js
add
xor
xor
ljmp
jmp
gs
addr16
xor
sub
or
inc
je
add
leave
xor
test
mov
ljmp
movsb
add
mov
sub
or
loopne
ljmp
les
mov
mov
test
push
pop
or
jb
sub
lock
add
incl
xchg
cmp
loopne
ljmp
add
inc
ljmp
or
jnp
inc
add
pop
push
add
add
add
incl
inc
or
lea
or
adc
or
sub
out
pop
inc
and
add
cmp
fildl
jo
jns
outsl
loop
pop
clc
lsl
sub
pop
push
push
filds
pop
or
jmp
push
mov
pop
inc
cltd
pop
test
dec
or
pop
ljmp
push
sti
lcall
inc
xor
xor
sub
xor
xor
fidivrl
or
sub
fistps
inc
inc
inc
xor
andl
das
ss
adcl
cmpl
push
ret
mov
add
xor
add
lahf
pop
out
dec
cmpsl
or
sub
add
aam
jg
pop
jb
cmp
inc
xor
inc
inc
inc
inc
xor
in
fldt
lods
or
dec
ss
cmp
xor
inc
in
inc
cwtl
stos
jns
pop
test
aaa
and
call
pop
aaa
adc
pusha
nop
enter
outsb
inc
jecxz
jg
push
xor
jbe
or
outsl
idivl
pop
cmpsl
ljmp
push
push
test
stos
xor
jae
insb
inc
jae
dec
add
and
fucomip
lcall
or
movsb
add
inc
add
xor
jmp
iret
out
sub
call
push
or
aas
fs
push
and
adc
insl
mov
lock
fists
add
add
sub
cli
lods
pop
dec
add
cmp
push
pushw
mov
inc
rorl
inc
push
stos
flds
add
cld
rcrb
cmp
aaa
fsubr
lea
ja
movsb
les
jns
and
filds
xchg
lahf
lahf
cmp
movsl
sbbl
fnstsw
stos
test
loop
mov
mov
pop
inc
mov
das
cld
fisttps
lret
mov
in
call
jl
jle
mov
add
pop
fdivr
dec
jle
fidivl
rcr
fsubp
cli
mov
xor
xchg
pop
xchg
jp
pop
xor
sbb
push
xchg
outsl
add
imull
int3
fdivs
enter
push
mov
xchg
add
or
pop
or
or
fcoml
lods
adc
mov
leave
mov
pop
sbb
fs
sbb
dec
sahf
les
mov
js
push
ljmp
push
xor
enter
and
add
add
dec
icebp
negb
in
incl
lea
and
push
in
nop
xchg
xchg
stc
add
cmp
pop
cmpsb
cmp
sahf
mov
add
push
fincstp
pop
nop
add
pop
mov
scas
mov
push
jg
or
xchg
stc
adc
push
sbb
or
or
jnp
push
sti
push
das
dec
aaa
fdivr
mov
add
pop
push
loope
and
insb
mov
push
xor
cmc
push
in
pop
push
pop
or
pop
pop
rclb
imul
sbb
and
jb
out
add
mov
and
addl
sahf
mov
ret
call
popa
ficompl
xlat
or
data16
ljmp
push
inc
and
xchg
pop
daa
adc
inc
outsb
out
inc
jb
inc
push
sub
pop
jle
jmp
insb
cmpsl
add
shr
inc
adc
adc
push
inc
jmp
xor
and
mov
es
and
jge
push
cmp
add
push
pop
mov
adc
outsb
inc
sbb
push
pop
bound
jle
add
movsb
dec
xor
lea
lods
add
fmul
es
aaa
insl
mov
lds
push
dec
jecxz
ds
outsl
fdivrs
in
push
imul
push
jmp
mov
adc
insb
ret
loop
mov
insb
aam
gs
data16
cltd
je
imul
dec
arpl
lcall
fs
addb
fnsave
mov
push
ljmp
push
xor
add
push
imul
mov
mov
push
mov
lods
sbb
data16
je
push
adcb
shrb
sbb
jg
push
out
outsb
sub
into
data16
add
jbe
add
inc
clc
jg
or
inc
mov
or
cli
js
mov
mov
andb
xchg
jmp
dec
test
popa
ss
mov
mov
mov
mov
adc
test
decl
mov
int
adc
incl
dec
sbb
inc
inc
xchg
and
stos
pop
popf
gs
sub
pop
dec
pop
sbb
std
sub
mov
mov
pushf
mov
sbb
and
mov
ljmp
scas
sbb
and
or
xchg
loope
add
dec
xchg
push
adc
mov
cmc
mov
mov
ds
gs
insl
jae
or
pop
and
dec
mov
addw
int
stos
stc
xor
in
add
xchg
pop
andb
cmp
jno
lahf
pop
mov
mov
push
cmp
xlat
mov
das
mov
std
hlt
movsb
adc
fbld
and
jmp
xchg
sbb
pop
sbb
adc
fldt
push
or
pushl
adc
adc
xor
sbb
adc
or
outsl
ljmp
std
pop
fadds
adc
or
add
pop
push
outsb
adc
adc
sbb
adc
std
call
les
push
pop
pop
sbb
pop
or
mov
mov
and
cli
add
or
std
loop
jg
inc
jns
or
cmp
inc
push
add
add
ljmp
jno
cld
mov
xor
xchg
cmp
push
outsl
cmp
dec
sub
or
add
sub
sbb
or
outsl
loopne
mov
xor
adc
lock
mov
lock
mov
jae
inc
imul
add
or
outsl
in
pushl
insl
lock
sbb
inc
xchg
sbb
sbb
lods
sbb
adc
xor
pushl
and
or
pop
fwait
or
or
or
mov
mov
sub
add
push
adc
adc
gs
imulb
mov
or
mov
std
test
adc
jg
push
sti
pop
dec
adc
push
sbb
xor
jl
data16
call
fucomip
mov
bound
add
mov
mov
mov
adc
push
push
push
or
or
bound
mov
not
cmp
pop
lcall
push
add
pop
mov
mov
push
negb
pop
and
adc
or
adc
and
mov
mov
mov
jecxz
or
mov
push
adc
and
cmp
mov
adc
push
xchg
pop
mov
aad
inc
cld
or
mov
jg
cli
mov
pop
out
sbb
pop
adc
mov
sti
incl
sti
fbstp
lock
add
push
sbb
ret
mov
or
outsl
xchg
xchg
loop
popa
sub
sbb
or
popa
adc
mov
push
xor
adc
fnstcw
jb
jmp
or
or
push
mov
sbb
stos
pop
add
mov
outsl
mov
push
adc
xchg
add
sbb
lret
or
fsub
ljmp
into
mov
add
adc
adc
outsl
inc
clc
mov
sbb
add
add
out
int3
in
lock
sub
lock
adc
adc
outsl
adcb
aas
dec
hlt
pop
fmull
add
call
add
mov
fnstenv
pop
add
test
sub
aaa
lods
in
fs
mov
mov
or
add
pop
pop
jg
js
insl
push
jp
test
pop
sub
mov
cmpsl
sub
push
add
mov
cs
pop
fcoms
insb
push
push
mov
pushl
and
adc
lds
scas
mov
cs
in
sbb
jmp
addb
dec
gs
sbb
mov
xchg
mov
nop
inc
adc
adc
inc
lock
cli
xorb
inc
inc
add
or
fadds
mov
outsb
add
lea
nop
adc
inc
pop
push
or
jmp
nop
add
lcall
es
sub
adc
jb
mov
add
jae
adc
pop
sub
push
jae
xor
add
jb
sarl
inc
xor
das
leave
or
mov
cmp
dec
add
sub
add
adc
lea
cmp
jbe
add
fstl
add
dec
jne
jmp
add
mov
sub
ja
add
jmp
push
pop
push
mov
jmp
call
add
mov
dec
add
or
rclb
les
clc
sub
mov
cmp
cld
add
and
fildl
lea
mov
xchg
mov
xchg
dec
or
mov
outsl
sbb
stos
mov
push
inc
mov
push
mov
cmp
mov
add
jmp
popa
mov
or
xchg
lea
or
sbb
cmp
ja
add
mov
jns
jns
jmp
jne
test
mov
xchg
mov
mov
je
inc
fsubs
mov
adc
pop
int
cwtl
adc
push
aaa
fstl
adc
mov
or
sarb
xor
rorl
addb
es
xor
pop
sbb
movsb
jne
andps
dec
inc
mov
dec
inc
dec
outsb
inc
dec
dec
test
add
push
dec
jnp
lock
add
dec
inc
adc
or
int3
xorb
or
cmp
or
or
inc
or
out
push
gs
inc
mov
xor
jbe
mov
inc
sub
inc
inc
adc
insl
push
repnz
push
inc
gs
pop
cmp
mov
pop
add
cmpl
add
mov
sbb
cwtl
shll
add
adc
cmpsb
jmp
lret
add
dec
adc
or
icebp
jmp
dec
inc
push
insb
jne
add
ljmp
popf
rcll
mov
jg
loopne
pop
xor
bound
add
js
insb
jo
adc
das
jo
outsl
add
or
pusha
addl
add
push
loopne
inc
and
loopne
sbb
pushf
sbb
inc
sub
and
push
xchg
or
out
jne
out
or
mov
pop
fcmovnbe
jne
icebp
add
mov
pop
lahf
push
push
mov
mov
cmp
scas
add
dec
arpl
insb
cmp
dec
pop
xchg
addr16
cmp
add
stc
das
scas
jmp
outsb
cmp
sub
pop
mov
mov
pop
xlat
adc
inc
cmp
or
cs
pop
cmc
xchg
lods
add
push
out
shr
dec
cmp
or
pop
in
mov
cmpxchg
lcall
inc
inc
xlat
pop
jg
int3
xor
inc
push
inc
push
decl
mov
daa
imul
xadd
clc
cmp
imul
pop
inc
lods
gs
dec
insl
jo
movsl
fdivl
xor
int
mov
pop
mov
jge
dec
dec
outsl
fs
sbb
push
dec
icebp
dec
pop
xlat
jne
incb
call
xlat
jne
ja
gs
inc
adc
jne
xorb
inc
cltd
mov
dec
ja
ret
inc
scas
pop
movmskps
cmp
xor
roll
inc
jbe
mov
add
push
sbb
and
xor
xor
and
outsb
inc
arpl
repz
add
fcoml
pop
gs
cltd
or
imul
xchg
add
xchg
roll
mov
popa
and
xor
inc
xor
mov
cli
popa
insb
push
mov
pop
sbb
adc
aaa
jp
jne
inc
pcmpgtb
inc
push
lds
jle
subb
add
jge
fstp
mov
inc
je
adc
insb
lea
outsl
jb
sub
mov
xchg
inc
arpl
jo
dec
aaa
fldln2
or
addr16
xor
adc
pop
sti
mov
sarl
sahf
jo
and
pop
neg
xlat
pop
sub
sub
xorl
pop
mov
je
jb
inc
adc
jo
int3
inc
mov
jo
jno
or
adc
sarl
sub
dec
pop
insl
data16
mov
roll
hlt
pop
inc
xchg
lret
iret
or
mov
gs
add
popa
dec
fldl
fcmovnu
jns
inc
adc
or
imul
pop
test
fs
sub
pop
add
cmp
mov
sti
mov
mov
arpl
cs
stos
scas
pop
xchg
jae
dec
push
scas
and
xorb
rcrb
nop
mov
jne
xchg
out
mov
cmp
push
adc
jbe
cltd
jecxz
bound
add
mov
in
mov
or
rclb
jnp
push
test
cmp
cmpsl
dec
dec
push
gs
jae
add
inc
subb
or
or
dec
add
ja
insl
leave
dec
mov
orb
jns
bound
sub
outsl
outsl
imul
ja
ret
xor
add
jmp
loope
loope
popa
and
and
cmp
sbb
sbb
das
jne
push
das
insb
inc
mov
in
push
arpl
cmp
mov
lods
ss
insb
mov
outsb
mov
add
sub
and
jb
inc
push
jbe
stos
or
inc
add
push
aam
test
or
push
cmp
bound
push
cmp
mov
das
js
xor
xor
jb
sbb
ret
mov
pop
push
pop
fdivl
jg
ret
jbe
xor
rclb
sub
cmp
xchg
and
ss
outsl
dec
pushf
xchg
dec
in
adc
faddl
les
js
push
add
pop
jae
repnz
les
loope
sub
dec
push
inc
pop
xor
mov
das
mov
mov
jae
insl
imul
dec
jp
lea
mov
push
jge
pop
jnp
sti
mov
stos
sub
pusha
xor
sets
das
add
pop
jno
add
dec
and
sbb
sbb
xor
jno
xor
mov
arpl
bound
push
mov
loopne
push
mov
jp
cs
pop
fisubl
nop
mov
or
xor
xor
and
sbb
or
pop
inc
sbb
push
mov
imul
push
out
scas
shll
pop
cmpsb
push
rcrb
dec
dec
fs
pop
and
js
xlat
xchg
jl
sub
sub
sbb
es
push
clc
push
xchg
jb
addps
movsl
lcall
enter
mov
inc
xlat
loopne
out
dec
pop
jle
sarl
imul
addr16
xor
in
push
nop
add
cli
fdiv
dec
pop
cmp
push
and
call
push
daa
pop
daa
dec
sti
push
loop
or
mov
xor
jne
cmp
outsb
imul
ret
out
loope
fs
aas
cltd
lcall
push
pop
dec
cld
test
sbb
test
nop
shrl
lcall
mov
sarb
pop
sbb
testl
mov
ds
xchg
sbb
sarl
rclb
dec
addr16
sub
adc
in
pop
popa
pop
jne
jg
arpl
push
gs
or
fadds
fdivs
push
notl
rorl
mov
mov
pop
out
cmp
scas
popa
xchg
jnp
stc
or
sbb
xchg
sub
pop
out
jmp
jo
popa
in
xor
push
jns
add
mov
xchg
jno
push
mov
es
pop
es
xor
dec
scas
mov
sbb
pop
sub
jae
or
xorl
stc
mov
lods
cmp
inc
jne
jge
dec
jb
fnsave
xchg
mov
xlat
pusha
call
push
jne
aaa
fcom
add
jb
outsb
push
dec
mov
fs
cmp
xor
outsl
pop
sbb
mov
pop
add
mov
cmp
dec
dec
xchg
or
insl
mov
xor
nop
xchg
gs
inc
pop
jno
loop
or
fisubl
jg
pop
test
pop
push
push
dec
movsl
xor
cmp
sub
rolb
mov
aas
add
xor
insb
mov
push
mov
push
push
in
flds
fs
push
lods
and
mov
mov
std
pop
imul
or
mov
es
push
in
sbb
mov
dec
pop
push
mov
xor
mov
movsl
movsb
xchg
mov
aas
push
shrb
aad
in
pushf
pop
mov
add
dec
jge
ret
pop
cs
stos
loop
lock
scas
push
iret
divb
dec
add
imul
hlt
and
and
push
mov
and
push
jnp
lds
lods
outsb
addb
arpl
pop
ret
cmp
inc
xlat
dec
imul
push
pop
xlat
mov
int3
orb
add
sbb
fs
pop
pop
movsb
pop
adc
inc
push
mov
add
and
dec
xor
push
mov
inc
pop
sti
add
lret
ficompl
xlat
aam
adc
pop
pop
push
and
insl
jo
sub
out
enter
stos
jne
xlat
jne
lcall
pmulhw
insl
ret
rcr
push
jg
mov
test
cli
jmp
push
pop
adc
je
add
adc
push
inc
cmp
jae
lock
xlat
aad
push
stos
outsb
incl
cmp
out
es
pusha
fadds
mulb
jb
push
jne
mov
nop
repz
pop
xor
sub
test
dec
movsb
out
adc
rcrl
mulb
sbb
push
add
push
mov
mov
add
sbb
jb
xchg
and
jae
or
mov
scas
push
mov
xchg
xchg
ret
sbb
jb
xor
aas
nop
jmp
ljmp
mov
ja
xchg
xchg
lods
inc
mov
xchg
outsl
xchg
adc
xor
imull
int3
cs
imul
and
pop
sub
mov
push
jns
sbb
adc
adc
mov
rclb
jle
pop
jne
xor
jl
mov
arpl
xorb
nop
fidivrl
add
xchg
dec
dec
jg
orb
cmp
leave
push
arpl
cmp
pop
xor
mov
outsb
push
out
repz
add
test
arpl
or
movb
mov
inc
inc
mov
js
pop
xchg
pop
push
push
rorl
jns
ret
adc
jo
dec
loope
cmp
notl
push
mov
push
dec
insl
lods
lea
scas
dec
cmpsb
lock
add
dec
sub
call
aaa
or
popa
arpl
je
jbe
and
andb
orb
mov
mov
out
pop
add
adc
push
fs
sub
daa
push
jae
mov
mov
aad
arpl
and
fsubl
outsb
xlat
roll
jo
mov
pop
add
pop
sbb
fsts
inc
dec
ret
dec
jl
imul
rcrb
fbstp
imul
pop
add
lock
push
jo
lds
xor
jb
ja
not
mov
das
xor
insb
aas
and
or
shrl
xor
pop
xchg
dec
inc
scas
mov
sub
cmpsl
push
adc
or
cmpsb
sbb
add
push
jbe
push
add
push
push
push
xor
faddl
lcall
add
inc
add
arpl
or
adc
pop
popl
mov
scas
pushaw
adc
mov
out
add
loopne
mov
jb
mov
dec
push
and
push
push
mov
cmpsb
xchg
inc
adc
mov
iret
inc
xchg
xchg
xchg
and
dec
popa
jle
call
mov
jo
mov
into
addb
ss
xchg
mov
xchg
jbe
sbb
push
xor
mov
outsl
ss
popl
push
add
xchg
imul
push
dec
pusha
pushf
nop
fmull
xchg
jns
dec
das
movl
scas
outsb
stos
dec
out
mov
ret
lea
fdivl
shlb
push
dec
sub
call
and
aad
divb
fs
loopne
push
imul
popf
imul
insl
in
rorb
lcall
xchg
sbb
jmp
rclb
not
and
pop
or
cmp
mov
xchg
fnstsw
pop
cltd
inc
push
dec
push
sub
fidivl
fimuls
outsb
pop
sbb
xchg
js
in
adc
nop
mull
ds
je
dec
subps
ss
test
mov
cld
jno
lret
inc
pop
sbb
and
std
es
fs
push
jae
and
dec
xchg
jmp
jne
cmpl
sbb
push
arpl
push
andb
add
imul
mov
or
inc
cmp
add
lods
bound
add
aaa
mov
push
popa
mov
xchg
mov
add
addb
movb
js
or
pop
and
loop
movsb
mov
icebp
in
aam
shl
adc
mov
leave
mov
loope
inc
inc
xlat
add
mov
lods
push
mov
test
jns
push
pmuludq
sbb
daa
adc
inc
inc
cmpsl
in
mov
mov
jae
les
mov
mov
mov
mov
lods
jo
bound
sbb
mov
or
outsb
jl
or
dec
push
and
sub
pop
xlat
mov
mov
jbe
outsb
mov
aam
fwait
pop
jbe
dec
fidivrl
lods
sub
repz
add
int
fsubrl
jne
aaa
add
add
add
dec
push
lods
fstpt
in
aad
test
adc
add
lcall
sahf
out
and
add
add
and
inc
xchg
lods
add
xchg
repnz
lcall
test
test
inc
dec
lock
sbb
xchg
imul
or
int
fidivs
bound
dec
and
jmp
ret
mov
fstl
jno
pop
je
aam
and
mov
add
rol
stos
push
ss
pop
mov
mov
mov
cmpsl
ljmp
xchg
lret
inc
clc
andl
jbe
movsl
out
jb
je
aas
movsb
mov
fidivrl
test
inc
les
cs
or
out
insl
shll
xchg
mov
pop
mov
and
and
jne
popa
mov
sub
scas
add
and
das
lea
pop
and
ljmp
ds
lret
pop
pop
mov
inc
fbld
fwait
mov
cmp
mov
mov
movsb
jo
testb
int3
ret
and
leave
xchg
ja
and
cld
pop
fldl
mov
aaa
fistpl
xor
movsb
insb
mov
mov
inc
adcl
mov
cli
xlat
add
sbb
lcall
int3
scas
and
pop
push
popf
jmp
subl
insl
mull
mov
mov
mov
call
mov
dec
mov
aad
shll
std
jo
jo
jno
repz
imull
call
insl
jne
jecxz
sub
aam
add
jg
movsb
scas
jmp
or
xor
test
mov
pusha
add
lcall
bound
movsl
es
ja
mov
insb
call
lret
outsl
adc
pop
and
mov
jbe
mov
inc
ret
ret
lcall
inc
pop
mov
pop
cmp
ja
lods
inc
add
cs
cmp
aas
out
or
fs
pop
js
sbb
jae
mov
mov
pushf
inc
dec
das
sbb
xchg
pop
insb
jmp
push
outsb
rdpmc
aaa
push
shll
daa
data16
adc
add
mov
dec
jg
pusha
and
xor
gs
das
jb
mov
or
inc
and
shll
dec
or
xor
dec
pop
and
nop
test
or
bound
adc
dec
jecxz
stos
adc
fwait
mov
fidivl
sahf
or
aad
pushf
mov
popa
in
push
xlat
lock
repnz
arpl
pop
cs
xchg
inc
mov
pop
mov
stos
movsb
inc
mov
rclb
test
mov
mov
jge
mov
fstl
or
inc
xor
mov
cmp
bound
cmpsb
mov
push
out
xchg
mov
mov
xchg
cmp
mov
add
jmp
outsb
stos
sahf
lds
cmp
inc
and
lods
xor
inc
inc
xor
jge
mov
orb
sub
fisubs
xlat
push
pop
ret
stos
mov
xlat
aad
jmp
adc
mov
dec
and
inc
mov
jb
xor
fs
pop
mov
lahf
xchg
mov
fidivrs
push
push
shl
loop,pn
insb
in
mov
out
mov
mov
inc
loop
xorl
cs
pop
sbb
pop
xor
das
loop
aam
lret
popf
adc
insb
xchg
ret
fidivl
or
shlb
stos
fs
xchg
pop
mov
and
test
arpl
test
rclb
hlt
or
aam
test
add
inc
aaa
test
inc
stos
sub
subl
add
sub
scas
push
ret
aad
jecxz
test
shlb
mov
in
xor
sbb
add
popa
in
pop
stos
and
outsl
scas
xchg
xchg
sarl
adcl
ljmp
or
dec
push
add
rcrb
mov
mov
mov
sub
stos
push
inc
rorl
mov
flds
jbe
and
mov
dec
or
push
xlat
jbe
or
xlat
icebp
les
aam
movl
outsl
test
pop
in
lcall
aad
popa
sub
shll
je
adc
lret
mov
ljmp
jmp
xchg
mov
jecxz
sub
mov
or
adc
sahf
addl
jo
push
cmpsb
bswap
adc
scas
jmp
or
aad
ror
sub
inc
pop
jnp
push
sub
insl
lods
shr
leave
lcall
sbb
add
add
fs
inc
add
add
aaa
sub
arpl
pop
cmpsl
or
jns
and
add
ss
in
add
add
mov
or
adc
sbb
and
xor
inc
add
sbb
mov
jae
arpl
out
jnp
xlat
or
sub
or
jecxz
mov
inc
add
and
incl
decl
lcall
aas
jg
or
fistl
add
adc
testl
dec
vmaxss
lds
out
dec
in
inc
leave
std
lret
or
mov
or
mov
jne
jbe
pop
les
or
roll
ret
mov
popa
xlat
mov
lret
les
xor
inc
cwtl
int
sbb
xchg
imul
and
jmp
leave
out
imul
rol
jmp
fdivrs
jnp
addl
pop
push
xlat
mov
cmpsl
leave
cmp
xor
out
iret
outsb
xchg
jbe
aaa
adc
aas
and
cmc
sbb
jbe
mov
aas
lds
cmpsl
dec
pop
scas
jmp
scas
and
adc
pop
test
mov
xlat
test
fisubrl
inc
push
xlat
jne
aad
int
lret
dec
mov
pop
fidivl
lret
lret
sarb
dec
xlat
aas
in
and
inc
add
int3
xchg
sbb
jecxz
sbb
je
not
cmp
test
movntq
outsb
int
xchg
sub
repz
jecxz
in
outsb
lret
xor
pop
enter
xor
fcompl
mov
sub
add
fldl
dec
push
sbb
daa
loope
mov
orb
loopne
loop
sbb
mov
add
stos
loopne
adc
fcmovnb
ficoms
aaa
jae
mov
fiadds
or
adc
xchg
fistl
loopne
fst
outsb
out
pop
loope
fisttpll
subl
rcrl
or
add
ljmp
dec
add
imul
pop
ss
fldl
fs
add
sub
mov
daa
jl
xchg
in
pop
xchg
sti
call
xchg
mov
ds
hlt
lock
mov
cmp
loopne
xchg
push
rcr
inc
call
cmpsl
jnp
incb
int
add
idivl
mov
push
inc
sbb
or
inc
jg
jle
mov
in
pop
xor
push
inc
std
shr
adc
fwait
lret
sbb
pop
loop
sbb
xor
mov
ss
add
fsub
das
jg
push
popa
mov
xchg
test
cld
pop
gs
imul
mov
out
out
jo
ljmp
add
aas
insl
call
adc
pop
loopne
adc
in
faddl
pop
js
sub
adc
adc
out
or
arpl
call
arpl
pop
pop
out
out
out
insl
call
push
loopne
ljmp
pop
or
out
stos
or
das
sbb
push
in
xchg
xchg
sbb
ljmp
jnp
jg
lret
out
xor
xchg
loope
stos
in
cld
pop
iret
ljmp
outsb
in
jecxz
mov
bound
scas
out
lret
xorb
ljmp
add
push
sub
insl
cmpsb
mov
inc
cld
add
fdivs
cli
fsubrs
jnp
xor
bound
cmp
sub
sub
sub
xor
sub
cmp
adc
adc
insb
jle
jp,pt
fdivl
outsw
cmpsb
push
dec
pop
xor
arpl
sub
push
test
negb
mov
inc
icebp
aas
sbb
outsw
jne
pop
mov
dec
roll
stos
jbe
std
cmp
pop
jnp
inc
cmp
inc
inc
adc
popa
xor
shlb
pop
sti
fildll
cmp
or
cmp
inc
ss
or
pop
push
hlt
addl
call
icebp
imul
sub
push
cmc
pop
sbb
push
xchg
jne
insb
fs
and
push
adc
and
cli
pop
xor
aaa
adc
mov
jnp
inc
inc
inc
xor
xor
sub
sub
inc
inc
xor
enter
scas
popl
mov
jnp
mov
mov
inc
mov
inc
mov
pop
push
pusha
cmp
faddp
testl
je
xchg
inc
aad
or
xor
in
insl
in
inc
rcrl
lahf
inc
inc
cmp
xor
fldt
jle
inc
cmpl
data16
ret
outsl
ljmp
cmp
fistl
xor
lds
mov
into
in
push
xchg
mov
pop
jnp
arpl
aaa
icebp
xor
in
pop
bound
fs
push
xor
xor
cmp
es
xor
lahf
mov
dec
and
fistpl
jp
cmp
xor
inc
popa
imul
cmp
shlb
xor
std
inc
inc
xor
fwait
add
pop
sbb
inc
data16
popf
dec
movsl
imul
ss
jo
jge
xor
mov
daa
ss
xor
pop
js
mov
xor
inc
jno
inc
das
sub
fs
addr16
mov
test
mov
test
mov
mov
aad
test
add
sbb
adc
arpl
in
call
xor
mov
loope
xor
adc
insl
lea
scas
fs
ss
shrb
sub
xor
faddl
sub
push
pop
fsubl
dec
subl
js
adc
in
outsb
imul
lock
cmp
inc
cmp
cmp
sub
icebp
test
xor
cmp
lahf
xor
insb
inc
ss
inc
xor
add
in
push
add
inc
sub
add
mov
add
mulb
outsl
es
jo
jo
popf
hlt
mov
int
and
or
subl
adcl
jl
sbb
pop
lds
lea
arpl
jnp
sti
cs
xor
cs
xor
mov
lods
leave
ss
inc
popa
and
ss
imul
icebp
inc
dec
inc
loope
std
inc
leave
es
xor
push
sbb
das
pop
retw
cmc
push
sub
and
gs
mov
xchg
xor
cmpsb
mov
cmp
in
jae
fisttpll
shlw
insl
dec
addr16
add
outsl
xor
push
inc
jns
jp
mov
inc
adc
push
mov
xor
je
rcll
cmpl
popa
push
insl
mov
fs
sbb
mov
inc
mov
mov
data16
sub
movsl
movb
enter
sbb
lods
and
cmc
outsl
hlt
imul
ficoms
insl
shl
push
sarb
pop
jge
add
popf
adc
ja
imul
pop
data16
imul
cs
imul
adc
jl
add
arpl
push
test
inc
fsubs
insb
addr16
fldl
mov
mov
bndstx
in
inc
mov
inc
mov
cmp
xchg
mov
mov
leave
mov
mov
sub
jge
insl
mov
push
jno
cli
invd
ret
cmp
js
ss
mov
mov
movsb
cmp
push
mov
pushf
jbe
shl
movsb
xor
inc
pop
ret
mov
inc
inc
xor
out
or
or
xchg
xor
inc
adc
inc
sarb
imul
je
add
mov
lahf
sub
xchg
xor
insl
bound
popa
shlb
ret
loopne
jl
aaa
bound
jns
icebp
and
inc
push
rolb
orb
and
mov
loope
outsl
jbe
jb
or
pop
push
push
mov
mov
add
inc
dec
loop
add
xchg
ret
or
das
fdivrs
into
loopne
xor
dec
jno
xor
test
lods
sub
xor
mov
lds
jge
lods
mov
aaa
add
jo
xor
inc
xor
jo
xor
movsl
xchg
dec
add
repnz
xchg
scas
lods
rorb
jb
or
cltd
or
arpl
cwtl
mov
adc
push
xor
pusha
bound
push
dec
mov
inc
aas
shlb
xor
xor
inc
lea
xor
lret
push
inc
and
add
xor
add
fistl
dec
xor
adc
mov
hlt
pop
xor
dec
and
mov
add
pop
insl
mov
lock
xchg
es
jp
divl
add
or
add
mov
outsl
outsb
pop
inc
or
bound
pop
push
sbb
repz
xor
or
rcrl
adc
movsb
scas
pop
dec
fcompl
and
fwait
arpl
xor
inc
push
in
sub
xorb
jnp
insb
push
movsl
mov
xor
xor
or
and
int
mov
add
or
inc
mov
add
ds
push
mov
or
xor
push
mov
inc
out
inc
inc
jmp
ljmp
add
mov
outsl
cmc
add
pop
ret
mov
pop
popf
leave
inc
mov
inc
xor
jo
fldl
std
out
mov
inc
test
add
lret
xchg
inc
add
dec
sbb
inc
stos
or
push
les
js
gs
push
push
mov
inc
jecxz
lea
stos
cwtl
push
ret
jg
cmpsl
scas
inc
and
jae
push
cmpb
fisubl
dec
sbb
push
shrl
dec
xchg
xor
pop
loope
cmp
mov
in
mov
push
and
ret
aaa
jg
push
push
add
mov
mov
xchg
loopne
mov
inc
imull
mov
add
dec
insl
mov
add
mov
mov
cmp
inc
mov
xor
jge
cmp
ljmp
fwait
icebp
cs
push
pop
dec
inc
pop
and
cmp
sub
gs
and
inc
gs
cmp
mov
lcall
mov
cmpsl
mov
dec
mov
pushw
fidivl
in
push
adc
mov
cmp
cmpsl
jno
sub
enter
dec
hlt
mov
out
cmp
popa
loope
rorb
out
pop
inc
shll
xor
sub
daa
dec
mov
or
inc
cmp
xchg
ficoml
xor
lods
push
and
push
outsb
sub
shlb
xor
test
push
inc
xchg
xor
cmp
dec
dec
inc
dec
push
push
pop
push
pusha
inc
aaa
es
ds
js
cwtl
jne
pop
pop
lcall
dec
mov
stos
subl
rolb
add
xor
movsl
testl
bound
inc
scas
ds
add
cmp
xor
hlt
sarb
mov
dec
dec
inc
dec
add
push
add
push
sub
inc
jns
adc
test
addb
lea
lods
xor
or
pop
sbb
outsb
pop
mov
push
jb
xchg
orb
imul
mov
out
xor
je
or
jle
jle
push
dec
mov
mov
fisttpl
push
inc
push
mov
outsb
push
das
addl
cmp
insl
js
xchg
repnz
dec
int
mov
roll
sub
lds
sub
cmp
push
jbe,pn
mov
fisubl
push
and
adc
jns
add
lea
fwait
or
imul
rcl
inc
fildl
and
fildl
ljmp
cmp
filds
repz
roll
add
es
cmpsb
dec
mov
push
popa
sub
inc
xchg
dec
add
cmp
add
enter
mov
and
push
mull
loope
or
loopne
and
add
inc
or
ret
mov
bound
popa
outsl
test
arpl
insb
push
inc
scas
test
repnz
dec
sub
and
jo
add
or
pop
dec
xor
out
movnti
pushf
or
cltd
outsl
ret
fnstenv
xor
iret
add
sub
pop
ss
fldl
movsb
inc
sub
cmp
add
stos
add
mov
pop
hlt
loope
je
mov
aas
mov
fmull
repz
xchg
xor
addl
mov
xor
pusha
in
xor
pop
inc
push
cmp
loopne
in
sbb
jae
add
stos
adc
add
push
dec
cmc
fistpl
jae
jne
jae
mov
xchg
inc
pop
cmp
pusha
add
pop
push
push
or
sarl
add
aad
xor
and
xchg
cwtl
mov
inc
test
push
cmpb
inc
inc
xor
pop
push
sahf
push
push
push
inc
push
es
test
pusha
imul
loop
or
jp
insl
lods
aaa
xorb
inc
dec
push
icebp
filds
lock
mov
push
cs
int
xor
xchg
sarb
outsl
popa
sub
xchg
and
arpl
jbe
xchg
push
das
stc
imul
and
dec
int
sub
adc
outsl
lahf
jo
mov
jmp
int
hlt
xchg
inc
mov
push
hlt
inc
repz
outsl
test
rclb
mov
inc
mov
dec
push
add
dec
and
add
sub
push
xchg
xor
adc
aam
mov
or
add
inc
popa
or
in
or
cmp
lods
inc
sub
icebp
imul
xchg
dec
mov
jno
ja
mov
xor
inc
or
pop
mov
xor
add
orb
pusha
notl
insb
pop
stos
pop
sub
jae
xchg
cmpb
repz
pop
mov
mov
test
add
loop
push
pop
sbb
lret
inc
test
push
in
add
add
jne
add
push
jecxz
cmp
or
xor
cli
xor
roll
lcall
adc
adcl
into
sbbb
pop
jmp
ret
popa
insl
jbe
clc
mov
insl
pop
inc
pop
xchg
pop
push
scas
int
jne
jno
cmp
cmp
pop
lret
jp
mov
sti
pop
sub
imul
shrb
ja
imul
or
pushl
fldcw
mov
jmp
pop
adc
inc
or
sbb
or
pop
shll
add
pop
mov
sub
push
les
mov
xor
cmp
push
push
data16
jb
and
add
repnz
xor
pop
xor
sbb
dec
xorb
dec
lods
add
clc
pop
inc
push
inc
inc
ljmp
popf
ret
mov
shll
add
into
pop
and
aam
jo
cmp
mov
je
pop
aaa
jge
and
mov
inc
jns
sub
mov
mov
and
add
icebp
xchg
aam
or
sub
test
loopne
idiv
subb
adcb
jnp
faddl
pop
cltd
inc
fs
ss
xchg
lret
or
aam
mov
ss
hlt
rcr
ja
mov
inc
cs
pop
sbb
cmpl
adc
mov
push
add
pusha
mov
jnp
xchg
pop
test
push
inc
add
or
out
add
mov
and
ss
push
pop
inc
xor
xchg
and
and
push
test
add
inc
rcll
sub
or
ficompl
or
push
jge
addr16
jge
pop
rolb
mov
add
xor
in
loope
jnp
outsb
roll
imul
test
push
fs
movsb
mov
push
scas
std
xchg
pusha
push
rorb
xchg
fidivrl
cwtl
or
lcall
les
mov
or
push
jge
ficoml
mov
and
mov
sub
rcrl
aad
popa
xor
mov
imul
sub
paddb
clc
jne
stos
js
add
jle
arpl
lock
inc
and
mov
xor
add
push
inc
dec
inc
push
fldl
imul
xor
ja
lock
pop
add
divb
add
mov
and
sub
cmp
cmp
cmp
in
loop
icebp
cmp
jns
jmp
inc
sub
or
sub
xor
and
inc
mov
inc
inc
inc
inc
xor
sbb
aad
inc
mov
xor
sub
stos
mov
pop
sub
sub
pop
mov
pop
sub
lds
shlb
inc
ret
push
cmp
rcll
test
xor
subl
cmp
xor
rorl
js
inc
add
dec
jo
adcl
jb
jle
mov
inc
pop
sub
push
and
ds
or
adc
sub
push
outsb
xor
inc
sub
adc
mov
jae
inc
sub
push
push
and
sbb
lods
or
cld
fs
mov
rolb
mov
cwtl
loopne
pop
popa
or
lcall
add
xchg
test
shl
scas
lcall
or
dec
cs
xor
push
pusha
mov
mov
lret
outsb
jns
aaa
and
dec
flds
fs
push
dec
stos
pop
lcall
or
loop
jne
hlt
or
or
or
test
adc
xchg
adc
or
mov
ja
jnp
ljmpw
outsb
and
ret
outsl
add
sub
add
add
fistpl
push
jo
les
adc
mov
sbb
pop
sahf
or
add
fcmovnbe
or
mov
jmp
in
xor
add
dec
adc
ljmp
xor
xor
xchg
xor
add
cs
adc
push
xchg
dec
inc
pop
aad
inc
push
inc
mov
rolb
lods
lcall
xchg
fldt
mov
xchg
push
lcall
aad
push
push
insb
adc
pusha
inc
out
arpl
lods
adc
sbb
fiaddl
data16
cmp
inc
sbbb
cmp
jae
or
and
lds
nop
sbb
test
cmp
sub
jo
xor
pop
mov
inc
lret
je
sahf
push
nop
dec
mov
cli
and
dec
test
jne
push
push
jae
incb
inc
sub
movsb
sub
mov
ret
add
pop
leave
xchg
or
nop
or
je
sbb
push
or
mov
mov
add
inc
or
xor
mov
xor
mov
pop
insl
cmp
pop
sub
mov
sub
fiaddl
or
jae
aam
lods
das
pand
ret
enter
push
jp
dec
jl
fs
xchg
pop
inc
jb
mov
pushf
inc
inc
xor
xor
inc
bound
add
sub
rorl
xchg
or
or
cmp
imul
lahf
inc
pop
dec
je
mov
mov
or
pop
rcl
jbe
xchg
cmp
and
push
push
mov
or
lea
cmp
out
push
xor
inc
inc
mov
mov
xchg
xor
dec
xor
movb
mov
ss
inc
insl
push
test
movsl
dec
mov
inc
push
jbe
xor
dec
add
push
cmpsl
inc
sub
popa
inc
mov
iret
jae
add
adc
mov
add
jnp
mov
push
xchg
inc
xor
push
mov
ss
xor
pop
mov
jnp
xor
add
popa
add
popa
add
imul
fimull
inc
imul
jne
add
adc
jae
jae
adc
rolb
cmp
sbb
or
lea
or
adc
jge
jp
sti
push
adc
imul
cmp
inc
test
and
mov
push
nop
add
test
movsl
test
mov
lea
add
shrb
lock
sub
nop
addb
mov
adc
sbb
loope
or
cmp
adc
inc
imul
rcl
inc
fsubl
add
push
in
int3
xor
mov
testb
push
jo
dec
rcrl
cwtl
mov
test
bound
ret
mov
bound
lods
inc
scas
push
pop
ljmp
jns
rclb
lret
and
out
dec
push
push
push
imul
out
es
test
inc
adc
xchg
addb
adc
and
pop
lcall
test
inc
and
fwait
loopne
xor
mov
mov
xchg
fcompl
adc
lea
pop
and
or
adc
push
and
dec
bound
imul
xchg
fiaddl
push
mov
and
mov
les
sub
mov
mov
inc
pop
jl
pop
mov
mov
loop
cltd
push
movb
lea
mov
jno
adc
mov
inc
inc
out
mov
sbb
cmp
cmp
sbb
xchg
sbb
and
loopne
mov
adc
jo
pop
adc
shlb
add
inc
mov
push
cmc
mov
popf
subl
inc
and
mov
cwtl
inc
jp
lldt
sbb
arpl
adc
js
add
ss
in
xchg
mov
mov
pop
divl
orl
test
jne
push
xor
mov
nop
mov
in
fisttps
pop
repnz
pop
mov
jle
mov
fs
jg
dec
ud2
jns
das
mov
pop
clc
inc
pop
enter
adc
add
xlat
dec
outsl
xchg
cmp
jg
push
movsl
or
pop
mov
je
repnz
pop
fdivrs
setnp
test
hlt
mov
imull
sbb
nop
pop
fwait
xchg
js
mov
add
lahf
ret
vmwrite
in
mov
iret
mov
bt
inc
pop
enter
jno
mov
dec
psadbw
fdivrs
jae
xchg
or
stos
movq
mov
fistpll
ud2
jns
das
mov
imul
das
arpl
inc
pop
fsubrs
jl
pop
fcoms
fbstp
xor
stc
fbld
jecxz
mov
mov
int
insb
mov
inc
xchg
jle
dec
in
push
fcoms
or
xor
mov
rclb
jae
add
jno
pop
das
in
test
test
dec
sbb
jmp
or
jns
lret
or
xor
mov
daa
mov
mov
jnp
dec
pop
mov
and
mov
orb
and
insb
rclb
xchg
mov
jnp
outsb
aam
sub
inc
or
gs
xor
cmp
mov
add
add
add
and
add
and
xor
add
add
and
add
add
add
and
add
and
xor
add
mov
ret
lahf
or
pop
repnz
mov
or
pop
mov
xchg
or
popf
mov
or
xchg
mov
sub
das
cmp
jl
jno
repnz
xchg
mov
xchg
cmpb
pop
mov
mov
add
push
cltd
mov
push
insb
shlb
pop
lret
inc
flds
mov
mov
iret
or
and
pushf
aas
imul
push
loop
mov
addr16
lret
push
or
test
or
in
das
jnp
mov
andl
jmp
test
xchg
leave
lret
push
in
sahf
inc
pop
cmp
popf
mov
test
cmp
mov
pop
mov
adcl
int
adc
jb
jae
xor
push
cld
inc
lock
xor
je
icebp
sub
push
lods
push
pop
jno
jb
add
add
sub
rolb
rol
adc
mov
cwtl
sahf
arpl
add
outsl
pop
add
jno
inc
pop
jne
and
jno
movsb
dec
add
and
inc
and
rolb
xchg
das
inc
mov
test
push
and
jo
xchg
lock
nop
movsb
cwtl
adc
ss
add
push
jl
ss
xor
inc
cmp
xchg
dec
hlt
push
or
cmpl
les
fwait
pop
icebp
inc
add
inc
push
sbb
ljmp
inc
inc
jl
loopne
fyl2x
or
test
sbb
pop
or
icebp
sub
jnp
test
sti
popf
push
bound
pop
test
ja
imul
orl
clc
fstpt
mov
cmpsb
movsl
mov
bound
test
lods
mov
inc
jae
outsb
inc
imul
mov
inc
mov
cwtl
inc
xor
divb
inc
xor
je
ss
dec
lods
test
ret
push
fdivl
sbb
dec
outsb
test
mov
mov
mov
pop
gs
stos
dec
add
and
bound
add
movsb
orl
push
jl
add
sub
ljmp
push
mov
dec
inc
inc
pop
je
arpl
jle
add
pusha
pusha
lds
push
push
push
ljmp
sbb
push
out
push
ss
xorl
xor
pop
jb
add
aam
sub
or
add
cmp
inc
or
and
inc
cmp
mov
and
aas
ljmp
or
jo
test
or
roll
lods
jnp
mov
inc
dec
xor
cmp
jbe
or
js
inc
inc
xor
xor
pop
rcr
enter
aaa
add
add
inc
es
or
sub
add
rolb
add
pop
add
pop
rolb
jecxz
xorl
add
push
popa
or
insl
xchg
pop
sub
mov
imul
xor
cmp
fsubrs
mov
sub
add
dec
pop
jb
popa
sub
cltd
sub
fsubrs
movsl
flds
push
sub
xor
pop
scas
test
inc
repnz
cmpsb
xor
cld
mov
or
inc
mov
push
xchg
mov
sub
ds
dec
push
pop
xor
inc
or
add
fiaddl
fisubrl
or
adc
shll
xor
xchg
mov
xorb
mov
inc
pusha
add
mov
add
xor
rcrl
inc
inc
sub
scas
inc
xchg
jns
cmc
inc
add
inc
sub
add
pop
test
adc
call
jae
inc
jne
sbb
xchg
push
pop
lcall
push
enter
push
scas
inc
fsubrs
inc
sbb
push
cmp
jns
or
mov
push
adc
repnz
push
sbb
cmp
add
push
push
insl
pop
mov
mov
inc
xor
xchg
or
icebp
cli
jbe
push
hlt
and
je
jo
jo
or
sub
add
popa
fidivl
sbb
push
or
loope
mov
fimull
jecxz
sbb
decb
push
test
pop
or
or
push
xchg
mov
dec
xchg
lcall
imul
xchg
imul
sbb
jbe
mov
jae
bound
pop
arpl
ret
insb
scas
pop
fnstcw
push
scas
cmp
mov
pop
xchg
inc
xchg
xor
rclb
mov
adc
cmp
outsb
xchg
mov
test
dec
inc
movsb
push
cli
sub
mov
sub
fucomp
xor
inc
nop
and
inc
or
or
rcrb
sub
add
mov
adc
rol
or
xor
and
add
cmp
pop
test
mov
insl
add
or
and
inc
cmp
and
sub
adc
je
inc
mov
hlt
push
scas
mov
leave
dec
dec
dec
pop
add
orl
je
lock
fadds
test
orb
sub
inc
inc
sub
jb
popa
aaa
mov
test
inc
lods
adc
lds
shlb
les
mov
ss
jns
leave
push
xchg
cmp
shr
jnp
dec
jp
cs
add
add
dec
pop
jnp
mov
jg
mov
cs
xor
push
data16
popa
imul
leave
pushf
mov
or
pop
gs
cmp
aas
inc
jmp
push
jnp
mov
aaa
xor
sub
addr16
xchg
push
adc
xor
adc
and
or
push
ret
rolb
add
dec
sahf
insl
lret
outsl
xchg
pop
cltd
xchg
mov
and
jnp
mov
jp
lods
inc
add
adc
psllw
repnz
testl
pop
jge
jnp
xchg
inc
sahf
cmp
jmp
lds
aaa
in
lock
mov
xchg
leave
xchg
daa
dec
inc
xchg
jb
nop
cmp
arpl
leave
xchg
orl
je
mov
mov
mov
into
pop
mov
push
cmp
gs
insb
insb
pop
cwtl
in
mov
or
call
cmp
es
sahf
pop
gs
in
xchg
call
inc
pop
test
jae
data16
mov
mov
das
pop
cmp
jnp
daa
iret
push
jnp
mov
inc
pop
pushf
mov
nop
xchg
sub
xchg
daa
dec
sahf
pop
mov
jo
popf
sbb
in
ja
imul
sbbb
cld
scas
fcomps
outsb
pop
jg
xlat
mov
xor
sub
test
ja
nopl
call
and
test
rolb
jns
out
sahf
cmp
fwait
inc
pop
lcall
in
jg
pop
push
mov
xchg
xor
das
sbbl
pop
push
dec
mov
pop
loope
in
inc
sbb
xlat
jne
adc
out
mov
repnz
mov
inc
ja
sbb
push
setnp
cmp
daa
mov
mov
lods
mov
icebp
aas
xor
mov
shll
stos
jns
ret
fisttpll
cltd
mov
cmp
push
ret
sub
mov
mov
shrb
cld
sub
xchg
iret
xchg
adc
mov
pop
sbb
aas
mov
andb
jp
pop
in
dec
ja
insl
aaa
out
dec
pushf
rcl
xor
push
popa
out
pop
popf
jnp
add
xchg
in
and
pop
mov
in
or
iret
cmpsl
xchg
dec
sahf
cld
fiadds
pop
mov
cmp
and
mov
pop
ja
xorl
pop
addr16
xlat
rcr
in
fsts
xchg
test
mov
js
je
pop
lea
pop
mov
cmp
sbb
popf
or
js
mov
test
pop
xchg
nop
addr16
ja
faddl
ja
pusha
addr16
js
jns
scas
jg
jp
pop
jbe
or
ror
incl
cwtl
push
leave
xchg
daa
dec
jno
xchg
push
in
loope
dec
lea
test
push
xorl
sbb
out
add
push
ret
aas
jp
pop
lahf
sbb
or
iret
jecxz
scas
xor
daa
dec
jno
jne
daa
ja
in
and
mov
adc
filds
mov
mov
push
test
dec
sbb
or
mov
jns
insb
jg
sub
daa
dec
sahf
xorl
or
incl
sahf
or
mov
pop
lahf
movsl
push
xchg
fistpll
in
inc
pop
mov
fdivs
sahf
cmp
jnp
test
in
cwtl
pop
test
imul
pop
aas
ss
sbbl
repz
leave
mov
or
pop
mov
cmp
repnz
test
sub
xchg
fwait
icebp
xorl
jne
paddsb
ss
in
call
pop
sbb
jnp
movsl
pop
xchg
scas
inc
pop
daa
dec
sahf
cmp
sub
sub
jbe
jle
pop
pusha
dec
sahf
lea
imul
stos
mov
or
or
repz
das
les
or
sub
dec
sub
scas
lea
insb
adc
mov
test
sbb
jl
imul
inc
jp
push
divl
and
add
inc
sbb
leave
mov
pop
xorl
insb
xor
cwtl
sbb
cmpb
shlb
in
rorl
cmp
insl
andl
faddl
jp
js
sahf
or
jne
lcall
jle
in
fldenv
lahf
push
adc
xchg
clc
xlat
fldenv
sbb
pop
jns
imull
in
adc
cmp
fsubs
shll
fsubs
cmp
fs
adc
hlt
fisttps
pop
jg,pt
popa
mov
popf
pop
orb
call
ja
adc
insb
pop
jnp
mov
pop
call
andb
movsb
daa
cmp
inc
pop
outsb
nop
push
imul
mov
pop
outsl
add
imul
pushl
or
scas
push
push
addl
pop
sbb
sbb
add
in
rcrl
outsl
pop
fwait
scas
mov
push
loope
pusha
ja
pop
jo
out
mov
popl
jns
mov
sahf
pop
mov
jo
jg
ljmp
pop
mov
dec
add
mov
call
jo
add
xchg
mov
pop
push
or
fdivrs
jo
roll
mov
sub
mov
jo
and
mov
or
imul
fstl
pusha
imul
add
add
add
dec
lock
mov
inc
mov
mov
pop
adc
lds
lods
sub
or
push
adc
adc
jle
cld
popa
rolb
lea
movsb
and
js
add
pop
pop
mov
scas
jge
mov
adc
sub
pop
pop
inc
xor
add
pop
sub
aaa
ja
inc
inc
inc
adc
push
mov
jge
xor
aam
dec
inc
xor
push
add
add
add
sub
dec
scas
imul
or
add
xlat
xor
or
xchg
das
mov
and
cmp
inc
add
pusha
shlb
add
pop
xchg
jmp
frstor
pcmpgtw
loope
sti
mov
jae
add
inc
sbb
mov
inc
xor
mov
push
lret
or
es
xlat
or
pop
and
fs
scas
and
cmp
sbb
mov
das
jl
jmp
mov
jns
jo
cmp
fdivl
and
add
push
es
lock
lea
cmp
addr16
outsb
imul
or
insl
or
jne
ffreep
xchg
and
push
or
scas
pop
outsb
add
inc
and
shr
insb
inc
add
add
fld
add
fisttps
out
add
mov
outsb
lds
inc
shlb
inc
xorb
fldt
xchg
das
add
fldt
sbb
pop
imul
test
mov
mov
pop
cltd
pusha
add
cmp
mov
pop
ror
pusha
add
add
cmpsb
jne
add
dec
popa
mov
add
inc
mov
jo
xor
insb
in
add
sub
mov
call
jg
lea
fst
test
fmuls
rcrl
mov
dec
lret
popf
into
loope
adc
sti
pop
adc
pop
jne
xlat
stc
aam
push
mov
mov
fld1
fcompl
mov
in
shrb
pop
mov
mov
leave
ret
push
push
fisttpll
sbb
dec
outsl
mov
jae
faddl
addr16
jnp
or
mov
mov
fildl
cmp
arpl
cmp
rclb
das
and
mov
cmp
fistpl
in
pop
jae
rcr
cld
mov
or
into
jne
cmc
stc
sbb
inc
cmp
mov
mov
loope
jne
pop
addr16
jno
inc
cmp
aaa
rcrl
pop
mov
jl
arpl
sbb
sub
xor
pushf
es
ss
loopne
push
inc
pop
add
sar
add
pop
xor
push
xorl
outsb
xchg
push
mov
imul
ja
and
fldt
sbb
dec
cmp
sub
loop
stos
popf
and
outsb
loopne
mov
cmp
jbe
xlat
fsubrl
cmp
adc
cs
je
je
and
add
faddl
adc
or
mov
je
repnz
mov
fs
or
shlb
jo
inc
in
mov
inc
pop
enter
fcmovne
add
xor
outsl
and
mov
mov
inc
push
mov
add
cmp
lea
jp
xor
xor
movsb
cs
add
mov
sub
xor
add
sti
outsb
popf
into
in
cmpsl
pop
mov
btr
add
imul
jb
pushf
cld
push
xor
and
fdiv
ficomps
add
mov
out
add
popf
mov
sub
xchg
inc
push
push
repnz
out
fldl
mov
mov
fs
jae
pop
xlat
jne
outsl
cltd
jne
mov
jb
insb
xor
add
out
pop
and
cwtl
jbe
filds
shlb
and
push
sbb
mov
cmp
dec
push
fidivl
insl
inc
jno
lods
jecxz
fldl
jl
cmpl
add
popa
inc
ret
ret
push
imul
cs
jbe
mov
mov
je
inc
pop
je
jb
mov
scas
stos
mov
int
cmc
push
mov
not
add
jbe
mov
bound
dec
xor
pop
push
js
inc
fnsave
xor
jns
sti
lods
add
mov
subb
xor
insb
das
dec
fwait
es
jne
adc
cmp
bound
das
je
mov
add
repz
add
mov
addr16
mov
adc
pop
fwait
les
cltd
mov
scas
jb
out
cmp
ja
aas
mov
xor
add
or
or
push
xor
cmpl
ficoml
js
clc
sahf
ret
mov
bnd
cmp
scas
mov
inc
scas
fwait
add
and
adc
insb
and
or
rclb
jb
push
xor
ret
add
jecxz
push
mov
cmpsb
popa
insb
pop
sbbb
test
fidivl
or
mov
mov
push
xchg
rorb
dec
cmpsb
mov
mov
filds
insl
gs
cmp
mov
cmpl
mov
je
rolb
inc
mov
les
sbb
cmc
jb
insl
bound
jp
inc
lret
inc
mov
jno
hlt
arpl
imul
pop
ret
sarl
iret
iret
add
inc
fisttpl
sbb
add
mov
das
cmp
and
push
movb
mov
insl
gs
mov
push
or
arpl
leave
popl
adc
cs
clc
dec
repz
fcompl
inc
mov
ljmp
addb
sub
ja
addl
add
repz
add
lahf
imulb
outsb
das
mov
cs
mov
jns
pusha
fnstsw
ret
xor
mov
test
je
xor
aas
roll
xchg
testb
loop
dec
jmp
addb
mov
jne
jge
inc
inc
push
xlat
cmp
mov
mov
adc
or
mov
jmp
or
fucomip
out
es
mov
mov
cmpb
cmp
icebp
add
cmp
insb
jecxz
test
out
jns
div
jae
sbb
sti
add
jo
jb
loopne
outsl
cmova
pop
ficompl
shrl
add
cmpsl
mov
add
mov
inc
test
sahf
cvtpi2ps
jns
cmp
pop
add
data16
jnp
and
push
sub
sbb
dec
es
cmp
insl
into
stos
adc
lock
mov
stos
pop
andb
dec
pop
imul
jae
adc
mov
add
push
stos
into
inc
mov
aad
mov
int3
push
aaa
pop
aad
push
mov
scas
add
adc
clc
movsl
pop
imul
or
mov
std
cmp
int3
dec
cmp
pop
mov
sbb
adc
mov
aaa
and
data16
jo
ds
ja
frstor
imul
adc
lcall
iret
test
cmp
jb
jnp
mov
mov
mov
xor
in
or
push
test
fiadds
mov
jmp
xchg
and
and
ljmp
push
gs
stos
push
popa
outsb
imul
xchg
mov
mov
insl
mov
mov
fiaddl
and
test
ss
out
or
add
push
mov
jo
add
loopne
or
inc
lods
fwait
push
mov
push
les
cmpsl
jbe
jne
arpl
push
hlt
into
cmp
das
pop
je
jo
jne
push
hlt
push
adc
dec
lret
cwtl
les
fcmovnbe
test
mov
ret
jno
dec
push
pop
das
dec
pop
repnz
sbb
add
push
les
sbb
sbb
daa
daa
bound
or
push
inc
push
sub
sub
cwtl
dec
outsb
sbb
xchg
mov
sub
xlat
aad
dec
sti
cmpb
xchg
sub
sbb
ret
mov
test
and
sub
pop
ret
adcb
or
push
mov
sub
ss
enter
sbb
add
jmp
mov
roll
xchg
push
inc
dec
insl
mov
aam
je
dec
into
inc
mov
iret
mov
rcrl
mov
inc
es
inc
fsubl
adc
sahf
and
pcmpgtb
rclb
movsl
stos
sbb
mov
lods
pop
scas
add
pushl
inc
ret
dec
mov
aas
and
inc
jnp
pop
pop
data16
fs
jbe
outsb
rorb
mov
sbb
mov
cli
dec
js
mov
fcmovbe
cmp
mov
test
push
in
dec
mov
cmp
and
mov
mov
sbb
push
sbb
xchg
mov
sarl
popa
lods
pop
movsb
test
mov
cmp
mov
inc
sbb
sbb
fidivrs
out
push
sbb
push
jecxz
movsb
mov
out
mov
scas
push
pop
pop
pop
pop
test
mov
jg
fiaddl
pop
lret
inc
pop
cs
push
dec
movb
stc
sbb
aas
cmp
mov
movsl
or
adc
aaa
mov
jo
lods
loope
fidivs
dec
jle
lcall
inc
sub
lret
rclb
mov
rorb
sbb
sbb
lcall
sub
jg
je
inc
js
insl
inc
or
push
call
adc
sub
ja
in
in
les
push
push
ja
mov
pop
xchg
cltd
loopne
lret
les
es
jne
les
xchg
iret
leave
leave
mov
je
pop
loope
inc
les
add
jb
jns
pop
ja
xor
add
add
inc
movl
cmp
fcompl
xchg
insb
pop
js
subb
incb
clc
shlb
test
push
sbb
sahf
rcl
xor
add
dec
mov
fisubrs
sbb
push
or
in
cmp
hlt
cltd
cs
sub
ja
sbb
stos
push
xor
cltd
ja
or
sahf
xchg
mov
scas
xchg
mov
mov
inc
xchg
insb
push
mov
ss
aam
sarb
sub
inc
test
loope
xchg
stos
mov
popa
aad
sbb
dec
fs
insl
test
mov
movsl
fistps
ss
pop
pop
sbb
mov
or
mov
push
shrb
inc
and
pop
sbb
shrl
inc
or
inc
mov
mov
arpl
pop
in
and
jae
pop
or
push
and
ja
push
ljmp
scas
and
mov
mov
jbe
std
gs
dec
pop
xor
add
xor
jbe
mov
inc
inc
je
xchg
pop
test
sbb
jbe
mov
cmp
in
and
jbe
cmp
bound
pop
aaa
pop
xchg
shrl
xchg
insb
cmp
pop
or
jno
rorl
jmp
fdivs
or
rcl
cmc
add
jne
or
mov
mov
jp
mov
jns
mov
test
lds
mov
dec
fisubl
mov
insl
dec
aad
mov
je
xchg
dec
aam
stos
add
in
ss
add
push
sbb
inc
inc
xlat
aam
add
clc
mov
cltd
roll
push
cld
mov
out
inc
pop
push
xchg
jg
pop
dec
fsubr
lret
arpl
das
push
enter
push
inc
sub
insb
sub
push
andl
mov
rclb
cmp
rcrl
push
repnz
ds
popa
mov
popf
cltd
aaa
mov
xchg
loopne
shl
xchg
adc
ds
and
or
bound
std
pop
mov
mov
iret
mov
add
mov
sarl
mov
xchg
fmull
inc
add
sub
adc
jo
xor
imul
cmp
pusha
nop
inc
mov
sarb
sbbb
mov
lea
dec
inc
sub
push
test
push
dec
xor
mov
adc
into
pop
sbb
push
cmp
cmp
adc
adcb
out
inc
popa
aas
lret
sub
into
insb
shl
cmp
jb
mov
dec
jns
xchg
fcomps
mov
in
std
dec
imul
loopne
sbb
cmp
aad
xchg
dec
xchg
std
inc
mov
out
add
lea
jo
imul
inc
push
bound
shll
inc
addb
rorb
inc
or
or
jle
insb
pop
insb
xor
jbe
add
inc
xor
pop
add
sbb
dec
clc
pop
mov
sbb
add
pusha
call
lds
adcb
lods
and
jbe
pop
jl
test
insl
jmp
or
xor
je
jne
inc
sub
sub
xor
in
outsl
lods
call
push
movsb
dec
leave
cs
mov
or
add
lret
and
add
pop
loope
pop
addb
pop
pop
push
sub
insl
pusha
js
call
pop
pop
cmp
pop
lahf
rcrl
cmp
inc
and
adc
add
mov
jge
or
movsl
or
inc
xor
mov
mov
imul
mov
pop
add
mov
loop
pushf
dec
lea
lret
dec
xor
loopne
dec
cmp
loop
scas
imul
imul
mov
mov
idivb
fimuls
imul
cmpb
das
mov
mov
icebp
cmp
frstor
jge
ficoms
sarb
and
jb
call
inc
pop
pop
cmp
je
ljmp
je
mov
mov
jb
rolb
and
or
movsl
leave
xchg
jne
sarl
add
or
popa
jae
cmp
push
arpl
iret
loopne
jbe
adc
sbb
sbb
mov
xorb
xor
cwtl
mov
pop
bound
stos
sbb
jne
xor
rcrb
js
test
cmpsl
bound
sarb
mov
stc
in
aam
xchg
adc
dec
aad
and
ljmp
scas
and
jae
mov
dec
jns
sub
outsb
jne
ret
imull
rorb
sub
pop
xchg
bound
ss
repnz
add
jo
mov
aam
int3
push
stc
les
xchg
in
adc
cmp
push
popa
les
mov
inc
mov
sbb
pop
je
scas
cmp
adc
mov
push
dec
stc
mov
aaa
cmp
mov
mov
lcall
ss
leave
cmp
out
xor
mov
sub
mov
sbb
popa
push
shlb
xor
add
sbb
mov
jbe
pop
pop
mov
insl
add
jae
mov
dec
push
shl
push
leave
jne
sbb
rcl
xor
das
aas
pop
push
in
lock
sti
mov
orb
aas
daa
adc
rol
into
bound
adc
push
mov
shl
mov
shrb
inc
push
nop
popf
xor
xchg
jns
xor
dec
xor
cmp
mov
dec
sub
push
enter
xchg
push
dec
cwtl
jb
sbb
adc
mov
jb
test
dec
and
popf
cmp
push
sarl
test
rcr
ficoms
mov
cmp
imul
sub
add
jbe
insb
push
in
mov
add
push
jmp
inc
dec
dec
add
mov
loopne
adc
es
cmpsl
popa
adc
or
iret
insb
xchg
inc
in
push
pop
fsub
loopne
xchg
sub
cmpsb
inc
inc
xchg
and
mov
imul
pop
pop
shll
subb
jae
sbb
or
adc
push
mov
sbb
push
xchg
push
sub
inc
xchg
fadds
xor
adc
cmpsl
inc
push
imul
mov
xor
add
dec
sahf
sub
mov
enter
addr16
dec
mov
jl
or
cmp
xor
ljmp
jp
adc
xor
cmpsb
cwtl
daa
in
sarl
test
push
ror
cmpsl
and
scas
mov
xchg
and
jmp
add
roll
mov
inc
cmp
call
js
ss
push
pop
push
aaa
in
xor
in
cmp
insl
popa
or
shll
add
pop
test
jbe
adc
mov
cmpsb
xchg
add
ds
and
or
mov
adc
test
mov
add
mov
mov
sub
fwait
xor
lock
cmpsb
adc
dec
xchg
jo
push
call
jae
xchg
add
dec
dec
xor
cmpsb
add
sub
int3
sahf
pop
jge
jb
bound
mov
add
or
cmp
adc
push
imul
in
push
es
push
cmp
pusha
jo
rcrl
mov
lret
pop
sbb
sbb
aas
imul
xor
rcrb
mov
pop
inc
mov
pop
xchg
enter
das
sub
push
jl
dec
or
fisttpll
push
sub
insl
and
mov
fidivs
mov
mov
pushf
and
pop
or
inc
sbb
arpl
inc
arpl
enter
shrb
sub
pop
adc
mov
pusha
into
lahf
xchg
addb
xchg
mov
pop
push
jnp
ljmp
stos
lcall
jecxz
push
mov
es
jle
jecxz
je
ss
scas
jne
push
sub
pop
mov
mov
lahf
push
daa
inc
insl
call
jae
push
xor
inc
inc
mov
push
push
inc
adc
inc
sarb
mov
push
adc
mov
mov
pusha
jne
jge
das
push
xor
subl
fbstp
es
fadds
pop
aam
push
mov
lret
and
mov
imulb
cli
add
adc
xor
push
scas
mov
es
shl
cs
cli
and
rolb
les
imul
lods
jno
inc
mov
push
test
adc
int
loope
jo
sub
push
inc
pop
dec
jns
addr16
sahf
inc
pop
pop
mov
fldenv
mov
and
gs
popa
imul
xor
pop
rol
movsb
lahf
lods
fisubrs
add
mov
mov
mov
ret
pop
pop
inc
pop
scas
test
pushf
push
lods
add
add
stos
andl
cli
movsl
bound
xor
sub
mov
inc
inc
sbb
sub
ja
inc
rcl
test
pop
scas
rorl
jg
jge
leave
mov
adc
sbb
push
loope
push
sub
rclb
outsl
cld
pop
fidivl
pusha
jb
or
xchg
test
dec
stos
outsl
repz
cwtl
out
fcmovbe
addb
inc
sbb
stos
bound
or
mov
sub
pop
cld
orb
mov
stos
lods
mov
lret
add
andps
pop
xchg
xor
and
inc
stos
pop
popa
insb
lods
fisttpll
xchg
jecxz
push
int
call
andl
and
inc
jp
dec
ret
or
scas
jnp
mov
inc
mov
in
cmp
scas
xchg
addb
faddp
mov
pop
add
mov
orb
sub
add
adc
push
mov
shll
pop
sahf
outsl
call
xchg
and
popa
rol
test
xor
sbb
sub
or
and
in
xor
test
bound
jo
ret
shll
pop
shl
sbb
loopne
rcl
nop
fs
jns
inc
or
popa
movsl
outsb
cmp
orb
iret
pop
xor
mov
inc
jbe
in
jge
adc
sbb
sbb
into
insl
ret
jb
cmpsb
mov
mov
push
mov
insl
lods
mov
call
pop
sbb
add
mov
mov
xlat
lods
insb
xlat
pusha
daa
jbe
add
inc
inc
xor
pop
dec
sbb
mov
xchg
jecxz
out
fsubp
adc
pop
jno
andb
xor
aam
or
in
clc
sub
jle
add
lcall
movsb
fisubrl
xchg
and
popa
mov
pop
inc
fucomip
mov
data16
add
mov
ret
push
sbb
loope
push
pop
adc
loopne
arpl
and
dec
lea
out
add
mov
enter
mov
inc
fcoms
or
mov
das
outsb
pop
pop
pusha
aad
leave
sbb
or
pushf
nop
popa
movsl
mov
mov
push
cmp
popa
lods
ret
into
data16
gs
cmp
fsubs
add
sbb
jno
push
mov
jg
xlat
daa
adc
inc
mov
ret
or
mov
mov
xlat
aad
orl
adc
pop
int3
mov
imul
popa
les
mov
aad
xlat
insl
out
sub
pusha
aaa
cmpsb
stos
mov
push
xor
into
imul
pop
fs
pusha
movsl
fwait
xor
dec
rorb
gs
nop
cmp
mov
inc
clc
mov
shll
mov
jbe
and
mov
and
mov
rolb
arpl
rclb
cmpsb
stos
push
add
roll
nop
fsubrp
push
mov
fnstcw
or
fmuls
imul
fsts
sub
ret
inc
push
fsubrl
les
inc
aas
inc
popa
mov
addb
iret
popa
ret
sub
fwait
pop
mov
and
xchg
push
fcomp
add
mov
push
xor
jo
inc
or
xor
xor
sub
xlat
pop
loopne
sub
dec
insl
push
mov
mov
repnz
lock
jno
jmp
mov
push
mov
scas
lods
les
xchg
and
cmc
mov
call
clc
imulb
es
pop
pop
insl
orb
jae
adc
mov
gs
xor
test
adc
inc
loopne
movsl
jnp
movsb
cli
sbb
pop
jne
jne
pusha
add
lret
daa
cwtl
mov
mov
lods
popf
jg
push
dec
cmpsb
mov
addr16
das
push
inc
sahf
jo
mov
cmpsb
push
jns
or
clc
rdmsr
clc
imul
mov
add
or
jp
ds
cmp
xchg
pop
fcmovne
add
add
adc
sub
jbe
arpl
out
in
add
rclb
jnp
adc
mov
add
nop
mov
addb
ret
imul
fs
sub
pushf
jp
mov
push
push
xor
push
jge
xchg
nop
push
inc
xor
aam
jmp
fiaddl
xor
mov
jecxz
mov
push
mov
adcl
adc
sub
inc
out
arpl
push
cmp
shrb
inc
pop
subb
push
adc
filds
xchg
and
fadds
jae
lcall
adc
and
fimull
mov
inc
inc
push
push
add
mov
test
mov
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
xchg
push
fs
push
leave
push
xor
push
inc
push
xchg
mov
xchg
push
push
add
test
movsb
and
add
add
push
adc
test
mov
add
jns
inc
sbb
addb
sbb
xor
adcb
inc
sbb
sub
adc
xor
mov
inc
or
sbb
push
stos
sub
outsl
pop
mull
push
add
outsb
or
push
add
push
test
cmp
gs
push
popa
imul
jge
gs
push
mov
inc
sub
test
push
xor
add
pop
sar
or
xor
js
push
mov
and
fdivs
mov
mov
inc
dec
add
arpl
mov
inc
rclb
adc
inc
adc
jmp
fldcw
add
adc
jbe
in
mov
xor
add
adc
orb
adc
jo
push
add
mov
stos
mov
push
or
popa
inc
push
inc
das
fbstp
add
add
adc
inc
add
popa
adc
pop
mov
push
push
insb
or
mov
imul
ja
mov
jl
xchg
jns
imul
xor
or
or
ss
arpl
and
mov
push
cs
outsb
inc
or
jno
add
jns
outsl
push
adc
push
data16
fidivl
or
push
pusha
icebp
dec
inc
push
imul
je
bound
jae
test
inc
xchg
mov
cmpb
push
add
bound
xor
ret
sub
rcrb
daa
xchg
dec
outsl
jbe
dec
or
push
cs
insb
and
add
ljmp
push
rolb
dec
cmp
and
jl
push
out
inc
and
andb
rorl
sub
mov
sub
push
push
test
xchg
dec
inc
jo
push
pop
dec
lcall
or
dec
xor
roll
in
lock
jge
pop
mov
jbe
inc
dec
pushw
push
outsb
insl
adc
add
mov
xchg
xchg
fwait
sub
pop
mov
xchg
es
js
mov
imul
push
imul
add
add
movsl
lcall
test
sbb
gs
mov
pusha
insb
pop
gs
mov
mov
leave
add
add
data16
xchg
push
push
push
popa
bound
xor
mov
or
jne
fmull
testb
shrb
and
push
seto
in
dec
xor
jle
and
sbb
xchg
and
loopne
mov
and
add
or
rorb
pcmpgtb
or
lods
imul
jo
jmp
jmp
add
xchg
inc
xchg
adc
fisttpl
imul
stc
mov
loopne
xchg
sub
sbb
mov
jg
rclb
mov
arpl
push
lods
or
mov
pop
ret
popl
insb
fs
cmpsb
imul
lcall
xchg
add
inc
xchg
mov
fildl
loop
aad
sbb
pop
aas
mov
push
insl
inc
inc
push
inc
inc
dec
pop
sti
pop
mov
pop
adc
inc
inc
push
xor
inc
inc
inc
sbb
in
jmp
xlat
inc
push
xor
or
cmp
data16
test
lea
movsb
pop
xor
jbe
pop
idivb
xor
push
inc
test
cs
int3
adc
inc
imul
imul
imul
push
insb
ret
data16
xor
popa
loop
stos
stos
sbb
dec
inc
outsb
fs
shll
pop
jb
or
add
cld
xchg
pop
inc
xlat
js
popa
inc
pop
fs
or
sub
out
outsl
jge
rorl
cmpsb
imul
insb
or
arpl
and
or
pop
or
mov
jo
insb
outsb
insb
mov
add
push
adc
je
jns
popf
mov
arpl
jo
aaa
test
push
sahf
or
gs
lret
data16
arpl
insl
bound
or
or
pop
and
fiadds
lret
pop
es
adc
xchg
pop
add
jo
mov
push
fnstenv
sub
insb
testb
sub
jb
push
jno
and
jb
fwait
les
sub
loope
aaa
shrb
pop
inc
xor
pop
dec
inc
pop
sbb
pop
mov
push
adc
cmp
addb
jmp
loopne
inc
dec
pushf
das
int3
jb
xor
je
mov
adc
shrb
or
xchg
lods
imul
sbb
pop
add
mov
fcmovnbe
sbb
add
inc
scas
rol
adcl
icebp
or
add
sbb
xorl
dec
push
xchg
js
stos
aam
roll
sbb
adc
loop
pop
jae
xor
ret
pop
call
dec
pusha
inc
add
cmp
sbb
dec
push
popf
add
adc
sub
mov
call
xor
and
or
jb
sbb
imulb
jb
push
outsl
jae
mov
dec
stos
outsb
dec
dec
and
arpl
pop
push
nop
inc
data16
mov
loopne
or
loopne
addr16
lods
cmp
testb
dec
je
sbb
popa
inc
call
dec
push
adc
jbe
dec
push
js
adc
test
clc
pop
fs
rclb
inc
pcmpgtd
je
or
and
add
int
fsts
jo
mov
inc
leave
out
sbb
dec
pop
mov
movsl
loopne
or
xor
jecxz
enter
mov
sub
sub
jo
sbb
sub
push
or
inc
inc
and
adc
sub
jbe
lcall
andb
inc
lock
inc
scas
pop
inc
ret
sub
dec
add
adc
mov
xor
leave
inc
xor
xchg
lcall
mov
movsl
int
adc
mov
xlat
pop
js
aas
mov
mov
and
and
sbb
sbb
pop
sbb
and
pushl
add
push
xor
push
push
pop
ljmp
lcall
push
or
adc
clts
and
adc
sbb
call
adc
add
cmp
movaps
pop
cmp
adc
or
pop
and
and
sbb
jmp
adc
sub
push
insl
adc
adc
or
or
xor
pop
sub
mov
sbb
decl
sbb
cmp
sbb
adc
pop
adc
dec
das
and
dec
and
sbb
push
in
in
pushl
sub
or
adc
cmp
inc
dec
push
and
or
push
pop
adc
sbb
adc
sbb
push
es
or
cmp
pop
das
adc
bt
sub
sbb
or
in
or
and
das
and
or
push
or
adc
aam
pop
sbb
insl
push
or
ds
push
clts
adc
or
in
call
movaps
and
push
imul
adc
adc
pop
cmp
in
mov
dec
adc
push
adc
and
and
in
push
or
sbb
adc
pop
or
adc
in
call
sbb
pop
es
push
xor
and
scas
sbb
or
fildll
push
adc
sub
push
or
adc
sbb
scas
es
cmp
sbb
adc
adc
and
cmp
test
imulb
or
or
cmp
pop
jne
adc
sbb
pop
sub
push
add
adc
and
adc
pop
or
sbbb
or
mov
cmp
cmp
push
sbb
adc
or
and
sub
or
daa
and
or
and
sbb
add
adc
sysexit
pop
or
add
fs
push
and
adc
xor
addr16
ret
xor
add
adc
daa
or
pop
dec
sub
sub
sbb
or
sbb
pop
push
and
and
int
notb
sbb
ss
mov
push
or
sbb
lock
cmpsb
push
xor
adc
adc
sbb
test
adc
sbb
and
and
jg
in
test
push
jb
and
mov
push
and
fistps
outsl
daa
or
cmp
sbb
and
xor
adc
sbb
sbb
mov
or
or
inc
or
push
ss
in
jbe
jo
and
and
sbb
lock
or
sbb
mov
mov
pop
adc
adc
mov
or
ds
dec
and
sbb
rclb
mov
cwtl
sbb
test
pusha
sub
jg
arpl
sbb
or
push
dec
sbb
xchg
adc
pop
mov
inc
arpl
insl
or
or
arpl
push
pop
sub
lcall
or
or
push
daa
test
or
jnp
sbb
mov
adc
or
aam
or
dec
mov
lahf
ret
pop
nop
and
xor
insl
sbb
roll
andb
adc
pop
sub
sbb
sbb
es
jle
sub
mov
push
js
or
adc
mov
lea
sub
adc
push
or
scas
sbb
pop
imul
insl
lods
shll
cmp
popa
adc
imul
shll
sbb
dec
test
popa
sbb
ja
lock
das
push
fsubs
adc
and
and
insb
lods
mov
add
cmc
in
cs
sbb
es
push
loopne
inc
jbe
jmp
int
push
wbinvd
adc
xor
cmp
mov
or
xlat
adc
push
int3
adc
mov
sti
dec
test
mov
insl
or
push
and
or
sub
add
add
cmp
or
adc
add
jno
sbb
push
cmp
or
sarl
adc
push
push
mov
ret
mov
adc
or
xor
cmp
sub
fs
add
adc
sbb
scas
push
decb
sbb
pop
jecxz
or
push
cmp
inc
sub
add
out
fldt
or
push
mov
ljmp
movsb
cli
lods
test
and
sub
sub
pop
sbb
push
arpl
adc
and
lock
pop
push
jb
xchg
push
sbb
xor
jae
sub
sbb
ljmp
xor
test
dec
and
insl
adc
or
pminub
sbb
pushw
imul
fisubrs
movsl
sbb
adc
inc
push
cmp
lods
fistpl
sbbl
pop
or
adc
jecxz
sub
subb
je
and
cmpsb
or
ret
divb
cmp
or
sub
insl
insl
push
cmp
jb
adc
or
mov
mov
or
or
push
and
outsb
testl
or
sbbl
and
mov
add
xchg
cmp
sbb
je
cmp
stos
mov
aam
dec
add
pop
xor
mov
pusha
and
adc
nop
sbb
shlb
in
mov
clc
lea
pusha
adc
push
add
xlat
cmp
jns
mov
call
fcmovnbe
pop
and
sub
lods
jbe
cs
add
xor
jae
sub
fimuls
dec
inc
dec
push
fdivrs
inc
jne
cld
dec
daa
push
push
out
adc
mov
popa
inc
adc
adc
or
sbb
adc
fiaddl
xchg
fldt
insl
rcll
xor
aaa
sbb
sti
adc
xchg
pop
push
ja
xor
mov
test
and
dec
sarb
aas
mov
lods
inc
cmp
add
pop
int
lahf
or
aaa
pop
or
lods
push
ja
push
adc
add
sub
sub
lds
pop
add
mov
pop
fucomi
sbb
je
popa
mov
sub
lods
pop
fdivs
jno
push
or
xor
mov
lea
dec
aas
pop
outsl
push
add
cmp
pop
push
sbb
jp
sbb
pop
adc
ret
test
jno
pop
or
mov
sub
add
pop
sub
insl
shr
or
and
pop
or
mov
sub
inc
or
adc
jo
aam
mov
imul
les
adc
scas
fstl
test
cmp
adc
push
fwait
mov
mov
fcomp
aas
shrb
push
sub
call
jbe
and
cmp
xor
sub
sub
movsl
pop
pop
sbb
sub
or
sbb
fbstp
daa
ds
jo
outsb
outsl
push
xor
loopne
test
ret
or
add
insl
mov
push
aas
xchg
call
pop
sbb
lock
inc
or
sub
xor
mov
sub
cli
fs
imul
inc
pop
cmp
jge
enter
dec
xor
imul
sub
sbb
and
sub
jb
or
jle
cmp
aam
sbb
negl
pop
clc
add
dec
push
cmp
ror
xchg
or
xchg
dec
jne
rorl
adc
and
das
aas
push
pop
adc
xchg
test
jp
mov
sbb
fcmovbe
mov
sbb
sub
aaa
push
bound
mov
pop
cmp
imul
cwtl
xor
and
lea
push
pop
and
imul
cmp
push
adc
lods
dec
orb
pop
clc
push
jmp
sbb
dec
adc
fsubp
push
or
xor
adc
das
xor
mov
repz
das
orb
mov
je
xor
adc
push
sbb
test
or
adc
fcoms
sbb
and
push
or
cli
pop
outsb
push
sahf
or
dec
xor
adc
push
inc
pop
loopne
aaa
mov
cmp
sbb
xor
sbb
lcall
inc
sti
daa
pop
sbb
and
dec
adc
push
jle
ret
mov
lods
or
sub
mov
add
testb
stos
jmp
sbb
or
cld
or
adc
movb
and
sbb
sub
fisubl
pop
add
sbb
sbb
cmp
push
fistl
jno
cmpsl
or
test
push
popa
mov
push
sbb
fwait
dec
das
push
sbb
or
into
loopne
xchg
sub
test
insl
push
loope
sub
xchg
or
out
push
and
adc
or
adc
and
sbb
push
test
or
adc
push
sbb
mov
cmp
mov
mov
out
inc
fs
cmp
sub
mov
mov
loop
lcall
adc
pop
sub
mov
clc
xor
stos
or
xor
push
loop
sub
xor
in
add
pop
or
mov
or
xor
insl
or
push
or
stos
inc
cmp
sti
insl
scas
adc
mov
aam
and
dec
pop
push
and
and
inc
inc
sub
push
ss
pop
xor
pop
inc
sub
and
adc
cmp
mov
pop
add
imul
xor
ret
push
adc
outsl
cld
ss
pop
xchg
in
ret
sbb
daa
sbb
push
push
mov
xchg
add
push
popf
push
in
orl
shll
adc
mov
cmp
mov
sub
sbb
sbb
das
xor
pop
push
sub
add
adc
and
push
cs
or
push
hlt
xchg
dec
xchg
xor
adc
and
pop
cmp
xor
push
sub
sbb
pop
outsl
inc
ja
push
cmp
movsl
xchg
jo
sbb
pushf
and
xchg
incl
jns
adc
push
lds
sub
xlat
add
in
sbb
adc
xor
xchg
sbb
mov
jnp
gs
test
inc
repz
push
push
arpl
les
cs
mov
fiaddl
adc
jae
aam
push
adc
inc
sbb
cmpsb
subb
inc
inc
sbb
push
adcl
inc
stos
shrb
fdivl
shrb
sbb
fistpl
push
sbb
outsb
lea
adc
negl
das
and
jle
icebp
inc
or
mov
cmp
add
lods
dec
push
push
test
iret
or
mov
push
insb
adc
sbb
xor
imul
aas
cltd
sbb
cmpsb
sbb
je
mov
jecxz
pop
push
xor
sbb
insl
fcompl
push
xor
sbb
xor
xor
imul
and
sub
in
pop
arpl
out
sbb
xchg
push
push
clc
stos
jecxz
inc
xor
sub
push
mov
imul
xor
das
jbe
add
push
push
andl
pop
jae
cmp
or
dec
push
sbb
das
mov
bswap
adc
or
aas
and
cmp
xchg
or
inc
loop
mov
adc
das
inc
xchg
cmp
fstps
bound
or
push
and
push
push
jae
pop
or
xor
arpl
sbb
lcall
pop
add
enter
mov
pushf
arpl
sbb
pop
push
daa
cs
and
adc
and
mov
lods
push
sub
mov
xor
mov
add
loop
adc
add
xor
cs
sub
inc
daa
ss
subl
push
scas
sarl
test
and
push
sub
daa
add
mov
ljmp
push
addl
cmc
mov
push
enter
cmpsb
xor
or
pop
in
insl
push
pop
mov
jne
ss
and
sub
gs
sbb
push
test
test
push
aam
mov
adc
icebp
shrb
adc
add
mov
gs
or
aaa
or
push
push
cmp
inc
add
push
lea
jb
push
inc
lods
shr
xchg
add
xchg
sub
adcl
enter
sub
push
jbe
or
push
cmp
aaa
jg
mov
sbb
and
sub
or
push
add
fiaddl
cmp
push
into
sub
sub
fwait
pop
imul
sahf
shlb
in
mov
test
inc
cmp
sbb
push
std
in
sub
lea
pop
dec
lods
pop
ret
adc
test
xchg
sbb
fsubrs
sbb
sub
mov
cwtl
mov
sub
sub
and
mov
lea
fcoms
andb
inc
cmp
and
or
inc
popa
test
lcall
pop
or
sub
sbb
jb
outsb
mov
inc
inc
scas
pop
add
jecxz
or
daa
rcrb
test
arpl
pop
sub
mov
lods
jl
outsb
sbb
or
jnp
and
cmp
cmp
and
sbb
pop
pop
pop
mov
mov
adc
push
mov
pop
mov
in
jae
pop
adc
pop
pop
push
dec
push
add
xchg
adcl
out
scas
mov
adc
mov
push
in
bound
fisttpll
pop
nop
and
sbb
jg
mov
inc
and
adc
push
push
push
insl
cmp
testb
cmp
inc
loop
imul
fistpl
jge
and
fidivs
jbe
mov
in
fsubrs
test
xor
pop
fwait
call
push
push
or
test
xchg
aad
imul
orl
sub
push
push
out
sbb
sbb
mov
fsub
xor
cmp
and
sbb
sub
add
xor
cmp
jp
xor
xorl
adc
and
and
add
cmpb
xor
sub
fildl
or
es
adc
dec
movsb
subb
cld
or
pusha
or
add
cmp
mov
jge
push
or
sub
cli
test
inc
inc
xor
dec
dec
mov
out
bswap
or
jg
jbe
ds
test
pop
sub
inc
and
dec
or
xchg
pop
inc
jae
sub
mov
add
fldl
and
pop
and
push
es
jae
mov
adc
adc
adcb
push
adc
pop
fcoms
das
dec
mov
cmp
xor
pop
das
xor
xor
fdivrl
sbb
rclb
stos
jo
or
test
adc
mov
xor
adc
push
add
dec
pop
and
or
sub
sub
dec
sub
mov
fisttps
lds
cmp
mov
dec
adc
push
push
pop
xor
jbe
push
outsb
or
sbb
inc
jns
daa
dec
mov
sbb
fldt
int
dec
lock
sbb
adc
ret
lods
mov
pop
add
ret
xor
fimuls
rcrl
jo
push
bound
dec
rclb
loope
fimull
adc
and
inc
pop
mov
cmp
or
sub
fldcw
ss
pop
fiaddl
push
in
cmp
icebp
movsl
add
imul
xor
jno
test
sbb
pop
es
test
imul
mov
fcoms
cmp
or
fdivrs
imul
fs
dec
push
arpl
and
stos
push
rol
xchg
imulb
inc
sub
inc
push
xchg
or
sbbb
aaa
adc
push
test
mov
pop
or
sub
je
mov
enter
sub
adc
mov
icebp
jne
aad
sbb
aaa
adc
out
lcall
mov
add
or
js
pop
sbb
in
sub
lret
add
xor
inc
add
add
sub
adc
adc
add
add
stc
fnsave
add
add
add
mov
insl
ret
sbb
or
cmp
add
push
pop
mov
pop
add
mov
cmp
add
or
xor
xchg
cs
in
or
add
mov
add
inc
pop
adc
xor
pop
add
sbb
adc
or
add
in
pop
rolb
cmp
sbb
push
push
mov
add
push
fiaddl
sub
add
movsb
adc
daa
cmp
add
push
inc
sti
mov
push
pop
cmp
adc
or
je
or
popf
add
push
push
sub
fsts
sbbb
or
sbb
in
adc
adc
add
or
push
cmpsb
or
popa
ret
and
or
fsubs
jbe
push
sub
popa
ss
or
push
mov
xchg
add
jl
subb
sbb
pop
sub
and
fxch
push
sbb
add
xchg
mov
or
add
push
jmp
xchg
mov
sbb
ret
jecxz
imul
or
sbb
or
add
pushl
icebp
and
push
add
or
lahf
mov
test
push
es
mov
add
adc
aaa
xor
xchg
std
adc
xor
xor
and
push
or
cmp
pusha
or
pop
movl
or
sbb
push
add
fld
and
dec
sbb
and
sbb
mov
add
jno
sbb
mov
sub
dec
lock
add
jne
pusha
add
dec
add
and
mov
pop
pop
add
pushf
xchg
add
lock
call
pop
pop
stos
loop
mov
pop
aas
fbstp
cmpsl
data16
xchg
lahf
cs
add
add
jp
insl
hlt
ret
hlt
adc
sbb
add
mov
sub
adc
sub
lock
pop
clc
jecxz
sub
xor
ds
mov
lock
pop
test
lock
sbb
pop
sbb
or
jnp
sbb
jl
cmpl
pop
daa
cmp
cmp
and
sub
cmp
push
sub
sub
hlt
xchg
xchg
lods
stc
sub
insb
adc
add
add
shlb
add
cmp
clc
mov
xor
lret
adc
scas
inc
das
inc
or
or
xor
add
nop
sbb
push
and
xchg
mov
dec
scas
lock
add
loope
inc
adc
inc
pop
faddl
push
sub
icebp
dec
push
sub
dec
rcll
popa
cmpsb
or
fstl
lret
mov
and
popf
aam
dec
cmpsb
and
or
dec
sub
pop
adc
fstpl
push
aas
pop
or
jno
dec
add
add
mov
or
sbb
or
or
inc
prefetch
dec
adc
cmpb
or
fcmovu
sub
cmp
mov
push
test
sbb
cmp
lcall
add
adc
fmuls
ret
cmovae
pop
jnp
jbe
add
addl
lret
push
push
pop
or
push
add
pop
test
insl
loope
push
mov
adc
dec
daa
dec
or
testb
mov
ffree
aaa
sbb
mov
popf
or
mov
rcr
or
jl
cs
mov
rolb
inc
imul
push
add
add
fldenv
adc
xor
sbb
adc
fidivrs
push
jb
or
das
aad
jbe
and
insl
test
data16
pop
and
or
push
loope
lcall
and
or
add
add
ret
add
or
dec
xchg
jno
movsb
sbb
sub
outsb
orl
test
imul
shr
push
adc
pop
jno
xchg
jns,pn
sbb
into
jle
xchg
sbb
out
or
and
negb
xchg
add
movsb
fnsave
jle
adc
in
adc
add
fldenv
addb
imulb
adc
in
fcomp
adc
add
dec
pushf
dec
add
pop
popa
mov
push
mulb
or
test
xlat
and
jl
push
add
popa
xchg
shl
xor
or
inc
adc
inc
sarl
in
fildl
mov
dec
faddl
daa
inc
add
sbb
ljmp
add
add
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
jmp
mulb
rclb
fldenv
cltd
lret
add
dec
inc
xchg
pop
rolb
mov
gs
ljmp
xchg
dec
add
scas
lods
dec
popa
push
or
scas
int
mov
das
leave
ljmp
jmp
outsb
and
lfs
mov
mov
mov
dec
fdivr
pushf
add
add
dec
add
push
call
pop
pop
pop
out
dec
ret
jne
add
lock
add
add
rorl
inc
adc
pop
ret
xchg
pushl
pop
incl
pushl
push
or
jmp
cld
pop
mov
shr
shl
outsl
pop
sti
fisttpll
dec
adc
sub
pop
or
dec
idiv
mov
sub
das
inc
mov
push
shl
push
call
pop
jmp
adc
ljmp
xor
pop
mov
sub
cmp
imul
ja
pop
push
adc
mov
movb
mov
out
in
mov
mov
cmp
inc
and
pop
mov
pop
xor
dec
je
push
mov
push
sbb
idiv
gs
add
or
mov
mov
shr
sti
fbstp
xchg
push
pop
ret
mov
inc
std
mov
arpl
sti
dec
je
sub
and
test
jnp
cmp
inc
add
push
mov
cld
ret
dec
add
pushl
push
lret
mov
or
sub
xchg
mov
loop
push
push
pop
push
push
push
push
xor
inc
cmp
pop
push
repz
cmp
lcall
push
ja
sub
aas
hlt
add
jns
ret
push
push
mov
fldl
mov
fs
fisttps
add
shr
and
xchg
in
sbb
add
push
loopne
fwait
jae
push
xor
mov
jne
push
test
push
je
es
and
pop
mov
mov
push
dec
pop
flds
fdivrs
push
pop
add
add
js
adc
pusha
pop
sub
mov
decb
loop
out
test
aaa
or
or
idivb
pop
or
sub
js
int3
int3
push
pop
orl
jg
test
sbb
mov
cmp
adc
add
adc
fs
pop
xor
sub
into
mov
mov
sbb
or
insb
in
aas
icebp
add
inc
aam
jmp
hlt
mov
jnp
push
push
mov
ljmp
mov
push
fldt
or
or
out
fildll
adc
pop
push
pop
pop
adc
push
jae
sub
mov
stc
sbb
out
lret
clc
add
test
and
sub
incb
adc
and
fsubs
add
xor
daa
fisttpl
mov
xchg
pop
test
pop
sub
jno
jge
jne
and
outsl
imul
lea
cmp
aas
pop
inc
dec
divb
jns
jge
pop
add
xchg
ds
push
mov
mov
xlat
fcmovnb
mov
subl
push
popf
enter
xchg
cmc
push
lahf
jge
jns
movsb
cs
outsb
std
jnp
inc
or
cmp
add
jbe
sub
stos
stc
push
push
dec
cld
pop
pop
mov
hlt
cmpsb
push
add
insb
lock
mov
mov
cmp
inc
test
mov
sub
test
mov
test
test
in
jbe
js
loopne
add
inc
in
sub
not
and
cwtl
lods
push
pop
jne
mov
sub
push
and
sub
push
ret
inc
stos
movsb
call
dec
dec
mov
ret
sbb
std
fs
sub
xchg
ds
stc
pop
aam
pushl
mov
ret
cmp
rclb
xchg
push
adc
push
or
mov
popa
sti
adc
cmp
inc
lcall
ds
out
or
lods
mov
cmp
pop
iret
test
inc
add
arpl
mov
jne
movb
adc
xor
ljmp
js
sahf
hlt
movb
adc
repnz
in
or
or
pop
jg
xchg
push
push
pop
cmp
jge
sbb
repz
imul
adc
pushf
push
fildl
test
mov
ret
andb
ret
add
enter
sbb
cmp
insb
pop
dec
repnz
push
or
sub
loop
push
mov
movsl
mov
lahf
rorl
inc
or
adc
out
mov
in
mov
mov
or
push
jl
sub
fsubrs
xchg
or
sub
punpckhwd
stc
or
or
inc
push
mov
mov
mov
jbe
or
xchg
xor
ss
cld
aas
push
cltd
push
jecxz
jo
pushf
cmp
je
sbb
mov
push
pop
push
popf
xor
movsb
cmp
frstor
push
add
adc
add
mov
std
sbb
inc
xchg
or
popa
in
mov
pop
inc
xor
mov
jns
mov
sar
cs
cmp
dec
lahf
imul
icebp
pop
adc
jbe
daa
add
decb
sub
pop
cmp
mov
mov
adc
add
hlt
ret
jbe
shll
movl
outsl
jnp
cmp
fdivrs
sbb
xchg
add
jle
mov
or
or
fcom
add
pushf
pop
icebp
pop
ljmp
jmp
cld
pop
lea
out
push
loopne
sbb
clc
or
xchg
mov
cmp
mov
push
pop
cmp
adcb
icebp
test
ficompl
mov
mov
setns
sbb
mov
nop
jl
popa
mov
outsb
hlt
mov
sbb
cs
adc
movl
lods
ror
sarb
or
push
push
pop
or
jbe
dec
add
sbb
sarb
or
cmp
push
pop
inc
jae
fucomi
mov
add
daa
flds
jo
push
shlb
outsl
push
js
pop
das
out
mov
dec
test
or
push
inc
pop
fisttpl
fidivrl
mov
push
loope
pop
jl
test
cld
mov
cs
jl
sbb
push
dec
inc
js
add
push
das
and
xlat
loop
jmp
pop
pop
pop
pop
ret
pop
repnz
arpl
jmp
mov
sti
test
fimull
ret
icebp
fisttps
movsl
adc
jnp
dec
cmp
subl
pop
repnz
mov
mov
mov
jg
mov
mov
sbb
popa
inc
lcall
popa
sbb
jnp
add
call
mov
dec
xchg
push
push
sbb
aad
pop
jl
orl
fldcw
call
dec
or
icebp
push
loope
push
or
addb
pop
outsb
mov
mov
stos
or
pop
loope
pop
mov
call
and
pop
sub
cmp
cmp
sbb
leave
cmp
loope
sarb
push
aam
mov
mov
pop
int
jp
jno
mov
sbb
or
jp
mov
bound
mov
pop
push
pop
mov
scas
mov
add
shl
inc
and
xor
std
iret
mov
sahf
lock
push
jg
ja
jle
sbb
stos
sub
add
sbb
cld
lea
cmp
push
fneni(8087
jecxz
adc
mov
leave
roll
or
sbb
test
int3
pop
pop
cwtl
mov
ret
cs
sbb
out
dec
adc
jb
call
fmuls
addl
enter
fcompl
jge
andb
push
in
das
add
int3
inc
jl
loopne
and
adc
bound
sub
out
adc
insb
dec
cmpsb
adc
lcall
bound
fimull
mov
sbb
outsl
ret
dec
or
addl
pusha
pop
jl
sahf
out
mov
cmpb
push
mov
and
lock
inc
add
or
mov
jae
pop
pop
jb
rorl
add
mov
call
push
shr
adc
out
lock
push
fcmovnu
aas
jmp
scas
sbb
xorl
cmp
cmp
aas
daa
mov
sbb
icebp
test
add
add
aad
add
add
mov
and
mov
test
add
dec
out
mov
pop
arpl
ds
xchg
daa
negb
in
jmp
pushl
mov
lea
or
dec
adcb
jl
mov
shrb
xchg
adc
pop
pop
insl
xor
test
div
rorl
push
sbb
or
dec
ja
or
loope
mov
or
jge
dec
dec
je
sbb
cmp
mov
icebp
imul
clc
pop
mov
orl
dec
cmp
pop
add
popa
or
push
repnz
sarb
arpl
adc
xor
enter
push
shl
sub
inc
pop
cmp
ret
sbb
inc
push
hlt
and
cmp
addb
jl
ret
or
inc
inc
test
cli
mov
rcll
hlt
cmp
or
add
lret
movsb
push
mov
cmp
adc
inc
push
cld
mov
fiaddl
inc
movb
sbb
rcrl
cmp
adc
jbe
ffreep
cmp
popl
adc
sbb
cld
sub
xbegin
icebp
xchg
mov
dec
outsl
dec
rorl
ret
fdiv
call
lock
or
cs
and
rclb
aam
lea
popa
js
sub
push
jle
scas
cmp
jbe
add
inc
fstps
push
xor
in
add
xor
push
sub
call
lods
addr16
test
rcll
aad
mov
sub
add
ss
jbe
add
pop
insl
mov
jno
or
xchg
jecxz
shrb
cmp
repnz
add
inc
sbb
mov
dec
call
xor
repnz
push
fiadds
arpl
ret
push
test
or
inc
mov
add
loopne
or
pop
das
push
pop
mov
aam
cmp
sbb
xor
sub
gs
inc
lea
adc
mov
push
push
inc
clc
int3
mov
mov
nop
pop
inc
cmp
into
or
ljmp
sbb
ss
sub
inc
out
push
jecxz
loop
mov
test
mov
test
out
sub
daa
incl
sub
outsl
pop
xor
cmp
and
or
lods
and
js
or
push
mov
mov
clc
pop
test
push
or
pusha
pop
jmp
mov
cwtl
jo
push
hlt
or
popa
dec
dec
fadd
dec
ficompl
add
and
push
push
addb
and
sub
ficoml
push
sub
cli
push
jecxz
pop
sbb
jns
sbb
bound
in
inc
lods
mov
sub
int3
rcr
pop
es
fcomps
or
jno
pop
adc
outsl
mov
or
mov
sub
divl
cmp
push
add
jge
push
mov
jl
sti
mov
clc
sub
push
jmp
loope
push
addr16
jecxz
hlt
orl
sbb
frstor
nop
add
cmp
adc
push
push
cmp
loop
push
repz
xchg
jge
fistpll
addr16
sbb
jne
adc
popa
push
xorl
lcall
divb
decl
lahf
shrb
cmp
sahf
je
mov
dec
or
cmp
pop
ret
adc
inc
ss
in
lahf
mov
xchg
adc
movsb
cmp
push
pop
adc
push
notb
jp
and
pushl
jne
aas
xchg
sbb
loope,pt
icebp
add
movb
fstps
loopne
out
pop
add
loopne
ds
xchg
adc
sbb
pop
adc
xor
push
cmpsb
sahf
shlb
and
jbe
sbb
clc
adcl
jmp
mov
mov
or
jp
lsl
mov
mov
mov
in
pop
ret
adc
scas
sub
fcom
enter
dec
pusha
and
lahf
fadds
and
dec
cld
or
mov
cs
or
sbb
cmp
sub
cmpb
jbe
add
pop
add
js
mov
xchg
in
sbb
jle
push
mov
fstpt
cwtl
pusha
adc
in
mov
add
clc
and
sahf
xlat
jp
repz
mov
shl
mov
mov
gs
movsl
mov
clc
add
bound
jp
adc
lock
push
push
insb
pop
das
jge
lret
les
lock
movsl
cmc
push
sahf
cmc
fmulp
push
adc
add
inc
push
push
jnp
fldenv
push
pop
or
mov
hlt
pop
icebp
addr16
jne
mov
mov
push
cmp
fcmovb
sti
mov
xchg
or
sub
jmp
and
or
lcall
fnstenv
mov
or
clc
mov
testl
mov
or
je
rcl
inc
das
addr16
in
sar
mov
sub
add
mov
rol
cmpsb
pop
icebp
jecxz
imul
jne
inc
push
nop
addr16
and
daa
pusha
pop
fistpll
inc
js
push
mov
or
and
rcrb
or
pop
cld
adc
sbb
sti
daa
inc
mov
sub
sub
imul
pusha
mov
in
jnp
into
push
insb
xchg
outsb
lahf
rcl
inc
inc
pop
cmpl
shlb
xorb
cmp
jne
adc
rorl
add
mov
aam
icebp
mov
jne
gs
imul
xor
push
mov
inc
cwtl
push
jle
lahf
jne
dec
add
mov
lock
loopne
lods
cwtl
lcall
push
test
jnp
and
lock
xor
push
push
pop
in
roll
enter
mov
mov
inc
das
je
add
std
sti
adc
pusha
imul
cmp
cli
mov
fiadds
cmpsl
scas
cmpsb
and
loopne
xor
and
sbb
adc
pop
out
arpl
popa
push
push
jnp
fbstp
lea
fcmovnbe
in
js
aad
pop
test
xor
adc
in
addr16
jecxz
aad
repz
mov
hlt
adc
fldl
fdivs
fistpl
xor
js
push
mov
test
add
cld
mov
test
and
lret
push
push
push
mov
mov
in
arpl
popf
nop
jl
pop
push
push
adc
psadbw
pop
cmp
in
jnp
push
push
shrl
ja
mov
push
jmp
lock
lods
jle
mov
push
push
jne
sbb
mov
or
pop
push
fmulp
push
xor
adc
mov
adc
mov
mov
pop
arpl
jo
pop
and
bound
mov
adc
lock
or
mov
test
pop
scas
add
sbb
repz
mov
aam
add
das
leave
xor
push
aaa
pusha
mov
fmuls
mov
inc
add
pusha
in
int
pop
in
es
mov
mov
in
popa
and
pop
xchg
and
popa
sbb
push
andb
mov
mov
dec
outsl
push
jg
ja
inc
and
aam
lods
mov
jp
cltd
fnstcw
popl
inc
bound
pop
sbb
mov
lds
adc
pop
mov
jge
out
mov
add
cs
sti
cmpsl
ljmp
cmp
daa
aam
sbb
lea
sub
mov
jbe
dec
ljmp
scas
roll
inc
cmpsb
jg
jge
sub
or
push
cmp
cmp
neg
fdivs
je
loopne
shr
shr
fcoms
sahf
inc
mov
outsb
pop
jb
pop
out
divl
cmp
pop
mov
push
xchg
sub
adc
outsl
bound
jbe
adc
xor
fidivs
ffreep
jp
xor
insb
add
rol
mov
mov
clc
pop
sbb
push
outsl
cld
ffreep
or
and
testb
inc
adc
jb
pop
movsb
mov
and
jne
dec
sbb
sub
xlat
jbe
jmp
inc
pop
push
adc
pushf
adc
or
jbe
push
subps
mov
jmp
push
addb
mov
push
xor
add
jge
insb
roll
pop
xchg
adcb
imul
div
pusha
mov
out
dec
mov
cmp
pop
or
add
in
fadds
mov
and
test
gs
push
mov
cmpl
js
stc
inc
sbb
jmp
popa
pop
neg
or
push
mov
dec
test
push
sbb
or
sarl
test
cmp
sub
fidivs
rcr
push
mov
test
mov
adc
cmc
mov
cwtl
shl
jno
aas
lcall
xor
sbb
sbb
inc
testb
dec
mov
leave
inc
cmp
hlt
mov
pop
adc
into
movb
cmp
cmp
add
pop
cmc
movsb
sub
add
mov
mov
movsb
pop
cs
mov
hlt
mov
pop
clc
clc
mov
xor
xor
cmp
mov
mov
ret
aaa
jg
shrb
loopne
pop
testb
mov
mov
iret
dec
addr16
mov
test
mov
js
insl
shlb
aaa
xchg
add
push
fisubl
adc
mov
jl
std
push
aaa
dec
insl
push
lea
fs
outsl
mov
insl
insb
xchg
into
cmc
cmp
scas
call
incl
rcrb
in
adc
add
or
jge
sbb
jnp
mov
mull
pusha
daa
xchg
aaa
ss
gs
sbbb
int3
mov
jl
roll
adc
sub
add
add
jb
sub
add
das
push
add
clc
ljmp
xor
testb
push
cmp
cmp
leave
ret
insb
test
xor
je
lods
sti
pop
adc
and
and
fsubs
aad
pop
pop
in
mov
pop
cmp
insl
adc
and
xor
sbbl
call
xchg
push
cmp
je
in
add
adc
jg
push
and
sbb
sbb
pop
fidivl
icebp
loopne
call
clc
jl
scas
sub
pop
sbb
sbb
push
or
pop
xchg
jbe
xor
sub
mov
xor
sub
mov
jge
and
add
rorb
jns
and
loop
cmp
dec
decl
rorb
cmpsb
dec
cmp
pop
arpl
xor
std
aaa
mov
mov
mov
enter
fimull
in
dec
pop
or
add
push
jbe
push
sub
daa
cmp
push
decl
jmp
call
jb
push
push
int
xchg
mov
hlt
sti
xchg
test
jno
push
mov
pop
or
js
bound
xor
in
lock
insl
call
inc
push
and
test
push
sti
and
adc
divl
mulb
mov
loope
rcrb
icebp
and
mov
push
mov
cmp
sub
inc
push
xchg
cld
pop
push
push
dec
push
push
mov
int
pop
sbb
or
sub
into
shlb
add
add
mov
adc
and
push
sub
mov
lods
incl
jle
jo
testb
aaa
mov
cmp
cmc
mov
cmp
loopw
pop
and
pop
cmp
fbld
pop
inc
sbb
adc
and
xor
mov
mov
sbb
jge
pop
push
sub
ss
shlb
dec
je
pop
jne
pusha
mov
mov
test
and
xlat
movsl
movsb
or
daa
rorb
test
push
cmp
jmp
cld
pop
or
add
inc
stos
sub
and
pop
mov
push
and
dec
mov
inc
js
andl
or
addl
in
pop
bound
or
sub
test
test
int3
push
stos
xchg
adcl
movsb
xchg
sbb
jb
fiadds
in
sub
mov
mov
add
or
aam
fnstcw
pop
fdecstp
sub
fs
add
pop
clc
and
cmp
xchg
popa
and
dec
insl
jmp
fildl
adc
testw
sti
call
cmp
jg
mov
lods
js
pop
imul
adc
dec
rolb
jae
iret
pop
sbb
fdivs
sbb
mov
pop
jmp
hlt
cmc
inc
sub
mov
lock
test
shll
test
push
and
mov
or
orl
mov
ret
insb
jo
or
cli
or
inc
js
or
cmp
jb
fstl
xchg
or
xchg
xchg
cmc
daa
loope
rolb
push
and
inc
nop
jnp
or
sbb
shlb
sub
cmp
movsb
push
mov
cmp
add
lods
xchg
inc
mov
arpl
in
out
frstor
js
sub
mov
adc
out
push
sti
xor
cmp
leave
sub
sub
and
sbb
in
sbb
sar
lcall
and
fmuls
lret
lds
xchg
sbb
out
mov
in
arpl
jmp
sbb
pop
iret
dec
and
shlb
push
jp
adcb
insb
sbb
je
mov
jo
add
movsl
jmp
mov
sub
test
cwtl
add
inc
xchg
outsb
pop
mov
adc
std
jg
cmc
mov
daa
pop
loope
inc
mov
push
cltd
and
push
sbb
xlat
mov
pusha
adc
loope
and
add
jbe
push
xor
lods
pop
or
pop
cmp
cmovno
cmp
out
pop
idivb
jge
and
fsubrl
push
xchg
xorb
insl
lea
adc
scas
xchg
sbb
mov
jge
push
sub
clc
dec
mov
mov
mov
incl
mov
icebp
or
add
add
xchg
call
mov
mov
sub
push
sub
cmp
or
dec
push
xor
rclb
addr16
xor
push
cmp
jge
cld
das
ja
jno
pop
lahf
push
or
jbe
adc
pusha
flds
mov
divb
daa
shlb
xchg
testl
mov
aam
fmull
loopne
sub
cli
cli
adc
sub
push
sbbl
mov
jns
pusha
mov
xor
jbe
insb
xor
loop
and
and
cmp
sub
rol
lahf
idivl
cld
jmp
adc
faddl
movsb
push
add
insl
call
xor
in
cmp
sub
ret
add
aam
mov
insb
loope
pop
imul
idiv
test
xorb
pop
je
jl
jnp
rcrb
mov
add
add
adcb
jns
mov
push
mov
negl
ficoms
negl
pop
mov
jo
and
pop
rcr
lahf
push
sub
in
sti
fidivs
jl
out
cs
pop
adc
sbb
inc
cmp
pop
adc
ds
or
jae
jge
push
pop
fs
arpl
pop
cmpb
or
icebp
inc
mov
in
lea
jg
mov
inc
inc
or
jne
popa
pop
mov
aaa
shll
jne
add
dec
jmp
xchg
clc
fs
popl
insb
xchg
inc
testl
aas
leave
add
pop
cli
adc
ds
cmp
pop
pop
push
push
mov
movzbl
pop
pop
leave
dec
and
pop
sub
pop
push
insl
mov
mov
sbb
jge
lret
pop
sub
pop
sti
sbb
sub
sbb
pop
sub
jmp
xchg
dec
mov
mov
arpl
shl
jb
in
or
sub
pop
imul
add
adc
sub
push
out
sti
pusha
fsubl
inc
clc
xor
jge
mov
pop
clc
sub
sub
or
push
adc
fsubp
sub
xor
jbe
add
sahf
sub
aad
mov
test
mov
adc
jns
and
sbb
inc
insl
push
push
insl
sbb
sbb
cmp
adc
std
sbb
ss
lods
lods
add
mov
push
ret
outsb
jo
mov
pushf
jl
sti
pusha
pop
lret
mov
aaa
push
pop
push
mov
mov
push
push
or
rclb
mov
call
push
roll
sbb
sbb
aaa
cld
movsb
mov
pusha
or
pop
or
popf
sbb
sbb
push
lahf
or
mov
jne
in
das
push
hlt
jle
nop
mov
cmc
push
xchg
sub
add
xchg
call
les
pusha
dec
fdivs
cli
movsb
push
js
mov
pop
nop
push
xor
sub
lods
out
jno
pop
ret
rolb
mov
jo
test
or
mov
xchg
xor
dec
and
jmp
inc
sahf
xor
dec
lods
cli
jb
or
es
outsb
dec
mov
and
out
or
mov
sub
imul
imulb
dec
sub
jne
les
call
and
pusha
fisttps
pop
push
call
rolb
hlt
mov
sub
andl
push
shlb
mov
add
jge
xchg
mov
call
rep
push
sbb
clc
in
leave
mov
dec
or
jl
pop
pop
sub
popa
repnz
add
push
pop
sub
pop
jge
fcom
pop
icebp
jle
iret
or
mov
pop
cmpsl
test
sbb
sub
jle
scas
mov
sub
andl
shll
ret
ds
pop
xor
mov
mov
cmp
jl
xor
test
or
jl
mov
pop
and
sbb
jecxz
cmp
pop
push
sbb
testb
stc
enter
push
clc
inc
add
mov
xchg
and
adc
cmp
lea
push
fstl
bound
mov
mov
test
and
outsl
sub
ljmp
mov
pop
js
aam
clc
mov
adcl
push
das
pusha
sbb
cmp
sub
pop
xchg
pop
mov
push
mov
inc
aas
jbe
sbb
adc
mov
cmp
mov
data16
jo
xor
push
outsb
call
sbb
mov
xor
pop
sti
rcll
fiaddl
xor
ret
loope
inc
cmp
ss
mov
cs
sbb
cmc
mov
push
mov
mov
pop
cmpl
or
int
aas
dec
js
cld
rcl
xor
add
mov
sub
pop
in
test
pop
sbb
pop
std
and
imul
cld
addr16
xor
movsb
mov
jb
rcrb
cmp
movsb
pop
jnp
pop
pop
in
inc
test
cmp
adc
hlt
xor
mov
dec
fdiv
mov
sub
xor
popf
inc
add
or
loopne
xchg
lds
mov
inc
mov
das
roll
fistl
out
mov
sbb
jge
lret
dec
add
push
pop
imul
ret
aas
add
mov
rorb
mov
orl
rcpps
cld
mov
lock
xor
adc
or
mov
jne
call
inc
jno
cmp
jbe
push
ret
add
shlb
inc
cmp
stos
jmp
les
cmp
mov
jo
push
mov
decl
jmp
sub
int3
cmpsb
hlt
inc
stos
daa
push
arpl
sbb
hlt
mov
xorb
and
lods
pop
fldcw
jle
add
scas
in
rorb
pop
adc
sub
loopne,pn
inc
mov
insl
insb
push
mov
xchg
lds
les
cmpsl
and
int3
sbb
mov
and
mov
xchg
push
cs
jmp
dec
call
mov
pop
xlat
mov
pop
pop
ss
sub
arpl
adc
idivb
dec
sbb
notb
movsb
ja
fisubrl
and
ds
sbb
mov
adc
inc
scas
pop
dec
out
lods
and
jge
jge
mov
dec
adc
mov
pop
aas
les
adc
ss
pusha
xchg
les
pop
pop
popa
arpl
insb
sarb
popa
repnz
push
mov
sbb
es
xchg
in
sbb
shll
out
mov
push
fwait
jge
adc
stos
sub
cmp
lret
lods
bound
loope
and
inc
aam
loop
pusha
sbb
adc
pop
mov
mov
add
push
inc
fisttpl
fs
jmp
pop
add
pop
sbb
into
push
lock
push
sub
add
lcall
cs
nop
jo
test
mov
push
xor
jge
mov
push
fs
and
rolb
cmp
pop
xor
push
push
push
jbe,pn
je
xor
shll
outsb
insb
mov
lock
lcall
mov
mov
and
add
or
mov
ja
push
cmp
mov
cmpb
cmp
popa
mov
sub
adc
mov
inc
dec
push
add
mov
test
or
xchg
add
add
dec
je
or
jl
rorb
cmp
push
sbb
shr
xor
cmp
dec
lea
xor
xor
xchg
mov
loope
sbbl
aam
push
int3
push
jle
nop
out
subl
add
ret
dec
dec
cld
jb
add
loope
mull
dec
jmp
shl
daa
push
insl
mov
cmp
mov
mov
fdiv
outsl
in
or
shrb
dec
dec
cmp
hlt
sahf
scas
dec
clc
jle
sub
ret
push
mov
sub
div
imul
popa
inc
sbb
shlb
mov
insl
in
pop
cs
mov
movsl
or
jae
xchg
aaa
das
les
mov
cmp
dec
jecxz
push
sub
pop
push
sub
sbb
aaa
mov
push
sbb
inc
mov
sub
roll
push
pop
push
mov
lock
inc
sub
dec
out
adc
fucom
pop
cmpsl
xchg
cmp
add
jne
imul
and
cld
lea
lds
cmc
ss
cmc
lcall
popa
insb
add
out
js
and
sbb
mov
add
adc
push
jle
inc
bound
outsb
aaa
loopne
ret
js
sbb
lea
adc
sub
mov
xor
js
sbb
adc
rorb
div
push
mov
dec
and
mov
add
sub
orl
pop
sub
fadds
xadd
jmp
push
aaa
sub
arpl
mov
daa
or
icebp
or
mov
jge
and
daa
xor
arpl
cmp
fcom
xor
inc
es
out
xchg
push
insb
push
xsaves
push
xor
lock
daa
jl
pop
cmp
jle
push
ljmp
mov
jge
push
cmp
sub
test
dec
dec
lods
cld
or
and
push
jmp
add
jne
inc
mov
mov
lods
xchg
movsl
shl
push
add
in
mov
andb
jg
jbe
lcall
pop
roll
sbb
fistl
add
xor
aaa
xchg
push
mov
je
jo
pop
std
rcl
fisubrl
mov
adc
push
jbe
scas
mov
test
rclb
or
and
fwait
movsb
jmp
mov
call
pop
jbe
sbb
xor
loopne
rclb
jbe
insl
pop
jns
or
cmp
into
lea
cld
or
sbb
pop
mov
add
mov
test
mov
loopew
sub
ds
test
loope
mov
mov
fwait
mov
and
test
add
scas
xchg
cli
aas
adc
dec
or
cs
adc
popa
or
int3
in
ret
fsub
lahf
jae
arpl
inc
or
ror
pushf
mov
cmp
fwait
adc
jge
cmp
clc
jmp
and
mov
pusha
je
jbe
inc
pushf
adc
stos
scas
loopne
insb
push
or
imul
adcl
mov
jbe
incl
inc
mov
inc
leave
aas
test
aas
imul
or
pop
push
mov
cmp
mov
mov
lea
push
add
mov
bound
cmc
mov
adc
mov
aas
xchg
je
and
int3
loope
jl
sub
lods
inc
mov
mov
add
push
cmp
sub
lods
cmp
mov
fcomps
mov
int3
cmp
stos
mov
mov
adc
mov
lea
push
pop
add
push
shlb
adc
add
or
xchg
out
shll
mov
dec
xor
daa
ss
push
xchg
rolb
insb
inc
loope
clc
cmp
test
dec
push
xchg
clc
idivb
fimull
in
jo
data16
sti
inc
adc
fnstenv
xchg
inc
jnp
add
roll
sub
cmp
ret
pop
inc
test
jne
mov
xchg
ljmp
cmp
clc
aam
sub
mov
sti
push
dec
mov
punpckhdq
or
inc
test
sub
pushl
mov
mov
mov
add
sahf
data16
xor
sub
outsl
xchg
rol
add
outsl
mov
pop
push
test
add
or
cmp
pushl
jp
cmpsb
or
mov
insl
das
mov
sar
mov
sbb
xchg
fimull
out
add
pusha
pcmpeqb
aad
jae
pop
mov
dec
adc
orl
movsl
sarl
push
or
clc
mov
call
cwtl
push
dec
mov
jle
cmpl
jno
cmp
sbb
pop
and
push
and
aas
mov
xor
cmp
add
jbe
and
sbb
ds
fdivs
or
xor
and
rclb
push
jecxz
in
adc
add
pop
mov
fidivl
ss
dec
mov
leave
or
fcomps
divb
ret
jnp
mov
push
push
add
mov
cmp
inc
scas
and
jbe
mov
std
sbb
cmp
ret
popf
cmpl
adc
jge
xchg
pop
pop
and
sbb
inc
push
hlt
sbb
in
sub
fdivrs
adc
insb
pop
mov
sbb
inc
cld
pop
pop
je
cmp
lock
subl
xor
pop
push
push
repnz
ds
into
ret
outsb
lea
cmp
and
inc
pop
pop
mov
out
cmpsl
mov
jo
scas
mov
xor
jne
and
push
pop
push
add
adc
sahf
mov
ljmp
idivb
add
fucomi
in
xor
inc
sbb
in
imul
in
add
ja
xchg
xor
inc
lods
testb
daa
mov
inc
adc
loop
subl
out
lock
hlt
fstpl
push
and
push
sbb
mulb
add
push
cmp
test
mov
dec
jae
and
iret
and
mov
inc
pop
add
imul
call
orl
lea
sub
mov
adc
push
lods
insb
xchg
ret
pop
xchg
jb
push
sbb
cli
inc
cmp
insl
sbb
ljmp
mov
mov
jl
gs
add
push
xchg
fs
fdivrs
rorb
add
mov
scas
push
mov
sbb
stc
mov
mov
sbb
aam
rol
push
push
push
cld
pop
pusha
xchg
add
inc
sbb
outsl
gs
or
pop
sbb
add
dec
repnz
loop
inc
cmpsb
push
mov
fadds
or
and
mov
jo
shlb
or
movsb
int3
inc
pop
ffreep
jbe
push
test
adc
ja
jle
jbe
jne
inc
jle
add
xor
add
bound
adc
lock
pop
les
dec
dec
sbb
les
into
mov
dec
push
je
inc
add
gs
loopne
mov
or
adc
popa
loop
clc
push
aam
out
adcl
xchg
roll
jne
std
push
mov
call
push
add
jmp
inc
adc
jae
and
pop
jl
pop
xchg
xchg
pop
push
aaa
add
daa
cmp
jmp
inc
add
pop
xchg
xor
mov
fsubs
or
xchg
push
push
push
bound
sar
int3
xor
pop
andb
cli
bound
adc
push
js
xor
inc
jb
int3
mov
sub
mov
inc
sbb
push
insb
add
sbb
lock
cwtl
push
movsb
cmp
inc
fimuls
fcomps
sarb
clc
std
and
lret
xlat
data16
faddp
inc
out
addl
dec
push
aaa
jne
push
mov
jle
jno
clc
mov
mov
push
inc
xor
in
adc
inc
cmpsb
cmp
in
jne
or
aad
outsb
scas
sbb
test
aam
iret
or
inc
adc
stos
movsb
mov
xchg
bound
and
sbb
jb
or
jbe
mov
out
pop
mov
mov
aaa
mov
or
sbbl
jne
je
dec
push
cmp
leave
fsubrp
out
add
cmp
dec
xchg
clc
in
push
inc
pop
stos
sub
cmp
or
mov
lock
fdivr
pop
pop
mov
push
fstps
leave
push
and
fildl
push
pop
and
mov
push
and
psrld
push
sbb
xor
xor
js
and
leave
mov
call
in
aaa
fdivs
mull
dec
in
mov
mov
push
in
adc
add
pop
jbe
jecxz
push
jle
and
fistpll
jle
lahf
shrb
dec
into
push
add
mov
push
adc
push
pusha
cmp
push
push
mov
jno
mov
mov
push
leave
lret
sub
mov
dec
inc
and
es
inc
sub
push
les
sbb
sti
cwtl
arpl
pop
push
in
sub
pop
adc
fidivrs
adc
sbb
fimull
hlt
dec
ja
cs
push
stc
jmp
mov
inc
push
and
and
adc
sub
jo
in
mov
lock
mov
aaa
sub
xchg
jmp
sbbb
bound
inc
andb
insl
aaa
add
push
add
sbb
faddl
cmp
and
push
jl
sub
out
mov
lret
test
rclb
inc
dec
inc
clc
mov
sbb
fs
pop
ret
sub
push
mov
jb
dec
outsl
mov
jge
pop
push
inc
repnz
jo
mov
mov
mov
sub
push
push
mov
rclb
into
mov
ss
inc
push
adc
jbe
ja
xor
push
and
and
dec
pop
push
adc
mov
sbb
rcll
or
cmc
cld
xor
mov
inc
sbb
pusha
adc
idivb
sbb
pop
icebp
cwtl
mov
addr16
ss
add
push
push
in
test
jne
add
pop
stos
iret
mov
or
cmp
sbbl
mov
mov
andl
mov
add
xchg
call
push
fsubs
pop
mov
adc
inc
hlt
mov
mov
add
pushl
or
xor
push
cmpb
jle
imull
push
into
cmp
fcomi
fstpt
nop
inc
or
and
in
push
inc
mov
stos
mov
aas
mov
cmp
dec
xor
mov
pop
or
push
ss
or
and
dec
jne
hlt
movups
push
int
and
xor
test
mov
or
push
inc
cmp
mov
add
xchg
stos
jle
sub
push
dec
int3
insl
mov
lcall
test
mov
add
add
fcoms
mov
out
jl
jmp
fcomps
cmp
mov
or
clc
and
in
fldcw
jp
arpl
push
or
mov
ljmp
add
std
jp
lcall
cmp
sbb
sub
les
push
xchg
jp
mov
pusha
cli
cmp
push
push
add
shll
add
fistpl
inc
push
inc
pop
and
mov
out
or
add
add
sub
xlat
add
sub
test
std
sbb
sub
push
nop
push
popf
test
xchg
push
jns
jbe
cmp
fs
cmp
and
int3
inc
cmpsb
aad
arpl
cltd
push
pop
idiv
jne
ds
lret
cmpb
mov
inc
push
push
ss
push
imul
sbb
pop
pusha
mov
or
out
add
xorl
fstpl
push
aam
push
sbb
js
lcall
mov
decl
cmpb
dec
jecxz
test
mov
fs
test
adc
cmpl
add
sbb
jae
neg
cmp
jle
lea
sbb
mov
inc
arpl
pop
inc
push
or
aas
dec
scas
shlb
arpl
sub
and
add
loope
iret
js
jmp
test
cmp
popa
push
pop
sbb
aas
sbb
xlat
push
mov
push
sbb
dec
lods
pop
aad
insl
es
or
fisubrs
inc
push
rorb
push
test
repz
xchg
pop
arpl
sub
movsb
or
push
adc
cwtl
lcall
mul
mov
pop
sahf
shlb
std
addl
std
or
test
dec
pop
xchg
mov
test
mov
and
and
loop
cmp
daa
push
pop
popa
testb
jbe
sub
cmp
xor
iret
add
cmp
test
dec
fidivl
int3
jecxz
xor
and
sbb
repz
inc
lds
insb
adc
adc
insb
inc
push
mov
push
rolb
push
and
ss
dec
adc
mov
pusha
sub
enter
dec
and
push
sbb
mov
xchg
cmp
dec
dec
pop
add
stos
test
lret
fnstcw
sti
test
orl
cwtl
outsb
pushf
pusha
and
or
mov
add
dec
out
mov
sub
rorb
iret
push
inc
dec
pop
mov
ljmp
and
push
jg
mov
add
scas
push
ret
pop
das
pop
push
subl
xor
xchg
cmp
cli
mov
mov
cmpb
rorb
mov
bswap
test
cmp
jbe
jmp
push
lds
sbb
rcrb
sar
daa
nop
cwtl
xor
dec
popa
sbb
push
mov
adc
iret
inc
sub
or
dec
addr16
inc
jg
pop
jnp
and
mov
mov
outsb
xor
add
add
cmp
xchg
mov
adcl
pop
pushf
scas
popf
sti
or
sbbl
jecxz
dec
mov
aad
push
loopne
out
int3
test
arpl
pop
mov
in
lea
xor
jns
sbb
mov
push
fcoml
mov
jns
pop
mov
popf
jge
or
xor
dec
sbb
popl
testb
sub
pop
cld
dec
clc
inc
pop
jbe
aam
mov
nop
mov
pop
or
jmp
aad
dec
inc
mov
push
movsl
push
sbb
and
jl
test
mov
lret
ss
scas
mov
mov
add
jae
daa
xchg
stos
add
addr16
mov
or
xchg
mov
pop
push
push
neg
mov
jl
or
push
mov
jo
and
mov
jbe
sbbb
loope
and
jno
movb
add
jp
arpl
jle
loope
mov
adcl
sahf
sbb
inc
xchg
dec
scas
aaa
xor
or
gs
and
enter
ss
adc
mov
add
adc
inc
pop
push
push
dec
jecxz
arpl
stos
push
xchg
out
push
fsubrs
add
and
adc
ror
in
pop
scas
xor
jne
cmpl
fstps
ret
mov
fisubs
fcompl
cmp
sbb
pop
sar
mov
nop
xor
cmpsl
mov
incb
xor
fadds
das
xchg
push
mov
xchg
xchg
pop
sub
mov
sbb
dec
clc
imul
inc
dec
jmp
cmp
xlat
push
dec
jns
sbb
sub
movl
cmp
repz
xor
movsb
cmpsl
sub
je
xchg
xchg
push
dec
mov
ficompl
rorb
push
lea
jnp
add
inc
dec
push
cmp
pushf
cmp
ret
push
dec
mov
jo
xchg
shlb
lds
jmp
adc
std
sbb
insb
out
sar
push
rol
popa
xchg
nop
adc
test
cmc
pop
insb
mov
sbb
add
push
in
push
add
xchg
mov
pop
nop
mov
add
inc
pop
or
add
xlat
cmc
sub
or
or
sub
es
and
insb
sbb
or
xor
push
mov
mov
mov
repz
es
test
push
mov
cmp
or
adc
iret
sub
xchg
scas
popa
push
sbb
dec
push
gs
cmp
lret
es
dec
cmp
in
popa
mov
push
lock
xchg
pop
mov
sbb
stos
cli
mov
test
pop
jecxz
mov
and
imul
pop
sbb
mov
cmp
aaa
fnsave
movb
inc
jmp
test
sbb
inc
jle
cmp
outsb
test
sbb
pop
adc
shr
or
cmpsb
or
mov
cltd
popa
dec
inc
inc
mov
idivb
dec
fsubl
dec
mov
add
insb
loopne
cli
xchg
das
test
sarb
add
popf
cmovl
adc
adc
or
pop
pop
inc
in
mov
cli
push
adc
lods
adc
push
ret
fcoms
pop
jae
cmp
and
dec
in
cmpb
xchg
dec
and
clc
shll
dec
scas
test
arpl
fiaddl
into
push
dec
sub
or
pop
mov
add
mov
add
in
push
pop
xchg
gs
mov
mov
or
test
movsl
jo
push
or
stc
bnd
push
add
adc
fcom
rclb
call
test
cmp
push
add
dec
add
out
add
push
arpl
shll
xor
or
pop
push
mov
sbb
and
jge
gs
adc
xor
and
xchg
cmp
negl
jnp
addb
mov
mov
shlb
adc
adc
rcrw
adc
lea
pop
mov
cmp
jno
mov
jl
icebp
push
popf
ss
add
add
sub
mov
lea
and
push
cmp
mov
stos
stos
push
add
pop
push
test
stos
push
xorl
cmp
add
loopne
xor
clc
pop
xchg
movb
sbb
fidivl
leave
pop
mov
jge
test
int3
ja
jmp
sbb
or
sub
inc
mov
cmp
pop
pop
push
inc
in
into
push
add
cmp
scas
dec
cmp
mov
data16
sbb
nop
cmpl
xor
cmp
jl
push
sbb
and
push
or
clc
ds
lds
les
or
cmp
ljmp
hlt
mulb
push
rcll
or
adc
test
testl
cli
arpl
dec
fs
jl
mov
and
adc
pop
cmp
out
pop
inc
push
sub
push
or
mov
outsl
adc
xor
cltd
imul
push
mov
mov
pop
rcrb
dec
pusha
add
aaa
push
mov
dec
cmpl
mov
loop
cmpsl
jo
push
sbb
mov
push
sub
lea
test
movsl
pop
or
push
call
test
lock
push
xchg
dec
ss
mov
or
testl
push
push
mov
popa
push
mov
dec
nop
pop
lds
fcompl
pop
sets
shrl
and
outsb
add
sub
xor
xchg
mov
cmp
or
and
and
adc
out
dec
je
add
inc
sti
repnz
mov
test
or
jp
jae
adc
dec
aas
pop
pop
notb
dec
xlat
dec
pop
sti
sub
xor
cmp
inc
push
and
push
jg
mov
cmp
or
xor
xor
and
pop
cmp
inc
mov
adc
sbb
sub
test
add
les
and
or
mov
adc
loopne
arpl
mov
jmp
mov
lock
pop
push
loopne
xor
insl
xor
jecxz
shll
push
adc
dec
rcrl
push
sbb
push
mov
add
pop
adc
stos
add
dec
add
xor
mov
ret
out
pop
and
enter
adc
jbe
push
rcll
dec
xchg
cmp
pusha
pop
mov
push
sub
aas
sub
sub
dec
dec
pop
pop
aad
cltd
lcall
loop
stos
inc
pop
je
cmp
mov
mov
lods
push
xchg
lret
xor
xchg
shlb
shrb
shll
adc
cmp
pop
negl
loopew
sti
sub
dec
pop
push
inc
xchg
pop
lahf
mov
dec
loopne
inc
push
cmp
xlat
arpl
xchg
icebp
cmp
roll
mov
add
add
cltd
pop
sbb
daa
je
rcrb
push
sbb
dec
and
jl
add
lock
cmp
pop
sub
outsl
lret
pop
sub
or
sbb
jbe
add
push
mov
push
fs
popa
mov
inc
xchg
sbb
mov
cmp
cmpb
and
push
popa
test
aaa
and
icebp
mov
fnsave
xor
repz
xchg
cmp
jp
rcr
and
or
lahf
incl
fdivrs
test
test
fsubrl
adc
or
daa
sbb
mov
mov
lock
mov
fisttpl
jno
invd
fcomps
pop
mov
push
sub
sbb
mov
mov
add
or
or
pop
rclb
pop
jne
in
cmp
and
jecxz
arpl
push
push
mov
pop
mov
ret
and
add
dec
and
or
insl
add
mov
sahf
or
push
jge
std
push
hlt
add
rclb
add
in
jo
mov
mov
imul
cmp
or
mov
inc
mov
leave
int
xor
sub
xor
xchg
rcrl
roll
or
inc
mov
or
add
xchg
lahf
loopne
loopne
jmp
lods
sahf
add
dec
iret
mov
or
js
cmp
pop
out
call
jl
or
adc
nop
pop
sarl
mov
push
push
push
les
push
pop
rcrb
mov
ret
push
or
arpl
xor
jle
mov
in
test
pop
or
pushf
inc
jp
lock
jbe
jne
push
dec
roll
cmp
scas
pusha
sbb
lret
sbb
and
inc
and
inc
call
mov
rorl
and
inc
lock
sbb
outsl
rcrl
rorl
lds
push
mov
pop
mov
sbb
mov
sub
and
loop
pop
bound
orl
rcrb
inc
push
xor
push
mov
pop
cmp
inc
das
mov
orl
or
je
mov
popf
mov
sub
sub
add
sub
jmp
add
mov
inc
inc
lods
hlt
in
mov
add
lcall
daa
out
inc
cld
bound
cmpsl
out
mov
arpl
add
and
movb
sub
sbb
icebp
sub
inc
xchg
mov
mov
mov
pushf
dec
sbb
in
stos
movsl
lods
mov
push
mov
push
xor
out
push
jmp
inc
sbb
out
cli
inc
sub
mov
mov
in
dec
mov
pop
mov
cmp
xor
push
mov
or
or
add
outsb
adc
cli
sub
sub
mov
shl
cmp
test
jle
loop
and
shl
pop
sub
fcmovb
pop
addr16
add
lea
adc
xchg
jecxz
cmpb
sbb
cmpsb
in
xor
andl
imul
pop
mov
mov
testb
add
adc
add
add
dec
mov
out
daa
mov
xchg
sbb
adc
or
xchg
sarl
mov
xor
shlb
rclb
ljmp
or
pusha
pop
out
stos
pop
push
mov
xchg
push
into
fistl
push
xchg
push
mov
sbb
mov
aam
jo
leave
call
loopne
arpl
pop
lahf
jecxz
pop
je
push
aad
pop
push
stc
test
or
xchg
mov
adc
add
xchg
out
jno
movb
inc
stos
push
out
adc
dec
pop
out
arpl
test
ja
lea
push
mov
aam
adc
adc
jb
mov
adc
int3
adc
sub
inc
imul
push
push
ds
leave
lock
dec
enter
rolb
hlt
hlt
sbb
arpl
mov
push
pusha
rcr
or
dec
fs
andb
push
addr16
dec
pushl
add
orl
pop
imul
mov
loop
aam
fdivrs
inc
inc
cmp
jmp
xor
jge
jmp
xchg
bound
imul
lcall
cld
sbb
mov
sub
js
adc
sub
lds
mov
add
ss
jg
dec
push
push
xchg
sbb
inc
or
into
push
cli
insl
mov
jno
lods
pop
mov
ljmp
inc
dec
mov
mov
adc
lods
test
cmp
and
pop
dec
aad
outsb
add
and
xchg
popa
push
les
push
mov
cld
pop
adcl
mov
adc
xchg
adc
pop
mov
add
dec
jne
mov
rclb
in
mov
fs
out
adc
push
adc
shlb
dec
in
adc
and
mov
sub
add
inc
cmpsb
xchg
orb
test
adc
rcll
outsb
inc
jp
arpl
sub
loope
lds
loop
and
add
push
cmp
jne
fdivl
int
inc
xchg
roll
gs
stos
and
and
jecxz
mov
punpckhdq
xor
add
lods
jp
out
out
out
push
test
inc
leave
mov
clc
add
lds
pop
cmp
aam
jmp
mov
ret
in
jp
lds
in
cmp
lret
rcrl
xor
and
cmp
daa
add
out
jno
mov
or
xchg
das
int
add
add
push
jo
mov
inc
sub
lods
dec
cwtl
jae
sbb
push
inc
pop
sti
mov
std
fsubrs
mov
push
in
xor
or
add
pop
xor
sbb
fdivp
movsb
daa
test
push
dec
ljmp
dec
dec
adc
ss
popf
dec
sub
jmp
sbb
cmc
push
push
or
adc
mov
cmovp
js
mov
dec
dec
or
je
lahf
xor
pop
dec
outsl
pop
hlt
add
mov
sub
or
xchg
push
sub
imul
sub
dec
shlb
mov
mov
lds
pop
and
push
cmp
push
scas
adc
push
mov
in
test
bound
adc
adc
test
sbb
sti
add
push
xor
loopne
outsl
inc
sbb
aad
add
loopne
lea
mov
jmp
or
jg
sub
push
repz
inc
fisttps
adc
or
adcl
inc
ljmp
shll
cwtl
sub
mov
fimull
subb
dec
sbb
test
jecxz
or
or
int
fcoms
pop
mov
xchg
xor
jno
test
loopne
inc
loopne
outsl
dec
test
aam
and
sub
jg
push
xor
dec
and
and
fistps
xchg
loopne
sub
mov
xor
sti
mov
dec
js
jo
pop
and
sub
add
cld
int3
rolb
popf
test
adcb
stos
jmp
xchg
sub
xor
leave
adcl
aad
mov
js
push
lds
sbb
or
popl
adc
mov
adc
jbe
lods
sbb
cld
adc
xor
adc
rcll
mov
mov
cs
sbb
hlt
mov
mov
loopw
sahf
inc
push
cmc
pop
push
push
adc
popf
or
mov
sbb
sub
xor
sbb
addb
mov
dec
push
push
adc
push
push
mov
pop
mov
decl
xor
stos
sahf
adc
add
xor
or
inc
adcb
lcall
pusha
xchg
sbb
dec
testb
and
aaa
sbb
test
push
push
push
adc
xor
hlt
sbb
test
inc
or
cs
test
add
mov
dec
enter
mov
and
or
leave
fildll
in
das
cmp
jns
xchg
adc
ret
or
call
jmp
cld
push
push
dec
mov
jno
adc
dec
cmp
dec
push
push
comiss
adc
inc
xchg
rcrb
push
add
std
dec
xlat
pop
imul
ret
or
test
push
mov
add
cmp
mov
lods
out
pusha
aad
cmp
dec
loopne
xlat
test
or
xlat
adc
ds
pop
adc
lods
cmpl
loopne
mov
cmp
ljmp
mov
sbb
sbb
lds
pop
jo
inc
mov
sub
sub
jge
out
les
ss
sbb
mov
lret
push
movsl
cmpsb
mov
dec
aam
fs
out
add
dec
lcall
sbbb
lret
inc
int3
adc
test
xchg
push
adc
test
mov
fldcw
mov
int
lcall
dec
popa
repz
cmp
int3
sahf
rcl
mov
sub
push
repz
cmp
sti
test
repnz
lds
arpl
jmp
push
push
daa
xor
cs
pop
out
orl
mov
lods
push
pop
or
mov
aad
mov
dec
jge
jo
fcoml
adc
jnp
dec
mov
fadds
movb
stos
fwait
push
mov
lcall
daa
nop
mov
aas
pushf
mov
lods
jno
pop
or
cmp
push
push
addr16
loopne
push
jmp
and
icebp
cmp
push
int
add
lcall
jno
add
imul
cmp
std
pop
dec
push
adc
and
or
jo
call
es
sbb
sub
es
jbe
and
or
dec
dec
dec
mov
inc
lock
inc
ret
std
push
push
in
add
push
mov
test
lds
dec
adc
mov
push
pop
popf
ss
shrl
gs
mov
sub
adc
xor
xor
jp
push
js
cmp
or
adc
sub
test
cwtl
cmc
movsb
mov
repnz
sbb
mov
sub
in
xor
fidivs
jnp
jmp
push
or
jge
push
add
xor
addr16
clc
mov
jmp
adc
cmp
popa
jo
pop
lea
jl
js
in
and
movsb
jle
or
add
cmp
and
push
test
dec
add
jmp
dec
insl
add
push
cld
sbb
or
inc
cmp
pushf
jg
inc
in
mov
and
xchg
jo
stos
fs
sbb
adc
mov
inc
mov
arpl
out
push
jne
pop
rcrb
repz
pusha
and
jne
iret
pusha
add
xchg
sub
imull
cmp
xchg
mov
dec
add
roll
mov
xor
adc
inc
sub
xchg
xor
lret
add
jbe
sbb
cmp
arpl
push
jmp
push
xchg
inc
sbb
push
push
mov
sub
sbb
jle
xor
mov
pop
add
enter
iret
pusha
mov
push
pop
mov
lock
inc
dec
add
sbbl
mov
or
sbb
inc
jo
xor
roll
pop
cltd
sub
push
movl
int
cmpsb
jae
sub
push
and
or
rcll
loopne
add
mov
idivl
rol
adc
cmp
dec
andb
dec
jle
push
mov
loopne
and
dec
push
mov
inc
xchg
inc
dec
cld
mov
in
and
test
pop
push
addr16
pop
call
outsl
cld
push
iret
outsb
sbb
sbb
jno
sub
dec
iret
xor
lea
xlat
mov
fbstp
fisttpl
add
test
push
shlb
sbb
mov
mov
xor
mov
pop
pop
sbb
dec
jb
adc
cmp
pop
adc
arpl
pop
sub
adcb
adc
faddl
rorb
shlb
cmp
and
push
les
mov
fs
or
sub
or
pop
fwait
push
and
mov
cmpsb
xor
mov
test
push
add
dec
xor
stc
cmovb
dec
push
pusha
mov
mov
push
lock
subl
cmp
aad
push
inc
mov
clc
ds
lods
in
sti
test
push
mov
stc
nop
xchg
pop
call
push
push
ja
lock
aas
out
mov
fmuls
out
loopne
call
loop
js
sub
push
cmp
push
adc
fldenv
pop
subb
and
or
push
cmp
dec
lds
dec
iret
pop
imul
daa
pop
and
or
inc
dec
outsb
sub
aam
mov
inc
nop
or
push
js
mov
inc
cmp
pop
sub
push
inc
jns
or
call
cmp
pop
cmpsb
mov
inc
add
cmp
test
and
lcall
push
add
jmp
shr
shr
test
push
xlat
inc
mov
sti
jns
mov
movsb
test
ja
inc
push
push
and
jle
aaa
movsb
pusha
imull
push
push
pushl
add
sbb
push
push
lock
call
jmp
pop
push
add
mov
lock
mov
leave
xchg
mov
add
and
sbb
jl
xor
mov
cmp
arpl
cld
xchg
push
mov
sub
jl
lock
mov
movsb
cmp
and
roll
call
dec
mov
cmpb
sbb
or
sbb
pusha
jnp
add
jne
cli
pop
pop
push
cld
push
pop
mov
add
test
fdivs
add
jo
nop
add
stc
jns
push
push
pop
sbb
and
jbe
add
push
loopne
inc
imul
aad
dec
notb
popf
xchg
mov
cmp
inc
loope
jnp
lea
lea
daa
mov
push
pop
mov
pop
cmpl
and
fucomip
push
cmp
fdiv
add
add
add
test
push
add
lock
sub
and
in
fisubl
fcmove
lcall
enter
sub
add
pushf
shlb
jp
ds
push
push
sbbb
testb
and
fimuls
dec
lea
andl
adc
mov
cmc
inc
pop
mov
loop
cmp
inc
pop
mov
mov
inc
lcall
aad
ret
movsl
inc
and
or
imul
inc
mov
or
inc
icebp
ficompl
sbb
mov
out
test
cmp
add
pop
test
movsb
add
in
pop
or
cmc
mov
push
lahf
lret
jns
loopne
inc
push
inc
mov
scas
push
arpl
sbb
push
xchg
jnp
xor
stos
add
ds
xor
add
dec
push
test
das
cmp
or
inc
xchg
cmp
pop
mov
mov
subl
or
dec
dec
das
idiv
mov
or
test
mov
sub
dec
hlt
inc
sbb
pop
ret
std
push
mov
adc
inc
int
aam
adc
or
pop
or
cmp
push
push
fldenv
sub
or
je
jmp
push
out
test
rorl
leave
cmp
insl
jbe
sbb
push
hlt
sbb
push
int3
mov
je
dec
pop
in
daa
mov
mov
add
leave
ret
pop
mov
add
fwait
adcl
mov
stos
shll
jge
in
je
jnp
bound
xor
adc
jmp
testb
arpl
dec
imul
repnz
and
nop
dec
inc
pushf
test
push
xor
and
xor
or
push
add
mov
arpl
or
and
sbbl
dec
mov
jp
dec
sbb
push
loopne
mov
xchg
int3
cmp
outsb
mov
sbb
or
les
inc
loopne
push
mov
sub
cmp
cli
jo
std
pop
adc
dec
testl
xchg
jle
mov
xor
xorl
push
push
xchg
adcb
add
rclb
xor
pusha
std
sahf
leave
int
pop
push
and
bound
and
mov
sarl
lcall
sbb
aad
mov
mov
push
add
ret
fwait
sub
into
cmp
mov
add
fadds
dec
popa
clc
mov
mov
sub
dec
sub
or
push
outsl
dec
mov
mov
inc
cmpsb
add
or
sbb
or
mov
adc
xor
stos
fdivl
pop
push
outsb
mov
pusha
call
mov
xor
repnz
mov
cmpl
mov
aad
pop
or
addb
cmp
xor
insl
bound
repz
jp
sbb
lods
fwait
mov
es
stc
adcl
js
jb
pop
fwait
xor
shll
loop
arpl
xchg
inc
mov
xor
push
cli
or
je
mov
mov
fbstp
aam
aam
gs
mov
daa
xchg
ja
andb
push
repz
loop
pop
mov
mov
rcrb
dec
out
aad
mov
mov
push
lcall
out
lock
mov
push
mov
jl
out
pop
pop
ror
mov
bound
addr16
rorl
inc
sbb
add
lret
pop
cmp
in
popa
jge
in
rol
push
pushf
push
int
cmp
aas
lret
or
addr16
mov
stos
mov
xchg
pop
decl
insl
pop
sbb
pop
neg
lea
mov
bound
cli
pop
cmp
rcrb
sub
sahf
dec
lock
movsl
stos
dec
test
xchg
jb
mov
inc
stos
jge
pop
dec
jl
adc
xchg
outsl
orb
mov
fistps
sar
out
xchg
das
call
and
test
sbb
mov
pop
imul
cld
push
imul
mov
sbbl
push
xor
or
test
adc
int3
push
roll
inc
cmp
pop
lret
ds
mov
insl
adc
sub
inc
add
sbb
ljmp
jae
test
xchg
sub
shlb
in
fs
mov
sub
aam
push
add
pop
and
push
xchg
xor
mov
loop
sbb
loopne
addb
adc
mov
push
or
imulb
sub
xchg
adcl
mov
jne
outsl
loop
pop
add
cltd
xor
dec
sbb
sbb
inc
mov
test
pop
mov
mov
iret
xchg
pop
xor
jb
dec
in
lds
mov
addr16
rolb
outsl
je
mov
loope
mov
in
insl
add
xchg
shlb
imul
aas
cli
sub
jge
xor
inc
inc
jl
adc
push
aad
rcrb
jb
repz
jno
push
cmp
dec
push
cmp
ret
and
test
ljmp
sub
and
xor
xchg
cmc
inc
xchg
inc
mov
jp
sahf
ret
cli
cmp
and
or
imul
sbb
outsl
rorl
inc
cmpsl
cltd
lds
lds
dec
sub
mov
enter
mov
mov
inc
xor
push
mov
mov
push
je
mov
ret
add
add
fisubrl
stos
or
pop
mov
daa
ror
out
aad
jo
pushf
frstor
xor
xchg
xchg
pop
inc
push
jno
push
cmp
and
cmp
inc
cld
push
push
sete
jnp
add
into
lret
daa
or
fbld
push
in
push
dec
out
repnz
mov
jne
subl
pop
incl
pop
push
aas
inc
xlat
pop
push
pop
add
scas
or
or
xchg
cmp
data16
dec
push
add
sub
sbb
push
out
loop
sbb
sti
push
cmp
push
addr16
push
dec
push
pop
and
xchg
loopne
adc
repnz
cmpsb
add
xchg
or
cs
jl
xor
imul
int3
out
push
adc
xchg
ret
loopne
shlb
pushf
push
movb
subl
xor
ret
push
stos
xchg
lret
sbb
or
les
sti
out
sahf
orl
scas
push
cmc
xor
stc
call
dec
mov
xor
mov
loopne
inc
xor
pop
cmp
mov
ret
xchg
pop
sub
in
negl
push
dec
mov
fistps
mov
inc
mov
jnp
sbb
xchg
test
push
les
scas
pop
lahf
sub
fdivs
dec
jl
push
aas
idivb
mov
push
sub
push
fisttpll
and
loop
adc
xlat
sbb
rcrb
pop
pop
xchg
inc
mov
or
icebp
push
je
cltd
enter
insl
sub
adc
push
dec
mov
adc
sbb
cwtl
jp
pop
sbb
ret
xchg
sbb
ljmp
leave
cmpb
sbb
mov
and
jle
insb
inc
cld
dec
pop
or
rolb
adc
cmc
inc
and
in
dec
cvtps2pi
cli
mov
push
add
fimull
adc
shl
insl
test
sahf
jecxz
adc
xor
bts
xlat
mov
sbb
cmpsl
movb
xchg
addb
xor
add
pop
adc
push
xor
cs
mov
add
push
push
shrl
pusha
js
dec
add
clc
add
xchg
push
push
in
push
sub
shrb
xchg
inc
xchg
mov
push
cld
jbe
xor
adc
dec
inc
mov
pop
call
inc
adc
jge
mov
cmpb
jmp
test
xor
sub
movsb
js
shl
movl
sbb
cli
push
sbb
inc
inc
pop
test
push
pop
test
js
test
shl
jne
xchg
dec
pop
push
pop
arpl
cmc
dec
sub
cmpsb
mov
jno
and
pop
int
inc
dec
xcrypt-cbc
cmpsl
xchg
dec
inc
sbb
test
aam
aad
insl
mov
adc
xor
test
pop
cmpsl
or
shlb
jb
xchg
push
addl
loop
pop
inc
inc
mov
pop
push
ret
and
dec
rcrl
lea
icebp
mov
adc
dec
loope
dec
cmp
and
ret
aaa
fs
sbb
les
sub
push
xchg
xchg
add
jbe
cmc
and
pusha
add
sbb
dec
adc
idivl
or
mov
cli
xchg
or
cmp
shrl
xor
test
leave
add
lea
cmc
xchg
mov
sub
or
into
add
pusha
movsl
clc
cld
adc
movsb
addl
shlb
add
pop
push
or
loopne
cmp
daa
adc
mov
imul
xchg
testl
pusha
add
loope
pop
lods
out
arpl
sahf
dec
mov
and
mov
stos
mov
pusha
or
mov
jbe
pop
test
sub
sbb
test
adc
pop
jg
sub
add
enter
adcl
or
push
inc
fcmovnu
dec
add
jnp
or
sarb
mov
push
rolb
loope
pop
loopne
xchg
or
pop
shrb
xchg
sahf
js
mov
add
imul
movb
popf
xor
andb
push
adc
push
cs
pop
cmp
or
lock
mov
addl
cmp
jbe
ljmp
pop
test
push
mov
push
pop
and
push
je
push
sbb
repz
push
je
jecxz
xor
push
stos
lea
or
cmp
cld
jle
mov
sbb
mov
adc
pusha
push
add
dec
rol
leave
mov
jne
stos
sbb
sbb
lock
jg
dec
jl
pusha
lock
jle
xor
inc
ss
stos
dec
lds
testl
push
cmp
inc
dec
cmc
andl
sub
add
push
pop
inc
inc
add
xchg
out
push
stos
dec
inc
hlt
pop
inc
add
mov
clc
cmpb
or
push
xor
imul
jmp
push
pop
jge
sbb
clc
pusha
push
jl
jmp
and
mov
in
cmpsb
push
jl
andl
dec
adc
adc
pop
push
sub
push
add
iret
inc
dec
dec
push
push
jno
jae
cli
mov
cmp
adc
xlat
xor
sub
xlat
fs
bound
insb
xchg
mov
call
jne
adc
jns
mulb
insl
adcb
xlat
push
mov
mov
test
sbb
adc
add
push
xchg
loopne
push
add
xchg
test
and
cmp
push
sbbl
or
inc
ja
sbbl
dec
shlb
mov
rcll
cmp
xor
xchg
andb
cmp
push
sbb
sbb
jno
arpl
and
push
sub
add
mov
push
or
and
and
mov
lods
fimuls
cmp
mov
lret
mov
and
pop
repz
sbb
cmovbe
adc
pop
jne
push
sbb
mov
mov
xor
push
testb
rcll
add
jns
xchg
jl
add
aad
jo
fcoml
inc
icebp
add
dec
in
and
mov
daa
insl
push
cmpsb
jg
aam
sahf
mov
movsl
dec
add
jbe
mov
inc
subb
pop
lea
mov
popf
or
lahf
stos
pop
push
fisttpl
sub
pop
fiaddl
out
xlat
sbb
pop
je
pop
in
jno
or
ljmp
and
stos
add
add
dec
shrb
mov
ss
jne
pusha
std
lcall
xchg
cs
inc
xor
sbb
inc
rcr
mov
add
pop
cmp
mov
pop
pushf
jecxz
push
mov
push
test
loopne
inc
aas
add
in
jnp
xor
cwtl
sub
sarb
xor
loopw
inc
sbb
jge
sbb
dec
loopne
addb
add
pop
rcll
fiaddl
jo
movsb
clc
mov
out
movsl
dec
cmp
pusha
pusha
cli
or
test
push
pop
inc
push
pop
bound
push
xchg
add
pop
das
les
popf
or
dec
sbb
pop
dec
fs
sub
push
or
test
mov
adc
jge
js
mov
or
dec
out
imul
sub
in
fs
repz
inc
sbb
ja
sub
and
test
shlb
mov
add
xchg
repz
pushf
mov
xor
xor
xor
jp
ss
add
and
dec
push
or
cmpsl
sbb
lock
push
inc
xchg
mov
mov
xor
cmp
inc
andb
jae
jmp
jo
mov
std
and
pop
add
add
sub
popf
movl
cmp
pop
cmp
daa
push
sbb
pop
sub
sub
imul
push
ss
mov
cmp
es
shrl
popf
add
shrb
fildl
test
and
iret
loopne
add
and
mov
pop
lock
nop
push
pushf
or
jbe
cmp
xor
fbstp
in
mov
pop
test
and
jne
movsl
mov
adc
pop
scas
or
sahf
push
sub
outsl
jge
mov
cmpsb
jl
jmp
movb
add
adc
mov
add
neg
sbb
and
add
shlb
scas
and
add
adc
add
pop
xor
and
or
push
mov
shlb
aas
push
xchg
add
in
daa
lcall
mov
lahf
in
ss
and
sub
mov
adc
stos
mov
push
movl
add
mov
mov
jle
pop
or
pop
sbb
subl
jns
push
xor
push
and
inc
cwtl
out
insb
lret
mov
inc
inc
inc
inc
mov
test
adc
into
cmp
or
mov
cmp
pop
xor
push
push
push
mov
les
popf
pop
inc
mov
jne
sbb
das
adc
mov
xor
mov
push
sub
cld
jge
or
and
and
out
dec
add
outsb
insl
fldt
cli
jmp
fwait
icebp
rcll
stos
pop
sub
xchg
mov
pop
jmp
push
sbb
mov
mov
inc
add
push
jl
mov
sbb
lods
and
mov
sbbb
mov
xor
cmp
jo
icebp
add
lahf
mov
ja
clc
dec
int3
movl
pop
sbb
pop
and
cmp
pushf
sub
xor
lds
adc
mov
push
add
xchg
data16
rcl
fisubs
fisttpll
das
in
test
mov
add
mov
and
arpl
or
icebp
adc
sub
cmp
push
cli
inc
sbb
push
pop
divl
adc
or
out
inc
shll
pop
aaa
repz
fiadds
stos
iret
adc
sbb
pop
or
lds
add
bound
fcmovbe
mov
into
clc
pop
or
mov
sbb
fs
mov
xor
add
pop
push
repnz
jmp
hlt
add
ja
xchg
jb
push
xchg
fwait
ds
stos
test
pop
sbb
fiaddl
adc
push
add
xor
cmp
out
push
sub
add
inc
testb
mov
out
clc
mov
lods
pushf
mov
aad
mov
cld
push
rorl
in
mov
xor
or
xlat
pop
mov
and
lods
call
sarb
sarb
ret
ret
loopne
int
lahf
mov
orl
mov
mov
mov
arpl
bound
mov
inc
or
pop
or
pop
and
mov
sbb
sbb
shl
loope
mov
xchg
mov
add
push
pop
pop
test
clc
clc
xorl
jnp
loopne
gs
movsb
mov
add
sbb
ret
push
xchg
or
inc
js
and
fbld
sbb
pop
ret
adc
enter
insl
inc
ficompl
dec
test
in
adc
mov
clc
xorl
cmp
clc
aas
adc
cmp
jnp
jge
add
add
mov
add
pop
mov
addb
push
mov
xlat
cmpsl
adc
cmp
push
or
outsb
sub
add
or
push
js
push
les
je
mov
test
push
shll
mov
add
jb
adc
add
add
mov
mov
fdivl
pop
jg
pop
daa
push
push
hlt
addb
pop
pop
adc
push
cmp
data16
sbb
sbb
push
dec
ficomps
mov
adc
ret
inc
mov
mov
sbb
loope
or
push
sub
cs
pop
sbb
and
or
sbb
inc
lret
pop
mov
pop
add
pop
pusha
xchg
and
mov
pop
xor
sahf
cmp
lds
cmp
mov
jo
mov
push
iret
inc
or
sti
shll
nop
adc
xor
and
out
cwtl
or
popf
lahf
cmpb
cmp
pop
enter
inc
rol
sarl
jo
inc
dec
push
dec
cmpsl
push
push
push
mov
sbb
mov
fistpl
push
lock
aaa
sbb
cmpl
inc
jl
stos
inc
adc
test
xor
jmp
lahf
test
shlb
push
adc
mov
xorb
add
pop
or
sub
clc
mov
inc
scas
jb
and
test
cmovno
or
xchg
or
jge
xor
mov
pop
sub
and
fstpt
adc
jge
inc
and
andb
js
xor
stos
xchg
jge
mov
push
adc
lea
ja
and
mov
mov
push
bound
sbb
pop
inc
test
mov
decl
aaa
stos
mov
out
push
mov
movsl
lahf
icebp
scas
or
xchg
push
push
call
enter
clc
sbb
lock
mov
leave
mov
push
push
add
jbe
dec
xchg
stos
push
pop
pop
stos
mov
push
jg
sahf
sbb
adc
push
pop
mov
ret
mov
mov
mov
pusha
pop
rorl
cmp
lds
mov
and
jb
lcall
push
stos
hlt
adc
sbb
jle
loop
pop
push
pop
faddl
das
ss
std
jne
pop
sbb
shlb
or
pop
rorb
out
stc
mov
shll
aaa
cmpsl
movsl
push
jl
mov
push
into
push
or
push
xor
adc
je
subl
adc
mov
sub
push
stos
pop
adc
mov
int3
push
dec
outsl
pop
aad
pop
sbb
pop
xchg
shr
mov
add
add
push
and
mov
lea
js
mov
mov
push
mov
adc
jge
icebp
mov
jg
and
movsb
sbb
mov
daa
xor
sarb
pop
add
int3
loop
ljmp
xorb
ficoms
xchg
jne
inc
jg
and
cmpsl
xor
sahf
lcall
mov
adc
or
mov
enter
dec
aas
pop
push
dec
xchg
or
mov
adc
add
jmp
mov
add
pop
lret
insb
test
add
mov
xchg
fbld
mov
test
mov
or
xorb
sub
cmpsb
add
push
push
inc
loopne
jnp
call
push
in
inc
mov
cmp
paddb
ss
pushf
jns
cmp
mov
test
or
sub
rol
sarl
xor
jmp
jo
jge
icebp
push
and
aaa
sub
cmpb
or
push
imulb
scas
imul
pop
xor
cmp
inc
add
mov
stc
ret
sbb
rcr
push
dec
pop
cmp
mov
insl
test
js
pop
popf
fmull
out
jbe
scas
xor
push
mov
movsl
call
pop
or
out
pop
pop
push
movsl
ljmp
sub
pop
int
and
roll
scas
xchg
pop
jnp
push
mov
cmc
jp
je
jmp
pop
mov
push
sub
scas
pop
push
cmovge
push
fisubs
or
rcrl
shl
xchg
ret
andb
test
and
pop
adc
movsb
aam
adc
ror
and
imul
sub
and
jbe
test
adc
cld
call
and
push
out
mov
push
in
pop
out
lret
sbb
sub
adc
add
or
cmp
test
mov
pop
xchg
shlb
fcmovnbe
mov
inc
cmp
jne
mov
mov
call
out
loopne
mov
sub
pop
test
mov
mov
mov
cmp
inc
push
test
adc
push
xchg
outsb
lods
in
je
ret
rclb
popa
mov
and
fsubrl
xchg
or
cld
sbbl
in
les
mov
mov
in
dec
shll
pop
lods
xlat
mov
shll
roll
call
inc
in
movsl
xor
push
push
push
or
dec
lock
mov
mov
and
adc
mov
mov
cmpl
mov
rorb
pusha
adc
test
inc
add
jg
or
jbe
ja
mov
pop
test
pop
inc
lahf
scas
pop
lds
ds
imul
or
pop
scas
push
test
cmp
pop
mov
or
xchg
out
pusha
pcmpeqd
lret
mov
fsub
and
addl
push
sarl
fs
pop
scas
testl
jae
repz
out
cmp
dec
pop
out
or
pop
pop
sarl
sbb
dec
clc
mov
aam
pop
add
pop
push
or
outsb
lods
insl
hlt
test
outsl
test
xor
xor
cmp
arpl
adc
and
and
mov
lods
push
push
push
daa
sarl
sbb
xchg
mov
cmp
jo
fcoms
mov
fldl
xchg
add
pop
loopne
es
push
add
cmove
fnstenv
mov
sbb
scas
pop
aas
cmpl
or
xor
jo
rorl
pop
or
mov
clc
jne
push
xor
jne
bound
daa
mov
jne
out
dec
ret
mov
jb
xor
pop
outsb
or
andb
outsl
lods
pop
shlb
and
add
mov
out
cli
mov
push
adc
pusha
mov
dec
xchg
adc
push
movsl
and
and
sub
xchg
cmp
jne
push
push
and
xor
andb
inc
icebp
add
mov
mov
sbbb
pop
cmp
jne
add
jae
push
jns
adc
cmp
adc
adc
or
div
js
push
add
scas
xchg
mov
ret
xchg
fildl
aam
jb
mov
jmp
cmp
jno
mov
gs
cmp
adcb
mov
addl
push
adcl
pop
dec
adc
jmp
push
ficomps
sbb
and
repz
roll
les
mov
ret
adc
push
mov
sub
sub
lea
nop
icebp
mov
pop
mov
push
ret
cmp
push
and
jo
scas
adc
xor
dec
mov
ret
mull
mov
sti
push
ret
mov
mov
add
mov
dec
push
inc
mov
sbb
scas
mov
test
cmp
cmp
push
mov
xor
inc
sbb
rcll
bswap
push
lcall
xor
xor
loope
cmpsl
inc
je
lds
sub
lock
push
sahf
nop
xor
lea
inc
inc
cmp
clc
aam
ds
inc
push
mov
jae
mov
jns
adc
outsb
icebp
stos
fcoml
or
sbb
and
and
sub
adc
ret
scas
in
cltd
imul
pop
xchg
adc
sub
push
jge
in
mov
pop
xor
add
les
xchg
enter
mov
pmuludq
jge
lea
push
pop
roll
out
test
shll
mov
push
dec
ret
mov
addl
mov
mov
cmp
inc
add
xor
pop
or
sbb
pop
add
mov
and
test
jo
dec
insb
orb
adc
pop
add
lods
in
jp
jo
and
mov
dec
ficoml
lock
mov
movsb
jle
jo
aas
into
inc
repnz
lret
xor
jb
es
xchg
es
and
test
xchg
pop
fidivs
arpl
mov
or
mov
xchg
mov
call
mov
pop
push
insb
add
je
adc
jne
nop
pop
inc
icebp
js
push
les
xor
push
push
push
push
add
inc
sub
xchg
add
adc
mov
jbe
orl
pop
loopne
pop
shl
pusha
ss
jle
push
int
inc
sub
inc
sub
or
rorl
in
add
mov
inc
outsl
pusha
pop
shll
mov
cmpl
rcr
mov
jle
and
and
ret
stos
stos
fldenv
out
pushf
xor
iret
pop
mov
sbb
mov
push
fimuls
mov
or
pop
ret
js
cmp
bound
lods
pop
mov
test
rorb
adc
add
cmp
call
in
sbb
push
repz
loope
mov
pop
mov
scas
and
insb
and
les
xchg
repz
sub
int
push
pop
push
lea
dec
movb
add
xor
sbb
sub
imul
inc
push
push
outsl
sbb
pop
push
adc
fwait
inc
push
test
xor
into
and
or
adc
ror
cmp
xchg
mov
fisttpl
cld
mov
dec
push
subb
sub
inc
xchg
test
enter
mov
ret
ret
cltd
cmpsl
rcrb
and
pop
mov
addl
stos
in
andb
sahf
jo
iret
cwtl
data16
xor
jb,pt
in
icebp
dec
popa
and
inc
shll
adc
lea
mov
idivl
adc
xlat
xor
out
push
or
mov
ret
sti
rorb
xor
js
in
fdivr
andb
iret
movb
cmp
adc
and
pop
push
in
xchg
andb
lea
push
int3
pop
jle
and
lods
push
jne
mov
push
out
lods
push
cld
jge
pop
inc
xchg
ret
rcll
sbb
mov
push
adc
mov
cld
and
jo
mov
movsl
add
sub
push
cmpsl
jp
and
ret
add
mov
aam
push
mov
jmp
das
cmp
adc
pop
dec
add
push
sahf
mov
pop
adc
jge
or
je
xchg
or
pop
sbb
test
add
lock
pop
inc
lea
scas
xor
imul
push
es
movsb
sbb
clc
scas
inc
adc
loopne
pop
inc
test
dec
loop
push
pop
cmp
std
push
icebp
test
arpl
pop
rclb
jl
xlat
mov
mov
dec
mov
fadds
adc
stos
mov
pop
inc
cmp
loopne
test
cmpsl
ss
mov
sbb
and
mov
inc
loopne
mov
movsb
and
adc
scas
fnstcw
jge
roll
mov
xchg
push
fwait
test
push
or
or
ljmp
add
cmp
inc
out
mov
mov
movsb
loop
mov
iret
mov
or
test
xchg
lret
shl
in
call
jbe
sub
arpl
arpl
cwtl
add
and
mov
mov
xchg
mov
cltd
add
scas
insb
cld
and
movsb
add
rorb
cmp
push
dec
aas
popa
js
push
push
sub
scas
sbb
test
je
in
mov
stos
or
sbb
push
push
iret
or
test
xor
xlat
mov
add
mov
sbb
sub
movsb
dec
inc
jo
dec
les
xor
mov
lods
mov
jno
ljmp
cmp
enter
lea
mov
or
push
or
mov
or
popa
loop
push
push
push
leave
imul
adc
ret
pop
sbb
test
es
ret
int
movsl
or
arpl
lock
mov
xor
push
mov
or
andb
lods
adc
push
pop
push
mov
cmp
and
inc
mov
cltd
pop
and
lds
in
arpl
lea
sbb
mov
mov
sub
or
aaa
pusha
nop
ss
out
add
xor
movsl
sub
adc
lcall
adc
push
out
int
jnp
jo
inc
xchg
mov
es
inc
clc
or
enter
xor
mov
aam
loope
or
inc
sub
rcrb
mov
mov
cwtl
push
pop
or
shl
adc
mov
cld
pop
out
fadds
ljmp
mov
sub
inc
add
icebp
sti
shrl
clc
std
xor
mov
jge
mov
add
arpl
lock
sbb
sbb
std
add
mov
sar
shl
test
inc
sbb
pop
ret
and
lods
rorb
cld
rcll
loope
ss
mov
inc
push
inc
loope
fwait
dec
clc
sub
push
and
add
je
pop
push
xchg
movsb
and
mov
mov
call
cmp
jmp
dec
or
iret
cmp
lret
sbb
pop
inc
int3
andb
test
out
bound
fldcw
pop
push
sbb
lock
push
xor
adc
nop
xorl
sbb
or
push
leave
mov
leave
andb
mov
push
cmp
add
mov
mov
shrb
push
sbb
xchg
movsb
inc
lret
mov
adc
jmp
jbe
ret
js
stos
push
and
nop
mov
pop
add
cmpsb
jecxz
add
mov
pop
adc
adc
pop
push
xchg
xor
int3
push
subb
movsb
adc
pop
shlb
pushl
shr
popa
mov
mov
ret
xor
xor
jg
mov
and
loope
hlt
pop
add
push
je
clc
inc
push
sbb
lods
add
add
iret
filds
add
cmc
adc
mov
lock
fwait
sbb
add
xchg
notl
mov
jecxz
lods
sbb
xchg
mov
icebp
pop
lret
inc
andl
rorl
xor
jo
in
pop
fidivl
ret
std
mov
les
pop
call
sahf
es
and
jecxz
mov
inc
cmpsb
jecxz
push
sub
pop
cli
sbb
movsb
push
hlt
mov
sub
testb
add
cmc
mov
push
je
pop
call
test
fildl
or
out
push
and
mov
ffree
fwait
cmc
cmp
add
subb
std
xchg
push
mov
leave
leave
mov
js
test
idiv
mov
xor
jns
pop
xor
mov
mov
sbb
fwait
jns
adc
jge
and
pop
and
sub
or
cmpsl
mov
nop
push
push
loopne
ds
mov
arpl
add
cmp
dec
adc
ret
push
pop
sub
mov
repz
insb
xorl
xor
sbb
ljmp
stc
andb
inc
sbb
in
lcall
sbb
addl
push
sub
icebp
lret
testb
xchg
mov
add
sub
sbb
add
pusha
ret
mov
pusha
pusha
inc
mov
ret
mov
xorb
mov
daa
and
mov
sub
cmpsb
dec
negl
xor
cmp
in
and
adc
mov
jle
push
clc
mov
adc
push
sti
push
dec
and
shr
inc
andb
vpclmulqdq
jl
rcll
dec
data16
adc
cs
js
cltd
pop
sub
sarl
xor
cmpsb
xor
pop
mov
mov
test
pop
ds
loop
mov
mov
js
mulb
xor
cmp
or
fcoms
jne
lods
loope
and
hlt
addr16
fidivs
js
or
mov
push
pop
sahf
push
rorl
decb
pop
add
fsts
add
or
jne
shlb
pop
dec
mov
pop
inc
push
movb
inc
outsl
push
cltd
and
pop
sti
mov
sbb
jecxz
add
idiv
stos
addl
sahf
xchg
mov
sub
sbbb
jge
or
mov
rcll
clc
pop
test
mov
mov
in
pop
mov
or
cmp
jbe
push
ret
js
out
pop
push
mov
stos
mov
xchg
push
mov
call
inc
xchg
mov
ljmp
dec
test
lcall
xor
nop
mov
pushf
lahf
icebp
xor
mov
lock
jge
push
test
xchg
mov
sub
mov
adc
mov
cmpsl
mov
adc
in
adc
add
sub
mov
and
fiaddl
mov
cmp
push
cmpsl
jno
push
insl
pop
push
adc
sarl
lock
sti
rcrl
dec
cmp
mov
cmp
loop
push
ret
and
pop
cmp
add
xchg
std
inc
inc
xor
jno
xchg
aaa
mov
call
add
pop
pop
clc
sub
sarb
jmp
cmc
mov
fistpl
ds
sub
pop
mov
scas
jno
or
and
xor
mov
lea
pop
sub
clc
inc
into
js
mov
ret
inc
sbb
leave
sbb
push
or
cltd
inc
adc
cmp
inc
adc
imul
das
imul
dec
sbb
sub
inc
and
inc
aad
fnstcw
xor
push
push
movsl
push
imul
fimull
fistpll
adc
or
sub
test
mov
cli
addl
test
pop
xlat
lret
push
xor
push
pop
sub
imul
or
insb
pop
jecxz
into
cmp
push
add
pop
jmp
test
test
jmp
cmp
cmp
lret
incl
cmovbe
popf
adc
and
out
adcb
pop
push
and
leave
cmp
sar
pop
mov
fildll
int
pop
movzbl
shl
push
lds
orb
or
aam
fdivrl
push
iret
sahf
pop
sub
shl
or
mov
mov
mov
popa
xor
add
push
and
dec
in
inc
and
jge
push
add
and
leave
pop
and
mov
pushf
cmp
outsb
sub
sub
arpl
lret
push
cli
lea
pop
adc
roll
lahf
add
sub
mov
push
std
test
xor
bound
sub
shr
sub
filds
pop
mov
testl
or
pop
pusha
inc
inc
movsl
xor
sbb
mov
inc
add
mov
ljmp
mov
ljmp
or
adc
rcrl
and
cmp
sub
pop
shl
dec
lret
add
mov
add
inc
xor
adc
adc
and
add
and
rcr
lods
imul
and
cmp
mov
adc
roll
aaa
sub
jo
dec
dec
mov
shr
inc
cmp
fidivrs
push
jmp
adc
mov
pop
addr16
int3
push
mov
cmpb
sub
sbb
scas
mov
inc
aam
aad
test
testb
shlb
clc
inc
adc
loope
cld
or
jle
push
mov
in
jo
xchg
fimull
or
and
lods
scas
shl
pusha
cmp
out
fstl
push
add
test
mov
adc
jo
stos
mov
bound
jbe
ds
test
rclb
pop
sbb
mov
jg
add
rcr
lahf
and
leave
mov
inc
ljmp
roll
add
daa
jle
bound
lret
mov
push
and
push
test
and
mov
pop
mov
push
or
or
dec
lock
or
orb
mov
dec
push
decb
push
enter
pop
fwait
data16
or
sbbl
cmp
dec
dec
dec
loopne
subb
movsl
cmp
pop
in
sbb
bound
icebp
dec
imul
lock
int
shll
xchg
enter
sti
repnz
add
mov
or
sub
add
xor
push
mov
mov
lcall
add
lock
cmpl
pop
popa
jae
arpl
into
push
mov
pop
ss
add
mov
dec
iret
xor
inc
mov
sbbl
jecxz
je
or
adc
adc
filds
dec
shrl
pop
sub
cwtl
push
cmp
sbb
pop
mov
sbb
inc
fimull
fildll
les
sbb
sbb
dec
push
cld
aad
or
scas
push
mov
data16
int3
mov
enter
insl
push
and
pop
add
jnp
inc
jne
jecxz
mov
loop
dec
adc
shl
adcl
sbb
inc
pop
out
daa
push
jo
cwtl
mov
push
outsl
scas
adc
and
rclb
sbb
dec
in
test
data16
push
es
cltd
lea
mov
jne
sbb
inc
xchg
pusha
push
xor
test
sbb
sub
idivb
lret
lock
hlt
dec
dec
sub
inc
fcoml
xor
adc
push
sarb
dec
test
push
clc
std
imul
call
and
bound
sbb
and
pop
and
enter
mov
rorb
mov
lret
ret
cmp
std
int3
add
jge
je
push
outsb
scas
or
jle
sub
leave
add
clc
dec
out
xor
mov
push
pop
and
test
dec
in
lods
out
sahf
out
shl
adc
xchg
sub
bound
xor
xchg
or
jle
loope
inc
inc
sbb
push
mov
lods
int3
sbb
prefetch
xor
and
pop
mov
shlb
movw
jp
call
in
push
sub
xor
stc
mov
testl
insb
and
popa
sub
xchg
stc
sbb
rcl
pusha
js
adc
jne
xor
clc
xchg
loope
cmp
jbe
sbb
xor
push
or
add
cmp
dec
mov
loopne
or
cmp
or
jbe
ss
push
jl
das
lea
add
xor
es
mov
inc
mull
clc
xchg
dec
push
xchg
cmpb
jge
iret
lods
xor
jg
shr
mov
cltd
dec
addl
xchg
or
fadds
mov
jmp
mov
clc
ret
fsubs
or
aas
or
fmuls
dec
test
xlat
cmp
jno
sbb
sub
jb
pop
dec
dec
and
mov
into
std
push
ror
rolb
clc
andl
mov
push
orl
jb
jb
mov
fcoml
pusha
ret
roll
and
fsubrs
lret
rcrl
fadds
jp
call
fwait
xor
inc
sbb
sahf
pop
stos
sbb
add
mov
orb
flds
xchg
cmpsb
sbb
movsb
aas
je
or
mov
cmp
les
push
sub
pop
cmc
cld
or
jg
mov
inc
mov
inc
rolb
pop
imul
mov
in
add
xlat
mov
dec
sbb
push
imul
rcrb
mov
jge
sub
mov
cli
mov
clc
fnstenv
xor
pop
cmp
add
jo
popa
pop
lods
mov
clc
bound
or
daa
rorl
outsl
xchg
add
xor
push
iret
ficompl
add
xchg
ljmp
sub
fildl
xor
bound
push
loopne
ret
inc
cwtl
and
jne
adc
cmp
aad
int
sbb
inc
sub
ret
ret
dec
test
shrl
sub
icebp
pusha
inc
cwtl
js
in
shrb
or
jl
push
cmp
add
fs
mov
pop
dec
ficompl
sub
out
and
testl
enter
fdiv
pusha
sbb
adcb
shlb
xor
add
push
int
faddl
jo
push
push
icebp
aad
xchg
or
adc
sub
popa
push
pusha
sub
mov
shl
iret
sub
adcl
and
add
mov
shr
mov
push
sub
shll
inc
fwait
inc
lret
das
test
popa
jno
push
rcrl
pop
push
aas
outsb
cmp
or
fidivl
cwtl
scas
sub
cld
cmp
adc
cli
or
lea
call
pop
pushf
sahf
jno
ds
jb
andl
mov
sbb
insl
xor
push
dec
les
stos
mov
lods
ret
insb
xor
and
pop
sti
rolb
cmp
popa
inc
mov
fdiv
dec
les
xor
lds
mov
dec
dec
cwtl
outsl
jmp
mov
add
mov
push
scas
add
pop
sbb
adc
sbb
add
les
xchg
pusha
loopne
cld
loopne
movsl
and
add
jle
rcl
stos
fcompl
or
cmp
gs
push
push
dec
or
jmp
testl
iret
and
adc
adc
ret
aam
adc
jo
stc
xlat
fstpl
scas
sbb
scas
cmp
orb
jbe
shlb
cmp
xlat
and
pop
sahf
pop
push
xor
cmp
sbb
test
sbb
and
rorb
out
fidivs
cmp
xchg
xchg
adc
adc
cmp
dec
call
lcall
inc
aam
arpl
sbb
pop
ss
cmp
decl
mov
xchg
in
lds
aad
decl
cmpsb
sbb
ficoml
add
inc
or
xor
cmpb
enter
cmpsb
popa
je
ret
fsub
mov
sbb
jns
and
pusha
lea
das
lcall
add
add
xor
fmulp
lret
in
adc
clc
pop
sub
inc
xor
aaa
add
sub
dec
je
xchg
ret
iret
lret
daa
lock
lret
fs
pop
add
cli
in
mov
add
test
pop
les
push
icebp
mov
in
ja
dec
dec
mov
mov
ret
imul
es
mov
mov
cmp
leave
cmc
sub
pop
test
loop
or
pusha
dec
mov
mov
add
xchg
push
pop
mov
dec
jg
sbb
int
mov
pop
cwtl
push
sub
inc
or
dec
sbb
and
dec
push
inc
ljmp
sbb
adc
pushl
mov
mov
sahf
jb
and
or
out
xchg
fbstp
jno
rorb
lea
cmp
test
cmpb
and
sub
mov
fdivr
mov
or
and
aas
xor
fidivrl
sti
adc
in
data16
jne
pop
push
pop
mov
add
jo
test
data16
pop
cmp
mov
xchg
or
js
mov
or
or
dec
stos
dec
inc
popa
cld
adc
rcrl
js
leave
icebp
push
in
fcom
inc
inc
and
cmpb
int
popa
fcoms
and
fmuls
pusha
mov
or
mov
xor
andl
inc
leave
roll
in
pop
popa
pop
push
inc
rolb
add
xchg
ret
add
adc
iret
lret
adc
xor
mov
ss
add
shrb
mov
repz
shlb
imul
xchg
push
sbb
sub
outsb
push
inc
inc
repz
push
dec
loopne
ljmp
lock
js
femms
inc
mov
call
inc
aaa
push
add
cmp
add
sub
add
loopne
out
insl
pop
movsl
bound
adc
pop
mov
add
lea
pop
sbb
pop
repnz
push
xor
jbe
inc
mov
push
pusha
sbb
sbbl
xor
icebp
adc
and
add
adc
mov
outsl
add
andl
fcoml
mov
cld
cltd
lea
cli
negl
test
pop
stc
cld
xor
mov
push
push
jnp
addr16
std
pop
push
sbb
dec
insb
jge
mov
xchg
push
iret
ljmp
insl
in
add
popa
outsl
pop
insb
pop
inc
add
xchg
pop
add
xlat
or
das
sbb
pop
push
push
push
pusha
mov
push
test
dec
mov
shll
push
lret
loopne
fiaddl
insb
jge
xorb
into
xlat
xchg
mov
nop
or
mov
xchg
pop
xor
xor
add
into
mov
loop
cmp
mov
xchg
pusha
or
or
adc
insl
fcomp
cld
loop
sbb
aaa
out
push
push
rcrl
xchg
jp
pop
jae
mov
addl
mov
or
fistl
mov
inc
sbb
add
cmp
sbb
std
fists
inc
popa
shll
imul
das
test
mov
test
mov
and
mov
and
inc
adc
pushf
je
loope
cld
xlat
cmp
inc
arpl
aas
mov
sbb
loop
push
sbbb
add
mov
push
pop
add
pusha
test
xorb
ret
jmp
lea
ret
and
add
std
into
stos
loop
push
push
xlat
hlt
cmp
inc
pop
mov
ret
pop
call
xor
adc
sbb
inc
fcoml
lock
or
iret
sbb
pop
cmp
or
in
daa
or
pop
dec
push
xor
into
inc
loopne
bound
fsubr
pusha
jl
jmp
lds
arpl
and
in
out
dec
mov
mov
push
mov
fstpt
fcoms
jmp
div
int3
inc
cmp
loope
push
popaw
add
outsb
adc
pushf
cmpl
adc
mov
sub
dec
mov
jmp
daa
jne
cld
mov
pslld
add
or
shrw
push
ret
js
imul
mov
sbb
mov
cli
mov
bound
cmp
inc
roll
rcrb
cmp
fstps
fdivrp
mov
pop
cltd
push
sub
je
leave
sahf
enter
push
adc
add
in
test
mulb
cmp
mov
fdivs
dec
and
shrb
out
add
pop
sub
and
orb
call
add
jno
add
jne
jle
rcr
xor
add
aaa
dec
inc
inc
dec
jne
xor
jl
or
in
add
sub
repnz
mov
and
popa
push
xchg
in
cli
out
mov
movsb
add
daa
cmpl
xchg
adc
inc
inc
push
inc
insb
call
lcall
fbstp
mov
inc
sbb
adc
jl
xor
mov
pop
ficoms
mov
divl
inc
call
jbe
sbb
shrb
mov
shl
insl
sbb
mov
sub
imul
ja
mov
mov
lret
pushl
pop
mov
and
dec
and
add
mov
pop
sbb
or
mov
fisubs
pop
jle
or
leave
pushl
mov
test
jge
neg
add
sbb
pop
mov
adc
cmp
inc
imul
sub
push
xor
ud0
mov
add
add
inc
lds
xor
mov
xor
cmp
push
outsl
sub
pop
pushf
pop
or
mov
and
in
or
lret
or
std
in
xchg
and
dec
jne
push
jmp
xor
decl
mov
incl
addr16
jp
mov
jl
arpl
pop
adc
je
sbb
repz
cmp
xor
push
addr16
push
loope
pop
dec
inc
sub
loop
jb
xchg
mov
fcoms
mov
arpl
dec
jl
dec
pop
rorb
add
loope
dec
dec
mov
pop
mov
and
jg
adc
inc
dec
jmp
inc
pop
inc
lods
aam
imul
inc
pop
test
cmp
sbb
testl
or
jge
ljmp
pop
jl
and
push
aad
jbe
mov
mov
pushf
das
inc
fsubrs
call
movsb
pop
adc
popf
mov
aaa
dec
loopne
xor
xlat
in
inc
loop
push
push
push
popa
ret
arpl
adc
mov
aas
adc
cmp
jl
jmp
push
add
or
pop
fistpl
inc
xlat
rorb
or
fbstp
mov
popf
mov
scas
push
imul
adc
jbe
mov
ds
sarb
xor
add
movhps
leave
ret
bound
and
adc
cwtl
jle
jle
shlb
push
andb
inc
xor
mov
addl
push
cmp
adc
pop
popa
in
xor
pop
pop
in
or
dec
jns
pop
call
loope
mov
adc
fisubrs
jecxz
pop
push
lock
pop
or
xor
andb
mov
repz
add
adc
test
lea
add
nop
mov
nop
test
in
lea
mov
sub
adc
adc
in
and
ror
bound
lock
aam
test
sbb
mov
mov
xor
movl
cld
mov
mov
push
adc
shlb
push
and
or
add
dec
dec
add
shrb
or
and
sbb
mov
mov
movb
mov
ret
std
add
sub
cs
adc
test
mov
jecxz
ret
leave
cmp
push
daa
jmp
cmpb
fcoms
mov
fwait
cmp
fdivrp
cmp
sbb
add
pop
or
arpl
cmp
pop
push
and
sbb
pusha
outsb
fs
jnp
stos
leave
js
jae
leave
ret
and
fsubr
mov
leave
pop
push
pop
xchg
pop
ret
or
sbb
mov
and
sbb
into
stos
shlb
mov
loopne
sub
cli
incl
adc
das
push
lret
ss
xchg
mov
and
loop
mov
mov
xchg
rcll
push
jne
mov
ss
mov
mov
movsb
inc
mov
inc
not
std
adc
in
mov
movsl
jg
cltd
xor
dec
mov
or
sbb
loopne
mov
and
jb
inc
clc
inc
mov
adc
and
lcall
les
fidivrs
xchg
xchg
jecxz
adc
cmp
mov
out
mov
adc
nop
mov
cmp
push
inc
inc
sub
and
or
lahf
shl
or
xchg
test
xchg
fistps
std
or
xor
call
jno
mov
push
fs
mov
push
pop
push
pop
adc
adc
incl
ficoms
sbb
lods
andb
shlb
mov
adc
lods
data16
dec
sbb
aam
rol
test
int3
flds
push
xchg
pop
adc
push
inc
dec
ds
in
es
adcb
rclb
clc
jbe
sarl
xor
and
xor
loope
fisttpl
inc
inc
sbb
pushf
bound
mov
dec
mov
xor
lds
hlt
in
push
push
aas
add
ror
mov
es
mov
lcall
push
push
xor
mov
lret
pop
aas
push
hlt
mov
or
cs
mov
sub
jmp
add
jecxz
push
jns
pop
jne
mov
mov
push
in
fsubrs
sub
into
aad
mov
cmp
les
push
xchg
mov
shlb
pop
divl
jbe
and
data16
fs
lea
and
or
lock
les
mov
fs
xorl
in
add
in
pop
orb
lea
sbb
sub
js
adc
or
sbb
jbe
pop
addb
ret
in
xchg
cld
and
sub
push
jp
add
inc
mov
inc
daa
and
and
in
adc
pusha
lock
and
sub
sub
adc
in
lret
je
sbb
jmp
insl
pop
add
mov
push
js
sbbb
pop
lock
or
adc
inc
cmp
cld
sbb
inc
fsubs
out
gs
pop
rolb
inc
pop
pop
inc
xor
or
push
sbb
and
sti
add
shlb
pushl
aad
cmp
sbb
adc
add
xor
icebp
and
pop
pop
sbb
or
scas
sahf
cmc
adc
addl
or
sbb
jo
pop
push
push
xor
add
sbb
cmp
in
test
xchg
stc
pop
xor
pop
mov
push
push
jae
sahf
sarb
sbb
mov
mov
push
icebp
mov
mov
rorb
fistpl
mov
rdtsc
je
aaa
out
push
dec
pop
jecxz
lea
push
pop
add
bound
add
adc
inc
cmp
sbb
fs
mov
add
xchg
push
fisubrs
icebp
push
jecxz
dec
fdivs
push
imul
gs
inc
cmp
sbb
or
push
pop
lahf
sbb
scas
jmp
mov
sub
mov
mov
pop
cmc
test
outsb
pop
jl
pop
cmc
jmp
clc
push
loopne
push
lods
out
push
mov
call
inc
jmp
or
and
dec
lods
out
fnstenv
mov
cld
push
or
iret
rcr
mov
mul
mov
mov
popa
into
into
jmp
lods
xor
gs
sbb
cmp
adc
add
lahf
dec
pop
int3
shr
shl
or
xchg
add
pop
imul
add
out
out
push
insl
jmp
std
mulb
push
lea
push
xchg
jg
out
cli
or
cli
push
xchg
shrb
lea
or
adc
pushf
xchg
push
ja
in
stos
jg
push
mov
mov
adc
pop
test
mov
test
push
jns
cmp
jmp
jae
adc
enter
add
jae
xor
xchg
icebp
or
clc
pop
imul
push
pop
shr
notl
subb
cld
add
les
cld
or
ljmp
adc
notb
mov
sub
or
sub
dec
mov
insl
jno
cli
not
and
inc
icebp
mov
push
fnstsw
dec
outsl
imul
fs
repz
or
and
xor
mov
mov
outsl
ficoms
push
mov
inc
test
fstps
add
inc
popa
sti
mov
lods
adc
cmp
mov
andl
cli
jmp
cmp
insb
mov
seto
sub
pop
stos
push
icebp
mov
push
pop
mov
dec
stos
clc
push
pop
pop
ss
add
xor
mov
push
and
sti
mov
push
mov
test
loop
xchg
inc
inc
insb
je
arpl
mov
push
movsl
add
lods
hlt
push
test
sub
xor
les
mov
adc
call
rclb
clc
pop
push
pop
add
mov
mov
or
push
push
mov
mov
iret
popa
sbb
fstpt
clc
pop
push
cli
and
cld
out
iret
loope
test
cmp
jbe
fcmovu
xchg
dec
inc
pop
cmp
icebp
xor
inc
push
sarb
js
or
call
mov
push
push
push
scas
call
mov
inc
lock
inc
js
lea
pop
cmp
outsl
clc
mov
mov
out
iret
add
cld
pop
add
aaa
dec
push
xor
cltd
jns
mov
or
jmp
mov
shr
push
mov
ret
test
ret
add
mul
sbb
dec
arpl
lcall
gs
sbb
or
fldenv
in
int3
or
mov
or
aad
or
mov
out
dec
mov
sbb
dec
imul
xor
or
push
push
popf
das
mov
jmp
addr16
push
int
xor
fsubrs
push
fdivrl
leave
sbb
andb
clc
sbb
dec
bound
jno
add
ret
pop
bound
stos
repnz
sub
add
push
loope
dec
xor
push
dec
or
je
lahf
push
xor
enter
lock
mov
inc
xor
mov
clc
pop
push
cmove
mov
orl
gs
js
gs
push
pop
jae
mov
pop
push
scas
mov
stc
add
add
movsl
pop
shll
mov
cmp
xchg
add
ret
mov
dec
and
pop
mov
rcll
push
add
inc
add
loope
lret
push
cmpsl
adc
imul
js
adc
test
arpl
mov
or
pop
push
lret
test
adc
mov
inc
inc
push
or
cmp
enter
push
insl
arpl
add
jbe
pop
adc
mov
idivl
lea
cmpsb
bound
pop
push
int3
mov
xorb
mov
fildll
xor
outsb
xchg
movsl
pusha
addr16
push
mov
push
outsb
pop
fidivrl
mov
xchg
xor
xchg
fcmovu
mov
rol
push
pop
popa
shlb
enter
arpl
mov
mov
mov
mov
js
loop
jbe
js
enter
pusha
in
jge
inc
mov
daa
sub
mov
pushf
xor
sbb
xor
adc
add
xor
pop
arpl
adc
out
jmp
inc
sbb
orb
jmp
mov
cmc
fsubrs
shlb
sbb
test
push
cmp
ret
inc
in
jl
insb
or
lock
pop
adc
lahf
mov
or
test
adc
push
int3
add
clc
or
cltd
mov
fdivs
push
mov
sbb
addr16
xchg
enter
ljmp
cwtl
adc
dec
push
lahf
fnstsw
imul
mov
jg
js
dec
sarl
pop
in
repnz
daa
sti
in
add
adc
push
or
push
or
jo
or
mov
lock
mov
xor
sub
hlt
mov
adc
jmp
cmp
pusha
iret
dec
dec
push
mov
inc
xchg
xchg
or
pop
inc
add
daa
sub
or
push
mov
std
mov
pushl
mov
mull
or
cmp
aad
in
push
out
add
inc
je
imul
pop
cmp
cmpb
mov
out
sbb
adc
xor
pop
cmp
shr
xchg
or
fbld
fwait
inc
or
sbbb
aam
addb
out
les
cmpsl
out
sub
rcr
aam
lods
stos
js
rolb
xchg
jne
jp
adc
and
loopne
adc
dec
sub
iret
aas
testb
dec
xor
aam
stos
pop
add
pop
pop
pop
addb
dec
push
xchg
add
sub
cmp
testl
sub
and
mov
mov
dec
cmp
inc
xchg
stos
imul
adc
mov
xor
pop
sbbl
jle
xchg
and
or
adc
nop
mov
push
test
or
push
or
cld
and
fistpl
push
test
or
dec
push
adc
add
insl
movsl
pusha
add
jae
fadds
mov
iret
neg
std
inc
sub
push
pusha
inc
mov
out
out
jno
sbb
mov
xchg
xchg
and
out
clc
roll
and
pusha
dec
sbb
add
jbe
add
sti
push
mov
xorl
imul
data16
loope
lods
and
mov
lock
enter
jbe
jnp
add
repz
inc
xchg
adc
pop
insb
loopne
xor
sbb
mov
sti
add
inc
adc
stc
sahf
test
adc
xlat
mov
pushf
mov
adc
push
jg
sub
shrb
mov
aam
jbe
pop
xor
sbb
cmp
stc
fldenv
ds
fsubrl
xor
outsl
or
out
push
or
pop
mov
pop
nop
jle
insb
das
inc
or
sbb
mov
xchg
hlt
fwait
cmc
jmp
mov
and
xchg
shr
std
lahf
or
std
ds
and
rorl
es
insb
ljmp
jp
movsl
or
jno
cmp
scas
sub
jg
loope
cmc
in
pop
add
bound
push
cmp
sti
popf
adc
inc
lret
mov
mov
lret
sbb
jg
rol
and
jne
jle
lds
adc
jno
pop
fsts
and
mov
inc
gs
mov
inc
jge
or
addr16
push
adc
dec
sub
push
mov
flds
jle
cmp
adc
sbb
sub
ret
push
int
ret
dec
movl
and
sbb
ss
jae
cmp
and
or
iret
or
or
insb
jg
push
daa
cmp
xchg
or
pop
jne
mov
add
xchg
adc
lock
ss
add
sahf
add
pop
fs
pusha
mov
xchg
or
out
clc
std
and
cli
jnp
push
push
pusha
dec
push
sbb
jge
lods
sahf
js
or
push
or
loopne
stos
sahf
add
data16
repnz
mov
adc
push
push
stos
mov
shrb
jns
ret
stc
xchg
push
lret
jno
sarl
inc
mov
dec
add
test
xor
jbe
push
cs
dec
ret
jno
or
ss
fcomi
jp
mov
adc
sahf
and
ret
jne
imul
and
mov
lret
inc
stc
rcll
xchg
and
add
ja
sbb
xorl
inc
inc
and
dec
xor
jp
add
lret
in
shr
push
int3
add
xchg
cli
cmp
outsb
dec
add
pop
add
mov
outsb
mov
out
dec
rclb
in
add
add
addl
or
mov
pop
push
outsb
hlt
cs
std
or
dec
or
xchg
popa
jo
push
gs
and
xor
ljmp
les
adc
sbb
xorl
pop
test
inc
or
loop
mov
cmp
ds
daa
rorl
jle
cmpsb
mov
push
insl
push
mov
notb
in
add
push
and
sarb
push
mov
push
xchg
mov
jae
addr16
inc
add
cmp
pop
pop
cmpsl
rorl
movsb
mov
jae
xchg
icebp
test
lods
jno
mov
mov
pop
sbb
dec
cli
sbb
jno
sub
es
pusha
shll
add
fadds
ret
or
mov
push
loope
in
ljmp
scas
pusha
adc
inc
lds
push
mov
jle
test
andl
sahf
jo
loopne
pushl
jo
fsubs
or
das
jns
jno
jg
jp
adc
xor
sub
cli
lret
inc
inc
mov
lock
and
test
dec
loopne
inc
in
imul
insl
add
cvtpi2ps
fldl
push
fsubl
xchg
inc
xchg
jne
wbinvd
fimull
sbb
in
push
sbb
into
mov
cs
lods
push
out
cmp
or
and
cld
enter
xor
jne
enter
lock
outsb
nop
movswl
daa
dec
dec
mov
hlt
fdivrs
mov
adc
cmc
sbb
jmp
cmpl
inc
test
mov
stos
mov
pop
add
and
aam
pop
dec
add
xor
call
add
dec
mov
mov
push
push
push
mov
and
test
hlt
cli
mov
add
pop
xor
cli
add
andl
in
sbb
jb
pop
add
rol
mov
and
dec
sbb
mov
fisttpl
xchg
fidivrl
sbb
test
test
inc
inc
and
cmp
sbb
sahf
clc
loopne
add
sub
mov
and
ss
repz
inc
test
nop
mov
testb
arpl
test
clc
insb
push
shll
jnp
sub
or
movsl
cwtl
and
add
lds
add
movsb
and
or
mov
jb
rcrb
inc
and
push
jo
jb
lock
pop
fiaddl
dec
incl
je
adc
add
cld
aaa
mov
sbbl
hlt
arpl
pop
add
movsb
rcll
and
cmp
scas
mov
jl
add
push
cmpsb
bound
lea
pusha
addr16
adc
shlb
data16
push
addr16
cmpl
jnp
jmp
adc
add
mov
mov
jb
shlb
sbb
mov
fwait
xchg
das
test
sub
fidivs
push
sbb
movsb
inc
add
jo
in
rcr
inc
std
xchg
mov
inc
fsubl
push
mov
or
push
sbbb
loope
daa
frstor
pushf
adc
push
push
lock
mov
xor
xor
das
pop
repnz
or
dec
adc
and
mov
push
jb
test
jne
insl
mov
addb
and
fiaddl
sbb
jne
dec
mov
into
mov
mov
push
shl
mov
push
leave
pop
xchg
push
stos
std
lock
repz
les
sbb
jae
hlt
and
add
subb
lock
push
mov
jns
jp
xchg
adc
imul
push
and
inc
cmp
dec
test
and
pusha
je
mov
ss
sub
sti
mov
sub
sbbl
clc
or
pminsw
push
mov
fdivs
pop
insb
cwtl
push
pop
les
test
cmp
loopne
jo
push
sbb
dec
sbb
ljmp
jge
popf
stc
stos
pop
adc
mov
lcall
popf
clc
leave
bound
push
insl
add
andb
cltd
mov
mov
dec
jl
lods
push
mov
inc
adc
mov
dec
ret
push
and
push
inc
mov
pop
sahf
or
test
sbbl
mov
sbb
sbb
andb
addl
xor
lahf
pop
jne
test
rep
lds
lret
daa
add
lcall
ret
repz
jle
push
adc
add
add
push
dec
add
add
call
sbb
repnz
add
and
add
push
jmp
andb
and
jle
mov
jl
repz
pusha
and
aam
data16
cld
lret
and
pushf
jl
jl
cmp
mov
jns
xchg
in
push
or
pop
cmp
add
and
mov
sbb
mov
les
jno
sub
clc
adc
mov
push
push
sbb
rcll
lcall
into
loopne
pop
sbb
pop
mul
sub
sbb
rorb
imull
add
push
out
cmpsb
pop
test
test
andl
sbb
ret
xor
shll
jg
jl
fsts
push
cmc
xchg
ror
jae
xor
cmp
pop
add
mov
jg
mov
xchg
dec
add
sbb
test
dec
jmp
xor
or
and
addr16
sbb
pop
pop
icebp
push
test
stc
sub
cmpb
in
pop
push
hlt
pop
push
sar
lds
ds
test
xorl
sbb
mov
add
pop
lods
xchg
lea
inc
pushl
push
loopne
inc
sub
mov
push
push
pop
jg
and
push
inc
test
adc
xchg
cmc
gs
lret
pop
push
xor
or
adc
push
and
ja
es
mov
mov
and
lock
jmp
xor
add
mov
jle
jne
inc
and
sub
and
sub
test
mov
stos
cmpsl
clc
mov
aam
adc
inc
je
and
jmp
insb
sub
and
pusha
add
adc
add
aam
sbb
mov
push
dec
jnp
dec
aam
das
sbb
cwtl
push
call
scas
pop
add
call
sub
imul
fs
add
arpl
xorl
insb
jbe
pop
lods
subb
call
adc
sbbb
adc
push
lcall
hlt
sub
popf
sahf
xor
notb
push
xor
xor
cwtl
daa
sbb
fists
addr16
mov
roll
mov
cli
inc
adcb
imul
loop
stc
jbe
int3
pop
or
add
jg
test
fadds
nop
fsts
bound
adc
out
sbb
push
and
mov
cmp
shrb
outsl
sbb
mov
popl
int3
cmpl
sbb
dec
movsb
add
nop
add
sarl
add
adc
or
pop
lea
movsl
add
cmp
sahf
push
aad
dec
pop
push
lods
jmp
insb
adc
or
call
out
int
mov
dec
sbb
jb
sbb
in
or
notl
or
or
jnp
adc
add
in
mov
lcall
and
or
inc
mov
jbe
push
or
pusha
mov
mov
cmpb
xor
outsb
add
pop
leave
push
push
ja
ds
or
or
dec
loopne
inc
mov
mov
cmpb
xor
add
and
push
sbb
das
inc
pop
mov
push
xor
pop
cld
aam
dec
rorb
stos
pop
add
testb
movsb
pop
test
adc
sub
mov
sbb
stos
jp
mov
push
or
mov
shll
mov
add
rorb
push
icebp
mov
adc
and
pop
add
sbb
mov
sub
call
xchg
mov
pop
jl
push
mov
orl
add
out
sbb
cld
cmp
add
mov
inc
stos
add
pop
and
js
pop
push
cmpsb
add
ss
pop
xchg
push
rol
out
loop
je
shll
mov
mov
add
movsb
xchg
push
add
mov
imul
sti
add
hlt
dec
ljmp
or
add
cmp
or
and
push
je
test
add
push
pop
clc
sbb
dec
push
fsubl
enter
cmp
repnz
mov
xor
push
or
rcr
lds
add
or
in
jp
push
jbe
xor
ss
and
subl
push
or
add
xor
fdiv
shr
lea
mov
mov
sub
vmwrite
or
icebp
xchg
lock
sub
push
sahf
and
cld
and
dec
or
or
add
inc
and
push
es
sbb
dec
mov
cmpsb
es
or
or
enter
lock
push
push
cli
mov
nop
test
jno
in
test
push
xlat
adc
je
sbb
fdivrs
pop
adc
pop
pop
or
or
or
mov
push
push
and
sub
add
add
add
clc
or
mul
hlt
mov
mov
sub
rsm
subl
in
aam
in
std
or
inc
es
or
add
enter
jl
fs
fcmovnu
jl
push
cmp
add
mov
mov
and
gs
mov
por
jne
in
mov
popw
or
das
inc
adc
pop
in
popl
bound
xchg
mov
xor
inc
rcr
ja
xlat
scas
push
xor
sbb
mov
jbe
ds
add
or
jne
add
lret
jne
push
int
pop
fadds
or
loop
mov
out
or
sti
or
pusha
mov
add
or
pop
in
mov
fwait
dec
adc
fsub
cmp
mov
lahf
cmc
icebp
cmp
subl
xor
inc
push
sarb
es
pop
add
sldt
and
les
push
adc
xor
nop
and
push
imul
jle
in
push
cld
sbb
testl
push
dec
push
mov
or
lret
or
aaa
add
sti
movsb
add
add
add
mov
arpl
ja
mov
adc
rorb
add
or
push
in
iret
dec
ja
clc
mov
jbe
str
je
dec
sbb
ss
mov
xor
add
fidivrl
sbb
vcvtsi2ssl
adc
push
lahf
adc
push
xor
jge
stos
fists
or
mov
inc
out
imul
shl
loope
lahf
test
pop
lea
mov
loopne
push
inc
sub
sbb
adc
out
push
pop
pop
push
cmp
daa
or
adc
pop
pop
jo
add
add
mov
xor
adcb
das
add
add
or
push
or
mov
es
add
js
bound
xor
adc
aaa
lea
inc
add
out
fildl
mov
mov
int
cmp
mov
cmp
leave
mov
push
adc
aad
ja
mov
aad
adc
sub
jecxz
sbb
dec
mov
mov
add
lods
rol
lods
and
insb
xchg
shlb
and
xchg
xchg
adc
dec
pop
mov
loopne
repnz
dec
mov
sub
insl
cld
xor
shlb
ss
fmuls
push
add
mov
test
dec
daa
shr
fsts
insl
sub
push
dec
adc
stos
mov
xlat
roll
push
test
pop
inc
ret
add
mov
iret
ss
cld
addl
test
and
nop
xlat
mov
loop
adc
pop
mov
xor
mov
sbb
jle
push
lea
mov
daa
arpl
pushf
and
mov
xor
sub
xchg
in
lret
pop
js
and
rorb
adc
dec
adc
into
push
mov
adc
sbb
pop
adc
sub
jle
add
push
mov
pop
loop
cmpsb
cmpb
cmp
jge
insb
mov
or
pop
sub
cmp
inc
ret
push
and
mov
mov
pop
rorl
mov
and
jns
or
jbe
pusha
adcl
mov
sub
xor
pop
shufps
mov
outsb
lds
ljmp
adc
adc
push
test
inc
shlb
stos
aam
add
sub
mov
test
sub
sarl
mov
or
mov
stos
ljmp
or
jge
fmul
fmuls
pop
or
sub
push
push
inc
jne
roll
mov
add
cmp
sbb
jb
aam
dec
lret
adc
push
add
loop
pop
add
insb
or
roll
cmp
inc
adc
xlat
outsb
cmp
clc
fadds
call
aaa
xchg
loop
mov
movsb
mov
sub
mov
or
leave
loopne
xor
xor
xor
fisubrs
popf
pop
incl
jno
frstor
stc
add
and
lcall
adc
mov
shll
flds
stc
mov
push
aad
aam
pop
mov
pop
popa
loope
add
mov
ss
push
js
inc
loopne
cmp
inc
aaa
inc
add
fnstcw
inc
or
jbe
xchg
test
jbe
add
lret
mov
sbb
cli
add
rolb
push
inc
lods
push
mov
adc
mov
movsb
adc
dec
dec
jo
pop
lods
lods
dec
add
and
shll
jp
cmp
inc
inc
dec
sbb
add
mov
push
scas
aam
and
xor
mov
scas
adc
sahf
inc
shl
dec
mov
fsin
dec
into
fadds
mov
mov
push
mov
cmp
rcr
mov
lock
lock
pop
in
pop
jb
mov
cmp
nop
sbb
push
adcl
mov
lea
or
es
push
push
mov
std
scas
add
add
icebp
movl
or
jnp
rcrb
push
push
xchg
dec
fldt
and
lea
stos
and
xor
cmp
cmp
add
dec
or
jbe
scas
in
movsbl
lea
or
mov
mov
mov
jnp
jle
or
pop
mov
insb
cmc
in
push
or
mov
or
stos
push
imul
movsl
add
fmuls
adc
push
add
loope
mov
imul
add
cmp
test
jnp
mov
or
sarb
dec
inc
sbb
ljmp
and
test
push
sbb
mov
and
bound
in
push
aad
lock
movsl
mov
sbb
and
push
fwait
jecxz
mov
dec
push
mov
mov
push
sub
movsb
arpl
jb
std
cwtl
and
add
popf
inc
mov
dec
and
pop
mov
pop
mov
ds
adc
lock
arpl
jne
call
sub
pop
sbb
xorb
push
and
mov
shlb
inc
std
add
and
ja
jg
mov
adc
lcall
mov
or
mov
mov
rolb
arpl
adc
push
adc
sub
dec
jne
adc
mov
aas
or
sbb
xor
clc
fdivrs
mov
mull
inc
cmc
das
jb
mov
mov
push
mov
cmp
xor
adc
mov
add
data16
ds
test
jmp
aam
mov
std
adc
fs
or
mov
push
les
mov
ljmp
push
push
pop
les
ljmp
orb
push
add
inc
dec
fcomps
sub
in
inc
adc
push
popf
add
push
loop
mov
jg
sub
stos
scas
or
lea
stos
or
and
aam
repz
adc
push
jns
sub
jl
out
adc
or
xchg
ds
jnp
inc
insb
sbbb
insb
adc
push
sub
xor
jg
fs
or
icebp
dec
callw
mov
push
push
sub
adc
movswl
add
mov
sub
aas
insl
inc
push
stos
push
inc
push
rorl
adc
daa
stos
add
test
arpl
jp
push
mov
sbb
and
enter
add
add
movb
insb
mov
push
push
stos
mov
test
jo
mov
push
les
mov
or
andl
xchg
jbe
dec
clc
jne
pop
cmp
push
movl
mov
inc
mov
mov
lea
push
cmp
iret
dec
mov
adcl
cmp
addr16
mov
add
daa
jne
adc
mov
pop
es
push
int
aad
sbb
dec
test
inc
jnp
es
jne
sub
andb
sahf
add
mov
pop
loopne
mov
or
mov
lock
push
add
xor
pop
ljmp
push
xchg
sbb
fcoms
sbb
cmp
adc
pop
stos
jo
es
mov
mov
cmp
adcb
add
call
lea
cmp
push
xor
movl
cmpl
mov
adcl
jp
inc
pop
and
scas
push
and
out
jp
cwtd
mov
inc
and
loope
jle
movsb
pop
push
mov
xor
cmp
sub
xlat
out
push
dec
pop
gs
arpl
fisubs
mov
insl
test
pop
or
dec
cmp
jbe
mov
push
je
push
and
sbb
sub
fimull
addr16
neg
sbb
inc
jp
ljmp
enter
xor
and
cmpsb
add
ss
xchg
insl
push
adc
xor
pop
inc
jns
mov
mov
dec
pop
inc
cltd
dec
iret
fisttpl
push
push
adc
add
roll
jne
cmpb
adc
pop
xor
inc
mov
repz
andl
negb
fidivrs
movsl
mov
rolb
push
in
mov
jne
push
xor
clc
idivl
mov
jmp
inc
add
insl
sti
pop
fsubrl
ljmp
jnp
sar
mov
iret
sbb
mov
sub
flds
roll
sbbb
inc
pop
icebp
imul
push
es
ds
arpl
add
or
clc
int3
jo
pop
inc
push
fwait
popa
sbb
dec
andl
ljmp
aam
inc
adc
test
ret
cs
test
or
push
inc
out
mov
fsub
dec
push
and
mov
lds
sub
xchg
jb
hlt
adc
ret
test
cmp
stos
inc
push
adc
mov
inc
out
lea
lea
mov
pop
xor
aam
jmp
clc
fsubr
and
pushl
pop
mov
sub
push
test
sub
cld
push
lds
jmp
or
add
je
mov
stos
mov
or
int
std
jl
jae
cmp
sbb
pop
call
imul
inc
cmp
push
dec
ja
mov
inc
ljmp
sub
push
ljmp
add
push
mov
shll
xchg
mov
std
fidivs
cmp
jl
fstps
mov
rcl
shrl
rorb
shrb
adc
mov
in
mov
mov
loope
cmc
xchg
pop
cmp
loop
push
mov
and
in
pop
out
adc
rclb
sub
enter
gs
inc
mov
add
cs
sub
insb
mov
xchg
das
lods
fstpl
jb
xchg
andb
ljmp
loopne
cmp
mov
leave
xchg
push
pop
inc
adc
push
push
fcmovnb
js
adc
inc
or
inc
jmp
lahf
xchg
test
xor
arpl
adc
fisubrs
inc
lret
pop
sahf
xchg
sub
mov
in
ret
adc
push
mov
push
mov
xchg
mov
sti
dec
mov
sub
sub
sub
mov
adc
push
adcl
mov
sbb
push
mov
inc
mov
popa
dec
inc
pop
iret
roll
pusha
pop
dec
add
movsl
stos
dec
cmp
or
adc
or
and
dec
and
std
arpl
sarl
inc
sbb
cmpl
add
sti
dec
xchg
std
sub
pusha
or
jns
sbb
rcl
sbb
xor
xchg
int3
daa
mov
or
pop
jnp
push
mov
cmp
pop
fwait
aad
mov
loopne
les
mov
lea
add
mov
dec
in
adc
frstor
mov
add
andb
jge
andb
jmp
pop
pop
sbb
lret
hlt
shrb
pop
data16
imul
add
jl
mov
mov
adc
mov
fisubl
sti
arpl
cli
xchg
pop
add
cmp
push
mov
cs
and
sbb
test
lods
xor
mov
mov
hlt
xchg
test
push
adc
shlb
xlat
mov
jmp
daa
inc
shll
cmpsb
cmp
push
sar
lea
add
into
loop
andl
sub
add
push
std
push
outsb
add
fcompp
call
insl
aaa
push
cmpl
and
mov
dec
mov
dec
fistpll
lea
mov
push
js
mov
xor
in
jmp
dec
test
and
pop
shlb
mov
xchg
test
stos
data16
std
push
xchg
sub
in
jnp
push
or
sub
xchg
cmpsb
ret
push
mov
rclb
aam
pop
dec
rolb
out
or
cmp
out
mov
out
test
cmp
pop
xor
cmp
stc
stos
adcb
push
dec
or
jmp
pop
aad
mov
loop
adc
andb
cmp
lret
ret
cmp
inc
mov
arpl
cmpsb
mov
mov
mov
aas
dec
pop
jno
cmp
fnsave
add
jg
or
lea
sbbl
sbb
lods
pop
inc
pop
mov
jns
fcoml
inc
push
ljmp
add
push
shlb
add
shll
add
mov
jne
cmc
test
sbb
sbbb
call
bound
pop
adc
imul
add
shr
aas
pop
xor
push
and
popf
fadds
pop
mov
push
jle
movsb
or
xor
inc
hlt
xchg
jnp
push
push
add
and
daa
xchg
enter
or
adc
add
add
add
fisttpll
les
add
rol
push
lea
les
pop
or
and
add
pop
jne
popa
push
fidivl
sbb
aam
mov
movl
push
subb
mov
xchg
mov
mov
dec
dec
sub
arpl
fsubrs
sub
mov
dec
add
xchg
rcrb
lods
dec
das
and
cs
cmp
lcall
shll
adc
sbb
inc
insb
or
sbb
inc
in
xchg
rcrb
insl
insl
ret
mov
aam
sub
push
jg
js
jns
fistpll
add
and
lock
fsubs
pop
cmp
sbb
pop
mov
jb
orb
mov
xchg
mov
push
out
pop
mov
subb
mov
fcoml
lahf
loopne
in
mov
or
daa
push
cmpsb
push
loopne
inc
and
xchg
add
jno
pop
adc
mov
sbb
push
bound
jl
xor
xchg
test
pop
push
into
fisubs
cli
pop
jmp
insb
cmp
xchg
lea
push
cmpsl
addr16
dec
cmc
subb
imull
xor
mov
inc
aam
daa
fildl
add
inc
add
rorb
add
out
mov
fidivl
call
fdivrl
subl
pop
push
imul
in
cmp
mov
or
movsb
ret
push
sub
mov
insb
movsl
mov
jg
fs
or
ja
dec
push
adc
push
sbb
cmp
aaa
push
mov
es
inc
inc
inc
mov
cmpb
inc
xor
movsl
fidivl
xchg
push
adc
stc
pop
orb
xor
mov
movsl
insl
fsubp
dec
sub
sub
or
mov
mov
pop
inc
adc
mov
mov
add
inc
ror
cmc
sbb
xor
pop
push
dec
test
and
or
mov
sub
mov
mov
xchg
mov
xor
mov
pop
and
mov
imul
mov
jmp
rolb
sbb
mov
mov
add
clc
std
icebp
mov
xor
jbe
dec
and
sub
add
mov
push
insb
movsb
sbb
fs
xchg
lods
or
push
loope
add
inc
fmull
push
shlb
sbb
adc
frstor
or
push
test
pop
and
push
mov
je
sbb
inc
fdivs
push
fcomp
pop
xor
in
iret
and
inc
stos
cmp
sbbb
mov
dec
push
cs
push
jns
rorb
inc
sbb
push
adc
mov
pusha
lock
inc
pop
aas
sti
dec
daa
pop
or
les
adc
pop
lock
adc
arpl
xorl
push
add
mulb
pop
inc
xor
or
aas
inc
mov
aam
pushl
pop
in
cmp
add
adc
daa
roll
out
enter
xorl
adc
cmp
fimull
aaa
les
rol
in
push
fildl
outsb
push
xor
push
jae
mov
addl
adc
mov
pushf
sbb
clc
push
or
add
jns
lds
dec
adc
test
cmpsb
add
mov
add
add
call
imul
lret
mov
inc
sbb
addb
mov
lods
add
rolb
dec
in
cmp
and
fsubr
pop
mov
mov
or
adc
mov
outsb
call
jnp
enter
test
andl
dec
add
jl
fwait
mov
enter
mov
test
xor
ret
pusha
pop
cli
cmp
sahf
je
or
add
dec
les
popa
roll
ret
cmp
push
test
ds
adc
mov
inc
add
aas
mov
mov
push
push
shlb
fidivrl
fs
scas
or
cmp
aam
cmp
call
jl
xchg
popf
scas
aam
sbb
rolb
sub
fistl
orb
std
fimuls
jb
inc
or
ret
mov
push
jne
lock
mov
add
add
ss
cmp
andl
mov
fdivs
fisttpl
lods
rcrl
mov
add
stc
ja
popa
stos
dec
push
sub
ret
cs
cmp
and
jbe
adc
xor
sbb
push
sub
sub
pop
sbb
sub
inc
mov
stos
push
mov
mov
dec
xor
adc
adc
mov
lds
add
sbb
fmuls
stc
pop
outsb
fucom
sub
adc
pushl
call
jmp
xchg
outsb
cld
pusha
pop
push
sbb
mov
push
stos
popa
adc
inc
push
pop
loopne
iret
dec
xchg
or
lock
roll
dec
add
leave
pop
repz
lcall
lea
dec
call
out
into
jbe
push
lock
adc
pop
jo
lret
ss
cmp
stos
mov
inc
insb
inc
sbb
jge
stos
xchg
inc
xor
js
pop
mov
pop
fs
push
pushf
add
cwtl
add
lods
and
jp
mov
inc
lret
push
adc
adc
xchg
push
jecxz
lea
inc
cmp
push
icebp
scas
repz
pop
adc
or
add
ds
pop
test
xchg
pusha
or
jp
mov
mov
nop
or
sbb
adc
mov
push
add
clc
inc
movb
sbb
mov
idivb
push
ficompl
cmp
push
mov
inc
cmp
mov
fmull
js
pop
and
mov
inc
xchg
idiv
inc
push
and
sub
or
mov
adcl
inc
shll
hlt
inc
jb
rolb
cmpsb
inc
mov
lods
and
daa
add
in
hlt
push
pop
sub
push
inc
mov
fsts
mov
fwait
push
add
mov
lock
pushl
sbb
rolb
insl
cmp
jne
and
jae
popf
rcrb
in
push
pop
pushf
add
pop
outsb
inc
xchg
xchg
add
and
insb
rcrb
mov
jbe
sbb
sahf
jbe
mov
pushf
mov
or
push
xor
clc
test
mov
add
dec
jae
mov
out
clc
lods
ret
jmp
mov
push
add
lcall
cmp
or
out
icebp
mov
cmp
mov
fcmovnu
mov
fsubs
push
push
test
sti
pop
rclb
sbb
pop
add
cld
das
test
fucom
pusha
mov
out
add
insb
test
addl
inc
add
jnp
xchg
sub
push
push
mov
cmp
movl
add
mov
mov
sbbl
xor
cwtl
pusha
and
adc
insl
xchg
arpl
add
add
dec
adc
imul
cltd
mov
mov
jne
push
cmpsb
mov
adc
add
inc
sti
je
lahf
rorb
decb
fnsave
xchg
pop
es
mov
adc
lret
sub
arpl
push
sbbb
cmovge
adc
aas
daa
hlt
je
rcll
jne
xor
lock
or
sub
push
lahf
cli
shll
jl
sti
das
push
jnp
ret
pop
inc
loopne
sbb
pop
shl
and
push
jle
int
add
push
orb
add
push
pop
add
lea
push
mov
out
xchg
pop
sbb
jp
adc
mov
push
leave
out
cmpl
lock
add
test
mov
mov
xchg
mov
push
sbb
pop
cmp
add
sbb
pusha
popf
pop
mov
jo
adc
icebp
in
push
xor
mov
adc
mov
dec
sub
inc
push
push
push
inc
lock
push
inc
cmp
pop
sub
xchg
mov
jb
mov
mov
movb
xchg
mov
scas
xchg
xor
stos
or
mov
mov
push
push
pop
dec
inc
aas
mov
pop
pop
inc
mov
lods
bound
pop
movsl
mov
adc
test
dec
and
add
nop
sbb
addl
pop
roll
and
insl
subl
mov
shrb
pop
xchg
xchg
cwtl
pushf
inc
jbe
clc
je
loopne
je
lret
cltd
and
xor
pop
ss
push
loopne
ds
xor
fcoms
lret
mov
xchg
mov
mov
sbb
rorb
dec
orl
mov
xor
in
adc
mov
inc
lret
pop
aam
adc
jge
mul
sbb
jo
hlt
mov
jecxz
cmp
add
les
subl
faddl
jmp
roll
bound
cli
sarb
xor
push
or
jecxz
push
xor
into
aam
adc
mov
scas
sbb
add
push
or
ficoml
and
lds
add
int3
push
inc
inc
cmp
fnstcw
cld
cwtl
fs
pop
push
xchg
push
stos
adcb
movsb
insb
mov
adc
pushf
dec
aad
shlb
mov
inc
sbb
push
ljmp
or
flds
out
subl
ljmp
aas
int
aas
mov
or
out
test
addb
aam
mov
add
push
xor
loop
jno
inc
dec
enter
dec
dec
call
sti
or
sub
or
sbb
cmp
or
and
xor
clc
push
scas
dec
adc
fucomp
sbb
call
test
or
mov
lock
mov
movl
or
or
or
or
xor
sbb
jl
adc
push
mov
bound
insb
jl
pop
push
outsb
sbb
xchg
pop
or
ds
je
mov
inc
insb
rcrb
jne
mov
jmp
mov
outsl
inc
inc
inc
rcrl
add
inc
pop
push
xchg
xor
mov
pop
mov
add
lea
adc
xchg
clc
xor
push
test
nop
fdivs
test
insb
xchg
aaa
sbbb
push
inc
addr16
adc
add
mov
xchg
mov
adc
mov
insb
fstpt
adc
lea
lock
clc
inc
movsl
in
pushf
sub
loopne
sub
sub
fcomps
and
mov
mov
adc
push
inc
pusha
leave
addr16
push
push
pushf
or
mov
sub
adc
adc
inc
inc
iret
mov
dec
rcrb
push
lret
dec
clc
inc
sbb
dec
das
subl
sbb
jne
loope
cmp
stos
add
sti
jg
mov
test
mov
test
push
orb
mov
cmp
in
push
cmp
push
xor
pusha
and
cmp
xor
icebp
inc
rorb
rcrb
sub
inc
andb
or
fsubrl
sbb
sbb
popa
pop
pop
sbb
aam
push
xchg
mov
data16
cmp
mov
adc
push
mov
mov
fsubl
pop
cmp
aaa
xchg
std
clc
and
into
inc
movb
push
push
adc
fisubs
mov
dec
push
push
aas
push
add
cmpsl
sahf
test
test
inc
xor
notl
mov
dec
pusha
pop
cmpsb
fcom
sub
rolb
jmp
mov
xor
sbb
adc
into
jae
loopne
je
sbb
call
inc
mov
jno
or
xor
add
pop
inc
push
iret
rorb
xchg
test
or
push
hlt
sub
fcoms
mov
push
out
pop
push
lea
into
mov
add
mov
jge
into
or
xchg
data16
mov
sub
xchg
mov
or
or
enter
decb
mov
mov
sub
add
leave
fdivr
mov
sahf
add
push
es
dec
stos
subl
sbb
fs
neg
test
fldcw
call
push
or
adc
or
pop
add
and
sbb
jge
outsb
lcall
adc
xor
jle
lods
loope
out
testb
or
les
push
add
cmp
mov
or
fmulp
pusha
pop
imul
xchg
fstps
ja
sbb
pop
jne
pop
mov
cmpb
ret
pop
fisubrl
testb
sbb
sbb
movb
pop
test
add
loop
sbb
or
pop
mov
cmpb
adc
xor
test
sbb
dec
xchg
dec
jo
mov
loop
and
add
jo
or
or
cmpl
call
or
mov
push
outsl
push
fisttpll
orb
testl
je
in
adc
bound
iret
mov
arpl
dec
push
jo
andl
pusha
es
push
mov
inc
mov
sub
add
js
jbe
and
pop
xlat
xchg
loope
mov
sbb
test
pop
fimull
push
rcrb
out
les
inc
sub
aad
fcompl
xorb
adc
es
xlat
pop
dec
adc
ljmp
add
lock
insb
lret
roll
mov
inc
test
pop
dec
test
pop
fiadds
arpl
sti
or
in
mov
mov
adc
sbb
inc
loope
dec
in
mov
mov
and
cmp
lret
jg
push
test
mov
sbb
mov
xchg
push
add
mov
loop
mov
int
clc
stos
add
cmpsl
push
pop
dec
push
adcl
and
mov
lds
bound
testb
fisttpl
repnz
out
sbbb
cmp
mov
fcoms
cmpsb
ret
jp
test
inc
out
pop
das
xchg
mov
fucomip
addb
pop
pop
push
lcall
add
mov
mov
popf
into
sub
fistps
cmp
xor
or
and
mov
pushf
out
inc
roll
push
xor
cmp
popl
push
jne
daa
pop
mov
or
inc
sbb
inc
sub
adc
inc
sbb
push
adc
push
add
shrb
or
sbb
jl
test
out
fistl
or
insb
js
jl
mov
mov
data16
jne
add
fisttpl
insb
jnp
inc
lock
int3
adc
mov
push
loopne
mov
imul
mov
add
xchg
les
dec
adc
cwtl
test
lret
push
test
sub
lods
addb
in
inc
pop
outsl
mov
add
adc
mov
mov
push
fcoms
add
mov
push
inc
mov
pop
mov
iret
pop
and
lods
add
xlat
push
mov
and
jo
scas
dec
xchg
or
test
add
inc
rol
sub
add
in
cmp
rol
hlt
mov
push
lods
and
cwtl
dec
fildll
dec
push
addb
jne
fcmovnu
mov
dec
add
dec
push
arpl
andw
jge
gs
add
out
test
test
les
ret
je
jg
push
insb
add
cwtl
pop
addl
jl
fwait
cwtl
rcrb
sbb
jo
add
je
nop
adc
jle
dec
les
je
sbb
add
or
mov
add
mov
sbb
lret
lds
icebp
lods
fcoms
xlat
lea
rorb
adc
sub
mov
xchg
repz
add
and
xchg
mov
inc
and
xchg
add
repnz
pop
and
lret
mov
sbb
xchg
jecxz
adc
push
addr16
xchg
add
sbb
daa
cld
or
add
repz
add
sbb
add
inc
bound
inc
daa
inc
lock
shrb
in
pop
lods
cltd
sbb
dec
xor
push
inc
adc
adc
ror
cmp
cli
push
add
pop
jge
sbb
push
js
inc
mov
dec
fs
rorb
and
xlat
mov
loop
insl
mov
rolb
ja
test
add
adcl
push
xor
rcrb
cmpsb
mov
mov
andb
mov
mov
add
xchg
mov
push
shll
ds
loope
mov
je,pn
push
cwtl
into
and
pop
push
push
pop
mov
clc
dec
movl
sbb
mov
add
pushf
aas
mov
orb
sub
and
mov
aam
add
xchg
rol
pop
adc
fdivl
jmp
pop
shll
or
iret
pop
push
pop
mov
adc
jne
out
leave
add
bound
add
pop
inc
jmp
lds
inc
hlt
jl
sub
loop
sbb
or
sarl
lods
sbb
insl
mov
test
jg
sbb
pop
push
jmp
pushf
mov
movb
pop
sbb
sar
inc
out
inc
push
sbb
inc
pop
adc
sub
mov
add
dec
les
pop
bound
xorb
inc
pop
mov
mov
ret
mov
rcl
call
adc
push
add
imul
hlt
in
adc
mulb
pushl
mov
xlat
mov
mov
es
adc
or
iret
mov
push
add
adcb
jp
ficompl
inc
sbb
mov
test
xor
bnd
in
test
jbe
in
push
or
les
mov
pop
and
add
inc
pop
arpl
fldcw
andb
insb
sti
sub
mov
ror
fs
cmp
test
mov
std
pop
sub
sbb
jle
mov
push
pushl
cmp
adc
test
loopne
pop
push
adcl
dec
cmp
das
cs
rorl
jo
push
mov
xchg
mov
xor
xchg
shl
ss
add
mov
push
adc
or
inc
sbb
lock
pop
add
sbb
leave
inc
aas
adc
jb
sarl
les
pushf
or
sbb
cmp
and
clc
adc
add
movsb
push
outsb
sub
mov
cmp
dec
stos
jne
sbb
in
movsl
stos
insb
dec
cmp
cld
cmp
retw
cmp
adc
mov
sub
add
mov
shlb
add
rcrl
sub
push
shl
xor
fcomps
cmpb
push
pop
mov
push
bnd
add
test
push
jl
daa
dec
fcoms
in
clc
out
movb
ljmp
pop
mov
mov
pop
push
mov
push
inc
enter
dec
and
movsb
cmp
ljmp
dec
test
push
jae
bound
mov
xor
mov
lcall
jle
rolb
sbb
adc
mov
les
xchg
test
sub
ss
sub
sub
push
mov
stos
js
shlb
add
sub
or
mov
dec
push
test
sub
mov
cli
or
sar
insl
xlat
add
inc
mov
mov
push
dec
add
pushf
fsubp
addr16
cmp
add
addb
cld
aam
ss
bound
or
loopne
cwtl
rclb
xchg
mov
or
iret
sub
xor
hlt
inc
inc
lea
ljmp
fs
adc
lds
jp
jo
mov
insl
mov
add
mov
xorb
sarl
scas
mov
xchg
fs
push
enter
push
xorb
sti
cmp
sbb
xor
mov
outsb
sarl
mov
lods
pop
xor
add
mov
xor
daa
les
push
push
mov
adc
jo
adc
loopne
mov
mov
add
shl
push
jle
xchg
adc
jnp
mov
frstor
mov
fdivs
add
add
adc
out
dec
add
inc
fistl
daa
add
lea
lds
mov
pop
or
add
pop
lea
adc
mov
dec
sbb
adc
sbb
xor
push
or
push
lea
mov
call
roll
jge
fidivl
inc
das
add
mov
mov
andb
mov
into
lret
and
and
or
sbb
int3
mov
adc
sbb
rorb
inc
and
ss
fiaddl
clc
xor
cli
pushf
mov
add
adc
xchg
mov
popa
in
int
dec
sub
shlb
and
inc
sub
and
scas
addl
mov
mov
sub
fcomi
movb
in
ret
mov
or
cld
xor
push
adc
xor
call
lea
or
out
stos
cwtl
add
sbb
test
outsb
add
ja
xchg
mov
adc
add
les
roll
sahf
inc
in
test
test
cmpb
lock
aas
lds
and
mov
rorl
or
push
jge
js
push
sbb
mov
push
aad
and
lea
cmpsb
add
sub
adc
repnz
inc
adc
push
enter
sub
daa
push
stos
or
fstpl
icebp
mov
add
pop
mov
xor
jecxz
arpl
outsl
cmc
xlat
or
arpl
jle
mov
push
je
subl
addl
push
stc
mov
ds
ret
add
movsl
pop
pop
in
out
js
or
or
or
push
jb
roll
and
rolb
jp
icebp
inc
push
mov
push
popf
shrb
popf
xor
or
sbb
aaa
pop
fmuls
daa
mov
ds
aam
aas
sub
mov
xchg
pop
cld
imul
pop
mov
jl
mov
push
or
push
and
mov
jne
ficompl
into
xor
sub
mov
jbe
or
mov
xchg
loopne
int3
scas
test
cmp
test
or
push
mov
xor
and
adc
adc
scas
add
stos
cs
pop
pop
dec
lock
xchg
adc
adc
jge
cld
sbb
outsl
add
sbb
mov
pop
je
add
fisubrs
outsb
inc
rcr
xchg
mov
ss
sub
or
loop
fisttps
mov
and
push
pop
mov
ljmp
arpl
addr16
loope
jo
mov
xchg
addl
adc
xchg
popa
add
sbb
mov
sub
test
data16
leave
mov
fnstsw
mov
aaa
lea
jle
mov
dec
test
dec
add
lea
cld
and
ljmp
jp,pt
cmp
adc
aam
xchg
fs
inc
or
inc
jno
inc
mov
rorl
std
and
in
les
ja
mov
andb
bnd
subb
loopne
mov
push
pop
test
push
adc
xchg
and
ror
mov
dec
sbbb
addr16
dec
jle
push
pop
pop
sub
sahf
jae
and
fsubl
push
adcb
fcomps
add
in
cmp
cmp
push
jp
cmp
mov
je
or
daa
insb
mov
mov
lret
iret
cli
and
js
xor
inc
popa
jl
pop
movsb
xor
add
and
popf
add
shrb
sub
mov
inc
orb
inc
sbb
jno
mov
mov
and
stc
lds
mov
sbb
inc
daa
and
cwtl
nop
dec
add
loop
adcl
add
cmp
les
push
shll
pusha
mov
sbb
sub
or
insb
add
or
test
clc
add
in
mov
std
add
inc
fcomps
jbe
push
push
cmpsb
mov
jb
nop
lods
bound
sub
xchg
adc
adc
inc
adc
adc
sub
mov
or
dec
inc
push
clc
lret
inc
push
xchg
data16
pusha
cwtl
int
ljmp
out
jbe
pop
push
popf
pop
ja
cmp
js
add
sarb
push
pop
add
daa
add
dec
push
push
mov
jo
clc
movb
pop
mov
or
and
mov
popf
ds
cld
push
jge
pop
push
jns
movsb
cmp
dec
xor
or
cmp
inc
sub
fdivl
mov
or
test
mov
mov
adc
sub
int3
jne
jo
add
or
cwtl
dec
pop
stos
inc
mov
and
leave
or
and
inc
mov
aas
lds
int3
insb
and
jne
mov
icebp
xchg
mov
pop
pop
scas
mov
add
add
pop
ljmp
js
mov
mov
addb
cmp
and
test
orl
rclb
lcall
push
shll
sbb
or
xor
mov
mov
subb
xor
lcall
lret
roll
cmp
adc
push
mov
adc
jmp
stc
inc
jnp
sub
inc
or
or
or
xor
mov
mov
xor
inc
or
push
arpl
adc
mov
pop
sub
xchg
addl
push
fistl
nop
xorl
outsb
aad
dec
aad
mov
adc
pop
orb
ss
add
push
in
mov
cmpsl
daa
out
jne
mov
ret
pop
or
incl
ret
pop
leave
inc
xorb
cmp
push
jg
arpl
mov
add
dec
in
mov
xor
es
cmc
or
and
mov
popf
add
xor
sbb
sbb
and
dec
in
pop
add
icebp
mov
adc
add
sub
test
testb
outsl
incl
jno
sub
sub
sub
rorl
repnz
arpl
iret
cmp
addr16
xor
pop
sbb
leave
daa
add
inc
pop
imul
cmp
mov
cmp
push
fidivl
xchg
loope
fadds
mov
mov
insb
cmc
shrl
xchg
jbe
and
pop
lea
xor
dec
orb
cli
mov
pop
es
and
xchg
rcll
mov
dec
clc
mov
add
cmp
cmp
inc
and
push
push
aam
push
ret
dec
clc
cmc
push
adc
mov
xchg
lds
add
jae
pop
adc
pop
push
inc
psrlw
sbb
out
mov
or
mov
xor
repnz
test
add
aad
mov
add
xchg
in
mov
fcmovnbe
mov
pusha
push
in
jo
mov
pop
pop
add
push
imul
iret
aas
mov
mov
sub
adc
sub
cmp
sbb
icebp
push
dec
leave
inc
xor
sbb
popa
jno
mulb
call
movsl
mov
in
and
add
or
dec
push
mov
jo
add
xor
ds
stos
and
mov
rorl
add
lahf
add
fs
jmp
jbe
fistps
mov
mov
xor
add
jae
and
and
jl
fmuls
xchg
sbb
rol
hlt
xchg
sahf
adc
xor
push
sub
int3
xchg
in
cli
mov
bound
pop
shlb
test
repnz
pop
add
jne
fcomps
loope
lds
or
or
push
mov
push
std
xchg
in
addr16
cmp
mov
aas
dec
sbb
jno
push
sub
add
or
xchg
push
jno
adc
nop
adc
sub
cmp
mov
mov
push
fdivs
pop
out
cmp
jbe
jg
xor
adc
mov
and
sahf
add
and
loop
sbb
icebp
add
sub
gs
insb
in
mov
mov
sbb
clc
adc
test
push
into
xchg
cmp
inc
pusha
mov
sbb
and
popf
and
cmp
daa
rcrl
jno
pop
movsb
jns
push
xor
addb
push
cmp
nop
jne
popa
adc
jecxz
pop
mov
ret
add
scas
adc
mov
pop
xadd
xor
or
jbe
push
pop
ficompl
dec
jne
add
xchg
stos
and
aam
lea
movsb
fadds
push
mov
and
add
popf
add
pushf
out
mov
pusha
push
int3
mov
dec
leave
add
push
push
mov
mov
or
jge,pn
gs
sbb
sbbb
idivl
cmp
sub
pop
push
mov
dec
mov
cmpsl
jo
xorl
add
push
jo
fisubrs
dec
outsb
xor
ljmp
aad
mov
rorl
and
or
shr
lock
sub
mov
movl
cmpsl
cs
sbb
daa
add
aad
or
inc
fcmovnbe
pop
aas
lock
sbb
es
add
sahf
mov
mov
cmp
cmpl
daa
xlat
popa
loop
nop
add
sub
pop
roll
addr16
or
and
test
xchg
addl
jp
aad
jno
es
fwait
imul
ret
aam
xchg
and
addb
adcb
and
test
inc
fsub
dec
and
push
rcrl
clc
push
sub
sahf
push
pop
mov
mov
push
mov
push
test
test
arpl
aaa
add
mov
mov
push
pop
inc
in
mov
daa
xchg
mov
add
xchg
sti
and
dec
popa
movsl
mov
mov
dec
add
mov
lea
dec
sti
pushf
movb
sar
lods
sti
push
mov
xor
cmp
inc
mov
push
dec
and
inc
insb
adc
mov
adc
out
sbb
andb
and
shlb
push
inc
les
das
ret
daa
push
cmp
xor
dec
pushf
xchg
rclb
mov
push
in
fcoml
push
scas
or
push
mov
lret
sbb
xchg
test
movsb
ret
shl
idivb
mov
test
lods
and
lds
mov
push
push
xor
sbb
andb
mov
add
and
repnz
sub
fiaddl
fadds
push
out
inc
gs
push
and
pop
or
lcall
pop
jo
stos
mov
iret
mov
fcmovbe
cs
push
test
es
fsubrs
dec
and
insb
mov
into
fs
mov
loopne
popf
push
adc
dec
rcr
and
jnp
pusha
je
lahf
mov
andl
push
pop
mov
xor
mov
sbb
fisubl
stc
push
push
lock
push
addr16
cmp
add
sbb
mov
push
push
addr16
mov
aaa
pop
cmp
xchg
sub
push
push
mov
add
pop
sub
hlt
lock
add
ja
rcrb
lock
movsb
outsl
xchg
divl
dec
inc
mov
pop
roll
mov
mov
sbb
icebp
jle
and
add
jae
mov
jno
imul
mov
push
fadds
sub
push
fsub
pop
subb
andb
mov
aas
clc
loope
push
cs
bound
mov
push
cs
stos
sub
add
sub
repnz
fisubl
push
cmp
mov
inc
sbb
cmp
stos
arpl
bound
sbbl
pop
mov
sbb
jl
inc
test
fmul
sub
sbb
add
imul
or
sbb
push
pushf
mov
mov
outsl
cmp
sbb
xchg
lods
push
mov
loopne
testl
pop
jo
lea
lret
xor
adc
lds
xorb
push
insl
inc
mov
mov
inc
xor
andb
call
inc
mov
add
addr16
icebp
movsb
pusha
test
sub
jo
cmp
lret
rol
xchg
movswl
and
push
mov
mov
loopne
or
lahf
insl
sub
movsb
push
push
xchg
lret
sbb
and
lods
loopne
jle
stc
xor
testl
dec
pop
wrmsr
inc
mov
cmp
mov
lret
mov
sbb
jne
pop
aaa
sbbb
mov
push
mov
adc
xor
not
lock
js
inc
cmp
mov
or
pop
cmp
sbb
adc
inc
mov
inc
lea
pop
adc
xor
sbb
cli
inc
add
sub
clc
and
mov
add
fimull
cli
pop
xchg
mov
jae
jno
mov
adc
enter
pop
das
mov
mov
push
imulb
cmp
and
js
inc
fiaddl
shlb
call
mov
fwait
pusha
adc
cli
xchg
test
out
icebp
mov
inc
xor
rorb
jb
rclb
mov
xchg
push
cmp
fld
mov
inc
jnp
xchg
cwtl
in
data16
mov
push
push
xor
jns
inc
mov
int3
jmp
pop
rcrl
inc
mov
mov
ret
xchg
cmp
xchg
adc
inc
lock
scas
mov
icebp
cmp
push
mov
push
push
and
cs
jno
push
insb
std
push
cld
cli
push
fmull
add
inc
movsb
test
movb
and
insb
fsubrs
cmp
add
or
aas
add
add
lret
cld
or
dec
pop
dec
push
stos
rorb
or
inc
sub
push
push
cwtl
mov
lea
push
push
or
jmp
inc
or
jbe
into
add
pushf
add
dec
jo
and
out
cmpsl
adcb
add
shll
in
dec
bound
cmp
mov
and
inc
xchg
bound
mov
jp
push
mov
jb
adc
nop
mov
fimuls
movsl
dec
test
cs
loopne
test
je
adc
jl
mov
push
push
pop
add
and
inc
enter
add
lock
je
adc
jb
lods
jnp
rcr
mov
inc
push
inc
xchg
out
gs
mov
mov
mov
mov
xor
lods
in
push
in
jbe
mov
jns
inc
mov
rolb
insb
xor
sbb
jne
cmp
shrb
pop
daa
inc
or
ds
sbb
sbb
int3
adc
and
lock
fs
add
xor
add
add
pop
adc
mov
add
gs
adc
push
cmp
sub
inc
sbb
mov
ret
xor
out
adc
sub
mov
jg
call
pop
jae
add
bound
adc
aam
rclb
cmp
jecxz
sbb
stos
xlat
push
fmull
and
ja
loop
call
cmp
rol
js
rcll
clc
xchg
adc
bound
icebp
insb
xor
mov
push
push
adc
sbb
pop
notb
in
push
adc
rcrb
inc
pop
xchg
add
mov
jns
test
lods
lods
andb
sub
xor
mov
mov
lea
rep
inc
stos
ss
mov
nop
cmp
inc
cmp
add
stos
dec
lret
add
mov
add
xor
ret
mov
push
test
add
lahf
push
jns
and
outsl
mov
sbb
push
dec
push
xor
push
mov
notb
sub
inc
test
adc
sub
jle
xor
iret
leave
movb
cmp
push
inc
xor
jae
cmpsl
test
push
jne
push
mov
mov
pop
sti
inc
inc
jae
jl
push
jl
inc
xor
sub
xor
cmp
mov
popf
adc
add
dec
testl
push
fdivs
dec
shl
push
add
and
push
fadd
pushf
movsb
xor
cwtl
insb
add
ljmp
pushf
aam
dec
std
lret
mov
push
xor
add
ja
mov
xchg
adc
and
adc
push
popa
pop
dec
mov
dec
xchg
mov
ss
test
sahf
jo
mov
mov
fidivrs
mov
enter
test
sub
and
add
loop
mov
mov
cmpsb
and
aad
add
add
xchg
add
xchg
mov
ret
or
shrb
test
push
les
das
pop
test
andb
xor
bound
test
repnz
push
pop
adc
aam
andb
mov
adc
mov
cmp
insl
mov
jno
push
roll
adc
sbb
mov
pop
fs
dec
and
bound
cwtl
aam
xor
add
mov
popf
add
mov
xchg
jne
lock
cmp
jno
push
mov
sub
insb
test
imul
add
mov
pusha
push
es
adc
gs
mov
xor
inc
or
shlb
mov
out
ds
cmp
adc
sub
jl
add
sahf
or
fadds
hlt
cmpb
out
cmc
and
or
add
sub
adc
popa
and
mov
shrl
adc
lcall
and
arpl
sub
aam
loop
push
psrlq
mov
add
loopne
push
add
mov
retw
xor
rclb
add
std
lds
xlat
inc
mov
inc
sub
add
mov
jb
cmpsb
lea
negb
xor
mov
and
adc
test
sub
push
loopne
push
mov
fmul
push
rolb
lahf
sarb
mov
xchg
imul
stos
sub
adc
inc
lods
mov
mov
out
fcoml
mov
mov
insl
and
xchg
call
push
inc
mov
rclb
mov
mov
xor
push
lock
lcall
and
push
inc
movsb
push
int
or
mov
fstps
mov
roll
xlat
shlb
lea
dec
stc
lods
adcb
sub
push
hlt
pop
inc
jo
cmp
lea
add
ds
inc
int
out
inc
test
aas
loopne
daa
xor
loop
fsubl
add
sbb
lahf
mov
push
add
inc
aam
mov
rclb
out
sbb
inc
fcmovnbe
mov
rcrl
jle
rcrl
lock
lds
mov
lods
or
sbbl
adc
pop
fbstp
enter
add
or
dec
or
inc
dec
xlat
adc
loop
stos
clc
push
cmp
je
sbb
or
sub
cmp
fnstsw
lret
xchg
mov
push
fidivl
push
jo
sbb
mov
inc
inc
les
lock
ret
outsl
cmp
mov
jge
inc
and
loope
clc
adc
mov
fldenv
mov
jecxz
bound
adc
jns
data16
push
jecxz
movsl
movsb
sbb
fldenv
jne
hlt
fimull
test
loop
outsl
sbb
inc
sub
lods
stos
mov
add
aam
sub
outsb
add
add
cmp
mov
clc
or
cmp
fwait
adc
adc
jnp
adc
fcoms
jno
mov
mov
repnz
pusha
inc
mov
jl
mov
mov
hlt
shl
outsb
push
rorb
pop
loopne
rcll
mov
jnp
inc
mov
out
xchg
mov
push
adc
insb
stos
fcoms
mov
sbb
or
loopne
dec
insl
inc
jle
pop
int3
hlt
push
dec
add
gs
into
sbb
push
ret
pop
jecxz
add
jno
inc
or
outsb
jmp
and
adc
add
mov
push
insl
insl
ror
leave
pushf
pop
mov
pop
mov
aaa
or
ds
pop
sbb
test
jb
sub
clc
cmp
adc
jge
mov
or
cmp
adc
andb
xchg
jg
cwtl
js
sbb
adc
lock
fldt
sub
ss
adc
movsb
mov
mov
rorb
jne
push
and
push
arpl
stos
push
sbb
imull
push
inc
and
mov
loop
jnp
mov
adcb
mov
lock
pop
int
inc
push
push
adc
add
ss
test
inc
clc
inc
add
lcall
clc
jge
pop
sahf
cwtl
adc
mov
pop
sarb
fdivrs
pop
stos
jecxz
andb
lcall
push
mov
mov
or
mov
add
add
lds
cmp
sub
xor
adc
sar
push
adc
aas
gs
inc
add
mov
cld
into
xorb
add
into
mov
jne
subl
inc
xor
xor
movl
pop
xor
cmpb
xor
test
sub
inc
mov
mov
pusha
rcll
aad
das
or
int
inc
cmp
mov
mov
imul
push
sahf
pop
sub
pop
rorl
push
fdivl
call
outsl
subb
or
sti
andps
movsb
dec
jne
imul
mov
sbb
mov
daa
jno
push
hlt
cmp
in
aam
jl
inc
fadds
push
rorb
mov
xchg
iret
mov
ficoml
and
pop
add
sbb
mov
in
fsubs
jne
lea
mov
adc
pop
pushf
and
hlt
ljmp
dec
pop
mov
call
js
pusha
add
pop
inc
sub
add
mov
lds
ror
adc
test
inc
mov
xchg
add
xlat
add
sbb
pushf
into
mov
adc
sbb
add
push
pop
rcl
sbb
and
hlt
pusha
clc
add
dec
fsubrl
add
sbb
outsb
mov
insl
jg
rorb
adc
sbb
mov
sbb
mov
mov
cmp
sbb
fadds
cld
jmp
mov
cmp
push
xchg
nop
sub
cmc
mov
add
sub
fistpl
arpl
stc
lea
or
xlat
mov
jae
or
jo
push
lods
add
les
mov
pop
int3
adc
loop
push
xchg
mov
dec
addb
dec
adc
add
mov
movsl
mov
xchg
clc
cmpsl
and
sbb
xchg
adc
loopne
or
cmp
sbb
pop
mov
cmp
mov
or
add
mov
dec
or
rclb
les
jno
sbb
call
adc
and
fstpt
in
jo
add
gs
jno
int3
popf
adc
mov
hlt
nop
filds
xor
jns
test
sahf
jo
stc
fs
shlb
or
jmp
inc
sarb
and
test
nop
xorl
js
jecxz
add
pop
inc
ret
push
jmp
xchg
popa
cmc
lds
add
movb
or
pop
jecxz
sub
inc
shll
add
jge
mov
xor
jno
out
mov
aad
sbb
jmp
mov
lock
or
jae
push
push
inc
test
add
jmp
lret
dec
inc
in
mov
popl
mov
clc
push
push
push
movsl
xchg
inc
je
inc
mov
lods
stos
xchg
in
insl
pusha
jne
andb
lds
mov
call
fildl
loopne
notb
addr16
push
mov
inc
add
or
sti
adc
lahf
push
push
fldt
pop
hlt
lret
sbb
add
iret
xor
fwait
icebp
add
push
push
popa
jnp
popw
hlt
ja
sbb
in
mov
test
mov
mov
pop
cmpsb
sbb
push
xor
lds
add
or
mov
jo
add
sahf
xor
inc
sbb
mov
inc
mov
inc
inc
cmp
movsl
ds
pop
xchg
ret
push
pop
imul
loope
sbbb
ficompl
sbb
sub
sbb
call
dec
mov
xor
mov
pause
rorb
movsl
ret
pop
in
loopne
mov
or
or
js
xchg
bound
leave
push
adc
leave
loope
dec
mov
add
adc
sahf
popf
push
ss
adc
adc
sub
test
jb
stos
sbb
jno
in
and
lds
aad
sbb
adc
or
int
dec
jne
mov
int
lds
sahf
inc
sbb
add
orb
dec
adc
mov
mov
and
fsubl
inc
cmc
adc
loopne
push
icebp
adc
sbb
add
mov
stos
push
and
shrb
push
xor
adc
call
pop
pop
add
pop
mov
add
cmp
and
movzwl
fwait
push
mov
imul
add
add
lret
mov
lea
mov
push
aam
iret
add
mov
cmpsb
stos
sub
mov
mov
movsb
addb
loop
mov
add
mov
arpl
adc
nop
pop
sbb
xor
inc
push
mov
push
push
inc
sub
pop
adc
and
mov
mov
les
ja
shlb
adc
cmp
push
hlt
and
popa
enter
hlt
inc
add
pop
sub
adc
rolb
pop
jge
ret
cmp
mov
push
sarl
or
sarl
inc
lea
outsl
cmp
push
sub
push
jle
and
rcr
dec
ljmp
pop
add
push
add
movsb
inc
mov
cli
nop
push
pop
cmp
data16
add
sar
xlat
mov
lds
loopne
add
clc
aad
mov
sbb
and
mov
mov
arpl
mov
ljmp
mov
or
sahf
push
scas
cs
xchg
loopne
pop
insl
enter
popf
dec
scas
inc
mov
sub
sbb
xchg
cs
or
jmp
dec
call
mov
and
cmp
ror
imul
jecxz
push
stos
imul
cmp
xchg
sbb
or
cmp
popa
adc
mov
cmp
jo
fwait
mov
and
dec
mov
add
add
cmp
sbb
jae
icebp
rclb
insl
and
mov
add
push
and
into
push
cld
push
push
pusha
test
push
sub
jne
dec
inc
stos
ret
jl
paddusw
repz
fwait
aam
jne
mov
mov
xor
lea
int
loop
jno
adc
je
adc
test
sti
mov
dec
ss
out
xorl
shrb
comiss
add
push
pop
test
add
cs
leave
adc
mov
insb
ret
fisttpl
call
pop
sbb
pop
jl
mov
mov
mov
adc
hlt
ljmp
dec
push
popf
ficoml
push
add
sti
mov
loop
into
inc
cmp
push
jae
lock
mov
rolb
stos
dec
fdivrl
add
push
mov
mov
mov
fadds
fabs
clc
mov
imul
fisubs
test
push
jl
pop
out
rcll
mov
nop
ljmp
adc
mov
push
movsl
sub
iret
out
test
sub
cmc
les
inc
call
nop
cmc
pushf
adc
jl
ret
mov
push
stc
cwtl
xor
mov
ret
mov
and
cmc
adcl
js
cmp
xchg
adc
ret
sti
sub
add
add
cmpb
cmp
xor
sbb
jle
or
int3
add
inc
or
jo
hlt
nop
xorb
shlb
cmp
jbe
jg
push
add
or
pop
mov
pop
cmp
mov
jbe
subb
cmp
mov
jbe
pushf
les
loopne
mov
sub
mov
sar
fdivs
insl
jo
or
fistl
pushf
sub
push
adc
push
cmp
mov
pop
subl
insb
sar
test
mov
ss
mov
sbb
inc
jecxz
push
add
xor
dec
adc
pop
cltd
mull
rorl
add
lahf
xor
or
or
mov
sub
subl
sbb
jle
les
std
stos
jno
shrl
out
roll
enter
test
subb
cli
jno
fsubs
aaa
imul
push
pop
xchg
jne
stos
jb
test
ljmp
loopne
add
js
mov
ret
stos
call
mov
and
js
mov
mov
nop
push
xor
rolb
pop
faddl
dec
add
inc
sbb
jg
mov
mov
pushf
loopne
shll
fs
jbe
les
xchg
into
push
inc
inc
cld
sbb
mov
stc
arpl
aas
fiaddl
test
push
adc
mov
and
iret
xchg
and
push
inc
mov
int3
and
xchg
loope
in
ret
into
xor
mov
scas
in
sub
adc
or
mov
leave
mov
cmpsl
push
mov
inc
sbb
add
jecxz
inc
lahf
add
xor
dec
adc
or
sbb
xchg
daa
and
lock
xor
cmp
lret
lds
aad
gs
daa
pop
sbbl
mov
jmp
adc
cmp
and
fiadds
scas
pop
loop
fdivl
or
or
xchg
jo
mov
or
mov
notb
pop
mov
mov
adc
push
sbb
or
xchg
adc
cmp
lea
int3
and
jge
sbb
inc
ret
mov
loopne
inc
add
mov
popa
ljmp
loop
push
dec
inc
call
pop
rcrb
je
clc
pusha
sub
stc
fucomi
cmp
mov
sub
and
shlb
mov
add
test
push
cmp
xchg
cmpsl
mov
or
sbb
sub
push
aam
pop
pusha
mov
das
cli
push
cmc
rcl
inc
stos
mov
sub
rol
pusha
and
xor
add
lock
xchg
mov
lldt
pop
ljmp
jge
lea
mov
int
pop
pop
xchg
dec
push
rol
dec
mov
and
inc
inc
sub
enter
push
adc
addb
lods
xchg
inc
es
adc
xchg
add
and
sub
lea
mov
clc
pusha
les
jle
jmp
loop
in
ljmp
call
pop
xchg
jae
movl
push
push
es
sahf
adc
cmp
rolb
xchg
mov
jno
daa
js
sub
lods
mov
inc
in
dec
test
test
rcrl
xchg
and
push
dec
aam
push
outsb
sbb
pop
lods
sub
dec
sub
inc
xlat
iret
add
xchg
cld
jbe
js
addr16
and
cmp
add
cld
mov
scas
cli
roll
or
insl
mov
cmp
push
addr16
out
cli
mov
int3
mov
out
fsub
mov
add
add
lock
push
aad
jne
push
mov
inc
or
push
and
or
inc
add
sub
pop
mov
jecxz
push
mov
xor
xor
int
pop
ret
sbb
repz
jp
test
mov
stos
push
mov
lods
in
out
sub
rolb
sub
leave
pop
aas
add
adc
inc
mov
les
xchg
stos
test
pop
leave
les
pop
arpl
lock
test
pop
sub
mov
push
or
mov
jne
aam
fiadds
stos
pop
push
fisttps
rcrb
pop
mov
mov
add
xchg
adcl
and
in
push
rclb
push
and
or
push
push
and
leave
hlt
or
sub
out
in
addl
bound
int
loop
cmpsb
mov
lcall
sbbb
loop
rol
enter
push
pop
icebp
sub
movsb
push
mov
mov
and
adcb
or
push
cmp
inc
xchg
mov
aaa
or
and
push
pop
divb
pusha
fs
in
push
addr16
aam
add
ror
nop
mov
dec
pop
or
movsl
dec
cmp
adc
jns
mov
add
inc
mov
std
adc
xchg
out
and
iret
push
inc
sub
adc
cs
pop
cmpsb
xchg
push
testb
or
aad
out
jmp
xchg
clc
aas
adc
rorb
cld
or
adc
cmp
and
outsb
stos
cltd
xor
bound
xor
outsb
movb
xor
lret
push
mov
loopne
mov
add
mov
lahf
cli
sub
in
ret
sub
rclb
adc
popf
push
mov
cs
pusha
dec
mov
and
cmp
clc
jle
das
adc
sub
roll
push
cld
pop
icebp
mov
add
mov
mov
cmp
hlt
push
mov
pusha
or
inc
das
mov
sub
jl
pop
mov
pop
ss
or
push
add
add
sahf
or
pop
rclb
sbb
popf
mov
addl
sbb
push
push
aam
mov
add
push
hlt
or
ss
mov
leave
adcb
add
push
aad
aad
or
inc
inc
aad
or
mov
sbb
mov
andb
popf
mov
mov
xchg
fs
sbb
mov
inc
addl
add
inc
arpl
dec
dec
or
icebp
movsb
call
shl
mov
mov
push
cwtl
pushf
jp
fsubrl
sbb
pop
inc
jb
jmp
push
adc
gs
push
sti
clc
jmp
xorl
insl
add
add
add
mov
or
add
aaa
mov
inc
push
pop
inc
pop
fiadds
loopne
sbb
push
cmc
inc
popa
mov
mov
sub
jl
xor
sbb
dec
push
xor
lret
scas
iret
clc
pop
shl
add
sbb
xor
popf
mov
test
inc
aaa
loopne
cld
pusha
fistl
in
sub
pop
add
adc
or
loope
and
ss
adc
jnp
push
call
dec
ret
into
mov
push
adc
shl
repnz
jg
aad
adc
jmp
pop
xchg
push
cwtl
add
hlt
mov
pop
push
xor
jp
shll
out
call
orl
pop
adc
mov
icebp
push
shl
pop
int3
lods
mov
rorl
xchg
sub
add
jl
test
fistps
addl
fdivr
cmpsl
cld
lock
mov
jbe
xor
sub
and
filds
sub
pop
or
dec
rcrl
adcb
dec
push
andb
or
mov
js
enter
jle
or
arpl
nop
aad
pop
cmp
out
mov
test
inc
cmp
lea
imul
mov
add
mov
sbb
rolb
inc
inc
pop
inc
mov
inc
inc
sub
mov
push
dec
inc
add
add
xchg
push
or
sub
rcrl
sbb
clc
stos
cmpb
mov
scas
sub
mov
addb
fsubs
fcoml
adc
in
jmp
sbb
mov
xor
xor
aam
adcb
dec
andl
cltd
or
pop
js
sbb
fsubrl
add
mov
adc
fdivs
mov
scas
sub
popa
sub
push
adc
lock
les
push
inc
mov
add
add
or
daa
mov
sahf
add
fistl
imull
jp
dec
push
mov
cmpl
rorl
js
scas
je
bound
cmp
adc
bound
add
insl
xchg
pop
inc
push
sbb
mov
jo
push
xor
pop
sbb
jp
and
adc
dec
mov
add
dec
add
arpl
js
inc
lea
cs
pop
aam
cwtl
mov
enter
inc
mov
push
sbb
mov
sbb
lcall
push
or
jo
les
push
mov
mov
fisubl
pop
jg
je
sub
int
dec
das
test
xchg
dec
dec
cwtl
lea
pusha
push
fwait
pop
mov
inc
jl
or
add
and
lea
adc
xchg
popa
add
jbe
ljmp
lea
mov
mov
push
pop
sbb
icebp
test
xchg
jge
pop
pusha
push
inc
dec
test
cld
jbe
push
cmp
adc
test
arpl
cmp
dec
or
sbb
cmpsl
pop
push
test
mov
or
adc
stos
mov
mov
fwait
sub
sub
pop
mov
dec
mov
jmp
das
inc
push
inc
cs
mov
add
ret
andl
mov
sub
adc
aam
pop
pop
push
add
or
add
adc
divb
call
inc
aas
mov
pushf
jne
push
or
lea
add
inc
daa
mov
lret
adc
pop
adc
mov
push
and
mov
and
inc
fbld
mov
outsb
cmp
push
pop
mov
es
inc
pushf
and
add
test
fldt
xchg
out
dec
test
mov
inc
cmp
fs
loop
add
sahf
leave
mov
jl
cmp
pop
movsb
dec
mov
hlt
adc
or
push
push
mov
sahf
and
push
iret
mov
xor
inc
push
stos
xchg
mov
cvttps2pi
cmp
push
push
or
rorl
movsl
pop
cmp
stos
push
mov
cmp
xor
and
sbbb
pusha
pop
lock
mov
lods
call
add
cmp
sarl
adc
icebp
pusha
pop
popa
loope
or
sbb
xor
dec
add
adc
loop
add
push
out
add
push
insb
loop
add
pop
clc
pop
mov
sub
cmp
push
mov
ja
lcall
add
or
rorl
xor
pop
inc
xchg
add
dec
ljmp
lret
mov
xchg
mov
movsb
push
aam
mull
adc
jp
or
pushf
xor
test
jbe
pop
add
iret
dec
push
mov
testl
add
jbe
adc
sbb
imul
cmp
dec
cltd
inc
xlat
inc
andl
inc
jge
in
cmpb
cmp
add
xor
push
pushf
cmpl
pop
push
jg
call
lea
sub
mov
test
leave
mov
pop
inc
jno
pop
ret
movsb
andb
sbb
filds
sti
add
mov
lds
dec
and
add
dec
arpl
cmc
push
bound
clc
xchg
add
movl
sbb
aad
inc
jge
mov
ds
insb
inc
cmp
xchg
jne
add
leave
adc
add
cwtl
or
pop
rcll
in
mov
adc
adc
bound
mov
mov
inc
mov
pop
cmp
fcomi
jle
push
xor
pop
ljmp
mov
andl
pop
add
pop
add
pop
les
inc
adc
ret
dec
call
clc
adc
mov
jle
or
in
insb
sahf
sbbb
shll
inc
cmp
movb
inc
mov
cltd
pop
cmp
rol
test
adc
sub
lds
inc
les
adc
icebp
adc
mov
xchg
dec
mov
cmc
stc
icebp
inc
inc
hlt
ret
sub
movsb
inc
mov
cmp
mov
add
push
adc
pop
mov
xchg
aad
fcompl
add
and
rcll
icebp
and
imul
fs
inc
sub
cmp
and
fadd
mov
push
addb
in
lods
push
mov
inc
mov
push
les
in
jl
pop
add
scas
jo
inc
cmp
movsb
data16
adc
out
pop
js
sub
add
loope
popf
inc
inc
cld
xlat
int3
aas
mov
int
lock
daa
add
sub
push
jge
cmp
ljmp
test
mov
arpl
std
inc
lock
jge
inc
mov
cmp
test
mov
mov
jnp
dec
add
int
sbb
sahf
xchg
add
shll
sub
or
addr16
iret
jle
stos
enter
pop
lock
shrl
push
mov
jno
sbb
dec
aad
adc
jp
ds
dec
xor
dec
inc
add
inc
out
or
adc
inc
push
dec
hlt
sub
mov
mov
pop
and
in
cmp
push
cmovg
and
sarb
push
jmp
push
and
jmp
loop
cmp
mov
mov
or
or
cld
adcb
and
and
push
pop
add
lds
adc
sbb
push
add
jo
clc
loop
or
xchg
aaa
jl
sub
pop
insb
sbb
add
inc
jle
pusha
fwait
jle
js
testb
mov
pop
shlb
inc
or
add
insb
lock
pop
mov
enter
push
stc
mov
aad
and
xchg
xchg
xor
stos
push
lds
sbb
adc
inc
jg
rolb
xchg
rcrb
pop
lods
add
lret
jecxz
add
sahf
sahf
push
out
fldl
xchg
addb
cmpsl
pusha
das
inc
pop
push
mov
inc
cld
jb,pn
push
out
push
test
push
sub
mov
sbb
cmp
cli
movsb
mov
mov
ljmp
mov
cmp
mov
add
jb
and
sbb
mov
dec
push
inc
stos
call
push
adcl
ret
sbb
arpl
dec
pop
mov
mov
push
js
lea
add
add
add
outsl
pushf
test
sub
sahf
add
bound
or
xchg
pop
inc
sub
xor
fisttpl
jmp
out
imul
add
xor
cmp
loop
xor
adc
int3
mov
cmp
mov
push
mov
sbb
mov
mov
shl
lahf
push
repnz
fcmovnb
and
sub
push
adc
stc
mov
icebp
mov
mov
sub
pop
jo
ret
push
lock
enter
push
xchg
adc
sbb
mov
rolb
mov
push
ds
jae
loopne
mov
jb
scas
mov
mov
mov
andl
sbbb
js
cltd
adc
maxps
mov
or
mov
fwait
shlb
xchg
adc
xchg
add
adc
sbb
pop
pop
jge
pop
jbe
jae
orl
sbb
lods
mov
arpl
mov
sbb
xchg
out
pop
add
mov
or
into
ds
inc
mov
lcall
add
call
cmp
loope
loopne
call
xchg
and
xchg
jno
mov
mov
test
add
xchg
test
scas
adc
dec
lock
add
loopne
sub
or
mov
js
jecxz
pop
mov
sub
adc
shlb
xchg
adc
jg,pn
aad
pusha
pop
xor
pop
xor
test
scas
call
ljmp
andl
shlb
add
add
jg
xor
xchg
mov
pop
xor
in
adc
loope
adc
in
mov
sub
push
mov
inc
inc
push
sbb
les
scas
adcb
ja
push
inc
adc
aaa
orb
adc
in
inc
je
lock
jg
fldl
sbb
inc
aaa
push
stos
sbb
into
xor
cmp
lock
sbb
xchg
adc
mov
test
push
movsl
adc
lea
push
fsubp
dec
xchg
out
mov
sti
leave
jge
jno
fsubrs
sbb
sub
add
xchg
adc
loope
cld
inc
popf
cmpsb
pop
push
je
mov
mov
adc
cmp
daa
ret
ret
pop
or
pop
jl
andb
jg
sarl
cmp
ljmp
insb
call
mov
nop
sbb
and
leave
imul
fistps
jp
jecxz
mov
pop
push
fidivrl
jno
mov
sbb
mov
lds
pop
and
and
or
daa
rcrb
pop
andb
adc
adc
jge
loope
add
add
pop
add
inc
add
or
push
push
adc
add
and
adc
sub
sbb
add
xor
mov
xorb
inc
shr
cwtl
adc
iret
cmp
shll
adc
sbb
outsl
dec
adc
push
sub
rolb
imul
push
mov
pop
mov
mov
lea
das
je
add
sahf
ss
mov
sub
je
mov
jecxz
inc
daa
cmp
mov
rol
fadd
mov
push
pusha
les
aam
test
daa
loopne
jne
mov
push
inc
ljmp
jecxz
mov
mov
add
xchg
push
loope
aaa
repz
and
pop
and
es
inc
lcall
adc
push
push
xchg
and
orl
mov
test
inc
or
test
mov
pop
mov
jl
mov
add
mov
push
mov
mov
jns
mov
pushf
movsb
cmp
out
sbb
jnp
mov
sbb
testl
les
shrd
daa
sub
xor
mov
add
or
xchg
mov
inc
or
vpaddd
mov
cmp
shrb
rolb
or
jns
adc
sub
and
xchg
push
int
int
pop
clc
and
mov
add
lcall
clc
push
pop
push
xchg
push
mov
mov
jmp
inc
mov
adc
and
push
mov
mov
test
ljmp
inc
pusha
sbb
sbb
xor
mov
add
cmp
mov
out
pusha
adc
bound
push
lock
sbb
icebp
mov
mov
adc
cmp
mov
or
mov
pusha
iret
fidivrs
sahf
inc
push
jne
jne
fstpt
sub
cld
xor
sbb
sahf
add
cmp
imulb
add
adc
adc
pusha
jge
insb
push
push
clc
push
inc
flds
sahf
fistpll
arpl
sbb
inc
sbb
add
jmp
xchg
xor
daa
pop
mov
sbb
dec
loop
ficompl
repnz
lds
cmp
sub
mov
aad
lods
call
pusha
inc
xor
mov
outsl
mov
bound
popf
jle
mov
cmp
push
iret
mov
lcall
inc
pop
mov
fbld
ss
xor
jns
push
sub
inc
lret
pop
fdiv
clc
sahf
jne
or
jle
pop
mov
add
addl
xchg
in
or
sub
cmpl
cmpsb
inc
lds
push
or
sub
and
adc
jmp
or
ror
push
mov
outsb
lea
push
sbb
mov
ds
rol
mov
xor
subl
mov
orl
push
dec
push
rorb
and
mov
adc
lock
lock
push
fimull
xor
stos
rcrb
inc
mov
adc
add
lock
cmpl
inc
test
add
push
push
fistl
xchg
or
jle
shrb
xchg
pop
jmp
jge
mov
daa
addb
lods
cmp
or
add
inc
out
xor
aad
mov
sub
je
hlt
cmc
aam
popf
push
or
push
enter
adc
nop
repz
xor
sbb
pushl
jbe
rolb
inc
ficomps
leave
add
push
js
xor
sbb
jl
mov
pusha
xchg
cmp
adc
or
xchg
nop
mov
shll
push
adcl
cmp
sub
and
mov
sbb
add
clc
add
cmp
sahf
test
and
add
pop
inc
adc
sbb
mov
lea
inc
or
cmp
mov
or
insl
cmp
add
shrl
lret
xchg
inc
adc
mov
lea
cld
pop
clc
inc
movsb
or
sub
push
pop
aam
lds
and
mov
js
add
outsl
add
daa
xor
add
aad
adc
cs
mov
test
in
adc
mov
sbbb
pushf
fadd
inc
rolb
mov
mov
sbb
out
xchg
mov
lahf
shll
add
or
dec
mov
mov
dec
push
clc
or
push
cmp
roll
and
adc
jo
sbb
sti
add
subb
jnp
hlt
pushf
je
push
lcall
call
pop
pop
add
mov
or
ret
inc
push
mov
les
rcll
andb
out
rolb
or
add
add
mov
cmp
add
fdivr
jb
push
and
sbb
stos
mov
movsb
xor
or
push
jbe
int3
js
mov
in
test
sub
jp
inc
loop
pop
push
insb
inc
adc
or
mov
sub
test
adc
inc
jecxz
fwait
mov
adc
jle
lret
mov
push
mov
add
mov
cmpsb
cmp
jno
xor
rorb
jle
pop
sbb
inc
testl
sub
inc
mov
lds
aad
loopne
andb
mov
fiaddl
sub
inc
push
mov
add
cli
icebp
sbb
ljmp
bound
cmp
in
push
sbb
aad
add
in
mov
orl
fldt
inc
aad
push
adc
dec
adc
adc
xchg
jae
mov
jae
mov
pop
cld
ret
push
mov
inc
jo
ret
ds
push
or
mov
repz
out
addb
adc
addl
mov
and
xor
roll
mov
ljmp
and
xor
loopne
xor
mov
jo
fwait
imul
clc
sbb
daa
mov
adc
mov
xor
test
lahf
pop
sti
sbb
xchg
test
inc
in
dec
std
data16
xorb
dec
cmp
add
sub
imulb
bound
pop
stos
lea
addb
mov
subb
mov
aad
pop
in
pop
pushf
push
adc
into
jle
popf
test
or
movl
adc
sbb
out
and
jns
pop
push
add
insb
cmp
jp
pop
test
aad
mov
dec
cltd
push
pushf
push
mov
sbb
js
mov
pop
lock
add
dec
or
jnp
adc
add
inc
jo
xor
inc
pop
pop
jno
sub
aas
es
sbb
daa
mov
or
js
dec
mov
rol
imul
cltd
dec
lahf
hlt
push
sbb
test
mov
loope
sub
mov
aaa
xor
scas
jp
in
push
mov
sbb
push
mov
mov
mov
ret
ljmp
inc
fadds
loope
mov
mov
test
js
jo
add
aaa
clc
push
mov
and
daa
mov
cmpsb
mov
cmp
fwait
subb
fidivl
fisttpll
inc
add
adc
or
data16
or
mov
sbb
or
mov
int
clc
and
addb
flds
push
std
adc
xor
pusha
popa
jo
nop
aaa
xchg
and
in
mov
mov
mov
mov
dec
push
int3
addr16
mov
xchg
jbe
imul
pusha
add
adc
adc
inc
push
ror
les
sbb
test
jle
inc
jne
rcll
rorb
sbb
mov
in
lea
addb
js
jl
adc
mov
xchg
adc
sbbb
mov
in
mov
lds
push
enter
adc
cmp
mov
pop
pop
and
popl
push
push
nop
add
stos
mov
push
cmp
pop
or
aam
in
fidivl
ret
setne
pop
xchg
jno
das
and
jae
and
aad
jo
lds
cmpsl
mov
sbb
int
xlat
xchg
mov
daa
mov
sbbb
roll
call
fs
jl
or
mov
add
addr16
je
push
popa
fistpl
mov
push
add
mov
outsl
mov
jecxz
inc
or
jl
jno
outsl
pop
push
aam
nop
cmp
int
cmpsb
hlt
adc
inc
cmpsl
inc
mov
pop
inc
and
xchg
fsub
movsb
jbe
hlt
fucom
stos
mov
jp
cli
and
lods
mov
adcb
les
inc
std
call
xor
andb
adc
adc
xchg
and
fstpl
dec
pop
ret
inc
push
arpl
insl
adc
pop
stos
pop
gs
test
and
cwtl
dec
fisubrl
adc
int
daa
push
pusha
andb
inc
sub
add
push
imul
push
mov
shl
dec
jge
jecxz
icebp
dec
sbb
les
sahf
push
rclb
jbe
push
xchg
ret
inc
shlb
or
aam
xchg
and
inc
lahf
imulb
js
push
or
push
and
adc
cmp
hlt
filds
inc
and
leave
lret
mov
test
mov
mov
sub
ds
jnp
mov
sub
mov
sbb
jb
icebp
adc
ja
mov
xorb
ja
mov
in
jno
mov
and
stc
cmpsb
pop
aad
mov
adcl
xchg
adc
in
sub
or
arpl
mov
mov
mov
cmp
and
in
and
push
mov
mov
adcb
cmpsl
mov
xor
cmpsb
cmp
mov
mov
cwtl
pop
loope
lea
jnp
mov
movsb
sbb
fisttpl
adc
add
loop
adc
push
gs
add
ret
mov
or
sub
stos
inc
adc
out
cwtl
push
and
add
sarl
insb
imul
inc
mov
roll
dec
add
push
loopne
push
mov
cmp
repnz
add
push
rol
je
jmp
cmp
ffreep
aaa
and
pop
add
add
sahf
mov
in
orb
jnp
lea
adc
out
add
daa
insl
xlat
outsl
mov
push
dec
jb
mov
lock
push
or
icebp
mov
mov
rolb
sbb
lea
stos
mov
and
movsb
and
mov
mov
adc
xlat
push
add
movsb
call
push
ljmp
and
mov
adc
adc
movb
sbb
in
ret
mov
or
clc
sbb
cmp
pop
mov
add
les
adc
test
cmp
std
xorl
pop
mov
subb
push
adc
clc
mov
sbb
push
mov
iret
pop
fs
stos
or
mov
jbe
dec
neg
sbb
and
inc
nop
loop
xlat
pop
mov
push
cmpb
aad
inc
mov
inc
hlt
push
fdivl
push
push
dec
fs
mov
xor
insb
addl
cmc
addl
push
aam
push
jp
xchg
cmp
mov
arpl
sub
or
pop
rorb
rorb
fadds
lods
sub
add
mul
mov
xor
mov
aaa
mov
lret
fidivrl
push
inc
sbbb
inc
pop
andb
mov
das
pop
jae
stos
aad
js
adc
fdivs
into
mov
rolb
sahf
bound
les
shll
mov
and
mov
push
xor
pop
adc
mov
push
pop
mov
call
push
xchg
push
test
add
scas
cmc
test
adc
rorl
xchg
cmp
mov
xor
inc
sbb
add
mov
loop
aad
xor
fisubs
sub
test
inc
mov
pop
jl
xchg
adc
mov
test
dec
jl
ficoms
adc
scas
fisubs
sbb
ds
xchg
mov
add
movsb
jns
scas
sub
pop
cld
add
loop
sbb
iret
hlt
sub
js
mov
mov
sub
out
sub
bound
push
mov
daa
push
pop
shll
test
mov
lret
inc
movl
pop
outsb
mov
and
dec
idivb
loop
popa
outsb
mov
add
sub
dec
push
push
xor
xchg
add
or
add
mov
and
test
push
and
mov
xlat
adcl
add
inc
lret
xor
pop
loopne
cmp
sub
jp
adc
fdivrl
mov
adc
xchg
xchg
addr16
jb
add
push
jno
cs
inc
mov
insl
push
push
ret
and
mov
into
cmc
fisttps
xlat
int
push
jo
lock
push
sti
and
jae
rclb
lds
cld
scas
mov
sub
popf
loop
pop
mov
xor
push
pushf
pop
add
push
or
icebp
xlat
xchg
or
jmp
mov
or
hlt
leave
rcr
sub
pop
xchg
inc
test
xorb
pop
sub
popf
xchg
adc
add
test
sbb
mov
les
sbb
mov
push
shl
pop
jne
add
push
push
cld
aas
dec
dec
ja
add
leave
lea
mov
sbb
js
shrb
add
lds
test
in
xor
mov
sbbb
or
lock
pusha
sbb
xchg
cs
mov
insb
xor
jo
cmp
jae
and
xchg
int
rcll
mov
pop
nop
mov
mov
ds
mov
cmpsb
stos
bound
push
ds
sti
and
push
loop
cmp
aas
mov
popa
cmp
push
test
push
aam
rolb
add
mov
loop
filds
inc
adc
push
mov
dec
xor
and
imul
pop
mov
xchg
gs
inc
mov
outsl
jb
cmc
jbe
sub
and
test
loop
or
push
mov
stos
addb
stc
sbb
push
mov
and
mov
cld
std
sub
ljmp
mov
les
inc
out
inc
insb
adc
call
sub
cwtl
adc
mov
sub
incl
addb
or
add
jo
sbb
xor
jns
fwait
xchg
and
adc
mov
iret
stos
enter
fisubs
fidivrs
or
mov
fmulp
mov
cmpb
lods
and
inc
imul
mov
xor
sbb
call
cmp
cmpb
push
sarl
out
and
pop
insl
lods
popa
imul
or
xchg
cmp
push
push
test
mov
pop
xlat
mov
pop
std
push
mov
ret
ja
mov
pop
sub
movl
movl
cmpsl
fucomp
mov
cwtl
xchg
addl
push
dec
add
xor
adc
call
add
pop
cmpsl
push
xorb
inc
xchg
insb
sbb
mov
imul
lcall
cmp
mov
sbb
les
push
cmpsb
mov
insb
adc
loopne
pop
mov
add
test
add
sub
push
shrl
adc
push
push
cmp
cmp
lcall
mov
jbe
inc
pop
inc
orl
cltd
insb
rcll
push
push
ret
rol
and
outsb
mov
into
ljmp
cmp
sbb
or
repnz
dec
test
fisttpl
add
xchg
sbb
frstor
pushf
hlt
push
insl
sub
stos
addr16
orl
bound
push
daa
cmp
test
pushf
adc
sub
imul
test
rclb
in
sub
pop
shlb
adc
cmp
fcompl
and
adc
rorl
push
push
xor
or
sub
jecxz
or
lcall
aad
test
cwtl
and
mov
push
rclb
mov
icebp
push
or
mov
mov
addr16
lock
test
stos
jae
pop
lds
vmulss
and
in
rolb
pop
xor
xor
push
cmp
inc
cmc
rorl
fiaddl
adc
pusha
lret
mov
stos
push
andl
push
or
arpl
push
inc
int
xchg
xchg
roll
adc
cmpsb
pop
jge
mov
test
mov
mov
push
inc
mov
cmp
test
sbb
mov
sub
push
or
ds
imul
gs
push
mov
stc
lds
shll
movsb
xorl
jge
xchg
mov
cmp
int3
inc
shr
or
adc
push
daa
adc
lods
add
jne
testl
push
inc
int
shl
add
loop
pop
push
mov
and
xor
pop
jmp
dec
lahf
adc
sbb
cld
inc
lahf
sub
sbb
in
into
mov
rorb
inc
iret
or
sarl
sub
or
sbb
or
shll
cmp
mov
lock
inc
pop
sub
adc
stos
in
push
push
clc
pop
aam
xchg
rolb
lock
or
jnp
xchg
jp
mov
sub
xor
push
mov
cmp
add
add
xor
movsl
incb
outsl
adc
mov
arpl
andb
dec
xlat
in
fimull
js
cmp
add
xchg
mov
or
psubusb
pop
inc
adc
mov
push
cmpl
enter
inc
rolb
push
push
add
cmpb
dec
add
in
mov
sbb
mov
adc
pop
shll
je
loopne
sahf
cmp
aaa
sti
loop
arpl
js
push
sub
mov
test
add
mov
ss
mov
cmp
push
rcrl
adc
sahf
loop
mov
and
pop
fistps
aaa
mov
cmpsb
and
push
shlb
loopne
adc
inc
pop
cld
mov
cs
xor
inc
adc
push
imull
push
mov
call
jl
test
pop
mov
add
adc
sbb
xor
sbb
fdivs
fdivs
inc
lock
lahf
push
jne
mov
sub
cmpsl
push
mov
or
push
push
insb
rolb
or
mov
cmc
and
int
aaa
pop
js
ret
push
jecxz
out
jns
sub
mov
sbbb
loop
adcb
jnp
jg
loope
mov
loop
and
mov
jg
enter
hlt
loopne
mov
cmp
insl
xchg
pop
daa
cli
jo
insb
scas
mov
int
push
fldcw
lock
add
ret
add
and
fistps
clc
pop
dec
push
sbb
mov
mov
test
in
les
mov
stos
xor
test
iret
mov
hlt
mov
mov
cmp
cld
sub
sub
push
data16
faddl
shlb
sbb
fcom
xor
pop
push
cld
mov
mov
cmc
aaa
or
leave
cmpb
push
fmull
pop
mov
popa
add
and
or
and
inc
mov
rorl
loopne
add
xchg
cmp
inc
ret
mov
xchg
push
mov
jg
mov
jmp
out
and
adc
clc
cmpsl
fildll
add
add
mov
cmp
clc
push
jp
inc
incl
dec
ficoml
mov
sbb
push
push
inc
mov
adc
dec
lea
mov
and
rcrb
jae
sahf
adc
xchg
cmp
fldenv
or
mov
push
cmpsl
fisttpll
or
push
inc
add
repnz
outsb
subl
xor
push
bound
int3
mov
inc
rorl
add
xchg
mov
sub
add
lods
or
add
add
mov
loopne
mov
adc
mov
rcr
or
xor
mov
rorl
es
xlat
mov
inc
add
mov
lret
fcoms
dec
bound
test
mov
scas
add
adc
cmp
in
ret
xchg
out
cwtl
sbb
xchg
cmp
rorl
jb
int3
mov
mov
int3
add
fcmovb
fldl
inc
iret
pop
push
in
dec
stos
aam
mov
pop
jp
in
fiaddl
movw
sbb
ds
std
jp
pop
ds
xor
or
sub
push
xlat
xlat
cmpsl
dec
mov
pop
rclb
aad
in
inc
push
inc
stos
repnz
mov
pop
shl
int
add
xor
hlt
mov
sub
int
xor
push
lret
in
mov
outsb
outsl
in
add
movsb
mov
in
inc
push
and
or
or
test
add
cmpsb
addr16
and
push
or
push
mov
mov
or
roll
and
and
scas
sub
je
out
pop
hlt
and
adc
add
nop
mov
decl
mov
mov
sbb
nop
push
jp
pop
mov
cmp
add
in
push
adc
call
cmpsb
push
enter
add
and
mov
add
shr
lret
add
xchg
and
push
mov
or
and
shll
mov
test
and
inc
repnz
xorb
push
push
sub
cmp
cwtl
inc
arpl
adc
jnp
mov
and
into
xor
inc
cmpsl
lods
cmp
add
push
dec
shlb
ret
mov
movb
imul
push
inc
addl
in
sub
adc
dec
ss
test
test
pop
movsb
inc
xor
sub
mov
loopne
cli
cmp
push
push
adc
cmc
shlb
xor
in
or
and
pop
xchg
sub
mov
pop
mov
adc
sbbb
in
lea
fadds
pop
stc
push
xchg
shrl
xor
pop
dec
cmp
int
inc
pop
orb
les
push
daa
aaa
test
inc
mov
lret
lds
xchg
dec
inc
aaa
in
int3
add
in
movsl
or
xchg
add
push
push
inc
xor
scas
sbbb
and
jge
shlb
stc
push
and
icebp
inc
jg
mov
push
test
push
lret
pop
loopne
sub
scas
push
pop
sub
pop
clc
add
inc
sub
and
push
dec
mov
test
imul
add
sbbb
push
fdivs
sub
push
jnp
xor
rclb
or
mov
cmpsl
cs
cwtl
and
inc
lods
fbstp
inc
mov
call
lcall
test
adc
adc
and
mov
inc
xor
jbe
adc
and
iret
sub
lods
xor
add
popa
rclb
shrl
dec
pop
sub
jp
loop
add
incb
jo
and
iret
in
inc
pop
inc
lret
or
sub
vpermd
roll
jno
fidivrl
cmp
subl
lock
dec
call
arpl
bound
inc
push
push
xchg
in
pop
pop
jne
arpl
xor
push
test
xor
xor
cmc
pop
mov
cmp
xchg
sahf
mov
inc
cmp
icebp
les
jge
xorb
cmp
into
cmp
rcll
lahf
cmp
push
test
movsb
sub
pop
roll
in
add
jns
push
aaa
mov
pop
xchg
arpl
pop
jecxz
xor
mov
cli
jl
mov
out
jae
clc
scas
mov
hlt
inc
adc
js
adc
add
aam
add
mov
jns
inc
icebp
les
or
loop
pop
add
and
aad
push
pop
in
cmpsl
lcall
dec
js
sbb
mov
mov
mov
lea
mov
sub
cmp
loopne
xor
mov
and
xchg
les
and
fs
orb
sbb
pop
xchg
outsb
cmc
and
lret
call
sbb
inc
mov
and
push
jno
dec
mov
aam
pop
push
adc
inc
push
out
int
or
and
icebp
adc
cmpsl
cwtl
xchg
aaa
lahf
mov
iret
xor
or
int3
adc
ret
mov
xor
pop
push
adc
ret
inc
fistl
sbb
mov
lcall
cmp
add
mov
pop
sub
jmp
or
orb
push
popf
add
push
call
xchg
out
repz
inc
jo
add
fnstenv
test
xor
cmp
mov
shr
xor
add
orl
cmpl
mov
repnz
cmpsl
popf
sub
mov
mov
inc
and
push
add
mov
jbe
sub
mov
inc
arpl
inc
or
dec
decl
rcrb
mov
xchg
loopne
sbb
dec
jge
fsubl
test
std
dec
sbb
lahf
popf
stc
cmp
push
inc
adcb
jp
cmpsl
mov
sub
push
cwtl
mov
and
insl
adc
add
pop
xchg
mov
lods
ds
sahf
in
rorl
lock
mov
add
sarb
dec
and
daa
push
iret
inc
iret
add
test
sbb
adc
ss
mov
loop
xor
outsl
inc
hlt
adc
mov
gs
sub
jne
clc
push
mov
mov
fs
mov
inc
push
rorb
xchg
test
cwtl
pop
and
add
pop
mov
mov
push
adc
pushf
mov
pop
jp
or
outsl
add
mov
push
dec
add
add
add
in
jle
stc
imul
mov
pop
jecxz
jne
xor
in
sub
jne
add
sbb
xor
push
dec
add
add
xchg
and
in
ja
or
orl
add
jae
sub
mov
mov
mov
aas
sbb
sbb
test
mov
xor
aaa
les
add
add
fisttpll
push
add
or
aad
cmp
js
imul
dec
push
fldl
ret
push
mov
out
lods
mov
mov
or
andb
or
adc
test
or
test
imul
jne
jmp
out
jmp
jnp
add
add
sbb
or
lcall
cmp
jg
bound
xor
jno
cmp
jb
mov
shr
std
test
je
call
push
sub
jmp
push
mov
and
sub
inc
inc
dec
sub
mov
mov
jne
sti
mov
es
add
jne
inc
mov
rorb
jbe
or
dec
or
fsub
xorb
xor
mov
cmc
push
and
push
fcomp
testb
es
and
lds
or
loope
ret
ret
mov
add
add
add
enter
jo
lods
add
test
mov
mov
mov
test
dec
filds
stos
dec
inc
push
jl
and
pusha
pop
adc
add
push
fdivs
xchg
xchg
add
lcall
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
decl
inc
gs
insb
popa
jae
dec
bound
arpl
imul
insl
scas
insb
add
xor
ljmp
xorb
inc
inc
pop
inc
incl
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
lcall
pop
popa
bound
gs
imul
jo
jb
jne
ja
fdivr
js
jp
xor
xor
sub
inc
add
pop
xlat
je
push
ud2
pop
lods
pop
sbb
jne
mov
pop
imul
aas
ud1
outsl
jb
pop
mov
fidivrl
mov
or
jb
xchg
pop
es
jmp
pop
lods
jb
push
adc
inc
js
outsb
mov
mov
in
stc
jg,pt
outsb
cmp
add
sbb
int
or
push
and
mov
fldt
mov
andb
mov
or
jbe
adc
jne
jmp
push
inc
sbb
or
sarl
in
inc
clflush
adc
xchg
rcll
push
and
and
adc
mov
ljmp
adc
sbb
push
jnp
jnp
push
je
insb
sbb
add
jne
or
mov
adc
push
inc
imul
scas
fisttpl
sbb
daa
dec
cmp
pop
mov
mov
mov
or
stc
push
pusha
dec
sbb
mov
outsl
outsb
jae
insb
gs
jbe
insl
fidivrl
cs
cmp
je
jmp
cmp
nop
in
push
sub
test
dec
or
dec
fsts
in
cmp
pop
jmp
hlt
or
or
test
out
mov
or
jne
adc
mov
mov
testl
in
mov
xchg
repz
add
cmp
lea
clts
xor
es
xor
inc
inc
xor
sub
pushl
arpl
sub
xor
xor
inc
inc
out
dec
fsubrs
lock
pop
inc
icebp
push
sbb
mov
xor
call
xchg
dec
mov
lahf
mov
lock
cmpsl
sbb
jle
sbb
jl
test
insl
fisubs
inc
push
mov
test
sub
and
je
roll
orl
imul
xor
sbb
or
cld
cmp
adc
mov
sbb
cmp
inc
pop
es
push
xlat
inc
in
test
out
and
or
xchg
mov
scas
cli
lods
or
mov
push
inc
push
pop
ss
daa
adc
mov
gs
sbb
inc
cld
scas
iret
ret
cmp
cmp
jmp
imul
adc
test
or
scas
cmc
dec
test
fstps
jbe
adc
pop
push
pop
xchg
add
push
add
add
adc
outsb
or
fcmovb
pop
ret
loopne
pop
push
pop
dec
hlt
je
imulb
ja
fs
pop
into
sub
adc
or
dec
add
xchg
and
sub
pop
shrl
lcall
fldl
leave
mov
xor
enter
addb
test
dec
jns
daa
jns
dec
sbb
push
inc
pop
cli
aaa
mov
outsl
cmp
pop
push
imul
dec
outsl
test
ret
outsb
je
jmp
outsb
push
pop
gs
push
negb
sbb
mov
sbb
dec
out
cmc
dec
and
outsb
imul
cs
sbb
push
in
jle
cmpsl
repz
sub
and
xor
sbb
incl
dec
outsl
arpl
xor
mov
add
adc
bound
xor
inc
xor
loope
add
lock
nop
and
andb
push
loope
ss
pop
jmp
int
loop
mov
fdivl
xor
sahf
lods
jg
jo
ja
add
shll
jne
xlat
in
xchg
fmuls
sub
pop
xchg
jo
rcrb
sbb
ja
cmp
ja
enter
jbe
mov
jmp
jnp
cmp
xor
inc
sub
decb
sub
xor
pop
inc
xor
inc
inc
inc
cmp
add
xor
inc
inc
js
jne
popa
and
insl
push
push
addr16
dec
pop
popa
or
and
sbb
jg
addr16
es
sbb
dec
or
sbb
fndisi(8087
add
je
mov
inc
subl
and
sbb
mov
add
jns
mov
mov
sub
xchg
sub
adc
sub
mull
add
das
fidivrl
xor
cmpb
xor
pop
xor
idivb
dec
cmp
xor
dec
mov
nop
sbb
inc
testl
gs
adc
cmpsb
add
test
ja
jl
popa
inc
xor
pop
dec
outsb
xlat
mov
sub
sbb
sahf
cmp
inc
add
xor
push
push
jbe
jmp
jle
icebp
jnp
pop
cli
cmp
data16
xor
xor
push
out
scas
and
scas
xor
push
push
mov
push
daa
dec
das
mov
outsb
xlat
jne
push
fs
sub
mov
pop
inc
xchg
rcll
mov
or
pusha
je
mov
sahf
clc
outsl
adc
pop
push
arpl
jo
push
jnp
call
gs
jae
popaw
sbb
inc
mov
fs
inc
push
js
movsl
mov
frstor
das
data16
jne
push
xlat
xor
push
xchg
mov
pop
xlat
jne
jo
mov
jb
movsl
lea
cs
rorl
mov
insb
inc
push
loop
in
sub
push
cmp
push
xor
fdivl
loop
mov
fs
std
xor
mov
je
xchg
mov
je
pop
mov
sbb
aaa
adc
and
sbb
fs
pop
nop
cmp
pop
nop
mov
fldl
loopne
push
pop
mov
and
push
outsb
add
push
inc
and
outsb
outsb
and
and
add
inc
sbb
orl
outsl
or
xchg
or
jl,pn
and
xor
iret
mov
fistpll
repnz
out
jg
cwtl
inc
stos
out
insl
push
out
jae
in
mov
pop
push
cld
out
jge
mov
out
jl
fstps
push
movsl
out
jno
subb
outsl
cmp
loope
loop
jnp
mov
mov
and
add
sbb
add
nop
mov
testb
add
hlt
pusha
pop
cmp
adc
add
add
pop
sahf
in
loopne
push
pusha
push
add
or
or
pop
or
pop
xor
jo
shlb
jnp
add
out
loopne
xor
lret
sub
inc
daa
inc
lret
in
xor
shlb
inc
daa
adc
enter
add
aas
xorl
pop
and
add
xchg
pop
andl
call
bound
es
adc
sti
in
cmc
sbb
es
sbb
xor
adc
neg
push
sub
jo
pusha
sub
mov
lock
test
aam
jo
adc
mov
sub
xchg
imul
out
decl
fisubrl
les
push
push
jae
jg
mov
mov
test
ljmp
push
roll
or
and
clc
sub
jno
push
sti
fucomp
pop
add
add
pop
pop
pop
and
cli
movsl
jg
nop
jmp
fidivrl
or
dec
push
incl
inc
cwtl
mov
fucomip
push
xor
lds
aad
icebp
aas
inc
scas
inc
jo
fstp
mov
ljmp
pop
adc
cmp
lret
outsl
daa
mov
and
notb
jbe
push
sbb
push
jo
mov
sub
ljmp
pushl
call
cmp
and
push
pop
sbb
adc
sub
sbb
adc
popa
out
jnp
cmp
add
or
xchg
pop
pop
decl
and
inc
xchg
jge
pop
sub
call
test
ficomps
stos
in
shlb
leave
add
nop
jg
and
lods
fisttps
in
push
jno
fdivs
xchg
pop
fcoms
mov
lret
stos
mov
std
jmp
ret
mov
xchg
jecxz
insb
xchg
jo
popl
fldcw
pop
jo
push
clc
mov
pop
jle
leave
ja
push
pop
mov
call
clc
add
push
insl
sbb
int
ds
push
inc
popa
or
ljmp
dec
fisubl
out
test
stos
pop
inc
inc
aas
leave
push
mov
cwtl
mov
mov
mov
aas
sub
decb
push
and
pushl
mov
sbb
mov
bound
mov
adc
xchg
inc
pop
mov
jmp
adc
dec
pop
add
ljmp
and
inc
mov
inc
inc
push
mov
cltd
or
pop
je
mov
aas
push
test
add
adc
sub
mov
test
mov
and
mov
xor
movsb
mov
imul
pop
pop
jmp
or
and
mov
or
jle
jmp
lds
mov
mov
in
icebp
jmp
add
ret
movb
pop
ret
push
push
sub
mov
mov
mov
scas
adc
and
cmp
and
jne
clc
lahf
mov
out
or
adc
jecxz
or
fists
mov
cs
sbb
call
mov
adc
icebp
jne
test
sbb
dec
push
jmp
incb
ja
fldl
push
daa
and
add
je
pop
popa
test
adc
and
or
decl
jns
jle
sub
dec
fsubs
mov
out
or
or
pop
adc
push
mov
decl
repnz
nop
add
push
jae
or
dec
xor
mov
add
cld
jb
cltd
pop
insl
fidivl
mov
incl
adc
adc
adc
or
es
je
leave
bound
inc
or
adc
hlt
fldenv
das
add
shlb
inc
mov
xlat
js
ficompl
adc
pop
jecxz
fmuls
lcall
ljmp
mov
push
pop
pop
adc
andl
fdivl
and
movl
jg
fucomi
ret
rclb
je
clc
and
adc
push
ret
insl
idiv
pop
dec
into
test
jne
sahf
call
jl
addl
or
incl
adc
mov
push
or
ret
mov
scas
jmp
incl
add
xchg
pusha
fdiv
lock
jle
jne
sbb
call
sbb
bound
jbe
inc
fwait
stc
add
mov
mov
out
pusha
or
clc
fsubl
shlb
das
adc
movsl
mov
shll
cmc
decl
mov
mov
mov
fsubs
insl
mov
and
dec
or
push
sbb
or
jne
jo
jne
inc
ljmp
and
fidivrs
or
or
sbb
adc
into
sub
and
sub
pop
cltd
notb
jmp
bound
fdivl
push
add
lock
mov
or
cwtl
fwait
sub
ljmp
jl
inc
jnp
stos
stos
cld
les
ret
sub
adc
jge
mov
outsl
add
subb
loope
adc
pop
outsb
shlb
decl
adc
sbb
pusha
lcall
sbb
jno
jo
jb
jle
pop
pop
jbe
mov
adc
xorb
jbe
insl
push
push
cli
jg
jo
xor
adc
mov
dec
xor
adc
cmp
and
push
insb
lret
or
jl
dec
call
or
dec
sbb
xchg
or
adc
inc
or
or
mov
xchg
and
sbb
adc
decl
jmp
cmp
push
jl
aaa
fbstp
xchg
idiv
mov
pop
cmp
sbb
jg
sti
jg
and
and
js
outsb
mov
jg
je
push
xor
push
push
stos
incl
mov
fwait
jecxz
and
jne
mov
ret
mov
mov
fisttpl
in
incl
inc
sbb
ljmp
xchg
push
ljmp
xchg
out
roll
ljmp
jl
push
adc
sub
jne
mov
add
pop
fnsave
add
push
xor
pop
out
jno
mov
call
mov
inc
loopne
mov
insb
mov
adc
adc
push
lret
sbb
nop/reserved
fbstp
ja
add
cmp
sti
ja
mov
insb
add
je
jl
pop
cli
aaa
push
call
sbb
loop
adc
call
ds
or
sub
sahf
test
in
jmp
cli
jg
call
ret
xor
repz
cmp
popa
add
push
rorb
xorb
js
outsb
dec
push
pop
andl
push
loope
je
mov
outsb
jle
je
lods
mov
pop
push
outsb
mov
jns
js
notb
out
xchg
in
or
adc
add
std
fistpl
and
cmp
cmp
clc
jne
sbb
jg
cmpl
xorps
imul
fdivl
push
out
andb
or
mov
pusha
movsl
mov
push
cmp
cmp
cmp
jne
mov
xchg
add
inc
pop
mov
pop
cli
jg
addr16
rcrb
sbb
je
adc
mov
cld
xor
lcall
adc
pop
adc
loope
ret
flds
ja
and
in
mov
popf
pop
loope
dec
loop
outsl
or
jmp
std
jne
cmp
sbb
mov
cli
xchg
mov
outsl
lods
xor
movsl
js
xor
xchg
out
fdivr
aaa
push
les
je
repnz
mov
ljmp
mov
lds
jecxz
cmp
iret
call
daa
mov
enter
lds
or
fisubrs
adc
jmp
push
push
ljmp
push
add
outsl
adc
cmp
jmp
pop
bound
pop
xor
fistps
loopne
fldt
mov
mov
fcoml
sub
cmp
fcom
scas
rorb
or
adc
imul
mov
mov
and
fimull
jnp
push
or
jle
xchg
rcrl
xor
clc
jns
mov
les
dec
lea
mov
mov
and
add
pop
call
jne
add
sub
sar
pushl
ja
xchg
fisttpll
jmp
xlat
rolb
pop
add
jg
pushl
test
add
sbb
rorb
add
ror
push
in
int3
sub
lea
inc
push
ret
cltd
mov
or
cmp
mov
mov
cld
pop
inc
mov
pop
mov
and
push
cmpsl
cld
sub
movsl
pushl
pop
loopne
lcall
subl
fcomps
push
fdivs
mov
jmp
test
sbb
adc
into
push
push
mov
roll
sahf
or
mov
xchg
or
xor
aad
decl
fnstcw
mov
rcr
ljmp
jnp
inc
shlb
negb
or
add
insl
lea
arpl
cld
jecxz
mov
pushl
add
pop
stc
movsl
or
jle
sub
ss
push
jl
das
lock
pop
pop
fcmovnbe
enter
adc
je
imul
in
push
mov
je
mul
movsl
lods
roll
and
push
jne
lea
packsswb
outsb
aad
xchg
movsb
scas
insl
scas
in
in
and
sub
aaa
sbb
or
fs
sbb
pushl
lock
dec
mov
lods
mov
pop
jmp
cli
jg
xchg
leave
xchg
arpl
push
cmc
cli
jecxz
roll
push
push
scas
xchg
jecxz,pt
std
pushl
mov
les
cltd
sbb
cli
cltd
aaa
jmp
xor
lret
xor
sub
and
pushl
xchg
mov
les
add
xchg
inc
dec
push
icebp
jg
jbe
data16
mov
lock
cld
decl
sub
xchg
in
push
fdiv
fstpt
shrl
or
decl
inc
movsl
div
cmp
fistpl
call
hlt
js
mov
jne
inc
sub
fnsave
scas
jg
test
xchg
xchg
clc
inc
scas
mov
xchg
adc
mov
lea
push
loope
cmp
and
push
cmp
cmp
aaa
stos
sub
dec
aas
pop
mov
sarb
call
jg
jns
push
daa
or
inc
sar
arpl
sbb
outsb
sbb
push
lcall
mov
loop
sub
mov
mov
or
cld
jg
xchg
xor
jb
mov
fsubl
xlat
push
and
mov
or
pop
ss
icebp
mov
push
or
xchg
pop
cmp
insb
dec
js
or
fldl
andl
push
popa
cld
test
inc
insl
or
rorl
mov
subl
xchg
ljmp
aad
sbb
cmp
ss
movsb
sbb
jmp
call
jmp
fsubs
push
sub
out
mov
fildl
inc
fstpt
pop
aam
cmp
std
xchg
sbb
mov
mov
shl
decl
sbb
xchg
mov
adc
adc
jmp
insb
addr16
or
stos
ss
stos
outsl
mov
icebp
and
mov
icebp
inc
aas
push
imul
push
rcl
add
outsl
jo
das
data16
pop
push
outsl
pop
mov
je
push
faddp
pusha
xor
pushl
mov
popa
jnp
fisttpll
daa
add
inc
and
jne
sbb
cli
mov
sbb
mov
xchg
lcall
aaa
int3
out
dec
adc
pop
clc
pop
adc
push
pop
mov
gs
jg
xorb
inc
daa
iret
mov
fwait
inc
data16
pusha
decl
std
je
sub
pushf
push
xor
sbb
pop
stc
lods
int
and
sbb
sbb
add
or
dec
mov
lea
push
lret
xor
lcall
jmp
test
jg
jle
jno
inc
sbb
push
adc
pusha
nop
cmp
outsl
lcall
aam
movb
lods
pop
inc
mov
adc
sbb
cli
and
lahf
pop
fsts
jmp
sbb
jbe
cmp
adc
pop
aas
xchg
lcall
adc
mov
test
mov
adc
fdivrs
sub
fisttpll
mov
scas
std
and
decl
mov
call
push
data16
xchg
xor
lcall
jne
dec
cs
ficoml
adc
mov
or
out
adc
call
add
sbb
add
outsb
shr
mov
js
imul
fld
ret
incl
lret
xor
enter
cmp
push
popa
or
inc
aad
or
fbstp
inc
arpl
mov
sbb
ja
test
sbb
jo
xchg
rorl
jb
repz
jmp
loop
lahf
mov
movsl
loopne
add
mov
pop
test
rcrb
mov
incl
hlt
pop
idivl
adc
add
or
and
mov
mov
push
mov
add
rcrb
sub
xchg
mov
dec
add
and
xor
cmpsb
nop
or
inc
and
mov
xor
xlat
push
lahf
add
in
je
or
aaa
mov
stc
in
shll
call
call
ljmp
hlt
hlt
clc
clc
ret
dec
cld
cld
cmc
lea
mov
clc
or
out
sbb
incl
ror
fld
fidivrs
xchg
mov
stc
nop
adc
mov
int3
or
lea
jl
out
decl
std
cmp
jecxz
ja
inc
xchg
mov
fldenv
jg
stc
xlat
popf
daa
daa
sub
dec
sub
or
add
insl
add
outsl
mov
dec
jg
dec
pop
dec
hlt
xchg
fucomip
adc
out
add
mov
jne
pushl
stos
fdivrs
sub
jmp
test
es
clc
in
pop
jg
cli
push
cmpsb
imul
aaa
xchg
lea
ffree
sbb
rcrb
decl
fisttpll
or
mov
ret
pop
add
and
out
mov
mov
cld
lcall
sub
dec
or
pop
or
jge
pop
or
push
subl
pop
or
mov
add
sub
and
xchg
add
cmp
je
cmp
pop
jne
dec
jg
std
adc
sub
mov
cmp
cmp
jne
inc
cmp
loop
call
add
push
dec
adc
test
int3
xor
mov
movsl
sub
stos
push
testl
cmc
inc
outsb
push
mov
jge
lea
popa
call
mov
mov
stos
add
jg,pt
cmp
and
or
rorl
mov
jle
mov
push
clc
inc
mov
shl
cmp
pop
dec
mov
mov
mov
jg
cmp
inc
cmpb
cmpsl
push
pop
or
xchg
or
or
mov
shll
jl
in
mov
inc
test
jne
outsl
mov
mov
add
adc
ret
ja
in
roll
call
xorl
in
mov
mov
xchg
insb
mov
clc
jg
repnz
push
sub
ret
or
std
pop
enter
jmp
loop
pop
push
movsb
and
cmp
nop
xchg
rcll
xor
and
push
jns
lret
fistl
cli
call
jmp
std
in
notb
pop
sbb
mov
ljmp
xchg
test
fcom
pmaxsw
adc
movsb
add
outsb
frstor
imul
imul
xor
test
test
test
adc
insl
pushf
fstl
or
jae
lahf
xor
adc
lea
and
pop
adc
sarb
cli
hlt
inc
mov
push
jecxz
push
mov
jle
mov
mov
ret
arpl
insl
xchg
loopne
jg
jmp
aas
jo
mov
xchg
sti
mov
xor
jg
mov
leave
call
addr16
push
cmp
xor
int
pushf
and
sub
push
mov
lcall
je
pop
in
add
inc
or
movsl
inc
jae
fwait
adc
cwtl
push
mov
add
jmp
xor
mov
subb
sbb
mov
xchg
in
lock
dec
lcall
clc
fisubl
in
mov
or
pop
push
xor
sbb
rcr
pop
xchg
mov
push
movl
mov
outsb
mov
xor
js
add
fistpl
jo
sub
gs
add
call
cmpsl
ss
cmp
cli
xchg
in
mov
adc
incl
test
int3
add
fmuls
aam
int
xorl
lret
xchg
test
jge
and
sub
push
aam
incl
das
fmul
int3
add
lock
inc
xchg
cld
js
or
mov
sarb
xlat
mov
adc
push
test
add
ljmp
xchg
push
jne
push
pop
mov
jo
xchg
imul
arpl
dec
je
movsl
in
jmp
xchg
daa
lock
inc
mov
and
mov
mov
call
cmp
add
jg
lock
andl
mov
das
js
scas
dec
movsl
xor
js
or
jge
cltd
add
xor
add
mov
lock
aam
pop
jae
ja
out
push
push
cmp
ljmp
lcall
lods
fldl
xchg
xchg
push
cld
mov
push
aas
loop
add
adc
test
ret
ds
cld
imul
das
lods
popa
and
sbb
je
fucomip
shrb
cmp
ljmp
cmc
jg
xor
mov
mov
pop
rcr
dec
pop
jl
add
adc
sub
cmp
cli
out
mov
and
call
ret
popl
rorb
aas
cmpl
push
lea
fwait
mov
adc
outsb
push
mov
out
dec
add
call
mov
or
pop
mov
es
jle
push
insl
movsl
pop
add
add
aaa
clc
call
sbb
sti
inc
jmp
sub
bound
xlat
cmp
pop
mov
add
or
sbb
push
add
and
loopne
pop
cmp
jne
mov
ljmp
shlb
cmp
call
mov
mov
ret
shlb
jg
push
cmpsl
mov
dec
cltd
popa
je
test
push
adc
ljmp
icebp
aaa
cli
test
jne
xor
mov
lock
push
push
mov
cmp
jne
xchg
cmp
jne
push
loop
or
pop
out
and
pop
sbb
pop
pop
mov
sbb
mov
call
std
fildl
xor
imul
rcll
jg
push
dec
mov
js
sub
and
outsl
hlt
add
into
shlb
xlat
push
lods
push
cmp
lret
loop
inc
call
lcall
in
pop
jg
add
jno
outsb
sub
je
inc
in
xor
pop
and
xchg
xor
and
fnstsw
add
pushl
adcl
icebp
cmc
cld
push
in
jge
mov
xor
jg
orb
in
leave
add
fnstsw
and
adc
enter
stos
call
loopne
in
arpl
lea
aam
fsubr
lea
push
inc
pushl
inc
jge
frstor
push
loope
aaa
push
imul
inc
mov
aam
mov
in
mov
jp
push
inc
ret
imul
outsl
cmp
push
xor
mov
clc
mov
adc
mov
je
pop
mov
insb
in
adc
push
inc
cmp
lcall
adcb
or
jo
fldcw
jp
cmp
pop
push
mov
push
das
mov
imul
jne
cmp
jle
pop
or
fbstp
jg
cmp
fs
mov
push
or
and
lods
in
inc
or
jmp
mov
or
cmpl
sub
repz
pusha
mov
rclb
arpl
or
fistpl
pop
sub
decl
push
sub
xor
add
or
inc
jns
xor
sbb
jp
hlt
aaa
clc
mov
and
rolb
shrb
fidivrs
sbb
xchg
hlt
add
pop
mov
filds
jae
inc
lods
push
es
je
in
push
std
jg
sub
mov
and
inc
test
je
inc
xchg
aam
shll
cltd
clc
jae
jg
out
insb
imul
cli
inc
mov
js
mov
push
or
mov
cmc
test
incl
adc
jne
lea
popa
add
sub
or
ljmp
jg
or
loopne
les
mov
sarl
pop
pusha
add
push
inc
and
je
fsubp
or
movl
ljmp
pop
cmp
lds
fwait
xor
shl
in
fistpll
daa
dec
out
and
add
xor
mov
mov
je
mov
jne
jl
jne
movsb
ror
les
sbb
test
inc
pop
mov
sub
and
pop
fisubl
lcall
cmp
rep
stos
stc
jbe
mov
pop
mov
test
pop
mov
addr16
imul
push
pushl
mov
jl
jle
jmp
jecxz
dec
lea
push
enter
mov
lea
andl
dec
and
jg
cmp
ja
mov
cld
mov
inc
inc
adc
imulb
jae
fildl
mov
or
jnp
push
cmp
loop
xchg
mov
decl
and
lea
inc
movsl
movsl
pop
mov
ljmp
jns
cmp
sub
mov
sahf
adc
cmp
jmp
push
jmp
sbb
or
xor
stos
add
cmp
arpl
aas
cld
pushl
dec
stos
jne
ljmp
adcl
mov
inc
inc
sub
inc
sahf
pusha
sbb
or
and
std
decl
mov
mov
jnp
sbb
xor
call
or
sbb
add
testb
ret
popa
in
add
cmp
decl
iret
or
push
jno
xchg
test
pop
add
in
push
ds
jg
pushl
push
push
fcoml
push
aas
sarb
sub
add
mov
jb
mov
mov
or
push
repz
ja
sbb
mov
push
inc
jecxz
sub
add
pop
lcall
mov
mov
shlb
test
pop
pop
lcall
mov
into
push
inc
jp
push
out
mov
xchg
dec
inc
fsubs
std
sbb
push
push
push
jne
clc
call
adc
cld
sbb
popf
pop
jge
or
or
fistl
data16
fldcw
adc
sub
fildl
mov
je
and
jmp
andb
shlb
xor
mov
inc
jb
add
fcmovnu
aas
lods
mov
enter
outsl
lds
xor
leave
lret
jb
jp
push
and
and
jmp
dec
loop
arpl
dec
mov
sub
imul
pop
cld
or
jp
xor
jno
icebp
mov
sbb
mov
jne
cmp
mov
xchg
sub
je
pop
stos
xor
fdivl
cmpsb
movsl
pusha
push
xchg
clc
call
cmp
insb
mov
adc
pop
xlat
push
int
or
mov
pop
pop
js
xor
cmp
adc
cmc
pop
insl
sbb
jbe,pt
out
incl
push
mov
fcomps
cmpl
sarb
incl
pop
push
inc
sub
jmp
jmp
jp
aaa
pop
mov
inc
pop
adc
and
push
push
adc
cwtl
inc
dec
hlt
nop
sbb
clc
fidivrs
add
inc
push
mov
outsl
hlt
pop
xchg
mov
pusha
lods
inc
sbb
mov
in
shll
jmp
cmc
fldt
lock
imul
cmc
das
dec
jge
jle
fildll
pop
dec
mov
incb
jb
cs
push
cmc
dec
jmp
jg
call
inc
roll
xlat
push
mov
cmp
jae
loope
push
pop
adcb
test
pushl
or
lret
ret
push
jl
insl
lods
filds
pop
mov
ficoms
adc
incl
scas
jmp
jl
rcr
pop
jnp
adc
add
popa
and
sahf
jmp
push
mov
dec
in
sbb
rorb
fadds
mov
lcall
inc
or
js
ss
int
aad
push
fidivl
dec
adc
fs
adc
push
decl
and
test
in
xor
outsl
mov
lods
lcall
sub
faddp
mov
fisttps
push
fs
inc
imul
and
mov
add
sbbl
aad
cwtl
and
aaa
and
mov
push
xor
lcall
lods
pushl
clc
lea
or
call
dec
xchg
repz
lcall
adc
pushf
call
ret
push
push
sahf
push
inc
inc
pop
pop
popf
jge
adc
insb
cmp
xorl
push
jl
add
aaa
mov
jnp
and
push
stos
ja
adc
pop
xchg
pushl
cli
out
push
jne
cmp
adc
into
or
dec
push
inc
test
inc
ja
push
ja
test
sbb
jg
outsl
mov
pop
sub
ret
incl
scas
addl
xor
test
adcb
add
lcall
je
mov
and
andb
test
mov
jle
push
outsl
adcl
xchg
dec
fstpl
dec
dec
push
and
bound
and
jmp
std
or
adcl
jae
loopne
js
push
mov
dec
sbb
dec
or
das
fstl
push
js
push
out
call
push
inc
mov
shr
pop
outsb
pop
nop
insl
sbb
imul
mov
push
fsubrs
cwtl
xor
dec
jg
mov
mov
imul
mov
jg
jg
fadd
push
insb
dec
sub
push
cmp
cmp
jne
or
std
push
std
adc
cmpl
pop
push
lods
push
cmp
mov
incl
inc
jo
pop
rcr
rcll
roll
aam
jmp
cs
stc
add
or
mov
decl
shrl
insb
into
and
enter
fstpl
jno
push
out
sbb
pop
ficoml
xchg
xchg
cltd
adc
decl
sbb
push
xchg
mov
cmp
cmp
jg
mov
or
inc
add
std
pop
jle
mov
subb
cs
mov
pop
clc
adc
jle
jbe
aaa
push
dec
shlb
xchg
jne
call
jecxz
test
loope
hlt
addl
pop
js
hlt
ret
and
inc
jmp
jp
jns
mov
xor
xlat
fdivl
outsb
sub
pop
adc
das
inc
sub
jg
xor
call
in
mov
mov
cmp
lock
aad
ljmp
pop
insl
xorl
imul
xchg
addr16
xchg
xor
fs
push
jmp
call
cmp
jl
cmp
sub
pop
decl
lret
test
outsb
cmpsb
dec
hlt
fs
mov
insl
es
cmp
sti
pop
pop
pop
push
outsb
jmp
adc
test
aam
lock
mov
testb
cmpb
push
sbb
bound
cmpsb
add
and
pop
stos
ja
lcall
push
or
and
xlat
jbe
testb
sbb
pop
and
sub
gs
or
pop
or
nop
jb
lock
mov
scas
adc
pop
jmp
push
jo
push
mov
scas
je
dec
or
cmp
pop
jecxz
rcl
mov
test
mov
adc
dec
mov
push
dec
sbb
into
mov
dec
rcll
test
fnsave
pop
jmp
mov
shll
xchg
clc
call
popa
imul
mov
sbb
or
movsb
or
das
cmc
das
aaa
dec
sub
xor
mov
lret
add
mov
dec
pop
outsb
push
push
mov
inc
in
sub
cmp
jg
jmp
xchg
push
int
push
dec
cmp
cmpsb
cmpl
mov
xchg
loopne
adc
addb
cmp
insl
nop
mov
insl
add
add
rorb
dec
jo
jl
decl
icebp
adc
lahf
fsubp
xchg
ret
sti
incl
dec
pop
add
aam
insb
adc
jns,pt
insl
gs
mov
icebp
lcall
enter
jg
fisttpl
xchg
mov
mov
dec
aas
sub
into
movsl
call
test
jg
mov
xorl
add
dec
pop
dec
mov
mov
fcmovnb
aaa
sbb
sbb
add
jle
pushl
stos
inc
jb
pop
in
popa
mov
testl
imul
or
jl
sbb
mov
adc
pop
dec
call
pop
popf
std
lcall
add
jmp
lock
pop
sub
cmpsb
ret
jmp
sub
test
dec
loope
push
dec
jae
shlb
jbe
es
pushl
cli
out
pop
loopne
add
mov
idivb
dec
jmp
sbb
add
cmp
jge
call
cmp
mov
jle
test
pop
clc
decl
add
cmp
sahf
dec
fdivs
dec
stc
dec
and
clc
call
fs
repz
pop
sbbl
imul
jmp
decl
ret
fists
add
xchg
call
ljmp
fcomps
lcall
clc
ljmp
sub
shll
adc
pusha
cwtl
xchg
mov
cli
incl
cli
jl
pop
loopne
fsubrs
xor
pop
clc
dec
pop
pop
rcrl
lods
shrl
cwtl
mov
inc
insl
mov
and
ljmp
pop
shlb
mov
jnp
cmp
std
sbb
add
push
xchg
cli
jg
pop
rcr
sub
js
lret
je
stos
aad
cmp
mov
push
add
test
icebp
lcall
daa
lods
call
sbb
ss
pop
xor
insl
dec
cld
lcall
push
pop
pop
add
mov
fcoml
jecxz
in
or
cmp
sub
push
adc
mov
lods
shr
shlb
jnp
fildll
hlt
xchg
sbb
inc
jae
fldcw
leave
adc
popa
dec
jo
fucomip
movsl
ss
int3
ret
xchg
cmp
jne
ljmp
xchg
outsb
je
cs
push
and
mov
rorl
xor
inc
inc
add
das
icebp
push
cmp
sbbl
lock
pop
inc
enter
cmp
cmp
out
test
pusha
mov
xorl
bound
int3
jnp
and
or
test
add
pop
cli
push
inc
mov
push
sbb
jg
jbe
int3
push
inc
call
xor
leave
xor
xchg
or
inc
sbb
jb
pop
mov
inc
mov
pop
and
stos
or
lret
testl
call
decl
cmp
mov
ja
push
rolb
push
lea
push
or
pop
inc
or
xchg
push
fdivl
dec
jnp
push
cld
test
pop
inc
scas
inc
push
adc
jae
ljmp
decb
xor
cmp
movsl
dec
je
inc
jmp
pop
push
mov
aas
pop
push
inc
adcl
or
jg
sub
incl
xlat
jge
idivl
fadds
inc
jo
incl
es
add
mov
mov
xor
add
cmp
push
subb
sub
or
movsb
xchg
xchg
ljmp
dec
insb
jo
loopne
push
and
mov
mov
cmp
clc
jmp
pushf
jne
xchg
and
add
push
xchg
ljmp
out
and
and
pop
xchg
repz
std
fistps
sbb
adc
xlat
dec
and
pop
mov
mov
notl
ljmp
cld
ret
subl
cmpsb
or
jbe
ljmp
pushl
jo
data16
movb
ret
nop
push
push
scas
dec
xchg
mov
incl
fistps
jl
and
push
xchg
mov
ljmp
jg
or
icebp
movb
mov
stos
std
add
mov
push
es
js
data16
adc
icebp
jge
lods
dec
pop
sub
ficoml
out
call
xchg
ja
fstl
jl
cmp
addr16
mov
pop
and
arpl
std
out
outsb
and
andb
das
jo
inc
mov
push
mov
add
jae
dec
jl
outsl
mov
jle
fldl2e
pushl
aad
push
dec
cmpb
cmp
jg
push
stos
mov
inc
add
sar
jl
mov
shll
je
mov
cmp
mov
mov
sub
test
fisttpll
mull
test
iret
and
test
fildl
xorl
das
shrb
scas
push
cmp
dec
mov
shl
shl
cmp
pop
aam
incl
pop
lock
or
test
pop
mov
paddusw
ljmp
add
add
adc
pushl
int3
jb
push
insl
test
mov
jnp
aaa
push
js
rcrl
jae
adc
and
push
rolb
mov
lcall
int
mov
and
inc
sbbl
mov
aaa
incb
xorb
das
adc
jns
mov
cmp
push
sbb
sub
lea
add
stc
mov
incl
aas
xor
inc
or
xor
je
push
push
xor
pop
outsl
lock
dec
aas
dec
fstpt
jbe
push
xor
ret
std
cs
mov
aam
ljmp
popf
sbb
lcall
jmp
jnp
js
sbb
xchg
push
shl
mov
lret
outsl
cld
mov
int3
xchg
xchg
sub
xor
decb
dec
stc
push
push
lahf
cmp
fmuls
aam
sbb
mov
int
ss
das
daa
and
push
adc
cld
mov
pop
jl
or
std
decl
flds
mov
push
adc
ss
ljmp
mov
insb
mov
out
jne
mov
mov
cli
jns
jne
inc
mov
testb
pushl
add
roll
jmp
mov
jmp
call
decl
lret
inc
outsb
outsl
inc
push
jmp
push
add
add
ljmp
lock
andl
fsubl
je
or
or
test
cmp
jg
push
jo
dec
data16
jmp
dec
lods
push
add
loopne
xor
daa
add
aaa
lcall
pop
enter
xor
pushf
out
or
push
hlt
mov
incl
notl
mov
or
and
ljmp
repnz
or
rcrb
divb
mov
clc
xchg
mov
cli
imul
push
inc
mov
mov
jne
andb
xor
push
mov
fistl
mov
adc
loop
or
push
pushl
cmovo
pusha
jae
add
jo
mov
xor
push
jg
mov
push
sti
dec
das
call
jmp
lods
push
push
fadds
fisubrl
rcll
jne
aad
dec
rcrb
mov
jnp
lcall
push
ds
aam
ljmp
addb
inc
imul
mov
aas
jns
decl
fsts
inc
inc
cmp
push
fcmovb
pop
hlt
repnz
inc
cwtl
sar
mov
incl
adc
mov
dec
push
nop
call
sbb
lods
sbb
mov
mov
and
jmp
lock
pop
js
push
sahf
scas
jge
sbb
icebp
call
push
bound
push
andl
or
imul
mov
fsubrs
into
test
notb
call
sbb
lcall
or
rclb
mov
lods
add
dec
std
call
fs
leave
and
sub
sbb
stos
pop
jl
jae
add
jl
outsb
movsb
jle
dec
sbb
lahf
inc
dec
in
lea
inc
add
test
lcall
xchg
orb
push
jle
add
aad
xchg
dec
pusha
lret
fidivrl
adc
sbb
mov
xchg
sub
cld
xchg
cmpb
add
pop
cmp
pop
cld
decl
add
lods
movsb
aam
stos
mov
ret
mov
inc
inc
daa
loope
inc
icebp
lcall
std
incl
icebp
test
xchg
sbb
cltd
test
sub
sbb
aaa
clc
decl
leave
inc
shl
or
icebp
and
xor
cmp
jnp
pop
adc
mov
fisttpl
gs
sub
in
add
sbb
sbb
lea
or
clc
jge
add
inc
hlt
clc
or
pop
push
push
cmp
in
insb
jb
pusha
fsubrs
cmp
loop
pop
pop
adc
mov
mov
jae
sti
insb
adc
and
loopne
cli
push
movsl
nop
ds
fwait
inc
inc
les
ds
jg
xor
lock
sarl
scas
lea
popf
fidivl
mov
decl
scas
and
out
cmp
fdivs
pop
les
pop
test
ljmp
addl
sar
fildl
adc
or
xor
cli
pushl
jecxz
or
mov
icebp
test
divl
lret
das
stc
xor
push
sar
aaa
mov
aaa
jp
xor
adcl
stos
jne
dec
ljmp
cmpsl
mov
sar
or
xor
pop
pop
pop
cltd
mov
inc
cld
cmp
ss
push
mov
cld
out
cmp
je
das
out
in
cmpsb
imul
mov
mov
aaa
push
std
cld
pop
enter
fucomip
lcall
sbb
and
add
sbb
push
decl
daa
mov
sbb
xor
test
mov
into
add
hlt
outsb
add
inc
fisubs
jmp
mov
in
adc
sbb
insl
inc
lea
sar
stc
mov
and
rclb
aam
push
arpl
mov
pop
hlt
xchg
stc
sbb
mov
push
and
pop
xchg
push
decl
lods
sub
push
pop
mov
push
xlat
mov
jmp
push
ror
push
pop
imul
pushl
ret
loopne
sbb
inc
loopne
sbb
pop
lahf
jl
stos
mov
adc
call
decl
pop
mov
cmp
sub
mov
movsl
or
aam
ljmp
pop
iret
adc
or
loope
xchg
xchg
add
or
cli
mov
cld
xor
jle
jp
imul
test
or
mov
jg
call
inc
cltd
lret
cs
cs
cmpl
loopne
pop
xchg
jb
sarl
iret
jbe
insl
aam
jge
dec
adc
add
aas
mov
inc
push
stc
and
mov
movsl
jg
add
xlat
and
pop
sub
cmp
orb
xorb
cld
mov
lea
jns
dec
mov
pushl
mov
add
lcall
mov
sar
adc
addr16
jnp
mov
mov
and
lcall
adc
sti
clc
dec
pop
cmp
cmpsb
jbe
mov
lret
sti
jbe
call
incl
cmp
jbe
cli
mov
shrb
aam
push
mov
fs
push
ret
sbbb
or
push
mov
add
mov
xchg
in
int3
cli
movsl
jg
inc
ljmp
xchg
or
pop
loop
out
pop
mov
and
xchg
dec
sti
out
fistpll
mov
ljmp
out
and
insl
dec
cmpb
dec
mov
ja
mov
decl
or
or
fbstp
and
dec
loopne
in
adc
mov
pop
add
incl
les
gs
mov
btr
or
dec
push
outsl
mov
lcall
cmpsl
adc
das
or
cmovnp
pop
mov
adc
xor
fsubr
and
pushl
cmp
movsb
mov
jnp
push
jge
inc
or
pop
sbb
jg
mov
out
adc
outsb
rcll
push
adc
mov
xlat
adc
mov
pushl
test
hlt
mov
mov
xchg
lret
enter
ljmp
dec
adc
sti
imul
push
dec
int3
test
add
xor
js
push
jmp
sbb
decl
or
mov
push
je
ss
jbe
pop
push
push
or
hlt
xor
push
lahf
shrl
outsb
lea
hlt
jmp
loopne
fbld
mov
shr
stos
icebp
pop
loopne
pop
dec
adcb
adc
ljmp
mov
test
sub
decb
iret
sbb
mov
out
ja
sbb
pop
jne
mov
cmp
xchg
hlt
out
mov
add
incl
jnp
mov
pop
or
aaa
jmp
es
cltd
mov
or
push
add
int
dec
pop
and
loopne
call
dec
outsl
pop
adc
pop
cmpl
jae
aam
call
mov
sub
dec
mov
mov
mov
nop
inc
mov
mov
jo
adc
push
test
pushl
jge
or
mov
jne
mov
call
sbb
mov
xlat
je
mov
ljmp
mov
imul
jmp
push
into
xor
cli
ja
push
fs
mov
pop
loop
leave
jl
loope
pop
mov
ljmp
lock
jnp
incb
pop
add
cmp
jle
pop
xchg
or
test
jge
adc
cmp
dec
and
pop
sub
inc
mov
decb
jne
inc
mov
jmp
pop
sub
fucomip
pop
mov
cwtl
cmp
fbld
or
pop
sarb
add
out
inc
jae
test
sbb
mov
or
and
push
mov
decl
inc
jge
les
or
mov
bound
fldt
cmp
popl
decl
jl
jmp
sub
sti
nop
push
mov
incl
mov
mov
push
jb
arpl
pushl
cld
mov
jne
lock
adc
cld
ljmp
jge
lahf
ja
frstor
jns
jne,pt
dec
adc
dec
cmp
inc
or
sub
frstor
jg
fstl
js
nop
and
mov
jb
test
inc
mov
adc
mov
xor
push
push
filds
xor
or
je
push
iret
fsubs
dec
or
cld
lcall
insb
or
push
insb
adc
jbe
movsb
cmp
mov
push
jl
and
decl
out
pushl
push
and
sub
test
popa
jno
pop
ljmp
std
sbb
inc
inc
mov
outsb
xor
aaa
imul
push
mov
inc
lea
jne
call
test
out
jns
shll
mov
jg
push
mov
shll
dec
lea
mov
mov
cmp
inc
ja
repnz
hlt
jb
push
movl
lock
push
mov
cmp
movl
push
sub
xchg
jbe
push
outsl
add
dec
decl
jnp
ficompl
lods
lea
or
inc
test
pushl
sahf
jecxz
inc
inc
decl
clc
aaa
push
lret
dec
inc
jne
or
sub
sub
add
add
add
push
adc
and
add
push
mov
mov
in
mov
pop
lods
jl
loopne
mov
cmp
pop
clc
push
cmp
xchg
pushf
dec
mov
mov
rcrb
add
fdivl
adc
aad
pusha
add
mov
mov
pop
icebp
ret
push
movsb
pop
std
add
cmp
add
lret
lea
and
cmp
or
sbb
adc
fwait
sub
call
add
out
rorb
cld
inc
ret
or
mov
lcall
mov
out
inc
inc
jmp
xor
adc
test
pop
xor
mov
jmp
xor
add
mov
sbb
jae
dec
xor
dec
lods
nop
mov
decl
inc
add
nop
add
das
sbb
mov
decl
jae
add
push
in
in
aam
xor
clc
inc
lock
or
mov
add
cmp
in
pop
and
call
push
pusha
mov
fldenv
push
mov
enter
addr16
or
outsl
push
push
enter
mov
mov
shll
push
fs
je
push
or
xchg
cmpsl
jne
inc
outsl
pop
add
enter
outsl
ljmp
movsb
subb
decl
push
js
loopne
ficoms
subl
icebp
nop
ja
ja
dec
into
or
stos
test
or
sbb
mov
mov
mov
aaa
fcom
inc
xor
push
clc
je
inc
adc
jmp
lock
xchg
cli
fucomip
or
push
cmpb
and
pushl
aam
out
mov
and
insl
mov
call
cld
push
push
scas
jge
repz
pop
sbb
adc
or
test
mov
cs
push
cmc
jge
je
adc
adc
ljmp
test
sbb
out
dec
xchg
nop
stos
popa
lahf
fisttps
push
aam
push
jg
call
flds
dec
cmp
sbb
ret
jne
jmp
stc
adc
incl
xlat
sahf
sub
sub
jne
sub
push
and
je
and
push
mov
xchg
ret
sub
pop
mov
cmp
mov
mov
ss
sbb
cli
sub
rclb
sub
arpl
clc
push
mov
pushf
lcall
clc
sub
or
pusha
imul
lcall
push
or
add
sub
repz
or
movsl
sbb
pop
jne
mov
test
jb
xor
inc
sub
ljmp
in
jge
sub
in
pop
sub
shlb
mov
adc
std
jg
jne
sahf
jmp
xchg
stos
es
ljmp
icebp
fiadds
mov
dec
push
in
dec
je
std
fcmove
mov
inc
add
cmp
add
jno
push
jle
push
and
push
adc
fbld
jle
or
sbb
sub
jns
shll
xlat
push
scas
pop
test
fcomip
pop
jmp
sub
stos
pop
push
jp
add
fisubl
cld
ljmp
adc
and
jns
push
int
cmpl
aam
addl
imul
xchg
adc
fwait
mov
pop
mov
clc
pop
mov
clc
jg
or
mov
push
xlat
sti
lret
loop
ss
inc
dec
or
xchg
jno
ja
hlt
pop
sbb
aam
rorl
pusha
jmp
cmp
jge
or
push
push
or
add
adc
inc
add
jl
lcall
mov
sbbb
mov
shrl
adc
or
outsl
mov
adc
outsb
fmuls
inc
fisttpl
movl
inc
sub
stos
inc
arpl
mov
xchg
lcall
loopne
sbb
ljmp
lea
add
mov
sbb
decl
aad
je
sbb
jl
pop
push
orb
lret
mov
jmp
cli
mov
pop
and
or
mov
jmp
sbb
popa
sbb
inc
mov
push
stos
pop
popa
pop
or
and
add
popa
xchg
out
inc
xchg
cli
fildll
add
inc
mov
fistps
jg
sbb
dec
mov
ret
inc
mov
jg
shr
lods
add
inc
lods
fildll
int
rclb
mov
lds
or
mov
xchg
imul
adc
dec
add
sbb
pshufw
mov
decl
push
mov
cmp
adc
jae
pushf
dec
rcrl
ljmp
roll
lcall
xor
adc
or
lcall
out
subb
add
jb
xchg
rcrl
leave
ljmp
pop
loop
cltd
lods
imul
mov
icebp
ja
cmp
mov
and
or
and
ljmp
mov
adc
xor
inc
pop
sbb
ljmp
int3
loopne
mov
jmp
xchg
cmpsb
lret
inc
jg
add
push
inc
mov
gs
jg
pushl
scas
lods
decl
dec
popa
push
or
scas
int
mov
ljmp
movsb
dec
leave
loop
test
sbb
mov
cmp
stos
add
pop
loop
jmp
inc
add
repz
imul
insb
jge
add
fucomip
or
sub
add
lods
ja
xor
sbb
jmp
jne
xor
or
push
addps
aaa
mov
ja
mov
sub
adc
adc
jp
je
icebp
jg
push
cmp
and
jb
jb
lock
mov
or
push
dec
dec
push
jmp
ljmp
push
jg
dec
dec
inc
mov
inc
dec
dec
inc
adc
push
xor
cmp
test
cld
mov
mov
mov
mov
popa
insb
aas
xor
gs
jo
jmp
xchg
ja
jg
cmp
and
popa
arpl
ljmpw
inc
out
ja
lret
cmp
outsl
outsb
aaa
xor
cmp
jae
fs
jne
sub
jb
push
jg
movsl
arpl
pop
insb
sti
and
arpl
sub
jnp
mov
mov
das
pop
push
fcompl
leave
pop
loop
xor
daa
mov
ja
pop
xor
in
pushl
pcmpgtb
arpl
mov
inc
and
gs
popl
and
stc
mov
jge
push
insl
jne
lods
je
mov
imul
xchg
cli
mov
mov
add
jge
push
push
ljmp
push
dec
dec
shrl
ret
das
sub
dec
adc
sub
xor
clc
test
jb
jne
jae
imul
pop
ljmp
shrw
sbbb
fldt
je
adc
mov
sub
call
shufps
inc
sub
and
dec
imul
jae
push
sub
mov
jbe
cmp
adc
cmp
mov
lcall
and
outsb
ds
fldl
inc
aad
flds
pop
cld
jg
popa
ds
pop
mov
gs
adc
outsl
push
fcmovne
xorps
xor
jae
lods
icebp
test
addr16
outsl
js
add
xor
xor
ljmp
jmp
gs
addr16
xor
sub
or
inc
je
add
leave
xor
test
mov
ljmp
movsb
add
mov
sub
or
loopne
ljmp
les
mov
mov
test
push
pop
or
jb
sub
lock
add
incl
xchg
cmp
loopne
ljmp
add
inc
ljmp
or
jnp
inc
add
pop
push
add
add
add
incl
inc
or
lea
or
adc
or
sub
out
pop
inc
and
add
cmp
fildl
jo
jns
outsl
loop
pop
clc
lsl
sub
pop
push
push
filds
pop
or
jmp
push
mov
pop
inc
cltd
pop
test
dec
or
pop
ljmp
push
sti
lcall
inc
xor
xor
sub
xor
xor
fidivrl
or
sub
fistps
inc
inc
inc
xor
andl
das
ss
adcl
cmpl
push
ret
mov
add
xor
add
lahf
pop
out
dec
cmpsl
or
sub
add
aam
jg
pop
jb
cmp
inc
xor
inc
inc
inc
inc
xor
in
fldt
lods
or
dec
ss
cmp
xor
inc
in
inc
cwtl
stos
jns
pop
test
aaa
and
call
pop
aaa
adc
pusha
nop
enter
outsb
inc
jecxz
jg
push
xor
jbe
or
outsl
idivl
pop
cmpsl
ljmp
push
push
test
stos
xor
jae
insb
inc
jae
dec
add
and
fucomip
lcall
or
movsb
add
inc
add
xor
jmp
iret
out
sub
call
push
or
aas
fs
push
and
adc
insl
mov
lock
fists
add
add
sub
cli
lods
pop
dec
add
cmp
push
pushw
mov
inc
rorl
inc
push
stos
flds
add
cld
rcrb
cmp
aaa
fsubr
lea
ja
movsb
les
jns
and
filds
xchg
lahf
lahf
cmp
movsl
sbbl
fnstsw
stos
test
loop
mov
mov
pop
inc
mov
das
cld
fisttps
lret
mov
in
call
jl
jle
mov
add
pop
fdivr
dec
jle
fidivl
rcr
fsubp
cli
mov
xor
xchg
pop
xchg
jp
pop
xor
sbb
push
xchg
outsl
add
imull
int3
fdivs
enter
push
mov
xchg
add
or
pop
or
or
fcoml
lods
adc
mov
leave
mov
pop
sbb
fs
sbb
dec
sahf
les
mov
js
push
ljmp
push
xor
enter
and
add
add
dec
icebp
negb
in
incl
lea
and
push
in
nop
xchg
xchg
stc
add
cmp
pop
cmpsb
cmp
sahf
mov
add
push
fincstp
pop
nop
add
pop
mov
scas
mov
push
jg
or
xchg
stc
adc
push
sbb
or
or
jnp
push
sti
push
das
dec
aaa
fdivr
mov
add
pop
push
loope
and
insb
mov
push
xor
cmc
push
in
pop
push
pop
or
pop
pop
rclb
imul
sbb
and
jb
out
add
mov
and
addl
sahf
mov
ret
call
popa
ficompl
xlat
or
data16
ljmp
push
inc
and
xchg
pop
daa
adc
inc
outsb
out
inc
jb
inc
push
sub
pop
jle
jmp
insb
cmpsl
add
shr
inc
adc
adc
push
inc
jmp
xor
and
mov
es
and
jge
push
cmp
add
push
pop
mov
adc
outsb
inc
sbb
push
pop
bound
jle
add
movsb
dec
xor
lea
lods
add
fmul
es
aaa
insl
mov
lds
push
dec
jecxz
ds
outsl
fdivrs
in
push
imul
push
jmp
mov
adc
insb
ret
loop
mov
insb
aam
gs
data16
cltd
je
imul
dec
arpl
lcall
fs
addb
fnsave
mov
push
ljmp
push
xor
add
push
imul
mov
mov
push
mov
lods
sbb
data16
je
push
adcb
shrb
sbb
jg
push
out
outsb
sub
into
data16
add
jbe
add
inc
clc
jg
or
inc
mov
or
cli
js
mov
mov
andb
xchg
jmp
dec
test
popa
ss
mov
mov
mov
mov
adc
test
decl
mov
int
adc
incl
dec
sbb
inc
inc
xchg
and
stos
pop
popf
gs
sub
pop
dec
pop
sbb
std
sub
mov
mov
pushf
mov
sbb
and
mov
ljmp
scas
sbb
and
or
xchg
loope
add
dec
xchg
push
adc
mov
cmc
mov
mov
ds
gs
insl
jae
or
pop
and
dec
mov
addw
int
stos
stc
xor
in
add
xchg
pop
andb
cmp
jno
lahf
pop
mov
mov
push
cmp
xlat
mov
das
mov
std
hlt
movsb
adc
fbld
and
jmp
xchg
sbb
pop
sbb
adc
fldt
push
or
pushl
adc
adc
xor
sbb
adc
or
outsl
ljmp
std
pop
fadds
adc
or
add
pop
push
outsb
adc
adc
sbb
adc
std
call
les
push
pop
pop
sbb
pop
or
mov
mov
and
cli
add
or
std
loop
jg
inc
jns
or
cmp
inc
push
add
add
ljmp
jno
cld
mov
xor
xchg
cmp
push
outsl
cmp
dec
sub
or
add
sub
sbb
or
outsl
loopne
mov
xor
adc
lock
mov
lock
mov
jae
inc
imul
add
or
outsl
in
pushl
insl
lock
sbb
inc
xchg
sbb
sbb
lods
sbb
adc
xor
pushl
and
or
pop
fwait
or
or
or
mov
mov
sub
add
push
adc
adc
gs
imulb
mov
or
mov
std
test
adc
jg
push
sti
pop
dec
adc
push
sbb
xor
jl
data16
call
fucomip
mov
bound
add
mov
mov
mov
adc
push
push
push
or
or
bound
mov
not
cmp
pop
lcall
push
add
pop
mov
mov
push
negb
pop
and
adc
or
adc
and
mov
mov
mov
jecxz
or
mov
push
adc
and
cmp
mov
adc
push
xchg
pop
mov
aad
inc
cld
or
mov
jg
cli
mov
pop
out
sbb
pop
adc
mov
sti
incl
sti
fbstp
lock
add
push
sbb
ret
mov
or
outsl
xchg
xchg
loop
popa
sub
sbb
or
popa
adc
mov
push
xor
adc
fnstcw
jb
jmp
or
or
push
mov
sbb
stos
pop
add
mov
outsl
mov
push
adc
xchg
add
sbb
lret
or
fsub
ljmp
into
mov
add
adc
adc
outsl
inc
clc
mov
sbb
add
add
out
int3
in
lock
sub
lock
adc
adc
outsl
adcb
aas
dec
hlt
pop
fmull
add
call
add
mov
fnstenv
pop
add
test
sub
aaa
lods
in
fs
mov
mov
or
add
pop
pop
jg
js
insl
push
jp
test
pop
sub
mov
cmpsl
sub
push
add
mov
cs
pop
fcoms
insb
push
push
mov
pushl
and
adc
lds
scas
mov
cs
in
sbb
jmp
addb
dec
gs
sbb
mov
xchg
mov
nop
inc
adc
adc
inc
lock
cli
xorb
inc
inc
add
or
fadds
mov
outsb
add
lea
nop
adc
inc
pop
push
or
jmp
nop
add
lcall
es
sub
adc
jb
mov
add
jae
adc
pop
sub
push
jae
xor
add
jb
sarl
inc
xor
das
leave
or
mov
cmp
dec
add
sub
add
adc
lea
cmp
jbe
add
fstl
add
dec
jne
jmp
add
mov
sub
ja
add
jmp
push
pop
push
mov
jmp
call
add
mov
dec
add
or
rclb
les
clc
sub
mov
cmp
cld
add
and
fildl
lea
mov
xchg
mov
xchg
dec
or
mov
outsl
sbb
stos
mov
push
inc
mov
push
mov
cmp
mov
add
jmp
popa
mov
or
xchg
lea
or
sbb
cmp
ja
add
mov
jns
jns
jmp
jne
test
mov
xchg
mov
mov
je
inc
fsubs
mov
adc
pop
int
cwtl
adc
push
aaa
fstl
adc
mov
or
sarb
xor
rorl
addb
es
xor
pop
sbb
movsb
jne
andps
dec
inc
mov
dec
inc
dec
outsb
inc
dec
dec
test
add
push
dec
jnp
lock
add
dec
inc
adc
or
int3
xorb
or
cmp
or
or
inc
or
out
push
gs
inc
mov
xor
jbe
mov
inc
sub
inc
inc
adc
insl
push
repnz
push
inc
gs
pop
cmp
mov
pop
add
cmpl
add
mov
sbb
cwtl
shll
add
adc
cmpsb
jmp
lret
add
dec
adc
or
icebp
jmp
dec
inc
push
insb
jne
add
ljmp
popf
rcll
mov
jg
loopne
pop
xor
bound
add
js
insb
jo
adc
das
jo
outsl
add
or
pusha
addl
add
push
loopne
inc
and
loopne
sbb
pushf
sbb
inc
sub
and
push
xchg
or
out
jne
out
or
mov
pop
fcmovnbe
jne
icebp
add
mov
pop
lahf
push
push
mov
mov
cmp
scas
add
dec
arpl
insb
cmp
dec
pop
xchg
addr16
cmp
add
stc
das
scas
jmp
outsb
cmp
sub
pop
mov
mov
pop
xlat
adc
inc
cmp
or
cs
pop
cmc
xchg
lods
add
push
out
shr
dec
cmp
or
pop
in
mov
cmpxchg
lcall
inc
inc
xlat
pop
jg
int3
xor
inc
push
inc
push
decl
mov
daa
imul
xadd
clc
cmp
imul
pop
inc
lods
gs
dec
insl
jo
movsl
fdivl
xor
int
mov
pop
mov
jge
dec
dec
outsl
fs
sbb
push
dec
icebp
dec
pop
xlat
jne
incb
call
xlat
jne
ja
gs
inc
adc
jne
xorb
inc
cltd
mov
dec
ja
ret
inc
scas
pop
movmskps
cmp
xor
roll
inc
jbe
mov
add
push
sbb
and
xor
xor
and
outsb
inc
arpl
repz
add
fcoml
pop
gs
cltd
or
imul
xchg
add
xchg
roll
mov
popa
and
xor
inc
xor
mov
cli
popa
insb
push
mov
pop
sbb
adc
aaa
jp
jne
inc
pcmpgtb
inc
push
lds
jle
subb
add
jge
fstp
mov
inc
je
adc
insb
lea
outsl
jb
sub
mov
xchg
inc
arpl
jo
dec
aaa
fldln2
or
addr16
xor
adc
pop
sti
mov
sarl
sahf
jo
and
pop
neg
xlat
pop
sub
sub
xorl
pop
mov
je
jb
inc
adc
jo
int3
inc
mov
jo
jno
or
adc
sarl
sub
dec
pop
insl
data16
mov
roll
hlt
pop
inc
xchg
lret
iret
or
mov
gs
add
popa
dec
fldl
fcmovnu
jns
inc
adc
or
imul
pop
test
fs
sub
pop
add
cmp
mov
sti
mov
mov
arpl
cs
stos
scas
pop
xchg
jae
dec
push
scas
and
xorb
rcrb
nop
mov
jne
xchg
out
mov
cmp
push
adc
jbe
cltd
jecxz
bound
add
mov
in
mov
or
rclb
jnp
push
test
cmp
cmpsl
dec
dec
push
gs
jae
add
inc
subb
or
or
dec
add
ja
insl
leave
dec
mov
orb
jns
bound
sub
outsl
outsl
imul
ja
ret
xor
add
jmp
loope
loope
popa
and
and
cmp
sbb
sbb
das
jne
push
das
insb
inc
mov
in
push
arpl
cmp
mov
lods
ss
insb
mov
outsb
mov
add
sub
and
jb
inc
push
jbe
stos
or
inc
add
push
aam
test
or
push
cmp
bound
push
cmp
mov
das
js
xor
xor
jb
sbb
ret
mov
pop
push
pop
fdivl
jg
ret
jbe
xor
rclb
sub
cmp
xchg
and
ss
outsl
dec
pushf
xchg
dec
in
adc
faddl
les
js
push
add
pop
jae
repnz
les
loope
sub
dec
push
inc
pop
xor
mov
das
mov
mov
jae
insl
imul
dec
jp
lea
mov
push
jge
pop
jnp
sti
mov
stos
sub
pusha
xor
sets
das
add
pop
jno
add
dec
and
sbb
sbb
xor
jno
xor
mov
arpl
bound
push
mov
loopne
push
mov
jp
cs
pop
fisubl
nop
mov
or
xor
xor
and
sbb
or
pop
inc
sbb
push
mov
imul
push
out
scas
shll
pop
cmpsb
push
rcrb
dec
dec
fs
pop
and
js
xlat
xchg
jl
sub
sub
sbb
es
push
clc
push
xchg
jb
addps
movsl
lcall
enter
mov
inc
xlat
loopne
out
dec
pop
jle
sarl
imul
addr16
xor
in
push
nop
add
cli
fdiv
dec
pop
cmp
push
and
call
push
daa
pop
daa
dec
sti
push
loop
or
mov
xor
jne
cmp
outsb
imul
ret
out
loope
fs
aas
cltd
lcall
push
pop
dec
cld
test
sbb
test
nop
shrl
lcall
mov
sarb
pop
sbb
testl
mov
ds
xchg
sbb
sarl
rclb
dec
addr16
sub
adc
in
pop
popa
pop
jne
jg
arpl
push
gs
or
fadds
fdivs
push
notl
rorl
mov
mov
pop
out
cmp
scas
popa
xchg
jnp
stc
or
sbb
xchg
sub
pop
out
jmp
jo
popa
in
xor
push
jns
add
mov
xchg
jno
push
mov
es
pop
es
xor
dec
scas
mov
sbb
pop
sub
jae
or
xorl
stc
mov
lods
cmp
inc
jne
jge
dec
jb
fnsave
xchg
mov
xlat
pusha
call
push
jne
aaa
fcom
add
jb
outsb
push
dec
mov
fs
cmp
xor
outsl
pop
sbb
mov
pop
add
mov
cmp
dec
dec
xchg
or
insl
mov
xor
nop
xchg
gs
inc
pop
jno
loop
or
fisubl
jg
pop
test
pop
push
push
dec
movsl
xor
cmp
sub
rolb
mov
aas
add
xor
insb
mov
push
mov
push
push
in
flds
fs
push
lods
and
mov
mov
std
pop
imul
or
mov
es
push
in
sbb
mov
dec
pop
push
mov
xor
mov
movsl
movsb
xchg
mov
aas
push
shrb
aad
in
pushf
pop
mov
add
dec
jge
ret
pop
cs
stos
loop
lock
scas
push
iret
divb
dec
add
imul
hlt
and
and
push
mov
and
push
jnp
lds
lods
outsb
addb
arpl
pop
ret
cmp
inc
xlat
dec
imul
push
pop
xlat
mov
int3
orb
add
sbb
fs
pop
pop
movsb
pop
adc
inc
push
mov
add
and
dec
xor
push
mov
inc
pop
sti
add
lret
ficompl
xlat
aam
adc
pop
pop
push
and
insl
jo
sub
out
enter
stos
jne
xlat
jne
lcall
pmulhw
insl
ret
rcr
push
jg
mov
test
cli
jmp
push
pop
adc
je
add
adc
push
inc
cmp
jae
lock
xlat
aad
push
stos
outsb
incl
cmp
out
es
pusha
fadds
mulb
jb
push
jne
mov
nop
repz
pop
xor
sub
test
dec
movsb
out
adc
rcrl
mulb
sbb
push
add
push
mov
mov
add
sbb
jb
xchg
and
jae
or
mov
scas
push
mov
xchg
xchg
ret
sbb
jb
xor
aas
nop
jmp
ljmp
mov
ja
xchg
xchg
lods
inc
mov
xchg
outsl
xchg
adc
xor
imull
int3
cs
imul
and
pop
sub
mov
push
jns
sbb
adc
adc
mov
rclb
jle
pop
jne
xor
jl
mov
arpl
xorb
nop
fidivrl
add
xchg
dec
dec
jg
orb
cmp
leave
push
arpl
cmp
pop
xor
mov
outsb
push
out
repz
add
test
arpl
or
movb
mov
inc
inc
mov
js
pop
xchg
pop
push
push
rorl
jns
ret
adc
jo
dec
loope
cmp
notl
push
mov
push
dec
insl
lods
lea
scas
dec
cmpsb
lock
add
dec
sub
call
aaa
or
popa
arpl
je
jbe
and
andb
orb
mov
mov
out
pop
add
adc
push
fs
sub
daa
push
jae
mov
mov
aad
arpl
and
fsubl
outsb
xlat
roll
jo
mov
pop
add
pop
sbb
fsts
inc
dec
ret
dec
jl
imul
rcrb
fbstp
imul
pop
add
lock
push
jo
lds
xor
jb
ja
not
mov
das
xor
insb
aas
and
or
shrl
xor
pop
xchg
dec
inc
scas
mov
sub
cmpsl
push
adc
or
cmpsb
sbb
add
push
jbe
push
add
push
push
push
xor
faddl
lcall
add
inc
add
arpl
or
adc
pop
popl
mov
scas
pushaw
adc
mov
out
add
loopne
mov
jb
mov
dec
push
and
push
push
mov
cmpsb
xchg
inc
adc
mov
iret
inc
xchg
xchg
xchg
and
dec
popa
jle
call
mov
jo
mov
into
addb
ss
xchg
mov
xchg
jbe
sbb
push
xor
mov
outsl
ss
popl
push
add
xchg
imul
push
dec
pusha
pushf
nop
fmull
xchg
jns
dec
das
movl
scas
outsb
stos
dec
out
mov
ret
lea
fdivl
shlb
push
dec
sub
call
and
aad
divb
fs
loopne
push
imul
popf
imul
insl
in
rorb
lcall
xchg
sbb
jmp
rclb
not
and
pop
or
cmp
mov
xchg
fnstsw
pop
cltd
inc
push
dec
push
sub
fidivl
fimuls
outsb
pop
sbb
xchg
js
in
adc
nop
mull
ds
je
dec
subps
ss
test
mov
cld
jno
lret
inc
pop
sbb
and
std
es
fs
push
jae
and
dec
xchg
jmp
jne
cmpl
sbb
push
arpl
push
andb
add
imul
mov
or
inc
cmp
add
lods
bound
add
aaa
mov
push
popa
mov
xchg
mov
add
addb
movb
js
or
pop
and
loop
movsb
mov
icebp
in
aam
shl
adc
mov
leave
mov
loope
inc
inc
xlat
add
mov
lods
push
mov
test
jns
push
pmuludq
sbb
daa
adc
inc
inc
cmpsl
in
mov
mov
jae
les
mov
mov
mov
mov
lods
jo
bound
sbb
mov
or
outsb
jl
or
dec
push
and
sub
pop
xlat
mov
mov
jbe
outsb
mov
aam
fwait
pop
jbe
dec
fidivrl
lods
sub
repz
add
int
fsubrl
jne
aaa
add
add
add
dec
push
lods
fstpt
in
aad
test
adc
add
lcall
sahf
out
and
add
add
and
inc
xchg
lods
add
xchg
repnz
lcall
test
test
inc
dec
lock
sbb
xchg
imul
or
int
fidivs
bound
dec
and
jmp
ret
mov
fstl
jno
pop
je
aam
and
mov
add
rol
stos
push
ss
pop
mov
mov
mov
cmpsl
ljmp
xchg
lret
inc
clc
andl
jbe
movsl
out
jb
je
aas
movsb
mov
fidivrl
test
inc
les
cs
or
out
insl
shll
xchg
mov
pop
mov
and
and
jne
popa
mov
sub
scas
add
and
das
lea
pop
and
ljmp
ds
lret
pop
pop
mov
inc
fbld
fwait
mov
cmp
mov
mov
movsb
jo
testb
int3
ret
and
leave
xchg
ja
and
cld
pop
fldl
mov
aaa
fistpl
xor
movsb
insb
mov
mov
inc
adcl
mov
cli
xlat
add
sbb
lcall
int3
scas
and
pop
push
popf
jmp
subl
insl
mull
mov
mov
mov
call
mov
dec
mov
aad
shll
std
jo
jo
jno
repz
imull
call
insl
jne
jecxz
sub
aam
add
jg
movsb
scas
jmp
or
xor
test
mov
pusha
add
lcall
bound
movsl
es
ja
mov
insb
call
lret
outsl
adc
pop
and
mov
jbe
mov
inc
ret
ret
lcall
inc
pop
mov
pop
cmp
ja
lods
inc
add
cs
cmp
aas
out
or
fs
pop
js
sbb
jae
mov
mov
pushf
inc
dec
das
sbb
xchg
pop
insb
jmp
push
outsb
rdpmc
aaa
push
shll
daa
data16
adc
add
mov
dec
jg
pusha
and
xor
gs
das
jb
mov
or
inc
and
shll
dec
or
xor
dec
pop
and
nop
test
or
bound
adc
dec
jecxz
stos
adc
fwait
mov
fidivl
sahf
or
aad
pushf
mov
popa
in
push
xlat
lock
repnz
arpl
pop
cs
xchg
inc
mov
pop
mov
stos
movsb
inc
mov
rclb
test
mov
mov
jge
mov
fstl
or
inc
xor
mov
cmp
bound
cmpsb
mov
push
out
xchg
mov
mov
xchg
cmp
mov
add
jmp
outsb
stos
sahf
lds
cmp
inc
and
lods
xor
inc
inc
xor
jge
mov
orb
sub
fisubs
xlat
push
pop
ret
stos
mov
xlat
aad
jmp
adc
mov
dec
and
inc
mov
jb
xor
fs
pop
mov
lahf
xchg
mov
fidivrs
push
push
shl
loop,pn
insb
in
mov
out
mov
mov
inc
loop
xorl
cs
pop
sbb
pop
xor
das
loop
aam
lret
popf
adc
insb
xchg
ret
fidivl
or
shlb
stos
fs
xchg
pop
mov
and
test
arpl
test
rclb
hlt
or
aam
test
add
inc
aaa
test
inc
stos
sub
subl
add
sub
scas
push
ret
aad
jecxz
test
shlb
mov
in
xor
sbb
add
popa
in
pop
stos
and
outsl
scas
xchg
xchg
sarl
adcl
ljmp
or
dec
push
add
rcrb
mov
mov
mov
sub
stos
push
inc
rorl
mov
flds
jbe
and
mov
dec
or
push
xlat
jbe
or
xlat
icebp
les
aam
movl
outsl
test
pop
in
lcall
aad
popa
sub
shll
je
adc
lret
mov
ljmp
jmp
xchg
mov
jecxz
sub
mov
or
adc
sahf
addl
jo
push
cmpsb
bswap
adc
scas
jmp
or
aad
ror
sub
inc
pop
jnp
push
sub
insl
lods
shr
leave
lcall
sbb
add
add
fs
inc
add
add
aaa
sub
arpl
pop
cmpsl
or
jns
and
add
ss
in
add
add
mov
or
adc
sbb
and
xor
inc
add
sbb
mov
jae
arpl
out
jnp
xlat
or
sub
or
jecxz
mov
inc
add
and
incl
decl
lcall
aas
jg
or
fistl
add
adc
testl
dec
vmaxss
lds
out
dec
in
inc
leave
std
lret
or
mov
or
mov
jne
jbe
pop
les
or
roll
ret
mov
popa
xlat
mov
lret
les
xor
inc
cwtl
int
sbb
xchg
imul
and
jmp
leave
out
imul
rol
jmp
fdivrs
jnp
addl
pop
push
xlat
mov
cmpsl
leave
cmp
xor
out
iret
outsb
xchg
jbe
aaa
adc
aas
and
cmc
sbb
jbe
mov
aas
lds
cmpsl
dec
pop
scas
jmp
scas
and
adc
pop
test
mov
xlat
test
fisubrl
inc
push
xlat
jne
aad
int
lret
dec
mov
pop
fidivl
lret
lret
sarb
dec
xlat
aas
in
and
inc
add
int3
xchg
sbb
jecxz
sbb
je
not
cmp
test
movntq
outsb
int
xchg
sub
repz
jecxz
in
outsb
lret
xor
pop
enter
xor
fcompl
mov
sub
add
fldl
dec
push
sbb
daa
loope
mov
orb
loopne
loop
sbb
mov
add
stos
loopne
adc
fcmovnb
ficoms
aaa
jae
mov
fiadds
or
adc
xchg
fistl
loopne
fst
outsb
out
pop
loope
fisttpll
subl
rcrl
or
add
ljmp
dec
add
imul
pop
ss
fldl
fs
add
sub
mov
daa
jl
xchg
in
pop
xchg
sti
call
xchg
mov
ds
hlt
lock
mov
cmp
loopne
xchg
push
rcr
inc
call
cmpsl
jnp
incb
int
add
idivl
mov
push
inc
sbb
or
inc
jg
jle
mov
in
pop
xor
push
inc
std
shr
adc
fwait
lret
sbb
pop
loop
sbb
xor
mov
ss
add
fsub
das
jg
push
popa
mov
xchg
test
cld
pop
gs
imul
mov
out
out
jo
ljmp
add
aas
insl
call
adc
pop
loopne
adc
in
faddl
pop
js
sub
adc
adc
out
or
arpl
call
arpl
pop
pop
out
out
out
insl
call
push
loopne
ljmp
pop
or
out
stos
or
das
sbb
push
in
xchg
xchg
sbb
ljmp
jnp
jg
lret
out
xor
xchg
loope
stos
in
cld
pop
iret
ljmp
outsb
in
jecxz
mov
bound
scas
out
lret
xorb
ljmp
add
push
sub
insl
cmpsb
mov
inc
cld
add
fdivs
cli
fsubrs
jnp
xor
bound
cmp
sub
sub
sub
xor
sub
cmp
adc
adc
insb
jle
jp,pt
fdivl
outsw
cmpsb
push
dec
pop
xor
arpl
sub
push
test
negb
mov
inc
icebp
aas
sbb
outsw
jne
pop
mov
dec
roll
stos
jbe
std
cmp
pop
jnp
inc
cmp
inc
inc
adc
popa
xor
shlb
pop
sti
fildll
cmp
or
cmp
inc
ss
or
pop
push
hlt
addl
call
icebp
imul
sub
push
cmc
pop
sbb
push
xchg
jne
insb
fs
and
push
adc
and
cli
pop
xor
aaa
adc
mov
jnp
inc
inc
inc
xor
xor
sub
sub
inc
inc
xor
enter
scas
popl
mov
jnp
mov
mov
inc
mov
inc
mov
pop
push
pusha
cmp
faddp
testl
je
xchg
inc
aad
or
xor
in
insl
in
inc
rcrl
lahf
inc
inc
cmp
xor
fldt
jle
inc
cmpl
data16
ret
outsl
ljmp
cmp
fistl
xor
lds
mov
into
in
push
xchg
mov
pop
jnp
arpl
aaa
icebp
xor
in
pop
bound
fs
push
xor
xor
cmp
es
xor
lahf
mov
dec
and
fistpl
jp
cmp
xor
inc
popa
imul
cmp
shlb
xor
std
inc
inc
xor
fwait
add
pop
sbb
inc
data16
popf
dec
movsl
imul
ss
jo
jge
xor
mov
daa
ss
xor
pop
js
mov
xor
inc
jno
inc
das
sub
fs
addr16
mov
test
mov
test
mov
mov
aad
test
add
sbb
adc
arpl
in
call
xor
mov
loope
xor
adc
insl
lea
scas
fs
ss
shrb
sub
xor
faddl
sub
push
pop
fsubl
dec
subl
js
adc
in
outsb
imul
lock
cmp
inc
cmp
cmp
sub
icebp
test
xor
cmp
lahf
xor
insb
inc
ss
inc
xor
add
in
push
add
inc
sub
add
mov
add
mulb
outsl
es
jo
jo
popf
hlt
mov
int
and
or
subl
adcl
jl
sbb
pop
lds
lea
arpl
jnp
sti
cs
xor
cs
xor
mov
lods
leave
ss
inc
popa
and
ss
imul
icebp
inc
dec
inc
loope
std
inc
leave
es
xor
push
sbb
das
pop
retw
cmc
push
sub
and
gs
mov
xchg
xor
cmpsb
mov
cmp
in
jae
fisttpll
shlw
insl
dec
addr16
add
outsl
xor
push
inc
jns
jp
mov
inc
adc
push
mov
xor
je
rcll
cmpl
popa
push
insl
mov
fs
sbb
mov
inc
mov
mov
data16
sub
movsl
movb
enter
sbb
lods
and
cmc
outsl
hlt
imul
ficoms
insl
shl
push
sarb
pop
jge
add
popf
adc
ja
imul
pop
data16
imul
cs
imul
adc
jl
add
arpl
push
test
inc
fsubs
insb
addr16
fldl
mov
mov
bndstx
in
inc
mov
inc
mov
cmp
xchg
mov
mov
leave
mov
mov
sub
jge
insl
mov
push
jno
cli
invd
ret
cmp
js
ss
mov
mov
movsb
cmp
push
mov
pushf
jbe
shl
movsb
xor
inc
pop
ret
mov
inc
inc
xor
out
or
or
xchg
xor
inc
adc
inc
sarb
imul
je
add
mov
lahf
sub
xchg
xor
insl
bound
popa
shlb
ret
loopne
jl
aaa
bound
jns
icebp
and
inc
push
rolb
orb
and
mov
loope
outsl
jbe
jb
or
pop
push
push
mov
mov
add
inc
dec
loop
add
xchg
ret
or
das
fdivrs
into
loopne
xor
dec
jno
xor
test
lods
sub
xor
mov
lds
jge
lods
mov
aaa
add
jo
xor
inc
xor
jo
xor
movsl
xchg
dec
add
repnz
xchg
scas
lods
rorb
jb
or
cltd
or
arpl
cwtl
mov
adc
push
xor
pusha
bound
push
dec
mov
inc
aas
shlb
xor
xor
inc
lea
xor
lret
push
inc
and
add
xor
add
fistl
dec
xor
adc
mov
hlt
pop
xor
dec
and
mov
add
pop
insl
mov
lock
xchg
es
jp
divl
add
or
add
mov
outsl
outsb
pop
inc
or
bound
pop
push
sbb
repz
xor
or
rcrl
adc
movsb
scas
pop
dec
fcompl
and
fwait
arpl
xor
inc
push
in
sub
xorb
jnp
insb
push
movsl
mov
xor
xor
or
and
int
mov
add
or
inc
mov
add
ds
push
mov
or
xor
push
mov
inc
out
inc
inc
jmp
ljmp
add
mov
outsl
cmc
add
pop
ret
mov
pop
popf
leave
inc
mov
inc
xor
jo
fldl
std
out
mov
inc
test
add
lret
xchg
inc
add
dec
sbb
inc
stos
or
push
les
js
gs
push
push
mov
inc
jecxz
lea
stos
cwtl
push
ret
jg
cmpsl
scas
inc
and
jae
push
cmpb
fisubl
dec
sbb
push
shrl
dec
xchg
xor
pop
loope
cmp
mov
in
mov
push
and
ret
aaa
jg
push
push
add
mov
mov
xchg
loopne
mov
inc
imull
mov
add
dec
insl
mov
add
mov
mov
cmp
inc
mov
xor
jge
cmp
ljmp
fwait
icebp
cs
push
pop
dec
inc
pop
and
cmp
sub
gs
and
inc
gs
cmp
mov
lcall
mov
cmpsl
mov
dec
mov
pushw
fidivl
in
push
adc
mov
cmp
cmpsl
jno
sub
enter
dec
hlt
mov
out
cmp
popa
loope
rorb
out
pop
inc
shll
xor
sub
daa
dec
mov
or
inc
cmp
xchg
ficoml
xor
lods
push
and
push
outsb
sub
shlb
xor
test
push
inc
xchg
xor
cmp
dec
dec
inc
dec
push
push
pop
push
pusha
inc
aaa
es
ds
js
cwtl
jne
pop
pop
lcall
dec
mov
stos
subl
rolb
add
xor
movsl
testl
bound
inc
scas
ds
add
cmp
xor
hlt
sarb
mov
dec
dec
inc
dec
add
push
add
push
sub
inc
jns
adc
test
addb
lea
lods
xor
or
pop
sbb
outsb
pop
mov
push
jb
xchg
orb
imul
mov
out
xor
je
or
jle
jle
push
dec
mov
mov
fisttpl
push
inc
push
mov
outsb
push
das
addl
cmp
insl
js
xchg
repnz
dec
int
mov
roll
sub
lds
sub
cmp
push
jbe,pn
mov
fisubl
push
and
adc
jns
add
lea
fwait
or
imul
rcl
inc
fildl
and
fildl
ljmp
cmp
filds
repz
roll
add
es
cmpsb
dec
mov
push
popa
sub
inc
xchg
dec
add
cmp
add
enter
mov
and
push
mull
loope
or
loopne
and
add
inc
or
ret
mov
bound
popa
outsl
test
arpl
insb
push
inc
scas
test
repnz
dec
sub
and
jo
add
or
pop
dec
xor
out
movnti
pushf
or
cltd
outsl
ret
fnstenv
xor
iret
add
sub
pop
ss
fldl
movsb
inc
sub
cmp
add
stos
add
mov
pop
hlt
loope
je
mov
aas
mov
fmull
repz
xchg
xor
addl
mov
xor
pusha
in
xor
pop
inc
push
cmp
loopne
in
sbb
jae
add
stos
adc
add
push
dec
cmc
fistpl
jae
jne
jae
mov
xchg
inc
pop
cmp
pusha
add
pop
push
push
or
sarl
add
aad
xor
and
xchg
cwtl
mov
inc
test
push
cmpb
inc
inc
xor
pop
push
sahf
push
push
push
inc
push
es
test
pusha
imul
loop
or
jp
insl
lods
aaa
xorb
inc
dec
push
icebp
filds
lock
mov
push
cs
int
xor
xchg
sarb
outsl
popa
sub
xchg
and
arpl
jbe
xchg
push
das
stc
imul
and
dec
int
sub
adc
outsl
lahf
jo
mov
jmp
int
hlt
xchg
inc
mov
push
hlt
inc
repz
outsl
test
rclb
mov
inc
mov
dec
push
add
dec
and
add
sub
push
xchg
xor
adc
aam
mov
or
add
inc
popa
or
in
or
cmp
lods
inc
sub
icebp
imul
xchg
dec
mov
jno
ja
mov
xor
inc
or
pop
mov
xor
add
orb
pusha
notl
insb
pop
stos
pop
sub
jae
xchg
cmpb
repz
pop
mov
mov
test
add
loop
push
pop
sbb
lret
inc
test
push
in
add
add
jne
add
push
jecxz
cmp
or
xor
cli
xor
roll
lcall
adc
adcl
into
sbbb
pop
jmp
ret
popa
insl
jbe
clc
mov
insl
pop
inc
pop
xchg
pop
push
scas
int
jne
jno
cmp
cmp
pop
lret
jp
mov
sti
pop
sub
imul
shrb
ja
imul
or
pushl
fldcw
mov
jmp
pop
adc
inc
or
sbb
or
pop
shll
add
pop
mov
sub
push
les
mov
xor
cmp
push
push
data16
jb
and
add
repnz
xor
pop
xor
sbb
dec
xorb
dec
lods
add
clc
pop
inc
push
inc
inc
ljmp
popf
ret
mov
shll
add
into
pop
and
aam
jo
cmp
mov
je
pop
aaa
jge
and
mov
inc
jns
sub
mov
mov
and
add
icebp
xchg
aam
or
sub
test
loopne
idiv
subb
adcb
jnp
faddl
pop
cltd
inc
fs
ss
xchg
lret
or
aam
mov
ss
hlt
rcr
ja
mov
inc
cs
pop
sbb
cmpl
adc
mov
push
add
pusha
mov
jnp
xchg
pop
test
push
inc
add
or
out
add
mov
and
ss
push
pop
inc
xor
xchg
and
and
push
test
add
inc
rcll
sub
or
ficompl
or
push
jge
addr16
jge
pop
rolb
mov
add
xor
in
loope
jnp
outsb
roll
imul
test
push
fs
movsb
mov
push
scas
std
xchg
pusha
push
rorb
xchg
fidivrl
cwtl
or
lcall
les
mov
or
push
jge
ficoml
mov
and
mov
sub
rcrl
aad
popa
xor
mov
imul
sub
paddb
clc
jne
stos
js
add
jle
arpl
lock
inc
and
mov
xor
add
push
inc
dec
inc
push
fldl
imul
xor
ja
lock
pop
add
divb
add
mov
and
sub
cmp
cmp
cmp
in
loop
icebp
cmp
jns
jmp
inc
sub
or
sub
xor
and
inc
mov
inc
inc
inc
inc
xor
sbb
aad
inc
mov
xor
sub
stos
mov
pop
sub
sub
pop
mov
pop
sub
lds
shlb
inc
ret
push
cmp
rcll
test
xor
subl
cmp
xor
rorl
js
inc
add
dec
jo
adcl
jb
jle
mov
inc
pop
sub
push
and
ds
or
adc
sub
push
outsb
xor
inc
sub
adc
mov
jae
inc
sub
push
push
and
sbb
lods
or
cld
fs
mov
rolb
mov
cwtl
loopne
pop
popa
or
lcall
add
xchg
test
shl
scas
lcall
or
dec
cs
xor
push
pusha
mov
mov
lret
outsb
jns
aaa
and
dec
flds
fs
push
dec
stos
pop
lcall
or
loop
jne
hlt
or
or
or
test
adc
xchg
adc
or
mov
ja
jnp
ljmpw
outsb
and
ret
outsl
add
sub
add
add
fistpl
push
jo
les
adc
mov
sbb
pop
sahf
or
add
fcmovnbe
or
mov
jmp
in
xor
add
dec
adc
ljmp
xor
xor
xchg
xor
add
cs
adc
push
xchg
dec
inc
pop
aad
inc
push
inc
mov
rolb
lods
lcall
xchg
fldt
mov
xchg
push
lcall
aad
push
push
insb
adc
pusha
inc
out
arpl
lods
adc
sbb
fiaddl
data16
cmp
inc
sbbb
cmp
jae
or
and
lds
nop
sbb
test
cmp
sub
jo
xor
pop
mov
inc
lret
je
sahf
push
nop
dec
mov
cli
and
dec
test
jne
push
push
jae
incb
inc
sub
movsb
sub
mov
ret
add
pop
leave
xchg
or
nop
or
je
sbb
push
or
mov
mov
add
inc
or
xor
mov
xor
mov
pop
insl
cmp
pop
sub
mov
sub
fiaddl
or
jae
aam
lods
das
pand
ret
enter
push
jp
dec
jl
fs
xchg
pop
inc
jb
mov
pushf
inc
inc
xor
xor
inc
bound
add
sub
rorl
xchg
or
or
cmp
imul
lahf
inc
pop
dec
je
mov
mov
or
pop
rcl
jbe
xchg
cmp
and
push
push
mov
or
lea
cmp
out
push
xor
inc
inc
mov
mov
xchg
xor
dec
xor
movb
mov
ss
inc
insl
push
test
movsl
dec
mov
inc
push
jbe
xor
dec
add
push
cmpsl
inc
sub
popa
inc
mov
iret
jae
add
adc
mov
add
jnp
mov
push
xchg
inc
xor
push
mov
ss
xor
pop
mov
jnp
xor
add
popa
add
popa
add
imul
fimull
inc
imul
jne
add
adc
jae
jae
adc
rolb
cmp
sbb
or
lea
or
adc
jge
jp
sti
push
adc
imul
cmp
inc
test
and
mov
push
nop
add
test
movsl
test
mov
lea
add
shrb
lock
sub
nop
addb
mov
adc
sbb
loope
or
cmp
adc
inc
imul
rcl
inc
fsubl
add
push
in
int3
xor
mov
testb
push
jo
dec
rcrl
cwtl
mov
test
bound
ret
mov
bound
lods
inc
scas
push
pop
ljmp
jns
rclb
lret
and
out
dec
push
push
push
imul
out
es
test
inc
adc
xchg
addb
adc
and
pop
lcall
test
inc
and
fwait
loopne
xor
mov
mov
xchg
fcompl
adc
lea
pop
and
or
adc
push
and
dec
bound
imul
xchg
fiaddl
push
mov
and
mov
les
sub
mov
mov
inc
pop
jl
pop
mov
mov
loop
cltd
push
movb
lea
mov
jno
adc
mov
inc
inc
out
mov
sbb
cmp
cmp
sbb
xchg
sbb
and
loopne
mov
adc
jo
pop
adc
shlb
add
inc
mov
push
cmc
mov
popf
subl
inc
and
mov
cwtl
inc
jp
lldt
sbb
arpl
adc
js
add
ss
in
xchg
mov
mov
pop
divl
orl
test
jne
push
xor
mov
nop
mov
in
fisttps
pop
repnz
pop
mov
jle
mov
fs
jg
dec
ud2
jns
das
mov
pop
clc
inc
pop
enter
adc
add
xlat
dec
outsl
xchg
cmp
jg
push
movsl
or
pop
mov
je
repnz
pop
fdivrs
setnp
test
hlt
mov
imull
sbb
nop
pop
fwait
xchg
js
mov
add
lahf
ret
vmwrite
in
mov
iret
mov
bt
inc
pop
enter
jno
mov
dec
psadbw
fdivrs
jae
xchg
or
stos
movq
mov
fistpll
ud2
jns
das
mov
imul
das
arpl
inc
pop
fsubrs
jl
pop
fcoms
fbstp
xor
stc
fbld
jecxz
mov
mov
int
insb
mov
inc
xchg
jle
dec
in
push
fcoms
or
xor
mov
rclb
jae
add
jno
pop
das
in
test
test
dec
sbb
jmp
or
jns
lret
or
xor
mov
daa
mov
mov
jnp
dec
pop
mov
and
mov
orb
and
insb
rclb
xchg
mov
jnp
outsb
aam
sub
inc
or
gs
xor
cmp
mov
add
add
add
and
add
and
xor
add
add
and
add
add
add
and
add
and
xor
add
mov
ret
lahf
or
pop
repnz
mov
or
pop
mov
xchg
or
popf
mov
or
xchg
mov
sub
das
cmp
jl
jno
repnz
xchg
mov
xchg
cmpb
pop
mov
mov
add
push
cltd
mov
push
insb
shlb
pop
lret
inc
flds
mov
mov
iret
or
and
pushf
aas
imul
push
loop
mov
addr16
lret
push
or
test
or
in
das
jnp
mov
andl
jmp
test
xchg
leave
lret
push
in
sahf
inc
pop
cmp
popf
mov
test
cmp
mov
pop
mov
adcl
int
adc
jb
jae
xor
push
cld
inc
lock
xor
je
icebp
sub
push
lods
push
pop
jno
jb
add
add
sub
rolb
rol
adc
mov
cwtl
sahf
arpl
add
outsl
pop
add
jno
inc
pop
jne
and
jno
movsb
dec
add
and
inc
and
rolb
xchg
das
inc
mov
test
push
and
jo
xchg
lock
nop
movsb
cwtl
adc
ss
add
push
jl
ss
xor
inc
cmp
xchg
dec
hlt
push
or
cmpl
les
fwait
pop
icebp
inc
add
inc
push
sbb
ljmp
inc
inc
jl
loopne
fyl2x
or
test
sbb
pop
or
icebp
sub
jnp
test
sti
popf
push
bound
pop
test
ja
imul
orl
clc
fstpt
mov
cmpsb
movsl
mov
bound
test
lods
mov
inc
jae
outsb
inc
imul
mov
inc
mov
cwtl
inc
xor
divb
inc
xor
je
ss
dec
lods
test
ret
push
fdivl
sbb
dec
outsb
test
mov
mov
mov
pop
gs
stos
dec
add
and
bound
add
movsb
orl
push
jl
add
sub
ljmp
push
mov
dec
inc
inc
pop
je
arpl
jle
add
pusha
pusha
lds
push
push
push
ljmp
sbb
push
out
push
ss
xorl
xor
pop
jb
add
aam
sub
or
add
cmp
inc
or
and
inc
cmp
mov
and
aas
ljmp
or
jo
test
or
roll
lods
jnp
mov
inc
dec
xor
cmp
jbe
or
js
inc
inc
xor
xor
pop
rcr
enter
aaa
add
add
inc
es
or
sub
add
rolb
add
pop
add
pop
rolb
jecxz
xorl
add
push
popa
or
insl
xchg
pop
sub
mov
imul
xor
cmp
fsubrs
mov
sub
add
dec
pop
jb
popa
sub
cltd
sub
fsubrs
movsl
flds
push
sub
xor
pop
scas
test
inc
repnz
cmpsb
xor
cld
mov
or
inc
mov
push
xchg
mov
sub
ds
dec
push
pop
xor
inc
or
add
fiaddl
fisubrl
or
adc
shll
xor
xchg
mov
xorb
mov
inc
pusha
add
mov
add
xor
rcrl
inc
inc
sub
scas
inc
xchg
jns
cmc
inc
add
inc
sub
add
pop
test
adc
call
jae
inc
jne
sbb
xchg
push
pop
lcall
push
enter
push
scas
inc
fsubrs
inc
sbb
push
cmp
jns
or
mov
push
adc
repnz
push
sbb
cmp
add
push
push
insl
pop
mov
mov
inc
xor
xchg
or
icebp
cli
jbe
push
hlt
and
je
jo
jo
or
sub
add
popa
fidivl
sbb
push
or
loope
mov
fimull
jecxz
sbb
decb
push
test
pop
or
or
push
xchg
mov
dec
xchg
lcall
imul
xchg
imul
sbb
jbe
mov
jae
bound
pop
arpl
ret
insb
scas
pop
fnstcw
push
scas
cmp
mov
pop
xchg
inc
xchg
xor
rclb
mov
adc
cmp
outsb
xchg
mov
test
dec
inc
movsb
push
cli
sub
mov
sub
fucomp
xor
inc
nop
and
inc
or
or
rcrb
sub
add
mov
adc
rol
or
xor
and
add
cmp
pop
test
mov
insl
add
or
and
inc
cmp
and
sub
adc
je
inc
mov
hlt
push
scas
mov
leave
dec
dec
dec
pop
add
orl
je
lock
fadds
test
orb
sub
inc
inc
sub
jb
popa
aaa
mov
test
inc
lods
adc
lds
shlb
les
mov
ss
jns
leave
push
xchg
cmp
shr
jnp
dec
jp
cs
add
add
dec
pop
jnp
mov
jg
mov
cs
xor
push
data16
popa
imul
leave
pushf
mov
or
pop
gs
cmp
aas
inc
jmp
push
jnp
mov
aaa
xor
sub
addr16
xchg
push
adc
xor
adc
and
or
push
ret
rolb
add
dec
sahf
insl
lret
outsl
xchg
pop
cltd
xchg
mov
and
jnp
mov
jp
lods
inc
add
adc
psllw
repnz
testl
pop
jge
jnp
xchg
inc
sahf
cmp
jmp
lds
aaa
in
lock
mov
xchg
leave
xchg
daa
dec
inc
xchg
jb
nop
cmp
arpl
leave
xchg
orl
je
mov
mov
mov
into
pop
mov
push
cmp
gs
insb
insb
pop
cwtl
in
mov
or
call
cmp
es
sahf
pop
gs
in
xchg
call
inc
pop
test
jae
data16
mov
mov
das
pop
cmp
jnp
daa
iret
push
jnp
mov
inc
pop
pushf
mov
nop
xchg
sub
xchg
daa
dec
sahf
pop
mov
jo
popf
sbb
in
ja
imul
sbbb
cld
scas
fcomps
outsb
pop
jg
xlat
mov
xor
sub
test
ja
nopl
call
and
test
rolb
jns
out
sahf
cmp
fwait
inc
pop
lcall
in
jg
pop
push
mov
xchg
xor
das
sbbl
pop
push
dec
mov
pop
loope
in
inc
sbb
xlat
jne
adc
out
mov
repnz
mov
inc
ja
sbb
push
setnp
cmp
daa
mov
mov
lods
mov
icebp
aas
xor
mov
shll
stos
jns
ret
fisttpll
cltd
mov
cmp
push
ret
sub
mov
mov
shrb
cld
sub
xchg
iret
xchg
adc
mov
pop
sbb
aas
mov
andb
jp
pop
in
dec
ja
insl
aaa
out
dec
pushf
rcl
xor
push
popa
out
pop
popf
jnp
add
xchg
in
and
pop
mov
in
or
iret
cmpsl
xchg
dec
sahf
cld
fiadds
pop
mov
cmp
and
mov
pop
ja
xorl
pop
addr16
xlat
rcr
in
fsts
xchg
test
mov
js
je
pop
lea
pop
mov
cmp
sbb
popf
or
js
mov
test
pop
xchg
nop
addr16
ja
faddl
ja
pusha
addr16
js
jns
scas
jg
jp
pop
jbe
or
ror
incl
cwtl
push
leave
xchg
daa
dec
jno
xchg
push
in
loope
dec
lea
test
push
xorl
sbb
out
add
push
ret
aas
jp
pop
lahf
sbb
or
iret
jecxz
scas
xor
daa
dec
jno
jne
daa
ja
in
and
mov
adc
filds
mov
mov
push
test
dec
sbb
or
mov
jns
insb
jg
sub
daa
dec
sahf
xorl
or
incl
sahf
or
mov
pop
lahf
movsl
push
xchg
fistpll
in
inc
pop
mov
fdivs
sahf
cmp
jnp
test
in
cwtl
pop
test
imul
pop
aas
ss
sbbl
repz
leave
mov
or
pop
mov
cmp
repnz
test
sub
xchg
fwait
icebp
xorl
jne
paddsb
ss
in
call
pop
sbb
jnp
movsl
pop
xchg
scas
inc
pop
daa
dec
sahf
cmp
sub
sub
jbe
jle
pop
pusha
dec
sahf
lea
imul
stos
mov
or
or
repz
das
les
or
sub
dec
sub
scas
lea
insb
adc
mov
test
sbb
jl
imul
inc
jp
push
divl
and
add
inc
sbb
leave
mov
pop
xorl
insb
xor
cwtl
sbb
cmpb
shlb
in
rorl
cmp
insl
andl
faddl
jp
js
sahf
or
jne
lcall
jle
in
fldenv
lahf
push
adc
xchg
clc
xlat
fldenv
sbb
pop
jns
imull
in
adc
cmp
fsubs
shll
fsubs
cmp
fs
adc
hlt
fisttps
pop
jg,pt
popa
mov
popf
pop
orb
call
ja
adc
insb
pop
jnp
mov
pop
call
andb
movsb
daa
cmp
inc
pop
outsb
nop
push
imul
mov
pop
outsl
add
imul
pushl
or
scas
push
push
addl
pop
sbb
sbb
add
in
rcrl
outsl
pop
fwait
scas
mov
push
loope
pusha
ja
pop
jo
out
mov
popl
jns
mov
sahf
pop
mov
jo
jg
ljmp
pop
mov
dec
add
mov
call
jo
add
xchg
mov
pop
push
or
fdivrs
jo
roll
mov
sub
mov
jo
and
mov
or
imul
fstl
pusha
imul
add
add
add
dec
lock
mov
inc
mov
mov
pop
adc
lds
lods
sub
or
push
adc
adc
jle
cld
popa
rolb
lea
movsb
and
js
add
pop
pop
mov
scas
jge
mov
adc
sub
pop
pop
inc
xor
add
pop
sub
aaa
ja
inc
inc
inc
adc
push
mov
jge
xor
aam
dec
inc
xor
push
add
add
add
sub
dec
scas
imul
or
add
xlat
xor
or
xchg
das
mov
and
cmp
inc
add
pusha
shlb
add
pop
xchg
jmp
frstor
pcmpgtw
loope
sti
mov
jae
add
inc
sbb
mov
inc
xor
mov
push
lret
or
es
xlat
or
pop
and
fs
scas
and
cmp
sbb
mov
das
jl
jmp
mov
jns
jo
cmp
fdivl
and
add
push
es
lock
lea
cmp
addr16
outsb
imul
or
insl
or
jne
ffreep
xchg
and
push
or
scas
pop
outsb
add
inc
and
shr
insb
inc
add
add
fld
add
fisttps
out
add
mov
outsb
lds
inc
shlb
inc
xorb
fldt
xchg
das
add
fldt
sbb
pop
imul
test
mov
mov
pop
cltd
pusha
add
cmp
mov
pop
ror
pusha
add
add
cmpsb
jne
add
dec
popa
mov
add
inc
mov
jo
xor
insb
in
add
sub
mov
call
jg
lea
fst
test
fmuls
rcrl
mov
dec
lret
popf
into
loope
adc
sti
pop
adc
pop
jne
xlat
stc
aam
push
mov
mov
fld1
fcompl
mov
in
shrb
pop
mov
mov
leave
ret
push
push
fisttpll
sbb
dec
outsl
mov
jae
faddl
addr16
jnp
or
mov
mov
fildl
cmp
arpl
cmp
rclb
das
and
mov
cmp
fistpl
in
pop
jae
rcr
cld
mov
or
into
jne
cmc
stc
sbb
inc
cmp
mov
mov
loope
jne
pop
addr16
jno
inc
cmp
aaa
rcrl
pop
mov
jl
arpl
sbb
sub
xor
pushf
es
ss
loopne
push
inc
pop
add
sar
add
pop
xor
push
xorl
outsb
xchg
push
mov
imul
ja
and
fldt
sbb
dec
cmp
sub
loop
stos
popf
and
outsb
loopne
mov
cmp
jbe
xlat
fsubrl
cmp
adc
cs
je
je
and
add
faddl
adc
or
mov
je
repnz
mov
fs
or
shlb
jo
inc
in
mov
inc
pop
enter
fcmovne
add
xor
outsl
and
mov
mov
inc
push
mov
add
cmp
lea
jp
xor
xor
movsb
cs
add
mov
sub
xor
add
sti
outsb
popf
into
in
cmpsl
pop
mov
btr
add
imul
jb
pushf
cld
push
xor
and
fdiv
ficomps
add
mov
out
add
popf
mov
sub
xchg
inc
push
push
repnz
out
fldl
mov
mov
fs
jae
pop
xlat
jne
outsl
cltd
jne
mov
jb
insb
xor
add
out
pop
and
cwtl
jbe
filds
shlb
and
push
sbb
mov
cmp
dec
push
fidivl
insl
inc
jno
lods
jecxz
fldl
jl
cmpl
add
popa
inc
ret
ret
push
imul
cs
jbe
mov
mov
je
inc
pop
je
jb
mov
scas
stos
mov
int
cmc
push
mov
not
add
jbe
mov
bound
dec
xor
pop
push
js
inc
fnsave
xor
jns
sti
lods
add
mov
subb
xor
insb
das
dec
fwait
es
jne
adc
cmp
bound
das
je
mov
add
repz
add
mov
addr16
mov
adc
pop
fwait
les
cltd
mov
scas
jb
out
cmp
ja
aas
mov
xor
add
or
or
push
xor
cmpl
ficoml
js
clc
sahf
ret
mov
bnd
cmp
scas
mov
inc
scas
fwait
add
and
adc
insb
and
or
rclb
jb
push
xor
ret
add
jecxz
push
mov
cmpsb
popa
insb
pop
sbbb
test
fidivl
or
mov
mov
push
xchg
rorb
dec
cmpsb
mov
mov
filds
insl
gs
cmp
mov
cmpl
mov
je
rolb
inc
mov
les
sbb
cmc
jb
insl
bound
jp
inc
lret
inc
mov
jno
hlt
arpl
imul
pop
ret
sarl
iret
iret
add
inc
fisttpl
sbb
add
mov
das
cmp
and
push
movb
mov
insl
gs
mov
push
or
arpl
leave
popl
adc
cs
clc
dec
repz
fcompl
inc
mov
ljmp
addb
sub
ja
addl
add
repz
add
lahf
imulb
outsb
das
mov
cs
mov
jns
pusha
fnstsw
ret
xor
mov
test
je
xor
aas
roll
xchg
testb
loop
dec
jmp
addb
mov
jne
jge
inc
inc
push
xlat
cmp
mov
mov
adc
or
mov
jmp
or
fucomip
out
es
mov
mov
cmpb
cmp
icebp
add
cmp
insb
jecxz
test
out
jns
div
jae
sbb
sti
add
jo
jb
loopne
outsl
cmova
pop
ficompl
shrl
add
cmpsl
mov
add
mov
inc
test
sahf
cvtpi2ps
jns
cmp
pop
add
data16
jnp
and
push
sub
sbb
dec
es
cmp
insl
into
stos
adc
lock
mov
stos
pop
andb
dec
pop
imul
jae
adc
mov
add
push
stos
into
inc
mov
aad
mov
int3
push
aaa
pop
aad
push
mov
scas
add
adc
clc
movsl
pop
imul
or
mov
std
cmp
int3
dec
cmp
pop
mov
sbb
adc
mov
aaa
and
data16
jo
ds
ja
frstor
imul
adc
lcall
iret
test
cmp
jb
jnp
mov
mov
mov
xor
in
or
push
test
fiadds
mov
jmp
xchg
and
and
ljmp
push
gs
stos
push
popa
outsb
imul
xchg
mov
mov
insl
mov
mov
fiaddl
and
test
ss
out
or
add
push
mov
jo
add
loopne
or
inc
lods
fwait
push
mov
push
les
cmpsl
jbe
jne
arpl
push
hlt
into
cmp
das
pop
je
jo
jne
push
hlt
push
adc
dec
lret
cwtl
les
fcmovnbe
test
mov
ret
jno
dec
push
pop
das
dec
pop
repnz
sbb
add
push
les
sbb
sbb
daa
daa
bound
or
push
inc
push
sub
sub
cwtl
dec
outsb
sbb
xchg
mov
sub
xlat
aad
dec
sti
cmpb
xchg
sub
sbb
ret
mov
test
and
sub
pop
ret
adcb
or
push
mov
sub
ss
enter
sbb
add
jmp
mov
roll
xchg
push
inc
dec
insl
mov
aam
je
dec
into
inc
mov
iret
mov
rcrl
mov
inc
es
inc
fsubl
adc
sahf
and
pcmpgtb
rclb
movsl
stos
sbb
mov
lods
pop
scas
add
pushl
inc
ret
dec
mov
aas
and
inc
jnp
pop
pop
data16
fs
jbe
outsb
rorb
mov
sbb
mov
cli
dec
js
mov
fcmovbe
cmp
mov
test
push
in
dec
mov
cmp
and
mov
mov
sbb
push
sbb
xchg
mov
sarl
popa
lods
pop
movsb
test
mov
cmp
mov
inc
sbb
sbb
fidivrs
out
push
sbb
push
jecxz
movsb
mov
out
mov
scas
push
pop
pop
pop
pop
test
mov
jg
fiaddl
pop
lret
inc
pop
cs
push
dec
movb
stc
sbb
aas
cmp
mov
movsl
or
adc
aaa
mov
jo
lods
loope
fidivs
dec
jle
lcall
inc
sub
lret
rclb
mov
rorb
sbb
sbb
lcall
sub
jg
je
inc
js
insl
inc
or
push
call
adc
sub
ja
in
in
les
push
push
ja
mov
pop
xchg
cltd
loopne
lret
les
es
jne
les
xchg
iret
leave
leave
mov
je
pop
loope
inc
les
add
jb
jns
pop
ja
xor
add
add
inc
movl
cmp
fcompl
xchg
insb
pop
js
subb
incb
clc
shlb
test
push
sbb
sahf
rcl
xor
add
dec
mov
fisubrs
sbb
push
or
in
cmp
hlt
cltd
cs
sub
ja
sbb
stos
push
xor
cltd
ja
or
sahf
xchg
mov
scas
xchg
mov
mov
inc
xchg
insb
push
mov
ss
aam
sarb
sub
inc
test
loope
xchg
stos
mov
popa
aad
sbb
dec
fs
insl
test
mov
movsl
fistps
ss
pop
pop
sbb
mov
or
mov
push
shrb
inc
and
pop
sbb
shrl
inc
or
inc
mov
mov
arpl
pop
in
and
jae
pop
or
push
and
ja
push
ljmp
scas
and
mov
mov
jbe
std
gs
dec
pop
xor
add
xor
jbe
mov
inc
inc
je
xchg
pop
test
sbb
jbe
mov
cmp
in
and
jbe
cmp
bound
pop
aaa
pop
xchg
shrl
xchg
insb
cmp
pop
or
jno
rorl
jmp
fdivs
or
rcl
cmc
add
jne
or
mov
mov
jp
mov
jns
mov
test
lds
mov
dec
fisubl
mov
insl
dec
aad
mov
je
xchg
dec
aam
stos
add
in
ss
add
push
sbb
inc
inc
xlat
aam
add
clc
mov
cltd
roll
push
cld
mov
out
inc
pop
push
xchg
jg
pop
dec
fsubr
lret
arpl
das
push
enter
push
inc
sub
insb
sub
push
andl
mov
rclb
cmp
rcrl
push
repnz
ds
popa
mov
popf
cltd
aaa
mov
xchg
loopne
shl
xchg
adc
ds
and
or
bound
std
pop
mov
mov
iret
mov
add
mov
sarl
mov
xchg
fmull
inc
add
sub
adc
jo
xor
imul
cmp
pusha
nop
inc
mov
sarb
sbbb
mov
lea
dec
inc
sub
push
test
push
dec
xor
mov
adc
into
pop
sbb
push
cmp
cmp
adc
adcb
out
inc
popa
aas
lret
sub
into
insb
shl
cmp
jb
mov
dec
jns
xchg
fcomps
mov
in
std
dec
imul
loopne
sbb
cmp
aad
xchg
dec
xchg
std
inc
mov
out
add
lea
jo
imul
inc
push
bound
shll
inc
addb
rorb
inc
or
or
jle
insb
pop
insb
xor
jbe
add
inc
xor
pop
add
sbb
dec
clc
pop
mov
sbb
add
pusha
call
lds
adcb
lods
and
jbe
pop
jl
test
insl
jmp
or
xor
je
jne
inc
sub
sub
xor
in
outsl
lods
call
push
movsb
dec
leave
cs
mov
or
add
lret
and
add
pop
loope
pop
addb
pop
pop
push
sub
insl
pusha
js
call
pop
pop
cmp
pop
lahf
rcrl
cmp
inc
and
adc
add
mov
jge
or
movsl
or
inc
xor
mov
mov
imul
mov
pop
add
mov
loop
pushf
dec
lea
lret
dec
xor
loopne
dec
cmp
loop
scas
imul
imul
mov
mov
idivb
fimuls
imul
cmpb
das
mov
mov
icebp
cmp
frstor
jge
ficoms
sarb
and
jb
call
inc
pop
pop
cmp
je
ljmp
je
mov
mov
jb
rolb
and
or
movsl
leave
xchg
jne
sarl
add
or
popa
jae
cmp
push
arpl
iret
loopne
jbe
adc
sbb
sbb
mov
xorb
xor
cwtl
mov
pop
bound
stos
sbb
jne
xor
rcrb
js
test
cmpsl
bound
sarb
mov
stc
in
aam
xchg
adc
dec
aad
and
ljmp
scas
and
jae
mov
dec
jns
sub
outsb
jne
ret
imull
rorb
sub
pop
xchg
bound
ss
repnz
add
jo
mov
aam
int3
push
stc
les
xchg
in
adc
cmp
push
popa
les
mov
inc
mov
sbb
pop
je
scas
cmp
adc
mov
push
dec
stc
mov
aaa
cmp
mov
mov
lcall
ss
leave
cmp
out
xor
mov
sub
mov
sbb
popa
push
shlb
xor
add
sbb
mov
jbe
pop
pop
mov
insl
add
jae
mov
dec
push
shl
push
leave
jne
sbb
rcl
xor
das
aas
pop
push
in
lock
sti
mov
orb
aas
daa
adc
rol
into
bound
adc
push
mov
shl
mov
shrb
inc
push
nop
popf
xor
xchg
jns
xor
dec
xor
cmp
mov
dec
sub
push
enter
xchg
push
dec
cwtl
jb
sbb
adc
mov
jb
test
dec
and
popf
cmp
push
sarl
test
rcr
ficoms
mov
cmp
imul
sub
add
jbe
insb
push
in
mov
add
push
jmp
inc
dec
dec
add
mov
loopne
adc
es
cmpsl
popa
adc
or
iret
insb
xchg
inc
in
push
pop
fsub
loopne
xchg
sub
cmpsb
inc
inc
xchg
and
mov
imul
pop
pop
shll
subb
jae
sbb
or
adc
push
mov
sbb
push
xchg
push
sub
inc
xchg
fadds
xor
adc
cmpsl
inc
push
imul
mov
xor
add
dec
sahf
sub
mov
enter
addr16
dec
mov
jl
or
cmp
xor
ljmp
jp
adc
xor
cmpsb
cwtl
daa
in
sarl
test
push
ror
cmpsl
and
scas
mov
xchg
and
jmp
add
roll
mov
inc
cmp
call
js
ss
push
pop
push
aaa
in
xor
in
cmp
insl
popa
or
shll
add
pop
test
jbe
adc
mov
cmpsb
xchg
add
ds
and
or
mov
adc
test
mov
add
mov
mov
sub
fwait
xor
lock
cmpsb
adc
dec
xchg
jo
push
call
jae
xchg
add
dec
dec
xor
cmpsb
add
sub
int3
sahf
pop
jge
jb
bound
mov
add
or
cmp
adc
push
imul
in
push
es
push
cmp
pusha
jo
rcrl
mov
lret
pop
sbb
sbb
aas
imul
xor
rcrb
mov
pop
inc
mov
pop
xchg
enter
das
sub
push
jl
dec
or
fisttpll
push
sub
insl
and
mov
fidivs
mov
mov
pushf
and
pop
or
inc
sbb
arpl
inc
arpl
enter
shrb
sub
pop
adc
mov
pusha
into
lahf
xchg
addb
xchg
mov
pop
push
jnp
ljmp
stos
lcall
jecxz
push
mov
es
jle
jecxz
je
ss
scas
jne
push
sub
pop
mov
mov
lahf
push
daa
inc
insl
call
jae
push
xor
inc
inc
mov
push
push
inc
adc
inc
sarb
mov
push
adc
mov
mov
pusha
jne
jge
das
push
xor
subl
fbstp
es
fadds
pop
aam
push
mov
lret
and
mov
imulb
cli
add
adc
xor
push
scas
mov
es
shl
cs
cli
and
rolb
les
imul
lods
jno
inc
mov
push
test
adc
int
loope
jo
sub
push
inc
pop
dec
jns
addr16
sahf
inc
pop
pop
mov
fldenv
mov
and
gs
popa
imul
xor
pop
rol
movsb
lahf
lods
fisubrs
add
mov
mov
mov
ret
pop
pop
inc
pop
scas
test
pushf
push
lods
add
add
stos
andl
cli
movsl
bound
xor
sub
mov
inc
inc
sbb
sub
ja
inc
rcl
test
pop
scas
rorl
jg
jge
leave
mov
adc
sbb
push
loope
push
sub
rclb
outsl
cld
pop
fidivl
pusha
jb
or
xchg
test
dec
stos
outsl
repz
cwtl
out
fcmovbe
addb
inc
sbb
stos
bound
or
mov
sub
pop
cld
orb
mov
stos
lods
mov
lret
add
andps
pop
xchg
xor
and
inc
stos
pop
popa
insb
lods
fisttpll
xchg
jecxz
push
int
call
andl
and
inc
jp
dec
ret
or
scas
jnp
mov
inc
mov
in
cmp
scas
xchg
addb
faddp
mov
pop
add
mov
orb
sub
add
adc
push
mov
shll
pop
sahf
outsl
call
xchg
and
popa
rol
test
xor
sbb
sub
or
and
in
xor
test
bound
jo
ret
shll
pop
shl
sbb
loopne
rcl
nop
fs
jns
inc
or
popa
movsl
outsb
cmp
orb
iret
pop
xor
mov
inc
jbe
in
jge
adc
sbb
sbb
into
insl
ret
jb
cmpsb
mov
mov
push
mov
insl
lods
mov
call
pop
sbb
add
mov
mov
xlat
lods
insb
xlat
pusha
daa
jbe
add
inc
inc
xor
pop
dec
sbb
mov
xchg
jecxz
out
fsubp
adc
pop
jno
andb
xor
aam
or
in
clc
sub
jle
add
lcall
movsb
fisubrl
xchg
and
popa
mov
pop
inc
fucomip
mov
data16
add
mov
ret
push
sbb
loope
push
pop
adc
loopne
arpl
and
dec
lea
out
add
mov
enter
mov
inc
fcoms
or
mov
das
outsb
pop
pop
pusha
aad
leave
sbb
or
pushf
nop
popa
movsl
mov
mov
push
cmp
popa
lods
ret
into
data16
gs
cmp
fsubs
add
sbb
jno
push
mov
jg
xlat
daa
adc
inc
mov
ret
or
mov
mov
xlat
aad
orl
adc
pop
int3
mov
imul
popa
les
mov
aad
xlat
insl
out
sub
pusha
aaa
cmpsb
stos
mov
push
xor
into
imul
pop
fs
pusha
movsl
fwait
xor
dec
rorb
gs
nop
cmp
mov
inc
clc
mov
shll
mov
jbe
and
mov
and
mov
rolb
arpl
rclb
cmpsb
stos
push
add
roll
nop
fsubrp
push
mov
fnstcw
or
fmuls
imul
fsts
sub
ret
inc
push
fsubrl
les
inc
aas
inc
popa
mov
addb
iret
popa
ret
sub
fwait
pop
mov
and
xchg
push
fcomp
add
mov
push
xor
jo
inc
or
xor
xor
sub
xlat
pop
loopne
sub
dec
insl
push
mov
mov
repnz
lock
jno
jmp
mov
push
mov
scas
lods
les
xchg
and
cmc
mov
call
clc
imulb
es
pop
pop
insl
orb
jae
adc
mov
gs
xor
test
adc
inc
loopne
movsl
jnp
movsb
cli
sbb
pop
jne
jne
pusha
add
lret
daa
cwtl
mov
mov
lods
popf
jg
push
dec
cmpsb
mov
addr16
das
push
inc
sahf
jo
mov
cmpsb
push
jns
or
clc
rdmsr
clc
imul
mov
add
or
jp
ds
cmp
xchg
pop
fcmovne
add
add
adc
sub
jbe
arpl
out
in
add
rclb
jnp
adc
mov
add
nop
mov
addb
ret
imul
fs
sub
pushf
jp
mov
push
push
xor
push
jge
xchg
nop
push
inc
xor
aam
jmp
fiaddl
xor
mov
jecxz
mov
push
mov
adcl
adc
sub
inc
out
arpl
push
cmp
shrb
inc
pop
subb
push
adc
filds
xchg
and
fadds
jae
lcall
adc
and
fimull
mov
inc
inc
push
push
add
mov
test
mov
stos
fs
push
push
push
xor
dec
inc
push
xchg
push
and
xchg
push
fs
push
leave
push
xor
push
inc
push
xchg
mov
xchg
push
push
add
test
movsb
and
add
add
push
adc
test
mov
add
jns
inc
sbb
addb
sbb
xor
adcb
inc
sbb
sub
adc
xor
mov
inc
or
sbb
push
stos
sub
outsl
pop
mull
push
add
outsb
or
push
add
push
test
cmp
gs
push
popa
imul
jge
gs
push
mov
inc
sub
test
push
xor
add
pop
sar
or
xor
js
push
mov
and
fdivs
mov
mov
inc
dec
add
arpl
mov
inc
rclb
adc
inc
adc
jmp
fldcw
add
adc
jbe
in
mov
xor
add
adc
orb
adc
jo
push
add
mov
stos
mov
push
or
popa
inc
push
inc
das
fbstp
add
add
adc
inc
add
popa
adc
pop
mov
push
push
insb
or
mov
imul
ja
mov
jl
xchg
jns
imul
xor
or
or
ss
arpl
and
mov
push
cs
outsb
inc
or
jno
add
jns
outsl
push
adc
push
data16
fidivl
or
push
pusha
icebp
dec
inc
push
imul
je
bound
jae
test
inc
xchg
mov
cmpb
push
add
bound
xor
ret
sub
rcrb
daa
xchg
dec
outsl
jbe
dec
or
push
cs
insb
and
add
ljmp
push
rolb
dec
cmp
and
jl
push
out
inc
and
andb
rorl
sub
mov
sub
push
push
test
xchg
dec
inc
jo
push
pop
dec
lcall
or
dec
xor
roll
in
lock
jge
pop
mov
jbe
inc
dec
pushw
push
outsb
insl
adc
add
mov
xchg
xchg
fwait
sub
pop
mov
xchg
es
js
mov
imul
push
imul
add
add
movsl
lcall
test
sbb
gs
mov
pusha
insb
pop
gs
mov
mov
leave
add
add
data16
xchg
push
push
push
popa
bound
xor
mov
or
jne
fmull
testb
shrb
and
push
seto
in
dec
xor
jle
and
sbb
xchg
and
loopne
mov
and
add
or
rorb
pcmpgtb
or
lods
imul
jo
jmp
jmp
add
xchg
inc
xchg
adc
fisttpl
imul
stc
mov
loopne
xchg
sub
sbb
mov
jg
rclb
mov
arpl
push
lods
or
mov
pop
ret
popl
insb
fs
cmpsb
imul
lcall
xchg
add
inc
xchg
mov
fildl
loop
aad
sbb
pop
aas
mov
push
insl
inc
inc
push
inc
inc
dec
pop
sti
pop
mov
pop
adc
inc
inc
push
xor
inc
inc
inc
sbb
in
jmp
xlat
inc
push
xor
or
cmp
data16
test
lea
movsb
pop
xor
jbe
pop
idivb
xor
push
inc
test
cs
int3
adc
inc
imul
imul
imul
push
insb
ret
data16
xor
popa
loop
stos
stos
sbb
dec
inc
outsb
fs
shll
pop
jb
or
add
cld
xchg
pop
inc
xlat
js
popa
inc
pop
fs
or
sub
out
outsl
jge
rorl
cmpsb
imul
insb
or
arpl
and
or
pop
or
mov
jo
insb
outsb
insb
mov
add
push
adc
je
jns
popf
mov
arpl
jo
aaa
test
push
sahf
or
gs
lret
data16
arpl
insl
bound
or
or
pop
and
fiadds
lret
pop
es
adc
xchg
pop
add
jo
mov
push
fnstenv
sub
insb
testb
sub
jb
push
jno
and
jb
fwait
les
sub
loope
aaa
shrb
pop
inc
xor
pop
dec
inc
pop
sbb
pop
mov
push
adc
cmp
addb
jmp
loopne
inc
dec
pushf
das
int3
jb
xor
je
mov
adc
shrb
or
xchg
lods
imul
sbb
pop
add
mov
fcmovnbe
sbb
add
inc
scas
rol
adcl
icebp
or
add
sbb
xorl
dec
push
xchg
js
stos
aam
roll
sbb
adc
loop
pop
jae
xor
ret
pop
call
dec
pusha
inc
add
cmp
sbb
dec
push
popf
add
adc
sub
mov
call
xor
and
or
jb
sbb
imulb
jb
push
outsl
jae
mov
dec
stos
outsb
dec
dec
and
arpl
pop
push
nop
inc
data16
mov
loopne
or
loopne
addr16
lods
cmp
testb
dec
je
sbb
popa
inc
call
dec
push
adc
jbe
dec
push
js
adc
test
clc
pop
fs
rclb
inc
pcmpgtd
je
or
and
add
int
fsts
jo
mov
inc
leave
out
sbb
dec
pop
mov
movsl
loopne
or
xor
jecxz
enter
mov
sub
sub
jo
sbb
sub
push
or
inc
inc
and
adc
sub
jbe
lcall
andb
inc
lock
inc
scas
pop
inc
ret
sub
dec
add
adc
mov
xor
leave
inc
xor
xchg
lcall
mov
movsl
int
adc
mov
xlat
pop
js
aas
mov
mov
and
and
sbb
sbb
pop
sbb
and
pushl
add
push
xor
push
push
pop
ljmp
lcall
push
or
adc
clts
and
adc
sbb
call
adc
add
cmp
movaps
pop
cmp
adc
or
pop
and
and
sbb
jmp
adc
sub
push
insl
adc
adc
or
or
xor
pop
sub
mov
sbb
decl
sbb
cmp
sbb
adc
pop
adc
dec
das
and
dec
and
sbb
push
in
in
pushl
sub
or
adc
cmp
inc
dec
push
and
or
push
pop
adc
sbb
adc
sbb
push
es
or
cmp
pop
das
adc
bt
sub
sbb
or
in
or
and
das
and
or
push
or
adc
aam
pop
sbb
insl
push
or
ds
push
clts
adc
or
in
call
movaps
and
push
imul
adc
adc
pop
cmp
in
mov
dec
adc
push
adc
and
and
in
push
or
sbb
adc
pop
or
adc
in
call
sbb
pop
es
push
xor
and
scas
sbb
or
fildll
push
adc
sub
push
or
adc
sbb
scas
es
cmp
sbb
adc
adc
and
cmp
test
imulb
or
or
cmp
pop
jne
adc
sbb
pop
sub
push
add
adc
and
adc
pop
or
sbbb
or
mov
cmp
cmp
push
sbb
adc
or
and
sub
or
daa
and
or
and
sbb
add
adc
sysexit
pop
or
add
fs
push
and
adc
xor
addr16
ret
xor
add
adc
daa
or
pop
dec
sub
sub
sbb
or
sbb
pop
push
and
and
int
notb
sbb
ss
mov
push
or
sbb
lock
cmpsb
push
xor
adc
adc
sbb
test
adc
sbb
and
and
jg
in
test
push
jb
and
mov
push
and
fistps
outsl
daa
or
cmp
sbb
and
xor
adc
sbb
sbb
mov
or
or
inc
or
push
ss
in
jbe
jo
and
and
sbb
lock
or
sbb
mov
mov
pop
adc
adc
mov
or
ds
dec
and
sbb
rclb
mov
cwtl
sbb
test
pusha
sub
jg
arpl
sbb
or
push
dec
sbb
xchg
adc
pop
mov
inc
arpl
insl
or
or
arpl
push
pop
sub
lcall
or
or
push
daa
test
or
jnp
sbb
mov
adc
or
aam
or
dec
mov
lahf
ret
pop
nop
and
xor
insl
sbb
roll
andb
adc
pop
sub
sbb
sbb
es
jle
sub
mov
push
js
or
adc
mov
lea
sub
adc
push
or
scas
sbb
pop
imul
insl
lods
shll
cmp
popa
adc
imul
shll
sbb
dec
test
popa
sbb
ja
lock
das
push
fsubs
adc
and
and
insb
lods
mov
add
cmc
in
cs
sbb
es
push
loopne
inc
jbe
jmp
int
push
wbinvd
adc
xor
cmp
mov
or
xlat
adc
push
int3
adc
mov
sti
dec
test
mov
insl
or
push
and
or
sub
add
add
cmp
or
adc
add
jno
sbb
push
cmp
or
sarl
adc
push
push
mov
ret
mov
adc
or
xor
cmp
sub
fs
add
adc
sbb
scas
push
decb
sbb
pop
jecxz
or
push
cmp
inc
sub
add
out
fldt
or
push
mov
ljmp
movsb
cli
lods
test
and
sub
sub
pop
sbb
push
arpl
adc
and
lock
pop
push
jb
xchg
push
sbb
xor
jae
sub
sbb
ljmp
xor
test
dec
and
insl
adc
or
pminub
sbb
pushw
imul
fisubrs
movsl
sbb
adc
inc
push
cmp
lods
fistpl
sbbl
pop
or
adc
jecxz
sub
subb
je
and
cmpsb
or
ret
divb
cmp
or
sub
insl
insl
push
cmp
jb
adc
or
mov
mov
or
or
push
and
outsb
testl
or
sbbl
and
mov
add
xchg
cmp
sbb
je
cmp
stos
mov
aam
dec
add
pop
xor
mov
pusha
and
adc
nop
sbb
shlb
in
mov
clc
lea
pusha
adc
push
add
xlat
cmp
jns
mov
call
fcmovnbe
pop
and
sub
lods
jbe
cs
add
xor
jae
sub
fimuls
dec
inc
dec
push
fdivrs
inc
jne
cld
dec
daa
push
push
out
adc
mov
popa
inc
adc
adc
or
sbb
adc
fiaddl
xchg
fldt
insl
rcll
xor
aaa
sbb
sti
adc
xchg
pop
push
ja
xor
mov
test
and
dec
sarb
aas
mov
lods
inc
cmp
add
pop
int
lahf
or
aaa
pop
or
lods
push
ja
push
adc
add
sub
sub
lds
pop
add
mov
pop
fucomi
sbb
je
popa
mov
sub
lods
pop
fdivs
jno
push
or
xor
mov
lea
dec
aas
pop
outsl
push
add
cmp
pop
push
sbb
jp
sbb
pop
adc
ret
test
jno
pop
or
mov
sub
add
pop
sub
insl
shr
or
and
pop
or
mov
sub
inc
or
adc
jo
aam
mov
imul
les
adc
scas
fstl
test
cmp
adc
push
fwait
mov
mov
fcomp
aas
shrb
push
sub
call
jbe
and
cmp
xor
sub
sub
movsl
pop
pop
sbb
sub
or
sbb
fbstp
daa
ds
jo
outsb
outsl
push
xor
loopne
test
ret
or
add
insl
mov
push
aas
xchg
call
pop
sbb
lock
inc
or
sub
xor
mov
sub
cli
fs
imul
inc
pop
cmp
jge
enter
dec
xor
imul
sub
sbb
and
sub
jb
or
jle
cmp
aam
sbb
negl
pop
clc
add
dec
push
cmp
ror
xchg
or
xchg
dec
jne
rorl
adc
and
das
aas
push
pop
adc
xchg
test
jp
mov
sbb
fcmovbe
mov
sbb
sub
aaa
push
bound
mov
pop
cmp
imul
cwtl
xor
and
lea
push
pop
and
imul
cmp
push
adc
lods
dec
orb
pop
clc
push
jmp
sbb
dec
adc
fsubp
push
or
xor
adc
das
xor
mov
repz
das
orb
mov
je
xor
adc
push
sbb
test
or
adc
fcoms
sbb
and
push
or
cli
pop
outsb
push
sahf
or
dec
xor
adc
push
inc
pop
loopne
aaa
mov
cmp
sbb
xor
sbb
lcall
inc
sti
daa
pop
sbb
and
dec
adc
push
jle
ret
mov
lods
or
sub
mov
add
testb
stos
jmp
sbb
or
cld
or
adc
movb
and
sbb
sub
fisubl
pop
add
sbb
sbb
cmp
push
fistl
jno
cmpsl
or
test
push
popa
mov
push
sbb
fwait
dec
das
push
sbb
or
into
loopne
xchg
sub
test
insl
push
loope
sub
xchg
or
out
push
and
adc
or
adc
and
sbb
push
test
or
adc
push
sbb
mov
cmp
mov
mov
out
inc
fs
cmp
sub
mov
mov
loop
lcall
adc
pop
sub
mov
clc
xor
stos
or
xor
push
loop
sub
xor
in
add
pop
or
mov
or
xor
insl
or
push
or
stos
inc
cmp
sti
insl
scas
adc
mov
aam
and
dec
pop
push
and
and
inc
inc
sub
push
ss
pop
xor
pop
inc
sub
and
adc
cmp
mov
pop
add
imul
xor
ret
push
adc
outsl
cld
ss
pop
xchg
in
ret
sbb
daa
sbb
push
push
mov
xchg
add
push
popf
push
in
orl
shll
adc
mov
cmp
mov
sub
sbb
sbb
das
xor
pop
push
sub
add
adc
and
push
cs
or
push
hlt
xchg
dec
xchg
xor
adc
and
pop
cmp
xor
push
sub
sbb
pop
outsl
inc
ja
push
cmp
movsl
xchg
jo
sbb
pushf
and
xchg
incl
jns
adc
push
lds
sub
xlat
add
in
sbb
adc
xor
xchg
sbb
mov
jnp
gs
test
inc
repz
push
push
arpl
les
cs
mov
fiaddl
adc
jae
aam
push
adc
inc
sbb
cmpsb
subb
inc
inc
sbb
push
adcl
inc
stos
shrb
fdivl
shrb
sbb
fistpl
push
sbb
outsb
lea
adc
negl
das
and
jle
icebp
inc
or
mov
cmp
add
lods
dec
push
push
test
iret
or
mov
push
insb
adc
sbb
xor
imul
aas
cltd
sbb
cmpsb
sbb
je
mov
jecxz
pop
push
xor
sbb
insl
fcompl
push
xor
sbb
xor
xor
imul
and
sub
in
pop
arpl
out
sbb
xchg
push
push
clc
stos
jecxz
inc
xor
sub
push
mov
imul
xor
das
jbe
add
push
push
andl
pop
jae
cmp
or
dec
push
sbb
das
mov
bswap
adc
or
aas
and
cmp
xchg
or
inc
loop
mov
adc
das
inc
xchg
cmp
fstps
bound
or
push
and
push
push
jae
pop
or
xor
arpl
sbb
lcall
pop
add
enter
mov
pushf
arpl
sbb
pop
push
daa
cs
and
adc
and
mov
lods
push
sub
mov
xor
mov
add
loop
adc
add
xor
cs
sub
inc
daa
ss
subl
push
scas
sarl
test
and
push
sub
daa
add
mov
ljmp
push
addl
cmc
mov
push
enter
cmpsb
xor
or
pop
in
insl
push
pop
mov
jne
ss
and
sub
gs
sbb
push
test
test
push
aam
mov
adc
icebp
shrb
adc
add
mov
gs
or
aaa
or
push
push
cmp
inc
add
push
lea
jb
push
inc
lods
shr
xchg
add
xchg
sub
adcl
enter
sub
push
jbe
or
push
cmp
aaa
jg
mov
sbb
and
sub
or
push
add
fiaddl
cmp
push
into
sub
sub
fwait
pop
imul
sahf
shlb
in
mov
test
inc
cmp
sbb
push
std
in
sub
lea
pop
dec
lods
pop
ret
adc
test
xchg
sbb
fsubrs
sbb
sub
mov
cwtl
mov
sub
sub
and
mov
lea
fcoms
andb
inc
cmp
and
or
inc
popa
test
lcall
pop
or
sub
sbb
jb
outsb
mov
inc
inc
scas
pop
add
jecxz
or
daa
rcrb
test
arpl
pop
sub
mov
lods
jl
outsb
sbb
or
jnp
and
cmp
cmp
and
sbb
pop
pop
pop
mov
mov
adc
push
mov
pop
mov
in
jae
pop
adc
pop
pop
push
dec
push
add
xchg
adcl
out
scas
mov
adc
mov
push
in
bound
fisttpll
pop
nop
and
sbb
jg
mov
inc
and
adc
push
push
push
insl
cmp
testb
cmp
inc
loop
imul
fistpl
jge
and
fidivs
jbe
mov
in
fsubrs
test
xor
pop
fwait
call
push
push
or
test
xchg
aad
imul
orl
sub
push
push
out
sbb
sbb
mov
fsub
xor
cmp
and
sbb
sub
add
xor
cmp
jp
xor
xorl
adc
and
and
add
cmpb
xor
sub
fildl
or
es
adc
dec
movsb
subb
cld
or
pusha
or
add
cmp
mov
jge
push
or
sub
cli
test
inc
inc
xor
dec
dec
mov
out
bswap
or
jg
jbe
ds
test
pop
sub
inc
and
dec
or
xchg
pop
inc
jae
sub
mov
add
fldl
and
pop
and
push
es
jae
mov
adc
adc
adcb
push
adc
pop
fcoms
das
dec
mov
cmp
xor
pop
das
xor
xor
fdivrl
sbb
rclb
stos
jo
or
test
adc
mov
xor
adc
push
add
dec
pop
and
or
sub
sub
dec
sub
mov
fisttps
lds
cmp
mov
dec
adc
push
push
pop
xor
jbe
push
outsb
or
sbb
inc
jns
daa
dec
mov
sbb
fldt
int
dec
lock
sbb
adc
ret
lods
mov
pop
add
ret
xor
fimuls
rcrl
jo
push
bound
dec
rclb
loope
fimull
adc
and
inc
pop
mov
cmp
or
sub
fldcw
ss
pop
fiaddl
push
in
cmp
icebp
movsl
add
imul
xor
jno
test
sbb
pop
es
test
imul
mov
fcoms
cmp
or
fdivrs
imul
fs
dec
push
arpl
and
stos
push
rol
xchg
imulb
inc
sub
inc
push
xchg
or
sbbb
aaa
adc
push
test
mov
pop
or
sub
je
mov
enter
sub
adc
mov
icebp
jne
aad
sbb
aaa
adc
out
lcall
mov
add
or
js
pop
sbb
in
sub
lret
add
xor
inc
add
add
sub
adc
adc
add
add
stc
fnsave
add
add
add
mov
insl
ret
sbb
or
cmp
add
push
pop
mov
pop
add
mov
cmp
add
or
xor
xchg
cs
in
or
add
mov
add
inc
pop
adc
xor
pop
add
sbb
adc
or
add
in
pop
rolb
cmp
sbb
push
push
mov
add
push
fiaddl
sub
add
movsb
adc
daa
cmp
add
push
inc
sti
mov
push
pop
cmp
adc
or
je
or
popf
add
push
push
sub
fsts
sbbb
or
sbb
in
adc
adc
add
or
push
cmpsb
or
popa
ret
and
or
fsubs
jbe
push
sub
popa
ss
or
push
mov
xchg
add
jl
subb
sbb
pop
sub
and
fxch
push
sbb
add
xchg
mov
or
add
push
jmp
xchg
mov
sbb
ret
jecxz
imul
or
sbb
or
add
pushl
icebp
and
push
add
or
lahf
mov
test
push
es
mov
add
adc
aaa
xor
xchg
std
adc
xor
xor
and
push
or
cmp
pusha
or
pop
movl
or
sbb
push
add
fld
and
dec
sbb
and
sbb
mov
add
jno
sbb
mov
sub
dec
lock
add
jne
pusha
add
dec
add
and
mov
pop
pop
add
pushf
xchg
add
lock
call
pop
pop
stos
loop
mov
pop
aas
fbstp
cmpsl
data16
xchg
lahf
cs
add
add
jp
insl
hlt
ret
hlt
adc
sbb
add
mov
sub
adc
sub
lock
pop
clc
jecxz
sub
xor
ds
mov
lock
pop
test
lock
sbb
pop
sbb
or
jnp
sbb
jl
cmpl
pop
daa
cmp
cmp
and
sub
cmp
push
sub
sub
hlt
xchg
xchg
lods
stc
sub
insb
adc
add
add
shlb
add
cmp
clc
mov
xor
lret
adc
scas
inc
das
inc
or
or
xor
add
nop
sbb
push
and
xchg
mov
dec
scas
lock
add
loope
inc
adc
inc
pop
faddl
push
sub
icebp
dec
push
sub
dec
rcll
popa
cmpsb
or
fstl
lret
mov
and
popf
aam
dec
cmpsb
and
or
dec
sub
pop
adc
fstpl
push
aas
pop
or
jno
dec
add
add
mov
or
sbb
or
or
inc
prefetch
dec
adc
cmpb
or
fcmovu
sub
cmp
mov
push
test
sbb
cmp
lcall
add
adc
fmuls
ret
cmovae
pop
jnp
jbe
add
addl
lret
push
push
pop
or
push
add
pop
test
insl
loope
push
mov
adc
dec
daa
dec
or
testb
mov
ffree
aaa
sbb
mov
popf
or
mov
rcr
or
jl
cs
mov
rolb
inc
imul
push
add
add
fldenv
adc
xor
sbb
adc
fidivrs
push
jb
or
das
aad
jbe
and
insl
test
data16
pop
and
or
push
loope
lcall
and
or
add
add
ret
add
or
dec
xchg
jno
movsb
sbb
sub
outsb
orl
test
imul
shr
push
adc
pop
jno
xchg
jns,pn
sbb
into
jle
xchg
sbb
out
or
and
negb
xchg
add
movsb
fnsave
jle
adc
in
adc
add
fldenv
addb
imulb
adc
in
fcomp
adc
add
dec
pushf
dec
add
pop
popa
mov
push
mulb
or
test
xlat
and
jl
push
add
popa
xchg
shl
xor
or
inc
adc
inc
sarl
in
fildl
mov
dec
faddl
daa
inc
add
sbb
ljmp
add
add
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
popa
jmp
