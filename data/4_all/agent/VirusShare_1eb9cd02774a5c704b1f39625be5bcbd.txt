push
call
in
sub
push
xor
cmp
push
mov
je
pusha
inc
add
inc
pop
cs
fucomi
dec
add
jo
gs
in
push
fwait
in
mov
outsl
out
arpl
icebp
jae
xchg
fldt
bnd
pop
repz
push
aad
and
in
xlat
insl
fsubrs
fisubl
scas
pop
inc
loopne
outsl
lcall
adc
lock
jg
cmp
je
lea
push
push
call
mov
or
or
mov
cmp
cltd
test
clc
or
sti
out
push
pushl
push
push
call
cmp
or
push
clc
push
in
out
lret
outsb
cld
push
hlt
mov
leave
ret
in
in
insb
xor
dec
testl
out
std
add
mov
idivb
push
push
lahf
les
jmp
cmpsb
jmp
mov
leave
lret
mov
xchg
fldt
pop
into
push
loope
mov
shll
add
cmpsb
imul
jmp
loop
in
mov
add
inc
call
mov
imul
lock
imul
imul
mov
cld
je
push
and
fcomps
ja
dec
xchg
outsb
loope
adc
sbb
inc
clc
xchg
and
rcrb
mov
idiv
pop
cmp
cmp
push
call
inc
jmp
mov
sti
inc
cmp
add
shr
lea
movl
outsl
mov
sbb
xor
adc
or
mov
adc
std
ret
insl
add
cmp
shlb
shlb
loope
pop
or
mov
pop
test
call
popf
std
lock
pop
cs
lret
icebp
fs
popa
hlt
jo
imul
cs
stc
cli
insb
mov
insb
cld
push
clc
ret
faddl
fisubs
fildll
mov
imul
in
push
mov
lcall
mov
jne
pop
xlat
je
mov
dec
mov
test
xlat
jne
mov
addr16
mov
xlat
insb
lods
rol
ret
push
les
fwait
pop
cltd
lcall
xlat
pushf
test
mov
mov
movsb
movsl
fwait
cmpsb
imul
pop
mov
lods
jae
mov
gs
sub
mov
xor
cwtl
xor
cmpsb
arpl
pop
nop
enter
je
inc
je
jne
int
dec
jb
outsb
je
shll
gs
outsl
leave
mov
fstps
dec
xchg
push
push
call
push
xor
pop
jl
std
rorb
mov
jne
pop
jmp
mov
pop
mov
jo
mov
neg
sbb
fldt
push
and
push
adc
insb
push
push
push
cmp
insl
outsl
mov
inc
xchg
inc
test
cli
aaa
bound
je
or
aaa
xchg
insl
cld
mov
cmp
jb
movsbl
cmp
je
dec
jmp
leave
pop
cmpl
je
mov
mov
pop
cmp
jg
push
mov
inc
inc
jmp
andb
and
fwait
push
cld
not
xchg
add
push
test
inc
mov
pushl
pop
fstp
fisubrs
movzbl
inc
lret
inc
jp
call
inc
cmp
jne
cmpb
je
daa
inc
shll
faddl
shr
inc
sbb
or
stos
pop
pop
or
mov
mov
das
mov
push
popf
clc
mov
cmp
dec
andl
pop
push
jbe
ss
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jnp
pop
jb
xor
mov
pop
mov
add
leave
fldcw
push
pop
jo
cmpb
clc
inc
inc
jmp
adc
mov
je
notl
push
mov
mov
pop
sahf
in
inc
inc
test
jne
pop
xor
xor
push
lods
add
leave
jmp
dec
or
in
inc
roll
xor
outsb
fs
inc
dec
shll
inc
imul
inc
fildl
xor
xlat
outsb
frstor
outsl
mov
gs
aam
insb
mov
adc
mov
adc
testb
adc
pop
in
adc
shlb
imul
lcall
mov
imul
arpl
adc
adc
xor
inc
adc
jo
addr16
add
xchg
in
adc
pop
loope
dec
loopne
adc
sbb
pop
leave
pop
in
push
xchg
lock
push
push
outsl
xchg
mov
lret
cmp
mov
mov
sbb
idivl
mov
das
push
adc
sarl
ret
mov
sbbb
push
inc
sbb
mov
iret
cmp
jbe
mov
mov
mov
mov
add
push
cltd
add
test
cmpl
jg
sbb
jmp
mov
mov
lea
movzwl
inc
sbb
adc
sbb
add
and
add
cmp
outsl
cmp
imul
je
cmp
and
clc
repnz
repnz
pop
rorl
std
ja
rep
stos
stos
mov
sub
and
xor
aas
into
movsl
push
scas
hlt
mov
xor
or
push
cmp
push
rcll
ret
les
sahf
hlt
and
je
mov
test
insl
and
add
pop
stos
push
or
mov
rorl
fisttpll
mov
adc
neg
lea
shll
mov
adc
jge
sub
mov
mov
inc
sub
sub
call
or
pop
pop
call
bound
movsb
cs
rcrb
jne
ljmp
mov
mov
ret
mov
or
into
push
pusha
mov
push
cs
jb
pop
mov
enter
dec
leave
lret
int
insl
leave
jb
insb
or
insb
rorb
test
ja
push
shll
dec
jo
or
mov
sbb
mov
push
pop
outsb
int
addr16
shld
mov
cmpsl
test
test
jmp
lods
lods
inc
scas
scas
imul
xlat
sub
cmpsb
insb
outsl
pop
fidivl
fdivrl
xchg
mov
fstp
jns
fistps
shr
mov
movsl
inc
pop
sbb
test
stos
push
pop
sub
push
aaa
scas
or
jne
mov
xchg
add
and
sub
mov
ret
sahf
fimuls
mov
mov
push
call
push
aaa
adc
cld
ret
push
xchg
pop
call
imul
jb
pop
push
push
dec
inc
add
sbb
inc
hlt
push
pusha
lcall
popa
in
mov
and
cmpb
cmp
stos
orb
hlt
stos
pop
cmp
push
inc
and
divb
andl
into
add
or
lcall
push
jne
popa
nop
cmpsb
imul
xor
fcomp
ficompl
fsubrl
addr16
jne
pop
mov
in
inc
out
out
call
mov
jmp
in
ss
das
xchg
sub
mov
mov
mov
int3
repz
leave
sub
repz
cld
sub
add
mov
pop
daa
adc
adc
mov
sub
pop
nop
leave
lea
pushf
add
mov
mov
les
lods
pop
add
ss
roll
mov
add
insl
aad
xor
jl
enter
sub
or
and
je
mov
xor
mov
int
sbb
sub
and
dec
pushf
jle
or
or
inc
adc
inc
cmp
jb
jmp
mov
shrl
add
jl
daa
sbb
loop
cmp
and
inc
inc
scas
or
mov
out
mov
faddl
push
shll
mov
popa
dec
shll
imul
outsl
jae
dec
inc
dec
shll
mov
shll
outsl
ja
jae
sbb
insb
mov
dec
outsl
push
outsl
insl
dec
rcl
xor
dec
push
dec
inc
insl
in
mov
lret
lret
xor
shrl
fstp
fnstsw
shll
in
in
xor
out
call
adc
out
dec
jo
shll
jns
inc
lcall
nop
cmpsb
imul
push
mov
lret
push
add
in
lock
adc
pop
mov
inc
cmpsb
mov
xor
pop
rcrb
adc
in
xor
xor
mov
push
adc
mov
ret
cmp
mov
dec
clc
dec
shll
inc
sbb
popa
je
add
sub
pop
lock
add
xor
pop
push
mov
nop
cmp
pop
aaa
xor
sti
pop
daa
in
jmp
adc
mov
ds
xor
push
adc
and
cmp
cwtl
in
cs
xlat
lock
mov
out
stos
out
cmp
mov
cmpsb
lock
or
or
pop
int
in
inc
fisttpll
testl
and
cld
insl
cmovno
inc
insb
insb
int
imul
mov
fisttpll
aam
insb
and
divl
cmpsb
orl
jge
roll
imul
inc
std
lcall
hlt
call
xlat
movb
dec
lea
fisubl
and
mov
cmpsb
imul
imul
shll
push
imul
outsl
xor
inc
imul
cmp
jb
inc
mov
mov
dec
mov
mov
mov
ss
sbb
sbb
insb
xchg
or
pop
loopne
test
sbb
pop
das
push
push
or
pop
xor
mov
hlt
add
and
add
popf
adc
pop
mov
inc
adc
mov
sbb
sbb
adc
in
sbb
inc
jo
jb
pop
dec
fstpt
inc
insb
in
xor
fbld
loope
adc
loope
adc
std
adc
adc
xor
bswap
push
rolb
sbb
je
xor
mov
cmp
fldcw
lea
popa
fcoms
imul
adc
cs
ret
out
js
lcall
daa
add
arpl
mov
jne
mov
dec
xor
push
push
pop
stos
mov
sbbl
push
test
bound
cmp
test
mov
add
cmc
inc
ds
jge
jl
cmp
mov
hlt
cmp
sbb
add
and
jb
daa
gs
gs
cmpsb
imul
leave
and
push
mov
push
lock
xchg
test
adc
xor
outsb
sbb
jae
xchg
lret
in
mov
mov
arpl
mov
imul
push
gs
pop
movsb
jae
stos
lods
lods
lret
mov
dec
sub
lret
leave
mov
fs
outsl
jne
int3
mov
jb
add
imul
push
arpl
inc
jb
imul
lcall
xchg
in
inc
push
mov
bound
cmp
into
inc
and
sub
ret
addb
push
or
int3
sbb
and
xchg
pop
push
bnd
in
pop
and
lods
test
out
push
mov
adc
xchg
push
pop
sub
mov
je
arpl
addr16
mov
or
mov
pop
sub
iret
xchg
xchg
adc
test
push
add
fistpl
movsl
sar
adcl
sub
push
inc
mov
arpl
or
mov
cmp
push
adc
and
fsubrl
les
mov
retw
movsl
push
and
stos
and
or
out
xchg
ljmp
icebp
faddl
mov
or
mov
cltd
lods
stc
lds
push
bound
lcall
aad
push
daa
mov
cmpl
or
jg
es
and
repnz
hlt
outsb
leave
in
pop
add
ret
leave
xchg
push
fisttpl
rcr
enter
inc
rol
fsubl
pop
js
int3
inc
jae
or
sbbb
adc
add
push
xchg
loop
insl
push
push
in
sbb
je
ds
ja
inc
adc
subb
into
xchg
or
sbb
out
aad
mov
bound
push
mov
add
in
shll
outsl
mov
ss
call
and
ljmp
mov
fs
popa
lock
dec
roll
inc
gs
bound
rorb
xor
jb
imul
insb
mov
in
dec
sub
and
rolb
or
or
ret
fnstsw
andl
add
add
movl
insb
daa
inc
and
mov
pop
mov
jns
inc
jle
in
stc
imul
daa
in
inc
incb
cld
test
daa
in
inc
jge
jl
insl
mul
jae
ds
mulb
fs
or
clc
je
push
inc
jb
shlb
gs
jns
inc
aam
lret
in
imul
cmp
or
dec
rorb
mov
lea
pop
jb
sub
push
fnsave
or
sbb
dec
movsb
sbb
add
xchg
jnp
push
scas
nop
pop
cld
sbb
xchg
xchg
outsb
insb
xchg
fs
popa
xchg
pop
insl
mov
cmpsl
cwtl
add
xor
rcrl
pop
mov
rclb
dec
push
ds
mov
jl
push
je
xor
out
push
pop
xor
sub
inc
xchg
jmp
dec
dec
ret
lcall
sahf
sbb
mov
mov
push
pushf
sub
cmp
lret
insl
jae
arpl
sarl
xor
jb
cmpsb
daa
int3
mov
pop
add
into
add
pop
scas
rcll
ret
or
imul
add
stos
adc
je
sbb
cmp
and
insb
imulb
push
in
xor
add
popa
popa
cli
and
adc
fistpll
iret
cmovno
add
adc
movsb
stos
xchg
dec
pop
test
and
and
les
adc
stc
lds
repz
les
roll
in
mov
sub
movq
int
sub
sahf
lock
bnd
xor
sub
int
and
je
mov
mov
mov
fcmovnu
imul
imul
imul
je
pop
push
daa
enter
filds
add
enter
xchg
test
and
sti
inc
loopne
pop
and
adc
iret
or
sti
push
dec
test
pop
adc
nop
sub
add
push
mov
cld
inc
cs
test
rcr
pop
add
pop
fdivs
or
inc
push
das
add
push
jl
jl
jns
into
jnp
or
jmp
das
inc
push
and
cld
test
mov
cmp
test
cmp
cmp
lcall
fdivl
jb
int3
pop
jns
xchg
and
jae
add
cmp
add
lret
fsubrp
mov
push
ja
or
mov
xchg
cmpsl
lcall
mov
mov
pop
icebp
movsb
jno
or
clc
mov
sub
in
mov
or
adc
cwtl
fwait
mov
push
xchg
adc
mov
pop
xchg
and
push
xchg
sub
push
sbb
adc
mov
pop
push
push
push
mov
add
and
sbb
rcrl
mov
out
ss
xorb
add
stos
mov
and
add
and
add
cs
or
jmp
ds
jmp
test
jo
push
jle
adc
iret
push
mov
negl
pop
mov
mov
adc
mov
sub
lahf
jae
add
jle
outsb
jne
hlt
and
xchg
rorb
xor
dec
jb
pop
push
dec
sub
jae
aam
mov
add
inc
call
jge
jl
add
inc
mov
clc
sbb
jne
je
mov
test
fucom
or
mov
or
shrb
xor
push
cmp
lea
rcrl
push
push
ret
jp
dec
jl
pop
sub
rclb
je
gs
dec
shlb
stos
push
imul
fsubs
out
imul
bound
inc
mov
mov
fldt
cmpsb
arpl
mov
lea
add
mov
nop
dec
or
shll
cmp
fldt
or
pushf
insb
cmp
sahf
and
jmp
insl
andl
or
lret
mov
lret
and
and
imul
scas
scas
imul
rcl
add
addr16
outsl
je
pop
jb
lcall
lods
fdivs
iret
fcmovnu
or
loop
loope
cld
or
or
in
mov
and
lea
icebp
add
xor
ja
push
loopne
push
loopne
loop
cmp
in
mov
icebp
adcb
in
addl
je
pusha
inc
push
outsl
jo
pop
xchg
add
idiv
je
rcl
cmpsb
push
sub
push
add
insb
xor
andb
jmp
call
mov
push
gs
insb
inc
js
inc
xor
jne
pminub
mov
int3
outsl
int
push
les
rcr
dec
hlt
push
push
lds
enter
xchg
xabort
pop
sti
sbb
push
add
push
push
pop
mov
push
inc
mov
pop
xor
bound
jo
icebp
aam
push
xchg
cmpsb
js
punpckhbw
pop
outsb
lds
inc
or
out
inc
sbb
push
add
jg
pop
push
adc
dec
jge
mov
inc
icebp
pop
jbe
cmp
sbb
addr16
sbb
fidivl
mov
push
or
xor
push
mov
hlt
inc
or
div
imul
ret
sti
mov
in
dec
xor
lds
cmp
jbe
push
jne
pop
mov
pushl
mov
mov
push
xor
je
jns
jae
and
sbb
or
inc
es
cmp
adc
fwait
sbb
adc
sbb
movzwl
sti
mov
push
cmp
jl
pop
nop
sahf
daa
dec
or
dec
inc
mov
add
test
pop
or
shlb
fcomps
fdivrl
pushf
adc
push
pop
add
jl
pop
push
mov
fmul
clc
jle
sbb
gs
gs
adcb
adc
xchg
lret
ficoml
push
sbb
cld
cmp
sbb
or
aas
dec
aaa
mov
out
sub
mov
popf
jne
rclb
pop
or
sti
adc
add
inc
and
cmpsb
add
arpl
std
dec
aaa
or
lea
mov
sbb
inc
mov
mov
jle
std
enterw
push
mov
mov
inc
sub
pop
push
mov
sub
push
pushl
mov
out
push
push
sbb
syscall
data16
int3
adc
sbb
pop
xchg
cmpsb
fstps
gs
in
mov
cmp
sub
movsl
mov
or
push
lock
sbb
or
sbb
sbb
push
push
sbb
std
mov
leave
ret
xor
insl
xor
sbb
or
cmpsl
dec
xor
and
add
lea
loopne
adc
aas
push
mov
add
jge
jl
add
sub
mov
mov
subl
mov
jae
shlb
dec
andb
xlat
stc
negb
push
fsubs
push
push
test
sub
cmp
pop
xchg
mov
test
lock
xorb
movl
push
lea
popl
sahf
or
testl
lahf
mov
mov
cmp
jl
fcomps
inc
clc
jnp
push
cmpb
jbe
mov
adc
push
inc
lods
adc
mov
mov
daa
cmc
cmp
sbbl
test
sub
adc
cli
jl
mov
sbb
mov
inc
movsb
mov
ret
cmp
popf
rclb
cmpsl
push
sbb
int
inc
mov
cmpsb
inc
loop
push
cmpsl
movb
pop
jmp
push
push
leave
push
sub
mov
fwait
adc
repz
mov
mov
adc
or
add
mov
insb
add
js
push
and
mov
and
por
push
fcmovnu
fidivl
cmp
cltd
add
or
aaa
jle
add
pop
push
mov
in
push
jne
sbb
pop
cmp
lea
fcomp
adc
push
movsl
add
and
mov
lods
sub
cmc
and
imulb
cmp
outsb
adc
lds
adc
mov
mov
jne
rcrb
cltd
dec
mov
sub
xor
or
sbb
adc
cmpw
jne
imul
fwait
or
sub
xchg
or
lods
push
sbb
dec
push
sbb
adc
fdivrs
add
push
pushf
adc
sub
xlat
mov
adc
xor
sub
scas
push
mov
in
cs
pop
dec
dec
lods
inc
dec
jne
out
push
lods
enter
scas
popa
pusha
cli
lods
rol
aas
mov
gs
dec
xorb
mov
and
lods
fmuls
add
pop
aam
push
shl
push
push
test
fbld
add
jp
push
int
shlb
mov
add
xor
sbb
add
shl
aad
loopne
or
hlt
cs
js
imul
inc
sbb
xor
add
xchg
or
fxch
xor
lods
mov
mov
cmp
add
inc
pushf
lret
inc
jl
jbe
jb
enter
cwtl
mov
mov
ret
addr16
push
loope
mov
lock
xchg
fmuls
fstl
ja
jnp
jne
mov
popa
imul
cmp
inc
or
test
xchg
push
xchg
push
into
cmp
test
bndstx
mov
out
dec
enter
sbb
sarl
lods
mov
pop
inc
shll
lret
push
popf
sub
push
cmc
jb
sub
mov
jbe
insb
gs
loopne
add
dec
pop
lea
cltd
push
aam
data16
aam
arpl
outsl
jae
ror
mov
fs
dec
xchg
sbb
fwait
lods
push
insl
repz
push
mov
pop
in
addr16
or
movsb
add
scas
add
xor
insl
lock
sbb
push
push
pop
push
pop
or
and
loopne
addb
and
mov
pop
jmp
xchg
push
or
jecxz
mov
xor
pushl
or
inc
add
sub
or
xorl
pushl
lret
fwait
dec
add
and
inc
test
cmp
jne
call
jmp
add
pop
mov
xor
jb
mov
dec
push
xor
pop
xor
cmpl
ja
inc
imul
shlb
int
mov
pop
ret
lock
mov
fisubl
mov
ss
xchg
std
mov
cltd
int
lret
mov
inc
fs
insb
insb
inc
or
sub
arpl
dec
and
add
mov
sti
cld
inc
nop
mov
cwtl
nop
call
adc
in
mov
addr16
cwtl
iret
pushf
imul
sbb
mov
cmc
idiv
add
push
cmp
dec
into
incl
pop
cmp
mov
testl
cli
xchg
jbe
maskmovq
negl
mov
inc
push
testl
mov
dec
push
fcomps
cld
cmp
testl
addr16
fwait
and
in
inc
pop
outsl
jo
sub
aad
out
insb
lcall
dec
outsl
jbe
cmpsb
imul
inc
jp
push
cwtl
js
fildll
sub
inc
cltd
and
cmp
xchg
leave
push
push
inc
mov
jmp
mov
gs
xor
je
gs
or
mov
insb
inc
mov
mov
mov
or
push
ja
xor
adc
sub
sub
shll
sub
nop
lods
aad
pusha
pop
sbb
or
mov
add
arpl
into
xchg
adc
pop
incb
nop
std
cmp
xor
or
lret
test
cs
push
push
sub
sub
sbb
mov
xchg
or
repnz
aad
aam
add
xchg
or
jns
sti
sti
adc
nop
in
adc
sbb
sbb
stos
orb
in
or
xor
in
dec
pop
mulb
adc
lods
xchg
insb
push
sub
sub
cli
push
xorb
add
nop
cmpsl
push
add
mov
inc
xchg
xchg
dec
sbb
jno
xchg
pavgw
addr16
sbb
or
adc
xor
or
push
cwtl
mov
sub
insl
loope
pop
outsb
loopne
mov
adc
sub
loopne
xor
dec
loopne
adc
in
bound
shr
mull
nop
inc
call
fsub
inc
call
ds
movsl
out
add
je
add
xchg
xchg
jl
mov
mov
int3
push
test
or
test
filds
test
pop
jae
sub
mov
or
xchg
test
lock
mov
push
mov
ficomps
and
es
add
sarb
fsts
add
adc
sub
gs
push
and
lock
orl
fadd
insb
adc
arpl
or
call
lods
add
or
xchg
push
jge
test
or
or
jle
je
ja
std
aas
inc
xchg
lea
inc
xor
cmp
and
stc
sbb
add
add
std
out
mov
jne
cmpb
jne
inc
or
add
insl
bswap
mov
repnz
jbe
aam
cmc
add
dec
movsb
divb
outsl
aaa
sub
and
jmp
mov
inc
add
lret
cmp
es
add
outsl
sub
or
test
or
push
loope
mov
mov
enter
int3
add
add
ret
mov
jmp
jo
je
jne
int
mov
mov
sub
enter
add
lods
ret
ljmp
push
sbb
cmpsb
imul
imul
mov
push
fwait
push
clc
xor
mov
or
push
pop
cmp
bound
dec
shll
xchg
pushf
mov
scas
mov
shll
imul
dec
inc
or
adc
push
add
pop
bound
cmpsb
imul
or
rclb
pop
cmp
lahf
jmp
pop
insl
jo
add
add
cmp
pop
add
dec
dec
ret
sub
push
repnz
hlt
push
and
inc
ljmp
push
push
inc
push
xor
cs
insb
jno
sub
add
add
dec
gs
gs
cld
mov
je
outsl
fs
gs
imul
fwait
mov
gs
je
push
push
and
fistpl
insb
outsl
jae
dec
popa
outsb
fs
add
imul
sti
je
gs
sub
cmpsl
lret
repz
cs
fidivrl
xor
xor
or
jne
jns
xor
or
imul
stos
out
nop
in
test
ja
push
insb
push
inc
dec
push
ljmp
add
nop
pusha
nop
add
call
and
add
pop
add
aas
sub
push
xor
push
push
movl
jb
arpl
and
pop
loopne
fs
test
pusha
mov
pop
adcb
inc
sbb
pop
inc
or
jge
fidivrs
add
add
jge
dec
add
mov
cld
incl
and
fimull
test
nop
je
lea
mov
repnz
mov
push
inc
nop
repz
sbb
pop
jne
nop
nop
mov
sbb
stc
movzwl
mov
add
mov
add
jge
jmp
lock
popa
fnsave
cmp
stos
ljmp
je
lea
push
push
mov
sbb
sub
xchg
mov
mov
popf
jb
ljmp
sub
push
pop
and
cld
pop
lea
incl
dec
nop
and
lea
push
call
pop
or
std
push
jmp
pop
pop
sbb
dec
call
in
mov
mov
pop
mov
dec
mov
js
rcl
repnz
add
cltd
nop
aas
xor
push
add
ss
add
dec
repz
add
push
add
pop
add
dec
pop
nop
add
dec
add
orb
mov
filds
pop
mov
int
mov
imul
jb
insl
ljmp
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
subl
mov
rorl
lds
inc
rorl
add
rolb
ja
stc
out
add
pop
or
rorb
xor
mov
aas
push
imul
mov
cld
inc
cmp
adc
lods
add
int
and
add
or
adc
jo
cmp
aaa
lods
xchg
add
sbb
add
xor
fldcw
rcrb
adc
cmp
mov
cmp
and
mov
daa
or
fiadds
ret
pop
fstp
nop
int
push
mov
daa
and
pop
fincstp
and
fldenv
popf
xor
mov
xor
add
dec
shlb
jmp
xor
add
mov
loop
fs
lahf
stos
mov
fs
popl
mov
and
sbb
loopne
hlt
add
andb
rclb
negb
or
orb
adc
int
adc
stos
add
and
and
jmp
or
mov
sti
ljmp
mov
dec
add
out
mov
stos
jne
out
jg
xchg
ja
jl
push
in
push
push
and
test
ljmp
testb
pop
pushl
movzbl
push
je
mov
mov
push
mov
push
mov
inc
dec
pop
or
imul
push
sub
pushl
xorl
push
or
adc
cmp
or
pop
jle
sbb
loope
fnstsw
mov
xor
sub
push
push
cmp
pop
clc
or
add
fs
cs
lret
ljmp
jne
jae
mov
lock
or
icebp
adc
sub
call
add
or
dec
inc
dec
rcrb
inc
insl
shll
push
inc
rol
out
les
lds
je
dec
enter
cs
mov
lret
int3
inc
add
outsb
into
sar
mov
outsl
cmp
rcll
shlb
shll
fcmovnu
sub
mov
sbb
imul
cmpsl
mov
or
lods
lods
imul
mov
or
pushl
fdivl
fstpt
jp
mov
in
adc
push
lock
popa
lea
or
clc
push
add
push
mov
rclb
and
sti
push
jg
sub
push
sti
pop
aaa
add
cmpsl
cmp
xor
adc
pop
clc
in
mov
loopne
or
das
dec
cmp
ja
pushl
jmp
pop
call
imul
add
lcall
mov
dec
or
jne
fcoms
pop
jns
pop
xchg
in
mov
out
pusha
clc
movl
add
idiv
dec
dec
push
mov
in
xchg
or
lock
icebp
xor
fdivrl
and
push
decl
or
loop
jecxz
pmulhuw
lret
xchg
bnd
dec
xchg
ljmp
pushl
je
lea
push
and
jge
adc
push
jne
daa
mov
idiv
sbb
cmp
jne
push
push
sub
pop
push
xadd
pop
dec
and
in
inc
ret
sbb
adc
or
loope
dec
mov
jnp
mov
or
daa
or
out
das
sbb
xor
mov
jne
xor
int3
jbe
cmpb
or
aas
pop
call
push
push
or
clc
or
ja
or
cmpsb
je
mov
out
ljmp
shr
pop
push
mov
lcall
lcall
jmp
aas
cld
aam
lret
test
fcomp
fcmovu
add
fstp
fbstp
push
lahf
mov
test
add
mov
jno
push
jb
xchg
or
je
jne
jbe
or
popa
js
dec
xchg
out
fs
ds
jnp
out
fs
pushl
insl
jle
push
fldcw
dec
or
subl
jb
dec
test
dec
xchg
std
decl
mov
push
mov
mov
je
fistps
decb
xchg
popa
cs
jbe
gs
xchg
xchg
pop
xlat
xor
outsl
lcall
fwait
sbbl
addr16
gs
ror
jp
test
les
inc
lret
insl
xlat
xor
enter
jae
jae
mov
je
int
ror
or
ljmp
in
sbb
jo
shlb
rorl
movsb
lcall
pushl
and
add
push
mov
jmp
push
divb
shlb
outsl
inc
lcall
adc
pop
movsb
insl
js
insb
movsb
add
lret
fadd
pop
mov
push
imul
xor
adc
add
pop
imul
filds
sahf
out
pop
and
pusha
push
insb
mov
sahf
jo
xor
outsb
xchg
into
mov
add
cmp
or
mov
pop
arpl
or
loopne
mov
and
mov
or
sahf
xor
fdivl
adc
enter
jmp
and
push
jbe
repnz
std
fadds
rorb
cmc
pop
mov
add
out
mov
inc
in
sbb
int3
pop
pop
pusha
mov
sub
push
xchg
dec
dec
pop
rolb
aam
xor
mov
cmp
or
call
or
jl
fdivs
mov
call
lcall
imul
add
add
es
adc
mov
fimull
mov
xor
mov
je
out
mov
ljmp
xor
xor
jl
mov
dec
das
sbb
movsb
iret
mov
jns
dec
mov
sti
pop
pop
fidivrl
enter
push
stos
mov
aaa
ss
lock
ljmp
int3
mov
pop
into
and
xor
psrlw
shrb
pop
and
push
sub
subl
pop
fisttps
jmp
pushl
sti
in
sbb
hlt
push
hlt
lea
dec
mov
outsl
jg
push
sbb
clc
stc
or
insb
jmp
incl
push
xchg
cmp
xchg
jg
ljmp
jne
jae
or
fsubrl
pop
lret
add
gs
cmpsb
dec
loopne
or
loop
call
xchg
out
add
nop
rorl
mov
call
ss
mov
ret
add
inc
xchg
xchg
test
in
sub
incl
mov
in
mov
mov
add
in
out
pop
cli
mov
dec
mov
rcll
bound
jmp
jne
inc
testb
std
pushl
imul
test
sti
xor
xor
idiv
lcall
sbb
jg
sarb
enter
pop
xchg
sub
jg
and
bndldx
jb
fldl
inc
and
iret
enter
in
mov
xchg
or
mov
xchg
sub
cmp
pusha
push
xor
bound
call
or
hlt
in
outsb
fsubl
sbb
hlt
jmp
das
popa
sbb
sub
add
call
mov
sbb
iret
mov
sbb
push
jp
das
cmp
push
cmp
divl
sub
jae
decb
or
lret
ljmp
add
insl
test
cs
push
rorb
push
push
lea
jg
xchg
pop
cs
sub
popa
imul
aam
lds
xchg
daa
add
or
sub
add
test
jnp
insl
fwait
pop
insb
cli
push
sti
inc
lcall
addr16
in
xorb
dec
xor
movsl
mov
repnz
out
mov
dec
inc
dec
dec
mov
lock
mov
jg
fs
add
hlt
and
gs
lods
cmp
cmp
int3
inc
movsw
mov
movsl
pushl
adc
push
mov
cld
lods
outsl
push
and
add
jmp
cmp
sub
scas
hlt
lods
pusha
stc
jbe
jae
bound
add
addr16
push
or
add
add
clc
incl
call
or
and
lret
add
imul
jmp
add
out
loope
std
mov
sub
ret
xor
adcb
movsb
xchg
xor
dec
xchg
mov
mov
sbb
and
cmc
ljmp
popa
je
insb
outsl
fwait
in
je
arpl
es
xor
jg
and
xor
cmp
or
pop
rolb
push
xchg
and
inc
lcall
pop
mov
lcall
cli
imull
pop
mov
jg
or
jecxz
mov
testl
pop
pop
das
icebp
adc
movsl
or
test
sub
jb
dec
sub
pop
sbb
decl
imulb
aam
adc
mov
mov
xchg
pushl
mov
mov
pop
hlt
hlt
dec
inc
cmc
jo
jmp
inc
pop
pop
push
cmp
cmp
inc
imul
outsb
gs
andb
outsl
ljmp
pop
xchg
gs
lock
in
cwtl
lods
loopne
mov
or
inc
ljmp
pushl
sub
outsb
les
sarl
insl
inc
mov
pusha
pop
push
and
leave
fsubp
decl
mov
sub
add
or
add
xchg
aas
ds
je
es
js
add
ja
leave
lods
push
idiv
cmp
dec
pop
pop
pop
xchg
sub
xchg
pop
cs
adc
jmp
push
push
mov
vpmadcswd
mov
das
icebp
fdivr
jno
sahf
or
cwtl
adc
sbb
jge
xchg
lcall
jmp
mov
insl
mov
push
rcr
neg
lcall
hlt
fadds
adc
rcrl
cmpsb
adc
mov
cmp
call
pushl
jp
mov
push
sbb
lds
or
inc
sbb
adc
pushl
clc
jg
fwait
data16
out
adc
xchg
jmp
call
incl
cs
jg,pt
lods
cmc
push
jg
cld
cmp
jbe,pn
or
mov
adcl
pop
and
and
lcall
sub
push
add
pop
push
push
cmp
dec
lods
push
popf
sub
pop
and
mov
movsl
pop
cmp
mov
std
inc
inc
mov
cmp
inc
jbe
movsl
cmp
inc
adc
ds
push
or
pop
lcall
sub
add
mov
js
insb
je
outsl
mov
xlat
add
js
inc
jno
mov
nop
cmpsb
push
push
imul
pop
roll
aad
xchg
or
cld
insl
jae
popa
ss
sbb
div
fnstsw
inc
in
pop
mov
add
sti
mov
aam
cmpsl
pop
sbb
xor
sarb
mov
and
mov
and
idiv
test
into
and
sub
sub
cmpsb
movsl
sub
test
mov
push
inc
xor
xor
xorl
int
dec
jg
mov
out
inc
out
push
lock
mov
loop
add
rcrb
or
push
or
jg
ljmp
or
dec
insb
push
movaps
adc
xor
xchg
xor
outsl
xor
adc
pop
push
push
dec
jae
sbb
sbb
sbb
sbb
push
test
pop
mov
mov
outsl
icebp
jg
imul
sbb
sbb
loop
dec
pop
loop
or
adcb
imul
fwait
lahf
in
mov
ss
popf
loope
aaa
loopne
pusha
mov
adc
in
add
mov
pusha
call
incl
jmp
imul
sub
push
fs
dec
cmp
jg
pop
clc
imul
insl
xor
iret
pop
push
push
out
ret
fucomi
mov
hlt
call
icebp
fbld
adcl
scas
mov
cmp
pop
mov
dec
dec
jo
test
push
or
mov
arpl
xor
xchg
out
in
iret
xchg
xchg
mov
pop
jmp
je
in
sbb
mov
xchg
push
jb
add
sbb
jg
fnstcw
clc
daa
dec
pop
push
inc
xor
cmp
dec
push
push
scas
test
push
push
fs
xor
movsb
mov
dec
push
xchg
push
xor
ljmp
incb
mov
aaa
pop
mov
pop
lock
add
cmp
xor
clc
push
jecxz
mov
add
push
jg
test
daa
je
cmp
mov
mov
mov
shll
mov
pusha
pop
jl
rorl
push
hlt
ljmp
icebp
pop
lea
pop
ss
lds
dec
pop
pop
sbb
push
outsl
lock
xchg
cmc
dec
inc
mov
mov
pushl
test
jne
adc
inc
mov
sbb
out
cmpsb
sahf
cmp
cmc
incl
lods
mov
xchg
int
sub
lea
test
dec
sub
rcll
ljmp
into
and
hlt
js
repz
or
cs
decl
pop
fsincos
adc
xchg
outsb
push
add
push
cmp
adc
fnstenv
mov
nop
pushl
clc
lcall
jmp
pushf
int
js
add
mov
sarb
sar
iret
sub
mov
xchg
mov
jno
mov
inc
push
xor
mov
mov
fdivrp
push
insb
enter
mov
aad
das
cmc
outsl
sti
mov
jecxz
int3
not
pop
add
xchg
insb
das
ds
test
jge
fistpll
popf
xor
test
push
fs
xchg
ljmp
enter
hlt
aas
pushf
lret
mov
cs
cmpl
mov
aaa
clc
pushl
adc
adc
jne
or
mov
add
sub
out
pushl
clc
mov
push
inc
movsb
xor
jl
shl
mov
lahf
lret
addb
adc
sti
push
sar
cmp
je
fidivl
dec
dec
cmpw
mov
jne
pop
fs
adc
jg
pop
call
pop
xor
add
or
cmp
inc
inc
lock
ja
mov
nop
pop
enter
shlb
call
ljmp
stos
call
mov
push
sub
push
mov
xor
add
sbb
adc
jne
inc
sbbl
xor
add
les
xor
shll
aad
sbb
cli
add
inc
aad
stc
mov
outsl
gs
push
dec
clc
ljmp
push
jmp
out
out
inc
test
and
cld
xchg
mov
out
je
pop
aaa
mov
push
jge
pop
loop
or
mov
arpl
push
subl
adc
mov
push
lea
or
dec
decl
test
cwtl
mov
xor
enter
jmp
pop
adc
inc
test
ret
and
push
push
lcall
into
addr16
jge
cmc
cld
hlt
imul
and
or
clc
xchg
sbb
pushf
fcoml
cld
xchg
das
cmpsl
dec
inc
jns
stc
lock
call
ds
insb
jp
test
mov
repnz
call
jbe
std
cld
xor
stc
std
clc
std
icebp
in
andl
jmp
xor
pop
mov
push
ljmp
lock
call
je
push
lods
xchg
pop
arpl
add
xchg
inc
into
add
jo
push
lcall
subb
shlb
jnp
movsb
arpl
popa
je
incl
adc
loopne
xor
pop
mov
sbb
mov
and
outsb
push
scas
call
jge
xlat
mov
je
outsl
and
loop
inc
pop
jmp
jne
outsb
insb
mov
das
pop
mov
cmc
rol
jl
push
fcoml
push
scas
mov
push
sub
cmc
lcall
movsb
add
adc
subb
int3
and
int3
push
push
aam
add
call
into
adc
movsb
dec
push
xor
sti
push
pop
in
or
out
pop
mov
ljmp
adc
pop
pop
pusha
jl
xchg
mov
mov
adc
mov
jle
push
xor
sbb
jg
lcall
sbb
insb
arpl
orb
pusha
sbb
sbb
aad
mov
and
ret
jb
icebp
pop
stc
mov
imul
pop
gs
js
mov
fidivs
or
xor
outsb
popf
push
sub
movsl
xchg
jle
adc
jmp
pop
mov
ss
add
outsb
mov
lret
push
inc
fistl
stos
lods
movsl
scas
inc
dec
mov
imul
outsl
roll
pop
pop
dec
hlt
push
cmc
inc
push
mov
push
shlb
pop
ljmp
sub
jb
xor
jle
sbb
outsl
outsb
cmpsb
arpl
inc
mov
clc
mov
pusha
les
inc
xchg
fmull
push
gs
cld
pushl
adc
cld
dec
adc
adc
pop
lret
xchg
push
cmp
cmp
aas
push
cltd
les
test
cs
movl
int3
hlt
outsl
std
mov
in
sbb
hlt
sub
inc
push
sub
mov
add
das
rclb
pop
in
dec
es
cmc
incl
xchg
out
xorb
inc
addl
xchg
or
mov
mov
sbb
jno
dec
loopne
cwtl
std
ds
push
in
cld
add
fcoml
push
cld
decl
adc
push
lds
scas
les
xor
dec
inc
js
out
insb
ret
xchg
les
lods
xor
push
fnstcw
mov
std
negb
jle
stos
sbb
and
das
xor
and
push
dec
xor
ljmp
sub
jge
sub
xlat
cmp
scas
orl
add
ljmp
sbb
shl
mov
sbb
divl
sbb
mov
mov
incl
lods
push
in
dec
sbbl
add
mov
lret
test
inc
psraw
addl
push
mov
or
and
mov
xchg
and
or
jg
cmp
ljmp
jl
adc
aaa
and
outsl
les
cli
push
pushl
push
sbb
pop
sbb
ljmp
aaa
test
mov
movsb
int3
and
inc
mov
ljmp
lods
inc
cmp
dec
in
and
or
ss
mov
or
pop
dec
push
adc
mov
into
or
push
and
jnp
push
out
push
push
inc
shll
dec
lea
aas
outsl
jp
insb
sub
popa
push
dec
mov
pop
sub
mov
ljmp
jae
mov
mov
pop
sbb
push
inc
cmp
pop
cli
fdivl
mov
mov
popa
fs
js
aam
scas
aam
aad
sub
lds
sub
xor
pop
mov
add
cmp
lret
mov
loop
push
sbb
sbb
mov
in
cwtl
enter
cmp
popf
xor
mov
std
lcall
mov
add
sbb
pop
mov
roll
sbbl
scas
mov
dec
xlat
rol
ret
aam
adc
ror
bound
int
iret
es
jle
jns
fists
push
adcb
add
dec
xor
mov
pushl
pop
xlat
pop
mov
adc
push
in
mov
outsw
cld
mov
imul
and
mov
stos
lods
ds
std
and
pop
cmpsl
xchg
mov
incb
push
pushl
cmp
mov
aam
or
arpl
xchg
cmp
scas
jns
leave
inc
pop
adc
call
add
js
sbb
lret
lahf
sub
xchg
outsl
dec
jae
lret
inc
dec
xchg
jae
lods
cmp
xchg
sub
mov
pop
cld
pop
loopne
clc
ljmp
dec
jns
xor
pop
cltd
mov
dec
mov
call
lock
dec
push
mov
inc
hlt
dec
cmc
dec
testb
mov
cld
pop
mov
iret
shlw
mov
push
sbb
xchg
xchg
xor
cltd
lcall
outsl
mov
adc
mov
and
mov
push
push
lea
pop
jo
jmp
jmp
ja
jmp
cmp
out
lcall
xlat
mov
cmp
stos
aas
in
mov
outsb
inc
int3
rorl
or
sti
inc
rcll
or
aaa
clc
mov
iret
inc
cmp
pop
into
mov
sbb
cltd
push
and
or
js
stc
sub
test
sub
decl
ret
inc
jne
stos
cmp
jl
jg
mov
cmpb
inc
fwait
std
push
addr16
jp
jb
jmp
loop
ljmp
imul
je
and
jl
movb
aas
mov
ljmp
pop
inc
sub
jb
push
in
sub
inc
cmpsl
pop
cmp
imul
stos
je
mov
jae
push
jb
or
pop
ja
incl
decl
adc
dec
jg
imul
mov
sti
pop
call
pop
ret
rcrb
jmp
and
push
clc
mov
fsubrl
mov
fs
stos
das
or
push
das
pop
aaa
adc
imul
mov
call
in
cmpb
mov
incl
push
cmp
jb
icebp
add
fisttpl
mov
test
pop
in
jo
outsl
adc
shl
inc
and
cmp
sbb
xchg
mov
add
cmpsl
outsl
push
or
pushf
sbb
sbb
in
and
cmp
or
xchg
es
cli
and
movsw
clc
decl
scas
adc
gs
mov
mov
andb
mov
xchg
inc
xchg
jecxz
push
cmpsl
ljmp
jg
imul
loope
adc
jp
andl
imull
dec
fildll
jne
fnstsw
decl
scas
lret
aad
sti
xchg
in
loope
repnz
push
loop
and
outsl
shll
in
nop
xchg
or
pop
insl
pop
stos
mov
or
sub
push
mov
cmp
mov
jne
mov
addr16
arpl
xchg
push
lods
dec
xchg
enter
sbb
pop
mov
dec
lds
ret
in
loopne,pn
push
xor
jo
sbb
mov
std
and
dec
xor
daa
sub
enter
mov
sub
mov
add
rclb
mov
dec
add
sub
add
shlb
out
cmp
mov
mov
mov
es
mov
sub
in
es
insl
adc
cmpsl
cmpsb
pop
jbe
sbb
cmp
shl
mov
mov
rcl
aad
xor
fstpl
dec
push
xor
les
push
xor
cmp
sub
add
lret
mov
es
pop
imul
or
xor
lods
incl
sbb
loopne
mov
fwait
push
movsb
sub
adc
sbb
cmc
in
add
xor
repnz
xchg
mov
mov
decb
inc
std
inc
gs
jl
fdivr
sbb
cld
pop
movsb
mov
pop
repnz
adc
xor
mov
jb
mov
xor
mov
in
gs
xor
mov
shl
fcoms
mov
push
push
mov
jns
pop
and
mov
add
mov
ret
out
ljmp
or
push
xchg
inc
push
sbb
push
and
ret
inc
into
insb
sbb
cmp
sbb
push
xchg
arpl
xchg
cld
xchg
data16
sar
pusha
xchg
or
xor
cli
pop
test
in
pushl
inc
out
add
push
imul
add
pop
mov
cmpl
das
or
ret
loopne
pusha
add
sbb
loopne
jns
dec
flds
add
pop
xor
inc
push
cld
cmp
mov
ljmp
je
push
or
int3
push
ja
mov
insb
or
sbb
cmc
cmp
in
incl
xor
sub
mov
jb
pop
sbb
ljmp
aad
sbb
int3
test
addb
mov
std
fdivrs
jae
xchg
in
mov
mov
mov
pop
mov
xchg
stos
mov
cmovb
mov
incl
pop
sbb
ret
sub
pusha
push
mov
push
dec
or
push
lcall
mov
add
cld
mov
cmpsb
imul
lds
xor
xor
mov
mov
outsl
sbb
add
enter
sbb
aaa
push
pop
dec
sarl
lcall
mull
pop
iret
or
dec
mov
and
xor
lcall
call
sub
movsb
test
cmp
pop
mov
mov
pop
push
fdivr
lcall
xor
fs
mov
push
push
std
ljmp
sarl
aaa
sub
or
push
mov
xor
xor
add
add
jno
mov
pushf
add
mov
inc
xor
insb
imul
filds
mov
outsl
enter
jge
cmp
push
cmp
xchg
outsl
jb
sub
adc
dec
push
out
or
mov
lock
gs
in
cmpsb
inc
test
test
or
lcall
mov
aaa
roll
push
cwtl
mov
jne
lods
sbb
std
xchg
cli
call
movl
push
or
out
jecxz
inc
sti
test
ud2
test
and
decl
ret
jnp
inc
jb,pn
add
and
pop
and
or
jg
adc
mov
fs
add
iret
inc
push
cmp
ljmp
cmp
psrlw
cmp
dec
je
inc
jns
or
adc
mov
pop
mov
or
mov
push
int
loopne
pop
mov
mov
aaa
push
loope
imulb
dec
aaa
enter
insl
jmp
add
in
cmp
mov
test
sbb
lcall
sub
les
fmul
and
mov
sbb
pop
fisubl
popf
pushf
and
test
and
in
sahf
pop
add
or
leave
xor
xor
lret
sub
inc
mov
mov
mov
xchg
mov
adc
xor
call
outsl
xchg
pop
mov
int3
mov
xchg
mov
scas
sbb
add
je
mov
leave
push
push
mov
stos
in
mov
add
test
incl
aad
xor
inc
cs
cld
int3
adc
pushf
aam
outsb
cli
or
loop
cmp
xor
inc
or
push
xlat
xchg
ds
fisubrs
add
xor
hlt
call
xor
and
adc
std
pushl
sub
lock
daa
push
sbb
cs
and
es
call
jmp
sub
enter
push
adc
push
mov
inc
xor
enter
adc
stc
pop
loopne
mov
pop
inc
and
sub
call
inc
mov
cmp
sub
add
inc
mov
stc
mov
xchg
pop
and
xor
test
outsl
lds
rolb
or
hlt
mov
jg
or
out
sbbb
sbb
pusha
inc
inc
jo
cmc
push
pop
and
pushl
arpl
adc
nop
pop
ss
push
sub
mov
test
popa
lret
cmp
sbb
inc
inc
push
lods
ljmp
push
sub
imul
orb
xchg
pusha
dec
mov
pop
cld
call
push
bound
aad
cltd
mov
cltd
sbb
xor
or
sbb
adc
outsl
hlt
mov
sbb
inc
scas
lea
inc
aas
mov
aad
jl
inc
xchg
pop
js
pop
sub
arpl
mov
sar
jg
sbb
mov
adc
adc
xor
jg
sbb
leave
ret
mov
mov
mov
xchg
inc
lock
mov
cmp
add
jmp
or
lds
mov
jg
ljmp
jle
push
pop
pop
jbe
sub
mov
adc
ljmp
xchg
stos
add
sub
fnstsw
dec
scas
rolb
push
into
push
cmc
test
xor
fs
cmp
iret
insb
cmp
jp
outsl
mov
pop
hlt
std
decl
hlt
xchg
sbb
clc
jge
outsl
mov
inc
cmp
out
xchg
or
adc
sub
ljmp
imul
or
roll
js
rorb
dec
cmp
sub
and
push
xor
jge
push
pusha
popa
mov
and
jle
sub
and
inc
push
mov
add
jg
sub
sarb
imul
mov
lea
cmc
xchg
je
fimull
jge
xchg
ja
dec
jg
loopne
push
mov
push
loopne
int
adc
pop
fildll
or
or
lcall
testb
or
enter
std
cli
cs
sub
iret
loopne
xor
pop
jecxz
das
in
enter
lcall
sbb
orb
mov
fsubl
cmp
repnz
lcall
inc
mov
jmp
mov
xchg
mov
jmp
loopne
push
sub
push
mov
lea
inc
stos
sbb
inc
imul
enter
in
sbb
mov
dec
stos
cli
pushl
ret
sbb
cld
std
imul
pop
pop
and
mov
fldenv
mov
pop
jno
xor
mov
mov
loop
jp
adc
lcall
rolb
or
or
push
add
lods
sarl
xchg
jle
lcall
mov
shlb
xor
mov
jmp
inc
jns
adc
pop
xchg
inc
mov
rorb
xchg
add
pop
mov
sarb
sbb
xor
adc
in
adc
mov
das
jne
fwait
adc
sub
xor
and
or
inc
jnp
js
cmp
in
jle
test
ret
pop
jo
jecxz
insl
sub
pop
test
adc
fcmovnu
leave
aam
sbb
push
in
mov
or
push
icebp
call
and
adc
mov
xor
mov
mov
pop
lods
cwtl
leave
cmp
mov
nop
rcrb
and
add
jmp
pop
push
bound
loopne
dec
leave
add
in
pop
mov
sub
inc
je
imul
insb
push
ja
dec
ret
data16
add
dec
cmp
jg
loope
jno
xchg
xor
jg
sub
pusha
push
push
fwait
push
dec
cld
pop
adc
fbld
adc
fidivs
pop
mov
cmp
ret
add
les
hlt
ds
outsb
xchg
jne
mov
or
aaa
test
jne
outsl
std
add
cmpl
decl
cmpl
add
inc
push
dec
adc
jmp
sbb
pop
xchg
je
sub
cmp
mov
frstor
stos
divl
adc
cs
pop
pushl
mov
or
jg
jnp
mov
testl
call
arpl
fcmovnu
jmp
cmp
jb
sub
insb
addl
jge
pop
loop
dec
sbb
mov
xor
int
add
insl
push
jne
insl
hlt
call
jge
jmp
or
pop
stos
jo
cli
das
lock
inc
faddl
dec
stos
das
cld
sbb
jae
mov
add
cmp
fidivrs
andb
adc
push
leave
sub
inc
jb
mov
mov
mov
inc
das
loope
xor
ljmp
and
ljmp
push
cmp
inc
inc
jmp
push
ficompl
push
or
jg
push
pop
inc
xchg
adc
call
pushf
mov
mov
xorb
inc
mov
and
sarb
lcall
adc
in
aaa
rorl
fadds
mov
jge
jmp
gs
add
push
and
dec
faddp
pop
ret
fsub
call
push
xor
push
and
fnsave
aaa
test
cmp
adc
lds
push
mov
add
dec
cmpsb
dec
add
outsb
inc
and
sti
sbbb
adc
mov
lahf
outsb
push
or
rolb
mov
jne
dec
cmp
jnp
out
inc
sarb
loop
aaa
sub
daa
jb
push
xor
outsl
insl
outsl
jb
inc
insb
push
mov
out
pop
pop
mov
push
jb
outsb
fisubrl
fidivrl
jmp
adc
xor
inc
pop
sub
lret
subb
jo
jl
pop
shll
je
xlat
or
mov
scas
mov
mov
adc
sbb
push
mov
inc
lods
incl
negb
jmp
jl
pop
test
mov
call
repnz
xchg
jmp
or
jnp
and
lea
mov
mov
leave
add
lock
test
pop
sbb
mov
jbe
cmc
mov
mov
out
mov
clc
add
push
inc
sbb
cmp
call
sub
add
push
fmuls
je
cmpsl
or
lds
mov
loop
push
inc
mov
mov
jecxz
add
lock
dec
mov
mov
adc
mov
xchg
cli
fistl
clc
jmp
dec
jo
out
das
xchg
dec
mov
leave
ljmp
push
das
inc
sub
lds
test
or
jle
sub
and
insb
or
dec
test
rcll
sti
cmp
add
push
inc
cmp
mov
sub
daa
inc
push
jmp
add
add
call
in
or
enter
pop
pop
or
mov
into
xchg
mov
mov
fisubrl
insb
dec
dec
fldl
add
mov
cmc
or
add
das
inc
cld
mov
pop
insl
pop
jnp
call
lea
or
loope
push
xor
clc
xchg
sbb
jecxz
pop
decl
je
adc
cmp
call
mov
sbb
pop
cli
mov
adc
cmp
mov
imull
lock
loopne
das
loopne
mov
inc
cmp
je
dec
or
fisttps
jno
xor
loop
cmp
mov
cmp
lret
jo
lcall
loopne
mov
jl
add
or
lret
sub
jl
add
lds
jo
shl
into
mov
add
xor
adc
adc
pop
or
mov
js
add
jg
lret
mov
lcall
push
add
or
pop
inc
ret
decl
loopne
lds
or
xchg
mov
rcr
lds
das
adc
mov
mov
ret
cld
mov
inc
lret
xor
loopne
repnz
cmc
inc
mov
jg
push
adc
lods
push
loop
call
cmp
lcall
mov
call
xor
xchg
addr16
hlt
bound
cs
push
mov
mov
push
je
mov
ror
mov
adc
ljmp
shr
sbb
dec
sbbb
xor
xor
or
ret
popf
test
test
scas
xor
fimull
mov
mov
sub
add
or
into
add
mov
mov
lods
pop
std
jp
mov
jle
add
pop
cmp
jmp
lcall
sbb
aaa
es
mov
inc
xchg
push
xor
mov
adc
icebp
or
and
inc
or
loop
mov
repnz
and
decl
jb
jmp
or
or
stos
cwtl
or
push
push
mov
jl
daa
adc
nop
adcl
pop
call
aad
push
cmp
popa
gs
pop
ljmp
out
js
pop
adc
rorl
icebp
sti
dec
rolb
lock
insl
imul
and
sbb
fisubrl
hlt
mov
add
push
add
ret
movsl
mov
add
jb
dec
push
push
out
jbe
cmp
andb
lock
pushl
pop
les
add
mov
adc
mov
sbb
in
mov
pop
mov
pop
and
sub
jno
xor
mov
add
mov
pop
nop
add
pusha
imul
push
mov
mov
clc
adc
fsubr
sti
stc
or
icebp
dec
adc
mov
adc
mov
int3
or
push
or
arpl
insl
pop
mov
add
adc
loope
arpl
jnp
arpl
cltd
xchg
movsb
lock
mov
arpl
es
and
add
gs
out
jg
loopne
ret
cmpsb
or
ss
push
loop
std
add
fisubrs
fs
cmpsb
pop
pushf
add
push
loop
add
dec
inc
cmp
clc
push
out
sub
arpl
jg
ud0
repnz
or
into
les
mov
xchg
xchg
and
lret
addb
add
push
out
gs
add
ds
clc
push
call
mov
add
cmovb
imul
jno
idiv
push
repnz
fildl
sub
in
mov
pop
call
lds
gs
or
or
incl
dec
inc
dec
outsl
lcall
pop
loop
mov
xor
xor
mov
pop
jb
lods
cmp
xchg
lahf
mov
jno
cmp
xor
push
gs
imul
call
fildll
lcall
pop
sbb
jno
xor
decl
in
pushl
and
push
and
in
shrl
das
pop
sbb
dec
ljmp
std
fists
pop
mov
dec
inc
push
adc
adc
gs
out
std
arpl
fs
outsl
fildll
popf
insb
out
pusha
or
cmp
mov
mull
insl
xchg
fwait
push
ret
jge
outsl
imul
mov
lock
dec
cmpsl
push
popf
std
jg
loopne
add
fs
fidivs
out
push
add
incl
test
and
push
pop
icebp
decl
stos
gs
popa
shll
gs
pop
je
push
sar
mov
xlat
sub
inc
inc
xchg
and
add
jg
sbb
push
gs
gs
jg
mov
mov
or
adc
dec
and
std
pop
mov
inc
xor
sbb
and
or
insl
jg
jb
mov
fwait
dec
push
outsb
sub
outsl
std
fildl
adc
push
mov
xor
dec
enter
add
js
sbb
dec
scas
imul
or
push
pop
dec
in
in
gs
jns
lcall
hlt
sub
js
adc
jo
mov
mov
mov
mov
paddsw
imul
ret
fs
outsb
addr16
outsl
mov
mov
gs
dec
jb
jns
sub
outsl
sub
mov
sub
adc
jg
inc
inc
or
push
mov
les
je
cwtl
cmp
pop
adc
aaa
pop
jbe
imul
insl
inc
imulb
pop
dec
sahf
push
jbe
lods
dec
mull
xor
jl
add
outsb
jo
push
decl
pop
mov
stos
xor
mov
outsl
ja
or
pop
mov
rcrl
jo
mov
pushl
pop
jb
sbb
subl
jge
xchg
decl
arpl
jae
pop
jne
jnp
movd
inc
outsb
jno
fsubrl
incl
jb
push
add
xor
push
outsl
daa
pop
outsl
jo
xchg
outsb
mov
ljmp
leave
jno
arpl
fisttps
ljmp
lret
inc
pop
lcall
decl
pop
push
or
dec
xlat
add
insl
jae
mov
ljmp
cmc
push
push
mov
pop
arpl
ja
jecxz
xchg
push
insl
and
orl
cld
or
jmp
out
leave
push
xor
and
sbb
add
ljmp
pop
or
and
sub
or
push
sbb
call
sbb
xchg
xor
or
or
push
push
and
or
or
pop
sub
dec
and
cli
adc
or
or
xchg
or
push
mov
dec
add
sbb
or
or
add
adc
push
lcall
sbb
lock
add
or
push
or
mov
push
or
adc
test
das
icebp
adc
inc
test
xchg
pop
or
lock
add
clc
decl
jmp
gs
pop
and
sbb
lcall
sbb
sub
fcmovnu
jmp
dec
sbb
or
or
rcl
lret
decl
add
pop
add
lods
jecxz
lock
mov
push
sbb
bound
sub
popa
mov
cltd
pop
pop
or
out
dec
jmp
movsb
sub
lods
mov
pop
push
stc
adc
neg
pop
push
negb
pop
add
adc
add
mov
adc
es
outsl
pushf
or
mov
fldt
imull
outsl
mov
push
inc
outsb
cld
call
push
or
or
ret
sub
lock
mov
mov
mov
pop
adc
cmp
popa
lods
mov
jns
popf
push
sub
sbb
loopne
pop
add
mov
std
dec
std
fistpl
or
or
push
add
in
call
xchg
movl
sarl
push
and
lods
add
inc
xor
xchg
sbb
push
cmp
adc
sbb
or
push
das
mov
sub
or
push
cs
in
idiv
add
sbb
and
or
dec
sub
sbb
sub
pop
movzwl
call
pop
or
and
roll
js
xor
push
inc
inc
add
pusha
jmp
arpl
out
jle
or
lock
inc
ljmp
incb
inc
push
pop
sub
jns
add
xchg
mov
filds
test
xchg
dec
push
orl
mov
pop
ret
lcall
add
mov
pusha
outsb
dec
push
xor
mov
or
jmp
xchg
pop
or
xchg
das
std
call
add
ds
movsb
dec
nop
adc
and
sbb
dec
loop
outsb
mov
adc
push
idiv
add
test
inc
add
cmp
enter
pop
jo
adc
outsl
cwtl
daa
rorb
nop
addr16
dec
sub
sub
cmpsb
inc
sbb
rcrb
stos
sub
subb
dec
sar
sti
mov
jne
push
aam
or
adc
outsl
add
or
jmp
push
mov
inc
mov
inc
add
jne
mov
sbbb
adc
jb
mov
lea
jne
push
jae
xor
mov
aam
loopne
cmp
je
lds
sub
dec
fmul
or
and
dec
hlt
jg
daa
add
cmp
roll
lea
cmp
jbe
cmpsb
out
outsb
addl
imul
arpl
mov
add
adc
aas
adc
ja
add
jmp
pop
mov
mov
sub
cmp
ja
cmpb
jne
sti
decl
shr
rol
xchg
sub
sub
add
cmp
neg
outsl
lar
and
shlb
lea
mov
pop
cmp
or
fmull
scas
push
adc
cs
mov
gs
popa
xor
cmp
out
or
mov
sbb
cmp
cs
out
ja
add
mov
jo
jo
jmp
and
popf
jnp
pop
and
mov
or
scas
insb
inc
jle
or
adc
mov
inc
notl
pop
push
call
lea
fcmovnu
cwtl
sub
adc
lea
push
cmp
jne
sub
xor
sub
lahf
stos
add
in
xchg
mov
fs
jl
dec
lcall
pop
fmuls
fidivs
orb
mov
or
adc
dec
inc
dec
inc
mov
dec
add
dec
inc
dec
push
push
inc
push
push
or
pusha
pusha
inc
notl
push
dec
jb
jns
adc
dec
inc
mov
sub
inc
inc
add
or
je
je
arpl
jmp
jo
insb
and
dec
push
sub
loope
inc
dec
fstps
in
rorb
add
arpl
data16
pop
add
cmp
inc
or
std
cmp
push
cmp
pusha
or
xor
adc
dec
or
or
aam
push
outsl
jmp
push
sbb
add
push
inc
insb
jne
push
data16
pop
sub
push
jb
je
dec
es
adc
aas
add
ja
gs
scas
pushf
sub
cmpl
movb
mov
push
dec
outsl
xchg
xchg
jbe
inc
js
inc
jl
inc
cs
je
jb
sub
inc
mov
adc
jbe
js
mov
jbe
push
jns
jge
inc
outsb
jbe
outsl
outsb
push
fs
ret
bound
aam
xchg
inc
bound
dec
movsb
xor
adc
in
out
mov
scas
and
popa
xchg
or
stos
jo
andl
mov
mov
scas
sahf
insl
mov
or
lahf
je
adc
sub
test
pusha
outsl
inc
mov
outsb
fs
jbe
push
insb
inc
pop
gs
jo
in
lea
ss
adc
jne
stos
inc
dec
inc
add
fwait
test
arpl
cmp
ja
je
iret
arpl
jne
jo
arpl
outsl
mov
sub
popa
mov
test
pop
inc
js
lock
rcll
aas
jae
jb
data16
mov
pop
imul
or
pop
inc
sub
out
bound
imul
adc
lods
pop
and
rcr
popa
and
jae
faddl
addr16
or
jo
idivl
imul
mov
rolw
adc
imul
jbe
jo
xor
mov
or
jo
jl
test
jns
imul
cmp
and
push
push
inc
push
enter
add
push
inc
sgdtl
inc
adc
dec
adc
es
stos
push
inc
into
xchg
adc
mov
cmp
push
jo
ss
pop
add
rclb
lret
dec
and
je,pn
js
lds
nop
mov
and
cmpsb
and
jb,pn
sub
adc
and
cmpsb
ds
cs
fldenv
inc
mov
inc
daa
scas
shll
out
pop
dec
sarl
jo
cmp
loopne
push
out
pop
mov
add
add
add
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
