mov
or
rolb
and
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
add
jb
mov
test
call
in
add
xor
test
add
jp
mov
jle
clc
pusha
add
push
lea
push
pop
in
pop
add
jl
push
lea
incl
mov
push
je
mov
push
call
cmp
lea
xchg
jnp
cmp
enter
in
loop
push
inc
push
mov
jmp
push
rcll
cmp
jg
mov
ret
ljmp
push
pop
pop
pop
leave
ret
subl
in
pop
push
push
call
or
pop
cld
clc
addr16
xchg
fs
cmp
insb
in
jne
jae
cs
xor
xchg
insb
repnz
mov
call
add
test
sub
sub
push
rorl
jae
imul
les
gs
je
dec
enter
adc
gs
xchg
loope
inc
int
into
arpl
outsl
shlb
sbb
shll
jb
jae
ja
xor
inc
or
mov
out
je
movsb
movsb
jns
out
movsl
cmpsb
cmpsl
test
stos
out
sahf
out
lods
lods
scas
scas
sahf
out
sahf
mov
mov
mov
outsl
in
mov
mov
push
sahf
cmp
mov
gs
nop
jne
push
or
js
jmp
lea
push
cld
push
call
sub
sbb
mov
push
mov
bound
test
cld
xorb
ja
loope
push
xor
ss
pusha
pop
jo
inc
xor
or
dec
cmp
ficompl
add
jmp
mov
imul
add
fsubs
mov
dec
rclb
or
test
sbbl
orl
sarl
popf
dec
imul
fsts
push
sahf
out
sahf
jne
gs
iret
jae
jp
repz
ret
xorb
jo
sbb
loope
loop
jecxz
in
in
push
xchg
loope
imul
outsl
xchg
jo
ljmp
je
lea
bound
andb
cli
cmp
or
add
cmp
push
push
sbb
in
mov
dec
ret
cmp
dec
roll
push
cmp
add
inc
imul
inc
leave
sahf
adc
mov
inc
adc
loopne
aaa
mov
jo
mov
xor
mov
loopne
add
sub
sub
cmp
jb
sahf
cmp
jno
ret
or
push
push
mov
jbe
jo
rcrb
fsubs
icebp
sbb
sub
clc
push
push
repnz
pop
shr
pop
push
std
adc
cld
xchg
sahf
out
leave
adc
frstor
push
test
aam
addr16
imul
fs
imul
fsubrs
fidivl
fsubl
adc
filds
test
pop
jno
rclb
sub
sub
jb
jae
jns
jns
inc
jne
jbe
lds
ja
js
jns
cmp
into
jecxz
mov
jge
ss
or
jle
loope
sbb
inc
addb
subb
sbb
xchg
test
inc
xchg
push
ret
fidivs
mov
inc
mov
lahf
push
cmpsl
or
mov
inc
adc
mov
mov
nop
push
xchg
popa
xchg
jbe
gs
dec
cmp
xchg
addr16
gs
xchg
loope
push
lcall
insb
loop
jns
sahf
lahf
mov
shll
addr16
enter
sbb
xchg
lret
push
int3
je
popa
xor
jo
into
jb
je
jne
jo
loop
rcrb
cmp
mov
movsb
inc
movsl
imul
mov
jne
js
mov
xor
dec
testb
push
lret
jbe
fiaddl
aam
cmp
insb
adc
push
push
in
pop
sbb
shlb
data16
imul
adc
inc
push
sbb
pop
popa
cmp
pop
mov
das
pusha
push
inc
lea
hlt
rclb
stc
add
and
ret
icebp
xor
and
or
test
cs
bound
mov
mov
sti
orl
xchg
aaa
in
ret
push
aam
sbb
in
shlb
out
jmp
mov
or
dec
mov
addr16
jns
sbb
ja
sbb
lret
push
neg
pusha
insb
xor
repz
sbb
sub
lea
fsub
ret
pop
add
cmp
jg
or
test
pmulhuw
add
push
cltd
roll
cmpsl
xchg
push
inc
je
int3
pusha
add
rorb
neg
sbb
ret
out
pop
enter
push
or
ds
push
es
adc
xor
mov
inc
int
cmp
lds
imul
loope
les
mov
mov
xor
addr16
jno
lret
int3
mov
dec
imul
add
xor
mov
pop
push
jbe
push
add
sub
jmp
sub
sbb
loope
add
out
out
jbe
sahf
mov
add
mov
loopne
aam
push
hlt
or
jecxz
mov
push
div
or
sub
pop
cmp
cli
pop
clc
xor
mov
loope
mov
loop
mov
lea
push
into
cmp
mov
mov
negb
loop
loope
loop
inc
movsl
dec
cmp
in
sub
loope
rcl
rorb
cmp
rcll
aam
aad
mov
ret
add
adcb
cmp
sub
dec
ja
add
popf
push
and
testb
jne
mov
sbb
inc
shlb
push
pop
je
push
push
sbb
jg
iret
pop
sub
pop
cmp
jne
mov
sub
adc
mov
xor
pusha
mov
jb
nop
cmp
sub
jns
jmp
js
mov
cltd
hlt
adc
pop
test
test
cmpb
movl
sahf
pop
cmpl
add
push
and
iret
sbb
aam
mov
rcrb
popf
fs
sti
jb
jo
icebp
mov
mov
aam
pop
ror
or
inc
es
inc
fstpl
mov
inc
mov
and
out
cmp
je
out
jle
outsb
cmp
out
sahf
insb
outsl
arpl
jl
loopne
shrb
or
add
inc
mov
mov
cmc
cld
inc
dec
imul
scas
jge
scas
cmp
inc
mov
push
lea
mov
dec
cld
xchg
rorb
push
cmp
popa
dec
ret
out
xor
pop
jle
mov
push
inc
shll
stos
xor
pop
adc
mov
xchg
jnp
jmp
lret
das
push
pop
push
sub
dec
jge
pusha
add
add
push
push
enter
les
add
ljmp
or
xor
testb
je
ret
movsl
aaa
jb
in
sub
inc
in
gs
jb
outsb
lock
mov
jp
out
repz
cmc
div
jo
je
fadds
fidivl
ret
loope
inc
fdivl
jb
jb
jno
sbb
gs
loope
loop
push
xchg
in
out
adc
loope
jae
jae
dec
ljmp
imul
push
push
je
xor
pcmpeqb
cmp
jo
loope
leave
jmp
jmp
icebp
mov
jmp
add
test
in
sarb
and
ljmp
sbbb
add
fsubp
and
pushf
jmp
in
out
jno
iret
repz
lock
repnz
xchg
hlt
je
jo
outsl
divl
loope
cmp
es
jne
cmp
cmc
ret
jno
loope
jne
mov
out
mov
shlb
clc
into
or
xchg
pop
push
inc
mov
mov
sub
and
loopne
push
outsl
in
inc
xor
push
fcoml
jmp
sbb
loopne
iret
xor
jno
xchg
imul
push
mov
jecxz
fcoml
add
das
cld
sub
inc
jl
mov
add
dec
jg
mov
add
xor
jg
inc
inc
xor
inc
jb
ficomps
xor
jl
les
cwtl
imulb
test
push
sarw
inc
mov
push
add
sub
cmpl
into
imul
dec
in
jbe
mov
cmp
cmp
std
popa
xchg
scas
xchg
mov
movsb
push
jnp
clc
std
pop
arpl
push
fnsave
xchg
cwtl
andb
mov
mov
push
mov
mov
loopne
mov
push
pop
mov
dec
and
mov
mov
dec
add
daa
jl
andl
int
xor
icebp
push
xorl
lds
cmpsl
ja
mov
dec
mov
xor
and
add
clc
rol
xchg
adc
and
and
sub
or
fadds
xchg
pop
and
int
ret
and
iret
repz
dec
gs
push
xchg
jb
insb
divb
divl
cmpsl
jno
sbb
cs
fs
insb
sti
frstor
loope
cld
loopne
jns
lahf
gs
gs
push
jb
jmp
lret
in
dec
arpl
sbb
push
sbb
out
shlb
sub
push
and
addr16
mov
sbb
cmpsl
sub
mov
fsubr
xchg
fmull
mov
pop
aam
out
cmc
aad
aad
mov
aam
cmp
cmp
cmp
pop
addr16
stos
leave
pop
mov
ret
jo
jno
xchg
iret
mov
jecxz
lret
loopne
push
sub
pop
loope
sub
gs
lock
cltd
aas
daa
leave
lcall
aas
stc
pop
xchg
add
xor
mov
mov
imul
sbb
xchg
in
inc
decl
dec
psubd
cmp
pop
inc
inc
pushf
movsb
fs
sbb
data16
ficompl
cld
test
out
adc
pop
insb
test
add
test
jbe
mov
xor
jns
mov
aas
roll
dec
mov
iret
out
dec
push
xchg
scas
pop
jno
gs
xor
jns
out
and
out
sahf
xor
sahf
out
xor
jno
out
aam
aad
jecxz
sahf
xlat
fcomp
fidivrl
fistpl
repz
fstp
fnstsw
cmp
out
loope
jecxz
in
xor
xchg
loope
xor
cmp
jae
sbb
es
in
out
xor
icebp
repnz
imull
popf
xor
mulb
idivl
xor
jae
shlb
or
pop
sub
dec
push
fiadds
xchg
xchg
mov
mov
cmp
jae
shlb
je
cmp
push
iret
sub
push
push
and
mov
jl
lret
pop
xchg
push
test
or
fldenv
in
cmp
xor
pusha
sbb
dec
push
test
ficoml
xchg
mov
adc
mov
and
push
sub
aad
mov
int3
jbe
xchg
aas
lret
pop
dec
fstl
xchg
xchg
jns
out
xchg
xchg
cwtl
cltd
lcall
popf
sahf
jb
outsl
mov
loope
mov
lea
pop
movsl
cmpsb
test
adc
es
mov
cwtl
imul
icebp
inc
add
sti
dec
pop
insl
mov
enter
out
std
mov
pop
xchg
lcall
je
in
adc
sub
outsb
inc
lcall
and
inc
test
scas
adc
out
push
inc
jne
jb
sahf
out
sahf
je
jb
arpl
ljmp
sub
push
mov
push
jno
dec
in
sahf
hlt
enter
sahf
ret
jmp
aad
mov
scas
lcall
sbb
insl
imul
je
push
jb
cmp
rep
arpl
arpl
daa
test
push
loope
cmp
iret
xor
mov
loopne
mov
hlt
insl
jne
jb
jb
jns
das
in
je
cmpsb
jns
out
outsl
arpl
adc
or
mov
call
outsl
sub
test
mov
push
xor
sbb
pop
pusha
pushf
push
in
xchg
nop
sbb
popfw
sbb
add
xor
or
je
or
adc
gs
ret
and
loop
push
or
adc
adc
and
stos
pop
adc
or
fcomps
pop
sbb
nop
sbb
mov
mov
mov
sub
dec
fdivl
push
mov
add
sbb
mov
dec
cld
inc
int
mov
or
enter
jmp
roll
jmp
iret
and
mov
stos
dec
mov
push
lock
jbe
cmp
lods
mov
lods
je
push
mov
xor
mov
es
data16
pop
cmp
imul
lods
into
sub
push
test
cli
imul
push
mov
test
jo
mov
pop
adc
sbb
arpl
add
or
jno
push
mov
push
cmp
adc
fadds
adc
push
lock
sti
inc
add
mov
ret
and
mov
mov
mov
adcl
loopne
mov
in
test
je
rclb
shrb
adc
in
mov
pop
push
pop
fstpt
and
ja
pop
push
mov
push
mov
imul
pop
popa
cmp
loope
pusha
push
les
dec
mov
movl
mov
mov
repz
push
sbb
sarb
jecxz
mov
and
aas
cmp
sbb
push
lahf
aad
or
mov
and
add
adc
inc
repz
inc
dec
push
js
cmp
push
repz
gs
insb
jb
cmp
mov
popa
pop
repnz
int
into
push
cmp
xchg
popa
shrb
outsb
shlb
add
jo
aam
aad
iret
jns
insl
jae
mov
iret
repz
imul
jmp
inc
mov
xchg
loope
cmp
repz
test
stos
cmp
enter
push
jnp
mov
and
pusha
nop
jno
and
sbb
ds
repnz
daa
leave
adc
pushf
fimuls
lds
inc
sub
into
inc
das
xor
mov
cmp
xor
xor
jno
xor
xor
xchg
xor
out
inc
insb
sbb
push
mov
jae
repnz
mov
mov
cmpsb
xchg
and
sub
jecxz
outsl
or
cmp
jns
insb
push
pinsrw
je
adc
lret
mov
jno
adc
adc
mov
push
cmpsl
mov
sbb
jno
xor
sbb
enter
popf
sbb
call
out
sahf
out
jae
xor
pusha
pop
xchg
shll
loop
and
mov
mov
push
mov
cmp
jno
nop
push
xchg
jb
xchg
loope
outsl
xchg
arpl
jno
sbb
xchg
xor
gs
dec
jnp
dec
pushf
popf
cmp
xchg
mov
loopne
icebp
jns
mov
in
nop
cmp
inc
push
rcll
cmp
pop
cmpsb
inc
popa
ret
cmp
bound
jmp
das
fs
mov
mov
imul
mov
insb
insl
mov
push
loope
cmp
jae
xor
xor
jmp
ret
fisubrs
insb
fimull
xor
mov
jo
jp
ret
outsb
les
inc
arpl
lds
sbb
gs
jae
out
and
in
mov
sbb
lret
push
imul
jne
insb
jecxz
push
jne
jns
cmp
jecxz
js
pop
lahf
imull
jno
dec
push
dec
dec
fcomps
cmp
adc
push
mov
arpl
lods
xor
push
pop
rcr
push
pop
ficomps
lea
jg
xchg
les
arpl
xchg
rcl
fprem
cmp
je
shrb
mov
xor
and
xor
stos
je
push
inc
xchg
nop
mov
ret
dec
xchg
lods
cltd
xor
inc
pop
mov
add
xor
xlat
pop
loope
xor
jne
stos
and
int3
cmp
xchg
mov
pop
mov
jne
and
push
loopne
jne
push
xor
mov
out
adc
pop
and
jno
ror
jno
mov
clc
lea
jp,pt
sub
sar
push
lock
cs
push
lret
fs
movsb
add
xor
sub
pop
je
sti
mov
xchg
pop
leave
pop
xor
jne
bound
cli
adc
dec
mov
push
sub
mov
fisubrl
ja
xchg
sub
inc
mov
pop
icebp
and
shl
xchg
fstl
flds
xor
fidivrs
cmpl
inc
scas
cmp
xorb
cmp
and
mov
or
and
imul
fistpll
popf
test
mov
sbb
xchg
push
push
das
sub
mov
enter
mov
imul
sub
ja
cmpl
dec
cmpsl
adc
jne
fdivs
pop
faddl
add
pushf
nop
test
int
mov
shl
and
outsb
lret
mov
cmc
lahf
inc
std
add
mov
cmp
je
cmp
jb
dec
dec
cmpw
jne
dec
negl
dec
inc
cmp
cmpb
jne
cmp
push
mov
movsl
mov
lret
arpl
push
dec
pop
inc
mov
mov
lahf
sbb
add
stos
push
add
ret
mov
int3
cmp
imul
testb
sbb
clc
je
pushf
mov
mov
dec
shlb
sbb
fsin
bound
xchg
mov
scas
inc
mov
push
push
sbb
bnd
sahf
out
mov
div
sub
clc
stc
cli
inc
mov
mov
outsl
test
addr16
jne
sarb
push
jecxz
aam
outsb
outsl
test
push
shr
sub
jle
dec
dec
imul
mov
lcall
mov
cmpsb
shlb
xchg
out
ret
push
push
popa
lea
and
xor
scas
sti
jbe
sub
dec
iret
lcall
xor
jmp
push
push
cmp
movsl
mov
test
addb
icebp
and
push
rclb
cwtl
pop
and
or
in
push
pop
jne
outsb
dec
adc
inc
sti
mov
push
xorl
test
stc
add
lcall
jecxz
xchg
fstpt
xchg
and
mov
arpl
cmp
lock
in
sti
mov
mov
dec
xchg
adc
cmp
cmp
sbb
and
add
cmpsb
inc
lea
jp
inc
or
cmp
sub
mov
rolb
movsb
jmp
in
mov
popa
repnz
adc
movsb
repz
fisubs
in
popf
scas
enter
dec
cmp
adc
jns
dec
sub
xlat
sub
push
pop
mov
mov
dec
in
out
pushf
or
sbb
jo
push
lret
je
push
out
icebp
aaa
jno
jae
scas
jns
je
js
push
cwtl
fwait
ret
loopne
jne
call
jo
xchg
pusha
mov
into
mov
icebp
sbb
push
mov
add
pusha
popa
or
je
pushf
pusha
or
push
pop
add
loopne
push
mov
push
add
lea
mov
adc
xor
dec
adc
mov
or
bound
mov
sub
xor
in
loope
inc
cmpsl
jnp
mov
add
push
repz
mov
imul
pushf
add
ja
int3
repz
loopne
or
adc
adc
mov
hlt
push
xor
sbb
hlt
push
cmc
dec
testb
clc
dec
push
xchg
loope
inc
cli
push
sti
cs
fs
inc
sbb
insb
ljmp
repz
gs
repz
outsb
gs
jb
iret
repz
je
inc
imul
addr16
shll
dec
shll
or
xlat
outsb
fcoms
out
cmp
xor
scas
je
jne
push
xchg
xchg
repz
mov
outsb
iret
repz
fs
gs
cmp
repz
jae
inc
js
xchg
xlat
xor
inc
mov
push
cmp
fiadds
in
jno
jne
push
jecxz
lock
repnz
test
cmp
mov
sarl
mov
jb
outsb
jns
mov
je
outsl
in
sahf
lahf
out
outsb
arpl
test
lret
int3
add
mov
addr16
mov
in
test
in
inc
aaa
dec
aas
mov
mov
cmp
aas
lds
sub
dec
xlat
push
clc
or
stos
jno
or
int3
ror
jno
aam
fsub
sbb
or
fmull
add
cmpsb
mov
push
sub
rorb
test
inc
sub
in
pop
push
push
repz
pop
inc
push
hlt
sbbl
pop
or
add
sub
mov
add
addl
ss
adc
sub
jb
cld
dec
dec
pusha
cld
test
in
push
sub
xchg
xor
les
push
push
lcall
adc
mov
negb
je
and
jge
ljmp
push
or
sti
icebp
add
adc
lock
and
mov
mov
out
add
mul
xchg
or
fmull
mov
pop
int
push
in
in
sahf
test
or
adc
call
cmp
push
push
mov
cmp
mov
mov
mov
sub
jae
je
xor
cmp
xchg
js
cmpb
andb
sbb
add
sbb
aaa
sub
sub
push
push
jge
xor
sbb
mov
pop
ss
orl
mov
test
iret
cli
push
push
shll
lods
outsl
popa
out
cmp
cmp
jb
adc
leave
out
sub
int3
push
ja
cmp
fisttps
bound
push
pop
pop
push
inc
cmp
mov
sub
clc
dec
iret
repz
push
inc
jb
mov
hlt
cmp
gs
push
inc
jnp
cmpsb
jp
imul
insb
test
push
iret
repz
dec
push
imul
outsl
ja
insb
popa
adc
popa
sub
mov
xchg
loope
loop
sahf
out
in
gs
inc
jb
sub
popa
insl
jmp
push
xchg
icebp
shll
js
je
push
aad
outsb
xlat
xor
pop
flds
jecxz
nop
popa
insl
xchg
mov
lea
cmp
mov
pop
nop
pop
xchg
push
xchg
push
push
xchg
loope
inc
xchg
jb
popa
xchg
insl
rcrl
cwtl
push
cltd
lcall
pushf
pop
popf
xor
shlb
mov
mov
mov
pop
mov
mov
cmpsl
dec
xchg
cmpl
adc
outsl
gs
mov
stc
fdiv
cmp
push
imul
int
into
iret
and
aad
test
xchg
jne
icebp
addb
jle
adc
mov
lahf
popf
jne
xlat
mov
outsl
iret
movsb
mov
mov
aad
mov
out
push
cmp
pop
rolb
add
aam
xlat
xor
mov
jmp
add
je
pop
popa
xchg
mov
pop
pop
jg
inc
jl
or
inc
xor
movsbl
cmp
add
dec
add
xlat
sbb
jl
cmp
add
aam
add
dec
pop
mov
jns
inc
adc
cltd
jl
movsb
nop
cmp
xchg
clc
xor
cmp
cmp
or
adc
lds
push
mov
adc
int3
mov
xor
and
mov
adc
loopne
fists
sub
inc
lock
lret
loopne
les
packssdw
lds
jo
xchg
les
enter
std
fs
imul
adc
adc
cmpsl
lcall
into
and
int
cmpsb
aas
mov
je
pop
sub
rep
cmp
xchg
hlt
es
jne
cmp
idivb
stc
es
insl
mov
in
leave
mov
and
mov
mov
adc
sub
push
add
jl
sbb
pusha
test
shrl
jle
add
xor
nop
insb
test
imul
mov
xchg
lret
jp
js
xchg
or
inc
xlat
cs
pop
repz
cmp
ja
ret
fdiv
fsts
add
rcrb
xor
add
fsubrl
data16
mov
cmp
sar
adc
loop
jb
cmp
ja
push
lods
and
add
rcrb
icebp
mov
sub
lock
or
pusha
hlt
xchg
and
mov
ja
fwait
jns
xorl
clc
jl
push
mov
push
lock
jo
xchg
sub
lds
add
mov
bound
jae
pop
and
inc
mov
lret
mov
imul
pop
pop
fisubrl
push
div
add
or
sub
fsubrl
clc
gs
push
int3
add
flds
shlb
mov
pusha
popf
inc
or
lds
adc
sub
pop
mov
add
cmp
shlb
fwait
rcll
in
xchg
sbb
subl
xchg
arpl
push
push
je
nop
xchg
mov
sub
adc
fstpt
add
mov
movsb
push
pushw
int
and
bnd
insb
push
jb
mov
cmp
mov
jo
shl
enter
inc
push
lods
int3
xor
pushf
loop
inc
add
push
ljmp
mov
push
rcrb
dec
add
jmp
sub
sub
mov
movb
or
mov
sub
inc
add
push
push
inc
test
mov
enter
add
push
in
ret
rol
jmp
ret
mov
dec
cmp
lock
inc
mov
or
cmp
adc
ret
ja
or
cwtl
jne
sbb
imul
add
sub
mov
cmp
test
mov
ljmp
jns
inc
lret
fwait
push
cmp
lock
push
gs
and
dec
sbb
mov
lds
lea
jge
add
adc
gs
scas
imul
sahf
clc
hlt
sbb
iret
cltd
mov
xor
fsubrs
jmp
ss
adc
push
sbb
push
push
sub
shlb
inc
clc
into
sahf
sbb
dec
push
and
and
inc
fcoms
or
or
push
frstor
mov
loop
and
sub
in
shll
fcoml
sahf
out
arpl
jns
out
outsl
outsb
cs
and
loope
or
pop
add
xchg
or
hlt
dec
movsl
jp
inc
jne
psllq
jmp
add
dec
repz
sbb
xor
xor
jb
jns
arpl
repnz
mov
repnz
push
jns
enter
fdivrs
dec
test
xor
push
pop
or
jno
mov
adc
sbb
mov
int3
inc
arpl
dec
call
jl
xor
mov
and
jge
test
icebp
xchg
loop
mov
aam
sbb
in
in
pop
xchg
add
sbb
lock
mov
aaa
add
mov
mov
test
ret
dec
jo
mov
rcl
push
or
in
ffreep
es
xchg
movsb
dec
fldt
loope
into
xor
cltd
pusha
xchg
push
cltd
pusha
mov
cld
dec
sbb
out
je
imul
cmp
gs
dec
fsubrs
inc
adc
adc
xor
clc
push
push
xchg
bound
and
push
cld
jne
xchg
or
xchg
cmp
je
lds
xchg
bndldx
hlt
in
imulb
repz
fsubr
std
cmp
push
adc
popa
je
sti
and
push
outsl
pop
out
jns
insb
push
loope
jo
xor
xor
push
sahf
out
cmc
jo
push
outsl
je
in
inc
jns
arpl
int3
repz
xor
inc
das
scas
jnp
jb
jp
out
lock
repnz
cmpsl
js
ret
loope
cmp
jae
xor
xor
dec
cli
gs
or
adc
dec
cmp
lock
addr16
push
std
ja
rclb
insl
je
test
pop
add
jmp
mov
xchg
pop
push
xchg
sub
cmc
push
mov
sub
mov
jecxz
pop
or
fimull
jmp
xor
loope
inc
xchg
add
insl
mov
push
test
xchg
inc
xchg
out
sahf
fs
jo
fidivs
and
xchg
clc
fdivrl
cmp
fstp
filds
repnz
push
outsl
imul
or
ret
dec
iret
repz
outsl
imul
jl
xor
jbe
fldcw
nop
scas
dec
mov
add
shrl
dec
xchg
ret
lds
cltd
ret
loope
cmp
jae
je
push
iret
jecxz
push
imul
repnz
push
jb
repnz
arpl
sbb
push
xlat
stos
mov
enter
xchg
mov
orl
dec
sub
daa
sbb
lea
nop
enter
pop
enter
cmp
je
jne
mov
outsb
jle
out
push
jb
arpl
test
ret
dec
inc
adc
and
into
jo
jle
pop
in
push
pop
jl
push
mov
add
inc
int3
pop
mov
mov
inc
leave
sbb
popw
je
push
ds
push
and
push
mov
jnp
push
push
mov
sbb
mov
jns
add
lret
insb
aad
pop
cmp
push
insb
push
add
cmp
shlb
ret
cmpw
fldl
mov
dec
cmp
lret
push
inc
inc
add
movsb
mov
ret
pop
in
out
inc
iret
inc
inc
adc
je
sub
je
mov
cmp
je
inc
pop
add
adc
pop
cmp
ja
mov
in
out
add
in
xor
daa
add
push
or
or
add
jmp
cmp
jb
sbb
pusha
cltd
adc
add
dec
sbb
inc
in
int
inc
nop
pop
mov
or
jae
sbb
sbb
cli
cwtl
popf
mov
adc
mov
fmull
add
subb
in
shll
add
mov
mov
add
testb
sbb
loope
adc
push
fsubrl
ret
mov
cmp
loopne
xchg
jb
cmpsb
xor
mov
push
addb
inc
push
xchg
cmp
or
cmp
jle
outsb
inc
add
sub
int
gs
es
xor
subb
ret
insb
dec
inc
sbb
push
repz
inc
daa
sub
jo
out
jmp
dec
in
jo
out
addb
dec
lock
rorb
cmp
je
fcmovbe
mov
sbb
popa
adc
ficoml
pop
iret
aad
shr
dec
or
je
sbb
jae
test
mov
lcall
ljmp
outsb
sahf
inc
shlb
push
gs
push
in
jns
cmpsb
xor
insb
inc
mov
cmpl
and
stc
mov
jb
gs
out
sahf
inc
insb
outsl
jae
xchg
rcrl
test
xor
or
faddl
cmp
lea
jbe
test
addr16
mov
ss
cwtl
xchg
sarb
int3
jbe
mov
jne
pop
orb
push
xchg
test
adc
imul
push
and
cld
cwtl
mov
jbe
mov
in
pop
icebp
in
inc
sub
jb
xlat
xor
int
ret
pop
adc
mov
ret
clc
dec
inc
or
sbb
push
sbb
mov
int
mov
push
sub
cmp
jae
xchg
jnp
inc
cmp
cmp
stos
clc
cmpsl
or
je
push
in
test
push
je
sub
add
sarb
adc
mov
lods
jne
inc
xchg
xor
adc
shl
cmp
rcrb
sbb
push
mov
or
cmp
dec
lock
js
addr16
call
lock
jl
dec
sbb
cmp
lods
pushl
movsbl
add
or
dec
and
dec
jmp
popf
out
pop
or
sahf
jb
shlb
add
adc
leave
je
mov
inc
inc
jmp
andb
xchg
loop
xor
fimull
inc
repz
add
add
movzbl
inc
jecxz
add
jp
xchg
and
sub
add
sbb
fmul
test
jmp
cmp
pop
or
dec
mov
push
std
lea
clc
pop
add
test
clc
andl
pop
and
icebp
xchg
sub
mov
cmp
push
dec
movsb
bound
leave
mov
cmp
jmp
outsb
add
inc
cmp
mov
add
jmp
mov
xchg
fistps
sub
mov
mov
inc
inc
test
je
mov
jne
pop
ret
mov
lea
xchg
inc
xor
sub
je
mov
insb
push
add
shlb
mov
sub
push
pop
add
cmpb
mov
inc
cmp
je
xchg
jmp
mov
in
cmp
pop
add
rolb
fidivs
xchg
adc
les
andb
imul
es
inc
sahf
out
sahf
imul
out
jb
je
inc
call
inc
push
hlt
inc
in
jge
xchg
sbb
test
popa
cli
outsl
sti
jae
gs
daa
push
cli
hlt
out
push
sub
fcomps
ret
movsb
pop
mov
cmpsb
dec
xor
popa
add
negb
pop
pop
pop
fidivl
jl
arpl
scas
sub
icebp
cmp
dec
hlt
insl
sbb
xchg
cmc
inc
imulb
jb
gs
loope
cmp
arpl
je
outsl
cld
jb
jns
xchg
add
push
sbb
in
push
rclb
jl
leave
sbb
inc
cmp
fs
add
fcmovne
gs
xchg
inc
cmp
mov
mov
xor
imul
idivl
cmpsb
or
jne
adc
sarl
ret
mov
jb
xchg
inc
and
add
add
cmp
jbe
mov
out
adc
int3
dec
xor
or
inc
pop
test
push
mov
add
inc
sbb
jmp
mov
and
and
add
movzwl
pop
andb
mov
add
stos
addl
clc
add
cmp
jae
cmp
jb
inc
cwtl
nop
es
je
cmp
push
fcoml
mov
repnz
add
mov
sub
dec
adc
jg
stos
xor
jbe
pop
mov
jmp
movsb
cmp
push
sub
or
push
adc
mov
jae
mov
cmp
or
push
inc
dec
aas
jp
lret
mov
mov
pop
rorb
nop
stc
mull
arpl
cmp
jle
adc
dec
sbb
cmp
xlat
or
pop
shrl
or
jnp
cmp
jle
insb
push
mov
subb
xor
adc
ljmp
adc
pop
addl
dec
clc
jne
adc
or
aas
xor
adc
mov
fldlg2
icebp
stos
mov
jge
clc
jl
lea
xchg
ss
cltd
xchg
xchg
faddl
stc
xor
push
xchg
daa
xchg
pushw
ror
mov
and
or
or
dec
rcll
sbb
inc
inc
pop
ret
icebp
imul
fcomp
adcb
imul
push
add
clc
push
fwait
outsl
mov
mov
dec
or
bound
or
jmp
movb
adc
int
fadd
adc
cmp
xchg
adc
in
ja
jmp
in
repnz
xchg
lock
or
bound
daa
cmp
or
jb
out
sbb
xchg
jmp
mov
or
imul
sbb
fisubl
add
int3
repz
clc
bound
cmpsl
int3
popa
cs
jle
xlat
stos
jo
fs
iretw
into
cmc
in
or
lods
mov
lahf
shlb
cmp
xchg
mov
sub
pusha
lods
int3
mov
pop
dec
mov
mov
loopne
dec
mov
xchg
loope
loopne
loope
loop
jecxz
push
cmp
in
in
out
out
cmp
arpl
imul
daa
adc
pop
cmp
xchg
mov
dec
js
hlt
jae
or
ret
cmc
data16
pop
push
orl
out
std
push
enter
cmp
xorb
int3
pop
cld
push
and
and
jb
aaa
ret
pop
add
push
rcrb
push
leave
jns
mov
or
jmp
mov
dec
xchg
loope
push
push
jl
sarl
dec
mov
cmp
inc
mov
mov
sbb
mov
mov
mov
mov
mov
ret
loope
outsl
mov
inc
mov
or
xchg
sahf
ja
jns
pop
push
sbb
gs
out
pop
test
inc
cs
stc
cmp
into
push
cltd
cmp
mov
cwtl
decb
pop
mov
xchg
std
xchg
std
jns
cmpsl
mov
jecxz
push
in
push
pop
jns
xor
popa
je
ss
mov
iret
rorl
jecxz
nop
jbe
dec
test
inc
jp
dec
cmpb
stos
rol
inc
inc
pushf
mov
mov
test
cltd
pop
idiv
add
dec
add
cmp
add
jbe
mov
cwtl
fdivrl
and
mov
aad
mov
idivl
loop
pushf
mov
push
imul
out
sub
jge
loope
push
adc
push
sahf
xlat
push
sbb
out
imull
shl
sbb
and
movb
dec
xchg
push
push
mov
inc
out
sbbl
imul
cld
clc
push
dec
dec
jbe
in
lcall
aam
fnstsw
sbb
mov
mov
cltd
movsl
out
inc
movsl
xchg
insb
xor
fiaddl
adc
out
push
std
insb
gs
jno
fs
inc
imul
mov
lods
incl
adc
pop
dec
imul
fsubrp
mov
and
es
test
insl
push
cmp
test
fimuls
push
loop
push
jp
daa
lods
fnstenv
es
cmpb
or
dec
and
mull
addr16
das
pop
xchg
int3
push
lcall
or
insb
pop
cmp
lea
int3
in
repz
cld
mov
mov
sub
xchg
sbb
dec
pop
dec
dec
mov
dec
adc
iret
inc
cmp
xchg
or
and
popa
cmp
adc
ja
xchg
hlt
out
jo
mov
fsubs
ret
loope
fs
cwtl
mov
ds
fs
gs
ret
loope
gs
shlb
lcall
gs
pop
gs
gs
push
xchg
loope
inc
pop
push
gs
loope
sub
fs
sbb
mov
sbb
sbb
out
dec
cmp
decb
adc
or
sbb
mulb
arpl
arpl
arpl
xchg
loope
arpl
arpl
arpl
sbb
arpl
andb
xchg
jp
jb
push
pusha
arpl
loope
cmp
inc
arpl
arpl
and
xchg
or
mov
cmp
xchg
data16
data16
jecxz
loope
data16
cltd
add
insb
add
je
jae
jb
outsb
je
dec
and
mov
add
add
aas
xor
inc
pop
push
pop
add
add
jae
insl
jo
sahf
fldenv
rdmsr
cltd
add
dec
dec
add
insb
outsl
and
pop
fs
insb
add
cmp
insb
add
imul
and
outsb
add
imul
loope
mov
adc
shrl
fnstenv
jb
ss
add
out
mov
mov
je
add
outsb
jb
in
mov
cld
pop
sbb
add
mov
fadds
jecxz
push
dec
fucomi
movsl
jae
ja
adc
add
imul
test
jo
jnp
lret
or
add
jo
pop
push
jb
shrl
mov
int3
ja
daa
decb
popl
sbb
add
push
inc
push
push
cs
cwtl
ljmp
pushf
rorb
gs
gs
repnz
insb
push
add
push
jbe
sub
or
ret
cmpsl
push
and
dec
shll
xor
lcall
add
mov
push
in
mov
lret
test
inc
add
gs
push
inc
inc
dec
xor
lock
xorb
jb
add
repz
add
sbb
ret
inc
jne
data16
and
push
jb
fisttpll
out
icebp
add
stos
adc
movb
je
dec
and
add
imul
imul
imul
addr16
jae
outsl
fs
icebp
pop
dec
inc
dec
popa
outsl
push
xchg
enter
xor
mov
es
push
sahf
je
ret
bound
push
lods
mov
mov
mov
push
outsl
dec
cmp
fadd
inc
jns
mov
fadds
test
push
imul
dec
pop
aaa
sldt
adc
outsl
jae
inc
jnp
jne
int3
xchg
movl
push
push
test
lods
test
iret
lret
add
add
dec
inc
dec
mov
and
jno
mov
adc
out
call
fdivl
xchg
ja
insb
popa
or
fwait
sbb
je
jmp
roll
outsl
imul
cmp
stos
cmp
mov
add
push
add
push
mov
and
add
imul
pop
addr16
xchg
mov
or
jo
and
jecxz
imul
add
inc
sub
addr16
jno
xor
gs
cmp
imul
add
add
scas
or
inc
sub
sbb
push
outsl
xor
jae
arpl
cs
scas
mov
fs
mov
je
jae
popa
imul
outsb
cmp
pop
or
jne
arpl
inc
sub
pop
push
lret
nop
adc
push
pop
jbe
sarl
das
hlt
sub
add
cmp
xor
mov
cwtl
and
or
sbb
sbb
imul
insb
pop
arpl
push
jo
push
add
mov
push
cmp
pop
lea
enter
sbb
cld
cwtl
enter
je
adc
xor
fsubl
or
xchg
or
daa
add
in
inc
xor
xor
lea
or
xor
dec
cmpsb
lahf
add
mov
xor
add
aad
daa
sbb
lcall
mov
in
or
out
adc
out
leave
xor
dec
mov
push
jno
leave
or
sbb
adc
xchg
shll
xor
jae
into
inc
movsb
push
out
pop
pop
and
pop
sub
clc
or
push
push
rcrb
xlat
les
sbb
pop
add
add
outsb
shll
insl
xor
push
sub
lea
sub
cmp
jmp
in
repnz
adc
xchg
iret
ret
add
sbb
adc
mov
sub
pop
rolb
adc
cmp
mov
jb
sbb
or
jecxz
mov
xor
mov
push
sub
out
lret
insl
cltd
or
popa
mov
inc
add
push
and
pop
shlb
jns
or
ret
in
sbb
dec
ret
xchg
rorl
dec
add
mov
xor
fwait
leave
jl
adc
sbb
or
lret
jl
fistpll
add
push
sbb
fstpt
cmp
sbb
inc
jecxz
push
mov
pop
sbb
adc
jb
add
adc
mov
imul
or
or
mov
xchg
iret
bound
or
in
cltd
sub
aas
movsb
lret
das
adc
int3
cmpsb
cltd
cmc
sbb
in
pop
pusha
out
add
xchg
fnstenv
jns
cld
xchg
imul
je
lahf
int
les
or
fistl
sub
xchg
sti
adc
mov
pop
cmp
push
fwait
out
inc
rcll
cmp
test
mov
sub
gs
mov
mov
sbb
pop
xchg
ret
in
push
es
sbb
insb
xor
sub
frstor
jbe
dec
mull
and
sub
cltd
dec
xchg
sub
and
popf
inc
dec
sub
js
xor
cmp
cld
addl
xchg
cmp
inc
inc
icebp
sbb
mov
outsb
xor
dec
cmpsb
inc
mov
fnstenv
add
push
mov
adc
xor
add
mov
sti
add
add
add
dec
add
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
dec
inc
add
xor
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
and
add
xor
add
add
add
push
mov
add
push
add
add
add
pusha
mov
add
push
mov
add
je
add
add
add
incl
add
add
add
add
add
lcall
add
add
add
js
add
test
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
insl
gs
jae
je
add
add
dec
xor
cs
insb
add
add
add
gs
je
inc
inc
inc
add
add
add
inc
push
xor
cs
insb
add
add
ja
jo
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
inc
sub
mov
add
jo
fdivr
mov
mov
or
xchg
mov
add
push
int3
add
out
mov
add
insl
jmp
cmp
sub
lods
fwait
pop
or
ret
mov
mov
icebp
cli
dec
or
mov
push
push
push
movsb
or
pop
call
adc
sub
lea
add
subb
mov
mov
add
lea
add
jo
nop
cmpl
je
mov
test
je
mov
pusha
mov
add
lock
pop
mov
sbb
das
add
and
add
lea
pop
pop
and
inc
nop
mov
mov
ds
xchg
xchg
aaa
jle
sub
mov
loopne
pop
cld
mov
or
test
push
add
bound
ss
leave
je
out
add
sbb
sbb
fidivs
jmp
sub
je
push
and
jg
lea
or
dec
ja
mov
sbb
cmp
push
rcrb
push
xchg
mov
test
dec
push
jmp
fsubs
lret
fiadds
add
and
or
dec
inc
mov
add
movb
add
mov
arpl
roll
push
in
inc
cmp
push
call
orb
data16
popa
cmp
cmp
inc
or
jge
add
pop
pop
ret
push
mov
add
aaa
loop
repnz
sub
call
add
push
call
pusha
pop
push
add
jle
or
push
add
sti
xor
add
je
push
mov
add
jne
xor
stos
pop
add
jmp
add
movsl
xor
leave
dec
cmp
es
mov
cmpb
pop
or
ret
je
mov
adc
add
mov
sub
mov
lods
mov
add
lods
inc
pop
add
aas
mov
sub
je
movw
movl
jge
sbb
add
add
js
add
mov
and
shr
dec
add
clc
add
mov
add
dec
in
ljmp
add
add
adc
pop
add
gs
add
push
add
nop
jecxz
sub
call
jle
sbb
xlat
xchg
cmp
or
into
dec
push
jmp
xor
push
clc
movzwl
test
jne
test
jl
ljmp
cmc
or
mov
clc
cmp
jge
mov
inc
movzbl
add
mov
and
sub
je
dec
mov
jne
or
int
cmp
jne
or
rclb
les
aas
les
add
push
cwtl
add
sarb
enter
adc
xor
mov
xor
mov
jmp
sarl
xor
ret
add
jbe
mov
or
call
jg
sbb
push
mov
lock
xor
pop
mov
jg
inc
adc
pop
popa
je
pop
je
mov
cmpsl
popa
dec
or
sar
rep
add
cmpsl
popa
cltd
loope
jnp
lcall
add
lret
cmp
in
push
mov
mov
ret
jne
dec
aad
xchg
mov
dec
mov
add
addl
adc
iret
xchg
mov
jge
or
mov
enter
pop
cli
repz
add
jno
cli
dec
stos
push
sbb
dec
mov
push
xor
push
into
call
cmp
je
or
je
and
dec
popl
call
sub
pop
cli
cmp
sub
stc
jmp
mov
xor
aas
movl
movl
pop
pop
stc
out
jns
or
fisubrs
inc
nop
insl
fldcw
sub
insb
dec
push
cmp
push
je
add
add
jle
mov
int
incl
repnz
lahf
push
push
push
push
call
xchg
inc
dec
cmpsb
imul
push
adc
lds
jae
bound
or
inc
or
adc
pushf
jae
testb
cltd
or
mov
cwtl
test
rclb
pop
jae
cmp
jmp
aam
push
adc
subl
adc
add
aad
mov
pop
adc
in
in
test
adc
lcall
lods
push
mov
nop
inc
inc
scas
in
xor
pop
mov
outsl
xchg
popf
add
aam
lods
test
ja
mov
cmp
mov
in
push
scas
inc
rcrl
dec
or
lcall
int3
add
stos
insb
mov
subb
cmp
adc
jl
sbb
aaa
or
or
fildl
add
and
cmp
push
mov
test
dec
faddl
add
orb
ja
mov
mov
in
ret
in
aam
xor
and
iret
adcb
cmc
lea
add
aaa
dec
push
xor
pop
out
lret
mov
add
inc
jo
insb
imul
and
jb
jb
push
add
arpl
jo
add
and
and
call
jb
jae
ret
jne
and
je
bound
js
mov
adc
dec
mov
popa
insb
jbe
mov
popf
sbb
sbb
add
push
add
jnp
jae
xor
dec
gs
popa
mul
insb
add
inc
outsl
js
add
shll
outsb
gs
imul
imul
inc
test
add
dec
popa
outsb
fs
add
outsb
inc
xchg
loop
outsl
cmp
sub
je
cltd
jle
fcmovnb
popf
or
repz
rcrb
cmp
inc
insl
shr
cld
pop
sahf
out
cmp
jp
mov
xchg
pushf
movsl
sbb
or
shlb
je
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
movsb
add
add
test
add
add
insb
mov
add
pusha
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
