add
or
cwtl
or
sbbb
addb
add
clc
add
addb
add
enter
add
add
js
add
fadds
add
dec
push
add
cmp
add
pop
or
orb
add
clc
or
addb
add
add
add
addb
addb
add
test
add
rolb
add
add
add
add
add
cwtl
add
add
add
add
add
rolb
add
add
add
add
call
xchg
push
add
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
inc
add
add
cwtl
push
add
add
add
add
push
cltd
push
add
add
add
add
nop
add
add
push
add
add
add
add
mov
fwait
push
add
push
add
add
add
add
jo
add
cwtl
add
xorb
add
add
xorb
call
add
add
add
xorb
add
add
xorb
add
add
mov
add
mov
add
fadds
add
add
adcb
add
sub
adcb
add
add
add
add
add
add
pusha
add
add
push
add
add
add
add
mov
add
mov
add
add
add
add
add
mov
add
in
push
add
add
add
add
fadds
add
cmp
push
add
add
add
add
add
add
xchg
mov
add
add
add
sub
add
in
mov
add
add
add
push
add
add
add
add
add
add
js
add
pushf
cmpsb
push
add
add
add
add
mov
cmpsl
push
add
add
add
add
enter
dec
test
add
add
add
lock
add
add
add
add
sbb
add
add
add
add
inc
add
add
push
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
addb
add
call
add
add
add
add
cmp
add
pusha
add
add
mov
add
mov
add
add
add
add
add
fadds
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
push
add
verw
add
add
add
add
add
call
adc
add
add
add
add
add
str
add
add
add
add
add
verw
add
jg
add
clc
add
add
and
add
add
add
add
add
adc
add
lock
add
add
add
add
cmp
add
cld
mov
add
or
xchg
add
add
add
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rolb
addb
add
call
js
add
or
addb
add
add
add
rolb
add
add
add
add
call
mov
add
add
add
add
adc
add
xchg
mov
add
add
add
cmp
add
nop
mov
add
add
add
pusha
pop
add
jl
push
add
add
add
add
mov
add
sub
push
add
add
add
add
mov
add
loopne
push
add
add
add
add
fadds
add
lods
les
add
add
add
add
add
add
pusha
lds
add
add
add
add
sub
add
inc
push
add
or
add
add
mov
sldt
enter
add
add
lock
adcb
add
sbb
add
inc
or
adcb
add
push
sldt
nop
or
sbbb
add
mov
sldt
loopne
add
or
add
xor
add
add
add
add
add
mov
push
add
add
add
add
loopne
add
and
push
add
add
add
add
or
add
dec
enter
add
add
add
xor
add
enter
add
add
add
add
add
pop
or
add
add
add
add
add
add
orb
add
add
add
add
test
add
cld
int3
push
add
add
add
add
rorb
add
cmp
push
add
add
add
add
add
clc
or
add
add
add
add
add
add
and
add
js
push
add
add
add
add
dec
or
add
add
or
add
add
add
jns
add
or
addb
add
add
add
cwtl
or
add
add
add
add
rorb
add
rorb
add
add
add
add
call
rorb
add
add
add
add
add
or
cmpb
add
add
jo
add
add
add
add
add
cmp
add
int3
jmp
add
add
add
add
add
pusha
or
add
rorb
add
add
add
add
mov
add
adc
push
add
add
or
push
add
pop
add
add
inc
add
add
add
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
inc
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
add
add
add
add
adc
add
add
add
add
pop
add
add
add
add
addb
add
add
add
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
decl
adc
incl
adc
incl
adc
incl
adc
incl
paddusb
or
fdivr
or
fdivr
or
fdivr
or
fdivr
or
fdivr
pop
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
paddusb
push
paddusb
push
paddusb
push
paddusb
push
paddusb
push
paddusb
push
paddusb
add
paddusb
push
paddusb
push
paddusb
push
paddusb
push
paddusb
pop
adc
incl
paddusb
add
or
mov
add
mov
add
mov
or
int3
incl
adc
incl
psrad
add
loop
add
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
or
mov
add
mov
add
mov
add
or
loope
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
loopne
add
mov
add
mov
add
xlat
incl
or
incl
or
incl
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
incl
or
add
add
mov
add
into
incl
or
fdivrp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fdivrp
add
aam
add
mov
add
mov
add
add
loope
add
add
add
add
add
add
add
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
push
adc
incl
or
incl
or
add
add
add
add
fdivrp
add
fdivrp
add
push
adc
call
push
loop
and
in
xor
dec
jmp
decl
decl
ljmp
cmp
in
adc
loopne
add
add
fdivrp
add
add
add
add
add
add
add
add
add
add
add
loopne
add
mov
add
mov
add
or
incl
or
add
add
add
add
add
or
das
in
inc
dec
jmp
incl
mov
stc
ljmp
mov
ljmp
stc
jmp
idiv
nop
xchg
cmc
jl
icebp
jmp
out
ds
jmp
incl
adc
incl
or
incl
or
incl
push
add
add
add
add
add
add
add
add
add
add
aad
add
add
add
mov
add
iret
incl
or
incl
or
add
add
add
add
add
loop
cmp
fs
out
incl
idiv
cmpsb
lods
stc
ljmp
mov
cld
pushl
mov
sti
pushl
mov
ljmp
scas
stc
jmp
idiv
mov
lock
ljmp
adc
incl
or
incl
or
add
add
add
add
add
add
add
add
fcos
add
add
add
mov
add
into
incl
or
incl
or
add
add
add
add
fdivrp
adc
inc
call
incl
cltd
idiv
cwtl
lahf
idiv
sahf
movsb
idiv
mov
scas
stc
ljmp
mov
cld
pushl
mov
pushl
mov
ljmp
stos
stc
jmp
mov
idiv
mov
icebp
ljmp
out
incl
jmp
incl
push
add
add
add
add
add
add
add
add
loopne
add
loope
add
mov
add
mov
add
or
incl
or
add
add
add
or
out
push
pop
in
pushl
lock
jg
repnz
xchg
cmc
call
movsb
idiv
test
int
dec
sar
dec
int
stc
call
fdiv
call
xlat
idiv
stc
cld
dec
int
inc
lret
cmpsl
lods
cli
lcall
lcall
jle
repz
lock
out
decl
ljmp
push
loopne
add
add
add
add
add
add
add
sar
add
lret
or
aam
add
add
add
incl
or
incl
or
add
add
add
loop
cmp
pop
pusha
in
jmp
out
pushl
lock
jl
repnz
popf
idiv
rol
dec
lret
xchg
cwtl
in
ljmp
fcos
push
push
int3
incl
or
mov
add
mov
add
mov
dec
push
lret
outsb
decl
rol
call
mov
pushl
jmp
call
in
incl
ljmp
sbb
incl
push
add
add
add
add
add
mov
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
loopne
sbb
loop
cmp
decl
jmp
jmp
out
pushl
lock
mov
idiv
pushw
incl
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
pop
aam
lods
scas
repz
xchg
ljmp
out
call
in
decl
ljmp
xor
call
sbb
loopne
add
add
add
add
xlat
incl
or
mov
add
add
add
mov
add
mov
add
aad
add
add
add
add
es
xor
out
inc
dec
call
lcall
out
pushl
lock
scas
cli
call
add
mov
add
mov
add
mov
add
mov
inc
dec
sar
cmpsb
cmpsl
idiv
mov
insb
out
decl
jmp
cmp
call
jmp
sub
call
sbb
incl
pandn
add
add
add
add
mov
add
add
add
mov
add
loop
add
add
add
add
and
ljmp
xor
out
inc
dec
jmp
ljmp
out
pushl
bnd
out
add
mov
add
add
add
mov
add
jl
repz
out
decl
ljmp
das
in
sbb
jecxz
or
push
add
add
add
loopne
add
int
add
mov
add
mov
add
fdivrp
add
add
add
adc
loope
and
ljmp
xor
pushl
push
jmp
lcall
pushl
xor
incl
or
mov
sbb
xor
and
cmp
xor
add
add
or
mov
sub
sar
arpl
lcall
in
incl
call
lcall
pop
loop
or
add
add
add
loop
add
mov
add
mov
add
into
incl
or
incl
or
add
add
loopne
sbb
in
sub
in
cmp
call
incl
out
jmp
es
add
mov
add
add
mov
cmp
cld
test
add
cwtl
inc
or
add
add
or
mov
push
and
incl
out
incl
jmp
jmp
sub
call
sbb
incl
adc
incl
or
add
add
add
fcos
add
mov
add
mov
add
add
fdivrp
add
add
add
push
loop
sbb
in
xor
out
xor
out
das
xor
lcall
and
incl
or
mov
xchg
inc
add
popf
outsb
add
fisttps
jmp
dec
push
call
add
mov
sbb
aaa
in
pushl
xor
ljmp
xor
lcall
and
decl
sbb
decl
push
loopne
add
or
add
add
loop
add
mov
add
mov
add
loopne
add
add
add
or
pop
loop
sbb
jecxz
and
in
and
in
and
in
and
fcos
add
mov
mov
add
jmp
mov
out
stos
add
jmp
add
mov
add
cwtl
dec
or
mov
add
add
or
mov
sbb
sub
jmp
daa
in
sbb
jecxz
adc
loop
or
loope
pop
adc
incl
or
add
add
add
xlat
incl
or
add
add
mov
add
fdivr
add
add
add
loopne
nop
call
and
call
and
lcall
push
in
es
incl
or
mov
xchg
add
jmp
insb
add
out
add
jmp
add
lock
add
out
scas
add
jmp
jno
std
sahf
push
or
stos
pop
or
add
mov
and
fcos
pop
and
call
pop
jecxz
adc
loope
or
add
add
add
loop
add
mov
add
mov
add
add
add
or
loope
adc
loop
adc
loop
loop
and
jmp
incb
or
add
xorl
fmulp
test
jmp
fs
in
add
call
jb
out
test
push
cltd
add
in
mov
call
lods
add
sahf
bound
test
add
mov
and
out
adc
sbb
decl
pop
loope
or
loopne
add
add
add
add
sar
or
add
add
add
add
int
add
add
add
or
loope
or
loop
or
loop
adc
jecxz
sbb
or
mov
subb
addl
jmp
push
add
jmp
fs
out
insl
add
repz
push
mov
push
popf
add
jmp
add
ret
lcall
push
or
add
iret
call
pop
jecxz
or
loope
or
loope
or
add
add
add
fdivrp
add
into
incl
or
add
add
mov
add
fdivr
add
add
add
push
adc
decl
adc
loope
pop
adc
decl
adc
call
sbb
mov
add
add
subl
add
loope
add
jecxz
add
call
pop
add
out
data16
repnz
add
hlt
jbe
push
addb
notl
add
call
addb
push
push
out
movsb
push
or
add
add
or
mov
sbb
jecxz
or
adc
incl
adc
incl
adc
incl
push
add
add
add
incl
or
mov
add
mov
add
loope
add
add
add
pop
adc
incl
adc
incl
adc
incl
adc
call
sbb
incl
or
mov
xorl
add
loope
add
loop
add
out
add
jmp
add
out
bound
push
push
add
cmc
jbe
push
jp
push
test
push
nop
add
lock
add
jecxz
add
mov
dec
pop
fsubl
add
add
or
into
call
sbb
decl
adc
incl
adc
incl
adc
incl
pandn
add
add
add
add
mov
add
mov
add
mov
incl
or
add
add
push
adc
incl
pavgb
add
adc
leave
incl
or
add
xorl
add
loope
add
loop
add
out
add
jmp
add
in
pop
add
icebp
gs
rep
add
hlt
jo
push
jae
push
ja
push
js
push
jg
push
mov
jmp
add
fcomps
add
cltd
dec
pop
lds
add
add
or
mov
adc
jecxz
pop
adc
incl
adc
incl
adc
incl
push
add
add
add
mov
dec
add
incl
or
add
add
add
add
add
add
pavgb
push
pop
in
add
mov
xorl
add
loop
add
loop
add
in
add
ljmp
push
arpl
push
addr16
repz
hlt
outsl
add
repz
push
jb
push
jb
out
jo
out
jns
out
xchg
jmp
xchg
add
mov
pop
add
xchg
inc
push
scas
popf
inc
push
adc
add
add
or
mov
push
pop
pop
adc
decl
adc
incl
adc
incl
adc
incl
push
add
add
add
add
mov
add
sar
add
add
add
add
add
add
loope
push
adc
decl
or
mov
xorl
add
loope
add
loope
add
in
add
jmp
pop
add
out
bound
push
addr16
icebp
addr16
icebp
push
add
out
push
add
jmp
add
jmp
gs
out
add
call
nop
add
mov
add
xchg
push
add
xchg
inc
add
add
mov
or
sar
or
loop
or
loopne
push
adc
incl
push
add
add
loopne
add
add
add
sar
add
mov
add
fcos
add
add
add
add
add
add
loope
or
loop
or
aam
add
mov
xorl
add
loopne
add
loopne
add
in
add
out
add
jmp
pop
add
in
fs
out
gs
out
gs
in
fs
jmp
add
jmp
add
out
add
out
add
jecxz
add
loop
add
loope
add
loop
add
loop
add
aam
add
movsl
jne
call
inc
add
dec
cmp
or
mov
or
loopne
add
loopne
add
add
add
add
fcos
add
mov
add
fdivrp
add
add
add
add
add
loope
add
push
in
push
push
int
add
add
xorb
addb
fistps
fimuls
jmp
dec
add
out
add
out
add
ljmp
in
pusha
add
jmp
add
ljmp
jmp
push
add
jecxz
add
jecxz
add
fisttps
fisttpll
fmull
fisttpl
fmull
fisubs
fnsave
into
addl
popf
imul
fcompl
xor
or
or
out
or
loopne
add
loopne
add
loopne
add
add
add
add
add
mov
add
add
add
add
add
loope
add
psraw
pop
adc
incl
push
incl
or
add
subb
jle
fistps
fimuls
loopne
add
jecxz
add
in
add
out
add
call
pop
add
out
add
out
add
in
add
loop
add
loopne
add
fldl
fiaddl
fidivrl
add
flds
fadds
call
inc
add
xlat
inc
add
xlat
dec
add
ficompl
fdivs
inc
jl
lcall
cmp
pop
add
mov
or
loop
pop
adc
incl
pavgb
add
loopne
add
add
add
fdivr
add
mov
add
add
add
add
add
loope
add
adc
decl
adc
incl
incl
or
add
subb
jle
fists
fimuls
filds
jmp
dec
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
loopne
add
filds
fildl
flds
fidivrl
add
fdivrs
add
flds
ficoml
fcompl
fbld
fildll
jmp
ja
in
addl
rorb
add
xchg
dec
sub
cmp
or
loop
or
loop
pop
adc
incl
push
loopne
add
add
add
add
mov
add
fdivr
add
add
add
add
loopne
add
adc
decl
adc
decl
adc
incl
or
add
subb
jle
fists
fildl
fldl
fisttps
jmp
dec
add
loope
add
loope
add
loope
add
loopne
add
fimuls
fldl
faddl
fiaddl
fiaddl
fisttpl
fstl
fisubs
loop
add
in
add
call
movsb
add
lock
sbb
inc
dec
add
mov
cmp
add
mov
or
adc
incl
adc
incl
pavgb
add
add
add
fdivr
add
mov
add
add
add
add
loope
push
psrad
or
loop
push
adc
int
add
add
jg
add
lret
fcoml
fildl
fstpt
add
fildl
fldl
fiadds
fldl
fldl
faddl
fildl
fidivrl
add
fiaddl
fiaddl
fisttpl
fistps
jmp
jb
jmp
addl
call
movsb
add
cld
ret
in
aas
call
mov
inc
jae
pushl
inc
add
add
add
or
mov
in
or
adc
incl
adc
incl
pavgb
add
add
add
add
mov
add
add
add
add
add
loop
push
adc
decl
adc
decl
adc
aam
add
mov
jg
add
lret
fcoml
fnstcw
add
fnstcw
add
fnstcw
add
fidivrl
add
fidivrl
add
flds
fiaddl
fisttpl
fstpl
jmp
insb
add
in
add
out
add
out
mov
sbb
ljmp
dec
xchg
and
mov
add
xchg
add
add
add
add
or
mov
adc
in
push
pop
jecxz
or
loop
pop
adc
incl
or
add
add
add
mov
add
aad
add
add
add
add
loop
pop
psrad
or
in
movlhps
call
sbb
incl
or
mov
jle
add
lret
fisttpl
call
cmp
call
xor
add
fdivrs
add
fdivrs
add
fdivrs
add
fdivrs
add
fnstcw
add
fildl
fstl
loopne
add
jecxz
add
out
add
ljmp
push
leave
dec
jmp
shrb
shrl
or
mov
cmp
sbb
add
add
or
int
adc
call
decl
adc
incl
adc
incl
or
add
add
aad
add
mov
add
add
add
add
loopne
pop
psrad
or
in
adc
in
push
sbb
incl
or
mov
jle
add
enter
call
cmp
call
xor
call
xor
call
xor
call
xor
add
fadds
fisttpl
ficomps
jmp
jo
jmp
addl
call
cmpsb
add
sti
leave
dec
jmp
lds
inc
insb
sbb
mov
add
mov
add
add
add
or
mov
adc
fdivr
adc
call
decl
adc
incl
adc
incl
or
add
add
int
add
mov
add
loope
add
add
add
loopne
pop
psrad
or
in
adc
out
pop
sbb
decl
adc
incl
or
add
jge
add
enter
fmuls
call
xor
call
cs
shrl
add
aam
add
cmp
flds
fstl
jmp
push
add
out
add
out
mov
sub
jmp
mov
dec
lea
pushl
add
add
add
or
mov
sbb
out
push
sbb
in
or
loope
add
loopne
add
add
add
ret
or
mov
add
loop
add
add
add
loopne
push
psrad
or
in
adc
out
pop
sbb
add
add
jge
add
enter
xlat
inc
add
shlb
add
shrl
add
shrb
add
fimull
fisubs
jmp
jne
jmp
xchg
in
lcall
lock
push
jmp
mov
sbb
mov
xor
nop
mov
add
add
lcall
and
call
sbb
in
or
loope
add
loopne
add
add
add
fdivrp
add
mov
add
mov
add
fdivr
add
add
add
loopne
add
adc
call
pop
out
pop
sbb
lcall
or
mov
jge
add
enter
xlat
inc
add
shlb
add
shrb
add
inc
add
fcompl
jmp
insl
add
in
add
jmp
stos
add
sti
lret
push
jmp
les
call
scas
adc
shll
mov
add
add
mov
sbb
fdivrp
sbb
jmp
call
sbb
decl
adc
loope
add
loopne
add
add
add
fcos
add
mov
add
mov
add
sar
add
add
add
add
loope
or
loop
push
adc
call
lcall
sbb
mov
jl
add
enter
xlat
inc
add
shrl
add
fstpl
jmp
jp
jmp
lea
push
mov
cmp
jmp
mov
dec
adcl
push
add
mov
and
jmp
decl
pop
jecxz
or
loop
add
loopne
add
loopne
add
add
fdivrp
add
sar
add
mov
add
add
add
or
add
add
add
loop
or
in
adc
call
jmp
and
mov
add
add
jl
add
enter
inc
add
shrl
add
in
add
out
lcall
out
lret
push
fistpll
mov
xor
ja
cmp
add
add
add
or
mov
push
and
jmp
and
call
decl
push
jecxz
pop
adc
incl
push
loopne
add
loopne
add
add
add
mov
add
mov
add
add
add
add
loopne
add
adc
call
pop
out
pop
push
jmp
lcall
or
mov
jnp
add
enter
aam
add
xlat
push
add
in
add
ljmp
pop
jmp
les
call
lods
adc
mov
xor
cmpsl
mov
add
add
iret
jmp
sub
lcall
and
call
push
jmp
decl
adc
loope
add
loopne
add
add
add
mov
das
add
mov
add
add
add
add
loopne
add
loopne
pop
adc
decl
sbb
lcall
es
lcall
sbb
mov
add
add
jp
add
lret
fcoms
push
test
inc
push
call
mov
inc
jns
std
mov
add
mov
add
add
mov
sub
in
jmp
es
lcall
and
call
pop
in
or
loope
add
push
loopne
add
add
fdivrp
add
fdivr
add
mov
add
mov
add
loop
add
add
add
loopne
add
loop
out
sbb
jmp
ljmp
sub
incl
or
mov
jl
add
ret
jo
incb
push
fdivs
adc
mov
add
mov
add
add
add
or
mov
and
sub
lcall
and
lcall
pop
call
decl
adc
loope
add
add
add
add
int3
incl
or
add
add
mov
push
adc
incl
or
add
add
loopne
add
loopne
push
psrad
or
in
adc
out
sbb
ljmp
sub
incl
or
mov
add
add
mov
add
int3
xchg
add
lds
add
mov
add
add
mov
and
sub
jmp
and
jmp
decl
pop
jecxz
or
loope
add
loopne
add
add
add
loope
add
mov
add
mov
push
adc
incl
or
add
add
loopne
add
loop
push
adc
call
sbb
lcall
and
jmp
es
ljmp
sub
incl
or
mov
add
add
mov
fs
mov
add
add
mov
add
in
das
lock
daa
in
lcall
sbb
call
sbb
decl
adc
incl
push
loopne
add
add
add
loope
or
sar
add
mov
add
mov
push
pop
aam
push
adc
incl
or
add
add
loopne
add
loop
push
adc
call
sbb
lcall
daa
out
ljmp
sub
jmp
and
incl
or
mov
add
mov
add
jmp
das
sub
ljmp
sub
lcall
and
call
sbb
in
or
loop
add
pavgb
add
add
add
push
sbb
incl
or
mov
add
mov
adc
add
add
add
loopne
add
loopne
add
loop
or
loop
push
adc
call
jmp
es
ljmp
sub
ljmp
sub
incl
or
mov
add
mov
add
mov
add
mov
sub
xor
sub
ljmp
sub
lcall
and
call
sbb
call
sbb
decl
adc
loopne
add
loopne
add
add
add
jecxz
push
sbb
incl
or
add
add
mov
adc
loop
add
or
incl
or
incl
or
loopne
add
loopne
add
loopne
add
adc
decl
sbb
lcall
and
lock
repnz
sub
incl
or
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
daa
daa
xor
das
repz
sub
jmp
and
jmp
sbb
call
decl
adc
incl
adc
incl
push
loopne
add
add
add
loope
sbb
aam
add
mov
add
mov
sbb
loop
loope
add
add
add
loopne
add
loopne
add
loopne
add
psrad
or
in
adc
call
jmp
and
ljmp
lock
sub
pushl
das
idiv
xor
jmp
and
incl
or
mov
add
mov
add
mov
add
mov
add
mov
and
int
cs
aaa
xor
pushl
xor
pushl
sub
ljmp
daa
out
jmp
and
lcall
sbb
decl
pop
in
or
loop
add
push
loopne
add
loopne
add
add
add
loope
and
fdivrp
add
mov
add
mov
sub
fdivr
and
and
incl
pavgb
add
add
add
loopne
add
loopne
add
loopne
add
adc
call
push
out
sbb
jmp
jmp
daa
icebp
pushl
sub
cmp
stc
cmp
pushl
cs
xor
ljmp
sub
ljmp
loopne,pn
xor
loope
xor
in
xor
ljmp
cmp
cmp
idiv
xor
ljmp
icebp
jmp
and
jmp
and
lcall
sbb
out
push
push
in
or
loop
add
push
loopne
add
loopne
add
add
fdivrp
or
loopne
sbb
cmp
incl
or
mov
add
mov
xor
loop
xor
in
cs
call
sbb
fdivrp
add
add
loopne
add
loopne
add
loope
add
pavgw
push
adc
call
pop
jmp
jmp
push
in
jmp
and
ljmp
icebp
pushl
sub
pushl
idiv
cmp
idiv
cmp
cli
ds
ds
ds
cmp
cld
cmp
sti
pushl
xor
cmc
ljmp
sub
jmp
and
jmp
and
lcall
sbb
call
push
in
or
in
push
adc
incl
or
add
add
fdivrp
add
sbb
loop
xor
incl
ljmp
or
add
add
mov
inc
dec
out
inc
inc
in
inc
inc
out
cs
call
sbb
incl
or
incl
pop
add
loopne
add
loope
add
loope
push
psrad
or
in
out
adc
jmp
lcall
sbb
out
jmp
and
ljmp
and
repz
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
es
jmp
push
in
lcall
sbb
call
sbb
call
push
out
push
adc
decl
adc
incl
push
loopne
add
loopne
add
fdivrp
add
fdivrp
add
adc
loope
xor
in
inc
inc
out
push
push
jmp
sub
int
add
mov
add
mov
add
in
dec
push
call
decl
out
xor
in
pop
push
loop
add
fdivrp
add
add
loopne
add
loopne
add
loop
pop
pavgw
or
in
push
adc
call
adc
call
sbb
lcall
sbb
lcall
push
in
lcall
push
in
lcall
push
in
lcall
push
in
lcall
sbb
ljmp
push
call
decl
adc
decl
adc
incl
adc
incl
push
loopne
add
add
fdivrp
add
sbb
loop
xor
in
dec
push
call
jmp
in
ljmp
aaa
lret
incl
or
mov
add
mov
push
pop
loopne
fs
ljmp
pop
jmp
jmp
sub
incl
adc
incl
push
add
add
loopne
add
loope
add
loop
pop
push
loop
or
in
or
in
or
adc
call
adc
call
call
adc
out
adc
out
or
adc
decl
psrad
add
or
incl
or
incl
pop
fdivrp
add
fdivrp
add
sub
incl
out
pop
pop
jmp
jmp
jmp
gs
ljmp
cmp
incl
or
mov
add
mov
dec
push
xlat
jge
out
pushl
in
ljmp
ljmp
jmp
imul
ds
out
and
jecxz
push
adc
add
add
add
loop
add
or
incl
push
jecxz
pop
push
jecxz
or
in
or
jecxz
pop
push
jecxz
pop
or
loop
add
loop
add
loope
add
add
fdivrp
or
sub
ds
out
pop
pop
jmp
ljmp
in
pushl
in
jnp
out
jmp
loopne
add
mov
add
add
add
mov
inc
dec
into
incl
mov
jg
out
jl
out
jl
out
jle
in
jnp
in
ljmp
jmp
pop
pop
jmp
jmp
sub
lcall
pop
loop
or
loopne
add
loope
add
loopne
add
loope
add
loopne
add
loopne
add
loope
add
loope
add
loopne
or
loopne
push
push
loope
and
loop
cmp
in
push
pop
jmp
jp
in
incl
sub
jg
in
incl
nop
out
decl
sar
add
mov
add
mov
add
fcos
mov
mov
lock
xchg
out
call
xchg
lock
out
incl
jle
ljmp
jmp
pop
gs
pop
jmp
call
jmp
lcall
jmp
pushl
in
incl
out
call
xchg
lock
out
call
icebp
jmp
jle
incl
or
mov
add
add
add
mov
add
stos
scas
repnz
mov
jmp
cmpsb
bnd
repz
stos
repz
lods
repz
lods
repz
lods
repz
lods
repz
stos
repz
test
bnd
scas
repz
mov
call
or
mov
add
mov
add
mov
add
mov
je
mov
call
xlat
cli
mov
mov
idiv
mov
mov
cmc
mov
mov
cmc
mov
mov
cmc
mov
mov
idiv
mov
cli
fcmovu
cld
pushl
sbb
add
mov
add
mov
add
mov
add
mov
cmp
ljmp
mov
jmp
loop
in
out
cld
in
out
cld
in
out
cld
in
in
cld
in
in
cld
in
in
cld
in
in
cld
in
in
cld
in
out
cld
out
out
cld
jmp
loope
jmp
loope
dec
lret
repz
jp
inc
dec
enter
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
aam
mov
jecxz
mov
cmpsl
out
mov
movsl
out
cltd
popf
jecxz
xchg
loopne
js
xlat
incl
or
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
cld
add
add
add
jmp
add
add
add
incl
add
incb
add
add
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
clc
add
add
incl
add
loopne
add
inc
add
rolb
pop
jmp
add
rolb
pop
push
add
rolb
add
clc
add
addb
add
add
addb
add
incb
add
incl
add
add
add
incl
add
add
add
incl
add
aas
addb
add
add
jo
add
pop
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
jo
add
aas
addb
add
add
jg
add
add
add
incl
add
add
add
incl
add
incb
add
incb
add
cld
add
rolb
add
clc
add
rolb
pop
push
add
loopne
add
inc
add
loopne
add
incl
add
cld
add
add
add
add
psubb
add
add
add
cld
add
add
add
aas
incb
add
add
add
add
add
add
jg
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
ud0
clc
add
add
pop
incb
add
add
incl
add
add
inc
add
add
push
add
ud0
incl
add
ljmp
add
add
add
add
add
add
and
add
scas
cmp
or
mov
pop
adc
loope
adc
clc
push
adc
incl
push
sar
add
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
psrlw
push
psrlw
push
incl
incl
incl
push
sar
push
push
sar
push
incl
incl
incl
incl
incl
incl
psrlw
push
psrld
add
or
mov
add
lods
push
add
shr
adc
incl
pandn
add
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
adc
incl
push
mov
and
add
add
or
mov
add
incl
or
loope
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
in
add
int
add
add
add
scas
test
push
out
add
jecxz
add
add
add
add
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
add
add
add
add
add
add
add
add
add
scas
adc
add
add
or
mov
add
loop
add
add
add
add
add
add
add
adc
decl
adc
incl
pandn
add
incl
push
add
add
incl
or
add
add
add
add
add
add
add
mov
inc
add
mov
incl
or
incl
or
add
add
add
add
nop
ljmp
xor
decl
ljmp
xor
orl
icebp
ljmp
out
call
jmp
xor
out
pop
and
incl
or
add
incl
push
add
add
add
add
add
add
loope
add
incl
or
add
add
mov
incl
or
add
add
add
add
sub
call
in
jnp
icebp
lcall
mov
pushl
sar
mov
mov
sti
ljmp
scas
stc
lcall
xchg
call
jmp
pavgb
add
add
add
add
add
add
add
loope
add
mov
add
mov
incl
or
add
add
add
jmp
sub
call
jmp
jge
bnd
mov
stc
mov
leave
dec
sar
dec
sar
dec
into
dec
iret
mov
mov
jmp
pushf
idiv
mov
lock
jmp
incl
or
incl
or
incl
or
add
add
add
loop
add
add
mov
add
mov
incl
or
incl
or
add
incl
or
decl
sbb
pushl
inc
out
bound
jns
icebp
incl
idiv
mov
mov
jmp
mov
pushl
aad
jp
aam
jns
aad
jge
call
movsl
lock
mov
decl
jge
jmp
out
decl
ljmp
adc
incl
or
incl
or
add
add
loopne
add
mov
rolb
push
rcr
or
add
add
scas
xchg
add
loop
add
add
incl
or
call
inc
out
push
pop
jmp
push
xchg
jmp
lods
hlt
jmp
xlat
ljmp
das
mov
mov
add
test
pop
add
stos
pop
add
stos
push
sbb
mov
loop
jl
ljmp
cltd
clc
ljmp
icebp
call
jmp
inc
dec
call
decl
adc
incl
or
add
add
add
lods
push
add
scas
and
or
add
add
ret
clc
add
add
add
call
loop
xor
out
inc
push
jmp
jp
hlt
call
data16
add
rol
add
push
add
scas
add
add
push
jae
xchg
xchg
cmc
jmp
icebp
incl
jmp
lcall
in
pop
adc
incl
or
add
add
mov
sub
add
add
or
mov
add
incl
or
add
incl
or
decl
sbb
jmp
xor
pushl
inc
out
dec
push
jmp
fs
call
add
or
add
scas
adc
daa
sub
ljmp
out
pushl
ds
and
incl
adc
incl
or
add
loopne
add
incl
or
mov
add
sar
add
incl
or
add
decl
adc
lcall
in
sub
in
cmp
decl
out
cmp
decl
adc
xor
add
add
add
add
inc
add
add
lods
inc
adc
inc
jmp
ljmp
xor
call
and
decl
loop
add
add
add
loop
add
leave
cld
add
add
add
mov
add
incl
or
add
adc
in
sub
ljmp
sub
decl
adc
and
add
add
add
add
aaa
add
lea
add
mov
aad
or
add
scas
adc
rcl
xor
ljmp
es
nop
incl
adc
incl
or
add
loope
add
mov
add
add
add
add
add
stc
add
add
or
loop
sbb
in
sbb
in
and
in
or
mov
sub
nop
xor
std
jecxz
add
clc
lret
out
ret
cmpsl
push
add
mov
or
lahf
cmp
aas
add
lods
cmp
sbb
out
sub
lcall
and
call
sbb
decl
push
loope
add
add
add
jecxz
add
lods
das
add
add
add
scas
movsl
add
loop
add
add
push
sbb
call
loop
adc
loop
sbb
ljmp
or
add
mov
out
jge
push
test
push
enter
mov
add
xchg
cs
mov
add
add
or
sbb
call
decl
push
loope
push
adc
incl
or
add
jecxz
add
sar
add
add
add
rcr
or
loopne
add
push
adc
decl
push
loop
or
in
pop
sbb
incl
push
mov
add
add
add
add
lods
add
in
jns
out
mov
hlt
lods
or
test
jmp
stos
add
movsb
push
push
stc
xchg
xor
pop
add
or
adc
decl
jecxz
or
incl
adc
incl
or
add
loopne
add
fcos
add
scas
lsl
enter
jecxz
add
add
pop
adc
decl
adc
incl
adc
call
pop
out
or
cmc
add
cmp
mov
add
rep
add
in
ja
out
orl
lock
push
nop
adc
cmc
lods
or
icebp
mov
add
pushf
inc
push
repnz
xor
lahf
cmp
add
lods
push
adc
iret
testb
jecxz
pop
adc
incl
adc
incl
pandn
add
add
add
lods
xor
or
sar
add
add
push
adc
incl
pavgb
add
adc
mov
pop
mov
add
rep
add
in
ja
out
orl
push
mov
push
or
jmp
push
mov
and
in
or
add
add
or
adc
int
pop
loopne
push
adc
incl
adc
incl
or
add
loope
add
ret
clc
add
mov
add
loope
add
add
add
add
loopne
push
adc
decl
adc
incl
or
jnp
add
add
lods
add
in
js
out
orl
push
mov
out
mov
out
orl
out
cwtl
or
jecxz
add
scas
gs
mov
add
dec
add
adc
loop
pop
adc
incl
pandn
add
add
add
int
add
mov
incl
or
add
add
add
add
jecxz
or
int
add
add
mov
add
rep
add
in
jbe
in
jg
out
orl
out
test
in
jge
in
js
in
jo
jmp
add
fimuls
add
mov
add
add
add
add
mov
or
std
or
in
add
or
add
add
incl
or
mov
incl
or
add
add
add
pmulhw
add
or
add
mov
add
rep
add
jmp
or
in
jp
in
jg
out
orb
in
jg
in
jge
in
jae
jmp
push
ljmp
jmp
pop
add
out
add
call
mov
jmp
add
imul
stos
cmp
push
mov
incl
push
loopne
add
loopne
add
add
loopne
add
mov
add
loopne
add
add
add
loope
push
psraw
pop
adc
incl
or
add
mov
add
rep
add
jmp
push
jmp
pop
in
ja
in
ja
in
jne
jmp
push
ljmp
call
push
add
in
add
in
add
in
add
jmp
popl
ljmp
add
add
sbb
sub
or
in
push
pavgb
add
or
add
loopne
add
mov
add
loopne
add
add
add
loope
pop
adc
decl
adc
incl
movswl
add
add
mov
add
repnz
add
jmp
push
add
jmp
push
ljmp
ljmp
jmp
addr16
ljmp
in
outsl
add
lock
and
jmp
push
add
and
nopl
xchg
and
or
out
or
loope
add
push
loopne
add
add
add
mov
incl
or
add
add
loope
or
jecxz
push
adc
or
add
mov
add
repnz
call
pop
add
jmp
popa
add
ljmp
ljmp
out
test
push
popl
push
test
clc
shlb
test
jnp
add
push
add
pusha
gs
adc
add
shr
pop
out
or
loop
push
adc
incl
push
loopne
add
add
fcos
add
mov
incl
or
add
add
loop
or
jecxz
movlhps
decl
lret
out
add
add
mov
add
icebp
cmpsb
add
in
add
out
add
out
add
call
gs
ljmp
out
xchg
push
mov
push
movsb
or
stc
into
dec
push
shrl
scas
pop
add
xchg
and
cmp
or
adc
call
incl
adc
incl
push
loopne
add
add
fdivr
add
mov
add
loope
add
add
loope
or
in
adc
call
cld
add
add
mov
add
in
add
in
add
out
add
jmp
je
out
addl
push
fwait
add
test
jl
fcompl
cmc
sahf
and
popf
lahf
and
adc
add
add
or
call
sbb
decl
loope
add
loopne
add
add
sar
add
mov
add
loop
add
add
loopne
or
in
adc
jmp
incl
lgs
mov
add
icebp
mov
add
jecxz
add
out
add
ljmp
out
mov
push
xchg
add
cmc
mov
stc
fdivs
call
dec
pop
std
mov
and
sub
or
mov
pop
in
adc
out
or
adc
incl
push
loopne
add
add
cld
add
lods
pop
add
lret
or
add
add
in
adc
out
sbb
jmp
or
ret
loop
or
and
add
add
mov
add
loop
add
ljmp
push
popl
push
stos
or
stc
rcrl
icebp
iret
pushl
sub
frstor
add
add
or
xor
pop
leave
in
sbb
jmp
adc
out
or
jecxz
push
psraw
add
add
add
mov
inc
add
ret
call
add
add
pop
adc
decl
push
in
sbb
add
add
add
lahf
add
loop
add
call
addb
repz
add
clc
enter
fdivs
xchg
sbb
mov
daa
add
add
lods
xchg
pop
push
sbb
jmp
adc
in
or
incl
or
add
add
scas
sbb
or
mov
incl
or
add
add
loop
or
jmp
and
decl
mov
and
add
add
pushf
add
in
add
out
jp
push
mov
jbe
in
cmp
test
daa
add
add
cmp
push
repnz
jmp
sbb
jmp
decl
adc
incl
push
loopne
add
add
aam
add
scas
add
add
add
or
sar
add
add
add
decl
adc
call
sbb
lcall
and
decl
adc
or
add
add
lcall
clc
into
jo
in
push
pushl
sub
lret
mov
add
add
or
adc
movzbl
and
and
call
incl
adc
incl
push
loopne
add
add
lret
incb
or
add
add
add
add
mov
incl
or
add
add
in
push
sbb
jmp
icebp
lcall
pop
xlat
incl
or
add
mov
jmp
mov
add
pushf
sub
add
add
add
or
scas
mov
daa
sub
lcall
and
call
sbb
decl
adc
incl
push
add
add
add
mov
pop
add
scas
lcall
loope
add
add
loopne
pop
adc
decl
push
out
sbb
jmp
daa
daa
lock
or
add
jge
add
jp
add
jg
or
xchg
adc
add
add
adc
or
mov
sub
icebp
lcall
and
call
sbb
jecxz
push
adc
incl
or
add
loop
push
adc
incl
or
add
add
mov
incl
or
add
loopne
add
decl
adc
call
pop
out
push
and
ljmp
sub
lcall
push
sar
push
push
mov
and
lods
sub
add
add
lods
aaa
add
mov
xor
bnd
and
call
incl
adc
incl
push
loopne
add
add
loopne
pop
adc
add
add
add
sar
add
or
incl
or
add
incl
or
in
adc
out
sbb
sub
ljmp
in
add
pop
test
sbb
add
and
or
call
xor
hlt
jmp
call
incl
adc
incl
pavgb
add
add
incl
sbb
incl
or
add
add
pop
or
lret
adc
adc
incl
or
incl
or
incl
or
loopne
add
loop
or
in
adc
out
sbb
jmp
sub
icebp
pushl
sub
lcall
in
add
fildl
push
mov
push
add
mov
add
lods
pop
add
lods
adc
or
sbb
or
pop
or
mov
adc
shl
sub
pushl
sub
jmp
and
lcall
sbb
in
or
loop
add
push
loopne
add
add
push
fdivr
or
mov
add
or
add
add
or
inc
adc
ret
sub
call
sbb
incl
or
incl
or
incl
or
loopne
add
incl
pavgw
push
adc
lcall
sbb
jmp
and
ljmp
sub
pushl
cs
xor
sar
sbb
enter
vunpckhps
ret
into
adc
sbb
aam
sbb
fdivr
xor
xor
pushl
sub
lock
and
call
sbb
decl
adc
incl
push
loopne
add
add
or
lcall
daa
loope
or
mov
xor
add
add
or
pushl
sub
decl
adc
incl
push
add
loopne
add
incl
or
incl
push
jecxz
or
in
adc
jmp
jmp
and
pushl
sub
cmp
cli
cmp
idiv
cmp
cmp
ds
ds
ds
cld
pushl
cs
sub
icebp
jmp
and
lcall
sbb
call
pop
out
or
in
push
adc
incl
or
add
add
sbb
jecxz
cmp
ljmp
or
add
lods
test
sub
decl
ljmp
sub
incl
pandn
add
add
add
incl
push
loop
or
in
push
adc
call
jmp
jmp
pop
out
jmp
and
ljmp
repz
sub
ljmp
sub
cmc
ljmp
sub
jmp
and
jmp
push
in
lcall
sbb
call
call
decl
adc
incl
push
loopne
add
incl
add
pop
sbb
out
push
push
jmp
das
aaa
sar
add
add
add
lods
xchg
xor
pop
ljmp
dec
out
sub
in
adc
loopne
add
add
loope
add
decl
pmulhuw
or
adc
call
jmp
lcall
sbb
lcall
sbb
lcall
sbb
call
sbb
call
jmp
decl
pmulhuw
add
add
and
jecxz
aas
inc
out
pop
pop
jmp
pushw
pushl
or
outsl
add
lods
jno
xor
repnz
jae
jns
icebp
ljmp
in
lcall
ljmp
sub
loope
add
add
add
loopne
add
jecxz
add
or
incl
or
incl
or
incl
pop
jecxz
add
loopne
add
sbb
loope
cmp
in
push
pop
call
jnp
lock
in
push
daa
mov
pop
add
lods
dec
and
rcl
outsl
xchg
icebp
decl
test
jle
in
pushl
in
lcall
ljmp
xor
lcall
jecxz
movlhps
decl
loop
or
loope
or
loope
or
loop
or
sbb
jmp
jecxz
ss
call
call
jp
in
incl
xchg
repz
fs
adc
mov
cmp
add
scas
push
add
scas
xchg
inc
inc
leave
lock
jmp
mov
icebp
lcall
sahf
icebp
call
lock
xchg
incl
mov
incl
xchg
out
lcall
mov
icebp
jmp
lods
cmc
ljmp
ja
pushl
add
add
stos
inc
or
inc
lock
xchg
in
rol
dec
sar
inc
ret
clc
inc
ret
inc
ret
idiv
ret
inc
ret
idiv
ret
inc
ret
idiv
ret
ret
idiv
inc
call
sar
mov
sbb
xor
shr
or
pushf
add
lods
aaa
add
scas
add
add
mov
cs
icebp
cmpsb
test
pushl
cmc
jmp
jecxz
jmp
in
jmp
out
jmp
out
jmp
in
jmp
in
dec
int3
icebp
pushl
mov
into
out
sbb
mov
addl
lods
xor
or
inc
add
lods
addl
ss
fstl
lret
out
pop
lret
call
push
push
lret
in
push
leave
fcompl
add
jp
push
scas
cmp
or
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
incl
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
pop
add
rolb
cld
add
add
rolb
incl
add
add
add
add
add
add
pop
cmpb
add
add
pop
orb
add
add
jo
add
jo
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
pop
addb
add
add
jo
add
jo
add
pop
sbbb
add
add
add
add
add
add
add
incl
add
add
add
incb
add
add
add
clc
add
add
loopne
add
add
add
lock
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
incl
add
addb
add
add
inc
add
add
add
push
add
ud0
add
clc
add
aas
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
mov
addl
xlat
roll
lret
call
add
iret
std
add
aad
add
sar
add
sar
add
sar
add
aam
add
iret
cld
add
iret
cld
add
int
add
int
add
int
add
int
add
int
add
iret
cld
add
aad
add
ret
cmpsl
add
mov
add
mov
mov
add
loope
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
jecxz
add
pushf
xor
add
mov
add
add
fdivrp
add
fdivrp
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
add
mov
add
add
add
fdivrp
add
fdivrp
add
add
fdivr
add
fdivrp
add
hlt
call
ss
ljmp
cmp
jmp
xor
decl
or
incl
push
add
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
or
incl
add
les
add
cmp
pop
fsub
add
loopne
add
add
fdivrp
add
incl
push
in
lcall
sub
lcall
incl
ret
ret
mov
mov
pushl
incl
incl
ud0
add
loopne
add
fdivrp
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
loopne
add
add
add
movsl
sub
add
loope
add
loopne
add
add
loop
or
decl
pushl
call
cmpsb
call
mov
decl
nop
call
cmp
push
pop
lcall
incl
or
incl
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
add
incl
add
std
add
xchg
or
add
lds
or
incl
or
incl
pop
loopne
add
call
incl
decl
call
lcall
and
das
call
inc
dec
pushl
aas
incl
sub
jmp
dec
push
incl
cmp
adc
incl
pop
in
incl
or
incl
or
incl
or
incl
pop
loope
add
dec
add
scas
dec
add
mov
incl
or
incl
or
incl
or
decl
pop
ljmp
ss
cmp
lcall
and
incl
pop
shrl
dec
push
lcall
add
jmp
push
sub
incl
ud0
add
jmp
incl
or
incl
or
incl
add
into
add
popf
pop
add
sahf
and
add
out
add
jecxz
add
in
add
decl
push
incl
add
stc
add
lods
retw
add
and
adc
push
push
add
add
fwait
daa
add
ret
or
incl
or
in
add
jecxz
add
jecxz
add
in
add
mov
add
mov
incl
or
incl
or
incl
or
incl
or
hlt
incl
add
sti
add
mov
add
add
call
add
cmc
inc
add
in
add
out
add
add
xchg
sldt
mov
incl
or
incl
or
incl
or
incl
or
incl
or
incl
add
lcall
add
out
add
in
add
out
add
icebp
incl
or
incl
push
add
mov
call
ljmp
add
std
jno
sti
xor
sbb
imul
add
out
or
incl
or
incl
or
incl
or
incl
or
incl
pop
loope
add
mov
inc
add
fdivr
add
out
add
in
add
jmp
incl
or
incl
add
aad
add
add
add
add
adc
jmp
clc
js
ljmp
add
call
lcall
add
out
lldt
add
incl
or
incl
or
incl
or
incl
or
incl
pop
out
add
mov
jns
pop
jecxz
add
in
add
in
add
call
incl
add
incl
add
add
adc
jmp
cmc
addr16
pushl
call
add
ljmp
add
loop
add
add
andl
add
in
add
in
add
in
add
in
add
out
add
mov
incl
or
incl
or
incl
or
incl
or
incl
add
clc
add
fwait
xor
add
add
adc
jmp
repnz
je
incl
add
lcall
add
cld
mov
jmp
sub
stc
rclb
add
add
mov
incl
or
incl
or
incl
or
incl
or
incl
add
ret
mov
add
in
add
in
add
out
add
ljmp
add
add
adc
jmp
lock
add
cli
jae
std
jnp
std
jge
cli
jne
push
outsb
add
sti
cmpsl
add
cld
movb
in
dec
add
in
das
add
mov
add
push
add
mov
incl
or
incl
or
incl
or
incl
or
incl
add
or
incl
or
incl
or
incl
or
incl
or
incl
add
lret
xchg
add
call
jmp
out
pop
add
hlt
imul
imull
push
insb
add
repnz
icebp
jo
push
jne
push
xchg
add
sti
movl
push
cmp
aad
add
mov
incl
or
incl
or
incl
or
incl
or
incl
add
ret
les
or
incl
or
incl
or
incl
or
incl
or
incl
add
int
add
add
adc
jmp
in
push
add
icebp
pop
add
repnz
add
repz
push
test
clc
mov
add
sti
scas
add
dec
add
call
add
add
lock
or
incl
or
incl
or
incl
or
incl
add
mov
incl
or
incl
or
incl
or
incl
or
incl
add
out
add
add
adc
jmp
ljmp
push
insl
add
clc
xchg
add
sti
lods
add
sti
stos
add
dec
add
call
cmp
call
cld
out
or
mov
add
add
pop
roll
or
incl
or
incl
or
incl
or
incl
add
mov
add
loope
add
in
add
in
add
out
add
icebp
incl
add
incb
add
call
add
jmp
add
repnz
clc
xchg
add
cli
movsb
add
cld
rolb
fsubrs
jns
call
add
or
mov
mov
add
out
incl
or
incl
or
incl
or
incl
add
movsl
add
fdivr
add
loop
add
jecxz
add
in
add
out
incl
pop
incl
add
cltd
call
add
jmp
clc
popl
sti
mov
fiaddl
ljmp
add
pushf
or
pop
jge
add
pop
and
add
repz
sti
incl
or
incl
or
incl
or
incl
or
incl
add
sub
add
loope
add
loope
add
loop
add
jmp
add
cli
incl
add
lock
test
call
add
ljmp
roll
dec
cmp
ds
les
add
and
incl
or
incl
or
incl
or
incl
or
incl
pop
fdivr
add
lods
jnp
add
rolb
fdivrp
add
add
loope
add
out
add
repz
or
incl
add
mov
add
add
call
add
inc
add
dec
xor
ljmp
std
or
add
das
sub
pop
ud0
add
incl
pop
repz
or
incl
or
incl
or
incl
add
xchg
add
add
add
test
add
add
add
loope
add
jmp
decl
ud0
add
hlt
mov
stc
add
imul
add
jmp
add
xor
push
push
or
clc
incl
pop
ljmp
or
incl
pop
add
ret
lret
add
xchg
or
add
add
add
int3
add
add
fdivr
add
add
loope
add
in
incl
push
sti
decl
adc
incl
add
mov
enter
cmp
sub
jnp
push
push
or
incl
pop
cld
incl
or
incl
push
jecxz
add
loopne
add
fdivr
add
fdivrp
add
movsl
push
add
mov
sti
add
fdivrp
add
add
add
jecxz
add
in
incl
add
decl
or
in
or
adc
inc
es
sbb
incl
xor
incl
xor
ljmp
xor
ljmp
push
dec
adc
incl
or
incl
pop
cld
incl
pop
out
incl
or
incl
pop
add
fdivr
add
in
add
mov
add
add
mov
incl
push
out
add
fdivr
add
loopne
add
ljmp
add
decl
or
call
pop
sbb
dec
es
sub
call
and
push
adc
decl
or
incl
add
cmc
incl
push
in
incl
push
jecxz
add
fdivr
add
add
hlt
incl
add
in
add
add
xchg
or
add
incl
or
incl
push
loope
add
fcos
add
jecxz
add
jmp
add
stc
incl
or
decl
adc
decl
sbb
call
sbb
incl
push
cld
incl
push
hlt
incl
pop
in
incl
or
incl
add
add
call
incl
add
lock
pusha
inc
add
or
or
scas
inc
dec
pushl
cmp
decl
adc
jmp
incl
add
incl
add
incl
push
loop
add
out
add
jmp
add
in
incl
push
jmp
add
out
add
loop
add
incl
add
incl
add
out
lcall
incl
incl
add
out
add
pop
dec
add
mov
add
std
imul
pop
aas
inc
lcall
incl
pop
cli
incl
add
loope
add
add
fdivr
add
add
incl
add
jmp
and
jmp
jmp
decl
or
roll
add
add
add
dec
sub
call
cwtl
decl
pushl
ljmp
jmp
ljmp
pushl
incl
xchg
lcall
xchg
jmp
and
decl
imul
fs
cmp
roll
mov
fcos
fcmovnu
fcmovnu
call
aad
pushl
outsl
ljmp
sbb
xchg
pop
pop
ljmp
or
add
add
aaa
or
ljmp
ud0
adc
dec
adc
inc
adc
ljmp
push
push
call
add
sbb
add
add
rolb
incl
add
cld
add
add
add
add
add
add
add
add
add
add
pop
loopne
addb
add
pusha
add
pusha
pop
add
loopne
add
loopne
addb
add
add
add
add
add
add
add
add
pop
add
pusha
aas
add
and
add
pop
lock
add
add
add
add
add
pop
lock
psubb
add
incb
add
incl
add
inc
add
sub
add
sbb
add
xor
add
add
and
add
int
add
int
add
aam
add
rcl
add
fcmovnu
add
add
fcmovu
add
xlat
fildl
add
fiaddl
add
fiaddl
add
fldl
add
mov
add
add
add
or
add
outsb
add
fst
add
loop
add
jecxz
add
loopne
add
loopne
add
loope
add
loope
add
loop
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
in
add
aad
add
lods
inc
add
shll
or
incl
or
incl
add
jecxz
add
in
incl
or
decl
or
in
incl
add
incl
add
loop
add
jecxz
add
loop
add
loop
add
loop
add
jecxz
add
add
add
add
int3
inc
add
add
in
add
loope
add
out
sbb
hlt
call
clc
incl
stos
lcall
xchg
call
cli
call
add
loop
add
jecxz
add
jecxz
add
jecxz
add
in
add
loop
add
rolb
add
ljmp
loop
push
cmp
mov
lcall
movsl
sti
mov
movsl
push
xchg
pushf
std
mov
ljmp
cmp
incl
or
incl
or
incl
or
incl
or
incl
or
testb
aam
add
add
add
mov
enter
incl
or
incl
inc
decl
ljmp
inc
mul
and
decl
dec
cmp
xor
lcall
inc
lcall
cmp
call
and
in
incl
or
incl
or
incl
push
xlat
xlat
add
mov
add
mov
add
add
add
shll
jmp
incl
or
decl
and
lcall
and
incl
or
mov
lods
pop
dec
das
add
loop
or
sarb
add
cli
incl
or
incl
or
incl
or
stc
add
mov
add
add
add
jmp
add
jmp
incl
or
sarl
fnsave
add
repz
add
negb
inc
add
sahf
adc
add
mov
add
out
incl
or
incl
or
incl
push
aam
add
push
add
out
add
ljmp
or
aad
add
mov
add
inc
add
std
ret
mov
jmp
decl
mov
add
stos
xor
push
xlat
jmp
add
ljmp
pop
loop
add
mov
xchg
add
ljmp
or
incl
or
incl
add
add
add
add
inc
add
std
roll
decb
add
ljmp
add
jmp
add
dec
add
add
lds
or
jmp
incl
push
aam
add
jmp
add
jmp
incl
pop
in
add
mov
loope
add
cld
ret
add
std
test
call
add
inc
add
cmc
arpl
call
xor
lret
add
xchg
and
mov
add
out
add
jmp
incl
or
incl
push
fstp
add
aam
add
jmp
add
jmp
incl
push
loop
add
mov
fiadds
sar
rolb
testl
add
cmc
jp
push
mov
push
addb
int
add
fsubrl
add
add
lock
or
incl
or
incl
or
incl
push
add
jmp
add
jmp
incl
push
call
and
add
add
add
add
cmp
add
repnz
hlt
jbe
push
jp
push
outsl
add
icebp
outsl
add
std
mov
sbb
idivl
push
pop
pop
jb
add
stc
in
or
incl
or
incl
or
incl
push
fstp
add
int
add
jmp
incl
or
incl
push
idiv
add
mov
add
add
add
ss
cli
mov
add
lock
out
data16
cli
xchg
add
ljmp
sbb
test
sbb
or
pop
mov
clc
add
lock
or
incl
or
incl
push
fcmovu
add
mov
incl
or
incl
or
incl
pop
cld
incl
add
jle
add
add
add
add
das
add
cli
lea
jmp
add
repz
ljmp
sub
repz
sarl
add
add
add
add
or
mov
push
cld
incl
or
incl
or
incl
or
incl
add
scas
pop
add
loope
add
out
add
call
incl
push
repz
add
sbb
add
add
das
add
stc
cwtl
add
std
xchg
add
call
push
jmp
sbb
daa
jmp
adc
jmp
add
stc
incl
or
incl
or
incl
pop
fdivr
add
mov
pop
add
in
add
in
add
out
incl
pop
out
movsl
and
mov
iret
daa
add
jmp
std
inc
push
div
sbb
cltd
lret
sbb
or
add
add
xor
pushl
add
repz
or
incl
or
incl
add
cmpsb
xor
add
test
or
incl
or
incl
or
incl
push
repnz
ud0
or
in
sahf
sahf
or
add
cmp
jmp
sub
incl
or
incl
or
incl
or
incl
or
incl
add
or
add
add
add
fadds
pop
call
incl
or
incl
push
repz
or
call
adc
imul
jmp
push
xor
and
cmp
aas
xor
incl
pop
or
cli
incl
or
incl
pop
loope
add
in
incl
push
rolb
add
add
add
icebp
or
out
incl
add
incl
add
in
incl
pop
cli
incl
or
std
sbb
jmp
and
jmp
or
incl
pop
sti
incl
pop
icebp
incl
push
in
add
loop
or
out
incl
add
jmp
add
push
or
pop
sub
push
xor
out
incl
add
incl
add
incl
add
incl
add
incl
add
repz
push
lock
add
incl
add
incl
add
decl
paddsw
cs
call
add
add
add
dec
movups
fisubrl
ljmp
std
cmp
cld
lcall
sbb
decl
movntq
out
adc
repnz
cmp
jmp
cld
lcall
decl
ud0
add
mov
add
add
lcall
add
decl
movsl
cmpsb
pushl
mov
mov
pushl
mov
jmp
sub
faddl
add
test
add
sbb
add
and
add
add
lcall
add
call
add
call
add
inc
add
lcall
add
jmp
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
add
sub
add
adc
add
and
add
add
and
add
shll
add
int
add
lret
roll
add
rolb
add
roll
add
rolb
add
iret
add
int
add
rcl
add
int
add
scas
xor
add
arpl
add
add
loope
add
in
add
out
add
loope
add
fdivr
add
fdivrp
add
add
loopne
add
add
rcr
add
add
add
mov
mov
push
fdivrp
add
in
push
sbb
incl
cli
lcall
std
call
incl
stc
call
adc
loopne
add
fdivrp
add
add
add
add
add
mov
add
loop
add
call
jmp
cs
clc
outsl
js
aam
mov
cltd
movsb
lods
call
sbb
call
and
incl
push
in
add
loop
add
mov
add
xchg
add
add
ljmp
and
jecxz
add
add
add
fistps
decl
add
add
sbb
hlt
incl
or
incl
push
rol
add
xchg
adc
add
add
out
incl
or
hlt
add
add
pop
add
les
add
mov
inc
add
add
xchg
xchg
in
sub
add
ljmp
add
mov
or
incl
or
cmp
out
add
add
ret
mov
fwait
or
fdivrl
or
jl
add
add
add
xor
pushf
add
call
incl
add
mov
add
jmp
incl
add
add
add
add
pop
add
lds
or
aad
or
jmp
add
jb
fstpl
or
incl
or
incl
add
roll
add
roll
or
incl
pop
out
incl
add
add
add
add
pop
add
cltd
or
push
rolb
imul
add
adcl
addr16
fistl
or
incl
or
incl
add
rolb
add
mov
add
repz
fiaddl
pop
add
rcrb
add
clc
hlt
add
jge
add
add
add
inc
aas
hlt
js
pop
cmc
incl
or
incl
add
movl
or
incl
or
decl
add
pop
add
repnz
push
roll
incl
xor
push
add
add
int3
int3
cld
or
jmp
add
jmp
add
loopne
add
movsl
test
add
xor
add
out
add
add
icebp
scas
add
add
subl
fsubl
jns
add
add
add
iret
decl
sub
stos
add
in
add
xlat
jecxz
add
add
mov
incl
add
incl
adc
lcall
addr16
insl
push
pop
ljmp
fildl
or
loop
add
incl
add
add
arpl
add
fsubrs
push
adc
incl
add
incl
add
incl
add
incl
pop
idiv
add
lock
add
decl
adc
incl
add
incl
add
test
add
into
or
add
xchg
cli
lcall
std
ljmp
std
ljmp
std
lcall
std
decl
cli
decl
or
out
add
add
add
xor
add
xchg
add
mov
add
call
add
mov
add
ljmp
lock
add
add
add
add
add
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
add
add
addl
add
lock
push
or
add
add
add
add
add
add
add
jbe
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
jne
add
jne
add
jne
add
jne
add
add
add
jne
add
add
add
jne
add
add
add
add
addb
add
add
add
add
add
sldt
add
add
add
add
sldt
add
add
add
add
sldt
add
add
add
addb
add
arpl
add
add
add
sldt
add
add
add
add
je
add
sldt
add
add
je
add
sldt
add
add
je
add
sldt
jne
add
sldt
add
add
jne
add
sldt
add
add
jne
add
sldt
add
add
jne
add
sldt
add
add
jae
add
jne
add
add
add
str
add
add
lldt
add
add
ltr
add
add
verr
add
add
verw
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
popa
jae
popa
outsb
addr16
jo
add
add
imul
jo
jb
dec
gs
fs
add
inc
insb
outsl
jae
inc
insb
imul
add
add
arpl
add
add
outsl
jae
push
jb
outsb
je
jb
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
popa
addr16
imul
je
outsl
jns
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
popa
jbe
inc
imul
add
add
and
add
add
or
add
add
add
add
dec
iret
add
add
or
push
lods
lret
js
movsl
dec
int
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
or
add
rorb
add
sbb
faddp
pop
mov
xor
imul
arpl
lahf
pop
pop
lahf
popa
inc
dec
pop
mov
or
xchg
pop
sub
ret
sbb
popf
push
ja
arpl
fisubrs
jbe
mov
or
mov
ljmp
arpl
nop
daa
in
pop
imul
jne
add
loop
mov
pop
dec
cmc
cmpsl
xor
testl
ds
mov
icebp
test
test
xchg
push
jmp
aad
test
out
cltd
push
cmpsb
sbb
gs
push
jo
xor
popa
sahf
jns
adc
in
orb
or
or
mov
inc
mov
mov
imul
es
dec
fcoml
ret
or
xchg
sbb
pop
movsl
mov
dec
dec
test
dec
movsl
les
push
add
adc
jnp
add
or
aas
pop
mov
sbb
sub
jne
pop
fcoms
data16
or
cmpsb
dec
lret
cwtl
pop
mov
or
xor
push
mov
push
xchg
sub
je
ror
mov
loope
aad
fincstp
mov
pop
ja
outsl
adc
out
mov
cmp
xchg
dec
enter
pop
or
dec
push
jae
or
mov
js
add
lods
leave
fdivrl
jb
mov
fmuls
repz
fimull
push
sub
jno
adc
leave
test
call
push
pop
pop
rorl
sub
sar
lret
sub
ljmp
sahf
push
mov
in
xor
les
out
xor
idivl
xchg
xor
lds
and
xlat
cmp
fchs
sbb
cli
and
and
inc
or
lahf
lods
jg
pop
test
into
aam
push
add
mov
ljmp
outsb
shr
add
lcall
shrl
and
lods
int3
push
out
lahf
pop
add
aas
mov
jp
lcall
add
imul
notb
das
in
shrb
pop
loope
pop
hlt
dec
jl
inc
std
sbb
xchg
std
jns
nop
imul
sub
mov
fs
inc
imull
aas
or
cmpsb
jmp
xchg
loope
sbb
scas
inc
mov
insb
add
mov
push
push
mov
in
inc
shl
clc
jg
test
mov
or
mulb
das
cmp
push
int
jbe
inc
add
adc
out
jo
fs
mov
push
adc
in
mov
lods
jp
lret
adc
sbb
ss
jbe
into
pop
test
mov
hlt
rcrl
dec
push
loop
outsl
cmpb
or
arpl
push
mov
mulb
xchg
in
lret
pop
sub
push
jo
mov
test
test
repnz
pop
or
cltd
addb
or
outsl
inc
mov
in
rcr
xchg
repz
lods
xchg
out
dec
sbb
xchg
insb
cmpsb
lock
add
cmp
jmp
test
or
sbb
and
mov
xchg
mov
cli
movb
xor
push
aas
lcall
or
call
aad
inc
or
fadds
mov
inc
lds
sbb
jnp
push
cmp
popf
fcompl
push
das
xor
xor
push
xchg
dec
bound
andb
loopne
and
stos
ret
ret
mov
inc
dec
or
ss
enter
iret
mov
xor
mov
leave
and
sti
xor
inc
xor
movsb
iret
ror
mov
test
xchg
mov
inc
jbe
xchg
or
cltd
add
jp
mov
ret
sbb
out
lret
sub
cltd
out
xor
mov
leave
fs
mov
pop
nop
scas
stos
sub
div
lea
es
push
pop
jl
imul
ds
dec
push
rclb
lahf
jbe
push
pop
or
push
outsb
sub
scas
outsb
mov
rcrl
push
fiadds
dec
lods
sbb
scas
test
mov
adc
sarl
pop
fldt
test
xchg
out
lock
jno
push
lret
pop
push
ret
xchg
pop
orb
jg
das
jne
in
sarl
bound
cwtl
sub
push
mov
push
fs
loop
pop
scas
pop
int
jg
xchg
push
push
xchg
sarb
shl
imul
mov
mov
jbe
sub
nop
dec
mov
dec
lods
inc
pop
lds
call
cmp
pop
das
cmpsl
xchg
adc
outsb
ljmp
std
imul
add
xchg
andb
sbb
jae
mov
std
inc
rol
scas
push
lret
jmp
movsl
and
push
jae
mov
sbb
xchg
addr16
rclb
arpl
xor
push
adc
sbb
ss
test
xor
xor
xor
fmull
adc
lret
sbb
pop
cwtl
cmp
mov
xor
outsl
pop
js
stc
push
inc
test
fdivrl
pop
xchg
icebp
mov
or
or
ds
lods
imul
je
jnp
mov
int
jge
bound
std
cmp
add
xor
leave
and
xchg
cmpb
lcall
pop
push
push
ljmp
cld
ds
popf
jle
icebp
cs
cmp
es
rcrl
pop
fs
in
sbb
cmc
pusha
sbb
mov
sbb
daa
sub
or
repnz
outsl
inc
sti
dec
mov
jl
repnz
cmp
ljmp
aas
shrb
outsb
and
cltd
stc
push
and
mov
pop
sbb
mov
nop
mov
pop
add
or
mov
mov
cld
sub
mov
gs
mov
and
in
cmp
mov
mov
fwait
push
ret
adc
in
and
push
lcall
addr16
popa
leave
pop
and
xor
loop
xchg
cltd
fldenv
sbb
xor
mov
push
pop
mov
pusha
add
jb
mov
adc
pop
nop
cli
jl
mov
data16
sub
jae
out
jle
aad
mov
xor
mov
dec
hlt
out
stos
add
push
sub
or
call
cmp
mov
mov
mov
xor
lcall
data16
fmuls
inc
pop
jg
jp
push
push
jbe
mov
xchg
aas
lea
push
mov
addb
push
nop
cmp
scas
cmc
popa
pop
inc
pop
dec
into
mov
out
scas
fldt
jl
loope
into
mov
fisttpl
out
call
hlt
test
mov
into
mov
rcll
jmp
mov
push
pop
fucomi
addb
and
jnp
or
mov
shr
pop
push
mov
js
or
cli
sub
jb
mov
push
lret
inc
mov
ds
sub
jl
inc
add
rcr
pop
mov
fmull
sti
arpl
sub
jcxz
xchg
push
cmp
andb
push
xor
ret
cmp
and
adc
adc
xchg
adc
cmp
mov
adc
aad
sub
add
jge
scas
daa
inc
adcb
in
mov
dec
lcall
mov
dec
jge
std
and
mov
clc
jnp
or
add
xor
fists
xchg
scas
test
int
add
je
sub
in
sahf
xchg
jno
inc
cmp
mov
adc
movsl
bound
jno
pop
fwait
cwtl
mov
or
cmp
mul
loop
test
jns
jle
pushf
aad
lea
out
mov
inc
lea
jle
loop
xor
add
jae
jb
inc
mov
fcompl
jne
pop
int3
stos
jg
adc
popf
xchg
scas
mov
pop
add
aam
or
dec
adc
rcll
insl
loope
sbb
arpl
insb
out
movsl
add
mov
jno
mov
push
and
push
or
int
cmp
gs
cli
sahf
or
shlb
clc
mov
cmp
dec
lds
xchg
pop
xchg
add
fidivrs
lahf
and
dec
add
in
jg
or
jp
in
add
jmp
clc
or
mov
mov
out
sbb
xchg
inc
xchg
push
push
adc
std
outsl
fcomp
dec
insl
and
ss
orb
inc
or
ret
adc
jmp
mov
sbb
sahf
jmp
mov
movsl
testb
or
adc
cld
xchg
orb
fldt
jecxz
fs
and
outsl
adc
jl
std
jnp
push
scas
out
pop
xchg
dec
jno
jno
bound
loopne
cmc
or
pusha
aaa
xchg
orl
mull
sbb
mull
mov
dec
pop
repnz
xor
movsl
push
pop
xor
repnz
cmovle
mov
les
mov
inc
rcrb
sub
lret
out
inc
fwait
sub
enter
lahf
push
mov
adc
or
sbb
pop
ja
into
mov
adc
sub
and
mov
negl
out
mov
or
rcll
cmp
inc
std
out
push
mov
jb
cmp
mov
imul
repz
jl
inc
in
inc
sbb
cmpsl
cwtl
cmp
insl
scas
sub
sbb
notb
lods
xor
pop
pop
loope
std
shlb
outsb
dec
cmp
mov
cmpsb
in
les
or
sub
or
les
addl
sbb
in
jmp
xchg
add
call
mov
test
push
mov
fidivrl
cmp
fidivl
mov
sub
scas
data16
mov
jnp
ja
pop
cmp
adc
pop
cwtl
pop
cwtl
pop
jp
mov
jp
inc
push
stc
cmp
loop
mov
fnstsw
inc
fldcw
mov
js
dec
lcall
or
cmp
sbb
push
cmp
inc
inc
xadd
int
mov
pop
or
jecxz
test
aad
fwait
sbb
dec
xor
xchg
arpl
or
cltd
outsb
mov
inc
add
jp
and
movsb
in
repz
fs
lret
pop
test
cmp
lret
fimuls
xor
cmp
or
jle
cmp
add
or
pop
mov
push
shll
test
xor
leave
repz
sub
movsb
outsb
sbb
into
hlt
or
loop
pop
inc
and
jo
leave
das
cltd
jne
xor
stc
in
xor
pushf
push
aas
test
jp
pop
push
pop
mov
mov
xchg
fsubr
or
mull
ljmp
das
dec
dec
mov
test
insb
sbb
out
mov
out
fwait
or
stos
loop
sub
ja
pop
xchg
loopne
scas
repz
xor
sub
mov
cmp
clc
push
cmpsl
ds
lcall
in
fcoml
int3
out
mov
rol
sub
pop
iret
add
xchg
cmc
aam
daa
jne
test
mov
lock
insl
and
inc
sub
ss
paddusw
pop
mov
pop
fistl
loopne
pop
dec
idivb
inc
pop
movsb
sbb
test
sub
lods
mov
popf
frstor
lfs
cmp
pop
pop
jns
dec
outsb
add
ret
and
push
aam
mov
xchg
idivl
sbb
popa
cmp
cmpsb
inc
aad
cmc
xchg
fwait
stc
js
and
loopne
jns
insl
sbb
and
push
adc
pop
shr
mov
push
nop
fdivr
loope
mov
cld
fcoms
xchg
fnstcw
xor
aaa
push
sbbb
mov
scas
sub
push
sub
rorl
rcll
cmp
sbb
inc
add
mov
ss
fbld
leave
push
test
je
into
fsubrs
pop
or
mov
pop
or
addr16
dec
sub
aam
dec
cwtl
adc
add
in
pop
shlb
xchg
js
mov
push
sbb
dec
inc
ror
repnz
dec
pop
or
in
push
push
sar
mov
pop
int
pop
into
pmullw
jnp
inc
mov
cltd
mov
mov
aad
pop
mov
nop
push
mov
stos
movb
cltd
lea
mov
or
pushf
add
out
roll
lds
jp
aad
mov
imul
dec
das
scas
stos
jl
jle
mov
adcw
in
ljmp
mov
mov
movsl
push
insl
fcompl
sbb
push
mov
xchg
push
add
pushf
mov
and
and
test
aaa
inc
lahf
ds
cmpb
popa
aaa
jg
inc
rcll
sbb
lea
or
negb
das
mov
adc
sub
dec
sub
dec
pop
jbe
xlat
arpl
je
fadd
inc
ret
xchg
lods
mov
jae
leave
inc
vmread
outsl
sub
inc
rcrb
in
mov
sub
mov
sub
push
roll
ficompl
arpl
les
ds
mov
rorl
lcall
dec
mov
push
cs
and
lret
lds
mov
mov
xchg
call
cmp
pusha
cltd
aad
inc
mov
insb
lcall
rcrb
adc
lret
sbb
mov
sbb
pop
xchg
or
adc
dec
bound
ljmp
loope
push
repz
stos
inc
aaa
xchg
movsl
hlt
xchg
pop
aad
cmpsb
imul
xchg
insl
mov
lret
push
fcmovnbe
jnp
fs
movsl
or
repz
xchg
arpl
enter
mov
inc
stos
nop
hlt
sub
stos
insb
jg
mov
sub
push
push
sbb
jg
pop
out
stc
jl
nop
daa
int3
mov
loope
xor
add
ret
add
or
loope
adc
das
mov
dec
in
inc
xor
in
mov
xchg
or
adc
mov
faddp
mov
add
mov
loopne
lcall
in
imul
adc
rcl
push
cmp
sub
lods
adc
adc
mov
sub
cld
jne
lcall
jb
lret
sbb
testl
pop
pop
loopne
data16
push
jle
std
mov
rcll
push
data16
xor
jp
iret
dec
mov
je
bound
dec
lcall
mov
jmp
mov
xor
les
shlb
arpl
sbb
js
or
mov
jb
test
mov
adc
jo
jg
jnp
lds
cmp
insb
jb
push
les
sub
es
mov
loopne
xor
lock
dec
in
shlb
orl
fimull
shlb
shll
jle
sub
dec
lcall
dec
push
outsl
or
or
sbb
pushf
xor
or
mov
mov
cmpsl
out
clc
cmpsl
xor
mov
fsubs
jle
pushf
pop
les
jp
sub
mov
dec
and
and
lods
movsb
inc
cmp
cmp
push
imul
ret
cli
lds
sub
incb
andb
cli
xchg
lret
sbb
hlt
enter
idiv
into
sub
inc
jmp
sub
lods
cmp
add
mov
mov
pop
mov
mov
icebp
xchg
lret
cmp
pop
pop
in
fisttpl
sub
or
cmp
mov
or
cli
inc
cmpsb
jmp
pusha
arpl
xchg
inc
dec
ret
dec
push
movsb
dec
add
mov
ret
mov
mov
orl
stc
inc
mov
push
pop
push
stos
mov
mov
inc
sbb
js
ss
pushf
mov
lahf
sub
lds
or
ja
inc
jno
or
insb
stos
out
add
jp
xor
mov
jg
push
and
cli
mov
or
nop
push
sahf
mov
negl
aad
mov
nop
iret
fisttps
mov
push
push
cmp
mov
fwait
or
in
pop
or
push
mov
outsb
mov
lcall
push
and
or
js
sbb
cwtl
sbb
mov
xor
mov
mov
in
xor
mov
loopne
jmp
push
cmc
push
or
fucomi
xchg
mov
call
vxorps
out
push
jl
jge
mov
ds
xor
or
mov
jle
lret
and
pop
mov
sarl
enter
pop
sub
rcrl
sub
mov
mov
or
push
js
loopne
push
and
push
aaa
add
add
mov
push
inc
adc
incl
xchg
mov
push
js
gs
jle
popa
cmp
adc
lret
pop
inc
ds
and
stc
xchg
sub
cmp
cmc
mov
mov
test
imul
iret
xor
out
das
or
inc
pushf
int3
outsb
jg
push
cmp
daa
cmc
dec
mov
fisttpl
sbb
push
push
aad
sbb
dec
adc
xchg
inc
fsubp
fsubrs
and
jle
add
xchg
pop
jg
fnstsw
adcl
hlt
stc
leave
inc
out
arpl
push
mov
sub
push
sbb
repz
dec
in
enter
pop
sub
mov
mov
xor
push
loope
jo
cs
mov
cltd
ss
ret
arpl
push
call
enter
rcll
adc
mov
loopne
mov
mov
inc
lcall
idivb
jp
nop
inc
push
into
sub
lds
mov
aaa
mov
mov
rcrb
cmp
mov
pushl
and
enter
inc
or
loopne
mov
pop
icebp
lcall
xor
adc
push
cmp
icebp
es
mov
sahf
dec
inc
nop
or
in
sub
push
inc
or
fcom
and
pushf
movsl
or
push
sahf
iret
rorb
mov
cmp
dec
mov
push
out
inc
push
inc
cld
mov
push
and
in
add
into
scas
add
mov
push
ret
in
mov
push
add
xchg
fstl
xchg
push
ds
leave
pop
jo
cmc
jb
mov
dec
mov
jle
ss
lahf
inc
xchg
idivb
cltd
mov
xor
xor
es
jle
mov
nop
pop
clc
push
daa
push
in
lahf
fisubrl
mov
inc
insl
or
addr16
push
sti
jecxz
mov
dec
arpl
cmp
gs
dec
test
inc
push
mov
ljmp
xchg
cmpsb
mov
cmp
lcall
push
and
sbb
outsl
mov
sbb
shll
mov
insb
shrl
shrb
cmp
sub
rsm
addb
subb
xorb
dec
jg
pushf
inc
pop
adc
mov
xor
cmp
jmp
out
or
xlat
inc
int3
pop
adc
mov
jb
cmpsl
das
loope
in
and
xor
ljmp
ljmp
dec
pop
sub
hlt
and
sbb
cld
sbb
cld
arpl
int
mov
and
inc
adc
jmp
xchg
jne
cli
jb
movsb
cs
into
jno
in
stos
jno
jl
ret
cwtl
cwtl
ret
aaa
rorb
dec
pop
shlb
pop
push
test
jb
jle
and
push
outsb
jbe
fistps
repz
mov
add
mov
pop
repnz
lcall
into
insb
mov
iret
adc
push
jmp
push
loopne
loop
loopne
pushf
enter
push
addr16
test
mov
imul
and
add
cwtl
jne
or
add
bound
xchg
das
jnp
push
push
sbb
sub
ss
enter
jp
pop
js
sub
mov
je
push
sti
jne
out
mov
cli
es
adc
ret
mov
add
push
pop
dec
inc
cmc
lock
aaa
and
sub
shlb
mov
adc
gs
mov
sti
fs
cs
cmp
mov
sarb
inc
jmp
inc
and
jmp
inc
dec
aam
int
ret
scas
imul
pop
cmpb
cmc
cmp
mov
notb
xchg
xor
dec
jecxz,pn
leave
mov
fwait
ja
add
xchg
jne
cmp
mov
and
sub
mov
pop
push
fnstsw
test
jnp
lock
adc
jge
sub
mov
lods
sub
push
jecxz
jnp
insl
sub
sbb
aad
pushf
ljmp
clc
xor
and
jnp
int
in
jnp
dec
sar
cli
cmp
inc
pop
cli
repz
xchg
xchg
cmc
inc
int3
sub
jle
jp
das
mov
mov
dec
rorb
and
push
mov
ljmp
jg
pop
push
sbb
cld
pop
pop
repnz
xchg
enter
iret
push
jb
loope
or
cs
jno
popf
mov
call
cmp
push
int3
push
ljmp
std
aas
and
cmpsb
fsubs
mov
jmp
mov
inc
push
mov
data16
std
mov
outsl
in
jbe
negb
inc
jl
mov
sub
je
and
push
push
fs
mov
aad
data16
adc
pop
cmp
insb
rol
pop
lds
push
shlb
lcall
inc
push
imul
cmp
movsl
inc
pop
mov
arpl
adc
jge
loopne
in
test
push
insb
test
sub
js
call
adc
push
cld
sar
je
test
sbb
mov
out
mov
test
fsub
xchg
in
lret
sub
pusha
scas
and
adc
jne
mov
and
nop
cmpsl
pop
inc
mov
dec
xorb
add
mov
notl
and
push
mov
lahf
and
add
jae
pop
rolb
in
cmpsl
and
xchg
adc
mov
out
shrl
stc
daa
fnstsw
pop
rolb
es
cmpsb
lcall
fwait
aas
pop
sahf
sub
pop
popf
cmp
icebp
mov
jnp
and
int
std
mov
cli
dec
aas
les
ja
cmp
imul
aas
sbb
pop
adc
push
dec
cmc
sub
inc
stos
dec
cmp
sbb
dec
lods
jno
js
out
gs
outsb
sub
enter
mov
dec
inc
or
and
enter
cmp
cmp
jbe
mov
push
rorl
nop
ret
inc
jecxz
sbbb
jbe
insl
push
dec
in
arpl
xchg
fstp
insl
add
push
ret
popa
frstor
sub
xorb
outsb
subps
mov
xor
lahf
jg
rclb
push
jmp
andl
into
xor
out
insb
mov
fbstp
xlat
sub
dec
cmpsl
imul
test
int
lea
inc
bound
aas
ljmp
lock
cmp
and
gs
daa
fwait
mov
neg
ljmp
xor
inc
cltd
and
std
mov
sti
loope
nop
push
mov
sub
clc
inc
push
xchg
dec
arpl
loop
out
add
stc
gs
xchg
divb
jns
mov
inc
jo
push
cwtl
aas
sub
pop
or
and
push
xchg
mov
cwtl
in
jns
mov
js
int3
fists
sbb
test
and
push
pusha
ss
cltd
ds
in
cmpsl
lret
dec
scas
mov
movsb
mov
lret
ljmp
into
test
aam
pop
adc
cwtl
fdivr
test
aad
movl
hlt
xchg
jecxz
loop
or
sbb
shlb
out
in
mov
jbe
or
and
sbb
xchg
add
cmp
push
in
rcl
popw
xlat
push
or
jmp
push
sbb
add
sbb
jecxz
lea
push
fistpll
push
std
and
mov
cwtl
out
insb
sub
fstl
jg
push
and
sub
fsubl
loop
fs
xchg
or
fwait
je
cmp
and
lods
pop
jge
cmp
rorb
push
xor
pop
lahf
cmp
cmpl
sub
mov
out
nop
mov
in
fs
dec
test
pop
dec
cmp
shl
mov
ja
test
sahf
sbb
mov
mov
outsl
sbb
fucomip
test
rorl
push
cltd
popa
stc
cmp
dec
bound
sub
fldenv
adc
push
bound
pop
xor
icebp
push
outsb
aam
mov
iret
mov
sub
dec
sub
push
sbb
lock
loope
and
sahf
push
enter
jmp
stos
out
out
add
adc
push
push
pop
jmp
testb
cs
jecxz
mov
push
dec
popa
xchg
mov
jp
mov
movsb
repz
xchg
push
add
cmpsl
add
notb
dec
arpl
loopne
mov
rcll
xchg
jp,pn
xor
lea
push
add
insl
mov
push
cltd
shlb
fisubl
pushf
outsl
pusha
jno
xchg
xchg
out
mov
xchg
mov
popf
scas
cwtl
ljmp
inc
nop
test
push
or
dec
and
fdivs
fwait
out
out
iret
hlt
in
cltd
test
jp
push
mov
test
add
imul
das
fsubr
sbb
fstpl
add
aad
jge
mov
add
test
cwtl
push
push
outsb
cltd
insl
mov
jbe
in
push
jmp
int3
inc
push
cmpsl
es
cmpsb
test
out
shll
call
call
fwait
aas
dec
pushf
xchg
xchg
mov
es
pop
dec
cwtl
enter
mov
push
mov
dec
or
jecxz
mov
and
out
mov
add
lcallw
push
xor
pop
sbb
add
add
mov
mov
out
adc
jp
mov
repz
add
jl
xor
loopne
add
xor
add
and
pop
loop
jp
and
lock
lahf
lods
fmuls
mov
mov
mov
rcrb
out
inc
push
push
xor
xlat
xorl
addr16
xor
xchg
movsb
jecxz
lahf
pop
push
leave
test
lret
lods
mov
jb
jb
inc
mov
int
out
dec
inc
testl
pop
mov
and
push
jo
scas
dec
js
xor
mov
mov
adc
mov
into
xor
xchg
out
out
ds
mov
xchg
xor
das
loopne
pop
mov
push
cmp
les
fistpll
sbb
cmp
ds
std
and
mov
ret
push
jae
lock
int3
aas
lahf
jae
push
mov
test
aas
add
adc
stos
xchg
in
popf
lds
push
ja
out
mov
and
pop
add
mov
pop
xor
pop
cmp
or
push
cmp
into
push
or
mov
dec
jp
ror
test
jmp
stc
xchg
sti
add
and
fldcw
stos
inc
nop
mov
in
jl
push
ret
adc
fld
pop
jb
ret
fwait
lds
adc
push
push
jle
jle
mov
fbld
sti
mov
jg
xor
rorl
lret
lret
hlt
fwait
in
add
mov
dec
mov
mov
das
mov
test
and
test
arpl
pushf
popl
and
ja
pusha
into
mov
jno
mov
ljmp
insl
inc
xlat
dec
fisubrs
fnstenv
pop
adc
nop
out
xchg
scas
cmp
jnp
iret
or
into
push
mov
stos
pop
lock
jle
xor
xor
clc
jno
andl
add
cmpsl
ja
insb
lods
pop
lahf
inc
adc
das
jle
pop
ret
stos
pop
fbstp
xor
cmp
popa
shrb
pusha
rcl
and
push
pop
cs
push
cmpsb
lcall
adcw
sti
repz
sarl
dec
push
mov
stos
xorb
xchg
inc
mov
mov
dec
mov
sbb
add
icebp
mov
mov
stos
mov
xchg
pop
xchg
rorb
pop
and
fsts
out
outsl
inc
shlb
out
push
inc
fnsave
xchg
les
fwait
lcall
data16
mov
inc
dec
scas
scas
and
shll
pusha
inc
aam
daa
test
fadds
fldt
xor
loopne
fs
jbe
int
ja
das
mov
jge
dec
iret
push
dec
je
dec
sub
add
dec
pop
inc
xlat
or
loop
test
pop
imul
adc
cmpsb
xchg
movsb
mov
xchg
push
iret
stos
addr16
inc
mov
add
testb
pop
jmp
rcrb
or
pusha
jl
sub
or
addl
cmp
inc
daa
pop
jp
dec
ret
or
mov
bound
jns
inc
mov
dec
inc
xor
jbe
fsubrs
adc
aad
xchg
jnp
fdivs
add
js
aas
pop
push
or
in
jmp
push
adc
mov
mov
jl
xchg
scas
mov
fnstcw
sarb
mov
pop
xor
xchg
mov
mov
pop
cmp
nop
pop
push
xchg
sub
icebp
in
dec
enter
scas
xor
jge
out
pop
cwtl
sarl
int3
push
popf
mov
dec
push
cmpsl
loop
lock
pop
jno
cmp
cmp
or
lods
xor
jecxz
stc
cld
cmp
xchg
or
add
cmpsb
in
or
add
add
subb
push
fsubrs
add
enter
out
es
loop
mov
ljmp
jno
cmp
movsb
cmpsb
hlt
inc
fs
cmpsb
pop
inc
aam
xchg
add
enter
cmp
adc
scas
jmp
sbb
push
int
xchg
shlb
or
mov
xchg
or
lret
insl
fwait
xchg
sbb
sub
js
dec
mov
sti
add
cmp
xlat
mov
sahf
bound
xchg
xchg
fsubrp
pop
inc
stos
popf
or
adc
adc
dec
stc
jns
fisttpll
popf
sub
mull
mov
sub
aas
aas
movsl
loopne
jmp
std
xchg
and
nop
repz
pop
fsubp
push
test
mov
xor
ficoms
cmpl
imul
xor
dec
adc
int3
sub
pop
xchg
inc
pop
push
les
push
dec
jno
dec
sahf
orb
fsubrs
stos
jno
sub
mov
stos
aaa
and
out
sqrtps
and
sbb
sarl
mov
cmc
adcb
jno
xor
divb
cltd
jns
xor
cld
scas
sti
ret
js
sub
lock
lds
shll
adc
aas
idivl
add
mov
mov
lds
mov
pcmpeqw
in
hlt
pop
inc
xchg
fcmovu
arpl
add
icebp
fwait
andb
ret
test
push
mov
pop
push
stos
pop
mov
icebp
push
int
cmpsl
mov
mov
clc
jo
jo
or
loopne
inc
outsb
out
pop
fmul
shrb
inc
dec
mov
push
shrl
or
inc
dec
daa
inc
sub
mov
data16
sub
jnp
idiv
in
dec
addr16
int
leave
insl
fucomip
testb
xor
push
fdivr
loop
test
je
dec
inc
dec
push
pop
icebp
scas
mov
xor
cld
jl
cltd
pop
sub
sub
leave
rcr
loopne
daa
cwtl
cs
lret
sbb
adc
xchg
aaa
or
pushf
lahf
scas
es
out
sbb
insl
xchg
mov
xchg
mov
xchg
fstpl
mov
notl
add
mov
test
fldt
xchg
into
jo
lea
rcrb
loopne,pn
daa
sub
sub
gs
scas
paddw
mov
data16
add
sub
mov
insb
xchg
loope
xchg
mov
jge
orb
icebp
jno
add
fdivs
mov
sarl
pushf
mov
jle
adc
and
in
xchg
xchg
out
or
jne
dec
call
and
sub
mov
loop
arpl
mov
sub
insb
xor
inc
dec
cmp
jns
push
jecxz
sbb
enter
jle
adc
ficomps
sub
inc
psubusb
sahf
mov
dec
push
popf
dec
xchg
jno
sahf
or
dec
aad
stos
mov
fimuls
call
mov
xor
sbb
fwait
pcmpgtw
mov
xchg
ficomps
mov
xchg
rol
push
add
xchg
iret
andl
lods
xor
int3
ljmp
addr16
fidivs
add
xor
shl
jo
aam
dec
arpl
push
fisubrs
fstp
aam
hlt
dec
test
fucomi
cmp
adc
stos
push
cltd
dec
inc
loop
stos
loope
inc
and
inc
insb
sub
sub
sbb
stos
les
cli
push
pop
aad
movsl
imul
fmul
in
lret
or
dec
and
idivb
jge
ja
movsb
movsl
xchg
jo
and
dec
jno
mov
dec
scas
repz
les
push
sbb
and
negl
pop
stos
mov
fs
or
sub
sbb
or
cmpsl
mov
pop
add
cs
dec
xor
shll
cmpb
or
mov
pop
and
xchg
inc
xchg
in
call
xor
cmp
jo
lock
add
andl
push
cli
push
xchg
cmpsl
jb
add
adc
adc
imul
inc
or
in
shlb
jns
lret
xchg
mov
push
stos
mov
jbe
fidivrl
and
repnz
adc
hlt
inc
push
dec
push
pushf
cmp
sbb
cs
inc
and
jbe
pop
or
ss
mov
rcll
inc
pop
rcrb
mov
pop
insl
insb
iret
repz
xchg
call
push
outsb
push
push
push
xor
jbe
fsubr
sahf
pushf
add
jnp
ja
adc
sti
sbb
or
mov
mov
jne
in
repz
sub
or
clc
xor
pusha
pop
call
inc
push
inc
sbb
lods
out
fidivl
sbb
cmp
ficomps
outsb
and
mov
lcall
jecxz
xchg
xchg
push
pop
std
aas
ds
mov
call
mov
inc
ficomps
ja
mov
ljmp
and
inc
movsl
shlb
mov
or
in
or
cld
pop
popl
dec
mov
pop
mov
add
lds
repz
inc
or
jb
jnp
ja
inc
xchg
arpl
xchg
out
inc
in
pop
mov
js
add
push
push
lahf
jo
xor
or
push
sbbl
fimull
pop
arpl
jo
rolb
orb
mov
xor
mov
imul
cmc
cli
pop
lock
inc
stc
or
mov
push
imul
lds
jmp
stos
loop
mov
int
push
inc
add
stos
cmc
add
les
and
xchg
fidivl
sub
xchg
arpl
add
lds
push
push
mov
cmp
imul
jmp
je
inc
sub
mov
pop
sub
mov
push
fldt
repz
add
lea
push
cmp
mov
arpl
mov
mov
mov
fcomps
js
mov
loope
or
dec
insb
aad
inc
or
int3
ljmp
dec
les
sub
add
dec
xor
mov
add
data16
jg
mov
inc
mov
inc
sub
stc
imul
dec
shll
and
bound
lret
pop
cmc
xchg
into
and
adc
gs
lods
mov
lret
cmp
mov
pop
sti
mov
push
xchg
lock
xlat
xchg
mov
pop
sbb
jp
xchg
mov
les
inc
sarb
push
lock
loopne
xlat
add
add
lds
pop
sbb
inc
xor
or
pop
pop
test
xchg
push
sbb
out
mov
xorb
xor
push
sbb
hlt
in
testb
mov
xor
or
outsb
mov
lret
ljmp
push
nop
push
filds
xor
ss
movsb
inc
aam
push
pushf
lahf
jne
in
gs
lret
cltd
dec
fcom
add
inc
or
aaa
pop
or
cwtl
dec
sub
sub
pop
mov
sbb
sbb
lret
sarl
xchg
pop
addr16
sbb
daa
ja
xchg
cmpsb
adc
scas
aad
psubsw
cmpsb
jl
push
inc
sub
shrl
test
sbbl
lret
mov
repz
jnp
inc
cs
mov
addr16
inc
outsl
mov
mov
lods
fnsave
mov
push
push
xor
sub
xchg
cwtl
cmpsl
xchg
lret
aas
sbb
pop
int3
sub
add
add
sbb
add
enter
adc
jo
iret
lahf
jnp
cmpsl
mov
pusha
pop
lods
adc
cld
ja
sub
outsb
push
stc
aaa
xchg
popf
sbb
and
std
mov
es
jmp
dec
imul
inc
or
leave
sub
flds
leave
int
cwtl
pop
pop
pop
and
jmp
pop
jns
scas
scas
subb
lcall
jno
testl
aas
aaa
xchg
test
dec
int
in
sbb
fwait
int3
push
push
cmp
and
xor
fimull
test
mov
int3
sbb
shll
ds
push
dec
xchg
addr16
call
mov
lcall
scas
or
pop
js
outsb
scas
add
xchg
sahf
sbb
or
cli
mov
mov
mov
inc
sub
add
lods
movsb
push
mov
insb
es
or
fldt
pop
xchg
in
jno
xor
sbb
fdivrs
sub
test
dec
dec
mov
shll
jb
cmp
aaa
pusha
push
jg
aad
in
out
adc
hlt
sbb
sub
adcb
xchg
sbb
clc
and
divb
sub
movb
cmp
std
arpl
or
scas
pop
add
mov
shll
ret
call
mov
sbb
inc
hlt
pushl
call
das
ja
icebp
mov
jecxz
out
leave
and
test
ja
insl
ss
insl
fs
jg
cli
mov
xor
push
jle
inc
fisubs
outsb
sarl
sub
xchg
jno
pop
cs
sbb
cli
ds
shlb
movl
in
icebp
jbe
cltd
daa
stos
loop
call
outsl
sbb
jecxz
dec
icebp
and
inc
cs
daa
and
sarl
faddp
add
nop
and
xchg
gs
xor
in
test
xchg
nop
dec
jno
mov
mov
enter
pop
scas
mov
neg
shlb
mov
add
es
pusha
inc
adc
mov
out
inc
mov
test
aas
inc
pop
push
shlb
xor
mov
jo
es
push
icebp
and
sti
dec
jl
jle
add
je
jbe
cs
in
or
cmp
add
mov
push
lcall
push
cmp
cmp
cmp
sti
jae
pop
sahf
jl
scas
cmp
xor
iret
fs
push
imul
or
inc
push
xlat
sbbb
sbb
lahf
jae
lds
push
leave
popf
pop
xor
sbb
mov
push
or
ss
addr16
and
hlt
mov
rol
lcall
dec
js
push
nop
cmp
imul
jns
and
and
adc
in
pop
jo
je
mov
add
inc
or
fistpl
mov
add
or
cmc
idiv
pop
mov
sub
adc
or
mov
jle
clc
xor
lret
lret
sub
sarl
mov
or
in
xchg
std
leave
sbb
or
sbb
cld
loopne
nop
push
repz
jp
jg
repnz
push
scas
mov
ljmp
sbb
push
sbb
ja
subl
xchg
sti
cs
shlb
rol
push
into
push
rcll
rcrb
jae
cmp
mov
jo
mov
xchg
les
xor
in
cld
mov
inc
cmc
jecxz
out
and
xchg
mov
aaa
and
mov
xchg
lods
cmp
and
fisubs
out
dec
pop
inc
insl
adc
iret
mov
stos
xchg
xchg
pop
pop
and
ja
icebp
and
pop
push
push
adc
lahf
out
roll
pop
test
or
mov
movsl
imul
fisubrs
mov
pusha
and
jecxz
test
mov
int
les
push
clc
pushf
in
nop
cmp
adc
jb
imul
or
mov
mov
cs
xchg
int3
stos
sarb
cmp
pop
push
push
sub
imul
pop
dec
insl
out
xchg
push
inc
push
mov
adc
ret
sbb
lret
cli
add
movb
pop
iret
pusha
inc
fisubl
pop
xor
xchg
inc
ret
out
clc
roll
inc
icebp
add
jecxz
call
xchg
es
fwait
in
dec
cmp
cmp
js
std
mov
shll
sub
scas
jecxz
movsb
inc
orl
cmp
xor
mov
ljmp
cmpsb
add
mov
pop
in
add
popf
jmp
cwtl
dec
sbb
or
enter
out
add
inc
cs
sub
popf
jno
or
jl
or
das
and
cmp
rcr
jbe
pop
dec
jb
sti
dec
mov
fidivrs
sub
mov
popf
ret
xchg
push
ficompl
fldenv
stos
cmp
sub
stos
inc
out
mov
cvtdq2ps
sub
les
push
push
call
push
fcoms
outsb
or
pushf
mov
push
cmp
imul
mov
add
and
nop
lock
mov
and
fisubs
mov
add
rol
mov
cmc
lock
adc
pop
xor
mov
cld
add
addr16
pop
add
je
add
lret
xchg
stc
pop
scas
mov
lds
cmp
cmpsl
inc
push
nop
jl
adc
mov
sub
mov
sbb
jecxz
inc
je
loope
cmc
or
add
lea
lret
movsb
sbb
icebp
loopne
lret
xor
mov
stos
inc
jp
ds
push
or
jb
cmpsl
andb
inc
cmpsb
stos
pop
in
popa
rcr
lea
scas
and
mov
mov
lea
inc
bound
add
data16
or
ss
pop
mov
test
cwtl
xchg
es
js
stos
shr
cmp
jnp
mov
outsb
scas
mov
jb
jbe
stc
mov
jns
mov
scas
jno
ja
ss
shrl
push
sub
nop
popf
jecxz
jmp
or
cmp
mov
mov
xchg
enter
inc
mov
pop
jp
sti
hlt
inc
mov
jge
shrl
jmp
jne
pop
jns
and
adc
das
les
cmpsb
mov
test
or
ds
sbb
out
push
jmp
lds
mov
mov
lods
xchg
or
cmp
mov
dec
xchg
pop
lds
jmp
and
xor
push
ficompl
xchg
in
xor
js
mov
aam
mov
jecxz
rcl
xchg
jmp
cmpsl
xchg
mov
pop
xchg
xlat
mov
jno
mov
data16
pop
xorl
xchg
aad
push
rol
xor
leave
xchg
mov
sub
push
adc
cmpsb
test
lret
fmuls
and
lods
jg
sbb
bound
loope
mov
sahf
fldenv
and
mov
and
cld
insl
jecxz
add
or
inc
push
fcoms
lock
dec
sbb
fwait
jns
aaa
jmp
sub
outsb
imul
fcoms
cmc
sahf
repz
cwtl
cmp
sub
jle
mov
shrb
sbb
pop
ja
inc
pop
rol
pminub
and
and
hlt
xchg
fisubrs
ja
mov
mov
pop
popa
add
and
movsl
or
sbb
or
adc
in
sti
add
push
pushf
out
std
mov
cli
sahf
pushf
cmp
push
xchg
lea
mov
mov
jns
rcr
lret
or
jg
xor
sub
fstps
cmp
cmp
bound
into
sub
lods
jo
push
loope
xchg
lcall
std
mov
inc
add
call
sahf
mov
data16
aaa
or
aad
ret
outsb
dec
out
pop
jno
sbb
push
and
adc
adc
or
fidivs
lds
mov
sti
adc
out
cmp
adc
cmp
std
cmp
in
mov
xchg
push
flds
fwait
in
mov
rclb
or
push
cli
enter
mov
push
ss
push
adc
inc
cmp
ss
repnz
xor
imul
mov
ja
cmp
and
push
neg
cmp
lock
or
dec
jmp
cmp
mov
test
sub
jns
repz
movsb
jo
mov
push
xchg
jbe
pop
adc
mov
aaa
pop
or
test
in
notl
cmp
clc
pop
sub
stc
cs
mov
jo
lahf
lret
xchg
and
inc
ds
pushf
sti
out
xchg
mov
jp
mov
or
aam
shlb
int3
shl
clc
cmp
outsl
inc
add
in
inc
cmp
push
push
sub
loopne
mov
in
dec
jmp
ret
ffree
dec
push
lahf
cmc
es
in
loope
enter
xchg
cmpsb
fsubl
mov
mov
sahf
pop
sahf
sbb
test
mov
and
mov
pop
lds
xor
cmp
inc
dec
ss
pop
inc
popf
xchg
std
adcb
jnp
cmc
pop
mov
and
cmp
cmc
and
jmp
mov
and
shll
cmp
cmc
mov
inc
sub
inc
sbb
cli
gs
mov
inc
jae
shlb
add
test
out
in
pop
xor
and
lea
loope
subb
lock
fists
mov
fcmovu
mov
xor
jne
add
and
mov
or
dec
loop
ljmp
int3
int3
lcall
mov
lcall
cmpsb
hlt
jno
int3
cs
push
jne
sahf
and
or
xchg
enter
push
rcrl
cld
dec
jb
daa
push
sbb
in
dec
pop
jae
mov
mov
lea
mov
gs
shrb
xchg
push
push
cmp
pop
lods
push
mov
sbb
adc
sbb
mov
sub
fwait
sbb
cmp
and
sub
pushf
fdivs
les
cmp
xor
cld
lock
shlb
sub
and
loopne
sbb
lock
nop
int3
lods
stc
cmc
or
push
jge
pop
mov
inc
push
sbb
mov
scas
repz
and
adc
xchg
cmp
in
lahf
dec
std
push
in
sbbb
jnp
mov
test
popa
aaa
repnz
cmc
push
push
pop
pop
sub
cld
bound
jg
fstpt
enter
cs
push
or
add
aam
dec
and
inc
fistps
rcrb
mov
mov
insl
push
loopne
lahf
fwait
iret
das
mov
mov
aad
cltd
xor
adcb
and
and
movsl
in
scas
mov
jmp
xchg
test
popf
loop
xor
ja
hlt
xchg
outsl
xor
insl
pop
clc
sbb
fbstp
push
int3
aam
mov
stc
aad
int3
lret
fstps
adc
xchg
add
xchg
insb
jns
outsb
mov
pushf
mov
repz
adc
sbb
jae
in
xchg
pop
add
add
adc
jns
dec
inc
ljmp
loop
into
mov
popf
mov
fiadds
repnz
cmp
inc
bound
ja
shlb
cmp
ja
les
testb
xor
cmp
xor
clc
push
or
in
mov
jb
je
out
push
xor
and
imul
in
mov
xchg
push
loope
cmpsl
mov
or
mov
mov
mov
test
or
cmpsb
testb
je
sbb
fimuls
nop
in
mov
or
cmp
icebp
ret
enter
mov
lret
push
sub
fwait
mov
inc
mov
jmp
jne
je
dec
mov
scas
push
les
xchg
mul
cmp
aad
mov
ficoms
cli
sub
fadds
mov
adc
adc
hlt
cwtl
cltd
lret
mov
mov
cmpsb
mov
jnp
inc
mov
les
dec
js
std
pop
hlt
lret
ret
sahf
adc
sub
xchg
loopne
xchg
imul
jb
jecxz
in
icebp
lods
pop
pop
shlb
xchg
add
jle
and
call
icebp
jmp
inc
mov
jmp
bound
data16
loope
cwtl
arpl
lcall
shl
inc
pop
and
sub
outsb
jecxz
jge
sarb
adc
js
jne
repz
je
xchg
lea
pop
js
stc
movsl
mov
mov
rorl
mov
jns
mov
push
jo
mov
in
jle
sub
lahf
popa
xor
mov
add
in
jl
ret
cwtl
loop
fs
push
call
dec
mov
movsl
adc
shlb
stos
mov
ret
jge
in
sub
lcall
call
sbb
dec
mov
mov
sbb
mov
xchg
xor
mov
jmp
out
push
add
daa
xchg
adc
jno
insl
cld
adc
ror
jmp
lods
test
shrb
into
mov
cmpsl
jg
inc
test
jne
sub
cmp
inc
movsl
cmp
mov
jle
cld
cmp
push
bt
imul
push
pusha
sahf
dec
jb
ljmp
sbb
out
jle
push
subb
jl
mov
jmp
into
cmp
sub
pusha
add
sahf
add
faddp
inc
in
push
sbb
rcrb
push
add
and
xchg
fildl
dec
and
jnp
mov
and
icebp
insb
pop
push
and
push
jmp
in
addb
pop
lcall
fdivrl
jbe
rcr
aas
push
outsl
lock
shrb
push
push
fprem1
mov
cmp
gs
xchg
je
jo
iretw
cltd
sbb
mov
xchg
xchg
out
and
sbbl
push
mov
add
mov
pop
push
mov
subl
xor
adc
call
xor
xor
lahf
push
push
mov
or
loop
jne
jne
sbb
add
xchg
jg
fcmovbe
jae
lods
lahf
insl
dec
mov
outsl
sub
aam
nop
daa
mov
fsts
push
and
lret
dec
in
aam
loop
and
ds
loop
jno
daa
xor
lock
cmp
fnstsw
std
stc
mov
jno
mov
adc
movups
lret
push
pop
mov
out
callw
push
inc
sbb
inc
testb
sahf
jp
lock
cmp
add
and
xor
sub
xchg
repnz
int3
aam
add
call
or
fimull
push
iret
mov
mov
fs
and
fdivs
adcl
and
mov
lret
in
shrl
mov
mov
mov
psadbw
mov
xchg
neg
insb
fists
aam
in
mov
pop
mov
pop
xchg
push
pop
push
and
icebp
and
push
fwait
out
roll
bnd
xchg
dec
pusha
dec
and
test
jp
aam
dec
xor
jp
les
insb
in
xor
in
popa
dec
test
xchg
icebp
mov
cld
fsubrl
fcmovb
push
ja
cmpsb
adc
ret
enter
cli
cmp
adcl
insl
call
inc
test
push
add
jbe
cmp
aad
xor
and
cli
sub
xor
cmp
shll
shrb
fisubl
ficoms
sub
xchg
adc
mulb
inc
adc
pop
jp
mov
mov
aas
cmp
add
std
or
cmpsl
mov
xchg
or
inc
pop
xchg
mov
rcl
pop
and
sbb
mov
inc
mov
stc
sub
rcrb
popf
mov
sub
jns
mov
and
std
or
daa
insl
push
stos
dec
sbb
fldcw
dec
mov
shl
int
dec
inc
add
push
pop
in
std
sub
ret
std
mov
lods
xor
xchg
arpl
in
mov
xor
jle
xchg
jp
sbb
push
push
insl
insb
push
mov
dec
xor
push
cs
leave
enter
in
jbe
xlat
idivb
add
inc
jbe
mov
clc
bound
sbb
repz
cmp
xchg
sbb
push
sbb
aad
out
mov
pop
push
movsl
leave
mov
push
pushf
ss
xor
stos
mov
push
ret
int
insb
jnp
pop
dec
jo
push
cmp
cmp
inc
mov
xchg
xchg
cmpsl
sarl
call
and
lods
icebp
push
inc
lret
test
push
mov
mov
cmpsb
pop
jns
dec
lds
and
faddp
lds
dec
xchg
dec
push
push
add
mov
xchg
dec
into
daa
jp
jecxz
mov
icebp
jl
int
popa
imul
xor
push
xor
popa
push
ja
gs
in
mov
pop
xor
pushf
pop
dec
data16
mov
out
cld
je
xchg
loop
repz
xchg
lods
test
adc
jnp
adc
or
lock
in
mov
add
adc
sbb
negl
icebp
movsl
inc
adc
scas
addl
icebp
sub
stos
dec
xchg
jno
mov
mov
or
sbb
jg
mov
or
test
push
mov
mov
or
lret
mov
cmp
ret
lea
cli
mov
or
ret
xor
ret
popf
dec
add
fidivrs
daa
and
pop
adc
xchg
aas
mov
xor
adc
ds
leave
in
push
xor
push
sub
rorb
and
mov
pop
gs
fs
fcomp
in
je
and
iret
lock
rolb
push
call
or
fiaddl
test
xlat
or
mov
xor
lahf
stos
divb
fildll
daa
ficomps
mov
stos
into
popf
inc
cmpsb
push
or
ret
mov
and
pop
add
insl
and
gs
push
push
aas
test
jg
xor
push
mov
aas
out
rclb
jmp
pushf
es
dec
idivb
nop
clc
add
cmp
pop
imul
push
outsl
jbe
adc
or
pop
stc
outsl
test
push
xchg
sti
xor
in
push
xlat
pop
mov
pusha
scas
xchg
mov
out
xchg
clc
stc
cs
adc
add
xchg
sbb
mov
lahf
jecxz
mov
xchg
jbe
rcll
jecxz
dec
repz
lret
das
or
lcall
xchg
xchg
popf
and
ss
push
loopne
nopl
jae
xor
pop
pop
incl
dec
xchg
cmp
filds
sbb
gs
jmp
rcrb
mov
sbb
and
int3
adc
addr16
xchg
shlb
shl
stos
cli
mov
rep
inc
and
pop
cld
mov
push
dec
inc
push
imul
sbb
ret
dec
adc
adc
push
loopne
aaa
inc
lock
shrb
fsubrp
mov
sub
test
xor
sbb
fmuls
cmc
add
cmp
push
mov
push
xchg
add
jmp
addr16
sbb
push
sub
imul
stos
cs
add
pop
and
mov
pop
pop
jecxz
fld
xchg
loope
out
pop
cmp
mov
lods
dec
cmpsl
jmp
or
leave
movsl
pop
popf
inc
aad
aas
shll
inc
sbb
sbb
into
push
xchg
jne
mov
call
jecxz
lock
stc
js
pop
jnp
gs
fstl
pop
fstpt
popa
pushf
pop
jecxz
jmp
mov
scas
aas
loopne
or
into
gs
fsubs
adc
sub
iret
push
push
repz
jns
insb
push
movsl
jp
pop
jmp
and
xlat
test
scas
inc
sbb
mov
testl
cltd
jae
jge
dec
mov
mov
xchg
mov
outsb
pop
mov
shrb
jmp
ret
out
fcmovne
inc
adc
mov
lds
mov
mov
mov
xor
jns
movsb
inc
cs
mov
inc
rcrl
lods
lods
cmp
cmp
in
mov
int
stc
es
cmp
pop
daa
cmp
bound
jae
sub
jb
add
cmpsl
test
int
int
mov
ljmp
faddp
es
xor
mov
jne
leave
mov
mov
sub
jg
jle
fisubrl
jnp
pop
data16
scas
insb
fsubrl
stos
mov
test
std
dec
pop
iret
inc
sbb
rcrb
pop
aas
mov
mov
cli
scas
ja
leave
mov
or
out
pop
sbb
insb
xor
xor
push
pop
push
jae
and
les
js
push
lods
push
aaa
push
push
out
and
in
shl
pop
adcb
popa
mov
cmp
xor
jmp
mov
mov
add
jg
mov
stos
je
ficoms
mov
ret
mov
icebp
sub
mov
inc
push
inc
mov
movsb
mov
repnz
mov
cmp
add
mov
into
xchg
je
lds
jecxz
push
scas
clc
mov
int3
jae
ss
je
mov
cmp
stc
movsl
shl
ljmp
hlt
test
clc
lds
dec
pop
or
mov
lcall
push
addl
sahf
ja
cmp
adc
xor
aaa
pushaw
into
ret
mov
mov
movsb
lods
sbb
outsb
jle
lds
sbb
les
dec
mov
jecxz
cmp
add
ficompl
or
push
push
push
and
xorl
movsl
sub
push
push
xchg
loope
lods
and
int3
or
pop
cmp
out
and
outsb
sbb
push
xchg
cmpsb
movsb
adc
data16
out
lods
insb
pop
mov
jle
outsb
mov
and
cwtl
fbld
cwtl
jo
push
jle
fnstenv
out
mov
stos
loope
sahf
xchg
cwtl
jae
int3
fwait
cmc
movsb
add
xor
pop
sbb
pop
outsb
push
sbb
imul
rcl
fbld
mov
fstl
fsubp
jmp
mov
into
mov
dec
addl
test
dec
jecxz
mov
mov
inc
ds
test
lds
fisubs
inc
popf
mov
push
fmuls
pop
adc
push
cli
jb
jmp
cwtl
into
lgdtl
imul
lcall
clc
imul
sahf
hlt
insl
pusha
out
or
jecxz
push
cmp
add
inc
mov
pop
add
shll
mov
cltd
mov
ljmp
mov
add
hlt
cld
push
jo
add
xor
jmp
arpl
or
fadd
xchg
pop
xor
pop
lods
int
cmp
xchg
mov
in
jecxz
test
pop
mov
test
fucomi
repnz
mov
popf
xchg
repz
in
lods
std
sub
inc
and
mov
dec
or
rol
lods
jbe
loope
mov
lret
int
imul
pop
xchg
out
pushf
popa
addb
adc
mov
out
sahf
xor
lret
xchg
sbb
in
push
or
pop
dec
add
test
in
and
sub
mov
cmpsl
fistps
nop
sbb
out
jecxz
notb
es
lods
xchg
jl
adc
popa
nop
jb
jbe,pn
pop
cmc
xchg
adc
push
sub
outsl
adc
xor
add
imul
data16
sbb
jbe
lret
jecxz
sub
push
inc
into
mov
cmp
lret
ret
bound
daa
pop
mov
push
jmp
jae
loopne
sbb
sahf
mov
test
and
or
adc
cltd
jbe
mov
pop
inc
inc
push
xor
mov
lret
iret
iret
xchg
insb
add
jge
inc
pop
out
sarb
fcos
xor
into
and
sub
dec
cmp
mov
and
pop
scas
popl
pop
shl
xchg
lea
mov
test
insb
imul
stc
xchg
sub
adc
mov
sub
lock
scas
shll
mov
jne
sbb
push
repnz
std
in
test
mov
mov
sti
inc
repz
push
jb
adc
xchg
out
movsl
data16
ret
or
loop
repnz
jnp
pop
jl
or
pop
loope
xor
popl
stos
rol
push
and
addr16
jmp
xor
mov
js
pop
push
out
fists
sub
rcl
stos
jecxz
and
aad
mov
daa
inc
mov
sbb
shrl
jno
loop
lds
test
mov
test
sbb
dec
addr16
inc
inc
cs
cmp
mov
xchg
int
imul
or
jo
adc
xor
nop
jmp
cwtl
lods
cli
inc
push
lcall
push
mov
loop
popl
outsb
add
fdivrl
mov
dec
fwait
scas
mov
and
aaa
jns
sbb
jno
xchg
xchg
ja
jae
icebp
into
and
mov
lods
in
jbe
fnstsw
dec
int3
sbb
nop
push
jns
mov
mov
sbb
mov
cmc
push
roll
jg
inc
sbb
mov
movsb
inc
sbb
adc
sub
out
popf
pop
in
rol
dec
jecxz
das
pushf
pushf
dec
in
sbb
movsl
jecxz
lret
jl
mov
stos
daa
sub
jle
cmp
pop
inc
cmp
icebp
test
fnstenv
mov
sbb
dec
cmp
les
pop
icebp
out
and
lds
ret
adc
in
add
add
out
negl
adc
xor
inc
fildll
xchg
shrl
pop
and
into
rclb
in
inc
add
mov
mov
pop
xor
adc
jb
cs
sbb
pop
imul
repnz
dec
jmp
fadds
adc
jle
iret
adc
out
enter
or
mov
sub
fstpt
addl
ljmp
pop
push
inc
mov
fs
sub
mov
xorb
out
out
inc
into
pop
xchg
call
push
inc
lods
push
sbb
in
add
mov
jbe
loop
in
pop
rclb
dec
jne
fistl
inc
push
gs
aaa
dec
stos
jp
add
cmp
cmc
call
stos
mov
loop
sbb
lcall
pop
mov
sub
int
jnp
outsb
pop
push
add
jle
jmp
ja
mov
mov
sarl
push
cmp
loope
cltd
stos
jmp
test
push
xlat
sbb
scas
cltd
cs
sti
cmp
mov
xor
gs
push
jne
insl
cmp
roll
inc
pop
fs
dec
mov
pop
cmp
fidivl
out
cltd
mov
fildll
sbb
cmc
push
rcrb
popf
addr16
js
insl
adc
ficoms
mov
test
gs
in
push
push
ljmp
cmp
loope
push
push
mov
inc
push
xchg
dec
inc
sarl
lcall
js
clc
adc
push
and
movsl
push
xor
scas
xor
xor
push
mov
pushf
inc
div
mov
mov
lret
xor
repnz
leave
or
push
fscale
icebp
ss
inc
out
and
mov
mov
mov
or
mov
push
cmp
scas
mov
std
outsl
xor
adc
add
xchg
out
es
lods
sbb
scas
scas
testl
jb
adcb
cmp
jmp
mov
je
inc
xor
jl
sub
outsl
cltd
push
test
sub
jbe
pop
add
mov
inc
loope
adc
jg
sbb
out
or
adc
ds
push
mov
pop
shl
jb
movsb
sub
push
fmull
hlt
mov
inc
fstps
scas
shrb
mov
or
sbb
pop
sub
push
pushf
test
aam
or
mov
sbb
in
push
jns
or
push
notb
xchg
and
loope
jmp
repz
mov
aam
outsb
cmp
aas
xor
fdivl
cmpsl
je
mov
xor
cmp
sbb
stos
mov
clc
loopne
cmp
or
sbb
aas
sub
scas
lret
test
ret
jmp
lds
test
stos
loop
mov
sti
ja
enter
xor
lods
out
mov
popf
push
push
add
idiv
pop
jmp
xor
jno
push
xor
adc
mov
rcr
enter
sub
dec
arpl
push
add
daa
aad
enter
pop
push
call
and
inc
dec
dec
fs
sti
lcall
jns
dec
cwtl
sti
dec
pop
sbb
outsl
fcmove
call
pop
inc
inc
and
xchg
rcr
out
repnz
fadds
sbb
mov
sbb
nop
pop
icebp
or
mov
ret
in
add
jge
aad
hlt
adc
inc
scas
out
pop
xchg
stos
fdivrl
add
jb
add
add
jnp
test
shrl
fnstsw
cmp
push
pushf
fcompl
sahf
inc
dec
inc
cmpl
in
lods
fsubrs
add
mov
movsl
imul
xchg
xchg
cmp
mov
or
lcall
jbe
and
mov
dec
mov
int3
mov
sbb
add
pop
add
aam
or
pop
dec
pushf
jno
xchg
jno
loopne
orb
mov
add
jo
in
xor
fsubl
in
shll
adc
out
jo
std
mov
inc
sub
pop
rcl
xchg
xchg
mov
inc
and
push
push
pop
test
sahf
movsl
or
in
or
enter
mov
adc
adc
mov
loop
lds
cmc
adc
in
adc
gs
imul
lea
jl
xchg
cmpsb
stos
aas
push
fs
incl
or
dec
bound
hlt
mov
insl
fs
sbb
repz
scas
add
push
mov
int3
lahf
mov
mov
in
mov
xor
cmpb
test
cmpl
mov
cmp
inc
fmuls
scas
push
pop
pusha
jp
pusha
adc
mov
lea
ror
lock
xlat
push
add
jmp
cmp
xor
xor
fstps
mov
lods
jge
pushf
aaa
outsl
pop
pushf
cmp
ret
mov
jmp
divl
popa
in
das
cld
sub
sbb
xchg
jnp
and
jbe
lock
and
idivb
dec
clc
xchg
roll
out
mov
pop
leave
repnz
mov
gs
sar
push
cwtl
pushf
sub
xor
cwtl
add
movsb
push
dec
mov
ja
mov
out
inc
in
fbld
es
mov
dec
sub
scas
lods
add
xor
inc
push
jle
pop
bound
iret
xor
and
dec
call
mov
push
xlat
adc
cltd
lret
add
inc
repz
lret
negb
inc
in
jge
pop
lea
mov
pop
xchg
lods
loopne,pt
push
out
out
pop
xor
scas
in
cmp
es
mov
sub
push
mov
jl
sub
push
xchg
test
or
ret
add
clc
mov
jnp
inc
movsb
mov
pop
cmpb
lods
fldcw
jge
mov
scas
sub
adc
dec
dec
push
and
mov
and
sarb
and
mov
fiadds
outsb
clc
int
enter
jbe
mov
jne
hlt
in
sub
push
sarb
in
dec
jmp
or
mov
inc
adc
std
adc
push
ss
in
mov
bswap
pop
sbb
in
jbe
aaa
stos
outsb
pop
inc
add
push
or
movsl
imul
cld
sbb
out
push
imul
out
das
mov
imul
xor
cmpsl
sub
sub
jno
and
daa
test
mov
and
pop
cmp
sbbl
sbb
int3
mov
inc
pop
xchg
inc
int
add
dec
xlat
adc
sbbl
shl
push
addr16
push
jnp
jl
in
lods
sub
insl
mov
insl
dec
dec
inc
int
xchg
adc
jp
sarl
sbb
aad
outsl
push
lea
lods
jo
or
pop
cwtl
mov
pop
xor
sbb
icebp
push
sbb
xchg
mov
pushf
and
xor
sti
shll
mov
cmp
and
outsb
out
stos
fstpt
jp
xor
sub
cmp
lds
pop
in
jl
aam
ret
popa
cmpsb
xchg
sub
cmp
xor
sub
orb
cmpsb
ds
testb
out
scas
mov
repz
adc
enter
and
cmp
test
mov
xor
jl
mov
or
ja
or
in
pop
mov
lret
outsb
scas
add
and
and
cmpsl
js
int3
cltd
sar
out
daa
jecxz
fstl
fbld
es
out
dec
int3
mov
mov
lods
lret
loop
stos
jp
fldt
hlt
out
dec
jg
fadd
mov
pop
and
jecxz
xor
push
test
mov
mov
and
xchg
xor
pop
or
cwtl
pop
jbe
les
push
pop
sbb
cmc
jg
pop
lcall
jle
xchg
in
fsub
jl
loope
mov
or
mov
fisubs
popf
sarl
outsl
jnp
movsb
jmp
cld
shll
push
xor
fstpt
data16
and
cmp
insl
cmp
stos
data16
or
out
mov
lods
inc
inc
pop
mov
rcll
out
pop
idiv
mov
fstl
jae
xor
pop
js
sub
outsl
mov
dec
loope
xchg
or
lods
mov
mov
sub
sbb
out
sbb
adc
cmpsb
sbb
lods
adc
push
xor
dec
and
loop
adc
dec
add
adc
dec
lods
sub
xchg
cmp
fimull
pop
dec
rcll
xchg
gs
add
ret
shlb
orb
pushf
push
jmp
or
add
gs
ret
addb
sahf
jge
push
stc
ret
push
popf
jae
or
cmp
and
loopne
or
sbb
rorl
aam
fsubs
lret
fistl
mov
or
inc
sbb
dec
mov
es
xor
out
fiaddl
or
cmp
aam
sub
or
lock
outsb
mov
das
pop
inc
test
push
pop
inc
mov
jae
xchg
insl
mov
sti
je
mov
leave
out
cmc
loop
or
mov
adc
xor
mov
cmp
ss
imul
int3
xchg
adc
push
xchg
lcall
xchg
xchg
push
push
inc
fcom
cmp
fildl
jnp
jecxz
int3
movsl
outsl
cs
dec
pop
es
mov
adc
jmp
mov
dec
adc
mov
pop
push
cmpsb
mov
jecxz
add
mov
rol
xlat
xchg
pop
adc
dec
in
xchg
cmpsl
gs
push
xchg
cmp
mov
pop
ret
jo
aam
inc
leave
nop
sti
and
loope
cmp
pusha
mov
and
outsb
clc
dec
dec
ret
add
cmp
mov
outsb
out
out
sti
cld
xor
loopne
out
mov
iret
fs
xchg
aam
rcr
and
stos
dec
mov
scas
fs
jns
add
lcall
gs
add
xchg
xchg
xchg
mov
hlt
and
fsub
sbb
repz
cltd
mov
aas
rcll
ds
std
aaa
hlt
das
push
and
xlat
das
fwait
xor
cwtl
pop
dec
dec
scas
mov
imul
push
jge
mov
outsb
fidivs
and
or
pop
data16
add
cwtl
test
mov
jno
out
ljmp
rclb
lret
xchg
lea
int3
into
sbb
jbe
test
pop
and
jo
push
xchg
xor
add
loopne
testl
jnp
int3
or
jmp
aas
xor
pop
sbb
pushl
mov
pushf
cmc
cmp
and
out
lcall
jmp
adc
ss
divb
push
mov
dec
sub
imull
cmp
lret
mov
adc
dec
cmc
cs
loop,pt
incb
push
pusha
add
push
test
lcall
lea
xor
in
push
shl
ja
ds
mov
cmp
mov
jg
xchg
fisubs
popa
pop
bound
mov
jae
add
scas
push
sbb
adc
mov
mov
pusha
pop
in
push
sub
jne
sub
pop
orb
push
pop
cltd
pop
lock
mov
push
sub
nop
adc
int3
cmpsl
lds
lret
mov
jmp
jb
daa
xor
js
xor
inc
mov
adc
es
out
cltd
je
mov
fs
jecxz
push
push
sub
inc
dec
mov
add
pusha
rorl
inc
dec
jo
push
cli
sahf
cmp
mov
pop
mov
adc
push
push
mov
fistl
mov
pop
repnz
adc
mov
sahf
fldenv
inc
mov
into
pop
mov
dec
pop
push
mov
pushf
mov
fwait
pop
lahf
or
cmpsb
xchg
orb
mov
sub
xchg
fsubrl
mov
adcb
push
aaa
sub
lret
in
rolb
lret
add
cmpb
adc
test
cltd
out
outsb
fwait
movsl
movsl
jg
xchg
es
inc
int
dec
xchg
div
scas
test
jp
or
std
nop
cmpsl
cmp
xchg
clc
in
fildl
out
sarb
addr16
cmp
outsb
dec
pusha
aaa
sbb
shll
pop
pop
jns
faddl
mov
mov
jmp
ficomps
test
mov
mov
enter
jne
imul
call
sub
data16
fisubl
loopne
pop
pop
pop
insl
mov
aaa
testb
xor
dec
loop
dec
lcall
pop
or
fistpll
cmp
ljmp
lea
push
mov
test
adc
sbb
shlb
stos
mov
mov
in
and
subb
xchg
sub
pushf
jne
or
popf
mov
xlat
or
sqrtps
xchg
jle
shr
add
addr16
andl
lahf
cmpsb
or
bound
sub
mov
movsl
xor
xchg
lods
jp
loop
iret
pop
dec
test
xchg
cmc
repz
xchg
stos
xchg
sub
fsubr
mov
pop
dec
push
jp
add
mov
inc
sub
repz
movzwl
inc
inc
xchg
xor
loopne
inc
jo
out
mov
bound
cmpl
inc
or
pop
jmp
and
fisttpl
data16
rcll
pop
push
inc
decl
jo
mov
push
imul
adc
xor
jge
stc
js
fadd
xor
add
stos
test
loop
adc
xchg
push
and
test
jne
test
mov
cmc
dec
clc
push
jle
fwait
sub
jl
inc
xchg
sub
pop
cmpsb
mov
stos
mov
adc
push
pop
cmpsb
jp
xor
pushf
jle
lock
inc
mov
and
and
test
cld
int3
inc
cmp
mov
jae
les
stos
mov
lret
lock
lea
mov
insl
push
cmpsl
jae
loope
sahf
sahf
insb
xor
outsb
pop
sub
push
xor
pushf
xchg
mov
xor
xchg
xchg
push
popa
cmp
add
movsb
lods
mov
add
ljmp
mov
js
push
fisubl
cmp
or
movsb
stos
and
imulb
mov
imul
add
pop
push
push
shrl
stos
stc
flds
pop
in
push
lahf
pop
gs
int3
adcb
fisttps
jb
cmp
aas
popf
clc
add
rcrl
pop
push
pop
xor
pop
pop
xor
pusha
pop
fwait
sbb
mov
sbb
adc
imul
iret
adc
lret
cmp
pop
test
dec
lds
outsb
sbb
cwtl
cmc
xor
pop
jo
mov
mov
scas
xor
or
je
scas
xchg
jp
xlat
ss
jne
and
pop
and
or
cmp
pop
mov
imul
rolb
pop
fwait
mov
lret
adc
sub
loopne
and
sbb
dec
inc
push
jno
lret
push
loopne
pop
pop
iret
loopne
jmp
sti
loopne
inc
lahf
jmp
and
dec
cld
sub
xchg
aam
ljmp
lods
jg
pop
iret
lret
mov
ret
inc
and
push
cli
or
and
scas
jne
stos
cwtl
push
rolb
and
shlb
adc
lcall
ret
repz
pop
sbbb
cmc
imul
fistl
mov
adc
adc
jae
ljmp
push
and
orl
inc
arpl
out
les
xchg
lret
outsl
lea
pop
sub
jae
adc
adc
push
ficomps
lcall
mov
adc
loope
mov
aaa
mov
test
les
es
ret
arpl
xchg
lea
testb
mov
and
jle
inc
lahf
dec
add
pop
idivb
sub
push
push
sti
jl
loop
jmp
inc
jnp
adc
jp
xchg
mov
cmp
imul
push
fisubl
push
int
sbb
inc
mov
aad
sti
inc
mov
cmp
js
arpl
push
cld
mov
out
syscall
jbe
jmp
call
xor
push
lahf
inc
test
or
inc
enter
push
mov
dec
sbb
add
out
lock
push
int3
in
cmp
out
idivl
mov
cmp
jns
push
pusha
sub
clc
ljmp
aaa
cmpsb
mov
shll
or
stos
mov
and
leave
dec
xchg
push
cmp
xchg
loope
arpl
outsl
into
cmp
shll
and
inc
sbb
mov
jg
and
pop
rcll
movsl
int
xor
test
frstor
cmp
jl
jecxz
push
sbb
ja
xchg
adc
addl
es
ja
and
sbb
adc
stc
and
dec
mov
ja
cmpsb
xor
inc
ret
dec
mov
pop
mov
dec
dec
sub
data16
cmpb
dec
mov
dec
sbb
lret
int3
mov
sub
mov
dec
loopne
fwait
ret
jns
icebp
lods
jb
fisubrs
addr16
add
push
imul
inc
xor
xchg
fcomip
push
adc
jge
mov
sub
push
jge
xor
mull
xchg
repz
pusha
and
xchg
sbb
leave
jns
sbb
sbb
sub
inc
mov
fists
and
jnp
out
mov
mov
sbb
jmp
imulb
dec
scas
xor
lcall
sub
iret
out
out
repnz
hlt
xchg
loope
adcl
and
addr16
cmp
pop
loop
ret
cltd
hlt
aad
xchg
dec
addr16
arpl
push
push
outsl
addb
es
pop
ljmp
cmc
push
add
jns
jb
movsl
rcll
sti
test
and
repz
xchg
imull
fcoms
aaa
hlt
lcall
addb
xchg
mov
in
fidivs
push
sub
loope
lret
jne
mov
cld
jp
inc
pop
add
dec
in
ret
cltd
push
jp
addl
mov
lods
pushf
dec
sarl
xor
test
mov
jns
add
cltd
rclb
push
in
in
lret
sbb
jle
push
mov
pop
popa
push
jbe
repz
sbb
cmp
ficoml
pop
mov
fistps
shll
or
jmp
loop
inc
out
push
clc
mov
sub
insl
adc
rorb
out
fs
pop
addb
push
out
add
mov
ret
jmp
dec
je
xorb
sbb
test
pushf
mov
push
aaa
pop
mov
pushf
ret
and
adc
xor
jg
sahf
pusha
fwait
popa
lea
cmp
imul
fisubrs
aam
jno
out
sub
mov
test
mov
lock
and
sar
push
cli
add
in
lods
pop
dec
int
lahf
popa
sbb
adc
or
and
inc
fsubl
mov
add
mov
shlb
sub
leave
iret
cmp
jle
loopne
insb
cmp
loopne
icebp
adc
or
ljmp
lcall
pop
pop
fidivrs
dec
push
sub
jle
cmp
or
loopne
and
xchg
in
xchg
gs
fwait
out
fsubr
jnp
divl
mov
or
lret
dec
sub
and
imul
or
orl
cmp
shll
nop
out
sub
mov
rcll
outsb
mov
movsl
pusha
fldt
add
repz
sub
jge
loopne
pusha
mov
xor
xchg
cmpsb
mov
pop
mov
xchg
insl
out
push
popf
mov
or
push
pusha
shl
das
cwtl
das
out
dec
scas
jo
jmp
fndisi(8087
les
inc
push
fistpll
jge,pt
jnp
mov
es
lcall
mov
mov
adc
cmp
mov
iret
jecxz
in
jg
scas
adc
push
movsb
xchg
outsb
push
js
sub
inc
cmpsl
clc
sub
out
dec
lcall
pop
mov
hlt
xchg
lret
mov
mov
aam
ss
movsl
imul
gs
ljmp
shr
jg
ret
cli
xchg
pop
mov
dec
add
cli
lock
jg
jae
mov
int
mov
xchg
loope
dec
mov
pop
dec
xchg
dec
mov
dec
and
movsl
fcomp
scas
xor
mov
adcl
mov
pop
out
push
ss
ja
imul
out
cmpb
enter
hlt
push
lcall
or
sbb
leave
lea
xlat
stc
pop
sub
sbb
popf
lock
xlat
mov
mov
rorl
scas
adc
clc
rolb
pop
inc
imul
cmp
mov
pop
lret
dec
fucomp
out
leave
xlat
fidivl
push
scas
jge
shl
stc
pop
popf
insb
pop
sub
adc
flds
push
mov
ret
popf
sub
jo
and
outsl
lock
aaa
pop
ret
inc
cld
out
movsl
rorb
in
pop
inc
sub
and
dec
sub
adc
xor
je
out
dec
ret
mov
jg
fsubp
jmp
adc
repnz
int
repz
out
jnp
fcoml
mov
adc
fists
rorb
xchg
cmp
pop
xorb
pusha
mov
shl
loop
aad
int
ds
hlt
cmc
stos
test
inc
dec
add
xchg
cwtl
cli
mov
stos
std
or
aaa
imul
pop
mov
insb
rcll
into
mov
scas
jnp
out
dec
inc
and
fwait
adc
lahf
testl
mov
aam
daa
rclb
imul
sbbl
adc
testl
loope
idivl
movsl
push
mov
mov
and
push
out
mov
push
push
lods
cmpb
cmp
sub
and
mov
xchg
pop
test
adc
fbld
test
cli
or
add
cld
fldpi
fidivrs
dec
xor
sahf
dec
xor
jmp
shrl
aam
cmp
jae
adc
and
push
fdivs
loopne
les
mov
out
pop
scas
mov
int3
out
push
cmpsl
arpl
pop
fisubs
fildl
insl
mov
cwtl
jecxz
lret
mov
int3
cmc
in
adc
jo
imul
jae
shll
xor
mov
insb
fwait
jae
and
je
cli
push
test
popfw
xor
rol
push
icebp
pop
mov
rcrl
and
cmp
xor
push
push
and
cmp
loopne
int
cmp
lret
or
sbb
fcomps
adc
jl
mov
inc
out
mov
insl
sbb
inc
adc
inc
inc
mov
pop
in
bswap
cld
fidivs
pop
loope
cld
iret
mov
xor
das
dec
fwait
pushf
fnstsw
and
nopl
jae
into
cltd
mov
xchg
cmpsb
mov
push
inc
xchg
pop
in
loope
pop
add
jecxz
out
enter
or
shrl
mov
jo
jo
mov
or
and
out
and
inc
out
push
fwait
xchg
fisubl
mov
dec
push
push
cmp
dec
test
jg
rolb
iret
push
popf
loope
fs
movsl
addr16
scas
or
sti
jge
fisubs
sbb
loop
mov
add
mov
aad
dec
pop
in
bound
cld
loope
rorl
xchg
je
push
jne
push
mov
das
movsl
cs
outsb
fcomi
leave
repnz
push
pop
xchg
test
and
jl
mov
xor
aad
xchg
inc
dec
cmpsl
in
push
fstpl
out
cwtl
xor
clc
jo
or
psrlw
or
lahf
xchg
fs
mov
xor
dec
repnz
loope
dec
movsb
xchg
sbb
nop
imul
fistps
push
adc
cltd
jg
pop
push
lods
cli
inc
lret
icebp
in
shll
es
or
test
inc
test
dec
xor
jnp
imul
repz
ja
imul
xchg
daa
jbe
sbb
jecxz
fmull
cmc
jmp
icebp
pop
iret
cmc
lret
std
test
xchg
lret
mov
and
addr16
inc
gs
les
inc
mov
lods
xchg
mov
mov
sbb
push
shl
sub
cmp
cmp
push
cwtl
push
in
jo
iret
and
neg
mov
fs
jns
dec
xchg
pop
jle
ds
sub
fnsave
mov
test
pop
jno
jmp
mov
in
inc
fwait
dec
jo
pop
jnp
insl
xor
and
inc
push
lret
inc
mov
mov
cs
and
inc
cmpsb
ja
mov
sbb
gs
scas
gs
xchg
fsubs
dec
repnz
cmpb
jae
jbe
pop
imul
lret
rcrl
das
xchg
mov
je
addb
cs
and
sbb
hlt
pop
cmp
pop
sti
adc
into
mov
call
or
jg
and
sbb
adc
sub
or
push
adc
ss
dec
adc
cwtl
scas
inc
cltd
sbb
shl
dec
fldl
mov
scas
add
lock
aaa
icebp
adc
aaa
repnz
ljmp
pusha
cmp
add
loop
lods
sub
adc
mov
js
mov
test
push
xchg
test
adc
mov
or
ficomps
pop
insl
xchg
mov
inc
loope
arpl
adcb
je
add
out
cmp
out
roll
mov
mov
enter
mov
std
sbb
aam
mov
cli
rcrl
mov
mov
int
add
shrl
sahf
mov
rol
orl
aaa
insb
mov
pop
insb
aam
fstl
mov
xor
jge
xchg
inc
or
ret
add
movsl
cli
mov
mov
jl
jmp
sub
mov
fsubrs
call
pop
cmc
enter
or
pushf
jnp
xor
lss
cltd
or
add
pop
lret
mov
clc
es
aas
mov
sbb
stos
ret
sarb
dec
jno
and
lret
mov
adc
xor
popa
not
jmp
mov
or
insl
sub
and
adc
sbb
adc
and
sub
fstl
push
xchg
enter
xor
pop
cmp
fcomip
icebp
push
rcl
popa
fiadds
dec
mov
adc
shrb
adc
sbb
push
aas
sub
adc
push
jg
fucomp
aaa
inc
or
or
and
in
pop
mov
arpl
insl
iret
cmc
add
rorb
push
push
sbb
loopne
cld
or
int3
cltd
adcl
insl
add
xlat
xchg
lods
lods
jbe
pop
adcl
scas
inc
dec
mov
pusha
in
pop
sbb
mov
dec
adcb
add
lret
cli
pop
movq
sub
pop
outsl
sti
mov
jle
or
mov
das
pop
loopne
mul
scas
push
js
cltd
jg
pop
fldenv
stos
mov
cltd
test
adc
dec
test
pusha
ret
xchg
andb
xchg
fsubl
sbb
adc
or
outsl
mov
nop
xchg
lret
jmp
mov
int
fisttps
in
jmp
pop
ret
xchg
sahf
inc
shl
ret
movsb
dec
jbe
jecxz
sti
leave
jle
push
inc
add
jbe
cld
test
loop
push
pop
aam
fisubrl
mov
mov
mov
mov
sbb
xor
add
call
lods
mov
lahf
adc
lcall
pop
pop
dec
sub
ds
scas
fwait
pushf
add
dec
sarb
add
xchg
jl
lret
fwait
mov
aad
sub
ret
jecxz
inc
stos
xchg
jbe
cltd
das
add
test
stos
mov
insl
and
int
xchg
jno
mov
lds
mov
xor
cli
add
pop
rolb
mov
fldt
imul
popa
jno
xchg
sbb
sub
lcall
es
sbb
adcb
es
popa
notl
lods
sbb
in
repz
or
fsin
pop
aas
push
cltd
xor
cmp
les
lahf
int3
frstor
and
into
rol
adc
push
mov
leave
pusha
inc
dec
loope
sti
fldl
subb
pop
shr
loopne
xor
das
jl
mov
scas
push
inc
cmp
in
sub
mov
pop
cmp
pop
sbb
and
sub
xchg
sbb
xchg
mov
dec
fildll
pop
mov
test
mov
push
mov
jno
sub
and
xchg
ljmp
add
xor
or
mov
jmp
pusha
pop
in
mov
test
sub
lods
rorl
lcall
adc
arpl
loop
mov
lea
es
sub
das
adc
sarb
inc
push
pop
fmuls
xor
fdivr
aas
mov
addr16
jno
in
mov
movsl
repz
pop
cltd
shrb
insb
repz
sarb
cwtl
je
add
popf
movsl
jnp
add
data16
sbb
push
mov
and
lcall
shll
leave
xchg
pop
mov
adc
dec
jo
jns
jb
in
mov
lea
lahf
and
pop
cmp
and
out
and
repnz
pop
jo
cwtl
jno
mov
into
jbe
pop
jp
push
imul
pop
cli
add
pop
sbb
adc
lret
clc
sahf
out
pop
jp
xor
lods
shr
insb
dec
scas
mov
in
mov
es
imul
nop
in
mov
ror
enter
adc
push
popf
setnp
xor
mov
fldl
sbb
mov
out
jge
dec
fldl
xchg
mov
sahf
xchg
add
out
and
gs
repnz
adc
fsub
ret
pop
ret
lahf
jge
not
es
mov
lret
sbb
mov
enter
cld
cli
pop
enter
mov
adc
ret
repnz
hlt
fisttpl
jle
add
fisubrl
test
div
sub
mov
push
pusha
push
shll
mov
xchg
pop
adc
sub
inc
bound
push
inc
test
ret
ds
cld
xchg
into
and
movlps
pop
sbbb
jb
jne
dec
dec
ret
nop
dec
leave
sub
das
cli
inc
mov
aad
popa
add
fimull
add
vcvtpd2psx
addr16
cmpsl
dec
dec
xor
or
xchg
add
xchg
and
add
jp
out
test
cmp
xor
nop
dec
and
pop
xor
pop
push
mov
sbb
ret
das
fcmovne
fidivs
pop
pop
stos
xchg
scas
push
sub
xchg
ret
sub
mov
aad
lods
xchg
ret
or
in
out
jge
or
movsl
push
sbb
jp
sub
xor
or
or
and
dec
fldcw
inc
mov
cld
jne
add
jne
sbb
sbb
xchg
pop
fstl
mov
pop
fs
in
adc
cltd
popa
sub
push
pop
sub
mov
arpl
jo
add
outsb
js
movb
push
or
xchg
mov
jns
adc
cs
xor
lock
test
push
aaa
mov
inc
push
dec
mov
test
jecxz
lahf
arpl
xchg
cmp
cmpsl
test
insb
test
jae
cmp
jp
jnp
inc
aas
jnp
andl
fildll
setp
push
cwtl
loopne
and
loope
push
mov
mov
iret
mov
mov
cltd
sarl
xor
mov
popl
sbb
mov
cmp
add
in
fidivl
sarb
jo
or
sub
enter
iret
test
jmp
mov
cmp
shl
aad
or
mov
push
jge
sub
xchg
jbe
add
pop
fcomps
mov
xor
push
and
cmp
sub
fidivl
scas
and
and
cmp
and
cmp
popf
aam
sbbl
imul
jmp
cltd
cltd
test
push
sub
add
sub
shlb
aaa
cmp
inc
inc
icebp
push
adc
dec
aas
adc
push
inc
mov
pop
inc
inc
outsb
jmp
fdivrs
cmp
mov
mov
cmp
pop
shl
sbb
repz
sahf
xchg
xor
cmpsl
mov
mov
popa
mov
or
inc
ds
lock
sti
int3
jno
lret
xor
cmpsb
or
push
push
mov
pop
les
ds
decb
pop
push
movsl
add
arpl
rorb
cwtl
leave
xchg
jb
psllw
or
ret
xchg
cmpsl
stc
stos
aad
push
sub
in
pop
fstpl
test
pop
fwait
xchg
dec
in
pop
mov
rcr
inc
js
daa
int
xorb
inc
fimull
jne
xor
sbb
xor
or
dec
jnp
add
jle
fisttpl
loop
in
aas
arpl
data16
stos
mov
test
adcb
push
mov
adc
add
hlt
gs
scas
fdivrs
pop
push
int
xchg
push
adc
scas
jae
push
sub
inc
cld
jno
cmpsb
outsb
dec
mov
js
jmp
gs
pop
mov
mov
sub
leave
sub
add
lret
lods
inc
dec
jae
mov
and
xor
and
ss
adc
jo
xor
dec
movsl
jb
mov
jmp
inc
cwtl
or
mov
seto
dec
ljmp
js
jmp
jae
and
enter
fcom
mull
push
push
mov
lods
repz
fcompl
movsb
aas
sbb
cmp
out
pop
cmp
add
movsb
inc
and
test
and
mov
das
lods
dec
lahf
sbb
or
gs
xor
loope
jae
inc
sti
fwait
pop
sti
imul
mov
and
mov
push
fisubl
movsb
mov
and
or
pop
mov
mov
mov
es
mov
jb
push
fstps
pop
aam
push
test
scas
cmp
fs
and
push
pop
and
ljmp
cmp
mov
ss
push
push
movsl
push
push
in
ja
push
je
loopne
gs
dec
rcrl
jb
and
test
sti
jno
ret
mov
pop
mov
push
dec
jne
andl
and
cmp
dec
lock
push
xchg
add
jne
mov
add
test
adc
scas
cld
mov
xchg
and
xchg
cmpsb
sbb
xor
cld
mov
dec
jno
pop
sbb
out
xor
add
lret
fimuls
enter
mov
arpl
mov
adc
jp
push
jb
lcall
sub
sti
mov
push
popa
sub
xchg
pusha
mov
out
and
push
out
std
cmp
mov
mov
sbb
popf
mov
pop
fcmovbe
pushf
jnp
push
daa
mov
add
fxch
cmc
sbb
cmp
mov
add
stos
fidivs
fnstcw
push
in
mov
in
inc
push
push
xchg
sbb
movhps
aas
xchg
rcl
loop
shrb
jmp
mov
sub
and
scas
sub
or
insb
bound
adc
xlat
std
fimull
ficoms
add
pop
jg
mov
dec
sub
les
loopne
add
outsl
mov
sbb
jl
mov
fwait
dec
cmc
cmc
addr16
dec
xchg
xchg
dec
stc
lds
inc
hlt
push
movsb
mov
mov
xor
jmp
jmp
push
cmpsb
fisttpll
cmp
andl
sbb
push
dec
gs
lods
ret
mov
sub
mov
xor
out
or
xor
lret
std
mov
jbe
cld
inc
js
nop
dec
jbe
sub
push
mov
inc
jge
adc
aam
mov
test
cmp
or
xchg
cmpl
push
in
ljmp
lds
inc
inc
lods
out
les
pushf
inc
into
push
fbld
mov
add
stos
ret
loop
ret
cmp
loopne
or
out
ret
mov
mov
xor
cmp
add
jne
xchg
cmp
mov
push
out
push
pop
cmpsb
hlt
out
cmpsl
jmp
mov
sar
ss
paddsb
xchg
fisubl
outsb
sub
ja
xor
pusha
inc
clc
jmp
and
shlb
movsl
sub
mov
outsl
xorl
aaa
out
push
div
pop
mov
cmpl
xor
inc
cmp
fwait
outsl
scas
icebp
rorl
mov
loopne
inc
xor
cli
loope
adc
dec
test
or
xchg
inc
mov
adc
cmp
mov
bound
dec
inc
push
test
sbb
fdivp
in
loop
jb
xlat
inc
iret
jge
clc
dec
mov
fldl
jg
pop
rcll
sbb
fisubs
jbe
sahf
ret
adc
shlb
es
fistpl
cmp
movsl
cmp
pop
hlt
aam
xlat
sbb
xchg
jmp
jp
cmpsl
getsec
xchg
xchg
mov
sbb
hlt
and
lods
outsl
add
les
or
pop
adc
jecxz
fs
and
jle
fisubrs
int
and
push
push
aaa
je
add
outsl
enter
add
push
hlt
sti
mov
gs
push
sub
push
cmp
inc
stc
xchg
in
mov
push
pop
rcl
adc
and
in
mov
dec
das
ss
movsb
cmp
jno
cmp
pop
dec
filds
mov
pop
rcrl
stos
fs
rcr
call
cmc
jnp
sub
xchg
mov
jge
xlat
push
clc
mov
into
pop
je
mov
in
and
add
adc
jne
out
push
cmp
cs
mov
jne
notb
aas
jb
push
xchg
add
mov
scas
leave
mov
mov
call
shl
sub
loope
adc
sbb
mov
inc
pop
pop
mov
mov
cmp
out
jl
push
cs
ljmp
or
xchg
out
idivb
dec
enter
sbbl
fwait
xor
pop
sub
xor
sbb
add
cmc
jecxz
mov
loop
and
inc
imul
shl
jl
into
stos
ja
cmpsl
popf
jmp
xchg
and
mov
stos
lea
jb
loopne
sbb
xor
jno
std
gs
pop
hlt
xchg
and
call
nop
push
cmc
jo
daa
jmp
scas
pop
push
test
xor
adc
mulb
pop
lret
hlt
popa
pop
dec
sbb
push
lods
out
movsl
add
nop
jmp
xchg
iret
pop
dec
xchg
inc
gs
jns
lea
pop
ja
daa
orl
xor
sub
clc
es
adc
pushf
sbb
push
add
js
mov
pop
sbb
jmp
mov
sbb
sbb
jle
imul
or
xor
out
dec
fildl
rcll
in
data16
dec
cmpsb
mov
inc
out
stos
js
daa
xchg
and
pop
fwait
jle
ljmp
xchg
adc
jp
push
or
xchg
mov
xor
dec
jge
pushf
fidivrl
lea
imul
xchg
dec
cmp
rol
js
nop
ret
imul
scas
xor
push
lds
sub
lret
test
stos
in
fucomp
mov
ret
pop
push
pop
inc
dec
adc
adc
push
cmc
and
into
lea
sbb
push
rorl
adc
jae
leave
mov
mov
test
mov
add
inc
pushf
ljmp
cmp
bound
dec
stos
mov
cwtl
cmpsb
jecxz
cs
popf
and
xor
push
push
in
ret
sub
fbstp
jns
es
xchg
aas
enter
cmp
lock
push
out
test
test
ds
xor
pop
mov
push
sub
cmp
popf
mov
andl
or
sbb
popf
xor
sub
adc
mov
movsb
data16
mov
pop
jno
shrl
sub
rolb
jbe
mov
xchg
jns
arpl
in
mov
adc
mov
ret
rclb
mov
into
mov
pop
dec
push
repz
loope
jo
sub
pop
fistpll
jp
inc
mov
inc
mov
sub
jge
push
push
pop
jmp
stos
ljmp
jg
out
ret
int
cmp
jecxz
into
xchg
jb
sub
or
cmp
inc
push
xor
mov
enter
cltd
sub
sbb
pop
adc
jg
movsb
pop
inc
cmp
cs
cmc
fsts
xchg
xchg
mov
jno
cmpsl
dec
adc
pop
cld
inc
add
sti
call
mov
orl
jnp
fidivrs
aad
push
jae
stc
stos
add
or
xor
sub
mov
mov
jmp
mov
cmp
mov
inc
aam
xchg
repz
ja
movsl
adc
jle
jnp
xchg
dec
dec
filds
mulb
pop
xor
mov
fs
es
loop
jno
faddl
std
jns
xor
pusha
orl
aam
out
ja
out
sub
mov
mov
bound
or
or
adc
cmp
mov
and
sahf
jo
int
psllw
inc
lret
lds
xchg
sti
mov
scas
lods
and
adc
jno
dec
cmpsl
push
cmp
cmpsb
push
sbb
mov
pop
sahf
push
pop
or
jecxz
aaa
out
mov
pop
ss
or
xchg
and
jnp
into
pusha
incb
sub
inc
mov
test
orl
dec
in
cmp
lods
pop
loopne
push
mov
mov
fnsave
mov
jne
mov
lods
or
sbb
inc
testl
cwtl
mov
shr
add
ret
popf
dec
mov
lea
pop
push
sub
stos
and
jge
out
ret
mov
adc
out
fwait
mov
sub
int
es
popa
mov
repnz
fsubrs
data16
lock
cmp
leave
and
test
jne
xchg
insl
dec
fistps
pop
pop
push
nop
mov
loop
mov
cltd
xor
xchg
fnstsw
ret
xchg
movsb
push
xor
leave
jns
add
dec
vpshlw
push
push
and
adc
pushf
flds
dec
sbb
mov
xchg
pop
sti
dec
xchg
or
jl
push
cltd
inc
xor
or
aas
and
ljmp
sub
int
dec
xchg
lahf
pop
jge
scas
hlt
fdivrs
cltd
shl
cld
popa
adcl
fmulp
rclb
inc
push
mov
into
leave
cmp
std
sahf
mov
mov
pop
mov
cmp
lock
jmp
stos
cmp
fnstsw
iret
dec
add
sahf
push
test
stc
mov
imul
and
roll
inc
push
push
mov
pop
cs
int3
jp
dec
test
shlb
mov
dec
popa
neg
shlb
push
xchg
popa
fs
ja
fsub
movsb
test
mov
inc
movsb
lods
pop
mov
ja
inc
pop
in
imul
pop
sbb
inc
add
add
insb
and
int
repnz
or
subl
cmpsb
les
sti
out
cmp
cmpsb
sbb
xlat
lock
lock
inc
or
dec
test
lret
int
fucom
lahf
js
lea
pop
xlat
inc
lcall
jnp
movsl
frstor
stos
mov
ds
shr
popf
push
adc
fimull
pop
adc
push
jp
mov
push
mov
jp
jecxz
and
or
jns
std
or
movsl
mov
cmp
mov
mov
pop
stos
aad
push
fcmovnb
aam
imul
add
dec
pop
imulb
dec
mov
loop
sub
inc
es
adc
mov
inc
stos
sub
inc
pop
fadd
mov
inc
pushf
test
dec
rcrl
dec
movsl
sbb
cs
es
cmovb
or
incl
mov
push
test
fwait
push
iret
mov
pop
scas
cmpsl
pop
sub
mov
bound
mov
push
and
cmp
pop
es
inc
movb
jne
mov
jo
loope
mov
mov
cwtl
ror
jmp
inc
jge
pop
in
fcomps
push
adc
fistps
mov
and
push
lret
divb
and
cmp
stos
ficomps
sub
out
test
stc
scas
cmp
adc
push
test
leave
je
push
test
loopne
ds
add
loopne
leave
inc
rcll
jo
divb
and
into
jo
xchg
xchg
test
stos
xor
cmpsb
push
xor
gs
fisttpll
ljmp
add
adc
es
jle
call
inc
pusha
pop
in
insl
psadbw
adc
inc
lock
dec
pop
adc
in
lods
aaa
ret
leave
inc
sbb
insl
addb
mov
iret
pop
aas
lcall
cmpsl
andl
mov
push
xor
stos
cmp
adc
ret
push
andb
mov
cmp
and
ret
je
cld
jmp
das
adc
fbstp
xchg
out
mov
bound
inc
jge
sub
dec
mov
out
sahf
divb
cmp
mov
shlb
xchg
and
lods
jmp
mov
mov
push
add
add
cli
imul
ds
pushf
inc
cmp
xor
das
iret
scas
aam
cmpps
loop
outsl
adc
dec
mov
cli
push
lret
fsubr
fs
cmp
adc
xchg
mov
repnz
mov
and
test
dec
ss
addr16
mov
mov
hlt
mov
sbb
mov
dec
adc
add
mov
mov
addb
lds
xor
loopne
jp
sbb
lcall
mov
or
dec
fidivs
mov
inc
jge
inc
leave
fwait
lock
jae
lea
xchg
mov
and
sub
mov
jecxz
testb
adc
loopne
pop
sbb
test
lret
nop
inc
out
pop
stc
adc
int
jmp
mov
adc
les
sbbb
out
loopne
mov
pop
xchg
push
popa
jns
mov
xor
in
adc
int3
add
sub
jecxz
sbb
in
rorl
out
sub
xchg
xchg
in
rcr
cmp
jmp
jb
lea
pop
repnz
dec
inc
ror
push
adc
fisubl
out
mov
jl
jb
call
mov
pop
mov
ss
push
xchg
aad
rcl
or
jecxz
add
mov
and
ret
dec
ljmp
mov
out
cwtl
iret
shrb
test
lods
inc
sti
mov
adc
dec
mov
lods
jle
aam
sbb
adc
push
dec
cmp
mov
push
and
jns
xor
mov
incl
mov
mov
pop
lret
sub
sub
jle
out
out
inc
js
sub
arpl
cmp
fcmovne
out
loopne
mov
xchg
jnp
sbb
xor
push
fstps
div
mov
lret
pop
adc
sub
cs
adc
push
xor
push
and
enter
push
dec
jbe
sbb
inc
dec
imul
inc
repnz
push
push
dec
adc
jno
test
js
sbb
mov
pop
cmp
arpl
jle
lahf
pop
lret
add
mov
outsl
cmpsb
push
cmp
jg
iret
out
inc
inc
js
and
push
jge
jg
ds
or
test
push
sahf
jbe
mov
pop
push
mov
jae
ret
sbb
repnz
sti
xorl
js
cmpsb
xor
repz
dec
test
xchg
cmp
add
popa
mov
add
in
push
sarl
xor
or
loope
add
rorb
xchg
repnz
mov
outsb
mov
inc
fstpl
sti
popf
jbe
mov
in
ss
mov
lods
fstps
pop
mov
mov
push
cmp
mov
dec
sahf
inc
adc
scas
cs
sbb
data16
lret
xlat
dec
lret
test
in
xchg
cmc
push
cmpsb
xchg
and
mov
bound
and
repnz
cmpsl
icebp
mov
cltd
jns
inc
push
or
mov
cmp
push
cmp
xor
into
orb
dec
scas
divl
mov
mov
popa
aas
in
ss
cmpsb
pop
aaa
addl
ja
out
fcoms
fnstsw
clc
test
jmp
mov
xchg
lods
jg
and
rcrl
fwait
pop
xor
fldt
push
mov
add
sbb
ja
iret
xchg
pop
push
or
push
lea
sbb
pop
shlb
cli
rcrb
pop
adc
mov
cld
jo
adc
push
add
hlt
push
cmpsb
xchg
or
pop
insl
notl
push
std
cmp
enter
sbb
in
mov
das
xor
jno
fwait
call
mov
in
or
sahf
jne
mov
aaa
mov
cmp
test
daa
enter
and
mov
pusha
mov
pop
cmpsl
mov
mov
cwtl
aaa
or
xchg
cld
dec
mov
and
out
dec
ret
sahf
testb
dec
out
cmpsb
mov
hlt
popa
mov
fbstp
je
mov
scas
xchg
cmp
mov
loopne
push
mov
and
xchg
and
in
and
aad
ret
int3
les
inc
mov
add
dec
fdivrs
clc
popa
scas
fcomps
stc
insb
insb
inc
arpl
sbb
xchg
shlb
cmc
pop
mov
je
test
xchg
dec
into
int3
mov
test
mov
lret
rcr
je
pop
mov
cs
inc
sbb
or
ss
jle
aaa
ret
add
lods
push
inc
cmp
js
xchg
mov
xchg
lahf
int3
cmp
push
ret
and
mov
inc
outsl
add
add
and
shrl
orb
jl
leave
scas
sbb
into
test
jbe
stos
loope
in
test
jp
outsl
or
jl
mov
cwtl
and
ret
push
scas
ljmp
daa
jo
aas
pop
lods
mov
adc
scas
xor
and
sbb
dec
add
sub
shll
sbb
pop
test
and
add
fadds
pop
popf
shl
xrelease
xchg
andl
sub
mov
mov
xchg
mov
sti
adc
sub
or
test
mov
nop
xchg
sti
adc
addr16
ja
sbb
mov
dec
pop
out
cli
outsl
pop
sbbl
xchg
ffreep
fwait
les
xchg
cwtl
ss
sbb
outsl
push
cld
es
in
stc
fwait
out
cmp
insb
jno
mov
std
jecxz
inc
aas
leave
push
sub
xchg
outsl
dec
fisubs
out
mov
pop
test
ss
fadd
xor
bound
lods
bound
int3
fs
aad
std
or
aaa
mov
fisubs
fildl
cmpl
jp
pop
mov
testl
clc
push
mov
adc
addb
xchg
pop
repz
xchg
mov
xor
xor
inc
testl
in
insb
adc
popa
push
pop
or
mull
jae
hlt
inc
out
lds
inc
insb
addr16
ficompl
mov
loopne
adc
xchg
ja
pop
pop
out
iret
add
faddl
and
jne
sarb
or
jle
cmp
mov
shlb
mov
call
add
std
push
add
cld
div
insl
jbe
sbbl
fimuls
hlt
scas
in
inc
add
ljmp
mov
test
lcall
sbb
das
jne
push
jo
dec
pop
jmp
inc
xchg
popf
mov
aad
fucom
jns
xor
ret
ja
add
or
mov
sti
ds
sbb
mov
sub
and
sbb
xchg
push
mov
iret
or
fisttpl
negl
stc
xchg
dec
sub
dec
jl
fsubrl
test
add
xor
stos
imul
sub
jne
mov
jae
pop
in
inc
push
ja
rorl
sti
add
sbb
jmp
mov
xor
inc
mov
aaa
or
cmpsl
cmp
enter
movsl
rorl
dec
mov
xchg
pusha
xchg
ds
mov
loop
subl
mov
hlt
jp
inc
xlat
in
mov
jbe
jo
ror
sti
ss
mov
lea
jb
lret
mov
push
mov
scas
sbb
mov
or
incb
pop
aaa
jle
jae
ljmp
fstpl
or
cmpsl
xor
loop
xchg
iret
subl
arpl
es
inc
mov
int3
ds
mov
pop
push
aaa
or
sub
push
sahf
fwait
out
mov
pop
and
push
ficompl
mov
or
dec
dec
add
outsl
cwtl
mov
stos
imul
adc
mov
pop
xchg
bound
push
xchg
cmpsl
sbb
and
add
mov
imul
cmc
lcall
and
jmp
cmp
shll
das
fstl
xor
cld
add
insl
arpl
pop
push
xchg
negb
and
push
jnp
loopne
popf
xchg
add
stos
mov
xchg
lcall
cld
in
pop
jo
adc
cmpsb
sarb
xor
xchg
aaa
jge
pop
add
ljmp
movsl
ljmp
into
cmp
sub
sbb
ret
mov
cmp
jl
sahf
in
pop
lret
dec
stos
push
outsb
and
inc
iret
inc
mov
in
mov
pop
push
pop
subl
cmp
push
divl
add
popa
mov
mov
fdivs
jae
lds
cmp
mov
mov
cltd
pop
xchg
cmpsb
fnstsw
mov
dec
pop
popa
adc
popa
pop
in
stos
cltd
hlt
stos
push
ret
jge
mov
enter
pop
mov
in
push
mov
ja
or
or
gs
mov
mov
notb
cmp
loope
pop
mov
outsl
dec
adc
mov
add
clc
aaa
dec
pop
add
sub
fnstenv
jns
subb
mov
outsl
add
gs
arpl
mov
out
cmp
jl
int
jo
mov
mov
push
push
pop
popf
mov
sbb
loop
adc
ror
lahf
mov
lods
fwait
add
hlt
dec
dec
sbb
mov
sbb
into
jmp
mov
mov
and
jae
jle
jge
sti
aas
push
sub
ret
outsl
cwtl
iret
jmp
adc
fsubrl
mov
dec
xchg
outsb
fwait
or
jne
sbb
std
sub
inc
leave
mov
pop
mov
dec
inc
jb
mov
mov
xchg
out
test
xchg
stc
cmp
int3
mov
jecxz
shl
std
mov
sbb
repz
dec
hlt
jns
aas
jmp
cmp
fdivrp
in
mov
popf
mov
or
jbe
fstpt
adc
inc
inc
pop
sub
sbb
mov
or
in
xchg
xchg
mov
pop
adc
cs
mov
cmpb
inc
shl
add
cli
pop
outsl
idiv
repz
mov
mov
and
repz
stos
imul
imul
mov
call
nop
sbb
mov
inc
pop
mov
sub
xchg
push
pop
in
addr16
aaa
rolb
xchg
adc
sbb
or
enter
lcall
fmuls
or
inc
xchg
jbe
cli
js
push
xlat
fmull
inc
inc
fmull
xchg
cmp
jnp
mov
ret
lds
nop
pop
stos
sbb
adc
ds
fmul
jbe
lods
outsl
push
inc
leave
pop
sbb
add
pop
xor
xor
aad
add
xor
int
mov
mov
mov
cld
xchg
mov
jg
jnp
aad
lret
lods
iret
mov
shrb
lcall
or
into
pop
xchg
es
or
pop
mov
push
cwtl
out
jo
cmp
jbe
fstps
adc
pop
jmp
jg
out
xchg
mov
outsb
or
aad
push
push
pop
shrb
mov
push
pop
add
add
sub
stos
enter
js
shlb
jae
xchg
shrb
sub
outsl
lahf
add
loope
and
out
pop
pop
xchg
cmc
pop
repz
enter
mov
or
loope
cmpsb
das
jg
add
outsl
inc
xchg
xor
cs
scas
jno
add
xor
cli
adc
jns,pt
data16
adc
cmp
idivb
sub
movsb
push
pop
xor
xchg
jecxz
mov
or
in
ss
ljmp
leavew
dec
push
pop
ficoms
add
pop
jecxz
ss
mov
jae
insw
xchg
rolb
mov
mov
in
pop
das
inc
call
daa
mov
dec
sahf
shl
pop
push
jo
out
fwait
or
test
pop
cli
xchg
inc
push
pop
dec
test
cs
xchg
sbb
mov
inc
push
loop
inc
push
xchg
xchg
mov
fisttps
xchg
scas
xchg
push
jo
and
push
mov
xor
pop
mov
popf
lods
or
andb
push
xchg
in
xchg
test
jl
jp
jmp
jne
dec
mov
jns
loope
adcb
mov
in
jno
mov
cmp
or
cwtl
mov
mov
dec
fsubl
cwtl
rorl
test
fdivrl
pushf
cs
int
adc
bnd
inc
jbe
xchg
outsb
cmpsl
rolb
aaa
iret
ja
stos
xchg
lods
and
or
outsb
sbb
xchg
pop
mov
xchg
syscall
mov
push
lret
out
aas
xchg
fwait
mov
fcomps
outsb
pop
stos
xor
cltd
std
movsb
filds
sub
mov
enter
or
mov
push
roll
and
xor
ljmp
cltd
pop
xchg
xor
push
lret
in
fwait
outsb
inc
insl
leave
mov
add
or
leave
out
loopne
jb
and
sti
xor
iret
dec
insl
mov
aaa
or
mov
push
mov
and
add
push
pop
ljmp
pop
sub
cmp
mov
test
add
mov
rcrb
cmpsb
imul
xor
movsb
into
push
stos
mov
js
ja
lret
fwait
xor
push
sti
cmp
xchg
or
ror
and
and
and
les
xor
ucomiss
repnz
fmull
mov
daa
adc
and
aam
movl
stos
add
orb
and
loopne
out
sub
dec
and
imul
lock
push
and
xchg
xorl
fsubp
jbe
stc
rol
std
fisttpl
insl
sarb
cmpsl
mov
add
shl
adc
adc
ret
push
cmp
out
popl
push
xchg
mov
repnz
push
and
xor
xor
mov
mov
ret
mov
push
adc
fdivs
insb
xor
fcompl
fs
push
filds
ret
xchg
pop
xchg
aaa
in
movsb
ljmp
insl
pop
lea
and
or
push
jmp
jne
adc
dec
subb
cmpsb
or
int
cmp
rcrl
mov
jecxz
fcmovne
scas
xor
dec
mov
loope
adc
or
cmp
sub
testb
nop
jecxz
stos
cltd
out
in
aam
sub
cwtl
dec
mov
pop
inc
xadd
popf
out
push
in
fwait
or
fldl
stos
imul
push
lret
dec
push
and
aas
repnz
je
ret
std
int
inc
enter
test
pop
sbb
pusha
lcall
popf
pop
lahf
pop
jb
jmp
pop
ret
gs
inc
push
sbb
jl
push
cwtl
ds
xor
js
add
sbb
xor
rclb
fildll
jne
and
das
adc
add
pop
arpl
sbb
jecxz
or
movsb
je
cld
inc
sbb
jl
fs
out
outsb
leave
mov
cltd
mov
ja
mov
jne
inc
xchg
fdivrp
adc
cwtl
and
sbb
ja
push
rorb
pop
mov
je
hlt
mov
test
jns
xchg
and
dec
in
mov
cwtl
sub
and
ja
pusha
pop
push
mov
mov
in
mov
test
dec
lea
insb
jg
bound
push
cmp
xchg
jmp
movb
lods
mov
and
xchg
sti
orb
repnz
insl
ffree
cmp
cmp
add
test
call
lahf
pop
xor
divb
sahf
repnz
fnstsw
pop
or
mov
dec
xchg
and
cs
popf
filds
dec
repz
andb
sub
rolb
out
aaa
lds
pusha
push
push
mov
dec
pop
mov
lods
mov
popf
mov
pop
mov
cs
mov
dec
imul
sahf
mov
cmp
lods
xor
test
mov
stos
xor
dec
mov
sub
xor
out
inc
jecxz
push
pop
or
iret
aam
ss
push
orl
inc
mov
lret
fcomi
pop
sub
sbb
test
mov
push
and
cwtl
add
sbb
inc
lret
lret
pop
jnp
shll
dec
and
push
jmp
lret
inc
adc
inc
pop
and
sub
test
adc
push
movsl
sti
jno
mov
dec
loopne
mov
or
popf
or
aad
jbe
mov
aad
mov
jmp
inc
xor
sbb
cmp
stos
mov
mov
mov
cmc
mov
cmp
ret
insl
pop
lret
test
adc
insb
data16
push
mov
mov
or
inc
sbb
mov
fists
or
aam
addr16
test
jbe
mov
subl
cmc
mov
popf
pop
popf
fdivl
jo
cmp
mov
cli
pop
enter
adc
and
sub
test
loop
mov
stos
push
or
dec
mov
test
adc
mov
int3
pop
loopne
mov
xor
loope
adc
jns
xchg
addl
mov
addb
insl
fildl
inc
mov
mov
jmp
cmp
ja
ret
cmp
int3
or
nop
out
cmp
or
push
adc
or
mov
lahf
out
insb
jbe
fs
arpl
dec
sbb
aaa
pop
sbb
popa
xchg
mov
hlt
je
mov
jge
movl
and
std
test
cmp
test
mov
test
out
cmpsl
mov
fstl
cld
jno
dec
mov
orb
xor
sub
mov
cltd
out
dec
in
leave
nop
sbb
jae
jno
mov
pop
or
in
xchg
sub
jge
and
jmp
jp
mov
insb
loop
push
dec
mov
pop
mov
mov
xorb
xor
xchg
or
arpl
loop
inc
inc
mov
lods
ja
pop
mulb
pusha
adc
imul
and
add
lahf
fdivr
stos
in
fcompl
andl
mulb
daa
sub
mov
add
and
cld
fisubrs
jl
stc
repz
sbb
aad
dec
jno
loop
pop
in
xor
fisttpl
icebp
jg
insb
inc
mov
gs
das
push
xor
lea
fwait
pop
sahf
mov
loop
test
imul
roll
push
pop
rcl
jle
cld
aam
pushf
dec
jl
jle
and
xchg
scas
test
mov
push
mov
dec
mov
ret
pop
ja
ja
int
mov
adc
stc
cmp
mov
jae
sti
mov
inc
test
roll
mov
inc
stos
arpl
test
cmp
cmp
jo
add
scas
out
popf
popf
outsb
adc
push
inc
or
clc
mov
fbstp
out
jno
ficomps
aas
mov
and
push
call
pop
lea
jne
mov
jp
in
cli
pushf
js
les
and
enter
ficompl
adcb
sbb
mov
push
mov
add
das
xorl
mov
adc
add
adc
icebp
aas
out
lahf
mov
jle
jl
fdivr
ja
add
cvtdq2ps
stc
pusha
sub
cmp
nop
xchg
jne,pn
out
pop
int
cs
out
add
lcall
mov
aam
test
dec
ficoml
icebp
push
in
add
inc
mov
lods
sahf
jmp
or
jg
fistpl
xor
jne
popa
test
in
pop
jne
cmp
sbb
cli
xchg
or
imul
rcrb
add
idivl
inc
or
dec
add
jg
pop
enter
adc
and
and
stos
or
movsb
cmc
xor
inc
mov
jbe
out
fimuls
push
mov
mov
and
xlat
int
hlt
mov
test
es
xor
movsb
popa
ret
in
int3
dec
push
das
sub
and
call
lcall
in
jns
push
ds
jmp
push
mov
loop
jno
push
jl
in
pop
jae
inc
sub
sbb
jmp
ret
mov
stos
pop
mov
mov
subb
pop
sbb
add
and
push
mov
pushf
pusha
sub
mov
add
fnstcw
pop
cmp
cmp
xchg
mov
scas
push
add
pop
jns
mov
int3
arpl
mov
add
sbb
jle
or
lahf
pop
mov
push
pop
mov
imul
les
or
sbb
rcl
testb
add
sub
fldcw
int3
in
xchg
loopne
cmpsl
cmp
int
add
xchg
das
gs
pop
insl
pushf
cmpsb
jl
mov
adc
sti
jg
insb
and
jg
fwait
inc
jecxz
cmp
jbe
testl
mov
movsl
daa
fs
push
icebp
xchg
mov
xchg
mov
cld
mov
es
pop
add
cmpsb
sub
xchg
mov
inc
cmp
adc
fmul
add
adc
loopne
jl
mov
sub
lock
out
xor
xlat
jl
cmc
pusha
dec
outsb
filds
roll
aas
sbb
filds
xor
fildl
push
sbb
jo
add
and
les
aas
push
jle
xorb
jmp
sti
inc
mov
adcb
pop
xchg
add
mov
xor
cmc
in
xchg
fstl
jb
dec
shrb
iret
test
mov
adc
lcall
sbb
lcall
inc
cwtl
xor
xchg
jecxz
hlt
clc
fdecstp
and
xchg
sub
inc
imul
mov
sub
int
mov
add
pusha
je
fisubrl
lds
sub
mov
adc
inc
mov
jns
rorb
in
jl
xchg
jmp
loopnew
pop
xlat
dec
mov
clc
sbb
ljmp
jno
xchg
pushf
sub
mov
adc
adc
aaa
es
ss
add
fnsave
loopne
adc
popa
xchg
mov
xchg
push
add
dec
cmp
add
sbb
mov
mov
out
fs
popa
in
jno
shrl
mov
mov
add
jbe
mov
mov
jb
pushf
idivl
mov
pop
mov
xchg
or
cld
pushf
fsubrl
xchg
jp
rol
mov
sub
mov
pushf
xchg
sub
fs
mov
jle
bound
xchg
pop
jg
insl
push
sub
jae
pushf
mov
or
sbbl
mov
xor
stos
aad
dec
outsb
adc
dec
mulb
dec
dec
cmc
jno
scas
fdivr
pop
adc
lds
sahf
lcall
xchg
jp
mov
addr16
push
pop
mov
daa
xor
inc
sub
and
clc
xchg
adc
popl
sarl
loopne
rclb
in
cwtl
out
mov
or
addr16
cmpsl
dec
mov
pusha
cmc
out
ja
jno
inc
aas
adc
jg
push
out
fstl
rcll
addl
das
insb
or
jae
aas
ss
mov
pop
push
mov
xor
push
xlat
or
imul
jl
mov
jg
filds
mov
lods
mov
pop
insb
into
mov
shrb
or
lods
insb
sub
jno
mov
in
adc
xor
ss
and
bound
jnp
dec
sbb
jecxz
cli
pop
dec
adc
mov
into
in
adc
enter
push
sbb
mov
fwait
mov
sti
pop
mov
mov
shll
clc
adc
rclb
imul
jmp
xchg
fisubrl
movsl
mov
xor
scas
jmp
repz
ret
xchg
fiaddl
in
dec
xor
jbe
fldenv
pmuludq
mov
sub
cmpsl
mov
xlat
repnz
rcl
sub
sbb
pop
xchg
leave
dec
and
pop
fsubs
add
xchg
nop
ret
int3
xchg
dec
jge
sub
pop
sub
pop
iret
jbe
ss
xor
fwait
aad
loopne
rcrb
push
add
or
mov
or
push
orb
mov
and
je
popa
adc
inc
or
adc
or
adc
add
sub
sub
push
das
pop
movsb
std
inc
imul
jns
or
arpl
xor
sub
and
mov
jb
mov
addr16
sbb
add
pop
iret
out
mov
mov
imul
stos
mov
ljmp
negb
fldl
fisubl
xor
add
and
fdivl
int3
add
cs
mov
lret
dec
lods
cld
pop
dec
and
and
pop
add
xchg
xchg
and
push
adc
cmpsb
sbb
sub
leave
ret
pop
and
xor
xor
xor
mov
and
add
lahf
and
ficomps
mov
sbb
fnstsw
mov
and
aaa
arpl
sbb
fstpt
fiaddl
movb
lods
out
xor
bound
add
cmpsb
jmp
cld
xor
rcll
imul
xchg
sbb
xchg
outsl
leave
int3
mov
ss
es
cmp
add
mov
inc
in
xor
das
cli
lret
mov
mov
adc
jecxz
loopne
fs
adc
xchg
loopne
mov
jae,pt
sub
sub
hlt
imul
adc
loope
mov
jb
hlt
push
xlat
mov
sub
adc
aaa
jno
fisttpll
sti
fidivl
lock
jp
push
xor
pop
mov
mov
adc
lds
jp
mov
mov
js
mov
loope
mov
imul
xlat
ret
jbe
and
mov
icebp
sbb
sub
je
int
push
push
pop
pop
frstor
ljmp
mov
or
or
jbe
dec
in
ja
mov
mov
cmc
cmp
sub
mov
aaa
add
xchg
mulb
sub
push
jb
test
mov
leave
xchg
out
xor
jp
mov
add
add
xchg
xor
xchg
ja
aas
gs
int
sti
stos
dec
mov
xchg
loope
outsl
ds
xchg
add
adc
adc
inc
fdivr
ds
mov
insl
outsl
fisubrl
sub
sub
pop
loopne
pop
inc
and
sahf
xchg
inc
mov
rorl
sar
xchg
insb
in
jmp
adc
fsubl
sbb
fnstenv
mov
je
pushf
rcrl
xchg
lds
mov
jne
fwait
xchg
xor
sub
outsb
out
cmp
mov
cwtl
adc
sti
std
fcomp
sbb
dec
enter
cltd
loope
ds
test
xor
rorb
lea
std
adc
mov
pop
outsl
xchg
mov
mov
sbb
mov
push
imul
mov
add
mov
pop
jne
pop
push
push
lods
pop
pop
pop
les
adc
inc
cli
sub
jle
inc
into
ficoms
and
movsb
xchg
mov
enter
daa
push
push
sbb
sti
shl
push
aam
xchg
ret
mov
mov
jg
stc
inc
xor
js
jo
jmp
xchg
frstor
ficomps
out
in
xor
sarb
stos
xor
push
lds
shrb
mov
pop
push
aad
jg
popl
clc
test
jmp
xchg
add
cmp
out
repnz
scas
lods
lock
std
push
mov
inc
imul
pop
or
push
sbb
inc
adc
mov
add
addr16
rcrb
pop
push
push
scas
popf
add
cltd
das
test
xchg
test
and
outsb
jae
lret
or
mov
mov
push
mov
movsb
jle
test
push
mov
jge
pop
sbbb
push
sbb
sbb
push
mov
bound
pusha
cmc
push
pop
test
xchg
jne
adc
out
shrb
ljmp
and
aaa
lret
and
mov
mov
adc
mov
cmc
sbb
clc
out
andl
push
mov
jle
xchg
xchg
jne
ds
pop
sbb
stos
js
clc
sbbb
mov
nop
jp
jae
cmp
jbe
inc
jb
icebp
sarb
push
adc
mov
fildl
jae
call
add
dec
fbld
sub
mov
and
cmc
and
stc
loope
push
fidivs
cld
jg
xchg
jp
insb
mov
mov
scas
jae
cmpsb
jo
mov
ja
pcmpgtw
or
push
mov
shrl
push
popf
jmp
adc
dec
pop
mov
je
xchg
dec
out
clc
outsl
jno
and
fistps
fisubrs
movb
and
jp
lcall
sub
sti
sbb
pop
jl
incl
pop
lock
pop
cmc
pop
test
cltd
mov
mov
cmc
xor
mov
lret
bound
mov
push
push
clc
nop
jb
std
jge
cli
lret
clc
jb
sub
test
pusha
fcoml
mov
in
or
outsb
xor
fwait
sbb
repnz
loop
sub
lea
ficoml
int3
jle
sbb
adc
jle
xchg
adc
jmp
dec
mov
jns
pop
call
ljmp
mov
mov
add
sub
sub
push
push
movsl
jns
xor
add
enter
in
jo
and
addr16
sbb
mov
fistl
fdivrl
push
jnp
push
push
mov
cmp
push
mov
loope
pop
cmp
fcmovnb
jle
les
popf
lcall
mov
adc
mov
inc
cld
cmpsl
add
stos
shlb
into
pop
push
cmp
mov
lods
push
pop
idivb
popa
fcom
sub
repnz
sbb
push
mov
push
fstpl
push
das
lahf
push
jne
orb
fcoms
inc
scas
jbe
punpcklwd
mov
jns
nop
pop
fcoml
xchg
ret
pop
int
fs
stc
aas
xchg
jg
in
fwait
adc
cwtl
movsl
daa
xlat
push
sbb
inc
jmp
mov
or
in
push
adcb
ret
test
loope
add
pop
xor
fistpl
test
orb
icebp
push
jo
fcmovnb
repnz
pop
mov
int
mov
out
fwait
and
hlt
pop
xor
lods
jle
mov
arpl
ja
and
mov
int3
scas
or
es
flds
lock
ss
add
jecxz
mov
and
pop
xchg
xchg
sbb
add
adc
enter
or
adc
mov
scas
cli
push
nop
imul
leave
mov
push
roll
lds
xchg
in
jne
in
test
jbe
shl
mov
ss
mov
jne
cmpsb
leave
addl
loop
orb
in
loopne
xchg
adc
sub
inc
enter
adc
jge
int
idivb
xchg
test
inc
lods
scas
adc
or
andl
ret
adc
aaa
cmp
cmpsb
cmp
iret
std
lods
push
mov
pop
popf
inc
xchg
cmp
xlat
pop
dec
jo
mov
ds
insb
add
push
xlat
cmp
sub
push
mov
xor
pop
cli
sahf
sarl
loop
loope
mov
pusha
enter
adc
jns
std
test
add
cltd
add
mov
ja
in
sbb
shll
xchg
xchg
push
xor
fcmovu
out
imul
inc
add
cltd
push
sub
push
lea
ficomps
jg
sub
out
jmp
sub
push
test
pop
pop
out
cs
cmp
gs
cmp
into
cmp
mov
nop
test
pop
movsb
push
jg
pop
mov
out
cld
adc
loopne
nop
mov
pop
mov
dec
test
ds
adc
shl
xor
sarb
mov
dec
push
adc
into
and
hlt
xchg
pop
sub
jns
pop
repnz
mov
adc
xchg
mov
mov
mov
add
pop
lea
call
push
pop
jae
jg
insb
xor
int3
into
pop
dec
xchg
sbb
jp
movsl
and
pop
aas
ljmp
dec
add
int3
int3
xchg
fistps
pop
mov
imul
in
add
int
loop
push
add
lds
jae
rorl
add
adc
or
mov
or
mov
push
stos
ja
xchg
push
leave
xlat
sbb
or
add
push
aaa
inc
insl
ss
or
or
mov
or
out
push
insb
inc
imul
shrl
and
test
mov
stc
rorb
stc
sbb
jp
mov
ss
xchg
test
adc
cltd
repnz
cmc
cmp
cmp
rolb
imul
jno
jg
mov
repnz
sbb
aad
int3
imul
mov
xor
cmp
sbb
arpl
inc
sub
movsl
mov
sbb
loopne
popa
push
sbb
jne
out
fsubp
mov
in
mov
movsl
mov
push
sarb
cmpsl
pop
jae
xor
xor
jnp
fsubrl
loop
or
sbb
mov
xor
mov
or
arpl
cmp
inc
push
mov
jns
mov
fs
ret
xor
shrb
dec
mov
adc
rep
stc
sti
push
cs
movsb
dec
mov
iret
push
in
jnp
mov
insl
test
int3
mov
aad
and
mov
popf
inc
out
data16
movsl
push
cmp
scas
push
lds
pop
loope
jb
dec
or
adc
stos
add
sbb
jecxz
mov
dec
mov
mov
xchg
or
sbb
das
mov
cmp
jae
nop
jp
sub
inc
aaa
inc
iret
fcomp
push
sbb
fstps
jnp
call
pop
xor
loop
or
pop
nop
mov
lret
xchg
push
dec
jae
scas
adc
outsl
insb
pop
push
push
lds
push
sbb
gs
fcmovu
bound
jle
sbbl
push
mov
hlt
in
add
rorl
jle
xchg
call
aas
ljmp
sbbb
enter
mov
iret
inc
jp
loopne
outsl
sub
popf
dec
mull
mov
sbb
xchg
mov
inc
adc
xchg
imul
jecxz
jo
mov
xor
jns
mov
popf
jg
xchg
jmp
pop
lods
test
call
push
js
loope
imul
dec
dec
mov
cltd
bound
jge
dec
sbb
cmpsb
cmp
xor
xchg
mov
sbbl
ficoml
xchg
push
imul
mov
cmpsb
aas
test
fiaddl
inc
and
in
xor
mov
lret
lret
sub
stos
std
shrb
bswap
lahf
sbb
jne
pop
aam
pop
pushf
mov
or
adc
icebp
imul
sar
gs
fisubrs
int3
push
inc
add
xchg
xor
loope
adc
stc
int3
xor
xor
cmc
sbb
mov
cmpsl
ret
stos
sti
adc
pop
sbb
rolb
fists
test
jbe
sbb
xor
sub
sbb
xor
pop
pop
inc
movsb
jmp
sub
call
jo
into
jecxz
iret
jne
ret
xchg
pop
xor
int3
mov
roll
js
xchg
out
loopne
inc
icebp
mov
insb
jo
sub
cltd
popa
jae
cmpsl
xor
sbb
ja
repz
sub
ljmp
inc
push
add
or
hlt
mov
call
lret
mov
or
push
xchg
rcr
push
adc
or
popf
loop
leave
out
shll
mov
lock
ss
jb
xchg
cmp
arpl
adc
push
push
or
adc
aaa
xchg
leave
cmpsb
call
push
in
mov
sbb
push
arpl
xor
aaa
into
std
sub
clc
cmpsb
loope
and
movsl
movsl
add
mov
clc
ret
sub
neg
sub
out
mov
test
pop
pop
mov
repz
sarb
enter
movsl
push
add
daa
sbb
jno
sbb
mov
mov
fwait
decl
imul
jle
jmp
add
jnp
dec
xchg
imul
mov
loope
aad
or
test
iret
lahf
cwtl
inc
jp
test
mov
add
shrl
pop
cli
insl
sub
sbb
int
sahf
cmp
jecxz
fldl
and
shll
xor
push
fs
es
xor
int
mov
or
leave
fs
out
lock
icebp
frstor
push
les
dec
out
mov
imul
adc
test
or
inc
out
jne
dec
leave
imul
pop
or
sahf
xor
sti
in
adc
in
jmp
outsb
cmp
shlb
xchg
sbb
and
pop
push
cltd
xchg
ss
ljmp
ret
push
mov
jb
js
or
jne
jnp
and
sub
outsb
xchg
roll
shr
and
pusha
loop
sub
lods
and
jbe
sbb
lcall
push
pop
xchg
sbb
sub
loope
or
and
cltd
subb
in
lds
pop
fdivrl
push
inc
icebp
das
sub
and
push
sbb
xor
and
adc
mov
or
sti
nop
std
movsl
pop
jmp
idiv
aam
idivb
xchg
add
xor
add
cmpsl
inc
pusha
test
pop
data16
push
xchg
and
shrb
shr
mov
movsl
ds
mov
fldln2
mov
dec
lahf
pop
lret
xchg
xchg
into
ret
das
pop
cld
sbb
or
test
lahf
xchg
lret
xor
ljmp
adc
or
sbb
adc
push
jecxz
jno
das
insl
mov
sub
cmp
bound
pop
inc
pop
aaa
int3
fstpt
daa
push
mov
cltd
imul
idivb
cmc
call
scas
mov
mov
pop
jno
cli
shlb
cmp
lret
sub
pop
fsubrs
mov
mov
loopne
add
inc
ja
mov
adc
and
iret
mov
or
mov
enter
add
jl
enter
hlt
and
aas
and
arpl
pop
arpl
fisttps
mov
shl
or
stos
iret
clc
jns
mov
lods
cld
jns
mov
aaa
push
lds
cmpsl
xlat
pop
mov
icebp
outsb
xchg
mov
je
cmc
adc
ret
lods
movsl
jno
mov
frstor
dec
xchg
scas
jnp
arpl
jae
loopne
pop
addr16
stos
fnstsw
mov
mov
cmpsl
pop
pshufw
ja
shlb
fmull
xchg
test
js
mov
imul
add
ss
int
and
out
jmp
lret
cld
dec
shlb
or
sbb
dec
and
cmpsl
push
push
stos
inc
lret
popf
jecxz
sub
xor
arpl
ljmp
rorl
lods
mov
call
es
mov
xchg
or
xor
mov
insl
shlb
dec
push
test
loop
add
aaa
ret
mov
sub
jl
bound
sub
inc
mov
jb
inc
xlat
mov
pushf
inc
jne
pop
and
xchg
push
test
pop
jmp
outsl
sub
andl
cld
xchg
push
or
xor
loopne
jecxz
and
in
adcb
jge
xor
mov
mov
pop
imul
push
cs
je
cmc
pop
in
dec
inc
es
sbb
sbb
rclb
push
imul
sbb
testl
dec
in
and
test
sub
cwtl
add
fcomi
mov
loop
test
mov
inc
sub
cmp
dec
test
mov
or
lret
jmp
shl
cmp
sub
in
mov
pusha
sbb
addr16
mov
dec
cmp
xchg
or
inc
sub
xchg
sbb
shlb
push
cmp
mov
adc
lret
popa
stc
mov
jno
sarl
lea
push
aad
jle
jmp
scas
shll
sbb
jp
xor
pop
xchg
repnz
orb
sahf
popf
dec
stos
or
mov
inc
sub
mov
sahf
xchg
sbb
mov
sub
or
fstl
arpl
arpl
pop
dec
inc
lea
cmpsl
sub
xchg
fists
cmpsb
dec
mov
mov
ret
out
es
loope
jle
mov
ret
mov
mov
xchg
es
rcrb
scas
es
mov
ljmp
push
aam
adc
ffree
push
push
fsubl
mov
les
inc
adc
call
cmpsb
inc
out
mov
and
push
movsb
mov
xor
mov
pop
and
and
out
ljmp
jae
lds
bound
sub
test
or
push
arpl
mov
bound
sub
arpl
mov
loope
cmpsb
jno
sahf
adc
cld
mov
jl
shrl
dec
xchg
aad
pop
sub
push
dec
add
lcall
xor
scas
mov
imul
push
dec
sahf
cmpsb
das
sub
movsb
adcb
pop
dec
inc
adc
xchg
sub
insb
lea
jno
shll
inc
xor
pop
dec
test
adc
imul
notb
pop
gs
gs
scas
mov
pop
cwtl
xchg
fsubl
int3
in
sub
push
xor
lcall
sbb
push
xchg
jge
xchg
pop
cmp
push
dec
fistpl
out
std
and
cmp
in
ljmp
loope
push
out
inc
push
shll
lds
sahf
adc
jae
out
rcrl
pop
rorl
outsb
lock
or
push
out
dec
mov
movsl
mov
or
arpl
or
nop
aam
mov
push
inc
push
cmpsb
fsubrs
push
fwait
fs
call
pop
ja
in
ljmp
bound
cmp
push
xchg
movsl
jnp
stc
pop
add
cwtl
aad
cwtl
insl
push
daa
imul
add
mov
stos
inc
dec
pop
outsl
and
das
sbb
cld
mov
aad
jl
repz
cmpsl
adc
ret
ljmp
mov
push
mov
xchg
sbb
pop
jo
xchg
pop
aam
call
test
mov
jge
test
imul
push
push
or
xchg
daa
imul
lahf
fadds
mov
es
cld
subl
shll
fs
lods
into
jb
ja
push
sub
mov
mov
jbe
add
into
pusha
lret
inc
mov
fs
ss
dec
test
jnp
cmpsl
mov
in
clc
aad
dec
test
pop
push
repnz
push
cmc
fsts
adc
inc
loop
xor
in
scas
js
push
in
xor
lods
fmuls
push
cli
xor
push
xchg
inc
sahf
xorl
mov
push
imul
hlt
je
test
in
mov
jno
sti
loop
dec
mov
sbb
push
lret
push
stc
or
mov
mov
pop
icebp
outsb
adc
or
arpl
xor
xchg
add
adc
lret
repz
sub
mov
inc
inc
mov
loope
add
js
dec
jne
add
rcl
insb
into
in
mov
push
jl
jle
mov
ss
in
jb
and
shlb
pop
dec
dec
mov
cmpl
lea
push
int
ss
es
jle
ja
xor
mov
fwait
das
jnp
nop
xor
daa
cwtl
je
std
imul
out
mov
in
dec
ds
fdivp
push
lret
cmp
mov
lods
leave
testb
test
adc
mov
loopne
xlat
sbb
pop
ret
nop
adc
push
test
pop
shl
je
cwtl
roll
add
fmuls
jge
mov
xchg
pop
jmp
test
push
mov
pop
idivb
repz
and
dec
fmul
enter
mov
cmp
cltd
push
mov
push
addl
sbb
dec
add
rcrb
movsl
ret
iret
insl
push
push
or
ljmp
test
add
call
push
imul
sub
xor
cwtl
fs
jnp
and
xorb
imul
adc
pushf
add
sarl
movsl
sbb
cmp
fldenv
sti
lret
push
jns
add
rorl
cmp
mov
into
roll
xchg
fbstp
pop
jo
clc
or
in
inc
aam
sbb
mov
adc
loop
xlat
mov
outsb
jle
mov
in
cmp
das
adc
call
lcall
push
xchg
push
int
dec
mov
sahf
shrl
scas
mov
stos
imul
fnstenv
jge
jmp
ljmp
xchg
popf
cmp
cmp
sbb
mov
scas
sub
fldt
pusha
mov
mov
outsb
das
div
add
je
xchg
and
and
sbb
je
sahf
xlat
rclb
jmp
sub
scas
int
out
cs
stos
out
dec
mov
or
xchg
add
mov
cltd
push
sbb
pop
adc
or
cmc
push
cltd
adc
cmp
cmp
mov
push
fists
fbld
flds
xor
sub
shlb
mov
xchg
clc
stos
xor
imul
push
jno
xchg
inc
pop
xor
enter
cld
adc
ds
push
jmp
ficoml
je
mov
sbb
mov
test
mov
negb
shl
in
xchg
test
enter
pop
mov
or
adc
test
adc
fisttpl
sub
cmp
lret
and
and
aad
xchg
mov
mov
xor
shrl
inc
jge
push
inc
stc
lock
out
adc
adc
xor
jmp
cmc
push
push
movsl
pop
and
pop
fidivl
mov
fmul
pop
mov
jmp
adc
outsb
hlt
add
pushf
mov
imul
mov
pusha
icebp
and
in
aaa
adc
repz
dec
xor
sbb
ds
push
imull
mov
movsb
add
test
add
inc
aam
out
xchg
pop
xchg
xchg
jp
mov
xchg
adc
icebp
pop
cmpsl
and
in
repz
and
fldcw
and
push
dec
xchg
testl
pop
test
sub
adc
into
pop
and
push
out
out
sub
lcall
cmp
push
jnp
mov
dec
stos
mov
insb
testb
mov
push
cmpsb
ficoml
and
mov
jae
push
lahf
push
insl
js
repnz
dec
popf
sub
fsub
ja
dec
std
scas
loop
mov
cli
xchg
arpl
in
dec
shll
cmp
incl
mov
mov
mov
testb
dec
pop
xor
mov
sahf
cmp
in
jmp
cmp
sub
shll
pop
sub
cmp
pusha
and
sub
pop
lret
fwait
stos
mov
mov
mov
add
insb
cld
push
jae
inc
stos
or
inc
sbb
adc
rol
sbb
imul
add
adc
dec
imul
cmc
imulb
out
pop
sbb
nop
insl
loopne
aad
or
movsl
sub
clc
rol
imul
xor
jb
pop
xorl
leave
mov
cli
psrad
xchg
add
jbe
and
aam
push
jo
fistpll
xchg
push
push
scas
jmp
ret
mov
and
lds
mov
inc
mov
adc
push
pushf
shll
cmpsb
jp
pop
jbe
adcb
fsubs
scas
cmp
stc
cmp
xorl
push
mov
mov
fstpl
cld
mov
test
movsb
or
add
movb
out
fstpt
sar
rcl
jg
stos
jbe
shr
call
or
push
popa
adc
or
test
cs
dec
negb
mov
rolb
repnz
arpl
enter
xchg
xor
ror
lcall
adc
stos
cmpsb
loopne
jbe
fldenv
sbb
push
test
sub
std
mov
les
data16
sub
add
mov
add
mov
inc
xchg
pop
hlt
test
nop
out
jmp
stos
mov
rclb
jmp
mov
and
xor
call
and
test
ljmp
dec
adcl
xchg
pusha
xchg
xor
push
push
lret
cli
pop
int
add
sbb
pop
mov
lret
sahf
push
shlb
dec
out
cmp
add
cmpl
shrl
mov
int3
pop
lcall
inc
shrl
adc
xlat
add
or
mov
jle
add
and
inc
js
pop
std
add
and
sub
sbb
xchg
mov
into
mov
outsl
sbb
repnz
movsb
push
jo
add
sub
xor
add
ljmp
testb
stos
gs
lock
aam
scas
movsb
lret
lcall
xor
push
pop
insb
enter
xchg
add
ljmp
push
out
ret
subb
stc
rolb
int3
lods
jp
loop
jns
xchg
adc
repz
mov
pop
outsl
scas
js
sbb
repnz
fwait
or
mov
cltd
pop
std
add
ds
add
inc
mov
shll
insl
mov
das
aaa
or
neg
je
jecxz
adc
push
sbb
rolb
out
testl
push
addr16
add
xlat
loopne
sub
mov
add
movsb
dec
jl
repnz
js
pop
lds
gs
xchg
sbbl
adc
dec
mov
clc
jg
lods
and
aas
xchg
adc
stos
mov
stos
sbb
mov
xchg
cmp
outsb
icebp
dec
and
or
and
mov
sbb
flds
adc
lods
sbb
popa
inc
fdivrp
jmp
jle
sbb
lret
mov
das
jo
pop
or
or
pop
mov
pop
mov
cmc
das
jb
xchg
addr16
out
mul
and
mov
repz
jno
test
lea
sbb
push
xchg
xor
sbb
cmc
mov
mov
and
inc
enter
jmp
inc
inc
push
xor
push
imul
enter
mov
cmpsl
sub
dec
lea
out
insb
lods
fwait
lods
pop
lahf
push
scas
pop
mov
nop
add
cmc
rcrb
leave
cli
inc
push
jmp
repz
int
jne
adc
clc
xor
mov
xchg
aaa
push
gs
sbb
jmp
cmp
push
push
and
ret
xchg
add
pushf
or
xor
andb
add
sbb
addr16
arpl
mov
call
sub
in
or
stc
push
inc
jno
aas
sbb
mov
sub
imul
sbb
sbb
subl
pop
test
add
jae
mov
test
imul
imul
sub
mov
repnz
and
dec
adc
movsb
push
push
iret
call
jae
dec
and
add
mov
or
scas
rolb
dec
das
mov
repnz
push
imul
push
shll
out
or
xor
or
std
daa
mov
sub
dec
cmp
push
xor
xor
cwtl
push
mov
test
push
push
jp
cli
push
inc
test
int
bound
xchg
mov
or
bound
je
aaa
adc
jmp
cwtl
inc
mov
mov
imul
or
mov
push
mov
mov
mov
fsts
lea
shrl
jno
mov
mov
das
call
mov
cmpsl
sbb
and
mov
int3
loopne
mov
test
and
jecxz
inc
sbb
and
loop
push
shr
lcall
imul
mov
xchg
ljmp
adc
mov
xchg
insb
mov
mov
lret
dec
idivb
xor
mov
adc
out
lods
arpl
cmp
lcall
mov
inc
iret
sti
add
pushf
dec
inc
shlb
mov
pop
adc
mov
push
jl
ds
das
mov
lahf
jp
inc
fucomip
xchg
fisubrs
mov
stos
xchg
insl
outsl
pop
cld
daa
or
push
sti
push
or
pop
pushf
push
outsb
lods
aas
cwtl
test
int
push
popf
pop
mov
cmp
lahf
sub
jo
pop
out
in
xchg
xchg
sti
mov
adc
mov
adc
push
mov
mov
sbb
ret
test
fnstcw
aaa
mov
cmp
in
int
jp
outsl
or
sub
fstl
mov
lcall
push
sti
notl
lods
push
sub
push
cli
mov
mov
mov
pop
sbb
mov
jnp
sbb
loope
adc
dec
and
lret
dec
sbb
ss
lods
sbb
cmp
pop
dec
hlt
in
ja
push
sti
cmp
stos
ljmp
sub
cs
movsl
xchg
cmpl
add
dec
mov
sub
mov
pop
jno
push
pop
sbb
push
mov
test
repnz
or
sub
imul
and
push
adc
add
xor
cmp
out
mov
loop
cs
js
outsl
jmp
jbe
fcmovne
mov
adc
push
loop
add
shlb
pop
fcmovnbe
idiv
mov
dec
rcll
aas
mov
ljmp
xchg
adc
bound
enter
sub
into
mov
lock
pop
sub
inc
mov
in
jecxz
xchg
mov
xor
pushf
std
cld
mov
inc
out
xchg
es
iret
lcall
and
rcl
or
cmp
aaa
sbb
in
leave
daa
iret
jg
mov
sbb
imul
int
xchg
daa
add
dec
ds
ret
ret
pop
movsl
sub
cli
arpl
mov
mov
cmpsb
shlb
mov
mov
jge
dec
push
fwait
add
fisubs
mov
dec
adc
pop
xor
mov
stc
in
rorl
sub
inc
adc
jge
adc
jno
mov
jnp
pushf
rcrl
xchg
jb
in
pop
and
fwait
and
inc
cmc
xchg
fildl
je
adc
adc
shr
push
repz
in
sti
cs
jge
sbb
lret
addr16
or
sarb
mov
dec
std
lock
shrb
dec
push
xor
stos
popa
push
mov
in
iret
gs
pop
dec
stos
aaa
dec
movsb
add
xchg
push
push
scas
stc
in
pop
je
inc
or
mov
pop
divb
loop
lahf
fcomps
mov
nop
bnd
fcoms
cmpsl
mov
test
in
scas
xor
push
in
adcb
add
movsb
adc
std
pop
test
out
lcall
icebp
pop
jae
sub
push
xchg
cmp
enter
into
inc
xchg
test
xor
sti
jmp
cmp
jp
mov
scas
dec
aam
xor
std
scas
add
lds
shll
inc
xor
std
jnp
inc
adc
pop
dec
cmp
insl
popa
test
mov
xlat
inc
lret
flds
jp
ds
pushf
mov
adc
sbb
pop
inc
sub
mov
inc
mov
mov
ljmp
clc
popa
hlt
leave
xchg
xor
push
lock
repnz
or
or
pop
jne
add
pcmpeqb
out
xor
push
js
jle
pop
pusha
into
into
sbb
clc
add
pushf
ret
mov
xor
push
sub
neg
rep
arpl
jb
jmp
fsubrl
ficoml
sti
add
mov
mov
sub
dec
lcall
push
ret
pop
xchg
orb
mov
and
cli
test
out
arpl
sub
pop
stos
inc
pop
push
lcall
leave
lea
cwtl
hlt
dec
cltd
mov
push
lds
push
test
pop
data16
out
mov
stos
ja
iret
cld
sbb
mov
jecxz
int3
imul
cmc
int3
xor
mulb
pop
jge
nop
outsl
and
aas
add
push
in
daa
insb
pop
movb
xchg
dec
cmp
stos
and
xchg
xchg
sbb
xor
mov
ror
add
xor
fs
dec
cmc
sbb
fisubs
cmpb
insl
mov
jne
add
sbb
adc
cld
scas
jg
call
iret
jo
repnz
cltd
xor
mov
rclb
pop
in
push
mov
aad
arpl
adc
pop
repz
sub
push
in
test
adcb
mov
dec
cmpsl
outsb
mov
shl
xor
add
jae
push
aas
sbb
aaa
cmc
sbb
mov
jmp
cmpsl
cmp
vprotd
cmp
hlt
adc
iret
sub
dec
mov
dec
jge
lret
subb
scas
mov
mov
pop
xor
in
xchg
test
std
lret
clc
jno
in
insb
ss
sub
xchg
xchg
ja
xor
je
xor
push
lds
in
imul
mov
gs
lock
jmp
ja
jbe
pop
or
nop
js
or
addl
and
ffree
jl
sbb
fwait
push
negl
loop
sub
mov
sbb
dec
xchg
dec
daa
jbe
inc
and
nop
movsb
insb
mov
mov
fcompl
inc
or
mov
xor
imul
addr16
repz
ss
loopne
dec
out
cld
stos
adc
sbb
pusha
repz
ficompl
leave
push
bound
pop
push
imul
aas
cwtl
mov
sub
addr16
jle
test
enter
push
aad
mov
mov
mov
xlat
pop
faddl
mov
mov
dec
pop
pushf
mov
mov
xchg
popf
xchg
jp
inc
loopne
faddl
push
mulb
mov
testb
int
mov
mov
push
jle
cmp
xchg
aam
icebp
je
sub
sahf
std
stos
sbb
mov
lret
mov
jae
xor
mov
test
adc
pop
fcmovbe
ds
push
jl
cmc
ds
int3
xlat
jmp
push
dec
mov
sbb
hlt
lret
fnstenv
xor
sub
mov
fwait
stos
push
pop
add
adc
mov
xchg
popf
xchg
jae
or
add
std
add
xchg
dec
pop
xchg
inc
movsb
mov
loope
or
cmpsl
icebp
mov
imul
xlat
mov
scas
add
jle
cltd
pop
in
mov
bound
ret
outsl
mov
out
adc
jnp
xchg
sahf
es
inc
mov
out
repnz
xchg
sub
dec
sbb
mov
xlat
shlb
push
jg
jbe
mov
js
push
mov
mov
aas
loope
xchg
sbb
cmpsl
pushl
js
adc
inc
les
sub
pop
add
out
fnstsw
dec
cld
inc
je
scas
cld
push
adc
ja
lret
arpl
adc
sub
mov
addr16
or
xchg
aad
movsb
sub
jno
nop
repz
inc
dec
adc
repz
lret
inc
cmc
inc
das
hlt
les
jmp
inc
loope
fidivrl
cmp
jb
xchg
jecxz
jmp
mov
fsubrl
nop
test
pop
fbld
adc
loop
mov
test
cmp
mov
add
xchg
hlt
add
or
sub
push
iret
add
jae
dec
lret
mov
push
pop
xchg
gs
imul
lods
adc
jno
subl
mov
cs
movnti
fwait
mov
xchg
or
int
fstpt
inc
fwait
mov
daa
shll
and
sub
push
out
lods
repnz
dec
xchg
sbb
xor
sbb
cmpb
lock
mov
xor
xchg
jo
xor
nop
mov
movsb
gs
fucom
xor
push
scas
lret
cmpsl
pop
int3
fisubs
xor
out
push
push
out
enter
pop
jnp
prefetcht1
jp
jnp
clc
inc
lea
loopne
ss
lret
push
sub
pop
cs
jb
add
sub
adc
loope
rclb
mov
xchg
dec
jb
repnz
cmpsl
mov
inc
or
stos
sbb
or
mov
outsb
dec
mov
push
xchg
iret
push
sub
sarl
test
fwait
jl
jge
aam
aaa
imul
ss
mov
push
fcmove
mov
sbbb
stos
xchg
repz
mov
add
test
aam
fsub
sub
dec
mov
sub
xchg
fistps
add
aaa
clc
mov
or
je
rorl
into
ret
mov
stos
iret
das
or
mov
scas
inc
sbb
ret
cs
xor
loopne
fwait
sbb
fcmovnb
cmp
jl
aam
ds
xor
cmp
lahf
out
aam
mov
adc
xlat
jns
lods
xor
xor
push
repz
cmc
in
hlt
adc
lret
and
test
add
or
mov
adc
mov
cltd
ja
ret
inc
or
aad
insl
sub
fcompl
int3
cltd
adc
insb
or
insl
shll
in
clc
push
mov
lods
pop
cmc
ds
mov
pop
sbb
adc
nop
mov
sub
std
inc
iret
push
mov
pop
push
xor
or
cmpsl
sbb
sarl
or
mov
dec
xchg
popf
out
inc
ljmp
pop
cmpsl
and
lcall
push
cmp
fdivs
cmp
cmp
or
in
and
enter
test
ja
mov
subb
cmp
and
dec
hlt
add
dec
xor
btc
cmp
insb
mov
cmpb
xchg
cmp
lock
icebp
lret
pop
xchg
jmp
jl
pop
dec
sub
in
add
xchg
xchg
rcrl
std
adc
cmpsb
into
cmp
mov
mov
inc
sbb
sbb
push
mov
hlt
aad
daa
mov
nop
add
test
pop
mov
jle
dec
shrl
mov
jns
dec
sbb
cwtd
negb
movsl
js
dec
out
cmp
sub
or
cmp
mov
outsb
pop
movsb
adc
stc
push
lcall
pop
gs
and
mov
add
dec
rclb
jmp
jno
push
outsl
test
fcmovu
or
adc
fdivl
loop
and
xchg
inc
fstl
push
adc
xor
dec
test
rclb
fsubl
mov
cltd
popf
cli
mov
sbb
daa
pmaxsw
xchg
add
pushf
jno
fisttpl
ds
fwait
aaa
orb
xchg
cs
adc
aaa
mov
jb
lret
or
pop
scas
push
cwtl
pop
dec
dec
mov
out
push
hlt
and
xor
mov
cmc
frstor
je
out
ret
rorb
push
inc
adc
inc
jge
or
lock
scas
std
and
add
sti
xor
and
fisttpl
push
jmp
jne
bound
sahf
dec
xor
mov
and
add
ret
dec
dec
daa
movsb
lcall
sub
dec
jp
test
out
and
mov
in
push
sbb
sbb
and
out
in
sahf
mov
sbb
push
sbb
xchg
test
std
inc
std
adc
push
pop
stos
xor
ror
xchg
out
push
sbb
cmp
ljmp
repnz
out
mov
aas
pop
stos
or
out
sbb
dec
insb
aaa
pop
mov
das
mov
xchg
outsb
jo
fnstcw
out
lret
jnp
sub
cmp
out
sub
xchg
inc
xchg
movsl
adc
push
xor
rclb
mov
xor
outsl
lods
int3
repnz
repz
les
stc
jo
in
mov
jne
jae
mov
fwait
and
cli
inc
lea
and
dec
inc
aad
imul
enter
dec
scas
test
leave
outsl
lahf
fidivrs
mov
fstpt
sahf
jg
jge
jbe
cmpsb
jae
ljmp
in
pop
subl
cld
inc
pop
inc
mov
dec
imul
mov
lea
outsb
stc
push
push
pop
addr16
pusha
adc
int
sbb
add
lret
ficomps
dec
movsl
mov
mov
mov
into
jns
push
pushf
push
jle
sbb
mov
or
xchg
push
mov
stos
push
xchg
sbbl
adc
call
dec
mov
outsb
mov
imul
add
push
movsl
jg
inc
jae
or
test
icebp
das
in
out
cltd
sub
movsb
jo
push
xorb
test
and
xchg
jmp
fucomip
cmp
inc
lret
fwait
jp
cmp
sub
dec
push
mov
mov
stc
fimull
mov
fdivs
mov
cmp
icebp
xchg
cmp
xor
or
fimull
sbb
andb
in
sub
xor
inc
add
mov
in
cs
mov
mov
dec
popa
mov
push
push
clc
nop
jecxz
iret
adc
mov
mov
add
or
add
dec
pop
xor
stos
fs
jbe
stos
push
je
out
push
fdivp
xor
mov
jmp
mov
cmp
jno
lahf
scas
dec
das
gs
test
push
lret
ret
imul
or
adc
push
fdivs
add
out
loope
adc
dec
jns
dec
xchg
stos
cli
dec
hlt
arpl
cmp
imul
or
xchg
cmc
jno
ja
and
push
pop
ret
aaa
inc
lea
mov
mov
dec
push
lods
inc
cmp
jnp
cmp
aaa
and
arpl
out
cmc
fstpt
stc
imul
mov
dec
or
push
inc
or
fdiv
xchg
add
xchg
ficoms
cltd
scas
mov
push
fldl
stc
je
addr16
sbb
daa
pusha
out
jb
jbe
sbb
jne
aam
scas
and
cmpb
clc
dec
lahf
nop
out
imul
cwtl
aaa
pop
dec
outsl
in
daa
push
mov
cwtl
and
dec
mov
dec
xlat
lahf
pop
fdivrs
and
fsubrp
ret
dec
adc
cwtl
jnp
notb
mov
sbb
das
test
inc
jmp
mov
outsl
xor
sbb
and
aad
fs
pop
repz
sbb
dec
dec
or
sar
sub
cs
mov
jo
lea
sub
ss
cs
lcall
pusha
std
ds
ret
mov
cmpsb
and
je
in
mov
pop
clc
pop
fdivl
rcr
push
ficoml
ret
out
push
and
ret
lods
arpl
sbb
push
mov
rorb
jge
mov
push
andl
out
dec
sbb
movb
int
cmp
fwait
and
popf
loop
outsb
sub
xor
cmp
xchg
dec
dec
xor
outsb
fdivrs
inc
inc
pusha
push
mov
stos
dec
loope
outsl
fucom
fnstenv
arpl
and
cmp
orb
mov
aaa
ret
sbb
sub
and
mov
sbbl
mov
lss
mov
mov
into
lea
pop
cmp
aam
in
insb
push
mov
jb
test
jg
push
lock
aas
fwait
mov
in
roll
jp
repz
call
push
lods
pop
xor
pop
outsl
xchg
imul
fmuls
orl
out
mov
adc
dec
mov
int
sbb
and
outsl
pop
mov
jecxz
mov
and
insb
inc
add
adc
addl
or
sbb
or
mov
sbb
pop
adc
loope
ja
cld
mov
xlat
stc
sbb
cmp
add
jo
or
sbbb
push
out
mov
lods
mov
cmpsl
adc
sbb
ret
and
arpl
in
sbb
mov
pop
cmpsb
jmp
loope
jns
into
aaa
in
mov
pop
inc
inc
mov
inc
test
lods
jno
xchg
stos
arpl
lret
add
jmp
xchg
cmp
bound
popf
rcll
pusha
adc
inc
dec
cmp
filds
insl
and
or
loop
push
push
fsubrs
fistps
jae
cmp
sti
cwtl
hlt
rorb
stos
testl
aam
sub
es
dec
push
in
mov
in
jno
mov
mov
int3
inc
and
xchg
fs
and
stos
dec
mov
push
das
fimuls
adc
arpl
cmp
xor
adc
cmpsb
push
rolb
mov
loopne
cmc
mov
fisubrs
sub
jge
in
stos
inc
mov
mov
adc
in
jecxz
adc
loope
mov
lea
insl
xor
lds
push
push
popa
mov
out
xchg
nop
jecxz
jae
jae
lret
mov
mov
push
xchg
add
or
mov
subl
xchg
cs
into
add
ss
and
mov
icebp
lcall
in
adc
jns
fs
repz
mov
leave
data16
inc
mov
inc
rclb
outsb
and
jmp
lret
jmp
add
sbb
or
dec
inc
xor
gs
incb
ret
or
mov
loope
les
add
in
jb
iret
lcall
ret
mov
and
add
insl
enter
jne
fbld
movsb
lds
adc
mov
mov
dec
add
pcmpgtb
cmp
notb
push
sub
arpl
sub
add
out
push
loop
sub
add
mov
arpl
lret
jp
sub
add
xor
sbb
fisubrs
pop
mov
mov
jecxz
pop
test
mov
pop
fcmovne
lods
divb
test
sub
mov
scas
cmpsb
jge
fidivrl
addr16
pop
daa
xchg
adc
pop
inc
cmpl
pop
int3
int3
inc
or
xlat
add
repz
mov
mov
sbb
sbb
mov
sbb
jecxz
jle
inc
aam
cmp
mov
cwtl
xchg
data16
mov
es
mov
fmuls
jecxz
aad
adc
aas
shl
scas
ds
ret
xlat
ret
inc
je
scas
scas
iret
shll
cmp
cli
pop
pop
jg
lret
enter
xchg
jb
sbb
scas
push
inc
test
cmpsl
scas
out
jb
sub
and
std
inc
fidivl
imul
lcall
dec
mov
jo
sbb
scas
dec
data16
xor
int3
and
hlt
inc
add
sbb
and
add
sbb
xchg
cltd
dec
mov
jo
daa
ds
in
and
pop
rcrb
sub
jbe
fistpll
andb
cmpxchg
ja
dec
dec
or
imul
xchg
push
push
iret
or
mov
test
mov
xchg
xlat
movsl
enter
push
jp
sarb
xor
lds
sbb
das
dec
std
in
inc
adc
inc
std
mov
repnz
pushf
imul
inc
jb,pt
mov
jecxz
xor
stos
add
fimuls
std
int
jmp
lahf
sub
cmc
mov
nop
std
cmp
mov
push
dec
lock
leave
and
popf
out
movsb
fiaddl
test
dec
pop
int3
dec
jmp
fdivrl
aad
jb
fnstenv
cmpsl
fidivs
scas
aam
in
inc
out
jne
mov
insl
shlb
mov
leave
shrl
cmp
ret
lret
fisttps
nop
push
dec
jns
pusha
mov
ficompl
ror
fdivs
xor
xchg
xlat
jne
adc
inc
add
das
mov
pop
or
dec
inc
pop
inc
popf
inc
xor
or
cmpsl
arpl
adc
sarb
dec
add
adc
pop
sti
push
sbb
xlat
std
pop
rorb
notb
and
sbb
jae
js
ja
pop
test
fstp
arpl
xor
test
add
inc
xchg
cwtl
xchg
rclb
ret
hlt
mov
pop
cmp
push
xchg
add
jae
mov
stc
hlt
cmpb
xrelease
or
ret
mov
sbb
mov
mov
jb
sub
jnp
add
cmp
xchg
mov
xor
xchg
sub
nop
xor
dec
cwtl
fstl
test
adc
and
rol
sub
inc
lret
shll
out
mov
add
andb
push
sbb
cmp
testl
push
mov
xchg
mov
daa
push
test
jge
adcb
pop
inc
push
repz
sub
enter
jmp
push
pop
and
sub
sahf
test
push
ret
rcrl
flds
pop
pop
js
out
sub
ss
or
pop
sub
jmp
xor
imull
pop
lcall
inc
fs
xor
das
test
xchg
cmp
insb
pop
jae
fnsave
sbb
pop
sbb
pop
push
pop
mov
gs
aam
adc
add
push
mov
mov
lret
rcll
stc
ret
sahf
mov
imul
in
mov
dec
xor
in
pop
push
inc
ja
sbb
imul
enter
popf
cmpsb
jne
sbb
ja
dec
rcll
xor
dec
jg
adc
sub
test
push
outsl
dec
imulb
imul
out
xor
loopne
pop
lock
jl
or
lods
mov
adc
pop
cltd
jnp
fdivrs
mov
je
popf
repnz
jmp
dec
xorl
adc
pop
xchg
mov
xor
nop
pusha
mov
enter
lahf
dec
daa
mov
aaa
aad
les
rcrl
fmuls
sub
arpl
dec
pusha
sub
fistl
inc
sbb
dec
cmp
loope
push
filds
mov
xchg
mov
mov
fnstenv
js
out
arpl
jbe
xchg
xlat
gs
jl
loopne
dec
mov
jnp
jae
les
add
jge
in
jle
lcall
jecxz
hlt
ret
mov
in
test
out
mov
lods
mov
dec
aam
add
adc
pusha
or
pop
scas
pop
pop
insl
arpl
lock
inc
or
out
xchg
jae
mov
cmp
aaa
jnp
or
xchg
in
mov
dec
push
sub
dec
push
xchg
js
fcoms
push
or
mov
hlt
cmp
xchg
xchg
push
leave
mov
fbld
sbb
or
fnstsw
xor
ret
or
xchg
stos
mov
test
popa
inc
popa
test
icebp
imulb
das
pop
adc
stc
xchg
mov
shll
fs
test
mov
mov
das
xlat
pop
xchg
lods
mull
sbb
inc
arpl
push
xchg
or
hlt
mov
leave
push
negb
mov
pop
sub
sahf
call
dec
jno
jle
cmp
cmc
mov
fwait
sub
push
push
cmp
nop
clc
push
sti
pushf
jge
and
jae
fwait
int
int3
pop
or
cmc
pop
fs
jle
sbb
arpl
dec
pop
pop
loope
fs
xchg
ljmp
push
pmovmskb
imul
faddl
pop
inc
int
lods
sbb
lret
pop
stos
xchg
rcr
lock
pusha
paddsw
iret
adc
cs
test
mov
jmp
cmp
jno
cld
xchg
pop
lock
xchg
movsb
mov
inc
sub
sub
jns
ja
lret
dec
fisubrs
iret
sbb
imul
dec
out
pop
xor
push
dec
mov
push
and
jp
mov
mov
testl
xorl
aad
repnz
pusha
filds
ffreep
aas
sarb
and
adc
add
push
and
mov
shrb
ror
cmp
cmp
lods
dec
jne
into
adc
mov
and
mov
sbb
mov
fldt
gs
mov
mov
lret
xchg
in
dec
sub
bound
scas
ret
pop
jno
adc
xlat
adc
mov
test
sbb
pop
andl
sub
push
and
in
xchg
mov
jmp
gs
xchg
jecxz
pop
ss
and
inc
daa
stos
inc
push
fbstp
push
add
and
pop
leave
xchg
rcrl
push
push
je
and
sar
or
notl
mov
es
adc
add
out
add
hlt
xchg
sahf
or
aaa
mov
jle
jge
xchg
jae
mov
add
pushf
aad
pop
mov
and
call
loopne
inc
roll
mov
jbe
add
loop
push
out
inc
lret
clc
dec
mov
in
int3
xchg
movsl
test
pop
lods
lret
xchg
ja
popf
fldcw
das
push
cmp
inc
insb
inc
das
xor
xor
xchg
push
jecxz
cmp
repz
into
dec
pop
stos
or
scas
mov
daa
mov
xchg
mov
or
pusha
xchg
inc
mov
enter
pop
inc
xchg
jg
loope
insl
adc
mov
lds
push
inc
xor
mov
sub
mov
jns
xchg
push
jmp
sub
or
scas
mov
cmp
daa
jns
inc
rcrb
dec
aam
pop
xchg
jb
push
scas
in
lds
sahf
dec
outsb
repnz
jb
cli
jl
clc
pop
out
lret
push
lret
test
test
repnz
int
lret
sub
adcb
shll
xchg
out
sbb
push
sbb
adc
jae
stos
pop
scas
dec
xor
hlt
sbb
push
sub
dec
fstl
mov
adc
pushf
int
pop
dec
and
push
jmp
mov
pop
push
mov
imul
ret
or
cmp
divl
enter
dec
pop
mov
cmp
add
in
fcomip
in
pop
cmc
cmpsb
andb
fwait
dec
add
sbb
jecxz
dec
rolb
sbb
mov
lods
das
adc
pop
mov
or
lds
pushf
dec
outsl
sbb
pop
sub
cwtl
sbb
ret
jge
add
pop
ficoml
fisttpll
pop
sub
movb
cmc
fldcw
je
inc
negb
jns
idivl
fstpl
or
sbb
cmp
adc
inc
and
movsl
xlat
test
mov
xchg
push
stc
daa
cmp
pushf
add
add
mov
xor
mov
jb
loopne
and
fstl
cmp
push
or
jmp
ficoms
jg
adc
loopne
jecxz
inc
cmp
test
pushf
mov
andl
adc
cmp
add
ret
stos
imul
xor
jle
into
jl
xor
jmp
js
cltd
pop
or
lret
jmp
cmpsb
hlt
inc
mov
sub
jp
pop
inc
lahf
jne
insb
mov
imul
scas
setle
push
and
jbe
arpl
sub
aas
andb
mov
lret
or
push
data16
mov
movsl
cmpsl
mov
dec
mov
lret
fwait
movsb
fincstp
out
out
push
lods
repnz
inc
sbb
rcl
sbb
inc
fcmovnu
mov
js
xchg
dec
bound
scas
test
loop
js
stos
ja
and
and
sub
add
lahf
dec
pop
mov
xchg
movsl
imul
cmp
mov
mov
add
outsb
jns
cld
lods
inc
aam
in
sub
xor
out
dec
xor
shll
pop
inc
cld
aaa
lds
sti
bound
leave
lret
adc
les
push
adc
fdivrl
xor
xchg
mov
mov
fnstsw
stos
out
mov
add
sub
dec
add
int
lcall
jecxz
pop
fwait
xor
dec
in
push
lods
and
pop
mov
sbb
ret
in
push
call
dec
pop
cmp
jle
rclb
push
out
pop
pop
jmp
data16
hlt
mov
data16
sub
push
xor
inc
xlat
sbb
out
inc
aas
sub
push
ja
inc
sbb
push
push
mov
sub
xchg
shlb
mov
and
fbstp
popa
pop
mov
cmp
dec
lods
outsl
mov
xchg
iret
mov
xchg
je
sbb
stc
mov
or
mov
mov
or
push
pop
aaa
aam
dec
andb
cmp
cmp
pop
rcll
cs
adc
add
xor
mov
jne
dec
ficompl
add
mov
add
add
mov
pop
pusha
xchg
inc
scas
jl
adc
xchg
pusha
adc
pop
and
cmpsl
adc
in
idivb
xchg
popf
test
jmp
lds
test
mov
push
sti
jae
pop
push
testl
adc
pushf
sub
add
in
mov
jbe
pushf
cwtl
nop
js
xor
enter
sbb
mov
test
cmp
lea
mov
xchg
dec
cs
push
cmpsl
stos
adc
iret
push
cmp
imul
addr16
test
hlt
mov
xchg
fwait
jg
scas
lret
ficomps
lret
mov
sbb
aas
dec
outsl
push
sbb
mov
sub
icebp
mov
adc
jae
lahf
out
shlb
leave
test
sub
and
pop
adc
xchg
stos
pop
ljmp
adc
inc
adc
cmp
jns
testb
push
adc
mov
pop
rcl
fdivp
fistl
mov
aas
mov
push
push
cmp
push
mov
addr16
icebp
imul
or
mov
mov
cmp
mov
sbb
sti
cs
popa
dec
cwtl
outsl
stos
mov
roll
aad
aam
mov
out
mov
mov
and
cmp
sbb
dec
mov
mov
dec
loopne
or
mov
push
xor
loopne
mov
icebp
aam
movsl
dec
leave
jge
hlt
mov
and
dec
out
andb
pushf
and
hlt
and
pop
sub
data16
sahf
cmp
jae
adc
mov
xchg
das
mov
rcr
sub
jno
shlb
pop
cmp
clc
subb
fwait
out
test
iret
mov
cmpsb
mov
ds
mov
mov
imul
push
clc
pusha
sub
cmp
test
inc
mov
stos
cmp
imul
loope
push
and
push
xchg
xchg
cld
xchg
rcr
insl
pop
flds
jo
sbb
adc
das
fisttps
outsl
mov
es
cld
lds
xchg
mov
aas
in
lds
adc
and
dec
je
nop
stos
sub
dec
dec
jmp
xor
sbb
in
mov
xchg
dec
and
push
std
js
fs
negl
mov
adc
xchg
bound
jg
fisubl
mov
dec
sub
dec
pop
jg
cmp
push
xchg
mov
test
pop
ja
mov
test
sti
aas
sbbl
test
push
out
call
or
adc
test
into
lahf
xor
cwtl
mov
jecxz
pop
mov
dec
shr
ficoms
and
pop
sbb
test
jp
into
fcomps
push
and
popf
or
xchg
lea
push
imul
sbb
sub
cli
jb
xor
jbe
daa
mov
stos
mov
repz
or
inc
js
lcall
neg
cmpsb
mov
cmpsb
add
fisttpl
out
cmpsl
mov
or
and
int3
push
lods
mov
divb
ret
lcall
fs
inc
les
push
hlt
mov
fadd
inc
in
shlb
pop
nop
sbb
sbb
mov
push
bswap
mov
into
mov
and
insl
and
rcl
inc
loop
dec
inc
adc
mov
icebp
jp
test
test
movsl
mov
pop
push
adc
mov
push
xchg
std
add
sub
sti
adc
pop
jle
mov
mov
in
stos
loop
jge
cmpsb
lock
lret
sbb
push
adc
lock
sbb
sbb
mov
add
or
sti
scas
test
pop
data16
adcl
je
lcall
addr16
sti
pop
stos
cmp
sbb
das
add
aas
sub
imulb
add
out
movsb
stos
cld
dec
mov
out
cmp
sub
jmp
push
cmp
js
push
in
in
movsb
ret
insb
jno
inc
xor
xrelease
mov
inc
inc
mov
and
jle
inc
sbb
aas
push
rcrl
pop
ja
adc
xchg
dec
ljmp
mov
sub
sub
cmpsb
inc
xor
add
push
dec
push
sbb
dec
pop
xchg
repz
mov
push
cmp
shlb
jp
add
jle
adc
sbb
and
xchg
mov
in
mov
les
jbe
mov
into
ljmp
fcoms
stos
pop
push
out
pop
test
addr16
fucomi
test
mulb
nop
xor
fsub
fmulp
fisubs
sahf
loopne
imul
insl
jb
jmp
mov
das
std
cmpsb
push
xchg
loopne
daa
dec
jb
push
lahf
sub
and
mov
out
mov
mov
adcl
mov
stos
inc
nop
or
cmp
dec
mov
and
xor
outsl
daa
mov
xchg
cmp
mov
jl
pop
out
imul
fbld
add
push
loope
loope
or
add
imull
cwtl
push
shlb
int3
and
int
adc
dec
stos
and
test
and
leave
pushf
mov
xlat
fisubl
in
ja
cli
mov
dec
pop
ss
sub
fmul
cmp
ret
ja
bswap
xchg
mov
mov
sahf
mov
call
cmpsl
push
dec
negb
cmpsb
jle
mov
xchg
js
test
push
ds
mov
and
sub
ljmp
add
insl
mov
je
sbb
xchg
xchg
and
daa
sub
out
jmp
adc
ljmp
push
das
je
outsb
cwtl
out
adc
pop
inc
stos
shll
adc
and
xor
sub
frstor
sub
das
imul
icebp
es
repnz
cmp
push
lods
cmp
dec
lds
xchg
push
inc
ret
mov
push
mov
lock
inc
sbbl
mov
mov
lea
ljmp
mov
mov
push
mov
add
push
dec
clc
insb
test
outsl
ds
jle
sub
mov
and
sbb
inc
mov
mov
das
mov
xor
lods
int
xor
fcoms
sbb
mov
stc
stos
mov
bound
adc
xor
push
repz
in
and
loope
outsb
out
pop
mov
jns
fdivl
test
adc
jp
pop
cmp
lret
ds
push
xchg
test
mov
je
mov
out
jb
jge
pop
inc
dec
inc
rcr
cmc
mov
pop
cmc
arpl
std
mov
push
dec
mov
outsl
scas
xor
dec
bound
in
aaa
stos
ficoml
add
pop
sti
test
jmp
add
push
rorb
xchg
insb
xchg
das
insl
inc
aas
push
inc
pop
xor
rcrl
iret
mov
lds
lods
stc
cmc
sub
push
add
loopne
imull
sub
movsb
cmc
jo
cld
lret
cmp
adc
inc
ret
out
in
cmpb
lret
push
negl
sbb
ret
mov
mov
cmp
cmpsl
lods
cli
imul
sbbl
negb
loopne
mov
data16
xchg
sbb
xchg
arpl
movsb
or
mov
mov
xchg
outsl
pop
jmp
jne
call
jge
insb
cli
ret
push
xchg
cmpb
adc
in
pop
pop
int3
fildl
sub
push
es
xchg
xchg
xchg
lods
js
inc
insb
xchg
and
mov
in
cmp
das
jns
out
iret
std
mov
orb
mov
pusha
fisubs
jp
fs
pop
cmp
cmp
mov
outsl
push
add
mov
push
cmp
sbb
xor
pop
jnp
cmc
and
fwait
arpl
push
daa
repz
mov
mov
mov
pusha
add
mov
mov
xor
cmp
in
mov
int3
ret
and
in
xchg
mov
andb
dec
inc
arpl
jb
cs
inc
mov
adc
or
dec
ret
jl
push
mov
aam
mov
cmp
into
test
mov
adc
jge
and
pusha
jg
push
outsb
int
test
add
sub
lods
dec
incb
pop
std
ret
xchg
out
bound
cmpb
mov
lods
in
test
sbb
std
push
mov
push
enter
push
fldenv
cmp
aad
add
cld
and
xchg
flds
dec
pop
pop
rolb
dec
jns
or
in
pop
push
jmp
xor
push
jle
xor
dec
mov
aam
dec
test
ds
popf
mov
and
dec
sub
sar
mov
in
adc
sub
shlb
jge
push
mov
and
and
add
lea
ret
sub
lahf
or
add
insl
popf
sbb
jnp
sub
mov
test
xchg
ss
add
orl
movsb
sub
push
enter
lahf
mov
adc
imul
pop
jle
and
xor
jb
mov
mov
insl
inc
xchg
arpl
jl
and
cli
and
cmp
adc
aas
cld
outsb
test
xchg
mov
xlat
call
xchg
sbb
int
add
rclb
dec
xchg
inc
dec
xchg
movsb
sub
jecxz
xor
mov
sub
cmp
clc
jae
push
sbb
sub
mov
mov
mov
xchg
je
push
movsb
out
sbb
sub
mov
mov
push
and
cmpsb
inc
mov
mov
xchg
sbb
fdiv
into
jmp
xchg
stc
mov
jmp
pop
int
shl
sbb
repz
pop
sub
add
insl
or
loopne
inc
sub
enter
mov
mov
xchg
ds
inc
mov
les
mov
lods
in
jg
cld
les
inc
lret
adc
aas
push
xor
sbb
dec
jmp
repz
sub
ljmp
inc
dec
loop
mov
mov
stos
cmp
sbb
sub
ja
ss
ljmp
jg
scas
and
enter
mov
lods
imul
movsb
lret
sarl
scas
pop
mov
push
sub
sub
dec
iret
outsb
ljmp
inc
cmc
js
and
lock
jp
inc
jno
add
and
bound
jbe
mov
ja
pxor
xchg
xchg
adc
inc
dec
repnz
ret
mov
dec
int
xchg
rdtsc
mov
imul
push
add
repz
xor
xchg
es
and
shlb
addr16
cmp
outsl
sbb
fs
ds
rol
dec
loopne
inc
jmp
or
xchg
fld
jl
jg
cmpb
or
pop
lock
cmpsb
popf
sub
pushf
sub
enter
xchg
imul
aad
jne
mov
movsl
sub
mov
cmpb
jg
mov
popf
sti
repnz
imul
jp
xchg
sbb
dec
int
mov
movsl
mov
mov
push
mov
enter
dec
xchg
loop
mov
pop
add
inc
aas
das
xor
mov
pop
pop
xor
jmp
inc
rolb
inc
mov
in
jmp
or
sub
push
repnz
xor
int
insb
push
jno
mov
push
sarl
mov
pusha
cmp
mov
les
push
in
xor
arpl
ret
lcall
imul
push
fs
lret
clc
add
scas
imul
fmull
fmuls
mov
sbbl
sbb
adc
xchg
inc
ljmp
jl
xlat
dec
imul
loope
les
mov
adc
sbb
outsl
mov
add
and
std
push
mov
aas
pop
sbb
pop
popa
cmc
sbb
cltd
pop
out
xchg
hlt
fdivrl
stos
ficoms
mov
mov
in
notb
jns
sub
jbe
mov
insl
rolb
insl
imul
mov
sub
rcrb
lcall
push
stos
iret
mov
sti
and
sti
pop
pusha
loop
jne
and
push
je
aas
sub
inc
mov
inc
xchg
inc
loop
cmpsl
push
subl
test
shrl
push
cmp
nop
lret
les
jae
jb
loopne
and
repz
hlt
xor
mov
in
stc
dec
or
imul
push
data16
push
xchg
jp
cmp
cmpl
lods
insb
adc
pusha
jo
outsl
cs
pop
mov
xchg
repnz
pop
adc
int
imul
xchg
jo
outsb
mov
sbb
sahf
iret
cli
arpl
mov
mov
sub
cld
and
cmc
fsubrs
xchg
xor
ret
sbb
inc
sub
sbb
push
in
ljmp
scas
test
add
cmp
ret
xor
mov
pop
sub
cmp
fnsave
ret
cmp
fs
jno
sbb
fisubs
ss
pop
imul
sub
push
mov
fdivl
add
inc
insb
lods
mov
mov
mov
imul
sbb
mov
mov
dec
pusha
fstl
out
andl
mov
fldenv
jne
inc
sub
dec
jne
xchg
aad
hlt
leave
lds
stos
int3
in
cmp
dec
scas
mov
js
and
push
jae
cld
inc
sub
or
xlat
fsub
shlb
xchg
sbb
push
into
mov
mov
jge
cmp
jmp
leave
or
jbe
push
pop
adc
mov
xchg
xor
pavgb
out
test
mov
outsl
sti
xchg
mov
pop
outsl
jl
cmp
imul
ljmp
and
ret
cwtl
mov
sbb
sub
aam
lds
cltd
popa
adc
sbb
shll
and
jbe
sub
clc
int3
int
push
pusha
out
icebp
loop
sahf
insb
dec
imul
inc
in
mov
dec
jl
dec
push
ja
mov
add
dec
stc
in
cmpsl
scas
je
cmc
jecxz
mov
add
and
jne
out
loope
test
cmpsl
sbb
insb
int3
mov
ja
cmpb
jecxz
popl
mov
sub
int
pop
loope
and
adcl
fistpl
adc
mov
cli
movsb
jecxz
and
mov
inc
xchg
cld
xchg
or
mov
pop
jb
subb
out
cmp
cwtl
rolb
les
int3
adc
jg
push
dec
adc
into
mov
cli
cmp
and
push
xchg
cmpb
ja
out
mov
jmp
inc
and
jge
bnd
outsb
int
push
addb
lods
xlat
xor
xchg
sub
mov
xchg
push
or
mov
cmp
cmpsl
mov
sub
lret
cld
cmp
enter
dec
cltd
push
xchg
inc
lods
push
les
adc
mull
add
mov
mov
movsb
pop
jle
movsl
push
inc
sbb
adcl
dec
mov
mov
xor
adc
aam
pop
xchg
hlt
jno
mov
sbb
mov
repz
flds
test
out
lods
sbb
gs
mov
dec
cmp
and
fneni(8087
dec
push
loope
mov
xlat
in
pop
cmc
cmpsb
push
and
mov
inc
push
or
leave
aaa
inc
jo
mov
cmp
mov
clc
in
out
lahf
dec
jmp
inc
pop
jo
pop
pop
mov
test
leave
push
cld
push
xchg
add
mov
insb
test
push
push
pop
sti
inc
mov
xchg
repnz
out
out
mov
adc
or
mov
mov
dec
xchg
xchg
inc
stc
fwait
push
push
mov
dec
push
cmp
stc
iret
xorb
sti
or
and
push
out
setl
fnstenv
xchg
jae
lods
push
cwtl
aas
jne
rorb
test
loop
xchg
ds
push
inc
loopne
aaa
repz
in
imul
lret
arpl
and
sbb
repnz
lahf
mov
insb
es
out
cs
push
in
out
std
xorb
push
int3
orl
xchg
xor
mov
ja
mov
mov
stc
adc
ficoms
add
pop
and
or
dec
jbe
mov
mov
mov
mov
sub
push
fldenv
cmp
xlat
sahf
adc
mov
xchg
movaps
dec
add
andb
movsb
cmp
sub
inc
xor
rorb
mov
es
lcall
dec
adc
xchg
sub
lret
cmpsb
sub
dec
sti
push
push
fisubrl
inc
shl
fwait
js
je
dec
push
imul
inc
test
popa
mov
andb
dec
inc
push
test
jno
or
dec
out
or
mov
aam
ret
test
lock
jle
orl
xchg
sbb
test
jae
sti
sub
nop
imul
sub
xor
inc
jl
xchg
pop
sbb
xchg
xchg
xlat
push
stos
andl
fdivrp
dec
push
sbb
jae
mov
add
inc
pop
lcall
subl
aad
jnp
insb
lods
int3
add
bound
pushf
dec
subl
scas
adc
pop
xchg
fwait
data16
or
fcoms
loopne
mov
hlt
filds
add
ss
cmc
in
mov
push
repz
in
fcompl
bound
jbe
cmp
add
push
test
std
cmc
push
adc
stc
mov
fsubrs
out
into
test
adc
scas
mov
dec
xchg
mov
sub
sub
lea
pop
fidivl
jae
repz
daa
sbb
xchg
push
mov
cmpsb
mov
xchg
in
xor
or
sub
test
cmpsb
lahf
mov
mov
fsubp
mov
jmp
adc
mov
pushf
sub
jbe
nop
and
call
fcmovnb
and
xchg
int
fbstp
pop
sub
push
dec
adc
ret
fucomp
mov
and
inc
inc
xchg
iret
je
adc
dec
cld
pop
sbb
cmp
cmp
mov
adcb
cmp
and
push
sbb
jl
addr16
push
jo
pop
cmp
jle
inc
call
pop
xchg
std
xchg
inc
test
in
cltd
shlb
stc
push
out
and
and
jmp
jae
or
xchg
adc
xchg
daa
stc
aas
jle
cmp
aad
pop
out
loope
test
pop
push
dec
shr
add
loope
or
xchg
mov
pusha
add
int3
outsb
adcl
idivb
pop
inc
or
pop
bound
mov
jno
in
ffree
imul
fadds
lock
cmpsb
idivb
js
call
lock
stos
mov
inc
pushf
adc
mov
mov
das
into
sbb
je
in
cmp
push
call
pop
push
test
push
push
jp
pusha
push
xor
inc
jb
fscale
cs
repnz
xor
mov
and
outsl
fidivrl
pusha
jge
and
imul
aad
or
test
mov
mov
mov
push
mov
cli
dec
aaa
and
mov
inc
repz
add
out
scas
ja
jmp
fimull
dec
push
push
popa
lods
sbb
bnd
hlt
sbb
shlb
clc
xchg
test
popf
movsb
out
adcb
xchg
gs
daa
sbb
jl
pop
lock
das
cmp
xchg
inc
dec
loop
into
pop
adc
imul
inc
loop
std
inc
and
int
push
ss
into
ret
out
sbb
sti
push
pushf
scas
scas
fmull
in
jmp
loop
push
iret
stc
dec
test
pop
imulb
adc
lahf
cwtl
xchg
xchg
pop
insl
sub
mov
add
push
or
in
cmpsl
mov
sub
sbb
out
shr
movsl
lcall
pop
fstps
std
sbb
daa
or
stc
gs
dec
jbe
sub
dec
ret
jbe
inc
push
fwait
testl
cli
pop
jo
add
test
push
add
mov
shl
mov
dec
icebp
mov
pop
xchg
cmpsb
inc
icebp
xlat
and
inc
push
cmpsl
dec
sbb
rorb
daa
into
or
scas
pop
lret
inc
xchg
movsb
jl,pn
fidivrl
xor
aaa
fildl
lods
cmc
ficompl
or
rol
and
test
add
or
pop
jmp
hlt
insl
int
lds
insl
sub
lods
cmp
pop
adc
mov
imul
xor
add
out
fdivl
inc
push
rcrb
insb
mov
mov
cmpb
dec
mov
pop
stos
shll
jg
cmp
push
in
cmp
xor
xchg
push
xchg
mov
adc
loope
fwait
ret
je
pop
cmp
loop
sub
lea
xchg
jnp
push
inc
mov
and
mov
js
inc
cmp
xor
jecxz
aad
mov
in
std
jb
data16
fidivrl
push
insl
std
or
rclb
mov
xchg
lret
jp
mov
add
jb
mov
pop
mov
ficomps
sbb
fistl
dec
xlat
inc
test
aaa
jb
pushf
mov
push
mov
mov
xchg
call
push
add
shrb
add
cld
add
adc
inc
outsl
xor
sub
rol
sbb
flds
scas
aad
scas
sbb
insb
adc
gs
in
sub
int3
mov
add
mov
jl
repnz
rcrb
jecxz
adc
cld
loop
pop
aaa
add
xor
inc
arpl
jle
and
jo,pt
mov
xor
shll
sbb
add
cltd
push
sahf
add
push
leave
cmpsb
push
cmpsb
mov
inc
lds
mov
sbb
adc
pabsb
iret
inc
imul
jp
ja
mov
xorb
adc
dec
push
xchg
cmp
jl
repz
loope
or
scas
sbb
or
cltd
lahf
fldcw
push
sbb
mov
jg
lcall
lret
xchg
push
pop
pop
jl
adc
test
aaa
fidivl
sbb
sbbb
xor
andl
inc
bound
scas
js
popf
inc
mov
pop
sbb
cld
rorb
sub
lea
rolb
sub
sbb
in
bound
aaa
push
test
or
imul
sbb
popa
mov
inc
sub
dec
bound
rcll
adc
adc
mov
xchg
cs
cltd
hlt
pushf
adcl
ret
sti
filds
daa
sbb
lds
outsb
jmp
fisttpl
repnz
sub
push
cmp
sbbl
in
lahf
add
popa
mov
jecxz
mov
das
popa
js
imul
sbb
sbb
mov
and
push
dec
jg
lock
inc
mov
sub
stc
ja
inc
sbb
xchg
movsl
mov
push
mov
pop
call
or
les
cmpsb
mov
lock
imul
xchg
aaa
push
ret
dec
adcl
dec
xchg
mov
stc
stos
and
in
dec
sub
push
mov
sti
mov
pop
ss
xor
fadds
push
xlat
lcall
mov
push
ds
inc
and
pop
push
mov
pop
cltd
or
mov
inc
push
movl
imul
repnz
xchg
lahf
push
rcll
sbb
xchg
cmp
mov
jns
pop
fcmovbe
daa
add
sbbl
fiadds
aad
repnz
imull
push
push
ret
lock
and
lcall
or
sbb
jp
add
mov
push
xor
sub
and
push
cmp
int
ret
xor
insb
adc
xchg
fs
popf
movsl
lret
rcr
ror
push
aam
pusha
or
inc
fcomps
sbb
pushf
xor
js
push
pop
and
out
add
ss
cmpsl
jecxz
shl
sbb
adc
into
add
cmp
dec
inc
xchg
sarb
sahf
add
arpl
pop
jecxz
pop
in
xchg
fnstcw
adc
sbb
bound
call
add
call
out
pop
shl
xchg
sub
mov
mov
movsb
or
cwtl
pop
sub
dec
adc
push
jp
inc
cmpsl
out
push
mov
scas
cli
mov
cwtl
fildll
jne
sti
mov
clc
in
fdiv
insb
mov
push
popa
fsubrl
add
fadds
insl
in
mov
and
mov
jg
clc
dec
jns
push
or
push
xchg
lods
out
xlat
clc
stc
jno
push
sbb
bound
sahf
mov
add
cwtl
lret
decl
fistl
push
xor
imul
and
outsb
push
ds
scas
lods
or
inc
cwtl
ret
cs
inc
jp
sbb
sti
cli
add
cmp
subl
sub
xchg
imul
and
int
test
jle
fsts
stos
and
pop
or
dec
fldenv
cltd
shlb
sub
outsl
add
pop
or
dec
add
test
cli
flds
lcall
xlat
add
loopne
inc
leave
mov
call
les
xchg
leave
insl
jmp
arpl
jp
shll
inc
lock
push
das
mov
or
fists
movsl
inc
pop
std
mov
pop
repnz
pushf
xchg
into
repnz
jns
jo
pop
push
mov
sub
insl
hlt
xorl
jp
xor
xor
pop
stc
js
pop
push
dec
stc
mov
test
incb
cmp
bound
dec
dec
lea
xchg
inc
xor
fildl
lcall
cmp
aad
jmp
add
mov
cld
pop
add
cmpsb
std
call
pusha
lods
xor
cmp
cmp
inc
jecxz
imul
mov
arpl
xor
or
xchg
jnp
in
and
fbstp
sub
or
lods
sbb
popf
pop
xor
or
fsts
bound
clc
cltd
dec
out
ds
popa
lret
clc
xchg
cmp
in
push
and
xorb
adcl
pusha
cmp
xor
mov
sti
orb
dec
ja
fists
cmc
jnp
or
fs
xchg
daa
cs
adc
inc
addr16
xchg
and
test
mov
mov
incb
in
mov
xor
rorb
xor
mov
sbb
mov
pop
sbb
xor
loop
sub
test
jp
adc
jbe
cmp
cmp
jno
xchg
inc
pop
ficompl
pop
out
add
pop
popf
mov
loopne
and
xorb
push
sbb
lcall
push
imul
inc
dec
mov
mov
mov
jno
mov
aad
adc
adc
and
push
lret
int3
jne
icebp
sahf
ljmp
push
je
test
jbe
push
adc
sub
mov
push
fisttpll
inc
jecxz
pop
sbb
inc
je,pt
mov
jle
inc
inc
dec
xchg
mov
dec
xor
and
mov
cmpsb
lea
int
cmp
cwtl
cmp
in
imulb
or
xchg
ret
jno
clc
std
aas
and
fidivl
clc
sub
fsubrl
out
jb
cld
hlt
jle
push
xor
inc
lods
mov
inc
sbb
popa
cwtl
call
es
jp
rcl
clc
aaa
loope
inc
out
mov
pop
push
push
je
mov
jae
stc
addr16
pop
dec
popa
dec
mov
cld
enter
adc
movsb
jnp
mov
out
sub
mov
and
pop
mov
shr
ds
push
push
aaa
cltd
xchg
cmpsl
fcomi
xchg
dec
mov
push
sub
iret
fsub
sub
icebp
xchg
sub
pop
orb
andl
push
fidivrl
or
cmp
xor
ds
push
cwtl
jge
stos
mov
push
and
jae
arpl
pop
inc
std
out
pusha
pop
add
cmp
push
shrb
mov
xor
push
aas
adc
adc
push
hlt
hlt
fs
popf
adc
jne
ss
mov
pop
mov
repnz
mov
push
push
xor
pushf
mov
je
data16
loop
mov
rolb
std
adc
sub
orb
push
sahf
jns
adc
popa
std
imul
cli
das
inc
dec
cmc
cld
repnz
and
mov
xor
rcr
jecxz
xchg
inc
mov
mov
rorb
cmpb
ljmp
imul
aaa
xchg
inc
ja
cltd
push
lods
scas
mov
pop
sbb
add
add
fcomps
lock
lods
push
mov
test
rcrb
jle
sub
pop
xchg
clc
push
xlat
cltd
mov
test
jns
add
jp
or
mov
daa
dec
mov
or
or
or
test
aas
insl
in
sbb
mov
xchg
pop
push
in
dec
inc
or
outsb
dec
sbb
dec
dec
cmpsb
rcl
ret
adc
outsl
insl
rclb
aaa
stos
lcall
loope
mov
movsb
dec
xchg
mov
test
leave
call
jmp
xor
xchg
int
dec
jge
jo
pop
sub
bound
xchg
dec
push
outsb
loopne
jl
movsb
pop
pusha
cmpsb
push
shlb
cmp
in
jecxz
insl
cmpsb
push
jle
loop
dec
sar
mov
ret
int
ficoml
and
fsubs
push
js
or
sbb
jb
add
loop
pop
pop
dec
xchg
lods
stos
adcl
adc
add
out
push
shlb
adc
faddl
daa
jle
data16
jb
or
sbb
lds
xor
pop
jnp
pop
jmp
inc
mov
xcrypt-ecb
cmpsl
dec
jge
mov
mov
mov
js
or
lds
cmp
push
jl
inc
dec
loope,pt
js
inc
xchg
mov
cltd
cmp
push
pop
fistpll
push
jo
cli
xchg
sti
movsl
push
inc
fisttpll
enter
stc
outsl
mov
xchg
ret
cmp
aaa
lods
sbb
repz
and
arpl
pushl
push
iret
scas
xor
int3
mov
fsubs
fs
inc
cmc
nop
inc
push
loop
subb
mov
es
iret
pop
dec
popf
mov
stos
mov
mov
add
jo
xchg
inc
xor
leave
outsb
jno
iret
pop
test
stc
jnp
xor
mov
jecxz
data16
jnp
xchg
mov
jmp
lock
movsb
push
lock
xchg
mov
sbb
adc
aas
shlb
fisubrs
pop
sbb
inc
push
test
or
ficomps
add
movb
pop
sti
mov
movsb
shll
out
jnp
test
jcxz
adcl
jg
scas
fistps
test
out
mov
cmp
xlat
outsl
sub
popf
mov
imul
mov
std
xor
push
dec
add
add
mov
sbb
js
pop
sub
jno
lcall
pop
ss
fs
sub
inc
scas
mov
divb
jo
mov
imul
ds
xor
fcoms
popa
xchg
pop
inc
fnstenv
sbb
jne
mov
inc
aad
pop
loopne
jl
mov
or
pop
sub
call
cs
xchg
jb
dec
adc
cwtl
daa
daa
fsubrp
pop
inc
rorl
xor
mov
mov
divb
xchg
push
jo
mov
es
sub
sbb
xor
pop
sub
mov
push
mov
mov
mov
xor
pop
popa
arpl
add
cmp
pop
jne
test
lea
sbb
xchg
inc
mov
out
loope
sub
aam
pop
sbb
mov
adc
cmpsb
cli
jle
lods
jb
and
neg
popa
popa
mov
fnsave
pop
das
xchg
jp
jle
xchg
cmp
or
mov
aaa
or
out
dec
dec
cmp
popf
sub
in
fstpl
addr16
sub
adcl
mov
data16
inc
pop
pop
xor
pop
test
fwait
rorb
mov
dec
jmp
dec
bound
push
outsb
pop
and
and
sub
mov
jle
fwait
and
lret
cli
lods
inc
add
xor
lret
loop,pt
sar
push
inc
push
push
mov
out
ret
mov
icebp
mov
inc
imul
mov
pop
dec
rcr
add
mov
sub
push
ja
and
sub
mov
sbb
movsb
in
test
pop
and
inc
mov
cld
loopne
mov
adc
jno
inc
insb
push
loope
jmp
push
or
mov
mov
jbe
sbb
test
das
sbbl
push
int3
adc
pop
inc
or
dec
mov
das
inc
mov
rorl
jge
test
fsub
rcll
std
or
cmpb
fsubrl
jbe
lahf
jbe
cmpsl
repnz
fbld
mov
inc
inc
scas
ljmp
movsl
shl
inc
outsl
mov
int3
push
roll
or
cmp
test
cmp
sbb
pop
shr
daa
lret
sbb
scas
inc
dec
daa
std
sub
xchg
outsl
movsl
jns
inc
cmp
xchg
filds
jne
int3
out
stos
bnd
aaa
popf
hlt
pop
lea
mov
dec
lods
push
aaa
loopne
mov
push
test
into
xor
mov
dec
sahf
pop
hlt
pop
aas
xchg
inc
mov
add
push
mov
mov
push
pop
outsl
int3
fcoml
pusha
pop
fadds
nop
lods
xchg
or
nop
insb
mov
sbb
cmpl
pop
cmp
cmp
ja
mov
popf
or
outsl
push
out
daa
mov
mov
push
shrb
or
lds
inc
adc
xor
sub
or
test
imul
xchg
aas
sti
push
xor
scas
pusha
daa
or
adc
or
push
cmp
loopne
test
jl
testl
adc
ja
dec
sbb
cmp
pop
xchg
lcall
inc
inc
bound
aas
inc
push
lcall
push
in
movl
sub
cmp
int3
push
insb
xchg
fisubrl
in
pop
pop
fbstp
jmp
into
sbb
adc
or
data16
mov
mov
je
fcomps
cmpsb
lahf
int
xchg
xchg
enter
mov
inc
rcll
push
push
mov
mov
xchg
flds
add
push
test
enter
mov
add
adc
xlat
jmp
stos
sub
pop
fwait
lahf
inc
into
call
mov
lcall
out
dec
into
xchg
or
or
sahf
mov
adc
lret
push
pop
shrb
aas
es
add
out
push
xchg
jmp
sub
or
out
cwtl
cwtl
sub
jo
mov
add
arpl
add
aas
popf
dec
prefetchwt1
or
std
ss
loopne
imul
adc
ret
out
push
pusha
fdivrl
xor
xchg
xchg
mov
dec
push
adc
sbb
enter
mov
fdiv
shlb
gs
cmp
in
lcall
fldt
mov
push
clc
lahf
and
mov
mov
adc
cmp
fidivrs
sahf
cmc
mov
std
mov
sbb
mov
jl
inc
cmp
cltd
mov
mov
bound
sbb
sub
mov
aad
push
inc
cmp
stc
leave
gs
adc
or
fwait
mov
shll
mov
incb
sbb
xchg
and
cmp
sbb
pop
mov
adc
dec
add
gs
scas
scas
jle
xor
sbb
xor
sti
lahf
enter
movsb
push
cs
sub
inc
mov
mov
push
cmpsl
sub
icebp
cld
and
jnp
stos
cwtl
mov
insl
test
nop
sub
jge
cmp
add
dec
loopne
notl
inc
in
mov
cs
add
imul
jno
sub
inc
inc
gs
pop
insb
daa
int
clc
jmp
jl
add
jecxz
sbb
insl
mov
cmp
rorb
icebp
stos
clc
out
adc
pop
xchg
mov
push
testl
push
cmp
jge
cmp
int3
clts
mov
dec
jg
outsb
xchg
xchg
les
cs
lods
lods
and
icebp
loope
jecxz
outsb
clc
jle
ljmp
ret
loop
cmp
xor
adc
sar
and
ffree
sub
xchg
push
aam
pop
xor
nop
fdiv
call
std
inc
fistps
movsb
or
inc
xor
xor
sub
and
or
in
or
movsl
mov
loop
jne
adc
jo
lcall
std
sbb
pop
xchg
in
sbb
mov
cmp
fs
sbb
subb
inc
fists
pop
xchg
cwtl
dec
jp
adcl
adc
pusha
mov
add
cmp
cmpsl
add
int3
in
mov
imul
pop
dec
insb
dec
pop
pop
jp
push
lret
pop
ret
add
xchg
and
ljmp
push
mov
insl
sahf
loope
xor
hlt
lock
icebp
xor
outsl
fstpt
cli
adc
and
xchg
rcrb
pop
mov
add
mov
lret
cltd
mov
fsts
pop
xchg
sbb
js
dec
in
jb
and
rolb
or
out
and
out
sub
jge
xlat
in
test
daa
test
sbb
scas
inc
push
loope
jnp
push
or
adc
add
pop
fcoml
xchg
outsb
into
inc
or
pop
push
je
or
pop
data16
jp
inc
sbb
mov
or
in
xchg
mov
arpl
xor
xlat
adc
jno
mov
shll
pop
in
mov
inc
pop
repnz
test
repnz
fwait
in
or
push
jb
jne,pn
pop
push
push
or
fs
inc
mov
xchg
cld
stc
add
icebp
int
fbld
pop
push
pop
insl
jge
shrl
scas
cmp
add
daa
lods
fs
jl
pop
inc
mov
cmp
mov
out
outsb
xchg
test
out
push
cli
inc
sub
lds
push
movsl
scas
negl
js
pop
dec
icebp
xchg
nop
mov
inc
data16
cmc
gs
hlt
sbb
stos
bnd
xchg
or
ret
inc
ret
mov
test
pop
bound
test
jbe
mov
cwtl
mov
test
fstpl
aam
cmp
mov
lret
dec
mov
out
add
jle
or
xchg
mov
ss
push
outsb
and
into
push
adc
mov
clc
imul
mov
test
push
shr
addr16
and
test
xor
dec
in
sub
cmp
adc
dec
pop
jecxz
mov
push
sahf
popa
iret
lret
movsb
cmp
mov
clc
fstpt
das
mov
pop
out
repz
dec
leave
mov
mov
mov
dec
lahf
int3
fisubrl
mov
sub
mov
and
inc
mov
pop
aad
das
lret
and
fnstenv
xchg
sar
or
and
clc
push
fldenv
rol
stos
sub
aad
rcrb
push
dec
fs
ret
jmp
fistl
dec
cmp
push
cmp
or
adc
sbb
dec
push
mov
dec
mov
rep
adc
stos
or
nop
popa
repnz
test
xor
jg
loope
sub
clc
dec
add
dec
mov
es
in
addr16
jno
repnz
or
out
test
lea
testl
pop
daa
sub
popf
mov
gs
dec
and
hlt
sub
or
call
ss
push
js
cmp
mov
push
les
jne
jg
sub
sub
xchg
xor
sub
mov
pushf
mov
cs
push
loop
decl
push
jae
jmp
mov
ret
lds
sbb
imul
or
mov
mov
es
aam
push
xchg
aam
aas
andl
fs
loopne
lock
mov
cmp
sub
or
sbb
ret
lcall
aam
loope
call
movsl
mov
repz
xchg
lods
ficomps
or
jge
cltd
mov
jne
xor
push
push
mov
popa
adc
dec
adc
lahf
shr
movsl
stos
decl
aaa
loope
jmp
in
daa
outsl
out
cmp
adc
pop
sub
xor
and
ret
cmc
add
call
xchg
inc
adc
in
dec
pop
out
push
fstpt
adc
mov
add
mov
cmc
stc
inc
daa
jae
dec
scas
lcall
ret
lret
jbe
dec
mov
add
dec
test
pmaxub
out
xlat
mov
int
or
adc
mov
rcr
or
jmp
dec
pop
pop
fidivrl
or
sub
mov
sbb
xor
xchg
in
adc
add
lods
rcrl
jmp
jo
stos
mov
rcrb
mov
packsswb
mov
pop
xchg
mov
sub
xchg
icebp
imul
inc
clc
rolb
or
cmp
pop
push
testl
cltd
outsl
imul
mov
cmp
sti
nop
push
add
rolb
jecxz
inc
sub
mov
sub
push
in
xor
imul
movl
mov
les
in
insl
sub
shlb
aas
push
jg
cmp
dec
xorl
loop
std
das
iret
jl
jge
sbb
sbb
in
aad
inc
fdivrp
adc
or
les
faddl
cmp
out
repnz
sub
cmp
or
adc
pop
sbb
out
sti
icebp
je
sahf
sub
fdivl
cmp
shl
xlat
push
add
cmpb
popaw
cmp
jb
out
xchg
cmpsb
push
lcall
mov
or
inc
arpl
int3
mov
mov
shl
lds
xor
cmp
or
fstpt
mov
inc
movsl
test
test
lods
shll
sub
cs
nop
test
jb
sub
nop
clc
jle
xor
adc
cwtl
xchg
fs
push
fmuls
push
aaa
test
cmpsb
loop
movsb
outsl
cmp
lahf
inc
in
aam
cmp
inc
je
aad
mov
jno,pt
in
ret
cld
push
rorl
dec
jle
adcb
push
or
push
sahf
and
pop
test
cmp
cmp
fstpl
mov
xchg
add
jb
push
sbb
sti
imul
push
popf
bound
jp
add
enter
cmp
popa
mov
sti
push
dec
fcmovu
sbbb
sub
dec
pop
in
xlat
inc
insl
pop
push
xchg
stos
push
pusha
jmp
inc
pop
mov
add
dec
cwtl
cmp
pop
adc
incb
pop
sbb
out
push
adc
mov
movb
mov
lods
pop
clc
lea
sbb
int
cs
mov
cmp
lahf
lea
pop
lock
sti
rol
insb
and
inc
lods
ds
cmpb
in
or
push
pop
or
fldl
or
pusha
sbb
mov
je
aas
mov
movsb
sub
adcb
xor
sbb
lret
aad
sbb
dec
xor
add
pop
rcl
inc
aam
add
mov
shrb
jbe
or
jbe
in
in
iret
xchg
mov
stos
ds
adc
out
shrb
repz
mov
or
mov
xor
push
pop
or
xor
and
push
xor
cmp
mov
fwait
push
adcl
jne
movsl
cmpsb
out
imul
xor
inc
xchg
jle
shrl
push
aas
push
push
enter
sbb
lahf
sbb
and
lods
aad
aam
pop
xchg
rclb
mov
sub
mov
movsl
add
and
lret
add
data16
adc
and
dec
je
pop
loopne
push
fnstenv
sahf
sbb
dec
pop
jp
in
hlt
push
outsl
sar
sub
dec
subb
cltd
dec
sbb
cs
fldl
repnz
pusha
sub
cmpsl
lock
orb
push
xor
mov
inc
fldenv
mov
scas
lret
test
and
inc
cmpsl
lods
adc
inc
sub
and
cmp
dec
inc
or
loop
enter
lcall
das
pop
xor
sub
xchg
push
sub
adc
pop
fistps
cmpsb
aad
fwait
dec
shlb
aam
enter
mov
add
rol
dec
cmp
negl
inc
insl
addr16
scas
cltd
arpl
xchg
dec
pop
jmp
xchg
insb
inc
popf
lcall
in
test
rcrb
push
mov
push
pop
dec
sbb
aaa
push
iret
cmp
inc
fnstenv
jl
sbb
popf
xchg
add
lret
push
pushf
jae
mov
ret
or
lods
mov
dec
lds
test
out
inc
mov
xor
push
callw
repnz
test
sbb
or
or
lret
xor
or
pop
push
and
insb
sahf
dec
rorl
mov
cmc
fsts
and
loopne
push
js
test
shlb
jle
xsaveopt
test
push
mov
movsb
push
iret
std
jp
test
call
mov
movsl
or
sub
inc
dec
aam
or
jbe
xchg
daa
fwait
lock
jb
in
aaa
in
lds
add
ret
push
jle
insb
xchg
jle
aaa
sub
and
out
inc
push
dec
les
dec
xchg
arpl
ja
cmp
in
cmp
add
loop
scas
test
test
jo
das
cmc
roll
aam
jmp
and
daa
mov
cmp
dec
outsl
movb
mov
mov
adc
and
pop
add
arpl
add
xchg
test
jp
stc
rclb
icebp
movsb
lds
sbb
push
imul
shrb
sbb
nop
mov
jmp
or
and
inc
jge
or
enter
sub
and
mov
lcall
mov
orl
add
rorl
jmp
shl
cwtl
mov
test
xchg
stos
xchg
sbb
fs
addb
out
pop
jns
push
fistps
mov
push
dec
aad
jo
or
xor
test
mov
add
aam
rorb
inc
inc
sub
ja
stc
icebp
jno
mov
push
sub
mov
or
dec
inc
orb
daa
ds
in
sub
hlt
add
sbb
xor
adc
jl
adc
mov
dec
jmp
jb
push
push
das
push
xor
inc
outsb
in
shll
mov
mov
loopne
lds
xchg
mov
inc
pop
cwtl
pop
pop
es
push
shrl
aaa
ret
cmp
cmpsb
mov
std
cmp
adc
cmpsl
mov
sti
pop
mov
cmp
mov
jnp
pop
insb
setle
jne
sbb
push
sarl
daa
hlt
lock
push
stos
scas
push
dec
push
push
mov
negb
cltd
repz
fidivs
pop
aas
dec
add
insb
imul
int
mov
fadd
mov
pop
push
lods
dec
fimull
push
lret
rcll
dec
mov
and
clc
dec
out
in
int
popa
xchg
pop
insl
ja
mov
xchg
mov
xchg
movsb
jmp
jae
push
cmp
mov
scas
and
add
xor
jno
in
leave
ja
dec
bound
bound
or
pop
lea
and
xlat
mov
push
and
cmp
or
inc
testl
jae
into
xor
mov
fldt
mov
movzbl
test
faddl
mov
adc
cmp
cmp
mov
scas
cli
cmp
add
xor
aaa
jp
shrl
lret
lret
xchg
sbb
das
add
popf
push
mov
adc
mov
fdivrs
test
movsb
jl
pop
stos
xchg
push
lahf
fcompl
mov
sbb
lock
mov
mov
in
pop
jo
jmp
cpuid
repnz
jno
sbb
testb
xorl
out
test
push
sbb
mov
std
aaa
sarl
and
popa
xor
out
xlat
in
addr16
call
popf
addb
hlt
je
addr16
or
pop
ds
ds
mov
cwtl
lea
mov
ret
jp
xchg
adc
sub
cmp
or
js
aad
andl
dec
jbe
mov
xchg
nop
cmpsl
adc
adc
mov
cmp
mul
or
scas
sbb
push
add
dec
inc
outsl
aaa
arpl
jne
or
sub
push
mov
movsb
xchg
cmpsb
xor
jne
bound
mov
mov
pop
jnp
xchg
icebp
mov
das
jns
fstl
ficompl
mov
or
fnsaves
loop
test
push
xor
sahf
lea
adc
test
insb
out
sub
inc
cmc
pop
shr
pop
shll
sbb
sahf
jae
test
inc
dec
lret
xchg
cmpsl
pop
mov
hlt
ret
icebp
jg
rorb
pop
jmp
mov
cli
or
idivl
pop
sub
ss
pop
or
cs
jmp
push
dec
hlt
or
ret
mov
dec
and
mov
inc
inc
inc
cs
outsb
inc
xchg
sbb
fidivrs
out
push
iret
jp
in
and
jle
mov
push
mov
xchg
rcrb
adc
out
mov
cmpsb
mov
pop
xchg
stc
or
inc
out
aam
add
mov
mov
mov
imulb
insl
icebp
mov
jmp
xchg
lahf
sub
adc
sub
push
test
dec
xor
dec
ror
push
cmp
lock
es
int3
pop
and
icebp
test
push
adc
sub
aam
xor
xor
mov
movsb
test
out
and
or
jecxz
in
push
neg
mov
and
shll
loopne
in
sbb
pop
cmpsl
and
push
xor
daa
js
push
inc
neg
fidivrl
jmp
jns
or
dec
or
mov
nop
adc
fldenv
fimull
pop
sbb
bound
outsb
jmp
adc
jb
fwait
std
fldl
inc
in
gs
cli
pop
xor
mov
push
push
push
enter
jl
and
xchg
dec
rorb
fiadds
add
int3
insb
clc
mov
jno
int3
data16
mov
jg
adcl
jno
nop
in
add
pop
ffree
jg
pop
mov
test
push
loop
es
fucomi
fstl
and
adcl
jg
mov
outsl
aad
sub
in
inc
sbb
es
sbbb
addr16
inc
jle
sbb
xchg
and
push
mov
int
pop
clc
cwtl
mov
and
and
jge
ret
jp
icebp
in
imul
inc
orl
push
mov
jg
add
add
pop
ret
add
orl
cmp
pop
sbb
sbb
jbe
cmp
test
cs
clc
push
push
and
pusha
inc
mov
mov
loop
mov
mov
insl
push
push
and
mov
das
cmp
mov
repnz
and
mov
push
add
push
inc
lock
jnp
test
sti
stc
push
inc
push
mov
test
mov
mov
push
andb
aad
cwtl
jns
popa
arpl
mov
mov
negb
and
lret
or
fdivrl
in
xorb
mov
adc
sub
xor
dec
jb
and
pop
cmc
push
push
or
and
mov
push
xchg
dec
addr16
sahf
adc
jb
push
mov
sbb
orb
clc
rolb
sbb
cmp
or
ja
fiaddl
rcr
stos
add
dec
cmpsb
daa
xor
jmp
mov
fcmovne
pop
arpl
jno
push
mov
pop
loopne
xlat
jl
push
pop
shll
data16
push
clc
mov
jae
dec
cwtl
ja
in
cmc
and
or
push
cmp
cmp
sub
rcr
lcall
xchg
jle
cmp
rcrb
inc
cld
inc
pop
mov
sub
mov
popf
add
repnz
and
cmp
inc
cmpsl
call
sti
stos
es
fbstp
xchg
rcrl
fiadds
repz
notl
cmpsl
add
add
call
or
hlt
mov
pop
sub
call
les
sbb
nop
mov
lahf
sub
fnstcw
aad
and
xor
jg
cmp
push
popa
icebp
lret
rcrb
jns
jns
mov
mov
lret
xlat
mov
adc
aad
pusha
mov
dec
mov
call
cmp
lret
sbb
fmulp
push
cmc
dec
cmp
das
xor
cli
sub
data16
mov
push
mov
es
hlt
mov
xchg
dec
dec
out
into
push
pop
mov
xchg
lods
jb
add
ret
mov
fsubl
adc
stc
and
sarl
jns
pop
in
mov
push
icebp
and
xchg
into
xchg
ret
mov
ja
arpl
pushf
add
movsl
mov
mov
filds
insb
sub
sub
push
xor
pusha
mov
cltd
push
rolb
mov
or
daa
jns
or
out
add
mov
mov
jle
sbb
cmp
pop
cld
mov
outsl
stc
mov
add
ficoms
test
cmp
push
cltd
or
fdivrs
shll
nop
xchg
leave
xchg
jecxz
sbb
fimull
lods
cmp
jnp
add
andl
test
test
jb
xchg
outsb
lret
test
inc
cmp
pop
jo
or
fstpt
jge
stos
xor
push
popf
daa
scas
sbb
push
push
xchg
cmpsb
sbb
dec
ret
adc
shll
pop
aas
xor
mov
arpl
mov
inc
add
add
pcmpgtd
test
cmpsl
mov
fcoms
daa
adc
xor
imul
adc
shlb
jae
daa
leave
test
imul
rcrb
push
inc
stos
imul
ret
push
add
into
es
push
lahf
inc
xchg
in
jmp
or
cld
pop
adc
sbb
imulb
pop
mov
negb
push
cs
or
insl
mov
ljmp
hlt
lcall
mov
fadd
mov
and
or
dec
sbb
insb
xlat
out
jbe
jmp
sbbl
jl
repz
xchg
cmp
js
push
iret
in
out
push
in
test
jnp
xorb
adc
mov
cmc
fwait
repnz
adc
jle
sti
loop
test
jl
jp
ljmp
inc
lret
sbb
mov
jnp
lahf
xor
faddl
sbb
out
insb
and
mov
jp
test
sub
lea
push
mov
lods
or
push
dec
sbbl
and
xchg
lock
cmp
ljmp
mov
in
or
pop
sub
jle
dec
push
inc
and
sarb
rcrb
pop
dec
stos
mov
sub
addl
jmp
out
aaa
imul
adc
scas
and
aad
push
fadd
pop
adc
xchg
dec
inc
xchg
test
pop
inc
jge
iret
mov
std
faddl
sub
stc
mov
pusha
addb
outsl
pop
shll
mov
cmpsb
leave
jecxz
adc
fcomps
mov
pushf
int3
in
negl
movsb
lock
movsb
testb
add
sub
ud2
add
lods
pop
sbb
mov
loopne
jns
test
mov
and
pop
mov
jmp
call
jge
sub
cmp
mov
sub
or
std
loope
jno
je
lea
insb
icebp
and
adc
cmpsl
inc
push
or
pop
repnz
gs
in
iret
push
or
or
jb
sti
cwtl
pop
syscall
inc
mov
sbb
adc
inc
jecxz
push
adc
int3
sbb
bound
push
push
xor
mov
jge
adc
and
and
inc
sub
mov
xor
in
std
ret
ss
cmpsl
cmpsb
adc
sub
fcoml
mov
rcl
add
mov
out
call
cwtl
mov
dec
out
xor
mov
pushf
repz
movsl
movsb
insl
jne
sub
in
dec
mov
adc
adc
mov
aas
jle
xorb
adc
in
popf
cmpsl
jbe
mov
sbbb
xlat
inc
and
sti
dec
cld
push
xchg
je
cmp
mov
push
mov
out
jnp
arpl
dec
out
push
mov
loope
xchg
ret
outsl
mov
cmc
aad
call
rolb
daa
or
jo
inc
adc
popa
and
mov
imul
pop
stos
sub
and
xlat
and
jg
and
inc
adcl
push
insl
mov
sub
cmpsl
imul
push
subl
mov
lret
sub
or
mov
jge
in
push
dec
mov
ret
push
mov
mov
js
xchg
pop
imul
inc
sub
pop
add
frstor
in
jno
pop
aad
fwait
lahf
dec
loope
pop
mov
scas
lea
cld
icebp
imulb
stos
pop
leave
imul
inc
jo
sbb
test
jecxz
mov
mov
imul
mov
push
hlt
fnstcw
push
sbb
bound
test
xlat
stos
fnstenv
scas
xorb
cmpsb
imul
jo
adc
flds
adc
mov
xchg
ficoml
mov
add
pop
xchg
sahf
and
addr16
rcrl
mov
xchg
xor
add
xchg
add
loop
add
mov
mov
andb
shlb
xchg
xor
jp
cmpsl
ss
xlat
push
or
dec
mov
add
lcall
dec
popa
je
testl
add
and
add
jae
imul
xor
jb
or
jb
pop
sub
jle
in
adc
clc
lds
cld
fldt
dec
fucom
cmp
mov
inc
outsl
mov
daa
inc
jle
ljmp
inc
mov
cmp
jno
int3
shrl
jo
ja
or
mov
sti
sbb
shr
mov
ret
lret
xchg
cmp
cmp
cmp
jmp
sbb
mov
and
ljmp
adc
stos
dec
pop
lret
dec
popa
mov
push
xchg
push
insb
addr16
and
push
xchg
cmpb
js
cs
push
pop
into
les
pushf
insb
xchg
fbstp
jle
bound
sub
inc
arpl
test
sbb
mov
xchg
mov
aad
popa
jg
cmp
fincstp
mov
add
addr16
shlb
add
fwait
xor
xchg
enter
xchg
mov
add
arpl
cmc
xchg
movsl
daa
jg
rorl
sbb
out
push
mov
xor
rcrl
out
and
fs
cld
popf
stos
sub
jmp
scas
negb
push
ja
pop
stos
ss
outsb
movzbl
push
cwtl
jle
jb
call
arpl
and
push
test
inc
gs
mov
or
push
scas
mov
adc
repnz
cmp
stos
and
dec
mov
aas
xor
pusha
test
sub
or
xchg
mov
mov
push
hlt
push
pop
cmp
je
jb
mov
insb
dec
and
pop
dec
lcall
psraw
in
or
mov
add
lahf
in
test
mov
ss
adc
and
adc
out
jp
push
fistpl
dec
ds
add
test
jo
xor
in
imul
fld
pop
ja
sub
popa
cmp
xor
sbbb
insb
dec
pop
stos
in
outsb
push
fdivrs
add
andb
ret
addr16
inc
dec
add
scas
sbb
in
xchg
mov
outsl
stos
insl
out
sahf
cmpsb
ss
mov
dec
fstps
mov
and
lds
popa
mov
js
dec
cmp
pusha
mov
mov
xor
sbb
loopw
iret
sub
hlt
xor
jno
sub
out
dec
adc
inc
xchg
faddp
xor
outsb
push
push
mull
divb
lret
repz
adc
mov
dec
cmc
imul
clc
mov
mov
mov
out
mov
fldcw
push
in
xchg
iret
iret
test
int
je
js
jg
cltd
rorb
push
stos
nop
xchg
sub
orb
outsl
orb
mov
push
xor
mov
xchg
adc
cmp
xchg
out
mulb
adc
repnz
and
mov
out
jg
and
fistps
mov
jmp
dec
or
mov
sub
loop
repnz
add
xchg
xor
cmp
sub
cld
ds
mull
xchg
jb
int
adc
cmp
xchg
scas
mov
xchg
mov
fadd
shll
add
cmpsb
lcall
into
mov
jmp
clc
dec
neg
movsl
in
enter
js
jno
into
repnz
iret
cltd
cmp
cmpxchg
sbb
mov
sub
int
jns
les
icebp
pop
scas
cmpsl
mov
sbb
pushf
cs
mov
inc
fisttpll
test
je
or
cmc
or
jns
cmp
xorl
jmp
or
ficoml
repnz
in
and
push
std
leave
pop
inc
lret
test
insb
repnz
cmp
ds
ja
or
xchg
inc
fisubl
les
sbb
mov
pushf
in
xor
mov
mov
pop
ljmp
push
lods
das
sahf
fstps
xchg
out
jne
jle
inc
cmp
nop
test
inc
int
incl
dec
imul
dec
into
mov
xor
adc
ja
mov
lods
pop
movsb
outsl
pop
inc
mov
add
jb
mov
jns
xchg
mov
add
cmpsl
add
dec
and
jb
movsb
rorl
push
sti
inc
imul
ss
or
pop
movsl
xorb
or
add
and
idivb
mov
cli
ljmp
gs
lcall
fwait
mov
fcomps
les
sti
and
mov
sahf
pushf
fstpt
jle
fucomp
mov
push
cli
fucomip
repz
imul
xchg
push
nop
sti
ret
cmp
adc
mov
std
mov
mov
imul
notl
pop
enter
mov
movsb
test
jmp
push
lods
cld
mov
lret
sbb
or
push
or
pusha
jb
test
mov
ret
ret
cmp
xchg
push
adc
in
outsb
xchg
adc
cld
addr16
or
icebp
dec
aaa
cwtl
jne
adc
fs
adc
xchg
xchg
push
jp
push
mov
xchg
repnz
ret
ret
fldcw
test
sbb
mov
mov
std
jae
push
adc
out
shrb
pop
or
lret
inc
popf
loope
stc
fldt
iret
fisttps
and
xor
xor
xor
xchg
test
aaa
lret
mov
xor
inc
into
xor
pop
push
xchg
cmp
push
cmp
cmp
jmp
cli
push
loope
js
push
cmp
and
test
mov
outsl
cmp
mov
push
fsubrl
sbb
ljmp
int
sub
popf
mov
outsl
loopne
je
jns
rol
xor
and
add
divb
xor
pop
ja
mov
adc
addr16
es
xor
or
sub
sub
into
jmp
sbb
imul
pop
xor
mov
leave
addl
push
outsl
out
lods
cs
pop
jb
in
pop
mov
sbb
cli
mov
mov
push
add
add
cmp
pop
adc
sbb
or
mov
adcb
dec
mov
cmpsb
push
je
insl
loopne,pt
dec
xor
call
adc
fs
mov
jo
xchg
repnz
xor
adc
xor
push
cmp
into
movsl
dec
cmp
mov
mov
lods
add
cmp
jl
push
hlt
test
jno
cmpsb
movsl
add
bound
in
pop
in
adc
lods
hlt
jecxz
xor
in
dec
add
adc
push
xchg
cmc
test
insl
mov
cltd
mov
int3
stos
push
mov
daa
cmp
repz
stc
adc
add
arpl
int3
dec
cmp
pop
js
repnz
push
or
aas
xor
add
dec
lods
xchg
push
dec
shl
or
xchg
pop
xchg
pop
lret
cld
pop
or
push
insb
outsb
xor
call
xchg
pusha
push
inc
notb
test
jno
sbb
iret
add
mov
stos
sub
lret
cmp
mov
sbb
stos
sbb
enter
out
add
mov
movsl
mov
out
jecxz
inc
jnp
mov
daa
mov
mov
cltd
cli
sbb
enter
inc
mov
movsl
jg
push
in
xor
jmp
adc
out
enter
dec
mov
subl
sbb
sub
jns
lock
push
js
in
sub
pop
loopne
sbb
outsb
pushf
clc
adc
loop
mov
popa
mov
xor
outsb
mov
mov
adc
rcrl
lahf
cs
fstpt
sahf
int3
bsr
adc
negb
sarl
ljmp
pop
test
xchg
mov
jecxz
cld
das
xchg
mov
mov
jge
movsl
cwtl
mov
lahf
scas
sub
mov
cmp
xchg
scas
pop
sti
and
cmc
dec
int3
fwait
cwtl
sbb
movsb
stc
gs
sbb
dec
xor
push
cs
cmp
pop
mov
outsb
sub
xor
scas
aaa
addl
jp
popf
sbb
jmp
hlt
mov
call
adc
mov
outsb
mov
pop
mov
pop
mov
mov
xchg
pop
popf
mov
dec
adc
les
cmpsb
xchg
pop
out
push
les
and
adc
sub
mov
imul
jne
mov
lds
adc
mov
pop
mov
xor
mov
adc
test
inc
add
insl
push
xor
int
adc
mov
lock
or
and
fisttpll
mov
cmpsl
mov
xchg
fmuls
cltd
test
leave
sti
or
push
lea
mov
push
nop
sbb
fsubrl
test
dec
add
dec
cmpsb
jnp
lds
or
inc
sar
mov
add
repnz
or
mov
mov
dec
loop
repz
shr
inc
jb
inc
dec
stc
shr
sub
mov
and
shr
jecxz
sub
shlb
andb
int3
mov
pop
push
bound
cwtl
fwait
rcll
jnp
test
aaa
xchg
fisttpll
cmp
scas
inc
adc
cs
lret
adc
mov
fisttpll
sahf
imul
pop
xlat
shl
mov
int
mov
cmp
testl
push
mov
add
or
jns
mov
addr16
sub
dec
pusha
mov
or
aaa
push
adcb
popa
mov
mov
inc
rcrb
jbe
push
jne
xchg
aam
stc
push
mov
icebp
dec
jbe
jecxz
inc
fsub
arpl
push
add
in
rcll
loop,pt
repz
or
sbb
or
sti
mov
ret
mov
lcall
sub
xchg
add
aaa
adc
dec
comiss
ret
aaa
cmp
jl,pn
adc
mov
cmp
sbb
dec
or
out
jl
pop
add
push
hlt
mov
ret
mov
xchg
ret
sub
addb
jge
mov
test
daa
mov
cld
jne
xchg
popa
jns
mov
adc
mov
fcmovbe
pusha
push
mov
rclb
sbb
push
mov
stos
idivl
cld
imul
dec
pop
dec
jl
test
pop
jl
seta
movsl
pop
lcall
test
out
push
ss
sbb
call
pop
jmp
out
neg
sahf
out
aaa
mov
mov
adc
mov
rcrb
cs
call
xchg
loopne
stc
stc
cli
clc
das
icebp
out
push
or
int
hlt
sub
roll
in
or
xchg
sbb
fadds
loop
xchg
push
and
xchg
fldcw
jmp
or
dec
dec
inc
xor
lcall
adc
push
cmp
or
pusha
cmp
stos
lods
cmpsl
adc
sbb
jle
insb
daa
jbe
ds
fidivrl
push
mov
adc
test
jne
cli
cwtl
ficoms
lods
ret
mov
sub
rcrl
pushf
aam
xchg
jae
cmp
push
lret
add
stos
out
jmp
dec
inc
out
getsec
rcr
ljmp
dec
in
or
leave
cmp
rcrb
add
imul
dec
addl
lahf
or
adc
mov
ret
push
push
loop
add
cli
push
push
jnp
or
in
in
adc
dec
mov
dec
push
cmpsl
mov
ret
and
push
or
push
stc
stc
out
xchg
jp
mov
popl
int3
and
or
jl
cli
lea
push
xchg
das
lret
rcrb
sbb
mov
xchg
xchg
sbb
inc
cmp
jmp
cmp
andl
cmpsl
stc
inc
xor
xor
sub
scas
xor
insl
outsl
jo
jmp
stos
mov
subl
addb
xor
les
std
lods
les
lea
sbb
cmpsb
imul
adc
add
scas
lret
out
and
xchg
add
stos
mov
test
sub
push
xchg
xor
push
pop
pop
in
pop
cs
and
out
insb
sbb
stos
repnz
stc
movsb
sbb
imul
cmp
cmp
imulb
fistps
jp
rep
cltd
dec
in
rorb
xor
add
add
in
cmp
inc
xchg
out
stos
or
sbb
lcall
movsb
lcall
or
repz
mov
shll
mov
sbb
outsl
aaa
mov
push
sub
in
and
into
jno
push
arpl
jnp
cmp
mov
xchg
int3
bswap
mov
sbbl
cmp
std
mov
shl
gs
fwait
xchg
es
mov
mov
js
sbb
push
add
and
pop
andl
repnz
adc
pop
ret
sub
sti
ja
dec
xor
loop
imul
das
aad
pop
jp
ror
inc
rorb
xchg
cmp
mov
ret
pop
pop
sub
addl
mov
mov
div
xor
mov
stc
mov
add
adc
inc
loopne
sbb
imul
adc
repnz
jg
cwtl
mov
mov
inc
hlt
jb
addr16
or
push
loop
sub
inc
mov
sbb
repz
mov
xor
xlat
adc
sub
into
test
lahf
imul
inc
xchg
xchg
mov
in
jecxz
xor
cmp
pop
dec
xlat
rorb
cli
ss
inc
cmp
mov
pusha
outsl
jmp
and
ret
xchg
test
iret
cmpsb
push
push
arpl
mov
repnz
xchg
jo
xchg
sub
xchg
outsl
jbe
outsb
out
mov
subl
jne
push
pop
sub
rol
scas
adc
cmp
daa
mov
xchg
enter
icebp
or
aam
cmp
xor
out
jge
add
xor
mov
into
push
jb
stc
pop
sbb
stc
mov
pop
xchg
sbb
ja
xchg
data16
rcll
pushf
pop
outsb
dec
fiadds
and
mov
fldl
in
popf
and
es
das
mov
hlt
and
aas
or
cmp
sbb
imul
shlb
jmp
insb
add
outsb
cltd
jo
xor
inc
mov
sbb
inc
repz
std
xchg
daa
mov
xlat
push
push
xchg
jecxz
mov
jecxz
into
mov
adc
cmp
and
jp
adc
pop
popa
mov
imulb
sub
movl
add
add
lcall
sub
sbb
sbb
cmp
xchg
out
cwtl
mov
push
jg
lock
mov
shrl
pushf
ret
out
test
inc
dec
dec
bound
and
add
mov
das
inc
pop
and
push
push
in
or
scas
xor
dec
lods
push
and
in
ss
lds
sub
jmp
stos
aas
dec
xchg
or
sub
dec
inc
lret
dec
xchg
call
notl
icebp
fistl
xorb
cmp
mov
out
cmp
mov
jbe
pop
or
lahf
sti
dec
cmp
cmp
dec
pop
scas
in
pop
into
imul
xchg
cmp
adc
or
je
inc
inc
lods
sub
int3
jo
daa
iret
and
inc
movsl
jp
dec
ds
out
je
lods
lret
add
outsl
jp
sbb
cwtl
add
adc
push
and
xor
add
out
in
rcrb
sbb
inc
add
push
iret
pop
dec
leave
rcrb
sbb
lcall
nop
in
mov
pop
xchg
in
rcr
push
ret
adc
and
inc
lock
aas
lea
mov
stos
add
dec
push
imul
xchg
pop
les
mov
fistpl
mov
sub
inc
add
movsb
or
leave
or
mov
dec
pop
push
xchg
repnz
mov
int3
aam
adc
or
outsl
inc
inc
das
leave
mov
pop
dec
roll
push
ret
and
add
shrb
and
jmp
cmc
sarl
dec
jge
or
mov
xchg
sbb
cmp
arpl
flds
data16
fnsave
das
shll
dec
js
andl
mov
xor
inc
leave
dec
ret
cmp
int
daa
dec
mov
push
in
jb
cmc
rorl
cmpsl
enter
mov
call
mov
sbb
ljmp
mov
inc
adc
mov
xlat
cmp
lock
add
fidivl
cs
xchg
stos
cld
idivl
repnz
in
repz
sbb
xchg
dec
inc
ret
mov
mov
sti
jle
mov
out
mov
cmpsl
psrad
add
aam
mov
ja
test
adc
leave
add
insb
fwait
leave
xor
pop
adc
imulb
ja
pop
pop
push
or
or
in
mov
cmpsb
dec
cmp
mov
in
adc
sti
lock
sub
pop
test
and
sub
out
aam
test
push
lock
fidivl
cmp
pop
cltd
adc
mov
mov
arpl
es
mov
jle
xchg
into
mov
daa
push
out
mul
data16
shrl
add
cmpb
rcrl
pop
jb
and
cwtl
mov
jp
or
jno
sub
pop
add
push
mov
and
das
pop
idivb
sbb
cmp
and
jbe
mov
push
scas
xchg
roll
jmp
adc
gs
or
mov
and
pop
xchg
cmp
jno
sbb
jno
inc
shll
sbb
test
in
adc
popa
test
or
out
and
ds
xchg
cmp
or
stc
adc
sub
xlat
xchg
push
jecxz
mov
ja
insl
mov
sbbl
add
faddl
mov
data16
pusha
jae
sbb
hlt
mov
loopne
leave
scas
mov
fisubrl
inc
push
aaa
mov
adc
ret
jmp
mov
outsl
in
or
mov
outsl
mov
pop
mov
or
imul
stc
insb
cld
pop
xor
roll
inc
add
jns
lods
pusha
mov
out
jnp
imul
fimull
ja
lret
das
push
push
movsl
repnz
sub
mov
or
leave
jbe
shlb
cmp
adc
adc
outsl
sarb
fnstsw
inc
adc
decl
add
add
in
xchg
in
imulb
mov
inc
adcb
lret
xor
sahf
imul
andb
iret
sub
popa
cmp
add
mov
inc
fs
push
aam
sub
mov
xor
inc
lods
lods
dec
movsl
nop
inc
jns
sahf
shrl
push
and
daa
les
test
shl
arpl
pop
xchg
mov
pushf
push
lock
fdivrs
push
push
sub
xor
shrb
push
mov
xchg
call
lret
fxch
insl
lods
jne
pop
stos
sub
lods
out
jns
pop
shl
xchg
cmpsl
mov
repnz
icebp
inc
out
jge
les
sbb
int
jno
or
aam
inc
xor
repz
mov
push
add
shll
push
jae
and
int
lods
xchg
call
sahf
adc
pop
movsb
pop
dec
lods
testb
lahf
and
repz
nop
jnp
ljmp
mov
add
jo
and
jl
sub
fldl
addl
jb
mov
mov
mov
arpl
ds
mov
push
out
mov
push
ja
jmp
cmp
out
cmp
dec
cmp
inc
xchg
insb
lods
fnstcw
cmp
test
inc
mov
push
sti
cmpsl
and
dec
add
xchg
outsl
jnp
fs
jmp
add
cmp
mov
dec
insb
lret
sub
in
sub
mov
inc
add
inc
push
xchg
dec
imul
daa
addr16
ret
cmp
push
lea
push
dec
fnstsw
adc
or
shrl
adc
popf
loope
jb
push
dec
fistl
in
jmp
rcl
fstpl
nop
dec
test
lret
sbb
pop
jp
lods
loopne
out
int
shrl
xor
xchg
outsl
in
mov
test
test
test
fadd
dec
inc
add
push
mov
jmp
aam
pusha
sbb
jae
xchg
mov
and
je
lcall
mov
aas
movsl
dec
push
test
push
jmp
mov
xchg
sbb
xor
fcoml
mov
and
hlt
call
push
dec
lcall
sub
push
repnz
pop
clc
push
scas
jecxz
fwait
pop
sub
pop
fdivs
addr16
push
or
imul
ljmp
pop
scas
lock
pop
bound
push
in
cmpsl
clc
lods
out
daa
push
pop
cld
adc
in
inc
pop
cmpsl
jecxz
in
test
out
xor
xchg
fsubl
je
pop
cmp
scas
cmp
xchg
sub
imul
rcll
rcr
adc
insb
aad
cwtl
xor
scas
push
fcoms
data16
cmpsb
mov
sti
popa
jmp
jns
emms
jns
mov
or
mov
xchg
hlt
mov
mov
std
enter
jnp
push
xor
test
pop
or
aas
fsubrs
movsb
pop
dec
cmpsb
cli
and
lret
xchg
push
mov
mov
adc
or
xchg
mov
push
lods
sbb
jmp
cs
ret
sub
lret
outsl
mov
jge
ss
outsl
test
inc
jecxz
cmp
cmp
ds
lret
cmp
imul
lock
push
cmp
dec
data16
pop
mov
cmp
jns
jmp
inc
lret
sbb
mov
add
fldcw
ja
pop
mov
push
push
notb
push
add
jp
fdivrs
mov
lret
aaa
ds
mov
movsb
scas
test
dec
xchg
pop
add
cmp
jns
push
xchg
xrelease
jne
pop
cmp
and
aad
pop
jo
xchg
ffreep
mov
mov
lahf
inc
cmp
pop
clc
nop
push
sbb
adc
jl
xlat
in
lods
leave
or
push
and
cmp
jecxz
jnp
nop
pusha
mov
sti
push
fisubrs
jne
pop
iret
sbb
push
pop
dec
push
aaa
shll
adc
lods
pop
mov
jbe
lock
or
out
ret
mov
adc
insb
and
dec
scas
nop
xor
popa
dec
scas
push
xor
sbb
int3
or
xchg
mov
pusha
adc
pop
int
cli
xchg
aam
mov
and
sbb
movsl
loope
int
adc
sti
inc
sub
call
jns
xchg
mov
inc
negl
jle
pop
rorl
xor
stc
or
rolb
popf
adc
lock
sbb
or
sub
jne
scas
sbb
fs
and
in
sbb
loope
gs
fisubs
cwtl
push
inc
in
enter
shll
movsl
out
aad
lods
fmuls
adc
mov
test
jle
adc
insl
in
in
inc
leave
bnd
in
pushf
into
sub
pop
mov
std
mov
xchg
gs
cmp
movsb
pushf
lods
test
sahf
sub
push
push
push
dec
int3
xlat
jmp
mov
mov
sbb
jle
xchg
test
stos
int
adc
cmp
push
lea
das
jns
pop
pop
adc
mov
inc
xchg
and
das
mov
lahf
ret
mov
sub
sti
xor
mov
jns
test
adc
pop
vmovss
dec
mov
inc
lea
rcl
int
cli
outsl
jl
pop
xchg
ficompl
add
push
jno
out
cmp
pop
or
push
and
stos
inc
aam
sbb
jp
pushf
sub
subb
cltd
add
jae
adc
loope
mov
imul
xor
loope
pop
mov
pop
or
add
push
bt
je
dec
pusha
or
mov
divb
out
mov
jle
mov
xor
lret
imul
jp
xchg
mov
subl
ficoml
lret
cmp
cmp
cmpsb
xchg
sub
dec
xchg
xchg
fistl
sbb
js
inc
push
sahf
and
cmpsb
sub
add
repnz
or
out
inc
sbb
mov
jp
xlat
mov
sbbl
cli
mov
js
sbb
sbb
in
rorb
rcl
mov
fwait
inc
mov
sti
in
test
adc
loope
loope
or
mov
aaa
push
cmp
aad
xor
repnz
repnz
movsb
xchg
sbb
in
stos
mov
insb
dec
int3
push
stos
jne
std
push
or
out
outsb
call
cmpsl
pusha
stos
fdivl
cs
fbstp
data16
shll
mov
std
mov
mov
orb
jl
mov
and
ja
sub
lods
jne
es
sub
bound
dec
pop
or
int3
mov
notl
jmp
pop
pop
sbb
xor
sbb
jo
and
push
xchg
fucom
enter
mov
test
xchg
das
ficoml
push
clc
xlat
ljmp
call
xchg
ja
aad
add
shlb
aas
xchg
inc
pop
out
cwtl
aas
xor
or
cmp
cmp
mov
pop
outsl
in
jno
mov
lock
adc
xor
jnp
imul
inc
sbb
mov
jae
es
incl
lods
addr16
add
pop
scas
push
inc
gs
outsl
rorl
fldenv
inc
sub
pop
add
bound
sub
insl
mov
xchg
sbb
jns
xor
cltd
arpl
fildll
in
mov
mov
fwait
xorb
es
mov
cmpsb
frstor
cmpsb
xchg
test
pop
pop
js
mov
mov
inc
add
rorb
test
pushf
hlt
lahf
xor
push
hlt
inc
mov
mov
hlt
insb
sbb
xchg
inc
sub
or
pusha
mov
rolb
inc
mov
movl
shr
jb
mov
lods
sti
icebp
ljmp
and
popf
test
sahf
loope
lcall
mov
out
cld
pop
mov
icebp
ret
les
adc
pop
idivl
adc
xchg
cltd
mov
jl
xor
cmp
jno
sbb
fwait
pop
pop
mov
pop
in
mov
xchg
sub
mov
sbb
dec
mov
popa
pop
fmul
sub
cmc
pop
mov
mov
loopne
xchg
insl
inc
orb
push
mov
sarb
fisttpll
in
push
push
out
sti
jl
addl
sub
mov
mov
divb
cmp
push
por
and
lods
mov
adc
repz
and
cld
fsubrs
cmp
sbb
jne
aaa
mov
mov
leave
fisubrl
test
cmc
aad
insl
cmpsb
in
inc
data16
jns
das
negl
adc
xor
cli
inc
call
lret
mov
push
xlat
mov
stos
mov
inc
mov
jl
loope
mov
mov
imul
and
mov
adc
aaa
push
and
ds
daa
aad
rorl
mov
mov
nop
push
enter
mov
jnp
sbb
pop
mov
rcrb
lahf
push
sbb
mov
ss
sub
mov
icebp
push
stos
sub
pop
lcall
das
test
shll
pop
scas
pusha
movsb
sub
xchg
cmp
mov
xchg
xor
repz
sbbl
cmp
cltd
pop
push
in
scas
imul
add
outsl
sbb
push
mov
stos
daa
icebp
imull
inc
pop
aas
stc
test
mov
inc
hlt
ret
cli
or
cmc
out
cmp
test
aam
ljmp
xor
lods
mov
xor
das
pop
xchg
mov
add
mov
push
scas
xor
sbb
pop
inc
mov
test
adc
cwtl
stos
dec
addr16
call
dec
ja
fsubrl
push
ret
mov
fsub
mov
das
in
shrb
jnp
jbe
das
pop
dec
and
jbe
fsubr
out
xor
jge
inc
scas
push
push
xor
ret
push
stos
sbb
xchg
es
loope
xor
push
repz
pushf
enter
repnz
loope
fwait
out
xchg
ret
rcll
bound
lret
xchg
jnp
movsb
xor
loope
and
mov
add
stos
adc
xchg
clc
repnz
pop
push
sbb
xchg
jne
icebp
and
fcomps
mov
gs
or
call
inc
pop
xchg
add
push
pop
pop
sub
fstpl
mov
idivl
jbe
jno
add
popa
idivb
in
in
mov
out
int3
xchg
out
cmpsb
call
lods
inc
or
cli
pminsw
xor
je
pop
cs
and
push
sub
enter
in
inc
test
push
scas
das
xor
js
das
add
adc
mov
mov
lods
lret
or
mov
je
insb
rolb
dec
in
xchg
rcl
cwtl
ss
movsl
stc
sub
xchg
mov
jge
cmp
outsl
mov
adc
mov
fwait
data16
adc
orl
stos
pop
jmp
mov
cmp
ja
lds
push
sub
aam
negl
lds
in
push
sarb
stc
sbb
mov
mov
in
push
sbb
add
imul
sub
dec
add
dec
mov
loope
addr16
sub
push
and
mov
pusha
mov
stos
and
lock
dec
adc
mov
sbb
dec
jle
mov
gs
mov
adc
cltd
sub
cs
mov
xchg
lods
pop
pop
mov
int
ret
pop
jb
sbbb
push
lret
mov
ret
icebp
lea
sub
jbe
fldcw
fistl
inc
cmc
arpl
mov
push
scas
xchg
ljmp
lds
loopne
mov
in
aaa
push
mov
push
pop
lods
add
mov
sub
add
shll
fistps
dec
mov
dec
repnz
push
mov
es
pop
sbbb
inc
and
sbb
push
lcall
lods
cmc
icebp
aam
cmc
jb
movsl
mov
and
adc
iret
int
testb
lds
xor
test
ret
inc
dec
fs
mov
mov
imul
dec
inc
add
cli
test
pop
pop
xchg
into
jno
out
int
sub
mov
sub
ja
push
push
add
fucom
loope
fldt
pop
cmpb
addr16
fwait
push
mulb
mov
outsl
xor
ret
mov
and
popf
xor
repnz
in
jp
hlt
mov
mov
jo
pusha
xchg
mov
jae
int3
xor
loopne
clc
mov
dec
test
cli
mov
in
stos
pop
pop
ficomps
jle
ret
imul
dec
inc
rcll
imul
inc
and
test
imul
es
roll
xchg
shl
push
stos
movsl
repz
mov
jmp
mov
and
into
push
dec
aam
aas
lods
loop
rol
sti
lcall
popa
pushf
and
xor
jmp
inc
sbb
and
push
popa
jns
clc
jns
jo
loope
sub
cmp
inc
push
mov
xor
sbb
inc
daa
repnz
das
shlb
mov
pop
push
sub
cmpb
jle
daa
mov
scas
push
sbb
jno
pop
lock
sub
hlt
pop
ss
adc
jl
mov
das
push
pushf
xor
nop
enter
adc
jae
pop
pop
adc
xor
insb
insb
out
call
je
sbb
ret
inc
xchg
add
test
call
mov
xchg
sti
and
push
fldl
push
mov
push
or
cmp
and
jno
popf
test
xlat
adc
movsb
nop
push
stc
mov
sub
mov
jno
mov
fldcw
or
mov
ud1
scas
mov
ss
or
addr16
lock
add
addr16
or
test
fdivl
sahf
data16
mov
jle
je
addr16
in
jnp
pop
cli
mov
imul
jne
jecxz
xchg
dec
jmp
mov
cltd
mov
loop
inc
and
cmp
pushf
adc
popa
sub
cmp
lret
arpl
ljmp
pop
stos
cmp
rcll
ret
or
xor
mov
adc
fnstcw
pop
insb
pop
jp
add
call
out
sub
xchg
dec
jae
imul
mov
and
clc
lret
fsubrl
lea
xlat
fsubrs
pop
sub
push
push
fstpt
std
add
cmp
aad
iret
and
nop
mov
hlt
ss
dec
inc
data16
inc
dec
jns
adc
mov
fisttpl
out
imul
imul
shlb
loope
test
or
sub
dec
cmp
mov
iret
dec
sub
mov
test
shld
out
sti
pop
enter
test
and
dec
mov
xchg
fstps
mov
das
or
xchg
mov
add
pushf
xor
pop
faddp
sbb
pop
inc
xchg
jae
jnp
scas
bnd
mov
mull
and
sub
xchg
inc
jge
repz
hlt
inc
addr16
fwait
mov
aas
and
xchg
xor
arpl
loope
lret
mov
xor
fistpll
int3
es
cs
dec
jmp
dec
adc
loop
sub
flds
push
cli
insl
stos
in
adc
sbb
push
push
xchg
in
adc
jle
xor
js
call
in
sub
ja
xchg
iret
insl
dec
mov
test
jmp
xlat
mov
mov
test
test
mov
inc
sub
test
dec
xchg
push
dec
cmc
cltd
fstps
cmp
and
ja
xor
mov
jne
outsl
sub
shrl
sub
pop
in
sti
push
xlat
repnz
lret
lods
testb
and
out
inc
xor
mov
rorl
inc
add
cmp
sbbb
jbe
push
mulb
cmc
rep
popa
xchg
sbb
jmp
pop
mov
hlt
mov
int3
outsl
sarl
fcompl
or
jmp
jns
es
lret
adcl
arpl
nop
in
jp
inc
prefetch
or
movsl
mov
lods
orl
pop
push
jge
ljmp
jg
fcmovu
and
incb
dec
mov
ljmp
int3
push
andb
rcl
gs
nop
test
in
xchg
xchg
mov
cmp
cs
repnz
fwait
jne
mov
mov
loopne
loop
test
idiv
cs
dec
loopne
adc
stos
jg
push
cwtl
add
mov
xor
xor
pop
popf
cld
inc
lock
into
push
add
fstps
movsl
shl
lret
sbb
cs
loope
lret
jae
sahf
push
cmp
mov
ljmp
sbb
mov
in
addr16
fistpll
fistl
in
sbb
xor
add
add
aaa
mov
ljmp
std
test
rorl
adc
xlat
cmpb
xor
mov
outsl
push
adc
jmp
ds
adc
jbe
add
fidivl
jo
stos
inc
cmp
ffreep
sub
fsubrl
mov
jmp
sar
mov
push
sub
dec
mov
push
out
ss
imul
push
add
imul
rcrb
imul
mov
inc
dec
fildl
mov
arpl
lahf
and
shrb
subl
stos
ret
lods
xchg
xchg
jmp
mov
popa
add
enter
adc
sbb
cmp
xor
pop
sub
mov
out
adc
imul
xchg
pop
out
test
lods
adc
jno
pop
imull
mov
push
pusha
sbb
pop
lahf
sub
mov
out
clc
adc
inc
mov
fidivrs
inc
test
loopne
incl
ss
nop
push
cmpsl
pop
lods
and
rcl
enter
add
repnz
ds
xchg
cwtl
sbb
lds
push
add
mov
jecxz
ja
popf
lret
or
mov
push
adc
jg
jp
hlt
scas
adc
pop
and
jno
pop
push
mov
sti
icebp
jb
mov
cmp
push
pop
add
shll
pop
or
xchg
jbe
addr16
rcr
scas
fs
sbb
xor
shlb
xor
pushf
pop
pushf
xchg
js
xlat
les
sahf
push
rol
cltd
pop
push
int
mov
push
movsb
sti
pop
cltd
ja
shlb
sub
and
jb
imul
jns
push
imul
stos
adc
jp
js
add
cli
jmp
add
fmull
pop
popw
sub
rcll
int
test
andl
cmpps
lret
add
sub
jne
mov
xchg
cli
push
sbb
bound
push
hlt
inc
mov
jmp
push
or
std
les
inc
sarl
and
nop
rcll
inc
mov
repnz
lret
int
or
nop
pop
mov
fmul
fsubs
int3
adc
ret
js
fstps
adc
xlat
cmpsb
lods
aad
xchg
pop
or
mov
sahf
in
dec
sub
sbb
adc
jl
lahf
sbb
cli
mov
mov
shll
push
ds
imul
lahf
or
inc
loop
sub
mov
rcrl
sub
xorb
aam
mov
jmp
aaa
push
in
or
xchg
xchg
mov
sbb
mov
push
popa
xchg
sub
arpl
or
mov
pop
jns
dec
insb
dec
jae
jno
mov
ds
mov
repnz
repz
jo
mov
fbld
mov
add
mov
sub
test
add
cmp
test
jmp
and
bnd
jo
pop
fsubs
cli
add
pusha
gs
xchg
jmp
ja
sahf
mov
out
ficompl
divb
xchg
push
push
adc
fsub
sub
pop
pop
fistps
or
mov
mov
pop
call
and
ss
add
cmpsl
pop
fs
pop
fwait
mov
inc
in
std
fstl
popf
adc
lods
rcll
push
stos
loope
mov
adc
or
pushf
scas
test
push
and
ds
int3
sub
les
xor
pop
mov
adc
lahf
jbe
aam
mov
mov
sbb
and
popf
iret
pop
or
mov
lret
inc
scas
mov
cmp
hlt
rcl
pop
push
fs
out
inc
lods
jge
xchg
pushf
inc
cmp
push
movsl
push
in
in
dec
lods
mov
loope
fs
cwtl
jbe
push
data16
jg
fdivrs
cmp
mov
inc
push
cmc
rcll
stos
jp
inc
jnp
cli
jecxz
mov
les
mov
les
loopne
mov
outsl
hlt
bound
jo
dec
xchg
and
mov
dec
mov
inc
mov
xlat
out
mov
jns
in
mov
xor
push
xchg
sbb
imul
push
push
cmp
jae
sbb
mulb
jge
sarl
addl
sub
loope
lcall
outsl
rolb
jbe
lret
les
push
xor
mov
add
outsl
inc
cmp
shll
pop
xchg
int3
xchg
dec
mul
fnstenv
push
jg
and
aam
or
or
xor
jb
dec
loop
mov
cmpsl
fcomip
jecxz
mov
lcall
lods
jl
push
aad
push
sub
nop
and
lea
mov
xor
scas
or
lea
and
roll
movsb
sub
mov
movsb
mov
stos
icebp
xchg
mov
fmuls
xchg
jmp
xlat
shlb
movl
inc
push
mov
out
xchg
add
push
loope
roll
add
insb
cld
or
or
add
xor
pop
adc
arpl
jae
push
in
insl
mov
and
lahf
adc
cmp
pop
scas
test
push
pop
rcrl
lahf
or
or
loopne
fisttpll
dec
add
cld
add
fdivr
mov
mov
cmp
pop
sbb
cmp
cmp
aam
push
lret
push
xor
jae
pop
scas
les
add
enter
dec
pop
dec
testl
fdivl
in
scas
mov
lds
sbb
idivl
sub
pop
jne
pop
test
shll
xorl
adc
xchg
mov
lahf
repz
in
pop
mov
lahf
and
stos
xchg
adc
divb
inc
loopne
or
push
pushl
mov
xchg
push
push
gs
mov
std
paddw
push
sub
cmpsl
jge
push
inc
sbb
jbe
out
insl
inc
insb
mov
mov
daa
ror
loop
adcl
aad
mov
add
dec
fs
movsl
pop
lahf
lods
or
dec
addr16
les
mov
aad
outsb
mov
mov
jle
shlb
test
xchg
aas
bound
sbb
push
cmpsl
xlat
add
int3
or
jo
movsb
mov
mov
loop
mov
push
cli
xchg
push
fs
addr16
orl
push
imul
test
cltd
jp
lock
and
xor
or
or
mov
negl
dec
adc
data16
int3
or
lret
outsb
add
dec
inc
xor
jb
and
and
inc
insb
lahf
jns
mov
gs
scas
mov
icebp
mov
cmp
sbb
adc
mov
fsub
movsl
outsl
insb
ds
mov
lcall
push
add
adc
or
rolb
out
dec
xchg
mov
out
sbb
bound
mov
ds
push
fs
imul
repz
loopne
pop
or
pop
dec
add
into
mov
mov
test
push
xchg
cld
fstl
jae
imull
call
xchg
push
dec
out
push
pop
leave
pop
bound
rcl
mov
shrl
pop
shr
jnp
add
pop
mov
mov
imul
cmp
xor
and
add
cmpsl
rorl
adc
test
and
stos
loope
lds
outsb
cmc
push
iret
roll
xchg
mov
dec
stc
ljmp
mov
xor
lahf
jns
das
jnp
je
add
testb
and
fs
or
cmpb
adc
mov
jge
xchg
sbb
or
je
pop
movsb
jl
inc
mov
movsl
jmp
fisubrl
push
lods
lods
test
xchg
scas
lahf
cmp
movsl
push
sub
ja
cli
aas
add
lods
jmp
mov
add
xchg
or
sub
movsl
xor
inc
les
ds
shll
scas
pushf
jo
incb
ss
stos
fists
mov
ss
inc
adc
cmp
mov
fisubl
xor
inc
cmp
inc
pop
int
mov
adc
scas
jmp
mov
iret
sub
xchg
xchg
inc
bound
aad
stos
sbb
mov
adc
andb
adc
addr16
xchg
lret
mov
popf
jecxz
cmp
inc
sahf
sub
call
push
enter
add
fwait
js
push
addr16
mov
xor
mov
cmpsl
sub
mov
push
stos
outsb
add
sub
inc
std
xor
or
loope
notl
jae
cwtl
cmp
xchg
inc
stos
jge
and
sbb
hlt
xchg
push
and
shll
xor
dec
fs
dec
jg
test
fnstcw
in
hlt
sti
ds
push
push
mov
scas
je
cmp
pop
dec
cmpxchg8b
lret
outsb
bnd
pop
xchg
lods
call
scas
je
outsl
hlt
rcrl
jle
jmp
or
push
cmpsb
push
jbe
mov
cmpsl
clc
mov
mov
in
movsl
adc
fistps
out
jge
in
dec
cmpsl
repz
fnsave
faddl
stc
ds
mov
add
push
ljmp
dec
imul
sbb
cmp
jmp
dec
aas
push
sub
sub
mov
fs
mov
xchg
xchg
mov
push
mov
jp
sbb
mov
cmp
jge
int
aas
pop
mov
adc
clc
in
dec
pop
xor
push
xchg
subb
push
xchg
fwait
add
insb
in
repz
aaa
cwtl
pusha
mov
mov
and
fcmovnu
lds
mov
loop
sti
mov
sbb
in
movsb
jg
or
nop
ret
jae
lahf
push
or
ja
push
mov
dec
test
cs
das
mov
dec
jecxz
jno
inc
mov
jmp
fucomp
mov
mov
sbb
fwait
imul
fs
sbb
lods
sbb
adcb
and
sub
jecxz
call
out
sub
mov
mov
push
xchg
sbb
cpuid
fbld
add
or
xchg
popa
ja
addr16
lahf
jno
std
les
sbb
mov
xchg
in
ret
add
fst
or
fsubrp
sbb
jmp
xor
cmc
cmpl
sub
push
and
push
jge
call
sub
in
push
xor
scas
sahf
movsb
mov
push
imul
iret
pop
sub
lea
int3
pop
inc
sbb
repnz
adc
push
lock
add
fstpt
pop
loop
stc
into
out
mov
jmpw
adc
and
pushf
cs
xchg
cli
das
or
xor
xor
pop
mov
xchg
pop
arpl
and
lcall
adc
ret
mov
repnz
int
cmp
stos
push
adc
popa
push
and
mov
dec
pop
addr16
lea
mov
arpl
cmp
loop
mov
sub
jb
es
push
cwtl
in
jb
push
cmp
mov
cmpb
mov
xchg
xchg
adc
push
popa
mov
and
mov
mov
test
mov
lahf
xor
and
add
je
addr16
fbstp
adc
add
je
push
and
pop
ds
jno
std
mov
inc
adc
or
in
xchg
adc
fisubs
adc
stc
es
lds
or
pop
dec
pop
pop
jg
xor
outsb
mov
sar
mov
das
push
insb
xor
mov
push
push
adc
or
leave
push
int3
adc
mov
jno
das
pop
xchg
loope
fimuls
rcr
or
aas
adc
mov
dec
sahf
xchg
pusha
dec
sub
xchg
mov
sbb
leave
xor
push
cmpsl
das
fcoml
xchg
addr16
sbb
sbb
mov
pop
sahf
fscale
xor
lahf
or
push
cli
xor
cmp
push
mov
jmp
inc
adc
push
nop
movsb
sarb
fxch
je
inc
loope
sbb
push
lret
fnstenv
ja
or
mov
stos
add
mov
or
jno
mov
mov
push
movsl
bound
dec
lods
movsb
xor
out
cmc
jb,pn
adc
xlat
out
adc
cmc
jge
sar
adc
push
lods
std
mov
inc
sub
mov
bound
loopne
outsb
push
ficompl
cmpsb
mov
push
and
push
mov
inc
dec
popl
mov
xchg
lods
notb
mov
int3
mov
cwtl
popf
adc
das
xchg
es
outsb
lods
fadds
ficomps
cmc
std
cmp
lret
mov
testb
test
cmpsb
pop
or
in
dec
cmpsb
mov
loop
sub
ljmp
jp
ja
adc
push
dec
scas
aad
sbb
int3
xchg
pusha
sarl
fst
adc
stc
mov
ss
add
ror
and
insl
sbb
dec
jp
rorb
pop
push
jae
hlt
lcall
repz
lea
push
and
pop
pop
cmc
scas
add
push
jmp
addr16
push
andb
inc
push
xor
gs
lods
jmp
repz
shl
fnstsw
mov
and
outsl
movsl
popf
xchg
sbb
xchg
data16
in
sbb
mov
cltd
sub
cmpsl
es
mov
or
push
js
fbld
pop
mov
mov
fimuls
ficoms
pop
and
movsl
xor
fsubl
clc
xchg
fidivl
or
in
ret
mov
orl
or
or
fwait
stc
pop
js
inc
push
icebp
xchg
sub
dec
subb
mov
out
mov
cmp
pop
adc
and
mov
mov
fwait
xor
ja
fwait
mov
in
jno
rorl
test
scas
lcall
cli
sti
pushf
jg
fcomp
dec
in
jae
push
fbld
push
in
fldcw
sub
fisubrl
sarb
arpl
adc
dec
shl
push
jno
jne
leave
cmpsb
jb
sub
js
es
adc
fisubs
mov
les
add
stos
sub
sub
test
sbb
stos
test
and
enter
mov
jle
testl
rep
push
or
ficoms
call
mov
lahf
inc
ficoms
pusha
test
or
sub
inc
inc
call
sarb
push
jb
enter
mov
lea
movsb
xchg
scas
and
clc
sbb
in
mov
out
pop
in
sub
add
adc
sbb
dec
inc
sub
mov
lds
fidivs
mov
test
mov
sub
pop
insb
mov
mov
mov
imul
pop
jl
sbb
mov
mov
sarb
insb
cmp
cmpsl
call
cltd
mov
add
mov
adc
outsb
pop
push
sbb
mov
jmp
cmp
gs
std
insl
sub
ficoms
addr16
addr16
cmp
adc
aaa
push
test
ret
add
popa
xlat
mov
fisubrl
xor
mov
cltd
sbb
cli
in
inc
lret
shll
pop
adc
adc
stos
xlat
pop
cmp
clc
push
shrb
fimuls
xchg
pop
lea
ja
cmp
add
dec
push
sbb
adc
repz
push
push
mov
test
subb
and
leave
gs
cmpsb
pop
in
pop
xchg
popa
mov
push
outsl
pushf
out
mov
mov
mov
mov
cld
popf
push
clc
mov
sbb
and
add
add
ret
fidivs
sub
in
in
mov
push
enter
cltd
mov
push
ret
jecxz
and
in
xchg
clc
sub
jno
std
mov
bound
mov
mov
aad
push
and
sbb
push
push
push
adc
push
std
adc
andb
jo
xchg
xor
xchg
xchg
and
inc
jge
dec
pmaddwd
xor
xor
jno
rol
xchg
xor
sar
inc
adcb
loop
leave
jp
das
inc
inc
mov
cmp
in
jl
mov
add
dec
pop
pop
sub
out
iret
xchg
mov
ficoms
std
push
mov
sub
test
add
jnp
add
push
fwait
and
int
mov
les
imul
sti
lret
ljmp
adc
add
lods
iret
ljmp
mov
push
or
sahf
dec
push
or
mov
xchg
fdivs
dec
jb
mov
cwtl
scas
push
jmp
inc
test
mov
nop
outsb
adc
mov
xchg
add
sub
shlb
pop
arpl
pusha
cmp
push
icebp
insb
out
push
jbe
lret
cmp
and
mov
ss
cmp
sbb
in
push
out
dec
xor
jae
mov
inc
sbb
dec
test
add
push
or
jg
movsb
cmp
in
jne
cltd
add
jmp
inc
push
jp
jnp
push
mov
jo
xor
lds
or
mov
call
stc
or
push
sub
jmp
mov
mov
jb
push
mov
or
xchg
xchg
cli
cmpsb
cltd
dec
inc
xchg
in
test
cwtl
sar
aaa
nop
and
movsb
adc
stc
stos
out
std
mov
sbb
inc
fs
cmp
sub
cmp
popa
das
lret
xchg
jbe
jb
jge
adc
sbb
in
mov
rcl
jecxz
ffreep
mov
movsl
mov
mov
in
icebp
fadd
ljmp
fwait
mov
or
adc
imul
ss
xlat
ret
in
mov
in
rcrl
fadds
lods
stos
adc
adc
pop
and
xor
shlb
and
das
pusha
inc
stc
aas
movsl
jae
jne
sbb
push
lods
xchg
lods
xchg
cltd
daa
in
pusha
inc
repnz
int3
jge
mov
sbb
les
fbld
mov
and
jo
or
mov
pop
mov
repnz
rcrb
repnz
test
popl
mov
lock
lret
push
mov
xor
inc
pop
loope
sbb
dec
fsubrl
xchg
xchg
add
push
inc
push
sbb
lock
jmp
fists
sbb
push
scas
push
js
mov
pushf
adc
and
orb
sbb
jo
test
cmp
xchg
jbe
or
repz
pop
inc
push
inc
sbb
pop
and
mov
inc
cmp
xor
addl
or
and
inc
and
mov
mov
imul
rcr
sub
sti
js
pop
scas
mov
or
jo
div
mov
sbb
movsl
cmpsb
lret
push
or
pop
mov
push
cmp
iret
xchg
mov
je
frstor
cli
mov
dec
shlb
repz
repnz
cmp
pop
and
push
mov
js
fnsave
push
adc
outsl
das
loope
and
sbbl
inc
mov
push
cmp
pop
or
mov
ds
pop
cli
jns
jl
enter
push
and
mov
mov
aad
out
cmp
mov
aaa
lds
or
xlat
out
or
in
pop
cmp
sub
nop
adc
call
repnz
pop
pusha
std
arpl
aaa
lods
fsubrl
jg
sbb
ja
push
push
inc
adc
lods
mov
jg
daa
movsb
lds
mov
movsl
insl
clc
sbb
inc
sub
ret
les
inc
mov
std
mov
inc
ret
push
push
xor
or
mov
out
mov
mov
test
pop
jg
sub
mov
lods
ds
pop
ljmp
sub
jnp
call
dec
in
and
xchg
rcl
or
inc
sub
or
shll
sbb
adc
pop
les
cwtl
mov
jmp
inc
ret
adc
dec
ficoml
mov
pop
std
mov
jnp
mov
out
push
ret
sub
jb
xor
movsl
rorb
push
xor
mov
clc
sbb
dec
push
mov
cmp
pop
xor
pushf
mov
test
ss
xor
push
aas
sbb
adc
test
loope
ljmp
sbb
cmp
push
scas
pop
pop
mov
push
sahf
push
pop
cmpsb
aas
sarb
roll
pop
xor
dec
loope
clc
adcl
lods
out
sbb
push
and
jno
incl
addr16
inc
cmp
and
mov
outsl
lods
movsl
sbbb
mov
iret
inc
mov
dec
sbb
lea
test
in
add
jnp
jmp
scas
mov
shl
pusha
mov
jae,pt
test
in
aaa
data16
hlt
mov
jp
jl
test
jmp
and
sub
and
and
or
and
mov
xchg
push
push
pop
sub
mov
push
sub
xchg
mov
scas
cmpsb
test
xchg
loopne
in
pop
ss
pop
mov
xchg
scas
movsb
stc
daa
xor
jl
mov
cmp
adc
imul
cli
imul
sub
fisubs
sar
out
popa
mov
and
pop
fdiv
stos
mov
sub
xor
mov
jmp
jmp
pop
les
in
lret
xor
sub
xor
xchg
and
inc
int
or
jmp
cld
loopne
cli
add
and
movsb
push
pop
sbb
xchg
xor
into
cli
pop
mov
mov
and
add
fistl
adc
pushf
mov
std
sbb
stos
lret
sub
add
test
in
jno
dec
inc
push
das
outsb
int
mov
and
lret
mov
test
sub
dec
jno
pop
mov
sub
push
cmpsl
jg
jecxz
dec
daa
rolb
fdivr
in
mov
mov
movsb
stos
fwait
mov
sbb
push
dec
push
mov
mov
fs
jg
iret
daa
lcall
enter
in
xor
out
jp
test
cwtl
mov
jne
or
sub
es
add
add
sahf
ficomps
mov
pop
cltd
inc
sub
ret
cmpsb
je
or
mov
daa
inc
xorl
mov
mov
and
mov
mov
sub
sarl
aam
sub
ds
lds
repnz
and
jo
lahf
mov
mov
xchg
add
insb
insb
outsb
jns
aam
and
fisttpll
outsl
pop
lret
dec
or
mov
test
and
repz
mov
dec
mov
jp
jle
xchg
cmpl
sub
jns
pop
mov
pop
movsl
fldt
lret
out
adc
sbb
sub
int3
movsb
orb
lret
test
and
jbe
mov
int
xchg
push
mov
out
and
insl
jb
xor
mov
pusha
lcall
mov
jl
scas
mov
cs
sub
cmpsl
int3
inc
insl
cmpsl
cmpl
push
dec
jbe
add
dec
js
lret
nop
dec
mov
repnz
xlat
test
xchg
add
addr16
pop
push
lret
dec
in
push
pop
jo
mov
add
popa
push
dec
int3
mov
roll
mov
or
jnp
imul
movntq
out
pusha
movsl
fldt
clc
mov
sbb
inc
daa
loope
inc
sub
daa
inc
push
inc
push
decb
test
mov
pop
bound
in
and
nop
rol
jle
jl
loope
mov
jbe
xchg
fstpl
lret
imul
xor
cld
pushf
out
ss
push
shrb
mov
xchg
sarl
cltd
test
or
sti
inc
scas
insb
sbbl
fmul
push
add
popf
xor
shlb
pop
pop
mov
lods
xor
dec
or
adc
add
clc
push
dec
jb
ljmp
push
ljmp
enter
sbb
xchg
xchg
pop
mov
xor
sahf
jecxz
fmul
mov
adc
pop
mov
xchg
aam
xor
add
mov
mov
or
into
arpl
fdivrs
cwtl
popa
xor
pop
jmp
mov
or
and
shrb
add
xchg
dec
subb
push
xchg
paddq
dec
out
call
stos
sbb
incb
inc
int
incl
mov
orb
xchg
xor
lea
jae
and
ret
pop
cltd
bnd
mov
sub
into
pushf
mov
loope
sbb
pop
jnp
xchg
je
test
or
adcb
pop
pop
mov
xor
inc
sbb
icebp
ljmp
jmp
jns
mov
lahf
fisttps
mov
push
jg
lock
test
mov
sub
lret
loope
aam
xchg
out
mov
mov
int
inc
fcom
mov
dec
push
gs
scas
fwait
in
adc
scas
jno
test
sub
and
bound
mov
das
sbb
xchg
xlat
or
adc
mov
aas
bnd
push
lret
pop
pusha
xchg
ror
push
scas
jne
scas
push
nop
mov
cli
cmp
jge
lret
dec
icebp
sub
ljmp
inc
inc
push
shlb
adc
pop
lds
sub
dec
addl
into
push
xchg
and
sahf
cltd
cmpsb
and
loopne
pop
popa
push
jle
and
mov
push
outsb
ror
icebp
out
jns
pop
scas
popa
lret
or
test
in
fst
inc
out
lcall
xor
scas
mov
push
fmull
xchg
xor
xchg
or
lds
xchg
sub
out
or
scas
fadds
fucomp
inc
dec
test
jecxz
scas
mov
push
mov
fistpll
adc
sbb
mov
nop
loopne
repz
and
shl
inc
jecxz
fidivl
leave
pop
sub
rep
fwait
push
xchg
pop
jae
mov
in
sbb
popf
mov
hlt
outsl
bound
shl
or
fdivl
or
jne
insb
lret
jo
call
push
je
pop
lret
mov
dec
push
sub
sbb
fwait
push
lods
push
out
xchg
adc
push
lret
repnz
cmp
and
nop
push
sub
adc
mov
add
adc
fs
int
xchg
jns
das
dec
cmp
popf
aam
xor
sbb
insl
adc
inc
pop
ret
jno
dec
fsts
jne
jle
mov
mov
std
cmp
addr16
pop
xchg
fcmovbe
adc
cmp
mov
insl
aas
sub
mov
jge
add
shlb
mov
lock
jae
jge
mov
or
jne
out
push
mov
cmp
nop
xor
push
mov
add
jmp
xor
or
loope
jmp
and
jno
mov
add
and
rorl
inc
push
mov
add
cmp
and
out
dec
sbb
test
jle
cmp
subb
push
mov
in
push
mov
add
sbb
dec
rcr
lock
xor
sbb
std
fisttpll
xlat
loop
jno
xchg
jb
add
xchg
jne
in
add
int3
dec
add
lcall
xchg
scas
pop
xchg
rorb
mov
data16
xchg
lret
sbb
jb
mov
pop
xchg
and
les
repnz
pop
dec
icebp
mov
mov
push
cmp
and
jl
push
in
mov
loope
push
mov
sbbl
mov
inc
push
les
xor
ficompl
mov
xchg
fdivr
rolb
test
pop
pop
mov
scas
adc
jmp
cmp
es
inc
popa
adc
ja
sub
jecxz
mov
push
out
push
fadd
mov
add
pop
mov
or
aam
sub
scas
mov
mov
mov
xchg
mov
mov
iret
jb
mov
bound
adc
and
out
push
int
mov
mov
rcll
outsb
movsl
mov
das
enter
add
inc
jmp
adc
fsub
out
rorb
push
mov
in
addr16
mov
jae
jge
test
bound
jle
addr16
add
shrl
int3
hlt
mov
imul
inc
ret
aad
mov
xchg
pop
ds
xchg
test
fldcw
bnd
pop
sub
fsubl
or
into
or
les
jb,pn
mov
xchg
lock
out
lret
pop
jnp
cmp
cmp
daa
jo
jnp
daa
sub
mov
dec
pop
in
aam
and
and
imul
inc
jmp
lret
pop
dec
sub
popf
cwtl
scas
sbb
movzwl
mov
push
ficomps
imul
int3
fnstcw
aad
into
sti
stc
in
iret
cmpsl
and
sub
lods
notb
ja
hlt
add
dec
mov
outsb
lahf
mov
xchg
push
mov
clc
push
ss
push
outsb
sub
subb
ljmp
push
aam
int3
lahf
mov
sub
scas
dec
jns
dec
test
shll
inc
bound
or
add
sarb
movsb
lret
sub
mov
push
loop
mov
dec
cmp
lahf
pop
push
cs
sbb
lret
mov
jge
clc
jnp
pop
or
and
jae
ljmp
push
cmpsl
outsb
movsl
xor
fisttpl
dec
test
arpl
enter
pop
xorl
daa
lds
and
xchg
insb
fisubs
adcb
sbb
int3
testl
into
pop
xor
insl
xor
notl
add
mov
lret
xchg
andb
sahf
push
sub
js
enter
lret
call
ja
pop
dec
sub
or
xor
out
adc
dec
cmp
pop
cmp
mov
pop
out
adc
xchg
cmp
lret
jns
mov
out
out
adc
repnz
or
jno
sti
ds
repz
cmp
shl
loop
lea
mov
cmp
or
cmp
jbe
std
jle
ss
mov
add
cmp
pminsw
xchg
mov
pop
xor
inc
mov
ss
imul
pop
insl
xor
push
inc
enter
dec
add
sub
dec
sbb
fisttpll
mov
filds
mov
aam
ret
gs
and
dec
insb
mov
popf
inc
mov
pop
xor
mov
jg
mov
into
jp
jb
sbb
xchg
mov
gs
jne
add
repz
mov
jp
pop
xchg
sub
in
mov
pop
iret
inc
shrd
or
mov
cmp
bound
mov
iret
pusha
push
in
jge
call
jno
hlt
and
cmp
test
jne
push
sar
daa
cmpsb
scas
insl
xor
int3
mov
arpl
sbb
jl
bound
sbb
mov
or
int3
testb
lds
xor
xchg
sahf
jle
rcl
xchg
sub
adc
dec
and
jecxz
mov
and
jns
dec
mov
inc
and
cmp
bnd
adc
mov
clc
cmp
dec
mov
sahf
and
lock
inc
fmul
les
out
call
test
xchg
add
push
imul
mov
inc
inc
dec
std
or
insl
test
pop
pop
popa
push
ret
inc
pop
inc
push
cmp
scas
lock
mov
repz
fisttpll
or
int3
and
sub
and
sub
arpl
mov
mov
inc
mov
inc
push
rorb
jg
rcrl
jae
cmpl
jae
ret
je
clc
and
sbbb
inc
das
in
xor
mov
popf
jns
repnz
loope
scas
scas
sbb
pop
fwait
mov
es
or
rolb
jl
pop
pop
call
scas
jnp
jp
xor
js
cwtl
mov
mov
mov
sbb
push
xchg
push
pop
data16
repz
add
mov
mov
sti
xchg
les
outsb
sbbl
inc
xorb
mov
cmp
int3
sti
inc
sbb
sbb
mov
pop
sahf
fsubs
aad
mov
or
pop
nop
dec
push
int3
jne
testl
or
sbb
mov
cmp
jg
xor
js
push
in
cmc
xlat
out
push
push
fs
lds
adc
stos
push
and
out
movsl
or
inc
icebp
xor
stc
aas
dec
xchg
cmp
lret
lret
mov
stos
pop
mov
int
loop
or
mov
into
jbe
bound
push
sbb
into
inc
xchg
xchg
daa
mov
inc
or
cmp
iret
xchg
popf
sub
xorb
or
ret
xchg
inc
outsb
pop
inc
jno
pop
movsl
mov
fcomps
sbb
add
add
repnz
enter
mov
icebp
pop
pushf
xchg
dec
or
mov
clc
das
pusha
mov
xchg
int
test
pop
mov
cwtl
test
pop
cmp
mov
fs
in
inc
lcall
jne
dec
pop
je
stos
rolb
cwtl
mov
fistpll
sub
mov
mov
dec
das
and
push
fadds
jecxz
lcall
sbb
xchg
ss
test
mov
xor
addl
dec
imul
rorl
ficoml
leave
cmp
jnp
dec
jo
sub
or
roll
scas
loop
popa
mov
clc
adc
xchg
xor
std
lret
adc
outsl
mov
add
dec
dec
mov
in
xor
mul
rcrb
js
mov
xor
addr16
xlat
sub
lods
sbb
adcb
pop
inc
add
dec
mov
jg
pusha
cmpsl
js
push
movsl
mov
ret
fidivl
js
push
dec
shlb
cmp
xchg
je
dec
mov
and
jl
cmp
out
cmp
cmp
xor
mov
mov
cld
xor
stc
jb
jl
mov
sti
imul
jb
xchg
mov
add
cmc
mov
inc
mov
lds
lods
shl
sbb
mov
inc
shrb
pushf
mov
lret
out
aaa
fldenv
leave
xor
call
jo
or
pop
adc
pop
mov
sahf
movsl
outsl
fisubrl
shll
das
aam
jg
jb
ret
cwtl
pop
out
and
mov
pop
adc
lcall
push
fcmovnbe
jns
pop
stos
mov
fucomp
loopne
js
aam
icebp
adc
dec
jmp
scas
dec
lods
sbb
daa
xorl
lods
or
movsl
adc
leave
gs
daa
push
cs
fmul
jbe
into
insb
sti
fsubrs
add
lods
pop
mov
xlat
cmp
mov
xor
add
inc
faddl
lret
in
fnstsw
or
push
dec
lea
ljmp
nop
std
mov
push
dec
ficoms
sub
cli
mov
jb
rcr
or
xchg
xchg
ljmp
cmpsl
arpl
pop
bound
dec
sbb
imul
jle
push
cmc
mov
dec
insb
lds
popf
xor
rolb
cltd
fucomi
mov
in
mov
mov
pop
dec
or
es
pop
cmpsb
cmc
mov
inc
and
shrb
inc
add
push
cltd
test
les
xchg
xchg
pop
pop
repz
shll
mov
pop
and
inc
popa
cs
ds
xor
mov
iret
mov
and
outsl
addr16
test
sbb
and
sub
or
mov
adc
fsts
mov
pop
adc
outsl
cmp
lahf
jmp
lret
add
ficomps
mov
sbb
aam
scas
pop
jge
xor
out
jnp
push
negl
cmp
rolb
pop
repnz
aas
xorb
xchg
stos
bound
jae
inc
xor
dec
js
mov
sbbl
test
enter
ljmp
inc
add
add
xchg
filds
xor
sbb
cltd
std
ja
inc
and
or
sbb
mov
je
pop
pop
jmp
insl
add
fistl
jge
cld
dec
insl
and
push
leave
push
movsb
mov
les
mov
movsl
insl
fists
loop
sahf
jmp
ss
sbb
xor
aad
mov
pusha
loop
mov
leave
fstpl
xchg
sub
cltd
ficomps
aad
push
fldl
cmp
sbb
and
aas
inc
adcb
ja
fiadds
or
into
out
or
lods
sbb
push
stos
xchg
insb
jmp
add
aas
scas
int3
repnz
hlt
and
lret
xchg
inc
xchg
xchg
sub
xorb
out
mov
add
cmpsb
adc
pop
adc
jno
and
jl
lods
mov
icebp
leave
or
jb
in
pxor
jecxz
mov
rcl
jae
xor
mov
lahf
push
repz
pusha
pop
mov
or
out
test
mov
ja
hlt
pop
push
dec
xchg
out
mov
icebp
push
je
test
in
mov
xchg
bound
fstp
jmp
inc
xor
push
jl
bound
fwait
dec
mov
jge
push
test
sub
or
or
pop
jmp
jmp
pop
ret
in
cmp
and
cmp
xchg
xchg
push
daa
jno
push
inc
push
loopne
adc
es
mov
in
adc
sub
pushf
std
mov
inc
mov
orb
insb
outsl
add
pop
lahf
repnz
xchg
or
dec
jne
shll
test
add
imul
add
push
inc
sbb
push
cmpsb
stos
mov
mov
icebp
jnp
xchg
pop
aaa
mov
in
mov
push
and
enter
pop
pop
adc
mov
add
ljmp
sahf
cmp
mov
xor
fistpl
xchg
pop
xchg
cmpsl
push
push
inc
sbb
mov
add
mov
pop
xchg
fmull
out
mov
mov
dec
out
mov
es
pop
pop
ds
icebp
je
in
mov
mov
sbb
sub
push
lcall
pop
std
pop
cmp
inc
and
adc
popa
mov
or
notl
aad
cmc
and
or
sbb
in
mov
push
inc
lea
fldl
jp
pop
xor
data16
pop
mov
int
std
cmpl
inc
push
icebp
es
js
decb
dec
inc
mov
scas
mov
mov
lock
dec
lcall
in
in
fsts
xchg
repnz
xchg
lret
jno
mov
push
cmp
mov
movsl
loopne
cmp
pusha
dec
mov
adc
mov
mov
ja
andb
lret
adc
lret
jecxz
jmp
mov
and
out
fs
in
push
xchg
fidivl
pusha
adc
ficoml
xor
xchg
dec
lds
mov
dec
push
daa
mov
aaa
fldl
sbb
jecxz
aad
mov
xchg
pop
dec
or
scas
inc
mov
cmp
jmp
push
push
mov
mov
and
subb
xacquire
ss
mov
adcl
int3
mov
movsb
sub
mov
jecxz
pop
imul
dec
add
loop
or
inc
mov
iret
aad
movsl
jmp
loopne
aam
mov
and
adc
movsl
popa
lods
jle
sti
mov
sbb
loop
int3
dec
mov
jbe
ret
jecxz
cmp
lds
scas
xor
push
mov
add
test
and
pop
pop
imul
outsl
jl
pop
push
mov
aam
dec
es
fcos
lahf
sbb
adc
jns
or
repz
or
loope
sub
mov
insl
fidivs
das
push
cmpl
or
repnz
jecxz
imul
popa
and
mov
cld
xchg
ja
gs
aaa
adc
ds
jl
js
aaa
sbbb
sbb
xor
xchg
daa
push
fistpll
cmpsb
stc
adc
xchg
lea
dec
or
cmpsl
jmp
out
and
inc
shll
push
push
add
mov
xchg
push
mov
sbb
push
arpl
nop
jle
jae
cmp
xchg
cmpl
adc
sbb
in
inc
and
sbb
insb
sbb
nop
jnp
mov
pushf
outsb
rolb
imul
popa
cmp
or
mov
ja
mov
xchg
aas
daa
push
in
and
mov
mov
and
xor
es
jg
pop
jecxz
add
xchg
sbb
imul
test
and
aaa
sbb
jge
or
and
ljmp
test
push
js
popa
pop
sub
xchg
lcall
js
out
mov
ss
arpl
fiadds
in
out
push
xchg
iret
lret
and
loop
cwtl
addl
rcll
ficoml
mov
lret
cmp
push
repz
xchg
lea
xor
arpl
popa
fcoml
jno
or
or
orl
in
jbe
lock
leave
insl
push
pop
dec
jns
sbb
loop
add
mov
jno
sbb
fs
pop
pushf
cmp
lds
cli
imul
fldenv
mov
cmp
push
sbb
inc
in
jmp
pushf
sar
pop
push
adc
adc
push
mov
adc
shll
insl
std
inc
fcomps
mov
and
stc
xor
fsubrs
fwait
pushf
cmp
test
mov
adc
cmp
fsub
mov
mov
mov
or
pop
push
add
inc
jnp
subb
pop
int3
fistl
jo
scas
and
repz
or
mov
cmp
push
mov
aam
push
mov
ror
mov
and
adc
dec
repz
rorl
iret
or
and
sti
jne
sbbl
inc
sbb
pop
nop
in
xchg
pusha
rorb
jne
ljmp
fwait
test
or
push
add
outsb
movsb
mov
push
enter
sub
mov
or
xor
ljmp
loope
mov
sbb
test
out
cli
dec
out
fistl
decb
push
mov
and
adc
push
ret
and
movsl
mov
dec
mov
bndldx
mov
in
pusha
and
fnsave
push
mov
out
push
inc
lds
pop
inc
sbb
filds
fsubrs
aam
or
xchg
repnz
scas
xlat
fstpl
pop
xor
and
lret
out
push
sub
pop
xchg
leave
lds
pop
lock
jb
push
pop
dec
mov
hlt
mov
pand
lods
dec
or
and
jl
jmp
cmp
mov
inc
or
repz
adc
negl
add
orl
pushf
xchg
into
insl
lret
iret
fildl
jo
cmp
insl
mov
xchg
xchg
insb
loope
test
test
insb
jle
hlt
dec
adc
lods
sarl
aaa
mov
dec
neg
sub
xchg
icebp
pop
movsl
mov
adc
imul
sahf
js
into
dec
int3
outsl
jns
std
test
loope
push
test
jb
pop
ds
test
imul
cmpsl
push
std
mov
aad
int3
mov
jae
push
push
neg
pop
adc
adc
test
push
sti
xor
mov
xchg
pop
add
xchg
push
popf
mov
jb
mov
cmp
dec
stc
dec
adc
test
mov
or
sub
inc
push
mov
lea
sub
stos
mov
or
inc
jmp
repnz
stos
jae
inc
xchg
pushf
jecxz
test
mov
ret
das
adc
or
xchg
mov
push
pop
in
dec
mov
lea
dec
mov
fidivs
je
jg
loopne
and
sbb
jae
lahf
popa
test
jnp
je
and
xor
js
daa
es
sbb
rcll
mov
arpl
dec
pushf
imul
insb
into
push
pop
stos
xchg
inc
mov
or
add
les
dec
xor
imul
pop
sub
stos
cmp
push
std
movsb
repnz
xchg
pop
xchg
cltd
pop
out
pop
jns
mov
sbb
faddl
mov
inc
aam
jne
out
lods
lods
pop
jl
push
mov
mov
mov
xchg
dec
sti
rolb
sub
sub
add
adc
repz
cmp
inc
clc
and
cmp
in
les
inc
data16
lret
es
sbb
clc
and
clc
sbb
cmc
ret
loop
sub
daa
int
push
iret
dec
in
jb
insl
sbb
jne
subb
add
js
jns
mov
pop
mov
xor
mov
in
std
stos
sub
adc
adcb
inc
sbb
or
jecxz
sub
lods
das
test
popf
xchg
mov
cmp
pop
cli
sub
push
inc
rcrb
pushf
lahf
or
add
jp
mov
jno
add
lea
jg
shrb
add
aam
popf
xchg
sub
inc
pop
fwait
jecxz
mov
addl
or
stc
push
push
stos
fimuls
in
mov
into
int
mov
loopne
push
sub
and
pop
fcmovu
cltd
jp
and
adc
jmp
cmp
repnz
gs
sub
xchg
push
push
lret
in
pop
sbb
sbb
add
gs
dec
cmp
cmpsb
inc
add
sarb
lods
cmp
xor
inc
pop
xlat
and
and
lock
pop
fcmovnb
test
inc
and
sbb
sbb
fbld
push
popa
cmp
push
gs
push
mov
pop
shrb
cltd
cmp
mov
xchg
shll
mov
bound
lret
ds
shl
push
negl
rclb
loopne
or
push
jb
shrb
in
aad
cmp
fs
repz
je
cs
test
sub
jmp
imul
js
lcall
cmp
push
pop
andl
adc
pop
outsb
jne
mov
pop
push
adc
decl
insb
cmp
hlt
test
pusha
gs
stos
in
stos
cmpsl
popa
clc
cs
jae
aam
ss
in
sbb
pop
rcl
or
cwtl
fs
mov
cmp
jp
sbbl
call
icebp
sub
pop
adc
jecxz
xchg
es
xor
aam
dec
shrl
call
orl
aaa
iret
repnz
cmp
jns
xchg
sub
cs
lahf
add
push
add
ljmp
lds
sub
mov
cmp
push
jns
jecxz
jae
cmp
imul
inc
stos
std
out
les
inc
popa
mov
adc
sub
xchg
inc
jmp
xor
pop
out
pop
mov
jne
push
ror
adc
icebp
xchg
cmpsl
adc
into
call
xor
add
jne
mov
test
sbb
jge
mov
xor
xor
push
out
and
cwtl
mov
jmp
fbstp
inc
push
inc
pop
clc
lods
roll
xchg
pop
mov
cmp
icebp
or
sarb
adc
outsb
icebp
subb
xor
int
int3
pop
add
pusha
mov
fs
sub
add
scas
adc
or
push
in
aam
scas
scas
test
or
or
or
mov
adc
insb
ss
mov
sbb
sti
jge
jp
bound
inc
cld
int
jmp
cmp
rorb
fcmovne
stc
sbb
cmp
gs
lods
dec
aas
mov
mov
sar
add
cmp
mov
jl
inc
les
sub
mov
pop
rcll
dec
aas
push
fwait
aam
in
out
cmp
outsb
inc
jmp
or
stc
mov
or
mov
pop
je
in
sub
je
sub
stos
and
clc
inc
rol
addr16
aas
sar
pop
or
inc
out
dec
xor
cmc
cmpsb
adc
pop
shl
je
pop
cwtl
mov
test
andb
inc
inc
mov
sub
addr16
mov
test
jl
xor
dec
popf
jns
xchg
jg
cmp
mov
mov
scas
imul
std
das
pop
cli
sub
push
push
mov
mov
or
outsl
aaa
sub
push
jb
push
dec
mov
add
jg
loope
lcall
mov
xlat
shrb
jecxz
and
fadds
dec
sbb
lret
test
out
push
rol
jecxz
aaa
lea
mov
outsb
notb
in
adc
inc
lods
je
xor
aad
and
jbe
or
sbb
loopne
push
dec
shrl
pop
faddl
test
ficompl
xor
mov
mov
jno
add
cmp
bound
xchg
mov
aaa
xorb
mov
sub
and
sub
push
sub
mov
fstpl
push
mov
mov
aad
lahf
es
inc
stos
mov
mov
adc
cs
fwait
pop
mov
sbb
adc
dec
mov
inc
stos
push
and
sbb
ja
push
test
fcmovnbe
xchg
daa
enter
scas
leavew
sbb
sub
xor
data16
add
aam
cmc
sbb
arpl
cmp
in
mov
pop
es
or
cmc
scas
fidivl
push
inc
data16
cmp
fmul
push
jno
lods
mov
push
aad
ss
fs
dec
push
adc
sub
fstpt
outsl
rol
test
add
repnz
or
adc
out
bound
mov
push
stc
xor
lock
jb
mov
cltd
shll
ds
jae
push
stos
pop
push
in
pushf
jl
mov
jecxz
sbbb
stc
cmp
gs
xor
ss
cltd
and
mov
data16
insb
insl
push
push
jnp
cmpsb
sub
pusha
les
push
pop
js
shll
fistl
in
outsb
push
pop
cmp
push
mov
fsubrp
ja
js
lods
cmp
mov
imul
mov
mov
fisubrl
bnd
test
add
push
lods
cli
lcall
fxch
mov
jo
in
xor
mov
cwtl
stc
outsl
push
adcl
dec
out
bound
jbe
add
xchg
fmull
mov
pop
push
jne
loop
dec
pushf
lahf
addr16
sbb
aas
scas
and
xor
push
test
gs
push
ljmp
jge
jne
mov
jge
ds
mov
test
push
div
popf
lds
sti
mov
mov
movsl
mov
sbb
pop
add
fsubp
sub
and
add
cmpb
lcall
mov
cmc
mov
and
mov
or
shrb
inc
outsb
aas
inc
jae
pop
mov
fxtract
sti
or
adc
movsb
pop
pop
lret
lea
ljmp
push
jmp
sbb
leave
xor
lahf
adc
dec
push
or
daa
push
mov
inc
iret
cmp
push
roll
push
es
or
adc
jne
ja
jmp
je
jl
fcmovnbe
sbb
and
inc
xchg
jle
dec
push
push
out
mov
push
popf
mov
jne
push
fs
decb
sti
faddl
or
imul
cmp
and
push
mov
popa
aad
repnz
es
mov
call
add
inc
lahf
jns
and
mov
jne
and
add
mov
pushf
sbb
pop
sub
popf
jo
enter
testb
adc
add
inc
std
add
hlt
mov
push
inc
jl
sbb
mov
jg
std
jnp
mov
insl
xor
push
or
fs
jb
pop
sub
cmp
dec
sub
iret
sub
cmpsb
xchg
mov
int
mov
popf
push
jl
or
or
xor
adc
mov
mov
mov
push
shll
fimull
clc
sub
popf
cmp
into
orl
push
push
je
ret
pop
add
outsl
pop
fs
push
jnp
ja
jae
lods
pusha
sbb
cwtd
test
out
jl
out
lcall
inc
xchg
fcompl
lds
int3
imul
lods
xor
jns
test
jmp
mov
addb
push
xor
or
add
iret
addl
mov
cmp
jp
add
mov
aam
icebp
adc
dec
add
cmp
adc
cmp
dec
add
dec
pop
jle
cmp
ret
aas
xchg
and
lcall
ret
out
xchg
mov
fwait
mov
in
adc
push
pop
rcll
fwait
sbb
inc
adc
dec
shl
les
cmpsl
jle
add
cmp
push
scas
outsb
std
fistl
fwait
in
jb
lahf
push
sbb
lret
cmpsl
lcall
insb
dec
jno
mov
mov
xchg
inc
cmpsb
nop
mov
jecxz
fnstsw
push
dec
mov
ret
xlat
fiaddl
lret
xchg
sbb
les
data16
pusha
pop
daa
loopne
loopne
fwait
and
push
je
neg
pop
sub
inc
sbb
imul
mov
orb
xchg
inc
bound
imul
add
inc
dec
lret
fwait
mov
js
xor
or
addr16
sub
pop
gs
pop
aaa
out
xor
push
outsl
add
rolb
mov
xorb
cmc
aad
das
inc
cli
cltd
dec
loope
js
and
stos
mov
adc
push
dec
repnz
inc
mov
inc
imul
idivb
mov
test
push
xchg
jmp
mov
mov
push
js
scas
cmp
iret
xchg
pop
inc
inc
xor
pushf
sub
roll
pusha
ja
lea
or
pop
jle
test
cmp
imull
call
cmpsb
xlat
or
lds
mov
rorl
imulb
aam
xlat
mov
push
leave
cmpsl
inc
loope
sub
add
das
movsb
iret
sbb
mov
fldl
in
mov
dec
xor
mov
enter
cmp
bound
das
pushf
push
rorl
dec
dec
push
xchg
out
cmp
mov
inc
inc
aaa
mov
lret
mov
xor
push
popa
mov
inc
and
movsw
xor
inc
inc
bound
cmp
scas
fidivl
rclb
mov
add
fiadds
pop
pop
or
add
pop
sub
lods
outsb
and
dec
cwtl
loop
xchg
addb
loop
das
mov
push
roll
add
in
jo
das
mov
add
jecxz
out
out
pushf
rcrl
dec
pop
xchg
mov
and
and
sbb
mov
pop
cmp
push
pushf
call
adc
dec
imul
push
inc
clc
leave
fwait
out
iret
lret
jae
pop
or
pop
fistpl
stc
loopne
and
jp
ret
and
fsubrp
lods
push
xor
jae
fsubrs
push
and
ds
testl
pop
fs
shlb
pop
mov
or
push
outsb
movsl
negb
pop
mov
sub
sbb
add
xor
dec
jl
inc
and
jo
lahf
xchg
dec
adc
sub
mov
add
mov
or
jae
into
and
push
xchg
sbb
or
add
sbb
fst
fiaddl
pop
imul
push
xchg
mov
pop
add
or
lock
pop
push
icebp
add
call
ljmp
sub
sbb
inc
jp
add
and
sbb
sub
test
es
xchg
repz
cmp
push
jnp
sahf
xor
mov
and
roll
les
cmp
or
outsl
xor
add
xchg
push
xor
repz
pop
dec
ret
das
andl
push
xchg
jp
inc
pusha
cmp
mov
and
cmp
or
mov
pop
stc
incl
pop
lds
cmp
xlat
repz
outsb
dec
test
dec
pop
dec
and
cmp
in
out
cmp
out
mov
adc
dec
daa
leave
add
or
loop
add
test
sbb
jp
dec
mov
in
and
stc
add
sbbb
imul
sub
dec
maskmovq
idivl
pop
adc
aam
and
imul
xor
inc
cmp
push
add
iret
call
loopne
hlt
cmp
shll
stos
push
imul
fildl
xchg
or
lods
cmpsb
mov
nop
push
test
xchg
mov
les
adc
adc
sbb
outsl
jl
xor
mov
add
lcall
fcoml
push
dec
fsubrs
repz
sub
adc
repnz
sub
xchg
pusha
adc
stos
lret
dec
dec
jmp
inc
pop
jns
cmpsb
push
roll
in
dec
adc
lcall
sub
pop
fs
iret
aas
cmpsb
lret
scas
sbb
push
inc
rcr
mov
push
sbbb
ds
movsb
js
push
popf
xchg
pop
push
loop
aaa
cli
pusha
pop
xchg
nop
lcall
jae
mov
cltd
mov
dec
out
cmpsb
xchg
pop
inc
cmp
sub
pop
mov
mov
fldcw
ret
xchg
mov
lcall
leave
jecxz
out
xor
inc
mov
jp
xor
lret
pop
xchg
jl
mov
pop
mov
inc
ja
mov
push
xchg
push
je
bound
repnz
sub
jno
cmp
push
aas
imul
add
icebp
bound
movsb
imul
jo
rcr
scas
mov
xchg
pop
int3
xor
push
addl
xchg
movsl
and
clc
inc
pop
imul
xor
pushf
mov
test
fs
mov
cmp
add
bound
xchg
lea
sub
into
je
inc
jno
mov
mov
loopne
or
and
in
cli
jmp
and
and
neg
imul
dec
and
cmp
mov
rorl
or
mov
inc
or
mov
add
sub
push
xchg
jg
test
aas
add
pop
jmp
rcll
hlt
test
xor
xor
sarl
xchg
popf
mov
fcmovb
xlat
scas
pushf
push
sub
arpl
ljmp
and
roll
pop
add
or
rorl
addr16
mov
imul
in
mov
dec
push
ljmp
cli
test
push
iret
lds
mov
jne
mov
lret
popf
enter
adc
es
arpl
pop
repz
out
push
test
xor
mov
push
popf
aaa
dec
cmpsl
test
mov
icebp
push
js
scas
mov
addr16
in
insl
xchg
ficoms
mov
loop
into
push
mov
xchg
add
lret
inc
push
stc
mov
cmp
lcall
mov
sbb
rsm
mov
imul
rcrl
popa
dec
aad
stos
xor
pop
mov
xor
rolb
repz
inc
xchg
in
repnz
lea
pushf
int3
stc
or
cs
scas
jbe
aas
mov
pop
mov
dec
dec
push
leave
push
xor
sub
ljmp
jle
das
mov
adc
decb
stos
add
outsb
out
imul
pop
es
push
jno
mov
xchg
adc
int3
sarl
and
sub
xor
sbb
out
push
jnp
mov
jle
icebp
jmp
ds
cs
xchg
add
cmp
xor
push
add
mov
sarl
imul
mov
push
add
inc
push
stc
insl
jnp
enter
out
fcompl
stc
fists
pop
shl
adc
mov
push
pop
lods
inc
shll
lcall
out
sbbb
cld
cmpsb
inc
fldpi
adc
jp
ret
mov
movsb
or
sub
or
scas
or
mov
and
lock
adc
jns
mov
mov
dec
enter
jg
sahf
jae
xchg
xor
inc
loop
mov
out
adc
fs
movsb
cli
out
mov
and
sub
adc
inc
in
jno
out
test
xlat
fldcw
sarb
or
loopne
mov
lahf
xor
mov
adc
mov
inc
mov
xor
lret
lret
pop
or
pop
mov
aaa
sub
fidivs
loope,pn
int
mov
into
fcmovb
lcall
addl
xchg
in
add
inc
aad
out
notb
adc
dec
stc
xlat
mov
loope
cmp
cmp
xor
lds
cmp
sub
cmpsl
and
aam
xor
mov
ja
repnz
mov
outsb
cmp
sub
push
cmp
and
sbb
in
or
push
hlt
push
repnz
or
jmp
xchg
lahf
pop
jge
mov
add
cmpsb
jle
loope
es
fdivrl
movaps
push
pop
enter
inc
xor
jge
sbb
test
lahf
adc
out
xchg
shll
xchg
repz
xchg
push
movsl
inc
ret
xchg
jle
ss
pop
inc
outsb
test
fdivrs
xchg
add
loope
test
ljmp
xchg
jne
sarb
shlb
xchg
adc
pop
mov
outsb
lahf
je
sub
sub
push
cmp
imul
stos
movsl
cmpsl
push
or
mov
cs
jmp
clts
fwait
jnp
jmp
jne
inc
arpl
sbb
pop
aam
pop
push
xchg
repz
add
pop
push
dec
repnz
jl
jmp
mov
add
xor
xor
push
cmp
out
push
push
mov
outsl
jmp
test
sbb
sub
ds
test
incl
dec
enter
dec
or
cli
xchg
cmp
dec
mov
mov
stos
inc
pusha
xlat
xchg
bound
lahf
xchg
push
sar
lret
pop
and
mov
scas
pop
pop
push
xor
inc
lret
into
dec
out
iret
movsl
cmp
je
addl
popf
loope
lahf
dec
or
mov
pop
lcall
into
pop
ret
adc
mov
mov
inc
lea
pushf
dec
rorl
mov
into
and
stos
out
mov
daa
and
sub
jge
lret
add
pop
imul
xor
dec
push
testl
cld
in
jecxz
mov
adc
cmpsb
cli
ss
mov
and
or
test
es
in
fstpl
sub
cltd
dec
sub
in
lahf
cwtl
enter
mov
mov
inc
arpl
or
add
xchg
or
mov
dec
mov
sub
les
xor
fdivr
or
dec
push
cwtl
adc
lahf
ret
sbb
sarb
aas
cmp
cld
cld
mov
lods
xor
stos
jnp
push
movsb
shll
in
and
mov
push
leave
lods
in
out
call
xor
bound
dec
movsb
jg
adcl
inc
xor
rol
xchg
jl
jecxz
adc
xchg
mov
sub
push
mov
xchg
divb
bound
std
add
scas
mov
popl
push
gs
vhaddps
test
or
jp
nop
roll
lret
daa
dec
bound
test
lcall
scas
mov
lea
roll
push
push
aaa
pop
pop
sbb
xor
push
lods
fdivp
sbb
enter
push
mov
and
mov
mov
lret
fildl
xchg
jl
or
mov
push
inc
and
loopne
inc
loope
xlat
or
mov
out
mov
jbe
xlat
shr
nop
notl
and
repz
outsl
add
mov
pop
xchg
pop
pop
aaa
out
stos
movsl
or
movsl
jo
xchg
pop
pop
add
mov
inc
pop
and
pusha
mov
xlat
jne
xor
repnz
xor
mov
xor
out
mov
aad
mov
stc
pushf
std
push
popa
out
cld
movsb
sub
pop
dec
xchg
xchg
pop
mov
loope
pop
fs
fiaddl
xchg
stos
cld
ret
push
inc
dec
insb
xlat
sub
aaa
jle
dec
cmpsl
sub
sub
mov
mov
call
xchg
hlt
imul
in
xor
xor
sahf
daa
dec
and
sti
mov
lea
ljmp
push
jne
shl
xlat
sahf
fdivl
fisttps
xor
aad
sub
sub
es
sbb
cltd
cmp
pop
cld
mov
fwait
mov
and
inc
sbb
lcall
push
dec
fwait
mov
mov
and
ficoml
dec
jmp
imul
xchg
cmpsl
inc
lea
jnp
rorl
cmp
test
cmp
addr16
inc
sbb
ret
out
popf
ffree
bound
push
cmp
ljmp
inc
inc
mov
shll
outsl
jp
addr16
rol
sbb
xchg
push
aam
loop
mov
lret
xor
js
cmp
cmp
dec
icebp
ret
pcmpeqd
cmc
or
les
out
in
enter
mov
fists
lds
push
xor
shl
orb
jmp
fistl
push
mov
cmpsb
or
xor
cwtl
and
mov
stos
xchg
aam
xchg
in
and
test
stos
sbb
cmpsl
push
pop
pop
orl
jp
rolb
pop
add
add
js
add
inc
xchg
into
jb
jns
dec
cmpsb
std
mov
xchg
mov
xor
push
jno
test
cmp
mov
js
or
push
mov
das
fnstenv
jp
test
add
movsb
sbb
dec
pop
mov
push
in
call
out
inc
cmp
xor
pusha
lret
aaa
and
and
mov
imul
fisubrs
jge
sar
pop
jge
in
lret
jnp
mov
push
pop
cld
fisubs
popa
jecxz
arpl
jne
inc
sub
cltd
loope
dec
rolb
add
data16
sbb
xor
add
inc
sbb
mov
sub
mov
sub
les
adc
ret
pop
sub
daa
inc
dec
rolb
push
aam
jnp
push
sbb
into
mov
bound
jno
or
jns
lret
jmp
add
shrb
popa
adc
fs
jae
fadds
fldenv
sbb
out
and
mov
push
inc
or
push
mov
cmpsl
out
outsl
sbb
lret
cwtl
icebp
in
xor
xchg
jmp
add
adc
inc
push
pop
into
jb
xor
not
inc
imul
daa
jp
push
out
cmp
jo
int3
add
mov
ret
or
xchg
arpl
push
mov
mov
sarl
mov
adc
ret
aad
xchg
cli
sti
jo
cmpsb
inc
xchg
cli
cs
push
out
jae
push
mov
cmp
test
js
outsl
xor
push
xchg
ss
jl
aad
fdivl
cmpsl
pop
cmp
add
or
adc
push
push
sub
pop
addb
jle
insl
mov
orl
nop
push
faddl
push
cmp
push
mov
inc
shll
pop
add
sahf
sbb
sahf
mov
mov
lahf
lret
dec
xor
loopne
mov
test
scas
imul
outsb
ds
inc
shl
sub
pop
cmpsl
inc
lcall
sbb
xor
and
ret
sub
dec
pop
arpl
jl
loope
and
scas
insl
inc
push
ljmp
inc
lods
xlat
push
add
aaa
inc
mov
call
pop
imul
xchg
std
test
stos
cmp
std
insb
jo
pop
pop
int
pop
ror
jmp
xchg
je
push
and
lret
dec
adc
fistpl
pop
pop
mov
aaa
jmp
out
int3
jl
icebp
xchg
shrl
fwait
xchg
aam
iret
iret
push
xchg
ret
dec
jne
or
stos
push
push
mov
lods
mov
loopne
test
or
mov
roll
ds
inc
add
movsb
aad
adc
out
test
addr16
jae
pusha
icebp
lock
and
xchg
adc
repz
push
xchg
jp
add
cmpsl
stos
sbb
push
inc
mov
out
sbbl
incl
jle
mov
lcall
test
shrb
in
out
negl
pop
aad
sub
xor
cmpsb
pop
or
dec
sarb
push
add
xchg
jl
dec
sbb
pop
or
mov
mov
scas
stos
test
sbb
pop
ficompl
pop
and
push
lds
add
ja
inc
sub
out
int3
in
jmp
jmp
rolb
addr16
out
subl
add
pop
dec
adcb
cli
aam
sti
push
loop
shlb
dec
adc
jmp
push
fcmovne
int
repz
xchg
fs
je
mov
jbe
mov
or
jb
or
inc
test
orl
mov
jno
pop
hlt
ja
mov
or
sub
jle
sbb
push
push
xchg
xchg
test
inc
js
out
mov
int3
dec
mov
sbb
push
cld
pop
aas
mov
cli
outsb
js
cwtl
jmp
or
and
nop
in
jp
mov
in
es
sub
lret
inc
xor
jae
push
or
add
sbb
or
ret
aaa
fadds
jecxz
push
out
outsb
dec
push
xchg
pop
rclb
sub
xchg
outsb
sbb
icebp
cmp
push
xchg
mov
jne
cli
push
out
pop
in
enter
push
xlat
xchg
loopne
stos
out
jg
push
in
and
test
mov
es
sar
jo
dec
jl
jo
pop
rcrl
cmp
stc
sub
fisubrs
rol
cmp
cmp
pop
sti
notb
sbb
pop
cmpsl
addb
jne
cmp
xchg
clc
push
cmp
jbe
outsl
in
clc
inc
or
test
sti
sbb
pop
mov
sbb
dec
add
cld
adc
aam
hlt
or
fmull
cli
xor
lock
sti
push
in
mov
rorb
jge
adc
push
mov
cs
mov
pop
scas
push
popa
call
mov
and
aam
outsl
cld
xchg
push
test
xorl
loop
roll
adc
mov
call
pop
cmp
sbb
stos
insb
out
hlt
dec
mov
mov
pop
jns
push
idivb
pop
movsl
xchg
aas
shlb
cmp
mov
xor
insb
orl
add
or
cmp
bound
repz
aad
push
popf
ja
push
movsl
xor
mov
sahf
stos
sub
or
icebp
dec
repnz
arpl
inc
xchg
xchg
sti
or
mov
inc
mov
mov
sbb
xchg
push
lret
or
and
inc
xor
rolb
rorl
mov
xchg
add
fistpl
adc
outsl
push
xlat
test
ds
inc
mov
xchg
loope
jae
in
jp
stc
daa
pop
aaa
cmp
xor
fwait
insb
mov
aam
popa
ja
enter
loope
testl
xchg
mov
ljmp
cmpsb
pushf
rorl
mov
stos
xor
mov
loop
in
daa
jg
aaa
xor
jmp
imul
repnz
xor
fnstenv
in
xchg
or
xchg
ret
dec
xor
xchg
jge
divb
fwait
std
pop
cltd
sub
add
into
shl
mov
ret
in
mov
icebp
jbe
adc
scas
jnp
pop
inc
cmp
bound
mov
xchg
inc
int3
sarl
mov
mov
arpl
mov
adc
mov
or
sub
and
das
push
add
ja
hlt
or
aaa
nop
xchg
xchg
or
in
mull
inc
ret
out
fldl
ds
jg
jg
cmpsl
mov
xchg
lcall
mov
push
jns
pop
mov
imul
shlb
and
push
orl
stos
add
add
shl
xchg
jmp
into
arpl
aas
pop
xor
pop
mov
xchg
fbstp
repnz
dec
ljmp
xor
xor
mov
aas
xor
xchg
xor
or
imul
into
cmpsb
mov
ret
jns
dec
popa
sub
jno
pushf
cmp
pop
pop
cmp
sub
lock
fsubrs
test
shll
je
add
adc
push
outsb
mov
inc
loopne
cli
push
xor
es
addl
jmp
mov
mov
cld
test
mov
xchg
jle
or
cmpsl
imul
sbb
pop
xchg
bound
pop
jge
jnp
dec
idivl
xchg
mov
mov
paddd
fistpl
mov
or
in
fsubs
lahf
push
pusha
lds
pop
aam
cmc
addl
cmp
in
out
dec
sbb
loop
inc
imul
push
adc
loop
lds
arpl
mov
mov
pop
inc
clc
frstor
jecxz
arpl
xor
sub
adc
xchg
cmp
outsl
push
rcrb
test
mov
shrl
std
repnz
and
cmp
xchg
jmp
enter
fs
xchg
scas
pop
sub
sub
adc
xchg
lret
dec
insl
rorl
cwtl
sub
dec
xchg
rcl
lret
in
mov
jnp
call
leave
movsl
and
daa
gs
xor
mov
mov
lret
fstl
rcrb
and
xor
pushf
imul
push
insl
pop
add
sub
lods
xchg
into
test
inc
pop
pop
push
pop
jmp
cmpsl
push
in
add
add
daa
sbb
mov
sub
fldt
cmp
or
in
push
jle
outsb
jo
fdivr
pop
sti
iret
sbb
add
sbb
cmpb
cmp
les
test
mov
or
mov
cwtl
dec
or
out
mov
or
lods
adc
daa
inc
aas
fsubp
insb
leave
or
movsb
pop
xor
fstpl
push
js
js
xchg
mov
movsl
mov
pop
mov
or
sub
aas
leave
mov
dec
push
jg
mov
fisttpll
test
push
test
mov
or
sti
stc
nop
icebp
out
out
aas
test
mov
int
cmp
call
jge
pop
call
sub
mov
shl
mov
and
adc
inc
jp
jp
and
xor
dec
push
lahf
rol
js
mov
jle
mov
mov
push
cmp
cs
das
pop
add
mov
lret
cmp
movsl
sub
lods
iret
loop
mov
addr16
stos
push
mov
push
cwtl
push
loop
and
lds
sub
ret
add
pop
cli
inc
out
and
push
push
sar
xchg
test
or
push
jecxz
mov
inc
daa
xchg
cld
sbb
fs
cmp
mov
mov
push
inc
cld
or
add
add
mov
lahf
aad
xor
inc
stc
fsubrs
loopne
fbld
xor
dec
stos
jae
xchg
ret
sbb
mov
inc
lds
dec
data16
leave
or
cmp
lea
push
push
push
loopne
dec
pop
adc
pop
sarl
test
out
fiadds
jnp
add
mov
fistpll
and
mov
mov
cs
xchg
decl
pop
sub
out
adc
pop
mov
leave
lcall
cmpsb
jp
lock
or
nop
cmpsl
mov
inc
test
xchg
lcall
dec
lods
sbb
add
cmc
repnz
shll
jg
xor
jl
fcmovb
stos
jne
and
sbb
stos
adc
loopnew
out
push
mov
enter
add
pop
shlb
cmpb
cld
inc
push
movsb
cmpsl
push
scas
call
in
cmp
test
in
add
adc
push
xor
xor
jbe
cmp
movsl
cmpsl
mov
adc
xlat
mov
aas
dec
add
jbe
sti
roll
xor
push
imul
mov
mov
cmp
xchg
lods
pop
leave
push
lds
negl
cmpl
test
fbld
jmp
jg
data16
push
xchg
adc
mov
lds
and
pop
mov
cmp
bound
mov
into
mov
test
jo
aas
mov
and
jg
sbb
test
aam
inc
out
push
jbe
lahf
sbb
pop
cmpsb
mov
fs
mov
push
xchg
adc
xor
pop
lret
adc
inc
fdivr
fisubs
sbb
inc
push
nop
push
shrl
lea
cmc
ret
pop
add
rclb
jp
leave
popa
mov
and
xor
cmp
jno
out
jmp
in
pop
fdiv
lock
xorl
lds
cmp
mov
ror
pushl
cmpsb
or
movsl
jb
inc
or
or
push
xlat
sbb
dec
push
adc
pop
mov
mov
lock
dec
sbb
xor
fimuls
jg
pop
cmp
mov
mov
repnz
gs
aaa
shrb
lds
lock
iret
push
mov
dec
stos
sarl
xor
push
cltd
xchg
xchg
dec
mov
push
ret
outsb
lea
sub
fs
orb
push
loopne
and
or
xchg
mov
add
pushl
idivb
test
add
or
or
loope
jbe
arpl
pop
lds
dec
je
mov
pop
movsl
xor
fwait
mov
mov
jge
das
cwtl
mov
xchg
and
into
shrd
arpl
mov
mov
repz
jnp
fldcw
dec
cmpsb
lods
test
cltd
dec
incl
lods
cmp
jnp
arpl
fs
pop
mov
lcall
into
jmp
cli
xlat
test
dec
add
xchg
adc
and
lret
mov
pop
sarl
or
pop
fsubrl
sbb
mov
lea
and
mov
lds
mov
lret
pop
test
sub
out
xchg
fbstp
inc
inc
or
pop
outsb
frstor
popf
sarb
cmp
shrl
loop
push
popl
aad
jle
adc
mov
lahf
or
data16
lds
jp
dec
push
popf
adc
cmp
xchg
shrl
cmpsl
dec
or
sub
push
pop
loopne
xchg
je
and
and
loope
pop
dec
pop
mov
mov
jle
or
mov
aam
into
mov
adc
adc
jbe
jecxz
into
out
cmp
int3
and
cmp
and
lret
dec
icebp
mov
fsub
js
push
push
inc
movsb
sti
addl
test
mov
push
int3
les
xchg
iret
and
dec
push
enter
sub
lock
push
dec
jnp
cwtl
xchg
rcrb
sbb
jbe
push
sbb
repz
into
bound
pop
daa
pop
in
nop
dec
adc
es
push
pop
sbb
ret
cltd
push
hlt
loope
push
fnstcw
push
sub
ja
sub
and
push
push
and
jns
stc
cmpsl
aad
xchg
cld
scas
jp
add
movsb
fcmovu
cmpsl
insb
push
adc
mov
xchg
xchg
pop
loop
push
ret
sub
loopne
aad
xor
rcrb
cmpb
jnp
sub
into
test
mov
addr16
enter
or
into
dec
pop
mov
mov
inc
inc
aad
pop
into
sbb
ds
std
stc
and
cwtl
mov
and
and
mov
int
xor
jae
mov
or
add
lds
xchg
shll
inc
mov
dec
inc
fldcw
fidivrs
jl
add
imul
push
mov
cltd
shrb
and
push
test
sub
sub
dec
repz
mov
cld
ret
mov
mov
jmp
shll
or
sub
push
pop
dec
or
icebp
xor
lcall
adc
dec
test
pop
pop
clc
dec
outsl
mov
jo
ficoml
push
xor
jae
adc
out
out
cld
cmp
mov
je
push
notl
outsl
cltd
sbb
xor
cli
sbb
mov
lcall
jae
push
in
jge
ret
xor
lcall
popf
xchg
ljmp
leave
adc
mov
es
xor
mov
mov
or
in
sbb
xchg
xchg
mov
mov
push
loope
lret
dec
or
jp
lock
imul
lock
and
mov
mov
int3
mov
pushl
idivb
mov
dec
ds
sbb
xor
or
mov
imul
sub
dec
out
xchg
fcmovne
test
movsl
mov
ds
push
iret
and
out
in
sub
ficompl
xchg
or
mov
das
cltd
push
mov
jb
movsb
test
jo
popf
movsl
dec
loope
scas
cmp
loopne
vrcpss
mulb
inc
jg
push
xor
cld
dec
xchg
leave
jge
scas
push
pusha
push
mov
and
mov
jae
call
imul
mov
adc
inc
push
lock
insb
and
out
popf
or
jnp
sbb
leave
jle
shrl
sbb
cmp
jecxz
insb
call
int
push
mov
and
incl
mov
add
add
mov
cmp
clc
loope
sbb
sub
adc
xchg
mov
jbe
mov
ljmp
adc
pop
stos
xchg
out
push
jg
jae
movsl
pop
adc
movsl
int
in
xor
movsb
inc
push
xchg
in
movl
adc
sarb
out
pusha
rol
frstor
pop
imul
int
jnp
lcall
outsl
pop
test
ds
addr16
xor
fdivl
mulb
into
sub
pop
mov
adc
add
js
push
adc
add
sahf
xlat
mov
aad
pusha
cmp
cltd
mov
dec
xor
cmp
stos
xor
push
sub
cmp
sub
push
jle
andl
imul
inc
clc
dec
inc
inc
jns
jo
pusha
jmp
xor
ret
mov
cli
insb
setae
cmc
rcrl
lret
in
dec
rcrb
mov
adc
scas
fcomi
jg
push
scas
dec
js
shrb
icebp
es
pop
jge
sub
xchg
push
pop
inc
mov
pop
push
cwtl
dec
mov
mov
add
rcrl
ret
dec
cli
loopne
push
repnz
js
xchg
cmp
inc
xor
or
aaa
and
adc
stos
fcoml
xor
cwtl
cmpsb
mov
lcall
outsb
test
add
xchg
pop
jle
pushf
lock
fmull
cltd
xor
popf
test
add
push
es
ret
out
mov
xorl
push
jb
cld
mov
aas
or
push
pop
loop
fisubrs
lret
sub
mov
jo
cmp
push
scas
pop
xchg
mov
pop
jp
xchg
sub
pop
mov
or
lret
xor
pop
mov
clc
sbb
dec
cmp
adc
inc
stos
int3
int3
fwait
pusha
sbb
scas
pop
es
push
mov
aam
adc
add
aaa
and
in
cmp
xchg
out
pop
ja
jmp
jo
sub
dec
pop
push
add
call
inc
xor
ja
xor
jp
and
stos
and
imul
sar
add
shl
mov
pop
lods
repnz
inc
in
jle
sub
aam
int
fldl
mov
pop
adc
fcomp
mov
outsb
inc
loope
sahf
sub
std
out
sarb
scas
outsl
mov
aas
popf
adc
mov
xchg
stos
outsb
push
cltd
dec
pop
sti
and
mov
push
lcall
xchg
cltd
mov
or
loop
loop
xchg
and
xchg
sbb
push
dec
fs
in
std
clc
dec
xchg
add
lahf
push
aaa
out
rcrl
stos
leave
rorl
andl
lods
xor
fnstsw
sub
sbb
shlb
pop
rolb
outsl
insl
mov
push
push
xor
fdivrl
loopne
add
lods
into
ret
jmp
add
leave
stc
pushf
cmpsb
mov
sbb
pop
sahf
clc
mov
xchg
mov
das
repz
xchg
outsl
lahf
push
js
pop
fidivrl
xchg
test
in
rorb
and
sub
xchg
sub
ficompl
lahf
ret
push
xchg
mov
sub
arpl
push
and
push
jge
cmp
jns
jb
or
loopne
cli
sar
repnz
sarb
mov
lret
adc
mov
mov
xchg
dec
jae
loopne
xchg
stc
mov
or
push
stos
mov
mov
add
jo
in
adc
int3
loopne
cmp
fs
out
rcrl
scas
test
subb
in
jno
add
dec
add
movsl
lock
stc
clc
adc
jo
jmp
pop
lods
cmp
testb
pop
jae
cld
pushf
dec
cmp
test
xor
aas
test
lahf
ror
jo
dec
and
jbe
dec
sub
iret
gs
adc
pop
aam
push
or
popf
das
xchg
loopne
mov
test
inc
xchg
pop
and
movl
aad
dec
aas
bswap
sti
inc
test
cmp
push
lahf
cmp
xchg
adc
lock
fildll
sbb
movsb
pmaxub
lds
adc
push
dec
adc
inc
dec
dec
repnz
stos
pop
push
fisttps
xchg
xor
sarl
insl
ror
icebp
xlat
and
and
push
jbe
orl
iret
imul
or
push
cmp
push
ds
fstl
ds
push
test
lcall
cltd
icebp
add
jl
loope
popf
pusha
jecxz
in
insl
insb
nop
iret
stos
das
pop
mov
jg
fists
pop
cld
adc
bound
cld
adc
cmp
ret
xchg
loopne
dec
iret
add
inc
sub
int3
repz
cmp
push
mov
and
inc
pop
mov
pop
jl
loop,pt
mov
jne
insl
xchg
sub
add
mov
loope
shlb
jo,pn
loop
pop
lods
jmp
in
rorl
scas
sub
inc
dec
or
or
dec
sarl
push
pop
or
pop
frstor
lret
imul
dec
cmp
test
xor
leave
bound
ja
js
repz
mov
and
aam
mov
add
jbe
loop
and
sub
testl
push
lret
mov
sub
ja
dec
leave
movsl
adc
les
hlt
adc
jp
jl
out
andl
sbb
lret
dec
cli
mov
xchg
mov
das
bound
hlt
push
movl
mov
adc
push
dec
xlat
inc
ret
mov
out
inc
xchg
mov
mov
out
jae
cmp
loop
dec
into
adc
js
adc
jnp
in
pop
push
pop
xor
movsl
stc
dec
pusha
lea
iret
inc
mov
dec
fildll
rcll
cwtl
xlat
cmp
cmp
aas
sub
loopne
imul
lods
xchg
dec
clc
pop
popa
xor
ret
push
add
roll
repz
cld
pushf
cltd
fs
jne
jp
sarl
and
inc
jo
fcmovu
in
pusha
lret
cwtl
sbb
mov
in
pop
pop
push
lods
mov
push
jb
fildl
loop
addr16
movsl
xchg
dec
jmp
jle
fnstsw
xchg
mov
dec
adc
mov
push
mov
or
cld
add
lea
cmc
pop
xchg
sbb
sti
je
adc
dec
out
pop
jnp
jge
cli
xorl
or
in
jmp
and
arpl
cmpsl
sub
mov
push
mov
xlat
mov
mov
and
rcrl
clc
fcoms
fwait
and
ret
rorb
push
pop
xor
in
push
pop
mov
scas
in
pop
mov
inc
sub
inc
into
mov
push
aaa
dec
jnp
test
xchg
mov
pushf
scas
push
xor
mov
lcall
xchg
lods
out
add
scas
aaa
xor
adc
jae
sbb
or
imul
sbb
push
leave
dec
lock
imul
fcoml
in
fcoms
fsub
out
in
inc
mov
xchg
dec
mov
xor
mov
movb
add
add
or
adc
push
mul
lock
sbb
add
ret
mov
xor
sbb
add
cmc
ud0
sub
les
jno
insl
and
dec
mov
inc
fdivrl
xor
loop
add
imul
fistpl
sub
aaa
les
jmp
pop
ffree
bound
mov
enter
adc
insl
call
mov
sbb
insl
lret
mov
sti
dec
jle
arpl
out
sarb
jmp
xchg
adc
fbstp
jmp
dec
jecxz
rcr
stc
jp
flds
jle
aaa
fnstcw
push
es
decl
fneni(8087
push
xchg
push
xchg
push
sub
leave
arpl
out
ljmp
cmpsb
inc
mov
jge
adc
add
dec
sub
loopne
filds
pop
or
out
shl
sub
xor
std
aad
cli
dec
jmp
sub
sub
mov
scas
les
push
push
cmpsb
jmp
loope
pop
adc
dec
push
push
and
insb
lcall
addr16
loop
or
cmp
mov
dec
inc
in
movsb
notb
adc
adc
mov
cmp
dec
les
add
pop
cmp
pop
mov
pop
in
or
mov
imul
cwtl
fldcw
sbbl
orb
shl
inc
jns
inc
divb
ret
cmp
and
sub
xchg
pop
sub
push
pop
or
fs
ffreep
stos
fcompl
xor
cltd
inc
add
jg
addr16
iret
dec
push
movl
dec
mov
dec
and
call
jb
jecxz
cmpsl
mov
cmc
mov
cmc
fcoms
dec
dec
pop
cwtl
ss
cmpsb
pop
test
adc
rsqrtps
push
pusha
scas
dec
or
loope
insl
inc
dec
mov
push
adc
popa
mov
fwait
xchg
popa
cmp
inc
add
lcall
out
sbb
push
cmp
jb
or
movsb
icebp
cs
adc
subl
push
sbb
loopne
inc
xchg
xor
sarb
es
pushf
add
ret
sub
sbb
loope
push
adc
jo
ljmp
sub
lret
pop
in
or
imul
add
loope
sahf
ljmp
aaa
out
pop
jl
pop
sub
pop
cmp
inc
pop
inc
repz
or
shrb
dec
mov
mov
xor
push
clc
data16
mov
pop
and
sub
and
mov
and
rcll
loopne
cmpsb
popa
ds
pop
push
fwait
xor
insb
stos
pusha
lds
mov
and
mov
in
repz
xor
cmp
arpl
subb
push
es
or
adc
and
sbb
jmp
cmpsb
cmp
pop
xchg
jl
scas
xsaveopt
adc
outsb
mov
jno
rolb
gs
insb
jb
lock
pushf
pop
icebp
into
jne
loope
scas
push
mov
int
push
mov
mov
std
les
sub
stos
lea
in
cmp
add
pop
outsl
and
incb
inc
movsb
and
push
xor
xchg
das
lcall
pop
mov
lds
scas
cmp
mov
xlat
jle
in
mov
cwtl
xchg
or
imul
and
jp
push
popa
and
mov
icebp
loope
lods
jmp
or
sub
mov
push
xchg
inc
rcll
in
cmp
jnp
hlt
out
shlb
enter
jmp
add
scas
ret
push
sub
adc
mov
inc
mov
pop
repz
xlat
mov
xor
bound
jle
mov
rcr
adc
xchg
addr16
int3
das
sbb
xor
pop
into
in
mov
mov
mov
add
mov
fdivrl
xchg
xchg
outsb
mov
dec
stos
dec
jae
sub
sbb
pop
js
out
xchg
insl
push
vphsubbw
ret
in
addr16
cmpsl
mov
incb
mov
xor
mov
in
push
push
pushf
xor
adc
imul
push
out
cmp
xchg
sbb
imul
loop
xchg
frstor
bound
jb
je
imul
inc
out
push
ja
jne
fwait
jecxz
and
iret
popf
jecxz
jno
mov
imul
jge
iret
fmull
pop
jbe
outsl
mov
clc
mov
inc
or
sbb
jo
stos
dec
push
repz
push
or
lret
add
lahf
pop
push
push
xchg
push
mov
mov
imull
iret
mov
hlt
repz
aas
sbb
sbb
and
and
jne
incb
jns
outsb
mov
aad
out
or
pop
adcl
lcall
sbb
pushf
sbb
clc
in
jl
scas
pop
inc
or
inc
push
in
cmp
ljmp
sbb
imul
int
push
fcoms
mov
cwtl
jg
dec
je
iret
test
mov
push
lds
xchg
mov
mov
mov
fdivrl
mov
subb
stc
sbb
jp
jno
add
xor
xor
xchg
cmpl
push
push
mov
jle
movswl
scas
arpl
sub
xchg
xchg
lds
pop
insb
subb
inc
push
repz
insl
push
iret
push
mov
out
loopne
sbb
ljmp
aad
mov
jmp
sub
es
daa
addr16
stos
push
or
inc
aam
inc
mov
test
enter
xchg
aaa
mov
fcompl
aas
sbbl
jnp
mov
pop
aas
leave
xchg
addr16
or
mov
les
cld
push
lock
inc
mov
sbb
pop
sbb
jo
mov
pusha
push
orb
sbb
adc
mov
jne
inc
xchg
jnp
xchg
cmpl
jp
inc
jl,pt
jmp
push
ljmp
adc
test
push
je
jle
imul
jb
outsl
dec
mov
or
popf
jbe
arpl
dec
xor
xor
cmp
push
jb
lods
mov
ss
dec
sbb
dec
pop
roll
icebp
ret
push
xor
dec
clc
pop
int3
pop
mov
and
pusha
sub
and
mov
push
xor
sub
push
inc
pop
dec
and
and
inc
imul
pusha
or
sub
push
insb
inc
mov
loopne
aad
mov
pop
mov
jmp
cmp
adc
sub
add
adc
mov
add
movsb
inc
add
pusha
and
jmp
fistpl
pop
gs
sub
ror
add
enter
push
and
pushf
decb
in
push
jne
pop
and
fmul
xlat
xor
ljmp
and
data16
into
push
mov
push
adc
jns
jo
sbb
inc
push
inc
insb
jnp
test
fs
cmpl
out
in
imul
jmp
jns
dec
inc
sahf
xchg
fwait
inc
sub
mov
iret
hlt
inc
mov
pop
pop
inc
push
lcall
outsb
adc
pusha
adc
jno
mov
mov
inc
lds
mov
ljmp
outsl
sar
outsb
push
add
add
push
in
mull
roll
sbb
or
pop
in
aaa
daa
push
cmp
cmp
mov
ret
push
fnstsw
sti
jg
push
xlat
data16
neg
inc
push
in
dec
pop
jbe
jb
add
jne
movsl
lahf
inc
mov
pusha
xchg
fldl
mov
xor
scas
pop
mov
sbb
sti
sub
addb
aam
dec
sbb
pusha
incb
dec
mov
fildl
cmpsl
push
dec
jmp
xchg
mov
aad
hlt
mov
ds
test
push
cmp
lret
pop
mov
lret
sub
rcrb
bound
test
cmp
push
aad
popf
jle
lods
sarl
fsubrp
adc
jecxz
mov
insl
sahf
imul
mov
fimull
cmpsb
mov
lret
loop
push
lods
cld
fimull
xchg
ja
mov
jbe
adc
add
lcall
mov
sub
push
in
sub
popa
cmp
add
push
push
sub
adc
pop
sub
add
pusha
loop
aas
mov
cmp
jecxz
ficompl
in
push
xor
lret
dec
mov
cli
inc
cmp
xchg
mov
aam
xchg
adc
sbb
xchg
fcmovnu
andb
pop
repz
into
daa
ds
daa
sbb
addr16
and
cmp
adc
push
adcb
ljmp
sub
cmp
push
daa
les
mov
outsl
jb
jno
jnp
mull
aaa
xor
mov
mov
mov
jb
dec
dec
dec
insb
fidivl
jl
cmpb
mov
test
sbb
cmpsl
aam
jo
and
inc
add
push
fistpll
cmpsb
mov
and
pop
or
out
add
and
mov
vpmulhuw
clc
dec
sbb
or
pushf
xor
imul
in
popl
data16
mov
mov
mov
sub
sahf
cmp
jmp
mov
es
mov
mov
cmp
xchg
arpl
dec
cmp
inc
stos
int3
sti
cld
bound
sahf
sbb
lret
mov
mov
push
ja
mov
adc
pop
adc
cmp
aaa
or
in
add
dec
push
sarl
adc
mov
jle
cs
mov
xor
pop
xchg
sub
fidivrs
mov
lret
mov
popa
adc
decb
lock
cmp
rol
scas
stc
iret
jmp
jmp
pop
lods
aad
outsl
adc
ds
xchg
xchg
fisubs
int3
aad
mov
push
outsb
cld
adc
sbb
outsb
push
jne
sar
lds
andb
out
pop
or
pavgw
pop
xor
mov
mov
sbb
cmp
fnstcw
mov
hlt
mov
gs
add
in
or
lods
aam
popa
cwtl
adc
push
xchg
cltd
stos
sbb
pop
cmc
jg
iret
sbb
or
mov
test
pop
xchg
std
cltd
inc
and
push
lods
pushf
insl
lret
fiaddl
dec
inc
inc
sbb
xchg
cmpsb
es
insl
add
sbb
mov
je
or
aam
dec
mov
xorl
cld
int
out
repnz
out
jnp
sbb
lret
sbb
popa
xor
push
iret
mov
fists
aas
sarl
in
orl
xchg
ja
fildll
jg
inc
sbb
ret
and
repz
xor
jle
aas
and
les
out
insl
fildl
pusha
cmp
xor
mov
sti
mov
int3
aad
xchg
adc
mov
pop
mulb
adc
fistpl
cmp
adc
ss
inc
mov
test
into
test
jo
js
scas
pop
popa
xchg
call
mov
sti
cmpsl
mov
movsb
stc
ret
sub
pop
dec
mov
mov
or
test
scas
ret
stc
test
cltd
dec
cvtpi2ps
pop
or
test
dec
add
mov
pushf
in
data16
or
push
loop
mov
ret
push
or
mov
adc
mov
sub
push
sbb
dec
lods
pop
ds
cs
xor
inc
lock
in
in
xchg
cmp
and
mov
out
mov
xor
fcom
shrl
ss
je
cmp
ja
sbb
popf
in
lret
je
jb
lret
add
or
ja
pusha
sbb
xchg
cltd
lock
cmpsl
jbe
jle,pn
add
hlt
mov
inc
dec
leave
std
lcall
sbb
sahf
es
inc
roll
mov
mov
testb
push
jecxz
add
sub
jae
mov
test
jle
scas
ficoms
jmp
jecxz
push
clc
xor
inc
cs
repnz
cmp
xchg
arpl
dec
in
jmp
add
hlt
xchg
jle
push
xchg
cwtl
into
int
sub
pop
inc
push
inc
dec
or
pop
cmp
or
lods
xor
xor
popf
mov
cltd
jl
fs
jl
add
dec
dec
ror
inc
push
push
adc
cmp
mov
lcall
jge
rorb
imul
int
test
push
lock
cwtl
cmc
sbb
inc
mov
cmpsb
mov
push
std
xchg
pop
repz
push
mov
outsb
aam
stos
fldcw
icebp
popa
cmpsl
test
xchg
ret
pop
mov
in
push
and
call
ror
add
orl
in
popa
xchg
and
out
pop
dec
insb
push
pop
cmp
fwait
push
daa
lds
es
sub
mov
mov
pushaw
scas
mov
pushf
and
loop
loope
shll
fstps
push
jne
adc
jmp
cmp
dec
scas
cmp
imul
clc
jge
mov
sbbl
lods
rorb
lock
in
mul
sti
inc
adcl
lret
mov
nop
ljmp
popa
lods
test
les
cli
adc
and
jnp
je
jns
push
insb
push
push
lcall
cmpsb
pop
cmp
sbb
fsub
loopne
adc
xor
or
and
sub
xlat
fcom
gs
jne
test
enter
stc
and
in
jo
outsb
imul
aad
pop
loope
mov
sahf
push
loop
iret
imul
add
dec
push
js
pop
dec
sarl
jmp
insl
adc
mov
inc
pop
or
mov
xchg
inc
shrl
insb
cmc
ja
push
jb
jmp
lea
aaa
stos
outsb
popf
scas
rcll
aaa
xlat
pushf
fs
inc
cmpsb
sub
gs
sar
cmp
cli
lods
and
xor
scas
je
test
jno
add
sbb
aam
stos
popa
inc
pop
mov
xor
je
inc
mov
add
mov
jns
shlb
pusha
mov
ljmp
out
cs
inc
xor
fimull
xor
xchg
or
pop
mov
insl
je
mov
orl
loopne
cmpsb
add
bound
rorb
lock
push
inc
sub
jge
cmpsl
rclb
xor
xor
cmpsb
outsb
sub
scas
mov
add
and
in
rcrb
mov
jmp
push
xor
pushf
fwait
dec
mov
dec
into
mov
inc
mov
sub
test
or
mov
xchg
test
xor
cmp
jne
sbb
xchg
ret
jle
dec
lret
cmp
insl
lret
push
push
sbb
pop
mov
jmp
call
mov
inc
imul
pop
pop
pop
pop
aas
test
or
sub
cmp
mov
dec
inc
stos
sub
repz
enter
xor
aas
xchg
adc
loop
aaa
call
ja
xor
xchg
adc
mov
addl
mov
xor
aam
sub
imul
pop
mov
sbb
mov
test
jne
inc
adc
cmp
imul
int
stos
test
push
xchg
pop
in
fcompl
lcall
out
cmp
mov
sbb
fcoml
iret
js
fmull
imul
test
gs
cmp
sbb
subb
push
fmul
dec
inc
mov
and
aad
repz
adc
xor
outsl
and
cmp
std
pop
mov
fisttpl
push
lret
sbb
fwait
subl
mov
outsb
mov
dec
and
and
and
rorl
scas
enter
gs
cmp
jecxz
outsl
xchg
aad
in
mov
mov
out
mov
xchg
ss
push
frstor
mov
in
mov
adc
add
dec
cmp
shlb
push
add
push
and
dec
out
leave
or
call
insl
das
test
jecxz
lds
xchg
sub
icebp
hlt
mov
xor
test
cmp
addb
mov
adc
pop
sub
inc
test
mov
loop
adc
into
pop
std
sar
or
das
insl
enter
xchg
or
enter
cmpsl
push
xchg
hlt
push
scas
aaa
stos
cmpsl
std
sbb
or
add
pusha
xor
pop
sub
add
outsb
jg
or
xor
movsl
test
jo
mov
adc
aad
scas
jae
fistpll
fldt
sbb
les
icebp
push
fwait
daa
addb
lret
push
dec
orb
inc
mov
jnp
jb
lret
incb
and
or
jge
dec
xor
cltd
xchg
cmp
mov
andl
cmp
push
push
mov
das
pop
fdivrl
repz
in
mov
dec
mov
push
dec
repz
loop
pop
inc
dec
pop
pop
mov
test
insb
out
mov
push
pop
push
jecxz
mov
pop
ljmp
je
nop
mov
scas
mov
sti
test
outsb
ja
sbb
push
leave
jne
push
call
dec
mov
xor
fisubrl
jno
jae
outsb
shll
xchg
cwtl
subl
mov
and
mov
ja
icebp
rcll
sbb
clc
push
stos
or
xchg
mov
push
push
jnp
jns
cmpsl
das
daa
jbe
mov
mov
push
divl
mov
loopne
call
push
or
xchg
fiaddl
cli
out
cmpsb
lahf
dec
mov
adc
xor
outsl
popf
jge
hlt
xchg
lods
ljmp
pop
add
xor
push
push
lcall
push
daa
mov
add
cmpl
les
or
add
sub
jo
lock
outsb
sbb
jb
adc
dec
ds
scas
loope
adc
orl
stos
jle
adc
and
out
jg
pop
scas
shrl
adc
push
push
sbb
xchg
mov
ljmp
js
call
inc
fsub
leave
xor
mov
loope
lods
dec
add
cmp
out
jbe
sbb
rorl
fsubrl
cmp
jmp
in
or
loope
mov
add
lret
xchg
mov
inc
mov
adc
inc
and
pop
les
inc
sub
jmp
xchg
xchg
xchg
shll
xor
or
shrl
loop
and
adc
cmp
mov
nop
sbb
jne
and
pop
out
std
mov
inc
andb
nop
xor
sub
into
mov
daa
push
push
hlt
jmp
es
cltd
sub
mov
push
jno
ss
mulb
adc
pop
sub
arpl
dec
test
mov
lret
fwait
hlt
or
fmulp
insb
les
inc
sahf
ja
fimull
lock
cmp
test
jle
mov
dec
lods
cmp
stos
js
imul
jecxz
fs
call
out
mov
or
mov
jl
xor
xchg
push
and
testl
xchg
xchg
lret
jae
vpcmpgtb
ljmp
js
into
aaa
jne
scas
cmp
scas
jbe
jmp
xor
jno
int3
repnz
xchg
mov
cmpsl
add
cli
fdivs
faddp
in
movb
xor
roll
pushf
pop
mov
pop
das
dec
jne
pop
lods
icebp
push
movsb
xorb
int
dec
dec
xchg
addl
mov
jecxz
lret
mov
data16
pop
mov
popf
pusha
mov
dec
jg
shlb
ss
lods
adc
mov
jbe
int3
mov
faddl
mov
push
sub
mov
xchg
pushf
push
jg
pop
andb
daa
jnp
cmp
int3
ret
fisttpll
add
xchg
jb
imul
inc
cltd
fisttpll
mov
mov
fistl
orl
nop
in
push
xchg
out
scas
outsb
xchg
lea
push
pop
or
xchg
and
pop
xorl
aam
push
or
jbe
dec
jne
dec
push
add
sbb
jp
pop
loope
mov
pop
daa
clc
notb
jno
adc
sbb
and
nop
or
clc
mov
pop
cs
ss
dec
enter
aad
mov
adc
popa
jp
cli
testl
push
xchg
ja
mov
rcrb
test
push
xor
imul
in
mov
adcb
insb
imul
jbe
insl
cmp
pop
dec
push
jge
mov
in
mov
mov
dec
sub
out
xor
sbb
and
das
add
loop
mov
push
xorb
xchg
out
les
and
mov
jo
inc
or
stos
movsl
and
adc
dec
pop
xor
call
sbb
cmp
xchg
mov
out
movl
mov
jno
mov
lea
sysexit
sti
add
enter
or
adc
cld
adc
jecxz
sbb
or
pop
mov
outsb
jmp
ljmp
jbe
les
sub
gs
mov
sahf
xchg
mov
mov
adc
outsb
mov
int3
mov
jnp
movsl
pop
ja
mov
fistpl
decw
push
add
xchg
sbb
jbe
int
jno
jbe
icebp
outsl
lock
aad
dec
stos
pop
dec
adc
pop
mov
popf
mov
jg
lahf
es
arpl
push
dec
iret
dec
pop
movsb
push
gs
dec
sbb
inc
cmp
std
out
jnp
out
sub
mov
out
ljmp
shll
or
les
daa
ret
pusha
sbb
or
jle
jl
div
dec
cmp
pop
xlat
fcomi
sbb
sti
inc
or
jb
enter
out
mov
aad
xor
pop
xchg
pmulhuw
and
xchg
fisubl
in
es
lret
mov
mov
push
shlb
fisubl
xchg
gs
add
xchg
mov
subb
add
out
shll
enter
stc
js
sub
pop
ljmp
pop
lcall
cld
mov
cmp
test
xor
cwtl
testl
pop
cmp
or
int
call
sahf
int
pusha
cli
sbb
jecxz
and
lret
sub
roll
mov
nop
add
mov
sub
lahf
push
sbb
add
xchg
xor
mov
push
mov
shlb
sar
xchg
repz
inc
inc
mov
shll
mov
and
gs
xor
arpl
adcl
mov
adc
adc
ret
or
loop
inc
outsl
mov
xstore-rng
cmpsl
add
xchg
aas
fmull
aam
mov
inc
adc
insl
pushf
test
adc
insl
out
sbb
int
es
arpl
cmc
loopne
push
lods
push
arpl
rcll
insb
and
xor
mov
in
mov
inc
lods
cmc
mov
mov
push
scas
clc
loopne
adc
leave
xchg
lock
xor
xchg
rcrl
dec
push
or
xchg
out
push
sub
jo
mov
jle
pop
call
scas
xchg
pop
ja
ficomps
sub
dec
mov
sub
dec
insb
ret
fidivrs
add
push
dec
xorb
pop
or
mov
fwait
xchg
jge
push
cmc
frstor
mov
fmuls
fs
fstpt
mov
inc
sub
es
leave
mov
es
or
or
or
push
aad
push
and
mov
das
imul
mov
sub
ret
loope
xor
push
sbb
mov
mov
test
sub
popa
mov
addr16
fwait
cld
sub
xchg
jge
clc
stc
cmp
xchg
mov
add
dec
cltd
cmpb
pop
popa
dec
mov
out
dec
popf
aaa
addr16
add
in
push
sbb
mov
mov
mov
xchg
addr16
inc
stos
mov
push
test
dec
push
aad
cmp
mov
sbb
inc
inc
outsl
pushf
icebp
mov
es
mov
cmp
lahf
ds
xor
test
aas
or
mov
push
scas
cmp
shlb
push
or
jge
es
mov
pushf
mov
lret
mov
neg
insb
and
pop
leave
and
adc
jmp
gs
aam
ljmp
cmp
mov
repz
adc
fwait
dec
mov
cmp
mov
and
inc
push
sbb
or
testb
pop
cs
push
sar
sbb
jnp
or
loopne
lea
and
ljmp
jno
aaa
in
mov
sbb
xchg
stc
arpl
mov
std
les
in
pop
mov
pop
ficompl
cmpsl
ljmp
aas
or
dec
xor
ljmp
sub
lock
xchg
push
push
iret
jp
lahf
shll
mov
ret
fs
mov
les
addl
adc
test
or
outsl
dec
sti
mov
push
lock
iret
fnsave
mov
xchg
cld
mov
idiv
shr
dec
cld
pop
dec
mov
jae
and
cmp
sahf
xor
cwtl
sbb
fwait
mov
sub
xchg
int3
popa
bound
fdivrs
testl
sub
leave
mov
adc
lock
jle
cmp
xchg
fadds
out
or
mov
imul
imul
cmp
lret
orb
lahf
iret
jmp
push
and
xorl
or
shll
roll
and
sti
aad
lock
int3
cmc
jl
sbb
call
mov
ret
jnp
pop
int3
mov
sbb
es
pop
inc
pushf
shll
rol
and
sbb
dec
stos
sub
add
cs
jb
cltd
pop
push
mov
jbe
clc
push
mov
dec
mov
mov
sub
out
inc
movsb
lds
addr16
lods
inc
fs
push
jae
push
dec
or
data16
inc
aas
jo
fdivp
sbb
dec
testb
xchg
adc
mov
lahf
dec
ficompl
dec
or
push
xor
stos
jns
or
aas
andb
fbld
mov
sub
aas
and
mov
cli
xor
jmp
mov
fnstcw
movsb
push
mov
jo
jo
sub
ret
outsl
cmpsl
mov
pusha
xchg
jnp
cmp
flds
rcll
sbb
add
sarb
push
pop
pop
jle
lods
mov
xor
sub
or
in
call
sbb
mov
ljmp
xlat
arpl
lods
in
shll
sti
dec
or
lahf
jne
bound
pop
les
cmpsl
adc
xchg
add
ret
das
mov
cmpsl
std
iret
mov
push
push
mov
mov
in
push
imul
stc
es
mov
adc
push
xor
ret
lock
or
mov
sbb
lahf
inc
jmp
cmp
lock
push
dec
jle
pop
pop
inc
shl
or
into
lea
cmp
inc
in
push
repnz
flds
cwtl
cmp
or
xchg
adc
dec
push
xchg
jno
mov
adc
stc
push
push
pop
push
subps
lret
lcall
aas
test
fstpl
mov
xlat
rcr
xlat
test
idivl
repz
hlt
repz
push
in
icebp
ss
adc
or
sahf
stc
fcomip
ret
loopne
xlat
xor
pop
insl
int3
xor
xor
cmp
shl
mov
out
in
shll
push
pop
pop
sub
scas
bound
ss
test
nop
rolb
ds
aad
fimull
fidivs
mov
pop
adc
stos
aam
test
mov
fs
pop
push
add
jecxz
pop
shlb
out
push
out
pop
or
mov
movsl
test
std
mov
push
push
movsb
out
push
add
jl
fadds
lcall
outsb
js
int3
stos
xchg
xchg
orb
test
mov
sahf
or
pop
jmp
pusha
mov
inc
and
leave
adc
imul
repz
jl
sbb
ret
sub
cmpl
mov
mov
push
pop
adc
popf
movb
mov
jnp
pop
shll
mov
aaa
rcrb
inc
add
dec
movsl
mov
mov
in
int3
inc
mov
or
cld
popf
dec
cmp
popa
pusha
cld
aas
outsb
mov
call
xchg
aam
sub
mov
test
pop
add
push
inc
movsl
fs
mov
add
lea
in
inc
pop
add
sbb
adcb
cmp
sbb
mov
pop
pop
dec
pop
sti
jne
aas
in
cmpsl
imull
pop
pop
cld
cmpsl
lcall
inc
fnsave
jl
outsb
xor
icebp
stc
sub
pop
sbb
test
int
dec
mov
nop
and
mov
xchg
xchg
xchg
lock
cwtl
mov
out
jo
sub
out
pusha
dec
pop
pop
or
nop
data16
add
adc
pop
imul
and
pop
cltd
mov
mov
enter
xchg
imul
add
hlt
mov
xor
loop
fidivl
and
js
mov
ss
int3
leave
jne
sub
insl
imul
mov
jp
out
fmull
jae
fimuls
xchg
pop
sub
in
in
out
sub
outsb
push
dec
pop
std
enter
mov
pop
ja
xor
insb
jne
popa
push
cmp
ja
into
sub
jno
mov
jp
cmpxchg8b
data16
mov
jmp
sysexit
mov
cmc
push
xchg
push
imul
into
push
mov
jle
enter
addr16
enter
mov
jo
cmp
loop
test
xor
test
jg
mov
sub
or
popf
mov
stos
xchg
mov
jbe
dec
lods
mov
jmp
jecxz
hlt
xor
sti
xor
sbbl
add
insb
fwait
xor
jns
fstpl
push
movsb
xchg
xchg
addr16
pop
adc
mov
jnp
test
movsb
mov
shl
ret
jecxz
sub
shl
mov
push
jge
sbb
aam
xchg
xlat
push
mov
dec
push
pop
daa
mov
ss
dec
cmp
xor
int
xor
iret
cmpsb
jp
and
mov
ljmp
cmp
imull
mov
xchg
imul
or
test
outsl
xor
das
mov
aaa
test
out
popf
jno
shlb
stc
xlat
ret
xchg
mov
pop
es
jp
push
xchg
arpl
push
pop
add
fwait
push
xor
loop
mov
leave
push
push
push
nop
sbb
aaa
loopne
adc
stos
adc
lret
or
adc
fs
inc
ficoml
test
insb
dec
clc
mov
cwtl
rclb
stos
dec
in
inc
push
insl
sub
out
ret
fistpl
fucomip
push
insl
shl
push
cli
cmp
jmp
cmp
lods
xor
xchg
pop
dec
es
xor
loope
jl
out
xorb
adc
mov
popf
ret
pop
jne
das
sbb
divb
jg
in
movb
dec
xchg
sahf
mov
xlat
outsb
test
faddl
xor
mov
xchg
ljmp
push
and
fisttpll
sub
mov
loopnew
ds
scas
pop
orl
inc
imulb
xchg
test
lds
aas
lret
inc
js
xchg
xor
or
xchg
orb
movsb
insb
inc
adc
push
mulb
fsubr
orb
scas
rcrb
jno
iret
fsubl
sub
cld
dec
sarb
fnsave
xor
insb
pop
frstor
xlat
outsb
cmpsl
movsl
into
sub
fs
jl
and
arpl
into
jmp
jge
outsb
pop
add
je
sub
cltd
js
inc
lods
mov
xchg
mov
out
data16
mov
xor
pop
jp
cli
xor
test
fs
add
pop
push
xor
xor
cmp
xchg
lods
inc
jecxz
in
mov
adc
inc
rcrl
push
jle
dec
xchg
cmp
leave
adc
inc
fimuls
icebp
scas
sbb
xor
pop
ret
adc
addr16
xor
jb
incb
flds
mov
lds
jno
das
aas
rorb
add
xor
xlat
pop
jmp
sub
mov
jecxz
mov
insb
orb
xchg
pop
into
xchg
in
cmpsl
stos
cs
inc
adc
aad
imul
jg
adc
inc
jle
fisubrl
gs
mov
sbb
js
pop
mov
push
pop
jge
iret
out
and
inc
in
add
popf
and
xchg
cli
adc
jae
xchg
dec
mov
add
push
jae
int
dec
mov
rcl
mov
push
in
divb
or
inc
sub
stos
inc
ss
mov
inc
dec
ret
mov
mov
lret
pop
shrb
andl
and
ss
mov
mov
push
xchg
mov
ret
jecxz
jle
add
pop
popa
xor
xor
addb
add
lcall
js
xor
fisubrs
cli
dec
call
notl
cld
mov
xor
jns
xlat
fldt
dec
iret
out
out
fdivl
push
adc
test
scas
hlt
pop
adc
jo
sbb
mov
addr16
and
fdiv
cmpsl
shlb
mov
jl
cmp
xchg
test
mov
xor
jmp
push
sbb
jb
shl
js
mov
xor
fcoml
mov
bound
cs
dec
sbb
cli
pop
ds
cwtl
inc
sub
xchg
lret
jne
inc
ds
aaa
sbb
call
push
add
adc
push
xor
xchg
push
or
inc
imul
jno
lahf
repnz
pop
xor
aad
jno
mov
sub
inc
scas
or
loopne
out
sub
mov
fistps
push
xchg
ret
out
outsb
rol
pushf
and
inc
inc
daa
test
idivb
xchg
stos
lahf
jg
outsl
shlb
adc
lods
or
mov
sbb
fiaddl
loop
je
sti
inc
cmp
cmp
sbb
fcmovnu
das
mov
cmp
out
fdivrl
adc
xor
mov
int3
mov
xlat
ret
movsl
jle
test
adc
xchg
lock
and
ss
mov
aas
ljmp
mov
fcomi
mov
lretw
cwtl
and
adc
cmpsl
lret
cli
add
sarb
ret
or
loopne
loop
push
sub
hlt
gs
out
push
ret
sbb
leave
aaa
mov
xchg
outsl
pop
mov
sbb
xchg
jmp
sahf
dec
xchg
ficomps
mov
out
pop
sahf
jge
and
cli
dec
jecxz
insb
sti
imul
xchg
mov
int
mov
push
ja
aas
scas
push
loope
xor
mov
xor
cmc
push
jmp
out
jecxz
mov
in
add
and
inc
scas
jne
lea
pop
pop
bound
pop
jle
out
jmp
fwait
or
aam
bound
arpl
push
mov
fdivs
iret
stos
jnp
cmpsl
test
sub
mov
pop
sarl
add
and
cmpl
gs
sub
or
cmc
xchg
adc
dec
push
pop
add
je
fisubrl
js
sbb
lods
xchg
test
into
push
mov
lds
mov
add
mov
jmp
cld
mov
jae
jb
jmp
adc
xlat
aad
imul
dec
sbb
push
mov
lds
call
out
loope
adc
insb
pop
and
pop
add
or
inc
test
test
scas
stos
push
xchg
enter
sub
dec
mov
scas
jmp
and
and
sub
push
adc
insb
enter
mov
fidivrl
or
jb
and
pop
lret
fisubs
shlb
jo
and
xlat
and
mov
xchg
sbb
and
mov
mov
fstps
jns
sub
jbe
add
ja
lods
push
ffree
inc
mov
cmc
in
cmc
jge
xor
mov
mov
sub
leave
cld
sti
rorb
mov
cmp
jae
xlat
popf
in
cmp
out
push
jbe
push
aaa
loope
xchg
mov
repz
hlt
scas
sti
testb
outsl
sbb
loop
loopne
bound
mov
mov
test
or
mov
ss
dec
inc
arpl
xchg
sti
mov
mov
testl
sub
mov
test
push
icebp
xor
dec
add
sub
scas
aaa
push
xor
imull
frstpm(287
ret
test
fs
mov
test
mov
add
mov
sbb
inc
jp
xchg
imul
push
das
test
aam
jmp
shl
xchg
add
adc
pushf
jecxz
sub
xchg
add
mov
mov
pop
push
mov
cmpsb
mov
push
mov
or
rol
adcb
sub
adc
lret
pop
ret
xchg
leave
add
sbb
popa
xchg
add
pop
or
das
data16
or
push
push
pop
pop
test
lea
icebp
stos
pop
sub
es
fdivrs
iret
ds
lea
and
pop
adc
addr16
aas
out
and
sub
daa
scas
cmp
ror
hlt
mov
pop
jl
add
xchg
int
ficoms
stos
cmp
test
test
push
xor
loopne
sub
lcall
xchg
dec
or
popf
test
adc
arpl
pminub
dec
add
aam
stos
add
mov
mov
mov
jnp
lock
aas
inc
jp
mov
xchg
add
xor
aad
es
popf
mov
daa
in
mov
add
add
imul
ljmp
ljmp
adc
sarl
mov
mov
int3
pop
in
stos
test
leave
jae
out
pop
mov
push
push
cld
jl
addb
xchg
mov
in
add
jg
add
and
xchg
icebp
dec
xor
arpl
add
adc
data16
inc
iret
not
sub
cmp
add
je
xor
lock
rcrb
scas
aas
inc
negb
test
cmpsb
ljmp
daa
add
sti
push
dec
push
mov
fildl
js
les
stos
or
pop
out
jge
out
jne
in
lret
xchg
xchg
addr16
mov
pop
pusha
imul
adcl
xor
ret
xor
mov
or
sahf
js
dec
popf
jne
in
dec
mov
mov
dec
inc
or
jbe
pop
pop
frstor
inc
mov
in
adc
int3
xor
push
lahf
inc
jns
mov
lea
sbb
inc
aam
push
adc
cmp
lret
in
jle
mov
aam
xchg
push
mov
dec
xchg
jo
pop
js
sub
adc
test
pop
jbe
mov
popf
dec
out
sub
or
nop
mov
out
xor
sbb
das
ljmp
push
ljmp
daa
mov
add
adc
loopne
movsb
xor
js
mov
cmpsb
je
rcll
cld
xor
call
add
pushf
sahf
sub
outsl
mov
mov
inc
insl
loopne
cmc
sbb
insb
jne
mov
mov
sub
rcrb
pop
sti
divb
xor
movsl
xor
xor
stos
push
dec
jae
jnp
mov
es
mov
test
iret
mov
mov
cwtl
in
iret
orb
pop
push
or
dec
jge
mov
mov
lods
sub
repz
fmuls
mov
mov
jle
sbb
sbb
mov
fdivl
and
or
and
dec
leave
and
push
stc
push
mov
or
es
ficomps
xchg
sbb
les
pop
bound
xor
mov
mov
xor
fisubs
push
mov
dec
mov
dec
popf
mov
imul
dec
or
sub
pop
out
pop
adc
decl
imul
adc
insb
jg
clc
jne
adc
andb
xor
out
sahf
test
loope
cs
lret
gs
test
aas
sbb
lret
das
jae
cmp
cmc
pop
jp
mov
push
bound
mov
push
es
mov
mov
add
int3
and
mov
jp
fwait
inc
cmp
or
jns
push
loop
outsb
jmp
inc
arpl
fistpll
mov
lods
leave
sbb
das
scas
es
xchg
mov
lcall
test
inc
shr
rcrl
mov
pop
test
mov
fs
push
repnz
pop
adc
jmp
hlt
sbb
add
cltd
js
and
stc
cmpsb
jne
mov
lcall
pop
jge
nop
shrl
ds
ja
xor
push
pop
mov
mov
imul
test
inc
mov
pop
push
mov
adcb
lahf
or
mov
add
cmp
rorl
xchg
push
fldcw
xchg
lcall
xchg
xor
mov
xlat
lods
imul
inc
jns
call
aaa
sbb
pop
jl
aam
push
cmpsb
inc
pop
js
ds
xchg
jmp
outsl
sub
xor
xor
divb
loope
sub
cmc
pop
cmp
stos
adc
xor
shrb
into
or
and
in
add
cmpsb
iret
mov
xor
push
aaa
mov
xchg
aaa
arpl
into
add
iret
aas
sarb
lret
out
stos
in
icebp
or
ja
xchg
jo
das
out
pop
mov
mov
jbe
es
push
push
outsl
imul
jl
jmp
and
adc
add
xor
sbb
jae
sbb
push
or
out
pushf
je,pt
lock
lcall
mov
das
scas
outsb
mov
sub
sub
dec
push
popf
sbb
mov
gs
lret
sub
push
into
iret
ljmp
ret
aaa
fiadds
aad
lcall
xchg
dec
xchg
mov
push
cli
sub
mov
add
in
pushf
sar
mov
call
and
pop
fstp
test
mov
shl
cmp
call
loope
in
jb
pop
out
adc
and
mov
xchg
out
xlat
cmp
imul
popf
pop
shr
add
in
lahf
fsubr
sub
dec
shrl
mov
lahf
push
and
dec
mov
inc
rclb
lea
stc
movsl
pop
add
pop
or
int
mov
and
rclb
pop
fnstsw
sub
inc
ret
ficomps
push
push
sbb
mov
sahf
icebp
xchg
inc
and
loope
in
cmc
pop
xchg
jnp
loopne
jp
clc
test
sahf
leave
jg
or
std
mov
pop
sbb
mov
pop
movb
in
mov
sub
sbb
xchg
pop
add
mov
push
std
lahf
pop
dec
dec
jg
cmpb
sbb
scas
inc
ds
mov
jae
sbb
lods
adc
into
ficoms
loope
push
xchg
pop
jge
inc
int3
addr16
cwtl
sub
test
cmp
rcl
es
ret
sti
jle
mov
dec
xor
stc
dec
pop
divl
loop
pushf
stos
mov
lods
insl
xor
in
xchg
adc
nop
or
rcl
fidivrl
adc
mov
nop
cmp
cmp
xor
cld
repnz
shll
cmp
cmp
dec
jge
mov
ret
movsb
test
and
scas
xchg
scas
mov
lea
adc
adc
fs
loop
pop
loop
test
test
push
ds
cmpsl
add
popa
in
sub
shl
or
mov
add
push
fdivrs
xchg
rolb
jns
or
inc
sbb
and
dec
mov
loopne
js
add
xor
mov
sub
push
jno
xchg
dec
aam
add
mov
cmp
mov
cmc
mov
jb
int
mov
xchg
dec
xchg
jle
sbb
arpl
bound
inc
cmp
aad
gs
mov
mov
outsb
push
pusha
dec
cld
imul
push
ficompl
test
fistpl
lds
mov
jae
add
sar
idiv
iret
sub
ljmp
xor
jns
cmc
inc
bound
outsb
jp
jne
mov
in
enter
jbe
mul
mov
jmp
gs
in
mov
xor
stc
jmp
fistpll
stos
xchg
mov
scas
push
pop
push
mov
fcompl
lods
ss
dec
push
cld
add
sahf
fstpl
xor
cld
sbb
jp
ret
sub
mov
xchg
push
cltd
popa
jne
mov
or
ret
jne
xor
or
mov
lret
xor
jb
ja
adc
lods
fcoms
mov
aaa
push
shrl
add
cmpl
or
pop
xor
sub
repnz
mull
js
enter
pop
dec
icebp
mov
add
int3
mov
adc
pop
imul
cmp
daa
aam
pop
dec
leave
in
pop
push
loop
mov
sub
mov
dec
std
jnp
ja
mov
lret
bound
data16
push
mov
lods
mov
lods
cld
add
sbb
aad
fistpll
or
xchg
xor
or
adc
pop
mov
cmc
aam
out
jbe
mov
ss
outsb
cli
inc
push
test
adc
pop
in
mov
xchg
lahf
call
push
sarl
test
mov
push
or
jo
scas
xchg
fsubrl
ds
ljmp
cs
lret
jecxz
push
std
lods
cld
or
in
xor
cmp
mov
insb
mov
dec
pop
jbe
mov
inc
inc
sbb
jae
push
test
aam
incb
sbb
mov
int
mov
or
jg
filds
jbe
sbb
idivb
cli
mov
dec
inc
mov
test
xor
pop
adc
jb
aam
fdivrl
xorb
lcall
fidivrs
outsb
sahf
repz
sbb
pop
and
outsb
mov
shll
xor
sbb
stc
cmpsb
dec
unpcklps
movsl
adcl
mov
mov
std
leave
xchg
lahf
jnp
jbe
rcl
sbb
xchg
add
shl
aad
mov
in
lcall
cmp
sahf
cmp
outsb
and
push
sbb
ret
pop
and
sahf
insb
push
xchg
and
jle
jg
int3
stos
cld
inc
push
je
rolb
add
sub
push
jecxz
lods
inc
dec
dec
stos
hlt
fnstcw
fldenv
sub
sub
stc
sbb
iret
mov
mov
push
in
hlt
je
jmp
and
dec
mov
call
pop
iret
xchg
fsubl
loop
or
sbb
inc
leave
lods
dec
dec
mov
sub
jmp
test
add
and
or
outsl
pop
inc
mov
js
xchg
fs
aad
dec
pop
fisttpl
je
std
pushf
lret
add
ljmp
push
mov
add
std
in
cmpsl
pop
out
dec
negb
mov
cmp
clc
outsl
push
cmp
mov
mov
dec
or
sti
cmpsb
xchg
sub
movsb
inc
or
push
mov
les
xchg
mov
xchg
iret
lods
mov
add
xchg
mov
test
sub
ds
test
sbb
out
pop
out
cmp
mov
mov
out
mov
pushl
sub
dec
insb
in
xlat
aad
je
out
or
xchg
lods
sbb
jmp
sbb
outsb
cmp
pop
xor
mov
push
xlat
and
pop
in
sub
es
scas
jecxz
insb
mov
mov
cld
adc
mov
sub
mov
push
loop
pop
in
nop
les
in
cmp
and
adc
cmp
xchg
in
mov
push
ljmp
cmp
jecxz
iret
pop
loopne
mov
and
lods
ret
in
sub
sub
sbb
jnp
sbb
or
mov
and
pop
mov
fs
push
mov
movsl
jo
inc
mov
orb
adc
rcrl
adc
mov
icebp
and
sbb
dec
mov
dec
dec
sub
xchg
insl
repnz
jbe
lock
xchg
out
pop
push
sub
pushf
pop
mov
cmpsl
pushf
mov
jb
inc
shrb
add
xchg
cs
xchg
mov
jae
stos
add
call
dec
jg
add
clc
sbb
in
pop
or
mov
sbb
addr16
inc
ja
shll
mov
add
and
or
sarl
int3
push
insl
pop
mov
sbb
pushf
mov
dec
insb
add
push
push
rcll
pop
jbe
sbb
dec
lods
andl
scas
shl
mov
mov
shlb
lcall
in
cmp
ljmp
push
or
adc
cmp
test
dec
fwait
mov
jl
mov
pusha
mov
test
imul
add
fimuls
call
cmc
testb
jbe
mov
jno
jns
or
push
push
mov
add
fs
jo
inc
and
xchg
lods
insl
add
push
add
dec
sbb
mov
xlat
lods
push
jp
fbld
jecxz
jno
test
xchg
mov
cmp
xchg
inc
mov
mov
fnstenv
insb
and
or
pusha
adc
add
mov
xchg
inc
add
xor
add
out
test
lret
sub
cmp
insb
push
push
lret
mov
mov
popa
pusha
imul
mov
jbe
nop
mov
and
mov
mulb
inc
jnp
push
sbb
mov
faddl
push
xchg
cs
jo
pop
ret
xor
jle
and
call
out
scas
imul
pop
mov
sbb
xchg
or
push
out
jg
in
inc
add
xchg
xor
cmc
cld
jae
pop
lock
scas
xchg
lods
lret
or
sbb
es
mul
imul
icebp
and
shrl
cld
push
popf
hlt
xlat
loopne
sub
std
loop
add
dec
xor
dec
xchg
es
pop
mov
popf
jecxz
clc
cmp
mov
popa
dec
xor
xchg
shlb
out
popa
ret
ret
jb
int3
iret
lahf
mov
adc
in
loop
scas
inc
push
shrb
sub
lods
cmp
push
jecxz
xor
pop
mov
push
popa
add
xchg
sbb
cmp
push
cmp
and
pop
repz
mov
cmp
loopne
or
dec
inc
mov
sbb
sub
push
xchg
pop
and
mov
mov
fs
xchg
mov
sbb
andl
mov
pushf
sub
mov
popa
repnz
scas
fdivrs
xchg
arpl
movsb
insb
std
imul
inc
xor
data16
lds
jge
fadd
cmovbe
jle
lret
movsl
aad
adc
dec
test
scas
mov
ss
imul
iret
sbb
stc
sar
dec
mov
ja
sbb
cmc
js
inc
andl
dec
nop
mov
jmp
mov
test
mov
in
comiss
fs
addr16
imul
mov
loope
jo
loopne
cltd
push
inc
loope
das
nop
dec
jo
and
sbb
push
lahf
mov
out
sbb
inc
cld
xlat
ret
mov
adc
cmp
add
inc
mov
jne
shrb
push
and
cmpsb
es
push
cmpsb
loope
inc
leave
or
lret
cmp
scas
out
adc
xchg
adc
movsb
aad
lahf
mov
ret
jecxz,pt
adc
int3
jl
or
jbe
ret
divl
mov
jns
dec
into
mov
out
hlt
pop
push
fs
enter
les
nop
push
repnz
dec
dec
shrb
mov
fistpll
cs
test
sbb
dec
lea
or
insl
shr
subb
add
out
mov
js
pop
or
lcall
adc
push
lock
ret
dec
inc
loopne
jns
pop
pop
test
jmp
notb
cli
xchg
sub
bound
ficompl
mov
inc
dec
insl
jae
loopne
fimuls
outsl
xlat
push
jg
lret
mov
stc
mov
mov
sbb
clc
cli
mov
sub
sti
cld
sub
push
add
lds
rorb
dec
jecxz
or
xchg
jge
jbe
jnp
jnp
sbb
aaa
stos
pop
fistpl
insb
jmp
push
les
mov
das
dec
fidivl
sub
cmp
push
push
and
and
cli
jbe
in
or
fsubs
sbb
fidivrs
jae
ja
jae
jg
pop
dec
pop
mov
cs
orb
push
scas
pop
shll
lods
xor
xchg
xchg
mov
jge
outsl
fisubrs
sahf
or
jbe
pop
outsb
pop
push
cmp
test
pop
out
loopne
sbb
pushf
leave
int3
mov
pop
push
cmpsb
dec
dec
adc
sub
dec
mov
test
jle
push
test
sub
aad
mov
lods
add
mov
or
cmp
or
fdivs
sub
push
in
cmp
je
lret
test
cwtl
inc
les
nop
cltd
sbb
cmp
dec
pop
adc
push
je
xchg
sbb
xchg
out
or
sti
mov
xchg
push
sar
adc
ljmp
into
mov
mov
dec
dec
xchg
or
mov
sbb
jno
mov
sbb
and
jp
xchg
push
fucom
stos
popa
inc
pusha
imul
adc
mov
lret
sahf
push
xchg
in
clc
mov
dec
mov
push
mov
in
ret
jmp
mov
inc
jmp
cs
je
xor
pop
outsl
push
push
push
sub
aas
in
lret
push
inc
bound
adc
cltd
ljmp
xor
lods
inc
push
aas
int
cs
ds
shrb
lods
mov
jl
call
iret
ja
fsubrp
push
jmp
xsha1
cmpsb
mov
jecxz
sarl
mov
das
mov
push
pop
mov
scas
xchg
rcrl
out
cltd
fs
stos
lea
cs
into
or
mov
pop
scas
adc
ljmp
repnz
daa
cmp
test
ret
jmp
rolb
dec
lock
mov
fsubrs
ret
sbb
jge
push
cmp
stos
aas
adc
cmpxchg
imul
push
pop
les
mov
cltd
clc
or
fs
pop
hlt
jbe
leave
shll
jp
or
inc
push
lcall
enter
ja
into
mov
test
lds
data16
xor
sbbl
sbb
adc
mov
jns
and
jecxz
out
jbe
rcll
les
imul
and
data16
adc
les
lahf
in
jp
stos
movsb
icebp
aaa
fdivr
jl
lret
fadds
sbb
xor
call
cmp
in
jge
ljmp
pop
pop
out
xchg
ljmp
mov
adc
push
cmpsl
mov
daa
mov
loopne
out
add
mov
cltd
pop
sbb
test
dec
xchg
add
mov
bound
mov
stos
aam
divb
fldenv
pop
sub
sar
ss
jnp
mov
adc
scas
dec
repnz
ljmp
fidivrs
xchg
inc
sbb
jge
adc
aaa
les
enter
cltd
sub
cs
js
clc
fdivrs
inc
mov
in
xchg
insb
popa
pop
mov
adcl
or
cmp
sub
adc
jno
idivb
jle
ficoml
add
repnz
jo
sub
insb
loop
stos
and
lods
pusha
enter
push
les
jno
inc
and
push
hlt
jecxz
lret
aaa
cld
xchg
lahf
popa
sti
mull
sub
add
outsl
clc
addr16
xchg
out
mov
test
out
pop
xor
insb
jne
flds
pop
jo
movsb
sub
call
repz
sub
dec
fildll
in
inc
dec
imul
sahf
lock
mov
movsl
fsts
insl
int
and
add
push
pop
sbb
popf
sbb
outsl
jbe
cltd
fsubs
and
pop
mov
scas
mov
jmp
mov
fcmovbe
pop
sbb
push
cmp
shlb
or
inc
pop
mov
sarb
jb
or
pop
add
fdivl
pop
cmpsl
fildl
sbb
scas
aas
inc
les
les
jne
jmp
jnp
inc
xor
xor
and
ret
lea
dec
mov
hlt
mov
stos
lea
inc
pop
sti
cmp
dec
leave
xor
jo
loope
or
adc
stos
imul
decb
fildll
cmp
mov
aaa
cmp
movsl
mov
push
fistl
pop
mov
or
fdivp
and
loop
cwtl
testl
data16
data16
loope
jle
inc
cmpsb
shrb
int3
daa
call
filds
push
fidivrs
mov
pop
add
not
movsl
add
or
xor
repz
repnz
loope
sbb
dec
fcmovbe
stos
mov
lcall
and
pushf
test
or
in
push
aam
adc
sarb
xchg
cmpsl
inc
push
outsb
js
test
shll
arpl
clc
loope
leave
stc
jmp
sbb
insl
xchg
lret
scas
les
xchg
add
int3
out
ljmp
inc
psubusb
xchg
xor
incl
idivb
test
cld
aad
cld
ror
cmp
mov
imul
dec
sbb
add
sub
int
repnz
lret
mov
cld
aad
mov
popf
jo
stos
cmp
shl
clc
mov
push
sub
imulb
idivb
stc
inc
mov
mov
adc
inc
stos
lahf
jns
sub
jae
into
mov
pop
daa
sub
fsubr
cld
cmpsb
xlat
icebp
lods
outsb
cli
inc
out
lret
inc
sub
aas
cmp
mov
and
mov
mov
insb
pop
sub
add
cmpsl
sti
rolb
sbb
iret
cli
in
add
mov
test
lret
inc
mov
fxch
push
cli
mov
fimuls
mov
rcll
lahf
mov
iret
mov
bound
inc
mov
sub
aam
dec
cwtl
ja
cmp
push
repz
cmc
push
xchg
pop
jg
mov
popa
repnz
xchg
popf
push
cli
mov
sbb
loope
mov
popa
jg,pt
mov
adc
mov
loopne
jbe
xchg
js
arpl
pop
mov
ss
mov
cmpsb
hlt
push
adc
pop
jns
divl
les
or
fimull
fnstsw
mov
loope
adc
dec
or
mov
insb
jg
out
mov
pop
testb
rorl
cmpsl
lea
or
cmpb
mov
sbb
scas
xor
dec
or
push
adc
ljmp
push
iret
dec
mov
jo
jl
jo
ljmp
or
aaa
addr16
jbe
pop
mov
sbb
mov
sbb
das
out
cmp
pop
mov
rcrl
jae
add
loop
xor
or
push
imull
mov
pop
ja
jge
pinsrw
push
cmp
xchg
popa
jo
jnp
mov
scas
mov
lods
test
aad
and
call
and
leave
sbb
enter
inc
inc
and
imul
testl
popa
mov
xchg
inc
and
or
mov
andl
dec
xchg
or
jl
call
fwait
sub
cmpsl
jb
inc
insl
pop
ss
dec
insl
mov
rcll
int
mov
std
pop
icebp
scas
sbb
add
sub
push
jecxz
icebp
cmpsb
lea
dec
xchg
outsl
js
shlb
inc
dec
push
movsb
inc
loop
js
sub
hlt
cmpsl
dec
stos
inc
cmpsb
lods
fdivs
adc
jecxz
jae
jecxz
mov
inc
or
jnp
leave
ja
pusha
fsubrs
nop
js
ljmp
push
fstps
adcb
out
cmp
lahf
gs
clc
pop
xor
mov
in
repnz
mov
dec
push
stos
lea
je
pop
int3
aad
adc
cld
cmp
fmuls
rorb
idivb
out
fs
sub
pop
inc
int
mov
gs
dec
mov
and
fnstcw
push
mov
jl
jae
adc
jmp
xchg
ficompl
mov
jbe
inc
sbb
cmp
mov
mov
test
iret
xchg
push
inc
mov
addr16
punpckhdq
or
jp
into
push
cmc
add
push
les
mov
xor
movsl
icebp
jb
mov
push
aaa
notb
cmp
pop
stc
and
insl
shll
jge
pop
sti
xchg
shll
test
js
je
out
test
lret
jl
inc
mov
xchg
sbb
mov
aas
inc
or
fidivs
shr
lods
das
cmpsl
lea
shrb
aad
sbb
mov
and
js
push
or
dec
jo
xor
add
ja
sbb
cmpsb
mov
or
sbb
repz
push
mov
and
add
mov
dec
or
loopne
lcall
ret
mov
mov
outsl
dec
hlt
imul
mov
push
xor
cmc
data16
popf
xchg
ljmp
pop
fs
and
xor
cmp
jb
xchg
iret
popa
xchg
loope
jecxz
and
sbb
and
inc
into
std
sub
push
js
mov
adc
and
ja
cmp
popf
push
leave
outsl
lods
push
lods
pop
data16
loopne
sub
cmc
adc
and
daa
jle
mov
fs
cmp
sbb
pop
cs
bound
push
testb
out
mov
lret
imul
out
cld
push
jmp
sbb
ss
in
mov
subb
pop
movsl
mov
clc
scas
cltd
xchg
mov
mov
test
mov
int3
sbb
or
push
and
cmc
pop
repz
mov
inc
adc
call
cmc
pusha
fcmovnb
dec
sbb
pop
mov
add
rcll
dec
xchg
mov
mov
jge
xchg
sub
popa
imul
mov
lods
jbe
mov
enter
xchg
addl
mov
stc
mov
out
dec
mov
cmpsl
mov
ja
test
fstl
fidivl
inc
fwait
jns
lret
xchg
jnp
mov
adc
mov
dec
push
rclb
add
push
int3
add
and
cmc
fnstcw
dec
unpckhps
mov
push
repnz
gs
insl
inc
into
scas
hlt
dec
mov
cmp
pop
pop
mov
and
mov
rclb
inc
gs
scas
or
cli
sbb
mov
sarb
stos
xor
cwtl
std
data16
ja
lahf
add
cltd
lods
paddq
clc
rcr
daa
lahf
mov
dec
push
jp
inc
insb
xchg
subb
addr16
push
add
and
aam
jne
mov
es
and
cmc
sbb
cmp
sub
sbb
jns
cmp
fdivs
repz
cmp
ss
idiv
in
xchg
stos
cmpsl
push
sbb
lcall
dec
mov
cmpl
push
rorl
sbb
push
cmp
mov
lds
mov
cli
scas
pop
xchg
add
pop
sub
fimull
bound
cmp
insl
xchg
mov
arpl
hlt
xchg
inc
inc
lret
je
mov
loop
xchg
idivb
sub
test
inc
loopne
pusha
xor
xchg
or
or
and
dec
jecxz
daa
fiaddl
sbb
mov
aad
es
roll
mov
ds
loope
lret
arpl
or
hlt
pop
xlat
test
inc
mov
cmp
popf
xchg
mov
bnd
xchg
cltd
test
jno
in
mov
cmc
rorb
sbb
mov
fnstsw
jo
cwtl
mov
inc
js
pop
push
sbb
cmp
sbb
insb
dec
pushf
pop
out
add
xor
push
mov
pop
and
jno
lock
xchg
sahf
dec
mov
ret
clc
add
fxam
addr16
mov
rol
push
inc
dec
jge
das
pop
in
lret
fimull
jns
pop
xor
mov
cli
cmpsl
or
xchg
repz
into
jnp,pt
xchg
push
int3
jecxz
push
int3
inc
lods
out
dec
push
loope
push
jbe
xchg
pop
xchg
jg
cld
into
ja
mov
das
inc
mov
fidivl
ret
xor
jp
mov
pop
xchg
or
or
push
push
ja
xchg
sbb
lods
scas
repnz
gs
daa
mov
push
fldt
pop
push
push
cmp
sbb
or
adc
xor
mov
pushf
xchg
loopne
inc
adc
bound
and
xor
xchg
or
jne
in
push
shr
scas
sbb
and
cmp
xor
pop
cmc
mov
out
jg
dec
mov
sti
sahf
int
mov
xchg
xor
jbe
or
sbb
mov
in
fwait
dec
lret
hlt
mov
xor
mov
push
sub
cmpsl
je
repz
data16
aas
xchg
add
jo
xchg
shlb
add
insb
outsl
jl
shl
inc
test
mov
test
fsubs
outsb
cmp
sbb
dec
inc
sub
sub
xchg
adc
or
xor
dec
dec
subl
rorb
mov
push
push
sub
mov
decb
push
sbb
mov
dec
sub
pop
xchg
jo
out
mov
push
bound
scas
and
xchg
jb
mov
cmp
mov
push
adc
sub
and
fwait
or
push
pop
cld
cltd
ret
repnz
gs
dec
lahf
sub
fbld
lret
inc
sub
mov
in
cli
fs
mov
insb
jp
push
lret
sbb
pop
shlb
mov
xor
rep
test
loope
push
add
scas
jmp
dec
stos
adc
mov
mov
out
insb
dec
jecxz
lret
in
mov
shlb
ret
jno
sbb
aas
enter
adc
in
aas
movsl
lcall
ror
inc
add
popf
loopne
jg
movsl
jge
rorl
and
fldt
inc
xchg
inc
lods
mov
iret
pop
cli
mov
dec
out
pop
pop
std
jg
sti
pop
movsl
loop
jne
sar
std
pop
xchg
int3
outsb
add
or
je
jmp
xchg
rcrb
stos
cli
mov
int3
insb
push
jbe
xlat
mov
push
loopnew
pop
aad
jbe
cmpsl
xor
out
adc
adc
push
pop
insb
mov
pop
jl
in
xchg
gs
test
cmp
jns
ret
pop
push
push
xchg
and
jbe
into
push
insb
push
jns
or
inc
sbb
mov
nop
fstps
jl
jnp
mov
sahf
xchg
dec
seta
mov
push
ljmp
cmpb
xchg
push
sub
sbb
adc
outsl
insl
adc
jecxz
fs
xchg
mov
js
push
dec
jne
cmpsl
dec
jle
cmpsb
fdiv
pop
mov
xor
add
jmp
insl
mov
pusha
stos
adc
jns
lea
lret
fildl
jl
mov
and
jo
int
scas
cmp
incl
fdivs
or
dec
pop
push
mov
mov
les
lods
fdivr
dec
pop
aam
push
dec
cld
or
popf
inc
sub
fldt
ljmp
xchg
sbb
ret
mov
mov
mov
test
ja
jle
andps
hlt
repnz
inc
xor
sub
movsl
xchg
sarl
lock
lret
into
lret
cltd
push
mov
loopne
fnstenv
mov
sbb
xor
decl
loopne
notb
inc
scas
adc
cli
loope
mov
lret
inc
add
out
fimuls
push
sarb
fldt
dec
into
aas
jecxz
das
jnp
inc
js
jbe
rorl
out
out
xor
cli
dec
sbb
adcl
sti
cmp
cli
movb
xor
scas
and
or
mov
mov
mov
jg
mov
xchg
cmp
pop
adc
fistpll
or
add
push
sub
jmp
out
add
lcall
adc
sbb
sbb
out
or
sahf
xor
cltd
nop
cld
sti
pop
xchg
inc
test
xor
int3
loopne
xchg
fimull
xchg
jecxz
jne
pop
in
ss
fldt
in
jecxz
sbb
inc
jno
cmc
jb
jnp
dec
js
ret
mov
inc
add
dec
add
cmc
adc
jae
in
push
cmp
fsubrs
repnz
aad
std
fsts
aas
push
pop
shl
jne
inc
stos
xor
jmp
mov
lret
sub
adc
das
ds
incb
push
mov
push
pop
ljmp
dec
sub
push
or
in
push
icebp
mov
cmpsl
lds
pop
mov
adc
sub
bound
shrl
push
mov
cmp
in
jae
lods
jmp
fstpl
dec
aas
cs
hlt
mov
mov
loopne
movsl
pusha
sbb
shrb
loopne
loop
lock
push
das
inc
dec
adc
repnz
das
aas
jno
cmp
add
xor
daa
xor
xor
jl
mov
sub
popa
subb
xor
jecxz
adc
sahf
mov
sub
popa
in
fldcw
dec
fsubl
daa
pushf
fiaddl
add
xor
cmpsl
xor
sub
addr16
adc
into
or
dec
loopne
clc
mov
rcrb
sti
xchg
adc
addl
adc
xor
cmpsb
push
cmp
pop
add
repnz
pop
and
out
sub
and
sub
cmp
fadds
ret
fisttps
bswap
mov
mov
fldt
dec
pop
sahf
in
fistpll
mov
rolb
int
pop
inc
sbb
sbb
fsubrl
daa
ret
lds
ds
mov
jno
movsb
fcmovnbe
jge
dec
mov
popa
out
mov
push
pop
xor
and
addr16
je
orb
xchg
jmp
inc
jbe
push
cmp
push
mov
frstor
jbe
fs
xchg
loope
cmpsl
xor
in
jne
dec
imul
ret
xchg
dec
dec
mov
sbb
or
popf
mov
jbe
out
xchg
mov
jbe
sbb
ss
cwtl
test
faddl
and
repz
sbb
jg
ljmp
hlt
aad
push
add
loop
jns
mov
roll
nop
dec
cmp
aad
clc
jbe
mov
std
dec
in
sub
pushf
sub
iret
aaa
push
icebp
repz
push
push
insl
cld
pop
scas
add
testb
push
cmp
clc
push
fmuls
ja
adc
loope
pxor
lods
jmp
movsl
lock
mov
popf
jg
mov
sub
cwtl
pop
cltd
fistpl
scas
sbb
aaa
stos
nop
lods
push
sbb
push
addr16
sbb
js
shl
sbb
xchg
mov
xchg
stc
call
ja
fcmovbe
jmp
jmp
test
in
xor
loop
adc
jge
push
push
lea
hlt
jge
mov
addr16
xor
stos
jmp
or
out
fisttpll
jl
push
sub
fstpt
outsl
in
mov
xchg
std
fisubrs
xor
out
fs
in
lret
repz
dec
xchg
pop
cltd
arpl
and
adc
push
inc
fs
jnp
and
addr16
or
ret
in
jmp
jp
xchg
aas
insb
or
adc
rcrb
pop
test
rcrb
ljmp
fs
frstor
mov
in
rclb
xor
dec
mov
popa
cwtl
insb
xorl
mov
cmp
and
arpl
mov
push
out
stos
jb
sbb
mov
cmp
fidivs
dec
fmul
test
add
sbb
push
mov
repz
repnz
sbb
add
cmp
jne
jmp
and
xchg
lock
popa
xor
lahf
inc
adc
popf
xchg
inc
mov
les
mov
xchg
out
popf
xor
sbb
cmp
sahf
jb
pop
mov
popa
sub
jge
paddw
lret
insl
scas
inc
out
nop
xchg
mov
scas
inc
xchg
cmp
leave
fsub
mov
jnp
xchg
popf
sub
fcomps
into
pushf
int
test
jmp
dec
and
sub
mov
and
sahf
fidivrl
or
popl
pop
xchg
inc
mov
sahf
mov
cltd
cmovne
test
fsubr
je
mov
aaa
imull
mov
mov
sbb
cmp
stc
inc
sub
mov
iret
pop
test
or
out
jb
movsl
xchg
test
lock
cmp
stos
sub
mov
push
pop
mov
and
aam
dec
push
push
cmc
js
shll
jge
mov
cld
xor
and
icebp
div
je
aas
jecxz
mov
add
xor
pop
in
dec
fists
scas
scas
loopne
sbbb
mov
lods
jnp
aas
cs
cmp
jne
call
xchg
insb
inc
cld
sub
mov
sub
scas
xor
mov
mov
mov
cmpsl
mov
out
pop
fs
lcall
jae
stc
add
xchg
sahf
inc
repz
imul
int
cmp
js
lret
or
xor
and
testb
lock
jns
jg
dec
fwait
xchg
cmp
or
in
andl
jg
add
divl
xor
mov
and
mov
dec
jge
jno
push
inc
rclb
mov
sub
push
in
jecxz
push
pop
inc
mov
je
cmpsl
adc
push
imul
xor
cmp
add
xchg
int3
fistps
nop
mov
add
mov
in
pop
or
sub
clc
pop
push
dec
dec
pop
pop
xchg
inc
and
or
or
daa
bound
dec
shlb
cwtl
cmp
mov
xlat
aaa
mov
out
jae
aam
xchg
insb
push
mov
nop
mov
mov
pop
mov
inc
fwait
lret
jno
cmp
in
nop
mov
rcrl
add
mull
repnz
cmc
and
fs
push
xchg
xchg
in
adc
inc
cmp
add
jge
repnz
scas
push
jae
lea
mov
les
fists
hlt
fstpl
pop
sbb
push
leave
mov
and
scas
xchg
mov
mov
int
xchg
or
movsb
and
mov
mov
test
fiaddl
outsl
jne
inc
and
push
inc
inc
out
sub
mov
fldt
xchg
mov
xlat
fildl
sbb
insb
jle
xchg
mov
cmp
in
ja
test
sbb
aaa
jo
outsl
subb
jmp
sbb
lahf
mov
xor
sbb
stos
mov
movsb
sub
mov
push
daa
pop
inc
cmp
inc
pop
or
inc
loope
jge
lret
inc
fcompl
scas
bound
divl
cmp
and
in
sub
sbb
and
inc
pop
inc
or
cld
add
loop
fldt
decb
jg
aas
call
jae
cmc
movsb
nop
or
mov
cmp
scas
cmpsb
sbb
adc
rcrl
ret
out
xor
sub
pop
shlb
xor
ret
or
sahf
push
xchg
testb
xchg
lahf
test
outsl
cmp
into
subb
push
mov
xchg
cmp
insb
ficompl
mov
mov
insl
pop
lods
fwait
shll
jp
jecxz
pop
iret
sbb
into
jns
hlt
inc
mov
in
call
push
ret
xor
icebp
xchg
lahf
xor
mov
mov
jp
daa
inc
xlat
mov
imul
out
icebp
inc
inc
cmp
sub
pop
mov
push
ss
xchg
mov
clc
pop
daa
mov
adc
loope
rorl
sbb
sbbl
data16
or
xchg
les
loope
loopne
je
mul
data16
dec
lock
shrl
jmp
cli
gs
jg
push
test
or
loop
xchg
jo
fsubr
outsb
test
add
jmp
ret
add
out
push
sarl
xor
xor
mov
sbbl
data16
cmpsb
in
sub
and
cmc
iret
mov
pop
negb
jb
pop
sti
sbb
inc
xorl
add
imul
mov
or
xor
mov
imul
aam
or
ss
xchg
xor
pop
test
fnstsw
xchg
js
jl
pop
rolb
pop
lods
mov
popa
or
fwait
ss
mov
fists
xor
sbb
mov
mov
xor
hlt
inc
fcom
jo
and
pop
cltd
outsb
scas
push
aad
cmc
stos
xlat
push
xor
bnd
sub
mov
fmull
jg
addr16
sub
jl
dec
mov
data16
data16
xchg
hlt
cmpsb
lock
jp
jmp
lcall
dec
xchg
hlt
lods
out
adc
mov
in
shrl
popf
cmp
sub
pop
gs
daa
in
mov
sub
adc
jg
outsl
inc
jnp
mov
movsl
shrb
or
test
push
push
inc
aaa
mov
test
in
sahf
nop
jo,pn
and
ret
xchg
sbb
cmp
mov
dec
or
test
mov
test
repz
mov
xor
xchg
xchg
mov
mov
imul
loop
inc
push
adc
stc
fbstp
add
aas
rol
lret
out
dec
mov
fdivrs
pop
and
pop
cld
cli
and
sahf
adc
push
outsb
mov
xchg
jp
std
dec
fdivrp
jg
mov
fisttps
inc
push
in
int3
out
add
popa
js
adcl
or
inc
add
pop
add
jns
sbb
in
cltd
sub
fidivrl
push
ret
jl
testb
imul
xor
loopne
stos
mov
mov
and
aas
je
out
cmp
push
in
sub
out
and
inc
dec
xchg
ret
adc
je
xchg
addr16
stos
or
and
sub
push
sbb
add
mov
lahf
jns
sub
inc
fs
and
mov
fdivr
mov
cld
mov
add
xchg
jecxz
pop
into
adc
add
jnp
pop
xor
jne
cmp
shll
dec
add
inc
fsubs
cmp
adc
mov
imul
fstpl
lcall
cltd
loop
stos
gs
leave
lods
enter
aam
lods
sub
inc
dec
frstor
pop
out
sbb
push
cmp
push
jno
aad
xor
popf
cmp
add
cmc
outsb
addr16
dec
loopne
test
pop
inc
sub
jl
jmp
adc
ljmp
arpl
add
xchg
ret
fldenv
push
mov
push
cltd
mov
mov
outsl
in
ja
sub
nop
jbe
insb
push
cmpsl
and
mov
loopne
outsb
ret
in
jnp
lret
or
negl
mov
mov
sbb
and
lret
repz
push
sbb
sbb
out
ret
out
dec
jge
popa
push
mov
mov
shrb
inc
cmp
leave
mov
mov
insl
das
leave
cmp
mov
lret
es
loop
or
or
ss
mov
dec
test
insb
adc
fisttps
out
loop
mov
jno
scas
sub
pop
sbb
clc
mov
lea
or
mov
push
push
ret
cmp
xor
inc
js
sbb
mov
or
xor
adc
jno
pop
ss
out
push
cmc
jne
and
dec
mov
pop
test
mov
xor
jmp
mul
rep
fadds
push
ret
mov
sbb
mov
add
inc
aad
or
mov
in
mov
dec
cltd
sbb
rcrl
xor
out
add
pop
or
add
adc
packssdw
mov
cmp
cmpsl
or
cmp
xor
pop
sbb
cmp
mov
add
mov
std
gs
cmc
dec
aam
popa
jmp
or
push
jbe,pt
addl
xchg
insb
aam
push
cmovge
outsb
inc
ret
cmpsl
push
out
push
inc
aam
sti
cmpl
mov
dec
xchg
cmp
add
xchg
into
cmp
dec
mov
jno
lahf
fdivrl
out
sub
mov
clc
and
in
loopne
push
sbb
jbe
into
mov
add
int
mov
loop
outsb
testl
lret
popw
pop
js
icebp
jg
inc
icebp
or
fs
in
cmpb
mov
xchg
mov
or
pusha
fwait
sti
in
mov
stc
xor
insb
scas
test
push
xchg
imul
jge
stc
or
pop
mov
js
pop
xchg
sub
jno
inc
imul
popl
xlat
inc
es
pop
sbb
sub
int3
mov
out
cli
aad
and
pop
dec
pop
popf
push
xchg
jns
cmp
jae
mov
jo
jb
int
stos
repz
lret
adc
adc
call
inc
decb
xchg
out
jecxz
inc
xchg
std
pop
iret
dec
out
lods
or
out
testl
out
mov
xor
enter
iret
rclb
mov
cmpsb
adcb
mov
lcall
pop
mov
das
cmpps
mov
jae
cmp
clc
fnstsw
cmp
lahf
pop
mov
scas
xchg
shll
sbb
icebp
cmp
adc
call
negl
sbb
xchg
inc
xchg
test
and
mov
ret
push
out
iret
jnp
pop
movsb
adcb
enter
mov
pop
fwait
mov
push
pop
stos
push
clc
xchg
push
mov
test
pop
mov
sahf
mov
cmp
ljmp
adc
les
movsl
inc
mov
xor
cmp
in
add
dec
xchg
dec
sub
push
test
pushf
fs
xor
clc
fcoml
xchg
lcall
lahf
add
mov
adc
adc
shrl
mov
cmpsl
cmpsl
cwtl
fldcw
cmc
sub
lret
out
fcos
imul
jmp
in
xchg
push
add
sub
push
jge
into
insl
rorl
dec
jno
mov
xor
push
push
jnp
mov
fmull
mov
rcrl
adc
stc
cmp
pop
dec
push
shl
adc
jbe
jmp
mov
xchg
jo
jmp
or
jle
mov
xor
inc
xchg
jmp
lock
xor
pop
addl
daa
movsw
push
dec
clc
scas
xchg
mov
inc
icebp
mov
add
inc
gs
out
stos
sub
js
inc
repz
lahf
jb
lret
test
int
lea
push
rol
xchg
sub
mov
add
fdiv
pusha
insl
sbb
jp
pop
mov
dec
in
mov
jl
mov
stc
test
push
jg
pushf
enter
push
scas
pop
jns
dec
cmpsl
in
cmp
add
ljmp
pop
addl
xchg
sbb
ret
lods
xchg
ljmp
xor
ljmp
mov
push
addr16
sbb
mov
jl
sarb
inc
test
push
mov
add
sbb
outsb
in
sbb
add
divb
jae
femms
mov
and
test
sbbl
and
ror
and
popa
je
int3
lret
ds
dec
sub
mov
inc
fcoml
sbb
sbb
mov
adc
jne
incb
notb
jbe
or
lea
inc
rcrl
lcall
sahf
inc
jmp
je
jo
adcl
xor
clc
repnz
xchg
mov
popa
ss
adc
xchg
inc
adcl
das
mov
sub
jae
mov
ficomps
leave
mov
cmp
pop
or
sahf
fiadds
xor
loope
orl
cmp
cli
ret
mov
aas
push
push
jno
roll
cld
jl
push
rcrb
dec
add
es
mov
mov
add
in
movsl
cmp
cltd
enter
xor
movsb
push
fdivs
xchg
mov
and
push
mov
sahf
ret
fidivrl
repz
xchg
xchg
fistps
pop
add
mov
out
or
mov
jae
dec
lods
push
into
stc
data16
rclb
inc
jae
pushf
pop
pushf
lds
cld
pop
xchg
jp
fcompl
arpl
mov
hlt
mov
sbb
notl
push
lds
add
lahf
mov
mov
cmp
loopne
mov
push
jl
ljmp
sarl
pusha
mov
add
cld
stos
in
dec
mov
lahf
out
fsubrs
or
roll
xchg
ja
push
sbb
add
arpl
in
aam
xor
aaa
push
cld
test
sbb
lret
dec
je
cld
shll
insb
subb
clc
fs
int3
and
lods
push
fidivrs
jns
push
xchg
repz
pop
mov
push
mov
xor
mov
jp
test
inc
imul
clc
push
in
lret
movsb
mov
xchg
stc
mov
jo
loopne
loope
decl
fimuls
jmp
gs
jo
jae
and
add
sahf
stos
push
pop
mov
pop
mov
test
push
cltd
jl
xchg
test
mov
dec
in
inc
xchg
setbe
push
xchg
cmp
repz
jg
call
ret
popf
sti
mov
out
xor
dec
adcb
fsubl
jmp
outsb
fisttpl
pop
push
iret
ret
stc
jecxz
xchg
rclb
movsl
sarb
sub
in
lcall
ret
sti
xor
jmp
cmp
jo
stc
xchg
xchg
inc
orl
ljmp
and
nop
push
fs
mov
pop
pop
and
sbb
push
nop
jg
pop
jns
add
dec
pop
sbb
movb
test
cmp
mov
imul
mov
popf
das
mov
hlt
loopne
ss
jae
jae
cmpsb
jb
mov
jns
inc
insl
inc
dec
popa
mov
cmpsb
xchg
and
jmp
addb
clc
sub
adc
mov
loop
movsl
mov
xor
inc
mov
xchg
cltd
ja
iret
rcrl
xchg
pop
adc
inc
or
add
arpl
jbe
sbb
ds
dec
adc
dec
mov
clc
cmp
jle
sbb
jnp
dec
rorl
into
int3
rcrb
xorb
mov
jmp
mov
shl
les
cmp
xor
stc
inc
and
in
pop
lcall
dec
add
mov
or
and
mov
leave
mov
dec
cmp
addr16
xchg
imul
std
out
xchg
pop
sbb
icebp
cs
call
scas
jb
mov
xchg
jle
into
push
inc
mov
xchg
adc
pop
in
arpl
mov
pop
into
pop
popaw
dec
test
xchg
dec
adc
mov
sub
sahf
mov
push
pop
into
xor
or
movsb
pop
adc
cltd
insb
loopne
xchg
in
les
dec
inc
inc
inc
mov
shll
adc
es
or
std
test
inc
lock
insl
fcomp
mov
test
push
pop
movsb
mov
adc
pop
mov
cwtl
jno
lods
lahf
outsl
dec
xchg
sbbl
fsubs
iret
pop
insl
popa
sub
rol
pushf
aam
inc
mov
dec
into
orl
or
mov
push
fildll
movsl
loopne
mov
inc
sbb
rcrb
push
jmp
jecxz
cld
cld
dec
repz
ret
mov
sahf
mulb
mov
inc
js
push
stos
jecxz
mov
faddp
je
les
movsl
leave
bound
mov
xor
cmpsl
adc
aam
mov
adc
clc
scas
outsl
lea
or
pop
sub
hlt
sarb
and
bound
adcb
push
add
leave
cmpsl
xchg
pop
fildll
daa
dec
or
xchg
imul
sti
or
sahf
jno
inc
push
stos
jmp
rcrl
sbb
lods
test
pop
fwait
jge
mov
sub
ficomps
fs
mov
cmp
nop
pop
fdivl
pop
push
jno
ja
sub
aad
xchg
pushf
mov
sarb
jmp
insb
insb
std
jmp
loop
cmovs
pusha
cli
jbe
mov
enter
push
fidivrs
cwtl
loop
in
push
or
lock
mov
or
jbe
scas
sbb
clc
sub
sbb
insl
adcb
ss
xchg
jbe
cmp
loopne
dec
js
and
dec
and
ficompl
nop
lret
mov
lds
enter
adc
mov
xchg
into
ds
xor
ds
adc
lods
sub
ja
and
mov
sbb
push
mov
cld
rcrb
shl
jns
lcall
sarb
sub
mov
mov
repnz
mov
ja
ds
popf
fld
scas
fs
stc
stos
sub
mov
and
pop
cmpl
cmp
jge
jp
lcall
inc
push
dec
sti
call
sbb
add
cmp
scas
es
or
mov
aas
call
popf
xchg
mov
cmp
dec
or
movsb
repz
dec
enter
scas
scas
out
sub
jmp
inc
std
shrb
add
lea
enter
add
pop
stos
lods
pop
repnz
lea
enter
sub
fistpll
mov
ja
paddsb
fldcw
ljmp
cli
lods
stos
loop
out
sbb
in
mov
call
lods
sbb
fwait
imul
inc
fidivrs
cltd
inc
popa
loopne
fwait
das
inc
sub
cmp
push
test
daa
push
sub
inc
push
out
stc
ljmp
mov
in
or
leave
adc
cmp
les
int
xchg
dec
mov
lods
jecxz
inc
add
in
xchg
setno
push
mov
xor
mov
cmp
sub
mov
imul
and
add
out
ret
adc
and
clc
lcall
sbb
jns
lahf
rcr
xorl
or
dec
imul
rorl
notl
inc
lods
mov
je
fs
stos
mov
rolb
push
and
cmp
jp
jge
cltd
dec
orb
stos
pop
mov
rorl
xchg
jbe
add
aam
xor
cli
cmp
hlt
loope
pop
lods
out
pop
jae
xlat
pop
mov
imul
dec
repz
xorb
stc
xor
push
push
xor
mov
rcl
icebp
mov
pop
in
imul
adc
sub
and
out
sub
js
jp
lods
push
inc
add
je
add
mov
call
jge
dec
mov
pop
ss
xchg
push
push
pop
and
in
mov
test
or
xor
jne
xor
dec
push
mov
sar
xor
arpl
sti
loop
and
xor
out
sub
push
inc
ret
in
lock
or
sub
mov
or
outsb
sbb
sub
and
das
into
daa
shll
sbb
hlt
inc
mov
mov
pop
xorl
push
ljmp
push
stos
sub
cs
sarb
or
and
add
roll
out
and
or
int
add
and
adc
shrl
loop
add
cmpsb
jb
stc
out
add
rclb
loopne
pop
inc
push
jle
push
jge
ret
mov
add
fldt
and
mov
out
dec
ljmp
mov
cmpsb
das
imul
int3
cmp
xor
sbb
pop
mov
es
push
mov
inc
sbb
into
das
insb
xchg
pop
movsl
dec
jo
imul
stos
push
pusha
jno
mov
push
movl
mov
mov
xor
je
sbb
pop
jmp
cmp
mov
outsb
imul
xchg
or
xchg
pushf
xchg
dec
sub
jbe
adc
test
sub
jno
xchg
insl
faddl
jb
jp
pop
push
mov
mov
sbb
iret
sbb
insb
into
addr16
repnz
fwait
fwait
negb
in
push
lock
bound
pop
push
sti
xchg
push
loop
adc
mov
imul
pop
mov
xor
sahf
daa
fidivs
jmp
aaa
fcoml
push
aas
jno
adc
fistpl
inc
scas
scas
mov
cld
cltd
fsubr
call
and
cltd
sbb
add
in
iret
adcb
unpckhps
cmp
pop
dec
cmp
push
push
mov
fs
loop
rclb
dec
andb
outsl
push
jle
call
mov
cwtl
stos
push
pop
dec
pop
jecxz
xchg
sbb
mov
sbb
dec
and
jmp
in
or
leave
cmpsb
or
loope
push
mov
cld
icebp
push
lock
pop
jbe
ja
outsl
fdivs
ljmp
insb
mov
inc
mov
out
popf
mov
int3
imul
aaa
xchg
push
xchg
lahf
cmp
mov
ss
add
out
sub
jno
shlb
rorb
int3
or
and
hlt
cmp
shll
aam
dec
adc
pop
test
inc
and
push
mov
or
add
fdivl
ffreep
or
and
arpl
insl
sbb
xor
shlb
xor
dec
and
arpl
adc
add
mov
shll
pop
inc
std
js
dec
roll
imul
cmp
pop
jmp
push
cltd
mov
dec
fsubrs
or
fmul
adc
ja
enter
aas
jl
inc
cli
adc
scas
pop
cmc
dec
inc
lcall
mov
xchg
sahf
pushf
shlb
push
adc
inc
dec
jo
aam
sbb
pop
xchg
sbb
push
mov
cmp
jp
sbb
lret
jg
sub
xor
lcall
ss
hlt
cs
pop
cmp
into
xchg
dec
fcomi
call
xchg
sahf
xor
jle
movsb
or
pop
push
and
fldpi
mov
inc
add
popa
xchg
sub
aad
in
jl
or
in
ljmp
pop
hlt
outsb
sbb
mov
jns
push
xchg
mov
jae
sbb
mov
nop
shrb
popf
sbb
xchg
xchg
sub
jmp
adc
js
es
mov
scas
fcomp
aaa
in
fcomps
and
fwait
push
popa
inc
nop
lret
pop
addr16
mov
adc
out
mov
push
adc
xchg
negb
cmp
fmuls
adc
aam
sub
cmp
lds
xchg
filds
add
and
cli
sub
lds
adc
xchg
cmpsl
loopne
add
mov
adc
or
in
stos
fdivrp
cld
sbb
fldt
cmpsl
lock
je
and
push
mov
fidivrs
mov
lods
popf
pop
ljmp
jmp
mov
mov
xor
mov
add
push
xor
sbb
add
loop
ljmp
loop
push
xor
xchg
int3
dec
loope
fistpl
jae
add
mov
hlt
adc
or
int3
scas
cmp
loopne
rcll
mov
nop
fstps
cmp
lret
sub
mov
xchg
aam
lcall
jbe
mov
mov
cmp
ljmp
add
ffreep
jo
push
les
fsubr
sbb
pop
inc
jge
insb
adcb
push
mov
xor
and
cmp
mov
add
imulb
icebp
adc
xchg
and
cmp
xor
cmp
sbb
xor
int3
inc
out
sub
and
jne,pn
and
out
inc
pusha
xchg
xchg
push
scas
jmp
int
add
jne
push
or
rorl
cli
xchg
mov
int
cmpsb
rcrb
popa
mov
dec
adc
mov
jno
std
test
enter
ds
in
cmp
and
inc
fidivs
push
inc
btr
jno
xor
mov
fs
mov
scas
and
cmp
fiadds
adc
xor
cmp
inc
jne
xor
jmp
xchg
add
sub
pop
inc
je
xchg
jo
inc
xor
add
andl
adc
lret
mov
das
out
sbb
mov
xchg
repnz
jno
or
pop
sbb
dec
jmp
push
stc
out
jge
xchg
out
pcmpgtb
jo
and
inc
mov
sub
outsl
xor
cld
mov
ficoms
lds
push
xchg
out
and
adc
fwait
movsb
dec
je
or
and
and
mov
and
jle
addr16
je,pt
inc
es
fidivrs
push
inc
int3
sbb
mov
add
cmpsl
scas
popa
test
into
imul
and
movsb
pop
arpl
or
mov
push
and
mov
lret
repnz
fldenv
and
out
scas
out
jo
cwtl
xor
loope
jns
in
sub
sarl
xor
pop
push
inc
std
and
xchg
or
push
jae
mov
mov
sbb
lds
cli
addr16
out
or
insb
sbb
cs
push
inc
fisubl
test
pop
xor
push
notb
enter
iret
call
dec
mov
ror
lock
lds
arpl
repnz
pop
popf
arpl
stos
mov
mov
dec
lret
xchg
lods
ret
xor
pop
jbe
xchg
idiv
testb
lret
mov
inc
stc
popf
add
inc
pop
pop
mov
pop
mov
test
pop
fstpl
stos
mov
jae
ret
loope
xor
or
or
cli
lods
jg
cwtl
fucom
xor
dec
pop
mov
xor
out
lret
cli
and
shrl
or
shrl
mov
mov
in
adc
dec
movl
aad
mov
jle
push
jmp
pop
fimull
in
ja
and
jp
inc
xor
leave
xchg
adc
cmpsb
lret
jg
mov
mov
push
xchg
xchg
push
or
sub
mov
cmc
sbb
xor
cli
and
inc
inc
pop
cmp
pop
mov
mov
xchg
xor
pushf
imul
or
sub
mov
push
outsl
clc
jb
rcrl
and
rep
adc
xchg
test
fs
lret
imul
mov
xor
and
pop
int3
inc
popa
jbe
sbb
mov
cmpsl
mov
fadds
fs
cmp
xchg
sar
jne
sub
xor
cltd
test
in
repz
pop
enter
movsb
xlat
jge
rcr
sub
imul
push
loopne
pusha
sub
adc
and
mov
and
mov
shr
int
movsb
or
xchg
int
cs
bound
out
popf
fcomp
sbb
iret
in
test
sbb
sub
pop
or
enter
dec
jle
cmpsl
sub
int3
and
jbe
xor
icebp
adc
mov
mov
xchg
lret
insb
imull
je
adc
jb
int
mov
roll
in
cmpsl
popf
outsb
cmpsl
daa
inc
mov
cmp
xlat
inc
out
rolb
jecxz
lret
pop
ss
stc
repnz
sbb
repz
push
cli
repz
scas
pushf
into
movsl
data16
xor
out
in
aas
mov
push
jns
sub
adc
push
adc
rcrb
add
jp
adc
cld
xchg
loope
ljmp
in
and
scas
dec
cmp
push
shll
pop
push
mov
or
cld
jae
repnz
ret
sbb
sub
aaa
mov
sbb
out
cmp
add
adc
orb
stc
pop
in
jbe
pushf
les
pop
push
test
mov
lret
xchg
das
mov
pop
mov
movl
sbb
fists
add
mov
xor
lcall
into
int
dec
inc
adc
add
aas
pop
pop
outsb
lea
mov
pop
test
stos
jmp
shll
mov
repnz
push
or
xchg
addr16
and
gs
sbb
cmpsl
adc
mov
or
mov
sub
dec
pop
dec
popf
inc
stc
in
movsl
mov
pop
mov
push
call
es
push
add
cmc
push
fwait
and
xor
mov
inc
lds
lock
cmp
fldcw
sbb
sub
cmp
sub
out
push
sbb
lcall
mov
add
pop
push
fistpll
fdivrp
test
xchg
gs
mov
scas
js
jb
lcall
imul
imul
lods
cmpb
mov
rcrb
pop
sbb
lea
jns
and
add
decb
lahf
dec
xor
push
cmp
add
xor
in
into
imul
and
xchg
mov
scas
xchg
jno
cld
sbb
inc
mov
mov
push
sub
adc
cmp
adc
sub
cltd
jnp
sbb
popa
call
jp
fdivrl
imul
or
jmp
sub
pop
add
fwait
sub
inc
add
xchg
or
movsb
dec
rcrb
mov
insl
push
lods
cmc
sub
sahf
dec
mov
jmp
add
adc
jg
js
scas
cmp
dec
test
jae
push
mov
fdivrl
shr
mov
cmp
sbb
fwait
rol
xlat
movsb
fdivs
mov
je
stos
inc
outsl
xor
fmuls
pop
mov
int3
repz
fcomp
dec
dec
insl
pusha
ret
loopne
dec
lods
cli
iret
mov
jno
cmp
je
push
and
adc
out
daa
jge
lock
sub
lret
inc
jns
les
push
mov
sub
jge
fdivrs
mov
and
jle
push
sahf
testl
iret
dec
mov
pop
dec
sbb
cmp
pop
cmp
jno
cmpb
cmpsb
lods
inc
arpl
negl
sub
cmp
adc
scas
or
faddl
mov
mov
push
jo
cmp
sbb
push
enter
leave
mov
sub
cltd
mov
cmp
movsl
ljmp
dec
mov
push
ret
mov
mov
stos
push
in
add
jne
cmpb
mov
sbb
fldenv
arpl
aaa
dec
mov
jecxz
outsl
divl
test
icebp
int
adcb
inc
cmp
cmc
push
mov
lods
pushf
sub
out
mov
dec
icebp
pop
unpckhps
imul
lods
outsb
push
pop
out
jmp
nop
push
or
jp
pop
sub
push
push
sbb
insl
dec
mov
mov
call
cwtl
data16
push
and
in
push
add
pop
fucomip
lahf
rorb
adc
aaa
test
mov
nop
lea
mov
test
or
int3
andl
inc
fistpl
sahf
jle
pop
jmp
sub
push
and
pop
push
xchg
push
xchg
leave
xchg
push
aad
sbb
insl
fldl
jne
sbb
arpl
loope
lea
lods
pop
iret
inc
mov
jl
pop
mov
adc
xor
xchg
adc
nop
mov
jne
stos
mov
xchg
dec
test
scas
das
scas
xor
fsincos
aaa
fistl
repz
add
push
pop
push
mov
fnsave
dec
js
add
loope
es
cmp
notl
data16
pop
inc
dec
jge
aas
enter
mov
mov
fistpl
add
cmpsl
sub
xchg
outsl
into
nop
and
push
cmp
inc
in
sbb
es
jge
xchg
mov
push
xor
inc
cli
rcll
popf
mov
addr16
lea
jo
push
rcll
dec
in
addr16
adc
push
dec
jmp
dec
push
cmp
sub
lea
cmc
stos
sbb
cmpl
cmc
mov
and
xor
cwtl
jge
xchg
mov
mov
movsl
xchg
enter
movsl
xchg
add
jns
rorb
lret
loopne
into
ds
xor
and
dec
push
cld
mov
popa
iret
filds
push
mov
pop
cmp
xor
daa
out
lret
sahf
xor
sbb
and
xor
adc
aad
fdivs
and
xchg
xor
mov
movsl
dec
andb
xlat
fisubrs
or
sbb
and
xchg
insl
fwait
xor
out
cmp
add
cld
rcrl
pop
mov
int3
lcall
dec
jae
sbb
xor
mov
arpl
fistpl
fldl
add
pop
aam
inc
mov
or
xchg
push
or
inc
xchg
shr
clc
push
addr16
or
sub
inc
sub
test
mov
dec
mov
lods
lahf
lods
cmpsl
xchg
mov
dec
lock
pushf
mov
lcall
dec
mov
or
add
imul
adc
dec
jae
jno
add
pop
loope
jnp
inc
xor
loop
add
mov
loop
lcall
sbb
imul
fwait
mov
out
daa
lock
xlat
popa
add
sbb
ret
leave
sbbb
ficoms
sysret
rolb
mov
pop
sub
dec
jmp
and
in
fisubs
sub
xor
adc
aad
pushf
push
mov
cmpsl
or
in
call
ret
bound
xchg
mov
stos
cmp
dec
jne
sub
gs
push
fstpl
cmp
pop
movsl
enter
popf
mov
sub
adc
sbb
xchg
decl
mov
fcomps
and
lock
push
adcb
add
lret
fwait
mov
inc
fwait
cwtl
in
dec
inc
jb
das
cmpsb
jge
ret
shlb
jecxz
fsub
cld
adc
in
cmp
imul
sbb
loope
add
adcb
into
mov
in
out
movsl
pop
push
popa
sar
inc
les
cli
cmp
imul
lods
das
or
dec
jbe
mov
addr16
cmp
out
push
push
or
push
rcl
out
stos
xchg
push
dec
cli
xor
cmpsl
mov
fldenv
pminub
jg
jmp
adc
loopne
push
mov
pushf
xchg
fdivs
aad
inc
jns
imul
mov
fdiv
and
or
jbe
pop
rcr
add
push
xor
lods
push
jne
out
dec
lret
daa
xchg
sbb
mov
fwait
adc
add
inc
filds
hlt
data16
bnd
xor
and
or
mov
add
jb
sar
lods
mov
stc
and
scas
dec
into
pmulhw
dec
mov
mov
adc
aas
in
subl
cltd
dec
dec
sub
push
or
and
mov
mov
cmp
inc
iret
push
jg
dec
sub
pop
sbbl
inc
pusha
aam
lock
sbb
adc
dec
pop
je
addr16
cmp
insl
jns
mov
repnz
push
mov
sbb
mov
cmp
jb
in
sbb
xchg
sahf
jl
inc
xlat
xchg
shlb
pop
sbb
or
jo
add
add
stc
push
int
add
cs
push
ss
lea
adc
nop
aaa
outsl
jne
ss
fildll
cmp
inc
dec
dec
jp
inc
dec
cld
xor
mov
lcall
jbe
aam
out
jle
cs
cmp
push
enter
inc
fsubrs
cmp
jbe
scas
and
and
negb
pop
adc
in
cmp
sub
out
inc
push
mov
nop
cld
stc
hlt
mov
push
dec
cmp
mov
mov
lods
xor
loope
lcall
add
cmpl
bound
mov
cld
in
pop
dec
and
add
fisubl
mov
and
cld
repnz
test
mov
push
cltd
sbb
pop
mov
sub
movsl
fmuls
xor
mov
jmp
sub
lea
stos
gs
cmp
mov
mov
imul
add
test
sub
sub
lret
shrb
adc
mov
add
and
rcrl
addl
cwtl
or
mov
pop
xor
jg
mov
cmp
dec
hlt
cmp
push
xchg
pushf
call
int3
sbb
daa
sub
push
movsb
cltd
push
insb
mov
loopne
sub
in
repz
sbb
int3
sub
lret
jne
ss
cld
repz
in
lret
mov
sub
cmp
xchg
push
fists
jge
fsubs
mov
loop
mov
mov
adc
loope
nop
clc
sbb
lock
xchg
lcall
inc
repz
data16
stos
mov
jle
popf
sbb
aam
gs
jnp
jns
push
ds
into
das
mov
dec
sbb
push
jecxz
aaa
jo
mov
mov
in
jmp
mov
shrb
lock
push
in
lret
leave
xchg
jg
scas
das
pop
xchg
xchg
pusha
add
push
mov
add
and
jmp
call
mulb
push
pop
subl
cs
push
shll
add
repnz
out
dec
jbe
push
test
ret
fistl
call
xchg
test
jb
aad
ljmp
jbe
pop
push
jg
mov
jp
mov
push
sbb
mov
pushf
in
jg
dec
sbb
inc
push
push
mull
iret
ret
std
add
leave
negl
xor
adc
push
fwait
xor
shl
sahf
arpl
lds
sub
mov
add
filds
lock
sub
mov
sub
and
inc
xchg
cmp
js
adcb
push
dec
push
ds
dec
mov
out
or
pop
inc
xchg
inc
dec
push
pop
jne
adc
adc
push
pushf
mov
dec
and
mov
ljmp
bound
lret
sub
adc
ljmp
jle
sub
jo
sub
andb
imul
cld
imul
jae
sarl
adc
cmp
leave
add
cs
notb
push
push
adc
mov
sbb
fistpll
cmp
jbe
in
or
pusha
mov
enter
test
xchg
das
dec
jl
cli
int
sub
push
push
pop
enter
jae
cmp
pushf
or
mov
movb
sub
jb
es
sbb
mov
sbb
push
jecxz
rcl
out
lock
gs
shll
lock
notb
cmpsl
stc
mov
mov
inc
fs
xchg
or
pop
or
scas
je
jmp
jno
mov
mov
je
mov
jo
push
je
stos
sub
lret
pop
mov
je
inc
mov
lds
mov
add
jns
inc
leave
stos
lahf
es
into
insl
lahf
insl
fidivrs
clc
and
sub
pop
xor
cmp
inc
xchg
test
movsb
jl
out
aad
xchg
lock
adc
or
paddusb
shrl
scas
inc
and
stc
and
sbb
loopne
fwait
mov
aam
jb
fwait
sbb
and
sti
mov
push
sbb
clc
pop
lds
push
shr
xor
repz
hlt
and
fldl
fcompl
adc
jg
enter
dec
mov
rorl
int3
push
repnz
test
xchg
cmp
adc
xor
andb
mov
mov
mov
iret
cmp
movsb
jp
push
loope
push
push
push
into
inc
push
js
sti
jo
cmp
mov
loope
push
in
xchg
and
sbb
pop
mov
ljmp
scas
add
pop
sub
dec
bound
inc
inc
iret
dec
or
loopne
cld
loop
cmp
push
fs
mov
testl
mov
adc
push
aas
mov
xor
fdivrl
sub
enter
xchg
data16
stc
imul
add
les
xor
cli
aaa
cltd
sahf
dec
movsl
loopne
outsb
test
ja
iret
mov
rclb
addr16
arpl
shrl
inc
pusha
lds
xorl
jle
xchg
icebp
add
jg
xchg
xor
into
sbb
in
and
repz
push
pop
dec
adc
fwait
in
mov
lods
les
inc
sub
mov
out
fnstsw
ja
push
or
js
mov
sbb
inc
lcall
mov
jbe
ror
mov
adc
stos
xlat
lods
out
imul
xchg
dec
bound
push
push
mov
push
dec
fcompl
mov
dec
xchg
xchg
bound
inc
add
dec
push
pop
sbb
and
and
repnz
cmp
sub
xchg
jge
lahf
je
fbstp
repnz
fwait
cltd
jge
xchg
mov
adc
xchg
imulb
insb
in
and
sti
jg
inc
dec
add
mov
sbb
mov
xchg
aam
xchg
insl
mov
loope
js
fidivrl
out
add
jno
adc
dec
ja
ret
sahf
xor
mov
repnz
daa
mov
inc
xchg
cld
pop
xchg
fsts
adc
jns
ret
mov
insl
hlt
aas
std
cmp
imulb
jne
sbb
dec
enter
xchg
pop
jnp
aad
scas
fs
dec
pop
aas
mov
xor
sub
cwtl
ror
push
sbb
sbb
push
lahf
cwtl
aas
bound
adc
ljmp
jne
or
pop
cmp
mov
cmpsb
and
fwait
into
in
push
lea
in
int3
mov
inc
ljmp
push
ss
incb
xor
jo
adc
js
and
iret
ljmp
push
push
cmc
mov
mov
aaa
adc
jbe
aas
xchg
fistps
push
pop
sbb
inc
icebp
lock
gs
scas
sbb
frndint
jle
repnz
and
sbb
xchg
int
mov
clc
or
adcl
mov
scas
dec
stos
add
test
rolb
iret
cmp
fildll
xlat
mov
xchg
pop
xor
push
sbb
incb
js
pop
inc
xchg
pop
mov
adc
filds
out
xchg
fcompl
or
shrb
jecxz
aam
repnz
adc
adc
mov
mov
cld
inc
pop
sub
mov
cmp
data16
push
loopne
sub
dec
sbb
push
les
jge
and
adc
pop
and
mov
das
cmp
mov
into
sbb
popf
pop
xchg
dec
aad
pop
push
sub
test
adc
cli
jecxz
daa
or
enter
xor
sub
imul
test
lea
inc
pop
push
pushf
push
inc
faddl
sbb
add
mov
dec
data16
adc
outsb
sbb
jae
mov
add
xor
mov
aam
sub
out
imul
lods
push
out
xchg
divl
int3
jns
or
outsb
andl
repnz
jle
inc
rorb
push
push
jbe
call
aaa
sbb
imulb
lahf
push
int
push
arpl
dec
pushf
cmp
adc
mov
ret
xor
lock
xchg
or
imul
cmpsb
mov
les
cmp
packuswb
mov
push
js,pt
xor
and
dec
nop
and
data16
xor
fcoms
cmpsl
flds
push
jns
add
jae
cwtl
into
pop
xor
std
pop
mov
sub
inc
std
imul
cmp
jno
popf
jp
mov
sarb
or
inc
xchg
add
aam
and
mov
push
arpl
out
pop
jb
fadd
and
daa
mov
inc
lcall
mov
notl
cmpsb
jg
pop
out
roll
arpl
clc
ljmp
pop
out
mov
sub
xchg
mov
in
rorl
aas
jp
pushf
cmp
jge
mov
sbb
sbb
xchg
ds
jle
mov
mov
dec
xchg
jnp
and
inc
cmpsl
jle
orl
sbb
nop
mov
les
xchg
fs
jb
arpl
mov
pusha
and
int3
pop
enter
add
arpl
enter
ljmp
fisttps
jnp
je
mov
jle
jg
cld
ja
outsb
sbb
call
out
xchg
insl
ss
cli
or
jnp
iret
fwait
push
mov
push
ret
lret
lahf
mov
sahf
cmpsl
cmp
int3
inc
or
jbe
in
xor
clc
fwait
jae
out
mov
cld
jecxz
rcll
push
mov
je
mov
sub
inc
dec
inc
sarl
mov
shll
das
mov
clc
and
in
jnp
cli
add
add
sub
mov
cmp
aam
mov
or
and
and
in
and
xchg
cs
pop
outsb
scas
out
das
cwtl
mov
lea
inc
dec
jns
ljmp
xor
cmp
stc
into
dec
stc
jbe
int3
jg
sbb
adc
add
rcr
repnz
testl
cmp
inc
mov
enter
cltd
movsb
and
jnp
sti
into
sub
mov
and
inc
add
das
movsb
fcmovnb
xor
mov
or
aaa
fwait
pop
or
or
in
ds
test
jmp
popf
std
mul
je
cmp
sbb
add
je
pop
xchg
xchg
jns
push
mov
in
clc
pushf
jp
rcrl
insb
rol
sbb
addr16
or
clc
in
push
orb
cmp
rep
mov
sbb
add
stc
dec
xchg
ja
or
int
js
pop
xchg
mov
mov
pop
xchg
aad
push
jmp
dec
lea
loopne
in
xchg
add
push
sbbb
xor
pop
sbb
fiadds
sub
fdivl
xchg
jbe
push
jnp
in
mov
sub
scas
add
pop
xchg
pop
sbb
or
rcr
pop
jbe
mov
loopne
insb
jg
jecxz
mov
into
lock
sbb
jne
xchg
cmp
movsb
lret
and
aad
gs
inc
inc
sbb
xor
movsl
iret
aad
xchg
xchg
mov
test
adc
iret
std
pop
fidivrs
in
jae
xchg
mov
test
les
shlb
insb
mov
loope
fnsave
lods
rcrl
and
sub
cmp
mov
shlb
bound
sbb
add
sbb
das
jl
jno
sbb
push
call
push
cmp
xor
adc
xor
pop
call
inc
lock
xchg
pop
mov
dec
xchg
dec
jne
dec
or
into
pop
jb
lock
fnclex
test
imul
sar
and
or
sub
daa
cmc
repz
out
lahf
xchg
sbb
mov
dec
aad
xchg
in
xchg
icebp
push
sub
montmul
cmpsb
ret
sbb
lods
filds
mov
dec
aam
mov
inc
jmp
mov
cmp
in
sub
mov
dec
loope
adc
js
jp
aam
pop
jl
xchg
mov
pusha
std
sbb
stc
mov
push
cmpsl
pushf
leave
daa
pop
xor
fdivrs
fistl
push
rcl
mov
xor
shl
mov
aas
dec
pop
xchg
mov
orb
cwtl
subb
jmp
insl
cmp
fisttpll
data16
mov
xchg
xor
pop
cld
gs
push
pusha
outsb
or
mov
in
std
and
inc
mov
out
xor
cmp
int3
xchg
mov
sbb
xor
xchg
jge
and
cli
push
jecxz
cmpsl
push
xchg
gs
iret
dec
dec
leave
mov
call
mov
std
pop
adc
fimuls
insb
popa
ja
cltd
cwtl
aas
jbe
mov
xchg
inc
jecxz
and
mov
scas
leave
mov
push
mov
pop
inc
inc
ss
pusha
outsl
sbb
stos
xchg
sbb
fisubl
sbb
adc
lds
xor
mov
mov
jp
dec
inc
ljmp
dec
cmpsl
iret
cld
dec
jle
add
sbb
addb
mov
jle
and
cmp
sub
lds
pop
adc
adc
movsl
test
sub
sub
das
add
jo
or
fsubl
jle
mov
sbb
clc
pop
or
jae
loopne
into
cwtl
push
orb
and
repnz
sarb
hlt
imulb
rclb
xchg
mov
or
add
bound
xchg
and
inc
daa
out
out
aas
ret
mov
enter
dec
sarb
int
lods
adc
lret
push
xor
lret
ljmp
and
lds
addb
adc
imul
xlat
mov
lret
cmp
cmpsb
aas
ljmp
pop
jo
xchg
vmovapd
fistl
mov
mov
or
aaa
imul
adc
push
lret
xchg
into
aad
xor
ror
jle
lock
out
enter
mov
jbe
fnsave
mov
inc
add
in
mov
and
xor
sysenter
adc
in
jb
dec
and
fsubp
mov
push
fmul
int3
add
xlat
mov
sti
inc
rorb
dec
hlt
in
pop
pop
cwtl
cmp
xor
mov
lahf
sbb
movsb
int3
xchg
mov
lret
or
pop
lahf
add
ja
or
pop
ljmp
scas
xchg
sbb
arpl
xlat
repnz
pop
mov
jae
loop
dec
cld
lods
ljmp
int3
jns
repz
popa
jmp
pop
imul
int
mov
mov
mov
inc
fistpll
inc
sub
out
xlat
lock
cmp
dec
notl
fstpl
mov
xor
cmp
scas
clc
xchg
outsl
in
add
leave
xchg
cmp
jle
mov
into
shrl
mov
int3
inc
sbb
out
hlt
shrl
fdivrp
inc
test
lods
fistpl
mov
out
mov
push
or
sub
inc
in
inc
pop
jp
out
popa
pop
lods
jne
mov
add
inc
push
cli
aam
cmc
scas
and
ja
fiadds
mov
rcl
or
pop
pop
jnp
sbb
ret
jns
sub
notb
shll
mov
push
dec
test
mov
mov
jp
jp
ja
sbb
xchg
dec
imul
xchg
mov
add
xor
mov
cmpsb
push
jp
mov
cmp
pop
xor
stos
fcoms
mov
xchg
sahf
orl
clc
cmp
xlat
lret
mov
movsb
xor
out
and
cmp
xor
push
mov
repz
mov
leave
cmp
test
cwtl
pop
pop
data16
int
sahf
testb
mov
mov
ja
lock
aad
mov
adc
xorl
or
and
lds
rorb
enter
add
sub
ljmp
mov
sar
dec
jecxz
jl
lds
not
xor
movb
ficompl
in
fsub
pop
push
or
pushf
adcl
pop
push
test
outsl
push
mov
lcall
inc
sbb
and
push
inc
push
mov
shll
adc
push
adc
adc
push
mov
dec
leave
add
cmp
cmc
cmovl
lret
hlt
xchg
and
and
push
movsb
dec
jg
xor
arpl
sbb
sub
lods
scas
and
push
lcall
jl
gs
or
popf
test
mov
fisttpll
out
outsl
adc
cmp
js
in
jno
and
inc
ret
rcr
insl
lret
pop
or
or
stos
dec
xchg
xchg
lret
imul
in
insb
pop
and
mov
sbb
into
scas
cwtl
std
pop
pop
imul
incb
roll
out
push
xor
popf
out
push
cmp
cmp
fidivl
addps
iret
pop
lock
ret
ss
es
jnp
enter
push
or
sub
xor
dec
daa
push
lea
aad
fs
mov
add
data16
add
dec
lahf
add
pop
arpl
pop
or
lahf
icebp
dec
xchg
xor
in
cmpsl
ret
pop
cwtl
pop
orl
out
add
scas
xchg
in
inc
fbld
pop
xor
out
jae
lahf
push
push
loop
gs
inc
xchg
int
movsb
hlt
test
pop
mov
xchg
inc
dec
data16
mov
fucomi
xor
pop
push
shrl
mov
std
and
add
outsb
data16
jns
loope
mov
movsb
xchg
sub
fildll
pop
imul
pop
jp
and
repz
imul
inc
jno
test
repz
nop
ds
add
and
xlat
push
je
int3
or
dec
or
adc
xchg
pusha
fdivl
inc
jge
mov
bound
aas
cmp
inc
jbe
add
or
std
pusha
in
movsl
lret
sbb
rorb
adc
cmc
popf
stos
out
in
cli
and
mov
aad
xor
push
fsubrl
lods
dec
xchg
cmp
call
or
fcmovnu
jl
xchg
sbb
cmp
repz
mov
lcall
sub
mov
cmp
adc
ja
testb
lret
sub
sbbb
fisubl
ja
pop
nop
cmpsb
mov
add
loopne
cmp
iret
dec
mov
stos
insl
mulb
lds
xchg
adc
mov
fwait
iret
outsb
pop
mov
icebp
dec
or
or
ds
jl
sbb
adc
sbb
in
pop
aaa
jnp
cmpsb
jae
jne
movl
xchg
ja
mov
add
aaa
subl
jmp
cs
popa
push
push
sub
das
dec
cmp
pop
aaa
pop
adc
sbb
ja
mov
cmp
ss
cwtl
cs
xor
shll
jle
cmp
fisttps
adc
inc
adc
lcall
inc
cmpsl
adc
in
pop
insl
aam
push
fnsave
ret
int3
movsb
xor
mov
mov
shlb
les
aad
aas
nop
fcom
mov
sbb
cli
fdivp
rorb
pop
sbb
das
mov
xor
mov
adc
push
xchg
inc
cmc
or
cmp
or
aam
cld
jnp
jg
inc
sub
push
int3
jge
xor
mov
cmp
movl
push
and
shrl
mov
movsl
psubq
lods
out
insl
insb
bound
mov
jge
fistps
lret
xchg
inc
xchg
add
adc
lock
test
xchg
pop
push
sbbb
jbe
jae
dec
jae
xchg
mov
inc
dec
popa
jb
leave
test
sub
orb
xor
stc
clc
popf
in
sub
pusha
fnstsw
in
jbe
and
xchg
mov
add
je
xor
in
jne
push
xor
sub
dec
xchg
iret
dec
shl
ret
mov
sub
subl
jp
test
mov
and
sbb
iret
cmc
add
std
in
inc
notb
xor
inc
mov
add
mov
mull
adc
xchg
jmp
and
xlat
cld
loope
ret
sbb
mov
sahf
adc
xorb
sahf
push
xchg
pop
xchg
mov
mov
addr16
jb
lea
ret
sub
fld
sub
cld
jnp
mov
movsb
mov
insb
push
cmp
popf
int3
shll
jge
xchg
dec
cmpsl
pop
pop
out
xchg
xor
dec
loop
repz
adc
inc
ds
ds
cmpsb
fcompl
daa
int
mov
or
insl
push
nop
cmpsl
inc
dec
mov
add
ret
stc
or
into
xchg
mov
fdivl
js
outsl
mov
scas
aas
leave
sub
jo
add
pop
test
push
inc
adc
mul
sub
dec
jg
push
dec
sti
xchg
shl
sbb
test
mov
mov
jp
dec
mov
test
mov
mov
fs
cmp
sub
jl
mov
lahf
jmp
sub
popa
roll
lock
jp
mov
fsubrp
push
xchg
loope
aad
add
cld
mov
adc
or
mov
or
xor
pop
addl
or
ljmp
cmp
adcb
inc
subb
xor
int3
push
sbb
jp
repz
push
pop
rolb
add
lds
push
jl
push
mov
or
out
cmc
cmp
sub
mov
add
and
or
pop
or
pop
inc
aaa
add
cmp
mov
out
out
fwait
pop
push
insb
insl
cmpsb
icebp
clc
stos
dec
cmp
xor
mov
push
add
dec
cmp
sbb
mov
stos
hlt
aaa
test
sahf
cmpsl
lret
xchg
stos
cltd
shrb
shlb
inc
pusha
pop
int3
sti
xchg
mov
add
pop
out
pop
movsl
cmp
in
cld
fs
test
inc
and
push
add
test
lods
int3
xchg
out
in
or
repz
push
mov
mov
mov
sub
inc
mov
shr
sub
cmp
xchg
add
repz
outsb
shlb
cmp
insl
or
pop
testl
adc
negl
fs
mov
adc
pop
shlb
aad
into
js
call
cmp
cli
lock
jne
jp
dec
cmpsb
xchg
push
xor
sahf
xchg
xchg
imul
adc
and
dec
xor
iret
xlat
add
inc
pop
jl
and
push
test
mov
aam
inc
push
dec
dec
lds
sub
mov
std
ficoml
add
fldt
in
ljmp
mov
aaa
xorb
adc
adc
nop
popf
cmpb
dec
ljmp
mov
dec
push
cmp
cmp
adc
lea
movsb
shll
pop
cmp
mov
js
push
mov
lds
andl
jb
inc
cmp
sub
dec
jmp
cmp
push
insl
add
jge
imul
lds
repz
fsubrl
cmc
sub
adc
sub
dec
aaa
or
mov
fld
fsts
pop
je
aaa
mov
rcr
jle
adc
hlt
cmc
or
add
cs
aaa
aam
xchg
sub
lea
jne
pushl
pop
sahf
test
lret
xchg
imul
and
jecxz
in
mov
and
jno
xor
jns
mov
call
iret
movsl
push
adc
pop
xlat
cs
push
adc
int
fcomps
shr
dec
ret
ds
ja
out
jb
push
pop
out
and
xor
sbb
cmc
ja
jno
xor
xor
adc
es
mov
dec
xor
mov
add
scas
aam
xor
pop
stc
xchg
jbe
scas
xchg
mov
jg
insb
movsb
out
jnp
test
loopne
lock
dec
push
xchg
jle
dec
add
xchg
mov
repnz
sbb
test
add
iret
mov
test
test
nop
adc
addb
push
lods
sti
int
mov
fwait
push
call
mov
mov
dec
fstpt
push
add
cmp
push
mov
fsubp
ror
push
les
hlt
pop
sub
adc
xchg
mov
sub
iret
fnstenv
xlat
fs
adc
jmp
push
pop
jge
xchg
add
ds
push
mov
lret
mov
lcall
mov
ret
pop
fisttpl
lret
loope
mov
orb
hlt
or
push
rep
or
shlb
xchg
repz
mov
ds
jge
ja
inc
sbb
mov
add
cmpsl
xor
shll
rorl
ljmp
sub
in
pushf
hlt
fwait
addb
clc
sub
xor
or
jge
imul
arpl
mov
das
stos
xchg
sub
repz
loopne
cmp
and
fiaddl
xchg
cltd
dec
call
jge
push
loopne
lods
loopne
sbb
adc
ret
lret
jns
mov
jb
sbb
scas
mov
push
std
mov
dec
or
jae
add
sbb
mov
xor
dec
xor
movsb
fmulp
enter
icebp
stc
inc
push
cmpsb
lods
popf
shlb
or
push
dec
mov
or
push
xchg
jbe
push
add
pop
inc
imul
sub
rol
xchg
scas
push
aam
jae
jg
test
push
xorb
data16
mov
popf
push
lahf
repnz
jge
arpl
push
jmp
sub
push
fxch
aas
push
inc
mov
insl
mov
mov
dec
and
and
push
mov
es
adc
ljmp
mov
sub
pop
in
jle
idivb
lods
popa
outsl
lret
cmp
insb
push
lahf
pop
insb
inc
jno
dec
dec
pop
imul
jmp
insb
xor
arpl
fiadds
xor
hlt
xchg
mov
push
stc
inc
push
fldt
sbb
hlt
mov
out
adc
dec
xchg
or
xor
mov
dec
int3
dec
inc
adc
jg
les
sbb
cmp
out
add
mov
mov
mov
es
jnp
dec
mov
call
popf
and
ss
popf
testl
xlat
cmp
jmp
pusha
movsl
addl
imul
clc
loope
ja
lds
jbe
subb
cld
xchg
xor
lock
dec
jl
sbb
adc
scas
push
mov
push
or
fs
imulb
incl
pop
xchg
sbb
xchg
cmp
push
out
cli
sub
sti
pop
outsb
mov
lahf
push
sti
or
divb
stos
mov
xlat
mov
mov
cmp
lret
push
mov
divb
jge
fsubrp
jo
stos
or
in
cmp
xchg
push
js
in
jae
adc
xlat
test
push
addb
xor
out
aas
lods
ror
repnz
mov
lods
aaa
div
outsl
inc
xchg
mov
add
lret
movsb
jge
cmp
and
repz
or
xchg
push
jmp
cltd
and
insl
cmp
scas
bound
dec
vrcpps
xor
inc
es
rolb
dec
repnz
pop
sub
dec
lret
lods
insl
xchg
or
pop
enter
jno
pop
mov
xorl
mov
imul
out
dec
lcall
repnz
pop
insb
clc
shll
data16
lock
mov
adc
xchg
mov
cwtl
and
pop
cmpsb
cmp
mov
int
mul
push
xchg
rcrb
xchg
fs
incl
and
mov
inc
mov
sbb
test
sahf
inc
out
movsb
push
xor
dec
in
mov
pop
and
cmp
dec
jne
xchg
xor
inc
inc
cwtl
cmp
cmpsl
roll
std
xchg
enterw
js
insl
rorb
xchg
push
aas
and
daa
mov
out
mov
lahf
inc
adc
rcr
sub
inc
and
mov
mov
mov
xchg
cmp
xor
lods
jp
mov
push
add
sub
dec
rcll
pop
sbb
std
ja
lret
mov
and
xchg
lea
dec
adc
outsl
and
pushf
xlat
inc
inc
lret
sbb
and
int3
lods
jns
fs
jle
dec
js
sub
jge
mov
lcall
jae
std
inc
in
insl
jmp
add
xchg
jnp
test
jg
popf
int3
jno
sbb
and
add
mov
sbb
push
test
or
push
movsb
mov
pop
xchg
cmp
xchg
adc
inc
cmpsl
lods
mov
sub
fisttpll
mov
jg
push
jle
mov
mov
jne
ficompl
and
bound
sbb
ja
mov
div
dec
xchg
push
jnp
loopne
adc
lcall
and
or
enter
in
inc
inc
les
out
jno
aaa
ss
pop
ret
mov
je
adc
loopne
pop
cs
pop
push
rcl
jb
ss
xchg
mov
lea
and
adc
in
sub
dec
inc
jle
inc
outsb
jl
add
stos
aas
rclb
out
imul
mov
test
inc
sbbl
xchg
mov
jae
mov
loope
mov
and
inc
imul
pop
mov
push
incl
cmc
mov
ljmp
jecxz
xor
pushf
pushw
ds
jne
in
mov
mov
jg
shll
add
daa
lods
and
pop
jge
jle
test
jnp
mov
lods
or
mov
pop
fistps
mov
dec
hlt
and
mov
add
insb
ljmp
aas
mov
mov
test
je
cmc
inc
call
and
pop
aam
inc
inc
push
fdivrs
pop
mov
cmc
dec
cli
imul
sub
or
addr16
sbb
sahf
add
stos
not
push
hlt
and
ja
sub
lahf
test
jae
push
mov
movsb
dec
mov
sbb
stos
push
popl
lret
test
btc
repz
xor
out
adc
loope
dec
and
bnd
jp
cmp
xchg
cld
jbe
into
outsb
mov
push
adc
js
int3
mov
adc
test
sbb
rolb
out
dec
outsl
xchg
jno
mov
xchg
sbb
outsb
inc
ja
mov
cwtl
adc
mov
out
xchg
push
and
das
mov
push
mov
fnsave
bound
sbb
ficoml
mov
push
and
dec
mov
inc
mov
mov
imul
cmp
shll
or
xchg
pop
push
les
or
adc
jp
bound
push
daa
inc
mov
push
jp
lret
inc
pusha
pop
mov
pop
mov
mov
cmc
jle
jae
cmp
shll
lods
movsb
xchg
insb
cmp
or
movsb
jg
jne
cltd
es
in
dec
mov
jmp
inc
and
push
xor
in
in
repz
lds
ret
xchg
fdivl
push
outsl
adc
adc
jmp
dec
mov
cltd
mov
and
ja
sub
cmpsl
data16
daa
rorl
mov
pop
cmp
int3
test
sub
xchg
mov
lods
fisubs
loop
xchg
ja
les
xchg
fidivrl
xor
hlt
rcll
cmpsl
rol
bound
js
jns
or
in
inc
cmp
xlat
add
fldenv
in
pop
sbb
xchg
sbb
loopne
test
add
fstpt
jp
popa
or
pop
pop
fsts
and
int
xchg
ror
mov
mov
pusha
fstpt
cwtl
push
addr16
and
daa
mov
pusha
mov
loopne
sbb
mov
in
push
mov
notl
adc
clc
cmpl
ja
test
cmpsb
cld
sahf
lret
jl
dec
dec
xor
cmpsb
or
out
ja
pop
or
mov
mov
push
inc
and
and
scas
inc
mov
jae
fisubs
repnz
adcl
icebp
xchg
xor
insl
rcll
xchg
rclb
lret
jmp
popf
cmp
enter
clc
add
mov
add
and
cmp
xchg
add
sbb
lret
mov
cld
popf
push
les
ss
sbb
or
dec
xchg
stos
scas
adc
inc
push
in
adc
inc
lret
add
pop
decb
mov
push
push
inc
add
push
mov
jecxz
dec
jmp
mov
rorl
or
pop
sbb
and
mov
pop
call
out
adc
scas
xchg
inc
ds
adc
dec
push
lret
adc
sub
lds
sahf
out
jg
xchg
cmpb
mov
mov
adc
in
mov
xchg
fldcw
pusha
sbb
ret
and
aam
or
nop
mov
jae
enter
and
je
icebp
lret
hlt
sar
lret
fs
icebp
movsl
aad
in
adc
add
stos
adc
xlat
lcall
les
in
jmp
add
mov
mov
out
cld
jmp
ficoml
enter
sub
imul
sbb
pop
push
mov
cmp
inc
insb
sbb
inc
sbb
mov
xchg
or
and
push
outsl
mov
mull
add
add
jg
test
xchg
dec
cli
mov
in
orb
in
xor
daa
mov
push
leave
aas
popa
dec
xchg
shll
popa
icebp
mov
jge
jmp
outsl
je
sti
int
jge
push
sbb
inc
data16
mov
lods
xor
jle
jo
mov
cltd
inc
hlt
adc
adc
ljmp
mov
inc
add
in
and
lds
xchg
pop
fs
mov
pusha
dec
push
movsl
add
fwait
test
stos
push
or
cltd
stos
jmp
and
in
ds
adc
dec
xor
jbe
push
xor
push
mov
mov
inc
shr
cmp
fldenv
decb
in
xchg
pop
bound
cld
pop
push
and
sbb
cwtl
popa
incb
inc
rol
or
adcl
jo
iret
mov
sbb
out
fiaddl
add
arpl
and
out
mov
fs
dec
imul
je
cmp
lds
repz
les
jbe
xchg
sub
push
popa
enter
cld
sar
pushf
pushf
cmp
pop
and
and
xor
add
loopne
mov
push
push
loop
or
sub
jle
push
cmp
xchg
arpl
xchg
outsb
addr16
jmp
and
adc
movsb
add
inc
jle
cwtl
or
icebp
cli
je
pop
xor
outsl
fisubrs
xchg
mov
mov
cmc
out
cmp
adc
lea
adc
pop
ja
xchg
pop
xchg
push
cmc
dec
mov
in
push
dec
test
lds
xor
add
inc
inc
or
mov
iret
mov
push
push
cmp
rolb
pop
lock
jge
pop
subl
cmp
scas
leave
jae
adc
sbb
adc
jecxz
mov
gs
pop
rcl
shll
lret
sub
sub
mov
mov
imul
add
push
sub
inc
dec
xchg
inc
and
add
iret
add
add
mov
push
jl
aaa
iret
cmp
push
lretw
mov
mov
fcmovnbe
ja
jo
inc
fstl
dec
push
inc
jle
jmp
dec
dec
or
fldt
add
adc
subb
inc
and
aas
pop
movsb
je
nop
ljmp
add
das
lahf
pusha
xchg
push
out
xchg
mov
xchg
out
inc
xchg
cld
sbb
sub
gs
shll
lret
pop
and
fwait
cs
scas
in
mulb
pushf
testl
jbe
cmpsl
or
jnp
mov
lea
js
call
xor
push
or
test
or
fisubl
mov
jno
dec
fildll
push
fldt
mov
outsb
and
shll
inc
int
cmp
lea
sahf
mov
das
mov
lahf
decb
insl
xor
inc
sbb
call
and
call
push
fcmovne
pop
or
xchg
push
test
loop
jb
icebp
lea
fidivrs
aas
and
imul
inc
loope
push
add
jp
outsb
pop
outsb
aas
sub
push
or
sbbb
xor
or
xor
cmp
xchg
lds
mov
loop
cmp
pop
pop
cmp
lahf
mov
stc
mov
mov
and
dec
mov
movsb
mov
fnstsw
enter
cmp
inc
add
xchg
orl
push
test
pusha
adc
and
push
jmp
in
jg
sahf
leave
adc
andl
jge
jbe
push
test
test
jo
and
jb
dec
daa
je
sbb
jno
and
xor
jo
or
inc
inc
adcl
mov
adc
bound
es
cs
push
insl
mov
sub
test
std
inc
sub
inc
push
mov
xorl
or
mov
or
adc
mov
adc
dec
scas
mov
fisubrs
gs
xchg
push
or
pop
or
mov
mov
or
out
xchg
filds
enter
add
fistl
lods
mov
not
cmp
cwtl
mov
or
pop
add
loop
sbb
xchg
or
jle
push
aaa
xchg
sbb
aaa
dec
popa
addl
imul
push
stos
inc
lods
ds
xorb
xchg
dec
mov
shrb
pop
call
leave
mov
adc
repz
dec
fnsave
push
inc
lds
mov
mov
cmpsb
push
xchg
fwait
sar
mov
mov
mov
fcoms
push
les
push
shll
mov
nop
mov
clc
test
sub
or
testl
outsb
andl
sbb
lods
mov
cmc
or
or
cltd
call
mov
mov
jns
repz
hlt
lret
sub
xor
aam
xlat
jg
mov
add
dec
mov
stos
or
fcompl
sub
xchg
out
or
mov
es
dec
cld
cltd
mov
mov
daa
hlt
adc
mov
cmp
jns
std
enter
sahf
insb
sub
inc
adc
mov
or
mov
out
jp
dec
jge
lahf
xlat
adc
pop
mov
or
stos
cmc
cmc
insl
test
cli
aad
stos
lea
mov
lods
std
rol
aas
add
xchg
push
and
insl
popf
add
rorl
fmull
stos
add
imul
xor
loope
mov
icebp
mov
scas
nop
in
jno
push
sbbl
adc
jae
sub
cmc
inc
sbb
cs
andl
adc
inc
xchg
push
xor
push
cmp
and
xchg
fwait
cmovle
dec
ds
cmp
repnz
aaa
jno
xchg
push
mov
sahf
cmp
rorb
ds
or
push
and
xlat
call
and
sub
data16
mov
adc
aas
xor
pop
gs
mov
cli
pop
fisubs
call
jle
ljmp
sbb
repnz
cmp
bound
or
adc
sbb
inc
mov
pop
std
pushf
popa
pop
xchg
push
cli
pop
sub
in
mov
or
test
lahf
mov
push
jo
jmp
das
push
pop
in
xor
inc
adc
test
xor
subl
jmp
out
sub
hlt
loop
mov
and
xor
adc
pop
fcoml
fistpl
mov
popa
enter
cmp
mov
sti
ja
pop
ja
sahf
into
sbb
mov
pusha
addr16
sub
adc
sub
lcall
inc
or
xor
push
sub
xor
pop
cmp
or
enter
fists
popa
in
inc
xchg
call
dec
js
jbe
inc
pop
fiaddl
loop
mov
lret
pop
add
sti
ret
test
pop
mov
dec
push
push
fidivrs
dec
pusha
xchg
mov
cmp
sub
aam
addr16
push
imul
mov
jmp
loopne
sub
insb
push
outsb
xchg
clc
pop
dec
and
aas
call
xchg
pop
loope
stos
arpl
pop
sub
mov
push
int
inc
xor
cltd
movsb
dec
pop
fwait
incb
incl
ljmp
test
enter
scas
jle
int3
sarl
mov
in
sub
mov
cli
inc
mov
push
mov
outsl
fidivrl
dec
rorl
or
or
aas
cwtl
add
cmp
cmp
jnp
mov
sbb
mov
gs
jno
repz
xchg
adc
xchg
cs
or
mov
fdivrp
test
arpl
pop
sbb
shrb
cmp
jmp
sub
or
sarl
pop
int
and
and
addr16
ret
mov
cs
sti
mov
push
push
push
in
lods
pop
aad
push
mov
pop
cmp
inc
mov
mov
xchg
mov
int
push
loop
cmp
inc
cld
in
inc
cmp
adc
inc
inc
jge
lcall
lock
clc
fmull
xchg
scas
sahf
lret
sbb
push
mov
inc
mov
scas
aam
and
add
inc
and
in
js
jns
test
jg,pn
mov
cli
push
lods
adc
les
cltd
pop
ljmp
sbb
mov
popl
pop
pop
push
jmp
jp
insl
mov
mov
jge
fildl
aaa
movsl
push
outsl
jg
lods
mov
scas
inc
mov
mov
stos
in
pop
loope
lea
pusha
sahf
jmp
or
push
mov
push
andl
cli
jecxz
cmc
add
mov
scas
xor
mov
or
add
cltd
jae
enter
lods
adc
insb
adcb
cmpsl
mov
add
mov
add
and
or
mov
clc
ret
popf
test
mov
stc
push
aaa
mov
mov
adc
push
jp
divb
ret
add
pop
cld
mov
test
push
cmc
mov
mov
in
or
popf
cli
sbb
mov
pop
out
mov
lret
xor
std
xor
mov
cmp
jb
pop
in
push
std
mov
lds
mov
out
daa
cmp
mov
jle
dec
sub
gs
inc
repz
int
lods
insl
pop
push
add
nop
insl
mov
mov
mov
pushf
je
mov
ljmp
ja
mov
mov
inc
adc
mov
cmp
add
movsl
sbb
inc
iret
adc
lret
jbe
pop
fisubrs
pop
xor
adc
dec
rol
and
adc
push
mov
sub
cmpsl
push
pop
les
dec
movsl
pop
popf
hlt
inc
sub
mov
jae
test
mov
ror
jnp
sbb
xchg
scas
mov
cwtl
xor
pop
add
ret
or
popf
pop
pusha
sbb
iret
cmp
shrl
inc
lahf
xor
rolb
pop
fsubs
jne
cmpsb
clc
scas
mov
add
test
shlb
mov
iret
mov
js
insb
mov
or
mov
mov
mov
pop
fs
movsb
or
mov
sbb
dec
test
inc
arpl
sbb
int
hlt
call
cmp
add
mov
cs
mov
imul
and
pushf
jle
popa
sbb
std
rcl
test
xor
cltd
mov
push
test
test
out
mov
test
iret
fsub
sub
cmpsl
push
mov
pop
test
xchg
popf
hlt
adc
mov
movsb
insb
fstpl
jl
xchg
mov
jno
cli
ror
jo
and
in
inc
jnp
idivl
fdivl
mov
inc
in
sub
mov
data16
mov
mov
sbb
push
inc
dec
in
jecxz
repnz
inc
ds
mov
lds
mov
jo
out
mov
es
shl
mov
inc
push
xchg
shrb
sub
addr16
mov
fisttpll
div
lock
test
hlt
and
adc
or
iret
inc
dec
or
mov
cmp
fldcw
cmc
xchg
pop
outsb
xor
mov
gs
test
push
repnz
mov
pushf
sar
pop
jno
fsubrl
jno
mov
pop
inc
or
shl
cmpsl
jl
mov
jmp
inc
mov
lahf
push
lock
ljmp
addr16
and
stos
mov
aam
or
cmp
or
bound
cmp
test
cmpsl
cli
mov
and
ret
ret
outsl
scas
cwtl
xchg
int3
test
les
inc
ror
pushf
lret
shll
mov
push
rcll
xor
sbb
ds
and
pop
inc
cmp
adc
jno
aad
mov
movsl
cmpsl
jg
loopne
shrb
push
nop
ficomps
insb
pop
xorb
xchg
push
mov
inc
lea
inc
hlt
xor
mov
mov
dec
jp
push
xor
addb
roll
dec
dec
cmpsb
adc
pop
test
arpl
imulb
mov
sahf
push
push
call
jns
es
ds
xchg
loop
adc
les
xchg
push
fsubp
test
or
out
mov
mov
push
sub
or
ljmp
inc
cmp
push
inc
cmpsl
push
loope
mov
and
aad
cmp
inc
lock
cmp
es
add
jl
iret
and
stc
cmpsl
jno
rcrb
lret
shlb
sub
iret
sub
cmpsb
mov
in
mov
cli
cltd
mov
test
mov
sbb
js
div
add
xchg
jle
jne
mov
lods
mov
xor
xor
out
and
pop
mov
daa
xor
or
insl
dec
xchg
roll
push
stos
inc
xchg
or
loopne
sbb
bound
push
adc
pop
pop
add
addr16
adc
mov
cmp
push
cmpb
stos
inc
xor
jmp
js
fcomps
ss
loopne
test
and
cltd
xor
fsubl
lret
mov
jg
aaa
aaa
cmc
mov
hlt
pop
xlat
dec
bnd
pushf
sub
scas
push
loope
lret
ds
out
pop
fwait
mov
xchg
mov
add
pop
pop
sbb
dec
inc
push
and
shlb
out
inc
adc
pop
sbb
aam
test
pop
sarl
scas
or
aad
daa
orl
pop
mov
or
xor
jo
daa
jbe
repnz
or
sub
fidivs
dec
pop
push
enter
mov
rcrl
add
mov
hlt
jg
jmp
pop
jl
pop
jmp
sbb
inc
outsb
lret
mov
cwtl
lods
mov
mov
cmpsb
xchg
xchg
mov
mov
into
pop
push
aam
sbb
dec
add
into
xchg
cmp
push
loopne
sti
xor
add
jge
mov
xor
inc
test
cmovnp
das
enter
test
clc
mov
inc
xorl
mov
fdivr
mov
fdiv
fstpt
jle
or
adc
fildl
sarb
and
out
pop
in
aaa
dec
mov
cli
fldl
fs
pop
les
pushf
out
divb
rcr
xor
fists
std
movl
cld
or
icebp
outsl
pop
sbb
cmpsl
mov
xlat
xor
movsb
lods
fisubrs
pop
push
dec
cmp
jnp
repz
sbb
cli
jge
nop
ljmp
fisttps
xor
mov
cld
cmp
test
testb
xchg
lret
or
mov
std
loopne
jb
ss
lock
and
push
mov
add
iret
jo
inc
pop
dec
jno
fstpl
outsl
inc
mov
test
iret
or
and
sbb
aam
dec
xor
dec
adcl
inc
dec
mov
in
movl
jae
call
leave
gs
cmp
pop
and
pop
xchg
xor
sub
and
lahf
test
incl
rorl
popf
and
into
sar
xchg
call
or
cli
pop
test
lods
inc
push
cmp
cld
sti
sbb
jge
jg
sub
jg
xor
dec
pop
inc
jg
sub
fisubl
jbe
gs
push
stos
addr16
jmp
lahf
push
mov
sar
negb
test
je
test
jbe
lret
dec
xchg
xchg
divb
test
or
jge
cli
add
leave
or
out
xchg
ljmp
loopne
adc
mov
les
das
dec
push
xchg
jle
gs
sbb
enter
adc
and
mov
movsb
adc
pop
push
test
pop
loopne
sbb
xor
sub
or
loopne
addr16
mov
push
shrl
aas
or
inc
rcl
xchg
fildl
inc
push
ret
cmp
sarl
jb
daa
ljmp
stos
repnz
frndint
xchg
lock
xor
xchg
bound
icebp
jecxz
or
adc
ud1
ljmp
jle
mov
and
loopne
inc
fldenv
shll
and
test
xor
test
daa
jle
les
loope
mov
mov
lds
or
sub
pushl
sbb
daa
mov
push
jne
mov
mov
jo
and
cld
mov
adc
mov
mov
jl
ds
enter
push
pop
fsubrp
loopne
mov
shrl
sarl
add
std
push
popf
push
xchg
inc
sbb
push
pop
movsl
jne
ret
add
nop
stos
enter
pop
je
clc
sbb
sbb
cli
jmp
adc
jns
dec
loop
fidivrs
pushf
adc
xor
shrl
out
lods
repz
or
shrl
aas
mov
lock
aas
push
adc
xchg
dec
pop
mov
in
sbb
push
test
shrl
rclb
in
test
push
push
jge
movsb
cltd
jnp
loopne
add
inc
sub
dec
stos
call
das
call
in
loop
shll
cmp
push
add
mov
sub
ds
call
insb
mov
dec
inc
xchg
iret
pop
lret
aad
addr16
mov
inc
cmp
mov
pop
jb
dec
arpl
je
pop
jno
stc
jg
pop
and
int3
inc
xor
inc
xorb
loopne
fwait
mov
pop
and
or
or
repnz
in
jecxz
jge
outsb
test
jo
in
rcll
rcrl
das
loop
jns
jecxz
jmp
insb
daa
jge
cli
adc
repz
stc
push
outsl
sbb
pop
jbe
xor
mov
xor
repnz
incl
dec
mov
mov
out
pushf
xor
mov
adc
fcoml
cmpsb
loope
aam
int
jmp
ret
cmp
mov
pop
cld
cmpsb
out
push
mov
inc
mov
fsubs
push
cmp
mov
mov
sub
jp
sbb
push
cmp
lret
jnp
enter
or
sbbb
xchg
dec
and
lahf
lret
pop
movhps
test
sbb
xor
leave
das
jns
shl
stos
shrb
adc
out
in
jo
rcll
std
jmp
xchg
lret
js
cwtl
cmp
clc
fdivs
xchg
stos
pop
bound
popf
pushf
push
push
dec
mov
pop
and
jg
loopne
and
daa
jecxz
stos
add
mov
mov
mov
add
std
lods
loop
imul
sbb
mov
cltd
mov
pop
enter
adc
imul
pusha
push
adc
pop
adc
mov
adcl
and
test
push
and
jmp
or
sub
test
dec
pop
sub
push
jp
lahf
mov
xchg
dec
xchg
test
add
into
mov
xor
xor
push
das
or
in
in
cmpsb
mov
pop
mov
jmp
adc
xchg
cmp
or
push
rorl
ret
xor
bound
or
or
adc
inc
lock
fisttpll
jns
jmp
sbb
mov
outsb
pop
push
pop
lock
or
sbb
out
lods
adc
aaa
popf
roll
lcall
xchg
jecxz
pop
jecxz
cmp
xchg
imul
cmp
adc
in
add
dec
mov
fs
ljmp
dec
mov
nop
pop
or
test
inc
add
cli
jecxz
test
or
xchg
jnp
faddp
mov
lods
mov
fwait
icebp
lods
inc
stc
test
lret
cmp
cmp
xor
movntq
mov
xor
push
fwait
xorl
aas
sbb
fsubl
add
out
push
cs
jle
test
mov
sarb
fs
pop
roll
pop
push
xor
lahf
and
scas
pushf
dec
pop
shll
and
jno
stos
rcr
sbb
daa
fildl
js
ret
mov
mov
jb
jecxz
enter
or
mov
fldt
mov
xchg
cmpsl
or
adc
mov
inc
leave
pop
dec
stos
cmp
lods
mov
repz
test
lock
and
test
pop
out
xchg
mov
adc
call
imul
sbb
pop
ss
xor
mov
mov
iret
mov
mov
cld
fldt
and
shll
mov
dec
mov
sbb
jl
mov
xchg
mov
idivb
scas
xorl
mov
xchg
loopne
imul
mov
test
cwtl
insb
sbb
sub
cmp
sti
popa
cli
repz
lods
mov
movsb
popf
addr16
xor
jle
adc
push
jp
stos
xchg
mov
dec
sub
adc
dec
and
scas
pop
xchg
cmp
icebp
cltd
xchg
xchg
pop
enter
testl
movsl
mov
test
inc
xor
out
or
sbb
cmovnp
popa
jo
sbb
dec
pop
push
sbb
repnz
mov
in
bound
data16
or
lahf
add
pop
bound
xor
clc
sub
fimuls
lods
mov
fisttpll
jae
pop
push
mov
and
sub
loop
lods
add
out
jnp
sbb
hlt
in
clc
add
aad
mull
mov
int
fildll
int3
jo
cmc
pushf
movsl
repz
leave
jmp
mov
push
adc
cli
and
data16
push
or
lock
in
push
test
xorl
sub
xor
pop
mov
ret
xor
ljmp
imul
cmc
cmpsb
stc
jp
inc
lahf
sub
ss
insb
cmp
dec
cltd
dec
and
sbb
xor
movsb
ss
add
cwtl
gs
pop
ret
pop
xchg
aas
ret
lods
push
and
mov
jecxz
divl
lret
and
fisubrs
test
xchg
rcpps
sub
imul
sub
push
ss
fs
push
lds
call
shll
xchg
cmp
int3
les
add
lods
sbbl
inc
lcall
or
add
pop
mov
adc
xor
xchg
pop
ja
inc
dec
mov
cmp
insb
addr16
sub
fisttpll
rolb
sti
int
xor
xor
adc
add
sub
cmp
lea
lahf
bound
loopne
jae
push
dec
sbb
cmc
shll
into
lea
stos
mov
push
adc
mov
enter
bound
mov
mov
dec
mov
or
jnp
sub
adc
popf
jecxz
dec
icebp
ss
mov
fldenv
scas
cs
add
mov
inc
adcb
sbb
pop
outsb
add
lea
xor
cmp
xor
daa
cli
sahf
xchg
rcl
mov
rclb
data16
push
xchg
aam
xchg
das
shrl
xchg
lret
cmp
stos
cmp
lret
jno
mov
in
fs
insb
mov
cmp
test
push
adc
or
popa
cmpsl
push
dec
loop
lds
sbb
mov
xchg
loop
addr16
sub
insb
or
dec
insl
ret
stos
shr
stc
xchg
cmc
data16
mov
test
nop
jnp
xchg
xchg
stos
adc
in
mov
jle
mov
insl
ljmp
pop
in
dec
pop
test
cli
shl
sub
daa
push
adc
or
mov
push
cli
or
inc
xorb
mov
cltd
mov
add
pop
pop
daa
inc
cmc
add
add
inc
mov
aas
shrb
dec
ja
andl
negl
jp
mov
loopne
scas
lds
pop
lods
add
lods
xor
imul
mov
and
ljmp
push
dec
dec
aad
insb
lock
xor
mov
hlt
jnp
dec
mov
mov
xor
mov
xor
insl
jno
test
pop
and
mov
sub
and
shr
dec
testb
and
cmp
out
movsb
sub
mov
repnz
adc
adc
jmp
rorb
pop
pushf
add
xor
stos
sub
mov
test
mov
shlb
loop
lcall
lret
fwait
mov
pop
cmp
in
out
mov
sbbb
stos
fwait
mov
scas
dec
lock
mov
iret
mov
dec
in
rcll
daa
repz
add
mov
pop
popa
mov
cmp
jne
push
inc
push
and
cmpsl
inc
je
in
sub
je
out
addr16
enter
orl
test
dec
xchg
jae
jp
mov
das
add
mov
pop
pushf
imul
mov
jl
aaa
jno
pop
pop
cmp
insl
push
inc
mov
sub
popf
add
int
insb
mov
sti
push
in
xchg
dec
insl
les
repz
dec
mov
jae
leave
bound
or
out
int
popa
dec
cmp
or
in
or
fadds
mov
fidivl
sbb
lods
sbb
popa
dec
jns
mov
inc
pmuludq
jge
jne
and
sbb
iret
push
test
das
fldt
lcall
or
adc
pop
adc
cld
stc
mov
mov
popf
rcrl
push
mov
daa
xchg
imul
mov
sub
inc
in
mov
mov
cmp
push
jl
aam
nop
pop
mov
push
pop
fistpll
sub
js
dec
add
or
push
je
daa
mov
adc
xlat
mov
and
sbb
sub
push
lret
stc
xchg
scas
enter
scas
mov
xor
mov
loope
std
ljmp
bound
mov
mov
inc
sti
xchg
and
enter
shll
cld
into
icebp
popa
mov
jne
sbb
jle
mov
fs
cwtl
rclb
add
sub
data16
sub
jns
aam
sbb
add
ret
adc
outsl
xorl
xchg
fchs
lahf
pop
daa
inc
stc
ljmp
repnz
in
xchg
or
rcl
xor
jl
push
add
pop
push
pusha
xor
int
dec
mov
repz
sbb
or
mov
add
mov
imul
int3
cmc
mov
mov
adc
mov
js
adc
nop
cmp
push
pop
sub
cmpsb
loope
add
inc
mov
sbb
xor
mov
sub
jmp
mov
xchg
sub
ret
mov
push
cmp
add
aam
stos
mov
rep
jno,pt
sub
ret
popf
or
adc
dec
ret
enter
std
mov
xor
pop
rorb
fnstenv
xchg
in
mov
aas
xor
dec
arpl
mov
mov
sti
cwtl
repz
jno
adc
push
xchg
call
xchg
scas
sahf
out
pop
or
fiaddl
xchg
loop
fdecstp
enter
divb
dec
push
out
dec
test
je
dec
jbe
cwtl
test
mov
xor
cmp
mov
call
lcall
adc
cmp
push
cmpsb
adc
pop
or
xchg
div
fs
lea
xchg
fdivrs
dec
or
pop
fisubs
add
pop
clc
mov
sub
xor
add
gs
cltd
push
and
adc
movsb
jl
pop
xchg
test
add
inc
xchg
js
movsb
mov
and
mov
fidivrl
outsb
mov
clc
pop
mov
jno
test
xor
out
push
mov
js
test
xchg
xchg
stos
jg
adc
out
lea
das
pop
and
shll
adc
or
dec
fucom
andb
jecxz
mov
inc
in
push
lcall
ret
scas
gs
call
mov
dec
ret
cmc
adc
xor
inc
add
loopne
in
sar
xchg
pop
nop
out
xlat
add
pop
pop
jb
or
bound
mov
push
adc
out
bound
xchg
sub
or
test
xchg
sbb
push
sbb
sub
xchg
jecxz
add
clc
cmpsl
lahf
dec
sbb
jbe
mov
adc
and
shrb
movsl
xchg
and
or
insb
sbb
mov
mov
repz
push
or
scas
outsb
mov
ja
sbb
insl
mov
add
std
insl
icebp
aaa
push
or
fists
shlb
pop
pop
repnz
mov
outsb
jge
outsl
push
jb
je
mov
jo
mov
mov
mov
movsb
sub
or
call
les
outsl
std
mov
test
scas
adc
or
inc
mov
enter
sub
and
push
inc
mov
out
ret
daa
push
rcll
cli
push
mov
push
add
out
or
push
hlt
push
or
push
cmpsl
std
cmp
xchg
pop
pop
mov
lods
sbbb
inc
pusha
pop
dec
jmp
xchg
int
xchg
jno
sbb
mov
pop
pop
inc
es
cs
push
in
mov
jp
inc
cltd
jg
mov
insl
sbb
outsb
dec
icebp
xchg
push
ds
add
pop
fistps
pop
outsb
xchg
xor
aam
pop
pop
clc
mov
push
mov
xor
mov
aam
xor
dec
jb
inc
push
mov
test
push
sub
enter
hlt
push
sub
jp
push
or
and
sub
mov
mov
jae
mov
lahf
lock
cmp
push
popa
cmp
popf
dec
enter
stos
dec
mov
mov
inc
jmp
xor
std
mov
lcall
clc
or
pop
lret
fstpt
insl
mov
and
testb
call
popa
fdivl
mov
ror
dec
das
mov
lds
add
ljmp
test
xorb
test
cmp
or
xchg
xchg
push
add
sahf
pop
and
pop
add
mov
std
sbb
clc
push
push
push
shr
cs
sub
je
in
xorl
call
je
int
clc
add
push
in
jb
xchg
lea
push
sub
xchg
leave
mull
stos
pusha
shr
ljmp
pop
adc
sbb
cmp
xchg
fisttpll
or
xor
fsubl
enter
mov
dec
into
sub
mov
mov
fistl
ss
mov
sub
mov
test
push
adc
lods
push
call
fwait
cmpsl
daa
pop
jg
sub
sbb
and
pop
dec
jbe
aas
push
cmpsl
sbb
pop
xchg
inc
lahf
lock
shr
mov
sbb
sbbb
sti
out
int3
jo
xor
and
iret
fistl
sbb
test
loop
adc
daa
dec
sbb
or
sub
movhps
xor
mov
sub
pusha
cmp
and
loop
pop
mov
xor
cli
sub
movb
xor
add
add
cltd
xchg
out
mov
push
pop
test
add
add
sub
lcall
xor
cmpsb
rolb
pop
push
push
lods
repz
add
out
rorb
ret
dec
enter
mov
out
xchg
popa
lds
xlat
xor
xor
dec
ss
sbb
mov
lahf
push
xchg
mov
and
cmp
pop
push
sbb
out
insb
ficompl
add
pop
int3
cmp
popa
pop
or
test
enter
paddsb
mov
inc
shrl
pop
xor
repnz
testl
mov
es
decb
lret
and
in
jbe
mov
sbb
add
outsb
gs
or
push
test
jp
xchg
inc
cmp
out
mov
je
mov
inc
loopne
sbb
jl
test
or
ficoml
pop
mov
mov
repz
arpl
cli
mov
or
dec
cmp
mov
aaa
mov
sbb
push
aad
sbb
bound
fdivs
lcall
movsl
sub
pop
xchg
push
or
stos
out
movsb
pop
js
bnd
test
mov
dec
ret
add
int3
std
out
inc
test
aam
bound
and
push
push
gs
mov
push
cmp
daa
add
dec
andb
and
leave
and
ja
pushf
sbb
push
pop
adc
dec
push
jb
cltd
cltd
fsub
cmp
ret
loopne
std
push
jns
or
cmp
jne
pushf
jbe
push
add
comiss
add
dec
div
xchg
dec
push
std
lahf
jns
rol
add
add
xchg
mov
mov
lods
popf
loopne
lock
jno
cmp
add
xchg
adc
inc
or
adcl
mov
rorb
lock
add
iret
icebp
mov
filds
or
in
pop
ljmp
xchg
cmpl
jno
push
mov
scas
and
daa
sbb
xor
loopne
out
arpl
mov
faddl
int3
dec
mov
fcomps
push
sub
jg
scas
pusha
dec
dec
jmp
cmp
mul
or
jns
xchg
ds
xor
jno
mov
jge
mov
insl
cwtl
mov
stos
movsl
adc
int
jg
pop
sarb
bnd
lods
scas
add
cwtl
je
ss
xchg
popf
or
push
test
inc
pop
insb
inc
fcompl
jne
lret
je
inc
mov
mov
out
and
lea
jo
xchg
addr16
cmp
push
fstl
cld
cmp
adc
and
sti
xlat
adcb
adc
mov
pop
mov
mov
loop
sub
negb
mov
push
fwait
inc
sub
fs
adc
mov
add
and
cmp
ja
int3
bound
mov
in
fisttpl
mov
fcomi
fildl
xchg
dec
dec
dec
daa
lret
shll
les
cmp
in
sahf
jp
xchg
loop
testb
cmp
jb
add
push
mov
mov
out
lea
xor
mov
xor
sbb
mov
dec
addr16
fsubrl
add
fs
cmp
popf
subb
pop
test
pop
outsb
dec
jp
xchg
nop
add
xor
test
mov
outsb
adc
sbbb
sbb
jl
push
and
push
push
roll
add
push
sahf
or
adc
xor
jbe
sbb
daa
ret
push
pop
popa
inc
lds
ljmp
mov
rcrl
adc
bound
stc
fs
pop
mov
mov
mov
rorb
cmc
lcall
jbe
sbb
dec
mov
xor
jmp
push
jecxz
xchg
shlb
xor
mov
and
cmp
adc
push
insb
xlat
inc
cs
lods
inc
shll
in
popf
xor
mov
jle
fisttpll
cmp
inc
pop
push
test
repnz
aaa
arpl
sti
gs
jp
mov
popf
or
mov
lahf
or
arpl
fs
mov
hlt
cmp
jmp
and
mov
out
les
mov
ret
daa
mov
clc
push
mov
imul
mov
pop
pop
jle
push
and
sbb
cmpsl
xchg
inc
icebp
cmp
sub
arpl
cmp
in
gs
xchg
into
pop
gs
fsubl
adc
les
pusha
dec
push
imul
xchg
cs
sbb
cmp
lds
sti
lahf
fs
outsl
mov
xor
imul
cmpsl
sbb
or
fcmovne
cwtd
inc
sub
addr16
inc
and
jbe
repnz
mov
in
fcoml
xlat
loopne
mov
out
xchg
mov
bound
test
jmp
cmpsb
jo
in
xchg
inc
inc
sti
cli
insb
sbb
pusha
ret
mov
mov
sub
mov
test
xchg
push
xchg
cmp
stos
inc
lods
in
movb
push
nop
inc
daa
push
mov
shlb
mov
cmc
rorl
insb
cltd
mov
add
clc
fsub
ja
loope
movsl
testb
xor
in
dec
mov
dec
push
mov
loopne
xchg
inc
scas
outsb
lcall
in
sarb
inc
mov
out
cmc
pop
mov
adc
mov
mov
inc
xor
out
ficompl
add
fmulp
sbb
push
xchg
inc
jo
inc
hlt
int
fistl
sbb
mov
subb
cmp
cltd
sub
xchg
enter
mov
pushl
loope
imul
push
fs
adc
lea
sub
je
jle
inc
add
imul
les
imul
je
mov
je
jno
into
jmp
sbb
int3
dec
es
adc
in
and
jp
rorl
xchg
jo
jb
mov
enter
and
mov
dec
adc
sti
out
dec
out
push
scas
and
adc
ror
test
loopne
push
sub
mov
jmp
aaa
stos
inc
jnp
mov
xchg
stc
push
stc
mov
mov
mov
sub
out
lock
popa
fdivr
dec
out
dec
sar
es
mov
call
lret
jno
fidivs
popf
shll
fstpt
cmp
outsl
lret
in
daa
xlat
cmpsl
mov
adc
cld
jns
jle
sti
mov
xchg
cld
jne
add
mov
in
sarl
add
sbb
jmp
xor
xchg
insb
xor
push
fdivrs
push
test
lods
or
dec
xchg
scas
int3
dec
and
push
dec
test
or
mov
mov
inc
and
je
cltd
sub
xchg
mov
dec
add
shl
test
or
dec
sub
das
jl
cmpsl
xchg
test
sub
mov
sarl
fcoml
addr16
xchg
lds
sbb
push
pop
arpl
cmpsl
lret
pop
jle
sbb
xchg
xchg
cmp
mov
mov
cmp
cmp
aaa
mov
lret
push
dec
dec
pop
push
xlat
lcall
fistps
mov
adcb
push
stos
jno
mov
inc
test
cmp
cmp
jmp
xlat
cld
jb
mov
or
push
jp,pn
loopne
mov
ds
jge
jmp
push
xor
jnp
or
repnz
test
dec
cmp
pop
fcmovbe
sbb
fistpl
xor
jg
jne
mov
repz
mov
adc
dec
rcrl
push
mov
adc
dec
add
rorb
out
clc
push
lds
fucomi
sbb
push
es
sub
pushf
pusha
js
cmc
xchg
xchg
cs
cmpsl
dec
icebp
adc
scas
xlat
ret
call
adc
xchg
bound
xchg
out
push
jmp
orb
xlat
pusha
mov
inc
jle
or
ret
mov
std
ret
jae
add
cltd
test
push
sbb
add
shl
fsubl
dec
xchg
mov
jno
xor
ret
pop
dec
imul
les
fmull
jno
add
aad
cmpsb
out
push
push
pop
xor
scas
mov
pop
lods
jns
fstps
xchg
jae
mov
mov
icebp
lock
push
sub
std
loopne
xchg
daa
pushl
mov
and
mov
push
cmp
pop
lds
mov
mov
out
and
jl
add
dec
dec
push
add
add
insb
imul
inc
test
xchg
mov
out
movsl
inc
imul
or
popf
ljmp
mov
jo
add
test
dec
orb
dec
sub
cmp
shrb
sti
dec
aaa
and
push
enter
iret
mov
pop
jbe
movsl
inc
loop
push
loopne
mov
imul
rcrl
push
rclb
mov
dec
mov
imul
xor
jle
outsb
mov
test
gs
push
scas
popf
dec
fdivp
or
sbb
aaa
mov
test
sti
test
arpl
ljmp
shlb
std
or
lods
int3
or
lds
pop
scas
sti
inc
outsl
mov
in
scas
fwait
pop
into
jle
mov
jge
fsubrp
and
jecxz
fcomps
in
and
mov
hlt
pop
sti
jbe
sbbb
iret
sub
loopne
and
xor
lahf
pop
mov
aam
loop
push
ficoms
bound
pusha
cmp
and
mov
popa
out
lods
int
xlat
or
repnz
sbb
cmp
xor
fadds
cli
pop
xchg
jns
dec
or
mov
loopne
push
das
mov
in
lock
push
add
ss
pop
or
nop
cld
repz
sub
xchg
shrl
mov
mov
leave
ret
lods
sbb
fdivr
cmc
mov
orl
int
insb
lods
sub
in
mov
rcr
sbb
sahf
jle
cmpsb
arpl
inc
mov
pop
rcrl
or
jl
push
sub
push
outsb
inc
data16
in
je
or
xchg
sub
mov
mov
adc
sub
and
pop
movb
ficompl
popa
push
xchg
push
out
inc
push
ret
xlat
mov
jg
andb
insl
inc
dec
add
fisttps
icebp
push
pop
cld
iret
aas
call
rol
push
jle
mov
fs
subb
jbe
andnps
popa
icebp
jnp
in
in
ror
xchg
outsb
adc
mov
shrb
in
xchg
sbb
cwtl
dec
adc
out
inc
or
add
cmp
in
and
mov
divl
fsub
jp
std
mov
jl
or
inc
inc
inc
cld
push
cmp
push
lahf
push
daa
mov
cmpsb
pop
inc
and
movsb
loop
mov
lret
out
inc
or
negb
je
clc
or
sbb
jne
popa
mov
dec
lods
cs
loope
scas
jg
pop
maxps
xor
and
aad
sub
movsb
jp
pop
xchg
leave
mov
dec
mov
das
test
cltd
ja
arpl
dec
leave
leave
inc
cmp
rcrb
into
mov
add
js
ds
das
jecxz,pn
xchg
lods
bound
cld
inc
inc
ds
fsubl
loopne
int
inc
mov
xor
rol
inc
jae
adc
imul
lcall
into
mov
mov
add
in
imul
push
and
ret
outsl
inc
add
stos
push
loope
cmp
out
pop
add
icebp
xor
pop
in
dec
stc
jecxz
cmp
loope
gs
sbb
movsl
aam
int
bound
xchg
inc
cmp
and
ret
popf
mov
idivl
push
aaa
and
loopne
hlt
pop
sti
ret
imul
outsb
adc
xchg
inc
mov
fst
out
cmp
push
shrb
mov
or
in
lods
mov
dec
test
in
iret
scas
xor
or
add
dec
cmp
outsb
pop
push
inc
popf
push
enter
lods
add
or
and
mov
adc
xchg
in
repnz
mov
rcll
mov
mov
movsl
mov
xchg
in
xchg
cwtl
sub
bound
loopne
sub
jbe
lcall
clc
mov
lods
inc
mov
sub
jns
cmp
mov
fimull
adc
popa
mov
sbb
mov
cld
incb
hlt
xor
dec
push
xchg
jl
jp
or
mov
xor
pop
aad
leave
or
out
lods
xchg
fs
jmp
jmp
mov
mov
ret
sub
and
dec
cmp
and
jmp
and
aam
ror
ret
xchg
loopne
sub
sbb
push
icebp
cwtl
mov
inc
pop
mov
mov
cwtl
ret
inc
fnstcw
push
sub
fsubrs
loope
xor
mov
loope
insl
aad
sbb
jae
out
andb
lods
mov
mov
cwtl
inc
test
cmc
mov
sub
sub
push
xor
dec
jne
xor
sub
les
loop
das
inc
push
ret
mov
shll
sbb
enter
xchg
mov
pop
pop
mov
es
outsb
movsl
inc
jb
in
mov
dec
sti
cmp
add
test
cltd
stos
adc
cmp
nop
movsl
mov
sbb
cmp
adc
sbb
ss
push
movsb
iret
push
xor
das
dec
clc
leave
add
xor
sub
mov
cmpsb
cltd
leave
sbbl
push
inc
cli
inc
sbb
es
lahf
mov
shll
outsl
or
fsubl
mov
mov
pop
mov
cmp
jb
add
jns
push
aas
adc
mov
subl
sbb
pop
dec
push
gs
out
clc
aad
nop
test
test
jge
call
rorb
test
sahf
cmp
nop
jecxz
into
push
dec
popa
hlt
xchg
pop
jmp
and
icebp
inc
popf
adc
aam
mov
mov
aas
icebp
push
dec
xor
hlt
cli
negb
lret
ljmp
jg
mov
and
bound
push
lahf
outsb
scas
sbb
xchg
sbb
pop
into
mov
lds
clc
xchg
sub
pop
addl
mov
xchg
mov
and
clc
ret
inc
insb
mov
cli
and
or
mov
repnz
test
repz
icebp
jge,pt
lcall
pusha
fadd
mov
sub
insb
mov
pop
cmpsb
xor
jmp
xorl
inc
and
pop
xor
cli
sub
stc
fisttpll
cmp
addr16
cmp
cmc
int
std
pop
ja
shlb
iret
fadds
test
ds
sbb
push
sbbb
xchg
pop
ss
in
and
int
sub
jnp
push
int3
mulb
popf
aas
fwait
aas
cmpsl
stos
dec
jno
pop
pusha
inc
fnstsw
mov
jp
jnp
sahf
out
mov
mov
pop
cltd
dec
pushf
pop
or
jbe
stos
xchg
in
aas
fcomps
dec
xchg
sub
mov
adc
test
ja
and
movsl
sahf
push
daa
add
hlt
jp
jo
xchg
xchg
fildl
dec
addr16
fsubs
jle
cld
pushf
iret
inc
daa
cmp
shlb
push
xchg
xchg
cmpsl
std
xchg
ljmp
mov
dec
sbb
xchg
mov
sub
jecxz
sbb
adc
sbb
fisubs
or
sbb
pop
outsb
fsubrs
jns
jne
sbb
gs
add
sbb
lods
gs
shlb
xorb
jp
roll
stos
add
es
xchg
push
lahf
lcall
jl
inc
ret
jns
addb
mov
cli
roll
out
js
add
dec
int3
inc
ja
sub
mov
adc
inc
fxch
fwait
cmp
scas
repz
loopnew
add
inc
xchg
pop
mov
mov
or
pop
adc
push
je
out
inc
enter
cmp
notl
or
ljmp
sbb
cmp
sbb
lds
insl
mov
popf
iret
mov
repnz
pop
repz
ret
rcrl
ret
leave
aaa
cltd
cli
filds
pop
cli
cwtl
mov
std
pop
std
lock
stos
xor
xchg
bound
lret
mov
loop
push
jne
popf
out
popl
mov
inc
sbb
adc
mov
dec
les
fstpt
jae
adc
mov
pop
lcall
mov
jecxz
rcll
pop
push
sub
test
and
xor
mov
pop
push
mov
repnz
xor
jb
sub
out
lgs
repz
int
lods
cmpsb
xchg
daa
cmp
fbstp
enter
cwtl
cld
test
dec
cs
jbe
cmp
sub
inc
mov
and
sub
add
or
in
out
test
and
dec
loopew
lods
movsb
in
sarw
pop
inc
cli
andb
jecxz
or
and
jb
push
fldl
or
movsl
dec
mov
push
in
mov
ljmp
jmp
outsl
inc
mov
lds
mov
in
cs
out
cli
sar
adc
push
lahf
pop
ss
ficoml
cmp
mov
xchg
dec
test
jb
xchg
mov
xor
dec
stos
cmpsb
sarl
neg
mov
repnz
mov
adc
arpl
cmpsb
addr16
movl
mov
and
insl
insl
and
imul
int3
mov
fs
add
mov
jae
push
jno
jmp
add
sbb
jle
cmp
jno
and
std
adc
ds
aaa
push
insb
insb
movb
adc
test
push
sahf
loopne
in
jno
jg
jmp
dec
lahf
sub
into
ret
insl
out
out
or
xor
inc
jae
cmp
mov
out
ds
negl
int3
into
repnz
lcall
jne
shlb
dec
cmpsb
jge
cmpsl
cmc
and
int
pusha
cwtl
mov
fcmovu
cwtl
xor
and
jb
insb
cmc
sub
sub
and
inc
enter
pop
pop
ficoms
pusha
xor
xor
lret
adc
cwtl
xor
dec
pop
loopne
jo
ja
mov
outsl
mov
pop
inc
or
arpl
cmpsb
mov
ret
fsubr
fcoml
xchg
sub
xchg
pop
bound
and
repnz
xor
cld
mov
lods
out
bound
mov
repnz
push
xor
jne
shrb
fdivl
cmp
and
inc
sarb
test
mov
xor
xchg
push
ret
repz
pop
rcll
call
pop
and
loop
loop
pop
and
les
popa
out
sbb
lret
xchg
sbb
arpl
inc
jb
push
xor
dec
adc
push
aaa
fadds
scas
into
je
bound
stos
loope
inc
sbbb
sbb
mov
sub
cltd
lahf
mov
inc
pop
jg
shll
push
pop
mov
les
pop
movsb
mov
sub
aad
jp
jecxz
dec
inc
cwtl
call
and
cs
jg
inc
orl
inc
lods
push
testb
out
enter
dec
enter
cmc
mov
xchg
movsb
push
fadds
scas
and
adc
fmuls
cmp
xchg
push
jno
enter
in
or
loope
push
xchg
add
xchg
aas
idivl
cmpsb
mov
imull
into
mov
push
cmp
cli
adc
das
scas
enter
sub
mov
aam
pop
jge
sbb
popa
dec
rorb
jge
into
das
jmp
ja
mov
mov
and
mov
aam
cmp
inc
fstp
pop
das
dec
inc
jb
int3
out
mov
pushf
sbb
or
xchg
repz
xor
call
and
jecxz
cmp
insl
and
pop
out
mov
lret
mov
pop
stos
ret
daa
pop
cmp
mov
in
call
fsts
inc
mov
push
add
shl
and
inc
gs
jne
arpl
adc
inc
adc
push
mov
addr16
aad
adc
xor
jns
jmp
ja
sbb
xor
push
bnd
push
mov
shr
mov
arpl
jle
mov
pusha
fwait
test
fdivp
test
mov
jno,pn
dec
scas
jbe
xlat
mov
xor
push
sarl
pop
pop
sub
sub
aas
jle
call
mov
mov
lods
cmpsl
lds
je
mov
data16
mov
iret
outsl
int3
shld
cmp
test
subl
jecxz
mov
cmp
adc
pop
mov
mov
pop
or
pop
into
mov
dec
cmp
push
lcall
pop
repnz
dec
push
divb
and
test
aad
outsb
xchg
gs
insl
jo
push
stos
test
push
pop
pop
mov
subb
sub
dec
clc
and
lock
or
xchg
add
and
fmuls
sub
xor
clc
dec
push
jo
sub
shrl
popf
pushf
jecxz
inc
or
dec
lods
mov
cmp
or
add
fs
add
lcall
dec
xorl
ret
sub
outsb
shll
sbb
lret
or
shrb
fisubs
roll
pop
adc
hlt
in
or
add
movsl
mov
aad
stos
dec
jp
sub
flds
xor
aam
ds
xchg
pop
in
pop
jp
inc
daa
or
dec
adc
add
test
gs
inc
fidivrs
and
jmp
mov
sbb
das
iret
jbe
push
inc
sahf
pop
pop
mov
cmp
ljmp
fldenv
fsubl
dec
xor
outsb
xchg
lcall
jmp
out
addl
cmc
xor
enter
mov
bound
outsb
aam
lretw
out
push
cmp
dec
push
mov
sbb
sbb
push
cmp
xor
xchg
mov
ljmp
je
push
loop
lcall
sahf
mov
lock
xchg
rcr
add
stos
shlb
push
sub
or
push
jns
sarb
ljmp
fildll
jne
icebp
rcr
mov
xor
adc
adc
and
leave
imul
and
sub
cmpsl
pop
daa
inc
rclb
icebp
push
sub
xchg
sub
sbb
jg
dec
jo
cltd
ja
mov
jl
loopne
sti
dec
inc
clc
sub
pop
int3
push
xchg
shrb
xchg
xor
fiadds
repz
aas
repz
mov
pop
daa
pop
mov
lret
pop
mov
shll
jno
mov
cld
ror
mov
cmpsb
jmp
xchg
loopne
shrl
mov
lahf
das
scas
fsts
pop
add
sbbl
movsb
xor
bound
jb
js
fwait
cmc
mov
xchg
bound
lds
es
lock
mov
test
shr
std
aad
adc
popf
mov
fiadds
cmp
out
outsl
sbb
outsl
sub
cld
mov
in
scas
test
pop
add
fisubs
dec
imul
ret
scas
shlb
ret
jne
or
dec
out
push
jno
out
dec
loopne
into
add
push
dec
and
out
push
inc
xlat
cmp
cli
jle
scas
arpl
cmpsb
gs
ja
adc
pop
sub
addr16
jnp
xlat
adc
dec
xor
cmc
jns
test
pop
add
mov
xor
xor
scas
jecxz
xlat
movsb
in
sbb
pop
pop
sbb
leave
or
imul
xchg
cmp
adc
xchg
dec
repnz
xchg
jl
enter
ljmp
stos
push
xor
sub
xor
imul
movsb
insl
mov
je
xlat
sbb
inc
push
adc
mov
inc
imul
shll
repz
dec
sub
aaa
mov
aam
mov
loope
orb
pushf
inc
dec
mov
or
pop
sbb
dec
inc
imul
xor
shrl
test
sarb
sub
outsb
mov
jge
push
mov
shll
xchg
ljmp
push
aaa
stc
pusha
mov
inc
js
gs
in
lods
cmpsb
add
test
div
movsb
mov
xor
sbb
mov
in
ret
fwait
ds
cmp
insb
addr16
es
icebp
fwait
test
jecxz
or
pop
unpckhps
or
cmp
pop
dec
ljmp
mov
aad
ja
imul
movsb
arpl
sti
pop
inc
xchg
fsubrs
mov
or
int3
add
xchg
mov
scas
out
jle
and
into
xor
xor
aam
jmp
jb
mov
enter
nop
pop
adc
push
jl
mov
shl
pop
mov
cmc
popa
std
ds
mov
loop
fdivs
in
xchg
aam
in
in
and
stos
mov
hlt
sub
xchg
push
add
cmp
ja
aaa
aam
xchg
and
mov
sbb
mov
and
daa
fsubrl
ja
adc
jne
mov
pop
addr16
mov
insl
call
jae
adcl
jl
stos
sbb
das
push
jge
push
movsb
bound
fwait
data16
mov
lret
mov
jbe
test
push
xor
out
sbb
lods
adc
cmc
add
or
das
and
test
out
push
mov
test
mov
xor
popa
imul
jae
not
cmpsb
add
and
aaa
sbb
cmp
cmp
and
sbb
mov
sbb
dec
push
gs
inc
pop
cli
cmp
xor
xchg
xchg
cmp
mov
xchg
mov
pop
fistpl
jg
push
or
daa
mov
xchg
loope
pop
in
out
pop
sub
cmp
icebp
sub
add
and
mov
leave
enter
shl
or
push
ffreep
loopne
jl
aas
mov
mov
adc
sub
sbb
mov
push
les
or
out
inc
cmp
test
and
rclb
cwtd
push
lock
notl
mov
jg
leave
lds
or
test
in
ja
lret
mov
mov
stos
push
cltd
ss
inc
dec
insb
inc
push
aas
sbb
cmp
or
add
xchg
lock
xor
ds
or
push
push
jb
js
aaa
push
sbb
std
sub
push
jecxz
loopne
insl
and
sbb
cmp
test
sbb
imul
jbe
or
hlt
inc
mov
inc
mov
mov
insl
mov
imul
add
mov
and
fs
jecxz
pop
fdivl
push
push
setno
incb
out
es
icebp
out
push
pop
pop
jne
es
clc
xchg
popa
sbbb
cmpsl
sub
mov
pop
in
dec
adc
xor
xchg
or
push
aad
cmpsb
xor
fs
push
mov
pop
cmp
shll
jne
mov
subl
stos
jle
pmulhuw
push
or
std
fstpt
ss
pop
repz
scas
mov
addr16
mov
jmp
pop
push
fwait
shl
call
ss
ret
repz
and
inc
sbb
pop
mov
gs
inc
mov
dec
stc
popf
int
xor
cmp
xchg
and
ljmp
jbe
insl
in
jnp
pop
jmp
inc
sti
mov
in
idivb
mov
lahf
roll
and
loop
subb
je
out
pop
adc
mov
push
sbb
push
je
push
dec
jecxz
push
out
push
stos
nop
clc
inc
idivb
test
cld
xchg
and
mov
cs
repnz
loop
mov
jecxz
movsb
scas
or
aas
mov
ljmp
xor
lods
push
push
lods
xchg
inc
xchg
pop
les
out
pop
lods
sbb
test
or
xlat
jmp
xchg
sbb
pop
mov
mov
int
mov
mov
gs
jle
out
cmp
pop
xor
out
ret
push
cs
sub
les
je
jmp
mov
gs
insb
mov
xor
mov
push
and
lods
outsb
xchg
clc
add
in
lret
shlb
pop
repz
mov
add
ds
cld
in
subl
mov
push
xor
jecxz
jmp
lea
out
or
sub
sahf
mov
or
clc
out
cmc
mov
jnp
stos
out
xchg
add
or
mov
daa
pop
dec
je
inc
scas
aas
loop
push
popf
in
js
xor
jne
push
and
repz
push
inc
adcl
mov
orb
fcomp
cmp
out
sbb
rol
sub
jmp
mov
and
dec
dec
and
out
dec
int
adc
les
jp
pop
cwtl
loop
adc
pusha
or
and
lds
sub
xor
stos
adc
je
or
inc
mov
xor
xor
test
pop
lret
xchg
mov
orl
pop
sbb
jg
xor
mov
into
sub
cmc
outsl
pop
cmpsl
adc
pop
inc
sbb
adc
fs
pop
jl
loop
fcomps
aas
cmp
aam
popf
stos
jae
xor
push
add
cmpsb
sub
sarb
adc
push
cmp
scas
arpl
jg
jne
mov
sbb
push
mov
jp
xchg
fld
out
lock
mov
cmp
xchg
xor
in
nop
or
fisubrl
lea
xchg
dec
dec
adcl
insl
out
js
push
cs
or
lods
movsb
mov
sti
fcmovbe
mov
xchg
inc
sub
or
or
and
fsubrs
je
add
mov
sarl
outsl
fwait
xchg
mov
sbb
pop
jae
pop
jl
scas
add
fsts
mov
push
daa
outsb
pop
jmp
jmp
and
clc
leave
lcall
ds
lds
adc
push
or
jg
aam
dec
inc
cmpl
out
jbe
dec
nop
xor
adc
es
or
jl
incb
fldt
mov
pop
repz
pop
add
in
insl
jg
xorl
dec
mov
push
mov
jle
data16
jbe
and
mov
mov
inc
rorb
dec
mov
push
popl
scas
mov
aaa
mov
push
jecxz
inc
push
aad
xchg
jbe
loop
into
fsubs
adc
jne
push
and
jbe
dec
shr
es
adc
push
in
push
sub
fbld
iret
fsubrl
pop
push
dec
mov
data16
xor
stc
dec
add
hlt
jl
cs
add
iret
xchg
or
add
fadds
jmp
in
inc
enter
arpl
mov
sub
jo
pop
jmp
lock
cwtl
ffreep
call
add
lds
mov
mov
xchg
add
push
push
pusha
loop
jge
test
sub
js
jne
hlt
jl
mov
imul
adc
std
dec
or
arpl
xchg
pop
mov
sti
dec
mov
dec
mov
insb
out
ret
push
ffree
inc
dec
and
adc
jg
mov
or
bound
mov
push
push
sub
jp
dec
adc
adc
cmpsb
or
cs
fisttpll
ficoms
in
push
sti
inc
pop
int
mov
scas
add
fistpl
mov
ret
cmp
cmpsb
lods
imul
inc
repnz
aaa
in
mov
mov
or
js
scas
in
xlat
xchg
jmp
test
push
mov
rol
pop
sub
inc
fistps
xor
je
mov
hlt
and
jmp
mov
test
negb
pcmpeqb
fnstenv
cwtl
xchg
mov
stos
gs
outsl
pop
out
xor
and
fnsave
or
xchg
test
movsl
pop
and
xchg
xchg
mov
sub
das
ficomps
dec
pop
into
adc
dec
adc
push
repnz
sbb
mov
cltd
imul
repnz
xor
scas
sub
pop
repz
mov
and
xchg
mov
sbb
push
cltd
adc
xchg
lds
mov
nop
lods
adc
lods
lret
mov
shrl
fwait
mov
jae
mov
leave
aam
pop
push
fildll
dec
sbb
cld
cmp
push
cmpl
mov
sub
inc
jo
mov
pop
inc
dec
xchg
and
test
cltd
mov
clc
fisttpl
sub
inc
movsl
jle
mov
jnp
imul
and
adc
fistps
jle
movsb
and
popf
aas
sub
push
fwait
ret
push
aad
or
xor
sub
jo
and
adc
outsb
dec
jge
jmp
mov
sub
cmp
pop
dec
std
xor
jg
movsl
addl
iret
mov
push
hlt
mov
adc
add
xchg
loop
pop
and
and
jmp
dec
shlb
lahf
popa
arpl
push
je
xor
fmul
sbb
jg
add
stos
mov
xor
imul
xchg
add
shl
repz
jmp
dec
sub
add
mov
les
or
and
mov
or
mov
test
jne
aaa
fs
lret
mov
es
xchg
push
mov
sbb
scas
fdivrp
dec
hlt
lcall
fwait
fs
pop
out
mov
in
add
andl
add
xor
in
jmp
adc
jmp
or
push
lahf
and
rcrl
jo
popf
lds
je
int3
imul
repz
push
cmp
ret
mov
nop
loope
ret
dec
pop
mov
lock
setl
mov
repnz
fnstenv
mov
and
xchg
xchg
adc
std
adc
inc
dec
cmpsl
sbb
repz
iret
adc
movsb
ret
sub
cwtl
stc
adc
hlt
adc
por
iret
cltd
ret
mov
dec
push
clc
sbb
andb
pushf
rcrb
stos
push
ret
pop
inc
jg
shrl
pop
sbb
mulb
loop
mov
xor
jno
xchg
repnz
mov
fnclex
out
addr16
lcall
repnz
mov
int3
pop
push
jecxz
inc
push
jae
pop
pop
or
pop
jle
les
test
std
cli
push
xchg
xchg
pop
data16
in
or
pushf
fcoml
jb
addl
pusha
xor
adc
cwtl
cwtl
outsl
das
pop
shlb
or
xchg
dec
and
test
dec
push
rcl
lret
stc
jg
mov
int
fwait
xchg
daa
fdivrl
imul
inc
lret
mov
js
pop
insb
es
mov
xchg
leave
sbb
xchg
jg
push
add
push
es
mov
pop
mov
cmove
loop
ret
mov
das
mov
lret
lods
fnstcw
cmp
cmp
js
mulb
xor
movsl
and
lea
pop
rcll
pop
jnp
movsl
push
mov
mov
ret
enter
add
frstor
mov
push
rcr
scas
xchg
ja
test
ret
stos
aaa
ja
cmp
inc
and
outsl
sbb
fstpl
ret
or
cmp
stos
lods
pop
inc
mov
movsb
xor
jp
jnp
popf
mov
inc
push
subl
rcrl
and
sbb
dec
shll
aaa
imul
sub
xchg
mov
popa
scas
fmul
ficoms
fwait
push
imul
push
jb
lods
fstpl
les
fdivl
fists
dec
mov
jns
in
sub
loopne
jnp
std
pop
cmc
inc
mov
imul
das
adc
ljmp
out
xchg
pop
cmp
sbb
xor
cmp
push
inc
mov
in
and
addr16
sar
sbb
enter
rcll
fcomps
mov
or
js
inc
sub
inc
lods
addr16
pop
xor
add
pop
in
jns
pop
movsb
cmp
xchg
out
xchg
stos
cmpsb
loopne
jns
jbe
test
pop
enter
lock
outsl
popf
dec
pop
pushf
mov
aaa
ret
subl
aas
cmpsl
pop
lds
popf
xchg
fnstsw
push
sbb
inc
adc
in
xchg
addl
dec
cmp
sub
push
pusha
sti
pop
jmp
cmp
add
loop
mov
outsb
jmp
pop
add
fs
imul
push
shl
int3
data16
adc
dec
jb
pop
adc
mov
mov
push
insb
inc
pusha
rcrl
repnz
xchg
mov
xchg
xchg
nop
sbb
pop
dec
hlt
fbld
sub
test
ret
daa
jne
jge
shrb
xchg
mov
nop
leave
sahf
sarb
cmpsb
shl
jmp
fbstp
cmp
inc
sti
fwait
mov
jne
jo
push
mov
push
scas
out
xchg
or
cmc
jns
sbb
pop
or
pop
fisttpl
mov
sbb
adc
pop
mov
arpl
xchg
pop
jo
push
jne
push
inc
test
ret
shll
jno
popl
push
in
in
lock
pop
xchg
push
hlt
or
mov
fnstenv
addr16
mov
xor
add
mov
sbb
mov
hlt
xor
xchg
repz
dec
add
notb
xchg
pop
add
xor
cmp
adc
orb
adcl
lahf
cmpsb
push
cmp
aam
clc
xor
mov
pop
aad
movsb
cs
in
inc
dec
insl
sti
test
hlt
push
add
jnp
aam
cmpsl
mov
lahf
rorl
dec
and
je
dec
scas
or
add
mov
inc
imul
fdivr
clc
data16
cmp
test
negl
pop
in
jp
mov
mov
mov
sbb
xor
loopne
inc
mov
inc
dec
dec
in
imul
mov
es
mov
clc
stos
xchg
clc
or
aad
sarb
jl
dec
jecxz
inc
xor
pusha
jnp
add
clc
ret
aam
mov
pushf
sbb
mov
sbb
pusha
jnp
scas
call
adc
insb
pop
push
xor
mov
sahf
mov
or
jbe
push
mov
fisubrl
fimull
pop
push
jmp
pop
in
inc
push
out
pop
clc
stc
or
insl
bound
sbb
in
add
dec
xchg
int3
dec
int
and
ret
dec
dec
cmp
fldt
pop
adc
mov
rcr
icebp
cmpsb
or
ret
pop
mov
adc
rorb
cmc
push
addr16
cld
dec
xchg
loop
lret
addr16
push
adc
jg
mov
mov
bound
pop
cltd
in
jbe
les
xor
sti
iret
int
shlb
imul
popf
les
mov
mov
jo
int
fs
and
daa
mov
aad
in
fadds
push
fcmove
daa
pop
test
adc
enter
xor
leave
push
test
sti
push
add
rcrl
das
and
sbb
xor
sub
jle
stos
and
lcallw
and
cmpsb
test
imul
add
scas
xor
imul
nop
mov
loop
iret
xchg
mov
xor
xor
out
add
sahf
loope
out
jae
test
mov
repnz
dec
lret
push
movsl
clc
mov
xor
pop
xor
sbb
jl
call
shrb
xor
add
inc
aad
fstl
sarl
jo
sahf
xor
inc
xchg
xor
sbb
sub
xchg
cmp
cld
cmp
xor
in
ret
push
jecxz
outsb
xor
or
lcall
lret
icebp
lods
stos
pop
outsb
xchg
lcall
lds
pop
clc
pop
nop
imul
stos
cltd
inc
inc
sub
ss
jns
out
clc
adc
in
test
sbb
test
pop
ss
xor
push
inc
repnz
pop
adc
dec
lahf
orl
pop
jp
dec
cltd
fdivs
jge
fsubs
rorl
cli
lgs
imul
cwtl
pop
lods
xchg
repz
in
sti
push
sbb
aad
mov
inc
cmpsl
fisttps
sbb
push
inc
outsl
add
inc
xorl
and
out
add
dec
xchg
insb
outsb
mov
lods
push
movsb
dec
fistpll
mov
addr16
inc
jo
cmpsl
pop
pop
cmpsb
aaa
xor
xchg
xchg
xchg
pop
imul
fdivs
sub
sbb
jns
sub
sbb
ret
jno
scas
mov
pop
movsb
daa
call
mov
in
pushw
jno
mov
fmull
out
fcomps
ret
dec
pop
clc
adc
loope
dec
sbb
in
aam
pop
dec
push
bswap
xchg
mov
inc
jno
movsb
pushf
ja
adc
ds
and
cli
aaa
and
lahf
fwait
lods
ja
shlb
push
jb
add
mov
fwait
ja
and
mov
or
out
dec
fldenv
dec
stc
add
jno
aaa
cmc
mov
ret
add
or
pop
pop
rorb
jg
and
out
push
push
xlat
test
andb
dec
movsl
pop
jge
sarb
jge
sub
bound
int3
cli
movsl
mov
push
mov
sub
gs
mov
jle
in
xchg
popf
sarl
cwtl
pop
das
test
mov
sarb
icebp
cmp
aam
call
call
cmpsl
out
gs
icebp
ljmp
inc
les
sbb
pushf
cli
sahf
outsl
shlb
sbb
add
pusha
hlt
scas
lods
lret
stc
adc
push
cs
cmp
adcb
cmp
and
push
and
pop
mov
xchg
push
xchg
push
addr16
jp
push
arpl
mov
out
and
and
mov
xor
cs
mov
and
idivl
cli
repz
pop
outsb
add
out
pop
dec
mov
pop
pop
in
addr16
popa
js
pop
orb
sbb
add
push
push
mov
jg
sub
push
lds
pop
pop
mov
jmp
dec
or
mov
inc
xchg
scas
shll
shrl
add
pop
dec
test
push
stos
stc
pop
dec
das
das
mov
shrb
push
and
push
push
das
inc
bound
div
ret
jg
push
rorb
or
gs
orl
dec
dec
fcomi
outsb
nop
sub
or
sbb
mov
xchg
fldl
gs
jns
scas
sub
and
je
fnstsw
pop
test
clc
aam
mov
sub
pop
ja
push
dec
adcl
out
imul
dec
scas
cmp
lock
rorl
xorb
jae
sub
mov
push
push
pop
add
cmp
jmp
ficompl
mov
jns
scas
adc
adc
inc
xchg
add
push
adc
ss
mov
jbe
jb
insl
cmp
fsubrl
xorb
out
stos
fsubrs
ds
add
add
dec
mov
sub
sbb
sub
test
inc
fildll
xor
xchg
push
pop
rep
aam
or
mov
out
dec
lret
cli
add
pop
mov
add
add
mov
iret
mov
jo
shrd
je
sub
adc
flds
into
les
movsb
andb
loop
mov
cmp
ret
jp
sti
packssdw
nop
call
in
arpl
aas
lret
cld
jbe
xlat
sbb
xor
sbb
imul
pop
stc
xchg
sarb
ret
inc
xchg
sti
subl
stos
push
es
xor
in
stos
sbb
outsl
adc
wbinvd
movd
pop
xchg
and
les
sub
pop
addl
jno
inc
pushf
cmp
xchg
out
arpl
xor
ret
xchg
je
sub
cs
pusha
or
xchg
pop
lahf
sub
jge
xchg
jecxz
dec
cli
fcompl
psubb
push
xor
push
mov
fucomp
pop
pop
fdivs
sbb
jge
add
cltd
aam
sarb
imul
ja
aad
enter
xor
pushf
lock
sbb
jge
sub
push
adc
adc
outsb
enter
leave
bound
add
inc
and
cltd
push
stos
sbb
inc
movsb
cmp
cli
sub
in
das
dec
insl
sbb
inc
clc
out
loopne
popa
add
cmp
inc
cltd
iret
aam
xchg
movsb
cmpl
je
dec
pop
mov
arpl
out
xchg
and
jmp
iret
inc
push
mov
in
fwait
iret
jmp
adc
push
rcrb
in
fmuls
xchg
mov
test
aaa
jmp
add
inc
cmp
repnz
sbbb
int
push
lahf
xchg
lods
gs
ljmp
loopne
cwtl
and
inc
in
out
jno
ss
scas
pop
out
fisttps
mov
arpl
cmp
push
xor
adc
mov
bound
mov
sub
inc
sahf
pop
cmp
iret
movsl
jnp
jno
mov
lcall
arpl
lea
out
push
jbe
popa
add
mov
ret
jecxz
test
push
xchg
je
add
out
aam
jle
popf
xchg
pop
gs
pop
loop
mov
push
icebp
push
cmp
cld
and
out
mov
mov
je
xchg
push
repz
fs
enter
xchg
in
inc
and
mov
lret
mov
jecxz
cmp
sbb
inc
adc
mov
clc
rolb
fldenv
xor
cmpsb
in
mov
sub
in
fcoml
cld
mov
cmp
pop
or
ljmp
test
inc
lods
push
and
xor
clts
movsb
les
sbb
push
rclb
aam
outsb
add
sub
rol
out
in
and
ret
mov
shrb
push
inc
jbe
xor
shl
fisubrs
jmp
jns
fcmovnbe
and
sbb
add
jmp
je
add
gs
push
cmp
movsl
nop
sub
mov
out
out
mov
xlat
sub
jg
pop
and
push
and
out
xchg
shll
mov
push
jb
cmc
add
ds
cld
pop
aam
shlb
xchg
dec
or
cli
testb
dec
ljmp
jge
jb
xchg
andl
icebp
movsl
test
repnz
repz
daa
adc
push
xor
jne
inc
mov
dec
popf
arpl
movsb
ror
in
push
mov
add
dec
testb
push
clc
or
cli
and
mov
or
test
xor
pop
mov
xchg
sahf
fidivrs
mov
test
inc
push
movb
pop
mov
stos
cmp
repnz
xchg
mov
out
mov
ret
pop
pop
rorl
outsb
mov
jmp
nop
inc
cmc
mov
lods
xchg
and
and
mov
dec
add
hlt
add
dec
mov
cmp
push
sub
xchg
fwait
sbb
imul
in
in
xor
adc
add
aaa
int3
or
test
and
stos
jo
xchg
dec
daa
mov
mov
add
je
stc
cmp
pushf
xlat
out
xchg
pop
jnp
mov
jmp
repz
xchg
js
popf
mov
sti
cmpsl
test
fldenv
pop
movsl
cmpsb
mov
adc
inc
cwtl
arpl
stos
inc
add
sbb
leave
test
jne
test
ret
lods
shl
cmp
push
mov
icebp
cmpsb
mov
inc
push
ljmp
push
mov
jns
push
stos
outsl
addr16
pop
enter
in
and
pop
frstor
adc
sbb
pushw
xorb
out
repz
and
movsl
inc
lods
dec
and
or
addr16
insb
jnp
dec
imul
fdivs
fiadds
sarb
lock
sub
sub
outsl
pop
mov
pop
sbbb
subl
mov
shlb
fimuls
sbbb
push
lret
mov
adc
outsb
jb
push
mov
add
push
mov
popf
imul
pop
push
lock
pop
shrl
xor
mov
mov
and
scas
xor
jns
or
aam
outsb
pop
daa
lds
test
addl
iret
add
push
jae
popa
jle
cld
mov
dec
ret
pop
sbb
pop
lcall
sbb
inc
mov
out
stos
shll
adc
les
pop
das
push
fdiv
ret
xchg
sbb
shr
push
fwait
call
adc
cmc
cmp
jbe
testl
aam
jge
sub
mov
test
jl
xchg
gs
adc
dec
push
dec
jnp
pop
stos
ret
add
leave
push
pop
std
ror
test
pop
pop
ret
and
out
mov
pop
int
mov
aam
cli
ja
sub
imul
shll
push
and
mov
add
xchg
lods
bnd
jg
mov
adc
adcl
addl
push
pop
mov
shll
sahf
jo
loope
fdivs
cmp
xor
inc
fwait
mov
cld
loop
push
fwait
loopne
add
in
into
outsb
cmp
fisubl
xorl
mov
inc
into
jg
lds
stos
jp
insl
hlt
dec
and
leave
lock
scas
aad
adc
sbb
sub
pop
inc
test
lock
add
or
cmp
mov
je
mov
add
cmp
jbe
jb
mov
call
pop
jae
add
xlat
es
shrb
leave
call
xchg
xor
and
les
fildl
sti
push
sub
jns
fldt
popf
stos
or
int3
pop
inc
out
gs
add
and
dec
insl
add
test
hlt
pop
arpl
fiaddl
fldl
call
inc
inc
adc
loopne
lahf
sbb
jmp
lods
inc
outsb
movsb
data16
cli
fucomip
popa
fsub
mov
cmp
mov
cltd
fsts
mov
call
xor
jg
push
cld
xchg
xor
and
call
lods
xor
add
cmp
roll
pop
pop
xlat
mov
mov
mov
inc
xchg
adc
fs
push
ret
jno
jle
ret
loope
add
xor
sub
nop
lods
in
xchg
mov
jl
into
in
loopne
cmp
sub
cmpb
ret
jno
cmp
mov
jo
stos
xchg
lods
xchg
stc
arpl
xor
xchg
mov
add
jmp
xor
sbb
inc
out
sub
ds
cmp
fcoml
xchg
decb
cli
dec
dec
xchg
mov
cmp
xor
push
dec
movb
in
out
adc
or
jnp
and
imul
fwait
mov
push
sbb
cmp
mov
call
in
push
gs
pop
fstps
movsb
outsb
stos
add
mov
sbb
test
xor
in
inc
pushf
xor
orl
mov
add
cmp
jecxz
mov
je
mov
adc
shlb
jae
mov
enter
and
rcrb
popa
mov
mov
aad
mov
xchg
test
gs
pop
vmovupd
mov
scas
test
stos
lea
cmp
push
sbb
sub
mov
jmp
lods
stc
push
js
mov
lea
xor
cmp
insb
adc
fdivrs
or
push
xlat
adc
mov
daa
cmc
test
lea
dec
ss
and
test
sub
inc
mov
xchg
lods
scas
cmp
call
adc
repz
stos
sub
cwtl
fsubp
pusha
mov
adc
pop
dec
cmp
sbb
hlt
xchg
in
adc
jp
mov
jns
lock
shll
adc
pop
xor
and
push
mov
xchg
shrb
je
xchg
mov
or
mov
repz
in
push
call
dec
std
inc
mov
sub
call
dec
dec
aas
mov
or
add
mov
push
cmp
add
push
jb
std
jae
jo
popf
sub
mov
xchg
addr16
adc
push
sbb
cli
aaa
cli
std
in
jnp
cli
fimuls
inc
pushf
lahf
fbstp
sub
lods
out
inc
xor
pop
xchg
in
sbb
xor
sbb
push
lock
and
ss
mov
sbb
add
mov
or
sub
icebp
fcoms
dec
mov
jg
sbb
test
push
dec
addr16
icebp
je
mov
xor
cmp
and
pop
fidivrl
hlt
push
fcomps
dec
outsb
lea
aad
cmpsl
aas
adc
aad
mov
test
fidivl
sub
xchg
insl
push
out
push
int
iret
int3
je
ljmp
jg
cmp
push
pusha
add
js
push
xchg
in
fsubrs
push
repz
lcall
jae
es
mov
xchg
scas
xchg
xchg
add
testl
lcall
aam
and
test
int
push
or
mov
xchg
ja
scas
push
xor
jecxz
xchg
and
es
test
rcrb
pop
sbb
dec
xchg
dec
std
jns
sub
rclb
fldl
xchg
sbb
mov
jne
or
xchg
mov
jp
or
mov
xor
mov
inc
cli
int
push
pushf
sbb
hlt
outsl
paddsw
jae
pop
enter
cli
add
ret
push
xchg
mov
mov
mov
sti
add
mov
xlat
ds
cmp
inc
mov
stos
adc
xor
out
fistps
orb
sbb
jmp
or
mov
insb
int
movsb
test
xchg
push
pushf
jl
sbb
fneni(8087
lret
out
adc
mov
jno
xor
cmp
sbb
gs
push
jbe
repnz
in
sbb
xchg
push
mov
pop
jb
ds
dec
icebp
rcrl
mov
inc
mov
nop
xor
sbb
mov
mov
flds
adc
add
popa
mov
adc
in
enter
sub
push
push
js
aas
jecxz
jge
dec
xor
jbe
int3
mov
insb
xor
push
lret
jge
dec
sbb
test
xor
popf
pop
xchg
movsl
cmpsb
mov
mov
pusha
rorb
pop
incb
std
stos
mov
out
stc
mov
sbb
pop
cmp
jno
test
in
jbe
outsl
cmp
xchg
insl
and
test
cld
clc
rolb
arpl
or
inc
xchg
dec
inc
out
mov
mov
dec
pop
cli
push
xchg
lret
or
inc
cmp
gs
cmp
dec
ljmp
das
mov
sub
add
or
sub
push
lds
out
rcll
aaa
pop
dec
cmp
mov
sub
jne
test
in
scas
push
and
les
stc
subb
pop
fcomip
cmc
ss
dec
pop
xor
jge
fsub
push
test
jo
and
test
inc
adc
cltd
lahf
outsl
mov
pop
and
mov
ret
dec
dec
pusha
adc
lahf
push
bound
scas
mov
dec
mov
sbbb
xchg
repnz
fsub
shrl
pop
int3
pop
pop
push
and
loop
pop
dec
push
lds
mov
push
pop
mov
push
xchg
fcoml
das
stos
in
lods
mov
mov
shrl
add
pop
add
sahf
or
sub
lahf
dec
aaa
push
and
xor
dec
pushf
insb
scas
jne
or
push
iret
and
cmc
lcall
mov
out
inc
rorb
les
pop
xor
mulb
pushf
mov
scas
test
push
mov
xorl
mov
cmpsl
out
mov
mov
mov
daa
cmp
ljmp
fwait
sub
pop
xlat
xchg
xor
sub
ja
sbb
das
lcall
cmc
mov
add
mov
and
idivb
lea
push
rorl
pop
pop
pop
xor
cmp
and
cmp
adc
dec
sar
jge
ja,pt
pushf
cmp
mov
outsb
ret
inc
sar
mov
adc
je
or
leave
mov
inc
push
call
xor
cmp
xchg
jmp
cltd
sub
adc
js
aaa
pusha
pop
faddp
pop
push
jnp
jb
int
jo
add
cmp
cli
ljmp
mov
lods
xor
cmpb
xchg
fwait
add
mov
test
sbb
adc
jns
xchg
lahf
sbb
and
dec
inc
aad
push
retw
sub
jp
out
add
icebp
loop
xlat
hlt
xchg
sub
mull
inc
push
icebp
fidivrl
jl
push
mov
dec
outsb
mov
les
xchg
movsl
lea
adc
mov
cmp
cmp
dec
pusha
dec
lret
xorl
add
xchg
mov
js
std
mov
push
jp
dec
je
jl
cmp
sbbl
filds
dec
push
mov
js
push
outsl
je
outsl
dec
fsubs
mov
js
sub
test
fs
sbb
and
jecxz
jno
movsb
mov
mov
cld
pushf
lret
sbb
jecxz
sti
roll
jne
cmp
adc
pushf
jp
adc
cmp
push
insb
lods
cmp
adc
fisubs
push
sub
adc
mov
ss
pop
mov
inc
mov
adc
push
repz
and
cltd
push
dec
fnstsw
scas
adc
int3
cld
pop
jo
xor
in
or
pop
js
test
xor
fcmovne
jne
fwait
mov
movsb
iret
stos
jne
in
shlb
in
aaa
lret
nop
das
add
or
into
and
push
sbb
pop
out
lds
in
js
and
cmp
je
aad
xor
mov
shr
inc
push
aas
pop
rolb
mov
loop
lods
push
and
daa
push
ljmp
pop
subb
sub
jo
adc
and
xlat
call
int
subb
ss
jmp
ret
test
pop
mov
hlt
inc
push
dec
or
ss
mov
add
mov
sti
arpl
enter
pop
cmpsb
sub
xchg
mov
in
sub
or
push
push
push
div
xchg
and
dec
cltd
into
dec
ret
repz
jecxz
into
lret
fwait
loop
jne
cmpsl
and
sbb
xchg
ror
add
fwait
mov
repz
rcrb
xlat
and
fwait
pop
push
les
fnstenv
jp
ljmp
aaa
divl
or
jb
test
test
mov
icebp
jp
rcrb
fcoml
leave
jno
push
jle
mov
sbb
mov
or
jnp
movaps
or
jg
inc
push
xchg
and
sub
gs
fwait
cwtl
negl
and
adc
fcomp
jno
insl
cmpsb
les
loope
pushf
jne
movsl
outsl
push
pop
pop
sbb
lcall
xor
mov
and
push
push
lock
jle
incl
enter
jp
dec
add
push
jb
cmp
aas
add
test
mov
scas
leave
inc
mov
testl
dec
lods
ret
stos
sub
pop
push
imul
scas
mov
ret
clc
enter
js
jecxz
stc
pop
push
ljmp
test
cmp
fistl
mov
iret
dec
shl
nop
scas
jo
jno
dec
mov
out
out
out
mov
iret
imul
stc
cmp
add
and
jge
mov
aam
in
aad
jae
xchg
sbb
pop
bound
and
add
or
sbb
sbb
shlb
sar
push
pushl
gs
or
pop
addr16
shrl
dec
inc
rcl
nop
mov
stos
mov
xchg
dec
push
lods
jno
in
das
dec
mov
and
pop
push
mov
mov
into
leave
ja
sti
lret
out
and
imul
cmp
push
pop
fnstcw
or
mov
lret
adc
scas
inc
call
sbbl
lret
and
in
xchg
repz
mov
cmpsb
cmpb
scas
dec
and
ja
rcrb
and
xchg
testb
mov
ljmp
cltd
xor
adc
sub
xorb
in
cltd
fistl
pop
mov
test
addr16
sbb
adc
out
jne
je
fistl
mov
lahf
jbe
inc
mov
dec
movnti
in
clc
ja
or
xor
jae
mov
push
push
shlb
mov
xor
push
mov
xchg
xlat
fnsave
inc
lahf
nop
push
mull
push
bnd
cmp
movsl
in
outsb
mov
add
popf
xor
mov
push
int3
lret
imul
fcmovb
xchg
xchg
cs
or
js
inc
outsl
dec
bound
inc
sub
adc
mov
lcall
add
and
pop
in
inc
inc
psadbw
pop
fbld
jb
sub
pop
mov
decb
lds
push
adc
insb
popf
fisubrs
cmc
pop
ja
xorl
xor
push
mov
mov
push
or
sub
push
ret
idivl
fistps
scas
adc
cli
add
sub
or
insb
shl
daa
add
push
nop
jmp
pop
mov
nop
sbb
hlt
sub
sub
xor
cmp
adc
hlt
out
inc
in
push
filds
jnp
inc
repz
shlb
push
aaa
mov
cmp
in
and
scas
adc
and
inc
cltd
xchg
int3
imul
loopne
lods
or
cmp
in
mov
sahf
push
lea
repz
leave
gs
mov
and
sbb
mov
push
pop
sub
add
sahf
aas
xlat
inc
lods
dec
mov
insb
jmp
test
and
lcall
push
mov
cltd
mov
dec
scas
cli
test
pop
adc
mov
or
jnp
loopne
adc
pop
and
fcmove
dec
jb
int
mov
push
xchg
add
pop
add
stos
in
imul
mov
or
icebp
jb
push
fcoml
stos
jae
and
aad
pop
fstpt
bound
xchg
push
or
bound
loope
in
loope
call
repnz
pop
cmc
in
testb
bound
ds
mov
ret
push
ret
pop
lea
test
pop
push
dec
iret
imulb
push
inc
call
cmpsb
push
cmc
sahf
add
jb
negb
pop
cltd
sbb
lds
push
in
jno
shrb
add
or
xor
leave
fwait
jo
in
sub
rcll
ljmp
adc
inc
xor
push
or
xor
adc
inc
por
repz
and
es
lret
je
dec
mov
dec
inc
xchg
movsb
xchg
inc
fidivrl
jp
in
push
jmp
lcall
jecxz
xchg
jmp
lret
adc
mov
loopne
mov
xchg
add
stc
dec
xchg
enter
sti
adc
jb
popa
cmp
lods
cld
rcr
jbe
or
test
sbb
lea
mov
out
test
addr16
fcomip
xlat
test
popf
jp
outsl
cmp
pop
and
js
and
icebp
cmp
sub
mov
fwait
sbbb
repnz
push
dec
addr16
adc
into
notl
xchg
push
xchg
xlat
sub
fwait
mov
lcall
pop
sbb
rorb
lods
iret
adc
or
or
fistpl
bts
vpcmpgtd
stc
gs
xchg
aam
ficompl
repz
sub
out
jecxz
leave
test
add
dec
cld
out
push
pushf
adc
inc
adc
popa
rcll
imul
sub
cmp
mov
add
je
lret
cltd
and
lods
aad
cltd
movsb
mov
push
insb
in
cld
sub
pop
cmp
pop
sti
and
cltd
adc
cmp
repz
adc
sub
pop
subl
testl
jp
jle
shll
ja
sbb
movsl
xchg
addr16
adc
inc
dec
fdivl
xchg
mov
and
sub
push
pushf
dec
imul
sti
scas
pop
daa
and
testb
inc
push
pushf
jb
or
lds
cmc
cmp
enter
outsl
ret
adc
shlb
mov
adc
insl
push
fidivl
mov
enter
loop
adc
jl
cli
cli
jle
mov
mov
push
outsl
jbe
insb
lret
mov
iret
sbbb
mov
fimuls
dec
mov
jmp
outsb
add
jne
fidivs
hlt
cmpsb
lods
inc
inc
lods
lock
hlt
mov
add
inc
pusha
test
dec
fdivl
in
hlt
les
fistpl
jle
dec
aam
mov
cmp
xor
cmp
mov
xchg
sbb
movsb
dec
mov
push
loope
outsl
outsb
cli
dec
sbb
fcoms
sub
or
mov
pop
sub
test
in
les
fwait
popf
and
fisubrs
movsb
sbbl
pop
stos
mov
pop
add
and
test
xor
int3
jle
xor
mov
out
jo
pop
rol
inc
cmp
cmp
push
fildl
sbb
clc
loopne
adc
add
out
test
xchg
mov
sub
xchg
pop
incb
inc
mov
test
and
in
push
aas
lahf
loope
jbe
jns
inc
mov
xlat
int
je
aad
arpl
jb
pusha
sub
divb
vhaddps
inc
xchg
jmp
jbe
les
mov
pop
sbb
pop
lret
xor
dec
fcmovne
lcall
mov
fistl
rcll
out
repnz
xor
in
aaa
lock
sbb
inc
shlb
cmpl
push
sub
lods
stos
pop
in
jecxz
fs
cwtl
xchg
jae
test
mov
aad
test
rorb
mov
pop
imul
lods
dec
mov
jge
pop
les
mov
and
aad
dec
bound
lea
sub
das
nop
and
jns
in
ficomps
out
mov
push
and
arpl
andl
xor
xor
jnp
mov
lcall
and
lock
data16
add
cwtl
xchg
xlat
dec
xor
out
xor
decb
and
add
pop
sub
mov
lcall
jae
mov
and
aam
scas
sbb
jne
jns
push
popf
mov
add
jle
cld
xlat
test
push
jae
icebp
popa
sbb
inc
mov
xchg
sub
in
scas
in
mov
dec
mov
xchg
test
jne
fdivrs
mov
in
das
iret
movl
notl
pop
lods
icebp
pop
pop
popf
adc
setno
fwait
or
sub
inc
lods
pop
xchg
lock
dec
jns
sub
call
jnp
repnz
xor
les
push
dec
test
das
cltd
jmp
int
sub
pop
pop
xchg
pmulhuw
stos
aad
or
dec
mov
test
hlt
iret
lahf
out
jge
in
sub
push
xchg
cli
mov
orl
aas
xchg
imul
adc
outsb
mov
pop
std
rcrl
test
inc
or
xor
scas
popf
pop
adc
sub
or
pop
data16
or
xchg
mov
mov
pop
leave
shl
out
inc
sub
mov
faddl
add
mov
push
fucomp
add
mov
sarb
test
dec
daa
loopne
xchg
lds
out
outsl
cmp
xor
xchg
les
ds
frstor
popa
lahf
ficomps
je
lcall
arpl
mov
gs
dec
cmp
or
cmp
xchg
lcall
xor
mov
mov
stc
lret
aaa
sub
lret
mov
ja
outsl
pushf
rcrl
push
rcrl
dec
lds
lret
addr16
fadds
pop
fsubrs
fstl
pop
add
cmpsl
pop
mov
xor
push
in
into
fsubrl
xchg
in
mov
stos
jmp
jl
mov
insl
jg
add
adc
out
clc
sub
adc
or
cmp
nop
roll
rcr
in
into
mov
testb
push
xor
cmp
dec
push
stos
mov
repz
xorl
lods
outsb
test
and
or
imul
repz
std
rcrb
test
adc
addb
xchg
mov
arpl
inc
cmpb
mov
mov
popf
fs
in
pop
pop
jg
aas
push
sub
enter
out
daa
mov
and
jo
in
mov
aas
dec
xchg
sbb
mov
lahf
sbb
mov
clc
pop
mov
jmp
shlb
mov
add
sar
push
jecxz
mov
dec
push
jae
xorb
rorl
gs
add
jmp
and
lods
or
stos
ds
imul
shll
dec
sub
mov
xchg
cld
rorb
rol
cs
test
aam
inc
xor
icebp
pop
dec
adc
sub
inc
xor
and
xchg
push
sub
fdivrs
and
push
in
dec
and
adc
daa
jecxz
aas
mov
pop
sbb
xchg
dec
ret
mov
xlat
xor
xchg
test
pop
inc
cltd
fimuls
pop
adc
cmp
jb
mov
fbld
in
jns
sti
or
adc
dec
pushf
and
sub
in
pop
shlb
adc
and
jge
dec
arpl
divb
movsb
movsl
out
mov
jp
sbb
mov
xor
call
adc
pop
xchg
loopne
xlat
xchg
add
shr
imul
in
aam
mov
xor
loopne
aam
imul
and
xor
sahf
mov
mov
lret
loopne
sub
rol
fbstp
sbb
in
or
inc
rclw
test
mov
dec
add
scas
pop
test
out
es
push
lahf
cmp
lds
inc
scas
unpckhps
lods
popa
ljmp
jno
push
out
pop
fcoml
ret
dec
xchg
jl
or
cmp
sbb
push
inc
push
das
mov
dec
xchg
ret
or
dec
cmp
xchg
jmp
dec
push
out
mov
pop
dec
mov
sub
jns
icebp
sbb
or
inc
inc
and
pop
cmpb
xchg
push
lods
sub
aam
ds
cmpsl
dec
mov
pop
push
shlb
jns
jge
test
cmp
inc
dec
cmpw
mov
shrb
imul
sbb
sub
push
lods
push
outsb
mov
cltd
popa
gs
jae
out
jg
pushf
mov
mov
jecxz
mulb
mov
pop
mov
pop
xor
clc
push
aaa
dec
xor
mov
ds
mov
les
lcall
insb
mov
clc
and
popa
int
out
sbb
sahf
adc
pop
sub
dec
xor
mov
mov
mov
fidivl
pusha
xor
or
inc
repz
dec
in
lcall
out
xchg
xchg
mov
cmp
mov
aas
lds
xorl
xchg
ret
popa
mov
sub
xor
repz
imul
insl
xchg
pop
lds
popa
cmpsl
add
add
test
adc
or
sbb
or
repnz
mov
mov
jecxz
sti
inc
mov
sahf
mov
insb
jl
addb
scas
addr16
and
mov
and
push
loopne
push
mov
mov
and
fcmovbe
push
sbb
sbb
add
ret
test
jb
adc
inc
jae
xchg
push
fadds
out
xchg
daa
scas
lods
sbb
sub
sbbb
adc
icebp
int3
push
aad
out
int
add
inc
xchg
xchg
icebp
jp,pn
add
fwait
setae
ret
adc
test
cmp
jo
cmpsl
push
jb
jb
push
insl
cmpsb
xor
mov
loopne
loope
sbb
xor
lcall
hlt
adc
push
aad
idivb
test
xchg
lret
push
jp
ljmp
aaa
push
xchg
sub
int3
aam
js
cs
out
daa
and
xchg
mov
je
ss
rcrb
cwtl
mov
inc
in
insl
pusha
mov
hlt
ret
pushf
leave
fdivr
and
cmp
and
in
ss
call
shrb
js
test
fildll
or
outsb
repz
bound
or
cmp
jl
push
jp
sahf
xchg
int
pop
lret
sbb
mov
sbb
addb
adc
mov
movsl
adc
outsb
ret
loope
inc
jp
adc
mov
movsb
and
xchg
jmp
ret
push
lahf
mov
push
jnp
int3
repz
add
pop
push
push
inc
adc
into
icebp
push
xchg
xchg
mov
nop
adc
dec
call
subl
test
sub
adc
sub
ss
or
and
pop
xor
daa
bound
xchg
out
popf
mov
gs
je
dec
jle
mov
cmpsl
add
fs
dec
sbb
aam
add
nop
jne
fcompl
enter
hlt
cmp
push
dec
test
stc
test
cmp
jbe
and
sbb
adc
xor
xchg
jl
and
mov
push
jge
push
shrb
add
push
daa
push
mov
roll
mov
aaa
cwtl
in
mov
xchg
sbb
push
pop
ret
cltd
sbb
push
aaa
insl
aad
or
loope
imul
adc
mov
rolb
mov
cltd
jle
cltd
gs
and
sbb
js
inc
or
sbb
aam
xchg
dec
cld
lock
sub
add
sbb
out
mov
push
fmul
sub
mov
pop
adc
inc
imul
insb
pop
add
push
xor
mov
loop
sbb
fiadds
push
sub
mov
xchg
ret
jbe
cmpsb
jp
les
pop
jnp
repnz
xor
mov
xor
and
in
sub
cs
out
pop
push
in
loope
sub
push
adc
mov
or
cmp
pop
inc
inc
pop
gs
push
test
xor
cmp
in
mov
xchg
push
sti
mov
ds
lds
push
inc
mov
imul
cwtl
aad
mov
iret
pushf
imul
pop
cmp
aas
ret
stos
scas
ret
clc
xchg
mov
stc
lds
pop
sbb
mov
mov
fsubs
push
insl
pushf
mov
xor
test
push
rclb
jecxz
cmp
insl
sahf
inc
out
push
insl
push
mov
jp
or
push
dec
stos
xchg
test
pushf
or
xor
repnz
and
cmp
or
mov
inc
cwtl
or
push
mov
stos
aad
insb
and
pop
sarl
cltd
jne
loopne
xorl
pop
adc
push
mov
hlt
dec
sub
pop
bound
ds
pop
dec
add
push
inc
adc
sub
xchg
adc
inc
pop
mov
or
je
and
xor
ljmp
sbbb
pop
pop
mov
inc
and
in
sbb
std
jne
xor
and
je
add
push
adc
jae
mov
jp
inc
cli
fidivrs
mov
mov
mov
call
adc
mov
xor
jns
rcl
mov
addr16
or
pushf
sub
mov
mov
out
je
lods
pop
jb
or
mov
jno
jo
adc
pop
outsl
out
fnstcw
aas
scas
add
cltd
mov
adc
out
std
repz
cmp
repz
aad
mov
mov
loope
insb
sub
xchg
cmp
and
cld
xchg
jne
fwait
mov
addr16
jmp
cs
mov
lret
addb
orl
test
dec
ss
push
test
andb
xchg
sbb
movsl
jne
adc
mov
jl
cmp
adc
arpl
lret
xor
xchg
inc
mov
lock
cmp
mov
in
push
adc
jp
jecxz
adc
test
inc
sub
adc
jmp
jmp
jne
es
leave
mov
loop
push
call
xor
cmp
add
test
test
lds
rcll
lock
jo
cmpsb
sahf
gs
fs
mov
icebp
pop
add
jle
lcall
sbb
mov
mov
cltd
push
popa
addr16
jae
sub
mov
mov
add
jmp
repz
push
js
cmpb
dec
sub
dec
shl
and
stos
cli
arpl
jl
dec
add
jb
movb
dec
insl
pop
xor
pop
fidivs
and
sbb
xlat
fucomi
mov
dec
les
cmpsb
cld
pusha
mov
nop
cmc
lret
cmpsl
aad
push
sbb
xor
add
addl
dec
mov
sbb
jl
fadds
add
mov
je
cmpsl
int3
jmp
push
incl
sbb
jge
cmp
movsl
es
xchg
insb
sub
or
cmpsb
inc
jbe
adc
scas
jmp
stc
sub
add
pop
jnp
push
cmp
aaa
mov
lret
out
movsl
push
sti
cmp
jns
repnz
or
outsb
loope
sbbl
cs
push
iret
jnp
cli
js
mov
push
or
mov
dec
out
aad
mov
or
sub
cltd
imul
daa
add
mov
mulb
daa
mov
and
push
jg
pop
adc
or
add
imul
inc
jbe
or
sub
data16
sbb
xchg
stos
lahf
loope
cmpsb
fistpl
inc
xchg
adc
inc
sub
or
in
pop
sub
in
les
pusha
push
jb
or
loop
cmp
cli
and
stc
xorl
sub
out
cmpsl
subb
rcrb
ds
shll
and
imul
decb
push
sbb
mov
stos
xor
pusha
leave
repz
pop
test
in
pop
adc
movsl
sub
aaa
subl
or
jne
nop
daa
sbb
push
ret
mov
in
sarl
loop
ret
xchg
mov
lock
in
pop
sub
loop
push
sub
call
xchg
ret
xor
in
jg
or
add
loope
and
or
test
aad
int
cmp
ret
pop
or
add
data16
pusha
mov
out
orb
mov
lds
or
loope
in
pusha
pop
and
jmp
ret
cs
pop
in
pop
mov
add
mov
sub
movsb
adc
outsl
cli
fistps
cmp
lcall
jns
push
popf
cmp
jmp
and
push
sub
dec
hlt
outsb
mov
push
imul
cltd
adc
push
jnp
pop
jb
mov
pop
fsubl
dec
pop
sub
aaa
sbb
sti
mov
and
int
mov
pop
push
xor
cmp
ret
xchg
fwait
cs
jl
sbb
jns
jle
and
inc
pop
outsb
mov
ljmp
nop
inc
lahf
scas
add
daa
test
mov
inc
mov
ret
jle
cmc
jnp
jne
add
xchg
dec
inc
and
jno
sub
jl
inc
lds
jo
stc
bound
mov
imul
pop
jno
push
fisttpll
sbb
sbb
add
push
xor
cwtl
ja
mov
adc
movsb
pop
out
xchg
es
xchg
fstpt
cmpb
sub
out
test
cs
insl
cmp
adc
sub
lds
shrl
pmulhuw
cmp
jle
xchg
sub
stos
rcr
mov
popl
mov
outsb
mov
mov
cmp
xor
push
cmp
lcall
mov
and
xchg
lods
outsl
inc
leave
jp
ljmp
das
out
nop
jnp
insl
cmpsl
push
jge
dec
jo
dec
jnp
xor
inc
push
movsl
push
shlb
sbb
fistpl
bound
sub
jmp
lahf
mov
mov
sti
dec
iret
adc
xchg
ja
cmp
cmp
out
lods
cltd
out
jecxz
dec
lds
adc
sahf
push
outsb
rorb
ret
xchg
psraw
sbbl
addr16
mov
stos
imul
xor
xchg
int3
push
push
adc
inc
out
sub
adc
loope
xchg
or
js
cmp
daa
inc
sbb
sbb
sbb
repnz
adc
movsb
nop
xchg
add
or
stos
sbb
lret
loop
ret
lahf
sahf
push
loopne
and
sub
pushf
xlat
mov
enter
iret
push
mov
mov
xor
inc
orb
xorl
mov
jmp
xor
sbb
fldt
in
mov
cmp
xor
imul
test
movsb
lcall
sahf
insl
add
xchg
aaa
mov
mov
dec
pusha
mov
test
mov
fdivrs
add
and
mov
jl
cmp
cwtl
cmpb
sub
aam
cltd
and
loope
mov
js
mov
jg
fs
mov
rcrb
imul
dec
in
cs
xchg
rcll
or
sub
ret
fwait
mov
fwait
stc
es
outsl
scas
pop
xor
imul
dec
jae
pop
cld
xchg
dec
push
addr16
shl
xchg
mov
cmc
jecxz
je
cmp
inc
call
scas
mov
out
sub
inc
sub
xor
add
mov
cs
jnp
xor
lock
mov
jns
cltd
lods
out
ret
cmp
std
fnsave
jns
pop
dec
jp
sub
ret
test
mov
fsubrs
int
rolb
dec
xchg
mov
fstl
scas
lods
je
ret
test
sbb
aaa
fistl
or
sub
xchg
adc
cwtl
jp
mov
scas
rorb
rorb
out
xor
adc
pop
mov
ss
call
dec
push
mov
into
xchg
xlat
dec
xor
ret
stos
popa
ret
sub
mov
xchg
add
push
mov
adc
iret
movsl
add
jnp
cltd
test
jb
mov
shlb
ds
mov
adc
mov
divl
push
icebp
sti
fldln2
cmp
inc
mov
mov
scas
mov
in
mov
sub
pop
loop
xchg
add
test
leave
jne
push
divl
xchg
or
sbb
int3
push
inc
movsb
adc
rorl
mov
jne
int3
decl
jns
iret
negl
xlat
decb
inc
movsb
mov
mov
out
adc
xchg
adc
pushf
shrl
push
or
jmp
pop
fisubl
pop
xchg
pop
cmp
cmp
sub
push
mov
push
push
clc
ficompl
aas
jp
sbb
jo
sbb
scas
rorb
dec
popf
mov
ljmp
xor
fsub
xchg
cmp
test
push
xor
stos
dec
lock
enter
data16
xchg
cmp
ja
mov
jmp
xor
loopne
insl
inc
pop
adc
outsb
adc
pop
cmp
inc
inc
add
pushf
and
icebp
adc
xchg
add
xor
xchg
cwtl
sbb
cmp
xchg
fwait
aaa
mov
and
adc
mov
int3
arpl
int
arpl
dec
cs
out
mov
inc
mov
mov
lret
outsl
popf
movd
and
repz
imul
pop
inc
jbe
dec
andb
dec
das
mull
mov
in
ret
or
jge
add
repnz
mov
inc
jno
gs
in
je
fwait
or
and
out
xchg
or
add
dec
xchg
mov
pop
and
mov
jmp
ss
cmpsl
dec
sbb
mov
jg
mov
add
int
lcall
add
mul
adc
jge
mov
test
inc
lcall
in
inc
mov
in
cli
add
fsubs
dec
or
sub
stos
sbbb
cld
add
mov
loope
push
pop
pop
mov
inc
in
xor
lret
testb
arpl
out
inc
and
outsl
push
shl
xchg
in
iret
lock
mov
sub
jbe
jne
cmp
lcall
inc
test
test
and
jg
in
pop
sub
jns
sarl
xchg
stos
roll
and
xchg
insl
js
mov
outsb
jae
repz
dec
insb
aas
and
sti
movsb
xchg
sahf
dec
lret
mov
push
aaa
cld
out
addl
lahf
jne
mov
inc
xchg
cmp
arpl
mov
jecxz
sbb
pop
shrl
iret
xchg
repnz
ret
ja
out
xchg
dec
sub
xchg
inc
sub
mov
pop
cld
pop
fsubrl
mov
fwait
sarl
inc
cli
jnp
repnz
or
pop
lea
and
mov
push
xor
popf
xchg
jp
xor
push
jne
hlt
out
push
jp
push
frstor
popa
xor
inc
jl
das
enter
clc
cmp
ret
mov
inc
jns
fisubl
add
pop
aad
xor
mov
inc
cltd
pushf
aaa
rol
pop
and
stc
loope
pop
xor
xchg
mov
or
out
dec
push
int
fimuls
mov
and
xor
popa
lds
in
ret
rcll
push
xchg
dec
loopne
insl
xchg
or
fldt
in
add
movsb
sarb
fnsave
out
dec
movsl
push
push
mov
sbb
mov
mov
adc
sbb
mov
mov
sub
orb
inc
pop
adc
or
mov
es
test
jmp
or
mov
or
add
cmpsb
jecxz
das
sub
pushl
pop
mov
sbb
add
lock
jae
jg
add
out
out
and
outsl
subb
popf
jl
addr16
mov
push
std
insl
out
mov
lret
iret
fcmovbe
cmpb
ds
std
and
test
pop
xor
mov
mov
xor
ret
or
popf
stos
cltd
jge
lock
idivb
daa
ror
leave
add
mov
jecxz
sbb
dec
push
xor
nop
fadds
inc
sbb
hlt
lret
xorb
loopne
std
cmp
ficompl
sahf
jnp
lods
fsubs
dec
sbb
xor
pop
cmp
fst
and
in
cmp
loop
lods
mov
dec
add
mov
rcll
lahf
push
mov
iret
andl
loop
and
outsb
int3
mov
or
mov
adc
bound
jb
sahf
sbb
jbe
mov
cli
clc
mov
gs
nop
pop
xor
out
xor
mov
and
mov
ss
psrad
fcomps
push
mov
cmpsb
adc
inc
loopne
mull
inc
add
iret
ljmp
push
add
out
out
fildl
xchg
aas
testl
add
repnz
pop
xchg
xlat
or
xchg
dec
dec
jo
mov
in
mov
sub
jmp
shll
jb
lret
inc
jbe
es
imul
dec
punpcklbw
fmull
iret
mov
xchg
pop
out
jo
shll
push
fnstenv
add
std
negb
lcall
pusha
nop
mov
loopne
jl
cld
ret
pop
idivb
dec
stos
lods
pop
shlb
inc
push
out
cmp
loop
mov
inc
popf
sti
sub
outsb
inc
mov
cwtl
pop
scas
or
push
mov
lret
lahf
jl
push
fisubrl
push
stc
push
loope
or
ja
push
mov
adc
add
clc
int
ja
sbb
out
fwait
jno
jns
xchg
or
push
in
psubsw
or
testl
sub
xor
lods
cmpsb
outsb
fildll
push
loope
pop
aam
scas
mov
pop
push
in
jge
xchg
xchg
and
sub
addr16
pop
dec
int
rcr
repz
rolb
out
test
mov
push
push
out
or
xchg
dec
adc
adc
fistpl
adc
sarl
out
mov
dec
sti
jl
xorl
sub
popa
inc
fisttps
imul
push
xchg
or
push
insl
mov
cs
cmp
dec
jae
arpl
cli
xlat
push
test
mov
out
outsl
nop
xchg
adc
lds
loopne
out
lods
add
fistl
test
adc
mov
negl
mov
sub
mov
mov
leave
loop
dec
xchg
push
in
dec
mov
es
sub
mov
ja
cmp
andl
inc
mov
aam
insl
jg
jle
or
jnp
in
cmpsl
mov
les
fcmovb
jge
mov
add
ja
js
pop
mov
aam
add
mov
stos
ds
out
jle
mov
icebp
and
sub
add
fildl
ljmp
test
pop
mov
xor
push
xchg
sbb
mov
push
sub
inc
cmpsl
int3
jae
int
ret
pop
aad
out
jb
sub
fiaddl
js
in
enter
jne
lods
pop
push
lret
hlt
mov
inc
jmp
aam
pop
adc
mov
inc
imul
xchg
sub
inc
jno
push
inc
mov
fisubrs
outsb
xchg
data16
mov
or
sbb
pop
ja
icebp
stos
dec
test
cmpsb
dec
jae
data16
jb
dec
xchg
fisttpll
sub
mov
or
sbb
cld
imul
mov
call
mov
and
dec
sbb
fsubrl
out
hlt
push
dec
in
lea
and
mov
ja
add
imul
bound
fwait
xchg
mov
jne
xor
and
jno
mov
movsl
mov
lahf
adc
sbb
inc
mov
jle
sbb
test
lcall
mov
ss
jge
mov
shlb
imul
pusha
dec
movsl
xchg
jae
or
adc
dec
push
push
push
and
enter
push
pop
sub
scas
inc
push
jecxz
jo
and
dec
hlt
pop
fcmovbe
int
mov
stos
cmc
sbb
shrb
mov
pop
lods
mov
mov
ljmp
sbb
shlb
xor
jl
std
push
xchg
lahf
in
insb
fdiv
scas
inc
imul
dec
sub
rorb
adc
mov
jge
cwtl
xor
lret
test
sbb
movsb
int
test
push
mov
mov
xchg
cwtl
jno
shl
and
divb
add
mov
rorl
dec
pushf
addr16
mov
pop
inc
rcrb
jo
xchg
jns
out
inc
jl
in
cmpsb
lahf
pop
test
imul
xlat
pop
mov
or
mov
dec
mulb
fwait
inc
repz
jb
dec
pop
jo
mov
test
addr16
mov
movsl
outsl
inc
lcall
cmp
pop
js
and
cmp
or
ljmp
fisubl
dec
aaa
xor
cmp
mov
sbb
push
stos
adc
lret
movsl
lahf
dec
xchg
sub
dec
pop
scas
pop
xlat
arpl
dec
push
xor
sbb
idivb
out
cmp
xor
push
out
fwait
xchg
mov
in
push
mov
cs
mov
jb
inc
rcll
sbb
inc
xlat
jb
ret
lds
mov
cmc
cmpsb
adc
jns
jmp
insb
inc
sbb
fucom
inc
inc
adc
pushf
cmp
pop
inc
loope
cmp
sbb
pushf
mov
cmp
and
adc
fldcw
xchg
dec
cmp
bound
gs
inc
dec
adc
das
mov
sahf
ret
pop
add
test
inc
fistpl
or
fdiv
push
test
mov
movsb
call
out
ljmp
jbe
dec
scas
jns
xchg
shlb
add
adc
test
les
mov
xchg
sbb
scas
rorl
adc
mov
push
push
loope
cmpsl
adc
lds
test
vcvtpd2psy
jge
dec
pop
mov
popf
mov
lock
dec
cmp
sbb
cld
int
imul
jecxz
and
loop
pop
mov
inc
xchg
xchg
and
arpl
and
xchg
es
mov
and
lahf
sub
or
incl
inc
jnp
fstl
fs
cwtl
dec
enter
dec
or
jne
ljmp
pop
mov
jne
sub
fs
sbb
cmpb
and
sbb
loopne
popa
mov
inc
push
cwtl
mov
mov
mov
fnstenv
jno
mov
dec
push
add
push
sub
and
jo
jge
movsl
movsb
out
lcall
add
daa
and
lods
jo
mov
jge
lret
fcomp
scas
rcrb
sti
pop
repz
ljmp
int3
jge
aad
dec
hlt
jne
mov
shll
arpl
enter
xor
xlat
or
inc
iret
cmp
icebp
pop
sub
addb
and
std
scas
in
imul
or
cmp
pop
jno
xchg
sysret
xlat
mov
sbb
mov
jno
ja
mov
xchg
sbb
hlt
stos
inc
inc
mov
xchg
adc
incl
add
mov
arpl
push
pop
scas
ss
jmp
aad
dec
sub
mov
inc
mov
xchg
jae
hlt
cmp
xor
inc
stos
mov
aam
xor
divb
and
lds
jns
jge
cwtl
xchg
cmp
cwtl
xor
aaa
pop
pop
or
mov
test
cmpsb
sti
imul
xor
pop
ljmp
pop
xchg
push
push
jo
aad
sub
cwtl
dec
mov
dec
outsb
loopne
add
movsl
mov
sbb
adc
cli
pop
imul
xchg
fwait
sbb
outsb
xor
jb
ficoml
push
jle
push
push
sub
adc
sub
stc
movsb
mov
aas
test
xor
add
movsl
xchg
xchg
dec
or
adcb
or
push
jl
iret
jns
fst
aas
or
inc
and
adc
pop
test
sahf
sub
clc
or
xor
icebp
out
faddp
lea
nop
and
sub
mov
pop
mov
stos
insl
data16
and
scas
and
push
sbb
loope
test
cmp
into
lds
xchg
cltd
add
mov
lods
jg
mov
jg
lcall
push
push
stos
and
daa
cli
es
mov
js
xlat
fsubrl
scas
mov
loop
jnp
and
int
iret
incb
jbe
lcall
mov
and
hlt
popa
inc
adc
fs
push
iret
cwtl
loopne
adc
cwtl
and
jae
mov
imul
sub
xchg
test
jle
or
dec
loop
mov
loopne
fimull
stos
push
pusha
push
test
cwtd
imul
out
bound
xchg
sbb
mov
inc
add
sbb
das
flds
push
jo
ljmp
jp
fs
outsl
dec
sahf
push
mov
mov
pop
sbb
mov
cmp
sbb
jbe
pop
out
mov
fwait
mov
js
add
sbb
xchg
sub
iret
mov
dec
test
outsl
lahf
sbb
jl
jne
add
xchg
or
push
sbb
movsl
es
aad
xor
sub
lret
movsl
fdiv
std
and
cltd
mov
xor
mov
cltd
pop
lret
aam
aaa
and
sbb
jae
ret
out
rorb
add
or
mov
mov
jle
add
sbb
nop
jecxz
aas
sub
fwait
dec
or
dec
cmpl
add
xor
and
inc
in
data16
add
in
push
pop
adcb
mov
movsb
out
cmp
mov
call
adc
lock
add
mov
mov
push
and
lret
pushf
ficomps
cltd
or
inc
xor
adc
pop
leave
popf
cmp
in
mov
sbb
mov
outsb
stc
or
push
int3
mov
nop
ds
into
jg
pop
push
mov
pop
push
xlat
push
sub
mov
daa
lret
sbb
xor
cmpsl
pop
ja
mov
xchg
pop
mov
jns
jg
cmc
pop
inc
push
mov
pop
push
pop
add
pushf
pop
add
or
push
and
pop
aad
pop
fdivrp
sbb
fsubs
cmpsl
repnz
dec
pop
pop
sahf
mov
xchg
jae
popa
mov
ret
or
adcb
xor
adc
addr16
xchg
repnz
les
jmp
add
lcall
jnp
or
call
mov
mov
adc
mov
inc
mov
adc
je
shr
aaa
out
adcb
out
push
imul
aad
call
mov
cs
les
mov
mov
sbb
ja
and
mov
inc
mov
or
sbb
cltd
cmp
push
or
adc
shr
cltd
cs
or
ss
pop
and
addl
pop
xor
inc
mov
clc
xor
jmp
ret
xor
test
stos
dec
fwait
nop
out
cld
jg
dec
mov
mov
push
dec
icebp
sbb
jle
dec
mov
xor
mov
lock
shrb
adc
test
outsb
push
pop
lahf
mov
lahf
inc
sbb
or
and
int
arpl
adc
mov
dec
sbb
add
mov
xchg
or
iret
in
ret
cmc
jle
in
cmc
or
push
mov
pop
add
movsb
xchg
push
xorb
sbb
fwait
mov
divb
cld
daa
ljmp
add
insb
sub
repz
xchg
or
or
pusha
adc
dec
outsl
daa
and
push
ljmp
pushf
or
mov
push
sub
fnsave
pop
push
ret
inc
out
iret
or
int
sub
and
aad
jp
cwtl
sar
mov
iret
stos
jmp
jae
xchg
sti
jmp
fidivs
xor
push
xchg
mov
push
jns
jb
int
loope
sbb
inc
mov
inc
push
movl
mov
mov
fcomi
divl
popa
int3
adc
pop
mov
jl
xchg
outsb
ret
and
outsl
mov
mov
push
lret
cmc
pop
leave
js
daa
lods
xchg
xchg
int3
xor
fsubl
data16
pop
mov
inc
les
push
cmc
out
hlt
sub
imul
ret
mov
cmp
cmp
mov
in
mov
and
outsl
jp
xchg
mov
add
andb
in
cmp
add
xor
sbb
movsl
cs
add
inc
adc
rcrb
jb
das
xor
arpl
jns
fs
sub
push
cmp
es
push
popa
andb
or
mov
andb
orb
cmp
fwait
adc
jo
fiaddl
adc
icebp
imul
pop
fcoml
das
cs
faddp
jae
and
out
push
dec
jp
dec
and
icebp
imul
dec
add
gs
fmuls
mov
pop
cld
push
add
mov
les
es
pop
dec
dec
les
cmp
mov
pop
cmp
idiv
fwait
lock
adc
je
dec
popa
repnz
xchg
mov
push
jnp
sbb
cmpb
movsl
rcr
orb
add
fistps
lret
xor
test
or
mov
ret
xchg
push
mov
jp
mov
xchg
icebp
btc
dec
mov
xor
fucomp
outsb
fisubrl
in
xchg
adc
jae
fstp
sbb
test
jg
jo
mov
nop
mov
aaa
mov
aas
jb
shrl
loopne
xchg
mov
jne
dec
shrb
cmp
in
repnz
mov
add
sub
mov
divl
mov
mov
xor
sbb
sub
insb
mov
shl
sub
cmp
jns
xchg
and
push
ds
mov
push
dec
mov
scas
cmp
out
pop
xor
es
loop
xchg
mov
sub
xchg
js
mov
mov
mov
imul
faddl
shl
pop
lret
unpcklps
xchg
fiadds
adc
mov
xor
gs
dec
ljmp
or
cs
fdivrl
sub
jmp
and
inc
out
mov
insb
xchg
outsb
cs
arpl
inc
je
rorb
repz
lsl
pop
iret
mov
cmpsl
cli
xor
xor
xor
mov
mov
sub
inc
nop
in
xchg
cld
pop
sub
test
sahf
adc
movsb
movsb
mov
mov
sbb
xor
ds
in
jne
jne
mov
inc
dec
fadd
jle
dec
adc
fcomp
jns
sub
leave
arpl
pop
push
cld
lods
imul
daa
mov
mov
and
sub
inc
xchg
je
jne
das
xor
je
loop
test
clc
out
stos
inc
xchg
cli
jnp
aad
dec
lcall
scas
stos
push
push
mov
xor
add
cmp
dec
aaa
pop
and
jae
jge
stc
mov
sti
sub
ss
dec
mov
adc
negl
pop
xchg
in
daa
jmp
sub
jge
push
mov
ljmp
hlt
jo
push
push
loop
inc
insb
push
pop
sub
inc
test
xchg
mov
sarb
jge
push
fld
aam
call
imul
xor
mov
shlb
sbbb
outsl
stc
sub
fdivs
test
repnz
test
xchg
push
xorl
icebp
loope
aad
hlt
adcb
ja
fisttpl
or
sub
aad
pop
fadds
push
pop
insl
jnp
push
out
cmp
mov
enter
ja
pop
insl
mov
mov
or
insl
repz
adcb
adc
fisubrl
push
cmp
jne
lock
aaa
and
shl
add
push
cmpsb
into
xlat
pop
and
subb
inc
inc
cmp
mov
lods
or
lahf
fs
mov
in
sub
test
test
inc
inc
pop
in
sbb
fisttpl
in
pop
stc
stos
inc
aad
cs
ljmp
jg
sub
stos
sti
adc
jae
fisubl
outsl
lea
repz
mov
outsb
cmpl
addr16
rcrl
push
mov
out
rcrb
sub
push
and
ficomps
xchg
push
outsl
pop
push
bound
inc
add
and
mov
pop
push
test
pushf
fadd
and
sbb
mov
je
push
lods
loopne
adc
std
pushf
aas
pop
mov
pop
dec
adcb
ljmp
shr
dec
mov
mov
add
lock
lahf
arpl
and
jecxz
popl
push
xchg
jp
jecxz
add
fstp
inc
mov
ljmp
push
adc
test
xchg
sub
lea
outsl
or
movsl
pop
jae
sub
sub
jg
gs
and
or
or
pop
sbb
movsb
xor
sub
cwtl
inc
dec
sub
xor
lcall
inc
and
std
test
add
jl
js
daa
add
xchg
inc
pusha
jp
inc
jae
test
sub
mov
xchg
fs
jnp
cmp
mov
in
sub
fsubs
mov
push
or
sbb
iret
fdivrl
push
sub
inc
jae
int
and
shlb
out
pop
rol
dec
mov
push
inc
mov
aad
or
adc
fwait
add
cmpsb
out
jne
jl
fsubs
jge
ja
push
inc
es
jae
sub
mov
mov
fiaddl
inc
adc
xchg
fwait
jns
jle
mov
and
clc
jnp
cmp
scas
movsl
adc
lds
movsb
scas
push
mov
cmc
adcb
push
loope
mov
jmp
fwait
imul
xor
pop
push
lret
ret
push
fistpl
push
sar
and
cmc
popa
mov
dec
xor
add
dec
jbe
and
pusha
xlat
notl
cmp
or
outsl
mov
hlt
add
jb
or
push
adc
add
fscale
pop
pop
xchg
add
mov
jbe
pop
ret
stc
xor
inc
int
mov
stos
loopne
xlat
loope
cli
xor
fdivl
scas
push
je
cmp
in
mov
inc
cli
sbb
mov
outsb
jb
es
push
jb
out
sbb
rcll
adc
mov
mov
pusha
popf
jecxz
lods
xor
lret
xor
pop
sar
mov
jmp
sbb
pushf
pushf
sbbb
adc
xor
xchg
dec
mov
and
xchg
dec
fwait
daa
mov
insb
adc
mov
mov
fadds
lock
jg
popw
dec
nop
ret
aas
iret
les
fidivrs
pop
lret
cld
push
imul
push
scas
xor
cwtl
mov
es
and
bound
pop
dec
movsb
maxps
int3
dec
fdiv
cmp
cmpsb
and
mov
cmpsl
lds
xor
jo
setae
insl
pop
add
inc
es
cwtl
and
stos
es
mulb
jae
sbb
push
aaa
dec
icebp
cli
mov
pop
rclb
mov
pop
add
push
mov
test
adc
add
dec
pop
shll
inc
test
jmp
cmp
mov
hlt
xor
adc
ss
mov
xor
mov
fistpll
fstl
addr16
je
fwait
push
arpl
dec
pushf
stos
mov
dec
pop
popa
sub
dec
ds
aad
loopne
add
dec
cltd
cld
sbbb
out
pop
or
dec
sarl
sub
cli
dec
pop
xchg
xchg
dec
clc
xor
push
add
ja
mov
pop
add
mov
imul
push
add
mov
fucompp
mov
cmpsl
in
insb
pop
mov
mov
es
mov
loopne
addr16
mov
test
push
adcl
jle,pn
add
pop
push
fstpl
sub
outsb
daa
jl
inc
fld1
stos
pop
cli
mov
sahf
shlb
aaa
in
gs
test
in
jg
or
and
out
pop
jbe
iret
mov
daa
cmp
aam
daa
daa
lods
inc
jae
es
inc
lahf
cmp
lret
adc
or
push
add
mov
lahf
mov
and
loope
adc
and
movl
bound
jnp
cmovb
add
nop
lds
adc
das
das
out
add
or
pop
xor
pushl
xchg
mov
adc
mov
push
repz
or
lock
pop
rcl
loop
cmpsb
icebp
jno
aad
pop
dec
jne
int3
rclb
mov
pop
jmp
jg
add
inc
mov
leave
and
popf
add
add
mov
call
push
out
test
clc
leave
fwait
cwtl
fidivrs
adc
out
out
mov
fsubrl
mov
js
mov
mov
stos
mov
lret
jmp
sarb
pushf
jmp
cs
jnp
pop
cltd
ret
jnp
or
pop
pop
or
fsubs
mov
mov
or
lret
or
insl
inc
jl
movsb
test
rolb
inc
shll
adc
popf
push
jns
lret
mov
rolb
xchg
stc
repz
mov
push
outsl
jne
sub
cmpsb
xor
ljmp
adcb
jae
mov
push
sar
dec
cmpsb
aam
addr16
into
push
lods
mov
jbe
fstpl
testb
add
inc
or
or
push
aas
cmp
cwtl
push
add
push
mov
jp
cmovae
jno
push
les
xchg
cld
push
xchg
test
movsb
mov
ret
sub
jae
xchg
xchg
movsb
push
jmp
aaa
push
and
shrb
outsl
mov
call
into
sbb
loope
pop
or
push
mov
or
mov
cmc
or
jno
mov
cmc
xchg
push
mov
shrl
popa
addb
dec
imul
inc
jecxz
sbb
rorl
cmp
lret
push
in
push
movsb
mov
and
repz
fists
loopne
cmp
jbe
testl
hlt
xorb
icebp
add
mov
inc
mov
xchg
and
cmp
inc
aaa
pop
cld
cld
das
ljmp
gs
in
comiss
ret
jp
sub
cltd
pop
imul
addr16
xchg
mov
mov
cmp
xchg
jae
fsts
xchg
imul
adc
jecxz
ds
mov
push
stos
inc
and
jg
sub
mov
push
sub
mov
fsubs
cmc
mov
loopne
cmc
daa
mov
jmp
dec
mov
iret
sti
ds
sub
loop
sti
mov
mov
loop
jecxz
cmp
ja
adc
pusha
xchg
and
pop
in
and
cmpsb
push
ja
push
lret
hlt
mov
pop
mov
mov
sbb
sti
loope
or
push
xchg
scas
sbb
jnp
pusha
insb
sub
push
popf
addr16
jmp
fmuls
jle
ljmp
hlt
cli
es
pop
push
mov
in
or
and
into
jp
js
mov
inc
xchg
sbb
mov
ds
inc
cmpsb
stos
cli
cmc
mov
movsl
cmp
lret
mov
xchg
mov
or
cmp
adc
jb
in
ds
lock
bound
jb
loope
andl
mov
inc
pusha
jg
mov
lds
and
ret
int3
sarb
mov
inc
add
into
pop
mov
iret
popf
hlt
loop
dec
push
in
lcall
imul
cmc
jns
ficoml
dec
xchg
gs
add
jnp
nop
and
addr16
push
faddl
pop
inc
or
sub
hlt
sbb
cmp
dec
mov
ud1
cmp
push
lods
cmp
sub
mov
inc
xchg
inc
cmp
mov
add
mov
inc
shlb
test
enter
cmp
in
pop
in
xchg
mov
push
inc
insl
jns
or
push
pop
ret
popa
gs
pop
sbb
in
andb
cmp
mov
lcall
stos
mov
pop
dec
cmpsl
add
or
inc
inc
sub
cmc
stc
fdivrl
jae
pop
xchg
xor
adc
inc
inc
daa
fstpt
shl
dec
out
lret
push
in
push
jecxz
pop
popf
cmp
inc
rcll
add
pop
out
sbb
fcomi
cmpsb
dec
mov
mov
pop
jle
cmpsl
inc
div
or
stos
std
iret
jae
ret
dec
imul
pop
pusha
jmp
sbb
push
popa
jo
ret
sub
les
cli
mov
fwait
loopne
repnz
mov
ljmp
add
fs
cmp
pop
ret
in
mov
cltd
xor
pop
jge
push
dec
les
push
adc
inc
or
cmpsl
jecxz
mov
push
aas
add
mov
fs
or
xor
sbb
mov
mov
rorb
xor
mov
pop
stos
mov
repnz
dec
xchg
out
cli
js
mulb
ja
aad
loopne
fstpt
test
mov
jo
xchg
lods
sub
lret
mov
popf
movsl
lods
stos
sub
inc
lea
stc
loope
sbb
jo
jns
mov
pop
sbb
out
out
outsb
fwait
fwait
cmpsl
dec
and
xchg
dec
inc
sbb
inc
sbb
mov
inc
xor
fnstsw
dec
mov
mov
mov
cmpsb
and
add
cmpsb
add
lea
or
rcll
jno
sar
sub
movsl
xor
dec
inc
and
add
push
outsb
mov
ja
and
aas
push
or
rolb
xchg
daa
icebp
or
add
pop
bound
push
pushw
in
dec
or
adc
jmp
lret
xor
int3
xchg
rolb
out
jnp
roll
mov
fldl
pop
shlb
fsubl
jae
loopne
sub
repnz
sbb
add
sub
jbe
mov
push
ss
outsb
mov
sub
cmpsb
sahf
pop
pop
inc
leave
in
push
jbe
mov
inc
aas
adc
lret
hlt
lock
std
loope
push
xlat
and
jnp
mov
mov
xchg
mov
lds
daa
jne
cmp
pop
adc
jge
ficoml
in
mov
jmp
fmull
mov
mov
add
ret
jns
cs
cltd
insb
in
out
sbb
iret
fiaddl
leave
push
data16
adc
mov
jnp
clc
rcrb
inc
adc
test
mov
xchg
mov
pop
xor
loopne
and
mov
inc
sbb
push
and
push
pushf
pop
xchg
insl
pop
pop
mov
loop
lcall
xchg
dec
sub
jmp
push
cli
xchg
inc
sahf
pop
movsl
ret
mov
xchg
push
test
call
std
ljmp
lods
loope
addr16
dec
xchg
aad
loop
orb
jne
scas
mov
or
add
and
fimull
xchg
xor
cwtl
cmp
je
jo
cli
xor
out
pushf
imulb
loope
enter
pop
pop
in
loop
jmp
aas
mov
jo
dec
push
jmp
pushf
faddl
sbbl
pop
in
or
fwait
jno
daa
pop
adc
insb
pop
pop
or
pop
out
jae
fdivrs
movsl
jae
pusha
sarl
xchg
jno
and
mov
stc
add
cmp
or
je
xchg
in
jne
jp
sub
fcmovb
dec
sbb
jbe
or
in
dec
in
push
cmp
imul
ljmp
mov
xlat
out
jl
adc
sub
nop
pop
inc
pop
leave
scas
ss
out
lea
inc
push
stos
adc
gs
and
jecxz
xchg
pop
cmp
or
movsb
xchg
sub
jecxz
or
fcomi
adc
es
mov
adc
fsubp
cmp
jb
jge
push
jp
pop
xchg
fnsave
movl
aaa
push
test
fimuls
repz
sbb
adc
jno
pusha
push
call
inc
sub
outsb
mov
inc
sbb
out
xchg
sbb
fdivrs
movsl
pop
sbb
data16
gs
outsb
xor
cmpsl
jne
shufps
xor
aas
jmp
outsb
mov
and
lods
call
call
test
xchg
mov
adc
mov
mov
fcoms
leave
scas
loop
es
pop
xchg
jne
pop
or
push
sub
bound
cmc
inc
lret
adc
addb
fs
daa
sub
dec
sub
gs
pop
jg
or
mov
je
mov
enter
mov
dec
insb
insl
jns
sub
xor
sarl
addr16
lods
push
sub
push
repz
lret
sub
idivl
repnz
call
push
mov
jno
lret
add
repz
sbb
es
loope
outsl
cmp
cld
sub
xchg
popf
repnz
adc
push
push
std
out
inc
push
scas
verw
and
fsts
mov
dec
bound
jecxz
sub
add
lret
test
xor
push
adc
dec
out
mov
bound
loop
fs
xchg
sub
lods
mov
in
cmpsb
iret
pop
sarl
aad
mov
mov
xchg
xor
dec
mov
push
add
jns
not
cmc
scas
lods
mov
mov
adc
imul
sub
cmp
sub
gs
adc
xchg
mov
out
mov
push
lods
sub
cs
xor
nop
lret
push
push
and
and
mov
mov
push
jge
dec
pop
jb
int3
mov
pop
sub
lock
fadd
mul
imul
jle
jmp
arpl
bound
adc
call
js
add
sub
fdivrs
rorl
jns
or
cs
hlt
add
addb
add
sbb
mov
pop
enter
enter
loop
call
inc
cmp
sarb
aas
test
and
and
insl
jecxz
jp
mov
and
inc
cmp
mov
xchg
xor
out
adc
dec
test
or
rclb
ss
mov
lea
sub
inc
push
test
pushaw
sub
cmp
mov
adc
pop
iret
call
add
sbb
inc
ja
dec
imul
jno
aad
sub
xor
arpl
add
adc
adc
add
les
push
add
outsb
mov
stos
aaa
aad
lret
pop
push
and
sbb
xchg
inc
mov
and
testl
xchg
shrb
inc
xchg
cltd
pop
adc
loop
test
int3
and
stos
popa
add
pop
ja
dec
stos
movsl
inc
xchg
imul
stc
jbe
mov
insl
je
mov
mov
pop
lock
dec
fstps
fs
mov
push
outsl
in
out
mov
jae
out
xor
adcl
adcb
loopne
neg
jb
pop
fnstsw
mov
bound
in
sahf
out
add
mov
pop
sbb
sub
pop
pop
dec
add
rcrb
fbld
rcll
dec
and
xor
jge
inc
icebp
adc
dec
out
xchg
pop
xchg
jno
mov
scas
pop
popfw
stos
test
ja
je
cwtl
sbb
js
bound
shr
ljmp
push
cmp
and
pushf
stc
test
push
ljmp
xchg
sub
adc
repz
jne
es
stos
mov
cmpsb
inc
stos
ja
in
dec
fidivrs
test
mov
adc
adc
mov
movsb
imul
adc
divb
jge
cli
push
pop
push
push
mov
sbb
insb
cmpsl
adc
pop
inc
sub
push
mov
mov
sti
fcmovne
jno
fwait
dec
add
inc
cmp
jne
loop
xchg
ljmp
ja
push
cmp
jmp
bound
aad
loopne
jns
dec
cmp
test
outsl
fucom
xchg
negb
sub
dec
cmpsl
ja
loop
mov
xlat
mov
xchg
andl
mov
adc
frstor
jnp
inc
lea
inc
push
arpl
lods
mov
sbb
out
inc
lcall
pop
clc
stos
jbe
sbb
pop
push
sarb
xchg
js
andl
push
xor
daa
jmp
push
scas
dec
not
mov
cmp
scas
mov
mov
pop
imul
insl
jbe
sbb
fidivs
mov
push
sub
loop
ja
std
shrb
mov
jecxz
and
push
dec
fldcw
add
popa
mov
stos
or
sbb
cmp
sub
movsb
sti
pushf
scas
mov
xor
lahf
fcompl
or
addl
push
movsb
mov
arpl
ss
rcrb
xlat
popf
add
jl
pop
jle
mov
lock
sub
pushf
scas
and
sti
xchg
imul
mov
push
loopne
and
jecxz
scas
xchg
jle
sbb
sbb
imul
adc
aaa
jecxz
arpl
inc
pusha
btc
add
addr16
in
jmp
loope
xor
je
sti
sub
jnp
jbe
mov
and
arpl
xchg
jg
das
test
mov
rcrb
jb
sarl
jb
cmc
data16
dec
lret
sbb
mov
popa
mov
ljmpw
ret
inc
pop
mov
cmpsb
cmp
jbe
dec
cmp
clc
pop
mov
jp
cwtl
pop
pop
repz
pop
inc
dec
sarb
insl
sbb
jo
insb
sub
inc
xchg
outsl
daa
nop
stc
mov
jl
dec
dec
push
cwtl
enter
jle
icebp
pop
mov
cmpsb
lahf
add
jecxz
lods
jne
mov
push
mov
repz
fisubl
je
adc
push
cltd
pop
lods
fcmovne
out
je
or
arpl
dec
test
mov
loope
dec
xchg
lock
int
adc
cli
pop
xchg
cwtl
lock
fistl
rol
mov
repz
repz
jecxz
sbb
movsb
test
push
add
sub
aaa
pop
lcall
adc
push
sub
enter
mov
pop
jo
mov
pop
inc
test
in
cmpb
push
push
scas
icebp
xor
xchg
adc
add
test
mov
xor
mov
iret
inc
addr16
mov
repz
and
mov
aaa
fcoms
bound
aad
rolb
xchg
push
cmp
adc
fdiv
sub
aam
mov
sub
pop
inc
pop
mov
mov
mov
addr16
cwtl
add
jl
cmc
fldt
les
xchg
dec
jg
roll
aad
dec
hlt
pop
jns
mov
ds
aad
aam
dec
mov
cwtl
ret
scas
popf
loope
push
cmc
subl
stos
call
mov
movsl
mov
daa
in
and
scas
loop
popa
sub
dec
inc
test
add
clc
jb
add
ret
iret
mov
mov
mov
dec
fldl
add
ret
cltd
add
adc
dec
pop
push
mov
dec
add
mov
sbb
mov
xchg
mov
cmpsb
mov
enter
imul
jl
test
add
sub
mov
add
std
mov
daa
jmp
test
cwtl
icebp
fwait
pop
or
fwait
add
mov
sbb
pop
jle
in
mov
inc
imul
pop
les
mov
fimuls
jecxz
aaa
cwtl
jge
push
ret
mov
mov
cmp
inc
test
pop
add
lock
mov
jno
or
scas
movsb
adc
in
cmpsl
in
ja
test
sub
enterw
mov
mov
inc
orb
inc
nop
mov
int
mov
movsl
push
call
push
movsl
aad
pop
push
fsubr
adc
ja
test
aaa
sahf
ret
sbbb
mov
cmc
push
ret
data16
jno
xor
pop
adc
int
push
jne
xor
out
in
mov
jecxz
fadds
ja
xlat
mov
jle
sbb
pop
loop
mov
mov
subl
xlat
leave
xor
shrl
jbe
xor
jbe
leave
cmp
mov
ljmp
test
out
jl
xchg
into
pop
je
mov
divl
sbb
sbb
push
cs
std
scas
aam
add
xlat
jecxz
mov
int3
pop
dec
jae
pushf
into
ljmp
cmpsb
adc
aad
popa
mov
push
adc
mov
push
fimuls
pop
cwtl
mov
mov
fnstsw
fucomi
pop
pop
add
jmp
fwait
int
cmp
lods
rorb
inc
int3
rcrl
aas
subl
push
loope
xchg
mov
mov
fcomp
jmp
push
popa
sub
ljmp
xchg
test
mov
jbe
xchg
pusha
adc
adc
dec
jae
out
mov
push
xchg
or
adc
loop
setnp
xchg
pushw
sahf
inc
loope
jnp
mov
sar
arpl
jmp
stos
scas
sbb
hlt
push
aas
int3
into
aaa
inc
jne
mov
sbb
xchg
pop
cmpsb
imul
inc
popa
fstpt
gs
repnz
jmp
push
shl
test
add
stos
inc
sbbb
repnz
lcall
insb
cmp
cwtl
cltd
mov
jl
fsubl
or
adcb
sub
pop
sbb
adc
stos
xchg
rorb
jb
dec
and
and
jp
mov
addr16
push
add
jecxz
lea
and
dec
mov
aam
jo
mov
mov
push
aam
andb
lods
mov
scas
mov
lods
or
mov
xchg
test
je
fs
mov
cmp
mov
pop
cmpsl
adc
call
sub
in
lods
mov
inc
enter
jmp
out
pop
pop
imul
sbb
outsl
ja
bnd
and
call
sub
aam
fsub
mov
pop
fcoml
jbe
mov
scas
mov
push
xchg
pusha
jae
cli
pop
pop
mov
icebp
cltd
sti
dec
cmpsl
hlt
call
sti
mov
out
insl
ja
jo
inc
xchg
mov
pop
mov
sbb
std
jmp
adc
stos
pop
rcrb
xchg
pop
xor
popf
or
pminsw
inc
xor
test
cli
or
into
mov
ret
std
xchg
shlb
bound
push
xchg
jae
mov
daa
or
mov
dec
xlat
ja
xor
or
pusha
pop
push
mov
and
loop
test
mov
mov
push
das
jmp
mov
inc
xor
pushl
xlat
adc
psubq
push
aas
das
pop
lds
sahf
not
xchg
sub
mov
nop
lcall
and
sbb
push
mov
add
push
stos
test
push
testb
jne
fstps
test
pop
insl
das
lods
imul
dec
fcmovnu
jmp
mov
mov
dec
mov
insb
mov
sub
mov
mov
and
add
xchg
in
insl
mov
sbb
inc
orl
inc
adc
adc
orl
and
mov
inc
adc
push
test
nop
mov
inc
push
loope
pop
jge
mov
imul
mov
pop
in
and
lods
popa
pop
es
fmuls
inc
sub
pop
sub
mov
dec
dec
xor
inc
xchg
add
clc
fs
xchg
dec
sbbl
pop
rcl
dec
mov
cmp
jb
fwait
add
mov
add
and
sti
add
jns
sbbb
pop
fdivr
mov
shll
jb
pop
repnz
xchg
mov
jl
ds
or
movsl
sub
adc
inc
lods
fildl
or
sub
xchg
js
adc
jno
outsl
test
jae
mov
lcall
inc
ja
scas
std
out
mov
nop
adc
sub
jbe
jne
jle
jl
cmp
sbb
sub
aaa
push
das
mov
add
fisttps
sbb
mov
xchg
repnz
jo
ja
jns
push
inc
sbb
or
xchg
inc
mov
movsb
jle
fcmovb
insl
ds
jecxz
adc
dec
xor
jmp
pextrw
pop
and
or
insb
loopne
mov
jmp
sbb
cli
int
pop
jge
repnz
inc
inc
push
dec
lods
push
dec
inc
lret
mov
lret
jmp
aam
xor
xchg
sub
cmpsl
outsb
ret
or
jb
lret
mov
movsl
mov
mov
rcrl
sub
sarb
sar
mov
sbb
mov
jge
popa
mov
sbb
adc
jno
cmp
shll
pop
push
jmp
sbb
xchg
sub
and
pop
popf
xor
lret
push
jo
test
movsb
sbb
pop
lods
mov
test
jle
insl
sbb
push
adc
mov
in
xchg
xchg
bound
dec
mov
lahf
iret
jno
in
mov
fildll
xchg
lock
sub
rclb
sub
mov
test
dec
or
lods
xacquire
loope
sbb
sub
std
fcom
mov
loop
pop
loop
mov
fsin
repnz
loopne
inc
mov
outsl
mov
lds
dec
es
xor
les
stos
rolb
shlb
xlat
mov
out
add
jb
data16
inc
adc
push
xchg
mov
sbb
test
fisttps
xor
lea
movsl
xor
popf
xor
in
and
sub
jns
insb
je
push
adc
add
dec
fbstp
mov
xchg
cmc
mov
push
fistpl
jmp
shll
mov
and
cld
cmpsb
cmp
jg
pushf
mov
inc
xor
leave
enter
push
sbb
sbb
sbb
xor
xchg
mov
or
cwtl
pop
inc
lret
jecxz
mov
sahf
cmp
out
mov
or
cmc
lea
add
call
dec
cltd
orb
pop
js
ret
or
xor
ss
cmp
mov
aas
jae
cltd
lar
nop
aaa
cld
or
xchg
mov
jl
ret
jno
sahf
mov
sub
ja
andb
out
mov
nop
ror
pop
fs
jno
push
mov
loopne
iret
fildl
outsb
mov
arpl
xchg
cmp
repnz
dec
sbb
in
inc
arpl
fisubrl
pop
fidivrs
sarb
cmp
inc
in
push
aas
sub
lret
fstpt
daa
lods
movsl
mov
aaa
test
enter
mov
xchg
xor
sbb
divb
xchg
mov
nop
repnz
mov
adc
mov
sti
pop
dec
sbb
lcall
imul
push
mov
fneni(8087
fcmovnb
dec
dec
pop
ja
or
ret
and
lds
push
xchg
stos
movsb
movsl
jp
sub
int
cmp
ja
xor
fadd
data16
inc
ds
lea
ja
cmp
andb
fldt
call
sbb
jne
pop
movsl
cmp
imul
lcall
sbb
add
daa
sub
testb
xchg
push
jecxz
or
stc
xor
aam
sub
loop
sub
pop
daa
cmp
lcall
fisttpl
push
aas
bound
loope
in
sub
ja
loope
popf
jns
sbbl
addb
mov
in
adc
push
sub
scas
add
loope
and
jns
adc
fwait
mov
or
inc
add
in
mov
pop
jnp
xor
mov
dec
sahf
sub
fcoml
scas
aas
outsl
jl
inc
ss
and
jne
jns
pop
xchg
sub
popf
xor
jl
xchg
fdivp
scas
jmp
push
in
mov
ret
xchg
cmp
test
dec
stos
daa
jae
popf
or
inc
call
pop
push
adc
mov
ucomiss
adc
add
loope
jae
mov
clc
sbb
mov
movsb
cmp
push
fidivrs
mov
sub
inc
mov
jnp
cmp
or
inc
stc
insl
pop
mov
inc
rorl
pop
leave
cmp
mov
cmc
jg
lret
and
addl
cmp
push
inc
mov
inc
in
push
jge
pop
cmp
jb
jp
mov
shll
movsb
xor
adc
xchg
cmp
jle
shll
mov
repz
push
data16
lcall
xchg
fs
mov
mov
test
xor
and
fisttps
jb
insb
xor
push
jl
test
ret
lock
mov
out
aam
cmc
inc
clc
dec
pop
mov
pop
out
dec
shrl
jae
mov
sbb
test
push
test
inc
iret
int
add
stos
sub
pusha
lahf
sbb
out
jecxz
stc
scas
adc
out
scas
fiaddl
pop
aad
jnp
les
add
inc
jb
cmc
lret
mov
dec
mov
sbb
xor
jl
addl
dec
scas
xchg
scas
add
push
rolb
jg
mov
fldcw
sub
lods
xchg
jp
push
jl
mov
leave
fdivrl
or
enter
outsb
hlt
xor
xor
push
pop
add
fcomps
and
rclb
pop
js
lcall
sbb
jmp
mov
add
hlt
aad
lret
jbe
lds
jbe
leave
test
mov
jp
inc
imul
pop
inc
lahf
fcmove
and
inc
inc
pop
mov
push
movl
ljmp
inc
mov
dec
in
xchg
or
add
fnsave
and
xor
mov
add
dec
or
in
inc
lcall
dec
pop
loopne
sbb
xor
cmp
dec
repnz
cli
xchg
and
jno
add
pop
push
push
cs
pop
into
imul
pop
or
pop
lock
adc
clc
lea
pmulhw
jbe
dec
jmp
jp
xlat
ja
aam
xor
aaa
lds
lods
sub
stc
sbb
shll
adc
pop
daa
jo
jb
jae
into
hlt
push
jbe
mov
jns
stos
mov
or
std
mov
imul
nop
xor
fs
and
loope
aad
sub
push
jnp
hlt
and
divb
scas
aas
mov
mov
jl
shll
mov
mov
lea
xor
add
mov
add
mov
fcmovbe
ja
add
pop
inc
lods
aaa
loopne
push
jmp
mov
jl
jle
adc
add
lret
adc
cld
pusha
daa
cmp
and
repz
pop
dec
sbb
jo
pusha
imul
xlat
mov
fimull
lock
aaa
push
aad
or
lcall
sub
into
jle
popa
scas
imul
pop
fildll
lahf
cs
inc
cmp
or
xchg
pop
mov
insl
outsl
int3
mov
mov
ds
in
jns
jnp
rclb
test
dec
leave
cmp
xchg
nop
aad
fisubl
or
mov
xor
jns
imul
and
jl
aam
aaa
inc
xchg
mov
adc
stos
test
or
sbb
cmc
sub
cmc
lods
es
aas
insl
inc
xor
xor
lods
adc
push
push
xor
imul
loop
mov
push
add
imul
repz
leave
cwtl
mov
xlat
and
sarl
fstl
mov
mov
popa
and
test
cmpsl
push
sub
rcr
sahf
std
roll
jns
xlat
xchg
sub
pop
loop
fcompp
clc
push
popf
cwtl
inc
pop
or
jg
addr16
dec
js
add
aaa
shrl
or
fdivrl
mov
ret
cmpsl
ljmp
fwait
mov
mov
aas
push
cs
hlt
repnz
test
adc
xorl
pop
dec
hlt
rorl
adc
daa
dec
push
popf
ljmp
jbe
adc
pop
jle
push
jmp
inc
lret
movsl
jnp
faddl
pmovmskb
movsb
adc
add
aam
mov
ret
data16
es
hlt
fbld
push
xchg
sbb
insb
fwait
xor
fistpl
icebp
fwait
mov
popf
ljmp
jl
mov
mov
cmp
in
lahf
push
jp
or
pop
or
add
mov
pop
pop
sahf
cmp
xchg
pop
mov
xor
mov
inc
mov
mov
push
scas
add
js
lods
sub
xor
add
rcll
push
shll
aaa
pop
dec
dec
add
ss
arpl
inc
pushf
xchg
push
hlt
add
mov
pushf
popa
xor
or
scas
mov
push
imul
addr16
fistl
mov
mov
mov
or
mov
insb
test
pop
dec
cmp
insb
jmp
xor
mov
push
sahf
stos
mov
movsb
mov
fnsave
fwait
sbb
mov
xchg
ss
sti
inc
mov
scas
les
rclb
mov
mov
outsb
aaa
mov
aaa
inc
jno
arpl
std
dec
dec
and
lret
pop
push
sub
cmp
adc
lcall
cli
xchg
mov
je
daa
test
iret
xlat
sbb
cmc
aam
push
adc
out
pop
mov
fs
cmp
out
scas
aas
sahf
dec
cmc
add
jnp
fcoml
dec
and
addl
push
pop
xchg
aas
movsl
pop
fstpl
jmp
lcall
movsb
outsb
adc
or
dec
cmp
fdivrs
shll
icebp
sbb
sub
out
mov
call
pushf
movsb
adc
inc
ret
cmp
lahf
cld
in
addr16
adc
push
incb
cmpsb
out
mov
mov
jo
adc
lahf
mov
xor
sub
lea
pop
push
movsl
dec
jno
fs
dec
sub
push
mov
in
pop
cmpsb
or
fwait
addr16
mov
cmp
jne
ror
xchg
jmp
cmp
popa
aaa
adc
adc
shlb
das
fwait
hlt
mov
cli
lret
cwtl
repnz
fnstcw
enter
and
jns
ret
xor
jb
ret
and
shll
add
mov
aas
sbb
mov
call
push
and
pushf
push
adc
jl
add
mov
cmp
jo
lahf
jne
xor
cmpsl
inc
addr16
xchg
imul
adcb
aam
xor
dec
clc
mov
add
sbb
hlt
enter
sub
cmp
add
dec
xchg
mov
outsl
shlb
xchg
dec
out
sahf
dec
ja
adc
or
or
add
cmp
add
pop
xchg
dec
lcall
insl
stc
test
ja
es
icebp
das
xor
repz
cmp
aas
pusha
push
das
fwait
mov
jmp
iret
jge
jge
and
mov
jns
sub
lods
out
lds
dec
push
cwtl
xchg
popa
call
xchg
xchg
mov
fwait
pop
stos
cs
dec
xchg
js
ss
adcb
icebp
sbb
pop
add
jle
add
jo
sti
leave
fs
in
push
imul
mov
outsb
sarb
cltd
mov
lret
jae,pt
test
and
dec
lret
fdivrl
faddl
mov
jle
lods
das
push
popa
jnp
movsb
sbb
mov
jmp
out
fisttpll
cmp
push
ljmp
jp
outsb
cmp
jno
mov
adc
lahf
add
xlat
cmc
rolb
mov
cwtl
lret
mov
push
test
inc
jg
inc
adc
stos
dec
in
inc
lcall
mov
xor
cmp
lea
mov
cmp
in
fmul
xchg
lods
add
mov
fdiv
jno
pop
repnz
outsl
fistpll
cmp
xor
adc
jnp
mov
test
inc
ljmp
push
mov
push
test
scas
pop
push
test
dec
fwait
or
mov
call
dec
icebp
fwait
mov
push
jbe
mov
mulb
aad
xchg
adc
and
mov
and
push
lods
sbb
stos
xor
rorl
sub
das
mov
divb
movsb
fidivrl
movsb
cmc
stos
aaa
dec
lods
mov
lcall
mov
mov
fs
or
shrl
ss
xchg
leave
dec
sub
insw
lcall
out
add
sub
xchg
jp
inc
push
scas
pusha
jl
rolb
pop
lea
loop
pop
cwtl
xchg
xor
lods
mov
lret
xchg
test
or
mov
fdivr
cmpsl
and
and
add
aam
cvttps2pi
xor
jle
aad
test
add
and
mov
mov
out
mov
or
add
mov
xor
ja
pop
sarl
jae
shlb
hlt
cmp
adc
ds
dec
lret
cmp
not
out
mov
in
cmpsl
cmpsb
bnd
adc
jbe
jl
test
xchg
out
xor
addr16
sub
in
aas
stos
inc
add
mov
lret
ss
scas
sub
xchg
xor
push
jbe
mov
ffree
sub
popa
push
dec
insb
mov
mov
push
or
js
les
popf
jmp
stos
sbb
xchg
jmp
push
lea
xor
jno
das
popf
test
xor
add
sbb
or
and
mov
and
push
int
cmp
inc
je
jb
fmuls
int3
adc
out
rcrb
dec
stos
xor
inc
cmp
add
imul
sub
xchg
pop
pop
and
cmp
mov
cmp
add
loopne
sbb
fcoml
dec
pop
shlb
popa
jmp
pushf
hlt
dec
sahf
mov
int
inc
loopne
enter
rcll
adc
xchg
jmp
pop
adc
leave
pop
mov
lods
test
push
sbb
insl
popf
push
fs
lcall
stc
xchg
push
adc
fidivrl
mov
mov
mov
pop
sbb
dec
pop
int3
or
jb
push
dec
movsl
adc
inc
je
aam
or
outsb
int
push
sbb
es
xchg
subb
pusha
push
cli
dec
sub
aaa
mov
in
mov
in
lock
jle
ja
in
in
repz
insb
sub
fistpl
inc
add
mov
pop
icebp
mov
push
jge
and
das
fwait
lods
test
or
push
sahf
push
aaa
mov
cmp
subl
jns
loope
lods
cmp
in
sub
cltd
pop
adc
mov
lods
adc
jno,pn
or
adc
into
jo
fidivl
out
or
sub
dec
adc
ret
daa
imul
jmp
sbb
cmp
sar
and
popa
cmp
mov
push
test
test
daa
jl
dec
icebp
cmpsl
js
xchg
push
or
adc
movsb
add
lret
cmp
lahf
bound
fucomp
cmp
repz
insl
or
push
mov
data16
or
outsb
popa
xchg
cmp
jne
fdivs
pop
or
inc
jae
aam
xor
jns
inc
iret
popa
or
loop
sbb
test
pop
hlt
xorl
jecxz
mov
mov
test
mov
imul
push
xchg
mov
ss
pop
hlt
add
clc
mov
enter
sub
leave
js
and
jmp
xor
cmp
sbb
push
pop
or
pop
dec
leave
enter
scas
test
loopne
or
out
adc
paddq
push
jbe
pop
shll
xchg
dec
xchg
xlat
jge
xor
jge
loopne
jg
add
das
lcall
shll
in
push
inc
cli
jmp
out
mov
push
and
push
sub
and
adc
into
xchg
jae
pushf
je
inc
pop
fstpl
movsb
inc
jne
clc
sahf
mov
mov
cmpsb
repnz
xlat
mulb
stos
in
in
jno
adc
imul
jmp
lcall
dec
ret
mov
jl
andl
pop
mov
rolb
inc
pop
mull
cmp
mov
push
fsubrl
fidivs
pop
fdiv
or
xor
jge
negb
in
fucomp
popf
es
addr16
mov
push
mov
insl
jle
cmp
imul
jp
in
push
add
dec
and
jnp
enter
mov
xlat
in
add
and
jne
cwtl
fstps
addr16
ret
or
test
xor
and
push
arpl
push
push
mov
xor
fildl
inc
add
adc
icebp
lods
scas
mov
fildll
out
fistpll
loop
ret
pop
aam
jmp
sub
xlat
fidivl
and
scas
pushf
add
stos
pop
movsl
aaa
push
fwait
cmp
fwait
pop
push
faddl
xchg
or
stos
pop
pop
and
ror
sahf
clc
push
cmp
and
inc
and
cli
pop
xor
jo
add
daa
and
mov
jle
popf
dec
ss
push
jl
or
addb
push
mov
jae
lret
fwait
stos
cwtl
in
cmp
sub
jl
pop
jae
outsb
jmp
jb
movsl
sbb
data16
xchg
cmpsb
dec
pop
inc
jns
inc
sub
mov
in
iret
push
out
jno
inc
xchg
push
decb
nop
adc
mov
insb
sub
adc
cmpsl
push
dec
das
add
sub
inc
add
xor
mov
or
imul
ret
mov
mov
sub
xchg
push
jb
inc
and
xchg
ds
pop
aam
xchg
outsb
jb
mov
imul
cmpsb
and
lods
insl
sbb
std
or
ffree
xor
jle
lcall
cmp
stos
cmp
scas
pop
or
les
fistl
pop
xor
push
dec
fisubrs
sbb
outsl
add
add
cmp
arpl
mov
xchg
adc
adc
sbb
or
cmpsl
inc
add
addr16
push
sbb
adc
xor
mov
test
or
fldcw
jmp
in
push
mov
ficompl
movsb
mov
call
xchg
adc
scas
xchg
lahf
out
adc
insl
rorl
add
sbb
notl
jle
pushf
scas
lret
dec
lret
scas
andl
xchg
pop
adc
test
add
lcall
mov
sub
push
ja
adc
jmp
xor
movsb
xchg
lock
dec
pop
pop
imul
leave
sbb
mov
fbstp
cmp
popa
jle
jno
call
fisttpll
jae
mov
ss
xchg
mov
in
call
push
dec
repz
stc
pop
or
inc
pop
mov
xchg
clc
lock
dec
int3
ja
xchg
loopne
ror
jge
je
leave
sub
ret
xchg
js
xor
sub
or
lock
inc
orl
int3
cltd
lods
mov
je
sbbb
and
in
scas
fmul
insl
mov
mov
mov
sbb
inc
jno
push
lcall
mov
mov
dec
mov
and
mov
jnp
mov
mov
movsb
in
int3
mov
xor
lock
pop
cmp
loop
faddp
inc
dec
xlat
int
fcoms
jnp
cld
add
insl
push
dec
stos
mov
ja
pushf
scas
pop
arpl
ja
push
outsl
mov
fsubr
in
xor
mov
inc
jg
das
xchg
js
rcrl
int3
or
push
sub
lret
jo
bndstx
pop
in
in
mov
lods
mov
insb
mov
js
and
movsl
jno
pushf
pop
addr16
repnz
mov
add
clc
test
rolb
hlt
addr16
pop
scas
lret
sub
mov
or
cli
push
ret
ljmp
xor
mov
or
imul
out
jnp
iret
dec
loopne
inc
adc
jl
dec
push
cmpsb
mov
arpl
and
jb
stos
aam
dec
and
es
sbb
frndint
xlat
jl
fisubrl
int3
dec
fwait
dec
cmp
out
test
cmp
pop
dec
cmpsb
test
cs
add
cmc
pop
ficomps
xchg
mov
sub
cwtl
scas
mov
pop
cli
xlat
mov
mov
xorb
push
arpl
rcr
into
pusha
sub
mov
sbb
jg
xor
and
ror
data16
das
mov
inc
sahf
out
outsb
test
inc
sub
fxch
jno
insl
cmp
loope
jge
imul
lock
sarb
mov
xchg
jae
sbb
lea
outsl
ljmp
dec
or
subl
pop
mov
mov
xchg
lock
add
pmaxsw
adcl
sub
test
jns
sti
lock
dec
lahf
push
call
mov
and
add
lods
aad
jno
cmpsl
daa
es
cmp
roll
jge
scas
data16
lcall
sub
and
jmp
pop
mov
dec
repnz
lret
sbbl
andb
pop
test
inc
gs
adc
jnp
sbb
and
stos
inc
mov
ja
out
and
pop
add
cmp
inc
add
divl
pushf
jne
inc
dec
ficoms
lcall
gs
ljmp
je
in
fnsave
lods
sub
popf
cmp
mov
sbb
jbe
mov
push
es
push
dec
sub
push
inc
mov
dec
cmc
enter
icebp
out
push
pop
sbb
push
sub
pop
add
movsl
lock
rcl
xor
and
pop
out
xchg
adc
mov
hlt
lret
ljmp
dec
sti
mov
push
out
pop
mov
loopne
adc
rcl
in
mov
js,pt
push
mov
jecxz
xchg
iret
stos
or
jge
xor
leave
fadds
int3
push
push
mov
call
out
cli
aas
adc
stos
push
lods
xchg
cld
mov
mov
add
add
mov
sub
mov
sub
adc
adc
pop
outsb
jb
sahf
or
push
pop
shrb
addb
fildl
pop
test
mov
js
push
adc
xor
mov
nop
pop
and
arpl
setp
push
in
pop
jo
insb
lds
vmovapd
aam
aad
pop
je
lcall
aas
imul
cmp
in
stc
and
mov
push
les
mov
rcl
xor
push
add
out
mov
xchg
sbb
lret
rorb
movsb
negb
out
push
roll
gs
sub
enter
mov
adc
pop
mov
sbb
mov
cmpsb
out
pop
repz
mov
xor
aam
dec
sti
lds
insl
inc
add
sbbb
add
mov
jmp
mov
icebp
push
pop
pop
popf
mov
cld
mov
cwtl
loope,pt
pop
jno
add
sti
xor
or
pop
adc
cmp
cmpsb
mov
dec
xor
xor
mov
lret
popa
repnz
jae
jno
test
sahf
cld
inc
jns
cmp
lret
pop
inc
insb
cmp
frstor
loopne
push
outsl
sub
push
fstl
or
shlb
sbb
mov
fs
add
leave
mov
clc
ljmp
add
push
mov
stc
adc
push
or
lahf
mov
roll
dec
cmp
insl
aad
sub
and
pusha
jge
pushf
sbb
es
push
xchg
pop
xlat
out
rcr
movsl
pop
mov
mov
fildll
scas
cmp
mov
jb
and
pop
inc
xor
jae
and
lods
sahf
cmp
push
mov
adcb
cmpsl
fcoms
pop
out
inc
mov
lcall
push
pop
stc
mov
mov
xchg
ja
sarl
adc
or
mov
dec
arpl
or
sti
pop
mov
sbb
in
nop
int
jmp
shll
mov
jmp
les
push
fsubl
inc
lds
pop
push
out
xchg
popa
sub
jmp
xor
lods
xor
insb
push
loop
inc
hlt
das
test
test
mov
inc
insb
int
jnp
loopne
lock
scas
adc
into
pop
jno
stos
pusha
aad
aam
add
cmpsb
movsl
cmc
movsl
jmp
addb
and
adc
or
addr16
test
sbb
mov
test
mov
movsb
int3
ja
testl
clc
add
jmp
jns
xchg
and
test
xor
add
aad
mov
dec
nop
mov
pushf
sbb
xchg
inc
aad
add
dec
faddl
jb
cltd
fwait
cmp
lds
in
xchg
sarb
jmp
mov
ret
imul
ret
cmp
mov
scas
pop
mov
cmp
inc
insl
and
push
lea
mov
shl
aas
push
add
out
add
or
sbb
sub
lods
fidivrl
sbb
jp
add
aam
xchg
and
cmpsb
lret
shr
shll
scas
push
cs
test
movl
insl
mov
lods
cmp
test
or
xchg
cs
mov
test
iret
incl
push
sub
inc
fsubrs
insl
dec
inc
pop
inc
aas
xchg
fldl
jmp
pop
ljmp
outsb
inc
push
or
scas
and
sbb
gs
fsubp
cmp
testb
adc
mov
sub
xchg
sti
xor
int3
sar
movsl
ret
pcmpgtb
orb
xor
pop
loop
lret
jb
and
cmp
mov
adc
push
cmp
imul
cmp
dec
mov
add
dec
icebp
jg
jp
and
xchg
lret
test
movsl
xchg
pop
add
xor
or
push
jae
dec
cmp
pushf
mov
movsl
cmc
cmpsb
imul
outsl
jp
in
andb
mov
cmp
aaa
pop
dec
out
in
mov
xchg
fcoml
aam
shll
jne
adc
push
jecxz
scas
or
mov
out
hlt
sbb
fcomp
sbb
lahf
xchg
push
fwait
cmp
fsubr
arpl
add
pop
and
push
cmp
sbbb
neg
dec
shrb
jbe
sbb
rcrb
les
and
rcll
mov
lret
ret
in
inc
mov
adc
xchg
mov
push
cmpsb
in
nop
jae
and
sub
pop
xor
fnstenv
cltd
add
das
add
sub
push
or
hlt
sub
dec
and
roll
pop
out
and
cltd
mov
jae
clc
hlt
imul
out
lods
fs
fs
lahf
jmp
push
mov
dec
sbb
mov
cltd
mov
lcall
int3
and
xlat
lret
mov
cmpsb
pop
xchg
push
lds
sbb
mov
loopne
adc
xchg
mov
sbb
jmp
stc
xlat
push
adc
mov
dec
mov
out
mov
lock
ss
inc
lock
fmuls
gs
dec
jbe
and
les
imull
xchg
mov
sarb
les
sub
shld
cltd
jmp
add
pop
sbb
adc
add
cld
pop
adc
lods
icebp
imulb
fcoml
and
ficompl
adc
out
or
shl
jg
sbb
js
dec
adc
out
xchg
dec
dec
popa
push
shrl
mov
jbe
push
sbb
cmpsl
jnp
fdivrs
int
jle
dec
js
sbb
dec
dec
or
mov
inc
lret
das
jb
mov
stos
pop
or
mov
and
push
push
mov
sub
inc
push
xor
mov
sbb
cmp
sub
xor
mov
pop
es
mov
xchg
dec
lock
loope
or
rcrb
movb
dec
jns
or
aad
cmc
xchg
stos
or
mov
adc
aas
in
inc
ljmp
jg
mov
inc
loopne
ret
imul
lea
cmc
shr
add
xor
test
shrb
mov
test
mov
out
push
mov
js
cmp
push
push
xchg
lock
aas
out
inc
call
dec
add
pop
inc
iret
lods
inc
pop
jno
movsb
dec
mov
rorl
xor
push
jge
nop
in
out
push
fs
fstpl
shlb
aad
xor
lea
push
adc
and
lahf
mov
andb
lock
mov
ror
ja
mov
sbb
cmp
sub
icebp
mov
cmpsl
rolb
fisttpl
aas
xchg
neg
sub
fdivr
ficomps
sbbl
lds
dec
fcompl
sub
cmpsb
jb
out
push
lcall
stos
add
rol
jne
or
dec
scas
xchg
fidivl
sub
dec
bound
xchg
xor
lret
filds
pop
testl
mov
sub
jl
or
loop
adc
jp
xchg
jle
sub
int
loopne
leave
mov
popa
fisubs
scas
shl
jns
fsubl
xchg
xchg
repnz
pop
insb
jl
nop
aaa
xchg
mov
mov
lds
cli
cmp
mov
xchg
inc
rorl
outsl
mov
jnp
lret
popa
push
sbb
jbe
iret
xor
xor
and
dec
push
mov
mov
sbb
mov
xchg
cmp
cmc
arpl
dec
into
cmp
mov
repz
dec
xchg
pop
or
repz
dec
movsl
xor
cld
sub
push
mov
mov
mov
out
jge
fildll
gs
sbbl
popa
loopne
pushf
ljmp
aaa
xor
fmull
jle
out
mov
das
xchg
mov
push
inc
stc
adc
call
or
mov
xchg
jp
fistl
add
movsb
push
into
jne
in
xchg
and
dec
jo
in
pop
xchg
xor
loop
popf
mov
adc
push
add
aad
sub
popf
fistpl
push
sbb
and
mov
mov
sub
cwtl
js
push
ja,pt
adc
mov
arpl
pop
jbe
cmpb
leave
ljmp
popa
jle
in
xchg
inc
add
push
jno
movsb
cmp
arpl
rcrl
xor
addr16
dec
push
loop
jno
mov
enter
jmp
lods
ror
cmpsl
jns
rclb
sub
sub
imul
inc
sub
int
sbb
dec
movsl
push
push
sahf
inc
and
stos
jae
out
dec
test
aas
push
mov
shr
add
push
arpl
loop
adc
lds
or
fistpll
call
out
flds
inc
add
sub
hlt
xor
sti
and
clc
push
cmp
push
mov
mov
mov
lock
dec
add
mov
sub
movsl
mov
dec
jle
jb
mov
cs
pop
push
xchg
ja
leave
fidivrl
out
lods
aas
movsb
push
jmp
push
jp
dec
test
jmp
xchg
lret
inc
mov
or
sbb
lods
fs
int
fisubrs
shrl
push
sub
lock
jae
pop
inc
mov
lahf
ret
cmp
stc
cli
xor
std
test
mov
loope
jp
add
cmp
push
xchg
fimuls
dec
cmc
fidivrs
lods
push
adc
test
test
imul
out
je
into
out
cmp
fcomp
sbb
and
push
pusha
pop
out
and
ja
push
out
pop
sbb
xchg
fiaddl
xchg
outsb
pusha
divb
fs
pop
popa
out
cmp
iret
mov
lods
xchg
mov
mov
push
cld
inc
and
sub
sbb
mov
shll
lea
fsubrl
lods
adc
jo
and
pop
lods
sbb
repz
popf
and
or
cld
pop
arpl
xor
stos
test
jge
xchg
cmp
cmp
cmp
cmc
jle
lret
in
mov
sbb
or
jae
dec
and
in
dec
push
jge
outsl
fs
dec
push
leave
fstps
ljmp
dec
cmpsb
lock
out
enter
push
movsb
sub
loop
pushf
in
xor
in
mov
adc
xchg
mov
fsubr
aam
dec
jb
outsl
in
cmp
test
daa
arpl
paddb
movsl
adc
test
mov
loopne
loop
enter
jb
add
pop
mov
ds
call
xlat
push
adc
imulb
stos
pop
pop
sbb
mov
arpl
cmp
inc
mov
idiv
ljmp
xchg
jg
xchg
nop
rorb
mov
sbb
ss
dec
addr16
movsb
out
cmp
pop
test
sub
in
shlb
pop
push
outsl
cmp
adc
push
mov
mov
test
xchg
ja
sahf
mov
xlat
cmc
xchg
mov
movsb
or
push
fdivl
mov
jno
inc
pushw
fwait
mov
sti
and
popf
ss
idivb
out
daa
pop
mov
mov
in
filds
enter
jge
sahf
movsb
add
cwtl
sti
fs
xchg
lds
clc
pop
push
inc
jno
adc
push
enter
pushf
cmp
add
xchg
bound
mov
mov
jnp
hlt
dec
xchg
push
ss
lea
jge
sbb
test
bound
int3
jbe
fadds
dec
orl
or
and
sbb
jne
aas
cs
jmp
pop
cmc
enter
sub
call
xor
int
in
cmp
insb
jg
adc
xchg
push
lret
pushf
enter
mov
push
or
push
test
jp
das
pop
jno
jmp
xchg
jl
decl
sbb
mov
mov
fbstp
push
int
andl
adc
cmc
xor
mov
adc
push
cli
sarb
sbb
pop
xchg
push
adc
inc
xorb
mov
popa
inc
out
cmc
xchg
sub
fldenv
loopne
sub
sub
or
or
popf
and
or
mov
sub
xchg
ss
and
xchg
xchg
push
daa
testb
sub
pop
stos
jbe
fst
cmc
or
out
lahf
or
pop
mov
dec
cmpsl
xor
into
jbe
clc
sub
ljmp
dec
loopne
inc
mov
pushf
imul
mov
mov
ljmp
pusha
outsl
mov
mov
sbb
xchg
push
popa
or
or
test
jb
aad
cwtl
les
rcrl
ret
mov
popf
sub
clc
pop
mov
stos
cmpsl
insb
lods
stos
jns
add
movl
jno
imul
les
jg
inc
xchg
push
xor
lods
push
push
in
pop
push
jns
push
sub
dec
mov
pop
fldcw
orb
jo
dec
sbb
add
out
xchg
xor
mov
push
imul
nop
push
mov
lods
bound
dec
sbb
repz
lcall
xchg
flds
cld
xor
dec
mov
into
push
jae
push
aad
call
repnz
sbb
cmpsl
lds
lahf
out
aad
inc
mov
xor
out
ljmp
add
test
xor
or
adc
mov
les
or
mov
movsb
repz
cli
mov
in
cltd
jmp
incl
ficompl
or
pop
sahf
inc
jbe
push
test
mov
fcos
shlb
insb
loopne
aas
cmpsl
imul
faddl
loop
mov
cmp
adc
int
lock
icebp
insl
or
ficoml
in
mov
pop
dec
xor
lock
dec
mov
stos
jecxz
xchg
push
imul
or
outsl
rorl
in
mov
mov
je
int3
inc
mov
dec
dec
dec
testb
je
call
int3
aam
pop
das
aaa
jp
mov
rorb
pop
dec
fdivrs
inc
es
push
ficoml
les
mov
test
test
aad
push
aad
cld
or
repnz
scas
into
enter
roll
cmpsb
cmpsb
add
xor
filds
bound
xor
inc
ret
lret
lods
int3
mov
in
stc
stc
leave
pop
dec
fbld
xor
fistl
push
jle
mov
or
jnp
and
enter
sbb
aas
xchg
in
int
std
stos
cmp
mov
xor
sbb
push
pop
add
repz
xchg
jno
jmp
cmp
sti
imull
movsb
jo
out
rcr
repz
dec
push
fidivs
jecxz
xor
lcall
add
inc
push
mov
outsl
and
sub
test
fldt
sub
movsb
push
test
xor
sbb
mov
cmpsl
fildl
jg
xchg
cmpsl
out
add
lea
jmp
xchg
scas
cli
pusha
inc
add
fistl
inc
jb
pop
sete
sbb
shrb
icebp
test
pop
dec
lds
fcomps
and
jnp
mov
add
adc
pop
lcall
jno
push
lcall
mov
adc
xchg
mov
enter
shr
sub
xchg
daa
or
mov
dec
push
pushf
push
test
mov
mov
icebp
xchg
rcr
push
sbb
scas
imul
sbb
fwait
push
jle
cltd
lods
xchg
push
cmp
xchg
xorb
and
fstl
inc
fisubrl
xchg
jp
push
in
fwait
sbb
mov
mov
inc
repnz
xchg
jb
push
adc
nop
cmp
xchg
insl
adc
jae
shlb
mov
outsb
cmp
in
sbb
push
das
add
test
andl
dec
mov
fdivrl
div
int3
add
or
shll
dec
mov
xor
cmp
push
mov
fsubl
add
mov
scas
mov
out
adc
int
test
inc
inc
adc
scas
cmpsw
mov
mov
add
rolb
movsb
xlat
mov
or
mov
push
push
mov
cmpsl
pop
test
popl
xor
aas
or
fisubl
lcall
cld
dec
loope
loope
mov
test
mov
xchg
mov
sbb
movsl
jnp
and
pop
test
leave
sub
movsl
stos
xor
repnz
scas
cmpsb
add
inc
pop
adcb
or
pop
xchg
mov
dec
jp
lahf
and
test
outsl
mov
iret
fmull
addl
fnstenv
mov
add
mov
arpl
sbb
add
daa
dec
and
lods
jmp
fldt
sbb
ss
pop
adc
aam
cmpsb
mov
or
lret
shrl
inc
test
jge
lahf
jno
test
rcrl
cmpsl
inc
stos
push
push
shlb
rclb
cmovb
mov
push
sarl
out
dec
or
iret
and
mov
push
imul
jmp
cmc
xor
sbb
mov
jl
dec
fwait
call
lea
cmp
sbbl
sbb
xchg
add
sbb
and
add
movsb
and
add
add
sbb
push
pop
dec
pop
add
mov
clc
mov
ret
cmp
mov
or
cs
mov
scas
jg
adc
jne
jge
ss
ffreep
cmpsb
test
mov
sbb
fldl
out
push
xorb
cmc
fdivrl
adc
mov
adc
inc
ret
addr16
pop
add
or
pop
int3
sti
sti
outsl
adc
sbb
loope
cmp
jbe
push
xlat
mov
stc
shlb
cmpsb
lret
loopne
jg
aaa
xor
inc
mov
xchg
xchg
adc
cmpsl
xchg
sub
mov
cmp
cwtl
out
test
cltd
jmp
jg
push
movsl
inc
popf
icebp
or
aas
jno
sbb
lahf
sbb
push
shr
js
test
test
dec
inc
push
pop
aaa
xchg
xchg
leave
xchg
stos
ficompl
and
sub
lock
loopne
pop
std
mov
movsl
and
sub
cmc
push
or
xchg
pop
pop
cwtl
dec
jno
cmp
ljmp
shlb
xor
cli
push
mov
aam
xor
push
mov
ds
sti
sub
mov
ficoml
icebp
in
repnz
mov
gs
mov
mov
shrl
mov
mov
dec
or
cmp
sarl
adc
movb
push
jg
cs
cmp
mov
sbb
mov
pop
lret
mov
fs
pushf
lret
imul
cmp
int
and
and
loopne
dec
lret
push
std
adc
or
xor
mov
lods
sbb
pop
xchg
mov
shrl
negb
test
test
adc
fisubs
pop
test
mov
mov
es
xorb
pop
arpl
xor
or
sti
jmp
or
cltd
mov
cmpsl
push
pop
mov
loop
inc
into
fdivs
mov
pop
ja
mov
push
pop
inc
dec
adc
dec
push
dec
outsl
roll
pusha
push
jmp
es
adc
clc
mov
clc
pop
gs
shlb
lds
dec
stc
mov
loope
shlb
movsb
es
lahf
mov
add
test
mov
pusha
cwtl
ret
in
das
add
rclb
mov
pop
xor
out
or
scas
push
mov
iret
sub
ret
arpl
sbb
leave
inc
cmpsl
outsl
sti
sbbl
fbld
mov
in
clc
xchg
arpl
mov
xchg
mov
popa
filds
cs
imul
aas
pop
popf
mov
and
outsb
jne
popf
enter
jae
pop
inc
mov
scas
and
xlat
pusha
xchg
and
mov
shr
mov
xor
fldl
inc
addr16
je
sbb
adc
cwtl
jmp
add
pusha
cld
inc
clc
mov
fisubrl
jge
push
mov
repz
cmpsl
stc
ss
mov
pop
mov
jle
mov
dec
insl
xor
pushf
into
dec
and
inc
xchg
push
xor
cmpsl
mov
inc
inc
cld
cmp
add
testl
cltd
dec
pop
ljmp
daa
aas
sbbb
push
fxtract
lahf
imulb
fs
mov
xchg
cld
mov
pop
faddp
sbb
lea
sahf
mov
cld
test
inc
aad
jns
and
lock
stc
test
cltd
repz
mov
repnz
inc
cmpsl
movsb
add
outsb
mov
fimuls
nop
cld
inc
xor
mov
in
dec
jnp
fwait
icebp
push
mov
jg
cmc
rolb
int
fmulp
xchg
ljmp
sub
jb
mov
and
ret
add
cmc
cmc
mov
inc
xchg
rcr
cwtl
lds
roll
mov
xlat
mov
cmpl
xor
fs
sub
mov
or
dec
push
or
icebp
arpl
dec
es
cs
mov
cld
fistpl
test
cmpxchg
hlt
inc
incl
push
mov
sub
stos
movsb
cmc
test
sub
pop
ljmp
adc
sub
jp
inc
mov
stos
stos
adc
inc
stos
loopne
test
out
test
fs
xchg
loope
mov
mov
inc
das
jle
arpl
jns
xor
and
stos
dec
insl
das
andb
lods
repz
loope
jbe
xor
dec
mov
jmp
xor
cmp
add
sbb
mov
sub
scas
jle
mov
bnd
push
popa
cmp
or
mov
in
add
frstor
lods
jb
orl
clc
in
fdivl
cmpsb
push
add
jns
and
jle
and
loopne
push
xor
nop
fcompl
push
popa
sbb
sbb
fldcw
jecxz
xor
dec
adc
movsb
push
dec
jns
lret
and
cmp
cmp
icebp
jb
jmp
mov
jl
sub
insb
lcall
fsubr
outsb
jecxz
xchg
nop
arpl
cmp
dec
sub
lcall
pop
pop
ret
mov
les
xor
lahf
ror
lock
pushf
or
or
ds
hlt
add
inc
mov
movsw
inc
lock
out
cmp
dec
xchg
clc
adc
mov
inc
sarl
jne
pushf
hlt
sub
cmp
cmpsb
push
xchg
mov
add
pop
cmp
mov
shlb
add
into
movsb
test
addr16
xchg
and
je
aam
adc
fnstenv
push
movsl
inc
mov
jg
cmp
les
jmp
scas
dec
lock
test
or
div
mov
test
pusha
mov
outsl
mov
lods
add
in
mov
mov
pop
add
ret
jnp
xchg
mov
ss
dec
pop
les
or
test
adc
pop
shr
sbb
jno
rolb
xchg
xchg
jle
lock
in
int
movl
cltd
test
and
cltd
xor
cwtl
xor
add
jp
nop
jno
aas
xchg
sub
dec
aaa
test
aas
cmc
adc
mov
mov
roll
inc
popf
movb
test
mov
lret
mov
cwtl
push
cmp
sahf
mov
fsubl
mov
pusha
mov
inc
xor
insb
roll
stos
push
enter
xchg
push
sub
shrb
or
out
mov
scas
sbb
inc
cmp
fstpt
aam
sub
pushl
adc
iret
mov
push
int3
es
xchg
pop
mov
leave
xor
hlt
repz
test
mov
jbe
insl
cmpsb
inc
jmp
hlt
adc
fldt
jne
fldcw
sti
push
icebp
iret
lcall
mov
mov
dec
sbbl
roll
dec
or
mov
pop
scas
cmovns
pop
inc
cmp
add
mov
aas
pop
mov
iret
daa
adc
imul
xchg
xchg
add
pusha
dec
es
xchg
je
dec
shlb
xor
insl
movsl
test
bound
enter
cld
cmp
xor
subb
or
aam
scas
jnp
mov
pop
mov
dec
mov
xchg
idiv
test
xchg
clc
ja
adc
test
sti
adc
jae
fisubl
mov
adc
hlt
sub
stc
add
or
and
jmp
pop
repnz
fwait
mov
jo
popf
xor
and
push
or
test
rcll
mov
mov
fs
sbbl
leave
pusha
loope
int
push
pop
mov
mov
add
movsl
mov
add
and
test
cmpsl
add
lock
mov
inc
cmpsb
jno
lods
mov
inc
push
xchg
and
inc
repnz
add
sbbl
cmpsl
sbb
stc
push
push
out
pop
fdiv
aaa
int3
mov
and
inc
fcmovne
jmp
dec
cld
add
xor
je
aam
ret
es
lods
in
mov
xlat
jg
push
pusha
iret
jp
sub
jae
pop
sar
fisubs
mov
test
lcall
cwtl
shl
pop
mov
or
das
dec
push
xor
movsb
outsb
scas
push
cmp
lods
add
cmpsb
int3
inc
repz
ja
and
sbb
and
enter
loop
jnp
insb
popf
insb
cmpsb
fists
sbbl
shlb
std
jl
out
mov
xchg
iret
xchg
scas
push
jecxz
pop
cmpb
loope
loop
sahf
or
jb
cmpsl
and
adc
test
loopne
lahf
pusha
add
cld
sub
add
sub
xor
cmp
mov
or
sbb
jns
and
fsts
sbb
and
rclb
aam
mov
je
es
aaa
and
xchg
sbb
pop
addl
jbe
enter
popa
out
sub
sub
xor
pop
sub
daa
inc
cs
xchg
or
hlt
inc
mov
sbb
adc
sti
out
cmp
insb
lds
adc
mov
loopne
psubd
fsubl
sbb
loop
fdivrs
je
mov
in
dec
fcmovne
pop
das
cmc
inc
jne
jo
add
stc
rcr
es
inc
add
dec
mov
cs
daa
inc
divl
and
dec
sbb
leave
mov
and
mov
movsl
pop
loopne
sub
push
and
xchg
into
fimuls
loop
add
dec
jecxz
and
pusha
pushf
adc
testb
rorl
dec
popa
jl
out
jns
cltd
sti
sbb
xor
xchg
and
mov
adc
sub
sub
ja
je
push
and
add
gs
xchg
movsl
mov
add
sub
and
mov
loop
cs
mov
imul
ret
and
add
sub
into
xlat
xor
sbb
int3
int3
das
stos
lahf
adc
ret
pop
or
xor
leavew
mov
subl
jp
push
sbb
push
add
add
lcall
cmpsl
test
inc
adc
pusha
mov
aas
mov
sbb
les
iret
sub
xchg
or
xchg
sub
das
int
sbb
fbstp
push
pop
dec
in
adc
lahf
insl
pop
dec
aaa
inc
add
loope
inc
inc
in
xor
popf
outsb
fdiv
std
outsb
imull
mov
add
ss
rorl
movsb
lea
jb
addr16
out
mov
popa
hlt
mov
sub
jg
in
push
aam
bnd
dec
push
sbb
jno
jae
jae
std
or
mov
dec
cmp
lods
jae
mov
cmp
dec
out
xchg
mov
lock
mov
jnp
mov
popa
or
sbb
mov
sub
jle
or
mov
fwait
sbb
mov
mov
push
and
mov
sbb
cmpsb
lock
es
xchg
pop
mov
enter
std
shll
inc
sahf
std
leave
addr16
or
pop
gs
mov
cld
lds
stc
add
add
pop
add
push
mov
popf
test
movsb
adc
out
sbb
xchg
rolb
std
xchg
scas
jns
ficoms
xchg
lods
dec
in
fs
mov
mov
jle
fsubrl
fcompp
nop
daa
je
jo
mov
imul
outsb
sbb
inc
sub
add
and
call
cmp
push
mov
sub
rclb
bound
mov
add
andl
or
push
sbb
aad
iret
sbb
ja
mov
cld
push
and
mov
xchg
mov
adc
fcompl
mov
in
cmp
ret
scas
xchg
mov
movsb
in
cmc
pop
fsub
adc
insl
lods
mov
xor
xchg
loope
daa
or
pop
aad
jbe
and
fadds
pop
int
mov
scas
gs
addr16
out
imul
in
insl
cmp
push
out
pop
addr16
iret
inc
fsubl
jmp
push
jmp
aaa
push
es
stc
lcall
dec
jge
jl
scas
imul
fs
testl
cmp
divb
jns
leave
data16
sub
dec
sub
cmp
add
movsl
shrl
mov
repz
incl
mov
out
jmp
lods
cmp
cmp
push
testl
insl
lcall
jp
xchg
adc
mov
sub
outsl
mov
ljmp
cltd
inc
aad
je
or
xor
lcall
adc
mov
out
xor
enter
popf
jb
dec
aaa
jl
lret
insl
stc
adc
lods
test
jnp
sbbb
test
in
mov
fnop
sub
mov
lret
negb
outsb
out
push
push
xchg
movsb
cmpsl
mov
mov
cmp
mov
jp
aaa
adc
fwait
mov
jnp
jp
rolb
or
sbb
mov
sbb
xchg
dec
pop
sbb
sub
xor
xor
sub
stc
jmp
inc
pop
fwait
xor
movl
fists
pushf
xchg
jno
adcl
mov
out
in
orl
outsb
lahf
xor
inc
out
pop
add
sar
mov
sbb
jno
flds
out
mov
bound
cmp
jns
mov
jmp
mov
add
inc
sbb
inc
fs
mov
jno
dec
push
or
push
cmpsl
lret
lock
imul
xchg
xor
or
mov
cltd
mov
mov
sub
ret
adc
aam
cmpb
flds
sbb
test
mov
xchg
testb
enter
lcall
jbe
push
pop
fildl
insb
popa
xchg
xor
ret
insl
mov
dec
lods
lahf
lret
lcall
pop
dec
loope
repz
ffree
and
adc
add
imul
adc
fmul
ret
sbb
inc
inc
imul
popa
cli
xor
loop
sub
adc
dec
rcrb
adc
or
loope
imul
add
xor
pop
cmp
sti
adc
fstpt
aad
aad
push
adc
outsl
repz
fcompl
fcompl
mov
leave
dec
add
sti
pop
xchg
icebp
lcall
inc
inc
ja
scas
push
movsl
ja
divb
fsubrl
jg
cmp
imul
shll
sub
sahf
jns
movsb
push
xor
vmaxps
or
pop
jp
mov
adc
mov
cwtl
pop
sub
repnz
lret
int3
sub
aaa
adc
mov
lock
enter
dec
cmp
in
call
inc
fdivrs
mov
jae
dec
in
cld
lds
mov
adc
fwait
add
xchg
fwait
mov
jo
mov
loopne
inc
pop
ret
cs
ja
lret
in
xchg
insb
icebp
mov
and
or
clc
inc
hlt
loopne
lret
pop
cs
es
add
pop
fistl
aas
add
jl
fidivrl
rorb
pop
cmp
mov
mov
add
clc
xchg
nop
push
push
aas
adc
fidivs
cld
adc
lret
add
cmp
sbb
pop
out
icebp
gs
jl
sbb
or
dec
xlat
add
arpl
idivl
aad
xor
sbb
lret
xchg
jg
std
inc
lcall
push
das
subb
mov
adc
push
mov
cld
xchg
imul
movsl
pop
dec
add
sbb
cwtl
or
mov
iret
lods
and
fadd
mov
pop
lods
nop
lret
or
jmp
je
adc
aad
cli
inc
imul
or
sub
pop
pop
mov
push
cvtps2pi
adc
sub
inc
mov
pop
inc
aaa
jl
push
dec
stc
xor
imul
mov
inc
cmp
jp
dec
mov
sbb
jne
test
aam
sbb
ja
pop
out
lods
shlb
cld
sub
int
jae
hlt
sbb
fstp
cli
mov
loope
mov
mov
mov
xor
mov
jne
pop
jle
inc
insb
je
imul
mov
inc
bound
jle,pn
sti
iret
movsb
sbb
popa
cmp
ljmp
mov
xor
out
daa
jecxz
dec
fwait
pop
lret
jne
stos
stos
sarb
push
sti
jp
lds
test
xchg
mov
jo
xor
sub
push
into
in
insl
sbb
shl
icebp
dec
mov
imul
movb
ds
mov
imul
lods
lods
jl
out
sbb
jp
pop
dec
inc
mov
add
cwtl
sbb
in
dec
push
bound
xchg
push
into
cli
dec
ja
cmp
xchg
add
inc
xchg
sbb
fnstsw
outsl
insb
out
jp
xlat
mov
pop
or
test
mov
push
sti
inc
mov
push
pushf
sbb
push
stc
pop
push
and
cmp
xchg
lods
int
dec
movsl
pop
arpl
jp
pop
fldt
inc
mov
cld
pop
out
push
in
subl
scas
shr
stc
sub
ds
xor
test
lods
cwtl
cmp
pushf
int
push
hlt
test
push
rclb
lds
mov
xorl
inc
mov
pop
mov
mov
dec
jo
and
in
in
hlt
aam
inc
aas
cmpsb
mov
fmul
in
loop
aam
push
sbb
cmpsb
mov
aaa
pusha
xchg
imul
adc
or
mov
mov
out
jg
push
mov
loope
test
lods
ljmp
call
push
or
cmp
popf
out
jae
out
push
imul
xor
je
sahf
je
inc
jp
mov
popf
jo
dec
dec
jp
lds
negl
add
dec
int
pop
aas
int
inc
sub
in
xchg
mov
push
mov
repz
jbe
push
mov
mov
test
dec
mov
mov
arpl
mov
arpl
dec
andl
ret
cmp
outsl
fadds
xchg
rcr
mov
repnz
fcmovb
mov
ret
add
incl
mov
mov
pop
xor
fadds
hlt
mov
push
add
and
mov
js
push
mov
cmpsb
xor
adc
outsl
pop
out
pushf
and
punpckhbw
fsubrl
pop
aad
mov
les
in
cwtl
js
jno
sbb
dec
jae
loope
pop
fs
xor
inc
insb
or
outsb
mov
jp
imul
xchg
xor
mov
cwtl
loope
hlt
in
sbb
scas
jp
test
mov
leave
jecxz
call
ja
jge
lods
add
icebp
movsb
aaa
and
jecxz
mov
enter
adc
fwait
lahf
aad
and
insl
in
mov
les
push
in
aam
subl
lods
cmp
fisubl
push
and
inc
mov
mov
sub
bswap
push
in
adc
sbbb
and
ja
push
push
out
fsub
lahf
loope
sub
rorl
dec
in
in
xchg
add
mov
out
je
addr16
ret
mov
in
adc
sub
sub
jge
cwtl
das
fnsave
sub
cmpsb
les
je
pop
push
mov
rolb
dec
jns
pop
inc
mov
aas
adc
lods
insl
clc
loope
cs
jo
cmpsb
fidivl
repz
ret
je
test
mov
or
or
cmp
jns
leave
mov
es
inc
xchg
jno
add
xor
xchg
jne
add
push
add
ds
inc
xchg
xchg
outsl
fistps
out
outsl
std
add
ljmp
and
aas
push
mov
pop
ja
cli
popa
bound
mov
in
xor
xchg
jbe
mov
sub
rcr
addr16
loope
out
jl
pop
popf
lods
xchg
fimuls
pop
int3
pop
push
lfs
loope
pushf
sbb
je
lea
sub
repnz
es
je
mov
sbb
jb
push
js
inc
mov
cltd
js
cmp
subb
ss
mov
and
lock
mov
add
add
mov
outsb
and
fildll
xor
mov
fistpl
and
fcomi
aad
push
dec
in
shrw
mov
fstpt
adc
mov
out
dec
cmp
fstpt
in
jle
sbb
cltd
jl
mov
aaa
mov
jbe
jne
out
jecxz
xchg
call
mov
xchg
or
add
adc
aaa
xchg
out
mov
and
mov
pop
pusha
ret
cmpsb
pusha
and
movsb
mov
adc
cmpsl
mov
xlat
inc
movsb
jecxz
aad
xor
outsl
pop
push
mov
or
aam
jl
push
in
orl
into
mov
scas
jmp
mov
xchg
int3
mov
lea
cwtl
dec
push
sahf
inc
mov
xchg
mov
cmp
cmpsl
sbb
jmp
and
cmpsb
shll
mov
cmp
jl
mov
cltd
xchg
inc
in
enter
arpl
inc
mov
out
dec
xor
dec
fildll
or
shrb
movsb
lcall
dec
inc
xchg
je
jns
xor
cmp
fsin
lcall
shll
mov
dec
cwtl
in
sar
aad
or
movsb
leave
add
cmp
and
nop
pop
hlt
cmp
nop
cmp
adcb
inc
sub
inc
loopne
pop
fnstenv
mov
jge
jne
sbb
or
mov
mov
mov
sub
mov
cmp
lock
sbb
mov
mov
mov
sti
ljmp
into
xchg
or
in
outsb
xor
lock
mov
mov
push
js
fstps
divl
dec
repz
pop
mov
sub
mov
push
jl
pop
test
or
cwtl
adc
les
rcr
mov
fdivrl
not
mov
xlat
arpl
mov
lret
push
add
pop
es
mov
jb
sarl
xchg
sbb
adc
lahf
hlt
movsb
popa
pusha
lds
pop
lods
jmp
cltd
sti
jp
jmp
push
adc
cmp
and
mov
outsb
incl
mov
sbb
stos
stos
cmpsl
fidivl
roll
orl
mov
ja
mov
dec
pop
push
mov
lock
mov
add
fstl
int3
movsb
das
inc
insb
jns
aaa
fidivl
fmul
dec
pop
jle
mov
frstor
xchg
mov
mov
sub
cs
ja
rcrb
stos
mov
dec
std
lods
xlat
div
not
leave
test
movb
xchg
adc
repz
aam
push
cmp
stc
hlt
push
pop
sti
fnstcw
mull
sbb
push
inc
jl
int
sub
jle
mov
loope
jae
jg
popa
or
xchg
jl
stos
fimull
in
mov
or
idivl
jp
push
jno
cmc
xchg
enter
shl
xor
cld
xorl
and
and
add
and
jnp
push
fsubl
addr16
xor
addl
cs
xchg
insb
ret
loope
out
sub
pop
pop
lock
dec
sub
mov
mov
cwtl
push
out
mov
in
ljmp
fxch
push
push
xor
call
jb
in
add
sahf
mov
push
or
cmp
loopne
jno
adc
xchg
mov
test
leave
fisubrl
mov
je
cmp
adc
pusha
adc
pusha
shlb
jbe
xor
push
mov
and
mov
or
dec
inc
inc
jmp
fld
pusha
or
cmp
fwait
xor
cld
sbb
mov
or
in
stc
fwait
das
iret
add
mov
pop
dec
js
aad
rolb
enter
scas
lds
es
mov
dec
rolb
lret
ret
push
nop
push
shll
adc
aad
daa
test
adc
orl
xlat
adc
push
addr16
cld
push
mov
inc
pop
ss
sti
in
or
mov
mov
and
mov
sub
adc
scas
fisubrs
test
mov
outsl
icebp
add
sub
add
in
lcall
adc
xchg
fistps
lds
cmp
push
add
dec
inc
push
jbe
mov
jo
add
inc
sahf
gs
mov
pop
fcomip
pop
sub
push
mov
mov
nop
cltd
outsl
sub
aas
fwait
push
sbb
inc
cmc
jl
pop
sub
adc
loopne
pop
xchg
test
shrb
lret
pop
aam
mov
pop
jae
mov
out
cmp
lds
scas
add
cmc
push
outsl
vpunpckldq
mov
loope
inc
or
xor
out
sahf
out
xchg
aad
pop
jge
add
mov
cmp
imul
mov
and
inc
clc
into
or
xor
mov
into
fldcw
mov
mov
mov
notl
out
mov
xor
sahf
adc
ret
addl
lret
inc
cmp
jae
fiaddl
out
push
ljmp
lock
incl
push
inc
lcall
cmp
in
icebp
negb
js
adc
push
lcall
call
jb
mov
out
lock
out
call
mov
jmp
shll
jmp
repnz
leave
sbb
mov
pop
clc
lret
std
rclb
sub
pop
mov
in
cwtl
ljmp
outsb
icebp
repz
jbe
xchg
je
sqrtps
sbb
sub
out
and
adc
icebp
movhps
sub
xchg
push
add
outsb
loope
jb
in
sbb
jbe
lods
and
inc
mov
out
jno
cs
jle
cli
xchg
into
dec
mov
daa
dec
pop
mov
pop
lret
mov
test
and
inc
hlt
aad
sbb
cmp
aaa
sarb
push
aad
out
adc
add
out
xor
ljmp
call
movsb
testl
clc
fidivs
xchg
dec
negb
enter
xchg
inc
mov
dec
cmp
adc
jb
mov
out
jne
mov
mov
push
mov
xchg
adc
xor
nop
jle
test
popf
popl
push
sub
mov
andb
jb
ja
pop
mov
sub
outsl
cmc
cmp
xchg
add
sbb
faddl
adc
sbb
imul
dec
adc
jge
and
cmpsb
ljmp
rcll
push
lods
das
add
dec
iret
lea
std
jbe
xor
insb
loope
lahf
shlb
ljmp
imul
dec
insl
fdivrl
pushf
aad
jne
sbb
pop
dec
testb
stos
addr16
mov
in
mov
aam
divb
in
popa
dec
xchg
sub
push
lret
rorl
fadd
mov
adc
mulb
out
mov
ds
and
sbb
mov
and
jnp
xchg
mov
or
sub
xor
inc
mov
mov
xlat
mov
jle
fwait
jne
bound
stos
ret
jns
lahf
pusha
jecxz
mov
mov
xchg
nop
mov
lds
mov
and
jg
fnstsw
out
cwtl
xor
clc
leave
cltd
mov
xor
hlt
mov
push
pop
in
sub
sbb
jmp
xor
dec
cmp
cmp
pop
push
out
fsubs
nop
lock
add
sbbb
mov
dec
sbb
adc
mov
push
adc
jae
das
cmc
xor
sahf
stc
hlt
leave
aaa
add
ret
js
aam
out
xchg
repnz
popa
xor
pop
xchg
loopne
out
out
mov
dec
inc
dec
cmc
js
pop
mov
adc
popf
lahf
std
and
pop
push
imul
sbb
inc
or
idiv
cmp
xchg
mov
push
add
xor
clc
stc
test
xor
push
jmp
leave
fsubs
ss
jae
hlt
mov
sti
pop
mov
push
add
shll
xchg
sub
loopne
pop
imul
push
fsubrs
add
stos
mov
dec
fcomps
cltd
notb
ficoms
rcrb
outsl
push
adc
jmp
add
dec
mov
pushf
dec
pop
les
jne
addr16
adc
sub
rcrb
sahf
das
sbbb
add
cmp
repz
mov
mov
lret
dec
push
stos
imul
pop
loop
mov
sbb
ja
inc
pop
mov
sub
pop
jecxz
data16
pop
mov
fldcw
das
mov
xchg
lahf
push
cld
and
ret
rcr
call
cmp
insl
lock
les
mov
gs
push
ret
addr16
push
adc
inc
mov
pop
loop
lods
loope
dec
inc
or
lret
dec
inc
dec
scas
sbb
fisubrl
lock
andb
adc
notl
mov
insl
inc
cltd
roll
ret
jbe
pop
movsl
xor
xor
xchg
adc
mov
stos
int3
dec
add
ret
shll
enter
sbb
loopne
jne
or
or
jmp
andl
into
cmpsb
call
push
inc
xor
push
out
mov
pop
dec
pop
clc
push
sub
cmp
movsl
fmul
jo
or
shll
sbb
dec
push
in
and
out
cmp
ret
mov
mov
imull
dec
xchg
mov
mov
pop
iret
jge
push
arpl
cmpsb
rcrl
mov
or
adcb
xchg
xchg
aad
outsl
stos
rcr
cmp
arpl
or
cmp
call
pop
dec
ss
in
dec
inc
stc
dec
in
lret
sub
cmpsb
lds
mov
fcmovu
and
or
inc
lret
test
popa
std
pop
lahf
nop
add
cmp
outsl
out
pop
idivl
cmp
or
imul
bound
mov
jg
dec
cmp
add
jbe
or
add
sbb
sbb
pushf
stos
pop
cli
stos
lock
outsl
out
int
inc
les
or
mov
fnstcw
xchg
push
add
or
push
jl
inc
loop
dec
ss
loop
lret
mov
and
int
adc
fldcw
cmp
ljmp
jp
leave
cmp
jns
add
cltd
xchg
mov
leave
iret
stc
xchg
cli
dec
push
mov
test
mov
push
sqrtps
jne
dec
roll
xor
inc
aam
ds
daa
imul
ds
cmp
lods
inc
cwtl
in
out
push
add
fmuls
xchg
movsl
pusha
mov
mov
test
jl
xchg
jnp
sbb
out
sti
out
sub
and
arpl
movsb
adc
xchg
mov
add
incb
adc
add
pop
lea
addb
shrl
mov
out
ds
int
adc
lock
dec
xor
mov
rorb
aaa
xor
jl
add
sti
xor
dec
mov
test
clc
xchg
jbe
cs
and
idivl
dec
fcoms
imul
pusha
stc
lock
pop
pop
lret
fwait
shr
pop
sbb
out
mov
mov
addr16
ljmp
pop
out
scas
inc
adc
inc
adc
call
mov
adc
sbb
test
push
xchg
sarb
push
jae
loop
loop
cwtl
repnz
mov
cmpsl
pop
dec
cmp
in
ficomps
sbb
lock
cli
fdivl
lds
cmp
out
dec
in
lret
icebp
push
gs
and
dec
call
aad
push
xchg
adc
rolb
imul
je
sahf
arpl
mov
clc
ds
stc
dec
sahf
xchg
xchg
or
push
and
stos
les
subb
mov
cmp
inc
arpl
pop
imul
push
rcll
and
sub
jmp
insb
jmp
data16
clc
dec
push
mov
inc
pop
ret
fsubrs
into
and
sbb
adc
mov
push
mov
sub
daa
les
addr16
pop
out
int3
aad
fbstp
loop
outsb
in
and
into
add
fdivrs
fstpl
test
scas
push
mov
sbb
push
dec
lods
dec
push
add
aam
xorb
jecxz
mov
add
dec
push
cmp
mov
dec
push
gs
insb
arpl
insb
data16
push
out
dec
dec
sub
bnd
int3
ds
xchg
movsl
or
dec
fidivrs
aam
jne
loop
aam
dec
jg
lahf
mov
jge
adc
mov
in
insl
jb
mov
push
movb
adc
je
dec
dec
mov
adc
mov
divl
or
shlb
js
inc
xor
dec
aas
test
repnz
inc
jmp
fimuls
hlt
mov
sbb
sbb
pushl
mov
fdivrl
nop
inc
insl
jno
cmpsl
inc
shl
lcall
dec
and
inc
sti
pop
push
xchg
mov
push
mov
push
push
fwait
pusha
push
hlt
push
xchg
outsl
inc
movsb
loopne
in
sbb
out
inc
js
aaa
push
xor
xor
mov
sub
jae
inc
repnz
cltd
sbb
movl
dec
xchg
daa
cmp
xchg
in
mov
push
sub
pop
movsb
pop
dec
dec
mov
lcall
mov
pop
sbb
addr16
mov
loop
xor
fs
insb
cmpsb
daa
lcall
push
test
push
adc
shlb
in
movl
fldcw
fldt
lea
sbb
mov
clc
add
dec
std
out
and
push
insl
loope
ss
int3
cmp
cmp
sub
loope
xchg
repnz
sti
cli
cmpsb
fmul
pop
lods
inc
sbb
nop
cmp
aaa
lret
jg
jmp
pop
cltd
inc
dec
dec
loopne
stc
cmp
test
mov
pusha
xor
call
inc
pop
into
lcall
in
int
sub
push
in
aam
sbb
stos
mov
mov
cs
dec
fxch
clc
aad
das
mov
pop
mov
fs
inc
jmp
rcll
mov
daa
xchg
in
outsb
or
push
jae
sbb
les
push
inc
sub
push
mov
adc
ss
jo
sbb
add
mov
xchg
cs
push
pusha
push
cvtps2pd
loop
or
inc
jbe
cwtl
mov
shll
xchg
sub
jae
lods
xchg
negl
jge
sub
cmp
adcb
ud2
mov
scas
nop
dec
or
push
cs
pushf
scas
mov
push
mov
imul
scas
aaa
stc
push
fisubrs
adc
adc
repz
sbb
jbe
sahf
xchg
add
jns
dec
andl
push
sahf
rolb
int3
pop
out
decl
subl
enter
daa
incl
cmp
js
cld
into
mov
mov
mov
xor
arpl
xchg
ds
jmp
rcr
in
push
push
cli
mov
pop
pop
mov
xor
ja
mov
mov
jmp
iret
leave
ror
lea
sub
xchg
mov
leave
dec
enter
negl
daa
jp
inc
push
add
add
clc
jmp
loop
repz
or
push
popf
jge
pop
stc
xchg
das
cld
es
sub
scas
mov
push
dec
jno
out
add
leave
loopne
cmpl
cmp
jne
scas
js
jmp
pushf
xchg
aam
sbb
jns
push
sbb
jmp
lods
push
or
add
test
aaa
push
mov
cmp
cmp
stos
adc
xchg
fs
mov
sub
das
push
popf
jle
mov
or
or
inc
ljmp
push
jns
adc
xor
mov
xchg
pop
fsubl
xchg
outsl
inc
test
mov
jnp
lcall
jmp
lods
js
clc
popf
fstpl
mov
dec
ret
push
mov
mov
mov
or
popa
outsl
cmp
jle
scas
or
mov
or
dec
xor
outsb
outsb
ret
notl
cld
in
test
sahf
bnd
lods
jl
pop
lcall
icebp
xorl
icebp
loop
std
lret
scas
outsb
mov
mov
sbb
jmp
rcll
pop
cli
stos
cmpsb
and
cmp
icebp
leave
sahf
adc
sbb
dec
icebp
lahf
enter
jae
jnp
mov
fidivrs
cmpsb
or
push
mov
ret
test
pop
lods
test
sub
ror
cltd
mov
fcmovnu
test
mov
fcompl
popa
enter
mov
inc
adc
je
push
leave
dec
cli
mov
add
mov
insb
clc
fadds
add
pop
test
adc
adc
pop
std
push
fdivrp
xchg
out
in
jnp
sbb
add
daa
icebp
sbb
out
pop
pusha
push
sub
lcall
mov
mov
adc
mov
popf
dec
push
xlat
in
mov
pop
test
jb
jne
mov
vorpd
push
and
jg
inc
ficoms
adc
aas
fisubs
lcall
jmp
jno
mov
hlt
xchg
inc
push
cmc
aad
cli
roll
mov
adc
xchg
or
sbb
or
stos
xor
xor
sub
mov
rcrl
jb
adc
hlt
adc
scas
add
sahf
adc
sub
gs
les
adc
fdivs
hlt
adc
mov
mov
mov
xchg
xchg
mov
push
stos
dec
lcall
mov
insb
pop
cs
std
pop
mov
sysexit
or
xor
loope
dec
push
pop
cld
jp
test
fldcw
andb
pop
insb
out
push
int
loop
movsb
mov
xchg
mov
ja
loope
bound
push
jle
mov
nop
scas
inc
cmp
outsb
xchg
xlat
lret
ljmp
jg
xchg
call
lea
jne
out
inc
cli
mov
xor
or
jle
fmuls
cli
push
sti
lods
xchg
lea
add
mov
xchg
mov
cmp
cmp
ret
jae
jns
pusha
and
mov
or
out
sub
test
pop
movsb
xchg
jno
dec
cmp
shrl
imul
sub
xlat
push
enter
pop
xchg
inc
in
add
rcl
orb
push
jecxz
inc
and
bound
pop
in
daa
mov
es
test
rcrb
int
add
jb
fstl
push
jns
push
xchg
xchg
push
aad
cmpb
xchg
out
test
mov
pop
fistl
fstps
xchg
test
mov
iret
jo
pop
mov
and
iret
jg
jle
dec
scas
jne
shrl
inc
adc
pop
loopne
or
cmpsl
add
mov
mov
movsl
dec
cwtl
test
dec
ret
subl
push
cld
nop
outsl
mov
movsl
in
mov
iret
mov
inc
int3
lock
or
push
sbb
jno
pop
sbb
pop
psrlw
xor
int3
stos
aaa
cmpsl
loop
add
jmp
mov
or
dec
mov
cltd
mov
addb
sbb
cld
scas
xchg
out
mov
sub
test
xor
mov
xchg
dec
les
mov
mov
sahf
ret
xchg
in
loop
sub
push
aad
mov
fldz
sbb
mov
arpl
aas
scas
in
push
aas
fs
paddq
sub
in
iret
lods
lret
push
add
fs
xchg
ret
fldt
jno
add
out
jecxz
adc
sbb
jp
inc
insl
lods
gs
subl
adc
sub
subb
and
fidivrs
mov
add
lods
out
add
jo
mov
dec
outsb
push
sub
push
fildl
popa
inc
and
loopne
inc
pop
icebp
ds
push
sbb
std
add
out
aad
and
pop
cltd
jnp
pop
jo
add
xchg
jbe
rcrb
shl
adc
cmp
dec
mov
inc
push
stc
or
inc
jne
call
sarb
push
mov
pop
into
fwait
or
adc
rcrl
mov
ss
xchg
xor
mov
push
lret
insb
pop
nop
arpl
push
and
add
cmp
add
in
pop
dec
out
adc
inc
dec
mov
push
in
aad
cmc
push
xchg
in
inc
in
bndldx
out
clc
mov
jmp
fnstsw
add
fistl
dec
test
mov
into
mov
jmp
and
sbb
mov
repnz
push
std
or
movsb
pop
cmpb
in
dec
pop
mov
jb
loopne
inc
cld
int
rclb
setns
jl
and
jns
arpl
out
mov
sbb
aam
inc
fidivl
sahf
or
xchg
mov
out
jmp
jb
cmpsb
add
push
sbb
jns
loop
jbe
mov
mov
mov
xor
fwait
inc
adc
sbb
popf
fwait
sub
jecxz
sti
dec
repz
and
mov
adc
cmp
shlb
add
loopne
inc
sub
jae
sub
shlb
out
fsubs
push
sbb
hlt
jmp
negb
nop
cld
outsl
lahf
lret
int3
ss
clc
lods
push
sbb
cli
stos
sub
pop
insl
ret
das
xor
pop
sub
xlat
loope
pop
cmp
dec
les
mov
bound
orb
dec
sub
sbb
pop
aam
push
loope
and
imul
fstps
lods
or
repz
add
sarl
dec
dec
jecxz
in
int3
dec
cmp
add
inc
jo
nop
ss
jno
shl
scas
mov
sbb
cmp
ret
sub
movsb
lea
aam
fisubl
sub
xlat
pop
mov
adc
pop
sub
jo
xchg
inc
xchg
push
add
movb
add
imul
mov
or
inc
xlat
les
adc
cmp
pop
xchg
jp
aaa
mov
dec
xchg
fdivs
mov
xchg
and
out
pop
sar
push
movsl
mov
mov
push
shlb
inc
jle
inc
lret
jb
ret
jmp
fs
leave
sbb
mov
push
pusha
inc
cmp
sbb
dec
fists
add
dec
jmp
sbb
sub
nop
push
or
or
mov
shrb
shlb
mov
add
cmpsb
out
or
es
xchg
inc
cmp
fsubl
add
push
stc
mov
iret
fwait
das
and
add
mov
pop
sub
push
sbb
mov
pop
xchg
and
fmull
fsubs
repnz
loope
sub
ljmp
andl
push
iret
insl
adc
hlt
out
and
cmp
xor
inc
or
loope
sub
inc
mov
inc
add
or
mov
shrb
fnstsw
out
cmp
mov
in
psllq
aad
xchg
repnz
sbb
mov
aas
and
es
into
xchg
pop
mov
cmpsl
push
mov
lahf
jnp
jp
aad
push
dec
mov
xchg
mov
dec
movsb
adc
addl
inc
xor
and
test
mov
js
dec
stos
mov
xchg
pop
sub
jmp
pop
je
mov
repnz
xchg
lret
notl
imul
adc
sbb
mov
addl
dec
and
mov
and
repz
or
push
cmpsb
testl
idivl
pop
and
xlat
mov
mov
data16
inc
or
popf
mov
clc
dec
push
popf
push
sbbl
sbb
mov
lods
mov
into
mov
add
mov
jg
xor
push
mov
out
das
and
xchg
cmp
xchg
fwait
mov
data16
popf
jno
cld
shrb
mov
clc
dec
addl
outsb
xchg
movb
add
sub
out
out
mov
int
mov
das
inc
mov
stc
popa
inc
sbb
imul
mov
cmp
out
stos
dec
in
xlat
movhps
or
in
lret
cmp
inc
mov
or
sbb
pop
insl
in
in
inc
xlat
dec
sub
inc
adc
fsubs
int3
mov
leave
lcall
jge
mov
nop
cmc
jae
cmp
daa
into
shll
mov
mov
repnz
push
insl
stos
jle
pop
mov
loopne
cmp
cmpsb
xchg
xor
or
loop
shl
adc
push
enter
addb
in
mov
int
pop
aaa
xchg
fldl
out
pusha
push
or
adc
idivl
fistpll
rcl
push
cmp
shll
pop
stc
fs
outsl
xlat
cmp
mov
nop
scas
int
jmp
fcoml
inc
in
push
icebp
pushf
enter
stos
daa
repz
mov
jo
sarl
in
jb
dec
cmp
mov
lret
fstp
mov
adc
imul
xlat
outsb
lods
cwtl
imul
add
jo
mov
daa
sub
popf
pop
arpl
in
adc
cmpl
xlat
mov
sub
dec
stos
push
aad
repz
bound
pop
loopne
sub
repz
jno
mov
mov
push
test
or
mov
out
cmp
xor
mov
mov
cmp
out
mov
mov
icebp
cltd
shll
mov
ss
scas
adc
push
pusha
movsb
xor
orl
mov
stos
xchg
inc
shrb
shl
xchg
stc
sti
pop
mov
push
jno
cmpsl
lea
xor
pop
repnz
sarb
out
dec
fisubrl
shr
sub
pop
mov
mov
sbb
xchg
bound
jne
jnp
ret
insb
decl
cmpsl
sub
mov
aas
clc
xor
pusha
je
adc
out
jnp
xor
rorb
arpl
stos
push
call
insb
xor
repz
jne
stos
push
mov
jno
fcmovne
lcall
pop
pop
push
push
cmpsl
ja
fsubrl
add
test
adc
or
adc
push
sub
sbb
aad
mov
imul
push
push
adc
inc
xchg
and
jecxz
movsl
in
inc
imul
lahf
dec
xchg
js
mov
push
inc
aam
mov
add
mov
mov
xchg
sbb
mov
test
jle
test
in
push
mov
ficoml
push
push
add
stc
lea
and
sub
rcrl
push
dec
int3
pushf
cmp
in
mov
sbb
out
inc
enter
jo
and
pop
mov
push
jae
push
sbb
test
xor
pop
jmp
rcl
adc
fs
pushf
adc
sbb
fistps
xchg
imul
scas
mov
adc
adc
test
in
mov
xor
lods
push
outsl
out
insb
rol
xchg
jecxz
icebp
sub
add
rol
out
nop
in
cmc
jecxz
enter
push
fwait
mov
dec
inc
dec
sbb
sbb
dec
aad
cmp
cmpsl
nop
inc
pop
add
xchg
mov
sbb
mov
scas
cltd
sahf
cli
shrl
insb
inc
nop
sbb
test
add
sbb
decb
or
push
ds
je
mov
or
pop
test
bound
cwtl
sub
mov
hlt
mov
divl
jae
and
cli
imul
push
cmp
and
int3
push
mov
std
neg
dec
cmp
test
push
push
and
add
in
sub
fisttps
ds
inc
aad
pop
out
cmp
ljmp
cmpsl
arpl
sub
or
sarb
sub
stos
mov
sbb
and
xchg
imul
mov
rcr
jb
xchg
arpl
add
and
sbb
xchg
cmpsl
jp
sbb
xlat
test
mov
mov
mov
cs
inc
jmp
pop
mov
xchg
sbb
jo
in
pop
and
out
inc
xorb
mov
sub
aad
sub
push
dec
push
jg
pusha
shlb
xchg
std
fisubrl
add
dec
sbb
push
sbbl
loope
divb
mov
jnp
adc
jne
dec
mov
push
es
xor
adc
xchg
inc
pop
inc
daa
cmp
in
lcall
cmp
lock
jmp
push
jbe
jb
mov
inc
inc
mov
mov
mov
cmc
push
stos
data16
scas
shrb
repnz
push
dec
xchg
loopne
mov
lahf
sub
xchg
sahf
ds
in
leave
sbb
push
inc
pop
mov
cmp
mov
adc
std
icebp
cmpsl
movsb
sbb
stos
test
mov
push
test
push
fisubrs
adcb
in
addr16
lock
sbb
push
cltd
out
push
fs
ljmp
addr16
lea
mov
xchg
xor
iret
adc
and
pop
shll
imul
ret
or
vcomiss
hlt
jmp
inc
int3
and
pop
cli
aam
mov
lea
pushf
mov
or
sub
push
mov
cmp
push
cli
dec
out
and
push
add
mov
pop
dec
push
clc
jg
hlt
push
cld
outsl
imul
test
adc
lea
mov
dec
and
push
loopne
into
cli
push
js
push
dec
stos
dec
sbb
mov
inc
dec
xor
popa
cltd
fldcw
imul
pop
cmp
xor
ljmp
push
mov
ds
cwtl
loope
mov
sub
mov
repnz
cltd
adc
jo
popw
mov
pusha
out
icebp
inc
xchg
in
pop
dec
stc
fwait
xor
jl
int3
stos
push
movsl
jecxz
xor
or
sub
out
ss
shlb
add
push
adc
add
sbb
cltd
jne,pt
jle
mov
mov
sti
xchg
push
pop
cltd
jg
inc
or
push
pushf
bound
nop
dec
adc
popf
xor
sub
pop
in
aad
fwait
mov
int3
mov
push
xor
es
pop
sub
daa
rcll
and
cmpl
ret
jns
dec
cmp
divb
stos
aas
pushf
xchg
test
push
aam
adc
cmpsb
popa
cmp
scas
push
mov
or
and
insb
add
and
jae
or
cmpsb
cwtl
leave
sub
ja
dec
mov
push
stos
lds
imul
frstor
arpl
mov
cwtl
mov
mov
push
push
jp
out
pop
cltd
sub
sbb
pop
js
pop
imul
cld
add
lea
sub
or
xchg
mov
jmp
push
arpl
lret
sbb
xor
mov
or
int3
in
cmp
popf
jae
jae
pop
in
gs
xchg
xchg
hlt
lea
push
mov
add
mov
jno
into
adc
xlat
pushf
movsb
arpl
ret
jmp
pop
inc
or
jmp
test
loope
sbb
les
xor
jns
sti
mov
inc
int
cmp
aas
xor
popa
inc
mov
mov
push
pop
dec
pop
pop
sahf
xor
nop
scas
test
and
movsb
movsb
daa
mov
rclb
jl
sub
fstp
dec
sub
mov
fsubr
fcomps
pop
ss
pop
fimuls
movb
jp
sub
xchg
xchg
repz
ds
jecxz
testb
js
sbb
push
outsl
jl
mov
xchg
xor
cmp
cltd
gs
sub
int
push
lods
mov
fadds
sub
test
jne
insl
cmpsb
outsb
test
outsb
into
test
loop
mov
pop
xchg
cmc
jg
sbb
data16
roll
sti
cmp
push
xchg
cmpsl
rorb
mov
push
mov
pop
scas
into
mov
popa
push
jge
dec
pop
ret
sub
mov
nop
aam
or
ret
leave
lock
inc
out
mov
sbb
fidivl
xor
popf
negl
jmp
mov
fistl
sub
inc
cmpsl
movsb
fisubrs
and
sub
scas
add
push
fnstcw
push
das
pop
pop
hlt
pusha
add
imul
out
icebp
in
imul
dec
xchg
inc
mov
inc
adc
cmp
pop
jmp
aaa
mov
aaa
icebp
jg
dec
jnp
insl
push
rorb
add
sub
pop
or
pop
and
arpl
pop
test
xor
orb
in
stos
in
gs
ret
int3
movsb
adc
mov
nop
cmpsb
arpl
ljmp
jp
pop
in
xlat
fidivrs
adcl
out
pop
add
and
lcall
ss
mov
push
cmpl
inc
test
cmpsb
in
leave
ljmp
dec
rol
cli
sbb
and
mov
sbb
jbe
cmp
dec
loop
cmpsb
xor
jns
mov
adc
jmp
push
imul
mov
jne
ljmp
mov
repnz
push
inc
adc
or
std
aaa
push
lret
gs
sub
and
repz
xor
stc
mul
jno
jb
adc
hlt
call
jbe
ret
and
sbb
xor
push
pop
popa
or
cli
mov
cmpsb
ficoms
imul
movsl
jmp
dec
movsl
or
mov
pusha
shl
inc
jp
loop
lds
dec
cs
scas
pop
mov
adc
fcoml
mov
loop
cmp
mov
and
add
mov
fwait
mov
fstl
es
push
xor
fcmovb
mov
subb
sub
xchg
inc
add
sarb
outsb
inc
sub
xor
or
mov
lcall
nop
jp
mov
xlat
in
pop
mov
lret
or
call
cmpsb
cmp
lock
cmc
fildl
or
stc
jg
pop
xchg
out
sahf
rol
adc
mov
call
cltd
jp
subl
movsl
jns
pop
mov
xchg
lods
push
scas
mov
pushf
faddl
add
mov
mov
test
pop
adc
aad
jb
movsb
jg
pop
fld
pop
fmull
lcall
insb
in
and
data16
or
and
pop
sbbl
mov
test
mov
or
xor
adc
adc
pop
cli
jp
mov
leave
xchg
mov
adc
xchg
loop
inc
sub
sub
mov
inc
mov
mov
rorb
ret
js
repnz
aas
push
mov
enter
loope
mov
lahf
movsl
jp
nop
nop
mov
cld
in
lock
sub
push
mov
mov
inc
decl
nop
add
mov
pop
test
mov
pop
mov
xchg
mov
dec
cmc
jl
mov
ret
movsb
movsb
xchg
dec
and
add
inc
sbb
inc
push
rorl
add
add
mov
xor
das
outsl
push
jo
cld
xor
rorb
push
call
bound
test
mov
cmp
loope
lods
adc
sti
std
setns
push
mov
mov
pop
cmp
rclb
ljmp
push
pop
test
shrb
cwtl
pop
loope,pn
push
jbe
mul
pop
xchg
call
mov
jle
inc
sbb
pop
arpl
aas
rcrb
xor
ds
and
jle
mulb
stos
loopne
aas
aam
std
stos
jg
sub
cs
push
in
lret
mov
int
mov
stos
cmp
or
cmc
rolb
adc
add
leave
adc
and
jne
lret
xor
imul
pop
adc
es
adc
rorb
lds
add
push
out
sahf
ret
mov
mov
sub
push
js
lcall
bound
fwait
mov
in
pop
sub
pop
jge
push
incl
mov
aad
sbbb
jne
sbb
in
push
xchg
rcll
hlt
add
sub
imull
in
leave
xchg
test
or
xchg
or
mov
adc
fwait
je
fwait
loopne
ret
jb
mov
xor
ljmp
cmp
and
stos
nop
sub
lret
pop
and
add
fidivs
divb
cmpsb
cs
mov
mov
stos
out
push
shlb
xchg
fabs
and
cmc
sub
push
mulb
xchg
xchg
rcll
jb
scas
adc
pop
add
data16
xor
faddl
add
loop
mov
lret
es
sbb
sub
scas
std
cwtl
out
mov
cli
push
and
xor
xor
insl
mov
es
dec
mov
push
sbb
push
ljmp
or
repnz
xor
mov
xchg
and
jo
xor
push
jns
ja
leave
fstl
fcomi
scas
or
mov
test
in
test
rcrb
iret
mov
filds
cmp
enter
scas
xor
sub
push
in
lahf
filds
inc
cmc
test
jmp
movsb
xlat
jb
test
jae
stos
adc
aas
ret
in
push
fbld
aas
push
xchg
mov
ljmp
jmp
sub
dec
inc
inc
imul
test
push
cwtl
lcall
shll
ret
pop
jmp
and
pop
fsts
addr16
xor
cmpsb
icebp
lret
adc
decl
xchg
in
cmpsl
jle
push
fisubrs
in
jns
idivb
push
push
mov
shll
mov
mov
sub
cs
mov
aas
mov
push
fsubl
dec
dec
clc
jmp
lds
rorb
xchg
adc
xor
cmp
sub
lahf
mov
pop
push
shl
and
push
lahf
mov
iretw
sub
xchg
scas
jae
enter
insb
cmc
fadd
cmp
nop
cli
pop
adc
mov
movsl
or
push
sub
out
in
int
sub
add
inc
movsb
mov
jnp
inc
mov
in
mov
shrl
lcall
lret
xor
jle
loopne
xor
jge
into
stc
pop
rclb
sbb
sbb
dec
cmpsb
lea
jno
jnp
insl
pushf
or
in
iret
stc
ret
sub
lcall
aas
test
pop
or
or
xchg
cmpsb
pop
popf
inc
shrl
dec
pop
testl
cmp
daa
ja
in
outsb
dec
rorb
jl
call
gs
fsubrl
mov
xorb
idivl
filds
jns
fistpll
aas
outsb
push
mov
movsl
leave
push
es
and
inc
xor
mov
ja
xor
out
pop
sahf
adcl
xor
aam
int
sbb
mov
jp
mov
rclb
test
imul
movsb
jnp
mov
rolb
cmc
jmp
mov
or
ds
les
pop
jns
mov
cmpsb
faddp
in
addl
mov
mov
dec
sti
inc
int3
pop
push
push
int
in
xlat
ds
pusha
outsb
les
fwait
mov
je
mov
bound
fildl
sahf
loope
iret
daa
hlt
or
mov
mov
pop
out
inc
xchg
xchg
aad
cs
add
jl
nop
out
jne
popf
jmp
ret
xor
xor
xchg
dec
hlt
mov
cwtl
shlb
mov
pushl
lcall
xorw
adc
mov
daa
jnp
popa
mov
and
xchg
out
xchg
ja
mov
xchg
jb
sbb
inc
cmpsb
lcall
pop
fadd
xor
jl
repnz
dec
scas
sarb
xor
jo
je
xlat
int
cmp
pushf
adc
xchg
dec
adc
in
xor
das
or
mul
shlb
icebp
mov
ds
test
cmp
incl
push
cltd
dec
and
xchg
and
push
dec
ss
orl
jns
mov
das
push
out
mov
scas
cmp
jmp
cmp
sub
popa
sub
xor
scas
out
pushf
inc
and
xor
pop
push
into
push
add
cmp
adc
mov
imul
sbb
and
cs
je
cwtl
bound
insb
cmp
pop
jae
dec
divb
ss
cmpsb
aaa
jl
adc
push
mov
lret
cmp
jecxz
adc
and
repz
out
sub
or
mov
sub
cmpsl
dec
and
mov
and
lods
idivb
into
in
xlat
cmpsl
imul
aas
loopne
fimuls
jnp
push
cmp
sbb
fs
out
sbb
mov
xchg
mov
repz
xchg
out
cmp
cwtl
adcb
enter
decb
sarl
jb
sbb
xchg
inc
xchg
xchg
dec
mov
inc
sub
lods
xchg
out
mov
fsubrp
push
addr16
pop
and
adc
lds
loope
cld
pop
cmc
test
push
adc
test
inc
jecxz
mov
int
jns
or
pop
ret
mov
ret
inc
mov
out
push
loop
mov
mov
in
add
fldt
cmpsl
mov
icebp
lcall
clc
aad
test
xchg
dec
je
push
mov
idivb
ljmp
shl
out
cmp
stos
out
rolb
iret
pushf
cs
sub
mov
out
inc
jno
mov
mov
outsb
cmp
sub
and
out
or
cmp
dec
filds
imul
cmpsl
or
sub
sahf
shll
es
imul
dec
or
mov
mov
cltd
dec
lds
xor
notl
lahf
scas
mov
ja
add
or
inc
mov
loopne
shr
lahf
pusha
pop
jbe
in
clc
adc
mov
jmp
daa
loopne
leave
test
mov
sub
push
jge
cmp
xor
fimuls
jmp
rcr
jns
add
insb
inc
xchg
mov
inc
mov
int3
cmp
push
mov
test
arpl
negb
stos
mov
shl
or
dec
and
mov
nop
xchg
gs
shl
add
daa
outsb
addr16
rcr
push
or
inc
je
lret
cmp
sbb
fldenv
mov
and
xlat
add
sbb
cmpsl
call
fnstsw
loop
stos
enter
mov
icebp
jp
gs
adc
sti
por
je
add
rclb
dec
inc
jmp
das
mov
push
cmp
cwtl
loope
cmp
insl
adc
mov
pop
and
pop
sub
idivb
lods
in
inc
xchg
std
cmp
mov
loope
outsb
ltr
add
inc
jmp
sub
ja
movsb
push
mov
repnz
sbb
jmp
idivl
repz
test
loope
aaa
ja
lods
xor
ljmp
mov
mov
adc
adc
inc
lahf
xchg
inc
jmp
insl
das
xchg
les
repz
add
xchg
push
insb
hlt
mov
xchg
xor
repnz
lcall
stos
inc
std
dec
fstp
push
ss
aad
daa
add
xorb
stos
jb
push
cltd
sbb
test
std
out
data16
mov
mov
repz
pop
pop
and
ljmp
fs
inc
mov
pop
sbb
popa
mov
lcall
invd
or
pop
mov
call
mov
aad
call
f2xm1
orl
sub
jae
addr16
or
mov
sub
call
push
push
lahf
loope
ljmp
fwait
xchg
dec
mov
mov
test
scas
lods
adc
pop
cmovno
pop
into
mov
out
xlat
mov
lods
dec
int
xorb
pop
and
pop
mov
into
hlt
sbb
int3
loop
mov
idivb
inc
or
jbe
mov
or
add
mov
js
and
lock
repnz
adc
xchg
bound
out
je
xlat
notl
jne
out
lret
insl
jae
xchg
cmp
mov
lods
adc
jo
xchg
sbb
cmc
xchg
sbb
lcall
xor
jno
push
pop
jae
push
adc
sub
cmpsb
in
outsb
mov
inc
jno
int3
inc
mov
push
xor
fcmovb
cmc
pop
xchg
loope
loop
setge
dec
decl
mov
sub
dec
repz
pusha
jge
jo
cmp
mov
push
nop
fwait
int3
out
lods
inc
movsb
insb
push
xchg
and
scas
mov
shlw
xchg
xor
sub
cs
jge
mov
loopne
icebp
xchg
int
stc
mov
sbb
and
cs
inc
cmpsw
in
push
jp
and
in
icebp
push
int3
pop
icebp
jnp
in
sahf
sarb
pop
lods
lcall
push
jmp
fdivl
pusha
pop
push
fcoms
push
dec
jle
ficoml
mov
inc
outsb
xchg
rol
cmp
je
fsubrl
mov
pop
popa
das
jbe
xor
sub
sbb
imul
notl
into
sbb
jb
mov
mov
dec
popa
push
sbb
push
jg
mul
xchg
dec
push
jp
pop
xorl
jne
aam
mov
xchg
cld
sbb
cmp
inc
push
jg
cmp
call
jl
loope
mov
aam
shrb
arpl
mov
xchg
jns
dec
inc
mov
mov
xor
fidivrs
cmp
xchg
aaa
jne
rcrl
call
or
in
lcall
fmuls
popf
jmp
clc
cld
dec
jne
sub
and
xor
das
ja
out
pop
cmpsb
cltd
outsl
in
icebp
cmpsl
mov
and
mov
push
jb
in
or
sub
stos
inc
add
dec
xor
mov
and
les
dec
xchg
push
icebp
mov
mov
test
pop
add
stc
insb
imul
shlb
orl
in
rcrl
int
movl
imul
pop
cltd
mov
mov
sbb
popf
lret
mov
push
gs
lds
movsl
pop
cmp
call
out
cwtl
cmpsl
insl
xchg
xchg
pop
jae
push
xor
mov
push
mov
dec
and
xor
xchg
jle
add
dec
testl
lock
jl
mov
add
mov
sub
scas
cwtl
mov
sbb
aad
sub
ljmp
push
into
repnz
mov
je
push
addr16
mov
in
push
pop
sbb
stos
les
call
stos
sbb
jecxz
sub
push
enter
xor
xchg
adc
pop
pop
dec
iret
jp
jl
das
mov
pop
movsl
hlt
out
mov
in
sar
inc
push
daa
bound
pop
add
xor
mov
movsb
push
add
lret
mov
push
sub
stc
dec
jge
stos
xor
dec
lret
and
sbbb
ljmp
rcl
inc
lea
jo
imul
fldt
push
mov
jle
iret
shll
imul
repz
pop
push
inc
jmp
and
cmp
cmp
shlb
mov
mov
jecxz
sahf
into
or
cli
or
pop
test
push
test
push
shll
fwait
cmpsb
je
jp
add
pop
adc
adc
lods
aas
notb
stos
cmpsb
rcll
push
xchg
fistpll
lahf
or
iret
imul
mov
aad
mov
xchg
lcall
add
push
in
jmp
xchg
sub
cmc
xor
lea
jne
daa
fs
mov
push
incb
outsb
jecxz
scas
pop
dec
mov
mov
out
push
std
cltd
jmp
nop
loopne
cwtl
mov
dec
imul
and
dec
cli
fs
adcl
ss
in
outsb
push
pop
push
mov
sbb
das
roll
jp
xor
xor
or
ret
sbb
sbbl
out
jno
dec
adc
lcall
std
clc
or
lcall
jp
sub
fsub
inc
lret
loopne
clc
scas
popf
dec
gs
and
outsl
mov
test
insl
xor
lret
shrb
pop
sbb
dec
xacquire
in
aas
fcompl
loope
gs
popf
push
sbb
roll
adc
sbbb
add
cmp
aas
in
lods
mov
push
loopne
or
fwait
adc
out
daa
inc
xchg
imul
mov
ret
fidivs
sub
repz
cmpsl
jb
dec
xchg
cld
adc
cmp
fsubr
lret
xor
out
xchg
popa
ror
pop
mov
arpl
jecxz
aad
mov
inc
lret
jge
push
gs
lahf
in
xchg
ss
mov
push
lret
xchg
fstps
enter
addr16
in
insb
sbb
cli
mov
inc
ja
dec
adc
push
inc
pop
iret
inc
mov
push
mov
mov
dec
push
dec
sub
outsl
int
ljmp
xor
stos
out
dec
fldcw
jecxz
dec
into
enter
lret
pop
dec
ja
push
ds
cltd
data16
lret
fxch
xor
cmpsl
mov
divl
sub
jl
fs
mov
pop
fmulp
mov
out
dec
pop
orl
sub
adc
add
fsubrs
push
cmp
adc
dec
xorl
clc
push
sub
jbe
test
jge
xchg
in
pop
and
stc
out
cmpsl
pop
jmp
jnp
orb
cli
bound
inc
std
gs
add
push
and
mov
fwait
cmpsb
jge
push
mov
and
test
iret
leave
mov
repnz
push
push
add
sub
pop
lahf
add
jns
aaa
pop
loop
cmp
mov
jb
test
pop
mov
mov
ds
or
cwtl
stos
fisubl
scas
frstor
fadd
xor
ror
xor
inc
inc
mov
and
mov
jmp
pop
sbbl
enter
ret
push
cmpsl
iret
and
cmc
mov
aad
loopne
mov
out
dec
mov
mov
lret
xchg
dec
subb
sub
stc
xor
je
mov
push
sbb
or
mov
cwtl
lret
out
mov
sarb
movq
xchg
std
mov
scas
dec
dec
adc
inc
cmp
test
mov
push
dec
and
and
cmpsl
mov
inc
mov
hlt
mov
pop
rorb
mov
xor
mov
and
andl
add
jl
imul
in
mov
int3
ljmp
xchg
loopne
xchg
fwait
negb
mov
fcmovnbe
sahf
rolb
xchg
jmp
lret
dec
out
sarl
xchg
pop
lahf
cld
mov
sbb
pop
push
in
fs
add
push
pop
mov
andb
stos
into
jno
lea
dec
sbb
les
cld
jge
inc
jp
ret
testl
push
push
outsb
pop
adc
xor
add
and
daa
xor
lods
cmpb
xchg
mov
xchg
mov
xchg
popf
xor
or
jno
outsb
imul
mov
std
xchg
imul
lahf
xchg
jcxz
out
mov
sbb
pop
add
outsb
shll
push
loopne
insl
es
roll
outsb
dec
pop
jmp
and
jb
call
push
mov
int3
dec
das
sbb
movsl
lock
test
mov
jmp
je
jns
mov
push
jnp
mov
push
not
pop
add
inc
ret
ret
jmp
jle
adc
sti
mov
add
xor
pop
repz
mov
xor
cmp
inc
movsl
stos
xor
in
cmc
sar
out
mov
popw
lcall
and
mov
jp
cmpsl
outsb
pop
cld
push
mov
cld
pop
mov
movsb
cmp
adc
sub
notl
pop
leave
arpl
in
test
jbe
push
cmpsl
sbb
mov
scas
int
and
fisubrs
jge
rcr
and
jne
pusha
in
lret
repz
jl
fsubs
mov
leave
lods
repnz
dec
pop
jp
sbb
dec
scas
fwait
xlat
sahf
pushf
mov
pusha
jle
dec
push
shl
mov
sub
mov
test
xchg
push
fsubs
mov
xor
dec
jle
xor
sti
inc
les
icebp
sarb
add
dec
fidivs
mov
shl
lock
sub
xchg
sarb
das
mov
push
adcb
xchg
pop
mov
mov
in
xor
adc
xor
lahf
xor
add
arpl
push
shr
aad
lret
jp
mov
push
jge
push
mov
or
xor
push
xchg
pop
lea
out
pop
inc
movsl
add
fstl
push
mov
and
push
mov
mov
add
and
sub
jae
hlt
mov
adc
je
cmp
lcall
inc
enter
xchg
and
test
popa
mov
push
xchg
adc
jg
in
jmp
cmpsb
into
and
pop
mov
lods
out
mov
ret
repz
mov
int
cmc
js
insb
inc
aam
or
stc
sbb
xchg
and
jmp
movsl
mov
add
out
push
cmp
or
out
add
add
dec
test
jg
adc
outsl
mov
lock
ret
jnp
lock
xchg
inc
test
lahf
movsb
loopne
addr16
lcall
sub
leave
scas
pop
xchg
xchg
cmp
inc
shl
mov
xorb
ret
cmp
rcrb
push
fs
call
mov
jle
stos
scas
mov
xchg
lea
fisubs
add
lods
add
dec
mov
adc
nop
lret
pushf
push
mov
jp
nop
cmp
xor
cmp
add
repnz
lcall
outsl
mov
rcl
or
dec
lock
xchg
dec
or
out
out
and
adc
insb
pusha
mov
mov
cltd
mov
mov
pop
ljmp
or
cmp
inc
fcompl
xor
lods
movsb
sti
dec
push
imul
mov
push
push
sbb
leave
test
and
dec
test
sub
stos
cwtl
xorb
adc
inc
pop
fdivr
mov
test
inc
sbb
les
test
filds
push
adc
jae
cmp
xadd
lahf
subl
sbb
or
fwait
data16
dec
mov
in
sar
outsb
jmp
inc
lret
les
clc
nop
ljmp
jle
je
bound
je
das
inc
push
adc
sbb
or
fxsave
ret
adc
jmp
bound
xchg
outsb
mov
pusha
das
sub
jl
roll
stc
orl
rorl
fsubs
insb
negb
pop
mov
call
push
sahf
mov
cld
loope
lds
jne
push
popf
mov
xor
stos
mov
jmp
mov
scas
rcrl
or
mov
add
insb
and
hlt
sub
inc
pop
ss
xchg
lahf
mov
or
lahf
out
cmpsl
and
lds
leave
sbb
mov
in
shrb
xor
mov
hlt
mov
in
movzwl
mov
and
or
mov
xor
pop
repz
fisubl
or
mov
inc
or
test
mov
mov
pop
pop
stos
mov
adc
dec
sub
add
adc
xchg
cmpsl
std
jo
dec
xor
out
ds
mov
int
in
out
pop
test
repz
jle
dec
inc
mov
sti
icebp
icebp
testb
mov
cmp
js
xchg
cmc
leave
int
scas
leave
daa
dec
ja
jp
insl
in
inc
sub
pop
test
inc
lods
add
or
lahf
inc
push
jno
or
cmc
adc
aad
adc
or
dec
repnz
in
jae
mov
decl
cmpsb
dec
jmp
and
mov
sbb
mov
pop
in
insl
sbb
and
popa
pop
push
psrlw
loopne
push
mov
fdiv
sbb
cmpb
nop
xrelease
or
iret
xchg
ss
push
jp
repz
insl
cmpsl
or
lret
add
mov
out
pop
insb
lcall
xor
add
add
lret
iret
pop
cmp
adc
mov
sbb
pop
dec
sbb
test
out
add
push
fstl
sbb
push
jmp
cli
leave
xchg
adc
push
je
rclb
je
mov
pop
xorl
ja
adc
and
sahf
mov
jge
pop
lods
sub
lods
dec
cs
es
lea
push
and
dec
nop
jg
mov
add
mov
imul
hlt
std
scas
sub
mov
or
pushf
mov
xchg
lea
clc
push
int
xchg
fdivrl
cmpsb
push
mov
lods
xor
mov
fwait
movsl
ret
push
xchg
add
mov
clc
daa
out
mov
fcomps
imul
sbb
sbb
sub
mov
aam
adc
testl
cmp
sar
sbb
jno
dec
xorb
adc
test
mov
push
lret
in
xor
std
or
mov
xchg
xchg
mov
insb
jb
cmp
leave
mov
into
popa
mov
xchg
add
lcall
popa
dec
repz
pop
into
dec
mov
scas
jge
push
fs
pop
ret
add
sbb
cs
and
dec
push
dec
mov
mov
push
and
push
lcall
in
push
sub
divl
aaa
jecxz
mov
insl
push
adc
dec
mov
push
pop
xchg
mov
mov
xlat
outsb
leave
mov
lods
xchg
loopne
loope
data16
xchg
test
movsb
scas
xor
outsl
cwtl
push
mov
ljmp
mov
stc
jnp
cmpsb
push
push
lcall
loope
out
sbb
enter
mov
aam
sbb
test
mov
aas
jge
popa
xlat
testl
fstl
pop
xor
jecxz
xlat
mov
test
insb
ror
ja,pt
push
scas
lret
lods
mov
insb
jle
or
stc
es
dec
je
xchg
ret
mov
mov
fisttpl
mov
rcrl
sub
std
cmp
add
cmpsb
pushf
push
fdivs
ret
out
dec
cmp
push
pop
pop
dec
push
mov
xor
jns
mov
or
lock
iret
add
inc
and
and
pop
mov
adc
jbe
popa
into
cmp
dec
repnz
enter
push
add
xor
sar
pop
or
push
dec
repnz
arpl
dec
leave
mov
lods
bound
sbbl
add
lods
jecxz
add
mov
stc
insb
adc
lods
xor
push
test
rcrl
cltd
push
pop
mov
nop
xor
cltd
jp
cld
sbb
push
mov
add
in
xor
jmp
leave
out
cmpl
es
imul
xorb
pushf
stos
mov
jnp
jo
sbb
sbb
xchg
and
and
xchg
test
sbbb
xchg
mov
fcompl
mov
sub
adc
inc
push
cmpsl
push
push
cld
jg
pop
push
stos
sbb
and
dec
adc
in
mov
adc
mov
sbb
jge
dec
xlat
mov
loope
inc
sbb
push
jbe
jo
xorl
xor
and
mov
and
stos
jnp
cs
jmp
popa
test
nop
das
pop
cmp
jnp
add
popa
loopne
pushf
jb
dec
out
cmp
rorb
xchg
dec
je
insb
dec
ja
sub
data16
mov
sub
mov
stos
mov
push
or
jno
stos
push
je
xor
sbb
cmp
adc
or
shrl
inc
enter
adc
add
outsl
xchg
lock
or
cs
in
mov
mulb
movsb
cmp
jge
jle
out
cmp
mov
or
mul
inc
test
pop
cld
inc
imul
stos
or
mov
xchg
mov
fstps
clc
cmp
and
cmp
mov
sbb
in
pop
cmp
and
test
adc
cmc
lods
fisubrs
repnz
pop
pop
adc
sbbb
pop
in
sub
in
jbe
mov
add
pushf
pop
data16
js
dec
ret
iret
mov
cld
dec
push
pop
and
in
cmp
sbb
pop
sbb
or
negl
or
mov
or
pop
lods
lock
mov
stos
pop
mov
dec
and
inc
sarb
add
pop
inc
xor
loope
clc
lret
jno
adc
inc
cmpsl
ds
cld
adc
mov
gs
jbe
pop
fdivr
aaa
sub
jb
mov
jl
pop
imull
bound
scas
lock
or
mov
jge
inc
push
inc
aad
jnp
insb
or
in
ret
lret
js
mov
pop
push
and
inc
mov
out
push
ss
arpl
and
push
xchg
push
jbe
enter
jnp
push
in
dec
and
loopne
fcomps
mov
add
and
mov
sub
pop
cwtl
inc
xor
sbb
movsl
movsb
mov
es
das
or
sbb
icebp
mov
fsts
shrl
insb
sbb
and
pop
mov
fistl
xchg
loop
push
cmpsl
sar
push
sub
jne
loopne
imul
adc
dec
adc
mov
xor
xlat
cli
jecxz
inc
lret
pop
push
decb
and
and
lahf
out
int3
hlt
rcll
dec
mov
add
and
lret
jnp
test
scas
test
movsl
inc
xchg
fidivrs
sbbl
int
mov
cmp
rorb
add
sbb
mov
mov
fstpt
cld
frstor
pop
pushf
sbb
add
xchg
divb
aad
iret
inc
jno
or
subb
inc
jle
rcr
cwtl
push
in
or
xchg
push
movsb
test
in
repnz
sti
mov
stc
push
aas
and
mov
imul
jb
call
ljmp
mov
iret
divb
mov
cmp
adc
js
sahf
test
out
cmp
outsb
pop
cmp
das
test
add
mov
addb
inc
sbb
pop
es
addr16
test
sub
sub
xor
mov
jo
stos
sub
movsl
sbb
dec
insb
std
lahf
mov
jp
dec
test
ret
mov
loopne
jp
jmp
adc
dec
int
dec
and
mov
loopne
sub
imul
sbb
adc
sub
push
lcall
scas
pop
fsubrs
xor
js
push
push
loopne
or
pop
mov
xchg
cmc
popa
add
xor
jmp
stc
cli
into
pop
jl
adc
adc
out
pop
clc
xor
mov
dec
push
or
fsubs
repz
adc
dec
or
ret
scas
cmpsl
lods
adc
mov
xorb
adc
mov
add
pushf
jle
rcrl
cmp
add
cmp
inc
mov
lea
dec
add
xchg
mov
cmp
jns
insl
lds
or
filds
mov
bound
xchg
mov
jae
jle
jb
and
std
leave
mov
test
inc
ljmp
push
cli
scas
in
adc
jne
inc
adc
rcll
movsb
cmp
outsb
imul
lea
bound
xchg
cmp
mov
sbb
sbb
jl
jmp
notb
das
ss
in
neg
pop
pop
jmp
mov
mov
add
jg
in
nop
sbb
repz
das
stc
rcrl
fimull
push
das
lea
mov
aad
pop
jge
cmp
dec
add
popf
add
lahf
lock
sub
jae
mov
aaa
mov
loope
mov
inc
es
dec
sbb
roll
push
xorl
push
cmp
shl
in
inc
mov
mov
arpl
outsb
cmpsb
leave
mov
mov
and
imul
or
fs
aad
push
jb
mul
ficomps
fidivrs
rcrb
adc
mov
dec
clc
jecxz
ljmp
add
pop
popa
jb
lock
jg
dec
jbe
dec
and
in
es
dec
fcmovnb
gs
test
rcll
pushl
rorl
lods
mov
pop
lock
scas
outsb
push
aad
mov
loope
js
lock
lret
inc
fidivl
cmpsl
push
push
xchg
cltd
push
lock
in
fcmove
addr16
mov
push
jge
popa
sub
daa
filds
into
dec
fstpt
aad
jae
test
flds
mov
aad
std
sarl
iret
lcall
sbb
mov
xor
icebp
out
das
or
mov
popf
xchg
xor
adc
mov
sub
push
jo
dec
add
sbb
mov
addr16
mov
inc
pop
imul
adc
das
xchg
lret
or
xor
mov
test
cmovp
push
repnz
cmp
loop
ljmp
inc
add
adc
lods
pop
cmp
mov
push
outsl
fadds
push
popf
fidivs
mov
aad
outsw
jne
dec
loop
xchg
pop
mov
iret
test
xchg
lock
dec
scas
or
lods
jb
add
fisttpl
sub
adc
pushf
hlt
xchg
movsl
cmpsb
dec
cmc
sub
xor
sbb
shl
int
and
loopne
or
xor
fucomi
sub
xor
ja
push
pop
cmp
push
es
inc
add
cli
and
pop
cwtl
nop
gs
xchg
hlt
daa
cmp
lcall
mov
loope
lea
pop
insl
movl
les
std
or
mov
std
xchg
outsl
mov
clc
in
sub
xor
xor
mov
xor
mov
mov
pusha
ds
dec
inc
shll
rclb
lods
adc
mov
cmp
and
cld
mov
xor
clc
ds
fiadds
loope
push
pand
cmp
inc
cmp
adc
out
out
shll
insb
repnz
test
mov
jmp
int
in
ror
cmpsl
mulb
test
xchg
mov
sbb
adcl
xor
or
jle
gs
lds
mov
arpl
mov
pushf
adc
push
xor
mov
scas
int
aas
adc
inc
push
cmpsl
or
pusha
inc
jp
xchg
jecxz
xchg
sub
pop
or
cwtl
mov
shrb
hlt
dec
or
pop
mov
or
test
loope
popa
jmp
sub
dec
shll
xchg
das
in
sbb
aad
idivl
fs
shr
loopne
sub
pushl
popa
xor
incb
jnp
xor
pop
mov
cld
and
or
dec
push
adc
cld
out
pop
loop
xor
shll
pop
ret
movsw
and
add
dec
enter
dec
jmp
push
loopew
adc
dec
insb
jnp
or
int
inc
xor
out
outsl
arpl
movsl
cmp
stos
ret
in
clc
arpl
cmc
cmp
mov
sbb
rcrb
push
testb
addr16
lods
int3
fists
lret
and
mov
xor
push
hlt
mov
cmp
dec
sbb
sub
pushf
pop
hlt
cmp
jl
pusha
popf
lahf
aaa
cs
cmp
jno
popa
in
das
adc
dec
or
or
xchg
aaa
call
addr16
mov
pop
mov
or
xchg
rclb
pop
xor
mov
in
orl
pop
push
push
jnp
xorb
cmp
inc
jg
cmpsl
sti
lahf
fcomps
push
mov
sbb
mov
push
sub
mov
daa
test
mov
add
dec
aam
sbb
jp
jns
shl
mov
test
sub
cmp
dec
push
dec
adc
rorl
or
and
sub
addr16
and
xchg
jecxz
in
call
sub
xor
pusha
out
lods
stos
mov
shl
xor
pusha
sub
xor
mov
test
jmp
negl
pop
sahf
addr16
popa
inc
mov
gs
cmp
out
mov
icebp
pop
xor
lea
cmpsl
and
outsl
pop
xchg
mull
ljmp
push
inc
cmp
and
mov
rcr
decb
movsb
inc
add
push
jns
loope
push
mov
jbe
jae
lds
mov
sub
insb
xor
push
jnp
inc
dec
outsl
pushl
push
sub
mov
mov
mov
adc
es
inc
cltd
out
push
and
push
in
sub
jge
imul
and
shl
fld
cmpsl
push
repz
sub
push
dec
mov
ret
outsl
pop
jge
jno
inc
ret
jecxz
sbb
sub
icebp
stos
push
fwait
movsb
xchg
pop
sahf
mov
aaa
pop
ljmp
or
arpl
dec
sub
loopne
hlt
insl
call
nop
je
push
inc
mov
mov
subb
jle
repz
inc
fs
mov
ret
mov
jne
fstps
inc
data16
push
ja
jae
iret
mov
imul
out
cmp
cmp
sub
data16
adc
into
cs
lods
int3
int3
cmpsb
sub
popf
pop
clc
push
mov
aaa
cmp
jo
out
mov
xor
gs
imulb
adc
retw
fs
fisubl
push
scas
orl
daa
xchg
mov
loopne
cmp
mov
xchg
mov
xchg
mov
inc
mov
or
add
lahf
adc
sub
imul
rcrb
imul
dec
xor
mov
test
adc
xor
adcl
aam
or
mov
shlb
adc
inc
cwtl
mov
xor
inc
loopne
outsb
mov
out
sub
push
cmp
dec
dec
adc
cs
rcrb
mov
loop
jmp
xor
mov
sub
and
mov
inc
dec
xchg
adcl
cmpsb
cli
bound
jmp
jp
inc
gs
loope
leave
jg
cld
hlt
mov
add
mov
adc
dec
aas
cmp
mov
ja
inc
adc
or
push
aas
std
dec
fists
testb
aad
subb
out
mov
in
outsl
cld
out
psubusb
lds
fs
rclb
fmul
outsb
lock
mov
pop
outsl
test
pop
nop
out
xchg
push
dec
cmp
mov
inc
dec
cmp
mov
mov
mov
outsb
repz
sbb
inc
ret
cwtl
or
or
sub
inc
in
xchg
adc
jmp
scas
fidivrs
mov
aaa
call
shlb
mov
add
imul
rcrl
push
inc
adc
and
dec
cmp
adc
sbb
test
mov
inc
adc
inc
dec
iret
mov
sbb
adcl
ret
js
add
cmp
cmc
sbb
je
sub
rcll
lret
ret
insb
jmp
fucomi
das
xchg
out
sub
sub
and
pusha
mov
xor
pop
mov
adc
push
dec
in
push
insl
jle
lret
add
dec
std
jb
pop
add
in
test
jmp
push
daa
mov
jne
xchg
jle
sbb
pop
das
and
in
enter
mov
int
in
inc
dec
push
mov
scas
pop
xlat
add
dec
sub
or
pop
sbb
sub
pop
pop
sub
inc
inc
and
mov
pop
cmp
aad
and
in
bound
xchg
fcoml
test
or
pop
aad
in
sub
lret
jb
add
loop
mov
lods
inc
out
xorl
xchg
push
mov
dec
imul
push
xchg
lods
xor
pop
mov
pop
add
sarb
mov
xor
adc
lods
mov
pop
xchg
dec
cmp
ljmp
lahf
fbld
xor
lahf
clc
xchg
aam
js
push
pop
iret
lahf
imul
pop
das
jmp
lcall
pop
pop
inc
jno
sbb
xchg
stos
pop
xchg
fldcw
adcl
outsl
jne
xchg
sub
inc
push
add
mov
or
mov
roll
enter
ss
push
movl
cmp
and
jl
sub
loopne
je
jnp
lods
mov
pop
jl
cmp
ret
loopne
and
mov
lcall
mov
or
std
popa
cmp
and
xchg
push
outsb
mov
ror
repnz
bound
bswap
sub
bound
mov
or
call
adc
adc
ljmp
lcall
rcll
rcl
xor
push
sbb
cs
add
dec
fwait
loop
mov
dec
iret
mull
jmp
xor
mov
jo
cs
mov
jmp
jmp
fldenv
ret
iret
dec
inc
mov
jge
jne
aaa
inc
std
jb
mov
aam
sub
cmpsb
sbb
ret
dec
sbb
push
dec
pop
hlt
popa
movsl
jecxz
mov
insl
push
sti
lods
adcl
xchg
or
xor
aad
fdivs
xchg
enter
inc
js
jae
lahf
fs
pop
testl
push
push
lret
jne
popf
push
add
je
push
out
or
jle
mov
dec
mov
cmc
xchg
int
and
pusha
dec
fadd
xor
cmp
jg
out
xor
lret
push
push
insl
pop
sbb
ret
fwait
loop
ret
repz
lcall
shl
mov
push
movsl
mov
scas
aas
or
pusha
cmp
outsb
out
shlb
in
dec
rorl
lods
repnz
jno
mov
cmp
leave
push
lea
inc
aaa
jb
or
call
dec
mov
xor
gs
dec
xor
cmp
in
rcrb
pop
daa
or
sub
ret
pop
bts
cltd
daa
or
cld
pop
pop
jmp
lret
rclb
loopne
and
adcl
push
fstpt
add
jg
push
pop
pop
test
mov
fcomps
shrb
int3
mov
mov
cld
test
push
jecxz
shlb
jge
test
fsts
pop
adc
jecxz
loopne
enter
xchg
or
sahf
and
push
mov
mov
lock
or
mov
cs
sti
dec
jb
mov
dec
lcall
ficoml
sbb
fistps
adc
add
gs
or
push
ret
cmp
inc
aas
inc
je
out
dec
jno
pusha
and
push
xchg
lods
in
xchg
lret
jmp
sahf
jne
mov
inc
jecxz
pusha
pop
cli
and
loope
iret
idivb
into
icebp
sahf
in
aas
fnstsw
std
add
subl
cmc
mov
inc
push
cmpsb
stos
shlb
je
in
dec
adc
in
jae
dec
xchg
jg
adc
cmpsb
lret
fidivl
je
les
push
jno
insl
xor
mov
and
xor
lds
pop
add
pop
mov
stos
std
nop
cmp
mov
fldcw
scas
test
ja
enter
jae
aam
xchg
test
fwait
push
push
imul
repnz
insl
mov
jl
stos
lods
mov
lock
sub
fmull
je
mov
ja
insb
sbb
cmpsl
or
push
loopne
adc
mov
mov
adc
add
ljmp
mov
push
cmp
mov
mov
push
ret
cmp
bound
aad
sub
stos
stos
in
cmp
mov
or
adc
fisubs
or
pop
sub
sub
test
jo
sbb
adc
or
mov
push
or
scas
add
aaa
sub
in
cltd
mov
rcrl
mov
jmp
xorb
dec
mov
into
mov
cli
xor
push
aas
mov
sub
mov
nop
mov
lret
sahf
jb
mov
stc
adc
imul
xorb
sarb
inc
pop
insl
inc
jo
mov
mov
mov
add
pop
aad
inc
cmp
dec
aaa
notl
adc
insb
popf
test
xor
pause
call
loop
fdivr
popf
xchg
dec
into
arpl
fisttpll
inc
shlb
scas
lods
outsl
call
jb
xchg
stos
nop
pusha
scas
push
clc
dec
scas
add
loope
mov
xorb
test
pop
scas
outsl
dec
or
xor
pop
mov
push
push
scas
sti
sahf
lret
push
fwait
in
mov
jne
cmpsb
sbb
out
imul
std
push
push
sahf
sbb
mov
popa
or
add
xchg
pop
push
repnz
call
inc
dec
push
daa
xor
lret
dec
loope
sub
jne
cmp
jae
mov
mov
inc
jnp
inc
out
and
jp
outsl
mov
inc
cld
cmp
mov
push
cmc
rcll
cmp
dec
push
jge
mov
ja
pop
gs
jb
mov
test
leave
dec
mov
and
or
outsb
inc
ret
cmp
ret
int3
dec
scas
bound
xchg
xor
loop
dec
add
xchg
xor
mov
push
jmp
ret
scas
mov
sbbl
push
in
sbbl
aaa
outsb
test
imul
xchg
pushf
fnstsw
sub
inc
call
popa
sbb
aas
stos
mov
addb
pop
fs
mov
std
dec
sbb
gs
mov
or
mov
mov
inc
out
and
fsub
lahf
stos
push
pop
mov
jns
in
sbb
in
clc
sbb
ret
cmp
and
stos
push
xchg
mov
sahf
xchg
push
and
clc
or
dec
jnp
adc
xchg
lret
cmp
mov
fadd
cld
in
jmp
dec
push
add
sub
cs
or
or
cmc
and
out
stos
or
insl
jg
fnsave
mov
inc
mov
insl
xor
or
sbb
int3
ret
adc
jmp
push
inc
xchg
push
cmp
push
ss
loop
js
jmp
clc
jg
inc
pushf
add
pushf
flds
cmp
fsubrl
not
dec
stos
mov
and
cmp
cmpsb
cld
adc
sbb
pushf
ja
fwait
mov
pop
mov
into
jg
movsb
xor
rorl
or
mov
in
test
insl
in
movsb
aaa
mov
or
clc
add
push
out
and
daa
cmp
jnp
sub
push
lret
pop
out
repz
xchg
sub
push
inc
mov
addb
sub
movsb
sbb
jg
stos
cmp
sbb
outsl
in
jl
mov
mov
hlt
sub
outsb
stos
push
cmpsb
sub
in
xlat
mov
xor
sbb
xor
add
or
cmc
imul
push
sar
stos
rcl
sarb
fnstenv
lods
in
bound
test
icebp
pop
xor
std
stc
pop
add
xor
pop
mov
pop
mov
stos
pop
xchg
fisubs
jmp
cmp
mov
stos
test
fimull
push
mov
inc
out
scas
cmpl
inc
lahf
fnstenv
jmp
jmp
inc
and
fsts
mov
movsl
dec
cmp
dec
push
adc
aaa
insb
push
shrb
sbb
repz
jmp
lret
leave
js
aam
adc
xchg
jns
daa
in
dec
shrl
add
lret
jmp
arpl
lcall
push
mov
push
xor
push
addr16
cmp
out
stos
lds
cmp
loope
sub
lcall
popa
testb
stos
stos
cs
test
dec
cmp
xchg
sbb
inc
push
stos
nop
imul
pop
dec
mov
pop
std
pop
jecxz
dec
lret
jne
or
fdivrp
faddl
out
addl
faddl
rcrl
orl
rcrl
adc
addl
int3
adc
leave
pop
xor
or
std
rclb
or
loopne
and
pop
pop
iret
shr
inc
or
lods
psllw
mov
lahf
pop
inc
pop
cmpb
pop
pusha
and
leave
push
test
lock
cmpsb
out
lret
dec
stos
xlat
outsl
cmpsl
sub
push
pop
push
sbb
pop
xchg
stc
push
repnz
mov
andl
xor
mov
xchg
fnstcw
es
lods
sti
je
cmp
xlat
aad
fistpl
jp
mov
push
jle
adc
int
js
fs
xor
sbb
push
xchg
daa
inc
pop
sub
sub
and
sbbl
cmpsb
and
pop
pop
jp
jb
leave
shll
bnd
dec
jb
imul
xchg
test
mov
or
mov
cmpsl
rorl
je
cli
adc
cmpsb
push
adc
pop
inc
dec
xchg
pop
leave
push
or
xchg
cmc
dec
pop
push
hlt
sbb
addl
sbb
add
xchg
jle
mov
sbbl
fisubrl
repnz
cmc
data16
clc
lahf
mov
sub
mov
lret
cmp
popf
pop
into
dec
outsb
inc
ret
hlt
xchg
add
ss
outsl
jmp
pop
lahf
in
adc
pop
rcll
dec
dec
adc
popf
jo
xchg
outsb
xor
mov
push
mov
orl
jg
loope
xchg
call
gs
sub
cmp
mov
aad
arpl
xchg
dec
inc
repnz
lret
adc
enter
jno
sub
dec
mov
or
jg
stos
xlat
and
dec
int
mov
xchg
xor
push
jo
jnp
xor
je
xor
add
rclb
jle
gs
lds
mov
das
hlt
pop
jmp
adc
xor
mov
fstl
cmpsb
cmp
push
push
xchg
xor
sub
xor
aam
sbb
add
jmp
mov
push
pop
or
or
or
jbe
fs
jnp
mov
imul
push
into
iret
sub
sbb
mov
ds
adc
sbb
out
mov
imul
icebp
cmovle
in
xor
mov
ss
into
andb
push
aad
dec
stos
fbstp
mov
cmc
cmp
and
inc
ljmp
xchg
jl
sti
and
fwait
push
or
mov
jnp
push
push
aaa
mov
inc
mov
ja
push
mov
inc
cmp
push
call
movsl
js
imul
dec
shll
cmp
out
mov
add
or
jne
sub
mov
mov
dec
aam
mov
sahf
mov
jmp
mov
mov
jno
sahf
rolb
outsl
cmc
cmpsl
dec
xchg
add
inc
add
icebp
movsb
cmpsb
adcl
add
shll
adc
jnp
mov
or
cmpsb
ret
int3
cmp
rcll
icebp
rcrl
sahf
shlb
mov
push
les
sbb
aad
sub
aaa
adc
addb
loop
sub
and
outsb
adc
int3
fwait
imul
dec
das
iret
ja
popf
mov
jns
faddl
or
and
jl
shr
imul
xlat
and
cs
idivb
adc
xchg
mov
adc
jmp
pushf
ret
lea
adc
xor
cmp
push
mov
stos
jno
inc
lahf
sub
and
mov
fistl
or
add
rol
bound
cmp
mov
cli
sub
lcall
lods
nop
jl
sahf
dec
stc
test
add
sbb
mov
adc
and
or
nop
aad
and
or
out
scas
dec
inc
movsl
ljmp
mov
rcll
adc
popf
repz
pushf
ret
popa
out
subb
and
xor
adc
push
cmp
filds
cmp
lds
xchg
mov
pop
fdivrl
fistl
mov
test
int3
lock
pop
aaa
push
ljmp
mov
aad
inc
add
loopne
inc
test
and
or
call
or
enter
inc
popf
lods
shrl
inc
test
jecxz
or
pusha
push
insb
or
push
jecxz
xchg
lcall
inc
fidivrs
pop
icebp
fs
cmp
fs
dec
jecxz
adc
dec
xchg
loop
shll
and
arpl
mov
scas
nop
cmp
mov
sarl
jecxz
sbbb
insb
loope
xor
test
shrl
popa
adc
lods
into
mov
pop
lret
xchg
js
in
sbb
test
fidivrl
out
aaa
inc
push
icebp
lods
and
mov
je
adc
ss
shr
lods
ud0
sbb
hlt
add
stc
or
mov
push
dec
es
fisttps
pop
add
pop
mov
add
xchg
xchg
into
scas
inc
jo
or
pop
ret
pop
fwait
pop
gs
dec
dec
sbb
scas
sub
mov
shll
out
sbb
push
repz
outsb
das
push
dec
enter
insl
cmp
or
mov
pop
mov
xchg
mov
adc
mov
inc
pop
dec
test
push
testb
add
pop
inc
in
imul
bound
cmpsb
loop
out
aas
sbb
ja
push
pusha
cmpb
roll
inc
lea
loopne
fcmovnb
cmp
push
dec
int
mov
cld
mov
xlat
jbe
jg
xor
jo
push
les
mov
and
dec
pop
outsb
lcall
fisubl
adc
xor
rcrb
sbb
in
clc
in
cmp
fcmovu
std
xor
or
and
xchg
pop
sub
pop
mov
movb
iret
pop
je
sub
sarb
mov
bswap
movl
movsb
push
ss
and
cmpsl
adc
jb
adc
inc
pop
add
jge
xchg
mov
push
cmc
insb
lret
enter
test
mov
jl
pop
push
push
fstp
stc
dec
aam
lcall
inc
push
enter
dec
push
cmpsl
pop
lret
bound
mov
add
xor
stos
mov
jmp
outsb
sbb
cli
sub
out
push
fwait
mov
sbb
jne
das
jne
dec
cmp
pop
push
jbe
rorb
fwait
cmp
sahf
mov
shlb
insb
or
push
outsl
mov
lcall
and
inc
popf
std
rcrb
lods
mov
mov
test
add
fsubr
adc
pop
fcompl
push
or
out
repz
push
call
push
pop
sbb
ljmp
enter
and
insb
pop
int3
test
shlb
or
stos
mov
ret
lods
jge
mov
in
das
ss
call
jle
ljmp
sub
mov
test
into
fidivrs
jae
sub
push
jno,pn
mov
sub
adcl
pushf
ds
fisttps
stos
push
test
call
cmp
lods
mov
push
mov
and
mov
andl
xchg
aaa
push
jns
lods
adc
pop
push
dec
ds
dec
arpl
mov
mov
ds
cld
ds
inc
lods
mov
cmpsl
inc
leave
cmc
loopne
cld
aaa
sti
fsubs
idivb
gs
lcall
movsl
cmp
and
movsb
loope
dec
les
cmp
bound
gs
outsb
addr16
jbe
dec
xor
xchg
pop
adc
push
cld
cmpsl
push
in
adc
idiv
hlt
dec
jno
leave
pop
adc
jnp
sub
sub
std
xchg
and
add
movb
mov
and
decb
jnp
icebp
mov
inc
mov
pop
mov
adc
dec
pop
mov
mov
in
imul
pushf
add
cmp
outsb
cmp
dec
mov
pop
jno
mov
push
lock
dec
notl
daa
push
cmpsb
es
ss
iret
out
call
or
loopne
fs
pushf
iret
dec
jae
nop
or
sub
and
push
popa
pusha
inc
dec
and
adc
add
jl
and
xchg
leave
mov
mov
adc
sub
cli
mov
adc
pop
int
xor
jne
rolb
lret
mov
movsb
pop
add
jp
imul
jb
daa
push
push
imul
adc
cmp
cmp
test
sub
adc
mov
pop
popa
subl
ret
fbld
repnz
push
ds
movsl
stos
add
mov
xchg
mov
cltd
or
cs
adc
mov
lods
mov
fcompl
repnz
gs
lcall
adc
das
sub
mov
pop
adc
push
mov
scas
stos
fs
test
aad
sbb
sbb
jle
flds
mov
and
xchg
mov
fistpll
scas
add
push
stos
push
cli
jmp
push
outsl
mov
dec
cs
in
xchg
dec
pop
sub
inc
add
cli
cmp
inc
cmc
pushf
sub
mov
into
lret
add
xchg
adc
out
out
fildl
idiv
sarb
fnstcw
je
sbb
shrb
mov
push
inc
outsb
or
fcompl
fistps
mov
pop
je
and
push
jmp
xchg
lock
jp
cmp
leave
sub
out
dec
outsl
dec
int
addr16
enter
push
push
test
inc
mov
pop
stos
adc
mov
out
movsb
jl
fsub
stos
mov
ss
mov
shll
repnz
push
adc
add
cli
mov
ss
call
repnz
jo
sbb
inc
dec
mov
sub
push
push
dec
jge
xchg
insl
add
inc
sbb
bound
adc
sub
in
push
sbb
jae
dec
ja
aaa
shlb
sub
popf
mov
pop
in
sub
and
daa
subb
sub
cmp
leave
jmp
les
aad
scas
rclb
int3
in
ss
lods
or
mov
push
or
shl
test
pop
fisttps
and
dec
sbb
aas
add
cltd
push
fwait
mov
cmpl
out
test
gs
das
mov
imul
lahf
push
lret
dec
test
jo
stc
cwtl
jo
xor
gs
loop
mov
jo
cmp
dec
cmp
imul
arpl
ds
sbb
int3
cli
ja
adcl
movsl
dec
add
mov
sti
mov
jmp
mov
sahf
cmc
sub
je
jmp
jbe
iret
jg
stos
and
sbb
or
sbb
int
xchg
fcoml
leave
shrl
popa
add
sub
out
adc
inc
daa
rcrb
nop
fimull
xchg
pop
fcomps
jb
adc
loopne
cmp
push
mov
pop
loop
rcrb
repnz
mov
mov
add
mov
mov
mov
pop
mov
xchg
imul
dec
movsb
jmp
adcl
lahf
js
inc
cmc
pop
stc
popa
mov
arpl
shlb
pop
es
inc
mov
test
nop
push
jne
shll
cs
or
or
gs
dec
mov
pop
mov
jae
jp
lcall
or
xchg
mov
inc
sbb
dec
in
pop
popa
fnstenv
imul
in
mov
jecxz
addb
bound
pop
rcrl
fistpl
and
loope
xchg
shlb
add
push
imul
mov
andl
xor
sti
xchg
push
mov
mov
mov
dec
cmc
stos
nop
mov
jnp
mov
popa
sub
or
jmp
dec
maxps
inc
push
push
sbb
std
pop
inc
sbb
push
dec
je
mov
jecxz
out
idivb
xchg
jne
movsl
stc
lcall
sub
fwait
mov
add
insb
sbb
test
mov
stc
pop
push
xchg
mov
xor
mov
jge
jl
enter
mov
pushf
cmp
mov
popf
in
push
lahf
pushf
xor
push
shll
sub
pop
js
or
stos
je
cmpsb
jns
push
or
sub
mov
push
dec
or
leave
xchg
sub
out
dec
ljmp
sbb
push
pop
mov
push
nop
fwait
cs
inc
inc
sbb
stos
xchg
or
hlt
sbb
pop
and
jg
arpl
sbb
and
sbb
ljmp
inc
std
test
xchg
dec
cmp
ss
add
or
sub
clc
sub
or
cmp
stos
add
aaa
insl
pop
jb
and
fs
lods
fs
mov
sbb
adc
out
dec
call
sbb
es
mov
lods
out
out
mov
cmc
add
popa
imul
cmp
or
scas
lret
subb
dec
lock
outsl
add
push
cmp
pop
xchg
sub
lret
add
cmpsb
cmp
pop
neg
jne
bound
loope,pt
pop
aas
addb
mov
xchg
sbb
les
movq
adc
lret
mov
pop
dec
jge
dec
jecxz
das
mov
ret
adc
pop
push
xchg
lds
push
dec
or
ret
push
dec
and
pop
xor
sub
adc
dec
movsl
lret
adc
call
outsb
rol
jne
lret
test
ds
inc
out
icebp
push
pop
outsl
loopne
inc
cmc
in
xchg
mov
subl
or
rorb
out
fcom
jne
or
pop
das
sbb
xor
ret
and
mov
xor
dec
repnz
lahf
mov
lahf
pop
dec
mov
inc
lea
pop
push
cmpsl
mov
sbb
lcall
xchg
mov
xlat
lods
nop
push
sbb
imul
xor
and
pop
inc
stc
test
imul
into
pop
jmp
enter
je
lock
push
int3
in
mov
enter
rcrb
xor
insl
out
fcmovbe
jmp
sub
loope
inc
daa
idivl
loope
mov
cld
or
hlt
jb
sub
cmp
dec
adc
push
push
mov
pop
jecxz
jnp
and
orl
mov
mov
rclb
lods
in
sti
das
pushf
into
ljmp
pop
lock
and
mov
test
fsts
pop
out
sub
ljmp
or
scas
cmp
imul
push
fcmovnu
scas
test
add
stos
mov
push
xchg
mov
pop
cmp
adc
iret
loop
sti
lcall
push
inc
fmulp
dec
and
pop
adc
jle
sub
into
mov
lods
lock
hlt
mov
inc
out
imull
cmp
mov
pusha
pop
lret
xchg
jb
pop
add
cwtl
movsb
fisttps
add
pop
jecxz
sbb
mov
mov
xchg
mov
cmpsb
adc
xchg
stos
lods
and
mov
cmpsb
cltd
bound
fidivl
xchg
in
out
fwait
pusha
push
jno
mov
movsl
shlb
cmp
push
add
or
or
or
sbb
out
jge
sti
adc
sub
xor
inc
or
in
ror
mov
clc
test
popa
mov
imul
cmp
or
push
sbb
ss
sbb
shl
mov
rolb
jle
mov
mov
int3
add
ljmp
dec
jns
inc
in
jbe
adc
fistpll
cmp
sbb
shl
addr16
dec
jns
inc
cmp
xorb
frstor
dec
fld
sub
mov
or
cmp
sbb
lahf
pop
movups
and
pusha
loop
sahf
sub
sub
xchg
in
loopne
adc
adc
xchg
ljmp
sub
fsubs
inc
jge
mov
or
nop
repnz
pop
cmp
decb
movsb
iret
es
mov
jmp
adc
nop
inc
mov
mov
jg
sbb
sub
and
pop
in
mov
outsl
cmpsl
idivl
test
hlt
push
loopne
sub
jle
pushf
mov
dec
popa
jl
xor
xor
out
xchg
roll
sub
jb
testb
cmp
jl
jecxz
cmp
jg
dec
in
ss
cwtl
es
test
adc
push
or
push
test
cmc
rcll
dec
in
ss
xor
xchg
sbb
jbe
add
bswap
sub
jecxz
mov
mov
dec
add
icebp
lret
out
jo
stos
pop
ja
adc
scas
or
and
xor
sbb
sbb
lods
mov
aam
inc
sub
fs
pop
cmp
dec
shl
jb
mov
or
inc
jne
shlb
jno
imul
shrl
imul
fcmove
call
mov
or
movsl
mov
cpuid
out
add
popa
push
test
jno
cmpsb
fstl
in
cmc
fcmovb
insl
into
cmp
or
loop
xchg
sti
xchg
add
pop
cmp
iret
inc
fldenv
mov
lcallw
leave
insl
ret
adc
ss
push
aad
out
test
inc
sub
inc
or
mov
adc
popa
call
shl
clc
mov
adc
add
and
mov
fwait
sbb
dec
iret
or
jle
fwait
ret
clc
daa
ret
cmp
push
adc
pop
pop
mov
int
dec
psllw
sahf
loop
adc
dec
lcall
sub
hlt
fisubrl
push
movsb
sub
mov
loope
jae
scas
jge
sub
mov
push
fwait
mov
mov
xor
in
cmp
mov
cwtl
popf
inc
data16
in
movsl
aad
ret
test
xchg
fiadds
aas
notl
test
repz
push
ja
sub
inc
lret
push
adc
divps
fs
das
or
add
mov
mov
cmp
fwait
jb
movsb
in
aas
dec
adc
cmp
pusha
mov
add
test
ja
test
push
push
adc
mov
imul
or
xor
xchg
xor
pushf
hlt
sub
clc
rcr
dec
push
xor
jmp
lcall
cld
mov
mov
xor
insl
arpl
jne
sub
xchg
mov
hlt
in
push
adc
decl
mov
push
mov
pop
fwait
mov
mov
push
sbb
sbb
adcb
inc
imul
xor
dec
mov
sub
dec
jg
data16
and
lds
or
sbb
sbb
add
push
lods
lods
xor
hlt
test
and
das
push
jmp
or
shlb
jns
xchg
cmpb
lcall
mov
push
addr16
les
int
mov
insl
cmp
insb
imul
push
outsb
int
nopl
cltd
cmpsb
mov
iret
lods
mov
fimuls
xchg
aam
fldt
jnp
repz
js
mov
out
jp
bound
jmp
jge
popl
lds
cld
adc
rcrb
ljmp
sahf
push
ret
das
ret
mov
stos
movsb
sub
addr16
jp
push
jne
and
mov
mov
icebp
jae
xor
xlat
and
sbb
arpl
les
xor
in
xlat
mov
es
mov
or
aas
les
push
inc
out
jno
dec
push
icebp
daa
scas
rcrl
pop
nop
mov
sub
out
out
push
mov
jl
pop
inc
mov
inc
sbb
push
xor
mov
in
push
adc
loope
test
shll
and
cltd
adc
clc
cs
es
mov
cltd
add
pop
ja
pushl
adc
ja
shll
test
adc
pusha
mov
push
cmp
addr16
dec
jg
fmull
jbe
cmp
lods
add
mov
sar
lods
mov
xchg
cmpsl
mov
cmp
push
xor
shlb
fs
mov
push
mov
sbb
sbb
insl
adc
push
mov
or
jo
and
add
xor
jb
push
ficomps
test
mov
xor
lret
inc
jle
pop
mov
inc
pop
pop
xchg
fstpl
aaa
cs
movsb
sub
push
push
jns
push
fisttps
repnz
push
push
xor
shl
sub
dec
fs
outsl
rclb
icebp
mov
mov
mov
in
aas
in
lods
out
push
stos
out
jge
sbb
cmpsl
fsubrl
xchg
mov
pop
and
outsb
pop
fcoml
push
test
push
mov
cld
popf
add
push
dec
push
or
mov
fdivrs
xchg
add
cmc
lret
outsb
out
xor
cmp
dec
shll
imul
in
and
in
iret
pop
pop
pop
jmp
push
std
popa
jno
xchg
mov
inc
out
push
or
lcall
negb
fwait
scas
mov
inc
mov
mov
sub
or
ja
int3
in
ds
pop
mov
xchg
das
iret
in
lret
jae
push
mov
outsl
inc
test
stc
int3
icebp
push
dec
adcl
and
mov
mov
das
add
mov
aam
test
jo
not
xor
into
mov
jbe
pop
aas
mov
sbb
xchg
fimuls
outsl
lds
out
ss
inc
xor
inc
dec
pop
sub
inc
jl
stc
xor
fsubrl
push
lret
jnp
xchg
insl
sbb
adc
add
repz
shl
inc
inc
mov
fildll
push
mov
inc
inc
shl
cmpsb
add
ss
divl
lret
pop
icebp
mov
adc
pop
push
leave
xchg
int
inc
mov
add
cmp
inc
arpl
or
out
pop
mov
push
mov
push
sbb
test
int
xchg
sahf
fwait
cmp
addb
add
sub
xor
jl
std
jae
dec
sub
xor
out
pop
ret
jns
xchg
lds
xor
loope
dec
sub
xor
out
sbb
inc
iret
jmp
cmpsl
mov
inc
cli
add
xchg
ljmp
add
adc
popf
adc
iret
out
mov
fnstsw
xchg
pop
ljmp
ret
pop
mov
jb
mov
jns
pushf
cmpb
or
lock
negb
mov
outsl
inc
mov
and
bnd
inc
push
sbb
les
sti
fisubl
inc
icebp
xor
mov
add
sbb
movb
inc
pop
neg
cmpsl
pop
fs
mov
xor
pop
add
lods
mov
add
std
pop
scas
push
stos
xor
repz
mov
mov
pop
lds
cmp
push
call
xchg
dec
rclb
or
je
popa
ret
aas
in
or
movsb
cld
call
dec
mov
mov
in
sbb
mov
sub
ret
pop
cmpsl
cmp
sarl
and
int3
andb
bnd
pop
js
add
xor
addr16
push
call
sti
jbe
into
jmp
fisttps
sar
mov
adc
xchg
imul
aad
out
in
sbb
ja
pop
insl
ljmp
dec
xchg
sahf
hlt
pusha
xor
out
rolw
shlb
ret
push
and
sti
arpl
xchg
jnp
pop
loop
cmp
sub
es
jmp
jns
enter
or
mov
dec
popa
pop
iret
xchg
daa
inc
pop
push
arpl
stos
filds
inc
adc
out
push
mov
mov
xlat
add
jp
push
pusha
in
leave
flds
xchg
sbb
dec
pop
ret
xor
sbb
ret
sub
xchg
dec
and
jb
les
cs
mov
and
push
aas
xor
mov
scas
loopne
pop
xor
mov
ret
xchg
mov
xchg
sbb
and
movsl
cwtl
test
ficoml
lds
mov
out
push
stos
shlb
setns
cltd
sbb
xor
xchg
mov
mov
mov
dec
ror
scas
frstor
es
jb
cmp
out
loopne
sti
adc
jg
outsb
stos
in
lcall
ljmp
sarl
das
fwait
orb
daa
sarl
test
inc
loop
mov
dec
mov
mov
pop
rol
daa
leave
xor
sub
stos
and
and
pop
add
xorl
dec
insb
inc
sbb
sbb
push
scas
mov
dec
cmpsb
imul
mov
cmpsb
out
mov
fsubr
ficoml
mov
jge
popa
jecxz
mov
clc
jne
fbstp
dec
lock
ds
xor
sub
pop
sti
adc
clc
push
lods
int
lahf
push
movsl
pop
outsl
je
xchg
ret
xchg
mov
aas
faddl
adc
sub
xchg
int3
sti
lcall
mov
jge
jmp
xchg
mov
and
push
leave
shrb
out
fsqrt
sarl
adc
pop
cmpsl
mov
xchg
jl
inc
mov
push
mov
cmp
inc
loope
out
es
imul
stos
mov
addr16
push
xor
push
test
mov
xor
and
pop
or
adc
aaa
dec
insl
cmp
jb
xor
mov
pushf
cli
pop
mov
jbe
jae
adc
xchg
lahf
jno
push
adc
mov
lret
ljmp
cmc
sbb
dec
and
bound
jns
and
pop
popa
mov
or
sbb
push
push
cli
and
cli
repnz
pop
mov
imul
call
pushf
cwtl
nop
jge
mov
sbb
jbe
cmp
sbb
das
popa
jns
or
in
push
dec
int3
sub
es
sub
inc
hlt
cmp
pop
bnd
fmull
cmp
xchg
dec
icebp
notb
and
int
daa
ret
test
repz
jle
sub
xor
xor
pop
mov
inc
repnz
push
mov
xor
movsb
push
inc
jnp
inc
jbe
push
push
andl
shrb
pop
cmc
pop
stos
popa
in
mov
out
out
addr16
inc
movsb
lret
daa
jbe
loop
sarb
dec
bswap
xchg
add
sahf
push
cmc
mov
push
bound
inc
mov
push
loop
xor
jne
imul
stos
in
leave
sbb
jb
in
cmpsb
sahf
pop
lea
lods
je
adc
add
in
data16
mov
int3
and
jo
inc
adc
push
pop
jo
dec
adc
arpl
push
push
out
jmp
popa
fsubrs
lahf
cmpl
fidivrl
rcll
in
add
lcall
jnp
ljmp
jl
and
lret
mov
repnz
out
mov
dec
push
cld
mov
icebp
xchg
add
or
scas
pop
cmp
push
jmp
adcl
sti
xchg
mov
lret
xchg
pop
loopne
mov
dec
mov
jne
adc
push
push
sbb
sbb
in
inc
out
push
test
push
and
int
rolb
cmc
test
loop
push
pushf
test
sbb
cld
sub
cmp
mov
xchg
arpl
mov
cmp
loop
xchg
sub
pop
repz
fisubrl
fstpl
xor
ds
insl
cmp
cmc
or
push
jb,pn
sbb
xlat
ja
and
cld
pop
test
insb
lods
cmc
inc
jbe
inc
inc
push
imull
mov
sub
mov
idivl
sbb
fldt
push
adc
xor
mov
pop
mov
scas
sub
insb
mov
sbb
sub
cmp
jp
cmpsl
jo
sbb
ret
cli
sub
pop
cmpsl
hlt
mov
dec
push
sub
test
fiaddl
xchg
or
mov
push
mov
or
mov
and
and
xchg
out
fidivrl
push
xor
xor
dec
xchg
add
adc
daa
xchg
mov
push
jne
repnz
pop
jmp
mov
repnz
fs
pop
lods
and
xchg
add
jle
out
pop
cmp
in
cmp
and
push
std
jp
xor
cltd
mov
jne
inc
sar
cmp
xor
xchg
daa
pop
xor
xchg
cmp
cli
cmp
test
dec
push
data16
je
and
cmc
popf
xchg
pushf
add
gs
decb
scas
lods
dec
jp
sub
stos
xchg
push
std
int3
and
fcmovb
pop
mov
push
rol
jge
test
lcall
cmc
push
stc
jecxz
adc
hlt
lods
rcrb
mov
fs
fs
cld
jb
test
mov
xchg
sar
cmp
inc
aaa
xchg
xchg
div
js
and
jmp
inc
cwtl
add
dec
adc
les
cli
and
sbb
mov
loope
jne
sbb
pcmpgtb
pop
dec
outsb
fisubrl
or
imul
lret
mov
clc
int
push
jno
jl
mov
ljmp
mov
mov
mov
sub
jg
add
in
into
jmp
mov
pop
xor
jb
movsb
or
idivl
push
insl
or
fsubrl
jbe
lock
shl
jecxz
pop
arpl
mov
fs
push
mov
mov
sahf
pop
aaa
sbb
sbbl
scas
mov
xchg
subl
lods
pop
xchg
inc
or
mov
adc
jp
out
pusha
nop
in
push
addr16
xchg
jo
inc
cmp
xchg
cmp
push
fstl
cld
push
mov
xchg
es
outsb
test
mov
popf
and
cmp
or
dec
or
loop
jb
mov
outsl
jnp
loopne
sbb
adc
cwtl
lds
out
fcomp
je
cmc
lock
mov
add
andl
ljmp
or
std
cltd
mov
add
add
incl
into
mov
xor
or
xor
sub
xchg
push
subl
and
jge
mov
cmpsb
out
vcmppd
subl
je
push
lea
push
sti
mov
inc
data16
pop
add
fildl
push
lahf
lock
incl
out
leave
pop
mov
xor
pop
sub
fwait
inc
push
mov
xchg
cmp
fldl
notl
or
or
scas
mov
js
dec
ficoms
cmc
xchg
dec
pop
cmpsl
bound
sbb
movsb
rolb
mov
mov
sbb
lods
clc
es
cmc
scas
pusha
out
add
mov
or
das
xor
gs
mov
enter
dec
test
lret
xorb
inc
ret
outsl
aaa
dec
cmp
sub
mov
xor
mov
or
and
repnz
push
inc
cmp
vpackuswb
pushf
std
outsl
rcr
xor
lret
sub
adc
and
push
inc
lods
aam
addl
mov
jb
or
je
cmp
rorb
xchg
push
imul
adc
cmp
rcrb
pushl
in
push
shl
cmpsb
cld
gs
add
out
mov
jnp
sbb
out
loope
fnstcw
dec
fwait
mov
mov
pop
and
mov
adc
adc
fdivl
in
jg
pop
mov
mov
scas
or
xorb
inc
xchg
mov
push
int
push
sarb
in
mov
stos
pop
xor
mov
mov
pushf
mov
inc
fst
xchg
dec
pop
inc
fdivr
and
mov
add
lret
sbb
adc
lret
pop
pop
stos
jp
cmp
icebp
xor
aaa
add
andb
int
lods
mov
call
scas
mov
xchg
adc
test
lcall
xor
std
xor
mov
pop
movsb
sbb
popf
cs
sub
mov
sub
shll
inc
xor
js
cmp
sub
out
mov
adc
xchg
les
xchg
sbb
or
pushf
sbb
add
lcall
dec
cmc
outsl
push
dec
test
sbb
jp
cmp
mov
mov
lea
push
in
aam
and
pop
pop
fnstcw
test
mov
js
cs
pusha
xorl
pushf
dec
aad
lods
inc
inc
mov
sbb
push
std
out
fildl
cmp
xchg
test
cmp
clc
and
mov
lea
pop
lcall
pop
mov
jg
iret
shrd
ret
mov
mov
outsl
pop
xor
cld
movsl
inc
and
lahf
cmpsb
inc
hlt
mov
cld
sbb
mov
testl
cmpsb
cmpb
mov
test
push
lahf
ffreep
xchg
popl
daa
jecxz
imul
stos
pusha
popa
xchg
out
js
push
addb
leave
sbb
pop
aaa
cld
ret
loopne
xchg
daa
or
es
jbe
mov
xchg
xchg
test
xor
stos
inc
dec
test
inc
dec
in
testb
outsl
int
or
cmpsb
sub
addb
push
inc
add
dec
cs
sub
icebp
test
xor
shlb
out
shll
call
fwait
mov
xlat
loopne
lods
sti
dec
stc
cld
xchg
imul
mov
push
pushf
inc
shrl
mov
aas
fs
and
test
mov
jno
insl
lea
pop
xor
mov
mov
jmp
pusha
cmpl
aad
cmp
jecxz
in
mov
adc
jge
int3
jbe
and
fcompl
enter
pop
orb
das
mov
xchg
les
xchg
pop
push
sub
shrb
mov
xchg
xor
mov
into
mov
push
add
push
or
hlt
jge
mov
pop
pop
push
jecxz
loope
ljmp
inc
cld
push
outsb
cmpsb
fs
scas
ds
mov
xchg
mov
push
sbb
inc
adc
arpl
xchg
cli
insb
xor
jno
xchg
fisttps
iret
aam
or
xchg
push
popa
inc
cmpsb
sbb
ret
push
jbe
jb
das
ret
adc
jnp
xor
mov
cld
mov
nop
pop
add
xchg
jnp
out
pop
jg
bound
out
mov
mov
cmp
mov
inc
inc
push
xor
xor
outsl
or
lock
mov
jg
jne
fdecstp
jne
out
pop
sbb
inc
mov
jne
dec
mov
ds
inc
stos
sbb
push
fwait
mov
inc
mov
test
dec
iret
cmp
ljmp
call
pop
jbe
movsb
pop
push
mov
lea
mov
and
outsl
or
mov
sbb
lock
ficomps
mov
push
aas
mov
fs
je
out
pop
xor
fcmovne
enter
inc
notb
out
dec
mov
xor
test
jg
lahf
mov
rol
popw
lods
ja
lds
cwtl
dec
add
jmp
cmp
cld
insb
out
xor
andb
cltd
mov
data16
gs
or
add
lcall
and
pop
sbbl
lcall
and
subb
insb
out
cltd
xor
mov
jecxz
lea
test
hlt
mov
mov
cmp
and
lock
lods
inc
repnz
xchg
mov
adc
shr
js
cmp
insb
or
ds
mov
xor
mov
fisttpll
ds
cmpsl
orb
pop
fisttps
jl
push
test
adc
adc
xchg
cs
cs
neg
enter
shl
mov
dec
arpl
sub
xor
leave
stc
sub
jecxz
fwait
mov
sbb
push
inc
fsubrs
inc
mov
inc
arpl
xchg
cmp
pop
push
daa
xchg
je
sahf
cli
push
cs
sbb
bound
add
subl
jp
push
cmpsb
sbbb
movsb
repnz
daa
es
push
daa
cmp
pop
ret
sahf
ret
jmp
aaa
aam
sub
scas
stos
pop
test
or
fnstenv
mov
mov
or
mov
repz
push
inc
sbb
fs
into
out
test
loope
push
lret
mov
stos
pushf
into
mov
mov
into
xlat
mov
rorl
and
ret
add
mov
gs
pop
bnd
outsl
sbb
andl
cmp
popa
mov
imul
aas
mov
xor
jmp
or
pop
pop
sub
arpl
ljmp
and
push
jge
add
out
repnz
push
stos
loope
mov
ficompl
sahf
pusha
xchg
or
fisubrs
or
punpckhwd
call
fcomp
lds
hlt
mov
sub
or
stos
addl
fdivr
jne
popa
sbb
adc
scas
insl
pop
push
or
pop
pop
sbb
call
dec
ja
out
or
jge
sbb
xchg
mov
aas
xchg
mov
lret
icebp
cmp
push
bnd
push
jno
push
shll
test
mov
movsb
cmp
push
sbb
mov
jle
sbb
push
addl
jnp
xor
nop
inc
ljmp
cltd
push
push
repz
lods
push
loop
jge
adc
ds
test
dec
mov
push
sti
rcl
jp
xor
cmp
pop
jbe
and
movl
fsubl
les
mov
xchg
adc
jne
sub
insl
mov
pop
faddl
in
mov
fists
pop
mov
aam
call
pop
je
aam
inc
mov
es
xchg
iret
mov
jmp
ja
cld
test
or
repnz
mov
outsl
ljmp
pop
rclb
push
addl
sbbl
iret
sbb
fwait
bound
popa
xor
daa
leave
outsb
mov
lret
out
adc
lcall
ds
push
xchg
iret
xor
pop
push
add
jno
jp
stos
dec
fisubrl
adc
mov
int3
jo
cli
jnp
stos
adc
bound
add
pop
mov
mov
xlat
daa
jbe
dec
and
icebp
dec
push
push
adc
out
sub
sub
xchg
mov
iret
ljmp
das
das
inc
andb
nop
idivb
mov
pushf
push
jo
movsl
jo
dec
jmp
mov
pop
loope
pop
fucomp
mov
sub
leave
sub
lret
negl
stos
jno
or
xor
popa
dec
loope
cmc
shrl
in
ret
sub
ljmp
maxps
andb
jp
add
sbb
rol
push
pop
inc
sbb
les
inc
loop
jbe
push
jno
gs
dec
int
sub
mov
mov
mov
call
sub
fsubrp
mov
sbb
jnp
mov
bound
sbb
aam
bound
enter
inc
push
jns
and
adc
inc
xchg
xlat
cmp
mov
enter
pop
lret
sbb
js
sub
mov
aas
inc
shlb
push
decb
fdecstp
scas
pop
dec
xchg
aad
jb
xor
lcall
add
mov
or
sbb
inc
mov
mov
add
pop
dec
int
xchg
gs
jecxz
call
sbb
in
xchg
xchg
pop
or
add
dec
in
cmpsl
rcl
adcb
pop
sahf
xchg
jg
ljmp
dec
pop
cli
movb
sbb
xorb
mull
aas
lret
mov
scas
or
out
rcr
test
repz
ljmp
xchg
test
jbe
popf
ss
loop
lret
jns
clc
mov
rolb
add
mov
pop
xchg
cmp
jecxz
or
pop
lods
and
sbb
rcll
sbb
push
dec
jbe
xor
mov
orb
roll
shl
ja
shrb
xchg
cmp
jae
pushw
add
xchg
imul
stc
cmp
lcall
adc
or
or
cmc
pusha
xchg
push
inc
push
addl
cmpsb
push
sbb
incb
xor
lods
arpl
lret
arpl
xchg
inc
out
imul
sbb
adc
or
push
adc
ds
mov
sub
push
in
jo
push
adc
sbb
adcb
pop
mov
push
inc
popa
iret
flds
sbb
lods
jmp
fimuls
into
xor
xchg
push
sbb
mov
jb
je
sarl
sub
mov
sbb
fnstsw
mov
shrl
inc
orb
xor
dec
pop
pusha
outsl
gs
xchg
push
fs
in
and
sbb
sub
or
and
adc
cmpsl
cs
sbb
inc
outsl
hlt
mov
cmpsl
pop
jge
inc
xchg
xorb
mov
ljmp
mov
hlt
inc
fs
push
mov
call
ljmp
popf
lods
sbb
xor
mov
lock
stos
pop
loop
js
inc
stos
and
pushw
lcall
lret
mov
addr16
adc
mov
mov
dec
out
mov
cmpsb
xchg
inc
mov
xchg
in
adc
add
gs
dec
mov
inc
out
das
imul
mov
jmp
daa
scas
xor
fbstp
insb
xorl
jmp
inc
adc
in
or
jb
shrl
or
stos
lret
xor
lods
cwtl
xchg
mov
pop
cs
lret
xor
mov
movsl
fs
lock
lret
imul
pop
sub
mov
sbb
jl
inc
sbb
mov
lret
insb
pop
cmp
out
jbe
mov
push
mov
hlt
dec
pop
gs
test
push
mov
xor
mov
add
dec
iret
mov
lock
fists
xchg
mov
xchg
cld
sbb
pusha
jmp
add
mov
fstl
mov
fmulp
loope
aad
lea
mov
call
cld
and
les
and
fnstsw
jge
clc
pop
cltd
xor
test
out
or
push
pop
std
and
ljmp
lods
fwait
inc
inc
imul
iret
loop
in
cmpsl
sbb
add
adc
mov
ds
push
xchg
add
pop
jae
cmpb
fcoml
add
sbb
sub
mov
shl
inc
call
push
sar
cmpsb
test
mov
adc
mov
insb
mov
pop
push
mov
fs
cmp
pop
testl
mov
sbb
into
sub
xor
js
jecxz
adc
out
pop
add
dec
test
push
push
mov
mov
sbb
test
cmp
stc
inc
lret
add
xchg
mov
aas
daa
push
jne
popf
stc
push
xorb
cmp
push
add
cmpsl
fwait
xor
std
mov
mov
jno
sub
enter
cmp
std
out
cmp
inc
xchg
das
mov
cltd
mov
jno
hlt
mov
ret
lcall
fistpl
js
daa
out
mov
sbb
repnz
or
loope
xchg
sub
repz
pop
cmp
push
sbb
sahf
push
rcl
ljmp
sub
das
xchg
rcll
jecxz
imul
cmpsb
ljmp
lea
nop
cld
or
in
inc
adc
mov
popf
into
and
and
xor
out
sub
lahf
mov
test
aam
cwtl
and
cwtl
pop
and
pop
mov
pop
in
ja
outsb
ljmp
mov
cmp
push
cmpsb
jbe
es
and
add
mov
mov
inc
shll
jae
fsubrs
push
cmp
xor
outsb
inc
in
ret
pushf
xchg
jnp
daa
add
stc
mov
xor
lods
negb
cmp
cmp
mov
push
adc
push
int
ss
aam
sbb
jecxz
sbbb
inc
sub
sbb
and
ja
dec
ds
hlt
mov
ds
lds
lcall
mov
clc
adc
jnp
out
out
mov
sbb
ret
test
sbb
popf
lods
outsb
in
push
cmp
rorl
add
adc
mov
mov
sub
add
fdivrl
dec
add
jecxz
pusha
cli
xor
out
inc
sub
rcll
mov
mov
pusha
dec
fwait
xchg
jle
mov
inc
push
jmp
mov
pop
inc
ficompl
dec
fwait
sub
in
mov
jle
fstp
sbb
xchg
inc
insb
xchg
xchg
iret
push
xor
fisttpll
mov
or
popa
pop
ret
inc
test
scas
mov
fwait
sub
or
icebp
pop
xlat
outsl
fucom
in
into
out
int3
dec
addr16
pop
fs
lcall
into
sbb
cmpsb
inc
loope
cmp
lds
mov
inc
roll
cs
xchg
orl
xchg
repz
rorb
insl
and
clc
xor
cld
sbb
sbb
adc
lods
mov
jno
ror
lahf
fidivs
jge
and
shrb
leave
add
int3
xor
jne
push
add
decb
or
clc
push
inc
call
imul
aaa
or
out
pop
sub
mov
lahf
mov
push
mov
cwtl
fstp
adc
push
or
or
cli
movsb
ljmp
mov
dec
xchg
xchg
add
addb
lds
mov
sti
shlb
je
repz
add
sarl
pop
arpl
xchg
xchg
test
das
mov
push
in
or
outsb
fistpl
dec
fdiv
call
cli
inc
add
add
and
sub
mov
lret
dec
mov
xchg
mov
cwtl
mov
imul
cmp
std
sub
lods
fwait
test
and
shlb
repz
mov
mov
icebp
mov
add
dec
jp
jns
or
or
dec
push
inc
fmull
fidivrl
mov
adc
inc
inc
mov
outsl
mov
pop
mov
inc
xchg
loop
sarl
xchg
fdivr
mov
imul
mov
enter
sti
xchg
outsl
jb
or
mov
loop
jno
add
or
add
pop
pop
cmp
mov
mov
js
sub
dec
fsts
ret
aam
jne
loope
inc
mov
mov
xor
lds
mov
js
push
arpl
inc
or
fwait
test
js
mov
mov
mov
sbb
addr16
mov
cs
push
inc
mov
mov
jb
cli
pushl
inc
jbe
ret
lcall
or
jnp
cmp
and
xchg
and
scas
jns
pop
cmp
xlat
jbe
cs
int3
push
jne
dec
mov
cmp
mov
lods
icebp
push
jl
pop
mov
fdivrl
sbb
es
sub
xchg
inc
lret
and
and
adc
xchg
sub
mov
sbb
gs
mov
ud0
push
clc
push
mov
icebp
push
insl
outsl
rcrb
pop
lods
mov
popa
daa
arpl
cmp
pop
ss
add
sbb
cwtl
int
sub
clc
adc
mov
test
mov
int3
mov
addr16
adcl
popa
inc
or
or
dec
xchg
andb
jg
mov
jmp
imul
int
sbb
imul
divb
addb
gs
outsl
push
xchg
fnstcw
mov
andb
int
pop
dec
aam
iret
xchg
dec
lret
or
mov
outsl
cmpsb
repz
sahf
jns
loopne
dec
cld
add
pop
lods
xchg
sbb
dec
mov
stc
mov
inc
jecxz
xchg
mov
test
and
pop
fnstsw
inc
sub
push
lcall
mov
adcl
and
sub
jmp
loop
inc
mov
insl
rcll
sbb
push
cwtl
cli
dec
fsubr
in
lods
dec
shl
jo
add
inc
pop
sti
inc
lock
hlt
adc
cld
add
jmp
hlt
mov
inc
lret
test
nop
xchg
and
adc
gs
nop
push
cli
cmc
and
jae
mov
adc
mov
lret
divb
jmp
xchg
dec
es
scas
leave
push
or
cmp
in
push
add
jge
add
dec
cmpsb
js
imulb
xor
push
addb
popf
push
dec
add
or
mov
insl
in
rorl
les
mov
out
xchg
iret
dec
sub
or
aas
rcrl
dec
inc
push
mov
push
mov
dec
lea
ljmp
and
bound
outsb
sbb
iret
lea
data16
add
pop
sub
cmp
fstpl
stos
mov
sub
cltd
inc
sbb
repz
addr16
cmp
lock
jo
dec
add
jno
sub
mov
pop
push
out
out
dec
stos
roll
fidivs
shrb
mov
push
push
and
xchg
push
roll
and
mov
xchg
sub
push
cmp
inc
push
icebp
sbb
jecxz
xchg
imul
add
push
mov
xor
imul
cwtl
push
xor
roll
cmp
popf
aam
xor
lods
mov
ljmp
pop
fmuls
sub
sub
hlt
inc
nop
mov
push
xchg
push
mov
loop
fcmovb
inc
push
andl
sbb
add
sub
lds
ja
xchg
imul
dec
jnp
sarb
mov
mov
in
adc
xor
xor
test
inc
or
mov
hlt
mov
aaa
mov
fwait
adc
movsl
add
sahf
add
sbb
arpl
jp
push
roll
dec
test
lret
adc
stos
mov
mov
dec
pop
sub
mov
and
mov
or
ret
push
in
dec
add
xor
out
cmpsl
inc
rorl
movl
or
xorb
and
mov
call
sarl
inc
or
mov
cmc
pop
jnp
loop
outsl
xchg
mov
ljmp
aam
out
aas
push
mov
ds
cmp
ret
jns
cmp
fistpl
test
jno
mov
fucom
push
push
loop
mov
or
outsb
xor
sbb
adc
sub
dec
cmpsl
sbb
pop
push
xor
adc
adc
addb
jno
shll
adc
ret
mov
push
sub
out
loope
inc
insl
out
dec
jo
and
xor
jnp
inc
sarl
bswap
movsl
cmp
dec
push
fnstsw
mov
test
inc
mov
cmp
jmp
popf
pop
scas
lods
shll
push
icebp
mov
arpl
xchg
in
sbb
and
or
sbb
inc
mov
out
das
adc
adc
in
sub
enter
xorb
sbb
in
mov
sbb
int3
dec
mov
ljmp
xchg
lcall
popa
xchg
ss
xchg
push
cltd
in
or
lods
or
mov
repnz
mov
outsb
xchg
adc
lods
pop
push
pop
enter
or
fstpl
dec
push
sbb
or
pop
in
ja
sahf
adc
aaa
push
aas
ds
xchg
out
or
stos
pop
lret
jg
xchg
outsl
inc
shl
push
insb
movsl
pusha
sbb
fsubs
push
sbb
jl
xor
loop
sub
mov
out
lcall
push
decl
mov
mov
cs
lret
aam
mov
push
mov
test
dec
xchg
iret
adc
cmc
repnz
sub
push
xchg
lret
mov
xor
mov
and
ljmp
cwtl
add
out
push
sbb
nop
fsubs
inc
push
cmc
xlat
add
pushl
cmp
repz
fcomp
daa
shrl
mov
into
icebp
mov
cli
mov
rol
pop
data16
insl
adcb
sbbb
into
sahf
sub
jp
test
mov
add
or
imul
inc
gs
test
cmp
mov
int
xchg
add
pusha
out
sbb
or
out
jns
repnz
jmp
and
adc
inc
pop
pop
sbb
cmpsl
rorl
add
cwtl
sbbb
adc
notb
outsl
mov
jnp
jecxz
sub
jecxz
pop
mov
adc
repz
aas
push
and
add
fiaddl
mov
popa
stos
loop
clc
mov
xor
andb
dec
cmp
cmp
sbb
add
push
loopne
rcl
pop
cmpsl
mov
mov
mov
js
repnz
sti
and
or
pop
lcall
pop
mov
sub
cld
int
jo
negl
mov
push
scas
leave
outsl
pop
cmp
rcrb
stos
arpl
stos
iret
mov
insl
add
aas
ljmp
sahf
fcompl
enter
fcomps
shll
sub
sarb
mov
test
mov
fsubrl
cmpsb
push
je
sbb
rcr
add
adc
pop
jae
shl
fsubrs
jp
ret
or
repnz
test
rcrl
or
fcmovu
xchg
in
and
mov
mov
inc
sub
rep
icebp
add
jg
mov
fwait
sub
sub
pop
add
push
push
sti
jno
lcall
sbb
mov
xchg
inc
dec
nop
push
call
scas
lods
adc
adc
adc
std
dec
push
jp
add
mov
psubw
sbb
test
add
cmp
jae
push
push
push
jne
outsl
je
inc
cmp
into
sahf
add
pop
int3
popf
lret
xchg
push
push
mov
push
push
stos
sbbb
fsubr
aas
xchg
mov
jmp
mov
fdivrs
lret
xchg
nop
and
add
push
repz
xchg
adc
inc
sbb
hlt
shlb
insb
cmp
push
aam
push
push
int3
js
les
sbb
imul
mov
insl
in
aaa
outsb
mov
repz
nop
dec
xor
je
jnp
pop
pop
orl
jnp
mov
sbb
mov
inc
xor
adc
mov
push
aaa
lods
imul
fistl
mov
aaa
push
xor
sti
nop
jmp
or
pop
cmpl
lahf
movsl
pop
mov
pop
mov
sbb
mov
pop
sbb
mov
addr16
and
dec
imull
popa
scas
add
aam
test
lods
push
cmp
fcoms
pop
sub
mov
out
cwtl
icebp
pop
jnp
stos
push
test
cld
mov
pop
pusha
cmp
stos
jp
sub
xchg
ret
cmp
or
push
outsl
pop
lea
pop
cmc
fcoms
out
or
mov
jnp
aas
sub
orl
mov
enter
add
mov
jecxz
lret
ds
cmp
leave
add
pop
xchg
testb
jmp
dec
mov
push
xchg
jnp
fisubrs
add
mov
arpl
arpl
inc
cmp
iret
push
lock
push
pop
push
dec
dec
sub
icebp
mov
test
popf
sbb
jmp
cmpsl
leave
inc
push
push
mov
ret
notb
xchg
fisttpl
lret
mov
out
inc
or
out
mov
jmp
enter
rorl
jecxz
push
clc
jmp
inc
jge
sahf
push
imul
jmp
bswap
mov
mov
xchg
inc
push
jmp
loop
stos
push
push
cmp
pop
sbb
loope
sbb
jnp
lods
adcb
cmp
stos
movb
jae
add
and
jg
inc
popf
mov
push
imul
roll
pop
cmpsl
mov
xor
leave
test
inc
add
aas
orb
add
addb
mov
and
add
ret
xor
pushf
xchg
inc
inc
repnz
fistpll
push
loopne
cmpsl
pushf
mov
and
addr16
repz
jg
push
mov
nop
cld
mov
and
and
sub
mov
roll
dec
cmpsl
ss
lret
lret
lds
jns
xor
dec
insb
call
arpl
sub
sub
cld
cld
mov
inc
fsubrl
jecxz
pushf
inc
mov
bound
jns
ret
lods
pop
aad
xor
cmp
dec
cmp
roll
dec
sahf
add
pusha
or
dec
jns
adc
lret
sbbl
dec
inc
stc
ficoms
jg
inc
cmp
dec
xchg
push
shlb
push
iret
testl
jnp
adcb
es
mov
lods
bound
cmp
cmp
cwtl
add
mov
gs
lock
pop
fdiv
dec
mov
imul
inc
fidivrl
and
lods
or
stc
sub
scas
aam
push
inc
dec
dec
jo
sub
ret
fists
dec
jbe
addr16
sub
mov
push
lods
lock
adc
push
sarl
mov
dec
push
cmp
xchg
shlb
sub
stc
ds
mov
or
hlt
push
dec
mov
gs
mov
mov
int
jmp
cld
sbb
sbb
push
adc
cld
out
xchg
cmp
pop
adcb
jl
jae
add
ror
cld
push
sub
cwtl
dec
es
and
adc
popa
sub
pop
rorb
jmp
sub
jecxz
lcall
jae
fwait
mov
dec
push
pop
mov
xchg
and
sbb
mov
mov
cmpsl
js
xor
mov
ret
lds
adc
mov
mov
roll
lcallw
sbbl
mov
mov
out
xchg
dec
dec
cmp
lea
pop
push
icebp
cmp
fst
jge
sar
movsl
sbb
lea
pop
jl
addr16
sbb
push
imul
sti
call
outsb
xchg
les
push
cmp
enter
dec
rorb
inc
outsb
sub
xchg
xchg
mov
popf
aam
into
push
push
inc
stos
movsb
pusha
out
pushf
jmp
pop
cltd
mov
sbb
cmp
mov
jl
push
mov
cmc
cli
lock
cmpsl
xlat
dec
dec
dec
lods
xchg
push
sub
fidivl
sbb
es
into
repz
ljmp
les
add
test
loopne
mov
lret
cmpsb
test
sbb
popf
sbb
jecxz
stos
jmp
aas
in
mov
loope
jae
or
lcall
xor
adcb
jne
fildll
adc
sub
sahf
push
sbb
test
jmp
repnz
mov
or
daa
sbb
pushf
jmp
add
and
dec
mov
mov
xor
push
imul
test
es
jp
xchg
xor
mov
pop
pop
pop
pop
lea
leave
pop
stos
test
sbb
arpl
pop
out
sbb
int3
loop
gs
les
dec
int
pop
inc
in
mov
ret
lods
mov
add
fcomp
outsl
cmpsb
mov
xorl
shlb
jno
mov
pop
add
push
xchg
test
xchg
outsl
lea
push
or
fstl
dec
push
jle
push
mov
pop
mov
jb
movsl
xor
ss
jns
mov
add
mov
xor
mov
or
pop
shll
xor
testl
subb
jb
insl
lods
loopne
cmp
or
je
aas
test
xor
pop
testb
dec
dec
and
pop
add
xor
mov
push
sbb
enter
cmp
mov
mov
fwait
dec
fcmove
cmp
fcompl
jo
mov
xor
in
rcrb
push
or
daa
cmp
mov
call
xchg
lds
mov
adc
pop
cmp
ret
pop
mov
mov
add
sub
aam
stc
iret
push
sbb
lods
enter
lods
sub
pop
and
out
int
jge
pop
lea
fstpt
xchg
pushl
and
xchg
mov
or
idivb
int3
adc
push
mov
xchg
mov
stos
movsb
cltd
daa
dec
mov
stc
pop
adc
mov
or
push
stos
lea
mov
adc
inc
frstor
scas
ljmp
mov
push
outsb
lods
dec
cmp
mov
ficompl
cmp
xchg
movsl
mov
popa
test
movsb
and
cmpsb
push
push
or
sbb
xchg
cmpsl
mov
test
and
dec
dec
add
dec
sbb
rcl
repz
xchg
xchg
or
scas
xor
popf
push
mov
mov
or
fstpt
movsb
jle
dec
and
test
jb
add
mov
fimuls
lods
mov
mov
stos
ds
xchg
sub
xor
xchg
movsb
cwtl
cmp
imul
repnz
loopne
xor
sub
data16
mov
repnz
fsub
sub
add
pcmpeqw
inc
mov
inc
mov
shll
call
xchg
push
jne
mov
mov
jns
pop
mov
dec
adc
enter
in
int3
ret
addr16
movsb
jae
xchg
jae
adc
aad
dec
mov
adc
dec
inc
int
lds
pop
add
push
lock
push
cmp
or
mov
xor
aaa
add
test
test
int
push
add
mov
cmpsb
sub
test
clc
push
add
fdivrs
jmp
mov
shl
je
mov
cmp
xor
cmp
js
jecxz
adc
movsl
mov
and
sbb
dec
push
sub
xchg
or
mov
add
mov
xchg
aas
inc
mov
jno
call
cmpsl
add
xchg
inc
mov
lods
cmpsl
adc
jnp
push
dec
in
push
aam
mov
div
mov
mov
sub
fiadds
inc
nop
inc
jnp
mov
scas
lea
in
inc
cmpsb
mov
movsl
inc
fwait
mov
xor
mov
cmp
loopne
mov
popf
lret
mov
adc
mov
cmp
sarl
sub
or
roll
fwait
inc
rclb
sub
inc
loopne
jp
cmp
test
notl
adcl
faddl
nop
inc
cmpsb
inc
sbb
jnp
cmp
or
dec
imul
xor
out
iret
gs
pop
jbe
mov
movb
xor
jno
mov
sarb
sub
lret
out
xor
lcall
leave
lock
add
leave
push
adc
fwait
jbe
jg
xchg
aas
test
pushl
ss
pop
or
out
add
or
outsb
aam
push
push
divb
push
cmp
cmp
push
xor
fcomps
fistps
jbe
hlt
std
cmpsl
sbb
into
sub
faddl
and
adc
inc
das
jo
loop
nop
adc
cwtl
adc
lods
ffreep
data16
repz
repz
icebp
hlt
push
pusha
fisttps
stos
or
cli
inc
push
jge
outsb
pop
mov
and
in
fisttpll
jl
jns
cmp
enter
stc
je
mov
jne
loope
pop
sub
cmp
mov
test
pop
xchg
dec
mov
adcl
jne
decl
mov
adc
push
test
ret
pop
cmpsb
mov
addb
sbb
and
mov
push
jp
jmp
mov
fiadds
pop
repnz
xor
fcoms
inc
cltd
ljmp
jo
jbe
lahf
dec
or
out
mov
in
cs
fistpll
ret
shrb
add
sub
jb
mov
push
dec
or
and
popa
push
cmp
mov
ret
popa
sbb
int3
xacquire
push
mov
xchg
ret
adc
data16
pop
mov
js
inc
cwtl
add
cmp
push
mov
sub
jbe
rol
je
jle
pop
mov
out
mov
mov
addr16
push
insb
mov
rcrb
mov
fsub
fimuls
out
push
stc
fnstcw
xchg
ja
cmp
into
pushf
jp
pop
int3
ljmp
ret
movsl
fisttpll
loopne
xchg
out
cmp
aas
insb
call
cmp
pusha
push
mov
jnp
aas
shrl
cmc
sub
notl
and
jecxz
fsubrl
pop
je
push
int3
adc
pop
jae
clc
fbld
insl
dec
sbb
and
outsb
ss
dec
mov
insl
adc
sub
mov
and
data16
adc
lcall
lods
leave
push
leave
or
xlat
outsl
ss
mov
sub
jbe
stos
jbe
cwtl
aam
imul
out
adc
repnz
int3
int3
dec
xchg
cmc
sub
or
rolb
and
cmp
mov
js
ret
mov
into
mov
add
out
or
cmpsl
push
aas
sti
sbbb
lock
rcrb
leave
xor
cmpsb
jle
pop
mov
pop
mov
pop
lock
adc
mov
sub
clc
push
xor
adc
fisubl
out
idivl
push
jg
outsb
and
sub
sbb
xor
movsb
and
inc
xor
bound
and
sarl
mov
sbb
fdivl
sub
dec
dec
cltd
or
mov
or
fisubrl
inc
mov
xor
xchg
imul
mov
cs
hlt
fstpl
mov
insb
enter
jg
ljmp
push
inc
rorl
jmp
cwtl
xor
test
out
and
jae
ss
xchg
jns
lret
loop
cmp
or
cmpsb
xor
dec
xor
mov
pop
sbb
call
push
cmp
imul
sbb
sbb
call
xor
into
cmpsl
shr
and
lods
clc
mov
push
lret
in
rcl
jmp
xor
xchg
push
sub
out
mov
add
mov
pop
push
js
mov
insb
push
arpl
inc
jbe
repz
nop
arpl
xorb
jmp
push
push
cmc
aaa
mov
test
cmpsb
xlat
aam
icebp
cmpsb
subl
jb
sub
adc
cwtl
mov
in
call
movsb
xchg
push
fwait
pop
clc
mov
jecxz
cmp
or
nop
in
cld
test
stc
pop
mov
mov
int
loop
sub
dec
add
add
inc
lock
inc
ja
pop
jl
sbb
das
orb
and
testl
sahf
iret
hlt
enter
sahf
jmp
loop
repz
cwtl
push
inc
push
sbbb
jle
lret
jb
pop
pusha
fucomi
pop
fdivs
shll
mov
js
daa
int3
xchg
lock
mov
ret
xor
sbb
xchg
mov
in
ret
fsubs
jae
icebp
fmull
pop
lcall
inc
pop
stos
loop,pn
cli
lods
enter
or
cs
icebp
aaa
push
pop
lds
in
das
push
xlat
cs
xor
fistl
out
mov
jl
sub
js
jl
fadd
out
mov
in
sub
or
int3
popa
test
add
fdivrs
xor
adc
lods
sbb
sbbl
pop
or
push
movb
cmp
mov
out
xchg
mov
pop
ret
add
hlt
aam
sbb
mov
popa
adc
out
sbb
pop
adc
aam
ret
int3
popl
push
lret
sbb
add
mov
mov
addl
push
shll
daa
jbe
cwtl
or
out
cmp
scas
inc
push
and
xor
cmp
adc
jmp
leave
lea
push
xor
xor
xchg
xchg
imul
out
fscale
shrl
lods
inc
hlt
pop
sbb
lcall
xchg
daa
cld
adc
incb
add
jns
mov
add
es
inc
jbe
rorl
xlat
shl
push
loop
fstps
and
ret
push
or
dec
push
aad
sub
xor
xorb
cmp
adc
sub
fdivl
pusha
dec
std
sar
das
loop
cmp
ret
inc
rdpmc
rol
sub
xchg
or
mov
push
icebp
rorb
sahf
movsb
mov
adc
xor
popa
pand
dec
sbb
gs
movsl
jp
sbb
pop
gs
rcr
bswap
push
pop
nop
mov
add
incl
inc
and
test
movsl
jge
cmp
aam
out
into
leave
aas
cmpsl
xchg
mov
add
lahf
out
and
stos
or
push
fistl
jno
rorl
push
xchg
ret
cmp
adc
pop
repz
jnp
pop
inc
sub
sub
lahf
div
imul
push
fwait
or
into
pop
mov
mov
mov
jle
jns
push
in
push
push
scas
outsb
push
shrl
and
add
xor
xor
push
pushl
outsl
mov
movb
std
imul
lea
or
push
in
out
gs
ljmp
mov
sub
sahf
ja
int
dec
push
ja
les
mov
lcall
xor
push
inc
jo
and
mov
add
dec
imul
pop
mov
daa
xchg
je
mov
xor
mov
cmp
jl
cmp
and
mov
mov
repnz
cmpsl
jle
xchg
pop
rcl
lret
pop
xor
dec
sub
in
dec
adc
pop
sub
imul
xor
jne
pop
or
xchg
inc
aaa
xchg
test
pop
out
jl
lcall
daa
and
loopne
insl
mov
sub
testl
cmc
pop
mov
int
adc
pop
inc
mov
movsb
adcb
lret
push
rclb
push
lcall
inc
idivb
adc
lock
sti
loop
arpl
nop
xor
cmp
mov
jnp
or
jbe
decl
add
imul
imul
or
cli
mov
jne
cli
jae
cld
or
lret
mov
call
and
adc
inc
jecxz
repz
dec
incl
icebp
inc
push
loopne
add
fwait
adc
pop
pop
stos
lds
sbb
cltd
sub
into
jle
jbe
add
sbb
out
shrl
jl
out
ds
and
lea
and
xchg
stos
xor
addb
jl
pop
sub
sbb
xchg
test
lahf
pop
dec
push
setae
pop
mov
dec
xlat
scas
test
out
pop
xor
std
jne
xlat
adc
es
jae
and
aam
pop
xchg
cltd
testb
jo
jl
mov
or
mov
shrl
adc
cmp
clc
pop
into
sub
out
imul
imul
insl
lret
aad
cmp
lret
je
mov
scas
dec
clc
clc
sbb
in
mov
in
push
mov
jne
pop
xor
cmp
popa
mov
sbb
fwait
mov
add
sbb
addb
js
dec
or
mov
test
pop
push
push
jnp
std
jae
xchg
ljmp
mov
arpl
cmc
mov
mov
mov
mov
push
and
sahf
or
outsb
je
arpl
push
mov
scas
outsl
dec
out
imul
jbe
xchg
dec
sti
dec
add
das
out
cld
push
fstpl
and
mov
inc
add
add
in
ret
adc
add
inc
pop
inc
sti
sub
lods
call
dec
mov
pop
fbld
lret
frndint
mov
aaa
sub
mov
jns
shrb
mov
ljmp
sbb
mov
aaa
iret
xchg
rol
out
add
imul
adc
hlt
lock
mov
aad
xor
in
inc
pop
mov
outsb
pop
rorl
gs
lock
or
loop
clc
xchg
rcll
jg
icebp
jns
inc
repz
pavgb
lcall
lahf
idivb
add
clc
leave
imul
xor
jp
jnp
stos
fadd
mov
sahf
inc
xchg
je
jne
lods
out
mulb
push
pandn
mov
stos
mov
push
xor
mov
int3
pop
sbb
xor
pop
inc
mov
dec
lret
fwait
or
testl
pmullw
ds
push
cmp
and
gs
jmp
idivb
scas
jbe
rolb
movsl
stc
mov
out
and
pop
mov
and
xor
mov
xchg
loope
jbe
lret
movsb
lods
cli
jmp
add
hlt
xchg
pop
and
movsl
jbe
clc
out
shrl
cmp
xchg
lods
sub
enter
adc
fwait
nop
mov
inc
mov
movsb
popf
subb
lea
and
in
or
in
and
lods
pop
and
mov
dec
dec
pop
cmp
cmpsb
mov
idivl
sbb
jo
push
in
mov
jbe
jge
cmp
rclb
sti
frstor
pop
mov
mov
mulb
jp
pop
xchg
rorb
movsl
in
loopne
dec
sbb
lds
fisubrs
sbb
sarb
and
rcr
mov
cld
push
in
test
pop
clc
xor
aad
ljmp
mov
lahf
int3
jae
in
sar
inc
dec
ds
cwtl
arpl
push
in
std
xchg
jg
addl
mov
aas
mov
ficoml
push
xchg
and
add
sbb
lret
out
mov
lods
int
in
mov
add
std
data16
push
mov
xchg
push
cmp
jnp
or
add
bound
stos
cmpb
jnp
repnz
mov
and
pusha
xor
inc
mov
dec
mov
mov
jg
test
cmpsl
push
cmp
inc
arpl
lea
jmp
dec
mov
mov
popf
add
mulb
pop
jmp
adc
xor
mov
dec
fwait
sbb
mov
xor
insb
pop
test
cmp
jb
mov
dec
mov
imul
mov
iret
mov
lds
dec
stc
inc
loop
and
add
stc
push
pop
in
xchg
je
pop
dec
add
mov
std
pop
roll
dec
mov
cmp
dec
adc
cmc
negb
popf
mov
bswap
mov
mov
mov
push
lea
dec
push
push
xchg
cltd
mov
jmp
movsb
sarb
insl
add
jo
sbb
dec
mov
sub
and
sub
xor
inc
xchg
icebp
xor
pop
add
push
das
cmp
mov
insb
popf
fldenv
je
sub
lret
fists
lods
or
mov
fdivs
icebp
dec
sub
or
dec
push
aaa
cmpsl
shll
mov
lret
repz
jecxz
test
adc
mov
out
test
mov
push
push
mov
sbb
xchg
negl
mov
xor
lods
dec
mov
mov
cwtl
ds
pop
mov
sbb
add
inc
push
pop
sti
cmp
iret
adc
aas
dec
lds
and
cmp
cmp
mov
repnz
das
mov
insl
or
jae
mov
lahf
pop
dec
test
lret
out
dec
add
add
jp
xchg
out
jno
jo
cmc
sti
add
enter
cmpsb
jp
sub
sbb
pop
int3
cmc
xlat
out
ljmp
adc
mov
mov
les
jne
pop
fwait
adcb
xchg
adc
loope
xchg
leave
pop
xor
sbb
fwait
xchg
add
mov
cli
fwait
enter
push
aad
enter
xchg
scas
pop
cmc
push
push
ja
push
cld
test
int3
fadds
cmpsb
loopne
inc
sti
es
mov
dec
aaa
jle
mov
fnsave
add
mov
and
or
scas
jl
pushf
adc
mov
sbb
xor
test
aad
mov
add
stos
add
or
adc
add
lahf
push
iret
movsl
inc
es
add
rep
sbbl
pop
imul
adc
inc
in
inc
dec
inc
aad
ret
lcall
xor
test
push
or
jno
inc
or
sbb
or
mov
jle
ret
dec
aas
mov
xchg
icebp
scas
test
and
mov
fcmovb
jae
adc
adc
fsubs
mov
pop
xor
mov
sbb
cmc
mov
add
imul
inc
or
lahf
cmpb
rorb
cmc
mov
mov
imul
inc
jno
flds
xor
mov
out
jl
rcrb
sub
andb
add
repnz
mov
sbbb
xchg
cmp
adc
jns
mov
add
out
lock
aam
add
aad
inc
popf
mov
push
jno
imul
andb
fcoms
xchg
mov
mov
imul
out
lcall
call
sub
add
mov
ds
cld
xchg
xor
mov
sbb
in
inc
pusha
pop
pop
sbb
pusha
pusha
ds
imul
pop
pop
jae
pop
out
lret
and
test
adc
outsl
cmp
xchg
shll
out
push
popf
test
lea
shll
pushf
inc
cmpsl
movsl
cmp
stos
out
fs
out
xchg
cs
add
dec
dec
mov
sbb
inc
or
pop
iret
xchg
jae
mov
mov
data16
test
dec
xor
sbb
xchg
xchg
push
jp
inc
or
xor
pop
scas
adc
cmp
aaa
pop
sub
xor
jno
add
js
mov
mov
push
sub
cmp
outsb
jmp
inc
pop
or
rol
cmp
cwtl
jnp
sbb
arpl
imul
fdivr
inc
pop
mov
jbe
xlat
xchg
inc
movsb
inc
insl
stos
lret
or
in
adc
sbb
jge
pop
addr16
sub
hlt
das
int3
add
in
rcrb
iret
test
leave
xchg
ficoml
xchg
fiaddl
xchg
jmp
popf
sub
xchg
rcll
mov
or
cmp
xchg
ret
push
movsl
test
add
xchg
cmp
fsubrl
and
cmp
fdivr
stos
lret
mov
and
lods
push
lock
mov
mov
adc
dec
in
mov
cs
push
xchg
dec
cld
sub
mov
das
rolb
pop
xchg
adc
inc
add
xor
ljmp
pusha
jne
loop
xor
rolb
mov
fadds
cli
hlt
lret
cmp
inc
fimuls
orb
fsubl
cmpsb
aad
mov
jns
mov
or
xor
add
scas
xor
repz
or
stos
lea
pop
nop
fwait
add
icebp
or
add
adcl
jae
push
pop
pop
mov
add
cltd
sbb
shl
add
push
insb
js
pusha
sbb
push
test
out
xchg
adc
dec
lahf
push
push
mov
mull
xor
push
adc
dec
ss
cli
push
stos
cwtl
add
lods
xchg
cmc
shrl
stos
outsl
push
sbb
cmp
push
lods
mov
push
mov
mov
je
movb
ja
xchg
pop
sti
mov
dec
mov
sbb
std
jae
les
repz
xor
cli
movsl
xchg
icebp
adc
leave
clc
push
cmpsb
imul
dec
loopne,pn
inc
push
mov
testb
adc
cmp
repz
loope
cmp
fmul
xor
jp
dec
cmpsb
mov
pushf
mov
les
and
aaa
data16
icebp
mov
push
aaa
sbb
sub
push
push
jne
int3
insb
ror
jne,pn
ja
mov
daa
out
movsl
notb
adc
dec
fmuls
add
xor
ljmp
sbb
shl
loopne
mov
lret
jns
and
mov
sub
icebp
psubusw
into
test
and
cwtl
dec
ret
popf
fstpl
fldcw
adc
andl
cmp
in
cmpsl
push
arpl
pop
xchg
adc
or
sub
cmp
out
or
adcb
mov
xlat
popa
jbe
enter
xchg
fsubs
sbb
cmpsb
jecxz
int
lods
stos
jnp
pushf
sub
dec
pushf
aas
out
faddl
loope
popf
add
scas
jle
cld
out
push
jecxz,pt
mov
add
les
inc
mov
xor
jp
jns
cwtl
pushl
adc
test
cmp
and
dec
add
xchg
jne
push
adc
xor
sub
inc
lahf
ret
cmp
dec
pop
bswap
loope
add
test
mov
cmp
push
mov
mov
adc
in
mov
mov
sub
mov
daa
sahf
cmp
dec
jbe
sub
mov
adc
movsb
rcl
das
loope
shrb
or
fmuls
xchg
dec
sbb
xchg
mov
pop
sub
add
xchg
mov
loope
push
gs
ja
adcb
push
xor
ret
dec
fcmove
mov
pand
inc
notl
shrb
mov
jmp
inc
lret
sarl
push
add
fadds
stc
cmc
adc
cmp
int
cs
cltd
shl
inc
adc
pop
dec
bound
fistl
faddl
push
dec
sub
jle
aam
ljmp
pop
shrb
mov
arpl
insb
cmpsl
jno
sub
lods
inc
cltd
pop
sbb
fimull
repz
js
mov
mov
cmp
sub
in
xchg
lea
je
roll
lds
push
and
adc
popf
inc
ds
popa
mov
cmp
pushf
repz
cwtl
outsl
ljmp
scas
ja
adc
mov
and
repz
push
push
sarl
in
and
arpl
daa
xchg
and
and
sbb
xchg
lock
and
and
pop
inc
jle
lds
dec
rcll
xor
inc
