insl
mov
add
add
pop
add
add
add
add
notl
mov
rorb
std
mov
popa
fwait
and
lods
mov
mov
das
insl
iret
iret
sbb
dec
scas
outsl
repnz
adc
jmp
movsl
ja
mov
sti
iret
xchg
mov
sbb
add
add
scas
dec
ret
lea
and
and
inc
es
xlat
daa
das
arpl
pop
pop
popa
xchg
dec
ss
cmc
push
adc
pop
mov
mov
loope
cli
dec
imul
push
ss
adc
push
adc
jo
cwtl
lods
icebp
jp
ficoml
out
mov
inc
sbb
xchg
hlt
fisubrs
fdivl
aad
cld
or
jle
add
inc
xor
das
and
add
movsb
jle
and
insl
mov
sti
jns
ss
pop
lock
push
cmpsl
imul
les
mov
dec
imul
or
cmp
ret
push
jp
cmp
cli
pop
aas
jno
jl
mov
bnd
repz
imul
dec
loop
pusha
test
js
es
mov
or
jb
int3
sub
sbb
fisubs
cmc
outsb
xchg
dec
and
fdivp
cmp
sub
and
data16
inc
cmp
repz
call
dec
gs
dec
mov
insb
aam
inc
mov
cmc
jle
push
iret
pop
fildll
mov
lahf
imul
pop
fimull
inc
call
xchg
jmp
dec
xor
arpl
mov
gs
push
ss
cmpsl
and
out
xchg
add
xchg
je
inc
jns
inc
repnz
loop
in
sbb
leave
xchg
mov
dec
mov
dec
scas
mov
jmp
or
int
pusha
sub
xchg
mov
xchg
pushf
scas
jecxz
fildll
divl
cmp
push
js
in
jp
pop
popl
scas
mov
stos
xor
pop
dec
stos
pop
sub
testl
inc
xchg
loope
sub
cmp
int3
fstpt
fbstp
rorl
jl
jmp
and
cmc
dec
les
sub
dec
faddl
mulb
lods
scas
pop
sbbb
das
cli
pop
clc
cmp
cltd
inc
jp
imul
pop
or
leave
insb
test
push
inc
dec
lods
repnz
mov
sub
enter
inc
popa
orb
stos
xchg
sub
insb
jmp
gs
imul
dec
pop
dec
jmp
adc
fidivrs
lret
mov
popa
mov
je
mov
lcall
lods
xchg
les
aaa
or
sub
mov
mov
ret
addr16
in
fs
or
popa
adc
sahf
fwait
cmp
push
test
imul
or
dec
ret
dec
mov
pop
fisttpl
pop
add
jp
jbe
sti
inc
icebp
mov
or
add
xor
xchg
in
xlat
add
insl
sahf
and
addr16
out
in
cmp
je
out
ja
scas
pushw
jl
ss
testb
fsubrl
ret
pop
imul
jnp
xchg
and
repz
adc
sub
bnd
fstl
mov
dec
cwtl
adc
lret
pop
push
int3
es
imul
nop
mov
xchg
xchg
rcrl
lret
mov
lcall
mov
dec
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
ret
pushf
stos
cmpsl
pushf
ret
mov
push
mov
push
popa
loop
lods
test
adc
sub
sub
push
mov
or
jmp
popa
inc
hlt
inc
pushf
jge
push
pop
stos
and
mov
sbb
xchg
push
inc
sbb
adc
leave
pop
loop
ss
ds
scas
gs
adc
mov
dec
dec
xor
mov
das
inc
mov
jae
es
test
xchg
mov
in
and
sti
loope
sbbb
out
mov
and
pop
ds
add
jne
cltd
mov
adc
dec
clc
inc
mov
ja
or
mov
push
jecxz
or
add
pop
mov
inc
xor
or
popf
nop
data16
fstps
mov
push
scas
cmp
xchg
adc
sbb
orl
sub
shrl
push
xchg
sbb
push
mov
mov
push
stos
pop
inc
mov
enter
mov
icebp
mov
pop
pop
inc
les
xor
push
loope
push
test
std
in
scas
push
pop
pop
mov
sbb
push
cmpsl
and
dec
mov
sub
gs
lock
js
out
fdivp
loope
lods
add
add
daa
jo
mov
inc
aam
outsb
scas
dec
push
je
push
lea
mov
adc
xor
pop
push
mov
bound
pop
mov
inc
lods
testb
outsl
scas
add
push
mov
dec
dec
test
filds
xchg
push
and
sub
lret
in
addr16
test
int
sarb
jp
sub
test
lods
and
decb
xchg
or
sub
imul
dec
adc
xchg
stc
cmp
mov
jne
ss
push
pushf
mov
adc
mov
push
add
mov
repz
cmp
mov
loopne
rcr
fwait
inc
imul
dec
mov
dec
ret
jg
pop
out
mov
ret
and
daa
add
fwait
imul
scas
out
cwtl
pop
and
pop
inc
add
daa
repz
test
pop
dec
adc
xchg
pop
xor
cmp
or
decl
fldt
lahf
push
cmp
dec
aaa
sti
dec
push
loop
int
cmpsl
in
xchg
and
add
sbb
xchg
or
ret
adc
cmp
lcall
adc
stos
std
mov
int3
bnd
subl
icebp
mov
clc
xchg
and
icebp
sbb
jle
rorb
xor
or
pop
in
in
mov
add
in
rol
into
mov
in
push
scas
pop
ret
lods
sbb
jae
or
adc
xor
adc
mov
cmp
xorb
mov
jmp
hlt
imull
jl
scas
inc
jg,pt
pop
inc
out
fiadds
loop
cmp
lret
icebp
lock
test
mov
cmp
loopne
push
xor
fwait
lret
pop
popa
imul
stos
push
mov
pushf
ret
and
aad
push
pop
lock
pop
in
mov
sub
mov
jbe
mov
lcall
repz
cmp
xor
mov
je
subl
xlat
jnp
mov
or
mov
pop
int3
lcall
xor
enter
dec
xlat
pop
inc
mov
mov
sbb
mov
add
xchg
out
je
or
rcrb
mov
jp
jno
dec
mov
xor
fwait
mov
adc
lcall
mov
or
jmp
dec
sub
inc
orl
jnp
test
mov
sbb
jbe
pop
pop
hlt
sbb
bound
xchg
push
fwait
mov
pop
cmp
mov
xchg
dec
mov
fucomp
outsb
sbb
cmp
inc
inc
fldl
jne
lcall
loopne
or
orl
pop
roll
and
nop
shll
movsl
xchg
test
popf
sub
xor
xchg
aaa
jne
aas
pop
test
mov
inc
stos
and
pop
xor
push
pop
gs
movsl
xchg
aaa
vmovaps
cli
push
mov
mov
dec
jg
int3
pushf
jb
std
adc
shrb
xchg
aas
adc
jnp
or
sbb
jmp
mov
clc
lret
adc
jae
inc
xor
pushf
push
sub
ljmp
xlat
mov
add
sbb
imul
jg
sub
sbb
cli
fbld
popl
test
pop
sbb
scas
shl
push
repz
mov
jo
sbb
lods
cmp
mov
xor
shlb
inc
aad
ret
sarb
dec
js
mov
movsl
pop
mov
aad
jl
lds
push
cmp
adc
cmpsl
push
mov
shrb
sub
push
xchg
fimuls
inc
dec
push
enter
in
lods
fnsave
mov
ret
mov
lods
sub
sub
out
push
subb
jge
xor
scas
pusha
xchg
lret
push
and
cmpsb
iret
xchg
mov
jbe
cmp
fwait
xchg
and
mov
jnp
out
icebp
orl
cmp
sub
or
int3
sub
and
cmp
popa
fidivs
or
push
fistpl
jg
xlat
or
cmp
adc
gs
loop
mov
jge
xchg
insb
rol
lods
and
in
sbb
mov
ds
stc
out
and
inc
es
mov
loop
push
ljmp
mov
and
incl
dec
pop
add
or
popf
jne
push
or
sbb
mov
pop
mov
pushf
movsb
adc
sbb
and
setle
jne
mov
lods
insl
cmc
xor
stc
inc
inc
addb
inc
bound
dec
aaa
push
stos
mov
sarl
xor
pop
pop
push
pop
sahf
addl
mov
loope
scas
and
dec
and
cmp
ret
loope
int
fisubs
rorb
xor
aam
sub
in
xchg
cmp
lods
lods
rclb
or
mov
xchg
dec
mov
adc
rorb
dec
das
inc
dec
pop
imul
push
out
lock
mov
test
je
add
pop
daa
mov
inc
loopne
mov
xlat
fs
data16
mov
data16
push
lock
dec
fldcw
mov
adc
push
addb
dec
std
jns
sub
fimull
cmp
jae
ficoms
add
xchg
lods
dec
call
adc
js
outsl
sub
in
in
ret
nop
fsubs
je
ja
mov
xor
fsts
cltd
fimull
shlb
lret
xor
xchg
jbe
inc
xchg
test
adc
sub
call
shl
and
sub
or
popa
fisubs
push
stos
sub
loop
dec
lahf
pop
mov
mov
jp
pop
cwtl
loop
arpl
arpl
sub
mov
test
inc
push
mov
mov
dec
push
push
pop
out
test
adc
mov
pop
psubsb
xorb
push
repz
cs
stos
xor
jge
or
js
pop
dec
jmp
std
mov
in
outsl
fildll
push
out
xchg
test
cmp
jno
or
enter
and
inc
test
sbb
sar
pop
inc
adc
ljmp
inc
push
and
jl
push
jne
pop
push
sub
sbb
mov
push
insl
aas
aas
pop
pop
xchg
int3
addr16
inc
dec
cmp
add
xchg
adc
xor
or
inc
ljmp
orl
std
loope
jle
xchg
cmp
hlt
jb
and
mov
pop
sbb
push
jmp
ljmp
sbb
push
je
es
in
lcall
xor
fndisi(8087
mov
mov
jmp
outsl
out
inc
pushf
test
adc
sub
xchg
enter
xchg
cli
push
iret
or
xchg
mov
cltd
mov
test
stos
mov
xchg
and
xchg
sub
into
xchg
out
sbb
orb
inc
stos
push
mov
mov
insb
dec
sbb
cmpsl
incb
ljmp
imul
repnz
in
adc
xor
sub
jbe
push
sub
popa
lds
adc
sbb
stc
fmull
pop
mov
dec
repnz
jae
mov
cmp
adc
imul
mov
ret
cld
jne
es
mov
arpl
push
mov
mov
push
add
jecxz
mull
rcl
hlt
mov
adc
xchg
aad
mov
xor
mov
popf
insb
cmc
xor
out
aas
out
aam
push
lds
mov
les
pop
mov
inc
jmp
jp
adc
cmp
jecxz
sub
scas
int
mull
add
je
popa
mov
jmp
jp
iret
insb
jmp
jg
add
jae
ret
mov
popf
into
bound
repz
jns
mov
dec
fwait
add
and
stc
das
push
pop
inc
cld
repz
stc
push
jae
hlt
mov
mov
rcr
pop
jae
inc
cltd
push
cmp
pop
into
hlt
add
out
test
inc
out
push
ds
add
pop
ret
mov
popa
data16
adc
hlt
fadds
push
mov
add
cmpsl
aas
fs
lea
in
cld
cmp
xchg
mov
int
xor
iret
cld
mov
pushf
popa
test
popf
sahf
mov
scas
rcll
dec
adc
bound
sbb
fmull
and
ds
imul
fbld
xor
lret
push
jo
das
sub
jbe
mov
mov
pop
int
adc
xchg
lret
test
fists
fmul
and
call
aas
add
push
push
in
fisubl
addr16
fs
ljmp
insl
mov
test
push
insl
in
fs
xor
mov
push
adc
cmp
xchg
int
mov
inc
inc
repnz
pop
xor
sahf
jo
pop
jno
dec
mov
fsubl
sbb
mov
out
in
fdivl
dec
test
xchg
push
jns
xchg
inc
ret
push
out
sti
nop
pusha
push
lock
jb
idivb
lret
rcrb
popl
inc
pop
lcall
mov
jae
out
fcmovu
sbb
xchg
pop
scas
loopne
push
ljmp
dec
repz
mov
jg
push
cli
pop
xchg
add
cmp
das
xchg
adc
mov
xor
or
dec
sbb
in
ja
push
out
add
mov
and
push
add
int
xor
cmp
pop
and
adc
aam
adc
jle
adc
adc
shrl
in
ja
mov
cmpsb
jge
sub
push
cmpsb
insb
mov
inc
mov
mov
push
dec
push
sbb
sar
mov
jno
inc
das
cmpsb
jbe
lret
insl
ficompl
pmaddwd
cmp
push
push
mov
int3
test
push
arpl
and
jae
adc
inc
bound
inc
in
leave
mov
push
std
out
je
mov
fldcw
and
lret
sub
sbb
ret
std
push
and
out
dec
jl
insb
shrl
adc
stos
int
dec
notl
pop
mov
mov
cmpsl
or
cmp
clc
cmp
cli
lods
mov
in
mov
mulb
sbb
sbb
mov
dec
xchg
mov
insb
mov
xchg
out
in
fsubrp
push
leave
pop
addr16
mov
sub
pop
or
scas
call
add
repnz
outsb
scas
test
inc
and
data16
xchg
shrl
xor
sub
mov
shl
sub
test
sbb
cmp
popf
out
shl
xor
pusha
mov
fnstenv
pop
cmpsb
and
cmc
or
adc
popa
mov
push
sbb
sub
sbb
mov
jns
das
push
mov
cmpb
or
scas
leave
testl
addb
inc
popa
ja
pop
outsl
cmc
jbe
dec
fnstsw
iret
xchg
std
xchg
out
xor
pushf
pop
cmp
jg
aaa
fisttps
mov
stc
mov
and
dec
lods
and
pop
das
popa
outsb
xor
jecxz
mov
push
jnp
into
insl
and
sbb
cltd
pop
jns
xor
fisttpll
jae
pop
ljmp
xchg
stc
jle
add
in
test
or
mov
mov
sbb
repnz
mov
clc
leave
and
pop
jl
popa
stos
mov
pop
aas
mov
pop
gs
gs
fs
pusha
ljmp
mov
and
loop
mov
jmp
sbb
xchg
adc
or
xor
ret
jae
cmc
or
push
and
lods
or
out
mov
sub
enter
rolb
pusha
cld
mov
dec
pop
es
int3
sub
popa
mov
aaa
js
cli
adc
sarl
xchg
hlt
les
loope
mov
outsl
aam
dec
je
mov
ljmp
and
push
test
mov
shl
dec
or
mov
push
out
cmp
popa
incb
or
cmp
and
cmp
mov
jle
inc
mov
inc
negb
cmpb
fs
xchg
sub
dec
push
scas
mov
hlt
mov
mov
repnz
dec
ja
ja
out
xchg
cmpsb
sbb
fnstsw
mov
jmp
int3
mov
insl
sbb
pushf
cmpl
test
cld
push
add
and
cwtl
shrb
pop
mov
xor
clc
cmp
jmp
xor
jo
outsb
cwtl
popa
mov
dec
xor
mov
cmp
stos
cmp
les
push
int3
push
inc
call
mov
fwait
xchg
out
fs
xchg
imul
call
or
int
mov
movl
sub
xor
jge
enter
add
adc
or
or
mov
pop
dec
sub
mov
mov
adc
scas
sub
pop
adc
out
push
push
nop
daa
mov
dec
sub
hlt
movsb
dec
mov
xchg
insl
xlat
mov
mov
mov
cld
push
daa
pushf
mov
insb
adc
add
stos
inc
add
and
ret
mov
insb
mov
aas
dec
inc
cmp
cmp
push
cmp
mov
sbb
popa
or
ja
mov
inc
pop
jl
out
sub
adc
push
sahf
sahf
or
pop
arpl
xchg
stos
adc
bound
mov
paddd
cmp
nop
mov
cmc
jmp
adc
mov
call
out
test
pusha
add
outsb
pop
push
xchg
mov
xchg
sub
orl
aam
div
xchg
bound
and
pop
shlb
repnz
sbb
or
rcll
daa
pop
arpl
adc
push
cli
cs
imul
sub
xchg
inc
leave
aad
adc
stos
push
out
ja
cmp
mov
cmpsb
lods
xchg
outsb
push
mov
mov
jecxz
adc
nop
es
sbb
jno
mov
add
add
push
popf
inc
add
sbb
jp
mov
xchg
jne
jl
pop
popa
call
outsb
fsubrp
push
lret
outsl
mov
rol
shll
pop
or
inc
aam
outsb
lods
push
in
arpl
out
jo
mov
mov
loope
movsl
and
xlat
fisubs
jmp
cmpsl
iret
add
or
stos
loope
adc
mov
int3
cmc
jne
lret
aad
ret
stc
inc
pushf
icebp
aas
lret
fimuls
in
add
xchg
js
adcl
sbb
icebp
rcrl
repnz
fwait
outsb
mov
sub
mov
xchg
dec
lahf
ret
fstl
adc
add
mov
aam
push
pop
cmp
push
lret
push
mov
adc
outsl
ret
std
jmp
loopne
and
add
dec
ss
mov
pusha
lods
pand
xchg
push
cs
inc
bswap
out
sub
or
pop
and
sti
jl
es
sbbl
addb
loopne
rcl
mov
sub
jmp
xor
int
insl
incb
and
sbb
adc
adc
shlb
ss
adc
ljmp
sahf
sahf
add
sar
sub
les
push
mov
mov
aam
mov
mov
sahf
mov
std
out
call
ljmp
mov
push
mov
pop
std
sti
pop
daa
mov
enter
add
mov
jo
adc
mov
testl
mov
push
cs
cmpsl
rorb
mov
inc
xchg
push
aas
pop
lahf
mov
out
stos
dec
sbb
pop
rcl
xor
in
cmp
jne
in
leave
roll
fcoms
ret
jecxz
sbb
idivl
push
mov
enter
insb
in
ret
push
sub
fld
or
data16
jge
jae
dec
lods
mov
insl
ss
das
fidivs
sbb
or
sub
int
outsl
jne
inc
icebp
cwtl
scas
nop
ficoms
mov
pop
mov
xor
movsl
rol
mov
dec
add
jns
mov
movl
mov
lret
hlt
cmp
out
outsb
lds
cmp
fistpll
int
out
dec
sbb
es
mov
in
addr16
push
inc
sub
insb
dec
cmp
into
bound
dec
mov
insb
stc
test
push
push
xor
add
mov
out
leave
dec
or
sub
push
xor
inc
out
mov
jmp
xchg
push
push
inc
int
movswl
fwait
xchg
cmp
pusha
imul
arpl
lock
cmp
push
sub
mov
decb
fists
mov
pop
adc
sti
mov
inc
mov
jo
je
cmp
push
mov
loope
arpl
aas
cmp
and
cmc
add
out
xchg
out
aad
lret
push
cmp
xor
sub
jl
nop
dec
ja
xor
aaa
es
repnz
insb
daa
xor
scas
movsl
addl
push
popa
filds
add
adc
test
call
xchg
in
pop
jae
mov
add
pop
dec
mov
or
jo
xor
shl
rol
jae
lods
mov
rcl
out
lods
out
mov
lret
fsubrs
out
cltd
mov
sub
jp
xchg
xchg
mov
mov
pop
lds
inc
test
imul
outsb
pop
jmp
fsubrs
and
aas
jge
sahf
out
ret
sub
roll
adc
lret
pop
out
rorl
shl
mov
pop
stos
mov
cmc
jno
lods
popf
or
jge
dec
mov
jle
ds
stc
shll
and
cs
mov
fs
add
in
sbb
ss
sti
pop
stc
pop
cmp
enter
cli
mov
adc
jne
pop
dec
rcrl
mov
xor
mov
aam
inc
xchg
in
push
insb
stos
inc
inc
int3
mov
mov
jmp
push
mov
mov
clc
mov
cwtl
mov
int
push
bswap
add
sub
xor
dec
add
xor
aad
lods
pop
sbb
adc
aaa
das
addps
in
and
push
scas
pop
scas
xchg
add
movsb
dec
cld
cli
adcl
sbb
or
shl
or
test
push
outsb
pop
jnp
pop
push
lahf
mov
jne
icebp
filds
adc
shll
dec
ret
stos
shlb
addr16
push
cmpsl
js
cmp
out
outsl
add
jae
into
mov
jbe
push
loope
int
adc
push
inc
lcall
mov
push
out
call
pop
fdivl
mov
in
setge
adc
dec
shll
iret
xchg
mov
mov
fsubrs
and
adc
jbe
mov
rorb
add
out
push
and
sahf
push
je
jae
and
fdivr
lds
push
jne
leave
lret
and
dec
mov
insl
cmpb
dec
xor
lods
adc
dec
jg
jl
xchg
test
mov
mov
sbb
xchg
std
nop
pushf
push
and
fcompl
addl
push
test
push
rorl
sub
dec
dec
daa
test
leave
push
xchg
add
jecxz
sbb
lea
xchg
fiaddl
faddl
jae
fiaddl
pusha
cmp
and
testb
add
add
sti
ljmp
dec
fadds
in
fwait
push
andl
mov
jno
sbbl
js
adc
push
test
add
inc
or
cmp
lea
cltd
insl
push
push
xor
int
sbb
and
rcrl
sbb
xchg
fwait
ja
inc
jbe
mov
in
dec
insl
push
repnz
mov
inc
and
mov
cmp
cmp
mov
out
andb
lods
xchg
faddl
sub
ja
into
or
pop
push
inc
cli
pop
daa
xchg
sub
mov
and
adc
cld
mov
cltd
mov
push
xor
jb
stc
lret
push
lds
pop
dec
dec
ds
push
inc
mov
xlat
imul
mov
mov
lock
or
mov
lahf
mov
mov
outsb
adc
dec
int
dec
fisubrs
mov
cmp
dec
and
adc
stc
pusha
int
inc
push
ror
cmc
fidivrs
cmpsb
iret
loope
addr16
add
and
fstpl
xor
inc
outsl
xor
orb
push
cmp
jmp
jns
ljmpw
outsb
cwtl
inc
shld
lods
fwait
inc
add
mov
sti
pop
xchg
lock
xchg
xchg
sub
sbb
pop
loope
jge
fldcw
jae
or
push
ja
jmp
leave
pop
stos
insl
lods
cli
mov
mov
xchg
lret
pop
jmp
int3
addr16
or
adc
cmp
and
jnp
jnp
xor
scas
sbb
lret
out
and
sbb
repnz
loopne
imul
mov
int3
dec
std
stos
sbb
sbb
das
xor
mov
stos
data16
xchg
mov
lea
inc
call
int3
aaa
push
lret
cmc
shl
test
and
mov
scas
fnsave
cmp
in
shll
inc
cmp
fcmove
xchg
pop
dec
cmpsl
jmp
xor
mov
daa
dec
aad
add
and
xchg
jne
fdivrl
and
inc
jae
xchg
mov
push
shl
loop
cmp
jo
pop
sbb
cwtl
shll
mov
lds
test
xchg
mov
mov
inc
mov
push
sub
popa
xor
jecxz
push
mov
push
lea
jmp
push
icebp
mov
xchg
rorl
mov
test
mov
sbb
push
pop
inc
call
orb
pushf
mov
and
cltd
pop
movsb
sbb
lock
fistpl
inc
push
jg
jmp
cmc
sbb
not
push
cmp
es
push
cmpsb
dec
lahf
lock
out
push
and
adc
jns
mov
adc
lret
sbb
sti
jne
sbb
pop
xchg
add
stc
dec
into
ja
ret
jns
outsl
inc
js
clc
or
mov
pop
mov
lds
mov
dec
or
dec
lock
mov
sbb
fldl
pop
jmp
loopne
faddl
mov
mov
push
mov
in
outsb
aad
dec
icebp
inc
add
jnp
jo
push
pop
das
add
sub
loopne
jne
xchg
jae
inc
rcll
ret
fsubrs
mov
or
mov
mov
sbb
enter
paddusw
sbb
rolb
sub
loopne
adc
push
xchg
mov
sbb
in
ljmp
rorb
inc
and
nop
cmp
jbe
in
test
aam
mov
in
ret
rcrl
push
jo
mov
sub
cli
inc
pop
pop
stc
lcall
and
ss
hlt
xchg
std
mov
nop
stos
mov
je
add
push
sub
repz
in
in
xchg
iret
add
call
xchg
dec
cwtl
cmp
push
popf
mov
icebp
lret
enter
movb
push
leave
sahf
sub
iret
int
xchg
sti
inc
push
sbb
mov
dec
sub
sub
lods
filds
out
mov
xor
hlt
jge
test
lock
push
sbb
es
lods
out
pop
xchg
loopne
test
jo
mov
xchg
mov
ljmp
cltd
arpl
rol
xor
mov
xchg
xchg
imulb
dec
cmc
mov
jno
shr
addr16
mov
xor
insl
lea
sbb
lea
int3
pusha
jo
sub
adc
insb
pop
pop
out
pop
aas
ret
xchg
dec
icebp
mov
adc
jae
popa
mov
adc
add
sbbl
jle
jae
call
push
inc
inc
mov
mov
push
push
dec
frndint
dec
test
ret
pop
imull
test
out
adc
or
fiadds
aad
adc
mov
jnp
pusha
add
mov
enter
data16
divb
scas
add
inc
push
jp
push
ljmp
xor
popf
hlt
push
sbb
dec
stos
in
repz
loop
lcall
inc
imul
sub
out
pop
mov
mov
sahf
push
push
dec
stc
cmp
jno,pn
add
cwtl
sti
pop
inc
mov
cld
call
inc
ret
mov
movsl
mov
popf
ja
cmovo
fwait
xor
popa
push
mov
cmp
cmp
add
xchg
dec
cltd
cmp
pop
jae
xor
in
pushf
incb
aaa
fs
cmp
outsl
mov
test
gs
sbb
xor
mov
mov
xchg
rcrb
jmp
std
clc
and
pop
or
inc
dec
fistpll
jg
mov
add
sbb
mov
mov
sub
cwtl
fsubrp
or
mov
into
lods
and
stos
shl
cmp
and
adc
pop
nop
mov
movsl
subl
add
loope
and
mov
push
inc
push
out
xchg
into
xor
imul
xor
in
adc
mov
push
pusha
and
mov
sti
xor
repz
rorl
inc
push
mov
cmp
jle
mov
xor
jo
pop
gs
movsl
sbb
push
mov
mov
add
cmpsb
add
cmp
sarb
insb
fwait
add
ret
mov
out
mov
sub
dec
in
mov
pushf
je
push
sbb
mov
cld
fimull
mov
xor
in
fists
mov
paddusb
push
add
push
fdivr
or
divb
ds
aam
loop
fsubs
and
sbb
paddb
shll
lcall
pop
xchg
mov
movsl
cmpsb
sub
or
ljmp
dec
lret
push
lret
dec
rcr
or
inc
push
add
adc
mov
mov
dec
dec
mov
jno
gs
xor
xchg
scas
and
mov
orl
jnp
mov
mov
or
lea
repnz
add
inc
sbb
cmpsb
test
sub
cmpl
in
cmp
dec
cwtl
lahf
js
and
cltd
dec
or
insl
push
shrb
mov
fcmovnu
or
pop
scas
pop
pop
int3
fcom
in
dec
cltd
out
movsb
add
mov
fistps
sub
filds
mov
xchg
out
leave
aaa
push
jns
xor
idivb
lret
scas
fcoms
xchg
repnz
and
dec
mov
mov
push
aaa
inc
sbbb
pop
or
mov
sub
lods
mov
sbb
jo
or
loopne
imulb
ds
dec
in
js
mov
mov
test
pop
adc
cs
jae
sbb
add
adc
clc
repnz
or
movsb
pop
nop
xlat
in
les
ljmp
mov
lea
pop
fldt
mov
in
push
mov
pop
and
shrb
outsb
pop
dec
push
sbb
adc
mulb
mov
push
fs
scas
sub
adc
sub
movsl
dec
pushl
shrb
fldt
or
inc
js
push
sbb
loope
pop
push
sub
sub
and
ja
lea
scas
ds
cmp
add
popf
pop
jl
cmp
pop
adcl
movsl
jno
and
and
insb
inc
data16
mov
push
pop
lock
cmc
mov
cmpsb
fstpl
cmp
mov
adc
push
jp
or
nop
in
adc
in
xor
jb
out
sub
test
bound
or
cmp
mov
pop
inc
mov
fisttpll
jge
dec
popf
sbb
add
test
popf
or
sub
mov
xor
mov
mov
inc
jns
dec
cld
notl
cmp
std
mov
inc
fadd
outsl
mov
and
repz
out
ljmp
lods
outsb
xlat
sti
in
pop
add
cmp
aad
ror
push
mov
mov
jp
mov
popa
mov
bound
jp
mov
inc
cld
inc
pushf
rorl
movsl
imul
jae
push
fst
xchg
icebp
cmc
add
or
rcr
or
aam
cmp
test
pop
push
push
mov
pushf
out
fisubrl
sub
outsb
scas
jp
sbb
data16
mov
jno
movsb
sub
inc
lods
inc
aaa
cmp
mov
mov
jecxz
fsts
js
aaa
and
add
mov
dec
out
sbb
test
pusha
sub
iret
out
add
mov
pop
mov
in
stos
dec
or
pusha
xor
nop
push
jno
pushf
int
jbe
xchg
xor
and
enter
or
dec
mov
loopne
push
mov
pop
int3
add
stos
mov
icebp
add
add
prefetcht2
or
rol
loope
sarl
icebp
and
aad
hlt
mov
repz
fs
xor
mov
push
jno
pop
dec
sbb
push
outsl
xchg
aam
sbb
adc
pop
jb
rcr
call
es
das
push
xor
pop
ja
insb
loope
jp
pop
fsts
pop
add
mov
mov
bswap
sub
xor
scas
push
popf
dec
call
xchg
xor
jnp
lret
or
in
hlt
mov
pop
into
adc
inc
lock
mov
sbb
push
movsl
ljmp
cmp
int
sbb
mov
loopne
in
and
xor
pop
mov
aaa
out
das
mov
push
jb
inc
shrl
insb
cltd
fisubrl
sbb
js
rcr
adc
stos
hlt
push
outsb
dec
sbb
pop
xlat
rorl
dec
jl
cmp
notb
push
in
inc
lcall
sub
mov
aam
inc
arpl
test
fidivs
das
fscale
and
fbstp
cmp
cmp
mov
jns
nopl
xchg
test
push
in
xor
adc
rcll
mov
gs
pop
in
add
pop
int
cmpsl
jnp
pop
fidivl
sub
lahf
dec
stos
cmp
cmc
test
sti
adc
ljmp
loopne
pop
pop
cmovge
xor
imul
cmp
aam
shlb
push
fildll
iret
dec
cwtl
addl
inc
push
andb
cwtl
cmp
cmpsb
jae
jb
hlt
es
pop
orb
sbb
jno
add
or
xchg
or
adc
fldcw
sbb
pop
mov
cltd
decl
adc
bound
ds
sbb
cmp
xor
ja
lret
jle
and
inc
ljmp
adc
lret
loop
gs
push
mov
jne
and
les
dec
mov
aad
adc
mov
stos
fnstcw
loop
iret
loopne
xor
push
dec
dec
xor
adc
loope
test
scas
jns
push
push
xchg
xchg
imul
lea
inc
in
jecxz
push
xchg
pop
filds
lret
add
jecxz
jl
in
call
adc
neg
mov
sub
nop
pop
fbld
fldl
shrb
add
jmp
dec
fisubl
cmp
nop
loopne
xlat
movsb
mov
dec
jg
mov
sbb
leave
iret
cmp
jl
adc
sub
cmp
jl
loopne
sbb
and
inc
loop
inc
pushf
roll
shrl
jge
je
pop
ret
shlb
icebp
loop
nop
or
or
jge
es
daa
cmp
stos
or
ja
outsl
cmp
or
add
cld
dec
xor
imul
loopne
fldenv
cmp
mov
sbb
loopne
add
outsb
push
inc
ljmp
out
sbb
push
testb
lock
mov
dec
jle
or
xchg
inc
push
jmp
jle
pop
or
add
or
int
loop
push
mov
inc
int3
mov
and
into
sbb
fcmovnbe
pop
adc
loope
add
jle
xchg
hlt
std
nop
in
pop
jae
or
enter
data16
imulb
iret
rolb
outsl
sti
sahf
pop
leave
repz
adc
jne
inc
or
mov
mov
dec
xchg
mov
xor
jp
lret
pop
fldt
add
inc
imul
loope
out
daa
xchg
xchg
xchg
sti
dec
test
xchg
add
push
cmp
fcoml
sub
xchg
xchg
jl
addr16
dec
sbb
ds
jae
movsl
aam
lock
inc
sub
and
call
ljmp
scas
divb
or
xor
and
or
ljmp
stos
ss
inc
clc
lock
ret
or
loope
aaa
mov
nop
cmp
stos
add
in
and
decl
sub
push
lods
adc
xor
inc
sbb
push
or
add
adc
or
ljmp
fwait
in
mov
das
xchg
adc
int3
xchg
cmpsb
sub
cmp
xor
and
jae
testl
cmp
mov
push
push
cld
orb
mov
lock
lret
lret
adc
mov
js
pop
sub
imul
push
aad
lret
sbb
push
imul
dec
xor
call
outsb
out
pop
cmpsl
mov
sbb
push
lret
iret
sub
xor
pop
outsb
dec
add
jecxz
hlt
cltd
outsl
sbb
sarb
push
bound
jo
mov
mov
mov
xchg
je
jmp
mov
lea
loop
jecxz
je
stos
fildll
mov
push
mov
mov
movsl
jle
subb
shll
fxch
lds
mov
test
outsl
adc
xor
push
or
call
iret
inc
daa
movl
or
int3
dec
mov
pop
inc
mov
fsubrl
lea
fucomi
std
or
popf
leave
out
jo
imul
mov
scas
dec
inc
call
lret
insl
fwait
push
sub
call
jns
lods
xchg
or
push
ss
lock
or
dec
out
bound
test
andb
adc
mov
sbb
daa
dec
enter
sbb
imull
daa
lods
xlat
xchg
jnp
sbbb
imul
push
fstp
std
test
or
jecxz
in
sahf
mov
push
ds
movq
mov
frstor
pop
scas
or
push
cmp
add
pop
mov
cltd
pop
pop
popf
jo
inc
sbb
jnp
fcoms
xchg
cs
push
dec
cmpsb
enter
cli
ja
xchg
and
mov
push
shrb
int
or
xchg
mov
ret
and
pusha
cmpsb
cmp
lahf
lods
testl
cltd
add
jbe
insb
pop
mov
movsl
pop
idivl
jno
mov
inc
movsl
or
xor
mov
lods
nop
idivb
push
iret
aaa
adc
jae
mov
movd
rcll
fldcw
push
xor
daa
or
hlt
stos
jbe
cld
ljmp
ffree
push
aaa
jo
sub
jne
in
repz
adc
inc
sub
data16
mov
rclb
xchg
xchg
fwait
xchg
pop
inc
and
repz
jb
stos
adc
jg
mov
scas
loope
cmp
lret
ds
rcr
icebp
fs
xchg
push
cmp
dec
test
mov
xor
sbb
adc
aaa
cwtl
jle
sti
mov
inc
out
fadds
xchg
adc
lahf
mov
lret
loop
inc
mov
ds
or
jg
je
xchg
push
add
ds
xchg
test
sub
mov
insl
adc
popa
or
pop
mov
movsl
add
and
mov
in
leave
fdivrs
icebp
aam
xlat
inc
mov
adc
inc
stos
xchg
pop
push
xchg
enter
shll
jp
sub
outsl
std
jnp
mov
sahf
fwait
mov
clc
sbb
ret
iret
cmc
cltd
lods
es
cwtl
fs
push
js
mov
lret
out
dec
cmp
dec
imul
adc
sti
fildl
xchg
jecxz
sub
loop
jbe
push
and
leave
bound
lock
lcall
push
mov
dec
add
ljmp
das
add
lret
cmp
adc
stos
inc
dec
cmc
filds
sbb
dec
sbb
sbbl
orb
leave
pop
xor
add
sbb
lds
mov
pop
mov
ljmp
jle
jnp
in
jle
js
sti
add
jmp
pushf
jns
inc
nop
mov
ds
jne
dec
xor
es
sbbb
jle
mov
gs
or
push
repz
mov
cs
inc
mov
cmpb
inc
int
arpl
sbb
out
jg
pop
inc
mov
insl
mov
repnz
xchg
xor
push
insb
out
and
adc
inc
int3
out
out
lods
ficompl
dec
cmpsl
push
inc
mov
fidivrl
add
lock
push
push
push
icebp
sub
mov
cmp
icebp
iret
sbb
or
mov
push
test
jae
andb
mov
jl
mov
mov
in
sti
pop
pop
mov
mov
lods
add
sub
and
mov
pop
adc
cmp
pop
jbe
pushf
dec
arpl
inc
sub
push
or
and
mov
pop
imull
pop
jnp
shll
bound
pop
push
arpl
stc
xor
js
pop
mov
xor
clc
pop
mov
icebp
sub
popf
out
pop
je
iret
cmpb
push
fwait
out
inc
lea
mov
mov
and
scas
fwait
mov
fisttps
icebp
mov
and
je
ljmp
fbld
cli
dec
nop
and
mov
jae
xchg
pushf
xlat
call
adc
inc
push
xchg
mov
rorl
or
xchg
jp
addr16
xor
or
leave
cmp
sbb
mov
xchg
adcb
add
jae
xchg
mov
push
jge
mov
stc
out
mov
sub
sub
xchg
xchg
sti
pop
add
repnz
subb
mov
xor
repz
jbe
jecxz
pushf
lods
add
cmp
pop
je
mov
add
fsubrl
cmp
xchg
sub
inc
jmp
out
lods
pop
loope
bound
jmp
popa
mov
and
lds
out
stos
mov
sar
adcl
loopne
mov
bound
loopne
mov
xor
inc
inc
lret
dec
shl
dec
inc
loop
out
mov
pushf
mov
jae
add
add
insl
sete
stos
pop
sahf
mov
and
popa
sahf
shrb
mov
aad
cmc
lds
inc
sbb
mov
xor
push
adc
jno
mov
ret
xchg
jge
xchg
adc
inc
jno
arpl
mov
out
fldenv
push
fcoml
inc
ljmp
sbb
pusha
negl
mov
mov
shrb
lea
cmc
inc
pushw
daa
into
mov
ljmp
mov
dec
cmpsl
js
add
in
lods
cmc
mulb
jle
cmp
cwtl
adc
scas
cmp
scas
adc
jle
andl
mov
bound
push
sbb
inc
cmpsb
ret
pop
sbb
mov
xchg
and
sub
and
ficomps
add
int3
and
outsb
mov
mov
gs
pushf
sbb
int
mov
sub
cwtl
pop
cld
jmp
out
scas
pop
bnd
adc
sbb
std
cmp
pop
pop
dec
dec
imull
add
mov
mov
jl
pop
cmpsl
jecxz
pop
loop
mov
lret
in
sahf
out
cwtl
dec
inc
mov
mov
and
cwtl
dec
sbb
pusha
jbe
xor
daa
pop
mov
mov
sbb
rcl
jnp
nop
aam
push
and
in
in
sti
sahf
iret
mov
clc
sar
inc
movsl
adc
mov
pushf
shl
xor
stos
adc
xchg
ret
mov
sbb
fcomps
fiadds
sub
or
ds
ja
cmp
aaa
repz
nop
mov
in
ret
shrb
out
insl
adc
int
pop
jb
jge
jbe
jmp
imul
cli
jo
adc
xchg
inc
popf
loope
jmp
sbb
imul
xor
lods
xor
das
xor
fldt
lret
mov
sub
cmp
pop
into
adc
mov
lret
aaa
cmc
repz
into
insb
or
pushf
cltd
push
mov
les
lods
fisubrl
fimuls
fdivp
dec
stos
xchg
xor
and
adc
xchg
mov
jno
mov
or
leave
pop
and
mov
dec
sub
jl
out
repnz
dec
stc
frndint
xor
cwtl
xchg
cmp
gs
xchg
mov
jae
cmpsl
lds
shrb
cmpsb
imul
and
sbb
push
xor
push
cmp
sarl
or
and
out
int
dec
inc
mov
repnz
mov
inc
add
mov
movsl
movsb
fsts
mov
fnstsw
sarb
inc
std
xor
push
mov
jle
rol
fwait
mov
movsb
mov
xchg
frstor
repz
imul
adc
pop
mov
lret
xorps
fstpt
xchg
std
out
mov
insb
and
xchg
mov
fwait
shr
cld
pop
or
das
arpl
adc
shlb
ss
sti
ret
jbe
clc
hlt
outsb
inc
pop
pop
ret
dec
mov
and
bound
enter
lods
adc
jg
add
inc
popa
cmp
xlat
lret
and
pop
mov
mov
xor
dec
mov
sahf
mov
sub
push
test
bound
adc
xchg
and
inc
push
sbb
or
je
push
je
add
lds
inc
cld
push
push
push
and
pop
jb
mov
adc
xchg
rcll
or
pop
pop
test
rclb
push
and
cmpb
jno
cwtl
dec
push
movsb
dec
ds
jmp
daa
std
xchg
cmp
mov
stos
pop
push
repz
push
mov
inc
add
push
loopne
not
xchg
ret
das
pop
adc
xor
xchg
lcall
arpl
mov
rclb
das
sbb
insb
les
cmp
dec
ret
icebp
movsl
or
test
and
popf
in
test
or
cmpsl
imul
mov
jb
in
inc
xchg
mov
clc
cmp
imul
and
pop
sub
mov
mov
cmovne
cmp
dec
idivb
iret
lcall
jle
xchg
stc
test
mov
xchg
push
popa
dec
pop
pop
lock
pushf
xchg
out
lcall
cmp
cwtl
sti
pop
clc
scas
mov
ret
sbb
out
test
inc
out
cmp
js
or
arpl
cmpl
fwait
dec
jae
stos
lock
nop
icebp
into
cmpsl
push
and
lret
sbb
aas
loop
push
mov
or
xor
je
mov
cltd
call
daa
jp
rorb
test
sub
loope
mov
popf
in
into
lcall
pop
insb
arpl
adc
push
aaa
rcll
insl
xor
xlat
add
repz
ja
add
mov
jnp
inc
or
out
add
cmc
adcl
cmp
jl
mov
cmovge
lret
inc
stc
inc
xchg
outsl
loop
adc
sub
ret
int3
mov
sbb
mov
jle
stc
inc
call
sahf
clc
shll
pop
dec
push
jnp
pop
stc
sub
imul
fisttpl
mov
ret
xor
imul
push
outsb
data16
mov
orb
lds
xor
inc
sub
or
pop
movsl
cmpsb
andps
pop
inc
mov
in
add
rcrb
push
outsl
bound
mov
loopne
out
inc
mov
vprotd
js
test
mov
xchg
cmc
mov
insl
ret
gs
cmp
popa
aas
jmp
sti
dec
or
dec
mov
roll
mov
arpl
out
cld
jl
stos
lods
lock
fbstp
add
mov
mull
test
dec
pop
cmp
add
cld
or
movsl
pop
mov
jecxz
sub
outsb
lock
pop
jnp
inc
sub
mov
sub
cwtl
loop
jnp
add
sbb
sub
cs
popf
testl
sbb
sti
pop
dec
ljmp
push
loopne
xor
push
es
int3
fstp
mov
jbe
int3
daa
ljmp
out
cs
arpl
fisttpll
cmp
test
adc
je
stc
ds
inc
mov
testl
add
leave
pop
or
pop
insl
clc
ljmp
xor
inc
jecxz
std
inc
pcmpeqb
adc
xor
inc
pop
and
sbb
sub
ljmp
sub
int
out
test
jne
pop
jns
dec
mov
jo
jmp
insl
add
popf
lea
lcall
dec
jno
or
popf
jecxz
sbb
dec
xchg
sahf
jnp
shll
out
cli
push
jnp
jle
adc
pop
push
out
stc
xor
leave
jae
fistpll
and
sub
mov
push
lret
xlat
filds
and
xchg
adc
xor
ss
shlb
dec
icebp
and
punpcklbw
xor
jnp
ret
inc
sbb
insl
scas
jnp
in
adc
xchg
xchg
add
pop
jae
mull
xor
jo
or
lods
pop
lods
and
mov
sbb
subb
add
adc
push
push
pop
imul
pop
add
sarb
mov
int3
ja
push
ljmp
aas
loope
fsubl
or
or
into
mov
dec
dec
dec
mov
or
std
sbb
push
dec
adc
mov
xor
arpl
and
test
inc
gs
pop
cmpsb
cmp
adc
enter
jmp
loope
dec
xchg
jne
arpl
inc
inc
mov
adc
push
into
mov
test
popa
sub
push
lock
xchg
jmp
loopne
cmpsb
mov
ret
mov
andb
jne
dec
add
push
popa
fisttpll
lock
mov
ret
mov
imul
push
adc
ljmp
inc
lret
pushw
sbb
rcr
paddusw
xchg
add
add
mov
inc
aam
dec
push
mov
movsb
xchg
push
cmc
insb
aaa
inc
loop
or
dec
jg
xlat
pop
mov
imul
push
sbb
add
adc
pusha
xor
jge
iret
and
fldt
inc
inc
cwtl
xor
jmp
sar
inc
lods
mov
xor
movsl
mov
sbb
mulb
pop
int
push
xchg
pop
movsb
stos
mov
xchg
addl
popf
jmp
push
and
fsin
fiadds
xchg
dec
je
jp
lods
dec
or
shll
nop
jae
aas
or
sbb
iret
pop
jns
and
test
xchg
push
cmpsb
mov
cli
int
ds
and
add
adc
push
cltd
jb
sbb
test
cmp
pop
stos
xchg
mov
sub
icebp
iret
pop
cmpsb
pop
lods
test
cld
mov
jle
outsb
inc
mov
jo
and
sub
fisubrs
mov
cli
loop
sbb
adc
inc
rcrl
aad
pop
daa
push
cmp
ret
ficoml
in
imul
jg
lea
mov
mov
dec
cs
mov
les
mov
fidivrs
int
fdivrs
sub
mov
inc
bound
in
popa
addr16
nop
icebp
jp
addr16
sub
dec
in
or
call
and
std
xchg
and
fisubrl
scas
lea
ja
fcmovbe
jnp
out
adc
stos
mov
je
les
sbb
sahf
push
mov
ja
push
scas
les
sub
mov
push
clc
lods
clc
dec
icebp
inc
jp
xor
push
xchg
popa
sbb
nop
mov
or
lds
test
ljmp
loope
pusha
mov
jns
cmp
daa
shll
in
sti
jge
testb
mov
push
push
and
push
mov
sub
icebp
inc
imul
jle
dec
sbb
lea
adc
push
inc
notb
mov
stos
sbb
fmulp
fstpl
cmp
int3
push
les
out
cli
clc
ret
push
jno
stc
mov
jmp
aas
xchg
sub
pop
out
pop
js
or
or
mov
push
roll
imul
cld
aaa
aaa
int
cmpsl
or
and
jne
inc
rcll
mov
xchg
aam
adc
sub
enter
mov
and
into
call
loop
lods
aas
dec
xchg
push
das
add
nop
hlt
or
shll
lea
cmp
jge
xchg
neg
or
sub
pop
fwait
or
pop
lods
shrl
mov
rorb
jns
inc
push
mov
inc
or
push
lcall
lcall
sbbl
sbb
movsl
popf
lret
cmp
add
sbb
dec
adc
jg
popf
jecxz
sbbl
push
fstpt
arpl
out
jnp
ljmp
in
cmp
mov
cld
bound
cmc
jns
int
cs
adc
ljmp
xor
in
mov
adc
aaa
mov
sub
ss
push
xchg
lock
jns
fcomps
in
jecxz
xor
jno
push
mov
or
dec
nop
loope
movsl
lahf
sahf
repz
jmp
repnz
lret
scas
sub
int3
popa
movsl
xor
mov
adc
xchg
sbb
pushf
ljmp
xlat
cmp
xchg
leave
mov
movl
inc
out
jl
mov
imul
insb
leave
push
in
adc
fnstcw
mov
rcrl
outsb
dec
xor
add
pop
lahf
cmpsl
inc
das
add
pop
arpl
loop
cmp
mull
test
push
push
push
cmpsb
sbb
pop
or
int
insb
mov
push
fimuls
fadd
shl
shrl
cmpsl
jbe
mov
pop
fcmovnbe
and
and
mov
xchg
jmp
dec
mov
mov
adc
pop
leave
inc
jmp
sbb
mov
mov
out
push
mov
popf
inc
cld
imul
mov
inc
dec
aad
xor
sbb
out
jge
mov
cmp
dec
cmp
push
push
cli
stos
pusha
mov
xchg
push
mov
mov
in
cmp
xchg
aas
push
pop
sbb
mov
mov
jnp
xchg
mov
adc
or
test
dec
popf
in
jne
xchg
mov
mov
push
xchg
inc
adc
fwait
sahf
mov
pop
ss
mov
setns
lods
lods
andl
roll
ljmp
loop
mov
fdivl
lret
inc
adc
and
push
rclb
push
enter
mov
xorl
stos
pop
or
lock
mov
sbb
push
cltd
mov
fcmovb
push
pop
jns
inc
ja
adc
mov
jmp
cmp
test
sub
pop
rclb
add
aaa
sub
jns
imul
js
pop
mov
data16
lds
jb
movsb
into
arpl
xchg
add
adc
popf
adcl
mov
repz
or
cmp
rolb
xchg
arpl
mov
push
xor
test
in
in
sbb
pop
adc
mov
or
mov
in
addr16
bound
add
das
adcb
repnz
xchg
imul
repz
push
out
cmpsl
mov
loop
mov
xchg
jge
mov
in
movsb
vmwrite
sbb
mov
jge
stos
lret
sub
mov
cmp
inc
push
lods
push
xchg
sti
inc
es
sub
dec
loop
jne
aas
sahf
add
sub
inc
jo
and
xor
xchg
jmp
pop
ja
inc
push
xor
test
sub
cs
cld
jo
incl
out
and
out
in
jmp
nop
cld
mov
ljmp
inc
dec
push
and
mov
adc
sbb
insl
stos
mov
in
mov
mov
pop
adc
movsb
xchg
imull
stc
mov
dec
push
int
push
push
faddl
movsb
cmp
rcl
out
stos
mov
sbb
jecxz
pop
negl
pop
and
dec
lods
gs
in
mov
adc
xchg
dec
aam
es
push
dec
and
mov
xchg
pop
jns
rcr
xchg
jp
inc
cmpsl
jno,pn
dec
xor
ror
xor
adc
insb
fst
jns
cmpsl
out
aad
sti
dec
fnstsw
fcmovbe
movsl
addr16
or
inc
repz
sub
hlt
cmp
movsb
das
adc
cwtl
push
dec
leave
pop
out
cmc
jmp
push
xchg
shlb
divl
in
add
loop
push
push
pop
and
je
sbb
lods
push
popa
lret
jb
in
pop
movsl
cld
cmp
repnz
mov
inc
or
stos
cli
lret
sbb
iret
or
pop
inc
adc
mov
fs
add
xchg
inc
and
into
xor
rcrl
push
int
mov
shrl
lret
enter
mov
repz
sbb
jge
push
or
in
je
cmp
ljmp
mov
inc
mov
xchg
int3
pushf
ds
lret
scas
sbb
leave
mov
or
insl
cs
pop
aam
lret
insb
ret
push
push
aam
xchg
mov
adc
orl
sbb
movsb
cmc
out
sub
ret
xor
cltd
ror
push
add
movsl
out
mov
xchg
jmp
xor
jnp
mov
ret
hlt
add
ja
popf
pop
cld
adc
inc
push
gs
adc
fisttps
dec
ljmp
jmp
rclb
lods
push
push
popf
stc
sub
call
aam
xchg
jb
mov
into
push
sahf
rcl
mov
jnp
dec
mov
sub
dec
adc
push
movsb
popf
mov
add
or
sub
insl
mov
mov
inc
ljmp
and
sbbl
xchg
fisttps
sbb
inc
mov
mov
shll
aad
cmp
dec
mov
insl
aam
lcall
movsl
and
inc
jle
add
repnz
idivl
xchg
cwtl
lret
sub
jmp
and
sub
dec
jecxz
pop
dec
shlb
xchg
imul
cs
mov
jmp
and
sahf
stos
mov
mov
or
xor
dec
out
pop
repnz
push
lods
lods
sub
lret
adc
rcrb
sub
xor
repz
js
aad
adc
sbb
hlt
mov
mov
xchg
fs
mov
push
add
push
mov
pop
dec
push
xchg
ja
push
jbe
stos
clc
pop
ret
inc
test
mov
push
pop
loopne
sbb
data16
outsl
dec
cmp
add
std
movsl
fwait
pusha
adc
subb
inc
aas
fidivl
inc
dec
pop
pop
in
push
aad
mov
call
into
ljmp
out
insl
add
add
ffreep
insb
xchg
mov
lods
int
xorl
pushf
mov
pusha
dec
inc
fcomi
mov
pop
adc
mov
sub
sub
push
xchg
inc
push
push
inc
pushf
ja
scas
jle
jmp
push
mov
popa
dec
jmp
and
jle
lock
lock
xchg
scas
jnp
dec
ret
fnsave
dec
add
pop
fs
shr
out
mov
cld
add
into
lret
bound
iret
into
adc
insl
rcll
iret
lods
push
int
data16
sbb
outsl
push
pop
bound
cmp
add
pop
fadd
shrl
mov
jae
mov
stos
pop
mov
cmp
icebp
loope
push
shlb
imul
sbb
ja
push
dec
leave
sbb
dec
les
push
mov
jae
jge
int
mov
inc
adc
xchg
loopne
out
or
sub
fwait
mov
push
movsl
out
cwtl
outsl
mov
pop
push
inc
or
ret
hlt
push
popf
loopne
and
add
xor
call
loope
mov
in
inc
dec
sahf
xor
xchg
xchg
lret
mov
ljmp
pushl
mov
xchg
and
dec
out
cwtl
xchg
aad
scas
es
jns
std
stos
stc
enter
mov
pop
jmp
jb
mov
push
mov
jl
sbb
mov
mov
sahf
dec
mov
lock
mov
ds
sub
popa
sbb
fcoms
lret
out
push
test
loopne
or
hlt
jecxz
sahf
push
ljmp
dec
cmp
mov
mov
dec
cs
fcmove
cmp
jle
arpl
fmull
xor
ljmp
lahf
mov
xchg
jnp
imul
push
imul
dec
mov
scas
pusha
add
out
jns
jbe
loop
mov
lock
mov
mov
adc
pop
je
inc
cld
sub
repz
ret
adc
jb
push
pop
fldenv
xchg
dec
xchg
enter
xor
inc
icebp
cs
mov
outsl
int
or
aam
xchg
ret
jecxz
cld
dec
js
int
rclb
pop
inc
popf
push
adc
repz
mov
fiaddl
insb
fstl
dec
push
pop
push
xchg
mov
and
adc
jb
jle
push
rcrl
jae
and
insb
lea
or
xor
dec
sub
xchg
in
inc
mov
popf
ret
adc
dec
pop
mov
mov
adc
sbb
push
mov
insl
mov
jmp
xchg
xor
ret
inc
mov
jg
imul
pop
enter
fwait
mov
ds
pusha
lret
ret
testb
push
addl
loopne
gs
maxps
add
lret
jne
xchg
dec
push
mov
nop
or
dec
aas
nop
pop
jecxz
adc
push
and
stc
mov
mov
xor
popf
xor
fcomps
mov
inc
sahf
insl
pop
or
push
cli
sub
inc
test
lods
xchg
lock
loope
xchg
les
sbb
and
add
jle
push
inc
push
lds
xor
dec
cmc
cmp
inc
rclb
dec
inc
stc
lret
scas
dec
add
dec
or
dec
jae
mov
call
test
ljmp
xchg
ljmp
cs
fstps
loop
int3
pop
stos
push
push
inc
mull
mov
lds
mov
push
jb
dec
or
dec
add
aam
stc
or
mov
cmp
dec
jns
mov
adc
ss
aad
ds
push
std
jp
cmpl
dec
rolb
mov
xchg
cs
lcall
sub
daa
or
test
mov
nop
and
sahf
sub
fdivrl
inc
jle
out
mov
test
stos
push
sbb
rep
jne
cltd
cld
sub
test
pop
mov
xor
cmp
sbb
rcll
sbb
adc
jo
ja
lahf
jp
lea
ret
sbb
xor
cmp
int3
rorb
pop
pop
or
movsl
xor
repz
inc
and
adc
stos
negb
btc
and
fidivrs
dec
dec
push
dec
sbb
mov
outsl
lock
jns
push
pop
mov
enter
cwtl
mov
or
add
hlt
push
xchg
dec
call
fldcw
or
movsb
mov
or
and
pushf
in
pop
ja
cwtl
stc
push
fdivrs
stos
pop
push
cli
aas
or
call
movsb
cmp
dec
mov
xchg
and
lret
shrb
mov
ret
adc
fwait
ja
arpl
adc
mov
jmp
scas
xchg
adc
cmp
in
xorb
loop
xchg
icebp
gs
sub
test
lahf
test
scas
loop
repz
xor
xorl
push
insl
cmp
mov
lea
mov
shrb
jb
add
int3
xlat
imul
lds
and
pop
push
lret
das
repz
pop
pushf
int
jl
xor
les
imul
pop
aad
ret
iret
and
cmp
insl
imul
fmull
dec
ret
iret
xchg
mov
push
insb
invd
xorb
add
add
out
add
in
in
mov
sahf
mov
dec
pop
sub
data16
mov
xor
fcmovbe
push
push
cmp
repz
dec
out
insb
aam
sahf
mov
sbb
sbb
data16
loop
aam
xchg
sbb
push
push
aaa
sub
mov
scas
push
out
testl
jecxz
sahf
cli
adc
popf
push
or
popa
push
inc
mov
push
imul
dec
dec
popfw
out
in
ss
cmpl
orb
cmp
ljmp
lret
loop
pop
and
mov
lock
pop
xor
fbld
les
out
add
int
fsubrl
mov
fwait
movsl
out
outsl
std
xor
cmc
mov
xchg
arpl
int3
adc
fildll
pop
es
cwtl
fisttpl
push
pop
and
icebp
and
lods
inc
dec
cli
xchg
dec
mov
arpl
stos
dec
pop
notb
push
xor
jmp
pop
imul
bound
js
and
fstps
loopne
mov
jmp
aas
add
mov
xchg
add
repnz
sbb
sub
int
mov
or
into
jle
in
pop
jge
add
cmpsl
push
and
cmp
push
mov
dec
and
xlat
fs
pop
ds
shl
inc
leave
xchg
and
jns
aaa
lret
js
out
mov
pushf
or
jnp
push
popf
ror
xor
into
dec
push
xchg
fbstp
cltd
pop
pusha
fxch
popf
push
cmc
or
sub
adc
repz
xor
add
je
sub
insl
in
xlat
lret
cmpsl
daa
mov
daa
int
pop
push
sbbb
xchg
inc
fsubs
iret
xchg
push
mov
sub
cmc
sub
ds
insb
sbb
adc
fistl
test
adc
cmp
jbe
jbe
xchg
aas
jmp
pop
sbb
cmp
xchg
loope
aad
mov
xor
js
cmp
xchg
mov
and
mov
cmpsb
xchg
push
adc
fidivl
jo
loope
test
dec
imul
push
pop
pusha
cmp
mov
cs
mov
and
std
jnp
and
aam
insb
icebp
mov
jmp
and
adcl
mov
push
test
scas
mov
inc
out
sub
inc
ds
pop
fnstenv
fcomi
shl
daa
mov
mov
inc
or
jecxz
repz
push
arpl
xor
jb
add
lcall
cmp
mov
lea
inc
test
psraw
lar
inc
xor
ja
dec
push
lret
in
pop
mov
iret
jns
add
adc
fwait
shl
sbb
rcrl
imul
imul
test
cmp
mov
aad
push
cmp
cwtl
inc
shrb
out
xor
jb
aaa
xchg
xor
or
push
clc
lret
sub
fsts
sbb
xchg
test
sub
jle
inc
loop
xchg
clc
jno
and
lahf
inc
xor
sub
ret
push
mov
adc
icebp
int3
jg
lahf
test
xor
bnd
movl
lcall
in
sbb
push
stos
push
mov
lods
mov
fistpll
xchg
aad
xor
and
out
outsl
xchg
xor
push
mov
fs
jns
cmp
idivb
fidivrl
xor
in
sbbb
inc
out
cmp
pusha
xchg
mov
cltd
lods
repnz
mov
scas
mov
pop
dec
add
bound
push
pop
inc
dec
aad
repz
jno
jg
es
mov
cmp
lods
push
push
sub
ficomps
add
pop
pusha
fwait
push
inc
sbb
inc
sbb
xchg
mov
lret
pushl
xchg
push
outsb
cltd
test
iret
xchg
cmp
jne
out
sbb
add
jns
add
mov
vpsubd
and
add
pop
xchg
jns
or
dec
inc
dec
jmp
jl
xchg
inc
lods
int3
cmpsl
aaa
cmp
ret
inc
mov
fwait
cmp
cltd
cmp
pop
test
xor
inc
popf
stos
cs
mov
pop
mov
sbbl
or
arpl
outsb
pop
sub
add
mov
lock
call
add
pop
and
addr16
aaa
ficoms
mov
pop
xor
jg
inc
mov
dec
fsub
adc
loop
xor
xchg
or
mov
adc
jmp
or
push
fstps
add
mov
xorb
jb
loop
sbb
sub
lea
sbb
add
cwtl
loopne
in
inc
addr16
hlt
bound
add
insb
fldt
das
das
push
into
xchg
outsb
test
sbb
das
add
mov
xor
push
hlt
cmp
mov
mov
adc
xor
cmpl
push
in
cli
aaa
fdivl
push
add
lds
and
push
pop
jnp
test
outsl
rcl
xchg
repz
sahf
in
xchg
or
sbb
pop
ret
ja
ret
push
jne
jbe
js
add
jnp
and
cli
data16
fsub
adc
sahf
subl
push
dec
dec
push
add
lret
sub
add
mov
das
es
repnz
inc
and
mov
call
and
jecxz
mov
lock
add
inc
dec
jmp
lods
daa
cmc
lock
xor
sub
add
jae
lret
pop
cmp
incl
pop
ja
test
arpl
push
push
and
in
ret
ljmp
mov
mov
lods
addr16
xchg
aad
popa
push
bound
cmc
sbb
xchg
lcall
mov
push
lods
push
aam
inc
or
sub
dec
cli
push
add
jne
out
adc
pop
xor
dec
das
ss
mov
inc
std
or
loopne
loope
mov
sub
pop
lds
daa
xchg
pop
jb
or
or
mov
fldl
sub
sarb
mov
sahf
xchg
iret
xchg
dec
or
fadds
or
enter
pop
loope
cwtl
lret
cltd
jecxz
shll
and
pop
fists
shll
or
inc
and
mov
add
push
sbb
and
hlt
cwtl
lret
test
sahf
test
gs
sbb
xor
in
in
and
cmp
pop
mov
test
rcrl
movsl
sub
jp
insl
std
xor
repz
push
data16
pop
ss
mov
mov
hlt
add
mov
in
out
jb
aas
mov
pop
sbbb
pop
mov
or
xchg
add
loop
lock
mov
fs
js
js
xchg
jbe
sar
lea
inc
jmp
xchg
lods
push
jb
iret
xor
add
add
mov
cmp
dec
xor
sbb
jbe
inc
jno
mov
stos
jno
sbb
mov
pop
outsb
lret
ljmp
mov
popa
lcall
mov
aas
inc
loope
ljmp
add
push
mov
push
push
sti
leave
stos
dec
dec
mov
inc
sub
adc
notb
loop
inc
pop
popf
and
lahf
out
and
loopne
call
rclb
in
xchg
dec
sbb
pusha
push
popa
mov
jmp
push
mov
int
or
cld
loop
ss
sbb
inc
sub
hlt
inc
xchg
cmp
inc
inc
movsb
rclb
mov
lods
fdivrl
lret
push
mov
jle
jbe
push
or
aam
xor
lea
lock
mov
add
xchg
mov
mov
mov
invlpg
jae
pusha
cmp
pop
sbbb
jge
mov
or
ds
je
aaa
xor
sub
xor
push
ret
stos
and
rclb
stos
shll
ds
mov
lret
jecxz
leave
mov
jmp
push
pop
aam
cltd
and
mov
xchg
inc
test
xor
xor
mov
scas
inc
int
movb
pop
jno
jg
xchg
cmp
ret
rcr
outsl
adc
test
sbb
mov
jbe
sbb
fnstsw
imul
das
sti
mov
hlt
cwtl
sbb
std
mov
fnstsw
pop
lea
adc
push
sbb
pop
push
or
mov
jmp
sahf
sti
xchg
les
mov
dec
jbe
je
pop
lock
jb
jb,pn
xlat
mov
leave
xor
pusha
lock
fildll
mov
inc
jno
lods
jecxz
jae
fsubrl
cmp
jns
xchg
lds
inc
mov
xchg
sti
cltd
std
cmp
push
jle
adc
xor
sub
jmp
pop
pushf
dec
pushf
pop
das
pop
mov
nop
pop
or
push
daa
int
js
or
push
xchg
add
mov
cld
shlb
pop
jle
cmpsb
es
iret
sub
adc
arpl
mov
inc
pop
into
jbe
xchg
pop
xchg
mov
dec
jae
add
repz
adc
add
push
in
ret
fprem
jae
fwait
lea
push
mov
repnz
int3
or
ffree
mov
push
or
cmp
pop
xchg
stc
lret
daa
rclb
ljmp
std
mov
gs
jo
pop
hlt
dec
jge
add
pop
mov
sub
lds
add
int3
stos
int
cwtl
jns
shl
or
out
std
mov
sarl
xor
ss
dec
sti
rcr
add
xor
mov
out
mov
std
ret
cltd
dec
or
loopne
movntq
out
adc
pop
cmp
adc
inc
pop
popa
ret
leave
imul
jo
movsb
push
pusha
lds
fnstenv
xor
fmuls
add
sub
dec
sub
push
leave
popf
or
cli
je
fsubrl
sbb
inc
loopne
sbb
arpl
stc
in
andl
xchg
aam
movsl
mov
mov
aam
in
xlat
subl
pushf
xlat
pushf
push
call
les
popf
dec
add
or
jno
mov
xchg
outsl
loope
xchg
push
xor
sub
rol
aad
shlb
add
cmpl
test
repnz
xor
loopne
ss
rcll
incb
sub
push
lcall
add
out
int
movsl
add
fadd
les
add
xchg
jbe
dec
cmp
sbb
out
mov
div
icebp
fsub
dec
adc
xchg
sbb
add
pushf
xchg
lods
mov
aam
mov
add
std
fdivrp
mov
inc
fildl
imul
ja
jmp
out
insl
sarl
pop
in
pusha
das
lret
pop
dec
pop
sbb
push
cli
scas
mov
ret
dec
jge
xchg
push
xchg
insb
rcll
and
pop
aas
sarb
mull
xchg
scas
das
jge
stos
and
int3
dec
adc
dec
and
and
lds
dec
mov
test
andb
push
sbb
sub
out
addr16
and
std
and
inc
push
cld
negl
and
jp
mov
cli
ljmp
clc
mov
je
sbb
andnps
dec
imul
add
out
in
aaa
mov
mov
into
mov
xor
andl
mov
xchg
jnp
movsl
xchg
cmp
fisubl
test
bound
and
sti
nop
mov
test
or
push
out
or
or
cld
adcb
in
xchg
ja
stos
adc
jns
dec
ss
sub
push
cmpsl
call
dec
or
xor
out
lea
adc
pop
push
push
cmc
in
xor
es
xchg
dec
lods
push
hlt
scas
fcoml
mov
shr
lods
xor
cltd
sbb
das
jnp
xlat
js
pop
xchg
lret
add
sub
push
xor
pushf
add
sbb
loope
inc
mov
mov
pop
sti
cmp
in
aam
stos
add
mov
in
test
jo
pushl
push
add
push
xchg
push
jo
or
es
imul
dec
mov
ret
mov
push
stos
and
ja
push
jmp
push
sbb
repnz
movsl
push
mov
xor
push
push
mov
ficoms
sub
stos
aam
iret
push
pop
pop
fimuls
cmpsb
ja
jl
mov
cmpsl
pusha
idivb
test
mov
and
loopne
mov
loop,pt
sbb
add
rcrl
sbb
adc
or
out
lods
jb
push
jmp
xchg
ljmp
mov
movsb
pushf
cmpsl
adc
ret
insb
addps
push
xorl
mov
pop
dec
ret
pop
jge
into
cmp
out
push
add
cs
aad
push
repz
addr16
adc
insb
pusha
adcl
inc
xchg
jl
xor
in
lock
xchg
or
mov
push
cmpsl
in
insb
sbb
or
push
xchg
ficoml
scas
cmpl
fdivrs
mov
imul
jle
stc
add
arpl
loop
pushf
outsb
lcall
sbb
xorb
popa
leave
decl
lds
add
in
in
cmp
ret
cmp
aas
adc
lods
inc
dec
sbb
jl
xchg
mov
jp
in
icebp
mov
ds
push
fbld
xchg
mov
push
fdiv
out
shl
loop
gs
mov
dec
xor
fimuls
sarl
cld
int3
mov
inc
mov
test
test
les
std
int
sbb
or
icebp
dec
jns
pop
icebp
mov
xchg
dec
repnz
push
out
inc
lea
pop
les
jbe
or
in
mov
test
mov
mov
cmpb
inc
jae
mov
adc
push
cld
pop
mov
movsb
aaa
stos
jmp
pop
sbb
fbld
cmp
xchg
cs
movsl
scas
mov
cmp
insb
sar
mov
sti
aas
loopne
inc
cli
lock
ret
lock
cli
jl
mov
js
pop
cwtl
adc
int
lcall
dec
or
inc
test
movsl
add
jmp
test
and
cmpsb
sbb
imul
xchg
or
or
lretw
stos
repz
repnz
cmp
pop
test
ret
pushf
int3
and
lahf
mov
or
out
ljmp
push
out
lcall
pop
std
xchg
fimuls
adcb
mov
out
arpl
stos
dec
pop
out
cmp
and
push
jns
jle
mov
sahf
mov
pop
les
ss
xchg
fsave
cmp
out
push
push
push
hlt
xor
dec
pop
popf
dec
imul
call
push
fdivs
sbb
cltd
movsb
inc
sahf
push
das
roll
push
sub
add
jmp
std
mov
testb
xor
fidivs
orl
xlat
shr
mov
xchg
fcomip
fistps
adc
mov
testl
push
push
pushf
jl
mov
sub
aam
sub
mov
xchg
pop
fimuls
dec
repz
ret
fstpl
or
ljmp
fdivrs
das
dec
cmp
nop
xor
push
push
sbb
sub
lea
cs
out
inc
adc
aad
pop
push
mov
ss
in
roll
jns
popa
pop
xlat
xchg
icebp
cli
mov
mov
rcrb
mov
xor
or
sbb
sub
repz
loopne
and
or
pushf
les
adc
out
jle
fsts
fistpl
adc
inc
imul
aad
std
sarb
test
adc
mov
aas
sub
push
subl
sub
cltd
jmp
imulb
lock
inc
ja
out
repnz
pop
xchg
lcall
xchg
movsl
inc
loopne
aam
xor
xor
mov
aad
test
rol
xor
filds
pop
lds
enter
popa
mov
sarl
fbstp
xchg
ret
arpl
imul
fabs
push
jb
in
nop
push
lret
sub
push
in
fwait
int
cmc
mov
push
test
insl
cmp
mov
inc
jns
mov
xchg
sbb
sub
xlat
fstl
adc
add
adc
mov
push
pop
mov
ds
jge
std
bound
pop
fisubrs
xor
push
scas
push
xchg
leave
es
and
xchg
test
lahf
sbb
jae
push
in
mov
in
sbb
sub
out
dec
daa
mov
mov
adc
fldl
dec
xchg
mov
movsl
out
pop
in
jae
or
pusha
xor
mov
fwait
lods
imul
xchg
lret
out
fildl
sub
jl
js
adc
lea
jp
lods
jne
push
dec
or
loope
idivl
cmp
inc
fidivrs
movsb
lock
jmp
leave
inc
roll
test
and
mov
in
outsb
stos
mov
dec
bound
dec
mov
mov
xchg
adc
adc
test
sub
test
and
lods
insb
xchg
pop
pop
fidivrs
sarb
mov
mov
int3
pop
adc
out
adc
push
cmpsb
push
fcompl
stos
les
andb
arpl
mov
out
popa
and
ja
out
repz
add
gs
mov
test
push
push
ss
sbb
pop
int3
add
pop
add
push
mov
fldenv
pop
push
or
and
into
mov
out
jmp
dec
sub
push
cmp
shrl
dec
xor
push
aam
mov
mov
mov
push
jno
mov
and
out
lret
loop
das
adc
mov
addr16
std
jne
mov
cmpsl
pop
out
push
xchg
xor
loopne
mov
jno
in
cli
icebp
cmp
push
push
pop
jle
jnp
pop
push
or
cs
push
jbe
xchg
mov
sbb
js
clc
lret
cld
nop
repz
rcr
in
loop
rcr
push
pop
mov
mov
push
sub
subl
push
pusha
lods
test
rcrb
out
adc
mov
lahf
stos
aam
jbe
pusha
out
inc
sti
pushf
adc
jg
in
aad
xchg
cmp
sbb
push
xchg
xchg
ret
push
xchg
xchg
idivl
test
inc
lcall
or
dec
inc
sbb
mov
dec
xor
mov
aaa
push
test
cmp
dec
in
dec
adcb
ss
fidivs
adcb
in
cmp
xchg
std
jnp
loopne
xchg
or
mov
mov
cmp
les
repnz
mov
xor
stos
pusha
lock
adc
mov
stc
ss
pusha
inc
fwait
test
inc
sbb
pop
aam
pop
dec
dec
dec
sub
mov
stc
leave
xor
int
mov
dec
rol
xchg
mov
test
add
iret
xchg
jecxz
sbb
outsl
xor
iret
mov
ja
lret
push
push
jl
lds
pop
sub
mov
inc
iret
daa
ss
insl
lods
or
pop
lret
lcall
lahf
call
pop
pop
mov
test
arpl
in
mov
mov
mov
push
in
outsl
imul
add
adc
sbb
mov
xchg
or
sub
pushf
dec
fidivs
jnp
scas
cmp
jmp
je
xor
push
or
push
adc
xchg
sub
das
mov
sbb
popa
mov
faddp
or
testb
pushl
test
push
movsb
fwait
pop
pusha
shl
test
inc
push
inc
mov
dec
lods
into
push
popf
fwait
xlat
mov
test
jmp
jmp
push
add
dec
xchg
cs
or
les
cld
ss
mov
push
pop
push
add
subb
mov
and
rolb
sbb
dec
int3
sarl
pop
xor
xchg
mov
iret
ffree
lods
mov
sahf
jmp
arpl
push
push
or
xchg
leave
or
push
pop
jae
aaa
cld
movsl
popa
fs
inc
or
aas
out
insl
or
mov
loop
jae
insb
mov
fcoms
mov
imul
mov
mov
mov
in
aad
in
dec
popa
out
adc
push
mov
lret
js
adc
pop
test
rcr
mov
fnstcw
ret
xor
fwait
mov
loope
aaa
and
lcall
mov
cmp
shr
gs
fistps
inc
nop
sti
push
mov
cs
jae
add
xchg
in
and
inc
mov
pusha
arpl
add
xchg
or
adc
adc
adc
push
out
or
fcoml
cwtl
stc
lret
lahf
adc
data16
sub
mov
xor
lods
int
sub
rolb
cld
push
lock
shrb
ds
enter
out
xor
sbb
mov
aam
int3
inc
add
fcmove
push
rorl
int
out
cmp
gs
sub
loop
std
or
sub
or
xchg
test
cltd
or
int3
mov
stc
in
jno
insl
ja
and
addr16
and
pop
sbb
call
aam
sub
neg
fwait
in
test
cmc
imul
test
mov
lret
arpl
pop
cmp
and
pushf
jne
jbe
loope
sbb
addr16
cmpsl
add
inc
or
or
xchg
mov
jb
jg
cmp
divb
push
test
jle
cmpsl
dec
jae
inc
inc
and
jg
cmp
push
dec
xor
push
shrl
add
xchg
push
jb
loop
cmp
cmpsl
addb
mov
adc
sbb
int
mov
pop
mov
mov
jge
cli
add
mov
stos
xchg
mov
xchg
mov
add
jne
xchg
pusha
cmp
cmpsb
mov
sbb
mov
xor
outsl
xchg
push
stc
add
sub
xor
out
cmp
adc
inc
mov
movsb
cwtl
pop
jmp
test
test
in
cmpsl
ljmp
cmp
inc
pop
aam
lods
cltd
ljmp
push
das
inc
pop
pop
ja
addr16
iret
pushf
les
lea
ss
jge
enter
test
pop
dec
inc
lea
jecxz,pn
mov
sahf
iret
inc
lds
out
lds
inc
fimuls
push
sahf
add
and
mov
stc
loop
aas
inc
divl
out
jmp
out
xor
gs
cld
es
daa
cmp
addl
addl
minps
cmpsl
sbb
outsb
push
shll
cmp
jecxz
pop
jl
push
shll
cmp
sbb
popf
jmp
push
int3
in
stos
xor
data16
adc
jne
mov
mov
arpl
lret
lcall
notl
roll
xchg
aas
lock
and
repnz
pusha
mov
push
cwtl
imul
mov
cmp
stos
mov
or
adc
or
int3
sbb
fsubl
jge
pop
fiadds
pop
insb
cwtl
jnp
lret
fnstsw
xlat
push
add
mov
pop
jns
jl
cmp
adc
or
dec
pop
popa
in
dec
push
mov
push
dec
push
test
leave
aaa
mov
popf
scas
or
or
xor
aas
push
out
mov
lock
incl
js
sbb
inc
mov
and
push
repz
pop
fstps
or
push
stos
ja
mov
jne
jmp
fisubrs
mov
fwait
cmp
pop
xor
xor
popa
test
int
les
mov
popf
and
lret
idivb
fistpll
lea
jle
leave
sbb
sbbb
xchg
xor
push
xchg
insb
dec
sti
loopne
sbb
lahf
xchg
out
inc
mov
out
pop
cmc
inc
lods
dec
faddp
cli
mov
add
sahf
push
mov
pop
sbb
dec
stos
cmp
adc
in
mov
jge
pop
xchg
jg
xchg
push
pop
jp
fwait
std
mov
scas
in
push
sub
ds
fcomps
mov
inc
enter
data16
add
scas
or
addr16
push
push
xlat
pop
jnp
or
and
aad
stos
mov
push
lahf
push
repz
mov
push
pop
shl
and
mov
xor
cwtl
push
mov
pushf
pop
je
add
mov
lods
pop
ds
xchg
jbe
lret
out
pushf
pop
sbb
and
aas
mov
sbb
mov
or
inc
adc
test
sbb
repnz
stos
out
movsb
jg
cmc
sub
cmp
pop
movsl
push
cs
and
cmp
jns
push
ljmp
adc
jns
mov
mov
aaa
fs
pop
popa
lods
inc
or
inc
test
sub
test
mov
add
push
lea
pusha
out
adc
jns
gs
mov
mov
sarl
jno
or
aad
fmuls
pop
lea
cmc
sbbl
ds
adc
dec
icebp
enter
lret
shr
pop
psraw
adc
loopne
sbb
fcompl
loopne
out
test
xchg
pushf
mov
mov
test
cmpl
push
test
into
fdiv
aam
sub
inc
fidivrl
and
cmp
jle
shrl
mov
jle
push
loope
or
xchg
je
sub
and
stos
mov
sub
pop
push
aas
xchg
addr16
sti
mov
xor
test
std
sbb
xchg
cmp
mov
jb
cli
call
push
lock
mov
arpl
ret
fsubs
push
or
add
int3
and
jp
jp
mov
repnz
xchg
cld
aad
xchg
push
imul
leave
ljmp
outsl
ds
popf
xor
cmp
stos
loop
and
dec
pop
das
add
and
dec
or
stos
mov
imul
enter
inc
andb
les
je
call
push
add
iret
sbb
mov
fwait
cmp
mov
lret
cli
je
jle
cmp
sub
jno
push
aas
lret
int3
js
pop
out
call
insb
mov
call
mov
ljmp
daa
xor
sub
mov
cmp
inc
inc
cmpl
mov
lret
pushf
add
clc
mov
cld
add
lcall
rorl
mov
xor
sahf
ficoms
test
pop
cld
xor
insb
mov
inc
add
jp
push
push
push
jecxz
nop
push
fcmovnb
popf
inc
xor
in
and
cwtl
ja
sbb
lcall
fnstsw
pop
lret
add
insb
call
ljmp
sti
jb
das
repnz
sub
aas
mov
push
scas
lret
fcomps
jecxz
mov
gs
xor
push
or
cmpsl
adc
adc
and
test
add
out
std
insb
aaa
fistl
fwait
jge
aas
and
or
les
mov
lcall
arpl
mov
testb
out
insl
pushf
jnp
negb
or
mov
mov
pop
cmc
addr16
cmp
pop
jp
in
push
ja
js
cmc
jns
add
daa
sbbl
dec
mov
stos
xchg
mov
mov
and
adc
sbb
lret
adc
fldenv
jnp
lret
mov
dec
aam
pusha
lea
adc
pop
add
pop
sbbb
pop
mov
adc
mov
pop
mov
loop
dec
jne
fisttps
add
bound
xchg
and
lcall
gs
aaa
jbe
in
cmp
jle
pop
or
dec
xor
rolb
js,pt
jl
sub
mov
cltd
cmc
xor
out
jns
mov
mov
cmp
or
sub
ret
clc
jno
cltd
lock
clc
movsb
sbb
and
inc
sbb
or
outsl
and
jbe
cmc
pop
xlat
xchg
in
popa
lahf
xor
ret
jo
xor
lods
lods
mov
xchg
cmpb
imul
test
cmp
pushw
adc
scas
inc
xor
add
ja
mov
ret
outsb
repz
shll
jmp
sbb
sub
add
mov
int3
jmp
movsl
mov
fsts
fadds
in
clc
and
das
js
cmp
imul
fistpll
dec
dec
or
sub
mov
movsb
leave
xchg
pop
aas
mov
out
sub
int
jmp
dec
mov
ret
push
dec
adc
jmp
push
stc
sub
xor
popf
pop
loop
jne
and
ret
xor
loop
pushf
pop
mov
sbb
lods
mov
scas
in
std
shl
mov
cmp
sbbl
int
orl
addr16
int
inc
js
mov
cmp
stos
cmp
je
sbb
pop
pushf
js
imul
jecxz
cmp
xor
add
inc
pop
xchg
jmp
sbb
out
lea
and
fildll
cli
xchg
and
enter
add
mov
inc
mov
cmp
je
in
xchg
xor
jnp
jne
xor
aam
repnz
filds
inc
je
insb
inc
and
jb
xchg
insb
and
dec
mov
ljmp
mov
out
sbb
pop
ja
xchg
add
cld
sub
pop
xchg
out
sub
jno
rcr
sbb
clc
leave
clc
push
mov
sbb
mov
sbb
stos
jp
aam
mov
frstor
pop
push
call
jmp
mov
aaa
mov
prefetch
outsb
dec
pop
insb
enter
adc
jns
adc
fwait
push
dec
ljmp
inc
aas
js
in
xchg
mov
orb
dec
push
daa
mov
and
dec
sub
pop
enter
inc
or
mov
movsl
jmp
push
es
jb
dec
int
push
pop
push
scas
cltd
adc
sub
dec
movsl
adc
jo
push
jo
insb
mov
pop
xchg
and
rorl
mov
cs
sub
ror
or
std
pop
xor
push
es
mov
pop
push
mov
mov
push
mov
adc
pop
mov
iret
sub
imul
add
cmpsb
adc
popa
std
sbb
test
test
and
jb
xchg
cltd
xchg
dec
stos
loopne
ja
out
pop
sbb
and
mov
sarb
in
loop
daa
pushf
jne
stos
imul
lds
subb
lret
mov
je
adc
sbb
inc
mov
icebp
aam
fnstcw
mov
out
add
pusha
add
jb
ja
xor
das
pop
enter
call
repz
std
stos
test
popa
leave
fmull
xlat
pop
push
stos
notl
enter
xor
inc
adc
mov
jns
popa
int
fld
xor
xor
not
scas
mov
jmp
mov
popw
fcmovb
sub
push
sbb
xor
push
and
ret
inc
xchg
pop
jbe
pop
jl
enter
sbb
mov
cld
sti
fbstp
push
inc
hlt
sub
jmp
cli
repz
sbb
and
cmp
lds
jb
iret
sahf
and
adc
repz
ret
addl
or
inc
leave
pusha
xor
rorb
mov
ss
jmp
insb
shlb
dec
add
sub
mov
stos
in
in
out
dec
cmp
mov
sub
rdpmc
add
push
push
sti
or
mov
xor
aam
movsb
cmp
push
in
cmp
frstor
rol
pop
je
fs
nop
nop
stos
mov
lds
jnp
rcll
sbb
insb
dec
cs
cli
jo
push
sub
pop
push
addr16
pop
xchg
inc
and
clc
push
fs
roll
mov
inc
fcmovnu
rorb
int
nop
out
rcl
fnstsw
fmull
cs
push
popf
test
dec
mov
mov
dec
or
push
scas
sbb
das
push
inc
xchg
aad
mov
aas
scas
cmp
aaa
adc
jns
imul
jg
sub
aas
cmp
test
adc
mov
les
mov
ficomps
nop
cwtl
jge
inc
mov
imul
add
and
or
pop
aam
push
xor
inc
mov
xorl
loopne
jecxz
repz
addb
adc
xlat
and
and
xlat
sahf
inc
and
stos
cmp
fisubrs
jl
pop
rolb
cmp
mov
shll
push
mov
mov
rorb
xor
call
call
sti
scas
jmp
fwait
add
xchg
push
sbb
and
push
shll
jg
push
inc
mov
dec
lock
push
fimull
and
into
xor
dec
je
ljmp
cmc
and
nop
lret
outsb
sbbb
add
ret
fbld
jmp
xor
jne
dec
mov
fs
jo
neg
out
cs
lret
jmp
insl
xchg
pinsrw
push
in
hlt
pop
xchg
xor
lock
sub
push
aad
xor
pop
lret
mov
shrb
ret
mov
sbbl
bound
inc
push
jp
or
decl
mov
cmp
cmp
sub
lods
jp,pt
ffree
push
xor
inc
popa
sbb
pop
lds
fcmovnb
repz
push
jl
mov
std
negb
cs
rcrl
sbb
jnp
fistpl
shl
les
sub
fcoms
mov
mov
dec
pop
adc
or
arpl
xchg
out
pushf
in
hlt
sbb
sbb
and
xlat
call
out
outsb
or
sbb
and
push
inc
dec
ret
or
pop
insl
pop
mov
pop
sub
mov
sub
xlat
jbe
addr16
and
repnz
jmp
mov
ss
push
adc
out
mov
lcall
out
ja
mov
xchg
inc
xchg
hlt
cmp
adc
enter
popa
es
xor
in
call
cmpsl
test
out
aaa
cld
lods
xlat
loope
or
test
inc
test
mov
lods
adc
dec
mov
xchg
sbb
lahf
cmpsb
add
in
sar
xchg
mov
outsl
adc
and
mov
xor
fsubl
or
repnz
mov
mov
ds
or
in
pop
insl
fbld
push
sar
rol
sbb
add
pop
ss
loopne
fsubrl
ret
xchg
mov
nop
sub
pop
fstpl
leave
inc
mov
jae
mov
xor
mov
daa
cltd
out
dec
sbbb
enter
adc
insb
xchg
jecxz
jecxz
cmpsb
movsl
pop
stc
cli
jmp
cmp
aas
pop
push
out
mov
mov
in
pop
sbb
rcrb
sub
xchg
divl
outsl
pop
inc
test
and
push
sbb
mov
mov
and
mov
fildll
adc
dec
or
out
dec
mov
or
imulb
scas
sbb
jno
xchg
xchg
movsb
pop
dec
cld
push
outsl
outsb
sbb
sub
lock
xchg
shl
insl
pusha
loop
mov
push
int3
xor
pop
and
insb
fwait
push
lods
loope
repnz
fwait
cmp
mov
lret
adcl
pop
adc
xchg
mov
int
jno
pop
adc
jbe
cmp
xor
lock
mov
sti
pop
mov
call
sbb
or
mov
rcrl
cmpsl
push
pusha
aas
fs
and
mov
pop
lods
aas
call
loop
xchg
mov
mov
push
pusha
js
leave
pushf
xlat
sbb
fistl
add
out
cmp
outsb
mov
push
pop
sub
push
or
lcall
repz
add
mov
imul
dec
clc
mov
jne
stos
or
adc
movsl
je
adc
inc
lret
push
mov
pop
sbbb
fstl
sahf
pop
shll
lahf
imul
ja
add
fsubs
test
in
daa
or
sub
iret
call
mov
xchg
stos
dec
scas
xchg
dec
call
in
push
shll
movsb
inc
je
pushf
lods
fs
das
lock
and
dec
fidivrl
cmp
pop
sub
in
jmp
rcll
ja
into
inc
mov
xor
mov
sbb
mov
rclb
inc
xor
pushf
sti
int3
dec
sbb
inc
cmpsl
jge
pop
hlt
stc
cltd
jmp
gs
movhps
jp
jb
jle
test
add
push
xchg
cltd
stos
cmp
ret
mov
mov
cmp
inc
scas
mov
arpl
jg
push
mov
pop
fnstcw
int3
mov
lea
int3
scas
mov
push
cmpsl
hlt
bound
xor
mov
scas
cmp
mov
mov
pop
jmp
fbld
mov
movsb
mov
pop
std
ljmp
testl
pop
add
push
ss
mov
push
js
adc
pushf
jae
xor
xchg
xorl
inc
or
shll
mov
inc
movsl
sub
push
test
and
arpl
adc
mov
fistl
fnstsw
das
arpl
push
jo
std
clc
dec
imul
xor
inc
das
out
aaa
cmp
test
xor
mov
or
cmpsb
pop
pusha
sub
cmp
cwtl
ljmp
loopne
test
and
fidivs
loop
mov
arpl
pop
xchg
and
lcall
in
mov
rorb
pop
sub
stc
fwait
sub
mov
fwait
mov
fs
movsb
ja
ret
pop
insl
lea
push
pop
cltd
in
xchg
jl
cmpsb
mov
cld
pop
push
inc
pop
push
push
pop
mov
adc
mov
enter
jnp
mov
bound
ja
pop
pop
dec
in
mov
jge
data16
mov
ret
mov
outsl
in
cmp
jecxz
cltd
or
adc
inc
inc
rcrl
sahf
xchg
dec
adc
pop
pop
pushf
mov
push
ret
xchg
mov
aaa
adc
mov
or
pop
pop
jl
insl
mov
and
push
gs
and
js
xchg
mov
ja
sub
cli
push
adc
pushf
sub
dec
rcrl
out
addr16
bound
repz
and
mov
stc
std
push
dec
mov
movsl
push
jo
ljmp
jp
cmp
pop
cs
jmp
out
mov
pop
lock
out
stos
gs
sub
mov
push
daa
inc
dec
jnp
push
jb
pushf
repz
ja
mov
add
aam
imul
add
adcl
mov
les
cmpsb
jbe
dec
xchg
push
xor
fbld
pop
js
add
xchg
cwtl
xor
push
rcll
fwait
mov
and
cmp
stc
out
dec
scas
sahf
mov
push
scas
outsb
push
es
jne
cmp
xchg
xchg
mov
jecxz
inc
push
scas
adc
pop
pop
pop
cmp
dec
push
adc
cs
insl
dec
bound
loopne
rorl
xlat
pop
out
inc
aad
or
jmp
popa
mov
mov
movsb
push
into
sbb
pushf
sahf
lret
sbb
insb
ja
std
mov
adc
enter
paddusw
sub
jg
pop
sub
cld
sahf
dec
rcrb
fldcw
lds
xor
shrl
mov
out
negb
xchg
mov
fadd
jg
xchg
js
call
jae
cli
xlat
in
or
push
dec
gs
add
sub
idivb
adcb
aad
sbb
outsl
lock
jnp
inc
test
sub
movsb
fstpt
jbe
es
mov
mov
seta
and
into
xchg
mov
dec
mov
jnp
dec
cmpsb
in
frstor
outsb
stos
test
xor
sbb
test
cwtl
add
into
cli
xchg
mov
std
cld
dec
mov
cmp
xchg
sub
lods
lret
repnz
or
dec
lods
loope
roll
ja
cmp
push
movsb
test
aaa
push
daa
mov
jle
punpckhbw
or
iret
pop
jae
ret
mov
xchg
aad
push
idivl
lcall
sub
sub
pop
mov
jae
jmp
mov
movsl
inc
jge
push
jg
call
push
inc
mov
mov
cltd
ljmp
jbe
cmp
ljmp
pop
xchg
mov
and
inc
icebp
jo
adc
push
movsl
adc
or
mov
mov
fidivrs
shr
fidivs
sub
negb
add
adc
pushf
xchg
mov
lods
rorb
adc
int3
mov
scas
pop
rcl
lahf
mov
mov
sti
aas
and
cmpsb
movsl
lret
sbb
add
push
cmp
cmp
mov
in
loope
xor
xor
mov
mov
jne
mov
test
pushf
popa
xor
pop
adc
sbb
subb
mov
lret
repz
andb
lret
ds
or
inc
and
sub
mov
call
andl
jecxz
fisubrs
in
shll
sub
sbb
dec
pop
or
fwait
cmpl
cli
out
dec
inc
lods
adc
cmpsl
insb
arpl
adc
sahf
cmp
lahf
out
std
sbb
or
sub
je
pop
mov
dec
mov
test
repnz
iret
xchg
pop
inc
add
mov
pop
loopne
inc
mov
movsl
pop
ret
lods
mov
repnz
jno
clc
push
mov
adc
mov
sbb
aaa
adc
xchg
stc
orl
movsl
or
jae
nop
in
fimuls
decl
rcll
mov
cmpsl
add
cmp
test
mov
sahf
sti
and
mov
adc
jnp
popf
inc
mov
cmp
xchg
adc
mov
push
or
out
jo
stos
jb
into
mov
sbb
inc
or
bound
outsb
mov
das
push
bound
pop
test
fs
sbb
iret
dec
out
sub
jb
or
mov
adc
movsb
cmp
movsb
mov
mov
jnp
jnp
imul
cmp
test
push
xor
lret
push
push
jbe
imul
out
mov
jle
das
repz
mov
dec
push
stos
pop
int
cmp
fisubl
mov
push
push
rcl
scas
fwait
popa
fildl
sbb
in
or
out
xlat
lods
mov
add
lods
or
mov
sbb
inc
fldt
cltd
sbb
adc
cmpsb
mov
push
sbb
mov
lret
mov
cmp
inc
je
lds
ljmp
inc
shlb
pop
cmp
clc
hlt
les
fcoml
sti
mov
ds
push
cmp
and
mov
out
das
mov
icebp
int
sub
sti
rcrb
adc
ss
adc
xchg
outsl
ss
pop
enter
cli
pop
rol
xchg
out
pop
lds
shrb
insb
inc
int
in
fs
pop
sbb
and
cs
xchg
lea
inc
mov
push
jno
subl
rcl
lahf
es
out
fistpll
test
stos
in
test
repnz
mov
js
jnp,pt
cmp
js
lret
rclb
hlt
lret
add
add
pushf
adc
ret
cmp
ret
xchg
cmp
test
pop
arpl
push
mov
add
mov
cs
jmp
scas
adc
test
xor
xor
and
push
sub
jmp
sub
jmp
lods
mov
enter
xor
and
jo
push
imul
push
addl
push
aad
movsl
imul
dec
pop
dec
mov
push
mov
mov
lods
stc
inc
nop
loope
sub
fnsave
pop
cld
and
gs
jg
cmp
xor
enter
stos
sub
dec
shll
cmp
pop
pop
push
xchg
mov
jge
test
nop
push
mov
roll
out
cwtl
sub
andb
popa
fld
sbb
mov
imul
push
adc
aaa
inc
pop
aad
push
dec
inc
in
jb
popa
arpl
dec
insb
dec
enter
mov
or
idivl
dec
hlt
dec
ja
or
dec
mov
xchg
lcall
xlat
pop
pushf
pop
pop
dec
push
or
clc
scas
int3
cmc
xchg
dec
sbb
xor
sub
movsb
xchg
aad
hlt
inc
aad
lret
or
lods
xor
mov
mov
ficoms
fmulp
push
adcl
sbb
pop
lods
jno
sti
enter
sbb
xchg
in
or
xchg
inc
sub
add
mov
fisubs
cmp
sub
divl
adc
xchg
stos
nop
xor
pop
les
scas
hlt
add
add
fldt
in
shrl
sti
fisubrs
xor
mov
mov
and
pop
jbe
aas
mull
or
icebp
sub
adc
mov
add
je
sub
dec
pop
xchg
test
lods
push
test
dec
cwtl
mov
adc
jno
test
out
mov
jmp
jmp
test
and
and
or
in
fistl
dec
xor
inc
and
cwtl
fbstp
shlb
insb
mov
out
adc
stc
inc
sub
and
pop
fcoml
jnp
adc
xor
mov
xchg
mov
cld
sub
mov
add
xchg
sbb
mov
cmpsb
in
lods
in
xchg
testb
filds
ficomps
xchg
add
insb
add
test
sub
ja
push
sahf
xor
test
push
inc
xchg
int
jmp
packssdw
push
push
push
daa
outsb
cmp
repnz
outsb
pushf
popf
test
push
jg
mov
incl
xchg
imul
rcll
or
add
outsl
aaa
mov
ficoms
xor
cwtl
mov
out
jp
int
or
mov
jge
shll
xor
mov
addr16
sbb
pop
and
pop
jle
sub
hlt
fs
fisubrl
xor
xchg
push
std
mov
push
pop
in
ficomps
fcomp
and
insb
daa
cmp
dec
mov
mov
mov
ret
and
lret
jmp
into
shll
pop
and
cld
les
lods
mov
subl
popf
call
popa
loop
mov
fucomip
fbld
ja
pop
imul
xchg
jecxz
dec
xchg
mov
daa
das
sahf
jmp
inc
or
dec
dec
mov
xchg
add
pop
mov
inc
bound
mov
xchg
shrb
xchg
fsubrp
out
sub
ja
shlb
pop
data16
xor
out
xchg
lahf
mov
stc
sbb
dec
enter
pop
jns
push
sbb
test
adc
jno
ret
movsb
leave
push
fadds
test
cmpl
and
cwtl
insb
jmp
sub
aad
mov
aas
cwtl
mov
xor
sbb
xchg
in
into
test
pop
ret
push
fildl
push
xor
pop
sbb
icebp
clc
sahf
lahf
shll
xchg
mov
mov
pop
test
and
cld
ss
xchg
loop
fwait
pop
inc
jns
sti
adc
mov
out
loop
sub
xor
cmpsl
shlb
rclb
push
mov
mov
bnd
ljmp
nop
xorl
sub
pop
sub
rorl
inc
and
cmp
sbb
sub
push
pop
outsl
cwtl
outsb
adc
xor
insl
add
adc
in
leave
adc
mov
pusha
xor
mov
or
inc
outsb
sub
in
ffreep
xor
xchg
cmp
mov
pop
sbbl
scas
mov
mov
xor
int3
dec
jne
out
sub
jp
stos
adcl
xor
dec
xchg
pop
xchg
cmovbe
fs
pushl
loop
cwtl
dec
or
cs
pop
cmp
in
lcall
out
int3
out
sbbl
rcl
add
sbb
jno
cmp
xor
inc
call
mov
xor
pop
jmp
sbb
pop
cwtl
push
fdivrs
in
sbb
pushf
cmp
enter
aam
addl
or
xor
jecxz
in
push
fmul
push
jle
incb
daa
pop
cmpsl
fprem
or
jno
push
clc
mov
mov
lahf
in
cmp
mov
adc
sbb
push
fimull
test
dec
pop
pop
call
sahf
sub
pusha
popf
inc
jg
jmp
stc
jp
fists
inc
stos
jmp
fstpt
test
mov
pop
push
push
inc
lods
test
xorb
call
sbb
idivb
xchg
mov
faddl
leave
add
inc
dec
lcall
dec
neg
aad
mov
add
mov
mull
fldl
adc
pop
insb
pop
sub
aas
pop
push
xor
mov
sub
repnz
mov
jle
clc
cli
lahf
sahf
xor
xchg
in
ficoml
cs
sub
rcrl
stc
cwtl
mov
popa
adc
mov
cmc
mov
jl
leave
test
and
jb
push
xchg
aaa
jecxz
repz
rcll
jmp
mov
xchg
pop
in
in
cmp
xchg
push
imul
mov
insb
xchg
mov
mov
mov
push
inc
insb
lds
fs
leave
sub
das
mov
mov
xchg
mov
push
loope
jo,pn
xchg
in
adc
pop
fs
add
outsb
jo
stos
sub
pop
sbb
cli
mov
xchg
mov
pop
lret
repz
into
jb
xor
lret
jae
fisttpl
loopne
int
cmp
out
scas
mov
loop
addr16
ret
push
icebp
cmp
lods
add
dec
xor
xchg
pushf
stc
push
cli
cmp
mov
xor
mov
mov
xchg
push
cmpsl
aam
sub
movsl
pop
movsl
and
fistpll
pop
cmpsl
cmp
sub
movsb
sbb
push
lret
lahf
cmpsl
test
imul
sub
rol
push
jbe
outsl
lods
push
repnz
bound
mov
push
dec
push
sub
scas
mov
mov
xchg
pop
scas
stos
call
adc
push
mov
jno
adc
leave
mov
xor
and
push
xor
popf
adc
jge
mov
cli
and
sbb
sar
sbb
inc
mov
mov
jle
adc
shlb
inc
xchg
inc
push
mov
add
xchg
int3
cmpsl
mov
or
sahf
mov
sub
dec
add
xor
adcb
mov
cmp
outsb
clc
fcomi
lea
xor
push
out
push
sub
pop
mov
inc
or
push
out
daa
jle
sub
mov
idiv
bound
sbb
insl
outsb
sub
addr16
aam
icebp
stos
repz
sub
rorl
dec
pop
inc
sub
jecxz
push
ret
out
movsl
fildl
jo
lods
mov
jp
fmulp
xchg
add
fcmovne
mov
decl
stc
mov
stos
out
icebp
cmp
cmp
lea
jp
and
cltd
dec
push
mov
subb
stc
negl
imul
cwtl
arpl
cmp
repnz
xlat
and
dec
outsb
out
xchg
rolb
ja
in
in
sub
pop
loope
shrb
or
or
sbb
xor
or
je
mov
popf
ret
xchg
and
lea
push
mov
jmp
lods
inc
jecxz
mov
cmpsl
and
push
cmp
int3
xchg
adc
pop
mov
pop
pusha
push
repz
fidivl
sahf
popf
dec
add
push
mov
lea
stos
aad
cmp
inc
cmp
arpl
lret
pop
jecxz
js
sbb
push
test
rcrl
mov
call
mov
jmp
rol
or
mov
xchg
pop
stos
lret
xor
adc
sub
adc
loopew
xor
mov
mov
inc
xor
sub
mov
scas
dec
addr16
cmp
mov
and
add
inc
mov
mov
fisubrl
and
movsl
xor
jle
pop
repnz
sbb
icebp
inc
adc
mov
ds
mov
notl
xchg
push
cs
jno
xchg
loop
mov
icebp
jno
mov
int3
test
or
mov
xor
rcrl
pop
adc
add
sahf
sbb
es
pop
in
mov
pop
pop
repz
xchg
imul
jnp
pop
push
sub
sbb
into
cmpsb
sub
outsb
push
xchg
popa
int
stos
pop
fsubs
mov
sbb
into
in
dec
nop
lods
sbb
or
inc
fsts
xchg
add
pop
and
arpl
int3
push
in
sub
rclb
aas
dec
iret
or
out
xchg
cmp
sbb
cmp
or
pop
sbb
mov
push
incb
sbb
inc
mov
adc
mov
add
out
lock
xchg
std
nop
hlt
jmp
sub
call
sub
sub
notb
dec
pop
inc
mov
and
iret
and
loope
enter
test
dec
mov
fbstp
sbb
lea
adc
jecxz
cs
rcr
aad
orl
jle
dec
lods
movsb
sub
mov
fimuls
xchg
sbb
xlat
jb
sbb
adc
enter
add
jle
jle
loop
push
imul
xchg
imul
shrl
ss
adc
jne
add
mov
xor
sub
cld
hlt
pop
jmp
mov
cmp
cltd
arpl
lods
adc
sub
pop
cmp
dec
shrl
leave
cli
in
or
inc
add
hlt
popa
iret
test
popl
sub
loop
test
mov
or
push
sti
bound
push
addr16
add
mov
and
test
sub
mov
loopne
mov
outsb
sbb
fnsave
cmp
imul
push
fwait
repz
mov
pop
das
es
push
out
jno
leave
mov
mov
lods
sarl
add
scas
pop
pop
jle
jl
jge
outsb
inc
sub
loope
insb
add
imul
in
pop
ja
in
flds
pop
or
lret
nop
cltd
sub
movsl
in
clc
xchg
mov
mov
jg
ret
cmp
push
imul
sbb
jl
adc
cmp
stc
sub
loop
add
sub
pushf
add
enter
cli
jne
or
call
ret
movsl
mov
inc
adc
and
sbb
jp
cld
sahf
jl
ficoms
dec
mov
jns
or
int3
jg
cmpsb
inc
fs
add
paddq
dec
pop
xchg
rclb
sbb
or
xor
repnz
cltd
imul
inc
sub
push
aaa
int3
push
jnp
pop
std
add
ja
dec
mov
push
cld
call
cmpsl
imul
scas
ficomps
fucomip
mov
sbb
push
add
movsb
ljmp
inc
xor
sbb
inc
test
lock
inc
loopne
push
xchg
dec
cmp
iret
or
sub
cld
push
sub
push
stc
mov
adc
cmpsl
and
xor
xchg
xor
loope
into
mov
pusha
je
push
dec
repz
mov
arpl
pop
jb
xchg
enter
fwait
cld
jle
dec
sahf
fcoml
into
out
mov
out
add
iret
jle
mov
mov
int
sub
cltd
lret
dec
xchg
hlt
cmpsl
or
addr16
inc
fwait
pop
sbb
js
xchg
push
dec
out
xchg
in
insb
sub
in
pop
cmp
jp
imul
cmp
mov
arpl
mov
adc
sbb
notb
jmp
push
push
mov
adc
cmc
mov
lahf
icebp
mov
stos
pop
lret
push
repnz
inc
jmp
push
and
pop
les
std
movsb
mov
inc
dec
test
and
cltd
jbe
mov
xchg
insl
insb
push
sub
daa
aam
testb
mov
push
loop
and
cmpsl
push
pop
jecxz
and
inc
fs
xor
mov
jecxz
lret
test
jecxz
pop
out
repz
fadd
std
mov
notl
add
push
loop
aas
sbb
pop
sub
test
push
sbb
xor
mov
and
orb
call
out
mov
dec
push
andl
call
ds
out
dec
pop
xchg
and
cmc
aad
cmp
cltd
or
popf
mov
dec
and
in
cmp
and
mov
test
mov
push
repz
fbld
cwtl
fdivr
nop
inc
call
mov
xchg
repz
fs
and
arpl
sub
mov
mov
add
push
inc
mov
pushl
adc
push
in
mov
add
stos
inc
and
mov
icebp
mov
into
fildll
push
or
cld
int3
xchg
jecxz
int
mov
xchg
jo
xor
jnp
pop
nop
cwtl
inc
cwtl
cmpsb
ljmp
es
sub
shl
jno
ror
push
enter
fwait
in
push
fildll
rclb
inc
repnz
pop
cmpsl
lret
insl
out
ljmp
cmp
pop
scas
icebp
push
mov
inc
push
add
cmp
shrl
sarl
fsts
inc
push
pop
test
mov
negl
jl
mov
out
mov
cmp
sub
xor
sarb
mov
pusha
arpl
stos
js
sub
xchg
xchg
dec
ficompl
jg
pop
and
push
stos
repnz
push
daa
lret
sub
jo
lds
out
andl
xor
pop
mov
mov
rcl
cltd
fstps
xor
xchg
aam
push
outsl
mov
sub
pop
sbb
fisttps
inc
mov
or
dec
xor
ja
mov
rcll
lahf
bound
fwait
loope
pop
out
xchg
jns
xchg
xchg
faddl
lcall
mov
adcl
cli
sub
sub
xor
jns
push
sub
stos
movsl
aaa
adc
xchg
test
mov
fsubs
jp
sbb
mov
push
cmp
mov
mov
ret
sbb
jecxz
and
jg
pop
dec
lock
ss
ficoms
iret
insb
gs
adc
imul
or
mov
arpl
popa
sbb
rep
rclb
cmp
adc
popf
les
lahf
lods
sbb
jle
push
inc
lods
movsb
jmp
or
fcomps
popa
jno
enter
andb
lret
or
pushf
adc
test
movsl
out
mov
dec
pushf
cmp
jp
lahf
rolb
in
lock
push
xchg
add
test
xchg
rolb
pop
rcll
dec
in
xlat
jns
sbb
push
pop
mov
pop
push
int3
mov
mov
scas
leave
inc
or
push
idiv
lods
mov
pusha
imul
push
orb
pop
out
ljmp
into
pop
pop
ljmp
movzwl
add
rol
xor
dec
push
fiadds
lea
cmpsb
xor
push
xchg
sub
push
mov
sahf
jae
mov
daa
popa
and
xchg
lret
and
mov
xchg
mov
out
add
ret
sub
adc
sbb
mov
xchg
test
aas
loope
lcall
das
stc
and
dec
mov
mov
data16
iret
push
arpl
lods
push
inc
mov
dec
cmc
mov
stos
push
xor
enter
enter
es
lret
lcall
mov
xchg
pop
stos
xor
notb
jnp
popf
sbb
popf
stc
cmp
add
int3
add
push
test
cmp
push
mov
push
add
lahf
shrb
test
enter
loopne
out
lods
mov
adc
int3
add
fidivrs
xchg
out
popf
push
add
scas
jg
lret
cmpsb
add
pop
sbb
or
jb,pn
mov
mov
inc
pop
pop
mov
jecxz
pop
xor
fdivrl
bound
jecxz
mov
mov
dec
jp
mov
lahf
loope
cmp
in
outsl
lods
outsl
movsl
test
jg
jns
push
push
mov
mov
mov
fs
in
inc
jne
add
xchg
mov
xor
mov
sahf
xchg
dec
inc
sbb
ret
mov
inc
cmc
jno
sti
cmp
sub
shrl
xchg
addr16
pop
pop
ret
sahf
sbb
movsl
into
fsubrl
hlt
hlt
hlt
adc
or
pop
loop
push
leave
mov
jp
stos
push
push
mov
xchg
dec
cmp
mov
add
xor
sar
xchg
sbb
dec
adc
xor
pop
out
pusha
and
or
cmp
sbb
jae
xor
jnp
mov
cmp
notb
popa
mov
adc
xchg
out
adc
in
lcall
pop
fisubrs
test
inc
xor
push
rcl
ss
data16
cmc
hlt
aas
test
in
arpl
je
sbb
popf
mov
cmp
sbb
add
aaa
add
pop
cmpsb
dec
inc
jle
xor
inc
xchg
out
mov
data16
or
callw
rorb
lahf
lret
test
push
out
test
ffreep
sub
sub
mov
push
outsl
push
pushf
das
sti
push
out
fsubrs
jnp
ret
cmp
sar
out
inc
fnstenv
mov
pop
mov
lret
fsubrl
sub
jecxz
xchg
insb
jbe
mov
das
jg
mov
loopne
enter
fdivrl
and
or
jg
inc
std
hlt
or
fs
sti
sub
inc
ss
cmpsl
jge
arpl
mov
gs
imul
pop
imul
push
lods
mov
das
jnp
out
sub
clc
in
jne
mov
pushf
in
repz
adc
sbb
cmpsl
xchg
pop
jge
xchg
pop
das
push
outsb
divl
bound
adc
cmp
dec
xchg
pop
cmp
sbb
add
pop
rorb
push
adc
out
pop
mov
call
adc
repz
fs
pop
inc
and
fidivs
aas
stos
jl
mov
jg
loope
sbb
inc
jb
inc
push
add
xchg
add
dec
xor
jbe
aam
pop
or
sub
insl
mov
lock
in
jo
ret
call
sbb
fstpt
sub
add
push
stos
jmp
cmp
test
rcrl
push
sub
pusha
pop
arpl
push
cmp
gs
scas
cld
add
cltd
cmc
or
sbb
xor
clc
loopne
rolw
xor
dec
aad
push
and
in
or
outsl
pop
adc
add
test
jae
push
fldt
and
stos
add
es
sti
pop
fisubl
push
and
mov
dec
pop
dec
mov
add
in
xchg
jbe
sub
hlt
jns
out
adc
cmp
jmp
lret
fsubl
xchg
or
push
sti
adcb
sbb
xchg
dec
inc
add
insl
mov
rcrl
daa
lods
popa
pusha
enter
movsb
push
ja
inc
ja
and
pop
test
push
lea
jno
mov
lcall
lods
inc
fwait
loopne
test
aas
leave
xchg
pop
sub
es
std
or
sbb
enter
jmp
arpl
aas
xor
lods
push
or
lahf
iret
sub
push
das
xchg
pusha
adc
xchg
push
dec
lods
movsb
push
or
push
xor
mov
nop
sti
pop
jne
mov
push
enter
lea
aam
lcall
add
or
shr
leave
sub
pop
inc
out
dec
xchg
add
int3
jne
push
inc
jmp
mov
dec
push
shrb
dec
cmpsb
mov
je
mov
test
mov
imul
dec
inc
in
sub
outsb
and
cld
sub
xchg
push
push
cli
imul
dec
push
mov
aaa
and
add
cli
cltd
jp
fbstp
fmuls
leave
ret
fisubrs
inc
pop
mov
xchg
mov
imul
popa
jmp
xchg
mov
mov
cmp
arpl
lds
shr
pop
jg
pop
test
or
mov
enter
std
jmp
aaa
push
paddq
or
stos
insb
adc
mov
outsb
mov
shrb
shrb
mov
lea
xor
pop
das
test
jge
push
push
movb
and
dec
int
popa
jns
mov
add
cwtl
push
sahf
xchg
ja
jg
sub
fsubrl
rcl
movl
pop
aad
bound
lret
mov
mov
and
sahf
mov
lods
rcll
loopne
jnp
xchg
int3
xor
ds
jp
xchg
mov
add
cmpsl
lcall
mov
dec
inc
dec
add
sub
outsb
mov
ret
cmc
sub
or
jp
repnz
imul
rorb
in
ret
pop
mov
jmp
pusha
fwait
in
adc
dec
adc
mov
push
aam
or
mov
int3
xchg
mov
sub
dec
adcl
fnstsw
iret
push
jle
dec
pop
fnop
and
jge
pop
jg
outsb
sub
push
jmp
std
adc
int3
mov
addr16
mov
mov
adc
add
repz
out
sub
popa
push
inc
daa
testb
inc
mov
mov
mov
je
xorb
popf
test
mov
sub
lret
add
std
sub
cmp
aad
jbe
dec
movsl
mov
xchg
push
dec
add
popf
fidivrs
clc
scas
shlb
lret
mov
out
pop
roll
shll
daa
sbbl
aas
or
stos
int
push
loopne
pusha
shl
popa
sbb
sbb
cmp
call
jge
cmpsb
mov
mov
das
es
mov
scas
aaa
pop
mov
nop
imul
sbb
xorb
mov
mov
mov
out
mov
imul
push
cmp
mov
negb
inc
pop
or
adc
sbb
xacquire
inc
adc
sbb
js
adc
pop
inc
pop
ljmp
fs
push
mov
mov
repnz
cmp
pusha
lea
cmpl
cmp
rorb
pop
xchg
out
testl
add
pushf
pop
xchg
nop
lret
inc
mov
pop
out
cmp
movsl
mov
jo
loope
dec
stos
sub
cmp
int
adc
jl
lahf
xchg
xchg
test
push
pop
imul
or
cmp
push
jecxz
push
mov
mov
xorb
ss
mov
imul
pusha
in
pop
mov
outsl
testl
push
sub
push
cmp
dec
ror
pop
roll
mov
mov
outsl
sub
mov
cmpsb
adc
pop
inc
jg
into
xor
shrb
stos
mov
in
sbb
add
jno
lret
cmpl
ds
push
dec
cmp
xchg
ljmp
jnp
push
mov
scas
xchg
int
add
lock
mov
addb
cmp
ljmp
aas
movsl
arpl
scas
mov
setbe
insb
pop
addl
adc
dec
cmp
adc
mov
or
push
inc
sbbl
and
hlt
pop
inc
out
inc
hlt
push
mov
popa
das
test
aaa
push
into
xchg
scas
fsqrt
xchg
pop
ficoml
xor
sub
adc
insb
rcrb
push
imul
pushf
cld
dec
mov
imull
scas
and
ljmp
ss
popa
ret
jns
out
movsb
fnstsw
scas
mov
mov
adc
mov
lret
pop
call
daa
stc
mov
sbb
les
lods
insl
jmp
sahf
add
lar
cmpsl
or
adc
cmp
into
jg
and
mov
lahf
or
push
xchg
iret
xor
out
sub
rcll
sub
jo
jnp
cmp
hlt
dec
xor
iret
adc
push
enter
lods
xor
sub
inc
leave
adc
bnd
cltd
sub
fisttpll
xchg
jne
out
mov
outsl
cmp
loope
rcll
adc
push
ror
aas
xchg
adc
xlat
data16
mov
push
dec
addl
shlb
pop
insl
ficomps
int
test
jg
jns
cmp
sub
xorb
mov
adc
clc
xor
enter
or
outsb
add
sti
sbb
orb
daa
mov
push
adc
ret
bound
in
sub
fistpll
addr16
push
repz
mov
rcll
loope
mov
xor
xor
ljmp
fs
ret
mov
movsl
jecxz
mov
rolb
add
popf
outsb
pop
xchg
dec
int
cmp
stos
xchg
lret
incb
cli
xlat
jne
sbb
inc
push
xchg
gs
mov
or
cltd
push
mov
cmp
imul
movsl
pop
mov
pop
aad
or
out
int
add
or
in
test
mov
fdivl
inc
bound
sarl
int
inc
inc
fcomps
iret
mov
mov
jle
stos
adc
cmc
aaa
arpl
adc
clc
aam
add
cmc
xchg
cli
pop
outsl
test
negl
aaa
std
xlat
mov
test
pop
pop
jb
sbb
fnstenv
rcr
add
add
xchg
cwtl
shr
jge
insl
cmpsb
jnp
movsl
aas
sub
mov
fdiv
mov
ret
xor
in
mov
aad
fsubs
pop
ficoml
into
out
setp
xlat
mov
mov
gs
push
jo
loop
arpl
jge
imul
test
jmp
pop
inc
push
cmp
test
pop
daa
cmpsl
lock
mov
mov
mov
test
pusha
pop
inc
arpl
or
fs
fsubr
fcomi
jb
sbb
and
in
mov
jle
mov
xor
adc
mov
notl
or
shll
and
fiadds
sarb
movsl
scas
and
mov
pop
mov
repz
test
stos
andl
roll
test
imul
pop
stos
cmp
mov
popf
stos
fstpt
out
lds
es
jmp
push
loope
sub
out
jns
sbb
add
pop
xchg
lcall
xchg
add
xor
push
push
add
mov
mov
lods
sub
sub
jnp
pop
leave
mov
das
and
xchg
lahf
cmpl
call
rorl
xchg
pop
adc
arpl
aam
in
or
cmp
dec
adc
aas
std
mov
int3
mov
mov
stos
jge
jns
test
sbb
fisubrl
mov
pop
pop
add
dec
movsb
in
hlt
jae
mov
call
aad
mov
fisttpl
andb
cmp
nop
jae
out
or
mov
out
aam
jg
out
les
andl
xchg
lret
and
aad
movsl
cmp
xor
dec
or
cmp
dec
pop
call
adc
adc
sub
test
and
sbb
lcall
pop
call
and
and
testl
mov
add
mov
mov
sub
sub
xchg
and
mov
or
mov
push
aaa
push
or
stc
stc
and
out
popf
jns
daa
andl
aam
jle
fmuls
jnp
mov
mov
insb
pusha
mov
imul
ret
imul
adc
imul
je
lret
daa
sti
lods
xor
and
sbb
and
or
sbb
push
sbb
jae
out
jae
mov
cmc
repz
xchg
push
negl
test
or
mov
js
mov
jmp
add
pop
mov
sti
insl
inc
push
and
int3
lds
add
lahf
std
push
lahf
push
lds
nop
xchg
int
aad
clc
mov
adc
xor
jbe
dec
xor
lahf
fdivrs
or
lret
pop
cmpsb
cmp
inc
jg
dec
and
or
and
jbe
add
popf
jnp
and
xchg
xor
mov
jmp
jne
inc
lret
jne
push
ds
stos
push
sti
in
imul
fsubs
xchg
sbbl
test
cld
lcall
push
out
mov
jge
mov
adcb
mov
dec
stc
or
jns
xor
hlt
mov
scas
lods
add
mov
cmp
ds
cli
inc
xor
and
cmpsl
cs
jecxz
and
xor
fisttpll
or
ds
xchg
fldl
jns
stc
test
adc
leave
icebp
jnp
xor
lahf
std
sub
add
sbb
pusha
pop
dec
test
sbb
fsubs
loop
iret
loopne
pop
xchg
sub
dec
loopne
sti
lock
shl
inc
ret
out
mov
out
jl
fisubrs
data16
push
lret
or
push
adcb
mov
outsb
xor
sbb
loope
pusha
cmp
cmpsb
movsb
pop
add
sbb
pushf
adc
inc
nop
ds
inc
cmc
pop
dec
inc
fsubs
xchg
out
out
mov
pop
repnz
jp
push
sub
test
aaa
jecxz
adc
std
push
popf
pop
jno
xor
xorb
inc
mov
inc
and
sti
jb
pop
ret
jnp
xlat
cmpsl
ret
and
cmp
das
add
lods
das
mov
enter
orl
cwtl
je
add
sub
xor
sbb
daa
push
sub
testl
in
cwtl
test
mov
je
jge
imul
xchg
jge
enter
cmc
mov
xchg
xor
or
jmp
cmp
xchg
sbbb
ja
adc
xor
sahf
inc
or
stc
fnsave
xchg
insb
xchg
cmp
stos
cwtl
cmp
je
nop
loope
sbb
and
in
cmp
cmc
dec
fwait
stos
or
adc
ret
lods
loope
cmp
shr
imul
je
mov
notl
or
dec
das
or
pop
adc
paddusb
add
shrb
push
inc
test
rorb
lods
inc
xor
push
xchg
lock
mov
loop
xlat
mov
es
jo
ds
jle
mov
adc
mov
dec
sub
lock
adcb
jp
jo
and
sbb
lret
movsl
xor
mov
shr
test
fmull
cli
aaa
sbb
mov
cltd
mov
sub
mov
je
sbb
sbb
xor
push
pushf
scas
lds
cmp
inc
sbb
jbe
mov
xor
xchg
adc
repnz
or
push
clc
or
insl
lret
jns
lds
mov
iret
ds
cli
push
iret
stc
inc
xor
add
cmp
push
fs
or
pop
sarl
clc
fmuls
hlt
sbb
xor
pop
cmp
fcomi
movsl
inc
push
xchg
hlt
sub
out
repnz
arpl
imul
out
lods
stc
aam
sahf
and
cmp
out
xchg
sbb
cs
enter
addr16
lock
imul
add
add
ds
pop
mov
mov
jns
dec
into
sti
mov
dec
mov
ja
xchg
lock
sub
xchg
gs
cld
and
sbb
test
mov
xchg
shrb
repz
push
xchg
jne
sbbb
rolb
mov
mov
sahf
fmull
jmp
pop
jp
les
imul
mov
mov
js
push
mov
cli
mov
stos
inc
jmp
out
adcb
shlb
jns
ja
fwait
repnz
adc
jecxz
loopne
sub
int
pushf
test
lret
xchg
sarb
lret
xor
lods
ja
testb
test
fsub
sbb
gs
lods
call
and
adc
adc
xchg
aam
fmuls
jo
ret
jg
jno
repnz
test
push
es
shll
pop
out
out
mov
dec
cltd
sbb
add
movl
lds
es
push
pop
addr16
int
or
jp
add
popa
loopne
ret
add
mov
sbb
mov
jnp
mov
cs
movsl
addr16
sbb
scas
mov
mov
iret
mov
dec
dec
sub
std
les
inc
mov
and
loop
jg
leave
push
scas
mov
scas
cld
sub
cmp
or
mov
push
sahf
popf
sahf
or
xchg
aaa
add
jb
icebp
mov
std
arpl
push
sarb
add
movsb
mov
mov
inc
xor
lods
xlat
lcall
push
sub
adc
dec
mov
jecxz
sbb
mov
gs
insb
fmuls
mov
add
xchg
cmp
xchg
lret
in
push
test
repnz
adc
out
test
data16
jle
sbb
outsl
cmp
jno
js
dec
fimull
cmp
jno
sub
mov
and
xchg
lds
mov
repnz
sub
pop
inc
inc
cli
sarl
ds
jmp
imul
lods
jb
movsl
mov
mov
sub
scas
test
mov
fsubs
shl
push
adc
das
sbb
fisubl
mov
bound
out
lahf
or
cld
jmp
in
ss
loopne
arpl
mov
js
adc
movsb
adc
cmp
inc
pop
cld
mov
sbb
jno
test
add
icebp
rcl
shrb
push
mov
jg
cli
in
add
sbb
fldl
xchg
repz
inc
and
push
aaa
int
bound
into
data16
clc
push
push
notl
inc
ja
sub
popf
lods
jp
mov
daa
mov
cmc
std
insl
outsb
lods
mov
xor
push
cmp
adcl
ror
push
or
cmp
fisttps
outsl
mov
pop
cld
loope
push
sub
lahf
enter
repnz
sub
inc
jecxz
sbb
or
hlt
push
mov
mov
or
mov
sub
cwtl
lea
nop
mov
in
data16
mov
push
sub
pop
js
hlt
pushf
jno
xor
js
cwtl
add
mov
xchg
leave
mov
add
mov
out
mov
dec
xchg
add
fldenv
pop
mov
ret
mov
lret
jmp
mov
adc
cmc
pop
test
test
out
rolb
sar
or
push
cli
jne
add
fxch
xor
cltd
lods
loop
lea
arpl
cmp
inc
xchg
hlt
call
push
je
pop
scas
pushf
xor
lock
stos
addl
sub
dec
sub
or
pop
jo
push
test
mov
test
pop
subl
icebp
sbb
and
add
testb
in
mov
or
cmp
xchg
adc
xor
add
cmp
fadds
jl
push
js
and
fldcw
pop
or
vmread
les
mov
xor
aas
xor
scas
add
dec
flds
outsl
mov
fs
jo
lahf
popa
inc
movsb
aas
stc
mov
add
lea
push
popf
mov
loopw
mov
stos
xor
or
dec
xlat
and
inc
xchg
into
daa
sbb
nop
pop
jo
lcall
push
pop
ret
dec
adc
dec
cltd
jnp
ja
mov
ss
lret
or
sbb
imul
flds
lret
inc
mov
subl
xor
jl
cwtl
or
jb
das
push
xchg
or
nop
punpcklwd
cltd
ret
es
xchg
shr
jmp
mov
push
idivb
out
rsqrtps
pushf
enter
out
out
fstl
mov
or
es
popa
nop
imul
xor
mov
xor
gs
adc
jne
adc
inc
bound
iret
xor
mov
and
movsb
sti
cmp
add
sahf
lret
pop
jno
ja
xchg
xchg
mov
pop
loop
dec
xchg
push
outsb
xor
lods
sbb
jg
je
movsb
rorl
dec
cwtl
rcrl
aad
lret
ret
addr16
incl
rolb
ja,pt
inc
cltd
mov
push
jg
fcoms
pusha
sbb
and
push
add
lods
xchg
xchg
mov
out
std
cmp
fwait
mov
mov
inc
rol
sbb
xchg
imul
outsl
gs
adc
or
filds
pusha
mov
fdivrs
iret
pop
sub
aas
cmpsb
dec
fwait
lcall
cs
mov
ss
mov
push
outsl
imul
sub
jne
inc
cmp
cmp
mov
sub
mov
and
cs
in
popa
cmp
pop
and
clc
dec
inc
sbb
mov
add
movsl
push
ret
mov
or
lret
sbb
lock
adc
pop
xor
sbb
std
jne
hlt
ss
fldenv
mov
adc
in
in
roll
loopne
scas
sbb
cwtl
inc
cwtl
rclb
sarl
dec
pop
mov
popa
and
ret
pop
insb
jp
lds
iret
mov
loopne
xor
ljmp
icebp
push
sbb
idivb
mov
icebp
std
and
cmp
outsb
rol
mov
loop
shll
sub
sub
ljmp
mov
dec
add
xorb
and
test
xchg
fs
scas
rcl
lock
cli
fistpl
loope
sbb
sbbb
mov
mov
mull
sbb
cmp
push
mov
mov
hlt
mov
mov
add
arpl
or
test
cld
push
into
jecxz
inc
pop
loopne
cs
cmpsl
add
or
nop
ds
iret
sub
into
rcrb
hlt
or
ja
das
pop
loope
popa
jecxz
cs
gs
xor
div
in
xorl
and
push
xor
hlt
popa
pop
rcll
cmp
hlt
das
bound
push
mov
stos
pusha
shl
and
xor
es
fnstenv
or
sbb
pop
out
cmp
push
out
popa
adc
jnp
adc
pushl
movsl
dec
lret
mov
in
js
test
lcallw
and
dec
std
xchg
out
pop
jg
dec
idivb
hlt
jecxz
adc
push
into
int3
scas
add
cmp
pop
in
mov
es
dec
cmpsl
movsl
mov
push
xor
pop
mov
dec
or
mov
movsb
sub
std
push
xchg
add
loope
xchg
aad
pop
loop
ret
mov
lods
xor
xor
jb
cmpsl
cmp
push
fwait
sub
out
push
sbb
gs
adc
xchg
lds
das
out
out
pop
mov
xchg
and
cwtl
aam
mov
mov
pop
xor
out
add
sub
cmc
sarb
jo
jbe
xchg
jp,pt
jbe
jmp
and
push
mov
mov
pusha
push
iret
cwtl
lods
mov
push
inc
lea
adc
add
xor
fdivr
or
push
aad
outsl
mov
enter
xchg
flds
jge
jae
pop
pushf
inc
inc
inc
test
stc
sub
pop
ret
pop
and
idivb
mov
imul
xor
push
ljmp
imul
lock
push
jne
call
dec
mov
test
leave
and
mov
stc
push
in
and
adc
lods
lahf
std
adc
lret
test
in
jmp
gs
mov
dec
fisubrl
mov
leave
jno,pt
pop
out
adc
adc
or
shlb
add
outsb
fwait
mov
cs
adc
bound
push
arpl
fstpt
pop
mov
cli
jns
or
in
jmp
xlat
pushf
push
xchg
push
push
sbb
les
nop
dec
xor
mov
jge
xor
xchg
stos
and
and
sub
dec
repz
mov
arpl
push
ss
cld
lods
or
inc
ret
lret
push
xchg
pop
cmp
push
ss
mov
sti
mov
dec
adc
jl
out
jae
imul
xor
test
push
pop
push
push
push
cmp
mov
aad
fs
mov
pop
and
loop
les
and
or
mov
test
imul
adc
leave
idivl
jne
loopne
push
xchg
pop
mov
pop
fsubr
push
push
repz
push
and
jbe
add
pop
lcall
jae
jnp
out
xchg
pop
shlb
dec
and
pop
cmp
test
or
aam
jbe
push
push
ret
int
sbb
cmp
sbb
jg
movsl
pop
lahf
jg
inc
call
sub
dec
roll
cmp
push
fstl
pop
sbb
inc
jo
add
testb
mov
fstps
lret
cli
pusha
push
int3
pop
push
rorb
jge
rcl
xchg
add
pop
ja
cmp
sbb
push
pusha
jge
popa
sbb
jg
scas
inc
push
out
or
sbbb
stos
in
pop
outsl
adc
jno
sbb
stos
and
dec
cmc
xchg
pop
mov
pushf
pop
test
icebp
outsb
or
sahf
sbb
mov
pop
scas
leave
push
or
inc
pop
inc
pop
das
sahf
rcll
shll
push
hlt
out
cmp
push
pop
std
mov
mov
hlt
pushf
nop
in
in
lea
cmc
and
xchg
out
and
sbb
data16
aas
xchg
sub
pusha
subb
push
filds
aas
pop
sub
cltd
mov
xchg
push
jo
stos
in
subl
sti
mov
mov
aas
jo
call
int
nop
inc
inc
pop
jne
mov
add
pop
js
inc
leave
popf
mov
push
std
xchg
insb
sarb
dec
out
jb
xchg
mov
jae
stos
sub
insb
cmp
adc
mov
mov
repnz
xchg
rcll
ret
and
xchg
fchs
mov
std
adc
sti
push
jo
enter
loopne
test
inc
or
sub
jno
data16
sbb
xchg
or
add
push
pushf
repz
jne
xlat
out
int3
xchg
and
xchg
sbb
add
adc
in
push
enter
jp
test
mov
dec
aad
aad
fsubs
sti
adc
mov
adcb
fs
xchg
ret
and
push
add
jmp
cmpsb
test
lea
jb
sbb
rorb
jp
sbb
mov
scas
stos
test
ret
add
and
and
pop
pop
popf
inc
rolb
enter
pop
mov
mov
push
add
and
jbe
daa
fnstenv
add
jae
lods
add
mov
scas
adc
mov
xchg
push
pop
pop
add
jae
cmovne
add
mov
cmpsb
loope
repnz
fistpll
repnz
jbe
lds
sbb
mov
mov
push
adc
fdivs
pushf
pop
ljmp
stc
lcall
fildl
movaps
add
mov
pop
push
xor
dec
push
or
pusha
cs
cli
adc
dec
fisubs
xor
jne
into
pop
xor
ss
or
rclb
jns
cmc
pushf
lret
js
mov
fnstenv
cwtl
fisubs
xor
sbb
add
adc
push
pop
jecxz
mov
lds
test
xchg
mov
fcompl
sbb
sbb
mov
jne
fwait
insl
sub
and
jne
jmp
adc
push
divl
pop
movl
mov
mov
cmp
pop
in
lea
leave
mov
jno
cs
push
adc
les
mov
mov
js
addr16
pop
push
aaa
inc
mov
ja
jne
dec
mov
nop
aaa
add
xchg
mov
inc
pusha
xchg
adc
sbbb
xchg
pop
cmp
in
cmpsb
or
fs
jae
fiaddl
insb
popf
in
mov
xchg
jle
inc
je
mov
pop
insl
movsl
push
jle
inc
xor
int3
add
adc
je
mov
or
mov
insl
and
in
fcomps
mov
adc
ss
outsb
in
xchg
stos
je
aaa
movsl
enter
mov
or
xchg
pop
jl
add
push
pushf
pushf
je
insb
or
inc
adc
lret
inc
outsb
cmp
inc
cmp
lods
ds
ljmp
mov
fcomi
adc
gs
scas
adc
dec
and
jp
lret
lock
sbb
pop
shlb
lock
pop
aam
loop
ret
inc
xorb
sti
or
in
sbb
addl
movsl
add
loop
stos
int3
pop
test
dec
inc
std
ss
lods
je
cltd
mov
jl
pop
fs
testb
fcmovne
popa
iret
cmp
jns
xchg
insb
insb
cmpsl
repnz
cmc
in
pop
iret
mov
mul
push
sub
imull
insl
mov
orl
inc
inc
add
rolb
into
mov
push
loopne
leave
add
push
or
cmpb
jg
nopl
jbe
xor
subl
adc
out
lea
or
push
sbb
jg
or
xor
push
fs
mov
cmp
mov
inc
stc
push
adc
lret
jl
add
clc
sahf
dec
aam
inc
fnstcw
loope
call
push
inc
in
mov
daa
xchg
cmp
adc
mov
fwait
clc
call
pop
push
mov
rorl
push
push
pop
inc
mov
scas
stos
sbb
iret
cs
mov
insl
lds
clc
mov
mov
xchg
fistl
dec
scas
mov
sub
jl
fsubrs
cltd
cmp
or
nop
add
rcr
cmc
pushf
fmull
or
cmp
mov
cwtl
add
jg
imul
dec
call
inc
lods
cwtl
adc
push
push
cmc
cli
js
stc
and
rcll
cmpb
jle
push
dec
pop
inc
jmp
add
xchg
and
pop
repnz
adc
mov
pusha
xchg
stos
push
cld
movsl
cltd
pushf
test
mov
lahf
mov
xchg
sbb
mov
test
lock
push
push
xchg
bnd
push
stos
lret
inc
mov
xchg
cwtl
inc
sbb
and
aam
pop
jne
fdivs
mov
fstp
imul
cmc
push
push
ljmp
add
mov
shrb
xchg
movl
pop
sahf
inc
pop
push
inc
push
adc
test
addr16
popa
daa
rolb
out
fnsave
xchg
jge
pushf
push
nop
sub
out
into
lahf
fisubs
daa
rcrb
mov
insb
xor
jno
pop
pop
in
js
sub
push
inc
aad
mov
ja
lret
lret
pusha
jbe
dec
test
sbb
inc
cmp
mov
push
sub
xchg
push
test
xchg
mov
rorb
push
pop
mov
fimull
leave
jne
cltd
idivl
fldcw
popa
pop
jne
xchg
in
mov
xor
adc
gs
dec
pop
push
mov
xchg
insb
into
mov
sub
and
mov
enter
call
mov
icebp
sarb
scas
dec
aaa
daa
or
je
call
push
pusha
xor
mov
rcl
fcomps
xor
sub
fcoml
cwtl
dec
jne
repz
rcrb
adc
and
test
add
repnz
lds
sbb
lods
pop
add
cmp
lods
ret
sub
push
rorl
add
or
dec
les
sahf
sbbb
adc
mov
or
jg
rcl
mov
lods
mov
jbe
mov
loopne
pusha
mov
into
or
in
in
xor
pop
push
imulb
fidivrs
cmc
jecxz,pn
jo
jno
repnz
loopne
movsl
aaa
fsubrp
adc
adc
mov
lret
jge
mov
test
repnz
inc
xor
xchg
jmp
ret
and
push
loopne
or
std
push
leave
stos
pop
dec
sub
mov
aad
xchg
lahf
push
jns
arpl
xor
lahf
mov
push
sbb
or
loop
pop
push
xor
pmullw
ds
adc
pop
inc
les
lds
daa
div
pop
ret
pop
frstor
gs
add
out
fs
rcrb
adc
and
loope
fsubs
inc
jecxz
outsb
or
movsl
int
push
cmpb
fwait
dec
jnp
jecxz
mov
out
mov
clc
fidivrl
jo
fld
inc
dec
sbb
in
into
mov
xor
fbstp
sub
pop
jecxz
insl
cmp
das
into
and
xchg
inc
push
fcompl
xchg
out
loope
xchg
aaa
mulb
cmp
jl
add
les
aaa
and
fwait
inc
push
and
jl
outsb
sbb
in
pop
divl
ret
mul
gs
adc
setle
mov
test
lods
mov
pop
mov
xchg
sbb
xor
cli
or
cmpsb
mov
movsl
jp
loope
push
jno
movsl
mov
mov
pop
imul
or
jge
inc
ret
xlat
jmp
mov
jmp
mov
mov
les
xor
subb
xor
dec
pop
push
mov
es
and
inc
fnstsw
arpl
lods
sbb
test
jo
mov
mov
inc
push
stc
mov
push
ret
and
mov
xlat
loop
aaa
sub
int3
push
mov
sbb
call
or
fildl
mov
insb
fs
cmp
add
inc
in
popl
sub
adc
stos
cmp
mov
jne
cmp
pop
ja
fdivs
insl
sub
dec
cmpps
cmp
subb
pop
or
pop
xor
dec
pop
je
push
int
clc
or
aad
xor
movd
scas
daa
mov
xor
fisubrs
xor
mov
daa
daa
push
mov
js
mov
iret
push
xchg
dec
fistps
sub
stc
xchg
cs
add
mov
mov
popa
rol
xor
sbb
or
or
mov
std
push
xlat
dec
mov
jg
sub
jmp
jae
lock
in
cmp
pop
xchg
cmp
loop
xchg
mov
push
xchg
sbb
and
mov
jl
add
ja
dec
pushl
jae
dec
pusha
mov
icebp
fdivrs
jb
sti
xor
into
pop
movsb
cmpsb
dec
ljmp
jno
aam
adc
sub
sar
sub
pop
xor
add
sub
jnp
mov
stc
and
inc
pop
xchg
pop
insb
mov
adc
iret
cmp
ret
mov
div
jle
cmc
jae
pusha
faddl
popa
mov
pop
andb
xchg
stos
lds
cwtl
cmc
and
loopne
lds
imul
fs
xor
lods
lods
jae
movl
shrb
mov
xchg
std
std
mov
mov
add
hlt
ljmp
fwait
xorl
cmp
jbe
mov
popa
xor
movsl
outsl
pop
fistps
nopl
scas
xor
xchg
loop
sub
sarb
and
loop
pop
mov
stos
out
cmpsb
jbe
xchg
movsb
jle
xor
icebp
rcrl
dec
pop
rcrb
cltd
cs
scas
push
ss
adc
jae
aam
ljmp
sub
mov
jle
fbstp
je
mov
popa
jnp
out
jae
loopne
pop
pop
sbbb
sbb
add
xchg
pusha
fwait
jae
push
mov
xchg
dec
inc
mov
mov
fwait
adc
popa
imul
ja
lret
and
jmp
fwait
inc
into
jnp
ss
push
bound
scas
pop
jl
sbbl
or
push
in
pop
repz
inc
inc
sbb
sti
cmp
cld
and
fwait
push
jbe
in
cmp
jge
arpl
adc
push
sbb
dec
repz
lea
xchg
popa
rcrb
mov
out
movsl
in
xor
daa
sub
inc
sub
les
scas
lock
jl
shll
adc
jne
mov
or
mov
pop
arpl
pop
push
mov
std
out
mov
sub
mov
and
outsb
xchg
dec
sub
mov
ljmp
stos
sbb
xchg
xchg
push
dec
aad
push
iret
movsl
xor
enter
pop
xor
aaa
sub
sub
into
dec
sarb
push
sub
cmpb
out
andl
cmpsl
mov
test
jle
mov
jns
cltd
test
add
cmp
lret
or
sub
stos
cmp
lahf
aam
je
jns
jae
pop
xorl
ret
dec
ret
js
pop
imul
mov
inc
or
adc
push
cmp
pop
addr16
movsl
sub
mov
mov
das
add
out
xlat
sbb
aaa
mov
cmp
jno
dec
jnp
cmp
cmp
push
mov
jb
pop
dec
dec
mov
or
cmc
loop
jl
xchg
fldcw
inc
mov
fld
pop
out
adc
ficompl
sbb
cmpl
shrb
xchg
mov
std
into
leave
aaa
add
add
fnstenv
adc
mov
repnz
jmp
pushf
es
inc
test
lods
xchg
cmp
adc
ss
inc
cmp
sub
push
test
dec
jg
cmpsb
jo
dec
leave
enter
sbb
push
jecxz
lods
hlt
fnstsw
dec
mov
out
int3
mov
cmpsl
mov
ret
pushl
ret
loope
stos
dec
pop
mov
mov
cwtl
push
jl
or
mov
and
xchg
js
pop
mov
insb
outsl
push
fdivl
daa
cltd
cmp
pop
lods
pusha
or
fwait
cmp
cmpsl
xchg
sbb
jns
cwtl
cmpsb
pop
data16
repnz
mov
jge
and
and
cld
and
push
mov
pop
pop
add
sub
lret
es
or
popf
ljmp
movsl
sub
inc
or
pop
andb
scas
inc
sbb
pop
call
aas
add
adc
ret
out
xchg
ja
lods
jns
or
popa
sbb
sbbb
in
mov
sbb
xchg
mov
in
cmpsl
hlt
jmp
sti
ret
sbb
aad
inc
or
aad
pop
rolb
and
repnz
xor
scas
ret
add
xchg
xchg
adc
xchg
cs
arpl
xchg
add
shlb
enter
test
or
adc
es
std
nop
inc
sbb
or
or
sub
mov
sub
cmc
sbb
cltd
cmp
into
scas
xor
jns
mov
jmp
mov
mov
pop
jle
sti
outsl
and
cld
sarb
rorb
call
filds
pop
push
lods
mov
push
out
or
jbe
lahf
cmp
mov
cld
stc
pop
or
test
subb
mov
push
call
mov
ljmp
add
out
lahf
cmpsl
stos
sub
mov
into
mov
mov
mov
xchg
xchg
movsb
lock
pop
xchg
xlat
cmp
arpl
push
jne
shlb
insl
pushf
outsl
jp
inc
xor
mov
xor
push
outsb
imul
mov
jo
adc
inc
loope
jbe
and
xor
sbb
xchg
mov
in
lret
push
xchg
gs
movsb
insl
cmc
pop
ss
std
jecxz
clc
lea
and
add
out
cmp
jle
push
out
cmp
cmp
div
xchg
test
inc
pop
and
mov
call
jae
cmpb
sbb
lds
mov
push
lods
xor
loop,pt
mov
and
sbb
jle
arpl
fwait
jle
push
les
insl
add
std
addr16
adc
aaa
sub
test
pop
ror
xchg
lock
mov
lock
test
dec
mov
sbb
daa
jmp
jbe
dec
fldenv
fmuls
popf
inc
inc
dec
jmp
or
in
sti
shll
bound
je
aad
pop
fs
or
sub
fs
shr
sbb
sbb
xchg
jbe
je
cld
mov
pop
clc
push
xchg
add
cli
ja
xchg
and
mov
ror
xchg
dec
push
imul
push
dec
out
pop
decl
mov
inc
push
jne
mov
into
sub
sbb
in
mov
dec
inc
mov
les
inc
lods
loope
jp
aam
mov
and
or
push
aas
fcomps
je
mov
cmp
in
scas
dec
jbe
jns
add
xchg
push
pop
inc
or
mov
ror
ret
mov
add
xchg
xchg
mov
push
scas
movsl
in
mov
hlt
dec
lcall
and
push
inc
adc
aam
sbb
jp
testb
pop
inc
out
movsb
fisubrs
push
gs
fs
mov
mov
movsb
adc
dec
movsl
mov
mov
nop
bound
push
scas
roll
cmp
jb
inc
mov
push
cmp
in
rol
dec
mov
mov
jae
pop
jmp
pop
or
fsub
shrl
inc
pusha
cmp
popa
dec
es
cmp
test
jnp
ret
es
inc
fstl
jo
mov
push
jg
cmc
and
int3
xchg
push
jle
or
mov
adc
fiadds
sti
push
inc
sub
test
sub
sub
arpl
lea
sbb
insl
push
adc
repz
xchg
jno
push
stos
jns
cld
dec
adc
dec
test
fiadds
xor
data16
out
xlat
je
pushl
xlat
sub
mov
add
stos
mov
sub
outsl
jecxz
dec
xchg
inc
pop
cltd
fdivl
sbb
push
xor
dec
inc
ficompl
push
push
sar
pop
mov
out
or
sbb
and
xchg
mov
inc
cmp
push
pop
mov
data16
lahf
inc
mov
mov
and
mov
in
xchg
mov
fdivs
cmc
cli
cmp
loope
mov
stc
cmp
iret
fstpl
inc
movsb
sarb
jnp
xchg
sti
push
ja
insb
ror
push
push
repnz
std
push
dec
cwtl
cltd
lret
addl
xchg
pop
outsl
sarb
icebp
lret
cmp
cs
xchg
sbbl
incb
xchg
jns
decl
movsl
xchg
push
cmp
cmp
test
sbb
cmp
lods
mov
dec
and
xor
ljmp
jb
aad
sub
imul
sbb
pop
lahf
jns
loope
add
xor
lods
es
in
mov
icebp
xor
or
insb
jp
ret
pop
lods
and
and
ja
mov
adc
dec
lock
xchg
push
pop
or
jp
or
jmp
shrb
leave
ljmp
push
in
movsb
movsl
adc
mov
xchg
or
adc
in
hlt
popa
lods
mov
les
mov
inc
into
inc
mov
add
or
cmp
push
pop
sbb
in
ret
dec
cmpsl
jno
ret
popa
mov
andb
shl
and
xchg
pop
adc
or
cmc
sbb
dec
xchg
inc
jl
add
sub
add
cli
rcl
jo
xchg
mov
out
aam
dec
insb
push
add
negb
dec
cmp
xchg
mov
and
andl
sahf
cmc
imul
aad
out
xor
mov
scas
add
mov
and
in
leave
movsl
adc
inc
in
idivb
pop
scas
cmp
repz
fadds
push
mov
sbb
enter
or
test
mov
out
jns
fcomps
and
in
mov
jle
addl
dec
xchg
dec
fcoms
jbe
push
popa
inc
lcall
mov
data16
lea
mov
adc
xor
test
push
or
dec
pop
outsl
lcall
pop
pop
mov
lods
push
xchg
and
jecxz
das
aas
in
leave
mov
loop
cmp
sub
xchg
pop
xchg
cmpb
mov
imul
adc
cmpsb
dec
mov
sbb
int3
je
sarb
xor
cwtl
cmpsb
xor
mov
enter
incb
out
mov
aad
int3
stos
aas
fmulp
mov
cmp
jmp
adc
es
or
mov
popa
repnz
loop
iret
decl
pop
test
jg
loopne
roll
lea
daa
movsl
push
mov
dec
orb
jmp
mov
std
clc
sahf
push
push
push
push
xchg
cmp
jmp
scas
stos
ss
sbb
test
decl
inc
inc
xchg
jg
sub
rorb
sub
push
cltd
jo
cmpsl
xlat
fldl
jge
in
xlat
int3
jne
cmp
lcall
xchg
mov
pushf
fsts
in
and
mov
dec
xchg
push
stos
jp
sbb
push
inc
dec
enter
fwait
repnz
into
cwtl
outsb
out
lret
arpl
sub
jmp
xor
add
pop
in
push
dec
and
add
pop
imul
and
sahf
and
inc
movsl
xchg
push
pop
aas
ds
xlat
cs
adcl
and
mov
inc
xchg
and
xchg
push
push
sbb
into
jns
adc
insb
lahf
fcoms
je
xchg
enter
daa
adcb
or
push
sub
xor
mov
scas
in
mov
fbld
shrb
roll
or
mov
out
and
test
pusha
cmp
clc
cli
insl
jmp
cwtl
push
lahf
pushf
lods
lahf
subl
ficompl
add
scas
mov
mov
fs
dec
mov
js
inc
sub
mov
int3
jmp
sbb
dec
leave
jbe
test
jo
and
adc
mov
in
add
clc
popf
sub
addr16
loope
xor
xchg
fnstenv
sbb
adc
lcall
adc
dec
lea
mov
cli
stc
popa
and
movsl
daa
movsb
mov
push
stos
and
inc
movsb
out
das
push
add
repnz
jl
fs
das
mov
inc
pop
pusha
cmpsb
imul
outsb
aas
lahf
cmpsl
xchg
mov
addr16
pushf
add
imul
bound
ret
push
adc
pop
rcr
xchg
testl
test
subl
out
jnp
mov
pop
pop
push
sbbl
cmp
dec
push
movsl
enter
neg
insb
sub
aam
stos
mov
inc
test
andl
out
xor
xsha256
cmpsb
adc
vpsllq
imul
scas
test
or
sub
mov
outsl
pop
cli
gs
pushf
test
imul
add
and
dec
pop
out
sbb
lods
dec
jge
cmp
xlat
push
std
lds
mov
jae
test
mov
xor
xlat
js
daa
outsb
and
pop
xor
cmpsl
call
cmpsl
pop
pop
jbe
sub
xor
iret
sbb
ret
out
mov
in
enter
rcl
mov
or
loope
adc
lock
aaa
ret
xor
aam
lds
loope
lret
xor
iret
test
sbb
fmuls
outsb
test
not
mov
xor
push
repnz
sarl
dec
jo
mov
test
push
dec
push
repz
enter
sbb
inc
inc
inc
lds
lods
and
mov
decb
fldt
sub
js
xchg
insl
xchg
push
enter
adc
inc
add
jbe
cmc
or
mov
les
cmp
push
movl
int
or
mov
dec
push
in
mov
nop
loope
push
mov
iret
insl
sub
decl
dec
sbb
mov
xor
jo
ror
cmp
pop
mov
shll
inc
and
adc
outsb
cmpsb
pop
jmp
sub
push
popf
sbb
adc
jb
sub
add
je
shlb
les
sub
mov
mov
add
scas
nop
mov
shrl
pop
mov
inc
mov
pop
or
addr16
loop
mov
xor
pop
pop
mov
and
add
mov
push
mov
dec
mov
int
mov
cmp
pop
dec
mov
lret
fld
ret
icebp
lock
adc
lea
add
add
call
outsl
int
out
int
mov
sbb
mov
push
adc
cli
jecxz
cmc
les
mov
push
cmpl
ror
sbb
push
pusha
outsb
popf
mov
pop
xchg
sbb
popf
pop
mov
out
mov
mov
ljmp
fnsave
pusha
enter
sub
and
mov
outsl
sbb
pusha
loopne
xchg
in
adc
stos
test
jge
mov
inc
mov
jo
sahf
stc
mov
dec
shlb
xor
cmpsb
lock
xchg
cld
leave
jg
cmpsl
insb
xchg
push
and
andl
sbb
mov
stc
movsl
push
mov
jp
sbb
push
int
fiaddl
add
lcall
nop
adc
int
dec
arpl
sbb
or
call
xchg
in
lret
stc
adc
mov
js
xlat
movsl
push
xor
pop
loopne
repnz
adc
mov
movsb
cmp
aas
daa
leave
rolb
xchg
pusha
loopne
scas
sub
push
jb
cmp
cmpl
jle
and
sub
aas
insb
addr16
xchg
out
mov
call
xchg
mov
outsb
pusha
cld
sub
test
jb
test
lods
xlat
inc
or
jbe
jg
fcoml
dec
push
sti
enter
in
ljmp
push
fwait
adc
jmp
loope
test
pop
or
mov
outsl
mov
jne
je
out
mov
xor
aam
xchg
push
inc
popa
adc
fbld
outsl
les
push
cld
sbb
pop
or
pop
insb
inc
push
int
clc
pop
mov
cmpsb
cmpsb
jne
lret
cwtl
lock
stc
arpl
jmp
xor
test
or
movb
push
fadds
pop
outsb
push
adc
inc
pushf
xchg
sti
xchg
add
aas
popa
jg
xor
test
or
jl
xchg
jne
xchg
push
mov
jmp
lret
pop
push
push
loop
mov
stc
jnp
mov
sub
and
or
adc
clc
xor
fdivl
pop
imul
mov
int
mov
fbstp
jns
adc
pushf
jo
jl
mov
mov
push
das
loopne
jmp
out
into
dec
fisubrs
test
mov
inc
mov
push
xchg
dec
out
or
cltd
cwtl
sbb
push
adc
ja
jmp
mov
mov
mov
cmp
jge
mov
jg
cwtl
pop
xor
push
mov
sub
inc
ljmp
mov
jle
scas
pusha
rolb
dec
scas
inc
xor
cli
mov
push
fnstcw
xchg
jo
insl
ret
cmp
jle
gs
inc
mov
xchg
cs
mov
sbb
inc
aam
insb
jb
add
das
or
mov
in
xlat
mov
js
movsb
sbb
sub
sub
outsb
setle
add
cmp
inc
out
adc
ret
mov
arpl
icebp
in
jecxz
sahf
sarl
add
sbb
fidivs
pop
dec
push
mov
shrb
lcall
push
in
mov
js
aam
stos
and
loope
sub
aam
xor
ret
sbb
sbb
or
push
cmp
push
cmpsl
popf
ret
mov
mov
in
xchg
push
stc
fidivs
cmp
popf
jge
pop
sbb
adc
addr16
push
sbb
jb
test
imul
imul
add
or
add
loop
loope
sub
pop
popa
pop
cld
push
in
dec
mov
mov
pop
push
fcomp
mov
iret
imul
jmp
gs
inc
pop
xchg
ds
cmp
jl
out
ficoml
cwtl
xlat
adc
xchg
inc
repnz
mov
out
pop
mov
bound
mov
in
outsb
sarl
push
mov
dec
pushl
daa
cmc
stos
out
ss
fiadds
ret
imul
push
clc
cmp
nop
mov
adc
mov
xchg
inc
mov
jg
loope
scas
test
fidivs
mov
cli
aaa
imul
fwait
xchg
mov
loop
cmpsb
fnsave
mov
sub
insl
push
jne
mov
std
icebp
loopne
dec
sarb
mov
daa
pop
nop
and
jge
rcl
mov
mulb
pop
int
inc
lret
add
mov
jle
cmp
lcall
mov
mov
insb
xchg
mov
addr16
popa
loop
jns
mov
adc
pop
cmp
cmp
mov
sbb
leave
lods
cld
pushf
inc
in
cmp
cmp
enter
and
mov
adc
push
or
rcll
lea
jnp
hlt
mov
in
fyl2x
pop
push
sub
mov
sub
test
imul
and
sub
or
dec
push
xor
les
pop
xor
sub
in
cltd
mov
dec
and
std
or
nop
ljmp
leave
rcrb
pushf
popa
push
dec
in
cmp
xchg
int3
push
bound
push
addl
sbb
push
loope
pushf
pop
arpl
or
sahf
and
xchg
in
repnz
aam
mov
cmp
adc
testb
mov
inc
add
lds
popa
mov
pop
in
in
dec
lods
outsl
inc
or
clc
add
stos
inc
dec
rclb
enter
lods
mov
aam
adc
xor
xor
rorl
adc
bsf
dec
cmpsl
popa
mov
add
lods
adc
das
dec
into
filds
mov
das
jl
stos
iret
int3
ljmp
push
pop
sbb
jp
xchg
ffreep
sbb
dec
in
mov
loopne
mov
add
cmp
into
pop
shl
insl
and
es
sar
xor
mov
ja
sbb
enter
add
ss
and
adcl
dec
dec
jg
dec
icebp
jbe
cmp
daa
mov
sub
cli
in
pop
or
jnp
xchg
cltd
ds
push
sub
xchg
fs
sarb
mov
fmuls
outsl
inc
out
jmp
xchg
lods
daa
push
pop
sub
pop
rcll
dec
in
sbb
inc
fsts
mov
scas
sub
or
insb
stos
ja
add
test
lahf
jnp
push
jle
lods
mov
ja
xor
popa
andl
xor
repnz
stos
or
adc
mov
das
xor
pop
int
adc
or
jge
add
data16
sti
sbb
inc
inc
jecxz
jae
adcl
jae
lahf
push
inc
push
xor
sub
dec
mov
jmp
lret
xlat
shll
inc
add
in
in
add
aaa
hlt
lods
mov
sub
push
hlt
movsl
xchg
or
fisubl
dec
mov
mov
jp
pop
mov
inc
mov
repnz
out
mov
mov
pop
popa
and
push
xchg
mov
mov
inc
jno
repz
cld
mulb
add
mov
dec
or
cmpsl
insl
or
mov
rcll
jo
in
pop
or
sar
adc
lcall
lods
icebp
pop
jne
and
xor
fisttpl
sbb
xlat
insl
ljmp
jnp
push
and
pop
loop
sbb
mov
sub
mov
mov
mov
cmp
std
imul
cmp
push
je
adc
xor
and
lret
arpl
adc
loopne
out
and
test
arpl
push
cmp
negb
xor
ljmp
mov
adc
adc
repz
or
repz
stos
adc
pop
pop
ss
out
insb
add
xor
inc
mull
lods
insb
rorb
mov
adc
xchg
lret
push
jl
cli
adc
bound
les
out
aad
mov
inc
cmp
pop
and
push
fwait
jns
lcall
xor
mov
popf
jle
cmc
lds
or
and
insb
outsb
push
xchg
fwait
gs
fbld
mov
fcompl
test
inc
xchg
les
pop
or
aam
aaa
out
insl
push
pop
sbb
mov
pop
mov
cmc
gs
pushf
sbb
cmpsl
xchg
aad
lds
repnz
or
stos
add
dec
push
push
int3
test
jmp
insb
push
cltd
icebp
mov
sahf
into
outsl
call
std
pop
sbb
loopne
or
jb
add
ja
add
out
leave
ss
mov
dec
dec
mov
popa
leave
push
jns
mov
mov
lret
lds
xchg
or
adc
dec
add
test
or
adc
pop
mov
xor
movsl
mov
cmpsb
cld
das
cmp
insb
add
shl
ret
icebp
fimull
fcoml
sbb
nop
push
popa
in
xor
out
add
mov
xor
sub
test
xchg
sbb
lock
shrb
lahf
push
or
mov
imul
out
mov
andb
sbb
cs
mov
sub
daa
mov
or
xchg
in
inc
pushf
xchg
mov
xchg
jae
mov
rcrl
cmp
add
pop
mov
cs
mov
mov
aam
adcb
ja
fidivrs
pop
dec
xchg
loope
cmp
mov
in
jl
sbb
stc
nop
cwtl
sbb
mov
pop
cmp
cmp
push
mov
jb
ss
outsb
jmp
into
es
xchg
mov
into
test
pop
lret
or
or
jnp
repz
aas
jne,pn
icebp
xchg
cmc
xchg
imul
mov
movsb
loop
aaa
lret
nop
or
push
jbe
dec
dec
pop
cmp
into
sub
push
sbb
pop
popa
insl
cmc
mov
xchg
push
insl
in
mov
pop
add
jne
sahf
xchg
addr16
pop
aam
xor
cmp
jmp
dec
dec
sbb
hlt
nop
icebp
jne
cmp
sahf
mov
xor
or
jb
pop
int
ds
rol
add
dec
rolb
or
shl
in
xor
cmp
in
push
cmc
gs
jp
pop
cmpsb
test
shl
in
pop
add
add
cltd
sbb
js
mov
inc
cwtl
push
push
nop
inc
data16
adc
insb
repnz
mov
jb
cli
cmp
adc
mov
mov
out
mov
sbb
imul
push
push
repnz
pushl
shlb
pop
daa
addl
loopne
incb
scas
outsl
sbb
mov
jecxz
mov
lods
dec
cmp
insb
inc
gs
mov
pusha
arpl
fldcw
out
xor
cld
push
popa
stos
shll
push
pushf
jecxz
lods
fistpl
pop
or
aaa
inc
rcll
je
and
out
pop
popa
dec
pop
lds
mov
data16
mov
cs
adc
jge
sub
cs
stos
jo
xlat
dec
sbb
jns
in
ds
pop
insb
mov
adc
hlt
fmul
stos
outsb
sub
stc
push
or
xchg
sarb
jb
push
lods
aam
or
adc
mov
cwtl
scas
mov
mov
pop
lcall
inc
inc
xor
aam
adc
and
xchg
iret
mov
in
hlt
out
shrb
iret
cmp
icebp
in
sub
or
xchg
pop
dec
rclb
insl
push
jg
dec
mov
ret
mov
or
pop
sub
jg
jmp
ljmp
int3
sub
add
dec
cwtl
or
das
ss
sbb
mov
dec
push
inc
popa
into
pop
mov
fistl
jecxz
add
sbb
xchg
jle
mov
push
rclb
addl
mov
lds
sarl
in
pop
adc
icebp
cld
cmpsb
adc
cmp
mov
lock
out
shl
mov
pop
ljmp
mov
stos
leave
inc
inc
movsl
mov
xchg
stc
jne
pop
and
and
movsw
xor
pushf
aad
daa
jl
int3
shrl
mov
sub
adc
pop
jp
push
mov
lcall
cmpsl
xchg
andb
cmc
adc
inc
dec
imul
fisttps
mov
mov
mov
enter
pop
call
jns
mov
sbb
sub
mov
mov
mov
jge
mov
sub
sbb
dec
sbb
mov
std
lea
adc
push
fstps
repz
pop
and
iret
mov
inc
push
dec
sub
inc
mov
add
fildll
or
pop
ds
imul
push
mov
sbb
pop
lea
fildll
push
insl
sub
popa
jne
out
aad
cmp
repz
dec
arpl
out
and
dec
fidivrs
call
pop
lds
pop
mov
or
and
xor
inc
jns
dec
or
dec
pop
sbb
out
insb
add
cwtl
xchg
xor
in
call
add
sub
popl
aaa
pop
aaa
loop
mov
or
loopne
dec
add
pop
mov
ret
inc
and
sti
mov
fimuls
fstl
popf
int3
cmp
push
xchg
push
rcll
outsb
or
sbb
aaa
je
mov
sahf
and
in
out
add
sbb
sub
mov
stos
or
das
aad
mov
mov
sub
hlt
or
xchg
pusha
jnp
jne
cmp
shr
or
popf
nop
mov
jmp
scas
xchg
sbb
sbb
mov
movsb
sub
sub
mov
ja
cld
leave
mov
push
adc
insb
jns
add
loope
test
addr16
xchg
cli
je,pt
push
cmpsl
daa
andl
push
in
stc
out
mov
adc
jae
arpl
fdivs
mov
movsl
mov
xchg
aad
mov
xchg
push
inc
and
cltd
push
into
loope
jp
mov
je
cld
sub
mov
cmp
scas
mov
js
push
lea
push
xchg
sete
sub
in
xchg
inc
dec
lods
mov
sahf
xchg
lret
inc
jns
jmp
and
sub
and
stos
add
adc
das
sbb
push
out
cld
mov
ja
jo
repz
add
lret
jne
or
dec
cli
inc
and
mov
pop
cli
dec
jp
lods
jge
cmp
jp
stos
fucomp
sub
fnstenv
add
and
mov
iret
clc
jg
idiv
ret
insb
je
jmp
test
push
les
dec
das
sbb
outsl
imul
inc
pusha
mov
pop
push
inc
push
mov
sbb
out
jb
jp
testl
adc
sti
adcb
leave
add
pop
out
out
loope
stos
adc
or
mov
xchg
call
lods
rcrl
negb
movsl
ret
pop
pop
int
xchg
dec
pop
pop
push
stos
push
pusha
or
pop
or
enter
adc
xchg
mov
arpl
mov
add
adc
adc
imul
aam
sub
lods
sub
push
test
xchg
mov
dec
jp
imul
and
shr
les
mov
cld
and
pop
jnp
int
jo
sbb
adc
add
int3
test
repnz
sar
pusha
add
jmp
fst
sbb
mov
subl
lds
sti
negl
sub
aas
pop
xchg
mov
sbb
and
mov
jne
sbb
sbb
popa
jae
pusha
insb
add
daa
imul
std
in
cmp
nopl
es
ss
xor
les
outsb
bound
pop
frstor
mov
rcrl
mov
add
popw
bound
sbb
out
sar
cmp
lret
jge
push
lods
imul
and
rol
push
jns
cmp
or
jae
dec
mov
das
pop
mov
push
adc
jl
or
fidivrl
cld
add
fadds
cmpsl
lock
adc
push
outsl
stos
adc
inc
fstpt
pusha
out
out
xchg
jns
ret
fisttps
movsl
pushf
cld
ror
decb
js
mov
rcll
push
push
shrl
pmulhuw
fwait
shrl
add
ss
mov
mov
shrl
or
mov
sbb
in
subl
add
push
jl
jb
ljmp
lret
mov
xor
ret
das
je
or
add
jbe
out
mov
and
adc
mov
mov
xchg
pop
xchg
mov
push
les
shll
push
outsb
nop
stos
mov
cwtl
jecxz
mov
mov
pop
pushf
in
and
jecxz
sbb
test
mov
negl
mov
aas
or
lock
or
xchg
stos
push
test
pop
lods
imul
jnp
sar
mov
iret
shr
cmp
fmull
mov
and
loop
nop
add
orb
test
pop
es
pop
xchg
push
jg
out
dec
adc
push
scas
sub
test
insl
jo
fists
add
scas
ja
jg
inc
fiadds
lds
xor
pop
pusha
or
icebp
aas
cltd
dec
jmp
out
outsb
jecxz
xchg
jne
stos
sbb
sbbb
into
mov
jl
outsb
lock
or
mov
jb
jbe
insl
loopne
daa
sahf
mov
test
add
enter
outsl
cmp
mov
out
int
sbb
push
es
xchg
pop
xchg
sbb
xchg
arpl
aas
mov
ret
inc
and
mov
and
mov
mov
adc
cmp
xlat
sbb
push
jb
xor
pop
repz
pop
lret
testb
mov
xchg
loopne
jne
popa
push
jle
jge
lods
cmp
xchg
sub
adc
ds
lcall
fcmovbe
mov
xor
int3
fdivs
hlt
jg
insl
mov
jnp
jmp
pusha
xor
xchg
inc
mov
cmp
rol
ss
sbb
jmp
nop
dec
in
ja
imul
add
push
and
iret
dec
je
push
pop
xor
mov
adc
loope
pop
sbb
push
mov
andb
and
fistl
cld
rclb
xlat
lret
cmpsb
mov
inc
fldenv
sub
cmp
cmpb
and
cwtl
xor
add
sub
test
push
cld
dec
mov
sub
or
dec
test
sbb
mov
xlat
adc
xchg
mull
pushf
xchg
mov
dec
adc
dec
mov
aas
xchg
stos
sub
and
jl
mov
lret
push
out
pop
dec
shr
mov
hlt
cmpsl
call
mov
in
add
addr16
mov
sbb
xchg
add
aad
orl
push
lret
mov
mov
mov
dec
nop
push
xchg
test
mov
inc
dec
insb
ja
icebp
out
outsl
inc
lods
jbe
scas
imul
cmp
jg
pop
xchg
out
push
pop
fs
ror
dec
cmc
mov
pop
sub
daa
enter
mov
xor
sbbb
jo
in
lret
orl
inc
push
sahf
fidivrs
test
jl
xor
inc
adc
jge
adc
scas
pop
jno
mov
bound
jge
pop
jb
lds
add
rolb
mov
sbb
dec
and
mov
imul
and
dec
dec
mov
dec
xor
loop
jb
je
fstl
call
fcompl
mov
std
rol
mov
lods
scas
lds
in
mov
mov
lock
lret
lret
mov
cs
or
ljmp
and
lds
mov
push
inc
xchg
fdivl
movsb
ficompl
sbb
cmp
inc
fwait
jg
aaa
cmp
pop
and
int
sub
repz
fildl
push
into
clc
mov
and
stos
popf
mov
mov
xlat
fs
aam
and
mov
nop
xor
sub
pop
xor
xlat
aaa
mov
aad
pushl
outsb
push
fidivrs
aas
mov
adc
inc
loopne
jge
jno
aad
sub
and
xor
fcomps
fst
inc
inc
sbb
xor
sbb
jne
ja
jne
inc
pop
cmp
mov
adcl
xchg
xchg
push
ja
repz
fidivrs
push
or
and
jg
push
xchg
aam
enter
add
inc
mov
scas
mov
lcall
lock
mov
xorl
mov
cmp
mov
adc
hlt
icebp
bound
enter
js
inc
int3
loop
fs
adc
cmp
dec
sub
ljmp
test
push
aam
daa
xor
sbb
in
ja
test
mov
adc
push
bound
xor
xor
cmp
pusha
push
repz
enter
inc
fistpl
sub
xlat
lret
arpl
adc
mov
cmpsb
shl
sbb
out
mov
in
sub
in
mov
rcrb
addr16
push
add
add
mov
mov
push
push
mov
or
cmpsl
mov
mov
and
mov
andl
fcmovnu
jge
mov
xchg
leave
and
adc
jecxz
push
insb
cmp
push
lahf
pop
lret
negb
icebp
fs
in
jge
dec
std
les
out
mov
movsl
cmp
cmpsw
sbb
pusha
inc
jmp
insb
test
les
or
jb
push
fildll
dec
sarb
inc
insb
cmp
scas
movsb
sub
inc
loop
popl
sbb
sarl
in
loop
adc
xor
je
jb
push
mov
sbb
loop
sti
push
jecxz
add
mov
andb
mov
orb
or
or
push
mov
and
pop
cld
push
fmulp
and
mov
pop
leave
and
mov
jb
or
adc
jne
sbb
das
imul
lret
bound
daa
lcall
and
pop
lock
sbb
aas
push
lods
andb
test
mov
pop
lods
mov
xchg
aaa
pop
jg
sub
jg
fmull
fcoms
pop
add
mov
iret
daa
push
pop
ficomps
cmp
fsubrs
push
inc
or
aad
mov
addr16
sub
int3
mov
mov
push
adc
or
sbb
lcall
push
lds
fistl
shrl
xor
mov
scas
jecxz
cmp
sbb
imul
dec
adc
pop
sbb
dec
and
dec
pusha
pop
aaa
dec
rcrl
or
ss
pop
sub
pop
fwait
or
pop
pushf
push
sub
sti
int3
mov
movsl
mov
mov
xchg
mov
cmpsb
push
ror
insb
or
xor
push
add
pushf
in
xchg
lret
mov
mov
jbe
add
daa
mov
in
fwait
xor
adc
test
inc
xlat
pop
int3
mov
cwtl
out
js
cmp
pop
lret
xor
sub
outsl
in
fwait
mov
rcr
std
mov
sub
adc
sub
cwtl
or
mov
rcrb
ficomps
jo
mov
add
cs
cmc
in
fisttpl
outsl
ja
push
inc
in
es
sub
test
loope
push
mov
xchg
mov
jg
jno
stc
sahf
aaa
sub
mov
push
lcall
addl
xor
daa
push
jnp
mov
loope
mov
push
mov
faddp
lds
daa
jecxz
lret
stos
iret
or
xlat
data16
imull
adc
in
xor
xchg
jb
aas
add
repnz
pop
pop
repz
adc
jbe
pushf
mov
ja
xor
xchg
mov
pop
or
cmp
cltd
mov
ret
loope
push
fadd
dec
outsb
mov
xor
mov
xchg
sbb
cmp
es
xchg
fsts
dec
push
mov
xor
add
or
gs
push
inc
test
push
lea
push
add
rcll
lcall
and
jbe
aaa
dec
mov
xchg
mov
cwtl
loopne
ret
adc
sub
clc
fwait
bnd
mov
idivb
mov
adc
dec
popf
test
movsl
xor
cmc
nop
cmp
out
jo
imul
mov
mov
adc
inc
lret
mov
mov
xchg
bound
cmc
add
xor
shll
jbe
inc
mov
in
jae
outsb
lahf
pop
sub
mov
mov
into
popa
mov
mov
mov
rclb
outsb
out
xchg
sahf
ret
cmp
xor
adc
std
push
mov
mov
rsm
mov
psllq
adc
fwait
std
mov
loopne
fwait
mov
shrb
xchg
testl
sbb
jmp
push
jbe
push
aaa
popf
inc
fs
xlat
ret
jae
xchg
mov
call
dec
pop
mov
and
xor
repnz
mov
mov
sbb
outsl
adc
dec
dec
fwait
cld
leave
and
sbb
pop
andl
dec
cmp
sub
or
and
ljmp
and
adc
les
and
jns
or
mov
inc
loope
inc
sub
cmp
cli
push
cmp
mov
test
addr16
pusha
repnz
stos
mov
xlat
scas
pop
inc
push
bound
sbb
dec
mov
pop
fisttps
insb
popf
out
js
jbe
bswap
xor
push
lods
outsl
ret
inc
js
mov
xchg
out
or
dec
jg
mov
cs
call
jmp
pop
movsl
inc
fsubrs
outsl
cwtl
mov
lock
into
jle
dec
es
iret
popa
pusha
mov
xchg
adc
mov
xor
das
push
pop
mull
and
push
sti
fildll
hlt
or
mov
nop
mov
mov
push
xor
push
lret
cmp
cmpsb
repz
shlb
in
dec
hlt
xchg
out
xchg
shrb
inc
mov
insb
fcoms
lcall
das
pop
jp
push
xchg
mov
imul
es
mov
xor
mov
lods
xchg
scas
mov
ja
stos
testl
xorps
cwtl
fildl
movsl
sahf
jge
jge
fxch
shrb
jae
xchg
adc
loope
out
cmp
jle
dec
ds
scas
push
ljmp
xchg
inc
push
fs
rclb
iret
bound
dec
out
popf
pop
mul
mov
dec
in
pop
inc
jmp
or
shl
sbb
jl
pop
jbe
mul
cs
sub
sbb
xchg
pop
push
loopne
aam
pop
cwtl
arpl
or
mov
cmpsl
pop
addr16
test
mov
dec
repz
daa
iret
pop
or
push
das
xchg
daa
xor
mov
je
imul
xchg
push
cmpsl
cltd
mov
push
jb
jae
aaa
jns
xchg
sub
mov
daa
stos
rcr
fsub
xor
add
ja
mov
dec
xlat
sbb
jo
aad
mov
pop
cmp
in
mov
xor
push
adc
cmp
lret
pusha
pop
and
or
push
mov
pop
cmpl
stos
ret
test
repz
xchg
and
mov
cmp
insb
fucom
lods
insl
data16
jl
push
lret
dec
mov
fidivl
insl
sub
imul
xchg
jmp
cmc
in
mov
popf
push
pop
or
xor
jmp
sbb
stc
or
xchg
and
enter
adc
leave
sbb
sub
subl
mov
fcomps
mov
jle
add
mov
jno
imul
add
inc
stos
inc
pop
sbb
mov
mov
or
xor
lcall
xchg
dec
adc
jb
fisttpl
jne
push
lods
mov
fbstp
sahf
and
adc
inc
loope
add
ficompl
inc
add
insl
sub
fcmovu
mov
sub
cltd
cmc
jl
sub
dec
xchg
xor
mov
or
pop
push
dec
movntq
fcomps
stos
fwait
icebp
cmpsl
and
adc
push
fs
mov
std
pop
jns
sub
out
xchg
sub
lods
nop
cmp
pop
xor
sbb
push
dec
mov
xlat
jne
pop
movsl
sub
xor
fs
int
xchg
js
sub
jbe
push
jne
repz
jl
outsb
test
rsqrtps
sti
cmp
mov
lea
sarb
push
sbb
cmp
xchg
mov
xor
mov
lods
mov
dec
mov
add
mov
in
in
lods
aam
or
bound
mov
data16
or
outsb
sbb
addr16
or
or
addr16
leave
imulb
mov
mov
jle
push
jmp
fsubl
mov
lods
or
mov
mov
fisubl
fidivrs
xor
xchg
in
adc
sbb
mov
lahf
push
push
mov
loop
shlb
cmpsb
roll
push
div
gs
and
nop
repnz
dec
fildl
mov
aam
sbb
and
out
dec
scas
test
inc
lret
sub
int3
adc
aas
inc
jns
add
fwait
fs
push
mov
jnp
or
hlt
cmp
clc
xchg
rolb
mov
test
nop
loop
mov
cltd
daa
push
lods
cs
sbb
xchg
pop
stos
int
jle
sbb
push
mov
and
push
lock
inc
inc
mov
jae
mov
or
dec
leave
add
pop
in
push
and
stos
jbe
mov
mov
fldenv
sbb
jne
xchg
int
fs
test
nop
add
imul
xor
sbb
insb
test
or
insl
lea
dec
mov
sub
push
pop
mov
cltd
shlb
cmpsb
popf
dec
call
int3
inc
add
int3
pop
insl
inc
xchg
sub
cwtl
pop
xor
imul
insb
lea
mov
mov
push
add
orl
sti
clc
fs
ffreep
mov
pop
mov
int
add
sub
xor
xor
ret
xchg
jbe
mov
mov
mov
adc
rcl
leave
add
fisubl
inc
test
mov
icebp
cmp
jecxz
lds
sbb
imull
push
cli
add
dec
repz
mov
loope
adcl
cwtl
cmp
stos
push
loopne
or
inc
adcb
dec
jp
ja
xor
cmpsb
data16
in
inc
mov
rorl
sbb
popa
sub
mov
xchg
lea
sbb
pop
add
push
stos
dec
cli
je
sarb
mov
test
into
mov
insb
xchg
pop
jmp
insb
out
loope
insl
loopne
adc
dec
outsl
clc
in
mov
popf
xchg
push
sbb
xchg
sbb
fdiv
insl
push
mov
test
dec
sarl
jae
lret
pop
cmc
ss
out
test
adc
push
int3
imul
cmp
mov
test
pop
jne
inc
push
sub
es
popf
or
xchg
arpl
pop
stc
lahf
xor
push
cltd
popa
es
sti
bound
xlat
lock
loop
push
jae
mov
jns
dec
cmp
add
dec
xlat
sbb
jo
jge
mov
cmp
push
and
mov
mov
jae
or
in
lods
jb
jne
cmp
in
dec
aaa
stc
ficoms
push
xor
loope
repnz
push
sbb
aad
cmp
mov
js
sbb
push
pop
or
je
cmp
sub
test
jmp
add
test
leave
movsl
jo
inc
ss
ja
in
push
xor
or
pop
xorl
in
xlat
inc
push
nop
mov
adc
jmp
data16
xor
fmulp
jno
int
inc
or
mov
pop
rorb
daa
pop
das
int
dec
mov
or
lret
lret
pusha
sub
mov
lcall
scas
push
lcall
and
xchg
push
push
add
sub
mov
add
sbb
stos
js
xchg
cmpsl
aas
sub
xchg
and
cltd
inc
mov
or
mov
xlat
scas
mov
imul
xlat
cld
fnstenv
sbb
cmp
and
sub
js
jmp
imul
cmp
sarl
fidivs
fidivrl
ljmp
mov
das
dec
hlt
fidivrl
or
push
dec
jecxz
jge
inc
out
dec
clc
xchg
push
mov
lahf
xchg
push
cs
ja
pop
xor
mov
sbb
aas
pop
ret
jge
mov
xor
sbb
hlt
add
dec
into
mov
scas
add
insl
repnz
or
loopne
push
lods
enter
or
push
dec
push
sahf
cmpsb
stc
pop
pop
pop
inc
out
mov
in
insb
xor
lock
dec
loope
loopne
and
cltd
jnp
or
jns
fdivp
mov
inc
leave
cmpsl
cs
adc
cs
data16
add
ficompl
sarl
pop
pusha
scas
sbbb
xchg
loop
scas
cli
add
mov
add
xor
dec
mov
imul
cmc
add
andl
aad
ja
xor
inc
aaa
incl
pop
cmp
dec
repnz
fldl2t
lahf
pop
jp
sbb
in
jae
std
inc
inc
add
sahf
cmp
hlt
pop
outsl
loopne
fs
out
nop
rcrl
test
aad
sbb
ss
and
aad
subb
leave
push
movsl
lock
cltd
add
fbstp
outsb
notl
sbb
pop
cmp
test
out
lret
fisttpl
inc
mov
fwait
loop
push
inc
lcall
notl
push
xchg
mov
adc
mov
mov
dec
dec
cmc
and
cmp
ror
dec
fs
das
data16
push
jecxz
int3
xchg
les
outsb
mov
ja
loope
outsb
xchg
cmp
jae
push
pushf
sub
or
into
jge
hlt
pop
data16
jno
pop
sbbl
mov
xor
gs
pop
or
sub
cmp
mov
enter
hlt
fistpll
dec
mov
js
mov
sbb
or
xchg
test
sbb
dec
scas
out
inc
push
rcll
xchg
xor
outsb
sarb
mov
ficoms
jmp
bound
mov
jo
and
pop
fists
adc
xor
test
cmpb
mov
ds
cmp
imul
sbb
mov
lds
iret
lcall
imul
fcoml
sti
test
push
filds
loope
sbb
mov
and
push
or
divb
or
js
lret
add
adc
jle,pn
and
inc
pop
jmp
mov
mov
xchg
dec
sub
adc
call
jg
jge
push
cmp
cwtl
out
or
pop
push
aas
lods
sbb
in
lret
adc
fdivs
dec
dec
sub
loop
jge
mov
mov
push
xor
addr16
push
push
sub
idivl
cmc
jno
push
shll
pop
sub
dec
inc
fwait
xor
dec
jns
sub
ss
push
pop
int
mov
icebp
or
mov
push
and
add
aad
xor
sbb
add
or
sahf
shll
les
in
bound
test
pushf
mov
adc
xchg
mov
mov
lods
movsl
pop
mov
dec
and
jno
aam
out
sub
cmpsb
dec
adc
or
pop
xchg
lret
in
pop
out
in
aad
lret
adc
stc
imul
out
inc
mov
sahf
sub
ljmp
lock
lds
push
pop
push
mov
mov
inc
jl
add
add
frstor
push
and
test
dec
aaa
sub
fisubrs
jb
push
push
mov
cmp
pop
repz
fwait
xor
or
sub
es
or
enter
pop
ja
pop
mov
dec
push
ret
push
lock
addr16
gs
test
xorb
imul
xlat
movb
sub
ret
ret
out
push
xor
pop
lds
add
inc
inc
mov
shl
mov
js
jno
shl
sub
jl
and
jmp
sahf
add
dec
cwtl
lret
minps
int
xor
pop
push
sub
mov
fsubrs
mov
jmp
jmp
iret
or
pmulhw
inc
mov
jmp
pop
pop
cmp
or
inc
cmp
mov
mov
mov
cli
mov
icebp
test
and
lds
and
dec
push
add
ds
out
mov
sbbl
aad
jnp
lcall
cmp
addl
xor
sub
in
mov
dec
xor
xor
jbe
jmp
sub
repz
adc
xor
icebp
fisttpll
mov
push
jg
push
push
sbb
and
sbb
pop
mov
or
xlat
fcmovnbe
test
out
enter
repnz
dec
lods
cli
add
adcb
cmp
jns
in
push
sub
add
inc
fidivrs
lret
lcall
or
xchg
popf
mov
ret
xor
insl
int3
mov
outsl
lock
pop
jo
sub
cwtl
cmp
sub
dec
clc
mov
mov
lret
cmp
and
sbbl
mov
cltd
test
dec
loopne
fistpl
xchg
and
sub
out
in
mov
fs
or
aas
loop
push
sub
cwtl
out
add
jne
adc
dec
fs
imul
add
mov
je
jmp
push
push
xchg
cmp
pop
mov
popa
jne
sbb
dec
pop
inc
repz
cmp
cmpsl
xchg
add
add
cmp
xlat
popa
xor
int3
gs
push
add
dec
cmp
outsl
add
jo
adc
rorb
xor
std
popf
dec
inc
sub
repnz
das
ja
dec
mov
xor
pop
pop
pop
jnp
xor
xor
dec
sbb
enter
call
insl
add
push
gs
aam
cmp
push
mov
xchg
pop
jne
mov
lods
mov
sahf
and
inc
and
xor
xchg
aam
enter
scas
sub
push
fadds
and
es
insb
adc
js
jp
cmp
inc
and
pop
sbb
xor
jp
pop
xchg
repz
mov
push
je
jmp
or
cmc
sub
stos
add
xor
sub
pop
add
outsb
cmpsb
movsl
xor
dec
push
jb
or
lods
dec
push
or
pop
push
mov
pop
inc
sub
jno
das
pop
cmpsl
lds
lea
nop
dec
inc
jl
rorl
lret
and
lahf
push
test
lods
in
orb
sahf
and
mov
divb
sbb
mov
mov
adc
pop
in
outsl
repz
sbb
into
inc
lods
mov
shrl
ret
pushf
decb
psubusw
add
fists
xor
js
lahf
xchg
sbb
push
and
add
sub
in
ret
stos
int3
fldt
pop
mov
shll
xchg
sbb
jno
and
incl
jne
icebp
filds
test
sbb
mov
sbb
jmp
fs
jns
and
cmp
lahf
cltd
sub
sub
fisubs
in
add
inc
pushf
mov
push
mov
adc
mov
orb
cmp
insb
cmc
rorl
js
cmc
jnp
insb
cmp
and
or
ss
adc
cmp
and
mulb
pushf
xchg
mov
loopne
and
arpl
jg
out
sbb
pop
cmp
arpl
arpl
and
movsl
in
xchg
and
in
mov
mov
push
nop
test
sub
pusha
leave
loope
ret
inc
movsb
scas
inc
push
clc
dec
das
notb
cmp
pop
mov
jns
repnz
add
dec
loope
cs
lcall
je
dec
sub
les
push
jge
cmp
sbb
pop
xchg
cmp
mov
out
adc
pop
repz
push
dec
jmp
cmp
cmp
lods
push
test
cmp
push
data16
and
sub
pushf
xor
inc
aaa
mov
loopne
rcl
mov
mov
ficompl
popf
gs
adc
ljmp
dec
adc
inc
aas
jg
cmpsl
and
test
xchg
dec
stos
sbb
sbb
cli
pusha
pop
lahf
lods
lret
mov
hlt
testl
or
jle
mov
jp
adc
cmp
xchg
je
sub
push
mov
push
xor
pop
add
test
add
dec
fcmovu
pop
pop
pusha
mov
pop
mov
call
and
xor
and
arpl
es
dec
loop
sub
xor
sub
push
lret
int3
repnz
ss
lret
cs
in
jb
sbb
aad
lret
mov
int
and
jp
mov
cmp
xlat
inc
nop
inc
jb
dec
das
lock
sub
in
fstpl
pop
imul
std
fwait
pop
mov
repz
dec
dec
insl
iret
popa
push
bound
add
sarb
mov
les
test
out
sub
ss
stc
loope
and
inc
aas
add
int3
jb
inc
push
nop
lods
sarl
outsl
adc
lret
int
jno
push
and
addr16
push
dec
jl
jns
in
jg
pop
mov
xor
icebp
repnz
jecxz
lret
test
ret
lret
add
xchg
pop
ficoml
cs
xchg
sub
inc
mov
scas
inc
jne
adc
fistpl
fcompl
scas
sbbl
loope
pop
mov
ret
or
jbe
cli
in
adc
inc
dec
dec
lods
fisubl
xor
sub
sub
pop
mov
pushf
xorl
orl
cmp
clc
sbb
push
mov
std
scas
sti
pop
scas
ss
inc
popa
push
notb
sbb
inc
lahf
jl
and
mov
xor
movsl
jmp
and
mov
mov
xchg
movsb
add
push
les
push
xchg
dec
insl
in
push
sarb
add
push
mov
adc
aad
lock
movb
push
xchg
pop
xchg
dec
add
cmp
lock
mov
jo
leave
mov
cltd
lret
loope
dec
loopne
pop
cmc
xor
jmp
daa
mov
out
add
insl
adc
mov
std
lds
adc
dec
mov
xor
daa
in
mov
bound
scas
mov
imul
mov
add
loope
nop
inc
push
and
subb
lods
fstpt
repz
hlt
push
pusha
in
mov
sahf
cmp
shl
sub
or
cmpsb
test
xchg
in
mov
mov
push
mov
jo
rol
cld
push
dec
xor
push
mov
in
pop
adc
adc
add
fistpl
jo
mov
call
mov
pop
stos
call
jb
es
and
push
notl
cld
mov
and
mov
pop
adcb
fimuls
pop
int
pop
push
repz
inc
ljmp
jecxz
xchg
pop
ret
sub
cwtl
xor
repz
mov
test
jnp
and
loop
xchg
cmp
push
xchg
sbb
push
xor
mov
xchg
jns
shll
out
sti
cmp
pop
lds
fsubrl
add
mov
jno
xor
xor
sbb
mov
cltd
out
insl
jae
cs
pop
jge
add
add
fnsave
add
jecxz
imul
shll
int
arpl
cmc
jg
jmp
movsb
jns
dec
xor
or
mov
cmp
shufps
enter
push
mov
dec
mov
test
pop
xor
cmpsl
inc
int
lds
push
sbb
stc
and
sub
scas
jno
add
ret
lods
outsb
mov
and
lods
or
jbe
xchg
add
orl
in
jle
std
adc
shll
dec
sbb
fldenv
arpl
cmpl
daa
pop
lds
xchg
mov
movsb
jle
frstor
dec
cli
mov
push
ret
pop
jno
push
jle
daa
push
push
loope
stc
pop
das
cmp
sbb
imul
shll
and
lahf
les
mov
xor
movsl
dec
inc
test
lock
movsl
and
sbb
mov
ss
inc
inc
mov
jb
inc
mov
ror
push
push
sub
outsl
in
adc
or
or
sbb
or
mov
shlb
push
and
call
mov
repnz
shlb
sbb
pop
js
ss
pusha
insl
ds
loope
addr16
or
xor
loopne
arpl
divb
mov
lods
dec
mov
add
dec
hlt
push
clc
stos
iret
mov
xor
pop
lret
ja
dec
pop
cmp
nop
pop
adc
dec
cmpsb
sbb
sub
les
or
mov
inc
pop
xor
dec
imul
test
mov
fimull
mov
pop
cmc
sar
add
cwtl
cmp
pop
daa
push
ss
jne
jecxz
jne
add
push
dec
jecxz
and
fnsave
mov
insb
lcall
push
or
push
adc
fisubl
aas
xorl
roll
subl
sub
mov
mov
cmp
jae
decb
sub
pop
out
divb
push
fdivs
pusha
ss
mov
js
out
adcl
mov
dec
stc
pop
popl
scas
rcr
mov
jo
ja
jbe
arpl
pop
ja
dec
dec
ljmp
es
insl
scas
and
push
pop
cmpsl
and
stc
and
cmp
rclb
call
loop
cmp
jl
mov
push
xor
mov
outsl
addl
xchg
mov
shlb
xchg
add
dec
out
iret
mov
inc
mov
fidivs
jp
aam
testl
cmc
inc
int3
pop
sbb
push
pop
outsb
mov
dec
jecxz
jae
lret
mov
test
xor
add
ja,pt
inc
repz
adc
and
xchg
push
pop
ret
cmp
fildl
push
mov
je
pop
aad
inc
xchg
add
sbb
in
push
fsub
push
sbb
mov
pop
aad
mov
out
mov
loopne
xor
add
xor
sub
jnp
scas
lret
icebp
push
imul
loope
xchg
ss
ja
mov
cs
scas
stos
push
in
mov
clc
insb
pop
pop
icebp
cmp
adc
jae
aaa
or
or
dec
push
pop
sbb
xchg
add
mov
fwait
cmpsl
mov
inc
ljmp
es
sbb
and
pusha
cmpsl
stos
arpl
add
jle
shr
lea
jo
cmp
fmul
ffreep
or
lock
jb
and
dec
push
sbb
and
pop
mov
leave
dec
inc
leave
fcomps
pop
jg
xor
out
leave
inc
mov
xor
ror
sub
mov
icebp
out
adc
jae
js
dec
lret
fwait
outsl
icebp
shrl
pop
sbb
dec
xor
sbb
sub
inc
daa
lock
icebp
push
cmpsb
pop
push
jb
lahf
xor
add
and
aam
lods
dec
sub
mov
aad
adc
stos
xchg
dec
mov
cwtl
fisubrl
fwait
mov
sbb
add
lock
aas
bound
push
out
test
sub
arpl
daa
cmp
inc
jae
push
cs
xchg
sbb
push
xlat
xor
and
inc
das
add
dec
cli
xor
mov
and
push
jecxz
dec
rorb
clc
and
test
in
lcall
jmp
iret
test
and
pop
jns
inc
and
jne
xor
and
jb
sub
mov
lcall
mov
xchg
push
cld
rcrl
aam
pusha
mov
jg
lret
inc
cmp
ret
shlb
inc
cmp
movsb
int3
cmp
ljmp
divl
mov
in
xor
pop
ds
or
into
scas
and
in
xlat
mov
orl
push
jns
pop
leave
les
pop
call
imul
adc
mov
pop
rorb
sub
push
mov
popf
inc
test
shll
sbb
dec
ljmp
sbb
push
out
jns
cmp
ds
adc
dec
push
jecxz
xor
nop
jne
lcall
into
mov
dec
sbb
imul
jle
xlat
push
push
mov
push
jle
sub
mov
lods
call
lods
sahf
mov
mov
out
fimull
xchg
pop
scas
and
repz
loope
mov
out
mov
xor
mov
jge
push
xchg
mov
popf
sub
sbbl
cmpsb
mov
mov
cmp
jb
jnp
push
subb
mov
cltd
fs
iret
or
pop
aad
push
sbb
outsl
jb
cmp
mov
xchg
inc
adc
jne
lods
sub
adc
flds
push
shl
leave
jne
nop
icebp
sahf
lods
jge
push
fistps
out
lret
push
inc
pop
mov
jg
cmp
jge
bound
shl
push
lods
ljmp
lea
xchg
or
lahf
and
ret
sbb
mov
jl
test
push
movsl
fidivrl
lods
inc
sbb
inc
mov
mov
fwait
xor
or
sub
push
ret
jge
scas
sub
arpl
test
inc
pop
data16
fisubrs
xor
out
pop
cli
xor
testl
mul
mov
scas
lock
ret
int
jbe
adc
sub
loop
mov
sti
push
orb
mov
cmpsl
mov
test
push
mov
loope
clc
xchg
ja
cmp
push
mov
push
dec
or
pop
pop
push
fwait
sbb
jmp
mov
sub
shlb
pop
mov
pop
shlb
jp
jle
xchg
adc
ljmp
scas
pushf
mov
loop
jno
int3
fwait
push
cmpsl
in
jb
loopne
inc
cwtl
add
adc
mov
ljmp
inc
push
je
push
inc
arpl
stos
cli
in
inc
clc
lret
cmp
jge
add
andb
jmp
mov
insl
adc
in
xchg
out
lods
daa
jnp
iret
and
aad
mov
and
movd
inc
jns
pop
pop
call
sbb
mov
icebp
jmp
add
subb
pop
stc
jne
xchg
jle
mov
insl
fldl2t
dec
mov
mov
add
in
out
and
adc
sti
test
pop
shrb
and
sbb
fsubs
push
imul
push
push
fdivr
pop
inc
js
jge
jno
rol
jnp
lods
fcomps
lock
js
mov
push
add
iret
cli
out
popf
out
xor
ret
push
lods
push
cmp
mov
inc
or
sub
jle
jbe
test
xor
add
cmpsb
or
out
loop
xchg
rep
push
add
int3
dec
inc
xchg
pop
jge
sub
push
call
stc
repz
cmc
lds
outsl
xorb
and
pop
imul
xchg
in
cmp
add
inc
ror
push
sti
shll
insl
xlat
adc
adc
inc
sahf
mov
lods
mov
jge
sti
inc
ja
imul
xchg
jecxz
stos
pop
call
sti
sub
inc
enter
push
fwait
inc
mov
cwtl
bound
jmp
lret
stos
rcll
mov
and
mov
ljmp
adc
push
aaa
jg,pn
push
sti
ret
mov
ret
pop
sub
movsb
jne
push
popa
sbb
add
mov
andl
cmpsl
icebp
adc
mov
xlat
out
add
enter
xor
cmp
fdivrp
cmp
xlat
lods
lahf
mov
or
xlat
add
imul
enter
stc
pop
pop
pop
rep
push
mov
xchg
int
sbb
mov
xchg
jne
std
sub
jge
inc
mov
int3
mov
shll
roll
add
adc
aad
std
sub
stos
mov
inc
adc
sub
fwait
cltd
push
pushf
sub
and
add
pop
rolb
or
inc
icebp
mov
call
pop
lock
sub
cmc
mulb
inc
movsl
lcall
mov
xchg
loop
pop
fcoms
add
fwait
pop
mov
cmp
jmp
aam
cwtl
repz
nop
and
jno
pop
ss
or
xchg
shll
pop
aam
or
popf
fists
lods
mov
stc
pop
push
nop
pop
add
mov
cmp
ljmp
mov
pop
fs
mov
pushf
mov
out
pop
sbb
stos
jbe
mov
bound
mov
sub
stc
jge
popa
inc
je
mov
mov
or
and
in
xor
add
jecxz
sbb
jno
aas
cltd
cmp
xor
xor
dec
hlt
icebp
add
jnp
sbb
es
xor
sbb
mov
and
mov
sub
adc
and
test
gs
mov
negb
inc
sbb
jne
cltd
mov
lods
cmpsl
jecxz
in
lret
pop
mov
enter
sub
ss
pop
shrl
add
aam
inc
shlb
push
mov
scas
push
jo
mov
push
int
stos
pop
xor
mov
dec
mov
aad
loopne
xchg
cmp
stos
je
inc
fdivrl
filds
shrl
int3
pop
push
dec
push
mov
inc
xchg
xchg
xor
fmuls
xor
leave
out
and
add
dec
jecxz
int3
pop
dec
out
inc
add
and
inc
icebp
fidivs
mov
jo
xchg
sbb
add
push
inc
push
lret
mov
pop
inc
or
fsubrs
mov
sarb
andl
stc
mov
xchg
mov
imul
pop
mov
arpl
adc
adc
sbb
decl
mov
js
aam
repnz
mov
iret
sbb
icebp
sbb
incl
cmc
jns
pop
cmc
jo
xor
and
xchg
or
mov
push
push
fdivrl
push
aam
test
dec
popf
test
xchg
xor
pop
dec
sub
sbb
test
xor
in
fbld
inc
or
outsb
sub
cmc
sbb
jo
jl
and
sarb
mov
cmpsb
mov
xchg
fldenv
push
je
add
mov
popa
jne
dec
lahf
cmp
cli
ja
loope
inc
sbb
xchg
aad
lods
mov
xlat
xor
mov
mov
cltd
xor
adc
mov
mov
aaa
or
mov
ja
hlt
jmp
and
stos
ficompl
orl
xchg
aam
sub
pop
mov
test
inc
flds
sub
stos
or
add
insb
push
lret
and
jbe
adc
out
or
outsb
cmp
push
mov
ret
addr16
out
push
lret
push
ret
arpl
fucom
xlat
sti
push
mov
ret
cli
aad
adc
lea
inc
xchg
inc
test
movsl
scas
das
or
lret
xchg
outsl
cli
and
lock
mov
xchg
cltd
pushf
and
frstor
push
outsb
mov
icebp
xchg
push
std
shl
bnd
scas
adc
push
inc
iret
xchg
pop
push
pop
add
xlat
jp
call
mov
cmp
int3
fwait
jmp
movq
js
rolb
stos
stc
mov
sbb
mov
lret
push
or
out
cmp
dec
enter
in
jb
pushf
and
pop
test
sub
add
sub
fxch
push
xor
cltd
lahf
xchg
roll
stc
jns
push
mov
push
jmp
or
mov
inc
mov
ja
fs
bnd
fs
xor
pop
jae
std
aas
mov
les
xchg
bound
into
push
divl
insl
jae
push
fidivs
nop
push
jge
out
movsl
dec
outsl
dec
push
sub
loop
int3
mov
ja
cmp
mov
jmp
mov
cmp
jb
fcmovb
or
mov
xor
in
daa
testb
mov
daa
ffreep
ror
nop
mov
or
sub
lcall
cltd
xchg
int
fadd
imul
push
xchg
icebp
xchg
mov
out
xor
sbbl
pop
ret
movsl
ljmp
sub
jno
into
js
leave
sub
jae
xchg
jl
pop
test
les
lock
cmc
out
inc
xor
scas
js
cmp
dec
movsl
or
mov
adc
out
or
pop
mov
xchg
pop
jmp
cmp
add
popf
jle
sub
mov
arpl
cli
into
push
into
mov
fdivl
sub
mov
das
gs
cwtl
inc
lea
hlt
int3
dec
cmp
bound
add
lock
mov
inc
jnp
inc
test
cld
xchg
rcrb
pop
pop
add
and
aad
arpl
fs
loop
ljmp
dec
xlat
jb
test
movsb
test
push
fdivr
icebp
test
call
sub
push
mov
aam
sub
in
rorl
hlt
mov
and
add
out
hlt
or
and
fnstenvs
xor
mov
inc
or
insl
xchg
mov
dec
js
jecxz
mov
mov
push
dec
lods
stc
mov
cmpsb
lret
push
in
add
push
cmp
push
push
sub
loop
push
cwtl
sub
push
sub
inc
in
fisubrs
mov
movsb
sar
cmp
movups
pop
fcompl
aam
notl
push
bound
xchg
fwait
daa
adcb
cmp
jnp
cmp
mov
jnp
cmp
out
mov
jg
mov
add
xor
sbb
outsl
xlat
xor
pop
pop
jg
lods
xchg
test
in
int3
fbstp
jne
fcompl
in
inc
sahf
scas
add
idivl
stos
mov
es
sub
in
int
push
sub
mov
sub
rcll
adc
loopne
outsb
mov
sub
push
mul
jbe
fsub
mov
dec
jle
fdivrs
cmpl
jle
cmp
push
cmpsb
adc
je
fcmovne
out
push
rol
cmp
mov
stos
sub
je
ljmp
pusha
jae
push
shll
movsb
add
jecxz
inc
mov
dec
mov
call
dec
mov
pop
std
bound
dec
dec
add
dec
out
xchg
sbb
and
push
out
cmc
insb
cmpsl
inc
loop
leave
push
outsb
jo
push
jg
cmp
inc
gs
stc
jg
jge
mov
imul
xchg
mov
jb
insb
push
test
aas
cwtl
jno
sbb
insl
movsb
jl
fdivl
dec
mov
ss
mov
xchg
dec
mov
shll
jmp
sub
push
add
dec
dec
ss
nop
lods
mov
stos
inc
cmc
xor
arpl
adc
shll
in
int
cmc
jp
mov
icebp
notl
orb
jge
add
in
sbb
pop
fs
pop
aas
shll
sbb
imul
aam
add
lods
testb
mov
stos
mov
sbb
cmpsl
int3
mov
push
int3
dec
outsl
loop
shll
gs
inc
psubusw
mov
pop
js
mov
dec
je
int3
loop
imul
aam
loopne
add
mov
adcb
sti
stos
sub
lcall
movsb
mov
jle
or
jge
loop
dec
sbb
scas
add
mov
jb
shrl
add
testl
loopne
mov
adc
xchg
dec
xor
out
adc
mov
cmp
sbb
sbb
mov
push
mov
mov
mov
adc
insl
ja
aas
push
jle
dec
jl
rorb
sbb
fstps
jmp
add
and
add
addr16
or
pop
jno
insb
out
xchg
xchg
sub
sarl
inc
fidivl
fmull
cmp
pop
cmovnp
mov
dec
cmpsl
pop
add
adc
dec
or
mov
pop
mov
les
cli
enter
cltd
icebp
sbb
adc
lods
aad
cmpsl
cmp
shl
xchg
cmp
cmpsb
call
dec
test
push
shl
jge
leave
pop
addr16
xchg
lret
pop
xchg
dec
cmp
out
inc
ret
sar
out
scas
cmp
shr
xchg
movsb
mov
pusha
add
aaa
xchg
xchg
std
adc
popw
sub
inc
mov
popf
sub
movsl
test
or
xchg
testb
test
xor
cmp
sub
loop
cmp
sub
cmp
or
xchg
push
ficomps
enter
fcoml
popa
adc
imul
dec
out
mov
or
lds
clts
push
dec
leave
cmp
adc
lock
xchg
pop
das
mov
in
inc
daa
inc
comiss
mov
push
scas
dec
incl
sub
dec
leave
gs
fistpll
in
adc
cmpsb
in
xlat
outsb
dec
pop
cmp
stc
mov
inc
xchg
sahf
jnp
into
stos
addb
mov
movsb
mov
xchg
inc
pop
insb
sbb
sub
mov
sub
popa
loopne
sbb
ss
mov
mov
jbe
inc
xchg
mov
das
cs
ds
xor
cmpsl
xor
pop
stc
es
and
stos
out
mov
jl
cld
pop
and
test
sti
and
adc
loopne
inc
jns
dec
push
mov
mov
adc
pusha
shrb
popf
jae
outsb
test
adc
rcl
mov
fildll
out
or
mov
scas
add
lret
dec
xor
sbb
push
cwtl
xchg
roll
mov
dec
sbb
adc
push
jb
jmp
or
sbb
jae
mov
jmp
inc
inc
mov
or
sub
pop
cmp
callw
jl
in
outsl
testb
out
adc
fnstcw
cld
loop
xchg
mov
push
jp
push
jmp
jns
sahf
adc
mov
dec
das
jecxz
inc
hlt
cmp
into
repz
jae
jge
lea
mov
je
xchg
push
inc
lret
data16
rcr
in
sbb
addr16
xlat
out
inc
test
fwait
pop
xlat
xchg
pop
xchg
mov
push
mov
push
mov
test
pop
lods
mov
xchg
pop
lcall
jmp
out
cltd
mov
inc
xor
jmp
dec
in
jbe
imul
sbb
sbb
mov
push
mov
and
ret
loope
sbb
mov
lods
jbe
jae
int3
pop
adc
push
mov
dec
lcall
xchg
jle
rcr
in
shll
xchg
hlt
pop
in
pushf
cmp
fidivs
out
adc
ficoms
mov
ffreep
aad
jbe
jge
pop
xor
mov
test
lds
add
in
pop
cs
test
das
cli
cmpsl
movsb
adc
loope
or
sti
loopne
jno
sub
or
ljmp
jb
jb,pt
hlt
fimuls
lock
mov
mov
mov
insl
xor
push
xchg
and
popa
sub
sub
sub
or
in
mov
mov
jne
inc
push
pop
hlt
xchg
jecxz
clc
imul
and
cli
fcomps
leave
xchg
into
inc
jno
or
fucomip
push
repz
cmpl
repnz
loope
stos
mov
adc
fs
inc
lods
pop
shll
inc
fidivl
xchg
jo
js
sub
inc
or
xor
push
ja
imul
das
or
pop
shr
dec
push
sbb
pop
inc
and
adc
pop
or
lock
cmc
loop
add
mov
cmp
lcall
out
pop
xlat
xor
add
int
push
mov
pop
dec
bound
icebp
fldl
sub
lcall
test
add
and
nop
pop
in
gs
lahf
cmpsl
xchg
fbstp
mov
mov
rorl
pop
lock
repz
fsubl
loop
jp
inc
jns
sbb
aam
addl
adc
rcrl
pop
inc
pop
imul
add
and
insl
xchg
ret
incb
dec
ds
sub
inc
cmpsl
sbb
int
xlat
cmpsb
jge
pop
aaa
push
andb
inc
data16
cld
jnp
hlt
hlt
adc
icebp
insl
cmp
into
aam
jb
imul
xor
mov
push
test
xor
fdivrl
sub
dec
or
cmp
adc
outsl
inc
and
loop
into
xchg
pop
movsl
push
cmp
pop
cmpsb
jmp
xor
testb
jne
xchg
sbb
push
xchg
pop
shll
mov
push
push
ss
cmp
xor
push
mov
xor
popf
cmp
dec
dec
jmp
mov
add
push
in
lret
xor
movsb
sbb
cwtl
jnp
stc
mov
or
mov
scas
mov
cmp
icebp
sbb
push
add
int
hlt
pop
mov
cmp
addr16
repnz
or
loopne
push
ss
or
inc
ret
cmc
cmpsb
and
or
mov
ljmp
lret
push
add
dec
xchg
test
mov
div
dec
add
mov
cmp
fdivrp
and
lahf
pusha
stos
inc
add
rclb
mov
aaa
int
add
jl
sti
pop
icebp
fldcw
shll
dec
fmul
sub
leave
fldl
in
popf
pop
mov
mov
adc
int
frstor
inc
adc
mul
shrl
sub
addr16
lea
jle
pop
sbb
xchg
push
pop
add
cltd
mov
mov
push
in
jno
jae
mov
xchg
push
insb
rcrl
cmpsb
mov
lock
sub
pop
loope
jo
sub
dec
leave
dec
subl
cli
leave
xchg
lods
xlat
in
mov
repnz
fisubrs
lds
into
insb
mov
out
cmpsl
xor
shl
sbbl
repnz
stos
icebp
shlb
data16
movsl
mov
dec
jmp
inc
js
test
mov
gs
movsb
add
xor
or
add
inc
nop
sub
bound
jge
adc
lret
in
stc
movsb
pushf
fimull
fldt
loope
outsb
or
dec
jb
lock
out
and
addr16
xor
stc
push
movsl
in
xor
inc
test
cmp
addr16
cld
push
imul
or
movsb
mov
leave
mov
sbb
popa
fcomp
xor
jmp
push
jb
mov
ljmp
jne
das
mov
into
xor
pushf
sbb
popf
push
int
nop
mov
mov
inc
mov
sub
out
fnstcw
push
jae
fstpt
sbbb
xchg
sub
jb
sbb
and
out
cmpb
sub
out
xchg
hlt
test
jmp
mov
cmpsb
fsubr
sbbb
mov
shlb
clc
push
jg
or
sarl
ret
mov
lock
rclb
icebp
lahf
sbb
xor
sbb
jle
cmp
cmp
mov
in
filds
and
test
cmp
lock
or
loopne
sbb
push
ret
add
fidivs
into
mov
mov
into
call
out
mov
rol
or
jne
shrl
push
jnp
sub
orb
pop
push
gs
pop
jnp
adc
sbb
js
cmc
in
sar
sti
and
adc
arpl
ffreep
dec
lret
mov
scas
popa
cwtl
sbb
mov
sbb
dec
or
mov
repnz
add
xchg
repz
sbb
arpl
lahf
les
aas
lcall
add
les
and
hlt
mov
push
int
cld
lock
inc
stos
jo
lods
stos
in
div
inc
xchg
movsb
or
in
movsl
add
pop
jp
add
or
stos
mov
sub
jecxz
mov
cmpsb
pop
cmp
push
pop
call
retw
push
xor
dec
xchg
mov
xchg
lock
addl
dec
shll
xor
cmp
fistpll
pop
aad
jo
aam
mov
sbb
ljmp
push
repnz
out
sub
stos
data16
and
and
pop
mov
push
js
jno
bound
cwtl
inc
clc
std
rcrb
and
xor
pop
pop
mov
rolb
leave
hlt
pop
test
mov
cmp
fs
pusha
xchg
inc
sbb
xchg
into
aas
outsl
fnstcw
pop
cli
mov
add
or
pop
or
mov
pop
sbb
or
ja
mov
adc
jbe
pop
cmp
int3
adc
pop
cmp
hlt
movsl
adc
inc
adc
lods
cmpsb
mov
and
lret
sub
fisubl
sbb
mov
mov
add
cmpsb
xchg
cmp
inc
movsl
outsl
xchg
movsl
cmpsl
mov
mov
jg
out
inc
test
lcall
sub
shufps
inc
cs
mov
aaa
rcl
inc
or
lcall
aam
rcl
add
andl
xchg
mov
leave
ja
notb
into
sub
mov
dec
out
aam
out
add
xchg
sbb
adc
jae
pop
inc
pop
inc
xor
pop
pop
push
cmp
mov
jns
sbb
dec
mov
sbb
hlt
hlt
or
xlat
bound
adc
dec
aas
test
jecxz
aad
cmpsl
in
lds
daa
adcb
inc
or
sbb
mov
add
jno
xchg
test
in
xor
fcoms
cmp
cmpsl
mov
jle
add
or
not
mov
nop
pop
insb
hlt
lret
stos
insl
dec
adc
mov
jmp
out
adc
das
xchg
das
dec
js
in
paddusw
mov
mov
fcoms
lahf
cmpsb
jp
dec
cltd
add
movsl
lods
pop
shr
or
fisubl
inc
mov
jb
adc
cmp
xchg
roll
inc
loope
mov
das
xchg
outsb
cld
outsl
xchg
mov
mov
hlt
pop
std
mov
dec
pop
pop
dec
shlb
int
push
in
daa
je
add
adc
les
xchg
loopne
iret
push
cmpsb
lret
add
and
lods
adc
aaa
rolb
fmul
in
lret
push
stos
adc
pop
inc
insb
cmc
xor
popa
idivb
and
insl
or
or
add
add
aad
cmp
fldcw
stc
out
dec
ljmp
scas
punpckhwd
mov
pop
mov
mov
push
ljmp
push
imul
movsl
sub
inc
and
movsb
cwtl
adc
cmp
mov
jmp
xchg
imull
dec
fnstenv
clc
and
pop
call
dec
mov
add
sub
fsubs
sti
mov
push
mov
loopne
ret
lahf
jmp
shrl
sarb
jbe
xor
psubsw
cltd
ss
ret
fisttpl
mov
mov
data16
lods
lret
push
xchg
loope
testb
xchg
jo
pop
jno
je
frndint
jne
dec
push
jmp
ffree
push
les
ds
testb
ds
lret
sarb
mov
or
pop
cmp
aaa
add
sbb
pop
jl
xor
xchg
pop
mov
aaa
jecxz
adc
xchg
cmpsl
cmp
cmpsl
popa
add
pop
rol
pop
pusha
imulb
add
sbb
pop
out
aaa
cmpsl
jns
sub
cwtl
jo
fsub
xor
xlat
dec
rol
xor
lds
jg
push
xor
shrb
aam
out
daa
dec
sub
jb
adcb
dec
inc
jno
cld
hlt
rorb
cltd
or
aaa
mov
fdivp
inc
imull
fwait
ja
aad
pop
bound
ret
icebp
fisubl
mov
dec
lock
sbb
sbb
or
lret
outsl
scas
pop
cmpsb
dec
mov
addr16
cmp
clc
ret
mov
push
mov
push
imull
js
jne
subl
ret
insl
push
aas
imul
lcall
dec
int3
inc
int
mov
aad
pop
jmp
prefetch
sub
leave
fstps
in
enter
xor
inc
pop
or
test
iret
das
nop
dec
fcoms
jne
jno
lock
out
ret
mov
out
pop
and
lahf
or
int
rorl
out
xor
test
in
pminsw
out
ffreep
xchg
jle
add
xlat
cmpsb
xor
mulb
or
insb
push
orb
mov
inc
push
stc
inc
in
mov
adc
mov
pop
inc
or
mov
fbstp
push
xchg
jbe
pusha
fnstsw
or
add
xor
mov
rolb
jnp
or
pusha
xchg
sahf
adc
push
mov
dec
mov
sbb
and
stos
xor
nop
cmp
xchg
push
mov
fildll
cld
lods
es
jg
clc
and
pusha
mov
daa
cmp
in
out
lds
clc
jbe
adc
es
jmp
leave
mov
sub
pop
dec
bound
sub
cmc
scas
pop
fisttpll
or
adc
cld
aam
sbb
adc
into
loope
je
xor
pop
sbb
cwtl
cmpsl
cli
sti
das
mov
lock
movl
mov
xor
test
dec
inc
cmp
push
adc
jb
scas
scas
pop
mov
shlb
or
mov
lret
sub
pop
and
or
and
sub
pushf
or
jb
inc
aam
fwait
mov
lahf
loopne
xchg
add
gs
or
or
sbb
mov
ror
mov
movsl
out
addr16
ja
adc
inc
hlt
and
xchg
cmpsl
and
imull
mov
dec
cmpsb
add
jge
mov
addb
cs
test
pop
ss
arpl
cltd
mov
sbb
shll
fmul
xchg
pop
and
scas
lods
pop
iret
jb
ljmp
push
pop
scas
or
sub
pop
mov
stos
pop
sub
xor
sbb
mov
lock
cmp
fiaddl
sarl
movsw
addl
jns
popl
cmp
int3
jl
or
lret
jge
aam
sbb
sub
loope
mov
mov
push
lea
pop
daa
push
popf
pusha
repz
inc
dec
push
fnstsw
push
movsl
sub
shll
in
push
hlt
in
or
fsubrs
mov
jecxz
movsb
sub
pop
test
add
push
mov
lcall
or
jne
inc
jle
jg
imul
jle
cli
out
jle
adc
in
push
and
es
dec
jno
out
mov
push
aad
inc
mov
jno
in
inc
sub
mov
xchg
add
rorl
push
out
cmp
imul
sar
cmc
add
and
add
push
xchg
outsl
in
jns
insl
pop
ds
cmp
cmp
and
mov
pop
sbbb
inc
leave
adc
lcall
pushf
jmp
add
xchg
shrb
jb
inc
inc
jecxz
inc
sbb
arpl
jl
jp
clc
imul
push
xor
rcr
xchg
repnz
mov
mov
pop
add
aaa
loop
xchg
enter
sbb
mov
stos
jnp
mov
sub
ja
add
js
dec
ss
mov
inc
stc
mov
pushf
imul
shlb
js
push
mov
inc
mov
pop
sahf
movsl
cwtl
ds
out
inc
fs
jmp
ja
xor
loop
xor
sbb
add
clc
popl
add
mov
pop
push
scas
out
mov
mov
or
mov
push
std
rcrb
mov
mov
scas
xor
addr16
cmp
push
inc
xchg
pop
xor
fstpt
icebp
pop
lea
sub
push
popf
loope
clc
cmpsl
xchg
arpl
movsb
inc
sub
pop
sahf
mov
xchg
and
dec
decb
cmc
add
push
negl
iret
testl
pop
out
and
ss
or
push
pop
hlt
test
adc
push
jl
lds
scas
js
and
popa
lea
cmpsb
adc
add
inc
loopne,pt
fisubl
jnp
adc
mov
pop
xchg
lods
pop
mov
jmp
push
jp
in
aad
push
sbb
dec
xor
insl
jns
pop
mov
cmpsl
mov
out
daa
pop
cs
push
lods
adc
mov
and
pop
movsb
xchg
aas
test
and
add
xchg
and
shl
aaa
jecxz
iret
mov
cli
jo
jmp
mov
xor
mov
mov
adc
mov
push
ds
daa
pop
in
mov
mov
enter
pop
xor
mov
ss
jb
in
mov
cmpsb
add
xchg
sub
pusha
rol
push
and
repz
xor
enter
and
imul
or
inc
mov
dec
mov
jecxz
fstps
shr
inc
dec
insl
pusha
or
prefetch
in
sbb
into
jl
sbb
aas
push
dec
pop
out
nop
aaa
and
cmpsb
adc
fcoml
push
les
mov
bound
daa
fistpll
dec
push
subl
add
push
sti
push
bound
jo
cmpsl
and
shrl
jmp
mov
pop
inc
inc
ficoms
int3
repz
mov
cmp
jae
sub
push
jecxz
repz
fsubrl
call
or
sub
les
dec
lods
sahf
sbb
sbb
mov
jge
subb
shrb
sbb
mov
notl
pop
loope
inc
stc
jl
and
add
bound
shlb
xor
addr16
adc
jo
ds
movb
mov
imul
or
mov
mov
xchg
cmp
dec
jbe
loope
frstor
xchg
jbe
mulb
adc
ret
outsl
cmp
jo
rorb
mov
stos
loop
fisttps
and
lods
idiv
push
arpl
jg
or
int3
fsubrs
insb
movsl
dec
jle
in
movsl
pop
fldcw
ja
scas
xor
in
leave
cmp
adc
popf
inc
popf
dec
and
jae
out
or
inc
nop
and
loope
or
addl
mov
scas
adc
jp
daa
rcll
fwait
or
pushf
fnstenv
mov
icebp
fisubrs
ret
lods
cltd
enter
fdivrl
xor
movsl
sbb
ffree
test
mov
imul
cmpsl
xchg
je
es
ret
out
das
jo
fs
push
xchg
sub
or
or
xchg
add
flds
stos
test
rcr
sub
cmp
push
adc
add
inc
negb
jbe
push
xor
sbb
jecxz
fwait
cmpsb
out
xchg
fldenv
rclb
jb
ljmp
int3
mov
xchg
and
xchg
add
lds
inc
nop
pop
push
push
cmp
scas
test
dec
adc
mov
cld
xor
movsl
or
decb
dec
inc
sub
pop
rcrl
ljmp
insl
xor
mov
fnsave
xchg
fstpt
push
fidivl
shrl
sbb
inc
push
outsb
cmp
inc
inc
pop
pop
sti
je
sub
ret
std
movsb
stc
mov
mov
int
pop
nopl
mov
jl
pop
xor
xchg
xchg
add
add
loop
leave
inc
xlat
fiadds
mov
movsb
pop
sti
jge
aaa
mov
xlat
fists
insl
adc
enter
iret
addr16
mov
dec
pop
jl
pop
mov
mov
dec
lods
lock
cmp
das
sub
movsl
mov
into
push
sbb
scas
imul
test
shr
cmp
sbb
arpl
shll
addr16
pushf
lods
xor
xchg
das
mov
or
adc
mov
ja
mov
loopne
jle
push
cmp
rcrl
fsubr
lcall
push
mov
jmp
fnstenv
adc
xchg
pop
mov
lret
mov
inc
test
mov
outsl
fiaddl
and
dec
xchg
sub
jp
popf
testl
jnp
cmpsl
inc
aam
lea
mov
xchg
mov
roll
mov
push
pushf
push
add
cltd
test
cmp
or
cld
cmc
xor
test
xchg
xor
in
sarb
clc
inc
aaa
in
jns
dec
icebp
dec
and
sahf
add
call
or
jl
mov
popa
jge
sbb
xchg
in
adc
int
test
mov
fildl
lods
jg
daa
sbb
and
es
lock
lods
jmp
mov
push
stos
sub
iret
sub
inc
or
cmpb
cmp
gs
push
xchg
xor
push
subl
test
mov
in
imul
and
mov
push
sbb
sahf
cmp
and
test
sub
mov
push
jecxz
add
ss
add
arpl
hlt
sbb
insl
cli
hlt
push
mov
or
imul
dec
popa
sbb
pop
clc
test
xor
movl
out
mov
movsl
ds
xor
ja
mov
das
push
jno
sbb
push
repz
sub
clc
add
cmp
sbb
xor
jmp
adcb
loop
dec
pop
loop,pn
or
cs
test
nop
xor
sub
add
inc
shll
xchg
adc
xchg
mov
cmc
adc
xor
rorb
and
mov
adc
pop
add
push
clc
into
mov
test
movsb
ret
sub
and
sbbb
cmp
cmp
dec
inc
pop
insb
test
push
mov
fwait
xchg
mov
int3
or
les
nop
fistps
dec
push
iret
data16
pop
cmpsb
mov
pop
out
jns
push
push
jecxz
cmp
xchg
xor
gs
mov
lahf
repz
xor
cld
inc
xchg
push
js
rcrl
cmpsl
or
lock
mov
inc
cwtl
ds
xor
mov
out
mov
cwtl
and
xor
dec
insl
inc
sub
mov
xor
sbb
mov
rcr
cmp
rcrl
and
scas
leave
pop
mov
push
add
add
cmp
inc
and
cmp
dec
lods
push
mov
cwtl
jecxz
fistps
sarb
push
xor
xor
cmp
jnp
mov
mov
data16
or
add
ss
pop
mov
sub
test
icebp
jae
mov
adc
jb
pushf
dec
mov
push
fistpl
mov
jl
lret
jo
pop
in
mov
lret
adc
adcb
cltd
cs
sub
pop
adc
or
lret
pop
lods
fmull
ja
mov
pop
sti
fs
xor
ds
cmp
pop
rcll
scas
push
push
inc
fabs
mov
xchg
lods
insb
movsl
sub
mov
fs
scas
mov
scas
add
inc
test
es
mov
popa
inc
aas
sub
pushf
and
test
std
mov
push
in
add
jnp
rcrl
jecxz
outsb
jnp
sbb
cltd
jg
sti
inc
loopne
leave
pop
ret
push
mov
and
cltd
cltd
bound
scas
push
mov
push
imul
cli
mov
sub
adc
hlt
shl
mov
sbb
loope
jns
insl
nop
push
lock
lods
adc
or
hlt
jo
sbb
jle
jo
je
sub
cmp
cmp
xor
dec
push
mov
mov
fsubl
xchg
sbb
mov
push
mov
je
push
mov
dec
push
insl
clc
lahf
add
cmc
pop
pop
pop
mov
imul
jmp
jae
rcl
negl
xchg
inc
sbb
out
je
sarb
add
mov
jae
xchg
mov
add
mov
dec
mov
scas
sub
push
push
aam
pop
lods
xchg
push
add
cmp
mov
cmp
aad
lods
pop
js
xchg
rclb
sub
fldenv
mov
in
cmpsl
mov
cmp
divl
mov
xchg
xor
xor
das
repz
sti
xor
stos
idivb
cmp
ja
loope
pop
test
sbb
cmovno
fiadds
daa
dec
shlb
push
push
out
stc
sbb
mov
adc
leave
dec
sti
mov
rol
bound
xchg
ror
outsb
sbb
push
test
stc
out
jmp
jno
xlat
aad
dec
scas
divb
sbb
dec
arpl
cmpsl
dec
clc
fnstsw
jp
mov
xor
dec
cmp
push
jae
dec
sbb
push
xchg
pop
dec
push
adc
pop
pop
inc
jns
dec
add
jno
dec
adc
mov
iret
jae
mov
inc
lods
popf
xor
shr
or
sahf
add
out
and
aaa
dec
cli
sub
ljmp
pop
and
sbb
out
ret
out
dec
dec
mov
call
mov
lods
mov
xchg
push
shrb
mov
lret
xchg
cmp
and
in
imul
sahf
mov
jnp
dec
jns
xchg
ds
rcll
and
sub
cmc
jns
rol
adcb
es
in
scas
pushf
sbb
cmp
cmp
enter
or
lea
pop
faddl
jl
lret
test
and
insl
push
mov
inc
mov
rorl
repnz
adc
jbe
js
dec
pop
fstpt
js
cmp
repz
add
shl
icebp
aam
cmp
inc
mov
jecxz
shll
stos
dec
mov
das
inc
movsb
or
jg
pop
fwait
and
xchg
mov
sbb
test
sbb
loope
pop
cmp
les
lds
mov
pop
insb
clc
inc
jnp
fistpl
or
fiadds
cwtl
jnp
jg
ds
in
scas
enter
sahf
das
adc
jae
sub
test
clc
xlat
adcl
test
sahf
test
mov
flds
mov
mov
pop
fsubl
jae
hlt
repnz
xor
mov
lahf
outsl
pop
mov
mov
jne
dec
mov
jne
in
cmp
adc
push
push
fwait
js
les
popa
and
ljmp
jg
int
add
push
sti
or
insb
loop
enter
test
xor
addl
icebp
cs
negb
push
pop
mov
or
sub
pop
insl
and
mov
lods
mov
int3
jae
sub
scas
or
call
jne
sbb
adc
dec
aam
inc
xor
cmp
sahf
fbld
cmc
jge
fisttpll
call
dec
cld
mull
push
lahf
jb
lods
or
adc
push
orb
clc
iret
sahf
inc
int
iret
sbb
pop
addr16
jecxz
jb
outsb
ret
popa
cmp
popa
mov
jp
dec
push
mov
popa
pushf
mov
stc
arpl
cmp
lock
sbb
jle
pop
mov
arpl
call
push
int
mov
or
mov
rolb
cmp
test
aas
cltd
movb
icebp
or
int
gs
push
push
xchg
mov
xchg
rorb
add
jae
xchg
or
es
rcr
or
jnp
jmp
sub
jnp
das
or
mov
loop
icebp
andb
jae
jb
outsb
loope
mov
leave
mov
inc
cmp
push
cld
add
cmp
aaa
mov
out
fisttpll
cmp
sub
aaa
popa
xchg
neg
out
push
xchg
and
lock
lods
or
mov
xor
out
lret
aaa
mov
jp
sbbl
inc
inc
push
mul
test
add
pop
flds
lock
cmp
or
fdivrl
call
cmp
adc
lock
cld
mov
push
pop
push
push
fists
xor
push
dec
fistpl
xchg
add
cs
lea
xchg
test
mov
and
out
aam
aaa
pop
or
in
shrl
movsl
in
lock
pop
mov
aaa
mov
or
pop
in
dec
sbb
leave
pop
sti
mov
dec
fldenv
mov
dec
lds
imul
shlb
dec
fisubrs
mov
insl
sub
outsl
and
mov
xor
mov
mov
mov
cmp
cmp
add
xorb
dec
and
out
movsl
mov
xchg
out
and
pop
fcoms
daa
mov
pop
rolb
dec
je
insb
jno
ss
iret
add
adc
mov
push
fdiv
jl
into
es
mov
daa
mov
add
mov
mov
add
push
dec
and
cld
and
pushf
adc
test
movb
mov
in
stos
jmp
adcl
call
adc
xor
sub
ss
or
imul
sub
insb
sub
sbb
cmp
lret
and
jo
xchg
add
add
mov
test
sbb
in
pcmpeqb
or
nop
cmp
mov
push
xchg
testb
pop
push
cmp
or
jle
or
scas
mov
loopne
pop
mov
dec
jge
pop
xor
jg
lret
and
jle
jp
xchg
push
xchg
pop
mov
cs
mov
dec
cmpsl
cmp
dec
int3
sbb
orl
fdivr
call
repnz
iret
inc
jge
and
imul
pop
outsl
sbb
stc
add
stos
fistpll
imul
add
xchg
cli
mov
cmp
popf
cltd
push
filds
adc
or
lds
pushf
fs
xor
push
cmc
xchg
add
cmp
fs
lea
jge
scas
subb
mov
sbb
mov
in
orl
xor
loop
push
test
inc
insl
dec
stos
cltd
lret
or
adc
in
je
lods
push
fidivrs
aas
xchg
int
cmp
in
ret
push
in
sbb
inc
xchg
push
or
pop
xchg
sbb
pop
pop
in
add
pop
jb
mov
testb
add
lock
fcomp
mov
int
mov
xchg
pop
xchg
fmull
and
movsb
push
push
jo
inc
mov
jmp
bound
sub
and
nop
out
jo
inc
lea
adc
cmp
sub
call
mov
add
dec
pop
subb
cmp
xchg
subb
mov
xchg
movsl
repnz
test
and
mov
xchg
lret
int3
test
push
push
xchg
pop
push
lds
xor
ret
loopne
mov
mov
adc
imul
aas
jecxz
rcrl
mov
mov
adc
pop
icebp
out
out
mov
push
cmp
bnd
or
sti
xor
pushl
adc
sbb
stos
xor
pop
mov
rol
out
xchg
inc
sti
in
jle
js
pop
pop
addl
adc
dec
xor
mov
inc
pop
mov
icebp
adc
xchg
push
nop
fldl
enter
xchg
insl
repnz
rcrl
sbb
push
stc
and
xchg
leave
cmp
jne
adc
jo
and
cs
jae
mov
bound
jmp
and
popf
scas
out
shr
and
mov
push
push
jns
arpl
and
add
and
adc
stos
cmpl
movb
or
and
stos
xor
jecxz
mov
jle
inc
push
mov
jg
mov
dec
sti
std
iret
divb
xchg
mov
icebp
clc
push
adc
push
jge
adc
inc
or
mov
pop
jp
fdivl
mov
insl
adc
lods
repnz
cmp
hlt
shlb
aaa
xor
pop
shlb
cmp
jecxz
add
xor
mov
roll
mov
mov
rolb
shrl
pop
and
xorb
out
loopne
dec
xor
test
mov
shrl
rcl
mov
dec
hlt
mov
fsub
ds
sbb
popa
pushf
inc
cmp
mov
in
int3
mov
push
addr16
icebp
ljmp
inc
test
aad
pop
aam
pop
cmpl
outsl
idivl
jae
push
mov
in
mov
push
shl
ret
mov
dec
or
xor
popl
cmp
int3
test
push
hlt
adc
in
dec
jl
xchg
ret
ja
push
jmp
sbb
notb
sub
mov
add
inc
jl
push
xor
out
insl
pop
int3
mov
xor
inc
pop
mulb
imul
fstpt
add
xchg
jle
mov
ja
push
test
test
int3
xchg
ret
pop
inc
aam
cwtl
sbb
cmp
arpl
xor
xchg
inc
jge
and
push
enter
pop
mov
test
das
mov
xor
test
push
xchg
daa
cmc
aas
inc
aas
push
cmp
cli
aad
sbb
fs
popa
and
outsb
lea
call
mov
loope
jecxz
dec
shl
mov
add
notl
ret
sahf
rcll
jp
pop
push
sub
dec
jae
xor
pop
inc
mov
and
hlt
and
sbb
leave
repz
call
or
push
xchg
es
stos
addr16
cmpsb
cmp
rcll
ds
popa
movsl
ljmp
mov
push
out
out
es
push
xor
inc
insl
ret
cmp
or
adc
push
mov
pop
out
lret
je
inc
and
es
xor
movsb
xchg
sbb
mov
inc
sbb
jno
andb
dec
pop
outsl
mov
movsl
rclb
std
push
xchg
jle
dec
iret
iret
mov
stos
dec
cmpsb
xchg
cmc
add
cmp
out
in
fscale
or
insl
mov
insl
loop
hlt
sbb
and
and
xor
xchg
cld
int3
push
outsb
hlt
cmp
inc
inc
jp
test
cmp
add
mov
fldenv
fstpt
pop
xchg
call
ffree
addr16
stc
xor
stos
sbb
in
sahf
xchg
xchg
cli
xchg
lahf
incl
lret
pop
adc
xchg
ds
mov
sbb
idiv
dec
jae
add
mov
addr16
add
mov
in
adc
xor
adc
mov
inc
sbb
dec
in
aas
imul
nop
out
cltd
std
pop
or
imul
mov
xor
aam
lods
outsb
sbb
jnp
outsb
pop
pop
gs
push
fldcw
sub
push
mov
fbld
arpl
sbb
test
ficompl
cmpsb
mov
loop
loope
adc
cwtl
pusha
push
or
loopne
or
push
xor
mov
into
xchg
inc
mov
and
sarb
xor
inc
jae
adc
xlat
out
push
pop
or
xor
mov
sub
ret
sub
clc
and
mov
mov
aam
arpl
movl
shll
iret
pusha
mov
icebp
cmc
outsb
cmp
dec
mov
pushf
pop
pop
push
icebp
mov
xchg
xchg
jl
or
out
jl
xor
push
jge
scas
or
scas
fwait
xchg
paddusb
pop
mov
bound
jmp
cmp
nop
cltd
cmpsb
and
out
loopne
add
or
inc
nop
adc
test
sbb
scas
adc
sbb
sub
push
dec
lods
xchg
xchg
add
es
mov
pop
pop
cmp
cmp
dec
inc
out
inc
aad
xor
lahf
arpl
inc
xorl
outsl
add
js
ret
js
and
inc
in
enter
xchg
loopne
fdivrl
popa
sub
push
jmp
xor
cmp
and
push
lahf
ds
push
mov
pop
xor
dec
and
pusha
ret
jl
test
sbb
sub
cmpsl
jo
or
jns
pop
dec
jg
fisttpll
repnz
pop
repnz
mov
sub
push
dec
movsb
xor
mov
pushf
mov
sbb
xchg
mov
shlb
cmp
cmp
inc
call
cmpsl
jle
pop
sbb
sbb
mov
je
ss
gs
sbbb
rcr
aas
ret
dec
and
xchg
push
test
mov
out
push
imul
push
xor
push
test
fs
sbb
ret
dec
cmp
movsl
or
sub
lret
in
test
sub
andl
mov
icebp
call
mov
clc
out
sub
out
and
scas
cwtl
sbb
orb
sbb
mov
and
mov
xchg
fisubl
sbb
xchg
mov
jb
test
jnp
jmp
push
xlat
mov
mov
xchg
inc
es
push
jae
adc
sbb
fsubrl
sub
es
std
pop
sbb
inc
std
pop
movsl
int
cs
in
in
fnstenv
add
pop
ret
mov
xchg
add
cmpl
seta
lods
fdiv
test
mov
inc
dec
incb
in
idivb
xchg
mov
insl
movsb
ja
push
or
jae
push
out
andb
adc
cmp
pop
jge
sti
push
and
jl
push
notb
push
inc
add
add
mov
mov
gs
mov
rorl
and
dec
cltd
mov
add
ja
out
xor
iret
shlb
push
sbb
mov
dec
push
jae
dec
enter
cld
ret
loope
sub
and
aad
in
pop
adc
pop
mov
lret
or
js
jge
dec
fldenv
pop
cmp
add
jmp
pop
or
fadds
fcomps
xor
add
and
iret
pop
or
sbb
rcl
xor
mov
int
pusha
or
mov
dec
ret
push
push
imul
xchg
faddl
cmp
stc
je
lods
push
jnp
aas
mov
sub
movsl
fs
jae
enter
lahf
push
mov
xor
mov
push
pusha
cltd
dec
sub
mov
sub
ss
push
mov
mov
sub
and
xlat
dec
movsb
loope
out
outsb
push
cwtl
bound
fisttpl
inc
aad
mov
add
outsl
fsub
loope
imul
loope
sub
xchg
cmpsl
repz
imul
ret
add
mov
gs
add
or
mov
mov
mov
and
xchg
adc
mov
sbb
in
cwtl
or
dec
pop
jl
jno
roll
inc
fldl
mov
mov
inc
fwait
call
jae
enter
sbb
ret
mov
xor
int3
and
rorl
jno
add
js
fsts
add
cld
jl
sbb
inc
xor
cmp
xor
push
mov
and
mov
test
js
out
scas
bound
aaa
push
int
dec
cmp
cmp
adc
pop
cmc
addr16
test
popf
imul
jb
push
lahf
inc
fs
cwtl
add
cld
adc
push
adc
or
push
jmp
dec
mov
inc
dec
mov
pop
inc
popa
xchg
cmp
jl
aad
cmp
nop
jnp
mov
and
xor
sub
push
scas
iret
arpl
or
lret
insb
mov
push
ja
pop
cmc
enter
pop
lcall
cltd
aad
inc
xchg
mov
cwtl
fsts
jecxz
das
adc
push
lods
push
daa
add
push
jge
bound
fs
lods
push
insl
pop
mov
adc
jnp
adc
gs
scas
mov
mov
sub
mov
mov
mov
mov
dec
ret
adcb
and
jns
scas
mov
or
inc
and
shll
out
inc
dec
sbb
mov
xor
push
add
adc
mov
jb
pop
cmp
pop
fidivs
pop
cli
int3
xchg
movl
int
ds
xorl
lret
lods
pop
xchg
lods
fcomp
sbbb
sti
sub
mov
mov
aaa
or
lcall
movl
repz
sub
adc
loopne
je
rclb
dec
nop
decb
inc
repnz
mov
add
daa
adc
fmulp
stc
stos
and
sti
sub
xlat
fdiv
adc
ds
pop
jo
or
ret
push
enter
pop
pop
leave
stos
into
adc
and
add
out
xchg
sub
pop
xorl
push
sub
popf
in
sub
sbb
xchg
mov
icebp
xor
cmp
push
mov
fisttpl
push
or
ja
cwtl
pop
mov
dec
fucomi
or
and
mov
std
in
pop
pop
adc
lret
sub
adc
call
lcall
jo
sbb
jno
mov
aas
insl
xchg
jb
mov
ljmp
jp
psllq
xchg
lcall
scas
dec
iret
subb
fidivrl
sub
mov
push
mov
or
shrb
mov
push
fwait
cmpsl
cwtl
or
xor
ja
jne
lcall
push
faddl
add
es
or
mov
loopne,pt
cwtl
push
dec
fistpll
call
pop
rorb
and
sbb
lock
mov
dec
outsb
cmp
aaa
cwtl
jo
push
fildl
shlb
inc
or
add
aam
lahf
fdivrl
dec
cs
addr16
xchg
xchg
cmp
shl
mov
ja
sbb
push
add
jmp
leave
sti
loop
cmp
idivb
or
sub
in
or
das
mov
mov
daa
mov
jae
rorl
pop
adc
push
ficomps
outsl
js
dec
pushf
out
jbe
pop
xchg
push
adc
loop
sbb
les
and
or
lret
push
insl
imul
fwait
lcall
jo
add
lds
mov
pop
jae
jle
inc
dec
mov
cmp
cmpsb
sarl
dec
jecxz
jmp
sub
mov
jg
sub
inc
loop
sub
mov
push
je
loop
adc
lcall
movsl
sbb
fadd
jno
sahf
push
dec
xor
jecxz
pop
dec
dec
adc
or
mov
icebp
loopne
mov
xchg
push
aas
setge
cmp
and
in
jecxz
and
push
ficompl
mov
jg
adc
divl
jg
in
adc
cmp
add
addl
dec
sbb
mov
enter
mov
jae
in
vpshufd
push
loope
push
xchg
out
ss
and
push
sbb
mov
dec
adc
mov
xchg
mov
dec
pop
inc
je
subb
lods
add
or
cmp
movsl
jmp
xchg
xchg
test
aam
shll
or
sub
xchg
mov
sbb
pop
sbb
or
ret
sub
and
xchg
shll
cmc
out
and
xchg
inc
mov
fstps
loope
jg
jg
dec
into
mov
adc
lods
in
push
les
or
movsl
pop
jno
push
ret
pusha
jle
lea
pusha
cli
sub
and
imul
iret
lahf
adcl
sbb
lea
jmp
jae
jge
xchg
loop
xchg
and
sbb
sub
mov
enter
insb
cmp
cli
pop
xor
xchg
pop
mov
sub
in
xor
mov
out
aad
repz
iret
push
loop
dec
pop
js
or
mov
xchg
cmp
and
das
int3
adc
push
into
jl
xor
psubusw
shlb
add
aaa
jb
and
aaa
int
ss
lds
js
xchg
aaa
add
movsl
es
xor
out
mov
in
or
dec
pop
mov
add
xchg
iret
and
repz
pop
rcl
imul
ljmp
jge
mov
insb
cltd
or
cmp
xor
addl
in
ret
fscale
push
sbb
sahf
movhps
fildll
inc
in
in
pop
jne
xor
inc
push
outsl
or
push
xchg
jb
mov
pop
dec
pop
or
aaa
loopne
ja
in
mov
sbb
jb
mov
push
add
imul
test
std
inc
out
push
es
icebp
neg
repnz
cmpsb
sub
cltd
cmc
mulb
shl
push
jae
xchg
fists
pop
addr16
sub
jns
push
pop
or
dec
jmp
mov
jp
jne
les
mov
mov
fcomi
cmp
or
jp
loop
sbb
insl
enter
pop
dec
fisttpl
pop
and
and
sbb
xchg
sarb
fidivrl
mov
push
pop
scas
in
imul
push
mov
jecxz
arpl
ss
add
sub
xchg
mov
push
test
fdivp
in
inc
ret
and
push
jo
hlt
daa
loopne
xchg
pop
inc
out
out
into
aad
int
div
pxor
or
enter
inc
data16
sbbl
fsubp
dec
aam
cli
aas
push
popf
inc
scas
mov
adc
fldcw
push
mov
insb
fucomi
mov
lret
mov
fisubrl
arpl
cmpsl
cld
or
fbstp
and
lahf
jae
xchg
xor
dec
shrl
sub
or
std
jbe
fcompl
pop
pop
aas
mov
mov
int3
hlt
cmpsb
xor
daa
es
mov
push
bound
xchg
pop
aaa
xchg
inc
clc
sub
push
testb
mov
mov
test
je
and
mov
jns
stos
lcall
cmp
enter
lods
pop
lods
push
mov
push
mov
adc
pushf
jb
mov
inc
mov
add
lds
jl
mov
push
das
mov
popa
mov
push
mov
mov
adc
ss
mulb
adc
or
repnz
in
sub
rcrb
add
aas
sahf
adc
cmp
cli
push
fsubrl
outsl
je
pop
xchg
test
gs
test
push
pop
sbb
cmp
cmp
cmpsl
imul
push
into
dec
add
fdivs
mull
jmp
enter
mov
aas
adc
pushl
and
loop
sub
sbb
iret
stc
hlt
and
xchg
sub
inc
out
std
or
inc
mov
mov
ret
adc
pop
insl
sbbb
adc
or
add
and
jno
sbb
pop
or
das
dec
outsb
adc
add
popa
cltd
aam
push
data16
inc
or
xchg
ss
mov
fdivs
lret
nop
or
xor
iret
push
mov
lcall
es
jg
and
mov
aas
xor
test
jle
stos
push
je
in
int3
jbe
gs
pop
or
dec
pop
fsubr
movb
lcall
frstor
inc
xlat
out
cmp
mov
pop
xchg
andl
or
cmp
test
hlt
dec
in
inc
int3
push
xchg
fisttpll
movsb
les
xor
test
xlat
cmc
fwait
bound
bound
out
mov
das
xor
sub
ja
jg
repnz
pop
add
fwait
jne
xor
insl
cmp
cwtl
arpl
and
inc
adc
push
adc
fsubrl
adc
pop
call
mov
xchg
mov
fwait
inc
jne
sti
sbb
vandnps
aam
push
cwtl
loopne
adc
test
add
pop
mov
sub
dec
pop
mov
mov
mov
cmpsl
jae
stos
xchg
pop
mov
push
pop
xchg
pop
pop
pusha
pushf
sbb
inc
jg
or
adc
mov
jns
repnz
ljmp
jno
hlt
sahf
mov
cwtl
clc
push
xchg
mov
push
ds
es
vpsadbw
mov
setl
lret
movsl
xchg
roll
daa
imul
cmc
jo
icebp
int3
sbb
add
inc
push
cmp
adc
and
xchg
or
mov
lret
jnp
dec
fprem1
mov
icebp
lret
popa
mov
fcomps
rcll
mov
mov
pop
adc
xlat
add
xchg
push
mov
ja
push
stos
xlat
das
mov
je
mov
js
mov
hlt
xor
push
stos
dec
enter
scas
sti
in
adc
mov
sbb
mov
add
dec
icebp
jbe
pop
mov
stos
pop
decb
inc
pmaxsw
adc
loop
mov
dec
aad
inc
or
int3
aaa
inc
in
and
mov
pop
inc
test
fdivl
sub
cltd
push
sbb
mov
pop
lock
div
mov
fwait
jge
std
dec
cwtl
or
mov
dec
dec
mov
sbb
dec
imul
roll
sarb
jne
push
dec
cld
popa
int3
scas
adc
xor
mov
sub
dec
inc
and
arpl
cmpsb
cmp
mov
dec
popa
mov
cmp
push
js
mov
enter
or
add
mov
loop
je
out
adc
mov
cmp
jg
repnz
and
mov
fsubrl
jp
andb
into
sub
fcompl
mov
xchg
fldl
repz
adc
cmp
popa
and
nop
test
sahf
leave
mov
push
push
jge
repnz
jle
inc
pop
lds
dec
xorl
sbb
jmp
jle
pop
rorl
xor
push
inc
pop
lods
mov
mov
xor
xchg
mov
js
cmp
movsb
shlb
push
pop
pop
pop
xor
xchg
and
inc
dec
orl
pushw
ret
jb
stos
addb
cltd
sbb
mov
cmp
repz
sahf
jmp
repnz
push
xchg
xor
xchg
sub
and
xchg
gs
arpl
jge
mov
add
leave
incb
lea
pop
pop
inc
jg
popa
sub
push
pop
jo
jnp
sub
data16
cmpsb
shlb
pop
fs
loop
mov
sub
mov
cmpsl
dec
mov
jge
jae
push
das
push
mov
or
test
mov
rep
mov
sbb
xor
jae
sbb
das
xchg
or
outsb
stos
push
mov
sub
lret
scas
fstpt
fdivrs
push
std
mov
call
iret
dec
mov
adc
cld
cmp
xchg
pop
jae
push
in
lret
out
cs
aad
je
fiaddl
jo
sahf
push
out
dec
inc
sbb
lret
adc
cmp
rorl
xlat
popa
xchg
mov
jecxz
arpl
push
ret
mov
jle
jg
lret
jp
mov
scas
test
in
fs
mov
enter
and
inc
divl
xchg
fstpl
push
xchg
mov
mov
in
push
xchg
ss
push
mov
jp
add
imul
pop
imul
jb
sbbl
adc
cmp
push
sbb
cli
jl
add
lea
pop
loop
or
dec
jmp
orb
inc
ret
repz
add
mov
mov
dec
lcall
push
add
sub
sbb
inc
lret
mov
sub
cmpsb
test
add
mov
push
mov
sbb
xor
mov
push
aad
mov
mov
adc
pop
inc
pop
dec
out
je
and
inc
and
inc
pop
rorl
imul
dec
mov
cmp
int3
xor
cld
jno
out
or
pop
lret
mov
insl
aad
push
stos
int
aad
inc
cmp
ds
pop
addr16
fs
out
pop
scas
lret
dec
mov
jg
push
call
fs
cmp
dec
ret
sub
mov
mov
ret
icebp
pusha
scas
lcall
or
out
sbb
fs
jecxz
or
int3
mov
dec
fs
add
adc
in
cs
int
push
int3
dec
scas
and
nop
jg
jg
pushfw
fstp
jge
jo
mov
xchg
rclb
loop
dec
or
xor
inc
inc
cmp
mov
int
pop
sbb
push
push
fs
sub
cld
inc
or
cmp
dec
pushf
call
sub
fisubrl
sbb
add
adc
hlt
jo
in
pop
shll
cmpsl
push
mov
shl
shrl
push
cli
out
mov
into
cmp
aam
loop
fwait
rclb
leave
xchg
push
es
push
lds
sbb
fstps
shrl
mov
adc
es
in
ss
push
cmp
sbb
mov
pop
dec
adc
lcall
cmp
cmpsl
inc
jle
dec
lods
mov
pusha
jge
lock
inc
cmp
shll
aaa
inc
inc
mov
sub
push
mov
dec
enter
pop
xchg
xchg
shrb
aas
inc
dec
mov
test
xrelease
inc
ret
fcom
xchg
pop
popf
sbb
push
bound
dec
xlat
jne
and
shlb
dec
shl
lds
adc
sbb
lds
out
loope
xlat
push
pushf
ret
repnz
sbb
into
hlt
inc
test
sti
lods
aaa
lea
push
es
call
sti
jo
lcall
xlat
cli
push
test
iret
jmp
cmp
adc
hlt
sti
cmp
mov
fistps
pushf
adc
insl
std
push
ficoms
std
cld
sbb
hlt
pop
cmovge
cwtl
enter
cmc
add
lea
xchg
xlat
fcomps
outsb
ljmp
xchg
push
pop
dec
xor
stos
aaa
jo
mov
test
cld
jns
xchg
mov
mov
cmpsb
jno
bound
sti
or
ficomps
shlb
aad
inc
mov
mov
aas
dec
jg
push
and
xchg
setae
adc
incb
adc
fsub
test
lcall
inc
test
dec
loop
lahf
ja
addr16
dec
or
mov
xor
js
cmpb
add
push
or
shl
or
mov
jle
data16
mov
push
sbb
loope
mov
jae
cmp
inc
jo
and
lock
dec
cmp
sbb
push
xchg
jmp
pusha
loop
pop
jmp
mov
pushf
xchg
int
inc
and
push
bnd
movsb
iret
movsl
mov
ficoml
xor
mov
cmp
add
loopne
and
pop
inc
fistl
addr16
loop
xor
in
mov
pop
push
push
stos
cmp
adc
lock
sarb
aas
cld
movsb
dec
jecxz
lea
xchg
jp
and
cmovbe
sarl
test
sbb
mov
or
mov
push
inc
test
imul
ds
sbb
cmpsl
loope
inc
add
loope
pop
adc
leave
and
pop
xchg
addr16
xor
and
div
ja
jp
loope
add
cs
test
outsl
xchg
insl
rcrb
and
mov
mov
push
test
or
ja
sti
fs
imul
pop
lret
loop
icebp
into
out
repz
pusha
roll
dec
inc
lea
ljmp
cld
sbb
stos
lods
clc
add
enter
mov
test
jecxz
fwait
sbb
mov
push
push
mov
imull
aas
jecxz
es
lock
cmp
scas
aad
faddl
xor
jb
mov
cld
sub
mov
enter
jp
xchg
add
mov
addr16
fcompl
cmp
adc
pushf
xorb
test
xchg
out
outsb
mov
sahf
popa
xor
imul
cmp
into
popf
lcall
mov
lret
and
mov
jl
xor
in
inc
lahf
mov
or
xor
pop
shlb
inc
adcl
imul
pop
aad
cmpsl
std
add
es
mov
ja
jbe
in
jae
or
andb
lods
ret
pop
inc
loope
pop
rol
or
inc
pop
shl
or
lods
sti
leave
mov
jae
mov
adcb
mov
jge
shll
scas
scas
repz
mov
mov
imul
sarl
push
stc
dec
pop
push
adc
filds
mov
gs
mov
jmp
jmp
icebp
xor
js
pop
adc
sbb
data16
scas
subb
arpl
data16
pop
xchg
jg
int
pop
lds
popa
push
in
adc
adcl
call
mov
mov
jbe
je
mov
push
scas
stc
pop
mov
adc
xlat
stos
enter
xchg
xchg
ret
loop
andb
es
jne
js
or
hlt
add
into
push
mov
jg
popf
or
sti
iret
insb
movsl
enter
ja
inc
pop
jnp
ljmp
mov
repnz
nop
cmc
repz
jle
sbb
adc
pop
pop
fldcw
push
dec
sti
roll
pop
xchg
pop
inc
sbb
inc
mov
jecxz
daa
fisttps
hlt
add
xor
and
je
aam
mov
sbb
std
stc
push
adc
mov
inc
mov
mov
mov
imul
leave
mov
adc
out
add
or
mov
pop
das
pop
sub
imul
dec
add
inc
call
fwait
dec
inc
sbbb
xor
push
dec
stos
pop
cltd
sbb
loop
mov
fsub
xor
out
push
addr16
add
add
out
pop
mov
lods
mov
mov
push
loope
dec
aam
hlt
shlb
sti
fadds
insb
and
mov
outsb
jle
dec
scas
mov
je
sub
aad
mov
cmp
sub
xchg
and
add
insb
fcmove
mov
lret
add
rclb
mov
testb
js
mov
and
arpl
inc
out
pop
call
push
nop
push
dec
mov
jae
inc
rorb
add
jbe
mov
ss
push
cmpsl
jle
pop
into
mov
loopne
insl
lds
pop
fwait
push
push
out
insl
movd
fsubl
imulb
sub
lods
cmp
fwait
push
pop
adcb
cwtl
dec
xchg
clc
dec
cs
arpl
subl
mul
inc
push
sarl
mov
mov
addb
fisttps
imul
pop
js
inc
mov
fbld
inc
test
fldt
sub
pop
cmp
mov
add
xor
dec
xchg
bound
clc
add
and
mov
gs
mov
add
pop
sub
adcb
out
xor
add
sbb
mov
dec
test
xorb
mov
fstps
adc
add
mov
jne
in
jns
addr16
outsw
or
jecxz
adc
sbb
mov
dec
mov
push
sub
inc
loop
mov
aas
jge
xlat
inc
arpl
jg
aam
movsl
mov
or
outsl
jmp
jecxz
decl
incl
push
pop
aad
rcll
cmp
dec
sub
adc
mov
adc
jne
js
push
inc
cmp
sub
cli
pusha
cmp
cmp
notl
add
imul
outsl
push
sbb
jno
add
dec
mov
xchg
push
pop
je
enter
daa
pop
cmp
mov
jmp
add
or
jmp
mov
mov
int3
cwtl
je
ffree
cmp
rcrb
test
in
cmp
jl
mov
inc
or
push
sbb
mov
fisubl
xor
pop
dec
fcmove
lsl
and
xchg
adc
xorb
inc
mov
cmp
loopne
dec
cwtl
out
adc
pop
stos
xchg
mov
inc
sbb
sub
push
loopne
outsl
inc
test
aad
mov
cmp
rcrl
shr
sub
int3
ja
notl
stos
dec
xchg
xchg
jecxz
xor
push
shlb
pop
sub
xchg
jge
push
rolb
icebp
data16
and
mov
shrb
dec
adc
fwait
xchg
imull
cmp
sub
testb
loope
iret
int
cmp
mov
sub
cmc
fdivrs
lcall
dec
adc
vcmpps
fisubs
cld
pop
mov
jle
inc
mov
aad
add
pop
je
adc
xchg
and
mov
popf
jne
sub
dec
mov
fwait
xor
xor
jae
nop
aam
stos
lods
test
sbb
push
out
pop
out
pop
and
lret
cmp
cwtl
orb
inc
and
loope
push
filds
dec
mov
mov
mov
cmp
jle
or
xor
imul
in
cmc
out
je
dec
popa
arpl
enter
pop
or
lds
cmp
test
dec
mov
dec
out
iret
fidivl
add
movsl
data16
jne
addr16
lea
stos
mov
rcl
cmp
rcll
shl
ja
test
add
xlat
jno
add
mov
adc
aas
pop
mov
aad
mov
fldcw
lret
mov
stos
mov
pop
pop
fldenv
push
add
pushf
sarl
and
mov
jno
dec
sbb
popf
sub
shl
gs
out
pop
sbb
lahf
mov
push
adc
int
cmp
fstpl
ret
pop
jno
pop
insb
bound
xchg
stc
mov
cld
dec
fistpl
sub
mov
in
xchg
xchg
pop
adc
jmp
faddl
ja,pn
pushf
fucomi
add
out
cmpb
ret
nop
lcall
xchg
dec
fildll
shl
add
cmp
or
inc
xchg
or
add
es
jg
fisubrs
out
mov
xchg
loop
into
mov
inc
add
popa
pop
jno
movzbl
xor
sub
mov
in
ficomps
daa
insb
mov
adc
or
mov
cmp
inc
dec
lret
pop
mov
into
mov
lods
dec
add
sub
imul
push
adc
pop
xor
pop
xchg
imul
dec
lea
ds
mov
rcrl
pop
pushf
lds
jns
loope
pop
repz
jmp
ss
icebp
out
xor
stos
sahf
mov
mov
fwait
push
mov
js
cli
ljmp
lcall
add
cmp
jge
xrelease
mov
inc
or
or
outsl
sahf
into
out
pop
out
push
push
jne
cmp
call
mov
fidivl
in
sub
fistl
leave
movsb
loopne
lcall
push
add
push
sub
test
xor
mov
and
and
js
sbb
lcall
adc
rcll
or
mov
jae
adc
jg
xchg
sar
enter
and
insb
pop
daa
mov
push
rclb
lcall
cmpsb
cli
jmp
scas
test
push
dec
pop
movsb
test
inc
mov
orl
xor
cmpsl
xchg
pop
push
push
mov
ja
mov
ret
jle
daa
xlat
cmpsl
popf
xchg
jp
mov
push
jo
fldt
xor
mov
lret
inc
iret
loop
in
xchg
mov
mov
sub
cmc
ja
jmp
adc
popa
lcall
je
jnp
loope
push
pusha
cmp
sahf
int
xchg
push
jno
pop
inc
pushf
pop
mov
add
stc
gs
js
dec
rcrl
push
mov
out
and
ret
jo
pop
adc
dec
loopne
test
cmp
sbb
pop
xchg
ret
jecxz
ja
je
push
iret
addr16
jbe
ret
inc
ja
xor
int
xor
inc
pushf
or
xchg
cmp
adc
stos
ret
psrlq
inc
inc
cs
mov
xor
imul
inc
inc
ret
clc
imul
testb
mov
std
daa
repz
fdivrs
ss
sarb
jb
rcrl
and
add
cmpsl
in
and
sbb
cmp
sbb
cmp
pop
mov
adc
and
push
sahf
xchg
aaa
xchg
mov
cs
inc
clc
cld
aam
out
mov
loope
int
mov
adc
and
mov
xchg
incl
push
lds
lea
dec
mov
cs
cmp
shrb
pop
imul
into
test
imul
es
ds
add
test
cmpsb
data16
movsb
mov
push
js
leave
inc
push
push
stos
jo
push
mov
shlb
push
add
rolb
dec
pop
std
pop
stc
pop
push
jl
stos
adcl
xchg
add
adc
dec
cld
ret
lods
mov
stos
enter
or
add
sub
sub
inc
sub
and
xor
lret
neg
bound
add
daa
xchg
jecxz
lods
fnstenv
pushf
insl
std
lahf
xor
testl
or
xchg
pop
dec
int
les
cmpsl
xor
lcall
and
addr16
stos
sbb
push
push
cmp
xchg
jmp
jmp
inc
cmp
xlat
cmc
arpl
xchg
repnz
inc
mov
push
pop
lea
andl
push
cmp
lods
jo
sbb
xchg
sub
adc
mov
cmp
insb
jle
inc
add
cli
repnz
mov
jns
or
sub
dec
ffreep
in
xchg
and
cmp
mov
aas
test
xor
andnps
cs
push
ljmp
mov
es
add
cwtl
out
adc
mov
sub
enter
das
mov
ret
dec
sub
adc
xchg
mov
pop
add
test
daa
cltd
adcw
fldcw
adc
shlb
mov
into
pusha
cmpsb
jg
hlt
cld
fucomip
xlat
mov
fcoms
xchg
ficoml
aas
lahf
sbb
popa
pop
aas
ds
dec
mov
cli
and
shr
out
xchg
insl
push
xchg
ja
in
jmp
mov
jmp
cld
pushf
cwtl
cmp
inc
xchg
add
scas
call
pop
dec
pop
xchg
adc
mov
cmp
sub
fcomip
int
insl
xor
cmp
xor
pop
lods
pop
adc
rolb
lahf
testl
sub
cwtl
insl
dec
adc
pushf
xor
fsubs
ror
xor
sub
aas
ss
std
das
fiaddl
not
cmp
cmpsl
mov
loop
mov
fisubl
sub
mov
sbb
xor
pop
cmc
dec
mov
xor
outsl
jecxz
push
mov
rclb
nop
xor
pop
mov
dec
test
je
cmpsl
dec
imul
sbb
test
mov
jp
mov
aas
test
lcall
ficoms
shll
shl
add
pop
mov
push
fcomps
cld
test
jbe
mov
sbb
cmp
push
push
xor
mov
add
rcr
lahf
lahf
enter
dec
pop
ss
sub
fwait
call
xchg
test
xchg
mov
mov
ja
es
outsb
fisttpll
test
pop
mov
and
inc
pop
jne
mov
loop
dec
inc
add
lret
subb
aas
int
loope
cli
mov
mov
add
test
outsl
xchg
mov
mov
fwait
mov
int3
addr16
insb
daa
xchg
shll
ficomps
fwait
es
sahf
dec
scas
repz
pusha
and
movsl
nop
icebp
jmp
cs
sbb
clc
enter
jle
inc
sub
in
pop
and
sub
mov
jae
les
bound
mov
out
dec
push
mov
jp
jp
cli
xor
mov
fidivrl
xchg
js
fimuls
mov
xchg
pop
inc
test
mov
cmc
test
mov
mov
sub
push
xor
lret
and
xor
sub
or
aaa
add
notb
lret
mov
or
mov
sbb
xchg
mov
jbe
sbb
dec
cmp
rorb
pop
mov
xor
out
sti
lods
arpl
jae
mov
insb
xchg
rcrb
lret
cld
or
mov
loopne
repz
idiv
sbbb
xor
int
ret
xchg
inc
lods
test
lea
pushf
and
in
mov
xchg
pop
push
inc
xchg
cmc
push
ret
inc
xchg
cltd
jecxz
fwait
lret
daa
and
jno
aam
stos
clc
sbb
inc
inc
jns
dec
add
xor
imul
sti
mov
lea
loope
sub
test
fdivl
arpl
mov
inc
js
xchg
roll
sub
in
cmp
std
add
adcb
clc
rcll
mov
pop
movsb
out
push
clc
in
xchg
std
aad
mov
adc
push
xchg
sarb
jecxz
adc
ficompl
stos
jecxz
mull
icebp
xchg
adc
loope
rclb
xchg
xchg
fbld
xchg
loopne
sub
jns
out
das
push
add
sbb
xor
sahf
add
jl
xlat
out
dec
test
xchg
into
xchg
pop
loope
stc
fwait
stos
adc
xor
pop
fldcw
rolb
mov
mov
outsb
cmpsl
mov
mov
mov
inc
out
mov
pop
cmpsb
push
jns
push
ljmp
mov
cmc
in
pusha
scas
pop
adc
into
push
push
pusha
sbb
jb
pop
pop
sbb
and
jnp
sti
jne
cwtl
inc
jae
lcall
and
mov
and
jle
push
jo
clc
out
out
or
cwtl
orb
sbb
sub
jecxz
pop
cwtl
ret
movsl
cld
mov
add
or
jge
xchg
iret
cmp
dec
dec
add
mov
addl
push
add
push
test
int3
sub
mov
cmpsb
test
lahf
add
push
out
mov
push
dec
dec
jns
cmc
mov
xor
adc
cmp
add
cmpsl
jb
mov
inc
jo
push
fildll
xchg
xchg
push
loope
scas
test
stos
push
xor
jae
xchg
xchg
mov
jp
cli
in
aas
pop
clc
xor
sub
mov
ret
xchg
loop
push
mov
sbb
mov
sub
cltd
bound
adc
nop
imull
popf
jb
push
flds
sahf
test
adc
cmpsb
hlt
cmp
clc
pop
das
pop
test
mov
sub
or
cmp
sbbb
pop
pop
adc
cmpsl
pop
push
sbb
out
sbb
cld
lahf
add
cmp
in
out
jo
cli
cmp
cmc
and
add
xchg
pop
or
and
or
jns
sub
rcr
sbb
ret
sar
mov
orb
repnz
lods
sti
xchg
inc
xchg
ss
lret
test
sahf
mov
into
or
inc
jle
inc
int3
jecxz
and
adc
jns
mov
push
and
push
ret
xchg
push
adc
pop
aam
loope
ret
jl
mov
es
clc
dec
adc
aam
push
in
insb
fisttps
xchg
push
cwtl
aaa
and
push
into
or
xchg
xor
add
jbe
lods
mov
add
dec
rorb
into
sbb
stos
and
inc
adc
repz
push
ds
add
das
sub
cmpsb
in
cwtl
sub
hlt
scas
cmpsb
sbb
lret
lds
mov
idivl
test
aas
subb
sti
clc
xchg
jb
out
xor
sub
test
lret
cmp
push
test
inc
clc
sbb
xor
sbb
mov
ja
pop
inc
jnp
pop
cmp
add
lret
iret
jge
inc
add
fnstcw
and
pop
int
addl
fnstenv
cmp
insl
lock
dec
dec
sbb
orb
mov
mov
in
mov
out
fisubl
mov
mov
mov
xlat
mov
scas
mov
sbb
pusha
sbb
cmp
sbb
mov
or
or
sub
imul
jle
aad
jo
das
rcll
xor
cli
scas
adcb
dec
out
dec
push
cmpsl
int
pushf
xor
mov
jp
ret
call
arpl
push
mov
push
jmp
vshufps
hlt
jge
push
aad
andl
lea
cmp
push
jmp
imul
mov
xchg
or
push
xor
lds
mov
dec
cltd
inc
call
pop
lcall
or
push
lea
cmp
imul
xor
mov
fiadds
dec
mov
pushl
mov
mov
fidivrl
loope
inc
push
cmpl
cmp
lods
push
paddd
adc
cmp
xor
aaa
test
cwtl
cltd
lahf
aaa
jle
xor
jmp
pushl
orb
jmp
addr16
jg
mov
les
xor
push
xchg
loope
outsl
dec
sbb
xchg
inc
lahf
mov
fsubrs
lds
insl
popf
adc
ret
mov
mov
out
lret
xlat
inc
inc
pop
mov
and
push
inc
frstor
sub
fisubs
cmc
adcl
mov
adc
ss
cmp
xchg
sbb
add
popa
loope
dec
mov
stc
stos
push
int
push
cmp
rep
mov
mov
je
out
shll
gs
pop
mov
push
jmp
xchg
pop
les
add
xor
in
jbe
mov
mov
ret
fwait
cmp
jb
mov
mov
int
pop
es
ja
out
enter
xlat
loopne
jae
je
xor
sbb
xor
loop
ffree
mov
push
cmp
add
test
pop
jg
jle
sbb
jecxz
imul
and
mov
pop
pop
test
jnp
inc
out
inc
or
cmp
mov
jl
adc
cmp
mov
jmp
xor
mov
inc
jge
rcll
insb
shlb
insb
hlt
jge
jo
lret
sbb
cmp
push
pop
mov
or
push
loopne
pusha
sbb
xchg
mov
push
cmp
adc
sahf
inc
pop
sbb
mov
jg
fwait
xorl
mov
mov
in
scas
push
inc
xchg
in
or
push
push
sahf
and
push
lods
pop
adc
movsb
mov
jno
pop
xchg
dec
call
rorl
idivb
call
stos
pusha
dec
fidivrl
lahf
xchg
dec
loope
jns
jge
cmpsb
cmp
xchg
popa
pop
lret
fldcw
pop
push
loope
dec
push
sbb
call
mov
or
jg
into
push
sub
movsb
jmp
sahf
jle
push
add
pop
call
pop
ret
ret
sbb
inc
out
cli
xchg
or
aad
rcll
add
pop
int
pop
jmp
out
scas
push
daa
out
dec
stos
add
jle
adc
sub
flds
mov
popa
das
data16
shll
mov
pop
lret
inc
jbe
xor
pop
mov
jmp
or
cmp
popf
repz
stos
mov
mov
or
adc
bound
xor
mov
push
popa
orl
mov
rol
stos
mov
inc
pop
inc
aaa
jg
insl
xchg
loope
mov
aam
xchg
mov
andb
push
cmpsb
lods
sub
push
pop
cmp
jg
fcomip
rorl
push
and
das
popl
mov
mov
xor
fiaddl
add
mov
jae
int3
push
mov
imul
push
push
enter
push
lret
scas
rcrl
movsb
pop
xchg
sbb
push
mov
mov
out
push
sub
jno
fldcw
push
mov
pop
mov
lret
mov
leave
mov
add
xor
mov
sub
mov
leave
jnp
insb
loop
repnz
fistl
in
orb
repz
fmull
addb
add
mov
pop
xchg
popa
sarb
repnz
and
push
add
add
mov
xor
xchg
sbb
xor
nop
mov
sbb
jmp
jns
jl
dec
pop
sub
loope
in
xor
sqrtps
lods
stos
jne
fidivrl
pusha
mov
insb
dec
pop
sbb
jno
pop
iret
pop
add
pop
push
mov
imul
rorl
mov
jnp
add
fisttpll
adc
xor
mov
push
mov
adc
cwtl
clc
dec
jg
xor
mov
negl
pop
mov
and
fdivl
incl
sbb
subl
add
int3
cmp
xchg
bts
inc
inc
outsb
xor
outsl
mov
cmpsl
lods
and
test
das
cmp
cld
mov
mov
insb
cwtl
pop
add
mov
adc
jecxz
js
dec
mov
sti
insl
stos
jno
das
cs
jbe
jne
aaa
repz
xor
push
cltd
test
push
adc
push
movsb
pop
cmp
mov
mov
and
push
sahf
scas
dec
ret
mov
mov
sub
rcll
ficoms
cltd
cmpsb
in
and
sub
loopne
ss
fnsave
mov
scas
mov
imul
dec
dec
cmpsl
xchg
lock
fildl
je
xchg
sub
xchg
jae
push
dec
fadd
add
or
cld
adc
mov
jnp
in
jg
jl
aad
cmp
cmp
pushl
mov
inc
cld
call
ret
mov
push
inc
imul
xor
fidivrs
cmp
ret
loopne
sbb
fwait
pop
bound
mov
push
inc
mov
and
test
push
sbb
push
imul
insb
mov
ja
add
icebp
and
in
and
shrb
adc
lahf
lods
jb
sub
dec
andl
out
test
pop
sub
aaa
xor
mov
fmuls
mov
in
or
test
jge
ljmp
int3
mov
sub
xor
dec
jecxz
stos
addl
pop
add
ds
pop
fbld
bound
dec
gs
sub
int3
shl
sti
xchg
bound
mov
add
dec
stos
jns
fistpll
mov
add
jmp
jmp
dec
mov
int
lret
push
testb
test
mov
mov
or
push
testl
insb
add
dec
push
push
mov
dec
lret
mov
xchg
lcall
adc
pop
pop
movsl
lods
sub
or
in
ljmp
repz
dec
jmp
and
stc
mov
jb
sub
dec
or
out
mov
jp
adc
fstl
pop
jnp
or
jge
xor
jne
imul
movntq
push
loopne
call
notb
jp
xchg
lret
aaa
add
mov
ss
int3
inc
jge
jl
jp
push
xchg
mov
fdivrl
sbb
ljmp
movl
ficomps
pop
adc
and
pusha
pop
add
lret
mov
add
lods
pop
imul
add
cli
dec
arpl
pop
in
enter
dec
push
push
add
cmpb
dec
inc
jmp
mov
stos
cmpsl
fisubrs
test
cmp
sbb
aam
cmovns
adc
adc
mov
out
push
sbb
idivb
jae
loop
and
mov
pushf
pop
push
stos
sbb
rorb
xchg
xor
js
pop
fsubrs
fcmove
shrl
push
cmpsl
mov
lcall
mov
loopne
in
js
jge
cmp
jbe
les
hlt
loopne
popf
mov
stos
mov
or
lret
and
scas
or
lret
and
dec
cmp
push
jg
in
mov
pop
test
fwait
mov
push
addb
dec
shrd
bound
lods
in
xor
xor
dec
jmp
sbb
popa
mov
jbe
scas
cmp
or
pop
and
imul
dec
mov
sahf
cmpsl
sarl
inc
ror
fbld
jae
mov
clc
and
inc
clc
or
cld
mov
mov
sbb
scas
testb
jb
mov
fs
cmp
xchg
outsl
jbe
pop
mov
pop
jg
lahf
in
xchg
mov
dec
test
jo
data16
inc
xor
movsl
scas
hlt
movsl
fimull
in
xchg
mov
jle
xor
pushf
das
std
xchg
pop
fcomp
cmp
inc
jne
cmp
inc
mov
sahf
scas
mov
mov
pop
jmp
addr16
push
mov
mov
push
dec
mov
pop
data16
int
fisubrs
mov
dec
lahf
or
push
jl
jb
lea
test
iret
pop
mov
dec
xchg
popa
mov
push
repnz
cs
out
push
and
bound
mov
cld
mov
xor
pmulhuw
dec
mov
jne
bound
and
jmp
stos
cmp
arpl
nop
mov
jae
or
xchg
sbb
pop
ret
in
mov
cmp
or
sahf
subb
mov
inc
jmp
cmp
ror
sbb
lods
xchg
ja
xchg
mov
adc
adc
ss
add
push
sub
int3
gs
cli
jge
or
xchg
mov
xor
pop
adcb
shll
push
loope
stos
cld
fdivrl
gs
andnps
mov
jno
lahf
add
jmp
aas
jno
test
int
sahf
jno
cmp
add
outsl
xor
mov
popa
jns
and
mov
xchg
sbb
divb
cmp
in
mov
cmp
pop
das
loop
mov
arpl
sub
hlt
ss
or
pushf
addb
inc
jbe
adc
sbb
stc
and
rol
es
or
std
push
inc
shlb
test
mov
out
ror
mov
shll
pop
jmp
cmp
movsb
fs
mov
repz
mov
mov
in
cmp
imul
inc
xor
push
or
inc
cmp
decl
int3
pop
std
mov
hlt
cmp
les
in
aam
fdivr
js
mov
pop
pop
or
movsl
and
pop
test
mov
ret
movl
sub
adc
mov
gs
pop
cmp
sahf
push
sbb
xchg
jle
fcoml
mov
mov
mov
add
add
dec
popa
xlat
sbb
xorl
adc
repnz
jecxz
cmp
dec
sbb
and
mov
mov
test
pop
test
jbe
outsb
adc
fsubr
mov
adc
fisubrl
dec
jnp,pn
clc
clc
cmpsl
into
outsl
fwait
pusha
lret
dec
ror
push
sbb
adc
mov
cmp
andb
daa
adc
xchg
popw
imul
push
mov
clts
dec
out
cs
dec
cld
fs
addr16
data16
or
or
movsb
addr16
xor
cmpsb
and
push
push
push
les
jecxz
repz
or
popf
add
int3
inc
mov
mov
test
adc
lret
daa
jae
mov
or
or
inc
lahf
adc
dec
mov
mov
clc
push
mov
imul
jno
pop
jp
or
out
cmp
fsubs
lds
lock
add
jo
icebp
fdivl
mov
in
xor
jbe
xchg
mov
scas
stos
aas
and
jo
fstps
ret
add
rolb
cmpsb
jbe
fwait
xchg
int
inc
pop
xor
subl
scas
iret
mov
aas
cmp
and
mov
lds
ja
outsb
test
add
pop
pop
and
lods
or
call
inc
or
nop
xchg
xor
stc
dec
cmp
inc
repnz
pop
in
cs
jns
sbb
daa
es
pushf
std
pop
mov
pop
jmp
cltd
out
daa
sbb
xchg
andb
insb
pop
roll
mov
test
in
addr16
rorl
iret
loopne
mov
jg
dec
stos
insb
push
addb
addr16
dec
jge
fsubrp
mov
adc
xor
jp
pusha
divb
enter
scas
stc
cmp
outsb
ss
adc
mov
adc
int3
icebp
pop
mov
sahf
insl
jecxz
push
pop
cmp
add
or
mov
jnp
mov
and
inc
adc
or
pop
lods
inc
lret
add
icebp
lock
jmp
jmp
sbbb
mov
jecxz
ror
lret
bnd
adc
popl
fiadds
repz
push
and
arpl
gs
push
sarb
fs
xor
xor
jp
add
or
notl
mov
jp
cld
mov
mov
movsl
and
jae
jecxz
shll
or
mov
sbb
cmp
cs
mov
leave
std
push
cmp
sar
inc
add
push
popa
outsb
mov
fsubr
subb
insb
sbb
addl
inc
lahf
rcll
sbb
mov
jbe
shrl
push
fstl
cmp
push
sbb
jle
mov
push
aam
xchg
in
sti
sub
adc
and
rorl
mov
jo
icebp
cltd
dec
mov
pop
jo
movsl
mov
mov
mov
mov
mov
cmc
mov
repnz
cltd
fists
jae
push
mov
mov
jg
out
fsts
cmpsb
lds
inc
jo
hlt
stos
xor
cltd
fldcw
nop
ret
scas
or
int
int
xor
adc
xchg
in
loopne
aad
xchg
mov
lods
or
lahf
rol
pusha
loopne
mov
bound
imul
jmp
leave
daa
adc
or
clc
popa
loop
sub
inc
movsl
test
sbb
fistps
jle
adc
mov
or
mov
inc
roll
push
test
sbb
and
mov
sbb
hlt
stos
adc
in
out
orb
inc
call
mov
xlat
jne
das
and
dec
lahf
push
ret
push
ror
outsl
cwtl
lret
pop
push
adc
push
shlb
add
ret
adc
in
and
sub
in
mov
or
jae
daa
dec
pop
out
mov
fisttpl
cmp
pop
dec
addl
jno
repnz
fisubrs
and
push
out
xchg
push
repz
loopne
push
push
ljmp
addl
fs
lock
mov
inc
push
sbb
mov
roll
shlb
jbe
aas
insl
lea
cwtl
ljmp
add
imul
pop
cmp
pop
and
ror
xor
adc
push
test
adc
jae
out
mov
sub
in
sahf
and
popf
enter
idiv
inc
push
xor
in
xchg
shl
mov
cmpsb
hlt
fsubs
das
fildl
push
sub
sbb
adc
dec
fdivl
dec
push
mov
fisubl
and
leave
sub
xlat
aas
popf
ljmp
cmp
dec
mov
mov
cmpsl
idivl
cli
int3
xor
mov
push
push
daa
mov
pop
pop
inc
sub
jmp
adc
cmp
sub
dec
lods
cltd
ss
cmpl
mov
pop
addr16
xor
push
pop
roll
adc
pop
out
or
add
jmp
in
pop
mov
cwtl
gs
xor
jne
mov
and
pop
in
xlat
push
mov
mov
cmp
popf
ljmp
mov
pop
insl
idivb
jnp
inc
out
or
rcr
pop
rcrl
pop
mov
dec
or
sahf
ficompl
aam
dec
testb
push
lods
ret
insl
jb
in
jb
or
nop
clc
jg
pop
mov
xchg
std
mov
push
add
and
mov
adc
lods
bound
imul
pop
js
mov
xor
int
sbb
sahf
dec
les
adc
icebp
push
or
in
les
scas
sub
push
jge
call
mov
ljmp
je
mov
insl
pusha
stos
xchg
jno
addl
mov
xor
mov
sbb
cmpsb
dec
lds
movsb
push
sti
mov
jne
rclb
mov
lods
mov
jp
mov
or
jbe
push
mov
jae
sub
ds
xor
jmp
jp
stos
and
and
fldl
xor
pop
adc
xchg
sbb
gs
and
cld
sbb
lea
ficomps
imul
repz
enter
add
or
xor
stc
fcomps
push
pop
xchg
jl
push
lret
sahf
dec
mov
cld
xchg
lds
pop
mov
adc
dec
pop
test
xor
or
fcomi
pop
fsubrl
xor
pop
mov
jbe
mov
ljmp
sbb
pop
repz
sarl
out
add
leave
or
sahf
inc
cld
mov
push
fsubl
xor
jo
or
iret
jo
push
mov
add
sti
icebp
sbb
xchg
repnz
rolb
and
cmp
mov
pusha
test
sub
push
dec
sbb
mov
inc
popa
aam
pop
daa
push
cmc
rcll
and
sub
fwait
leave
xor
jo
adc
repnz
pop
hlt
stc
add
or
push
iret
pop
ss
mov
cwtl
push
rorl
add
cmpsb
sbb
xor
movsb
jmp
jno
adc
movsl
push
adc
pop
pushw
dec
dec
jb
adc
push
shr
scas
sub
rorb
and
or
sti
mov
inc
adc
mov
push
xor
jno
mov
aam
dec
insb
out
cmp
or
mov
jnp
call
jge
dec
popf
nop
pushf
leave
jbe
loop
cs
xchg
mov
stc
mov
jp
mov
jne
sub
shlb
xchg
mov
pop
mov
and
sti
cs
and
mov
jmp
nop
jp
pop
cli
orb
mov
sbb
imulb
ror
and
fdivr
mov
mov
inc
pop
push
int
pusha
popa
mov
xorb
cmc
lock
push
fdivrs
bound
push
jmp
scas
std
pop
pop
dec
shl
movsb
sub
inc
sub
arpl
test
dec
push
bound
gs
div
aam
ret
out
adc
and
imul
inc
ljmp
shrl
test
mov
sbb
sbb
adc
push
xchg
movsb
mov
adc
fstpt
xor
loopne
sbb
xchg
addb
out
dec
loope
cmp
leave
pop
push
idiv
add
jge
sub
add
sbb
jne
pusha
cld
xchg
cld
mov
insb
in
lods
js
pop
jns
sub
movsb
stc
fidivl
and
rolb
nop
mov
add
out
in
jno
push
lods
loopne
mov
cmpsb
hlt
pop
subb
dec
ffreep
ficoml
mov
pop
cmp
iret
fsubrp
movsl
adc
adc
bound
cmc
sbb
adc
popa
xchg
add
lret
iret
nop
inc
hlt
jmp
jp
insb
movsb
outsb
sub
xchg
cltd
orl
xchg
rcrl
mov
insb
push
adc
je
sti
bound
jo
xchg
push
cmpsb
mov
iret
jns
dec
nop
fs
pop
push
fcmovnbe
jp
pushf
xor
fnsave
xor
adc
push
adc
xlat
stos
cmp
push
jge
adc
daa
subb
ds
cmpsl
cmp
loop
loop
push
sbb
push
loop
xor
dec
jns
or
adc
xchg
adc
add
xor
xor
ljmp
jmp
mov
imul
aam
push
in
push
xchg
sbb
jmp
loope
scas
scas
sub
aas
scas
inc
and
es
mov
adc
jl
stc
arpl
popf
jle
mov
pop
cli
ret
out
xchg
add
add
fwait
pusha
rorb
daa
les
les
fldlg2
iret
sub
mov
push
and
sbb
cwtl
pop
inc
lods
dec
jge
or
xor
lock
andb
mov
out
dec
inc
rol
cmp
xchg
xor
xchg
lds
ljmp
dec
or
cmp
cli
push
repnz
xchg
push
test
les
mov
or
jg
inc
in
repnz
jmp
mov
jl
xchg
xchg
jns
fcomps
and
scas
sub
xchg
test
cmpsb
sub
mull
js
xchg
testl
ror
fnsave
faddl
cmpsb
xchg
mov
test
outsl
call
push
int3
pushf
dec
push
dec
xorl
mov
inc
push
add
mov
mov
adc
cwtl
imul
jae
das
sbb
lock
add
lret
mov
aam
js
aas
push
sarb
imul
leave
inc
push
call
cmp
xchg
lods
push
push
sbb
sub
push
and
sbb
add
cmc
mov
xchg
pop
jecxz
adc
decb
cmpsl
mov
add
loope
sbb
in
int3
xchg
mov
inc
dec
mov
subb
mov
cli
cmc
mov
xor
adc
xchg
add
xchg
push
pop
std
cmp
addr16
nop
ja
fildll
jg
inc
inc
lods
sar
xchg
ja
or
cmpsb
daa
jge
fisttpl
jbe
imul
inc
cmp
out
and
adc
lock
cmpsl
add
mov
adc
mov
cmp
xor
sub
popf
ret
movsl
imul
in
jbe
cmc
sbb
imul
push
push
fwait
cmpsb
cmpsb
pushf
adc
inc
mov
xor
addr16
push
xchg
imul
cld
mov
xchg
cmp
jmp
testb
rcll
mov
push
sub
lahf
popf
cmp
adc
xor
addr16
xchg
mov
push
popf
adc
add
mov
mov
pop
sbb
ljmp
fdivrs
lock
and
mov
mov
cmpsl
cs
outsb
ret
push
mov
repnz
cmp
mov
jbe
xchg
ret
insl
cmp
sub
ret
lcall
inc
xchg
out
dec
mov
cmp
pop
fwait
jne
pusha
leave
lea
add
mov
xlat
lock
mov
loop
stos
and
sbb
or
call
mov
or
jge
xchg
ret
cmp
into
xor
dec
and
mov
mov
inc
or
and
pop
scas
push
hlt
out
rclb
push
xchg
pop
mov
shll
or
inc
pop
gs
add
dec
mov
adc
xchg
fistpll
out
and
xor
outsl
sub
push
xchg
xchg
ret
inc
data16
pop
es
adc
jb
cmp
aas
inc
cmp
rcrb
shrb
fcmovu
btrl
sub
xchg
jo
jae
cmc
and
lods
pushf
int
sub
inc
lds
xor
sbb
rcrl
divb
ficomps
jg
and
fsub
push
adc
jbe
cwtl
repnz
loope
fbstp
mov
adc
imul
mov
sub
mov
adc
test
mov
in
dec
fidivs
xor
jo
je
sub
clc
daa
sti
inc
sbb
stc
sahf
adc
push
pop
push
and
xor
and
sbb
mov
adc
xchg
xchg
pushf
xchg
mov
shrl
stos
loop
lock
push
mov
in
daa
rcrb
int
mov
iret
outsb
popf
mov
add
add
fistl
fisttps
xor
mov
loop
daa
mov
cmp
pop
test
cwtl
lcall
jne
xor
scas
daa
cltd
fimull
xor
add
sbb
test
out
push
repz
outsb
and
imul
inc
and
add
adc
sbb
cmp
and
bound
pop
ret
mov
push
mov
xchg
mov
out
shll
stos
lahf
aaa
lods
lea
nop
jle
jno
outsl
mov
sbb
loop
mov
cmpsl
addb
dec
xchg
and
fcomps
dec
popaw
fdivs
pop
aaa
mov
inc
push
lds
js
scas
arpl
pushaw
cmpsb
cmp
pop
cmpl
pop
fxch
lods
push
mov
mov
mov
ret
inc
xchg
inc
dec
pop
inc
jmp
adc
test
ret
or
mov
or
imul
fcomi
mov
fxch
adc
js
iret
std
dec
mov
push
lcall
lds
xor
mov
xchg
nop
hlt
aam
arpl
loopne
test
sub
ljmp
sbb
xchg
pusha
mov
lret
xor
pop
mov
xchg
sub
and
ds
or
jecxz
xchg
lds
out
add
out
push
dec
and
mov
icebp
js
xchg
std
imul
pop
loope
mov
dec
mov
ret
inc
mov
cmp
lcall
mov
cmc
addl
add
shll
jp
push
xlat
mov
inc
pop
mov
mov
or
mov
inc
stos
mov
int3
pop
inc
sbb
jge
out
jbe
jmp
imul
out
jne
leave
clc
xorl
add
out
imul
add
sub
ss
dec
test
bound
in
jne
in
add
cmp
hlt
in
ds
orl
test
or
mov
and
pushf
popf
adc
push
mov
fldcw
shrb
jle
ret
jbe
das
push
scas
jecxz
addr16
leave
mov
rcr
les
pop
and
add
dec
xchg
xlat
mov
mov
in
lods
std
add
xor
lret
add
mov
mov
mov
mov
jmp
in
push
arpl
mov
dec
push
dec
mov
add
jno
dec
pop
sub
popa
inc
je
shr
cmp
jl
cli
cmpsl
push
mov
pop
call
popf
and
fs
push
addb
fucomi
inc
das
cmp
and
pop
imul
jge
cmp
pop
int
sub
jecxz
fwait
or
jl
ja
addb
pop
push
ljmp
adc
ljmp
mov
pop
enter
andl
imul
dec
fcmovb
mov
aad
negl
mov
aaa
inc
test
sahf
daa
push
leave
add
mov
sahf
enter
mov
inc
sbb
mov
mov
lahf
int3
imul
mov
jbe
pop
dec
mov
movsl
or
and
cmp
lea
jne
in
mov
movsl
add
adc
pop
jo
push
dec
push
stos
cltd
outsb
repz
mov
test
sarb
ja
sub
add
dec
mov
xchg
add
in
cmpsl
imul
js
int3
pop
scas
repz
out
xchg
out
mov
in
add
or
jne
repnz
mov
loope
aaa
fisttpl
insb
mov
imul
movl
rol
cmp
sti
xor
dec
pop
adc
xor
mov
lds
rolb
fidivrl
add
jle
ljmp
imul
mov
test
jl
inc
loop
dec
adc
pusha
xchg
push
pop
arpl
mov
loope
enter
in
scas
xor
cmp
movsb
sahf
push
and
push
clc
and
inc
push
lret
call
cmp
inc
pop
lret
ds
adc
test
xchg
fsubr
dec
xchg
cs
xor
inc
loopne
sub
sub
sbb
loop
push
repz
out
outsl
pop
sub
clc
movsb
int3
shrl
xchg
insl
lock
xchg
mov
mov
xchg
push
sub
ds
jns
jp
loopne
inc
jmp
shrb
mov
and
shrl
pop
test
xchg
arpl
and
enter
cmpsb
lock
ret
push
outsb
call
andb
shrb
xchg
xchg
inc
jecxz
popa
popf
add
repnz
xor
jae
xor
mov
nop
sti
inc
movsl
fcmovne
push
or
out
jl
fwait
inc
dec
add
or
pop
mov
dec
leave
sbb
test
insb
adc
lods
aaa
jb
mov
jmp
insb
mov
mov
sahf
mov
les
xchg
fiadds
jb
xchg
mov
push
sbb
mov
pop
dec
jle
cmpsl
mov
adc
push
ret
xor
inc
iret
movsl
imul
xorb
jno
adc
repz
sbb
cmp
cmp
mov
xchg
adc
adc
xchg
xor
les
sub
mov
cmc
pop
aas
push
and
xchg
fcoms
sbb
sbb
adc
xchg
out
movsb
jg
movsb
mov
dec
push
pop
jle
shlb
je
repz
push
mov
mov
out
adc
cld
stc
xor
xor
cld
pop
pop
or
test
sbb
adc
cmp
aaa
inc
dec
filds
popl
pop
and
ficoms
sbb
xchg
dec
mov
mov
hlt
xor
test
aam
les
dec
les
nop
xchg
shl
mov
jge
outsl
mov
xchg
mov
xor
add
fcmovu
jno
out
or
or
gs
push
sub
cmpb
push
sbb
xchg
ret
fldl
or
repnz
add
and
or
and
adc
dec
stos
std
pop
xchg
fs
cs
mov
xchg
sbb
aad
mov
daa
push
and
adc
movsl
bound
ror
addl
sbb
mov
add
push
fcmove
gs
adc
and
stos
enter
mov
outsl
xchg
cmp
data16
adc
sbb
decb
sub
fwait
ss
cli
fwait
out
xchg
or
mov
js
sbb
aam
mov
ret
inc
loope
mov
addr16
lods
push
push
mov
cmc
idiv
mov
imul
cmp
mulb
addb
lock
inc
lds
icebp
sub
dec
stos
data16
add
frstor
mov
imul
imul
mov
cmp
or
push
and
andb
jmp
and
push
pop
shlb
sti
inc
pop
lds
push
sti
loope
mov
mov
movsl
inc
sub
inc
ljmp
hlt
stc
push
inc
sub
stos
lahf
cmp
insl
movsb
dec
frstor
inc
ds
mov
test
xor
inc
inc
gs
out
int3
xchg
or
mov
mov
in
mov
push
cltd
fiadds
mov
loop
lods
dec
fidivs
test
or
xchg
xchg
add
mov
xchg
je
popa
mov
aas
dec
and
popa
xor
pop
sbb
fnstcw
sub
pop
lds
sub
pop
ficomps
lds
push
pop
mov
in
nop
inc
xchg
data16
subl
or
add
scas
jecxz
lods
shrb
jecxz
or
or
sahf
xor
rorl
xchg
cmp
les
adc
or
addr16
into
push
mov
insb
push
das
and
insl
dec
adc
push
arpl
les
jecxz
push
adc
fiadds
jl
jne
stos
and
dec
and
adcl
push
sahf
mov
sbb
repnz
pusha
adc
sub
cmp
out
js
leave
iret
adc
sub
in
mov
mov
inc
sub
and
in
dec
iret
mov
imul
fsub
test
lock
mov
or
scas
pushf
movsb
mov
pushl
and
int
in
insl
push
push
sub
mov
inc
leave
and
aas
call
push
jle
and
adc
ljmp
mov
sub
xchg
sbb
mov
xchg
shl
jp
inc
lea
daa
adc
mov
mov
push
mov
push
ljmp
mov
mov
cltd
xorb
adc
adc
xchg
xchg
and
popa
loope
pushf
sbb
mov
mov
sub
mov
jno
mov
jecxz,pt
xor
pop
je
out
push
add
out
jp
mov
in
movsl
pop
ja
adc
add
cmp
xor
xchg
pop
adc
and
mov
mov
mov
jbe
xchg
ffree
push
pusha
arpl
lret
test
daa
push
repz
push
jbe
mov
add
arpl
push
fcmovnbe
inc
push
xorl
xchg
dec
mov
mov
push
fisttpll
cwtl
or
repz
pop
pop
sbb
movsb
xor
lcall
out
jp
cmc
or
cmpsb
orl
dec
repz
lods
iret
push
xchg
cmp
push
sbb
add
add
xchg
xor
adc
or
mov
mov
ret
jge
xor
pop
sbb
inc
pop
cld
out
js
loop
jne
pop
sbbl
data16
fdivrl
add
mov
adcb
out
or
mov
aad
jmp
sbb
mov
pop
mov
pop
xchg
push
stos
push
and
out
mov
mov
jecxz
cmp
sbb
pop
loopne
pusha
rorb
das
les
fildll
xor
sbb
push
iret
mov
ret
in
into
pop
push
jns
mov
testl
or
insl
cmp
bound
leave
es
mov
js
adc
push
lds
aam
into
test
inc
jl
pop
test
mov
das
out
xchg
mov
fisubs
cmp
mov
fcompl
das
icebp
lods
leave
cmp
lret
testl
adc
jle
es
data16
adc
add
xchg
add
cld
popf
ljmp
mov
jno
ret
into
dec
mov
movsl
jo
dec
xor
mov
dec
in
pop
testl
xchg
clc
mov
lcall
cmpsl
mov
pop
fcoml
fdivrl
enter
jno
and
pop
into
mov
sbb
ja
call
inc
sub
add
xlat
data16
mov
lahf
sbb
ja
pop
mov
xor
iret
sbb
fmull
sbb
popf
sahf
push
daa
ds
cmpsb
mov
icebp
arpl
daa
cmp
or
fisubl
mov
mov
mov
dec
push
test
addr16
call
sarb
je
shrb
add
mov
or
es
andl
sub
loopne
out
sbb
mov
pop
fisubrs
cmp
adc
pushf
roll
imul
into
movsl
call
or
add
adc
fsubl
xchg
test
mov
sub
insb
aad
mov
les
and
mov
jge
ret
sti
stos
xchg
adc
lods
orps
push
int
cmp
dec
scas
sub
es
inc
ljmp
pop
push
fs
or
push
aam
inc
xchg
mov
push
and
test
mov
and
sub
mov
je
lods
xchg
les
pop
sub
dec
push
mov
int
negl
pop
mov
mov
andb
cmpsb
inc
fisubrs
or
inc
into
loope
rol
jmp
push
xchg
jo
repnz
dec
dec
lds
dec
out
sahf
sub
xchg
int
repnz
or
cmp
mov
mov
scas
inc
fdivs
iret
xchg
xor
xchg
jo
sbb
lret
fldcw
xchg
pop
jle
mov
gs
pop
mov
enter
mov
adc
repz
dec
cmp
stc
jg
add
fcompl
push
pop
xor
lods
mov
or
dec
ret
ljmp
pusha
mov
fcmovu
stos
subb
mov
ret
insl
outsl
xor
lret
ljmp
shrl
rcll
stc
jae
fisttpll
dec
sbb
test
mov
je
xor
jmp
xchg
nop
addr16
shlb
xchg
outsl
out
ret
xchg
jmp
lret
dec
clc
or
pop
lock
inc
add
sub
mov
fdivs
fs
adc
lfs
push
mov
pop
add
ret
mull
mov
sbbb
jmp
xchg
fstp
jmp
dec
mov
out
pop
jg
pop
sahf
mov
mov
mov
xor
cwtl
incl
lock
mov
int3
stos
xor
mov
pop
push
sarb
xor
aas
call
vmulps
dec
test
mov
jle
mov
call
cld
pushf
and
xor
jnp
jl
int3
xchg
xor
fsincos
push
data16
jb
stos
lds
lock
add
ss
pop
mov
aad
movsl
adc
or
outsl
adc
push
test
pop
xor
push
arpl
mov
pextrw
inc
loopne
sub
sbbb
ret
int3
insl
das
je
xchg
aas
push
test
aam
filds
add
gs
dec
sahf
xchg
or
mov
lahf
stos
movsl
sti
sub
or
fcmovne
xchg
xchg
push
out
scas
xor
fimull
rcll
xor
jns
icebp
jge
add
dec
cmpsl
cmp
popl
mov
cmpsb
inc
jg
add
pushf
or
out
testb
cmc
idivl
pushf
movsb
jns
addb
test
popa
repz
dec
lds
dec
mov
rorl
mov
mov
mov
pop
xor
loop
aam
movsb
bnd
add
inc
jnp
jbe
jge
sub
xor
mov
mov
in
mov
or
mov
jb
or
stc
adc
or
dec
push
xchg
inc
or
cmp
adc
lret
mov
nopl
imul
sub
dec
mov
repnz
dec
out
jns
pop
loopne
aaa
outsb
jbe
jae
cmp
xchg
mov
jecxz
dec
xchg
dec
xchg
push
cmp
jns
xchg
or
aaa
andl
mov
xchg
in
in
das
inc
clc
out
je
aam
in
push
pop
or
push
fbstp
mov
outsl
dec
push
lods
dec
ret
shlb
add
test
fdivl
jecxz
or
add
inc
push
mov
test
ss
mov
into
jecxz
push
popf
or
inc
push
dec
loopne
icebp
or
xchg
inc
in
je
pop
dec
and
adc
xor
cmc
mov
cs
xlat
adc
xor
push
pop
imul
xchg
ljmp
sub
iret
xchg
jno
stos
divl
xchg
adc
xor
add
imul
lea
cwtl
jp
std
dec
jg
lahf
mov
xor
ljmp
xchg
aaa
lods
mov
push
dec
jp
dec
idiv
cmpb
push
mov
jmp
ficomps
pop
jnp
ret
jl
in
xchg
iret
in
in
pop
int3
push
jecxz
insb
mov
stos
int3
push
addr16
imul
and
into
mov
ljmp
sbb
pop
jge
xlat
cltd
rorl
popf
cmp
and
sbb
mov
lea
jmp
test
pop
mov
pop
int3
jle
jo
jns
rcll
dec
mov
and
in
xor
popa
mov
or
or
push
ret
cmp
cs
pop
xor
mov
lock
mov
jle
adc
cmp
mov
adc
leave
hlt
adc
aad
xchg
mov
add
into
out
shlb
pop
or
dec
or
lods
jne
push
stos
push
mov
xchg
jo
xor
shr
daa
stos
or
sub
roll
fcompl
add
and
dec
ficoms
lret
test
les
mov
lret
mov
pusha
pop
jle
test
js
stos
push
cs
inc
fisttpl
and
adc
popf
fcompl
mov
movsb
ficoms
mov
push
adc
sub
xor
fucom
inc
bound
dec
ret
rorb
inc
mov
mov
mov
orb
call
sub
repz
adc
pop
dec
inc
scas
push
insb
cmp
xchg
pop
push
call
bound
es
cld
mov
xor
inc
and
sbb
and
in
out
stos
xorb
xor
jg
in
jae
repnz
dec
xor
push
das
add
cs
fucomip
sbb
iret
outsb
mov
adc
mov
addr16
add
jne
xchg
repnz
in
shlb
repnz
daa
cmp
sbb
es
daa
and
xor
adc
dec
pop
insl
cmp
enter
cwtl
sub
cli
call
data16
ja
push
jne
mov
scas
pop
sbb
jl
idiv
and
cmpsl
adc
cs
dec
fisttpl
wrmsr
mov
xchg
jmp
xchg
cmp
cmpsl
fisubl
sbb
dec
fimuls
cmpsb
aaa
sbb
sub
jo
stos
jg
dec
sub
sub
jo
lret
mov
or
movsb
mov
mov
xor
adc
test
xchg
iret
pop
add
sub
sub
xor
loope
push
in
pop
shl
cmp
adc
in
out
out
sub
out
sbb
into
pop
scas
xor
ja
ja
xchg
mov
adc
lcall
push
movsl
dec
mov
sarb
aad
xchg
mov
jecxz
mov
shrl
scas
je
jecxz
jecxz
rolb
cli
xor
pop
aam
clc
mov
les
sub
lret
outsb
scas
aas
mov
pop
mov
sbb
dec
loop
cld
shl
test
clc
jp
faddp
out
cmp
push
mov
and
push
push
sub
or
movsb
xchg
cmpsb
xor
pop
lock
jg
testl
ljmp
inc
sub
xchg
inc
rclb
loop
adc
or
jg
dec
lods
imulw
xor
dec
dec
xor
adc
fs
mov
jle
mov
sub
cmp
addr16
fildll
adc
call
jp
dec
sbb
jnp
in
add
jmp
arpl
dec
push
mov
xchg
push
nop
push
por
xchg
push
sbb
inc
imul
bound
pop
scas
mov
jp
fucomip
mulb
push
push
mov
es
dec
jo
sub
push
ds
cmp
insb
cmp
jnp
decl
mov
jns
mov
mov
or
dec
push
adc
into
clc
adc
sbbl
and
sarl
xchg
cltd
add
sub
xor
mov
imul
inc
inc
rclb
push
int3
in
xchg
shl
adc
test
inc
loopne
push
xchg
lods
xor
fbstp
cld
fptan
ret
popl
push
aad
fidivrs
mov
in
pop
mov
inc
sbb
jle
lcall
popw
imull
lods
cmpsl
aad
insl
shrl
into
in
pusha
test
sub
js
xor
jmp
xchg
fdivs
mov
test
push
mov
cmpsb
jp
adc
outsl
push
add
std
inc
dec
lods
into
mov
jnp
mov
and
jb
leave
mov
subb
scas
mov
stos
inc
push
clc
fnstenv
xor
pop
fwait
push
iret
ja
gs
xchg
jns
fst
aaa
pop
jmp
repz
popa
jp
stos
sub
lahf
test
and
pusha
std
mov
push
ds
sub
mov
in
sub
lret
xor
in
dec
xor
and
into
jmp
fld
mov
bound
je
jmp
jnp
xchg
dec
jle
cmp
call
cmp
jns
jge
int3
cs
xchg
ljmp
ds
or
sbb
test
jmp
xor
cs
inc
pop
mov
cmpsl
test
pop
test
fcompl
outsl
jnp
adc
inc
dec
xchg
outsb
and
les
and
mov
sub
pusha
pop
dec
mov
stos
mov
aaa
repz
cli
sbbb
jmp
jns
sarb
popa
test
or
insl
insb
imul
adc
pop
dec
fstpt
outsb
sub
outsl
push
ja
fiadds
es
pushf
test
sbb
aas
and
scas
pop
push
fwait
cmpsb
in
adc
xor
sub
mov
sbb
or
cmp
enter
jmp
ret
add
push
out
les
aaa
cmp
push
jne
jo
lea
fnstsw
and
sub
mov
test
loopne
push
cmp
imul
stc
sub
sbb
int3
shl
jp
pop
push
push
jge
clc
aam
int
or
clc
sbb
int3
rclb
cmpsb
aas
add
shlb
jo
add
sub
mov
inc
fs
push
outsl
in
xor
xchg
andl
mov
pop
inc
stc
fldenv
iret
dec
jl
stc
mov
stos
sub
adcb
ds
add
jmp
aas
out
mov
add
cmpsl
adc
lcall
arpl
loopne
das
movsb
inc
add
jo
xchg
push
and
jns
imul
cwtl
mov
xlat
ljmp
mov
xchg
xchg
jbe
mov
outsb
in
sbb
ret
data16
mov
add
movsb
inc
aas
xor
mov
lcall
cli
mov
in
sahf
stos
mov
cmpsl
push
pop
or
cs
ljmp
push
fwait
push
inc
mov
lods
movsb
scas
jns
es
mov
add
adc
aaa
ds
jle
xor
std
cmpsb
mov
lcall
xchg
push
xchg
jmp
cwtl
call
mov
sbb
jmp
lock
xchg
into
push
sbb
jg
es
hlt
mov
test
xchg
add
scas
pusha
cmp
int3
out
sbb
out
jne
in
adc
testb
and
jmp
fdivr
outsl
in
gs
jb
cmp
cmp
inc
ss
mov
pop
mov
inc
mov
clc
out
adc
inc
rcrb
cmpsb
sub
push
push
jo
nop
aaa
bound
add
adcl
inc
xorb
fwait
dec
rol
cmp
mov
jmp
xor
cmp
ja
fldln2
xlat
sarb
and
pusha
cmp
jmp
and
mov
mov
dec
mov
scas
stos
popf
mov
adc
sub
mov
and
movsb
mov
test
mov
stos
shrb
xchg
xlat
cmc
push
xchg
sbb
pop
sbb
xchg
xchg
mov
mov
mov
inc
adc
sti
stos
ss
pop
cwtl
mov
dec
xor
mov
adc
xor
or
movaps
mov
push
sbb
lret
lock
mov
pop
lods
fnop
movsl
bound
push
es
mov
inc
jo
sub
lods
mov
dec
add
push
dec
pop
add
and
jb
fwait
pop
sbb
mov
or
test
in
in
sub
add
in
icebp
xchg
dec
adc
inc
mov
repz
inc
sbb
movsb
or
jmp
mov
rcrl
outsb
mov
push
lds
out
loope
stos
jp
sete
out
fsubrs
mov
out
in
cmpsl
daa
push
out
les
subb
arpl
cmpsl
loope
popf
jb
xorl
mov
pop
adc
dec
sbb
sarl
push
outsb
xlat
inc
ja
jg
xchg
enter
inc
jle
mov
scas
dec
imul
test
das
mov
mov
je
addb
jmp
mov
mov
outsb
adc
add
sbb
cmp
xor
add
pusha
mov
out
mov
add
pop
hlt
stc
dec
outsl
adc
mov
xor
nop
popf
repz
inc
mov
jge
rcr
dec
and
aad
xchg
jl
out
mov
int
test
push
je
jmp
push
and
out
xchg
dec
mov
dec
dec
cld
cmovns
mov
testb
sub
pop
cmp
addr16
mov
lds
jp
inc
mov
testl
dec
or
mov
fstpt
lret
xor
subl
sub
outsl
cs
ljmp
cmc
and
push
jecxz
enter
mov
notb
lea
ss
ficomps
sbb
xchg
rorl
jl
insl
arpl
mov
ret
xchg
shrl
adc
mov
stc
in
mov
int
sub
fstp
sbb
shll
sbb
scas
dec
pop
mov
xor
xchg
out
sub
jmp
xchg
outsb
pop
add
bound
sbb
daa
lds
test
lcall
xchg
xchg
adc
sub
in
jle
stc
mov
inc
lods
or
jmp
jbe
scas
jo
fsubrs
fbstp
sbb
xchg
mov
push
icebp
imul
or
clc
scas
sti
dec
inc
add
jno
mov
sub
jle
scas
lods
imul
inc
mov
xlat
dec
and
jnp
push
lcall
sub
sbb
xor
daa
push
add
lods
sub
outsl
imull
icebp
pop
push
sahf
in
sbb
jmp
fwait
jp
or
nop
xchg
sti
std
jg
insb
mov
int3
xlat
nop
mov
into
es
jno
les
sahf
fcomp
rolb
pusha
rolb
repz
bound
leave
sub
dec
shll
ds
adc
xchg
push
mov
and
lret
test
pop
mov
mov
sahf
push
add
mov
pop
sub
lock
lahf
cmp
insb
lods
aaa
dec
lods
ret
pusha
popf
into
jecxz
shrb
int3
add
dec
pop
or
jnp
dec
xchg
push
xor
bound
jbe
jp
je
xor
mov
pop
das
and
pusha
popa
cmp
leave
popf
lods
into
imul
in
xchg
mov
mov
pop
mov
in
sbb
flds
mov
mov
lahf
mov
jecxz
ja
addr16
dec
pop
fwait
lea
out
es
mov
mov
icebp
sub
jae
xchg
and
scas
ret
not
push
out
outsb
push
dec
jp
mov
jo
mov
mov
ja
cmp
or
in
push
lock
xchg
add
out
mov
adc
dec
test
push
cmp
adc
sbb
pop
dec
repz
test
and
outsb
sub
jmp
daa
cmp
inc
xchg
and
cmp
outsl
popa
xchg
bound
ret
mov
sbb
mov
jecxz
push
mov
push
add
and
mov
scas
cwtl
mov
fpatan
adc
es
inc
rorl
and
fistl
pop
xor
bound
xor
aaa
push
fmull
push
negb
fdivrp
adc
repz
add
pop
add
leave
sbb
cld
mov
orl
std
sub
push
mov
dec
aaa
cmpsb
push
fmuls
into
and
sbb
lret
jle
cmp
or
jne
or
and
loop
mov
pop
je
nop
hlt
sbb
mov
push
jno
imul
adc
adc
stos
jmp
push
or
inc
dec
into
sti
repz
stc
je
pop
aas
decb
push
pop
push
inc
inc
repnz
sbb
push
lea
loop
jne
roll
mov
popf
ljmp
sub
pop
pop
mov
imul
es
and
dec
testb
pop
mov
mov
stc
sarb
add
or
mov
mov
sub
out
dec
mov
fnstcw
xor
sbb
lea
les
mov
inc
cmp
add
mov
repz
add
cltd
inc
inc
xchg
inc
xor
andl
fbstp
xchg
inc
mov
or
pop
pusha
into
xchg
cwtl
int3
hlt
int3
jecxz
xor
lods
add
loope
int
inc
cmp
mov
es
mov
pop
shl
push
xchg
stos
xchg
ret
push
or
movsb
mov
fs
cmp
sarb
cmp
call
xor
lea
ljmp
dec
cmp
pushf
lea
mull
repnz
push
fcmovne
mov
sbb
xor
adc
mov
int3
loop
adc
jbe
xchg
and
mov
js
mov
jbe
aaa
fisubl
cwtl
sbb
pop
notb
or
imul
push
cmpsb
ret
xchg
rorl
pop
out
repz
and
inc
push
test
shlb
test
das
cmp
call
push
pop
js
test
xchg
scas
inc
add
ret
in
xchg
cmpsl
cmpsl
test
popf
sbb
add
int
mov
mov
add
mov
pop
fidivrl
sub
and
sbb
or
push
in
or
mov
stos
inc
sbb
mov
movsb
xor
mov
push
orb
mov
lock
rclb
cmp
ss
cwtl
mov
sub
incl
cmp
insl
cltd
sub
pop
jle
push
mov
jg
mov
xchg
jl
adc
mov
dec
and
fstps
ja
das
push
fwait
mov
loope
mov
or
or
pop
jbe
mov
lods
inc
test
enter
and
fimuls
lret
mov
cs
mov
pop
rorl
xor
nop
and
sahf
mov
aas
scas
int
cmp
mov
push
jo
outsl
fadd
scas
lds
sbb
xchg
notl
cmpsl
push
pusha
shll
push
xor
jne
shr
or
xchg
in
lret
xor
push
out
jmp
movsb
imul
js
mov
das
loope,pt
sahf
pushf
xor
or
fmuls
lds
push
sub
stc
fwait
ds
ss
jne
out
test
clc
lods
xor
jl
subb
cmpb
punpcklbw
push
popa
je
or
push
and
into
aaa
xlat
jle
add
pop
inc
movl
ds
sti
add
repz
mov
ljmp
sbb
add
imul
pandn
jecxz
shrl
lea
sbbb
xchg
stos
mov
mov
arpl
cs
fsubrl
cmc
js
fwait
jecxz
sub
mov
push
dec
bnd
and
mov
dec
hlt
movsl
mov
fcomi
mov
xchg
mov
push
mov
jne
mov
or
es
inc
mov
sub
rorb
jno
or
test
aaa
xchg
shrl
mov
cli
icebp
les
lds
imul
fstp
mov
in
loope
leave
leave
idiv
cltd
dec
cmp
inc
adc
loop
cmpb
pop
fwait
pop
and
mov
push
dec
fwait
rolb
movsl
mov
ret
stos
imul
mov
dec
add
push
inc
xor
mov
cmp
in
cmpsb
jae
into
jle
add
add
jno
lret
add
int3
iret
bound
popl
jno
dec
mov
dec
push
cld
clc
push
xor
insl
lods
xchg
mov
into
in
dec
sahf
movsb
cmp
cmp
sub
addb
cmp
lret
dec
xor
mov
sub
dec
mov
mov
pop
test
push
pusha
push
pop
mov
dec
int
sub
iret
mov
cmp
mov
fstpl
in
scas
mov
mov
lret
inc
lods
jb
ss
shlb
cltd
sahf
fiaddl
jmp
leave
sbb
scas
bound
rclb
dec
cwtl
cs
inc
add
xor
xchg
jecxz
shll
cltd
jo
lahf
mov
mov
aaa
cmpsb
movsl
xchg
mov
aad
adc
jp
xchg
aad
xchg
inc
add
push
and
sti
ret
pop
test
ss
bound
fs
jmp
cs
mov
into
fldt
into
repz
pop
xor
scas
xchg
loop
daa
aaa
aam
addb
jmp
xor
push
add
sbb
cltd
inc
inc
test
into
mov
bound
aas
xchg
fwait
sbb
cmpsl
out
cmpsl
mov
xor
xor
mov
sahf
fimull
int3
bound
icebp
pop
adc
popa
mov
movsb
subl
jge
jbe
jno
mov
and
mov
jnp
mov
mov
adc
ficomps
dec
aas
xchg
jge
pop
mov
loop
stc
es
push
push
cmp
imul
repnz
jge
pop
mov
rcll
icebp
imul
lods
popf
mulb
and
lods
add
sbb
xchg
dec
jbe
hlt
jno
and
push
add
adc
in
push
std
mov
xchg
dec
mov
dec
push
jb
mov
test
cmpsl
leave
lret
cwtl
push
cmc
test
stos
mov
mov
outsl
or
imul
or
cmp
mov
inc
mov
sub
dec
mov
add
cltd
dec
lahf
mov
rorb
cwtl
insb
movsbl
push
decl
add
inc
js
aas
cmpsb
push
icebp
mov
fisubs
aam
or
or
dec
or
xor
loop
lahf
icebp
xchg
sub
fcmovnb
sub
fdivrl
fnstenv
daa
or
test
int
dec
sub
stos
inc
fsubrp
sbb
xor
pop
xchg
int
sub
lock
in
cmp
cli
fucomip
pop
sub
xor
or
das
pop
sar
mov
test
outsl
inc
rcrl
mov
jmp
loope
dec
mov
cmpsb
ds
fcmovb
jnp
push
cmp
jp
in
or
push
mov
jae
jp
mov
xor
mov
stos
dec
mov
mov
notl
mov
testl
mov
cmp
jl
loope
fs
shll
andl
cld
in
add
xor
rorl
dec
test
enter
and
adc
mov
cmp
cltd
push
int3
jp
shlb
cmpb
cmp
les
pop
jg
out
jne
adc
add
jl
nop
jecxz
push
inc
mov
push
and
mov
es
add
idivl
iret
fisubrl
xchg
or
sub
das
fstpt
sub
fistps
ljmp
add
inc
popw
imul
push
xchg
or
or
sub
cwtl
adc
lahf
and
and
lret
push
shlb
mov
leave
jo
mov
call
repnz
mov
bound
lods
out
mov
std
leave
jbe
mov
pushf
cs
pop
arpl
ret
stc
adc
aas
add
lcall
loope
inc
outsb
shrb
std
int
aaa
mov
insb
and
ret
xchg
addr16
xor
mov
jp
push
add
mov
dec
and
mov
pushf
mov
mov
push
aas
out
lret
test
popf
pop
int
sarl
psubsw
sub
xchg
xor
ret
icebp
jno
addb
xlat
lret
iret
jno
ret
gs
push
push
jl
add
mov
lock
jp
pop
pop
push
ja
sub
divl
or
je
fsubrl
add
negl
fwait
push
mov
pop
mov
ret
lods
or
loopne,pn
sbb
mov
inc
dec
sub
daa
mov
lret
ja
mov
pop
add
inc
pop
int
xor
fmul
js
dec
xor
jp
xor
and
or
cmc
addl
mov
sub
jb
stc
jmp
loope
mov
xchg
subps
nop
icebp
xchg
stos
shr
fistpll
push
fdivl
adc
sarl
push
mov
jnp
sbb
stos
cmp
cmpsl
or
inc
add
ror
push
out
xchg
ljmp
popf
lahf
loope
outsl
shlb
aam
push
aaa
adc
stos
mov
stos
cmp
mov
dec
imul
fiaddl
es
repz
jne
cld
xor
les
mov
fidivs
add
ret
push
mov
mov
dec
mov
sbb
out
outsl
pop
mov
or
test
out
out
add
xchg
call
jnp
fisttps
sub
mov
imul
test
icebp
add
xchg
scas
push
push
repnz
out
je
pop
filds
insb
inc
pop
and
mov
mov
in
shrb
and
iret
add
pop
sbb
pop
sub
mov
test
loop
fbld
dec
xor
cmp
sahf
ja
in
mov
sbbl
inc
xor
push
or
int
dec
push
aas
outsb
dec
insl
icebp
lods
sub
mov
into
arpl
clc
cbtw
or
pop
in
movsl
data16
cmp
jle
push
cmp
test
inc
pushf
fadds
mov
bound
stos
ret
fsubl
jnp
fdivs
xor
inc
xchg
push
test
ds
out
cmp
in
iret
mov
fildll
enter
push
test
mov
rorb
cmc
orb
add
fdivs
cmp
and
pop
or
mov
xchg
andl
mov
sarl
std
jl
and
mov
xchg
jl
adc
inc
insl
cmp
clc
sbb
int
sub
shrb
test
xchg
mov
fdiv
push
mov
xor
adc
jge
sub
lahf
and
gs
bound
repnz
movl
adc
in
cmp
ja
es
xor
sub
repnz
fisttpl
cmp
xor
mov
lret
test
xor
gs
sub
or
insb
int
sub
add
add
pop
sbb
cmpsl
jnp
imul
jbe
bound
jbe
mov
push
fadds
popa
cmpsb
or
mov
leave
xchg
add
bound
shrl
or
jne
stc
stc
cld
or
iret
into
mov
fs
xor
jno
lods
pop
xchg
adc
lods
lret
mov
xor
sbb
imul
hlt
push
cmp
fnstsw
lods
fcmovu
cmp
dec
lods
lock
cld
push
adc
adc
mov
cmp
jecxz
movsl
push
in
sarb
add
cmp
sub
cmp
jle
cltd
and
movsb
lret
push
int3
inc
inc
dec
sbb
pop
dec
cmp
push
dec
pop
jl
xchg
dec
adcl
or
xchg
sbb
mov
imul
mov
sbb
fstpl
add
xchg
rorl
cmp
aad
fidivl
push
inc
out
out
mov
in
sub
add
lds
out
test
fildll
push
aam
or
cltd
int3
add
dec
or
into
cmc
mov
aam
xchg
sbbl
sahf
mov
lcall
or
outsl
cmpsl
mov
stc
jnp
cmp
mov
gs
lcall
cmpsb
out
or
jnp
adc
movsl
cwtl
scas
cmp
bound
outsl
test
sub
in
sti
push
sbb
insl
jo
cmc
add
in
mov
jno
mov
cmp
mov
sub
add
cmp
jb
hlt
rcrl
jne
pushf
sbb
aam
cmp
or
jnp
rcl
push
jae
sub
dec
lcall
mov
xchg
loop
inc
addb
rcrb
pushf
jecxz
or
or
fs
imul
jmp
xchg
daa
arpl
test
xor
daa
sub
mov
mov
dec
push
nop
mov
xchg
clc
push
ja
cs
inc
xor
roll
push
fdivp
inc
jae
cmp
lret
mov
mov
std
and
jmp
xor
inc
aam
in
or
add
shrl
cld
testb
inc
cmp
arpl
push
push
pop
push
aas
dec
leave
and
push
cmp
pop
mov
sub
adc
cmpb
cs
push
stos
lret
hlt
adc
ds
cltd
xor
xchg
jnp
push
cld
sbb
sbb
dec
shrl
scas
jge
xchg
loope
hlt
int
test
mov
cli
mov
stos
cwtl
push
scas
mov
call
ds
jecxz
sub
fdivs
sub
popa
jb
notb
jmp
mov
xor
jo
xchg
jp
cltd
outsl
pop
jmp
aad
loopne
rcll
adc
js
push
mov
mov
inc
cwtl
inc
ja
int
mov
mov
and
push
bound
shl
test
loope
out
cmp
push
add
fwait
mov
iret
call
mov
and
test
mov
sbb
and
ret
lahf
jb
fcmovnu
push
cmp
cwtl
xchg
clc
xchg
cmp
enter
lods
mov
jl
in
jno
nop
dec
adc
inc
push
adc
int
lret
outsl
call
mov
or
mov
out
mul
lcall
sub
add
adc
fidivrs
filds
aas
ljmp
inc
xchg
jb
push
jae
mov
sti
ljmp
mov
jbe
in
int
or
mov
mov
cmpl
hlt
push
sbb
stos
xchg
loope
jne
mov
rcll
out
das
and
lods
std
sub
loop
rcll
icebp
fmull
frstor
addl
sti
btcl
mov
cmp
fistpll
mov
mov
sti
or
cmp
clc
out
and
xor
xor
dec
cli
mov
shll
test
mov
cmp
mov
sarb
and
scas
fs
test
out
sti
jae
cmpsb
xchg
cmp
fcomps
cmp
rcll
cmp
and
jecxz
inc
mov
dec
dec
mov
adc
sub
adc
pushf
inc
adc
lret
xchg
fwait
jmp
and
lahf
aad
xchg
inc
xor
mov
push
mov
mov
cltd
xor
dec
dec
xor
inc
aaa
scas
fsub
outsl
loopne
adc
dec
out
xchg
jp
lock
jp
jno
jae
mov
sbb
sbb
sub
sbb
mov
out
in
mov
sbb
mov
dec
or
sbb
enter
in
ficoms
es
sub
lret
lods
push
jo
arpl
pushf
loope
sub
sti
mov
addb
aad
xrelease
jnp
sub
xor
sub
push
cmp
sbb
into
mov
mov
ret
adc
pop
clc
hlt
fdivr
mov
inc
fpatan
cmp
ret
or
mov
sbb
cmp
inc
cmp
dec
adc
inc
jmp
addr16
addr16
push
mov
mov
xor
popf
add
out
in
std
pop
pop
and
pop
fsubl
pop
adc
imul
je
mov
daa
into
sub
fwait
push
mov
push
lret
and
stc
jno
out
sub
mov
mov
cmp
jg
and
sbb
cld
xchg
xchg
lds
cld
es
adc
jl
ss
sub
dec
inc
mov
mov
xchg
fidivs
mov
sahf
add
fldt
popf
lcall
rcr
cmp
inc
mov
icebp
in
cmpsl
xchg
in
mov
xchg
cmp
inc
inc
mov
sahf
mov
add
pop
popa
and
pop
cli
adc
lds
in
xor
inc
arpl
push
xchg
mov
out
mov
cmp
clc
aad
hlt
ds
pop
fwait
je
ds
das
sahf
or
push
add
addr16
mov
aad
int
mov
lea
xchg
fwait
int3
stos
mov
sub
fildl
cld
add
fcomip
sbb
rcl
cmp
rcl
les
xor
fmull
fadd
xlat
mov
inc
out
mov
shlb
les
pop
js
and
pop
clc
dec
imul
ret
add
adc
mov
repz
or
push
add
mov
adc
dec
cld
lods
lret
mov
pop
xor
inc
sub
into
lods
jmp
hlt
dec
imulb
add
test
test
pop
xchg
lods
outsl
lahf
adc
sarb
into
enter
mov
out
cmp
adc
xchg
push
jne
mov
hlt
inc
roll
ret
scas
or
frstpm(287
adc
xchg
push
loopne
aaa
adc
rorl
cmp
sub
cmp
push
outsl
bound
jnp
and
inc
cmp
imul
sbb
iret
scas
inc
pop
inc
mov
mov
sbb
popf
icebp
imul
pop
aad
sub
xchg
sbb
mov
dec
dec
mov
pop
gs
jge
mov
dec
or
push
jecxz
cmpsl
imul
stos
bts
cmp
stos
jecxz
pushf
and
leave
inc
or
dec
loopne
add
imul
pop
stc
mov
mov
fcomip
dec
rcr
ja
popf
je
jmp
in
fdivrs
test
xor
out
nop
xchg
dec
push
adc
push
push
pop
and
jne,pt
sbb
jl
mov
cs
cmp
jno
or
or
mov
orb
pop
inc
pusha
sbb
lret
add
push
ss
hlt
adc
pop
add
pop
pop
lods
test
imul
cmc
inc
xchg
push
mov
cmp
inc
add
icebp
inc
jmp
sub
cmp
ds
pop
jp
cmp
fdivrs
push
sbb
jmp
lcall
mov
pop
orb
shlb
pop
scas
pop
cmpsb
pop
push
fnsave
aas
push
push
dec
je
xor
into
xor
mov
jmp
mov
outsb
in
cmp
mov
imul
jl
pop
push
mov
dec
push
repnz
fdivl
push
mov
xor
adc
add
add
cmp
scas
test
inc
cmpsb
mov
push
imul
enter
push
xchg
xchg
sub
or
adc
out
idivb
mov
inc
lds
scas
or
mov
sub
sub
push
outsl
jne
pusha
sti
xchg
aam
insl
fs
and
fdivrl
or
test
jns
cli
mov
mov
cmp
pop
adc
xor
mov
push
adc
pop
cmpsb
stos
shll
rclb
imul
or
mov
jae
fwait
mov
jle
shl
aam
nop
mov
sahf
mov
xor
dec
mov
sti
sub
xchg
enter
mov
insl
sub
sbb
jg
mov
cltd
inc
clc
in
and
sub
xchg
ss
mov
sbb
jmp
mov
cmp
xor
ljmp
jnp
jbe
pop
lods
addb
mov
insb
pop
mov
add
dec
xor
jb
je
pop
arpl
push
push
cmpsb
je
cmc
icebp
mov
mov
loop
shlb
xchg
pop
pop
arpl
fidivrl
mov
sub
mov
lods
or
and
mov
sbbl
imul
mov
sub
adc
jl
cmpsb
jmp
push
xchg
dec
dec
mov
mov
mov
stos
inc
les
aaa
aam
xchg
xchg
jb
je
fwait
cmpsl
sub
cmp
add
inc
xchg
dec
sub
mov
mov
sahf
jmp
add
fdivrl
ret
jbe
mov
inc
jge
cmp
mov
mov
or
lds
or
push
enter
in
fnsave
mov
mov
inc
sbb
xchg
adc
ret
and
and
push
repz
pop
push
push
sub
lds
test
stos
jns
idivb
xchg
stc
in
push
pop
pop
es
rcl
dec
xchg
ja
jnp
jmp
push
mov
popf
test
push
scas
or
inc
add
cmp
mov
pop
or
push
xchg
mov
mov
pop
mov
xchg
shll
jecxz
ljmp
sahf
and
bound
sti
lea
std
psllw
xor
push
nop
mov
jl
int
je
sbb
push
xchg
adc
clc
jae
hlt
gs
adc
xor
mov
and
mov
lods
ljmp
pop
sti
mov
xchg
das
movsb
sbb
dec
mov
cmp
cmc
and
clc
xchg
pop
xchg
sbb
mov
addr16
pop
int3
shr
jb
or
xchg
shl
sub
imul
adc
dec
aad
dec
iret
sahf
in
shlb
std
inc
maxps
mov
mov
adc
or
and
dec
cli
movsb
mov
jns
sbb
ss
cltd
pop
pop
mov
push
test
cwtl
pop
inc
insb
mov
loopne
jns
push
sub
adc
icebp
fistps
out
mov
pop
mov
cld
push
jmp
and
je
sub
test
jg
inc
push
cs
and
cmpsl
sti
mov
shlb
push
test
and
shll
pop
sbb
push
dec
sub
arpl
rorb
pushf
divl
dec
hlt
aam
lds
cmp
inc
xlat
xchg
xchg
das
fdivl
jbe
inc
push
dec
addl
jmp
mov
out
test
jo
ja
in
sub
pop
mov
xchg
or
sub
mov
iret
sub
js
pop
call
xchg
aad
divb
dec
clc
insl
addr16
push
push
cmp
mov
mov
gs
inc
mov
xchg
xchg
mov
adc
sub
repz
pushf
sbb
lahf
lret
sub
push
ret
pop
jp
jge
sub
cmp
mov
sub
repz
dec
in
sarl
popa
xchg
jbe
mov
xchg
add
test
and
xchg
cli
xor
faddl
iret
mov
dec
aad
gs
mov
and
lret
mov
arpl
fdivrp
xor
xor
mov
add
stos
lock
repz
push
mov
clc
pusha
sub
jp
cwtl
mov
leave
inc
sahf
cmpsb
sub
scas
imul
stos
dec
dec
das
js
pushf
sarl
adc
jp
jae
add
or
ficomps
lret
xor
stos
cmp
loop
notb
sti
cmpsb
xchg
jmp
paddd
xchg
mov
adc
jbe
mov
inc
mov
push
pop
scas
add
sub
push
mov
dec
fs
dec
mov
dec
pop
jnp
xchg
mov
ret
and
popf
push
adc
xlat
mov
outsb
inc
mov
pop
adc
sub
cmpsb
mov
lea
shrb
mov
repnz
movsl
sbb
sub
std
in
mov
testb
in
dec
loopne
fwait
pop
push
insb
pop
push
cwtl
iret
shrb
push
movb
in
shlb
fcomip
mov
mov
xchg
and
frstor
mov
fisttpl
push
and
bound
adc
and
call
rsm
insl
xor
push
pop
out
mov
push
sbb
sub
subb
mov
push
push
inc
mov
addl
mov
add
aad
adc
mov
mov
cltd
push
xchg
dec
lock
inc
aam
xchg
lahf
jp
jno
shr
sub
iret
mov
cltd
add
cld
movsb
mov
std
sbb
subb
shlb
push
outsl
lret
push
movsl
mov
nop
pop
and
inc
pop
icebp
testl
call
ljmp
sbb
fisubrl
imul
sub
dec
add
aam
mov
cmp
or
pop
sub
push
mov
cltd
div
mov
imul
adc
mov
aam
dec
pop
dec
gs
das
pop
inc
or
sbb
add
dec
leave
push
movsb
push
dec
jno
outsl
mov
cld
dec
add
mov
mov
inc
in
add
pop
add
pop
sub
aad
in
xor
or
cmp
repz
cmpsb
cmp
out
jb
cmpsb
push
jg
xor
arpl
mov
stc
pushf
sbb
aad
hlt
lods
stc
mov
push
pop
xor
mov
push
jb
pop
and
pop
ds
cmp
push
test
dec
jns
fwait
cmpsl
jb
fldl
stos
inc
aad
subb
shlb
xlat
outsl
mov
mov
sahf
pop
sub
mov
scas
lds
mov
lret
adcl
jns
pop
sub
and
cmp
and
xchg
inc
dec
dec
xor
mov
sbb
mov
jne
adc
enter
ficoms
ja
push
inc
mov
stos
pop
mov
push
xchg
fs
pop
jp
inc
ret
inc
push
sub
mov
aad
mov
dec
push
xchg
adc
lcall
ret
mov
lret
push
dec
cmp
inc
dec
cmp
inc
mov
nop
mov
mov
into
movaps
out
dec
mov
push
ss
push
push
adc
lret
xor
mov
xchg
or
mov
or
xorl
in
in
inc
xchg
jb
cli
cli
outsb
mov
dec
sarl
mov
dec
pop
nop
lods
sbb
mov
pop
test
inc
aad
fcmovbe
xchg
sahf
adc
jp
jge
xor
fdivl
lahf
and
cs
or
cmp
push
push
ficoml
mov
and
cmc
xchg
jne
enter
pop
adc
inc
cmp
in
sbb
cld
mov
std
lret
mov
mov
pop
mov
jb
cmp
xor
jle
adc
outsl
adc
push
mov
loope
jp
scas
loopne
or
cmp
rorb
outsl
and
sbb
mov
ret
ljmp
nop
push
jne
sbb
xor
fmul
inc
dec
inc
inc
push
pop
dec
cs
jg
repnz
mov
or
adc
fldcw
arpl
jp
jno
inc
imul
sbb
lahf
lods
negb
and
lods
cwtl
outsl
cmpsl
sti
out
repz
daa
cld
xor
out
cmpsl
sub
sub
cmpsb
lods
int3
pop
mov
jmp
lcall
push
xor
andl
loopne
push
call
and
in
scas
js
inc
stc
cld
outsl
sahf
push
xchg
and
outsl
test
rorb
adc
insl
and
in
pop
arpl
iret
or
cwtl
loopne
std
sar
jmp
jp
pop
loope
inc
or
fisubrs
adc
adc
xor
jge
stos
pop
xchg
pxor
bound
pop
out
mov
int3
add
out
decl
fs
xor
js
pop
pop
jle
jecxz
pop
cltd
adc
cmpsb
mov
push
sub
cmp
mov
mov
loopne
in
lcall
pop
add
cmpsl
or
loope
in
push
rcrl
cmp
sbb
sarb
xchg
lds
iret
pop
sbb
push
add
lods
jns
xlat
mov
adc
lock
add
mov
stos
or
lds
sub
xchg
mov
insb
xor
daa
out
loope
clc
xlat
in
or
jb
jnp
add
xchg
ret
xchg
xchg
rol
cmp
std
mov
movsl
adc
aam
mov
mov
xchg
mov
xchg
loop
dec
lret
ret
into
fnsave
push
sbb
in
pop
add
aam
sub
int
pop
fwait
sbb
lcall
mov
arpl
stos
dec
mov
sar
mov
repz
mov
aad
test
mov
jmp
push
loop
xchg
fstpl
jno
or
pop
lods
rclb
push
jp
push
mov
mov
push
mov
mov
insl
iret
int
subb
push
lret
aas
sbb
and
cmp
test
mov
mov
pop
ficoml
xor
jnp
shr
orb
scas
or
stos
cmp
mov
nop
sub
fs
mov
imul
or
sahf
outsb
sub
test
pop
push
push
mov
into
mov
outsb
insb
pop
cmp
in
adc
sbb
sbb
mov
jl
push
push
rolb
int
out
xor
push
cmp
push
or
jno
pop
fstl
gs
jmp
pop
xchg
jg
adc
movsl
pusha
mov
cmc
daa
jmp
les
jmp
call
and
push
and
popf
call
or
cltd
lahf
into
movsl
cmp
arpl
hlt
jnp,pt
inc
gs
add
inc
movsl
pop
cmp
add
stc
cmp
inc
xor
stos
add
mov
adc
mov
jae
mov
je
xchg
mov
pushf
ret
out
insl
imull
mov
test
mov
add
mov
push
aas
mov
pop
dec
push
cmc
inc
loope
cld
ret
das
jle
pop
push
and
clc
ret
ffreep
data16
gs
mov
aad
cwtl
jo
and
out
popf
out
nop
or
jnp
mov
xor
fisubs
test
push
scas
pop
rcrl
or
lret
ficoml
sbb
clc
pop
inc
jno
int
ret
xchg
mov
js
inc
push
and
ja
jb
cmp
movsb
outsb
adc
push
or
rcr
mov
push
out
fwait
enter
mov
mov
mov
and
pop
outsb
xorb
adc
or
sbb
cmpl
jne
inc
aaa
or
faddp
in
push
sub
adc
pop
ret
xorl
mov
imul
cmp
lds
arpl
adc
mov
je
cmp
stc
push
mov
pushf
out
jmp
test
jnp
insb
push
test
jbe
fdivs
sub
out
popf
mov
or
fwait
enter
xchg
cwtl
popf
or
es
jns
xor
popa
jne
cmp
mov
and
fnstsw
jp
cmp
sub
shll
push
stos
sbb
xor
test
ret
cmpsl
jb
insl
mov
push
add
stos
lea
dec
xor
lock
or
mov
dec
loope
xchg
insl
mov
adc
mov
inc
imul
jle
mov
jge
and
enter
js
sti
scas
adc
fbld
or
sub
mov
adc
sahf
jnp,pn
scas
shll
fsubl
pop
subb
xor
dec
in
pop
call
mov
scas
xchg
mov
xchg
jmp
adc
in
lret
adc
or
cmp
stos
sbb
lret
insb
inc
push
mov
imul
dec
scas
iret
scas
xor
rcr
mov
mov
sbb
loope
jnp
test
stc
ret
mov
mov
jge
mov
cld
out
add
in
imul
lods
pop
nop
jle
cli
mov
or
sbb
cli
inc
xor
lea
mov
xchg
arpl
or
ja
pop
cmp
es
int3
aad
dec
add
dec
add
mov
or
in
daa
inc
loop
pop
add
repnz
imul
xor
push
add
add
mov
xchg
xchg
mov
xor
data16
inc
inc
xor
push
push
mov
scas
jnp
cmpsl
sub
cmp
add
sti
les
lock
sub
mov
adcb
add
stos
inc
aas
cmpsb
mov
cmp
fsubrl
dec
into
in
fnstenv
pop
ss
je
jnp
loope
flds
nop
adc
or
xchg
out
aas
in
mov
fdivl
pop
sub
jg
int
mov
mov
sbb
push
pop
pop
outsl
mov
inc
in
lcall
repnz
pop
loop
je
jne
and
and
xor
clc
or
push
xchg
into
dec
je
ss
add
and
push
mov
or
sub
popa
dec
xchg
xor
or
icebp
sub
pop
sub
test
jb
mov
into
sbb
out
addr16
mov
inc
addr16
stc
push
in
fdivl
daa
inc
stos
add
imulb
ja
cmc
ss
mov
ja
stc
rep
cmp
adc
sbb
and
enter
out
mov
popf
icebp
sbb
push
inc
lea
and
inc
xchg
sahf
or
aas
sbb
cmpsb
or
inc
xor
lahf
pusha
pop
push
pop
sbb
add
push
out
sub
jge
pushf
lret
cmpsb
cmp
mov
aaa
fstpt
dec
sub
sub
hlt
sbb
cmpb
scas
stc
cmp
and
jo
fstpl
add
adc
jae
add
imul
cmp
xor
push
xor
pop
aad
inc
fstpl
clc
push
jl
cmp
or
test
mov
stc
mov
mov
cs
in
push
scas
mov
repz
mov
xchg
lea
push
inc
xor
pop
sbb
test
and
insb
push
test
daa
sbb
or
pop
mov
out
jnp
or
iret
ja
push
scas
dec
and
pop
xlat
pop
shrb
cmp
push
add
push
jae
push
insb
jecxz
into
ss
add
repnz
fidivrl
mov
loop
jge
jnp
jnp
xor
js
add
inc
lds
adc
jmp
lret
gs
push
lods
mov
dec
mov
sub
aaa
std
xchg
mov
and
sbb
mov
sbb
mov
jl
stos
das
or
filds
imul
jecxz
enter
push
lock
add
sub
les
fdiv
divl
lods
fldt
jmp
mov
pop
add
dec
in
xor
mov
xor
mov
mov
sbb
jns
ja
call
in
popa
mul
dec
sbb
mov
fs
add
dec
das
cmc
stos
fld
add
fnstcw
fidivs
push
xchg
into
enter
xorb
sbb
push
das
lods
mov
inc
repnz
hlt
add
xchg
xchg
in
mov
cmp
fwait
bound
inc
xor
push
int3
push
and
mov
adc
push
xchg
je
in
les
inc
push
or
or
adc
aaa
inc
xor
loopne
and
mov
and
lahf
call
push
cmp
mov
push
pop
pop
push
and
std
les
ljmp
pop
testl
arpl
leave
mov
pop
inc
inc
add
push
inc
imul
ret
and
test
inc
ljmp
in
test
outsb
sbb
std
mov
out
out
cmp
xchg
xlat
cmp
js
test
mov
mov
mov
jne
cltd
repz
repz
adc
stc
inc
insb
cmpb
lcall
jmp
mov
push
cli
insb
gs
cmp
into
movb
sbb
popf
dec
push
cwtl
jbe
dec
scas
jne
stos
xor
jmp
push
movsb
xchg
jnp
stos
out
fdivp
push
in
ss
cmpsb
shl
in
mov
jmp
mov
jno
std
cmpsl
jno
inc
push
icebp
movsl
repz
ja
imul
xor
cltd
mov
jne
mov
and
xchg
fdivrl
mov
imul
add
scas
mov
test
pop
add
pushf
add
std
jmp
test
xchg
xchg
pop
jecxz
insb
dec
jmp
loope
cmp
sub
xor
dec
adc
cwtl
shlb
push
mov
out
mov
movl
out
inc
jo
cmc
xchg
pop
inc
xchg
cli
pop
aad
adc
stos
movsb
pop
add
bound
std
or
xor
loopne
adcb
negb
cmp
call
popf
adc
mov
roll
add
xor
add
in
scas
add
test
call
aas
cmp
shlb
sub
push
stos
lret
in
out
insl
inc
inc
mov
sbb
jne
push
mov
sub
xor
lock
dec
shll
dec
addl
mov
push
dec
pop
pop
jle
and
das
loop
mov
jle
mov
xchg
mov
jl
stos
xchg
ljmp
in
repnz
pop
testb
negb
test
cmp
subl
mov
jno
push
lods
imul
fisubs
push
frstor
mov
mov
lods
jmp
and
movsb
jmp
cmp
out
adc
pop
jmp
mov
pop
push
sarl
in
aaa
mov
repz
mov
les
push
dec
insl
cmpb
scas
xchg
stc
inc
or
sbb
cmp
dec
test
pop
adc
mov
inc
int
dec
xlat
push
pop
loope
xor
xchg
jmp
sbb
xchg
sbb
sbb
pop
psubsb
pop
dec
std
adc
mov
call
sbb
dec
sarb
icebp
sbb
repz
gs
orb
cli
or
mov
lea
cmp
jge
sbb
loopne
ret
outsl
shll
ficoml
ja
sahf
scas
fisttpll
push
ret
call
add
jle
mov
cmc
hlt
cmp
cld
cmp
cmpsl
xchg
icebp
cmpsb
inc
hlt
out
cmp
pop
jmp
pop
xchg
push
inc
cmp
pop
jle
popf
sbb
pop
or
jl
outsb
push
test
cmp
repnz
aaa
sahf
mov
ljmp
push
out
popf
popa
ja
insb
cmc
inc
adc
sub
inc
adc
fwait
out
inc
outsb
mov
push
pop
test
mov
lret
cmpb
lret
sub
pop
mov
lods
out
adc
cmp
mov
mov
dec
xlat
scas
push
adc
xor
or
pop
out
mov
xchg
sbb
mov
rclb
sub
and
mov
iret
movl
mov
cs
in
setne
movsl
sub
rclb
adc
jl
sub
pop
icebp
and
xor
pop
adc
pop
lret
cmp
jmp
push
stos
lcall
pop
pop
and
jns
je
sub
xor
pop
rorl
inc
inc
sub
insb
insb
cmp
mov
adc
scas
dec
and
aad
les
mulb
and
cmc
adc
push
mov
mov
and
fistps
dec
subl
push
test
dec
dec
xor
push
dec
jg
fildll
shl
inc
rorb
mov
pop
ret
xchg
or
stos
push
push
shr
pop
jl
call
jmp
dec
xor
cmc
mov
int3
adc
jns
lea
fdivl
jle
jmp
jmp
stos
clc
loop
das
out
mov
inc
sub
loope
pop
daa
imul
lahf
mov
scas
inc
and
lcall
pushl
fiadds
push
or
mov
push
dec
scas
jmp
pop
pop
scas
xchg
addr16
ss
gs
inc
xchg
mov
mov
and
cmp
js
cmc
pop
xchg
sbb
mov
test
mov
stc
or
jge
or
xchg
xchg
loopne
cmpl
int3
dec
and
jle
mov
pop
xchg
je
arpl
fnstcw
xchg
pop
in
lds
jnp
dec
cmpb
aas
negl
rcrl
sub
xor
add
push
sub
sbb
and
push
add
sahf
pop
sub
jne
add
mov
adc
pop
cmc
iret
and
jge
pop
pusha
mov
push
mov
ret
mov
pushf
pop
pushf
adc
push
push
fldt
mov
mov
icebp
mov
mov
and
das
jge
dec
jns
out
push
lret
pop
inc
pop
or
cs
push
insb
pop
call
sarb
add
dec
mov
jmp
dec
iret
adc
inc
aam
push
enter
xchg
adc
sbb
mov
in
bnd
jnp
sbb
mov
lret
and
out
sti
lods
and
jnp
das
add
mov
or
dec
rcl
pop
negb
cwtl
or
lods
cmp
fsubp
hlt
scas
mov
cmp
fistpl
cmpb
mov
push
fstpl
in
dec
push
fcmovne
adc
stos
push
sbb
repnz
pop
push
mov
inc
sbb
dec
xchg
das
clc
les
inc
push
sub
cmp
pop
cmp
push
decb
mov
out
shlb
xor
adc
call
fisubl
leave
mov
lahf
mov
pop
cmp
cwtl
xor
mov
repnz
test
stc
loop
das
nop
sub
sub
inc
pop
pop
jge
mov
inc
mov
and
aas
cmp
pop
notl
sub
fnstsw
pop
fs
push
adc
jge
aad
push
je
imul
shlb
popa
cmpsl
add
jle
lret
scas
mov
ret
mov
mov
cmp
push
mov
push
mul
ret
lcall
in
mov
mov
fdivs
inc
mov
pop
adc
mov
cmpsl
sbb
inc
out
dec
jle
cli
lret
sub
jg
imul
sub
pop
sbb
push
pop
sti
jg
daa
add
jnp
cltd
cld
or
rcll
out
lods
fsubrs
mov
arpl
addr16
adc
mov
in
roll
outsl
daa
and
xor
mov
jns
adc
out
mov
and
and
add
mov
mov
add
sub
mull
or
icebp
pusha
cwtl
push
mov
xchg
dec
xor
add
jns
nop
je
push
lea
mov
push
fimull
fcmove
in
shlb
rcrl
hlt
loopne
je
adc
clc
sbb
nop
shrl
mov
cmc
push
aad
add
je
mov
fmuls
pop
jnp
push
sub
pop
fldcw
call
cli
mov
fidivs
aaa
scas
lret
pop
shrl
arpl
pushf
pop
fdivrl
sub
shl
outsb
fucomip
roll
loopne
xor
push
sbb
js
aaa
cmpxchg8b
lds
xchg
fst
jo
fadd
and
scas
sbb
fwait
aad
push
repz
dec
inc
xchg
jmp
cli
inc
fsubl
sub
push
daa
in
fisubrl
xor
mov
ficompl
inc
jmp
or
cwtl
or
aam
cmpsb
pop
aas
or
lea
push
test
pop
aad
mov
movsb
call
mov
add
out
dec
jg
or
lock
jnp
faddl
pop
add
mov
inc
mov
in
cmp
jp
jle
jbe
add
sub
pop
xchg
pop
js
outsl
addr16
rorb
icebp
xor
insb
mov
push
mov
pop
fimuls
ja
cld
lahf
mov
pop
cmp
xor
adc
test
pop
mov
leave
movsb
xor
push
enter
ljmp
imul
pop
bound
mov
push
add
dec
subl
xchg
mov
and
mull
pop
lods
in
push
add
adc
jg
outsb
in
rol
and
sub
pop
dec
inc
push
xor
gs
jns
xchg
inc
push
daa
jg
fdivrl
pop
ret
test
pop
cmp
xor
mov
inc
sbb
and
mov
jns
inc
into
cmp
call
out
inc
and
loop
movsb
xor
jo
loopne
hlt
inc
bound
xor
cmp
jno
push
sbb
adc
scas
lcall
je
movsb
into
pop
mov
fdivrl
es
or
insb
jmp
mov
mov
test
adc
xor
out
int3
mov
xchg
imul
sub
adc
lock
adc
mov
sbb
push
xchg
cld
cwtl
dec
in
mov
loopne
push
daa
repnz
cmpsl
xchg
jne
and
dec
aaa
or
sbb
pop
and
adc
mov
xor
push
mulb
sbb
aas
shrl
sbb
stos
jno
imul
lock
mov
hlt
popf
push
add
lcall
aaa
or
out
jno
adc
sbbl
xlat
test
lea
lods
jb
popf
xchg
cmc
lea
mov
icebp
mov
in
xor
test
popf
mov
cld
jge
pop
add
or
ror
xchg
cmc
js
jae
add
push
imul
inc
lret
sbbl
push
aad
adc
aaa
insl
push
sub
jbe
add
iret
sbb
adc
jp
sub
ss
outsl
mov
insb
aam
push
dec
sub
ss
ret
adc
data16
daa
dec
push
xor
test
push
adc
jmp
xchg
aas
mov
mov
jmp
pop
adc
or
sbb
imul
mov
sahf
shrb
iret
xor
add
out
repnz
push
or
push
sub
inc
pop
ret
dec
push
dec
lods
mov
repz
repnz
mov
out
cmpsb
sbb
and
cmp
loop
aam
sbb
rol
and
test
loopne
push
sbb
pusha
popa
cmc
mov
mov
pop
inc
cmp
inc
stos
or
imul
pop
mov
or
jmp
outsl
daa
aad
pop
cs
sbb
data16
dec
fsubl
mov
push
incl
pop
xchg
lahf
shlb
lret
xor
inc
or
mov
int
in
mov
pushf
jl
mov
pusha
sbb
daa
sti
mulb
test
adc
inc
and
es
ret
and
jg
jl
inc
mov
xor
sub
je
or
jg
imul
jg
push
pop
rcll
inc
sub
fadd
stc
inc
clc
test
lods
ja
lods
xchg
dec
xchg
dec
aaa
mov
push
inc
jns
ljmp
cs
sti
inc
xor
imul
sub
roll
dec
dec
jge
cltd
test
cltd
jno
mov
clc
movsb
dec
in
push
mov
fxtract
sub
dec
out
xor
lret
sbbb
push
push
loop
adc
mov
scas
iret
xor
cmp
das
pop
or
cmpb
push
xchg
pop
dec
out
addr16
xchg
mov
clc
lods
adc
mov
mov
into
lea
sar
add
mov
lds
sub
stos
test
pop
push
ret
mov
in
and
mov
sbb
jne
into
jl
mov
push
cltd
xlat
pop
inc
push
loop
mov
jmp
hlt
aad
out
scas
in
cmp
jbe
mov
test
insl
mov
adc
pop
dec
rcrb
fisubl
adc
or
mov
jo
mov
add
stc
push
push
dec
lret
gs
jg
scas
add
aaa
adc
add
test
divl
adc
jecxz
lret
push
data16
jbe
mov
jecxz
test
mov
lret
test
je
mov
mov
into
and
push
push
add
lea
lret
or
ss
out
adc
inc
push
popa
xchg
xorl
sub
xor
gs
pusha
xor
mov
jae
mov
mov
test
pop
xor
in
add
xlat
adc
pushf
dec
test
outsb
push
icebp
fnstcw
add
lea
inc
test
push
sub
jge
inc
sbb
in
add
loopne
inc
popa
jne
adc
mov
stos
mov
ss
mov
lahf
dec
pop
shrl
js
js
dec
push
jae
stos
lret
icebp
sub
push
inc
sbb
add
gs
mov
mov
adc
push
add
dec
out
mov
xor
dec
call
adc
pop
call
lahf
fdivl
in
repz
xchg
outsb
xchg
fnstenv
test
lret
and
fcmovbe
scas
sahf
or
sarl
sbb
popa
or
outsb
jmp
sub
les
inc
dec
mov
xlat
or
sbb
hlt
jo
mov
test
shlb
jge
movsl
movsl
mov
inc
jp
mov
dec
inc
pop
repz
jle
push
xlat
sbb
cmp
pop
add
les
pop
into
mov
lahf
pop
mov
aaa
jmp
in
or
xor
test
xchg
push
in
xor
xor
inc
scas
call
inc
outsl
lea
fwait
jp
sub
pop
add
leave
aas
aaa
dec
inc
xor
add
adc
or
sub
jno
inc
sahf
lret
ja
pop
and
enter
lcall
cs
iret
leave
shlb
push
jae
shrl
shlb
inc
andb
les
pop
mov
jo
aad
push
add
xchg
das
xlat
pop
push
or
scas
popf
rclb
mov
jmp
int3
lods
js
fwait
mov
out
inc
andl
test
or
aaa
or
in
xor
sbb
or
ljmp
mov
cmp
fstpl
mov
cmpb
pop
scas
lret
push
mov
aad
fldln2
nop
lret
rcrl
dec
cwtl
fisttps
push
sub
push
test
sub
mov
incb
or
mov
fmuls
mov
sub
fadds
repz
pushf
test
mov
inc
cs
into
sti
sarl
dec
loope
mov
popa
pop
xor
adc
inc
inc
inc
outsl
and
and
xor
mov
repnz
push
sbb
sub
mov
cmp
adc
xor
pop
jne
mov
xor
pop
adc
lcall
mov
mov
mov
hlt
pop
gs
sub
and
std
and
sub
jp
add
rcr
lea
inc
inc
xchg
jns
jmp
xchg
lret
or
inc
imul
roll
dec
into
pop
xchg
mov
aam
shr
jb
sarl
iret
add
and
mov
lods
les
mov
cmp
push
fistpll
std
ss
sub
add
enter
push
sub
lea
and
daa
jo
test
inc
lea
push
push
adc
jns,pt
jecxz
clc
fcoml
mov
or
dec
aam
fs
xchg
bound
xchg
enter
sbb
mov
das
in
fidivrl
jno
clc
dec
add
inc
aaa
das
test
scas
jmp
shll
xor
out
sub
mov
movsb
sti
pop
pop
pop
out
repz
pushf
arpl
add
mov
mov
mov
into
mov
frstor
hlt
sub
dec
sarb
mov
hlt
mov
mov
xor
insb
dec
sub
push
mov
push
mov
mov
cmp
fsubrl
jns
inc
mov
xchg
aam
jno
nop
aas
push
insb
pop
pop
xchg
int3
sbb
lcall
cmp
pop
xor
pop
dec
inc
lea
xchg
scas
and
ja
xlat
xor
jnp
pop
imul
xchg
in
insl
dec
dec
daa
push
mov
inc
jle
sbb
fwait
stos
rol
les
xchg
mov
add
adc
jmp
popa
dec
push
pop
and
data16
dec
inc
push
mov
or
mov
loop
xchg
sbb
aas
pusha
dec
aad
je
jp
dec
outsb
in
and
jns
idivl
repnz
lcall
cmp
test
xchg
sbb
cmp
addr16
xchg
push
push
gs
cmp
xchg
jecxz
std
xlat
inc
pop
mov
jo
decl
rcl
pop
out
insl
push
sbb
sub
push
sbb
mov
outsl
imul
das
mov
lahf
mov
int
dec
dec
pop
mov
mov
mov
pop
or
inc
xchg
shll
dec
cmp
mov
mov
mov
xlat
sub
and
insb
pop
push
and
out
jb
xor
shlb
mov
xchg
fwait
ret
xchg
mov
shlb
adc
mov
loop
andb
ficomps
cmpl
jmp
cmpsb
iret
addr16
or
je
fisttpll
xchg
or
or
xchg
clc
inc
lcall
ret
sbb
mov
fsubr
fs
imul
cmp
sub
test
movsb
scas
mov
mov
xor
repz
fidivs
fidivl
les
ret
iret
push
pop
jp
pop
mov
dec
mov
xor
scas
lock
es
mov
movsl
and
gs
sbb
inc
push
push
lods
inc
cmpsl
dec
leave
sub
bound
addl
icebp
into
and
jle
xchg
aad
adc
hlt
arpl
jmp
dec
mov
test
adc
lods
push
adc
sub
movsbl
sti
sub
adc
dec
lods
xchg
das
ret
mov
mov
js
js
fbstp
adc
dec
in
sub
xor
out
js
adc
rcrb
and
call
aam
les
stos
ja
jae
adc
inc
stos
cmpsl
mov
repz
movsb
or
or
aas
cli
xor
pop
add
lock
xor
lahf
or
cmpsl
and
push
or
jmp
outsl
fidivs
in
jne
jbe
sbb
js
push
movsl
fcos
dec
pop
xchg
cmovs
arpl
scas
add
lret
dec
xchg
mov
cwtl
icebp
inc
xchg
cmc
cmpsb
es
lret
and
aas
adc
xor
mov
push
sub
fidivs
xor
jp
add
out
in
add
inc
or
imul
xchg
add
outsb
mov
in
mov
sub
lahf
push
fists
enter
repz
cmp
pcmpgtb
shrb
adc
sahf
mov
sub
inc
dec
scas
xchg
shl
out
mov
insl
xchg
cs
loop,pt
hlt
int3
xor
jle
flds
jne
lods
pushf
mov
cmpsl
fistpll
mov
mov
lods
inc
cmp
cmp
in
fadd
or
mov
movsl
out
jp
xor
loope
popf
mov
icebp
xorb
cmpl
dec
and
xor
cmp
xrelease
xchg
shl
mov
call
xchg
add
nop
lock
add
arpl
pop
cwtl
jne
mov
dec
std
lahf
sbb
jne
cmp
imul
add
test
les
cmpsb
xchg
sar
sbb
push
imul
ds
fcoml
and
lcall
je
out
cmpsl
aad
or
outsl
and
inc
insb
insl
sti
andw
mov
pushf
fstpt
xor
jns
jnp
iret
or
aaa
xchg
cmp
aaa
jle
xor
inc
cld
push
leave
ljmp
out
outsb
test
and
push
xchg
fidivrs
xor
mov
jne
dec
pop
into
rorb
adc
dec
fs
mov
popa
insl
sub
cmc
int3
imul
ret
fsubr
arpl
mov
movsb
mov
repnz
and
or
sbb
and
repz
clc
gs
cmpsb
flds
jl
jbe
or
fwait
xchg
and
je
pusha
into
push
sbb
clc
mov
int3
scas
shlb
jl
mov
sub
inc
mov
fmuls
push
inc
xor
xor
sbb
ja
lahf
js
loop
lahf
xchg
adc
push
lcall
sub
cmp
loop
dec
sbb
push
xchg
in
jb
lea
push
ja
push
push
daa
out
out
mov
adc
adc
pop
xor
adc
dec
test
lahf
inc
add
pop
insb
scas
mov
in
mov
ror
add
mov
mov
nop
je
vpsllq
pop
lods
push
or
gs
test
or
xchg
jecxz
xlat
sbb
cmp
jbe
inc
push
sbb
push
adc
mov
sbb
cmpsl
jno
ja
cmp
xchg
mov
sbb
in
rcl
les
mov
mov
in
push
cmp
je
jnp
add
stos
push
cmc
pop
and
repz
cwtl
cltd
xchg
in
fmull
pop
out
inc
pop
pop
add
inc
mov
mov
adc
fmull
xchg
jae
std
outsl
mov
in
xor
xchg
lcall
jl
or
sub
mov
daa
dec
or
in
mov
or
inc
lock
ss
inc
mov
or
in
push
testb
in
jo
xchg
pop
and
je
or
loope
leave
in
adc
stc
pop
aas
mov
xchg
mov
cmpsb
sub
pop
shl
pop
fwait
add
mov
outsl
fwait
or
push
dec
mov
adc
or
xchg
clc
fs
sbb
pop
or
test
lcall
push
dec
xor
rorl
sub
addb
push
fnstcw
dec
arpl
sub
in
outsb
push
jmp
mov
and
pusha
das
out
andb
fs
inc
imul
aam
nop
add
stos
jo
cmc
mov
arpl
outsl
sti
xchg
shll
cmp
sbb
fistps
out
movsb
and
xor
push
push
jp
ss
sub
sub
mov
lcall
cmp
lret
es
loopne
mov
cwtl
js
lock
daa
or
jl
int
pop
xor
xor
test
ja
xchg
adc
stos
fisubrl
daa
pop
dec
lock
out
dec
jb
or
cmp
aad
test
push
mov
fiaddl
mov
shl
insb
pop
dec
cltd
mov
cltd
lcall
gs
sahf
mov
stos
daa
xchg
mov
jg
pusha
xchg
inc
xor
out
roll
insb
outsl
movsb
or
lea
dec
xlat
add
or
ficompl
shl
push
cmp
pop
xor
push
in
ficoml
inc
cli
stos
cltd
stc
fcoms
xor
mov
sbb
clts
bound
in
out
fmul
stos
in
dec
mov
subb
add
xor
and
pushf
aam
push
mov
out
nop
or
lahf
push
xor
jp
jl
mov
leave
xchg
pop
mov
jmp
cmp
dec
stos
push
ss
push
mov
lcall
pop
or
xchg
enter
addr16
stc
int
xchg
mov
sub
movsb
add
and
das
sbb
andl
rorl
negl
aaa
jmp
imul
xlat
popf
mov
scas
scas
or
jb
mov
aad
sti
jle
push
jnp
xchg
ret
test
adc
nop
jo
int3
mov
cmpsb
dec
mov
push
and
sbb
dec
icebp
lods
jp
fildl
inc
mov
dec
stos
sbb
push
sub
hlt
cs
in
fcmovne
and
sar
jmp
popa
imul
fcmovnb
jo
xorb
dec
out
mov
or
push
ja
sub
mov
mov
mov
pop
mov
jle
mov
hlt
cli
movsb
lock
dec
xchg
iret
push
inc
inc
stos
lcall
xor
mov
incb
mov
and
jb
cmc
adc
leave
fdivs
jmp
mov
cld
mov
scas
js
cmc
xor
ss
adc
mov
mov
ljmp
sbb
cmp
outsb
and
cli
sub
push
popf
ss
sbb
pop
mov
add
std
fidivrl
insl
adc
shrl
jns
aam
popa
add
xor
shll
sbb
sarb
and
das
add
jl
bound
popf
xor
es
outsl
jle
xchg
mov
xchg
sbb
fbstp
mov
add
test
cltd
mov
pop
clc
dec
leave
clc
pushw
andb
nop
in
leave
movsl
das
sub
aaa
xor
aaa
push
mov
inc
mov
movsb
mov
daa
in
call
cmpsb
mov
xchg
xchg
ss
pushf
addr16
cmp
and
adc
jecxz
sbb
cmp
adc
mov
jo
dec
fsub
inc
insl
jbe
hlt
call
sar
insb
fwait
mov
loopne
or
sti
jg
and
movhps
push
aas
xchg
jle
sub
pushf
sbb
mov
and
cmpsb
jne
aad
jnp
xor
test
insl
and
and
xchg
aad
mov
mov
inc
sub
jne
mov
icebp
into
loopne
jmp
xchg
in
dec
xchg
divb
xchg
insl
push
mov
dec
lea
pop
mov
sbb
push
pop
arpl
lret
sbb
pop
imul
mov
adc
icebp
mov
cltd
fdivl
jnp
jb
or
push
and
or
cmp
or
mov
mov
aas
in
pop
mov
aad
push
repz
dec
cwtl
repz
test
pusha
xor
lea
ret
jo
push
jp
jge
fists
push
inc
aas
xchg
cmp
sub
ficompl
popa
loope
repnz
mov
mov
jle
icebp
stc
xor
sbb
dec
stos
mov
insl
adc
mov
sbb
jo
dec
int3
sub
orl
in
mov
in
xchg
push
xchg
imul
stos
inc
mov
jg
lret
outsl
sbb
sahf
shlb
lahf
push
sarb
sub
sbb
lret
lcall
movsl
cmp
enter
dec
pop
mov
dec
mov
shrl
or
inc
aam
inc
lds
pusha
dec
vprotd
imul
pop
sbb
mov
fistpll
add
fidivl
call
icebp
movsb
fimuls
nop
xor
inc
test
mov
jmp
inc
lahf
es
inc
cmp
sti
in
call
sub
imul
mov
or
fnstenv
mov
sbb
lret
jge
xchg
or
cwtl
data16
stos
mov
jp
jnp
cli
adc
addr16
loopne
push
mov
loope
mov
mov
xor
in
pop
js
lret
xlat
je
imull
dec
dec
call
cmp
lods
iret
cmp
or
jnp
push
jecxz
add
inc
in
lods
mov
sti
jb
cmc
out
xchg
and
cmp
int
xor
push
mov
cltd
fimuls
push
pop
rcrb
cmc
stos
and
mov
push
xorl
jnp
ljmp
sbb
push
xchg
std
or
mov
mov
loopne
das
fsubrs
jb
inc
mov
into
dec
xor
pop
mov
push
push
inc
sub
inc
das
sbb
lds
mov
leave
pop
dec
insl
bt
adcl
mov
xchg
add
adc
mov
and
lods
mov
ret
mov
push
jo
xlat
push
paddq
jmp
mov
dec
or
fidivrs
insb
ret
into
mov
nop
stos
inc
xchg
cmc
push
or
inc
pop
jmp
mov
mov
mov
or
iret
mov
mov
orl
add
mov
jns
dec
scas
dec
es
cmp
sbb
cmp
out
clc
vmovdqa
push
and
ds
adc
addl
sbb
mov
ljmp
mov
negb
insl
mov
mov
jmp
mov
addb
fldcw
arpl
push
dec
pop
ss
std
mov
aaa
aaa
sub
ret
pop
jg
xor
or
xorb
mov
fistpl
ja
mov
xchg
xor
hlt
cmpsb
push
out
dec
mov
fs
test
test
cmp
xchg
mov
add
jne
test
pop
jo
subb
mov
ds
imul
repnz
push
call
adc
imul
outsl
xchg
in
mov
mov
pop
jp
gs
das
or
cmc
enter
rolb
scas
lods
aas
lock
clc
aaa
pop
xor
mov
dec
cmpb
daa
inc
sbb
xchg
data16
stos
cld
in
scas
loopne
dec
mov
xchg
inc
jp
je
imul
aas
out
mov
popf
fcmovne
xchg
insb
dec
mov
adc
js
popa
pop
sub
scas
cmp
pop
movsl
rcr
lcall
pop
pop
push
out
insb
inc
outsl
lds
push
jno
shr
adc
push
loop
and
pop
mov
insb
jo
test
inc
lahf
int
ja
xchg
cmpsb
inc
jns
sbb
arpl
dec
mov
or
mov
dec
int
repnz
cmp
and
push
cwtl
enter
pop
in
ja
jmp
sbb
popf
mov
ljmp
jae
insl
pop
sbb
push
rcrl
movsl
sbb
xlat
mov
mov
pop
push
into
and
mov
xchg
push
rolb
iret
fwait
cmp
jl
inc
adc
dec
xchg
mov
mov
aad
lret
in
cmp
cmp
bound
jns
xchg
and
pusha
xlat
and
lret
ud0
pusha
cmp
xchg
adc
stc
jb
in
dec
and
daa
push
push
mov
or
mov
lret
mov
push
pop
pushf
std
out
fbld
xchg
cmpb
pop
std
mov
fsubr
jp
sbb
test
outsb
xchg
ficoms
imul
jo
inc
sbb
test
cltd
mov
test
inc
lock
jns
xor
imul
mov
fwait
sub
sbb
add
je
fsts
aaa
sahf
push
mov
shlb
inc
into
xchg
xchg
jg
fucomi
data16
test
mov
xlat
js
sub
das
pop
add
fcoms
adc
pusha
daa
pop
rcrb
test
jmp
mov
xor
repnz
inc
or
test
xor
nop
sub
xor
adc
pop
dec
jp
dec
cmp
mov
push
push
je
mov
aad
sbb
leave
fs
andl
sub
or
jno
test
add
mov
ljmp
stos
scas
popa
cmp
repnz
add
mov
shlb
jl
or
jmp
dec
add
jp
lahf
imul
adc
inc
test
mov
mov
adc
dec
jbe
jg
outsl
jl
jnp
xchg
sub
mov
mov
sub
call
cltd
jo
shrl
cs
mov
test
scas
es
imul
imul
shrb
xor
cmpsb
and
sahf
mov
ljmp
mov
jns
test
sub
fs
adc
adc
xchg
jecxz
and
adc
pop
cmc
dec
cmp
push
shlb
pop
ret
push
mov
out
xchg
xorb
and
mov
imul
fs
fnstcw
push
int
mov
jbe
int3
ret
in
movsl
ljmp
xchg
sbb
aas
mov
clc
fs
fcoms
mov
imul
cmp
fnsave
das
jge
pop
jo
imul
fcoms
cmpsb
dec
orb
sbb
pop
cmc
fwait
pop
pop
dec
sub
pushl
leave
or
ret
dec
fiaddl
js
dec
fwait
pop
lods
cmp
jg
inc
divb
adc
nop
or
push
sub
sub
pop
mov
jmp
test
in
pusha
aaa
cmp
inc
lret
outsb
sub
je
clc
imul
mov
ss
xor
add
test
out
add
pop
xchg
das
jb
push
pushf
leave
mov
pop
clc
mov
test
mov
mov
pop
pop
jb
imul
movsb
push
repz
stc
dec
sbb
xor
test
jne
lock
jl
mov
sbb
aaa
test
push
sarb
stc
lods
xor
add
lods
inc
stc
movsl
pop
pop
sub
push
sub
adc
cld
aaa
lds
andb
bound
sbb
adc
icebp
insb
sbb
test
xor
mov
fnsave
and
xchg
lcall
adc
sbb
pop
sub
outsl
mov
lret
and
div
add
into
repz
adc
or
pushf
xlat
std
lods
stos
movsb
arpl
pop
int3
js
mov
dec
out
mov
in
cmc
jp
or
mov
dec
jg
jmp
push
or
add
push
mov
stc
dec
lahf
nop
stc
jo
and
icebp
jno
xor
cli
ss
repz
sbb
sahf
cli
adc
push
jnp
mov
cs
fildl
xchg
out
xorb
fstpt
setge
loope
mov
aas
mov
iret
imul
es
mov
cld
test
dec
mov
lds
pop
mov
cmpl
sbb
and
mov
or
add
or
test
shrb
in
jnp
jp
adc
sub
mov
movsl
sbb
add
xor
lds
jne
stc
push
dec
xor
icebp
arpl
sbb
mov
or
mov
pop
inc
adc
outsl
mov
arpl
pop
ljmp
xchg
imul
sub
scas
inc
xchg
pop
sbb
cltd
jne
push
push
add
pop
outsb
test
gs
mov
jno
addr16
add
xor
ret
ret
jg
mov
enter
pop
or
cld
mov
xchg
push
arpl
ret
sub
xchg
lret
cld
cmpb
or
scas
pop
inc
jecxz
rcrl
pop
push
fstpt
mov
cld
rclb
and
test
mov
or
pop
stos
push
dec
xchg
lcall
jle
movsl
inc
neg
and
mov
cmpsl
loopne
sub
test
rcr
sub
xchg
xchg
fistpl
cmc
fsubl
cmp
cmpsb
fbstp
lea
xchg
lcall
pop
xchg
repz
fimull
adc
push
orb
int
or
or
mov
lahf
cmpl
pop
mov
into
fsubs
loop
cs
mov
insb
pop
sti
shlb
lahf
popa
dec
mov
or
pop
pop
pop
push
xor
cmp
jle
inc
es
mov
cmp
and
mov
mov
and
dec
cld
in
divl
addr16
sahf
scas
rcll
adc
out
stc
dec
xor
mov
push
jbe
insl
dec
xchg
mov
addr16
xchg
push
xchg
fiadds
cmp
xchg
sarb
mov
mov
inc
das
cmp
sbb
clc
lahf
mov
scas
xor
scas
push
push
adc
mov
rorb
inc
les
mov
xorb
mov
pop
and
loop
pop
loope
ret
sbb
movsl
fildl
lods
jmp
jno
or
lahf
lret
add
subl
inc
xor
jo
std
xchg
lock
nop
push
arpl
inc
stos
xchg
repz
xchg
dec
jecxz
xchg
hlt
test
jne
stos
jne
sti
push
int3
xor
mov
push
mov
push
pop
jno
mov
pop
xchg
inc
cmp
pop
or
ja
cmp
filds
or
pop
in
mov
pop
push
jo
test
sub
jp
cmp
mov
mov
xchg
sar
cmp
imul
xlat
jmp
mov
daa
jmp
test
cwtl
and
clc
inc
icebp
ret
nop
lock
or
rol
aaa
add
lea
stos
in
subb
jns
divb
enter
ror
in
sbb
push
movsb
jae
push
ret
adcl
ja
and
bound
pop
push
push
stc
xor
lods
sti
adc
xor
sti
adc
jbe
or
add
dec
imul
loope
jle
aas
cmpsb
cmpsl
xor
call
pop
push
mov
jno
std
inc
je
out
inc
in
and
leave
scas
repz
push
jmp
cmp
jecxz
xchg
sahf
sub
sahf
adc
out
lds
pop
test
jmp
fs
dec
in
arpl
mov
ss
mov
imull
lods
pop
add
push
popa
jecxz
sub
je
add
cli
dec
dec
stc
mov
jge
pop
mov
or
push
mov
add
imul
pop
aad
stos
push
flds
inc
dec
mov
dec
mov
hlt
aad
movsl
lods
xor
mov
fisttpll
js
sub
xchg
mov
scas
mov
mov
stos
xchg
push
mul
xor
mov
repnz
loope
or
sub
dec
incl
and
icebp
data16
aas
push
inc
and
sbb
or
push
movsl
push
xchg
inc
or
ret
sahf
jns
push
mov
adc
icebp
popa
test
imul
push
test
xor
xchg
jnp
jle
movsb
pop
and
mov
push
packuswb
add
ljmp
shlb
dec
dec
add
sbb
add
inc
int3
shll
adc
aas
push
mov
movl
jge
adc
or
ja
and
imul
dec
repnz
movsb
and
in
or
sub
sub
js
fwait
loop
push
cmp
lret
xor
mov
lret
dec
or
add
push
loopne
mov
aas
rcrl
adc
andl
jle
adc
cmp
dec
lods
or
add
mov
push
cltd
push
jnp
push
mov
and
lock
insb
aas
or
dec
mov
jns
xor
sbb
cltd
dec
in
sahf
fbstp
popa
in
adc
ja
hlt
add
mov
lahf
ss
test
cltd
scas
xchg
cmp
test
push
sub
pop
scas
or
addr16
dec
das
xor
inc
jne
sub
mov
push
and
aad
push
clc
loopne
sub
leave
adc
sub
loopne
sbb
inc
movsl
xchg
arpl
out
mov
mov
sbb
lret
jae
sbb
ja
xchg
or
sub
or
jnp
mov
and
cmc
enter
dec
xchg
pusha
jbe
cmc
mov
jb
xor
test
in
xor
and
xor
sub
enter
call
cmpsl
sbb
cmpsl
addr16
mov
mov
call
and
test
dec
sahf
mov
mov
dec
pop
ljmp
push
call
out
frstor
idivl
js
sub
mov
in
xor
stc
xchg
xchg
push
push
into
or
jns
cmp
jb
iret
idiv
dec
iret
push
jg
lea
mov
xor
loop
xlat
mov
sbb
rcrl
mov
movsb
mov
ret
dec
cwtl
fwait
lods
ja
aaa
jg
imul
in
pop
pop
inc
popa
sub
add
cmp
lea
add
sub
adc
cwtl
jle
jmp
jecxz
loop
xchg
xor
cmc
mov
jg
jmp
fs
jne
mov
sbb
add
adc
lcall
push
lret
jns
lods
sbb
imul
adc
scas
sbb
std
incb
add
fistpl
xor
push
sti
gs
pop
mov
or
fwait
inc
mov
imulb
ss
sbb
push
push
je
add
mov
mov
test
cmp
arpl
adc
sbb
fisubs
lret
cmp
sub
jno
out
and
std
xchg
mov
adc
pop
inc
hlt
fcompl
jge
loopne
test
sbb
sub
in
shrl
cmc
or
cli
xor
inc
ret
cmp
pop
cmpsl
sbb
in
xchg
lahf
jg
sbb
into
dec
into
dec
bound
test
and
int
xchg
ret
jle
lea
dec
adc
jg
sub
hlt
iret
dec
rorb
aaa
das
daa
or
sahf
cmp
mov
test
sbb
xchg
cmp
repnz
out
pop
pop
jg
shll
add
imul
xor
aaa
and
mov
adc
stos
insl
stc
mov
add
cmpsb
adc
ret
mov
test
sub
jg
stc
push
outsl
es
mov
arpl
call
mov
inc
insb
ljmp
gs
sbb
add
xor
loopne
mov
fiaddl
add
dec
fdivrp
xchg
test
cmp
popa
stos
mov
test
ss
cmp
sub
ror
iret
xor
mov
inc
pop
rorb
adc
loop
cmc
push
sub
repnz
dec
add
and
into
testl
fmull
out
mov
fs
jecxz
xor
fisubl
rcl
sbb
lods
jb
sbb
push
mov
popa
fdivp
loope
lds
fisttps
lret
test
dec
dec
out
stos
lret
dec
sub
mov
popf
jae
add
mov
mov
fsubrl
popf
bound
pop
orps
adc
and
les
sbb
ljmp
jo
lret
push
gs
adc
jle
dec
cli
pop
adcl
addr16
ss
scas
push
movntq
test
pop
or
mov
and
mov
cmp
sub
xor
mov
enter
jecxz
pop
int3
fisttps
test
cmp
testl
xchg
in
fdivrl
fdivrl
jl
sbb
cwtl
pop
mov
cmpsl
adc
add
out
int
push
insb
ljmp
and
shlb
xlat
ss
cs
loope
repnz
lea
pop
pop
out
leave
adc
and
ss
test
inc
sbbl
cmpl
insb
jbe
xor
push
sbb
jb
mov
adc
pop
sahf
add
jmp
inc
cmpsl
push
add
adc
popa
xor
push
bsr
mov
sub
cmp
fistpl
and
jne
jae
movsl
daa
cltd
ret
inc
dec
or
mov
jl
xor
jl
xor
dec
iret
arpl
sub
sarb
sub
cld
cmc
hlt
aam
mov
jno
lcall
cltd
inc
repnz
and
test
imulb
ss
push
inc
shr
arpl
fldt
mov
xchg
inc
inc
jne
xchg
or
outsl
nop
push
sbb
pusha
data16
fyl2xp1
adc
cmp
xchg
aas
mov
leave
xchg
aad
mov
stos
rcrl
outsb
sbb
jecxz
adc
pop
les
xchg
fs
dec
js
js
xor
dec
sub
xchg
add
test
xchg
test
mov
and
std
call
jge
mov
mov
loope
popf
mov
cld
aad
insb
cmpsl
push
pushf
mov
push
xlat
jmp
ja
lcall
arpl
std
repnz
fcmovnb
and
daa
lahf
fisttpll
loopne
cli
cmc
iret
dec
sbb
push
mov
movsb
pop
xlat
pop
jbe
lahf
cmp
clc
lds
and
popa
lock
loope
push
and
loope
sbb
jge
sbb
mov
mov
pmaddwd
test
pushf
mov
jo
imul
inc
daa
mov
loope
outsl
sub
pop
xchg
xchg
xchg
inc
pushl
xor
adc
cld
inc
test
out
jno
out
mov
cmpsb
rcll
or
xlat
or
mov
arpl
mov
sbb
push
jnp
idiv
mov
andb
adc
ret
gs
movsb
addr16
jge
inc
outsb
inc
push
mov
mov
leave
sub
std
shlb
bound
ret
aad
fwait
sub
add
push
and
pop
loop
xor
adc
scas
and
mov
or
shrl
jmp
or
stos
add
and
shlb
pop
jle
and
sahf
xchg
lods
addr16
and
rcrb
or
mov
es
pop
lret
sub
mov
mov
dec
repnz
push
addr16
pop
das
mov
mov
out
shl
fisubs
cli
mov
lods
dec
cltd
or
jne
push
adc
fstpl
xor
jbe
adc
lock
cwtl
mov
int
push
test
sub
movsl
pop
jmp
aam
nop
cmp
inc
xchg
xchg
fbld
aaa
fstpt
cmc
xor
mov
fisubs
mov
sbb
call
jo
fnstenv
out
std
fdivl
cs
adc
jns
out
mov
pop
mov
or
dec
jno
cmp
lahf
add
std
pop
pop
inc
jns
loop
or
cmp
cmp
mov
into
cmc
ds
push
mull
mov
rclb
fbld
mov
addr16
insl
push
call
cs
mov
cld
mov
pop
mov
pop
and
pop
pop
aaa
sbb
in
dec
cmpl
add
popa
or
out
push
mov
outsb
xor
loop
sub
imul
fmull
sahf
movsl
repz
mov
add
xchg
sub
mov
sub
mov
nop
push
xchg
mov
movsl
pop
jne
iret
ds
cmp
roll
or
sahf
cmp
aaa
inc
push
jne
adc
push
pop
movsl
sbb
add
cwtl
or
jbe
aas
xor
pop
mov
inc
sbb
gs
cs
sti
mov
movsb
push
cld
or
cs
jmp
mov
sub
adc
inc
lea
cmp
cld
cmp
rcrb
and
mov
adc
lret
sub
mov
adc
rclb
popa
adc
divl
lret
xchg
lret
lret
fildll
in
addr16
stos
inc
fistps
mov
shll
andb
je
push
fcomip
dec
pop
cmp
int3
push
sbb
lahf
insb
inc
xor
xor
loopne
pop
stos
cmp
andb
lahf
xor
outsb
enter
scas
enter
and
jg
mov
es
pop
out
xor
adc
jb
loopne
out
mov
cwtl
push
cwtl
test
cltd
cvtdq2ps
outsb
pop
xor
mov
test
xchg
sbb
and
sub
push
mov
aas
aam
mov
fcmovb
add
icebp
stos
adc
cs
jnp
in
ljmp
xchg
insb
pop
or
daa
mov
test
imul
cmp
mov
cmp
leave
fcmovne
stc
or
stos
mov
cmp
pop
push
pusha
inc
push
iret
xor
ja
sbb
add
aas
daa
sub
and
fs
xorl
cmp
loopne
fs
mov
and
lods
push
insl
sub
jbe
dec
ljmp
xchg
out
pop
mov
mov
jae
inc
pusha
jb
cli
mov
dec
loopne
hlt
inc
outsb
test
nop
push
pop
add
scas
jns
rcl
insl
dec
aaa
mov
or
or
push
sbb
cwtl
and
inc
pop
ret
sbb
mov
inc
mov
aaa
cmp
push
movsl
jnp
mov
addr16
jnp
sar
mov
icebp
inc
popf
bound
stc
pop
adc
out
mov
pop
cmp
push
push
xor
xchg
andl
lea
mov
popf
clc
mov
inc
xor
int3
pop
xor
stc
xor
int
lea
int3
mov
adc
clc
aam
mov
mov
adc
mov
inc
sub
cmpsb
aas
adc
fwait
psrlq
jp
or
aas
int
inc
sub
fsts
xchg
xchg
mov
mov
mov
adc
sub
jbe
test
sbb
sbb
das
scas
xor
cmp
sar
add
inc
inc
cwtl
jns
negl
sub
stos
in
sbb
les
sub
push
sti
adc
or
or
adc
orb
andl
xchg
mov
dec
sub
push
lea
outsb
jno
ret
scas
in
pop
xchg
push
jbe
out
outsl
pushw
mov
push
cmc
arpl
cmpl
xchg
sbb
sub
mov
and
jns
hlt
or
mov
pop
and
ret
stos
inc
lods
mov
rol
xor
dec
mov
mov
aad
dec
pop
int3
mov
adc
pop
cli
fcoml
adc
fdivl
gs
imul
mov
pushf
jmp
mov
jb
adc
cmp
bound
jns
cmp
sahf
mov
movsb
idivb
push
sub
test
add
dec
push
lods
push
into
inc
sar
ss
mov
xchg
rorb
outsb
mov
cmp
jno
sub
mov
dec
icebp
mov
bswap
push
outsb
sub
and
mov
push
cmpsb
push
lods
lar
in
aaa
je
adc
movsb
mov
inc
adc
test
xchg
push
mov
fs
add
pop
std
and
leave
push
or
mov
push
pop
fldl
lds
faddl
fs
aaa
call
mov
push
push
stos
fs
pushf
xor
ja
xchg
not
iret
sbbb
mov
arpl
pop
rclb
sbbb
pop
adc
pop
imul
jecxz
punpckldq
adc
cmp
pop
sarb
dec
data16
and
push
adc
lret
jbe
fwait
sbb
ret
or
stos
jno
iret
cmc
inc
xchg
rcrb
pop
aad
jg
pop
in
int
dec
rcrl
push
cmc
xlat
cld
adc
or
push
ror
hlt
and
stc
jne
lret
pop
push
mov
imul
ret
pop
nop
add
inc
sub
xor
fmul
xchg
pop
xor
aad
mov
mov
cli
sti
mov
jae
xor
out
dec
hlt
test
je
bound
pop
sti
scas
stos
bound
scas
test
rorb
mov
fcoms
mov
mov
hlt
sbb
sahf
stos
insl
mov
lret
mov
gs
mov
cmp
out
dec
adc
mov
fnsave
call
bound
sbb
mov
in
mov
mov
nop
icebp
dec
test
test
lock
mov
cmp
es
bound
rorl
int3
loope
movsb
xchg
cmp
test
xchg
mov
sbb
pop
adc
inc
push
xchg
and
fwait
lods
fs
pop
leave
dec
std
jbe
fldt
hlt
lds
mov
repz
inc
push
mov
add
and
and
pop
inc
mov
int3
adc
bound
cwtl
add
jbe
mov
pop
mov
sbb
sar
cmp
mov
sub
int
dec
lea
or
cmp
rcrl
cmp
cmp
cwtl
ret
stc
or
fsubr
fldt
xor
xchg
adc
push
rcll
inc
aam
fsubrs
mov
jnp
arpl
stos
hlt
sub
imul
test
mov
in
lret
push
inc
ret
cmp
push
int3
cmp
mov
add
cmp
hlt
sub
sub
sbb
enter
xchg
xorl
pushf
push
movsb
jae
rorb
push
dec
cmpsl
das
stos
pop
push
mov
out
inc
mov
jp
push
pusha
mov
mov
sbb
xchg
push
rol
das
stc
pop
mov
movsb
in
jge
and
shll
inc
adc
out
int
out
call
pop
mov
or
inc
push
scas
mov
lods
xor
lods
dec
inc
pop
pop
call
fiadds
jbe
pop
cmc
mov
hlt
cmp
test
jae
mov
pusha
ror
mov
movsb
test
mov
sub
sub
popa
cld
aaa
js
lea
mov
pop
jb
cmpl
fisttps
sbbl
movsb
fs
je
xchg
call
and
mov
push
dec
into
cmp
push
ret
sub
sub
mov
lcall
aam
sub
pusha
cli
sub
mov
enter
xor
aaa
push
inc
cltd
movsl
cmp
fcmove
mov
mov
bound
mov
out
mov
adc
out
push
pop
xchg
mov
pop
mov
decb
pop
rcll
inc
ss
push
js
push
lock
mov
jnp
xor
inc
pop
ds
add
push
mov
shl
sbb
cmp
xchg
fimuls
das
or
pop
jle
sbb
xchg
mov
sbb
pop
andl
rclb
test
dec
cmpb
call
add
fwait
dec
ret
dec
shl
mov
mov
int
in
and
int
nop
insb
aam
pushl
insb
dec
loop
mov
nop
stos
sbb
lret
out
jne
xchg
push
mov
test
mov
mov
ret
lock
push
ret
or
adc
movsb
adc
cli
add
sub
add
out
repz
rcr
mov
out
loop
mov
cmpl
into
pop
in
xlat
dec
pop
push
out
scas
ss
mov
int
pop
ja
test
cmp
add
adc
fcoml
lods
clc
jecxz
cmp
stos
push
mov
ss
or
scas
cmp
jecxz
pop
les
loope
bound
adc
push
outsb
mov
and
cld
test
cmpl
imul
ss
or
and
xchg
mov
mov
imul
es
mov
add
push
mov
lea
cmp
mov
and
icebp
jnp
cwtl
inc
popf
inc
pop
mov
out
mov
adc
mov
scas
cmc
movsb
xor
jnp
mov
outsl
mov
scas
call
xor
repnz
outsb
outsb
xlat
jmp
shrl
sbb
and
inc
clc
loop
dec
inc
mov
rolb
mov
test
and
in
outsl
aaa
and
jl
cmc
pusha
xlat
xchg
stc
or
sbb
xchg
mov
out
test
push
push
test
mov
or
scas
push
lcall
bound
outsl
inc
jp
and
mov
addl
fmuls
or
inc
je
pop
push
loopne
outsl
push
lret
jmp
xchg
xchg
aad
and
or
cwtl
mov
leave
bound
fisubrl
cs
loope
pop
dec
rcll
ret
out
out
cltd
xchg
cmpsl
dec
enter
es
or
push
dec
adc
adc
xor
adc
or
pop
arpl
int
adc
push
jne
jl
insb
inc
cwtl
xor
add
int3
add
mov
loope
rcr
sbbl
mov
cmp
mov
inc
outsl
js
lret
jmp
movsl
cli
into
sbb
mov
jmp
iret
into
in
aaa
les
lds
cld
xchg
push
or
adc
or
int
lea
add
xor
mov
sbb
pop
or
and
pop
test
frstor
xor
adc
xchg
cmp
ret
dec
add
and
mov
push
cli
negl
int
sbb
jl
and
push
pop
fdivrl
test
iret
jo
xchg
lock
loope
mov
idivl
mov
adc
xchg
sti
inc
jne
mov
push
insl
pop
mov
std
jbe
adc
mov
in
mov
mov
sbb
push
push
subl
push
push
lret
sub
xor
or
mov
inc
sbb
push
fisubl
cld
sub
inc
int3
jecxz
add
mov
mov
shlb
and
int
les
repz
xchg
xchg
and
push
push
aaa
add
add
pop
jnp
jecxz
mov
inc
pushf
xchg
mov
adc
fwait
mov
es
icebp
inc
jbe
leave
jl
mov
or
je
call
icebp
xor
adc
jle
mov
add
jge
in
push
ficomps
pop
leave
push
push
adc
lea
nop
xlat
movsl
or
fisttpl
xchg
pop
xchg
loop
and
xchg
cmpsl
test
mov
sub
notb
cmc
icebp
jo
jne
sbb
inc
push
push
movsl
bnd
mov
out
movsl
je
bound
or
push
add
scas
dec
sar
add
xor
sub
js
negl
bound
shlb
sub
jnp
and
pop
or
mov
dec
or
mov
imul
adc
in
xlat
lret
nop
or
bound
xor
sbb
push
ja
dec
xor
cmp
xor
cwtl
mov
stc
or
xchg
out
pop
jl
or
mov
sti
popf
fs
xchg
adc
movsl
out
mov
xchg
push
inc
sub
push
test
cmp
adc
xor
push
jo
dec
mov
jbe
leave
movsl
mov
ljmp
int
ret
xor
xlat
push
adc
stos
adc
xor
insb
mov
and
mov
vmovsldup
lcall
scas
or
ss
push
pop
jecxz
int3
dec
sbb
pop
push
cmpsl
fiaddl
mulb
ficoml
cmp
ljmp
dec
mov
jo
inc
xchg
jne
xor
cltd
in
popf
stc
inc
fisubl
je
jp
cltd
jle
sub
lcall
popa
enter
adc
push
mov
into
movsl
add
pop
scas
pusha
jg
xor
xor
jg
and
gs
jo
add
inc
jo
pop
mov
jae
and
mov
lds
sahf
add
nop
in
sbb
cmpsl
repz
add
scas
test
mov
out
inc
add
jp
or
test
mov
in
loop
xchg
inc
pushf
loopne
repz
adc
ljmp
pop
mov
jno
sahf
std
mov
push
xor
ss
out
repnz
push
inc
lock
test
lret
scas
addr16
pushf
mov
cmp
bound
imul
shrl
sub
cmc
inc
decl
fs
test
ss
dec
fmuls
and
andb
shll
outsb
int
sub
fdivrl
addr16
pop
loop
mov
shlb
push
jo
lahf
icebp
fsubrl
shlb
pop
pop
sbb
jmp
mov
mov
adc
lret
js
jp
jmp
inc
xchg
lahf
or
loop
mov
jo
inc
push
data16
pop
cli
mov
out
lods
pop
inc
cltd
cmp
add
pop
sbb
test
pop
decl
mov
mov
cmpsl
rclb
fistps
sti
add
pop
sti
mov
jl
push
jle
test
mov
and
adc
xchg
push
xor
dec
popa
mov
dec
ja
pop
pop
pop
sbb
inc
dec
clc
aaa
xor
jge
je
xor
sbbb
and
in
inc
jb
xchg
loop
out
sub
insl
pop
lea
xchg
pop
ret
push
cmp
ret
cli
lods
inc
pop
out
movsb
sbb
pop
or
jecxz
ret
push
clc
repz
sub
cwtl
gs
inc
int3
in
add
scas
faddl
sub
add
push
shlb
push
xchg
mov
ljmp
push
pop
shrl
fs
and
pusha
fnstenv
adc
mov
mov
sub
mov
cmpsb
jle
mov
repnz
into
xor
xor
clc
fstps
popa
inc
dec
jle
or
jecxz
or
pop
cmpl
repnz
inc
ret
outsl
js
movsb
sbb
push
out
mov
push
addr16
cltd
push
cltd
std
dec
pusha
cs
mov
subl
dec
jle
pop
out
sub
cmp
jecxz
popl
sbb
imul
addl
hlt
iret
inc
jb
add
sub
xor
mov
scas
int3
pop
cwtl
dec
push
mov
jl
arpl
ret
dec
dec
pop
cmpsl
rcl
lock
sbb
push
adc
aad
pop
enter
dec
xor
mov
ret
xchg
aad
inc
cmp
stos
xor
std
mov
rorb
or
out
int
rol
pop
addb
frndint
add
push
cs
mov
add
fistl
cmc
sbb
shll
xor
js
mov
dec
pop
xchg
jp
and
jg
les
pop
jl
mov
lock
cmp
aam
fbld
xor
decb
inc
jb
dec
cmp
mov
jns
cld
fyl2xp1
sub
cmp
push
in
and
imul
movsb
adc
std
rorb
mov
repz
popa
repnz
mov
fs
push
inc
into
loopne
into
xor
push
out
int
lret
enter
inc
pop
mov
stc
inc
rcrb
push
sub
and
mov
fs
add
add
pusha
das
call
imul
and
xlat
xchg
pop
and
jle
jp
outsl
fdivrs
cwtl
out
mov
and
jo
mov
mov
push
dec
jge
ret
loopne
loop
ljmp
jnp
sahf
adc
frstpm(287
sbb
mov
ficoms
sbb
fistpl
pushf
aad
shll
insl
ffree
push
xchg
stc
and
test
cmpsb
aas
leave
jno
pop
adc
jg
lret
das
arpl
adc
js
outsl
inc
mov
sbb
adc
xchg
sub
sbb
movsl
test
inc
les
xchg
and
ja
cs
pop
push
inc
xor
fwait
pop
out
xchg
or
loop
ljmp
addr16
out
cmp
ss
mov
push
cld
adc
xchg
sub
cmpsl
ja
aad
push
push
cmp
sti
test
xor
add
jmp
push
out
pop
insl
push
cs
mov
inc
repnz
mov
push
or
loopne
sbbl
push
xchg
xor
leave
push
xorl
lea
popf
and
dec
push
pop
test
das
pop
je
inc
cmpsl
fnsave
xchg
or
fldl
arpl
loope
and
jl
fwait
lcall
fsubrp
icebp
pop
mov
mov
loop
and
mov
test
outsl
jne
leave
adc
mov
incb
push
xor
jp
mov
jb
hlt
mov
sbb
sbb
sub
and
out
cmpsl
loop
xchg
mov
test
push
xlat
jne
sbb
fmul
sbb
cmp
shrb
inc
mov
cmpsb
lds
fdivs
std
xor
shll
pop
rolb
xor
sbb
mov
pop
mov
mov
popf
insl
mov
fwait
out
call
testb
mov
cld
and
not
and
scas
loopne
pop
out
aas
xor
mov
jns
bound
fwait
xchg
jmp
push
mov
aaa
jg
adc
test
fmull
sbb
or
cwtl
cmpsl
call
nop
cwtl
iret
ss
pushf
aas
adc
clc
dec
inc
or
mov
or
lods
sub
xchg
lahf
fdivr
dec
mov
in
dec
jecxz
push
jmp
mov
pop
push
sbb
jb
fs
pop
lret
xchg
adc
inc
inc
repz
popa
or
hlt
cs
ds
stos
js
inc
or
js
fildl
ljmp
cld
fidivs
fs
dec
repnz
xchg
xchg
or
add
loope
adc
hlt
pop
adc
es
sbb
scas
imul
pop
into
loope
xlat
out
loop
xchg
fwait
push
ret
pop
add
arpl
jo
xchg
add
aaa
int
inc
sarl
loopne
int3
xor
mov
or
es
mov
out
stc
lret
add
sub
xor
inc
lods
into
adc
push
iret
into
cmpsl
movb
mov
adc
pop
pop
push
inc
xor
sub
jg
pushf
xor
xor
in
lods
ret
ret
xchg
fcmovu
mov
int3
pop
jbe
subl
into
dec
fdivl
pop
loop
cmpsl
xchg
and
scas
fnstcw
aaa
xor
stos
pop
sbb
xchg
dec
add
cs
movsb
jmp
les
sbb
xchg
call
fldt
sbb
in
adc
pushf
js
jns
push
jne
fmul
mov
mov
xor
pushf
xchg
les
jne
das
out
mov
cli
add
ljmp
add
push
mov
repnz
cmc
into
loopne
xor
push
xor
mov
inc
cltd
xchg
add
ret
add
lret
popf
cmc
mov
xor
mov
int3
insb
cs
cli
mov
test
add
fsts
fbstp
fisubrs
and
add
inc
jno
ja
and
pop
xlat
xor
push
or
and
cmc
push
mov
enter
push
popl
mov
pop
hlt
push
xchg
popa
and
popf
inc
sar
jmp
jbe
sar
movsb
cmp
mov
xchg
lea
sub
sarl
sub
cwtl
jbe
sub
jge
mov
int3
mov
dec
xor
stos
jns
xchg
pop
aas
push
jge
in
xchg
push
inc
mov
jnp
in
ljmp
mov
test
mov
or
insb
lcall
daa
xor
sahf
fisubs
mov
mov
fst
add
add
icebp
ror
stos
mov
and
ret
mov
push
push
rcrl
popl
push
cmc
inc
jno
ret
out
in
shlb
push
in
push
push
xchg
hlt
mov
add
pop
aaa
mov
jno
push
out
div
scas
cltd
or
mov
adc
dec
add
jmp
lock
inc
cmp
xchg
sbb
push
inc
loop
test
les
sub
xor
pop
shl
cmpsl
mov
jo
jle
cmp
enter
push
inc
jae
scas
aad
adc
leave
sub
pop
aas
cmpsl
aas
adc
lcall
pop
pop
mov
sahf
repz
or
and
in
dec
mov
push
les
cltd
pop
lret
pop
push
aaa
xor
pop
and
and
jmp
hlt
pop
rorl
mov
out
jp
es
lret
dec
mov
sti
cmp
lea
ljmp
out
inc
icebp
mov
jl
inc
into
scas
xor
int3
mov
mov
sbb
ljmp
cmpsb
sub
popf
aas
addr16
xchg
in
xchg
mov
scas
insl
xor
stos
repnz
jae
jge
sub
daa
jg
loop
push
inc
enter
test
sbb
jl
inc
add
aas
mov
pop
mov
pslld
pop
cmp
cwtl
int
out
dec
push
xor
cld
int
cltd
sub
ret
arpl
loope
push
repnz
faddl
repz
add
add
jb
test
push
or
outsb
rcr
out
pop
mov
loope
divb
pop
inc
xor
scas
mov
push
dec
or
sub
pop
jns
test
orb
repz
xlat
mov
pop
jmp
imul
dec
pop
enter
cmp
movb
gs
repz
test
push
jne
pop
test
sub
jp
jmp
add
jne
insl
dec
xor
fwait
stos
cs
es
jle
add
xor
in
daa
data16
xchg
mov
dec
sbb
imul
adc
mov
push
lds
xchg
or
inc
dec
ss
mov
push
lret
aaa
mov
ret
fistps
rcrb
jp
push
ja
aaa
scas
inc
leave
mov
cmc
push
test
jno
push
movsb
arpl
out
es
stc
adc
test
jle
xchg
add
negl
xchg
cli
lcall
jns
popf
pop
aas
sti
or
xor
add
adc
or
iret
in
lret
inc
or
stos
iret
inc
in
xor
xor
pop
and
les
jne
insb
mov
dec
mov
xchg
pop
shrb
loope
arpl
sti
in
xchg
lea
and
mov
mov
rcr
mov
stos
cli
xor
dec
xchg
shrl
out
or
rorl
das
sub
mov
cmp
mov
cwtl
mov
sbb
inc
lcall
nop
ret
xlat
mov
mov
int
add
jne
adc
dec
sti
adc
insb
in
ja
add
scas
push
jns
adc
out
xor
test
push
repnz
sub
sbb
push
jmp
outsb
hlt
ror
mov
xchg
pop
lock
push
and
outsb
scas
cmp
push
cld
mov
xchg
stos
cld
int3
add
out
or
push
adc
xlat
jle
outsl
decb
sbb
add
pop
mov
mov
movsb
ss
inc
pop
sbb
add
mov
sbb
xchg
ror
sub
mov
push
stos
rcll
adc
ret
sub
sbb
or
adc
pop
sub
add
add
inc
aam
push
scas
into
inc
movsb
or
sbb
shrl
lret
xlat
or
push
push
sub
push
xorl
jb
jbe
arpl
push
sbb
xchg
stos
int
out
popf
rorl
mov
test
push
sbbb
adc
inc
mov
sbb
shr
add
cmovo
iret
mov
test
rorl
cli
mov
add
loop
hlt
adc
xchg
dec
cmc
int
lcall
bound
xor
adc
das
testb
aaa
xchg
mov
mov
add
push
orl
sarb
rcll
outsl
cmp
lea
xor
jg
dec
test
jg
dec
dec
sbb
dec
inc
mov
lock
scas
mov
mov
jo
push
stc
leave
cli
sbb
inc
mov
ret
in
xchg
pop
mov
icebp
divl
mov
fdivp
mov
subl
mov
iret
cmp
add
lret
cli
or
xlat
push
out
ja
scas
push
jns
mov
dec
loope
xchg
jmp
jecxz
shrl
or
or
sti
and
imul
imul
rorl
mov
data16
outsb
pop
inc
fldl
mov
inc
mov
in
notb
or
je
add
ds
pop
notb
enter
pushf
dec
inc
cld
frstor
mov
jle
loope
hlt
lcall
je
add
in
scas
fistpll
les
inc
shrb
push
cs
ja
and
ret
inc
lcall
sahf
push
rcrl
js
inc
icebp
and
lea
adcl
cwtl
pop
sub
clc
lret
add
movsl
jle
jp
movsl
xchg
mov
add
xor
dec
movsl
and
xorl
das
sbb
adc
cmpsl
stos
add
ljmp
mov
aad
je
add
sbb
add
push
nop
pusha
addr16
push
ds
mov
jb
sbb
sarb
xchg
and
cwtl
ficomps
les
lahf
or
sahf
ret
popf
jnp
aam
fs
xor
jbe
fdivl
sub
into
es
cli
jmp
les
inc
cmp
fs
loope
xchg
fmul
ds
lea
dec
cmp
insl
push
lock
adc
and
hlt
xlat
push
jnp
mov
scas
dec
es
xchg
popa
test
mov
add
dec
mov
push
rolb
pop
push
pop
outsl
or
jb
xor
or
mov
add
dec
sahf
sub
int3
dec
std
mov
out
stc
dec
js
add
add
jb
in
movsb
stos
fnsave
push
adc
and
sbb
xchg
sbb
std
sbb
push
lock
and
out
hlt
xor
lret
mov
jl
jns
flds
sub
daa
fstps
mov
add
xchg
lea
jecxz
arpl
and
push
int
popa
lahf
scas
mov
in
ljmp
xchg
call
mov
and
lret
fidivl
jno
lret
xor
int
in
xchg
lcall
in
jl
mov
jne
xchg
adc
xor
xlat
sub
movsl
pop
push
adc
dec
lahf
pop
icebp
sbb
push
sub
cmpsl
bound
imul
mov
fldt
into
loop
pusha
test
pop
add
xchg
ljmp
xor
out
js
jle
or
aam
push
pop
in
push
push
cmp
rolb
mov
jbe
ja
jge
out
sbb
pop
cmpsl
add
fistps
cmpsb
outsl
inc
imul
inc
loopne
negb
cmp
xor
push
cmpl
and
scas
hlt
xchg
cmp
mov
sbb
cmp
jns
xor
loope
xor
adc
jl
jnp
sbb
and
push
int3
loopne
sahf
add
xlat
push
cmp
addr16
xchg
add
add
push
popa
out
xchg
cs
shll
shll
lods
add
pop
fsub
scas
nop
mov
arpl
outsb
lea
or
xchg
xor
adc
sbb
cmp
ffreep
adc
xor
add
subl
and
pop
call
js
xchg
and
cmc
imul
fnsave
and
sti
xchg
mov
push
int
push
mov
addr16
nop
in
ret
push
clc
lahf
mov
cmp
or
adc
mov
adc
pop
clc
inc
ret
and
adc
dec
mov
testl
cmp
fimuls
mov
pusha
movsb
mov
sti
jecxz
sub
xor
roll
lods
rdpmc
mov
pop
cmp
xchg
add
loopne
pop
loope
cmp
stos
mov
mov
mov
add
mov
jmp
push
or
repz
xchg
js
test
fnstcw
faddl
adc
xlat
icebp
sub
dec
push
xchg
jns
in
jnp
movsl
fnstenv
jbe
adc
mov
in
mov
in
cmc
movsl
cmp
pop
stos
arpl
stc
push
mov
aaa
dec
outsl
xor
lahf
cmp
inc
lea
aam
push
cli
stos
add
mov
cli
aam
aas
sub
jmp
add
movsb
cmpsl
push
mov
insb
push
ja
out
cmp
mov
add
mov
push
xor
dec
test
loop
pop
or
add
pop
enter
enter
std
daa
lcall
pushf
pusha
ljmp
inc
mov
add
cwtl
loopne
add
dec
jns
pop
fisttpll
inc
hlt
test
cwtl
movsb
mov
fnsave
pop
mov
aas
jo
push
stc
ret
mov
sub
iret
xchg
rolb
rcll
lds
xor
pop
in
push
ret
sbb
mov
push
bound
fisttpl
stc
jo
ljmp
sub
int
mov
push
lret
dec
or
ret
lock
popa
call
push
mov
pop
aad
int3
in
dec
jge
test
mov
sbb
jg
fs
sti
push
enter
push
inc
jae
sbb
popa
pusha
shl
sbb
push
cmp
lret
lds
imul
add
mov
nop
xchg
pop
fwait
adc
mov
icebp
xchg
add
sub
mov
dec
scas
add
testl
int
cmc
fsubr
xchg
cwtl
push
out
je
cmpb
dec
push
sbb
inc
lock
sahf
add
jbe
test
lret
inc
fs
scas
or
int
mov
mov
mov
hlt
jns
rcr
xchg
pop
test
aam
xchg
pop
push
aad
stc
cmp
pop
cli
clc
clc
pusha
or
jle
lods
xchg
popf
nop
sub
mov
mov
cmpsl
dec
sbb
mov
lock
idivl
aam
fs
test
fcmovu
fs
sub
xchg
push
stos
sbb
cmp
int
jmp
add
sbb
add
cmp
jb
aaa
sub
dec
popf
rcrl
or
mov
leave
shr
and
xlat
pusha
xor
insl
call
xchg
leave
or
xchg
cmp
xor
inc
xor
loope
xor
fwait
ds
pop
inc
imulb
pop
mov
cltd
mov
addr16
fwait
les
jno
adc
stos
sub
andb
orl
pop
xor
mov
pop
outsl
subl
mov
stos
in
movsl
pop
xor
jg
push
cli
mov
test
push
dec
pop
xor
mov
or
test
repz
mov
push
addr16
lahf
push
jge
inc
test
into
jo
icebp
xchg
or
bnd
pop
in
pop
push
ljmp
and
adc
fs
or
lcall
push
jne
mov
sbb
lea
cmp
sub
add
pop
and
pop
bswap
sti
push
mov
roll
fs
xor
in
fstl
je
je
je
push
pop
adc
loopne
sub
hlt
pop
adcb
fdivs
mul
adc
xchg
orl
inc
cli
inc
movsb
mov
dec
fisttps
test
inc
inc
pop
nop
xor
mov
adc
faddp
cmpsb
out
pop
add
inc
cmp
mov
movsb
lret
xchg
in
sbb
into
sahf
adc
pop
int3
jmp
cltd
call
sbb
add
clc
repnz
lods
je
adc
les
cmpsb
lods
jns
rep
ret
out
add
pop
xor
imul
mov
push
cmpsl
das
cmp
pop
sub
leave
sbb
fcmovnb
sbb
out
adc
xchg
inc
filds
imul
jb
arpl
push
ja
lret
adc
push
adc
push
cmp
mov
fldt
or
or
dec
mov
jns
popa
bound
mov
icebp
and
jmp
shll
pop
mov
push
jge
xor
xor
rolb
pop
add
inc
mov
push
mov
adc
inc
test
fdivr
xor
es
lock
sub
cwtl
loop
fcoms
xor
xchg
sbb
cltd
push
loop
jl
mov
mov
dec
imul
jge
push
xchg
dec
add
lods
outsl
jo
mov
leave
adc
xor
int
out
dec
repz
loop
xchg
sbb
jl
push
je
out
jecxz
es
mov
and
sbb
add
ss
scas
add
in
jmp
popf
push
mov
lahf
adc
mov
pushf
shr
mov
dec
jl
xor
and
xor
es
inc
cmp
pmaxsw
dec
push
xor
repnz
rcr
ss
mov
mov
out
push
inc
mov
mov
push
aad
sahf
pop
xor
add
mov
push
or
adc
sub
and
xor
cmp
stos
lods
push
pop
dec
cmp
pop
or
stos
out
sub
jl
sbb
xor
fwait
mov
std
sbb
cltd
repnz
add
aas
cmp
pop
fdivp
push
outsl
cld
int
pop
shrl
pop
scas
in
shll
arpl
leave
movaps
mov
or
lcall
std
add
lcall
pop
xor
adc
movsl
fst
xlat
sar
push
pop
cld
xchg
bound
xorb
daa
inc
push
xchg
das
adc
ljmp
xchg
out
mov
push
fsubrl
sbb
add
xorb
imul
pop
adc
mov
pop
xlat
sub
leave
push
add
test
movsl
add
dec
xlat
fcoml
or
and
cmc
adc
jp
mov
add
aam
mov
mov
mov
add
mov
cmp
sub
xchg
cmp
mov
out
adc
xlat
push
mov
xor
test
sbb
pusha
fiaddl
and
and
mov
neg
fadd
cmp
dec
jb
iret
movsl
es
fsub
jbe
pop
jecxz
cld
add
mov
fildl
adc
mov
loope
adc
add
dec
xor
out
add
cmp
imul
and
ss
xchg
or
sbb
ljmp
push
test
and
cmp
faddl
sub
pop
pop
outsl
in
xor
sub
sbb
xchg
or
push
hlt
outsb
mov
push
fcmovnu
and
out
ret
call
cmpsl
push
scas
es
add
adc
push
mov
cltd
jo
mov
lret
adc
fisubs
mov
jp
shlb
mov
pop
add
jmp
aas
lds
adc
cli
push
mov
nop
in
stos
stos
aaa
mov
jae
dec
pop
outsb
cltd
xchg
push
xor
gs
cmp
imul
xor
popa
test
mov
push
loopne
insb
xchg
lret
mov
push
dec
add
sub
mov
or
sub
cmp
mov
sahf
inc
popf
cmp
sbb
push
rcll
fbstp
mov
sbb
int3
inc
dec
pusha
adc
and
sub
jno
pop
inc
test
aad
bound
sub
into
adc
mov
sub
ljmp
pop
outsb
cmp
fs
std
outsl
jo
mov
in
aam
mov
jle
inc
enter
jo
mov
xchg
test
xorl
loope
out
dec
xor
popa
outsb
out
int
ss
fisubrs
jns
imul
cs
pop
or
rclb
scas
icebp
cmp
mov
dec
leave
adc
jb
ss
cltd
jno
aaa
pop
push
cld
mov
call
fidivl
mov
mov
xor
cwtl
mov
shlb
push
clc
lock
out
push
push
ror
adc
xor
ret
and
add
cmp
stc
loop
xor
scas
and
enter
push
jp
loope
jno
mov
in
je
in
add
and
pop
sub
cmp
xchg
sbb
into
stos
sti
jle
pusha
jno
movsl
add
ss
ret
enter
add
xchg
push
test
mov
jo
in
ret
fs
outsl
insl
jne
clc
and
cmp
pop
into
sbbl
test
ljmp
push
in
cmp
mov
test
xchg
fbstp
inc
sub
pop
push
aam
ret
sbb
mov
fcmovnbe
jecxz
sub
xor
out
pop
movsl
xchg
pop
in
cli
out
and
lcall
sub
jmp
fs
loop
movsl
push
loope
and
inc
push
jns
pop
movsl
mov
test
mov
add
in
mov
ljmp
movsb
lea
pop
test
push
lahf
iret
andl
daa
stc
or
testb
push
xor
dec
pop
aam
loope
loop
sub
push
loop
mov
in
insl
pop
sarb
shufps
xor
jp
sub
inc
ffree
push
mov
or
mov
jo
loopne
dec
das
mov
and
mov
test
iret
push
jg
fsts
int
inc
scas
sarb
mov
repnz
int3
test
in
loopne
loope
lahf
inc
sbb
loope
cs
mov
xlat
das
and
pop
lcall
cmpsl
mov
sub
cmc
or
xchg
pushf
lret
lret
push
aad
add
call
and
add
fadds
cmp
pop
or
in
rcr
or
sub
push
insl
js
push
pop
ljmp
inc
mov
scas
jnp
or
out
aam
test
mov
jae
insl
and
xor
ret
cmpsb
imul
inc
mov
mov
sbb
sub
jnp
push
call
scas
arpl
aaa
cmpsl
rcll
mov
push
push
popa
and
ret
jge
outsl
stos
pop
add
jmp
shll
xor
out
fstps
fwait
jo
int
out
addr16
push
mov
fwait
add
xor
lea
daa
sbb
add
lret
fistpll
mov
jecxz
testb
bound
aas
mov
test
ja
fildll
jmp
cmp
int3
xchg
push
lret
andb
push
movsb
cmp
subb
xor
jmp
jne
iret
mov
ss
sub
mov
jle
int
js
pop
lcall
mov
cmp
loope
cmp
push
push
sbb
mov
and
mov
leave
pusha
aas
jns
repz
sub
movsb
jle
jns
imull
sbb
mov
jmp
roll
jmp
adc
outsb
mov
movsb
push
mov
lret
insl
or
dec
pop
fsubrs
int
xor
movsb
rcll
xchg
mov
and
rcrb
jg
cmp
aad
mov
leave
andb
fnstsw
and
or
adc
out
shll
cmp
push
sub
pop
or
mov
mov
leave
in
popa
mov
scas
sbb
mov
mov
shrb
mov
cmp
lret
fisttpl
data16
mov
pop
sarl
rol
stos
sbb
call
fisubl
inc
sbb
je
jge
sub
imul
outsl
push
and
mov
add
mov
jge
xor
cmp
sbb
sub
ljmp
shlb
cmpsl
inc
xchg
out
cmc
sarb
jl
lods
adc
mov
jae
addr16
jnp
rcrb
arpl
mov
lods
call
inc
es
rcll
xchg
into
inc
ljmp
xchg
sub
xchg
xlat
push
add
pop
or
mov
call
je
cmpsb
inc
gs
adc
inc
lret
stos
cwtl
adc
test
scas
xchg
enter
xchg
sbb
shll
sarb
lods
pop
pop
dec
loopne
cmp
xor
xchg
inc
mov
mov
push
push
daa
push
jge
movsb
imul
dec
and
mov
mov
aad
or
andl
les
mov
lret
push
dec
mov
aam
mov
into
movsb
in
mov
inc
sub
push
mov
adc
stc
jno
push
std
fisttps
mov
adc
loope
cmp
mov
popl
sub
mov
ret
stos
out
xor
pop
mov
std
lock
stos
mov
int
jno
loope
cs
pop
fnsave
arpl
fnstsw
mov
and
xchg
pop
adc
inc
adc
cmp
pop
jle
cmovle
pushf
jbe
lods
and
je
push
push
and
pop
pop
dec
int
pusha
xchg
aas
cmp
out
cmp
movsl
cltd
ret
jl
out
cmc
sarb
clc
cmp
sbb
add
dec
sub
push
je
mov
mov
js
js
ds
push
fwait
pop
leave
xor
in
add
mov
dec
and
icebp
pop
movsb
pop
add
inc
adc
pushf
shlb
jns
mov
pop
imul
push
jb
int3
addr16
pop
dec
push
push
xor
sti
nop
fisttpl
and
mov
add
ja
outsl
mov
sub
add
jl
sbb
jne
and
or
jl
adc
sahf
xchg
pop
and
cmp
xchg
in
xchg
dec
dec
mov
adc
fsubrs
xor
sbb
rcl
and
adc
mov
adc
sub
xor
stos
out
outsb
sub
stc
outsb
cmp
sti
dec
mov
jl
fcoms
outsb
or
into
or
in
adc
jge
int3
test
xlat
mov
pop
fdivl
loope
aaa
push
push
dec
sbb
fsubl
sbb
outsl
jle
std
sub
aad
test
mov
mov
mov
outsb
cmp
cmpsl
lock
push
enter
mov
mov
adc
mov
or
repnz
dec
mov
xchg
sub
sbb
add
daa
les
jb
cmp
popf
jnp
mov
jl
dec
adc
loopne
hlt
push
lret
fbstp
ficomps
je
push
xchg
add
cwtl
push
lahf
sbbl
test
adc
sbb
ljmp
lahf
jo
sub
or
push
das
imul
jmp
jmp
out
mov
inc
cmp
shll
xor
rcrb
adc
pop
adc
and
and
push
scas
das
jge
nop
mov
sbb
xchg
test
jnp
out
ds
icebp
push
mov
add
jbe
rorb
subl
cwtl
test
mov
or
push
imul
adc
jo
insl
int3
sbb
push
mov
jmp
push
pop
inc
loope
adc
imul
in
int
mov
mov
std
into
pop
shlb
pushf
lahf
or
ljmp
and
test
add
aas
in
push
xchg
push
sub
or
fiaddl
repnz
lcall
cld
push
inc
in
stos
sarb
insl
bound
bound
lds
lods
push
cmpb
mov
pop
mov
lock
dec
js
push
andl
iret
rcrb
cmp
push
sub
sahf
pop
xchg
scas
out
repz
jbe
add
cmc
ss
dec
push
data16
jle
add
cs
mov
sahf
inc
out
push
pushf
repnz
rcll
lahf
insl
movsl
push
jbe
nop
daa
sahf
pop
dec
pop
sti
bound
dec
es
sbb
inc
fwait
pop
rcll
daa
and
aad
mov
orl
xor
cmp
mov
loop
xor
lock
shrb
xor
xor
negl
mov
push
fcoms
lret
mov
lea
xor
adc
decl
xchg
subb
xor
inc
or
mul
jbe
in
scas
movsb
rcrb
add
mov
sbb
fnsave
test
test
cmpsl
mov
shll
push
mov
push
subb
xchg
cmc
mov
das
aas
clc
lods
cmp
xchg
or
mov
jmp
out
in
ja
roll
shlb
loop
loopne
dec
jo
and
xchg
cmp
aam
cld
add
lahf
mov
lcall
lahf
clc
xor
cwtl
push
dec
lods
into
cmpsl
popa
imul
stos
sbb
pop
jnp
inc
add
pop
mov
lds
sbb
addl
stc
pop
into
pusha
imul
out
mov
das
jb
jbe
in
mov
lahf
jne
imul
and
je
les
sub
fiadds
aaa
push
xchg
jnp
lahf
xlat
subb
jae
aam
add
mov
in
testl
xor
and
jp
inc
les
mov
or
and
call
inc
mov
pusha
add
or
addr16
inc
sub
fimuls
mov
mov
or
cmpsl
data16
mov
hlt
fstpt
std
arpl
and
cmp
or
cwtl
mov
push
out
cmp
xor
cwtl
mov
pop
frndint
push
testl
lret
cli
ljmp
pop
fnstenv
mov
mov
fiaddl
or
scas
sarl
mov
cli
inc
mov
fwait
push
cmp
jp
add
dec
sarb
jae
adc
cli
or
push
loop
fstp
test
inc
call
ss
outsl
popa
push
dec
pushf
loopne
inc
movsl
cmpb
xchg
je
roll
cltd
mov
repz
pop
and
test
in
data16
iret
popa
add
loopne
cltd
mov
popa
loope
adc
lea
xchg
rorb
pop
in
pop
rcrb
repz
sub
outsl
cltd
cs
add
pop
test
xchg
test
data16
ret
andl
movd
sbb
addb
adc
int
adc
push
xorb
jbe
loop
fsubs
insl
xor
lret
mov
mov
xchg
jmp
add
pop
push
test
xchg
or
fs
test
dec
jecxz
xchg
push
sbb
mov
arpl
es
inc
sti
pusha
and
mov
push
lea
xlat
jg
fmull
add
push
cli
pushl
adc
or
scas
pop
sub
sbb
pop
popf
fisttpl
cld
leave
arpl
add
es
pop
sbbb
sbb
outsb
lahf
repnz
xor
movsb
subl
arpl
sti
lret
or
pusha
loopne
jge
lea
pop
je
leave
andl
or
test
cmpsb
lahf
mov
punpckhdq
mov
cwtl
aaa
and
mov
aam
lock
cmpb
add
or
ret
jbe
into
clc
push
xchg
add
cs
mov
or
incb
clc
pusha
xor
inc
mov
mov
mov
aam
aad
mov
cmpb
fs
lea
test
pop
add
ds
xchg
push
imul
push
addr16
pop
jp
mov
and
in
sbb
cs
lcall
xlat
inc
iret
icebp
mov
cmp
popf
int3
ja
cmpsl
mov
negl
popa
cli
push
sub
inc
pop
in
fwait
push
pop
repnz
push
sar
mov
jae
and
mov
push
leave
ret
mov
gs
jle
jg
cmp
clc
pop
xor
imul
push
inc
data16
fwait
shll
sbb
push
xchg
hlt
insl
sbb
sbb
pop
stos
nop
or
out
shlb
add
rcrl
mov
popa
xlat
outsb
test
sub
fs
sub
outsl
stc
sbb
ret
rcl
mov
addb
or
sbb
adc
jg
push
sub
sbb
push
pop
int3
gs
movsb
xchg
lret
jecxz
andb
aaa
jmp
mov
jp
popa
jle
jmp
in
add
pop
push
pop
xchg
adc
les
ret
adc
ret
sub
xor
mov
ss
les
adc
mov
mov
lret
push
xchg
bound
xchg
loope
fistps
xlat
push
int
mov
cmpsb
adc
xchg
fdivl
cld
fdivs
les
jbe
sti
call
or
rorb
sub
mov
inc
xchg
insb
sbb
push
rclb
jge
add
mov
xlat
pop
cld
xlat
loop
imull
iret
pop
pop
cld
fwait
outsb
pop
sahf
pop
lods
mov
int3
mov
mov
mov
inc
scas
mov
loop
test
mov
ficomps
push
cld
fiaddl
fsubs
arpl
fcmovb
jo
std
cmp
fimuls
adc
mov
pop
std
inc
sub
gs
fld
mov
sub
add
push
mov
in
cmc
icebp
push
fbld
cli
sbbl
push
les
sub
xor
lret
push
lock
imul
lcall
lahf
repz
repnz
aam
ja
fdiv
xchg
xor
sbb
ljmp
dec
sahf
inc
repnz
lret
lds
and
adc
inc
insl
mov
lea
les
add
push
pusha
xlat
jle
jp
das
cmp
aaa
sbb
leave
mov
cmpsl
imul
sub
sbb
fisttpll
push
mov
inc
sub
cmp
push
lret
cmpsb
lock
xor
pop
nop
clc
push
stc
mov
out
gs
sbb
pusha
lahf
adc
scas
push
cmc
pop
mov
sahf
cmp
inc
pop
subb
add
inc
sub
pop
sti
xchg
pop
aad
mov
movsl
iret
dec
sbb
enter
pavgw
sub
hlt
jno
andl
inc
movsl
sbb
out
inc
rcrb
dec
test
xchg
xchg
jmp
sub
in
int
pop
out
hlt
adcl
jg
jbe
sahf
aam
les
out
lods
adc
sbb
dec
lock
arpl
gs
or
push
fs
clc
sbb
jecxz
outsb
pop
in
in
imul
sub
addr16
test
push
mov
pop
jle
inc
dec
mov
add
in
sarb
js
and
push
push
ficoms
ret
push
lahf
mov
cmp
xor
push
scas
repz
scas
pop
test
ja
out
mov
mov
into
clc
lcall
lock
and
cmp
xor
movsl
mov
cmpsl
shll
clc
jle
sub
sub
jp
repz
xor
push
xchg
push
movsl
clc
movsl
push
pop
nop
pop
xchg
sbbb
xchg
fs
iret
mov
sahf
mov
cmp
in
in
pop
add
je
xchg
xor
push
test
add
in
in
js
and
iret
xchg
rcll
hlt
xor
dec
inc
ds
cs
aam
adc
fidivs
mov
xchg
pop
cs
add
enter
mov
mov
inc
cmp
cli
lods
je
lcall
pop
popa
loope
es
dec
pop
fstl
lea
and
call
mov
imul
sahf
sbb
popf
xlat
popa
aaa
in
dec
dec
xorl
cmpsb
add
inc
inc
scas
add
scas
cltd
jg
mov
mov
and
arpl
adc
fnstenv
sahf
sub
loop
adc
fnstcw
xchg
mov
xor
jns
push
cwtl
lcall
adc
ss
jne
mov
jg
test
push
xlat
push
adc
sar
or
data16
mov
inc
enter
shlb
imul
inc
movsl
adc
or
dec
mov
inc
mov
movsb
scas
cmp
sbb
cs
test
dec
adc
jge
sbb
pop
mov
inc
xorb
fdivrs
mov
ja
popf
jb
mov
sahf
push
inc
fistpl
out
mov
popa
test
adcl
push
jl
mov
in
push
bound
cmc
push
adc
adc
lahf
pop
je
mov
outsb
mov
pop
pop
mov
jl
or
cmp
pop
sbb
es
mov
jbe
test
adcl
in
mov
xchg
xor
lea
sti
fucomip
jge
pop
sbb
mov
mov
xchg
pop
or
push
mov
imul
sbb
xor
icebp
pop
push
and
or
adc
mov
loopne
cmpb
rcrb
push
jl
out
push
mov
jge
add
mov
inc
mov
stos
mov
add
shll
imul
xchg
xor
or
xor
lahf
and
jge
or
fmul
mov
jo,pn
sub
cmp
xchg
js
jge
in
iret
mov
jns
mov
mov
fstp
repnz
sarl
dec
cli
repz
xor
cmp
sbbb
repz
sbb
lods
mov
dec
inc
mov
arpl
add
lret
cli
adc
in
movsl
daa
sbb
repz
cmc
test
cmc
ljmp
add
dec
iret
xchg
add
jmp
inc
mov
jbe
adc
push
and
mov
fstpt
mov
movsb
adc
ret
test
out
and
push
mov
push
or
xor
sub
or
aas
adc
jne
mov
ret
sub
in
stos
jne
aaa
fwait
sbb
inc
mov
mov
inc
sarl
movsl
dec
or
stos
popf
fstpt
add
pop
pusha
pop
push
in
bound
inc
in
mov
scas
or
add
insw
stos
mov
sub
cmp
andb
cmc
push
and
fwait
sub
popf
iret
and
movsb
addr16
cli
add
sarb
mov
outsl
ss
pusha
mov
adc
bound
mov
call
xlat
lret
rcr
jmp
test
or
add
enter
fs
xchg
and
aam
scas
iret
jg
in
call
inc
dec
cld
ret
fidivl
out
jg
ficoms
repnz
and
mov
dec
js
es
std
fcom
notl
mov
shrl
push
mov
inc
ss
sti
div
mov
lret
popf
fyl2x
xchg
rcll
dec
neg
idivb
pusha
stos
faddl
cmp
pop
or
call
fldcw
pop
into
call
and
mov
sbb
lods
push
xchg
stos
out
decl
add
pop
dec
sub
dec
stos
xchg
jbe
addr16
fdivl
aas
arpl
mov
push
mov
mov
fwait
hlt
xor
xchg
scas
jmp
xorl
lods
pop
data16
lahf
mov
js
ret
dec
hlt
sub
aaa
int3
in
out
xchg
lods
inc
ja
jecxz
cmp
int
mov
cmc
mov
xchg
test
cltd
dec
aaa
mov
fwait
inc
out
xor
sbb
pop
cmp
cmc
rclb
mov
sbb
mov
lock
addl
test
cld
insb
cmpsb
cmc
sub
stos
sub
inc
sub
int
sub
xchg
pop
popa
push
in
push
loope
nop
jb
rcrl
push
repz
test
in
adc
lods
push
mov
jle
js
push
outsl
push
mov
dec
pop
outsl
add
rolb
inc
jle,pt
xor
addr16
movsb
jg
imulb
dec
imul
call
pop
inc
push
sbb
imul
shr
into
mov
int3
outsl
into
jp
mov
pop
mov
mov
pop
jbe
and
xor
xchg
cmp
les
lods
cmp
ret
enter
add
jne
mov
jno
mov
adc
fs
pavgb
fbstp
repnz
lret
aad
mov
jp
dec
sti
js
jl
jge
rcr
dec
test
jnp
adc
lret
mov
sub
pop
pop
or
sub
je
rcll
ficoml
jl
add
shll
xadd
aaa
int3
loop
fstp
jg
loop
cwtl
sub
pop
xor
mov
stos
pop
jo
pop
xchg
je
dec
fsubrs
mov
cld
mov
scas
cmc
or
sub
push
lods
call
out
mov
pop
inc
pop
fistpll
jecxz
push
mov
sub
fmuls
xor
rcrl
inc
daa
fisttpl
xchg
push
adc
shlb
fistpll
pusha
insb
adc
or
lret
mov
push
ja
popa
mov
scas
cmp
dec
idiv
or
mov
pusha
das
sub
mov
inc
xor
je
mov
adc
out
add
aas
push
rolb
push
rorb
insl
xor
adc
ds
int3
or
test
sub
int
lcall
sar
add
push
xor
dec
pop
xchg
addl
sbb
std
test
sub
repnz
add
insb
std
push
fistps
xor
insb
pop
out
frstor
mov
pop
loope
stc
orb
rorb
fidivs
adc
cmc
xchg
push
hlt
rcll
fidivrs
xchg
nop
xor
inc
add
xchg
popa
jp
in
push
std
cmp
mov
mov
lret
push
je
outsl
mov
mov
mov
pop
jnp
pusha
mov
sbb
addr16
sbb
pop
dec
jbe,pt
push
std
dec
pusha
jmp
dec
mov
or
sbb
xchg
or
or
ret
xchg
ret
xor
add
dec
xchg
jl
mov
movsl
cmc
pop
inc
jb
loopne
xchg
sahf
rcr
jg
push
adc
daa
mov
mov
cmc
push
mov
clc
sub
ss
mov
daa
fildll
into
sbb
adc
imul
shlb
push
sbb
xorb
repnz
shrl
arpl
pop
inc
lret
inc
push
fstpt
inc
push
call
nop
clc
out
lret
pop
xchg
es
insb
sbb
daa
push
xor
cmp
es
frstor
sti
int
push
je
mov
ja
filds
sub
aaa
dec
cli
push
and
jns
jecxz
cltd
xorl
xor
in
pushf
jle
les
mov
fcompl
movzwl
lret
loope
mov
int3
mov
in
push
orb
out
fcoml
inc
mov
in
xor
imul
mov
or
push
addr16
test
call
imul
mov
sub
out
inc
cs
in
cmpsl
mov
jge
and
je
fwait
pop
push
inc
dec
testb
lods
mov
mov
lock
sub
xchg
mov
xchg
cld
push
sbb
and
cld
sub
nop
bound
or
or
fisttps
sbb
mov
out
cmpsb
fisttps
in
jmp
pop
mov
pusha
mov
test
and
inc
cmp
inc
push
cs
cltd
mov
ja
arpl
into
lahf
and
test
push
push
sti
popa
lods
adc
dec
jo
mov
andb
jbe
dec
mov
fs
out
popf
out
fistl
xor
push
add
jmp
insl
movb
jp
push
xchg
xchg
call
aad
cmp
aam
mov
inc
cmp
sti
mov
inc
subb
fwait
cld
pop
loope
cmp
dec
sar
inc
testb
sub
rorb
push
aam
test
xchg
mov
sub
es
mov
ret
dec
rcl
pop
popa
jecxz
mov
cmp
add
inc
mov
push
inc
mov
jge
lahf
sub
das
aam
mov
mov
movsb
sbb
stc
sub
cmc
lcall
decl
push
jb
cli
mov
mov
xchg
or
fnstenv
test
jp
mov
bound
pop
gs
lret
push
jge
push
fistpl
jae
push
in
sub
sub
inc
add
mov
pop
icebp
ficoms
lret
xor
das
mov
ja
pop
test
scas
ds
stos
icebp
push
flds
stos
push
ret
lods
mov
mov
and
xchg
mov
outsb
in
sbb
push
aaa
pusha
cmpsl
add
jl
add
xchg
std
stc
xlat
jno
icebp
cltd
repz
xchg
aam
icebp
and
cmp
dec
push
rorb
push
aaa
test
sub
jmp
adc
sbb
das
mov
pop
loopne
dec
popf
jb
lret
insl
or
cmp
xor
xchg
mov
rorl
or
icebp
xor
mov
cmpsl
dec
daa
cmp
xor
addr16
lods
push
jge
repz
jno
jmp
push
fnsave
aad
xor
cltd
sub
inc
loope
mov
scas
and
je
out
jle
dec
cmpsb
subb
or
sbb
xlat
adc
pop
mov
mov
int3
mov
dec
inc
mov
mov
push
jg
add
sbb
jb
xor
xlat
xorb
repz
or
fnstenv
and
sub
xor
cmc
int
mov
fcoml
adc
sbb
and
sarl
fwait
push
jbe
xor
hlt
xchg
jg
jmp
jns
sbb
into
sbb
sbb
aam
aaa
inc
push
push
push
test
sbb
pop
jne
mov
sbb
mov
add
ror
fdivl
mov
pop
mov
pushf
mov
pop
push
dec
pop
xchg
push
cmc
mov
stc
iret
sbb
mov
test
sbbl
inc
add
mov
outsl
fisttpl
and
sbb
fmull
lahf
test
xchg
decb
testb
mov
push
lea
xor
xor
xchg
mov
mov
cmc
dec
xchg
pop
push
jb
scas
jno
into
xor
xchg
insb
sbbl
mov
test
pop
loope
push
das
dec
pop
cltd
rorb
fsubrp
mov
fiaddl
lds
scas
xchg
cli
inc
jecxz
mov
jnp
jne
sub
fwait
imul
icebp
sbb
mov
jg
hlt
adc
cmpsl
mov
inc
or
add
xor
mov
jmp
adc
adc
gs
xor
push
insl
or
jo
and
cmp
xchg
xchg
mov
mov
dec
out
xchg
push
negl
dec
and
mov
mov
cmp
aam
pushf
cld
out
adc
imul
mov
mov
das
add
xor
mov
imul
or
pandn
cmc
bnd
insl
and
aas
dec
cmp
xor
and
and
sub
pop
hlt
or
jge
nop
fisubl
dec
fs
pop
loopne
lahf
jb
in
repnz
inc
std
add
data16
bound
aam
inc
inc
pop
sub
sub
lret
mov
xchg
cmpsb
inc
clc
leave
fcoml
stos
aam
sbb
push
xor
sahf
loope
xor
aas
mov
jne
add
sub
xchg
repz
inc
lret
ljmp
and
ret
or
mov
bound
and
js
jp
leave
push
inc
cmp
dec
loope
ficoml
fldenv
mov
jno
pop
jnp
sub
bound
bound
jae
rcll
mov
out
jne
negb
jmp
aam
add
pop
test
add
cmp
or
test
push
mov
inc
add
pop
mov
das
mov
mov
into
loop
jne
and
dec
insb
inc
dec
mov
cmpsl
sub
inc
xchg
add
movsl
dec
jge
xchg
js
fucom
or
mov
and
cmp
adc
loopne
add
lds
iret
xor
cmp
icebp
push
inc
add
popa
loopne
add
xchg
daa
sub
fcomps
cltd
inc
xchg
add
test
or
inc
pop
mov
into
jo
xor
pop
test
mov
lods
cld
xchg
std
push
push
mov
ds
xchg
rorl
pusha
mov
mov
and
sti
bound
mov
pop
inc
push
xor
test
cmp
or
stos
mov
insb
insl
xchg
cs
or
fidivrs
mov
jl
fsts
dec
rcrl
xchg
loop
sbb
inc
xchg
add
push
fisttpl
paddb
mov
inc
rcll
pop
adc
jnp
xchg
roll
pmaxub
mov
dec
mov
out
mov
fwait
dec
mov
mov
sub
jno
iret
je
repz
pop
test
clc
aas
into
addr16
fidivl
push
jp
stc
lret
cmpsl
xchg
mov
dec
sbb
pop
or
lds
js
and
add
int
test
mov
inc
add
dec
sahf
cmc
mov
jbe
data16
nop
xchg
cmpsl
dec
pusha
mov
je
je
push
xchg
mov
scas
inc
push
jae
add
mov
adc
fiadds
pop
daa
xchg
mov
pop
stos
push
int
push
push
xchg
mov
jp
nop
push
gs
imul
gs
lods
cwtl
xchg
mov
out
fsts
inc
aaa
cmpsl
nop
xchg
pop
stc
xchg
sbbl
and
and
ljmp
dec
pop
aas
push
mov
lods
stos
pop
loopne
push
cwtl
fbstp
or
out
jmp
xor
into
ret
mov
into
mov
sahf
jno
js
or
fildl
in
or
ja
or
scas
push
pop
dec
cmp
mov
pusha
xchg
mov
dec
arpl
fdivs
shl
dec
in
mov
addb
imul
push
inc
jge
nop
push
dec
add
jo
xor
pop
loop
inc
jnp
cmp
adc
jae
adc
jns
dec
loop
nop
jecxz
movb
add
inc
ret
fcoms
arpl
cmp
inc
inc
jmp
loope
jg
sub
sbb
out
rcll
mov
in
cmpsl
inc
test
rcrl
pusha
imul
pop
lahf
xor
ljmp
mov
mov
call
minps
stc
and
int
addl
and
sarb
mov
scas
cs
dec
inc
sub
add
pop
pop
xchg
cmp
jle
jbe
clc
xchg
cmc
jle
aaa
cmpsl
ud1
sbb
test
insl
and
or
in
cmpsb
mov
inc
mov
fdivrs
rorl
imul
dec
mov
repz
std
mov
jns
shll
and
popf
and
in
movsb
push
mov
dec
pop
out
cltd
jp
stos
shrl
cmp
sarl
mov
out
and
ffreep
orb
cmp
adc
sub
dec
and
fs
dec
pusha
xchg
pop
movsl
add
cltd
add
push
pop
push
push
bound
or
inc
jnp
repz
rcll
inc
and
mov
add
sti
sub
pop
mov
mov
pushf
mov
loop
mov
inc
mov
in
test
stos
inc
dec
jo
inc
or
push
add
or
cs
jnp
imul
popf
addr16
in
int
mov
and
ja
push
mov
xchg
pushl
mov
shrb
test
adc
push
popl
push
ja
loopne
inc
lcall
arpl
adc
aam
out
pop
add
push
mul
jmp
subb
aas
std
jp
fwait
mov
iret
or
mov
mov
mov
rorb
dec
lret
jp
jne
add
es
cs
mov
lcall
stc
ljmp
jno
loopne
pop
sbb
out
xchg
adc
lods
hlt
mov
nop
adc
push
mov
fmul
xchg
dec
mov
fcmovnbe
pop
pop
pop
sbbl
in
addb
push
scas
stos
int
fs
adc
pop
push
xchg
and
fs
out
in
cmp
jmp
mov
add
xor
adc
xchg
test
lods
in
in
jb
decl
jmp
add
xchg
pop
xor
sub
pop
in
and
jmp
inc
mov
push
lock
cld
sti
iret
sbb
int3
sbb
mov
shll
pop
pop
dec
inc
ljmp
add
test
mov
inc
add
xchg
or
mov
pop
adc
push
cmp
mov
loope
push
cmp
cmc
imull
jns
roll
sbb
mov
push
sbb
push
xchg
adc
sbb
mov
inc
mov
fldcw
aam
push
outsb
fsub
insl
jmp
insl
or
mov
aad
push
add
ret
pop
jg
addr16
cld
rcl
cmc
ds
xchg
adc
jmp
loopne
xchg
xor
pop
sbb
inc
xchg
mov
push
jmp
and
mov
lods
push
mov
addr16
xchg
mov
xor
add
push
cmc
in
jnp
cmpsb
sbb
jnp
fwait
xor
mov
cmp
imul
xchg
addb
pop
sbb
xchg
jmp
or
jl
add
jmp
iret
jns
out
leave
fwait
sahf
insl
or
pop
mov
and
xchg
js
and
int3
lret
xchg
xchg
repz
dec
into
cltd
nop
xchg
sahf
mov
clc
xor
pop
je
push
add
xchg
test
movsb
jns
sub
test
mov
mov
hlt
imul
jecxz
add
fidivl
mov
xor
push
icebp
test
sbb
dec
daa
jnp
pop
or
hlt
mov
pop
fsubrl
jge
or
cwtl
loopne
loop
lods
mov
push
int3
std
push
sbb
xchg
sahf
adcl
std
mov
and
cwtl
aam
ds
adc
jg
imul
das
mov
loop
lods
gs
fmull
mov
cli
fcomps
je
push
out
xchg
dec
orl
out
push
push
add
cli
inc
mov
pop
test
xorb
mov
inc
sub
movsb
jo
sbb
adc
add
ficoml
jbe
xchg
in
loop
cmp
pop
outsl
jne
add
jae
iret
cltd
sbb
cld
rcrl
pcmpgtd
cs
nop
rcrb
pushf
push
inc
adc
xor
mov
add
jne
sbb
das
data16
adc
push
dec
jl
or
js
push
loope
jo
jecxz
ja
jmp
inc
cli
sbb
mov
adc
pushf
xor
lds
mulb
xchg
mov
adc
cmpsl
mov
lds
cmpsl
jle
pop
cmp
and
mov
in
xor
jecxz
dec
pop
inc
dec
test
xchg
cs
stos
mov
dec
fistpll
and
movsbl
dec
adc
scas
movb
xchg
pop
mov
push
push
add
loopne
mov
pop
or
fdivp
push
ret
and
je
rcr
or
pop
cld
lods
xchg
sub
or
cld
jg
in
cmp
adc
adc
mov
in
inc
test
lock
popf
jmp
or
cmp
sti
mov
fimuls
and
or
dec
add
sbb
aas
mov
sti
cltd
jecxz
or
call
int3
jbe
jmp
lahf
mov
stos
and
leave
incl
adc
bound
adc
mov
mov
icebp
fs
mov
scas
jbe
test
inc
fisubrs
and
mov
les
subl
lret
dec
in
or
popa
adc
mov
and
and
mov
mov
dec
pop
outsb
adc
inc
daa
movsb
lods
sub
pop
dec
pop
sbb
adc
js
imul
xchg
stc
int
insl
fsts
push
sub
outsl
jmp
pop
cltd
pop
and
aas
out
repnz
jmp
jl
push
out
cld
jb
clc
or
jle
push
sbb
movsl
adc
mov
shll
scas
xchg
out
add
xchg
dec
das
out
andl
push
test
inc
mov
movsb
sarl
xor
mov
mov
mov
dec
aad
mov
out
ficoms
loope
mov
movzwl
dec
ljmp
repnz
mov
or
hlt
inc
hlt
lea
cmp
imul
xchg
push
in
loop
push
popf
lods
sahf
jmp
xor
or
jg
mov
imul
ja
ficomps
mov
xor
shrl
sbb
rolb
stc
push
cmc
mov
andb
push
pop
movsl
or
std
dec
loope
inc
mov
adc
mov
pop
or
filds
push
mov
mov
call
inc
cmp
add
out
xor
mov
int3
cmp
pop
cmp
bound
ret
pop
bound
lret
mov
rcl
imul
loopne
adc
gs
xchg
insl
fists
push
add
outsb
frstor
cltd
xor
xchg
inc
hlt
dec
inc
mov
adc
repnz
sub
push
xor
xchg
mov
fldt
es
mov
rcrl
mov
and
pop
jle
imul
lahf
adc
ljmp
mov
xor
lcall
inc
or
pop
mov
incb
hlt
push
in
inc
aas
fisubs
ret
js
lods
jns
int
std
test
mov
jmp
pop
fnstenv
arpl
cld
adc
testb
adc
add
imul
xor
inc
ljmp
sub
sbb
jbe
mov
mul
or
addb
pop
add
mov
outsl
hlt
out
cwtl
repz
push
lret
xor
xchg
cmp
pop
cmc
add
or
orl
xchg
fs
es
xchg
push
mov
pop
sbbb
stc
push
shr
and
inc
es
xchg
gs
pop
scas
xchg
jno
mov
andl
stc
je
and
js
or
xchg
mov
out
popa
sbb
fwait
enter
loopne
mov
xchg
fdivrl
mov
loopne
xor
push
mov
insl
leave
mov
mov
ret
loope
fldenv
int3
or
dec
jge
add
dec
push
pop
nop
shrb
adc
sti
pushf
aad
aad
leave
outsb
call
jl
sbb
jmp
loop
mov
ret
ljmp
iret
mov
add
sbb
das
es
xchg
enter
rcrb
icebp
ficompl
outsb
fidivrl
xchg
pop
push
in
push
sbb
jnp
xchg
shr
mov
es
add
aad
adcl
xor
lods
push
mull
stos
mov
jo
clc
aam
sub
mov
mov
jl
adc
stc
or
enter
popa
movsl
mov
sub
test
insl
adc
cli
aas
dec
cmpsb
cmp
loope
pusha
pop
pop
clc
pop
inc
and
mov
mov
pop
mov
ljmp
push
and
sub
add
inc
ds
lcall
outsb
dec
inc
and
xor
dec
gs
sub
outsb
pop
rep
test
cs
aad
sbb
mov
and
int3
adc
or
ja
int
xchg
xor
js
ret
dec
adc
pusha
test
stos
cmp
cmp
inc
xchg
pop
push
jge
mov
lret
and
push
sbb
add
sahf
test
mov
sbb
lret
dec
xor
push
add
sbb
test
mov
pop
sbbb
fbld
ss
test
orl
aad
jle
cld
jg
sbb
lret
repnz
imul
lods
and
mov
and
dec
insl
mov
popa
xchg
ljmp
shrb
int3
ljmp
mov
stos
sbb
cli
test
or
mov
andl
mov
xchg
xor
cld
mov
aas
xchg
sarb
mov
sub
mov
sub
mov
xchg
mov
or
and
push
out
inc
jb
test
hlt
or
inc
fidivrs
push
lods
pop
mov
adc
push
and
xchg
adc
test
mov
xor
loop
loop
jmp
jmp
sub
or
lret
mov
pop
sub
push
or
mov
ljmp
cmp
clc
dec
pop
mov
je
je
mov
push
pop
add
jg
das
jnp
jle
and
jb
mov
adcb
ret
in
in
enter
mov
dec
cmpsb
push
cwtl
mov
pusha
cmp
mov
push
jle
arpl
mov
ljmp
or
lods
push
mov
roll
cmp
push
sbb
xchg
or
mov
pop
cld
jmp
mov
and
jmp
cld
push
and
add
fisubs
jnp
repz
push
adc
pop
jne
jnp
mov
mov
add
add
rcrl
sub
jge
jl
inc
inc
ret
pop
data16
add
sahf
push
and
xchg
dec
cmpsb
xor
or
sahf
cli
sub
in
test
inc
push
sub
in
frstor
jle
adc
test
shrl
adc
add
cmp
std
mov
mov
fs
and
cltd
xchg
inc
addl
out
fs
mov
push
push
clc
andb
imul
and
cmp
aam
jl
xchg
ret
out
orl
xchg
or
adc
lret
sahf
sbb
test
clc
incl
xchg
jl
test
sbb
pusha
cld
pop
push
repz
int
mov
std
pop
fimull
xchg
clc
cmpsb
cs
jl
mov
aas
inc
in
rcrl
xchg
mov
cmp
inc
mov
mov
leave
pop
loopne
pushf
daa
fwait
lea
mov
out
and
lods
adc
sbbb
dec
scas
adc
insb
push
std
sub
into
jb
orb
mov
pop
stos
enter
enter
adc
leave
inc
mulb
mov
cld
das
ss
clc
mov
pop
jns
aad
aam
mov
imul
dec
adc
xchg
cmp
in
cwtl
jle
imul
orb
lock
pop
mov
push
scas
push
sub
adc
sbb
pop
icebp
je
js
int
loopne
pushf
fwait
sti
in
js
cmc
movsb
xchg
test
rcll
arpl
loopne
pop
pop
mov
cmp
mov
xchg
inc
push
push
les
jmp
pop
or
subl
out
frstor
enter
add
out
xchg
xchg
ret
loop
js
jo
loop
ds
cli
call
in
jb
and
cmc
hlt
dec
stc
and
inc
js
pop
jo
ds
mov
mov
nop
fadds
or
xchg
pop
xor
jge
fstps
aad
mov
sbb
jne
pop
inc
dec
out
push
xchg
cmp
jmp
mov
xor
les
xchg
inc
fwait
jecxz
lret
sbb
add
cmp
sbb
cli
push
hlt
xchg
pop
inc
pop
xchg
mov
push
sbb
inc
mov
jo
sbb
in
shl
jno
jnp
or
clc
and
test
jg
addb
inc
adc
add
cmp
bound
push
dec
daa
sub
mov
movsb
jns
mov
xchg
mov
inc
data16
push
xchg
xchg
mov
xor
hlt
add
int3
cs
sub
test
push
mov
sub
and
xlat
fnstsw
outsl
repnz
push
into
pop
jecxz
dec
sub
xor
or
cltd
dec
dec
enter
in
inc
outsl
cld
push
inc
push
out
in
and
pop
testb
in
fnstenv
ret
dec
cmp
mov
imul
imul
inc
dec
movsl
cmp
iret
jns
jbe
sbb
fldt
cld
mov
inc
movsl
fcomp
nop
push
das
or
inc
out
jae
and
xchg
jo
add
pop
inc
mov
mov
subl
stos
sbb
cwtl
and
push
inc
scas
call
adc
push
sbb
mov
adc
incb
aaa
popa
add
mov
sbb
into
sub
or
insl
cld
bound
sbb
addr16
insl
sahf
ja
adc
xchg
mulb
jne
xchg
test
cs
adc
and
mov
lods
pop
hlt
cld
xchg
inc
int
xchg
xor
pushw
add
dec
iret
sbb
sub
push
hlt
sahf
scas
mov
add
pop
ja
vpermi2pd
roll
pop
cmpb
push
in
mov
add
sti
and
les
int
setns
xchg
repz
popf
fidivl
mov
inc
std
add
mov
lcall
out
and
xor
jg
jg
or
xor
test
inc
push
popf
pop
inc
push
and
out
cmc
mov
cwtl
lcall
mov
xchg
into
dec
sbb
fs
xchg
inc
fisttpll
or
sti
adc
xchg
pop
in
xchg
jle
dec
sub
lock
popf
push
and
jnp
fs
aam
mov
push
pop
and
cmp
addr16
repz
scas
sbb
push
push
xlat
sti
jae
cld
popf
pusha
jbe
int3
into
push
pop
addr16
jg
notl
fcoml
arpl
push
push
fists
sub
sub
imul
sbb
fcoms
rcrl
test
lcall
data16
cld
and
pop
punpckhbw
sub
push
cmpsb
fdivs
mov
call
adc
jnp
xor
jb
mov
add
mov
add
int
js
mov
jno
inc
push
andb
mov
loop
cli
xor
add
out
cmp
scas
adcb
movsl
stc
insb
jo
push
xchg
aaa
and
inc
pop
adc
lcall
vcvtdq2ps
cmpsl
in
jns
fnsave
pop
loopne
push
insb
or
notb
adc
shr
pop
sub
pop
push
pop
sbb
in
test
fidivrl
adc
lret
mov
push
cmp
push
dec
lret
dec
mov
cmp
push
cmc
jbe
dec
cmc
jb
ja
std
enter
add
ja
stc
xor
leave
or
loop
mov
or
push
dec
adc
xlat
hlt
or
mov
inc
cmp
mov
mov
jge
push
ror
inc
dec
fistl
mov
jmp
pusha
insb
scas
out
mov
push
shll
sar
nop
xchg
lea
es
imul
in
fmul
jns
shlb
outsl
sub
ja
fimull
lds
mov
pop
mov
sbb
jge
fdivr
cmp
sbb
fmuls
push
jns
push
leave
mov
sbb
aaa
mulb
jmp
push
adc
push
pop
clc
test
sbb
aaa
push
cmpb
inc
mov
xchg
pop
jecxz
vpaddd
or
or
dec
in
stc
in
outsl
xor
lcall
fs
or
adc
sbb
mov
add
lcall
dec
mov
mov
add
sbb
xor
pop
and
in
inc
or
outsb
ret
pushf
dec
fstpt
push
jg
rcr
push
shl
jg
cmp
mov
jg
mov
popa
std
mov
cwtl
fcmovnb
mov
dec
call
pop
cld
pushf
sbb
repz
shlb
sub
enter
aas
pop
mov
pop
sbb
stos
inc
lods
add
mov
jbe
push
push
mov
mov
xor
xor
aas
in
out
mov
jge
clc
movsb
mov
ss
push
jmp
xchg
adc
mov
fwait
adc
rorb
test
cmp
dec
ffreep
ret
cmp
psubsw
push
or
add
mov
scas
loope
mov
mov
arpl
or
ss
insb
mov
bound
adc
imul
das
aam
scas
sbb
data16
sbbb
xor
ja
push
mov
dec
xorl
fs
push
lds
lcall
popf
stos
andl
cld
push
fucomi
and
int3
sbb
xsha1
cmpsb
dec
bound
jb
cmp
jb
cld
ljmp
sbb
call
pop
xchg
pop
xchg
adc
lretw
imul
fsubs
rolb
scas
cmp
push
pop
ja
enter
stos
mov
or
popf
imul
and
push
sbb
xor
jecxz
adc
nop
jg
inc
dec
xchg
insb
loope
fimuls
push
fnstenv
fiaddl
dec
jbe
push
ljmp
pop
std
xchg
sbb
xor
ret
cmpsl
leave
inc
jg
cmp
mov
out
ljmp
lret
and
sar
lock
jbe
xlat
inc
into
call
fildl
add
imull
adcb
add
inc
pop
push
add
sbb
out
jl
inc
mov
dec
loop
push
iret
sub
add
adc
imulb
gs
fisttpl
lods
inc
and
inc
test
repz
pop
cmp
sub
stos
out
loopne
xchg
mov
push
loop
pop
push
scas
inc
mov
mov
push
outsl
or
shr
jmp
cmp
inc
fisttpll
adc
into
xor
in
adcb
lea
lret
cltd
fisttpl
sbb
into
add
imul
inc
xchg
sbb
out
add
adc
sub
das
test
lock
and
jmp
repz
push
mov
inc
or
jae
les
add
insl
add
cmp
sbb
outsb
push
mov
push
mov
or
fdivl
dec
sub
pop
int
shl
fwait
or
cld
fiadds
pop
sti
dec
mov
sbb
aam
adc
sub
jo
xor
loope
and
stc
sahf
jecxz
sub
push
mov
call
xor
mov
or
jns
mov
inc
test
aam
lods
dec
jecxz
dec
add
fildll
xchg
je
sbb
xchg
add
push
dec
inc
imul
push
push
dec
fbld
and
outsl
pop
dec
js
fwait
out
xorb
pop
jl
faddl
imull
dec
sar
shl
push
sub
push
gs
aas
ret
dec
fnstcw
jno
faddl
sbb
movsl
xchg
adcl
mov
push
mov
pop
sub
fdivr
adc
adc
jbe
aam
push
jnp
scas
cmpsb
cmp
push
pusha
lcall
ljmp
in
arpl
push
inc
sbb
enter
xor
and
jno
adc
jbe
mov
sbb
add
fldt
ss
mov
jb
iret
mov
es
lahf
jg
xchg
jnp
dec
mov
ds
jb
das
imul
lcall
pop
outsb
inc
push
insl
adc
jle
movsb
cmp
or
xchg
add
jp
ds
ds
mov
into
lods
sbb
cmpsb
loop
cmc
xchg
sbb
loop
jns
aaa
aaa
pushf
and
mov
scas
shll
inc
lods
outsb
test
jns
das
cld
cli
and
dec
aad
pop
sub
xor
jo
cmp
dec
or
loopne
sbb
sti
mov
test
xchg
mov
add
push
push
push
in
subb
pop
mov
rcrb
mov
movsb
push
ljmp
xor
hlt
xchg
and
and
test
push
add
push
adc
ret
lods
jp
mov
sub
into
in
xlat
fimuls
out
mov
movsl
outsl
aas
or
dec
add
mov
sti
ret
les
adc
add
sbb
cmp
push
or
adc
cli
insb
mov
ss
pop
push
xor
xlat
lsl
mov
neg
or
in
int
mov
out
mov
adcb
hlt
cli
pop
dec
dec
dec
add
js
jne
data16
jecxz
mov
pop
outsl
stos
iret
icebp
arpl
fisttps
pop
cwtl
and
mov
scas
scas
adc
fisttpll
jo
adc
mov
jp
sub
fsubrp
out
adc
das
add
std
outsb
jns
aam
mov
and
lcall
xchg
int3
sbb
push
push
hlt
fldenv
cmp
push
das
push
sbb
fildll
push
stos
out
bound
pop
ss
cwtl
pop
dec
inc
shlb
sub
icebp
cmp
pop
repnz
sbb
cwtl
sub
gs
jl
pop
xchg
or
push
testb
scas
xor
cld
insb
in
imul
ljmp
fidivl
adc
lcall
and
test
push
mov
mov
jmp
sub
mov
sarl
mov
sub
je
jl
es
pop
dec
rorl
mov
nop
adc
scas
mov
std
dec
fistpll
cmc
cld
jnp
jae
cmp
xor
mov
pop
xor
sbbb
fimuls
leave
lret
push
aaa
pop
add
pop
ja
jne
andl
lods
mov
xor
movsl
in
fnsave
sub
fdivp
in
adc
nop
loopne
sub
cmp
xchg
pushf
or
mov
fcompl
rorb
inc
adc
dec
cli
pushf
lcall
nop
and
cmpl
and
jmp
negb
or
mov
pop
mov
push
gs
jne
sahf
loop
stos
sub
cld
push
or
and
repnz
sti
lret
lret
xchg
loopne
iret
rcr
pusha
popf
call
pop
mov
jecxz
mov
xchg
lret
push
cwtl
in
mov
or
scas
movsb
mov
fsts
mov
mov
pop
pop
and
lahf
sub
dec
in
xor
jo
sbb
int
sbb
shll
daa
sarl
shrb
sti
jbe
fidivl
pop
clc
rcll
lret
push
inc
outsl
cwtl
sbb
mov
sbb
fldl
sbb
mov
js
cltd
leave
setge
imul
push
xchg
in
dec
scas
pushf
add
push
outsb
fmuls
imul
movsb
sahf
sub
dec
iret
data16
xor
or
cld
mov
gs
addr16
jp
sbb
dec
jle
mov
icebp
fcoml
scas
dec
outsb
rcr
popf
loopne
in
push
pop
mov
leave
pop
aam
out
xchg
out
push
fldt
sub
jle
sub
cmp
movsb
lock
movsl
add
inc
lret
xor
push
sahf
ljmp
jle
daa
xor
xor
je
lret
push
mov
loope
lods
pop
movsb
fucomp
test
jmp
sbb
sub
add
stos
add
jl
xchg
lret
pop
dec
sbb
pushf
stc
fimuls
dec
jge
mov
sbb
mov
mov
push
pop
sub
sub
fidivl
push
sub
inc
sarl
sub
xlat
jbe
mov
sbb
incl
fcomps
fidivs
adc
lea
adc
mov
sub
pop
push
in
stc
xchg
repz
xchg
xor
add
hlt
das
pusha
mov
int3
mov
das
cli
ds
jo,pn
sarb
xorb
jge
ljmp
inc
ficoml
xor
loopne
jbe
mov
sbb
mov
sub
stos
notb
cmp
cltd
ror
jp
mov
or
sub
clc
lds
stc
out
jo
int3
pop
sti
and
cmp
outsb
mov
stos
aam
push
out
mov
push
loop
shll
lock
pop
aam
roll
jge
push
inc
mov
ss
pop
int
dec
adc
add
ret
insb
jp
xchg
fwait
shl
sbb
cmc
cmpsl
lcall
or
inc
or
mov
mov
push
or
fs
jns
pop
bnd
scas
pop
inc
aad
loope
and
jae
mov
into
and
call
pop
xchg
mov
test
shll
or
pop
cmp
push
stos
mov
cmpb
fildll
fistps
ds
lret
lahf
aas
imul
ret
and
dec
leave
mov
mov
jmp
leave
daa
hlt
or
mov
lock
push
aaa
jmp
popa
leave
or
dec
and
cmp
pop
enter
inc
icebp
adc
xor
into
or
imul
mov
ss
rcl
jbe
inc
push
ret
add
fstpt
push
or
out
subb
js
cmp
rcrl
and
mov
popa
into
sub
xlat
dec
notb
inc
sbb
movsb
ret
adc
pop
push
lahf
jne
cltd
jp
pop
enter
out
or
push
orb
jno
icebp
cld
mov
mov
jge
les
mov
loop
and
pop
ds
shrb
sbb
pop
nop
jle
jecxz
sti
jns
cltd
mov
lret
aad
arpl
rcrb
pop
mov
pop
mov
lods
imul
in
cmp
push
sbb
adc
sbb
faddl
cmp
inc
mov
xchg
sarl
jo
jmp
mov
shlb
pop
fcmovnu
jp
ljmp
mov
mov
xchg
scas
testl
int3
pop
loop
pop
add
lea
push
into
mov
sahf
sbb
mov
daa
lods
pop
sahf
cmp
push
sub
pop
cmpsb
pusha
imul
idivl
and
std
cmp
sub
jmp
sbb
mov
in
popa
cltd
outsb
or
das
push
call
in
idivl
repz
in
cmpsb
nop
clc
jne
lds
jns
imul
xchg
loope
or
xchg
add
or
lods
push
cltd
add
test
scas
push
xchg
push
push
push
add
xor
push
sti
rcrb
mov
ss
sub
sbb
push
xor
arpl
lods
or
jmp
shll
xlat
call
jbe
fs
ds
dec
inc
gs
scas
add
js
dec
test
or
test
mov
iret
jae
mov
je
dec
mov
xchg
shrb
sti
mov
movsb
ret
jle
rcr
sub
adc
mov
push
les
stc
cmpsl
mov
jmp
mov
push
and
xchg
dec
fildll
sbb
push
fnstcw
xchg
adc
push
mov
roll
push
inc
sub
xor
into
push
dec
xchg
es
fs
out
xor
imul
mov
mov
push
push
cmp
fiaddl
jecxz
cmc
cmp
sarb
aam
push
movsl
jmp
sub
fidivs
cmc
out
jbe
arpl
adc
roll
popl
fdivl
adc
mov
push
lret
inc
xchg
sub
sbb
push
xor
xor
clc
ficompl
mov
push
filds
or
jb
mov
js
ja
ja
and
xchg
out
sbb
mov
mov
pop
inc
fucom
mov
bts
stc
mov
xchg
jle
fdiv
hlt
mov
push
push
xor
sub
adc
shll
nop
cmp
mov
pop
pop
movsl
sbb
daa
fwait
sub
xlat
movsl
icebp
sub
arpl
cmp
imul
and
sbb
les
sbb
cwtl
pop
dec
stos
dec
mov
inc
add
hlt
divl
and
clc
jnp
movsb
cmp
ljmp
and
stos
lret
or
push
insl
dec
rorb
icebp
push
xchg
out
pop
mov
clc
sarl
repnz
lods
popf
gs
cwtl
lock
int3
out
pop
inc
sub
sahf
pop
mov
cmp
and
cmp
movsl
push
test
jmp
xor
dec
add
sbb
pop
stc
imul
sahf
or
in
mov
xor
inc
add
xor
daa
jns
or
cmp
cld
enter
push
xchg
fisubrl
cli
cmp
push
push
dec
cmp
ljmp
add
scas
aaa
outsb
sub
sbbw
je
or
pop
out
rcrb
mov
popa
aad
xor
dec
pop
mov
pop
inc
gs
ficoms
add
popa
test
and
aaa
sar
and
sbbl
and
cmpl
mov
jge
es
fwait
push
inc
mov
insl
adc
ret
jl
sbb
test
push
xlat
or
stos
or
dec
into
cwtl
in
push
push
mov
jmp
pop
call
adcl
or
leave
test
xorl
mov
pop
add
cmp
fstpl
pop
xchg
shlb
pop
jne
inc
jbe
insb
sub
shll
fstps
mov
das
aas
pushf
jecxz
push
scas
mov
aad
cltd
or
jne
mov
fistpll
lahf
insl
xchg
cs
fstps
or
push
jns
push
sti
test
mov
push
xchg
in
or
loop
clc
pop
jbe
imul
mov
xchg
cmp
inc
call
fistl
inc
movsl
jns
push
movsb
jmp
push
mov
sahf
daa
out
out
cmpsl
xchg
pop
in
addb
aas
fldt
int
or
shrb
orb
pop
cmpsl
aad
add
pop
dec
pop
popl
jns
mov
mov
xchg
ljmp
mov
dec
or
adc
ret
leave
ret
mov
nop
cwtl
in
stos
fdivl
xor
mov
movsb
test
mov
outsl
push
es
stos
mov
out
popa
jnp
out
mov
rcr
xor
imul
in
xor
rcl
mov
push
cwtl
cmp
xchg
push
insl
and
mov
std
sub
sub
or
shll
push
cmp
inc
or
and
stc
leave
pop
pop
jl
cltd
dec
popf
xchg
mov
pop
hlt
mov
xchg
cmp
inc
and
mov
and
inc
cmp
jae
cmp
je
mov
int
push
lret
sbbb
test
out
mov
fwait
rolb
dec
fwait
outsl
in
fwait
daa
sahf
cmp
adc
jno
xchg
jge
mov
adc
scas
pusha
mov
fldln2
cmpsb
movsb
shl
jno
ss
test
inc
adc
and
je
mov
sub
xchg
adc
push
loopne
add
iret
or
aaa
xor
xchg
lret
dec
repnz
loop
push
mov
or
mov
mov
das
jmp
mov
je
sub
push
inc
push
mov
sbb
cltd
xlat
rcll
scas
lods
dec
int
fwait
es
push
fisttpl
and
jnp
mov
xchg
xchg
fwait
sbb
lret
fsubl
xchg
sarb
add
push
outsl
inc
sbb
popf
jp
push
push
pop
pop
bound
lock
jo
jae
pop
enter
lahf
xchg
and
fcompl
mov
dec
add
add
mov
xor
jl
orl
jo
dec
and
inc
cmpsb
bound
mov
scas
push
sbb
lret
adc
incl
mov
lods
sub
test
pop
int3
mov
inc
icebp
pop
fscale
aam
inc
jno
xchg
arpl
mov
jl
fisubrs
dec
cmpsb
sbb
pop
test
rol
lock
jno
push
or
cmpsl
je
sbb
in
out
inc
cmpsb
test
mov
jecxz
ds
xchg
es
cmp
cmc
data16
cld
hlt
or
xchg
loopne
adc
dec
int
mov
mov
fidivrl
rol
in
jb
mov
xchg
jle
pushf
outsl
dec
insb
pop
add
inc
stos
jle
jle
mov
insb
mov
test
aas
sub
divb
xchg
in
sub
push
xor
aam
nop
dec
or
es
mov
jns
jno
or
dec
inc
inc
test
push
and
jle
das
call
cmpsl
fwait
mov
stos
add
leave
xor
mov
mov
push
fsubl
idivl
leave
jge
orl
outsb
out
mov
dec
pop
mov
cmp
jge
cwtl
fs
jg
dec
sub
mov
lea
ds
push
testb
jmp
jp
mov
outsl
incl
push
scas
jbe
jmp
fstpl
jle
iret
inc
xchg
mov
mov
pop
push
test
fcmovu
add
lahf
insl
insb
test
jnp
data16
fldenv
call
pop
pop
and
test
div
mov
imul
leave
leave
sti
push
sub
movsb
mov
sbb
outsl
dec
lcall
mov
in
faddl
xchg
testl
pop
push
aam
push
popf
lcall
movsb
and
sbbb
xor
int
and
or
dec
xchg
add
sbb
in
push
xor
outsb
xchg
movsb
jne
cmp
stos
jns
sub
xchg
notl
jno
or
popf
push
mov
ja
dec
sbb
jb
sbb
inc
jae
jns
into
dec
mov
xor
fistps
addr16
xchg
iret
push
inc
mov
popa
cmp
in
jbe
inc
add
fisttps
insb
scas
xlat
add
imul
faddp
and
rcr
inc
std
xor
movsb
test
jge
and
jmp
clc
popf
test
push
rcl
xor
push
enter
push
movsl
js
dec
cli
lahf
push
jae
sub
jecxz
dec
and
xor
lahf
and
in
push
mov
push
mov
dec
mov
and
js
inc
arpl
or
std
pop
rolb
es
pop
xchg
test
out
mov
shrd
rolb
xor
sub
cmc
shr
stc
and
mov
mov
pop
and
and
mov
dec
jne
jge
shll
subb
icebp
sarl
popa
roll
push
fwait
push
mov
lea
jge
aad
gs
fcmovne
and
movsl
rcrb
repnz
sub
je
sbb
push
rcll
adcl
push
shlb
scas
lods
pop
out
sbb
xor
xor
popa
loop
outsb
mov
mov
out
add
xor
repz
mov
xchg
scas
movsl
push
movsl
pop
jae
insb
add
or
mov
dec
dec
icebp
lahf
lret
push
sub
rol
sahf
push
repnz
mov
mov
movb
mov
and
pop
push
lds
pop
int3
rol
add
cmc
xchg
xor
jno
lods
mov
pop
jmp
mov
stos
fs
cmp
xlat
out
or
ret
xchg
jae
xchg
fs
je
mov
or
add
test
sbb
dec
sub
les
push
das
outsl
mov
mov
dec
adc
sub
rorb
xchg
mov
dec
mov
out
enter
mov
add
adc
add
movsl
jne
call
mov
mov
cltd
pop
jl
dec
pusha
ret
cwtl
mov
xchg
mov
inc
dec
pop
mov
movsl
adc
out
mov
push
and
fincstp
push
jbe
add
add
std
testb
adc
cmpsb
and
cmp
lcall
idiv
add
ror
lret
push
hlt
js
mov
mov
stc
xchg
sub
sub
enter
es
inc
rcrl
lds
stc
loopne
push
cltd
icebp
call
lds
rclb
insb
sbb
mov
into
loopne
pop
daa
repz
dec
xchg
stc
sbbl
mov
pop
call
test
or
cltd
jnp
loopne
jp
cmp
dec
nop
and
add
fwait
sub
dec
test
or
jae
sbb
cli
pusha
outsb
xchg
mov
xchg
popf
aas
loope
loope
test
inc
pop
sbb
test
pop
sub
mov
pusha
out
loopne
sub
loopne
outsb
adc
adc
xchg
xor
pop
inc
loopne
push
pop
cmpsl
fcomip
test
and
pushf
cld
cmp
or
pushf
jmp
pop
push
fdivl
pop
jmp
imul
lods
push
lcall
cmp
sbb
movsb
stos
mov
mov
adc
inc
or
cmpl
test
xchg
sbb
mov
pop
aas
mov
cmp
cmpsl
mov
or
push
bound
inc
test
mov
dec
jb
imul
mov
ljmp
mov
popf
popa
push
iret
or
lods
xor
mov
insb
pop
std
dec
ljmp
pop
shll
addr16
lods
mov
inc
scas
inc
and
ficoms
leave
loopne
inc
cmpsb
pop
mov
out
mov
push
pop
repz
and
test
aam
inc
cmp
cli
jecxz
stc
push
sub
xlat
lcall
fwait
or
mov
fmull
lcall
ljmp
hlt
pusha
jno
sub
je
cmc
cmp
or
mov
push
lds
jnp
test
sub
jle
nop
inc
adc
insl
mov
bound
mov
push
flds
jae
add
add
popf
dec
pop
repnz
shlb
aad
std
lcall
int3
cld
fadds
xor
int3
aas
inc
out
rclb
mov
in
xor
cld
cmp
out
shr
lcall
addr16
cmpsl
insl
lret
sbb
adc
dec
iret
jbe
mull
add
or
xchg
aam
cmp
pushf
ja
gs
js
ss
divb
in
sbb
dec
lahf
sbb
cli
sbb
daa
pop
push
sbb
mov
sbbb
into
shl
incb
sarl
in
mov
sbb
inc
daa
jb
cltd
xlat
stos
xor
sub
jo
push
adc
cmp
and
jge
bound
ljmp
js
loop
std
xor
out
jns
sub
aas
iret
mov
sbb
hlt
scas
sbb
jns
enter
ds
sbb
and
add
add
pushf
lods
lcall
jbe
es
add
in
add
pop
sub
in
push
xor
jecxz
or
lods
mov
jge
popf
lods
nop
in
in
sbb
sbb
cltd
jge
cmpsb
pop
inc
lret
lret
dec
pop
jge
packsswb
mov
and
push
mov
sub
jle
add
xor
push
pop
test
xor
sti
in
jo
mov
xor
cltd
dec
jo
push
xchg
dec
int
push
rolb
aaa
sti
mov
jb
xor
mov
leave
add
inc
pop
and
cmc
jp
cmp
sub
xchg
xor
mov
int
fs
leave
je
cwtl
dec
je
clc
stos
and
sbb
sbb
inc
or
xor
push
jmp
add
mov
and
cli
clc
inc
push
leave
xlat
test
jbe
into
push
into
jp
ficoml
or
insb
leave
ret
jo
pop
and
inc
aas
sub
ret
rcrb
scas
out
shlb
sub
out
cmp
pop
push
push
call
call
xchg
dec
dec
push
xchg
loopne
mov
outsb
loope
cs
pop
jg
subb
fwait
ljmp
leave
and
inc
sbb
adc
inc
leave
outsl
cmp
cmpb
or
addr16
inc
ffreep
push
jecxz
mov
sahf
and
mov
mov
sbb
sub
fstps
adc
lods
pusha
addr16
cmp
arpl
movsb
scas
repz
xchg
ja
inc
ret
fimull
xchg
dec
adcb
out
frstor
add
leave
push
lahf
dec
pop
ret
stos
rep
or
cltd
cmp
jle
cmp
addb
jp
js
testl
insl
inc
ffreep
enter
movsb
int3
lea
inc
mov
stos
lret
addr16
sahf
push
xchg
scas
in
mov
clc
dec
shl
imul
jge
mov
add
outsl
jge
jns
and
mov
sub
pop
mov
std
add
inc
fs
bound
fwait
stos
arpl
adc
add
or
xchg
adc
mov
xchg
sub
stos
xchg
push
or
lds
mov
cmpsb
and
test
dec
test
loopne
vmwrite
hlt
repnz
sub
xchg
in
fisubs
jp
mov
pop
add
and
test
cmpsb
scas
mov
cmove
mov
mov
insl
out
push
mov
cli
std
je
add
rol
mov
sar
lahf
cs
sbbl
xchg
ffree
scas
cmp
loop
sub
aad
iret
sub
leave
jns
mov
ss
xlat
xchg
mov
mov
mov
sti
ret
fimuls
lods
cmp
pop
outsl
cwtl
fstpl
push
mov
xchg
or
jbe
popa
adc
adc
or
adc
icebp
dec
lods
add
jmp
icebp
stos
js
jl
dec
ret
scas
daa
xchg
rcrb
push
out
inc
cmp
insl
or
jno
mov
nop
rorl
adc
jmp
pushf
bswap
jno
shll
push
loope
push
lods
mov
les
pop
mov
fmulp
movsb
cmp
xchg
push
xor
or
mov
cld
scas
jbe
jecxz
fwait
pop
push
or
cmp
cmp
xchg
int
mov
scas
fsub
add
aas
sbb
and
or
mov
jp
ret
add
add
xchg
stc
stos
mov
xor
mov
mov
push
sbb
pop
add
fnsave
xchg
and
ficoml
dec
into
inc
jae
aaa
lods
add
jg
xchg
in
sub
mov
mov
repnz
repz
aam
pop
mov
cmp
sti
jge
and
leave
mov
xchg
dec
nop
dec
or
push
daa
mov
pop
mov
adc
jg
sbb
cld
cmp
xchg
fnstcw
xchg
adc
flds
cmp
mov
mov
dec
out
fs
lods
fistpl
pop
xchg
adc
fs
inc
push
je
adc
push
hlt
push
stc
testl
pop
sub
hlt
or
xchg
ljmp
push
xchg
sub
fstp
add
push
clc
mov
sub
dec
pop
scas
inc
leave
addr16
mov
cwtl
or
bound
or
sahf
rolb
arpl
sbb
and
movsb
inc
sbb
mov
push
cmpsl
fcompl
aas
dec
cmp
adc
push
test
rol
fst
xchg
add
dec
pop
adc
mov
inc
das
setg
adc
push
iret
mov
scas
data16
mov
sub
push
lret
testl
jmp
pop
loop
or
shlb
inc
lods
das
std
popa
data16
push
icebp
mov
push
inc
xchg
leave
ja
jb
and
dec
inc
pop
xor
mov
add
xor
and
dec
sti
imul
decb
stc
mov
sbbl
adc
jnp
inc
dec
scas
xchg
adc
scas
cwtl
adc
mov
in
dec
ret
loope
out
sarb
iret
sub
cmp
subl
mov
lds
pop
test
nop
cmp
test
daa
popa
and
xor
int3
mov
jbe
in
idivb
mov
outsb
rolb
jecxz
fisubrl
cmpsb
adc
jp
jb
es
mov
mov
adc
cltd
xor
rcll
js
push
cmp
outsb
repz
in
xlat
jb
cmpsb
scas
gs
adc
xlat
testb
push
es
pop
dec
inc
dec
cmp
cli
mov
adc
sbb
int
dec
jle
aad
scas
jb
loopne
movsb
lcall
in
test
xor
out
icebp
mov
ja
scas
in
lods
add
frstor
sub
push
in
xchg
cld
cmpb
xchg
xlat
inc
or
stos
dec
push
mov
out
in
fs
xor
jle
mov
lret
mov
fstpl
pop
cmp
popf
pop
hlt
jno
xchg
dec
call
cmpsl
out
mov
call
mov
and
xchg
fstps
insb
add
mov
mov
cltd
in
sub
adc
or
loop
xor
fdivr
fadd
pop
or
mov
subb
mov
cld
sbb
mov
repz
push
testb
cmp
ljmp
loope
lock
xor
fists
push
call
cld
adc
sarb
jecxz
mov
jnp
mov
pop
les
xor
nop
sub
fsubrl
pop
jo
cltd
or
lods
cs
xchg
scas
cs
add
lahf
mov
mov
ss
inc
out
sub
xchg
and
mov
insl
add
adc
pop
or
es
nop
push
movsb
aad
mov
add
call
sbb
scas
lret
dec
inc
jne
pop
mov
jmp
test
addb
cld
fscale
pop
jg
mov
adc
sbb
in
xchg
mov
push
ljmp
leave
push
in
add
pop
outsb
out
mov
push
xchg
xchg
mov
idivb
stc
push
adc
mov
sarb
ja
sub
outsl
jmp
iret
testb
jno
mov
scas
jecxz
sbb
cwtl
dec
lcall
inc
mov
out
in
cmpsb
leave
xchg
xlat
sarb
sub
xchg
shll
push
aas
sbb
cli
push
or
negb
mov
sarl
popa
insb
out
sub
jae
push
cld
add
fwait
sti
jl
daa
shll
shr
out
cld
and
jnp
es
mov
mov
or
sub
cld
fsubrs
mov
int3
cmpsl
mov
mov
push
and
mov
mov
push
shll
test
add
stos
inc
movsl
xlat
mov
mov
arpl
mov
sub
call
add
xlat
add
and
adc
insl
jl
test
xchg
and
inc
cmp
cwtl
mov
sbb
inc
pop
lret
mov
mov
jge
add
or
rcr
test
cmc
jle
daa
add
adc
mov
cmc
mov
aas
pop
jecxz
repnz
push
aam
rorb
dec
sahf
xchg
lret
mov
dec
shll
sti
jne
dec
dec
jmp
out
stos
stos
cmp
and
gs
lea
mov
bound
fwait
pop
bound
xor
add
pop
sti
push
mov
xlat
xor
cld
pop
or
lods
das
mov
scas
movsb
push
pop
mov
rcrb
mov
addb
mov
out
lcall
push
mov
mov
add
xchg
push
out
mov
imul
test
shrl
fisttpll
aad
and
dec
shrl
lea
arpl
jns
pop
addr16
push
fwait
enter
int3
frstor
jo
ljmp
aas
add
nop
lods
pop
fsts
cs
xor
dec
inc
cmp
mov
mov
push
push
lea
mov
shrb
ds
sub
iret
push
in
add
mov
mov
pushf
je
add
mov
repnz
mov
xor
xchg
sub
cld
and
loop
or
or
xor
jne
popa
lcall
out
xor
mov
imul
negb
mov
cmpsl
add
std
jo
push
outsl
or
sti
xor
cld
dec
pop
xor
lcall
into
mov
mov
stc
xchg
out
subl
sub
mov
sti
mov
aas
sbb
push
into
loopne
cmp
jge
jle
cmp
mov
fwait
sbb
mov
pop
clc
add
jmp
repz
jns
push
movsl
pop
pop
jo
cmp
loope
mov
cmpsl
jle
dec
mov
xor
lret
mov
call
push
aam
ljmp
xchg
je
outsb
xchg
test
sahf
inc
push
adc
in
jnp
int3
clc
addr16
jne
ds
or
xor
dec
lock
mov
dec
fwait
rcrl
xchg
mov
mov
pushf
pop
adc
mov
and
fsubrs
popa
jmp
sahf
ret
ds
out
inc
inc
jbe
inc
pop
push
pop
mov
sub
jecxz
test
dec
mov
push
push
xchg
popa
sub
hlt
sti
popf
dec
loope
and
les
cmc
mov
adc
fcmove
xchg
adc
or
pop
mov
out
xor
shr
test
or
inc
les
inc
ljmp
xor
daa
sbb
xlat
dec
loopne
ret
pop
ret
imul
loopne
mov
ja
fsubrs
sub
stos
jno
add
hlt
frstor
add
pushl
mov
inc
insb
add
mov
std
aam
mov
pusha
shlb
popa
cltd
mov
xor
std
into
jae
jnp
cmp
mov
push
lret
pop
je
fsubrl
addr16
das
movsb
shl
out
popa
dec
cli
inc
jb
sbb
mov
pop
cmp
inc
xchg
mov
fisubl
xorb
jb
push
add
sub
pop
and
rclb
shrb
push
into
test
shr
add
jno
lret
test
xor
xchg
aam
out
push
into
jecxz
sub
or
mov
call
mov
pop
mov
shll
xchg
arpl
or
mov
xchg
jp
lea
cmp
cli
mov
inc
jne
pop
scas
into
aas
cmpsb
mov
cltd
js
inc
scas
dec
fildl
out
push
pop
mov
shr
in
and
mov
cmp
add
jbe
insb
fldt
cmp
lods
sahf
negb
xchg
sub
jae
shll
daa
data16
outsl
xlat
cs
mov
sub
xor
ficompl
rcl
pop
ds
loop
pop
xchg
jne
cltd
dec
jmp
cmp
cltd
xchg
js
shr
iret
stos
sahf
inc
push
xchg
popa
cmpsb
dec
fisubrl
sub
or
int
mov
adcb
cmp
aaa
pusha
xorl
xchg
mov
dec
out
push
xorl
lahf
stc
or
outsl
jl
cld
jne
cmpsl
insb
pop
out
call
ret
jns
ljmp
loopne
dec
fwait
adc
mov
dec
xchg
lods
push
fcom
aad
popf
xor
add
jb
push
push
pop
or
or
sub
cmp
add
fmull
sub
inc
adcl
jae
shll
inc
push
es
out
fbld
repnz
enter
adc
in
mov
lcall
sub
or
mov
pop
xchg
das
pop
sbb
xchg
sarb
xchg
outsl
sbb
jne
mov
cmp
in
hlt
mov
mov
jmp
in
dec
inc
mov
sub
cmpsl
out
jnp
in
nop
xor
test
out
jle
test
out
aaa
icebp
push
pop
shlb
add
popf
and
mov
testl
movsb
js
movsb
xchg
mov
jne
dec
ss
xchg
js
and
mov
jne
dec
addr16
aas
ljmp
lret
adc
push
fldl
mov
push
in
push
in
ljmp
nop
cmp
add
push
iret
aam
cmp
mov
mov
out
mov
pop
jmp
addr16
cld
jl
les
push
fstps
in
cmpsb
add
call
call
cli
adc
imull
int
inc
mov
out
call
and
mov
sbb
aas
push
scas
mov
dec
mov
sub
push
and
dec
mov
jecxz
cmp
stos
fldt
test
pop
inc
mov
cmpsb
and
xorb
dec
js
addr16
mov
sub
push
add
daa
push
into
lahf
enter
sub
aaa
xor
insl
cmc
inc
lcall
xchg
in
push
sbb
mov
cmp
negb
and
push
jmp
sahf
mov
cwtl
fisubl
pop
dec
cmp
stos
imul
pushf
mov
and
mov
cwtl
mov
lods
xor
outsb
lds
aas
ds
add
xor
mul
inc
out
inc
sub
or
dec
jbe
sahf
mov
andb
outsb
sub
cwtl
sbb
and
pushf
xor
jb
std
xchg
leave
es
jnp
gs
arpl
or
or
cmpb
cli
rcr
xchg
jns
rolb
fwait
xor
adc
sbb
adc
mov
jns
mov
stos
mov
adc
fdivrl
ret
aad
jecxz
pop
dec
push
push
mov
lahf
call
jg
ja
sub
out
jge
in
xor
cmc
pop
stos
xchg
push
jbe
lock
cmpsl
pop
hlt
push
mov
repz
pop
xor
mov
jge
pmaddwd
push
pusha
sbb
mov
lcall
add
imul
clc
or
fsubrs
cltd
fisubs
mov
mov
or
mov
mov
push
mov
sbb
inc
jle
iret
adc
fstpt
call
sbbb
stc
or
sbbl
cmpb
xor
or
sahf
or
add
add
inc
leave
adc
xchg
popf
mov
lods
arpl
out
int3
jnp
icebp
jg
mov
pop
movntq
and
int3
stos
sbbl
test
js
xchg
adc
ficoml
dec
ds
repnz
sub
xchg
dec
gs
sahf
imul
out
pop
cmp
sbbl
and
in
jge
aas
sbbl
push
dec
sub
adc
addb
xchg
pop
lods
mov
in
andl
pushf
push
decl
shll
lret
xchg
lea
pusha
dec
scas
fcmovb
or
jg
mulps
loop
xor
sub
pop
mov
mov
pop
sub
fistl
dec
data16
jp
lret
in
stos
push
xchg
pop
pop
adc
push
pop
ficoml
call
inc
gs
jnp
dec
jmp
lret
aad
adc
add
xchg
sar
xchg
ret
lahf
std
in
cmovae
adc
pop
ret
push
mov
adc
sub
loop
test
mov
inc
add
dec
lods
pop
clc
dec
dec
push
sub
popf
or
sbb
cmp
xchg
push
out
mov
adc
pop
jne
fs
rcl
push
loopne
or
mov
in
mov
cli
adc
lods
insl
data16
mov
sub
gs
mov
add
sub
popa
jmp
aad
lea
icebp
fnstcw
xchg
nop
pop
fidivrl
mov
mov
faddl
mov
outsl
and
lods
xchg
xchg
jne
pop
mov
mov
dec
inc
repnz
cmp
stos
jmp
and
mov
out
stos
loop
cmp
inc
ds
lock
call
addr16
cmpsb
mov
cli
lock
dec
aam
aaa
mov
sti
pop
pop
cmp
fistl
popa
jmp
xor
xchg
xchg
clc
mov
mov
arpl
fsubs
sahf
jge
or
icebp
sti
popf
mov
xor
dec
inc
push
fwait
xchg
and
into
insb
lcall
jb
jne
xor
in
mov
jno
fs
xchg
fistl
or
lods
aam
int3
outsl
cltd
gs
jmp
jg
push
adc
sbb
je
and
lods
cmpl
jb
or
ret
dec
sub
lret
inc
popf
popa
adc
insl
sbb
unpcklps
fxch
dec
cmp
push
pop
ret
sub
lret
cmpsl
fsubs
test
sbb
lea
cmp
add
pop
std
dec
and
in
lcall
or
jnp
jge
push
lret
fadds
mov
loope
adc
popa
xorl
pop
push
imul
inc
ja
frstor
dec
inc
call
inc
aas
inc
sbb
jno
and
ficompl
test
cltd
and
pop
rcrl
pop
cmp
jle
int
jbe
sub
sbb
dec
divb
pop
mov
dec
jnp
out
xor
ret
icebp
mov
fcomps
sbbl
test
mov
repnz
cmpsl
xchg
mov
sbb
or
arpl
rcl
cmp
adc
pop
inc
sub
xor
adc
add
mov
add
mov
js
je
fnstcw
cmp
out
mov
pop
or
out
pop
cs
imul
mov
sbb
das
sbb
pop
add
rcl
mov
movsb
pushw
add
fiaddl
arpl
cld
mov
mov
push
mov
jmp
mov
test
xchg
or
or
fs
lock
mov
cmpsb
cs
stos
mov
lods
adc
cmpsb
xlat
jmp
test
cmp
clc
in
js
xor
sub
sbb
leave
insb
push
pop
insb
jb
popf
push
push
xor
mov
xchg
mov
data16
xlat
dec
mov
jo
jge
xor
mov
xchg
push
inc
out
out
inc
es
and
stos
cs
les
dec
into
iret
rorl
pop
or
repz
and
pop
jmp
jo
in
xor
jns
inc
lods
rorb
xchg
push
cmp
out
add
mov
fs
or
mov
xchg
repnz
lret
in
pop
gs
ss
adc
jg
shll
adc
jno
sub
or
jo
sub
ss
and
pusha
pop
sbb
add
mov
inc
sahf
pop
ljmp
add
fldcw
fists
jle
jo
push
add
cld
pushf
pop
mov
shlb
cmp
push
pop
cltd
jnp
das
xor
mov
into
test
insl
out
jp
xor
jmp
sub
in
lcall
lret
mov
push
jno
sub
hlt
stc
mov
xchg
xchg
cmpsl
xchg
mov
adc
jo
xchg
es
and
lods
xchg
repz
std
xlat
decl
test
outsl
das
sub
stos
cmp
int3
jg
push
inc
mov
aas
or
pop
scas
gs
cs
mov
xchg
out
pop
fldenv
xor
mov
mov
popf
in
mov
inc
mov
sub
or
add
pusha
sub
or
sub
int
dec
push
add
pop
movsb
ja
ja
outsb
loop
xchg
loopne
mov
xchg
mov
push
mov
mov
pop
mov
fimull
sbb
jo
outsl
jae
pop
sahf
popf
sbbl
repnz
lcall
dec
push
mov
cmpsl
mov
pusha
xor
idivb
pop
mov
pop
fistps
mov
out
push
push
sbb
shrl
ret
hlt
fsubrs
xor
fs
inc
xor
lods
sub
ja
inc
cmp
sub
enter
mov
xchg
or
in
loop
adcl
or
cmpsl
push
dec
pop
jbe
inc
and
sub
dec
ret
int3
std
mov
jmp
lahf
mov
fdivl
push
xor
pop
adc
xchg
jno
in
dec
push
mov
sbb
push
adc
ds
repnz
or
pusha
repnz
and
sbb
addr16
insl
inc
outsb
pop
iret
es
repnz
pusha
jbe
sti
xor
aas
iret
inc
pop
in
loope
repz
outsb
jnp
sbb
stc
call
sbb
adc
xchg
stos
js
mov
sar
mov
leave
xchg
movsl
hlt
sbb
out
int
shl
pushf
fiaddl
arpl
fdiv
repz
jecxz
stos
hlt
int3
or
jmp
inc
fdivl
daa
adc
xchg
mov
popf
cli
int
mov
mov
cli
cld
ret
cmpb
xor
aaa
int
and
xor
leave
mov
jno
push
cmpsl
mov
popf
scas
cmp
mov
outsb
movsb
jp
fnstsw
fiadds
fisubrs
push
notb
dec
test
mov
mov
in
leave
testl
pop
jmp
adc
cmpsl
imul
xor
adc
lahf
nop
test
ficoml
insb
xchg
add
and
dec
jge
add
pop
insl
pop
daa
mov
cmp
out
or
add
jnp
or
push
rclb
mov
shlb
cs
sbb
inc
in
push
xor
xchg
lahf
lock
mov
leave
movsl
xor
shll
or
jle
pop
sbb
lds
jo
inc
mov
cli
fwait
jnp
sub
sbb
es
mov
mov
out
push
das
das
sub
dec
jae
push
sub
fldl
test
inc
sahf
xchg
shlb
rclb
push
pushf
xchg
imul
dec
dec
jl
call
lret
adc
xchg
pop
dec
jo
dec
cmp
dec
movsb
push
dec
mov
sbb
test
dec
lcall
push
dec
push
push
popa
xchg
das
loopne
inc
into
test
fstpt
shlb
negl
pop
xchg
fdivr
dec
add
stc
dec
mov
hlt
ret
gs
js
add
ror
in
data16
add
loope
sbb
jp
xchg
addr16
shll
xor
jae
ja
mov
dec
jg
sbb
setl
sbb
mov
shlb
jb
dec
sbb
test
outsb
int3
inc
insl
jne
rclb
pop
fwait
pop
xchg
in
out
mov
lea
xchg
sub
sbb
jle
fsubrl
cmp
and
psubq
add
jmp
bnd
sub
mov
in
xor
repz
push
int3
and
xchg
jns
pop
dec
lods
and
ja
imul
push
sub
mov
or
cltd
mov
movsb
pop
pop
shrw
jecxz
pusha
and
xchg
fdivs
inc
sbb
jle
mov
mov
and
sub
ret
dec
data16
pop
aad
cmpsl
pop
dec
mov
cmp
sub
lock
data16
clc
in
mull
incl
aaa
addr16
cmp
lods
and
pop
add
lock
xchg
lds
inc
cmp
test
sbb
les
aad
cmp
inc
loopne
cmp
std
repz
repnz
cmp
jbe
mov
movsl
jo
sahf
pushf
insl
cmpsl
js
cwtl
rorl
pushf
insb
orb
mov
xchg
inc
aad
xlat
pop
repz
rorl
and
xor
xchg
stc
fcoms
sub
inc
popa
and
xchg
and
pusha
or
dec
mov
sub
rcl
repz
inc
std
mov
mov
dec
xlat
sbb
xor
mov
adcl
adc
jmp
or
mov
push
sbb
loop
sbb
jbe
enter
push
xor
leave
lock
divl
sub
or
push
sar
out
mov
xchg
in
cmc
lretw
sti
and
shlb
mov
xor
cmc
xor
xor
jge
out
jg
movsb
and
jns
sub
add
lea
inc
shrb
xchg
add
mov
ja
push
push
fistpl
push
xor
repnz
pop
lcall
cmp
mov
jo
push
cmc
daa
xchg
mov
sub
test
sbb
jmp
das
push
popf
lds
and
mov
jo
pop
mov
shlb
mov
dec
xchg
dec
inc
cmp
cmc
sbb
push
sub
fstp
mov
rorb
sbb
jbe
or
xor
push
mov
xchg
repz
add
jge
enter
xchg
mov
pusha
test
fnsave
push
add
fisubl
incb
mov
mov
pop
test
or
or
jle
out
jle
es
mov
test
and
mov
cwtl
inc
push
and
rol
mov
int3
fcmovnbe
inc
lds
pop
jnp
pop
and
or
mov
inc
aad
test
sbb
scas
adc
mov
data16
les
out
fidivrl
imul
push
inc
sub
add
fisttpl
cmp
cmp
mov
mov
cli
out
aas
in
inc
or
lods
push
xor
fwait
inc
out
xor
popa
stos
mov
or
jge
dec
jle
inc
jl
int3
in
int
sub
rclb
jno
fdivrs
iret
cltd
sbb
sbb
mov
popa
xor
ret
test
cmp
movsl
dec
subb
sbb
jb
andb
and
les
jp
mov
sbb
mov
xor
arpl
pop
mov
shlb
xchg
test
mov
fmull
jnp
jnp
xchg
enter
aam
loop
and
fidivrl
popa
mov
repz
sub
imul
movsb
inc
aaa
jp
mov
mov
leave
aad
sarb
in
out
movsb
pop
add
pop
in
mov
inc
js
pop
cwtl
int3
movsl
les
adc
lods
rolb
push
xchg
inc
jle
cmp
fwait
out
mov
jae
mov
mov
dec
or
scas
mov
shll
gs
and
call
into
cmp
mov
jl
push
mov
and
and
fs
cmp
push
ret
push
mov
or
add
sarl
mov
xchg
or
push
or
xor
inc
roll
push
icebp
pop
shrb
or
xchg
leave
bnd
xor
adc
mov
push
add
inc
stos
repnz
sbb
xchg
push
lahf
pop
jg
mov
cmp
aas
mov
jo
scas
imul
sub
push
lods
adc
sbb
fs
cmp
cmp
je
int
aaa
and
mov
mov
mov
aaa
lcall
and
loope
jo
jae
addr16
imul
lods
pop
xchg
inc
jp
mov
dec
bound
xor
pop
dec
lods
fstpt
mov
xchg
inc
aas
adc
pop
sub
jle
sti
lcall
in
stos
mov
test
into
push
bound
in
sub
cmc
mov
popa
sub
jmp
call
adcb
test
data16
jno
adc
mov
mull
adcl
test
add
mov
xchg
pop
sbb
scas
xor
insl
jns
cmc
aas
cltd
out
or
push
cmc
xor
cmp
lods
ja
pop
clc
int3
jle
pop
mov
icebp
mov
inc
cmp
mov
cmpb
fwait
cli
push
repz
sbb
cmc
out
push
xchg
and
ja
sbb
popf
lea
push
rcll
cltd
and
in
mov
bound
pop
std
sub
cmpb
cmp
loope
cltd
daa
push
dec
fmuls
in
shll
imul
or
and
cmp
sub
xchg
iret
xchg
test
mov
cmp
push
inc
xchg
adc
adc
mov
pop
popf
sub
dec
and
in
adc
push
stos
jno
shlb
cli
mov
add
inc
leave
subl
mov
dec
xor
or
test
and
fwait
cmp
int3
js
xlat
jmp
insl
xor
adc
adc
adc
add
xchg
sub
cli
pop
enter
out
aam
push
js
cs
sub
jle
push
dec
cmp
and
lret
int3
data16
cmp
cmc
shll
mov
pop
pop
ficompl
fsubrl
pop
or
ja
les
or
mov
imul
loope
xor
mov
data16
mov
data16
out
adc
add
pop
daa
dec
sub
sub
or
cmc
mov
sbb
ds
pushf
scas
cmpsb
adc
jmp
les
or
out
cmp
cmp
loope
jecxz
dec
in
outsl
cmp
mov
scas
in
repz
cmp
push
mov
mov
mov
or
xor
dec
add
push
xchg
cmp
xchg
lods
cmc
and
cmpsl
mov
je
and
cmpsl
jnp
insl
cmc
push
mov
inc
call
lret
xchg
push
paddd
jg
mov
jne
aad
mov
sub
in
stos
fidivrs
cmp
push
jnp
ljmp
jne
clc
cmp
int
ja
xor
test
push
arpl
outsb
xor
push
adc
and
push
pop
and
enter
aaa
mov
dec
and
jmp
testb
jne
pop
dec
pop
jge
mov
push
scas
repnz
push
cmpsb
pop
sub
cmpsl
add
push
cld
stos
stc
loop
hlt
pop
or
aas
cmp
or
mov
fists
sub
ja
int
dec
fsubl
rcll
adcb
aad
cmp
mov
stc
loope
ss
hlt
sub
push
jno
pop
bound
cmp
mov
inc
xchg
ja
xchg
and
and
push
jl
add
jno
dec
push
outsl
enter
jbe
cmp
data16
pmaddwd
aam
pop
shl
push
mov
nop
push
cmpxchg
xor
cmp
fcoml
inc
les
pop
arpl
or
pop
pop
fdivs
inc
insb
or
sub
push
ret
loope
das
jbe
dec
lds
bound
out
push
inc
test
cmp
and
mov
mov
sahf
dec
mov
xchg
icebp
in
fwait
xchg
push
and
repz
out
inc
cmp
add
dec
out
scas
aas
ret
jge
sbb
fstpt
test
dec
sub
inc
inc
testl
cmp
mov
xor
mov
inc
jnp
inc
push
xor
pop
mov
mov
push
jns
das
clc
push
into
iret
and
call
add
dec
hlt
mov
cmp
loop
in
into
mov
cld
lret
xlat
or
sub
jl
int
mov
imul
je
dec
dec
rolb
insl
jp
xchg
pop
jp
sbb
xor
and
leave
xchg
pop
mov
subb
in
fsubrl
xchg
push
xchg
add
xchg
lret
ljmp
imul
add
hlt
aam
lret
mov
hlt
testl
nop
into
xor
imul
test
mov
imul
into
sub
fdivrl
loop
push
jp
and
dec
push
in
hlt
pop
arpl
gs
sub
xchg
xlat
adc
daa
subb
cmp
rorl
xchg
push
xchg
test
bsf
fsubs
cltd
xor
enter
lcall
fsubr
jb
jmp
repz
dec
jle
pop
leave
pop
call
cmp
loopne
mov
frstor
adc
ret
cmp
cs
addr16
jge
cs
jae
imul
nop
test
add
xor
pusha
add
jp
leave
xor
jbe
mov
inc
lret
dec
dec
xor
and
mull
adcl
out
loopne
rcrl
test
jecxz
imul
xchg
add
loope
xor
pop
push
inc
sbb
enter
dec
mov
mov
ljmp
jno
jb
mov
sbb
popa
and
mov
push
inc
sub
xchg
in
fstl
out
or
cmp
in
fwait
out
sti
jmp
jae
sbb
or
mov
adc
pop
movb
mov
or
clc
jb
push
dec
cmc
xchg
mov
dec
jbe
mov
jns
sti
adc
repnz
loopne
jns
sbb
out
aad
cmp
out
movb
imul
bnd
inc
pop
push
adc
ss
push
ds
aaa
aam
lcall
cmp
mov
xlat
shll
sub
push
sbb
test
into
dec
push
xor
or
testb
cmp
std
test
jp
cli
xchg
aam
outsb
dec
out
mov
and
outsb
addr16
rolb
mov
pop
mov
psubsb
push
gs
arpl
push
dec
test
fcoms
jmp
jmp
arpl
enter
aaa
ljmp
sub
in
adc
xchg
pop
mov
imul
clc
inc
pop
stos
cld
mov
dec
add
sub
push
push
outsb
shl
das
xchg
call
xor
jo
mov
xor
out
cmp
sbb
bound
movsl
xor
pop
xchg
ret
dec
adc
ljmp
dec
xchg
push
out
dec
xor
mov
mov
jg
jmp
insl
lods
xor
pop
jno
dec
push
iret
cmp
test
shlb
sbb
pop
cld
adc
test
fiadds
mov
push
sub
and
mov
inc
jecxz
imul
add
lea
pop
xlat
out
mov
inc
jns
fimull
dec
or
lcall
adc
jecxz
sub
imul
jno
mov
adc
lret
out
xorl
jnp
jmp
scas
fistps
in
or
adc
lea
in
cltd
addr16
or
mov
divb
mov
test
je
xchg
scas
pop
mov
cltd
in
pop
dec
pop
jne,pn
cld
push
test
mov
int
pop
push
sub
mov
mov
xchg
push
fsubr
xor
jge
mov
cmp
lret
mov
fcoml
repnz
rcr
pop
add
or
mov
mov
daa
ud1
xlat
mov
cmpsl
sbb
arpl
xchg
add
sbb
out
jmp
sahf
xlat
xchg
test
push
and
mov
add
dec
dec
sbb
dec
daa
in
adc
or
aaa
push
test
sbb
xor
and
inc
jo
pop
jo
add
inc
inc
shl
out
xlat
or
in
insb
ljmp
sub
outsb
jnp
cmc
add
ja
cmpsl
hlt
sbb
cmpsl
xchg
push
lods
sahf
and
rorb
mov
push
test
dec
repz
push
cmp
fsub
lods
xchg
push
mov
jne
imull
jmp
lea
jecxz
mov
call
push
movsb
mov
in
cltd
pop
clc
mov
jae
dec
pop
add
insl
mov
xchg
repz
mov
sbb
mov
outsl
mov
cli
icebp
sub
inc
gs
mov
hlt
nop
cmp
cmp
insl
test
call
aad
in
hlt
jb
stos
negl
arpl
sub
stos
mov
les
mov
pop
sbb
scas
inc
filds
mov
dec
mov
push
jnp
xlat
into
loop
mov
or
mov
mov
icebp
adc
mov
cltd
pushf
dec
xchg
cli
in
fs
sub
gs
movsb
fldl
pop
inc
ja
popf
sub
leave
lret
dec
xor
mov
cmp
or
mov
pop
test
pop
add
ja
pop
xchg
dec
int
mov
dec
cwtl
outsl
inc
and
push
sbb
roll
outsb
cmp
out
xor
bound
pop
sub
outsb
lret
mov
push
push
iret
insl
inc
pop
jmp
into
mov
call
inc
adcl
xor
xchg
mov
and
js
out
push
lds
std
xor
and
cmpsb
loopne
mov
fsubrp
cmp
aaa
xchg
mov
stc
mov
jne
sbb
pop
pop
sub
push
ret
sbb
repz
stc
sub
mov
in
fiaddl
inc
dec
cmp
movsl
pop
mov
jg
test
lret
pusha
bnd
pop
push
fnstsw
scas
cmp
push
int
cmp
xor
or
clc
and
pop
ret
lret
int3
fisttpl
adc
lea
mov
out
mov
stc
mov
mov
cltd
mov
rcrb
mov
insl
xchg
cmp
scas
mov
not
outsb
ret
dec
pop
push
cmpl
xor
or
mov
inc
and
jmp
rcr
loopne
fcoms
xchg
xchg
adc
inc
xorl
and
das
xchg
es
shlb
mov
jns
insl
mov
in
and
mov
inc
inc
sub
aad
enter
push
push
pop
flds
cli
dec
xor
mov
mov
sahf
in
or
sbb
scas
pop
pushf
les
push
mov
nop
adc
js
cmp
jo
stc
leave
add
xor
insl
pop
xor
and
cmp
push
popa
pop
in
sbb
push
lock
mov
push
icebp
inc
icebp
cmp
adc
lock
push
je
xor
outsb
pop
jnp
fs
add
std
xor
xchg
imul
jecxz
inc
pop
mov
out
xchg
icebp
inc
dec
aaa
fldt
sub
mov
inc
mov
stc
fldt
xchg
fldt
aad
popf
sub
mov
orl
sarl
pop
les
inc
mov
pusha
fwait
dec
sub
out
jp
fwait
cmp
out
mov
sti
add
popf
pop
cltd
and
mov
nop
and
int3
mov
lods
jle
mov
cmp
pop
or
fnstenv
add
idivb
or
popf
mov
xchg
test
or
sbb
fdiv
sbb
lret
dec
push
popf
test
jmp
add
pop
bnd
sbb
xchg
mov
cli
mov
push
cmpl
ret
jns
xor
mov
and
push
ret
jmp
cli
push
jecxz
xor
xor
jbe
shll
popa
pop
dec
icebp
sub
iret
pop
mov
jp
sbbb
sub
or
mov
pop
xchg
or
pusha
mov
adc
cwtl
xor
dec
fstpt
scas
cli
mov
cmc
jmp
movhps
ja
sub
mov
int3
addb
pop
pop
setbe
or
mov
fnstcw
push
sti
das
add
cmp
rclb
sbb
jmp
andl
fisubrl
xor
mov
sbb
xorl
mov
xchg
mov
fwait
insl
sti
roll
out
repz
jge
out
in
mov
lock
scas
in
in
inc
adc
js
jp
sbb
mov
lock
cmp
aas
cmpl
push
lcall
adc
xchg
lds
dec
repnz
movsb
imul
iret
mov
insl
adc
mov
xor
adc
sete
movsl
xchg
mov
add
jp
cs
mov
pop
and
jbe
scas
mov
ss
je
aam
insl
adc
adc
adc
out
xchg
push
mov
xor
jmp
fnsave
imul
orl
shrl
lds
mov
addl
jge
dec
xorl
inc
leave
inc
xor
push
imul
shl
xchg
jb
cs
pusha
xchg
sub
das
ljmp
stc
fcompl
js
or
mov
and
loopne
mov
adc
or
mov
fdivl
roll
mov
push
pop
lock
dec
lahf
or
sub
adc
add
ljmp
mov
sub
push
ja
push
or
out
fsubs
out
push
ss
out
int3
lds
jnp
into
imul
or
push
test
pop
jnp
out
cwtl
cltd
icebp
xor
les
cwtl
lcall
pop
shll
shrl
jmp
jnp
dec
sub
and
jne
outsb
push
cld
pop
test
push
and
scas
push
inc
mov
repz
nop
sbb
mov
adc
fs
sti
cs
imul
push
mov
mov
pop
rcrb
fsts
push
push
mov
sbb
sbb
jp
fwait
mov
cwtl
add
int
mov
ret
sbb
out
repz
out
mov
call
bound
jge
lret
test
xchg
cmp
mov
insl
fidivs
loope
gs
fmuls
mov
scas
pavgw
xorl
scas
dec
adc
ds
push
lea
mov
push
ficomps
push
cmp
fnstsw
mov
stos
push
sub
shll
xchg
pop
ror
ja
repz
cmc
movsl
repnz
pusha
loop
sahf
add
out
xchg
adc
mov
jns
pop
sbbb
mov
and
push
add
dec
add
xchg
movsl
pop
mov
test
les
inc
xchg
ret
jmp
and
or
stos
test
xchg
cld
stos
and
subl
pop
fidivrl
jb
and
orl
sub
dec
jl
xor
imulb
arpl
cmp
enter
in
mov
movsb
lods
mov
or
and
adc
jo
jge
mov
dec
mov
fs
out
xor
popf
jp
psrld
addl
ja
jg
xchg
push
scas
push
mov
mov
mov
imul
adc
and
mov
or
test
and
sbbl
fisttps
jb
push
les
rcl
jmp
mov
and
xorb
sub
sbb
jno
loope
popf
in
dec
mov
call
aam
sahf
in
mov
push
add
cmp
in
test
pop
adc
out
mov
aaa
aad
xlat
xchg
scas
dec
imul
aad
and
pop
lret
cs
jmp
xorb
sarl
mov
sbb
out
jle
rcrb
test
lret
cmpsl
dec
fldenv
enter
jl
and
movsl
dec
xchg
xchg
add
movsl
push
fldlg2
stos
xchg
daa
andl
out
mov
sbb
dec
mov
push
jecxz
into
add
and
dec
jae
clc
jbe
sbb
push
test
cs
cmp
xchg
out
aas
idiv
aam
fidivl
xor
fsubl
shl
pop
mov
sbb
iret
or
xlat
sub
mov
loopne
call
cli
ret
push
test
daa
loopne
push
arpl
cmc
jge
inc
insb
sub
jo
sub
cli
xlat
xor
cli
sbb
adc
mov
add
test
daa
movsl
jnp
pop
negl
add
push
cmp
test
sahf
lahf
outsl
cs
xor
enter
mov
std
pusha
mov
cs
mov
lea
sub
dec
aam
or
stos
inc
or
sub
inc
popf
shrl
and
scas
mov
std
test
popa
cmp
repnz
pop
movsl
push
dec
dec
xchg
loop
cmpsb
mov
pop
and
pop
sbb
movsb
icebp
in
repz
cmpsb
testb
jge
mov
stc
jno
sub
fisttps
push
pusha
mov
leave
push
repz
shl
cmp
int
mov
stos
mov
xchg
and
aas
mov
xchg
shr
sti
push
movsb
in
jns
ret
imul
push
jle
and
xchg
aad
jmp
iret
loope
push
ja
mov
and
mov
stc
aas
dec
sbb
push
xor
bound
mov
lcall
je
sub
std
imul
enter
out
jo
mov
ljmp
and
sti
dec
ret
xor
mov
sub
inc
adc
pop
jmp
bound
cmp
sahf
inc
xchg
cld
mov
pop
test
pop
jecxz
lret
mov
pop
push
inc
cltd
push
fists
pop
aam
mov
das
les
mov
in
jmp
pusha
adc
out
push
mov
clc
cmpsl
add
mov
mov
sub
andl
sarl
cmpb
mov
enter
jmp
leave
jmp
pop
fistps
xchg
pop
cli
imul
adc
fadd
arpl
cli
lods
ffree
mov
mov
dec
daa
or
push
sbbb
in
mov
sbb
jbe
les
add
adc
xor
push
outsb
dec
xlat
ffreep
push
loop
xlat
sahf
inc
fbld
adc
pop
mov
movsb
mov
xchg
dec
jg
or
mov
jns
mov
pop
test
cmc
js
cld
inc
sub
mul
pop
mov
lods
shl
lret
mov
fistpl
sbb
and
xor
sbb
pop
jecxz
xchg
mov
jo
push
jp
dec
js
imull
mov
xor
push
jle
in
lea
mov
scas
and
inc
dec
jp
notl
sbb
sbb
fbstp
cld
test
pusha
sti
dec
mov
mov
mov
clc
fldcw
xor
inc
pusha
pop
fdivl
or
dec
out
in
fisttpll
and
ds
out
out
sub
mov
mov
fiadds
add
dec
aas
imul
fwait
push
pushf
movsb
clc
jne
popa
je
sbb
pop
xchg
mov
clc
mov
pop
and
faddl
hlt
and
sbb
push
lds
gs
data16
negb
cmp
repnz
test
clc
es
clc
out
xchg
add
outsb
jae
jle
ficompl
popa
loopne
decl
xchg
add
cmpsb
out
or
inc
push
test
sbb
xchg
add
scas
aad
clc
sub
lods
jb
pop
push
ficompl
xchg
xchg
fisttpl
ja
mov
mov
lret
bound
fisttpl
inc
jno
in
cmpsl
dec
daa
add
mov
int3
lock
or
push
in
sbbb
ror
sbb
mov
imul
cmpsb
inc
ljmp
test
adc
jo
repz
lret
mov
test
push
aam
mov
jnp
mov
push
scas
outsb
adc
mov
enter
pop
das
lock
push
mov
mov
ret
leave
xor
mov
sub
inc
pop
hlt
call
push
stos
inc
outsb
cmc
insb
push
in
adc
mov
xchg
in
pop
pushf
lcall
add
adc
xchg
scas
call
shrl
mov
jg
nop
mov
in
ja
jns
fidivrl
push
aas
arpl
cmpsl
and
pop
mov
adc
popf
aam
inc
push
into
cs
adc
and
shlb
test
cmpsl
scas
sbb
pop
mov
in
push
rcrb
mov
and
push
mov
out
cli
loop
pop
push
loopne
ret
dec
mov
insl
add
ret
jns
jae
xor
xor
push
clc
ds
add
push
sti
add
sbb
add
pushf
xchg
sti
addr16
inc
push
dec
pop
shrl
das
icebp
dec
pop
dec
xchg
inc
imul
into
daa
mov
mov
and
loope
pop
xchg
dec
mov
test
xchg
imul
cltd
sbb
aas
and
mov
xor
test
push
in
cvtps2pi
jns
or
lock
aam
inc
sbb
arpl
cs
fsts
sub
lock
cmp
pop
shrb
movl
cmp
jns
popf
cltd
outsb
arpl
out
lahf
les
cmpsl
xor
in
test
cli
mov
in
adc
imul
addr16
ljmp
mov
pop
in
mov
pop
pop
mov
lods
jnp
ret
hlt
inc
jcxz
sbb
fsts
scas
push
lcall
scas
mov
fdiv
std
js
xor
ja
repnz
in
jl
jp
dec
add
add
mov
mov
inc
pop
adc
ja
pop
mov
scas
icebp
sub
cmpsb
push
insl
and
mov
loop
push
repnz
mov
push
or
ret
jp
arpl
movsb
into
pushf
fildl
and
mov
add
sbb
dec
add
mov
sti
cmp
mov
loop
test
ljmp
jl
adc
out
aam
cwtl
or
out
js
pop
test
mov
int3
jg
push
mov
jmp
stos
lret
adc
jns
mov
imul
cs
mov
mov
push
ficompl
das
jbe
jle
das
fidivrs
xchg
xchg
outsl
out
or
push
imul
in
les
fnstenv
pop
in
inc
test
int3
adc
inc
pop
mov
xchg
cmp
out
adc
mov
xchg
ljmp
mov
push
cli
daa
or
jmp
adc
cmpsl
cmc
xor
into
add
fldl2e
lea
out
jnp
lea
fcoms
sbb
pop
ja
outsl
add
aaa
push
xlat
mov
out
mov
icebp
inc
ret
jne
mov
stos
hlt
ret
inc
pop
xchg
add
in
ror
mov
adc
add
rol
movsb
mov
cmp
pusha
push
lods
mov
mov
fs
xchg
push
inc
mov
dec
lock
mov
lret
fwait
lret
fdivrs
mov
jns
frstor
mov
dec
push
clc
mov
nop
inc
inc
pop
sti
outsb
xchg
pop
cmp
jecxz
cltd
and
sub
inc
adc
add
or
push
insb
jno
ss
fstl
push
mov
cmp
ret
xor
inc
inc
and
test
mov
sbb
pop
jmp
aas
or
jnp
jo
mov
fs
mov
fisttpll
idivl
push
and
add
xchg
mov
not
inc
insl
sbb
push
mov
mov
bound
add
cmp
adc
cld
push
cli
fcmovu
std
mov
inc
jle
mov
xchg
lea
add
sbb
xor
inc
cwtl
ret
addr16
dec
sbb
out
std
push
shlb
jb
enter
lds
fdivl
imul
daa
push
lock
outsb
jp
push
push
clc
pop
lea
mov
jne
cltd
xor
mov
add
ljmp
sub
iret
inc
cmpsb
adc
fnsave
sbb
ret
cmp
mov
adc
mov
pop
aaa
lods
push
mov
pop
incb
jg
jp
add
xchg
cmpsb
mov
fisubl
pop
sbb
cmpsl
add
xor
and
mov
lcall
into
lea
aad
xor
rcrl
mov
adc
test
mov
sbb
cmpb
dec
mov
sub
dec
aam
jle
ficompl
cmc
sub
inc
mov
and
stos
inc
adc
aam
inc
sub
sti
jg
subb
push
adc
lock
xor
test
inc
daa
add
jg
mov
insb
fcoml
or
out
xlat
inc
dec
pop
clc
jle
or
pop
shr
jmp
cmp
iret
jp
jle
test
cmpsb
xor
mov
cmp
imull
xchg
fcompl
imul
dec
or
or
or
or
bound
clc
adc
sub
lea
ss
xor
mov
dec
sub
rorb
pop
jmp
mov
adc
cmp
test
sub
je
add
in
pop
sbb
jnp
adc
es
mov
call
mov
lock
cs
sub
jb
std
mov
divb
jo
lods
mov
mull
pop
hlt
xlat
testb
mov
mov
cmp
stos
ljmp
add
cmp
addl
mov
xor
inc
lds
jb
push
mov
cmp
imul
fwait
push
sub
adc
fs
sahf
test
jns
dec
rclb
mov
js
scas
adc
outsb
divl
loop
cmpsb
mov
push
sub
push
loopne
push
je
pop
int
push
repnz
cmc
dec
dec
jne
daa
xor
mov
into
call
xor
jmp
dec
bound
cmp
sbb
into
inc
iret
xor
das
stos
and
in
push
ret
in
mov
fistpl
sbb
sub
jae
jo
mov
dec
jne
fcmove
mov
sub
fidivs
iret
push
add
jb
roll
gs
mov
or
mov
call
xchg
push
sub
jg
outsb
cmp
and
inc
xchg
or
lock
push
pop
ret
xchg
push
rcrb
jmp
jecxz
sub
lods
into
lahf
cwtl
scas
int3
lret
shrl
adcb
mov
out
dec
xchg
fs
pusha
sahf
outsl
jg
adc
les
fistps
hlt
xchg
aam
lret
icebp
push
or
rcll
lods
mov
mov
scas
pushf
jb
lods
xchg
dec
dec
push
ss
mov
mov
pop
ljmp
mov
push
imul
loop
stos
mov
test
or
mov
idivl
inc
lods
xor
sbb
sub
jno
bound
jnp
jne
lods
repz
push
repz
and
js
ljmp
insb
push
lods
lahf
popf
aam
mov
add
and
addl
cmp
into
fwait
or
xchg
adc
cmp
and
xchg
cmp
in
add
mov
mov
mov
push
push
addr16
xor
leave
cmpb
aad
fiaddl
jle
xchg
std
ret
add
rorb
int
mov
adc
sub
mov
arpl
pop
push
jp
lcall
aam
adc
lret
mov
inc
cmp
jnp
jmp
sub
in
movsl
push
je
or
adc
cmp
fstpl
mov
int3
sub
add
sbb
out
rol
push
dec
xor
pop
and
iret
scas
pusha
je
pop
add
mov
jecxz
sti
dec
sub
sbb
sub
ds
xor
mov
or
fcmove
mov
mov
jno
push
dec
cwtl
inc
dec
out
rcll
rorl
scas
lock
adc
sbb
adc
dec
jmp
cmpsl
aas
test
out
jne
cmp
dec
inc
fs
xor
rol
xor
mov
mov
jns
sbb
in
popa
repnz
stos
insb
fnstsw
sub
add
add
push
iret
pop
add
mov
push
or
test
push
mov
stos
cmc
sti
rolb
shlb
push
sarl
loopne
push
fwait
ret
pop
adc
mov
sbb
add
sbb
mov
fdivs
mov
iret
cmpb
mov
dec
xchg
das
cmp
imull
fsubrs
mov
int
adc
adc
cmp
popf
push
xchg
dec
mov
xchg
xor
loope
or
lea
fidivrl
cwtl
xchg
sbb
adc
pop
cmp
js
pop
mov
pop
mov
cmp
lock
scas
sub
stos
dec
cld
push
loop
test
xchg
imul
or
pushf
and
xor
andb
xor
sbb
scas
cmp
fyl2x
cmp
test
push
imul
pop
xor
mov
popa
jl,pn
mov
cwtl
jp
jg
mov
add
movsl
pop
xor
cmp
mov
int3
push
xchg
adc
loopne
xchg
mov
fiaddl
ljmp
sub
fwait
mov
fnstenv
stc
adc
inc
push
dec
iret
popa
je
sahf
push
push
push
cwtl
cltd
mov
push
test
inc
cmpsb
es
sub
loop
mov
add
xchg
xchg
fs
adc
push
movsl
cltd
sbb
popa
lds
mov
pop
in
js
test
push
imul
or
lret
repz
ror
repz
lahf
push
push
lcall
xlat
adc
adc
pop
mov
jns
fwait
popa
in
pop
movsl
sarb
push
sbb
sbb
cs
sub
pop
pop
arpl
aaa
add
push
jg
jnp
fcmove
cmp
sub
and
sub
adc
or
jne
pop
pop
xchg
shrb
push
push
int
sub
das
and
xorb
dec
in
outsl
shll
mov
cmp
lods
pusha
xor
pop
fisttpll
clc
push
xor
push
push
sahf
aam
andl
cmp
mov
mov
mov
and
lds
push
imul
sub
xchg
outsb
int3
dec
dec
xchg
dec
push
pop
xchg
pusha
dec
xlat
push
push
sbb
mov
rorl
dec
xchg
sbb
out
lret
mov
and
add
sbb
push
out
sti
lds
add
push
mov
ljmp
and
xchg
pop
shrb
in
insl
xor
out
and
stos
inc
jae
aas
adc
or
add
push
adcb
out
mov
out
inc
lods
xor
sub
int
push
mov
dec
mov
jecxz
sub
lods
ret
movsb
in
pavgw
insb
cmp
jo
and
loope
or
lods
or
jo
xchg
lds
into
cwtl
xchg
mov
dec
xchg
sub
mov
inc
subl
inc
lret
daa
push
std
or
xor
xchg
sti
mov
lods
adc
push
loope
mov
mov
mulb
stc
in
or
je
mov
mov
and
sbb
scas
or
jns
xchg
jnp
lods
sub
inc
cld
mov
and
sbb
les
add
andb
gs
ss
outsb
push
movsb
fidivs
aad
pop
or
movsl
dec
dec
cmp
insl
sub
jns
sbb
aad
sbb
loope
call
mov
aam
aaa
push
cli
insl
xor
and
mov
mov
in
fstpt
popa
inc
cmp
sub
aad
xor
cmp
inc
scas
ret
lahf
outsl
mov
jae
xor
das
scas
in
cmp
sub
aam
jle
push
inc
jp
mov
rol
sub
and
inc
cmc
movsb
bswap
out
jbe
scas
out
enter
or
add
adc
sarl
fldcw
fisttps
cmp
dec
repz
push
insl
xor
movsl
jb
fistl
push
xchg
cmp
xchg
push
jnp
ret
cmpsb
xchg
aad
jmp
test
mov
mov
jno
xor
sub
rorl
into
mov
lcall
or
jnp
sub
pop
int
icebp
dec
ja
int3
fsubrl
inc
push
call
or
daa
pop
cmp
lods
cld
sbb
mov
fcoml
push
es
adc
in
push
or
leave
data16
inc
das
pop
pop
xor
mov
loope
cmp
lea
push
pop
mov
pop
lds
mov
lds
in
shlb
sahf
mov
sub
jb
inc
jl
cmp
or
cmp
inc
imul
push
cmp
out
and
mov
xor
sarb
sbb
add
das
sub
out
ret
rcrb
xorb
test
rolb
js
hlt
inc
mov
aad
jle
icebp
push
jg
adc
jne
jno
push
and
les
cld
subl
shrb
push
test
nop
or
xor
movsb
lock
ret
rolb
xor
cmpsl
lock
cli
scas
fldenv
xor
xor
cmc
sti
in
lock
dec
daa
loopne
or
loopne
in
inc
ja
aam
incb
adc
push
movsl
or
leave
aas
jmp
rcll
jg
xor
scas
scas
mov
inc
push
int3
sbb
in
iret
leave
out
outsb
test
cld
leave
daa
aas
jne
cmc
xchg
mov
pop
fwait
inc
jo
testb
xchg
mov
ficoms
jno
orl
test
mov
inc
pop
push
stos
adc
es
std
or
lds
jp
sub
out
pusha
fbstp
pop
fs
mov
jmp
sbb
int3
sub
aaa
negl
lock
push
enter
sbb
rcll
out
lret
add
pop
testl
out
iret
mov
stc
xchg
adc
mov
pop
sub
sub
loop
repnz
hlt
jmp
adc
fs
std
aad
ss
fst
leave
mov
repnz
xchg
repnz
rcrb
arpl
xor
cmp
int3
dec
icebp
in
jge
fisttpll
and
sub
inc
xchg
and
jae
dec
push
out
sub
jb
bound
fnsave
lods
into
mov
adc
ja
and
mov
xchg
sbb
pop
cwtl
cmpsl
and
sbbb
outsl
out
mov
loope
lea
nop
xchg
mov
mov
inc
adc
sar
lds
aad
cmp
mov
out
jb
movsl
subb
stc
ljmp
shrb
adc
lcall
mov
repz
pop
out
mov
popa
adc
adc
shll
push
jnp
adc
cwtl
sub
subb
jno
adc
and
mov
test
pop
xchg
sarl
pusha
dec
sbb
mov
jl
test
ret
mov
and
stos
ja
push
loope
faddl
mov
xchg
js
cs
xchg
xor
sbb
mov
add
mov
jno
and
repnz
cwtl
movl
mov
scas
inc
push
mov
or
das
in
xor
push
push
sub
or
mov
ja
adc
lahf
cmp
jno
pop
in
adc
push
jae
pusha
xchg
aad
and
cmpsl
andl
sub
jp
cmp
and
popf
mov
push
xor
out
psubsb
cmpl
mov
lods
dec
or
sub
xchg
divl
add
ds
inc
xchg
pop
push
sbb
bound
cld
push
sbb
pop
sbbb
in
ficoml
test
out
cmp
addr16
push
cmp
aam
mov
pop
cwtl
pop
jo
mov
mov
xchg
fbstp
filds
pop
je
roll
test
mov
push
sbb
movsb
push
and
lods
dec
cmp
push
jle
push
push
dec
jecxz
aam
or
push
incl
dec
jne
js
test
int
and
cmp
faddl
and
pop
cmpsb
sbb
sti
jle
imul
push
fwait
aas
or
or
mov
jecxz
and
inc
mov
hlt
test
stc
jmp
push
inc
mov
sub
jmp
adc
mov
stc
leave
jns
xchg
clc
mov
push
jb
or
cmp
mov
lds
mov
push
ds
adc
idivb
gs
push
jl
or
jbe
xor
add
jno
sbb
int
lea
gs
xchg
pop
outsl
popfw
mov
sti
and
inc
and
adc
mov
or
rcl
lock
xchg
inc
ja
jae
mov
call
inc
or
jge
sub
add
sti
jmp
xor
and
repz
arpl
xchg
add
ss
leave
outsl
inc
dec
scas
lock
insl
bound
mov
xor
mov
cltd
lods
push
sbb
movsl
lock
fldcw
pop
adc
dec
sbb
mov
xlat
shl
sbb
fidivs
mov
je
sub
xchg
pusha
add
std
xor
jno
mov
out
mov
iret
and
cmp
lcall
xchg
loop
pop
rcll
sub
in
sbb
imul
movsb
sbb
ret
ljmp
mov
pop
mov
inc
xchg
lahf
insl
push
push
and
sbb
sub
loopne
adc
icebp
sub
mov
lock
fmuls
lahf
adc
mov
cmp
aad
push
rcll
inc
mov
ljmp
lea
push
push
adc
cmc
cmp
xchg
xor
mov
mov
mov
test
addr16
xchg
loope
flds
ffreep
xor
adc
je
push
sarb
mov
aam
lea
xchg
or
scas
daa
test
call
js
add
xor
push
ret
push
mov
stos
push
jnp
out
sbb
sbb
insb
and
mov
add
dec
cs
sub
sbb
jecxz
push
lock
pop
inc
and
sbb
mov
mov
aaa
inc
add
sub
fdivrl
inc
arpl
es
test
mov
adc
xchg
pop
inc
mov
test
testb
xchg
into
sub
add
daa
adc
mov
ds
dec
mov
mov
jmp
adc
call
hlt
jg
vcvtsi2sdl
in
ljmp
push
push
mov
ret
adc
loopne
movsb
lods
fnstenv
or
pop
mov
mov
add
mov
pusha
movsb
test
and
cli
in
pop
push
adc
cmpsl
bound
scas
sbb
popf
andb
popa
jge
pop
mov
sub
mov
inc
std
sub
int
cmp
mov
pop
push
jb
popf
ljmp
sub
shrl
lock
xchg
lcall
sbb
mov
test
lahf
test
je
adc
ja
mov
or
cmp
sbb
lds
fdivrs
pushf
pop
ds
sub
mov
cmpsl
mov
gs
dec
cld
push
dec
and
dec
das
mov
mov
mov
mul
add
inc
inc
flds
jp
imull
leave
cli
cltd
or
add
pop
inc
es
dec
xor
hlt
out
out
in
adc
icebp
outsb
shll
testb
movsb
mov
test
pop
push
dec
lods
adc
cld
lahf
lcall
stos
or
jle
push
xor
lods
and
je
dec
mov
rcl
mov
int3
dec
xchg
fildll
leave
insb
xchg
sbb
ja
imul
and
sbb
int3
outsl
sub
mov
mov
pushl
and
popa
aad
xchg
adc
mov
test
push
insb
in
xchg
ds
pop
push
push
lea
or
les
into
aaa
or
sbb
sbb
arpl
xor
mov
gs
ss
dec
call
jb
xor
xor
in
dec
cli
dec
fwait
leave
popa
xchg
adc
repnz
shll
mov
das
cmpsl
lea
test
mov
pop
xor
cmpl
std
dec
adc
insb
rorb
jnp
fs
cs
mov
sub
sbb
sbb
mov
jb
in
stc
jne
or
shr
mov
xchg
jl
nop
sub
int
lcall
or
mull
inc
into
push
sbb
fsub
fs
gs
shll
clc
sbb
test
pop
mov
sub
cmp
xchg
sti
jae,pt
jle
xor
inc
pop
out
outsb
add
sbb
xchg
lods
scas
or
mov
pop
cld
xor
xor
inc
lds
mov
mov
pop
cmpsl
das
movsl
cmp
adc
arpl
out
lods
xor
or
jnp
daa
push
or
mov
scas
xchg
cmp
les
cld
and
push
mov
daa
pop
dec
mov
cmpsb
fcompl
subl
mov
jb
sti
std
xchg
dec
jnp
fs
test
std
mov
cmp
lcall
jle
fists
clc
repz
js
push
sub
test
sbb
aam
sbb
add
lods
xchg
fldenv
shl
fdivp
xor
dec
lds
cs
xchg
push
inc
cld
mov
movsb
sti
in
lret
fwait
sbb
outsb
loopne
insl
ds
push
aam
testb
sub
sub
xchg
jne
out
js
mov
and
les
jmp
add
and
aaa
lahf
mov
shl
or
cmp
cmpsb
clc
dec
cmp
xor
subl
sub
and
mov
insb
xor
cmp
lret
adc
mov
in
divl
mov
outsl
imul
inc
adc
cmp
inc
adcl
aaa
sahf
jle
xor
inc
inc
mov
pop
add
pop
xor
std
loope
sahf
mov
jb
movsl
pusha
shll
pop
cmc
sti
out
xor
push
cmpsl
adc
inc
xchg
sbb
jmp
popa
roll
fstpl
dec
ds
aam
loope
leave
cs
test
mov
cwtl
stc
aad
pop
mov
out
mov
in
mov
jne
push
flds
jne
mov
adc
adc
fistpl
jle
xchg
pop
dec
dec
and
in
pop
repnz
fucom
enter
jbe
test
and
jns
xchg
out
insl
in
test
cld
shll
dec
outsl
sti
mov
adc
sbb
lock
movsb
pop
rorb
cltd
repz
push
cwtl
sub
pushf
cmp
inc
jo
jbe
mov
mov
mov
sub
jno
cmp
pushf
mov
cmp
adc
cmpsb
ja
dec
mov
dec
jmp
out
cli
enter
dec
push
aas
je
pop
adc
mov
xor
ret
pushf
mov
je
mov
lret
lcall
push
add
test
pop
or
aas
incb
inc
ficoms
jo
arpl
sbb
nop
add
jae
repz
orb
mov
lea
mov
sbb
imul
fdivrl
clc
pop
add
mov
leave
aad
orl
jo
arpl
mov
adc
shr
jo
popf
mov
clc
cmpsl
cli
shll
popf
dec
repnz
mov
inc
pusha
test
scas
sub
xorl
sub
pop
addr16
sub
stos
insl
pop
fdivrl
movsb
mov
fadds
xchg
lods
cmpsl
mov
addr16
test
repnz
ja
push
lret
arpl
mov
jbe
andb
push
sbb
pop
push
imul
inc
jne
sti
sar
push
call
mov
lds
sub
rolb
lea
inc
ficomps
adc
dec
xor
dec
push
sub
adc
pop
repnz
push
sub
rclb
pop
sbb
fistpll
pop
int
out
ja
pushf
mov
jae
inc
xchg
sbb
icebp
mov
jp
push
lds
outsb
pop
mov
in
pop
fmuls
dec
xor
cmp
or
shrl
lds
or
adc
push
leave
repnz
fwait
sahf
push
and
mov
push
fiadds
cmpsl
pop
adc
mov
pop
dec
in
push
hlt
push
lahf
jb
push
cwtl
jno
xor
mov
adc
and
push
test
jmp
add
push
jl
pop
inc
dec
sub
mov
out
loop
ljmp
in
pushl
stos
inc
mov
mov
decb
imul
inc
xchg
fadds
cmp
mov
insb
inc
insl
aam
or
dec
movlps
add
mov
cmpsb
in
in
pop
pusha
pop
mov
or
cmp
repnz
cmc
ret
and
loope
mov
xor
add
mov
inc
mov
mov
sbb
test
push
inc
xchg
int3
xchg
sub
fwait
xor
pop
xchg
push
cmp
cwtl
fwait
in
cmp
outsb
pop
rol
jge
aad
inc
rcll
das
outsl
pushf
ljmp
dec
repz
popf
sbb
icebp
cltd
push
xchg
in
popa
mov
arpl
fsubs
mov
lds
scas
pop
inc
push
es
and
gs
add
dec
jp
cmp
out
dec
arpl
stos
dec
xor
movsb
ret
mov
rcrb
mov
insb
lret
pop
fwait
lcall
pop
xchg
jns
dec
leave
sbb
outsb
xchg
cs
lea
mov
xchg
push
xchg
mov
dec
stc
inc
xchg
movsb
adc
pop
fcoms
push
lret
das
test
lods
movsl
push
arpl
adc
xchg
mov
sub
aaa
enter
test
aam
dec
psubd
ds
ja
inc
jle
test
outsb
add
cwtl
ficompl
imul
mov
dec
dec
add
cld
jmp
hlt
and
mov
xor
xchg
jno
dec
cmp
scas
ljmp
minps
and
arpl
outsl
add
insb
mov
push
jbe
lods
shlb
pop
fiadds
inc
or
int
ljmp
loope
and
cltd
mov
iret
adc
arpl
push
pusha
ffree
test
inc
cltd
push
or
ja
roll
add
stos
int3
fs
stos
push
shrl
jbe
mov
icebp
xchg
rcr
repnz
mov
mov
push
jg
out
push
ds
xor
leave
lahf
xchg
test
xchg
scas
push
jno
lret
jbe
mov
xchg
mov
inc
addl
mov
mov
movsb
mov
add
jl
stc
xor
loopne
dec
adc
cld
out
push
rdpmc
out
dec
daa
mov
sbb
ljmp
mov
in
cwtl
ljmp
jnp
mov
out
and
rcrb
cltd
pop
push
aad
sub
pop
int3
dec
test
aam
cli
roll
mov
push
add
xor
daa
fneni(8087
aaa
jne
push
dec
bound
push
stos
adc
dec
push
testl
pop
xchg
jno
pop
adc
out
fwait
pushw
pop
rolb
push
lcall
pop
sbb
mov
mov
push
push
repnz
frstor
stc
mov
push
imul
test
fistl
loop
or
xchg
scas
es
xor
hlt
inc
push
das
loope
sbb
popf
push
cmc
push
outsb
stc
xchg
lods
in
mov
loop
addr16
add
add
mov
inc
mov
mov
inc
cli
inc
les
inc
fcompl
ja
push
add
shrl
push
in
sub
loope
shll
rol
sbb
lahf
ljmp
sbb
xorb
test
adc
lcall
loop
add
outsb
dec
fiaddl
sub
jb
fists
xchg
add
jp
loopne
mov
jo
fistpl
std
int3
test
mov
mov
scas
pop
insl
divl
jnp
cmp
push
test
xor
lret
ss
loope
cmp
adc
pop
mov
movsb
add
cmpsl
jmp
daa
lds
jge
lods
mov
add
mov
int
aaa
adc
test
int
in
sub
sbb
add
inc
jmp
fldl
mov
imul
imul
jnp
insl
sub
inc
mov
pop
or
bound
xor
or
inc
pushw
or
lods
jge
fisttpll
cli
imul
adc
jne
out
mov
cmc
js
movsl
sub
dec
inc
rol
push
sbb
flds
aad
aaa
std
stos
sub
mov
jb
fsubs
popa
fld
test
sahf
push
mov
testl
push
popa
imull
sbb
cmc
popa
mov
out
ja
stos
xchg
pop
shll
scas
je
fbld
out
jns
jmp
sahf
rorl
in
sbb
xchg
mov
bound
int3
sub
inc
pop
mov
fwait
push
repnz
jp
pop
in
repz
invd
mov
dec
das
and
pop
mov
sbb
movsl
push
jne
aad
ret
mov
pushf
mov
xor
jp
icebp
and
pushf
or
pop
mov
pushf
jo
fs
lods
insw
xchg
jmp
sahf
in
or
ret
mov
addr16
imul
lds
inc
mov
and
fsubp
jne
test
out
inc
push
xchg
outsb
sub
mov
mov
dec
mov
imul
in
mov
mov
cmp
jne
pusha
lahf
dec
inc
lea
cmpsl
push
pop
call
out
jecxz
adc
add
push
ja
sub
shlb
lcall
movsb
jbe
movsb
pop
lods
add
notb
scas
push
mov
sbb
pause
fstpt
xor
repnz
xchg
mov
cmp
test
in
into
icebp
jo
ljmp
pop
xor
lea
jg
in
loop
sysexit
inc
test
xchg
loope
fisttpl
enter
out
aam
mov
push
add
mov
xor
popl
in
push
xor
mov
pop
js
inc
aaa
and
inc
pop
int
repz
sbb
sbb
pusha
jnp
xor
pop
sbb
push
xor
fs
or
add
cmp
mov
insl
fcmovnbe
sti
fwait
hlt
xchg
addb
out
push
fisubrs
insl
imul
int
dec
ret
xchg
lock
fs
xchg
pop
push
test
shl
add
cmp
mov
daa
orb
lahf
cmp
lret
icebp
push
into
jp
jle
fwait
enter
dec
fstps
lea
repnz
cmp
dec
int
inc
scas
jg
imul
jb
mov
js
jmp
push
sub
jge
xor
jnp
mov
ds
popa
imul
out
test
mov
outsb
or
inc
ret
adc
xchg
adc
xor
femms
xchg
add
xchg
xchg
jae
shrl
insl
lds
shlb
pop
orb
sub
mov
aam
xchg
test
lcall
out
gs
sub
sti
aaa
push
cmp
pop
adc
mov
popa
push
ret
push
push
int
scas
leave
imul
jle
inc
dec
and
push
aad
xor
and
push
cmp
in
adc
insb
aad
roll
cmp
inc
mov
rcrb
xor
cmpsl
add
arpl
idivl
stos
out
loopne
mov
or
das
jp
cs
aam
inc
cmpsl
add
mov
push
cmp
add
xor
mov
bound
and
orl
stc
push
inc
imul
jae
jmp
loope
mov
scas
jbe,pt
ja
adc
push
and
ficoms
push
xor
mov
sbb
and
outsb
jne
rclb
out
jae
mov
sub
cmp
cmpsb
dec
cmpl
loop
movsl
ffreep
dec
es
dec
jge
fbstp
lock
push
cmp
in
jmp
ret
dec
data16
in
pop
adc
mov
and
mov
sbb
stos
push
add
xchg
loop
cwtl
push
in
cltd
jmp
cmp
sti
xlat
add
lds
xchg
sti
fisubs
cmpsl
sahf
enter
scas
fs
xchg
mov
fimull
std
pop
mov
repz
sti
fsubl
cmpsl
rorb
push
inc
xor
mov
bound
out
mov
push
add
sub
xor
popa
mov
ja
xchg
push
push
add
popa
sti
cmpsl
fwait
cmpsl
lock
push
push
leave
jg
cmpsb
and
cld
mov
sbb
loopne
dec
lret
add
xchg
xor
mov
add
das
lea
mov
lds
cltd
daa
push
mov
ficompl
inc
orl
dec
call
xchg
mov
insb
enter
in
pop
inc
add
cmp
and
in
cwtl
push
es
leave
lret
jecxz
pop
jnp
rclb
fisubrs
repnz
pop
mov
push
jne
push
push
push
bnd
in
xchg
cmp
pusha
add
inc
hlt
test
push
stc
and
xchg
lret
mov
cli
das
stc
mov
in
ret
icebp
adc
add
repnz
aas
mov
js
cmc
xchg
xor
into
clc
push
sti
fnstenv
lods
mov
dec
or
addb
xor
cltd
cmp
adc
cs
and
test
push
or
mov
in
push
and
clc
pop
in
negl
inc
fs
sub
xchg
sub
cmp
push
in
inc
lcall
sti
mov
jnp
mov
adc
into
xchg
fmull
push
es
and
mov
rolb
repz
mov
or
push
push
les
test
xor
aaa
std
sub
mov
cltd
fs
pop
movsb
sbb
xchg
mov
out
into
ljmp
or
icebp
lret
lds
pop
inc
ret
and
jns
test
mov
mov
call
sbb
fcoml
push
inc
xchg
fistpll
ja
cli
pop
xor
xor
out
push
fs
iret
pusha
jo
mov
xor
cld
mov
mov
shll
hlt
arpl
xchg
push
cmc
push
je
mov
leave
xor
fbld
dec
dec
lea
and
lock
addb
ret
dec
xor
cld
pop
push
pop
adc
push
sub
ljmp
sbb
mov
inc
aaa
js
test
sbb
xor
pop
loopne
and
out
jge
pop
inc
cmp
ret
push
int3
enter
cmpsb
sbb
jns
js
out
std
lods
inc
push
jle
in
xchg
push
adc
lds
pushl
sbb
pop
or
mov
jo
sub
mov
cmpsl
xchg
mov
sub
mov
pop
testb
jbe
mov
and
lret
mov
imulb
push
popa
dec
inc
mov
mov
mov
cmpsb
aam
pop
dec
sbb
test
nop
push
xchg
out
es
movsb
ret
pop
jb
jmp
and
fwait
scas
fdivrl
stos
and
lock
ret
add
fwait
popf
xchg
xchg
jb
mov
dec
ffree
mov
cltd
xchg
and
arpl
and
data16
cmp
aas
ljmp
lcall
cmp
xchg
adc
or
fldenv
bound
lahf
jbe
es
jle
imul
jnp
fs
lods
push
in
jle
dec
inc
movsl
idiv
push
mov
lcall
push
js
cmp
ret
sbb
adc
les
fisubs
or
bound
loopne
jl
inc
out
out
dec
rolb
scas
sbb
shr
cmp
cwtl
jp
jle
mov
sbb
cld
sub
and
mov
add
jae
pop
and
insb
lods
dec
xchg
std
fcomi
xchg
pop
shrb
push
hlt
mov
jmp
xor
rcrl
jbe
pusha
shr
xlat
aam
mov
pop
push
les
cmp
mov
lock
dec
imul
mov
dec
cld
cmpsb
mov
push
mov
es
pop
notb
mov
lock
push
push
loopne
mov
mov
mov
movsl
adc
imul
ljmp
mov
enter
idivb
scas
push
xor
sub
jg
decl
mov
dec
jnp
clc
sahf
pop
sbb
dec
ret
push
aas
mov
push
dec
lds
or
movsl
ds
add
insl
insb
lea
push
out
outsb
mov
mov
mov
jae
lods
jae
pop
lret
rolb
fistps
sbb
inc
into
sub
mov
adc
xchg
enter
add
cwtl
or
leave
xor
cmpsb
inc
cmp
push
mov
sarl
popf
push
enter
pop
or
shlb
lock
jmp
bnd
test
cmpsl
int
pop
jb
scas
arpl
in
cltd
xchg
rolb
loop
enter
xor
adc
pop
mov
fstl
jno
mov
in
repnz
pop
mov
outsl
mov
jge
outsl
outsb
sahf
cmp
loopne
aas
add
jmp
sub
std
mov
stos
mov
shll
pop
int
xor
fdivl
and
shlb
inc
pop
jg
insl
pusha
and
cli
pop
testl
sub
movsl
xor
pop
mov
cmp
sub
rcr
into
into
jne
icebp
jns
scas
iret
xor
mov
daa
adc
lret
pop
inc
adc
arpl
pusha
jl
jno
rcrl
aam
dec
cmp
or
push
sbb
and
jmp
mov
aaa
int3
jmp
int3
sbb
popf
aad
cmc
dec
mov
and
inc
fiadds
xchg
sub
push
pop
mov
je
jns
adcl
push
sub
jmp
sub
movsb
cmc
jno
cli
int
ss
push
cmp
push
xchg
add
fisttps
sbb
pop
adc
jge
insl
push
lret
dec
sbb
in
pop
in
insl
push
dec
mov
xchg
inc
pop
cmpsb
dec
jno
pop
cli
lds
stos
mov
andl
pop
xchg
mov
ficomps
xor
inc
rol
adc
mov
hlt
lcall
add
and
mov
fisttpl
mov
cmpsb
jno
pop
add
mov
or
mov
cmp
es
push
cmpsl
dec
out
xlat
cmpsl
xchg
inc
sbb
in
adc
mov
cmc
imul
js
sbb
shr
lock
jecxz
cmc
add
fwait
sub
jp
jg
scas
andl
inc
adc
xor
rolb
cmp
sbb
lret
and
xor
and
aas
cmp
mov
idivl
or
notb
bound
add
and
inc
inc
popa
lret
stc
int
out
pop
xor
js
and
pop
idivb
mov
sbb
push
add
pop
jae
leave
fsubrp
sub
dec
adc
das
in
fisttpl
fstps
or
sbb
add
cmp
xor
mov
mov
test
sub
addb
dec
imul
fbld
pop
sub
cmp
pop
fdivr
adc
leave
mov
push
in
pop
scas
cwtl
aas
mov
xchg
test
cmc
addb
push
ljmp
mov
and
repnz
movsl
add
das
add
mov
pop
lock
test
popf
xchg
cmpsl
xchg
int3
je
pop
lds
pop
pop
aam
jnp
cmc
in
adc
lret
xor
loope
or
xor
test
ja
inc
adc
or
or
and
push
in
je
stc
mov
fisttps
fstpl
adcl
jnp
add
adc
das
stos
inc
jnp
in
mov
xchg
ljmp
xlat
int3
or
pop
pop
mov
rcll
mov
or
arpl
or
scas
test
mov
xor
clc
loopne
imul
sbb
es
push
insb
add
or
xchg
stc
xor
mov
and
mov
ret
das
jns
mov
popf
xor
pop
or
pop
ljmp
jbe
xor
push
push
cmp
mov
ret
sbb
xlat
pop
mov
rorb
dec
das
lret
in
movsb
insl
push
iret
movsl
cwtl
xchg
enter
sbb
in
shrb
pusha
push
mov
mov
clc
test
clc
mov
test
pop
xchg
ret
loopne
xor
les
mov
out
mov
mov
aaa
cmp
inc
sbb
sbb
mov
pop
cmp
sar
dec
pop
std
pop
or
fnstcw
fcompl
push
dec
sbb
adc
jnp
fxch
inc
lret
mov
push
mov
stos
scas
mov
scas
pop
push
jns
dec
popf
adc
dec
test
scas
js
sbb
cwtl
sub
pop
bound
jnp
out
mov
idivl
cmpsl
jne
int
adc
lods
jae
add
dec
jno
andb
imul
cmp
lret
cltd
loop
pop
in
pop
outsb
lds
fwait
cs
mov
xor
popa
scas
fucom
cmp
dec
jne
ret
out
cmp
fwait
test
clc
sbb
clc
or
push
inc
jge
or
shrb
iret
cmp
repnz
aam
mov
xor
mov
repz
fwait
or
mov
mov
cwtl
mov
mov
popa
int3
outsb
cmp
iret
or
and
inc
test
mov
pop
nop
mov
repz
cli
xor
mov
mov
xor
jg
dec
inc
jle
mov
jo
mov
sub
imul
cmp
pusha
psubsb
lds
add
or
icebp
mov
mov
lock
or
mov
mov
loope
cmpsb
insl
or
and
mov
dec
shrb
test
adc
mov
dec
sub
stc
shl
int
movsb
push
clc
mov
scas
add
ss
jbe
icebp
iret
xchg
sub
faddp
mov
mov
and
mov
notl
xor
xlat
ret
das
pop
je
shll
pop
jb
stos
pusha
pusha
stos
cmp
aas
and
popf
and
push
and
int3
es
loope
sbb
stc
adc
addb
cmpsb
mov
push
inc
jle
jno
hlt
repnz
add
xor
lret
and
adc
outsl
xlat
aas
sbb
inc
add
es
mov
insb
hlt
cld
and
mov
out
jp
faddl
mov
add
pop
sub
into
punpcklwd
push
mov
test
faddl
int3
orb
mov
dec
jae
inc
pop
lret
clc
scas
mov
stos
loope
imul
icebp
test
mov
mov
iret
adc
hlt
push
ds
push
xchg
mov
dec
and
scas
insb
lds
mov
pop
sub
ficomps
jmp
clc
add
jbe
pop
dec
mov
jg
sti
inc
inc
adc
adc
fcmovne
movsl
jb
mov
cli
xchg
mov
fcmovnu
xlat
sub
enter
pop
add
xchg
push
lods
shrl
lds
dec
out
sub
cld
lret
dec
sbb
in
lds
movsl
dec
sbb
mull
pop
or
ss
dec
outsl
sub
mov
test
jae,pn
nop
xor
sub
or
lahf
icebp
xchg
xchg
dec
or
jo
pop
loop
into
add
fbld
or
jno
jg
scas
jmp
gs
mov
into
out
cmp
lcall
fldenv
test
dec
xlat
gs
call
xor
cwtl
movsb
jae
repz
dec
scas
mov
xchg
dec
leave
push
pop
int
mov
test
xor
jae
aaa
test
int3
pushf
and
fbld
sbb
scas
lret
or
inc
enter
out
enter
cmp
insl
push
push
sbb
loop
mov
call
les
or
call
imul
cmovae
xlat
mov
hlt
and
mov
hlt
xchg
push
movsb
or
jg
fstpl
rcl
aam
imul
je
adc
dec
scas
and
fstl
push
enter
inc
fnstenv
repnz
cmp
or
push
imull
orb
mov
lock
xor
xor
aas
je
pop
ja
enter
insl
daa
adc
icebp
scas
mov
inc
popa
and
mov
jmp
push
imul
pushf
push
stc
xchg
xor
mov
int3
iret
popf
jb
jo
pusha
ss
nop
push
pop
cmpsb
bound
adc
or
mov
xlat
pop
adc
addb
push
lret
sbbb
and
xchg
mov
sub
cli
xchg
sbb
mov
into
jne
sbb
or
hlt
inc
sub
ds
lret
cld
test
mov
out
popa
cld
les
xor
xlat
mov
or
cmp
xor
mov
push
pusha
lea
clc
jl
adc
jp
out
int
pop
test
sbb
cmpsb
adc
cli
fisubrl
or
aam
stc
sti
xor
loopne
test
mov
or
cmp
aad
xchg
sbbb
aas
xor
cmpsl
or
lea
add
and
xchg
xchg
loope
fcmovbe
mov
mov
pop
mov
push
mov
lock
mov
mov
or
divl
sbb
movsb
jl
lea
adc
dec
push
mov
jo
pop
pop
div
testb
and
test
and
jno
add
psrad
cmp
gs
push
push
mov
movsl
cmp
aad
ds
movsb
xor
jle
cli
xchg
lcall
test
cmp
std
jns
stc
gs
cmp
adcb
sbb
cltd
push
adc
clc
rcrb
mov
pop
daa
pop
fcompl
sub
insb
xchg
test
jns
sub
xchg
mov
adc
add
jmp
mov
and
sahf
push
sub
mov
ljmp
mov
cli
add
pop
sub
ja
inc
lea
push
dec
addr16
jecxz
pop
mov
xor
xchg
mov
sbb
call
ret
idivl
fildll
mov
addl
lds
jecxz
icebp
lods
ss
call
std
jae
xchg
mov
shlb
scas
shl
fidivl
xchg
dec
lds
repnz
xor
cvttps2pi
push
aaa
daa
or
dec
mov
add
iret
inc
addr16
pop
push
loop
call
jbe
jo
loopne
jecxz
push
jle
mov
add
pop
mov
and
pusha
int
mov
inc
fsubrl
xchg
dec
dec
xor
leave
out
adc
adc
add
or
push
hlt
andb
stc
or
push
adc
pop
mov
add
xchg
jge
sahf
xchg
cmpsb
xchg
mov
mov
sub
or
call
orb
fildll
inc
outsb
mov
adc
fwait
scas
std
les
and
pop
fcmovb
mov
iret
sub
pop
mov
and
leave
mov
and
aas
popa
and
inc
pusha
jl
decb
cmp
mov
push
loop
sbb
pminsw
xor
das
mov
lock
sub
push
jle
stos
cmp
add
jp
mov
cmp
jnp
and
push
imul
cmpsb
xor
addr16
push
int
sub
jae
xchg
bound
nop
xchg
mov
pop
xor
mov
push
ljmp
daa
cmc
push
shlb
out
loop
dec
es
mov
pop
ds
dec
in
mov
scas
popf
push
add
inc
sub
int
adc
dec
popf
cmp
data16
mov
mov
sbb
pop
push
dec
popl
js
push
das
dec
in
push
push
cs
les
call
xchg
dec
dec
cwtl
push
cli
cmp
xchg
sub
jbe
jmp
jle
rclb
xor
add
shll
pusha
ret
xor
aad
test
scas
aaa
shl
dec
push
push
adc
xor
int3
dec
jecxz
lcall
imul
cmp
or
scas
and
adc
and
xchg
xor
arpl
push
pop
stos
mov
imul
out
loope
mov
dec
shrl
adc
shll
imul
bound
jmp
xor
mov
push
mov
stos
jb
ds
add
repnz
mov
insb
cwtl
adc
dec
xor
test
inc
test
test
pop
push
mov
addr16
jmp
insl
in
jns
stc
in
cs
movb
inc
sub
sbbl
mov
bound
outsb
or
sub
mov
int3
icebp
push
jge
enter
and
sbbl
xchg
repnz
hlt
fmull
jno
les
mov
and
pop
push
dec
jb
cmp
jl
dec
inc
cmp
adc
mov
mov
outsl
iret
mov
cld
jae
in
xlat
sub
ja
jb
sbb
out
sahf
pop
das
ret
inc
and
cltd
fnstenv
outsb
jae
mov
sub
mov
test
sbb
gs
inc
lea
out
mov
jnp
jo
sbb
pop
loope
mov
xchg
inc
lods
and
call
andl
push
mov
stc
mov
mov
jbe
inc
dec
push
fsubl
adc
sbb
ret
repnz
pop
test
sub
push
dec
jne
push
ds
jg
xchg
jne
insb
dec
xorb
or
pop
mov
mov
in
push
cwtl
or
or
lods
outsb
movntq
lcall
push
enter
insl
andb
and
daa
aaa
mov
pop
lods
stos
call
cwtl
adc
mov
imul
dec
cmp
add
cltd
jg
fiadds
int3
dec
fistl
rolb
out
add
leave
mov
in
adc
bound
dec
test
out
das
ficoms
clc
xorl
sbb
cmc
shrl
jg
arpl
adc
mov
fwait
negl
mov
lea
push
sbb
xor
xchg
mov
repnz
int
mov
test
jnp
punpcklwd
push
jno
pop
or
dec
xor
xor
dec
pop
or
dec
fcmovu
cwtl
loop
divl
lds
dec
jbe
sub
sub
aas
ss
and
xor
test
or
mov
pop
movsb
dec
data16
js
push
mov
inc
and
faddl
add
jmp
loopne
mov
or
xor
nop
fisttpl
pop
pop
push
iret
sti
cmp
nop
sub
add
in
and
leave
pop
jo
dec
xchg
cmp
test
xchg
loop
mov
adc
push
in
pop
pop
fld
test
mov
or
loop
test
mov
js
adc
bound
inc
movl
in
in
fimuls
adc
or
or
dec
and
adc
fsubl
xchg
push
jle
xor
out
mov
or
or
into
inc
out
in
popa
dec
inc
or
cld
rolb
clc
lcall
cltd
xlat
loope
mov
cli
leave
jmp
dec
sbb
call
or
addb
mov
popa
sti
lret
lret
add
scas
push
or
xchg
cmovs
loope
push
dec
jns
xor
iret
xor
adc
ja
arpl
scas
lcall
rcll
cs
xor
ret
push
xchg
add
jmp
aad
push
lret
xchg
pop
movsb
lret
push
clc
es
addr16
out
shrb
cmp
iret
shll
sbb
jge
or
xor
cld
mov
rorb
shr
out
mov
cmc
in
addr16
cmpsl
leave
or
xchg
mov
pop
xor
push
cmp
inc
xchg
cmp
dec
mov
repnz
clc
mov
dec
cmp
test
out
mov
xchg
out
outsb
cmpb
sbb
movsl
pop
in
dec
iret
pop
test
inc
ja
cli
add
lret
das
cmp
jge
push
sbb
dec
test
inc
jmp
imul
mov
pushf
ss
inc
add
mov
insl
mov
sbb
sbb
and
adc
push
sbb
std
cli
sub
aaa
dec
xchg
dec
shl
mov
or
in
sub
ret
enter
mov
movsl
lds
lds
pop
lods
out
jbe
mov
in
insl
xchg
or
aaa
scas
dec
popa
adc
mov
mov
inc
mov
fsubl
jl
scas
add
and
lock
rcr
lret
aad
lods
xchg
xchg
ret
cmpl
repnz
es
jmp
lock
sub
dec
rolb
mov
out
push
inc
jbe
push
icebp
insb
adc
in
roll
scas
push
inc
ret
mov
adc
sub
cmpsb
in
mov
cltd
mov
out
rcrl
dec
xchg
mov
mov
pop
cs
subl
xor
pop
mov
into
nopl
cwtl
stos
mov
push
pop
nop
jae
sub
sbb
xorl
std
mov
fpatan
sub
sub
inc
scas
in
and
mov
xchg
lds
pop
sub
xchg
cmpsl
movsl
mov
icebp
in
cmpsb
cmpsl
dec
xchg
adc
pop
stc
and
mov
pop
mov
sti
inc
cld
jne
inc
hlt
sub
xchg
out
loopne
sub
push
add
mov
pop
repnz
rorl
shlb
ja
outsb
sbb
add
out
out
cwtl
mov
adc
mov
xchg
icebp
adc
test
lds
in
std
fbstp
pop
out
or
push
xchg
iret
fistl
loop
push
andb
sbb
mov
sub
outsb
icebp
cltd
xchg
xchg
xchg
insb
ss
add
rcrb
into
out
ljmp
scas
pop
and
out
lcall
in
sbb
inc
lea
enter
lods
mov
push
cmpb
les
pushl
push
pusha
add
lods
arpl
in
movsb
aaa
mov
mov
jmp
imul
rcrl
mov
sbbl
jg
dec
inc
pop
cmpsb
mov
xchg
les
push
jge
in
mov
mov
repz
xchg
and
into
or
cmc
lds
cli
mov
cmp
aas
or
sarl
das
xchg
adc
push
pop
loop
xchg
pop
data16
dec
jl
pop
movsb
into
insl
cmc
popl
enter
mov
div
out
dec
nop
stos
scas
ss
test
mov
inc
xorl
jmp
jb
lret
cs
arpl
test
lret
jbe
jmp
sbb
add
pop
imul
inc
inc
test
add
push
rorb
add
aad
cli
imul
or
mov
psrlq
outsb
xchg
cmpsl
test
lods
sbb
ja
popa
push
call
lods
pop
sbb
pop
lea
or
mov
hlt
out
pop
ret
lahf
jno
leave
fldt
aad
lods
mov
outsl
sub
xor
xor
test
or
cmc
daa
and
pushf
clc
lods
psadbw
aad
out
hlt
dec
cmp
out
out
sub
cmc
jbe
in
jge
xchg
inc
sbbl
xor
push
ret
stc
test
jmp
dec
ror
jnp
leave
adc
scas
xor
and
mov
adc
cmpsl
or
adc
out
xchg
push
add
lret
push
push
mov
ss
nop
dec
pusha
fs
pop
adc
outsl
popf
push
les
int
pop
push
cld
repnz
mov
mov
fadds
inc
adc
pop
outsb
out
xchg
push
jmp
pop
and
push
push
cld
mov
and
lds
es
jne
ja
test
call
cmpsb
push
test
mov
dec
rcl
mov
push
mov
loopne
lods
std
hlt
imul
cli
jl
leave
cs
lea
mov
inc
fildll
jnp
test
dec
aas
mov
faddl
dec
xor
cmp
shlb
add
xor
dec
mov
push
adc
push
popa
adc
pushf
mov
mov
call
mov
ljmp
or
idivb
cmp
push
int3
ficompl
sbb
jbe
in
xchg
push
add
mov
push
pop
lods
pop
and
and
cltd
dec
lds
inc
rcrl
mov
fsts
jb
sub
push
lock
cs
add
minps
cwtl
mov
cmpsl
pop
add
ret
test
and
sub
dec
mov
mov
es
dec
lods
js
out
dec
mov
cmp
cmp
shrb
jmp
fcmovbe
loopne
mov
mov
mov
pop
jmp
mov
in
in
inc
andb
shll
ja
jb
mov
push
fstl
mov
xor
ret
push
js
mov
add
bswap
cmp
jge
sbb
stos
rcl
in
ss
dec
mull
test
es
add
js
loope
push
cmpb
insb
lods
inc
pop
mov
mov
cmp
repz
hlt
fisubs
jle
test
ljmp
stos
sbb
in
jg
mov
movsl
add
out
repz
mov
daa
add
mov
lods
add
fwait
cmp
sar
jae
push
gs
xchg
inc
into
rolb
inc
cmp
and
in
xchg
cs
sarl
mov
das
fdivrs
shl
out
in
mov
loop
push
sbb
push
loopne
inc
outsb
stos
daa
adc
jecxz
pop
mov
mov
adc
mov
arpl
rolb
div
aaa
xlat
in
nop
call
ja
lods
push
les
lret
mov
shlb
adc
inc
dec
dec
or
es
lret
adc
mov
jp
shl
jns
push
inc
xor
fs
adc
xor
sub
outsb
sub
iret
cs
adc
sbb
gs
jle
adc
pop
adc
or
movsl
mov
or
mov
xchg
cmp
leave
add
add
rcll
push
add
imul
rclb
shrb
ret
ret
cmp
fistpl
jno
xchg
xor
pop
mov
cmpsb
or
lcall
lret
gs
inc
cmp
leave
ja
mov
fdivs
lods
cmpsb
ret
mov
test
out
jbe
and
cltd
pop
ret
or
adc
loope
test
subb
call
sub
adc
push
fs
je
push
xchg
fbld
in
xchg
jno
dec
enter
xchg
rclb
mov
sarb
test
dec
call
les
ljmp
pushf
or
jmp
inc
call
data16
cwtl
xchg
fldcw
lea
movsb
push
test
sti
into
cmpsl
dec
iret
add
cmpsb
mov
jp
in
or
jo
stos
rcll
das
push
aaa
sbb
xchg
jns
cld
mov
out
rolb
xlat
bnd
ret
dec
mov
sbbl
add
fisubrl
lcall
ret
sbb
inc
stos
outsb
movsb
and
lcall
jl
es
testb
pop
ljmp
imul
push
sub
mov
punpckhwd
cmp
add
fwait
popf
xchg
test
loope
xchg
pop
popa
pop
cltd
jmp
adc
xchg
hlt
stos
cld
adc
jecxz
push
daa
add
mov
push
pushf
hlt
les
cwtl
cltd
popa
scas
sti
leave
sbb
push
sub
sub
mov
or
mov
js
insl
aas
je
mov
inc
in
pusha
call
ret
dec
push
lods
lret
movsl
jecxz
push
fsubrl
sbb
mov
mov
mov
pop
cmc
gs
cmp
popf
aaa
dec
jg
sub
or
in
cwtl
dec
icebp
jmp
mov
cmp
pop
nop
or
pop
jmp
mov
nop
push
push
push
mov
adc
xor
subl
clc
arpl
leave
call
pusha
cmp
gs
add
cmp
or
pop
rcrl
pop
push
xchg
cmpsb
pop
jae
mov
add
sbb
mov
pop
lds
dec
mov
fsubl
cmpsb
lret
push
pushf
inc
pop
cltd
pusha
testb
sub
scas
cmp
push
jbe
add
mov
mov
mov
mov
rolb
sub
inc
xchg
sti
lea
je
jecxz
mov
and
add
mov
in
into
cmp
xor
jns
fcomi
push
pop
cmpb
stos
dec
push
xchg
stos
mov
testb
mov
push
test
push
shlb
out
popa
fstps
dec
hlt
sub
cmpxchg
xor
mov
shlb
push
mov
fisttpl
cwtl
popf
std
fld
mov
ret
jp
lret
mov
push
mov
sbb
push
fisubrl
dec
pop
mov
adc
sub
int3
cmp
cmp
jl
and
cmp
imul
push
sahf
sub
sbb
mov
cmp
test
and
lea
jp
daa
add
es
into
int
divb
incl
cmp
dec
mov
enter
mov
fimuls
or
and
stc
sbb
aam
mov
das
xchg
pop
mov
dec
pop
jnp
mov
push
adc
movsl
sbbb
xchg
inc
setl
pop
jb
and
sub
out
cmp
dec
and
add
push
dec
or
jbe
push
nop
rcll
xchg
insl
sub
xor
mov
xchg
fwait
mov
into
hlt
mov
test
insl
imul
sub
dec
jo
xchg
mov
cmc
shlb
mov
xorb
aaa
cmp
out
stc
and
mov
insb
stos
mov
add
rolb
jne
iret
jl
scas
mov
inc
push
imul
inc
test
add
aaa
mov
dec
ds
mov
cmc
scas
mov
xchg
cmp
dec
pop
jmp
push
pop
loopne
int3
or
pop
mov
cltd
cltd
icebp
jo
adc
xchg
mov
out
aaa
jo
adc
and
popf
xor
ljmp
jae
pop
ret
fbstp
insb
fistpl
mov
imul
mov
add
adc
add
mov
mov
test
cltd
xor
push
jp
dec
sub
jbe
test
mov
cmc
dec
leave
into
pushf
sarb
pop
pop
lods
dec
adc
imul
mov
adc
pushf
xchg
and
shrl
push
push
ds
inc
popf
inc
sub
sbb
inc
cmpl
into
lods
aaa
and
xchg
pop
mov
lahf
and
jecxz
subb
imul
in
xchg
ja
fstpt
icebp
push
push
mov
mov
mov
sub
cs
mov
ret
hlt
rorb
iret
dec
cmp
aam
xor
int3
mov
nop
insb
pop
cmpl
push
dec
cmp
int3
mov
sar
xor
mov
into
aas
fwait
push
popf
jg
and
adc
xor
push
mov
mov
in
push
test
stos
xor
mov
mov
jno
ljmp
add
loop
push
jns
mov
sarl
mov
icebp
cmp
popf
inc
xchg
jne
and
sub
mov
inc
adc
fisubs
add
lods
int
dec
pop
mov
sbb
add
pop
sub
std
jmp
clc
mov
fwait
jne
cmpsb
push
pop
movsl
dec
and
push
dec
pop
jp
loope
inc
xor
push
popf
push
dec
inc
push
jne
iret
mov
int3
mov
and
out
and
sbb
mov
xor
stc
sbb
mov
jnp
incb
jecxz
xor
or
mov
xchg
push
pop
cmp
arpl
dec
mov
stc
xchg
or
int
scas
dec
aaa
adc
mov
jp
xor
push
rolb
add
lock
and
jle
jne
loopne
lods
pop
bound
inc
pop
pop
lcall
push
jle
jbe
sahf
in
cmp
jge
jns
orl
pop
jo
mov
test
mov
loop
pop
movsl
arpl
xchg
jmp
jb
add
push
iret
movsb
jle
subl
mov
cmp
ficomps
cmc
aaa
je
sbb
repnz
and
jg
jno
loop
decl
sub
pusha
jno
lahf
lea
popa
sub
outsb
orl
add
push
mov
mov
andb
jmp
movsl
dec
mov
rorb
fidivl
adc
lea
sub
jl
ret
test
cmpsb
ds
fnstsw
mov
ja
mov
inc
inc
es
pop
das
shrb
or
jp
inc
fmulp
inc
sub
ficoml
fs
sbb
push
pop
mov
sbb
jle
jecxz
shl
xchg
pop
xchg
mov
imulb
push
subl
adc
stos
xor
cmp
repz
push
pop
lds
je
or
adc
jp
js
xor
fdivs
sub
es
sub
ret
or
adc
pop
data16
xor
pop
add
jns
fwait
das
notl
lret
xor
fistl
std
insb
mov
clc
xchg
int3
or
int3
cmp
mov
out
idiv
inc
pushf
arpl
inc
int3
and
clc
adc
adc
pop
inc
mov
pop
push
aad
mov
cmp
into
push
cmp
sbb
aas
pushf
fadds
jbe
cmp
add
xorb
mov
in
push
mov
movsl
or
sbb
xchg
jecxz
and
pop
dec
mov
jmp
cmpsl
cmp
xchg
inc
push
sbb
and
test
jl
fcos
lret
repnz
es
std
sbb
sub
inc
and
push
loop
hlt
mov
test
lret
loopne
mov
dec
or
adcb
lea
popa
mov
sbb
cmp
ljmp
ret
lock
scas
mov
push
movsl
and
ja
mov
cmpsl
hlt
ret
insb
fadds
cltd
das
aam
es
mov
adc
xchg
pop
push
aaa
ss
repz
aad
and
jb
push
frstor
pop
je
sbb
stos
mov
xchg
mov
pop
cmp
mov
pop
popl
test
mov
add
cmpsl
call
in
jnp
scas
xor
mov
fstl
mov
and
adcl
aas
xlat
into
fimull
inc
jae
outsl
pop
ficoml
cltd
xor
add
add
push
xchg
mov
inc
mov
add
or
stc
cwtl
in
cmpsb
sub
addr16
sbb
dec
dec
aam
jl
cmp
jecxz
sbb
adc
mov
int3
xorb
std
jg
or
test
xchg
jge
in
ror
les
mov
ret
pop
outsl
xor
jmp
cwtl
mov
cltd
aad
push
js
mov
fistpl
mov
or
sarl
add
cmp
push
lea
and
push
or
lds
das
push
and
sbb
inc
xchg
dec
pop
xchg
pushf
enter
dec
loopne
sub
xor
mov
sub
icebp
loop
xor
inc
jecxz
leave
into
ljmp
inc
push
insb
rcr
leave
mov
bnd
inc
adc
or
adc
jne
rorl
pusha
cmp
pushf
mov
mov
mov
les
mov
xchg
sub
mov
pop
and
out
cmp
ss
xor
xor
mov
pop
push
mov
xor
aaa
xchg
sub
sub
test
or
insl
inc
mov
outsb
int3
repnz
jns
adc
sub
fcomps
mov
cmpsl
addr16
mov
aaa
out
fsubrl
sbb
jne
jo
sarl
loopne
or
jbe
pop
sub
and
leave
js
in
stc
mov
jmp
add
sbb
lahf
ljmp
aas
dec
nop
stos
lea
inc
adc
hlt
jb
push
or
mov
or
push
jle
add
or
jae
mov
jmp
and
push
mov
mov
mov
sub
push
iret
jnp
fs
enter
shrl
cmpsb
push
into
xor
mov
dec
pop
mov
xchg
je
loop
mov
push
xchg
fs
arpl
mov
jl
scas
adc
add
addr16
or
cmp
dec
outsb
xchg
fstl
fimuls
add
or
pop
add
aas
push
xchg
sbb
fs
or
xchg
adc
add
jbe
inc
out
iret
in
js
xor
mov
incl
dec
xchg
and
cmp
lods
ret
out
sti
jnp
lcall
jno
enter
xlat
xor
mov
cmp
add
xor
lcall
xchg
rcrl
std
xor
jo
jecxz
mov
mov
jmp
adc
sar
mov
pop
mov
xor
or
xchg
cli
lock
icebp
mov
sahf
or
pop
sarb
js
fsubr
ljmp
cwtl
pop
push
inc
cmp
mov
sbb
mov
iret
xor
push
xor
sahf
mov
and
push
lret
out
dec
mov
mov
dec
enter
xor
out
ja
in
clc
xchg
loop
shl
pop
dec
jge
fwait
sbb
mov
inc
rol
push
inc
out
mov
xchg
je
add
lahf
jge
mov
sti
cwtl
pop
add
add
pusha
push
fcoml
lods
daa
in
repz
movsb
in
gs
hlt
xchg
fldenv
std
sub
rorl
movsl
xchg
and
dec
sbb
aam
mov
sti
in
je
je
std
push
sub
mov
clc
cmp
ljmp
js
incb
lods
and
cltd
aam
inc
jmp
and
mov
xchg
mov
ret
outsb
fwait
pop
pop
adc
mov
ret
mov
aas
out
sti
aaa
pop
das
sbb
pop
into
movsl
add
or
les
mov
clc
rcrl
test
dec
jb
test
repz
xlat
mov
cli
sbbl
push
shrb
ljmp
mov
adc
cmc
jns
fistpl
xchg
in
jnp
xchg
adc
xchg
push
mov
std
dec
lods
ds
push
sahf
jns
stc
popf
sbb
adc
mov
into
enter
lea
popa
js
cmp
jae
xor
xchg
pop
nop
mov
pop
sbb
loopne
rol
scas
mov
cmp
loope
repnz
js
pop
sbb
sbb
jmp
push
xchg
pop
push
dec
push
add
rcrl
jo
sbb
scas
sar
dec
orb
aaa
dec
ljmp
popf
push
out
pop
loop
sub
push
xchg
lret
movsl
fwait
or
inc
out
add
pop
scas
push
jp
push
addr16
loope
add
cwtl
popf
lock
jae
aad
int
aaa
cwtl
pop
inc
fidivs
aas
push
and
push
ja
clc
in
dec
jmp
lods
mov
mov
insb
clc
cld
sub
xchg
sub
push
jle
repnz
ja
lock
sti
fisttpl
lcall
lock
cmpsb
int
xchg
divl
add
es
xor
aaa
mov
scas
gs
and
movl
add
subl
into
lds
jecxz
sbb
add
cmpsw
loopne
jo
xor
setae
sbb
adcb
fisttps
fnstsw
fs
or
hlt
mov
scas
ss
stc
xchg
movsl
mov
sbb
dec
imul
rcll
inc
hlt
out
in
xor
call
cltd
hlt
cmp
xchg
jmp
call
jae
leave
inc
leave
inc
rcrl
dec
sub
stos
pop
fdiv
xchg
pop
adc
fldt
sbb
and
sbb
mov
ja
mov
call
pop
and
pop
sbb
jle
adc
or
mov
and
lods
sahf
fisubrl
ss
mov
xor
cli
mov
cmp
popf
stos
mull
push
lods
mov
mov
push
cltd
or
lods
pop
repz
clc
addl
mov
push
cmpxchg
push
cmpsl
xor
mov
ret
fnstcw
mov
cltd
add
aad
rolb
pop
ret
ficomps
pop
test
cmpsl
adc
stc
test
movsb
call
jl
sbb
lea
pop
push
das
cmp
mov
ret
or
xchg
jne
aaa
xor
pop
cmp
fisttps
in
loop
jmp
sub
mov
das
js
jge
outsb
mov
je
ja
pop
pmaddwd
xor
xchg
dec
iret
adc
stc
into
dec
sbb
fistl
push
int3
testl
jb
fs
mov
scas
cmp
popf
mov
popa
lcall
push
test
in
dec
inc
test
lret
mov
sti
xchg
or
outsl
in
inc
mov
fbld
stos
cltd
push
cmpb
repz
popf
xor
xchg
adc
sub
push
rep
mov
sub
pop
push
pop
les
fistl
out
and
mov
clc
hlt
loopne
adc
in
movsb
sahf
add
dec
adc
cmp
inc
in
dec
inc
les
push
push
in
mov
mov
jecxz
jae
mov
or
jb
jbe
cmpsb
add
mov
hlt
insb
call
and
jg
xlat
jp
adc
push
ljmp
xor
or
add
inc
test
or
mov
mov
mov
push
jge
pop
cmp
xor
outsl
mov
inc
and
cld
ds
pop
sub
jmp
mov
popf
fcoms
scas
out
loop
pop
adc
stos
push
pop
cmp
or
jmp
insl
or
pushf
and
cld
stc
clc
inc
jbe
mov
leave
repz
movsb
xor
test
arpl
jae
xchg
sbb
jne
pop
jae
pop
repz
scas
xor
in
popf
mov
daa
aam
in
imul
push
inc
mov
add
push
dec
sub
fbstp
insl
push
mov
cltd
test
jmp
lods
movsb
jno
push
xchg
popf
scas
adc
popa
aad
jo
loopne
inc
xor
jns
inc
inc
push
mov
clc
xor
adcl
lret
std
push
xchg
mov
int
outsb
ljmp
pusha
xor
pop
inc
lock
lods
adc
nop
pop
cs
xchg
aas
mov
loop
mov
fistl
or
mov
mov
iret
dec
mov
adc
enter
mov
scas
icebp
sbb
ljmp
cmpsw
insl
push
mov
test
ret
xchg
mov
jle
roll
sub
pop
clc
push
mov
popl
out
fdivrp
mull
dec
pop
dec
int
icebp
fmull
inc
subl
ret
pop
ret
push
test
repnz
test
stos
push
insl
mov
mov
adc
in
sub
dec
repnz
xchg
xchg
mov
adc
rcll
xorb
stos
push
out
shrb
std
out
and
push
adc
in
and
in
xor
mov
and
fwait
cmp
stos
fadds
movsb
dec
repnz
add
or
in
aad
inc
add
or
xchg
mov
test
sbb
pop
pop
popa
or
and
stos
shll
sub
lea
or
sub
jbe
bnd
mov
mov
cmp
cmp
pop
sbb
pop
in
mov
lods
mov
jb
add
mov
fildll
adc
jae
fidivl
sti
jp
add
xor
push
mov
cmp
jnp
addr16
shrb
add
jb
test
popa
jg
and
lods
ret
pop
jae
pusha
jb
cmc
cmp
xor
aad
js
out
popa
cld
ss
pop
cltd
xchg
mov
mov
sbb
into
inc
inc
or
xchg
push
xor
adc
mov
or
dec
sbb
aad
inc
mov
lahf
xor
aad
mov
rcrl
fmull
mov
out
fsubs
leave
jne
push
jge
add
mov
add
mov
adc
aaa
push
sub
addl
std
pop
xor
xor
mov
cld
ljmp
popa
sarb
stc
jecxz
adc
adc
in
xor
bnd
and
mov
in
push
mov
or
pop
dec
test
mov
mov
icebp
or
dec
imull
rolb
and
xor
leave
jg
outsl
ret
lock
or
sbb
nop
es
dec
lods
mov
mov
pop
dec
cwtl
int3
sbb
scas
popfw
dec
add
adcb
fmul
pop
mul
mov
lods
cmp
test
push
hlt
jp
pop
sub
mov
js
push
js
pushf
sub
push
pop
pop
xchg
add
nop
ret
xchg
sbb
mov
and
movsl
inc
inc
pop
push
scas
fdivs
inc
jae
fimuls
jecxz
lahf
loope
xor
push
pusha
and
and
jecxz
inc
mov
mov
xor
out
insl
mov
std
scas
mov
clc
mov
jecxz
inc
and
test
fisubrs
add
inc
jmp
out
mov
outsl
jbe
inc
rorl
movsl
mov
pushl
or
lret
push
cld
dec
xchg
les
push
aam
mov
enter
add
xchg
testb
cmc
adc
mov
mov
es
xchg
push
fidivrs
pop
xor
or
xchg
push
sti
jno
loop
and
roll
sbb
repnz
int3
aas
sbb
cmp
sbb
insb
out
or
fimull
inc
icebp
push
dec
inc
cmp
scas
dec
cmp
push
mov
cwtl
fists
push
test
test
jne
jmp
xchg
rcrl
cmp
pop
imul
jmp
lea
pop
mov
enter
mov
inc
in
xchg
add
sbb
xor
sbb
cli
addb
xchg
shr
jns
aas
bswap
jle
mov
cmp
push
loope
lret
out
adc
fisttpl
aad
push
xchg
loop
xor
mov
out
adc
mov
mov
lods
inc
dec
sbb
push
bound
xor
sub
shlb
or
or
cmp
aam
lcall
lock
add
ss
aad
push
xchg
int
sub
push
popa
and
ret
std
jae
out
cs
nop
jnp
mov
in
in
dec
jns
dec
ror
repnz
pusha
xchg
push
je
cmp
jmp
adc
and
cwtl
into
xor
f2xm1
dec
dec
lock
jg
dec
das
xor
lods
std
rorb
pushf
xor
cmp
sbb
mov
jbe
push
dec
pop
popf
mov
in
push
hlt
mov
lds
adc
sbb
xor
add
je
gs
je
fcomps
int
test
sub
je
xor
push
fists
test
fdivl
add
mov
cmpsl
push
adc
icebp
movsl
jbe
mov
insl
sub
sbb
push
push
nop
cmp
cmpsl
xor
enter
sub
fisubl
out
jl
aad
xchg
enter
mov
dec
ljmp
push
or
loopne
dec
loope
lret
xchg
cmpsb
aas
fmuls
and
mul
sub
sbb
jne
dec
or
aas
lods
push
jecxz
ja
cwtl
repnz
inc
or
jb
sbb
jge
loop
ficompl
adc
lea
push
rcrb
xor
xchg
lret
stos
mov
ja
or
js
and
imul
in
pop
outsl
cmp
test
push
push
xchg
loop
or
push
mov
inc
ds
pop
push
pop
mov
add
scas
jbe
add
mov
mov
in
dec
add
push
cmp
movsl
cltd
sahf
mov
dec
push
repnz
addb
cmp
sub
imul
add
neg
pop
daa
jmp
cli
jae
call
push
test
stos
cmp
rorl
fwait
enter
dec
lods
inc
sbb
movl
loop
xchg
add
mov
mov
nop
mov
jge
mov
push
test
outsb
dec
mov
inc
and
sarb
inc
aaa
add
lds
cmp
mov
dec
lret
ds
jbe
out
ss
xor
hlt
add
cld
and
nop
xor
sti
negl
repnz
push
inc
mov
lock
cwtl
xlat
out
movsl
and
mov
inc
xchg
js
pusha
addr16
jb
in
push
pop
push
enter
gs
pop
xchg
stc
sbb
leave
fsubs
xchg
adc
mov
mov
mov
mov
push
xchg
js
fdivs
or
xor
lods
pop
sub
mov
xchg
cmp
dec
sbbb
xor
mov
mov
mov
popa
push
xor
mov
fs
mov
dec
inc
add
fcoml
call
sahf
cmpsl
adcb
cwtl
mov
fs
mov
clc
mov
or
gs
or
or
and
and
imul
dec
fimull
rcrl
aaa
xor
lods
int
xor
and
loope
loopne
arpl
lret
nop
mov
imul
inc
adc
dec
sub
lods
or
inc
pop
dec
pushf
lods
bound
adc
cmp
jmp
dec
das
addl
out
loopne
nop
pop
mov
sbb
cs
out
sub
out
or
inc
sarl
fisubrs
add
shrl
fsubrs
fistps
stos
ret
xchg
enter
xchg
xor
jge
or
out
rorb
lcall
mov
mov
fcompl
std
jp
push
cmp
movsb
xor
mov
ss
cs
pop
es
push
lock
inc
bound
mov
inc
and
jmp
stc
bound
pop
push
out
jno
xor
dec
jmp
int
cmp
sahf
fidivs
repz
mov
int3
mov
xchg
aaa
out
sti
mov
lea
jnp
sub
mov
jmp
ja
enter
cmp
or
pop
adc
cs
outsl
imul
sub
mov
icebp
cmpsl
mov
in
arpl
dec
cmp
insl
xor
cmp
pop
imul
cltd
repnz
jle
lret
mov
dec
add
cltd
ja
mov
adc
mov
mov
into
sub
es
ret
mov
pusha
xchg
inc
mov
inc
cmpsb
scas
pop
jb
lea
dec
xchg
ret
shr
rorl
pop
pop
repz
mov
test
mov
test
sub
sarl
xchg
push
mov
repnz
xchg
push
fsubrs
or
mov
xchg
insb
mov
or
adc
add
inc
cmp
js
push
cmp
scas
enter
mov
int3
aas
xchg
push
cmp
mov
cltd
xchg
divb
call
jmp
add
sbb
mov
js
scas
addr16
mov
and
lcall
insb
mov
cmp
mov
daa
push
lcall
int
adc
mul
jp
clc
cmp
roll
rol
mov
insb
jbe
dec
sbb
out
lock
jmp
jmp
dec
mov
lcall
out
and
xchg
bound
std
pop
adc
addl
mov
xchg
inc
mov
dec
xchg
sub
jnp
pop
sub
jbe
pushf
fldt
aaa
mov
push
jnp
jnp
lret
in
inc
xor
jle
xchg
jmp
rolb
xchg
pushf
jns
divl
ret
mov
jno
push
xchg
fs
push
in
pop
in
pop
mov
sub
aad
cli
std
fldenv
dec
lahf
mov
inc
enter
adc
sbb
pusha
data16
cld
in
pop
dec
pop
and
inc
sub
movsl
cmpl
mov
mov
cmp
stos
jl
cli
mov
into
pop
ljmp
inc
adc
in
mov
dec
dec
lock
loope
out
jae
enter
sub
addr16
divl
lock
cmpsl
dec
jl
out
popa
andb
push
in
or
jg
pop
bound
scas
fsts
adc
imul
push
xor
or
jle
and
and
imul
and
or
mov
dec
mov
ret
call
mov
sahf
mov
mov
adc
ss
xchg
mov
and
ds
hlt
cmpb
mov
pushf
push
inc
test
mov
jbe
bound
lret
push
test
ss
mov
jb
jle
fs
dec
cmpsl
cs
insl
cli
insb
mov
or
cmc
add
in
icebp
pop
mov
jl
mov
rcll
inc
mov
stc
shrl
cs
and
lods
inc
sbb
dec
sub
dec
inc
lods
jle
clc
push
imul
push
test
push
sub
pushf
mov
imul
sub
enter
ret
jle
test
pop
mov
xchg
jle
sti
pop
lods
push
mov
out
repnz
mov
jmp
adc
mov
or
jbe
movsl
mov
mov
sub
fimuls
or
fisttpl
lock
push
mov
mov
sbb
inc
mov
mov
jo
or
xchg
xor
sub
push
sbb
fidivs
jns
xor
lods
dec
sub
daa
repnz
clc
inc
and
stos
xorl
lret
aaa
mov
enter
outsl
xchg
data16
negb
sbb
data16
xor
lock
inc
cmp
xor
repz
arpl
popa
sub
or
int3
inc
in
dec
iretw
sbb
imul
push
aaa
std
in
mov
inc
jns
lret
sbb
push
sbb
sbb
fcmovb
scas
jns
push
clc
mov
adc
data16
gs
insb
ret
or
cli
cltd
jns
popa
xor
push
jg
push
std
push
mov
xor
sub
cmp
sarb
mov
lret
bound
or
pop
xchg
cltd
jae
xchg
xorb
inc
pop
adc
nop
push
mov
mov
je
outsb
jno
xchg
loop
orb
ja
cwtl
jp
xor
lock
cltd
js
and
add
mov
std
in
xchg
hlt
cli
xchg
mov
inc
inc
lret
xor
fimuls
adc
dec
call
or
cmp
mov
sbb
xlat
icebp
push
lahf
push
jo
add
jg
adc
jle,pt
mov
in
or
shrb
in
pop
inc
cvttps2pi
inc
push
sub
push
outsb
or
push
not
push
pop
mov
dec
or
nop
mov
mov
dec
js
cmp
cmpsb
sarb
or
sbb
nop
xlat
jmp
push
outsl
mov
ficompl
sbb
add
ja
sub
ret
testl
rorb
jge
xor
arpl
testb
cmpsb
notb
xor
in
cli
stc
leave
dec
add
rcl
mov
xchg
pop
or
cwtl
test
or
mov
inc
mov
call
and
dec
mov
out
aam
fcoms
xor
adcl
xor
xchg
and
mov
mov
cmp
sbb
cld
add
add
sub
adc
mov
jno
cmp
pop
icebp
or
and
pop
mov
adc
es
fsubs
xor
pop
add
mov
stos
loop
imul
cmp
fs
and
dec
and
ret
daa
push
jbe
add
dec
gs
pop
call
pop
cmp
ss
mov
jp
into
push
mov
sub
push
adc
xchg
add
or
insl
sub
xchg
ljmp
xchg
pop
jg
jg
loope
repnz
lahf
xlat
lea
movsb
test
aad
aad
enter
adc
std
xchg
pusha
xchg
xchg
fisubrs
sahf
pop
jmp
rolb
or
das
xlat
cwtl
fs
lock
stos
jecxz
and
mov
jge
loope
jmp
xchg
mov
ret
dec
xchg
leave
pop
popf
jp
push
xchg
jmp
aaa
pop
mov
pop
cld
xor
inc
icebp
jge
loop
ljmp
xlat
sbbb
pop
into
cli
adcb
pop
cmpsl
out
inc
mov
aaa
iret
or
mov
xchg
iret
xor
test
fsubr
dec
xlat
aaa
xor
sub
mov
fbstp
dec
mov
jecxz
fwait
jno
add
pop
cmp
rorl
clc
mov
push
movsl
or
inc
and
insb
inc
arpl
shlb
mov
push
cmp
std
ljmp
fnstsw
pushf
popa
mov
mov
xchg
jne
mov
lcall
jge
jp
pop
mov
out
lods
fcmovnbe
or
sub
scas
xchg
sbb
push
dec
jmp
fldenv
aas
div
cmp
adc
jmp
mov
mov
pop
mov
dec
das
inc
mov
xchg
or
inc
adc
cmp
nop
pushf
movsb
and
pop
loopne
lods
pop
push
in
sbb
ss
stos
xor
push
mov
mov
push
popa
mov
fnstenv
jecxz
mov
dec
rcr
mov
xchg
ljmp
es
popa
lods
stc
or
out
into
or
arpl
aas
jle
or
sbb
fsubl
jnp
cld
aaa
icebp
jl
adc
test
pop
jle
imul
iret
xchg
cli
test
push
and
jne
lods
add
jne
mov
mov
test
add
sub
xchg
cwtd
push
nop
cs
mov
out
jge
sbb
jb
notl
insl
loopne
sti
and
jle
mov
add
lods
dec
leave
jl
repnz
mov
jmp
push
cmp
xrelease
sub
add
imul
in
jns
fisttps
or
mov
scas
or
imul
inc
xor
xchg
mov
mov
ficoml
into
mov
mov
sub
filds
subb
sub
stos
sub
fcmovnu
in
movsb
xchg
or
cs
lret
out
bound
jmp
mov
mov
mov
popf
addr16
push
lds
xlat
lods
ret
repnz
fwait
adc
jg
mov
fwait
push
sbb
cmp
cltd
sub
or
or
cmp
rorb
push
jns
sbb
cs
mov
ret
push
jge
fwait
xor
hlt
fwait
sbb
jmp
push
pop
fidivrl
data16
pop
inc
push
imul
pop
shll
movsb
pop
push
dec
sub
ret
cmpl
mov
lcall
addr16
and
push
mov
jmp
jmp
mov
test
inc
or
inc
std
jae
pop
sub
inc
mov
scas
xor
insl
or
lds
out
outsb
jg
aas
xor
gs
and
pop
fcoml
aaa
lahf
sbb
jae
bound
lds
dec
xadd
enter
clc
pop
and
daa
dec
repnz
es
pop
push
scas
sub
jns
sbb
jne
ja
jecxz
jmp
pop
cmp
and
or
ja
pop
adc
aaa
ret
int
xor
jle
cmpsl
leave
pop
clc
cmp
setne
daa
cmp
jp
push
lock
and
rcr
mov
sbb
repz
jbe
fs
and
xlat
mov
adc
adc
sbb
mov
iret
adc
dec
fsubrs
out
push
push
cs
in
sti
lods
mov
fsubl
add
scas
inc
and
fidivrs
test
push
nop
cmp
outsb
mov
iret
mov
clc
mov
mov
cld
mov
faddl
xor
sbb
lret
jle
push
bound
sub
sbb
jl
mov
and
ja
pop
daa
rcl
ds
jae
pop
aam
mov
aam
add
subl
pop
addr16
rcll
daa
xchg
cltd
push
add
fldt
shrb
mov
lret
bound
orl
push
shlb
jecxz
xchg
or
sub
pop
jno
sbb
lret
cmpsl
popa
mov
cli
inc
xchg
cmpsl
xchg
cmpsb
shlb
sbb
aam
mov
jo
int3
shr
int
in
pop
jnp
inc
xor
pop
call
int3
scas
pop
push
push
cmc
stos
cmpl
xchg
in
ret
notl
int3
pop
std
xor
jns
pop
imul
test
sub
jns
pop
es
dec
out
pop
or
xor
testl
and
test
rclb
mov
rorl
and
jo
mov
sbb
pop
ret
in
ds
in
divl
or
push
test
sti
xchg
outsb
aas
arpl
xlat
ja
push
or
aam
inc
xor
cmp
das
mov
les
push
sub
inc
test
cmp
ret
das
lahf
mov
jbe
adc
in
aaa
rol
pop
adc
and
sub
add
adcl
dec
fsubrs
inc
sbb
push
ss
cmpsb
fwait
popa
insb
shll
pop
sbb
fwait
jecxz
cmp
ret
mov
scas
push
or
xchg
insb
xchg
mov
xchg
fnstsw
cwtl
jno
idiv
xor
mov
add
lcall
xor
inc
mov
test
mov
imul
gs
adcb
dec
mov
mov
call
add
push
xlat
cs
and
or
push
xchg
rcr
shll
sub
div
bound
push
and
adc
or
cltd
es
mov
movsb
out
mov
movsb
mov
pop
push
lret
loopne
inc
subl
inc
xor
fs
lea
pop
adc
xchg
out
movsl
test
cmp
add
test
es
dec
xchg
enter
lods
ret
in
mov
xor
std
sbb
leave
xor
into
test
sbbl
imul
push
xor
fistpl
or
enter
repnz
test
xor
cmp
xchg
int
pop
mov
outsl
jb
inc
sti
shl
mov
mov
push
jb
mov
and
hlt
movsb
jmp
repz
dec
adc
inc
push
push
loope
jle
jge
adc
cmpsb
mov
pop
mov
xor
jae
push
shlb
sbb
mov
ret
push
cmp
jbe
cmp
aad
sub
inc
ja
inc
sbb
daa
add
add
std
rcrl
rclb
cmp
stos
cmp
add
inc
leave
xchg
enter
stc
fucomi
sub
fstp
scas
push
mov
test
hlt
mov
out
sbbb
cmp
int3
scas
inc
mov
test
repnz
jns
mov
jmp
mov
aad
lcall
es
jb
mov
and
les
fwait
inc
inc
test
fimull
out
mov
aaa
sbb
add
bound
dec
mov
in
add
repnz
xchg
inc
int3
mov
xor
pop
sbb
jp
js
gs
ss
adc
sahf
sub
repnz
push
out
in
int
aas
lea
mov
cltd
pop
push
mov
adc
xlat
mov
ja
test
int3
jmp
repnz
dec
dec
inc
sbb
pop
movsb
in
pushf
and
into
sbb
xchg
sti
sar
out
sub
stc
dec
insb
mov
enter
add
pop
and
int
add
or
cmpsl
out
lahf
add
mov
fs
stos
fsts
jmp
xor
pop
fidivrl
mov
mov
mov
pop
rcrl
andb
rcr
inc
jbe
pop
pop
sbbb
mov
jle
pop
mov
xchg
fsts
push
jle
push
int
inc
and
or
repnz
xchg
jge
nop
lea
rolb
sbbl
daa
xor
dec
push
add
iret
dec
pusha
push
popa
in
lods
ss
inc
lods
dec
orb
data16
pop
stc
push
sbb
jb
xchg
and
xchg
push
mov
test
sbb
xchg
cmpsb
inc
push
pop
repnz
aas
cs
shlb
js
pop
xor
pushf
daa
call
inc
loop
sahf
lcall
es
lock
out
or
rcl
jmp
in
data16
pop
aam
inc
shrb
xor
push
sub
and
int3
testl
gs
and
aaa
cmp
push
or
aaa
sahf
sub
sbb
or
roll
into
dec
adc
test
stc
or
mov
pop
inc
es
or
mov
add
push
sub
iret
pop
pop
int
jecxz
xchg
push
sub
add
shrl
mov
pusha
sbb
jl
mov
dec
add
clc
out
xchg
js
divl
sbb
xchg
insl
mov
add
xchg
mov
addr16
insl
cmp
lret
xchg
mov
ret
add
iret
inc
dec
stos
sub
lret
lret
int3
mov
push
mov
push
mov
adc
test
sbb
outsl
das
xchg
push
mov
push
add
popa
movsb
in
mov
xchg
xor
cmp
adc
xchg
movsl
aam
pop
ds
cmp
dec
loop
pop
pop
adcb
jge
loopne
sarb
push
mov
fcompl
sbb
adc
cld
dec
imul
pop
ja
adc
mov
lahf
ja
push
rclb
loop
adc
or
pop
add
enter
in
scas
and
stos
test
and
mov
sti
and
jl
ss
push
lods
mov
jge
pop
and
arpl
or
inc
adc
cmc
sub
lds
leave
mov
xlat
push
lods
sub
add
bound
aas
das
sub
bound
gs
out
xchg
jmp
mov
outsb
std
pop
lret
fstpt
and
outsb
and
mov
adc
jmp
mov
sbb
mov
mov
pop
ss
pop
stos
jne
out
xor
adc
push
int
mov
cmpsb
xor
movsl
gs
outsl
dec
sub
das
loopne
add
push
or
stos
dec
mov
test
filds
dec
lret
xchg
gs
jmp
icebp
popf
inc
out
inc
and
push
aas
aaa
aaa
add
cmp
insb
rcrb
push
adc
pop
sub
dec
sar
test
pop
fldcw
dec
fldl
stos
out
outsb
in
mov
ja
dec
and
dec
mov
lret
cmp
sbbl
sarb
dec
mov
je
xchg
dec
dec
push
jne
xchg
jne
mov
dec
lret
inc
inc
out
pop
jmp
into
pop
xchg
inc
xchg
inc
bound
mov
inc
and
hlt
mov
imul
add
insl
in
add
aad
pop
shlb
cld
dec
fstpl
cmp
add
or
rcl
jmp
jnp
add
adc
xor
fadd
jns
dec
push
xor
pop
and
psllw
or
pushf
int3
pop
push
in
daa
pop
mov
je
aaa
cmpsb
mulb
repnz
pop
negb
sbb
aaa
push
push
in
mov
lret
lea
inc
cmp
push
popa
inc
inc
mov
cld
out
ret
jno
cltd
pushf
jae
xor
xchg
ret
imul
push
sub
aad
mov
and
jo
mov
in
loopne
dec
jge
jo
fists
mov
andl
insb
dec
mov
inc
add
push
fdivs
mov
pop
sarb
pushf
lods
adc
call
xor
jo
cmp
popa
cld
xlat
fldpi
jge
mov
push
out
rcrb
push
adc
scas
cs
insl
pop
clc
imul
mov
jbe
xchg
sub
and
mov
jp
dec
iret
inc
xlat
lea
mov
lds
outsl
mov
stos
cli
dec
cmc
push
cmp
sbb
fwait
rcll
lret
ss
jae
movsb
icebp
push
nop
mov
sti
in
test
addb
pop
ret
xchg
xchg
nop
add
mov
pop
std
sub
dec
notl
addb
loope
ljmp
xchg
ss
inc
jp
add
mov
inc
jbe
sbb
dec
das
cmp
daa
push
sbb
mov
adc
inc
push
cltd
int
mov
sub
std
mov
pop
push
add
xor
push
fbld
push
adc
in
jle
push
rolb
jb
inc
aad
fs
xchg
or
or
and
into
fwait
out
incl
sbb
jp
cli
int3
pop
xchg
xor
add
movl
mov
mov
aam
sahf
mov
mov
ljmp
out
dec
in
dec
adc
add
iret
inc
pop
push
mov
cmp
or
push
filds
fwait
addl
sbb
pop
dec
ret
les
imul
cmp
sbb
add
inc
int
xchg
or
js
fdivs
les
jge
push
dec
jp
jg
xor
sub
mov
fcomi
push
fmuls
mov
fdivrl
in
xchg
sti
pop
es
jl
cld
std
mov
and
orb
test
mov
inc
mov
xchg
stc
fsubrl
xor
sahf
xchg
sub
pop
cmp
pop
cmp
mov
push
xchg
cmp
cmp
jae
testl
xor
popf
sar
mov
fmuls
sbb
cmp
cmp
ja
push
lods
je
pop
jb
pushf
das
aam
fnsave
movsl
sbb
clc
sub
add
test
dec
jmp
scas
fimull
jle
les
pop
pushf
loopne
jecxz
mov
dec
out
adc
cmp
ds
pop
stos
or
sub
pop
sbb
xor
call
inc
enter
testb
or
mov
mov
jo
sahf
add
adc
add
jae
inc
xchg
scas
aam
xchg
test
push
flds
jb
fiadds
jg
xchg
add
jno
pop
push
inc
inc
fmuls
fistps
data16
les
int3
loope
lret
sub
push
mul
ja
rcl
lahf
imul
dec
cmp
fdiv
test
mov
mov
cli
inc
test
or
sbb
jbe
pop
test
cmp
stc
lret
inc
cmp
insb
sub
cmc
sub
inc
sbb
lret
and
xor
scas
xchg
and
inc
sub
arpl
aas
sbb
push
cmpl
loope
aad
and
cmp
aaa
xor
sbb
mov
xor
pop
repz
aaa
cwtl
scas
fwait
cwtl
stos
loope
sbb
mov
dec
xchg
xchg
mov
mov
clc
sbb
inc
pop
cmp
cltd
arpl
inc
pop
rol
or
js
xrelease
movsb
lea
jmp
push
dec
push
out
push
repnz
movsl
mov
fcoml
adc
ret
add
fnsave
rorl
idivb
push
std
or
adc
cmpsb
jnp
pop
enter
adc
sbb
xor
ret
andl
hlt
fs
jne
fs
or
shr
or
rcll
cmp
fmuls
jae
loop
stc
ret
cmc
negl
aam
xor
and
push
repz
repz
je
mov
and
jp
inc
das
mov
scas
jns
or
add
push
aaa
or
adc
and
ds
lods
jb
mov
inc
cmc
jp
frstor
dec
cli
inc
fstpl
inc
outsb
xchg
sbb
add
and
cmpsb
js
out
xchg
mov
and
jl
ret
in
push
scas
cmpsb
mov
sahf
cltd
mov
imul
ffree
movsl
pop
mov
cmpb
nop
or
pop
push
fwait
mov
fsubp
dec
loope
lret
or
rcr
cmp
cmc
leave
mov
cmovb
test
clc
pop
ret
mov
clc
sbb
mov
inc
jmp
jle
out
aad
cmp
jmp
push
outsb
or
fwait
jo
cmp
mov
int
scas
cmp
mov
std
jno
mov
mov
imul
xor
pop
js
je
pop
cld
pop
pop
mov
cli
mov
inc
jge
ret
mov
mov
aad
push
fnsave
in
stc
jg
and
mov
xor
into
jb
dec
mov
incl
cltd
xchg
stos
je
movb
out
popa
jo
jl
es
roll
xor
dec
dec
jns
inc
push
ljmp
loop
jne
fisubrl
inc
iret
mov
bound
and
jecxz
jge
mov
dec
xor
xchg
daa
mov
xchg
sbb
pop
test
fsubp
dec
sub
jg
pop
out
add
stc
sbb
jp
sbb
in
mov
nop
inc
xor
das
adc
mov
fstps
ljmp
mov
stos
pop
add
test
mov
int3
add
sbb
out
mov
pop
fwait
xor
jmp
imul
mov
pop
imul
pop
gs
jae
xor
mov
pushf
dec
or
and
cmpsb
jle
stc
movsb
mov
dec
xor
insl
fsubrl
xlat
sbb
pop
pop
out
jle
or
jmp
xor
xchg
lods
mov
jmp
ljmp
xor
push
lcall
hlt
adc
xchg
dec
add
mov
adc
sub
or
fstpt
adc
cli
pushf
pop
scas
imul
sub
jg
xlat
adcl
pop
sbb
mov
push
mov
and
xchg
testb
into
paddusw
imul
or
pusha
add
lock
push
clc
adc
sbb
push
ljmp
ja
mov
mov
fdivs
rcr
enter
ja
xor
aaa
lods
mov
push
dec
xchg
shrl
cmp
ret
push
fnstcw
movsl
les
ja
es
movsl
and
push
mov
mov
aam
inc
cs
cmp
clc
and
xor
add
insb
scas
sti
pop
stos
test
xchg
push
imul
clc
xor
and
iret
mov
sti
dec
sbb
pop
and
add
rclb
add
loope
jg
pop
movsl
in
mov
lahf
lcall
iret
cltd
jmp
cmp
xor
mov
jns
movsb
sti
pushf
pop
gs
sub
aaa
repnz
addr16
or
pushf
cld
mov
fs
pop
sub
xchg
sub
push
pop
mov
jge
xchg
hlt
cmp
enter
mov
and
cmp
lret
das
outsb
mov
scas
inc
add
mov
pop
xchg
push
xor
add
andb
repz
pushf
stos
sbb
out
stc
add
lea
ror
std
scas
popa
mov
imul
popf
test
xchg
mov
jbe
xchg
test
inc
out
mov
jno
jmp
call
pop
mov
in
mov
cmp
mov
xchg
sub
pop
int3
jge
dec
dec
mov
dec
inc
or
sub
and
icebp
lret
loopne
and
sbb
add
insb
jl
dec
sahf
sbbl
std
icebp
ret
in
xchg
fcmovnbe
and
and
lods
jnp
adc
cmp
jg
adc
pop
std
inc
cmp
into
add
xlat
aam
and
push
insb
in
lods
adc
mov
shll
pop
sbb
scas
xor
xchg
xchg
dec
sahf
xor
cmp
jae
ja
inc
aam
lcall
pushf
inc
ja
lret
pushl
rorl
pop
mov
adc
lods
enter
fldl
shlb
push
or
add
lods
cli
cmc
enter
dec
out
xchg
jno
in
sti
pushf
jno
mov
scas
cmovb
jp
jb
out
movsl
jbe
add
sbb
jecxz
sbb
mov
inc
add
nop
enter
sbb
add
imul
xchg
sbb
mov
sub
jg
mov
pop
lahf
sarb
xchg
mov
mov
jbe
xor
xor
and
sub
imul
mov
out
cwtl
loopne
int
cmpsb
pop
mov
divb
mov
ss
xlat
dec
add
loope
repz
cmp
xchg
pop
ds
jbe
aad
call
mov
loop
sub
push
jmp
repnz
aaa
xchg
lcall
sbb
mov
sbb
xlat
lds
cmp
insl
int
sbb
mov
cmp
add
and
shr
je
jle
pop
mov
ljmp
and
push
mov
inc
insl
xchg
mov
add
cli
rcl
test
icebp
sbb
push
add
test
or
js
roll
adc
imul
push
sub
cmc
loop
mov
aaa
mov
sti
dec
and
js
cltd
jno
mov
dec
mov
pop
movsl
sub
xchg
mov
lret
out
ret
dec
ret
das
ret
idivb
in
test
cld
stos
sub
rolb
cmp
jb
xor
sbb
push
das
sbb
insb
lods
neg
ficoml
cmc
sbb
repz
xor
or
std
out
mov
andl
mov
pop
int
repz
int3
pop
les
mov
int3
mov
sbb
push
rcl
push
inc
sbb
out
ljmp
aas
mov
sub
push
or
scas
fidivl
mov
sti
out
into
dec
sti
adc
ja
xchg
pop
push
lods
fmul
lods
pusha
mov
add
lcall
add
jns
mov
gs
insb
or
jns
add
inc
insb
jmp
inc
cmp
push
cwtl
dec
push
rcr
or
gs
sbb
mov
movsb
das
add
lods
sub
or
push
adc
push
frstor
and
inc
cmp
push
or
incl
and
or
insl
cld
add
or
call
loopne
xchg
enter
mov
frstor
sub
fbld
jns
cmpsb
shlb
fists
cli
in
ljmp
insb
inc
xchg
fs
xor
pusha
enter
xchg
fisttps
jmp
xchg
jle
pop
test
cmpsb
nop
mov
bound
cmp
loopne
xchg
sub
enter
inc
push
cld
test
lea
jo
arpl
xchg
aam
cmp
cmc
adc
cmp
xchg
xor
sbb
in
jb
call
sti
push
sub
insb
jo
out
sarl
xor
add
xor
sbb
jp
adc
cmp
das
mov
cmp
or
dec
and
push
pop
out
mov
xchg
mov
xor
repnz
les
add
scas
or
mov
or
jle
xchg
dec
ja
mov
push
push
cmp
xchg
fistl
jae
mov
and
jns
cmp
or
and
insb
leave
dec
or
xchg
loopne
pop
push
xchg
cli
push
xchg
add
adc
adc
mov
mov
sbb
xlat
pop
ret
jmp
sub
mov
xchg
xor
jns
lock
mov
shlb
push
stc
incl
xchg
repnz
ljmp
inc
mov
jmp
insl
push
sub
mov
or
xor
fistpll
je
xchg
push
ds
adc
xchg
je
inc
in
and
mov
divl
clc
add
dec
dec
mov
jb
xchg
aaa
addr16
mov
jl
fisttpl
jl
xchg
js
push
bound
into
push
mov
mov
xlat
popfw
mov
sbb
xchg
mov
sub
mov
jns
cwtl
xor
mov
or
cmp
jb
pusha
push
pop
dec
push
cmc
bound
lods
out
mov
ja
add
cmp
sub
cmpsb
iret
lods
lds
push
clc
int
inc
mov
push
testb
mov
mov
in
inc
xor
mov
or
loope
jne
push
out
ja
cmp
and
call
lods
addl
outsb
mov
scas
xchg
mov
pop
sbb
pusha
jns
adc
inc
or
pushf
mov
push
dec
shll
fistps
add
les
insl
icebp
mov
out
pop
mov
inc
or
mov
and
cmp
ffree
xor
mov
xchg
pop
negb
cmpsb
mov
bound
popf
sub
mov
inc
xchg
dec
jecxz
adc
shll
sub
push
sub
jmp
or
hlt
int
sub
in
sbb
into
sub
in
add
in
js
jmp
in
pop
je
lret
dec
mov
idiv
and
dec
fs
in
sbb
or
cmp
fcoml
sbb
aas
push
mov
movsb
jbe
mov
and
xor
andb
jns
mov
leave
sbb
dec
lea
pop
sub
jns
mov
insl
fsubrl
or
or
push
xor
popf
movsb
xchg
js
or
xchg
shll
pop
push
cmp
push
push
jge
jge
jge
movsb
repnz
xor
mov
out
out
jnp
dec
add
call
clc
je
jle
lods
sub
das
dec
push
push
lret
das
js
inc
addr16
lcall
mov
jbe
icebp
aas
call
adc
lahf
test
movsb
call
mov
out
pop
outsb
pop
data16
dec
arpl
ds
repnz
push
push
jl
jno
mov
rcr
subl
xor
mov
push
test
jg
lock
or
divb
cmp
loopne
pusha
sbb
add
outsb
int3
js
cmp
jecxz
lret
leave
mov
cmpsl
sub
pop
outsb
jecxz
xchg
cmp
jmp
inc
fwait
dec
in
scas
or
add
or
fdivrs
and
mov
lret
cmpl
push
dec
xor
ss
and
pop
cld
mov
rcrb
mov
add
and
je
mov
lcall
pop
sbb
cld
fstpl
and
fwait
aad
dec
mov
lock
pop
inc
jbe
pop
cmpsl
cmpsl
pop
add
je
repz
mov
adc
out
inc
jg
push
inc
sub
outsb
cmp
jl
pop
data16
out
call
int3
inc
das
popa
mov
out
inc
push
cmp
xchg
ret
adc
cmp
in
sarb
cmpsl
fsubp
xor
movsb
popl
loopne
jle
jns
mov
fisubrl
sbb
test
and
dec
push
negl
test
cld
cwtl
jecxz
lahf
in
dec
add
movsl
cmp
sarb
xchg
or
sti
push
repnz
mov
jg
dec
addr16
fisubs
sahf
push
add
mov
xor
and
pop
dec
lcall
or
mov
mov
cli
pop
lods
xlat
ret
loope
sub
test
fndisi(8087
sub
pop
and
inc
pop
es
push
loopne
xchg
sub
mov
sub
lea
cwtl
cmpsb
or
std
cmp
sub
sbb
push
loop
jl
pushf
mov
sub
inc
cmp
jb
cmp
pushf
sub
mov
test
push
push
out
or
test
adc
je
jae
adc
sarb
add
jo
mov
mov
test
fisubrl
enter
sbb
or
popa
ss
fdivl
mov
add
adc
ja
cmp
or
aad
mov
xchg
pop
int3
ret
sub
mov
rcrl
rcl
fiadds
test
in
fstpt
daa
mov
mov
cmpsl
xchg
lods
or
push
sbbl
invd
inc
pop
dec
mov
je
sbb
scas
adc
cmp
jno
jno
or
inc
in
stos
mov
push
and
loope
test
pushf
xorb
adc
data16
jo
stos
jmp
pop
call
iret
ja
sbb
sbb
ficoms
repz
in
sahf
loopne
push
outsl
in
mov
loopne
sbb
fdivrp
xor
or
jl
lods
sub
shl
sbb
call
xor
stos
pop
lods
lahf
sub
adc
aam
call
int3
loopne
icebp
xor
cmpsl
movsl
lods
pusha
jge
loope
test
inc
ret
xchg
subl
aaa
pop
lcall
xchg
cmc
cmp
shll
add
xchg
mov
lods
mov
movsl
sub
fwait
pop
mov
mov
incb
push
cmp
cmp
adc
cmp
fdivr
loop
inc
jae
popa
testl
cmc
jmp
dec
push
out
ja
cmp
mov
dec
push
clc
inc
stc
push
push
mov
mov
push
cmp
dec
lods
jmp
lods
scas
mov
jno
pushf
inc
rcrb
fmul
cmp
jge
sub
jb
push
pop
rcl
das
xchg
xor
shll
dec
or
lret
xchg
inc
ds
lret
jne
ficompl
sub
in
pop
cmp
and
iret
and
sbb
cmp
cltd
cmpl
xchg
cmp
push
mov
leave
push
rorb
stc
mov
enter
cmp
verr
cmovge
inc
jnp
decl
dec
cld
and
stc
cmp
bound
hlt
outsl
cmpsl
cwtl
sbb
daa
jbe
test
fisubs
cs
sub
lds
and
push
or
fcom
sbb
and
jge
xor
cltd
lods
stos
sti
jge
stc
int
scas
inc
aam
pop
subb
jg
cmp
sbb
sarb
and
cmpl
stos
jmp
xor
dec
jno
enter
xor
sub
mov
imul
int3
repnz
or
push
aad
ljmp
pop
xor
mov
push
adc
into
pop
shr
mov
jno
jno
mov
add
xchg
xchg
dec
push
lret
ret
adc
inc
pop
push
push
iret
popa
pop
cmc
lea
lods
in
rorl
jl
mov
mov
cmp
mov
in
mov
mov
scas
out
jbe
lret
cwtl
xor
pop
in
fs
pop
int
mov
insb
push
dec
leave
xor
jo
jns
lods
mov
adc
pop
popa
xchg
push
mov
adc
lahf
ss
inc
cmp
sub
jo
sarl
pop
fwait
mov
mov
xlat
pop
xchg
sbb
dec
das
dec
inc
addr16
sarl
adc
mov
adc
add
xchg
jno
inc
jns
jnp
insb
dec
andl
add
or
sar
dec
mov
into
ret
sub
mov
ja
xor
xchg
xor
cltd
ds
cs
arpl
popa
scas
lds
jne
outsb
push
shll
jo
aam
lds
mov
shll
in
imul
sub
mov
mov
add
adc
lcall
ja
adc
in
cs
ljmp
push
jmp
inc
sbb
data16
fsubs
cmp
inc
dec
push
shr
or
cs
push
xchg
adc
mov
mov
cli
out
outsl
mov
and
sbb
neg
addr16
sub
push
int
jmp
inc
xchg
adc
lods
xorl
sub
inc
or
adc
outsb
movsb
adc
xchg
push
xor
or
mov
mov
push
pop
lock
mov
in
sub
adc
jp
adc
jbe
xchg
inc
inc
shr
add
mov
xchg
fs
hlt
xor
jl
movsl
in
mov
jmp
dec
test
jbe
out
idivl
or
iret
cwtl
mov
push
fdivp
dec
lret
int3
dec
in
test
popa
jnp
add
in
cmp
mov
push
hlt
and
add
add
and
ret
push
ficompl
cli
sub
leave
das
mov
mov
or
outsb
dec
inc
push
cmp
shll
scas
and
inc
sbb
mov
mov
sti
inc
add
cmp
gs
pop
fdivs
sbb
add
jl
and
inc
adc
stos
das
inc
mov
mov
repnz
arpl
and
shll
push
pushl
or
sub
js
in
daa
out
xor
sbb
fdiv
pop
movsl
mov
add
sub
jbe
cmp
and
push
js
jg
mov
out
std
adc
and
test
push
add
xlat
sub
mov
bound
pop
stos
mov
sub
sti
pop
mov
loop
push
fs
das
iret
jnp
pushf
xor
mov
sbbb
mov
mov
mov
mov
add
xor
stos
outsb
xor
outsb
imul
sti
fcomps
mulb
call
std
test
mov
pop
insl
test
int
fildl
sahf
test
dec
jmp
inc
leave
shrb
add
arpl
mov
xchg
outsb
xlat
sbb
xor
or
xchg
jbe
mov
dec
in
int
mov
shll
cs
push
push
hlt
div
bound
xor
push
push
lret
jb
cmc
dec
imulb
rorb
add
dec
insb
jns
xchg
int
pop
out
insb
pusha
push
call
in
fucom
hlt
push
cmpsl
rcr
mov
int
mov
arpl
and
insb
jns
cmp
push
cli
cltd
nop
inc
pop
add
push
push
cld
shrb
sbb
lods
mov
in
scas
adc
sti
and
jno
jmp
pushf
fimull
bound
movsl
jns
mov
les
inc
xor
pop
int3
mov
xor
jecxz
adc
xchg
mov
movsb
mov
loopne
cli
push
jbe
cwtl
pop
test
test
xor
xchg
mov
decb
cmp
add
or
outsb
fs
repnz
in
sbb
mov
push
cmpsb
lret
mov
push
fptan
lock
inc
and
and
cld
mov
jne
mov
push
ss
inc
call
pop
sbb
xor
add
sbb
cmp
aas
enter
pop
mov
or
into
jnp
sahf
orb
pushf
fs
jbe
adcl
icebp
fildl
mov
mov
push
aaa
cmp
push
and
mov
pop
add
adcb
inc
mov
sub
adc
or
mov
test
jmp
test
sahf
fcmovnu
xor
sahf
mov
adc
mov
pop
aad
push
orb
stos
jo
out
mov
jl
xchg
ficoml
int
adc
push
cmp
jo
mov
jg
cmp
push
dec
sbb
push
inc
or
jecxz
int
insl
mov
decb
movsl
mov
fwait
sub
or
fmuls
lea
and
pushf
movsb
aad
outsb
xchg
xchg
imul
rcll
xchg
lods
outsb
inc
mov
sub
adc
sbbb
jb
jl
popf
test
or
enter
add
cli
sbb
mov
loopne
cmp
inc
es
jg,pn
jne
push
add
int3
inc
shll
sbb
cmp
cmp
xor
not
or
xor
loop
std
mov
sub
mov
test
gs
adc
xchg
xchg
sub
fsubl
fs
loopne
outsb
xorps
jge
sahf
pop
fstps
add
inc
inc
pushf
popf
mov
test
and
push
mov
lcall
sub
jecxz
cmp
sbb
inc
adcl
les
xor
add
and
adc
xchg
lcall
insl
push
nop
cwtl
addr16
outsb
ret
fidivs
push
fisttpl
lret
dec
addr16
or
aad
inc
xor
out
div
push
movsl
sub
pop
movsb
ja
mov
add
xchg
loopne
mov
shlb
adc
into
scas
adcb
mov
sbb
mov
je
mov
aaa
push
out
dec
xchg
ret
hlt
jbe
cmp
lock
dec
jae
mov
shrl
mov
push
push
pop
lahf
imul
lcall
in
or
mov
mov
mov
mov
pop
dec
testl
notl
or
dec
in
and
sbb
sbb
push
dec
adc
js
mov
fcomip
lahf
jge
dec
push
and
xchg
jb
jnp
push
int
sbb
and
cli
repz
and
out
ret
addr16
test
push
add
mov
xor
inc
pop
push
lods
minps
and
xor
nop
and
mov
and
mov
inc
rclb
jns
lahf
outsb
pop
or
push
add
arpl
cmp
jnp
xchg
mov
jl
fsts
fadds
movsl
cld
dec
mov
dec
jno
hlt
jne
cs
cmc
repnz
dec
jl
mov
out
jmp
adc
clc
mov
jb
daa
jmp
xchg
imul
into
mov
or
test
cmpsb
and
and
mov
fnsave
data16
add
shl
lcall
std
lods
popa
idivl
mov
loop
pop
aas
lret
cmp
loope
xchg
xchg
mov
int
sub
push
cmpsl
scas
dec
icebp
push
xor
inc
lcall
sub
cld
sbb
or
hlt
test
add
adc
pop
ret
mov
testb
out
gs
push
mov
fisubs
cwtl
push
or
push
cmp
popa
jno
loop
cmp
pop
mov
jb
cmp
lods
pop
test
movsl
mov
add
dec
or
push
or
cwtl
sbb
std
adc
arpl
icebp
lahf
lret
sub
stc
stc
add
cmp
inc
scas
data16
push
sarb
adc
and
out
sarl
push
mov
xchg
push
jecxz
push
icebp
or
fisubrs
out
adcb
xchg
jecxz
cmp
fidivs
lods
cmp
out
insl
in
movsl
daa
ds
sbb
aam
inc
and
lcall
icebp
push
jns
dec
and
pop
xlat
sub
idivb
stos
imul
mov
add
loop
sbb
xor
cltd
cmp
mov
imul
sub
or
or
mov
pop
xchg
sub
je
outsl
ftst
iret
and
cmpsb
sbb
push
pop
addr16
ret
add
add
clc
cmp
cld
push
xchg
or
push
ret
outsl
add
jl
and
mov
lds
lods
or
inc
dec
push
xlat
sti
add
add
mov
sbb
inc
push
or
mov
loopne
lock
ffreep
ret
imul
push
std
sbb
push
mov
cmpsb
xchg
add
jg
inc
sbb
mov
dec
xchg
sarl
cli
mov
ret
pop
push
movsb
xchg
xor
sar
cld
adc
mov
jmp
sti
out
sub
sub
outsb
jge
push
stc
add
sub
adc
sti
orl
and
mov
aad
int3
adc
aam
pop
fprem1
mov
push
inc
xchg
mov
mov
daa
insl
loop
push
ss
pop
and
mov
mov
in
ss
and
jg
or
xchg
aas
sbb
pmuludq
sub
repz
mov
pop
ja
aas
je
jno
test
adc
movsb
fdivrl
flds
jg
jo
mov
sarl
jbe
hlt
push
adcb
mov
call
pop
cmc
lea
test
int3
cmpsl
xchg
in
pop
aas
ja
clc
xor
sbbl
xchg
mov
jno
lahf
xchg
pop
fdivs
mov
add
sti
bound
sti
loope
jnp
out
dec
push
adc
or
push
pop
sub
cltd
dec
jge
fwait
sub
loope
jge
inc
xor
data16
outsl
imul
add
and
arpl
out
pusha
hlt
sub
mov
pop
push
in
xor
mov
mov
sarl
fmull
shr
int3
jp
std
loopne
inc
inc
stos
cld
andb
ficompl
sbb
adc
fdivrs
out
cmp
dec
and
sub
popa
jno
mov
mov
push
lods
jg
pop
adc
mov
mov
bound
mov
mov
push
push
out
mov
movsb
sbb
mov
jno
pop
push
dec
in
and
lcall
inc
arpl
ss
inc
filds
lds
fdiv
ljmp
push
in
push
jns
dec
jecxz
roll
pop
pop
jo
ja
jae
or
test
adc
dec
cwtl
fcoml
jae
leave
jl
scas
add
and
stos
ror
lock
fwait
dec
push
movsb
mov
popf
cmp
ds
lcall
lock
out
lret
in
mov
mov
inc
in
outsb
xchg
xor
mov
jecxz
cli
jl
push
lret
pusha
inc
dec
and
sub
int
std
dec
or
inc
orb
push
push
mov
test
mov
adc
and
sub
sbb
loopne
push
call
pop
sbb
sbb
sub
sbb
pop
es
mov
call
cli
popa
nop
fwait
loopne
mov
add
lods
push
lods
hlt
ljmp
icebp
addr16
scas
iret
nop
inc
mov
add
popa
xchg
aad
out
mov
inc
int3
out
dec
hlt
inc
dec
push
pop
rolb
iret
push
out
cld
cltd
push
test
sti
and
add
aaa
orl
mov
or
sbb
mov
fistps
bound
popa
imul
negb
adc
dec
dec
cmc
push
nop
stos
into
popfw
out
jne
and
pop
jmp
fsubrs
pusha
mov
dec
inc
push
pop
adc
addl
adc
mov
mov
test
enter
fidivs
lock
xor
in
pushl
ret
cli
dec
or
shl
clc
push
fnstsw
cwtl
mov
xor
xlat
inc
mov
out
or
test
push
mov
cmpsl
cwtl
sbb
leave
iret
jecxz
sbb
movsl
rcr
adc
cmp
or
rcrb
add
jecxz
pop
scas
sbb
lahf
sbb
lret
xchg
ds
fbstp
cmp
ljmp
adc
adc
stos
movsl
test
gs
inc
in
sub
push
mov
xlat
pop
push
push
mov
jbe
lret
adc
das
sbb
repnz
jg
call
lcall
cli
cld
pop
mov
clc
pop
ret
fsubp
xchg
insb
packuswb
mov
xor
or
lds
hlt
pop
rorb
lods
or
mov
cmpsl
add
mov
fwait
lret
ss
jns
push
ljmp
pop
imul
mov
xor
rorb
cmpb
add
push
dec
fldl
cmp
jg
cmp
cli
cmp
ret
xor
or
stc
sbb
lret
mov
repnz
in
adc
in
mov
int3
push
aas
dec
sub
xor
icebp
out
out
pop
jl
enter
hlt
mov
faddl
dec
dec
test
test
adc
in
sub
adc
jg
or
sarb
push
in
and
mov
xor
mov
daa
jecxz
imul
iret
lds
jo
cld
push
int
lret
xor
in
jmp
dec
ret
mov
adc
lahf
test
add
pop
or
inc
orl
pop
push
inc
enter
add
xchg
fistpl
add
ret
dec
add
or
and
and
sub
std
jo
pop
insb
xor
xchg
call
insl
imul
pusha
mov
xor
jne
xchg
inc
jecxz
sub
pop
push
aam
hlt
jg
xchg
ja
movl
push
aam
lret
pop
fistpll
mov
sbb
call
jne
xor
out
cmp
fadds
push
jle
and
jne
and
mov
ret
popf
pop
sub
in
iret
adc
out
inc
clc
outsl
mov
push
sbb
mov
xor
mov
sarb
mov
fidivs
mov
adc
std
cmpsl
xchg
jmp
hlt
outsl
mov
icebp
cmpsb
movsl
subl
sbb
inc
xchg
mov
cmp
fucomi
mov
aas
pusha
mov
xor
add
movsl
lahf
mov
lea
int3
pop
mov
jl
cmpsl
mov
inc
inc
mov
xorb
ljmp
xor
jge
cmp
jg
out
xchg
xchg
adc
sub
stc
call
sbb
lea
ja
jl
rep
test
jnp
gs
xchg
addr16
pushf
cmp
mov
mov
movsb
push
add
xchg
orl
sub
out
inc
out
lock
out
lcall
add
mov
jne
cmc
add
stc
in
scas
dec
push
fimull
movsb
ja
pop
dec
push
stos
and
out
into
mov
roll
lret
inc
dec
add
dec
mov
movsb
push
jbe
ja
in
or
jl
jl
aaa
and
sbb
hlt
cmp
cmp
roll
nop
repnz
hlt
pusha
shrl
enter
dec
pushf
aad
jg
imul
dec
adc
mov
pop
out
shl
loop
mov
aad
dec
xchg
cli
mov
jecxz
arpl
pushf
mov
sbbb
push
add
pop
loope
jl
and
jne
arpl
xor
mov
ljmp
mov
out
fimuls
popf
add
mov
inc
lea
loope
cmp
xor
sti
push
test
add
out
sbb
jmp
xchg
or
xor
mov
popf
jno
sbb
ror
ret
adc
pop
or
mov
movl
mov
adc
insb
jns
fistps
into
pop
xchg
cmpsb
ja
mov
sbb
xlat
mov
pop
clc
insb
faddl
jecxz
divb
push
aas
pop
sub
add
hlt
nop
jge
stos
aam
mov
inc
inc
xor
lock
pop
adc
cwtl
xchg
nop
xor
stos
out
cmp
and
jge
testl
stos
divl
lret
call
cmpsl
cmp
aad
aam
imul
sub
push
jno
jl
pushf
push
and
mov
scas
out
jne
inc
lea
and
daa
and
in
push
xchg
pushf
test
into
outsl
jle
or
and
aas
jl
aam
sub
movsl
dec
clc
mov
sbbb
and
mov
pusha
rorl
movsl
cmp
aas
sub
mov
aam
jne
popa
addr16
gs
add
add
fsubl
xor
add
inc
aas
push
xor
push
andl
ljmp
mov
xchg
stc
imul
jne
outsb
adc
or
movsb
jns
xlat
xchg
scas
int
mov
push
mov
xchg
pop
sub
mov
dec
sbb
jbe,pt
adc
jno
jne
adc
pop
pop
or
cmp
ret
adc
xchg
pop
mov
mov
mov
adc
dec
psllq
jnp
fsub
push
aaa
inc
xchg
popa
xor
ret
jb
pop
mov
add
aad
loope
cli
test
push
push
jne
sbb
sub
or
enter
add
push
pop
push
test
pop
pusha
int
movb
aas
mov
scas
adc
repz
push
icebp
inc
cmp
pop
fistpl
mov
inc
lods
xchg
push
jl
xor
sub
xor
ficomps
sbb
pop
cmp
dec
nop
jge
ret
sub
dec
fidivrs
sbb
test
xchg
mov
mov
iret
or
int3
and
sahf
mov
adc
sarb
in
inc
mov
xchg
dec
jle
push
mov
jecxz
add
aaa
jnp
iret
jl
sub
scas
dec
inc
inc
int
sbb
mov
pop
xor
or
mov
in
pop
fs
ds
in
add
stos
sub
pop
inc
pop
js
dec
lahf
and
inc
sbb
inc
js
cli
pop
mov
loope
jle
dec
sub
rorl
icebp
mov
aad
imul
or
pop
mov
lds
cwtl
push
cmp
and
fdivl
pop
fisttpll
pop
inc
mov
push
adcl
jg
mov
icebp
pop
mov
lcall
inc
pop
scas
int
sub
popa
dec
into
shll
dec
jae
mov
cmc
add
inc
cmovg
movsb
adc
jne
cmp
and
sbb
xlat
cmpxchg
mov
stos
xchg
in
lock
std
mov
pop
mov
dec
outsb
arpl
mov
faddl
xchg
xchg
dec
or
enter
dec
jnp
icebp
ret
daa
shl
jp
jecxz
stos
cmp
stc
fiaddl
pop
enter
std
test
mov
sub
int3
lcall
rol
and
cld
xor
sub
adc
cmp
mov
loop
sbb
mov
dec
mov
cmpsl
jecxz
cmp
xchg
xor
test
mov
dec
cwtl
mov
std
or
das
or
jae
icebp
rorl
sahf
icebp
test
popf
jo
jp
rorl
ja
dec
enter
push
lock
jmp
stos
gs
or
aad
sbb
mov
mov
jp
xor
mov
ds
dec
pop
and
cmp
pop
push
outsl
cltd
inc
cmpb
stos
sarb
mov
inc
and
cmp
es
push
inc
scas
data16
imul
out
mov
xchg
jae
sub
lret
add
fucom
repz
and
add
leave
mov
je
xchg
dec
xchg
jne
adc
inc
push
or
xchg
jae
xor
add
in
movsb
aad
dec
push
out
jle
jmp
loop
push
xor
rclb
out
mov
push
push
pop
movb
int
adc
or
fsubrl
xor
movsl
jb
xor
dec
fdivrs
stc
mov
cli
in
cmpsl
pop
and
or
push
cmp
and
push
mov
or
sub
push
test
ror
push
dec
sub
jecxz
jp
sbb
pop
xchg
pop
jno
cmp
jge
and
sbb
addr16
outsl
mov
xchg
outsb
cmp
pop
mov
jg
jecxz
push
sarl
out
ljmp
pop
add
rol
daa
testl
lahf
push
jecxz
mov
movsl
addb
xor
sbbl
fnstenv
lock
test
sbb
movsl
sbb
dec
adc
hlt
push
popa
mov
and
outsl
std
imul
cmp
outsb
shll
jp
add
sub
xor
push
mov
xchg
or
jp
psrld
mov
mov
pop
mov
and
jne
aas
rorl
mov
fwait
push
data16
in
sbb
outsb
xor
add
pop
pop
adc
mov
or
stc
mov
xorb
into
outsl
lea
cmpsl
daa
lcall
fs
mov
out
imul
jns
inc
hlt
add
rcl
push
pop
cmp
adc
push
sbb
or
cmp
lods
fldl
ljmp
bound
sbb
inc
es
push
sbb
lcall
shlb
pusha
xchg
xor
rcrl
mov
cmp
inc
outsl
scas
cmpl
test
cmp
inc
data16
leave
mov
push
les
push
imul
and
loope
outsl
lock
jecxz
mov
and
outsb
imul
pop
into
pop
js
adc
pop
cmpsl
out
stos
fisubl
pushf
movsl
inc
jecxz
cld
sub
cmp
mov
and
popa
adc
or
aad
enter
add
popf
push
push
xor
push
ja
xor
ficomps
mov
push
dec
sub
arpl
push
xchg
adc
xor
movsl
dec
pop
sbb
dec
stc
aad
jbe
in
daa
jle
jne
out
in
sbb
mov
enter
mov
or
leave
cld
cmp
pop
mov
xor
les
pop
sahf
ja
xor
std
pop
sub
movsl
mov
sbb
pop
movsb
hlt
pop
cmpsb
icebp
cli
dec
fwait
cmc
leave
jecxz
lock
mov
arpl
pusha
cmp
cli
pop
fsubr
push
or
shrl
jge
loope
mov
sbb
lods
pushw
add
sub
mov
rcll
xchg
hlt
iret
movsb
push
aaa
push
loopne
xchg
push
sub
lock
and
mov
adc
shlb
cmp
push
jae
or
xor
pusha
ret
sbb
lret
cmc
mov
imul
jb
fadds
unpckhps
mov
loop
stos
pop
out
mov
aas
stos
sbbb
ja
mov
xchg
mov
insb
addr16
cmp
push
push
inc
push
out
pop
mov
cld
inc
xor
mov
dec
and
jecxz
cmp
sbb
cmpsl
stos
test
out
push
fcoml
adc
popf
daa
pop
push
js
inc
cmp
aaa
add
push
xchg
mov
fcmovnbe
mov
pop
sti
lock
cmp
fcoms
scas
or
scas
jge
mov
jecxz
hlt
adc
mov
in
xor
pop
popa
add
mov
push
adc
mov
pop
shrl
dec
jae
test
pop
repz
lret
outsl
cmp
fisttpl
and
insb
pop
and
rcr
lahf
mov
dec
jno
push
stos
sbb
or
std
js
fadds
or
jo
subb
jle
and
repz
out
sbb
jns
out
mov
push
or
push
add
mov
lcall
js
sahf
data16
sub
add
mov
cmp
mov
sub
mov
add
sbb
loope
mov
leave
sbb
js
out
pop
jne
lcall
sub
ljmp
mov
jecxz
push
shlb
push
mov
dec
call
loop
popa
lds
dec
aaa
out
xchg
cld
xchg
test
xchg
lds
repz
int3
addr16
inc
loope
out
pusha
dec
fists
out
sub
add
bswap
pop
andb
dec
push
in
mov
jl
ds
add
jg
cs
adc
adc
xchg
pop
imul
lret
xor
dec
or
push
test
mov
cmp
stos
icebp
mov
fmull
xor
fldl
cmpb
jl
mov
adc
sbb
rolb
cltd
pop
fidivl
pop
int3
gs
push
inc
or
loopne
hlt
imul
iret
add
arpl
call
arpl
mov
nop
clc
dec
adcl
das
add
adc
insb
pop
and
decl
lret
mov
sbbl
addl
xchg
jno
leave
push
xchg
and
into
sti
lret
xor
xor
jmp
shrb
mov
sbb
ja
fidivl
push
xor
push
repnz
push
shll
test
repz
lahf
cmp
out
fldcw
insb
shrb
ret
mov
cmp
data16
lret
xor
cwtl
scas
test
push
or
dec
push
inc
mov
movsl
repnz
inc
aaa
stc
fmul
es
negb
pop
std
add
mov
rorl
mov
jae
xchg
push
flds
jnp
ss
mov
test
sbbl
and
add
popf
cmp
jle
inc
sarb
ss
out
clc
daa
lcall
cmp
shrl
in
in
fisttps
xchg
adc
clc
cmp
or
les
fs
in
js
fs
imul
cmp
pop
loop
dec
into
cmc
jnp
out
fs
add
dec
dec
mov
ja
sub
hlt
outsb
push
sbb
cs
int
push
movsl
dec
fcomi
mov
std
call
push
xor
push
fcompl
insb
icebp
pop
mov
test
xor
scas
pusha
jno
xchg
lahf
popa
nop
rcrb
lock
pop
inc
jb
mov
mov
cli
scas
inc
push
cmpsb
shll
loope
fcomip
xlat
rcpps
movsl
adc
add
mov
sub
pusha
imul
mov
sub
sahf
sbb
leave
mov
inc
sbb
xor
cmp
mov
pop
mov
sbb
cs
mov
mov
inc
mov
js
xchg
mov
fmull
or
mov
cltd
mov
inc
rorl
fisubs
ret
mov
mov
dec
xor
xor
or
out
push
push
push
loope
push
es
int3
mov
ljmp
pop
test
les
push
dec
mov
pusha
icebp
inc
je
fsts
scas
and
and
jl
pushf
loopne
xor
mov
push
push
neg
push
and
dec
jns
xor
rcrl
xchg
inc
add
loopne
gs
jo
sbb
dec
mov
dec
rorl
int3
mov
out
sbbb
or
popa
push
jns
mov
lea
sbb
cmpsl
mov
and
xor
xor
cmp
xchg
xchg
out
sahf
ja
mov
cmp
imul
fsts
adc
repnz
imul
adc
push
ljmp
jne
je
repz
roll
addl
js
mov
adc
rolb
sbb
mov
scas
pop
mov
inc
lcall
add
hlt
scas
pushf
shrl
movb
cmpsl
or
test
lock
fsubr
adc
lock
sbb
push
data16
sub
lods
shlb
les
add
pop
mov
adc
test
push
sbb
repz
mov
add
out
pop
out
mov
pop
bound
inc
pusha
sti
jmp
ficomps
push
pause
xor
cld
fwait
dec
and
mov
lds
xchg
sub
add
mov
or
cmp
test
sub
mov
fwait
inc
mov
xchg
sbb
aam
cs
out
cmp
ror
jns
dec
gs
xor
inc
ljmp
shll
jmp
mov
pop
mov
add
data16
push
pop
push
jno
xchg
es
aam
xor
jo
test
jne
push
cld
xlat
jl
jns
cmp
jns
push
std
push
arpl
loopne
adc
inc
ficoml
fnstenv
sbb
pop
or
jg
or
inc
add
iret
arpl
ljmp
gs
inc
pop
hlt
adc
and
adc
sub
imul
mov
mov
fsubrs
daa
pop
popf
mov
scas
mov
insb
fisubs
js
xchg
movsl
int
aad
aas
cmc
in
cmp
lahf
test
and
pop
sub
stc
test
pop
sub
insl
fidivrl
mov
rcl
pusha
push
int3
je
insb
ret
jo
pop
lock
imul
arpl
dec
out
pop
fwait
inc
aas
add
scas
sub
push
cld
into
stc
lea
test
sbb
push
inc
flds
repz
push
mov
int3
loop
imul
sahf
test
sti
lret
lcall
mov
nop
sbb
or
cmp
ss
ficompl
test
lock
pushf
or
mov
inc
subl
inc
push
xchg
dec
lret
loop
icebp
jnp
addb
sub
xor
xor
cmpsl
push
imul
stos
jno
jp
mov
fucomi
sub
in
cmovs
jae
stos
or
mov
mov
cs
pusha
xchg
add
insl
dec
and
and
push
push
push
mov
js
sub
or
into
mov
test
shl
minps
stos
lods
lods
cmp
pop
lahf
dec
add
ror
xor
lret
push
or
aaa
iret
rcrb
movb
xlat
scas
mov
jns
jg
jb
add
fadd
pusha
bound
cmpsb
or
mov
outsl
subps
std
pop
dec
std
imul
mov
cld
ret
xor
xor
or
aas
pop
lods
xchg
xor
push
aas
cmp
cmp
lret
push
sbb
push
jmp
pop
cltd
push
test
mov
aad
stos
inc
adc
sub
sti
sbb
xchg
outsb
sub
icebp
cmpsb
and
mov
cmpsl
test
pop
bound
aam
repz
mov
out
fs
call
fs
in
repz
xor
sbb
mov
or
andl
sbbb
stos
aad
bound
or
movsl
fnstenv
cmp
scas
fmulp
xor
aaa
inc
cmc
cmp
push
ficoms
rolb
cli
pusha
and
mov
or
call
or
imul
xor
and
lods
push
cmpsb
out
mov
daa
incl
mov
mov
mov
or
aaa
int
mov
sub
xchg
out
mov
cli
jp
sbb
jo
inc
jle
adc
dec
in
xchg
lock
es
or
outsl
dec
mov
ds
xchg
lock
aad
cmpsl
icebp
cmp
mov
pop
mov
inc
daa
ds
mov
insb
jns
xor
xchg
hlt
push
and
mov
mov
out
aam
sti
adcl
add
cs
rcl
leave
jnp
xor
dec
in
pop
in
negb
add
dec
adc
aaa
adc
pop
jns
outsb
push
mov
andl
jp
data16
iret
iret
sub
fstps
popw
fistl
pushl
jnp
xchg
loopne
insb
test
jae
lcall
mov
lahf
xorb
jge
cwtl
jns
cmpsb
jbe
loopne
sub
cld
or
mov
sahf
jo
xor
incl
lea
push
int
int3
ret
imul
test
xchg
popf
ljmp
inc
pop
sub
sbb
into
pop
mov
sbb
and
inc
ljmp
push
hlt
lods
into
insl
fs
or
call
add
push
dec
rolb
in
or
imul
pop
jp
jb
sbb
add
mov
xchg
push
cmp
pop
push
cltd
js
jo
aas
cmp
rcll
xchg
clc
mov
nop
add
icebp
mov
cmp
dec
xchg
sub
dec
dec
loope
addr16
jmp
xchg
jecxz
dec
scas
xor
roll
sub
sbb
cmpb
je
jg
sbb
sahf
and
jae
dec
add
push
xchg
mov
test
jmp
rcl
popa
and
jmp
hlt
icebp
adc
inc
push
xor
sbb
xchg
ds
punpckhbw
ljmp
stos
int3
fsubs
mulb
mov
xchg
pop
inc
not
addl
ljmp
lret
pop
in
fstpl
inc
dec
in
inc
pop
imul
push
scas
xor
mov
das
cmpsb
in
mov
and
das
xor
in
pop
pushf
and
jo
test
sub
push
add
mul
xchg
mov
push
and
mov
push
push
xorl
adc
test
pop
jb
xchg
wrmsr
add
in
enter
pop
push
inc
or
outsb
stc
jbe
out
xadd
enter
add
xchg
lods
rorb
nop
daa
das
shll
je
dec
adc
sub
mov
inc
cmp
jg
push
lods
punpckhwd
out
push
adc
nop
jge
dec
jae
jno
push
ret
push
mov
sti
repz
xor
push
dec
and
mov
mov
dec
aaa
push
sub
mov
inc
xchg
pop
fdivl
out
es
sub
lret
pop
lds
lods
or
popa
loopne
pop
xorb
aaa
fcmovnb
add
loopne
cmp
mov
sbb
lret
inc
cmp
daa
sub
sbb
xor
and
lahf
mov
bound
out
fs
std
jae
mov
insb
or
or
inc
bound
xor
pop
pop
test
inc
cltd
cmp
push
pop
jae
pop
pmulhw
mov
popf
xor
je
pushl
and
adc
fldt
adc
mov
mov
enter
cmp
push
movsl
gs
shll
push
dec
cmp
insl
sub
push
xchg
test
ja
push
xor
std
dec
add
mov
sbb
mov
insl
movsb
adc
les
cmp
push
aam
mov
cli
in
mov
adc
loope
std
mov
bound
xchg
mov
ret
adc
add
out
call
sahf
int3
std
xchg
aas
add
ret
push
add
sub
adc
sub
mov
jae
push
or
incb
icebp
xor
inc
cmp
adc
push
daa
jg
cmp
call
cmpb
push
push
push
cmp
imul
popa
and
sbb
out
sub
shrb
int3
xchg
pop
cld
rolb
push
dec
shr
scas
stc
inc
jbe
gs
mov
cmp
rclb
sub
cld
push
mov
rcrl
jne
cmp
and
test
out
repnz
popl
add
mov
or
outsb
lcall
loop
fs
ds
and
xchg
aaa
ja
dec
ss
int3
add
pop
and
sub
or
insl
fcomip
and
test
cmpsb
push
inc
mov
pop
je
or
shrl
push
mov
mov
cmp
xchg
xchg
push
push
adc
stos
out
bound
jae
mov
inc
xchg
xchg
ret
shrb
jl
mov
mov
mov
inc
fiaddl
mov
hlt
push
fstl
arpl
adc
dec
in
cmp
fmul
sbb
les
call
add
out
mov
mov
clc
lock
rolb
jmp
push
or
shlb
mov
jmp
iret
add
das
pop
ds
mov
xor
stc
fs
push
dec
jo
daa
xor
and
add
rcr
leave
cmpsl
xor
test
xchg
in
cmpb
icebp
test
data16
jns
push
outsb
popf
jae
je
test
and
ljmp
sbb
shr
js
hlt
jbe
gs
inc
into
pop
loop
mov
stos
sbb
add
movsl
roll
lret
add
jecxz
repz
loopne
cmp
mov
jecxz
push
xor
incl
xchg
fistpl
aas
aas
popf
cmp
mov
dec
push
dec
lret
sub
lock
mov
pusha
faddl
dec
imul
ret
inc
adc
rorl
cmp
mov
xchg
pop
jo
xchg
mov
inc
hlt
call
mov
aas
sbb
fnsave
jae
adc
ret
push
jmp
xor
ds
adc
inc
pop
add
movsb
popf
gs
imul
lcall
lds
aas
push
or
push
xchg
rolb
and
sub
sbb
int3
in
inc
add
lret
mov
xor
push
xchg
adc
cmp
jle
xchg
rolb
icebp
aad
out
bound
mov
test
xchg
mov
imul
insb
sbb
jae
xorl
or
or
lret
pusha
addb
test
inc
or
jge
aad
leave
inc
int
sbb
jecxz
xchg
out
int
pop
scas
ficomps
or
mov
mov
repnz
push
push
in
jg
addr16
sub
adc
jge
out
sbb
push
xchg
cmp
clc
in
imul
pop
push
sti
dec
test
imul
lods
jge
lcall
cltd
lahf
leave
sub
into
lahf
cmp
cwtl
mov
sbb
jl
out
or
pop
xor
rorb
xchg
int
dec
jl
or
mov
cs
ret
insl
std
enter
outsb
sti
jmp
cmp
jb
nop
cmpb
mov
outsl
or
pusha
jl
mov
ds
cmpsl
nop
int3
mov
popf
adc
inc
sbb
loop
orl
inc
adc
and
leave
xor
add
push
sbbl
push
push
ljmp
xor
dec
add
or
fnstenv
mov
adc
push
aas
mov
push
pop
leave
ret
ljmp
daa
addb
ss
in
and
pusha
jno
jno
popf
cmp
inc
cmp
mov
adc
push
movsl
cltd
inc
add
ret
jp
iret
test
mov
lret
and
movl
sub
arpl
aaa
orl
pop
aas
mov
outsb
shll
add
push
sub
fisubl
lock
mov
jecxz
movl
jg
and
cs
cmp
jno
sub
nop
sub
mov
fsubr
fnstsw
subl
push
lcall
jmp
mov
sbb
enter
mov
lods
ret
adc
or
adc
mov
insb
sub
inc
ja
insb
push
out
dec
imul
sbb
and
pusha
dec
jge
jae
fimull
dec
or
iret
repnz
mov
sub
ret
push
int
mov
out
and
add
cmpsb
sarl
adc
jg
cmc
int
mov
jb
addl
mov
call
sbb
inc
xchg
inc
lret
jae
adc
pop
repz
cmpsl
addr16
popl
xlat
repz
dec
add
adc
loope
test
adc
xchg
aam
add
scas
pop
push
out
inc
enter
in
mov
lds
dec
cld
fstpt
lret
andl
iret
dec
push
mov
and
arpl
es
jb
xchg
les
stos
testb
bt
push
dec
out
fistps
test
int3
inc
mov
pop
mov
xchg
sbb
insl
jns
jnp
and
loope
mov
jae
stc
scas
cwtl
push
std
imul
jcxz
cmc
hlt
adc
mov
jle
lds
mov
aad
repz
ret
pop
mov
pop
je
dec
and
pop
push
mov
mov
dec
sub
insl
mov
cwtl
xor
jbe
mov
lods
pop
in
push
inc
adc
daa
int
adc
or
adc
inc
pop
cmp
mov
xchg
mov
movsl
pop
aam
test
cmp
pushf
addr16
insl
inc
ds
ret
add
jo
sahf
sbb
push
mov
orl
aas
les
insl
push
std
rcrb
and
les
mov
mov
loopne
data16
pop
inc
dec
pusha
mov
fadds
out
inc
mov
jae
iret
movsl
cwtl
mov
jb
pop
adc
pop
sbb
adc
inc
xchg
pop
ret
mov
daa
iret
loop
pop
test
pop
out
shrb
pushf
je
jbe
jae
push
xor
mov
sbbb
icebp
shl
cld
mov
leave
sub
je
aaa
inc
call
pushf
xchg
aaa
lock
mov
in
jne
movsb
pushf
movsb
mov
jle
aam
inc
into
pop
xchg
fildll
sbb
test
fcoms
jle
movsb
pop
cmp
das
sub
or
mov
rorl
aaa
mov
mov
jb
sti
test
add
ja
cltd
loop
jmp
int3
ficoms
fldenv
fiadds
xor
adc
xchg
or
mov
push
aad
imul
mov
rol
dec
sbb
enter
ljmp
mov
push
xor
mov
jbe
inc
adc
cmp
sbb
add
iret
push
cmc
stos
sbb
and
xlat
insl
jmp
pop
je
pushf
jb
int3
addr16
jb
pop
jns
lret
adc
mov
outsb
push
pop
cmc
fldl
jns
mov
aas
bound
and
and
imul
xor
js
ds
cli
cli
jmp
data16
lret
ret
inc
inc
mov
loop
pusha
or
bound
lret
sbb
add
lret
int
pop
fcompl
inc
push
dec
inc
cwtl
push
data16
arpl
push
fcoms
in
push
mov
stos
push
dec
negb
stos
iret
mov
out
sub
inc
imul
gs
xor
sub
xchg
and
or
lahf
popf
pop
pop
push
iret
push
fbld
clc
inc
fistpl
mov
shll
in
xchg
or
lret
xchg
mov
je
daa
int
jecxz
cmc
ror
jge
mov
pop
push
and
sbb
mov
mov
mov
sbb
sarl
sbb
out
dec
adc
pop
mov
and
je
lock
sbb
push
dec
pop
mov
cmp
sti
sbb
adc
xchg
dec
mov
pop
xchg
mov
adc
in
arpl
lds
mulb
in
pshufw
add
mov
stc
aaa
fimull
ret
lret
fnstenv
push
pop
int
sub
mov
sbb
bound
or
xor
pop
sub
mov
inc
cs
adcl
js
iret
sti
les
ret
add
mov
outsb
push
sti
dec
hlt
dec
xchg
ret
test
jnp
push
daa
cmp
mov
cmpsb
in
pop
xchg
shrl
cs
sub
fmull
scas
mov
popa
mov
xor
cld
adc
adc
adc
pop
xchg
ror
nop
scas
cmp
fbstp
or
push
movsl
icebp
cmovs
sbbl
sub
xor
insb
test
sbb
repnz
jnp
outsb
incb
mov
dec
cs
adc
sub
repnz
pxor
xchg
outsl
push
and
cld
sbb
mov
in
mov
xchg
mov
cmp
mov
xchg
loop
lahf
jecxz
iret
pop
xlat
cmp
es
sbb
in
insl
sbb
ljmp
loopne
subl
sub
cmp
pop
stos
mov
xchg
test
inc
je
scas
and
dec
lods
dec
sub
bound
ja
fwait
xor
ss
or
xor
addl
mov
outsb
lock
lods
pop
insl
xor
iret
jae
cmp
jne
push
push
js
mov
inc
enter
cmc
cli
lea
jg
cmp
mov
push
aaa
scas
lock
inc
adc
mov
mov
lahf
lea
cmpl
and
jl
jl
jno
pop
cmpb
xor
imul
mov
xorl
and
aaa
xchg
add
insl
cli
inc
mov
sti
xor
shlb
lcall
int3
sahf
cli
adc
jmp
push
pop
es
jecxz
popf
mov
repnz
xor
jnp
xchg
dec
mov
loope
outsb
jp
insb
repnz
add
mov
sbb
cmpsl
stos
mov
movsb
shll
int
mov
call
pushf
dec
pop
adcl
xor
add
je
pop
lods
sbb
fidivl
pop
xchg
sbb
inc
fildl
mov
xchg
lods
call
xor
sbb
cli
and
cmc
ror
cmp
xor
addr16
and
ss
sbb
and
or
cmp
jbe
and
aad
and
mov
push
or
lcall
xor
or
push
mov
std
pop
mov
jmp
je
mov
add
jns
add
insb
vpshlq
incb
dec
mov
xchg
jmp
das
xlat
int
out
jns
cmp
jb
mov
jb
sbb
mov
mov
push
push
lahf
out
inc
aaa
sarb
xchg
rolb
jb
pop
emms
xchg
push
push
shl
cld
push
fcmovb
xchg
int3
dec
mov
dec
sbb
popf
int3
pop
dec
inc
add
popa
out
lock
mov
fwait
out
test
ljmp
shlb
stos
nop
push
mov
icebp
inc
das
dec
fcmovbe
hlt
jae
je
insl
or
addb
cmp
out
xor
xor
jp
add
aam
push
or
jecxz,pt
mov
dec
xchg
mov
mov
or
pop
adc
out
jle
insl
lds
std
mov
push
fcmovne
mov
arpl
jl
xor
cmp
in
mov
or
xchg
fdiv
mov
arpl
xor
push
pop
inc
mov
test
push
xor
rorb
push
adc
jmp
and
jns
test
ret
mov
adc
aam
add
icebp
cld
roll
fs
inc
push
jmp
xchg
shll
push
jae
mov
or
adc
in
mov
jg
std
call
pop
xchg
pop
cld
pushf
aaa
fildll
cs
add
mov
and
aas
mov
or
xchg
push
in
cltd
cs
xchg
daa
addr16
std
aaa
ljmp
ret
mov
mov
aad
sahf
incl
int
cs
cli
mov
lds
mov
popf
test
mov
shll
sbb
popa
adc
je
fstpt
icebp
into
jmp
lcall
sub
repz
andb
inc
sarl
lods
sbbl
mov
lret
mov
xchg
add
cmpsl
push
popf
adc
addb
in
pushf
stos
fisttpl
jg
in
pusha
xchg
test
jl
inc
pop
pop
scas
xchg
nop
lea
or
jle
gs
xor
add
pop
loope
fucomp
enter
pop
inc
daa
inc
mov
add
cmp
push
addr16
into
bound
out
or
cmc
cmpsl
xchg
fcmovne
mov
insl
pop
xor
repz
sbb
loop
clc
ret
in
ja
dec
mov
adc
sub
lds
xlat
aam
hlt
pop
cld
cld
mov
jg
addr16
lods
ret
loopne
jnp
sarl
lds
add
inc
add
aas
push
daa
fdivrs
pop
das
mov
rcrl
pop
xor
mov
jbe
mov
jo
or
jno
outsb
mov
orl
adc
sbb
inc
mov
dec
mov
cwtl
mov
fs
add
mov
jnp
mov
hlt
jg
lret
or
inc
mov
mov
iret
inc
mov
inc
ss
aad
fnstenv
aas
dec
out
push
std
jge
insb
ljmp
adc
fbstp
pop
sti
add
ds
in
jle
in
xor
xchg
fnstcw
push
mov
xchg
test
scas
fidivs
imul
aas
int
test
jmp
in
jbe
data16
and
xchg
mov
inc
in
in
push
mov
insb
loop
cmp
repz
pop
mov
or
xchg
dec
lods
repz
pop
cmp
pushf
das
sbb
mov
dec
loop
sbb
jbe
pop
mov
push
test
xor
push
push
pop
into
sub
sbb
adc
orb
mov
ret
jne
xor
fs
xor
pushf
and
jno
push
pop
dec
jbe
out
gs
hlt
movsl
pop
mov
or
pop
test
jge
notl
daa
adc
mov
xor
cli
pop
lods
pop
mov
out
inc
daa
xor
push
sub
insb
mov
cmp
subl
notl
sbb
sbb
rcr
push
sbb
nop
insl
mov
je
mov
xchg
push
push
mov
iret
pusha
jnp
jle
and
pop
cmc
jecxz
dec
imul
sub
outsl
shrb
cmc
xor
adc
dec
xor
push
and
mov
es
movsb
jns
es
mov
cmp
cmp
movsb
xchg
orl
sub
mov
sub
sahf
outsl
in
and
test
dec
int3
or
push
movsb
sub
leave
or
mov
xor
outsb
lea
cmp
inc
sub
popf
jns
mov
and
adc
pop
cmpsb
jge
loopne
jns
adc
jns
sub
testb
rorb
in
xor
movsb
outsl
fimuls
shrb
adc
mov
fcompl
mov
mov
sbb
mov
insb
sbbb
cmpsb
mov
or
fisubl
dec
sbb
xchg
xchg
lock
mov
mov
cld
mov
stos
sbb
rcrb
neg
imul
adc
xor
pushf
mov
mov
scas
out
outsb
mov
mov
sub
mov
test
in
cmpsb
adc
out
and
dec
jo
je
out
sarl
cmp
mov
outsl
dec
or
nop
mov
jnp
imul
inc
adc
xor
sub
dec
int3
add
xchg
xor
push
cmc
out
shl
sbb
pop
dec
or
fidivrl
and
call
push
lret
cmc
and
cmp
loope
pop
popa
sbb
pop
mov
sbb
faddl
cmpsl
jae
mov
addr16
pop
inc
daa
mull
sub
mov
daa
mov
shr
mov
jnp
push
sbb
inc
js
ljmp
xlat
sahf
leave
pop
popf
mov
cmp
and
loope
xchg
pop
ret
xor
push
outsl
jb
out
insl
push
add
mov
or
stos
arpl
mov
adc
dec
add
pop
mov
idivl
jl
ficoms
jae
enter
lods
sbb
mov
je
test
mov
mov
jecxz
mov
imul
or
inc
sbb
cmpsl
jno
dec
mov
cwtl
lds
lds
cmp
sbb
jb
inc
aad
je
mov
cmp
addb
loop
jne
mov
xorl
popf
lret
sub
enter
gs
fs
xchg
pop
orl
insb
dec
mov
stc
pusha
cs
aam
rolb
push
xchg
shl
cmpsl
mov
pop
and
sbb
and
and
mov
pop
mov
adc
in
scas
out
cmp
jg
fstpt
rolb
int3
xchg
add
out
movsb
addb
imul
cmp
les
push
arpl
movsb
cmc
rcll
mov
rcl
mov
cmpsb
add
int3
jns
popa
out
fsubrs
jp
test
pushf
orb
gs
mov
jle
sbb
sbb
pop
pop
lcall
adc
adc
fninit
aam
fdivl
dec
iret
inc
cmp
cmp
dec
shll
add
lcall
pop
mov
mov
repz
cltd
std
fisttpl
mov
mov
inc
push
push
in
sbb
pop
repnz
cmp
mov
push
jnp
daa
push
aad
fmull
push
mov
ret
les
mov
stos
and
xor
sbbb
sub
dec
ret
in
addl
dec
and
inc
adc
adc
setbe
sahf
and
dec
ss
scas
mov
std
jae
pusha
lock
adc
xchg
shr
mov
dec
leave
dec
ror
scas
out
notb
aad
aam
xchg
shlb
add
add
idivb
out
fistpl
dec
aaa
imul
lock
fdivp
popa
push
sub
popa
sbb
jmp
jb
or
frstor
jl
aas
jno
in
cmpsb
inc
dec
and
nop
test
mov
lahf
scas
sbb
lea
icebp
aam
pop
lret
adc
or
and
adc
dec
stos
insb
lock
out
iret
pop
pusha
out
adc
scas
push
sub
shlb
ljmp
popf
in
jge
mov
lahf
xchg
addl
bound
mov
xchg
mov
jmp
pop
ja
nop
sub
xor
in
adc
popf
test
push
pop
pop
sti
movsb
mov
sbb
js
mov
mov
or
or
add
jnp
dec
mov
sti
xchg
int3
lods
addr16
aam
add
daa
into
dec
aas
adcb
push
add
mov
mov
ds
fistpl
cmc
aas
mov
pop
inc
aas
sahf
cltd
inc
dec
aas
jp
mov
icebp
rclb
cmp
sbb
stc
push
push
test
repz
out
fidivl
cltd
xor
int3
fmuls
xchg
mov
pushf
push
push
adc
lea
xchg
je
lahf
pop
leave
pop
adc
in
mov
lea
int
xor
mov
add
aas
scas
push
cmc
pop
ja
fdivrl
cli
jmp
xchg
sub
fwait
push
out
push
test
dec
cmp
cmp
pushf
jo
test
push
ds
aad
sub
lcall
lods
int
jbe
xchg
in
pop
adc
xchg
push
add
orb
jmp
insb
leave
out
stc
ja
cs
mov
jp
lds
outsl
xlat
cld
stos
sar
and
adc
cltd
imul
jle
cmp
dec
sbb
repnz
ja
lcall
add
outsb
or
es
or
arpl
lea
iret
jmp
and
cli
ret
lret
movsl
mov
cmp
dec
int3
insb
push
pop
fs
pop
pop
in
test
mov
and
mov
pop
jbe
bound
sbb
int3
in
shrb
data16
mov
jo
in
ds
jl
jbe
ret
push
mov
pop
ss
cltd
fldt
adc
cwtl
outsl
xchg
mov
fwait
lcall
mov
xor
add
xlat
int3
pop
inc
pop
leave
out
add
inc
dec
inc
xchg
lahf
jecxz
xor
push
mov
lock
mov
outsl
lea
fs
inc
dec
outsl
lods
mov
mov
adcl
adc
popa
or
fistpl
cmc
lods
xor
xor
mov
push
mov
ljmp
sbb
pop
cmpsl
mov
and
out
inc
fwait
jmp
adc
mov
aaa
adc
inc
lods
rcrb
jae
cmp
lcall
sub
out
ret
popf
push
sbb
xchg
and
dec
xchg
sbbl
imul
test
dec
dec
xchg
xchg
bound
sbb
pop
ljmp
xchg
inc
adc
sub
in
mulb
nop
fdiv
dec
push
push
jg
lods
cmp
inc
arpl
mov
call
mov
test
push
jp
add
mov
imul
aaa
jl
outsb
dec
mov
adc
add
fwait
cmp
mov
jle
pushf
jmp
jecxz
xor
jne
pop
scas
or
jbe
cmp
jg
dec
sarl
vaddps
cwtl
xor
dec
mov
popf
inc
xchg
xchg
adc
insl
add
scas
pop
mov
sti
sahf
lea
fdivrs
jecxz
cmp
inc
sub
repz
ja
loopne
push
or
xchg
sbb
nop
push
pop
sub
xor
ljmp
mov
jbe
rcrb
sbb
xor
int
adc
loop
mov
psrld
bsf
icebp
into
inc
add
je
int
sbb
or
lods
lret
scas
repz
cmc
lods
subb
sbb
inc
jle
cmp
pop
pop
sahf
in
pop
aas
sbb
or
orb
fyl2xp1
insb
in
aad
out
stos
sub
add
ror
movb
sub
mov
mov
jle
call
add
push
xor
das
push
pop
xchg
faddl
test
dec
dec
pop
xchg
orb
insl
outsl
sub
pop
pop
jl
ljmp
adc
fsubrl
xchg
pop
js
cmp
jns
or
out
call
pop
pop
les
xchg
mov
push
stos
lods
jbe
dec
xor
in
mov
pushf
mov
flds
mov
inc
cs
pop
mov
xor
and
ss
and
mov
test
scas
pop
adc
int
shrl
cld
lret
movsl
out
push
lahf
pop
test
jb
adc
insb
dec
mov
xchg
bound
jb
lods
cmp
pop
enter
rcrb
pop
sub
ds
aam
scas
xchg
xchg
jmp
mov
lret
jns
adc
cld
jge
out
mov
adc
pop
test
or
faddl
popf
shl
xchg
popa
rcr
add
sbb
jb
into
cmp
mov
add
mov
int
xor
cmp
in
sub
in
mov
dec
mov
xchg
fwait
nop
add
mov
adc
jecxz
adc
sub
roll
rol
mov
and
das
adc
inc
adc
pop
push
inc
xor
cs
or
sbb
ret
jbe
aad
sub
scas
mov
dec
daa
bound
mov
pop
dec
out
in
call
mov
ret
loop
pop
mov
and
imul
test
jo
xchg
pop
and
dec
push
nop
add
mov
mov
test
test
bound
mov
xchg
cmp
jno
mov
and
mov
cs
ss
push
push
loope
shl
mov
jns
push
or
push
scas
inc
mov
push
cmp
mov
push
jmp
sub
in
push
jge
xlat
dec
inc
pop
xor
movl
test
decb
aas
fiadds
dec
dec
loopne
dec
inc
dec
ljmp
mov
shll
or
fimuls
dec
pushf
pop
sbb
rorl
and
pop
cmp
add
or
sbb
sbb
cmp
mov
cld
lods
add
xor
incl
xchg
sub
enter
ds
test
out
inc
out
aad
outsl
inc
jno
test
loop
add
jp
jns
cmp
jnp
ss
out
jb
clc
addb
loop
fcoml
xchg
loope
push
sub
jo
mov
sti
jne
cmp
or
dec
nop
nop
or
out
push
xor
sti
pop
and
lea
sbb
inc
mov
mov
in
inc
push
pop
sbb
mov
fsubl
repz
repz
xor
pop
mov
shrl
push
xor
and
pop
in
call
pop
jg
sub
sub
sbb
cwtl
lcall
adc
xor
inc
scas
aad
cmpsl
gs
in
cld
and
adc
fwait
mov
loop
push
cmpsl
jmp
movsl
inc
into
insb
imul
cmp
push
fisubs
push
cmpsl
jmp
test
nop
push
xlat
subb
mov
test
xchg
mov
push
mov
addr16
mov
std
fcompl
cmpsl
pop
xor
and
xor
add
mov
ss
cmp
pusha
mov
insl
filds
xchg
mov
xor
mov
andl
mov
and
mov
xchg
sub
adc
sbb
fsubs
sub
jae
cmp
cmp
push
fstp
sarl
in
or
push
add
sub
or
mov
add
lcall
sbb
loop
mov
lock
pop
popa
mov
sbb
dec
and
mov
fwait
cmp
push
loopne
and
and
jns,pt
mov
add
fwait
adc
or
dec
mov
sbb
cld
lcall
imul
inc
hlt
or
ficompl
loopne
out
pop
dec
pop
mov
lahf
add
mov
out
jno
adc
xchg
stc
shll
inc
dec
ds
stos
sub
xchg
add
adc
push
std
jecxz
cmp
ret
mov
mov
sub
pop
lods
jp
xchg
inc
dec
lcall
push
stos
inc
fwait
in
shrb
leave
loope
inc
mov
test
add
cltd
fsubrs
jecxz
fidivrs
pop
xorb
sub
call
ss
gs
adc
test
idivl
pusha
jnp
in
imul
nop
mull
enter
popa
mov
mov
pop
pop
ror
dec
inc
pop
gs
or
nop
fnstcw
add
jno
test
jp
or
or
sbb
mov
xchg
fdivrs
jnp
imul
push
jmp
dec
mov
cmp
or
sti
xchg
push
arpl
sbb
pop
repnz
adc
mov
scas
cmp
add
aam
push
arpl
jae
lock
add
idiv
shl
mov
popf
push
insl
shrl
dec
rcr
xchg
jle
mov
mov
and
push
shll
sub
add
mov
scas
mov
std
lods
fildl
in
jo
and
mov
in
jge
les
xor
mov
jg
subl
mov
mov
int
mov
jno
xchg
decl
pop
cmp
mov
xor
xor
test
jmp
cld
add
xor
sti
xchg
sbb
icebp
and
lock
mov
mov
mov
inc
fisubrl
mov
xchg
dec
fwait
or
lods
mov
pusha
xchg
fcmovnbe
pop
and
aas
xchg
cmp
std
arpl
sbb
dec
cmpsb
and
gs
sbb
out
mov
fistl
add
cmpsb
xchg
inc
cmp
je
sahf
lods
ficoms
out
jno
lret
lods
loopne
cwtl
xchg
sbb
es
push
hlt
lods
lods
mov
or
sti
jle
pop
push
fwait
mov
in
mov
je
outsl
and
mov
adc
add
dec
loope,pn
repz
pushf
mov
stos
aaa
jnp
stos
or
xchg
cs
xchg
sub
out
jg
sbb
inc
mov
mov
stc
xchg
cmp
lahf
cltd
pushf
dec
ret
pop
sub
hlt
addb
addr16
cs
hlt
fidivrl
rcrl
std
les
mov
lds
movsl
cmp
sub
ret
fcoml
jmp
mov
inc
sub
mov
or
or
in
push
pushf
test
loopne
sbb
fwait
lds
mov
fldenv
pop
shrb
hlt
add
add
int3
cmp
cmpsb
cmp
repnz
enter
std
push
xor
pop
inc
or
shl
bound
sbb
sarl
xor
scas
pop
push
out
cmpsb
push
add
loope
dec
cmp
je
fcmovbe
jge
int3
lahf
xchg
sub
imul
je
jbe
call
sti
mov
aas
xchg
not
sub
inc
xchg
das
in
xchg
lods
test
das
insb
push
cmc
sbbl
add
ljmp
lock
aas
andb
cmp
je
push
cld
les
lret
push
jmp
and
rcll
pop
call
lock
jo,pn
scas
mov
jo
push
js
aaa
not
xchg
add
jge
icebp
or
or
into
test
dec
dec
cmp
fdivs
lea
jl
inc
repz
js
sti
sub
repnz
stos
push
push
ljmp
or
inc
jecxz
jo
movsl
adc
mov
pop
cmpsl
imull
push
sbb
and
sub
clc
push
daa
mov
lods
inc
lcall
add
cwtl
sub
dec
repnz
xor
mov
nop
imul
pop
nop
loope
sahf
xor
mov
out
adc
mov
ret
jns
cli
out
jns
or
in
mov
cmpb
data16
lahf
xchg
fs
jle
pextrw
sbb
mov
movsb
lcall
mov
movl
cmp
dec
pop
clc
fsubl
inc
sbb
nop
aas
loop
push
mov
pop
insb
xchg
es
addr16
mov
test
dec
cmpb
xchg
mul
shlb
test
xchg
mov
into
outsb
pop
push
in
rep
ljmp
mov
push
and
int
dec
cltd
enter
dec
dec
cmp
sub
sub
stc
lods
xchg
std
stos
cmc
mov
clc
cmpsb
inc
cmp
mov
and
xchg
pop
cmp
pop
inc
call
out
pop
xchg
and
push
ljmp
mov
icebp
mov
fwait
cli
fiaddl
push
js
push
fistpll
cmpl
mov
popf
xlat
adc
push
cltd
inc
dec
repz
in
inc
scas
loope
push
stc
xor
or
mov
sub
js
cmp
ss
sbb
jnp
pop
sahf
push
int3
push
loope
in
ss
mov
int
cmp
sbb
jb
mov
jo
insb
test
jae
jecxz
add
mov
ret
adc
cmp
mov
loopne
cmp
sbbb
sub
loop
jo
popa
adc
test
cmp
test
xor
mov
and
dec
or
in
sub
into
jp
jg
ljmp
lret
inc
loopne
dec
xor
mov
fsubr
jno
push
mov
mov
popf
lods
cmpsb
adc
ficompl
inc
jp
or
out
int3
repz
or
fs
xor
bound
loop
in
cmpb
ss
out
add
jmp
mov
fsubl
out
jg
pop
sub
pop
int
sbb
fdiv
xchg
cmc
mov
iret
pushf
test
enter
push
shll
sub
sbb
ret
rorl
lahf
or
fcmovne
popa
sar
cmp
add
adc
pop
call
sbb
pop
xor
jae
pop
xchg
inc
inc
fldt
xchg
pushf
sub
xchg
cmc
scas
push
ret
inc
xchg
adc
push
push
sub
nop
cmp
pop
jnp
enter
inc
je
pushf
loopne
arpl
int
into
and
xorb
pop
jg
test
dec
mulb
sub
into
push
dec
mov
xchg
sbb
leave
xchg
fwait
sub
push
mov
aam
add
jno
fnstcw
shlb
mov
push
mov
out
inc
std
jnp
je
xor
fimuls
aam
mov
sbb
push
sti
out
cmpsl
jns
fcmovnu
xchg
pop
or
les
add
mov
mov
lea
lret
or
xchg
scas
rorb
cwtl
push
in
sub
sti
cmp
xchg
sub
mov
cmp
stc
movsb
mov
out
mov
xor
xor
sbb
inc
fnstenv
inc
lock
cmpb
lcall
mov
push
cli
jmp
push
shl
dec
lods
dec
fbstp
sub
sahf
inc
xchg
or
ret
enter
insb
xchg
adc
xchg
testb
cwtl
loopne
pop
inc
adc
out
inc
add
push
insl
cli
roll
sti
fidivs
and
adc
aam
stos
xchg
and
outsl
cwtl
call
inc
mov
rolb
dec
addb
fldt
adc
sbb
xor
add
mov
mov
mov
push
movsb
movsl
cli
mov
add
loop
xchg
cltd
push
xor
dec
mov
jae
icebp
lds
repz
pop
das
dec
push
pushf
dec
icebp
dec
rcrl
mov
repnz
cs
inc
imul
mov
sub
xchg
das
cmp
or
adc
xor
test
xchg
or
jmpw
xor
test
gs
fidivl
test
scas
jne
mov
mov
jbe
dec
add
das
pop
loope
jo
mov
loopne
or
cmp
loope
mov
fmull
mov
jb
jl
movsb
adc
fwait
and
and
daa
jle
std
incl
mov
test
fisubl
cmp
rep
ljmp
jl
pop
cmp
dec
sub
daa
pop
xchg
int3
xchg
into
mov
lods
add
mov
sub
and
outsb
lds
enter
xchg
aaa
inc
mov
jl
push
xchg
mov
mov
pop
out
jb
adcb
jp
xlat
push
and
ret
out
mov
nop
dec
lret
inc
and
lea
shr
xor
fdiv
in
fsubrs
rcrl
imull
sti
outsb
fwait
lds
dec
es
push
push
add
push
in
pushf
aad
inc
ret
shrb
add
call
cmp
push
shrb
insl
in
inc
hlt
out
imul
sbb
add
push
mov
push
sub
je
lret
outsb
pusha
lock
cmp
daa
fs
stc
jle
loopne
push
imul
gs
int
push
scas
adc
mov
xorl
ds
je
pop
gs
in
xor
fsubl
cmp
push
sahf
cld
lods
inc
cmpsl
xor
repnz
mulps
fwait
dec
insl
test
add
sbb
leave
popa
jne
fwait
xchg
adc
pop
lret
mov
push
inc
pop
test
adc
xchg
fs
lods
dec
aas
lcall
clc
or
jg
sub
cmp
sub
imul
std
fsubl
mov
hlt
dec
adc
add
aas
or
cmp
adcb
in
or
xor
out
fmuls
arpl
push
fcmovnu
xchg
shrb
mov
pop
jmp
sbb
cmp
jge
incl
dec
outsb
mov
and
or
inc
scas
fildll
mov
loop
push
ror
sti
xchg
inc
adc
push
or
jmp
testl
call
subl
fsubs
push
ljmp
xchg
lret
jp
arpl
jb,pn
cmp
dec
sbb
mov
sahf
sti
mov
push
mov
mov
cmpsb
sbb
ret
mov
jbe
jecxz,pt
out
aad
and
inc
imul
push
pop
cmpl
push
movsl
pop
mov
sarb
mov
call
or
add
xchg
rcrb
adc
mov
adc
rcll
jns
inc
push
xor
test
int
lahf
rcll
push
jnp
sbb
testb
scas
shlb
sub
lret
repz
sub
addb
jg
mov
push
je
call
inc
jge
sarb
sahf
sub
pop
jnp
cmp
idivl
loope
sbb
push
pop
in
mov
fidivl
sbb
pop
push
mov
in
bound
out
ljmp
xor
fstl
add
xchg
loopne
rorb
cmp
popa
loope
ret
dec
aad
xchg
imul
ret
out
adc
fnop
mov
lahf
mov
mov
push
outsl
outsb
adc
lahf
xchg
push
adc
xchg
and
dec
mov
xchg
iret
xor
es
enter
mov
aad
in
sbb
cmp
push
mov
inc
stc
and
xor
je
mov
in
imul
fistpl
scas
adc
pop
testl
jge
sub
lret
and
cmp
push
icebp
mov
ret
inc
sbb
sarb
or
ret
mov
mulb
in
mov
fiaddl
lods
shlb
and
add
in
pushf
mov
pusha
insb
dec
xor
xchg
jl
lock
lret
ret
insl
out
and
cmpsb
negl
xor
test
xchg
xor
and
jg
lock
xchg
js
jmp
out
mov
sub
call
pmaddwd
mov
add
jmp
lds
shll
jle
inc
and
jae
lcall
cmp
rolb
lods
add
pop
fs
fnstenv
and
sti
adc
mov
xor
sub
hlt
fcmovbe
adc
ss
call
hlt
in
pop
xor
pushf
cmp
jo
push
cmpsl
mov
out
xor
inc
inc
pop
cmp
cmpsb
call
ljmp
stc
psllq
sahf
orl
jmp
lret
pop
stc
dec
frstor
cmp
adc
std
pop
inc
dec
mov
mov
push
dec
andb
mov
lds
mov
mov
jb
mov
mov
jnp
mov
add
in
sub
ljmp
sub
mov
mov
mov
mov
lea
and
hlt
adc
mov
addr16
cmp
and
lcall
ja
pop
jmp
enter
sarl
imul
out
cmp
push
call
pop
cmp
mov
jae
insb
mov
inc
jecxz
xchg
imull
mov
shrl
mov
push
xchg
icebp
fdivs
insl
push
inc
clc
mov
mov
dec
out
xor
loop
lret
and
cmc
stos
ds
push
sarl
rolb
xlat
inc
push
sub
fnstenv
nop
jle
sarl
add
push
mov
or
ja
adc
push
mov
dec
movl
sysenter
mov
cwtl
repnz
std
and
in
push
mov
cmpsl
push
sbb
inc
push
lods
push
pop
dec
filds
arpl
pop
int3
mov
fildl
ret
mov
lcall
bound
jecxz
and
pop
pop
push
mov
mov
xor
popf
scas
jnp
and
push
dec
pop
fwait
push
dec
sbb
test
pop
inc
sbb
repz
jl
ret
mov
into
stc
xchg
in
push
lret
cli
data16
mov
mov
push
inc
add
aad
jecxz
out
xchg
lock
popf
shl
push
cmp
and
mov
dec
clc
mov
cmpsl
fdivs
mov
cmpsb
cmp
dec
mov
repnz
shlb
cmp
mov
xchg
mov
insl
lds
xchg
dec
adc
sbb
xor
push
addr16
inc
mov
pop
lea
js
or
sub
pop
icebp
jns
sahf
pop
testl
test
mov
ret
cli
rorl
mov
adc
cwtl
lods
sbb
jl
jge
mov
and
fwait
rol
pop
mov
mov
add
std
inc
out
test
stos
sub
mov
pop
xchg
stos
sub
movsb
sbb
xchg
bts
jb
outsb
test
adc
sahf
fcomip
rcrb
jg
pushf
mov
int
mov
mov
sbb
sub
xchg
adc
mov
jb
sub
add
leave
out
adc
subl
ror
rclb
and
pop
sbb
pop
jbe
cmp
les
pop
add
cli
mov
or
out
jle
cwtl
and
add
mov
sub
mov
cld
jge
mov
js
jp
adc
in
les
jecxz
mov
les
jle
iret
mov
jne
xchg
push
jne
leave
bound
sbb
mov
sahf
mov
sub
xchg
mov
popf
xor
xchg
dec
mov
add
in
mov
cmc
andps
sub
sbb
decb
xor
dec
jecxz
add
sub
push
outsb
jp
aas
push
les
dec
sahf
sub
jne
out
jl
les
adcl
xchg
dec
jb
test
jb
xlat
inc
xlat
inc
mov
adc
add
dec
sub
arpl
jmp
fcom
dec
outsb
imul
dec
xor
out
in
xchg
pop
into
inc
xor
xor
jge
stc
sub
or
mov
adc
out
jmp
scas
add
xor
mov
daa
les
ret
sti
add
sub
testl
sbb
or
lea
loop
and
sub
rolb
or
imul
mov
lock
inc
jb
repnz
arpl
in
xor
scas
pop
ja
out
in
ret
mov
lock
pop
fnstcw
xor
addr16
mov
shlb
jo
mov
pusha
in
or
xlat
pop
cwtl
inc
test
lock
xchg
add
inc
mov
and
push
int
inc
sub
movsl
jle
lret
inc
mov
int
push
mov
mov
push
shll
sbb
dec
dec
inc
fisubl
dec
popa
mov
jno
inc
psubsw
stc
arpl
add
adc
out
xor
push
push
and
imul
sarb
jp
push
pop
aam
jmp
mov
fs
lds
les
push
or
sub
fsubs
int
std
pop
or
xchg
and
std
mov
mov
lret
inc
lcall
jo
lahf
aam
and
inc
cmpsl
mov
add
jge
inc
mov
repz
sahf
lods
decb
loop
mov
aaa
jle
jl,pn
outsb
mov
sub
lcall
scas
imul
mov
mov
xchg
pop
inc
ret
jp
or
test
adc
add
sbb
add
repz
lods
cmpsb
repz
ficoms
idivl
ret
push
lods
xchg
in
cmp
insl
sbb
int
clc
inc
pusha
movsl
dec
popf
adc
pop
in
call
inc
push
mov
jl
inc
jo
call
fcmovnb
subb
in
bound
bsf
mov
jecxz
xor
subl
jmp
cld
ret
mov
hlt
stos
sahf
push
testb
shrl
fs
addb
mov
or
mov
pop
sub
and
add
ja
mov
mov
dec
xchg
jp
aad
enter
inc
repnz
or
std
orb
mov
jno
pop
fsts
push
stos
add
xlat
movsb
and
and
pop
fcomp
sub
jl
pop
pop
pop
je
mov
push
cmp
xlat
sub
mov
sbb
pusha
xchg
es
mov
fisttpl
pop
inc
mov
lret
es
pop
sbb
mov
repz
xor
xchg
cmpsl
mov
fisubl
and
sub
js
add
iret
testl
mov
aaa
lret
adc
insl
pop
pop
dec
dec
loop
fdivrs
ja
std
stos
cmp
mov
dec
out
leave
mov
insb
inc
add
dec
out
je
aas
mov
pop
and
xchg
push
adc
fisubrs
and
sarl
fs
movsl
and
test
imul
sbb
movsl
test
lods
pushf
fidivl
jae
enter
jno
in
add
and
xchg
pop
leave
lds
pop
sub
push
shll
adc
mov
fcomip
inc
sbb
pushf
nop
rolb
push
mov
push
icebp
lea
mov
sub
and
jmp
adc
or
xchg
les
push
mov
arpl
add
jle
daa
lret
sahf
mov
adc
dec
out
popa
jle
in
adc
xor
sbb
pop
mov
ja
jp
jb
into
adc
pop
fiadds
stos
movsb
or
cmp
dec
stc
out
arpl
pop
outsl
add
movsl
push
adcl
cmpsb
ret
push
mov
popf
cs
rolb
and
fnstcw
push
jmp
xchg
xchg
ss
fstpl
sbb
sub
sub
je
js
out
imul
syscall
jp
in
bound
ja
push
mov
inc
arpl
dec
add
xor
jbe
pushw
shlb
jg
push
push
rclb
nop
sub
sbb
fnsave
mov
call
insb
lds
adc
setge
stos
xlat
inc
mov
dec
jmp
mov
scas
mov
inc
jbe
js
negl
js
jbe
idivb
jne
ret
and
rcrl
bswap
int
iret
sub
popf
or
jnp
stos
and
shrb
jb
ja
sti
jbe
popa
inc
xor
mov
xchg
out
cmp
pop
test
adc
bound
shl
cmp
xchg
pop
push
inc
dec
outsb
push
into
sub
gs
adc
mov
inc
mov
xchg
cld
xor
in
adc
push
ja
jmp
popf
movsb
out
iret
pop
adc
les
in
sub
loopne
rcll
xor
mov
std
and
ljmp
adc
lcall
jecxz
addb
jge
xchg
lods
add
jecxz
and
jbe
jne
test
scas
clc
out
int3
bound
xchg
push
cld
jno
mov
jae
mov
das
sub
fiadds
push
leave
aaa
js
lods
xchg
cmp
into
cld
insl
pop
lcall
jne
cmpsb
jae
pop
jecxz
push
xchg
jl
cmp
push
sub
movb
xor
lock
mov
push
xor
lea
inc
cmp
subl
xor
mov
lods
push
repnz
cwtl
jp
inc
lret
orl
push
mov
jge
mov
das
mov
push
jns
cli
and
popa
jbe
pop
ja
and
das
out
test
sub
into
dec
pop
test
out
out
sub
stos
sub
pop
inc
and
sbb
in
bnd
filds
in
shr
test
add
fidivrs
cwtl
pop
lock
xchg
and
pusha
xchg
mov
pop
stc
push
mov
or
cmp
test
dec
rclb
es
mov
into
inc
aad
popa
jo
sbb
stc
xchg
movsl
sub
cmp
shr
mov
cmpsl
xor
lock
cmpsl
test
icebp
icebp
movsl
fnstsw
and
dec
adc
in
dec
dec
bound
mov
stos
std
out
loopne
sahf
mov
mov
add
mov
or
sbb
adc
shlb
or
add
fcmovne
movsb
sahf
int
fwait
int3
test
addr16
pop
pop
aas
test
decb
mov
test
push
jae
or
hlt
fnsave
out
ret
pusha
js
repz
loopne
lods
das
xor
or
jbe
add
or
add
cmp
cmp
pushf
add
cmpsb
fsubr
adc
adc
xchg
push
xor
xchg
adc
add
xorl
adc
sub
add
cli
add
in
jg
loopne
ror
fimuls
sub
aam
xchg
es
out
pushf
sbb
xchg
jb
cmp
jo
test
aaa
loop
divl
adc
xor
stos
in
mov
fwait
adc
mov
lods
mov
jns
adc
sti
movsl
cmpb
inc
xchg
lods
mov
mov
lcall
push
es
ss
das
repz
xchg
mov
das
jmp
mov
mov
movsb
inc
pushf
test
jae
mov
cs
lods
sahf
loop
dec
sub
push
jb
or
or
nop
insl
aam
aam
and
fistpll
je
adc
push
inc
je
sbb
pop
cmp
jecxz
mov
ffreep
rcl
xchg
stos
bound
mov
test
mov
std
pop
sbb
cli
mulb
pop
and
mov
mov
jge
xchg
inc
fnstsw
fsubr
fst
sbb
pop
ja
addl
mov
push
leave
mov
add
cmc
mov
xchg
lods
mov
jecxz
mov
mov
sub
mov
mov
fninit
mov
loope
dec
cmpsb
movsl
xchg
in
push
mov
xchg
fmull
lea
cmp
and
push
xchg
jne
out
push
jnp
push
repz
pop
inc
rorl
and
pop
pop
xchg
jecxz
jnp
notb
sub
xor
cmp
jne
mov
inc
push
notb
outsb
hlt
xchg
lea
mov
mov
or
stc
mov
leave
sub
and
loopne
inc
lahf
mov
sti
pusha
scas
repz
gs
adc
mov
mov
xor
push
insl
hlt
fnstenv
mov
jb
lcall
sub
bound
roll
push
add
gs
arpl
xchg
mov
sbb
cmp
cmp
or
or
test
sub
xor
push
inc
addb
dec
sbb
pop
sahf
jle
enter
es
push
adc
fsub
into
and
add
xchg
out
lods
repnz
movsb
stos
add
cmp
ljmp
loopne
cmpsb
aad
rcll
nop
xor
jmp
mov
stos
xor
shr
mov
mov
jb
clc
mov
out
inc
movsl
into
sbb
adc
and
cmpsl
sbb
pop
add
or
cwtl
jbe
loop
stos
mov
ss
std
popa
inc
pop
jne
inc
xor
add
stc
push
inc
pop
adc
mov
jg
test
jle
add
mov
les
std
sub
bound
cld
mov
inc
xchg
in
mov
inc
add
mov
jl
sbb
stos
les
or
mulb
sub
jle
aad
icebp
ret
rorl
popa
adc
orl
cs
adc
or
mov
mov
cmp
push
fmul
sahf
gs
test
test
xor
sarl
shlb
faddl
xchg
pushl
rcr
mov
nop
mov
dec
cmp
inc
xchg
inc
jmp
rclb
jl
movsl
imul
lea
fidivrs
dec
push
nop
xor
or
pop
in
sub
mov
in
jle
xor
push
mov
mul
movsb
dec
adc
xchg
insl
test
scas
test
std
lock
imul
mov
ret
clc
inc
or
je
mov
push
notl
mov
fcomip
push
movsl
imul
fistl
inc
cld
int3
mov
fst
rcl
cltd
and
in
aas
test
add
pusha
adc
sub
sbbb
les
mov
pop
cli
shl
ficoml
enter
lea
pop
jg
and
aam
daa
jnp
jae
adc
aaa
adcb
dec
pop
ret
loop
data16
std
in
mov
mov
mov
inc
xor
xor
int3
dec
cmpsl
insb
cmp
or
mov
push
push
sbb
int3
dec
or
add
popf
add
stos
aad
sbb
insl
clc
dec
rorl
jo
push
xchg
push
adc
mov
roll
out
test
push
jae
pop
movzbl
push
out
bound
fcmovu
jo
pop
mov
neg
icebp
mov
xor
scas
and
push
mov
test
insb
inc
cmp
or
or
inc
addl
or
pop
lcall
lea
inc
sbb
inc
incl
lock
jg
int
pop
pushl
push
add
shl
adc
add
cmp
pusha
mov
cmp
push
adc
clc
cmp
pushf
xor
push
fsubrp
lods
sub
cmpl
pop
stos
cltd
daa
pop
inc
mov
adc
jl
scas
repz
mov
sbb
xchg
push
xchg
inc
repz
cmp
movsl
jge
int3
sbb
cmp
or
fisttps
mov
xchg
inc
ss
mov
insl
xor
xchg
lcall
pusha
ljmp
mov
aam
mov
call
int
jle
or
in
cmp
mov
gs
ds
sub
cmpsl
sahf
test
push
popa
jb
mov
lea
outsl
add
shll
sarl
inc
icebp
jl
es
out
shl
jnp
nop
ja
add
repz
dec
inc
clc
aas
sub
fidivl
popa
push
mov
jnp
add
cmc
sub
and
push
adc
sarb
xchg
mov
aam
je
jne
sub
lods
ret
into
and
pushf
fisttpl
into
ja
cli
das
mov
push
or
or
shll
xor
inc
movsl
inc
test
call
hlt
mov
jmp
pop
push
jb
xchg
lds
leave
js
and
adc
xchg
push
jno
or
xchg
js
and
mov
and
push
xchg
xchg
icebp
movsl
out
mov
inc
mov
xor
popa
aas
inc
pop
cmp
es
sbb
sbb
testl
mov
mov
dec
jmp
int3
imul
push
mov
or
test
sub
xor
cwtl
xchg
push
and
xchg
hlt
std
stos
xlat
cmpb
mov
sbb
je
imul
clc
pushf
iret
cmp
test
sti
imul
pop
shlb
xchg
orl
icebp
repnz
int3
mov
movsb
sahf
mov
popf
and
out
sub
in
pop
xchg
cmc
add
push
push
arpl
or
pop
fprem
in
jo
mov
mov
add
outsb
in
stc
push
std
sub
dec
fs
pop
add
inc
je
mov
inc
mov
cs
and
fnsave
pop
jge
arpl
cli
inc
pushf
call
cmp
sbb
das
ja
sub
xor
jo
cmp
mov
or
dec
popf
ja
sti
movsb
pop
inc
push
cmp
xor
inc
pop
push
jecxz
rcll
pcmpgtw
popf
into
mov
mov
shlb
sbb
inc
xchg
inc
out
dec
mov
pop
push
popf
dec
out
scas
cmpb
out
mov
add
lds
imull
or
insl
or
shlb
mov
data16
ror
and
mov
mov
aas
fcoml
inc
pop
mov
jno
sbb
push
sbb
add
xchg
call
insl
notl
sbb
push
jb
sub
xor
cwtl
in
dec
mov
lahf
mov
lods
pop
mov
divl
jecxz
jae
pop
jecxz
xlat
addl
xchg
sbb
mul
cmp
sarl
pop
mul
mov
jno
mov
cmpsb
les
jb
js
inc
push
fdivp
mov
push
xor
jle
cmpsl
cmp
shll
sub
jmp
movsb
out
jns
jecxz
aad
test
mov
sbb
mov
imul
hlt
inc
mov
aas
in
adc
add
adc
adc
push
sub
call
int
jo
and
sar
xor
movsl
inc
pop
or
sar
shll
loop
sbb
stos
int3
mov
idivb
aaa
fsubrs
enter
mov
lcall
es
mov
add
pushf
pushf
pusha
xchg
lahf
sbb
cld
mov
roll
inc
pop
adc
or
stos
cs
andb
jle
sbb
icebp
into
fsts
ret
add
pushl
or
sub
inc
popa
pop
outsl
mov
sbb
out
or
mov
ljmp
movsl
mov
out
adc
les
in
notb
ja
xchg
adc
fsubs
repz
iret
jnp
imul
addr16
in
jno
sbb
out
imul
xchg
test
jge
push
inc
fcoms
fidivs
fistpll
dec
dec
adc
or
add
cmc
loope
cld
loop
mov
pop
cmpsl
addb
cmp
jmp
and
test
dec
jecxz
push
and
jl
fistpll
dec
xorl
out
enter
xor
loopne
pop
cmpsl
lods
push
adc
xchg
adc
or
add
aaa
xchg
adc
push
cmpl
pop
and
adc
cmp
fmul
enter
jecxz
cmp
mov
xchg
popa
add
aam
push
push
pop
sahf
pop
stc
push
mov
adc
push
cwtl
add
add
push
in
ds
ss
inc
jbe
les
scas
and
iret
and
int3
pop
incb
mov
lret
aam
lods
lret
adc
sub
mov
imul
test
sub
add
loopne
repnz
imul
jne
pushf
loop
es
dec
sbb
xor
fs
sbb
movsb
xchg
lahf
cltd
xchg
lock
mov
sbb
dec
clc
inc
mov
fucomip
mov
test
scas
add
mov
lds
push
mov
sub
nop
les
fistps
pop
push
lds
mov
outsb
shl
fnstcw
add
ljmp
xorl
push
test
out
cmp
or
sarl
mov
fstl
xlat
fwait
mov
cmp
inc
sti
imul
lret
cltd
or
sbb
in
je
inc
push
dec
xlat
or
ds
dec
std
out
push
mov
xchg
pop
rcrl
in
cmp
fadds
adc
bound
push
pushf
or
sbbb
jle
xchg
sub
xchg
ds
push
sti
fucomip
mov
iret
sbb
lahf
jae
scas
addl
cmp
lock
inc
push
jmp
sub
insb
xchg
mov
dec
jecxz
push
add
out
sti
mov
test
clc
sub
add
popa
movl
adcb
and
decl
je
adc
sbb
out
jns
fs
inc
imull
xlat
cmp
repz
push
mov
mov
inc
pop
mov
push
mov
mov
imul
sti
adc
enter
in
xchg
sbb
ljmp
add
mov
adc
jl
xchg
push
or
pop
fisttps
cmp
movsl
mov
adc
jl
or
and
jge
pop
pop
dec
popf
lahf
xchg
dec
and
out
loopne
enter
push
insb
in
add
xor
data16
inc
and
mov
sbb
ret
or
dec
jge
jo
lods
dec
mov
loopne
jecxz
or
nop
lods
cmp
loope
cmc
daa
ret
lahf
xchg
push
addr16
mov
fsubrs
jns
mov
pop
push
mov
push
popf
out
jl
adc
mov
cmp
mov
daa
push
xchg
dec
dec
das
push
mov
clts
fistpll
in
cmp
jnp
cli
sbb
add
mov
jns
divb
cmpsl
sbb
jmp
jbe
cmp
fbstp
xchg
loope
idivb
dec
stc
test
jb
data16
scas
push
fdivs
cwtl
adc
jbe
mov
in
outsl
jg
inc
adc
sbb
mov
sbb
jg
cmp
cmpsl
stc
cmp
lods
push
js
outsl
xor
scas
imul
sti
das
test
lret
pop
das
out
enter
and
mov
hlt
mov
pop
mov
cmp
inc
insl
sbb
scas
enter
cli
std
or
xchg
lahf
outsl
inc
lcall
mov
jnp
jl
or
xchg
add
push
mov
mov
jbe
outsb
movsl
push
sbbb
fistps
out
test
fildll
or
test
mov
xorl
cli
nop
lock
jnp
icebp
lds
xchg
in
mov
in
movsb
or
scas
lret
xchg
mov
cli
or
jae
adc
inc
movsb
adc
xlat
sti
xchg
jbe
xor
xchg
movsl
add
mov
sub
and
push
and
into
inc
and
push
jmp
jl
popa
mov
sbb
add
movb
pop
cmp
in
aaa
push
fnstenv
ja
in
fs
shl
xor
insb
or
lock
insl
insl
sub
xchg
out
xor
ljmp
fucom
pop
sub
inc
xor
ret
leave
insl
adc
mov
mov
inc
mov
movsl
mov
jmp
push
mov
jecxz
std
pop
lods
mov
xchg
stc
ret
dec
inc
mov
imul
mov
ret
bound
xor
adc
mov
fwait
jp
lahf
ror
or
and
add
jmp
mov
sub
ja
mov
insl
test
test
dec
add
loop
mov
out
xor
outsb
call
adc
adc
cld
dec
pop
push
shl
adcl
out
dec
xchg
xor
mov
mov
adc
push
sbb
mov
loopne
je
fsubrs
mov
jge
sbb
add
add
idivl
mov
int3
dec
stos
mov
push
mov
dec
lods
pcmpeqb
push
rolb
push
aas
add
push
cmp
or
sub
cmpsl
jo
pop
mov
ds
lds
test
or
negb
mov
mov
or
cltd
mov
xchg
clc
or
push
out
repnz
add
mov
xchg
push
cmpb
xor
inc
inc
enter
int3
insl
mov
push
dec
inc
jns
fs
dec
adc
nop
mov
and
clc
cli
inc
or
fidivl
fisttps
push
movsl
push
repnz
cmpsb
test
lret
mov
imul
aaa
jg
cs
push
mov
push
aas
out
sub
sti
push
imul
scas
xchg
pop
test
insl
push
mov
adc
pop
xor
adc
adc
sbbb
jnp
hlt
mov
fnstcw
cmp
movsb
adc
mul
mov
sub
jge
dec
test
cli
sbb
pop
cmc
adc
rcrb
adc
scas
sbb
add
push
fcoms
es
cmp
test
std
stos
xchg
loopne
dec
pushf
je
mov
dec
cmpsb
and
out
clc
imul
adc
jge
gs
push
mov
push
cwtl
xor
jbe
sbbb
test
cmpsb
mov
add
cmpsb
or
popa
int3
add
xor
xor
xor
push
dec
mov
rorl
cmp
lcall
fisubrl
mov
xchg
xor
dec
mov
mov
fucomp
xchg
push
mov
adc
aaa
cmp
push
xchg
cmp
out
jl
imulb
call
jmp
dec
push
jl
lret
mov
mov
test
xchg
xlat
cmc
dec
mov
dec
jne
cs
jle
arpl
ljmp
pop
cwtl
mov
jns
add
adc
pop
bound
iret
jl
or
mov
xor
out
cmp
jecxz
mov
push
popa
dec
mov
push
sahf
and
cmp
cmp
xchg
pop
lds
movsb
stos
push
in
jge
aam
xchg
and
test
and
xor
or
or
loop
inc
les
xchg
jge
sbbl
aam
ret
inc
xchg
jecxz
push
add
movsl
pusha
outsb
jb
dec
lds
out
dec
in
cmp
rcl
cmc
testl
and
or
test
je
xlat
push
or
fcompl
and
inc
jae
mov
push
test
push
in
xchg
cli
js
push
shrb
push
and
ret
push
jnp
adc
dec
mov
es
fnstenv
inc
xchg
test
mov
out
into
lcall
fldz
xor
pop
add
mov
adc
mov
and
xchg
jo
sbb
flds
sarb
push
scas
ficomps
mov
mov
cmpl
jnp
jmp
and
and
xor
push
loop
std
push
lcall
nop
les
xor
mov
jnp
popa
pop
inc
ja
xor
push
aad
sbb
aaa
lods
bound
sub
sarb
sub
inc
jno
add
hlt
or
stos
cli
fbld
enter
mov
jmp
and
mov
jb
push
mov
dec
and
or
mov
lahf
push
stos
cmpsl
nop
shll
in
dec
lret
dec
lret
iret
cld
add
sbb
mov
push
xor
jae
or
adc
in
lret
jle
test
ret
out
adc
or
xchg
xchg
test
push
mov
dec
fwait
and
in
cmc
fiadds
imul
movsl
and
or
jecxz
xor
repz
jmp
lock
fstpl
cld
shr
je
adc
insl
lret
dec
pushf
sub
jg
rorl
sbb
push
push
rorb
jmp
sub
xor
pop
out
dec
add
pop
adc
jne
cltd
dec
xchg
or
dec
stos
or
loop
fcomps
push
outsl
lret
push
mov
jb
sarb
push
lret
push
sub
shl
pop
in
sub
outsb
xor
leave
sub
mov
push
clc
loope
cltd
mov
js
dec
mov
fsubl
or
cs
xchg
inc
inc
or
into
inc
push
out
lds
add
sub
mov
push
mov
xchg
test
jecxz
roll
repz
es
test
cmp
and
sbb
sbb
adc
mov
mov
jbe
xor
pop
lret
add
adc
rcrl
xor
aam
add
lcall
test
lods
mov
cmp
into
gs
sub
mov
sub
int3
xchg
and
jae
stos
leave
mov
mov
mov
jno
adc
jg
test
dec
lret
sub
add
jmp
push
sahf
mov
adc
xor
cld
xor
jge
icebp
inc
and
mov
inc
add
add
xchg
test
mov
and
hlt
outsl
into
js
or
aaa
sub
sub
sbb
repz
test
lret
pop
dec
ret
mov
xchg
lret
rolb
push
notb
ljmp
sbb
add
push
and
clc
loopne
lods
leave
or
jnp
popa
clc
fwait
test
mov
mov
push
add
add
mov
loopne
les
mov
rcl
dec
ret
cmp
popf
aam
fistpl
jmp
jnp
jmp
xor
xchg
enter
cmp
jbe
push
inc
sbb
xor
mov
jno
mov
cltd
pop
mov
pop
fadds
mov
stos
sbb
ret
xor
decb
pop
orb
into
push
sysexit
xor
dec
aam
adc
inc
mov
push
xor
into
movsl
mov
dec
pop
aad
cmpl
xchg
ret
vpcmpgtd
imulb
aas
je
jbe
dec
and
pop
add
ds
insb
push
inc
outsb
in
ss
or
jbe
lahf
scas
sub
cmpsb
mov
call
sbb
jecxz
inc
dec
je
push
fwait
cmp
cmpsl
adc
push
add
push
or
push
hlt
out
push
cs
std
or
cs
js
cli
aam
cld
jb
outsl
pushf
out
cmp
cmc
imul
insl
and
out
insb
mov
scas
jmp
insb
sub
lret
loopne
adc
repz
or
mov
add
mov
adc
cmp
popf
arpl
inc
pop
addr16
pop
fucom
cli
xor
cmp
inc
and
jae
sub
cld
push
cmc
and
cmpsb
jge
push
rorl
inc
repnz
pusha
stc
sub
xor
cld
jmp
outsb
jns
pop
xchg
add
data16
push
push
adc
push
bswap
cmp
or
lahf
cltd
dec
test
cmpsb
jns,pn
pop
imulb
jp
mov
sahf
mov
ret
jle
mov
mov
sti
mov
jmp
inc
push
xchg
out
and
sub
xchg
jecxz
inc
inc
sar
jmp
cs
lret
les
notb
jmp
sbb
aad
into
adc
jno
stos
scas
push
icebp
lods
jne
popa
in
mov
call
test
repnz
fwait
push
xor
and
jge
addb
and
mov
movl
sub
sub
xor
cmp
mov
les
leave
pushf
push
add
int
mov
adcb
lock
jmp
repnz
jecxz
es
pop
cmp
cli
lret
stos
addr16
test
cltd
ret
inc
xlat
aaa
inc
push
xor
and
rcll
or
ss
add
push
dec
sbb
les
adc
fisttps
dec
shlb
sub
sti
bound
arpl
inc
mov
xlat
mov
cltd
xor
inc
mov
daa
inc
mov
adc
pop
sti
lret
mov
and
pop
sbb
push
shll
xor
rol
pop
dec
mov
cld
mov
cmp
lock
sbb
mov
out
xor
adc
daa
ja
sbb
jg
dec
cs
repz
sti
add
pop
pop
insb
mov
cltd
mov
aam
and
mov
enter
sahf
jp
mov
cmp
mov
int
lock
iret
fwait
fs
inc
cmp
mov
cmp
push
mov
sbb
repnz
or
sbb
jg
into
sti
lcall
jno
sbb
push
add
xchg
data16
pop
movsb
pop
jg
pop
pop
inc
add
int
push
outsl
ret
stos
adc
rolb
push
add
push
xor
movsb
and
xchg
dec
jb
cld
xor
mov
pop
mov
adc
inc
lahf
jmp
sbbb
push
jae
jnp
push
xchg
fst
adc
stos
out
in
rolb
adc
std
or
fs
js
mov
dec
xor
cmpsb
repz
negl
inc
mov
dec
gs
add
repnz
aam
nop
in
dec
int
jae
and
popf
xchg
xchg
pop
imul
fstps
lods
mov
cmpsb
sbb
mov
sbb
push
mov
test
pop
lock
popf
cmp
or
inc
mov
mov
syscall
test
in
inc
out
je
stc
mov
pop
insl
push
loopne
cmc
and
fildll
sub
mov
or
mov
lahf
stos
js
push
xchg
mov
push
clc
cli
xor
nop
lds
nop
jbe
sub
lods
jns
jae
xchg
sub
pop
stos
fs
adc
push
xchg
cwtl
xchg
das
mov
daa
cld
fidivrs
es
test
test
cmc
mov
stos
mov
fdivp
std
add
mov
dec
iret
out
sub
push
sbb
mov
mov
es
mov
int
pop
mov
cmpsl
push
push
xchg
mov
call
mov
xlat
imul
pop
mov
or
fiaddl
mov
cmp
flds
mov
inc
mov
inc
loop
adc
adc
jb
clc
sahf
pop
cli
dec
orl
xchg
mov
cwtl
std
scas
mov
xchg
imul
pop
scas
pop
addb
jno
outsb
fildll
sbb
adc
cmp
cmpsb
call
dec
push
xor
pop
mov
neg
jg
dec
test
test
call
pop
imul
push
sub
hlt
hlt
push
cltd
jno
sub
popa
add
cmp
mov
adc
clc
xchg
movsb
orl
sahf
rcrl
lods
mov
icebp
dec
inc
and
in
scas
imul
xorl
adc
and
ds
jg
push
dec
xorl
jae
fs
xchg
xlat
pop
cmp
mov
mov
jmp
adc
test
ljmp
call
aam
inc
xchg
sbb
add
stc
dec
cli
and
andb
in
icebp
pop
movups
mov
add
dec
adc
jo
and
daa
movsb
sbb
pop
xor
add
push
fndisi(8087
dec
lods
and
mov
pop
push
cmpsl
xchg
push
insb
or
out
insb
adc
jbe
jae
jle
mov
add
cmp
xchg
pop
sub
jne
imul
out
jecxz
es
not
call
sti
adc
mov
dec
sbb
cmp
ljmp
pop
and
in
sub
xor
test
in
mov
divb
out
jl
inc
push
ret
inc
repz
and
js
pop
pushf
pop
fs
icebp
xchg
push
icebp
xchg
insl
loop
test
mov
sub
cmp
out
pop
jl
aad
cmovs
lea
ss
pop
std
leave
pop
push
sbb
rcrl
xchg
daa
or
pop
fidivrl
push
xor
cltd
add
sub
mov
xchg
cwtl
pop
bound
mov
fisubl
mov
mov
dec
push
jnp
in
and
push
xor
test
or
mov
call
popa
push
mov
mov
jo
mov
iret
jecxz
mov
lret
jne
jmp
sti
lcall
divl
test
mov
adc
in
fldcw
popa
out
outsb
push
jb
rorl
int
addr16
fisubrl
push
xchg
in
push
and
xchg
test
or
push
dec
bound
popa
mov
inc
xchg
xchg
repnz
sbb
cmp
loopne
sbb
jle
mov
sub
out
sbbl
test
jmp
or
lods
dec
pop
es
jmp
xchg
call
dec
into
pop
popf
mov
inc
mov
add
popa
sub
ljmp
pop
jns
pop
iret
notb
stos
js
test
sti
pop
or
stos
push
mov
xchg
fisttpll
mov
push
es
push
stos
loope
leave
pushf
jecxz
lock
dec
inc
pop
das
pop
push
outsl
dec
js
cmpsl
mov
ja
jecxz
rcl
dec
mull
mov
cmpsl
or
inc
xchg
dec
xchg
mov
lea
mov
push
movsl
hlt
hlt
ss
or
ss
ret
scas
repnz
fs
movsb
jno
imul
dec
jno
into
adc
jo
pop
pop
mov
jb
pop
ja
repz
scas
shlb
cmp
sbb
adc
mov
mov
sub
int
lahf
inc
mov
fildl
lret
cmp
or
nop
xchg
jno
mov
push
xchg
in
inc
inc
fnsave
inc
push
xchg
cmp
sbb
out
inc
jecxz
dec
out
dec
add
jae
mov
cmp
jle
xchg
xor
sbb
mov
fcomp
xor
xchg
enter
mov
sub
loopne
popf
sbb
stos
cmp
ja
hlt
xor
mov
popf
ds
xchg
aad
xchg
movsb
fs
mov
dec
popf
nop
int
into
test
and
mov
mov
std
xchg
cmpsb
xor
lret
fbld
and
popf
in
mov
mov
pop
cltd
sahf
fcom
sbb
push
dec
jecxz
test
insb
rolb
insb
pop
xor
je
in
in
inc
jge
mov
sub
jp
xor
add
sub
sub
pop
sub
nop
outsb
sub
pop
jb
mov
in
mov
sarb
add
adc
push
mov
addl
std
aas
cmpsb
stos
dec
add
cmpsb
mov
cmp
and
aas
sbb
dec
dec
dec
popf
push
icebp
xor
and
mov
pop
mov
loope
decb
outsl
xor
inc
sbb
xchg
xor
mov
cmc
sarl
mov
arpl
jge
dec
dec
ljmp
lcall
xchg
es
sbbl
into
aam
xchg
repnz
xchg
std
fisttpll
cltd
movsl
mov
mov
sarl
hlt
and
push
fwait
mov
std
aaa
cmpsb
out
push
xchg
pop
mov
orl
subl
adc
or
pop
stos
jecxz
inc
cmc
sub
clc
mov
jmp
sbb
sub
loop
ss
jbe
and
dec
sahf
fwait
push
outsl
cmp
jae
push
sahf
outsl
xchg
lds
mov
sti
insl
lcall
insb
pop
push
mov
dec
lahf
iret
ret
mov
gs
mov
lea
push
xchg
pushf
jo
mov
incl
cmp
jp
jecxz
and
stos
ss
mov
and
dec
int3
lret
in
or
mov
fcmovne
add
dec
enter
pop
xchg
cmp
in
jmp
ds
cmp
in
sbb
push
adc
popa
sub
syscall
xchg
jns
lds
popf
xlat
scas
scas
jmp
cltd
shufps
cmp
mov
out
jnp
pop
roll
or
mov
lods
jne
shrb
xchg
cmp
mov
or
mov
fildl
push
repnz
pop
cmp
popa
test
adc
sti
stos
js
dec
xorb
jecxz
in
or
jne
or
js
stos
push
divl
adc
pop
cmp
xor
add
lret
push
cmp
adc
jae
sar
mov
hlt
iret
test
test
outsl
xchg
aam
test
xor
lods
inc
adc
jno
push
loop
or
dec
mov
je
pop
jg
adcb
mov
jo
jl
sub
bound
mov
je
jl
jg
jmp
mov
popa
lds
bound
shll
adc
push
adc
jmp
cmp
xor
jge
xor
scas
xchg
jge
mov
adc
loopne
add
adc
mov
test
add
out
enter
dec
fs
in
mov
rolb
xchg
clc
jns
add
insb
repz
imul
aas
xor
flds
cmpsl
rorl
xor
arpl
cli
push
int3
sbb
std
fwait
inc
push
lret
jnp
mov
cmp
pop
cli
xchg
adc
popa
leave
cs
out
lcall
out
rorl
add
outsl
les
sbb
jmp
orb
adc
lea
and
imul
stos
dec
cvtps2pd
ffreep
adc
and
mov
mov
pop
into
out
addr16
push
push
inc
mov
pop
popf
push
icebp
push
sub
cwtl
outsb
stos
inc
repz
sti
and
xor
imul
in
test
pop
jo
jb
test
sub
mov
aas
jl
aas
mov
inc
xor
pop
dec
pop
inc
dec
sbb
mov
jg
lock
pop
adc
fs
test
inc
jb
push
ds
mov
push
mov
mov
pop
cmp
xchg
add
scas
ret
push
jp
fcomps
sbb
rcr
adc
push
fbld
fs
push
imulb
and
ret
je
xabort
pop
xor
dec
mov
mov
outsb
push
pop
in
xchg
loop,pn
out
mov
jno
lcall
xor
pop
adc
out
and
cmpsb
sub
inc
cmpsl
loope
inc
add
pop
ljmp
lods
fsts
iret
out
pop
repnz
mov
sar
mov
sti
xchg
clc
les
and
aam
cmovbe
sti
in
imul
or
xchg
dec
test
pop
inc
out
xchg
or
cmpsb
sbb
cltd
adc
cltd
add
adc
scas
xor
test
fiaddl
or
sbb
xchg
pop
in
push
movsl
adc
dec
jnp
daa
adc
pushf
leave
mov
nop
dec
scas
pop
rorb
cmp
push
push
xor
div
push
lret
jmp
icebp
push
mov
test
push
mov
test
or
mov
js
jae
in
shr
les
sahf
sar
cmpsl
andb
sbb
mov
stc
mull
imul
shlb
movsb
push
cmp
jb
adc
pusha
jno
aaa
test
mov
pop
jne
push
or
mov
cmp
int3
sahf
add
cld
push
push
mov
aam
push
mov
xor
inc
mov
sbb
test
frstor
shll
adc
loopne
mov
rorb
dec
fisttpl
mov
and
iret
out
das
int
xor
test
popa
rol
pop
sar
enter
mov
ss
fists
shll
push
inc
lret
dec
pop
adc
push
ljmp
into
cmpsl
icebp
in
push
mov
mov
xor
cmpsb
idivb
dec
pop
and
cwtl
movsl
pop
cmp
insb
mov
dec
out
dec
lods
scas
mov
pop
stos
fidivl
add
mov
mov
repnz
insl
bound
xor
and
mulb
or
push
gs
adc
rcl
loope
fdivrs
sbb
jne
cmpsb
jmp
xchg
jno
daa
fbld
aas
push
test
sbb
call
or
mov
dec
lea
jno
push
jbe
inc
adc
cmp
add
or
fnstcw
xchg
and
push
stos
sub
lret
sbb
arpl
lahf
out
addr16
out
ds
pop
je
ret
pop
jnp
je
sahf
ror
inc
xchg
loopne
cltd
xor
and
outsb
loopne
inc
mov
sti
nop
add
stos
mov
xchg
mov
fwait
cltd
mov
cmp
jmp
xor
mov
insb
add
push
push
mov
or
ljmp
insl
aaa
cld
adc
lret
fucomi
adc
insl
into
adc
and
ss
or
cmp
xor
mov
jbe
jecxz
sahf
div
push
mov
repnz
add
and
dec
pop
and
add
jmp
cld
xor
mov
enter
push
arpl
fst
fwait
pop
add
adc
inc
mov
loope
push
pushf
jnp
gs
notl
in
jmp
sahf
loopne
jmp
pop
push
mov
jge
xlat
out
dec
cmp
push
lods
pop
sub
rdpmc
and
imul
fcomps
pop
mov
push
jns
jge
fwait
push
and
add
cs
cs
add
stc
lods
fwait
and
jbe
dec
sbb
xor
pop
jne
rorl
and
nop
mov
daa
and
sarb
aad
jecxz
mov
sub
mov
sbb
xor
pop
inc
inc
cmpsb
cmp
mov
xor
out
or
cs
mov
add
mov
pop
jnp
and
lods
xor
popa
or
loope
mov
inc
je
lds
mov
out
push
mov
ljmp
fsubrp
jne
xchg
lret
rclb
xchg
pop
push
mov
sub
lock
cmp
fnstenv
dec
pushl
mov
sub
es
adc
mov
ss
out
lods
fbld
pop
or
jbe
int3
fsubp
dec
sbb
ds
shll
inc
xor
rcr
xlat
sub
mov
xchg
aas
add
sub
mov
std
lahf
jge
popf
faddl
xchg
adc
notl
add
popa
or
test
cmpsl
jo
mov
aad
pop
pop
adc
arpl
popa
cmpsl
stc
push
loope
or
mov
push
outsb
mov
in
xchg
or
sahf
pop
sti
test
js
pop
and
scas
pop
xor
and
mov
and
mov
xor
mov
jmp
xchg
clc
sbb
dec
pop
lods
add
in
repnz
and
pop
inc
ja
pop
sub
out
cmc
divl
out
les
mov
mov
arpl
push
movsb
mov
inc
and
mov
icebp
sub
loope
mov
aaa
lcall
testb
pop
inc
insb
insb
adcl
or
gs
xchg
push
sub
loopne
inc
arpl
push
jns
jle
nop
xchg
jne
ljmp
mov
or
out
scas
dec
push
xlat
mov
push
aam
push
dec
jmp
xorb
cmp
mull
inc
in
add
andb
sti
sahf
popf
in
subl
popa
popa
subl
dec
pusha
rcrb
insb
adc
push
cmpb
push
jno
es
call
cld
sbb
ret
div
pop
mov
test
xor
push
push
fidivs
jbe
push
add
xor
jns
pop
int
xlat
adc
mov
jbe
adc
mov
and
inc
pusha
outsl
sbb
enter
fisubrl
lret
xchg
xchg
stc
push
shl
cmpsb
pop
inc
add
dec
shr
lea
jmp
pop
shl
and
addr16
int
push
fcomps
pop
jmp
adc
xor
xchg
push
shlb
push
outsl
test
xchg
ja
xor
cwtl
push
lret
lcall
sub
stos
xor
push
mov
test
lock
sbb
pusha
sbb
sbb
mov
adc
pop
add
push
test
or
rcrb
incb
aas
mov
test
inc
push
fldcw
jo
fbstp
cltd
mov
daa
sub
jno
loopne
sub
lock
notb
sti
lock
mov
sbb
stc
mov
orb
adc
aad
hlt
sahf
xor
adc
xchg
push
xor
icebp
xor
enter
xchg
xchg
jae
jbe
dec
cmpsb
les
cmp
jo
sbbl
cmp
movsl
ror
iret
xchg
xchg
pop
adc
inc
imul
adc
lahf
dec
scas
pop
out
decl
mov
icebp
jne
xchg
pop
and
mov
negl
stc
inc
xchg
inc
je
repz
lret
cmp
enter
cmpsl
stos
jmp
daa
cmp
loopne
ja
push
mov
mov
jg
repz
mov
mov
loope
popa
mov
lds
sbb
scas
test
sbb
push
jl
lcall
outsb
jnp
ds
in
imul
xor
mov
daa
sub
inc
inc
mov
mov
mov
pushf
adc
mov
jmp
dec
push
mov
imul
cmpsb
cmc
call
add
shll
jnp
in
out
hlt
push
in
cwtl
xor
sbb
lea
and
lcall
jmp
sub
pop
shlb
sub
pusha
dec
push
in
int3
mov
mov
inc
lret
test
mov
jnp
xchg
aaa
dec
mov
xor
and
pop
push
lods
cmpsl
or
push
jb
ror
add
into
test
mov
icebp
mov
cmpl
push
xor
push
repnz
sbb
xlat
mov
loopne
push
insl
hlt
aaa
insb
lcall
scas
dec
push
sbb
pop
sbb
xor
adc
movsl
out
mov
out
sbb
iret
xchg
sub
jne
loope
out
in
pop
push
adc
dec
rcrl
fisubrs
mov
rcrb
out
mov
shlb
mov
rcll
push
out
push
jns
push
push
mov
scas
xor
adc
inc
pushf
aad
pusha
lods
xchg
fsubs
sbb
test
xchg
mov
insb
mov
rclb
inc
leave
imul
inc
test
cwtl
push
jnp
jbe
data16
xor
ret
push
pop
dec
xchg
roll
test
pop
inc
push
sbb
sbb
and
andl
mov
clc
dec
mov
cmp
jne
ret
sbb
fcmovne
rcrb
xchg
xor
push
imulb
push
inc
push
fisttpl
cmpsb
cs
jl
jecxz
div
mov
movsb
shrb
inc
sbb
push
push
iret
add
mov
push
ja
insb
roll
sub
lods
mov
imul
and
outsb
dec
or
lahf
and
fiaddl
fadds
sbb
mov
and
rol
mov
rcll
mov
inc
nop
sbb
fisttps
aad
ljmp
mov
and
mov
ret
sbbb
and
mov
and
mov
inc
daa
jg
stos
jns
or
sti
mov
rcr
jo
jmp
jbe
outsl
mov
pop
add
push
popa
push
psubsw
jle
or
sete
leave
push
mov
xchg
mov
pop
push
fwait
lret
push
std
push
or
xchg
int3
jno
ret
sti
clc
ret
in
jmp
js
push
out
sbb
rcrb
inc
adc
pusha
xchg
cmp
push
push
test
imul
fstl
gs
lods
push
xor
scas
mov
and
lahf
out
fs
pushf
imul
ss
adc
movsb
lahf
mov
jbe
mov
movsb
push
jnp
mov
dec
loop
mov
inc
push
pusha
fsubp
and
and
add
adc
and
daa
cwtl
sub
or
sbb
das
in
xlat
sbb
mov
test
jp
fiaddl
ja
test
aaa
dec
scas
mov
mov
sub
and
loop
call
into
or
ja
push
loop
bound
or
and
push
cwtl
xor
mov
push
jb
nop
repnz
pushf
pop
andl
imul
adc
or
lahf
adc
mov
sub
mov
icebp
call
mov
shlb
mov
and
adc
sub
mul
cmpsb
dec
xchg
jae
je
scas
testl
push
pop
dec
dec
pusha
cmp
test
mov
dec
ljmp
in
rcll
insl
push
in
xor
cmc
js
pop
aas
jg
out
cmpb
std
lret
adc
mov
lahf
and
aaa
inc
mov
pop
xchg
xchg
or
jb
loopne
clc
jge
add
lock
aaa
cmp
out
enter
data16
push
outsl
jle
xchg
cmp
call
aas
int
push
add
lret
cs
inc
pop
dec
lret
imul
or
dec
and
loop
mov
xchg
sahf
add
dec
test
push
rcll
pop
test
mov
femms
sbb
lods
jnp
cmp
inc
mov
pop
dec
mov
sub
sahf
dec
stos
dec
iret
cltd
push
pop
mov
dec
fdivrp
fdivs
push
push
sti
jle
xor
jns
push
push
dec
fstpl
stc
xchg
xchg
mov
test
mov
loop
mov
jg
pop
mov
scas
and
es
xchg
pop
lea
in
xchg
push
pop
cmp
outsb
stos
fsubr
or
popf
jecxz
lds
fistps
jmp
int
gs
pop
push
ror
mov
insb
test
push
lret
mov
jno
insb
or
cmp
mov
das
mov
inc
subl
lret
movsb
call
js
cwtl
mov
test
mov
shrl
sub
cmp
push
pusha
or
test
aam
xchg
out
scas
push
lods
mov
and
pop
fcomi
gs
aaa
aaa
xchg
xor
cmp
adc
inc
jae
jge
mov
xchg
stos
mov
mov
pop
loopne
std
js
inc
stos
adcl
push
mov
cmp
lods
sbb
pop
sti
and
mov
push
push
repz
lods
popf
push
adc
sti
pop
add
jg
stos
aad
dec
cmp
mov
mov
sub
add
aam
outsl
pop
xchg
gs
pop
fcmovu
fldcw
add
bound
inc
aam
jno
jge
push
mov
inc
scas
inc
outsb
xor
mov
sbb
cld
push
xor
inc
inc
sahf
push
lea
les
jne
leave
jecxz
sub
cmp
ljmp
repz
mov
fcmove
aas
les
mov
popa
es
fsub
or
or
sub
lods
dec
push
scas
jecxz
xchg
js
addr16
and
jne
insb
cmp
cmc
dec
xlat
scas
mov
clc
inc
mov
dec
or
aam
push
rolb
mov
mov
xor
out
sarb
mov
sub
mov
mov
repnz
mov
out
sbb
xor
push
xchg
mov
and
fldenv
cwtl
leave
gs
rcll
xor
dec
cmpsb
dec
mov
xor
jbe
js
inc
shl
addr16
push
outsl
das
sub
jp
dec
mov
pusha
lea
rcpps
xchg
dec
data16
cmp
dec
push
jne
pop
pop
sub
push
adc
inc
cs
mov
in
fs
aas
dec
dec
jae
sub
mov
jae
mov
arpl
cs
pushf
daa
adc
lock
cmpsl
cmp
loop
sbb
or
out
xchg
or
xchg
cmp
dec
arpl
hlt
mov
mov
es
sbb
pop
inc
jae
cmpsb
cmp
loopne,pt
fisubrl
ljmp
jp
lret
dec
pop
jecxz
out
mov
subl
fs
cmp
idivl
mov
arpl
aam
ss
repnz
jp
repz
stos
popl
xor
daa
xlat
jne
rclb
push
jae
xor
inc
cs
cmpsl
mov
lret
mov
sbb
xchg
lds
sub
mov
jge
scas
inc
mov
mov
add
out
dec
jg
xor
inc
push
iret
fstpt
mov
push
pop
in
pop
mov
dec
mov
sbb
loop
jae
lods
add
mov
ljmp
rcll
out
and
pop
xchg
aas
pop
pop
ret
mov
or
inc
pop
add
mov
push
fldl
cmp
mov
or
sub
dec
jo
cmp
xor
orl
sbb
push
fcoms
lods
cmpsb
push
fsubrl
inc
cld
dec
cltd
cmp
add
fchs
in
mov
dec
insb
mov
and
xor
je
inc
jno
or
xor
or
shl
mov
jmp
xor
clc
sub
xchg
shr
xchg
lea
jge
outsb
mov
popa
dec
test
mov
and
out
mov
sbb
mov
ficompl
stos
mov
lods
dec
lahf
dec
subl
div
pop
add
pop
cmc
push
out
repz
xchg
cmpsl
jb
sti
cltd
or
imul
cmpsb
cltd
repz
out
sbb
cmp
add
xchg
pushf
mov
jecxz
aaa
cltd
add
sub
jns
xchg
mov
add
mov
fldz
dec
addr16
ss
sarb
mov
jae
xor
cmp
ds
stos
sub
xor
push
loop
pop
es
jg
dec
pop
gs
gs
ret
js
pop
adcb
lahf
mov
into
jmp
sbb
adc
jne
push
jbe
sbb
push
adc
pop
and
insb
icebp
push
jne
das
out
pminub
cmp
arpl
xchg
inc
push
mov
adc
push
jae
mov
stc
push
ret
sub
push
movsl
test
out
ret
repnz
aaa
xor
pop
inc
aad
fistpl
jle
loop
into
sub
arpl
xchg
lock
fsubr
enter
push
jecxz
ret
dec
mov
sub
adc
mov
sub
pop
test
xorl
outsl
mov
addr16
dec
insl
and
jmp
fs
arpl
in
xor
inc
shlb
movl
cli
in
gs
sbb
push
push
call
out
xchg
mov
and
cmp
insb
fs
mov
pop
mov
imulb
add
push
ds
std
lea
test
popf
mov
movsl
mov
mov
jmp
push
imul
xor
fisttpl
cmp
adc
mov
mov
stc
jo
add
cs
loope
and
and
pop
mov
adc
std
xor
aam
lret
pusha
ds
aam
les
ret
movsl
add
xor
fsubs
inc
adc
adc
push
gs
fmull
lret
arpl
adc
and
dec
inc
es
fwait
movsl
movsl
arpl
sub
xchg
mov
jbe
cs
jae,pn
mov
xchg
jnp
fsubl
loop
mov
outsl
fimuls
ja
loope
sub
loope
push
pop
cmp
ja
aas
cmp
fwait
into
inc
xor
sbb
mov
andb
cld
leave
mov
mov
dec
pop
sub
jne
test
rcll
in
jl
nop
xchg
mov
jne
pop
pop
pushf
push
xor
idivl
cmp
and
out
jae
rcrl
sub
ss
pop
push
or
jge
into
push
push
imul
int3
cmpsl
stc
orb
enter
js
pop
inc
stos
lods
outsb
lock
sbb
aas
mov
jp
adc
pop
mov
sub
cltd
pop
imul
sub
shlb
add
stos
out
aaa
stos
push
fsubrs
rolb
sub
push
movl
mov
push
or
lea
sbb
and
popf
cwtl
cmp
add
adc
fsubrs
aaa
xor
and
into
test
data16
les
add
push
outsl
es
ret
loope
dec
cmpsl
xchg
fistpll
int
xor
jb
cwtl
sub
fimuls
mov
out
pop
lods
fdivrl
fmuls
mov
addr16
pop
push
dec
mov
mov
bound
fdivr
dec
and
push
sarb
dec
xchg
fstpt
dec
jne
pop
and
mov
test
dec
cmp
mov
inc
cmpsb
sub
xchg
stos
shll
jbe
shlb
push
cwtl
rorb
dec
iret
icebp
inc
lock
xchg
hlt
shll
push
in
pop
aas
aam
es
push
aaa
clc
aas
adc
mov
pop
cmp
mov
dec
jo
test
fldenv
insl
cli
in
nop
inc
nop
jmp
add
and
test
int3
sar
push
sub
daa
outsl
cmpsb
out
mov
in
ficoms
fs
inc
or
pop
pop
pusha
pop
incl
mov
add
dec
mov
daa
pop
cmp
push
jl
and
dec
add
fdiv
xchg
popa
or
movsl
roll
sbb
lret
test
pop
mov
stc
ljmp
sbb
ss
push
scas
mov
jae
add
mov
icebp
adc
cld
fwait
cwtl
xor
xchg
and
xchg
aas
add
inc
add
xchg
mov
movsl
and
push
movb
popf
shlb
add
add
mov
leave
push
push
test
inc
add
stos
add
sarb
fcoms
mov
test
and
negl
jmp
pop
push
sahf
jp
pushf
insl
dec
ret
xor
leave
mov
arpl
dec
jl
gs
fisttps
pop
aas
push
inc
movsb
dec
daa
loopne
lock
mov
int
jmp
dec
pop
cmpsl
movsb
xchg
out
and
adc
jno
sub
ja
leave
mov
jb
pop
dec
repz
mov
in
mov
insb
test
divb
fistps
fmull
lahf
add
jnp
pop
cmp
jmp
jmp
xchg
pop
sahf
push
and
xchg
mov
cwtl
or
repnz
movsl
jmp
int
jecxz
cmpsl
les
lret
push
and
cmpsl
xchg
adc
js
add
xchg
adc
cltd
data16
dec
inc
fwait
dec
arpl
movsb
stc
ja
and
mov
jge
inc
ljmp
and
shlb
jne
xchg
inc
les
in
cmp
incl
and
xchg
dec
sahf
xchg
xchg
mov
test
out
xor
jbe
shl
mov
movzbl
cmp
xchg
ret
inc
xchg
adc
and
dec
es
mov
sub
ret
insb
adc
shll
popf
mov
cltd
push
aam
xchg
fdivl
pop
pusha
cmc
adc
ds
cld
adc
pop
adc
mov
push
bsr
jae
out
xorb
sub
mov
addr16
cmpsl
cld
pop
and
arpl
sub
push
push
pop
loop
push
dec
mov
xor
lods
imull
jmp
and
jae
adc
sub
insb
xchg
or
adc
and
dec
loop
mov
leave
pop
sub
sub
cwtl
xchg
clc
jnp
cmc
stc
mov
fstpl
out
std
jae
mov
aas
adc
fstp
jmp
jl
sarb
testb
cmp
outsl
pop
inc
mov
imul
lods
mov
sub
fs
mov
xor
or
sarl
test
mov
call
jb
xchg
xchg
jl
pop
cli
pop
dec
sub
dec
shrl
inc
add
jae
lret
mov
imul
jae
jne
xchg
imul
mov
cmp
cmpsb
adc
cmp
popa
outsl
leave
add
jno
adc
aaa
ljmp
push
insb
ja
mov
dec
ds
out
xor
adcb
sub
cmp
cmpsl
and
pushf
pop
jnp
rclb
push
fcomps
imul
jb
xor
fimull
int
cmpb
push
mov
rclb
xlat
adc
mov
scas
xor
xorb
outsl
or
test
inc
jae
daa
in
inc
jl
add
xor
out
in
and
jo
imul
mov
scas
adc
aam
call
xor
push
mov
imul
cmp
dec
insl
enter
test
stos
adc
jae
aaa
xlat
mov
mov
cltd
popa
sbb
jg
or
out
ret
out
lods
addl
adc
pushf
shlb
fsubs
mov
mov
and
sub
jne
and
xchg
mov
fistps
enter
fnstsw
push
adc
sub
popa
ljmp
adc
jns
add
push
enter
mov
inc
sub
cld
ja
mov
inc
in
stc
out
sbb
clc
sub
mov
push
mov
std
pusha
and
repz
add
pop
push
out
cmp
out
mov
cld
mov
loope
dec
scas
lds
mov
insl
pop
loope
sahf
out
fimull
pop
je
adc
dec
fucomip
inc
xor
and
xchg
stos
jl
mov
das
jg
nop
shl
notl
xchg
hlt
imul
and
xor
imul
rol
pop
scas
andb
sub
add
xor
xlat
mov
rolb
fnsave
mov
push
mov
or
cmp
sbb
jns
shll
fisubs
pop
cmp
mov
adc
enter
and
jge
lds
jnp
stos
sub
dec
aam
js
notb
mov
pop
lret
cmp
test
lret
jl
jge
push
mov
mov
lods
mov
cwtl
xor
add
pop
jecxz
scas
cmp
jmp
xchg
lcall
mov
insb
jno
out
xchg
add
lock
mov
cli
sti
and
push
cmp
test
mov
insl
pop
nop
outsl
push
cmpb
sbb
cs
aam
add
push
add
jnp
push
sbb
pushf
or
insb
or
dec
ret
jp
mov
push
adc
push
pushf
cmpb
dec
into
scas
dec
sarb
xchg
call
gs
and
movsb
add
or
scas
icebp
pop
jl
dec
jb
daa
popa
xchg
pop
mov
pop
pop
or
pop
push
fiaddl
jo
add
and
in
xchg
push
ficoms
dec
in
jl
mov
call
jge
pop
jle
pop
push
adc
dec
xchg
pop
or
cli
fisttps
adc
ljmp
xchg
sahf
out
movsb
lods
xchg
popf
dec
es
enter
cmp
xchg
stos
out
lods
xchg
mov
push
mov
push
lret
outsl
out
in
sub
call
mov
ficompl
popl
in
push
decl
aas
add
sbb
jg
fistl
shrb
lahf
ffree
mov
jl
fdivrl
mov
cli
pop
jnp
imul
ja
mov
mov
mov
pop
pop
daa
mov
test
and
arpl
jge
adc
movsl
negl
stos
ljmp
rcll
sub
les
add
sub
jecxz
sbb
sti
bound
ja
mov
push
je
jecxz
pushf
gs
xchg
jp
xor
mov
test
lret
push
lock
push
insl
mov
pop
mov
arpl
or
nop
scas
jno
fstl
xchg
pop
test
repnz
jp
inc
lods
popa
pop
out
loopne
push
or
arpl
mov
loopne
or
jb
sarb
and
cmp
mov
in
or
imul
addr16
push
int
jp
clc
add
addl
pop
mov
mov
add
movsb
ret
jmp
sti
iret
cmp
lods
out
stc
dec
sbb
lcall
push
sar
xor
mov
lcall
neg
popa
or
mov
ds
cmc
add
xor
add
cmp
gs
and
testb
pop
dec
ret
sti
sub
pop
jmp
lret
pop
int
aad
inc
dec
lahf
inc
sbb
cmc
bound
sbb
fadd
sbb
out
mov
leave
inc
data16
adc
fsubl
dec
nop
xchg
js
mov
arpl
dec
cmp
or
mov
dec
out
mov
cltd
add
cwtl
mov
mov
pop
loop
in
or
jl
mov
jecxz
je
jge
mov
out
mov
cld
dec
adc
int3
push
ret
mov
std
sarl
subb
mov
cmp
pop
scas
out
fbstp
ret
test
ljmp
adc
mov
and
jbe
xchg
push
lahf
pop
adc
mov
or
les
stos
leave
xor
roll
mov
mov
mov
cmpb
cmpsl
mov
cmpsl
loope
cmp
sahf
aas
sbb
xchg
out
mov
enter
xchg
lea
mov
popf
or
mov
cld
jecxz
cmp
and
xchg
pop
scas
xchg
shll
dec
xor
nop
jg
test
sbb
addr16
pop
movb
sub
pop
or
mov
jns
lahf
lds
rclb
mov
xor
push
xorl
in
jl
xor
mov
and
inc
add
pop
movsb
es
sbb
les
xor
adc
sbb
stc
inc
push
mov
xchg
mov
ret
or
scas
daa
pusha
divb
fcmovnb
cmpsb
daa
sub
insb
cmpsb
test
push
mov
fs
add
es
pusha
cs
rol
inc
push
xchg
fnstenv
xlat
jge
insb
or
pusha
test
xor
inc
bound
pop
xor
and
pop
iret
pop
xor
push
cld
xor
std
adc
call
inc
push
xchg
test
mov
mov
out
movsl
sarl
add
push
js
lret
cmc
dec
xchg
push
hlt
inc
int
arpl
dec
push
in
xchg
mov
sub
fnstcw
sub
daa
lret
pushf
mov
pop
in
pop
lock
shlb
adc
sti
js
outsl
push
fwait
lock
iret
lahf
mov
fisubrs
das
leave
fldl
mov
daa
aaa
fistpl
xchg
in
mov
loop
jl
mov
stos
jmp
nop
jmp
xor
icebp
cmpsl
inc
test
pop
fildll
and
outsb
cmp
in
es
neg
inc
add
scas
stc
jne
ret
jge
mov
fs
adc
or
fldcw
jle
fcmovnb
xchg
jle
jnp
test
in
imul
nop
adc
cli
mull
outsl
adc
inc
std
inc
clc
jno
mov
rorl
mov
jp
daa
cmp
sbb
cmpsb
and
inc
push
or
rcll
mov
lahf
xlat
loopne
in
jl
leave
xchg
jge
enter
jb
scas
sub
addr16
add
shl
icebp
mull
das
lcall
clc
roll
inc
mov
jge
mov
sbb
dec
test
lea
fwait
lret
bound
test
test
mov
ja
pop
imulb
xlat
jnp
mov
jmp
mov
inc
mov
and
aad
in
daa
sarl
jo
loope
pop
inc
loop
jne
xorb
lahf
xor
ss
add
inc
aas
movsl
out
push
loop
dec
pop
lock
adc
jp
fcomip
out
cwtl
sarb
das
ljmp
sub
sbb
or
daa
push
add
xlat
aam
sti
scas
mov
jns
push
roll
mov
ret
mov
or
movsb
xor
fidivs
mov
cld
addr16
cmp
setle
out
arpl
fwait
cld
lock
mov
push
jns
xchg
addr16
stc
or
jle
xchg
cwtl
mov
mov
and
ret
std
xor
dec
xchg
dec
push
and
roll
ucomiss
insl
lahf
add
xchg
cltd
sub
xor
mov
push
loopne
cmp
xchg
out
pop
mov
lods
pop
xor
mov
sbb
out
gs
sbb
cmp
and
jnp
icebp
cmp
or
movsb
shrl
fwait
icebp
popf
sarb
or
sbb
ret
insb
add
icebp
mov
int
dec
shl
pop
fwait
jmp
arpl
mov
and
aas
mov
and
ret
or
das
xchg
fst
push
lods
dec
in
mov
inc
imul
push
fabs
cmp
std
aam
sbb
add
outsb
hlt
jge
xor
mov
outsl
fcomps
lock
lds
mov
sbb
stos
cmp
push
lret
xchg
out
mov
mov
mov
jl
fmul
mov
push
xchg
inc
adc
mov
pop
pop
std
inc
mov
imul
lahf
jp
cltd
loopne
adc
jecxz
jns
notl
dec
and
bound
sbb
daa
mov
lcall
sub
or
dec
test
pop
lahf
das
rclb
jmp
lahf
adc
pushf
xchg
scas
sbbb
aad
dec
fnstcw
add
ret
cltd
cmp
cmp
mov
inc
push
pusha
inc
fadd
fisubrs
movsb
inc
inc
sub
inc
cs
sub
dec
push
stos
scas
pop
and
jle
les
decl
pop
mov
pop
loope
ss
push
push
in
mov
popa
popa
dec
mov
sub
jecxz
jg
jl
rcrl
into
lcall
lods
mov
pop
jbe
enter
fwait
add
mov
push
bound
xchg
or
sbb
mov
add
pop
sti
or
pop
and
jecxz
pop
mov
mov
dec
cmpsb
in
sbb
push
pop
sbb
or
hlt
pop
sub
dec
mov
shr
aad
push
daa
cmp
mov
arpl
sub
sub
lods
push
ja
xor
mov
mov
nop
lahf
push
push
inc
cmp
loop
mov
push
popa
xchg
mov
jno
aad
xchg
xlat
lcall
ret
pop
cmp
subb
push
sti
cmp
into
ds
arpl
or
xchg
pop
pop
and
cmpsb
gs
mov
add
jl
daa
aaa
lods
lret
inc
xchg
cltd
rcr
loope
stos
sub
nop
into
adc
in
sub
les
xchg
sbb
mov
shll
xor
and
mov
mov
mov
rcrb
pop
mov
pop
xchg
movsb
sub
out
push
das
inc
sub
aas
cmp
clc
test
iret
xchg
pop
jge
jnp
adc
xchg
outsb
and
jle
add
pop
inc
fists
xchg
hlt
int
mov
or
mov
movsb
out
jl
xor
test
and
inc
mov
or
dec
out
xor
mov
push
adc
leave
stos
mov
pop
push
pusha
xor
mov
inc
call
ret
bound
jb
mov
sub
sarl
or
repnz
xchg
dec
mov
es
sub
sub
inc
or
pusha
mov
ret
xor
gs
mov
fldt
push
testl
jbe
cmp
jns
in
outsl
inc
or
adc
xor
scas
mov
inc
leave
add
sbb
lods
mov
sub
dec
pop
jg
push
ret
or
mov
js
sbbb
sbb
push
xor
scas
hlt
xor
lea
inc
leave
mov
filds
aas
inc
test
pop
mov
cli
popf
sub
jo
test
pop
fcompl
imul
idivb
dec
cmc
push
push
sub
or
int
lret
jb
outsl
shr
ret
mov
xchg
lahf
cmp
fdivp
and
pop
pop
jle
outsb
and
sbb
cmp
out
pop
xchg
xchg
cmpsb
mov
add
popa
hlt
jns
cmp
test
lds
cmpsl
es
adc
loop
in
xor
jne
mov
cmp
pop
les
or
cmp
pop
cmp
dec
and
stc
dec
les
lock
cmp
pop
adc
inc
sub
xchg
mov
add
loopne
push
mov
adc
jmp
imul
jns
repz
fwait
dec
ret
arpl
std
stos
mov
lcall
div
test
sub
test
sub
out
or
hlt
ljmp
out
push
jb
adc
ja
pop
cmp
pop
lcall
xchg
ss
adc
leave
out
xchg
imul
sbb
sbb
jne
inc
cmpb
fnstcw
daa
icebp
cli
fmull
mov
movsb
or
pop
clc
jne
jno
xchg
cli
lods
xchg
jno
arpl
push
mov
int3
iret
stos
fisttps
and
aad
xchg
inc
pop
inc
pop
sub
inc
jne
je
cmp
shlb
xor
div
mov
lock
push
lret
hlt
push
std
xlat
sub
sarb
push
push
xchg
das
or
scas
mov
mov
icebp
ja
dec
pop
fwait
in
xlat
sbb
jo
push
testb
decl
inc
mov
fcomps
dec
rcrb
jbe
mov
in
clc
pop
pop
or
in
mov
fstp
push
fmull
ds
scas
pop
jae
or
adc
push
test
lret
cmp
and
out
jo
cmpsb
or
insb
push
out
or
adc
add
and
push
adc
popa
ja
pop
sub
mov
add
iret
push
rolb
mov
fs
jno
pop
pop
mov
mov
into
insb
lods
mov
test
ljmp
pusha
subl
push
push
outsl
jo
scas
sbb
xchg
inc
push
push
shlb
and
xchg
movsl
jge
sub
movsl
mov
sub
test
jo
cld
jg
adc
or
leave
daa
test
sahf
call
sbb
dec
cmp
push
mov
into
mov
sbbl
add
jb
loopne
pushf
test
cmp
sbb
mov
jl
pushf
pop
ret
popa
cmpsl
repz
mov
xchg
clc
mov
cmp
popf
pushl
pop
inc
mov
or
imul
xor
mov
push
daa
shll
mov
fisttpl
cld
sub
popa
repnz
cs
adc
rorl
scas
adc
xorl
pop
xor
arpl
mov
mov
adc
sbb
push
hlt
rcrl
sbb
outsl
add
xlat
xchg
nop
testb
lret
movsb
sbb
aad
and
jae
xchg
lret
cli
xor
or
xor
adcl
int3
mov
scas
fiadds
or
adc
add
mov
xchg
mov
cs
push
js
test
imul
aaa
test
rcl
ljmp
xchg
mov
shlb
stc
or
imul
pushf
mov
adc
fwait
inc
xchg
adc
and
scas
mov
lds
pop
imul
arpl
loopne
mov
aas
cli
test
push
loope
cmpsb
mov
adc
test
adc
lahf
cmp
test
scas
neg
dec
lret
sub
popf
in
and
sbb
inc
pop
xchg
jmp
push
mov
test
jns
xchg
xchg
je
push
and
es
inc
jnp
in
popa
gs
icebp
test
jns
inc
adc
add
enter
push
pop
cmpsl
lock
rol
pop
cmc
jne
fincstp
rcrl
sub
mov
cs
dec
pop
pop
pop
mov
enter
pop
fists
add
adc
sub
imul
dec
sbb
cwtl
and
jbe
loope
aad
push
movsb
cmp
ret
rolb
fcoms
scas
add
adc
fadds
sub
pextrw
sarl
outsb
inc
adc
outsl
popa
push
incb
cmp
jl
jg
mov
clc
mov
addb
repz
aad
leave
cmc
sub
cli
or
std
iret
lods
shll
fidivrl
push
in
adc
xchg
xor
lods
jl
add
pop
sub
addr16
cmpsb
mov
int3
mov
icebp
cmp
cwtl
adc
ja
jnp
movsb
cwtl
sub
push
ficompl
or
push
clc
ret
xor
xchg
push
inc
cs
movsl
sar
out
xchg
out
movsl
loope
sbb
add
inc
sbb
shll
push
inc
mull
and
sub
int3
pop
or
pop
cmp
push
dec
adc
mov
mov
lods
mov
mov
out
mov
mov
cld
cmp
jge
dec
lret
ja
adc
jne
xor
aam
sbb
arpl
inc
popa
cmc
fsubrs
out
pop
pusha
sbb
jb
jl
sbb
xchg
daa
fnstcw
add
push
add
popa
out
adc
dec
xchg
pmaxub
and
mov
imul
movsb
ret
and
mov
xor
fmull
cmpsl
jge
scas
dec
addr16
ret
pop
outsl
sub
inc
and
dec
je
nop
adc
aad
fdivl
stos
cs
pop
mov
dec
gs
or
jno
inc
aad
sti
sub
cmp
mov
shrb
enter
out
fcoml
ja
xor
sub
aaa
add
enter
test
movsl
pop
out
push
xor
xchg
test
xor
mov
and
or
or
xchg
andb
mov
cwtl
int
imul
mov
stos
sbb
fnstenv
or
js
fldenv
inc
aaa
xor
shlb
dec
cwtl
popa
inc
jno
push
divl
daa
xor
mov
push
jo
dec
cmp
fwait
js
cltd
mov
lock
lea
test
fwait
add
jmp
sub
outsl
adc
cs
das
add
imul
or
mov
adc
dec
mov
mov
sub
daa
fildll
jo
leave
push
cli
fstl
xor
je
mov
insb
inc
sahf
movsl
push
orb
sub
fldl
mov
xor
out
dec
in
jnp
push
js
loop,pn
fwait
push
cwtl
je
lahf
adc
subb
test
fwait
push
adc
mov
pop
imul
movsl
ret
out
xchg
or
das
loope
and
pop
movsb
enterw
ljmp
repz
xchg
addr16
stos
xchg
jg
fistpll
out
add
lret
addb
repnz
aas
sub
xor
jno
movl
test
cmc
push
and
popa
xchg
outsb
adc
bswap
cmp
fidivl
or
lea
or
mov
pusha
ja
jg
pop
jge
roll
imul
aaa
xor
sub
xchg
test
stos
rcl
mov
shl
jle
mov
outsb
bswap
add
fsubrs
int
sub
inc
mov
outsb
std
imul
mov
enter
adc
jg
icebp
push
les
cmpb
pop
or
mov
mov
jp
and
sti
lret
jg
cmpsb
pop
cli
jno
sbb
push
push
imul
and
ret
pop
mov
xchg
and
in
jae
out
addr16
ja
cmp
dec
subb
mov
dec
cltd
test
jno
shr
jne
ds
loope
sub
gs
jb
shlb
mov
fld
outsl
push
popfw
xor
mov
rolb
daa
jmp
jp
adc
icebp
jle
sub
or
add
stc
std
in
cmp
mov
dec
push
adc
mov
test
xchg
pop
sti
cltd
notb
das
pop
test
mov
into
cmpsl
dec
cmp
xchg
imul
mov
cld
xchg
shr
jle
js
test
aaa
sbbl
es
test
imul
aaa
repz
outsb
mov
divb
fdivs
movsb
mov
aas
cmp
or
aam
stos
jp
cmp
lock
mov
jbe
or
cld
je
cmpl
ret
xchg
jge
in
pop
outsb
repz
and
xchg
inc
jae
dec
ja
dec
push
nop
mov
nop
dec
xchg
call
lds
hlt
push
sub
lret
jmp
mov
les
sub
inc
notl
cmp
xor
mov
cmpb
rcrb
pusha
out
shr
xchg
push
test
aas
mov
xor
dec
sub
sbb
push
ror
lods
add
testl
popa
sub
dec
mov
add
lret
rcll
insl
mov
inc
mov
mov
movsb
sbb
mov
frstor
push
push
jne
jl
xorl
pop
out
popa
sub
addr16
dec
shll
jecxz
jo
ljmp
push
in
outsb
dec
out
mov
cmpsb
sub
rclb
sbb
jb
pop
or
leave
lea
fcmovnu
stos
mov
mov
shrl
lods
add
pop
enter
pop
out
push
xor
loopne
push
xlat
xchg
xor
hlt
dec
jnp
repnz
mov
pop
push
movsl
bound
jg
bound
jno
sysret
add
loope
sub
repz
jno
xlat
xchg
sbb
mov
xor
imull
pop
jle
mov
outsb
scas
icebp
dec
push
fpatan
test
sub
xor
stos
and
xor
mov
jne
test
pusha
pop
xor
fs
or
sbb
mov
fldcw
lods
mov
iret
popf
pop
data16
sub
mov
ds
cmp
shrl
mov
or
mov
cmp
rcll
fists
lret
jae
sub
mov
dec
popf
shrd
mov
pop
fisttpl
mov
leave
iret
or
mov
cmpsl
repnz
flds
xchg
push
dec
jg
cs
cltd
imul
push
out
out
mov
in
and
adc
add
pop
inc
jnp
popa
add
test
scas
ret
notb
aad
push
rol
rorb
fdivs
ds
mov
out
sbb
mov
mov
sub
cmp
jno
sub
or
out
mov
xor
inc
mov
rolb
iret
xchg
call
mov
pop
movsl
sub
out
mov
arpl
cli
jnp
cld
movsb
xor
jle
cmp
sahf
shrb
inc
addr16
nop
jns
cltd
cwtl
std
cmpsl
repnz
lcall
hlt
sbb
insb
xor
xor
and
or
push
add
cmpb
aam
pop
mov
jp
adc
mov
jmp
hlt
ljmp
push
iret
test
pushf
mov
loope
repnz
adc
in
jg
idivb
movsb
push
adc
je
cltd
mov
mov
dec
iret
ljmp
cmp
int
or
jl
push
sbb
jo
shrb
cltd
xor
add
cltd
incl
mov
jle
dec
sahf
push
fucomip
xor
push
dec
or
push
sahf
hlt
movl
jo
int3
scas
stos
cmpsb
mov
stos
mov
gs
fs
jl
push
lods
rcll
in
pop
rcl
and
inc
nop
mov
adc
orb
mov
add
push
cltd
out
sbb
jae
imul
pop
fnstsw
and
mov
push
pop
lret
jl
mov
cmp
xchg
insl
pop
dec
mov
rolb
dec
addr16
mov
jno
loopne
scas
imul
cmpsb
in
in
aaa
clc
test
insl
stos
pusha
orb
xor
dec
pop
mov
loope
pop
xor
out
cltd
cmpsl
sbb
ds
ret
mov
shlb
test
mov
inc
xor
lods
addr16
adc
jge
adc
fs
pusha
test
xor
and
mov
mov
fstpl
cmp
test
aaa
adc
rcr
jnp
xor
bound
inc
inc
out
cltd
add
in
daa
cld
test
mov
gs
dec
rcll
test
rep
xor
jno
and
test
mov
negb
clc
into
jecxz
orb
les
mov
int
mov
pop
push
jbe,pt
insb
bound
xor
in
or
fwait
dec
iret
add
xchg
sub
incl
cmp
dec
inc
clc
jo
subl
mov
adc
push
push
mov
pop
movsl
dec
in
dec
stos
imul
in
into
sbb
fistpll
pop
std
push
bsf
and
jl
leave
js
jp
dec
add
push
add
mov
cltd
les
mov
sub
push
and
popa
pop
stos
push
sub
jne
outsb
mov
adcb
jne
mov
lods
inc
mov
jb,pt
xor
pop
in
jg
adc
mov
lahf
mov
arpl
inc
repz
cmpsl
int3
push
lret
je
inc
sub
std
mov
out
into
inc
xor
faddp
js
xchg
sbb
pop
test
aaa
fbstp
xchg
mov
nop
inc
movl
pop
call
mov
fidivs
loopne
xchg
jmp
push
dec
fs
das
push
and
jp
shl
or
jns
test
cmp
pushf
mov
mov
mov
imul
es
mov
mov
and
mov
pop
inc
mov
sub
repz
mov
cmpsl
je
xorb
mov
inc
fs
pop
lahf
push
in
mov
aam
test
lock
and
mov
ret
call
xor
cmpsb
mov
cli
nop
jo
mov
dec
cmp
adc
jp
loopne
insl
jmp
push
stc
shll
pop
jne
int3
mov
jmp
aam
ljmp
nop
mov
or
mov
movsl
sub
sub
pop
push
jle
cli
lret
mov
sbb
jae
add
pop
adc
out
fsub
jae
lret
push
pop
movsb
call
and
cmp
filds
xor
int
fisubrl
dec
test
jge
aad
jp
dec
jle
mov
sbb
push
jg
fisubl
or
mov
aam
adc
xor
insb
inc
stos
cmp
lahf
mov
idivl
rorb
mov
sub
xor
scas
mov
or
push
sub
in
pushl
jg
xchg
cmp
pushf
leave
pop
test
xchg
and
jl
cmpsb
mov
push
insl
push
mov
sti
push
xchg
jecxz
cwtl
cltd
push
fwait
add
aaa
int
add
filds
movntq
out
push
dec
xchg
lcall
jbe
xor
loop
fs
add
fistpll
inc
pop
lahf
movsb
add
xor
das
sbb
cwtl
notb
sahf
outsl
fistpll
inc
dec
mov
cmp
inc
and
sub
add
inc
jbe
fwait
shr
fcomip
lds
cli
jne
jle
fdivr
leave
popa
outsl
popa
mov
push
inc
les
fxch
add
rorl
mov
aam
pop
cmpb
cmp
insl
test
or
sbb
adc
aad
test
mov
stos
xchg
loop
adc
inc
cli
add
inc
jg
test
adc
aaa
mov
ja
pop
xchg
jns
xchg
jl,pt
sub
fisubrl
mov
push
mov
mov
sahf
sarl
std
ficoml
mov
cmpsl
jle
les
sbbb
mov
inc
mov
addl
adc
mov
in
ss
stc
repnz
push
scas
out
jns
cmp
ficoms
sub
sbb
hlt
xor
sbb
xchg
in
out
mov
out
cld
dec
mov
flds
xchg
shl
push
inc
push
push
push
enter
addr16
dec
and
xor
inc
mov
dec
xor
aas
push
div
into
push
neg
mov
dec
adc
mov
adc
fwait
inc
popf
sub
cmp
movsb
cmc
outsb
je
mov
jno
and
bound
mov
cmpb
lcall
pop
ret
inc
adc
shll
mov
cwtl
sti
or
out
pop
in
movsb
jne
daa
jno
add
and
and
fbld
aam
cmp
insb
arpl
adc
adc
cmp
mov
nop
test
mov
sarb
aas
sub
pop
lock
nop
cltd
add
in
mov
jb
fsubs
fucomi
push
fistpll
sub
hlt
stc
hlt
push
push
in
xchg
or
pop
int
repnz
stos
test
push
clc
cwtl
sbb
std
pop
sahf
mov
es
jg
shll
loope
pop
cwtl
mov
ljmp
jo
enter
rcrl
xorl
mov
fs
mov
fimull
rolb
ret
and
or
xchg
add
cld
lock
jb
adc
or
arpl
out
jae
mov
mov
and
cmc
add
cmp
add
mov
loope
mov
sarl
das
cmc
push
mov
mov
and
xor
movsb
add
mov
gs
scas
mov
sub
xchg
lret
dec
jp
xchg
pop
mov
add
iret
or
add
cmp
or
push
pop
stc
sub
int3
add
popf
ficoms
fsubrl
cmp
icebp
sbb
mov
xchg
aad
xor
jmp
xchg
mov
shlb
sbb
insl
jae
jbe
push
ljmp
flds
loop
js
fistpl
je
in
mov
push
in
cmc
adc
fsubs
adc
push
outsb
push
add
pop
fistpll
sbb
cld
inc
test
and
mov
dec
popf
xor
fiaddl
push
rolb
inc
mov
and
inc
je
jecxz
push
ret
fistps
shl
xor
add
ss
sahf
push
pop
dec
insb
xchg
mov
mov
test
and
inc
icebp
out
outsl
hlt
loope
push
and
data16
pop
icebp
jno
and
mov
daa
adc
sub
add
pop
fcoms
test
dec
stos
popf
lods
push
movd
pop
lret
xchg
adc
outsb
cltd
iret
cmpsb
jnp
int
jnp
mov
insb
in
into
insl
push
sub
sub
inc
pushl
push
js
in
popa
pop
shll
popf
cmpl
fnstsw
into
mov
fs
dec
dec
mov
inc
in
jle
xor
aad
mov
xor
xor
mulb
cmp
outsb
xor
das
dec
rcll
lock
jecxz
out
mov
xchg
fldt
push
mov
shl
les
xchg
test
and
sbb
push
jno
jno
mov
mov
and
outsb
popl
test
int3
jnp
scas
imul
xchg
jns
fisttpll
das
mov
or
mov
mov
mov
xor
shlb
jecxz
mov
jge
xor
mov
jmp
sbb
pop
mov
add
xchg
ret
add
push
shrb
mov
cmp
sarb
imul
dec
push
jle
loope
mov
je
lret
popf
popa
xchg
cmp
sub
fmul
xor
sub
loop
mov
adc
in
jp
mov
inc
pop
adc
and
data16
stos
lret
pop
lods
push
sub
xchg
mov
push
aas
xchg
push
aam
mov
dec
jecxz
xchg
push
aaa
jmp
inc
cwtl
jge
dec
arpl
sti
add
or
loop
cmp
cmc
out
mov
lods
aas
data16
cmp
mov
daa
add
jne
cmp
and
lret
std
or
push
sbb
push
out
popf
in
aam
and
dec
pop
jb
or
sbb
and
or
lret
faddl
or
adc
ret
gs
jb
push
rcrl
mov
hlt
mov
addr16
mov
rolb
pop
scas
pop
cmp
add
adc
insb
orb
and
sbb
adc
sub
inc
pop
div
mov
push
mov
cmp
inc
mov
sahf
push
push
dec
hlt
sub
lea
ja
aad
cmc
push
cwtl
xlat
stos
mov
mov
out
lds
pop
jo
rcll
dec
dec
xor
jecxz
lds
xchg
cld
add
jbe
jp
pop
adc
push
stc
add
outsl
and
je
test
adc
jbe
cli
hlt
xor
rorl
mov
inc
pop
sbb
pop
out
pop
pop
jne
lret
fwait
pop
cmp
hlt
pop
jge
adc
xor
pop
sub
in
push
test
roll
jmp
xchg
pop
adc
or
mov
in
out
dec
loop
xchg
and
stos
add
xchg
pop
imul
fidivrl
push
add
mov
and
xchg
mov
and
loopne
out
repz
add
or
push
int3
inc
cmp
mov
test
xor
cmpb
loop
pop
in
and
fidivrs
cwtl
mov
inc
shlb
imul
inc
xor
repz
fwait
mov
jae
ret
loopne
into
icebp
cmc
pop
cmp
mov
mov
stos
adc
pop
stos
sahf
test
bound
out
sbb
daa
lahf
cmp
jno
clc
ret
es
cmp
push
jb
fidivs
mov
notb
xor
inc
decb
aaa
xor
jl
insb
cmpsl
fsubs
nop
adc
mov
jle
in
insb
add
sbb
lcall
jmp
sbb
mov
and
push
aam
push
adc
pop
and
inc
je
lahf
push
popf
faddl
mov
out
mov
fnstcw
fsubs
pop
inc
dec
jl
mov
popf
push
push
fbstp
scas
xchg
mov
add
mov
lret
mov
bound
add
adc
sbb
daa
add
pop
gs
sarb
stos
sbb
sbb
scas
movsb
xchg
notl
out
sub
lcall
aam
int3
addr16
frndint
imull
lahf
mov
push
sti
mov
push
lds
cmp
ret
and
stos
fdivl
fwait
scas
insl
cli
sti
rcr
loope
aam
fisubrl
sub
movsb
mov
jbe
dec
scas
imul
nop
cld
mov
xor
fistps
mov
negl
pusha
mov
in
lcall
out
mov
stc
imul
je
in
stos
hlt
dec
jg
jo
mov
xlat
jecxz
xor
test
lods
aad
ret
outsl
cmp
call
mov
data16
std
imul
leave
leave
cli
leave
es
mov
and
adc
sti
movsl
sub
push
loopne
and
push
jo
loopne
subb
roll
xchg
shrb
jp
icebp
inc
ret
test
mov
in
push
fldt
mov
daa
out
lods
fs
cmp
and
and
mov
lret
pop
js
xchg
jno
jae
sub
sbb
insb
cwtl
in
imul
leave
mov
add
adc
push
repz
js
pop
ja
push
in
jne
adc
mov
jnp
push
xlat
xchg
imul
pop
out
or
iret
jae
inc
pop
push
mov
or
test
jns
dec
cmp
call
inc
pop
cmp
jnp
lea
jge
lahf
mov
popw
pop
lods
xor
mov
lea
cltd
jnp
shrl
sub
fsubl
pop
cmp
subb
mov
jns
das
hlt
leave
enter
add
std
fstps
push
fcoml
daa
push
push
loop
xchg
lods
clc
in
mov
out
cmpsb
adc
cmp
imul
cmpsb
cld
sbb
popa
and
xchg
repnz
bound
test
je
loope
addr16
aam
maskmovq
testl
pop
ret
sahf
roll
jbe
repz
fcomip
out
lret
adc
pop
push
ja
fldt
mov
cs
cmp
mov
iret
lds
cmp
adc
jmp
mov
imul
or
ffree
push
mov
mov
push
jmp
xor
xchg
mov
xchg
arpl
negl
shlb
jbe
lret
xor
cmpsl
leave
xor
mov
dec
lods
and
jb
add
movsl
push
je
inc
ljmp
xor
mov
out
test
sub
fistps
ljmp
sub
mov
mov
mov
adc
sub
cmpsl
mov
cmp
xor
cmpsb
mov
pushf
pop
xor
das
inc
gs
lret
pop
loop
jl
int3
push
push
cltd
faddl
xchg
rcrl
mov
xchg
dec
out
repnz
or
jmp
push
adc
sbb
enter
sub
inc
iret
xor
imul
in
lcall
mov
sub
inc
xchg
lret
push
je
leave
js
adc
sbb
jb
mov
push
push
inc
push
cli
inc
cltd
pop
fdivs
cmp
in
movsb
clc
std
fadd
mov
stos
pop
mov
jbe
mov
rcll
add
mov
cld
mov
xor
xor
push
rcrb
mov
stos
adcl
pop
or
cmp
mov
sub
scas
jmp
jp
outsb
cmp
xor
sbb
push
scas
movb
pop
inc
xchg
mov
sahf
adc
mov
jns
inc
xor
pop
push
aad
imull
insl
icebp
movsl
aas
outsl
adc
insl
vrsqrtps
push
sub
aam
mov
mov
insb
add
sub
xor
xlat
xlat
lcall
inc
mov
sahf
mov
mov
movl
and
and
inc
mov
rcl
aad
imul
jg
arpl
push
sbbb
push
sub
and
popa
cmp
cmpb
stos
pop
mov
sub
test
sub
aaa
lcall
push
xchg
mov
mov
ret
repz
cli
jle
pushf
jl
push
stc
sub
pop
mov
sbb
out
dec
adc
xor
in
data16
jno
adc
outsl
mov
idivl
add
and
jle
test
sti
mov
and
cmp
sub
test
rcr
lea
mov
movsl
cwtl
push
repnz
incl
paddb
mov
push
lods
sti
dec
sarl
je
in
subb
mov
bound
xor
fldcw
adc
movsl
cmp
inc
jbe
repnz
clc
inc
dec
sub
inc
xor
nop
mov
mov
and
mov
cli
sbb
adc
add
mov
in
and
push
mov
clc
imul
push
loopne
mov
shlb
sbb
scas
nop
aas
sub
cmc
add
sub
aad
push
add
ret
pop
test
daa
cvtps2pi
sbb
data16
mov
xchg
or
sbb
in
pop
movsb
sub
xchg
aad
push
jge
mov
arpl
arpl
and
pop
add
mov
jno
xchg
push
push
xor
jnp
pop
mov
shl
sub
xor
lahf
pop
movb
sub
push
dec
rol
sub
ficoml
stc
xchg
fidivrs
inc
imul
in
mull
add
insb
xor
orb
ss
or
daa
clc
enter
popl
xchg
mov
call
cwtl
or
or
cwtl
ficoms
pop
rcll
adc
pop
std
stos
lcall
fnsave
adc
adc
xchg
or
push
cmp
rcrb
lret
push
lret
xor
lock
lcall
push
dec
push
insl
pop
adc
inc
jnp
loope
add
stos
push
fimull
frstor
inc
adc
loop
lret
ss
push
pop
rolb
and
cmp
data16
inc
dec
sub
ret
dec
lock
push
add
push
shrl
lods
sbb
push
je
lcall
jg
push
divl
or
iret
andb
xchg
stos
divl
add
mov
popf
iret
shlb
mov
mov
xor
hlt
pop
pop
push
test
push
mov
cmp
sub
int
xchg
fildll
or
mov
push
nop
stos
jmp
add
in
fisubrl
xlat
scas
xchg
iret
outsb
xor
int3
push
inc
les
adc
or
adcb
jbe
pop
outsl
pop
cmpsb
or
mov
cmp
pop
fwait
test
push
add
dec
mul
mov
mov
test
test
mov
lret
xchg
popa
stos
mov
mov
fstpl
je
int
flds
shlb
ds
mov
mov
sub
mov
je
xor
call
fcmovnu
or
jmp
or
andl
es
xor
imul
rcrl
fsubrs
sub
and
aad
cwtl
lock
push
cs
xchg
mov
js
int3
mov
sbb
and
int
pop
and
inc
hlt
mov
mov
sbb
fists
mov
cs
xor
sub
mov
sub
inc
mov
pop
js
sub
xchg
add
hlt
loope
int
shll
dec
push
mov
jno
adc
lcall
inc
mov
fnstenv
les
push
mov
pop
inc
jns
neg
and
arpl
mov
push
fnstenv
jl
aaa
sub
add
xor
xor
mov
jnp
mov
aam
push
xor
xor
mov
lret
in
add
bound
dec
push
sahf
lea
imul
or
pop
scas
dec
and
xor
cmpb
lods
movsl
jle
iret
outsl
push
addr16
cld
jg
mov
pop
push
add
jp
addb
repz
cltd
fidivl
pop
fcomp
sbb
xchg
xchg
push
leave
fistpl
xchg
push
pushf
les
lahf
test
popa
loopne
in
inc
mov
dec
cmp
push
lock
outsb
xchg
ljmp
mov
lahf
or
fwait
xor
inc
cmp
ljmp
lahf
inc
in
aaa
jl
sahf
loopne
push
mov
lahf
dec
sbbl
mov
push
xor
adc
rcl
inc
jg
fldl
pusha
xor
notb
pop
test
dec
insl
lcall
mov
adc
jg
aas
iret
dec
out
mov
fcoms
jne
dec
nop
pop
dec
pop
jg
pop
cmpsb
scas
cwtl
cmp
dec
or
jns
adc
mov
xchg
fldt
jae
mov
std
fs
cmpsl
push
lret
xor
shrb
cmp
jp
hlt
sub
icebp
pmovmskb
push
out
nop
push
mov
mov
outsb
fisubs
icebp
cs
dec
xor
mov
aad
cwtl
mov
lahf
out
dec
or
or
and
bound
jnp
add
aam
dec
test
loope
aam
lcall
sti
cmp
jbe
pop
cmp
repz
rolb
enter
xor
mov
xor
bound
cld
add
addr16
add
mov
jecxz
adc
add
ret
roll
loop
adc
mov
push
lods
mov
aaa
mov
xchg
in
js
jl
mov
xchg
xor
cmpsb
int3
xchg
cmp
pop
imull
add
jmp
andb
mov
xchg
popaw
and
jl
movsl
dec
movb
inc
xor
inc
stos
inc
adcl
push
es
cs
push
push
lcall
dec
sub
movsl
cmp
xor
adc
pop
out
scas
mov
insb
and
test
lds
sub
sub
inc
mov
arpl
gs
jl
xlat
int
repz
mov
mov
in
mov
das
inc
lods
popf
pop
push
jge
jo
mov
jb
push
or
xor
aas
leave
mov
int
in
aad
push
cmp
pushf
xor
aas
call
mov
ds
pusha
jl
add
dec
or
sahf
stc
mov
sub
pop
sbb
stc
xchg
dec
pop
lock
xor
lret
std
inc
test
addr16
fstps
inc
test
test
or
fprem1
inc
mulb
scas
and
push
mov
je
mov
xor
in
out
popf
addr16
int3
cmp
rcll
jecxz
or
pop
inc
xor
push
mov
movsb
shlb
in
ficompl
adc
js
fnstcw
mov
push
imul
push
imul
mov
fnstcw
orb
test
shrb
push
dec
jo
dec
data16
fadds
jge
iret
push
xorl
xor
add
lahf
mov
sbb
insb
sbb
mov
xchg
mov
addl
mov
leave
movsl
sbb
popa
sarl
sub
jmp
iret
insb
add
in
dec
iret
jae
test
mov
push
or
push
dec
daa
jmp
insl
outsb
dec
adc
adc
jl
pusha
xor
xchg
or
sbb
adc
lods
jecxz
pop
fs
dec
into
xchg
xchg
or
data16
push
jp
idiv
cmc
ret
cmp
aaa
push
aas
lahf
xchg
shrb
adc
int3
ret
dec
ja
icebp
sbb
fbstp
pop
sbb
or
push
pop
subb
adc
mov
jecxz
int3
dec
add
scas
aas
leave
adc
scas
cmp
xor
cld
dec
movsb
fsubs
cmp
mov
push
lcall
mov
gs
les
lahf
sarl
dec
push
xchg
cmp
loopne
cmp
in
push
xchg
add
fdivs
out
dec
test
cmpsb
adc
lret
inc
sub
or
in
addr16
mov
xlat
addr16
scas
fsubp
sbb
cwtl
fldl
mov
fdivl
pushf
xchg
out
sbb
mov
popa
mov
das
lods
cmp
xchg
inc
mov
adc
stos
out
pop
pop
cmc
cmp
scas
rcrl
mov
fistpl
pop
inc
stc
xlat
add
cmp
mov
dec
cmpb
add
hlt
je
aaa
inc
and
lods
push
stos
movsl
adcl
cwtl
iret
add
bound
testb
lret
dec
ds
int3
lods
mov
cs
icebp
sti
cld
jnp
or
cli
add
mov
dec
fwait
mov
mov
and
xor
lcall
jbe
mov
aam
add
jbe
outsl
fsubr
bound
xor
mov
jb
fisttpll
ror
shl
cwtl
dec
cmp
ss
stos
ret
push
int
cmc
cmpsb
xchg
xchg
arpl
ret
pop
stos
sbb
sahf
sbb
fidivs
in
out
stos
stos
mov
rcrb
idivl
xor
xchg
add
sbb
inc
fdiv
xchg
dec
or
fwait
aas
fmuls
andb
mov
loopne
nop
dec
jecxz
and
jmp
and
aaa
rorb
and
adcl
mov
jno
cmp
cli
mov
cs
and
mov
inc
pop
stos
fdivl
in
dec
jb
ss
adc
pop
out
xlat
cmp
in
mov
gs
aas
mov
or
mov
pop
lahf
popf
popf
jno
pop
push
jno
fcmovu
sub
ds
aas
inc
and
jp
add
xchg
lahf
sub
inc
repz
stc
mov
mov
or
stos
mov
sub
ficompl
mov
cmp
xor
loopne
sbb
das
inc
sbb
cltd
in
mov
scas
sahf
testl
shl
sub
test
cmp
sub
lods
loop
push
div
lcall
das
pushf
push
fcmovbe
arpl
add
rolb
add
bnd
mov
xor
xor
jmp
cmp
and
leave
shlb
dec
sbb
adc
mov
dec
scas
fistl
out
mov
jmp
das
mov
leave
testl
packuswb
push
bound
inc
call
inc
cmp
cmp
insb
push
lods
lock
gs
bound
push
lock
lcall
dec
and
das
cmp
mov
ja
cltd
xchg
shr
sbb
adc
lahf
jl
fiadds
add
push
jp
dec
addr16
pop
pop
out
vmread
and
aam
imul
repz
pop
jge
sub
mov
scas
fnstcw
mov
out
inc
lret
inc
daa
scas
xchg
ss
scas
stos
ja
lret
notb
out
adc
out
or
jno
mov
popf
scas
and
xchg
test
mov
lock
es
rcl
push
pop
xchg
lods
lds
les
loop
add
sbb
mov
movsb
mov
sahf
in
lods
in
test
outsl
sub
shl
inc
mov
rol
inc
scas
out
popa
push
xchg
push
jmp
add
sub
xorb
aad
es
lods
xlat
loop
fcomip
fcoml
aad
mov
in
push
ret
dec
add
adc
ftst
inc
sbb
pusha
add
mov
nop
xor
lods
insl
cli
inc
loope
sbb
lret
shll
dec
pop
add
push
stos
pop
sub
pop
xor
dec
fs
daa
stc
xor
mov
lret
push
xor
loope
push
push
xchg
pop
aas
mov
outsl
inc
cs
push
popf
icebp
ror
dec
int3
orl
leave
push
cmpsb
push
cmc
hlt
aas
int
in
push
xor
add
mov
adc
mov
stc
mov
mov
add
fldl
imul
dec
cltd
adc
fcompl
popa
pop
push
orl
jae
cwtl
mov
jg
dec
push
pop
lds
jne
aaa
cltd
iret
ljmp
sbb
inc
sarl
xor
jmp
imul
pop
idivb
lcall
sub
and
jo
xchg
je
cmp
pop
jg
call
xor
stc
les
inc
mov
mov
or
push
jmp
lods
pop
leave
inc
call
sbb
cmpsb
xor
jg
aaa
push
fwait
imul
xor
xor
movsb
sbb
jo
xchg
mov
mov
mov
or
mov
int3
inc
jge
dec
pusha
push
jbe
aaa
cmp
das
sub
xor
adc
fiadds
mov
test
add
cmp
ljmp
cld
lcall
sbbb
bound
popa
xor
es
das
lahf
loope
inc
rcll
stos
xchg
sbbb
rclb
jno
lcall
popa
stos
cs
inc
dec
repnz
inc
xchg
shll
and
dec
aam
shll
xor
jle
fcomi
ret
lods
es
dec
mov
mov
popf
aad
sbb
add
test
push
mov
scas
les
pop
dec
xor
call
jnp
movsl
pushaw
jmp
mov
jb
rorl
lods
test
jne
int3
shrb
std
mov
inc
push
pop
jbe
inc
outsb
mov
repnz
push
in
push
std
js
loopne
lret
out
aas
push
jno
inc
jge
fwait
outsl
cs
mov
xor
loope
int3
pop
xchg
subb
and
sarl
mov
xor
xor
adc
cmpsb
insl
mov
test
dec
add
pop
inc
pop
cs
movb
imul
jmp
stos
mov
insl
mov
movsb
push
imul
pushf
jne
test
clc
xchg
les
aaa
clc
cmovae
pop
outsb
pop
loope
in
fildl
dec
mov
add
jae
and
roll
push
lds
add
mov
enter
scas
jecxz
mov
xchg
or
inc
jnp
int3
xchg
xchg
shr
je
adcb
iret
into
jbe
sbb
aas
ja
imul
or
daa
testl
lds
pop
adc
int3
inc
xlat
xchg
mov
aas
mov
mov
jg
jle
outsb
ret
xor
jge
dec
mov
bnd
dec
mov
cmp
orb
inc
add
dec
testb
test
pop
lcall
or
lret
dec
lret
fidivrs
mov
sbb
repz
xor
clc
mov
inc
push
xchg
sbb
inc
cmp
or
fnstsw
outsl
cmp
repnz
cmp
sbb
jl
add
push
mull
lcall
outsb
sub
lds
cmpsb
push
pop
loope
ss
push
push
dec
test
arpl
jae
scas
scas
sub
jae
call
mov
dec
or
pop
arpl
mov
fsubrs
gs
jg
lds
pushf
out
in
mov
inc
dec
or
or
fwait
shl
stc
xchg
jge
jb
daa
repnz
inc
out
xor
pushf
stos
call
and
aas
movsl
cmp
jne
sti
mov
shrb
sub
mov
adc
in
xchg
sti
jnp
test
xchg
enter
insl
lods
jle
xor
arpl
mov
sbb
sub
ret
fdivr
js
xchg
xor
popa
inc
nop
outsb
push
shlb
shrl
mov
push
pushf
mov
sti
ja
out
je
aad
or
xor
test
loop
push
pop
xor
in
mov
gs
jae
jb
pop
and
dec
xchg
mov
je
movsl
stos
jb
lods
add
push
das
mov
rcrl
test
sar
jb
jnp
hlt
xchg
aam
hlt
popf
xor
in
leave
pop
mov
mov
imul
out
in
mov
sbb
xchg
mov
es
mov
addr16
push
fstl
inc
cs
pop
aas
call
hlt
jb
push
pop
movsb
popa
rcrb
jge
test
je
shlb
daa
push
dec
xchg
jle
xchg
mov
stos
outsb
call
mov
das
or
jne
mov
push
fcmovu
sbb
insb
and
ljmp
int3
or
or
popf
out
adc
repz
inc
sarl
jge
inc
pop
cwtl
mov
jge
pop
and
mov
push
sub
jne
lahf
sbb
sbb
out
pop
jae
xor
push
inc
adc
stos
out
lods
es
test
cmpb
xlat
or
in
and
jecxz
lcall
insl
fcmovu
loope
xchg
mov
mov
cld
mov
jo
loope
scas
dec
mov
test
sbb
test
int
push
xchg
cld
mov
jo
bound
sub
insb
jbe
testb
mov
lock
mov
idivb
pop
das
cli
shll
jbe
and
inc
adc
out
fnstsw
pop
xchg
sbb
dec
loopne
dec
jecxz
sub
mov
loope
cs
xor
push
ds
enter
sbb
sarl
or
sti
inc
out
lahf
jg
addb
sub
mov
push
nop
in
and
adc
push
sub
push
mov
out
roll
ss
aad
das
or
data16
aas
clc
inc
pop
ljmp
nop
add
mov
mov
insl
addl
idivb
jae
in
mov
push
sbb
jno
sbb
scas
inc
mov
out
stos
paddusw
cs
sub
cwtl
push
pop
pop
lock
push
or
add
pop
cmc
jne
lret
cmpsb
push
xlat
mov
xchg
inc
outsb
ja
jae
mov
icebp
arpl
and
icebp
adc
xchg
cmp
push
std
popa
popf
mov
push
stc
arpl
pop
adc
imul
sbb
xchg
cmpsl
popf
or
in
cltd
leave
call
mov
shrb
leave
push
sub
mov
xor
jg
cs
shr
sbb
js
out
jecxz
icebp
jne
ja
xchg
or
fimuls
adc
or
cmpsl
mov
push
insl
ss
jg
jae
js
sub
dec
or
xor
jecxz
stc
jbe
jle
shll
ja
cmp
int
xor
fwait
jae
jo
lret
repnz
jl
stc
xlat
roll
pushf
pushf
cmp
mov
sbb
push
loopne
repnz
pop
push
xchg
xor
test
sub
sub
mov
std
push
lret
js
xor
stc
jp
ret
jmp
nop
in
sti
or
or
out
lahf
ljmp
or
or
pop
xchg
mov
in
cmc
mov
or
imul
cld
retw
adc
push
pop
mov
movsb
adc
sbb
or
and
xchg
popa
int
and
test
pusha
adc
cwtl
push
in
jl
testl
je
adc
sbb
jnp
ja
fsubl
jo
arpl
and
lods
enter
or
fidivs
jmp
cwtl
inc
pop
arpl
imul
mov
jp
jae
mov
sub
loopne,pn
fisubrl
xor
pop
or
mov
xor
xchg
arpl
fs
lods
xchg
adc
fldt
or
push
sbb
lods
test
jmp
bound
fwait
icebp
gs
sbb
notl
iret
xchg
dec
mov
jp
pop
sahf
mov
lahf
mov
add
scas
and
xchg
and
in
adc
push
insl
push
ret
movsl
cld
fbld
int
xor
sbb
cmp
mov
gs
repnz
jecxz
jecxz
add
and
test
test
fldl
jo
pop
pop
out
xchg
add
aad
pop
push
push
mov
adc
mov
cmp
sti
sbb
and
cmp
xor
rcl
aam
fs
cmp
sbb
dec
dec
mov
pop
test
mov
hlt
xor
insb
push
jns
test
sbbl
jo
add
pop
add
scas
xor
pop
shll
inc
jbe
mov
movsl
mov
popf
out
sub
fs
adc
popf
pop
fmull
dec
test
adc
test
dec
add
repnz
inc
mov
or
ficoms
call
cmp
aas
sub
jb,pn
fnstsw
pop
into
cmp
xor
lods
xor
mov
lods
dec
pop
adc
pop
inc
lret
repnz
popf
out
dec
sub
les
mov
repz
daa
in
enter
and
and
imul
imul
shl
rorb
sbb
mov
jbe
nop
ljmp
adc
je
aam
push
or
fcmovb
std
mov
add
xor
cmpsl
jnp
in
les
xchg
pop
mov
cli
stos
sti
mov
imul
fwait
hlt
fdivs
in
mov
ret
in
sbb
mov
sbb
enter
sub
mov
and
imulb
inc
mov
cmp
dec
lock
in
pop
sahf
sub
push
lock
inc
nop
xorb
aam
jmp
imul
cmp
sub
hlt
pop
in
inc
rcrb
fisubrl
sbb
outsb
insl
push
and
lret
cmpl
or
test
enter
out
rcr
test
push
scas
insb
pop
cmp
cli
loop
add
ja
stc
mov
sbb
bound
aad
lds
mov
sub
push
sub
shrl
pop
mov
orb
sbb
call
push
and
xor
mov
lock
lahf
mov
lret
shlb
push
test
xor
lcall
hlt
mov
orb
stos
out
jge
mov
scas
sbbb
insl
test
mov
mov
sbb
pop
and
das
push
and
push
arpl
adc
sbb
add
enter
popa
das
lldt
or
mov
or
mov
int
nop
inc
out
aad
fimull
and
sub
mov
add
pushf
xorl
mov
mov
fstl
gs
out
pop
imul
jnp
fistps
jns
pop
stos
arpl
push
jl
pop
and
push
cmc
or
loop
cmpsb
mov
movsb
int3
jno,pt
adc
pop
js
inc
imul
push
or
hlt
lds
ds
movsb
dec
mov
stos
sub
push
or
jp
mov
outsb
je
add
addb
mov
xor
lret
pop
jmp
lods
pop
in
sbb
stc
out
out
mov
cmp
mov
inc
popa
aaa
or
pop
sbb
xchg
lea
les
ljmp
inc
mov
fisttpl
loopne
mov
jecxz
loop
pop
xchg
pop
inc
rorl
sub
mov
xchg
jbe
cmovs
mov
and
test
fidivrl
in
xchg
jns
jle
jecxz
push
push
push
shl
push
xor
cli
cmpsl
inc
mov
and
ret
inc
xor
or
out
and
mov
mov
aad
add
sub
mov
xor
and
cmp
popa
pop
mov
pop
xchg
adc
jecxz
pop
pop
das
pop
aas
vpshufd
js
lock
lret
pop
cmp
sar
fimull
cmp
movsb
or
daa
pop
inc
mov
insb
lds
out
fiadds
mov
sbb
ret
push
addr16
and
mov
fsub
mov
dec
clc
mov
lahf
dec
push
mov
or
cmp
shll
negb
outsl
xor
sti
push
in
lods
in
fldpi
cmp
insl
mov
mov
xor
xor
mov
aam
cmp
push
not
shrl
push
cltd
pop
out
push
pop
mov
stc
gs
lods
stos
pop
enter
and
setbe
cwtl
or
lock
mov
mov
pop
out
xor
daa
xor
mov
mov
ja
repz
stc
out
aas
and
roll
mov
mov
pop
test
mov
scas
mov
loop
fwait
and
pop
push
cld
int3
or
jo
out
pop
xchg
mov
iret
inc
push
cmc
call
test
std
xchg
cltd
outsl
decl
inc
or
xchg
data16
mov
inc
mov
popf
ret
into
push
icebp
in
mov
cmp
xlat
test
add
add
or
mov
ja
in
sti
mov
rclb
jge
sahf
nop
xchg
add
mov
inc
or
imul
pop
add
or
stc
xor
and
scas
xor
lea
hlt
mov
in
arpl
xchg
add
sbb
mov
scas
icebp
enter
bound
in
mov
dec
xor
and
dec
mov
stc
mov
cmpsl
fbstp
fdecstp
pop
cmp
shrl
and
sbb
into
test
dec
cmp
or
lods
pop
test
loope
mov
cmp
jmp
mov
aaa
hlt
insl
sbb
das
ficoms
call
pop
xor
mov
jmp
jmp
pop
lods
push
es
fwait
mov
sub
ja
mov
mulb
push
mov
xchg
cmpsl
leave
in
mov
sbb
nop
mov
fucom
sub
inc
jns
xchg
mov
jecxz
popf
cltd
push
mov
or
jne
dec
or
bound
dec
xchg
popa
mov
clc
outsb
push
adc
inc
aam
inc
enter
xchg
jmp
dec
rcll
dec
or
es
lcall
pop
pop
movsl
push
mov
sub
push
es
sub
jne
push
xchg
push
or
imul
inc
xor
lret
les
xchg
xor
shl
sbb
adc
xor
stos
jmp
popa
gs
mov
pop
shlb
out
cs
ljmp
in
aad
add
shr
cmp
and
mov
daa
push
popa
sti
loop
cltd
outsb
ds
adc
inc
cwtl
sbb
out
pusha
ret
shlb
cmc
or
cmp
or
add
int3
mov
push
adc
sub
fcoms
pop
push
insl
or
addb
and
nop
or
mov
lret
add
xor
ljmp
enter
in
push
push
mov
cmova
sub
xor
jmp
cmp
mov
lods
in
jl
in
int
inc
insl
xchg
outsl
call
jnp
jno
mov
pop
and
out
inc
data16
mov
leave
in
pop
or
adc
int
mov
in
and
push
push
pop
popf
add
inc
mov
fs
and
movsl
cs
sbb
cmp
shll
fprem
jns
or
xchg
and
jg
add
and
out
mov
xor
mov
fs
inc
data16
sub
push
pop
les
arpl
xchg
push
mov
dec
scas
ret
mov
fs
pushf
das
push
and
mov
xchg
or
add
fs
xor
push
mov
mov
cmp
mov
sub
jp
xor
xor
testb
add
dec
mov
inc
loope
cmp
jg
inc
dec
adc
je
xor
arpl
std
cmp
jne
das
sbb
out
mov
add
and
add
mov
lret
aas
inc
pop
addr16
sub
jo
add
mov
push
icebp
movsb
lcall
pop
push
ficompl
inc
xlat
or
pop
leave
xor
mov
popf
ja
inc
out
popf
daa
mov
mov
pop
loope
sbb
sbb
sub
lahf
and
outsb
cld
or
jae
inc
outsb
scas
push
shll
jge
pop
add
pop
mov
cld
enter
xchg
fldt
jmp
enter
xor
mov
gs
xlat
pop
jnp
dec
jecxz
cli
loope
cmp
pop
dec
mov
fbstp
les
mov
sbbl
pop
nop
sbb
cmpsl
daa
and
mov
jp
je
insb
fisubrs
in
sti
pop
ljmp
stos
sub
imul
mov
je
dec
push
fisubs
xchg
add
jmp
int
int
xor
xor
lds
jnp
dec
pop
ror
mov
test
ret
mov
das
cmpb
loop
mov
mov
jb
push
ja
push
out
cli
add
sti
mov
xor
and
stos
loop
push
out
add
or
jno
lds
mov
jmp
cltd
mov
into
fists
clc
and
adc
cltd
inc
ret
repnz
int
test
cmpsl
shlb
lea
fldenv
jno
push
inc
push
sbb
pop
sub
movsb
mov
mov
fdivrs
std
dec
rclb
movsl
fwait
cltd
or
push
lea
enter
lock
sub
mov
stc
push
push
jne
shl
inc
nop
jb
comiss
xor
arpl
inc
jb
subl
out
lds
iret
or
movsl
dec
mov
add
out
inc
push
mov
subb
xchg
pushf
sub
push
out
sti
sub
roll
push
push
dec
jg
test
scas
add
xchg
mov
jb
fstpt
push
insl
out
push
notl
jle
icebp
aaa
xor
jae
shlb
rorl
in
xchg
mov
mov
cld
js
mov
mov
mov
jg
dec
sub
iret
push
xchg
and
mov
lods
cli
fsub
test
cmp
inc
data16
test
jbe
push
mov
push
notl
orb
inc
aad
addb
insl
sahf
xlat
sbbb
and
push
mov
hlt
std
xor
sbbb
xchg
sti
adc
add
cmp
mov
in
sub
int
rclb
fdivr
fmul
dec
mov
adc
mov
inc
sbb
jp
jnp
add
push
test
sahf
out
inc
lea
xorb
rorb
mov
cmp
ret
int
inc
iret
iret
cwtl
inc
xor
jl
push
test
add
and
jno
gs
mov
adc
jp
ret
imul
and
shlb
add
popa
inc
sbb
mov
dec
sahf
and
or
and
popa
adc
ljmp
jne
xlat
lahf
ss
xor
mov
cmp
lds
jnp
and
insb
sub
inc
js,pn
jecxz
pop
or
and
jle
outsl
sub
mov
mov
and
or
push
mov
mov
ljmp
loope
lods
sbb
mov
and
pop
push
int
jmp
add
adc
sub
pop
sbb
push
jmp
fwait
xchg
xchg
imull
add
jb
add
inc
aaa
outsb
call
dec
fwait
es
mov
pop
dec
push
cmp
gs
xor
cs
xor
inc
xor
xlat
sbb
xchg
inc
xchg
pop
adc
stos
push
inc
fwait
sbb
pop
std
out
enter
and
cmpb
nop/reserved
nop
or
jg
xor
pop
lcall
pop
mov
outsb
jle
js
sub
movsb
pop
popa
push
cmpl
dec
xor
jl
sub
push
mov
sub
shlb
jno
jb
jae
icebp
mov
pop
add
aam
cmp
sub
mov
repnz
pop
loop
imul
pop
inc
outsb
dec
and
jbe
add
inc
push
daa
mov
out
mov
fldl
loope
mov
xchg
sbb
sbb
nop
je
sub
push
push
sbb
lret
or
sub
sbb
in
test
out
stc
lret
mov
mov
pushf
mov
lds
xchg
in
clc
push
outsb
adc
sub
and
lret
test
das
cmp
leave
inc
js
jle
aaa
add
pop
pop
cmp
push
xchg
push
pop
jae
js
ficomps
push
lods
ss
jno
lods
push
mov
mov
adc
aaa
pop
scas
pop
or
movsb
inc
orb
in
das
lahf
push
sub
and
inc
push
dec
in
dec
or
cltd
push
ja
into
pop
test
adc
push
sar
inc
into
jb
rolb
fiaddl
mov
push
ljmp
mov
scas
aam
aaa
sub
arpl
add
mov
pop
out
inc
aam
jge
fdivrs
andl
and
or
test
add
or
pop
jecxz
inc
add
mov
imul
clc
or
jmp
sbb
sub
pop
arpl
mov
push
and
rep
jmp
xor
push
adc
or
inc
dec
lret
cmpsl
dec
xchg
inc
loopne
sbb
dec
sarl
adc
add
inc
lcall
or
lods
xlat
nop
test
mov
mov
cmp
and
imul
inc
cmpsl
div
in
leave
repz
aam
xor
cmpsl
jb
test
mov
pop
sub
inc
imul
jmp
mov
mov
sti
push
ljmp
mov
ljmp
sbb
pop
notb
xchg
pop
ret
aas
pop
pavgw
jno
cmp
insl
and
adc
js
xchg
inc
or
cs
loop
mov
cwtl
mov
notb
nop
push
adc
popa
gs
mov
mov
mov
sub
shrl
adc
pop
jmp
fucomp
mov
adc
cwtl
rcll
pop
dec
addr16
dec
push
or
cwtl
ss
or
sbb
nop
or
rclb
or
pusha
ja
ret
es
dec
imul
adc
loope
jo
inc
enter
push
jge
sbb
mov
pusha
lods
into
fsts
xchg
mov
pop
inc
test
sahf
pushf
fdiv
mov
leave
mov
push
sbb
mov
into
std
inc
ret
adc
mov
add
mov
lret
mov
or
inc
fwait
ds
stos
mov
mov
lret
loope
addl
jle
mov
mov
adc
loopne
loop
jno
inc
aas
and
aad
je
sub
idiv
pop
mov
outsl
pop
inc
add
repnz
sti
jno
dec
mov
or
xor
mov
lea
sub
cs
adc
push
pop
xor
xchg
adc
and
jbe
andl
jns
gs
xchg
nop
dec
adc
popa
shrb
push
shrb
mov
sarb
out
outsl
mov
fs
add
mov
jp
sbb
ss
add
sub
stos
sbb
sbb
or
mov
scas
enter
push
dec
imul
stc
push
enter
fstl
adc
shl
in
inc
cmpb
adc
mov
aad
test
mov
add
mov
push
push
loope
push
pop
add
divb
push
sbb
lea
pop
test
adc
or
hlt
lock
call
loope
movsb
lods
xchg
call
dec
out
ja
add
xorb
aaa
jmp
aas
push
psubusb
fiaddl
mov
and
or
jae
sbb
inc
cmp
std
sbb
or
aad
jle
rcr
push
stc
lds
mov
aaa
jp
inc
dec
cmpsl
dec
pop
inc
adc
xor
es
movsl
lds
xor
sub
popf
mov
mov
mov
mov
sbb
in
dec
and
bound
mov
ret
pop
test
les
xchg
test
push
or
fists
aad
add
push
ss
add
xchg
fadds
and
add
cmp
in
or
and
push
in
imul
sbb
les
lret
lcall
into
xchg
sub
add
icebp
rcll
scas
bnd
mov
daa
loop
push
std
stos
pop
aaa
inc
mov
jns
jle
lcall
mulb
scas
push
xor
dec
mov
dec
inc
or
insl
aas
inc
into
jb
cmp
sbb
mov
push
inc
fidivl
lahf
or
sbb
and
addl
std
inc
arpl
insl
fiadds
pusha
scas
in
push
int
mov
fdivl
les
test
jnp
adc
fisttpl
std
lcall
mov
jnp
pop
mov
dec
cltd
insl
pop
int
dec
pop
push
xchg
lcall
sub
jl
mov
and
pusha
adc
mov
in
pop
ret
add
loope
lock
fistps
ja
insb
mov
das
xor
mov
mov
roll
insl
xor
jmp
add
clc
mov
sub
repz
jmp
pop
call
adc
jmp
xlat
pop
popl
lods
mov
and
mov
xchg
cs
mov
arpl
out
add
ficoms
sbb
pop
mov
lret
outsb
mov
xchg
enter
mov
fdivs
sbb
scas
jbe
mov
push
lods
adc
shlb
jecxz
pushl
or
sbb
int
insb
ficoml
hlt
or
jae
test
cltd
inc
sbb
mov
imul
ficoml
pusha
and
cmp
mov
inc
loope
dec
jge
xchg
jnp
es
stos
jns
push
je
sahf
xchg
and
ss
sub
mov
lret
movsl
adc
mov
adc
out
cmpsb
pop
add
mov
mov
nop
adc
pop
scas
imul
dec
lret
pop
adc
adc
scas
aam
inc
test
lret
xchg
std
aaa
and
std
inc
jns
or
movsb
jae
xchg
push
mov
js
loopne
pop
addb
leave
rcrb
repz
pusha
cmpsl
popa
xor
sbb
les
dec
mov
notb
xchg
sbb
aas
mov
frstor
lret
pop
sbb
out
xchg
cld
sbb
cmp
addl
cld
inc
mov
inc
jle
sbb
mov
xchg
imul
inc
mov
int3
inc
and
pushf
out
xor
jl
fs
dec
or
cmp
and
cld
subb
mov
mov
lods
aad
push
xchg
xchg
mov
lods
movsl
into
push
in
lcall
outsl
ret
je
inc
and
or
sub
jae
pop
aam
aas
inc
pop
jb
inc
adc
mov
stc
fisubs
pop
clc
jbe
jns
outsb
pop
rorl
lock
mov
pusha
jb
jno
cltd
dec
mov
cltd
adc
cltd
or
sarl
outsb
gs
arpl
mov
cmpsb
pop
push
xor
mov
inc
roll
push
rorb
cmp
roll
addr16
xlat
xor
data16
fldt
xor
lods
and
inc
in
sbb
xchg
pop
call
and
xor
xor
lods
dec
les
out
xchg
insl
mov
mov
xchg
sub
mov
cld
ret
and
sbb
aam
mov
push
xchg
in
out
aas
push
lock
movsb
sbb
adc
lods
sbb
lcall
jecxz
and
mov
push
idivb
leavew
mov
fcoml
inc
adcb
stc
jns
pop
cwtl
or
sbbl
mov
and
imul
mov
cvtdq2ps
jg
les
ficompl
mov
lods
lock
aas
cmp
adc
xchg
push
jl
and
add
push
and
dec
or
inc
es
push
cmp
fidivl
dec
in
cmp
xchg
inc
xor
cmp
mov
xchg
stos
lods
lea
cmp
idivb
sub
shrb
and
lahf
pop
sbb
pop
adc
and
xor
sbbb
repz
sbb
stos
ret
lret
jae
inc
das
sub
adc
or
outsb
dec
inc
iret
outsl
imul
pop
xor
imulb
mov
sub
leave
gs
add
xchg
test
loopne
xor
xor
aam
mov
fistl
out
cmovnp
sbb
imul
ds
mov
mov
mov
or
inc
fs
std
pop
testl
push
loopne
cmp
sub
pop
jge
mov
in
or
hlt
icebp
test
mov
jns
nop
xor
not
sub
jnp
xchg
aam
add
xchg
sbb
sub
cli
jp
xacquire
adc
or
ss
jnp
out
rorb
fidivs
inc
dec
movsl
test
add
inc
add
pop
push
or
js,pt
jecxz
mov
pushw
lds
fimull
pushl
aam
or
push
les
jl
inc
and
jp
out
div
out
xchg
call
shlb
int3
mov
out
insl
jae
cmp
jae
jmp
std
mov
xor
iret
jae
sbb
shll
in
cwtl
sub
pop
xchg
mov
ret
or
push
mov
cmp
pushf
ret
add
add
xchg
push
frstor
lret
mov
mov
jmp
jno
sarb
sub
stos
lret
test
ret
shrl
icebp
push
pop
jb,pt
fsubl
rcr
jns
and
pusha
adc
outsl
adc
or
lret
xor
pusha
mov
sbb
call
mov
push
rcrb
jg
xchg
dec
fst
jge
lods
pop
cs
mov
movsl
outsb
addr16
xorl
fsub
scas
add
subl
out
jns
aad
aam
test
dec
mov
xchg
in
jns
into
push
xor
bound
adc
negb
cwtl
xchg
pop
adc
sbb
xchg
jne
and
jns
inc
ljmp
push
fwait
push
mul
xchg
imul
mov
aad
or
or
push
das
fcmovbe
or
jb
dec
notl
in
xor
push
fimull
and
fiaddl
mov
imul
bound
or
sbb
lds
out
push
sbb
clc
cmp
insb
fstpl
add
add
stc
mov
lret
mov
push
out
push
sbb
je
sbb
mov
das
subl
fistpl
fistpl
xchg
decb
dec
jp
push
pusha
pop
mov
jae
fstl
lret
push
mov
sbb
loope
cmp
js
push
and
shlb
fsubs
mov
cmpsl
jno
inc
mov
mov
daa
push
xor
inc
test
int3
add
lcall
dec
sub
sti
rcrb
in
or
xchg
mov
sub
mov
dec
call
stos
stos
adc
stos
in
aad
cli
jp
pop
scas
or
adc
addl
xor
cmp
inc
icebp
mov
xor
or
out
mov
lock
inc
movsl
lret
enter
cmpsl
rorl
inc
lcall
push
leave
cmpsb
stc
out
dec
mov
outsb
adcb
loope
xchg
adc
in
jae
add
inc
add
xor
int
push
add
pop
stos
iret
cmpsl
jg
mov
sbb
int
jno
lahf
imul
add
popa
icebp
xchg
adc
fstpl
sub
xor
pop
pop
sbb
out
inc
sbbb
movsb
or
or
pop
add
stos
hlt
inc
rorb
cld
lock
into
push
je
and
add
lahf
mov
iret
lahf
jecxz
cmp
insb
mov
lods
flds
loopne
pop
leave
xchg
daa
xor
jo
jo
mov
int
sub
dec
loopne
or
sbb
mov
pop
in
loopne
pop
shlb
sub
mov
mov
mov
xor
scas
out
insb
push
cmp
xor
fadds
push
inc
sbb
ds
xchg
in
pop
mov
cmpsl
mov
pop
das
mov
std
outsb
xchg
mov
push
call
mov
fisttpl
frstor
add
dec
lds
add
mov
inc
sub
int
scas
xchg
inc
mov
cwtl
jl
add
push
fisubs
pushf
xchg
mov
xchg
stc
and
push
dec
mov
imul
and
xchg
loopne
sub
arpl
push
mov
add
pop
xor
xchg
inc
mov
xchg
mov
repnz
lcall
pop
js
testb
dec
mov
ljmp
aaa
push
xchg
lods
sahf
xor
push
fs
mov
roll
or
push
movsl
xor
and
imul
push
mov
sahf
xchg
rclb
jp
mov
test
cmpsb
repnz
aas
addb
cltd
and
mov
dec
or
cmp
inc
movsl
sub
or
iret
pop
cmc
in
jns
sub
add
xchg
jl
pop
mov
repnz
push
mov
mov
push
ljmp
dec
leave
adc
or
or
xchg
pop
es
in
cwtl
inc
cli
repz
pop
lcall
arpl
sbb
pushf
std
mov
and
lock
push
call
rclb
add
jae
rol
mulb
cwtl
push
iret
js
lock
aaa
ss
movhps
es
and
xchg
mov
mov
push
in
dec
add
mov
lret
cltd
mov
cmc
fsubrs
stc
lds
mov
scas
xchg
sbb
jmp
shl
imul
ja
dec
dec
leave
call
in
dec
dec
dec
ja
mov
ret
sahf
mov
scas
pop
or
test
ret
xchg
mov
jl
xchg
pop
ss
decl
xor
cltd
cmp
cmc
push
or
dec
loopne
xchg
mov
daa
xchg
sub
rol
cmp
dec
cmp
movsb
std
repnz
jb
mov
pusha
add
mov
cltd
mov
int3
pop
push
dec
cmp
in
popa
pop
loope
mov
mov
mov
call
pop
or
je
fstpl
dec
and
out
adc
out
and
outsl
inc
cmp
loopne
cwtl
sub
insb
dec
push
data16
cmp
xor
scas
cmp
insb
cmpsl
repz
push
pop
dec
pop
mov
pop
sub
testb
stos
mov
lea
cli
or
pop
adc
rolb
js
mov
in
lock
ret
inc
jnp
and
cmp
in
mov
or
inc
into
adc
xor
and
leave
mov
mov
xor
sbb
adc
cltd
fs
aas
das
enter
ja
sbb
inc
rcrl
adc
leave
dec
iret
int
xchg
arpl
jecxz
mov
mov
iret
push
pop
ja
xor
jne
jnp
jb
ret
pushf
cmp
mov
push
cmpsl
adc
je
add
mov
out
fstpl
xlat
adc
jmp
jne
test
lret
xor
sub
sub
cmp
insb
sbb
dec
outsl
sbb
or
jno
push
and
push
stos
dec
js
or
mov
rorb
aaa
aam
xor
jl
push
add
scas
int
adc
mov
mov
push
jo
pop
inc
popf
cs
and
pop
testb
loopne
inc
xor
dec
pusha
dec
sbb
inc
and
cmpsl
fiadds
push
lret
test
jle
mov
outsb
cmp
shl
lret
addr16
aaa
dec
mov
loope
mov
xor
int3
jns
sub
cmp
movsl
push
add
call
rcll
jle
inc
mov
test
mov
cmpsl
jbe
sbb
sbb
and
cltd
adc
aam
mov
sub
in
lods
lret
fwait
jge
sub
int3
adc
mov
loop
mov
out
shrl
fwait
lcall
mov
lock
psllq
and
pop
test
push
lods
lea
bound
push
mov
push
push
or
pop
int
push
xchg
mov
clc
mov
fisubs
stos
mov
fadds
in
fsubrl
jb
mov
xchg
arpl
lds
sub
add
insl
dec
xchg
xchg
imul
jg
shlb
arpl
xchg
mov
mov
test
ficoml
bound
dec
shl
dec
aaa
fsubrl
adc
sub
sbb
pop
loope
icebp
flds
divl
mov
mov
ja
inc
cmp
test
dec
and
dec
pop
aaa
or
sbb
sarl
pop
xchg
lds
in
xor
jae
mov
out
add
xor
pop
xchg
ja
scas
inc
arpl
fadd
bound
push
mov
mov
mov
mov
sbb
jno
nop
and
jns
pop
icebp
ja
fdiv
xchg
push
in
or
popa
dec
xor
and
push
push
mov
jb
or
jp
outsl
enter
es
stc
js
scas
dec
imul
cmpsb
stc
test
cmp
cltd
jle
sub
add
pushf
sbb
cltd
imul
mov
jo
out
mov
int3
nop
xchg
pop
cld
test
out
jo
sbb
push
adcb
dec
dec
jl
jnp
add
dec
scas
movsl
sub
push
in
ja
jmp
xor
idivb
xor
push
inc
xor
push
scas
mov
pushw
mov
lods
outsl
dec
ds
sub
cmp
sub
pop
dec
mov
sarl
add
inc
pop
mov
dec
insl
shlb
in
push
rorb
jno
push
push
adc
jle
dec
scas
mov
pop
mov
dec
das
rcll
popa
inc
icebp
mov
fdiv
jae
jmp
push
pop
out
xlat
pop
and
xchg
out
sti
sbb
ja
cmp
cmpsb
fmuls
pop
adc
xchg
jecxz
cmp
fucomi
and
mov
aaa
sbb
imul
test
mov
cmp
xchg
pop
sahf
fwait
xchg
inc
into
enter
sub
push
les
cmp
add
or
cmpsb
into
add
sti
dec
xor
cmp
shr
push
mov
lret
popf
iret
js
popa
add
xor
ljmp
inc
decb
push
mov
je
xor
xchg
es
icebp
enter
mov
cmp
or
pop
cli
jne
dec
mov
rolb
dec
mov
fsubrs
nop
pop
jne
inc
inc
jne
repz
in
testb
cmp
xchg
and
fmulp
mov
outsl
xor
imul
sbb
stos
movsl
in
jmp
mov
arpl
inc
mov
arpl
cmp
mov
mov
cmp
pushf
dec
cmp
sti
push
add
sub
rclb
mov
xor
sti
clc
pop
nop
sub
mov
pop
ret
sub
in
push
jp
cwtl
or
dec
fiaddl
pop
out
pop
insl
cmp
flds
out
push
mov
fs
sbbb
in
pop
pop
std
flds
ret
testl
pusha
nop
push
pop
pop
xchg
andb
aaa
dec
push
mov
push
daa
repz
scas
pop
inc
pop
cmp
sbb
out
mov
mov
push
cwtl
fisubrl
push
and
pop
cmc
adc
cld
addr16
icebp
ja
pushl
xchg
pop
arpl
negl
jnp
notb
loopne
add
call
loop
xor
sbb
sub
test
cmp
cmp
ja
iret
push
test
xchg
pop
repz
loop
push
push
or
loope
add
lds
pop
icebp
and
call
in
cmp
int
mov
bound
ds
mov
aam
mov
or
add
and
and
dec
mov
sub
mov
cld
sbb
xor
add
out
bound
or
mov
data16
sub
dec
mov
cmp
ror
fmuls
xor
add
addl
jecxz
clc
sub
lcall
sub
sub
or
arpl
aas
pop
mov
lret
into
mov
push
cmp
in
in
imul
out
pop
push
test
sub
dec
xchg
mov
test
inc
test
jl
dec
stc
cltd
in
sbb
mov
jb
or
push
add
xor
mulb
stos
xlat
jg
mov
out
xor
push
mov
gs
stos
xor
add
adc
inc
or
in
adc
cmpsl
out
mov
in
xor
ret
cmp
loop
in
mov
lret
inc
sahf
data16
jl
mov
ds
div
mov
ja
loop
sbb
das
xor
push
xchg
test
aas
dec
pop
jge
add
leave
int
and
jmp
cmp
add
sub
sub
leave
je
shlb
loop
adc
mov
push
mov
adc
push
fsubrl
mov
pop
mov
mov
imul
lods
jl
jecxz
negb
mov
inc
out
rol
mov
loopne
data16
xorl
jl
sti
xor
and
jae
xchg
sub
dec
sbb
xchg
adc
sbb
in
in
sub
lret
test
js
rcrb
rorb
pop
sbb
out
outsl
inc
lods
xchg
inc
sub
add
data16
andb
mov
rcrl
pop
movsb
in
xchg
ret
insl
push
pop
adc
scas
jnp
cmpsl
ret
orl
nop
fmul
outsl
enter
dec
adc
sbb
cmp
xchg
nop
das
inc
imul
mov
jne
mov
sti
lock
lods
adc
ret
inc
push
arpl
mov
cli
or
test
imul
xor
fimuls
lods
sbb
int
pushf
popl
cmc
and
hlt
test
arpl
push
enter
pusha
idivl
sub
lock
rorb
mov
xor
lock
mov
jecxz
push
shll
inc
gs
icebp
js
sub
jb
sub
mov
jno
xchg
xchg
xchg
subb
jp
mov
pop
fadd
inc
push
jns
in
jo
fisttpll
push
scas
mov
xor
sub
fucomp
lock
outsl
dec
mov
movsl
inc
fwait
mov
add
dec
nop
push
jg
mov
dec
cmp
packsswb
add
jcxz
iret
xorl
fdivrp
jno
dec
cmp
aaa
push
call
jnp
cmc
adc
movsb
mov
data16
sub
movsb
into
add
sbb
sahf
aaa
into
rorl
xor
out
add
clc
dec
jmp
aad
pop
fistps
cli
cld
xor
xor
dec
stos
cmp
imul
popf
sbb
pop
sbb
rcrb
cli
out
dec
addr16
fildl
outsl
dec
aas
enter
daa
ljmp
push
inc
sub
aam
pop
inc
movsb
call
xchg
out
adc
data16
pop
fisubs
sub
add
fmul
lcall
std
xor
add
jns
cld
leave
test
lds
div
pop
inc
rdtsc
stos
pop
mov
cwtl
call
pop
add
scas
mov
add
sbb
aam
adc
aam
les
test
pusha
insl
and
lods
insb
int3
adc
jecxz
stc
xor
jg
mov
fsubl
xor
xchg
dec
leave
xchg
cmpsb
or
mov
stos
push
enter
ret
mov
iret
shrb
xor
xor
sub
mov
mov
fcomip
mov
movsl
inc
sbb
mov
mov
mov
lahf
inc
mov
mov
add
jg
and
sbb
xor
jmp
nop
sub
and
push
cmp
jb
mov
cli
or
jne
pxor
jbe
popf
pusha
out
ror
lods
dec
or
mulb
cwtl
into
xchg
xchg
in
pop
shll
xor
aad
inc
inc
jno
repz
pop
lods
ja
adc
addr16
data16
xchg
adc
stc
dec
inc
imul
dec
mov
jno
push
push
std
push
jne
dec
push
les
mov
je
xchg
clc
js
stos
push
popa
adc
xchg
mov
jg
adc
sbb
fisubrs
mov
sbb
sarl
addl
and
mov
pop
pusha
push
push
subb
push
dec
inc
testb
cmpb
movsb
adc
xchg
dec
jns
mov
and
add
test
bound
outsl
cmp
or
mov
punpckhwd
shl
int
aam
or
pop
lds
jge
xchg
pop
aaa
dec
xlat
adc
fidivl
sbb
sub
jb
test
adc
xchg
pop
and
fwait
lds
add
int3
jecxz
mov
arpl
xchg
adc
cmpsb
pop
enter
aam
sbb
ss
xor
or
xchg
jl
arpl
jb
repnz
addr16
int3
inc
leave
push
xchg
lods
xor
inc
add
xchg
pop
xchg
jp
jg
in
imul
lcall
sbb
adc
or
xchg
loop
sbb
out
jge
cmp
mov
mov
cltd
mov
data16
sbb
lock
sbb
inc
sub
xchg
inc
sbb
adc
repz
xchg
xor
sarb
jb
lret
inc
outsl
cmp
jno
lods
xor
jle
dec
dec
inc
xor
lcall
mov
rorl
clc
sub
add
icebp
mov
or
cmp
push
movl
add
push
push
jnp
lds
lds
sbb
dec
fsts
mov
ss
push
mov
mov
cmp
and
push
ss
fs
pop
dec
push
in
push
xor
dec
test
jbe
mov
xor
out
inc
repnz
jecxz
jp
out
cld
sahf
dec
ljmp
or
stos
add
sub
mov
arpl
rorl
insb
push
es
rcll
js
in
fnsave
push
fimull
xchg
repnz
aas
sub
jge
lods
push
in
mov
mov
movsb
mov
jbe
scas
xchg
rcr
lock
xchg
push
adc
lret
cmc
xchg
mov
fsubrs
gs
fadd
pushf
mov
hlt
mov
push
sub
fcmovne
adc
lock
push
cmp
xchg
adc
imul
xor
notl
mov
lcall
icebp
adc
or
push
jmp
and
push
sub
popf
sub
or
in
xor
jle
mulb
mov
in
fstpt
dec
loopne
das
insl
push
into
or
in
and
aaa
xchg
mov
es
push
push
std
inc
push
outsl
int3
sub
daa
pop
pop
push
cmc
or
jg
sub
cmpsb
dec
std
or
nopl
insb
sub
mov
lock
sti
fldln2
mov
push
or
hlt
lods
test
addb
movsb
sub
into
pusha
test
pop
add
js
dec
dec
aad
lcall
cwtl
cmp
loope
jl
xchg
mov
pop
fldcw
into
adc
addr16
test
sti
cmpl
imul
fimull
and
push
push
mov
stc
out
dec
jns
push
inc
sub
sbb
pop
test
sbbb
jl
jl
popa
out
jo
ret
adc
or
push
lods
pushf
ds
in
pop
mov
test
out
push
scas
push
shll
in
sub
fwait
mov
inc
and
push
inc
test
push
pushf
shll
in
dec
mov
lahf
jg
cmp
in
fdivl
in
mov
mov
loopne
scas
adc
push
cmp
pop
fldl
cltd
mov
je
push
sahf
stc
inc
sub
adc
xor
mov
or
in
adc
or
adc
cmp
out
js
cmpsl
or
rcrb
xorb
xor
inc
hlt
jge
or
add
sbb
shrl
mov
daa
scas
xchg
jae
push
iret
call
test
aas
push
gs
orb
push
push
mov
rorb
lret
mov
or
xchg
pop
inc
push
xor
movsb
out
sub
iret
repz
cmpsl
scas
inc
pop
out
lods
xchg
mov
xlat
mov
mov
sub
push
mov
hlt
aaa
ljmp
jns
arpl
imul
arpl
sbb
pop
jecxz
dec
mov
mov
mov
mov
mov
stc
xorl
mov
adc
lret
repnz
imul
call
xchg
xor
gs
nop
jl
loop
dec
cmpsb
inc
movsb
sbb
inc
stos
repz
xchg
orb
sti
loopne
push
repz
or
lret
add
cltd
iret
push
mov
clc
xor
push
iret
xchg
cmp
jg
jle
or
pop
xor
sarl
stos
loopne
cvtpi2ps
lcall
mov
add
sub
out
sbb
jns
ja
jne
das
test
mov
sbb
inc
or
sub
lcall
push
cmp
out
scas
imul
shll
mov
mov
dec
and
fnstcw
bound
dec
inc
sti
jae
add
jbe
dec
cmp
mov
jnp
and
aas
aaa
sub
push
mov
inc
fsubl
sbb
inc
jg
gs
addb
mov
aas
lea
sbb
pop
adc
loop
ja
and
push
mov
bound
cmp
jo
fnstsw
mov
outsb
jo
rcrl
cmp
loop
inc
xor
and
add
loope
insl
adc
cmp
cmpsl
pop
sbb
lret
mov
fnstenv
or
mov
cmpsl
rep
std
cmpsl
add
lods
mov
or
lretw
movsl
pop
std
mov
aam
aas
or
lds
jp
fidivrs
call
dec
mov
and
sub
add
pop
or
mov
loopne
lret
popf
or
inc
lock
shrb
pop
aaa
sbb
sub
mov
test
mov
mov
inc
cltd
repnz
jle
jl
fwait
cli
bound
aad
daa
arpl
xor
sub
push
out
add
lods
or
add
add
cltd
sbb
inc
mov
xchg
into
jns
xchg
fwait
or
popf
psllq
shll
sub
ret
sbb
pop
scas
out
lret
pop
xor
pop
add
xlat
cmp
in
imul
mov
lock
stos
popf
stos
jg
xchg
shlb
pop
scas
jb
and
sub
daa
rol
call
ljmp
outsb
dec
jl
cmpb
into
push
xchg
imul
mov
test
adc
sbb
lds
or
icebp
mov
mov
dec
sarl
imul
loopne
sbb
add
movb
mov
xor
adc
push
jp
mov
jle
punpckhwd
aaa
loope
stos
lea
sbb
cmpsl
push
shlb
adc
mov
dec
ja
das
aas
pop
mov
jecxz
xlat
mov
lods
mov
lcall
sbb
jnp
xchg
pushf
jl
cltd
pop
xorl
sbbl
xchg
hlt
cmp
xor
arpl
js
mov
xor
xchg
lcall
out
cmp
jmp
lahf
incl
mov
out
sbb
jle
out
add
xchg
or
and
jmp
hlt
adc
add
rcrl
fstpt
movsl
dec
jo
fwait
pop
sbb
pop
dec
mov
repnz
hlt
mov
sbb
push
sbb
dec
adc
fs
add
xor
dec
jbe
addr16
adc
ja
pusha
shlb
mov
gs
xchg
aaa
fbstp
xchg
and
repnz
test
scas
xor
clc
mull
jle
mov
je
or
xchg
imul
dec
adc
shrb
sbb
adc
loop
ja
adc
mov
lret
int
inc
pop
cmpsl
ss
pop
cmp
icebp
sbb
jno
cmc
dec
mov
cmp
and
je
arpl
xchg
add
in
jle
lea
test
jne
mov
rorb
sub
icebp
test
sbb
mov
push
mov
mov
out
popa
xchg
jle
subl
pushf
xchg
cmp
sub
sahf
mov
in
arpl
mov
into
sbb
cmp
and
and
inc
pop
inc
and
pop
jne
jp
dec
js
rcr
xor
inc
cmc
add
cmp
push
insb
js
jmp
mov
and
add
lods
inc
mov
adc
sub
pop
push
add
jl
flds
ds
test
jle
js
mov
repz
icebp
scas
xchg
inc
ljmp
ja
or
popa
stos
xchg
test
add
cltd
ss
dec
mov
sub
fidivrs
push
push
sti
jle
jns
pop
je
test
pop
add
jnp
push
add
inc
idivb
sub
das
jnp
xchg
adc
cmpsl
add
popa
or
sahf
mov
sbb
cmpsl
mov
cmc
pushf
imul
mov
pop
loopne
bound
cmp
mov
je
xchg
xchg
mov
inc
sub
pop
aam
push
jl
faddp
cmp
arpl
lahf
sub
inc
pop
pop
int3
hlt
xor
je
dec
inc
mov
pop
mov
pusha
sbb
sub
sub
sub
dec
sbb
pusha
push
inc
jns
cltd
mov
inc
daa
pop
pop
xor
sbb
lcall
div
call
xchg
and
cmp
enter
and
adc
push
outsl
pop
popf
in
arpl
cmpsl
mov
fst
dec
test
imul
fsubrl
pop
mov
mov
icebp
daa
adc
xchg
jecxz
fmuls
xchg
insb
xlat
and
rorl
inc
addr16
roll
adc
pop
inc
xchg
outsb
stos
pop
pop
and
out
lahf
loop
cli
jnp
mov
mov
and
out
leave
loopne
push
push
push
test
in
adc
push
cmp
push
ret
sbb
cmp
in
fcomip
ds
xchg
mov
jnp
sub
mov
cmp
or
repnz
in
fcmovnb
mov
scas
sahf
jle
sahf
pandn
mov
push
mov
pushf
pushl
xchg
inc
test
mov
aad
mov
sub
cld
jmp
out
inc
push
rolb
lds
mov
jmp
push
test
add
mov
cmp
jb
les
enter
ljmp
xchg
mov
adc
mov
push
repnz
sti
popa
lods
inc
scas
mov
aas
dec
jecxz
repnz
mov
cld
test
xchg
add
lahf
test
or
add
movsb
and
test
jno
fldenv
fmull
push
jl
mov
js
outsl
and
fnsave
int
pop
rcl
or
stos
mov
push
xchg
sub
mov
divl
adc
and
dec
leave
out
jg
adc
adc
mov
stos
scas
inc
popf
out
sub
cwtl
ret
push
dec
mov
daa
xchg
jmp
fwait
xor
ret
into
push
mov
xchg
daa
add
push
fs
pop
pop
repnz
or
adc
repz
pop
sub
loopne
cmp
push
arpl
xchg
lret
sbb
out
dec
call
lahf
cmp
mov
xchg
hlt
adc
cmc
dec
movsb
std
loopne
add
std
or
mov
cltd
xor
xor
cli
inc
adc
test
test
cli
lods
mov
sub
add
iret
es
xchg
mov
mov
mov
add
jae,pt
mov
push
cmp
push
mov
xchg
ds
mov
xor
push
cs
or
rcl
lcall
pushf
js
cld
or
mov
pop
clc
popa
lcall
mov
lahf
add
jns
movsb
test
dec
daa
jp
negb
and
sub
mov
sub
push
test
ja
xlat
push
test
cmp
test
fsubl
jle
adc
jecxz
inc
ret
subl
mov
push
adc
push
mov
mov
xchg
out
mov
int
test
in
aam
pop
mov
xchg
pop
movsb
sbb
sub
adc
xor
sbb
gs
addr16
leave
and
sahf
loopne
repnz
xchg
mov
rcll
push
shll
add
and
lret
movsl
xor
jne
ret
pop
hlt
xchg
inc
adc
sti
push
cld
scas
xorl
sub
insl
jb
lcall
push
into
repnz
outsb
scas
jo
and
sub
jp
pushf
add
mov
sub
xchg
daa
dec
jb
fadds
imul
lret
lods
loope
mov
mov
and
cmp
adc
not
pop
lret
or
sub
add
mov
fs
test
and
cs
in
jecxz
ljmp
xchg
mov
js
stc
dec
into
jl
jle
arpl
dec
xchg
mov
sbb
call
xorl
mov
out
jp
movsl
sti
fistps
jnp
xchg
pop
sbb
addb
inc
mov
out
lret
jae
cmp
popf
push
lret
add
sbb
icebp
push
cmc
fs
cmp
inc
pop
addl
dec
xchg
sbb
mov
rcrl
pop
pop
dec
pop
or
cmc
and
mov
test
mov
sarb
fcmovnbe
cmp
sub
push
push
or
fiaddl
jmp
std
outsb
outsb
dec
cmp
or
and
push
push
jno
iret
data16
jnp
mov
in
jl
inc
fidivrs
lahf
stc
push
loope
pushf
lret
inc
orl
mov
sub
inc
sub
aad
mov
out
shrb
xor
push
mov
or
lret
sub
cmp
xchg
dec
jbe
and
movsb
xor
leave
sbb
mov
mov
inc
orb
imul
cmp
in
cmc
test
popa
fdivrl
cld
iret
add
sbb
ds
adc
or
in
xchg
ljmp
gs
mov
psubw
pop
iret
xchg
mov
mov
sub
adc
adc
pop
sub
movsb
pop
mov
movsl
testb
xchg
pop
pop
mov
push
pushf
mov
fldlg2
xchg
daa
mov
mov
aas
mov
or
jae
or
fldenv
and
stos
adc
push
pusha
cmp
pop
cld
inc
mov
inc
mov
xor
stc
dec
cmp
cmpsb
mov
mov
nop
cmc
or
loope
insl
mov
enter
les
lds
pop
mov
mov
in
cmpsb
mov
fadd
pop
jns
jae
adc
fildll
mov
data16
and
adc
pop
das
movsl
inc
call
fs
in
shrb
xor
inc
jmp
sub
hlt
imul
jae
jle
ja
lock
addr16
aam
in
add
xor
std
mov
out
dec
xchg
cmp
arpl
inc
jb
pusha
mov
lea
mov
jo
sub
inc
adc
js
in
fdivrp
movsb
adc
fildll
pop
jmp
ficoms
mov
lahf
xchg
andl
test
dec
orb
in
mov
ficoms
mov
das
shr
loopne
imul
mov
in
popa
mov
sub
aam
mov
hlt
inc
pop
inc
aaa
push
mov
jp
pop
ss
test
push
dec
nop
std
mov
mov
xchg
mull
mov
dec
sbb
outsb
pop
dec
js
cwtl
xor
push
lcall
xor
mov
sahf
fdiv
outsb
dec
gs
sub
xchg
movsl
lock
insl
xchg
inc
add
mov
xchg
lcall
in
pop
pop
sub
rcrb
int3
rcrb
outsb
mov
or
ja
pop
std
jg
jo
xor
mov
push
mov
push
adc
outsb
or
mov
mov
jmp
outsl
add
int
xchg
xor
mov
cmpl
jae
js
std
xchg
xchg
test
fnsave
mov
neg
sub
xor
mov
mov
jnp
ljmp
aam
dec
cld
add
jmp
dec
mov
insb
call
jecxz
stos
stc
xor
cmpsb
sbbb
ret
inc
xor
test
cmp
icebp
xorl
pop
addr16
ja
fdiv
imul
jge
imul
insl
fidivrs
sbb
or
jbe
mov
insl
push
jg
xlat
sbb
mov
scas
into
pop
lods
in
lock
mov
lret
sub
out
enter
jnp
pop
cmp
data16
lret
jno
jg
cli
push
dec
xor
cwtl
testb
or
jl
pop
stc
imul
lahf
movsl
and
sub
push
shrb
jbe
arpl
mov
mov
pop
and
or
and
xchg
dec
iret
dec
mov
in
das
cli
mov
jl
aaa
push
cmp
in
movb
ljmp
xchg
out
ds
sub
mov
jae
sub
jnp
cs
pop
mov
mov
mov
scas
or
sbb
aad
dec
push
int
mov
jp
nop
and
roll
scas
xchg
jns
cmpsl
addr16
cmp
rcll
out
pop
or
out
cld
and
hlt
cmp
sbb
jmp
fsubl
jbe
mov
popf
daa
ss
testb
ret
cltd
rorl
pop
in
sbbl
mov
adc
sub
mov
sbb
es
adc
pop
dec
mov
subb
sbb
xchg
add
mov
outsb
test
mov
mov
imul
test
adc
ss
adc
dec
mov
rol
repnz
and
pmulhuw
popa
jmp
or
or
xor
addl
sbbl
call
mov
jae
jmp
dec
jp
daa
or
jbe
dec
aad
out
icebp
sub
jl
add
ret
mov
mov
popf
out
scas
mov
aad
pop
pusha
push
stos
inc
xor
push
dec
lahf
ret
imul
fstl
add
fisubl
lods
xor
stc
cmp
cmc
sbb
xchg
lods
aad
inc
je
add
mov
pop
add
jp
jmp
xor
adc
pop
pop
pusha
push
jecxz
or
cmp
push
jge
xor
insb
cmpsb
dec
andps
fdivrs
mov
cmp
mov
test
sbb
and
jno
stos
nop
mov
js
sbb
lea
pop
ret
sub
jp
pop
mulb
dec
mov
out
xor
push
stos
dec
add
mov
cmpsl
mov
cmpsb
loop
fs
xor
fdivs
mov
cli
addr16
jns
mov
add
push
idivb
dec
jb
dec
leave
mov
call
dec
sbb
add
mov
nop
pop
rclb
jle
dec
mov
fmuls
out
cltd
cmpsb
mov
or
mov
jo
cltd
jb
imul
lret
test
test
std
std
out
push
mul
out
stc
pop
cld
fidivs
scas
test
out
dec
push
pop
and
xchg
lret
popf
aaa
iret
mov
xor
lds
sub
dec
bound
int3
adc
inc
mov
out
in
pop
shlb
clc
test
mov
push
pushf
test
cmpb
aam
sbb
pop
jnp
int
je
mov
fistps
sahf
adc
cli
bnd
popl
into
mov
cmp
das
aam
or
mov
mov
std
xchg
mov
cltd
inc
mov
xor
and
cmp
pop
clc
mov
push
out
enter
aad
and
mov
out
movsl
cmp
stos
adc
xor
daa
jle
es
imul
xor
adc
nop
fidivrl
mov
pusha
imul
or
out
cld
add
pop
leave
es
adc
iret
jg
outsb
ret
shlb
repz
js
aam
mov
mov
fisubrl
push
rolb
inc
loop
lods
dec
out
pop
imul
cmpsb
shr
lea
lahf
pop
xlat
mov
jb
dec
xchg
jo
cmp
sbb
lods
and
inc
enter
adc
shrb
shlb
jb
xor
mov
add
divb
loopne
iret
adc
inc
iret
testl
push
add
jecxz
mov
xchg
sbb
or
cmp
test
lods
fldenv
push
push
mov
mov
cli
fs
pop
cmp
xor
ret
add
jg
adc
jb
mov
sub
add
mov
and
adc
adc
fistl
jg
int
fxch
jno
ja
and
dec
push
add
call
in
pusha
adc
jl
cmp
scas
cmp
mov
lea
mov
insb
notl
adc
mov
cmp
outsl
jmp
cmp
sbb
lahf
xor
mov
sbb
lret
or
pop
pop
int3
fisttpll
hlt
cmc
loop
pop
and
test
cwtl
or
xor
and
ljmp
jae
loopne
faddl
in
and
movsb
sub
xlat
in
xchg
xchg
pusha
test
fnstenv
push
add
xor
pop
cvtps2pd
dec
xor
or
test
add
pop
add
lds
and
mov
sub
sbb
nop
outsb
sti
xor
fcoms
jg
and
jb
scas
xchg
xor
jo
ljmp
sbb
push
daa
lret
mov
in
fnstsw
fwait
mov
mov
mov
jle
dec
xchg
stos
jp
inc
push
xor
jmp
movsl
adc
push
gs
popf
jmp
xlat
or
sbb
mov
sti
mov
popa
fbstp
push
sub
imul
lret
push
cmp
push
aad
imul
jge
and
loopne
aas
xchg
je
in
testb
xchg
jl
xchg
in
push
jg
sub
push
mov
jno
jne
cmp
cli
insl
or
es
fstpt
lret
push
xchg
cmc
or
imul
or
jle
subb
and
push
sub
xor
adc
mov
stc
divb
int
mov
xchg
mov
mov
or
jp
mov
fnstsw
or
test
cwtl
pushw
or
std
cmp
test
nop
ror
add
insb
xchg
pop
jle
pop
pop
jecxz
insl
pop
mov
loop
sbb
daa
les
and
movsb
add
pop
add
cwtl
insl
out
in
or
lret
loopne
xchg
xchg
sub
int
mov
cmc
pop
jb
xor
sbb
or
mov
mov
repnz
sbb
push
cmp
mov
push
push
inc
jae
jl
shrl
in
sahf
testl
or
ja
hlt
aas
gs
call
or
pusha
xor
fwait
pop
fisubs
dec
cmp
sub
push
sbb
js
pop
fidivl
mov
and
jo
xchg
mov
das
dec
pop
daa
pop
in
jns
or
mov
push
mov
push
out
nop
xchg
fsubrl
fisttps
adc
dec
icebp
adcl
lds
loope
xchg
repnz
fsubs
enter
loop
and
xlat
push
xor
adc
filds
addr16
push
jb
loopne
cli
inc
int3
add
test
jle
jmp
push
div
pop
and
fwait
rorl
mov
sub
xchg
outsb
pop
lahf
mov
daa
outsb
mov
jecxz
dec
das
inc
in
and
inc
lds
jle
dec
sbb
jb
pop
pushf
das
pop
add
pop
stc
mov
mov
pop
jecxz
or
mov
loopne
mov
jne
sbb
or
sub
sahf
cltd
lret
mov
jge
insl
int3
out
pushf
xchg
aas
pop
sbb
jbe
push
sub
adc
insl
mov
jge
out
shlb
es
iret
and
inc
jae
inc
fstl
mov
test
cmp
add
sbb
sbb
fstl
out
imul
xchg
in
fisttps
outsl
arpl
jne
dec
xchg
or
mov
cli
xchg
or
mov
enter
sbb
mov
int3
cltd
jp
adc
cmp
mov
cmp
mov
test
scas
cmpsb
sbb
std
dec
cmp
pop
ret
add
rolb
mulb
cmc
xlat
add
jnp
insl
xchg
xchg
sbb
xor
jg
inc
add
pop
iret
pop
mov
or
fldt
mov
or
in
or
stc
jo
lret
loope
adc
repz
mov
movsl
sub
inc
mov
icebp
scas
mov
push
scas
jp
ret
xor
lahf
fwait
xchg
xchg
cltd
scas
jg
xchg
rolb
cmp
jbe
add
add
pop
cwtl
lods
inc
push
leave
add
mov
mov
mov
rolb
mov
and
pop
mov
pavgw
in
in
les
and
mov
pop
sub
xchg
pusha
push
push
mov
lods
inc
sbb
cs
dec
adcl
int
add
jno
cwtl
jl
mov
xlat
dec
add
lds
shll
aas
push
mov
les
push
outsl
das
mov
test
das
and
xor
pushf
ss
divl
or
adc
dec
mov
insl
mov
lea
enter
sub
loopne
test
mov
hlt
arpl
cmp
int3
sbb
inc
xor
mov
cmpsb
rcll
jmp
stc
or
mov
push
addr16
in
cmp
test
adc
fwait
dec
adc
fwait
out
dec
fdivrl
test
xchg
sbb
ret
push
or
popf
inc
mov
mov
sub
add
outsl
pop
xchg
push
out
adc
adc
jecxz
out
xchg
aaa
push
adc
stos
lret
and
mov
inc
mov
inc
pop
sbbl
and
das
cs
mov
pusha
mov
xchg
xchg
mov
loopne
mov
dec
mov
cmpsl
mov
pop
jne
xchg
jp
movsl
xor
hlt
push
adc
mov
daa
in
sbb
dec
inc
popf
test
cmp
and
insl
cli
dec
ret
and
imul
mov
and
insl
pop
ljmp
pop
push
cltd
loop
xor
sub
xlat
fiaddl
into
icebp
out
push
mov
je,pt
mov
jnp
adc
rorl
js
mov
aam
hlt
add
das
push
bound
ss
flds
jb
jae
test
xor
xlat
lret
divb
add
xor
jle
stos
lods
mov
leave
nop
mov
popf
imul
cwtl
std
loop
fldenv
imul
fdivl
mov
pop
adc
insl
and
xchg
cmp
mov
pushf
inc
fisttpl
fcoms
sbb
sub
dec
aad
clc
iret
rclb
leave
mov
imul
insl
out
pop
sbb
into
leave
fisubs
pushf
xchg
cmp
jge
pusha
adc
sbb
std
push
mov
cmp
cmp
lods
cmc
aam
pop
enter
adc
jno
inc
inc
loope
jmp
mov
jmp
xchg
dec
test
add
iret
sahf
out
sbb
outsb
fists
scas
push
fsubrp
lods
jl
pop
pop
cmp
std
sub
cmpxchg
xchg
inc
push
jmp
mov
cltd
cs
mov
fwait
sbb
cmpsb
dec
xor
mov
and
test
loope
mov
sub
sbb
xchg
pop
xchg
repnz
imul
aad
fcomi
inc
lods
cmp
mov
inc
and
xchg
lock
inc
pop
dec
cmp
call
sarl
push
and
pop
dec
loope
pop
ja
xlat
in
push
cwtl
in
sti
push
sbb
inc
cmp
cmp
jmp
insb
add
aam
enter
push
xor
sub
mov
icebp
or
mov
sub
inc
sbb
cmp
imull
push
add
push
int3
adc
cmpsl
mov
ss
mov
xchg
rorb
adc
jl
dec
andl
arpl
mov
pop
cmpsl
push
ss
xchg
mov
fildll
mov
cmpsb
dec
fsubrl
jge
ljmp
addr16
int3
movsl
test
leave
add
inc
loope
pop
sub
pushf
mov
xchg
mov
jl
and
outsb
adc
cltd
or
sub
dec
test
cmp
lds
out
stos
mov
dec
adc
ljmp
sub
mov
es
fwait
lret
cmpb
lret
jne
xchg
iret
aas
fwait
gs
jb
lods
les
xchg
icebp
dec
iret
rcrb
fisttpl
inc
ret
mov
fdivrl
jecxz
lcall
in
pop
or
pop
pop
bound
lock
fists
test
xchg
inc
cmp
dec
jb
loope
cld
daa
push
xlat
mov
not
pop
push
mov
push
loopne
xchg
dec
fstps
mov
imul
les
stos
rorl
addr16
xchg
xchg
mov
fidivrs
add
pop
and
cmp
subl
aam
inc
mov
iret
xchg
ret
and
xchg
repnz
and
add
xchg
sbb
pop
das
lahf
sub
adc
xor
loop
xchg
mov
testb
mov
mov
jl
lock
idivl
push
clc
push
enter
sbb
jo
arpl
push
adc
fcmovnbe
sbbl
mov
arpl
lret
cmp
lahf
lahf
loope
loop
jno
aaa
sub
mov
mov
adc
repz
mov
aas
add
pusha
scas
add
xchg
loope
add
xchg
jae
popf
popa
rolb
hlt
or
cmpsb
pop
mov
mov
xchg
into
orl
sub
int
je
cmpsb
jns
nop
cwtl
mov
fsts
into
fnsave
cmp
test
pop
xor
push
mov
cmpsl
mov
inc
out
jno
xlat
mov
adc
xchg
sahf
xchg
jno
sub
mov
and
pop
cmp
std
sbb
xor
aad
jns
test
fwait
mov
pop
and
mov
mov
jae
lods
push
out
jo
fwait
push
and
stos
enter
sysenter
cli
inc
scas
sbb
xor
sub
notl
cs
push
mov
add
push
push
int
xchg
cltd
jg
push
mov
outsl
sarl
dec
into
js
inc
inc
dec
pop
xchg
test
dec
sub
jmp
sbb
jmp
and
mov
xor
push
jno
push
testb
js
jge
test
loopne
lds
jb
shlb
mov
sbb
rcrb
fidivrl
scas
out
jae
cmp
lahf
pop
dec
jnp
and
cli
mov
and
mov
sub
pushf
lock
lods
or
dec
cwtl
sub
cmp
mov
xor
jb
inc
mov
mov
cmp
into
les
mov
xor
dec
mov
mov
mov
mov
int3
daa
xor
push
leave
aad
ficoms
inc
subl
inc
lret
filds
jge
xchg
movsl
pop
cld
out
aam
cld
subl
lret
aaa
js
pop
add
cmp
movsl
nop
jecxz
and
xchg
icebp
jl
xchg
and
popf
nop
add
pop
jg
mov
push
mov
jb
sbb
dec
pop
decl
fnstenv
daa
outsl
jbe
arpl
les
ficomps
in
je
push
bound
jno
mov
insl
mov
cli
push
add
xchg
rep
pop
sbb
sbb
inc
adc
xor
xor
push
int3
imul
mov
mov
cltd
pop
ss
scas
pop
pop
je
ja
lock
inc
test
popa
testb
inc
jno
je
popf
int
mov
jp
push
or
add
or
fstps
shrb
jge
cltd
rolb
pop
shlb
out
daa
stos
push
cmp
shlb
xor
pop
out
pop
insb
fdiv
jge
mov
scas
adc
mov
addr16
and
ret
push
cmc
lret
cld
sbb
das
dec
adc
mov
sbb
subb
jp
test
add
pop
in
fs
inc
inc
xor
jno
jecxz
pusha
lahf
cli
dec
sbb
add
jne
imul
in
mov
ljmp
mov
add
cmp
jnp
les
icebp
sub
dec
adcb
push
in
aad
aaa
lahf
ret
mov
ret
xlat
iret
ljmp
mov
roll
mov
push
sti
jecxz
pop
lret
decb
out
adc
xchg
push
inc
sbb
mov
imul
cmp
sbb
mov
xor
divb
lcall
in
leave
dec
and
mov
addl
cwtl
xchg
pusha
push
insb
mov
mov
imul
fs
rclb
test
lret
sti
pop
add
mov
or
jge
mull
in
and
xchg
dec
add
push
repnz
pop
and
fisttpl
xor
inc
xchg
cmp
push
pop
sar
pop
mov
and
cmp
ret
rol
jecxz
aam
sub
sbb
xchg
pusha
xor
push
out
dec
lods
jmp
test
subb
push
push
movsl
xor
sub
add
mov
fs
jl
xchg
mov
mov
pusha
mov
xchg
rclb
sahf
mov
mov
roll
xor
lock
repnz
jne
and
mov
mov
loopne
or
test
push
xchg
call
jae
rorb
loopne
mov
jl
mov
imul
mov
lcall
adc
ss
dec
adc
push
and
and
xor
rcrl
sub
lcall
fnstcw
mov
out
test
jle,pn
lods
jnp
dec
iret
xor
dec
adc
mov
in
pusha
out
push
cmp
mov
cmp
dec
fisttpl
testb
mov
mov
mov
and
iret
scas
out
shll
leave
pop
stos
stos
sbb
and
jmp
push
jg
cmp
daa
int
outsb
lea
mov
push
fnsave
push
movsl
and
mov
outsl
inc
sub
and
add
lahf
fisubrs
add
push
push
sahf
cli
mov
jb
scas
mov
arpl
xchg
iret
out
lahf
mov
push
adc
xor
sbb
ljmp
flds
shll
pushl
lds
nop
mov
pushf
pop
loop
inc
sub
jle
je
addr16
push
push
fidivs
mov
filds
mov
jmp
lods
or
mov
push
push
les
sbb
xchg
int3
jmp
addl
and
jecxz
mov
cwtl
cmp
xlat
fcomip
sbb
andb
js
lock
sbb
enter
out
cmc
in
in
mov
std
mov
add
ljmp
adc
das
shrb
xlat
jg
sbb
stos
mov
fdivrp
jecxz
mov
das
popl
dec
arpl
cmp
fiaddl
inc
mov
daa
outsl
xchg
aam
xchg
sarb
in
outsb
xor
sbb
shl
push
stos
hlt
sub
inc
and
shr
sub
into
sub
cltd
mov
pop
push
pop
sbb
sysenter
mov
xchg
repnz
mov
loopne
jo
or
pop
inc
sub
out
movsb
inc
mov
push
pop
pop
jmp
cmc
xchg
iret
sub
jo
mov
pusha
jl
jp
lds
lods
scas
xlat
push
sub
addr16
mov
std
inc
xchg
lcall
mov
pop
mov
or
out
or
repz
icebp
enter
movsl
icebp
jl
fcomp
inc
jb
sub
jge
call
mov
jmp
mov
aam
mov
adc
popa
repz
dec
add
lret
insb
jns
imul
jmp
stos
pop
jg
jge
push
adc
pop
nop
xor
push
imul
test
lods
je
mov
mov
xchg
cmp
ret
pop
test
imul
sub
mov
pop
xor
and
push
cmp
ret
call
mov
jns
mov
push
pop
data16
je
das
cmp
pop
pop
addl
fwait
int3
push
pop
push
repnz
lret
ficomps
pop
push
les
sbb
fimuls
packssdw
outsl
in
jo
mov
dec
test
mov
pusha
and
out
int3
popf
fcomps
fbstp
jg
lea
mov
push
fiadds
mov
ljmp
xor
leave
pushl
pop
pop
mov
fadds
cmpsl
pusha
std
dec
cmp
nop
sbb
add
inc
daa
mov
in
loop
fistps
xchg
add
inc
push
cmpl
add
enter
cmp
jne
scas
mov
movsl
into
dec
pop
neg
scas
and
dec
mov
imul
divl
test
mov
cmpsb
xchg
mov
pushf
lds
ret
ja
insl
jecxz
imulb
mov
cmpsb
arpl
pop
xor
push
pop
divb
sbb
aas
pop
mov
cmp
push
fistl
sbb
sbb
jle
pop
arpl
test
fcmovnbe
popf
push
push
lds
adc
je
xchg
or
or
or
xor
ret
scas
leave
and
dec
scas
aam
insl
adc
call
sbb
pop
lods
mov
mov
fildl
std
test
outsb
test
jo
mov
cs
insb
out
push
sbbl
mov
cli
repnz
dec
test
xor
inc
mov
hlt
ret
adc
in
mov
mov
jg
mov
out
mov
adc
mov
dec
fldenv
sub
xor
rorb
insl
scas
sub
vphsubbw
xchg
clc
popf
mov
xchg
insl
outsb
mov
dec
mov
les
test
pop
and
icebp
testl
test
arpl
add
xchg
sbb
mov
push
inc
push
mov
mov
scas
bound
pxor
pushl
mov
cmp
mov
das
fidivl
pop
xchg
lea
sub
mov
lock
push
in
out
hlt
push
pop
in
stos
lock
push
add
jb
or
aam
dec
mov
push
xor
repnz
and
test
and
and
xsha1
cmpsb
lret
leave
push
aaa
outsl
addl
mov
std
pop
push
xor
hlt
call
adc
cmp
pushf
mov
cmp
leave
mov
add
ret
fcmovnu
add
stos
rorl
cmp
mov
loopne
add
and
fyl2xp1
adc
aaa
sbb
repz
jmp
hlt
loope
cmp
inc
mov
sbb
dec
push
cld
arpl
cmpsl
push
dec
and
pop
in
shrl
mov
lret
add
mov
mov
and
pop
adc
sbb
jnp
lods
dec
lcall
push
and
fisubrl
jge
dec
popf
xor
popa
hlt
daa
decb
sbb
add
jae
dec
pop
mov
cld
repnz
jg
mov
icebp
rcrb
cmpsl
jg
and
mov
mov
std
arpl
fldenv
or
mov
ret
and
push
sub
testl
enter
xor
jecxz
cli
or
dec
mov
cli
xchg
xchg
add
cmpsb
and
ret
sbb
mov
or
mov
mov
cmp
xchg
fcoml
xchg
sbb
fstpt
iret
ficoms
pop
scas
loopne
inc
mov
mov
mov
aad
sub
adc
xor
jge
iret
xor
jge
out
stos
dec
mov
push
push
fnstenv
dec
adc
cltd
push
data16
scas
ja
add
xchg
loopne
jle
btsl
sub
sahf
sub
xchg
and
test
ljmp
cmp
push
sub
mov
mov
cs
cs
cltd
cld
push
insl
mov
sbbb
push
das
loope
test
mov
adc
lahf
xchg
cmp
mov
cli
rcrl
push
out
pop
add
push
jne
ljmp
inc
hlt
cmpsb
mov
fcmovnb
jbe
xchg
insb
adc
les
sub
outsb
std
push
das
fstl
nop
xor
cmc
or
roll
mov
sub
adc
out
insb
xor
cmp
xchg
rcll
pop
jmp
or
push
sbb
aas
jo
jae
in
push
dec
pusha
xchg
imulb
pop
xlat
test
push
pop
js
ja
cmc
rorl
stc
das
aad
mov
xchg
dec
inc
or
jns
xchg
cld
xlat
popf
mov
call
or
loopne
push
nop
mov
cmpsb
xchg
movsl
and
jnp
insb
cs
fldt
xchg
xchg
mov
loopne
and
add
out
mov
sbb
fs
mov
adcb
jle
add
and
sahf
jmp
mov
outsb
subb
xor
pop
and
cmp
ljmp
jmp
leave
pop
jle
dec
outsb
hlt
dec
add
test
push
sub
jne
pop
sub
outsl
inc
sbb
mov
mov
lock
mov
mov
pop
sub
movsl
mov
sub
lcall
aas
idivl
not
sub
pop
testl
push
pop
iret
scas
sbb
xlat
call
outsl
xchg
je
push
or
pop
into
shlb
push
jno
mov
rorl
test
or
enter
ja
rcrb
dec
mov
jnp
sbb
je
xor
data16
mov
mov
mov
inc
dec
in
call
hlt
add
mov
fadds
rcrb
cltd
les
jmp
cmp
inc
add
out
call
popf
rcrl
mov
fiaddl
ret
stos
xchg
clc
vcvtsd2si
into
es
push
dec
movsb
test
lret
push
cld
and
lods
lds
rcl
mov
or
movsb
pop
shl
rorb
add
cltd
test
push
fbstp
outsl
mov
pop
bound
rol
sbb
test
or
enter
sahf
lret
mov
mov
adc
lcall
jl
fsts
repnz
movsl
and
js
mov
aaa
fidivl
mov
cmpsl
mov
xchg
ljmp
push
shr
jl
pushf
es
pop
adc
mov
jae
sbb
les
cmp
jg
mov
adc
sahf
mov
mov
loop
xchg
jp
push
andb
scas
lahf
in
mov
cli
popa
cmpsl
fwait
je
loope
sbb
sub
cmp
mov
stos
stc
ret
mov
test
daa
pop
ja
cmc
mov
pop
fmull
insb
imul
adc
push
repnz
cmc
adc
mov
sbb
pop
sbb
xlat
push
xlat
push
loopne
test
and
icebp
sbb
je
dec
popa
sbb
das
jo
push
fcom
sbb
jae
movsl
fwait
add
fs
xlat
and
lret
in
aaa
cwtl
or
mov
aad
in
ja
cmp
int
add
scas
iret
fidivrs
stos
mov
movsl
push
add
enter
push
mov
cmpb
add
sbb
or
pop
or
test
outsb
mov
jge
mov
pop
jns
subb
int
das
ss
test
insl
push
addr16
stc
xor
xchg
les
fldcw
test
push
insl
dec
add
popf
cmp
push
call
mov
cli
jbe
add
inc
leave
ds
ret
adc
mov
adc
jg
cmpsb
ljmp
push
addl
lret
mov
loopne
pop
out
mov
mov
push
ds
mov
pop
mov
popl
mov
adc
fwait
clc
in
shl
out
sub
inc
xor
xchg
test
xor
lahf
cmp
sub
sub
into
ljmp
cmp
sbb
imul
ljmp
in
shr
cmpsb
imul
lods
add
test
jl
sti
mov
inc
xchg
mov
mov
mov
dec
cmpsl
arpl
call
jp
roll
test
pop
idiv
xor
leave
sub
sbb
leave
dec
or
jae
out
in
lret
cmp
and
mov
adc
adc
jmp
shlb
mov
jns
out
cltd
std
push
not
lock
sub
fstps
mov
cmpsl
pop
mov
push
shll
leave
mov
jge
push
es
sahf
subl
outsl
push
icebp
xchg
std
jge
cli
sbb
jl
mov
cmp
inc
lahf
lahf
bound
in
negl
pop
pop
stos
pusha
scas
jle
and
and
in
sub
push
cltd
scas
into
pop
jmp
stos
adc
mov
and
push
fnstenv
cmp
data16
inc
inc
rolb
pusha
dec
jmp
pop
je,pt
mov
lock
cmc
jbe
dec
dec
test
mov
xlat
push
pop
jg
xor
cmc
cmp
mov
and
mov
inc
jbe
clc
pop
mov
inc
jb
bound
and
lea
fadd
inc
dec
int
fsts
mov
mov
pop
sub
fstpt
mov
add
loop
cltd
xchg
mov
xlat
mov
or
mov
xchg
rol
adc
sub
mov
fs
and
push
cs
insb
pop
and
pop
mov
xchg
mov
stos
sbb
out
pop
push
jae
xor
iret
dec
cmp
xchg
pop
leave
jo
push
dec
sbb
in
mov
jb
sub
cmp
nopl
fdivr
add
cltd
dec
cltd
dec
les
sub
push
add
and
nop
mov
pop
sub
sti
pop
sub
idivl
mov
sbb
sbb
bound
push
pop
cmp
andb
loope
pop
cs
fsub
inc
outsb
cmp
fcmovu
cs
xchg
xchg
movsb
lods
out
jmp
ficoms
cmp
in
jae
ds
add
je
ja
mov
inc
inc
pop
mov
jo
jmp
pop
pop
lods
shll
jmp
imul
and
scas
mov
loop
ja
mov
hlt
inc
imul
imul
ljmp
or
stos
cmpsl
or
icebp
das
in
rcll
xchg
inc
jnp
shr
push
scas
or
jp
jmp
int3
repnz
jmp
les
dec
fstps
dec
sarb
sub
and
test
ds
repz
lcall
pop
adc
inc
and
adc
out
sub
into
movsb
sbb
sub
jg
aas
xchg
pushf
jecxz
out
in
inc
subl
jnp
sbb
dec
pop
out
rcll
sti
xchg
cld
jecxz
test
ljmp
aaa
pop
jno
enter
fwait
mov
js
push
adc
pop
jp
icebp
xchg
int3
rcrl
loop
mov
xor
add
gs
lods
repz
dec
jns
xor
iret
xor
ja
mov
dec
iret
pop
pushf
addr16
xchg
enter
mov
loope
popa
lods
mov
pop
add
test
and
pusha
sbbl
in
ja
adc
add
mov
out
js
in
mov
jns
mov
xorb
cld
mov
push
loopne
add
xchg
iret
add
in
sub
sbb
xlat
cmp
sbb
lcall
int3
hlt
int3
or
scas
xchg
or
xlat
pop
into
push
push
ljmp
aaa
in
xor
dec
mov
adc
popf
in
outsw
pop
inc
push
fwait
mov
jmp
push
mov
ss
push
mov
ret
push
pop
adc
std
mov
push
test
outsb
into
mov
mov
shlb
sti
popa
mov
push
mov
sub
insb
mov
lods
fwait
cli
ret
pop
dec
cmp
xrelease
cwtl
ljmp
sbb
mov
lahf
jmp
cmpsb
xchg
jnp
lahf
roll
xor
mov
fwait
pop
aam
cmpsl
dec
jbe
sti
mov
int3
hlt
lea
movsl
inc
mov
adc
mov
pop
jl
in
stos
pop
data16
clc
push
psrlw
sbb
nop
push
mov
jp
pop
in
jp
cltd
xchg
ss
mov
jnp
fdiv
es
jmp
test
cld
fimuls
mov
pop
add
aam
nop
inc
loopne
xchg
pop
sbb
and
mov
inc
mov
dec
pop
dec
dec
mov
jno
or
or
xor
jl
inc
ljmp
imul
add
mov
push
mov
pop
out
adc
lret
pop
jl
sbbl
pop
or
push
or
cltd
mov
dec
xchg
or
loop
sub
push
or
pop
cmp
repz
mov
out
dec
icebp
test
fs
ret
jge
je
xor
pop
pop
jne
push
lcall
movsl
call
aam
into
idivl
in
cmp
inc
dec
les
cmp
sbb
add
ja
adc
dec
pop
push
jecxz
outsl
out
cmc
psubd
cmp
in
sahf
sti
sub
cs
cmp
aas
fs
add
sub
sub
jecxz
sbb
pop
jbe
clc
mov
popf
mov
and
js
jg
pop
sub
mov
std
mov
dec
jae
xor
das
mov
loopne
outsl
out
outsl
ds
ljmp
xor
cmp
and
add
pop
add
dec
push
and
enter
mov
jg
int
aaa
dec
shll
push
mov
stos
and
ds
xchg
int
std
aam
xlat
sbbb
shrb
fcoms
scas
fdivs
sbb
inc
andl
fsubrl
out
mov
dec
loopne,pn
xchg
shll
cltd
nop
or
roll
cmp
cmp
test
out
push
and
mov
jge
cltd
xor
scas
shlb
test
pop
jmp
xor
subb
stos
bound
push
test
mov
nop
adc
mov
stos
jo
rorb
pop
sub
sbb
cld
popa
stos
inc
es
cmp
pop
ficompl
adc
loopne
jo
mov
aaa
popa
pop
mov
shl
cld
jnp
pusha
movsb
lret
aaa
and
push
outsb
mov
xor
mov
jge
insl
pop
add
pop
cmp
es
lds
jecxz
cmc
inc
loopne
cmp
das
andl
adc
ffreep
xchg
not
mov
insb
cmp
jnp
cmp
pop
mov
dec
mov
inc
mov
outsl
ljmp
jnp
cs
ja
outsb
xchg
insb
aad
leave
mov
xchg
dec
pop
fldenv
scas
jno
popa
dec
jb
add
fmull
dec
cmc
pusha
test
jmp
fiadds
jb
dec
out
orb
ficomps
ret
mov
cmp
mov
and
int3
inc
clc
fdivl
les
int3
mov
lahf
icebp
popa
roll
ficoms
popa
adc
pop
repz
pop
addl
test
into
dec
and
xor
inc
or
dec
cld
xchg
mov
inc
pop
add
aam
scas
bound
sbb
push
testl
cli
cmp
lcall
enter
mov
mov
xchg
mov
cmp
bound
mov
popa
pusha
jg
mov
hlt
jns
mov
jp
jbe
mov
imul
pop
aaa
dec
mov
addb
std
mov
out
push
xchg
mov
or
lock
dec
cltd
daa
xchg
add
sti
in
pop
lods
rcr
call
add
insl
push
ds
or
cmp
jae
dec
inc
pop
cmp
mov
in
lcall
addr16
aam
pop
push
rcrl
lea
mov
aaa
push
add
fs
std
jbe
arpl
iret
add
xchg
xor
nop
xchg
out
mov
inc
jg
bound
lock
sbb
adc
xchg
cltd
pop
jo
shlb
js
mov
fisttps
fnstcw
lret
mov
fadds
and
int3
enter
adc
hlt
cvtps2pd
lods
sbb
add
adc
dec
movb
pop
lea
lods
mov
loope
mov
pop
fs
jp
fisubrl
loopne
jle
cmp
mov
mov
fcoms
mov
ret
xchg
cmp
outsb
jecxz
mov
push
xchg
xor
outsb
mov
lret
lret
jo
test
popf
leave
jl
out
jge
add
cmc
cmp
pop
sub
cmp
scas
push
adc
inc
adc
sub
lret
pop
cmp
push
bound
pusha
div
or
mov
adc
iret
xchg
push
pop
sub
sbb
aas
add
loop
ja
cmp
jl
out
xlat
and
jecxz
mov
dec
push
repz
stc
orb
out
into
js
clc
das
rorb
sub
adc
adc
nop
push
jle
lock
push
lock
pusha
enter
jecxz
sub
data16
cs
mov
dec
push
xlat
dec
xor
mov
clc
call
adc
enter
cli
fiadds
or
xchg
enter
add
dec
fsts
rcll
pop
add
rclb
insl
outsb
and
and
fistpll
xchg
lods
jo
push
enter
sbb
in
cmp
cmpsl
push
shl
bound
ss
scas
adc
pop
ja
sub
jnp
in
bound
shr
in
insl
jns
pop
pop
pop
xor
daa
sub
pop
aam
xor
push
and
shr
adc
xor
sub
ljmp
dec
les
je
push
popl
cli
mov
dec
mov
or
push
jg
mov
lahf
imul
inc
push
push
push
fabs
xor
cmp
xchg
xchg
jg
je
test
lock
and
add
data16
sbb
add
adcb
adc
rcll
inc
data16
pushf
xchg
das
popf
divl
mov
push
repnz
call
push
sub
test
cmpsb
repnz
dec
mov
push
sub
inc
sahf
adc
scas
shl
inc
pop
mov
mov
je
pusha
jnp
mov
xchg
sahf
int
into
mov
dec
and
jo
mov
mov
fwait
out
faddl
cltd
repnz
xchg
and
jno
js
sahf
sub
sbb
mov
pop
mov
cmp
push
push
test
xor
movsl
scas
test
lods
cli
fldl
jno
out
mov
cmpb
out
and
fsubp
push
xchg
fidivrl
xor
push
sbb
inc
sbb
jmp
adc
sub
jp
sub
lret
dec
xchg
outsb
daa
fstl
movsb
inc
rorl
dec
jo
loopne
ljmp
rol
xor
ljmp
ja
in
xlat
push
in
add
sbb
jl
and
xchg
cmc
xchg
mov
sbb
add
loope
mov
ret
sti
das
data16
and
jecxz
das
int3
fwait
mov
sti
das
sbb
aaa
inc
aaa
cltd
stos
lods
fisubs
cwtl
mov
mov
pushf
inc
and
pop
xchg
pusha
ret
fs
daa
jge
out
fcoms
imul
outsb
nop
mov
jae
add
adc
cmpsb
adc
mov
clc
das
mov
lahf
mov
icebp
dec
add
sbb
dec
pop
cwtl
fstl
dec
lret
inc
outsb
cmp
dec
or
adc
or
in
lds
stos
sarl
cwtl
dec
mov
xchg
adc
dec
dec
mov
mov
repnz
mov
sub
mov
mov
movsb
push
stos
inc
dec
adc
mov
das
lcall
push
mov
testl
adc
fistpll
in
mov
addl
mov
insl
es
testb
std
inc
stos
inc
loop
push
out
mov
pusha
xor
mov
and
ret
add
jp
insl
divb
xchg
lods
add
push
dec
mov
inc
int
dec
hlt
lret
cmp
dec
sub
out
scas
insl
dec
add
sti
outsb
inc
inc
pop
and
jmp
lods
dec
in
jno
js
jl
inc
mov
pop
cli
inc
data16
xchg
aas
dec
incb
lods
mov
fmul
test
divl
mov
das
das
int3
xor
dec
push
inc
push
add
pop
mov
mov
leave
mov
and
add
loopne
mov
mov
outsl
xchg
pop
cmp
pusha
decb
js
sub
andb
ret
push
jb
fnstcw
inc
sbb
cltd
mov
mov
hlt
mov
aam
push
loopne
rclb
push
adc
jnp
jmp
sbb
call
imulb
dec
inc
inc
jb
jecxz
mov
pop
dec
push
ss
push
push
jo
mov
inc
movsl
sub
cmp
inc
imul
and
jb
mov
push
fdiv
ffree
mov
mov
jmp
es
inc
or
ret
sub
outsb
inc
cs
or
inc
add
sbb
sahf
mov
push
jle
jecxz
insb
mov
xor
int
sti
sbbl
adcb
bound
leave
push
jmp
jns
imul
mov
inc
cmp
push
sbb
inc
mov
das
pop
insb
in
ror
xchg
notb
mov
inc
dec
adc
jne
mov
xor
stos
adc
daa
imul
lods
pop
stos
mov
rcll
lods
inc
fcoml
fwait
sbb
pop
mov
mov
pop
or
subl
ss
dec
lret
jnp
cmc
push
cmp
add
fdivrl
mov
arpl
mov
clc
aas
nop
cmp
out
out
mov
and
popf
sbb
cmp
cmp
adc
xlat
pop
jge
sahf
xlat
and
roll
bound
push
add
inc
adc
xor
hlt
je
sbb
xorb
mov
push
ret
out
and
push
subl
sub
or
xor
es
xor
dec
cs
js
and
sbb
popa
aad
add
cwtl
cmp
sub
aad
jmp
jbe
addb
xor
xchg
mov
les
mov
les
mov
popf
movsl
mov
idivb
push
xor
rcl
sub
sbb
pop
movb
mov
loope
lods
mov
and
mov
adc
pop
xchg
adc
hlt
jb
int3
jnp
loope
mov
test
fcmovnu
inc
xchg
dec
daa
lahf
mov
inc
sti
outsl
jle
push
mov
mov
jmp
repz
sub
ja
imul
jae
imul
pusha
repnz
dec
sbb
mov
nop
outsl
jb
pop
shll
out
pop
adc
sarl
roll
bound
sub
or
inc
into
lock
lea
arpl
data16
sarb
sbb
mov
cmp
sbb
add
jnp
sbbb
dec
imul
mov
cmp
push
xchg
shrl
fisttpl
fsubrl
inc
fnstenv
or
in
lcall
mov
es
rcrl
xor
ljmp
xchg
hlt
loop
js
das
mov
push
mov
sbb
popa
mov
and
push
add
push
push
call
movsb
xchg
iret
inc
dec
jecxz
out
inc
pop
clc
repnz
pop
jne
push
push
push
add
add
xor
mov
pop
push
cmpsb
mov
cmp
mov
jmp
sub
or
fimuls
jle
mov
or
adc
or
ds
pop
push
mov
mov
leave
sub
aaa
push
in
ja
inc
leave
jae
jl
add
and
inc
cmp
pushf
jae
jne
sbbb
jmp
jns
roll
mov
gs
jno
push
xchg
aad
lock
fildl
jae
mov
mov
pop
jnp
aas
popa
int3
sahf
sbb
mov
loope
mov
push
mov
xor
lods
roll
lods
pop
inc
adc
into
dec
test
mov
inc
xchg
pushf
dec
add
daa
or
addl
or
sub
push
xchg
aaa
stos
jno
xchg
cmp
mov
push
pop
rcrb
sahf
fbstp
loop
insb
jecxz
adc
mov
sub
push
out
mov
add
sbb
ds
mov
stos
lret
out
cmp
icebp
rcrb
sub
test
cli
pop
pusha
adc
jae
push
shll
mov
fs
add
int
mov
aas
std
mov
inc
incl
imul
or
ficompl
outsb
jno
sub
and
sti
sbb
movsb
cmpb
jmp
jmp
test
in
std
inc
pop
sahf
cmp
fldcw
xor
adc
sarb
pop
aas
mov
add
cmp
call
popf
test
xor
pop
adcb
jl
and
ret
xor
jbe
stos
jb,pn
and
ret
bound
in
or
and
dec
push
dec
movsl
xor
pop
mov
push
cmp
mov
push
sbb
jecxz
mov
xor
nop
mov
pop
cltd
xchg
jecxz
push
sub
mov
xor
fdivp
jo
mov
xor
dec
mov
std
dec
mov
and
aam
jecxz
inc
movsl
mov
push
cmc
jne
and
jne
data16
sub
dec
dec
nop
inc
mov
jbe
push
testl
add
push
mov
addr16
jle
cmpsl
lea
xor
and
inc
les
test
in
add
inc
add
out
xor
xor
lock
outsl
lret
mov
test
cli
lods
sub
push
in
xor
out
call
or
mov
lcall
icebp
xor
mov
pop
arpl
es
sbb
dec
mov
jb
pop
pop
test
movsl
add
in
adc
push
xchg
or
jge
or
rol
addr16
js
dec
mov
in
cmp
shrb
cmp
ds
out
sub
pop
lock
loopne
adc
rol
sub
lds
xlat
pop
cwtl
inc
in
aaa
fistpl
and
icebp
sbb
mov
mov
enter
jmp
jne
cmp
pop
mov
scas
in
mov
sbb
out
out
dec
or
add
mov
bound
mov
xchg
cmp
ss
ret
add
lods
ja
pusha
pop
repnz
inc
push
icebp
add
call
stos
rcrb
jg
push
mov
mov
sahf
stc
cmc
sub
fs
cs
test
and
or
add
dec
std
popf
lds
add
pop
ja
ljmp
fisttpl
arpl
iret
jns
sti
call
ljmp
leave
pop
pushf
xor
icebp
iret
repnz
sbb
clc
loope
xor
xchg
in
xchg
dec
cmp
lea
mov
inc
test
icebp
push
mov
sbb
jle
rolb
loop
mov
push
inc
arpl
push
bnd
mov
fdivrl
ret
sub
das
pop
add
dec
inc
mov
jle
icebp
adc
mov
sbb
filds
insb
xchg
xlat
cltd
cmpsb
fists
mov
inc
sub
adc
daa
fisttps
aad
inc
cmp
sti
sbb
adc
pop
jmp
sti
dec
pminub
or
stos
bound
cli
aam
repnz
loopne
mov
lcall
cwtl
pushf
into
ret
outsb
mov
dec
ret
jmp
lock
push
out
xchg
pop
pop
or
jbe
in
mov
push
lret
orb
mov
cmp
cmpsl
out
xchg
xchg
sub
mov
xchg
cmp
daa
jmp
rcrb
push
sub
stc
cltd
mov
mov
mov
and
outsb
lret
xlat
pop
aam
out
pop
jecxz
mov
arpl
sub
xor
sbb
mov
pop
xor
sbb
sahf
or
mov
mov
pop
and
xor
cld
ds
inc
mov
out
cs
dec
push
cmp
xor
jmp
aam
inc
rcll
push
iret
xor
mov
mov
cs
pop
push
dec
fwait
out
repnz
mov
jbe
in
testl
int3
mov
xor
sbb
sub
lds
mov
xchg
gs
jp
pop
and
stc
jmp
ss
pop
outsb
mov
pusha
pop
dec
gs
scas
xor
mov
xchg
pusha
in
mov
inc
mov
mov
mov
scas
pop
call
stc
movsb
push
lret
mov
std
fnstenv
add
lret
int
and
or
mov
ja
fildl
pop
mov
je
fimull
shl
lods
popf
cmp
sbb
imul
dec
aam
pop
in
pop
jmp
rcrl
sqrtps
andl
cmc
and
pop
add
push
xor
mov
jo
sbbb
clc
iret
scas
inc
enter
popf
cwtl
mov
or
mov
adc
lods
ljmp
mov
in
cltd
mov
daa
test
imul
pop
outsb
icebp
mov
shrb
sub
fwait
mov
push
or
stos
and
mov
mov
ret
sub
shll
insb
repnz
push
lcall
cmpsl
jb
push
jp
jg
mov
arpl
test
inc
mov
shlb
das
jb
dec
pusha
rorl
push
dec
mov
bound
dec
test
xchg
and
add
push
addr16
or
cs
xor
ja
and
mov
xor
daa
push
clc
sub
mov
xchg
insl
shrd
or
xchg
and
movb
adc
mov
cmpsl
push
test
out
nop
movl
or
in
pop
jbe
repnz
das
cmpsb
ljmp
adc
push
and
push
xchg
and
xchg
xchg
push
cmp
lcall
bound
cltd
imulb
and
ret
into
hlt
ficomps
cmp
les
inc
fistps
sbb
lods
fcompl
shll
lods
dec
sbb
loope
sub
jns
vmwrite
push
push
jge
stos
enter
mov
and
sbb
inc
sub
dec
jge
mov
xchg
jne
pop
psrad
lea
mov
fisubrl
adc
fcoml
fidivl
push
cmp
mov
fwait
or
xor
js
pop
data16
or
sahf
and
sbb
jle
mov
mov
add
lret
bnd
inc
outsb
scas
lcall
js
adc
addr16
jne
stos
in
and
sbb
cmc
mov
inc
xorl
dec
cltd
sbb
mov
ljmp
jne
fidivl
jecxz
push
imul
xor
sub
fs
repnz
filds
and
xor
pop
mov
cmpsb
xor
xchg
in
int3
pop
into
inc
xchg
xor
push
mov
or
mov
push
push
ret
cmp
inc
fcoml
pusha
adc
jmp
mov
mov
xor
cmp
jp
fcmovbe
test
out
into
lret
sub
je
mov
dec
fadd
int3
scas
sub
pushf
adc
outsl
les
xor
nop
lret
repnz
xchg
xchg
dec
push
lea
add
adc
and
adc
mov
lcall
lods
sar
dec
mov
dec
clc
sbb
cmp
cwtl
inc
out
leave
imul
inc
xchg
mov
test
push
or
inc
or
shrl
mov
nop
lret
les
outsl
dec
loopne
xchg
scas
add
pop
mov
push
mov
or
push
cmpsb
repnz
nop
cld
jle
xchg
adc
cltd
xchg
int
sbb
add
mov
test
aad
pop
mov
and
lahf
call
cmp
jecxz
std
out
xchg
jne
fwait
sbb
shlb
ret
mov
fadd
je
pop
fdivs
jnp
or
cmp
icebp
sub
jns
xor
xchg
ret
mov
inc
sub
mov
js
fistpl
test
sbb
inc
arpl
imul
pop
pop
push
scas
aam
rorl
mov
xchg
imul
cmpsb
aas
clc
in
mov
jbe
stos
adc
roll
mov
push
inc
add
movsb
push
sub
arpl
dec
mov
push
int3
or
leave
push
rcrb
push
lahf
mov
jne
sub
jl
push
stc
add
adc
leave
cmp
jl
int
and
lahf
pop
cmp
fldcw
xchg
std
mov
sarb
jno
ljmp
xchg
mov
and
or
mov
push
cmp
or
cmp
aaa
jno
fstl
sarl
adc
sbb
les
pop
rorb
negl
cmp
adc
pop
lcall
mov
jno
outsb
mov
in
mov
and
pop
mov
nop
stos
stc
jl
roll
stos
loope
sahf
jo
das
mov
roll
repz
cli
jecxz
push
inc
ret
scas
mov
mov
push
xor
test
pop
xchg
scas
subl
fistl
mov
mov
out
in
sbbb
mov
inc
mov
dec
push
test
ret
js
in
das
xchg
int
sub
xchg
es
xor
cmc
lret
arpl
mov
or
and
les
adc
jae
mov
push
ja
inc
incb
xchg
cmpsl
jbe
mov
cmpsl
pop
mov
mov
mov
test
cmpl
mov
or
xor
outsl
jne
test
jl
mov
data16
sahf
pushf
cmc
aas
mov
outsb
xor
in
inc
xor
adc
dec
sub
jno
xchg
dec
mov
push
jo
fdivs
xchg
into
sahf
mov
push
mov
xor
lods
pop
push
inc
fisubl
fcoml
daa
fnsave
pop
movsl
push
xor
fdivrs
mov
out
xchg
sbb
jp
or
imul
sub
in
cli
dec
xchg
cltd
in
inc
and
out
push
shlb
or
push
add
push
cmpsb
xchg
in
jl
repz
rcll
push
adc
les
stos
das
adc
push
pusha
push
fs
push
movsl
mov
stos
aas
pop
scas
fnstcw
icebp
shrb
push
cwtl
mov
jecxz
xchg
mov
sub
lea
nop
xchg
mov
outsl
push
aaa
fisttpl
leavew
std
call
mov
or
ljmp
push
orl
xchg
pop
movsb
inc
pop
cmp
jnp
pop
xor
sub
dec
nop
lods
pop
daa
enter
insl
and
mov
sub
repnz
mov
lea
xchg
fmulp
inc
cld
pushf
icebp
imul
ja
pop
inc
es
push
sub
out
scas
stos
test
ret
mov
push
stc
mov
mov
sbb
mov
jmp
xor
in
cmp
gs
adc
jg
movsb
shl
push
loope
cwtl
xor
dec
mov
test
fs
arpl
lds
adcl
jmp
push
xchg
sub
rcll
mov
or
dec
gs
ret
pop
fwait
jle
adc
ds
lock
mov
and
lock
adc
push
add
jle
sbb
mov
fldenv
pop
sbb
mov
jmp
pop
push
sbb
dec
pop
sbb
mov
ret
pop
adcl
loop
inc
xchg
cmp
or
popa
mov
inc
adc
dec
daa
adc
scas
mov
xorl
lods
mov
adc
mov
ret
ljmp
cld
arpl
outsb
jo
and
pop
mov
popf
aas
mov
jmp
adcl
in
jg
jl
pushf
mov
dec
lock
dec
cmp
dec
enter
sub
mov
cmp
scas
insl
inc
nop
xchg
pop
insl
fidivl
push
cli
push
and
cmc
pusha
out
fisubl
lods
icebp
xor
push
add
cmp
stos
mov
insb
cmp
dec
fwait
push
mov
fcmove
ds
insl
leave
jno
jb
xchg
or
hlt
sbb
or
adc
and
and
enter
repnz
mov
pop
or
stos
fadd
add
insb
cs
out
std
idivb
cltd
sub
push
cli
in
pop
xorl
or
cmp
les
xor
fs
jle
in
inc
sub
push
test
sbb
mov
adc
fisttpl
orl
ja
cli
pop
enter
test
add
popa
mov
mov
rclb
and
jbe
pop
in
mov
mov
mov
cmp
int3
popa
cmpsb
lret
mov
cltd
sbb
adc
lods
or
and
sbb
test
std
inc
inc
adc
jne
mov
adc
sbb
or
mov
insl
adc
lret
or
repz
divl
cmpsb
xchg
xchg
mov
sbb
shr
and
ja
addr16
lods
sbb
mov
stos
adc
sbb
insb
xor
inc
inc
pop
inc
movsb
pop
lds
cmc
cmp
mov
popf
ficoml
inc
fisubrs
popa
pop
mov
adc
mov
push
xchg
daa
lahf
xchg
push
mov
sub
and
inc
jno
inc
insl
ds
fsubr
cmp
pop
flds
aad
aad
addl
pop
pop
outsl
sbb
in
test
repz
or
pop
in
js
outsb
xchg
sub
sbb
not
jl
mov
pop
into
mov
mov
ljmp
pop
push
add
mov
lds
mov
out
push
and
push
pop
sub
xchg
cmp
dec
add
pop
jle
lods
xchg
and
mov
mov
es
pop
out
movsb
dec
lret
lock
add
cmp
stc
mov
or
lret
dec
or
mov
cmp
lods
adcb
push
push
jl
call
dec
sti
insb
fimuls
fs
mov
leave
sahf
sub
and
mov
xchg
push
sbb
adc
shrb
dec
push
ljmp
jp
add
sti
and
aad
sarb
in
pop
sub
test
rcll
into
loop
out
je
orb
mov
mov
fcoms
and
out
ret
in
inc
xchg
push
enter
inc
push
pop
imull
bound
dec
lea
or
lret
push
or
nop
xchg
push
dec
cld
lods
inc
sub
lret
jae
or
scas
push
dec
cmp
scas
add
mov
js
jl
int3
loopne
addr16
rcr
dec
test
int
adcl
das
mov
mov
fisubrl
xor
iret
cltd
push
adc
test
mov
lea
cmp
mov
ljmp
inc
mov
out
scas
xor
or
in
pushf
jnp
pop
stos
outsb
scas
mov
sbb
mov
nop
sbb
adc
or
pop
dec
aad
pop
pushf
mov
fidivl
sub
sub
xchg
cli
push
push
pop
mov
jb
and
out
mov
adc
mov
scas
cmp
jge
jg
mov
add
jnp
cltd
inc
es
xchg
enter
out
push
outsb
dec
dec
dec
cmpsb
jae
push
dec
push
lret
cwtl
fisubs
pop
inc
dec
sahf
adc
xchg
pop
sbb
xor
dec
mov
mov
repz
jp
pushf
xor
dec
test
cmp
push
sarl
sub
fwait
les
push
mov
hlt
repz
scas
movsb
sub
xor
mov
cltd
pop
mov
xor
jl
cmpsb
pushf
dec
xor
mov
sbb
ljmp
and
fcoms
mov
adc
addr16
out
push
xor
cmp
mov
adc
push
leave
ja
xor
sbb
adc
add
fnstenv
inc
mov
jnp
inc
or
inc
es
mov
mov
mov
pusha
gs
mov
dec
mov
xchg
xchg
stos
repz
and
bound
test
xchg
insb
lods
sub
adc
ljmp
popf
jnp
movsl
ret
imul
push
lret
dec
insb
aas
jb
or
jne
add
stos
and
fiaddl
daa
jmp
rolb
inc
prefetch
push
jmp
das
fcmovbe
push
pop
jle
push
mov
in
insb
arpl
dec
fmuls
add
gs
xchg
bnd
jnp
and
sbb
cltd
into
push
mov
add
inc
adc
inc
push
xchg
cmpsb
cmp
sub
ljmp
ja
in
insl
add
xor
push
pop
mov
outsb
mov
pop
mull
cmc
dec
mov
inc
pop
in
cmp
scas
aad
jo
ja
adc
jno
ja
mov
icebp
mov
mov
bound
push
addr16
xchg
fsubp
jo
sbb
push
xlat
sub
mov
lahf
movb
fwait
scas
into
test
jae
adc
enter
outsb
pop
mov
mov
test
cmc
aas
pop
stos
loopne
inc
ja
inc
xorb
in
pop
add
ficomps
adc
mov
ds
lret
stc
cmp
or
mov
icebp
addr16
jne
push
stos
xchg
inc
push
sbb
xchg
stos
jb
lds
outsl
push
shlb
xor
aam
fdivrs
and
decb
int
fimull
js
scas
outsb
push
cmc
js
mov
ret
xor
and
add
dec
popa
adc
sbb
ja
mov
cmp
dec
push
mov
aad
adcl
cmpsl
dec
xor
inc
mov
sub
sarl
mov
es
mov
jno
shlb
ret
stos
fisubrs
push
imul
pop
mov
cmp
std
and
cmp
add
push
or
sub
adc
push
dec
fldenv
jp
outsl
pusha
es
fs
pop
push
push
adc
ret
out
test
dec
stos
adc
pop
fs
shrl
cltd
popa
xchg
mov
int
mov
jg
testl
xchg
mov
xchg
jmp
repnz
sub
lea
mov
call
scas
mov
mov
push
movsb
inc
in
adc
mov
pusha
movsb
inc
dec
lds
or
mov
xchg
xchg
xor
xchg
cmpsb
enter
cmp
mov
lea
pop
xchg
push
lret
mov
sub
test
pop
cmp
mov
sub
or
enter
arpl
repnz
sbb
fisubl
mov
cmp
popf
mov
inc
test
scas
lret
gs
stos
lods
lea
mov
and
add
pop
out
ljmp
inc
das
push
leave
sbb
rcrb
xchg
int3
push
es
add
push
xor
dec
mov
mov
xchg
popa
int
dec
xchg
mov
mov
lcall
leave
das
push
outsb
movd
inc
xor
dec
lock
fs
test
sarl
mov
mov
icebp
lret
pop
add
pop
aam
in
pop
lret
data16
lahf
jp
in
inc
jae
or
sbb
or
dec
pop
loope
mov
inc
mov
jle
rcrl
ret
js
jp
repz
mov
jb
sbb
dec
xchg
xor
jge
int
lret
dec
leave
and
sbb
ss
xor
ficoms
pop
test
inc
clc
nop
les
gs
sahf
int
clc
sti
inc
adc
jp
cmp
cmpsl
fbld
xor
pushf
ss
sub
pop
cmp
xor
ljmp
sub
mov
cltd
dec
adc
xchg
mov
loop
gs
ds
push
mov
ds
ds
mov
cli
in
popl
mov
lahf
fstpl
and
pushf
nop
pushf
sbb
test
jo
cli
adc
jne
xchg
hlt
das
mov
popf
jne
rclb
mov
shr
out
mov
cmpb
adc
hlt
ja
je
push
fistl
or
test
or
ja
cs
inc
mov
push
movsb
mov
jns
fnsave
add
test
int
jp
push
pop
push
cmp
pop
sbb
pop
adc
clc
test
cmp
jl
movsb
mov
dec
or
mov
inc
test
push
test
pop
shlb
addr16
xchg
rcll
scas
xchg
cmc
arpl
lods
pop
sahf
dec
cmpl
cmc
add
loope
jl
mov
ret
push
mov
cmp
pshufw
lods
test
nop
xchg
lods
int
push
notb
mov
or
inc
shlb
ficomps
out
adc
add
xchg
sahf
inc
pop
push
in
clc
jg
adc
push
dec
jg
sbb
xchg
pop
sub
push
jg
xchg
xchg
call
jp
add
cmp
fildll
aad
mov
sarl
pop
cltd
sub
cs
jmp
int3
pop
inc
and
loope
sahf
mov
sub
mov
and
sbb
or
push
pop
add
out
out
test
xorb
hlt
aaa
cmpsb
ds
ret
or
or
test
daa
les
jl
fisttpll
cmpsl
lods
jb
jl
xchg
btr
sub
jbe
aad
aaa
sub
mul
lods
cs
jns
sbb
cmp
and
mov
das
inc
into
and
test
add
icebp
shrl
pop
jecxz
pop
mov
into
mov
in
adc
pop
push
pop
jg
and
in
sbbl
mov
and
pushf
push
mov
pop
cmp
push
lahf
mov
repz
ja
sbb
test
call
adc
mov
push
adc
dec
xor
pushf
addr16
inc
push
into
leave
mov
iret
jo
bound
add
aam
outsb
sub
js
pop
jns
dec
inc
ja
xor
mov
addr16
xchg
test
mov
cwtl
mov
dec
aad
or
lds
or
sbbb
xchg
push
in
jno
mov
dec
insl
fidivs
test
and
pop
cmp
fistl
pusha
xorb
rcrb
fcoms
fs
jmp
popf
stc
hlt
aaa
adc
lds
pop
adc
sub
fs
adc
mov
dec
mov
mov
cmpsl
adcl
push
mov
jl
push
pmaxub
decb
and
inc
mov
daa
pop
mov
jge
xchg
ud2
ljmp
sub
mov
decb
pop
stos
or
sahf
imul
out
push
test
shll
xor
inc
lods
push
lcall
fadd
mov
hlt
icebp
or
insb
ja
jge
inc
ret
xor
arpl
and
mov
mov
jns
xor
rolb
sahf
pop
into
xchg
cli
fwait
mov
mov
xchg
sbb
dec
cmpsl
mov
nop
cwtl
das
inc
add
arpl
mov
aas
ja
and
xchg
aad
repnz
pop
mov
or
imul
xchg
ja
sub
shl
dec
lahf
jecxz
in
inc
push
xorb
test
and
cmp
popf
and
in
cmp
in
push
push
lcall
push
mov
jbe
pop
dec
mov
xor
outsl
mov
cld
xchg
add
rcl
in
cld
test
inc
and
imul
stos
mov
mulb
xor
push
jl
test
adc
pop
add
ds
xor
ljmp
repz
adc
mov
aam
mov
hlt
pop
std
jne,pt
rcrb
sub
mov
xlat
fwait
call
lods
xor
loopne
es
les
mov
les
xor
mov
adc
sbb
sarb
xlat
pop
mov
sub
jge
cltd
inc
out
cmp
movsl
jne
in
fwait
stos
jne
sbb
mov
leave
cmpl
cmpsb
or
cmp
loopne
sub
ljmp
jecxz
jmp
test
mov
inc
and
cmc
jbe
shrb
push
mov
repnz
push
fnsave
dec
sub
push
push
dec
pop
inc
shll
sub
cli
jmp
cli
roll
adc
scas
dec
fisttpl
sbb
sub
jecxz
xchg
sahf
lcall
adc
fisubrs
mov
xchg
cmp
adc
in
jnp
fmull
imul
loopne
jb
ret
incb
ret
mov
cld
push
mov
xchg
push
xor
sub
adc
sti
scas
aas
jbe
stos
and
lret
mov
lds
test
outsb
rcl
inc
loope
loop
inc
xchg
call
into
std
stc
push
mov
pop
sub
mov
dec
lcall
cmpsb
sbb
xor
shlb
mov
dec
xchg
fidivrs
movsb
hlt
cld
test
lea
add
fcomi
scas
dec
out
test
icebp
roll
ret
sub
sbb
aas
inc
sbb
scas
pop
jge
arpl
stc
xor
mov
ret
scas
fs
mov
fmull
pop
mov
and
cmp
cmpl
pop
jns
dec
xchg
pushf
xlat
ja
or
cltd
imul
fcmovnbe
loop
jge
les
add
push
arpl
cmpsl
dec
pop
add
movsb
sbbb
popf
andb
icebp
pusha
bound
cltd
cmp
cmp
xor
cltd
aad
cs
imul
lods
and
or
push
lret
cmpsb
mov
andl
mov
adc
scas
sbb
fidivrs
lods
adc
inc
mov
jmp
jl
lcall
enter
push
insb
addr16
pop
push
in
jge
out
or
shll
jmp
xor
jecxz
hlt
sub
inc
adc
in
mov
leave
ss
daa
out
xchg
jo
lahf
cmp
iret
cld
mov
ljmp
cmp
imul
loopne
xchg
imul
stc
test
data16
fisttpl
mov
jno
mov
pop
pop
shlb
cld
push
push
mov
scas
mov
pop
lahf
lods
loope
inc
mov
push
aam
les
mov
xchg
sub
mov
movsl
push
bound
push
sbb
inc
push
cmp
arpl
push
ljmp
clc
cs
mov
xor
mov
mov
iret
cmpl
pop
out
icebp
scas
cmp
cmp
dec
sbb
insb
daa
cld
ret
xchg
mov
or
clc
aaa
inc
pop
hlt
inc
gs
xor
jne
add
push
loopne
nop
xchg
repz
mov
out
outsl
push
mov
cwtl
lock
and
adc
jge
outsl
xchg
js
imul
dec
shrb
sub
adc
testl
aad
ja
ds
lahf
lahf
xchg
std
ljmp
sbb
insb
mov
mov
fabs
in
sub
movsb
inc
sub
push
bound
sbb
scas
jge
ret
das
int
imul
ret
jne
outsb
pop
nop
mov
lods
test
adc
mov
xor
jl
sbbl
cli
cwtl
or
xchg
les
and
adc
movl
inc
aam
inc
xchg
jmp
jo
and
mov
and
adc
in
mov
es
enter
pop
stos
dec
xchg
mov
scas
aaa
pusha
xor
int
mov
jo
stos
push
lea
fdivrs
cmpsl
adc
test
mov
mov
insl
insb
xchg
push
pop
popa
and
nop
dec
es
xchg
out
or
jge
aas
mov
dec
sbb
lahf
arpl
push
mov
pop
lret
scas
xchg
outsb
push
movsl
add
push
sahf
mov
sub
adc
in
cld
ret
insb
aam
fcomps
loope
leave
cwtl
sub
addr16
js
and
mov
adc
imul
push
lret
movsb
cltd
movaps
test
sub
pop
mov
jp
pop
sub
lea
push
add
ljmp
mov
sub
ds
mov
push
sbb
xchg
cmp
inc
xchg
mov
xor
jge
mov
ja
call
stos
aas
sub
push
and
jg
or
pusha
filds
and
ret
andl
mov
cmp
subb
ret
lret
fcomps
pop
push
out
jo
lock
pop
or
into
mov
dec
ss
pusha
add
nop
push
adc
out
insl
pop
clc
clc
cmpsl
xor
jge
clc
lods
stos
mov
bound
mov
adc
loope
xor
pop
movl
mov
fs
pushf
jl
fwait
mov
roll
adc
dec
jne
jnp,pt
push
movsb
addb
push
jp
stos
ljmp
xchg
and
add
xor
xlat
addr16
inc
xor
stos
or
add
dec
and
xorb
add
pop
xchg
sbb
inc
and
xchg
mov
imul
xchg
repz
mov
or
test
popa
mov
insl
fldl
in
mov
jl
call
call
arpl
pop
fcompl
or
push
hlt
loopne
push
push
push
in
sub
cmp
xchg
fstpt
jbe
icebp
xchg
repnz
je
call
sub
mov
or
icebp
test
inc
mov
adc
pop
ds
dec
xor
mov
cwtl
mov
insb
insb
push
mov
sub
ret
sbb
dec
pop
sbb
loop
jb
cmp
jae
ds
push
lods
cmpsl
loopne
push
xlat
xchg
lret
out
sbb
inc
cmp
inc
dec
or
rclb
mov
mov
cld
aam
adc
inc
push
inc
clc
lock
jge
mov
ret
mov
sbb
fidivrs
mov
cmc
sub
iret
ss
xor
inc
clc
cli
inc
loopne
jno
mov
cmpsb
lcall
mov
dec
xor
mov
xchg
inc
pop
mov
mov
std
and
test
pop
cmpl
movsl
mov
pop
adc
xor
add
sub
test
jecxz
inc
imul
jmp
push
xchg
shrb
dec
loop,pt
pop
jle
sbb
sub
dec
mov
loopne
andl
lret
cli
sarb
push
jo
lcall
cmpsb
mov
loopne
nop
push
outsl
or
test
cltd
mov
or
cmpsb
stos
test
xor
fsubrs
cmpsl
or
out
fiaddl
or
test
cmp
mov
out
out
fstp
mov
cli
mov
fiaddl
cmp
shrl
pop
sahf
out
xchg
inc
and
mov
sbb
mov
mov
xor
sub
jg
push
jecxz
mov
or
adc
imul
cmp
xor
aaa
decb
repz
jl
mov
pop
adc
sub
or
test
pop
mov
test
xor
lods
ss
clc
cwtl
pop
jo
mov
dec
lock
mov
inc
imul
adc
cmp
push
mov
mov
jg,pt
insb
int3
push
mov
stos
ficompl
xlat
mov
inc
das
push
cwtl
sahf
pop
or
pushf
clc
daa
xchg
rcll
jo
pop
push
dec
into
lds
adc
fdivrp
fwait
rcrb
mov
sbb
mov
xor
sub
and
jle
sub
xor
add
jb
ret
jb
pop
mov
dec
push
scas
insb
xor
jb
ljmp
dec
sbb
mov
sbb
lret
sub
lods
lods
js
jae
shr
dec
sbb
fisttpl
roll
ret
mov
lods
js,pt
test
out
test
lds
add
dec
pushf
scas
inc
js
je
notl
fs
sub
arpl
dec
and
ss
es
scas
cltd
and
mov
inc
bound
pop
push
jbe
jnp
stos
mov
xchg
jecxz
adc
arpl
pop
lock
nop
roll
adc
test
mov
push
fsubs
in
aas
mov
push
inc
repz
aad
popa
sub
push
mov
cmp
stos
add
les
xchg
inc
or
jae,pt
aad
push
add
xchg
aad
mov
jp
stos
or
pop
jns
loope
iret
pop
fistpl
sahf
xchg
pop
ret
addr16
out
pusha
jge
aad
xor
loopne
insb
aas
push
cmp
mov
mov
cltd
inc
and
or
and
dec
sub
adc
xchg
out
adc
mov
mov
lds
cmpsb
hlt
mov
cmp
mov
mov
pop
mov
cmc
in
es
cld
stos
lret
or
mov
out
pop
jae
or
mov
outsl
push
lea
sbb
jo
and
adc
jge
sbb
jns
push
std
dec
mov
scas
adc
loop
inc
fwait
dec
call
and
nop
jae
pop
push
mov
mov
ss
test
enter
out
adc
cli
jmp
popa
push
aas
lock
adc
outsb
add
and
push
lods
adc
rcr
sub
mov
sub
or
leave
adc
push
jae
push
into
std
inc
in
and
icebp
lds
inc
jp
or
mov
pop
lret
or
in
addr16
cmpsl
xchg
mov
sbb
push
add
cli
adc
push
jg
and
adc
popf
cli
mov
cmp
nop
xor
add
stos
in
sti
cmp
push
std
jns
add
bound
adc
fwait
xchg
ljmp
xor
cmp
jns
mov
in
xchg
push
inc
lock
cwtl
mov
test
out
stos
popf
insl
cmp
lods
pushf
mov
mov
dec
imul
push
mov
jns
inc
pop
xchg
xor
jnp
cmp
clc
sub
scas
sub
adc
lret
cs
out
pop
pop
sbb
popf
pop
add
iret
adc
or
lods
call
call
sahf
push
xor
test
dec
fnsave
fstps
outsb
push
or
mov
bound
jp
outsb
cli
shrl
popa
mov
ljmp
sbb
lods
cmp
jo
pop
or
hlt
cmpsb
xor
xchg
sbb
ljmp
xchg
mov
sbb
lea
cmc
fwait
popa
aaa
jle
addl
dec
jbe
push
dec
lds
scas
pop
xchg
scas
sbb
push
push
inc
test
push
enter
ds
cmp
xor
pop
inc
gs
fidivl
sbbl
pop
mov
iret
into
in
sub
jo
int3
fistpl
bound
fiadds
add
xchg
test
adc
mov
xchg
add
cmp
in
mov
out
push
stc
adc
jae
mov
ljmp
out
int
xor
xor
inc
andb
push
and
pop
inc
sbb
mov
sub
idivb
movsl
fwait
pop
outsl
mov
or
das
das
cmp
clc
xor
imul
push
repz
cmpsl
cmc
sbb
pop
into
mov
mov
dec
aas
jbe
pop
jecxz
adc
xchg
sbb
xor
mov
push
xor
cmpsl
popa
ljmp
dec
inc
fsubrl
pop
and
sub
test
cmp
enter
addl
push
and
call
test
xchg
das
enter
sub
fsub
call
mov
popl
or
push
dec
inc
mul
xchg
test
xchg
sbb
pop
hlt
xor
int3
xorb
std
mov
cmc
xchg
repnz
std
jo
jae
enter
leave
cmp
call
adc
pop
mov
gs
jnp
int3
cmc
jg
call
mov
mov
pop
xchg
lods
cmpsb
and
xor
mov
sub
test
out
aam
push
jb
test
test
sbb
pushf
add
fadd
mov
outsb
push
jnp
lcall
adc
add
xchg
movsl
xor
xchg
xor
orl
inc
sbb
jge
imull
fldt
int
stos
xchg
ss
imul
out
dec
icebp
cmc
jl
push
mov
sahf
sub
aas
xchg
daa
jp
push
inc
and
popa
repz
scas
dec
sub
sub
jp
repz
lahf
or
push
arpl
xor
adc
xor
fdivl
push
aaa
test
jecxz
jno
jae
xor
dec
cmc
out
popa
enter
push
push
mov
sbb
xchg
sub
pushf
sbb
inc
test
cs
sub
mov
int
lods
jno
roll
add
pop
enter
inc
push
cltd
inc
xor
inc
pusha
rolb
lret
aad
cld
in
cmp
or
add
dec
lods
jnp
int3
jo
test
inc
nop
or
test
pop
and
sti
mov
pop
imul
ja
js
jb
xchg
pusha
fdivrp
in
leave
xchg
sahf
adc
sub
push
dec
push
cmp
and
lods
cmpsl
addr16
lock
pop
pop
in
fistpl
jmp
loope
fucom
icebp
loope
push
test
pop
sti
pushf
xor
mov
push
sub
adc
lods
lret
jb
sub
inc
lsl
pushf
iret
pop
jbe
leave
dec
lcall
lret
push
mov
sbb
fistl
xor
jne
pop
and
fwait
inc
or
fdivr
sub
sub
xchg
pop
dec
xor
scas
pop
pop
bound
rcrb
nop
mov
mov
inc
and
and
int3
sbb
aad
or
cltd
outsb
lea
lock
push
push
pop
cmp
shlb
cltd
mov
fdivrl
xchg
lea
xor
inc
fstpt
popa
movsb
mov
jp
push
stos
gs
dec
lds
cmp
push
nop
lea
dec
cmp
pop
pop
and
imul
pop
mov
outsb
dec
mov
mov
xorl
cmp
jo
test
push
in
mov
push
inc
or
and
loop
ret
jecxz
lods
cmp
inc
mov
idivl
dec
clc
data16
int
sahf
cmpsb
jg
call
dec
iret
je
sub
test
pop
loope
pop
dec
out
insl
cmp
and
outsb
sbb
lods
sub
xchg
out
xlat
aaa
xor
add
bound
ja
sub
xchg
inc
sub
xchg
int
inc
mov
push
lret
dec
cmp
popf
stos
cli
add
sbb
bound
jo
jle
jle
in
push
push
rorb
or
adc
or
xor
xchg
lret
push
mov
adc
adc
test
inc
in
or
leave
mov
pop
idivl
sub
mov
jo
fisttpl
pop
mov
sbb
inc
pop
dec
mov
lahf
jns
icebp
push
test
xchg
inc
je
sub
mov
movsb
adc
addr16
loopne
pusha
inc
int3
sub
ss
mov
out
sub
inc
xor
das
push
adc
or
cmp
xor
push
stos
out
call
fstps
addb
sub
sub
jbe
adc
pop
lods
or
push
sub
pop
xchg
lret
push
sub
dec
push
adc
mov
sbb
stos
loop
cmp
or
lds
cwtl
std
inc
pop
push
adc
mov
into
enter
mov
adc
mov
pop
add
mov
std
add
gs
mov
dec
inc
inc
sti
jb
xchg
inc
jns
inc
inc
test
mov
add
cmp
cmp
mov
cwtl
jge
flds
movsb
adcl
popa
fnstsw
or
pop
push
push
sub
test
adc
jmp
movsb
mov
notl
mov
dec
sub
scas
int3
xor
movsb
or
lret
sahf
xchg
xchg
shrl
test
adc
xor
fnstcw
lock
lcall
je
pop
pop
sti
lret
mov
aam
stos
mov
test
mov
and
je
xor
push
mov
loope
imul
scas
es
testl
mov
into
mov
xchg
jle
adc
cs
push
daa
insb
jne
xchg
push
or
test
and
leave
pop
pop
jno
int
rclb
fmulp
ret
lea
in
mov
sub
sub
and
xchg
ss
loope
lods
push
push
imul
push
movsl
jne
mov
fwait
arpl
pop
push
jl
fstps
mov
lret
clc
jp
mov
mov
movsl
clc
mov
clc
das
popf
sub
dec
mov
cmc
sub
sub
bswap
aam
dec
int
push
fmulp
jge
cltd
cmpsl
aam
mov
scas
pusha
jbe
in
cltd
jb
dec
aaa
cmp
lods
mov
imul
sbb
xchg
jns
or
and
and
arpl
jp
dec
xor
mov
jns
nop
xor
in
push
cltd
inc
repz
add
ljmp
push
cmpsb
lret
sbb
sub
or
jmp
dec
mov
dec
jge
or
repz
enter
jnp
sbb
loopne
dec
ret
mov
out
aaa
or
enter
sti
mov
sub
add
push
outsb
jb
ljmp
adc
cmpb
sti
in
xor
mulb
aad
and
xchg
iret
mov
sbb
jno
adc
int3
nop
fdivrl
cmp
call
fists
stc
lds
ljmp
loopne
xor
in
mov
mov
js
add
push
adc
fldt
add
bound
mov
mov
cmp
jb
xor
sub
std
int3
jl
push
cmpsb
xor
jg
popa
test
xor
subl
cwtl
imul
jle
mov
xor
inc
cmc
enter
bound
test
inc
das
inc
fstps
lds
sbb
lock
cli
mov
or
lock
mov
push
push
and
cmpsl
sbb
in
pushf
mov
fdivrs
pop
mov
cwtl
or
loopne
call
rcrb
xadd
xor
dec
inc
sahf
cmovp
dec
jl
addr16
push
in
adc
pop
mov
jno
les
loopne
jmp
xlat
int3
xor
jp
jle
cmpsl
cmc
push
popa
fldcw
rcrl
or
dec
lods
add
arpl
sbb
jae
jno
mov
sub
adc
ror
aas
sub
loop
xchg
xor
adc
jb
fs
mov
inc
xchg
cmp
adc
xchg
decb
insl
pop
out
mov
and
div
cwtl
aam
sub
xchg
xor
cmpsb
les
jae
sbb
call
add
mov
sub
pushf
je
jl
pop
ja
xchg
sahf
adc
lods
jl
sub
xchg
in
dec
push
pop
or
mov
jae
xchg
cld
pop
out
inc
shlb
jo
cmc
lret
arpl
add
popf
shrl
and
mov
push
aaa
mov
xor
mov
fisttpll
push
cmpsl
shr
lahf
fistps
push
cmp
sbb
arpl
jno
sarb
cmpsb
inc
std
dec
adc
inc
cli
push
icebp
xor
ret
imul
jp
or
subl
add
mov
mov
frstor
xor
shll
dec
pop
nop
repnz
xchg
cltd
icebp
fiaddl
lret
push
inc
inc
test
dec
xorb
fistpll
sub
adcb
aaa
cs
mov
shl
add
jbe
mov
jae,pn
imul
cmp
jbe
dec
cmpsb
inc
cmp
sbb
fldcw
int
adc
bound
dec
lcall
cld
add
and
and
lahf
pop
std
shlb
daa
xchg
sar
adc
into
or
lret
bound
mov
movsl
xchg
int3
mov
push
test
pop
mov
add
lcall
scas
rorb
jno
es
je
push
push
push
or
inc
cld
mov
mov
pop
xchg
sti
js
jae
sub
pop
into
in
xchg
lret
lahf
nop
xor
fnstcw
xor
and
outsb
cmp
add
sbb
in
cltd
inc
mov
jle
cld
into
and
xchg
xchg
scas
popa
inc
xorb
sti
movsb
ss
pop
push
fnsave
pushf
out
scas
popa
cmp
sub
xchg
cmp
and
imul
jl
ret
push
xchg
scas
sub
fsubs
mov
hlt
mov
adc
sqrtps
std
outsl
lret
aaa
mov
mov
dec
or
fnstenv
sub
pop
faddl
mov
cmp
jmp
test
popf
and
xor
fidivrs
mov
cld
sub
popf
ja
adc
pop
jl
or
mov
movsb
subl
jbe
aaa
inc
or
inc
imul
mov
mov
mov
scas
jo
in
rorb
ret
fbld
stos
std
adc
cmpsb
sub
test
mov
xchg
inc
jb
mov
inc
push
sub
push
pop
dec
jecxz
pop
push
mov
mov
enter
push
push
testb
pop
stc
mov
stos
call
imul
or
add
sbb
mov
rorb
mov
inc
out
mov
icebp
jecxz
xchg
aam
popf
addb
in
adc
out
aas
lea
mov
call
mov
pop
inc
fs
mov
aaa
jl
das
mov
mov
insb
push
mov
inc
aam
jne
sbb
scas
dec
out
ficomps
inc
mov
push
sub
push
jmp
out
xchg
jne
pushl
sbb
lret
jae
mov
sti
add
imul
lods
shl
repz
in
call
and
test
lods
xor
adc
mov
out
dec
dec
jno
push
loopne
test
jge
pop
push
mov
lds
pop
imull
fisttps
into
sbb
dec
test
inc
jg
nop
int3
mov
adc
inc
cli
xor
pop
fs
pop
jle
sub
and
pop
out
adc
and
push
push
dec
sarb
jo
pushf
cmp
mov
in
aas
clc
mov
add
les
jbe
push
xor
jno
cli
jo
lods
push
sbb
mov
pop
sub
pop
inc
mov
outsb
notl
cmp
aad
inc
int3
call
mov
scas
jge
aas
sbb
pop
repz
cld
stc
enter
xchg
icebp
jae
lret
inc
cs
in
cmpsb
jge
enter
loop
sub
cld
std
in
enter
pop
shll
pushf
rolb
cmp
and
dec
jmp
enter
sbb
mov
sub
xor
es
fstpl
mov
inc
nop
arpl
insb
jge
mov
mov
xchg
iret
testl
adc
stos
aas
and
jle
jecxz
outsb
jecxz
sti
push
xor
aas
jne
sarl
adc
jmp
inc
lret
daa
cmp
lcall
call
jae
ds
lahf
mov
outsl
ret
lret
jg
dec
push
xlat
ss
lret
mov
dec
xor
adcl
les
andb
sbbb
inc
cmpsb
push
popa
jo
test
lahf
loop
int
jo
fistpll
aaa
xor
inc
sub
push
lea
call
imul
filds
dec
jmp
or
std
cmpsl
lods
mulb
aaa
jns
or
scas
push
push
jb
mov
add
mov
jp
dec
cmc
imul
in
push
jno
in
fisubs
jnp
subl
inc
out
hlt
jge
aam
mov
adc
pusha
mov
pop
xchg
jno
xchg
cli
fisubrs
lcall
mov
clc
xchg
outsl
daa
add
push
pop
loope,pt
gs
outsb
inc
bound
push
mov
das
pop
add
in
jb
mov
push
movl
xchg
adc
jbe
lret
stos
cmpsb
ss
lods
and
add
clc
aad
adc
xchg
lods
add
pop
mov
mov
fs
ja
adc
rcrb
push
mov
sub
in
call
xor
cmp
add
imul
loopne
adc
add
stos
mov
daa
xchg
aaa
mov
xchg
ljmp
iret
push
das
inc
jns
movl
push
popf
addl
mov
jp
ficoms
js
stc
mov
or
push
insl
inc
push
xchg
dec
mov
scas
inc
gs
cmovg
jge
sbb
aaa
jno
push
addl
daa
imul
mov
cwtl
push
movsl
mov
enter
adcl
sbb
out
inc
insl
jno
cli
lret
ret
pusha
xor
push
push
mov
inc
xor
fwait
inc
jne
out
int
mov
mov
or
sub
adc
mov
les
push
jns
xchg
stos
mov
in
xchg
rcll
es
in
not
popa
push
jo
push
inc
cmp
pop
lods
mov
pushf
call
fs
lds
mov
pop
into
ret
in
movsl
jg
fwait
xchg
sbb
js
xchg
xchg
add
arpl
lret
xchg
lcall
and
mov
scas
xor
xlat
outsl
xorl
sbbl
mov
ja
movsl
push
push
bound
in
rolb
sub
sub
movb
jae
das
sub
aas
mov
fucomip
loop
mov
les
cmc
nop
sbb
dec
test
pop
push
add
clc
mov
add
ret
xchg
iret
push
xor
adc
movsb
dec
test
or
inc
jb
rcll
enter
push
sbb
xor
adc
inc
popa
sbb
sbb
lret
sbb
enter
add
aaa
stos
pop
aas
sbbl
dec
xchg
push
repz
loopne
cmp
lret
xchg
push
std
sbb
js
ljmp
cmp
pop
xchg
or
into
jae
sahf
or
cltd
mov
into
or
popf
xor
jns
pop
das
inc
into
daa
or
xchg
test
inc
lret
dec
or
movb
popf
icebp
pop
scas
pop
dec
jecxz
push
out
xchg
push
popa
jle
push
mov
aaa
cs
inc
mov
lret
aad
je
or
mov
repnz
fimuls
fdivr
adc
sbb
sbb
pop
sbbl
int3
adc
xchg
xchg
aas
clc
cwtl
xchg
test
sub
rep
mov
lret
jp
cmpsb
jnp
adc
movsb
push
or
test
cld
push
push
loop
or
adc
imul
hlt
das
push
out
int3
mov
pop
rolb
fsubrs
and
clc
jl
mov
pop
dec
lock
lahf
pop
xchg
sti
fwait
mov
jb
rolb
xor
lods
gs
fmuls
imul
pop
addl
or
mov
mov
jp
and
adcl
movsb
xchg
add
sub
add
mov
in
dec
xchg
daa
xor
cmp
mov
push
and
sub
xchg
jmp
imul
and
mov
push
rcrb
jecxz
or
xchg
xchg
andl
jne
fstpt
and
out
test
aaa
ja
movb
in
mov
pusha
mov
outsl
xor
inc
sub
loope
jo
cmp
fidivrl
sub
xchg
test
pop
rolb
in
add
roll
cmp
bound
out
mov
pop
jmp
divl
in
xlat
imul
or
gs
inc
mov
sbb
ljmp
jmp
call
inc
jge
sub
mov
mov
loopne
les
push
inc
out
test
lret
mov
outsl
adc
rolb
xchg
pop
mov
jp
enter
or
xchg
mov
inc
cmp
xor
xchg
rol
mov
mov
inc
scas
and
enter
aad
std
mov
dec
sbb
out
sub
mov
cld
xchg
ret
sbb
cmpsl
punpckhdq
mov
mov
out
leave
inc
mov
cwtl
add
fs
or
mov
movsb
imul
push
xchg
and
lcall
fcmove
pop
mov
xchg
ljmp
inc
xor
fdivrl
repnz
cmp
aad
dec
jmp
popl
inc
insl
pop
ljmp
or
fdivl
pop
jo
xchg
repz
or
stos
outsb
dec
sbb
xchg
std
jle
add
push
insl
sar
mov
gs
out
pusha
je
sub
lods
in
push
push
stos
je
add
aas
aam
cwtl
fists
fwait
lea
cmp
adc
xor
iret
xchg
adc
repz
xchg
je
sub
pop
mov
pop
lret
les
xchg
ljmp
mov
orb
je
mov
stc
lock
cmp
sbb
pop
loop
fadd
pop
mov
imul
or
pop
loope
lret
push
mov
xchg
pop
std
push
insb
xlat
inc
mov
or
cmp
mov
fdivl
inc
or
and
fwait
cmp
nop
out
enter
xchg
cmp
inc
push
sub
pop
outsb
cs
hlt
push
roll
loop
mov
xor
mov
adc
into
sbb
push
nop
cmp
xor
lods
sbb
pop
imul
jo
lea
adc
sbb
loope
dec
in
jmp
pop
push
push
cmp
popa
jge
xor
insb
or
mov
inc
sbb
pushl
fstpl
push
les
push
push
dec
cmp
pusha
push
inc
loop
or
sub
sbb
int3
pop
xor
ret
pop
jb
lret
inc
sub
sti
loop
adc
lret
lret
push
inc
add
insl
mov
xor
mov
in
sub
cmp
xchg
test
jmp
mov
fists
aaa
mov
push
inc
addr16
cmp
push
in
ds
fisttpl
aaa
das
frstor
mov
sbb
jp
dec
hlt
gs
jne
push
or
push
insl
lods
data16
jae
cmp
rcrl
scas
pop
test
add
xchg
xlat
std
xlat
mov
test
adc
push
adc
pusha
movl
sti
std
mov
test
jp
dec
shll
imul
jle
mov
mov
mov
leave
je
inc
push
iret
daa
add
jmp
in
int
rcrb
push
in
js
fimull
in
outsb
loop
xchg
push
pop
scas
imul
push
push
clc
sbb
mov
add
in
test
jmp
int3
push
sub
popa
xlat
jb
nop
sbb
and
jp
test
push
or
outsl
das
loopne
add
push
push
ljmp
int3
adc
jns
je
mov
fwait
pop
stos
int3
inc
mov
fstpt
pushf
ret
cmp
loope
mov
dec
sbb
mov
dec
jno
sub
sub
ja
cmpsb
leave
pop
into
push
or
loop
mov
push
cmpsb
or
es
adc
xchg
popa
mov
sub
int
push
xchg
fucom
pop
lods
stos
mov
leave
mulps
outsb
cmpsb
or
fmulp
les
xchg
jmp
lcall
clc
dec
imul
xchg
out
jbe
pop
fld
sti
into
test
pop
hlt
mov
cmp
jno
lcall
data16
adc
scas
es
cmpsb
test
popf
and
cmp
sub
or
iret
cs
popf
sbb
negb
mov
shrl
mov
mov
push
add
into
and
cmp
nop
sub
or
fisubl
in
pop
sbb
mov
jne
sub
gs
and
lret
xchg
xor
jge
cmp
push
lcall
mov
dec
inc
aad
inc
push
lret
or
cmovle
arpl
sbb
fidivrs
push
jnp
shlb
sahf
jle
jp
jnp
pop
ds
iret
push
insb
mov
cmp
mov
adc
pushf
inc
in
pop
dec
jge
push
adc
inc
xchg
pop
scas
sub
jne
sub
out
out
inc
mov
inc
mov
dec
mov
inc
and
mov
fwait
ja
int
loopne
repz
loop
inc
and
mov
cmpsb
cmc
sbb
les
jo
pop
lea
arpl
adc
cmp
push
scas
test
loopne
pop
rcrl
sub
pop
fwait
lret
popa
dec
xor
xlat
or
add
popa
outsl
imul
sub
mov
clc
shr
test
mov
inc
lret
leave
out
in
shlb
std
in
adc
xchg
xor
fisubrs
test
pop
int3
mov
roll
xchg
jno
mov
ret
int
hlt
pop
mov
test
call
outsb
xchg
shlb
mov
xchg
jbe
xor
repz
pushf
scas
sbbb
fldenv
lcall
std
jne
dec
sub
pushf
or
mov
pop
lret
jmp
movsb
pop
mov
and
cmp
mov
aam
mulb
mov
push
cmpsl
mov
sbb
int3
hlt
addb
sbb
movsl
mov
je
xchg
sub
rcrl
xchg
sub
cltd
mov
jae
mov
adc
shrb
movsb
jge
nop
lahf
pop
or
push
cwtl
adc
mov
pop
add
xchg
ret
hlt
dec
icebp
scas
dec
incl
decb
add
ret
and
and
fists
cmpsb
test
xchg
mov
adc
cmpsb
sahf
mov
or
mov
lods
daa
add
sbb
or
dec
add
cmp
fwait
dec
movsl
push
out
dec
jb
adc
dec
adc
xchg
stc
in
mov
pusha
inc
inc
lcall
ss
aad
cmpsb
gs
or
data16
push
push
xlat
mov
jnp
test
mov
imul
jmp
pop
out
push
fidivs
mov
push
ret
jp
push
in
push
lds
mov
push
test
pushf
test
push
int3
adcl
or
movsb
jae
add
jle
mov
enter
sahf
jp
movsb
addr16
cmp
push
subl
repnz
dec
push
ret
imul
dec
sbbb
lret
inc
inc
call
daa
push
or
push
xchg
mov
push
mov
je
sbb
cs
sbb
sub
inc
cld
inc
cld
idivb
lahf
sti
idivl
sbb
in
addr16
shll
inc
jg
sbb
fsubs
sbb
imul
jnp
movsl
in
dec
repnz
lcall
xlat
aaa
adc
mov
mov
sub
xor
cli
inc
add
ss
fidivrs
stc
jnp
cmpsb
mov
inc
ret
jae
bound
insb
jle
sbb
jp
pusha
dec
lret
dec
repnz
stos
xchg
movl
insb
mov
add
add
mov
les
lods
loop
inc
pop
insl
loopne
lods
insl
subb
sub
ficomps
jmp
xor
popf
inc
add
lahf
out
push
scas
fisttps
fmull
ljmp
jp
scas
dec
adc
sub
jbe
xchg
cwtl
dec
icebp
loop
imul
sbb
jmp
cltd
lods
xor
jno
sbb
aam
out
and
adc
shll
sbbl
fs
js
imull
jmp
sbb
push
mov
test
mov
inc
shrb
mov
or
ret
inc
jg
mov
push
pop
out
and
cs
iret
and
lea
std
mov
scas
pop
sub
adc
dec
xor
jp
mov
xor
mov
push
add
sub
cli
daa
mov
adc
xor
mov
inc
or
jnp
fstpt
lock
sub
mov
jb
mov
and
mov
and
pop
xchg
jecxz
and
cwtl
test
lock
mov
mov
jle
inc
je
cmc
xchg
ret
into
jno
sbb
xchg
jbe
xchg
cmp
scas
andl
fisubrs
dec
xchg
dec
gs
scas
lahf
mov
push
push
or
pop
dec
aaa
pushf
dec
cmp
mov
jg
iret
pop
rolb
jg
jnp
lds
sahf
imul
pop
mov
js
sub
inc
pop
sub
bound
mov
lods
shlb
push
xor
cwtl
sbb
cmc
stos
pop
je
fmuls
insb
dec
and
aad
mov
add
arpl
adc
ficompl
fidivl
cmp
sbbb
andb
dec
out
test
add
in
js
push
xchg
scas
push
push
enter
setbe
cmc
out
or
adc
fcomi
scas
push
ds
aas
pop
mov
shrl
dec
es
or
adc
push
inc
cmc
test
or
pop
cmc
into
shll
push
mov
jle
aad
dec
outsb
fimuls
imul
jo
inc
push
in
pop
and
add
ds
sub
in
push
mov
roll
arpl
les
lea
stos
sbb
in
test
xchg
arpl
jmp
cmpsl
xchg
add
mov
adc
ja
xorl
aam
push
cmp
imul
mov
or
sub
push
sahf
jns
es
xchg
aas
les
xor
or
repnz
fs
daa
dec
adc
mov
xor
aaa
add
jbe
mov
mov
les
xor
test
push
mov
mov
add
cli
mov
sti
imul
push
lock
outsl
mov
stc
cs
push
leavew
and
lcall
or
inc
push
pop
je
arpl
dec
and
pop
inc
push
rcl
mov
jge
js
xchg
pop
dec
adc
pop
es
fidivs
not
mov
scas
mov
movzbl
jb
fstpt
fnstenv
xor
cmp
fstps
mov
cmp
test
mov
or
sbb
call
add
cmc
arpl
loope
or
cld
bt
xchg
cmp
inc
inc
addr16
enter
mov
outsb
add
push
push
ljmp
negl
or
lods
push
jmp
inc
test
sbb
push
sub
inc
andb
or
sub
imul
mov
and
mov
mov
leave
xor
outsb
dec
movsb
xor
in
add
addr16
adc
call
mov
adc
push
dec
fidivs
addl
shrb
mov
sbbb
frstor
or
jns
std
jnp
sahf
enter
fildl
daa
push
cmp
cld
sbb
loope
out
sub
popa
or
xchg
out
test
cmpsb
loope
pushl
xchg
ljmp
enter
xor
pop
pop
testl
rcll
push
or
into
inc
sahf
or
cmp
in
cwtl
adc
fsubl
mov
mov
inc
pop
xchg
push
jp
mov
sbb
push
inc
pop
pop
mov
add
shlb
add
jecxz
daa
inc
and
imull
and
les
mov
mov
ljmp
cld
shlb
push
imull
ret
sbb
test
jbe
sbb
lcall
pop
jae
lahf
jno
xor
pop
mov
or
aad
xlat
sbb
jmp
hlt
inc
mov
mov
test
pop
ja
insb
or
mov
mov
flds
cmp
sub
jo
dec
jmp
fwait
sbb
xor
and
lahf
xlat
stos
popa
sbb
lcall
cs
push
xchg
inc
jge
adc
push
push
lret
in
in
xchg
shlb
fwait
jp
in
movsl
adc
shlb
repnz
cmpsb
adc
xor
pop
cli
adc
pop
pop
rolb
and
push
repz
ficomps
sub
push
lods
shrd
cs
pop
xchg
push
jg
ds
mov
or
vbroadcastss
shlb
pop
jns,pt
or
inc
mov
push
in
out
rcll
sbb
add
daa
pop
push
push
js
xchg
adc
bound
cli
push
pop
loopne
cwtl
roll
jge
nop
and
cwtl
pop
push
je
in
cmp
pop
push
inc
pop
incb
enter
leave
test
aad
stos
fwait
bound
out
mov
call
cld
lcall
aas
pop
shlb
inc
push
sbb
jns
cmpsl
out
dec
add
mov
pop
adc
aad
add
imul
mov
sbbb
cld
icebp
cmp
outsb
sub
or
aas
push
subl
and
cld
jnp
enter
sbbl
ds
test
jmp
decb
shlb
push
sub
push
popa
add
xorb
push
sbb
cmpsb
cmpsl
pop
out
and
mov
lret
int3
pop
lods
test
xor
fwait
and
cmc
fdiv
sbb
xlat
push
add
and
jecxz
adc
ja
sub
das
adc
adc
xchg
jp
or
pop
add
mov
in
stos
push
test
mov
out
push
adc
in
fs
scas
sbb
je
dec
xchg
decl
sub
nop
sbb
xor
popf
andl
mov
inc
or
push
ja
movsb
cld
or
test
xor
pop
mov
add
sub
mov
ficomps
pop
cs
mov
xor
lcall
mov
jmp
sbb
pop
lds
push
mov
sbb
pop
push
cmp
test
das
xor
addb
jl
push
cmpsb
mov
rol
enter
gs
cltd
xchg
lds
add
rorb
or
push
cmpsb
loop
shll
jbe
shlb
aad
mov
es
inc
into
dec
xchg
mov
xchg
jp
add
inc
pop
ret
shll
mov
adc
dec
fistpll
ret
lret
mov
test
addr16
dec
lret
cmp
inc
jg
fiaddl
adc
inc
loopne
fwait
loopne
cmp
cmp
gs
gs
mov
jecxz
xchg
dec
rol
stos
or
mov
rcr
out
lods
loopne
sub
inc
push
adc
or
lcall
leave
inc
scas
ljmp
mov
aaa
mov
and
std
mov
into
prefetch
mov
cltd
mov
outsl
cmc
mov
jg
xor
enter
cmc
inc
sbb
cwtl
and
add
jecxz
pop
mov
dec
pusha
push
fcompl
mov
bound
push
scas
sbb
iret
jecxz
inc
xlat
xor
pop
popa
mov
and
scas
dec
subl
mov
sti
and
xchg
inc
inc
mov
pop
fmul
cmc
add
outsb
xchg
cmp
repnz
xor
add
leave
and
jmp
dec
popa
pop
pop
inc
mov
and
xchg
imul
loope
xchg
ss
cmp
inc
mov
sbb
repz
inc
fiaddl
cmp
repnz
sub
adc
adc
insl
pop
psrlw
xchg
xchg
inc
rol
xor
jb
jmp
xor
mov
popf
inc
cmp
dec
adc
ljmp
popl
data16
enter
push
add
jle
xchg
popa
cmc
jne
jns
fldenv
pop
popf
shll
fnsave
cmp
cmp
hlt
shrl
sub
cltd
into
std
inc
iret
push
sbb
adc
test
pop
adc
jae
mov
mov
and
ss
lret
sahf
cld
push
mov
or
je
shll
pop
inc
cmp
mov
jmp
adc
xchg
mov
mov
es
mov
in
dec
in
repnz
jmp
or
push
inc
and
add
or
xor
out
xor
std
pop
rol
jae
popf
cmp
das
xchg
xchg
add
repnz
xchg
fistpl
mov
dec
inc
xor
sbb
mov
mov
ret
out
add
int
mov
or
push
rcrb
mov
cld
sub
jecxz
jmp
gs
push
adc
mov
negb
ss
cli
inc
scas
stc
faddp
mov
jnp
jmp
iret
push
ficompl
or
popf
jo
mov
sbb
mull
adc
mov
sbb
lock
pop
mov
dec
xor
xchg
mov
jle
pusha
arpl
xor
out
xlat
xlat
xor
mov
les
das
inc
pop
cmp
imul
outsb
cmc
pop
mov
mov
xor
iret
movsl
bound
std
dec
adc
mov
push
or
mov
pop
lret
in
and
jecxz
push
jb
and
fucomip
ljmp
jnp
out
repnz
mov
lds
inc
lret
sahf
shrl
aad
adc
adcb
lock
sbb
scas
adc
inc
loop
push
adc
es
cmp
bound
addb
dec
call
mov
or
fstl
jl
inc
test
dec
inc
jl
movsb
xchg
aaa
mov
loopne
loope
mov
faddp
lea
and
out
pop
pop
mov
or
in
inc
fsts
inc
mov
rorb
or
hlt
mov
pop
lock
sub
inc
xor
adc
jle
js
mov
mov
pop
jnp
push
scas
xor
cld
sbb
ret
jmp
cmpsl
push
xor
mov
xchg
cmp
pop
in
sub
pop
shll
mov
inc
rclb
jg
cmp
cmp
jl
sbb
pop
dec
jne
nop
fsubl
addr16
or
insb
push
push
loopne
jnp
inc
out
inc
and
lea
cmp
cld
mov
subb
andl
sbb
pop
into
in
daa
fwait
lods
imul
loopne
fistpll
sub
into
jo
aad
or
mov
push
mov
xor
lds
pop
insb
pop
sbb
in
bound
in
insb
adc
lock
pop
std
pop
cmp
dec
cltd
or
and
leave
aaa
inc
push
in
loop
inc
sbb
roll
in
fcmovnu
or
dec
lods
movsb
sub
aaa
jnp
int3
jne
inc
test
lea
mov
shlb
jg
lahf
js
lahf
and
shrl
adc
mov
je
inc
sbb
mov
or
fs
pop
xchg
ja
jp
nop
mov
jl
negb
pop
or
lock
ja
loope
push
in
dec
and
adc
fld
sub
in
ret
jmp
shl
lods
aas
in
or
dec
mov
ret
imul
and
sub
jo
aam
cmp
cmpsb
cltd
sarl
lods
push
xchg
ja
ljmp
xchg
rorb
jae
setne
pop
movsb
push
je
scas
out
out
jo
inc
mov
mov
std
xor
mov
push
iret
rcrl
test
lret
or
pusha
out
xchg
dec
jno
jno
push
pushf
popf
dec
ja
jbe
push
mov
jecxz
and
jo
mov
cmp
push
js
push
stc
sti
int
inc
cmc
fbld
mov
movsl
cld
addr16
push
cmp
xchg
loop
sbb
mov
addr16
cwtl
pop
int3
aaa
pop
lods
es
clc
inc
out
stc
xchg
fstps
or
inc
add
mov
roll
stos
dec
jle
mov
out
cs
int3
push
inc
push
mov
sub
inc
or
xchg
dec
inc
pop
jge
negl
adc
and
cwtl
inc
cmp
xchg
cmp
addr16
sbb
loopne
in
dec
dec
xchg
dec
int
mov
push
push
push
popf
add
divb
cli
imul
pushf
insb
faddl
scas
mov
rorl
in
orl
lret
pop
mov
mov
decb
cmp
shlb
les
cwtl
imul
out
inc
cmp
mov
test
lds
mull
test
rcr
lret
enter
add
cmp
cmp
out
cmc
jns
fcomip
mov
daa
lret
jns
out
xor
dec
dec
adc
push
outsl
xor
lock
mov
mov
mov
lods
dec
inc
cmp
inc
xor
pop
adc
or
inc
cmpsl
adc
js
mov
flds
add
cltd
popf
and
pop
lret
pop
and
mov
nop
or
popa
and
in
mov
mov
lahf
out
add
int
push
loop
xor
xchg
xchg
mov
jb
aas
js,pn
iret
insl
mov
adc
inc
or
mov
and
mov
insl
je
xor
fldl
add
pusha
xchg
stos
sar
or
adc
sub
aas
xchg
arpl
mov
fmull
out
mov
cmp
sub
add
cmp
mov
inc
loopne
xchg
lea
mov
std
pop
dec
mov
push
iret
mov
mov
lods
xchg
xlat
jecxz
jge
leave
mov
lret
das
gs
or
int
imul
shr
mov
clc
mov
cltd
loope
scas
xchg
daa
ss
ret
scas
cmc
xchg
lcall
dec
and
in
inc
mov
arpl
rcl
adc
ret
cmp
sbb
movsb
out
int
mov
in
mov
aad
xchg
test
lahf
aaa
sarl
cli
insb
jo
ret
cltd
sub
inc
leave
stos
push
pop
jle
ret
test
xchg
xchg
repz
push
jns
ret
jo
sbbb
nop
cmp
xor
xchg
test
inc
jbe
adc
dec
jp
icebp
push
or
xchg
pop
es
mov
loope
sbb
jb
push
cld
or
mov
aad
lret
clc
fwait
inc
fcmovbe
arpl
sbb
test
xchg
in
ret
subb
jmp
pop
mov
jmp
fldcw
popf
jnp
data16
shr
sub
iret
std
or
popa
in
xor
test
jno
add
hlt
add
in
or
fxch
xor
or
dec
and
pop
mov
pushf
sbb
leave
gs
xchg
mov
adc
add
insb
sbb
insb
adc
mov
pop
push
cmpsl
popf
mov
add
aad
fstpt
jb
inc
fistpl
popf
xor
arpl
or
outsl
aaa
sbb
jb
inc
fwait
and
dec
or
stos
jne
mov
lahf
inc
and
addb
std
mov
inc
cld
push
dec
cmpb
in
int3
cwtl
dec
inc
daa
xor
fucomi
mov
push
jb
clc
and
adc
pop
aam
pop
add
sub
inc
jecxz
mov
enter
scas
xchg
decl
lea
nop
pusha
scas
jle
outsb
push
mov
mov
and
push
mov
dec
push
cli
sbb
mov
pop
mov
roll
xchg
xor
dec
sub
and
hlt
adc
jns
popf
sub
imul
call
or
add
ss
or
inc
sti
cmp
jno,pt
xchg
adc
mov
sub
inc
scas
xchg
inc
cmp
loope
xchg
add
push
push
outsl
imul
lcall
hlt
inc
movsl
roll
add
push
ret
loope
aad
inc
les
and
adc
inc
fs
mov
pop
and
jle
cwtl
jno
loop
dec
push
pop
jne
xchg
sub
hlt
ljmp
cld
jp
pusha
dec
fidivrl
adc
pop
call
iret
dec
das
push
xor
scas
push
add
data16
jle
sbb
dec
sub
enter
fistpll
mull
repnz
mov
cli
mov
in
aam
sbb
scas
xchg
test
mov
mov
jne
sbb
cmc
movsl
in
mov
movsb
mov
outsb
sbb
push
sbb
cmp
out
ljmp
daa
xchg
sub
adc
imul
push
cli
outsl
insb
lods
lahf
adc
push
push
sub
xor
jns
mov
xor
dec
ds
cld
push
xchg
xchg
inc
xor
sbb
add
and
xchg
sar
in
xor
inc
dec
cmp
sbb
dec
mov
stc
cmpsl
inc
jecxz
or
ds
dec
and
jg
xchg
fistpl
cld
jl
jmp
add
push
bound
xor
cld
add
aam
js
xchg
jo
mov
and
adc
add
nop
lret
xchg
mov
cwtl
movsbl
add
lea
fidivl
pop
add
loope
out
push
cmpsl
xor
mov
aad
add
aaa
push
and
inc
add
cwtl
dec
pop
faddl
xor
cmp
jmp
jno
adcb
test
lock
filds
scas
loope
cli
cltd
stc
mov
out
movsb
cmp
int3
xchg
int3
jne
into
test
bswap
add
or
rcl
adc
add
inc
pop
mov
cmp
rcr
bound
sti
negb
dec
in
add
ffree
jo
idivl
je
popf
dec
pop
out
xor
cs
pop
cli
mov
inc
mov
orl
int3
mov
jmp
popa
gs
inc
cmp
or
jbe
outsb
sarb
fcmovnbe
cld
or
es
daa
sub
push
lahf
push
inc
push
int
popf
leave
pop
ljmp
fcmovnbe
subl
loope
mov
sub
jnp
mov
xchg
icebp
xchg
sbb
test
adc
xchg
dec
xchg
sbb
hlt
push
jmp
std
xor
sbb
out
aaa
and
clc
ja
inc
cmpsb
out
or
pop
neg
xchg
mov
scas
enter
in
mov
mov
and
into
push
add
pop
xor
mov
xor
mov
lock
dec
add
inc
addl
cltd
iret
push
adc
pop
add
lret
sbb
stos
clc
pop
aad
rclb
push
mov
pop
inc
inc
out
pusha
xchg
lods
jno
xchg
fs
dec
fs
jp
cvtps2pi
sti
adc
mov
popf
push
dec
dec
inc
jo
decl
fwait
lods
fnstsw
push
cmp
out
fnop
ret
cmpsl
ret
push
sub
jbe
lcall
xor
dec
xchg
sarb
cmp
lahf
sub
dec
sub
sub
push
lea
and
jl
add
fs
test
fwait
mov
mov
dec
shll
lret
jb
cmpsb
bound
pusha
mov
adc
test
xchg
xchg
fdiv
daa
test
aas
mov
mov
xchg
aas
add
jmp
bound
shr
sub
shlb
mov
push
aas
bound
xlat
into
hlt
jmp
bound
push
ret
cmp
and
push
inc
xchg
adc
push
add
rorl
pop
addl
aas
push
bound
push
mov
mov
dec
imul
xchg
lods
dec
mov
lcall
ljmp
mov
inc
insb
mov
xchg
xchg
xor
pop
adc
vxorpd
stos
pop
ret
mov
lods
sub
sti
push
hlt
cmp
outsl
jne
icebp
pop
js
test
cmpsl
xchg
aas
mov
arpl
xchg
jl
pop
aad
adc
dec
imul
inc
shlb
in
fisttps
mov
xchg
leave
mov
add
cwtl
and
push
jg
call
bound
out
or
ja
cmp
jle
aaa
js
out
outsb
out
jae
mov
jno
xchg
fidivrl
enter
and
hlt
jno
pushf
and
fisttps
dec
leave
lods
xchg
inc
imul
je
pop
repnz
adcb
into
push
imul
scas
mov
faddl
xchg
fwait
cmp
pop
cltd
fiadds
stc
ja
pop
dec
pop
lock
lods
ljmp
ds
xchg
jbe
xor
cld
dec
lret
inc
dec
mov
ficoms
popf
aas
daa
cli
cwtl
pushf
out
mov
sbb
mov
mov
fmull
pop
lea
push
fimull
inc
and
in
sbb
je
jg
mov
out
jno
adc
nop
lock
aaa
out
iret
pop
cli
cmp
into
sti
out
push
mov
jbe
fwait
jecxz
jge
push
movsb
sub
lahf
pop
mov
faddl
xchg
push
js
and
inc
popl
mov
mov
cmc
out
loop
daa
xor
shlb
outsb
clc
push
adc
push
imul
inc
popa
sbbl
rclb
mov
inc
sbb
mov
fsubrl
mov
fwait
mov
mov
adc
inc
imul
cmp
pop
xchg
movsl
mov
das
mov
movsb
loopne
inc
jle
xchg
fsubp
loopne
mov
jmp
sbb
rol
pop
cmp
pop
and
daa
push
jg
fcomps
cmp
or
imul
push
testb
inc
fwait
mov
shlb
dec
xor
icebp
lds
pop
lea
jp
movsl
lods
std
int
pop
dec
adc
mov
or
fwait
ljmp
jle
lds
jae
sbb
cwtl
lahf
mov
roll
mov
xlat
inc
sbbl
pop
jmp
xor
mov
adc
fsubs
inc
rcrb
mov
test
xchg
mov
adcb
cmpsl
stos
fdivr
ficoms
jo
jbe
xor
xor
ja
and
mov
movsb
imul
test
inc
and
or
cld
les
mov
sahf
jl
jo
cs
pop
f2xm1
jp
cmp
ljmp
movb
mov
lret
mov
into
mov
mov
xchg
xor
inc
mov
daa
add
add
and
dec
imul
mov
imul
faddl
je,pn
adc
les
sbb
push
les
flds
std
mov
les
sahf
push
xor
popf
ss
in
negb
add
enter
sbb
xchg
lcall
out
pop
inc
shll
or
sbb
ja
cmc
imul
repz
shlb
adc
mov
mov
pop
pusha
cltd
sbb
xlat
jne
sbb
ficompl
xchg
add
loopne
je
or
push
adc
out
and
loope
mov
inc
fld
xor
das
cli
or
sbb
mov
test
inc
jecxz
cmpsl
mov
xorl
popa
test
out
xchg
test
lods
lea
add
cmp
push
pop
adc
js
and
mov
xchg
lea
loop
in
ret
xchg
movsb
xchg
jae
and
inc
inc
out
ret
cmp
cs
cmp
xchg
adc
xchg
add
in
mov
or
push
mov
or
xchg
or
int3
and
xlat
lret
adcb
das
mov
dec
cmc
and
mov
lds
jno
js
cmp
sub
in
and
mov
out
sbb
lret
mov
lods
cmc
fadds
pop
jmp
cmp
adcb
dec
loopne
into
inc
add
mov
scas
pop
enter
pop
pop
mov
in
mov
stos
xchg
jl
out
push
pop
push
pop
pop
jl
aam
push
or
mov
cmp
xchg
pusha
adc
in
jmp
in
xchg
and
fidivs
popf
or
lahf
adc
pop
xchg
inc
iret
imul
add
mov
lods
cmc
dec
aad
enter
cwtl
stos
popf
mov
mov
pop
cli
inc
dec
repnz
mov
pop
into
iret
sbb
cmp
pop
movsb
adc
rclb
add
aam
scas
mov
dec
out
xlat
lods
stc
or
fwait
scas
cld
mov
scas
push
cmp
xchg
adcb
or
shll
out
mov
fidivrs
adc
push
bts
pop
shrb
xchg
push
je
xchg
mov
push
out
add
dec
mov
jno
scas
test
fcoml
cmpsb
sub
sub
pop
pop
pop
xchg
or
out
push
jmp
movsb
cmp
fimull
dec
lock
stc
out
xchg
adc
sbb
or
add
dec
fildll
cmp
and
lods
repnz
pop
notb
push
je
xchg
sub
ja
ljmp
je
cmp
xchg
popf
ds
xor
inc
call
jl
jno
add
fstps
mov
ret
out
test
add
pop
cmp
insl
dec
sbb
xor
lret
mull
xor
sub
sbb
inc
add
fcomps
or
aad
call
ret
xchg
push
loopne
dec
lods
xchg
daa
push
mov
pop
lea
std
es
fisttps
sub
sbb
cvtps2pi
daa
dec
jno
sarb
mov
or
dec
call
inc
or
sub
sahf
jge
or
and
movsw
movups
cmp
test
call
push
inc
outsb
dec
xlat
jle
sub
popa
fwait
mov
popf
xor
sub
and
mov
shr
scas
mov
stc
adc
sbb
fwait
push
call
cwtl
mov
adc
loope
push
adc
sub
push
jmp
add
jo
sub
or
sbb
sub
ljmp
cld
adc
or
fnstenv
mov
push
std
xor
ds
ljmp
or
int
pop
inc
leave
pop
pop
pop
fwait
push
pop
test
enter
jno
icebp
enter
cmp
dec
cmp
mov
shl
lods
cmp
data16
lods
inc
mov
inc
mov
orb
gs
cmp
fimull
fsubl
pop
stc
rorl
or
popf
push
jecxz
movsl
xorl
jl
arpl
iret
iret
hlt
pop
push
data16
or
enter
imul
clc
ljmp
imul
test
xchg
jo
push
int
and
repnz
pop
rorl
cmpsb
xor
cmpsl
data16
mov
out
jge
iret
sbb
insb
cmp
fists
pop
pop
pop
cwtl
and
mov
enter
cmc
sbb
sbb
jbe
cli
enter
mov
lcall
shll
cwtl
pop
movsb
jmp
or
pop
cltd
je
lahf
dec
or
call
pop
push
shll
testb
lret
imul
mov
shlb
mov
stos
mov
decb
insl
xchg
xor
inc
fbstp
ror
fs
roll
cmp
push
scas
scas
aaa
adc
sub
pusha
pop
adc
cmc
lret
gs
jecxz
cmc
dec
data16
out
mov
inc
add
sub
daa
add
notb
pop
inc
dec
movsl
mov
push
mov
mov
int3
sbb
xorl
jge
cmc
xchg
lea
ret
mov
mov
call
xchg
mov
or
inc
addps
jne
mov
push
fs
xchg
sti
mov
arpl
mov
repnz
dec
sbb
adc
sarl
mov
repz
aam
jle
cmp
xchg
in
xor
decb
push
jmp
pop
dec
out
loopne
lret
leave
mov
stc
mov
insb
push
int3
daa
stc
xor
mov
sbb
ret
cmc
fcmovnb
clc
adc
popf
fiaddl
mov
iret
dec
jecxz
pop
sahf
into
adc
aad
xchg
xlat
jbe
in
sahf
dec
sar
xor
out
out
gs
sub
lea
mov
mov
push
push
add
push
dec
xor
push
scas
xchg
fadd
mov
in
mov
cmpsb
add
jne
push
ret
or
push
and
pushw
sub
out
xchg
mov
movsb
xorb
aaa
sbb
mov
xchg
jg
dec
repnz
cmp
packuswb
mov
mov
nop
adc
pmulhuw
jns
and
mov
mov
cs
adc
test
nop
int
lret
aam
outsb
pop
in
repz
dec
jae
xchg
mov
adc
cld
cmp
cld
negb
arpl
pop
les
imul
pop
int
popa
scas
pop
xchg
add
push
mov
xchg
jbe
xchg
lahf
cmc
push
xchg
ss
mov
adc
add
push
jl
bnd
mov
and
rol
out
ret
mov
adc
adc
dec
dec
add
mov
adc
add
inc
repz
dec
sub
dec
xchg
das
xchg
and
add
cmpsb
push
into
inc
fisubl
pop
and
cs
filds
pop
pop
push
mov
cmp
rorl
out
push
mov
jae
mov
or
rcrb
cmc
test
mov
out
jg
scas
or
dec
xchg
std
or
push
push
decl
inc
outsl
or
data16
aad
test
mov
roll
dec
xor
lret
mov
pushf
mov
lods
test
mov
ds
ret
loopne
ret
fnstcw
xchg
mov
insl
cmp
scas
adc
xor
bound
bnd
aas
cld
or
sbb
dec
cld
jns
rorl
jmp
and
data16
push
xchg
jo
mov
adc
push
mov
add
push
jae
aad
push
lods
dec
inc
mov
stos
cmc
popa
imul
lds
and
xchg
bound
push
sbb
push
negb
shrb
int3
scas
and
ret
ret
mov
adc
ja
adc
jne
imul
cmp
je
insb
mov
lods
pop
cs
insb
in
ds
push
ror
addr16
notl
push
lret
dec
dec
addb
mov
jb
imul
push
in
inc
push
sbb
movsl
es
push
gs
testl
in
dec
mov
test
int3
jge
imul
cltd
xor
stos
fs
and
sub
cs
in
pop
fwait
dec
and
icebp
rclb
in
out
push
loop
mov
mov
inc
xchg
cmpsb
sbb
hlt
sbb
pop
inc
sarl
mov
mov
mov
and
inc
stos
add
cmp
xchg
les
mov
inc
decb
out
std
cmp
idivl
jns
lcall
jae
mov
mov
push
inc
xor
mov
in
inc
xchg
xchg
mov
rcr
je
inc
sub
mov
and
mov
mov
cwtl
movsl
add
ljmp
dec
fdivl
push
jecxz
and
push
movsb
fdiv
out
fidivs
fcmovbe
mov
or
jecxz
mov
loop
mov
mov
jg
cwtl
cltd
mov
into
pusha
cwtl
sti
out
xchg
into
xchg
repnz
test
jp
push
jns
mov
les
stos
adc
rclb
sbb
sbb
mov
push
ds
mov
shrl
pop
xchg
sarb
mov
ljmp
lods
movsl
shrb
addl
fildl
cmp
test
icebp
movsl
inc
jbe,pn
imul
jp
add
lahf
inc
bound
leave
mov
subb
mov
pop
or
xchg
addl
ljmp
test
arpl
dec
lahf
scas
into
jge
in
stc
mov
push
scas
cmpsl
aad
mov
push
icebp
mov
mov
sbb
cmp
nop
imul
cwtl
push
mov
ljmp
sub
pop
popl
push
icebp
dec
stos
imul
adc
push
cmp
enter
or
mov
sub
out
in
sub
push
add
dec
shlb
test
mov
test
lret
nop
jmp
mov
mov
xchg
shl
jmp
add
sub
jo
add
les
add
inc
in
pop
cld
dec
cmp
insl
push
jle
ja
pop
lret
enter
into
rorl
pop
scas
pop
push
les
mov
and
dec
movsl
inc
add
lahf
mov
or
fadds
shlb
adc
lret
fs
pop
add
pop
xchg
ror
jns
outsl
or
in
push
loopne
lret
jb
lds
icebp
sbb
ljmp
sub
jb
mov
int3
mov
addr16
sub
xchg
mov
cltd
xorb
int
sbb
push
lea
je
or
and
fwait
pop
ja
xor
sbb
jmp
add
xchg
dec
pop
push
scas
cld
pop
cmp
add
fimuls
dec
add
add
nop
or
repnz
fidivs
xor
lods
iret
int
outsb
test
add
fs
dec
les
fidivs
jp
insl
fstpt
outsl
inc
add
sub
iret
jp
add
movb
fcoml
sahf
fadd
inc
pop
inc
jno
rclb
adc
subl
cmpsb
cmp
loopne
pop
inc
fcomp
test
inc
ret
push
int
je
aam
lret
cmp
dec
adc
test
in
mov
push
imul
int3
dec
lods
into
mov
mov
out
ret
push
pusha
loope
mov
add
push
test
repz
mov
mov
cld
xchg
into
jle
test
xchg
in
or
xlat
test
stos
xor
push
add
lret
fiaddl
fwait
jl
mov
and
push
mov
andb
pop
pop
incl
and
inc
sbb
andl
lods
inc
pop
pop
and
jg
xchg
inc
pop
pushf
mov
pop
test
xchg
ja
sub
jbe
fisubl
daa
push
sbb
inc
cmp
rorb
adc
sar
or
gs
and
jne
insl
inc
stos
es
mov
into
push
fs
fadds
push
int3
inc
test
call
sbb
fstl
sub
scas
bnd
pop
orb
cld
dec
xchg
mov
add
je
adc
sub
push
cmp
jmp
jnp
int
sbb
vfnmsubps
leave
mov
mov
or
rcr
push
aaa
popa
adc
fmuls
xchg
sub
loop
mov
filds
inc
adc
pop
call
fists
adc
scas
adc
das
add
bound
std
out
sub
and
or
jne
pop
jmp
daa
ds
stos
mov
arpl
out
xor
cmpsb
pop
shrl
xchg
cmp
lret
in
jne
sub
movsl
xchg
mov
shlb
cmc
and
mov
xor
jo
jb
incb
popa
mov
pop
push
aam
insl
enter
push
movsl
insl
jmp
cmc
pushf
movsl
add
or
loope
pop
insb
add
arpl
xchg
aad
fnsave
inc
sub
mov
lods
mov
mov
sub
cmp
lea
cmpl
mov
je
sbb
mov
xchg
push
jmp
incb
testl
sbb
loopne
dec
push
inc
fidivrs
movsb
dec
mov
repz
mul
out
jle
stc
out
mov
pop
jle
xor
aas
js
fsubl
pop
sbb
mov
loop
js
scas
fidivrl
fcmovbe
mov
adc
push
cmp
pop
je
fldt
xchg
aam
fisubrl
scas
sar
cmp
shll
push
cwtl
stos
push
leave
sbb
inc
lcall
mov
insl
mov
lods
cmpsl
stos
jl
out
pushw
mov
pop
jmp
insb
leave
addr16
ficoml
mov
out
jns
xchg
bound
xchg
push
lods
xor
xchg
daa
in
repnz
loopne
loop
stc
sbb
mov
mov
aaa
push
cmp
ret
movsb
aam
sti
cld
lods
test
loope
or
cmp
ret
or
fcmove
jbe
shlb
insl
jecxz
aad
insl
push
aam
jg
pop
or
sbb
mov
sbb
das
sub
test
fsubrl
jge
cld
lahf
ja
dec
rcrl
mov
mov
or
rdtsc
pop
and
mov
mov
mov
pop
mov
xorb
hlt
pop
add
cmc
mov
and
aaa
push
jge
mov
movsb
sbb
pop
jmp
inc
mov
cmp
cltd
pop
es
mov
pop
pop
js
dec
adc
sbb
cmc
rcrl
mov
dec
sbb
ret
xchg
call
shrb
lea
insl
cmc
xchg
jmp
icebp
add
push
sbb
aas
sbb
inc
icebp
mov
ljmp
ds
mov
push
les
xor
or
imull
ljmp
pushf
gs
mov
sub
xchg
popa
lret
std
test
push
addr16
add
fistpll
pop
cmpsl
movsl
dec
ss
add
and
mov
lcall
xor
rcrb
mov
and
add
or
ret
sbb
leave
xor
mov
in
clc
jg
data16
leave
repnz
dec
dec
leave
cli
cmp
sbb
mov
and
aam
mov
dec
and
jne
dec
lret
mov
mov
and
cld
pop
or
push
or
xor
mov
outsl
gs
bound
test
mov
sbb
mov
inc
lcall
pop
cltd
shrb
leave
cli
xchg
mull
push
dec
fcoml
js
mov
popa
dec
dec
roll
xchg
sub
jne
out
mov
ja
xlat
and
xchg
cwtl
icebp
mov
lahf
cltd
or
push
pop
xchg
mov
inc
popa
cmpsb
jge
popf
out
pop
mov
inc
add
jecxz
mov
icebp
daa
pop
mov
fxam
out
cmpsl
loop
and
push
mov
icebp
xor
and
cmp
cmp
cmp
mov
out
inc
ja
cwtl
outsb
sbb
and
cmp
mov
in
mov
pop
rorl
dec
imul
enter
jecxz
cmp
hlt
lahf
sub
lahf
ret
out
enter
cmc
sbb
jecxz
sahf
and
mov
sub
jge
cld
jle
in
icebp
and
push
cmp
repz
xchg
jecxz
jnp
lcall
fnstcw
aad
cmp
movsb
jg
dec
pop
scas
push
sub
in
pop
arpl
jne
lea
dec
jp
fwait
add
ljmp
sbb
adc
add
scas
stc
imul
push
xlat
jno
mov
cmp
or
and
jbe
cmpsb
mov
pop
addr16
add
xor
movsl
mov
push
sti
or
inc
xchg
lcall
movsb
dec
std
dec
push
lret
pusha
inc
xchg
sbb
mov
ficoms
imul
in
mov
lret
push
repnz
div
pop
test
ret
push
ljmp
mov
xchg
jl
out
cmp
mov
pmaxub
stos
mov
adc
push
sbb
gs
jp
fwait
sub
fsubrl
inc
fnsave
jb
mov
pop
mov
pop
fnstcw
mov
inc
add
inc
fstps
push
fcmovnbe
mov
fsubs
lds
jp
es
cmp
dec
lea
movb
sahf
mov
jl
test
cld
imul
fcomps
or
cmp
and
dec
sub
sbb
or
jae
xor
xorb
pop
jg
mov
mov
jp
and
fisubrs
pop
rcl
jle
sub
xlat
cli
cmp
and
hlt
adc
push
pop
jl
or
adc
jmp
in
out
and
call
imul
fwait
stos
sbb
mov
fcmovne
subl
dec
mov
adc
pop
cli
cli
lcall
mov
push
or
push
lods
fcomps
sub
out
mov
lock
cmp
int
sub
test
lea
pushf
js
or
daa
daa
pop
out
js
pushf
dec
ret
test
mov
xor
jns
pop
repz
jns,pt
jg
mov
pop
xchg
insl
and
es
sbb
pop
sbb
out
inc
imul
arpl
push
adc
filds
and
jl
hlt
push
dec
fidivl
jns
int
xor
sub
fsubr
int
cmp
fstps
stos
test
fadd
int
jmp
xchg
mov
mov
adc
add
addps
push
cltd
mov
push
cli
xchg
hlt
xchg
pop
outsl
mov
cmp
aad
out
cmp
lds
push
loop
sbb
ret
mov
aad
movsl
adc
out
enter
sbb
lcall
imul
leave
or
ret
adc
pop
jmp
cmp
jae
outsw
scas
lods
fldcw
mov
jp
test
lret
jmp
sbb
or
cmp
adc
enter
test
sbb
jno
das
incl
fidivrs
gs
jnp
mov
xor
jnp
jb
enter
cmp
sarl
subb
xor
push
repnz
adc
stos
fwait
mov
mov
and
xchg
push
inc
xorl
lock
movsb
fwait
sbb
xchg
iret
push
pop
mov
adc
movsl
inc
ret
sub
push
data16
and
xlat
aaa
arpl
outsl
cmp
hlt
mov
xchg
inc
sbb
sbb
sub
ljmp
jecxz
cmpsl
adc
mov
decl
fstps
push
jb
mov
pushf
jae
mov
cmpsl
hlt
cmpsb
lahf
shrl
arpl
jbe
jp
dec
sub
and
xchg
cmp
sub
adc
ret
xor
lret
les
add
gs
xchg
adc
push
push
dec
in
test
iret
and
mov
enter
sbb
jp
pop
push
mov
sub
xor
rorb
aam
xor
mov
jbe
mov
xor
outsb
mov
add
jge
rclb
scas
mov
in
jecxz
mov
pop
pusha
cwtl
adc
fildll
and
add
jnp
stc
or
sub
add
imul
fsts
js
mov
inc
addr16
sbb
roll
dec
or
xchg
push
sarl
jns
mov
ja
xor
fildl
or
stos
fcomip
xchg
cld
pop
sti
insb
out
inc
push
arpl
dec
pop
aas
and
mov
pop
mov
or
xor
cmc
mov
dec
push
push
mov
adc
out
movsl
out
jo
ss
in
ds
bound
push
in
in
and
adc
dec
dec
lods
push
dec
aaa
leave
dec
mov
xor
mov
mov
mov
js
cmp
iret
pusha
jmp
outsb
les
jp
jnp
sbb
roll
das
stc
mov
aaa
xor
int
and
and
sbb
adc
fisttps
lret
fcompl
cmp
pushf
mov
mov
outsl
js
mov
jmp
test
adc
je
mov
adc
add
push
arpl
sbbl
mov
mov
scas
das
daa
sbb
jnp
aad
mov
rcll
pop
loopne
je
sarl
icebp
ficomps
fs
stos
testl
out
jne
loope
pushf
xchg
lock
xchg
aad
popf
fcompl
repnz
inc
stos
or
cmpsl
and
xchg
into
stos
cmc
mov
iret
insb
bound
shrl
outsl
jp
and
dec
or
xor
cmp
mov
inc
jnp
sub
xchg
fs
jmp
imul
test
adc
adc
xchg
pop
outsl
sub
xor
outsb
push
add
xor
sub
cmp
xorl
imul
popa
cwtl
mov
hlt
add
and
sahf
mov
dec
repz
mov
mov
xchg
je
push
clc
ds
aad
adc
add
jg
in
imul
push
hlt
fbld
icebp
int3
bound
sub
or
les
cwtl
cmp
adc
sbb
xlat
xchg
test
adc
jle
out
mov
push
adc
adc
cmc
xchg
sub
movsl
sub
outsl
push
sti
rcr
rcl
cmc
addr16
jo
or
rep
js
int
add
pop
fbld
js
jb
cld
ds
push
pusha
dec
out
add
xchg
sub
push
icebp
dec
in
vpsubusw
xchg
mov
push
stc
inc
sub
stos
out
movsl
pop
cmc
insb
hlt
iret
inc
pushf
neg
xchg
sarl
aad
ja
dec
sbb
rclb
jecxz
cltd
ds
in
adc
dec
adc
jecxz
or
dec
inc
sub
jb
cmpsl
ror
xchg
mov
or
ret
cmp
popa
aad
mov
out
shll
das
in
cs
in
lods
and
add
and
pusha
or
xchg
mov
push
lods
inc
push
xchg
inc
dec
out
outsb
adc
cmp
xor
idivb
inc
js
out
push
mov
popa
cli
xor
lods
loope
dec
andb
popa
cld
leave
fstps
push
jbe
sti
out
inc
jl
fcoml
and
fwait
leave
imul
cli
insl
push
mov
jb
ljmp
dec
or
fmull
mov
xor
xchg
js
jb
out
cltd
jp
push
jge
mov
shlb
mov
xchg
test
and
js
data16
adc
dec
mov
jge
insl
dec
bound
popf
dec
aas
leave
movsb
mov
cmp
jo
inc
mov
aad
or
aad
imul
mov
dec
xchg
dec
std
test
pop
scas
rcr
stos
and
mov
fnstenv
lahf
repz
out
clc
cmp
jp
aam
pop
push
dec
cli
or
mov
loop
xchg
lds
outsl
daa
je
sub
add
mov
lcall
cmpsb
andb
je
mov
js
and
fndisi(8087
cmpsb
outsb
pop
sahf
idivl
adc
sub
push
mov
aaa
aad
adc
imul
sub
rolb
xchg
add
outsb
adc
mov
mov
push
sar
fwait
inc
adc
mov
imul
cmpsl
in
loopne
aaa
jb
mov
mov
aam
icebp
pushf
cli
enter
inc
xchg
sub
movsl
rorl
mov
pop
sub
movsb
xchg
jmp
pop
test
pop
push
cmc
mov
xchg
fists
xchg
sahf
je
jae
jmp
and
mov
pop
jne
pop
jo
shlb
inc
mov
out
add
pop
xor
xchg
psubb
xor
into
sti
xor
cwtl
hlt
in
and
jl
popaw
out
pop
xchg
xlat
ret
test
xlat
pop
mov
stos
mov
lods
push
das
xor
adc
inc
inc
cltd
fsubs
pop
cmp
cmpsl
ljmp
xor
dec
jmp
add
ja
jno
idivb
mov
pop
and
icebp
push
jae
ja
lea
and
sbb
push
and
adc
pop
cmovge
jmp
push
les
fistl
jne
and
push
lcall
inc
push
jle
insl
mov
clc
mov
fldpi
inc
mov
mov
xchg
dec
fsub
pusha
mov
cmpl
adc
jns
sbb
dec
nop
inc
movsb
leave
inc
cmp
aaa
push
cmpsb
and
shlb
add
stos
lret
push
lret
sbb
pop
fcmovnb
scas
push
mov
cmp
jmp
js
lret
les
pop
mov
and
xchg
jo
dec
inc
aad
into
insl
xchg
jmp
mov
es
aaa
xor
mov
jecxz
fwait
test
aad
lea
jmp
scas
out
pop
ret
mov
jno
cwtl
iret
cmp
ret
out
dec
inc
lret
fiaddl
pop
adc
dec
push
rcrb
push
dec
pop
ret
mov
xchg
mov
cs
add
xor
cmpsl
xchg
daa
shll
mov
in
or
stos
outsl
test
loop
punpckhwd
or
hlt
ret
mov
sar
or
adc
dec
jns
jle
mov
jnp
lahf
lret
sbb
cli
push
inc
mov
and
lcall
mov
push
mov
lahf
lods
mov
mov
pop
scas
push
cs
mov
mov
and
jo
je
cwtl
out
scas
sub
cmp
cmpsb
sarl
inc
add
xchg
ficomps
dec
sbb
dec
loopne
leave
push
xorl
xchg
sub
add
ljmp
out
lds
imul
or
add
fidivrl
imul
aam
out
les
int
push
icebp
jno
outsl
cmpl
add
mov
data16
cmp
into
add
testb
insl
push
mov
aam
arpl
pop
aam
dec
cmp
inc
loope
mov
inc
xchg
pop
inc
pop
notl
push
jg
xchg
pushf
out
cld
loopne
jg
aaa
pop
inc
mov
xchg
mov
cwtl
fsts
sbb
push
xchg
sbb
mov
test
int
push
mov
loope
fsts
scas
sbb
test
jl
into
lea
mov
or
push
call
mov
out
fs
xchg
cli
lea
push
fisubrs
push
cli
rcrl
je
sbb
pop
xlat
leave
dec
cwtl
scas
and
jne
xorl
push
cmp
jl
call
push
mov
and
push
sbb
lahf
adc
mov
dec
mov
sub
xchg
out
aam
xlat
mov
push
inc
inc
fisttps
or
sub
pop
out
cwtl
fadds
test
add
jge
push
or
mov
dec
add
lret
mov
gs
cmpsb
ja
jb
sbb
lret
ja
mov
mov
fsubrl
rclb
fldt
shl
fists
rcll
clc
test
movl
popf
pop
rcl
cmp
iret
loopne
leave
cwtl
cmp
mov
dec
push
or
jbe
pop
add
out
jbe
fs
clc
mov
push
pop
dec
dec
inc
xor
iret
mov
mov
dec
loope
xor
dec
filds
in
movsb
push
xor
push
mov
lcall
sbb
cmp
rolb
mov
mov
mov
mov
cmpsb
adc
pop
inc
sbb
push
aam
mov
bound
adc
test
sbb
xor
xchg
or
and
xor
lods
jmp
cmpsl
and
add
aam
pop
cmc
nop
push
ja
pushf
cmc
dec
rcl
xchg
jb
dec
lods
lret
cmpsl
sub
cmpsl
lret
fadd
add
loop
dec
dec
mov
jmp
sbb
hlt
mov
lds
sbb
lahf
imul
imul
push
ret
add
add
sub
lret
mov
fisttpl
int3
bound
xchg
pop
mov
int
cmp
outsl
cmpsl
bound
lcall
mov
lods
sbb
xchg
push
mov
mov
push
dec
sub
mov
lods
scas
pop
dec
cld
aas
test
cmc
fwait
push
xchg
nop
scas
ficoml
xor
sub
sub
je
mov
pushf
clc
add
sbb
xchg
scas
out
lcall
daa
fs
out
js
jo
pop
hlt
popf
push
sub
pop
cmp
jne
adc
dec
inc
fcoml
std
jbe
mov
outsl
sub
imul
dec
push
cmc
cmp
inc
rorb
xchg
xchg
imul
cmp
sbb
sbb
xor
daa
ss
js
pop
jge
lret
stos
push
push
pop
jnp
dec
pop
cltd
fmuls
sbb
insb
cs
mov
mov
add
pusha
sahf
cmp
je
gs
inc
push
clc
ja
xchg
andl
add
cmpsl
dec
mov
std
loop
xor
and
adc
negl
jns
out
lcall
out
cwtl
repnz
mov
jle
lcall
add
fldenv
das
jo
insb
sub
mov
pop
pop
fucomp
pop
orb
pop
mov
pusha
lock
rcl
addl
xorl
xor
pop
rcrb
push
enter
mov
fs
lock
lret
fwait
incb
rcl
imul
push
ljmp
jne
and
or
hlt
repnz
inc
inc
repz
dec
xchg
push
loopne
loopne
lods
mov
inc
and
mov
rcll
mov
push
xchg
into
pop
xor
lods
pop
fs
xorb
sub
outsb
outsb
out
aam
xchg
and
cmp
repz
into
inc
out
rorl
mov
je
iret
cltd
sbb
pop
cmp
mov
push
inc
push
cmp
adc
das
arpl
xlat
inc
rcr
mov
pop
mov
cmp
add
mov
fimull
test
mov
xchg
nop
lahf
addb
aam
add
mov
push
int3
add
cwtl
data16
dec
loope
adc
push
dec
push
push
stos
int3
jle
out
outsb
scas
push
dec
xchg
xor
stos
inc
enter
add
fldl
or
mov
sub
mov
or
inc
cmp
sahf
rol
stos
xchg
xor
sbb
ds
lcall
add
lods
fmull
sbb
test
bnd
lcall
ds
jp
sbb
loopne
cmp
dec
and
lea
in
lods
sub
adc
xor
loope
push
pop
ds
sbb
mov
jl
sub
ja
mov
fmull
cmp
pushf
rcll
jbe
sub
mov
jae
push
mov
rcrl
adc
int3
das
xor
inc
ss
lods
mov
ss
add
pusha
imul
push
js
jmp
mov
dec
xchg
jle
icebp
mov
mov
jb
push
fcomip
mov
jae
mov
je
sbbb
lods
cmp
fwait
loopne
lds
outsb
pushf
lret
lock
or
push
jmp
cmpsb
imul
inc
inc
out
lret
bswap
sbb
movsb
jns
xchg
adc
xlat
sti
out
xchg
shlb
sbb
lods
fcompl
ja
mov
mov
out
or
jno
out
fstpl
push
loopne
pminsw
fwait
aas
insb
jmp
mov
ret
cmpsl
cmp
push
nop
repnz
jns
mov
jecxz
rcr
xchg
and
lock
ss
push
mov
arpl
ficoml
out
cmp
int3
mov
in
out
test
jmp
jne
fwait
loop
std
xchg
and
fmul
sbb
push
int
sub
jae
sbb
movl
inc
lds
add
jge
pop
add
int3
jo
sub
outsb
xchg
inc
lods
repnz
mov
cmp
mov
frstor
fcomi
adc
inc
mov
pop
mov
pop
mov
lods
add
in
test
jle
mov
test
jno
in
sbb
push
sahf
outsl
loop
add
inc
cmp
mov
mov
inc
fwait
and
in
sub
ja
mov
je
mov
cmpb
jbe
and
dec
sub
xor
in
popa
mov
pop
sbb
mov
into
mov
push
dec
aas
fisttpll
xchg
lods
lock
or
cmp
std
cwtl
aaa
mov
lods
repnz
or
mov
ss
mov
fstps
jg
mov
jmp
push
xor
adc
sbb
fcomps
push
pusha
mov
dec
outsb
insl
cld
mov
sub
cmpsb
push
scas
mov
subl
repz
mov
sbb
mov
stc
mov
xchg
movsb
arpl
mov
pop
cmp
pop
daa
xchg
xchg
push
pop
cltd
pusha
shlb
cmpsl
jo
sub
pcmpeqd
insl
or
ret
ficoml
mov
xor
or
fcomp
movsl
mov
push
add
cmp
cmp
xchg
or
sbb
or
jg
mov
cld
pop
sysret
je
push
mov
adc
pop
out
scas
cmp
fbld
sarb
stos
ss
nop
js
loope
jl
add
xchg
push
cli
fpatan
or
inc
jp
xchg
adc
add
jb
add
fmuls
cmp
adc
out
cmp
mov
fldenv
out
rolb
pop
adc
mov
call
decb
fisttps
sbbb
int
pop
and
cmp
xchg
jge
inc
mov
icebp
mov
and
aaa
sub
das
mov
lret
cmpsl
mov
adc
sbb
out
push
xlat
addr16
dec
adc
cmp
les
and
inc
xchg
sub
repnz
mov
dec
cld
aaa
dec
aam
dec
mov
mov
inc
lret
mov
push
pushf
jp
mull
sub
or
xorl
sub
imulb
or
dec
popf
xor
xchg
daa
mov
pop
jno
neg
jb
pop
adc
and
nop
bound
xchg
adc
inc
jle
and
mov
ret
jl
adc
and
jno
mov
push
pmaxsw
imul
mov
outsb
call
js
dec
mov
sbb
dec
push
ret
mov
jbe
dec
lods
in
es
jl
cmp
lret
push
aas
xchg
cs
add
out
add
jae
xor
inc
icebp
or
and
scas
mov
aaa
shll
dec
dec
and
popa
push
xor
mov
inc
leave
mov
testl
dec
cmp
cmp
in
adc
in
popf
xchg
sti
icebp
xor
jne
ret
loop
cmpb
xor
shrl
and
mov
or
jl
cmpl
in
movsb
ja
fimull
clc
call
push
add
inc
jl
xor
fldcw
mov
pop
sbb
push
sbb
mov
dec
rorb
jnp
sbb
mov
dec
ja
lds
arpl
sub
jp
inc
in
test
jne
and
jl
push
sbbb
in
rcll
scas
cmp
cltd
imul
lret
lret
test
loop
sub
lods
pop
mov
pop
xor
imul
outsl
inc
jmp
outsb
mov
mov
inc
sub
mov
xchg
addr16
xor
xchg
mov
addb
add
or
push
pop
sbb
popa
inc
cld
sub
xor
out
cltd
pop
jp
shll
jns
mov
xchg
jge
xchg
mov
hlt
sub
fisubrl
je
inc
fsubr
dec
outsl
mov
int
xor
icebp
push
addr16
sub
push
jmp
adc
in
xchg
pushl
out
out
aas
outsl
clc
mov
lock
test
cli
imul
inc
dec
push
or
or
pop
sbb
enter
test
movsb
cltd
dec
or
outsl
enter
ljmp
subl
sub
mov
mov
ficoms
mov
bound
call
add
adc
ret
push
scas
cld
or
and
int
lcall
mov
fidivrl
xchg
inc
jno
add
add
shrl
xor
adc
cmpsb
and
sbb
mov
andb
add
pop
imul
fdiv
fiadds
pop
sbb
pop
dec
inc
mov
adc
or
dec
sub
inc
jnp
fiadds
adcl
adc
int3
rorl
mov
mov
popa
add
cltd
mov
rorl
jmp
ficomps
mov
mov
jecxz
shll
xor
inc
ret
out
test
add
mov
cmpsl
jmp
inc
lret
jmp
adc
clc
ret
pop
sub
xor
add
shl
sti
sbb
pop
xor
pop
jp
imul
jecxz
incl
fdivr
mov
mov
cmp
and
jmp
stos
and
shr
push
ljmp
add
bound
out
mov
es
inc
aas
xor
insl
sub
into
dec
je
push
jmp
dec
pop
ss
loop
or
lret
add
int
mov
out
sti
jecxz
pop
dec
jbe
sbb
popf
scas
shr
inc
fbld
ret
jbe
pop
inc
sub
imul
and
xor
and
dec
sbb
ret
enter
jne
lock
sbb
fwait
sbb
xchg
inc
test
push
lods
jb
loop
add
loope
pop
pop
fs
jge
xor
mov
xlat
movsb
mov
out
jno
mov
fcomp
popa
lcall
testb
into
jecxz
jge
cmp
mov
and
add
mov
sub
push
pop
push
test
scas
ss
add
and
mov
fsts
xchg
inc
ficoml
dec
fs
adc
mov
or
push
insl
imul
mov
add
enter
sbb
push
mov
out
mov
stos
fldl
add
aad
dec
pop
dec
cld
cmc
fdivs
or
sbb
out
mull
fists
or
mov
and
or
add
nop
add
mov
mov
jle
mov
cmp
or
rcrl
cmpsb
test
iret
cli
insb
lods
nop
pop
push
test
or
ret
xor
addr16
inc
push
in
lods
jbe
add
mov
bound
push
leave
and
inc
out
test
int3
inc
loopne
lock
cmp
popfw
adc
sbb
loop
repz
out
sub
jl
ljmp
fistps
add
adc
test
adc
jbe
loopne
inc
and
xor
out
jnp
dec
mov
std
aaa
dec
stc
pop
call
adc
ljmp
add
mov
jle
sbb
push
jp
mov
notl
fisubrl
pop
fidivrs
scas
aad
or
jge
mov
xor
jmp
stos
push
imul
sahf
out
ret
dec
hlt
rcrl
mov
data16
mov
sarl
or
dec
insb
mov
sub
repnz
cmc
iret
inc
add
jg
mov
out
adc
mov
test
inc
rclb
inc
or
lcall
ds
lods
sbbl
add
add
insb
push
adc
xor
mov
or
mov
mov
jnp
sbb
clc
mov
shl
push
out
inc
pop
rcll
mov
mov
mov
and
jb
fwait
dec
sahf
data16
stos
rol
mov
outsb
cld
push
or
movsb
or
fcom
int3
je
das
add
gs
leave
fsubrl
sbb
push
mov
pop
out
out
into
sbb
add
pop
or
mov
sub
leave
push
arpl
ja
or
scas
mov
or
add
cmp
push
fmull
jno
pop
fnstsw
sub
mov
jne
mov
jle
orb
add
sbb
ds
mov
daa
out
mov
inc
xchg
adc
inc
xor
sub
dec
fstpt
into
gs
mov
push
jge
addl
fwait
repnz
inc
dec
leave
dec
loope
xchg
es
dec
pop
sbb
stc
mov
and
xlat
rcll
aad
mov
add
jbe
and
cmpsl
movb
xor
xchg
or
jb
mov
clc
movsb
cmp
addl
xchg
mov
push
or
nop
push
pop
lahf
sbb
in
inc
jmp
jno
insb
gs
push
aad
gs
xchg
add
cmpsl
cltd
ds
sub
inc
aas
ror
xchg
mov
mov
xor
mov
jle
jne
divl
bound
into
or
mov
jg
mov
sbb
idiv
and
mov
or
jnp
std
fdivl
fdivrs
jae
pushf
sub
imul
add
cmp
mov
mov
and
dec
outsl
sbb
sub
dec
ss
repnz
push
addr16
inc
cld
test
dec
sub
in
cld
mov
std
xchg
loopne
in
cmpsl
loopne
mov
cmp
jg
std
sub
pop
nop
cmp
mov
and
dec
in
xor
xchg
das
movsb
sub
movsl
jle
cmc
cld
test
sub
or
sub
jbe
adc
aas
ficoms
lret
mov
mov
inc
xchg
mov
clc
cli
popa
fidivl
lea
std
and
cli
mov
cmp
mov
lods
mov
sbb
or
sub
dec
xchg
dec
lea
add
scas
sahf
inc
test
stos
imul
cs
add
jmp
repnz
dec
xor
daa
mov
icebp
inc
gs
xchg
adc
add
gs
gs
cli
cmp
ret
pop
sbb
mov
inc
adc
and
lret
pop
out
or
sbb
cmp
add
pop
movsl
and
push
mov
adc
push
inc
dec
ljmp
push
sbb
bound
mov
addb
and
std
cmpl
ds
fwait
sub
push
mov
iret
mov
fs
mov
hlt
dec
out
and
xchg
xchg
and
adc
movsb
popa
dec
cmp
sub
cmc
movsb
sti
lret
jnp
test
pushl
cmp
inc
movsb
inc
out
dec
rorl
xchg
rcrb
push
cmp
mov
icebp
cld
test
xchg
push
scas
inc
jno
add
jcxz
popf
inc
adc
push
iret
cltd
aad
in
das
or
mov
xchg
daa
jecxz
and
mov
in
nop
sbb
out
push
xchg
icebp
xor
and
in
jne
arpl
inc
mov
sbb
sub
std
pop
scas
sub
in
or
push
pusha
jle
sbb
lock
nop
and
lret
sbb
enter
les
mov
jo
adc
arpl
imul
pop
mov
je
push
mov
shrb
mov
test
lcall
sbb
mov
jge
iret
gs
add
mov
push
mov
push
icebp
enter
lods
and
adc
mov
dec
add
sub
pop
in
or
xchg
imul
pop
popf
pop
leavew
jl
adcb
push
fdivrs
mov
jmp
xor
xchg
push
aad
lret
mov
lods
daa
xor
fildll
cmpsb
fidivrl
or
jno
dec
mov
std
shll
jo
and
mov
pusha
rcrb
es
aad
pop
andl
pop
cmpsb
sbbb
in
fwait
popa
int3
inc
pop
xchg
mov
inc
sbb
es
and
mov
mov
adc
mov
push
jg
cmp
das
sbb
pop
inc
pop
push
loop
sbb
adc
sarl
push
stos
mov
push
subb
mov
ljmp
insl
jno
xchg
nop
out
dec
testb
iret
out
adc
lret
arpl
test
sub
push
in
dec
mov
sub
xor
cmp
inc
iret
xchg
mov
mov
adc
mov
in
push
fmuls
imul
adc
test
mov
mov
push
imul
or
popf
icebp
sahf
jg
aam
std
into
cld
mov
scas
push
icebp
push
js
aad
lods
pop
jb
and
cmp
sub
stc
mov
daa
jmp
xchg
fidivrs
pause
pop
cmpsb
add
adc
or
into
dec
xor
in
mov
or
rcrl
cmp
ret
xchg
ds
jae
xor
lods
out
dec
add
addr16
aad
xchg
jmp
dec
jg
test
ss
mov
fidivrs
sub
into
call
push
inc
jno
mov
das
inc
dec
stos
aad
inc
xchg
dec
xchg
jno
inc
je
hlt
cmc
add
fists
push
jae
adc
ror
insl
mov
mov
cltd
cltd
mov
inc
ljmp
sbb
fcmovnbe
mov
stc
jp
lret
in
jbe
sub
cmpsb
xchg
mov
clc
aaa
mov
cltd
in
icebp
adc
jmp
mov
neg
loopne
test
in
lret
mov
stc
mov
cmp
push
mov
ret
pop
push
test
scas
sarl
lahf
pushf
rol
scas
pop
xor
sarb
clc
cmpsl
icebp
mov
mov
mov
jb
enter
inc
bound
cli
mov
dec
clc
imul
leave
stc
cmp
mov
aad
pop
in
lods
dec
mov
add
repnz
mov
fidivl
stc
lret
inc
int
hlt
add
cld
pop
push
and
cmpsb
incl
out
dec
inc
dec
jns
or
sarl
and
cmp
jp
test
insl
cmp
jle
outsb
leave
mov
stos
aas
mov
sub
les
movsbl
push
std
mov
pushf
insb
or
shlb
dec
adc
lcall
shlb
lods
jp
cmp
xchg
push
sub
push
mov
decb
sbb
roll
sarl
mov
pop
pop
or
popf
sbb
push
adc
and
mov
lcall
lods
xor
cmp
cmp
inc
stos
cs
inc
arpl
repz
ret
inc
xlat
sub
lds
cmp
jns
rcr
stos
shrl
push
xchg
std
or
cmpl
pushw
inc
push
jns
adc
mov
clc
and
jg
sbb
addb
add
mov
and
leave
mov
push
add
lahf
push
mov
in
xchg
mov
bound
cmp
jbe
sub
ds
mov
cmp
dec
mov
in
adc
add
int3
xor
dec
push
leave
shrb
pop
fs
dec
dec
mov
nop
out
data16
xor
jecxz
or
dec
cmc
push
add
or
ljmp
push
stos
sub
push
repnz
add
or
mov
into
lea
loop
lea
mov
add
in
mov
mov
das
push
and
icebp
fistps
xchg
addb
imul
stos
ss
fisttpll
jbe
fs
in
das
imul
xchg
cmp
mov
xor
lods
add
inc
adc
xor
xor
rcl
enter
inc
stos
call
jnp
faddl
stos
or
fisttpl
imul
adc
fsubrl
ja
cwtl
or
mov
jl
xor
bound
xchg
out
mov
mov
add
in
outsl
repnz
jge
fadds
ds
jns
jmp
push
mov
mov
xchg
adc
jno
inc
and
xchg
data16
lcall
pop
mov
adcl
sbb
and
lea
mov
lret
jmp
repnz
adc
ficoms
mov
sbb
and
sbb
js
push
dec
imulb
push
es
pop
xchg
mov
mov
pop
mov
les
sub
jno
mov
addb
jno
add
xchg
push
jo
imul
jmp
and
jns
imul
lock
sbb
xor
push
xchg
lods
or
inc
xlat
lret
out
xor
sar
sbb
dec
jb
cmc
mov
jns
loope
mov
mov
dec
mov
rcrb
inc
mov
adc
lods
fdivs
jl
pop
je
pop
and
mov
adc
push
dec
inc
dec
xor
fsubrs
add
sub
in
add
or
pop
jne
ss
shr
mov
mov
jo
jne
es
movsb
pop
jl
std
mov
sbb
mov
fs
jb
popa
mov
push
or
pop
aas
mov
mov
mov
mov
jl
jae
popf
stos
mov
dec
push
xor
sub
shl
add
nop
dec
aaa
cmp
dec
js
aam
jge
lock
xchg
into
sbb
das
inc
mov
fists
fcmovnb
stos
outsb
orb
and
gs
xor
xor
scas
into
fcmovnbe
scas
fwait
inc
push
dec
es
lret
cmp
leave
pusha
loopne
scas
les
push
sbb
mov
push
adc
gs
mov
out
in
gs
loopne
dec
pop
icebp
sbb
call
pushf
das
dec
dec
idivl
cwtl
mov
xchg
rcr
push
pop
repz
movsb
push
or
pop
push
sbb
sub
test
fistl
mov
loope
addr16
andl
cmp
push
mov
or
push
lret
cmpsl
add
mov
lcall
rcr
int3
loope
mov
gs
out
pushf
adc
add
xor
jmp
mov
sub
push
negl
push
adc
adc
mov
cmp
movsl
std
imul
int3
addr16
adc
jmp
mov
push
and
out
enter
xor
jle
pop
sbb
mov
stos
cmp
jb
sbb
push
mov
and
mov
out
pop
add
movsb
test
dec
imul
aas
or
sub
xor
pop
mov
scas
xor
mov
aaa
sbb
sbb
testb
pop
lock
push
repnz
and
xchg
xor
loopne
or
test
jne
jbe
out
les
or
daa
scas
in
adc
cmp
aad
in
testb
xchg
xchg
push
push
cmc
cmp
push
data16
sahf
fwait
mov
pop
sbb
out
lds
dec
mov
cs
jns
ds
jne
mov
adc
test
incl
movsb
xor
jecxz
adc
pop
insb
and
insb
sub
shlb
mov
sbb
stos
cmp
or
fildll
or
sbb
pusha
ficompl
sbbb
mov
test
add
xchg
pop
mov
scas
lock
pushf
popa
in
add
call
das
pop
test
xchg
inc
movsl
lahf
or
gs
cmp
das
comiss
pop
ljmp
fisttpll
pop
imul
pop
mov
mov
leave
out
xchg
enter
faddp
jmp
jl
scas
dec
xchg
cmp
repnz
push
inc
decl
push
stc
call
xchg
shll
add
and
dec
inc
cltd
mov
daa
push
xchg
call
lods
stos
adc
fdivs
mov
sar
dec
sbb
cmove
lds
sbb
jbe
xchg
jb
icebp
jbe
bound
inc
and
sti
testb
fsubr
push
sub
sbb
xlat
jp
shrb
loop
hlt
pop
loop
jb
and
jns
mov
mov
loope
push
mov
fmull
in
cli
xchg
sbb
sbb
mov
scas
fxch
pusha
std
fwait
cmp
dec
xor
push
jae
push
jnp
or
push
outsl
rcl
cwtl
push
and
cmp
stos
test
pop
xchg
sbb
sti
inc
loope
aaa
jle
pop
ds
pop
jp
dec
scas
lahf
test
sub
mov
in
or
nop
xor
jbe
adc
test
aad
iret
pop
or
dec
movhps
pusha
stos
aam
sub
push
cld
clc
cwtl
add
add
xor
arpl
stos
test
scas
xchg
stos
cwtl
loope
add
adc
aaa
pop
mov
add
mov
xchg
jecxz
pop
adc
inc
or
fidivrl
cmpsb
jge
xor
jb
scas
bound
gs
sbb
cmpxchg
inc
bound
mov
or
mov
das
inc
pop
mov
sahf
icebp
xchg
add
sbbb
enter
std
ror
sar
faddl
shlb
or
pop
dec
pop
bnd
je
jl
adc
xchg
mov
fbstp
addb
push
fwait
xchg
push
orb
inc
pop
or
hlt
in
not
stc
push
out
popa
enter
ss
add
int
dec
fisubl
pop
stc
sbb
daa
add
pop
or
lock
cltd
ljmp
out
test
cmp
xor
sub
dec
dec
mov
leave
imul
add
iret
outsl
inc
fwait
repnz
das
add
out
enter
pop
jae
ss
sarb
mov
scas
popf
int3
xor
mov
sub
pop
aaa
dec
mov
and
in
xchg
ret
mov
sahf
notl
int
xor
rclb
in
test
adc
xchg
into
pop
mov
popf
lahf
cli
cmp
sub
std
xchg
adc
pop
jns
cmpsl
and
outsl
pop
jnp
and
pop
push
inc
add
sarl
pop
mov
cmp
and
outsb
mov
out
into
inc
mov
sbb
rorb
fcompl
aam
cmp
or
inc
or
pop
mov
xchg
inc
cmp
mov
sahf
add
jo
push
mov
xlat
sub
mov
lcall
fimuls
fs
or
xor
bound
add
xchg
dec
sarl
icebp
xchg
scas
xchg
xor
adc
gs
je
lret
jg
cmp
add
xchg
jge
dec
and
into
jne
xchg
or
sti
js
add
adc
hlt
divl
adc
sub
adc
mov
movsb
ret
jne
dec
shrb
sbbl
push
pop
push
addl
test
je
insl
ja
fildl
je
fcoml
jmp
pushf
inc
mov
in
or
js
fistpl
and
pusha
sbb
jp
je
jns
fistpl
mov
out
xor
pop
scas
lds
jno
ret
jmp
jb
lods
mov
rcrb
lock
fsubrs
jo
mov
xchg
pop
cmp
sub
test
push
outsb
lods
loopne
pushf
ss
gs
clc
push
xor
rcrb
xchg
aas
add
cmp
js
and
outsb
leave
hlt
mov
push
mov
pop
stos
pop
mov
mov
inc
xor
mov
xchg
dec
ret
sub
jno
push
test
jg
inc
add
pop
push
fistpl
notb
mov
push
test
add
pop
and
lret
inc
dec
loop
ljmp
pop
sub
rcr
adc
into
cmp
dec
push
xor
out
mov
and
xor
adc
inc
mov
mov
mov
rol
repz
loopne
lahf
pop
inc
sahf
stos
adc
or
xchg
or
dec
pop
loop
cmp
bound
cmp
pop
and
scas
adc
pusha
lock
addr16
das
mov
outsl
push
sbb
push
ljmp
mov
mov
jbe
pop
rclb
ffreep
int3
jmp
and
push
std
or
fnstcw
fdivrp
mov
dec
push
outsb
push
adc
sti
rcl
hlt
pop
mov
daa
aas
fildl
mov
aaa
xchg
imul
adc
cmc
fidivl
mov
fists
std
test
lret
dec
adc
sbb
rolb
inc
jg
cmpsb
mov
outsl
jmp
test
sub
aas
jp
pusha
inc
jecxz
adc
cmp
int
shlb
mov
loop
fucom
dec
cmp
imul
daa
imul
out
outsl
loop
popa
xchg
xchg
int3
aam
mov
fwait
push
sbb
inc
les
jge
xor
inc
add
add
cmpsb
cmp
popf
lret
lea
push
and
xchg
push
int3
inc
stos
call
xchg
jbe
push
mov
inc
sbbb
jmp
mov
js
mov
imul
mov
in
notb
std
pushf
test
sub
xor
imul
mov
out
in
inc
in
pop
or
jp
loop
ja
mov
add
fwait
inc
in
lds
mov
in
sub
adc
out
test
push
jmp
aas
int3
rol
js
mov
nop
lea
dec
jnp
imul
out
repnz
stos
aas
lret
stc
fmuls
and
clc
test
js
jo
sbb
popa
xor
push
xchg
sbb
inc
add
cli
or
or
scas
inc
movsl
clc
aaa
dec
cli
pop
mov
jbe
cmp
adc
hlt
dec
sub
push
mov
fimull
inc
dec
add
mov
sbb
cli
push
ficoms
xchg
push
lods
or
mov
std
loop
in
in
xor
pop
mov
clc
push
aam
cmpl
adc
push
out
mov
add
sbb
test
shrb
out
cmc
inc
inc
fiaddl
divb
cmpsl
inc
cmpsb
fs
outsb
sbb
adc
in
fbld
int
ljmp
fbld
ds
scas
mov
jmp
test
aas
cmc
and
mov
fwait
outsb
int
add
loope
dec
pop
sti
mov
clc
jns
xlat
push
push
inc
icebp
aaa
out
xchg
fmull
mov
mov
cli
lods
les
stos
loop
push
pop
push
ja
stos
stc
push
in
jmp
cmc
jne
dec
orb
lock
test
mov
sub
pushf
mov
sbb
pushf
loope
and
inc
movb
mov
negb
mov
cmpsb
sub
inc
les
arpl
lret
adc
sarb
or
pop
add
popa
xor
fwait
pop
sbb
test
cmp
pushf
stos
or
mov
int
or
and
jbe
and
adc
enter
aam
les
add
mov
push
adc
stc
jo
adc
stc
pop
cltd
int
loop
push
jl
test
dec
lcall
call
xchg
lahf
xchg
mov
hlt
mull
scas
dec
sub
sub
pop
xlat
lock
call
loop
xchg
mov
jns
xor
dec
out
add
hlt
inc
ss
sbb
aam
mov
push
imul
jnp
aaa
inc
cmp
lret
jge
movsb
inc
xchg
inc
sub
jne
shl
pop
rorb
or
xlat
mov
pop
iret
push
lret
and
or
sar
pushf
cmpsl
mov
push
adc
and
fisubrs
iret
jns
loop
sbb
cwtl
bound
shr
and
sahf
sub
cld
sbb
mov
stos
dec
mov
or
lods
popf
lret
cld
dec
jle
push
jge
xor
sbbb
sub
mov
leave
ja
dec
jbe
mov
pop
xlat
dec
ja
cmp
jle
sub
xor
mov
push
clc
leave
xchg
push
movsb
push
scas
fisttps
adcb
dec
clc
js
in
dec
aam
testl
xchg
push
xchg
jnp
push
mov
xchg
out
dec
cmp
pop
lret
push
ljmp
mov
dec
sub
in
mov
sbb
pop
jbe
idivl
ljmp
jb
mov
in
pop
movsb
mov
popf
imul
adc
mov
iret
pop
lods
out
and
pop
jo
cltd
add
lahf
xchg
jge
sub
ja
push
lret
or
popf
in
mov
loop
movsb
jne
and
jbe
outsl
clc
fidivs
sbb
sbb
adc
test
in
push
xor
data16
dec
iret
sbb
pop
xchg
fcoms
rclb
or
pushl
dec
pop
dec
cmp
movsb
pop
lea
or
cmc
pop
xor
sbb
pop
mov
cmp
imul
mov
or
push
sub
mov
mov
mov
push
outsb
push
mov
ds
cmpsl
icebp
mov
call
imul
and
inc
push
push
sbb
in
push
or
add
sbb
js
jo
add
test
pop
imul
imul
sbb
imul
xor
imul
imul
outsb
negl
cmp
inc
mov
add
frstor
loop
sub
imul
mov
xor
adc
cs
fisubrl
dec
call
cmp
sub
sub
mov
cwtl
mov
sbb
xor
push
jno
into
cmpl
xor
outsl
dec
rcll
xor
mov
cli
mov
cmpsl
mov
dec
fidivrl
inc
fildll
sbb
push
rcrb
nop
shrb
cwtl
mov
mov
aad
lods
fistpl
xor
loope
mov
mov
mov
or
cmpsb
decl
loop
out
cmpsb
out
add
cs
and
fcompl
mov
add
dec
pop
jg
in
insl
xchg
outsl
xchg
inc
mov
cmp
sub
rorb
mov
adc
je
mov
nop
in
mov
sbb
pop
imul
adc
pop
sbb
cmp
jae
xchg
imull
inc
lahf
dec
stos
out
pop
mov
xchg
scas
mov
lahf
push
sub
hlt
push
cmp
fwait
les
sub
cs
and
das
sub
mov
xchg
add
cwtl
xor
mov
mov
inc
lods
nop
dec
loope
cwtl
incl
sub
xor
push
inc
enter
add
inc
cs
sbb
popa
xchg
imul
cmp
pop
xchg
sub
xor
fs
das
jnp
mov
jnp
repz
scas
sbb
fiaddl
mov
fdivl
mov
xor
xchg
fnstcw
and
pop
clc
int3
loop
out
jb
pop
mov
xor
fcoml
or
mov
movsb
cwtl
pusha
pusha
iret
xchg
faddp
mov
aaa
cmp
xor
push
mov
sbb
lock
or
mov
xlat
mov
loope
out
lret
xchg
aam
jle
xchg
std
or
sub
outsl
jbe
push
aam
inc
fdivs
repz
sti
js
jbe
inc
add
dec
push
popa
inc
cld
add
sahf
mov
mov
ret
inc
add
sbbl
and
fdivp
mov
out
jmp
test
iret
into
addl
adcb
addr16
push
mov
shlb
push
fbstp
scas
dec
stos
out
stos
push
mov
cmp
lock
adc
xchg
ljmp
pop
jecxz
push
movsl
pop
lea
pop
aaa
and
fisttpll
xor
bound
mov
test
fisttpl
or
cld
int3
dec
add
xor
jns
dec
rcr
mov
fcmove
pop
gs
gs
daa
pop
dec
mov
xchg
lea
or
push
mov
sbb
jg
cmpsl
ja
xor
nop
pop
popf
and
jno
push
fcmovne
xchg
inc
jo
inc
mov
fnsave
cltd
sub
fdivl
lret
sub
pop
xchg
cmp
xor
inc
xchg
cld
daa
test
movl
fdivs
ss
or
and
mov
and
ret
addr16
bound
ret
nop
sub
xchg
into
into
adc
testl
daa
add
enter
cld
sbb
rcll
mov
mov
sti
inc
in
jecxz
mov
test
pop
mov
or
sbb
in
lret
test
jle
les
subl
sbb
outsb
andb
xchg
pop
pop
lds
push
xchg
jmp
sti
inc
or
sub
adc
insl
cmpb
mov
in
fdivrs
xor
and
out
jb
jg
repnz
pop
int
jge
mov
in
xor
jge
lock
arpl
dec
in
pop
pop
and
fdivl
mov
mov
push
imul
outsl
les
add
bound
sbb
jne
mov
mov
es
and
cmp
shll
push
mov
shrb
push
stos
outsl
inc
sti
es
lea
jo
sti
ds
cmpsl
in
pop
push
mov
jo
xchg
and
push
fs
adc
pop
mov
popa
clc
repnz
ret
shlb
pop
push
dec
and
andb
rorl
push
lret
inc
sbb
inc
sub
clc
sub
outsb
add
push
pusha
pop
push
mov
call
lcall
mov
mov
insl
dec
cmc
jne
iret
sub
sub
pop
inc
sbb
ja
push
jne
xchg
mov
xor
lods
scas
cmc
fildll
sahf
mov
fiadds
cmc
adc
pop
enter
jle
cmp
and
scas
fstl
js
jns
push
add
sbb
inc
sub
pop
and
imul
inc
out
call
fldl2t
aam
jecxz
jecxz
or
pusha
jb
and
inc
mov
cmc
mov
popa
fisubrl
je
xorb
sbb
clc
xor
sbb
sti
inc
fwait
jle
jnp
mov
xchg
shl
jge
outsl
movsl
testb
mov
ss
test
outsb
xor
js
mov
mov
push
cmp
dec
sahf
repz
insl
mov
incb
hlt
dec
and
sub
push
xor
outsl
dec
lret
inc
and
sbb
imul
mov
add
int
xchg
jg
cmp
popf
dec
and
add
into
xchg
loopne
xor
ret
add
mov
push
fs
inc
lret
out
int3
adc
cmovs
lea
cmp
rcrl
lods
pushf
leave
adc
jae
lcall
pop
mov
lret
push
dec
lds
data16
pop
lcall
mov
mov
fisttps
popa
and
ds
inc
leave
xchg
pop
cmp
sub
jecxz
cld
out
jae
stc
cli
pop
ss
and
inc
aad
pop
int3
nop
pop
sbb
dec
sahf
fldl
and
ss
lods
mov
shll
add
outsl
pushf
dec
inc
xor
or
mov
movsl
jge
push
out
lds
ret
ss
das
je
xlat
adc
in
inc
sub
data16
pop
sub
stos
mov
sbb
or
sarb
sbb
loopne
sub
jo
xchg
imul
jnp
add
push
clc
fstpl
xchg
push
jecxz
das
jns
jecxz
lahf
int3
fs
lods
sbb
dec
xlat
in
popa
aad
in
mov
jmp
cmpsb
into
fbstp
or
sbb
and
fnstcw
mov
mov
in
cmp
pop
fsubs
jno
rcl
rcr
cmc
iret
cmp
js
xchg
cmp
mov
pop
dec
mov
andb
roll
xchg
xchg
xor
push
xor
repnz
out
pop
push
out
mov
into
pop
cvttps2pi
and
xor
mov
mov
mov
mov
jge
push
out
and
addr16
xchg
xchg
outsb
xor
jns
js
add
hlt
lret
sbb
cmc
mov
pop
bound
pushf
clc
popa
xorl
mov
lea
call
push
cmpsb
inc
and
out
lcall
fldl
or
int
inc
popf
in
sub
jp
inc
mov
pop
or
out
mov
jbe
mov
outsb
out
ljmp
sbb
push
stc
les
xor
imul
xor
pop
idivb
in
sub
repnz
inc
subb
mov
fstpl
popf
pop
lahf
repnz
xchg
pop
xchg
adc
dec
sub
ret
sti
loope
cmp
popf
lcall
dec
jnp
jp
fiaddl
and
or
push
aam
in
jecxz
in
fimuls
cld
sub
scas
sbb
sahf
lock
pop
loope
pop
les
adc
imul
je
jecxz
xchg
jge,pt
es
fistpl
outsl
les
xchg
sub
mov
loop
sbb
hlt
call
pop
xlat
mov
cld
dec
mov
bound
popl
push
and
jbe
fdivrl
setp
sub
gs
mov
sub
xlat
jne
fisttpl
pop
mov
leave
std
add
loop
and
aam
dec
enter
add
mov
xchg
scas
mov
mov
js
lret
xor
xor
push
bound
inc
imull
push
mov
or
mov
xor
leave
cmpsb
pusha
addl
push
insl
bndstx
push
int
xor
aam
loope
jecxz
dec
and
cmc
lock
rorl
sub
pushl
icebp
repz
insb
xor
mov
out
push
fistps
cmp
add
dec
rcl
aam
in
popl
sbb
mov
dec
push
and
add
lods
adc
rorl
jge
sbb
pusha
enter
push
add
cmp
xchg
jno
xchg
mov
enter
add
mov
cmc
cli
lcall
sub
push
fwait
xchg
push
xor
ret
or
cwtl
cmp
or
adc
fiadds
popf
sub
or
int
mov
sbb
lods
sub
loop
or
aas
sub
jecxz
pop
push
push
adc
adc
jg
stc
flds
xchg
cs
call
int3
xchg
mov
cld
ficompl
popl
test
dec
in
rol
cmp
and
setne
push
push
insl
sub
lds
and
mov
stc
mov
push
xchg
mov
sbb
inc
jmp
adc
mov
mov
xlat
or
and
pop
mov
mov
mov
shll
adc
scas
xchg
pusha
cltd
adc
dec
mov
insb
pop
testb
adc
sarb
or
dec
xchg
sbb
sub
data16
rcrb
add
cmc
xchg
jns
lret
adc
xchg
or
sub
in
out
or
fidivl
push
mov
add
pop
mov
cmc
aas
inc
rcll
aad
call
call
es
lds
sbb
and
pop
inc
or
testb
mov
cmp
push
popa
pusha
das
adc
cmp
and
xchg
sarl
push
sbb
sbb
inc
cmp
sarb
lret
pusha
pop
sbb
inc
jl
sahf
sbb
divl
xchg
or
cmc
imul
repz
inc
std
iret
aam
push
sub
popf
hlt
dec
in
sub
or
xchg
push
or
dec
mov
mov
fcompl
sub
outsl
jle
xchg
inc
sub
jnp
push
sahf
popa
sub
iret
push
mov
xor
clc
mov
or
sub
cmpsb
xorb
xor
cmp
shr
xlat
jae
adc
jge
fildl
push
rorb
sub
cmp
scas
jle
mov
ds
pop
out
pop
push
push
adc
sub
xlat
push
fwait
iret
jecxz
daa
rcpps
dec
sub
sbbl
les
addr16
mov
cmpsb
rorl
sub
pop
cmp
sbb
inc
sbb
xor
in
or
mov
jg
lahf
les
sbb
sub
xchg
inc
xor
inc
mov
enter
popf
out
repz
cli
test
push
jl
push
mov
fadds
mov
mov
pushf
daa
fsubp
nop
pushf
xor
iret
repz
ret
ss
inc
mov
mov
scas
hlt
dec
out
mov
ds
jo
aas
sbb
cmp
cmc
es
push
dec
mov
mov
out
pop
in
and
mov
orl
mov
mov
arpl
testl
jbe
dec
in
loopne
inc
out
test
mov
data16
jae
dec
ficompl
ficomps
sbb
mov
push
clc
adc
clc
int3
inc
xor
push
dec
aam
xchg
scas
mov
push
add
ja
adc
repz
inc
movsl
stos
popf
push
sub
dec
mov
sub
int
lahf
push
pop
cmp
das
es
icebp
mov
xchg
nop
cmp
xor
mov
les
repz
xchg
xchg
lock
test
leave
loopne
lods
push
jbe
jp
adc
adc
outsl
movd
into
ret
add
andb
sub
cli
faddl
ds
scas
or
pop
js
into
pushf
insl
sub
scas
dec
mov
std
mov
push
push
test
mov
add
gs
call
imul
xchg
xchg
jae
jecxz
xchg
cmc
es
aaa
lret
dec
mov
dec
dec
pop
int
cmp
fistps
jbe
xchg
inc
or
pop
and
pop
outsb
push
popa
push
cs
jnp
cmpsb
mov
cmp
fisubrl
int3
clc
or
out
xor
dec
and
mov
aad
push
stos
mull
and
into
xor
in
ja
mov
iret
cmp
dec
dec
stos
and
xchg
mov
cmp
mov
outsl
add
rclb
test
xor
jecxz
cmpsb
jno
xor
cli
inc
jle
pop
lock
arpl
xor
cmp
add
outsb
popa
sub
fildll
mov
add
mov
xchg
lds
xor
fisttps
cmp
leave
fdivr
in
mov
dec
mov
dec
dec
sbb
inc
push
add
add
adc
loope
adc
repnz
mov
hlt
movl
rclb
movsb
jns
lock
pop
mov
inc
mov
int
or
scas
std
jp
fisubs
xor
adc
loopne
and
pop
fildll
testb
rorl
les
popf
sub
stos
ja
and
shl
lcall
stc
xchg
popf
lahf
add
xlat
popf
sahf
sub
int3
adc
cmp
mov
aad
push
dec
xor
push
mov
adc
repz
inc
out
das
jl
popa
jb
push
mov
scas
push
rorb
mov
cmp
in
mov
movsl
cs
repnz
cld
jecxz
xchg
sub
push
cld
loope
shl
sbb
imul
sbb
xor
mov
jp
xor
aas
push
cmpsb
jns
in
jmp
popf
pop
cmp
cwtl
test
shl
jb
in
aaa
mov
mov
shrl
or
cwtl
push
scas
fdiv
popa
push
mov
jns
jnp
je
mov
jne
push
sarl
xor
xchg
and
jmp
mov
je
or
cs
xor
out
pop
and
scas
into
dec
fwait
test
sahf
push
and
sub
das
loope
and
pop
stos
test
stc
into
cmp
dec
mov
addr16
fisubl
movsl
int3
pusha
cmc
cmpsl
das
mov
adc
add
adc
repz
mov
pop
add
test
jecxz
pop
cmc
int3
fisttps
add
jge
popf
inc
pop
adc
ret
js
xor
movsl
aaa
xchg
addb
int3
xor
xchg
popa
cmp
inc
inc
mov
rcrb
imul
xchg
andb
mov
js
inc
mov
cs
pop
jle
pusha
es
or
sub
push
xor
mov
sub
jo
xchg
sahf
repz
fnstcw
les
imul
push
pop
sbb
adc
das
adc
aad
aad
aad
stos
pop
les
pop
clc
out
xchg
xor
sbb
dec
std
fistpll
psubusw
pop
fcmove
lds
in
int3
leave
into
stos
sbb
xor
cmpsl
mov
pushf
xor
and
stc
scas
mov
push
incb
int3
cwtl
movsb
sahf
aaa
insb
stos
sbb
xlat
push
fwait
jns
test
push
cwtl
jmp
es
out
sbb
mov
rorb
insb
sbb
xlat
es
sbb
add
fld
out
push
mov
jp
sti
push
and
xor
dec
ffree
inc
push
lock
jno
test
loop
out
mov
adc
xchg
loop
stos
xchg
lds
add
cld
adc
repz
xlat
add
daa
or
inc
pop
or
scas
xchg
jnp
int3
mov
and
cs
gs
cli
mov
pop
sbb
jle
adc
pop
test
std
mov
cs
push
mov
outsl
aad
adc
addr16
jno
mov
push
not
and
or
shl
xchg
add
arpl
movsl
adc
mov
dec
mov
adc
imul
cmp
ss
sub
lds
adc
add
mov
inc
aaa
dec
testl
in
xchg
cmp
fcmovnbe
iret
pop
add
leave
jg
sub
mov
repnz
mov
imul
int3
jbe
or
add
inc
out
or
sarb
shr
inc
inc
scas
in
or
push
and
mov
call
pop
or
stc
call
popf
mov
test
aaa
arpl
adc
aas
stos
cwtl
xor
test
cmp
outsl
sahf
movsb
sub
xchg
jp
orb
ret
xchg
cwtl
sbb
out
dec
sbb
insb
loop
push
cmpsb
sbb
movsb
add
lcall
enter
cmpsb
adc
push
or
mov
test
aaa
add
stos
push
pop
pop
and
rclb
lods
jo
popa
icebp
pop
push
jnp
cmp
in
js
add
stos
push
pop
aaa
xor
fdivp
dec
sub
ljmp
xchg
sahf
adc
cltd
cmp
rorl
cmp
cmp
pop
test
mov
aaa
lock
push
add
cmpsb
cltd
fbstp
xchg
inc
mov
ljmp
popa
lea
jno
xor
mov
jle
pop
mov
xchg
test
jnp
cmp
cmpsb
sbb
out
out
xlat
sahf
dec
xchg
pop
mov
mov
jbe
mov
mov
ss
dec
dec
andl
out
shl
aad
mov
outsb
or
int3
jmp
das
sbb
dec
mov
pop
push
xor
mov
xchg
inc
add
mov
sbb
fidivrs
mov
mov
adc
cmc
scas
sti
int3
test
fldl
cld
xor
pop
mov
iret
cmpsb
jo
or
lahf
mov
imul
ret
fcomi
scas
inc
ljmp
dec
and
push
or
lahf
jno
mov
leave
jge
fcmovu
aaa
xchg
dec
jnp
mov
fdiv
or
or
clc
psubsb
sahf
jnp
cwtl
mov
cmp
lds
add
or
fistl
xor
jg
es
xor
cmp
rcr
fwait
push
imul
jo
pop
addr16
push
jne
or
test
jge
inc
add
movsb
xor
movsb
dec
movsb
call
frstor
fsubrp
pop
enter
std
pop
icebp
lcall
jge
inc
in
push
or
mov
cwtl
jb
mov
fisubs
sbbb
mov
std
push
scas
mov
xlat
stc
xor
mov
cmp
pop
dec
xchg
cmpsb
push
xchg
add
clc
push
insb
iret
int
mov
jns
inc
jmp
sbbb
or
cwtl
mov
fs
pop
out
call
fwait
dec
mov
xor
mov
push
aam
push
mov
or
sub
sbbl
lock
sub
mov
dec
das
mov
pop
and
push
xlat
ss
shll
add
xchg
mov
dec
arpl
sbb
sbb
or
mov
or
push
and
aam
les
mov
sahf
outsb
mov
add
nop
vpxor
cmp
sbb
dec
sbb
xchg
ss
fdiv
dec
movb
lock
lods
adc
arpl
add
xchg
xlat
mov
jbe
and
sub
cld
cmp
inc
dec
imul
or
jge
es
xor
mov
mov
mov
sub
mov
mov
cld
lods
mov
out
add
jbe
push
icebp
push
js
sbb
xor
jne
dec
call
int3
inc
stos
cli
ret
mov
lcall
pop
push
jns
rcll
sub
sbb
mov
aam
scas
mov
repz
ja
shrb
aad
mov
fstps
sbb
push
xchg
inc
leave
pop
ja
adc
cmp
and
movsb
mov
popa
lahf
push
daa
pop
incl
dec
insb
test
sti
xchg
jae
out
cmpsl
mov
shll
into
jge
pop
inc
out
xchg
in
and
jbe
leave
cltd
sbbb
mov
xor
adc
bound
and
or
push
int3
int
mov
mov
dec
daa
jl
js
ljmp
pop
xchg
inc
mov
xchg
pushf
xchg
push
into
push
testl
xchg
in
inc
lahf
outsl
jmp
push
add
mov
and
fstpt
cwtl
scas
lret
shr
xor
push
pop
cmpsl
bound
movsb
arpl
mov
mov
in
fnstcw
fcmovbe
mov
adc
int3
sub
loop
xchg
inc
mov
lea
imul
push
push
pop
sahf
pop
shll
aaa
aam
bound
push
incl
dec
sub
sub
test
jb
fstpl
ret
xlat
into
xchg
sub
or
fdivrs
and
or
pop
arpl
call
imul
scas
int3
lock
testb
cmc
test
mov
push
js
sub
rcr
fs
inc
adc
xchg
fcomi
jae
sbb
adc
add
xor
out
ja
xor
and
call
in
int
mov
gs
movl
in
aam
lock
xorb
sub
cmpsl
and
add
cltd
fdivrs
call
xor
xchg
mov
ss
mov
lods
sub
and
and
lea
jae
movsb
jecxz
mov
dec
sbb
or
stos
lds
lods
dec
sbb
sbb
and
leave
jle
jne
mov
jnp
jns
mov
adc
mov
mov
mov
xor
repnz
inc
insl
cmpsb
dec
push
test
xor
orl
aaa
lret
add
adc
push
dec
mov
pop
xchg
test
add
ficoms
stos
test
loope
dec
jo
pop
add
or
push
cmp
stos
mov
jae
inc
adc
popa
gs
cli
jno
das
int3
dec
in
out
push
mov
cmp
clc
iret
fstpt
sahf
xchg
fldt
mov
xor
enter
movsl
or
js
and
rorl
push
adc
inc
sbb
mov
jp
div
outsb
push
aad
clc
push
ret
cmpsb
bound
cld
xchg
add
ja
and
daa
pmulhuw
pop
inc
loope
sub
xchg
jg
rorl
adc
mov
jmp
lahf
mov
sub
subb
jnp
sub
xchg
out
pop
mov
sub
jl
sub
pop
cmc
flds
xchg
mov
xor
sub
xchg
popa
int3
jmp
pop
xor
fbstp
or
add
add
lock
xchg
pop
test
push
in
xchg
ret
bound
adc
pop
xorb
sbb
jno
mov
lret
cmpsb
les
dec
imul
cwtl
mov
popf
fstpt
jge
mov
enter
jge
pusha
fs
cmp
rcrl
es
fcmovbe
push
mov
sbb
mov
mov
adc
sbb
push
rcrb
bound
inc
mov
or
orl
in
test
mov
and
xchg
xchg
sub
push
xchg
xor
or
cmpsl
push
or
fwait
test
or
ss
add
sub
sbb
mov
loope
add
jmp
lods
or
cmp
inc
loop
mov
nop
xchg
sarb
cmpsb
pop
jl
adc
push
cs
pushw
jne
jo
loopne
mov
push
jne
enter
pop
clc
dec
movsl
xor
addb
sbb
pop
stc
fwait
insb
pop
sbb
or
scas
ss
mov
notb
xchg
jg
gs
jmp
inc
mulb
lcall
cli
in
pop
pop
adc
daa
mov
ret
cmp
imul
seto
in
jae
sbb
imul
lods
and
jne
pop
add
push
lret
push
mov
or
cld
comiss
mov
inc
pop
or
stos
sarb
into
or
nop
inc
bound
aam
mov
cmpb
or
outsb
sbb
sbb
rcll
out
pop
push
pop
lret
dec
out
and
lods
add
mov
xlat
test
push
add
cmc
cltd
xchg
cmp
shrl
nop
mov
sub
pop
icebp
stos
dec
fucomi
inc
jb
push
cmp
jecxz
outsl
enter
sarl
mov
dec
mov
inc
lea
lret
idivb
outsl
jp
push
dec
sub
outsb
push
fcomps
dec
mov
xchg
enter
stos
adc
aaa
adc
iret
pop
dec
in
mov
and
add
xchg
enter
into
insl
mov
imul
add
xor
call
nop
lods
and
inc
cmpsb
dec
lret
iret
adc
andl
pop
test
fcmovu
mov
sbb
std
mov
sub
fdivs
adc
movups
imul
inc
cmp
or
sbb
mov
or
mov
negl
int
hlt
pop
and
icebp
hlt
fldcw
mov
xchg
sub
xchg
lock
ja
pushf
pop
or
dec
jmp
lods
mov
je
push
inc
sahf
fs
add
outsb
cmpsb
inc
fxam
movsb
rorl
popa
cmp
inc
add
cmovns
scas
pop
jle
inc
lret
xor
jnp
daa
mov
daa
inc
inc
loope
imul
xor
push
lea
or
inc
lahf
andb
test
inc
shrl
cmp
std
cmpb
jbe
pop
ja
xchg
xor
push
adc
and
inc
repnz
pop
xlat
pusha
rorl
insl
jecxz
jne
lahf
sbb
outsl
or
jecxz
das
adc
xor
enter
sbb
pop
jnp
mov
test
nop
xchg
stos
sbbb
sar
cmc
or
xchg
stos
dec
mov
movsb
xor
test
rorb
filds
fcompl
ret
mov
sub
xor
fs
mov
ss
movsb
and
movsl
push
add
daa
scas
adc
sbbb
push
test
lods
sub
fdivrs
jnp
adcl
dec
jo
mov
into
mov
into
iret
mov
incl
xchg
jle
and
adc
sub
jle
mov
shl
mov
aaa
loope
in
inc
mov
cwtd
aaa
push
xchg
out
outsl
fmull
arpl
xor
sbb
leave
lcall
aas
xchg
mov
mov
mov
fsubl
push
push
das
add
xor
xor
jg
rol
add
pop
jmp
jge
xor
mov
cmpsb
pop
mov
sbb
push
dec
adc
aam
push
xchg
pop
loopne
sarb
push
jge
test
inc
int3
pop
adc
and
push
mov
xchg
cmp
mov
or
xchg
out
out
push
js
jno
aas
pop
sub
imul
imul
adc
out
mov
add
sub
cmp
adc
add
je
out
ss
icebp
insl
mov
jecxz
xchg
xchg
add
scas
in
stc
adc
cmp
stos
push
enter
in
add
xor
adc
mov
and
sub
xor
push
aad
ret
pop
aaa
clc
and
pop
test
ljmp
out
jp
mov
into
jo
cmp
repz
cmp
push
or
or
xor
jno
pop
mov
int
mov
mov
lret
mov
rclb
call
icebp
sahf
jg
mov
imul
das
shll
stc
in
imul
or
movl
repz
rol
jle
inc
push
and
data16
aaa
xor
sub
jle
cmc
mov
insl
inc
popa
mov
xchg
stc
test
mov
int3
inc
arpl
dec
inc
add
test
xor
jns
addr16
mov
xlat
shrl
and
jnp
fwait
aaa
fbstp
mov
mov
mov
in
icebp
xchg
push
inc
ror
sbbb
and
lret
push
mov
vmovlps
add
nop
mov
push
mov
ss
ss
sbb
lods
dec
divl
add
cli
nop
lcall
mov
ficomps
into
xor
ss
arpl
int
das
insb
pop
hlt
xor
mov
aaa
inc
out
rcll
pop
pop
mov
adc
into
nop
add
sbb
insb
jl
mov
mov
enter
pop
and
xor
lcall
mov
mov
loop
sbb
mov
xchg
sbb
jmp
nop
jno
in
xchg
push
sbb
int
mov
push
pop
pop
mov
in
xlat
push
stos
sbb
daa
jp
cs
shll
cmpsb
xor
std
rorb
shlb
loope
push
xor
cltd
in
adc
shlb
sarb
push
push
fistps
xchg
in
loop
mov
addb
mov
adc
mov
mov
cmpsl
sbb
pop
clc
movsl
scas
sbb
add
movsl
je
popa
shlb
pop
pushf
mov
or
out
cld
fdivr
out
mov
pop
or
leave
cmp
pop
subb
les
data16
fwait
xor
je
int
pop
jp
std
and
cmp
cmpl
into
cmp
stos
popf
cmpsl
jmp
add
sub
das
xchg
push
mov
adc
mov
push
sbb
mov
jmp
push
ret
scas
hlt
pushf
adc
rcll
lds
cli
sub
sbb
adc
lock
push
inc
pushf
rorb
push
out
mov
je
clc
xor
shrb
or
outsb
adc
pop
mov
lods
fcmove
jno
mov
js
ja
push
and
and
rcrl
mov
movsl
push
dec
movsb
and
ljmp
add
test
mov
je
fisttpl
enter
setg
mov
cmp
xchg
aad
clc
out
mov
out
sub
xor
or
scas
cmp
ret
xor
fs
sbbb
add
out
test
mov
mov
aas
movsb
mov
outsl
lret
int
mov
pushf
and
repz
loopne
xchg
int
add
out
leave
insb
mov
js
sbb
clc
lea
int
shr
dec
add
xchg
cmp
je
mov
xchg
or
push
ja
into
pushw
mov
push
lock
out
sbb
testb
add
rcrb
mov
jnp
dec
xchg
or
adc
fisubs
pop
xchg
xchg
pop
mov
pop
ret
xchg
stos
stos
push
pusha
in
and
jbe
lahf
push
stos
mov
imul
movsl
cmp
cli
shr
cld
push
hlt
cmp
roll
inc
mov
mov
mov
inc
stc
add
adc
mov
out
adc
hlt
xlat
add
xor
jecxz
fcompl
bound
lret
push
repnz
movsl
repz
jne
jl
push
stos
pop
adcb
lret
cmp
sub
stc
insb
sbb
lcall
jbe
pop
fiaddl
cmp
aas
dec
and
es
push
add
and
out
hlt
movb
dec
ret
pop
cmp
xor
popa
pop
mov
lea
call
and
shrl
jecxz
scas
sbb
mov
in
mov
dec
pop
xchg
xchg
sub
mov
cmp
jmp
test
mov
int3
pop
ficoml
and
or
mov
stos
mov
fidivrs
loop
cli
cmp
mov
xchg
dec
cmp
clc
fsub
jb
mov
jmp
pop
mov
cwtl
shlb
rcrl
inc
mov
scas
sarw
xchg
mov
shlb
sub
sbb
int
std
adcb
shrl
js
jecxz
sbb
iret
xchg
dec
and
xor
and
xor
subl
xchg
add
xchg
mov
lea
leave
and
pop
setp
cmpsb
xchg
adc
jecxz
das
xorl
je
inc
dec
incl
sbb
add
jmp
xchg
adc
jne
dec
inc
lock
sub
adc
mov
sbb
shll
or
pop
iret
cli
mov
xchg
push
or
js
fdivrs
pop
test
shrb
pop
shl
or
dec
and
sbb
mov
daa
xor
or
add
test
lods
sub
add
mov
popa
jmp
aas
repnz
push
cwtl
xchg
add
inc
fstps
ds
sbb
das
xor
stos
push
cs
dec
xor
loope
fwait
cmp
xchg
in
mov
mov
shrl
inc
push
mov
inc
repz
dec
fdivl
sub
pop
jb
cmc
repnz
dec
iret
adc
mov
test
fdivrs
arpl
shlb
push
out
clc
pop
loop
sbb
fidivrl
dec
lods
adc
mov
shl
sahf
pop
outsl
adc
popf
scas
repnz
sub
fwait
inc
in
fadds
mov
dec
mov
sub
dec
adc
jb
les
addl
ret
xchg
insl
sub
mov
jno
stos
test
xchg
ja
push
out
outsl
xor
and
dec
aaa
cltd
jne
stos
std
call
mov
es
mov
notl
pop
push
repnz
xor
ficomps
cld
fucomi
cmp
pop
cwtl
sbb
adc
sub
adc
les
cs
pop
test
add
pop
push
lea
insl
mov
cmpsb
add
xorl
inc
aas
movsl
movsb
incb
subb
addr16
and
inc
in
mov
and
jg
cmc
lret
mov
rorb
movsb
mov
lea
sub
and
jno
out
ja
icebp
lret
rcrb
dec
rclb
xor
icebp
add
lock
push
jmp
adc
push
andl
pop
das
icebp
leave
dec
std
or
jmp
dec
sar
mov
xchg
out
mov
es
mov
fwait
sahf
mov
xor
es
mov
mov
cmp
pop
mov
pop
leave
sbb
inc
cmp
bound
sbb
mov
in
cmc
cmp
call
fisttpll
jnp
xchg
movsl
xchg
inc
movsl
out
push
outsl
jg
sbb
pop
sahf
pop
lock
xor
xchg
cmp
adcl
insl
xchg
in
push
inc
xor
lret
mov
insl
adc
sbb
in
pop
pop
daa
test
cld
or
call
adc
mov
dec
in
mov
cs
cmpb
into
jmp
xlat
cmp
mov
inc
test
xchg
xor
mov
pusha
xor
fsubrl
daa
test
xstore-rng
cmpsl
add
imul
movsl
and
add
popf
lock
adc
call
jmp
stos
mov
out
ss
leave
lods
mov
ret
jo
pop
icebp
cwtl
sahf
fldt
sbb
ret
rorb
enter
adc
dec
sbb
shr
pop
pusha
call
pop
repz
add
test
and
pop
xor
outsb
and
dec
xchg
mov
ret
sub
daa
cmpsl
xchg
add
leave
jmp
test
daa
mov
icebp
out
scas
add
adc
into
addr16
xchg
sbb
ret
xchg
push
pop
nop
xchg
dec
pop
mov
fmull
lods
push
scas
sub
pop
fistps
push
adc
inc
xchg
add
insl
cmp
lahf
bnd
ret
inc
decb
add
in
aaa
lods
xlat
pusha
aas
popa
std
test
push
pop
pop
jg
loop
orl
sbb
fs
test
rclb
pop
sets
xchg
ror
call
or
inc
lods
pop
dec
push
fwait
adc
jl
mov
sub
sti
push
dec
and
jecxz
sbb
jmp
mov
jmp
leave
pop
jle
adc
ret
adc
popa
dec
sahf
add
jecxz
mov
js
mov
shr
xor
inc
shll
push
cmp
dec
addr16
inc
aad
imul
push
fld
leave
xor
jno
test
inc
test
dec
lock
cmp
movsl
pop
imul
dec
call
sbb
inc
mov
shlb
andl
movsl
mov
inc
push
fucomp
jae
js
cmpsb
testb
ja
fldcw
push
addb
scas
xor
addr16
or
rolb
outsl
mov
loopne
dec
pop
movsl
mov
bnd
neg
mov
in
outsl
mov
inc
inc
mov
cmp
movsl
dec
imul
lea
pop
xor
negl
rcr
dec
test
dec
imul
arpl
dec
inc
icebp
ds
dec
add
mov
je
andl
lods
mov
cmc
push
subb
xchg
or
push
cmpsb
mov
sub
jl
jne
rorl
dec
cmp
aas
pop
and
jmp
divb
mov
int3
jno
movsl
fchs
shll
dec
ja
dec
add
push
or
mov
call
mov
cmp
comiss
xor
xchg
add
and
mov
scas
fisubs
es
out
int
add
scas
mov
adc
lods
jmp
xchg
xorl
sbbl
loopne
fdivs
insl
dec
test
stos
or
sub
arpl
aam
push
jns
shld
call
sbb
and
mov
lcall
xchg
dec
leave
xchg
adc
ret
mov
setns
pop
rcrl
sbb
in
loopne
aad
push
mov
lcall
movsb
clc
adc
ds
jns
inc
hlt
repnz
movsl
and
cld
scas
loope
push
fwait
or
addr16
in
leave
adc
mov
out
aaa
inc
mov
sahf
adc
xchg
jae
xchg
ret
cmp
and
sti
lahf
out
or
jmp
out
dec
xlat
orb
cmp
dec
sub
daa
xchg
outsb
add
add
jg
xchg
imul
stc
pop
gs
and
add
cli
add
ss
sti
push
in
or
mov
mov
fiaddl
loopne
mov
rolb
jecxz
mov
shll
add
sbb
ss
xor
scas
maxps
mov
mov
scas
jecxz
loopne
lahf
fisttpl
cld
into
add
xchg
xor
add
xchg
je
and
pop
sub
jge
jae
pop
dec
imul
jl
xor
divb
pop
cli
mov
mov
sahf
adc
lds
add
sbbl
fmul
xor
fists
icebp
jp
adc
mov
mov
jnp
lcall
push
mov
cmc
mov
pop
mov
and
ja
mov
clc
hlt
pop
into
fidivrl
in
jb
inc
aad
cmpsb
or
xchg
adc
sub
push
xchg
je
pop
enter
adc
cmpsb
or
inc
push
cltd
inc
aad
mov
orl
clc
ljmp
sbb
flds
addr16
add
inc
cmc
test
testl
popa
mov
push
mov
ss
int
pop
adc
imul
leave
fs
out
jb
inc
or
das
and
mov
sbbl
adc
mov
pop
rclb
data16
movsl
or
push
add
jns
hlt
ds
pop
shl
popf
int
jl
lock
ds
shrb
dec
mov
cld
jns
arpl
gs
jmp
jmp
insl
mov
push
loopne
js
mov
xorl
xchg
jae
iret
sub
call
out
adc
ret
fucomp
mov
xchg
sub
xor
hlt
sti
xchg
inc
outsb
les
iret
loope
push
lcall
cmp
lahf
loope
cmp
call
ret
pop
push
push
into
call
xchg
aad
ja
mov
jecxz
dec
xchg
jne
dec
jecxz
lret
sub
add
push
push
inc
je
popa
imul
xor
fisubrs
sarl
in
pop
pop
cli
popf
iret
dec
les
or
divb
xchg
xorb
mov
loop
mov
mov
sub
or
and
inc
mov
mov
inc
pop
sbb
xchg
out
or
dec
lret
sub
sbb
mov
adc
fbstp
jae
inc
mov
mov
jo
mov
mov
mov
mov
test
mov
and
xlat
repz
mov
inc
mov
dec
and
xchg
cmp
aas
mov
sti
ficomps
adc
pop
out
enter
rorl
sub
add
mov
test
mov
sbb
mov
insl
bound
jne
xor
sub
lock
in
aaa
hlt
sub
repnz
rorl
pushf
cld
adc
inc
push
faddl
outsb
fwait
mov
mov
dec
leave
inc
mov
pop
jne
adc
or
outsb
inc
ss
mov
pop
jecxz
pop
in
xchg
loope
imul
push
jg
scas
or
mov
loop
mov
mov
and
cmpsb
mov
loop
jl
pushl
cmp
fcmovnu
pop
clc
jmp
lock
ret
in
cmpsb
pop
or
mov
out
out
test
mov
inc
ljmp
push
pop
repnz
push
jmp
orl
sbb
and
out
push
xor
mov
push
push
pop
mov
filds
xor
fucomi
gs
out
cmp
jp
shrl
call
xor
mov
les
insl
mov
ret
cmpsl
mov
or
imul
dec
mov
test
out
mov
fnstenv
lds
ror
std
add
lds
push
test
mov
jae
xlat
push
das
loop
fsubr
sub
xor
sbb
addl
dec
ret
jmp
push
pop
push
lods
push
aad
add
stc
insl
lock
movsb
sti
xor
scas
add
nop
jne
inc
pop
iret
inc
inc
ss
mov
push
in
pushf
bswap
or
pop
add
jae
cwtl
fstps
rcll
push
aam
jl
sub
or
sbb
inc
xchg
aaa
cmpsl
sahf
call
xor
mov
popf
cmp
js
gs
or
outsl
mov
in
or
xor
cmp
adc
xor
mov
fists
cld
sub
ss
aaa
push
jno
add
insb
lods
xchg
pop
and
or
xchg
bt
and
sbb
test
outsl
test
out
shlb
xchg
inc
mov
popf
adc
and
mov
mov
ret
and
cwtl
loop
jbe
pop
pop
in
cmc
sbb
das
mov
outsl
mov
ds
int
test
dec
sarl
jne
xchg
add
mov
iret
fdivr
dec
mov
inc
nop
add
ja
nop
mov
and
xchg
pop
lcall
scas
and
dec
cmc
and
sti
or
movsb
pop
or
mov
arpl
mov
loop
cmp
int
pop
and
jmp
push
notb
push
je
lret
outsl
fbstp
mov
fisubs
jns
mov
xor
add
mov
stc
sbb
jno
fmulp
pushf
loop
mov
lret
adc
pop
dec
jp
in
imul
out
fisubs
cs
sbb
cmp
push
mov
dec
addr16
fcmovnb
push
push
mov
and
shl
out
fdivl
inc
fcmovbe
mov
aas
mov
xchg
mov
push
sub
fidivrs
adc
inc
popa
mov
mov
test
lcall
cltd
jne
push
repz
mov
mov
call
jne
mov
fldt
mov
jl
xor
scas
pop
or
inc
imul
add
xor
icebp
cmc
jo
sti
arpl
cmp
pop
out
add
rcrl
das
push
mov
cmp
arpl
sub
dec
inc
lcall
push
pop
push
aas
ret
mov
add
dec
shl
pusha
inc
xor
mov
out
in
sub
js
enter
test
fimull
idivb
scas
or
std
cmc
add
pushf
lret
xchg
mov
fdivrl
sbb
push
cmp
cmc
xor
pop
mov
adc
daa
mov
add
xchg
in
pop
js
inc
and
mov
push
out
jl
scas
test
push
xor
pop
fcom
loope
sub
or
pop
les
sbb
add
test
push
mov
andl
mov
in
pop
pop
rcll
push
adc
lahf
pop
push
push
loope
mov
iret
xor
daa
sarb
sbb
insl
cmc
inc
cmp
sbb
pop
add
add
push
and
in
inc
add
ret
insl
or
pop
lods
stc
in
adc
pop
sbb
rcrb
mov
cmc
mov
or
push
sub
sahf
sub
mov
xor
and
out
push
test
push
cmp
popl
inc
fdivrl
jp
inc
dec
notb
fsubr
jae
cmpsb
and
fldt
mov
je
movsb
push
xor
stc
adc
mov
loop
out
cmp
jl
call
inc
fistps
outsb
and
sub
rcrl
xchg
or
jge
push
negl
outsl
cmp
add
outsb
mov
negl
fbld
rclb
add
je
aaa
or
cmpsb
or
xor
adc
push
stos
mov
les
xchg
xchg
mov
adc
sti
lahf
outsb
jp
out
inc
pop
popf
es
jmp
lret
xor
aas
push
sub
nop
daa
mov
cmp
ljmp
stos
movsl
cmp
cwtl
hlt
and
sahf
movl
mov
rcrb
sub
mov
push
lock
xor
rcpps
shr
movsl
add
or
imul
sbb
inc
sbb
out
jle
mov
gs
movsl
inc
loopne
jp
fsts
outsb
jno
mov
shlb
mov
js
aad
mov
mov
lods
jbe
aaa
aad
sub
sarl
es
pop
ljmp
xchg
sbb
fs
sub
enter
xor
js
repnz
mov
push
mov
push
and
pusha
inc
in
out
mov
sti
jnp
cwtl
adc
imul
or
inc
ret
mov
dec
popa
sbb
mov
cwtl
push
xchg
jne
xor
jae
xchg
out
in
push
fiaddl
mov
push
imul
out
push
cmp
pop
insl
xchg
lods
or
and
jg
inc
and
xor
rol
mov
mov
and
insb
sbb
pop
ja,pt
inc
in
adc
pop
adc
push
loope
in
loop
inc
popa
xchg
lret
jne
lahf
nop
out
fdiv
js
sbb
popa
inc
cld
daa
sbb
push
push
movsl
into
xor
enter
push
fcoms
pop
xchg
pop
stos
fbld
sti
push
lods
repz
leave
int
test
out
mov
mov
cmpsl
mov
push
leave
sub
movsb
cmp
mov
cmpsb
fidivl
cwtl
add
pop
pop
adc
xchg
loop
jns
adc
xchg
adc
cs
fcoml
jnp
rol
ficoml
push
loop
sub
mov
adc
inc
int
sub
iret
inc
push
or
daa
hlt
adc
jecxz
cli
addr16
pop
daa
mov
ss
lcall
and
mov
sbb
cmp
xor
imul
pop
adc
or
call
jecxz
ds
jno
jle
jmp
jne
ljmp
and
add
int
mov
cmp
nop
jl
pop
push
test
adc
or
cli
mov
xchg
test
iret
dec
stos
or
pcmpeqw
jg
jbe
repz
lret
dec
cmp
in
xchg
push
xlat
in
push
ja
jl
inc
mov
jae
sti
pop
mov
pop
inc
xchg
inc
xchg
pop
cmpsb
daa
enter
aaa
inc
mov
aas
mov
push
inc
movsl
test
and
pop
out
add
fwait
in
and
add
subb
leave
test
jge
mov
ljmp
pusha
mov
pop
pop
or
xor
sbb
jns
cmp
mov
subb
std
call
jmp
leave
bound
mov
insb
std
scas
push
call
or
sbb
jg
cs
mov
push
cmp
jle
push
clc
fs
pop
inc
repz
and
cmpl
xor
mov
loope
cmp
cvtps2pd
cmpsb
inc
sub
inc
lret
imul
jp
mov
mov
nop
stos
push
and
out
xor
lods
insb
mov
cmp
pop
arpl
sbb
adc
test
popf
cmpl
sub
sbb
adc
push
clc
lea
xor
adc
test
mov
xchg
or
mov
scas
cmp
pop
popf
fmulp
lock
mov
jecxz
ds
xchg
add
stos
xchg
add
dec
in
jne
mov
xchg
mov
pop
clc
lock
sbb
jnp
pop
pop
imul
pushf
stc
mov
aaa
push
or
shll
scas
push
xchg
fsts
mov
xchg
sti
int3
sub
scas
ret
pop
push
push
push
mov
mov
popa
xchg
data16
bound
scas
mov
fsubr
xchg
les
orl
push
inc
xor
call
jno
imul
fdivrl
scas
aas
icebp
mov
pop
cli
fwait
lods
mov
lret
int
adc
push
pop
push
inc
or
mov
sub
pop
push
jno
leave
fistpl
lods
repnz
fwait
pop
call
and
inc
push
hlt
dec
mov
xor
xchg
push
pop
ljmp
ficoml
dec
or
mov
lods
jecxz
inc
pusha
jecxz
lods
pop
fcoms
cmp
inc
jp
nop
or
enter
scas
nop
inc
arpl
pop
pop
inc
lcall
jl
jo
mov
mov
pop
mov
dec
pmaddwd
and
cwtl
cmpsb
push
xchg
dec
mov
or
pop
inc
test
outsl
jb
inc
fldcw
push
shlb
pop
movsl
jge
or
pop
movsl
jmp
lea
int3
jge
mov
je
out
push
jge
mov
add
and
aam
jae
outsl
ret
scas
push
push
loop
jmp
repz
xlat
cmp
adc
pop
or
or
dec
dec
bound
cmp
fistps
lahf
inc
mov
repz
xchg
ret
das
ret
mov
jo
bound
call
mov
sbb
shrl
xchg
xchg
aas
mov
scas
movsl
mov
inc
cltd
xchg
pop
pop
popl
jae
repz
push
pusha
je
pop
leave
xor
enter
daa
pop
subl
out
jbe
stos
orb
dec
rolb
jb
mov
decb
mov
aam
dec
cmp
ret
adc
jmp
inc
insl
pop
or
mov
push
push
xor
fistpl
mov
gs
mov
aad
jmp
out
pop
push
lret
nop
stc
cs
shll
int3
mov
iret
shlb
movsb
repz
lcall
and
inc
stos
ds
loop
pusha
dec
out
xchg
movsb
fs
fsubr
pop
in
cmp
lea
xchg
or
stc
sarb
or
or
inc
jo
popa
lods
and
or
test
fadds
mov
push
std
cmp
xchg
scas
mov
std
call
inc
sub
pop
rcll
fmul
notl
mov
loop
mov
mov
xchg
test
xor
mov
mov
add
flds
pop
adc
iret
into
and
outsb
add
lods
lret
xor
xor
mov
das
std
fiaddl
push
in
test
mov
imul
or
pop
mov
sahf
mov
ret
and
jg
mov
xchg
mov
loope
pop
cmp
cld
icebp
sbb
mov
mov
adc
jbe
std
push
mov
mov
andb
dec
inc
inc
cmp
testb
rclb
insb
or
inc
or
cmp
cwtl
push
aad
ja
sbb
jne
jp
pop
ja
inc
add
jns
pushf
pushf
xchg
pop
push
test
jmp
xlat
push
js
and
in
jge,pt
push
nop
std
mov
mov
fildll
dec
dec
dec
cmp
xchg
ja
leave
add
lea
int3
out
or
scas
mov
sub
leave
arpl
cmpsb
jp
fmulp
ds
adc
jg
xchg
and
cmp
insb
out
xor
dec
out
add
inc
inc
out
add
dec
out
cmp
and
icebp
inc
adc
xchg
test
add
mov
sub
loope
push
or
adc
jp
mov
in
lods
mov
mov
in
inc
sbb
mov
and
pop
push
daa
popf
push
fs
jle
aaa
fildll
nop
xor
shrl
pop
mov
cs
push
inc
jle
fcomps
lock
xor
inc
xor
xchg
adc
insl
ret
or
fadd
sbb
jne
aaa
in
pop
mov
icebp
les
and
out
aam
inc
lods
adc
cwtd
xor
scas
jne
pop
xlat
adc
cwtl
aas
mov
shlb
jns
adc
rclb
adc
rclb
or
ret
mov
cmc
push
dec
lods
mov
xor
cld
iret
xchg
fsubs
lods
loope
lahf
jne
pop
imul
ficompl
rclb
dec
xor
jmp
sbb
lahf
es
xchg
inc
mov
mov
or
dec
test
mov
jl
and
ss
popf
and
cmpsl
repz
ficoms
xchg
inc
popa
sbb
sub
daa
test
rorb
invd
aad
aam
xor
ja
aad
faddl
jl
add
jo
or
stc
je
xchg
sti
mov
and
outsl
xchg
lahf
cmp
pop
sub
jge
scas
fs
pop
sub
imul
mov
mov
cmpsb
lahf
dec
sbb
std
es
std
loop
mov
xlat
push
push
mov
insb
outsl
cmp
inc
mov
insb
nop
sub
push
or
xlat
add
nop
aam
adc
in
outsb
inc
movb
cmp
popf
and
jle
andl
and
aas
aaa
jl
es
and
mov
jge
adc
push
inc
or
pop
xor
punpckhdq
or
jne
inc
fisttpl
inc
pop
mov
pop
fnstsw
pop
lret
adc
mov
aad
lods
jmp
test
dec
popa
stc
adc
pop
mov
gs
xor
mov
sbb
cli
nop
int3
sti
cltd
mov
out
inc
mov
rcll
cmp
nop
mov
jo
add
aaa
sub
pop
nop
mov
sarb
push
jg
js
cltd
aad
stc
add
rcll
adc
pop
push
loopne
pop
sbb
jmp
or
jo
nop
mov
mov
std
dec
sbb
sbb
sub
movsb
xor
dec
dec
xchg
jns
and
enter
mov
fimuls
jl
repz
pop
pop
sub
jmp
mov
das
cmpsb
ret
aad
jb
fnop
or
aam
jmp
dec
pop
fs
dec
mov
add
push
pop
and
loope
out
sbb
std
pop
pop
or
sub
jg
mov
sti
sbb
js
imul
fdivs
ja
inc
cmpsb
sub
lods
xor
xlat
jle
ret
addr16
mov
loop
lcall
sahf
mov
cmc
insb
out
jge
nop
and
inc
roll
test
repnz
xor
roll
xor
sti
xor
out
cmp
mov
pop
or
insl
jg
dec
test
jmp
jl
sbb
das
jmp
adc
pop
jle
dec
dec
addr16
inc
insb
loopne
lahf
loope
sbb
mov
and
ret
push
xor
add
sbb
sub
outsl
cmpl
xor
and
dec
rclb
stos
sbb
or
push
arpl
inc
sub
push
xor
fdivrl
xchg
ds
lret
or
in
inc
test
cmp
dec
frstor
test
jle
push
out
sub
mov
cltd
lea
adc
inc
xchg
dec
cmpsl
push
insb
test
mov
mov
hlt
mov
cmp
inc
jle
pushf
hlt
lret
rorb
pop
sub
insb
push
xchg
inc
mov
cmpsb
leave
xchg
frndint
sub
cmpsl
imul
js
jg
add
fsubrl
jp
add
adc
mov
sbb
xor
inc
repnz
dec
jl
or
sub
cs
jb
inc
fidivs
or
mov
aas
call
inc
sbb
sub
arpl
adc
repz
ljmp
leave
stos
addb
icebp
jbe
sbb
xor
and
mov
sarb
fistps
cmp
jo
and
pop
mov
inc
test
repz
movsb
inc
repz
inc
ljmp
sbb
pop
lret
pop
insl
loope
adc
mov
jle
mov
xlat
enter
fistpl
and
dec
cmpsl
mov
jnp
xor
loope
add
fdivrs
push
add
repz
sbb
push
add
sub
cmpb
push
out
out
xlat
pop
inc
inc
mov
mov
sub
push
push
nop
adc
orl
shlb
and
out
nop
outsl
xchg
sbb
clc
mov
cwtl
cmc
jl
push
jg
jae
shrl
or
out
pusha
fistpl
cmc
in
ss
iret
push
sub
lret
jbe
nop
test
pop
nop
cld
ljmp
add
adc
je
enter
pop
cs
or
xchg
push
out
or
dec
push
pop
movb
scas
lea
lret
push
sbb
iret
ficompl
cwtl
sub
add
stos
xor
and
je
fs
rcr
jg
pop
jl
out
test
in
cwtl
push
loope
rcrb
in
xchg
sbb
insb
or
out
cmp
xchg
lds
cmp
or
out
add
cmpsl
push
push
lahf
xor
xor
adc
adc
push
cld
xchg
clc
sub
sub
dec
pop
out
dec
pop
out
xchg
mov
pop
sub
sbb
mov
jnp
xor
push
adc
out
imulb
mov
loopne
mov
push
xchg
sub
movsb
dec
ss
pushf
mov
clc
adc
pop
fiaddl
dec
push
mov
pop
imul
jl
aaa
xchg
push
es
sti
fwait
xchg
sbb
popa
fimuls
sub
fwait
dec
pop
out
sub
mov
test
xchg
or
mov
push
pop
adc
cmp
fiadds
sub
cmpsl
out
cld
push
push
es
lret
pop
xor
in
sub
movsl
pushf
pop
cwtl
test
sub
bound
sbb
cmp
scas
imul
clc
pop
inc
xor
movsl
and
mov
stos
cmpsb
mov
xchg
popa
dec
mov
xchg
cld
popf
icebp
jo
testb
sar
mov
mov
pusha
push
loop
inc
addr16
and
and
mov
les
imul
stos
insb
or
jns
in
fildll
add
pop
ficoms
dec
hlt
aas
es
inc
bound
cwtl
xor
and
int3
es
lahf
imul
mov
in
xlat
mov
mov
sbb
dec
jge
pop
ljmp
arpl
add
mov
outsl
dec
push
push
pop
bound
stc
sbb
scas
fdivrl
mov
mov
push
add
jo
push
adc
mov
ret
les
rcl
sahf
enter
ja
mov
mov
clc
insl
xchg
cmpsl
cmp
and
jae
jne
add
pop
pop
sbb
fs
mov
and
cltd
aas
dec
xchg
sub
mov
stos
cmpb
ds
cmp
sti
jne
sti
cmp
pop
jb
lock
out
mov
push
ret
inc
and
mov
js
xchg
iret
aaa
jle
sub
fstpt
add
sub
sti
mov
mov
shr
push
pop
lcall
bound
nop
repz
add
shll
mov
ss
sti
rorl
mov
fwait
dec
xchg
push
arpl
xor
xchg
xchg
enter
mov
sbb
fisubrs
push
ljmp
sbb
mov
insl
cmp
bnd
int
cmpsb
cmp
pop
mov
cmp
push
mov
out
xchg
jg
hlt
bnd
push
pop
sarl
std
std
jns
inc
sti
xchg
fndisi(8087
lret
aad
aaa
pop
roll
mov
fcmovnbe
mov
pop
test
dec
and
lock
sbb
and
sub
push
push
jbe
fimull
add
dec
jg
fcmovnb
jp
push
mov
push
das
mov
ds
lret
pop
out
adc
ds
pop
mov
das
add
out
lods
call
push
imul
repz
push
inc
pushf
mov
xorl
jle
ret
pop
iret
ja
inc
sbb
push
lods
pop
mov
jecxz
cmp
mov
sahf
notl
mov
cmp
cltd
pop
ljmp
aad
jae
andb
adc
or
jne
pop
clc
rolb
push
sarb
stos
push
cmp
clc
mov
loop
fistpl
and
mov
vucomiss
ljmp
aas
lahf
stos
mov
add
dec
add
lds
loope
jae
xor
xor
jns
cmpl
add
add
mov
outsb
mov
push
lahf
push
pop
push
or
andb
sub
push
add
or
pop
inc
fistpll
adc
imul
pop
sub
mov
cmp
cltd
leave
xchg
mov
lods
dec
test
fistl
inc
xor
push
dec
hlt
cli
xchg
enter
cld
fwait
notb
jne
out
outsl
jge
popf
shrb
movsl
fdivrl
and
sub
int3
pop
xor
lahf
dec
mov
cmp
jecxz
fcomi
and
add
cmpsl
stos
incb
pop
les
inc
jmp
or
test
shll
pop
cld
mov
xor
test
jg
loopne
rcl
lcall
dec
push
fdivrp
inc
xor
jg
pop
subb
int3
sub
gs
adc
push
js
push
inc
adc
and
and
sub
jl
pusha
and
out
sub
xor
lea
jno
pop
mov
xchg
imul
dec
ja
or
mov
add
jbe
and
cmp
jno
mov
inc
orl
pusha
mov
dec
xor
fwait
push
mov
arpl
or
pop
fsubrs
insb
dec
popa
ljmp
xchg
stos
bound
adc
mov
in
stc
outsl
wbinvd
stc
imulb
je
xchg
pop
nop
loopne
aam
jo
mov
push
or
ficompl
pop
cwtl
mov
cmp
repz
les
xor
icebp
lcall
repnz
lahf
roll
scas
imul
xor
sbb
in
inc
ret
push
cmp
mov
mov
lods
sbb
lcall
xor
sahf
mov
outsb
ret
pushf
and
dec
xchg
loopne
xor
xor
xchg
mov
push
insb
imul
cli
outsl
bound
jnp
outsl
hlt
pop
or
aas
mov
mov
add
dec
sub
aad
dec
aas
mov
cmp
cld
ficoms
sbb
test
je
pop
bound
dec
mov
mov
and
inc
hlt
popl
in
inc
xchg
aaa
or
jb
mov
add
movsl
cmpsl
arpl
insb
sbb
loop
xchg
daa
popf
cmp
sub
adc
out
stos
sbb
pop
adc
and
subl
and
inc
or
or
aam
pop
jno
pop
sub
out
sbb
inc
les
jno
mov
sbb
call
push
adc
test
pusha
or
xor
ljmp
cmc
jmp
aaa
outsl
push
jne
mull
fisttpl
lahf
push
push
push
ljmp
dec
mov
push
stos
mov
and
in
add
jb
mov
cmpsb
ret
mov
xchg
cwtl
mov
rcrb
rcll
or
lret
das
mov
je
or
push
cltd
pop
add
inc
mov
sub
rcll
cmp
jg
push
mov
jns
insl
mov
inc
rorl
mov
into
mov
ss
cmp
fisttpl
or
pop
fcmovb
dec
or
gs
lock
xor
add
push
add
pop
sub
cmp
dec
sub
test
and
add
shll
int3
jg
inc
jmp
ljmp
test
xor
scas
int3
lock
fstps
jbe
add
outsb
loopne
stos
out
fistpll
sub
fmul
outsb
inc
push
cs
int3
push
orl
push
add
adc
xchg
mov
or
ja
jge
mov
pop
pop
das
test
sub
pop
jb
pop
ss
bound
aam
inc
adc
dec
stc
push
xor
fwait
and
popf
rcll
mov
int
test
lock
dec
shrb
fisttpll
adc
mov
fcoms
lret
adc
in
ja
xchg
daa
jae
xchg
or
and
mov
xchg
fldenv
inc
mov
rcr
inc
imul
aad
mov
push
mov
ret
call
jns
mov
jb
je
iret
push
cmpsb
and
adc
mov
loope
mov
gs
add
mov
push
add
stc
or
fwait
cmpsb
add
icebp
imull
out
jae
movsl
test
xchg
fisubrl
aam
scas
in
xor
movsl
jle
aad
fnsave
cmp
cmp
mov
sub
pop
jp
inc
and
jl
push
out
xlat
aaa
out
push
jg
jo
rorb
ja
pop
inc
dec
jmp
movsb
jnp
jne
jno
movsl
andl
repz
mov
xlat
mov
adc
jns
mov
aaa
mov
mov
lods
xor
adc
inc
and
sub
inc
scas
pushl
cmp
push
push
and
fs
xor
or
mov
sahf
or
jo
loopne
adc
lret
es
inc
inc
dec
fldenv
mov
cmp
jbe
int
int
mov
and
mov
arpl
out
and
and
xchg
mov
loopne
test
mov
xorb
sbb
stc
cmpsb
jbe
dec
add
cli
inc
je
inc
les
xor
push
mov
push
xor
pop
jb
cmp
mov
push
ror
rolb
shlb
daa
jno
popf
mov
test
jne
xchg
fldt
mov
movsb
test
pop
outsl
mov
jb
out
push
mov
sbb
push
jg
jle
out
sub
stos
sbb
movsl
dec
loope
sbb
aaa
jae
lret
and
pusha
aam
lds
dec
cmc
cli
js
idivb
cmp
adc
lret
mov
or
imul
mov
leave
xchg
popa
popa
sahf
imul
mov
dec
xor
xchg
sbb
xchg
xorl
fadds
xor
push
out
inc
sub
jno
pop
inc
inc
dec
mov
cmc
adc
push
or
and
mov
ja
loop
add
aad
mov
addl
inc
jl
push
sahf
and
in
pop
and
jl
mov
es
adc
out
jecxz
in
push
or
lret
mov
jns
jae
iret
push
dec
dec
or
sbb
sub
dec
or
in
std
movsl
inc
gs
and
and
int3
repz
test
mov
push
mov
xor
dec
hlt
fists
pop
add
push
gs
enter
cmp
adc
mov
sbb
adc
divb
mov
xchg
pop
xor
jbe
xlat
dec
imul
lods
mov
inc
mov
mov
pop
fwait
mov
pop
inc
fs
cli
jae
icebp
pop
repz
add
pushf
clc
pop
lods
test
sbb
or
ljmp
sub
inc
ja
xchg
loope
mov
sub
xchg
adc
leave
and
inc
cmpsl
fwait
test
xor
jge
scas
mov
jbe
xor
xor
xchg
pop
ja
in
clc
inc
and
xlat
clc
icebp
jne
je
lock
jne
pop
and
popa
dec
roll
lods
imul
fwait
and
cmp
dec
int3
add
fldcw
or
movsl
adc
repnz
lea
je
pop
shlb
gs
aad
jle
ss
test
repz
std
loope
adc
push
jge
or
mov
mov
sub
lcall
lock
and
cltd
pop
adc
sbb
nop
dec
stos
or
incl
lods
jae
popa
xor
cmc
mov
add
lahf
hlt
shr
cmpsl
je
mov
adc
cmpsb
rorl
popa
sub
push
inc
outsl
jg
push
out
or
xchg
push
push
mov
aad
into
push
cs
mov
cmp
sbb
cmc
dec
mov
test
dec
xchg
and
lea
fistpll
clc
aad
test
inc
or
mov
cwtl
int
jmp
mov
hlt
lods
aad
adc
mov
inc
sbb
pop
xor
clc
cli
stos
into
sahf
clc
sbb
leave
xor
mov
jle
mov
enter
cltd
icebp
pop
sbb
iret
pop
pop
mov
insb
je
xor
bound
push
add
jb
sahf
cmpsl
dec
adc
fistps
push
xor
scas
pop
dec
das
push
outsb
dec
or
mov
xor
popf
adc
dec
lcall
stos
insl
shrb
dec
xchg
add
andb
xchg
leave
cmp
pop
lret
dec
loop
dec
jae
fs
shrl
and
push
lret
test
xchg
dec
mov
and
inc
and
ret
xor
xchg
rcrb
cmp
xchg
sti
cltd
test
je
cmp
mov
test
xchg
push
jno
mov
aaa
and
sahf
std
sbb
or
gs
mov
into
mov
dec
jo
or
add
cli
test
dec
cmp
arpl
and
xor
test
push
jl
fistpll
enter
ja
xsha1
cmpsb
dec
pusha
cmp
xor
iret
ret
cmp
ja
jecxz
push
xchg
lahf
rolb
clc
xchg
cmc
mov
sar
int3
lods
sti
add
adc
sub
lods
inc
test
jno
sbb
repnz
adc
mov
jnp
jns
jge
lods
adc
repnz
mov
sahf
jmp
push
js
mov
int3
xor
test
mov
rcrb
jle
roll
dec
orl
inc
bound
or
mov
push
insl
inc
dec
imulb
inc
sbb
pop
jg
mov
dec
mov
mov
insb
sahf
loop
dec
std
fistps
sbb
stos
mov
cmpsb
push
adc
sub
andl
sbb
ds
insb
ret
jnp,pt
testl
and
into
outsl
test
pop
bound
sub
mov
mov
push
pop
fdivr
inc
or
out
divb
lds
inc
inc
cmc
jp
jno
mov
repz
add
data16
fadd
sti
fidivrl
test
decb
push
fwait
jl
repnz
fs
insb
movsl
mov
std
or
pop
cmpsb
sub
push
cwtl
cmp
push
jge
xor
cmpl
xor
xor
jns
adc
inc
mov
in
scas
sub
std
cmp
inc
mov
test
movsl
lods
int3
cs
adc
jecxz
push
xchg
push
insb
pop
lret
push
les
dec
xorl
add
mov
insl
imul
pushf
stos
cmp
in
scas
std
mov
outsb
lods
inc
adc
lock
loopne
neg
lock
aam
push
sarl
gs
cs
add
shlb
shlb
out
cwtl
inc
int
pusha
push
jno
adc
xchg
sbb
xor
xor
mov
outsl
dec
mov
cmp
sbb
xor
cmc
mov
in
mov
out
xchg
mov
jns
cmp
lea
out
mov
std
add
pop
in
cli
xchg
movsl
jno
es
in
call
adc
add
cmpsl
es
mov
xchg
das
sbb
loope
in
cmp
mov
lcall
icebp
lods
rcll
mov
mov
outsb
or
xchg
or
addr16
add
pop
jb
add
sarb
pushf
test
cmpsb
xor
mov
sub
mov
popf
xchg
mov
inc
imul
in
sbb
or
sbb
push
jb
js
js
jg
sbb
xor
iret
xchg
test
nop
xor
iret
callw
mov
pop
mov
pop
sbb
fsubrp
dec
push
movsl
fyl2x
out
lcall
sub
aam
in
addr16
xlat
mov
daa
adc
xor
jne
lods
mov
sbb
cli
or
dec
cli
mov
out
or
dec
out
shl
cmpl
lds
adcb
in
out
sbbl
mov
xchg
sbb
pusha
pushf
sub
orl
frstor
add
inc
add
cmc
pop
add
vmovsd
mov
daa
inc
ljmp
sarl
mov
sub
mov
or
cmp
rorl
dec
mov
sub
stos
dec
stos
into
push
pusha
add
dec
test
add
out
jecxz
push
shrb
int
jae
add
dec
jmp
aad
imul
pop
jae
cld
loope
dec
mov
and
add
pop
jae
xor
xchg
sbb
xor
or
leave
scas
lods
sub
jne
shll
or
leave
mov
push
pop
pushl
inc
mov
sbb
jge
pop
lcall
outsb
add
cmpsb
lds
pop
lods
ljmp
das
or
sahf
xor
push
push
mov
mov
pop
xchg
ret
push
loop
in
cmp
mov
fxch
insl
mov
lahf
and
cltd
add
xor
movsl
shlb
icebp
out
mov
mov
xchg
lret
mov
ss
loope
popf
data16
push
js
out
dec
hlt
sbb
ret
push
call
inc
shr
insl
shrb
sbb
xchg
movsb
xchg
ljmp
add
sub
xchg
das
pop
jmp
pop
push
push
jge
adc
fcmovnb
pop
or
test
xor
fsts
jge
xor
mov
xor
mov
add
sub
dec
mov
push
xor
push
xchg
imul
jo
cmpsb
xor
cmp
daa
clc
pushf
sub
repz
or
sbb
lcall
pop
mov
sahf
test
add
fstl
inc
xchg
shlb
int
mov
hlt
inc
in
mov
test
dec
fld
out
and
cwtl
pusha
sub
into
shll
mov
hlt
xchg
cmp
outsb
sbb
enter
dec
insb
pushl
dec
jae
mov
pop
aas
and
add
pop
sub
in
sub
mov
cltd
ss
sarb
mov
mov
cwtl
shr
js
and
int3
xchg
dec
or
or
out
sbb
mov
dec
jge
lock
xchg
test
dec
das
mov
in
aad
bound
ret
mov
adc
lcall
dec
jle
les
sbb
mov
popa
mov
xchg
enter
cmp
insb
dec
je
mov
pop
movsb
adc
pop
push
mov
adc
insb
cmp
clc
adc
adc
xchg
or
pop
cmc
in
jns
fcomi
inc
xor
dec
subb
popf
jge
pushl
push
mov
pop
pop
enter
movsb
jne
and
cld
adc
sbb
aaa
jl
xchg
dec
cmp
call
lods
cmpsl
test
mov
xchg
orl
rcll
sub
lcall
je
stos
dec
mov
push
jmp
sbb
or
movsb
adcl
adc
push
and
adc
dec
jb
dec
mov
cmpb
bnd
mul
xlat
mov
mov
shrb
mov
push
nopl
mov
sub
in
or
sbb
xlat
jb
int3
ja
mov
mov
xchg
sub
testb
add
adc
and
cmp
inc
rclb
cli
je
jns
cmpsl
stos
fwait
jge
sbb
mov
mov
jns
fldcw
and
faddl
fisttps
jge
or
je
xor
adc
ret
add
mov
sbb
fstpt
inc
adc
cmp
sbb
outsl
jns
xor
orl
insb
scas
es
mov
inc
sub
leave
push
cmpsl
arpl
mov
in
pop
shll
jne
xchg
sbb
scas
loop
pop
dec
loop
pop
lea
hlt
xchg
imul
fwait
das
mov
mov
inc
push
push
addr16
loopne
xchg
enter
outsl
xor
rcrl
cmpsb
push
inc
push
vmovsldup
test
ret
fs
xor
rorl
or
mov
inc
sbb
repnz
mov
sarb
push
icebp
inc
mov
nop
jae
jo
lods
push
mov
pop
aam
cmp
push
mov
mov
je
scas
je
mov
xchg
xor
pop
mov
push
aad
aad
mov
jmp
nop
std
test
xor
inc
xchg
push
cmpl
mov
add
pop
je
xchg
jecxz
sub
pop
out
lahf
mov
aad
dec
sarb
call
lods
jmp
push
repz
push
push
mov
in
cli
mov
sub
xchg
out
xchg
inc
push
jmp
popf
nop
sbb
hlt
jnp
mov
rclb
push
mov
mov
jno
jmp
imulb
jns
shll
fistpll
imul
pop
xor
das
in
xor
and
mov
addr16
dec
dec
imul
fwait
dec
aaa
inc
lea
lock
mov
add
and
push
xchg
roll
nop
jns
sahf
fsubrs
mov
fists
test
xchg
lock
cltd
jp
stos
add
jae
mov
sub
push
arpl
in
adc
pop
sub
push
push
xchg
jae
nop
addb
notb
or
push
mov
or
mov
pop
cmp
adc
pop
cmpsb
popf
mov
cmp
cltd
jmp
iret
adc
mov
pop
sbb
push
cmpl
pop
add
pop
and
cmp
xlat
push
outsb
sub
fstp
out
popf
mov
into
inc
fsub
call
arpl
xchg
cmp
fists
in
or
arpl
scas
mov
adc
inc
lds
fs
int3
mov
mov
mov
cmpsl
iret
fstl
shrb
push
std
cmc
data16
outsb
xchg
adc
stos
sub
dec
fldcw
sub
test
jae
push
call
insl
dec
enter
dec
xor
sub
nop
cmp
push
fdivs
xchg
push
adc
push
jg
sbb
mov
dec
imul
cmp
loope
pop
xor
adc
xor
stos
orb
sub
test
lods
xchg
jecxz
cmovge
push
fldl
pop
mov
lods
jmp
cmp
lahf
mov
jb
bound
shr
sbb
dec
lcall
lea
stos
hlt
push
mov
sbb
push
into
inc
stos
add
sbbb
orl
das
add
jmp
mov
and
outsb
in
orl
data16
push
pop
leave
push
xor
or
sbb
fdivp
lods
mov
and
lea
jnp
hlt
mov
adc
je
mov
test
adc
andb
in
mov
jg
or
icebp
rcrl
and
in
pop
adc
add
aam
lds
sbb
adcb
add
fisttpll
xchg
notl
flds
xchg
loopnew
outsl
enter
jbe
insb
fildll
clc
pop
fwait
in
sub
or
jo
pop
popf
imul
xor
cmp
adc
mov
clc
je
in
inc
popf
jno
mov
push
cmp
out
lret
pushf
sbb
adc
divl
nop
loopne
popf
js
dec
repnz
add
fisubs
inc
pusha
sbb
sar
cltd
subb
xor
popf
imul
push
loope
push
sbb
in
out
aad
mov
add
cwtl
std
lds
stos
imul
sub
popl
addl
insl
add
and
sbb
aad
idivb
xlat
xchg
jge
in
inc
leave
sub
stc
xchg
mov
mov
mov
cmp
mov
add
or
mov
test
sub
mov
inc
je
iret
xor
cmp
push
add
xchg
ja
or
shl
fiaddl
or
add
ror
fnsave
fcom
or
xchg
mov
xor
loope
mov
adc
out
fisubl
xchg
lahf
sti
shrb
lds
inc
cmp
lret
leave
sbb
mov
into
test
and
int
mov
icebp
sar
ljmp
mov
es
mov
inc
imul
ljmp
or
mov
push
push
gs
inc
imul
xlat
mov
push
push
popl
lods
out
rcl
pop
adc
mov
sbb
sbb
adc
daa
stc
lret
inc
push
jno
daa
sbbb
cmp
adc
pusha
jmp
mov
lods
sub
pop
hlt
adc
inc
loope
adc
loope
stc
xorl
cltd
in
push
rcrl
mov
icebp
decb
out
sbbl
xchg
or
aas
mov
aas
pop
sbb
std
or
stos
ret
bound
stos
pop
into
adc
stos
sbb
xor
rorb
shlb
out
aas
and
xor
cmc
fbstp
inc
pop
jp
push
popf
shlb
icebp
pop
stos
nop
mov
cmpsb
jge
arpl
outsl
xor
in
cltd
popf
pop
add
add
or
xchg
dec
mov
add
loop
mov
cli
enter
xchg
stc
and
xchg
hlt
fsts
les
pop
clc
jno
xor
movsl
dec
add
cmp
jb
dec
and
sub
mov
into
test
test
push
sub
push
add
and
dec
inc
push
xor
out
outsb
ret
xor
sub
mov
icebp
cmp
imul
mov
xchg
mov
cmp
aaa
std
out
mov
pop
cmp
sbb
pop
mov
or
loopne
push
jbe
lret
test
movsb
sahf
cmp
jl
push
jmp
ficomps
pusha
push
pop
xor
adc
cmp
mov
mov
ret
cmovbe
push
xchg
xchg
push
lds
xorl
out
das
sub
add
mov
inc
dec
push
and
nop
pop
mov
inc
and
enter
out
push
dec
andl
and
test
mov
pop
jae
cmpsl
sub
push
fsts
mov
or
lea
ret
or
cmp
int3
push
nop
cmp
sbb
jo
test
cltd
pop
push
js
xchg
bnd
mov
fstps
mov
push
sub
daa
into
je
mov
sbb
or
add
adc
and
shll
pushf
fldcw
inc
cmp
dec
cs
test
mov
ret
sbb
push
lock
pop
int
jle
aad
aam
cs
shlb
lods
rcrl
sub
or
lret
mov
adc
stos
iret
loopne
outsb
pop
les
xchg
push
in
xor
jmp
xchg
ja
or
or
hlt
push
mov
mov
add
js
pop
vmovd
out
rcrb
mov
push
mov
sub
iret
mov
xchg
cmpsb
setno
mov
pusha
xchg
rorb
inc
jl
adc
pop
inc
scas
rorl
pop
cmpsb
mov
xchg
loope
jl
add
lahf
adc
and
and
cld
stos
mov
adcb
fisubs
inc
fdivs
cld
jecxz
ss
movsl
or
inc
aaa
pushf
push
ficoml
add
mov
and
lcall
adc
daa
insl
movsb
xchg
lahf
mov
fisubl
dec
cmp
daa
ret
insb
jg
mov
inc
dec
pop
int
pop
jno
mov
mov
popa
inc
jae
adc
xor
pop
add
push
cmp
inc
loopne
xchg
jae
daa
jle
and
dec
movsb
int3
sub
inc
outsl
mov
jno
mov
mov
push
movsb
jle
jecxz
pop
std
jnp
test
in
inc
sub
aaa
sbb
addr16
sbb
push
mov
or
pop
sti
cmovs
in
jle
popf
fs
mov
cmp
mov
icebp
adc
sub
cmp
or
cmp
addl
inc
outsb
push
jne
pop
adc
xchg
in
xchg
cmc
les
mov
push
clc
icebp
jle
adcb
js
mov
push
test
mov
fs
mov
push
inc
fldt
sub
int
movsb
dec
std
les
jns
inc
aas
loope,pt
xor
shll
loopne
mov
sarb
sbb
add
dec
sub
sub
filds
lods
test
add
cmpsl
pop
in
cmp
mov
mov
repnz
stos
negb
dec
mov
mov
incb
scas
mov
sub
add
cmp
jbe
enter
cmpsl
subl
sahf
sbb
lret
mov
loopne
pushf
inc
xor
fwait
scas
and
outsl
inc
jb
scas
movsl
jo
cmp
sbbl
jmp
shll
sbb
xchg
rcr
pop
addr16
loope
sbb
xorl
iret
xor
addl
sbb
cltd
sbb
mov
icebp
lods
movsl
pop
add
scas
sbb
adc
xlat
lahf
enter
cmp
jno
mov
sbb
addr16
out
dec
or
loopne
or
add
dec
fptan
jb
sahf
cmp
imul
hlt
mov
cmp
test
add
jmp
stos
sbb
mov
stos
frstor
sahf
cmpsb
shll
sbb
loop
enter
mov
out
push
cmp
and
das
push
cli
lea
subb
cmp
xlat
adc
scas
inc
pop
mov
push
js
cmp
scas
sbb
pusha
xchg
icebp
push
add
mov
bswap
repnz
repnz
mov
mov
jnp
leave
neg
std
sarl
fisttps
sbb
jecxz
addl
gs
jo
pop
push
jle
dec
sbb
pop
lea
rclb
stos
mov
mov
jle
pop
test
mov
mov
and
cs
xchg
dec
jmp
loop
pop
sbb
iret
mov
xchg
mov
pop
jne
pop
fs
inc
pusha
in
pop
popf
mov
jmp
out
outsb
enter
hlt
aad
push
decl
cwtl
je
iret
daa
sarb
jecxz
jl
dec
and
xor
mov
inc
cs
mov
jb
dec
lret
pushf
fs
je
rorl
mov
fucomip
stos
fsubr
xchg
cmp
mov
mov
in
sub
loope
inc
test
dec
mov
xchg
xor
fwait
movsb
fs
aas
jno
out
insl
imul
push
je
cmp
movsl
negl
arpl
iret
sbb
lret
sub
std
cmp
sub
out
or
push
mov
sbbb
in
fsubr
or
orl
ja
adc
jg
stos
sbb
addr16
mov
lock
push
pop
test
enter
lods
ljmp
mov
jge
inc
fsubs
loop
dec
lret
pop
inc
lds
aam
aad
stos
in
mov
adc
mov
pop
repz
and
jno
test
xor
xlat
inc
push
ljmp
and
lahf
mov
jae
fbld
push
jmp
inc
pop
scas
insb
xchg
inc
xchg
cli
bsf
mov
add
mov
in
das
test
cld
std
lcall
in
mov
orl
mov
xor
mov
popa
and
sbb
out
aaa
xchg
inc
icebp
daa
jo
inc
xor
in
insl
xchg
fisubrs
js
push
shrb
xchg
pop
aaa
mov
mov
enter
adc
in
adc
cli
xor
mov
or
daa
dec
pmulhw
cmpsb
je
mov
pop
cmp
jno
out
lds
mov
gs
sbb
outsb
loopne
fst
sti
ficomps
push
push
lock
dec
test
js
cld
or
mov
mov
clc
mov
inc
stos
out
ds
pop
pop
xorl
jbe
bound
loopne
jmp
xor
fwait
cld
cs
dec
pop
stc
ret
fisttpll
imul
push
push
or
outsl
aam
mov
das
xorl
mov
fisubs
cwtl
ret
or
pusha
ret
insl
movsb
mov
add
push
jg
les
mov
leave
test
mov
xchg
cmp
or
jo
mov
out
test
hlt
int
scas
jbe
sbb
adcb
sar
add
int3
vmread
loopne
imul
rorb
lcall
adc
hlt
dec
cld
jns
dec
arpl
and
loopne
pop
pop
into
xor
addr16
mov
dec
pop
adc
push
mov
sub
push
fs
pop
int
into
or
pop
push
js
push
jg
xor
sub
cmpsb
ljmp
mov
out
enter
scas
cmp
ja
mov
fbld
in
xor
out
int
push
dec
pop
pushf
scas
add
jle
push
dec
addb
push
in
repz
testb
lock
ljmp
ret
sbb
repnz
dec
inc
mov
cltd
cld
xchg
lret
fisubs
data16
and
lahf
add
stc
xor
notb
jnp
insb
lret
test
bound
jne
imul
fdivs
lock
scas
addr16
mov
mov
shrl
in
mov
negl
cmp
into
in
leave
sub
ds
aaa
xchg
test
xor
cmpsb
out
dec
pop
inc
and
push
xchg
icebp
push
sub
test
fisubrs
imul
cmp
add
ret
dec
lea
jle
les
push
and
pop
mov
cmpl
into
insl
pop
into
pop
andb
cwtl
fdivl
mov
mov
and
mov
cld
ds
inc
mov
sub
cmp
sub
fdivrp
pop
sub
mov
divl
addr16
push
pop
xchg
push
cmp
and
push
in
call
iret
mov
das
hlt
enter
xor
pop
nop
sub
add
jo
cmpsl
cmp
pop
popa
daa
jle
sub
pop
fbstp
cwtl
shll
pop
jp
mov
mov
icebp
enter
mov
hlt
fidivrl
ds
sbb
repnz
stos
scas
push
test
sbb
clc
insb
mov
push
fwait
add
repz
mov
lahf
sbb
jne
aaa
out
je
and
je
push
pusha
in
stos
std
mov
shlb
add
cmp
imul
sbb
push
mov
mov
sub
test
mov
adc
cmpsb
mov
push
xlat
into
mov
add
mov
sub
adc
sbb
daa
xchg
scas
cld
dec
sub
loopne
pusha
mov
xchg
cmp
xor
in
dec
cmpsl
int
daa
loopne
push
in
or
mov
mov
out
daa
insl
pushf
mov
inc
insb
int3
in
mov
sub
inc
rcr
orb
hlt
test
cwtl
push
lods
jl
add
lret
mov
and
push
xchg
clc
dec
pop
mov
mov
negl
inc
ds
pusha
jge
repz
lret
loop
pop
hlt
mov
inc
addr16
jns
movsb
rorl
sub
filds
sbb
add
cmpsl
ljmp
jmp
into
push
idivl
ja
ds
cmpsb
add
push
mov
fstpt
or
aaa
shlb
sbb
xchg
lcall
and
jnp
stos
jns
mov
cli
and
cmpsl
repz
jnp
mov
and
xchg
jb
filds
or
cmp
cmpb
iret
lods
mov
push
pop
and
lret
into
call
jne
mov
pop
mov
call
xor
daa
inc
fisttpll
orl
or
into
in
adc
and
inc
pop
cmpsb
fsubl
dec
pop
stos
movsl
lock
dec
leave
mov
insb
loope
inc
inc
jge
iret
or
adc
stos
aam
mov
inc
in
jmp
je
rorb
testb
std
cltd
dec
fcoml
and
pop
mov
and
fsubrl
mov
out
xchg
or
outsb
dec
mov
mov
or
andb
sub
and
aam
pop
xchg
popf
cmp
xchg
cltd
and
ret
mov
sbb
int3
mov
sub
ljmp
mov
loope
idivl
sub
add
jnp
dec
xchg
in
xchg
jecxz
mov
jg
int
and
scas
enter
ret
xor
cmp
push
dec
mov
ja
push
xor
jl
iret
addr16
jg
out
jmp
lds
aad
fnstsw
jmp
inc
or
xchg
stc
dec
xlat
or
jbe
or
ss
dec
jno
xchg
imul
aaa
pop
xor
mov
push
nop
dec
pop
mov
stos
aad
push
lods
int
data16
and
int3
sti
xchg
in
or
ds
mull
mov
das
dec
sbb
movsb
mov
add
and
std
mov
fcoml
dec
jnp
icebp
sbb
hlt
cmc
and
pop
inc
lcall
imul
mov
stos
lea
ret
jmp
imul
adc
mov
fdivrl
popf
sarl
pusha
test
loop
cmp
psubb
rcrb
out
or
jo
jle
mov
mov
bound
sbb
aad
inc
test
sub
adc
cs
dec
bswap
loope,pt
pushaw
or
push
mov
xchg
hlt
mov
js
sub
es
mov
and
test
mov
mov
xchg
ja
into
jne
ljmp
lea
ret
outsl
xchg
ljmp
cmpsb
mov
insl
rcll
jbe
adc
push
push
enter
dec
inc
mov
test
push
iret
jbe
shl
sub
int
push
add
mov
push
fwait
push
mov
jl
sbb
lcall
cmp
add
jns
repz
jge
xorb
jecxz
imul
add
nop
add
mov
inc
fidivs
out
repnz
mov
pop
leave
mov
les
mov
adc
xchg
mov
dec
mov
sub
js
lret
popa
dec
jmp
adc
aad
mov
fisttps
lods
stos
inc
jae
jae
inc
push
pop
shll
iret
xor
mov
sub
add
add
inc
test
mov
leave
inc
flds
cmpsl
test
xchg
into
pusha
orb
pop
jle
incb
xchg
mov
cld
lock
jnp
lret
call
mov
mov
dec
mov
cli
mov
jge
sub
fwait
stos
mov
sbb
cmp
scas
out
xor
icebp
mov
push
mov
imul
int
ficoms
imul
sub
xor
ret
test
nop
push
jns
cs
dec
inc
jnp
rcrb
test
sub
rcrl
adcb
imul
mov
pop
jne
xchg
lods
mov
and
repz
cmp
addl
cmc
adc
add
imul
add
test
lea
mov
xchg
add
xor
push
xchg
mov
stos
fs
add
cwtl
imul
cmp
xchg
iret
sahf
leave
daa
cmp
mov
push
adcb
int
cwtl
push
mov
loope
stos
dec
push
aad
and
lcall
mov
ret
mov
imul
out
aaa
je
js
xchg
nop
and
nop
sub
sbb
stc
mov
jno
andl
arpl
jno
xor
movsb
cmp
cli
sub
push
cmp
aam
pop
lods
xor
jmp
out
icebp
out
inc
and
lret
das
into
test
xchg
into
fs
lds
cmp
jle
pushl
jnp
shl
das
mov
mov
jl
jmp
add
in
and
stos
stos
cmc
addr16
sbb
push
xlat
add
fcompl
dec
es
call
int
push
es
xor
push
sub
jns
shrl
sbb
jle
sti
jnp
stc
imul
mov
sub
cli
inc
xor
stos
inc
or
cmp
ret
loopne
inc
imul
inc
mov
mov
loopne
mov
repz
inc
cmp
mov
aas
cmp
push
stos
cmp
pop
mov
mov
sbb
xor
xor
daa
and
in
jp
shlb
mov
scas
inc
stc
out
xchg
lret
ret
mov
outsl
jecxz
jg
mov
xchg
loop
xor
dec
shrb
xchg
sbb
xchg
pop
pop
and
filds
sahf
or
mov
cld
loopne
in
aam
test
jmp
scas
mov
imul
xor
mov
in
nop
push
add
or
push
in
and
push
xchg
cltd
out
sub
add
pop
pop
lea
or
jecxz
aam
or
pop
xchg
and
fucomp
sarl
jb
jno
scas
adc
mov
add
xlat
mov
mov
xor
mov
push
int3
in
xchg
pushf
aas
in
push
leave
movq
fbstp
pop
or
push
icebp
jecxz
in
int3
out
or
or
push
inc
lods
sub
pop
xor
jnp
or
scas
inc
xchg
test
sar
ja
dec
roll
popf
dec
sub
dec
in
xchg
arpl
mov
push
outsl
jp
jmp
mov
outsb
jle
andl
push
shr
lret
repz
lcall
es
popa
test
xchg
mov
adc
jge
inc
pop
js
dec
mov
push
mov
pop
xchg
sbb
xchg
jnp
push
std
aad
cwtl
dec
nop
pop
loope
imul
pop
imul
push
dec
adc
into
notb
xchg
ljmp
rcl
and
sbb
outsb
scas
mov
add
jmp
popf
sub
imul
int
push
sbb
and
jnp
dec
dec
mov
jmp
mov
dec
add
cmpsb
mov
sbb
xor
xchg
fiadds
xor
xor
ds
js
cs
ljmp
push
in
dec
mov
pop
shlb
adc
iret
jb
or
sub
test
mov
testb
xchg
and
xchg
shll
or
xchg
bnd
xchg
jmp
xchg
hlt
imul
mov
in
or
daa
popf
jae
testl
cs
dec
sbbl
aaa
int3
decb
sbb
lods
imul
jle
fwait
mov
mov
rcrl
sbb
shrb
mov
jae
fwait
push
ss
aas
and
inc
cs
in
push
testl
leave
callw
mov
fldenv
sbb
addr16
add
push
popl
cmpl
aas
xchg
jecxz
dec
lods
mov
pushf
inc
jle
sub
pop
repnz
ljmp
jmp
fwait
aaa
or
jp
push
jae
mov
add
push
mov
loope
ficompl
pusha
gs
sbb
push
out
lcall
and
push
cmpsb
rorb
sahf
mov
icebp
push
add
push
movsb
push
inc
push
dec
movhps
test
jno
mov
aad
xchg
jp
punpckldq
cld
aad
pop
adc
push
jno,pn
xor
test
sbb
cmp
paddsb
gs
hlt
mov
sbb
nop
imul
in
xlat
lods
dec
aas
mov
add
pop
das
ret
mov
es
sub
sub
sbb
cmp
les
add
lods
dec
in
cmpsl
sar
lods
ds
add
sahf
push
and
cltd
imul
mov
mov
loope
jp
xor
loope
repz
sub
lahf
cmp
lock
pop
sub
add
lahf
mov
out
pop
hlt
in
xorb
movsb
shl
outsb
push
cmc
int3
hlt
mov
jle
jl
test
mov
and
pop
rol
movsl
adc
jecxz
or
and
mov
aad
out
call
xchg
pop
xor
add
mov
shll
pop
add
push
mov
jp
pushf
enter
shl
sub
nop
ljmp
and
imul
xchg
sqrtps
mov
lret
add
adc
pop
daa
pop
xchg
mov
push
lds
cmp
cmp
sahf
pushf
call
roll
adc
sub
inc
sub
inc
or
sub
add
and
aad
mov
inc
jp
add
daa
or
hlt
pop
lcall
lds
mov
shl
hlt
xchg
dec
adc
add
je
sub
sbb
adc
call
mov
stc
sti
repz
fwait
xor
add
push
call
lcall
call
popf
pop
fmuls
mov
nop
ffreep
mov
fldt
lret
dec
push
mov
push
cmc
stc
in
rorb
cmp
bound
pop
enter
into
push
cmp
adc
jb
sbb
xchg
cmpsb
pop
out
icebp
jp
es
repnz
mov
mov
nop
mov
js
mov
pop
aad
push
ret
xlat
outsl
sbb
cmp
mov
movsb
add
dec
or
cmp
fsubr
xor
add
adcb
dec
in
scas
fldl
inc
dec
movsl
insb
mov
outsl
xor
xor
add
mov
pop
cmpsl
hlt
test
push
xchg
fisubrs
adc
aas
jl
push
xor
mov
push
test
sbb
aas
lret
arpl
mov
es
lcall
iret
rolb
shll
mov
push
cmpsl
gs
cmp
jg
push
xor
mov
pop
rcl
dec
lahf
movsl
cld
js
loope
test
hlt
out
lahf
adc
pusha
fisubs
push
into
ffreep
testl
insl
scas
pop
sub
xor
mov
sub
jb
ret
mov
jno
int3
and
mov
sahf
inc
xchg
fwait
sub
loopne
out
imul
rclb
xchg
jl
shl
jae
aaa
aam
das
pop
push
roll
sbb
pop
aaa
cmc
in
fdivrs
test
mov
das
dec
loopne
arpl
mov
mov
fiaddl
mov
into
pop
mov
sbb
xor
lret
in
lahf
movsb
push
xor
xchg
loope
mov
andb
or
lret
add
adc
cmp
test
inc
jo
jmp
lods
pop
dec
rclb
mov
dec
shl
xchg
in
mov
iret
cli
outsb
fdivrs
push
mov
mov
aad
loope
movsl
pop
lea
sub
pop
push
pop
mov
cmc
cltd
and
sub
loopne
imul
daa
cmc
jl
push
lret
ds
insl
insb
lahf
add
push
test
mov
out
nop
sub
ss
sarb
jmp
scas
cmp
lret
fbld
adc
adc
pop
out
insb
stc
test
inc
das
jl
xchg
ret
cwtl
adc
outsl
and
aad
push
and
dec
xchg
dec
stos
push
in
dec
hlt
jo
fiaddl
xchg
out
fs
pusha
js
inc
mov
dec
inc
add
push
loopne
pushf
jo
mov
cwtl
xchg
and
mov
ja
adc
jge
or
and
sahf
cmpl
movq
into
or
lahf
push
jne
mov
push
sbb
xor
pop
mulb
or
adc
enter
data16
mov
push
xor
fsubr
aas
xchg
sbb
push
pop
in
pop
cli
ljmp
push
addr16
cs
jp
jns
inc
loopne
outsl
inc
stc
xchg
lret
or
mov
call
xor
outsb
dec
repz
cs
xor
sbb
imul
insl
xor
xor
orl
loop
fisttpll
nop
rol
or
fwait
or
cmp
mov
mov
cli
scas
lahf
in
movsl
sub
ja
mov
int3
dec
frstor
rolb
adc
adc
inc
pop
inc
out
test
loop
out
stos
sub
xor
stos
js
stos
xor
jmp
jb
jg
or
pop
js
lret
adc
xchg
and
sbbb
cmc
lds
jecxz
mov
mov
pusha
popf
cs
sahf
inc
mov
je
add
mov
jne
lret
push
into
jno
dec
xchg
fsubrl
sub
or
jmp
cmp
sub
pop
aad
lock
sub
mov
lahf
dec
sbb
lcall
dec
sbb
xchg
lret
popa
add
ljmp
insb
xchg
mov
bound
imul
shlb
das
fsubs
fisubs
sub
xor
sbb
and
fldt
mov
or
scas
popf
pop
xchg
add
ficoms
mov
push
push
loopne
inc
ds
lret
inc
push
sbb
in
dec
pop
ret
jb
inc
lcall
or
jb
mulb
stc
mov
ss
mov
inc
dec
int3
movsl
push
repnz
mov
jno
fisubs
rcrl
jg
shlb
mov
stos
mov
es
test
or
inc
and
leave
int
out
mov
xchg
xor
sti
xchg
aad
push
aas
mov
leave
gs
pop
xchg
push
out
popf
addb
loopne
or
jle
cwtl
out
addl
pop
enter
sub
adc
sbb
push
insb
dec
jmp
or
popa
sub
daa
or
ret
insl
add
cmpsl
xor
pop
ds
repnz
jge
inc
out
insl
test
push
add
mov
sub
cwtl
inc
and
mov
nop
mov
cltd
arpl
dec
call
movzwl
sub
es
and
repz
jno
mov
jg
pop
inc
pop
iret
mov
mov
or
mov
adc
cmc
and
inc
cld
add
cmp
pusha
push
lods
mov
sub
loope
mov
push
xor
fdivl
jge
mov
bound
sbb
into
mov
stc
pop
pop
sub
arpl
jbe
push
cmp
out
sub
cmp
cmp
call
jmp
sbbl
cmpl
ja
dec
test
cli
and
adc
cmpsl
ficoml
call
int
arpl
pop
icebp
lods
outsb
push
inc
mov
les
aad
dec
inc
adc
mov
push
xor
ja
push
inc
shrl
ja
fdivrs
dec
inc
mov
imul
fdivl
out
push
adc
jle
push
cmpsl
push
aad
addb
insb
insl
add
xchg
inc
push
je
jnp
out
bswap
js
sub
sub
push
xchg
in
mov
pop
movsb
icebp
and
ss
push
inc
sub
adc
hlt
mov
push
call
or
enter
xor
ret
loop
arpl
lahf
scas
fucomp
ret
int3
push
lret
pop
pop
inc
out
aad
jbe
inc
outsl
cmp
sbb
fucom
mov
add
ret
and
pop
cmp
pop
fsub
cmp
shll
xchg
in
add
cltd
add
roll
ret
das
push
push
dec
sub
out
pop
add
mov
and
add
sub
fcomps
xchg
rcl
ret
mov
mov
arpl
in
jae
test
or
les
test
jecxz
adc
jns
mov
addr16
les
ja
jmp
les
pop
adc
and
add
popf
inc
das
jmp
out
xchg
xchg
mov
bound
lcall
cmp
imul
dec
es
mov
jnp
mov
and
fildll
mov
pop
sbb
adc
loopne
and
and
es
sbbl
push
cmpsl
push
rorl
adc
data16
je
movsl
dec
push
inc
inc
roll
xor
or
out
jmp
iret
lods
lret
push
das
cmpb
fwait
adc
mov
out
xchg
dec
test
data16
mov
shr
lods
test
lahf
test
and
sbb
or
es
sbb
jle
sub
imul
fwait
jbe
add
loopne
inc
hlt
sub
push
ret
sub
adc
fnstenv
jle
sbb
fmuls
xchg
into
dec
addr16
pop
imul
ret
and
inc
rolb
fsubrl
orb
aaa
stos
gs
sub
mov
dec
or
rorl
and
mov
sahf
or
mov
out
out
or
xor
loope
pop
or
dec
fsubrs
aas
jb
rcrb
lret
xor
pop
sbb
into
or
lea
lods
stos
sbb
push
mov
or
outsb
mov
mov
leave
outsb
and
sub
lock
sub
bound
cld
jecxz
orb
pop
iret
es
sub
dec
mov
and
movsb
push
sub
sub
cmpsb
ret
ret
jp
jnp
push
mov
insl
mov
cmp
jmp
ret
xchg
sbb
push
aas
xchg
inc
and
imul
andb
inc
mov
add
xor
inc
inc
loopne
dec
lods
dec
xor
inc
push
imul
fldt
inc
lock
sbb
xchg
outsb
lret
adc
out
mov
dec
call
jae
iret
je
xor
ds
jle
cmp
mov
stos
ss
ja
xchg
fwait
shlb
push
nop
jne
push
pushf
iret
pushf
jmp
dec
aas
mov
into
loopnew
test
fisubrl
or
popl
cmp
repnz
adc
das
push
dec
jno
jb
test
jno
js
in
ja
sbb
stc
xchg
mov
sub
movsb
jns
cmp
jg
xchg
cli
mov
rol
lock
imul
sbb
push
stos
rcll
or
mov
push
jae
fxch
ds
dec
adc
bound
adc
pop
sub
jmp
sub
inc
jnp
shl
xchg
xchg
mov
fistpll
push
jbe
in
lea
test
in
adc
xor
mov
outsl
xor
xchg
aaa
xchg
in
je
testl
mov
xor
add
test
push
inc
jg
rorb
sbb
cvttsd2si
pop
icebp
movsb
push
imul
inc
rorb
pusha
inc
push
cmpl
pop
inc
in
aam
sti
or
add
fcoms
or
hlt
xor
icebp
cld
pop
clc
ret
pop
xlat
mov
jle
lret
mov
loopne
addr16
es
jo
aam
int
mov
sbb
arpl
jbe
inc
cmp
or
insb
cmp
rclb
ljmp
push
roll
inc
push
aad
mov
movsb
mov
cmc
out
int3
xchg
add
imul
jnp
stc
mov
inc
int
and
dec
aas
or
rclb
mov
fwait
xor
jg
ljmp
lds
push
rorb
jle
cmp
clc
leave
into
pop
stos
mov
sbb
andl
aas
aad
pop
filds
aas
lock
sbb
xorb
ss
icebp
fdivl
xchg
xchg
or
mov
mov
outsl
frstor
pop
adc
mov
mov
jae
fcomps
push
jecxz
push
nop
jmp
imul
push
xchg
fnstcw
lods
ss
popa
int
jne
sbb
xorb
fiadds
loop
sbb
push
fldt
mov
ja
jbe
pop
enter
aaa
adc
cmp
mov
fiadds
incb
and
lods
into
lea
lret
jbe
std
push
xchg
daa
popa
outsb
jp
jno
add
sbb
and
mov
cltd
mov
idiv
mov
aam
in
adc
sti
xchg
pusha
sub
cli
out
shrb
in
ficoms
cmp
insb
inc
jmp
loop
or
xlat
dec
xlat
gs
mov
jno
test
fbld
mov
mov
daa
sub
vpcmpgtb
mov
and
repnz
jmp
xor
in
push
lods
lahf
cmp
fisubrl
popa
pop
xor
add
idivl
mov
and
out
xchg
mov
mov
cwtl
pop
cltd
mov
lcall
leave
push
not
in
repz
negb
imul
xlat
mov
test
jne
ja
in
dec
data16
fsubr
sbbl
xchg
popa
je
outsl
dec
call
lock
cmp
ds
fnstsw
cmpsb
pop
cli
fisubl
mov
mov
lods
mov
stos
and
mov
push
ficoms
out
imul
outsl
or
sbb
xor
out
xchg
add
xchg
sbb
mov
fildll
push
and
inc
jecxz
adc
scas
sti
loope
insl
fwait
sub
cmp
rcrl
stc
xor
xchg
adc
fimull
add
mov
out
mov
cmp
or
mov
mov
movsl
cmp
push
fxch
ds
mov
ds
int
movsl
cmpsb
loope
push
sbbl
out
push
jns
xchg
fdivl
hlt
popf
pop
dec
or
xchg
fwait
ja
xlat
test
pushf
or
adc
adc
stc
mov
pop
frstor
sbb
in
cwtl
mov
adc
bound
std
int
nop
test
cmp
pop
xor
xchg
orl
jbe
aaa
fsts
aam
inc
inc
sbb
pop
pop
add
out
popf
adc
dec
xor
out
mov
popa
push
js
inc
movsl
xor
ljmp
sub
xchg
out
rcrb
mov
adcl
xlat
rcrb
cmp
fisttps
xor
imul
fbstp
adc
jns
jmp
sbb
push
adc
adc
jb
xchg
divb
add
push
push
inc
mov
cs
sub
jb
sub
scas
in
add
mov
dec
mov
jne
shl
ja
imull
mov
pop
jbe
frstor
ret
push
or
test
test
into
mov
mov
cld
mov
cs
push
fsubrs
push
notl
in
inc
loope
pop
data16
mov
add
decl
and
mov
jg
das
xor
lret
adc
hlt
sahf
ret
imul
or
int
cmc
adc
int
sub
pushl
sub
cmpsl
xchg
sbb
enter
cmc
add
cmpsb
cli
inc
or
dec
das
dec
mov
jb
scas
data16
cmpsl
clc
xchg
push
pop
test
pop
mov
sbb
popa
ja
mov
lods
fsub
dec
rcrb
sbb
and
or
inc
and
loope
jl
jmp
inc
gs
loop
adc
push
aam
jle
outsl
add
jge
ss
sub
insb
jg
ds
fldl
push
popa
sbb
test
test
nop
outsl
insb
aam
lods
sbb
mov
mov
adc
cli
addr16
push
fisttps
xchg
sub
enter
fnstcw
jnp
adc
flds
or
lret
push
mov
jno
shrl
xlat
push
iret
pop
imul
mov
sbb
dec
ljmp
sub
cmp
cmp
imul
ljmp
pop
or
ret
int
jl
loope
mov
out
arpl
in
inc
sub
cmp
xchg
cmpsl
xchg
sti
jg
or
out
mov
and
mov
dec
int
sbb
arpl
dec
and
or
adc
mov
out
in
push
lods
adc
xor
lret
cmpsl
pop
cmp
push
inc
clc
dec
adc
mov
cs
and
and
sub
xor
scas
leave
mov
mov
popa
insb
rcrb
data16
repz
mov
mov
ret
aas
sbb
mov
pop
pusha
jge
lret
dec
xlat
jmp
int
mov
imul
aam
dec
call
sbb
mov
je
cmc
int3
jg
mov
mov
pop
mov
and
dec
xor
adc
test
pop
daa
cli
push
adc
popa
into
rcpps
out
hlt
xchg
mov
mov
addb
push
xchg
js
add
jnp
movsb
addl
xor
std
cmp
and
ss
ror
jnp
xor
test
clc
or
cmp
mov
in
cmp
in
adc
loope
dec
ljmp
aaa
add
inc
jmp
push
pop
jecxz
arpl
lcall
lcall
sub
js
sbb
into
repnz
sub
push
jmp
shlb
and
ds
mov
andl
rcrb
xchg
pop
aaa
sbb
pop
adc
sub
adc
sarb
mov
mov
mov
jmp
imul
jnp
test
call
push
jo
pop
jne
cmc
jge
insb
fbld
inc
das
xor
outsl
int3
sahf
or
ljmp
push
pop
sub
push
mov
test
fisttps
loope
push
into
or
insl
in
fwait
movsb
jbe
pop
lahf
div
lea
push
mov
out
mov
mov
or
test
cmp
int
xchg
icebp
dec
dec
ret
mov
fsubs
pop
std
cltd
cmp
outsb
das
cmpsb
cmc
dec
adc
in
inc
sub
pop
cmc
xlat
inc
mov
jge
xor
push
cmp
push
test
adc
xchg
outsb
and
or
loope
mov
out
mov
jne
cs
pop
adc
je
jg
xchg
jmp
lods
xlat
mov
cmp
inc
cmp
rol
neg
lods
xchg
insl
push
jae
pushf
out
mov
push
push
mov
inc
xchg
sbb
pop
inc
xor
lret
test
inc
movsb
cmovl
ret
cmp
faddp
pop
sbb
ja
sbb
pop
fstpl
pushf
ja
jnp
xchg
jne
test
mov
ds
fmuls
xchg
pop
or
sahf
loop
lods
in
mov
mov
iret
insb
mov
jge
mov
xchg
sub
loope
xchg
xchg
jbe
fwait
xchg
xchg
inc
notb
xor
ds
hlt
mov
mov
test
out
lahf
inc
mov
add
out
pushf
mov
xlat
mov
add
sbb
fs
lds
int3
push
bnd
cmp
daa
mov
xchg
dec
push
mov
sub
sarl
pop
xor
fcom
aaa
stc
dec
cwtl
cmp
imul
cmp
movsl
rep
xchg
leave
sbb
psrld
mov
repz
pop
fcmovnbe
mov
lret
pop
and
or
pop
adc
jge
mov
ds
scas
insl
push
cmp
push
in
add
cmp
sub
xchg
ret
pop
xor
adc
test
ja
aam
adc
sub
mov
test
and
and
adc
into
mov
loope
pop
or
int
and
loope
sbb
add
cld
je
movsl
nop
mov
xor
xchg
shrb
sbb
mov
cld
xor
mov
into
or
xor
and
inc
loop
cltd
adc
xchg
jbe
and
gs
push
loop
out
test
loopne,pt
popa
or
adc
mov
pop
leave
push
mov
fcomp
fwait
add
push
xlat
mov
sbbl
scas
mov
add
and
hlt
das
dec
mov
mov
iret
xchg
sahf
inc
shll
in
push
mov
scas
sar
mov
dec
cs
repnz
ret
and
cwtl
movsl
fiadds
sub
xor
adc
sbb
dec
pop
in
adc
stos
cld
lods
in
inc
lock
or
imul
aad
and
push
mov
bound
inc
mov
push
mov
dec
nop
ja,pt
lds
mov
ffreep
nop
xor
add
add
enter
pop
sbbl
jo
in
sti
push
adc
mov
shrl
or
fildl
sbb
adc
stc
mov
orl
fwait
jb
xchg
cmp
scas
cld
pop
push
dec
es
cmp
mov
fsubl
es
cmpsl
out
insl
pop
stc
arpl
ret
or
push
aam
cmpsl
adc
dec
fdivrs
lods
fnstsw
stc
jg
sti
dec
and
dec
jb
jo
mov
pop
mov
dec
outsb
sub
dec
dec
cmpsl
pusha
arpl
xchg
in
daa
data16
and
mov
dec
mov
add
imul
lea
pop
call
push
xchg
sbb
pop
testl
stos
rcrl
loopne
in
pop
sub
push
jne
push
movsl
push
adc
lret
div
xchg
mov
push
cld
ficompl
and
xor
cmpsl
mov
xchg
into
pop
inc
pop
andb
out
mov
insb
imul
xchg
xchg
rorb
or
add
cmpsb
lahf
cmp
xchg
shrl
iret
sbb
repz
aam
sub
ljmp
lods
pop
hlt
mov
les
cmp
or
movsb
iret
push
jge
int
inc
push
jb
sahf
stos
scas
aaa
loope
sbb
in
imul
sbb
ja
icebp
nop
sbb
mov
fbld
in
sub
push
ss
push
fbld
and
cs
sub
push
nop
mov
pop
and
popf
and
pop
mov
mov
mov
mov
jecxz
int
cltd
adc
jns
mov
add
lret
les
rcrb
std
push
dec
test
sub
sub
popa
dec
xchg
xchg
in
and
or
jbe
ss
aam
push
fs
sbb
mov
popa
data16
test
cmpsb
fisubl
or
outsb
pop
ss
xor
mov
daa
mov
inc
int
dec
rorl
cmp
sub
lcall
pop
rorl
mov
jecxz
movsb
ja
cs
cmp
lahf
in
sub
jge
jp
or
push
ds
jle
imulb
and
cmp
inc
push
icebp
sahf
dec
popf
into
test
imul
cld
loop
mov
shll
inc
aam
sub
and
inc
adc
adc
pop
push
adc
sbb
or
sub
jne
add
jbe
test
adc
pop
xchg
cmp
add
sahf
testb
xchg
data16
add
aam
out
nop
cmp
push
out
ljmp
insl
into
sahf
jae
adc
test
mov
leave
jb
xchg
pop
pop
je
daa
dec
add
xor
clc
ja
repz
ss
sbb
jne
iret
mov
imul
mov
sub
xchg
movsl
or
cmc
fwait
aas
add
mov
add
xor
jp
or
popa
sbb
sub
enter
fsubs
push
idivb
int3
mov
or
je
xchg
repnz
cmp
outsl
stos
movsb
sub
aaa
stos
out
push
popa
jmp
loop
cwtl
push
clc
or
lcall
push
mov
shll
out
adc
jle
shlb
jmp
mov
mov
ds
adc
dec
dec
pop
and
test
and
fsubrs
adc
movsb
sub
dec
fiaddl
xor
mov
sbb
jle
sub
scas
out
add
repnz
dec
dec
movsb
pop
mov
fldenv
ja
and
loopne
lods
dec
sahf
sub
imul
in
in
cmpsb
xor
jecxz
fisubl
or
hlt
mov
rcll
push
adc
decb
mov
pop
cmc
aad
rcll
xor
ret
sbb
imul
push
mov
shrl
repnz
adc
inc
imul
push
or
adc
repz
nop
movsb
out
ror
xchg
popf
addr16
movsl
imul
dec
sbb
push
mov
mov
cmp
daa
cmpsb
dec
sbb
jno
outsl
pop
mov
mov
in
jbe
and
mov
push
pop
call
push
les
jg
sub
mov
out
pusha
jge
lcall
push
sub
push
arpl
mov
stos
mov
xchg
pop
push
xor
fs
into
mov
add
bnd
ljmp
pop
lock
mov
sbb
fistpll
std
xor
int
inc
test
jle
mov
xchg
xchg
xor
rorl
xchg
imul
cmpsb
sbb
fstl
jp
popa
sahf
idivb
stos
fists
inc
repz
dec
mov
loop
mov
ljmp
xchg
cmc
in
dec
mov
test
scas
popf
cwtl
test
dec
add
sti
add
dec
dec
leave
sbb
mov
pop
sub
fistpl
leave
mov
cmp
pop
test
xor
movsl
sub
adc
or
insl
xor
ficomps
jge
inc
xchg
rclb
adc
xchg
roll
aaa
hlt
stos
ret
dec
test
idiv
mov
loopne
jle
aad
nop
mov
in
pop
push
lcall
insb
test
loopne
jno
xchg
leave
test
push
cmp
negl
incl
cwtl
xor
xchg
inc
adc
lret
cltd
fisubrs
out
and
sbb
jmp
in
dec
xchg
insl
les
dec
cmpl
sub
pop
xor
in
adc
cmp
mov
fisubrl
pop
test
xor
and
jnp
sub
lods
cld
fstl
mov
pop
scas
xchg
or
pushf
and
sbb
xchg
xor
jp
movsl
aam
popf
fs
in
and
test
xchg
imul
xchg
mov
in
inc
bound
sub
add
lahf
inc
test
pop
push
dec
andb
jge
fisubl
ljmp
inc
or
sar
mov
xchg
mov
push
dec
inc
and
lret
cmpsb
loopne
xor
jecxz
dec
test
cltd
pop
cmp
pop
iret
sbb
imul
mov
jmp
push
jb
pop
addl
outsb
and
jne
sbb
jo
rcl
sbb
imul
loopne
xchg
scas
into
push
and
cmc
xchg
push
mov
jg
sbb
pop
sti
std
mov
repnz
inc
mov
xchg
sti
push
sbb
std
xlat
xor
push
rol
setp
ret
sarl
aam
mov
nop
scas
out
jmp
push
add
pop
inc
cli
push
and
jns
or
js
ficompl
push
lock
push
mov
stos
test
xchg
or
fmull
sti
cmp
clc
icebp
jb
ljmp
or
jbe
iret
loop
cmp
xchg
mov
or
pop
stos
sub
inc
or
cmc
jg
decb
mov
mov
xchg
sbb
push
fiaddl
leave
pop
xchg
inc
es
lods
sbb
test
shll
xchg
dec
add
pop
incl
stos
xchg
rclb
adc
outsb
sub
or
dec
jae
fwait
roll
stos
add
xchg
dec
jb
adcb
in
jns
ljmp
cld
repz
cs
sbb
xchg
xor
dec
adc
mov
sbb
mov
adc
test
ss
jb
xchg
adc
cmp
push
adc
cli
cmp
rcrl
test
iret
adc
pop
sbbb
aas
pop
inc
push
dec
jp
sub
imul
and
iret
jns
pop
iret
stc
scas
add
popa
jno
sub
mov
xchg
and
repnz
arpl
jne
fwait
cltd
lods
lea
xchg
mov
cmc
pop
mov
inc
push
stc
cmpsb
pop
add
sbb
inc
leave
subb
xlat
rcr
mov
hlt
aad
je
sbb
pop
xchg
jg
adc
or
xchg
call
pop
and
outsl
cmpsl
int
mov
lahf
push
cli
jle
call
sbb
bound
mov
test
sbbl
fcmovb
mov
call
jns
lret
push
mov
lods
mov
loope
mov
cmpl
push
push
mov
incl
pop
in
push
xchg
mov
push
adcb
imul
jb
pop
in
andb
test
jp
ds
mov
adc
aaa
hlt
loope
clc
rcl
mov
mov
sahf
jo
arpl
xchg
loopne
int3
push
jmp
or
jmp
shlb
adc
rcrl
gs
ja
inc
cld
jbe
xchg
jno
xor
mov
dec
inc
jmp
imul
stos
jb
jecxz
jno
sub
in
jmp
data16
sub
scas
jle
xchg
add
xchg
and
mov
mov
pushw
mov
push
push
xchg
test
loopne
stos
xchg
lcall
and
fcoml
outsl
je
dec
shl
jecxz
mov
mov
in
mov
fucomp
outsb
cmp
xchg
sbb
jl
inc
push
cmpsb
or
repz
rorb
cs
ret
lds
les
cmpl
cmpxchg
in
ss
sub
and
pop
call
push
out
sbb
mov
orl
pop
xor
lock
movsb
test
sarl
pop
daa
aad
pop
push
mov
iret
pop
or
aaa
cmp
pop
adc
repnz
ljmp
fimull
js
rclb
arpl
sub
pop
xor
fprem1
dec
push
push
xor
fildl
ret
ds
xorb
push
sbb
leave
or
sub
or
dec
rcl
xlat
xchg
test
hlt
repz
shr
adc
push
aam
repnz
jns
jns
add
jo
iret
aam
in
xchg
pusha
xchg
sbb
mov
adc
xor
xor
les
mov
outsb
sbb
sub
stos
or
stos
cmp
out
add
test
adc
stc
pop
jbe
adc
mov
push
scas
lcall
xchg
push
mov
jge
xor
mov
sti
jns
or
push
out
adc
and
mov
hlt
mov
xor
jl
dec
std
xchg
pop
xchg
xor
pop
jecxz
inc
daa
decb
mov
xchg
orl
xor
xchg
cmpsl
pop
scas
scas
push
adc
leave
fcomps
repnz
or
scas
mov
ret
das
or
sub
mov
hlt
mov
jecxz
xchg
pop
mov
xchg
pusha
js
std
inc
mov
mov
mov
je
sahf
inc
into
sub
pop
test
cmp
cmp
sti
mov
cld
pop
out
scas
add
je
mov
sub
jno
dec
andl
inc
scas
sub
sbb
sub
dec
sub
cmp
bound
push
out
icebp
xor
push
fisttpl
inc
xchg
call
dec
pop
xor
or
pop
xchg
lret
lock
and
jecxz
popa
and
cmpsl
adc
rcll
sbb
popa
or
jmp
jb
sahf
dec
fistpll
dec
push
inc
and
mov
lahf
loop
outsb
test
inc
lret
inc
sub
mov
lods
pop
push
add
sub
mov
movsl
push
cmpsl
xor
and
xor
mov
orl
pushw
cmp
pop
mov
jle
scas
test
and
mov
pop
pop
sti
icebp
subl
stos
dec
push
clc
movsb
add
shrb
sub
mov
into
adc
test
sahf
rcrl
pop
addr16
mov
xor
sub
int3
fdivs
mov
pop
push
push
cmpb
imul
fcom
fucom
adc
call
sub
mov
cmpb
pop
jb
add
pop
adc
cmp
mov
sahf
test
enter
push
adc
mov
aam
cmp
fcoml
and
bound
push
dec
adc
mov
jecxz
add
mov
mov
push
popa
enter
shrl
xchg
push
dec
lods
dec
rcr
mov
and
jbe
xchg
mov
pop
mov
icebp
add
cmp
jo
lock
popf
xchg
cmc
add
orl
add
lcall
lock
fbld
stos
or
popa
add
repnz
xchg
xchg
mull
int3
jo
loope
and
add
pop
and
loopne
sub
cmp
sbb
dec
lahf
mov
icebp
jb
push
pop
je
add
xor
shlb
dec
fildll
cs
cld
jne
dec
jne
add
push
mov
scas
cltd
xor
leave
aaa
pop
repz
add
sbb
popa
rol
sbb
fsts
shl
lahf
inc
mov
in
outsb
pop
cmp
mov
push
int3
daa
addl
jle
fmuls
es
sub
imull
push
loop
inc
jbe
dec
ljmp
mov
outsl
test
addl
mov
inc
pusha
hlt
mov
int
sarb
je
scas
add
inc
push
lea
or
imul
inc
cli
stos
gs
adc
in
sub
js
jg
mov
loopne
push
arpl
and
cs
add
push
dec
and
fldcw
subl
pusha
jne
mov
daa
jbe
sbb
nop
dec
fdivr
int
rclb
adc
rorb
jmp
fsubrp
xor
push
addb
rcll
or
fadd
push
inc
daa
test
pusha
jnp
ss
mov
jg
aas
mov
mov
data16
insl
push
rorl
jbe
push
and
xorb
mov
js
out
dec
xor
iret
cmp
int3
xchg
cmp
jb
add
and
movsl
mov
dec
inc
addr16
lahf
aam
sub
cmp
xchg
push
sub
jnp
and
popf
jmp
jle
gs
movsl
mov
pop
pop
pop
iret
jae
jnp
roll
pop
pop
jb
jp
fstl
sbb
fstp
xor
sub
jnp
sti
or
mov
sub
mov
xor
outsb
adc
cmpsb
shrb
loop
add
add
xchg
scas
and
cmp
insb
popf
push
jo
imul
jl
xor
mov
xor
cmp
loope
ljmp
dec
jl
divb
outsl
in
sbb
shll
jle
insl
pop
imul
scas
dec
add
outsb
pop
loop
call
fldenv
movsl
add
mov
jmp
push
push
testl
pop
loope
mov
mov
xor
mov
jae
repz
xchg
add
scas
sbb
xlat
pop
mov
testb
insl
jge
idiv
out
and
iret
push
mov
or
sbb
inc
mov
fimull
icebp
sub
push
clc
or
jbe
inc
pop
shrb
sub
cmpb
cmp
aaa
xchg
xor
dec
push
insl
je
pop
lret
shlb
xorl
inc
xchg
cld
aad
mov
gs
xchg
aaa
in
sbb
ror
mov
inc
stc
xchg
mov
sub
outsl
adc
xchg
sub
ljmp
rorl
cmc
and
divl
push
xchg
inc
pop
adc
scas
rolb
xor
jg
daa
push
fisubl
push
pop
sbb
cs
test
cmp
pop
dec
loop
mov
jbe
das
push
idivb
xchg
pusha
enter
sbb
jno
or
in
sub
mov
aas
mov
or
push
fsubrl
mov
push
repnz
xor
xchg
sub
movsb
pushf
scas
mov
mov
mov
test
jmp
jns
mov
mov
or
jmp
in
sub
cwtl
mov
cmp
sbb
loop
jne
mov
inc
push
cmp
nop
shlb
mov
cmpb
pop
leave
clc
les
add
jmp
ret
mov
cmpsb
shrl
lcall
sub
mov
fisubs
lock
sbb
xlat
xorb
int3
dec
or
les
and
dec
hlt
mov
test
inc
xor
pop
and
cmp
sub
cmp
and
xchg
les
inc
mov
pop
sbb
bound
adc
gs
jp
call
gs
sub
dec
mov
in
aam
stos
jns
add
dec
aam
mov
xchg
pop
in
or
aaa
rcll
cs
pop
and
adc
push
fdivrp
cmc
lahf
pusha
dec
nop
ret
jle
pop
jmp
pcmpeqw
sub
fsubl
mov
inc
cli
jne
add
mov
cwtl
adc
xchg
js
mov
aam
sti
imul
xchg
andl
loopne
and
adc
push
mov
sub
iret
inc
clc
sahf
sbb
sbb
dec
icebp
test
cs
cltd
inc
lret
inc
pop
add
fisubs
cmp
test
xor
insb
repz
jge
filds
dec
leave
cld
jmp
loope
scas
mov
out
push
test
fucom
or
add
adc
mov
pusha
sub
rcr
lds
fidivrl
faddl
ret
jae
lcall
inc
lea
outsb
sub
movsl
jmp
pop
insl
add
cmp
stc
faddl
and
mov
push
stc
enter
clc
movl
xchg
ljmp
cs
sub
ds
cmp
imul
push
and
or
sub
enter
cmp
or
cmp
jecxz
fs
ds
out
jle
jno
out
and
inc
out
pop
add
mov
outsb
test
push
mov
sub
ljmp
out
subb
jecxz
mov
xchg
xchg
and
mov
lcall
mov
mov
sahf
notl
mov
test
lcall
cmpsb
and
lret
mov
test
ficoml
into
mov
arpl
pop
xchg
inc
iret
ficompl
jg,pt
inc
push
sbb
xchg
pop
jae
rclb
repnz
xor
cs
out
idivl
aad
mov
inc
cmp
int3
jns
or
xor
in
mov
jge
popf
or
mov
imul
jb
mov
jl
test
fiadds
xor
push
push
test
mov
xchg
or
es
xor
imul
add
mov
sub
push
jle
in
pop
mov
or
adc
jp
push
cmpsb
xchg
aad
sbb
mov
ss
ret
mov
mov
adc
jne
rolb
and
lock
stos
lods
mov
int3
push
and
orb
out
xor
pop
jle
mov
das
mov
in
push
or
icebp
add
or
mov
dec
xchg
lea
xchg
cltd
bound
pop
fidivrs
stos
inc
test
ljmp
into
push
aad
pop
mov
add
inc
mov
bound
xor
push
or
cmc
repnz
scas
sbb
xchg
in
dec
pushf
pop
jno
cld
fimull
mov
adc
pop
push
push
and
push
into
sub
rcrl
and
xor
popa
lods
jo
dec
add
cmp
jnp
xchg
cmp
dec
xor
push
xor
leave
push
xchg
sub
js
divl
mov
sbb
push
mov
xor
inc
shr
testb
sub
je
xor
int
imul
sub
frstor
loop
mov
and
enter
mov
push
das
and
cmp
std
add
jo
adc
hlt
pop
or
pop
cmp
mov
mov
cltd
sub
inc
popf
das
jno
aaa
and
or
mov
test
mov
pop
test
enter
mov
rcl
out
jmp
xchg
mov
mov
sub
mov
push
out
push
lds
in
adc
jle
push
sub
and
mov
test
pushf
mov
sub
incl
xor
jecxz
adc
inc
out
aaa
daa
push
mov
or
xchg
fidivrs
cs
mov
inc
out
fsub
sar
xchg
daa
sub
and
mov
push
jmp
mov
or
dec
fdivrl
jno
movsb
xchg
sub
stos
fimull
ja
sub
xchg
test
rcrb
fsts
mov
cmpsb
int3
std
xchg
dec
xchg
test
test
out
push
mov
sbb
or
jg
fucom
mov
rolb
cltd
int
sub
stc
int3
lods
stos
pop
push
fstpt
xchg
out
jg
testl
adc
push
das
test
ss
add
adc
and
lahf
jmp
xor
pop
add
out
jp
lea
out
popf
push
in
mov
test
icebp
pop
mov
je
and
lret
mov
fistpll
push
popf
lret
les
mov
jl
jae
cwtl
sahf
push
pushf
inc
and
jbe
js
jmp
mov
ret
pop
ret
test
cmp
rorl
jne
and
sub
add
hlt
xor
cltd
jge
sarl
adc
xor
mov
sub
daa
rcll
or
push
dec
je
dec
add
lcall
mov
insb
enter
adcb
cltd
dec
cwtl
mov
jecxz
xor
and
xlat
ds
pop
testb
shrb
mov
pop
decl
mov
and
or
daa
inc
jge
outsl
out
movsb
dec
ficoml
lea
or
xor
jo
inc
mov
push
inc
cs
sbbb
daa
js
mov
inc
mov
pop
outsl
das
enter
mov
aam
push
mov
repz
inc
lret
test
aaa
aaa
mov
aas
jns
jbe
andb
push
pop
adc
dec
daa
les
lahf
scas
jmp
adcb
jbe
daa
pop
inc
xor
je
pop
sarl
andb
pop
in
out
das
dec
lcall
lods
fcmovbe
push
mov
pop
sti
lret
xor
xchg
int
lods
sub
std
enter
mov
push
aad
mov
test
js
insl
cmp
mov
pop
dec
adc
leave
int3
mul
mov
cmp
jmp
mov
stos
xchg
push
inc
int3
dec
dec
pop
or
push
test
out
push
mov
inc
in
cli
aam
mov
lret
mov
sarl
pusha
xchg
sub
movsl
mov
cmp
call
loope
imul
xor
insl
imul
stos
aam
je
in
add
mov
inc
xchg
jb
scas
fidivrs
out
add
lret
jae
mov
cmp
repz
lahf
loop
cmp
sub
or
dec
pop
pop
xor
into
repnz
pushf
scas
outsl
aaa
or
sub
inc
mov
js
outsl
das
cmc
jmp
out
fcomip
mov
add
lcall
shrl
insl
push
hlt
test
fbld
insl
and
out
xchg
inc
sbb
pop
aad
push
inc
out
mov
inc
inc
dec
pop
xor
loope
inc
or
xor
daa
mov
out
fst
sub
jl
push
shrl
mov
pop
pop
and
xchg
ljmp
cmp
sbbl
fistl
mov
out
xchg
addr16
aas
push
into
stc
mov
lods
data16
insb
mov
cltd
jae
or
in
add
repnz
enter
or
mov
add
call
andb
out
and
cld
mov
cltd
ret
mov
push
sbb
mov
aaa
das
mov
enter
push
pop
push
scas
mov
lods
into
loopne
fimull
or
imul
stc
adc
jecxz
xchg
std
sub
mov
jmp
adc
test
jne
adc
push
and
aad
jo
pop
jbe
add
sarb
daa
rorl
loope
jo
out
add
shrl
fdivrs
mov
dec
xchg
and
xor
push
lcall
cwtl
sti
cmp
scas
insb
xor
and
xor
or
mov
xor
imul
lahf
in
std
repz
decl
xchg
clc
into
repnz
test
cmpsl
push
mov
popf
xchg
xchg
push
mov
les
pushw
or
xor
imul
pushf
sub
and
cmp
inc
cld
cmp
pop
into
int
xor
xchg
into
pop
lock
xor
cmpsl
inc
and
sbb
sub
inc
mov
fimull
xlat
jne
sbb
jno
stos
jle
js
pop
mov
popf
jmp
fcmovu
xchg
cmp
je
push
jne
out
jns
fnstcw
pop
mov
xor
pusha
pop
dec
jle
or
push
adc
aam
xor
mov
sbb
push
push
icebp
dec
outsl
xor
lods
xchg
mov
inc
mov
push
adcb
jns
repnz
lock
sub
sbb
bound
rcrl
int3
dec
jno
aaa
mov
cmp
sbb
sub
inc
jmp
ret
rcrb
mull
cmc
xchg
rorb
test
pop
mov
sbb
in
inc
mov
je
adc
jo
lods
inc
and
ja
mov
add
int3
in
cwtl
sti
sbb
ret
out
test
inc
mov
sarb
repnz
xor
in
movsl
test
cltd
out
addr16
mov
sub
jge
mov
xchg
pop
dec
aad
stc
sbb
push
in
or
lods
push
mov
sub
pop
xchg
stos
xor
inc
mov
xchg
mov
imul
sub
mov
pop
adc
adcb
or
movsl
sbb
push
xchg
cld
mov
mov
mov
movsb
das
fwait
sarl
inc
imul
dec
sbb
or
loope
inc
mov
mov
pop
push
xchg
cmpsl
lcall
int
pushw
fldt
call
jbe
inc
ljmp
jno
cwtl
lret
decl
jno
push
mov
sbb
popa
cmp
push
test
push
push
xchg
outsl
lret
int3
mov
cmp
cmpsb
outsl
out
and
mov
movsl
push
fucomip
pusha
xchg
addr16
add
jb
dec
and
cltd
pop
adc
outsl
push
xchg
mov
cmp
jmp
mov
stos
push
jecxz
sbb
setbe
xor
stc
or
sub
mov
sub
mov
push
and
or
fs
mov
mov
in
sbb
sbb
mov
int
loop
and
xchg
jb
fildll
and
pusha
xchg
and
cwtl
das
aas
inc
mov
call
adc
xchg
adc
sbb
nop
stos
push
push
sbb
mov
push
pop
pop
cmp
pop
mov
leave
in
add
inc
dec
or
js
jno
xor
push
mov
into
xchg
negl
jg
fldenv
pop
out
xor
mov
add
fdivs
int
adc
push
add
stos
lock
repz
lahf
or
dec
xor
xchg
cmp
push
pop
push
mov
sbb
dec
les
mov
nop
pop
imul
add
out
js
shl
adc
jge
fiadds
push
dec
call
lret
sub
vpavgb
mov
and
sahf
scas
mov
aaa
mov
es
scas
icebp
lock
fistl
lret
pop
dec
jb
outsl
insl
lret
or
stos
in
lret
sub
inc
fisttpl
add
or
imul
sbb
lret
sub
pusha
dec
or
data16
and
sub
gs
cltd
je
andb
push
xabort
push
xchg
es
mov
xor
sub
call
dec
repz
jo
xchg
cmp
cltd
mov
xchg
and
out
sahf
cmpsl
adc
and
adc
stos
in
js
imul
cmpb
cmpb
mov
fwait
or
scas
test
push
jbe
xor
mov
cmp
roll
push
or
dec
in
addr16
cmp
cmpsb
pushf
mov
test
xlat
xorb
push
es
and
mov
std
aaa
push
out
jno
sar
out
fldcw
adc
cmc
pusha
sbb
xchg
push
xchg
fisubrs
or
sub
pavgb
int3
imul
fisubs
cmpsb
mov
jmp
or
sub
lock
inc
cmp
cmpsl
out
and
cld
fs
mov
xor
dec
fildll
sub
jae
push
lea
bound
adc
pop
jbe
push
sub
sbb
push
xchg
adc
add
xchg
add
mov
loope
stos
sbb
shll
test
das
jbe
add
aas
rcll
pop
pop
out
jecxz
lret
inc
mov
or
sub
push
sub
sub
test
lret
push
fwait
dec
cs
aaa
mov
push
add
adc
mov
cmpsb
lds
pop
dec
bound
adc
jmp
adcl
sahf
ret
sti
fmull
sbb
inc
xchg
and
xchg
test
outsl
cmp
jbe
mov
pop
mov
outsl
sbb
adcl
lcall
out
push
mov
dec
clc
pop
mov
mov
sub
sub
ds
xchg
lret
mov
jge
popf
pop
xchg
and
mov
or
out
out
jp
or
jg
xchg
mov
xor
mov
jmp
rclb
mov
gs
xchg
lea
rorb
shll
or
test
push
out
sbb
xcrypt-cbc
cmpsl
adc
mov
fidivs
lea
pop
add
imulb
add
popa
or
xor
mov
push
sbb
push
js
imul
fnstenv
lock
xor
pop
pop
aaa
sbb
andl
jl
push
jmp
js
pop
es
hlt
call
insl
lock
mov
or
popf
cmp
adc
jbe
daa
and
movsl
mov
inc
orl
or
cmpl
jno
insb
in
pop
sarb
cltd
mov
push
rol
pop
aad
cli
std
pop
lea
into
jecxz
jbe
daa
adc
cli
fimull
pop
stc
faddl
lock
push
ljmp
cmp
dec
mov
sarl
sbb
repnz
push
push
addr16
loop
or
and
pop
or
xchg
adc
and
cmpsb
pop
xchg
xchg
and
xor
fadds
outsl
std
subl
movsb
dec
xor
ror
jnp
lea
push
xor
inc
and
int
inc
push
js
push
dec
cmp
inc
inc
mov
aaa
lock
test
jne,pt
pusha
push
dec
jge
cmp
scas
rol
mov
or
mov
mov
jns
insb
xor
cmp
imul
mov
dec
test
ficoms
push
repnz
push
or
xlat
insb
push
sub
fdivs
push
push
inc
enter
in
mov
fnstcw
shrl
ret
xchg
stc
pop
pop
xor
or
inc
mov
nop
aam
or
in
jbe
add
dec
jmp
push
and
nop
sbb
movsl
xchg
mov
sti
int3
shlb
fidivrl
pop
push
aam
add
or
lods
inc
js
shrb
mov
inc
dec
repz
push
out
sub
stos
dec
cwtl
movsb
jbe
push
je
mov
les
mov
pusha
xchg
sub
es
adc
mov
lods
es
jmp
and
mov
pop
fdivl
mov
xor
jecxz
push
adc
je
sbb
pop
rcrl
xchg
push
pushf
xchg
outsl
lahf
mov
push
enter
fcmovnb
jecxz
imul
cltd
mov
mov
pop
hlt
xchg
in
ret
rol
lea
lcall
repnz
test
jnp
int
in
pushf
jbe
sub
inc
loopne
lea
mov
insl
push
xor
sub
lods
mov
fs
xor
xlat
int
and
test
movb
add
gs
lcall
aaa
hlt
subb
nop
stos
cs
push
sub
andl
pop
xchg
mov
pop
sbb
cwtl
sub
in
push
xchg
aad
mov
pushf
xor
pop
cmp
lcall
adc
out
pushf
sahf
push
mov
and
lret
rcrl
mov
push
adc
iret
nop
scas
inc
mov
cmp
push
add
je
xor
inc
cmp
pop
or
icebp
and
adc
jae
xchg
pop
sbb
sarb
pop
daa
sub
push
xchg
sbb
fwait
add
dec
cmp
stos
pop
and
hlt
mov
push
xchg
les
fimuls
test
int
jecxz
jbe
inc
ret
push
test
push
push
sbb
es
inc
xor
and
xchg
pop
movsl
sbb
sbb
push
fsub
push
xor
and
mov
push
std
sahf
mov
hlt
ds
xor
scas
sub
clc
ss
mov
or
sbb
inc
fidivl
into
push
repz
or
popf
mov
orb
sbb
xchg
ljmp
pushl
loop
jae
mov
pop
add
mov
ds
cmp
pushf
fsubrs
test
and
imul
arpl
loope
sti
into
test
lahf
pop
arpl
nop
cmp
sbb
push
incb
fbstp
test
jmp
mov
aas
xchg
inc
add
cmp
pusha
inc
ds
push
and
pop
mov
pop
cmp
movsl
lock
cmp
dec
or
add
push
mov
sub
xor
aam
loopne
cmp
sbb
roll
test
adc
shl
jb
mov
push
subl
aaa
lds
mov
cltd
xchg
or
adc
mov
mov
mov
mov
jle
add
test
dec
sbb
sub
jp
jecxz
les
xchg
dec
pop
xchg
pop
sub
sub
gs
std
inc
ss
push
mov
jp
fs
push
sti
data16
xchg
inc
add
outsb
cmp
sub
add
mov
clc
pop
inc
pusha
clc
jmp
inc
in
or
jns
pop
fnstenv
vandps
push
scas
fstps
outsb
sub
xchg
jbe
aad
daa
push
jmp
lahf
pop
jb
cs
std
mov
adc
loopne
dec
push
stos
adc
addl
test
mov
enter
mov
mov
xor
mov
and
out
mov
ret
dec
popa
dec
adc
inc
addr16
cmp
lret
test
mov
leave
aam
xchg
push
mov
icebp
movsl
dec
test
jo
std
mov
cmp
addb
repz
or
mov
or
out
leave
mov
iret
jg
lea
insl
cmp
push
mov
mov
ds
iret
stos
mov
shl
repz
pop
jl
mov
pop
inc
mov
fwait
shll
test
call
mov
dec
fistpll
call
push
ficompl
addr16
mov
dec
sahf
inc
or
push
add
into
inc
sbb
push
push
sbb
jp
fwait
or
and
lods
nop
jmp
jmp
cwtl
push
cld
push
rorl
pop
xor
aas
pop
clc
inc
popf
je
inc
adc
dec
xor
lea
ds
ljmp
xchg
stc
jo
jge
ljmp
rcl
and
sub
ret
adc
stos
and
pop
call
jb
mov
test
add
add
cwtl
sahf
adc
movsb
mov
add
mov
pop
adc
addb
rolb
sarl
ret
pop
lds
les
xchg
pop
push
inc
out
pop
notl
addr16
fnstsw
lds
mov
jg
pusha
addr16
push
outsb
cmp
add
cmp
rcrl
mov
out
shll
les
mov
in
fwait
arpl
add
rcr
mov
jg
nop
arpl
xchg
dec
or
sbb
add
mov
roll
fildll
xor
mov
fwait
jle
mov
inc
mov
sahf
jmp
mov
loopne,pn
inc
cmp
push
inc
sub
je
mov
test
mov
push
roll
cwtl
sub
xor
sbb
fmul
stos
shl
or
jp
fsubr
test
push
inc
in
test
stc
or
sub
iret
inc
push
add
mov
or
call
pusha
in
xor
jg
cmp
aaa
mov
in
pop
jle
mov
lods
je
and
fcmovnbe
jl
jp
mov
sub
ret
rcll
icebp
jb
sti
clc
lea
add
aam
pop
pop
mov
rolb
lret
add
lcall
sarb
sbb
mov
xor
lahf
icebp
adc
hlt
xchg
add
pop
sbb
jns
mov
faddl
scas
out
call
sbb
int3
xchg
push
imul
ds
mov
repnz
cmp
pop
mov
mov
dec
or
push
push
pop
pop
test
ret
aam
pop
fidivrs
push
int
add
xor
cmc
inc
sbbl
lret
jl
pop
xchg
mov
pop
ja
inc
out
jne
cmp
aas
mov
inc
out
rcl
popf
je
cmc
push
push
xchg
lds
lret
or
scas
xchg
mov
mov
and
push
movmskps
inc
add
or
jo
filds
movsb
pop
or
and
inc
loopne
imul
rorl
mov
jp
clc
test
cmpsb
mov
jg
mov
and
dec
fisttpl
mov
cmp
dec
cmp
outsl
lcall
lahf
pop
xor
mov
dec
add
enter
jae
ret
cmpsl
mov
cltd
dec
xchg
sbb
or
fwait
lret
cltd
adc
je
xor
popf
sbbl
mov
or
fnstsw
ret
pop
iret
das
or
inc
ljmp
cli
mov
lahf
stos
inc
jg
addr16
ret
ret
inc
popa
scas
cltd
push
inc
popf
mov
xchg
adc
sub
add
or
inc
rolb
cmp
sub
mov
scas
jmp
mov
mov
mov
push
inc
mov
xchg
hlt
adc
gs
fcoms
mov
mov
cmp
cmp
in
icebp
scas
cmpl
push
out
repz
dec
lcall
fnstcw
inc
inc
popa
mov
and
dec
inc
jmp
jmp
xchg
sbb
mov
ds
mov
rcl
or
ljmp
sub
jae
dec
sub
inc
jb
xor
pushf
icebp
lret
xor
mov
mov
xor
add
xchg
jg
push
mov
mov
add
push
sbb
ficompl
sub
in
test
cmpsb
and
push
nop
data16
aas
fsubp
lock
jge
jb
outsl
cmp
pop
rcrl
dec
loope
ret
mov
pop
shr
cmpsb
push
mov
cmp
loope
jbe
push
pop
dec
icebp
mov
add
adc
jl
xor
popf
ljmp
jle
push
je
mov
mov
aaa
mov
js
pop
mov
mov
dec
daa
mov
lods
mov
sub
repnz
or
cmp
sub
cmp
xchg
sbb
sbbb
dec
daa
lea
sbb
adc
sub
xor
rolb
ret
xor
enter
dec
mov
jmp
mov
cmpsb
mov
jl
jle
outsl
lods
in
scas
aam
ljmp
mov
mov
xchg
aas
data16
jle
add
cmp
loope
sarl
xor
adcl
loopne
push
adc
sahf
rorb
insl
fstpl
in
mov
imul
mov
or
movsl
mov
push
pop
inc
mov
mov
cmpsb
dec
mov
pop
sub
ljmp
xchg
aas
adc
add
fcomps
fnsave
stos
push
orb
push
cltd
js
inc
shrl
loop
sti
jmp
ret
fisubrs
shl
aam
mov
and
fistps
inc
addr16
jle
jle
scas
xor
arpl
fimull
xor
test
push
xlat
mov
hlt
imul
test
push
notl
push
jns
inc
loope
push
xor
push
mov
cs
mov
sbb
push
fsubs
or
jg
mov
insb
add
insb
lods
les
jge
adc
dec
push
dec
dec
popf
mov
inc
mov
out
xor
and
cmp
clc
es
pop
jecxz
pop
xchg
leave
adc
lret
rorl
int3
xchg
shrb
jmp
mov
andb
sub
into
dec
dec
in
adc
movsl
and
into
stos
lock
sbbb
cltd
gs
xor
or
mov
int3
lret
mov
std
inc
in
or
popf
or
test
or
push
pop
arpl
xor
scas
sbb
jg
cmpsl
xlat
ss
cmp
dec
cmpsb
fldl
xor
inc
pop
or
push
cwtl
or
pop
repz
hlt
sbb
cli
imul
popa
sub
mov
scas
cmp
xorb
push
rorl
pop
ds
arpl
xor
in
outsb
push
push
and
jns
das
adc
mov
push
dec
or
push
push
inc
lahf
pop
xchg
jl
dec
imul
in
xchg
das
push
hlt
aaa
ljmp
cld
mov
fcmovnu
and
test
jle
push
rcll
in
movsb
xchg
mov
sbb
xchg
or
iret
ja
add
sub
sbb
nop
push
dec
sbb
test
stos
shll
pop
sti
das
mov
mov
xchg
loopne
rcr
mov
xchg
push
ror
jb
jne
scas
push
pop
insb
push
add
cmp
jl
dec
jge
fisubrs
adc
add
cld
sub
mov
fnstenv
pop
xchg
sub
xchg
jp
adc
or
jb
jle
push
xchg
mov
xchg
sbb
xor
dec
scas
jecxz
imul
xor
jp
add
push
xchg
mov
imul
and
lods
popf
cmp
cmp
push
loope
mov
mov
int3
sub
stos
push
pop
and
jnp
dec
mov
in
pop
lea
pop
sbb
add
cld
push
mov
movsb
ret
push
iret
movsl
sbbl
out
inc
mov
mov
and
popf
imul
sbb
xchg
aas
push
out
mov
push
mov
addl
data16
dec
sub
insb
rcr
xchg
pop
inc
dec
cmpsb
jge
lcall
push
jmp
pusha
cmc
cmp
loope
xchg
and
sbb
xlat
dec
ljmp
nop
sub
popa
fprem
jno
mov
pop
lds
push
dec
mov
rcrl
loope
add
dec
imul
cmp
or
sbb
or
mov
aaa
mov
mov
lea
lcall
xchg
pop
sub
xchg
dec
sub
imul
rorl
and
rcll
add
or
push
push
repnz
movsl
or
das
inc
jno
cmpsl
cmpsb
das
jl
leave
xchg
ret
dec
call
shlb
scas
call
push
lcall
stc
cmp
repz
scas
xor
cmp
cltd
cmp
sbb
shr
lahf
fisubs
mov
dec
pop
xlat
jae
add
mov
jb
mov
imul
mov
aaa
fiadds
inc
mov
rorb
fstl
mov
bound
out
in
mov
scas
mov
jb
scas
mov
hlt
addr16
add
cmp
std
pop
testb
mov
sbb
gs
jp
pusha
pusha
dec
sub
jae
in
sub
enter
mov
fstpt
iret
das
cmp
adc
inc
insl
mov
fnstenv
add
idivb
int3
sub
xchg
jo
adc
lret
push
push
flds
xchg
sahf
and
jl
repz
cmpsl
fistl
fnstsw
out
js
fdivs
les
test
frstor
lock
divb
xchg
xchg
pop
mov
xchg
out
mov
sar
mov
ret
adc
lret
push
mull
or
or
cmpsl
sbb
cli
outsl
mov
jne
loop
insb
dec
inc
nop
jae
adc
imul
enter
mov
sbb
in
xor
sub
ficoml
lea
push
icebp
push
das
clc
pop
lods
lahf
shlb
lds
mov
xchg
stos
mov
fsubr
or
mov
out
fsubs
sar
out
fidivrs
cmpb
dec
jb
inc
push
pop
sub
ljmp
jae
fcom
ficompl
fyl2xp1
pushf
lret
xlat
rcrl
push
js
aad
or
pop
repnz
movsl
fisubrs
xor
push
daa
sarl
xor
and
push
sub
jae
jnp
shl
and
pop
push
add
mov
in
xchg
dec
or
or
xor
ficoml
fisttps
cmp
stos
int3
and
fnsave
lcall
pop
push
mov
cmpsl
lods
xor
nop
cmp
mov
pop
les
sub
jno
daa
repz
out
and
adc
into
or
pop
pop
push
repnz
cmp
pop
inc
adc
push
mov
lds
inc
cltd
lock
cmp
sarb
stos
lock
sbb
enter
insl
sub
test
popa
add
add
jno
inc
test
scas
dec
jb
xchg
adc
jb
lret
jbe
mov
mov
and
lds
clc
inc
mov
dec
xor
in
test
xchg
pop
sbb
nop
insl
data16
pop
push
add
test
cmp
adc
int3
jl
fimull
push
in
adc
push
icebp
rep
and
andb
into
lret
js
push
enter
xchg
lds
xchg
fcoms
cltd
jae
stos
rcll
xor
push
dec
sub
and
mov
notl
mov
xor
cwtl
imul
push
and
mov
pop
push
movsb
push
les
sub
aas
mov
or
jnp
fcomip
mov
lret
test
jg
jnp
xchg
test
inc
adc
mov
shrb
fisubrl
adc
dec
sbb
push
sub
fucom
push
xor
sbb
stos
sub
addr16
mov
adc
jg
xor
jmp
mov
push
flds
inc
cmp
lods
push
pop
mov
test
mov
xchg
cmc
ret
hlt
fwait
push
adc
in
xchg
movsl
sub
popf
cmp
cltd
ljmp
jb
bound
fcompl
dec
stos
outsb
pop
and
imul
inc
negl
push
enter
in
and
mov
shrb
loope
add
repnz
pop
gs
jl
shlb
js
out
add
sti
out
shll
dec
pop
jge
pop
orb
jb
pop
movsb
jle
hlt
loop
shrl
dec
or
and
jle
or
loopne
mov
lcall
fldenv
pop
movsl
ds
sti
xchg
arpl
xor
adc
push
xor
arpl
xchg
mov
adc
mov
call
mov
jle
loope
ret
sar
lret
mov
add
fs
das
or
jmp
cmp
xor
lea
push
pop
xor
stc
gs
arpl
das
mov
sbb
add
test
test
sbb
les
call
push
out
adc
aas
lea
jbe
jp
insb
xor
jl
mov
inc
sbb
xlat
mov
mov
insb
ret
pop
icebp
sbb
mov
push
cltd
mov
sbb
xchg
add
jl
push
mov
ret
in
xchg
push
cs
add
lods
push
add
adc
test
inc
adc
jns
inc
xchg
mov
dec
mov
jg
mov
outsl
imul
pop
lahf
sahf
sub
cmp
cmp
in
fisubl
mov
mov
es
nop
jo
daa
lods
xchg
stc
lret
push
shld
aas
rcr
lds
cmp
xchg
dec
aas
cld
pop
enter
rol
cmp
mov
mov
xchg
mov
test
mov
xsha1
cmpsb
dec
icebp
int3
ja
push
js
popa
les
or
push
and
jle
je
push
lahf
loop
xor
outsl
cmp
pop
jmp
in
jp
int
dec
push
jp
jae
inc
xor
hlt
call
and
mov
push
mov
jmp
xchg
in
into
dec
lock
leave
int3
enter
xor
dec
sub
in
pop
in
test
orl
out
add
and
fstps
orl
dec
mov
out
movsb
fisttpl
jge
and
inc
adc
jle
lods
cmp
rorb
jns
stc
mov
enter
std
push
stos
out
dec
push
mov
inc
sbb
mov
xlat
inc
mov
mov
push
cmp
sbb
daa
jl
and
je
lods
jae
iret
imul
es
stos
mov
clc
add
pop
xor
call
mov
inc
pushw
mov
lret
fistps
test
repz
test
call
mov
push
push
lahf
mov
and
daa
sahf
in
xchg
adc
push
jmp
jmp
inc
mov
imulb
sbb
sbb
pop
in
sti
inc
fcoml
aad
sub
outsb
or
inc
mov
out
cwtl
aad
mov
stc
nop
scas
lock
mov
inc
inc
dec
iret
call
addr16
fsubl
push
push
outsl
lret
cs
inc
jg
cmp
add
in
fbld
stos
pop
push
scas
mov
lods
cwtl
das
sbb
sbb
cmpsl
adc
std
cs
add
cmp
lods
imul
jge
cmp
pop
cmpsl
loop
fisubrs
pop
xor
pop
xchg
repz
or
and
imul
and
and
mov
inc
popf
xlat
inc
dec
sarb
xchg
loopne
mov
shll
and
sub
cwtl
xor
cmp
sti
jbe
outsl
divb
stc
ljmp
add
dec
testb
mov
test
xchg
add
cli
rorb
repnz
pop
add
inc
loop
pop
icebp
scas
je
ret
xchg
incb
imul
call
cltd
xor
jnp
pop
rolb
inc
or
data16
inc
xlat
cld
sbb
lret
sbb
nop
xchg
push
into
pop
push
je
jo
dec
jbe
lret
inc
scas
inc
mov
push
sti
xchg
jae
out
loop
mov
repz
and
mov
out
shl
jg
ds
cmp
ret
cwtl
sub
sbb
in
mov
jb
cmpsl
xchg
cld
lahf
stc
add
jb
into
mov
int
sbb
repnz
dec
in
shlb
xor
jne
out
test
jp
mov
into
and
pushf
std
loop
pusha
mov
xor
jo
rorb
mov
mov
xor
mov
es
inc
cmp
mov
movsl
imulb
pop
enter
stos
insl
in
jl
or
jb
push
insl
dec
push
xchg
xchg
mov
pop
ret
add
loopne
xchg
xchg
mov
dec
add
test
pop
and
add
mov
and
sbb
pop
stos
aam
pop
aad
dec
insl
sbb
push
jae
cmpb
xchg
ret
mov
imul
or
cli
pop
push
sti
cmc
or
mov
das
mov
and
nop
cmp
jb
testb
xor
mov
int
scas
mov
subl
mov
pop
jno
or
aad
or
icebp
pop
xor
sbb
mov
shll
into
xor
xor
dec
pop
call
call
cli
call
xor
push
rcr
shrl
pushf
cmp
jg
out
jecxz
cmp
add
sahf
xor
inc
ljmp
mov
mov
negb
mov
ljmp
leave
mov
xor
and
and
cltd
test
frstor
lahf
push
or
mov
push
inc
shll
bound
bound
xchg
mov
in
dec
pop
stc
fwait
xlat
rcr
popf
outsb
or
xor
sub
repz
call
lcall
and
sbb
pop
outsb
add
adc
into
rolb
data16
push
popf
loop
jle
and
ja
arpl
bound
loope
xchg
adc
sbb
scas
or
xlat
or
xchg
insl
adc
frstor
leave
xor
mov
lock
xchg
inc
cmp
jmp
cmpsb
es
lds
cmp
insl
adc
iret
repnz
mov
dec
xchg
fs
mov
subl
insl
scas
scas
gs
pop
aas
dec
sbb
adc
cmp
out
inc
sbb
dec
fwait
or
popf
dec
shrl
pusha
lea
push
push
and
cmp
adc
mov
scas
add
es
adc
mov
rcll
push
mov
mov
and
inc
mov
cmp
add
clc
jecxz
mov
xchg
in
nop
xor
xor
push
loopne
nop
mov
xchg
push
iret
int3
xchg
mov
xchg
lods
pop
and
insb
cld
imul
inc
mov
hlt
nop
loopne
popa
adc
test
js
mov
mov
cmpsb
sbb
sbb
insb
out
add
sub
fldenv
repz
pop
sbb
cmp
cmp
inc
jo
xchg
ds
enter
sub
dec
js
jnp
xor
xor
lret
inc
js
pop
and
xchg
sbb
jmp
fstpt
xor
push
nop
test
dec
test
sbb
daa
sub
lods
div
or
xor
and
stc
cwtl
lods
clc
aad
mov
pop
mov
btsl
mov
lcall
cmp
xorb
in
call
mov
dec
fldt
lods
mov
push
add
daa
call
nop
jg
adc
push
aad
and
push
mov
xchg
sahf
mov
enter
into
dec
add
mov
nop
stos
xor
and
rcrl
push
andb
movsb
xchg
pop
fidivrl
jnp
js
loopne
fcomip
mov
adc
shll
jns
cltd
into
imul
rorl
jae
arpl
gs
adc
inc
push
jle
mov
outsb
sbb
mov
xor
faddl
nop
sub
daa
ret
pop
lds
sbb
lcall
push
or
and
lret
loopne
xor
pop
mov
cli
jl
xchg
or
mov
sub
lea
rcll
cmp
prefetcht0
aad
dec
mov
jmp
pop
enter
add
xchg
sti
dec
adc
inc
leave
jmp
adc
push
or
adc
lods
push
movups
mov
xchg
push
adc
or
mov
std
cmpsl
fldpi
push
and
or
or
test
mov
push
xor
es
jbe
inc
iret
fsubs
enter
xchg
sub
test
xchg
sub
pop
ds
pop
xchg
adc
imul
pop
mov
sbb
icebp
xchg
lcall
and
imul
and
inc
adc
sub
cmp
jb
push
cmpsl
fcmovnbe
gs
je
mov
shll
shrb
int3
aas
insl
fnsave
scas
xchg
popl
jae
ljmp
daa
jnp
sub
daa
lahf
fnstsw
jmp
add
mov
pop
cld
push
pop
test
lock
jp
sbb
gs
and
movsl
call
jns
pusha
sbb
mov
push
pop
lods
rcll
dec
testl
lods
mov
int
scas
push
shrb
pop
pop
push
push
jns
call
daa
push
ret
mov
xchg
ljmp
mov
push
cmp
sarb
push
std
adc
stos
test
inc
repz
lods
xchg
aam
xchg
push
jl
and
in
scas
shlb
pop
nop
in
xchg
cwtl
inc
aas
scas
xchg
cmp
jg
mov
test
jmp
inc
jo
sub
push
sbb
aam
dec
movsb
popf
mov
push
push
enter
jnp
xchg
add
cwtl
push
out
loopne
pop
divl
in
push
inc
out
mov
cmpl
lret
std
movsb
and
xchg
ffree
and
in
xor
adc
addr16
das
mov
pop
mov
and
sbb
add
fstpt
outsb
lret
daa
arpl
les
pop
push
daa
sbb
push
pop
jle
lods
imul
jae
data16
mov
stos
push
pop
jnp
or
les
xor
push
lods
xchg
and
daa
divb
push
add
pop
mov
daa
push
cmp
fsub
es
inc
aas
jge
mov
call
in
mov
fistpl
int3
dec
push
sarl
add
jg
pop
fcomip
push
inc
cltd
sahf
rcrl
es
xor
ret
add
cmpsb
xlat
inc
pop
inc
ret
leave
push
xchg
mov
inc
fs
mov
loopne
cmc
sub
out
inc
or
inc
cmp
hlt
inc
cmp
fs
cmc
xor
aad
leave
fdivp
sub
repnz
outsb
xchg
pop
mov
cmp
jbe
stc
adc
push
cmc
mov
fdivr
cmp
pop
jbe
leave
mov
mov
sbb
stc
roll
int
es
add
push
dec
pop
icebp
xor
loopne
shlb
xor
aad
mov
and
cwtl
ss
and
outsl
inc
mov
or
nop
pushf
jns
push
xlat
mov
adc
stos
mov
lcall
xchg
data16
xor
iret
inc
test
data16
pop
imul
inc
divb
imul
push
cmp
lods
cmp
pop
lcall
xchg
jb
aad
fiadds
mov
or
sub
lock
data16
faddl
xchg
inc
lahf
in
jl
int
cmp
popa
jo
ja
inc
xor
ds
sub
sbb
pop
jmp
pop
mov
pop
mov
sahf
push
push
pop
mov
add
jmp
sub
lds
in
into
les
int
rorl
fs
lods
call
insb
sbb
outsb
xor
cmp
sarb
xchg
jo
and
cli
mov
sbb
imul
arpl
xchg
mov
out
mov
xchg
dec
mov
adc
rclb
mov
mov
sti
movsb
pusha
sahf
pop
mov
imul
cld
in
jl
mov
sub
in
add
or
mov
pusha
and
movsl
stos
dec
fidivrs
call
xchg
in
jmp
outsl
xor
fwait
push
lret
clc
ljmp
insw
or
ret
sub
lds
imul
adc
test
and
mov
sub
cmp
test
push
pop
and
sti
mov
leave
in
sbb
lahf
xchg
in
fs
or
cmpsl
shr
loop
cmpsb
xchg
fistl
mov
add
decb
jno
sbb
lock
mov
add
sub
into
cli
sbb
and
push
out
loopne
add
jnp
mov
mov
lret
add
mov
add
sbbb
insl
ffreep
js
fimull
inc
shrb
push
dec
jo
jns
sahf
pop
xor
jg
sbb
pop
inc
jno
xor
lret
xor
mov
fwait
in
jo
or
pushf
ss
insl
pushf
pusha
arpl
les
std
aad
xchg
sub
cmp
pop
adcb
jae
pop
push
push
dec
xlat
jecxz
pop
inc
test
mov
fdivl
mov
jmp
jne
dec
xchg
in
outsb
pop
mov
fsubl
pop
mov
or
movsl
xor
ficoml
sbb
cmp
and
cmp
ja
sbb
into
jns
push
xor
dec
pop
push
push
mov
icebp
inc
ret
fwait
xchg
xchg
or
lahf
mov
lea
fwait
rclb
sahf
or
popf
jle
mov
adc
scas
scas
push
test
fidivrl
jnp
pop
fs
jg
test
cs
or
mov
out
pop
test
and
sub
adc
inc
cmp
dec
andb
aad
inc
add
push
or
in
xor
cmp
adc
fadd
jb
arpl
add
pop
rorl
pushf
lret
lock
clc
test
pop
setle
sub
pop
xchg
int3
mov
rcl
pop
je
or
and
ret
repz
jmp
dec
mov
mov
test
aaa
mov
arpl
ds
mov
nop
push
push
lcall
lret
sub
popf
xchg
enter
and
sbb
ret
mov
test
mov
sub
jp
dec
sbb
les
add
out
dec
jg
jo
iret
rep
cli
inc
push
pop
arpl
cmp
ja
lods
dec
leave
hlt
ror
mov
outsb
in
cs
ja
xchg
mov
cmpsl
push
jb
nop
pop
dec
pop
shll
loope
fnstcw
push
pop
sub
fiadds
add
mov
int3
insb
subb
cmp
add
rorl
ljmp
sbb
in
fs
lea
dec
pop
notb
add
mov
cmpsb
aam
push
loope
icebp
mov
push
fistpll
mov
xor
lret
movsl
xchg
mov
jecxz
pop
dec
sub
in
xchg
push
push
notl
push
pop
pop
dec
int
js
and
fisubs
cmp
mov
sub
fidivrl
fisubs
jp
mov
adc
cwtl
movsb
add
fists
mov
cmp
sub
jmp
adc
insl
inc
cmp
mov
push
xchg
int
jne
ret
call
or
jg
ss
int3
les
fimull
jno
nop
js
mov
add
arpl
pop
stos
mov
sbb
cmpsl
outsl
bound
pop
dec
pop
daa
std
sbb
fisttpl
movsl
jbe
dec
add
in
push
pop
lcall
sbb
xchg
mov
pop
pop
and
sbb
fistl
xor
cwtl
in
push
push
fidivrs
hlt
cmp
push
imulb
sbbl
cmp
mov
dec
in
sub
les
xor
and
xchg
cltd
std
setg
sub
mov
or
mov
repz
adcb
lahf
out
push
mov
divl
mov
int
or
push
mov
pop
xchg
add
xchg
repnz
ret
mov
mov
mov
cmp
sub
add
dec
scas
movsl
jg
mov
in
or
lret
inc
cli
icebp
data16
sarl
jns
mov
cmp
pop
gs
pop
jnp
mov
jmp
inc
mov
arpl
cmp
and
into
mov
aad
adc
mov
or
xor
push
add
xor
sbb
mov
xchg
fldt
jg
jb
insl
andb
movsl
pop
aad
sub
mov
mov
xchg
insl
or
movsb
dec
pop
inc
out
mov
jmp
ja
ljmp
jg
es
or
js
mov
push
xchg
push
in
fwait
sar
mov
pop
lods
push
cmpsl
or
fadds
jo
repz
dec
aas
cmp
mov
aas
cmp
lods
loope
dec
insl
push
mov
sbb
mov
std
sbb
jg
jmp
stos
sarl
addr16
jno
push
xorb
mov
int3
out
ljmp
mov
sbb
jo
pcmpgtb
xchg
test
movq
cmp
into
fnstcw
cwtl
add
jg
test
xchg
sbb
and
cmpsl
outsb
adc
stos
mov
adc
mov
pop
add
inc
cmpsl
lcall
inc
ret
jl
fistpl
cmp
aaa
fs
sbb
jp
aam
mov
jg
xchg
gs
daa
sbb
mov
repz
jne
fldcw
dec
shr
ret
mov
add
xlat
lcall
std
xor
insb
addb
xor
xchg
xor
add
cmp
imul
je
adc
inc
and
mov
xlat
add
bound
inc
popf
stc
sbb
sbb
sahf
hlt
pop
arpl
lock
push
mov
test
test
push
mov
mov
mov
mov
outsl
sar
push
loop
out
jmp
fstl
outsb
aam
loopne
outsl
arpl
and
push
push
xchg
sbb
loope
push
push
lret
bnd
xlat
inc
decl
lock
cmp
push
mov
pop
and
stos
xchg
sbb
sarb
call
test
push
jg
insl
xchg
mov
loopne
dec
rolb
out
filds
mov
out
arpl
aad
std
add
xor
mov
lcall
jp
jle
fidivrl
sub
mov
xor
and
arpl
test
cmp
mov
cli
adc
rorb
inc
mov
dec
pop
fsubrl
leave
xlat
pop
sub
sub
fiadds
lea
call
andl
jb
mov
dec
sbb
lea
out
dec
dec
mov
cwtl
rcr
add
pop
dec
shll
movsl
jmp
enter
cmp
or
mov
insb
xchg
sub
mov
mov
xchg
and
cwtl
mov
push
dec
jg
push
mov
js
inc
xchg
mov
repnz
mov
mov
inc
xor
push
popf
xchg
fldt
push
jns
jecxz
repnz
sub
test
fdivs
pop
cli
out
call
xor
test
cmpb
mov
les
loop
btr
imull
inc
mov
les
rcll
sarl
push
mov
daa
mov
sbb
pop
pop
jl
pusha
xor
fs
adc
mov
repnz
cmpsb
rolb
mov
test
mov
cwtl
add
inc
sub
cli
aaa
loopne
mov
dec
mov
orl
pop
clc
xor
dec
rcl
insl
inc
cmpsl
cmp
cmp
in
jmp
inc
fs
add
ja
push
sbb
enter
imul
mov
jns
enter
pusha
scas
repnz
push
mul
cmpsl
inc
push
or
popa
sbb
fistpll
imull
mov
cmp
ror
lea
pop
xchg
pop
mov
lret
mov
mov
pop
adc
or
add
cmp
enter
cmpsb
mov
xchg
jns
and
loope
push
ret
pop
dec
andb
setb
mov
dec
flds
jnp
mov
stos
dec
and
daa
outsl
push
and
push
iret
scas
fwait
pop
push
pop
ds
sub
dec
sahf
pusha
and
shrb
inc
rcrl
mov
pop
mov
jg
pushf
mov
clc
cwtl
iret
pop
ja
les
sub
sub
dec
mov
jle
lds
jb
jb
cli
les
add
pop
push
and
adc
pusha
mov
jecxz
and
push
ja
imulb
mov
inc
lret
and
in
icebp
or
call
pop
pop
mov
mov
aas
jnp
xor
cmp
cli
sahf
ja
icebp
aas
pop
sub
ja
mov
rcr
or
outsb
adc
xchg
fnstsw
imulb
sub
jp
pop
lods
repz
xor
pushf
addr16
jg
mov
aas
sub
popf
adc
mov
jecxz
adc
and
into
das
ljmp
mov
idivl
sahf
nop
or
mov
jne
jmp
xor
push
dec
push
sbb
fcomip
fisubrs
ja
rolb
ds
ja
cmpsb
or
mov
and
imulb
push
sbb
fstps
imul
andl
imul
pushf
jnp
dec
mov
loope
or
cmc
cwtl
push
insb
jnp
loope
ljmp
or
push
lret
push
mov
fdivrl
fsubs
iret
pop
out
int
push
sbb
fdivrp
add
aad
xrelease
int3
cmp
shll
fs
rcll
adc
and
push
dec
shrb
fs
add
pop
cwtl
dec
mov
cmp
addl
and
add
roll
stos
jmp
outsl
sbb
out
push
sti
fists
sahf
or
lret
xchg
shlb
int
repnz
pop
pop
sbbb
fsts
sbb
inc
and
outsb
ljmp
shlb
mov
inc
stos
push
mov
mov
mov
mov
negb
leave
push
push
mov
inc
out
icebp
add
jnp
call
xor
arpl
lcall
mov
adc
cmpsl
seta
pop
mov
pop
xor
cs
ret
push
shr
fdivp
pop
adc
lods
mov
inc
sbb
iret
push
push
je
adc
jmp
sbb
fildl
push
fwait
xor
rol
popa
idivl
dec
fstsw
cltd
mov
fnstsw
mov
xlat
xor
pop
js
testl
mov
mov
lret
sub
cmpsl
in
idivb
hlt
das
push
mov
pop
mov
aas
xor
xor
push
cli
push
xchg
test
cli
xorb
test
cmp
dec
ja
inc
push
jecxz
mov
sbb
cmp
sub
out
outsb
mov
or
push
lods
call
in
dec
pop
jae
outsb
pusha
xor
mov
dec
popa
pop
jb
aam
inc
cmpb
mov
mov
je
aas
cld
test
pxor
add
les
ljmp
fildl
insb
jmp
rolb
mov
out
popa
imul
push
mov
nop
andb
popl
or
cltd
jmp
push
pop
js
outsb
popf
xchg
repz
test
mov
cmp
aas
mov
sub
xchg
sbb
and
inc
in
pop
sarb
mov
mov
inc
cmc
and
loopne
loop
cmp
sub
and
scas
addr16
sbb
mov
repz
sahf
js
aad
xchg
out
aad
add
xorl
mov
or
jo
idivb
ljmp
push
movsb
pop
negb
push
outsb
stos
jae
jge
add
jl
pop
xlat
sbb
lcall
lret
orb
lods
mov
mov
or
jmp
sbb
and
stc
sahf
xor
sbb
addr16
mov
mov
mov
mov
sbb
push
sti
dec
mov
mov
ja
xor
ror
push
mov
jbe
xlat
div
mov
jns
lea
xor
in
sub
cmp
jbe
shll
adc
es
or
and
pop
sbb
rcrl
mov
shrb
repnz
inc
fiaddl
sbb
cld
inc
inc
xchg
in
and
and
push
mov
cmpsl
daa
mov
decl
mov
rcll
jb
mov
and
nop
jg
mov
int
xor
das
cmp
icebp
les
inc
lea
stc
sbb
inc
faddl
scas
clc
sub
sub
mov
or
xlat
js
add
mov
jmp
fldenv
movsb
inc
inc
pop
add
addr16
inc
pop
add
cmp
insb
push
xor
fwait
pop
xor
int
sub
lahf
pop
rorb
pop
mov
stc
imul
pop
cmp
push
cmpb
cld
addr16
inc
sbb
out
sub
outsb
pop
push
cmp
inc
test
outsl
shrd
push
and
xor
add
xor
and
ja
jge
mov
xor
sub
push
fsubrl
inc
and
cmp
cmp
je
lods
add
dec
insb
mov
aaa
xor
add
out
or
xchg
xchg
mov
mov
test
mov
cmpsl
int
into
sarl
adc
jecxz
sub
sub
mov
cmp
adc
mov
jle
jge
ljmp
icebp
jle
and
xor
jns
ret
sub
push
sub
scas
sub
lea
mov
hlt
push
popf
fildll
push
mov
mov
fsubs
popa
sarl
mov
lahf
adc
or
sbb
rcrb
imul
jmp
cmpsl
mov
lret
push
jbe
xchg
or
sbb
fnstsw
inc
and
adc
cmc
in
pop
in
sub
mov
jo
imul
sub
ret
pop
mov
pop
sub
xchg
sahf
aaa
and
aad
insb
push
scas
add
in
dec
jp
push
and
mov
lret
and
jns
inc
pop
filds
aad
xchg
in
les
int
inc
lret
xlat
stos
mov
and
call
out
lods
inc
nop
mov
loop
mov
ljmp
and
ret
into
sub
jae
mov
dec
sbb
push
stos
sub
fcmovnb
in
pop
ljmp
sub
xor
and
mov
sbb
push
xchg
jb
push
pushf
adc
xchg
cmp
js
sbbl
clc
inc
xchg
inc
xchg
mov
ljmp
out
jge
les
jg
add
stc
movsbl
xchg
sbb
gs
cmp
jl
adc
jp
sub
add
fldenv
insl
push
daa
jae
xchg
jo
xchg
sbb
dec
je
in
mov
test
sub
aam
xchg
call
mov
shlb
or
mov
sub
sahf
ss
adc
pop
and
mov
adc
shrb
fiaddl
divl
jge
outsl
cmp
leave
or
sub
pop
gs
push
arpl
xchg
outsb
sbb
iret
mov
lahf
mov
mov
mov
adc
iret
adc
push
rclb
cmp
push
stos
push
inc
ss
xchg
push
mov
xor
cmpb
push
subb
sub
roll
xor
les
fimull
arpl
idivl
jmp
cmp
and
dec
pop
jo
mov
stos
in
xor
jge
dec
aaa
sub
shl
xor
testb
pop
and
imul
fwait
inc
pusha
jp
mov
cli
ret
std
fdivrs
out
lods
dec
int
mov
dec
in
sbb
scas
shrl
scas
inc
ds
and
subl
cli
pop
xor
sti
inc
sbb
lods
jg
andb
mov
faddp
adc
mov
jbe
lea
add
ja
mov
add
gs
mov
adc
sbb
cmc
mulb
cmp
or
pop
add
shr
cmc
xor
mov
movsl
mov
loop
ret
fsubrs
leave
sbb
mov
sbb
or
dec
xchg
and
sub
ss
mov
icebp
sub
insb
clc
cmpsb
test
add
push
fildl
mov
jb
sub
xchg
arpl
dec
mov
jbe
xor
lret
insl
ss
xchg
sub
lds
cli
pusha
mov
dec
rorb
andl
out
xchg
jns
sahf
scas
lea
mov
ljmp
push
push
jb
shll
pop
movsl
sub
loope
mov
mov
jne
xor
lret
cwtl
pop
cmp
xchg
sbb
popf
cli
ss
push
dec
or
scas
dec
lea
cmp
ljmp
jmp
mov
push
jae
imul
sub
enter
dec
mov
pop
jno
xchg
stos
divb
mov
mov
jne
dec
loop
fnstenv
inc
enter
push
inc
adc
cmpsl
mov
xchg
xor
shll
insl
dec
iret
add
inc
mov
xchg
fwait
pop
in
push
sbb
and
mov
or
cmp
mov
push
mov
pop
fwait
jle
scas
ret
mov
out
dec
xchg
jg
jg
or
pop
sbb
mov
push
bswap
scas
cmpsb
test
cmp
pusha
imul
dec
pushl
decl
mov
and
std
leave
jnp
cld
push
subb
addr16
xchg
shrl
mov
dec
mov
jle
sub
xor
rolb
mov
aas
jo
test
je
outsl
movsl
xchg
scas
aaa
mov
jae
mov
adc
dec
daa
lret
adc
mov
outsb
dec
add
in
mov
dec
outsb
jo
lret
xor
mov
mov
xorl
xor
adc
loop
movsb
stos
je
dec
loope
fwait
mov
inc
xchg
xchg
stos
pop
ret
fmull
in
push
lret
cmp
jbe
cli
mov
ja
push
sub
xor
shrl
test
xchg
pop
and
inc
jl
arpl
outsl
sbb
jmp
cld
rclb
out
mov
mov
ds
cwtl
push
mov
lea
jo
push
lods
dec
pop
dec
cmp
pop
sarb
jge
divb
jle
stos
push
sahf
stos
push
jae
jb
fstpt
lret
ja
fisubrl
lea
imul
xchg
stos
nop
and
xor
pop
mov
mov
dec
jmp
mov
cmpsl
pop
decl
aas
dec
movsb
mov
ja
pop
jae
pop
lds
or
xor
xor
mov
xlat
stc
int
inc
adc
jno
dec
sbb
push
ljmp
out
gs
fistpl
cs
cmp
cmp
push
lods
cld
mov
iret
out
dec
lods
test
xorb
adc
mov
hlt
sub
iret
fs
mov
add
and
push
add
and
fildl
and
add
fistps
push
cltd
sarl
mov
and
test
insl
dec
out
push
mov
mov
dec
fmuls
sbb
cmc
loope
out
cs
fwait
inc
test
and
cmpsb
jne
adcl
jle
mov
mov
stos
fmulp
int
imul
pop
sbb
test
test
arpl
sub
xchg
pop
push
into
fistps
scas
sbb
sbbl
jge
pop
loop
stos
or
cmp
jmp
stos
xor
out
jne
dec
ret
jno
push
sbb
data16
fisubl
xor
jle
sub
pop
jg
add
pusha
and
dec
in
mov
iret
and
popf
cs
push
cmp
push
xor
and
add
push
sbb
xchg
mov
mov
dec
jns
adc
dec
test
cmp
test
inc
jp
mov
jno
negb
xor
ret
and
and
jg
hlt
loop
dec
loopne
icebp
xchg
insl
pop
xor
jo
clc
push
icebp
mov
jo
adc
rolb
lods
es
fdivrs
sub
push
out
js
lods
sub
cmp
jecxz
loopne
add
jecxz
sub
stos
lret
mov
lahf
jbe
xor
xchg
push
int
cmp
decb
mov
xor
xor
adc
bound
aad
sbb
and
sub
mov
ds
push
call
out
fdivrs
cld
gs
sbb
sbb
fdivs
loop
ds
loop
mov
fucomi
dec
jnp
jge
cmpl
xchg
add
adc
scas
inc
push
int3
sbb
push
clc
cli
into
or
das
scas
cmp
scas
cmp
ds
cmp
pop
sub
mov
push
cmp
idivb
jge
push
negl
jp
lret
aam
in
push
pop
pop
push
mov
pop
shrb
test
mov
ja
mov
jnp
jbe
fadd
sub
dec
movaps
or
lock
rolb
jecxz
sbb
imul
sbbl
inc
mov
nop
sbb
shlb
push
lahf
dec
rcrl
aad
sub
in
and
xchg
jo
iret
aam
and
jb
or
fdivs
negl
xchg
sbb
popf
push
popl
xor
add
dec
das
cld
fimuls
roll
mov
sub
insb
out
test
push
scas
push
xchg
call
mov
add
testl
daa
out
dec
mov
roll
add
repnz
push
pop
adc
mov
loope
pop
stc
sar
scas
cmp
rcl
dec
out
mov
push
xor
xchg
xor
sub
ljmp
mov
mov
and
mov
xor
mov
push
sub
dec
sbb
jns
pop
popf
movsb
cmp
xor
pop
pop
jle
mov
adc
mov
mov
or
jns
insl
mov
mov
xor
stos
xchg
popf
pop
push
jg
pop
inc
dec
or
add
popa
loope
add
jl
adc
adc
inc
push
nop
dec
jne
test
lods
sarb
test
add
pushf
add
int3
add
cmp
lds
cmp
or
cmp
stc
cmp
leave
pop
add
stos
stos
sub
fisttpl
and
call
add
leave
shrb
inc
insl
xchg
and
rclb
data16
mov
clc
jo
mov
or
cmp
es
sub
adc
decb
add
popa
sbb
jb,pt
pop
and
dec
pop
outsb
lods
push
insb
inc
pop
dec
aad
das
dec
or
push
imul
inc
sub
imul
jl
dec
cmpsb
or
pop
push
test
in
pop
aaa
xorl
ds
test
adc
movsw
movsl
popf
pop
mov
repnz
sub
jne
aas
data16
adc
lds
dec
inc
inc
orl
jb
icebp
mov
add
sub
loope
pusha
lods
xor
add
sbb
ret
lock
les
imul
mov
inc
movsb
test
push
ds
mov
out
shlb
pop
and
add
mov
fs
push
mov
rorb
jecxz
mov
jbe
pop
or
pop
push
inc
cmpsl
add
cld
sub
jecxz
rolb
fwait
jo
fstpl
or
test
into
lret
xchg
add
aas
sbb
mov
jp
outsl
push
call
in
add
and
or
mov
movsb
pop
adc
stos
es
push
mov
and
mull
jae
in
adc
das
pop
popf
sub
repnz
jmp
xchg
sub
stos
ror
xlat
pop
stc
push
xchg
lods
pushf
or
xorl
fidivrl
js
cmpsl
je
push
add
dec
cli
lcall
mov
scas
add
in
sub
dec
stc
xor
popf
jb
popa
mov
and
out
or
or
add
inc
cmp
mov
xchg
call
jp
imul
insb
xchg
adc
je
ds
push
aaa
int
dec
adc
stos
dec
lds
push
pop
lea
clc
stos
cmp
mov
push
iret
dec
je
lret
shrl
pusha
sbb
xor
cmp
int
fistps
jge
push
cmp
out
pop
mov
sub
cmp
lods
fildl
or
fwait
subl
lcall
fidivrl
mov
aaa
cs
push
push
xor
push
aam
jb
arpl
mov
lret
mov
jbe
ja
mov
cwtl
out
frstor
lahf
inc
cltd
sub
jbe
xor
mov
call
xchg
shll
mov
fdivrs
insb
or
xor
fdivs
sub
popf
andl
mov
jg
jecxz
mov
gs
std
pop
nop
ret
lcall
adc
ror
icebp
mov
sti
push
hlt
popf
adc
cwtl
call
adc
sub
push
divb
neg
jp
jmp
sahf
stos
fimuls
inc
mov
cmp
or
cmp
pushf
call
rorl
sbb
mov
jmp
in
arpl
gs
in
pop
les
test
lret
arpl
xor
inc
out
aam
call
push
sarl
jbe
cmc
insb
dec
cmp
addr16
orb
adc
std
sbb
mov
mov
sub
mov
sbb
mov
fsubs
jne
add
out
dec
xchg
loope
cli
test
aaa
jno
andl
mov
cmp
pop
xchg
sub
iret
mov
lret
rorl
inc
xchg
jmp
out
adc
xor
dec
sbb
or
mov
rolb
and
sbb
sbb
popf
test
jmp
gs
in
push
mul
into
sub
lods
xor
loop
xchg
jecxz
adc
les
xor
jp
pushf
pop
adc
sti
pop
in
loope
loopne
cmp
adc
movsb
insl
addl
addr16
sbb
jmp
and
push
jno
and
mov
mov
jge
arpl
add
pop
psrlw
scas
cmpsb
inc
mov
sub
xorl
dec
shl
jl
xor
cmp
out
mov
popf
push
push
je
inc
xor
and
jo
mov
xor
rorl
jne
push
pop
fidivl
iret
jge
inc
mov
cmpsb
cmpl
js
aas
fxam
inc
dec
rorb
aaa
enter
outsb
jp
push
push
jnp
loope
rorb
cli
and
popl
mov
mov
scas
mov
push
cmp
outsb
gs
scas
stc
inc
ja
jb
add
push
daa
jg
fs
lret
lds
rorl
rcrl
pop
jbe
decl
inc
cmp
xchg
out
mov
loopne
and
mov
inc
out
mov
mov
ds
fidivl
imul
aaa
jle
lret
cmp
jecxz
cli
sub
stos
lock
sbb
dec
jl
cmp
aas
movsb
mov
sbb
fisttps
mov
fnstsw
sbb
stos
fiadds
sbb
fdivl
pop
ljmp
push
pushf
shlb
jnp
movsb
gs
aad
movsb
push
sarl
rorl
out
add
xchg
mov
mov
pop
sbb
or
imull
cmp
les
jno
xchg
push
cmp
les
je
inc
and
sub
cmp
loopne
and
inc
dec
gs
cmp
dec
mov
mov
push
fs
mov
adc
jae
push
clc
pop
pop
jae
rorb
stos
adc
jmp
xchg
cmp
cmc
adc
adc
mov
mov
jnp
out
cmp
pushf
sbb
push
ja
test
push
mov
enter
push
cltd
cmpsb
inc
fbld
frstor
cmp
test
push
enter
cmp
push
loopne
daa
mov
lds
fst
and
dec
gs
outsb
mov
lods
test
fbld
push
mov
lods
je
nop
push
lret
out
insb
pop
mov
xor
test
call
stos
hlt
jmp
adc
mov
mov
lret
xlat
inc
sub
testb
imul
cltd
ret
jp
mov
insl
jo
or
mov
ljmp
jg
fwait
icebp
xlat
es
jbe
sub
jae
inc
aas
rorb
push
add
rep
pop
cmpsb
mov
mov
stos
cli
push
add
or
or
scas
ss
andb
adc
and
in
mov
lods
int3
push
cmc
pop
fmull
sub
pop
mov
cmp
xchg
pop
aam
bound
insl
mov
or
ja
mov
cmp
fdivrs
out
test
jno
cs
lret
sub
loope
adc
repz
jae
sub
dec
decb
bnd
in
or
ret
lcall
xchg
adc
push
jge
xchg
adc
ljmp
jnp
fmul
adc
sahf
sbb
dec
clc
enter
out
enter
dec
js
xlat
cmpsl
mov
push
test
inc
popf
push
mov
sbb
adc
sbb
idivl
pop
lcall
xchg
xchg
or
sbb
adc
mov
sbb
sub
mov
pop
bound
testl
movsb
add
add
rcrb
ds
xor
jae
lahf
push
in
inc
imul
movl
pop
adc
dec
xchg
mov
xor
mov
pusha
pop
inc
fdivrl
shr
sbb
mov
sub
cmc
adc
rcll
out
jl
or
insl
push
or
ret
ret
push
push
inc
insl
push
add
pop
inc
fnstsw
iret
insl
sahf
sbb
je
mov
xchg
mov
iret
mov
jge
pop
sub
daa
loopne
push
clc
dec
mov
js
out
rcr
ja
movsb
sbb
and
aas
mov
idivl
pusha
inc
cltd
test
dec
mov
fiadds
enter
xchg
fsubrl
pop
or
add
mov
inc
or
jnp
mov
pop
enter
loop
push
in
jge
js
fxch
add
dec
mov
stos
sbb
int
in
push
jnp
lods
mov
mov
imul
push
mov
stc
push
push
jge
lahf
xchg
cmp
adc
stos
icebp
decl
xchg
xchg
inc
sbb
mov
and
push
push
js
insb
addr16
hlt
mov
in
enter
mov
cmc
fisttpll
or
and
out
movsl
xor
ja
or
dec
mov
sbbl
and
lret
mov
and
fimull
cwtl
push
inc
enter
pop
cmpsl
das
stos
sti
jl
add
push
out
sub
cmp
jge
sbb
lret
ret
dec
xor
sti
inc
pushf
xor
outsl
fisubs
in
hlt
mov
stos
mov
cmpsb
push
jb
in
mov
dec
mov
mov
shl
pmuludq
ret
pop
fisubrl
cwtl
lods
mov
aaa
adc
cwtl
sbb
icebp
mov
sbb
jbe
cmpsb
ret
push
fidivrl
jecxz
mov
cmc
push
js
dec
scas
out
mov
loop
out
push
sub
mov
jno
lds
repz
hlt
jb
in
outsb
popf
lahf
push
fcmovnb
sbb
or
mov
mov
cltd
cmc
dec
test
add
adc
mov
or
sub
imul
mov
push
mov
pusha
fwait
test
lcall
lock
inc
mov
lods
test
xchg
adc
callw
dec
fxch
push
mov
mov
dec
sahf
sub
mov
mov
daa
and
and
mov
mov
adcb
iret
xchg
rclb
xor
rorb
das
xor
xchg
loope
inc
stos
adc
xor
popf
hlt
cltd
fsts
mov
inc
cmc
jg
arpl
xor
add
adc
test
push
and
sub
mov
mov
popa
std
jnp
pop
subl
les
mov
push
push
lds
or
jb
and
dec
aam
shlb
movsl
lods
popf
mov
cmp
inc
add
lcall
cmp
sbb
cwtl
ja
or
push
gs
insb
xchg
fstps
ljmp
dec
ljmp
orb
jne
push
cmp
xlat
fisttpll
sub
xor
mov
outsb
push
arpl
int3
pop
xor
clc
out
sub
and
test
sbb
cmp
rorl
cld
aam
cmc
adc
cmp
jne
orl
sarb
jmp
and
inc
in
mov
aad
jno
pop
outsl
mov
daa
rcr
sti
sahf
xchg
out
sti
and
rcll
pop
push
mov
pop
or
mov
lods
outsb
out
mov
out
outsl
mov
sahf
sahf
inc
mov
push
pop
dec
in
test
cmp
or
iret
xchg
adc
repz
stc
outsl
loope
push
test
loop
xor
mov
mov
mov
in
in
and
popa
xorb
lds
pop
ss
daa
sub
push
ljmp
and
push
or
adc
fs
xchg
dec
inc
push
adc
inc
fwait
sbb
xorl
pop
fisubs
push
pop
jnp
pop
pop
mov
add
mov
add
aaa
lret
add
xchg
int3
int3
out
or
sbb
xor
scas
add
adc
adc
cmp
cwtl
push
mov
mov
dec
inc
fnstcw
mov
dec
mov
and
mov
fiadds
ret
xchg
lret
cmp
pop
dec
xor
push
cmp
std
xchg
scas
sub
repz
push
xchg
jb
fld
sti
cmp
cwtl
dec
lea
cmp
push
mov
bswap
xchg
or
mov
xchg
xchg
rcl
mov
pop
enter
mov
xorl
fsts
ret
pop
popf
jae
fucom
mov
push
push
mov
inc
movsl
call
add
xchg
repnz
scas
rclb
outsl
loope
and
je
ret
clc
xchg
into
pop
popf
js
and
jns
cmpsl
in
sbb
jecxz
dec
insl
std
gs
fnsave
decb
fsubl
jge
idivl
mov
adc
cmpsl
add
roll
jo
sbb
testb
insl
jp
movsl
jno
dec
inc
sub
movsb
loope
sbb
das
lret
mov
into
sbb
popa
jnp
jno
add
jmp
mov
cmpsb
or
pop
xchg
mov
or
arpl
jmp
ljmp
mov
push
push
adc
pop
cmp
mov
push
out
or
pop
dec
xchg
pushf
mov
daa
incl
inc
xor
xor
dec
out
aas
in
mov
adc
jns
pop
out
sub
cmp
scas
fdivrs
scas
incl
dec
popa
dec
pop
and
mov
mov
popf
and
adc
mov
fistpll
aam
jl
cmp
xchg
xchg
xor
dec
ret
scas
xchg
push
add
push
pop
mov
enter
subl
cmp
xor
movsl
fildll
faddp
jmp
dec
add
scas
jns
ss
aad
loopne
pop
and
movsl
sti
dec
nop
push
cmpsb
sti
punpckhwd
adc
sbb
scas
or
aas
in
jecxz
cwtl
jnp
iret
sub
and
andb
pusha
pop
jbe
ds
and
mov
repnz
and
pop
lret
adc
pop
ljmp
nop
stos
aas
mov
pop
sti
outsl
lea
mov
mov
leave
dec
popf
hlt
mov
fldenv
int3
mov
mov
lcall
xlat
cmp
sub
test
js
jns
std
cmp
hlt
sub
dec
push
sti
xchg
shr
and
add
dec
mov
fistpl
push
inc
rclb
movsb
call
jbe
mov
aas
test
out
sbb
sub
and
fisttpl
push
sti
jno
xor
add
fisubs
mov
push
push
jle
jne
inc
pop
push
int
mov
push
push
inc
sbb
xor
inc
adc
inc
fwait
mov
inc
add
enter
das
jns
aas
cmp
pushf
xor
ja
xchg
mov
pop
mov
dec
iret
sub
jge
pop
mov
or
es
jl
cmpsl
js
inc
mov
aad
pop
adc
jo
movsl
sti
clc
pop
cmp
mov
cli
into
dec
es
dec
mov
xchg
add
mov
mov
rcrb
out
cmpsl
add
cwtl
inc
cmp
sub
repnz
lret
ja
rcrb
imul
inc
xchg
ja
inc
pop
mov
xchg
xor
fdivs
test
sub
mov
xchg
mov
rorl
scas
push
xorb
mov
in
mov
mov
cmpsl
out
data16
mov
inc
mov
lock
sub
push
lods
jo
push
xchg
cmc
iret
pop
sub
add
sbb
addb
test
xor
adc
or
mov
insb
mov
mov
xchg
xor
sub
add
adc
cmp
mov
popa
ficoms
fwait
bnd
das
pop
sbb
aad
mov
ret
ret
lret
pop
scas
into
data16
cmp
std
push
mov
shlb
ds
jae
and
cmp
movsb
xchg
shll
pusha
dec
ss
mov
mov
ds
fs
add
mov
lret
leave
sub
cmp
mov
into
out
push
fisubs
pop
sub
divl
ret
xor
adc
pop
movsb
xchg
mov
or
lods
jno,pn
mov
lret
mov
dec
lret
outsb
nop
lock
in
add
call
in
outsl
aad
gs
dec
shrb
push
in
inc
add
or
in
pop
repz
out
mov
jp
pop
mov
push
mov
loope
add
mov
out
dec
data16
lret
scas
xor
jns
sbb
sbb
stos
xchg
es
cmpsb
mov
imull
dec
aam
scas
xor
mov
xchg
push
mov
dec
aam
dec
lds
dec
cltd
xorl
sbb
fmuls
dec
lret
mov
fimuls
fistl
adc
rcrb
lods
push
or
dec
scas
adc
rolb
add
add
ret
or
ljmp
in
movaps
js
adc
icebp
sub
cmp
xor
lods
cmpsb
push
mov
mov
or
or
out
cmp
xchg
fs
fcom
mov
pop
push
fldl
daa
adc
xorl
sbb
cld
pop
aas
push
mov
out
idiv
testb
sarb
daa
xchg
cmp
in
xchg
and
adc
fldl
rorb
push
cmpsb
cvtps2pd
add
push
aaa
xor
xor
push
dec
ret
push
xchg
sbb
jl
sub
out
in
in
xor
mov
mov
pushf
sub
fs
push
add
mov
adc
sbbl
je
leave
dec
lock
loopne
fdivrs
mov
sbb
sbbl
xchg
sub
dec
ss
daa
inc
sub
call
incb
mulb
mov
es
push
daa
push
in
push
lret
adc
js
adc
push
mov
mov
jle
pop
out
dec
inc
push
sub
shll
mov
sbb
repz
jbe
mov
mov
enter
or
data16
fstl
mov
gs
push
mov
imul
push
adc
repnz
cmp
fdiv
negl
and
shrb
jg
push
fmuls
insb
orl
pop
test
lcall
aad
lret
test
scas
aaa
imul
lock
mov
mov
xchg
sbb
mov
scas
xor
popf
or
iret
or
outsb
lds
jbe
repnz
les
mov
fiaddl
lahf
imulb
mov
fldt
inc
in
mov
jp
out
seta
mov
dec
cs
or
dec
adc
xor
push
cltd
add
mov
stos
in
mov
cltd
sbb
loopne
pusha
inc
mov
adc
jbe
mov
stos
outsl
repz
jge
lds
fsubrs
cld
and
incl
daa
ret
out
sub
test
cwtl
inc
lret
sub
and
cmc
mov
add
cmp
xchg
in
push
mov
ds
adc
nop
fisttpl
cmpsl
dec
or
into
cmpsl
into
xor
pushw
jae
jge
jmp
sarb
mov
pop
mov
sarb
pop
jp
das
aas
loopne
dec
addr16
dec
and
push
out
and
adc
dec
sbb
mov
mov
int
mov
cs
std
add
fcoml
daa
or
inc
pushf
mov
int3
loop
dec
lds
mov
ss
ljmp
dec
outsb
gs
repz
jno
pop
and
sbbb
xchg
inc
fwait
xchg
fdivl
ja
xor
xor
ja
cmp
add
or
int3
mov
mov
repz
mov
or
lret
rcrl
pop
arpl
cs
sti
mov
jmp
rcrl
sbb
pop
jne
dec
adc
mov
dec
lods
mov
in
orb
dec
fdivp
xlat
cmpsb
test
inc
pop
xor
les
jns
push
push
jne
sti
xchg
add
pushf
jecxz
insl
addr16
pop
sub
cmp
push
xchg
pushf
cmc
aas
push
das
sti
pop
stos
cmp
ret
cmc
adc
adc
mov
js
pop
cmp
repnz
mov
lret
das
rcl
stos
mov
pop
sub
mov
scas
lcall
fidivrs
xchg
fdivrs
or
push
push
push
in
or
les
fadds
dec
xchg
sbb
imul
es
jbe
pop
xor
sbb
cld
adc
sti
in
xchg
jns
fnsave
add
fnstcw
push
xchg
sbb
mov
pop
out
xor
aas
movsl
loopne
movsb
shl
push
cmp
insl
cmp
adc
cli
lds
fnstenv
sti
addr16
or
push
mov
jle
push
cmp
mov
movsl
scas
jle
ficoml
jbe
push
push
sti
icebp
mov
mov
inc
inc
xchg
xlat
xchg
lock
add
or
mov
enter
pop
shlb
mov
or
jns
mov
aaa
push
xor
or
stc
sbbb
xor
mov
shlb
sbb
idivb
dec
push
fsubrl
outsb
inc
pop
add
inc
roll
in
or
mov
push
push
mov
pop
sahf
addr16
xchg
push
cs
stos
data16
mov
int
add
mov
lret
ret
test
xor
rolb
lret
scas
sub
cmc
aad
cltd
mov
dec
xor
xchg
ljmp
in
daa
pop
sub
sbb
cmp
xor
enter
push
popf
xchg
insb
mov
xchg
imul
ficompl
sub
pop
xchg
pop
test
sub
add
xor
pop
ret
iret
inc
fdivr
test
sbb
or
movsl
jecxz
pop
je
push
xor
add
mov
pop
jmp
inc
xchg
fdivl
ljmp
pop
jbe
addr16
xlat
xchg
andb
xlat
mov
jge
and
xchg
xor
sbb
sub
subl
pushf
mov
mov
add
int
xor
sbb
bound
divb
dec
stos
lcall
mov
outsb
fldenv
dec
cmp
mov
push
mov
add
mov
xchg
xchg
out
pop
xchg
mov
imul
inc
into
mov
into
stos
insb
loop
out
push
push
cmp
repnz
mov
cwtl
mov
shlb
or
dec
ds
xor
adc
fdivl
sti
or
xor
clc
in
push
xor
out
sahf
jg
je
pop
fistps
add
ret
dec
daa
or
and
lds
jmp
sbb
or
xor
sub
dec
sub
adc
imul
cmp
or
cmpb
fwait
mov
in
sub
in
icebp
sti
into
push
push
je
jmp
ljmp
push
loopne,pn
and
aaa
mov
jno
adc
fnstenv
jle
mov
aas
cmpsb
test
mov
push
iret
stos
cmp
pusha
insl
ficompl
into
mov
push
inc
call
or
cld
sub
cmp
mov
pop
sbb
ds
mov
test
nop
jg
lret
rcrl
inc
mov
inc
popf
mov
fwait
xor
and
dec
push
shlb
mov
or
ret
ret
jb
mov
nop
xor
jecxz
jae
clc
xchg
jo
add
mov
or
xorb
mov
incl
imul
addr16
repnz
sbb
cmp
nop
xor
push
push
xor
lret
jae
xchg
sarb
push
pop
in
out
mov
dec
enter
mov
push
jbe
enter
xchg
in
xor
sti
and
push
xor
bound
cmp
jle
dec
lds
sub
decl
aam
or
fstl
adcl
or
xor
sub
lcall
mov
cwtl
or
fidivrl
mov
inc
movsl
test
mov
or
lods
dec
pop
mov
xchg
arpl
call
cmp
cmp
mov
repz
das
subb
rcrb
gs
icebp
addb
mull
in
jne
dec
scas
fs
cltd
mov
rcrb
inc
sbb
sub
cltd
out
leave
mov
ss
mov
xor
fistps
mov
int3
sbb
cli
sti
xlat
test
aaa
ud2
mov
xchg
mov
pop
das
shrb
fsubs
fs
ljmp
loope
jge
dec
xchg
push
push
loop
or
add
dec
cmpsl
lds
adc
std
add
adc
cmp
out
popl
loope
stc
hlt
iret
add
push
dec
dec
xchg
aas
dec
in
insl
push
les
xor
fwait
pushf
stc
stos
xchg
ja
stos
arpl
or
mov
icebp
mov
data16
pusha
jnp
sbb
jp
pop
xor
repz
ds
jno
push
inc
xor
cwtl
or
jge
test
test
sahf
dec
mov
xlat
negb
cmpsl
inc
insb
mov
push
mov
pop
insb
or
sub
loop
pop
sbb
add
cmp
xor
mov
sub
inc
lret
sub
xchg
int
and
push
inc
ret
jo
mov
cld
inc
scas
or
mov
mov
mov
ficoml
shlb
mov
and
jo
daa
test
pop
pop
mov
mov
mov
outsl
pop
push
xor
pushf
pop
pusha
xor
mov
cld
dec
jmp
stos
push
fucomi
insl
sbb
dec
xor
fsts
mov
in
jecxz
ret
cmp
ficomps
cmp
andb
je
movsl
mov
jo
std
rolb
jmp
mov
mov
adc
mov
xor
fstpl
xor
inc
mov
add
inc
jae
pop
add
sahf
iret
jae
stos
pop
mov
test
push
mov
ror
addr16
jb
insl
lock
push
inc
and
push
inc
xchg
lret
pop
outsl
movsl
sahf
cmpsl
lret
in
mov
xchg
lods
push
xchg
or
cmp
xchg
stc
jb
sbb
cmpsl
es
ds
ljmp
je
jp
sub
fwait
insl
cwtl
dec
outsb
jp
int
push
sub
pop
ret
cli
xor
incl
add
xchg
sub
sub
insl
mov
push
lahf
mov
mov
in
and
sub
push
pop
stos
icebp
scas
lea
mov
stc
xchg
xor
push
cmp
add
rorb
jecxz
xor
repz
push
ret
jne
adc
pop
jecxz
xchg
shll
jo
data16
jmp
ljmp
mov
jne
subb
pop
lahf
jp
and
xor
test
pusha
call
dec
mov
filds
arpl
aam
mov
pop
rcrl
movb
mov
add
in
adc
or
jge
pushf
call
pop
cmp
stos
in
stos
in
cmp
dec
stos
adc
cmp
iret
add
pop
test
idiv
test
add
dec
leave
int3
add
mov
incl
xchg
push
pop
ret
inc
push
test
stc
nop
mov
add
adc
daa
out
lds
push
call
out
clc
cmpsb
mov
cmpsl
sbb
fstl
jns
push
inc
addr16
xchg
inc
sub
sbb
leave
pop
pop
and
jne
arpl
lret
xchg
mov
sbb
jmp
push
mov
cmp
cmp
ss
pushf
jbe
jg
jg
and
cmp
in
idivl
clc
dec
loopne
nop
inc
mov
pushf
pop
cmc
xchg
pop
aas
cmpsb
xor
loopne
xor
lret
notl
push
sub
cmp
lods
push
mov
mov
je
movsb
int3
aas
pop
cmpsl
shrl
inc
cmpb
movsl
outsb
jge
pop
or
dec
push
mov
shlb
test
and
xor
scas
and
and
ret
jae
fwait
cmpsl
aad
dec
cli
sahf
addr16
mov
xor
loope
shrb
fnstsw
inc
enter
dec
fs
das
or
xchg
jnp
sahf
popf
cmp
daa
mov
jo
xchg
hlt
adc
sbb
stos
mov
leave
int3
push
or
mov
cmpsl
cmp
mov
ret
into
repnz
and
les
dec
jmp
das
xor
sub
movsb
fisubs
inc
xchg
popf
out
pop
ljmp
insb
bswap
jle
mov
push
arpl
rorb
sahf
add
leave
jle
dec
pop
imul
pushf
ret
jecxz
xchg
sbb
js
ds
jl
sbb
mov
fwait
jp
mov
bound
dec
arpl
std
dec
pushf
mov
jo
mov
pop
sarl
mov
inc
and
fucomi
sub
fcomp
xchg
dec
push
cmp
add
adc
push
in
arpl
or
in
dec
mov
sahf
aad
push
out
cs
cmp
sub
cmp
sub
cli
out
xchg
mov
mov
jb
inc
movsb
ljmp
insb
pop
inc
jb
xor
es
scas
mov
fsts
sub
es
and
xor
loope
icebp
jg
mov
pop
and
mov
add
sbb
push
iret
lahf
bound
mov
jo
add
aaa
loope
pop
scas
daa
xor
lahf
loopne
mov
pop
into
mov
sub
fnclex
xorb
push
add
into
sub
outsb
pushf
fwait
pop
scas
bound
sbb
mov
xchg
inc
xchg
push
sub
jb
push
repz
or
popa
mov
ficompl
pushf
les
xchg
scas
leave
pop
xchg
ljmp
adc
aam
xor
and
cmp
mov
scas
stc
push
mov
cmp
and
mov
add
jbe
ljmp
ret
cmpsl
or
or
imul
cmc
fstpl
sub
mov
lods
push
insl
add
int3
cmp
iret
ljmp
push
mov
in
adc
test
mov
sbb
xchg
loop
push
lods
pop
scas
icebp
add
js
sbbl
mov
mov
insb
push
sub
ljmp
push
mov
xchg
mov
das
xchg
jl
test
add
push
repz
ljmp
adc
dec
int
or
out
xor
jne
cs
cmp
cmp
jcxz
imul
lret
cmpb
iret
jo
jmp
adc
ja
roll
mov
push
mov
xchg
mov
and
outsb
data16
push
nop
jmp
js
inc
gs
inc
or
mov
arpl
loopne
lea
add
mov
aam
and
lea
cmp
je
mov
test
insb
mov
xor
and
stc
lods
daa
push
into
mov
xor
xorl
lcall
mov
fs
insb
and
pushf
jmp
sbb
xor
pop
cmp
jge
ret
dec
sub
and
jne
push
les
sbbb
pop
in
repnz
dec
xchg
mov
imull
xchg
les
jne
cmp
orl
stos
das
stos
jge
mov
std
lcall
les
cmp
xor
stos
imulb
xchg
sub
ficoms
xchg
mov
fs
sub
jbe
outsb
jae
dec
and
fmuls
bnd
insl
adc
jge
jo
lea
popf
test
mov
cmpsl
lahf
push
imul
jae
jno
es
mov
repnz
ss
stos
insl
ja
aaa
jl
pusha
ret
out
mov
sti
insb
pop
adc
cli
pop
xchg
cmp
xor
inc
mov
cmp
adc
jns
and
lcall
nop
rcrl
push
inc
aaa
outsl
ficoml
in
sbbb
add
jnp
xor
push
pushf
stc
cmp
mov
stos
cmpsl
ja
cmp
sbb
addr16
dec
out
cmpsl
imul
in
xor
jmp
scas
pushf
add
mov
popf
dec
sarb
pop
dec
cmp
xor
dec
mov
mov
jmp
jo
add
iret
rcll
out
mov
pop
fmull
xchg
push
sahf
addr16
test
stos
sahf
push
mov
adc
test
lahf
jecxz
add
add
insl
lret
test
fsubrl
pop
cmpsb
inc
xchg
pop
push
jge
mov
mov
aam
rorb
shlb
fcomp
sub
into
push
dec
in
add
xor
bswap
inc
jmp
repnz
bound
sarb
jmp
mov
xchg
jno
insl
xchg
or
pop
repnz
loopne
or
xchg
testb
lcall
fucomip
out
int
mov
jl
sti
dec
roll
mov
and
jecxz
cmp
sub
and
sbb
arpl
jbe
add
mov
sbb
add
mov
repnz
lcall
out
out
in
fdivs
into
push
add
pop
sbb
aaa
push
cmp
aas
imul
repnz
xchg
iret
adc
rcrb
cmp
jo
xor
jge
add
mov
cwtl
mov
paddd
insl
mov
cmpsl
arpl
rcll
add
stos
cmp
enter
mov
sub
mov
push
xchg
rcll
imul
adc
jmp
dec
stos
cmp
jmp
mov
pop
xchg
div
jge
lahf
pop
mov
out
push
lret
cmpsb
mov
pop
xor
xchg
pop
inc
fisttps
sbb
push
xchg
mov
shl
add
xchg
std
rol
rcr
pop
int3
mov
call
pop
pushf
xchg
inc
sub
cmp
sub
add
insl
push
sub
or
test
ficompl
ljmp
shll
fcompl
mov
xchg
add
pop
jae
pop
gs
push
lock
out
call
imul
out
imul
sub
imull
adc
push
std
pop
test
or
push
inc
mov
pop
subb
jge
inc
int3
cmpsl
aas
inc
sahf
pop
sub
push
inc
cwtl
pop
xor
into
cmp
jbe
imul
jo
pop
add
dec
inc
push
jmp
push
nop
sbb
out
jno
mov
insl
sub
xor
loopne
iret
dec
mov
add
xchg
orl
movsl
push
dec
adc
call
push
cmpsb
mov
stc
lock
shrb
pop
je
hlt
jle
cmp
fisubrs
xor
xlat
cmp
cmp
fstpt
jp
imul
cs
mov
cmp
js
xchg
push
daa
jae
push
aaa
mov
test
mov
test
cmp
sti
insl
push
dec
mov
push
lods
pop
xchg
or
subb
jmp
or
xor
int3
leave
push
add
mov
add
xlat
icebp
push
pusha
cmp
cmpb
push
loope
shlb
ss
pop
int3
std
stos
jecxz
lock
int3
les
data16
mov
mov
push
scas
xor
outsb
pop
sbb
aaa
sti
out
cmp
and
out
lret
cltd
add
dec
add
pusha
xchg
ss
stos
adc
shlb
jp
jnp
arpl
cmp
mov
dec
pop
adc
mov
leave
test
jno
scas
xchg
je
cmp
int3
lret
adc
addb
loopne
cld
nop
andl
sbb
xchg
xlat
sbb
test
xchg
pushf
pop
push
sbb
sub
sub
pop
js
push
mov
push
adc
jbe
pop
and
push
push
aaa
out
ficoms
xor
or
aaa
cli
call
inc
rcll
mov
sub
daa
jo
insl
int
and
pop
pop
loopne
push
ret
stc
les
hlt
ret
dec
xor
inc
adc
dec
sarb
pop
gs
test
cmpsb
daa
add
mov
inc
cmpsb
pop
jg
in
icebp
sahf
gs
stos
ja
inc
jno
xor
dec
mov
dec
test
ss
subl
push
dec
andb
fiadds
mov
test
ljmp
lahf
xchg
incl
clc
fisubrl
pop
and
xchg
vpandn
aaa
arpl
mov
xchg
xchg
stc
imul
inc
xchg
repz
ret
push
jg
cltd
jle
push
faddp
sbb
jne
xchg
lret
rolb
sbb
lret
pop
pop
mov
nop
cmpsl
mov
mov
xchg
dec
xchg
push
aam
inc
jns
or
sbb
jmp
fstpl
xchg
mov
inc
std
imul
iret
lahf
push
icebp
push
leave
cmpsl
jne
push
jl
daa
adc
add
adc
mov
fcomp
push
in
push
enter
jmp
lds
xlat
or
cmc
add
add
dec
mov
test
push
inc
pop
or
ret
cmp
jae
rcrl
adc
repnz
decl
push
leave
addr16
cltd
in
pop
leave
or
add
adc
mov
sub
lret
mov
iret
jle
repz
imul
stos
push
xor
push
inc
cmp
pop
sub
mov
sub
mov
mov
push
pop
pop
out
inc
push
repz
cmc
mov
movsl
adc
jmp
enter
nop
out
xor
push
pop
mov
test
scas
outsl
mov
cltd
mov
std
andb
sub
fisubrl
test
cltd
out
jmp
inc
scas
add
cmpsb
dec
stos
cli
jl
sahf
shrl
into
icebp
and
xchg
push
and
fisubs
daa
inc
dec
fdivr
mov
cmp
jmp
push
jl
lret
xor
scas
sub
lds
ja
push
lock
fsin
clc
dec
cmp
sub
out
mov
outsl
cs
jno
aaa
stc
cmp
daa
mov
leave
subb
lret
cmp
sub
inc
loopne
mov
inc
xchg
pop
ss
lret
mov
fsubl
or
ljmp
and
mov
add
inc
enter
xchg
adc
xchg
push
jne
and
adc
popf
js
inc
xchg
clc
aas
fwait
add
stos
mov
bnd
xor
js
js
cmp
sbb
cmp
push
frstor
addr16
pushf
out
imul
add
movsb
and
xor
push
jg
dec
sub
mov
in
fucomip
jg
mov
fs
mov
imul
in
inc
jns
lods
imul
mov
sbb
inc
adc
mov
fst
in
sahf
repnz
in
negl
fcoml
int
add
clc
sbb
fnsave
dec
loope
and
fsubs
or
or
cli
jg
aad
ljmp
sub
lret
mov
jge
sti
leave
lret
std
fdivrl
and
rcll
data16
ficoms
es
adc
mov
jb
js
jns
mov
sbb
sbb
popa
mov
int3
rolb
mov
adc
int
xor
cmpsl
pusha
sub
jl
icebp
outsb
sbb
jb
dec
aad
and
cwtl
jne
shl
fmull
sbb
dec
pop
pop
decl
clc
sbb
jns
xchg
adc
fldcw
xor
or
mov
mov
push
jne
scas
cmp
lods
movsl
xchg
xchg
or
rorl
jecxz
inc
gs
and
es
jge
out
outsl
mov
mov
dec
lret
jmp
test
lods
fdivrs
rolb
in
les
call
push
add
shr
push
push
ss
xor
mov
jecxz
or
or
jns
dec
push
mov
repnz
into
mov
xor
xchg
mov
pop
pop
mov
jp
jb
pop
sar
and
mov
push
adc
pop
je
pop
adcl
cmp
stos
jae
sbb
and
ljmp
insb
lds
out
mov
mov
push
sub
or
cmpsb
mov
jns
mov
fwait
add
push
push
movsb
pop
pop
mov
adc
gs
sub
or
cltd
inc
rclb
pop
js
ret
push
loop
mov
push
adc
mov
inc
ljmp
mov
mov
jno
stc
mov
push
xchg
inc
das
hlt
arpl
cltd
and
cmpsb
sub
cltd
push
fisttps
mov
dec
mov
mov
mov
sub
xor
shr
stos
lods
mov
and
push
call
adc
lea
cmp
into
or
push
dec
cld
mov
in
out
push
aad
cli
mov
or
dec
icebp
or
stos
push
push
daa
jnp
aad
bound
dec
sbb
aam
stos
push
mov
push
dec
jge
out
insl
ds
jge
lahf
test
iret
xlat
mov
lods
ds
in
xchg
movsl
aaa
or
pop
mov
dec
cmova
xor
mov
mov
ja
mov
out
das
daa
xor
jmp
out
sti
es
int3
push
mov
out
xchg
pop
out
xor
and
or
lret
mov
mov
imul
pop
fcomp
ljmp
pop
enter
add
enter
push
mov
jl
repz
in
and
sti
adc
inc
sub
xchg
rcrb
sbb
or
inc
iret
mov
lahf
sarl
test
into
out
jbe
adc
stc
inc
pop
dec
sbb
movsl
popf
push
sub
cld
ljmp
js
adc
fnstenv
xor
xchg
add
rcr
ja
jmp
decl
sub
sub
push
lods
cmpsb
stos
sbb
aaa
dec
mov
xchg
sbb
pop
pop
in
ljmp
sub
inc
cmpsl
stos
xor
push
adc
adc
add
and
mov
pop
ljmp
shl
mov
aas
cs
add
xcrypt-ctr
cmpsl
sbb
leave
xchg
incl
cmc
mov
out
xor
xchg
inc
setbe
rcll
mov
and
shrb
iret
sub
ret
and
sub
fs
and
test
lods
pop
add
mov
daa
jne
dec
iret
insb
enter
shll
loope
jle
popa
stc
dec
imul
cmp
push
dec
les
sub
shrl
inc
push
dec
in
popa
scas
sub
mov
imul
arpl
cltd
inc
pusha
and
insl
push
std
mov
pop
add
enter
inc
aaa
fcomi
xchg
and
pop
mov
xchg
mov
pushf
sbb
inc
data16
jne
push
jp
xor
jbe
lds
cmp
fcom
xchg
stos
inc
outsb
dec
inc
popa
xlat
add
cmpsb
dec
mov
ret
or
ja
mov
jmp
icebp
inc
aad
mov
cli
pop
aas
outsb
jbe
sub
dec
lods
add
arpl
pop
icebp
push
cmp
fcoms
out
jmp
push
imul
jmp
adc
lret
cmc
mov
push
pushf
jmp
ja
or
dec
leave
or
jb
ret
les
stos
loopne
and
mov
out
or
shll
mov
xor
stos
imul
cli
call
les
rcll
push
into
imul
fcomps
hlt
jmp
std
mov
xchg
xor
dec
in
sbb
mov
xor
xchg
adc
jo
or
push
mov
test
mov
testb
pop
pop
and
test
xchg
data16
gs
or
lea
fdivl
mov
ds
mov
sarb
mov
push
and
mov
jae
in
fadd
or
aam
or
movl
jno
test
pop
mov
sti
inc
sti
popf
mov
sarl
sub
dec
pop
mov
aaa
push
jmp
pushf
fldcw
mov
dec
xchg
cltd
cmc
fisttpl
imul
rcll
cltd
inc
lods
inc
sbb
xor
test
popa
and
mov
mov
xor
out
outsb
cmp
jecxz
lds
out
dec
push
mov
adc
sarl
mov
test
and
or
fbstp
rolb
jmp
pusha
ja
mov
in
fidivrs
mov
insb
subl
testb
das
add
xchg
inc
or
fstpt
push
add
inc
inc
mov
insb
sbb
mov
xor
lea
mov
jmp
test
mov
scas
mov
test
cmpb
xchg
in
inc
pop
fidivrs
xlat
inc
ds
sub
adc
sub
clc
inc
add
mov
mov
in
or
loope
lea
inc
mov
cltd
daa
xchg
in
xor
xchg
in
fs
dec
je
xchg
sbb
out
fstl
cmp
out
and
call
stos
scas
cmc
aam
repnz
jecxz
dec
fxch
push
scas
inc
cmp
sarl
pushf
jecxz
xchg
jae
leave
outsl
add
jecxz
aam
or
push
dec
mov
add
jbe
sub
imul
insl
stc
pushf
pusha
loope
jae
clc
into
insl
cmc
je
stc
mov
xor
stos
addr16
mov
pop
mov
ficoml
popa
sti
or
cmp
cmp
cmpsb
sti
add
ficomps
gs
sbbb
test
inc
jnp
mov
imul
xchg
dec
push
roll
shl
mov
pop
jl
pop
jns
ja
mov
out
adc
test
ud0
sub
push
lcall
xchg
arpl
in
in
mov
repnz
or
rorl
or
xor
cmp
pop
pop
sub
sbb
mov
push
jnp
ret
inc
test
sti
data16
cmc
iret
or
xchg
or
pop
out
fxch
loope
dec
inc
and
dec
mov
in
insb
xlat
and
sub
mov
dec
popa
jg
mov
add
fsubl
repnz
xlat
in
lea
mov
mov
mov
and
jb
negl
sbb
sub
fnstcw
loope
xor
cmpb
pop
ror
push
sbb
adc
std
aaa
cmp
xchg
insb
sarl
sbb
inc
sub
lahf
cltd
jge
test
push
ds
call
or
popa
ss
mov
divl
addb
xchg
subb
and
dec
mov
test
dec
aad
inc
call
xor
push
inc
gs
lret
inc
mov
imul
mov
pop
testl
popf
call
fs
xor
cld
pop
fs
lcall
push
andb
mov
movsb
pop
dec
push
lcall
and
lds
mov
ret
inc
push
sbb
daa
imul
repnz
dec
data16
ds
cmc
or
stc
movsb
cmp
imul
movsb
inc
dec
jg
mov
lret
imul
cwtl
outsl
cmp
add
push
es
sbb
adc
xchg
cmp
push
cs
jnp
pop
xor
add
mov
loopne
pop
repz
adc
ds
push
enter
pop
add
or
js
xchg
push
mov
xor
jecxz
and
and
cld
pop
xchg
xchg
cli
or
in
mov
jno
sbb
adc
mov
bound
push
mov
pop
cmp
shl
movsb
jecxz
test
iret
or
sti
out
cmpsl
outsb
jp
insl
mov
das
mov
mov
les
mov
xchg
cmp
pop
xchg
ret
les
icebp
ret
push
pop
je
and
xchg
mov
cld
out
js
arpl
xchg
jbe
out
mov
and
cmp
cmc
lcall
icebp
fwait
mov
test
sbb
inc
mov
mov
xchg
xor
add
dec
movsl
inc
scas
shll
xchg
mov
je
mov
dec
cs
or
add
mov
cmp
jp
and
cli
mov
scas
mov
je
adc
mov
in
jmp
jne
push
outsl
test
xor
dec
or
pop
and
aam
arpl
cmpb
test
pop
dec
vmovups
cmc
sbb
ja
mov
mov
enter
fstpt
in
insb
xlat
fistpl
sbb
out
xor
mov
pop
adc
inc
dec
cmp
inc
push
sbb
pop
push
aam
sbbl
adc
shrl
cmp
lret
pusha
cmpsl
sahf
lret
insb
jne
xor
mov
cmp
push
out
jmp
sbb
pop
adc
outsl
and
aas
jns
sub
pop
or
xchg
xchg
add
ljmp
mov
enter
adc
outsl
movsl
mov
daa
pop
pop
das
nop
lods
push
mov
call
fdivrs
pop
test
icebp
pop
imul
scas
pop
repnz
add
popa
imul
mov
out
fistpl
pop
lods
cmc
push
ljmp
enter
mov
inc
gs
cli
insb
inc
imul
add
loope
ficomps
mov
mov
add
icebp
imul
outsb
adc
icebp
cmpsl
icebp
sub
cmpsb
test
loopne
add
dec
clc
mov
lret
pop
insl
xor
shlb
lock
mov
push
mov
or
ljmp
es
cltd
fwait
mov
jo
fisttps
sub
adc
test
ja
jge
sub
aaa
cmp
push
mov
jecxz
cmp
sub
mov
dec
orb
int3
xor
gs
lcall
inc
push
popa
fimull
dec
inc
inc
scas
fwait
dec
pusha
inc
iret
jnp
jnp
pop
push
xor
hlt
testl
movsb
in
mov
fdivrl
outsl
insb
jne
frstor
mov
sbb
pop
dec
scas
das
aam
xor
popf
inc
lock
in
xor
mov
mov
pop
add
pop
sbb
and
pop
scas
push
xchg
cld
mov
aaa
and
es
fldt
sub
movsb
bound
push
inc
loopne
mov
fcmovb
xor
pop
pop
mov
hlt
push
aaa
jp
repnz
inc
js
imul
cmp
test
push
sbb
add
lret
push
rcrl
mov
je
mov
ficoms
sub
or
jge
mov
daa
mov
inc
jnp
jp
test
xor
jne
rolb
loopne
popf
lea
mov
cmp
dec
movsb
scas
dec
jb
push
in
pop
adc
xor
je
iret
clc
in
es
adc
jno
inc
test
inc
imul
jg
inc
sbb
iret
fisttpll
out
mov
test
xchg
xor
cmp
and
sbb
jecxz
repnz
sbb
dec
jb
and
cmp
jmp
push
inc
inc
aas
cwtl
ja
lret
xchg
out
out
cltd
push
test
push
pop
leave
ljmp
pand
jno
xor
mov
lret
int3
daa
sti
inc
adc
in
cwtl
subl
mov
jno
and
ds
stos
cld
loope
shr
jge
test
xor
inc
out
pop
stos
inc
inc
xor
sti
sbb
icebp
lea
push
out
lock
dec
sub
cmc
cmp
sti
or
pop
sub
adc
push
scas
es
imul
pop
xchg
mov
jcxz
and
cltd
fistpll
out
xchg
shr
or
shl
mov
xchg
mov
mov
mov
or
data16
loop
or
xchg
iret
lcall
cmp
lcall
hlt
push
outsb
mov
jl
aam
sbb
add
testl
imul
inc
add
icebp
adc
or
lret
inc
call
pop
jns
mov
inc
mov
das
loopne
adc
imul
pop
sbb
es
push
cli
xor
in
and
adc
sbb
inc
arpl
inc
cwtl
clc
enter
xchg
mov
sti
xchg
cmpsb
jns
xlat
dec
ficompl
insb
jp
sti
mov
ficoml
lcall
loope
sar
cmp
push
mov
loop
cmp
push
jns
dec
in
outsl
out
sbb
jge
addl
pop
or
ja
jno
cmp
mov
mov
push
cmp
sbb
cmp
shll
sub
pop
jp
in
cmc
pop
inc
sub
outsb
and
jp
mov
xchg
sbb
stos
inc
lock
loopne
push
ficoms
movsl
sub
scas
dec
scas
int3
aaa
in
and
scas
and
sbb
popl
dec
in
cmp
hlt
jbe
sub
insb
mov
je
testb
and
lock
sbb
mov
mov
das
mov
stc
sbbl
mov
clc
incl
fmuls
dec
jle
icebp
xor
push
cmp
xor
fcmovnbe
push
popf
pop
lcall
pop
jl
add
sub
out
gs
and
shrb
sti
sti
mov
add
add
pop
push
lods
mov
jo
mov
das
xor
inc
sub
mov
and
mov
repz
xor
test
daa
test
orb
jo
daa
lahf
push
fildl
xlat
inc
mov
mov
adc
jae
mov
in
push
inc
and
aaa
lock
test
mov
popf
sub
cmpsl
xchg
dec
jns
inc
out
dec
fwait
xchg
mov
push
push
scas
xor
insb
pushaw
lock
loope
mov
mov
push
sbbb
movsl
jg
add
imul
cmp
or
aad
or
fsubl
mov
sub
xchg
mov
into
lcall
aad
insb
push
or
sbb
sarb
jmp
in
pop
add
stc
stc
fmul
jle
add
fstpl
cmpl
xor
mov
mov
loopne
add
and
jnp
mov
mov
ficoml
lea
mov
mov
iret
in
lods
daa
and
fmuls
shrb
cmpl
push
sbb
addr16
sub
adc
das
das
mov
sbb
jl
add
push
push
jg
dec
push
mov
jg
inc
addb
inc
fldenv
jmp
imul
xchg
dec
xor
stc
in
in
mov
jg
sub
mov
cmp
scas
lods
xor
sbb
cmpsb
or
mov
lret
cltd
scas
adc
mov
enter
cmp
xchg
xor
xlat
mov
sbb
mov
add
sub
xor
add
xor
fs
pop
movsl
xchg
lods
icebp
imul
mov
aam
js
out
pop
or
loopne
enter
mov
aas
mov
cmpsl
jl
mov
fbstp
popf
shl
jle
ss
add
lret
add
aad
nop
mov
xchg
rclb
cli
mov
and
xchg
nop
incl
inc
dec
or
fidivs
cwtl
rol
xchg
bound
pop
fcmovnbe
nop
dec
stc
int
jo
gs
in
imul
movsb
mov
mov
std
rcrb
lret
test
movb
cmp
jmp
jnp
jno
pop
cmp
jb
mov
repz
sub
cmc
out
mov
mov
test
fsubl
pop
pop
mov
jecxz
xor
xor
xor
or
push
cltd
inc
push
fistpl
pop
js
aam
test
test
call
xlat
jmp
addr16
outsl
in
call
xchg
jae
sbb
adc
sarl
pop
adc
or
mov
inc
in
sbb
push
sub
mov
xor
jno
inc
rcl
cmpsb
aam
pop
ja
js
idivl
mov
dec
shr
das
or
addr16
push
inc
test
push
and
les
shlb
mov
or
add
xchg
out
push
push
xchg
push
cli
dec
loopne
pushf
cltd
pop
pop
add
popf
xchg
aam
movsl
insl
cmp
jmp
aas
adc
mov
fildll
hlt
pop
push
lods
shl
adc
pop
lea
cmp
rcl
sub
or
push
push
sar
jecxz
sub
push
aad
xchg
mov
pop
imul
push
call
mov
shll
xchg
inc
xor
or
dec
orb
xchg
add
push
sub
test
jb
pop
mov
or
jns
addr16
adc
movsb
mov
pop
lods
je
push
inc
mov
or
xchg
int3
cmp
icebp
hlt
scas
push
rcll
and
aas
inc
cmp
sbb
and
out
push
dec
xchg
jno
push
and
addl
cmp
mov
cmp
into
xor
out
xor
addl
lea
pop
adc
mov
cmpsb
sbb
jg
mov
test
inc
dec
push
cmp
mov
outsl
cmp
movsb
sti
sub
pop
in
movsl
cwtl
in
rolb
aam
roll
cmc
ret
ds
cmp
stos
inc
movsb
lea
push
xchg
push
adc
add
das
pop
andb
gs
adc
inc
cmp
iret
push
cltd
pop
testb
xor
mov
out
js
sahf
mov
das
hlt
insl
not
sub
inc
pop
into
xchg
in
xor
rcrl
dec
lahf
sbb
cmp
int
jb
cmp
es
xor
push
hlt
in
divl
fldcw
xchg
xorl
iret
or
out
or
jnp
xchg
int
shrb
or
cli
push
push
push
andb
gs
mov
or
hlt
sbb
popa
movsl
imul
mov
fs
pop
jp
js
jmp
loopne
or
scas
adc
nop
arpl
pop
lcall
inc
icebp
mov
cmp
adc
xchg
popfw
out
test
sub
jae
xchg
repnz
push
fucomip
push
dec
aad
cmpsl
inc
xchg
lahf
loop
ficoms
ds
enter
and
xchg
adc
inc
xchg
jl
mov
inc
push
or
insl
jo
add
iret
in
xor
jg
ret
or
jo
push
xor
mov
lods
das
xor
les
loopne
int
dec
push
mov
pop
fisttpll
orl
fiaddl
cltd
jmp
mov
int3
lcall
es
xchg
xlat
testl
mov
and
aaa
sbb
mov
jmp
pop
clc
movsl
ret
test
aas
icebp
jecxz
repnz
mov
adcb
and
jle
mov
mov
inc
jmp
cmp
mov
jne
ret
stos
lcall
test
shl
mov
mov
add
pop
adcl
mov
mov
push
xchg
cmp
jmp
mov
cmp
data16
out
outsl
out
inc
add
addl
dec
pop
adc
sbb
jp
pmaxub
dec
mov
adc
jb
int3
out
sub
pop
mov
setl
pcmpeqw
jb
cli
call
dec
ret
cmpsb
or
call
push
jmp
outsl
and
inc
dec
cmc
and
dec
sub
icebp
sub
movl
jne
cmp
adc
fmuls
imul
inc
and
sbb
adc
xor
and
cmp
dec
in
jmp
fldenv
adc
jne
aaa
mov
mov
cmpsl
mov
outsb
fistps
add
imul
out
mov
sbb
add
out
push
or
dec
xchg
mov
xchg
inc
fldt
ficoms
loopne
sbb
jne
sbb
add
xor
fildl
pop
ljmp
cmp
arpl
cld
fcompl
mov
dec
stos
rorl
call
ror
mov
test
push
or
pop
and
push
lcall
push
push
jnp
or
dec
mov
mov
lcall
mov
fildl
test
je
xchg
dec
pop
setge
add
jg
movl
sbb
in
cmc
mov
and
pop
jb
ss
mov
pushf
inc
enter
mov
jecxz
xchg
js
mov
fcomi
pop
shll
rcrb
or
add
xor
lret
sbb
lahf
fimull
lret
and
subb
mov
mov
jl
and
mov
ja
push
jo
outsl
jle
mov
sub
pop
adc
mov
insl
data16
xor
jp
mov
out
nop
add
lods
mov
ss
jmp
vaddpd
jl
mov
dec
push
mov
inc
sub
pop
seto
pop
xor
mov
inc
ljmp
ds
dec
test
push
xor
fnstenv
fnstsw
aaa
dec
ljmp
inc
sub
pop
inc
cltd
arpl
data16
cmpsb
and
or
mov
outsb
push
jno
andb
push
and
lea
aam
das
dec
jmp
dec
sub
cli
xor
repnz
dec
sub
movsb
push
shrb
outsb
jno
and
stos
in
pop
push
sub
mov
arpl
insl
nop
jp
arpl
outsl
lods
hlt
jo
ficoms
pop
rorb
mov
testb
xor
sbb
lods
mov
rcl
mov
stos
in
gs
in
mov
stos
icebp
out
inc
cmc
sbb
scas
pop
scas
push
in
divb
mov
lahf
int
fldenv
rol
shlb
mov
xchg
jns
iret
push
dec
jb
aas
outsb
sub
repz
push
call
scas
int3
insb
lds
in
nop
mov
sub
mov
inc
cmp
pop
cltd
lods
pop
mov
jb
clc
xchg
dec
inc
and
mov
test
adc
sbb
call
lods
int
jnp
cwtl
add
dec
mov
lret
jae
popa
and
jecxz
popa
dec
or
mov
clc
sub
push
popf
fldl
lahf
in
clc
js
mov
fsubrl
stos
mov
mov
lock
mov
adc
addr16
notb
pop
shrl
push
jb,pn
mov
outsl
mov
add
lods
fwait
lock
ss
push
mov
mov
add
or
je
inc
fadds
sbb
or
data16
sbbb
lods
vpackuswb
adc
ljmp
outsb
jmp
inc
dec
sarb
jg
sbb
sbb
sbb
stos
inc
mov
push
shll
shrb
fs
cli
xchg
in
mov
xlat
sub
pop
jl
out
jnp
in
mov
aad
scas
in
subl
adcl
sbb
inc
jge
pushf
push
mov
mov
inc
vpacksswb
outsl
push
push
adc
loopne
sbb
push
cs
mov
in
dec
xor
push
clc
shrb
adc
add
dec
xchg
loopne
adc
sti
leave
aaa
pop
nop
mov
fistpll
pop
xor
sub
dec
mov
clc
pop
pop
push
sbb
add
or
ror
pushf
pop
inc
push
and
shrl
nop
mov
jo
push
push
lahf
sti
notb
sbb
sbb
jo
or
stos
and
mov
dec
popf
sar
push
add
shl
stos
xorb
jg
pop
adc
movb
call
mov
outsl
mov
lods
lds
imul
andl
xchg
xchg
mov
and
imul
aaa
repnz
pop
adc
mov
sarb
imul
dec
mov
ss
test
and
adc
jns
add
nop
push
cmp
je
in
jns
scas
ljmp
inc
hlt
pop
jecxz
inc
arpl
cmpsl
pop
xchg
jecxz
jo
out
pop
into
push
and
pushf
jb
push
dec
pop
lret
in
and
mov
mov
idivl
out
xchg
ljmp
je
sub
dec
loop
push
mov
mov
mov
mov
adc
adc
sbb
stos
cld
into
sbb
jmp
cmp
jl
lahf
jp
or
and
xchg
jne
pop
mov
add
outsl
clc
pop
repnz
adc
mov
xchg
scas
repz
mov
jnp
jle
sbb
and
inc
dec
mov
cltd
adc
int3
mov
mov
out
push
mov
std
imul
dec
test
ficomps
lock
dec
test
push
lret
jge
fmuls
fistpll
std
popf
dec
scas
loope
fmull
push
outsb
sub
fsub
movsl
or
mov
inc
add
movsb
movsl
in
cld
lahf
or
push
lret
pop
jne
jbe
stc
mov
adc
dec
insl
notl
out
cwtl
lods
cltd
or
and
and
push
jmp
mov
inc
clc
cmpsl
jno
pop
pushf
loope
sub
xchg
outsb
das
aam
xchg
imul
pop
in
cltd
mov
mov
stc
in
mov
xchg
add
mov
or
inc
jmp
popf
mov
sbb
cmp
jmp
inc
cltd
ss
fsubr
dec
and
dec
jmp
fsubs
and
lret
aas
out
mov
xchg
jbe
xlat
out
mov
jge
not
test
dec
test
inc
daa
cmp
add
xlat
cwtl
jmp
and
sti
and
addr16
call
mov
dec
pop
imulb
inc
out
and
jmp
std
and
leave
dec
mov
adc
dec
popl
in
nop
xor
push
xchg
mov
ljmp
xor
sub
pop
popa
and
push
mov
adc
jge
adc
outsb
pop
faddl
daa
cmc
idivb
repnz
sahf
xchg
les
sbbl
push
and
push
cmp
sbb
shll
pop
add
sub
add
sbb
jmp
jne
jbe
int
cmpsl
scas
nop
lods
pop
bound
jl
cmp
adc
jns
push
ljmp
cwtl
pop
pop
sbb
push
sub
xchg
pop
pop
aad
pop
lock
mov
jp
fisubrl
dec
shlb
adc
mov
ja
lods
aas
push
testl
into
arpl
push
push
out
mov
dec
mov
shll
pop
ret
xchg
sub
ja
lret
pop
sbb
xchg
pop
into
lock
insl
movsl
and
or
mov
ret
pop
popa
push
xchg
dec
imul
xor
xchg
cmp
test
push
fimull
lahf
cmp
pop
mov
adcb
add
mov
std
int3
test
inc
ret
hlt
sti
cmp
mov
mov
inc
pop
fidivrs
xchg
push
jecxz
popa
pop
lods
sbb
ss
sti
lods
pop
and
movsb
xchg
sub
xchg
mov
gs
scas
out
ficomps
push
stos
daa
push
push
shll
adc
mov
loope
imul
mov
push
icebp
cmp
jmpw
jno
inc
lods
inc
push
inc
adc
cmp
xor
std
ds
and
cwtl
pop
mov
idivb
push
ds
push
xor
mov
bswap
mov
imul
xlat
std
sbb
cli
fdivrl
loope
icebp
fldcw
ss
leave
shl
push
ds
xchg
xor
mov
adc
inc
jmp
jecxz
in
test
mov
pop
push
dec
mov
jns
push
insl
dec
or
lret
push
push
testb
lods
cltd
ja
std
fisttpl
in
push
jmp
ljmp
insb
xor
and
sarl
jmp
or
nop
push
arpl
in
fdivr
sub
insl
popf
gs
in
in
dec
sub
jbe
inc
fiadds
push
cli
cli
loope
xchg
add
push
test
pop
inc
jge
dec
or
mov
in
dec
jnp
sub
call
pop
or
xchg
cltd
mov
insb
outsl
xchg
mov
in
loopne
or
adc
cmc
cs
sub
mov
sysret
push
push
mov
arpl
ja
rcll
ja
mov
shl
hlt
hlt
lcall
fsubl
xor
insl
sbb
and
out
pop
or
push
pop
es
xchg
pop
aaa
std
xchg
loope
insl
push
enter
fiaddl
mov
jmp
movsb
sub
test
push
inc
add
cmp
or
cmpsl
sub
jnp
and
outsl
std
sbb
mov
sub
movsl
push
popf
inc
sbb
adc
jae
arpl
mov
jg
xor
out
rolb
xchg
sub
cmp
or
sub
jb
int
shrb
out
inc
pop
test
inc
ficompl
fcoml
mov
js
adcb
aas
stc
std
add
inc
mov
dec
push
lahf
jl
pusha
pop
fidivrs
xchg
mov
mov
xor
mov
lret
jns
jmp
out
loope
pushf
pop
emms
loopne
cmp
sbb
xor
call
cmp
inc
push
pusha
pop
xor
or
mov
mov
in
jb
daa
jno
insl
or
negb
les
dec
cmp
cmp
sub
aam
rorl
jno
mov
mov
xor
popf
xor
xchg
in
out
pop
push
pop
mov
lret
xchg
popa
stos
scas
lcall
das
repnz
mov
je
popl
inc
jg
sub
fisubs
inc
xor
jae
xor
and
cmp
cmovge
outsl
mov
adc
mov
mov
lret
scas
lock
cmc
popa
outsb
repnz
adc
pop
out
sub
in
push
jl
stos
out
ret
adc
dec
lcall
adc
aas
cmp
sub
fs
int
sbb
popa
mov
mov
push
ret
ss
call
mov
movsl
loopne
pop
jo
xchg
add
mov
sub
sarb
scas
or
add
and
and
lods
ficompl
lock
xor
adc
sub
addb
out
xchg
ret
stc
mov
test
notb
lock
out
mov
stos
jl
mov
ja
jnp
jl
xchg
test
xor
cmp
mov
mov
int3
sub
jmp
pop
cmpsb
dec
pushf
jl
rcl
leave
fwait
xor
jnp
cmpl
movsl
jge
mov
push
push
jp
test
scas
in
adc
push
mov
mov
dec
loopne
xor
jns
mov
rolb
mov
or
mov
arpl
insl
sub
aam
xchg
adc
dec
sahf
pop
pop
add
dec
xchg
aaa
out
push
push
ret
int
sbb
dec
notb
inc
mov
addr16
das
add
adc
adc
shrl
ds
out
pop
push
mov
mov
push
xor
xor
test
loope
push
fnstsw
shl
les
negl
pop
sub
mov
xchg
jle
repz
mov
pusha
loopne
loop
out
push
frstor
sbb
std
cmp
pop
fstl
das
cmc
or
sub
out
repnz
push
add
push
out
lret
xchg
sbb
xchg
inc
lahf
or
dec
xchg
js
add
stc
mov
movsb
out
addr16
jae
dec
rorb
xor
xchg
push
jecxz
xor
lret
push
mov
pop
in
and
or
popa
sub
xor
fcoms
adc
push
cmp
mov
sbb
pop
das
and
stos
jns
adc
pusha
fst
retw
jp
setae
push
jle
dec
scas
subb
sub
inc
dec
mov
pop
iret
sub
push
sbb
in
ret
dec
xor
lds
lods
mov
addr16
inc
dec
aas
in
fst
mov
out
mov
mov
ficomps
pop
adc
sub
ficomps
cwtl
and
jp
sub
movsb
hlt
cmp
lds
lock
rcll
jle
sub
addr16
dec
inc
test
dec
mov
xchg
cmpsb
lds
jl
jmp
std
or
xor
loop
mov
xchg
test
mov
fisttps
sbb
icebp
sahf
push
or
xor
std
cmpsb
push
inc
clc
push
mov
cmp
das
mov
push
push
dec
fdivp
mov
mov
int3
dec
xchg
mov
add
fdivrl
repz
fsubrs
push
or
out
sub
xchg
test
leave
popf
mov
add
cli
dec
pop
loope
push
add
sbbl
pop
cmpsl
pop
xchg
js
in
mov
rcll
jg
fstpt
lock
out
testl
shl
mov
pop
adcl
dec
and
loopne
lea
in
mov
lods
sbb
xchg
mov
inc
mov
xchg
push
mov
enter
cmp
rolb
and
xor
inc
or
mov
ljmp
insl
push
fadds
scas
and
movsl
movsl
adc
pop
and
and
flds
ds
cmp
popa
mov
test
fistpll
add
jbe
mov
jl
pop
ds
sbb
xchg
mov
mov
fsubrp
jns
jns
scas
or
xchg
bound
push
mov
cmp
push
jp
cmp
sub
fidivrl
jg
fwait
mov
adcb
jmp
mov
pop
mov
ficoms
fdivl
push
scas
jmp
packsswb
dec
or
jg
enter
loop
fst
push
lret
push
or
mov
int
repz
popa
ret
test
enter
or
lcall
pushf
mov
daa
outsl
nop
jg
int
cmpsb
jp
fnsetpm(287
clc
sub
cwtl
pop
das
jp
sub
push
je
adc
mov
pushf
jae
jnp
push
xorl
xchg
sub
pop
sbb
mov
icebp
loope
mov
pop
push
cltd
and
rcr
xchg
call
inc
call
mov
repnz
loope,pt
push
outsb
fistps
sub
lea
shl
jmp
ret
ss
mov
shlb
in
in
xlat
jge
pusha
cmp
add
lods
xor
jns
inc
dec
mov
outsb
icebp
pop
stos
mov
out
rolb
mov
mov
pop
inc
pop
cltd
adc
dec
cmc
jb
pop
out
push
fisttpl
pop
rol
ret
pushf
ret
in
test
jb
xor
pop
mov
xor
in
adcb
cmp
pop
sub
mov
sbb
int
fnstsw
lods
filds
or
push
jg
dec
jmp
ss
adc
xchg
sbb
jle
loopne
in
cltd
sarb
mov
sbb
mov
mov
enter
les
stc
cwtl
das
jl
push
mov
or
neg
jmp
dec
std
cwtl
push
or
xor
mov
lock
push
stos
jg
push
mov
adc
sti
daa
xor
aas
dec
andl
xchg
xor
mov
mov
int
mov
inc
sub
adc
pushl
shll
movsl
dec
jb
rorb
mov
pushf
lock
shll
lea
add
mov
repnz
out
leave
mov
or
lahf
mov
push
xchg
mov
mov
push
decl
xchg
or
lcall
cmp
addb
imul
movsb
and
enter
xor
push
roll
push
push
lret
lea
sbb
loope
or
pop
cli
mov
fdivrs
jno
xchg
or
pop
or
dec
cld
mov
bndldx
and
outsl
lea
inc
pop
aas
aad
bound
mov
jl
flds
vmulsd
aad
out
jg
fildll
adc
ficompl
mov
push
mov
mov
inc
mov
cmpsb
jns
xchg
jle
pop
subl
xchg
adc
lahf
push
lods
jmp
mov
cli
les
jnp
fists
adc
dec
cmc
cmp
rclb
das
lahf
ret
mov
stos
int3
out
xchg
adc
cmp
pop
std
mov
ss
or
pushf
scas
xor
sbb
fwait
sbb
adc
lods
jle
out
mov
pop
cmp
jecxz
mov
inc
in
fs
mov
adc
pusha
cwtl
cld
or
sub
and
jle
xchg
sbb
adc
aam
mov
inc
sbb
push
inc
int
clc
cltd
sbb
cmp
mov
imul
clc
mov
cwtl
xchg
daa
fisttps
cmpsl
adc
cmp
push
mov
xchg
jo
and
andl
push
mov
inc
inc
pop
repz
in
xor
movsl
idivl
pusha
sarl
xchg
test
enter
xchg
adc
jp
icebp
in
sub
and
inc
pop
gs
out
fwait
scas
mov
cmp
aas
push
pop
pop
or
add
inc
or
hlt
pop
nop
mov
pushl
fidivs
pusha
push
mov
rcll
add
addr16
cld
add
xchg
in
repnz
hlt
sbbb
xor
mov
adc
and
push
loope
xor
sahf
and
cmp
movsl
xchg
popf
test
ss
xchg
jb
cltd
rolb
xchg
cli
pop
dec
jne
loope
ss
nop
xchg
dec
inc
js
psraw
pop
push
mov
cs
rorb
mov
push
je
je
mov
faddl
jo
inc
xor
ficoms
scas
sbb
out
or
mov
imul
and
xchg
arpl
imul
shl
mov
adcl
hlt
into
cwtl
fnclex
dec
addr16
mov
scas
xor
inc
jmp
pop
cmpsb
jle
rcll
sub
rcl
repz
lret
inc
pop
mov
das
add
ficomps
add
jmp
stos
pop
xor
pop
sub
loopne
dec
and
push
jmp
out
mov
jp
dec
mov
in
lock
lds
int3
pop
stos
xchg
add
inc
fstl
rclb
loopne
jg
mov
cmp
mov
outsl
rcrb
dec
and
das
dec
or
push
add
gs
pushf
dec
sbb
into
xchg
cwtl
imul
shrl
add
test
mov
imulb
rcrl
jns
js
mov
dec
loope
addl
daa
imul
mov
push
dec
lea
test
mov
sub
inc
mov
in
jmp
enter
int3
test
jl
xor
cmpsl
pop
or
jle
out
xchg
out
aaa
js
xchg
or
adc
cmp
shll
cmc
and
int3
iret
pop
leave
in
incl
lock
push
lea
dec
or
out
aaa
shrl
les
lret
sbb
out
popf
incb
out
cli
dec
xchg
insb
cmp
fsubl
orb
mov
pop
adc
insb
cs
mov
pop
repz
cmpsb
lods
ljmp
sub
into
lods
sub
xchg
jnp
adc
sbb
xchg
push
lods
jmp
xchg
mov
cmp
add
jb
push
outsb
adc
cmp
push
xor
and
add
mov
mov
lock
andl
push
add
dec
adc
pushf
jb
and
cmpsb
jb
xchg
pop
sbb
mov
mov
jo
ja
mov
gs
xchg
out
in
pop
std
lret
add
stos
loope
inc
movswl
mov
xchg
data16
stos
adc
sub
or
pop
inc
inc
mov
push
lds
cmc
push
clc
fsubr
test
sbb
pop
out
pop
imul
xor
movsl
xchg
pop
add
cld
xlat
vmulpd
xor
mov
add
mov
stos
cld
je
inc
add
xchg
mov
jl,pn
cli
sbbl
xor
and
push
pushf
repz
iret
stc
sub
scas
push
mov
fsubl
xor
xchg
sbb
or
mov
sbb
xor
movsl
and
mov
push
orb
imul
scas
inc
mov
jmp
out
mov
mov
fwait
pop
mov
repnz
xchg
cmc
lods
add
adc
jmp
pop
sahf
adc
dec
imul
fldt
test
in
pop
sub
push
insl
sub
cmp
push
cli
xchg
mov
push
fwait
inc
jne
xchg
ds
sbb
mov
fbstp
ret
in
gs
pop
sbb
lds
push
sbb
ficoml
add
cltd
mov
xchg
nop
lods
and
mov
movsl
mov
push
divb
arpl
add
outsl
and
inc
dec
jo
and
pop
in
je
imul
int3
cmp
repz
aaa
push
inc
xor
pop
mov
push
flds
rcrb
std
pop
jmp
clc
and
out
mov
jge
int
mov
lods
test
mov
ss
insl
inc
xor
inc
xchg
mov
pop
inc
push
leave
repnz
fidivs
leave
push
insb
stc
cmc
mov
in
jmp
shrl
test
dec
mov
sti
mov
push
add
fistl
or
mov
push
push
insb
aaa
fists
fidivrl
or
jge
mov
mov
std
lods
adc
sub
arpl
ja
ss
sub
add
sti
pop
fwait
subl
jle
int3
mov
jle
or
dec
dec
lds
loopne
cmpl
push
daa
and
ds
mov
inc
sbb
enter
test
sbb
arpl
mov
push
fistps
dec
popl
popa
ds
dec
jp
fnstenv
ficomps
and
in
pusha
sbb
mov
shlb
loope
ret
shrl
xor
outsb
addr16
lods
repnz
aam
xor
pop
fcompl
push
shl
jno
dec
and
dec
xchg
cmpsb
add
cmpsb
mov
sbb
aad
frstor
aaa
or
into
orb
in
push
sbb
add
pop
mov
jp
test
mov
ret
inc
inc
mov
arpl
sbb
inc
inc
loope
xor
roll
pop
loopne
dec
mov
js
inc
jecxz
xchg
inc
push
shlb
push
jne
pop
hlt
psubusb
inc
mov
mov
jno
shll
jge
sub
mov
and
adc
hlt
jns
sub
jmp
and
mov
mov
mov
sub
fiadds
cmp
testb
mov
or
dec
jl
xor
or
insb
cmpsl
leave
xor
sub
decl
push
bound
aas
mov
dec
or
jns
imul
out
faddl
inc
cli
in
push
jnp
fisttps
pop
jo
lds
sbb
inc
jg
and
icebp
psubw
arpl
lods
bound
and
push
mov
or
mov
out
jb
mov
add
add
dec
sti
pushf
xor
pop
pop
adc
ret
lods
jae
xchg
pop
jecxz
loop
mov
bound
add
fisttps
mov
inc
and
ja
les
movsl
std
cmp
pop
xchg
mov
leave
mov
xor
push
and
mov
jecxz
mov
xor
aas
dec
add
sarl
pop
int
aaa
clc
inc
pusha
push
xchg
scas
push
cmp
bound
add
pop
mov
dec
ficomps
pop
xchg
in
in
or
add
cmp
test
aam
adc
mov
adc
in
adc
or
or
mov
add
faddl
pop
mov
pop
xchg
push
mov
aaa
mov
lds
rorl
mov
mov
movsl
ljmp
ss
and
prefetchw
mov
loop
dec
and
xchg
in
inc
cwtl
lret
xlat
inc
xor
inc
stos
cmc
mov
push
mov
inc
sbb
cmp
push
inc
adc
into
lds
jae
aaa
dec
scas
int3
es
cmpl
push
sbb
adc
pop
negl
xor
mov
daa
int
mov
popf
daa
sbb
gs
cmp
pusha
jae
pop
xchg
js
or
stc
xchg
into
call
lods
and
pop
xchg
sub
push
inc
jno
or
jp
jl
jmp
and
jg
int3
ss
fidivrs
pop
jnp
sub
test
sub
push
jmp
mov
fimull
mov
mov
test
lret
jae
mov
ret
popf
loopne
insb
loope
sub
mull
or
jnp
inc
repnz
pop
das
xor
sub
pusha
ds
inc
xor
sbb
cs
stc
out
in
and
lret
xor
mov
add
repnz
arpl
cwtl
adc
rorb
insl
loopne
xchg
aas
loop
and
or
jle
loop
push
inc
rolb
jle
mov
adc
mov
outsl
ret
xor
xchg
dec
pop
enter
test
mov
stos
inc
les
xchg
sahf
pop
scas
push
repnz
add
jo
or
mov
dec
cwtl
sub
push
call
xchg
mov
int
aas
sub
popa
xlat
add
xchg
pusha
xchg
push
iret
dec
shrb
push
lret
test
dec
popa
decb
inc
push
inc
cmpsb
jecxz
lahf
ret
push
or
or
fwait
mov
in
in
dec
dec
cltd
sbbl
and
jae
rol
dec
or
mov
xchg
mov
inc
sbb
repz
ficompl
lahf
movsl
mov
dec
movsl
adc
inc
jmp
adc
pop
push
dec
mov
mov
push
push
je
push
cltd
adc
push
jo
mov
dec
xor
fisubrs
push
pmulhuw
xchg
je
xchg
rol
xchg
movb
pusha
xor
cltd
roll
mov
push
inc
lcall
loop
je
sti
jo
loopne
sbb
sub
inc
fisttpl
sub
mov
xchg
push
and
in
das
mov
nop
dec
jle
fsubrl
fiadds
fwait
lcall
loopne
popf
test
pop
lea
lret
cwtl
dec
ret
jb
dec
aas
sbbl
jne
inc
pop
or
xchg
shlb
mov
jmp
mov
loope
cmc
mov
xchg
fcomps
daa
shlb
mov
dec
push
in
rep
lds
cwtl
loopne
xchg
scas
rol
push
add
cmp
mov
fcompl
movsl
and
cmp
push
leave
fcompl
sbb
mul
and
xchg
sub
and
or
or
xchg
mov
dec
cmpsb
test
or
addb
movsb
loop
aad
adc
xchg
mov
push
sub
sub
and
mov
adc
adc
bound
out
outsb
sub
push
rcr
pop
mov
orl
mov
adc
stos
sbb
xchg
push
fdivrl
xchg
xchg
aad
xlat
xchg
pushf
xchg
cs
add
insb
pop
mov
jge
cmp
pusha
push
mov
push
adc
cltd
pop
orl
sub
rol
mov
dec
lods
ret
pop
xorb
inc
shll
mov
sub
in
cmp
loope
push
cmpsb
sub
out
mov
arpl
std
mov
nop
insl
push
add
es
mov
lahf
daa
cli
cmp
xor
mov
pop
sti
mov
repnz
cmp
outsl
mov
iret
cmp
dec
xor
push
or
mov
imul
sbb
fstl
enter
stos
push
cvtps2pd
stc
clc
and
dec
mov
xchg
push
cmpl
movsl
adc
mov
js
pop
cmp
mov
in
icebp
sbb
in
mov
jno
popf
sub
jno
mov
adc
call
dec
icebp
outsl
cmpsb
sahf
movsb
arpl
das
jo
inc
call
mov
insl
jmp
sub
loop
jno
or
xchg
movsl
xor
mov
pop
daa
mov
loopne
cmp
das
bound
rcrb
es
inc
movsb
int3
pop
iret
in
test
dec
leave
xor
cmpl
or
scas
jg
movsb
push
cmpsb
addr16
icebp
test
rol
sbb
movlps
push
cmp
xchg
xchg
movsl
mov
out
xchg
dec
loop
xor
xchg
jle
xor
test
cmp
push
addb
jnp
jge
scas
pop
sti
cli
inc
cwtl
call
aas
test
sarl
fwait
xchg
lahf
sub
add
or
dec
das
ret
sbb
add
loope
lret
icebp
or
in
aam
mov
mov
or
addl
and
inc
sub
sub
pop
subb
adc
adc
mov
mov
stc
testb
test
arpl
xchg
xchg
pop
popa
sub
adc
stos
cmpb
insl
jge
std
mov
insb
cld
leave
call
push
hlt
lods
into
pushf
or
addr16
xchg
jmp
mov
andb
push
and
xchg
jge
rcrl
test
jecxz
and
icebp
fs
dec
xchg
xchg
icebp
daa
scas
pop
xor
inc
fldl
in
out
mov
ret
movsb
popa
aad
xor
ljmp
adc
ja
out
mov
into
pop
dec
clc
ja
add
das
mov
pop
and
dec
jmp
push
jo
dec
add
test
xor
sti
pop
jno
mov
push
push
test
lock
fsubl
stos
mov
push
out
aam
push
nop
outsb
dec
push
push
cmpsl
jb
mov
test
call
dec
and
jecxz
shll
test
xor
aad
ds
jp
mov
outsb
scas
mov
outsb
daa
or
xchg
ja
push
add
gs
ss
cmc
mov
test
cmpb
insl
xchg
and
push
xor
cmp
xor
test
adc
nop
pop
sub
mov
pushf
push
mov
mov
enter
mov
adc
test
add
rorb
cmp
xchg
out
nop
mov
in
jne
pushf
shld
mov
stos
pop
jecxz
inc
adcb
adc
cmp
loopne
adcb
mov
and
sbb
imul
xchg
std
adc
adc
jle
jecxz
cmp
lods
mov
loope
jno
add
pop
mov
out
cmpsl
call
cmp
cwtl
rcrl
xor
test
mov
aaa
jp
dec
xor
jg
and
mov
dec
ret
xchg
or
xor
jecxz
into
jns
test
adc
stos
sti
sti
jno
and
xlat
jecxz
int3
push
std
outsb
jne
add
in
jp
pushf
jnp
pcmpeqb
xor
sbb
hlt
mov
shll
push
jle
sbb
add
sbb
out
lcall
add
in
inc
inc
xchg
mov
fmulp
jge
or
mov
push
cltd
sbb
psrlw
cmpl
lock
imul
movsb
push
mov
mov
mov
fsubr
mov
push
stc
pop
clc
cmpsl
jg
adc
stos
dec
inc
mov
xlat
sub
test
add
jnp
hlt
xor
jae
mov
dec
xchg
jecxz
pop
lcall
pop
sub
mov
xchg
sti
stos
push
jmp
or
es
mov
ficomps
std
shlb
mov
inc
out
sub
push
cmp
or
stos
fs
sbb
mov
outsl
cmpsl
cwtl
inc
mov
inc
rorb
das
packuswb
sub
push
push
loope
cmp
mov
mov
divl
cld
mov
and
bound
jne
jo
add
arpl
xchg
jae
dec
or
push
inc
pop
xchg
shl
xchg
xor
into
cmpl
and
inc
mov
jne
cmp
lahf
xor
or
sbb
mov
into
mov
ret
push
push
add
push
xor
adc
clc
cs
and
ja
cmp
sbb
test
shlb
popa
push
fcoml
add
mov
push
pushf
repz
adc
pop
xchg
xor
cmp
rcrl
cwtl
in
dec
arpl
outsl
add
xchg
push
bound
xchg
es
iret
cmp
xor
adc
pop
insl
rcrb
mov
loop
cli
cmp
dec
int3
fidivl
jmp
orb
mov
cmp
decl
cmpsb
adc
shr
jnp
repnz
xchg
jg
mov
dec
jo
in
insb
stc
loop
xchg
sbb
outsb
std
xor
call
rolb
sbb
leave
in
and
icebp
daa
push
push
ret
mov
mov
xorb
push
mov
cmp
jle
lock
es
bound
push
rclb
dec
fsub
cwtl
mov
cmp
xor
daa
mov
jo
pop
pop
insl
cmp
lret
mov
or
push
lods
sub
ret
lods
jbe
rolb
dec
ret
inc
pop
lea
call
fdivl
aad
je
stos
mov
popf
inc
pop
sub
mov
sub
and
stos
loopne
adc
stos
cmp
gs
push
jp
cmpsl
fstpt
add
jbe
test
dec
cmp
push
int
pop
inc
cli
sub
and
les
pop
mov
pop
jl
ss
std
cld
jns
jne
in
add
dec
je
mov
dec
inc
insl
cmpsl
repz
mov
xchg
xchg
jmp
lcall
aam
or
push
lods
pop
xor
outsb
xor
push
das
mov
xchg
in
xchg
inc
outsl
lret
add
shr
jmp
outsl
repnz
movsb
clc
xchg
enter
scas
arpl
loop
lret
stos
xchg
aas
pop
leave
in
mov
mov
dec
inc
fisttps
imul
or
repz
fnstsw
xchg
rclb
inc
xor
out
pushf
out
jns
jns
adc
xchg
out
addr16
test
test
lcall
dec
lret
fnstcw
shl
cltd
dec
xor
movsl
insl
pusha
cmc
iret
clc
xlat
lcall
nop
jnp
pop
adcl
add
and
in
aas
lods
rcl
js
nop
mov
xchg
mov
mov
jmp
insl
pop
xor
dec
daa
xor
and
mov
popf
push
ds
adc
mov
mov
cmpsb
sbb
test
and
adc
jmp
dec
movsl
repnz
test
ficoml
inc
pop
cmpps
hlt
mov
shlb
or
cmc
test
inc
mov
jae
je
adc
nop
es
test
add
out
cmp
and
mov
push
jg
jle
sub
cmp
pop
fadd
jecxz
lds
aas
push
data16
xor
mov
jp
shlb
not
dec
dec
xorb
insl
lea
adc
shrl
inc
inc
sbb
or
add
adc
cmp
mov
add
js
aad
lock
and
cmp
and
subb
icebp
cwtl
scas
mov
test
and
xor
js
inc
jno
ss
mov
cmp
aas
xor
loopne
arpl
fbld
popf
ret
cmp
icebp
int3
jmp
pop
xchg
cld
pop
mov
lret
mov
push
movsb
fnstcw
rcl
in
hlt
jmp
push
xchg
push
mov
mov
cltd
ja
jp
cld
arpl
leave
in
sub
ds
mov
test
sub
inc
out
or
imul
enter
out
lret
cli
mov
dec
xchg
rcr
jle
push
je
or
aad
daa
frstor
sbb
mov
mov
sub
fsubl
jne
ret
lea
and
fldt
mov
mov
int
mov
loop
mov
aas
int
pop
mov
imul
ja
shlb
test
adc
adc
iret
icebp
sarb
inc
aam
aam
or
inc
aam
lret
xlat
lret
jb
loope
aam
notl
in
shrl
dec
sbb
sbb
jle
in
inc
insl
lret
or
mov
sbb
aad
ret
mov
leave
sub
push
jae
rolb
jg
pop
mov
lods
mov
fildl
mov
in
jae
mov
dec
mov
movsb
mov
in
pop
sub
cwtl
adc
lret
add
mov
cmc
gs
jecxz
clc
in
fwait
mov
xor
inc
andl
xchg
add
mov
inc
push
loope
cmp
pushf
negb
lods
popf
fadds
sub
pop
adc
adc
ljmp
jb
insb
xor
push
sbb
test
dec
inc
sbb
cmp
pop
jle
rep
dec
sub
cmp
mov
das
pop
stos
test
fwait
sub
and
xor
jae
inc
mov
pushf
aad
ljmp
clc
pop
lods
test
inc
fiadds
test
out
sahf
and
pushf
mov
outsl
mov
fidivrs
xchg
adcl
mov
popa
xchg
mull
scas
sbb
in
jb
fcmovu
jo
or
jne
or
lahf
push
iret
sub
loop
adc
xchg
stc
ds
pop
xor
das
mov
cli
dec
scas
adc
repz
lret
mov
lahf
or
pop
shll
movsl
xchg
shrl
sbbl
cwtl
jbe
shrb
lods
xor
mov
add
mov
cli
outsb
mov
dec
fdivr
or
cltd
ljmp
out
fisubl
mov
jo
pop
jno
lock
ljmp
mov
dec
out
popf
out
pop
jo
pushf
mov
sub
andl
hlt
sub
test
lcall
cwtl
pop
pop
call
leave
jp
sbb
mov
mov
fcompl
and
popf
cmpsb
or
pusha
push
insl
push
mov
clc
test
dec
mov
push
jge
xchg
movsb
stos
xchg
adc
mov
out
xchg
push
mov
bound
fs
xchg
mov
xor
in
and
jno
cmp
push
pushf
push
sub
scas
scas
shrb
dec
pop
mov
add
push
mov
loopne
incl
inc
decl
lahf
mov
frstor
adcl
fs
popa
push
push
ret
mov
ret
imulb
or
cld
push
push
fmul
std
ret
inc
cmp
pop
cmp
lock
fwait
adc
inc
and
push
xchg
and
movsl
arpl
aam
xor
inc
add
push
aas
insb
cmpsb
sub
mov
adc
fwait
xor
jge
sbb
pop
cmp
lods
add
or
mov
in
in
inc
cmp
and
in
arpl
jl
inc
sarb
push
dec
inc
xor
call
ja
xor
pop
test
aaa
pop
bound
cwtl
jbe
mov
rol
fwait
loop
mov
pop
mov
mov
repz
cmp
enter
add
sbb
mov
arpl
out
stos
mov
lods
testb
cmp
shll
test
aaa
sahf
or
pop
fnsave
popl
fcompl
daa
js
mov
adc
jb
jmp
sbb
inc
inc
sub
mov
je
loopne
imul
xchg
pop
jp
dec
inc
jb
in
pop
dec
testl
xchg
add
inc
mov
jl
movsl
jge
adc
mov
jne
push
lea
loop
fs
aas
mov
mov
inc
and
pop
repz
call
lods
inc
fnstenv
scas
dec
dec
je
leave
push
mov
push
sub
sbb
sbb
loope
push
aas
movsl
test
fwait
adc
repz
ret
and
sbb
jno
jb
iret
lret
jmp
xchg
mul
mov
enter
cmc
inc
loope
dec
mov
scas
ret
stos
mov
test
xor
pop
push
daa
rcrl
or
sti
jge
cmc
xor
pushf
pcmpgtw
jns
ret
lcall
ror
and
cmpsb
mov
lods
shlb
loope
lret
inc
cmpl
push
pop
js
lods
sub
sbb
loop
addr16
mov
xchg
lds
and
mov
lock
dec
bound
xorl
dec
inc
and
cmp
push
stos
lcall
movsb
pop
dec
jbe
jae
les
xchg
sbb
cmc
packuswb
mov
pop
ret
inc
cmp
mov
xchg
push
pushf
aas
idivl
imul
add
xchg
jnp
test
jl
cltd
in
mov
and
cmp
jnp
cmp
es
outsb
xor
test
mov
lds
scas
jl
std
sbb
fistpll
adc
test
icebp
mov
sub
and
inc
aaa
add
pop
or
out
mov
pop
adc
in
in
pop
daa
and
fmull
mov
lods
xchg
into
dec
lock
cmc
pop
push
cld
cmpsb
insl
dec
lret
aad
repz
inc
and
push
in
stos
insb
test
inc
mov
and
jmp
pop
test
inc
xor
add
mov
or
push
mov
and
stos
icebp
pop
cmp
ret
cmc
xor
jb
xchg
fwait
or
or
daa
imul
inc
hlt
out
mov
xchg
dec
out
adcb
and
std
int3
mov
push
rcrb
js
pop
sbb
nop
es
sarb
mov
outsl
cmp
pop
sub
pop
xchg
push
sub
pushf
cmp
mov
pop
inc
je
xor
mov
mov
cmpsl
imul
cmp
notb
shrb
cmpsb
ret
call
cmp
aas
inc
ret
test
fsub
leave
sub
fwait
mov
insb
rcll
jp
adcl
jge
inc
xchg
ja
mov
pusha
addl
lods
es
aas
add
dec
int
adc
rol
mov
pop
cltd
scas
push
subb
mov
xor
inc
sbb
mov
dec
into
jmp
dec
adc
add
int
jmp
stos
loopne
adc
pop
test
jb
std
addr16
mov
dec
ss
pop
xchg
repnz
popf
test
cltd
and
dec
cmp
adc
aad
cltd
cmp
repnz
and
les
adc
jb
and
subl
inc
aad
popa
nop
inc
inc
mov
sti
in
sub
scas
into
mov
cmpsl
into
and
inc
and
pop
loope
cwtl
or
jle
call
mov
leave
lods
aas
lods
xchg
loopne
fdiv
lcall
sbb
pop
gs
cmp
push
cmp
lahf
xchg
mov
sub
gs
xchg
out
jg
das
add
jns
test
inc
dec
movsl
adc
sahf
mov
sub
and
addr16
mov
imul
push
loopne
int
fcomip
cwtl
int3
sahf
jne
outsb
jbe
sbb
jg
push
mov
xor
out
fs
mov
call
inc
sub
inc
pop
ds
cmp
push
aad
inc
xor
push
cmp
mov
das
sahf
iret
fsubrp
mov
pushl
cmp
and
shrb
push
xchg
in
or
lret
out
popa
and
into
jns
addr16
sub
clc
cmpsl
cltd
jecxz
sub
daa
lea
dec
daa
popf
or
lahf
pushl
rorl
sarl
pop
and
shlb
fxch
xchg
test
jle
in
xchg
lret
call
jae
fnstenv
mov
add
daa
leave
fisttps
mov
insb
mov
xchg
fwait
xchg
xchg
fsubrs
enter
and
mov
insb
test
push
push
push
or
and
das
inc
sti
out
or
jg
inc
pop
sti
in
pop
orb
outsb
stos
dec
sbb
lods
xchg
popf
or
jl
pop
mov
cmp
sbb
fiaddl
dec
jns
push
les
lahf
jecxz
pushf
into
fsubs
aas
iret
leave
lret
or
xor
and
xchg
sbb
mov
mov
stos
daa
or
fidivrl
aaa
scas
adc
mov
cmc
lret
pop
dec
lods
pop
jne
adc
lcall
sbb
cmp
jnp
xor
xchg
adc
movzwl
xchg
mov
lock
dec
icebp
cmpsb
es
inc
out
xor
adc
xlat
adc
fdivrl
out
sbb
xor
fs
fimull
bound
mov
cmp
pop
hlt
lods
xor
dec
ljmp
bound
mov
mov
call
fwait
xor
lea
push
loop
mov
xchg
adc
mov
adc
jecxz
mov
call
fcmovb
xor
sbbb
mov
daa
xchg
xlat
ficompl
insl
lcall
das
pop
notb
adc
inc
js
or
mov
and
and
mov
loope
mov
aaa
push
iret
stos
pop
les
pop
ja
test
mov
dec
shl
jg
ret
mov
push
test
loope
jo
xchg
pop
or
mov
pop
cmc
movsl
jp
sbbb
jecxz
ficoml
sbb
andl
andb
adc
adc
mov
insb
push
cmp
sbb
mov
jge
inc
cmp
aas
or
pop
xchg
sbb
cld
add
cmp
or
xor
push
call
mov
xchg
es
dec
movsb
inc
fldl
mov
adc
lods
and
inc
add
dec
xchg
jle
mov
and
pop
push
sub
gs
inc
scas
pop
notl
in
mov
inc
push
nop
push
adc
dec
xchg
jns
pushf
fildl
adc
dec
push
or
dec
adc
sub
daa
loope
dec
loopne
mov
in
outsl
dec
shll
xorl
and
stc
shrl
mov
lods
stc
cltd
movsb
and
dec
popl
gs
stc
cltd
add
out
or
roll
cmpsb
mov
sbb
fcompl
jg,pt
jp
pop
shll
loopne
cli
pop
fnstsw
cs
insb
mov
push
jecxz
jg
mov
enter
jl
mov
lahf
sti
das
arpl
mov
jb
enter
push
icebp
enter
jb
leave
pop
in
es
leave
pop
das
push
std
mov
pushf
jecxz
jnp
push
scas
jecxz
pop
call
cmp
pop
ja
mov
int3
idivl
out
jp
pop
xor
inc
mov
ds
pusha
dec
test
xor
sti
dec
cmp
sbb
push
xor
dec
addr16
xor
pop
inc
push
sbb
push
cld
sbb
adc
xchg
mov
jb
daa
mov
popf
dec
inc
jmp
or
xlat
aaa
sbb
ljmp
sub
inc
xchg
or
inc
adc
mov
mov
push
jmp
movsb
inc
aaa
iret
jl
fsub
adc
sub
sbb
int3
push
mov
mov
add
stos
mov
mov
pop
xchg
and
fs
loope
iret
jb
cld
sarb
inc
lea
jbe
fwait
add
testl
dec
xlat
ja
mov
mov
ja
stc
sbb
and
movsl
subb
loope
and
mov
xchg
dec
push
inc
and
imul
ret
stos
ss
int3
pop
pop
jbe
cld
and
xchg
outsb
inc
mov
data16
lahf
mov
scas
sbb
cld
test
mov
adc
movb
dec
dec
pop
movb
lcall
fisubl
xchg
stos
adc
and
lods
push
inc
outsl
lds
mov
pop
mov
sub
fsubrs
cmp
sub
jmp
ja
xor
ret
cmpsl
pushl
fldl
das
repz
xor
fisubrl
or
mov
in
push
pushf
scas
test
std
jle
xorl
and
outsb
inc
shlb
insl
ss
cmp
insb
cmpsl
mov
inc
pushf
aad
fisubs
sub
jmp
or
test
mov
add
test
das
push
mov
cmp
dec
daa
outsl
fiadds
mov
test
push
xchg
push
adc
into
dec
scas
test
loopne
test
mov
jmpw
and
push
test
lret
xchg
adc
je
popf
sbb
std
gs
pop
out
push
gs
sub
mov
sub
rorl
shlb
xor
lods
scas
addr16
mov
sub
inc
xchg
mov
stos
fmuls
add
xor
add
aam
in
xor
fwait
pop
mov
pop
adc
mov
mov
push
cld
incb
xchg
dec
fdivp
jb
dec
out
push
cmpl
pushf
fs
push
subl
outsl
push
fwait
orl
mov
dec
jae
push
pop
test
fidivrs
ja
imul
ljmp
push
ljmp
outsl
cltd
jne
mov
lret
adc
push
sub
pushf
dec
test
mov
adc
add
cltd
ret
cli
xchg
stc
cmpsb
jecxz
sub
push
test
mov
xchg
insl
push
jle
sbb
in
cmc
adc
xchg
mov
and
push
cltd
and
rorb
fdiv
fiaddl
cmp
or
call
pop
bound
jb
cmpsb
idiv
pop
notl
movsb
test
call
addr16
loope
xchg
sub
repz
add
mov
xor
mov
daa
dec
sbb
scas
jne
cmp
adc
aad
lock
mov
sbb
xor
mov
cmp
lea
loop
add
pop
jge
jbe
cs
adc
lock
fidivs
ret
scas
clc
sbb
push
adc
es
or
jge
dec
popf
jo
push
shlb
xor
push
sbb
ret
fcomps
xchg
sbb
inc
sub
mov
mov
push
jo
dec
lret
add
lods
adc
cmp
std
outsl
es
mov
jp
mov
cmp
popa
test
shrb
dec
jl
dec
enter
dec
and
xchg
cs
cmp
int3
rcr
bound
insb
mov
pop
rcr
push
arpl
call
push
adc
lea
add
popf
pop
pop
cmpsb
push
adc
das
hlt
push
xor
pop
lock
cmpps
test
js
and
jb
mov
jmp
pop
adc
gs
test
push
xor
mulb
dec
ljmp
movsl
popf
ret
mov
or
in
sbb
lds
xor
pop
sbb
push
outsb
iret
fwait
test
aam
pushf
cvtdq2ps
mov
jp
iret
das
add
adc
jge
rcll
jnp
xchg
aad
repz
sbb
and
adc
imul
fsubs
or
cmp
xchg
addr16
repz
lcall
stc
clc
cmp
jne
mov
outsb
test
mov
jmp
into
repnz
xor
test
clc
stc
popa
inc
jmp
in
sbb
div
data16
cs
add
inc
push
cld
leave
and
inc
pop
jb
icebp
lea
add
and
lock
add
aaa
xorb
pop
cld
inc
call
in
ljmp
dec
ljmp
mov
stc
jne
lahf
lods
jmp
icebp
xor
test
inc
je
sbb
into
popf
lods
fnsave
cli
xchg
sbb
into
adc
lods
movsl
push
mov
ja
push
call
icebp
enter
inc
sbb
mov
or
jnp
xchg
fisubrl
ret
std
mov
ds
leave
lret
jl
es
ret
add
mov
js
or
fldl
mov
cmp
std
jne
call
pushf
add
pushf
fiaddl
daa
xchg
popf
cmp
or
inc
xor
add
fstl
sarb
adc
dec
ds
dec
scas
aaa
dec
imul
cwtl
mov
pop
stos
fimull
movsl
fwait
divb
and
pusha
gs
xlat
imul
push
jg
sbb
jp
xchg
lock
aam
repz
pop
mov
mov
scas
shll
xor
add
xchg
pusha
cmp
and
xor
daa
pop
sbb
jle
arpl
shrl
outsl
fldt
icebp
daa
lock
xor
dec
andl
pusha
xor
mov
jecxz
into
popa
ret
gs
mov
out
into
cld
jl
or
jl
mov
pusha
push
ficompl
jae
cmc
xchg
cmp
imul
pushf
jb
mov
mov
pop
mull
sbb
sub
sbb
fdivrs
fs
xor
cmpsl
cmp
popa
sbb
dec
pop
ljmp
imul
cld
mov
ss
shrl
cmc
or
sbb
mov
sbb
inc
int3
scas
jecxz
jnp
dec
rcr
inc
test
add
fbld
addr16
in
std
ret
repz
jg
mov
leave
test
test
sub
inc
sbb
aam
loop
sbb
bound
xchg
cmp
push
das
insl
pop
pop
jecxz
cltd
in
test
cmp
outsb
jae
fmuls
pop
inc
into
shr
pop
fnstenv
dec
xchg
int3
push
xchg
add
or
jns
inc
mov
insb
out
aam
leave
push
cmp
sub
fcmovnb
mov
inc
subl
test
adc
arpl
cltd
sub
divl
adc
pop
pop
iret
pop
pop
dec
ret
cmp
sbb
gs
pop
pop
cmpsb
aad
dec
into
push
adc
lahf
stc
dec
jae
cwtl
adc
sbb
int
fucom
mov
xchg
mov
lods
or
movsl
xchg
mov
negb
or
xchg
pushf
lahf
loope
and
mov
out
dec
jno
or
mov
es
sbb
jae
gs
xchg
into
aaa
sti
inc
mov
inc
mov
and
pop
add
lahf
arpl
ret
inc
xchg
jo
addr16
inc
push
les
data16
push
mov
push
pop
and
cld
cmp
jne
push
inc
stos
in
adc
xor
inc
mov
fisttps
gs
push
lret
iret
pop
xlat
in
addl
negb
push
fldenv
cs
sbb
mov
loope
sub
es
inc
xor
sub
inc
sbb
mov
les
loopne
cmc
imul
fs
inc
loope
jge
cmpsl
cli
or
aas
cmp
mov
sahf
out
jnp
mov
jae
cmp
mov
movsl
adc
add
ficompl
je
popa
mov
adc
stos
lret
pop
sti
xchg
out
ficoms
sbb
sbb
lock
push
sub
adcb
dec
lock
roll
dec
daa
mov
mov
xor
imul
add
popf
ja
adc
aas
cmp
adc
lret
xlat
mov
mov
jbe
and
mov
or
jp
stos
dec
es
insb
aaa
or
pop
sub
fimull
jmp
scas
icebp
iret
mov
adc
and
or
xchg
icebp
pop
popf
gs
dec
xchg
pop
inc
lahf
repz
popf
adc
cmp
inc
test
and
pop
inc
sbb
add
xchg
or
pop
pop
xchg
orb
dec
add
sarb
sbb
mov
nop
in
outsb
pop
jmp
das
fldl
add
xchg
inc
lock
stos
mov
xchg
jne
nop
es
loop
sbb
ret
movsl
xor
jne
iret
pop
or
pop
mov
sub
and
es
aam
mov
mov
adc
cs
stos
out
add
jmp
xlat
cwtl
lods
dec
clc
xchg
and
les
imul
stc
xchg
push
xchg
cmp
ret
in
sub
mov
sbb
mov
mov
in
xchg
rclb
lret
mov
daa
jae
push
stc
xor
push
pop
push
mov
stos
in
nop
adc
aam
xchg
sub
int
push
mov
mov
mov
addr16
aam
data16
mov
sbb
adc
bound
jmp
adc
xchg
inc
dec
lcall
push
jne
das
ret
and
cmp
push
xchg
push
and
roll
xor
movswl
clc
fidivrs
movsb
adc
jle
loop
mov
test
xorl
adc
test
andb
popa
mov
ret
add
adc
sbb
mov
or
or
lahf
xchg
or
xlat
lock
inc
sub
or
fldl
orb
aaa
mov
ficomps
iret
ficoms
jnp
cmp
test
or
mov
jne
orl
sub
js
in
inc
pop
adc
leave
fidivs
mov
clc
rolb
scas
addr16
cmpsl
call
popl
clc
movsb
popa
mov
lock
pusha
lock
mov
sub
cmc
cmp
popf
push
fcmove
mov
mov
cmp
cmp
scas
mov
insb
loope
insb
loop
xchg
sbb
cmp
pop
jge
data16
sub
shrb
fistps
or
repnz
lret
xor
sti
cwtl
jb
orl
or
imul
cmp
sbb
ror
flds
pop
rorl
adcl
xchg
mov
pop
push
mov
lahf
or
cmp
mov
rcll
js
push
mov
fbld
mov
pop
sub
imul
repnz
push
stc
sub
mov
jl
mov
mov
pop
pop
or
jno
push
rcrl
xchg
adc
pop
ljmp
mov
pop
pushf
and
dec
ds
rclb
das
fnstenv
je
jge
push
cmp
push
icebp
ficompl
sbb
mov
push
movsb
inc
sbb
mov
mov
nop
mov
inc
pusha
pop
fnsave
data16
mov
sbb
aam
movsb
fwait
cli
and
lds
leave
or
pop
inc
mov
stos
in
xor
push
dec
pextrw
jl
add
adc
mov
hlt
inc
gs
xchg
stc
jg
js
ds
push
lret
mov
cs
nop
or
push
daa
jmp
aas
mov
jp
cld
sbb
outsb
sbb
std
rcrl
xchg
jmp
daa
enter
andb
cmp
and
xchg
add
adc
inc
add
dec
mov
xchg
js
mov
leave
adc
pop
sbb
mov
cli
mov
inc
inc
xor
push
aaa
pop
jb
pop
inc
imul
adc
test
movsl
fmull
push
mov
pusha
fiadds
into
dec
jnp
pop
mov
sarl
movsb
ffreep
jae
out
stos
lret
xor
pop
pop
fmul
mov
mov
sahf
and
fs
sbb
into
ja
bound
sbb
daa
mov
adc
ret
inc
fimuls
adc
jl
xchg
test
sub
jge
sub
xor
es
aam
and
push
sbb
addr16
dec
popf
outsl
fcomip
xor
leave
cmp
shll
in
lcall
fbld
pop
xor
nop
cmp
pop
sub
sub
das
das
add
popa
rcr
mov
jb
addr16
std
nop
and
push
sbb
adc
xchg
dec
mov
arpl
mov
adc
mov
xchg
mov
adc
xor
mulb
stos
add
repnz
test
cmc
mov
out
daa
cmpsb
repz
push
mov
incl
pop
test
imul
xchg
fcomps
test
sti
mov
adc
pop
sbb
or
pop
icebp
jle
outsb
js
test
ret
mov
ds
jno
inc
out
stos
andl
mov
hlt
sahf
mov
pop
or
add
xchg
out
inc
cmp
daa
sub
int
test
adc
and
jo
stos
jecxz
fidivrl
xchg
or
lret
inc
cmc
lds
aaa
mov
leave
out
xchg
into
cwtl
sbb
jne
std
xlat
push
mov
jmp
mov
xor
sub
gs
leave
mov
pop
ljmp
ss
mov
and
add
fcompl
addr16
mov
fstl
dec
enter
cltd
and
movsb
addr16
inc
adc
xor
notb
sbb
and
gs
mov
xchg
jno
push
int3
push
mov
push
out
je
mov
mov
mov
fildl
out
dec
and
sbb
cmc
sbb
roll
dec
add
sbb
scas
sub
sbb
fwait
sub
pop
lcall
sub
sbb
and
scas
mov
sahf
mov
faddl
cmp
or
movsl
jg
addr16
jns
pop
push
push
jne
cmp
jbe
dec
push
xchg
mov
ret
add
inc
xchg
pop
mov
paddsw
push
mov
je
mov
data16
adc
xchg
xchg
push
mov
cmpsb
jecxz
mov
cld
out
fnstsw
aam
fidivrl
dec
ja
dec
sbbl
lret
push
cmp
sahf
incl
lret
sub
sbb
or
push
rclb
push
mov
push
sub
dec
sbb
sahf
inc
xchg
iret
sub
sbb
adc
cmpsl
xchg
test
xor
jmp
push
lret
cmc
lods
inc
addr16
xor
mov
cltd
and
or
in
scas
in
sub
pusha
mov
std
and
fs
adc
and
sub
int
adc
das
add
jecxz
sub
xor
xlat
add
jnp
testb
int
mov
aad
xchg
xor
aas
mov
push
push
lods
inc
xor
test
fcompl
inc
inc
dec
xor
repnz
mov
inc
sbb
xor
sub
mov
jmp
lods
push
xchg
add
cmc
add
push
rorl
xor
xlat
loopne
jne
pop
mov
jno
push
scas
cld
fidivl
int
mov
cli
in
popa
or
dec
push
xchg
mov
test
sti
inc
stos
sub
cmp
adcb
shr
dec
cli
adc
or
fwait
loop
scas
push
and
mov
sub
ljmp
sarl
jp
pop
xchg
cmpsl
popa
sub
inc
jno
pusha
mov
insl
push
scas
xchg
dec
loopne
xchg
jb
pop
or
lcall
insl
xor
mov
sub
ret
push
std
adc
aad
inc
push
cmpsb
icebp
cmp
shlb
push
popa
mov
gs
xor
gs
insb
and
clc
fistpl
push
adc
sub
xchg
cmc
push
sub
ret
xchg
push
imul
mov
pop
stos
dec
sbb
add
pusha
add
push
xor
rorl
jne
jecxz
je
imul
and
repnz
std
dec
mov
pop
sub
or
xorb
mov
inc
into
mov
cs
cmp
cwtl
scas
out
in
xor
xchg
aam
pop
cmpl
lods
mov
call
mov
fistps
js
add
lds
cmp
push
inc
mov
mov
fs
out
es
loopew
sbb
adc
movsb
dec
push
scas
dec
fs
aad
jmp
add
mov
nop
addr16
and
addr16
cmpsb
cwtl
inc
mov
in
mov
paddsb
jb
lret
enter
mov
push
sbb
inc
xchg
dec
stc
repz
iret
bound
inc
out
test
sub
mov
adc
add
push
aaa
call
pop
adc
loopne
or
inc
popa
fisttpll
add
xor
repz
in
adc
jbe
stos
ja
mov
into
addr16
loopne
pop
fidivl
adc
enter
int
and
lret
push
rcrb
adc
and
insb
in
testb
repz
xor
mov
fcoml
dec
pop
or
mov
xchg
into
mov
loopne
aad
mov
ret
cmpsl
dec
fwait
movsl
cwtl
popf
xor
add
pop
dec
outsb
dec
mov
insl
daa
mov
pop
pop
add
push
push
jp
mov
mov
sub
cmpsl
das
popa
mov
xlat
sbb
sahf
setbe
push
or
mov
sbb
jp
jb
push
nop
mov
adc
push
pop
jmp
lcall
cli
add
push
mov
push
sbb
jo
cmpl
push
add
sub
into
push
mov
pop
xor
add
xchg
inc
es
mov
add
test
jne
out
shl
es
push
aas
bound
out
push
sbb
add
popl
xlat
sbb
aam
jmp
and
fldl
or
and
fs
lret
cmp
mov
into
sahf
lea
xchg
jl
ss
es
inc
mov
fdivrs
orl
inc
push
lods
push
movsl
stos
xchg
inc
inc
mov
hlt
out
loopne
imul
addr16
lea
rcr
mov
push
lds
arpl
cwtl
or
iret
jecxz
push
and
or
push
insb
xchg
andb
data16
push
lahf
icebp
push
cmp
sti
lahf
xor
adc
jb
mov
jns
in
mov
adc
jnp
pop
clc
cmp
ret
cltd
adc
push
fnstenv
pop
push
adc
inc
imul
xorb
sbb
jns
fdivrl
push
xchg
popf
cltd
mov
push
jo
dec
fimull
call
lret
in
inc
popa
les
daa
dec
loop
jae
push
enter
jl
aad
rol
inc
adc
mov
mov
cmp
xchg
ss
std
xchg
decl
sub
fistpll
sbb
orb
pop
cmp
sahf
icebp
jl
push
roll
repz
push
sub
rcll
leave
xor
cli
or
cli
pop
xor
hlt
aas
das
test
js
clc
std
push
lcall
dec
mov
fs
push
sbb
aas
mov
jp
jl
in
roll
into
decl
jno
je
nop
in
and
add
fbstp
pop
sbb
dec
in
ficomps
loopne
dec
loopne
dec
cltd
repnz
cmpsl
leave
xchg
popa
cld
or
add
nop
mov
das
pop
stos
inc
push
cmp
scas
cld
lds
add
cmp
insl
sub
shlb
adc
mov
movsb
pop
addl
dec
or
in
das
repz
cli
lahf
add
cmpsl
push
data16
sub
lahf
mov
stc
pop
mov
adc
jecxz,pn
movsb
mov
cmp
add
pop
leave
or
in
xlat
stos
fcoml
dec
push
xlat
mov
sub
jbe
cmp
int
scas
pop
sti
cmova
scas
lahf
test
loop
pop
cmp
aaa
push
test
out
inc
lods
imulb
xor
inc
movsb
call
imul
scas
enter
and
popf
mov
mov
dec
and
imul
shll
cld
xchg
jecxz
aas
mov
adc
dec
lahf
popf
insb
popf
push
cmp
lods
pop
in
cli
sub
fiadds
dec
inc
adc
mov
lds
sbb
xor
xchg
dec
cld
leave
push
and
inc
outsl
movsl
mov
movsb
loopne
mov
sub
push
aaa
push
mov
js
sub
or
loopne
mov
xchg
or
sbb
push
sub
mov
dec
mov
ds
fidivrl
pop
xchg
push
pop
nop
sub
decb
les
mov
adc
inc
or
jb
jl
or
adc
ja
xor
psrld
xchg
incb
int
out
pusha
ja
inc
insb
jp
mov
sbb
std
gs
and
aad
cs
pop
gs
pop
mov
add
or
mov
mov
cmpsb
lret
add
xor
lahf
adc
mov
lds
stos
push
push
pop
cmp
dec
mov
aam
iret
iret
dec
jle
scas
nop
xor
inc
mov
inc
mov
adc
out
cmp
xchg
std
sbbl
xor
mov
aas
adcb
mov
sbb
jge
outsl
inc
lds
jmp
lock
mov
push
sbb
sbb
nop
in
jo
or
out
test
inc
mov
mov
push
cld
adc
push
fstpl
inc
dec
and
add
roll
lock
nop
xchg
sbb
repnz
mov
add
lret
pop
mov
jg
push
loope
jmp
jp
cmp
int
stos
xchg
shlb
jmp
popf
jmp
lret
in
push
xor
repz
add
mov
jne
pop
scas
cmp
std
pop
aad
notl
or
repz
stos
pop
adc
xchg
xor
xor
pop
jb
add
adc
jecxz
mov
xor
mov
mul
mov
lahf
out
repz
sub
ljmp
leave
mov
jb
push
inc
jno
fcmovnb
push
xor
call
adc
js
xor
pop
cwtl
push
jl
push
inc
pushf
loope
sub
adc
sub
imul
jne
jnp
lods
lds
push
notb
insl
pop
pop
ret
in
xchg
dec
pop
inc
push
mov
repz
or
mov
pushf
sub
ja
shrl
dec
xor
pop
shlb
xchg
xchg
pushf
push
popa
div
int3
lods
add
ficomps
rcrl
clc
cmp
adc
mul
add
xchg
adc
and
jge
xchg
adc
aas
add
xorb
fdivp
mov
sub
pop
ror
add
dec
xchg
imul
test
repz
decl
pop
mov
sbb
mov
sbb
aad
lcall
mov
cs
scas
cmpl
insb
push
xchg
sub
stc
ljmp
outsl
sarb
sbb
push
push
scas
movsb
xchg
mov
js
or
in
mov
loop
mov
push
int3
adc
xor
outsl
add
and
mov
push
sbb
adc
loop
loope
call
ljmp
jle
mov
ror
jmp
sbb
fistpll
sub
dec
add
xlat
xor
inc
hlt
xor
fdiv
pop
sub
mov
in
ljmp
mov
in
inc
sub
stos
in
sbb
or
imull
das
lock
into
stos
icebp
sub
shrl
adc
inc
add
sahf
je
push
aad
enter
fldz
punpckhbw
xor
or
fs
xor
scas
push
pop
pop
or
imul
mov
fdivrp
movsl
lret
mov
roll
fadd
xor
fcomps
push
xor
sbb
repz
sbb
loopne
push
mov
pop
imul
pop
jno
movsb
and
in
loop
mov
sbb
cwtl
jae
arpl
jg
lahf
inc
xchg
inc
jmp
clc
xchg
jbe
mov
int
lds
loope
cmp
inc
push
jo
stos
push
sarb
sub
mov
xchg
push
sub
mov
insl
insl
outsb
imul
xchg
mov
xor
aas
push
xchg
mov
add
out
ja
add
mov
push
fdivrs
decl
jp
inc
sahf
dec
push
mov
sbb
lea
test
mov
sti
xor
adc
out
mov
stos
movsl
cmp
push
stc
xchg
jmp
inc
add
add
jg
call
inc
fsubl
out
adc
das
jg,pt
jbe
scas
mov
xchg
cltd
adc
fs
pushf
fstpt
dec
and
incb
pop
xchg
mov
outsb
sub
lret
insb
movsb
or
jmp
xchg
sahf
fistl
cmp
add
mov
movsl
push
daa
addl
mov
pop
adcl
sub
push
aam
push
pop
jge
jp
lods
test
int3
sbbl
adc
cmp
sti
in
mov
ss
cmpsl
insl
push
aam
inc
dec
imul
loop
aam
jo
test
insl
sub
dec
ret
adc
scas
mov
cmpsl
outsb
imul
pop
inc
stos
push
inc
sub
sub
ss
sbb
iret
notb
sub
inc
inc
cmpsb
insl
cmp
or
mov
inc
out
and
lock
mov
jb
jp
rcll
stos
pop
aam
stos
xchg
mov
aad
jmp
mov
and
inc
or
add
dec
xchg
mov
dec
stos
jo
sbb
and
outsl
mov
xlat
subb
xchg
ds
lods
mov
loopne
jbe
insl
int
push
adc
into
push
subl
popf
mov
mov
divb
popf
xor
scas
push
cmp
in
test
fwait
popf
cltd
insb
in
xchg
aad
adc
adc
or
test
sub
xchg
daa
fdivl
add
hlt
mov
cmp
lea
adc
jecxz
lea
bound
movb
adc
call
fadds
out
jle
aas
hlt
idivb
and
and
cmpb
and
push
xorl
dec
sbb
lods
ljmp
push
inc
gs
mov
call
push
mov
movsb
gs
mov
in
push
ss
add
mov
test
stos
mov
movl
dec
pop
jne
dec
gs
sbb
add
notl
lds
push
inc
mov
push
lock
inc
mov
sbb
imul
and
add
jg
push
xchg
ud0
out
xor
rol
dec
fistl
and
enter
enter
loop
sbb
cmp
imul
or
enter
orl
pusha
push
inc
ror
int3
arpl
sti
lds
icebp
out
xor
mov
enter
cli
pop
sbb
mov
cmpsl
call
fmuls
xchg
out
aaa
pop
in
cmpsl
movsl
daa
xchg
pop
lret
push
xchg
pop
in
cmp
xor
mov
das
or
mov
jp
cmp
dec
insl
lods
movsl
adc
jmp
test
in
xrelease
mov
js
cmc
mov
mov
fisttpl
adc
lret
aas
push
sub
mov
faddl
mov
xor
pop
nop
in
sbb
inc
fidivs
push
inc
inc
mov
cmp
outsb
xchg
mov
scas
inc
mul
mov
fs
daa
inc
push
dec
enter
or
sub
in
dec
jnp
in
push
call
push
shrl
push
ret
or
repz
mov
jae
pusha
jp
or
int3
sbb
sbb
stc
jbe
arpl
cmp
pop
ss
gs
mov
data16
lock
repz
pop
mov
movl
div
loopne
mov
xchg
inc
pop
in
adcb
cmpb
push
shl
ret
mov
aam
jbe
push
dec
mov
push
fadds
sbb
cmpb
lret
jl
xor
icebp
sbbb
fwait
xchg
imul
mov
jno
lods
pusha
or
mov
or
test
add
test
sbb
sbb
out
loope
xor
push
dec
data16
adc
or
xchg
or
mov
mov
test
lods
or
subb
sbb
lods
into
iret
pop
daa
push
jecxz
inc
call
imul
xor
dec
xchg
xlat
jae
inc
je
sub
or
ja
cmp
inc
fs
xchg
std
aad
repnz
xchg
mov
rclb
notb
jge
push
xor
je
pop
add
cmp
ret
pop
xchg
add
repnz
push
out
sbb
mov
push
jae
adc
and
push
outsl
cmpsl
mov
cmpsl
lret
scas
xchg
sbb
push
cmc
mov
dec
rcll
and
xchg
inc
push
cmp
adcl
out
aad
push
test
sub
insb
dec
leave
into
mov
adc
ret
loop
inc
out
movsb
inc
pusha
inc
cmp
movsb
inc
call
outsb
xor
adc
movsl
xchg
sbb
inc
xchg
pop
fsubrs
pop
test
iret
mov
dec
xor
imul
enter
dec
rcll
mov
or
jb
mov
cmp
push
mov
outsb
in
mov
stos
hlt
or
add
ljmp
int
inc
xchg
jno
xchg
add
andl
lcall
pop
lds
add
movsb
loop
ljmp
or
push
ret
enter
jle
cmp
fcmovnbe
lahf
xchg
jns
ret
jae
and
mov
sbbb
cld
das
popf
pop
mov
inc
xchg
cmpb
pop
fmuls
imul
dec
scas
es
adc
cmpl
add
xor
mov
mov
cmp
icebp
lret
dec
push
stos
dec
addr16
ret
loop
jg
lret
inc
mov
enter
leave
push
jns
aad
cld
add
jnp
int3
dec
call
jge
popf
outsl
jge
xlat
jecxz
loop
xor
pop
scas
fdivrs
les
lsl
xor
shll
jge
imul
mov
cmp
arpl
jge
sahf
mov
and
repz
into
test
push
sarb
daa
sahf
inc
je
pop
pusha
fwait
subb
test
dec
cmp
out
xchg
daa
sbbl
push
in
add
add
sbb
and
stos
pop
jl
inc
enterw
lds
mov
in
sbb
lea
pop
lods
scas
add
sub
and
lahf
leave
cmp
and
xchg
sub
xlat
lods
test
jmp
adc
mov
jge
mov
into
adc
orl
lahf
mov
adc
flds
jl
sbb
xchg
sahf
ret
push
in
popa
stos
gs
stc
aaa
pop
mov
popf
sub
mov
push
aaa
sub
in
icebp
lods
xor
mov
cmp
add
xor
js
dec
movsb
mov
test
add
cld
lret
jbe
daa
call
xchg
stc
pushf
push
adc
pop
sbb
int
test
mov
lcall
out
popa
imul
dec
xchg
loopne
mov
mov
or
pop
sbb
jnp
add
out
xchg
jo
jno
addr16
dec
mov
adc
sbb
mov
mov
addr16
push
in
mov
shrl
mov
rcr
jbe
add
lcall
lock
out
push
in
in
lds
lock
fsts
sbbb
imulb
stos
cli
sub
sub
push
sbb
jle
cld
push
lcall
sbb
popa
cld
lods
sti
dec
xchg
lea
jnp
mov
loop
mov
dec
push
cmp
mov
jb
push
sub
push
cmp
mov
pop
pop
lret
repnz
pushf
fimull
ffreep
popa
xchg
mov
dec
sub
mov
int3
orl
int3
cs
and
jmp
mov
fcmovne
test
push
in
jle
repnz
imul
cltd
sub
data16
xchg
dec
adcb
lea
lock
cmpsb
dec
std
and
sar
loope
or
ja
adc
jb
std
lcall
xchg
pop
dec
cltd
das
lahf
xchg
adc
and
pop
ds
icebp
fiaddl
xor
lock
outsb
adc
pop
pop
fs
jb
call
out
sub
jge
jne
sub
dec
sbb
in
incl
push
shrb
mov
fcompl
fldl
and
jbe
ss
seto
imul
enter
cwtl
in
movsl
imul
sub
test
lea
lret
scas
dec
jg
inc
or
loopne
mov
inc
cmp
aas
lcall
cmpsl
sbb
pushf
xchg
hlt
mov
xor
or
cmp
add
sub
adc
cld
insb
daa
popf
fsts
adc
enter
aas
ret
out
jl
shl
subb
repnz
icebp
and
xchg
fimull
inc
mov
mov
mov
cltd
jnp
jecxz
jo
jle
lret
push
mov
enter
push
mov
push
iret
cmp
aam
jle
and
bound
or
or
repz
jo
aaa
mov
clc
inc
dec
test
add
cmc
sbb
sub
mov
out
and
xchg
cltd
shrb
dec
fsubrl
ret
xchg
repnz
hlt
cmp
outsb
ss
and
xchg
fs
arpl
es
js
dec
xchg
arpl
shrl
pop
outsl
pop
sti
or
cmp
mov
addr16
sbb
ja
fnstsw
lcall
add
fdivp
sti
cli
push
mov
cmp
pop
mov
stc
jne
mov
rclb
hlt
and
int3
dec
imulb
jge
cmp
outsl
les
push
mov
adc
push
jo
bswap
dec
fstps
addr16
icebp
ret
inc
sub
pop
aas
cmc
jge
leave
sub
push
loop
mov
jb
fstpl
fwait
aad
cld
or
pop
mov
call
mov
lcall
push
mov
mov
ds
adc
out
sub
or
xchg
popa
dec
or
inc
jmp
mov
aaa
mov
cmc
mov
dec
fbstp
jmp
cmp
cld
pop
dec
mov
mov
shl
add
enter
push
dec
fcompl
xchg
sub
jmp
push
cmpsl
push
cmc
sub
mov
sub
das
or
pop
mov
push
out
adc
pop
adc
add
rep
lock
movsl
mov
pop
stos
mov
daa
xchg
cli
and
aam
lret
and
cmp
arpl
cmpsb
push
pop
movsl
and
and
daa
out
sbb
jmp
mov
jmp
fldt
cmp
push
adcl
adc
scas
add
into
jmp
jno
adc
lahf
dec
jp
leave
sti
mov
pop
insb
adc
or
push
cmp
mov
cld
and
and
mov
fsts
mov
cld
xchg
sub
push
loop
push
out
push
xor
mov
sub
jmp
stos
and
or
out
cs
sub
popf
enter
lock
mov
aad
inc
rcll
mov
lret
and
push
cmp
pop
jb
rclb
les
mov
xor
push
lahf
iret
add
or
pop
inc
mov
dec
inc
mov
arpl
int3
or
and
mov
xor
adc
adc
adc
dec
sub
jecxz
lret
push
popa
push
in
hlt
shl
in
cmc
cmp
rcll
in
dec
jno
sbb
push
ret
loopne
gs
scas
cmpxchg
and
adc
push
cmpsb
insb
jns
xor
pop
lcall
mov
adc
popf
or
je
sti
jb
ss
cmp
leave
test
xor
mov
mov
xchg
jle
daa
and
and
sbb
clc
aaa
fimull
out
mov
rclb
and
pop
idivb
scas
and
and
mov
add
push
jo
out
xchg
subl
jo
mov
rorb
clc
int
push
xor
add
mov
dec
xor
scas
xchg
lret
js
mov
or
jb
inc
lret
mov
test
sub
push
fistpll
mov
stos
sbb
adc
jb
aas
mov
out
das
es
lds
das
out
insb
pop
adc
mov
mov
movsl
sub
das
sub
mov
out
pusha
xor
xchg
and
imul
pop
hlt
add
jmp
aam
imul
int
sbb
stos
pop
or
push
inc
shll
test
push
or
xor
clc
push
lret
add
xor
xchg
jge
fs
sub
dec
mov
ss
push
add
xor
lret
into
push
sub
jl
adc
scas
mov
inc
and
dec
jae
cmpsl
xlat
cmc
dec
mov
or
push
stos
jl
mov
inc
in
jns
outsb
adc
cmp
pop
or
inc
jbe
rolb
pop
push
or
push
repz
xchg
fnstenv
xchg
cmpsb
xor
add
push
pop
inc
xchg
ss
jmp
lds
fisubl
std
stos
fwait
adc
inc
ja
pop
or
cmpsb
and
or
xchg
pop
test
popf
xor
mov
nop
sbb
fcmovnbe
sub
arpl
cmc
je
out
ljmp
cmc
xor
cmp
xlat
or
cs
jp
ficompl
cltd
fs
frstor
cmp
and
loope
lds
cld
pop
mov
or
cmpb
jbe
adcl
jg
push
in
loop
inc
lret
push
dec
inc
sahf
ds
std
dec
inc
call
push
fcomp
std
xchg
fimull
xor
jmp
bound
inc
xor
cs
pop
sbb
xor
mov
cwtl
jnp
loopne
jge
leave
dec
push
jno
add
jno
mov
movsl
stos
imul
cltd
dec
adc
in
dec
sbb
insb
hlt
xchg
mov
repnz
imul
in
cmp
data16
hlt
mov
repz
inc
xchg
mov
outsb
mov
xlat
arpl
mulb
or
ds
jecxz
push
xchg
xlat
add
cmc
cmp
cmp
test
jns
fldenv
jo
es
inc
pop
pop
data16
push
jge
cmp
dec
bound
mov
dec
loop
mov
loop
mov
fisttpll
imul
aas
popf
enter
scas
int
sysenter
sub
loope
stos
jno
mov
in
imul
adc
sbb
mov
adc
iret
pop
in
inc
push
inc
dec
push
jne,pn
pop
int
lret
subb
insb
fdivs
stc
enter
imul
add
int
and
sub
outsb
out
push
jb
inc
sbb
xor
lcall
lods
fiaddl
arpl
and
jns
ficoml
cltd
pop
out
das
popf
lret
aas
jecxz
jae
iret
repz
jl
pop
pop
mov
pop
scas
mov
jl
js
stos
fidivrs
adcb
mov
add
cwtl
push
inc
dec
inc
xchg
ljmp
outsl
in
test
and
scas
cmp
push
decl
enter
inc
and
shlb
jge
sbb
dec
sbb
in
loopne
sahf
pop
call
mov
sbb
sub
fdecstp
or
cmpsl
aaa
fs
xchg
adc
lret
enter
inc
imul
cmp
test
pop
push
imul
jb
jno
sahf
popf
lret
popa
xor
enter
xlat
aam
or
add
push
lods
jmp
mov
xchg
push
imul
mov
pop
dec
pop
bound
or
mov
sti
cmpsb
mov
lcall
ja
cltd
jo
xchg
sbb
inc
dec
mov
testl
lret
push
cld
out
dec
outsb
mov
imul
test
xlat
call
push
cmp
imul
aam
or
push
test
cmp
loop
pop
jo
jecxz
adc
sarl
mov
cmp
jl
in
inc
fldcw
push
stc
pop
push
mov
inc
jp
sbb
sahf
xlat
fcmovnbe
movl
add
adc
inc
in
cmpsb
and
cmc
loope
fstpt
ss
xor
adc
cltd
jns
outsb
fwait
sub
movsb
iret
sbb
pop
in
std
or
leave
ret
pop
cli
enter
icebp
leave
insb
mov
sub
mov
mov
mov
cs
push
js
jnp
dec
gs
aaa
iret
in
stc
rorl
adc
icebp
add
adc
shrl
push
add
adc
jge
push
ret
je
mov
lods
fwait
sbbb
xchg
in
stos
out
add
sbb
shlb
movsl
mov
cltd
mov
or
pop
mov
mov
sub
movsl
cmpsb
inc
pop
icebp
cmpsb
mov
fsubrs
inc
test
cmpsb
dec
mov
ficomps
lods
push
outsl
cltd
and
nop
ljmp
les
std
inc
mov
mov
cs
mov
cmp
imul
mov
mov
mov
or
and
shll
push
int3
jo
es
shlb
mov
mov
cmp
sub
int
testl
or
loope
testl
sti
dec
or
sbb
mov
mov
test
pop
mov
outsb
sahf
daa
jge
ljmp
insl
xchg
adc
negl
negb
pop
dec
mov
adc
movsb
sub
mov
cs
adc
mov
and
or
int
xchg
loop
sub
or
cs
cmpsl
jo
mov
addr16
or
or
loope
inc
jmp
jge
ljmp
mov
fnsave
cmp
sbb
stc
sbb
inc
je
push
mov
mov
mov
xchg
xor
dec
cld
mov
lret
jnp
shl
adcl
inc
push
fidivrl
push
dec
pushf
sbb
xchg
xchg
add
and
xchg
pop
adc
aad
insl
inc
negl
sarb
das
pop
fldcw
insb
or
stc
jnp
push
inc
in
xchg
les
sub
sarb
out
xor
mov
add
adcb
in
mov
out
jmp
and
add
clc
pushf
or
mov
mov
dec
and
lods
push
and
outsb
movsl
not
test
dec
push
into
cwtl
cld
or
fs
lea
pop
fdivr
xchg
jo
dec
lods
mov
add
ss
push
push
cld
in
mov
and
inc
pop
cwtl
push
lock
cmc
negl
sahf
add
rcrl
adc
mov
or
lret
decl
mov
outsl
pop
pop
fildll
mov
mov
xchg
seto
fwait
aad
test
in
lcall
mov
lahf
cld
insb
sub
stos
add
add
sbb
push
into
mov
ss
inc
and
outsl
mov
xchg
cmp
mov
or
add
sub
das
sbb
cmpsl
ds
dec
xlat
push
movsl
ljmp
int
mov
xchg
mov
in
popf
jo
test
or
rcr
xchg
or
int
mov
and
inc
lods
test
lock
enter
stos
inc
mov
bound
cmp
xchg
and
inc
out
insb
adc
pop
dec
xchg
push
fwait
add
data16
fs
adc
lret
int3
pop
das
rcrb
push
fwait
mov
cltd
in
test
mov
lcall
xchg
rcl
movsl
mov
xchg
stos
data16
mov
das
mov
fbld
mov
mov
les
pushf
bound
adc
nop
jnp
js
xor
mov
pop
fninit
aad
mov
mov
ret
push
mov
mov
insl
push
or
test
cmp
enter
sti
imulb
iret
pop
mov
lods
cwtl
pop
ds
inc
mov
enter
cmpsb
jae
xchg
roll
lods
dec
ljmp
xor
dec
fmuls
sbb
xorl
mov
cli
test
push
call
inc
cmc
aaa
lcall
mov
inc
mov
jmp
push
dec
and
add
cmp
sbb
xor
test
cmc
xor
int
adc
xchg
movsl
mov
jmp
stos
xchg
aad
sub
xor
push
ds
pop
fidivrl
js
mov
push
xorl
std
add
popa
out
sbb
push
js
mov
mov
mov
pop
popa
jns
sub
orl
cwtl
mov
mov
jnp
cmpsl
push
or
das
stc
inc
cltd
sub
dec
notb
dec
iret
jb
pop
add
fiaddl
dec
inc
xchg
xchg
mov
iret
cmpb
push
inc
cmp
ss
stc
mov
in
jo
lahf
gs
fisubl
add
sub
xchg
pop
mov
in
jnp
aaa
add
fwait
jne
xor
cmp
jecxz
rep
aam
cmp
sbb
mov
fwait
adc
pop
hlt
and
popa
clc
mov
hlt
adc
xlat
mov
xchg
pushf
pop
inc
fisubs
repz
daa
adcl
adc
push
inc
mov
jle
hlt
shll
loopne
nop
lock
out
nop
dec
aad
push
cmpsl
xchg
out
in
aaa
jno
jecxz
sub
push
mov
imulb
into
or
loop
push
sbb
and
gs
mov
leave
cmp
hlt
aam
cmp
push
movsb
roll
ljmp
adc
dec
scas
sub
adc
adc
mov
pop
and
adc
jecxz
ljmp
mov
lret
jo
add
incb
leave
dec
and
gs
enter
out
mov
push
sbb
cmp
or
push
mov
stc
fwait
stos
and
dec
xchg
ret
mov
mov
inc
test
mov
xchg
ja
cmp
cmc
mov
pop
negl
cmp
aam
data16
xchg
adc
mov
popa
jl
insl
mov
iret
mov
add
mov
fwait
roll
pop
mov
inc
pushf
add
in
in
hlt
pop
xchg
mov
mov
test
jecxz
movsl
jp
aad
outsl
mov
clc
jmp
pop
ds
cmp
push
pop
stos
pop
vpperm
fistpl
mov
ficomps
popf
mov
nop
daa
push
fs
xchg
pushf
mov
mov
lret
out
leave
testb
pop
in
js
jo
mov
mov
pop
mov
push
lds
mov
shlb
push
cmp
cli
popf
in
push
out
or
cmp
jno
xchg
lock
jle
subb
scas
push
cmpsb
and
lcall
xchg
pop
nop
arpl
xor
jle
daa
subl
or
jmp
daa
cmpsb
test
xchg
mov
enter
ss
inc
lcall
fs
mov
mov
mov
adc
push
xor
test
into
inc
and
lods
xchg
sbb
sub
js
jae
popa
xchg
push
sub
icebp
outsl
out
push
sub
adc
sbb
sahf
jbe
push
popw
sub
in
cmp
out
xchg
xor
sbb
cmpsb
jns
loope
out
mov
xchg
cmp
not
and
les
ds
and
fadds
pop
xchg
popa
mov
xchg
lock
rcl
in
adc
or
or
dec
sbb
mov
jp
inc
and
push
jle
insl
xor
in
cwtl
push
aas
adc
inc
pop
cmp
pop
in
stos
pushf
or
int
mov
dec
hlt
pusha
push
outsb
idivl
mov
jecxz
lock
mov
mov
cmp
xor
sti
lret
stos
loope
cmp
xor
pop
mov
enter
add
add
imul
push
inc
push
mov
inc
xor
inc
dec
dec
jmp
cmp
imul
mov
loopne
pop
push
nop
outsl
daa
mov
mov
mov
xlat
fmuls
test
sbb
sub
andl
pop
shrl
addr16
notb
nop
lds
jnp
lret
xor
nop
add
add
add
dec
adc
add
add
add
add
subb
add
sub
add
enter
add
add
dec
adc
add
add
add
add
mov
add
mov
add
fadds
add
add
add
dec
adc
add
add
add
add
js
add
add
add
jo
add
add
add
add
add
orb
add
add
add
add
add
mov
rolb
add
add
mov
add
dec
adc
add
add
add
add
enter
sub
push
add
xor
add
add
add
add
add
orb
add
add
add
add
add
lock
add
pop
pop
add
add
add
add
add
add
orb
add
add
add
add
add
sbb
add
js
pop
add
lds
add
add
add
add
add
orb
add
add
add
xor
add
add
js
add
mov
add
add
orb
insl
add
add
add
add
push
repnz
add
add
add
add
add
add
add
orb
insl
add
add
add
add
nop
add
add
cmc
pop
add
add
add
orb
insl
add
add
add
add
mov
std
pop
add
add
mov
add
dec
adc
add
add
add
add
add
add
addb
add
dec
adc
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
ja
pop
js
mov
add
add
lock
jg
mov
add
add
xorb
clc
sti
mov
add
add
lock
js
mov
add
add
cmpb
xchg
mov
add
add
lock
js
or
add
jg
cmpb
xchg
add
call
add
lock
out
add
js
jo
add
add
cmpb
mov
pop
xchg
add
lock
scas
jmp
js
jo
add
add
lock
mov
jmp
testl
xchg
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
jo
hlt
call
dec
xchg
add
add
incl
hlt
decb
xchg
add
add
ja
jo
out
call
xchg
add
add
add
pop
hlt
decb
add
add
add
add
hlt
out
out
call
add
add
add
add
hlt
mov
decb
add
add
add
pop
hlt
mov
out
call
add
add
add
pop
hlt
mov
xchg
add
add
add
pop
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
call
jne
and
add
add
add
jne
adc
add
add
add
add
xor
add
add
or
rolb
add
add
add
or
add
add
jl
or
inc
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
clc
jmp
or
outsb
int
clc
leave
outsl
jl
mov
and
cmpb
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
mov
or
loop
mov
mov
lds
adc
xor
iret
and
or
push
es
inc
or
pop
push
lar
or
xchg
xorl
xchg
adc
add
loope
nop
cwtl
mov
sbb
and
cmovl
movsb
and
push
sub
sbb
adc
lea
or
add
mov
push
or
jbe
add
lea
mov
stos
movsb
add
nop
cmpl
adc
pop
jae
test
out
push
sub
xchg
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
ret
lcall
sbb
call
nop
add
lea
les
inc
mov
xchg
aaa
and
push
call
jb
sbb
insl
xchg
rcll
dec
sti
nop
add
lcall
dec
test
or
inc
inc
push
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
ret
lea
test
xor
push
aas
pop
inc
mov
sbb
add
inc
pop
push
aas
shl
adc
push
test
sbb
rorb
or
jmp
or
aaa
fimuls
or
dec
jle
add
add
movb
fsub
jae
dec
mov
push
and
repnz
pop
push
lea
sbb
data16
mov
jbe
mov
add
pop
pop
pop
pop
ret
push
imul
cwtl
jne
cld
mov
or
aas
pop
loopne
push
adcb
or
ret
xchg
shll
add
std
xlat
ljmp
inc
xor
stos
pop
cs
adc
sbb
lods
push
jne
lds
cmp
int
sarl
dec
enter
xchg
mov
scas
sub
jmp
cltd
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
faddp
scas
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
mov
add
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
test
push
push
mov
clc
nop
xor
sub
in
adc
shr
dec
xor
sbb
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
loopne
sub
pushf
dec
mov
fiaddl
stos
inc
or
lret
testb
or
pop
xor
cmp
push
je
outsb
add
jge
inc
pop
push
dec
or
mov
dec
and
push
push
push
push
call
or
dec
sbb
adc
lds
jmp
jae
in
gs
sbb
inc
or
adcl
scas
sbb
inc
inc
mov
inc
or
shlb
pop
test
ret
xor
jmp
dec
arpl
jmp
mov
mov
push
adc
rcl
add
mov
adc
inc
mov
mov
jg
jno
or
and
jmp
sub
dec
pop
inc
dec
ds
push
inc
xor
dec
pop
mov
push
ret
mov
mov
sub
lods
popf
lea
push
outsl
in
repz
xor
sub
mov
dec
call
dec
or
inc
sub
repz
insl
sub
test
inc
sbb
mov
add
lea
add
daa
push
iret
shr
pusha
loope
push
lea
push
fs
cmp
inc
push
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
enter
adc
inc
and
cmpsl
sbb
and
scas
mov
dec
dec
cmp
mov
xor
subb
xor
pop
mov
cmpsb
dec
push
js
jo
insb
push
imul
and
jecxz
lahf
or
jae
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
xchg
daa
arpl
jae
fwait
xor
pop
dec
outsl
push
dec
popa
addr16
inc
outsl
js
shll
js
data16
cmp
int
cmpl
push
dec
movsb
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
orl
lcall
mov
insl
cmp
xchg
or
and
cmp
cmpsb
xor
dec
xor
add
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
hlt
add
add
push
add
clc
or
add
or
dec
add
add
add
add
inc
add
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
shrl
bound
inc
ret
