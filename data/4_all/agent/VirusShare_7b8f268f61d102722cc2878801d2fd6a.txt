pop
fmuls
mov
ret
nop
mov
icebp
mov
in
ljmp
call
movl
pop
sbb
outsb
sbb
and
add
sub
add
daa
pop
sarb
das
sub
mov
iret
jbe
add
add
xchg
or
repz
add
pop
pop
std
jge
frstor
add
push
mov
jl
lahf
int3
add
je
out
aas
negl
lea
add
movl
inc
and
call
push
sbb
iret
or
push
loop
je
add
add
sbb
jl
enter
add
mov
mov
adc
mov
fcompl
fldcw
rcrb
les
icebp
sti
mov
jmp
sub
fmull
mov
mov
sbb
fwait
jle
mov
push
jmp
jl
or
dec
or
push
add
or
jnp
sahf
daa
dec
pusha
add
or
sub
and
pushf
jg
push
jge
add
mov
add
cmovg
pop
sbb
or
rclb
cmp
and
sahf
lar
pop
sbb
idivb
cli
ret
push
test
aas
int3
nopl
cmp
leave
sbb
jbe
lock
pop
fstps
sbb
jns
or
xor
sbb
or
dec
dec
pop
adc
xchg
or
jo
mov
mov
repnz
leave
adc
fmull
or
nop
lock
leave
and
add
add
adc
pop
leave
test
or
add
and
add
add
push
stc
push
incl
mov
add
add
or
inc
cld
js
jmp
dec
enter
push
sbb
fcmovne
mov
idivb
test
adc
pop
ja
push
call
xchg
pop
mov
in
movsb
nop
cmp
in
inc
pusha
inc
out
ja
in
dec
mov
leave
jbe
sti
test
pop
je
or
inc
popf
sub
lret
sub
adc
mov
adc
add
mov
mov
xor
mov
push
push
imul
pusha
adc
scas
lret
xor
dec
sidtl
sahf
scas
sbb
adc
add
imul
pop
roll
adc
add
push
sub
push
inc
inc
rclb
clc
lds
ja
push
adc
xor
or
fs
iret
shlb
add
mov
mov
mov
pop
mov
insl
xchg
add
push
mov
mov
loope
inc
add
ret
inc
and
mov
mov
clc
jo
repnz
cs
jae
incb
repz
je
or
adc
push
daa
mov
mov
sti
test
mov
aam
add
ret
mov
lods
mov
mov
push
mov
cmpl
add
and
aas
popa
inc
mov
adc
out
and
std
jne
mov
adc
subl
sbb
or
imul
cwtl
push
movb
ficoms
mov
add
dec
or
adc
pop
jmp
outsl
cld
push
xchg
lock
or
xor
dec
ljmp
xor
arpl
mov
outsl
inc
cmp
push
das
nop
add
push
and
dec
sbb
icebp
int3
mov
adc
repz
fnstsw
daa
cmp
lock
adc
cmp
push
sbb
je
ljmp
das
pusha
addr16
sbbl
dec
or
orb
outsb
addr16
insb
and
or
or
insb
pop
push
fs
push
arpl
inc
push
fs
gs
ss
push
addl
mov
add
or
outsl
xor
add
jae
adc
and
gs
cmp
or
cmp
cs
sub
leavew
in
dec
adc
mov
call
or
mov
inc
mov
or
sbb
mov
cmp
shlb
push
sub
xchg
fdivl
roll
push
mov
and
inc
xor
sbb
add
int3
int
inc
push
sub
fdivs
cmp
xchg
xor
push
dec
mov
mov
inc
clc
cmp
jl
mov
or
frstor
xor
lea
push
push
mov
sahf
sbb
add
add
fwait
jp
aad
or
xchg
ret
pop
not
or
imul
fistpl
fsubrl
push
jmp
pop
addr16
xlat
rorl
aad
inc
pusha
ljmp
push
adc
sbb
or
push
push
pop
mov
adc
or
mov
xchg
test
xchg
shl
sbb
or
fsubl
daa
mov
call
push
rcrb
push
add
xchg
rcll
mov
js
push
and
push
or
sub
push
or
push
insl
inc
sub
push
push
sbb
int3
mov
mov
xchg
sbb
pop
or
add
push
jg
inc
mov
bound
push
push
dec
sub
jnp
push
pushf
rorl
adc
push
add
lcall
pop
in
sub
jmp
inc
sahf
sub
adc
push
jmp
movsb
enter
fstpl
adc
push
stos
cli
mov
jecxz
push
xchg
jg
sub
push
mov
jne
jmp
scas
push
mov
cld
and
mov
aad
mov
dec
flds
sahf
int
fists
or
roll
sub
add
push
mov
or
mov
cmp
sub
push
push
jmp
jle
fistl
jmp
outsl
push
mov
subl
add
or
je
sbb
cmpsb
xchg
fst
leave
loop
lret
push
js
insl
shlb
mov
push
shlb
mov
and
mov
add
push
out
add
ss
je
cmp
xor
and
ds
lret
cmp
push
xor
rorb
push
xchg
jle
fnstsw
dec
push
sbb
sub
jp
add
cmp
aaa
popa
divl
push
xor
andb
rclb
or
insb
mov
adc
push
and
in
mov
add
cs
pusha
mov
mov
fwait
nop
inc
jp
push
lret
jb
lods
in
aad
insl
inc
test
inc
mov
push
mov
add
sbb
adc
divb
jg
jmp
decb
mov
jmp
stc
sbb
jl
jb
and
mov
sbb
push
sbb
cmp
lret
pop
sti
filds
inc
negb
jbe
cmc
and
addr16
push
fdivrs
inc
cmp
jl
jmp
or
test
repnz
mov
and
sarl
or
jae
in
jne
jb
push
test
push
ss
into
gs
or
dec
iret
adc
ja
inc
lcall
and
outsl
jecxz
push
push
sub
out
mov
push
flds
mov
ret
fisttpl
mov
in
mov
stos
loopne
cltd
sub
push
sti
jns
mov
cmp
inc
int
pushf
aam
cmp
es
ret
je
and
mov
xchg
inc
cmpb
jo
mov
dec
test
movl
mov
push
inc
int
int3
and
hlt
push
push
or
fs
push
or
push
pop
ret
ret
add
push
pop
push
inc
ljmp
xchg
and
lods
nop
inc
dec
adc
cli
and
movl
mov
cltd
rcl
shlb
push
imul
cmpsl
leave
and
add
cmp
test
jo
dec
sbb
xchg
scas
xor
and
mov
push
push
jecxz
test
mov
add
inc
jecxz
lcall
xor
mov
and
in
and
sbb
popa
sbb
call
add
fs
sbb
xor
lret
push
push
or
mov
ret
sbb
inc
pop
sub
popa
test
dec
xor
add
shl
popa
mov
mov
jmp
push
and
iret
rcrl
push
jno
ja
insb
notb
addl
cs
push
mov
push
push
push
xchg
mov
outsb
add
add
icebp
inc
cmp
add
fs
lods
push
ja
imul
and
sbb
push
lock
ret
out
sbb
fdivs
xchg
test
pushl
add
adc
stc
pop
adc
push
in
lahf
adc
jb
xor
leave
add
adc
inc
rorb
add
fcoms
pusha
sub
lea
dec
push
sub
mov
sbb
ret
mov
repnz
mov
add
movl
xor
cmp
lods
mov
xor
add
popa
imul
pop
xchg
jle
or
mov
cmp
out
jno
andb
xchg
cmpsb
data16
sbbb
test
or
xchg
js
mov
mov
add
jne,pn
je,pt
in
sbb
js
push
and
push
inc
pop
sub
inc
das
xchg
or
push
orl
je
add
mov
jle
arpl
fdivs
cmp
push
or
fimuls
fisttps
inc
mov
lret
jl
push
or
jmp
adc
jne
push
ret
gs
jl
xchg
xchg
in
fstps
push
dec
and
push
ret
push
or
popa
sbbl
arpl
insb
std
inc
cmp
mov
rclb
lds
cmp
and
xor
and
mov
push
xchg
leave
or
or
inc
jb
and
mov
xchg
xor
push
adc
pusha
dec
or
mov
loope
ds
add
nop
mov
or
or
in
dec
push
mov
xchg
xor
nop
iret
adc
xor
stc
jl
push
adc
xchg
in
or
xchg
sub
inc
xchg
add
inc
inc
pop
mov
cmp
mov
in
or
sarb
daa
cwtl
mov
push
adc
leave
and
adc
xchg
or
insb
and
push
leave
and
inc
inc
adc
enter
inc
sbbl
jo
sbb
test
sbbl
dec
fadds
push
adc
jl
nop
inc
dec
push
sbb
and
dec
es
push
xchg
sub
jo
nop
dec
cmp
cmp
cmp
lods
jo
sbb
and
sub
jl
push
cs
int
cli
push
or
pop
and
arpl
adc
push
mov
or
int
sub
lahf
loope
outsl
jle
fcompl
mov
add
mov
out
stos
inc
cmp
jl
push
sbb
loopne
or
or
inc
stc
push
and
mov
loop
inc
imul
in
scas
pusha
ja
xor
idivb
ja
vmwrite
add
out
in
ss
add
xor
or
cmp
add
mov
jnp
divl
push
mov
push
pop
sub
adc
push
or
push
icebp
xchg
mov
sbb
fwait
xor
hlt
sbb
or
nop
jns
sbb
jnp
push
xchg
mov
sbbl
xchg
dec
mov
xor
push
inc
orb
bound
stc
inc
int
testl
cmp
sub
dec
popa
into
cmp
push
and
jmp
mov
imul
fldenv
or
pushf
adc
push
pusha
popa
jno
or
cs
jbe
add
ja
xor
or
dec
jns
push
pop
xor
lods
push
pop
popf
cld
push
sbb
and
ljmp
shrl
loope
sub
das
ret
sbb
jnp
pusha
mov
fdivr
bound
out
pop
leave
push
add
ja
dec
ss
jecxz
xor
add
and
or
mov
mov
sub
sti
jl
lock
jb
pop
push
push
and
push
mov
mov
mov
in
ret
jbe
mov
mov
or
push
cmp
add
jl
mov
pop
push
and
jle
inc
jo
and
push
cmp
jnp
jns
push
ret
push
mov
ljmp
xchg
xor
rolb
add
aad
cmpl
or
or
and
and
add
jg
jne
mov
pop
and
push
lret
pushf
jnp
or
add
lods
cmp
lcall
enter
rcll
das
or
mov
nop
int3
dec
jb
cmc
adc
sub
bnd
cmp
popf
rolb
push
lods
push
pop
mov
cwtl
mov
or
and
mov
or
or
mov
stos
xchg
inc
sbb
push
push
mov
fldt
clc
inc
or
or
xor
cmp
jne
xchg
andl
jmp
pop
pop
lock
push
and
lret
adc
adc
cmp
mov
add
pop
sub
sub
cmp
push
mov
insl
insb
test
or
das
dec
je
xor
mov
cld
testl
xchg
mov
fnsave
add
js
sbb
jbe
push
out
sbb
or
push
pop
sahf
xor
and
cs
lds
loopne
sbb
inc
dec
or
mov
ret
push
pop
nop
test
cmp
jmp
enter
adc
arpl
push
rolb
inc
ljmp
icebp
rcl
jb
push
mov
push
mov
les
flds
adc
inc
sbb
add
pop
sbb
mov
mov
sbb
mov
push
pop
neg
push
mov
add
pop
fisttps
add
enter
or
mov
xchg
and
push
popa
repz
out
xor
push
push
pop
cmp
push
stc
cs
sbb
cmp
hlt
mov
in
mov
or
cmpsl
lcall
arpl
pushf
cli
mov
add
xchg
push
dec
adc
mov
push
imul
and
mov
push
fstps
test
dec
jl
sbb
jg
out
cwtl
into
cmp
push
sub
pusha
push
notl
roll
xlat
inc
cmp
es
enter
fisttpll
xor
es
xchg
push
jbe
adc
sbb
test
fdivs
add
or
mov
add
dec
add
sub
xchg
and
pop
inc
sbb
or
sbb
call
fists
ss
or
cmp
dec
jne
addr16
imull
mov
push
or
aaa
or
sub
pop
add
and
imul
rol
push
shl
or
fbld
inc
add
ret
mov
jmp
mov
fistpl
cvtps2pi
or
ljmp
mov
mov
sarb
dec
add
push
call
lahf
jle
push
lcall
fwait
pop
push
fldl
mov
push
mov
inc
push
pop
pop
adc
lret
cmc
xchg
or
daa
mov
hlt
and
sub
mov
push
xchg
sub
xchg
sub
xor
adc
inc
push
rcrb
clc
push
push
and
in
and
fstpt
decb
leave
fcoms
adc
sub
leave
add
leave
push
fisubl
movsb
pusha
rorb
xchg
adc
mov
jmp
add
sbb
cld
push
clc
hlt
lock
sbb
in
call
sbb
aam
sbb
sbb
int3
enter
sbb
sbb
sbb
lods
test
mov
or
je
xor
xor
jl
test
mov
xor
pushf
mov
xor
lods
mov
mov
mov
xor
xor
rcl
fdivs
xor
xor
loopne
call
in
lock
clc
jb
cmp
cld
add
or
enter
push
adc
enter
sbb
and
enter
sub
xor
enter
cmp
dec
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
enter
test
enter
pushf
push
mov
divb
in
push
push
pop
jb
sbb
pop
fdivr
mov
lret
cld
adc
adc
mov
test
push
mov
test
pushf
or
or
mov
pop
or
mov
or
sub
into
lods
outsb
inc
jg
jae
dec
push
sbb
cmp
mov
iret
mov
push
mov
lea
pop
jecxz
or
and
nop
xlat
add
mov
xor
push
dec
outsb
xor
repz
or
cli
jne
orl
dec
lock
pop
leave
ret
mov
pop
mov
and
add
or
loope
cmp
add
and
jbe
stc
shlb
and
jg
inc
rolb
je
movzwl
jmp
xor
jbe
jmp
adc
pop
push
push
push
push
pushf
stos
pop
mov
pushf
int3
mov
inc
in
mov
xor
jge
or
pop
pop
ret
mov
sub
push
push
mov
cmp
inc
adc
mov
bound
adc
xlat
shll
or
aad
fcomps
rcrb
push
addr16
ret
int3
in
xor
sarb
loopne
sbb
jb
adcl
push
pop
jae
sub
mov
arpl
aaa
je
push
dec
repz
mov
add
add
mov
push
sub
xchg
xchg
xchg
out
push
fdivrs
ror
enter
into
mov
adc
jns
adc
adc
or
dec
adc
mov
adc
mov
cmp
ret
cs
popa
out
xor
mov
push
add
cmp
lea
or
fwait
out
xchg
out
lea
pop
sbb
or
lea
push
adc
sub
pop
fstpt
pusha
or
cltd
lods
xor
insb
aaa
pop
xor
cmp
rorb
jnp
pop
pop
lock
lock
loop
mov
lea
push
dec
mov
sbb
dec
daa
call
inc
pop
add
das
and
cwtl
in
sub
test
mov
dec
pavgb
fadds
in
cs
jg
sar
cmp
lods
insb
mov
outsl
addr16
repnz
adc
dec
cs
cs
dec
insb
inc
mov
xor
mov
xchg
dec
cs
cs
cs
cmp
mov
and
data16
push
push
pop
sbb
mov
int3
pop
mov
sbb
popl
push
xchg
fadds
call
jb
sub
ret
mov
push
sbb
adc
pop
bound
pusha
push
lock
out
into
mov
or
lock
fwait
lahf
inc
ret
add
adc
jo
lcall
mov
scas
jmp
cwtl
sub
xchg
pop
lcall
cmpb
xlat
je
imul
daa
pop
push
add
xor
push
dec
inc
cmp
xor
shll
and
adc
xor
add
mov
mov
dec
push
rclb
add
or
xlat
and
insb
mov
cmp
sbb
mov
rcll
mov
nop
lret
mov
lods
cmp
push
dec
shll
cmpsb
aas
mov
xor
shll
cmpb
jnp
shrl
pop
das
xchg
mov
pop
cmp
inc
dec
inc
imul
lcall
sbb
adc
lock
pop
pusha
add
testb
nop
add
pop
xchg
or
mov
outsl
subl
cmp
das
je
data16
xor
inc
pop
cmp
iret
or
dec
push
inc
add
sbbl
js
orl
pusha
pop
mov
add
nop
int
add
insb
nop
inc
scas
rcr
jecxz
sbb
stc
pusha
inc
dec
jae
and
aas
daa
add
xor
cmp
push
aas
sbb
or
jo
push
mov
xchg
seto
cwtl
mov
xchg
test
mov
pop
push
pusha
inc
push
adc
aas
das
push
sbb
fiadds
imul
clc
or
sbb
les
or
jae
mov
adc
pop
sbb
sbb
loopne
inc
cmp
or
dec
push
pop
pusha
xorl
dec
shll
fsubs
dec
aaa
mov
pop
frstor
dec
aaa
cmpsb
aas
push
mov
movups
pusha
xorl
pop
decb
adc
inc
adc
pop
movhps
xor
mov
imul
and
pop
addb
leave
sub
adc
inc
test
or
enter
flds
adc
xor
add
sub
or
jo
add
bswap
xor
jae
adc
adc
call
rolb
sub
add
cmp
push
inc
pop
push
push
inc
push
add
gs
xor
dec
gs
push
ret
cmovbe
jae
push
jb
arpl
jae
lret
fs
mov
outsl
fs
gs
mov
inc
dec
je
push
outsl
outsl
insb
push
imulb
push
outsb
popa
jo
push
inc
add
out
mov
xor
add
cmpsl
ror
jns
mov
in
testb
mov
cmp
dec
add
jb
jae
imul
outsl
cmp
pop
data16
add
sbb
add
or
jae
adc
insl
out
ja
add
cmovae
jne
xchg
insl
iret
and
adc
fs
xlat
jne
or
gs
popa
adc
jne
dec
pop
daa
and
scas
rorb
add
dec
xlat
je
imul
inc
movsl
push
imul
adc
imul
jns
gs
popa
insl
gs
and
outsb
fistpll
push
and
arpl
jns
inc
loope
out
ret
cmp
outsl
outsb
pop
or
clc
movq
arpl
mov
insl
jo
jb
push
or
das
fmull
popa
jb
dec
outsb
jnp
outsb
gs
mov
ret
sub
imul
fbstp
dec
popa
insb
push
pop
jge
je
outsb
addr16
fwait
mov
or
and
sub
fs
jae
bnd
or
jne
jo
adc
jae
cli
arpl
or
mov
jne
fistpl
cmp
sub
or
arpl
mov
xor
inc
push
pop
outsb
fs
leave
je
dec
dec
data16
or
outsb
or
arpl
and
xchg
push
jb
add
or
or
stos
add
mov
dec
add
add
jge
dec
jmp
add
pop
xor
adc
and
inc
dec
inc
add
test
pop
mov
sub
inc
push
pop
push
sbb
loope
call
add
xor
imul
pop
xor
sarb
rolb
push
sbb
mov
add
xor
sub
pop
leave
incb
cmp
pop
push
xchg
fwait
gs
into
push
rcrb
pop
add
add
lock
jmp
or
xlat
insl
xchg
lods
mov
clc
sar
ret
dec
movl
iret
je
daa
aaa
test
out
and
ja
sbb
clc
test
pop
leave
dec
test
sub
orl
fs
jno
xor
push
mov
nop
jl
add
jg
xor
fsubl
xor
xor
mov
and
push
inc
jae
push
mov
push
jge
cmp
cmp
prefetch
add
fildl
es
addr16
out
mov
add
add
je
mov
add
add
incl
fdivrs
call
add
cmp
clc
or
idivb
jp
add
push
lods
jnp
fs
sub
adc
mov
and
ss
test
insb
adc
int
pop
jns
movsl
andb
add
mov
inc
xor
inc
or
or
aas
outsl
inc
imul
or
js
jo
lock
or
lock
imulb
mov
adc
and
mov
ret
xor
push
inc
sbb
xchg
xor
loopne
inc
adc
adcl
pop
out
ret
insb
or
and
add
jne
arpl
mov
sbb
push
mov
subl
xor
clts
dec
repnz
adc
xchg
mov
negl
stos
sarb
push
cmp
jae
ja
cmp
xchg
iret
mov
hlt
mov
push
add
or
push
mov
inc
jp
mov
ret
jp
and
add
fwait
jnp
and
push
xchg
orb
jp
and
mov
cmp
ja
push
mov
fistpl
ja
xchg
push
jo
scas
sbb
mov
fs
mov
pusha
insb
dec
add
push
adc
sub
push
push
ss
loopne
push
and
bnd
sbb
clc
repz
js
pop
subb
sbb
in
pushf
sbb
mov
addb
imul
xchg
xchg
mov
cmp
xchg
mov
addb
inc
leave
out
inc
xchg
jg
loop
insb
sub
pop
and
insl
lea
fs
sbb
test
push
loopne
cmpsb
mov
xchg
push
stos
adc
add
lahf
aad
sbbb
sbb
mov
stos
pop
jne
dec
inc
ja
popa
jne
jmp
push
inc
add
mov
jnp
sub
fneni(8087
add
inc
fsubrl
sbb
xor
fs
xchg
sbb
mov
add
repz
dec
fs
pop
pop
pop
add
push
in
arpl
popf
and
xchg
jo
and
fs
or
push
add
sbb
sub
mov
mov
pop
add
pop
jnp
fwait
dec
add
pop
mov
dec
repz
add
inc
mov
mov
repz
add
incl
lock
mull
lock
lock
imul
test
mov
and
daa
pusha
outsb
lods
and
mov
notb
dec
ja
xor
inc
mov
add
dec
rep
and
faddl
adcl
sub
sbb
fwait
adc
xor
xchg
vmread
xlat
adc
jbe
adcl
popa
sbb
inc
xchg
mov
adc
lock
and
xchg
or
jo
in
clc
stos
pop
lahf
jbe
gs
push
jno
movsl
mov
mov
cs
mov
inc
push
sub
xlat
popf
data16
fs
daa
jne
and
pop
inc
outsb
out
fs
sarw
or
mov
push
mov
sub
xlat
jb
insl
mov
jae
imul
jge
bound
outsb
idivb
add
lods
pop
push
mov
fildll
fwait
jne
in
dec
dec
je
insl
jo
dec
jmp
mov
dec
imul
adc
lret
push
cmp
inc
jns
jge
loope
push
jne
andl
arpl
mov
dec
call
mov
sbb
outsl
jno
shrl
push
mov
movsl
add
dec
or
fcmovnb
outsb
popl
icebp
dec
lds
arpl
mov
outsl
sub
adc
js
sbb
jae
push
mov
dec
xor
test
and
test
and
popf
aas
pop
pop
arpl
aas
or
je
jns
mov
or
sub
fisttps
dec
insb
jge
jmp
mov
inc
and
clc
bound
outsb
je
je
or
data16
loope
pop
push
xor
shlb
es
or
js
cmp
stos
pop
inc
ret
arpl
je
psubsw
lret
notl
jmp
mull
or
adc
lahf
nop
inc
push
jo
insw
sbb
mov
jns
aas
insb
neg
sbb
addr16
loope
ret
adc
push
popf
loope
inc
jb
pop
mov
sbb
cmc
dec
fwait
sbb
inc
sub
jnp
imul
hlt
lock
xor
dec
insb
mov
pop
jae
cmp
movsb
sub
andl
shll
push
pop
pmaxsw
aas
jae
int3
dec
mov
pop
sub
inc
xor
stc
int3
sbb
jecxz
leave
push
mov
jae
lea
int3
add
mov
scas
xchg
outsl
imul
cltd
sub
fwait
test
jnp
cmp
xor
bswap
push
or
jns
jecxz
jbe
leave
add
fildl
add
jbe
filds
add
int
ret
xchg
rolb
mov
sub
or
xor
addr16
cmp
pop
inc
xchg
pop
test
fbld
pop
sbb
and
sub
or
gs
cwtl
add
cmp
sub
adc
jnp
push
fwait
xor
mull
ret
jge
mov
shrb
popf
cmp
sbb
push
popa
mov
pop
inc
lahf
mov
movsl
imul
je
leave
add
dec
and
aaa
add
xchg
xor
popf
mov
in
lods
scas
or
push
adc
ss
and
cs
outsl
subl
dec
bound
add
xor
mov
mov
adc
pop
fadd
pop
add
jnp
sub
or
icebp
out
inc
jbe
jge
addr16
lcall
pop
cmp
mov
pop
mov
fnstcw
sub
xchg
xor
cmp
and
inc
lret
dec
daa
mov
mov
cwtl
lods
add
sbb
and
test
aad
xchg
sub
cmpsl
sbb
test
jae
jecxz
stos
sub
gs
fs
hlt
pushfw
and
gs
fs
leave
lret
sbbl
movsl
inc
dec
out
add
xchg
sub
int
sbb
sbb
mov
and
test
shll
rorl
pusha
dec
and
xchg
insb
cmp
cmp
test
and
jmp
inc
xchg
ss
and
inc
cmc
and
gs
test
nop
ja
fs
mov
lock
jg
mov
push
or
cmpsl
les
and
sti
push
lret
mov
addl
bound
ss
gs
xchg
mov
pop
cmp
push
push
mov
sbb
xor
int
dec
jb
fisttpl
test
and
popa
add
pop
loope
mov
data16
insl
sbb
push
shlb
and
popa
insb
aas
imul
mov
imul
aad
dec
or
push
insl
pop
inc
pop
pop
xchg
fs
das
fcomps
xchg
jo
je
sbb
das
in
push
inc
mov
add
inc
adcb
xor
ficoms
adc
mov
test
dec
jmp
in
or
or
leave
dec
pop
mov
mov
xor
out
movsb
push
icebp
jae
ret
mov
add
xor
in
jns
insl
outsl
ja
and
sbb
pop
dec
sub
insb
movsl
or
aad
les
mov
sbb
daa
aas
mov
push
mov
dec
js
add
mov
cld
inc
sti
push
popa
imul
jp
gs
bound
add
inc
adc
gs
les
add
aaa
add
mov
mov
outsb
adc
add
inc
fsubrl
xchg
cmp
jb
jb
insb
repnz
mov
or
outsb
pop
inc
bound
imul
or
gs
iret
addr16
arpl
outsb
aas
push
imul
popf
push
je
pop
mov
jne
dec
outsb
outsw
push
push
inc
jbe
sbb
sub
push
inc
push
jl
pusha
mov
or
add
mov
test
imul
push
gs
fwait
xor
add
add
in
cmp
dec
gs
pop
sti
jbe
push
adc
das
jns
popa
insb
push
adc
popa
outsb
lahf
jnp
mov
inc
pop
push
jo
icebp
push
push
jg
add
add
jmp
decl
adc
inc
adc
xchg
push
pushl
add
cmp
ljmp
std
lret
mov
orl
or
imul
mov
sbb
lcall
out
das
adcb
mov
jmp
xor
dec
sub
jg
sbb
sti
adc
pushf
rorl
fists
push
or
jnp
lods
lcall
xor
mov
mov
inc
or
cltd
or
insl
pop
or
ja
lea
pop
add
inc
test
mov
inc
xor
add
mov
pusha
sub
add
mov
fstpt
sub
adc
xor
pop
mov
dec
push
movsb
sbb
insl
sbb
imul
insb
dec
and
mov
add
mov
mov
fbstp
push
dec
pop
inc
add
dec
pop
mov
add
push
ss
fnsetpm(287
add
and
or
aas
xor
inc
inc
push
inc
inc
inc
pop
pop
pcmpgtd
mov
adc
push
pop
inc
add
sbb
in
jmp
xor
fcmovnb
fcomps
xor
sbb
je
xor
jecxz
xor
cmp
jae
outsb
sbb
pop
out
data16
pop
sbbl
sub
mov
outsl
jo
outsl
idivb
imul
xor
xor
pusha
in
je
inc
inc
cld
dec
xchg
fldcw
cltd
outsl
popa
push
outsb
or
ljmp
jae
popa
mov
mov
mov
jb
push
je
imul
sti
pop
jo
loopne
insl
or
or
sub
adc
dec
fistl
pmuludq
cmpsb
insl
imul
xor
or
outsb
pop
imul
pop
pop
arpl
call
stc
pop
adc
jnp
push
xor
jb
cmpsb
sub
leave
or
data16
adc
aam
ja
xorb
xlat
cs
loopne
push
dec
inc
push
outsb
jns
data16
enter
arpl
and
cmpsb
xchg
shll
imul
inc
inc
bound
movd
xchg
insl
push
pop
out
adc
jp
lds
xchg
sbb
insl
jne
xlat
in
xchg
aaa
scas
fs
sub
and
mov
pushl
or
adc
lret
mov
pop
add
mov
cmc
cld
dec
adc
sidtl
add
movsb
orb
mov
adc
dec
and
ds
ret
or
and
pop
mov
insb
pusha
arpl
pop
push
add
pop
mov
subb
or
add
push
sbb
jae
je,pn
mov
mov
std
jb,pn
fwait
dec
shlb
popa
sti
mov
mov
cs
lret
daa
rorb
xchg
cmpsb
sti
pop
daa
jmp
dec
xor
mov
add
add
add
add
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
