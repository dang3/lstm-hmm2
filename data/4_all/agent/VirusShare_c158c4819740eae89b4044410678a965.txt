xchg
push
add
push
add
cmp
inc
add
cmp
sbb
cmpsb
icebp
or
decb
add
cmp
pop
push
cmp
push
cmp
adc
push
jg
cmp
jnp
cmp
pop
or
and
add
outsb
dec
add
adc
pop
cmp
outsl
and
push
pusha
and
into
mov
add
xchg
or
push
shlb
cmp
push
adc
push
mov
cmp
mov
cmp
pop
cmp
subb
outsb
mov
cmp
das
and
scas
cmp
cmp
or
cmp
push
inc
cmp
jmp
cmp
inc
pop
cmp
jae
cmp
xchg
sub
sahf
lret
dec
cmp
arpl
loop
dec
cmp
test
and
outsb
mov
push
inc
aaa
cmp
push
cmp
cwtl
inc
cmp
hlt
pop
cmp
push
inc
cmp
insl
dec
cmp
int
cmp
sub
ficoms
or
pop
ret
ds
sbb
les
test
cmp
push
outsb
cmp
xor
mov
push
cmp
in
pusha
cmp
jno
cmp
fldl
cmp
stos
pop
cmp
xlat
dec
cmp
push
push
aas
sbb
out
roll
cmp
cmp
xchg
cmp
pusha
dec
cmp
mov
cmp
jns
mov
xchg
cmp
jno
mov
arpl
dec
lea
scas
push
dec
cmp
in
cmp
dec
cmp
insb
mov
cmp
insl
cmp
frstor
into
fcoml
push
sub
lret
cmp
ljmp
hlt
sbb
ficoml
sub
mov
push
hlt
fwait
cmp
mov
cmp
xor
cmp
sbb
push
cmp
lahf
cmp
xor
dec
cmp
push
xchg
pop
jl,pt
sub
cmp
jp
cmp
cmp
ds
cmpb
jle
cmp
xchg
cmp
rcrl
cmp
aad
cmp
iret
ss
pop
jae
fisubs
xchg
cmp
xchg
mov
mov
cmp
jg
lcall
cmp
in
cmp
xchg
push
cmp
cltd
cmp
push
cmp
pop
cmp
roll
dec
pop
imul
fcompl
cmp
and
xor
cwtl
cmp
loopne
cmp
aam
cmp
and
mov
scas
test
jb
push
cmp
push
cmp
sbb
cmp
ret
sbb
outsb
add
cmp
arpl
jp
or
cmp
mov
xor
outsb
es
popa
int3
cmp
xor
ret
cmp
ds
cmp
jp
push
rolb
mov
mov
cmp
sub
push
hlt
out
cmp
lret
jle
xor
bound
cmp
dec
and
cs
cmp
inc
cmp
mov
xor
mov
push
jbe
cmp
mov
and
scas
insb
push
cmp
and
cmp
pop
cmp
loop
push
cmp
rorb
push
inc
push
cmp
jge
cmp
cmp
mov
cmp
inc
inc
cmp
in
mov
dec
mov
cmp
inc
fdivrl
jle,pn
cmp
lahf
cmp
xchg
xor
cmpsb
sti
xchg
cmp
add
cmp
test
cmp
lock
cmp
aas
jo
inc
push
pop
cmp
push
pop
cmp
jp,pt
jb
sub
cs
cs
cmp
cmp
xor
outsb
sti
int3
cmp
stos
mov
rclb
cmp
mov
cmp
pop
jecxz
cmpb
mov
mov
cmp
xor
outsb
nop
pop
cmp
lcall
cs
test
inc
imull
std
adc
fcmove
sarl
out
jbe
cmp
ss
cmp
inc
fdivrs
scas
xor
cmp
xchg
cmp
leave
popa
cmp
xchg
xor
or
pusha
cmp
outsb
inc
cmp
hlt
add
push
js
cmp
int
cmp
lret
sub
cmp
mov
and
ret
cmp
stc
push
cmp
arpl
cmp
in
jbe
es
fstpt
cli
movsl
movsl
cmp
iret
ja
out
push
cmp
lret
mov
and
fiaddl
cmp
push
dec
in
dec
pop
cmp
test
cmp
subb
pushf
push
cmp
sbb
scas
icebp
dec
cmp
xchg
cmp
in
cmp
xchg
mov
out
daa
pop
cmp
xlat
cmp
cmpsb
cmp
jbe
cmp
sbb
cmp
pop
sub
mov
sbb
cmpsl
int
into
jns
cmp
or
outsl
cmp
in
cmp
cmp
push
cmp
xor
jle
cs
cmp
jnp
cmpsb
sarb
cwtl
bound
cmpsb
jg
cmp
and
cmp
xor
dec
sub
mov
lock
cmc
cmp
lods
fdivrl
pop
lahf
cmp
and
les
scas
cwtl
inc
cmp
sub
lret
cmp
mov
neg
ja
xchg
cmp
aaa
cmp
push
dec
cmp
inc
imul
and
cmp
push
cmp
sarb
sbb
cmp
push
lods
cmp
pop
or
cmp
pop
cmp
cmp
cmp
data16
adc
cmp
popf
into
cmp
dec
push
cmp
pop
xchg
cmp
xchg
mov
outsb
push
cmpb
jg
mov
fstpt
inc
movsl
cmp
ja
pop
daa
jne
dec
in
cmp
sbb
cmp
stos
ds
pop
sarb
push
aam
cmp
push
loope
xchg
test
cmp
add
iret
cmp
ret
push
cmp
cmp
or
cmp
sahf
sub
clc
cmp
and
mov
sbb
push
test
cmp
cmp
rorb
cmp
jp
cmp
cmp
cmp
mov
cmp
in
cmp
and
cmp
insb
cmp
pop
push
cmp
sarb
cmpsb
and
ret
cmp
jne
sub
sarb
out
cmp
lods
xchg
cmp
cli
cmp
mov
cmp
sub
cmp
ret
test
xchg
cmp
jne
cmp
bound
cmp
pop
inc
cmpsl
cmp
adcl
jbe
xor
inc
cmc
cmp
popa
cmp
fadd
cmp
lds
fidivrl
mov
cmp
js
cmp
sub
push
cmp
pop
cmp
outsb
mov
push
cmp
iret
jmp
cmp
mov
cmp
xchg
bound
and
js,pn
cmp
add
cmp
mov
cmp
xchg
test
cmp
jle
cmp
xchg
sarl
xchg
cmp
rclb
stos
cmp
pop
xchg
cmp
decl
out
mulb
cmp
jecxz
cmp
dec
cmp
icebp
dec
cmp
loop
cmp
test
cmp
roll
mov
popf
lcall
int3
lret
cmp
pop
inc
cmp
insb
stos
cmp
mov
or
into
aad
cmp
popa
xchg
cmp
out
xor
dec
lret
sub
mov
cs
popa
cmp
sahf
ficomps
cmp
jb
das
cmp
push
jl
ret
cmp
out
and
cmp
sahf
lcall
push
movsb
xor
xchg
test
xchg
dec
cmp
ret
cmp
sub
cmp
in
fcmovne
cmp
sub
test
cmp
out
cmp
or
cmp
fiaddl
cmp
mov
cltd
or
scas
imulb
cmp
out
cmp
sub
cmp
aas
es
cmp
cmp
add
mov
push
cmp
lock
lret
cmp
gs
lds
bound
jb
into
or
inc
cmp
roll
push
dec
lds
jno
cmp
pop
cmp
loope
cmp
out
cmp
addr16
cmp
les
mov
or
or
mov
outsb
nop
xor
cmp
mov
cmp
iret
stos
cmp
xor
fisubrs
mov
cmp
aaa
push
xor
cmp
sahf
lcall
cmpsb
adc
ds
xor
bound
cmp
xchg
pop
cmp
push
iret
les
xor
cmp
movsl
lea
xchg
movsl
lea
into
inc
mov
cs
ds
xor
cmpsb
push
cmp
push
movsb
cmp
outsb
rorb
cmp
sar
cld
cmp
and
out
sbb
sub
hlt
cmp
imul
cmp
dec
cmp
push
fldcw
ds
xor
loopne
mov
xlat
cmp
stc
cmp
add
mov
cmp
push
push
cmp
fdivl
cmp
scas
sahf
mov
sub
cmp
stos
mov
cmp
orb
jbe
lods
cmp
iret
cmp
das
inc
cmp
loope
cmp
ja
cmp
into
les
mov
cmp
scas
add
cmp
push
imulb
cmp
mov
loop
push
sbb
cmp
jbe
test
out
jecxz
cmp
xchg
gs
ljmp
cmp
pop
cmpsb
cmp
jp
xchg
ds
cmpb
sbb
jbe
stc
cmp
inc
cmp
cmp
es
ds
cmp
lret
cmp
mov
sub
push
xlat
xchg
cmp
dec
mov
cli
pop
idivl
loopne,pn
aas
adc
test
es
cmp
cli
jg
cmp
and
dec
stos
out
cmp
mov
cmp
loope
cmp
jno
cmp
pushf
mov
ds
push
pop
loop
jne,pn
cmp
jno
data16
cmp
jecxz
cmp
pop
mov
ds
jg
outsb
xchg
ficomps
ds
js
ds
mov
ds
lods
cmp
movsb
cmp
out
sarb
cmp
xchg
movsl
or
inc
pop
cmp
js
mov
mov
ds
insl
insl
cmp
fidivl
aas
mov
shrl
fiadds
sub
lds
outsb
idivb
lret
cmp
and
or
cmp
scas
sbb
cmp
mov
pusha
ds
inc
cmp
dec
dec
cmp
jle
icebp
ds
and
sarl
inc
rcrb
outsb
add
cmp
scas
xor
inc
cwtl
lods
ds
cmp
into
dec
cmp
das
dec
aas
outsb
or
add
lret
push
test
or
insl
ds
fldcw
ds
add
cmp
jge
cmp
out
mov
cmp
xchg
xchg
cmp
push
or
dec
mov
aas
mov
cmpsl
xchg
jle
fidivrs
cmpsb
sbb
cmp
cmp
jp
fidivs
jle,pt
sub
inc
out
insl
cmp
push
imul
cltd
mov
aas
into
mov
aas
lret
cmp
lret
pushf
cmp
dec
lret
ds
xor
cmp
xor
ds
aas
hlt
ds
jecxz
cmp
out
cmp
loop
adc
lahf
lret
cmp
ds
cmp
xor
inc
push
mov
ret
cmp
aas
aam
data16
cmp
sub
loop
stos
cmp
sahf
out
jp
push
cmp
pop
adc
cmp
ds
ds
in
scas
out
mov
ficomps
ds
cmp
pop
mov
inc
push
mov
sub
cs
cmp
and
cmp
movsb
cmp
orl
inc
push
imul
mov
xchg
cmp
incb
cmp
sub
cmp
ret
aas
cmpsb
scas
in
ds
fdivrs
pop
pop
push
inc
dec
dec
xchg
ds
out
ds
ds
mov
jbe,pt
arpl
test
rorb
cmp
jle
lds
mov
add
ficoms
cmp
lea
push
ret
inc
push
cld
aas
xchg
sbb
push
push
add
push
out
jge
out
subb
jle
test
lock
ds
mov
cmp
xchg
mov
bound
cld
fdivrs
mov
aas
jle
mov
aas
es
or
jbe
fwait
rcrb
outsb
xchg
icebp
cmp
out
pop
cmp
xchg
fidivs
cmp
jle
pusha
cmp
outsb
inc
add
repz
ds
xor
aas
ret
cmp
lret
ds
jle
cmp
cs
aas
push
dec
fdivrs
into
jno
cmp
push
out
pusha
inc
push
pop
gs
mov
xlat
jp,pt
test
push
and
aas
push
popf
inc
cmp
pop
cmp
pop
scas
idivl
adc
inc
cmp
test
ds
dec
mov
cmp
xor
out
adc
jbe
mov
cmp
jp
cmp
mov
fs
push
movsw
cmp
mov
xchg
cmp
test
xchg
jle
ds
aam
ds
dec
aas
pop
outsl
aaa
inc
mov
pop
aas
ficoms
and
pop
sarl
sbb
sbb
outsb
mov
cmp
lcall
mov
sarl
pop
pushf
lds
outsb
push
bound
call
cmp
aas
mulb
lock
es
cmp
idiv
inc
cmp
sub
lea
cmpsb
push
stos
cmp
push
cmp
fmulp
aas
cmp
outsb
mov
cmp
fwait
cmpb
movsb
xchg
cmp
push
cmpb
mov
or
pop
jge
ds
mov
cmp
and
sbb
ds
jbe
inc
idiv
fnstcw
push
lock
push
mov
outsb
rcrl
cmp
call
push
inc
out
or
push
js
cmp
daa
das
aas
scas
aas
cs
pop
bound
aas
inc
push
and
movsl
jne
mov
xor
scas
js
cmp
xor
cmp
out
inc
ljmp
cmp
adc
cmp
adc
mov
inc
outsb
pop
lock
fistpll
inc
mov
aas
scas
jae
inc
dec
mov
cmp
fs
cmp
cmpsb
lret
out
mov
inc
into
movsl
loopne
push
push
pop
xchg
lea
sahf
loop
cmp
ds
ds
push
cmpsl
inc
dec
ret
jb
aas
sbb
cwtl
cmp
jle
popf
cmp
mov
mov
mov
push
cwtl
cmp
stc
lock
decb
cmp
mov
pop
inc
out
pop
xor
xchg
sarb
data16
inc
push
out
inc
sahf
movsl
ljmp
cltd
sarb
sahf
pop
inc
cs
cmp
mov
inc
dec
jg
ds
loopne
cmp
push
mov
les
cs
cmp
jbe
cmpb
push
inc
dec
int3
testb
and
inc
or
jmp
inc
and
scas
cmp
inc
sbb
aas
outsb
sbb
cmp
pusha
mov
push
jmp
out
scas
jns
inc
add
aas
data16
cmp
out
cmp
xchg
sarb
outsb
dec
push
data16
aas
outsb
insl
push
outsb
aaa
les
and
ds
cmp
ja
inc
inc
movl
arpl
cmp
cs
icebp
ds
aas
pop
add
inc
xchg
cli
inc
adcb
cmp
jbe
mov
cmp
cltd
dec
cmp
xchg
nop
cmp
push
pop
cmp
scas
outsb
inc
sahf
insl
adc
cmpsb
popa
pop
inc
stos
push
fnstcw
pop
xor
xchg
and
inc
rolb
out
inc
inc
cs
inc
or
test
or
outsb
cmp
loopne,pn
cmp
mov
pop
out
push
jl
ljmp
inc
out
inc
or
pop
inc
aas
inc
loopne
ficomps
bound
mov
cmp
sub
ds
pop
out
aas
iret
cmp
jp,pt
les
test
fildl
mov
cmp
xor
mov
shll
pop
and
out
pusha
inc
aas
into
or
push
xchg
jle
push
cmp
mov
sbb
cmp
dec
sub
sbb
mov
jle
xchg
inc
movsl
inc
out
adc
cmp
imul
pop
mov
aam
scas
dec
xor
or
push
inc
jp
sbb
pop
cmpsl
inc
addr16
inc
lods
or
aam
push
mov
aas
dec
pop
push
inc
scas
int3
ds
sahf
dec
push
inc
dec
inc
or
mov
cmp
xchg
push
cmp
movb
inc
push
dec
jbe
data16
cmp
push
mov
cmp
fldl
loopne
ds
rorb
pop
idivb
xchg
cmpl
mov
cmpl
cli
inc
jmp
cmp
mov
cmp
xchg
popa
mov
ds
mov
add
sarl
ds
mov
scas
cmp
fucomp
cmp
sarw
jmp
cmp
dec
inc
cmp
ror
cmp
jp,pn
cs
push
cmp
add
inc
or
mov
lcall
aas
mov
pop
sbb
stos
ds
fidivs
mov
cmp
mov
cmp
je
inc
out
loopne
inc
lret
cmp
movsb
cmp
repz
outsb
movb
xor
shrb
shl
cmpl
push
loopne
cmp
sarl
subb
cmp
mov
movsl
inc
inc
cmp
cmp
mov
addl
sub
out
and
repnz
sub
adc
adc
cltd
sahf
xor
cmp
lods
cmp
adc
es
inc
add
repz
repnz
cmp
movsb
pop
inc
mov
adc
pop
cmp
cmp
dec
cmpsl
jmp
cmp
cld
insb
cmp
pusha
pop
inc
mov
pop
mov
ja
cmp
ss
ljmp
inc
sbb
sbb
repnz
jle
cmpsl
cmp
aas
into
inc
sbb
roll
outsl
adc
jle
mov
inc
jp
jnp
dec
inc
in
xchg
xlat
inc
jbe
fadds
sarl
inc
ret
ds
aam
cmp
out
mov
cmovb
push
ds
outsl
cmp
jmp
ficoms
adc
std
int3
cmp
imul
sbb
jns
dec
and
cmp
adc
out
xor
mov
jecxz
push
mov
cmp
mov
cmp
fnstcw
cmp
sub
cmp
inc
cmp
dec
dec
xchg
inc
ss
scas
cmp
push
inc
bound
inc
pop
movsb
ds
mov
inc
xor
dec
or
cmp
sbb
repnz
jp
inc
jp
gs
icebp
jno
stos
jp
inc
outsb
es
inc
dec
ret
mov
xchg
cmp
pop
lods
inc
mov
cmp
fwait
xor
mov
cmp
divb
inc
cs
movl
test
ds
mov
aas
push
out
into
xor
mov
jecxz
inc
xor
jae
fldl
aas
xchg
aas
loop
push
cmp
ss
inc
scas
and
cmp
sarb
int
inc
sahf
inc
out
cli
inc
lret
xchg
jnp
mov
ret
push
and
mov
cmp
icebp
cwtl
inc
cs
aas
adc
pop
cmp
lcall
cmp
sahf
imul
sub
aas
ss
addl
es
repnz
ds
cs
out
lret
aas
xchg
dec
dec
ds
nop
dec
cmp
test
inc
cmpsb
icebp
data16
sub
inc
mov
fidivrl
stc
test
repnz
xchg
push
mov
inc
and
mov
cmp
out
mov
cmp
push
mov
cmp
pop
popl
test
xor
xchg
pop
addr16
cmp
mov
popf
mov
cmp
or
or
test
inc
lods
pop
inc
into
jno
cmp
xchg
mov
and
adc
loopne
xchg
inc
cmp
lahf
pop
ds
test
cmp
sbb
cmp
push
cmp
cmp
cmp
ljmp
lret
inc
in
cmp
dec
fadds
rorb
out
loopne
outsb
std
or
scas
ss
bound
add
les
cmp
inc
add
push
push
add
stos
std
inc
cmp
xchg
inc
bound
cmp
pop
sti
aas
push
insl
jno
cmpsb
aam
inc
mov
ret
add
inc
push
cmp
inc
push
xor
or
cmp
sub
mov
inc
jae,pn
cmp
cmpsb
push
xchg
push
inc
inc
jle
test
inc
mov
testb
into
cmp
imul
inc
ss
filds
clc
and
sbb
sub
lret
sub
jl,pn
ds
inc
repnz
outsb
sbb
mov
lea
sbb
aas
mov
pop
inc
push
leave
push
cmp
mov
data16
push
inc
jbe
mov
push
jmp
cmp
mov
aas
into
leave
cs
ret
outsb
inc
outsb
je
cmp
into
sarl
or
ds
rolb
fwait
jle,pt
cmc
inc
push
scas
out
cmp
clc
cmp
aas
push
mov
and
imul
inc
cmp
mov
push
inc
popf
ds
xor
mov
sub
inc
push
sub
cmp
sbb
jle
dec
cmp
xor
inc
ljmp
inc
push
cmpl
mov
mov
cmp
out
mov
test
xchg
popa
inc
and
cmpl
bound
aas
in
inc
push
outsl
jecxz
outsb
sbb
cmp
cwtl
inc
into
mov
pop
inc
scas
insb
daa
add
popf
cmp
jae,pn
cmp
adc
aas
cbtw
jns
stos
or
into
xor
ds
dec
mov
sahf
fdivrs
inc
mov
jns
es
out
ds
or
or
outsb
js
inc
push
scas
cmp
aam
inc
inc
mov
repnz
aas
test
lahf
xlat
inc
ljmp
inc
mov
testl
push
repz
and
aas
push
aam
inc
xchg
push
into
sti
pop
ds
push
inc
inc
ficomps
xor
cs
adc
inc
es
cmp
fidivrl
ficoms
inc
roll
testb
sub
cmp
cmp
jmp
mov
mov
leave
cmp
pop
dec
inc
push
ja
cmp
mov
inc
dec
inc
fdivrs
sahf
test
inc
inc
mov
jp
lcall
inc
and
inc
push
and
aas
sub
outsb
test
inc
ss
xchg
aas
pop
cmp
into
dec
ja
xchg
cmp
cmp
das
sbb
inc
mov
mov
inc
push
aaa
rolb
cld
inc
jle
fadds
add
std
mov
xchg
ss
loop
cmp
idivl
loop
mov
stc
arpl
repz
cmp
std
fadds
mov
repnz
inc
inc
out
jae
inc
jge,pt
ds
and
mov
ds
inc
pop
inc
push
das
bound
adc
jg
ds
push
inc
scas
pop
pop
inc
push
jmp
pop
aas
or
cmp
push
xor
inc
xchg
xor
mov
pop
inc
push
xchg
sarl
push
adc
ds
in
cmp
cmpsb
sbb
pop
inc
out
movb
insl
cmp
jmp
cmp
sarl
inc
out
xor
arpl
ds
inc
xchg
std
inc
scas
or
jb
inc
cmp
mov
nop
cmp
out
jg
jbe
pop
ficompl
add
mov
jbe,pt
ret
int3
pop
cmp
sti
cmc
cmp
jne
inc
insb
lds
aam
cmp
dec
cmp
cmp
scas
ljmp
ds
repz
jb
cmpsl
aas
outsb
iret
sarb
orl
inc
mov
sarl
gs
mov
dec
repnz
push
lret
mov
push
sub
mov
pop
inc
push
mov
cmp
pop
and
ret
inc
push
lds
mov
dec
inc
mov
mov
inc
or
cmp
dec
pop
cmp
inc
es
sarb
mov
das
cmp
negl
inc
loopne
add
iret
cmp
rolb
popa
fs
mov
cmp
inc
mov
cmp
inc
shll
push
inc
xchg
lea
ds
inc
mov
ds
pop
fistpl
xchg
cmp
repz
scas
pushf
jno
jle
jae
push
fs
xor
lahf
inc
scas
or
bound
cmp
lcall
inc
lret
cmp
gs
aas
add
inc
into
pop
mov
cmp
cmp
add
dec
cmp
cs
je
mov
push
cmp
ljmp
inc
out
pusha
lods
inc
push
loopne
cmp
int3
push
inc
cs
cmp
sahf
and
inc
mov
loope
mov
outsb
cmp
fwait
sarb
sti
or
xchg
or
or
cmp
into
ljmp
lea
push
pop
out
ds
divl
aas
push
mov
dec
inc
outsb
lods
scas
inc
push
xor
cmp
mov
adc
xchg
inc
mov
fwait
inc
cs
sarb
jbe
mov
jb
cltd
inc
cs
js
push
data16
pop
cmp
cs
repnz
lods
or
push
cmp
ds
insl
mov
inc
dec
xor
inc
or
outsl
inc
push
push
icebp
aas
out
sahf
inc
push
mov
cmp
out
lods
inc
push
inc
mov
mov
jge
bound
inc
out
fidivrs
push
dec
inc
dec
mov
push
mov
inc
push
sbb
mov
mov
sahf
inc
adc
mov
scas
les
inc
push
out
ret
dec
pop
cmp
jb
mov
inc
ret
aas
into
imul
cmp
stc
xchg
cmp
jle
inc
outsb
stos
loop
inc
decl
push
mov
cmp
outsb
push
inc
inc
mov
xor
mov
inc
push
les
push
or
push
inc
mov
ss
call
in
cmp
mov
sbb
inc
ds
ds
comiss
mov
and
in
std
cmp
mov
ds
xor
out
xor
inc
cmpsb
mov
push
inc
out
cld
fstpt
sbb
inc
into
test
or
out
push
inc
xor
inc
jle
ret
inc
scas
push
call
inc
scas
rcll
push
sti
inc
scas
mov
pop
cmp
rolb
jb
cmp
in
ds
mov
inc
cmpsb
cmp
cmp
push
int3
inc
push
imul
jne
cmp
xor
fisubs
inc
repnz
cs
inc
out
loopne
jno
cmp
lea
push
mov
add
inc
fdivrp
dec
inc
inc
out
add
xchg
mov
popa
cmp
push
or
inc
sub
jmp
cmp
push
xchg
add
aas
push
or
inc
stos
mov
incb
leave
xlat
inc
push
jno
inc
negb
hlt
inc
out
out
inc
sahf
sub
cmp
dec
inc
dec
inc
adc
dec
scas
and
jp
into
arpl
cwtl
dec
inc
mov
scas
cmp
inc
cmp
xchg
ljmp
outsb
andnps
push
addb
nop
inc
push
push
ss
jle
ja
loop
add
mov
jle
inc
into
xchg
xchg
aas
movsl
je
ss
dec
cmp
into
je
dec
push
ds
dec
push
test
inc
scas
lds
jbe
test
inc
mov
sub
inc
jle
inc
dec
xchg
sbb
test
cmp
fmul
cmp
dec
jmp
mov
das
testb
xchg
inc
push
pop
out
scas
fwait
inc
sub
aad
incb
scas
inc
scas
test
aas
ret
inc
out
push
inc
repnz
inc
push
adc
inc
jp
dec
dec
out
lods
aas
inc
xor
pop
cmp
add
cmp
inc
insb
dec
stos
stos
stc
inc
cs
iret
dec
push
fwait
ss
into
pop
aam
notl
outsb
adc
lcall
inc
testb
inc
inc
xor
inc
push
loop
ds
repnz
imul
scas
jle
cmp
jns
cmp
pop
push
cmp
ss
cmp
daa
roll
push
inc
inc
jne
dec
mov
inc
sahf
add
scas
inc
fisubs
insb
ds
xchg
mov
into
inc
jle
push
inc
push
insb
ljmp
out
dec
es
arpl
mov
or
into
mov
cmp
mov
sbb
mov
inc
push
push
lcall
data16
cmp
es
inc
jle
and
in
xchg
dec
cs
and
inc
div
cmpsl
aas
dec
inc
stos
hlt
int3
cmp
call
inc
xchg
adc
dec
popf
inc
dec
or
inc
mov
xchg
and
outsb
pop
mov
inc
dec
out
adc
push
push
xchg
inc
sahf
sti
inc
cmp
gs
inc
adc
ds
call
mov
inc
mov
cmp
iret
xchg
inc
pop
loopne
dec
ljmp
aas
xchg
aaa
test
movb
aas
jbe,pn
cmp
or
inc
mov
cwtl
dec
addl
inc
mov
cmp
cmc
stos
inc
scas
push
adc
aas
mov
inc
jbe
les
jg
inc
out
or
mov
mov
push
mov
lret
inc
sahf
scas
inc
adc
dec
into
cmp
data16
push
lcall
push
dec
mov
dec
adc
test
ds
aas
push
shll
repnz
out
jb
pushf
cmp
inc
push
cmp
sbb
inc
sahf
lcall
push
pop
fldl
cs
push
in
cmp
call
xchg
inc
ss
lods
dec
pop
mov
xchg
sub
stos
add
inc
fnsave
ds
ss
inc
out
inc
push
adc
scas
cmp
inc
xorl
stc
push
cmp
data16
repnz
inc
xchg
ds
jle
cwtl
inc
loop
pop
dec
xor
push
cmp
div
cmp
push
inc
pop
rorb
inc
jle
sub
cmp
jae
mov
push
arpl
repnz
dec
inc
xchg
jae
ds
pushf
and
sub
cmp
aam
cmp
pop
das
fildl
adc
inc
add
cmp
push
mov
inc
mov
in
inc
fisubl
cmp
inc
jno
out
movsb
repz
lret
ja
movb
dec
stc
sub
data16
aas
xchg
push
imul
ss
dec
push
pop
outsl
cmp
lcall
push
mov
dec
inc
fisttpl
sub
inc
ds
push
nop
dec
cs
stos
cmp
sahf
nop
sub
push
xchg
dec
add
inc
push
imul
pop
or
add
sarl
push
insl
inc
scas
and
fdivrs
into
cwtl
aam
dec
mov
inc
scas
gs
pop
pusha
outsb
dec
cmpsb
and
inc
scas
stos
aas
cmp
cmp
sbb
xchg
out
add
pop
xor
loop
ds
sub
cmp
dec
fidivrl
dec
xchg
inc
inc
inc
xor
cmc
ds
xchg
inc
bound
dec
jecxz,pn
inc
ss
inc
scas
sbb
inc
ss
mov
inc
add
cmp
loope
inc
add
loop
cs
aas
scas
add
pop
fwait
lock
stos
cld
inc
repnz
inc
push
jmp
xlat
cmp
inc
and
xor
dec
fsubp
pop
cmp
xchg
cmp
gs
inc
stos
dec
loopne
out
mov
and
xor
jp
inc
push
lock
negl
inc
sbb
and
fsubl
cmp
call
inc
jp
es
scas
mov
dec
push
xor
dec
lock
ss
scas
dec
xchg
test
inc
into
xlat
jb
jb
cmp
outsb
push
xchg
inc
scas
mov
dec
fisubl
outsl
inc
es
fisubl
pop
aas
es
mov
inc
jp
pushf
cmp
inc
incb
add
cmp
ret
inc
mov
dec
cli
test
ds
jbe
inc
scas
rcrl
push
das
loope
inc
inc
scas
dec
cmp
jnp
loop
xchg
dec
into
adc
aas
mov
lods
cmp
xchg
lea
push
mov
pop
cmp
xor
dec
mov
loop
mov
push
lahf
inc
scas
das
pusha
dec
push
pusha
aaa
inc
push
push
dec
inc
mov
mov
dec
cmp
inc
and
adc
jbe
cmp
push
jge
pop
lds
inc
andb
in
es
outsb
lret
movsl
cmp
jp
dec
mov
cld
popa
dec
mov
inc
push
or
inc
out
jge
inc
xchg
aas
xor
mov
inc
xor
inc
out
imul
pop
cmp
idivb
inc
ljmp
cmp
sbb
in
xor
imul
out
xor
jle
js
push
pop
testl
xchg
jecxz
test
or
das
sbb
add
add
cmp
pop
add
mov
sub
push
add
and
add
fldl
imul
add
add
sbb
les
push
add
dec
lods
loope
fiadds
jecxz
aam
jg
push
add
fiadds
jnp
and
out
movsl
xor
add
stos
jae
push
mov
adc
add
arpl
pop
sub
add
mov
add
xchg
add
add
push
add
dec
add
add
insb
add
icebp
or
add
or
adc
add
add
or
sahf
add
adc
or
rclb
add
or
add
test
ret
add
push
mov
sbb
dec
add
add
mov
out
or
lea
jne
inc
xor
pop
or
jmp
add
push
sub
insb
add
add
mov
jle
pop
jg
xchg
mov
mov
hlt
add
mov
sbbb
mov
insb
add
cld
lock
add
add
scas
shrb
add
out
dec
add
inc
jl
enter
call
sahf
sub
inc
add
add
in
fsubs
add
jecxz
mov
add
push
cmpsl
add
ret
xchg
xlat
jne
pop
add
add
pop
add
int
xchg
mov
adc
jae
insb
add
cmc
adc
insl
adc
pop
fildll
add
in
sbb
ja
add
and
add
xor
sub
mov
mov
lds
add
add
sbb
sub
add
add
xor
add
xor
jp
popf
je
test
cmp
ss
sub
pusha
add
add
arpl
jg
add
ret
imul
xor
add
or
addl
mov
add
pop
add
add
mull
sub
or
push
cmpb
jp
or
add
outsl
clc
stos
mov
dec
add
sbb
fwait
shlb
dec
add
jmp
push
add
fcompl
mov
fsts
add
mov
jl
push
inc
cmp
mov
push
mov
lock
mov
fucom
cli
xchg
sbb
sti
aaa
xor
push
add
cmpsl
pop
jmp
add
add
pushf
adc
faddl
add
call
roll
add
pusha
add
adc
mov
je
mov
fiaddl
xor
push
stos
add
add
cmp
jecxz
jnp
data16
xchg
add
add
sub
mov
dec
push
add
adc
push
adc
add
lock
scas
insl
dec
inc
pop
add
pop
add
das
fisttpl
add
pop
add
test
add
add
inc
add
add
jo
popa
iret
pop
aam
add
push
add
xchg
xor
insb
add
add
add
sub
fsubl
aam
adc
inc
fiaddl
add
sbb
xor
add
les
out
ss
add
outsb
add
aad
mov
add
dec
add
push
add
xor
add
sbb
lcall
dec
add
testl
add
mov
add
mov
in
enter
pop
and
and
mov
sub
sbb
push
add
out
dec
jo
sbb
sbb
lea
xor
add
or
xchg
mov
or
xchg
add
add
orl
pop
cmp
add
mov
fldl
jle
ret
aad
sbb
sub
and
add
sarl
add
call
pop
add
aas
xchg
add
pop
add
inc
push
add
push
add
jno
aas
sub
clc
test
mov
adc
mov
dec
sti
push
add
outsl
sub
fiaddl
mov
sub
cwtl
lcall
add
add
movsb
pcmpgtd
into
cmp
add
add
add
add
inc
add
xor
add
shl
outsb
add
in
dec
mov
jecxz
add
stc
rorl
jo
mov
rcrl
pop
add
cmp
jp
push
add
add
add
jl
fwait
les
subb
jmp
addl
test
xchg
addb
xchg
xchg
jp
mov
xchg
or
mov
scas
mov
xor
mov
mov
shl
push
add
add
add
cwtl
add
add
cmpsl
fbstp
jg
repz
cli
add
mov
in
sbb
and
mov
movsb
add
sub
sub
jnp
or
es
add
negl
cmc
cmp
add
add
add
iret
dec
mov
mov
jns
add
add
add
mov
inc
fwait
pop
add
add
and
add
arpl
rcll
add
test
lea
fs
ja
lods
mov
cld
push
add
xor
add
cmp
iret
mov
jp
and
add
ret
jp
test
in
jnp
add
add
sbb
lret
xor
mov
mov
sbb
mov
aas
pop
pushf
push
gs
pop
add
stos
mov
push
add
add
repz
mov
in
jno
add
fldt
fiaddl
ja
xchg
in
xor
add
stc
push
inc
add
fdivs
add
sub
xor
add
sub
or
cltd
xorl
repnz
pop
add
mov
add
add
mov
xchg
pop
scas
sahf
lea
add
sub
mov
adc
lods
lock
add
mov
add
jo
inc
sbb
push
js
lret
add
add
mov
jl
adc
add
push
mov
inc
add
pop
sbb
sbb
ret
pop
dec
add
add
add
adc
add
pop
pop
add
cli
cld
adc
add
roll
add
repz
add
loop
das
cmp
cmp
popf
lock
iret
dec
inc
add
test
ja
push
add
add
icebp
insb
add
mov
add
daa
fiadds
mov
leave
call
add
add
add
aaa
adc
dec
add
sarl
add
leave
mov
add
sub
movsb
inc
add
test
add
out
add
xchg
inc
add
add
cmp
daa
xchg
add
jae
mov
xchg
cmpb
sbb
add
jge
sub
iret
cwtl
inc
imul
ja
xor
test
push
push
sbb
into
test
cmp
push
jo
inc
add
ja
icebp
movsb
adc
cmp
xchg
loop
aad
adc
pop
add
int
sbb
adc
add
add
mov
loope
leave
sbb
pop
add
cmc
addb
ja
add
dec
add
pop
add
enter
xchg
xchg
add
mov
int
or
sti
sbb
mov
and
sub
cli
jle
addr16
outsl
or
jge
jmp
mov
jg
mov
mov
data16
arpl
pop
add
jae
mov
jbe
mov
add
add
xor
add
popa
and
add
sub
test
dec
add
pop
scas
inc
add
mov
add
mov
aad
sbb
xchg
cli
addb
add
mov
add
add
repnz
add
fldt
das
jb
dec
jl
lcall
add
mov
mov
push
fwait
je
std
jne
out
push
mov
add
pusha
add
sbb
pop
add
das
sti
sbb
dec
push
add
add
sahf
push
add
mov
sti
pop
stos
add
and
add
add
pop
sbb
pop
ds
xchg
or
popf
or
lods
lea
jg
add
and
add
lahf
jo
inc
add
sub
add
mov
xchg
icebp
movl
and
sbb
add
stos
or
cmp
add
add
mov
sub
test
add
add
sbb
icebp
and
rcll
out
dec
push
add
xor
frstor
jne
add
outsb
add
push
add
sahf
add
add
sub
adc
add
xor
add
sbb
mov
bound
add
movsl
inc
add
push
sbb
add
cmp
in
xchg
add
xchg
or
xchg
mov
jmp
lahf
inc
add
lock
dec
add
icebp
pusha
add
loop
add
enter
add
mov
push
addb
cli
mov
mov
shrb
jle
lods
xchg
fcmovne
pop
jae
add
daa
add
in
add
and
jo
jb
dec
push
addl
dec
add
add
adc
add
add
dec
sti
aad
int3
fldcw
mov
loop
pop
add
adc
add
pop
add
push
jmp
push
pushf
fbld
repnz
push
shrb
shl
lahf
xor
add
pop
add
or
scas
loop
xor
add
jg
add
add
rep
pushf
mov
add
jns
test
jbe
pop
addr16
add
out
in
lods
in
adc
add
xor
add
addl
inc
add
or
sbb
cmpsl
sbb
fwait
push
sbb
add
subb
clc
insb
add
push
pop
add
rorl
and
add
fsubs
nop
inc
mov
add
add
jno
sub
inc
add
sub
jg
inc
jno
pop
mov
add
mov
sbb
add
jae
add
add
fisttps
gs
sub
xchg
loopne
loopne
add
adc
nop
xchg
mov
fiadds
jecxz
es
add
dec
or
cmp
mov
enter
add
add
in
push
pushf
cmp
or
mov
pop
add
mov
add
sub
in
popf
sahf
ret
xor
add
adc
jmp
inc
fucomp
mov
dec
mov
cwtl
cltd
popa
stos
stc
inc
add
add
cli
divb
enter
jno
pop
add
cmp
repz
add
loope
pop
add
or
nop
add
add
faddl
pop
add
sub
scas
repnz
jmp
push
add
add
cltd
adc
mov
add
mov
and
add
add
std
and
aas
mov
mov
xor
add
je
test
xlat
add
adc
push
push
jbe
int3
lods
or
xorb
add
ret
add
aad
or
sub
imul
add
cli
xchg
mov
push
push
movsl
addr16
add
scas
jbe
push
lds
xchg
add
add
add
add
and
jno
icebp
mov
cmp
push
add
add
lods
adc
add
jb
pop
add
jge
add
add
shr
pop
add
repz
mov
enter
cli
or
vsubpd
inc
rcll
add
add
mov
add
imul
add
dec
add
ret
add
pop
aaa
add
ljmp
add
pop
add
jnp
aas
lcall
ret
test
adc
push
inc
add
adc
mov
gs
test
xchg
imul
jle
mov
enter
and
inc
add
adc
add
in
inc
cmpsb
ret
or
sahf
rorb
pop
add
add
out
push
jge
add
dec
popf
mov
jae
xchg
aam
xchg
mov
lcall
push
movsl
into
jns
add
adc
inc
push
dec
add
push
out
add
pop
movl
add
add
jns
dec
add
add
jp
jno
add
inc
push
ss
add
std
mov
xchg
xchg
inc
add
int
cmp
scas
repz
pop
sub
or
out
dec
add
add
fdivs
add
lods
ljmp
enter
add
incb
dec
mov
dec
stc
rol
pop
pop
or
negb
add
insb
add
pop
imul
add
sub
lret
stc
pop
rolb
and
rorl
add
addl
std
cmpsb
push
push
mov
add
cmp
repz
add
loopne
add
imul
add
jae
out
rcll
stc
add
and
add
rcll
mov
cmp
lods
jg
sub
gs
mov
mov
into
sub
xor
add
dec
add
or
push
fdivl
lret
mov
cmp
mov
push
xor
add
addr16
inc
fstpl
pmaxub
sbb
stos
mov
int
gs
adc
add
add
mov
insl
jno
ja
inc
gs
add
stos
add
pop
cld
add
xor
add
add
add
outsb
add
add
incb
jae
fstl
add
lahf
les
mov
rorb
mov
bound
pop
add
adc
add
add
inc
sbb
sarl
add
mov
leave
cmp
push
add
add
push
push
mov
cmp
fucomp
call
xor
mov
add
add
mov
repnz
xchg
add
in
cmp
xor
add
loope
sub
add
add
daa
add
dec
add
sbb
lret
jl
ja
fidivrs
mov
cmp
push
add
fmul
clc
fstpl
xor
mov
mov
and
jg
repz
sub
fmuls
ror
or
fistpll
mov
inc
lock
xor
add
push
fistpll
push
add
add
push
add
mov
xchg
lods
gs
mov
add
sub
rcl
jno
dec
in
sub
pop
fcomp
addr16
add
xor
or
add
mov
cli
add
add
add
nop
loopne
gs
add
lret
adc
add
jge
scas
add
xchg
ljmp
push
ljmp
add
xchg
scas
shlb
das
inc
add
push
add
mov
daa
lds
adc
add
punpckhbw
mov
pop
add
add
sti
call
dec
lret
xchg
ss
sub
call
mov
lea
push
push
push
push
call
cmpb
jne
mov
push
push
call
add
and
xor
cmp
jb
lea
and
or
es
push
mov
test
je
shr
test
jne,pn
nop
leave
lret
or
xchg
call
shll
xor
add
inc
add
insb
add
inc
add
aad
add
cmc
cmpsl
pop
loop
add
es
das
pop
add
insl
leave
add
add
or
jp
sbb
popa
adc
add
roll
mov
loopne
add
or
add
loopne
dec
add
mov
pusha
add
out
mov
mov
addr16
adc
add
and
aaa
add
or
pop
addl
add
cmp
add
add
cli
mov
push
add
adc
add
je
sbb
adc
or
loopne
add
push
dec
add
incb
adc
mov
addl
inc
mov
adc
push
add
and
xor
mov
add
add
add
insl
mov
add
xlat
sbb
add
add
xor
add
cwtl
add
add
push
add
add
or
add
mov
mov
mov
add
dec
sbb
add
rclb
lods
ret
push
incl
mov
test
add
scas
es
push
add
mov
jns
pop
lods
add
cld
add
fnsave
add
out
jns
mov
pop
add
dec
add
xchg
add
popl
lock
cmp
iret
push
add
jge
lea
add
dec
fstpl
add
roll
movsb
dec
add
pop
add
cltd
lcall
mov
jne
mov
xor
lods
pop
or
xchg
sub
and
add
imul
or
sub
outsl
out
inc
sbb
shr
fstp
lods
scas
push
dec
add
loop
xchg
add
add
jns
rcrb
dec
cwtl
cmpsb
push
mov
add
sub
pusha
add
shlb
pop
add
sbb
dec
add
addr16
and
add
pop
cmp
add
add
add
pop
add
out
shlb
add
or
push
jmp
lret
lock
stc
xor
clc
sbbb
hlt
mov
iret
sbb
sub
ror
loop
jnp
div
add
jge
mov
outsl
fdivrl
dec
add
mov
jl
mov
sub
jno
push
add
ja
insl
out
mov
fcom
dec
add
add
mov
add
jo
push
int3
add
jl
pop
add
xchg
iret
std
dec
add
xchg
mov
push
add
mov
push
add
pusha
add
xor
jmp
and
cld
imul
xchg
gs
jbe
fsubs
xchg
sbb
push
add
jae
ret
adc
cld
ljmp
add
or
pop
loopne
std
inc
lret
shll
fbstp
faddl
ltr
roll
inc
add
out
in
leave
stos
xlat
cmc
sahf
inc
mov
add
push
add
or
movsl
dec
mov
add
push
add
nop
mov
add
pop
add
xchg
scas
sbb
rcl
jp
outsb
add
pop
add
mov
jmp
lahf
cltd
mov
stos
add
mov
mov
inc
xchg
cld
lahf
lret
cmpsl
sub
or
add
je
or
or
jo
mov
xor
add
lods
setbe
and
add
inc
mov
mov
or
add
xchg
add
dec
add
ret
jo
subb
int3
sahf
xchg
push
add
sub
pop
add
icebp
cli
and
outsl
mov
dec
add
ja
add
add
add
fsubrl
mov
fsubl
mov
jle
jns
add
push
add
mov
into
loope
mov
mov
push
add
cmc
and
add
mov
xchg
mov
ja
jp
push
pusha
add
mov
loopne
lods
ja
mov
loope
std
in
or
pop
out
add
add
inc
push
int3
aam
jl
pop
mov
mov
adc
add
out
mov
add
arpl
sahf
add
xor
test
sbb
outsb
add
add
in
pop
add
scas
add
add
inc
add
mov
xor
pop
add
nop
insb
add
mov
outsb
add
pusha
add
in
js
lcall
mov
add
loop
enter
add
dec
add
jnp
lret
lock
cmp
stc
add
dec
pop
add
shrb
mov
rorl
addl
add
sbb
push
xchg
ds
es
add
mov
nop
mov
add
ret
outsb
add
add
dec
into
push
add
test
iret
movsb
push
mov
stos
inc
add
add
mov
shll
outsb
add
sub
add
mov
add
cli
in
call
add
push
xor
add
lret
cmp
jecxz
outsl
xor
add
out
xchg
add
xchg
sub
lret
mov
inc
add
sub
popa
or
mov
add
adc
outsb
add
add
stc
fsubl
push
add
fcoms
mov
add
fwait
add
add
or
data16
inc
pushf
push
add
cmp
in
clc
outsl
push
add
add
insl
rclb
scas
jno
add
fwait
jae
add
orb
mov
add
add
icebp
cmp
add
cmp
icebp
fwait
sahf
mov
jo
decl
pop
sti
jecxz
les
add
add
sbb
xor
ljmp
stos
dec
dec
push
mov
mov
mov
cmp
fidivl
jecxz
inc
dec
call
lock
gs
xchg
jnp
sahf
add
add
out
testb
adc
add
lea
ret
in
push
add
xor
jl
pushf
jmp
push
cmpsl
fimull
sbb
mov
mov
cmp
movsl
lock
fbld
fistl
popa
push
fildl
outsl
add
xchg
add
sbb
jg
nop
mov
sbb
push
add
push
iret
and
add
and
add
dec
add
int3
add
add
add
mov
mov
add
add
push
ljmp
add
jmp
cwtl
pop
add
sub
mov
sub
push
add
add
inc
add
sbb
add
add
add
sub
mov
add
fadds
adc
aaa
nop
add
push
mov
add
add
bound
sbb
adc
add
enter
ljmp
xchg
add
add
push
add
add
js
clc
jge
icebp
out
verw
out
xchg
out
stos
fdivrl
push
add
int3
ss
add
popf
jae
cltd
ret
pushf
inc
add
int3
xor
shrb
lods
mov
xor
xchg
add
pop
inc
add
rcrl
and
add
sub
icebp
pop
add
cmc
jne
xchg
or
insb
add
ja
ficomps
scas
mov
add
xor
add
bound
imul
inc
add
pop
add
je
sbb
mov
and
repnz
cli
add
add
hlt
dec
loopne
add
add
pushf
xchg
xor
into
in
mov
lock
add
xchg
add
icebp
pop
js
nop
mov
add
pop
add
sub
test
add
mov
test
sub
scas
jnp
add
push
and
add
imul
fcmovb
mov
add
repnz
cmp
mov
mov
call
cmovno
add
add
add
mov
pushf
mov
add
in
mov
sbb
mov
popa
add
in
icebp
movsl
rorb
push
jl
test
popa
jl
sbb
sbb
sub
sub
bswap
dec
add
mov
testl
nop
pusha
add
mov
sub
inc
sub
fwait
xchg
test
mov
in
xchg
lea
cmp
sbbl
push
or
xor
mov
pop
mov
idivl
add
pop
add
jecxz
or
popf
cmp
icebp
in
xor
add
mov
xchg
mov
dec
add
add
add
push
add
add
scas
roll
add
aam
test
mov
sbbb
push
in
imul
lahf
mov
test
mov
cwtl
xchg
sbb
jns
pop
add
sbb
add
push
test
or
pop
add
test
popf
icebp
aam
add
add
add
clc
mov
mov
push
popl
test
dec
dec
add
add
out
sub
push
add
add
push
insl
dec
add
loop
jmp
mov
add
enter
testb
popa
add
mov
mov
ret
mov
sbb
jmp
mov
wrmsr
jnp
sbb
addl
add
add
xor
add
popa
insb
add
movb
mov
add
sbb
jae
add
push
out
aas
lret
adcb
ficoms
ret
add
add
outsb
add
add
fnstsw
push
add
add
imul
addr16
add
add
cmp
jbe
data16
xor
add
lock
sbb
sbb
ficoml
mov
mov
mov
xchg
test
add
out
mov
or
push
add
std
xchg
mov
inc
add
add
add
add
outsb
add
sub
add
push
pop
add
test
xchg
pop
add
add
add
push
dec
adc
add
add
sbb
add
add
xchg
mov
add
add
movsb
inc
push
sbb
cmp
inc
add
add
mov
cld
add
dec
add
push
add
cmp
add
pop
lea
push
add
out
insb
add
push
add
mov
add
rcr
outsb
add
ret
and
add
stos
stos
sahf
dec
push
add
add
test
jb
cmpsb
aaa
fldl
loop
add
jmp
hlt
cli
jmp
adc
push
add
cmp
adc
add
jns
add
imul
icebp
orl
add
jb
test
cmp
mov
add
sti
add
pop
add
arpl
insb
add
lahf
xchg
push
fiadds
int3
pop
add
jo
pushf
iret
pop
lret
inc
mov
add
xorb
add
fnstenv
or
mov
js
mov
mov
and
add
jns
test
xor
add
adc
add
andb
pop
mov
adc
add
mov
out
inc
or
jno
and
test
add
lea
cmp
insb
add
jmp
add
cli
clc
add
add
add
invd
add
dec
out
and
mov
sub
pop
dec
add
enter
add
xor
xchg
jae
lock
add
sbb
or
inc
cmp
sti
mov
inc
add
cmp
pop
add
inc
add
add
test
loope
inc
repz
add
add
xchg
fwait
outsl
insb
add
mov
leave
inc
add
repnz
mov
and
add
cmp
mov
xor
push
add
roll
jno
xchg
adc
int
outsl
pop
add
mov
add
xor
add
and
add
xchg
negl
add
jo
sbb
add
les
xchg
add
faddl
add
cltd
inc
add
or
pop
add
cmp
inc
pop
add
sahf
movsb
pop
xchg
dec
pop
add
mov
shl
rclb
cwtl
hlt
out
sub
mov
add
mov
imul
lahf
inc
add
in
pop
sub
ret
add
sub
or
loope
jecxz
add
add
mov
cmp
inc
add
add
mov
ljmp
ret
xorl
xorl
mov
insb
add
dec
jae
adc
bound
stos
inc
add
xchg
jns
xchg
loope
add
sub
testb
lahf
popf
sti
std
dec
sub
aad
mov
imul
pop
rorb
pop
add
adc
add
cmpsb
imul
push
add
sti
add
enter
xlat
adc
add
xor
add
mov
add
add
insl
ret
shl
ds
inc
add
dec
add
adc
add
imul
pop
addl
or
in
push
cmp
shrb
xchg
jg
and
add
icebp
in
lea
mov
mov
push
cmp
dec
add
adc
add
add
aas
mov
dec
div
or
mov
cmp
sub
fdivr
dec
add
loopne
or
test
lahf
sub
add
and
add
insb
add
add
rorl
mov
cmp
cs
xchg
mov
in
add
inc
add
adc
add
dec
pop
int
and
cmp
sub
sbb
push
sbb
xlat
add
add
clc
add
or
pusha
add
mov
gs
add
add
mov
ss
add
add
push
cmc
add
pop
add
loope
mov
add
add
mov
gs
add
lret
rcrl
add
add
add
pop
add
jmp
jg
add
lahf
lock
lahf
mov
sbb
push
pop
add
xchg
insl
xchg
adc
add
sub
out
ja
enter
mov
add
daa
stos
add
push
add
mov
add
inc
add
cmp
sbb
stos
mov
jecxz
test
cmp
pop
jle
outsb
add
add
dec
add
add
mov
cld
fwait
inc
add
add
cmp
scas
cmp
or
jg
xchg
mov
xlat
add
add
add
outsl
mov
mov
jp
ret
push
add
add
dec
test
sti
mov
add
decl
lret
cltd
enter
imul
lds
imul
or
add
xor
add
das
cmpsl
out
add
add
add
leave
pop
add
add
sbb
in
test
jb
call
inc
add
adc
add
adc
add
daa
sub
out
clc
adc
add
xlat
xor
roll
testb
fst
or
pusha
add
or
add
pop
mov
lret
sub
xchg
addl
sar
add
add
cwtl
mov
test
out
add
test
pusha
add
pop
add
imul
push
add
dec
add
scas
jl
ret
in
ds
test
repnz
and
add
das
add
insl
add
add
lds
lock
out
andb
lcall
sarb
movsl
popf
dec
insl
sub
mov
mov
jbe
and
add
add
mov
nop
clc
xchg
repz
xlat
lea
add
das
loopne
mov
jg
xchg
fbld
cmpsb
ret
fwait
aaa
mov
mov
add
mov
mov
xchg
lret
add
movl
pop
add
mov
xchg
sahf
add
lock
outsl
pop
out
xchg
jns
jle
outsl
ficomps
ret
outsl
add
push
clc
jg
imul
add
shl
int
push
add
push
cmp
sbb
add
fstps
rcrl
push
adc
mov
add
loopne
repnz
cmp
jge
and
fcomp
sub
sub
add
or
clc
and
add
sub
loop
mov
enter
test
push
add
jne
push
add
mov
loopne
add
mov
pop
lods
push
add
mov
and
add
idivl
add
sbb
cltd
popa
pop
data16
mov
aam
jecxz
pop
add
pop
add
and
add
subb
shll
jb
mov
mov
xor
and
add
mov
add
add
xchg
push
add
lods
pop
out
add
lock
repnz
and
add
cmp
jo
les
lea
add
xorl
add
ljmp
test
andl
cmpl
add
sbb
fisubrs
lea
pop
add
dec
ret
add
pop
test
inc
jbe
xor
add
add
loop
gs
and
je
jno
add
add
daa
roll
mov
fistps
inc
add
add
add
pop
add
mov
mov
dec
add
dec
add
xchg
jmp
imul
sbb
mov
scas
lods
pop
dec
add
mov
stos
sub
sbb
lods
imul
push
add
cmp
xor
cltd
or
jno
xor
mov
add
dec
add
or
or
les
jne
movsb
xchg
mov
add
push
sub
mov
and
add
add
leave
pushf
bound
sub
in
add
mov
dec
test
dec
fwait
adc
add
mov
test
add
test
aad
hlt
leave
cmp
dec
add
in
add
pop
sub
jae
add
add
jp
fistl
fldl
movsl
cmp
in
aam
add
imul
add
pop
add
sub
inc
add
shlb
cmp
fwait
push
add
xchg
add
outsb
add
popa
mov
add
add
lods
mov
add
xchg
dec
add
bound
sub
sbb
add
mov
push
add
or
cmp
lds
rcrb
add
add
fsubs
in
sub
sub
and
add
xor
add
add
add
add
data16
adc
iret
icebp
xchg
shrb
test
pop
add
addb
add
add
add
popf
pop
add
dec
add
add
push
add
cmpsl
add
cld
out
sbb
shrb
mov
into
popf
lock
fidivs
imul
mov
mov
add
xlat
xor
dec
add
cld
add
mov
push
add
loopne
mov
daa
jg
push
add
lret
jg
lahf
add
imul
xchg
jae
add
sbb
popl
pop
lahf
mov
add
add
add
mov
cli
jmp
rorb
daa
testl
add
push
dec
add
or
iret
clc
and
pop
add
testb
aam
sub
cwtl
fidivl
jb
mov
push
add
imul
mov
dec
add
cwtl
loopne
sub
add
add
movsb
adc
pushl
insb
add
add
add
sub
pushf
movsb
push
push
add
mov
bound
hlt
loope
jge
add
inc
add
or
add
test
cmp
pop
add
aas
pushf
pop
push
add
or
jp
jle
jl
sub
iret
ret
js
jbe
addl
sub
push
add
loop
push
scas
pop
add
xchg
add
inc
add
out
or
mov
loope
dec
insl
jno
lret
xchg
scas
sbb
sahf
stos
dec
add
addb
loope
imul
cmpb
lods
mov
add
add
add
push
add
xor
add
andl
add
cmp
push
add
inc
add
aas
add
in
pinsrw
add
push
daa
xor
pushf
sub
cmp
aad
insb
add
enter
adc
add
mov
data16
add
push
add
add
push
add
cli
sub
ljmp
adc
inc
add
loopne
jge
jbe
out
jmp
lods
movsb
mov
lcall
fnstsw
insl
or
push
mov
dec
add
add
xchg
add
testb
nopl
lcall
cmp
mov
add
gs
or
hlt
add
xor
add
sub
sbb
out
jnp
fimuls
fisubs
call
leave
inc
or
sar
dec
daa
sub
add
add
jmp
xchg
add
scas
push
add
pop
add
in
aam
mov
push
add
sbbb
jge
pusha
add
mov
inc
mov
add
push
into
push
add
cld
add
pop
add
adc
dec
add
cs
xchg
mov
add
mov
add
jno
jmp
imul
adc
fstps
push
scas
mov
std
inc
add
inc
add
sbb
xchg
loope
fs
lea
add
andb
add
lcall
pop
add
rolb
pop
add
add
add
insb
add
mov
add
adc
add
rolb
add
lldt
add
es
add
in
in
repz
imul
push
add
cmp
addl
adc
adc
add
add
mov
inc
add
xchg
inc
add
or
pop
xchg
add
in
add
leave
inc
jb
daa
roll
mov
or
in
and
mov
add
add
nop
aad
hlt
ret
add
lock
aad
adc
cmp
xchg
mov
stc
pusha
add
add
sti
mov
nop
add
inc
add
pushf
cwtl
ficoml
jle
and
into
into
cwtl
dec
add
add
lock
push
fisubs
clc
push
add
and
add
mov
add
add
in
in
fisubrl
out
xor
enter
arpl
add
push
add
xchg
inc
add
movsl
lret
fistpl
add
and
jnp
mov
add
es
jg
gs
jo
xor
jp
xchg
mov
leave
add
mov
jns
ss
cwtl
jecxz
movsb
pop
movl
stos
cmp
xchg
push
mov
mov
add
add
and
js
shll
jnp
xor
add
add
popa
mov
fstpt
loope
add
test
out
enter
add
mov
xchg
sbb
push
and
add
add
into
loopne
es
add
lea
lods
ret
mov
stc
add
mov
mov
add
in
outsl
xchg
add
add
test
sbb
or
or
push
cmp
push
cmpsb
add
std
cmp
xor
les
cltd
mov
cmc
mov
add
test
adc
lods
cmp
add
xor
add
add
add
popl
xor
add
repz
cltd
adc
gs
popa
xchg
and
add
push
fildl
sarl
call
mov
add
or
mov
clc
add
add
push
add
jp
loop
add
add
sub
je
inc
add
jg
add
jge
mov
add
scas
add
xor
mov
adc
out
add
add
fldl
je
jo
pop
mov
sbb
pop
xlat
add
mov
xor
pop
add
dec
add
imul
mov
pop
nop
mov
add
jnp
fadds
add
sahf
add
lds
mov
add
inc
add
pop
mov
pop
mov
mov
add
daa
mov
leave
mov
push
add
dec
add
jnp
es
shrb
add
pushf
add
ret
test
fcomp
lods
lock
cwtl
dec
cmp
push
add
cmpsl
jmp
aas
sarl
cmc
addl
popf
jecxz
xor
add
scas
add
pusha
add
add
repnz
in
outsl
std
nop
xchg
lret
push
mov
xor
pushf
push
mov
add
add
cmpsl
cmp
roll
add
es
out
add
cld
lds
add
sub
nop
into
inc
add
sbb
lods
insl
mov
sti
jp
xlat
jp
fucomip
popf
adc
add
rcll
inc
out
xor
add
inc
add
push
andl
add
cmp
imul
add
jo
adc
out
and
push
add
cmc
xorb
dec
add
xchg
add
lods
bound
add
push
or
add
mov
add
aam
jle
fcoms
add
add
pushf
adc
shll
popf
test
dec
fnsave
lcall
lret
push
add
dec
cwtl
stos
fmuls
popf
int3
es
add
mov
add
sbb
aad
add
add
imul
dec
or
mov
mov
nop
jbe
in
push
sbb
aad
add
add
pop
cmpsb
outsl
iret
stos
and
mov
sbb
rcll
mov
mov
outsl
push
add
movsl
add
sbb
cltd
insb
add
cld
loop
lea
mov
fidivrl
add
sbb
jecxz
cltd
int
jns
cmp
and
lret
lcall
andl
ljmp
inc
add
add
push
add
or
mov
in
xchg
and
add
mov
mov
or
std
xlat
cli
lahf
notb
cmp
xor
out
or
xor
add
test
add
push
add
push
add
sbb
imul
add
adcl
add
cwtl
xchg
lods
scas
popf
push
add
cli
push
inc
push
push
incl
test
add
add
push
add
imul
add
add
movl
icebp
cmp
sub
xchg
enter
xchg
cmpsb
inc
cld
push
add
mov
add
mov
add
xchg
loop
sub
jle
xor
add
movsl
jo
or
adc
es
add
js
bound
dec
adc
add
add
xchg
mov
std
add
hlt
fmul
jo
add
add
xchg
inc
add
mov
in
dec
repnz
jecxz
pop
add
xchg
aam
xor
add
add
lea
sbb
hlt
push
or
in
pop
repnz
pop
add
pop
add
add
adc
jecxz
dec
add
add
sbb
pop
xor
add
mov
loope
pop
leave
adc
add
sub
mov
add
add
jae
jecxz
sbb
add
dec
push
mov
inc
add
ss
repz
aaa
cmp
cld
sub
movsb
test
add
inc
add
fadds
jns
add
add
shlb
cmp
add
jns
iret
rcll
add
and
add
add
roll
push
add
add
stos
push
add
add
ret
es
ficompl
xchg
sub
pushf
sbb
jnp
shll
add
xor
gs
jno
rcrb
test
imul
scas
push
add
test
lea
push
in
add
mov
sub
stos
bound
cmpl
sub
and
push
cmpsb
out
xor
add
jg
scas
adcl
add
add
adc
loope
xor
and
add
data16
mov
or
add
dec
xor
add
les
test
add
or
add
sbb
cmp
xchg
xor
std
lods
mov
lds
mov
pop
mov
xor
add
add
push
add
add
aaa
mov
and
mov
mov
andb
add
lods
push
insl
xor
add
mov
push
add
dec
add
movsb
in
sbb
inc
mul
loope
add
dec
mov
add
add
add
fldl
add
ljmp
add
push
add
add
cltd
test
add
mov
roll
das
add
xchg
inc
push
add
pop
cmp
out
push
add
push
add
std
add
dec
add
cmpb
inc
out
fwait
cmc
pop
cltd
aaa
les
shl
lods
in
imulb
inc
fstpt
add
es
add
cld
add
lods
mov
stos
xor
add
fwait
rcll
xchg
mov
popa
lds
add
push
stos
jp
mov
mov
add
and
add
mov
mov
sub
mov
adc
push
add
xor
add
jno
repz
loopne
in
adc
add
add
add
add
push
add
add
push
test
mov
rolb
inc
jmp
popa
xchg
or
lret
stos
mov
add
add
add
add
repz
add
jne
adc
adc
fidivs
xor
out
test
inc
add
fwait
enter
cmp
mov
adc
add
sub
pusha
add
into
mov
add
add
adc
xor
movsb
addb
cmp
ljmp
add
pop
pop
add
add
inc
add
add
cli
ficompl
adc
xlat
lret
add
data16
pop
add
lahf
push
add
xor
push
jl
pushf
adc
add
xor
add
scas
add
dec
add
mov
mov
add
js
add
add
sub
sbb
cwtl
hlt
sub
outsb
add
ljmp
add
adc
inc
add
aas
add
int
sub
ficoms
lods
inc
dec
add
mov
fcomps
sub
inc
add
dec
iret
lea
add
enter
inc
inc
add
add
push
add
jmp
or
negl
add
sub
mov
add
aad
add
lods
add
inc
addr16
mov
add
add
and
add
data16
pop
add
xchg
xchg
and
lret
add
mov
add
push
add
addb
int3
xor
add
pusha
add
and
lods
xor
add
xor
add
insl
xor
add
add
add
push
add
push
bound
mov
or
add
add
and
lret
cmpsl
cvtps2pi
movsl
and
xor
inc
add
stos
imul
push
pusha
add
add
adc
add
into
xchg
repz
daa
adc
mov
fs
add
add
sbb
clc
inc
cwtl
inc
stos
notl
mov
sbb
push
add
add
push
data16
ret
cmp
jnp
mov
incb
aad
xlat
xchg
xor
add
sbb
sub
lahf
add
dec
add
scas
test
negb
mov
inc
add
je
xchg
movl
loop
pop
add
ficomps
sbb
xchg
std
arpl
xchg
andb
sbbl
mov
mov
mov
mov
and
jp
push
jl
pop
fiadds
cmp
xor
add
and
out
test
sbb
add
add
mov
sub
jecxz
cmp
adc
add
and
fmulp
mov
mov
inc
add
jbe
lock
add
add
cmc
add
and
inc
and
sbb
in
xchg
pop
add
clc
mov
imul
leave
imull
add
add
addb
add
add
clc
add
jecxz
sbb
mov
add
lds
add
scas
imul
add
ffree
xchg
add
enter
adc
add
add
add
add
lahf
adc
pop
movsl
add
mov
cwtl
add
sub
or
push
add
add
add
rcr
js
inc
xchg
repz
add
sahf
divb
test
aam
bound
jne
popf
flds
push
add
insb
add
cmp
mull
add
int3
mov
adc
ret
xchg
sub
lret
ret
push
sbb
ret
fsubrs
add
jb
xchg
add
dec
ja
in
mov
add
jae
sbb
add
push
add
add
int3
test
add
nop
mov
cltd
aad
add
push
add
in
scas
xchg
xor
jns
add
add
add
add
mov
add
xor
add
xchg
add
cmp
in
add
cmp
mov
icebp
enter
fiaddl
addb
add
mov
lds
xchg
add
adc
add
int3
xchg
loopne
daa
filds
pop
add
add
sarb
lret
dec
add
add
scas
jbe
dec
push
shll
add
aaa
ret
cmpsl
ljmp
push
enter
pop
lahf
push
add
sbb
lods
mov
pop
push
mov
ror
jmp
fcmovnbe
sbb
cmc
cld
pop
adc
add
lahf
add
xor
sub
lcall
add
pushl
mov
push
add
jne
add
dec
push
add
daa
mov
adc
add
test
scas
cwtl
mov
add
add
gs
add
add
add
add
add
xchg
pusha
add
test
fcmove
in
add
loopne
add
xchg
fwait
pushf
xor
add
push
ficoms
dec
add
inc
lahf
cmp
insb
add
jmp
xchg
add
aas
cmp
jmp
loopne
mov
adc
and
add
xchg
jmp
sbb
loope
popl
cmp
push
add
push
inc
inc
add
add
xchg
loope
add
push
add
sub
and
out
insl
add
bound
push
jmp
dec
inc
add
xchg
inc
add
add
xchg
clc
subl
push
ret
subl
cmp
dec
xchg
std
add
add
mov
out
and
add
mov
add
je
cmp
push
or
arpl
adc
add
add
push
stos
cmp
push
jo
mov
push
add
call
sbb
cmp
call
arpl
out
lahf
mov
in
or
cmp
mov
mov
je
js
push
jp
sub
push
loopne
dec
add
adc
add
stc
sahf
mov
and
xchg
lods
lds
mov
ficompl
push
mov
out
fdivp
lds
sub
cwtl
fidivs
dec
add
sbb
xchg
sbb
sbb
sub
sti
and
or
add
in
aam
call
mov
add
in
pop
add
mov
popa
mov
jecxz
add
rclb
out
roll
add
dec
xor
add
scas
inc
add
add
flds
out
push
add
mov
test
and
inc
stc
fists
and
es
add
or
clc
adc
add
pop
pop
in
cltd
add
out
add
and
add
nop
add
add
push
add
dec
add
add
lret
jmp
add
push
mov
loope
push
add
jne
cmpsb
mov
sub
xchg
gs
imul
add
xchg
gs
pop
icebp
add
xchg
add
adc
arpl
cltd
pop
sub
adc
clc
push
add
push
out
stos
xor
pusha
add
std
jp
inc
shrl
push
add
mov
add
clc
gs
add
xor
add
ja
mov
add
adc
icebp
dec
add
add
push
add
fidivs
add
add
xchg
add
outsl
lods
xor
lea
mov
stc
sbb
add
sub
add
jmp
add
add
movsl
jno
pusha
add
pop
adc
cmp
dec
add
jle
jl
aaa
mov
xor
add
sahf
outsb
add
add
add
xchg
add
cmpl
adc
add
add
and
leave
fcoms
xchg
inc
add
mov
or
or
push
add
add
add
inc
add
lock
jbe
mov
pop
add
add
call
insl
and
add
lret
and
push
add
js
push
add
sbb
xor
add
test
fstl
push
add
std
shlb
add
out
xchg
aad
pop
dec
add
jg
pop
out
add
add
add
add
std
mov
mov
repz
inc
rcrl
add
dec
mov
fsubrp
inc
cmp
xor
add
inc
add
fldt
push
add
pop
fwait
add
mov
sub
es
add
addl
stc
xor
std
sub
mov
out
sti
inc
add
sub
lods
repnz
out
cmp
or
push
mov
ret
sbb
lahf
and
add
in
inc
add
cmp
add
popf
clc
push
add
inc
nop
sqrtps
jb
fists
add
mov
out
mov
push
int3
fsubp
insl
daa
bound
mov
add
add
scas
pop
add
push
add
push
add
fdivrs
push
add
clc
add
inc
add
sbb
cmp
repz
lods
mov
rclb
add
push
add
or
mov
dec
add
negl
cmp
xor
imull
add
cmpsl
insl
pop
and
add
inc
add
sub
sbb
mov
add
repnz
xchg
aam
shlb
cmpsb
aaa
and
or
mov
in
shrb
popa
ficoml
jg
pop
call
fsub
and
add
mov
add
mov
inc
sbb
mov
insl
aaa
pop
add
add
jl
call
add
insl
mov
add
add
add
das
push
add
push
add
in
xor
lock
add
cmp
roll
je
jp
add
add
push
add
mov
sysexit
pop
add
lret
mov
add
movsl
mov
popf
fwait
adc
add
lret
fwait
mov
fidivrl
jg
pop
stos
add
cmp
jl
xor
add
mov
pop
in
push
add
add
addl
test
mov
or
jns
inc
add
es
mov
sub
or
out
add
loope
add
jmp
push
add
mov
add
mov
out
movsb
mov
add
add
cmp
andb
pop
or
js
aam
lcall
ljmp
add
data16
sub
cmp
cld
mov
pop
add
pop
cmpsb
add
addb
add
add
arpl
add
mov
add
cltd
cmp
incl
mov
mov
pushf
mov
xchg
mov
jp
sub
pop
add
add
ret
add
lods
jbe
cmpsl
dec
fisubrs
xchg
add
add
add
loopne
dec
add
rolb
add
sub
jle
adc
add
imul
add
sahf
test
loopne
mov
scas
inc
add
and
scas
mov
add
mov
stos
mov
test
add
pop
xchg
mov
addb
sub
mov
add
xchg
cwtl
jns
repz
cmpsl
leave
add
add
sbb
dec
sub
or
xchg
dec
pop
mov
xchg
mov
mov
add
enter
shrl
dec
pop
add
or
lods
pushf
and
popa
pop
push
ficomps
add
pop
add
leave
dec
add
lods
dec
add
add
xchg
call
pop
pushf
rcl
and
lods
addr16
iret
add
fwait
add
add
ds
push
xor
add
das
inc
loop
add
add
add
add
jp
add
add
out
add
add
jecxz
or
test
jno
in
lcall
mov
cmpsl
xor
add
add
add
test
outsl
bound
fwait
pop
icebp
add
popl
cmp
fildl
fs
jae
cmp
sub
xchg
enter
data16
sbb
xlat
jp
or
mov
inc
add
adc
add
xchg
cmp
mov
mov
fucom
mov
mov
test
mov
in
push
add
xchg
sbb
add
out
add
test
sbb
ret
add
cmp
fadds
enter
add
in
push
xor
pop
add
out
xchg
add
add
jmp
xor
outsb
add
add
or
hlt
xchg
int
xchg
icebp
mov
mov
cmp
roll
xchg
sbb
into
jbe
fidivl
in
popf
mov
mov
add
popf
shlb
add
jp
or
pushf
and
add
cmpsb
mov
or
pop
add
sbb
pushf
mov
repnz
jae
mov
and
xor
fldt
or
mov
and
add
mov
hlt
xchg
rorb
jmp
pop
pop
sbb
jno
enter
cmpsl
out
loope
inc
add
les
cmp
add
clc
jae
lgs
mov
shl
pop
sbb
dec
add
xchg
add
add
and
add
sub
pop
add
add
xchg
clc
jae
xchg
test
xchg
mov
movb
cmpl
add
adc
xchg
xchg
ja
or
data16
fcomi
lret
out
xor
add
std
sbb
cmp
inc
add
add
in
ret
xlat
xchg
or
in
xchg
pmullw
scas
add
rolb
dec
add
das
and
inc
sbbl
jb
aas
sub
mov
cmp
out
movsb
je
pop
add
testl
adc
add
add
add
call
add
add
add
xchg
pushf
push
add
push
repnz
jae
adc
xchg
xchg
adc
xor
hlt
mov
rclb
add
add
add
and
add
add
lock
imul
out
add
mov
scas
xlat
ret
jp
dec
add
out
add
jne
and
ljmp
add
sti
add
cmpsb
int3
inc
add
stos
arpl
or
mov
add
inc
add
jp
sub
sub
pop
aam
mov
add
adc
add
add
add
push
mov
push
add
and
xor
push
add
pop
stos
lret
stos
add
mov
mov
addr16
mov
out
movsb
movsl
add
fwait
into
clc
mov
xchg
or
add
clc
jae
hlt
and
or
add
xor
repnz
jae
pop
and
and
jno
lahf
stos
cmc
mov
push
xchg
jmp
setae
sbb
pop
add
add
add
add
repnz
jae
adc
xchg
lds
fidivl
loope
pop
add
add
xchg
mov
js
xor
inc
add
shlb
jns
xchg
clc
jae
rorb
mov
mov
mov
ljmp
aad
pop
roll
outsb
add
les
orl
add
mov
insl
leave
jl
rorb
shrl
stc
mov
push
mov
lock
ret
and
pop
and
pop
outsb
add
dec
pop
add
outsl
movsb
and
ret
daa
movsl
add
push
push
add
dec
add
add
push
mov
lock
ret
or
shlb
scas
sub
dec
add
add
add
sub
movsl
pop
imul
popa
repnz
jae
and
mov
fcmove
jo
pop
add
loope
pop
add
mov
adc
add
add
cmpsl
add
je
inc
add
mov
inc
and
loop
add
add
dec
sbb
incb
stos
pop
push
xor
repnz
jae
fsubrl
and
out
mov
xor
add
xchg
jmp
stos
fsubrl
add
add
lahf
add
cmp
or
daa
push
add
push
inc
add
push
add
lret
les
push
add
repnz
jae
pop
mov
fcoml
or
xor
xor
jmp
sub
loopne
sbb
cmp
xor
mov
add
cmp
dec
insl
add
add
movsl
not
dec
add
insl
leave
out
inc
test
push
mov
lock
ret
or
xor
inc
add
rolb
sbb
xor
add
xchg
cmpsb
cltd
sub
popa
sub
mov
repnz
jae
mov
cmpxchg
test
xor
sub
cmp
andb
lods
push
and
push
pop
mov
inc
decl
push
mov
lock
ret
sbb
pop
xor
clc
add
mov
aad
add
cmpsb
popl
sbb
or
rcll
sbb
icebp
xchg
imul
add
clc
cmpsl
xlat
lea
cmpsl
mov
mov
push
sbb
jnp
inc
pusha
add
jo
mov
sbb
rcl
in
in
and
add
adc
add
pop
inc
rorl
test
loop
mov
add
add
jle
jle
pop
add
sti
lret
push
add
mov
jb
aam
add
adc
cmpsl
or
lret
xchg
sbb
mov
jne
adc
add
add
and
add
sub
gs
add
and
add
gs
xchg
adc
add
add
lcall
add
je
cmpsl
sbb
bound
sub
add
and
add
add
popf
shl
add
cwtl
cmp
lret
add
rclb
xchg
leave
into
mov
fidivl
out
cltd
pop
pop
add
add
and
xchg
rcrb
mov
std
in
xchg
dec
dec
add
add
or
add
add
jnp
pop
or
cmp
ret
out
xchg
cmpl
or
test
pop
fs
test
adc
add
xor
add
inc
add
mov
jmp
setae
mov
repnz
cwtl
push
repnz
jae
and
mov
xchg
xchg
and
leave
add
jno
pop
add
jmp
aaa
pop
and
enter
pop
xchg
sbb
dec
add
outsl
inc
add
xchg
jmp
mov
mov
xchg
jno
mov
adc
hlt
dec
in
xorl
pop
cltd
aaa
cmp
rorl
add
xchg
add
jl
scas
pop
in
add
or
mov
add
mov
mov
fmulp
and
add
jno
xchg
insl
lahf
insl
or
int3
es
add
add
les
add
mov
lock
ret
pop
mov
mov
push
mov
clc
jae
mov
mov
mov
mov
xchg
adc
sahf
fdivrl
out
scas
or
inc
add
xchg
mov
repnz
jae
and
xchg
setbe
sub
pop
add
mov
repnz
jae
enter
lds
repnz
icebp
pop
popf
pop
add
jnp
ret
mov
mov
popf
push
sub
sub
cmp
mov
xor
add
ss
adc
add
icebp
lock
xchg
rolb
add
mov
mov
lcall
add
das
stos
mov
pusha
add
repnz
jae
lds
hlt
mov
pop
and
loope
add
mov
sbb
mov
add
rolb
test
push
add
test
scas
iret
movsl
mov
xor
add
aas
dec
add
add
repnz
jae
and
push
push
test
xor
lahf
rolb
push
in
rcll
outsl
loopne
mov
lock
ret
fisubrl
add
add
insl
imul
add
arpl
add
add
je
jne
notb
xchg
or
add
movntps
add
mov
scas
add
dec
xor
add
jbe
adc
addr16
lds
daa
add
addr16
ds
sub
jp
sub
leave
out
push
cli
add
addr16
mov
fmul
jo
bound
cmpb
jecxz
add
add
pop
rolb
push
loopne
jns
add
dec
add
pop
jp
mov
fcmovb
mov
push
add
add
mov
movsl
fidivl
inc
push
adc
xor
mov
dec
add
mov
xor
add
xchg
jmp
mov
test
add
lods
add
push
insb
add
and
push
add
add
lahf
stos
gs
add
jl
cmp
add
gs
pop
add
fsub
push
add
sbb
pop
movsb
ljmp
lcall
out
dec
add
hlt
mov
jmp
pop
fistpl
or
xor
jb
cmp
scas
stos
sub
into
dec
add
or
mov
repnz
jae
fisttpl
mov
stos
or
int
aam
add
xor
add
lcall
xlat
add
xor
mov
sti
loopne
mov
mov
fldcw
add
insb
add
mov
shrb
add
outsb
add
fcomps
xor
add
in
push
add
sub
mov
xchg
clc
shrb
insl
mov
add
and
mov
and
enter
and
add
xor
add
push
add
fildll
lahf
xlat
add
add
dec
add
aas
xor
xchg
fiadds
lock
ret
hlt
xchg
and
add
push
mov
jae
or
call
adc
ret
add
scas
push
les
hlt
std
mov
xchg
jmp
and
lgs
jg
dec
loop
add
pushf
mov
sbb
bound
std
ljmp
push
add
ficomps
ret
repnz
jae
pop
mov
mov
mov
aaa
pminub
xor
sub
add
sub
sbbl
cmp
std
clc
out
loope
add
adc
add
xlat
mov
adc
arpl
add
jnp
add
jecxz
mov
in
jns
outsb
add
out
outsl
adc
add
add
das
mov
dec
mov
in
js
xchg
mov
clc
jae
pop
mov
movaps
loope
lcall
popf
add
cmpb
dec
add
or
add
mov
mov
pop
add
ss
add
sub
xor
add
faddl
or
jmp
sbb
mov
add
push
mov
cltd
mov
add
mov
test
mov
lock
ret
stos
adc
add
add
sbbb
adc
ret
and
add
mov
pop
pop
add
add
lds
xor
add
dec
add
inc
pop
repnz
jae
getsec
xchg
and
xor
xchg
adc
jno
adc
repnz
pusha
repnz
jae
and
mov
call
add
push
dec
sub
xchg
ror
xchg
jmp
mov
fldt
jbe
repz
fldlg2
iret
addr16
fildl
les
and
lret
add
inc
add
icebp
loope
push
add
sub
pusha
add
repnz
jae
or
mov
aaa
bsf
pop
mov
add
out
add
pop
add
dec
pop
add
inc
aaa
lcall
push
data16
rep
add
daa
icebp
add
adc
fyl2x
test
dec
int
xchg
push
add
add
aaa
outsl
add
sbb
jb
inc
pusha
add
add
adc
pop
stos
and
cmp
mov
push
repnz
jae
and
pop
enter
pop
add
add
push
mov
lock
ret
fildl
push
add
pushf
add
adc
std
insb
add
out
lods
jmp
add
push
add
loop
xor
add
fildl
or
xor
movl
or
inc
add
mov
jmp
jmp
adc
add
add
and
push
mov
lock
ret
mov
or
xchg
test
inc
add
push
mov
lock
ret
or
sbb
jne
xchg
jmp
xchg
fcmovne
call
xchg
mov
or
fdivrs
add
add
leave
mov
fistps
xor
ret
stos
or
call
mov
js
lods
add
add
adc
add
add
jmp
sbb
xor
xor
add
push
add
jae
xor
mov
mov
sbb
add
xchg
jmp
mov
pop
hlt
call
scas
clc
fistps
sub
aaa
in
sub
push
add
jnp
push
inc
add
movsb
hlt
inc
mov
repnz
jae
pop
aaa
mov
mov
cwtl
add
add
or
sbb
add
rolb
pop
add
fistpll
testb
jmp
test
mov
mov
add
add
enter
jnp
xchg
cli
outsb
add
je
push
enter
add
lods
hlt
dec
push
add
xor
cmpsl
out
out
jge
dec
stos
dec
add
clc
shl
or
cmp
add
adcl
add
sbb
lock
ret
stos
sbb
mov
mov
mov
add
in
test
test
xchg
hlt
mov
xchg
add
push
add
cmpsb
outsl
adc
add
movl
add
lcall
ljmp
pop
jecxz
scas
jl
push
sub
add
je
inc
add
jne
add
push
repnz
jae
mov
pop
mov
pop
call
ret
sbb
mov
fnstenv
aaa
and
push
jp
leave
dec
pop
pop
aas
movsl
mov
repz
mov
and
dec
stc
mov
repnz
jae
mov
xchg
add
push
add
jge
add
dec
mov
sub
add
mov
hlt
xchg
lgs
daa
lret
out
in
jg
sahf
int
xchg
repnz
jae
xchg
mov
mov
mov
adc
add
xchg
or
mov
ret
xchg
je
push
mov
lock
ret
and
psllw
add
cmpl
mov
stos
dec
sbb
add
rcll
clc
jae
and
mov
cmpsb
cmpl
add
in
popf
xor
add
add
and
dec
jl
cmc
dec
add
dec
lock
add
xchg
push
add
lock
and
mov
push
add
dec
mov
sbb
ljmp
ja
ret
xchg
or
jl
mov
popa
add
add
daa
add
push
push
add
repnz
jae
and
mov
add
in
shrb
mov
repnz
jae
sbb
or
pop
dec
add
int3
mov
add
mov
add
jbe
sbb
fmuls
add
test
cmp
add
xor
inc
add
xchg
ret
hlt
fldt
jmp
push
add
sub
es
and
jp
lcall
ret
xchg
pusha
repnz
jae
stos
lds
and
mov
dec
add
jmp
xor
add
add
lcall
add
call
xchg
jmp
adc
mov
fildl
pop
or
mov
mov
sub
fisttpll
js
leave
lods
js
push
add
jle
xchg
jmp
lds
fadd
jb
cwtl
call
iret
cmpsb
loopne
out
add
xchg
add
out
add
push
add
add
out
push
fsubrl
add
aas
int3
mov
mov
jb
imull
rorb
add
and
lret
fbld
xchg
pusha
add
push
add
popa
add
dec
add
jl
and
jp
and
add
shll
pop
jle
sub
lcall
dec
add
mov
xor
enter
xchg
inc
mov
add
clc
jae
mov
and
xchg
lret
add
movsl
adc
sahf
fs
nop
pop
push
add
ret
jns
push
repnz
jae
xor
pop
enter
out
fwait
cmp
xor
jg
add
add
fcmovne
idivb
cmp
sbb
in
mull
pop
add
sarl
push
pop
add
data16
mov
jne
cmp
cmpsl
test
add
repnz
mov
mov
add
adc
sub
or
mov
sbb
idiv
mov
push
mov
lock
ret
jno
xchg
or
test
add
bound
mov
pop
add
dec
mov
outsl
add
inc
add
add
dec
push
add
add
and
and
add
add
jb
fwait
adc
les
add
mov
push
add
in
add
xor
clc
jae
sbb
call
mov
dec
xchg
jmp
mov
or
mov
mov
lar
pop
lock
shll
jmp
shrb
enter
inc
add
mov
mov
lock
ret
minps
jno
and
add
sbb
pop
filds
xchg
pop
cli
add
sbb
je
cmp
mov
xor
add
xchg
jmp
mov
and
int3
pop
add
sub
add
fidivrl
vshufps
out
sub
data16
add
fdiv
jne
inc
add
add
int
mov
cmp
inc
add
add
add
cwtl
insl
adc
add
int
in
sti
cmp
mov
test
add
add
cmp
inc
add
xchg
ret
fidivl
ljmp
sub
mov
sahf
inc
add
xchg
ret
mov
stos
hlt
rdpmc
and
sbb
jmp
dec
add
sub
mov
add
mov
lahf
test
clc
xchg
mov
lock
ret
mov
bsf
fisubrl
xor
arpl
add
stos
mov
cmp
dec
add
add
mov
sbb
sub
lret
cmp
add
lods
mov
sbb
movb
mov
cmp
mov
call
add
cmp
mov
sti
add
xchg
add
sbb
fld
fistpll
add
in
jl
xlat
enter
pop
add
jae
inc
and
clc
and
add
sub
shll
add
add
inc
add
xor
add
add
cmp
pop
or
inc
add
push
mov
lock
ret
mov
and
iret
add
add
in
popf
or
add
push
sahf
dec
mov
add
add
daa
adc
add
add
call
mov
andl
add
and
pop
and
mov
cmp
popa
inc
pop
mov
add
mov
mov
push
mov
lock
ret
xchg
psrld
mov
outsb
add
aaa
or
hlt
lds
mov
push
rolb
lret
push
ret
outsl
push
add
test
pop
mov
fldenv
inc
add
inc
lods
in
das
inc
add
lea
gs
cmpsl
aaa
pop
add
jbe
or
sub
inc
mov
repnz
jae
mov
pop
and
aaa
lds
jbe
push
mov
lock
ret
or
mov
and
nop
pushf
mov
cmp
add
enter
xchg
dec
mov
adc
andl
xchg
popa
add
mov
lock
ret
and
loope
add
cmp
push
mov
pop
or
cwtl
push
jnp
add
subl
js
enter
and
push
push
add
sub
add
xchg
jmp
fdivl
call
pop
mov
lahf
pusha
add
add
and
add
add
mov
into
rcl
aad
add
adc
ret
xor
add
adc
add
ret
movsb
iret
sbb
jl
in
dec
push
add
out
xchg
sbb
sbb
cmp
mov
pop
add
pop
add
sbb
mov
push
mov
lock
ret
mov
and
sub
sahf
add
sbb
cmp
negb
int
leave
sbb
add
xor
repnz
add
outsl
add
dec
outsl
rolb
jae
xchg
mov
loope
outsl
mov
add
add
repnz
jae
test
xchg
and
add
movsl
lret
add
mov
add
jmp
mov
adc
add
mov
xchg
lds
add
push
add
add
jmp
fstpt
xchg
mov
mov
mov
test
cmp
dec
add
cld
add
adc
add
lods
jb
xchg
or
add
fmul
jns
adc
add
lock
and
cmp
dec
in
pop
add
fmuls
mov
into
icebp
xchg
bound
push
add
jbe
inc
inc
test
xchg
jmp
pop
lgs
enter
pusha
repnz
jae
stos
xor
hlt
mov
mov
mov
pop
jno
add
add
add
mov
mov
xchg
jmp
test
mov
sub
pusha
add
add
adc
sub
adc
add
pop
add
mov
or
repnz
jae
mov
test
and
adcl
rolb
or
inc
or
mov
cmpsb
lods
loopne
clc
decb
aaa
and
daa
add
repz
jp
iret
lcall
movsl
mov
pushf
pop
add
adc
test
clc
or
dec
add
add
mov
sub
pop
cmp
cli
andb
xchg
imull
add
push
and
clc
jae
mov
and
mov
add
add
daa
mov
sub
cwtl
scas
cmc
xchg
cmp
fwait
jns
add
add
add
add
or
add
jo
mov
test
or
dec
loope
xchg
mov
add
addb
mov
add
mov
push
mov
pop
add
andl
movsl
loop
push
add
add
jl
enter
add
roll
add
add
add
sub
sbb
add
xor
add
les
aaa
add
add
inc
add
and
int3
pop
into
push
sahf
add
mov
iret
out
insl
xor
add
add
add
mov
xchg
ret
enter
popl
cmc
fisttpll
pop
jle
loopne
mov
mov
insb
add
mov
add
add
test
clc
jae
hlt
mov
mov
mov
xchg
jns
add
and
inc
add
mov
lret
mov
aam
add
xchg
jmp
xchg
mov
aaa
and
or
and
and
add
lock
and
sbb
dec
fdivs
add
jle
mov
jmp
stos
mov
mov
and
dec
std
jne
test
ret
add
or
shl
add
push
cmp
jecxz
sub
pop
add
push
xchg
pop
int
push
add
sahf
call
add
add
push
add
ja
stc
mov
repnz
jae
lgs
enter
mov
lret
add
pop
add
pop
lahf
std
jnp
cmp
sub
out
or
add
or
mov
sbb
gs
cmp
add
add
sahf
mov
inc
add
in
aad
add
les
lock
push
add
xorl
inc
add
add
lds
fmuls
add
sbb
add
adc
ljmp
sub
lcall
add
cli
out
cli
push
add
add
test
repz
cmp
mov
add
rcrb
pop
add
int3
in
out
fstpt
add
add
les
add
cmp
add
add
hlt
add
cli
add
xchg
mov
or
sbb
fcom
sbb
inc
mov
pop
add
out
in
add
int3
lods
js
imul
xchg
add
add
je
sub
lret
add
add
lock
fisubrs
add
add
pop
add
outsl
pop
add
cmpb
cmp
mov
xchg
cltd
adc
inc
loopne
cmp
out
shlb
jecxz
sub
sahf
aas
adc
add
xchg
cmp
lods
dec
add
flds
icebp
add
sahf
cmovae
add
push
add
xor
add
shl
fwait
outsl
loopne
out
fistpll
add
out
or
pusha
add
xlat
push
or
and
add
add
rcrl
int3
orb
and
add
xlat
fistps
add
dec
jecxz
and
xlat
jg
xor
add
cmp
jns
hlt
adc
inc
add
push
mov
lock
ret
jno
mov
pop
mov
movsl
lea
push
add
sbb
cltd
loope
fimull
fldl
mov
adc
addl
add
andl
into
and
add
add
loop
push
add
sub
mov
jl
inc
add
pushf
pop
testl
add
lret
push
imul
adc
sub
pop
add
xor
cmp
push
add
dec
mov
add
xor
loope
or
movsb
daa
int
cmpsb
sub
add
xchg
dec
add
add
sbb
sub
stos
ja
jmp
mov
sub
mov
mov
arpl
jp
xchg
stos
push
dec
xor
add
jmp
add
in
push
add
xor
dec
ja
dec
add
pop
add
add
les
mov
xchg
mov
repnz
jae
stos
fcmovnu
xchg
pop
call
mov
adcl
and
mov
aad
imul
add
lret
repz
cmpsb
imul
inc
add
dec
stos
inc
add
jbe
andl
jno
xchg
test
bound
add
pop
mov
aas
fs
xlat
mov
loopne
mov
loop
repnz
jae
mov
ja
fs
cmpsl
pop
dec
add
add
rorb
leave
push
add
call
cmp
push
in
shrb
add
flds
mov
adc
addl
loopne
add
xchg
ret
and
pop
mov
insl
pop
add
push
add
js
jl
cmp
mov
add
clc
jae
stos
lgs
lgs
add
add
data16
push
into
imul
inc
adc
shlb
incl
negl
mov
xchg
adc
add
add
jmp
out
add
lds
add
in
iret
xor
add
cwtl
into
xor
add
mull
add
xchg
aas
call
or
jbe
fs
stos
push
add
add
repnz
jae
mov
fidivl
add
and
pop
push
mov
lock
ret
xor
mov
fisubrl
ja
bound
jns
add
out
add
add
add
nop
add
add
dec
pop
dec
jg
fsubr
dec
jae
dec
jo
loopne
aad
jg
mov
adc
add
inc
add
push
add
jno
cli
push
iret
push
add
mov
in
push
add
test
int
rolb
xor
add
mov
clc
mov
pop
add
xor
add
call
test
mov
adc
in
add
in
out
add
push
adc
push
add
add
sarb
add
movsb
movsl
negb
pop
add
dec
adcl
lea
push
in
lahf
push
add
mov
add
add
stos
lods
imul
jnp
and
lods
mov
rcll
add
add
add
push
add
mov
roll
mov
xchg
add
push
mov
lock
ret
mov
stos
pop
xchg
or
or
js
xchg
imul
push
add
adc
add
popa
jno
gs
add
add
add
dec
stos
ss
and
add
push
mov
lock
ret
lds
and
int
jns
out
cli
cmpb
int3
int3
int3
add
outsl
add
push
fadds
add
je
add
in
add
xchg
dec
add
jno
add
insl
push
add
add
inc
cmp
sub
xor
add
sub
cmpsl
outsb
add
dec
js
loop
scas
add
add
bound
sub
and
add
add
testl
mov
and
add
test
add
pop
add
xchg
and
push
mov
lock
ret
hlt
mov
mov
hlt
cmp
xchg
push
mov
lock
ret
pop
and
sahf
cmp
lock
repnz
jae
fcomi
aaa
mov
aaa
and
mov
aaa
dec
jge
add
or
add
jmp
int
dec
add
or
push
add
ret
icebp
mov
xlat
stos
cmp
mov
pop
add
ds
popa
or
and
adc
mov
add
pop
add
inc
push
repnz
jae
call
mov
mov
add
cmp
pop
add
incb
add
and
scas
add
dec
aad
add
arpl
xor
add
dec
inc
add
push
pop
add
add
jmp
pop
xchg
push
rolb
sub
lea
fists
or
mov
mov
add
add
add
clc
jae
mov
mov
adc
out
data16
pop
push
add
ja
add
xchg
mov
add
inc
mov
or
add
or
mov
add
add
test
ja
push
lahf
add
add
pop
dec
add
popf
add
nop
mov
xor
add
fiadds
sub
das
sldt
pop
mov
pop
pop
mov
xor
and
rcrl
add
add
and
pushf
push
lea
cwtl
push
push
add
add
and
popf
bound
paddsb
pop
add
xchg
xlat
cmp
arpl
add
xchg
clc
jae
mov
mov
sbb
or
add
add
jle
sbb
clc
jae
xor
jno
mov
call
adc
mov
sbb
mov
lcall
add
movsb
jbe
jle
sarb
or
test
add
jmp
pushf
enter
and
add
jne
pop
movb
pop
loopne
or
mov
loopne
mov
ficoml
not
mov
add
add
add
inc
call
repnz
jae
fcmovu
stos
lgs
sub
imul
popf
shlb
add
add
fwait
outsl
inc
mov
repz
jae
and
sarb
push
mov
das
fiaddl
cld
push
add
xor
into
out
imul
or
add
arpl
add
enter
or
adc
add
aas
mov
push
add
push
add
adc
out
or
lods
inc
add
dec
jb
loope
rolb
clc
jae
mov
enter
test
lock
add
add
test
repz
xchg
repnz
jae
adc
test
xchg
and
push
add
sub
add
cltd
mov
loope
test
lods
repnz
jae
mov
sbb
mov
xchg
mov
flds
mov
jmp
std
popf
aam
xchg
pop
add
flds
dec
add
sbb
pusha
add
inc
add
and
mov
mov
mov
add
ss
add
cld
int
adc
add
push
popa
push
add
lret
add
adc
add
scas
pop
cltd
pop
clc
cmp
add
iret
and
add
cli
or
insb
add
mov
add
lret
or
out
add
mov
add
repnz
jae
call
aaa
xchg
xor
arpl
pop
dec
add
jl
sbb
jle
jbe
jbe
pop
add
js
xchg
test
add
jne
repnz
jae
call
pop
testb
jecxz
fidivl
stos
or
or
mov
push
add
notb
mov
mov
fcomip
fmul
mov
and
test
hlt
push
add
add
sbb
pushl
repnz
jae
xchg
mov
mov
sbb
fimuls
mov
pop
scas
or
pushf
add
clc
jae
call
and
test
inc
inc
add
add
std
pushf
insb
add
cmp
popf
sub
out
push
add
pushf
add
inc
jp
cmp
xchg
xchg
jmp
mov
shr
xor
or
mov
out
sti
sbbl
inc
test
push
add
xor
aaa
mov
movsb
xor
ss
add
repz
and
add
pusha
add
inc
add
sub
or
jnp
add
and
shufps
fcmovnu
call
repz
jmp
adc
fdivl
xor
add
mov
sbb
add
dec
push
mov
sahf
repnz
add
add
out
jg
fisttpll
leave
inc
pop
shlb
xor
xchg
add
inc
insl
mov
movsl
std
das
push
add
mov
add
stc
add
push
mov
lock
ret
aaa
lgs
pop
psubsw
out
je
pop
jecxz
xchg
mov
add
clc
jae
xchg
pop
mov
add
mov
add
push
sbb
pop
add
shr
repnz
jae
test
aaa
xchg
dec
add
mov
cmp
xlat
nop
insl
loope
ljmp
pop
xchg
jns
pushf
xchg
push
add
mov
daa
stc
add
hlt
mov
pushf
sbb
pop
filds
mov
jmp
fcmovb
mov
rorb
mov
mov
call
xor
add
jno
inc
add
add
add
mov
outsl
add
addr16
adc
add
sti
and
dec
dec
xchg
rol
push
scas
and
add
add
add
add
sbb
fnsave
ret
mov
add
cmc
sbb
xchg
cltd
inc
add
add
mov
jg
mov
mov
add
cmp
add
flds
repz
cli
add
pushl
inc
push
push
mov
lock
ret
and
xchg
lds
ret
add
add
call
jae
stos
rcrb
aaa
mov
test
add
add
mov
add
ret
repnz
jae
cmpxchg
test
enter
or
add
mov
mov
add
testl
inc
add
inc
int3
add
mov
jmp
xchg
test
mov
fcmovnu
bswap
lahf
int3
or
rolb
bound
cmp
jns
push
add
add
stos
add
add
add
sbbl
jmp
add
idivb
ret
in
jb
in
xor
mov
lock
add
or
aad
jmp
mov
xchg
scas
enter
jae
add
mov
or
xor
add
jle
cmc
adc
add
jne
icebp
add
add
mull
outsl
add
add
sbb
push
dec
andl
pop
rclb
add
add
popa
add
stos
mov
add
add
imul
adcl
rdpmc
stos
mov
aaa
mov
mov
mov
add
and
fidivl
scas
add
loop
std
ljmp
inc
and
add
add
add
loop
inc
mov
aam
add
inc
insl
mov
add
add
aam
cltd
mov
dec
add
imul
out
add
adc
add
add
add
stos
and
adc
jno
mov
jmp
andl
add
aaa
mov
xchg
xchg
xchg
mov
mov
sub
shlb
push
cs
fidivs
jl
dec
add
fdivr
add
cmp
mov
repnz
jae
mov
stos
call
testb
add
xchg
mov
test
mov
sahf
add
sbb
add
clc
jae
xchg
xchg
and
cwtl
sub
cwtl
ss
add
popl
cmp
xor
dec
xor
in
test
inc
add
sub
mov
mov
xchg
call
xchg
test
ret
cli
cmp
add
jb
fcomi
jp
popf
sub
adc
xor
add
xor
test
add
pop
xchg
lea
xchg
add
adc
dec
add
cmp
ret
out
add
imul
and
mov
add
add
std
ss
sub
pusha
add
stos
add
push
and
xor
stos
lods
add
add
add
push
loopne
test
pop
add
repz
add
stos
mov
push
add
jge
pop
lds
fnsave
inc
add
ret
add
aam
insb
add
fidivl
add
mov
dec
popf
sub
cmc
int
add
sti
stos
push
aaa
cmc
add
loope
add
add
dec
add
add
cmpsb
xchg
clc
jae
sbb
jno
bswap
and
xor
sbb
dec
mov
lods
add
sti
inc
adc
adc
mov
pop
push
and
imul
add
aaa
test
xchg
nop
add
add
adc
in
add
xchg
mov
xchg
jmp
xor
pop
xchg
ficompl
jno
sbb
and
sub
arpl
mov
dec
imul
adcl
minps
shlb
jne
out
add
roll
repnz
lcall
add
repnz
jae
and
mov
mov
jno
in
pop
adc
cmp
mov
xchg
jno
or
mov
jp
enter
fcomps
js
aam
add
xor
out
xchg
jmp
add
filds
hlt
punpckhbw
adc
outsl
add
aas
cmpsb
mov
insl
stos
fldl
sub
mov
add
jb
xlat
xchg
sbb
pushf
jnp
add
add
es
out
lods
ds
mov
add
repnz
jae
or
ficompl
enter
add
sbb
dec
add
add
xor
movsl
inc
add
je
sub
decl
mov
aaa
xor
add
inc
add
mov
push
mov
lock
ret
enter
add
add
clc
jb
xchg
js
iret
pop
add
mov
xchg
jmp
xchg
mov
enter
hlt
pop
pop
mov
clc
jae
test
mov
test
in
clc
ljmp
cmc
push
push
add
push
pushf
add
or
cli
adc
fcmovb
cmpl
in
outsb
add
cmp
jb
repz
lds
adc
add
adc
add
in
xor
add
jb
and
add
pop
add
mulb
add
in
inc
add
repz
fldt
flds
dec
add
dec
add
xor
add
add
add
shll
add
gs
pop
add
dec
cltd
filds
rcrl
pop
dec
add
adc
insb
add
rorl
mov
pop
add
mov
lea
add
pop
jae
insb
add
fbld
sub
mov
dec
sub
clc
jae
mov
pop
xchg
mov
xor
sub
mov
add
bound
mov
mov
adc
add
mov
and
jmp
and
pop
addr16
add
loop
push
add
dec
std
inc
add
xchg
ret
xchg
test
mov
dec
add
adc
add
je
xchg
jmp
call
xchg
add
mov
das
mov
xchg
mov
repnz
jae
lds
lods
xchg
mov
lock
ret
mov
test
sete
fcompp
dec
add
clc
jae
test
fmull
or
aas
mov
ret
xor
add
pop
add
clc
jae
mov
or
xchg
fidivl
dec
in
add
add
or
push
add
add
int3
inc
add
cmpsl
push
and
add
pop
xchg
add
ja
mov
out
aad
push
add
add
inc
add
push
mov
movl
mov
xchg
repnz
jae
mov
aaa
lds
lahf
add
xchg
add
loope
or
sbb
mov
adc
clc
jae
sarb
call
cmc
bound
fidivrl
xchg
lods
and
add
jl
add
cli
ja
mov
addl
mov
xchg
jmp
or
stos
xchg
and
mov
add
cmp
iret
pop
add
cld
push
add
cmp
fadd
mov
jl
sub
inc
add
loope
add
lock
enter
mov
neg
push
clc
jae
call
test
stc
add
repnz
jae
xchg
jno
mov
adc
add
add
xchg
out
out
add
xchg
ret
and
xor
adc
add
jae
or
movb
xor
add
scas
scas
cld
jge
add
and
sahf
sub
mov
clc
inc
mov
add
in
push
mov
cwtl
enter
aad
add
add
xlat
stc
decl
repnz
jae
aaa
mov
sbb
aaa
pand
pop
push
add
lea
clc
jae
jno
xchg
in
pushf
scas
pushf
cli
push
add
testb
add
xchg
jmp
and
mov
pop
xchg
das
mov
jbe
mov
push
jecxz
add
add
lcall
movsb
mov
adc
dec
add
add
adc
add
add
add
jb
inc
add
add
sbb
add
cmp
and
add
iret
daa
ret
add
sbb
add
mov
paddusb
hlt
pop
out
jnp
jecxz
add
add
ss
pop
repnz
jae
mov
xchg
xchg
rol
mov
fadd
enter
repnz
jae
lgs
fcmovb
mov
sub
or
arpl
leave
xchg
jmp
mov
mov
test
xor
mov
dec
fucom
sahf
arpl
pop
lods
jle
add
sub
cmp
iret
daa
jbe
jno
lock
add
add
add
ljmp
xchg
add
ss
add
mov
dec
add
jbe
idiv
jp
dec
add
outsl
sbb
fiaddl
cld
and
add
test
xchg
inc
add
add
mov
lock
ret
mov
rcr
xchg
hlt
sub
dec
addr16
out
dec
add
arpl
xlat
and
add
adc
loopne
roll
sahf
add
ljmp
inc
cmp
pop
push
andl
mov
sbbb
add
xchg
sub
inc
add
andl
add
out
addr16
or
nop
or
packsswb
add
add
pop
add
or
cltd
jg
jecxz
stc
jne
repnz
jae
mov
adc
pop
fildl
jnp
and
add
fcom
loope
jge
stos
out
jecxz
add
std
negl
mov
imul
je
cmc
gs
add
add
mov
repnz
jae
sbb
mov
pop
pop
push
xor
add
push
add
cmc
ja
lcall
daa
in
lea
add
test
data16
mov
push
mov
lock
ret
sbb
jno
add
pop
add
push
add
inc
add
aas
shlb
pop
xor
iret
dec
push
stc
add
pop
testl
add
push
mov
or
xchg
test
add
push
repnz
jae
getsec
fcoml
and
mov
rolb
rcrl
pushf
aaa
add
sub
in
xor
mov
add
or
mov
notl
fldt
lds
add
push
daa
and
mov
inc
add
ret
add
xchg
jmp
sbb
call
adc
and
iret
add
loope
cwtl
cmc
push
imul
aaa
mov
jmp
aas
ljmp
add
add
fstpt
mov
mull
add
xor
dec
cmp
jmp
mov
mov
mov
stos
aad
movsb
je
dec
add
add
add
clc
dec
add
add
add
mov
xlat
or
pop
jno
sub
add
dec
add
int3
aaa
movl
sbb
aaa
dec
add
scas
je
jnp
repz
jb
inc
add
add
xchg
push
xchg
scas
and
add
nop
cmp
str
xchg
jmp
lgs
mov
xchg
shrb
mov
je
repnz
jae
fmull
pop
aaa
jno
cmc
imul
sub
and
ret
cltd
and
hlt
out
pop
insl
pop
push
add
clc
jae
xchg
call
ficoml
inc
scas
xchg
daa
xor
mov
jb
inc
add
push
xchg
mov
add
call
movsb
outsb
add
cmp
push
xor
add
test
sbb
add
add
mov
mov
or
add
adc
cmp
mov
enter
xor
lds
call
add
lods
gs
add
sub
xchg
jae
xchg
jno
fcoml
sbb
cmpb
into
ds
push
add
inc
lret
pop
add
sbb
insb
add
mov
gs
inc
scas
xor
jge
push
mov
pop
incl
add
test
or
pop
pusha
add
stos
lret
dec
add
add
clc
jae
and
mov
xchg
xchg
pop
jbe
jae
dec
add
pop
push
add
add
mov
add
mov
test
add
in
out
loop
push
xor
xchg
je
jbe
cmp
jmp
shlb
mov
imul
loopne
or
shrb
xchg
bound
adc
je
mov
add
add
jo
cmp
dec
add
jns
add
add
add
std
pop
notl
sbb
movsb
pusha
add
add
cmpsl
nop
sbb
bound
leave
xor
adc
add
dec
add
dec
dec
pop
repz
aad
ficoml
xchg
add
fsub
popf
xchg
adc
add
repnz
jae
mov
mov
mov
and
add
xor
in
ror
loopw
add
cmp
daa
adc
or
shl
mov
pop
add
enter
mov
movsl
mov
add
mov
push
movsb
in
data16
out
mov
xor
add
xchg
jmp
mov
fisttpl
vmulps
add
mov
addr16
cs
add
add
repnz
jae
enter
aaa
test
or
fdiv
les
push
insb
add
mov
sbb
bnd
pop
fmull
jb
aam
push
pop
add
repnz
jae
lds
pop
or
pop
rorb
mov
xor
add
mov
or
add
xchg
cmpsb
mov
adcl
add
push
sub
fidivrl
stos
insl
sahf
xchg
add
repnz
jae
test
or
add
mov
add
cmc
icebp
cmp
dec
pop
add
add
sahf
out
fistl
jle
mov
add
xor
add
add
xor
cmp
inc
add
int
shrb
lock
dec
add
fstps
call
in
add
cmc
aad
mov
add
out
test
adc
test
pop
and
add
push
add
cmc
adc
movsl
pop
cwtl
adc
add
pop
and
add
sbb
pop
push
add
add
addl
push
add
push
add
add
rorl
jae
adc
or
mov
out
add
loopne
loop
popf
rolb
xor
add
inc
in
clc
jae
stos
and
hlt
mov
jmp
add
out
push
xchg
jmp
enter
rorb
or
hlt
mov
enter
test
std
add
add
xchg
pop
fdivs
or
imul
add
pushf
test
dec
cmp
push
add
mov
add
xchg
in
add
push
scas
cmp
jns
add
and
adc
bound
cmp
mov
clc
cmp
and
pop
aas
out
add
add
add
xor
inc
int3
int3
int3
push
ret
imul
add
add
xor
inc
dec
mov
mov
add
loopne
faddl
js
mov
pop
push
add
push
sub
xchg
cmp
jg
inc
inc
add
add
lret
subb
fwait
sub
es
shlb
aaa
add
mov
mov
add
add
jbe
push
add
mov
repnz
jae
jno
xchg
test
movb
add
pusha
add
mov
adc
add
mov
mov
add
jecxz
pop
sub
lret
mov
les
jb
call
push
jecxz
rclb
lret
daa
xor
inc
popf
jp
fisttpll
pushf
xchg
sub
lds
add
jns
xchg
jp
divl
xchg
clc
jae
aaa
mov
call
and
and
cmp
lods
insb
add
cmp
aaa
outsb
add
sbb
call
mov
xchg
mov
add
xor
add
lds
xor
add
ss
add
out
add
lea
iret
push
add
daa
ljmp
clc
jae
add
neg
jnp
das
dec
add
xorl
add
or
icebp
add
and
xor
out
add
mov
or
and
add
pop
or
jo
cmp
add
add
sbb
inc
add
xchg
ret
mov
xor
adc
jo
mov
add
xor
add
iret
add
add
inc
add
mov
int3
int3
add
ret
mov
mov
add
add
scas
es
add
mov
add
or
or
pop
fcmovnb
das
inc
add
mov
lahf
add
imul
add
sahf
ss
adc
add
xchg
push
fidivrs
inc
add
dec
add
leave
add
leave
add
add
jns
inc
add
dec
inc
xchg
push
in
clc
jae
and
mov
fsubr
popa
and
inc
add
out
add
aaa
or
sbb
int3
shll
nop
add
jecxz
das
notl
in
add
add
sti
pop
push
clc
jae
xchg
jno
mov
test
xchg
push
add
cmp
js
cmpsb
and
add
inc
add
mov
add
mov
mov
data16
adc
add
inc
add
mov
repnz
jae
mov
mov
mov
mov
repnz
jae
pop
mov
mov
test
mov
aam
mov
jge
add
add
add
and
add
or
mov
hlt
push
add
adc
add
add
push
add
add
xor
repnz
jo
cmp
cmp
inc
add
stc
xor
push
mov
lock
ret
sbb
mov
adc
add
icebp
add
add
add
jae
pop
and
or
xor
minps
jnp
push
add
jmp
adc
dec
lcall
leave
fldt
ljmp
sub
xlat
add
daa
pop
add
bound
jbe
ds
push
mov
push
add
scas
in
data16
dec
add
inc
push
mov
lock
ret
mov
mov
rorl
nop
cmp
push
push
add
jl
sub
sbb
js
loope
sub
aaa
xchg
add
aas
jg
mov
push
add
stc
push
xchg
jmp
rorb
mov
mov
mov
mov
subb
xchg
in
int3
inc
mov
jno
mov
pmaxsw
add
into
in
add
mov
mov
pop
in
dec
ds
pop
imul
add
pop
add
lea
gs
add
add
push
add
jmp
roll
hlt
add
add
test
add
cmpb
mov
std
mov
cltd
jne
scas
cmp
jns
fimuls
lds
aas
inc
add
add
mov
call
xchg
mov
and
and
mov
or
push
add
int
or
add
xchg
sbb
dec
notl
mov
xchg
jno
add
push
popf
add
xchg
mov
sub
into
pusha
add
mov
es
jl
stc
add
xchg
jmp
call
mov
mov
pop
add
ss
add
xor
xor
sbb
jae
sub
add
add
sti
adc
add
xchg
out
jl
icebp
inc
add
or
insb
add
arpl
cmp
mov
cmc
aas
cmpsl
xchg
push
push
mov
lock
ret
mov
mov
mov
adc
add
add
add
adc
enter
ror
cmp
fwait
lahf
lods
shll
into
cmp
dec
add
add
push
testb
cmp
daa
roll
jbe
adc
or
daa
insb
add
mov
lock
ret
and
fmull
mov
and
add
lcall
jae
pop
call
xor
aaa
dec
data16
loope
pusha
add
daa
lock
add
add
clts
and
push
mov
mov
lock
ret
stos
mov
hlt
mov
enter
xchg
pop
jmp
sub
adcb
sbb
dec
add
mov
add
mov
push
add
inc
add
into
lods
add
mov
add
test
insb
add
add
mov
add
stos
mov
add
add
fldl2t
adc
jmp
test
add
mov
xchg
pop
add
add
ss
add
les
mov
mov
cwtl
imul
add
inc
add
jecxz
lock
imul
enter
add
das
pop
mov
in
adc
add
add
and
adcl
add
and
add
stos
xor
add
mov
dec
add
push
add
pop
cmp
cli
and
dec
or
into
cltd
addr16
or
lea
add
mov
pop
add
aad
cmp
or
lahf
xor
add
into
fdivr
fsubl
test
xchg
stos
adc
fimull
cmc
push
add
dec
add
add
add
xor
fadds
cltd
push
add
xchg
fimull
jno
mov
pop
fimull
pop
sbb
ret
testb
or
test
lds
loope
push
fstps
xchg
int3
int3
add
xchg
add
inc
push
inc
arpl
sub
xlat
add
cmp
jle
jns
xchg
pop
repnz
jae
mov
pop
aaa
test
fsubr
inc
test
add
xlat
imul
add
mov
adc
add
push
add
dec
add
cli
xlat
jnp
inc
movsb
push
xchg
and
push
mov
lock
ret
fisubl
mov
or
test
jle
cmp
divb
push
add
xchg
xchg
rcll
add
int3
out
cmc
js
cmc
fimull
add
pop
add
jmp
hlt
or
pop
hlt
mov
setbe
das
add
add
inc
mov
add
cmp
std
push
add
das
add
pop
add
adcl
jge
sub
adc
enter
lods
sbb
mov
add
adc
sbb
xlat
sub
push
add
fcmovbe
xor
add
add
jae
fistl
test
scas
fbld
jmp
add
add
or
shll
inc
add
push
add
and
jl
roll
clc
jae
jno
pop
fmull
pop
xor
pushf
push
add
cmp
push
add
iret
fidivrl
add
jp
jo
iret
fnstsw
and
add
push
out
xchg
call
xchg
jmp
or
and
mov
mov
xchg
andl
orb
test
je
aam
or
mov
dec
xchg
jmp
or
mov
mov
std
sub
inc
add
mov
adc
add
add
sahf
cltd
mov
xor
add
nop
jp
xchg
jl
loope
jns
cmpsl
mov
lcall
add
dec
add
cmp
popa
pop
in
add
mov
loopne
outsl
imul
mov
mov
or
aam
jne
pop
add
add
out
dec
call
push
add
adc
adc
add
ss
add
notb
hlt
mov
mov
dec
or
add
test
mov
xchg
mov
push
add
mov
test
mov
sbb
and
add
bound
nop
pop
add
add
movl
add
xorl
mov
mov
add
add
xchg
ficoml
cmc
add
cmc
add
cmp
push
add
sbb
sub
cmp
push
roll
add
add
jne
add
mov
pop
fiadds
enter
add
repnz
or
inc
iret
sub
adc
add
add
test
test
bound
pop
cmp
sub
push
xor
xor
add
sub
in
lds
add
scas
out
push
mov
movsl
sub
add
pop
add
cmpsl
repnz
ret
add
cmp
xchg
out
ss
add
mov
add
add
cmp
test
incl
call
or
inc
negb
mov
mov
faddl
add
sti
mov
ss
add
jle
shrl
and
frstor
adc
inc
add
mov
rolb
fcomi
test
adc
aaa
lds
mov
daa
fldl
idiv
enter
adc
jmp
lgs
and
fisttps
add
add
lods
in
mov
adc
stos
add
mov
push
add
add
add
sbb
add
cltd
add
and
dec
mov
dec
frstor
in
add
or
pop
pop
out
jnp
cmp
jb
ror
adc
add
push
add
add
add
and
add
jbe
ret
sbb
mov
faddl
clc
jae
lds
and
test
add
add
daa
mov
mov
cmc
imul
pop
dec
ret
pop
add
mov
mov
int3
int3
add
imul
call
add
ja
pop
add
jl
js
xor
add
jb
mov
xchg
inc
xor
xchg
jmp
hlt
enter
pop
and
or
add
mov
push
add
xchg
imul
sub
sbbb
ljmp
xchg
repnz
jae
test
or
xor
imul
aad
pop
add
jp
or
jg
add
jle
xchg
lcall
stos
push
add
push
pop
add
flds
out
js
xor
xchg
add
cld
adc
xor
call
add
cmp
adc
add
mov
cmpsl
dec
scas
clc
fists
fstpt
add
in
add
sahf
jp
enter
inc
add
jno
jle
push
adc
add
push
add
stos
xor
add
add
lret
psubsb
std
mov
faddl
loopne
mov
add
pop
add
sahf
mov
inc
add
xchg
ret
mov
and
inc
add
lods
add
push
repnz
jae
mov
mov
pop
icebp
fdivr
stos
enter
in
sar
dec
add
add
and
cmp
sub
pop
add
shrb
jge
and
add
dec
add
add
popf
add
roll
out
dec
add
inc
push
repnz
jae
ficoml
stos
enter
nop
fistpl
add
je
sbb
and
add
icebp
push
add
test
adc
rcrl
xchg
dec
add
test
add
jmp
hlt
and
sbb
enter
push
mov
lock
ret
adc
mov
pop
mov
mov
rclb
add
into
outsl
aaa
mov
aad
mov
les
and
fisubl
test
mov
sub
pop
add
in
push
add
dec
xchg
xor
add
add
addl
jg
add
lret
pop
add
sbb
aad
out
dec
add
add
xchg
mov
loope
add
js
or
xor
repnz
jae
sarb
pop
pop
push
add
mov
xor
add
adc
add
add
sahf
xor
cwtl
popa
or
add
cli
js
inc
outsb
add
pop
add
inc
add
add
sub
jnp
inc
nop
divb
cwtl
xor
add
add
scas
sahf
mov
aad
xchg
jbe
mov
and
out
dec
add
pusha
add
add
jno
and
add
xchg
xchg
jmp
mov
mov
mov
clc
add
mov
jnp
xor
add
fisubl
out
add
fwait
add
aaa
filds
fnstsw
ret
xchg
jbe
ljmp
mov
sub
pop
stos
add
aam
xor
add
lds
xor
push
add
mov
add
or
mov
ja
jnp
aas
add
lea
inc
sub
pop
add
test
mov
add
add
sahf
mov
stos
test
add
jl
cmp
adc
dec
pusha
add
mov
loop
push
mov
lock
ret
test
mov
repnz
jae
jno
pop
mov
test
std
aam
xchg
cmp
inc
test
or
repnz
sbb
addl
cmpsb
add
xchg
lock
mov
push
stc
call
xchg
jmp
jno
mov
mov
call
add
add
mov
out
add
sbb
mov
sbb
iret
dec
add
cli
add
ret
dec
add
xchg
dec
add
mov
add
add
add
cmp
pop
add
adc
add
sub
fcomps
or
xchg
add
repnz
jae
xor
test
lds
dec
stos
lods
bound
in
stos
cli
sbb
xchg
mov
inc
lock
sahf
dec
enter
add
divl
mov
adc
add
mov
pusha
add
enter
jb
push
add
mov
mov
lock
ret
mov
lds
jg
add
cld
ficoml
int
lds
mov
dec
or
sbb
outsb
add
push
add
pop
repz
mov
mov
lock
ret
lgs
xor
add
add
fnsave
adc
cmc
lret
sbb
cs
mov
xchg
push
add
pop
sbb
or
or
jno
jno
cwtl
mov
sahf
ret
addr16
sbb
add
repnz
jae
shlb
or
scas
push
add
or
mov
xor
add
sbb
push
xchg
add
add
filds
mul
fcompl
push
jg
cmp
sahf
mov
aas
loopne
lock
sbb
pop
jmp
xchg
lea
cmpsl
mov
add
lret
daa
testb
dec
add
add
or
ss
add
bound
jo
sub
cmp
cmp
sbb
lods
pop
add
add
mov
add
add
sub
int
lret
add
jns
add
fdivrl
mov
les
sbb
adc
add
lea
add
add
data16
jmp
xchg
jmp
hlt
mov
mov
fdivl
addb
pushf
pop
pop
cmp
shll
mov
cs
pop
add
push
outsl
jae
mov
lock
ret
mov
add
sbb
and
add
pushf
jmp
push
add
loopne
out
sub
fs
pop
inc
add
add
add
add
insb
add
lcall
movsb
push
fldl
cmp
xor
add
jbe
jecxz
test
aas
xchg
push
add
add
scas
inc
add
scas
aam
inc
mov
mov
mov
fsubr
call
mov
add
arpl
es
fwait
pusha
add
sub
lcall
hlt
mov
mov
mov
or
or
inc
push
push
mov
lock
ret
xor
test
aaa
mull
out
xor
add
dec
insb
add
add
pushf
outsl
mov
jb
xor
dec
add
inc
add
movsl
sub
leave
push
add
sub
dec
inc
add
sub
cmc
scas
mov
add
add
and
mov
enter
add
sbb
loope
inc
push
repnz
jae
xchg
mov
mov
daa
popf
add
sub
push
add
ret
xor
add
pop
out
cli
dec
add
add
xchg
xor
cmp
xchg
jmp
adc
mov
aaa
fdivl
sub
xchg
movsl
icebp
or
js
xchg
repz
cmp
add
pushf
in
sahf
xor
dec
add
dec
mov
mov
and
add
sbb
adc
add
inc
add
add
sub
dec
sub
add
fcmovu
aaa
sbb
or
and
clc
jae
pop
lds
add
ret
add
pop
add
add
jmp
mov
mov
jno
mov
add
call
mov
push
fwait
mov
add
and
add
cmp
es
add
add
add
fistps
jg
in
leave
lods
sbb
dec
es
add
and
insb
add
rorb
add
xchg
sub
cmp
mov
add
stos
add
add
divl
add
mov
mov
sbb
into
jne
lahf
add
cmp
xchg
add
mov
sub
mov
push
testl
testb
filds
adc
fildl
pop
add
add
push
push
add
add
das
mov
mov
mov
inc
add
or
pop
pop
add
add
add
leave
xor
jp
add
insb
add
add
popa
ja
push
add
add
bound
fdivrs
jl
push
add
in
repnz
jae
jno
mov
add
in
add
add
add
add
cmp
dec
add
loopne
aad
flds
repz
add
ror
out
xor
add
cmpl
mov
roll
cmp
xchg
pop
add
push
lahf
add
lock
shl
pop
add
shrb
add
jbe
xchg
cmpsb
movsl
shrb
jmp
fimull
mov
fdivl
leave
cmpsl
sub
lret
xlat
fistpl
add
and
add
int
pop
add
add
js
int
add
add
cltd
sub
out
lret
pop
add
test
mov
repnz
jae
test
or
add
in
add
xor
add
cmp
repnz
jae
xchg
sbb
bound
sub
xchg
jecxz
mov
fists
push
add
add
add
rcrb
xor
ret
pop
fcmovbe
shll
cmpsl
int3
or
int
add
out
aas
add
jg
lret
lock
add
xor
add
addl
add
dec
lods
aad
mov
in
popf
repnz
pop
mov
add
jp
inc
add
xchg
ret
mov
jge
add
addl
add
sbb
sub
add
pop
in
jno
push
add
sbb
cmp
mov
in
dec
leave
cs
mov
cli
jmp
xorl
fcoms
pop
add
add
add
add
sub
push
add
aas
mov
mov
mov
mov
add
inc
add
or
add
mov
mov
fistpl
mov
jne
repnz
jae
mov
mov
add
and
testl
add
bound
fiaddl
sahf
daa
pop
add
mov
xor
add
insl
jbe
iret
roll
pop
cmp
in
xor
add
lock
ret
xor
loope
ret
scas
testl
fwait
push
add
sub
imulb
popf
je
popf
mov
cmpsl
rorb
in
push
jle
mov
imul
dec
add
add
mov
out
cmc
mov
repz
lds
movsl
out
roll
lock
add
fistpl
in
loope
push
mov
rorl
add
repnz
jae
pop
mov
and
mov
mov
out
cltd
fmul
pop
add
add
push
mov
test
sarl
lock
inc
add
cs
jp
mull
add
or
push
mov
lock
ret
mov
mov
call
xor
add
add
fs
xchg
fstp
sbb
or
vmwrite
lahf
xor
add
add
inc
add
add
dec
inc
add
lds
dec
cmpsl
or
push
add
push
repnz
jae
or
mov
jno
mov
in
jp
das
mov
test
add
repnz
jae
enter
adc
dec
add
or
imul
in
test
lods
xchg
jmp
ficompl
call
xchg
and
add
cwtl
and
ljmp
repnz
jae
aaa
xor
stos
xchg
jno
filds
pop
mov
clc
jae
sbb
enter
cvtdq2ps
mov
add
adc
lods
mov
add
outsl
scas
cwtl
mov
mov
data16
add
push
add
add
sub
cmpsl
gs
fsubs
add
add
add
sbb
add
ljmp
add
testb
add
cmp
pop
add
test
adc
push
ret
xor
sbb
mov
lret
add
fisubrs
add
aas
jl
lcall
repnz
jae
pop
shlb
inc
mov
repnz
jae
hlt
stos
aaa
xchg
fmull
std
add
or
mov
pop
add
clc
lret
fwait
xchg
or
pop
inc
mov
push
mov
lock
ret
invd
and
add
add
je
push
clc
jae
test
mov
add
add
in
xor
xor
lods
jmp
aaa
add
xor
add
add
jl
data16
or
mov
leave
mov
pop
dec
inc
add
push
adc
add
sbb
add
add
xchg
lods
inc
add
xchg
ret
mov
lds
xor
jo
fimuls
add
jmp
add
sarl
add
ja
pop
add
das
add
add
add
test
pop
fcom
mov
sbb
jp
aad
cmp
jg
mov
xchg
jmp
test
invd
or
xchg
sub
or
aad
mov
or
adc
mov
sbbb
add
add
lcall
fnstcw
xchg
mov
add
aaa
lds
mov
add
ja
cmp
add
pop
add
mov
repnz
jae
aaa
mov
pop
shlb
pextrw
or
xchg
jmp
or
xchg
and
xchg
mov
test
aad
pop
xor
jp
or
in
test
mov
loop
pop
ret
cmpb
add
mov
stc
mov
push
mov
lock
ret
rorb
mov
xor
add
mov
adc
add
test
add
add
ja
sub
lret
mov
mov
cmp
fwait
add
dec
add
jecxz
stos
add
add
jg
or
pop
add
adc
gs
data16
call
cmpsb
add
orb
mov
std
imul
add
add
mov
push
xchg
jmp
mov
ja
mov
pop
mov
add
inc
push
and
sub
add
aad
add
add
cwtl
adc
add
or
sbb
ror
push
add
push
add
fnstcw
add
push
adc
add
popa
cltd
test
add
clc
jae
or
mov
sbb
and
out
cmp
divl
dec
add
add
repnz
jae
bndstx
pop
adc
xor
add
sti
cmpb
enter
addb
outsb
add
repnz
insb
add
clc
cmp
xor
add
add
add
add
xor
mov
call
mov
repnz
jae
mov
fidivrl
lahf
lahf
sbb
test
shrl
clc
loop
test
and
mov
movb
test
push
add
mov
sbb
and
add
ret
pop
ror
cwtl
mov
xor
in
addb
cmp
repz
sub
mov
add
jae
xchg
shlb
sbb
shl
loope
add
add
add
roll
mov
add
bound
lock
add
dec
insl
cltd
xchg
inc
js
loop
sub
xchg
jmp
test
lgs
call
fidivl
outsl
xchg
jmp
hlt
fcmovu
test
out
outsl
mov
add
jbe
cmpl
in
add
add
add
fdivl
inc
add
stos
add
adcl
add
pop
add
adcb
add
mov
mov
cmpsl
push
add
inc
push
push
mov
lock
ret
adc
add
shlb
add
jae
xchg
mov
mov
mov
nop
add
add
xor
ljmp
cwtl
sbb
repz
sbb
dec
add
add
add
sbb
fwait
pop
pop
add
pop
pop
add
add
loope
inc
fwait
int
movsl
ds
outsl
jecxz
or
sbb
xchg
addr16
add
loopne
test
daa
add
sbb
repz
cmc
mov
inc
add
add
lods
mov
or
test
and
pop
add
icebp
xchg
jp
jmp
addb
test
hlt
jp
push
jo
sti
sbb
mov
flds
loopne
shr
mov
sub
sub
into
push
xchg
push
add
sar
sbb
sub
aam
lods
cmp
scas
out
add
mov
decl
add
add
loop
shll
dec
add
add
enter
cld
inc
sub
xchg
mov
push
mov
lock
ret
mov
sbb
mov
dec
add
cmp
lahf
scas
add
daa
mov
adc
add
roll
lahf
xchg
push
mov
lock
ret
or
test
xor
add
add
xchg
cwtl
sub
repz
sub
push
insl
pop
add
add
int3
adc
icebp
pop
jmp
jo
sarb
ficompl
test
add
add
inc
add
fisttpll
add
rol
jg
fnstenv
pop
outsb
add
mov
test
add
add
je
repnz
jae
xor
cmp
repnz
jae
mov
jno
adc
mov
push
push
add
add
repnz
jae
hlt
mov
pminub
mov
mov
pusha
add
cmp
sub
in
outsl
shlb
adc
repnz
jae
or
hlt
aaa
xchg
call
pop
or
xchg
mov
push
mov
lock
ret
mov
mov
mov
jmp
mov
inc
push
das
add
sbb
aas
or
imul
nop
jno
add
jmp
repnz
jae
mov
stos
sbb
inc
dec
add
sub
add
fists
fdivs
lret
data16
enter
adc
or
sarl
loop
jo
enter
xor
add
clc
push
jmp
jp
fwait
cmpsb
in
add
stc
push
push
mov
lock
ret
and
and
jg
fs
cmpl
adc
sub
pop
add
mov
mov
add
js
adc
push
or
out
mov
or
mov
inc
add
shl
test
leave
sti
movsb
sbb
data16
movsl
push
clc
shrl
sti
or
data16
loopne
add
mov
add
jmp
add
mov
clc
jae
aaa
or
mov
and
hlt
enter
dec
add
and
add
iret
ss
lret
out
xchg
jmp
and
fcmovnu
call
mov
test
pusha
add
mov
add
movb
cmp
data16
mov
movsb
jge
mov
sub
repnz
jae
stos
xchg
xchg
or
or
es
add
add
mov
pusha
add
push
xor
add
add
add
aad
add
add
dec
add
inc
outsl
loop
scas
call
incb
daa
dec
add
cmp
es
add
fistl
jae
or
sub
sbb
xchg
stos
scas
mov
clc
clc
push
cmp
adc
add
pushf
adc
loop
jg
stos
scas
jno
jmp
push
add
stc
add
repnz
jae
fimull
mov
cmpxchg
mov
dec
add
stc
jmp
xchg
jmp
mov
xchg
sarb
adc
add
add
add
jl
fwait
je
dec
add
adc
add
ljmp
add
clc
jae
and
pop
enter
jge
xchg
pop
xchg
jmp
and
or
ja
hlt
lahf
fldenv
add
testb
add
sub
add
lcall
clc
jae
test
hlt
stos
pand
enter
dec
fistps
in
faddl
mov
xchg
add
sbb
add
mov
mov
add
repnz
jae
and
mov
fcmovbe
adc
cmpsb
ljmp
jmp
mov
lgs
mov
mov
test
cli
and
mov
in
jle
sub
add
jg
sub
data16
add
sbb
mov
rcll
push
push
mov
lock
ret
pop
xchg
mov
pop
xchg
lcall
pop
imul
popf
in
test
shrb
add
add
add
add
xlat
jge
lahf
cmpsb
rcr
ja
xchg
jle
pop
data16
push
bound
pop
int
xchg
mov
repnz
jae
mov
xchg
xchg
pop
pop
add
add
xchg
add
mov
push
add
mov
cvttps2pi
outsb
add
jl
sbb
or
push
add
mov
xor
or
mov
inc
add
add
mov
sub
inc
fisubs
mov
add
inc
mov
push
mov
lock
ret
mov
pop
and
xchg
test
loop
add
mov
push
xchg
jae
jno
xor
pop
and
mov
push
add
pop
add
adc
add
sbb
ss
add
mov
add
mov
add
or
add
add
sbb
mov
fisubs
out
sarl
in
out
cmp
cmp
add
sarb
es
add
mov
ret
add
cmp
jl
jno
dec
add
pop
call
jno
and
jnp
add
add
xor
add
data16
scas
ljmp
mov
jmp
pop
and
jno
jno
push
or
inc
add
test
pop
add
mov
add
cmp
sbb
push
add
add
mov
insl
jge
cld
loop
xlat
pop
mov
lahf
icebp
xchg
add
xchg
jmp
hlt
stos
jno
mov
setbe
and
cmp
jbe
out
adc
add
ret
add
sbb
test
call
aaa
add
popa
and
pop
repnz
shlb
add
addb
out
inc
add
outsl
or
add
in
out
xchg
jecxz
sbb
iret
das
add
add
out
data16
xor
add
mov
add
xchg
add
jmp
or
xchg
mov
out
ret
test
loop
in
arpl
jecxz
pushl
repnz
jae
and
and
and
sub
cmpsl
inc
add
push
add
xchg
add
hlt
add
inc
mov
cltd
sbb
push
cltd
pop
add
mov
add
xchg
addl
and
shlb
jmp
repnz
jae
xchg
or
fidivl
shlb
xchg
jae
enter
hlt
mov
cwtl
add
add
and
mov
movsb
fwait
insl
dec
lcall
add
xor
xchg
add
add
repnz
jae
xor
lds
mov
pop
sbb
data16
mov
pop
add
or
insl
dec
icebp
mov
jae
std
pop
inc
push
xchg
jmp
and
xchg
jae
jecxz
add
cli
add
fmull
add
xchg
ret
xor
pop
rcrb
or
xor
stos
js
and
add
add
fiadds
scas
add
or
repz
mov
insb
add
inc
mov
inc
add
repnz
jae
fcompl
mov
test
cmp
or
and
or
test
aaa
call
mov
scas
ret
sbb
into
cmpsl
sbb
in
push
fs
repnz
cltd
add
xchg
add
addl
add
xchg
ret
fmull
rorb
adc
add
imul
add
pop
add
fdivr
aam
add
sbbl
push
ficoms
cmp
punpcklwd
add
testb
sbb
mov
dec
pop
add
dec
add
adc
sbb
inc
add
xchg
jmp
ficompl
jno
and
pop
mov
test
ja
add
mov
mov
add
sbb
mov
pop
add
adc
jne
xor
jge
push
push
cmp
and
cmp
add
mov
stos
fidivrs
divl
clc
js
mov
add
pushf
iret
shlb
add
add
jnp
int
cld
adc
movsl
xor
add
jns
dec
out
inc
mov
xchg
jmp
sbb
adc
ljmp
aad
add
or
movb
add
dec
add
incl
call
stos
pop
icebp
or
pop
add
movb
in
stc
add
repnz
jae
adc
hlt
mov
test
add
call
mov
mov
xlat
mov
test
fnstenv
inc
add
adc
add
add
xor
add
mov
pop
add
mov
mov
jg
sbb
lock
pop
add
cmp
cmp
dec
add
insl
sub
sbb
pushf
lock
add
test
add
xchg
ja
add
mov
push
mov
loope
add
xchg
and
pusha
add
mov
push
imul
inc
add
pop
add
add
test
faddl
and
add
mov
shll
mov
add
loopne
or
pop
add
rolb
mov
fmull
add
test
jl
insb
add
std
ljmp
bound
sahf
lods
call
add
cltd
mov
xor
mov
rclb
in
cmp
incb
movsl
add
jne
outsb
add
xor
mov
and
add
andb
add
out
jne
icebp
xchg
in
loope
inc
add
inc
add
jmp
mov
mov
xlat
decb
lahf
add
imul
outsb
add
xor
add
push
xchg
add
mov
xor
add
repnz
jae
test
out
cltd
imul
call
adc
add
hlt
sahf
inc
add
add
sub
stos
scas
pop
stc
stos
repnz
jae
test
hlt
call
bnd
outsl
sub
nop
rclb
dec
pop
pop
add
push
pop
pop
add
add
js
sbb
sahf
adc
imul
adc
add
add
sbb
dec
in
repz
addr16
shlb
adc
and
pusha
add
sbb
add
add
imul
addb
push
mov
jno
in
xor
sub
aas
fmull
movsb
xchg
subl
mov
rorb
add
inc
repz
and
add
lret
movb
add
dec
add
xor
add
mov
clc
sbb
inc
dec
add
add
or
fidivrs
movsb
mov
add
dec
movl
repnz
jae
aaa
fldt
mov
filds
push
outsb
add
add
std
add
mov
aas
pushf
mov
jmp
xchg
mov
lock
ret
mov
pop
and
xchg
arpl
clc
jae
fsubl
mov
enter
mov
mov
add
adcl
pushl
fidivl
in
jnp
jmp
leave
sub
and
out
fisttpl
jmp
adc
aaa
xchg
stos
fistpl
lds
aam
pop
add
mov
add
add
mov
test
mov
int
jb
xchg
push
repnz
jae
jno
or
and
mov
add
jp
and
add
jo
sbb
cli
xchg
fsub
dec
scas
mov
loope
sub
add
cmpsb
inc
add
xchg
ret
call
mov
add
mov
push
add
test
lods
add
icebp
cwtl
in
push
pop
xchg
jmp
mov
invd
call
popf
adc
rorb
add
cmp
loopne
jecxz
pushf
fldcw
xchg
jmp
sarb
test
stos
in
cli
dec
add
xchg
inc
repnz
jae
sbb
xchg
pop
jo
sub
imul
iret
fisttpl
add
or
cmp
jne
lret
jmp
sub
jo
lcall
clc
xchg
jmp
mov
rclb
out
mov
ret
mov
es
add
mov
pop
add
cmp
add
dec
add
sub
subl
jmp
pop
mov
shrb
leave
jnp
add
shlb
test
je
imul
push
add
sub
repnz
and
add
push
add
mov
lock
mov
std
add
mulb
add
add
add
mov
aas
lret
scas
lahf
repz
sub
repnz
jae
mov
vminps
stos
lret
out
mov
add
std
pusha
add
add
ret
fisubrs
adc
add
clc
mov
add
ret
mov
and
add
daa
xchg
mov
add
add
add
dec
pop
aad
aam
testl
shrl
js
fsubr
xchg
and
xchg
jmp
jno
fcmovbe
rclb
lds
incl
mov
and
xlat
imul
add
test
xor
mov
push
mov
lock
ret
or
mov
lret
add
adc
add
icebp
imul
push
add
mov
add
movsl
push
sbb
push
jmp
mov
xor
add
push
mov
lock
ret
fisubrl
add
insb
add
add
inc
lds
popa
add
mov
add
jecxz
add
into
out
adc
out
cmp
adc
jbe
push
add
test
xor
add
sub
inc
ret
push
sarb
int
lret
add
or
mov
popa
add
clc
jae
fistpl
mov
adc
pop
sbb
pusha
add
add
aam
mov
add
add
add
add
sub
xchg
insl
sti
pushf
cmpsl
jmp
pop
addb
add
test
into
mov
iret
shr
test
xchg
mov
jmp
orl
add
and
fcompl
xchg
out
out
lret
lcall
cmp
daa
add
xchg
push
xchg
jmp
mov
pop
mov
aaa
or
fidivl
mov
sub
lock
add
bound
pop
add
xorl
call
xchg
mov
fcmovbe
pushf
nop
pusha
add
sbb
pushf
es
add
push
mov
jle
add
bound
pushf
les
inc
add
popa
repnz
jae
mov
and
mov
aaa
mov
and
add
pop
loope
mov
add
jl
adcb
add
pop
add
aaa
movl
aad
push
add
cld
xor
add
xor
shl
loopne
fildll
movsb
mov
addr16
add
add
sahf
inc
movswl
repnz
jae
fidivl
mov
mov
fdivl
dec
add
nop
inc
add
dec
add
inc
add
mov
push
ss
xchg
xor
add
dec
add
sbb
add
stos
mov
and
aaa
xchg
mov
ja
add
outsb
add
add
add
dec
add
mov
mov
mov
add
or
add
outsl
leave
inc
add
das
lock
les
or
into
mov
hlt
add
cld
bound
rolb
mov
icebp
add
xchg
gs
repnz
jae
aaa
aaa
pand
mov
adc
add
push
add
add
inc
fs
jmp
sbb
pusha
add
mov
xor
bound
scas
cs
test
jnp
outsb
add
xlat
ret
sbb
xor
add
mov
mov
adc
subl
mov
add
popf
xchg
jae
and
mov
mov
add
push
ja
popa
add
add
out
add
xchg
push
incl
jmp
mov
fmull
adc
inc
inc
add
dec
add
enter
roll
loopne
dec
fld
sti
add
fisttps
mov
cmp
xchg
clc
jae
call
test
lds
arpl
sbb
inc
scas
arpl
addr16
mov
arpl
mov
dec
or
sbb
add
jo
incl
mov
xchg
jmp
mov
xchg
jno
mov
insb
add
xchg
push
mov
lock
ret
mov
mov
sbb
lret
jmp
unpcklps
bsr
add
shlb
push
xchg
jmp
mov
mov
mov
hlt
xchg
aaa
lds
aas
lods
out
mov
xchg
jmp
xchg
mov
lds
stos
pop
testl
les
fcoms
cwtl
repnz
mov
sub
adc
mov
call
jmp
rorb
and
test
xchg
inc
add
inc
add
nop
ja
push
add
scas
add
add
lock
repnz
jae
xchg
sbb
xchg
mov
add
push
mov
lock
ret
mov
xor
mov
xchg
icebp
fwait
add
mov
add
push
ss
push
bound
sar
xchg
jmp
mov
xchg
mov
mov
and
mov
push
lds
jo
fwait
ds
mov
jle
lret
out
add
mov
and
outsb
add
or
lret
imul
push
rorl
into
adc
add
loopne
in
mov
lahf
ret
xor
jns
push
faddl
push
add
pushf
sahf
das
push
sbb
adc
dec
sub
pop
aad
add
xchg
ret
test
xchg
xchg
arpl
add
add
daa
test
add
rolb
mov
mov
add
mov
xchg
jmp
lds
test
int3
push
add
mov
add
cmp
mov
jg
insl
jge
scas
cmc
out
add
aas
rcll
mov
adc
clc
jae
or
and
pop
mov
mov
xchg
push
add
addr16
icebp
repz
divb
sbb
outsb
add
mov
jnp
add
xlat
jecxz
xor
mov
fldl
fmul
jecxz
cmp
shl
pop
lods
lahf
adc
add
mov
test
mov
divl
add
cmp
mov
mov
push
mov
lock
ret
fidivl
shlb
inc
dec
xchg
jmp
fistl
hlt
hlt
mov
hlt
mov
in
or
push
add
jne
adcl
add
mov
cmp
popf
or
jecxz
pushf
data16
add
fiaddl
jb
inc
add
add
add
add
bound
and
add
sub
add
insb
add
mov
mov
add
divb
dec
jl
in
or
cld
jb
mov
add
aaa
push
add
jae
scas
cmp
leave
insb
add
cmc
es
movsl
cmp
ds
sub
cmpsl
cli
adc
add
mov
xchg
inc
xchg
jmp
fsubl
mov
jno
fisttpl
cmovo
cli
rcll
mov
push
mov
lock
ret
xchg
or
mov
fldt
dec
add
dec
add
add
sti
notl
add
add
call
mov
push
arpl
sti
add
pop
dec
add
mov
push
add
fmull
add
add
add
xor
lcall
add
pop
add
ret
in
fcompl
or
push
add
test
incl
and
fucomp
lret
pop
add
rcl
insb
add
add
add
or
add
add
xchg
jmp
call
sarb
stc
push
xchg
jmp
adc
xchg
adc
or
and
fiaddl
sarb
dec
mov
xor
add
roll
inc
sbb
dec
ret
or
test
jbe
cmc
sbb
lods
sbb
shll
xor
incl
je
testl
ficoml
xor
test
mov
add
fadds
push
add
pop
or
arpl
mov
add
fstpt
fwait
add
jge
and
jno
popf
popa
in
push
add
cmc
mov
pop
repnz
jae
test
and
getsec
mov
mov
add
pushf
cmp
or
fidivrs
sub
in
push
and
or
cltd
aam
push
rolb
push
in
or
mov
cld
orb
adc
add
inc
out
insb
add
add
add
pop
lcall
add
lret
mov
mov
push
add
dec
add
push
add
add
jno
add
lea
push
into
jo
jnp
pusha
add
pusha
add
shrb
fistps
and
mov
lahf
out
popa
inc
mov
xchg
jmp
and
or
pop
xchg
jmp
mov
fdivl
inc
add
or
add
pop
and
cmpsl
cmp
inc
je
xchg
jmp
fidivl
js
mov
fcmovb
xor
stos
push
add
loopne
push
add
jmp
imul
add
add
mov
add
jnp
add
loop
and
adc
add
or
mov
or
dec
add
mov
clc
jae
xchg
hlt
hlt
test
mov
fcmovbe
rolb
add
push
into
roll
or
arpl
mov
orb
mov
stos
enter
aaa
in
lahf
push
add
call
in
add
pop
aam
popl
dec
jmp
adc
add
insb
add
mov
push
mov
lock
ret
pop
and
mov
je
sub
lock
add
mov
push
mov
lock
ret
xchg
mov
or
pop
pop
or
add
cmp
xchg
fs
decl
mov
mov
xor
cvtdq2ps
movsl
das
mov
and
add
mov
add
push
add
add
xor
add
add
in
bound
lret
sbb
mov
cmp
add
std
and
js
in
add
mov
jmp
fcoml
xchg
lds
adc
mov
add
add
add
pushf
and
jne
in
cmpsb
add
mov
dec
add
add
testb
ljmp
cmpsb
xchg
pop
cmpb
sub
dec
jecxz
add
data16
outsl
add
outsb
add
inc
push
add
or
lds
test
pop
mov
mov
xchg
sahf
and
shll
cld
out
leave
lods
int
sub
cwtl
ja
jbe
popa
rcrb
rcrl
test
add
aam
rorl
add
add
pushf
int
sub
mov
add
push
add
test
and
pop
add
add
inc
out
pop
add
jae
xchg
call
enter
idivb
aam
add
add
inc
stos
push
mov
lock
ret
pop
psubsb
mov
sti
add
mov
sbb
inc
add
add
repnz
incl
add
fstpt
inc
add
mov
adc
add
stc
pusha
repnz
jae
mov
mov
stos
hlt
test
iret
xchg
lea
add
rolb
stos
add
decb
loope
adc
andl
and
clc
jae
mov
xor
mov
pop
mov
dec
adc
nop
and
add
add
adc
add
jl
insl
jne
dec
add
cs
xchg
xchg
jmp
fdivl
hlt
ud1
cmpsl
mov
add
add
push
repnz
jae
xchg
mov
mov
adc
adc
fsubrl
jno
roll
bound
hlt
leave
inc
add
out
repz
jle
bound
cmpsl
in
int
xchg
pushl
add
mov
push
xor
jmp
xor
add
adc
je
mov
sti
add
add
add
imul
mov
stc
test
xchg
jmp
or
mov
fcmovb
mov
lds
repnz
jae
mov
lds
fisubl
or
add
scas
or
dec
sbb
movsl
fdivl
bound
stc
xor
xchg
jmp
mov
mov
stos
xchg
rorb
cmpsb
add
je
add
fnstenv
mov
add
push
mov
lock
ret
xchg
mov
hlt
mov
pop
into
and
cli
aaa
jp
xchg
or
add
add
sub
inc
add
mov
add
add
add
lea
repnz
jae
sbb
fisubl
or
mov
cld
out
xchg
lcall
repnz
jae
and
lgs
ljmp
scas
dec
add
cmp
rcrb
add
add
fninit
mov
cld
and
into
xchg
popa
repnz
jae
mov
lds
fldt
add
into
ret
loop
clc
je
xchg
or
lret
mov
xchg
add
add
adc
rorb
add
mov
mov
jmp
ja
xor
pop
test
fsts
js
aas
push
add
and
pop
jo
andl
enter
or
push
add
xchg
leave
inc
add
sub
loop
mov
lock
ret
mov
xchg
or
and
cli
sahf
jge
add
dec
add
xchg
jmp
mov
mov
mov
mov
mov
and
or
mov
jb
repz
pop
cmp
add
mov
adc
add
inc
add
lret
add
mov
popa
fadds
clc
jae
shlb
call
push
add
jbe
mov
arpl
lcall
add
into
add
inc
sbb
xchg
mov
cmp
add
sub
pop
daa
push
add
out
or
fidivrl
outsl
fsincos
das
xchg
stos
repnz
jae
pop
stos
mov
pop
xchg
mov
xchg
fsubrl
add
add
test
mov
add
add
scas
mov
xor
ret
fcomi
mov
adc
and
add
mov
dec
dec
mov
add
add
dec
and
call
jmp
xchg
shlb
and
pop
hlt
mov
fistpl
out
or
mov
sbb
pop
inc
mov
sbb
add
fwait
call
push
mov
repnz
jae
mov
lgs
stos
nop
js
and
add
mov
js
cld
jmp
add
pushf
add
notl
add
add
in
int
add
jmp
add
andl
into
mov
es
icebp
cmp
scas
lret
cltd
pop
push
add
or
push
add
gs
iret
sbb
push
add
addb
inc
cld
inc
push
addb
addl
pushl
mov
mov
incl
mov
inc
add
inc
push
xchg
jmp
jno
sbb
xor
add
adc
add
jmp
mov
add
adc
jae
add
test
mov
adc
jmp
fisubl
fisttpl
mov
clc
jae
mov
adc
mov
mov
js
xchg
out
arpl
jae
adc
add
xchg
loop
mov
jno
add
add
pop
mov
add
add
push
mov
lock
ret
or
add
or
movsb
adc
sbb
jb
mov
shl
clc
jae
jno
lgs
mov
mov
inc
fdivp
inc
outsb
add
add
pop
add
add
pop
lahf
inc
mov
inc
add
fsincos
je
notb
add
ljmp
cmp
add
add
repnz
jae
or
or
test
je
repnz
jae
pop
pop
pop
mov
test
jecxz
in
and
je
sub
clc
jae
xor
shrb
imul
repnz
jae
mov
mov
mov
shr
adc
pop
fucomp
adc
add
aam
pop
add
jbe
push
ljmp
clc
mov
cmp
clc
jae
mov
hlt
test
jno
mov
aad
add
push
add
sbb
in
mov
pop
add
mov
sbb
int
dec
add
sub
sub
test
pop
add
jae
xchg
jmp
mov
mov
mov
cvttps2pi
call
in
arpl
testl
test
add
in
inc
add
fcmovnu
lock
push
add
jb
repz
test
push
repnz
jae
aaa
lgs
enter
or
pop
lret
add
add
pusha
add
jne
add
sbb
jge
int3
add
xlat
add
je
mov
mov
dec
cmp
clc
jae
jno
hlt
pfrcp
and
stc
mov
repnz
jae
enter
xchg
and
and
add
pop
add
cmp
in
shrl
jo
xlat
mov
jp
leave
call
add
pop
add
in
leave
sahf
andl
inc
add
add
test
aad
adc
imul
add
add
lret
or
push
jns
dec
cli
xchg
test
add
repnz
jae
aaa
call
int
add
add
mov
xchg
jmp
fisubl
and
test
push
add
add
insl
sbb
adc
lods
out
sub
andb
mov
inc
add
rol
pop
add
fcmovnb
into
mov
clc
jae
and
and
jge
dec
cmc
push
push
sub
loopne
outsl
and
push
aad
mov
repnz
jae
mov
mov
xchg
pop
mov
cmp
int
pop
jle
mov
add
icebp
mov
das
or
lods
aaa
fiaddl
les
add
dec
add
mov
dec
add
call
jle
xchg
sub
insl
add
daa
into
add
repnz
add
lahf
add
xor
add
lods
mov
xchg
jmp
mov
sbb
lds
and
lock
cli
scas
mov
lods
lret
pop
in
jbe
fwait
jg
pop
stos
add
mov
adc
add
add
popa
xchg
clc
jae
fdivrl
and
cmp
cli
fs
test
or
cmp
inc
cmp
cmp
jb
fisubrl
add
or
cli
pop
cli
adc
add
add
push
adc
addr16
jg
add
and
add
add
cmc
in
add
add
pusha
add
add
pop
push
add
jae
or
sbb
lret
in
xor
fistpl
add
les
fwait
pop
add
das
iret
push
add
idiv
bound
cmp
push
xchg
test
add
repnz
jae
mov
or
push
cmpb
int
push
add
jg
xchg
mov
scas
add
add
stos
add
cmp
inc
leave
lret
cmc
test
adc
add
fstpl
jo
inc
popl
lea
loopne
push
add
pushf
lds
dec
jb
pop
movb
mov
iret
pop
dec
add
dec
aas
xor
xchg
mov
mov
mov
stos
push
xchg
add
inc
add
scas
popf
ljmp
hlt
xchg
xor
add
xchg
dec
add
add
and
add
insb
add
scas
push
add
shrb
add
iret
ret
int3
inc
or
fildll
add
mov
nop
out
insb
add
jl
sti
stc
add
push
mov
lock
ret
jno
xor
dec
push
add
cmpb
mov
mov
int3
sbb
xchg
mov
add
xchg
ret
stos
stos
xchg
and
or
add
jp
xor
add
cmpsb
pushf
or
xor
outsb
add
movsl
add
xor
scas
cmpsb
mov
add
add
mov
aaa
and
sbb
push
clc
scas
sub
add
ds
fwait
adc
xchg
jmp
or
and
mov
enter
adc
add
push
into
lcall
orl
or
pop
enter
push
add
les
mov
mov
xchg
lret
imul
stos
outsb
add
call
and
clc
jae
mov
adc
xor
add
stc
rep
repnz
jae
xor
mov
sbb
ja
add
out
add
push
add
adc
add
mov
xor
ret
bsr
movsl
dec
xor
xchg
clc
cld
pop
add
leave
add
test
jne
push
mov
lock
ret
and
add
xchg
fstps
mov
mov
cld
push
rcll
mov
push
add
add
nop
les
sbb
ret
ret
or
add
xlat
xor
add
jno
sub
cmp
dec
test
mov
dec
add
add
jmp
mov
fldt
test
pop
add
jmp
popf
sbb
cmp
add
add
in
adc
add
mov
lock
ret
xchg
mov
xor
dec
or
add
and
add
push
xchg
mov
cs
cmp
cltd
pop
add
pop
add
sbb
ja
xchg
scas
dec
xor
add
iret
add
add
add
add
push
xchg
jmp
mov
test
stos
pextrw
xchg
call
add
fidivs
sbb
sbb
rclb
add
add
je
jge
mov
push
mov
lock
add
sbbb
add
inc
add
push
mov
sbb
sub
sti
mov
adc
add
pop
aaa
cwtl
add
mov
lock
ret
and
mov
cmpxchg
xor
jae
mov
jae
jno
jno
jno
mov
lds
fistl
pusha
add
add
in
loope
lret
jae
dec
add
add
lret
xchg
push
or
xor
sub
jo
pop
dec
add
add
push
sub
repnz
jae
mov
mov
xchg
or
mov
scas
jne
cld
enter
gs
push
add
add
jmp
mov
mov
xchg
mov
stos
mov
mov
movsl
add
jp
cli
clc
xlat
stc
pop
repnz
jae
or
mov
mov
mov
jo
aam
xchg
ljmp
lret
jp
repz
enter
push
add
movsl
mov
jmp
popf
pop
add
sub
mov
add
or
dec
leave
jmp
or
scas
in
jb
and
add
lret
sti
pop
movlps
add
sbb
add
pop
or
adc
cmp
cli
shl
xor
mov
cmpsb
pop
add
add
inc
add
mov
sbb
adc
add
xchg
mov
add
push
add
in
mov
mov
testl
and
add
cli
loop
inc
push
repnz
jae
mov
pop
stos
mov
mov
add
inc
add
pop
add
out
add
outsb
add
popa
push
add
add
add
lcall
repnz
jae
fcoml
mov
xchg
and
mov
in
mov
ret
arpl
je
decb
push
push
mov
lock
ret
lgs
hlt
mov
test
popf
nop
mov
nop
mov
add
add
dec
add
sub
icebp
cs
sbb
mov
push
enter
fcmovbe
das
repz
add
add
pusha
add
out
scas
add
mov
add
inc
sbb
mov
xchg
ret
mov
pop
or
sbb
push
add
push
add
add
adc
jge
pop
negl
add
bound
dec
mov
add
push
jmp
mov
call
aaa
sidtl
repnz
jae
fcmovnbe
and
and
lgs
aam
push
sub
xor
add
or
xor
add
and
add
add
stc
je
push
mov
lock
ret
call
add
add
jne
add
xchg
negl
add
add
out
lahf
xor
mov
or
leave
ror
add
jmp
roll
add
add
mov
jmp
les
pop
test
addl
aaa
add
xchg
stos
loopne
or
std
xchg
inc
add
aad
out
repz
mov
fldcw
or
jg
lahf
or
int3
adc
sub
int3
lods
push
add
mov
xor
mov
gs
add
push
pop
hlt
mov
add
xchg
sub
mov
loopne
filds
stos
push
add
push
add
pop
les
out
shlb
mov
outsb
add
clc
xor
cltd
add
mov
incb
add
subl
add
add
pop
repnz
jae
aaa
pop
unpcklps
mov
stc
mov
push
mov
lock
ret
fimull
adc
lods
repnz
jae
mov
or
fdivl
xor
mov
or
xlat
cmpsl
cmp
push
add
add
sti
nop
and
add
add
dec
add
push
add
pop
add
add
stos
data16
fucomip
pop
pop
mov
sbb
cmp
add
pop
mov
xchg
repnz
jae
and
mov
mov
cltd
adc
shlb
push
add
and
repnz
jae
mov
jno
rcrb
add
add
add
out
adc
add
jo
aaa
and
fimull
movsb
inc
and
inc
es
es
add
in
or
dec
test
jle
jnp
sbb
lea
mov
pop
loop
fbld
add
and
lret
add
scas
ret
cmc
push
push
mov
add
shlb
pop
add
mov
mov
repnz
jae
adc
xchg
lgs
mov
add
arpl
jne
fwait
push
add
testb
add
inc
push
repnz
jae
or
call
test
push
add
insl
hlt
shrl
cmpb
out
push
stc
xor
repnz
jae
fistl
mov
mov
mov
repnz
jae
xchg
bsf
fisubrl
lahf
xor
add
add
fchs
lea
mov
test
xchg
test
and
push
incl
mov
daa
xchg
add
dec
aaa
test
or
push
add
lds
adc
cmp
add
jl
loopne
add
pop
add
in
add
mov
pop
add
lods
setbe
lods
jns
dec
add
loop
xor
add
cwtl
aaa
sbb
xchg
fsubrl
das
pusha
add
movsl
test
in
enter
xchg
ret
xchg
and
xchg
and
aaa
scas
pop
add
je
or
outsl
inc
add
outsl
xchg
clc
jae
aaa
fstpt
xchg
mov
jecxz
and
lea
add
in
add
aad
adc
add
add
outsl
sub
push
add
mov
je
jbe
mov
sti
cmp
add
mov
test
add
roll
lods
lret
pop
mov
dec
pop
add
xchg
cltd
icebp
ud0
or
add
aad
loop
sub
pop
push
mov
push
das
add
sub
xchg
call
xchg
jmp
adc
jno
sbb
mov
add
xchg
ja
xor
mov
inc
add
cmpsl
enter
push
add
pusha
add
xchg
ljmp
add
mov
pushf
pop
add
gs
adc
cltd
iret
addl
andl
shlb
and
inc
pushf
sbb
aaa
lcall
add
outsl
shl
ja
insl
nop
add
and
out
pop
and
add
in
stc
push
push
mov
lock
ret
stos
fisubrl
stos
xchg
outsl
rcll
add
sub
out
xchg
sub
js
in
sahf
cmp
adc
add
repnz
jae
adc
call
fidivl
test
sahf
call
pop
inc
add
xchg
clc
jae
aaa
jno
call
fidivl
add
jle
xchg
ret
and
jle
fidivl
jp
jbe
outsb
add
dec
and
add
jb
int3
pop
les
sub
stc
add
add
add
bound
ds
aas
roll
addl
call
fidivl
xchg
sbb
jns
or
mov
xchg
aad
shll
mov
add
add
push
add
leave
testl
add
xor
add
popa
jmp
mov
in
popf
inc
hlt
repnz
jne
movsb
nop
js
xor
daa
jbe
sbb
dec
add
push
aad
jb
mov
pop
add
add
in
sbb
pop
iret
inc
cmp
jne
xor
add
fld
cli
push
mov
jl
outsl
ret
aas
data16
sahf
add
xchg
jmp
and
mov
add
add
add
pop
cmp
mov
lock
ret
adc
sbb
push
add
stc
pop
push
mov
lock
ret
lds
xchg
mov
xor
mov
outsl
ja
adc
add
add
mov
xchg
ret
pop
add
xchg
or
add
jmp
and
or
and
adc
add
lock
cmp
mov
xchg
jmp
hlt
xor
mov
mov
fcmovb
mov
out
stos
or
jmp
xor
rcrb
xchg
push
add
xchg
jae
and
pop
mov
dec
out
add
jge
add
fwait
aad
add
lahf
mov
sarl
push
add
and
movsb
inc
add
in
xchg
pop
add
pusha
add
insb
add
xor
add
add
xor
add
lcall
xchg
sbb
or
add
add
cwtl
add
push
pop
loop
rolb
cwtl
jp
inc
add
or
psrad
in
add
cld
pop
add
xorl
pushl
test
fsubrl
clc
rcrl
popf
sub
ja
push
jae
lock
fisubrs
int3
cmpsl
sub
xchg
inc
and
push
mov
lock
ret
jno
mov
hlt
enter
add
mov
pop
add
dec
add
daa
push
add
add
je
daa
xchg
add
sub
insb
add
xor
jbe
dec
add
xchg
dec
sub
scas
sahf
jg
mov
ret
outsb
add
pusha
add
push
add
jecxz
loopne
rorb
aad
jl
andb
add
loope
pop
add
add
cmp
ret
sub
xchg
and
add
add
test
cltd
sbb
out
lahf
xchg
addr16
mov
push
add
mov
mov
xchg
jmp
mov
test
shlb
and
mov
shl
jae
adc
fdivl
adc
or
push
fiadds
scas
pop
add
in
add
repnz
les
mov
testb
test
mov
movsl
jge
cld
repnz
jae
xchg
mov
and
lds
adc
add
scas
jno
add
push
mov
lock
ret
xchg
mov
jle
inc
add
lods
adc
add
add
add
or
fildl
cmpsb
loop
add
or
cmc
test
jne
xchg
jmp
jno
or
xchg
xchg
sbb
bound
or
repnz
mov
repnz
jae
mov
mov
and
xor
addb
add
add
decl
mov
test
adc
add
xor
leave
mov
test
and
dec
add
mov
icebp
aas
repnz
push
add
jae
adc
add
lock
add
jmp
xchg
mov
mov
xchg
test
xchg
jb
and
add
add
push
add
jmp
mov
mov
lds
xor
in
add
je
js
mov
lock
ret
call
inc
add
jge
movsb
pop
xchg
mov
cltd
sub
sahf
xchg
in
notl
outsl
or
add
xchg
jae
test
mov
lds
je
push
mov
lock
ret
aaa
and
stc
push
mov
lock
ret
adc
mov
jno
rcrb
add
add
add
add
pop
add
imul
cmp
jge
stc
pop
repnz
jae
mov
adc
stos
test
fstpt
mov
push
mov
lock
ret
mov
fdivl
mov
data16
jecxz
mov
clc
jae
hlt
sbb
xchg
mov
popl
add
xchg
subb
cmpsb
pop
add
add
dec
ja
cwtl
add
shr
cmp
mov
pop
push
add
sbb
adcb
cmp
leave
jbe
inc
add
outsb
add
in
test
jb
int3
dec
mov
gs
jmp
int
fnstenv
pop
add
inc
mov
repz
stos
scas
xchg
mov
mov
or
ret
repnz
jae
mov
mov
jno
mov
xchg
sti
fnstcw
add
jne
loop
adc
adc
add
or
lahf
aaa
fiadds
fwait
mov
out
sbbb
dec
addb
push
loope
mov
dec
add
mov
add
inc
add
xor
repnz
jae
mov
mov
enter
out
push
push
dec
add
mov
pop
add
shl
imul
push
or
sbb
sti
jp
dec
mov
pop
add
add
sub
in
push
add
lds
push
cmpsl
add
popa
popa
test
test
enter
out
add
in
sti
mov
incl
xchg
out
or
pusha
add
push
xchg
jmp
movb
hlt
mov
mov
and
movsb
shrb
add
add
add
inc
rolb
jge
repnz
jae
pop
stos
xor
and
push
jb
sbb
movsl
aaa
ja
fsubrl
mov
and
stos
jns
adc
add
sub
xchg
adcl
decl
fsubrl
test
and
mov
movsb
or
pop
add
jnp
pop
aaa
push
fildl
mov
add
add
movsb
leave
mov
je
repnz
jae
hlt
mov
shrb
test
jecxz
xchg
clc
jae
jno
lds
and
sahf
lret
fildll
test
mov
xchg
bound
jl
and
add
and
mov
sub
inc
loope
adc
add
and
sub
jl
mov
cmp
clc
jae
hlt
xchg
ficompl
mov
fcoml
add
add
jecxz
dec
add
add
sub
jb
add
add
sub
sti
inc
ficomps
adcl
mov
or
test
xor
ret
add
fwait
adc
add
add
sti
in
mov
xorb
repnz
jae
call
mov
xchg
test
mov
add
stos
adc
out
push
dec
add
scas
or
mov
enter
xchg
ror
add
jge
mov
add
sahf
test
sub
fwait
inc
add
vpcmpeqw
add
dec
add
sub
add
add
add
add
xchg
mov
test
nop
movsl
or
cmc
add
inc
add
rolb
imul
push
push
add
add
pop
add
inc
add
out
into
sub
hlt
xchg
dec
add
push
add
mov
add
mov
xchg
jmp
mov
ficompl
stos
and
jae
les
add
push
add
cmp
cmp
jecxz
add
add
add
mov
add
clc
jae
aaa
rcrb
pop
aaa
mov
bswap
mov
cwtl
mov
clc
ret
lods
mov
ss
add
lds
ret
data16
push
xchg
xchg
or
imul
in
mov
dec
je
ret
push
pop
add
add
add
jg
lahf
mov
pop
sub
add
mov
inc
xor
xchg
jmp
enter
mov
stos
xor
add
xchg
repnz
jae
mov
hlt
mov
mov
mov
repz
jecxz
mov
adc
ret
repnz
jae
fidivl
mov
fadd
mov
jbe
test
jne
pop
sbb
add
je
pop
sti
jecxz
add
dec
add
fdivrs
mov
dec
sti
ljmp
mov
add
pmaxub
mov
push
mov
lock
ret
lds
hlt
cmp
cld
aad
jp
push
ljmp
adc
ja
mov
repnz
jae
sbb
xchg
mov
mov
fsubl
sbb
dec
add
add
test
add
inc
add
add
icebp
sbb
sbb
das
rcrl
je
sbb
pop
add
pop
add
mov
enter
in
add
add
test
jnp
jle
inc
data16
add
rolb
rorb
add
push
mov
lock
ret
mov
xchg
test
add
pop
add
adc
pop
icebp
add
cmp
es
add
shl
dec
mov
ret
hlt
es
hlt
xor
test
mov
repnz
jae
xchg
mov
enter
bndstx
dec
test
dec
add
pop
add
outsb
add
jno
iret
add
jecxz
outsb
add
roll
in
push
jo
leave
lret
inc
loopne
clc
jae
mov
mov
minps
xchg
rcrl
inc
add
and
and
add
lret
jecxz
add
mov
bound
push
add
cmp
outsl
call
sub
push
lret
add
je
xor
add
arpl
int
vpminsw
or
repnz
jae
adc
invd
xor
xchg
add
mov
lcall
xchg
mov
inc
cmp
clc
jae
mov
mov
cmp
mov
jg
and
out
mov
pop
mov
rorl
mov
cld
lock
test
enter
jne
movups
xchg
mov
outsl
fdivrs
add
cmp
and
in
pop
add
fidivl
add
or
jns
data16
dec
bound
dec
add
adc
fidivrs
pop
pop
mov
add
and
call
cli
test
lods
cwtl
cmpsb
out
scas
inc
add
jle
or
push
stos
call
add
aam
add
add
loop
inc
add
daa
add
pop
add
mov
clc
jae
jno
fmull
mov
mov
invd
jmp
jno
or
add
mul
js
lret
shll
add
out
cmc
dec
ja
mov
add
xchg
add
xor
add
xchg
jmp
pop
or
test
add
cmp
or
nop
pop
sub
incl
add
mov
adcl
push
in
pop
add
add
add
cmpsl
mov
jno
mov
jl
inc
hlt
xor
add
stos
jmp
mov
fiaddl
adc
daa
mov
mov
shll
mov
jmp
sbb
mov
mov
mov
mov
cmp
add
add
movsl
inc
add
pop
add
push
and
add
mulb
add
fildl
lret
dec
add
add
fnstsw
stos
pop
fsubrl
jp
and
add
orb
fcomps
fidivrs
jmp
xchg
xchg
minps
mov
sbb
pop
xchg
jmp
xchg
call
fmull
mov
pop
xchg
push
add
and
jne
arpl
push
cmp
adc
cmp
push
loope
and
cmp
add
jl
mov
cmp
rcl
adc
add
mov
jb
repnz
jae
and
mov
jb
pop
add
je
adc
add
testb
insb
add
and
push
mov
lock
ret
jno
rorb
xchg
pop
add
pop
add
lret
in
pushf
fidivl
ja
add
cmp
cmp
js
test
add
xor
add
out
add
loop
add
push
add
add
push
jg
fidivl
sbb
inc
add
add
aam
enter
in
sub
std
lret
jmp
je
or
int
add
add
repz
ret
add
test
add
mov
add
add
popa
add
add
cltd
lret
or
add
push
mov
add
fwait
pop
add
lods
add
into
mov
sub
mov
jno
pop
addr16
lods
inc
add
in
and
inc
xchg
xchg
stos
incl
fcmovb
mov
aaa
mov
cvtpi2ps
ret
daa
je
jae
dec
xor
add
add
rolb
push
sub
xor
add
lea
adc
mov
mov
sub
clc
jae
stos
stos
test
lds
ja
mov
pop
add
stc
int3
int3
int3
add
add
xor
popl
xchg
add
add
and
add
mov
sub
pop
adc
add
add
les
fcoml
lea
or
pushf
clc
mov
add
rcrb
inc
add
add
add
add
mov
jno
cmpsl
jb
cltd
mov
bound
out
addr16
add
inc
or
movl
xchg
xchg
jmp
mov
mov
mov
test
aas
hlt
mov
fadds
jecxz
stos
pop
add
test
mov
negl
add
pop
add
adc
add
xor
adc
mov
xor
add
outsb
add
ret
add
int
adc
add
xchg
imul
or
mov
jne
xchg
jmp
enter
jno
mov
mov
or
xchg
xorl
psubsb
mov
xchg
sub
mov
add
inc
fistpl
adc
and
add
add
xor
sbb
cmp
repnz
jae
shlb
and
pop
js
mov
addr16
push
test
aaa
xchg
add
jo
and
mov
repz
jae
test
mov
mov
test
push
add
adc
jno
pop
jecxz
mov
negb
or
add
push
arpl
add
pop
cs
divl
jb
cld
out
add
mov
or
shrl
clc
jae
mov
xchg
mov
pop
mov
les
push
add
imul
add
sub
jmp
repnz
lret
add
push
add
dec
add
dec
add
jl
sbb
cli
dec
add
add
mov
pusha
add
sub
push
mov
mov
adc
add
add
or
mov
repz
jae
xchg
and
or
test
add
push
sub
jns
push
repnz
jae
xchg
mov
fistpl
hlt
fdivl
iret
inc
add
ja
scas
mov
push
add
xor
add
add
loopne
and
and
xchg
jmp
mov
adc
mov
xchg
pop
mov
jae
pop
add
and
mov
lock
ret
enter
xchg
add
add
out
adc
add
and
sbb
movsb
imul
jl
xor
scas
cli
shll
aaa
pop
add
add
dec
out
mov
out
pop
add
sbb
jecxz
into
jl
pop
add
add
add
sldt
scas
sbbl
xchg
inc
add
or
scas
cmp
add
add
testl
xlat
mov
mov
rolb
mov
add
push
clc
jae
enter
enter
fdivl
ja
sbb
daa
push
add
es
add
add
xor
mov
push
lea
sbb
add
jbe
pop
add
out
decl
out
and
add
mov
mov
pop
push
add
cmp
add
test
cli
or
push
and
arpl
and
add
je
add
add
push
cwtl
add
cmp
xchg
jnp
add
sub
jno
pop
mul
xchg
addl
jle
lock
add
adc
add
xor
cs
addr16
add
insl
add
add
jmp
hlt
mov
or
aaa
mov
mov
push
xchg
jmp
fidivl
and
hlt
stos
pop
mov
enter
add
pop
add
insl
add
std
mov
sbb
push
sbb
loop
add
xchg
sbb
mov
ret
outsl
fcoms
cmp
jno
jne
ret
add
scas
data16
lods
shrb
movsb
into
jecxz
pop
test
rorb
adc
add
add
cmp
xor
add
add
aad
mov
push
mov
mov
mov
jbe
mov
jle
mov
and
add
test
movsl
xchg
jmp
mov
call
mov
fdivl
popaw
call
or
xor
ret
aaa
add
jne
cmpsb
and
add
add
insl
pop
add
add
mov
call
jp
xchg
jmp
and
xchg
and
add
add
add
jmp
jo
jae
add
cmp
pushf
add
sub
push
add
sbb
hlt
pop
add
mov
loopne
jl
cmp
xchg
cmp
xchg
sbb
or
daa
mov
imul
movsb
xchg
inc
add
adc
add
add
insb
add
repnz
jae
adc
call
aam
mov
add
rorb
xchg
dec
add
add
mov
add
xchg
ret
xchg
mov
and
push
loop
adc
das
mov
rolb
les
xor
pushf
addb
add
fnstsw
jmp
add
add
pop
add
xor
add
add
add
adc
add
add
cmp
jl
mov
xor
add
sbb
xor
ret
and
shld
mov
add
add
push
adc
mov
mov
cmp
jmp
lds
pop
mov
and
sbb
mov
stos
jae
xchg
xor
inc
cmp
xchg
push
add
sub
add
fcmovnbe
jnp
sbb
adc
dec
aaa
stos
add
stos
shrl
and
inc
test
add
call
and
dec
xchg
xor
add
repnz
jae
rol
and
pextrw
and
es
add
dec
cmp
clc
jae
hlt
xchg
stos
pop
fmull
call
push
add
add
enter
and
add
add
fldl
and
push
add
shl
add
mov
add
sti
repnz
jno
and
add
mov
add
add
mov
add
out
inc
sar
in
mov
add
inc
mov
jne
inc
add
add
push
add
aaa
sub
mov
sti
pusha
add
add
insl
sub
out
faddl
inc
mov
push
mov
lock
ret
mov
jno
pop
jge
sbb
test
popa
add
gs
rolb
mov
clc
jae
test
fidivl
fimull
clc
jae
mov
mov
xor
add
add
dec
add
push
clc
jae
test
rorb
pop
imul
add
add
or
mov
push
add
push
add
push
add
dec
outsb
add
jmp
and
add
mov
mov
mov
add
es
test
sub
int
cli
add
and
add
addl
add
loope
add
adc
adc
xchg
jmp
test
mov
or
mov
mov
push
add
lock
aas
addb
lcall
test
loopne
push
mov
add
add
addps
std
xor
add
cmp
lret
add
movsb
xchg
xor
jg
pop
fstl
xorb
add
imul
add
mov
sbb
and
add
stos
jb
fcoms
xchg
push
ja
fcomps
add
add
cltd
pop
sbb
fmuls
movsb
std
sub
fldl
pop
inc
int3
int3
int3
daa
mov
add
add
cmp
add
add
push
add
inc
add
pop
add
xchg
enter
icebp
je
xchg
xchg
inc
mov
clc
add
inc
add
daa
sbb
test
push
clc
jecxz
arpl
add
std
out
sbb
mov
jbe
push
push
adc
mov
test
cmp
pop
xchg
cmp
orb
jg
mov
inc
pushf
xchg
packssdw
addl
adc
add
sub
cmpsl
jb
cwtl
mov
icebp
push
sbb
add
cmpsb
pop
add
and
imul
fiadds
cmp
jl
icebp
cmc
push
pop
add
or
push
dec
mov
mov
add
add
aaa
add
mov
jle
out
cmpsl
pop
out
jl
cmp
adc
add
add
ja
xchg
or
xor
push
jmp
add
xchg
out
pop
add
pop
add
mov
aaa
out
add
pusha
add
and
add
jle
adc
add
call
cwtl
mov
xchg
xchg
pushf
sbb
testb
pop
add
pop
mov
jae
in
mov
add
inc
add
in
mov
test
xchg
movsb
push
add
inc
addb
mov
add
xchg
mov
add
fldl
stc
iret
arpl
and
dec
add
int3
add
les
or
call
and
fcomp
imul
add
mov
add
add
inc
pop
pop
add
or
mov
push
outsl
add
clc
inc
add
in
inc
add
push
add
push
add
nop
inc
add
xchg
add
leave
adc
push
add
mov
sbb
insb
add
shlb
add
out
scas
dec
inc
add
mov
add
lds
aas
push
add
das
subl
data16
aaa
and
leave
pop
cwtl
cltd
push
cmc
mov
dec
add
pop
sub
dec
into
mov
orb
add
lock
in
push
add
inc
add
add
test
fcmovbe
test
jmp
lods
add
in
lods
lret
leave
add
cmc
scas
cmp
mov
data16
jle
and
add
cmc
mov
jg
add
mov
xor
or
iret
jne
add
int
pop
add
cmp
cmc
rclb
add
add
stc
add
cmc
movsb
sub
add
imul
xchg
pop
mov
add
movsl
mov
add
add
dec
sbb
add
inc
add
mov
add
repnz
add
ja
sbb
pop
rcll
add
sbb
push
movl
lods
cmpsl
mov
cs
jne
cmp
lds
cmpb
jo
in
aaa
jl
push
xchg
xor
add
add
mov
pop
add
lea
xor
shl
mov
add
cld
jmp
in
test
faddl
adc
add
add
data16
dec
add
sbbb
add
int
rcr
shll
xchg
add
jb
mov
jecxz
lret
add
push
and
popf
sub
dec
add
add
lret
mov
mov
or
cmp
pop
jne
mov
lahf
scas
fwait
sbb
mov
lcall
sbb
lcall
aas
stc
movsl
xchg
add
cmp
out
mov
add
cs
or
ret
pop
and
mov
add
testb
add
sbb
roll
xchg
cmc
in
jmp
jmp
mov
push
add
in
xchg
lods
adc
add
cmp
inc
add
mov
add
pop
add
icebp
add
xchg
call
stos
add
jmp
add
jns
imul
es
cmp
push
insl
add
sbbb
test
loope
cmp
insb
add
fidivs
ljmp
add
dec
add
add
jecxz
testb
int
bound
pushf
push
icebp
ror
into
in
add
add
add
cli
mov
xor
add
dec
add
sub
rcll
pop
dec
add
insl
pushf
shl
in
dec
add
add
add
add
add
add
addr16
ljmp
add
in
add
add
add
jno
add
add
push
add
mov
icebp
adc
cli
cmpsl
dec
inc
add
push
sbb
mov
out
add
sub
add
aam
int
add
push
add
or
testl
add
add
add
cld
pop
filds
inc
add
icebp
sbb
fwait
mov
xor
add
stos
scas
aas
insb
add
jns
add
cmp
inc
add
add
loop
int
dec
add
pop
add
mov
add
iret
add
mov
fucomi
mov
or
mov
cld
mov
js
fildl
pop
add
add
mov
add
add
mov
pushf
lahf
cltd
leave
sarb
add
stos
mov
lret
clc
imul
mov
add
xchg
xchg
push
add
or
add
cld
sbb
mov
or
bound
pop
add
addb
in
testb
add
call
push
add
cmp
jl
push
add
add
rcl
push
add
add
sbb
and
add
stc
mov
add
jb
dec
aas
sbb
mov
fldt
add
and
xorb
add
incl
cmp
repnz
insl
hlt
and
add
add
add
je
test
pusha
add
pushl
mov
push
in
repnz
inc
add
inc
add
sarl
push
dec
push
mov
pop
ret
sbb
lock
adc
add
mov
add
xor
add
jo
rclb
movsb
lods
nop
add
lcall
mov
add
leave
and
shrl
daa
fadds
ljmp
dec
add
xchg
les
add
push
push
lret
std
push
xchg
enter
add
imul
add
popf
mov
out
mov
add
mov
inc
add
ds
std
xor
push
cmp
out
cmpsl
push
xor
jmp
mov
mov
rolb
and
add
shl
pop
and
movsl
pop
add
inc
adc
add
mov
add
xchg
cmpsl
inc
subb
push
add
add
sub
cmc
lret
hlt
or
add
add
fcmovnu
xchg
add
scas
stos
aad
and
add
fidivrl
in
add
or
gs
out
mov
add
push
add
icebp
add
add
add
cwtl
data16
sbb
imul
in
aas
fcoml
mov
dec
jecxz
add
add
nop
dec
mov
add
push
mov
add
repz
add
lret
pushf
movb
mov
add
add
xor
add
icebp
test
xchg
jns
xchg
dec
out
mov
pop
add
dec
cmpsb
mov
pop
sub
mov
add
add
add
or
push
add
xor
add
jg
flds
add
xchg
add
add
add
movsl
mov
add
iret
mov
push
add
cmp
ret
inc
mov
js
xor
repz
add
repnz
add
add
cmp
pop
add
or
mov
and
add
push
sub
add
mov
xchg
mov
add
add
add
sbb
es
add
jl
mov
ljmp
aaa
sbb
int3
inc
add
lock
xchg
test
xor
add
mov
push
add
idivb
mov
testb
add
add
add
jns
sub
push
add
stc
inc
shlb
cltd
icebp
mov
rolb
shl
xchg
gs
fadds
or
add
fdivr
out
mov
add
lret
adcl
iret
dec
gs
add
pop
fwait
add
std
pop
das
inc
sbb
fpatan
add
mov
mov
xchg
iret
insb
add
popf
inc
aas
sub
ret
add
incl
imul
fsts
mov
dec
sub
stc
scas
outsl
push
and
in
pop
add
adc
and
add
or
push
add
int3
mov
in
sarb
pop
cmpsb
adc
fistpl
ret
mov
sbb
jbe
adc
sub
ja
and
and
add
scas
push
add
stos
sbb
fisubl
and
adc
dec
add
pop
mov
test
add
add
repnz
add
mov
loope
pushf
inc
pusha
add
test
repnz
pop
inc
mov
in
mov
in
add
add
push
xlat
add
std
fstpl
jecxz
add
jmp
data16
adc
add
add
and
adc
add
nop
pop
dec
add
add
adc
in
add
add
add
nop
int3
fildl
xorb
addb
mov
xchg
test
add
cmp
movsb
dec
dec
orl
jnp
xchg
out
scas
or
sahf
lahf
xchg
mov
cmp
sub
rep
rcll
cli
pop
arpl
sub
jns
add
lea
stc
add
fistps
add
add
and
add
or
fdivrp
mov
xchg
ficompl
add
pop
add
xor
add
ds
cmpsl
shr
or
sbb
cmpsl
pop
add
mov
pop
popf
jbe
fdiv
data16
sahf
xor
add
and
add
fmul
pop
orb
or
add
xchg
add
add
adcb
add
push
add
into
imul
jo
idivb
fdivrl
add
push
add
das
into
mov
repnz
mov
add
sarl
add
pop
add
push
jmp
add
mov
add
xchg
scas
add
movb
cmp
ret
mov
mov
xchg
add
add
cmp
arpl
lock
pop
js
aas
pop
add
xor
data16
dec
add
ret
enter
add
dec
add
les
mov
or
mov
add
add
inc
sub
mov
aad
int3
add
push
add
sbb
pop
add
mov
fistl
das
jge
jns
inc
into
enter
jg
add
adc
add
add
int
inc
add
push
add
loopne
cmp
mov
mov
sub
add
add
jl
in
mov
xchg
std
push
add
sub
clc
and
add
das
iret
fists
cmp
js
in
add
mov
stc
jae
jb
and
add
add
add
inc
rcll
add
pop
add
dec
add
xor
or
add
add
xrelease
sbb
sbb
rcrl
xor
add
cmpsb
lcall
add
mov
push
add
sub
xor
xchg
xor
sbb
mov
push
cmpsl
dec
das
dec
add
push
jl
loope
add
test
xor
add
lock
ror
and
add
cmpsl
imul
jno
mov
jge
out
jbe
jno
add
push
bound
fisttpll
xor
hlt
xor
add
xor
dec
lods
cmp
add
sub
add
pop
add
mov
xchg
add
add
call
add
add
jmp
add
popf
pop
add
jae
mov
call
lock
int3
add
add
xchg
aad
pop
adcb
dec
push
lock
cmpb
add
push
add
add
or
mov
sub
movsl
add
add
outsl
push
sahf
add
mov
daa
inc
add
add
dec
add
hlt
mov
addb
adc
filds
jl
dec
sti
dec
sbb
push
add
xor
add
rcrl
aaa
add
aad
push
add
fiadds
testl
roll
cmpsl
sti
mov
ret
sub
or
mov
mov
es
add
add
xchg
mov
bound
adc
add
mov
cs
dec
mov
add
add
add
lods
pop
add
add
dec
add
pop
add
cmpsl
and
add
add
sub
out
and
cs
dec
add
add
dec
add
add
mov
pop
xor
jns
loope
lret
or
sbbb
add
add
call
add
sahf
loopne
loopne
insl
inc
fsubs
testl
push
sub
fildl
or
ljmp
xchg
test
adc
add
pusha
add
add
dec
add
push
add
xlat
inc
xor
add
insl
push
add
add
adc
add
sahf
mov
movsb
out
mov
jl
pop
add
nop
and
jbe
adc
add
dec
add
inc
add
cmp
pand
loop
adcl
add
pop
add
mov
rcll
push
add
push
add
loop
test
jnp
pop
push
add
mov
jp
imul
add
and
add
sbb
inc
stos
jge
push
add
add
add
test
mov
add
xlat
mov
add
add
rep
fstps
gs
jns
push
add
test
add
xchg
or
lods
and
add
mov
push
out
rclb
add
add
in
lods
insb
add
dec
shlb
sub
push
mov
pop
out
add
xor
mov
add
add
out
cld
data16
arpl
sub
mov
xor
xchg
sub
testl
and
insb
add
or
add
mov
add
xchg
add
add
cmp
add
add
xchg
xchg
outsb
add
mov
add
and
addr16
imul
pop
add
loope
add
divb
mov
sub
fsubs
mov
loope
enter
add
push
add
jbe
and
add
je
mov
add
inc
push
add
repnz
imul
cmpsl
add
jnp
addb
and
add
jns
imul
add
fdivrl
add
pop
lods
iret
and
add
jmp
add
ret
sahf
cmp
lcall
add
add
add
add
enter
add
data16
roll
jl
movsb
mov
addr16
clc
dec
add
movsl
push
add
jl
inc
xchg
dec
std
xchg
ss
add
lds
add
mov
add
int3
ss
js
js
mov
add
pop
in
fildll
jmp
sub
scas
out
inc
add
mov
xor
sub
add
bnd
and
arpl
adc
dec
add
sub
ret
cmp
sbbl
add
inc
add
add
add
adc
xchg
lcall
add
xchg
js
pop
ret
fiaddl
and
xchg
push
add
xor
add
daa
mov
add
push
add
push
add
add
jle
roll
add
fisttpl
and
sbb
mov
cmc
into
cwtl
push
add
add
or
xchg
icebp
insb
add
add
ja
mov
add
add
add
add
test
addl
imul
mov
mov
nop
pop
add
inc
add
mov
call
add
add
jno
add
lea
add
mov
add
lret
add
test
outsl
push
dec
add
loope
jo
add
add
mov
push
push
ficomps
pusha
add
xchg
fwait
pusha
add
not
jae
xor
add
add
cli
loopne
add
jnp
add
sub
inc
add
fdivs
adc
add
add
push
add
dec
das
jmp
push
add
or
mov
add
repnz
add
add
lcall
add
cmp
roll
and
add
push
add
add
scas
xchg
push
add
mov
jbe
scas
imul
cmp
mov
lea
addr16
fwait
add
adc
add
dec
add
lahf
insb
add
clc
aas
popa
cmp
pop
add
sub
jb
push
in
and
jge
leave
mov
add
hlt
add
in
bound
sub
sbb
mov
movsl
add
inc
add
add
xor
ds
sbb
pop
add
test
call
jp
lcall
test
add
popa
flds
dec
add
sub
pop
or
add
loope
cmp
mov
jecxz
add
mov
cmpsb
sbb
sub
lret
stc
loop
cmp
test
add
add
lret
push
add
loopne
shlb
add
les
jmp
testl
out
add
pop
add
jns
fisubrs
add
add
add
pop
addl
jge
xchg
mov
inc
fisttps
adc
cld
loopne
mov
rclb
add
add
add
add
test
or
jno
mov
popa
dec
add
cmp
sub
pop
jo
loope
and
lock
arpl
add
add
jb
orl
popa
pop
rcrb
cmp
cltd
out
iret
dec
jo
or
push
add
mov
cmp
pop
add
mov
add
add
test
add
lcall
mov
hlt
add
out
mov
popa
add
sbb
in
xor
add
adc
add
pop
pusha
add
and
dec
mov
mov
add
add
xchg
add
add
add
loope
add
sbb
xchg
int
xchg
add
add
add
loop
scas
mul
out
aas
xchg
popa
fcoms
mov
add
add
cmp
or
sti
lods
jno
iret
in
pop
push
xchg
cmp
cmp
xor
out
in
fadd
clc
sub
inc
stos
cmp
mov
movsl
xchg
sub
aaa
insb
add
jno
pop
add
xchg
sbb
adc
out
cmc
sbb
fildl
andl
adc
add
push
out
add
sub
imul
scas
inc
inc
or
inc
add
jl
lret
add
sub
dec
add
sar
fwait
mov
sub
push
int3
lret
pop
pop
add
add
repnz
add
add
pop
add
repnz
add
add
subb
insl
movsb
mov
mov
gs
es
add
shrb
inc
add
xchg
fld
insl
jl
aas
xor
mov
jecxz
out
mov
add
add
add
lcall
add
sub
mov
xlat
loope
aam
dec
sbb
repz
lock
lret
int
push
add
ret
add
sbb
jo
mov
fwait
scas
or
shrb
fisttps
add
rol
mov
adc
push
add
nop
clc
pop
testl
add
idiv
sbb
add
xor
push
jne
add
add
int
rol
mov
lods
arpl
inc
add
mov
or
jle
push
add
pop
add
add
cwtl
jnp
dec
add
jno
lods
movnti
add
or
fwait
daa
or
dec
add
adc
jl
adc
sbb
dec
in
es
add
push
fidivl
add
in
jno
int3
push
scas
add
dec
cli
push
rolb
in
pushf
sub
daa
stc
add
daa
add
xor
imul
push
add
inc
ja
add
lret
iret
xchg
loopne
add
add
pop
lds
les
xor
add
in
lahf
sub
pop
add
add
lret
add
push
add
lds
mov
dec
pop
add
je
dec
out
add
or
fmuls
sub
ret
push
add
add
mov
push
mov
lret
inc
push
add
and
add
inc
sbb
xor
or
add
add
mov
add
mov
add
lods
mov
add
mov
popa
add
adc
adc
mov
xchg
mov
add
add
fcoml
jno
in
fdivp
daa
pop
add
add
out
in
lds
add
bound
push
add
mov
daa
test
add
add
jg
xchg
and
add
dec
aas
mov
mov
sub
add
fadd
mov
sub
fcmovnbe
mov
mov
push
movsb
cwtl
xchg
push
add
jle
jg
add
add
add
cmp
test
mov
cmp
add
add
xchg
push
flds
and
add
sti
xchg
lea
add
lock
inc
add
add
add
add
xor
out
and
add
add
inc
ja
jae
push
push
mov
add
cmpsl
xor
add
push
mov
add
add
mov
inc
sbb
mov
fstps
sbb
xchg
sub
arpl
cmpsl
mov
pusha
add
inc
fwait
adc
add
push
aam
lcall
add
add
mov
add
mov
jecxz
add
adc
mov
add
shl
outsb
add
lds
in
sbb
and
add
dec
addr16
add
sbb
inc
into
and
pop
jl
lods
mov
add
sbb
test
fadds
loop
fwait
mov
mov
or
test
test
mov
jo
lahf
ret
push
add
add
bound
or
addr16
push
add
cmp
add
add
cmc
lock
faddl
push
push
xchg
dec
das
pop
add
sub
push
fwait
add
mov
mov
add
add
pushf
xchg
aam
add
push
iret
lock
test
ja
pop
jbe
mov
and
push
add
aas
test
imul
sbb
test
mov
jl
push
add
mov
insl
sub
jg
les
loopne
push
add
add
sbb
je
cltd
xor
add
xor
add
dec
add
dec
stos
sbb
ret
xchg
mov
roll
shl
or
mov
sub
test
lret
addb
cmp
in
popa
fists
sub
lea
adc
pop
add
bound
jecxz
push
cmp
cmpsb
add
add
dec
fdivp
fldl
add
or
aam
daa
add
add
add
pushf
rcll
add
aad
test
cmp
push
xchg
mov
inc
ja
rolb
jl
sub
dec
loope
or
cmp
mov
out
sub
jl
pop
in
cld
adc
pop
stos
add
rolb
add
outsb
add
lret
xchg
mov
addr16
xchg
pop
add
shr
imul
stc
call
scas
sub
add
dec
add
dec
insb
add
jbe
push
mov
leave
xchg
or
fsubl
add
insb
add
jb
mov
xchg
and
add
add
add
cltd
mov
add
jno
cld
add
xlat
dec
add
add
add
icebp
add
add
ret
pop
out
mov
fcmove
hlt
adc
add
inc
add
ds
setbe
rclb
add
faddl
out
add
cli
mov
add
push
add
stc
insb
add
xchg
ss
add
mov
jnp
cltd
add
pop
add
push
sbb
mov
dec
add
fwait
add
add
int3
add
bound
pop
pop
add
push
inc
add
sbb
cld
gs
and
add
add
out
aaa
push
jb
push
arpl
add
add
mov
ds
push
add
push
add
jmp
jo
inc
add
add
in
call
cmp
or
mov
in
pop
adc
mov
adc
add
addb
add
cli
in
dec
add
push
add
rorl
popf
add
pop
rcl
add
gs
add
fcoms
mov
fwait
xor
add
add
cli
mov
add
xchg
out
iret
jecxz
outsl
fidivrs
mov
sub
mov
add
add
cmp
add
mov
pushf
mov
adc
add
cmp
jo
and
add
add
cmpsl
add
push
bound
popa
or
inc
pop
push
push
mov
test
add
fabs
mov
add
push
sbb
pop
add
inc
add
mov
mov
jns
add
ret
out
outsl
es
add
adc
lods
push
push
add
sbb
pop
outsl
add
mov
mov
add
fwait
or
aam
mov
cmp
mov
add
xchg
in
and
add
jmp
cmp
jmp
nop
lahf
aaa
addl
mov
add
test
das
pop
jecxz
add
je
pop
add
je
dec
lahf
add
add
test
inc
add
adc
add
filds
pop
add
add
add
jns
add
repnz
pop
mov
mov
scas
xorb
mov
add
stos
out
push
popl
in
inc
add
xor
add
push
leave
movb
out
adc
in
or
xchg
xor
add
ss
push
add
mov
out
push
add
add
data16
pop
mov
jecxz
add
ss
add
xor
mov
jbe
sbb
add
xor
add
mov
xchg
fldcw
cwtl
in
ljmp
xchg
jmp
add
mov
add
add
das
aas
cmpsb
pop
add
nop
lods
sarl
ljmp
in
jbe
push
or
add
add
adc
pop
add
in
jl
push
test
popl
popa
mov
in
mov
imul
pushf
insl
orb
add
push
add
add
das
dec
negl
nop
inc
push
loopne
cmp
add
sbbb
or
mov
clc
push
or
add
push
add
add
jg
and
add
fstl
xchg
add
mov
sti
in
pop
add
stos
je
add
pop
add
add
cld
shrl
ret
dec
add
je
add
add
nop
add
add
add
in
add
pop
add
daa
sbb
add
add
ss
aam
push
add
rolb
mov
xchg
icebp
mov
lahf
stc
mov
add
mov
add
mov
push
sbb
sbb
add
mov
cmpsb
and
mov
icebp
push
add
std
add
aad
cmp
aam
fmuls
push
add
pop
mov
ret
mov
pop
add
adc
add
aaa
imul
out
pop
add
push
add
lds
popa
and
aad
sarb
cli
daa
push
pop
sub
or
sbb
mov
push
dec
add
and
add
push
add
xchg
adc
add
add
daa
rolb
jle
mov
daa
cmp
or
mov
or
sbb
mov
in
sub
and
add
in
mov
sbbb
data16
jl
loopne
fiaddl
shl
add
push
add
stos
lock
xchg
xchg
add
out
mov
scas
sbb
lods
dec
mov
bnd
sbb
dec
sahf
jmp
xor
pop
add
inc
add
dec
add
mov
add
xchg
add
jns
mov
add
add
inc
add
lret
mov
sub
test
mov
pop
jbe
xor
test
jnp
leave
dec
add
mov
sub
dec
ret
xchg
jmp
add
add
pop
add
pop
out
pop
add
jle
pop
add
lcall
add
pop
and
add
push
lods
fpatan
stc
xchg
test
sub
mov
lds
stos
inc
add
out
push
daa
out
add
mov
mov
outsl
add
sub
cmp
jg
stos
push
cmpsl
add
push
mov
or
push
je
pop
add
cmp
push
call
add
push
jge
mov
add
add
leave
add
push
add
in
push
add
out
add
testl
dec
leave
cld
fcoml
sbb
cld
push
mov
jmp
cld
add
add
lock
fwait
add
add
in
cmp
jp
or
jmp
nop
inc
testb
adc
add
cmp
sbb
jbe
or
add
mov
icebp
sub
gs
enter
adc
mov
push
or
insb
add
rorl
adc
pop
fimuls
add
jns
scas
sub
xor
push
incb
cmp
mov
add
push
add
pop
add
insl
dec
mov
xorl
add
add
in
arpl
mov
lahf
lahf
xlat
fucomi
in
add
test
daa
add
ja
pop
add
add
add
loopne
add
stc
push
add
xchg
mov
in
sub
sahf
loop
scas
xor
repnz
inc
add
mov
sbb
pop
add
add
xchg
mov
repnz
add
sub
add
nop
mov
inc
pop
add
add
cmp
xlat
out
add
cmc
add
sub
test
test
xor
mov
add
cmc
add
and
mov
cmp
cmp
popa
push
add
add
add
add
add
gs
je
mov
or
and
add
in
fimuls
js
add
rcll
dec
in
insl
adc
into
add
daa
scas
add
testl
cmc
int
push
add
add
push
add
adc
add
inc
add
add
stos
add
out
jmp
mov
add
add
push
add
adc
add
loop
ljmp
adcb
inc
adc
mov
inc
add
add
mov
mov
jo
in
pop
add
enter
shll
insb
add
xchg
inc
add
pop
add
xchg
into
ljmp
add
add
pop
add
mov
cmpl
add
add
add
cmc
stos
add
push
add
fstl
dec
add
pop
and
mov
dec
add
mov
push
add
test
add
cltd
sbb
add
lahf
add
pop
add
add
add
sbb
sbb
xor
ss
lret
xlat
bound
ret
xorb
add
roll
add
mov
ljmp
in
mov
add
xchg
lret
pop
mov
faddl
xchg
test
xor
add
add
mov
dec
add
add
mov
sbb
or
add
or
fldenv
lock
add
scas
dec
add
movsl
fisubl
pusha
add
pop
stc
fdivs
push
xor
add
add
dec
add
cltd
add
jno
addb
mov
loop
add
ret
cmp
adc
inc
frstor
test
incl
lcall
testl
add
add
add
mov
bound
pop
add
inc
add
add
testl
rol
loope
push
add
repz
add
xor
add
cld
inc
aas
out
lret
mov
jo
ss
add
leave
leave
dec
lods
adc
add
addr16
sbb
inc
out
push
pop
add
add
stc
xor
add
enter
jecxz
pop
test
add
sub
rorb
add
add
add
stc
cli
adc
add
and
add
add
mov
lahf
shll
add
aas
sbb
jae
mov
clc
add
jl
clc
call
xchg
dec
add
adc
loop
add
and
mov
push
add
ss
xchg
rolb
xlat
pop
xor
add
mov
add
ss
fwait
roll
scas
mov
add
out
rcll
ret
add
mov
sarl
add
push
add
push
add
xlat
fnstsw
xor
add
add
add
cmpsb
data16
cld
add
add
add
in
sbb
call
push
add
push
add
lods
pop
mov
mov
paddq
add
mov
outsb
add
jg
xchg
fmul
data16
sub
sbb
jge
fistl
stos
mov
add
add
lods
add
add
sahf
push
add
add
pop
add
movb
stos
pop
xchg
test
loop
repz
xor
add
jne
mov
mov
add
cmp
lret
add
mov
push
add
fcomps
insb
add
cmc
fdivs
add
lahf
add
xor
sub
add
out
dec
add
and
add
ljmp
pop
fistl
mov
pop
leave
cmp
add
jle
mov
add
fstpl
aad
lods
jecxz
push
add
iret
stos
inc
add
mov
add
cmpsb
imul
add
add
leave
add
not
fwait
dec
roll
pop
add
add
add
rol
or
ja
pop
add
popa
stos
add
pop
add
and
add
push
add
add
inc
add
nop
add
adc
add
psrad
push
push
inc
add
cltd
lods
ljmp
push
inc
add
ficompl
add
sub
cli
cmp
repz
add
repnz
mov
push
cltd
cld
mov
icebp
mov
pop
add
xor
pop
add
mov
adc
add
popf
sub
xchg
adc
add
add
sub
shl
aad
nop
inc
add
into
pop
add
js
shll
fwait
xor
clc
bound
jg
add
mov
xor
shll
sbb
mov
mov
dec
add
mov
add
add
mov
repz
dec
fs
push
add
stos
aam
add
mov
mov
fisubrs
add
mov
jle
test
add
nop
sub
sub
fwait
inc
add
xchg
sbb
jne
push
inc
add
cmp
mov
add
inc
loope
xor
mov
add
xchg
add
test
into
lea
insb
add
sub
adc
add
add
xor
add
in
add
clc
es
and
mov
repz
aaa
jne
mov
add
add
pop
pop
lcall
add
lret
mov
divb
lret
pop
imul
and
add
imul
and
inc
add
xor
or
aad
add
iret
jmp
and
add
add
imul
add
fnclex
jne
sahf
ret
xchg
cmp
addl
add
sbb
sbb
daa
testb
add
jl
jl
xor
sbbb
aaa
sbb
pop
daa
add
mov
add
orb
sbb
lds
sbb
push
imul
add
roll
add
stc
popf
fistl
mov
cli
jo
pop
gs
in
dec
add
into
add
add
negl
push
mov
xchg
sti
movq
imul
add
repz
add
out
and
add
push
add
add
add
sub
xchg
cmp
cmpb
add
scas
add
aad
dec
add
cmp
mov
adc
sub
mov
cmp
mov
add
movsb
fcoml
cmp
cwtl
sbb
out
imul
imul
js
xchg
repnz
pop
add
nop
add
sbb
arpl
xor
mov
bound
inc
jmp
adc
mov
sarl
add
add
add
add
pop
mov
ljmp
stc
dec
add
sub
insl
aas
mov
add
lods
rorl
inc
add
imull
pushf
clc
fcmovbe
ss
add
mov
jnp
add
mov
shll
je
cld
pusha
add
call
fdivr
cmp
insb
add
add
cmp
cltd
jge
scas
outsl
punpckhbw
idivb
shlb
add
mov
incl
or
inc
add
nop
lret
push
add
fdivr
aam
add
add
icebp
in
add
add
lcall
scas
sub
add
rorb
imul
fadds
jecxz
sub
lds
mov
aad
jle
xor
mov
add
xchg
push
jecxz
testb
jae
add
inc
mov
popf
jae
add
in
add
xor
add
repnz
mov
adc
add
outsb
add
xchg
add
add
xchg
bound
jl
test
stos
data16
add
rcl
push
fiadds
jns
mov
clc
add
add
add
inc
jecxz
add
add
jo
pop
xchg
std
add
clc
push
add
mov
daa
inc
add
loope
lds
cmp
mov
popa
movsl
ljmp
add
sub
and
add
xor
add
inc
add
adc
pop
daa
lods
add
add
inc
mov
lret
and
add
cmpsb
lahf
xchg
test
es
add
sub
mov
xor
scas
adc
add
lea
add
inc
add
add
popa
jecxz
sub
stos
std
mov
sub
xor
add
add
outsl
popa
xchg
addr16
pop
bound
loop
mov
cmp
or
inc
add
fnsave
in
add
add
mov
and
lahf
mov
fbstp
shl
mov
es
pop
add
add
add
ja
push
add
cmp
and
add
push
add
daa
add
je
je
mov
jnp
add
mov
data16
push
or
cmc
iret
cmc
out
rorl
add
add
push
fdivrs
xchg
mov
push
and
scas
aad
add
add
add
dec
add
or
push
add
add
jb
mov
add
testb
add
jl
into
orl
add
add
jns
xchg
push
add
add
add
push
add
movsb
pop
das
xchg
in
into
mov
add
add
add
iret
fistl
jo
pushl
ljmp
xor
add
loopne
add
add
cmpsb
add
aaa
add
into
and
add
mov
insb
add
dec
addb
add
add
add
mov
jno
test
sbb
add
enter
inc
add
adc
add
add
enter
add
adc
xchg
std
repz
add
pop
add
add
jl
push
add
add
dec
add
mov
cli
in
and
add
test
mov
negb
add
add
add
push
add
addb
test
xor
lahf
cmp
sbb
jo
jnp
mov
lret
je
add
push
jle
or
lret
add
pop
jmp
mov
aam
jo
fildl
add
mov
jbe
aas
xor
add
sbb
jb
clc
dec
inc
add
rcll
je
adc
add
or
xchg
cmpb
add
mov
pusha
add
xchg
lods
cmp
add
add
ja
movsb
and
add
dec
pop
dec
add
add
mov
mov
pop
add
popf
dec
add
jp
add
add
sbb
adc
add
data16
enter
and
xor
insl
jno
out
nop
jb
into
adc
add
mov
sub
shrl
add
pop
add
ljmp
add
add
lods
dec
lcall
xchg
jle
cmpsb
or
jbe
jmp
ja
sbb
gs
mov
jmp
js
and
add
scas
add
add
mov
xchg
popf
clc
sub
add
clc
add
cmp
lret
inc
add
lods
inc
add
lock
add
dec
pop
add
outsb
add
push
add
sbb
fwait
jb
popf
cwtl
mov
lods
push
add
sbb
or
jge
add
fadds
xchg
add
inc
add
mov
shlb
sub
cli
or
fldt
out
icebp
dec
mull
ret
add
mov
add
imul
imul
dec
and
add
cmpsl
loopne
test
adc
and
add
test
sbb
fnstsw
add
xchg
stos
adc
add
or
mov
add
xchg
std
xor
add
add
and
push
add
cmc
or
mov
dec
add
push
add
sbb
test
dec
add
enter
xchg
rcll
add
ja
add
lds
into
out
arpl
jle
sbb
aad
adc
or
cli
mov
jno
add
or
push
and
add
add
add
push
add
mov
test
inc
add
addr16
lahf
or
push
fimuls
add
mov
pop
lahf
xor
adc
add
loope
daa
addl
xchg
push
insl
sbb
jmp
add
sbb
mov
add
jle
mov
add
xor
sbb
scas
push
add
loope
add
add
int3
add
and
in
sarl
mov
jnp
fiaddl
or
pop
add
pushf
mov
add
mov
loope
add
call
pop
add
testb
sti
jle
and
add
lods
js
xor
add
add
add
or
cmp
pop
adc
add
and
mov
imul
and
add
adc
inc
xchg
test
add
mov
out
add
out
xor
push
xchg
jbe
popf
cmpb
imul
add
add
mull
mov
jns
mov
and
add
add
xlat
scas
mov
js
jns
jne
or
inc
add
push
add
add
into
mov
popa
sbb
push
and
jmp
or
data16
cmpb
xorb
mov
sbb
pop
les
mov
je
jae
mov
pop
cmp
fisttpl
push
push
add
sbb
aas
sbb
push
mov
pop
add
inc
mov
and
shlb
insl
add
pop
enter
inc
les
xchg
xchg
jnp
cli
xor
add
inc
add
mov
dec
lds
xchg
into
mov
add
mov
add
lock
add
add
mov
push
add
popf
stos
mov
add
imul
filds
loop
xchg
mov
jg
add
add
jnp
cli
data16
adc
push
test
xor
add
add
sbb
pop
add
js
inc
add
outsl
add
add
add
jnp
push
lret
add
pop
jno
dec
add
add
in
mov
mov
lcall
scas
leave
mov
mov
add
cmpsl
std
dec
out
sub
cmpl
scas
bound
jg
xor
add
add
out
add
add
outsl
out
into
adc
dec
add
push
add
pop
add
mov
sbb
fnsave
bound
sbb
sub
cltd
mov
bound
jb
adcb
add
jmp
mov
test
pop
inc
add
imulb
add
stc
xchg
xlat
ret
in
and
add
adc
mov
pop
add
add
arpl
add
inc
add
bound
jno
inc
popa
in
inc
add
pop
add
pop
add
sbb
mov
add
add
add
add
sarb
cmp
inc
add
sbb
inc
icebp
ud2
push
add
or
scas
lret
add
add
xchg
xor
add
shl
add
add
mov
xlat
sbb
cmpb
loopne
test
gs
mov
sub
scas
mov
fdivr
insb
add
dec
add
fisttpl
inc
adc
test
and
cmpsl
in
mov
or
mov
mov
insl
jbe
cmpsl
xlat
xchg
call
sub
bound
xchg
je
xor
add
aas
loope
rorl
sub
push
adc
jg
mov
outsl
cmp
sbb
aam
or
sbb
lret
xchg
sti
aas
mov
mov
mov
add
xchg
mov
jle
lahf
inc
add
cmp
add
add
test
add
push
add
cmpsb
add
ljmp
bound
fstl
adc
mov
imul
repnz
movsb
and
add
cmp
arpl
lock
push
add
push
mov
lods
mov
xor
fisubrl
lret
pop
add
add
jecxz
test
pop
add
stos
daa
jmp
push
jge
sbb
cmp
adc
and
add
push
add
sub
imul
add
mov
adc
add
jg
mov
mov
sarl
lods
aaa
mov
dec
add
loopnew
add
shld
inc
add
popa
jnp
mov
add
test
add
xchg
jns
ljmp
inc
or
fcmovnb
cmc
leave
jp
into
lods
jnp
cmp
loope
popf
addl
sbb
push
repnz
add
aam
add
movsl
ljmp
mulb
dec
add
mov
sbb
xor
sub
mov
dec
add
dec
add
add
add
adc
add
test
pop
add
clc
push
add
xor
out
or
or
mov
xchg
add
out
add
add
jg
stc
jg
add
sbb
daa
cmpsl
add
add
mov
mov
add
or
add
add
add
push
add
jle
out
push
inc
add
mov
cmpb
mov
add
adc
je
pop
das
add
je
cmp
sub
cmp
add
push
add
add
popl
adc
and
out
cli
jmp
push
add
mov
push
idivl
cmp
add
add
sbb
loopne
adc
add
mov
add
add
xchg
scas
xchg
icebp
add
add
lea
clc
call
or
pop
add
mov
aam
adc
cmp
jns
sbb
cltd
pop
mov
mov
jg
cmp
fsubrs
dec
add
negl
jb
in
add
add
or
mov
xchg
mov
add
scas
add
sub
push
add
pop
add
popa
pop
add
js
lret
and
add
call
add
or
fistpll
add
sub
sub
adc
add
mov
add
dec
add
push
add
add
mov
sub
dec
sbb
stos
add
xchg
ds
fmuls
int
sbb
aad
cmp
bound
test
add
dec
add
stos
ss
mov
add
ret
add
sbb
mov
add
xchg
dec
add
outsb
add
add
push
mov
and
add
fistps
test
and
call
insb
add
add
add
add
add
add
jo
cli
test
sbb
add
and
add
add
xor
add
add
jne
les
pop
add
in
stc
aas
rcr
aaa
imul
add
xor
add
sbb
fwait
pop
loop
mov
int
cmp
je
mov
ret
inc
add
add
pusha
add
lea
jnp
jle
mov
fsubs
or
add
and
jecxz
add
ficoml
push
mov
lahf
pop
mov
sub
fsubs
add
loope
dec
notb
push
inc
add
inc
xchg
lcall
add
add
lock
movq
jnp
ja
stos
cmc
fsubrs
jno
loope
add
dec
add
add
lret
cmp
bound
inc
inc
add
adc
mov
jns
rcll
push
divl
cmp
xchg
lahf
mov
data16
jne
icebp
adc
add
add
movsl
add
mov
nop
bound
roll
movsl
add
add
jp
push
mov
add
repz
rcr
or
cmpsl
lods
enter
scas
mov
adc
test
orl
sbb
mov
cmp
jmp
ss
mov
adc
add
jnp
xchg
inc
add
ret
add
leave
test
add
cmp
loope
add
and
add
add
les
outsl
add
xchg
lds
popa
add
iret
iret
xor
add
add
add
add
dec
cmp
add
jle
mov
push
mov
nop
pop
add
pop
add
mov
mov
cmp
xlat
sarb
mov
xchg
adc
add
lret
add
jne
test
cmp
mov
add
add
mov
inc
add
sub
lcall
inc
call
pop
add
test
add
add
adc
add
mov
popa
add
add
add
leave
pop
and
adc
add
cld
xchg
add
xchg
dec
add
push
lret
add
loope
lods
add
sbb
push
jno
add
into
xchg
frndint
jg
xor
add
jge
out
jae
cmpsb
cmp
inc
add
xchg
cmc
repnz
lock
push
lret
in
or
ljmp
fildl
or
data16
add
adc
add
mov
add
lea
jnp
rcrl
mov
fldcw
flds
data16
or
mov
cmpsb
xorl
sbb
popf
ds
push
adc
mov
addb
imul
xor
add
or
test
stc
mov
in
imul
mov
jb
pop
aaa
or
test
add
push
add
sub
outsb
add
cmpl
jp
dec
shl
ljmp
scas
push
add
add
add
add
incb
cltd
movsl
int3
cli
cwtl
xchg
repz
add
in
add
jg
dec
daa
in
mov
xor
and
add
insl
add
add
sbb
and
outsb
add
incl
inc
add
add
xchg
leave
lret
cmp
je
test
and
add
cmp
jbe
inc
add
into
xchg
in
rcr
insb
add
cmp
xchg
add
jbe
mov
push
add
cmpsl
test
or
bound
stc
out
test
add
sub
mov
fnstcw
pop
stc
scas
mov
add
mov
add
jno
adc
add
add
lcall
xchg
es
add
sub
out
insl
cld
add
add
dec
ja
add
jp
pop
pop
ljmp
add
add
pslld
push
cmpsl
in
and
add
add
imul
fucomp
xchg
imul
xchg
add
add
es
dec
add
add
int
insb
add
shlb
add
xor
add
mov
add
dec
add
jg
loopne
add
in
loop
outsb
add
add
lahf
mov
add
mov
add
test
sub
ja
add
and
das
push
sub
mov
push
add
add
add
adc
cltd
or
outsb
add
pop
inc
mov
enter
and
add
add
add
add
je
and
add
push
cmp
push
add
jne
sbb
jp
pop
add
add
dec
add
aaa
push
add
add
add
jecxz
ja
cmp
xchg
mov
xor
jecxz
adc
ret
cld
mov
mov
add
mov
dec
jnp
in
add
mov
sub
lret
das
addr16
add
xor
add
cmp
dec
ljmp
add
shl
std
daa
mov
orl
jl
cld
jno
xor
add
mov
sbb
js
inc
add
and
add
or
inc
add
add
mov
scas
imul
push
cmc
sbbb
push
push
add
repz
dec
add
push
add
inc
add
js
dec
add
add
mov
add
sub
add
loop
rcl
add
arpl
sub
jne
or
daa
pop
add
jg
pop
add
loop
push
add
add
xlat
clc
inc
mov
cld
add
and
add
adc
add
sti
add
mov
sub
ret
bound
into
mov
add
fwait
xor
aas
cmc
lds
add
in
sahf
xor
add
outsl
push
add
or
lcall
sbb
add
adc
jmp
add
add
add
add
add
mov
test
jnp
lods
imul
lret
add
or
stos
insl
or
cmp
sub
lahf
orl
cmpsb
jge
pusha
add
xor
filds
out
mov
rcll
dec
dec
js
out
xchg
fildl
xor
push
add
add
add
add
movsl
xchg
test
xchg
push
mov
add
xor
add
repnz
add
add
add
lahf
enter
std
mov
sbb
lds
push
add
fsubrp
jnp
push
add
dec
and
add
cwtl
jne
jo
pop
add
inc
stc
je
icebp
jno
sub
insb
add
and
add
mov
or
fisttpl
and
add
add
pop
add
loope
jo
adc
add
test
dec
or
js
es
inc
lcall
repnz
add
or
add
andb
add
ret
add
xchg
add
cmp
lods
jl
cmp
xchg
cmp
cmc
push
add
adc
add
jae
test
jle
hlt
frstpm(287
pop
add
repz
add
mov
in
mov
or
dec
add
jo
lcall
mov
push
fldcw
mov
add
add
add
xchg
add
add
ja
mov
xor
add
add
pop
jno
pop
add
int3
xchg
lods
xor
arpl
add
jne
dec
add
loopne
sub
mov
add
pusha
add
in
add
lcall
add
add
je
shlb
jl
add
push
gs
sbb
cmpsb
sbb
insb
add
add
int3
jecxz
flds
fwait
in
push
xchg
enter
sbb
rorb
xchg
pop
add
cmp
rolb
rcll
push
mov
add
pop
pusha
add
subb
clc
int
and
xchg
jbe
push
push
ret
andb
add
mov
mov
decb
add
pop
add
adcb
or
pop
push
add
imul
add
inc
lea
cmp
xchg
in
cmpsl
jecxz
add
or
xor
add
and
add
fmuls
ja
shr
je
add
inc
add
sahf
ljmp
xchg
xchg
add
jmp
adc
add
flds
and
add
add
ljmp
or
aaa
ltr
sub
push
mov
sbb
push
add
sti
push
xchg
add
mov
jb
dec
add
xor
sub
test
add
ffreep
sbb
stos
sahf
or
push
add
add
sub
iret
pop
add
add
adc
arpl
pop
add
add
popf
add
adc
add
mull
pop
dec
mov
or
in
xor
add
inc
movsb
and
add
add
in
insl
sbbb
outsb
add
ret
hlt
out
sub
mov
xor
add
iret
xor
add
iret
pop
out
test
dec
add
pop
sbb
mov
sbb
xor
add
dec
jecxz
cs
or
add
add
add
dec
add
ret
add
jl
sbb
outsl
mov
and
add
pop
sbb
xlat
repz
std
and
add
mov
pop
shlb
add
pcmpeqd
into
loop
or
ljmp
adc
add
jae
mov
in
insb
add
out
loopne
fiadds
loop
call
lahf
popf
adc
fidivrl
loop
bound
cmp
out
out
ljmp
inc
add
and
in
add
sbb
stc
add
stc
and
imul
xchg
add
add
inc
add
add
xor
add
lods
jb
js
cmc
inc
jnp
lret
push
dec
push
test
add
inc
add
bound
sti
inc
divb
inc
add
add
insb
add
mov
daa
add
mov
pop
add
addl
sbb
sbb
mov
mov
jl
stc
xchg
and
add
aaa
add
adc
test
cmp
push
pop
add
jecxz
mov
fwait
sub
sbb
add
jl
mov
test
cmp
pop
lret
cmpsb
pop
cmp
add
mov
sbb
adc
add
xor
add
add
push
add
adc
add
add
cmpsb
add
pop
add
mov
add
fwait
je
mov
add
add
or
test
or
cmp
fcompl
icebp
and
mov
and
fucomp
shrl
add
xchg
sub
cmpsb
lock
sbb
and
add
scas
in
jo
adc
add
push
add
inc
add
add
xor
pop
cltd
add
daa
xor
scas
mov
out
xor
pop
adc
add
int
add
push
add
add
jp
mov
push
and
out
add
add
or
push
xchg
add
lret
add
add
aaa
in
adc
popa
arpl
add
inc
xchg
sbb
aaa
fildl
out
add
jno
cmp
xchg
leave
hlt
adc
add
add
fbstp
aas
and
add
add
sbb
xlat
xchg
cmpb
pop
add
test
inc
add
jb
mov
mov
add
cmp
js
inc
push
sbbl
xor
add
sbb
jae
cwtl
jo
js
out
call
pop
filds
add
add
fiaddl
mov
roll
xor
push
mov
add
shr
cmp
jb
mov
outsl
add
add
add
add
imul
add
es
imul
add
add
js
out
push
ret
fistps
ret
fldenv
roll
mov
cmp
andl
add
sub
xor
rcrb
cli
or
cmp
js
mov
in
dec
aas
call
push
add
stc
cmc
lret
mov
cmp
mov
movsl
or
cmp
cmp
add
add
add
aad
mov
pop
in
orps
pusha
add
sbb
sub
jle
orb
add
and
stc
push
cmp
lods
cltd
xor
add
add
xor
mov
add
mov
push
loop
lahf
add
xchg
out
das
add
sub
push
fadds
repz
push
sbb
movl
sbb
add
add
cmpsl
idivl
mov
mov
push
add
jg
cmp
dec
dec
add
add
inc
test
add
add
aaa
add
addl
push
inc
jg
add
jmp
stos
iret
push
add
add
add
lret
fcom
xor
push
add
popa
jno
pop
or
popa
mov
xor
lods
mov
dec
pop
mov
push
pop
mov
inc
and
add
add
add
ret
lds
fimull
fiadds
add
clc
int
out
inc
add
jo
mov
std
and
add
daa
cltd
add
add
xor
xchg
xchg
cmpsb
dec
in
rcll
inc
pop
add
je
imulb
jno
mov
add
add
add
mov
add
f2xm1
xor
add
scas
je
or
inc
add
add
aad
add
add
aad
into
mov
dec
add
add
clc
sbb
xor
and
add
sub
and
nop
add
and
rol
pop
sti
xchg
pop
add
test
xchg
pop
add
mov
and
push
dec
clc
scas
jp
mov
mov
test
xor
std
inc
add
loop
cmpsl
push
add
add
add
adc
or
sub
xchg
call
jl
sbb
or
mov
add
add
add
sbb
mov
sahf
add
mov
dec
pop
add
mov
add
jecxz
add
add
ss
add
pop
insb
add
inc
add
push
push
add
les
roll
aad
popf
rclb
add
test
hlt
iret
jge
out
jbe
addl
add
add
push
add
mov
add
addl
add
rolb
lahf
xor
pop
mov
xcrypt-cbc
cmpsl
push
leave
shll
adc
add
add
imul
cmpsl
pop
sub
mov
sub
xor
add
pusha
add
add
lret
in
add
or
aaa
stc
add
mov
add
pop
add
loop
add
aam
mov
pop
add
stc
mov
add
add
subl
iret
xor
push
data16
xor
add
pop
add
testl
or
adc
add
push
add
popa
inc
add
imul
lds
push
add
pop
add
add
out
fnstenv
mov
dec
in
mov
and
addr16
xchg
or
lock
inc
add
insb
add
jo
int3
lods
daa
addl
sub
dec
add
jecxz
add
lock
ror
mov
daa
popf
add
add
inc
add
add
mov
add
nop
mov
add
dec
lret
mov
jne
imul
add
jno
sqrtps
andl
add
or
hlt
std
lds
add
add
dec
add
pop
add
notb
je
inc
push
in
add
mov
roll
jae
add
mov
add
adc
add
jne
mov
mov
out
and
shlb
movsl
add
add
add
lods
add
shl
mov
add
incb
scas
xor
add
loopne
outsb
add
addr16
test
sub
ffreep
scas
das
ljmp
add
fdivrl
add
pop
add
std
shl
clc
jno
xor
add
mov
add
add
xor
add
lods
add
hlt
fcmovne
lds
add
je
xchg
xchg
jno
sub
imul
data16
arpl
cwtl
mov
add
add
adc
test
jnp
add
in
add
add
lcall
in
push
stc
data16
or
sti
jne
test
sbb
popf
sbb
mov
mov
lahf
int
rolb
add
inc
mov
sbb
add
mov
test
das
xchg
mov
or
mov
push
add
lock
aaa
lret
sub
mov
pop
add
mov
pop
stos
xor
add
mov
fwait
jecxz
fbstp
xor
pusha
add
dec
add
aad
add
enter
add
and
inc
sub
and
add
mov
xchg
mov
push
add
mov
sub
int3
mov
popl
xchg
sbb
in
sti
fisubl
add
dec
add
xchg
push
add
stc
add
add
xchg
or
xchg
mov
pop
out
add
add
add
mov
inc
xlat
popf
inc
iret
add
add
xor
add
pop
inc
add
idivb
mov
and
add
cmp
cmp
cmpb
shll
int
cmc
rcrb
or
add
cmc
or
xor
sub
push
add
push
add
ljmp
test
cmp
pop
add
add
fs
ss
cmpsl
jns
add
dec
add
and
add
lds
add
sub
jno
sub
rorl
add
xchg
pop
and
add
clc
add
sbb
cmc
and
add
add
xor
add
mov
inc
add
es
add
sub
jae
xchg
nop
add
and
mov
cmpsl
sbb
enter
and
testl
and
lcall
add
popa
xchg
add
jge
mov
fwait
aas
ss
jb
idivb
dec
jnp
and
add
mov
sti
adc
scas
std
mov
rorb
mov
push
test
div
mov
sbb
cmp
push
add
dec
les
lock
jae
add
daa
xor
push
add
add
sbb
jnp
test
bound
mov
aas
sub
jle
lret
pop
add
mov
out
push
lahf
jnp
stos
or
pop
aaa
cmpsb
add
xchg
sbb
hlt
jbe
fstp
imul
das
add
daa
les
mov
sub
insb
add
add
mov
add
sbb
iret
dec
fs
ror
xchg
xor
add
cwtl
push
push
fdivl
sub
in
mov
pop
add
sbb
stos
mov
lods
popa
push
pop
add
popa
mov
inc
inc
movsl
pushl
or
js
filds
push
add
filds
test
and
add
pop
add
pushl
shll
pop
add
test
inc
fmul
scas
sbb
add
add
xchg
stos
mov
jbe
iret
cmpsb
enter
inc
test
les
stos
pusha
add
add
add
dec
aad
lret
out
shll
mov
mov
jl
xor
add
adc
add
incb
aas
scas
mov
insb
add
xor
jge
fs
jmp
shr
into
mov
cli
push
aaa
add
pop
add
add
nop
or
inc
imul
mov
mov
xlat
mov
jae
subb
mov
or
add
pop
add
ja
push
add
int3
sbb
adc
xchg
add
add
inc
stos
into
loopne
mov
icebp
add
inc
test
add
add
jnp
mov
sahf
pop
or
dec
add
sti
sbb
adc
or
fisttpll
add
mov
mov
pop
and
add
lods
add
adc
add
adc
repz
and
xchg
xor
addb
push
cli
call
popa
adc
add
xlat
add
add
sub
outsl
clc
in
jnp
gs
daa
and
cmpsl
nop
xchg
mov
mov
outsb
add
roll
xchg
cli
mov
popa
hlt
jge
inc
add
fsubs
outsb
add
mov
out
ss
add
xchg
cmp
fndisi(8087
add
loope
or
cmp
jns
mov
add
jno
les
sub
scas
mov
add
sbbb
icebp
punpckldq
pop
add
cmp
pop
leave
outsb
add
add
popa
mov
mov
adcl
les
outsb
add
add
pop
mov
jb
push
add
lcall
add
mov
sbb
jge
outsb
add
repz
cmp
jbe
lock
cmp
xlat
add
add
add
jb
push
add
jg
roll
add
idivb
jge
and
add
outsl
lea
add
add
rolb
popf
and
scas
mov
add
jle
lcall
lods
or
adc
jb
jge
add
test
add
sub
sbb
ss
xchg
adc
add
add
pop
int
fs
out
adc
add
push
aam
nop
inc
std
mov
aas
arpl
xor
add
push
jp
mov
cmp
scas
aaa
dec
add
stc
lcall
mov
mov
push
out
xchg
push
add
pop
add
add
xchg
mov
in
or
xchg
movsl
mov
pop
add
xlat
cmc
sbb
ss
out
xchg
add
add
nop
add
mov
pop
xchg
and
add
inc
fisttps
inc
add
in
bound
lahf
add
mov
movsb
shr
iret
xchg
sbb
cmpsl
xchg
icebp
hlt
and
add
add
leave
add
popa
cmpsb
adc
add
add
nop
and
add
mov
push
add
into
xlat
inc
push
fadds
lock
pushf
into
dec
fsin
aaa
incl
lret
add
jo
into
lcall
mov
add
pusha
add
sub
add
mov
inc
add
xlat
sub
shrb
mov
add
int3
xchg
outsb
add
add
add
add
lret
lods
enter
pop
mov
jbe
iret
mov
pop
mov
fwait
mov
add
dec
mov
jno
add
mov
mov
pop
jns
inc
push
xchg
mov
pop
add
or
cwtl
nop
jecxz
and
add
jbe
pop
add
and
rcrl
mov
loopne
add
cmc
ret
mov
xor
add
jbe
cmp
add
dec
add
insb
add
add
cs
inc
add
inc
add
cmp
add
cltd
mov
sub
add
add
add
pop
adcb
and
and
sbb
xchg
xchg
pushl
jg
mov
add
jnp
sub
pop
mov
push
add
pop
xor
dec
sarb
shl
pop
add
mov
cmpb
add
add
or
mov
cmp
mov
or
sub
add
faddl
repz
add
cltd
jb
xchg
or
dec
add
hlt
jp
cld
sub
add
add
xchg
icebp
je
mov
dec
add
add
mov
jle
mov
mov
inc
add
dec
add
add
fcompl
dec
fldcw
or
add
loopne
add
add
enter
add
add
mov
add
insl
pop
xchg
dec
mov
xor
add
dec
les
aad
daa
movl
add
sbb
cltd
test
add
add
das
add
add
add
add
movsl
xor
add
jb
push
or
and
add
push
scas
add
scas
add
lcall
mov
roll
mov
ja
bound
inc
push
inc
add
cmc
mov
addr16
jle
push
arpl
add
dec
add
xchg
cli
call
ss
lahf
or
pop
add
nop
jb
jge
adc
add
aam
mov
repz
xor
or
arpl
pusha
add
testl
dec
add
add
cmp
scas
iret
jb
jmp
jne
bound
ret
add
sar
sub
add
push
add
mov
xchg
lds
add
sti
add
fidivrs
cmpsl
popa
adc
sbb
mov
add
xor
sti
repz
push
add
pop
mov
xchg
mov
add
dec
add
leave
add
addb
add
ss
add
sub
int
add
mov
lret
xchg
push
add
pushf
adc
mov
mov
add
scas
pop
xchg
cmp
testl
lock
scas
lcall
popf
push
add
sub
add
scas
rorb
add
add
test
sbb
jbe
dec
push
dec
add
jg
or
and
adc
inc
add
add
xor
add
idivb
call
jb
mov
adc
mov
add
add
add
je
icebp
aad
add
add
adc
add
inc
add
aaa
test
or
mov
add
push
adc
call
mov
data16
xchg
add
mov
jecxz
add
push
cwtl
push
add
loopne
insl
push
mov
and
add
std
les
add
add
add
add
movsl
xchg
and
mov
test
ljmp
fldl
inc
dec
add
add
and
sbb
sar
inc
add
and
add
pop
add
testl
stos
add
push
add
adc
call
pop
add
sub
pop
jnp
lcall
add
jl
nop
push
iret
fcoms
bound
cli
movsb
popf
mov
test
movsl
repz
jecxz
inc
add
xor
sbb
mov
add
dec
add
lahf
rolb
in
es
add
xchg
in
add
fiadds
jb
loop
imul
add
or
sub
shll
jg
rcll
mov
aas
xor
add
sub
dec
inc
add
stos
xor
add
rcrl
add
jne
idivb
stos
add
xor
or
sarb
arpl
cld
add
cmp
ja
add
mov
xlat
test
push
add
inc
out
gs
out
add
dec
add
add
int3
add
testl
jp
add
add
jge
mov
popf
jecxz
xchg
add
add
outsb
add
dec
cld
roll
mov
jno
add
int
sub
mov
sbb
filds
es
add
cmp
add
add
mov
pop
jmp
flds
pop
jae
movsb
test
jo
adc
out
add
sub
add
push
add
jne
add
jne
or
lods
loopne
sti
mov
jp
push
bound
es
cld
and
dec
jl
add
add
adc
add
add
mov
mov
jp
pushf
and
xchg
add
xor
add
xor
pop
outsl
dec
add
mov
lods
out
push
fcom
xchg
outsb
add
mov
xchg
mov
cli
add
xor
add
push
add
lods
mov
in
mov
mov
nop
dec
add
sarl
cli
sbb
xor
add
dec
add
jmp
push
add
lea
in
add
adc
add
xchg
into
pop
addr16
adc
pop
ret
xor
push
call
or
es
add
add
scas
les
or
pop
add
inc
cmpsl
jmp
outsb
add
scas
loop
sar
leave
xchg
test
sub
add
mov
clc
add
push
or
out
push
add
add
lahf
sbb
loope
fnstsw
add
mov
call
lret
add
andb
add
mov
cmpsl
ret
pop
add
lret
add
add
add
mov
add
imul
add
cmp
sahf
mov
enter
in
out
add
pop
add
stos
leave
rclb
rolb
sbb
outsl
in
add
inc
add
pop
add
cmp
fsts
add
add
cmp
cmp
pop
jae
imul
div
test
scas
movsl
and
notb
into
or
sub
xor
movsb
inc
aam
mov
inc
add
test
imul
popa
test
and
xor
add
sub
mov
pop
add
xor
add
jne
push
add
mov
int
jno
pop
add
add
bound
or
imul
stos
xchg
negl
xchg
dec
add
hlt
inc
add
outsl
cmp
add
data16
dec
add
mov
test
add
add
add
add
imul
dec
jecxz
jns
mov
add
add
out
pop
add
xor
cmp
pop
add
push
add
add
add
in
push
or
add
stos
arpl
add
or
into
dec
add
xorb
mov
hlt
mov
loope
sbb
push
add
fsubrs
add
jge
push
in
insb
add
icebp
in
imul
daa
adc
lea
aaa
loop
popf
xor
add
xchg
outsb
add
loop
push
add
mov
movsb
adc
add
pushf
cmpsl
sub
pop
incl
mov
mov
add
movsb
fwait
push
add
mov
mov
and
add
movsb
mov
add
ficomps
add
lcall
add
add
adc
pop
add
fcmovb
sbb
jmp
add
ds
inc
add
sub
bnd
add
test
ljmp
call
sbb
shll
repz
xor
add
roll
jbe
jno
xchg
loope
pushf
icebp
nop
xchg
mov
add
inc
add
add
out
add
aaa
xchg
add
fcomp
push
add
xchg
push
push
push
add
mov
pusha
add
sbbl
rcrl
imul
sbb
aad
scas
add
jae
test
mov
add
pop
jnp
xchg
add
cmpsl
xchg
push
add
inc
inc
clc
mov
add
add
pop
add
dec
add
out
sbb
in
sub
xchg
repz
in
faddl
lea
mov
add
icebp
push
add
cmpsl
xor
add
inc
sub
push
add
jl
jns
jp
gs
loop
test
dec
add
xchg
int
add
add
testb
dec
mov
or
push
add
cld
jae
add
aaa
sti
add
test
sub
sub
in
mov
sbb
xor
fucomp
or
addl
add
adc
add
pop
and
add
mov
jae
xchg
sbb
jae
stos
lods
aas
cmp
das
fdivl
mov
add
push
add
xor
adcb
rolb
sbb
fsubrs
add
pop
xchg
mov
add
ret
jle
in
push
test
mov
add
adc
add
sbb
add
es
outsb
add
test
outsb
add
in
and
add
and
jmp
push
add
into
scas
inc
add
xchg
add
fiaddl
les
mov
sarl
add
gs
sarl
add
iret
add
lock
add
xlat
and
out
fiaddl
and
add
clc
add
sub
fistl
ret
hlt
inc
add
test
loopne
xchg
add
out
add
add
dec
add
rcrl
in
jmp
xorl
dec
add
add
dec
add
pop
pusha
add
call
in
push
bound
stc
inc
add
cld
add
outsb
add
mov
lock
add
orb
dec
jl
xor
add
add
or
rcrb
add
xchg
add
pop
add
jecxz
rcl
cmpsl
push
jne
jbe
mov
iret
jge
xor
cmp
adc
call
dec
add
shll
ret
add
lret
les
and
jg
jne
push
push
mov
add
add
sbb
icebp
pusha
add
outsb
add
push
xor
add
into
aam
addl
dec
add
or
jo
rcrb
repnz
scas
or
mov
fsubrs
fucomp
xchg
pop
sbb
jbe
fimull
stos
xchg
cmp
scas
mov
fstl
add
add
mov
dec
add
hlt
add
and
add
add
inc
add
sbb
clc
cmpsb
and
add
mov
add
add
cmp
sbb
andl
mov
xlat
icebp
or
push
add
xchg
out
pusha
add
cli
add
out
hlt
push
add
add
jo
push
add
jmp
loopne
dec
add
push
dec
xor
add
add
and
pop
add
add
and
add
add
sahf
add
push
add
sbb
inc
add
sbb
das
mov
xchg
rorb
push
add
add
inc
add
xchg
sub
add
and
imul
push
add
push
fiadds
sub
pop
cmp
inc
enter
pop
push
and
add
sbb
das
add
add
dec
add
sbb
sti
inc
add
std
add
add
push
xchg
sub
mov
mov
mov
into
int3
mov
add
xor
add
icebp
pop
lds
test
mov
xchg
into
mov
mov
in
fidivs
leave
sbb
cld
lret
mov
adc
jg
cltd
aas
inc
inc
arpl
mov
sbb
hlt
rcr
sbb
scas
fdiv
jge
inc
add
fnstsw
fdivs
xlat
add
sarl
sub
leave
aam
push
add
add
and
add
movsl
dec
add
fnstcw
jno
adc
pop
add
cmc
in
scas
movsl
or
add
xor
add
int3
mov
out
repz
add
scas
js
addr16
mov
xchg
xchg
out
ret
add
add
cmc
inc
add
jle
dec
add
mov
add
bound
xchg
aad
into
outsb
add
push
add
sub
add
stos
sub
hlt
aaa
fildl
xchg
jnp
mov
add
xor
jo
adc
mov
add
add
rcll
add
cli
gs
movsl
push
test
jb
jo
cld
cmpsl
lea
lock
mov
sub
or
jle
aad
add
rclb
in
push
add
add
xor
add
add
xchg
add
icebp
add
cltd
jb
popf
andl
mov
add
add
mov
fcompl
aad
stos
mov
adc
rolb
add
add
push
add
xlat
sub
add
sbbb
mov
sub
cmpsb
pop
mul
notb
add
ret
out
adc
add
dec
adc
add
add
mov
cmc
fldenv
stos
add
das
fmul
xor
add
shll
movsl
add
je
in
add
add
add
pop
add
movl
add
pop
pushf
mov
imul
test
ja
icebp
dec
and
add
add
mov
add
pusha
add
add
add
pop
daa
fs
rcrb
clc
pop
add
ret
movsb
mov
add
add
fimuls
js
js
push
mov
jbe
rcll
popf
mov
add
adc
add
add
add
mov
daa
mov
sarb
mov
push
sbb
add
das
repnz
pushf
add
pop
and
jo
sahf
xor
jne
dec
push
mov
inc
add
or
pop
jae
jbe
lret
add
inc
add
add
add
jge
sbb
add
fistpl
add
lods
cs
popa
adc
popa
nop
idivb
rclb
mov
jb
and
add
out
mov
test
lcall
mov
fidivrs
or
mov
dec
add
mov
xor
add
mov
push
add
jp
mov
or
cmp
jp
adc
add
dec
adc
add
cld
add
stos
xor
add
ss
sub
mov
push
add
add
or
add
add
sbb
mov
in
xchg
push
add
sub
arpl
outsl
add
sbb
lods
pop
test
xor
add
dec
add
add
push
cmp
notl
jb
xchg
js
addr16
inc
fistpll
pop
incl
jno
sub
leave
aam
fldenv
aaa
out
push
add
mov
and
hlt
lods
add
xchg
add
mov
push
add
ret
xchg
xor
push
push
xchg
mov
popf
loope
rep
or
sub
mov
fucomp
shr
jl
lcall
mov
xchg
mov
sub
xor
and
loope
dec
add
mov
jo
cld
outsl
push
add
or
push
pop
add
stos
push
ljmp
rcrl
sub
rorl
pop
add
push
add
add
push
jge
add
mov
lahf
cmp
incb
rcrb
add
or
add
sub
movsl
lcall
iret
addb
add
mov
adc
add
jne
data16
sbb
add
add
incb
add
xchg
push
add
stc
lret
aad
sub
add
rorb
addl
add
inc
add
cmc
xchg
push
add
mov
daa
jb
cwtl
aad
jne
jo
andb
add
adc
push
outsl
movl
and
lods
jae
push
add
test
sbb
xor
inc
rcrb
ja
add
imull
cmp
dec
add
add
add
adc
add
inc
cmp
enter
imul
mov
ret
repz
add
inc
add
and
mov
dec
add
aaa
roll
xchg
into
sub
xor
add
into
add
sub
mov
mov
add
add
insb
add
rcrb
clc
xor
add
fisttpll
dec
push
inc
add
xlat
add
ficoml
fadds
cmp
xorb
add
orl
out
jo
addr16
lods
notb
enter
cvtpi2ps
xchg
leave
add
pop
add
int3
add
xlat
adc
add
lea
add
jnp
add
add
pop
add
jle
insl
mov
pop
fisubrl
add
out
mov
xor
sarb
add
sbb
or
aaa
pop
add
in
mov
add
mov
add
xchg
dec
dec
add
flds
movsb
jb
push
add
repz
adc
popa
fisubrl
add
adc
add
sbbl
jg
pop
add
mov
cmp
dec
nop
mov
add
add
nop
lret
mov
loop
pop
add
xor
pushf
pop
add
fdivrs
rolb
add
jnp
lods
add
add
add
ret
inc
xchg
into
aaa
add
stc
xchg
lods
dec
add
add
mov
jl
push
add
iret
ss
mov
add
shll
adc
mov
add
and
add
jmp
add
mov
out
mov
scas
std
shr
aam
push
xor
add
popl
jge
cli
add
add
addl
das
dec
je
jno
and
add
sub
ljmp
sub
sbb
sub
inc
add
das
data16
popf
jbe
stos
cmpsb
pop
dec
mov
fcom
jne
sub
lea
mov
add
lcall
mov
add
mov
mov
pushf
inc
rorl
add
add
or
jne
add
les
pop
add
into
dec
pop
add
and
add
lret
popf
ljmp
add
add
shl
scas
jl
fwait
sub
insl
aas
jp
mov
add
pop
add
pushf
imul
pop
add
sahf
pusha
add
mov
and
add
pop
add
scas
repnz
push
push
out
cld
into
sub
cltd
mov
loopne
push
sbb
xor
ficoml
pop
add
push
popa
sbb
fistl
add
icebp
xchg
out
lods
jno
nop
dec
sar
cmp
fwait
jo
imull
mov
lods
push
pop
je
push
or
stos
outsb
add
add
xor
inc
cmc
mov
cmp
bound
mov
pusha
add
cmp
lock
or
jnp
add
and
sbb
lahf
mov
adc
mov
mov
and
add
fwait
pop
add
repnz
adc
inc
insl
pop
sbb
enter
dec
add
xchg
add
adc
out
xor
pop
xor
pop
pop
stos
repz
jge
lods
mov
ret
imul
add
cmp
inc
mov
mov
sub
ja
xchg
adc
add
enter
inc
add
add
add
jnp
adc
rol
insb
add
ret
pop
fldl
lcall
imul
inc
push
les
jge
fldenv
xchg
add
mov
add
into
iret
jmp
add
fsubrs
daa
jbe
jmp
jp
cmc
sbb
and
mov
add
add
inc
mov
push
add
pop
add
stos
hlt
cmp
jae
std
add
incl
and
add
add
sbb
paddusw
iret
popa
test
imul
xchg
add
push
mov
pop
into
push
add
add
or
xchg
dec
jge
mov
sbb
xchg
pop
insl
mov
leave
push
add
and
add
fmull
mov
aam
mov
or
push
jle
fiadds
add
outsb
add
add
add
add
add
add
xchg
mov
sbb
idivl
xchg
lret
xor
xchg
mov
inc
outsb
add
push
pusha
add
add
jns
lods
dec
add
add
pop
mov
add
aam
xchg
adc
add
pop
add
xor
add
inc
add
mov
pusha
add
fwait
add
add
add
out
add
add
sbb
mov
mov
pop
add
aad
jb
mov
add
xsha1
cmpsb
iret
pop
jp
repz
inc
add
in
push
add
add
inc
pop
negb
dec
add
push
and
lahf
dec
dec
add
add
mov
push
add
add
add
repz
add
jge
push
add
mov
pop
add
push
push
add
mov
cmp
dec
add
or
pop
add
into
test
add
mov
add
sbb
dec
push
add
push
movsl
sahf
jae
add
sbb
add
or
decl
add
xchg
cmpl
push
add
sub
add
sti
and
movsb
add
rolb
adc
add
cmp
jae
add
xor
mov
inc
add
dec
add
sub
lds
call
lds
add
lock
ret
sar
cmp
mov
pop
add
jmp
xor
add
outsl
and
mov
mov
add
data16
mov
repnz
cwtl
out
cmp
cltd
insl
in
roll
test
je
pop
mov
add
adc
add
data16
lret
pop
dec
jmp
pop
sbb
test
push
add
rcrl
add
dec
add
cmp
pusha
add
ljmp
pop
push
add
pop
add
xchg
mov
loop
adc
inc
sbb
push
dec
dec
sbbb
dec
add
cmc
mov
add
imul
add
jns
mov
add
or
add
add
mov
in
add
and
add
xchg
in
push
pop
add
lock
out
scas
je
inc
add
lahf
loope
test
lcall
add
add
ret
add
add
add
test
ss
add
dec
add
add
add
and
lret
fdivp
stos
add
add
add
cmp
or
jno
push
add
inc
add
or
add
add
add
int
push
add
adc
bound
xchg
fisttpl
jg
test
hlt
icebp
xchg
add
add
jae
int
xor
mov
add
cmp
ja
add
movl
mov
cmpsl
sub
in
adc
cmp
pop
in
aas
imul
popl
dec
add
add
movsb
mov
mov
or
out
jle
fwait
ror
add
sarb
and
push
add
add
add
cmpsl
lcall
add
dec
add
cmc
push
add
add
and
add
sbb
cmpb
testl
add
add
sbb
adc
mov
xor
add
mov
pcmpeqb
xor
add
loope
sbb
daa
out
icebp
popf
fsub
cli
movsb
xchg
out
add
ja
lret
int
add
imul
add
add
sbb
add
int
push
add
add
mov
or
inc
std
sub
xlat
fnstcw
adc
and
add
outsl
out
mov
dec
sub
int
add
jns
xlat
xchg
rcrb
cmpsl
std
stc
inc
add
jg
mov
xor
add
leave
add
mov
fwait
add
or
mov
leave
dec
xor
add
jo
push
add
add
add
add
xor
add
inc
add
push
add
icebp
clc
adc
inc
add
add
movsb
sbb
add
cld
mov
imul
add
add
adc
add
push
fwait
aam
inc
add
scas
add
xchg
xchg
loop
mov
gs
lret
mov
add
mov
inc
add
cmp
add
xor
add
loop
pushf
and
add
add
add
xlat
add
add
xlat
add
ltr
rcrl
add
pop
add
fldcw
test
mov
push
add
xor
add
ja
mov
add
cmpsl
mov
lahf
clc
sbb
cmp
repz
add
lock
add
add
add
push
add
adc
add
pop
push
pop
add
in
push
data16
pop
add
fistl
lret
sahf
jmp
jl
jmp
lret
cld
xlat
mov
into
add
add
dec
push
add
mov
and
data16
cmp
xor
je
cwtl
loop
stos
jbe
sarl
mov
daa
push
add
pop
incb
mov
add
cltd
pop
add
add
add
sahf
add
inc
icebp
jbe
aas
aaa
dec
add
daa
add
add
sbb
ljmp
add
add
add
add
add
cmp
cmpsl
add
pop
jg
push
rolb
mov
adc
sahf
incb
mov
addl
iret
sbb
out
insb
add
mov
add
out
add
into
add
movsl
cmpsb
rcl
xlat
mov
cli
mov
add
stc
cmpsl
cmp
mov
xchg
add
add
add
rcr
ret
add
inc
add
dec
add
lahf
cmp
testb
add
add
sub
mov
cmp
scas
testl
add
pop
add
pusha
add
das
lods
cwtl
xchg
rol
lcall
push
lds
outsl
xchg
or
shld
mov
add
xlat
add
xchg
call
hlt
mov
bound
dec
movsl
shrb
js
mov
sbb
mov
push
dec
xchg
minps
jecxz
rcll
data16
add
add
push
xor
add
aam
mov
sub
add
mov
add
push
inc
cld
cmp
jmp
dec
add
clc
adc
add
shrb
jns
xchg
lret
add
inc
add
in
test
add
shlb
add
call
cmp
add
adc
add
and
add
mov
and
mov
loopne
xor
add
stc
cmc
popa
fsubl
aaa
lods
add
mov
adc
or
pop
add
add
mov
add
add
jp
dec
out
ljmp
add
adc
js
push
add
jbe
inc
add
test
pusha
add
or
adcb
add
mov
jp
out
xor
mov
enter
add
mov
jmp
addb
add
xchg
sub
add
sub
mov
push
add
dec
mov
and
insb
add
add
xor
add
ljmp
jle
icebp
andl
add
add
add
sbb
jno
add
lcall
cwtl
imul
sbb
mov
scas
gs
in
movsl
push
add
dec
add
mov
mov
sub
in
cld
orb
mov
pushf
and
sbb
sbb
mov
out
adc
cld
je
idivb
stc
add
js
cmp
sub
sub
mov
add
bound
and
mov
mov
add
add
dec
jnp
dec
popa
shlb
add
std
add
push
inc
add
add
pop
add
xchg
pop
add
sub
mov
aad
xlat
add
add
loopne
test
insl
push
add
out
push
jg
es
add
add
sbb
push
mov
mov
lret
mov
add
add
adc
add
xchg
in
aaa
repz
cld
add
push
add
cs
insl
test
or
imul
loope
stc
gs
fwait
shll
leave
out
or
adc
add
add
fwait
add
add
push
add
and
add
nop
data16
jl
push
iret
sbb
push
inc
add
je
imul
add
push
add
add
addb
into
add
mov
outsl
push
add
or
add
movsb
dec
add
jl
sub
leave
add
icebp
das
movsl
aad
mov
mov
mov
mov
insb
add
mov
je
int3
andb
push
add
stos
or
js
jne
add
fisttps
adc
outsl
into
insl
fstpt
insb
add
iret
into
push
add
imulb
test
push
jbe
test
xchg
mov
add
lock
insb
add
or
xchg
sbb
or
outsb
add
jg
rolb
stc
jg
cltd
dec
xor
add
adc
add
add
add
sub
in
dec
push
add
out
or
jbe
jo
push
adc
push
sbb
add
add
mov
movsl
ss
add
cmp
add
add
xchg
or
add
aas
shlb
add
mov
in
movsb
sub
xchg
loop
mov
xchg
add
adc
add
sahf
mov
add
out
std
fmul
mov
out
in
addr16
add
push
in
insb
add
mov
add
mov
add
fisttps
add
add
insl
add
lcall
enter
repnz
sbb
sub
data16
add
outsb
add
add
jecxz
aad
cld
leave
adc
xchg
mov
dec
mov
add
roll
push
add
inc
add
jo
sbb
sbb
sub
cmpsb
sti
jmp
mov
pop
add
inc
add
out
add
mov
jno
hlt
mov
jmp
add
add
addr16
fidivrl
add
clc
cmp
sbb
loope
pop
add
addr16
insb
add
lods
mov
add
xchg
sbb
fmull
mov
add
iret
mov
sbb
mov
int
jge
sbb
mov
xor
inc
add
in
add
cmp
int
dec
add
movsl
loop
add
out
add
aam
movl
add
add
popa
repz
and
jg
in
int3
fmul
popa
dec
add
add
push
add
jmp
lods
pop
add
cmp
ret
add
or
ljmp
aad
out
iret
or
sbb
lods
dec
shrl
mov
push
add
inc
sahf
stos
js
pop
inc
xor
cmp
adc
mov
and
data16
std
int3
in
mov
movl
mov
add
in
add
add
jmp
test
lock
imull
aad
add
and
inc
add
test
push
inc
shlb
add
xor
jmp
add
push
mov
add
in
dec
test
out
mov
push
add
adc
add
sub
fldt
push
pop
add
ret
rcr
sub
push
add
lods
rolb
add
shrb
dec
add
sub
xchg
jmp
bnd
sub
sahf
ret
pop
sub
sahf
sub
xchg
add
movsb
add
add
add
add
movb
ljmp
dec
jmp
push
add
push
add
adc
jmp
push
or
sub
ret
shll
add
nopl
outsb
add
mov
push
pop
add
xor
add
test
aaa
sub
add
pop
dec
add
pop
stc
push
xchg
add
jnp
mov
mov
sub
stos
add
add
repnz
mov
into
add
adc
add
jp
lahf
popa
cmp
jbe
or
inc
add
add
js
out
out
pop
add
jmp
dec
add
sub
inc
add
jo
out
add
xchg
fildll
test
jmp
lock
mov
loop
shlb
add
in
inc
into
test
inc
add
add
or
orl
push
add
fdivrl
call
sub
add
xchg
jmp
add
add
into
push
add
add
lods
adc
les
add
jno
sub
xor
call
sbb
dec
orb
idivl
clc
xchg
call
cltd
cli
outsb
add
mov
jl
xchg
push
xor
add
cli
add
push
add
fwait
mov
add
out
pop
add
movl
sbb
add
add
and
leave
push
add
jns
dec
add
inc
add
mov
adc
add
js
andb
dec
add
std
add
jbe
xor
rcrb
mov
jmp
cmp
push
pusha
add
add
fstp
lods
push
jge
mov
fisttps
aas
inc
add
dec
ss
jns
dec
add
cwtl
inc
push
push
add
daa
jbe
lock
dec
add
fmulp
je
and
xor
mov
jb
mov
andb
frstor
sub
push
add
add
push
add
xchg
add
ret
mov
js
xor
add
scas
inc
add
cli
add
mov
cmp
xchg
insl
xor
out
jg
add
add
jle
arpl
daa
inc
add
add
lret
test
jl
aaa
fadds
fucomip
push
fwait
lcall
cmp
push
add
push
fnstenv
addb
sbb
dec
add
fisttpll
and
add
and
aam
adc
add
ljmp
ljmp
sub
imul
rol
aam
add
xchg
inc
shl
dec
and
in
imul
lcall
stos
jecxz
popl
rcl
mov
pop
gs
addl
mov
xor
add
jmp
lds
loop
xchg
divl
jne
aad
dec
add
ljmp
or
in
mov
aam
add
add
scas
jb
mov
fwait
jecxz
mov
add
and
add
frstor
add
adc
add
jmp
or
mov
stos
cwtl
and
leave
call
sarl
add
adc
add
in
scas
data16
mov
and
mov
in
pop
add
sbb
mov
subb
dec
add
jbe
int
mov
adc
add
imul
divl
fimull
xlat
sbb
sub
movsl
mov
add
std
fs
inc
add
lds
add
js
pop
mov
xchg
fcmovne
les
cmpl
mov
push
test
fimuls
pop
add
or
adc
add
mov
jge
jecxz
mov
subb
pop
add
jmp
movsl
add
repnz
dec
add
mov
xor
add
add
ss
add
or
into
jecxz
mov
outsl
xchg
push
or
sbb
movsb
std
in
aad
rolb
cmc
inc
add
and
add
add
aam
je
mov
jg
jmp
add
jge
jge
push
add
pop
add
add
in
add
add
add
cmp
jnp
xor
movsb
and
aas
mov
outsb
add
sbb
cmp
sbb
cmp
es
add
inc
mov
ljmp
sbb
shlb
clc
and
add
jmp
add
cltd
adc
addb
pusha
add
clc
add
cmp
add
jno
jbe
sbb
aad
mov
add
sub
mov
add
xor
pop
in
add
adc
gs
in
pusha
add
add
movl
add
xchg
add
add
add
xchg
ljmp
out
jae
add
inc
add
nop
jns
push
mov
jecxz
xchg
testl
add
nop
add
or
push
add
sar
jecxz
test
out
movsb
mov
xor
add
pop
and
cmp
inc
lahf
fdivrp
ljmp
lcall
daa
jbe
lods
jb
mov
jmp
or
and
add
add
cmpsl
push
dec
add
cli
decb
or
jno
cmpsb
sub
clc
jg
mov
lcall
xchg
xchg
pop
add
add
sub
pop
sub
ret
roll
mov
jp
test
adcb
push
movb
add
int3
sbb
sub
mov
xchg
cld
stos
xor
add
add
add
add
add
lock
push
mov
sbb
loop
dec
bound
out
mov
int3
push
add
push
bound
inc
cmpsl
sub
popf
mov
add
push
jle
popf
fdivrl
jbe
sub
sbb
data16
add
xor
add
cmp
add
adc
lahf
mov
mov
add
addr16
cwtl
or
push
pushf
pusha
add
mov
std
mov
add
addr16
cmp
fwait
mov
loop
adc
add
adcl
inc
add
cmpsb
xchg
movsl
add
add
scas
xchg
inc
in
mov
add
add
pop
adc
inc
pop
add
or
stos
cltd
xchg
jge
leave
ss
mov
jmp
hlt
fdiv
repz
add
xor
loope
add
jmp
pop
sahf
ljmp
cmp
push
add
das
jmp
add
test
arpl
dec
imul
add
stos
loope
mov
dec
add
inc
add
push
add
mov
mov
push
mov
aaa
bound
flds
add
add
xor
add
lods
mov
fwait
movsb
mov
pop
add
add
mov
sbb
mov
dec
add
arpl
add
leave
std
mov
cltd
into
ljmp
push
add
inc
add
cmp
add
repz
mov
add
pop
add
lret
add
mov
add
add
jl
in
push
add
addb
add
lea
repnz
jb
imul
dec
add
or
lods
jecxz
jo
xlat
mov
rcl
sub
dec
xchg
imul
and
add
je
mov
mov
xchg
roll
mov
outsl
adcl
lret
add
add
out
mov
add
lds
add
mov
mov
cmp
scas
add
xchg
or
push
add
gs
lahf
dec
mov
call
push
add
cwtl
in
rolb
jmp
jge
outsl
das
push
add
xchg
add
inc
ret
lcall
xchg
adc
lea
js
sbb
movsl
lea
repnz
mov
les
add
cwtl
fstps
add
dec
mov
xor
or
add
mov
add
sbb
xor
add
cmpsl
add
xchg
dec
ss
ss
add
pop
add
push
add
js
adc
inc
add
std
jge
add
cwtl
add
add
push
add
fldcw
test
inc
add
xchg
mov
inc
xchg
ss
add
add
add
sbb
data16
xor
add
out
push
mov
in
std
add
add
movsl
sahf
xchg
bound
loop
and
imul
push
pop
add
and
mov
add
add
cltd
pop
out
add
decl
add
insl
push
dec
add
inc
add
jns
add
xor
sbb
add
loopne
add
popa
pop
add
sahf
loop
add
add
jo
xor
jbe
xchg
push
add
add
jns
and
add
add
sti
scas
pop
mov
add
mov
jns
push
add
mov
add
jo
test
xchg
add
push
add
fcmovnb
cmp
into
mov
jle
fsubr
cmc
je
inc
add
cmp
add
mov
xor
lock
xchg
pop
add
rcl
add
xchg
jl
mov
sub
mov
xchg
out
aas
xchg
push
add
add
lcall
insl
iret
popf
mov
arpl
test
mov
add
push
add
data16
pop
dec
add
mov
xchg
out
mov
push
ret
add
fcmovb
jp
shr
and
add
xchg
popa
jle
rcll
and
cltd
mov
pop
mov
xor
ficoms
je
add
add
adc
add
rcl
imul
cmp
sbbb
add
dec
add
jp
test
fwait
jo
jge
in
insb
add
hlt
shlb
jge
sub
sub
mov
mul
push
add
lock
lds
add
mov
test
test
mov
mov
add
push
add
jbe
into
or
jp
add
add
add
add
das
int3
sbb
fwait
add
int3
andb
or
or
rclb
movb
cmp
push
add
inc
int3
mov
add
js
shr
adc
add
add
arpl
das
aad
add
or
adc
add
add
push
incb
jbe
or
inc
js
decl
mov
mov
mov
add
add
add
pop
add
inc
xlat
xor
add
mov
mov
jnp
jge
out
sbb
cmp
inc
add
add
push
ret
cmpsb
add
add
sbb
add
add
inc
add
mov
movsb
sbb
jns
mov
adc
add
inc
aad
enter
mov
mov
scas
sti
nop
mov
xor
pushf
test
add
sti
frstor
les
test
movb
add
popa
xor
add
out
add
add
add
int
inc
add
ljmp
pop
add
enter
jnp
jmp
popl
aam
cmp
test
cmp
nop
fbld
mov
add
aam
xchg
cmpsb
pop
adcl
add
push
add
insb
add
add
lret
jge
aam
scas
adc
add
nop
scas
push
xor
add
into
mov
add
movsl
add
cmp
js
pop
add
cmpsl
aad
push
pushf
dec
jo
xor
add
pop
add
test
and
add
add
mov
popa
jecxz
pop
lret
cmpsb
inc
pop
add
add
add
shrb
data16
bound
mov
inc
in
sbbl
jns
add
add
jecxz
xor
add
adc
push
xor
pop
mov
add
lahf
jns
lods
jg
push
cmp
xchg
add
data16
add
add
cwtl
loop
lahf
pop
inc
jns
jmp
jo
movsb
cmp
cmpb
add
add
jp
xchg
lods
es
add
cwtl
loopne
bound
ror
scas
mov
and
add
jno
cmc
jae
repz
cmp
sbb
insb
add
xchg
call
lods
mov
rcl
xor
incl
pop
movl
hlt
aaa
inc
add
sbb
mov
adc
push
pushf
filds
push
add
sbb
fisttpll
fisttpll
add
add
pop
add
mov
sub
lret
and
add
xchg
icebp
push
popl
xor
add
add
push
cmpsb
xor
fisubl
adc
push
add
adc
add
data16
int
mov
add
add
or
add
add
inc
add
std
repnz
jo
pusha
add
mov
pusha
add
add
mov
test
sarl
movsl
inc
int3
adc
add
add
add
pop
add
push
or
cltd
sarl
cli
mov
jae
add
stc
mov
int3
xchg
sub
sub
dec
in
mov
clc
xor
add
sbb
xchg
cmpsb
aas
jge
add
add
aas
push
add
mov
clc
mov
jns
add
cmc
dec
add
dec
mov
cmp
mov
mov
xchg
xlat
cmp
jne
dec
add
insl
sub
movb
add
ret
out
add
les
add
ss
imul
add
xor
sbbl
xor
cmp
and
add
inc
add
in
push
add
xor
incb
add
dec
outsl
cmc
int
add
push
mov
stos
sub
jbe
popa
mov
add
imul
out
in
aad
adc
push
jnp
xor
add
xchg
pop
test
add
cli
lods
rol
adc
jmp
add
inc
add
pop
sti
adc
push
xchg
add
repnz
in
jmp
or
mov
imul
xor
and
add
shll
inc
jmp
testl
mov
jo
dec
add
add
stos
data16
jo
in
aam
sbb
aaa
dec
add
mov
cmp
xor
roll
and
add
int3
sub
test
or
in
jmp
add
incl
push
ss
dec
xchg
add
xor
repnz
das
inc
add
aaa
jmp
clc
mov
inc
add
add
popf
out
add
add
sub
jno
addr16
xchg
push
mov
cmp
pop
add
out
xor
js
adc
sbb
xchg
or
bound
or
lock
inc
repz
add
sub
pop
add
push
arpl
add
add
dec
add
and
sub
outsl
rcl
shr
mov
aaa
fiaddl
sbb
data16
jno
mov
rolb
jmp
cmpsl
add
sub
xchg
scas
lock
mov
or
mulb
push
mov
mov
pop
dec
add
mov
loopne
push
and
das
push
add
adc
add
and
push
enter
in
movsl
jl
mov
mov
cmp
aad
fdivrp
xor
jl
dec
add
xor
add
imul
add
push
add
in
jle
xor
fidivl
sbb
xchg
and
add
pop
iret
add
xchg
aas
adc
pop
cmpsb
inc
imul
xchg
idiv
pop
roll
mov
shl
ja
sbb
pop
loope
into
push
pop
add
add
imul
movb
in
xchg
lret
mov
inc
mov
adc
add
add
add
add
dec
icebp
iret
ret
add
jne
xor
add
sbb
outsl
add
pop
mov
jmp
inc
add
add
push
add
add
and
add
push
add
adc
adc
fnstsw
cld
and
add
js
int3
fisubrl
push
add
pop
sbb
dec
jns
ret
push
add
add
add
cmpsl
aad
ret
dec
insb
add
icebp
add
sbb
mov
inc
push
add
ja
movsl
push
add
xorl
inc
lods
add
mov
pop
sbb
or
xor
sub
mov
mov
pop
and
sub
and
outsl
add
shr
stos
sbb
adcb
add
xor
jb
mov
ret
and
add
fildl
mov
sub
das
cmp
jge
jo
pop
add
movsl
add
les
xchg
mov
add
cs
jg
in
mov
sbb
inc
add
jo
std
push
add
imul
sbb
mov
mov
pop
add
std
push
add
outsb
add
cmpl
xchg
sbb
pop
add
test
es
add
add
add
hlt
add
fldl
or
cmp
addr16
cmp
pop
les
push
add
add
xchg
push
cmp
sub
outsl
pushf
sbb
lcall
mov
shrb
jne
in
and
sub
popa
push
add
and
cmpsb
jl
test
add
cmp
add
std
push
movsl
push
mov
add
add
pusha
add
testl
fmul
mov
test
bound
add
add
xor
xchg
sub
mov
xchg
add
add
pop
daa
add
mov
inc
mov
xor
popa
ficoml
add
add
mov
add
lds
incb
jl
pusha
add
jo
bound
out
mov
sub
roll
pop
jmp
cmc
push
imul
add
imul
adc
jbe
jns
test
popa
xchg
iret
xchg
cmp
inc
add
nop
or
inc
add
inc
add
add
push
xchg
sarb
cmpsb
and
pop
lahf
push
add
add
add
add
fmul
mov
add
jae
xchg
sub
cmp
popl
test
ljmp
push
add
xor
add
add
add
xchg
pop
add
adc
cmp
jge
pusha
add
fiadds
sub
outsb
add
add
add
add
in
imul
add
add
inc
add
pop
add
iret
xchg
dec
cmp
fildl
loopne
leave
fwait
leave
pop
sub
and
add
les
mov
dec
add
sub
repz
jmp
mov
add
mov
out
xor
add
add
pop
add
add
test
add
xor
mov
mov
or
xor
add
xor
add
add
lds
add
repz
test
or
mov
movsb
add
add
and
add
outsb
add
out
add
inc
in
mov
in
addr16
push
dec
add
shl
test
stc
subb
jp
sbb
add
movsl
add
inc
and
add
add
sbb
push
add
push
add
add
add
jae
mov
cli
repz
dec
lds
call
lcall
lahf
flds
mov
add
mov
test
dec
add
xor
add
add
sub
push
ljmp
add
in
add
data16
dec
out
stos
push
add
add
mov
dec
add
push
mov
add
add
repz
sahf
jl
inc
add
movsl
add
in
add
aam
or
xlat
fstl
sbb
jbe
xor
add
xor
add
in
aaa
movsl
add
cmp
xchg
dec
add
or
sbb
shlb
add
xchg
sub
fcompl
mov
pop
add
filds
hlt
and
add
or
fistl
mov
mov
add
sub
sub
mov
and
add
add
mov
push
add
int3
mov
cmp
add
xchg
ret
fscale
popa
outsb
add
int3
add
std
test
dec
in
pop
add
outsl
mov
add
xor
add
sbb
stc
pop
xchg
test
outsb
add
add
mov
add
cltd
in
adc
add
repz
cmc
fsubrl
add
mov
xchg
in
cmp
maxps
add
or
jae
mov
add
mov
std
add
or
ret
and
add
call
jle
inc
out
gs
xchg
pop
xchg
add
add
in
lock
cmp
xchg
adcb
cmp
mov
xchg
mov
sar
or
frstpm(287
fistpll
add
push
add
cwtl
leave
or
jp
in
mov
cmp
movsl
ss
out
inc
add
mov
stos
xor
add
xchg
outsb
add
adc
sub
push
add
add
pop
add
jecxz
adc
sti
sub
add
add
mov
inc
lea
push
add
adc
add
dec
rcl
jbe
inc
sub
ret
clc
or
add
jl
je
test
test
iret
leave
mov
xchg
enter
cwtl
add
enter
add
jbe
mov
jl
aad
pop
add
pop
add
sub
add
add
xor
cmc
mov
jle
test
loope
push
js
or
jecxz
xchg
cltd
repnz
or
ss
add
stos
in
rcr
hlt
xchg
mov
xor
xor
das
pop
adc
add
cmp
lret
mov
loope
outsb
add
out
add
push
mov
enter
test
cmp
frstor
sub
mov
lods
loop
push
pop
add
pop
mov
outsb
add
add
ljmp
push
cmp
out
and
mov
mov
inc
adc
sahf
aad
cmpl
add
insb
add
push
hlt
inc
add
add
out
dec
add
test
or
dec
cmp
add
xchg
sbb
rolb
push
add
mov
add
add
jbe
mov
adc
add
sbb
adc
dec
jl
xchg
add
pop
cmp
add
add
in
gs
jnp
rorb
pushf
add
xor
fistpll
orl
sub
inc
add
insb
add
add
fadds
decb
add
sbb
adc
aas
or
push
add
cmp
xor
add
rolb
add
and
jne
dec
jmp
add
movsb
mov
out
pop
xchg
push
dec
add
enter
mov
add
aas
mov
or
add
mov
dec
daa
clc
add
punpckldq
sahf
stos
in
rcr
dec
add
lea
add
jmp
sub
xor
add
lods
mov
ret
pushf
les
add
lds
lcall
xchg
mov
or
js
adc
add
push
pop
add
add
clc
mov
and
add
add
add
dec
add
iret
or
icebp
add
add
add
mov
cmp
icebp
sbb
enter
add
mov
add
add
xor
add
adcl
jns
sti
idivb
jae
cltd
loope
add
adc
roll
add
addl
add
cli
add
into
push
add
scas
push
mov
sub
js
xor
add
iret
ss
add
pop
pusha
add
cmp
shl
cmp
sbb
push
xor
out
mov
add
dec
add
lods
std
mov
cmp
and
xchg
add
add
mov
xchg
sbb
mov
pop
add
pop
pop
add
push
push
add
ret
mov
ss
add
pusha
add
xor
dec
add
lods
lcall
add
add
jecxz
lods
std
xchg
clc
push
add
add
sbbb
icebp
adc
add
add
push
add
out
nop
xchg
mov
add
push
add
add
add
add
pop
push
add
add
fdivrs
stos
hlt
lret
mov
jle
cmp
ret
add
add
add
add
add
inc
add
push
sbb
jl
xchg
movsl
sbb
xor
sub
cld
fwait
insb
add
add
xchg
sbb
mov
push
add
add
addb
movsl
aad
adc
mov
andb
add
xchg
jae
add
pop
add
add
add
add
test
push
pop
add
jecxz
ds
std
fdivs
mov
fcompl
negl
imul
push
js
cmpsl
lods
fisttpll
sub
xor
xchg
fistpll
fnstcw
add
add
mov
lea
daa
flds
imul
cwtl
jge
push
adc
add
fisttpl
int3
add
sbb
cmp
mov
addr16
xchg
and
add
push
add
std
pop
add
add
fistl
add
popa
sbb
out
and
add
xchg
add
test
daa
addl
test
inc
add
pushf
aad
ss
insl
mov
je
push
add
lret
push
add
mov
add
xchg
loop
popa
repnz
add
add
add
adc
add
sub
push
les
add
pop
pop
add
lahf
add
jmp
add
xor
stos
xlat
sbb
je
push
xor
js
sub
shr
xchg
orl
jb
push
lock
add
add
int
add
add
sbb
jns
xchg
jb
xchg
xor
daa
xor
inc
shr
ss
add
xchg
cmpsb
ret
add
mov
ja
js
fiadds
icebp
xchg
mov
gs
sbb
sbb
xchg
xchg
push
add
cmpsb
mov
fs
adc
je
inc
add
nop
mov
and
add
xor
leave
xchg
xor
mov
add
popa
lcall
cli
nop
daa
pop
add
xchg
add
inc
add
hlt
mov
sub
xchg
xor
add
gs
or
or
aad
outsb
add
mov
cmp
sarl
loopne
add
dec
imul
add
jge
mov
add
in
add
ja
repz
rol
scas
int3
dec
cmp
into
mov
mov
das
add
aam
jge
push
lods
shl
fdivrl
or
push
add
fwait
push
sbb
test
xchg
into
cmp
jle
push
add
or
push
xchg
loope
jbe
rolb
add
lahf
mov
push
filds
lcall
mov
mov
add
jmp
add
sub
xchg
sub
loope
xchg
clc
fidivrl
add
mov
cmp
jae
add
or
xchg
push
pushf
sub
push
add
push
add
imul
add
or
add
pop
add
les
fnsave
add
adc
add
push
add
xchg
add
vphaddwq
xchg
add
sbb
sbb
in
or
imul
mov
sub
pop
add
add
sbb
fwait
scas
out
sub
movsb
in
add
xor
add
jle
imul
add
hlt
outsl
stos
jmp
jnp
add
lret
sbb
dec
add
push
add
mov
add
jno
cwtl
inc
dec
sbb
pop
pop
mov
daa
push
add
xchg
data16
leave
jg
xchg
jne
mov
and
lcall
clc
add
pusha
add
aas
or
sahf
test
add
xchg
xor
in
xchg
mov
add
out
sahf
mov
push
xor
cli
xchg
pusha
add
testb
ret
sub
mov
je
outsb
add
mov
add
mov
cli
mov
daa
dec
add
mov
add
xor
add
std
and
add
mov
push
or
or
add
sub
psraw
add
ja
ret
adcb
add
sbb
mov
jnp
rcrl
jno
push
int3
imul
jg
inc
adc
add
jo
and
add
add
add
add
add
lds
xor
leave
mov
pop
mov
fucom
sub
dec
cli
ret
mov
mov
popf
mov
sbb
mov
jge
add
pop
add
pop
add
push
add
jg
inc
add
icebp
mov
mov
jp
mov
add
out
rorl
and
add
cmc
add
cld
data16
popa
in
add
and
add
sub
imul
add
add
stos
ret
ljmp
jge
add
in
add
jbe
aad
movzwl
and
add
sbb
data16
xor
add
inc
inc
add
add
add
rolb
aas
xchg
mov
mov
flds
or
xchg
mov
pusha
add
add
sbb
add
cld
shrl
call
lret
andb
fstpt
lahf
push
ljmp
mov
repnz
mov
jne
iret
add
mov
je
push
shrl
dec
add
lahf
sarb
out
pop
mov
add
cmc
and
add
add
add
test
add
add
jnp
pop
add
mov
or
sbb
or
roll
clc
jns
pusha
add
cmp
cmp
rep
jge
adc
popa
mov
rol
dec
out
pop
add
and
xchg
jne
add
addr16
xchg
push
fiaddl
js
insb
add
into
inc
add
cmp
gs
pop
bound
sub
test
inc
add
pop
add
add
dec
add
xor
add
push
add
pushf
loopne
add
insb
add
add
mov
test
jae
or
cmp
test
out
fidivl
jecxz
les
shll
xchg
adc
add
add
cmp
je
test
add
add
out
scas
mov
dec
pushf
mov
inc
xchg
sar
fwait
out
call
shlb
cmp
aad
call
mov
ds
pop
xor
push
add
loopne
or
push
add
jecxz
aam
add
scas
cwtl
sub
sti
lahf
les
imul
add
cmpsl
add
xchg
sbb
inc
add
mov
add
cmp
push
enter
sbb
test
xor
add
test
add
mov
jl
popa
sbb
add
dec
add
add
add
inc
add
inc
add
xor
add
stos
and
push
add
and
hlt
int3
mov
mov
andl
adc
add
adc
add
add
add
lea
in
ja
addr16
inc
and
jmp
lahf
pop
add
adc
add
push
add
fisubrl
pop
inc
xor
adc
jecxz
add
jno
cmp
pop
inc
adc
add
xchg
jp
out
in
and
je
stos
test
push
adc
add
sub
cs
les
ret
das
dec
add
out
repz
mov
push
add
add
push
movsl
xchg
pop
add
xchg
cmp
xchg
fmull
sbb
mov
repnz
xor
add
or
mov
lods
dec
add
inc
add
add
bound
clc
into
and
movsb
lahf
sub
mov
leave
leave
jnp
movsb
add
add
fdivp
mov
dec
lods
mov
flds
xor
insb
add
or
sub
pusha
add
lret
arpl
stos
pop
xchg
sbb
add
and
rcrl
in
add
movsl
add
jmp
pop
add
xchg
add
add
dec
add
add
or
pop
add
xchg
bound
outsl
sbb
pop
mov
dec
popf
cmp
xchg
std
aad
xor
add
jae
add
dec
pushf
icebp
je
inc
in
xor
add
repnz
and
sub
add
mov
movsb
add
cmpsb
and
add
add
add
insl
add
addr16
lret
xor
add
sub
cltd
push
mov
sahf
and
rcll
call
dec
add
aaa
add
add
loop
lds
add
jl
rorl
add
call
add
add
add
xor
pop
out
jle
xchg
imul
or
aad
pusha
add
add
xlat
stos
out
movsl
xchg
jecxz
fildl
and
int
ret
leave
lods
or
nop
adc
inc
add
jmp
in
aas
std
scas
mov
add
xchg
sub
roll
addr16
add
call
xor
andb
mov
stos
cld
es
add
js
inc
add
xor
xchg
add
popf
jne
cltd
mov
add
add
repnz
in
insl
aad
pushf
adc
das
or
lahf
push
add
jbe
mov
dec
mov
sbb
and
movsb
jmp
add
add
scas
js
stos
lahf
hlt
sahf
ds
pop
jbe
xchg
es
lahf
xor
add
nop
mov
add
sbb
jecxz
adc
cmp
sub
in
inc
add
add
add
xor
pop
inc
add
xchg
mov
adc
adc
sub
push
add
push
add
mov
add
cs
stc
inc
add
clc
cmp
pop
rol
gs
add
push
mov
jmp
test
orl
outsl
xor
popf
add
add
push
dec
add
sbb
xor
lret
push
nop
cld
mov
add
rolb
roll
xor
dec
xor
lea
xchg
add
add
add
rcrb
dec
add
ret
ret
push
add
sldt
add
dec
mov
mov
mov
cwtl
inc
push
add
popf
lret
cmpsl
xlat
or
push
add
dec
add
fiaddl
add
fsubs
pop
ret
test
loope
jg
add
xchg
add
add
outsb
add
cltd
add
mov
out
push
add
jl
dec
add
insb
add
add
add
in
inc
scas
daa
sbb
aad
add
dec
mov
adc
data16
pop
push
mov
sbb
loop
int3
or
mov
in
int
insb
add
push
add
add
mov
in
mov
add
sbb
mov
lods
addl
add
lahf
lahf
test
cltd
fwait
loopne
add
int
mov
add
test
jae
rcrb
roll
test
cmp
push
add
xorb
add
add
pusha
add
adc
add
ja
pop
add
xor
add
shrl
add
dec
add
jae
xchg
jle
mov
pop
mov
movsl
add
add
out
int
das
or
xchg
arpl
add
add
pop
add
fimuls
xor
add
jns
add
add
aaa
mov
and
xchg
add
add
inc
add
mov
sbb
pop
add
repnz
add
or
lods
hlt
dec
aam
mov
inc
add
jmp
ljmp
add
add
call
fwait
mov
add
dec
add
mov
xlat
pop
sub
mov
es
lret
and
and
xchg
repnz
loope
add
inc
add
mov
out
mov
add
into
mov
adc
add
sti
rcrl
divb
mov
stos
inc
mov
sti
rcl
sbb
push
movsl
add
mulb
popa
scas
sbb
push
or
cltd
add
ret
inc
leave
push
call
and
loope
aad
add
mov
xorl
pop
lods
adc
add
movsl
mov
mov
dec
sub
add
fidivl
fstpt
pusha
add
inc
add
adc
add
xchg
dec
dec
add
repnz
jno
testb
cwtl
add
fwait
jne
inc
add
add
incb
inc
sarb
addb
movb
add
iret
fstps
push
add
pushf
xchg
mov
push
rolb
pop
add
add
sub
aad
mov
sub
imul
add
out
add
ss
add
roll
add
lahf
add
shl
cli
ss
add
xchg
cld
and
add
jle
mov
mov
jmp
xchg
testl
sti
rorb
imul
add
add
stc
inc
add
cmp
int3
cmp
add
adc
add
add
stc
push
add
mov
nop
fwait
jmp
cmp
jge
fadds
add
add
sub
mov
imul
lret
add
sbb
mov
sti
mov
adc
add
sub
mov
loop
inc
and
add
add
repnz
lea
sbb
add
out
lds
push
add
mov
pop
je
je
fwait
add
and
add
adc
shlb
loopne
into
add
sub
add
lahf
aas
add
icebp
add
xlat
xchg
aaa
sahf
add
add
clc
add
jmp
sub
int3
and
shll
stos
popa
lds
pop
add
push
add
add
pop
add
stos
enter
or
push
add
inc
inc
movsb
mov
cmp
fbld
fwait
add
push
add
jp
jle
lcall
in
rol
xor
add
jecxz
add
xor
add
add
dec
out
jp
dec
jl
sub
inc
add
push
cli
add
add
sub
add
pop
add
and
pusha
add
das
mov
mov
bound
imul
je
add
add
outsl
lret
and
add
out
push
addr16
repnz
insl
push
add
aas
mov
add
push
mov
adc
popa
out
fucomi
xlat
ftst
xchg
push
xchg
cmp
fdivrl
pop
add
push
add
int3
stc
dec
sbb
cld
js
scas
mov
add
cmc
enter
lea
add
sar
add
sbb
pop
pop
add
js
push
push
add
aas
loopne
mov
cltd
test
jae
inc
add
add
fcomps
testl
jno
pop
aad
pop
add
jg
add
add
ljmp
fmull
or
xorl
add
sti
xor
add
sub
add
scas
add
aaa
cmp
in
loope
in
add
mov
add
pop
add
add
or
pop
pop
add
or
mov
fdivp
adc
xchg
sub
jl
xor
add
lret
dec
add
or
push
add
jg
call
call
loope
add
cmc
imul
cmp
add
add
es
filds
bnd
sbb
es
add
jne
mov
movups
add
push
add
arpl
xor
add
jmp
lahf
movsb
jp
push
sbb
rcl
add
add
xor
into
insl
push
jae
sub
mov
xchg
loopne
add
test
pop
daa
pop
add
sti
nop
mov
outsl
add
shr
cwtl
dec
into
movsb
idiv
aad
inc
test
adc
add
movsl
or
or
add
scas
imul
pop
sbb
adc
add
movsb
add
aas
fsubl
out
add
xor
mov
imul
rcr
int3
and
adc
nop
add
add
pushf
add
add
and
xchg
ljmp
lods
in
mov
pop
add
add
pop
sbb
add
jle
mov
pop
xor
add
add
xchg
add
add
sub
xor
add
xor
add
add
lods
add
lods
adc
add
add
mov
add
movsl
add
test
adc
add
cmp
add
add
in
mov
add
jbe
pop
add
cld
cmp
out
inc
add
jg
lock
sbbl
add
and
fcomps
push
jge
stos
addr16
add
cmp
add
inc
add
xor
push
xchg
add
hlt
xor
add
adc
imul
add
shll
xchg
adc
stc
and
add
cmpl
loop
xchg
push
xchg
add
push
add
pop
mov
and
mov
iret
and
mov
call
xchg
fisubs
and
add
dec
mov
push
add
movsb
mov
or
mov
out
mov
dec
push
add
and
add
xor
jae
filds
shll
pushl
pop
int3
lahf
lock
add
or
sbb
lea
or
sbb
iret
outsb
add
jbe
loop
adc
je
dec
outsl
shlb
cli
add
add
add
xor
xor
mov
xchg
xor
add
lret
cltd
cmc
out
xor
add
sub
aas
and
out
fadds
sbb
and
add
add
pop
add
sbb
cmpsl
cwtl
lea
xor
push
xchg
inc
jb
js
jmp
repz
inc
add
adc
add
dec
add
aad
enter
mov
sub
aas
addr16
add
sbb
adc
cwtl
jb
cltd
mov
fisttpll
insb
add
adc
add
scas
shlb
add
add
pop
add
jno
add
xchg
dec
adc
add
push
add
in
daa
add
mov
sub
iret
out
push
lds
adc
rol
out
fnstsw
add
inc
add
insl
jno
add
mov
jbe
ss
fldpi
mov
add
mov
scas
fwait
test
add
add
or
div
push
add
dec
outsb
add
ficoml
iret
add
or
je
sub
adc
add
dec
add
mov
add
xchg
sub
add
add
test
add
push
add
imul
cmpsl
adc
add
dec
fsubr
mov
mov
lock
and
add
xchg
pop
add
push
movl
jmp
add
add
es
add
ds
pop
add
xchg
mov
mov
add
xor
movb
bound
xchg
cmp
jmp
or
ret
jnp
rclb
jmp
pop
add
add
repz
add
nop
add
add
jmp
fistps
add
mov
jge
or
or
mov
insl
inc
add
out
xor
add
rolb
sbb
jg
loopne
mov
mov
mov
add
dec
ja
cmp
jle
push
and
add
and
daa
mov
xchg
xchg
fisubrs
std
pop
movsb
lods
pushf
add
dec
fisubrs
mov
add
out
xor
movl
cmpsl
movsl
pop
add
dec
add
add
pop
jp
sbb
repz
jecxz
mov
mov
add
add
into
out
sub
loop
add
enter
add
add
add
lcall
add
add
and
add
loop
fsubs
sub
cmp
and
add
add
dec
add
out
mov
add
repnz
inc
add
jge
add
add
dec
mov
pop
add
jecxz
cwtl
xchg
sbb
cmp
sub
jae
push
sbb
dec
jge
add
jge
testl
add
cmp
fnstenv
dec
add
jne
cmp
inc
add
ja
fisubl
pop
jecxz
xchg
xchg
push
mov
cmp
push
loope
inc
movsb
daa
out
add
inc
add
incb
ds
mov
jns
push
pusha
add
add
cmpsl
mov
pop
add
ja
add
incb
cmp
inc
xchg
pop
stos
add
mov
or
xchg
lods
mov
add
addr16
xor
jl
xor
cltd
mov
jne
iret
es
add
loopne
and
add
xchg
or
es
movsb
lahf
lods
mov
adc
stos
push
add
adc
add
xchg
cmp
sbbb
pop
push
sub
jecxz
insl
addr16
push
add
sbb
daa
push
add
loope
push
add
flds
imul
add
add
push
add
es
enter
lcall
ss
add
add
add
lods
mov
add
ss
adc
sti
jl
aaa
insb
add
dec
add
sarb
pop
add
repz
add
inc
add
add
in
add
xchg
adc
add
mov
add
repz
add
mov
mov
js
adc
add
add
fcomps
out
sarl
add
cmpsl
sub
add
add
add
add
test
flds
data16
add
roll
iret
les
add
xor
mov
scas
push
push
add
xlat
sbb
aaa
std
add
add
jecxz
and
adc
daa
data16
mov
imul
cmp
cmc
xchg
repz
movsl
movsb
nop
add
inc
add
pushl
das
add
pop
inc
mov
add
lret
repz
add
add
xchg
sbb
inc
add
jl
mov
jl
mov
add
add
loop
mov
add
inc
cmc
inc
add
add
rorb
add
add
add
adc
into
mov
add
push
add
mov
push
add
add
add
lcall
add
pop
add
push
fldl
lds
mov
add
fisubrs
mov
sahf
add
add
into
xor
out
out
mov
add
jmp
push
add
add
xchg
pop
mov
sbb
lea
popf
dec
add
stc
fdivrs
lret
adc
add
push
repnz
iret
mov
xor
add
bound
and
mov
xchg
add
mov
data16
add
mov
sti
add
fiaddl
add
add
add
leave
fnsave
add
jbe
add
addb
add
jmp
push
add
cli
dec
add
shrb
add
mov
add
add
mov
add
push
add
fbstp
pop
add
dec
add
movsl
push
shl
std
stos
lahf
mov
inc
add
mov
lret
mov
pop
inc
add
cmc
mov
sbb
andl
hlt
sti
jno
mov
jns
repz
add
jae
dec
add
push
gs
sub
pop
add
jae
lock
test
mov
je
movsb
insb
add
cmpsb
leave
sub
add
bound
push
add
add
add
adc
hlt
push
test
ret
mov
xor
cmp
xchg
lahf
pop
call
lcall
pusha
add
jle
bound
iret
push
dec
add
jo
test
xchg
pop
cld
push
add
cwtl
andb
sahf
mov
add
sbb
ljmp
adc
add
jmp
add
push
xlat
rcl
add
mov
mov
adc
xchg
lret
add
jne
add
movsl
test
add
pop
xor
sahf
push
add
xchg
fistpll
sarl
or
cmp
insb
add
insb
add
or
addr16
sbb
push
xlat
add
sub
xchg
cmpsb
out
stos
add
aad
mov
lret
nop
add
add
repz
cmc
or
fwait
xor
add
push
add
add
add
xor
add
lahf
or
add
lock
test
pop
add
mov
mov
sub
and
add
add
inc
add
inc
add
jg
mov
push
js
decl
sub
mov
adc
add
out
in
and
cmp
add
int3
jge
les
rcrb
lock
int
adc
inc
xor
cwtl
push
add
push
mov
ljmp
pop
imul
pusha
add
and
das
loope
add
data16
jbe
into
push
add
int
popf
cmp
add
cwtl
sbb
mov
add
add
cmp
mov
xchg
sub
inc
mov
xor
lods
pop
add
in
inc
add
add
ss
sbb
lods
add
add
jg
xchg
add
cmp
inc
add
call
adc
push
sbb
rolb
mov
add
dec
add
sti
jp
push
add
push
add
stos
cmp
add
lods
add
add
dec
add
dec
lret
cmp
shr
incl
mov
repnz
add
add
cmpsb
cmp
stos
adc
add
loope
jg
add
add
add
loope
gs
add
adc
pop
add
gs
jo
inc
add
cmp
rep
sbb
sbbl
lcall
or
inc
vxorps
add
push
out
xchg
jmp
fwait
ljmp
add
xor
mov
push
sbb
pushf
pop
mov
jo
adc
add
pop
add
add
mov
sub
rolb
cwtl
stc
adc
add
mov
popa
fadd
repnz
add
in
mov
sub
cmp
icebp
mov
add
add
mov
jno
mov
jecxz
jecxz
cmc
xchg
fldl
pop
add
and
add
mov
ja
sahf
and
add
insl
rol
inc
cwtl
mov
xchg
add
sub
or
xchg
mulb
aad
gs
jp
lods
insb
add
imul
cmp
pop
add
add
sarl
sbb
sub
cmp
mov
cld
leave
jl
jbe
jmp
jns
sti
push
and
add
mov
jecxz
and
xchg
fbstp
adc
lret
sbb
add
shl
lods
sahf
fnsave
hlt
inc
add
sti
mov
add
add
cmc
add
cmp
sbb
std
add
mov
add
das
insb
add
movsl
add
data16
add
sbb
or
hlt
mov
add
nop
mov
loopne
test
imul
jle
sahf
sbb
add
ret
add
cmp
inc
mov
les
in
pop
shrl
sbb
sub
sub
mov
int
push
add
fwait
xchg
add
add
repnz
push
pop
add
cmp
aam
pop
or
push
add
mov
cmpsl
adc
add
in
ss
add
out
nop
cmp
jo
jge
pop
add
add
test
add
xlat
icebp
pop
lods
add
add
out
data16
pop
add
xor
fsubrp
shll
lahf
adc
addl
add
jl
lods
inc
add
pop
dec
add
adc
add
add
setge
or
mov
add
in
push
pop
add
add
arpl
mov
xchg
aaa
test
mov
jns
xchg
sbb
mov
sub
loopne
add
dec
add
add
mov
pop
add
shll
sbb
add
xchg
shl
cmc
dec
inc
add
pop
jbe
xor
add
aas
adc
push
stc
lahf
cmpl
add
shrl
jmp
mov
add
repz
add
jmp
add
add
jmp
clc
xchg
icebp
add
pushf
mov
mov
inc
gs
add
adc
out
js
lret
pushf
adc
add
in
jno
test
xlat
add
leave
inc
add
pop
add
movsb
add
data16
and
cwtl
xor
xchg
insb
add
add
or
sbb
add
dec
add
mov
sbb
push
add
adc
in
data16
or
add
mov
pop
add
in
mov
repz
cltd
aam
mov
jp
push
fiadds
mov
iret
jp
push
lahf
add
add
fsub
imul
jg
aas
pop
add
jne
xchg
orl
sahf
pop
add
inc
add
data16
add
cwtl
cmp
cmp
loope
sbb
cltd
add
dec
add
add
sub
dec
clc
sahf
sbb
and
sbb
lcall
jecxz
mov
inc
add
je
imul
add
cltd
adc
add
add
cltd
or
aad
add
add
mov
pusha
add
pushf
pop
add
std
jb
inc
add
insl
dec
mov
lock
in
outsl
mov
cmpsb
xchg
fstpl
in
jo
cmp
fidivrs
stc
leave
in
adc
add
inc
add
aaa
inc
add
add
add
add
push
mov
push
jge
je
jae
and
add
dec
add
iret
adc
add
lret
xchg
fdivs
pop
inc
add
add
add
xchg
adc
repz
mov
mov
add
imul
add
inc
add
cld
int3
imul
push
add
sar
or
sub
popa
dec
add
dec
sti
add
push
add
add
pop
inc
add
sahf
cmpsb
and
loope
lds
test
out
jbe
rcrl
add
cmp
aaa
int
mov
out
addr16
add
mov
jnp
xor
add
shrl
mov
inc
add
jne
pop
sti
icebp
dec
sub
pop
add
lods
ficoml
jg
data16
ss
add
mov
sbb
and
add
loop
popl
jp
sub
dec
ret
mov
pop
add
out
mov
addr16
add
js
popa
ja
inc
add
adc
add
sbb
scas
sbb
enter
insl
icebp
loopne
lock
sub
leave
push
push
mov
add
add
sbb
push
xor
out
add
popa
mov
out
test
mov
cld
add
lcall
push
push
add
or
add
mov
ret
pushf
push
add
and
add
add
lret
xchg
dec
add
dec
jg
sbb
add
jae
fs
xchg
in
in
jg
aad
jecxz
repz
adc
mov
dec
add
xchg
push
daa
add
ja
add
cmp
add
js
jp
sbbb
push
add
inc
aam
add
mov
mov
pop
sbb
sub
jmp
aad
or
xlat
adc
ja
add
inc
add
add
add
ds
inc
xor
add
cltd
xchg
xchg
pusha
add
pop
sbb
pop
jge
incl
pusha
add
mov
test
jne
add
add
fwait
add
add
add
xlat
sahf
mov
add
daa
out
add
stos
add
fildll
lds
add
out
cmp
subl
mov
add
shrl
cmpb
xor
jo
mov
rolb
aad
stc
xlat
or
stos
or
arpl
jno
xor
add
add
shrl
xor
add
pushf
add
add
gs
pmuludq
cmp
push
sub
pop
add
pop
add
and
add
jb
inc
mov
add
add
inc
add
in
or
mov
add
ret
pop
add
sti
pusha
add
xor
add
xchg
mov
xchg
sub
sti
dec
add
jp
xchg
add
aaa
inc
add
aam
hlt
je
xor
add
jne
adc
jle
dec
add
pusha
add
ljmp
or
or
add
inc
inc
add
add
std
add
or
mov
pusha
add
xor
xor
add
cmp
and
stos
mov
ret
add
int
cs
adc
add
test
add
mov
mov
jl
add
add
add
or
clc
and
dec
add
xor
loopne
and
cmp
pop
mov
pop
add
add
fildl
add
or
sub
and
sub
rcrb
push
add
mov
push
xor
add
mov
icebp
out
jae
or
or
mov
add
add
jecxz
or
loopne
repz
add
push
or
out
test
jp
hlt
or
je
jns
cltd
test
cmp
jno
add
push
add
mov
jnp
adc
add
aad
cltd
mov
and
into
fs
cmc
or
add
bnd
mov
add
and
add
or
mov
iret
mov
add
inc
adc
mov
clc
mov
add
add
add
mov
mov
cltd
or
push
add
or
incb
imul
add
popa
mov
push
add
add
ja
push
mov
pop
add
add
xchg
add
and
add
add
in
pop
repnz
add
inc
add
add
add
loop
insb
add
pop
pusha
add
inc
add
dec
mov
xchg
pop
add
movsb
and
jo
arpl
repnz
stos
sub
xchg
jecxz
add
fwait
add
lods
jg
sahf
mov
push
bnd
push
bound
subb
add
xor
add
add
aas
add
add
add
sbb
jbe
imul
dec
loope
push
leave
shr
lcall
fsub
std
jp
ret
mov
add
sahf
and
add
repz
inc
add
dec
sbb
adc
add
xchg
xor
add
repz
add
arpl
dec
add
add
inc
add
jne
pop
add
sahf
insl
and
dec
mov
enter
push
push
add
xchg
or
testl
loope
lea
xchg
fldenv
loope
int
ja
cmp
inc
add
cwtl
lcall
cmpsl
pop
mov
add
xchg
mov
mov
add
in
aas
out
mov
and
add
add
push
push
add
jg
mov
push
or
cmpsb
punpcklwd
mov
das
inc
add
bound
into
pop
adc
jno
sbb
fnsave
arpl
add
add
add
outsl
add
jl
inc
inc
add
arpl
xchg
jbe
repz
dec
add
xor
add
jbe
addb
add
add
outsb
add
xlat
sbb
push
add
jbe
jae
xchg
add
jl
xchg
mov
add
sti
xchg
adc
add
jecxz
add
xchg
cmp
xlat
frstor
lahf
add
addl
addr16
add
add
ret
test
add
loop
fwait
lcall
and
pop
addl
in
movsl
lret
adc
imul
inc
add
jae
repnz
data16
hlt
stos
enter
add
pop
add
add
dec
add
subl
adcl
mov
mov
aad
mov
hlt
ljmp
fsubrs
add
add
ret
mov
faddl
call
add
cmpsl
enter
xor
add
stos
add
ret
add
insb
add
cwtl
das
adc
add
add
mov
add
jecxz
cmpsl
int
xchg
add
mov
outsl
mov
out
cmp
stos
subb
or
test
xchg
add
jle
ja
pop
add
shll
add
int
jae
add
add
add
inc
mov
add
adc
add
add
stos
lods
jecxz
aaa
ret
add
jp
sub
mov
pusha
add
loopne
add
add
push
add
cwtl
cmovs
dec
add
jbe
lock
hlt
mov
mov
xor
add
xor
add
add
add
popa
add
xor
out
add
fucomp
sub
and
add
scas
rclb
cs
sbb
xchg
cmpsb
arpl
jo
ss
add
insl
pop
add
jl
cltd
mov
add
dec
es
aam
pop
add
daa
inc
add
je
inc
add
mov
jb
outsb
add
cmpsl
add
imul
add
imul
outsb
add
dec
inc
add
mov
into
fstpt
xchg
ficomps
xchg
add
add
xor
push
xor
jge
cmc
add
cltd
or
inc
in
lahf
lret
add
out
and
aas
stos
sahf
mov
push
add
add
das
add
add
jns
call
or
add
add
ret
push
aaa
add
xchg
or
stc
jmp
mov
les
adc
add
pop
add
mov
add
sbb
jnp
int3
add
add
outsl
add
out
in
dec
add
add
add
pop
xchg
xchg
sub
cmp
in
xchg
mov
sub
mov
out
insb
add
add
inc
add
sti
mov
mov
add
jo
shl
insl
xor
les
jmp
add
adc
add
add
insb
add
shll
movsl
mov
cmp
clc
movsl
and
dec
clc
push
les
repnz
inc
add
orl
je
inc
loope
or
movsb
out
adc
add
dec
into
sahf
mov
fdivl
or
mov
add
cmpsl
add
add
add
jb
mov
jns
mov
add
add
mov
cmp
ret
jle
add
add
sub
cmp
lcall
push
add
adc
add
in
shrb
mov
das
dec
xor
add
out
cmp
mov
or
ror
pop
in
add
fwait
in
add
pop
push
add
pop
add
add
push
push
jl
xchg
jg
mov
mov
add
add
mov
mov
add
frstor
bound
outsb
add
scas
popa
call
ret
addl
les
or
sub
sub
jo
push
cmp
add
xchg
push
add
inc
add
push
push
add
js
sbb
and
pop
imul
pop
and
jmp
xchg
faddp
add
cmp
aad
mov
in
cmp
leave
rcrb
jbe
xchg
imul
jno
jecxz
or
sub
xor
add
add
add
or
mov
dec
add
dec
add
add
add
inc
add
add
in
add
jnp
sub
add
add
in
scas
jmp
add
into
cmpsb
cmovbe
cmp
fildll
testb
sti
add
or
add
iret
sbbb
add
test
bsr
movsl
je
ret
in
int
and
add
dec
push
add
enter
mov
add
mov
imul
add
sub
push
xor
imul
adc
xlat
scas
inc
vrcpps
ljmp
pop
cmp
adc
add
cmp
stc
mov
xor
add
add
sbb
adc
jmp
stos
pop
neg
shll
pop
add
rcl
push
sbb
bswap
in
nop
mov
add
add
jecxz
add
daa
add
mov
aad
iret
push
stos
add
add
iret
nop
cmpsl
int3
jns
or
icebp
loopne
mov
movsl
test
push
add
push
jge
loope
fwait
mov
addr16
add
mov
and
add
mov
pop
insb
add
icebp
ljmp
mov
xchg
add
add
inc
add
adc
loope
cwtl
jno
cltd
sub
loop
add
inc
add
cmp
flds
aam
fdivrl
and
lock
or
movsb
fcompl
sbb
icebp
dec
inc
add
pusha
add
outsb
add
mov
out
call
cmp
js
js
sbbb
add
add
testl
out
add
movsl
push
add
inc
data16
imul
pop
add
test
add
jnp
mov
aas
leave
and
add
adc
add
jnp
add
data16
add
incl
mov
inc
add
add
mov
je
jp
pop
add
add
loopne
pop
and
jae
psubusb
inc
cmp
add
pop
mov
cmp
aam
ret
fidivrl
sbb
lods
xchg
mov
imul
xor
add
mov
mov
add
test
jnp
add
subl
cmp
add
add
das
sbb
stos
data16
inc
rolb
pop
add
fiaddl
insb
add
stc
mov
or
popf
insl
das
scas
mov
shr
jnp
add
mov
clc
sub
sbb
add
out
add
xchg
inc
xor
push
add
inc
add
add
inc
add
cmp
dec
movsl
imul
sarb
add
fbstp
dec
add
and
scas
pop
fisubs
fiadds
insl
xchg
scas
dec
mov
push
xchg
vunpcklps
mov
iret
jo
jmp
sti
mov
cmp
xchg
mov
js
iret
push
add
add
add
mov
cmp
add
mov
or
adc
loope
add
add
jmp
inc
add
in
pop
add
test
adc
rolb
push
dec
add
popf
roll
add
add
stos
ret
pop
add
add
sub
aas
loope
add
dec
mov
add
mov
or
add
jno
sub
les
ss
inc
hlt
pop
add
lcall
and
add
add
add
add
sbb
popf
lret
jl
aaa
repz
inc
add
cld
test
mov
dec
add
cmpl
push
add
add
add
add
data16
ja
outsb
add
es
mov
add
push
pushf
leave
lahf
mov
lcall
xor
jnp
push
dec
add
popa
add
add
add
jmp
add
add
in
and
add
sahf
cmp
add
hlt
and
add
sahf
add
stos
and
add
lahf
xchg
xor
add
jae
lahf
push
add
sub
pop
pop
add
add
lcall
push
add
mov
stc
add
test
pop
add
loop
mov
leave
es
add
sbb
push
add
in
rcl
pushl
aaa
add
ljmp
ficompl
test
sbb
mov
imul
iret
dec
add
pop
add
push
fwait
add
sti
lret
xlat
data16
sub
insl
dec
add
add
jo
or
shlb
sbb
push
add
dec
movsl
fndisi(8087
adc
pop
in
mov
mov
std
push
movsl
cli
xchg
xchg
push
loopne
add
add
and
rolb
xchg
out
add
sub
iret
shll
nop
mov
cmp
mulb
lods
add
mov
add
mov
ret
add
add
cmp
pop
hlt
xor
mov
cmp
test
add
cli
daa
cmp
pop
mov
push
jge
cmc
push
out
stos
pop
add
mov
pop
mov
push
add
ds
cmp
es
add
rolb
out
mov
add
nop
addb
xchg
add
lea
xor
add
call
mov
pop
and
cmc
pop
cmp
movsl
stos
idivl
add
add
stos
addr16
add
mov
mov
sbb
or
pushf
loop
hlt
sub
mov
pop
inc
add
add
cwtl
add
add
dec
andl
add
add
add
testb
add
sub
jmp
mov
das
pop
mov
mov
adc
add
cli
inc
add
xchg
aas
xor
add
pop
cli
das
mov
lret
mov
add
mov
loop
stc
fisubrs
mov
mov
mov
adc
inc
fmuls
popf
outsl
mov
in
imul
in
inc
jbe
or
inc
cltd
cwtl
insb
add
pop
movsb
movsl
add
push
add
test
scas
jno
in
int3
pop
cmpsl
sbb
testl
pusha
add
cmc
js
ror
pop
add
xor
xchg
movzwl
push
add
inc
add
out
data16
dec
add
imul
add
pop
add
inc
add
add
test
mov
sub
add
add
dec
bound
repnz
add
xchg
add
add
ret
sbb
repnz
add
jecxz
xor
inc
add
or
mov
push
sbb
inc
add
ja
fwait
adc
jecxz
push
add
mov
mov
add
movsb
call
jne
popf
xchg
push
xchg
fldt
loope
add
cmp
fldenv
in
fisubl
push
add
bound
stc
stos
and
add
push
add
add
lea
add
add
or
pushf
ss
add
dec
add
stos
std
lods
push
pop
add
xchg
or
dec
lcall
add
push
add
add
test
add
fcomip
les
mov
jp
mov
add
cmpsb
sti
sub
add
mov
ja
int3
pop
push
test
adc
add
pop
pop
push
push
hlt
xchg
add
add
xor
or
add
add
out
stc
add
add
pop
add
push
add
mov
or
pop
add
add
dec
test
insb
add
mov
jl
xchg
fstpt
lds
leave
js
mov
push
add
or
ja
add
inc
add
mov
or
add
xorb
fisttpl
bound
push
add
add
cmp
jmp
add
fldenv
sbb
add
jmp
mov
cmp
fsubl
filds
or
pusha
add
mov
add
cld
in
int3
shlb
add
inc
jmp
cmpb
jle
out
scas
pushf
lcall
pop
mov
sarl
rorb
pusha
add
push
xchg
cmc
add
add
nop
das
sbb
jl
test
out
xor
icebp
cmpsb
mov
or
out
add
xlat
sbb
mov
jle
ret
sbb
add
add
pop
leave
popf
push
je
push
add
add
cmpsb
int
imul
testb
daa
enter
add
dec
add
fsubl
mov
and
add
fidivl
add
mov
jne
add
bswap
test
imul
adc
add
leave
shrl
dec
add
add
in
pop
ljmp
loop
xchg
mov
add
mov
lea
stc
add
jo
lcall
add
mov
jle
dec
add
xchg
hlt
js
ljmp
movsb
inc
add
add
sbb
add
cmp
jp
les
xchg
pusha
add
add
insl
adc
sbb
cmpb
add
add
incb
push
dec
add
movl
lock
xchg
mov
dec
add
add
std
jo
into
fwait
les
xor
add
add
add
push
add
hlt
add
add
push
add
and
add
add
push
add
mov
add
dec
pop
add
push
mov
add
and
add
sub
gs
add
hlt
fists
ja
out
add
add
popa
or
push
sbb
divb
xor
add
inc
add
adc
icebp
lea
inc
cmp
cltd
in
xchg
data16
add
mov
jge
pop
add
aaa
ret
add
jbe
cmpl
mov
cmp
add
popa
movsl
cmpsb
mov
add
imulb
mov
add
add
add
dec
add
scas
inc
popa
or
lea
fabs
cwtl
push
mov
add
aam
lahf
lcall
add
xchg
pop
add
lcall
test
add
ds
xlat
loop
adc
add
add
ret
out
cltd
out
ret
inc
add
and
ret
add
xor
lcall
push
faddl
adc
add
insb
add
push
add
dec
add
and
cmpb
mov
out
dec
add
popf
cwtl
rcrb
add
fldl
dec
xor
add
enter
push
add
fldenv
xor
add
add
daa
push
add
mul
idiv
mov
add
pop
adc
add
xchg
test
add
inc
repnz
jb
enter
add
je
lea
mov
inc
outsl
rorl
imul
xor
add
inc
add
add
pop
add
add
inc
mov
mov
scas
xor
add
cmp
sbb
and
add
xchg
fwait
add
jle
cs
or
pusha
add
dec
add
push
add
ret
inc
add
int3
outsl
fiadds
add
add
js
js
jecxz
xor
add
sub
jmp
aam
or
and
add
inc
cmp
std
pop
add
add
adc
add
add
cmp
add
add
and
popa
dec
jge
lcall
xchg
in
orb
add
je
push
sub
adc
jl
mov
xchg
jl
aam
add
xor
add
leave
ret
xchg
imul
add
mov
mov
add
add
add
sbb
add
or
or
dec
add
add
xor
mov
push
add
sub
hlt
xchg
fisubrl
mov
mov
add
in
fmuls
xor
add
roll
pop
mov
add
cmp
sarl
lods
add
add
je
lcall
or
jns
xor
and
cmpsb
pushf
push
add
jnp
in
frstor
add
enter
or
idiv
aam
dec
add
jg
add
jl
pop
add
push
repz
and
add
sub
call
imul
add
comiss
push
add
add
std
cmpsb
loopne
mov
dec
add
xor
add
fcmovnbe
lahf
cltd
sbb
imul
and
inc
add
repnz
add
stc
repz
add
add
ja
pop
add
add
cli
sub
jbe
pop
add
loope
dec
into
adc
add
rorl
add
outsb
add
add
xor
add
or
add
sti
lods
add
add
pop
dec
add
fwait
xchg
dec
xchg
loope
xor
je
lock
vmaxps
inc
movsl
fs
in
sbb
mov
mov
lods
bound
ja
jl
test
jg
je
push
add
add
xchg
out
sbbl
mov
test
cwtl
xchg
loope
add
rolb
add
mov
shlb
cmp
add
adc
add
sub
add
add
dec
pop
add
push
and
add
hlt
cmpsl
push
sub
add
daa
sbb
in
cmp
xchg
jae
mov
jo
imul
inc
insl
rcll
add
add
cmp
pop
inc
add
jmp
xchg
adc
add
add
enter
pushf
mov
add
in
aaa
xor
mov
push
mov
mov
push
add
fadds
xchg
dec
mov
ja
mov
loopne
aam
adc
add
in
in
repnz
add
xchg
add
inc
loop
rcrl
inc
dec
bound
add
add
xchg
in
pop
push
imul
add
popa
dec
jg
xchg
dec
int3
add
add
cli
hlt
adc
mov
mov
xchg
dec
scas
int3
mov
add
push
mov
repnz
mov
repnz
ror
add
add
add
xor
add
rolb
dec
mov
ficompl
xor
add
cmp
out
and
mov
add
and
mov
sbb
add
lock
add
mov
loope
sub
addr16
fld1
xchg
dec
pop
add
add
sub
xchg
mov
test
inc
add
daa
push
add
add
addb
data16
loope
jae
mov
sbb
push
push
add
add
repnz
add
test
xchg
adc
add
out
popf
dec
add
call
out
aaa
xlat
add
add
add
nop
out
fimull
adc
rolb
jb
jb
fsubl
rolb
mov
pop
add
lods
add
js
dec
add
push
dec
add
jae
mov
dec
add
mov
data16
cmpsl
mov
outsl
in
dec
add
lret
adc
add
jnp
push
xchg
into
ret
add
xchg
pop
sub
adc
jns
flds
mov
insb
add
add
add
mov
jmp
pop
add
jae
mov
inc
push
movl
ret
movsl
clc
fnsave
mov
lcall
add
add
push
insb
add
lret
je
bnd
iret
ficoml
add
ret
pusha
add
sbb
jns
add
xchg
push
mov
push
add
push
add
test
xchg
adc
and
test
cmp
popf
dec
dec
cmp
mov
decb
or
daa
sbb
sub
in
add
ficompl
mov
ja
xchg
push
add
xchg
add
mov
mov
call
pop
dec
add
mov
xchg
popf
movsb
cmp
call
movsl
pop
add
ret
mov
add
sub
negb
roll
push
add
add
testb
add
ljmp
pop
add
add
add
jg
pop
add
sbb
por
jbe
pop
add
and
add
in
jle
adc
dec
sub
xchg
adc
add
add
push
or
rcrb
or
iret
xlat
stos
pop
add
add
mov
xchg
outsl
xchg
add
roll
mov
add
sbb
push
jbe
imul
aad
aad
xchg
call
pop
movups
add
add
ret
add
jle
jnp
jo
xor
stos
dec
mov
inc
cmp
add
add
add
add
inc
add
push
mov
inc
add
push
add
stc
add
clc
fildll
in
rorb
sbb
adc
add
adc
add
pop
jb
sub
cs
pusha
add
das
inc
fldt
int
rolb
leave
add
add
add
mov
lahf
pop
stos
incb
sbb
stos
or
test
add
adc
ret
add
sti
or
fnstsw
ret
out
jmp
or
jl
lods
inc
add
or
sbb
jnp
xchg
hlt
mov
add
push
add
outsb
add
add
cmpsb
xchg
push
flds
sbb
ljmp
add
sub
incb
xor
add
repnz
daa
dec
add
mov
cmp
cmp
sbb
dec
pop
add
pop
rolb
mov
inc
add
pop
cmp
fcoml
mov
mov
mov
add
sub
fstl
aaa
dec
add
sub
add
add
dec
add
jnp
add
dec
add
ret
add
add
adc
add
add
add
mov
incb
push
es
add
cltd
add
lret
sbb
cmp
sub
push
add
mov
jp
xor
lahf
mov
mov
test
outsl
iret
mov
add
sub
lods
lahf
jmp
jle
xchg
mov
add
inc
add
aam
filds
mov
and
hlt
shlb
pop
mov
jb
and
add
inc
es
xchg
sub
add
xchg
sbb
ror
insl
fcompl
int3
ss
push
test
jne
and
add
scas
add
xchg
fnsave
add
es
pop
inc
add
sbb
les
add
bound
mov
aaa
push
add
add
add
mov
neg
in
adc
inc
in
add
popa
sti
out
sbb
imul
dec
add
mov
stc
daa
and
arpl
ja
rolb
add
add
jo
xlat
aaa
pusha
add
fistl
xor
and
sbb
dec
add
add
jle
pusha
add
mov
jmp
add
mov
into
add
mov
add
xchg
pop
add
or
jne
shll
shll
lods
add
add
add
bound
xchg
pop
fwait
push
inc
mov
fldz
roll
add
mov
dec
add
sbb
adc
add
into
add
mov
das
cmpsb
outsl
xor
add
inc
pop
add
add
inc
ret
xchg
xchg
adc
add
repz
comiss
cmp
sub
add
add
lcall
inc
add
out
lahf
imul
and
add
pop
add
cmp
scas
xchg
cld
cld
mov
or
sub
ja
insb
add
dec
add
add
sub
lcall
lret
sbb
push
add
add
cmp
and
add
pop
add
stc
add
dec
mov
add
inc
inc
outsb
add
out
in
sbb
adcl
cwtl
mov
mov
aam
insb
add
stos
add
add
ljmp
add
add
add
xchg
jmp
push
add
mov
jecxz
sbb
or
mov
jp
push
add
sub
push
add
mov
add
aad
shl
jg
and
clc
loop
add
add
xlat
pop
add
mov
mov
das
jle
nop
dec
ret
and
add
add
jae
mov
ds
jmp
outsl
add
lcall
dec
add
add
hlt
add
popa
shrl
int
ret
add
add
or
jae
xchg
mov
add
push
arpl
je
mov
dec
add
outsl
and
data16
rolb
mov
add
or
add
test
dec
add
data16
pusha
add
add
add
test
push
add
push
xlat
inc
in
or
fbld
push
add
xor
add
bound
out
nop
sbb
je
mov
fidivs
push
sub
or
sub
lahf
cmp
jno
loopne
add
out
test
add
in
add
add
fsqrt
outsb
add
hlt
test
push
add
das
and
lret
sbb
or
cli
scas
add
mov
mov
add
adc
leave
sub
dec
add
add
mov
in
inc
out
xchg
cmpsl
jnp
mov
clc
inc
add
pop
pusha
add
pop
faddl
inc
add
add
in
or
shll
add
push
add
cmp
xor
inc
lret
nop
stc
jo
lea
mov
dec
xchg
js
arpl
pop
add
xchg
mov
movl
inc
vorpd
popf
adc
add
mov
and
inc
js
or
rcrb
or
add
adc
mov
add
sbb
mov
movl
aaa
cmpsl
add
mov
lock
sti
leave
mov
pop
xor
pushf
inc
cld
mov
inc
add
cld
out
xchg
sbb
cmp
lods
outsb
add
push
mov
add
add
mov
xor
addl
or
stos
jle
insb
add
out
add
fdivl
rclb
loop
repz
int
add
and
movsb
es
add
cmp
sbb
sub
out
xchg
pop
pusha
add
jle
jp
sub
shr
aas
pop
stos
ret
cmc
jmp
lods
add
add
add
jp
andl
push
add
add
loope
aas
dec
psrld
fisubl
enter
push
stos
stos
jp
shl
dec
add
xchg
outsb
add
add
and
pushf
push
add
bound
jae
loopne
add
scas
inc
add
insb
add
outsb
add
cld
add
mov
cmp
sbb
add
jmp
orb
pop
sarb
lcall
ret
arpl
shll
mov
pop
add
push
add
movsb
int3
xchg
xchg
shll
lock
lcall
aam
add
fwait
cmp
jge
rcll
mov
xchg
cmp
jb
ss
add
stc
xchg
cmp
std
test
jecxz
movsb
lcall
add
add
gs
fmul
insb
add
loop
shll
sbb
push
andb
add
sub
int
test
add
into
js
cmpsl
into
inc
gs
add
test
test
cmp
add
pop
lods
lds
dec
add
add
add
popa
adcl
add
dec
add
mov
in
fiaddl
cwtl
sbb
daa
push
add
daa
int
push
addl
lahf
xor
in
add
inc
pop
add
pop
add
out
pop
add
push
add
add
and
push
add
int
add
jecxz
add
data16
js
dec
dec
repnz
data16
add
faddl
add
add
add
lahf
add
data16
out
sub
and
add
pmulhuw
fistl
repz
add
daa
add
dec
pop
add
enter
xchg
sti
pop
add
loop
jp
dec
xor
push
adcl
push
add
mov
or
js
pop
add
and
dec
add
add
add
push
pushf
push
add
mov
cmp
sub
cmp
xchg
gs
cmp
sub
cmpsl
shll
add
add
rcr
test
add
imul
add
push
add
dec
add
cmc
mov
jecxz
ret
or
push
std
add
add
stc
inc
add
dec
mov
ljmp
repnz
into
add
add
xchg
add
add
mov
dec
add
add
mov
jne
xchg
call
fcoms
add
sbb
cwtl
jecxz
add
pop
testl
nop
jns
scas
sbb
dec
add
enter
add
in
testl
add
mov
lock
add
jle
lahf
or
or
push
out
add
inc
add
adc
dec
add
mov
xchg
mov
push
add
add
ret
add
cmp
mov
roll
sub
sub
jbe
fldl
pop
cmpsb
ret
add
out
les
movsb
ror
inc
add
movsb
pop
push
add
arpl
and
or
arpl
mov
test
inc
push
add
mov
pshufb
rcll
or
add
xchg
and
add
add
mov
icebp
cltd
lds
add
pop
mov
add
loopne
xchg
adcl
pop
mov
mov
stos
pop
add
popf
cmp
inc
add
loope
cmc
inc
add
add
inc
add
xchg
inc
add
xchg
pop
adc
add
out
call
push
add
add
js
clc
xchg
sub
stc
sbb
cmp
cmpsb
dec
add
dec
add
sbb
jge
sbb
mov
add
xor
inc
push
cli
sbb
pop
mov
mov
cmpsl
push
add
mov
adc
add
sub
and
sub
mov
or
mov
ds
sbb
add
sub
popf
and
add
adc
xor
add
adc
ret
add
cmc
pop
pop
mov
mov
add
fcmovu
daa
push
add
add
stos
inc
add
insl
cmp
push
add
clc
cmp
mov
cmp
mov
leave
add
addr16
lret
add
add
clc
add
push
add
xchg
push
add
adc
and
pop
outsl
das
fwait
pusha
add
add
pushf
push
add
or
gs
inc
add
stc
dec
add
arpl
in
sub
inc
push
and
test
stos
jecxz
rolb
rcrb
outsb
add
test
sbb
loop
loop
add
or
add
sbb
faddl
xor
jge
add
push
mov
adc
and
add
and
add
or
pop
int3
insl
fst
adc
popf
loop
cltd
adc
js
and
jo
push
bound
std
scas
dec
add
shrd
jecxz
add
xor
inc
add
test
add
jo
or
cmpb
push
fs
or
push
std
or
lret
mov
add
jnp
loope
lret
add
mov
jle
ret
sub
stos
mov
jae
ja
add
or
jno
in
push
or
ret
add
fcmovne
jle
and
add
stos
add
inc
mov
sbb
fcmovb
sbb
sbb
mov
call
add
add
add
popl
fwait
inc
add
mov
lahf
jae
test
inc
add
sbb
or
cmp
idivl
les
add
in
imul
pop
cmp
cwtl
sub
add
inc
add
push
add
add
jne
or
mov
sub
mov
mov
and
or
pop
add
ficomps
daa
mov
insb
add
leave
cli
sbb
shlb
addr16
and
add
stos
in
dec
add
in
sbb
ljmp
or
das
stos
mov
mov
jecxz
jb
stos
mov
mov
push
clc
add
push
std
add
push
add
out
and
pop
add
adc
pop
add
inc
add
std
jb
gs
add
out
inc
popf
setl
lods
jecxz
roll
xor
dec
cmp
sahf
pop
inc
add
pop
xor
add
insb
add
inc
jecxz
xchg
push
add
mov
icebp
outsl
adc
add
iret
loop
mov
leave
in
inc
xor
mov
add
xor
loope
add
add
add
add
xchg
scas
or
add
sub
add
add
add
and
sub
mov
push
ret
cmp
data16
add
add
adc
add
test
add
or
test
jbe
dec
add
jle
lcall
xchg
add
cmp
std
jb
out
cmpl
push
inc
stos
scas
not
scas
pop
pop
add
jnp
mov
or
xchg
and
add
add
add
adc
add
mov
dec
add
lret
lea
add
cmp
les
sti
scas
pop
add
mov
add
and
add
sub
mov
ret
adc
add
mov
int3
add
add
jno
adc
add
addb
add
fiaddl
cmp
jg
jo
or
orb
pop
out
sub
push
add
xor
add
mov
pop
add
pop
add
inc
mov
fcmovne
movsb
notb
xchg
add
outsb
add
adc
dec
add
test
enter
outsl
add
fcoml
add
mov
push
add
xlat
in
add
push
add
fdivp
sahf
insl
jmp
inc
imul
insb
add
rol
jle
mov
pop
lahf
cli
inc
add
nop
out
sbb
mov
cmp
dec
or
test
xor
adc
add
jo
testb
add
jp
jae
sub
sbb
pop
pop
inc
add
fs
xchg
add
cmpsl
shll
in
lods
xchg
mov
sub
or
add
cmpsl
mov
idivl
mov
mov
add
add
pusha
add
daa
testb
into
add
sub
pop
lea
inc
add
cwtl
cwtl
movl
mov
add
jle
pop
push
add
add
popf
add
test
cmp
add
push
sub
movsb
add
hlt
add
inc
add
int3
out
dec
add
fwait
rorb
call
fwait
add
aad
test
add
dec
add
in
add
insl
add
iret
add
mov
mov
in
xchg
repz
xor
add
add
divl
cmp
xlat
popa
mov
pop
or
scas
scas
push
push
add
add
pop
cmc
push
add
add
sbb
dec
add
fwait
sub
adc
and
add
dec
add
out
pusha
add
pop
add
xor
add
movsb
add
sub
aad
jb
xor
add
xor
push
addr16
js
xor
lea
mov
clc
testl
fldl
das
xchg
or
ja
sbb
cltd
and
add
pushf
mov
jmp
dec
add
inc
add
mov
add
xchg
pop
add
push
add
out
add
test
xor
xchg
jge
add
popa
dec
stc
jge
aas
push
xor
or
repz
shrl
stc
sub
imul
push
std
add
pop
jecxz
scas
mov
add
inc
cmpb
lahf
xchg
jecxz
add
add
add
roll
add
andb
add
add
imul
mov
push
fdivrl
xchg
aas
jg
pop
sahf
add
jg
cmp
stos
ljmp
sbb
rolb
or
jnp
lds
mov
ret
lods
mov
stos
add
add
sub
or
aam
add
pop
outsl
lock
aaa
dec
add
iret
push
in
movsb
cmp
add
jb
cs
sti
enter
sbb
repnz
add
xor
sbb
cwtl
xor
add
inc
cwtl
pop
add
xchg
cwtl
push
jl
sub
dec
xor
xchg
mov
add
fadds
call
data16
xchg
add
push
add
xor
push
add
add
or
cwtl
test
add
add
adc
in
mov
inc
add
ja
int
add
cltd
add
add
add
mov
add
stc
add
mov
cmp
test
mov
add
dec
add
dec
add
outsl
in
daa
mov
popf
push
add
add
mov
or
xchg
push
xchg
add
roll
hlt
in
sub
dec
or
mov
add
in
add
pop
or
in
jbe
scas
inc
add
addb
add
mov
cmp
and
add
int
pop
add
inc
add
jmp
add
cltd
fcoml
add
add
out
and
add
loope
sbb
subb
add
jne
add
pop
add
xor
add
jg
sbb
jo
test
add
add
add
subl
jge
pusha
add
clc
rcl
lods
adc
sbb
enter
mov
int
add
aam
add
push
add
add
roll
arpl
lret
pop
repnz
mov
jp
movsl
and
add
das
in
add
add
adc
add
mov
add
and
add
in
and
add
loope
stos
call
xchg
adc
add
data16
mov
add
imul
loope
fadds
int3
push
sbb
and
add
aaa
pop
add
popa
movsl
hlt
jno
arpl
popf
test
gs
jmp
add
add
xchg
rorb
lret
add
addb
add
or
fnstcw
sub
xor
dec
mov
scas
sarb
add
mov
dec
add
iret
jbe
out
and
add
add
add
add
xlat
pop
adc
and
into
mov
pop
add
add
xchg
out
mov
test
add
push
in
nop
repz
cmp
scas
jecxz
jecxz
xlat
pop
pop
nop
je
fsubrl
mov
rolb
and
add
scas
and
mov
ror
mov
add
xor
jnp
ss
add
pop
xchg
cmc
jo
and
sbb
push
add
xchg
ja
jne
or
jbe
ljmp
nop
or
sub
loop
out
lock
lea
in
mov
xor
add
jl
shr
push
add
gs
push
pop
add
mov
and
add
add
push
add
mov
adc
add
stc
add
add
add
addr16
add
lret
add
fdivs
arpl
mov
enter
lds
adc
add
es
add
adc
add
add
add
mov
dec
add
add
xchg
das
lock
sub
mov
inc
sbb
repz
mov
mov
enter
pop
add
and
add
shlb
mov
ret
or
add
repz
mov
sbb
jp
outsb
add
add
jp
jo
add
add
add
sbb
mov
add
scas
add
or
jnp
imul
roll
sbb
hlt
shlb
jecxz
scas
xchg
or
movsb
push
mov
rcrl
mov
push
imul
in
jecxz
movb
add
lcall
add
fistl
movsl
jnp
inc
or
loop
adcb
add
mov
add
cmpsl
in
test
pop
add
and
test
jns
or
sbb
xor
add
das
pop
sub
lcall
pop
add
ja
sahf
add
testb
mov
add
and
and
bound
mov
push
jb
leave
xor
add
push
add
scas
sbb
push
add
mov
adc
dec
add
jge
dec
in
sbb
add
dec
add
orb
add
add
sbb
adc
and
add
xchg
add
clc
add
incb
repz
jne
add
in
xor
push
scas
add
cmp
clc
add
add
imul
sbbb
mov
add
lods
push
add
stos
aaa
int
out
test
fucompp
sub
mov
add
add
add
pusha
add
or
add
adc
add
adc
pop
and
push
add
add
add
prefetchw
or
mov
ljmp
dec
add
push
add
jg
adc
lcall
test
outsl
push
add
mov
add
loop
movsl
xchg
roll
push
mov
test
aad
mov
inc
add
adc
outsl
push
add
push
add
dec
add
add
add
rcr
cmp
stos
arpl
out
mov
movsl
das
data16
sbb
mov
cltd
or
inc
add
lret
mov
add
push
add
add
xor
cmp
mov
add
sbbb
das
add
arpl
add
sub
adc
add
add
add
add
adc
add
cmpsb
ja
std
xchg
push
add
add
or
sti
idivb
mov
jmp
mov
add
xor
adc
mov
xor
pop
add
pushf
sar
ss
add
and
shll
imul
add
adc
add
fiadds
add
icebp
test
mov
ja
add
adc
add
addb
add
add
bound
push
rcr
insl
adc
add
adc
mov
add
xchg
cltd
cmp
iret
add
and
arpl
fsubs
cmpsb
add
add
aas
cwtl
sbb
dec
add
fisubl
add
or
jb
sub
add
add
movb
cmp
jmp
add
sti
add
pop
add
add
shll
add
add
fcmovbe
push
add
xchg
push
add
add
add
jmp
add
test
lahf
lahf
leave
popf
loopne
lds
ljmp
cs
mov
add
scas
sahf
imul
testb
add
sub
in
dec
add
add
add
push
add
jno
cld
cmp
and
add
insl
je
or
add
popa
sbb
pop
adc
add
inc
jns
rcrb
pop
add
out
and
inc
leave
dec
add
ja
push
add
xor
add
lods
and
rolb
and
fiaddl
add
add
mov
add
call
mov
dec
dec
scas
mov
cmp
out
pop
add
sbb
out
dec
loopne
movl
add
lock
push
mov
add
popa
in
cmp
push
sbb
mov
lret
add
add
loopne
add
sub
out
popf
add
stos
jns
outsb
add
add
xchg
lahf
cmc
adc
push
lods
jle
test
jg
movsb
sub
or
negb
push
add
mov
add
add
pop
sbb
add
outsb
add
jmp
add
imul
in
push
add
add
lds
add
add
add
sbb
mov
sbb
popa
push
mov
jmp
scas
clc
das
out
inc
scas
data16
pop
iret
add
lock
outsl
adc
pop
add
testb
or
sti
inc
add
or
adc
les
mov
add
out
sbb
cwtl
mov
inc
arpl
add
push
in
jl
cmc
mov
add
adcb
dec
cmp
add
fldl
jmp
add
into
jb
pop
xor
add
je
push
add
add
add
add
cmc
cmc
leave
pushf
int3
add
add
imul
outsl
pop
add
or
ljmp
add
add
movsb
adc
add
sub
cmp
movsb
xchg
mov
sub
dec
add
adc
add
lock
pop
add
mov
in
inc
dec
cmp
xor
add
movsl
add
add
add
add
push
add
stos
push
cmp
mov
add
movsl
sti
imul
add
mov
dec
add
sbb
sub
jno
subl
dec
add
xor
fidivrl
add
dec
insb
add
frstpm(287
push
add
movsb
and
sub
sub
or
repnz
inc
add
lret
add
mov
ljmp
xor
add
fwait
lods
gs
mov
xor
lret
icebp
out
jns
jo
aad
add
pop
scas
or
ss
sti
leave
loop
leave
xchg
in
mov
icebp
shlb
add
sub
inc
add
pop
sub
cmp
sbb
sub
mov
shlb
add
pop
add
daa
push
add
out
mov
add
add
add
add
rcrl
notb
cmp
cmp
jns
push
add
mov
adc
mov
mov
test
add
out
add
add
std
add
test
sub
fcompl
push
mov
add
add
add
sbb
repz
add
lock
add
mov
sbb
pop
stc
add
rolb
xlat
ljmp
imulb
repnz
sub
cmp
jno
add
add
scas
sub
xchg
mov
xchg
push
int3
add
xchg
int
insb
add
xchg
loope
add
add
bound
adc
add
cmp
lcall
sbb
loop
scas
fstpt
cltd
xor
add
cmp
push
inc
add
scas
in
mov
nop
inc
add
sub
mov
push
add
add
pop
dec
add
push
popf
pop
scas
xchg
sbb
pop
lret
xchg
pop
add
inc
add
cs
mov
or
inc
add
scas
add
and
sub
pop
add
stos
add
add
mov
lahf
imul
jp
test
clc
add
imul
sbbb
mov
scas
cmp
daa
rolb
pushf
sub
jl
xchg
shrl
add
icebp
cltd
in
jl
inc
add
mov
push
mov
into
test
add
or
dec
add
cmp
fmull
add
cmp
cmpsb
les
mov
push
fldl
testl
xchg
add
inc
add
into
imul
repz
adc
add
push
jne
jmp
add
data16
lds
dec
add
pop
add
add
add
add
test
add
add
pop
add
dec
add
push
fbstp
add
pop
adc
add
fldl
adc
jg
add
sub
cwtl
jge
add
add
add
es
test
add
jbe
lret
jecxz
mov
cmpsb
add
dec
jo
outsl
roll
cmpsl
add
dec
add
cmp
mov
data16
or
ss
andl
in
dec
ret
bound
xchg
pusha
add
in
xchg
mov
pop
arpl
ret
mov
dec
add
or
cmpsb
mov
and
add
insb
add
stos
out
test
xor
add
add
push
int
dec
add
add
add
xor
add
mov
inc
add
mov
insb
add
roll
dec
add
add
cmpsl
clc
divb
aam
test
shl
popa
or
mov
inc
add
mov
inc
mov
mov
or
shrl
sbb
lea
dec
add
stos
xorb
add
cmpsl
mov
add
pop
add
addl
imul
add
mov
repz
les
mov
lods
out
add
add
push
add
push
jecxz
cmp
fwait
jg
add
add
mov
mov
mov
mov
mov
mov
gs
fcmovbe
xor
add
add
dec
add
adc
mov
pop
mov
les
sub
jp
pop
add
pop
mov
and
add
add
xchg
xchg
add
inc
add
pop
pop
clc
sahf
test
add
or
les
stc
in
xchg
aaa
mov
ret
out
lods
ljmp
add
add
xchg
add
add
fistpll
or
sbb
push
add
add
fimuls
push
enter
add
add
out
insb
add
mov
stc
add
lods
in
pop
add
pop
add
sbb
jle
pushf
pop
rcll
xlat
clc
leave
std
push
add
jno
cli
cmpsb
jl
xchg
cmp
or
stos
popf
addr16
push
mov
sbb
mov
add
add
adc
aaa
adc
xchg
add
clc
add
insl
adc
out
add
jle
cltd
pop
and
cltd
mov
inc
add
outsl
fistps
or
pop
add
shll
add
je
sbb
mov
lods
pop
mov
mov
xchg
std
pop
enter
add
sub
ret
arpl
pop
and
add
cwtl
sbb
xorb
addr16
aas
push
data16
add
add
movsb
add
movb
jae
add
bound
xorl
add
sbb
test
sbb
call
stc
cmp
push
add
xlat
lods
adc
add
or
test
or
popa
push
add
xchg
mov
pushf
add
adc
jecxz
add
movsb
add
mov
pop
sti
add
adc
push
add
cmp
fcoml
push
cmp
insb
add
add
add
mov
jae
imul
sub
lret
add
cli
fsub
out
pop
or
pop
xor
pop
push
add
fstpl
add
es
add
xor
gs
add
sub
rolb
add
in
push
add
add
inc
pop
movntq
or
xchg
sbb
outsl
leave
mov
sbb
mov
mov
add
add
les
add
add
pop
add
jle
cltd
pushf
or
or
clc
faddl
mov
mov
jae
add
mov
jge
lea
outsb
add
ret
in
push
mov
xchg
push
iret
insl
mov
jmp
inc
jnp
jge
push
adc
add
xlat
mov
add
lret
mov
add
add
push
add
pop
push
add
dec
add
out
mov
add
push
add
rorb
into
out
ficoms
pop
add
xor
sub
iret
ret
add
das
add
push
add
sahf
jb
int
mov
out
repz
call
add
mov
mov
add
adc
loopne
fcomps
test
add
mov
imul
test
jae
xchg
or
lahf
sarb
push
movsb
and
add
das
push
loop
in
sub
popa
add
add
push
scas
cmp
aam
add
and
push
add
add
push
xor
add
pop
add
add
jns
mov
lods
add
add
add
add
adc
add
push
add
jp
in
jnp
lahf
or
and
add
and
adc
add
add
cmpsl
mov
cltd
les
jg
fcoml
popl
add
inc
add
ja
add
push
add
sarl
xorl
add
test
addl
and
sub
dec
das
stos
mov
movsb
mov
add
add
call
jle
test
test
or
and
add
jbe
les
add
enter
or
mov
rol
jns
jecxz
add
xor
int3
mov
add
lock
push
add
js
xlat
nop
push
push
add
shl
mov
xorl
fidivs
sbb
sub
loop
and
pusha
add
xchg
xor
add
fmull
add
mov
fdivrl
and
add
ds
cmp
xchg
push
stos
add
mov
xor
add
fsubrl
inc
add
sbbl
add
or
cmp
add
add
stos
mov
mov
add
shl
or
cmp
repz
dec
add
and
js
mov
incb
cmc
add
add
adc
add
cld
dec
add
sbb
mov
call
add
add
imul
add
sahf
ret
enter
mov
mov
add
add
in
add
out
out
das
pop
and
fbstp
inc
int
ret
add
add
inc
add
jns
out
sub
fisttpll
das
cmpsb
ret
add
subl
add
fldt
xor
mov
mov
stos
push
iret
add
cwtl
daa
or
jns
jnp
cmpsl
pushf
mov
add
cld
int
mov
add
jp
jns
push
out
add
call
push
rolb
ret
add
into
pop
add
fmuls
cmp
and
add
fstl
lds
cmp
je
mov
mov
mov
sbb
mov
jae
dec
add
test
cmp
ss
pop
jns
add
les
push
add
jns
outsb
add
add
pop
push
add
dec
add
xor
shr
out
add
rorb
add
pop
add
push
testl
inc
pushl
sub
stc
stc
cmp
jp
push
add
mov
popf
lds
insb
add
aaa
push
add
push
and
scas
add
dec
adc
add
mov
and
pop
jnp
adc
mov
pusha
add
mov
notb
add
add
add
xchg
rcrb
add
push
or
adc
daa
out
divb
add
out
add
iret
imul
mov
sub
sbbl
dec
mov
inc
add
add
cmp
into
rol
add
add
add
sub
iret
add
mov
aam
add
in
add
jle
lcall
and
add
nop
test
dec
add
and
add
xchg
sti
push
fwait
xchg
sub
cmc
cmp
cmp
pop
subl
out
fisubl
cmp
sub
mov
rcll
jnp
adc
add
inc
mov
add
add
hlt
mov
inc
lea
add
jb
pushf
jp
xor
add
add
fs
push
jl
pop
add
jg
or
add
addr16
in
add
add
add
add
push
sti
add
adc
add
add
add
fcmovu
movsb
test
ss
xchg
or
xor
add
add
cmp
dec
add
sub
add
jecxz
jns
jbe
xor
add
mov
cmp
aam
fistl
add
inc
push
add
xchg
outsl
popa
in
pop
and
aaa
add
add
mov
in
add
xlat
cltd
add
add
add
out
daa
jl
andl
xor
mov
aas
fidivrl
repnz
stc
test
mov
add
jp
int3
shrb
push
sbb
jae
fwait
add
loop
push
mov
inc
add
imul
pop
fbstp
or
test
add
mov
dec
lds
imul
iret
adc
add
add
lcall
jge
lods
stos
cs
xchg
pop
add
add
test
ret
pop
mov
add
mov
push
add
xchg
daa
popf
add
add
mov
subb
add
or
xor
lcall
mov
mov
xor
rcll
test
sbb
mov
add
bound
and
add
js
xchg
xor
inc
add
pop
pop
loope
in
mov
adc
test
inc
leave
mov
cltd
out
push
gs
cld
int3
in
mov
inc
add
repz
add
jecxz
add
add
icebp
pop
add
pop
shll
dec
jg
pushf
inc
sub
add
test
pusha
add
add
add
add
add
jp
stc
in
dec
add
int3
loope
xchg
add
leave
push
xor
adc
out
and
add
add
mov
dec
cld
out
mov
add
add
add
iret
push
add
lods
les
cld
js
xchg
in
add
jns
mov
sub
and
inc
add
mov
inc
sti
imul
add
add
testb
mov
and
pushf
mov
pop
rorl
add
push
add
xchg
mov
ret
jnp
add
add
add
mov
mov
int
pusha
add
arpl
add
outsb
add
mov
rolb
movsb
aaa
mov
lock
dec
or
sub
aam
clc
sbb
add
add
ja
test
mov
mov
add
or
pop
add
jg
add
add
push
add
inc
add
mov
aas
jmp
arpl
fninit
je
mov
jno
add
add
in
mov
mov
aaa
sub
fs
daa
popl
and
add
test
or
lahf
add
add
add
xchg
cmp
lds
and
daa
add
add
add
add
divb
add
fldl
div
sbb
dec
add
cmp
add
sub
jge
jbe
pop
fldl
mov
jns
add
add
data16
add
sahf
add
jb
sti
ret
xchg
and
test
enter
inc
inc
add
push
jg
jecxz
add
lods
mov
jl
xor
arpl
lahf
sbbb
lret
add
out
fisubs
sub
add
add
icebp
psubusb
scas
sbb
jns
dec
imul
add
xchg
fisubl
pop
scas
pop
jne
pop
add
mov
mov
pop
insl
jge
das
subb
inc
sub
iret
negb
add
add
nop
adc
add
add
sub
add
insl
pushf
arpl
add
or
fidivs
sbb
xchg
adc
add
dec
add
adc
inc
add
repnz
dec
add
add
outsl
pop
add
add
lcall
popf
loopne
add
mov
into
dec
js
cmp
scas
adc
add
stos
cli
push
add
pop
xor
inc
imul
aas
pop
add
jl
bound
jle
xchg
scas
adc
push
add
cmp
jecxz
pop
or
cwtl
xor
add
aam
add
insl
dec
adc
add
or
mov
cmp
andl
add
xchg
add
adc
add
fadds
xor
in
imulb
add
push
add
lea
add
and
loope
add
add
fdivl
push
add
mov
mov
add
sub
ja
xchg
dec
add
movsb
divl
addb
test
stos
scas
xor
mov
add
add
das
add
fldt
add
popf
cmc
outsl
sbb
and
add
inc
cmc
jbe
gs
sbb
into
out
fcoml
int3
add
add
jne
add
pop
add
ss
dec
add
sub
je
stos
daa
jae
sub
stc
sub
in
pop
add
cmp
add
add
mov
add
idivl
add
add
js
sti
mov
or
dec
push
add
pop
add
data16
push
add
adc
in
pop
inc
out
sbb
add
and
add
jbe
nop
mov
sub
mov
inc
xchg
xorl
add
movsb
xor
dec
jg
or
imul
lret
dec
add
inc
add
jmp
jmp
fcoml
pop
add
add
pop
add
push
add
push
add
add
pop
add
add
xchg
xchg
add
lret
movsl
jb
pop
add
fisttps
test
loope
adc
mov
dec
in
inc
add
push
add
cli
and
lret
cli
cmc
push
add
jmp
pop
push
add
add
fistpll
aaa
pushf
add
insb
add
or
lods
test
push
add
mov
add
test
add
jg
xchg
push
add
xor
add
loop
lcall
add
cwtl
mov
clc
hlt
xchg
jbe
insl
movsb
or
mov
orb
mov
add
add
jmp
testl
xchg
scas
cmp
adc
ret
inc
add
sub
add
bound
pusha
add
add
stc
pop
push
add
add
movl
add
addr16
jle
xor
add
add
pop
add
pop
add
cmp
in
or
idivl
xchg
pop
sbb
mov
stc
or
pushf
jb
pop
xchg
mov
mov
popa
sbb
sub
out
dec
add
add
adc
push
cmc
mov
fidivrs
mov
arpl
stos
ficoms
outsb
add
scas
fimuls
jnp
sub
sbb
sub
insb
add
cmpsl
add
imul
mov
repz
xlat
popf
stos
and
xchg
fsubr
stos
dec
xchg
and
add
xchg
add
push
add
test
or
inc
shlb
lret
ljmp
clc
das
out
ja
add
add
cwtl
cmp
jle
test
xor
add
cmpb
add
add
and
add
add
and
xchg
je
inc
add
add
fwait
je
pop
add
jo
addr16
add
iret
stos
inc
add
add
add
lret
dec
jle
and
dec
add
lcall
xchg
pushf
and
inc
mov
mov
xchg
push
add
cmpsb
dec
insb
add
pop
testb
into
add
jo
loope
sub
cmp
add
push
mov
sub
daa
adc
fistps
jmp
out
mov
add
test
adc
add
sahf
pop
clc
add
inc
mov
add
std
xor
add
add
rep
xor
pop
add
jg
fldt
mov
pushf
add
lret
mov
movsl
pushf
adcl
add
lret
sbb
mov
add
xchg
add
lods
ja
add
stos
adc
add
add
push
add
mov
xchg
mov
adc
inc
add
mov
lcall
jmp
add
call
fwait
mov
mov
jns
out
loopne
add
outsb
add
les
dec
add
add
sub
mov
inc
add
aaa
xchg
add
add
dec
xchg
pop
add
aad
add
push
sbb
in
fcmovbe
xor
add
push
sbb
jp
sbb
xor
cmp
lea
add
fsin
into
mov
cmc
fwait
rorl
out
repz
add
inc
mov
cmp
rol
sti
mov
add
ret
in
lcall
or
add
imull
pop
mov
scas
sarb
add
mov
add
mov
dec
add
nop
jmp
sti
addl
dec
stos
jnp
sbb
out
daa
loop
add
jmp
xor
xor
add
lret
mov
les
nop
add
add
sbb
sbb
stos
dec
mov
ret
xor
cltd
sbb
sti
or
or
mov
out
add
add
das
push
add
call
sub
or
rorb
addl
add
js
dec
add
lods
popa
popf
fsubs
add
add
lret
das
and
add
add
add
data16
xchg
jnp
testb
add
test
xor
add
xchg
dec
add
adc
add
sub
out
xor
sti
inc
mov
rcrb
jmp
and
in
add
mov
push
out
cmpb
popf
test
add
mov
add
inc
pop
fiadds
mov
push
add
add
popf
xchg
mov
cmp
scas
xchg
outsl
dec
jae
add
push
cmp
pop
stos
movsb
cltd
dec
adc
loop
xchg
jg
add
add
adc
add
lods
subl
aad
in
mov
push
add
add
push
mov
imul
sbb
bound
lds
pop
add
mov
bound
jae
pop
add
add
jp
push
add
jne
cwtl
push
je
hlt
xor
in
out
fmuls
add
mov
inc
add
in
sbb
sub
fisubrl
add
xor
push
lret
add
cmp
fimull
add
or
iret
sub
sbb
jge
add
sahf
pusha
add
mov
dec
add
insl
pop
sub
out
pop
hlt
out
out
test
adc
mov
inc
pop
stc
and
add
mov
mov
sahf
test
in
xchg
xchg
out
xchg
mov
mov
sahf
int3
hlt
add
add
lahf
add
mov
lret
icebp
add
test
dec
imul
inc
xchg
ret
add
std
mov
ss
fcompl
daa
mov
add
rolb
push
sub
adc
stos
lret
mov
add
mov
fistl
xor
jbe
jnp
shll
mov
add
add
xchg
pop
test
sub
sub
or
imul
jl
out
add
add
add
inc
add
add
jecxz
jmp
int3
cmpsl
test
push
add
adc
add
out
shl
aas
jp
divb
or
leave
mov
dec
add
cld
lock
jecxz
and
add
inc
add
push
add
pop
dec
add
mov
js
sub
add
add
mov
mov
and
add
add
bound
adc
add
jns
in
jo
mov
and
ss
jne
out
mov
bound
sub
cmp
push
add
jp
inc
add
sub
daa
int
ds
in
das
adcb
add
jns
adc
add
pop
inc
add
jge
rorb
out
jecxz
adc
into
pop
and
jmp
mov
aaa
mov
les
add
jle
dec
add
rcll
jae
pusha
add
sbb
push
push
add
mov
ret
mov
fildl
add
push
adcb
jmp
add
mov
add
cmp
in
dec
dec
arpl
mov
ss
add
pop
fcom
test
mov
xchg
lcall
mov
add
scas
jle
ja
shrl
mov
add
mov
add
add
out
or
out
insl
movl
adc
stc
dec
jb
out
jle
bound
add
add
leave
call
add
adc
add
push
push
jmp
clc
sbb
xlat
push
pushf
outsl
or
jge
xchg
cmp
test
add
std
add
add
mov
push
push
add
mov
bound
xchg
push
push
add
neg
jge
add
push
add
xor
movsb
mov
add
icebp
mov
into
xor
loop
insl
fnstcw
add
adc
and
xchg
mov
add
jnp
pop
add
push
data16
push
icebp
sbb
iret
pop
mov
sbb
mov
push
add
jbe
insb
add
xor
add
int
push
outsb
add
mov
lahf
adc
jns
pcmpeqw
lea
inc
add
incl
fstpl
add
add
add
fld1
cmp
mov
in
sbb
icebp
je
xchg
adc
add
shl
jo
std
stos
pop
lret
daa
inc
add
stc
fadds
add
add
pop
icebp
popf
ret
sbb
lret
shlb
add
test
mov
add
jl
mov
std
sub
and
ret
insl
mov
mov
pop
and
sub
js
sarl
sbb
pushf
mov
aad
jge
sub
jns
mov
add
add
pop
sub
jne
add
add
pop
add
scas
repz
add
repz
outsl
jmp
je
inc
lcall
jp
les
add
std
add
lret
bound
outsl
aaa
inc
add
pop
sbb
les
add
clc
gs
add
das
mov
jno
jo
divb
nop
cmpsl
pop
add
jno
add
add
inc
add
sbb
cmp
jmp
mov
shrl
cmpb
popa
shll
mov
into
jnp
xchg
xchg
sbb
pop
in
add
test
in
inc
aas
dec
add
mov
cmpsl
inc
add
cmc
lds
add
push
cltd
out
push
sub
sbb
xchg
outsb
add
mov
add
daa
add
jecxz
pop
add
pop
add
jno
addb
jg
add
add
lret
add
imul
fwait
xchg
rcll
dec
add
add
jle
mov
int3
dec
cmpsb
sbb
rorl
add
add
loopne
lds
in
jp
cltd
push
in
es
or
cmp
rcl
test
add
add
popf
pusha
add
cmpsb
and
cmpsl
inc
xchg
cmp
add
and
shll
ja
incl
das
push
cmp
les
cmp
mulb
mov
enter
ret
add
add
add
and
or
mov
or
xchg
les
cmpsb
add
jbe
scas
cmpsl
js
btsl
insb
add
scas
adc
add
push
add
jle
xlat
mov
xchg
add
hlt
jo
leave
sub
fcmovb
inc
add
add
add
fldl
fldenv
mov
xor
add
jg
add
push
mov
jbe
pop
add
push
jb
xchg
fstp
jmp
lahf
add
jo
mov
jmp
repz
sti
stc
scas
addr16
push
mov
add
add
add
arpl
stos
ret
xor
lret
pop
cmpsl
in
std
sbb
mov
sbb
pop
adc
movb
int
add
add
add
out
sbb
or
add
add
lods
add
repnz
add
mov
add
add
rcrl
add
rolb
xor
mov
adc
add
push
add
pusha
add
jnp
enter
aaa
std
add
add
cmpsb
movsl
test
test
xchg
orl
add
in
add
mov
mov
add
mov
dec
add
gs
add
imul
push
stos
add
test
pusha
add
leave
add
adc
jns
add
out
sub
popf
movsb
cmpsb
cmpsb
push
in
std
cmpsb
add
or
test
fiadds
adcl
das
xor
lods
fiaddl
js
nop
mov
add
add
add
add
cld
adc
jge
loop
test
lods
add
add
loop
push
add
jmp
jmp
push
add
add
cld
push
add
scas
int3
jmp
ljmp
hlt
mov
add
add
push
add
pop
add
dec
add
rcll
dec
lcall
add
cld
add
add
add
loope
or
mov
push
ret
out
inc
add
loop
cli
nop
sub
add
js
pop
add
push
cmp
dec
xor
and
add
cmpsb
mov
inc
imul
pop
add
cltd
mov
loop
add
pop
add
lcall
xor
add
in
test
mov
roll
mov
add
test
add
gs
sti
in
push
add
add
add
xchg
subb
push
fisubrl
xor
add
cmp
and
sbb
push
inc
stc
lea
mov
add
push
lret
sub
mov
adc
add
mov
sbb
push
sub
int3
lret
add
imul
pop
push
filds
push
add
add
lret
and
add
rolb
add
clc
xchg
cmpl
mov
imul
cmp
stos
shll
add
add
add
pop
inc
mov
push
cmpsb
add
jmp
add
and
push
clc
mov
add
popf
sbb
addr16
add
cld
popf
mov
mov
in
outsb
add
dec
roll
testl
add
out
cmp
loope
roll
cmp
lea
mov
imul
add
add
inc
imul
and
dec
pop
or
mov
add
or
or
lret
add
test
iret
lcall
lods
inc
cmp
lret
out
add
pop
add
add
mov
push
test
rcrl
aaa
cmpsb
add
in
pop
add
sub
xchg
adcb
lea
add
add
popa
add
stos
add
push
add
mov
pop
xor
cmp
stos
jb
jg
add
movb
jbe
sub
mov
inc
push
add
jl
iret
fcoml
sbb
ja
add
cmp
dec
add
leave
lret
inc
add
inc
add
pop
add
add
adc
sbb
rorb
add
add
and
in
mov
add
add
dec
add
add
jbe
lahf
data16
mov
cmpsl
mov
jno
sub
les
or
add
xor
add
add
fadds
pop
add
add
cmp
test
xchg
das
add
ret
outsl
pop
push
jge
xchg
inc
add
push
add
jnp
jns
cli
or
jg
and
mov
mov
add
add
add
dec
and
add
xchg
jecxz
add
add
pop
mov
dec
add
mov
or
aaa
xchg
add
test
xchg
cwtl
shrb
out
mov
icebp
aas
pop
mov
add
add
sbb
shrl
fisubrs
mov
add
xchg
aaa
cmp
stos
sbbl
mov
mov
enter
jne
mov
jo
jge
add
xchg
add
cld
or
and
pop
add
adc
add
adc
dec
add
js
mov
shrl
int
pop
add
stos
shrb
pop
fistps
movsb
and
jl
push
sbb
mov
addr16
in
mov
movb
add
in
xchg
aam
call
add
sub
out
mov
xor
or
jl
jns
pop
add
roll
in
rolb
push
mov
mov
sbb
lahf
out
and
mov
add
add
aad
add
out
add
jnp
arpl
add
repnz
scas
out
jge
jbe
xor
add
into
add
add
add
pop
or
inc
mov
add
jle
or
pop
add
mov
xchg
stc
rorb
jae
add
add
adc
pushf
push
add
dec
add
add
sub
daa
cmp
outsl
cmpsb
sub
xchg
out
add
add
fcmovne
mov
adc
add
push
add
xlat
sbb
jbe
adcl
rcl
daa
je
mov
bound
popa
sub
mov
mov
push
add
add
pop
pop
mov
lock
add
and
add
mov
push
add
inc
add
scas
add
leave
dec
inc
add
scas
xchg
jge
jl
pop
fyl2xp1
jns
sbb
add
fldl
outsb
add
pop
repz
add
aas
and
add
mov
push
add
test
sub
imul
rdpmc
mov
popa
in
xchg
enter
add
add
rolb
dec
jecxz
and
xchg
popa
jl
xchg
add
loop
push
ret
loope
aad
shl
imul
sub
icebp
dec
add
sub
add
add
pop
add
aam
add
xor
lods
testl
sub
cwtl
nop
or
pushf
push
sbbl
add
shlb
add
test
add
add
shll
or
pop
add
add
mov
push
sbbl
in
movsb
jb
or
lds
popa
add
add
pop
add
fiadds
jne
jmp
and
add
fwait
cmp
clc
push
add
xor
add
adc
add
fstps
add
icebp
mov
add
add
stc
inc
add
add
out
sti
les
cmp
cmpb
sbb
pop
mov
add
cmp
xor
add
lock
cmp
dec
add
and
cmp
lds
aad
fwait
jne
mov
add
jo
pop
add
verw
ds
add
cmpsl
pusha
add
jno
aam
mov
test
and
add
mov
xchg
insl
rorl
das
popa
add
dec
gs
mov
sar
adc
add
mov
pop
add
je
out
push
add
pop
add
sub
das
out
push
pop
add
sbb
frstor
pushf
hlt
out
add
inc
add
clc
pop
movl
negb
add
jecxz
dec
jb
pop
add
add
mov
add
jmp
fcompl
cmp
in
push
test
jnp
pop
jbe
mov
cmpsb
and
add
xchg
das
mov
add
sahf
movsl
insl
jmp
xchg
ret
orb
sbb
push
sub
sarb
scas
dec
stc
sti
lods
xchg
mov
add
add
add
add
adc
add
ret
sbbl
push
add
popf
in
xor
pop
add
movsl
jb
hlt
test
pop
add
jg
pop
jae
or
jmp
add
sbb
dec
add
add
pop
add
add
add
test
sub
and
mov
add
cmp
lcall
mov
add
jmp
mov
add
into
adcl
add
mov
lea
jge
jl
cltd
test
mov
sti
and
cmpsb
adc
add
add
push
mov
mov
pop
sbb
cli
xchg
cmc
add
vsqrtpd
sbb
inc
add
lahf
mov
pop
add
push
inc
add
dec
add
inc
add
shlb
jns
int
xor
ror
cltd
sbb
mov
mov
mov
add
or
jle
sub
dec
or
mov
inc
add
add
cmp
mov
pop
add
je
cld
mov
iret
add
inc
and
nop
jne
or
das
aaa
imul
dec
ja
add
js
scas
jmp
push
add
add
mov
add
add
aas
add
jnp
xchg
and
mov
xchg
scas
or
aas
jnp
inc
es
add
add
mov
pop
add
pop
mov
aad
xchg
ds
or
and
movsl
mov
add
and
pop
rorb
inc
add
dec
push
popf
rclb
jb
clc
scas
inc
add
hlt
add
xor
add
dec
add
movl
hlt
add
add
xchg
les
aaa
test
cmc
movsb
sbb
inc
add
mov
add
seta
jle
cmp
scas
stc
add
lcall
add
inc
sbb
dec
add
add
mov
add
dec
add
xchg
add
lds
push
add
push
add
sbb
push
adc
add
lret
out
mov
xchg
in
roll
adc
and
jmp
add
sub
sti
inc
add
inc
add
clc
dec
jecxz
inc
add
mov
add
add
add
or
xchg
add
add
pop
add
add
add
stos
xchg
add
or
pushf
cmc
jbe
cmpsb
mov
data16
aam
das
bound
xor
add
add
sub
mov
add
add
xor
fisttps
scas
orl
sub
sbb
arpl
add
mov
add
add
cmc
mov
pusha
add
push
sbb
scas
xor
add
jecxz
jecxz
add
ss
add
cmpsl
or
ljmp
cmpsb
pop
jbe
xchg
or
add
push
pushf
mov
divl
push
add
sbb
sub
mov
pop
int
pop
add
add
dec
mov
xor
add
push
add
sbb
push
xor
mov
sub
or
push
or
frstor
lds
jo
daa
jae
xor
add
adc
sub
cli
scas
repz
rolb
arpl
test
lock
add
xchg
int
mov
add
addl
add
lods
or
dec
ficomps
add
xor
mov
lcall
add
sub
jp
add
insb
add
add
add
jo
pop
add
mov
and
add
jecxz
add
mov
add
cmp
mov
pushf
fnstcw
add
cmp
mov
not
jmp
pop
add
flds
sbbb
cmp
loop
std
mul
in
test
in
add
popa
cltd
or
inc
add
add
imul
xor
add
jmp
add
add
inc
add
xchg
lds
xor
add
inc
cwtl
sarb
test
and
cmpsb
sub
idivl
test
add
nop
dec
add
add
imul
add
xor
ja
sub
cmp
lret
pop
add
popa
loope
add
nop
add
push
xor
jno
sub
insl
push
and
add
and
add
add
jns
scas
mov
push
pop
add
add
sti
add
in
ret
scas
mov
scas
loopne
je
ja
ja
or
divb
pop
add
xorb
push
adc
push
int
or
add
mov
add
mov
lea
jge
xor
cmc
add
add
mov
push
dec
ret
fidivrl
xor
or
dec
add
cs
jg
adc
add
mov
pushf
fidivrl
mov
mov
jmp
add
scas
mov
push
mov
in
lret
mov
popf
push
add
pushf
pop
mov
out
lret
call
add
clc
add
scas
add
xor
add
xchg
add
mov
add
add
stc
add
cmpsl
adc
add
inc
add
je
inc
sbb
sub
sbb
cmpsl
sbb
lods
test
sub
les
sbb
iret
add
mov
add
push
add
adc
stos
int3
fisubs
sbb
fsts
loopne
in
jmp
sbb
add
add
ja
repnz
add
inc
add
inc
add
add
or
adc
add
cmp
pop
add
ss
add
or
out
mov
adc
add
jmp
popa
xchg
add
sub
sbb
xor
add
mov
add
add
xchg
add
xor
add
add
rcrl
add
into
outsl
std
std
or
std
arpl
jp
addr16
add
or
or
cltd
mov
pop
add
add
cmp
xor
add
add
pop
add
add
dec
int
shl
enter
jnp
dec
lret
movsl
add
dec
jp
fucomi
in
outsb
add
es
add
add
pop
add
icebp
lock
push
popa
add
add
pop
add
cmp
or
sub
sub
mov
push
in
push
add
repnz
add
add
sbb
pop
add
add
leave
add
inc
inc
add
xchg
popf
lds
out
mov
icebp
insb
add
xchg
push
mov
add
lock
add
cltd
add
add
popa
sub
ss
add
cmc
rcl
sar
pop
add
push
add
and
add
xchg
add
xchg
outsl
and
out
aas
lret
add
add
jg
add
leave
scas
fimull
mov
cmp
xor
add
cld
xor
movsl
mov
add
in
shlb
mov
mov
loope
add
test
xor
add
push
in
loope
push
add
or
cmpsl
add
lahf
repnz
add
mov
lret
add
sti
int
sub
mov
jne
add
push
cmp
stc
pop
mov
mov
call
inc
add
xor
data16
clc
fwait
movsl
out
mov
add
add
loopne
int3
rorl
push
dec
add
clc
add
pop
add
test
mov
pop
add
aad
jecxz
aam
inc
add
aaa
push
add
add
inc
add
sub
mov
lea
add
push
add
out
dec
add
push
push
or
add
test
mov
out
jp
sub
pop
add
inc
add
add
add
add
add
add
add
sbb
add
movb
test
push
add
xchg
push
testl
mov
jo
movl
dec
add
jmp
mov
add
mov
jno
add
insl
shll
inc
add
jmp
add
xchg
add
xchg
add
dec
cwtl
iret
mov
pop
jg
add
adc
push
add
loope
mov
cmp
fsubrs
int3
mov
decl
lcall
or
pushf
jno
and
add
dec
mov
add
jge
int3
adc
add
add
movntq
add
scas
roll
add
fistpll
add
ja
adc
add
push
add
and
test
mov
jle
add
iret
sbb
mov
sbb
adc
jge
lods
add
add
add
add
jmp
lret
mov
sbb
or
out
add
add
ret
call
add
outsl
add
mov
fwait
add
jno
sbb
pop
movsb
sub
sub
add
cli
mov
mov
dec
add
hlt
fdivrs
outsb
add
roll
popa
add
and
add
add
add
pop
add
or
pop
add
pop
add
sbb
shlb
ds
add
inc
add
xor
add
jo
mov
pop
add
push
cs
add
add
faddp
xchg
xchg
scas
mov
sub
repnz
sub
pop
add
sbb
mov
sbb
add
scas
push
sbb
out
aam
insl
in
fstpl
add
add
add
cmpsb
pop
test
inc
or
mov
add
nop
pop
jno
xlat
imul
add
add
add
xchg
lcall
or
sbb
movsl
in
add
ret
pushf
enter
lahf
add
push
xchg
sbb
in
dec
adc
add
inc
insb
add
or
daa
pop
add
add
mov
inc
add
pop
add
leave
lock
sbb
in
dec
faddl
add
and
jne
in
add
pop
cwtl
cmpsl
icebp
adc
add
daa
pop
add
pop
sub
xchg
sub
pop
add
into
add
add
mov
add
add
add
xchg
add
movsl
add
lods
mov
add
daa
test
mov
pop
add
cwtl
ror
gs
add
roll
insl
xlat
jge
add
jl
ss
arpl
cmp
mov
bound
jl
cmp
add
xchg
add
imul
add
mov
mov
imul
pop
jp
mov
addr16
shlb
jge
cmpsl
sbb
pop
add
or
cli
pop
aad
lahf
jno
jae
repz
cli
add
and
sbbb
inc
add
jle
out
xor
sbb
sbb
cmpsb
ljmp
add
add
testl
add
rolb
data16
sti
add
call
sti
test
mov
add
mov
jae
mov
xor
sub
mov
data16
add
add
popf
jae
lret
ds
aas
jo
mov
or
lods
mov
mov
add
sbb
add
inc
add
cmp
push
cmpsl
bound
jecxz
imulb
mov
pop
das
mov
push
add
lods
daa
cld
add
sub
outsb
add
xchg
mov
das
repnz
mov
into
add
dec
pop
add
sahf
ret
sub
mov
inc
push
and
lahf
rolb
jl
xchg
lea
fldl
dec
sub
add
cmc
ljmp
divl
add
imul
add
or
push
add
push
pop
add
lods
cmp
mov
cmp
lods
dec
fisubrs
mov
and
add
int
inc
add
lds
add
and
add
sti
dec
jnp
adc
add
pop
add
mov
xor
add
and
frstor
add
sahf
mov
dec
mov
inc
notl
xlat
add
add
add
icebp
add
and
icebp
insb
add
add
add
inc
add
cmp
pop
add
xor
add
lds
add
aaa
mov
push
ret
jmp
out
mov
dec
add
add
add
ret
add
mov
add
test
add
pop
mov
add
addr16
add
add
dec
add
add
adc
add
repnz
mov
fldl
fildll
mov
rol
test
add
add
call
xchg
cmp
cltd
fdivs
call
and
add
loopne
ret
adc
add
cmp
jmp
enter
xor
push
iret
scas
xor
add
add
nop
jp
or
nop
and
add
add
lret
add
lds
int3
xchg
sti
xor
add
cs
jnp
push
cmp
push
popf
addr16
push
add
dec
push
stos
add
test
ja
mov
les
clc
leave
call
pop
add
xchg
stc
sti
cli
stos
mov
stos
add
adc
and
in
add
mov
add
insb
add
xchg
movsl
ds
lret
outsb
add
push
add
stos
mov
addb
lret
inc
add
or
mov
rclb
in
lods
insb
add
pop
test
add
dec
jno
add
xor
jns
mov
stc
out
pop
add
lea
pop
xor
add
add
inc
dec
add
ds
jle
loop
dec
lcall
add
add
imul
adc
loope
add
inc
add
jp
pop
jne
inc
add
jb
hlt
mov
add
add
xor
add
mov
and
nop
push
cli
sub
sub
popf
sahf
and
cmp
gs
gs
mov
add
sbb
add
or
push
add
push
les
mov
insb
add
add
adc
add
add
add
dec
inc
add
and
jb
out
push
add
xchg
lods
jecxz
daa
or
dec
add
add
add
dec
js
movsb
xchg
sbb
jne
push
push
add
xor
add
ret
lea
movups
fiadds
cmp
je
mov
add
lret
loopne
add
cmp
mov
clc
add
sti
lea
add
add
aas
ret
add
add
insl
adcl
lock
add
int
dec
add
jp
shl
xor
add
jns
int3
loopne
add
lods
pop
roll
xchg
dec
add
xchg
data16
out
clc
mov
xor
add
outsb
add
lods
add
add
add
ret
xchg
push
add
push
sti
mull
add
add
das
push
xor
add
mov
pop
add
and
test
add
sub
in
ljmp
mov
jb
cwtl
push
in
in
xchg
add
into
sahf
cmp
push
sbb
inc
or
or
mov
fwait
imul
jl
jle
out
mov
mov
add
push
mov
pushf
adcb
add
mov
scas
push
lahf
add
jmp
sarb
roll
dec
sub
add
sbb
hlt
int
add
push
add
pop
cltd
add
cmp
push
add
and
lods
add
jl
mov
jle
push
cmp
repz
sbb
mov
lahf
call
push
adc
and
add
push
add
add
loopne
or
dec
adc
push
arpl
idivb
add
add
cltd
add
add
mov
bound
lea
aaa
lret
add
rolb
xor
aad
add
push
sbb
jmp
dec
push
and
push
lods
add
mov
sub
fildl
in
add
aas
cmp
je
es
xor
add
sub
out
es
int3
std
ja
aas
call
xor
add
adc
roll
push
movsb
jns
and
add
addl
mov
add
add
fucomp
inc
add
mov
or
fcomip
stos
cmp
aad
sbb
cld
popf
cmp
mov
add
int
cli
mov
add
pop
add
add
test
mov
outsb
add
sub
xchg
add
movsl
jns
out
repnz
add
push
jne
cmp
roll
inc
lea
orb
test
mov
jae
add
xor
add
add
xchg
add
fwait
pop
add
clc
iret
roll
es
add
mov
or
or
inc
scas
dec
fwait
pusha
add
add
add
sbb
iret
push
add
mov
add
xchg
call
test
push
mov
lret
sub
jge
add
test
add
mov
push
add
pusha
add
jae
add
add
pop
test
cmc
xor
add
add
out
dec
pushf
jns
add
aaa
inc
add
lret
mov
pop
add
mov
rcll
sub
pop
add
add
mov
add
popf
push
add
lods
cmp
or
pop
add
lcall
or
mov
push
jo
rorb
xorl
aas
push
push
add
sub
jl
daa
jge
and
pop
add
bound
bound
cmp
imul
jbe
or
pop
add
add
push
popf
into
rol
push
ret
add
cmc
inc
add
jecxz
outsb
add
xchg
cmp
xor
add
lods
dec
add
or
arpl
add
add
dec
cmp
or
aas
inc
mov
inc
add
ficompl
add
insb
add
int
jp
push
add
daa
add
ret
fstpl
add
jp
add
loopne
dec
add
adc
loop
add
cmpsl
jecxz
test
and
or
aad
cmp
dec
add
and
gs
xchg
sub
mov
les
add
add
push
push
add
loopne
imul
add
stos
add
icebp
cmp
push
jp
sub
sbb
jo
mov
add
mov
jge
dec
popf
push
adc
xorl
adc
mov
subl
add
ds
into
scas
push
add
add
jb
xchg
test
cmp
fisubrs
lahf
aam
jge
cmp
jle
mov
add
add
cmp
jne
cld
popf
dec
add
push
add
inc
add
sbb
add
push
add
aad
add
xor
add
pop
jecxz
sub
cli
mov
xlat
stos
xchg
in
jl
mov
push
mov
dec
add
cltd
pop
add
lock
mov
add
jne
add
add
gs
into
adc
inc
add
roll
popa
ss
fwait
add
add
xchg
add
mov
sub
stos
adc
jmp
adc
add
inc
add
mov
add
imull
mov
in
pop
add
imul
add
lock
inc
or
shll
test
mov
mov
inc
add
pop
add
int
add
adc
ret
push
inc
mov
push
add
and
mov
add
rolb
xchg
dec
add
jmp
add
add
fld
incb
add
add
dec
add
roll
mov
and
mov
popa
cwtl
jecxz
int
add
add
es
jno
dec
push
add
add
mov
aaa
and
and
add
and
mov
mov
jl
mov
cmp
mov
icebp
adc
outsb
add
or
and
test
and
mov
sbb
mov
mov
add
in
adc
mov
xchg
cmp
sub
test
pop
push
or
xlat
cmp
cmp
jmp
mov
xchg
add
add
pop
add
push
pop
add
jmp
out
add
out
xchg
mov
sbb
add
add
cmp
stc
or
imul
out
add
xchg
lea
stos
add
cmp
cld
mov
mov
gs
add
sub
pop
add
add
dec
add
add
add
xchg
add
mov
fnstcw
pop
push
xchg
adc
add
sbb
add
sbb
call
mov
mov
sub
aas
test
out
push
add
and
fwait
or
test
or
int3
and
add
out
xlat
ret
jns
xor
into
push
fistl
push
repnz
stos
out
sahf
or
inc
sbb
aas
or
jns
push
mov
mov
add
aas
ss
add
scas
inc
data16
cmpsl
add
xchg
mov
scas
xor
int3
cmpsb
fimuls
add
add
inc
add
sub
add
dec
add
ret
add
mov
dec
cmpsl
adc
add
add
add
add
test
out
add
mov
lods
add
add
cmp
insb
add
mov
jmp
add
add
fldcw
incl
mov
mov
adc
add
add
add
add
ret
pusha
add
test
cmp
pop
add
int
add
scas
add
add
lahf
and
add
sbb
push
add
imul
jle
jecxz
mov
es
rol
ds
mov
xchg
or
or
inc
ret
add
mov
iret
mov
loope
mov
inc
add
push
add
add
add
push
xor
int
add
pop
add
shlb
add
repnz
shrl
xlat
adc
add
mov
add
inc
add
repnz
rcl
push
data16
incl
addb
add
jg
push
xor
cmc
pop
out
add
add
call
add
add
into
mov
mov
sahf
push
add
add
sub
jno
xchg
out
mov
push
add
add
xchg
out
add
outsb
add
sub
clc
lock
and
add
mov
out
loop
or
lahf
hlt
xor
or
sub
or
or
insl
subb
xchg
popf
pop
pop
js
sbbb
cmp
push
add
and
dec
add
add
add
inc
add
out
inc
add
add
mov
inc
fldt
int
inc
fistps
xor
add
popf
cmp
or
jle
rcll
insl
adc
mov
fidivrl
add
sub
pmulhw
inc
loope
fstpt
pop
add
aad
add
add
lcall
pop
add
add
mov
stos
add
inc
add
shl
add
add
testl
stos
cmp
add
out
add
xchg
insb
add
push
add
pop
sub
add
jecxz
vpunpckhqdq
mov
jecxz
fwait
jae
shr
add
add
push
ret
sub
ljmp
add
pop
add
adc
add
sbb
pusha
add
fldt
add
add
mov
add
cmp
push
jmp
jb
or
cld
inc
add
add
loopne
add
sbb
xor
inc
inc
add
add
push
hlt
inc
fdivp
cmpsb
sbb
inc
or
das
insl
sub
push
mov
jno
js
cmp
push
add
cmp
cmp
outsb
add
jp
pop
add
repz
dec
add
test
jecxz
push
push
iret
inc
lea
add
cmc
stos
jmp
ror
jl
imul
int
xchg
dec
add
lock
mov
decb
add
add
jg
test
add
rcrl
add
push
nop
pop
add
addr16
or
jmp
lods
mov
mov
push
int
loop
add
add
add
xchg
mov
fstpl
bound
lea
adc
add
jecxz
xchg
or
pushf
imul
sub
movb
cwtl
adc
xchg
cmp
and
add
sbb
add
jp
mov
leave
add
add
insb
add
jo
mov
sbb
enter
or
mov
add
sbb
stos
ljmp
cmpsl
push
add
add
incb
stc
fsubl
add
pop
pushf
add
jl
jne
add
incl
xchg
inc
add
or
data16
inc
xchg
adc
add
add
mov
cltd
jb
mov
or
fisubl
dec
add
lahf
push
add
or
jmp
arpl
cmc
add
adc
std
ret
add
fcompl
pop
or
or
addb
and
add
popf
add
mov
push
add
add
mov
add
mov
fdivrl
arpl
push
sub
mov
mov
add
or
invd
add
sbb
jge
repz
pop
xchg
push
in
fsubs
inc
add
cmpsl
add
add
decb
int3
add
movsl
bound
insb
add
jg
cmp
mov
incb
mov
add
sub
vpsadbw
ret
sbb
test
cmp
fcomip
dec
roll
or
movsb
add
dec
inc
sbb
ret
xchg
sub
dec
add
push
add
or
jge
movsl
sbb
add
jb
imul
jge
cmp
xor
add
add
add
add
in
jno
ret
add
add
jb
mov
std
aaa
loope
mov
mov
xchg
or
add
push
add
add
clc
cmp
filds
hlt
adc
add
add
inc
add
add
mov
xchg
add
shrl
add
inc
dec
add
cli
add
pop
add
jno
addr16
jg
into
fsub
dec
add
clc
mov
inc
add
hlt
stos
sbb
lcall
add
push
add
jl
cmpsb
or
outsb
add
jbe
mov
push
cmpsl
cmpl
add
lcall
adc
add
jle
xchg
lock
cld
adc
add
int
cmp
add
add
bound
mov
popf
and
add
stos
cld
rep
cmp
add
insb
add
enter
aam
push
add
pusha
add
add
in
jp
shrl
jno
mov
push
add
add
mov
cmc
in
aam
data16
mov
stos
jo
enter
loope
or
add
and
adc
xchg
lret
cmc
cmp
or
nop
int
xchg
add
test
add
add
fisubs
dec
add
dec
add
fidivrs
test
xorl
push
add
push
add
add
mov
mov
imul
xchg
int3
add
aaa
addl
push
add
xor
add
stos
iret
out
add
add
dec
in
adc
add
add
inc
add
xor
mov
fidivrs
add
or
add
idivl
pop
in
movsb
js
cmp
add
imul
or
cwtl
imul
add
jnp
pop
adc
adc
rcrl
push
add
or
adc
pop
mov
cmp
icebp
je
sbb
dec
add
inc
add
lcall
loope
mov
js
jae
sub
daa
sbb
sbb
pop
outsl
add
es
add
add
sbb
and
clc
sbb
add
add
in
xor
add
jae
pop
add
add
lret
add
jae
xlat
jecxz
dec
add
add
pushf
push
dec
push
test
add
cltd
dec
add
movb
ja
jg
push
add
add
in
add
inc
int
enter
mov
add
in
jb
xor
add
aam
jne
cld
aad
mov
cwtl
mov
jg
js
sub
jl
add
add
pusha
add
js
jne
mov
rol
sbb
shrb
push
add
and
xchg
leave
sbb
shrl
loopne
add
out
pop
push
add
sbb
jge
mov
jns
mov
jno
mov
add
daa
add
push
fstpl
or
rorb
shlb
xchg
add
sar
pop
and
add
out
add
mov
sub
mov
add
xlat
push
mov
fwait
int3
test
subl
jne
cmp
sub
sbb
and
add
je
inc
add
sub
std
inc
sarb
sub
popl
movsl
bound
ss
outsl
test
test
repz
add
ret
lahf
outsb
add
push
cmp
xor
call
add
inc
add
mov
mov
test
xchg
fiaddl
add
add
cmc
lock
call
add
ret
stc
iret
push
aaa
ljmp
jl
aaa
and
add
add
loop
and
test
xor
mov
jo
pop
add
insl
and
add
fcomps
lods
xor
add
add
add
stos
add
add
insb
add
sub
test
xchg
xor
adc
xor
push
mov
movsb
cmpsl
mov
jecxz
or
mov
jae
xor
test
mov
push
add
sub
xchg
add
out
add
test
bound
shrl
jae
nop
repnz
nop
aas
mov
outsl
shrb
add
add
mov
add
add
add
ror
xchg
xchg
mov
xchg
or
inc
push
out
cmp
push
add
add
and
add
lock
test
std
loope
dec
mov
inc
add
mov
rcrb
push
lcall
aam
add
xor
pop
std
add
or
ret
or
inc
add
add
add
add
xchg
sub
out
add
and
add
enter
xor
add
filds
sbb
or
lcall
and
inc
add
mov
adc
add
inc
add
cmp
add
or
adc
add
inc
add
add
mov
cmp
xchg
xchg
sahf
insb
add
xor
add
stos
jns
pop
dec
pushf
pop
add
add
jns
cmp
jns
xchg
pushf
pop
add
leave
add
add
pop
sub
fstps
dec
jbe
sar
stos
or
js
popf
sub
xor
roll
adc
xor
inc
xchg
out
test
push
add
pusha
add
jl
and
add
xchg
lods
sub
mov
add
add
cs
mov
inc
jecxz
jg
inc
add
add
add
sahf
mov
leave
scas
push
add
add
push
sub
mov
movsl
imul
xor
add
ljmp
fcom
xchg
cmp
mov
add
xchg
add
xor
test
cli
jmp
cmpsl
add
lret
pop
clc
add
hlt
repz
xor
sbb
js
cltd
ljmp
arpl
push
mov
imul
icebp
sbb
add
lret
pushf
push
std
cld
fidivrs
and
pushf
cmpsl
je
daa
sbb
mov
mov
jmp
inc
or
sbb
xchg
pop
xchg
dec
inc
inc
add
jns
xchg
xor
jne
add
out
mov
int3
pop
xor
add
mov
mov
mov
inc
xchg
ja
loopne
jl
push
add
xlat
pop
add
add
pusha
add
add
inc
add
test
mov
daa
inc
add
push
xor
add
outsl
add
push
mov
add
push
pop
add
xchg
repz
aam
pushf
xchg
ja
inc
add
push
enter
clc
cmpsb
lock
in
bound
in
jne
add
sub
mov
fldcw
pop
mov
fisubrs
add
add
fs
popa
fisubrs
xchg
lods
jae
add
and
add
pusha
add
add
xchg
shll
cmp
aas
jns
sub
push
add
out
daa
sahf
add
add
add
lods
rcrb
sbb
and
mov
adc
sbb
add
fisttps
inc
push
add
in
std
add
in
testb
add
add
sbb
cmpsl
mov
in
xchg
add
add
call
add
add
fiaddl
fnstenv
in
out
add
adc
stos
outsl
jle
or
hlt
pop
sbb
pop
outsb
add
ret
push
adc
divl
push
add
out
fwait
call
push
add
mov
and
jb
sub
dec
add
fcoml
addl
adc
add
push
sub
repz
push
add
push
xchg
psubusw
jg
cmp
pop
and
add
add
add
add
add
or
roll
mov
cmc
mov
jmp
frstor
int3
adc
add
bound
decb
cltd
lret
sub
or
aas
or
mov
movl
dec
add
add
add
add
out
in
pop
iret
sbb
movsl
faddl
push
add
scas
sub
test
xor
add
add
sarl
or
sub
add
add
cwtl
imul
test
pop
cmp
xchg
inc
add
lock
add
add
rorl
add
repz
add
enter
dec
arpl
js
in
and
icebp
fsubrs
cli
add
add
jecxz
add
nop
jne
idivb
add
dec
cld
outsl
hlt
inc
add
xor
add
mov
dec
add
lcall
add
push
add
sub
int
add
mov
nop
add
outsl
icebp
push
add
lds
ficomps
dec
add
push
inc
add
mov
adc
xor
add
mov
adcl
add
stos
push
mov
lds
sub
push
add
mov
inc
jmp
testl
dec
dec
sub
fstps
popf
cmp
incl
imul
pushf
jbe
psubw
movsl
orb
sbb
out
jl
ret
mov
dec
add
fldenv
mov
shlb
mov
dec
add
fldl
adc
cmc
inc
mov
jmp
add
add
notl
aad
add
add
add
ret
add
jmp
js
daa
pop
add
je
movsb
jg
dec
jmp
dec
add
add
int3
jnp
mov
sbb
loope
fiadds
sbb
add
mov
add
rorb
cmc
mov
inc
add
jae
jmp
aas
dec
add
dec
add
jne
add
je
jns
data16
add
data16
sbb
jo
inc
mov
mov
inc
add
add
fsub
lds
mov
aas
push
add
add
ret
sbb
data16
add
and
test
out
xchg
in
in
add
mov
sub
in
scas
xchg
jl
enter
push
or
mov
adc
shlb
cmpsl
stc
pop
add
xchg
fildll
pop
add
cmp
fsts
push
mov
add
filds
stos
or
ret
lcall
or
testb
cltd
sbb
std
push
aas
add
ss
add
lahf
test
add
push
add
pop
or
bound
pusha
add
daa
mov
cmpsb
jg
mov
and
add
decl
xchg
in
outsl
sti
out
add
incl
or
xlat
add
add
add
and
add
add
rolb
cli
sti
and
jae
dec
iret
or
jno
in
popf
mov
fidivrl
inc
add
jp
sub
push
add
sbbl
or
push
pop
add
mov
add
in
xchg
popf
in
jae
lahf
loop
add
cld
xor
add
mov
or
add
add
add
loopne
lds
sar
add
mov
rep
and
add
adc
js
fwait
repz
add
jg
test
cmpsb
xchg
add
jl
cli
adc
pop
stos
push
daa
popl
loope
adc
add
icebp
in
jmp
aam
add
inc
add
add
pop
add
pop
testl
add
add
clc
ret
in
decl
add
mov
ret
add
out
stc
mov
cwtl
pop
sub
pop
ja
mov
jo
and
cmpb
add
add
dec
aad
mov
cld
mov
pop
pusha
add
andb
mov
in
int
clc
stos
jo
mov
rolb
dec
add
push
cld
loope
in
andl
add
add
adc
add
fs
xor
add
jne
add
repnz
mov
add
or
add
adc
add
jae
add
scas
mov
add
push
pushf
mov
mov
out
mov
popf
cli
cmp
mov
iret
add
fiaddl
sti
daa
mov
testb
add
sbb
mov
mov
mov
mov
inc
add
pushf
add
popl
mov
imull
and
add
dec
fdivr
popa
insl
scas
cmc
ret
lret
das
shr
bswap
cmp
icebp
movsl
dec
add
outsb
add
mov
add
movsl
push
scas
repz
add
jp
lahf
push
faddl
fcmove
push
add
lock
add
mov
pop
dec
add
xor
add
xchg
mov
add
mov
add
out
shlb
and
add
jle
pop
push
test
mov
in
add
mov
push
icebp
loope
repz
add
mov
outsl
andb
or
push
add
add
mov
push
add
andb
mov
or
lea
push
dec
or
dec
xor
add
scas
test
icebp
aam
cltd
rorl
ljmp
jl
je
mov
push
pop
add
lods
data16
add
dec
add
xlat
cmpsb
daa
enter
pop
add
xor
lret
pop
sub
mov
add
nop
neg
xchg
dec
aas
les
inc
inc
xchg
add
add
xor
cmp
add
jb
jg
mov
add
push
jno
jp
or
jge
gs
jo
jo
cmp
ljmp
jge
fdivp
stc
cmpsb
cmp
imul
or
repz
add
jg
movb
add
arpl
mov
lods
cmc
pusha
add
or
adc
enter
add
pop
add
insb
add
jecxz
pop
testl
add
jmp
cmc
rcr
mov
mov
sbb
add
test
add
scas
xchg
xor
setns
push
add
clc
add
add
add
jae
mov
xchg
fildll
or
mov
popf
outsb
add
add
and
add
cs
pop
add
cmp
mov
mull
add
sbb
mov
sbb
iret
cltd
mov
add
mov
add
push
or
ljmp
insl
mov
xlat
xchg
add
add
pop
add
mov
xchg
xlat
outsl
xchg
dec
push
adc
jge
addl
push
add
add
xchg
jne
and
add
out
movsb
mov
mov
add
pushf
mov
mov
and
repz
push
add
add
add
add
add
movsl
lods
jg
mov
sbb
out
push
test
mov
add
imul
pop
jmp
movb
fldt
loopne
jbe
pop
sbb
cs
pop
xor
cmc
rcrl
xor
test
push
outsb
add
in
aad
add
cmp
mov
xor
cmpsb
or
in
test
xlat
sahf
jae
imul
or
pop
add
jne
add
pop
addr16
aas
push
add
vxorpd
add
adcb
pop
cmp
mov
xchg
jnp
loope
jmp
and
int
popf
add
lods
inc
add
add
notb
push
add
test
icebp
push
jbe
ret
add
add
add
pop
add
sahf
xchg
sbb
stos
cld
daa
rolb
dec
add
aam
dec
add
and
add
add
add
out
fistps
dec
or
push
xor
add
add
sub
adc
dec
and
xchg
ret
pop
scas
frstor
mov
lret
add
add
rolb
mov
sub
daa
add
xor
add
push
mov
lret
add
add
jge
pushf
fdiv
push
add
pop
add
add
cmp
js
arpl
je
add
nop
inc
add
sbb
stc
push
add
arpl
dec
push
jecxz
sub
pusha
add
sub
mov
addl
add
lcall
add
adc
add
or
xchg
inc
pop
dec
lods
xlat
arpl
add
shr
sbb
adc
add
add
fadds
test
add
add
mov
add
and
add
cld
repz
sbb
stos
inc
gs
add
sub
cli
pop
add
inc
add
mov
xlat
lret
ds
push
add
sbb
ss
add
mov
or
aam
jnp
xchg
add
ret
xor
or
out
sahf
cmp
dec
add
adc
icebp
or
insb
add
iret
enter
xchg
push
add
xchg
jbe
ret
jbe
cmp
out
mov
mov
mov
ljmp
mov
add
jmp
add
add
sbb
mov
add
stos
rorl
mov
pop
and
ret
cmpsl
add
sti
add
add
js
xchg
xchg
mov
inc
mov
test
decl
add
jnp
mov
dec
add
add
push
ljmp
jmp
add
jbe
xor
add
shl
xchg
jae
test
pusha
add
arpl
lods
pop
jne
xor
rcll
and
xchg
sbbl
dec
add
add
sbb
add
mov
pop
movb
add
imul
sub
mov
je
mov
aaa
cmp
popa
sub
repz
add
push
add
into
and
add
mov
add
add
dec
data16
insb
add
add
mov
insb
add
inc
add
xchg
or
lods
jmp
xchg
or
roll
sti
pushf
ds
xor
addl
sti
shl
je
mov
add
cmpsb
add
pop
pop
pop
lock
shrb
flds
add
dec
add
movsl
stos
or
lea
int
and
add
push
add
in
mov
stc
icebp
fidivrs
lret
inc
add
nop
push
test
jae
fadd
push
in
mov
mov
cltd
insl
adc
ret
int3
jmp
stos
repnz
add
sbb
int3
mov
and
add
das
adc
faddl
lds
xor
add
fstl
or
pop
cmpsl
sub
hlt
ja
mov
fcoml
dec
aas
mov
out
add
add
mov
sbb
push
add
sti
add
pop
inc
add
cmpsl
cmp
mov
adc
std
dec
repz
pop
add
pop
add
jp
ljmp
fldl
mov
jnp
push
add
add
push
sub
lret
nop
push
sbb
push
push
add
add
xchg
rcl
pushf
push
add
add
adc
add
push
push
add
cmc
mov
add
pop
sbb
lea
lds
push
add
stos
pop
ljmp
jno
lods
insb
add
enter
faddl
push
xor
add
sub
push
add
divl
cmp
and
fistps
fiadds
add
outsl
mov
xchg
data16
add
xchg
jne
sub
ficompl
out
or
fisubrl
lea
jge
push
bound
jo
fdiv
lock
xor
test
mov
stos
movb
and
add
jg
add
das
aam
mov
dec
pmaxub
fiadds
lods
sub
mov
pop
cmpsl
add
ret
subl
add
add
lods
leave
xchg
add
jae
sbb
or
jge
lcall
pop
dec
add
mov
cmp
xor
add
cmpsl
and
add
pop
add
rcr
repz
add
add
add
jae
cs
enter
adc
xor
fbld
mov
add
ret
add
push
xor
add
in
icebp
cmp
add
add
das
pop
add
add
mov
mov
add
aam
ss
add
xor
add
jnp
ss
add
add
test
fcom
out
pop
loop
bound
xchg
mov
pop
mov
sbb
add
add
adcl
add
aad
jmp
xchg
sbb
sbb
outsl
int3
xorl
sbb
xchg
cmc
fidivrs
lods
add
add
bound
xor
shlb
cmp
add
leave
push
fildl
mull
mov
mov
aaa
push
add
pop
in
sub
add
clc
or
jp
dec
add
push
dec
data16
into
sub
inc
add
inc
add
mov
xchg
loop
out
pop
jns
xor
add
dec
add
jecxz
lcall
addb
inc
int
or
imul
add
add
sub
add
dec
jno
mov
xchg
xchg
movsb
int3
dec
jle
iret
cli
xchg
out
shlb
add
add
lret
add
push
add
in
pop
cmp
cld
iret
mov
jle
arpl
outsl
dec
add
xchg
mov
add
or
inc
jmp
add
orl
inc
add
jle
test
out
mov
aaa
mov
add
push
add
in
into
xor
test
and
push
daa
movb
mull
add
add
mov
jmp
test
jp
pop
add
mov
add
shl
mov
jae
add
inc
add
add
pop
add
add
lea
mov
cmp
je
shlb
mov
arpl
lret
push
add
mov
sbb
hlt
cmp
inc
je
mov
ret
repz
xchg
mov
add
add
out
adc
add
add
pop
jle
sub
insl
rorb
negb
lock
add
aam
mov
out
xlat
test
insl
movsb
cmp
dec
or
iret
imul
add
push
add
add
insl
test
dec
jbe
sarl
adc
sbb
mov
aad
add
stos
out
xorb
add
push
lock
int
dec
add
or
nop
pop
adc
sub
cmp
push
add
sub
mov
mov
add
push
add
mov
sbb
add
cltd
cmp
add
insb
add
pop
add
mov
add
xor
add
push
push
addl
xlat
int
sub
aas
cmp
ljmp
lcall
or
aaa
add
in
vpcmpgtd
xor
xor
add
xchg
push
jae
xor
add
jae
add
cmpsb
and
add
sbb
jae
push
add
hlt
repnz
add
mov
add
add
jbe
popa
jns
sub
add
mov
add
hlt
pop
sub
fwait
arpl
xchg
add
add
scas
popa
and
mov
gs
add
mov
add
ret
push
xorb
add
add
dec
jbe
fmull
gs
add
fucomip
pop
add
rcrl
pop
mov
loopne
std
ljmp
sbb
xor
add
rol
pop
add
divl
add
or
ja
mov
sti
out
mov
nop
jmp
ljmp
stos
fmull
lods
add
inc
add
jae
pop
add
or
pop
bound
sbb
cld
inc
in
dec
movsb
add
mov
add
idivl
hlt
jmp
sub
mov
