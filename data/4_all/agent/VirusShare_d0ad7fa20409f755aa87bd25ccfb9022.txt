insl
adc
add
add
add
add
add
add
add
jo
notl
mov
rorb
and
mov
mov
xor
fwait
mov
push
lods
mov
pop
and
shrl
add
push
cmp
sti
adc
jbe
mov
lahf
into
jb
test
and
mov
ljmp
jno
stc
insl
insl
mov
imul
jns
cmp
jg
adc
fsubp
stc
rol
dec
sub
cltd
adc
mov
lea
jecxz
cmp
repnz
faddl
notl
dec
dec
fldl
add
ret
xchg
lahf
mov
sub
es
lret
sub
add
das
mov
aad
sub
rcrl
dec
lcall
stc
mov
call
sarb
or
jne
lea
mov
stc
fimull
push
sub
ret
in
mov
ret
mov
mov
cmc
jl
cmp
mov
fiadds
lds
stos
hlt
inc
dec
push
repz
pop
out
dec
iret
sbb
in
jge
fdivrl
xchg
xchg
inc
inc
pop
clc
adc
lret
inc
test
push
pusha
je
movsl
mov
daa
add
orb
fstps
push
dec
inc
mov
test
mov
adc
test
mov
jnp
and
push
fnstenv
adc
lock
jmp
push
push
or
sub
dec
cmp
repnz
lds
xchg
mov
lahf
xchg
nop
push
lret
pop
mov
mov
pusha
lret
mov
push
sbb
mov
mov
dec
jns
pop
and
enter
add
push
xor
or
pushf
pop
or
mov
shrl
lret
decl
xor
rorb
pop
mov
or
sub
sbb
and
xor
push
rolb
sbb
fs
test
pop
jo
sarl
filds
leave
cltd
aas
adc
loopne
movsl
jne
dec
inc
lds
and
fdivrs
jnp
sub
int3
or
int
xchg
sbb
and
mov
sbb
inc
adc
jb
cmp
mov
popa
jmp
loop
bound
std
fdivl
pop
in
and
xor
mov
pop
adc
gs
js
dec
mov
xor
push
mov
daa
out
cmp
aam
outsl
jmp
daa
loop
jg
or
icebp
incb
es
ficompl
insl
adc
addr16
cltd
out
test
jno
clc
mov
iret
add
sbb
pop
mov
mov
xchg
pop
adc
test
xchg
lea
cltd
push
push
add
push
or
inc
test
fsubr
rcrb
loope
push
mov
andb
jnp
mov
inc
sub
das
mov
daa
jae
xor
sub
inc
xchg
jbe
enter
pop
pop
sbb
clc
ja
add
and
loop
jmp
iret
adc
push
and
lods
in
inc
mov
data16
push
mov
jnp
and
cwtl
mov
push
inc
fisubl
push
xchg
add
fdivs
or
fs
jns
shrb
test
mov
xchg
sbbb
or
inc
loope
jne
cmc
sbb
dec
mov
push
xor
jne
pop
push
arpl
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
into
adc
aad
xor
inc
push
pushf
out
dec
push
daa
ljmp
call
mov
xchg
xchg
and
cmp
mov
lcall
test
push
inc
cld
push
push
sub
inc
inc
scas
add
mov
push
pop
out
pop
add
push
sbb
iret
mov
sub
dec
pop
jne
jmp
lods
cwtl
sti
pop
xchg
shrl
mov
or
jge
rorb
inc
insb
orb
repz
mov
test
mov
mov
dec
xor
mov
repnz
or
dec
arpl
jns
pop
add
adc
shll
clc
lret
mov
nop
jle
in
and
hlt
xchg
xchg
inc
pushf
arpl
arpl
or
cmp
enter
js
xchg
sahf
sub
shl
add
js
sar
loopne
das
insb
jno
das
xchg
rclb
dec
leave
adc
jmp
in
dec
movsl
inc
push
int3
movsb
cli
pushf
movsl
pop
adc
adc
es
or
mov
test
jl
inc
outsl
and
add
jb
adc
leave
mov
add
mov
test
jb
fwait
xchg
push
loop
lret
jnp
push
pop
cmp
mov
sub
push
adc
xchg
mov
mov
out
inc
mov
and
mov
jg
ljmp
popa
mov
dec
in
push
mov
or
mov
int3
scas
lods
lahf
mov
xorb
sub
pop
mov
dec
mov
push
clc
addr16
sbb
cmp
sbb
fwait
notb
popa
leave
stos
jle
push
push
pop
pop
pop
dec
sub
jl
dec
pop
xor
movsl
push
in
enter
int3
test
xchg
mov
loop
or
push
ss
xlat
aas
or
int
inc
xor
fwait
cmpsl
fldpi
vmwrite
loopne
pop
xor
iret
mov
pusha
jne
test
rol
imul
ljmp
mov
sti
jno
int
mov
sbb
test
fstps
push
jns
out
and
test
je
jp
lds
lods
das
dec
sub
shlb
addb
add
icebp
push
idivb
mov
jg
repnz
or
orl
mov
stc
imul
mov
jp
mov
or
mov
jl
cmp
ds
jnp
lods
call
std
adc
mov
inc
jne
js
xlat
xorl
sbb
jns
aaa
ja
aam
and
or
aad
mull
fstps
push
pushl
test
mov
lea
dec
adc
loopne
test
int
fildl
and
mov
push
or
stos
inc
add
xchg
inc
xlat
sub
sub
jecxz
mov
stos
xchg
sbb
test
sbb
fcompl
lret
fstps
push
mov
in
xor
sbb
fs
xchg
lods
stos
pop
inc
into
add
jnp
jl
mov
xor
sbb
ret
mov
inc
push
imul
sub
stos
sub
mov
int3
jmp
jbe
aas
lahf
rcrl
inc
bound
fnstcw
js
aas
pop
aad
repnz
nop
out
jne
arpl
rclb
adc
xor
xchg
push
repnz
or
mov
dec
sub
push
mov
cmpsb
and
andl
fldt
inc
push
mov
pushf
insl
sbb
pop
or
xorb
ret
add
sti
out
cmp
fstl
sub
cld
clc
jge
insb
cwtl
pop
jnp
adc
xlat
sub
push
cmpsl
filds
hlt
repnz
mov
xchg
xor
xchg
xchg
ret
sub
add
xor
push
mov
imul
xor
jle
fs
pop
das
fdivr
in
repnz
gs
fstpt
push
cs
repnz
pop
mov
push
sahf
test
push
xchg
pop
rcrb
das
filds
adc
stc
insb
lds
aas
sarb
cmp
lcall
pop
sbb
pop
mov
enter
enter
lahf
cmp
cmp
test
js
aam
ret
inc
push
jb
sbb
popa
popf
mov
loopne
fwait
popl
pop
test
out
and
outsl
mov
dec
and
es
sbb
xor
or
and
push
fcoms
movsb
mov
mov
aam
jmp
out
icebp
xor
and
pop
imull
enter
pop
icebp
xlat
out
add
les
outsb
in
inc
pop
rolb
pop
ret
mov
jle
mov
ret
xchg
lds
hlt
jle
add
adc
mov
loopne
ds
xchg
mov
add
inc
push
dec
mov
jmp
dec
and
lret
popa
ret
inc
jle
fstp
in
cmp
fidivl
out
add
adc
dec
and
xor
mov
jo
mov
pop
xchg
scas
mov
fists
and
push
jbe
fmuls
aad
mov
cmc
mov
fcom
and
mov
int
dec
xchg
pusha
jb
mov
out
xrelease
clc
adc
ljmp
loopne
adc
xchg
test
aaa
inc
in
xlat
ret
outsl
mov
imul
gs
mov
fsubrs
neg
xor
mov
sbb
ret
mov
imul
jmp
sbb
mov
cmp
adc
jp
mov
jb
inc
sbb
cmpsl
pop
mov
imul
inc
xlat
fsubrs
or
mov
xor
dec
xorb
jp
mov
xchg
ficoml
xlat
ds
jno
data16
gs
jmp
out
mov
or
mov
xor
jmp
aas
pop
das
gs
push
cmc
pop
sbb
and
outsl
sbb
add
je
ljmp
lds
cmp
icebp
mov
adc
lods
cmp
dec
mov
add
dec
pop
push
mov
aam
add
jmp
pop
aas
nop
sbb
inc
mov
dec
cmc
pop
sets
mov
lods
cmp
test
dec
push
dec
loope
imul
fistps
inc
into
jmp
sub
lods
push
test
xchg
pop
orl
pop
scas
push
push
mov
dec
shrl
fwait
cwtl
xor
mov
pop
lret
sub
dec
mov
dec
lcall
sub
mov
daa
add
inc
cld
jae
shll
or
mov
sbbl
push
lahf
jae
das
ljmp
cmp
xor
pop
mov
cmp
in
iret
insl
test
sub
push
je
inc
mov
bswap
pusha
and
cmpsb
xchg
mov
ja
lea
pop
dec
mov
sub
xor
add
xor
mov
cmp
sub
jge
xchg
jecxz
in
mov
cmpsb
icebp
push
mov
mov
stos
dec
inc
dec
mov
hlt
pop
push
pushf
pop
adc
or
xor
mov
adc
subl
pop
test
cli
xor
ret
push
mov
ficomps
das
mov
nop
dec
xchg
mov
movsl
movsl
cmp
xor
mov
addl
push
cli
inc
test
je
mov
loop
mov
fbld
enter
adc
popf
cld
inc
sub
or
mov
pop
mov
dec
jbe
pop
jo
fcoml
repz
cld
inc
cwtl
ds
stos
jg
mov
sub
repnz
mov
xchg
inc
mov
in
std
mov
mov
xchg
ja
insl
es
add
pop
jmp
jbe
sub
fsubrl
aas
in
push
jp
inc
inc
repz
pop
add
arpl
lcall
push
jp
push
insl
dec
out
and
ja
cmp
add
mov
into
push
test
movb
sub
sarl
orl
int
push
call
mov
lods
mov
add
or
iret
cmp
mov
fs
add
jno
test
xchg
dec
outsl
arpl
inc
test
mov
out
lcall
mov
jg
add
inc
mov
and
and
popl
sahf
leave
xchg
imul
inc
int
jb
fcmovb
mov
std
outsl
insl
sub
pop
dec
hlt
in
arpl
cli
push
push
movsb
adc
stos
pop
ret
push
push
jle
mov
fs
mov
notl
xor
clc
test
dec
and
push
mov
xchg
pop
lock
and
loopne
mov
push
push
arpl
cli
rcrl
dec
lods
mov
out
cmp
push
ljmp
push
xchg
aas
insb
popa
cmp
dec
push
cmpl
jae
or
rclb
ds
aaa
fstpt
jb
popl
fstpt
adc
bnd
mov
inc
xor
stc
sbb
or
fwait
xor
iret
pop
loopne
jge
cwtl
popf
xchg
mov
sti
dec
out
pop
sub
insl
imul
sbb
sub
jle
pushf
cmpb
dec
testl
shlb
lds
in
cmp
pop
push
push
in
push
mov
into
adc
mov
and
and
addb
lret
int3
aad
sti
mov
mov
xlat
hlt
pop
mov
aam
or
push
xlat
add
push
push
sbb
data16
sbb
dec
pop
fimull
lret
lret
sbb
mov
xchg
and
movsb
adc
testb
cli
add
sub
xlat
cmp
adc
aam
dec
icebp
dec
inc
sbb
orb
fwait
push
cmp
cmp
push
sar
add
pop
adc
jecxz
xor
imul
sub
insl
cmpsb
add
mov
call
jnp
add
test
xor
cmpsl
jg
push
in
jo
aam
arpl
jb
xlat
mov
movsb
sub
popa
cmp
mov
ret
pop
pop
pop
jge
push
std
adc
jb
push
mov
and
xchg
mov
inc
push
push
mov
in
push
dec
jns
pop
lods
adc
jnp
fdivrl
mov
xchg
bound
shlb
nop
xor
mov
scas
sub
inc
xchg
pop
jae
imul
mov
aam
pop
insl
xchg
jle
out
repnz
pop
inc
or
and
dec
inc
cs
andl
lods
xchg
imul
js
aad
mov
or
fistpl
lea
mov
inc
adc
or
push
add
sahf
push
int3
sbb
sub
int
mov
lcall
rep
icebp
leave
out
xor
pop
adc
icebp
inc
push
cmp
dec
std
push
xchg
repz
sub
or
cmp
mov
xor
push
cmp
push
out
jp
xchg
mov
scas
pop
fstps
xchg
mov
mov
nop
daa
sub
sbb
mov
jmp
ficomps
in
test
lods
pop
jp
mov
shrb
and
rcrl
push
shrb
mov
out
jmp
frstor
jns
cmpsb
xchg
lret
sub
sti
je
test
and
sub
xchg
shlb
mov
jg
negb
cltd
fisubs
cli
lods
fbld
adc
jb
xor
lods
scas
lret
sub
test
xchg
jp
jo
jl
xchg
push
cmp
jmp
je
xor
bnd
or
inc
test
push
mov
and
push
jg
mov
pop
pushf
xchg
mov
push
inc
push
imul
pop
xchg
pop
jno
lahf
lcall
pshufw
js
inc
jnp
mov
fmuls
or
cs
loopne
lds
outsl
jecxz
in
and
dec
loop
gs
cs
call
jnp
hlt
jp
out
cmp
mov
push
xor
shlb
into
bound
or
fisubl
movsl
mov
xchg
push
lahf
mov
scas
test
mov
popf
push
push
out
aam
push
ret
out
in
les
pop
mov
cmpsl
arpl
jae
jns
scas
lods
sbb
test
pop
and
neg
insb
clc
in
mov
dec
shrl
in
jo
cmp
ja
insb
sub
fsubl
jno
push
std
mov
push
pusha
push
xchg
jnp
sbb
adc
xor
je
jne
jge
jl
xor
dec
mov
aam
loope
incl
jae
es
std
movsl
mov
push
loopne
dec
adc
cmp
mov
sub
ds
mov
mov
xor
cmp
xor
inc
andb
and
sbb
lcall
sbb
inc
dec
push
lahf
inc
xchg
inc
fidivs
dec
adc
sub
and
pop
pusha
into
pop
or
fisubl
arpl
sbb
xchg
sub
nop
fmuls
sub
xchg
push
or
std
stc
adc
and
test
pushf
loop
loope
lcall
jnp
sbb
aad
xchg
ljmp
ss
sbb
sahf
sub
or
call
xor
andb
dec
call
shll
push
xchg
pusha
loopne
adc
sub
fnsave
ret
mov
aam
ds
mov
stos
mov
push
shll
in
imul
dec
dec
les
mov
mov
dec
insb
jne
cmp
push
mov
mov
sub
cld
push
gs
mov
add
out
or
xor
adc
pop
pusha
stc
or
jl
sbb
stos
test
adc
insl
xchg
pusha
popa
ret
stc
mov
mov
cmc
fmull
mov
cld
jge
andl
or
xor
add
xchg
mov
add
fildll
sub
shrl
mov
xor
shll
stc
in
dec
cld
std
xchg
inc
cs
ror
push
sbb
push
pusha
pusha
xlat
into
dec
push
mov
cld
jo
and
pop
fnsave
sahf
jge
testl
mov
repz
jne
push
mul
jmp
stos
xor
ds
dec
scas
pop
cmp
mov
bound
and
aam
rcll
mov
std
cmpsb
push
xchg
inc
enter
cmp
mov
mov
stc
or
xchg
mov
pushf
int
jl
movsl
js
xor
pop
or
and
fstpt
mov
negl
cmp
mov
repz
aad
imul
dec
jo
popa
das
adc
jbe
cmp
addr16
fisubl
xorl
ljmp
and
mov
fstpl
mov
sub
jnp
sbb
loopne
jmp
dec
sub
pop
andb
pop
dec
xor
or
iret
inc
and
pop
test
mov
aam
je
cmc
jae
shll
mov
mov
mov
add
shrl
jg
mov
sti
mov
push
sarb
and
aad
xchg
cmpsb
mov
movsl
int
pushf
jnp
adc
pushf
or
cmovno
cmp
mov
mov
and
cmp
std
scas
imul
scas
dec
aad
jecxz
inc
hlt
addr16
in
sbb
or
dec
mov
and
xlat
inc
js
jle
jmp
jge
push
rorb
add
pop
and
loope
jo
test
adc
arpl
mov
stc
inc
pushf
push
adc
and
push
pop
add
pop
mull
adc
rorl
loope
push
mov
push
adc
cmp
jge
test
push
mov
cmc
xchg
popf
adc
sub
push
pop
push
fsubrs
xchg
inc
mov
jge
mov
in
lahf
mov
sbb
mov
scas
fstl
pop
shlb
dec
xchg
daa
cli
sbb
or
cmpsb
xchg
cmp
test
lods
cmp
fisubs
dec
cmpsl
cld
mov
call
cmpsb
negb
jae
leave
lret
xchg
lcall
repz
cmpb
push
into
mov
mov
pop
push
gs
lods
xlat
sub
adc
add
scas
aad
pop
addr16
ret
or
cmp
jne
jb
aaa
dec
lods
or
aas
leave
sahf
aam
inc
shlb
aas
mov
ret
repz
xchg
ret
in
les
mov
sbb
mov
repz
xor
js
jb
pushf
inc
mov
mov
cli
pop
adc
pop
cmp
push
xchg
cs
sbb
push
pop
add
js
fstl
cmp
push
jnp
adc
loop
adc
xor
iret
nop
push
loopne
fisttpll
bnd
pop
mov
inc
enter
and
inc
jle
fistpl
xchg
loopne
in
test
xor
mov
cmpsl
pop
and
das
push
jne
inc
pop
nop
and
call
shll
dec
shlb
sbb
or
jae
sub
scas
rcrb
jge
test
mov
shrb
push
cmp
adcl
mov
movsl
out
inc
add
mov
repnz
add
jmp
mov
int
jge
sbb
fsubrp
sbb
add
jo
mov
fildll
sub
mov
call
cmpsl
jno
out
iret
sub
ljmp
fcomp
fisttpll
sbb
out
loope
js
clc
test
lods
shll
pop
jae
push
test
and
mov
jns
xlat
clc
fcoml
popf
fimuls
pushf
aaa
es
loope
sbb
mov
subl
cli
xchg
add
mov
mov
mov
xchg
adc
jne
iret
cmpsb
or
sbb
bound
jns
jns
int3
jle
or
sbb
sbb
or
int
cltd
and
push
fs
cmp
xorl
push
hlt
pop
jne
inc
and
add
fistl
push
push
xchg
cwtl
push
and
dec
hlt
hlt
adc
inc
movsb
push
or
adc
push
mov
push
sbbl
add
nop
sub
adc
inc
mov
mov
aad
adc
fwait
pop
addb
icebp
dec
sbb
rorl
inc
xchg
fcmovb
mov
mov
and
sbb
dec
xlat
test
repz
leave
xchg
mov
or
push
fstps
inc
clc
push
ss
popf
jecxz
call
adc
dec
ds
repnz
movsl
dec
mov
add
popa
jb,pn
add
cmpsb
repz
xchg
daa
loopne
push
mov
sub
icebp
inc
inc
add
adc
insb
js
push
lahf
xchg
test
mov
mov
es
pop
mov
in
push
stc
xlat
xchg
sub
push
ret
call
out
mov
and
leave
jmp
xor
icebp
aam
enter
pop
push
pop
dec
mov
push
push
pop
das
jle
dec
adc
orb
mov
clc
sbb
push
es
les
push
mov
xchg
fnstenv
dec
inc
mov
push
cmp
xorb
in
insb
js
push
push
add
dec
mov
mov
pop
repnz
icebp
inc
pop
sbbl
mov
mov
and
subb
pushf
dec
fcomps
aam
imul
pop
pushf
dec
pop
dec
fisttpl
mov
xchg
xor
pop
divl
int
push
test
adc
fldt
inc
mov
stos
dec
test
out
push
aas
xor
and
into
xorl
leave
enter
cmp
je
mov
rcl
inc
scas
jbe
pop
sbb
inc
xor
scas
les
pop
loope
iret
loop
ljmp
sti
test
fsubl
and
inc
and
add
lock
and
add
lahf
rcrl
shll
stos
ror
inc
dec
jmp
bound
cmp
push
push
nop
aad
push
fnstsw
dec
sbb
adc
mov
cmp
stc
inc
add
stos
imul
add
push
movsb
cld
dec
cmp
mov
stc
in
xor
bound
sti
add
stc
mov
cmc
xor
testb
fwait
and
sub
call
adc
dec
lods
pop
fdiv
jne
movsl
popf
push
aaa
ja
filds
mov
or
mov
cmc
ja
mov
clc
mov
cmp
ja
es
cmpsl
mov
xor
lret
cld
push
les
ds
lret
dec
sub
daa
scas
orl
inc
in
pushf
xor
int3
iret
push
lahf
cmp
insb
push
enter
xchg
jb
inc
shlb
insb
loop
bound
roll
push
lods
jns
jmp
pop
cld
mov
push
cmp
or
mov
mov
adc
in
test
push
scas
int
dec
xor
fnsave
inc
mov
in
mov
sahf
movsl
pop
mov
cs
lret
test
dec
push
jne
mov
mov
cmpsb
insl
or
mov
pop
idivl
xchg
aaa
movsl
jle
jo
push
add
xchg
dec
pop
sti
aaa
les
lea
xor
dec
jge
nop
pop
sbb
test
cmp
cld
mov
xor
lret
jnp
push
clc
in
fnsave
in
cmp
cmp
in
mov
xchg
fstps
mov
cltd
sbb
adc
inc
dec
inc
xchg
inc
or
mov
ret
roll
imul
mov
fstps
mov
lahf
or
roll
cltd
dec
insb
sub
jg
jl
cmpl
push
fs
mov
jae
xor
push
mov
lret
popf
shll
repz
shll
push
lahf
xor
cld
pop
cwtl
inc
cmp
data16
jbe
lods
aas
jbe
outsl
sbb
jns
sub
lods
xorb
mov
dec
insl
ret
rolb
ds
cs
dec
cld
sub
insl
or
mov
sti
push
ja
test
mov
pop
add
aaa
push
aam
decb
mov
vaddss
or
ror
xchg
lcall
pop
rdpmc
mov
enter
lcall
mov
rcll
cwtl
push
loop
clc
sub
enter
adc
imul
lret
mov
add
xor
daa
jecxz
sbb
fiadds
push
push
dec
push
addb
out
js
adc
dec
add
lret
push
insb
popa
loop
enter
iret
out
pop
addl
test
lods
add
xor
test
dec
rcrl
jo
pop
call
in
fisubl
cld
sbb
into
call
cmp
insb
pop
xchg
mov
aad
push
dec
cmp
jl
push
popf
sbb
fistps
ljmp
push
mov
jg
xchg
rcrb
or
sbb
adc
imul
add
pop
add
inc
inc
aaa
or
sarb
cmc
adcb
test
sahf
sbb
sbb
adc
outsl
jge
dec
jbe
mov
scas
xor
push
pop
sub
adc
xorl
inc
stos
jo
in
sub
lret
and
mov
cmpsb
cmp
rcrl
pop
loopne
pop
bound
jg
in
and
cmp
fmuls
and
xor
lea
movsl
pusha
shll
jp
or
shrl
jne
aaa
test
mov
and
lret
cmp
push
mov
xchg
cmp
ljmp
sbb
ficoml
push
jnp
imul
pop
jbe
icebp
lock
mov
xchg
xchg
imul
mov
ljmp
int
inc
and
inc
cmp
lahf
cmp
xchg
push
ret
push
mov
mov
xchg
mov
sti
inc
cmp
fwait
call
bound
add
cli
pop
fldl
in
leave
loop
sbb
test
addr16
xchg
or
inc
xchg
fdivrs
in
xchg
dec
xchg
lcall
fwait
jle
lock
mov
std
adc
and
dec
dec
imul
jno
inc
push
fsubrl
test
xchg
into
adcl
cmpsl
cmp
push
shrb
lcall
jnp
lcall
arpl
insb
dec
mov
push
sbb
cli
mov
jne
aaa
pop
inc
mov
add
dec
rcl
pop
fwait
mov
shlb
mov
aad
out
pop
sbb
push
push
and
or
mov
and
adc
insb
out
mov
sub
mov
lret
adc
pop
pushf
aad
pop
or
std
fstpt
mov
sar
push
jnp
pop
dec
or
dec
sbb
pop
dec
bound
dec
loop
lods
call
jno
int3
push
inc
push
jg
jbe
dec
aaa
inc
cmpsb
mov
push
sti
movsb
ret
stc
mov
or
mov
aas
in
repz
xor
pop
or
push
cmp
cld
dec
mov
ss
jmp
clc
sbb
mov
mov
rcrb
popf
out
inc
cwtl
fildll
call
adc
push
stos
push
pop
mov
mov
pop
addb
insl
popa
int3
lock
imul
pop
mov
loope
mov
insb
andl
xchg
test
dec
and
mov
jmp
inc
les
out
adc
and
fwait
xchg
in
js
dec
popf
aad
push
cmpl
push
mov
ficoml
cmp
cmpsl
mov
xchg
xchg
sub
ret
xchg
imul
sbb
push
fwait
jns
popl
pop
fistps
push
mov
mov
dec
or
cli
adc
jbe
fldcw
lcall
dec
jge
push
in
cmp
mov
lds
add
sbb
movb
sbb
mov
mov
mov
mov
cwtl
sbb
les
out
stos
lods
push
stos
xchg
cmp
dec
dec
mov
xor
or
sub
mov
stos
pop
adc
pop
add
cli
outsb
insb
bound
pop
pop
inc
leave
cld
popa
jne
xor
ds
lea
das
add
fs
cmp
dec
cwtl
popa
push
sbb
inc
pop
and
lcall
jae
pop
add
daa
push
cwtl
ja
dec
add
sub
inc
dec
insl
push
pop
std
cmp
jno
push
lahf
imul
fwait
push
fxam
frstor
scas
push
push
push
out
je
xchg
adc
dec
fucom
and
fs
push
push
mov
pop
xchg
mov
jns
rclb
jecxz
and
daa
and
mov
xchg
mov
pop
in
arpl
mov
fs
fidivs
add
sub
pop
mov
imulb
shll
fisubl
sahf
dec
pop
lret
lahf
xchg
popl
dec
movsb
jmp
sti
mov
adc
shrl
cld
or
adc
and
icebp
lret
inc
stos
pop
or
mov
lret
sub
es
add
mov
test
sub
in
sbb
add
mov
and
sarb
dec
stc
push
dec
inc
fcom
cmp
loopne
ja
mov
inc
gs
mov
lcall
and
test
insb
sub
add
lods
std
repnz
movsb
lcall
pop
add
mov
out
jmp
add
lods
fldt
push
dec
push
in
in
cmc
inc
push
sbb
push
or
dec
and
push
mov
clc
inc
xor
sub
inc
inc
add
add
sti
pop
sti
push
aaa
adcb
push
adc
dec
or
stos
aad
mov
insb
movsb
scas
jle
jecxz
push
int
cmp
xor
lahf
cmp
insb
jg
inc
imulb
push
mov
fcmovb
push
es
push
int3
cmc
or
mov
sti
sahf
push
or
add
lcall
dec
ret
lahf
pop
std
jmp
in
stos
mov
pop
sbb
sbb
ffree
out
std
lods
and
out
cmp
sub
push
aaa
imul
mov
gs
adc
movsb
jnp
jb
or
sbb
repnz
cmp
jnp
jbe
stos
mov
sub
imul
jo
insb
or
inc
jecxz
cwtl
in
js
int
icebp
sbb
jo
jp
push
and
jb
dec
cmp
lahf
xor
mov
mov
mov
ja
fimull
push
fldl
push
out
and
inc
mov
lret
mov
cs
xchg
jo
test
jmp
mov
mov
mov
into
divl
cmp
mov
xlat
fdivrl
insl
add
add
push
pop
rcll
jne
pop
psubw
cmp
mov
dec
insb
xchg
adc
and
pop
mov
push
adc
lret
mov
pop
cmpsb
mov
jp
sbb
dec
inc
std
jmp
xchg
adc
loopne
movsb
sahf
pop
pop
dec
std
test
mov
pop
aam
inc
inc
stos
ftst
or
push
sub
cs
aas
mov
or
jecxz
cmp
test
xor
cltd
imul
stc
fadds
inc
jb
add
push
jo
pop
leave
ljmp
scas
mov
cmp
rolb
xchg
inc
mov
cmp
aam
xor
xchg
jle
flds
aad
aad
sub
lods
iret
jl
shl
stos
aad
repnz
int
rcrl
inc
mov
or
mov
fiaddl
mov
pop
stos
mov
sub
adc
call
dec
popa
or
add
dec
inc
mov
mov
or
hlt
cmp
lock
roll
adc
xchg
rclb
insb
loopne
mov
jg
jnp
pop
ficoml
lock
inc
lret
stos
ds
inc
pop
out
mov
call
inc
or
out
mov
mov
xor
adc
sbb
out
mov
mov
push
sub
xchg
lret
sbb
and
test
xchg
inc
jnp
cmp
mov
rcll
xchg
scas
fcoml
pop
addr16
icebp
daa
sbb
in
push
mov
in
pop
dec
je
cmp
inc
mov
or
jbe
pop
adcl
add
or
mov
loopnew
cs
push
cwtl
or
jno
pop
testl
stos
loopne
pop
ds
scas
add
cli
notb
sarb
daa
xchg
in
iret
mov
mov
loop
lea
lock
push
push
mov
and
and
mov
jnp
and
test
push
push
fdiv
mov
int3
push
iret
stos
cmpsb
out
movsb
ret
in
leave
pusha
fwait
push
cmc
cmc
jae
or
mov
push
push
jge
daa
or
paddsw
into
sahf
cmpsl
movsb
sti
and
and
xchg
cmpsb
lret
popf
out
ret
xor
fdivs
inc
je
sbb
hlt
push
neg
jge
adc
cmp
inc
push
jne
icebp
add
ljmp
cmp
xchg
pop
rorb
mov
inc
mov
sub
or
jo
arpl
adc
adc
cmp
inc
scas
lods
jle
push
push
int
pop
inc
fcoml
jnp
fsubrp
mov
jne
xor
mov
lods
adc
adc
push
out
das
xor
sub
push
adc
testb
shl
jno
sub
out
and
lea
lret
cmp
test
test
jno
push
imul
popf
dec
mov
loope
shrl
ljmp
jp
push
bound
inc
addr16
ret
fidivrs
jmp
enter
aad
push
scas
inc
insl
pusha
mov
inc
push
out
adc
lds
cmp
jge
pop
arpl
push
mov
dec
stos
jno
das
sbb
clc
loop
mov
jo
pop
jg
pop
pop
movsl
repz
mov
outsl
cld
dec
dec
dec
fs
mov
mov
sbb
xor
push
aaa
jmp
movsb
cmp
and
add
add
mov
add
xchg
hlt
cs
aam
fistpl
jmp
xor
into
sub
stos
inc
jecxz
mov
iret
dec
and
or
jnp
ret
jno
sahf
xchg
repz
lahf
js
rcll
rclb
aas
sbb
cmc
scas
mov
mov
push
fcmovne
adc
bound
mov
out
xlat
xchg
add
jns
dec
sub
mov
lcall
pop
call
adc
insl
xchg
cltd
mov
cmp
dec
test
shlb
jae
test
out
and
mov
mov
push
fistl
mov
and
xchg
jno
jo
in
pop
aam
sub
inc
push
mov
mov
dec
mov
xchg
sbbl
int3
lods
push
enter
orl
stos
pop
pushf
rcll
xor
xchg
aaa
sub
std
mov
adcb
rcrl
cmpsb
xchg
mov
loop
test
add
lods
push
xchg
pop
sbb
bound
insl
xchg
aaa
imul
cmpl
scas
and
jns
pop
and
cmp
in
fistl
inc
mov
int3
lahf
sub
stc
sbb
gs
outsb
mov
out
out
mov
jne
jp
incl
push
xorb
test
fdivs
scas
cs
roll
arpl
decb
jo
mov
fdivl
mov
push
jne
aam
mov
or
popf
pop
jp
add
in
nop
mov
push
xchg
jne
or
rep
jb
mov
inc
adc
and
stos
incl
sub
jbe
cli
adc
mov
movsb
gs
mov
pop
cs
or
cli
add
mov
lock
insb
cmc
adc
aam
shll
lahf
popf
or
nop
mov
mov
in
lea
dec
into
mov
test
lock
mov
mov
add
ds
lods
add
add
xchg
cmp
xor
flds
repz
notl
lret
daa
sbb
mov
inc
inc
sbb
in
jmp
fs
pop
movsb
add
mov
pusha
and
movsl
cli
enter
js
loop
xor
jmp
dec
mov
mov
out
mov
outsb
xchg
add
int
pusha
mov
jle
sbbl
push
cmpsl
fmull
cmpb
cmp
xor
push
ficoml
fs
cld
popf
lcall
cwtl
lods
sub
inc
rorl
push
divl
pop
das
sub
mov
movsl
cli
push
stos
adc
call
popf
sbb
add
mov
lock
sbb
andl
stos
inc
test
or
stos
dec
sub
nop
pop
cmpsl
xchg
xchg
dec
loop
mov
push
mov
int
mov
cmp
lea
cmp
xchg
pop
int
fisubrl
cmp
mov
xchg
xchg
jno
cld
repz
insl
call
push
ret
mov
fistpll
fsts
lock
ja
je
mov
xor
outsl
adc
movsl
sbb
dec
jmp
stos
loopne
and
fists
jle
jp
pop
stc
dec
xchg
add
inc
imull
jmp
jns
stc
adc
inc
lock
or
mov
xorl
cmp
mov
int
sub
sbb
pop
stos
popa
stos
or
push
or
iret
ror
inc
roll
cltd
mov
xorb
out
or
mov
std
loopne
mov
movsl
outsl
ja
mov
cmp
in
rcrb
lret
fldl2t
and
pop
enter
sbb
int3
push
or
pop
mov
xchg
idivl
pop
jmp
rcrl
jae
scas
je
pop
cmp
je
jns
xchg
xor
movsl
jg
lcall
and
inc
arpl
out
iret
xchg
mov
sub
xchg
push
mov
ljmp
mov
into
pop
ret
iret
scas
loop
cmp
adc
push
mov
fdivl
mov
stos
jmp
scas
jecxz
jmp
shlb
sub
dec
add
jno
test
lock
sbb
out
mov
stos
leave
and
loopne
aad
stos
pop
add
dec
xchg
outsb
clc
scas
js
test
arpl
adc
js
inc
fnstsw
icebp
js
lock
int3
dec
cltd
pusha
aam
nop
ret
rolb
cwtl
lock
loop
std
inc
push
std
icebp
in
mov
mov
jnp
and
mov
aaa
popl
inc
pusha
je
add
fidivrl
ret
cmp
fsubrp
dec
stos
jbe
lret
mov
fmuls
mov
adc
adc
out
test
lods
jmp
aaa
cmpsb
xchg
lahf
xor
add
clc
and
jl
stc
cmp
pop
xor
stos
sarl
ja
push
testl
out
mov
inc
inc
dec
mov
cmp
jbe
push
jp
repz
mov
arpl
cmp
sub
test
pop
add
adc
or
fimuls
lahf
call
test
stos
fsubr
popa
rcrb
cmpsl
mov
enter
xchg
cmpsb
push
in
xor
movsb
add
jb
or
jl
mov
pop
inc
add
adc
dec
lahf
fildl
mov
xchg
andb
xor
push
mov
or
stc
lret
jae
jne,pn
adc
jge
add
lea
dec
repnz
push
shrl
int3
adc
push
and
xchg
sub
in
aaa
push
leave
pop
lcall
xlat
mov
paddq
xor
mov
cwtl
xchg
fdivl
pop
lock
movsl
add
or
inc
and
ljmp
sub
dec
jno
scas
push
unpckhps
push
push
fmull
mov
jne
push
fimuls
pop
sbbl
nop
xorb
mov
inc
pop
out
inc
ljmp
rcrl
cltd
out
adcl
mov
sub
aad
aad
outsb
adc
mov
push
xchg
cwtl
jne
cmp
daa
sbb
faddp
cmp
int
outsl
mov
and
adc
fldl
fbstp
or
push
or
jmp
sub
dec
xor
in
out
dec
adc
mov
mov
icebp
dec
jl
call
xor
das
into
iret
rcll
mov
and
shr
lahf
repz
sub
ja
mov
add
lds
shrb
jns
add
out
cmp
int
fcmovne
xchg
cmp
push
dec
xchg
int
je
inc
add
imul
sbb
nop
outsl
sub
sbb
mov
cltd
mov
mov
push
pop
dec
adc
cmc
shll
mov
push
movsl
cmp
add
ljmp
xchg
ljmp
mov
lahf
jl
jns
stos
pop
mov
ret
sarl
int3
jns
xor
pushf
cmp
cmp
jge
sbb
lock
pop
cmpsl
inc
pop
jg
mov
xchg
push
sahf
inc
mov
inc
andb
jo
sbb
xor
cltd
push
jl
insl
in
insb
loope
test
cmpsl
push
lds
push
ss
or
int
ss
stos
ja
fwait
subl
dec
stc
mov
push
loope
sbb
dec
inc
arpl
sar
pop
push
mov
push
stos
lea
cli
add
movsb
lods
mov
scas
xchg
lds
sbb
popa
cmp
out
imul
lret
jg
dec
das
clc
pop
imul
jge
loop
clc
scas
xchg
clc
outsb
std
arpl
or
lret
cmp
fs
sarb
je
mov
out
ficompl
adc
outsb
xlat
bound
push
mov
mov
loopne
fwait
test
push
ds
mov
cwtl
xchg
pop
dec
fisubs
mov
loop
pop
ret
dec
xchg
rcll
stos
aad
mov
mov
ljmp
cmc
or
loope
movsl
push
loop
insl
cli
aaa
cmpsl
sub
fs
push
sub
rolb
and
iret
repz
std
sbb
cmpsl
xchg
fstpl
out
adc
jmp
push
js
cmpsb
jg
or
push
mov
fld
xchg
cmc
ljmp
stc
inc
mov
mov
dec
jge
jnp,pt
lcall
lahf
pop
test
sar
mov
rcrb
adc
dec
mov
adc
inc
shll
cld
inc
cmp
lret
mov
fs
insl
out
xlat
insl
mov
rcrl
cmp
loope
aas
fbstp
xor
cld
jge
mov
pop
mov
pusha
sbb
sbb
xchg
xor
adc
loop
dec
sub
xchg
mov
sbb
push
fstl
jnp
mov
repnz
outsl
mov
or
adc
cmpsl
pop
movsb
jmp
fisttpll
int
mov
fwait
stos
push
sahf
jns
lret
imul
daa
mov
imul
fsubl
mov
jg
adc
cmpsb
lahf
call
incb
ror
js
mov
add
xor
je
outsb
popf
negl
imul
jecxz
iret
mov
sub
fs
ss
lods
lret
ss
xchg
xlat
arpl
push
popf
decb
sub
pop
andps
lods
sbb
ret
cmc
inc
xor
lret
push
push
int
sub
jl
icebp
sbb
mov
sbb
lds
aad
iret
in
call
clc
sub
mov
xor
cmp
hlt
add
cmpsb
xchg
outsb
sub
pop
xchg
adc
push
xchg
ret
gs
fcoms
xor
cmp
pop
scas
fnsave
add
mov
testl
test
repnz
out
xchg
mov
dec
jnp
popf
aad
mov
sbb
sub
sub
inc
scas
dec
push
rcrb
pop
mov
imul
mov
pop
dec
leave
pop
dec
arpl
in
shll
bound
push
loopne
mov
dec
int
sbb
mov
push
and
mov
jo
inc
xor
push
sbb
xor
outsb
test
or
or
clc
pop
leave
xor
fadds
inc
xchg
pusha
daa
xchg
or
in
cmp
xchg
rclb
jmp
cmp
inc
push
shll
jp
sahf
push
mov
and
xor
cmpsl
jbe
pushf
push
stc
and
sbb
mov
out
push
pop
xchg
outsl
ret
jmp
gs
cmp
sbb
xchg
jle
test
daa
jge
and
sub
andl
call
sub
xorl
mov
lret
xchg
lea
arpl
scas
push
inc
sub
stc
icebp
add
aad
jl
cld
ljmp
dec
push
jl
testl
xchg
sbb
movsb
aad
and
lods
jp
testl
leave
pop
bswap
mov
and
inc
mov
pop
sbb
stos
cmpsb
jg
add
xor
mov
lods
fisubs
adc
cmp
decl
pop
dec
sub
mov
xchg
dec
dec
push
jecxz
dec
scas
mov
jno
psllq
add
xlat
imul
xchg
jno
sti
mov
or
int
adc
dec
fdiv
pusha
mov
or
test
jp
mov
push
add
xor
sete
add
push
call
out
push
mov
jbe
mov
rorl
push
mov
lock
out
loope
shrb
rorb
and
lds
stc
enter
and
push
sbb
loope
mov
jbe
fs
movsl
inc
aam
int3
mov
out
push
cmp
ficompl
leave
mov
dec
in
mov
xchg
popa
dec
sub
lock
jecxz
insl
adc
xor
jl
ret
out
mov
in
outsb
adcl
jl
hlt
mov
outsb
fists
jmp
mov
push
push
out
rorb
outsl
outsl
cmpsl
inc
xchg
or
decb
pop
xchg
jae
mov
cmp
insb
jnp
mov
adc
sti
scas
lea
loopne
ja
or
sub
loop
scas
shrb
imul
pop
and
pop
iret
jg
pusha
lods
stos
subl
add
push
mov
sub
in
and
cmp
dec
movsl
lods
mov
pop
xchg
jmp
xchg
cmp
inc
pushf
mov
in
mov
rcr
pop
mov
leave
sub
dec
pop
adc
cmp
or
test
fnsetpm(287
push
add
sti
mov
adc
mov
xchg
daa
mov
int
sbbl
aas
push
mov
adc
ljmp
test
movsb
lret
ss
ret
lods
lcall
sub
xorl
lea
lcall
sub
add
test
sbb
test
cmp
aaa
aad
inc
rcrl
push
nop
popf
add
imul
lods
fimull
iret
lods
push
cmp
aaa
cmp
dec
pusha
lret
clc
or
sbb
insb
addl
or
mov
mov
ljmp
pop
popa
and
adc
fisubrs
js
imul
jns
inc
rolb
aaa
aad
std
lret
and
sbbl
mov
je
stos
in
dec
loopne
ds
xchg
leave
mov
dec
insl
mov
insb
pop
and
cmpsl
xchg
fbstp
fildll
scas
cwtl
sbb
push
pop
addr16
jecxz
test
mov
mov
push
mov
sub
adc
bound
outsl
loopne
xchg
xor
mov
mov
xchg
pop
stos
leave
xchg
pop
pop
cmp
testl
pop
mov
mov
push
int
pop
jmp
fidivrs
movl
push
push
in
outsb
loope
clc
movsb
inc
daa
rorl
cmp
stos
push
jp
jl
into
in
test
xor
jnp
jmp
sub
and
cltd
hlt
fldenv
sti
pop
mov
pop
mov
je
jge
cs
fwait
sahf
xor
jp
test
pop
adc
js
ljmp
xor
cld
jo
fdiv
imul
jl
pushf
xchg
sub
lret
push
fisttpl
mov
aam
sbb
cwtl
lcall
xchg
outsb
add
pop
sbb
adc
data16
icebp
nop
push
push
orl
shrb
push
fidivrl
in
jle
xor
sbb
dec
add
repnz
jmp
pop
xor
loope
ret
js
repnz
out
xor
inc
popf
sarb
jmp
subb
and
test
jbe
inc
sbb
and
push
mov
sbb
jo
pop
adc
mov
xor
xchg
int3
js
pop
dec
mov
pop
mov
mulb
add
aas
cli
xlat
sbb
call
mov
shl
add
mov
push
pop
cltd
les
pop
and
push
jbe
and
jp
pop
push
jns
addr16
inc
test
movsb
and
mov
adc
sti
dec
hlt
daa
faddp
iret
pop
or
mov
inc
loope
xchg
dec
push
imul
cmp
and
mov
cld
mov
sbb
pop
dec
sub
shrb
push
sub
or
inc
cld
sub
call
pop
stos
fdivrs
inc
lods
std
or
push
aas
shrl
fiadds
mov
cmp
je
xchg
sbb
dec
jns
inc
sub
shll
bound
push
in
gs
not
mov
movsb
mov
ds
mov
push
jmp
mov
jne
lcall
mov
jmp
sbb
inc
mov
test
push
ja
cmp
cwtl
inc
push
dec
in
jp
aad
cmp
adc
push
es
mov
insb
movsl
daa
daa
out
out
pop
sub
out
popa
jecxz
data16
stos
push
push
mov
sbb
scas
sub
mov
lods
lcall
sbb
sbb
pop
cmp
aaa
ljmp
lret
pop
dec
mov
in
mov
mov
fwait
ljmp
repnz
mov
sbb
lods
sti
mov
inc
or
dec
icebp
js
add
aam
popf
mov
push
dec
scas
xchg
jo,pn
sbb
sbb
loopne
lods
leave
lgs
dec
lock
adc
jae
cmp
pop
dec
imul
clc
inc
add
jae
int
mov
push
jae
cmp
aas
xchg
jg
add
ret
pop
cmpsl
mov
ds
dec
sbb
inc
fisttps
lods
push
sbb
mov
xor
sub
popf
push
stc
js
ret
add
mov
inc
das
inc
mov
push
cmp
shll
jo
pop
adc
add
call
mov
adc
mov
dec
sti
mov
icebp
sbb
insb
mov
test
adc
push
clc
lcall
add
xchg
stc
mov
cmpsl
add
push
je
sub
fwait
inc
xchg
stos
test
aad
lcall
rcll
mov
sbb
inc
inc
pop
gs
push
or
out
rcl
clc
dec
shl
shrl
insl
imul
ret
pop
adc
adc
loop
lahf
adc
dec
pop
mov
jne
mov
add
pop
iret
cmpsl
aas
cmc
aam
fstpl
jb
sahf
xor
mov
fwait
push
out
inc
popl
and
push
test
mov
and
xchg
out
pop
adc
jge
dec
int3
mov
sub
lds
pop
scas
cs
adc
push
stc
cld
repnz
pushaw
fstp
pop
pushl
push
stc
jge
fwait
cmc
xor
sub
mov
jne
mov
xchg
add
mov
aas
pusha
cmp
inc
pop
in
pop
mov
in
mov
stc
out
repz
repnz
insl
mov
push
in
std
jle
add
out
addr16
ljmp
cli
outsl
pop
inc
xor
mov
jbe
mov
addr16
sub
or
test
pop
pop
fdivl
and
mov
in
mov
pop
or
test
faddl
test
jl
ret
pop
pop
pop
icebp
bound
stos
les
dec
rcrl
jecxz
in
fisttpl
leave
lea
mov
and
roll
sar
clc
scas
jb
push
repnz
mov
gs
xchg
cmp
adc
insl
push
into
and
sbb
xchg
daa
xlat
mov
push
mov
nop
or
popa
adc
push
xor
js
and
push
fsts
js
mov
jb
fwait
orl
std
pop
push
xchg
mov
in
inc
and
lods
xor
mov
sbb
pop
xchg
or
enter
jmp
adc
xchg
cmp
repz
mov
xchg
mov
push
je
mov
sbb
xor
movsl
std
stos
lods
mov
in
sub
pushf
dec
and
mov
shr
cmc
add
fcoml
loop
sti
leave
sbb
mov
andb
fwait
or
enter
inc
inc
mov
mov
lret
js
fs
fnstenv
outsl
icebp
pop
mov
insb
fisubs
faddp
cmp
mov
adc
es
xchg
xor
mov
inc
mov
mov
xor
sbb
add
icebp
adc
mov
xchg
or
jmp
sub
pop
out
std
testl
cli
mov
cmp
out
inc
movsb
xor
mov
push
fs
sbbb
dec
aad
mov
inc
mov
aas
filds
fisttpl
in
xchg
mul
cwtl
addr16
cs
lahf
cmpb
dec
pop
fmul
and
inc
pop
cmc
and
cmp
outsl
xchg
lds
mov
pop
mov
push
sub
out
out
push
xchg
aas
sbb
mov
aad
lods
inc
cmp
test
sub
andb
std
adcl
push
mov
inc
cmp
jg
xchg
sub
out
xor
leave
mov
xor
inc
lods
test
out
jne
adc
dec
or
cmp
into
jae
clc
cmp
cmp
bound
cmp
mov
outsl
jno
cmp
shl
icebp
jb
cmpb
push
push
cmpsb
or
jecxz
pop
insb
test
movsb
shl
out
mov
scas
adc
mov
inc
push
jecxz
out
fninit
std
mov
push
mov
mov
adc
test
popf
cmp
pop
mov
call
add
jg
sub
jp
lds
push
pop
stos
lret
sarl
mov
push
mov
mov
out
push
fnsave
mov
out
daa
outsl
orb
push
mov
fnstsw
pushf
mov
sbb
dec
jbe
stos
push
push
push
jge
or
push
das
iret
jle
loop
iret
test
lds
cld
add
repz
and
sarl
scas
xor
or
movswl
sub
inc
sub
shlb
test
fldenv
cmp
push
jb
int3
adc
sub
rcrb
sub
push
popa
sub
dec
insl
fldcw
out
in
adc
and
xor
fisttpll
mov
stc
popf
pop
pop
ret
iret
and
rolb
pushf
insb
stc
pop
sub
xchg
aad
std
in
repnz
jb
mov
cwtl
sub
orb
mov
add
int
mov
or
sbb
enter
push
jnp
mov
mov
cmpsl
and
and
outsb
ds
fbld
and
inc
push
popf
inc
xor
enter
mov
mov
sbb
xor
jle
mov
or
lea
inc
sbb
incl
inc
cld
push
fimull
lods
push
pop
and
fsubl
mov
fwait
aam
push
mov
and
sub
adc
ffreep
mov
mov
arpl
lock
xchg
lret
dec
and
cld
xchg
push
repnz
jp
adc
lds
jge
add
pushf
sbb
pop
ret
mov
jecxz
add
xor
sahf
sbb
mov
xchg
in
les
sbb
jno
inc
xchg
andl
les
cs
addr16
mov
push
cli
inc
xor
nop
sahf
in
out
inc
scas
sar
adc
stos
std
les
test
scas
push
repnz
cmp
and
pushf
mov
mov
xchg
mov
sbb
js
scas
popf
fwait
out
sbb
lahf
sahf
and
das
mov
mov
mov
inc
push
jno
cmp
or
xchg
mov
push
cmp
pusha
popa
push
jl
pop
test
pop
pop
xor
jno
arpl
xchg
es
push
xchg
cmp
rcl
fwait
in
decb
out
add
outsb
jbe
and
push
nop
lret
fs
imul
dec
mov
mov
mov
push
rcr
mov
sar
sub
sbbb
aad
jb
fbld
or
push
add
andps
mov
adc
xor
inc
pop
and
pop
cmp
ja
aas
int
push
pushf
adc
add
push
sub
push
insl
xor
mov
cmp
std
bswap
cmp
cwtl
inc
inc
loopne
adc
mov
dec
mov
out
mov
aam
aas
jl
mov
mov
jge
jge
cmc
pop
movsb
cmc
xorb
pushf
or
xor
in
dec
xchg
adc
add
cmp
mov
nop
lock
push
lods
gs
jg
xchg
lock
inc
push
test
aam
add
or
inc
add
jge
in
jle
add
xlat
ja
sarl
xor
out
cld
xchg
adc
or
pop
fstpl
pop
mov
aas
or
xchg
shrl
push
xor
pop
jp
sbb
mov
fdivrs
pop
dec
pushf
imul
mov
pop
rorb
imul
data16
add
leave
outsl
test
pop
push
inc
adc
dec
daa
add
cs
sbb
mov
ret
into
cltd
mov
ror
push
sub
jb
aaa
pop
xchg
adc
mov
aas
cli
pop
jae
sbb
xor
sbb
movsb
pop
and
lret
and
jnp
or
cmp
mov
mov
popa
mov
jp
jae
shrl
mov
cmp
jno
in
test
add
lcall
xor
add
cmp
pop
pop
icebp
jne
xorb
shll
jg
add
lock
in
sub
and
lahf
cmp
pop
push
jmp
fwait
das
scas
lcall
cs
cmp
jmp
push
mov
lods
popf
lcall
rolb
cwtl
loope
scas
test
lcall
mov
daa
stos
dec
xchg
mov
jp
inc
adc
das
dec
imul
xchg
aas
mov
mov
pop
cmp
mov
cld
inc
in
hlt
dec
push
call
rdtsc
les
dec
push
es
lcall
pop
test
mov
jns
scas
std
clc
test
cmp
clc
sub
mov
out
test
enter
idivl
pop
mov
nop
in
lcall
push
test
aaa
xchg
cld
insb
les
push
loopne
mov
call
outsl
and
in
inc
std
insl
jmp
pop
xchg
lds
inc
fadd
leave
xor
inc
sbb
dec
test
add
push
rorb
inc
xchg
cltd
imulb
popl
test
mov
cmpsb
cmpsl
jg
nop
lock
sbb
mov
push
test
dec
rcll
bound
lds
push
orl
iret
ret
jb
out
movsl
sbb
cmp
pop
xchg
add
jl
test
loopne
mov
jb
cmp
push
fwait
pop
ljmp
in
add
insl
inc
sbb
jnp
push
add
adcb
inc
pop
lock
mov
xchg
mov
inc
aad
push
sbb
daa
aas
add
mov
sbb
cmpb
aad
mov
imul
jb
dec
cwtl
jb
das
inc
inc
mov
dec
mov
sti
sub
dec
lea
or
mov
pop
or
push
xlat
mov
push
in
in
test
fisttps
xchg
cmp
or
push
outsb
xchg
jnp
add
jne
lret
push
xlat
in
cltd
mov
inc
and
inc
push
xchg
adc
or
inc
stos
cs
outsb
cmc
cmova
stos
jp
insl
add
jno
dec
pop
lods
lods
dec
inc
dec
xchg
lds
adc
jp,pt
stos
cmp
mov
enter
inc
test
mov
lock
aas
int
pop
das
xchg
bound
pop
pop
call
sbb
push
lea
dec
cs
test
xor
loope
in
dec
push
jnp
cmp
mov
iret
push
test
ljmp
loope
imul
mov
jns
jo
mov
xor
inc
xor
add
xor
scas
in
and
pop
adc
fs
fists
call
sub
test
xchg
jl
xor
mov
fsts
test
dec
shrl
cwtl
sub
sub
stc
mov
adc
mov
jbe
rcll
jbe
sub
icebp
pop
andb
push
sub
shl
stos
jp
test
or
rcrb
mov
jecxz
cmp
dec
dec
call
ds
inc
ljmp
lods
push
and
mov
jbe
iret
pop
push
pop
pmaddwd
out
call
mov
sub
in
rorl
fdivs
mov
or
xchg
jnp
sbb
test
jne
mov
inc
push
sahf
iret
mov
lock
mov
inc
and
mov
xchg
int3
mov
xchg
push
ja
jecxz
pop
jl
mov
icebp
inc
pop
lcall
ret
movsl
cmp
dec
jge
pusha
cmp
cmpl
sti
mov
or
es
movsb
jecxz
adc
pop
xor
add
pop
rorl
and
sub
mov
xchg
jg
push
daa
dec
cmp
xchg
cmp
jbe
jb
sbb
adc
pop
popa
mov
jns
adcw
inc
bswap
or
nopl
inc
xchg
pop
and
shr
mov
andl
add
push
out
gs
js
in
pop
pop
xchg
xchg
add
movsl
jb
push
xor
dec
mov
cli
and
orl
dec
int
fs
xchg
mov
pushf
push
inc
in
mov
dec
inc
jne
pop
mov
cmp
aad
aad
and
dec
push
adc
icebp
mov
out
sub
xlat
push
dec
push
adc
movsl
sbbl
sub
xlat
in
mov
and
rol
mov
outsb
or
fidivl
jmp
pop
jmp
dec
rcrb
xchg
mov
ja
mov
jecxz
mov
cltd
aas
cmp
jle
and
or
lds
cmpsl
jbe
cmp
xchg
adc
jmp
xchg
cs
les
cltd
push
add
movsb
sub
outsl
pushl
push
mov
sub
xor
int3
jle
imul
rcrb
and
inc
or
nop
push
addl
push
and
xchg
add
push
or
mov
push
mov
xchg
mov
push
inc
push
xchg
mov
shll
xor
inc
mov
xor
icebp
xchg
xlat
or
and
mov
inc
pop
inc
jnp
hlt
mov
jb
imul
stos
sub
push
stc
and
pop
adc
xor
ret
jl
fucomp
push
outsb
mov
cmpsb
mov
ja
sbb
fdivs
aas
sbb
sub
test
inc
lret
jge
clc
out
out
js
aaa
scas
xchg
das
loopne
mov
dec
addr16
jmp
and
jnp
mov
jo
lock
fimull
inc
faddp
movsb
mov
xor
sbb
mov
iret
lds
sbb
sbb
scas
stos
xchg
xchg
xchg
mov
sub
cmp
jno
mov
mov
adcb
push
mov
cli
cmc
lret
or
movsl
pushf
and
aaa
cmc
mov
or
xor
js
xchg
mov
out
inc
inc
pop
mov
scas
int
bound
inc
mov
pushl
sti
std
aam
out
mov
fsin
aad
push
std
jmp
inc
stos
int3
leave
cld
mov
lcall
mov
mov
mov
in
xchg
icebp
icebp
add
int
sar
mov
fs
fwait
mov
outsl
lock
pop
xor
or
gs
or
mov
repz
std
fbstp
aaa
mov
mov
or
jb
jecxz
inc
mov
imul
gs
lock
mov
in
mov
xlat
xor
fcompl
rcr
lcall
bound
cmp
mov
mov
mov
fmuls
jle
pop
mov
out
imul
pop
adcl
mov
push
push
adc
cmp
js
stos
sbbb
mov
mov
xchg
repz
and
cli
popf
mov
push
sbb
xlat
dec
or
pop
or
and
loop
lea
mov
pop
xchg
daa
ret
xor
xchg
lods
ret
xlat
ljmp
js
bound
inc
test
pushf
repnz
ljmp
das
jne
pop
xor
icebp
dec
jno
ja
aam
fdivs
push
sti
cli
test
fstpl
addl
mov
scas
in
loopne
dec
std
inc
and
push
cs
lahf
pop
insb
add
jmp
or
dec
or
gs
imul
inc
ljmp
cwtl
pop
sahf
outsl
adc
es
jg
mov
lahf
dec
neg
cltd
lds
inc
lret
loope
iret
in
sub
setae
push
dec
lods
mov
cmp
leave
jb
or
in
test
cs
sbb
mov
or
dec
or
lea
out
jb
outsb
fs
in
jmp
push
hlt
xor
push
lret
mov
inc
cli
inc
fs
pop
aas
sub
lahf
insl
ljmp
aas
jnp
js
hlt
or
bound
mov
pushf
aam
jmpw
lds
mov
das
push
or
sarl
ret
dec
sub
cli
mov
jne
int
cmp
orb
pop
aaa
dec
push
pushf
ja
sti
and
gs
fnsave
sbb
ret
cmp
jns
add
ficompl
imulb
inc
orb
aas
je
push
inc
movsb
inc
mov
add
stos
test
jp
movsb
lods
in
jg
push
stos
andl
pop
pop
test
adc
fisttpl
js
and
adc
in
repnz
je
or
pop
ret
xor
into
xchg
call
or
add
shll
pop
mov
je
xor
sub
pushf
pusha
xor
mov
js
and
pop
test
jg
jp
pop
bound
add
icebp
test
js
cmp
and
mov
cmp
mov
sahf
stos
cmp
push
outsl
and
cmp
es
and
mov
mov
adc
push
leave
sbbb
cli
mov
mov
or
xor
push
dec
rcll
out
pop
xor
jae
cli
dec
cmp
xchg
lret
call
mov
sbb
or
jnp
and
lea
test
xchg
in
dec
add
mov
jge
adc
lret
pop
sub
test
inc
lock
leave
inc
enter
jp
popa
inc
pop
daa
sbb
push
push
mov
fwait
ss
jno
ret
add
jmp
popa
xor
xor
mov
or
mov
pop
stos
add
lock
bound
mov
js
ljmp
jge
and
js
push
sbb
pop
iret
into
js
lret
movsl
xchg
sub
lods
dec
pusha
or
xor
pop
xor
xlat
mov
in
push
in
mov
fnclex
push
mov
xchg
xor
das
mov
repz
int
aas
mov
imul
mov
mov
push
and
xor
inc
push
push
fisubs
clc
movsl
pop
jmp
imul
mov
and
popa
cwtl
push
pop
push
in
stc
fcmovbe
roll
mov
loopne,pt
repz
int3
call
push
or
lods
pop
mov
mov
push
mov
push
dec
pop
sbb
or
pop
jg
and
ss
mov
lret
faddp
xchg
fadds
arpl
ret
push
and
adc
bound
jmp
out
call
stos
aad
inc
cli
jno
in
mov
dec
inc
ljmp
mov
adc
sub
mov
pop
pop
jg
mov
sbb
shlb
lahf
ret
fnsave
and
add
pop
mov
pop
or
repnz
xor
aaa
cmp
icebp
ljmp
mov
sbb
xor
adc
cmpb
loope
mov
and
xchg
decl
popa
outsl
add
in
daa
xchg
pop
sub
shl
mov
movsb
lahf
mov
inc
pop
push
rcrb
popa
cwtl
in
mov
mov
aam
mov
clc
loopne
pop
mov
daa
ret
inc
rol
lea
lods
outsb
or
ds
adc
lds
jl
inc
in
dec
push
push
ds
scas
and
mov
push
dec
push
loop
stos
or
inc
push
lock
mov
mov
add
cmpsb
js
jno
iret
mov
adcb
lret
jp
cmp
pop
cmpsb
mov
dec
clc
jecxz
mov
movsl
pop
xchg
jb
dec
pop
mulb
add
mov
in
add
mov
out
xor
pusha
cltd
nop
lret
xchg
inc
adc
mov
rclb
aad
sub
fwait
mov
push
or
jb
mov
ds
cmp
inc
xchg
sbbl
jle
insb
iret
rcl
mov
shrl
insb
outsl
cs
int3
incl
data16
cltd
push
nop
mov
pop
sub
in
inc
cmc
iret
mov
xor
aam
lods
xor
cmpsb
mov
xchg
mov
mov
ret
sahf
xchg
lcall
cld
dec
das
xor
aas
imul
jl
ud1
inc
push
mov
notb
sub
leave
add
into
mov
mov
cmpsb
negl
rorl
fs
insb
icebp
add
gs
in
and
js
gs
mov
scas
push
notb
and
or
es
lock
sbb
lods
clc
sub
pushf
jl
and
cld
push
sbb
rcrl
fcmovnb
test
cmp
dec
out
mov
cld
inc
stc
push
pushf
dec
or
pop
jp
inc
mov
push
push
push
or
rcrb
movsb
mov
fs
lock
ret
dec
nop
lock
sbb
xchg
rcrb
jno
push
idivl
or
adc
push
ljmp
push
fstl
inc
cmp
xchg
fistl
pop
jg
in
lea
scas
fcmovnbe
jo
or
inc
push
add
push
adc
aam
fidivrl
into
adc
jl
dec
push
adcl
stos
add
roll
in
jg
adc
lret
xchg
pop
je
push
or
ror
fdivrs
sti
xchg
loop
or
jb
ret
or
sub
test
inc
addl
cmp
rcrb
push
in
inc
or
or
out
scas
mov
inc
and
cmpsb
add
push
test
mov
ljmp
jge
xor
ret
out
popa
mov
sarb
and
dec
pop
mov
dec
js
rclb
lea
test
push
mov
or
ljmp
ja
je
fimull
lods
lahf
lods
pop
pop
je
mov
popf
icebp
movb
sbb
xchg
xchg
add
push
xchg
sub
pop
and
pushf
push
mov
fadd
add
mov
sbb
icebp
dec
jno
jmp
jnp
out
imul
jecxz
cli
cltd
sti
mov
into
aad
es
jmp
mov
sub
shrb
and
inc
mov
push
add
jae
shl
inc
stos
fadds
insl
mov
ss
gs
mov
fucompp
stos
scas
fildl
out
pop
cmp
pop
mov
mov
and
icebp
repz
cmp
cmp
xchg
les
jecxz
scas
push
adc
std
lock
push
out
jg
in
mov
or
inc
lea
popa
jae
cs
push
idivl
test
mov
fs
or
or
dec
adc
clc
add
jno
add
push
fmull
adc
add
push
jmp
xor
sub
mov
mov
push
dec
sub
ret
xor
jns
loopne
sub
cmp
test
das
loopne
pusha
adc
dec
out
cmp
jmp
xlat
xchg
filds
and
xor
in
stos
std
les
call
sub
aad
stos
pop
add
fsubs
xlat
adc
leave
dec
cmp
cmp
sub
fmull
scas
and
add
sahf
sub
or
mov
add
pop
adc
popf
movb
sahf
xchg
jg
jns
cmp
jg
jge
xorb
outsb
xchg
push
out
ret
sub
xor
andl
fimull
mov
in
clc
data16
xchg
mov
sub
cld
push
jae
fmull
push
mov
push
fsubs
jl
add
adc
mov
dec
mov
mov
mov
mov
movsl
inc
pusha
insl
inc
lret
jae
lods
arpl
enter
test
mov
out
add
int
shrl
das
mov
push
dec
xlat
mov
shl
in
inc
cmpsl
cmp
pop
insb
and
icebp
les
in
insl
mov
in
data16
test
cmp
dec
mov
test
mov
xchg
push
mov
sub
xor
xor
shrl
jns
push
loop
loop
repz
jmp
mov
jp
aad
js
shll
sbb
into
mov
adc
not
sub
jmp
das
mov
fnstsw
cmpsb
jns
xlat
jge
xchg
hlt
pop
push
or
dec
pushf
jns
dec
xchg
enter
xor
mov
sbb
push
dec
cmpb
mov
arpl
dec
xlat
jnp
aas
pusha
mov
jl
pusha
xchg
int3
popa
test
mov
and
sbb
push
sub
inc
data16
mov
repz
mov
pop
xchg
ret
ret
rcll
pop
cs
fs
push
cmpsl
xor
push
int
inc
cs
sub
xor
les
lret
in
sbb
dec
rolb
aam
xchg
stos
dec
xchg
cmpl
shl
int3
loope
daa
fiadds
sar
xchg
loop
gs
jne
push
mov
nop
mov
stos
cmc
enter
mov
inc
sbb
push
movsb
iret
cmpsl
sub
pop
and
add
test
stos
subb
mov
xchg
fldt
outsb
pop
inc
loop
mov
loopne
ret
mov
dec
dec
movl
in
andl
sub
sub
xor
outsl
push
sbb
pusha
cmc
rol
ss
popa
sbb
mov
mov
and
dec
cmp
fcomps
sbb
mov
dec
pop
jnp
xlat
inc
in
in
sbb
push
xchg
mov
inc
addr16
mov
ret
scas
xor
arpl
stc
mov
jne
sarb
jge
ret
adc
jnp
xchg
out
xor
imul
addr16
xlat
sub
xchg
inc
and
fstpt
cmpsl
sahf
addr16
mov
or
gs
lds
pop
or
loope
mov
out
daa
adc
or
jne
fwait
into
xchg
mov
push
cmpsl
popa
push
mov
out
mov
es
aad
mov
dec
cmp
int3
in
mov
loop
cs
push
std
lock
add
sbb
das
insb
push
lcall
sbb
jae
insb
and
std
mov
jge
push
or
xchg
dec
mov
jne
adc
jp
push
and
push
adc
jbe
shr
push
outsl
loop
mov
mov
adcl
shll
mov
lds
sub
jno
int3
jbe
out
push
mov
addr16
fistpl
jl
cwtl
xor
lahf
and
divb
add
int
ljmp
inc
data16
adc
push
jle
sub
aad
insb
xchg
pop
or
lock
pop
daa
lods
mov
xchg
sbb
sub
repz
mov
stos
repz
imul
mov
lret
pop
das
in
mov
xor
or
adcb
scas
cli
inc
push
adc
sbb
pop
pop
incb
sub
rcl
std
outsb
out
sti
jno
mov
inc
adc
jno
ficoms
arpl
popa
negl
pop
insl
imul
pop
xchg
cmp
aas
lea
cltd
pop
adc
dec
in
push
data16
and
scas
mov
xchg
in
mov
insl
mov
adc
fwait
cmp
outsl
jg
cmc
mov
inc
xor
imul
in
add
cmp
movsl
nop
mov
xchg
call
insl
cmpb
dec
jg
and
mov
push
mov
ss
addr16
or
pop
and
dec
fstpl
inc
sub
xor
adc
pop
adcl
jl
popf
cmp
stos
insb
out
repnz
xchg
push
push
and
adc
cmpsl
popa
lea
dec
push
add
imul
xchg
push
add
out
inc
or
mov
xorb
out
gs
mov
insb
adc
mov
xor
int
arpl
jns
jecxz
sub
sbb
aas
inc
cmp
add
inc
cmpsb
jmp
out
push
popf
test
sbb
pop
out
or
ja
ret
add
cmc
arpl
aam
pop
cld
inc
jecxz
pop
push
cmpsl
mov
xchg
jb
in
add
and
je
mov
and
xchg
xchg
pop
pop
and
xor
push
cltd
xor
dec
push
jecxz
out
loop
xchg
scas
cmp
pop
mov
popa
test
xchg
loope
cmpsl
rcr
aas
cmc
imul
fisubs
xor
and
inc
push
xchg
push
insl
ss
test
icebp
imul
int
add
lret
mulb
ja
mov
mov
push
fbld
pop
pop
push
jmp
cmp
leave
mov
lahf
mov
repnz
popa
pop
xor
or
jge
inc
sbb
push
negb
pop
js
mov
inc
sub
jae
pop
enter
in
aaa
pushf
mov
test
sbb
and
push
popf
in
aad
aam
mov
mov
scas
xor
add
xchg
xchg
xor
imul
push
pop
mov
pusha
xchg
mov
in
sbb
ljmp
dec
dec
push
aaa
inc
leave
scas
in
push
xchg
mov
outsl
push
shll
enter
insl
ds
xlat
insl
sbb
xchg
or
int
cltd
xor
movsl
mov
daa
sbb
adc
xchg
stos
adc
aas
arpl
pop
add
xor
xor
aad
incl
fdivs
push
je
xor
or
push
fsubrl
inc
pop
and
mov
aad
icebp
xor
jge
sub
aas
dec
mov
pushf
push
popf
in
stos
or
sub
fsubl
stc
pop
cmpsb
xchg
je
mov
jnp
jne
iret
xchg
fs
dec
lock
xor
pop
xchg
cmc
inc
xor
cmpsl
lock
punpcklbw
or
pandn
dec
or
xchg
das
or
fdivr
arpl
mov
jns
pop
insl
push
fdiv
iret
daa
jnp
pushf
test
mov
cmp
inc
mov
pop
int3
daa
scas
inc
outsb
rclb
inc
cmp
or
jmp
sub
je
movsb
dec
cmp
push
ljmp
inc
jb
sbb
xchg
adc
push
mov
test
jns
enter
into
mov
leave
out
in
leave
lea
add
in
cmpsl
cmp
sbb
arpl
adc
je
out
adc
jge
pusha
shll
test
dec
aad
aas
or
lds
fs
push
cmp
pushf
pop
sbb
dec
mov
cmp
ret
in
stos
cmpsb
ror
loope,pn
ja
dec
cld
decl
insl
es
jae
mov
dec
adc
scas
mov
test
test
mov
leave
mov
mov
add
push
sbb
out
jmp
inc
inc
inc
fildl
jns
adc
ret
popa
cmp
arpl
outsb
mov
in
push
mov
scas
xchg
fiadds
call
loopne
dec
pop
jns
add
insl
clc
scas
push
jbe
test
mov
pusha
and
sti
dec
pop
aas
shlb
arpl
int3
cld
adc
out
mov
push
data16
into
adc
sub
mov
cmpsb
sbb
sub
mov
jp
xchg
mov
inc
in
out
ja
mov
mov
sarb
adc
mov
sbb
hlt
push
dec
arpl
inc
pop
sub
mov
in
lret
inc
jmp
imul
negl
lea
pushf
push
jno
leave
clc
lds
mov
add
enter
inc
cmpsl
mov
cmpsb
frstor
jl
jp
xchg
xorb
out
mov
push
dec
andb
push
push
sti
cmpsl
insb
popa
mulb
dec
cmp
mov
add
sbb
adc
xchg
sub
jb
adc
xor
jns
pop
fstl
adc
adcl
ds
pop
push
int3
mov
adc
dec
jmp
add
dec
test
popa
add
ljmp
mov
cld
je
jne
cmc
sub
sub
outsl
out
scas
sbb
xlat
cmpsl
popa
enter
sub
inc
and
sarb
pushf
cld
inc
push
jp
pop
sbb
pushf
pop
out
and
push
xchg
ljmp
push
lds
or
subl
leave
xorb
xor
int3
jnp
xchg
fsts
stos
adc
int
and
mov
cmp
gs
jg
cmc
and
jo
xchg
imull
jmp
mov
cli
test
push
into
add
hlt
adc
in
movb
mov
add
jecxz
jg
sbb
cmp
iret
into
daa
psubusw
das
mov
sub
lret
or
cmp
inc
es
loopne
jge
jp
or
or
hlt
movsb
sbb
jmp
lods
push
jl
mov
jae
add
addr16
push
shll
xchg
cmp
mov
adc
sbb
loope
sbb
repz
mov
mov
jns
push
mov
out
imul
mov
ret
adc
pop
andb
adcb
aas
mov
sahf
push
mov
push
imul
stc
sbbb
mov
stc
jle
mov
mov
mov
add
mov
xor
mov
mov
gs
fs
in
pop
xchg
jb
icebp
pushl
add
pop
cs
inc
add
mov
mov
pop
cld
xchg
rcll
aas
mov
cld
pop
arpl
sub
add
adc
add
shrl
aas
sub
test
pushf
stc
mov
test
jae
sub
popf
push
aad
ljmp
pushf
aad
mov
jl
dec
push
mov
push
mov
movsl
lods
mov
pop
pop
xor
dec
fs
mov
lods
jno
sub
cmpsb
sbb
test
into
jge
mov
stc
jnp
cmp
mov
sbb
dec
mov
js
repnz
cs
call
cltd
out
dec
sbb
inc
add
sti
mov
cmp
pop
pop
popa
sub
adc
mov
sub
lahf
aaa
sbb
fsts
inc
xor
gs
jo
out
paddsb
push
ss
mov
sar
lcall
fwait
cmpsl
xlat
jnp
fsubs
aad
cmpsb
ficompl
cmp
xchg
push
and
add
js
mov
push
pushf
cmp
pop
int
push
pushf
out
cmp
fcoms
xchg
push
out
scas
push
or
push
add
ficompl
popa
cmp
jmp
icebp
aad
stos
ds
xchg
jmp
mov
xchg
shrb
inc
or
cmp
pop
mov
data16
cmpl
dec
sbb
popa
mov
les
jp
inc
adc
dec
std
test
hlt
push
or
lods
fwait
push
bound
clc
std
addl
fwait
or
pop
insl
cltd
jnp
dec
mov
adc
cmp
pop
dec
std
dec
std
adc
adc
inc
xchg
call
sbbl
cmc
xchg
jae
sub
push
xchg
stos
jecxz
jae
mov
ss
or
fbstp
out
cltd
jno
scas
dec
cmc
xchg
and
lret
inc
in
mov
jecxz
fidivl
scas
and
fs
inc
pop
cmp
ds
into
cs
sarl
rorl
mov
cmp
repnz
jae
cs
mov
test
shll
mov
std
in
and
xor
leave
push
mov
adc
pop
pushf
cs
cmp
lods
adc
mov
and
and
ljmp
out
leave
stos
pop
div
xor
or
not
cli
shrb
lods
mov
sub
push
push
xor
test
mov
iret
and
inc
adc
popa
hlt
hlt
or
sub
fucom
nop
mov
outsb
push
cltd
xchg
xchg
js
mov
lods
ds
sbb
adc
mov
mov
into
int3
int3
mov
movl
or
cmp
movsl
mov
mov
ret
and
insl
sbb
loopne
mov
call
rclb
lods
jbe
inc
and
mov
add
sub
dec
mov
addb
xchg
xor
xchg
cmpsl
jno
mov
repnz
lea
ja
pusha
xchg
cmp
sarl
mov
adc
push
mov
push
dec
cltd
lods
les
in
fs
cltd
sar
jae
push
mov
add
gs
xchg
rcr
repnz
jo
lea
xchg
int3
enter
sub
dec
lods
sar
test
add
xchg
scas
jnp
dec
lret
inc
in
test
mov
ficoml
adc
in
push
jecxz
jecxz
shll
xor
lods
push
repz
insl
push
or
stos
inc
rcll
dec
scas
je
fwait
addb
or
addr16
cmc
inc
ret
shll
inc
push
dec
mov
pop
cs
lds
cmp
inc
inc
ficoms
je
cmp
push
push
mull
in
sub
jg
mov
lret
out
mov
mov
cwtl
add
popa
mov
add
sar
cmp
out
imul
dec
stos
call
mov
ret
jle
and
nop
repz
sub
adc
inc
test
in
dec
aaa
jo
sub
sbb
ljmp
test
xlat
jp
sbb
sub
or
stc
movsl
dec
mov
push
iret
stos
xchg
cmpsl
and
fwait
enter
ljmp
fs
adc
cmc
jle
push
enter
out
mov
loope
dec
mov
ss
add
fadds
lock
dec
adc
pop
fisttps
repz
add
mov
lods
test
je
push
xlat
imul
mov
mov
insl
test
xor
mov
data16
stos
sub
xchg
fcompp
jbe
mov
mov
iret
sbbb
cmp
mov
mov
dec
scas
ljmp
fs
jge
push
dec
xchg
call
stc
add
or
and
jne
outsb
cs
jne
call
cmp
cmp
iret
jne
mov
in
addl
stos
dec
pop
ljmp
ljmp
cmc
mov
fcoms
enter
xorb
mov
inc
or
cmpsb
loopne
adc
mov
repz
or
pop
and
pop
xchg
inc
sbb
mov
int
cmp
bound
clc
orl
mov
or
dec
inc
adc
ficoms
setb
inc
dec
fistpll
pop
aaa
xchg
xor
pop
pop
push
clc
lret
sub
mov
push
add
dec
addl
jg
mov
scas
imul
xchg
in
mov
push
push
sbb
mov
mov
xchg
hlt
fucomi
or
adc
fildl
andl
repnz
pop
imul
nop
add
rorl
add
jae
sub
ret
inc
jb
and
pop
test
mov
xchg
bound
push
sbb
mov
insl
xchg
out
orl
dec
pop
ror
ss
cmc
aad
lea
mov
inc
cld
repnz
aad
push
xlat
std
fidivl
mov
xor
loop
pop
aam
xlat
inc
adc
jge
loopne
cld
push
shr
sbb
xchg
adc
xor
lock
fcoms
inc
and
fistpll
mov
cmpsl
mov
push
push
jecxz
fstl
insl
dec
lret
mov
sub
mov
push
in
rcrl
test
add
mov
sub
mov
sbb
cmc
leave
mulb
movsl
cwtl
xchg
cmpsl
add
pop
int3
sbb
ret
jmpw
dec
jae
jbe
xchg
mov
in
mov
into
lret
xchg
lods
mov
sbb
jo
cmp
insb
je
cli
fwait
inc
dec
lods
test
xchg
mov
cld
push
in
pop
push
pop
inc
mov
aaa
push
sbb
aaa
fs
insb
icebp
mov
or
and
mov
xchg
cli
push
out
lcall
inc
shrb
in
orb
mov
adc
movsb
xlat
pop
jle
and
cmp
lods
xrelease
cltd
mov
popa
ret
je
inc
fs
and
cmp
stc
cmp
es
mov
scas
xor
imul
or
movsl
add
sub
sbb
xor
addl
mov
stos
adc
insl
mov
xchg
sub
movsb
xor
lds
inc
push
push
inc
test
movsb
sub
xor
mov
or
sbb
jb
xchg
iret
pop
sub
cmp
mov
push
jne
bnd
scas
in
inc
cmp
cli
inc
adcl
jecxz
mov
arpl
dec
inc
das
mov
lahf
cmpsl
bound
aas
dec
mov
shll
or
insb
or
xlat
xor
push
xor
ljmp
inc
js
test
jg
mov
xchg
add
mov
lret
pop
inc
xchg
es
sbb
add
push
and
jle
nop
fisttpll
aad
or
fldln2
dec
sub
mov
mov
int
scas
pushf
xchg
add
dec
js
fmulp
pop
in
aam
lret
pop
mov
mov
es
or
jge
iret
xchg
inc
fwait
int
cltd
sub
fwait
daa
stos
mov
setbe
dec
jg
xchg
lret
adc
lret
scas
ss
mov
add
aam
mov
adc
cmp
push
daa
mov
ljmp
in
mov
test
cmp
push
or
pop
push
mul
mov
stos
mov
mov
mov
out
and
adc
sbbb
and
dec
push
sti
clc
pop
sub
mov
iret
je
jns
jg
dec
xlat
lcall
iret
or
ss
movsb
pop
or
lds
cs
push
sub
sbb
push
mov
pop
in
mov
cmp
out
out
dec
push
pop
aas
jnp
cmpsl
push
mov
sahf
jae
loopne
arpl
lret
mov
pop
imul
xchg
movsl
jnp
cmp
fsubs
or
ret
movsb
inc
in
xchg
mov
or
popf
mov
cmpsl
and
inc
pop
jne
test
mov
dec
or
iret
lahf
xchg
push
lds
cli
mov
rcrl
fidivs
sub
into
cld
lock
xchg
xchg
jg
stos
jne
sub
cmpsb
and
sub
push
leave
jecxz
adc
mov
inc
sub
dec
xor
jo
sub
mov
xor
cmpsl
cs
push
movsb
out
int
adc
cmp
fwait
mov
sub
mov
inc
mov
or
xor
mov
cmp
xchg
loop
in
pop
or
cli
push
and
dec
je
inc
add
sub
dec
xlat
inc
push
cmp
mov
add
in
mov
mov
test
push
dec
js
sti
dec
neg
push
fwait
mov
addl
popa
loope
mov
ret
inc
test
sub
mov
pop
mov
int3
nop
imul
mov
xchg
mov
cs
mov
jmp
inc
fcoms
sti
daa
out
aad
and
ds
movsl
push
test
sarb
push
xchg
int
loopne
sbb
and
adcl
add
sub
insb
roll
sub
aam
and
xor
arpl
cmp
mov
cmp
mov
jg
xchg
dec
test
and
hlt
or
pop
xchg
aaa
adc
loop
lock
and
bnd
addl
ror
cwtl
in
in
adc
sub
popf
lods
ja
mov
sarl
sahf
gs
clc
mov
push
insl
ds
ds
dec
fcmovb
jns
cmp
imul
mov
stos
sbb
pusha
fldcw
inc
sbb
mov
mov
es
in
inc
insb
or
lret
pop
fisttpl
xor
mov
sarl
dec
rcrb
add
pop
fistps
sahf
bound
mov
cli
cmp
ror
ljmp
scas
pop
inc
fldenv
shrl
inc
jae
inc
push
std
xorb
mov
inc
jns
stos
pop
push
sti
prefetch
fsubs
sub
dec
insb
fs
mov
xchg
sub
stos
mov
out
fs
sti
int
add
ljmp
inc
jecxz
adc
pop
mov
cmp
or
jbe
aaa
outsb
mov
mov
les
lahf
inc
mov
shll
rcll
xchg
std
push
mov
inc
lds
arpl
or
lods
lahf
cmp
lock
cmp
xchg
insl
shrb
ret
xchg
lret
ljmp
mov
xlat
and
add
inc
push
ja
jb
test
push
jb
jns
xchg
rorl
enter
or
add
cmp
imul
add
ja
aaa
jle
pop
xchg
dec
push
or
dec
into
out
fsubrs
call
adc
movsb
imul
leave
mov
xchg
sti
daa
cmp
ljmp
mov
or
sub
and
adc
stos
inc
das
or
iret
push
push
xor
fwait
inc
pop
sbb
aam
sbb
cmp
or
enter
push
cmp
jle
sub
gs
cs
xor
in
jmp
lds
mov
dec
loope
jg
lcall
iret
cmp
les
repnz
add
push
lods
icebp
jmp
fiaddl
inc
repnz
push
mov
sub
push
daa
bound
add
scas
jnp
aam
jmp
mov
insb
push
aad
jg
mov
insl
inc
add
loope
mov
or
sbb
inc
push
push
scas
scas
mov
mov
sti
outsl
lock
in
in
cmp
lret
mov
lds
adc
push
and
jle
ret
scas
mov
rolb
mov
insl
pop
incb
lods
add
or
popa
jae
cmp
adc
dec
loop
stos
je
add
mov
movsb
mov
pop
stc
pop
cmpsl
mov
dec
loopne
or
xor
and
lcall
mov
lock
lea
sarb
js
pop
xchg
fs
addr16
in
cmp
repz
cmp
cmp
dec
popa
out
inc
in
lcall
cmp
imul
lcall
aad
jle
lods
addr16
mov
cmp
or
dec
cmp
add
cmpsb
add
mov
inc
lret
nop
xchg
aam
rclb
xor
xchg
jne
push
out
in
jmp
dec
into
jle
or
pop
popa
xchg
imul
xchg
or
arpl
mov
sbb
outsl
sub
daa
iret
jnp
fwait
leave
call
out
lret
aad
cmp
mov
sub
jae
sbb
sub
inc
jg
daa
filds
push
inc
cmp
jg
testb
jno
jno
mov
test
push
jb
dec
repz
hlt
jo
mov
shr
fwait
push
and
mov
fcoml
mov
mull
lahf
stos
adc
cmp
mov
iret
iret
sub
ret
mov
sahf
enter
and
movzwl
mov
cmc
and
iret
jg
adc
xor
lods
push
loope
xchg
pop
cmpsb
leave
mov
and
push
cmp
adc
lret
loop
not
js
or
fwait
xlat
je
mov
mov
mov
in
jmp
outsb
push
mov
inc
push
lds
pop
stos
mov
mov
aad
and
mov
orps
mov
test
jne
mov
xchg
pop
and
into
dec
cmp
dec
gs
cld
rcll
movsl
les
fadds
xor
mov
cmpl
jne
enter
inc
add
movsl
adc
leave
add
ja
push
in
mov
lcall
inc
gs
pop
sub
ljmp
cmp
or
sbb
jmp
cld
hlt
mov
and
add
lret
js
shll
push
mov
leave
insl
adc
arpl
lahf
or
aam
sub
bound
sub
test
outsb
mov
out
mov
sbb
pop
lret
insb
addl
pop
push
adc
pop
repz
push
pop
ret
mov
es
pop
fwait
mov
lret
test
mov
mov
mov
shll
add
test
fdivrs
mov
and
sub
pop
xor
push
adcl
adc
pop
and
fs
dec
jbe
inc
dec
jp
mov
jbe
ss
dec
iret
jb
adc
cmp
push
mov
sbb
push
out
fwait
or
int
push
xor
pop
test
scas
sbb
sub
movsl
loopne
aas
es
mov
xor
sbb
xor
pop
test
jge
inc
shlb
stos
es
movsl
aas
mov
les
ljmp
loope
adc
fs
leave
adc
cwtl
clc
int
sub
sbb
add
ret
dec
adc
sbb
dec
cmpsb
pushf
pusha
outsl
pop
push
mov
and
inc
les
test
mov
inc
dec
call
addr16
mov
clc
orb
mov
sbb
insl
dec
and
nop
dec
push
add
and
mov
xchg
xlat
bound
in
adc
aaa
in
int3
mov
mov
cld
sub
out
mov
rcl
rorl
xor
pop
sbb
xchg
add
xchg
jge
cmp
jo
xor
mov
fs
mov
filds
test
mov
pusha
fadd
je
jmp
pusha
out
jae
cmp
add
rorb
add
pxor
mov
mov
int
repz
jbe
outsl
stos
stc
mov
jmp
lahf
lock
mov
push
push
out
test
push
or
in
int3
jbe
hlt
push
pop
cmp
xor
test
jo
imul
fsubs
inc
mulps
and
push
out
std
pop
mov
adc
aad
xor
hlt
daa
stc
scas
clc
sub
add
decb
nop
adc
xor
and
sub
add
imul
and
push
data16
jae
push
xchg
xchg
xor
pusha
or
sbb
data16
stos
inc
xchg
ss
mov
xlat
fcomi
xor
xchg
ret
sub
mov
lcall
add
mov
fldl
sbb
pusha
jns
push
pop
std
loope
fs
inc
cli
mov
inc
xchg
jp
int3
out
jge
lods
mov
and
xchg
data16
mov
nop
repnz
jo
scas
lods
sbb
loopne
dec
jbe
shll
mov
dec
mov
mov
xor
jae
fcoms
idivb
and
jno
and
dec
adc
jns
and
mov
js
scas
addb
xor
pop
dec
dec
hlt
push
ficoml
cld
mull
push
jge
sti
pushf
sbbl
xor
pop
inc
jo
push
out
adc
add
jmp
push
adc
xlat
js
leave
push
loope
jae
mov
xchg
cmpsb
push
push
addr16
gs
lods
mov
arpl
or
ss
lcall
fbld
enter
scas
repz
test
into
fxch
lock
gs
loop
mov
aam
mov
mov
lea
lods
test
sbb
and
xor
inc
cmp
lahf
sub
cmp
pushf
in
jg
jnp
cld
mov
adc
mov
xor
mov
xor
out
stc
sbb
adc
push
jmp
jne
lea
pop
or
icebp
adc
xorb
or
xchg
jp
jle
mov
xchg
popa
jle
add
out
cmp
push
leave
adc
jecxz
iret
mov
test
mov
mov
aaa
or
aam
inc
lods
sbb
subb
xor
outsl
inc
push
xchg
out
mov
push
push
cmc
sub
cld
movsl
add
fnsave
mov
adcb
mov
lret
cmp
jbe
or
xlat
shll
jge
mov
out
pop
add
test
aaa
cmp
enter
in
mov
dec
or
mov
dec
dec
jns
stc
int3
loopne
stos
orb
sub
dec
dec
push
rclb
roll
movsb
fs
imul
enter
mov
cltd
sub
sbb
push
pop
adc
mov
push
xchg
ret
cmc
clc
mov
iret
imul
mov
sub
xchg
subb
jmp
cmp
xor
das
test
test
sahf
scas
orl
rclb
rorb
pop
sbb
push
sub
js
or
ret
dec
jmp
adc
test
mov
outsl
cmpsl
pop
mov
int3
xor
xchg
fdivl
inc
inc
hlt
cmc
add
cmp
sahf
xchg
orb
arpl
call
mov
mov
int
jo
inc
jbe
negb
dec
xchg
movsb
inc
jb
jle
push
xchg
pop
aaa
mov
addb
lcall
in
jg
andl
jno
xchg
jnp
push
mov
sti
addr16
dec
out
mov
sub
cmpsl
xchg
nop
lods
xor
cmp
dec
stc
cwtl
je
xlat
mov
movsl
push
lret
repnz
mov
jnp
stc
call
fdivrl
adc
fcoms
pushf
daa
test
testl
adc
lahf
dec
xchg
mov
int3
or
stc
lahf
lahf
pop
inc
lcall
or
jp
and
subb
inc
push
rorl
push
shr
movsb
je
fimull
jecxz
nop
pop
mov
or
inc
fsubrl
cmpsl
andl
scas
test
pop
xchg
mov
popa
push
xchg
sub
shr
pop
lret
jl
pop
js
fcomps
mov
inc
mov
hlt
pop
clc
in
fs
loop
xchg
subl
dec
dec
cmp
mov
mov
rcrb
inc
sbb
jg
out
cmp
out
sbb
xchg
or
lds
les
rorl
cmp
out
adc
jo
pop
stos
rcrb
icebp
xchg
jno
sub
fxch
incl
sub
mov
std
pop
enter
fadds
mov
pop
aaa
das
cmpb
imul
add
cwtl
jbe
cmp
mov
in
add
jle
aas
imul
lret
fsts
enter
pushl
test
cmpsb
rcr
xchg
mov
movsb
insb
xor
adc
sub
mov
stos
push
and
pushf
es
push
subl
cmp
data16
adc
jns
out
pushf
push
xchg
repnz
mov
fs
lea
jnp
repz
adc
movaps
inc
jo
aam
lods
xchg
into
xchg
xchg
or
xor
inc
pop
mov
popf
fidivl
dec
pop
push
loope
push
mov
fdivrl
mov
sub
notl
test
lcall
or
inc
je
dec
push
mov
stos
lahf
mov
stc
je
and
xchg
pop
push
out
pop
out
or
fninit
push
pop
add
fcoml
push
clc
or
lds
jb
insl
mov
es
xorl
pop
fwait
iret
push
add
adc
mov
or
xor
sub
mov
cld
jge
scas
imul
stc
pop
add
jbe
ret
mov
jge
or
add
and
pop
fs
push
cld
pop
sub
jbe
mov
gs
call
mov
push
ds
out
mov
inc
inc
inc
ror
loop
test
pop
push
in
aad
mov
inc
sub
mov
mov
test
xlat
xchg
fldenv
inc
sub
add
inc
inc
inc
lods
pop
lods
jne
incl
andb
pop
daa
outsb
sbb
fistps
xchg
popf
mov
push
sbb
jne
mov
je
inc
shll
push
pusha
sub
xor
out
mov
out
pop
cli
in
cmpsb
push
mov
mov
jge
xor
adc
lret
push
mov
mov
jmp
sbb
jle
add
daa
mov
xor
sub
lods
jl
and
pushf
sarl
rorb
and
jmp
adc
pop
mov
dec
mov
cltd
out
sbbb
jg
sub
rcrb
mov
mov
adc
popf
xchg
sbb
push
add
dec
mov
lods
mov
add
push
add
inc
and
fwait
sbb
push
inc
xor
pop
cli
xor
enter
and
mov
inc
lea
jb
jb
xor
add
push
push
jbe
fwait
cmp
enter
stc
xor
jle
cmc
cs
pop
sub
dec
cmp
aad
adc
movsl
sbb
pop
mov
das
mov
mov
shrl
add
cs
sbb
into
jbe
icebp
in
adc
jmp
pop
pop
imul
sub
bound
andb
cmp
sub
jne
fwait
ret
sub
jns
fwait
mov
sbb
aad
arpl
jmp
leave
mull
icebp
pop
int
add
xor
sahf
loop
repz
pop
xchg
test
aaa
out
nop
pop
fcmove
xchg
fldt
je
test
mov
jmp
daa
repnz
cmpsl
outsl
fdivr
fnstenv
jne
mov
jns
jmp
out
inc
in
in
push
jae
mov
ret
inc
fwait
add
mov
sub
sub
lahf
sub
push
xor
jb
test
pop
frstor
adc
xchg
cmpsb
sbb
mov
iret
mov
ret
xchg
jmp
mov
push
imul
ficompl
adc
fmuls
adc
aas
bound
jge
out
jne
inc
idivl
clc
gs
out
xchg
fcmovbe
mov
in
push
push
imul
leave
fcmovb
imul
dec
or
hlt
cmp
and
or
push
push
out
mov
add
cld
shll
or
cmp
push
aad
and
into
ss
out
lock
rorb
scas
sbb
sbb
scas
mov
jl
lahf
mov
pop
mov
mov
ljmp
jmp
sahf
cmpb
sbb
adcl
out
mov
hlt
in
hlt
push
cwtl
push
bound
mov
mov
add
cmp
nop
sub
lahf
push
dec
mov
lds
outsl
ficomps
hlt
pop
cmp
lahf
push
dec
stos
fiadds
ret
and
std
cld
sbb
dec
sahf
lock
loope
mov
pop
or
movsl
jbe
inc
xchg
dec
fistps
jo
pop
arpl
ret
rcrl
mov
xor
out
test
xor
mov
mov
pop
pop
lret
lea
xchg
dec
popa
sahf
fsubrs
xchg
repz
jmp
mov
sub
test
push
scas
pushf
cmc
ret
and
add
sbb
push
in
shll
into
fisubrs
int3
neg
and
mov
icebp
test
and
sti
push
movsb
jl
and
int
lock
fwait
in
adcl
mov
movsb
sub
pop
test
xor
mov
sub
and
sbb
inc
divl
mov
jne
or
lret
push
pop
fnstsw
sbb
xchg
into
fsub
stos
jg
loop
pop
sbb
loope
ss
pop
je
addr16
jbe
cmc
daa
xchg
adc
rcr
lods
mov
sbb
jnp
sbb
cmp
repnz
fdivp
sbb
fcmovb
jnp
mov
popf
xor
pop
dec
jns
mov
xchg
and
addb
out
dec
mov
repz
fiaddl
mov
arpl
push
jns
outsb
lea
sub
xchg
cld
mov
xor
adc
push
adc
sbbl
push
iret
jno
inc
mov
ljmp
out
sbb
push
xor
push
jno
clc
loopne
push
stos
jb
int3
push
cmp
aam
lock
push
roll
lahf
cmp
sbb
imul
int3
into
pop
orb
movsb
lea
push
cltd
dec
xor
add
lods
pop
and
outsl
decl
scas
mov
loopne
stc
or
hlt
sub
out
jg
ja
cmc
shrl
fildll
test
adc
mov
pop
sarl
inc
cld
cmp
pop
pop
bound
adc
icebp
outsl
pop
es
dec
jbe
jbe
add
xchg
stc
call
mov
mov
cli
mov
mov
cmp
inc
jno
sti
sub
and
and
outsl
icebp
lods
add
mov
mov
aas
lods
call
mov
mov
lea
jae
mov
test
push
lret
mov
popa
cmp
popf
mov
sbb
push
in
xchg
push
in
or
test
js
jg
ja
jo
sbb
sbb
int
pop
push
sub
pop
into
xchg
dec
cltd
mov
lret
mov
aaa
mov
into
cmp
bound
cmc
add
xchg
xchg
pushf
push
cmp
sbb
mov
shll
inc
jl
push
test
in
pop
push
mov
dec
jmp
test
sbb
jns
xchg
xchg
adc
adc
xor
and
adc
add
jmp
movsl
ljmp
pop
sti
loope
loope
sbb
xchg
pop
push
add
lret
dec
add
xchg
stc
mov
sub
push
jge
push
jno
out
leave
shlb
jae
cmove
fneni(8087
ret
mov
aad
lret
dec
sbb
roll
xchg
pop
stos
sub
mov
out
dec
sbb
aas
rolb
ret
imul
fiadds
mov
jnp
mov
dec
xchg
fstps
push
dec
add
lcall
movsb
rcr
mov
dec
sub
cmpsl
push
pop
adc
out
mov
xchg
idivl
push
sub
mov
stos
and
cmpsl
pop
sti
in
js
sub
inc
push
mov
xorb
sbb
lret
cmp
nop
lods
xlat
out
idivl
jle
xor
inc
adc
cs
lock
sub
xor
sub
call
adcl
jns
loop
repz
sti
push
sub
mov
clc
adc
leave
dec
jmp
mov
enter
fistl
rol
sub
add
cmp
mov
iret
xchg
movsl
sbb
and
adcb
xchg
add
and
ljmp
cmpsl
int3
jecxz
mov
adc
mov
aam
add
cmp
cmpsl
mov
les
inc
mov
mov
jp
mov
lcall
push
mov
outsb
sbb
xchg
mov
jmp
xchg
ret
out
jbe
inc
jle
rorb
inc
sbb
dec
mov
lods
movsb
sbb
popf
dec
loopne
mov
sub
xlat
movsb
pop
xchg
icebp
mov
sub
loopne
cli
int3
cmp
rol
pusha
repz
mov
jl
sub
sub
dec
lds
and
pop
xor
aaa
jmpw
mov
mul
mov
cmp
sbb
cmp
or
std
dec
cmc
or
ss
pop
or
push
movsl
ret
movsb
mov
push
add
and
fwait
dec
out
js
pusha
in
fs
xor
jb
ds
cmc
pop
cmpb
popf
push
aas
push
xlat
mov
xchg
ss
pop
sbb
dec
mov
push
gs
dec
addb
pop
leave
sub
pop
sbb
cwtl
test
repnz
rorb
test
mov
xor
or
jl
dec
mov
push
xchg
aad
sarl
lea
sahf
rclb
push
hlt
fisubs
and
dec
pop
pop
pusha
jp
mov
and
jg
sbb
ljmp
xor
cmp
add
cmc
ret
adc
fcmovu
mov
cmpsl
dec
dec
out
mov
addb
mov
outsb
lret
fidivrs
add
jmp
cmpsl
jne
mov
and
jo
and
mov
hlt
push
jns
pop
ret
push
cmp
add
fiadds
and
aaa
and
enter
pop
jg,pt
loop
sahf
mov
into
ljmp
int
sti
in
ss
popa
and
xchg
push
lcall
fistpl
cmpsb
cmc
pop
xchg
shrb
inc
xlat
push
nop
mov
sbb
xor
push
in
mov
lock
stos
xor
adc
lcall
inc
es
and
imul
inc
dec
hlt
std
test
dec
xchg
xchg
pop
adc
mov
andps
mov
or
xchg
inc
push
xchg
add
sti
cmp
fstl
jg
mov
sub
pop
call
dec
rorl
pop
adc
sarb
test
xchg
xchg
insl
or
dec
dec
adc
sub
push
jne
arpl
pop
daa
jne
and
mov
and
imul
pushf
jl
add
mov
insl
sti
in
clc
xchg
les
or
sub
pop
push
inc
xor
push
hlt
sbb
popf
xorb
jne
xchg
push
popa
mov
or
sub
push
icebp
xchg
cli
xorl
lock
push
cli
add
mov
mov
xchg
imul
neg
dec
jl
pop
push
lods
fwait
por
add
xchg
jnp
mov
sbb
cld
ret
sub
pop
add
xchg
int3
pop
sar
mov
xor
dec
pop
enter
mov
pop
xor
pop
mov
jg
loope
insb
insb
test
aad
sbb
das
cld
add
sbb
in
mov
mov
fdivrp
cs
lock
sbb
cmpsb
push
mov
fbstp
dec
ja
cmpsl
and
sbb
push
sbb
and
decb
sub
sub
or
or
aad
stc
leave
loopne
sub
xchg
jge
popa
into
or
xchg
imulb
mov
das
pop
mov
cmpsl
jno
lock
mov
xor
lods
out
cs
ret
idivl
jns
sbb
xchg
xchg
lods
popl
out
clc
xchg
pop
mov
pop
std
mov
dec
testb
mov
jno
jp
es
insl
cmp
popf
xor
cwtl
pushf
push
pop
and
mov
mov
jge,pn
jns
test
xchg
aam
xchg
pop
ret
mov
repnz
adc
xor
jne
ljmp
fidivs
vmovsldup
xchg
popa
dec
insl
shlb
rcrl
mov
scas
aas
mov
cs
popf
js
cmpsb
mov
lock
faddl
outsb
xchg
mov
xchg
inc
ret
rorb
push
sbb
sbb
lods
or
shrl
scas
ds
xor
sti
daa
inc
pusha
jp
jb
add
les
pop
pop
push
lods
les
nop
jmp
scas
and
sub
out
loop
dec
cmpb
mov
inc
jno
push
xchg
lcall
mov
sub
jmp
call
xor
fimuls
jnp
add
add
dec
jo
mov
notb
data16
in
pop
les
outsl
leave
adc
fcomi
sbb
addl
sbb
in
add
add
jmp
mov
pop
push
push
scas
stos
mov
insl
cli
xchg
mov
sub
xor
lods
test
int
and
add
sub
stc
ljmp
lret
push
nop
adc
pop
aad
rcl
mov
cmpb
mov
cmp
mov
ja
pop
sbb
dec
bound
jb
mov
decl
and
cli
xchg
mov
imull
repz
mov
fsubrp
testb
ss
push
jge
ss
imul
stc
loope
repz
into
cltd
cmp
jnp
sbb
cmpsb
and
dec
sar
pushf
lods
dec
jp
push
fwait
cmc
pop
add
sbb
xchg
dec
lcall
out
in
pop
sbb
sti
fstps
jmp
fisubrl
je
xor
and
mov
scas
add
inc
js
sub
adc
inc
xchg
mov
push
test
cmp
jp
arpl
cmpsb
and
sbb
std
repz
iret
loopne
lret
dec
and
loope
cmp
ja
shrl
jo
std
es
lods
aam
pop
mov
leave
scas
pop
pop
sbb
jecxz
cmpsb
adc
cld
push
jge
out
ret
clc
std
cmpsl
add
ss
mov
leave
stos
mov
jo
jnp
imul
in
mov
cmpsb
inc
imul
or
mov
and
enter
clc
cmp
call
fwait
pop
and
mov
inc
movsb
out
jmp
mov
jbe
dec
rclb
adc
popf
inc
jle
adc
or
mov
imul
popa
pop
inc
cmpsl
jl
out
pushf
xor
push
jns
cmp
mov
mov
sahf
cld
daa
int
jp
or
repnz
add
loope
pop
out
push
push
es
dec
fnstenv
test
inc
xchg
movsl
lahf
jne
sbb
in
pusha
sbb
mov
repnz
and
aaa
scas
stos
pop
push
fsubs
lret
fdivs
add
add
fdivrp
enter
jns
fsts
rsm
xor
dec
mov
sets
dec
jle
xchg
lods
fdivs
pop
mov
or
or
pop
in
jle
sti
add
rolb
sbb
cld
ss
push
sub
mov
push
xor
push
push
xlat
sbb
shl
dec
jl
mov
push
adc
sub
in
xor
sbb
pop
inc
or
lret
jb
stos
push
xchg
sub
adc
pop
out
lea
into
jmp
int
cmpsb
pop
fimuls
dec
ds
hlt
ja
arpl
gs
push
ret
xchg
outsb
xor
ret
test
jbe
pop
inc
out
test
aad
lfs
sub
int
lock
fcoml
cmc
mov
push
jg
out
mov
inc
adc
and
mov
and
xchg
fsubrl
add
or
fisubs
adc
jp
and
jb
jbe
fucomp
mov
scas
mov
in
bound
in
sbb
std
idivb
lods
ret
aas
subl
in
shlb
sub
adc
push
imul
lret
sbb
decb
xlat
test
add
dec
aas
cmpsb
add
dec
cmp
dec
jns
loopne
jb
mov
fwait
nop
stos
aad
outsl
iret
jnp
cmp
fbstp
or
es
pop
mov
in
mov
and
out
cmp
int
add
push
mov
and
cmp
inc
mov
or
pop
mov
xchg
xor
movsl
xchg
dec
add
or
sti
push
rcr
adc
inc
sub
pop
mov
mov
or
mov
push
aam
jl
inc
mov
pushf
sub
orb
daa
sti
je
xor
mov
scas
mov
in
and
mov
adc
js
iret
bound
lock
mov
arpl
lods
std
xchg
bound
xchg
sub
bound
fisttpll
jb
fs
outsb
inc
pop
inc
push
or
gs
stos
test
in
movsl
cmp
aas
jb
or
ret
iret
push
fildl
rorb
jbe
jmp
inc
adc
test
fs
fstps
xchg
jae
stos
xchg
pusha
mov
dec
jo
cmc
inc
push
dec
pop
sbb
fisubs
stos
cmpsb
push
dec
fnsave
lock
adc
pusha
out
in
sbb
test
add
lods
adc
addr16
scas
add
ret
test
mov
inc
sub
cld
nop
mov
bound
pushf
jb
in
mov
push
leave
ficoml
inc
pushf
mov
dec
mov
and
cmp
pop
lahf
mov
cmc
aad
xlat
adc
jl
or
lods
hlt
mov
push
and
mov
and
gs
xchg
leave
ljmp
jnp
loopne
xchg
mov
mov
insb
mov
dec
sub
xor
sbb
cmp
je
cmp
inc
daa
xchg
in
int
and
out
adc
jae
lahf
sub
fxch
adcl
adc
hlt
fidivs
test
rcrl
mov
test
loop
pop
push
add
enter
popa
out
int3
pop
enter
daa
arpl
nop
test
insl
cmpsb
mov
cmp
ss
cmp
xchg
pop
xchg
insb
mov
push
in
or
shlb
jg
in
adc
adc
cmpsl
scas
call
dec
sbb
imul
jge
imul
ds
push
jp
or
mov
fisubrs
mov
ljmp
leave
and
sbb
std
xchg
int3
and
rcll
pop
push
dec
mov
jp,pt
and
inc
ret
or
cmp
and
aam
int3
sbb
clc
aam
sub
int
call
cmp
aad
inc
jp
jl
push
popa
jne
lahf
bound
mov
mov
sbb
cmpsl
push
adc
jno
add
jae
mov
xchg
fwait
sti
iret
mov
mov
mov
icebp
cmpsb
jl
inc
and
orl
sbb
add
cwtl
add
mov
cwtl
in
xlat
gs
sub
pop
pop
repz
jl
xchg
clc
push
adc
mov
adc
jo
mov
pop
jle
and
pushf
dec
add
xlat
mov
xchg
sbb
aam
mov
test
fcmove
mov
neg
test
aaa
cltd
add
outsl
pusha
sti
imul
call
xor
sub
sub
sbb
mov
jae
jbe
push
repz
jae
cmc
scas
xchg
mov
jmp
mov
fucomi
jl
xchg
cwtl
lock
scas
or
fsubrl
cli
outsb
daa
fcomp
mov
scas
mov
fst
xorl
mov
call
iret
adc
arpl
mov
sbb
cmc
je
push
popl
je
dec
jb
lock
hlt
sbb
push
loope
int
orl
add
daa
loope
push
cmp
pop
inc
sub
add
call
inc
mov
xor
cmp
test
into
mov
and
dec
pusha
adc
rcll
push
or
in
in
sar
and
sbb
dec
testb
in
out
xor
push
outsl
lock
in
outsl
jnp
lahf
lret
les
sub
cmp
ret
add
cmc
test
es
xchg
sar
jno
pop
cmpsb
sub
movsl
or
pusha
fwait
or
and
int3
pop
sub
xor
data16
icebp
sbb
lcall
xor
push
adc
push
push
xor
cmpsl
adcb
std
sub
xor
mov
or
sub
cld
add
fistl
cld
inc
cmc
cltd
or
mov
outsl
jae
mov
pop
push
pop
mov
mov
and
sbb
lea
in
inc
js
inc
fidivrs
mov
stos
push
push
jmp
add
filds
push
sar
sub
out
cmc
enter
lods
push
adcl
lds
sti
jl
mov
add
ss
cld
mov
mov
xchg
mov
mov
xor
movsb
jbe
push
mov
test
in
lret
movsb
sbb
neg
and
out
loop,pt
pop
pop
mov
inc
out
decl
push
jmp
test
sti
xchg
mov
in
outsl
pop
mov
lods
xchg
scas
pusha
call
jmp
imul
ret
andb
cmp
imul
pop
or
add
xorb
hlt
std
mov
insl
xor
loop
pop
into
dec
imul
inc
fs
pop
daa
mov
stos
cld
pop
dec
in
jno
jle
repnz
pusha
decl
cmp
adc
jp
loop
ss
jl
and
and
cs
shl
inc
sbb
ret
stos
push
fldt
dec
stos
xchg
cmp
out
mov
xchg
mov
adc
loope
sub
jg
out
push
inc
add
xchg
gs
adc
mov
push
cli
inc
push
callw
popa
jne
push
sub
mov
jecxz
or
call
jns
std
push
shlb
cmp
test
or
xor
jb
rcrb
mov
cmp
sbb
jno
pop
mov
mov
dec
out
pop
xchg
cmp
dec
mov
add
movsl
js
push
ljmp
fldenv
lcall
lods
sub
in
mov
jns
cmp
sarl
mov
adc
dec
lds
loopne
pop
inc
mov
in
xchg
lcall
popa
dec
iret
fisubrl
adc
jne
cmpsb
fcompl
imul
fwait
pop
dec
xchg
jge
dec
andb
pop
rcrb
inc
jo
dec
pop
gs
insb
sysexit
loope
fists
arpl
xchg
in
sti
mov
inc
add
lret
pop
mov
push
sbb
mulb
mov
test
cmp
bound
xchg
inc
mov
dec
mov
das
mov
in
aam
pop
adc
pop
imul
mov
cs
in
in
xor
pop
mov
lret
ficompl
into
jo
shll
mov
and
gs
and
mov
mov
gs
cwtl
mov
insb
pop
sbb
or
rol
stc
loop
jb
push
mov
dec
xor
or
dec
push
mov
pop
daa
stos
gs
test
subl
iret
out
cmp
jge
push
lret
out
movl
pop
popa
adc
inc
xchg
fwait
sbb
mov
lods
or
gs
sub
jno
jne
inc
xor
aas
xchg
rorb
movsb
cmp
and
xchg
cs
adc
cltd
pusha
into
mov
sti
testl
jl
adc
push
test
dec
popa
add
dec
insb
leave
loop
add
push
pop
add
sub
ret
ret
shrb
lret
xchg
and
jae
jnp
mov
test
data16
jecxz
int3
add
mov
clc
loope
lock
and
dec
cmpsl
jae
pop
pop
jmp
jno
hlt
jl
fs
lea
xchg
jb
xchg
fcomps
ljmp
and
xchg
out
and
or
or
fisttpl
mov
mov
fsubrs
jne
fdivl
test
mov
xlat
mov
cli
imul
nop
mov
fildll
movsb
xchg
std
outsl
outsb
andl
mov
arpl
push
stos
sub
mov
sbb
int3
call
xchg
cltd
inc
mov
fld
or
fsubp
push
popl
es
mov
shl
mov
cmp
mov
cmpsl
arpl
jno
gs
jmp
sbb
sbb
cli
push
pop
or
cmp
out
into
cld
adc
mov
xor
inc
fsts
or
clc
add
xor
xchg
add
and
inc
lea
std
js
jle
xchg
lret
adc
out
xchg
dec
lea
mov
insl
jb
sarl
fcomip
std
clc
add
push
aaa
adc
mov
rcr
in
aaa
lcall
sbb
xor
andb
repnz
stos
xchg
push
negl
jp
ds
in
pop
insb
push
pop
rcr
sub
outsl
mov
movb
mov
out
pop
in
and
enter
or
jnp
mov
lds
ds
inc
inc
fldcw
sub
sahf
jmp
ljmp
in
test
inc
addl
decl
setbe
ja
mov
dec
mov
inc
mov
push
jno
adc
xchg
jbe
repnz
ss
dec
xchg
cltd
and
or
adc
hlt
cmpsb
adc
mov
mov
push
sbb
sti
into
cmp
sub
lret
cmpb
mov
xchg
stc
or
or
mov
fisttps
gs
movsl
mov
movsb
mov
lods
fwait
xor
imul
out
pop
cmp
push
shlb
fldt
ja
sbb
lcall
rcr
add
xor
pop
adc
cmp
jecxz
nop
scas
les
inc
xor
pusha
sub
adc
lcall
js
push
bound
mov
pop
aam
push
into
add
mov
iret
add
aas
inc
les
cmpsb
push
adc
sti
mov
arpl
outsb
inc
sbb
sbb
pop
push
mov
dec
and
nop
push
push
mov
xchg
push
cli
xchg
mov
ja
push
dec
dec
scas
scas
orl
dec
mov
sub
shrl
in
fldz
in
mov
sbb
mov
and
aaa
xor
jb
adc
jl
inc
dec
pop
and
cld
imul
popw
inc
pushf
dec
xor
add
mov
fsubl
adc
mov
mov
sub
xchg
int
mov
xchg
sar
sbb
out
dec
mov
sub
jle
jg
push
xchg
sub
dec
xchg
fmulp
xchg
sbb
sub
mov
jle
push
aad
aam
das
scas
sub
aas
sbb
movsl
pop
pop
dec
xchg
mov
cwtl
jecxz
out
adc
cld
lods
aad
orl
repnz
adc
push
adc
pop
ds
dec
dec
decb
sub
imul
push
outsl
push
dec
push
movsl
sbb
js
cmp
repnz
pop
push
jno
iret
out
xor
bound
xchg
mov
sarb
xchg
mov
jae
aad
cmp
shll
ret
test
sbb
jno
pop
sbb
aaa
inc
dec
mov
mov
fs
add
jmp
incl
cmpsl
sub
fldt
aas
xchg
mov
outsl
mov
adc
mov
pushl
sti
xlat
push
scas
js
aam
sbb
shr
xchg
stc
sub
mov
test
push
xchg
ss
mov
rol
mov
mov
jae
add
sbb
or
adc
pop
call
xchg
mov
add
mov
mov
in
popa
inc
dec
or
test
sbb
inc
sbb
vpslld
sbb
popf
xor
xchg
or
xchg
movsl
leave
cmp
outsl
mov
lret
jo
sbb
fdivs
and
cmc
cld
aaa
push
daa
aas
dec
leave
sbb
xchg
sub
jbe
mov
mov
cmp
cmp
out
pop
repz
jp
into
into
inc
es
jle
mov
lcall
pop
add
xchg
cltd
jg
in
lea
xor
adc
clc
je
das
shlb
leave
mov
repnz
notb
mov
push
movsl
cmp
sub
popa
pop
fs
movsb
xchg
pushl
xor
or
popfw
inc
mov
push
or
cwtl
mov
cmc
in
push
les
repz
jge
cs
add
nop
push
rcrl
loopne
das
imul
aam
faddl
xor
push
les
in
lods
lea
test
pusha
xchg
cmpsl
clc
loop
test
sub
sbbl
push
sbbl
andl
inc
cwtl
fwait
int3
insl
and
lret
jo
call
xorb
outsb
sub
dec
inc
mov
test
xor
pushf
xor
out
sbb
mov
add
mov
repnz
in
xor
in
lea
sub
or
aad
lods
cli
pop
iret
fsubp
mov
aaa
push
sub
ljmp
jbe
faddl
or
cmp
imul
sbb
imul
xchg
sub
cwtl
cld
imul
test
js
orl
xor
cli
jle
aam
xor
fmuls
sti
add
mov
sbb
push
ret
adc
sarb
mov
pop
sbb
repnz
jecxz
lret
mov
scas
jmp
bound
test
and
jmp
cmp
jne
or
mov
jl
sub
shll
mov
lahf
repnz
cmp
jl
push
aas
das
xor
repnz
sbb
dec
das
loope
rcrl
mov
aad
mov
inc
add
lret
xchg
mov
xor
cli
xorb
sbb
or
shl
adc
adc
test
shll
js
shlb
ss
ds
mov
push
jb
popf
ja,pt
push
cmp
fimull
std
push
mov
pop
sbb
jb
jo
ds
inc
inc
aad
leave
push
inc
enter
dec
in
fsts
jge
dec
aam
scas
sbb
inc
add
aad
mov
mov
lods
divl
pop
cld
aad
pop
cmp
xchg
rcrb
xor
gs
pop
bound
shl
jnp
imul
fs
mov
add
mov
stos
cld
or
or
js
popa
into
fisubrs
out
dec
lods
in
dec
out
adc
in
xor
incb
and
and
mov
pop
rcr
jns
jnp
fchs
out
cmpsb
decl
jnp
dec
fwait
inc
mov
movsl
roll
outsb
and
pushf
fbstp
lods
stos
ss
ret
xchg
mov
inc
xor
push
mov
dec
xchg
divl
imul
mov
filds
mulb
cs
pop
mov
movsb
sub
push
sarb
xchg
jmp
mov
cmpsb
aad
sbb
jle
stc
jb
pop
xlat
jnp
mov
fstpl
adc
pop
int
loope
mov
push
orl
ret
mov
xor
jmp
adc
sarl
xchg
pop
dec
iret
aaa
js
mov
dec
loop
cmp
fcoms
pop
sbb
std
fdiv
movl
cmp
jb
aam
fldcw
jns
out
outsb
sub
addr16
ret
push
mov
inc
mov
popf
mov
sbb
out
lret
adc
inc
dec
push
add
icebp
inc
pushf
ret
call
fmuls
pop
and
dec
sub
fidivs
fists
cwtl
inc
outsl
pop
test
mov
adc
jg
jp
test
pop
lea
mov
push
push
jae
xor
jmp
sub
rorb
mov
jl
std
xchg
stos
sti
sti
roll
scas
mov
stos
cwtl
pop
sub
and
loopne
xchg
mov
lods
xor
mov
add
rcl
mov
dec
jae
jmp
add
xchg
mov
enter
mov
add
int
mov
dec
sub
out
scas
call
inc
pop
and
inc
insl
xor
test
arpl
xlat
inc
ror
movsl
sbb
push
decb
fdivrs
fidivrl
test
lcall
into
sbb
lods
adc
nop
jbe
cmpsb
lods
stos
xchg
push
lret
or
or
stos
fcmovnbe
inc
dec
mov
inc
ret
and
mov
push
test
insl
jle
gs
outsl
inc
cmp
mov
pop
cmpsb
inc
enter
mov
inc
test
imul
add
sbb
mov
clc
jae
mov
scas
push
arpl
lods
dec
test
xchg
into
and
adc
leave
push
xor
adc
add
mull
sub
fisubrl
cmp
jns
dec
shlb
loop
xchg
sub
mov
sub
stos
push
scas
xor
mov
pop
cmp
mov
imul
fcmove
ror
push
enter
mov
and
out
sbb
sub
int3
fistpll
adc
daa
cli
xor
mov
outsl
inc
ds
sbbb
jg
adc
sub
aam
ret
cmp
jbe
sti
out
dec
leave
mov
imul
push
testb
xchg
and
imul
mov
scas
cmp
xchg
push
jecxz
push
xor
adc
int3
push
dec
and
push
push
roll
imul
mov
mov
lods
sub
ds
lret
xor
sti
stos
pushf
nop
dec
or
add
push
sub
and
mov
push
insb
ja
hlt
push
cltd
inc
les
das
outsb
aas
mov
push
and
stos
inc
sahf
push
add
pop
mov
sub
or
dec
mov
lret
cs
movsl
popa
jne
sbb
das
inc
insb
pop
pusha
jmp
mov
leave
shl
andb
cmp
cmp
jo
pop
aaa
sbb
xchg
frstor
divl
dec
rcrb
or
mov
stc
pop
push
lret
push
mov
das
cltd
cmc
jb
test
int
sub
hlt
add
mov
mov
lods
repnz
flds
jl
fnstcw
mov
stc
mov
ljmp
push
mov
out
push
inc
mov
xor
aas
shrl
jbe
cmp
push
inc
leave
loope
mov
out
xchg
adc
xchg
cmp
mov
jmp
data16
jl
cmpsb
movsb
xor
or
adc
movsb
mov
repnz
into
pop
push
ret
cmc
pop
movsl
and
xchg
orb
add
gs
out
and
aam
js
xor
js
popa
scas
js
fmuls
cs
popf
xchg
aas
lcall
aas
aaa
cmp
cmpsl
sbb
mov
out
nop
insl
out
lods
icebp
push
lret
jae
out
mov
add
xchg
popa
xchg
adc
dec
inc
adc
in
test
leave
dec
xor
mov
xchg
sti
push
sub
jns
push
xchg
inc
and
dec
pop
shll
popf
or
lcall
je
dec
addr16
pop
jmp
cld
jl
ja
test
inc
popa
push
cwtl
shll
and
imulb
xchg
mov
insb
in
cmp
scas
addr16
push
stc
repnz
add
mov
and
scas
and
pop
test
ds
mov
push
sbb
ds
inc
shll
je
fisttps
lock
pop
cli
and
push
pop
das
fnstsw
ffree
xchg
inc
out
arpl
lods
sbb
pop
mov
js
xchg
pop
xor
mov
insl
arpl
es
out
mov
or
iret
mov
mov
loope
push
lea
arpl
jae
rcrl
add
cli
xor
jecxz
push
shlb
pop
and
push
push
rcr
icebp
sub
mov
stc
neg
and
dec
jbe
rclb
or
in
mov
lret
test
cld
call
mov
leave
push
lods
fdivrs
aam
into
aaa
fldpi
pop
popa
jb
imul
add
lods
outsb
mov
or
mov
ds
out
adc
xchg
mov
addl
int
cmp
movsl
pushf
test
push
imul
add
sbb
inc
stos
mov
or
fisubl
cmp
shrl
lahf
mov
pi2fw
iret
mov
pop
sbb
mov
lds
mov
movsl
or
out
loopne
jl
cmovg
cmpsb
mov
insl
mov
or
stc
shll
lds
or
xchg
mov
out
jnp
jnp
jbe
xor
aad
inc
rol
inc
jmp
ret
mov
mov
or
sbb
scas
loopne
adc
jno
sub
test
sbb
sub
fstpl
push
sbb
cs
jo
mov
jl
pusha
movsb
mov
cmp
or
frstor
jge
lcall
jg
xchg
into
push
fimuls
cmp
rcl
cltd
mov
mov
mov
sub
dec
jb
cmp
out
arpl
lcall
cmp
and
adc
fisubrs
movsb
push
or
inc
mov
inc
insb
dec
or
leave
xchg
pop
xlat
into
xchg
mov
mov
cli
sti
mov
hlt
cwtl
aaa
sub
iret
lcall
or
xchg
jnp
mov
adc
cmpsb
fwait
cmp
sarl
xchg
out
fldcw
stos
push
and
add
ss
cmp
aaa
push
push
xor
mov
xchg
sahf
mov
stos
sbb
std
pop
mov
leave
pop
lds
rol
loope
adc
or
jbe
xchg
imul
inc
or
les
mov
mov
loope
loope
xchg
xor
inc
mov
jne
jno
ficompl
int
mov
xchg
icebp
and
fstpt
jle
lea
fisubs
push
xchg
std
xchg
mov
fisttps
jnp
das
loop
jns
xchg
mov
gs
jp
lods
jae
add
jbe
mov
adc
adc
inc
and
test
int
xor
xchg
rol
mov
aad
push
or
dec
and
clc
xchg
inc
mov
hlt
cmp
addr16
push
mov
pusha
cmp
xchg
xor
addb
decl
push
push
sbb
mov
mov
or
jecxz
cmp
pop
stos
adc
jecxz
add
mov
jns
fdivrp
and
lahf
xchg
imul
inc
xchg
sub
xchg
pop
xchg
dec
and
addl
pop
inc
dec
mov
pop
jmp
xchg
subl
aad
xor
stc
pop
xor
ficoms
out
sub
ljmp
cmpsl
gs
or
and
sbb
push
enter
out
sbb
popl
imul
cmp
insl
mov
sbb
jge
loop
sbb
aaa
mov
cwtl
sub
ja
or
inc
xchg
int
loopne
ja
add
fimull
inc
mov
pop
mov
int
mov
daa
inc
push
cwtl
mulb
cwtl
fs
cmpsl
and
negl
xchg
sbb
sub
push
in
add
popf
sarb
cmp
xor
xchg
or
lret
stos
fisubs
cltd
ret
dec
pop
sbbl
xchg
out
fisubs
daa
pop
stos
xchg
popa
or
rorb
adc
mov
adc
pop
ds
sti
or
or
mov
pop
stos
pop
into
mov
mov
or
popa
lcall
push
fwait
pop
push
movsl
push
adc
push
cmp
xor
or
xchg
mov
sub
inc
jecxz
data16
inc
scas
cli
jne
and
into
loopne
mov
pop
add
mov
add
add
test
jo
divb
mov
mov
add
dec
bswap
cmp
insl
mov
lea
icebp
adc
lret
das
lds
xchg
in
or
mov
adc
addr16
pop
gs
pop
inc
lea
push
sbb
adc
test
add
je
mov
scas
jbe
and
shl
adc
in
rcrl
sarl
adc
dec
aas
jo
inc
repnz
divl
sub
outsb
adc
pop
fs
lds
ljmp
pop
sbb
inc
das
mov
sbb
xchg
lods
push
push
jno
mov
fadd
movsb
fldt
push
and
inc
dec
pop
gs
fisubl
rcrl
ljmp
jmp
mov
in
or
cmp
or
scas
pop
or
jnp
cli
inc
sarl
outsl
loopne
rolb
push
sub
jle
cmp
cmp
xor
dec
mov
dec
fldcw
orb
push
aaa
ffree
popa
push
jmp
jecxz
lods
jmp
popf
or
sub
jge
int3
pushf
and
jmp
sub
out
xchg
into
test
or
xor
push
xchg
jge
flds
xor
enter
xchg
or
clc
shld
jo
sbb
incl
push
lods
pop
sub
xor
lahf
mov
loop
sti
xchg
scas
or
adc
cmc
mov
dec
cmpsl
in
mov
loop
cmp
addr16
cltd
fbld
mov
movsl
ja
sar
ret
out
cmp
jne
jae
out
call
sbb
jl
pop
vpmacsww
mov
int
cmpsl
push
cmc
inc
inc
in
outsl
xchg
dec
xchg
jmp
add
cltd
sub
cmpsb
add
sbb
push
xor
cli
mov
or
inc
jnp
mov
sahf
addr16
aam
stos
pop
pop
and
mov
ds
std
stos
cmp
mov
mov
cmp
push
sbb
gs
pop
mov
test
stos
dec
les
and
jecxz
bound
xchg
sarl
je
rcll
dec
cmpsl
pop
adc
adc
jl
jp
pop
mov
sub
sarl
mov
push
lock
imul
mov
inc
cmc
lea
scas
xchg
nop
sub
push
pop
je
pop
out
mov
cmp
add
mov
lahf
in
lea
mov
bound
iret
aad
gs
into
xor
push
sub
shll
inc
movsb
add
sbb
lahf
add
adc
sbb
test
cmpsl
sar
outsl
dec
pop
out
in
mov
mov
out
popf
out
add
lret
je
push
pop
jbe
dec
leave
rcl
jg
ss
andb
push
mov
inc
out
xor
and
mov
into
ljmp
or
ljmp
jecxz
xchg
int3
icebp
ret
adc
outsb
mov
imul
fucomi
mov
mov
mov
sbb
push
xchg
inc
adc
sbb
xor
xlat
inc
push
sub
cmp
scas
mov
sub
leave
sbb
shll
aam
jge
in
fisubrl
sub
insl
xchg
loopne
test
and
xor
in
jbe
adc
mov
inc
imul
dec
push
or
xchg
je
rcrl
adc
xchg
jecxz
int3
sub
mov
pop
stos
ret
or
aaa
movhps
inc
cld
dec
and
stos
loop
std
ret
aam
repnz
mov
shl
leave
sbb
lcall
mov
lods
mov
std
or
jecxz
xor
outsl
and
cmpsb
lock
jl
push
push
mov
adc
mov
stos
ljmp
ret
hlt
xor
jp
pop
mov
nop
mov
sub
inc
lods
mov
jae
test
clc
add
or
ds
mov
adc
dec
out
push
xor
mov
mov
inc
movb
lahf
int
xor
lcall
inc
outsl
vrsqrtss
cwtl
imul
adc
shll
add
test
scas
adc
dec
in
orl
xchg
cmp
pop
sbb
mov
or
test
lahf
sbb
push
dec
adc
mov
xor
add
enter
xor
or
mov
rcll
cmp
jg
stos
cmp
sub
pop
dec
pop
inc
pop
mov
cld
lock
and
lret
stc
add
push
mov
inc
pusha
mov
xor
fidivs
fdivs
out
sti
data16
jnp
xchg
das
das
das
push
sbb
and
push
jbe
test
into
bound
loop
popa
leave
clc
sahf
dec
adc
clc
fdivl
inc
and
rcl
dec
and
mov
daa
inc
cmp
mov
enter
push
xchg
lcall
mov
sub
mov
shr
xchg
adc
jnp
jmp
mov
sbb
dec
or
icebp
mull
imul
lods
notb
int
lods
push
and
rol
fisttps
cmpsl
dec
cmp
mov
orl
jg
or
cmp
outsl
jl
stos
jae
add
mov
hlt
ds
xor
ds
mov
and
popa
clc
ret
mov
sub
or
aaa
pusha
sub
cltd
xor
sub
cmp
mov
in
xor
mov
mov
sub
arpl
fwait
shrl
jp
sub
mov
and
xchg
loope
repz
inc
adc
cli
popa
add
push
in
fdivrl
mov
jecxz
in
pusha
mov
stc
push
sbb
lret
and
into
popa
nop
stc
xor
inc
push
sbb
test
ja
arpl
xor
outsl
loope
and
inc
pop
fisttpl
mov
lret
lock
and
shll
mov
insb
and
ficoml
pop
inc
test
adc
cmp
sarb
clc
inc
mov
inc
dec
addr16
out
fldt
add
inc
lods
aad
adc
xchg
addr16
sub
pop
scas
mov
lods
mov
jmp
movl
dec
and
sub
cmp
lahf
imull
lahf
pop
aad
les
inc
push
pop
mov
fs
fwait
pop
jge
mov
xchg
jp
mov
sub
insl
icebp
in
lods
sbb
xor
das
adc
jbe
ljmp
push
in
mov
lahf
jnp
adc
adc
lds
roll
adcb
mov
cmp
nop
notl
mov
xchg
int
sub
sub
pop
xchg
push
cmc
cmp
rol
adc
fsubrl
jno
xchg
pushf
lock
adc
dec
jp
dec
xchg
cmpsb
sub
lods
push
lret
in
ja
int3
rcrl
jp
or
push
lea
sbb
sar
aad
inc
push
and
sahf
jecxz
push
mov
inc
xchg
inc
mov
orl
ljmp
cld
enter
pop
cmp
or
push
in
sub
pop
pop
dec
mov
shll
push
mov
stos
or
ja
mov
out
mov
mov
mov
dec
into
inc
icebp
xor
push
dec
shlb
mov
push
lds
mov
pop
dec
ja
mull
icebp
and
mov
and
scas
or
ret
fsubs
dec
insl
mov
stc
loop
sub
rorl
mov
and
int
pusha
xchg
lahf
adc
push
push
adc
dec
push
or
and
enter
jo
daa
mov
mov
sub
out
call
in
push
xor
dec
gs
jmp
and
pusha
xchg
sar
mov
sbb
dec
fiaddl
jmp
sub
adc
ret
call
adc
gs
or
mov
pop
pushf
cmpsl
cmp
test
movb
push
and
adc
in
dec
sub
scas
mov
pop
aam
push
shlb
punpckldq
fwait
test
adc
in
push
mov
xchg
or
popa
gs
fistl
inc
in
btc
cmp
mov
or
popf
ss
das
shrb
repnz
lret
notb
sti
mov
je
addl
rcl
sbb
or
jle
frstor
add
jnp
loopne
lock
xor
shrb
xchg
push
and
xlat
jmp
addr16
fs
shll
and
sbb
xchg
scas
mov
cmp
mov
sbb
mov
xchg
repnz
andl
fimull
add
arpl
aam
scas
jecxz
jae
push
movsl
and
mov
or
out
popa
mov
jl
outsl
test
loope
cmc
test
imul
or
pop
mov
decb
adc
jle
jnp
loopne
push
inc
add
fcoms
mov
cs
pop
push
sahf
push
lock
mov
mov
mov
mov
dec
lahf
mov
ss
shll
pop
jp
push
lcall
in
fcomps
jne
mov
mov
push
cs
stos
jecxz
das
xchg
bound
sub
ljmp
add
mov
and
into
push
pop
mov
jne
fnstenv
int3
xchg
xchg
loopne
mov
or
movl
test
and
in
sub
test
cmp
mov
mov
je
adc
pop
add
dec
orw
les
and
mov
popf
mov
mov
mov
mov
and
das
setg
jnp
dec
xchg
or
dec
jmp
mov
xchg
xchg
fisttpll
arpl
jne
mov
notb
or
insb
shrd
ret
mov
movsb
loope
mov
cmp
jns
ss
gs
mov
pop
shlb
push
les
mov
jmp
adc
push
test
sbb
sub
pop
jb
dec
je
ror
clc
jnp
adc
pop
and
shll
fs
movsl
les
aad
pop
icebp
push
cmp
cmc
lods
mov
or
pop
bound
popa
call
mov
and
jno
cmp
insl
inc
fiadds
cs
fs
xor
out
push
daa
xor
in
sbb
loopne
push
cltd
dec
aad
sar
jns
mov
adc
jb
xchg
adc
push
int3
in
lods
xchg
or
mov
dec
popf
lcall
idivl
adc
inc
flds
mov
fstl
movsl
pusha
sub
add
pop
xchg
mov
push
jae
inc
enter
adc
adc
push
xor
inc
mov
adc
les
sar
stos
jp
xor
test
mov
cld
add
adc
rorb
sbb
movsl
sbb
loope
mov
mov
pop
sbb
hlt
cwtl
cmp
mov
arpl
lcall
and
adc
sub
mov
data16
sbbl
adc
add
cmc
lods
pop
jmp
decb
lds
call
rcr
test
add
sti
aas
mov
push
icebp
push
test
jg
repnz
les
pop
rcl
test
jmp
xchg
cmc
push
ljmp
imull
in
fidivl
scas
pop
sbb
shlb
inc
popa
or
pushf
sub
ds
bound
les
stos
je
jmp
push
sbb
cmpsb
imul
rolb
test
push
or
xchg
cltd
push
mov
inc
inc
mov
neg
mov
mov
mov
jmp
xchg
out
push
mov
out
dec
pop
stos
in
cmp
push
jns
sub
push
pop
stos
out
sub
xor
xorl
test
js
bound
shl
mov
cmp
pop
sub
and
fnstcw
clc
sub
test
or
pop
push
mov
rcrl
aaa
push
gs
dec
ljmp
test
dec
data16
sub
xchg
lahf
add
mov
mov
jg
jge
call
xor
push
mov
dec
mov
enter
movsl
cmc
pop
in
test
cli
xor
cmpsl
cmc
aam
rcr
mov
out
popa
movsb
or
orl
inc
dec
sub
aad
loope
in
adc
pop
mov
push
or
stc
add
in
ret
cmp
sbb
outsl
mov
or
fwait
aas
dec
pop
mov
loopne
lret
cmp
popa
or
lret
dec
cmpsl
mov
jnp
cmp
popa
push
das
fldenv
jge
scas
int3
addb
out
outsb
push
icebp
xchg
loope
mov
push
and
xlat
jle
mov
je
stos
pop
hlt
sub
fs
jmp
pop
sahf
mov
lea
xor
and
jl
push
into
gs
mov
sub
xor
cmp
jb
les
in
cld
pushf
or
dec
or
sub
in
push
jb
xchg
stos
mov
sub
out
mov
jmp
je
aad
test
stc
sbb
or
test
dec
out
inc
and
es
mov
pop
int
iret
jecxz
lret
movsl
inc
push
pop
dec
movb
pop
cwtl
cwtl
cmpsl
xchg
adc
pop
or
pop
jnp
push
call
mov
jno
movsl
mov
out
ja
mov
loope
mov
clc
pop
movsb
xor
cwtl
int3
imul
mov
es
in
and
aad
test
popf
lea
cmpl
and
loopne
cmpb
lea
lahf
sub
push
or
js
pop
imul
test
sbb
dec
jno
test
fildll
repz
dec
mov
adc
sub
daa
loopne
daa
insb
repnz
into
pop
sar
cmp
adc
dec
enter
movsl
dec
daa
mov
fdivs
cmpsl
mov
aaa
add
out
inc
xor
aad
push
push
out
ljmp
sub
and
pop
sub
in
sahf
jge
inc
sbb
xchg
inc
pop
jb
or
jmp
fisttps
push
cmp
jae
std
fstpl
dec
adc
lods
mov
sbb
dec
and
adc
jmp
fwait
add
mov
xchg
xchg
lret
int3
xchg
movsb
aad
mov
mov
inc
dec
dec
lcall
jl
mov
lods
jl
shlb
es
int3
imul
push
movl
push
repnz
inc
int
scas
xor
dec
xor
icebp
fucomip
adc
xchg
in
les
es
fiadds
pop
std
aam
jecxz
push
mov
ljmp
sbb
xchg
mov
in
pusha
sub
es
imul
cmpl
mov
insl
pop
push
sub
mov
push
repz
divl
mov
mov
lods
rcl
mulb
xor
cmp
inc
test
insl
cmp
out
pop
stc
jge
push
stos
aaa
pusha
ljmp
nop
mov
sbb
testl
cmp
cmp
jecxz
inc
inc
mov
mov
fdivrs
and
add
sti
sub
ficoml
sub
lcall
mov
pop
lret
mov
idivl
ret
jecxz
pushf
dec
dec
or
lea
sbb
aad
in
cmpsb
mov
mov
stos
mov
sub
pushl
mov
xadd
push
leave
and
xlat
mov
push
inc
popf
clc
fs
dec
inc
lods
testl
xlat
jge
ds
xor
cmc
xor
rol
scas
and
les
pushf
xchg
adc
cmp
push
jge
push
pop
or
mov
orl
inc
dec
push
mov
pop
ss
out
inc
push
cmp
adc
adc
mov
jge
ds
jbe
mov
ret
sub
outsl
bound
push
ljmp
jae
cwtl
mov
ljmp
sbb
add
cld
mov
adc
rcr
fmuls
std
xor
jbe
mov
push
add
pop
xchg
push
push
out
add
lret
dec
sbb
mov
lahf
xor
push
cwtl
cmp
mov
sarb
jl
stos
jns
sub
mov
scas
imul
loop
ds
jae
jb
shlb
add
inc
scas
sahf
xor
imul
hlt
mov
cltd
clc
testb
cmp
dec
jp
mov
push
inc
inc
loope
mov
push
sub
jne
imul
pushf
bound
lods
sbb
mov
imul
lcall
or
scas
mov
push
aaa
sti
fnstenv
push
cmp
out
mov
rcrl
and
popf
sbbl
sbb
aam
mov
push
addr16
aas
rolb
cmpsl
or
rcr
mov
repz
cmc
push
fs
mov
push
pop
dec
jae
cmpsb
fildl
add
dec
imul
in
or
movhps
inc
pop
out
push
mov
xchg
or
ret
adc
add
mov
dec
pop
lret
add
cmp
pop
cltd
xor
push
jmp
fldl
cld
into
lock
xchg
mov
mov
cli
lea
or
push
sbb
sbb
xchg
lret
stc
lcall
and
push
lds
es
je
add
cmpb
push
jns
xchg
lods
pop
or
fmull
test
bnd
sar
mov
pop
and
and
aad
or
popa
mov
or
pop
cmpsl
xchg
push
xlat
out
out
jns
mov
and
enter
push
incb
stos
push
xorl
into
and
jecxz
fdivrs
mov
cld
adcb
or
lret
movsb
jo
hlt
xor
movsb
or
insl
inc
sbb
cmp
mov
fistps
and
pop
or
int3
mov
loop
and
pushf
js
popa
sbb
stos
lock
pop
dec
aam
fwait
dec
jecxz
js
xor
shll
pop
out
pop
inc
std
test
sbb
jp
sub
movsb
or
insl
jno,pn
int3
das
or
inc
mov
shlb
sarb
pop
jg
cmp
and
call
andb
xchg
jmp
push
mov
roll
add
in
sub
cmp
mov
inc
pop
mov
pop
fldt
test
popa
jl
sub
sahf
sub
daa
dec
les
mov
fstpl
std
lcall
sub
or
daa
cmc
mov
xor
push
pop
leave
cwtl
jecxz
daa
mov
lret
push
sub
jnp
test
mov
mov
lea
fisttps
adc
mov
sub
mov
mov
add
pop
adc
test
ljmp
xchg
ss
adc
fstl
push
cmpsb
jecxz
jo
ja
and
out
neg
outsl
test
push
test
mov
lods
push
mov
push
outsb
iret
mov
lcall
fstps
fiaddl
inc
into
mov
std
icebp
out
test
inc
mov
call
mov
les
or
loopne
jnp
out
push
shll
sbb
jb
or
pop
cltd
lock
xchg
jl
jb
jae
sub
imul
push
mul
rclb
mov
imul
outsl
xorb
xlat
inc
and
jo
push
mov
ret
fistpll
iret
cli
daa
xor
stc
rcl
lods
jg
adc
and
icebp
enter
mov
js
sub
mov
test
mov
mov
stc
call
movsb
mov
lea
pop
bound
mov
xor
mov
or
pop
xchg
and
inc
xchg
mov
insb
aaa
mov
pop
cmp
out
jo
cs
add
stc
xchg
and
in
push
popa
jns
testl
inc
test
adc
pop
ficompl
or
cmp
add
pop
xchg
mov
dec
cli
in
mov
jp
mov
outsb
rcrb
stos
or
jge
xor
enter
xchg
or
pop
sbb
std
mov
es
imul
cmpsb
int
cmp
test
add
sbb
fwait
aas
or
imul
lock
fiaddl
xchg
scas
ljmp
popa
cs
leave
mov
fildl
cli
in
out
pop
aad
push
pop
lahf
dec
jns
fildll
lock
sub
sbb
jb
nop
insb
addb
push
leave
mov
mov
cmpsl
jns
clts
sbbl
ds
xchg
push
or
aas
pop
pop
inc
fsubr
dec
nop
dec
adc
dec
popa
lods
jnp
adc
adc
jae
gs
int
sbb
addr16
inc
xchg
je
fsubrs
mov
outsb
mov
in
or
cmpsl
xchg
aas
or
cmc
pop
xchg
xchg
jecxz
mov
mov
or
cmp
pop
jg
jg
sub
test
sub
iret
jecxz
in
test
insl
ret
lock
daa
pop
cmp
fldl
mov
inc
sub
add
mov
or
and
xor
cmpsb
or
fstpt
xor
pop
and
pop
mov
push
xorb
mov
jb
scas
mov
jno
or
daa
xchg
pop
lea
jle
mov
xor
cmc
xchg
bound
cmp
adc
pop
out
adc
imul
je
pop
stos
mov
fwait
daa
add
ljmp
mov
orb
sub
das
jge
add
ljmp
mov
and
or
ret
xor
test
push
and
inc
xor
sbb
fldenv
cmc
inc
hlt
push
arpl
out
hlt
lahf
fwait
mov
push
mov
add
imul
jnp
cli
mov
adc
xor
out
push
xor
adc
xlat
jbe
addb
sbb
out
adc
lock
jae
cmpsb
or
xchg
mov
push
in
movsl
test
bound
fdivrs
adc
stos
jl
add
mov
pop
adc
fbstp
jmp
sub
jecxz
iret
push
fwait
scas
shlb
mov
clc
inc
sarb
out
hlt
jecxz
stc
and
test
xor
loopne
push
decb
jo
xchg
outsb
mov
es
rcr
push
adc
icebp
sbb
test
adc
loop
adc
and
or
into
jo
fbstp
or
sbb
mov
fcomip
out
push
or
inc
ljmp
jne
enter
cs
lret
mov
jns
sbb
push
pop
dec
fnstcw
dec
adc
dec
ficomps
pop
add
sbb
sbb
mov
pop
cmpsl
das
loop
inc
xchg
adc
adc
aad
and
out
jo
mov
cltd
fldl
lahf
arpl
or
dec
lcall
pop
cmp
cli
je
lds
xor
orl
push
mov
sub
cld
mov
imul
mov
xor
jecxz
sub
ds
xor
in
loop
sub
cwtl
inc
sbb
pop
mov
popa
adc
mov
in
sbb
cmpsl
xor
cmpsb
pop
xchg
cwtl
mov
cmp
jecxz
aad
movsb
aam
xchg
or
jne
decl
mov
pmulhw
int
xor
shll
mov
ffree
dec
scas
lcall
scas
ljmp
bound
aaa
push
movsb
addr16
decb
hlt
sbb
bound
pop
pushf
icebp
sti
adc
jo
sub
mov
in
int
cli
test
into
lret
stc
dec
push
cmpsb
xor
lret
jl
jecxz
rorl
lahf
ss
cmpsb
mov
lods
cmpsl
sub
call
add
and
mov
mov
ss
repz
shll
jbe
dec
jecxz
mov
das
sub
xchg
imul
movsl
jmp
sub
fnstsw
jne
clc
sbb
testb
sub
imul
aam
push
data16
push
xchg
sarl
pop
jmp
out
leave
push
mov
repnz
addr16
sub
repnz
and
pop
jl
xchg
add
jg
add
sbb
push
cmp
pop
adc
in
leave
into
pop
rcr
xchg
pop
push
cld
lcall
fbld
insb
dec
dec
stos
jns
mov
jge
pop
jl
pushf
pushf
mov
mov
push
push
fcmovbe
jl
mov
test
out
js
pop
outsb
and
lods
fldl
mov
push
push
inc
lret
insl
imul
ja
out
pop
stos
int3
sbb
push
or
mov
out
mov
dec
mov
xor
mov
scas
xchg
fisubrl
dec
jge
push
mov
les
jmp
jp
add
jae
das
lods
sbb
movsl
lock
or
jae
dec
cmp
rcr
and
adc
lret
fmull
cmp
ret
ret
out
adc
xlat
mov
mov
pop
pop
outsb
ret
jns
dec
jmp
mov
mov
cld
inc
imul
icebp
lea
or
push
push
inc
mov
fldl
fdiv
dec
add
out
pusha
cmc
sbbl
xor
sub
loopne
inc
jle
adc
mov
lcall
imulb
pop
ja
adc
or
or
aam
fwait
test
sbbl
pusha
jne
push
in
adc
pusha
sbb
mov
mov
rcll
shr
mov
out
je
scas
xchg
mov
dec
subb
adc
ficoml
jno
das
dec
jmp
pop
add
int3
mov
call
rcrl
mov
push
ja
stos
xor
cmp
and
push
pop
leave
sahf
jg
int
push
dec
int3
or
insb
inc
sti
fs
repz
xchg
cmp
xor
cmpsl
out
xor
stos
scas
and
in
sbb
adc
cwtl
pop
sub
ror
jns
jne
xor
jge
scas
xor
xchg
mov
xchg
out
inc
sub
push
add
hlt
in
inc
jno
scas
xchg
sub
fsub
mov
out
andl
mov
in
adc
cs
shll
mov
fsubrp
scas
sub
mov
ret
iret
imul
gs
daa
add
lahf
add
push
sub
in
adc
test
repz
dec
and
cmp
bound
loope
fsub
pop
cmp
mov
mov
push
ja
jge
pop
jo
pop
es
xor
add
pop
xchg
adc
push
out
fcompl
inc
aas
ds
aam
aaa
or
or
std
push
sub
push
out
cwtl
test
xor
xchg
ret
mov
faddl
les
mov
xchg
pop
sarl
lods
sbb
lahf
push
pop
push
push
inc
je
jbe
int3
xchg
lods
or
in
pushf
popf
leave
out
leave
mov
sarl
dec
xorl
push
add
dec
mov
push
popa
gs
pop
aas
push
es
mov
aad
je
inc
lods
jle
and
push
cwtl
sub
cmp
cmp
loopne
cltd
xchg
jae
mov
adc
ret
clc
mov
jg
pushf
mov
pop
pop
and
lods
fyl2xp1
pop
push
sbb
cmp
mov
shll
push
adc
fidivrl
loopne
ror
mov
gs
mov
xchg
mov
rolb
fcomip
fwait
adc
mov
ds
fwait
or
loop
mov
ja
push
inc
leave
mov
repz
and
fdivr
sbb
mov
pop
sub
sbbb
test
add
ss
in
jbe
mov
stc
mov
hlt
push
sbb
jg
sbb
ss
lods
loopne
and
push
sub
jp
sbb
mulb
sti
jns
daa
adc
fdivs
xor
fsubrl
fmulp
std
push
inc
adc
mov
xchg
mov
movsb
rolb
xchg
mov
xchg
imul
xchg
cmp
mov
mov
ficoms
call
nop
popl
push
lahf
add
push
add
fldln2
cmpsl
xor
je
push
sub
add
or
test
sub
xchg
mov
cmp
gs
in
mov
pop
sti
jecxz
sub
sbb
sahf
arpl
pop
sub
inc
add
imul
jne
out
mov
ljmp
xchg
out
js
std
xchg
sub
lret
dec
cwtl
mov
push
sbb
xchg
xlat
das
pop
ja
mov
jb
scas
or
pop
arpl
jae
adc
loop
add
pop
adc
adcb
mov
push
mov
dec
xchg
jle
xchg
mov
sbb
mov
cld
dec
mov
adc
inc
sub
cmpsb
xchg
andl
mov
cmc
fcom
popf
aaa
lcall
es
xchg
push
push
adc
adc
push
daa
cmp
inc
pop
xorl
cmp
jecxz
inc
jae
add
pop
sahf
repnz
idiv
fildll
repz
dec
and
cmp
jnp
adc
in
sub
lcall
shlb
repz
aam
ret
testl
sub
inc
add
or
pop
repz
shrl
mov
sbb
inc
push
ljmp
data16
xchg
or
jl
insl
jbe
loope
lret
add
or
pop
jnp
movsl
add
add
xlat
xchg
lods
adc
cmpsl
add
sahf
imul
inc
push
adc
clc
and
clc
pop
stos
mov
sub
jno
icebp
push
icebp
outsl
lret
lea
daa
aam
insb
lret
imul
jo
inc
adcl
mov
jl
arpl
mov
pop
shlb
xchg
fisubs
xorb
mov
inc
stos
mov
xchg
mov
jecxz
dec
ljmp
push
jmp
lock
add
xor
lock
lock
mov
sahf
jmp
ljmp
scas
inc
inc
jp
push
out
std
sbb
test
int3
cmpsl
imul
xor
mov
pop
push
clc
lods
inc
dec
test
and
movsb
xchg
cmp
pushf
dec
lods
jle
add
inc
mov
and
push
cltd
out
leave
jl
mov
pop
lcall
mov
out
mov
xchg
dec
repnz
scas
pop
movsl
mov
cmc
jo
enter
fldcw
add
jne
shll
mov
shrl
scas
imul
add
lret
push
es
ret
das
jb
out
int3
inc
test
in
add
mov
mov
push
jnp
fldl
add
out
mov
outsl
pop
test
dec
mov
sbb
outsl
inc
lods
pop
cmp
test
fadds
inc
loope
and
imul
and
sbb
rorb
out
and
pop
stos
imul
test
dec
movsl
and
idivb
jg
push
rcrl
sub
test
push
out
xchg
add
push
sub
push
or
scas
jbe
nop
ret
dec
pushf
adc
es
cld
lds
out
dec
pop
das
sub
push
movsb
pop
imul
adc
or
or
mov
jp
popa
dec
aam
jbe
sub
ljmp
xor
repnz
ja
fdivl
pop
dec
out
bound
and
sbb
push
xor
std
mov
fistpl
mov
xchg
jb
mov
or
inc
test
push
sub
dec
andb
cmp
lock
push
cmpsl
xor
mov
or
into
lret
into
mov
lret
adc
fld
push
mov
popf
push
sbb
cmp
aaa
icebp
or
test
cmc
mov
push
lret
scas
and
mov
leave
xchg
xchg
insb
aad
xchg
lea
pop
jmp
js
adc
cs
xlat
lds
mov
scas
jnp
push
mov
lahf
lret
lcall
pop
pop
aad
shrl
jmp
dec
dec
xchg
popf
mov
js
imul
push
adc
lahf
icebp
mov
jae
shl
out
mov
fbstp
sbb
das
out
sub
cmp
test
or
inc
mov
or
cmp
mov
xchg
repnz
and
iret
pop
add
jmp
xchg
or
mov
int3
dec
aaa
push
inc
fsubrs
fidivrl
cmp
dec
xchg
mov
fwait
mov
pop
or
dec
or
lahf
mov
xchg
pop
inc
ss
xorl
inc
inc
mov
lret
dec
inc
scas
xor
repz
or
filds
popf
mov
dec
xor
cmp
pop
jae
sub
inc
sbb
dec
push
cwtl
aam
inc
adc
gs
xchg
xchg
je
push
out
push
or
inc
mov
mov
xlat
loopne
cmp
or
in
gs
stos
push
xchg
sub
lahf
and
in
cmp
cmp
sti
or
out
jge
adc
cwtl
xorl
xor
cmpb
popf
jb
or
or
xor
sbb
mov
jl
subb
insb
adc
aas
add
sbbl
data16
in
xor
subb
pop
nop
mov
lahf
cltd
add
adc
test
xor
inc
sub
data16
xor
push
xor
mov
and
push
mov
add
js
repz
shrl
mov
leave
imul
jno
lahf
mov
sub
lret
pop
jmp
negl
jb
rcll
add
fcoms
jb
mov
addl
ss
int
jae,pn
movsl
xchg
notl
mov
push
mov
hlt
add
adc
daa
shlb
lahf
mov
dec
jecxz
pop
adc
je
pop
pop
sbb
pop
mov
stc
test
sub
adc
int3
cld
imul
outsb
imul
pop
mov
fnstsw
or
mov
push
xchg
xchg
mov
imull
inc
jns
pop
lret
pop
fbstp
scas
add
and
push
xor
mov
inc
dec
inc
mov
xlat
aas
fdivrs
call
in
inc
lcall
mov
cmp
dec
jl
sub
jmp
pop
adc
loope
cmpsl
sub
cli
cli
jno
push
jns
adc
or
inc
lcall
mov
sbb
jge
pusha
testl
xchg
cmpsb
push
cltd
movsl
stc
pop
inc
dec
jmp
add
mov
pop
mov
notl
rorb
bound
leave
mov
sub
and
jne
outsb
xlat
mov
stc
cli
arpl
and
sarl
add
xchg
push
cmp
push
adc
jg
xchg
adc
ret
imul
jle
sbb
ficoml
xor
jge
mov
outsl
sub
push
flds
movsb
lods
loop
js
adc
cmc
scas
bswap
addr16
mov
in
mov
cmpb
adc
adc
mov
mov
xor
ds
adc
mov
mov
cmp
lea
out
jp
lret
imul
dec
push
jo
lea
sbb
mov
repnz
arpl
fwait
dec
cmp
out
sbb
push
jg
test
or
inc
cmc
shlb
nop
cmpsl
push
sub
push
cmpsb
push
fwait
xchg
sbb
mov
outsb
pop
lods
gs
fmull
jnp
pop
or
cwtl
stos
sbb
push
jne
dec
sub
mov
hlt
sub
cmp
pop
mov
add
mov
test
mov
jg
les
les
mov
jp
dec
xor
pop
xor
lds
jo
inc
gs
shrl
loopne
das
stos
out
dec
out
insb
stos
push
dec
test
pushf
jg
xchg
add
stc
mov
mov
push
sub
repnz
outsb
outsl
mov
loopne
sub
and
test
ja
cmp
sub
lds
das
pop
sub
mov
cli
sahf
cli
push
adc
xor
jecxz
out
outsl
aad
xor
pop
cmp
sbb
mov
fcoml
lds
dec
test
jae
hlt
daa
shlb
mov
add
inc
jne
mov
push
push
jbe
test
aam
sub
dec
or
jbe
sahf
movsl
cmp
mov
shlb
or
adc
imul
xchg
mov
aaa
push
outsb
mov
or
jbe
test
cmpsb
fisubs
add
pop
aaa
mov
iret
push
adc
sbb
jp
and
mov
mov
data16
or
dec
imul
pusha
cmp
add
out
mov
cmp
jnp
daa
or
fnstsw
push
pop
mov
or
lret
jp
pop
imulb
cmpsl
in
pop
in
sti
int
addr16
xlat
addr16
mov
xor
cmp
jl
mov
imul
cmpsb
and
adc
loopne
inc
sbb
dec
push
nop
cmp
bound
pop
cmp
xor
add
bound
mov
dec
orb
add
cmp
and
and
mov
and
or
cmp
jmp
or
mov
cmp
aas
rolb
xor
lock
pop
imul
sbb
sub
adc
jle
scas
inc
pop
mov
lods
mov
addb
mov
mov
or
inc
pop
adc
xor
jnp
xor
cld
cmp
getsec
in
add
cmp
iret
outsb
popf
cltd
rolb
mov
xchg
xchg
add
and
pop
add
pop
lcall
jp
pop
ud1
add
out
cwtl
push
pop
add
arpl
or
pop
movsb
inc
imul
adc
ficoms
push
cwtl
mov
pop
arpl
dec
fldl2e
dec
mov
inc
xchg
shrb
mov
push
push
stos
mov
dec
das
stos
and
pop
enter
mov
insl
jle
ret
mov
adc
out
sti
cwtl
mov
arpl
mov
iret
cmpsl
mov
outsl
jmp
in
inc
jbe
jne
mov
pop
add
andb
dec
add
dec
ficomps
jae
enter
das
hlt
jae
xlat
scas
mov
push
add
sbb
jecxz
int
cmc
sbb
pcmpeqb
scas
nop
push
push
mov
and
insb
cmp
insl
or
test
stos
orb
pop
jnp
out
pop
jmp
mov
mov
sbb
mov
mov
pop
inc
mov
sbb
xchg
pop
pop
mov
fnstsw
mov
outsb
adc
stos
sub
xchg
or
jl
lret
jo
ljmp
and
or
stc
add
out
jl
pmulhuw
sti
cmpb
lahf
out
insb
mov
xchg
test
bound
loopne
int3
fmul
push
insb
sarb
cmp
sbb
fs
mov
lahf
mov
add
loop
fsubl
loop
sbb
pop
clc
shlb
loopne
add
pushf
fmuls
ret
std
mov
jmp
push
mov
cmovl
int3
push
out
xchg
sbb
loope,pt
scas
or
scas
xor
jp
xor
and
mov
cld
mov
xchg
movsl
sub
inc
fdivs
insl
cmp
cmp
sbb
jge
push
jge
iret
popf
dec
or
lods
and
push
int
out
mov
add
or
pop
addb
ret
inc
cmp
adc
xchg
orl
push
mov
bound
repnz
mov
mov
add
adc
sbb
call
add
gs
jecxz
mov
mov
mov
jmp
and
scas
es
adc
bound
jmp
jb
addr16
jae
loope
pusha
xlat
arpl
xor
insb
outsl
das
mov
pop
cmp
cmpsl
inc
in
pause
fsubl
pop
cmp
mov
ret
testl
jmp
cs
lcall
shrb
mov
sti
inc
std
daa
mov
push
sbb
in
sub
cmp
ljmp
movl
xchg
mov
in
bound
and
das
fmuls
divl
cmpsb
jne
scas
fldenv
fidivrs
out
cltd
adc
enter
push
ret
pop
dec
loop
pop
in
sub
xor
scas
pop
jg
insl
mov
add
and
addr16
cmp
je
pop
ja
out
jp
mov
rorb
int
sbb
outsb
hlt
and
incl
pop
dec
repz
dec
push
rcrb
mov
pop
mov
and
ds
jne
sub
jge
pop
inc
comiss
add
aad
arpl
inc
cli
fimull
insb
inc
and
incl
mov
arpl
pop
pop
push
mov
inc
int3
xchg
in
pop
cmpsl
sbb
cmp
aaa
movsl
jg
in
daa
cmpsl
xchg
add
movsl
fidivs
lcall
imul
nop
adc
xlat
test
cmp
dec
inc
out
jae
out
mov
pop
popa
lods
in
mov
stos
fdivrl
movsl
out
mov
pop
in
out
and
aam
cmpsl
arpl
adc
mov
pop
pop
inc
sbb
out
lahf
movsb
popf
pop
xlat
mov
iret
bnd
ffreep
jns
into
jge
mov
dec
fucompp
bound
sub
loopne
xchg
push
cmc
je
ds
push
mov
std
cmpsb
inc
add
jmp
dec
xchg
mov
das
and
xchg
push
add
xchg
testl
outsl
lods
je,pn
and
mov
test
notb
xchg
push
repnz
cmp
dec
jmp
xchg
sub
push
sbb
mov
adc
cwtl
lea
aas
vmovaps
dec
adc
popf
mov
inc
loope
push
inc
jecxz
jno
scas
mov
imul
push
push
imul
jl
lret
lds
push
mov
repnz
pop
jae
div
inc
aas
and
mov
pop
jb
ja
in
sub
int3
mov
push
xchg
lcall
lods
sub
mov
add
adc
repnz
leave
cmpsb
movsl
pop
aas
or
int
cmp
jbe
xor
jbe
dec
mov
rclb
lret
xlat
ljmp
sahf
ljmp
mov
push
inc
mov
icebp
and
mov
or
lcall
mov
fidivrs
push
mov
aam
dec
insb
loop
int3
mov
mov
inc
jns
dec
idiv
mov
out
fistps
inc
ficoml
fcmovb
mov
es
pop
sbb
data16
fs
in
lret
xor
cli
ds
mov
inc
ja
dec
inc
mov
inc
lods
jo
cmp
mov
fs
xchg
add
mov
maxps
mov
add
dec
loope
fsubrs
push
rorb
test
xor
roll
push
out
mov
lea
xchg
cli
unpcklps
adc
fcmove
push
jge
push
fsts
xor
adc
orl
pop
es
xchg
movsb
inc
dec
add
mov
push
cmp
jle
dec
xor
mov
call
adc
je
xchg
cmc
add
pushf
push
int3
cmc
out
loope
out
add
mov
pop
lods
mov
rcll
aas
xchg
into
ret
stos
dec
jb
xchg
rcl
dec
sub
inc
insl
push
ds
loop
xchg
mov
pop
inc
mov
dec
cmp
imul
rorb
fcomps
outsb
add
mov
sub
int3
sbb
cmp
cmpsb
cmp
ret
insb
lods
pop
jo
sbb
cwtl
das
jnp
dec
cli
inc
push
cmpsb
cmp
inc
xor
push
ljmp
push
addl
js
sbb
leave
fwait
or
adc
repz
pop
push
js
movsb
clc
mov
push
insl
sarb
scas
stos
faddl
ror
cmc
mov
imull
or
or
pop
jl
test
and
lret
insl
arpl
mov
pop
mov
ljmp
xor
dec
in
push
mov
outsl
mov
fidivrl
sub
dec
pop
adc
fs
ret
roll
lahf
fcomp
cmpb
xchg
adc
pop
fwait
mov
cld
sbbl
xchg
lods
sub
cmp
das
jne
bswap
add
and
push
sti
repnz
adc
dec
sbb
mov
mov
inc
mov
imul
mov
rolb
daa
push
aas
jns
push
dec
or
jmp
add
inc
andl
jnp
sbb
and
push
sarl
fwait
mov
push
push
les
mov
inc
imul
mov
and
in
dec
mov
paddb
push
mov
cmp
jne
sbb
sub
xor
dec
mov
pop
jo
mov
ss
ds
pusha
imul
add
mov
ret
or
xor
mov
xor
aad
xor
pop
or
or
sti
jg
into
gs
pusha
cmp
jmp
sub
pop
push
into
xchg
xor
fisttpll
inc
jle
push
dec
cmp
es
mov
cmp
adc
push
shlb
das
mov
mov
mov
mov
and
mov
xor
data16
inc
dec
loopne
sub
mov
mov
cmp
mov
addl
cld
ljmp
in
pop
cli
dec
and
jle
pop
fwait
inc
and
and
nop
bound
pop
pop
addb
dec
repz
out
lahf
dec
mov
add
adc
outsl
and
idivl
cmp
std
mov
xchg
negb
jne
mov
ret
arpl
test
push
sub
adc
movsb
mov
cmp
mov
xchg
scas
push
mov
inc
pop
jle
mov
fwait
aas
adcb
cmp
and
sbb
scas
ret
sbb
jbe
mov
push
daa
adc
xor
pop
adc
subl
in
ret
and
xchg
jb
xchg
into
cmc
dec
adc
adc
out
jge
mov
cltd
lods
stc
cmp
mov
pop
and
iret
mov
xor
jbe
repnz
cmp
in
aad
mov
enter
adc
and
inc
loope
mov
sbb
inc
inc
sahf
aaa
es
andl
mov
dec
in
sbb
jno
and
rol
mov
pop
shlb
ss
sbb
fs
inc
dec
mov
outsb
enter
rep
rcl
js
and
mov
insl
imul
xacquire
pop
stos
jb
sbb
inc
arpl
sbb
mov
push
sub
fadd
sub
jl
jl
dec
push
enter
or
sub
stc
xchg
inc
out
xlat
jo
mov
loop
lods
mov
xchg
xor
in
sub
adc
jmp
lret
mov
xor
popa
jb
lahf
les
dec
dec
jp
imul
stc
lods
jg
pop
cwtl
pop
cmpsb
cmp
aad
pavgb
xchg
or
loop
insl
lods
add
fadd
movsl
fs
mov
pop
outsl
sarl
cmpsb
sbb
sbbl
jo
mov
mov
notl
or
std
mov
aaa
cwtl
dec
lock
lret
std
adc
test
gs
xor
enter
xor
cwtl
adc
subl
daa
pop
xchg
push
sub
test
mov
bound
mov
add
adc
arpl
pop
daa
int3
daa
or
inc
hlt
mov
les
dec
xor
adc
push
xchg
cs
aas
xchg
pop
aad
dec
imul
aad
cmpsl
stos
xchg
sbb
add
inc
and
mov
add
int
mov
subl
test
cmpsb
adc
jle
jle
lcall
dec
fcompl
sub
cmpsb
push
and
and
mov
add
pop
mov
add
xor
mov
jnp
lahf
fisubs
clc
adc
lds
scas
pop
and
adc
jle
push
sbb
jp
push
stos
xor
insb
push
mov
push
adc
nop
dec
pop
dec
mov
cmp
or
jmp
cs
adc
and
push
cmpsl
inc
jg
adc
or
xchg
lret
ja
cmp
jns
popf
mov
push
xchg
or
push
pop
sbb
jmp
push
jge
mov
leave
into
cmp
push
mov
outsb
lods
rcrl
fdivrl
push
xchg
xchg
mov
cmc
xor
cmp
mov
jne
mov
mov
mov
inc
cmp
sbb
adcl
mov
stos
xchg
jae
into
ret
outsl
cld
test
and
in
sbb
xchg
inc
rcrl
rcrl
ja
das
push
mov
stc
xlat
enter
xchg
pop
xchg
pop
test
divb
xor
fcmovnbe
cmp
es
repnz
sbb
add
or
adc
adc
in
mov
scas
icebp
jno
call
testl
mov
jnp
cli
sbb
and
lahf
test
mov
scas
inc
js
sub
dec
icebp
jl
shrl
clc
xchg
clc
add
xlat
xchg
and
lcall
jle
sub
orb
jecxz
xor
repnz
sti
lods
addb
dec
in
sub
imul
xlat
mov
clc
mov
iret
mov
push
lret
lods
cmpsb
andl
lds
jno
jo
out
inc
stc
pop
movsl
mov
jg
fisttps
fidivrl
sbb
jnp
pop
cmp
add
insb
inc
rolb
fcompl
inc
es
repz
adc
ja
push
adc
jo
sar
mov
or
stc
aam
loopne
arpl
sahf
push
in
xchg
sbb
or
pop
xchg
insb
sbb
inc
into
push
push
jge
pushf
mov
hlt
jbe
hlt
in
xor
xchg
addr16
push
add
fcmovb
xchg
std
daa
mov
cwtl
std
sub
insl
or
add
sbb
pop
outsb
push
sbb
in
cmp
and
cmp
sub
xor
adc
mov
scas
aad
scas
stc
repz
addl
leave
mov
push
pop
push
repnz
cmp
and
insb
test
xor
lret
data16
jle
orl
push
mov
dec
mov
andl
xchg
jnp
pusha
or
negl
mov
xchg
dec
push
adc
sub
lret
xor
sub
clc
ret
mov
inc
popa
mov
mov
xchg
push
pop
ja
push
repz
scas
stos
jns
xchg
dec
add
and
ret
ret
mov
and
jb
adc
jnp
jl
or
cmp
mov
ret
lea
xor
sbb
pop
aam
ss
pop
and
incb
jb
es
cmc
mov
sti
mov
sbb
and
jmp
xchg
testb
shrb
flds
jmp
jge
add
imul
out
dec
pop
pop
lods
testb
and
lock
ds
jbe
fldenv
jne
add
cmpsl
sub
std
jle
xchg
lahf
outsl
in
ret
out
sahf
stos
mov
ror
call
jae
ljmp
dec
dec
mov
scas
inc
mov
inc
dec
xor
ss
mov
hlt
aas
shll
mov
stos
es
inc
mov
adc
sahf
jae
xchg
out
out
xlat
xchg
stc
push
dec
fildl
pop
punpckhdq
nop
sub
cmp
lcall
sub
dec
lock
aam
loopne
add
add
push
mov
aad
sahf
pop
adc
push
xchg
ljmp
and
push
ljmp
dec
jl
inc
push
mov
mov
scas
xchg
cmpsl
jnp
xor
sub
stos
xor
cltd
mov
aam
sub
das
push
sbb
jno
jno
dec
in
mov
jle
arpl
mov
test
xchg
dec
loop
in
enter
pop
jns
daa
ja
mov
pop
cld
cmpsb
push
xchg
mov
mov
push
jnp
mov
and
cmc
mov
sbb
push
out
in
in
sti
jle
sbb
ret
negl
mov
test
scas
add
enter
jg
out
leave
ret
jnp
sbb
or
sbbl
aad
or
and
cltd
pop
dec
sub
mov
iret
ja
lcall
stc
push
addl
fisubl
bound
out
inc
fidivrs
dec
mov
sub
push
dec
jno
lea
test
mov
daa
out
insl
pop
mov
in
push
fdivrl
xchg
or
in
gs
inc
aam
arpl
dec
fsub
test
xchg
in
jne
int3
lods
add
mov
mov
sbb
loope
fbld
jns
sbb
mov
test
mov
push
sub
das
add
push
xchg
dec
push
sbb
sahf
push
or
mov
fnsave
sub
je
xchg
rcrl
jmp
dec
lods
mov
mov
sahf
pop
sbb
mov
clc
cmpsb
sbb
mov
dec
inc
out
xchg
test
add
xchg
test
fidivrl
mov
pop
or
loopne
in
push
xchg
outsl
cmp
lock
and
and
push
ds
inc
loop
xchg
sub
xor
mov
adc
mov
das
addl
pop
sub
scas
xor
mov
outsl
jns
cld
ret
inc
pop
roll
lock
lock
add
subl
bound
adc
mov
pushf
lea
pop
jge
outsb
cmpb
cmp
enter
decl
test
adc
outsb
data16
adc
jge
popa
enter
mov
loopne
addr16
loopne
pop
jbe
mov
daa
fnsave
xchg
out
lahf
or
pop
or
mov
cmc
sub
adc
lods
outsl
out
mov
pop
nop
jb
mov
jg
lret
mov
call
pushf
push
shll
xchg
mov
jecxz
popf
jno
lcall
dec
int
sbb
xor
es
loope
push
cmc
fwait
imul
inc
pop
pop
movsl
push
pop
add
pushf
push
xchg
pop
sbb
rcrl
push
shl
scas
ljmp
pop
sbb
repnz
cmp
xchg
outsb
outsl
daa
inc
imul
roll
mov
xchg
cmp
das
sub
xchg
arpl
jne
dec
pop
lods
cs
repz
or
sbb
addb
adc
mov
and
pop
mov
lcall
lea
xchg
push
mov
fists
into
leave
sbb
cmp
adc
sbb
cmp
xchg
or
scas
inc
or
scas
divl
ja
xor
pop
dec
push
rcrb
je
jno
xor
pop
sbb
les
adc
lret
or
movsb
mov
rcrb
popf
loopne
mov
sahf
adc
push
sub
std
cmpsl
aaa
dec
mov
sbb
push
mov
cmp
in
or
mov
sub
mov
imul
imul
jmp
repnz
mov
loope
and
pop
cwtl
xchg
rclb
aas
mov
movsb
cwtl
and
mov
lret
mov
sahf
iret
aaa
xor
cld
mov
fnsave
stos
cli
pushf
fucom
mov
fcmovb
push
push
imul
xor
add
pop
loopne
jns
sbb
lods
push
insl
dec
jp
jns
or
dec
in
dec
and
call
pushf
sub
int
jl
add
fwait
pop
inc
dec
fistl
mov
push
push
clc
test
lods
ljmp
adc
mov
enter
push
inc
mov
outsb
in
cmpsb
call
and
push
int3
sbb
inc
dec
das
repz
ja
mov
mov
aaa
mov
clc
push
mov
dec
test
je
cmp
pop
cmp
aad
mov
jge
cmpl
pop
in
mov
ljmp
jae
popa
pop
in
dec
mov
cmp
outsl
mov
sub
add
jle
fcmovne
sub
out
iret
push
es
lock
xor
sub
xchg
pop
sbb
push
jge
in
xchg
ror
xchg
sbb
adc
inc
pop
ret
cmp
inc
push
stos
lds
jecxz
jge
jo
out
outsb
push
nop
out
cmpsl
add
mov
je
pop
dec
adc
mov
nop
sbb
test
sbb
or
sbb
test
pop
mov
pop
cmp
mov
ja
inc
inc
in
jp
cmpsb
xor
cli
int
jno
jg
mov
pop
cld
jbe
lret
cmpsb
pop
popf
js
add
sub
daa
push
popa
loopne
cld
pop
les
arpl
jae
mov
and
dec
fwait
bound
sub
dec
js
addl
pop
sbb
or
cmp
jbe
adc
push
pop
fdivrl
movb
mov
sbb
mov
or
mov
xchg
cmp
sbb
mov
test
xor
or
movsb
pop
ja
push
and
push
in
or
daa
test
dec
and
fidivs
jb
lcall
pop
fisttpl
mov
xor
sub
push
enter
sysenter
pop
mov
xorl
pusha
in
popf
int3
cld
mov
or
movsl
cmp
xor
mov
sbb
sub
xor
test
jp
into
aaa
adc
lods
sbb
scas
call
inc
loopne
dec
adc
imul
test
mov
es
push
sub
and
sub
jo
inc
mov
sti
dec
xchg
in
push
or
cs
hlt
inc
sbb
adc
movsb
jne
xor
movsb
iret
sub
push
pop
insb
cmpsb
lahf
shrl
adcb
nop
mov
sub
lret
ss
add
cmp
cwtl
and
popf
roll
fldenv
rcrl
adc
into
mov
and
sub
in
push
lock
std
test
cld
addr16
inc
adc
adc
insb
pop
mov
mov
sbbl
mov
pop
jg
and
xchg
lods
sbb
xchg
outsb
pop
cmp
fldcw
ret
aad
ds
jne
into
add
int
test
cwtl
adc
jmp
push
push
lahf
scas
fs
call
lock
jle
or
iret
dec
push
inc
in
cmpsb
int
and
cmp
sti
mov
pop
in
ret
and
cmp
mov
orb
dec
and
push
adc
pop
or
aam
daa
fyl2x
cmc
scas
test
pop
popf
outsl
idivl
pop
xor
scas
je
xchg
lret
lcall
add
push
movsl
push
push
cld
cs
mov
hlt
sbb
inc
and
data16
jae
imul
imul
sub
jbe
xor
adc
push
sub
sahf
or
test
iret
fstpl
movsb
cmpsl
std
ret
pop
or
int
dec
icebp
mov
dec
xchg
mov
mov
in
nop
ffree
mov
in
fldl
cwtl
ret
mov
repnz
sahf
pop
pop
out
cmpsl
and
in
aam
fwait
js
mov
add
ret
fldenv
mov
cmp
sbbb
addr16
int3
clc
dec
movsb
inc
out
in
jb
or
xchg
rcl
jae
sbbl
rorl
data16
aas
sbb
in
pop
mov
aaa
andl
mov
lret
shl
loope
mov
lcall
insl
jbe
jmp
xchg
push
mov
xor
movsb
into
rclb
loop
jmp
sub
sub
xor
cmpsl
xchg
xchg
adc
dec
lret
sub
enter
addb
xor
dec
jbe
stc
dec
mov
popf
mov
pop
lret
sbb
mov
aaa
bound
les
adc
imul
inc
pushl
subb
push
mov
sub
xlat
mov
lea
iret
in
movsb
iret
fwait
sub
inc
sarl
adc
out
ror
iret
mov
scas
mov
or
mov
gs
adc
or
movsb
adc
cmp
test
in
pop
push
repnz
add
call
call
jmp
xchg
sub
add
mov
and
popa
xchg
leave
mov
pop
push
push
push
or
xchg
bound
push
sub
lods
lret
mov
cmp
and
mov
sub
cmp
pop
xchg
js
clc
popf
xor
loopne
xor
gs
add
mov
xor
data16
mov
adc
sahf
and
mov
ror
clc
outsb
pop
jp
mov
or
loop
inc
pop
jns
inc
out
xchg
mov
push
in
mov
adc
xor
int
es
cmp
and
push
scas
and
sbb
pusha
or
ja
fisubl
xchg
mov
out
jecxz
sbb
out
and
fsubr
inc
inc
inc
lods
xlat
repnz
sbb
movsl
xor
icebp
les
cmpsl
lds
mov
xchg
push
and
push
cmc
stc
fstps
jmp
add
add
sub
popf
inc
dec
rcrb
cld
out
rcll
mov
xor
out
int3
dec
sub
mov
inc
enter
push
dec
fiaddl
sbb
jbe
stos
add
pop
test
and
add
push
sbb
inc
or
scas
dec
les
repz
sahf
cmpsb
mov
pop
outsb
mov
ret
ud1
push
adc
mov
test
ljmp
mov
inc
xor
mov
sub
jnp
mov
aad
jg
call
cmp
lock
mov
notb
cmp
xlat
stc
les
mov
fnsave
xor
jg
mov
xchg
adc
jo
mov
push
outsb
pop
daa
add
or
gs
xor
test
pop
jl
and
push
inc
sahf
into
push
lcall
jmp
add
xor
and
repz
subb
cmc
test
sahf
js
mov
and
nop
sub
sub
mov
cmp
xchg
adc
jbe
and
js
and
jns
xor
mov
xchg
sahf
xor
ret
dec
mov
push
aas
sbb
and
shl
add
pop
ret
pushf
sbb
std
ficompl
mov
sbb
loope
cli
sahf
movsb
jp
outsb
cmp
int3
lds
lret
mov
push
mov
adc
xchg
pop
mov
rorl
lret
jno
stc
inc
roll
push
cltd
jmp
fstl
jge
mov
icebp
jecxz
stos
ret
pop
testl
in
push
outsb
daa
test
into
mov
dec
dec
or
dec
push
xor
xor
aaa
daa
push
adc
jns
js
cmc
push
leave
hlt
inc
mov
mov
shrl
mov
push
lret
decb
sub
inc
push
movsb
push
dec
jle
cmpsb
mov
push
cmpsb
push
imul
pop
clc
sbb
loop
adc
les
fimuls
pop
sti
fldcw
ljmp
jbe
movsl
jmp
fwait
popa
pop
stos
getsec
aad
add
pop
push
mov
lahf
xchg
in
pushf
repz
mov
icebp
inc
int
imul
dec
lods
sarb
js
inc
cmpsl
lcall
add
dec
movsl
mov
outsb
adc
jb
jle
xchg
movsb
and
pop
ljmp
in
cmc
and
inc
stc
mov
jo
cmp
mov
insl
imul
clc
mov
mov
mov
adc
add
rolb
xchg
pop
fnstsw
xchg
sbb
ret
xchg
adc
pop
inc
loope
test
dec
pop
sub
js
sti
fs
cltd
sub
or
test
mov
add
in
call
mov
call
out
pop
out
or
jae
cmp
adc
jns
mov
aaa
add
jmp
inc
int3
inc
sbb
mov
imul
aad
jmp
popf
mov
ds
les
sti
xor
xor
or
into
xor
ret
push
dec
not
popf
pop
adc
aad
pop
and
into
ror
inc
xchg
shlb
inc
fs
push
mov
std
add
mov
cmp
mov
cmp
xchg
das
hlt
loop
jge
ds
pop
fmul
xchg
inc
and
fistps
jnp
testl
in
xchg
loope
jp
aam
ret
xor
xchg
or
aad
and
mov
sub
xchg
fstps
xchg
movsb
lahf
test
sub
mov
mov
adc
es
sbb
int
shl
mov
mov
cli
inc
setae
movsl
push
sbbl
inc
adc
mov
mov
lods
subl
fldl
jecxz
cmpxchg
push
xchg
movsb
movsl
in
lock
test
out
in
cli
std
call
cmp
jl
repnz
sti
loopne
push
and
and
aad
test
std
cs
push
push
mov
mov
adc
pop
stos
repnz
sahf
ja
sub
arpl
jg
cmp
inc
inc
inc
sub
icebp
loop
test
sub
xor
les
movsl
das
sbb
pop
gs
lret
scas
add
pop
jmp
sbb
aaa
scas
popf
flds
lret
cs
shlb
mov
cltd
lods
cmp
cwtl
stos
inc
xchg
pop
inc
mov
pop
dec
call
cmp
cmpsl
ficomps
movups
ss
cld
mov
mov
cs
inc
fcomip
daa
mov
mov
mov
pop
mov
test
cmp
adc
push
shll
mov
les
pop
stos
loopne
cs
adc
std
test
lock
and
mov
mov
xor
inc
jb
add
dec
dec
sbb
mov
mov
shlb
mov
repnz
jne
lcall
jmp
sub
fwait
inc
xchg
rcrl
sarl
cmc
cmc
les
int
out
dec
adc
jp
loope
and
xlat
sbb
push
add
out
sub
int
daa
mov
in
test
mov
inc
xor
test
add
mov
or
rclb
sahf
out
xor
fldl
aas
insl
notb
addr16
push
icebp
mov
xchg
inc
sbb
idiv
sub
hlt
cmc
xor
pop
in
mov
test
mov
sbb
mov
pop
jb
js
icebp
test
jg
imull
push
dec
pushf
sub
xchg
and
data16
and
lea
mov
pop
pop
sbb
and
das
mov
or
jmp
mov
push
outsb
pop
dec
shrb
or
icebp
jbe
insb
jp
mov
or
xchg
mov
push
hlt
xchg
nop
pop
dec
xlat
ret
in
lods
test
test
lods
sub
enter
jle
xor
mov
jns
jne
xchg
out
leave
fldcw
mov
loopne
adc
inc
sahf
movsl
daa
or
ds
cltd
ss
cmp
ficompl
xor
xchg
xor
addr16
fdivr
leave
mov
mov
xor
push
fscale
inc
inc
push
sbb
add
push
aad
stc
dec
jmp
xchg
mov
addb
ja
mov
aas
mov
push
and
mov
xchg
call
add
push
add
sbb
adc
nop
pusha
or
out
xchg
mov
mov
icebp
hlt
repnz
xchg
jo
imulb
mov
xor
push
mov
sahf
adc
pop
jns
loopne
test
ret
cltd
insb
mov
hlt
pop
xchg
pop
adc
xchg
push
fsub
xchg
mov
cmp
jle
mov
push
push
xchg
fnsave
push
mov
pop
pop
test
sub
fmul
xchg
pop
mov
jns
xchg
cmp
cmpxchg
jae
push
sbb
stc
jmp
and
mov
or
cmp
aam
dec
sub
xchg
clc
pop
xchg
push
jno
hlt
movsl
jno
inc
and
inc
das
sti
and
xor
mov
stos
or
in
xor
xlat
xchg
repnz
outsl
xor
jno
dec
popa
pop
subb
push
repnz
jmp
push
les
aam
ljmp
test
add
cltd
push
dec
int
pop
fdivl
fs
hlt
sbbl
scas
bound
mov
jge
and
cmovb
mov
lret
out
inc
ja
sahf
loopne
in
cmp
push
pxor
pop
sbbl
pop
xchg
loopne
fwait
dec
mov
sti
cwtl
lods
jp
orl
clc
repnz
push
aaa
cmp
int
sub
cmp
rcrb
push
out
imull
sahf
xchg
fs
in
sub
jne
inc
push
mov
ficompl
das
add
add
fisttps
sub
xchg
jo
fcom
add
xchg
insl
fcompl
pop
xchg
cld
adc
mov
inc
pop
loopne
fidivl
sub
outsl
fidivl
aaa
aaa
and
outsl
out
jl
out
mov
jbe
sarb
mov
pop
daa
loop
add
mov
data16
cmpsb
mov
inc
jge
sbb
xor
sub
je
jge
jne
mov
repz
pop
scas
es
pop
je
push
jns
test
or
jmp
sub
in
mov
mov
push
sub
pop
push
int
pop
cltd
sub
inc
push
sbb
sub
loop
add
mov
jns
sarb
and
mov
fisttps
mov
fdiv
lds
add
lcall
mov
inc
jp
fldenv
mov
stos
sub
and
adc
sub
dec
daa
fdiv
inc
adc
out
movsl
dec
push
jb
divb
lcall
outsl
call
cltd
or
dec
pop
fdivrl
sahf
xor
cmp
mov
test
push
push
nop
repnz
mov
jmp
iret
cld
into
dec
jbe
xorl
dec
out
aas
sub
pop
fdivr
insb
push
add
pusha
mov
in
mov
or
fsubp
loope
test
rcrb
pop
xor
sub
dec
outsb
xorl
icebp
mov
clc
pop
fldt
mov
push
movsl
lret
adc
pusha
stos
cmp
rcrb
rorb
jns
pop
mov
xchg
into
cli
cmp
push
gs
movsl
xor
lret
sub
xchg
stos
aaa
nop
repnz
repz
aaa
pop
gs
fists
mov
cmp
fbld
jno
popf
scas
icebp
scas
push
sub
hlt
cmp
adc
mov
xlat
xor
pop
pop
push
das
jno
push
xchg
cs
mov
cmpsb
xchg
stos
mov
push
pop
insl
loop
test
xchg
push
push
test
mov
insb
adc
mov
cmp
data16
jns
adc
stos
sub
cmc
scas
in
mov
sbbb
sub
cmpsb
pop
mov
loopne
arpl
sbb
mov
inc
xchg
out
fabs
es
pop
lea
idivl
and
xchg
ljmp
in
negl
movsb
push
in
icebp
mov
je
mov
and
fisttps
das
lds
mov
test
xor
loopne
movb
cmp
push
inc
cltd
fcmove
icebp
xor
cmp
inc
pop
int3
jle
sbb
mov
cmp
ljmp
rolb
ds
jecxz
xchg
ret
popf
test
fdivrp
daa
xchg
fimuls
addr16
push
jp
pop
addr16
sbb
ss
pop
jmp
fcomi
and
sti
pop
imul
aam
loop
sub
push
into
lock
mov
mov
int
scas
dec
push
inc
and
mov
out
out
cmp
nop
add
lret
jns
js
adc
insb
inc
cwtl
lock
sbb
jnp
xor
xor
and
mov
mov
push
xor
adcb
push
or
enter
sbb
das
das
hlt
je
inc
xorb
mov
mov
push
nop
je
mov
pushl
cmp
dec
adc
and
push
stc
xor
xchg
adc
pop
and
mov
push
es
ret
push
cmpsl
loopne
daa
dec
ss
insl
pusha
or
or
sbb
mov
or
shl
ret
dec
insb
pop
mov
stc
pop
fists
pop
loop
popf
inc
scas
repz
mov
lahf
movsb
lock
into
gs
sub
sub
cmpsb
sbbb
test
aad
dec
pop
icebp
das
lret
push
pop
leave
and
into
sub
mov
out
aas
or
es
pop
xor
inc
mul
sub
mov
push
push
scas
rolb
mov
xchg
rcr
pop
test
xor
jl
je
es
lcall
cmp
pop
das
mov
aam
mov
imul
in
fistps
pop
adc
xor
xor
adc
pop
push
pop
mov
loop
dec
or
xchg
ret
jle
jnp
cli
inc
fdivl
bnd
sti
xlat
adc
enter
mov
push
adc
jp
jge
sahf
stos
xchg
stos
pop
and
insb
fimull
adc
add
xchg
xchg
out
iret
pop
inc
pop
sub
roll
lcall
ret
lock
mov
mov
or
arpl
mull
jo
sbb
movsl
cmpsl
or
push
shl
hlt
cmc
ljmp
pinsrw
outsb
cmp
mov
nop
jmp
mov
arpl
mov
mov
dec
jecxz
ds
data16
mov
cltd
imul
mov
cld
adc
rolb
lods
jno
push
dec
popa
sar
enter
into
mov
movsb
lret
outsb
mov
shll
aas
mov
cli
fbstp
das
addl
pop
pop
iret
movsb
imul
cmpsb
inc
insb
jp
or
sub
std
ret
ljmp
mov
mov
stos
gs
in
cld
dec
dec
push
addr16
push
xchg
lcall
push
sahf
rcll
xchg
mov
sub
cltd
test
pop
mov
enter
into
nop
test
aad
cmpsb
or
xor
into
inc
push
and
inc
or
into
lret
mov
jecxz
jo
ret
inc
push
mov
push
les
ds
dec
xchg
xchg
gs
jno
cmp
pushf
xchg
out
jbe
jnp
lock
adc
cld
popa
lock
lahf
repz
movsl
stc
push
mov
dec
cwtl
jb
std
adc
mov
cmp
xchg
aam
or
dec
push
add
mov
cmp
cmpsb
ss
mov
xorb
push
jp
popf
movb
mov
data16
mov
mov
xor
push
xor
movsb
subl
lret
sti
xor
outsl
call
int3
push
push
lods
push
shlb
push
push
ljmp
std
lock
xor
mov
pop
push
jo
stc
jbe
cmp
add
push
in
dec
mov
fistpll
lcall
aaa
add
jbe
xor
test
out
outsl
adc
mov
test
leave
fdivl
into
ja
mov
adc
aam
movsb
jo
sahf
outsl
out
push
scas
clc
cmp
insb
xor
cld
or
sub
mov
push
mov
jo
xor
sbb
jl
popa
add
in
pop
negl
xrelease
test
mov
cltd
xor
and
loope
pop
fists
jge
stos
lds
es
xchg
int
jge
adc
mov
mov
xchg
mov
shll
sub
test
ljmp
adc
fldt
inc
shrl
movsl
sbb
mov
jnp
mov
test
pop
and
in
hlt
cld
ds
loop
jnp
leave
gs
xorb
pop
or
fmuls
lock
xorb
xchg
add
je
dec
push
sti
pop
popa
insl
in
sub
push
mov
mov
inc
mov
mov
call
gs
addb
mov
cmp
int
stos
call
fists
mov
mov
cmp
jo
jnp
js,pn
pushf
scas
rorb
cli
inc
sarb
sarb
cli
loopne
lret
sub
xlat
lods
add
stos
shl
faddl
std
mov
mov
push
adc
loope
xor
stos
shlb
ffree
dec
pushl
lret
cmpsl
insb
xchg
pop
dec
iret
call
sbb
sti
and
and
dec
test
shrl
fdivr
jbe
lcall
dec
je
inc
ret
fsubp
mov
push
and
pusha
fwait
rorl
sub
test
xor
insl
jns
arpl
mov
jl
sub
inc
pushf
leave
jne
in
mov
dec
enter
or
or
int
leave
dec
mov
scas
push
scas
mov
xor
ret
sbb
insl
xchg
enter
pop
aaa
cmp
push
cltd
stos
mov
outsl
jb
inc
fwait
scas
and
adc
in
push
movsl
mov
push
mov
inc
or
fucomp
cld
xchg
bound
lds
push
in
cs
prefetch
push
mov
int
push
shll
lock
jns
mov
dec
lds
ret
insb
inc
sub
inc
mov
mov
hlt
aas
cmp
adc
lret
loope
xor
cmpsl
pop
lods
inc
and
je,pn
sbb
mov
sbb
packuswb
into
in
and
sbb
idivl
test
fisubl
js
mov
or
inc
dec
push
adc
sub
add
lahf
out
sahf
ds
icebp
sub
or
push
xor
push
push
cwtl
in
push
out
cmp
incl
xor
push
leave
xor
inc
lods
lcall
mov
pop
cltd
jl
pushf
cmpsl
push
xchg
pop
xor
mov
btc
xchg
addr16
clc
daa
jl
shl
push
sarb
sti
push
mov
sbb
lret
outsb
jne
cwtl
adc
xor
or
cli
test
mov
and
les
push
inc
push
aas
lea
nop
cmp
cmp
imul
sub
inc
imul
sub
xor
add
in
stos
sbbb
jp
mov
add
push
out
bound
insl
loopne
ret
dec
lcall
lcall
push
insb
xchg
les
xchg
xchg
dec
xorl
icebp
ret
sbb
or
cmp
xor
in
addr16
in
cmp
ds
dec
dec
test
sub
icebp
sub
mov
dec
sbbl
push
andb
out
adc
fwait
in
call
dec
jg
xor
mul
sub
popa
dec
mov
push
cmp
mov
mov
mov
and
dec
mov
or
pop
ret
mul
mov
mov
out
in
pop
jbe
sub
and
lods
les
ja
rcrb
stos
dec
addb
push
jl
mov
sbb
push
pop
jl
mov
negb
or
mov
xor
xchg
xchg
mov
daa
cli
ds
xor
push
jnp
popa
sbb
pop
inc
out
out
or
pop
fldl
stos
cmp
mov
push
sbb
cmp
les
pushf
scas
fsubrs
jl
cli
call
fisttpll
jb
nop
mov
jns
mov
jne
js
pop
or
xor
loope
cmp
xor
or
sub
ret
mov
je
leave
sbb
or
adc
cltd
mov
mov
into
dec
xor
mov
jle
push
dec
push
push
adc
cmc
jp
in
test
ljmp
and
aaa
pop
outsl
jmp
mov
push
or
scas
movsl
sbb
pusha
dec
mov
pop
mov
fsubr
rol
inc
in
mov
bound
mov
jmp
push
popf
sub
jecxz
fs
mov
jb
cmp
daa
ljmp
pop
xor
dec
fs
add
scas
lcall
or
popf
or
and
call
pop
out
ret
call
xor
adc
into
aaa
test
js
jnp
sub
and
roll
std
bndstx
mov
ss
ljmp
cmc
xor
in
hlt
mov
xlat
lret
jo
pop
sub
in
mov
in
in
out
lods
add
pop
xor
or
scas
incl
pop
jno
divb
out
je
notb
cmp
gs
jnp
sub
and
fwait
sbb
addr16
push
ljmp
shrb
and
daa
lea
popf
std
adc
xchg
lcall
or
cmp
or
adc
mulb
jns
jnp
aad
push
fidivl
and
imulb
das
pop
cmp
popf
testl
or
mov
cmc
dec
popl
xchg
andl
ljmp
mov
stc
and
dec
mov
aas
inc
mov
push
lret
in
cld
clc
rolb
mov
sbb
out
push
mov
je
fidivl
pusha
jp
push
cmp
andl
enter
daa
in
pop
out
cmp
int
pop
push
and
pop
in
mov
cmp
iret
adc
xor
ret
push
scas
xor
pop
dec
shll
sub
int3
cmp
jnp
hlt
nop
dec
addr16
cltd
ds
loopne
pop
pop
inc
sbbb
mov
insb
jo
ds
xlat
xor
insl
sbbb
jg
shr
fcomps
scas
popf
inc
shll
iret
test
cmp
adc
lea
aad
sub
fistps
leave
cmp
dec
mov
std
in
xor
pop
push
mov
mov
sysexit
ja
sbb
sti
cmp
push
repnz
fimuls
sbb
imul
into
loopne
pop
jns
lcall
xlat
jb
mov
clc
jle
out
inc
imul
push
fdivrp
push
into
dec
adc
or
ret
out
xchg
dec
rcl
out
fistps
hlt
xor
mov
ss
loope
xlat
in
mov
inc
ja
mov
xor
gs
xchg
aad
aad
add
cmc
xlat
or
insl
gs
shll
and
cmp
ret
or
inc
lret
lret
add
cmc
leave
mov
ss
add
imul
adc
cltd
cmc
dec
sub
lret
aas
lods
test
xchg
insl
cmp
push
xchg
enter
ja
test
jge
pop
mov
inc
sub
hlt
mov
inc
sahf
fs
bound
pop
or
movsb
shll
fldl
adc
mov
and
sub
stos
mov
out
add
jns
test
and
xchg
lods
push
ds
add
fldenv
in
mov
test
jo
mov
lcall
inc
push
push
xchg
mov
aas
and
fmull
mov
mov
sarb
fs
negb
in
adc
pop
pop
cli
mov
int3
shll
xchg
stos
mov
cmpsb
lods
mov
in
inc
xchg
xorb
pop
loop
or
cmpsb
dec
in
mov
cmp
push
xor
sub
fwait
je
pop
out
outsb
sbb
or
fldpi
mov
mov
test
cmpsl
pop
inc
push
in
cli
subl
shlb
inc
sub
xchg
dec
bound
push
push
scas
ds
stos
xor
stos
int3
sbb
pop
jle
lock
mov
push
push
out
jb
in
mov
add
pop
mov
xchg
jb
or
pop
pop
mov
inc
pop
sbb
mov
xlat
mov
cmp
aas
leave
stos
stos
mov
mov
stos
and
cmp
push
mov
sub
les
fstpt
inc
sbb
in
and
cmp
frstor
fs
push
xchg
fists
lret
fidivrs
inc
cmp
in
dec
pop
pop
gs
dec
ret
dec
adc
mov
fs
mov
aaa
loopne
xchg
stc
mov
pop
clc
cld
cmp
xor
pop
pop
dec
sub
cmp
lcall
xchg
jbe
cmpsb
add
jo
xchg
xchg
mov
imul
hlt
pushf
jnp
mov
cmpsb
xchg
aam
pop
cmp
mov
inc
lret
std
dec
dec
adc
mov
cmpsb
inc
fnstenv
scas
ds
call
push
xchg
repz
jle
pop
add
push
movsl
and
mov
rcr
out
orb
rcll
jp
fcoml
push
lret
cmp
lods
pop
cltd
adc
cs
addr16
pop
bndldx
fwait
cmpps
in
mov
test
pop
dec
lcall
mov
mov
scas
sub
adc
pop
push
loope
fldt
mov
add
int
or
pop
fnsave
loope
mov
or
notb
outsb
dec
inc
xchg
loop
fldl
shl
push
call
addb
adc
cltd
lock
mov
jb
in
or
push
dec
jno
test
xchg
andl
data16
popf
mov
ret
xchg
push
addr16
gs
insb
aaa
mov
iret
or
and
jnp
stos
iret
and
sbb
and
and
imul
fldenv
mov
inc
in
xor
sub
mov
pop
daa
pop
fmul
mov
cltd
fcmovne
dec
sti
push
xchg
xchg
inc
push
in
or
sahf
insl
and
xor
ja
adc
ds
inc
push
out
popf
shlb
or
jmp
xchg
jnp
and
jns
push
push
aam
mov
ja
data16
mov
or
mov
xchg
into
or
mov
mov
adc
xchg
lods
orl
jle
jae
xchg
pop
pop
gs
jg
mov
jnp
and
arpl
call
push
push
sbb
enter
ret
cmpsb
out
xchg
cmp
xor
popf
sub
not
adc
fcomp
jle
out
lcall
stos
jmp
aam
xchg
daa
xchg
leave
mov
mov
mov
cwtl
mov
pop
or
xchg
sbbb
xor
cld
dec
mov
pop
lods
idiv
loopne
push
mov
scas
xor
sbb
stos
xor
repnz
pop
aas
lret
sub
cmp
int3
sub
sbb
test
test
lods
fimull
sub
fld1
push
adc
fcompl
les
jl
pop
ficomps
cs
xorl
cmp
mov
push
pop
jg
sbb
cmp
push
pop
and
inc
dec
jge
sarl
repnz
push
sbb
rorb
xor
lock
and
xchg
aaa
inc
stc
push
ret
dec
repnz
outsb
inc
or
outsb
in
xchg
in
xor
jp
add
adc
test
or
push
test
pusha
dec
jnp
jne
adcb
add
imul
stc
sbb
cmp
lret
xor
cld
push
outsb
mov
sub
sysret
mov
stos
lret
das
xchg
les
jnp
jno
and
jp
lret
incl
scas
aad
sub
pop
sub
sub
test
js
cmpsb
jmp
divl
jnp
std
push
mov
stc
pop
and
cmpsb
lret
imul
in
pop
cmp
hlt
mov
cmpsb
jmp
lcall
xchg
jae
call
push
mov
push
dec
dec
scas
ds
cmpsl
mov
sub
movsb
iret
mov
movsl
jb
stos
les
inc
add
jae,pn
inc
insl
mov
mov
mov
xor
cmp
je
movsb
mov
jmp
ret
xor
sub
stos
push
push
jmp
or
sbb
pop
push
adc
into
cld
aaa
inc
mov
sbb
push
jmp
xchg
sbb
ret
inc
cltd
push
dec
leave
aad
mov
lea
mov
dec
dec
pop
es
add
xor
dec
leave
mov
sbb
push
mov
fdivs
fiadds
add
jo
cmpsl
and
mov
mov
mov
rolb
pop
dec
out
mov
and
jne
fsubrl
sub
pop
mov
out
xchg
fidivrl
movsl
sub
outsb
mov
popa
insl
cli
pop
cwtl
movsl
push
mov
cmp
sarl
cmpsl
mov
jnp
xchg
xchg
pop
pop
dec
negb
xchg
jnp
out
sahf
movl
and
mov
push
mov
insb
pop
sub
push
cli
jecxz
cmp
mov
into
nop
in
ljmp
mov
lea
sbbb
insl
xchg
jae
fidivrs
pop
push
aad
cmp
cs
in
ds
cmpsl
push
mov
lods
mov
hlt
push
jns
fs
jb
push
shll
fmuls
pop
hlt
pop
add
stos
loopne
into
lods
cmp
sub
jmp
dec
lock
test
ja
mov
cmp
lods
mov
loopne
jl
add
mov
xchg
sub
inc
mov
enter
sbb
pushf
or
mov
inc
dec
test
mov
ss
jl
loopne
cmp
xchg
insb
fisttpll
sub
ret
pop
sub
gs
xchg
cmp
mov
imul
lock
incl
jno
fstl
aad
sub
push
clc
popa
mov
jns
mov
pop
jecxz
ret
pop
dec
push
test
inc
mov
sub
ss
add
cmp
adc
push
lock
mov
xchg
xor
add
add
mov
dec
cmp
ljmp
cmpsl
je
and
cmc
dec
sub
dec
ss
jmp
pop
inc
add
cmpsb
mov
mov
adc
push
pop
jmp
iret
lret
push
mov
daa
fwait
inc
outsl
pop
mov
jge
or
test
fadds
ret
push
enter
loopne
scas
loope
sbb
daa
rclb
arpl
shlb
cs
fdivl
mov
nop
jmp
insb
xchg
cmp
mov
cmc
mov
push
pmulhw
mov
jae
add
gs
scas
sbb
test
xor
and
xchg
shll
xchg
pop
push
xorl
test
lcall
mov
rorl
aad
pusha
lahf
enter
rorl
loop
outsl
jne
cmp
stos
inc
xchg
mov
mov
lret
out
adc
and
mov
and
stos
leave
lcall
flds
inc
aaa
mov
mov
enter
and
mov
mov
push
out
push
imul
mov
push
fldt
lcall
out
lea
adc
ret
mov
mov
sub
ss
stos
bound
jmp
imul
mov
cmp
negb
test
stc
pusha
stc
fiadds
and
popa
push
adc
mov
or
jmp
std
fs
arpl
push
or
pop
dec
pop
cltd
icebp
jb
out
dec
mov
in
imul
ficompl
or
cmp
push
lahf
mov
xchg
sub
int3
xor
scas
jno
or
push
mov
test
lods
lock
pop
jg
xor
insl
mov
lret
dec
test
inc
mov
mov
lock
in
xchg
stos
jge
pop
pop
lcall
push
shlb
lds
es
repnz
in
sbb
call
add
jle
aad
add
add
ret
jb
hlt
or
imulb
insl
cld
es
pop
push
shlb
je
imul
xor
ret
xchg
xor
ret
xorl
xlat
cmp
jmp
cmp
rcl
test
and
sub
rcrl
enter
inc
xchg
or
shr
xor
push
mov
subb
and
sahf
std
aad
cmp
call
loop
lods
out
aas
mov
or
push
inc
ss
ficoms
mov
movsl
jl
int
jb
jno
jbe
sub
rcl
mov
lods
insl
mov
pop
push
xor
xchg
into
mov
dec
add
mov
xorl
push
jb
or
xchg
outsb
adc
insb
lea
adc
lret
pusha
xchg
mov
sub
rorb
outsb
insl
sbb
or
pop
cmp
inc
pusha
pushf
push
xor
mov
adc
pop
mov
pop
push
sub
adc
pop
inc
jb
sub
outsl
push
jle
push
mov
call
mov
sbb
cmpsl
mov
or
fcoml
fcomps
pop
leave
arpl
jecxz
sti
andb
xchg
mov
mov
fildll
add
cmpsl
xor
into
xchg
subb
cmpsb
mov
xor
push
lods
aad
xor
push
mov
fmulp
data16
or
xchg
pop
imul
add
dec
mov
xor
push
ljmp
cmp
xchg
xchg
fidivl
iret
popl
sbb
dec
in
dec
mov
lcall
or
or
sub
and
outsl
push
dec
jno
sbb
push
mov
stc
fsub
push
jl
xor
stc
stos
xor
ljmp
test
fstps
scas
insb
in
lods
sub
dec
push
jl
addr16
pop
inc
lret
lods
sub
push
mov
push
xor
jg
cmp
sbb
cwtl
repz
lahf
wbinvd
cmp
mov
in
les
insl
imul
jnp
cmp
cld
mov
add
or
aas
xor
loop
sub
mov
push
addr16
sub
sbb
lods
shll
ss
call
ss
sbb
push
cmp
sub
xor
pushw
nop
ja
gs
shrb
adc
mov
adc
cs
mov
ret
xchg
lret
int
test
mov
inc
xor
sub
inc
dec
iret
ret
sbb
xchg
out
lret
iret
pop
inc
lret
lcall
clc
aad
add
insl
lahf
cmp
or
pusha
in
dec
mov
adcb
les
ljmp
cmovge
out
xor
sbbb
cmc
aad
fiadds
pop
out
loopne
mov
js
faddl
nop
test
cmpsb
push
inc
in
adc
jp
pusha
xor
jns
push
fildll
aad
jge
dec
cmpl
mov
sbb
mov
mov
ja
pop
mov
mov
sahf
int
test
pop
xchg
jl
incb
pop
mov
fcom
in
inc
push
mov
fsubrs
shl
adcl
mov
movb
insb
test
mov
loop
mov
stos
jmp
push
sbbl
push
inc
mull
lahf
rcr
pop
stos
fs
fcoml
pop
fwait
or
mov
mov
pop
mov
xchg
dec
ja
ret
add
jbe
inc
popa
xchg
push
mov
sbb
into
jb
and
sbb
lret
ficomps
shrb
adc
and
push
push
sahf
xor
iret
sub
push
js
inc
rorb
pop
leave
xchg
xchg
fistpll
movsb
mov
lds
cmp
enter
in
mov
test
xor
xor
xchg
push
add
mov
decb
ret
scas
jecxz
fwait
xor
cli
jb
dec
sub
lret
adc
mov
or
cmpsb
scas
mov
pop
out
ljmp
aad
xchg
and
pop
pop
ficompl
lods
adc
dec
aaa
idivl
sub
loope
xchg
dec
and
inc
cmp
inc
add
or
add
pop
cs
mov
rcll
pop
stos
ja
inc
mov
movsl
clc
loope
je
int
lds
negl
lret
xchg
imul
jl
fildll
jp
testb
sub
jg
jae
sbb
xchg
pop
insb
inc
frstor
jne
sub
lock
and
adc
test
push
add
sbb
push
pop
add
test
or
and
adc
pop
rcrb
mov
sub
mov
and
pop
test
ljmp
clc
pop
and
sarl
sub
stos
fisubl
add
push
rclb
mov
rcll
lock
inc
cld
ljmp
test
std
push
addr16
loopne
xchg
fwait
xchg
cmp
mov
es
mov
sbb
pop
ret
pop
mov
push
mov
clc
in
inc
mov
push
inc
adc
mov
push
test
pop
dec
aas
out
test
mov
xchg
out
test
aaa
cmc
loop
jle
pop
aam
in
sbb
mov
jmp
xchg
mov
clc
pop
sbbl
push
add
lds
out
sub
dec
xchg
mov
sub
jns
xlat
pop
rcrl
ret
and
or
dec
inc
cmp
test
sarl
test
js
lock
jae
push
lret
daa
cmp
aas
lcall
inc
mov
mov
les
ret
mov
aaa
lock
popf
adc
push
lds
enter
call
in
adc
int
leave
rclw
loope
sub
sbb
ljmp
call
sahf
insb
test
ret
mov
aaa
jnp
call
push
inc
fsts
in
cmp
jecxz
mov
outsl
mulb
xchg
mov
add
push
mov
xchg
rcrb
push
in
xchg
add
loopne
cld
xor
mov
mov
inc
imul
xor
jne
or
and
and
ljmp
cmp
rol
pop
jmp
dec
rorb
clc
sub
mov
adc
out
lods
fstl
mov
mov
xor
in
or
adc
pop
and
fistpl
sbb
mov
pop
adc
or
cwtl
push
dec
push
sub
mov
mov
lods
outsb
and
pusha
data16
mulb
loopne
out
jne
xor
into
jecxz
and
int3
fiadds
jg
add
test
aam
sbb
popf
xlat
sub
iret
inc
cmp
lods
dec
mov
or
add
xchg
sub
adcb
sub
aam
rolb
and
inc
push
aam
les
in
cmp
cmp
mov
cmp
sahf
pop
cli
cmp
mov
sbb
cmp
out
xor
and
mov
push
and
jns
jmp
inc
xchg
addb
je
shlb
dec
pop
or
xor
jae
andl
aas
movsb
xor
push
gs
mov
scas
adc
shrl
jmp
or
xor
aam
and
adc
add
repnz
lods
fisttpl
cmpsl
aas
lret
pop
dec
arpl
cmp
add
add
test
xchg
push
mov
or
mov
icebp
rcl
in
dec
push
xchg
and
ljmp
fsubl
xchg
outsl
mov
icebp
pop
lods
cmp
pop
into
mov
enter
mov
aaa
lods
inc
push
push
mov
or
xor
hlt
jnp
or
inc
push
mov
cmpsb
pop
ret
or
inc
pop
int
jbe
pop
int3
pop
int3
sbb
incl
fsubrs
cmp
sub
push
out
clc
mov
shll
lock
mov
cwtl
jnp
dec
or
add
jno
fsubrp
stos
test
loopne
cld
lea
xchg
inc
or
mov
or
jp
ss
fsubs
subl
lret
xor
xchg
out
jnp
std
sarb
mov
mov
clc
ficoms
pop
fwait
pusha
test
jg
mov
mov
mov
inc
push
sub
dec
xchg
int3
mov
mov
loopne
push
mov
mov
xchg
lcall
mov
sub
xchg
test
js
mov
push
mov
or
inc
fcomps
sub
bound
mov
repnz
inc
dec
pop
sti
jp
ja
jo
adc
cli
daa
gs
subb
lahf
xchg
sub
push
enter
mov
aas
push
cmp
outsb
repnz
outsb
outsl
lds
pop
ja
mov
lods
fwait
mov
cmp
sbb
pop
mov
mov
leave
mov
jne
adc
jo
push
in
pop
mov
insl
cmp
loope
mov
icebp
mov
xchg
out
sub
lds
test
sub
sbb
test
jg
adc
data16
jle
inc
bnd
cli
mov
je
pop
xchg
jb
hlt
push
jecxz
cmpb
adc
dec
xchg
fdivrs
add
mov
test
jb
int
mov
int3
les
push
mov
mov
and
enter
loopne
repz
push
jmp
aaa
pop
cmp
mov
lret
sub
add
and
loop
add
test
cmpsb
sbb
loopne
fsubrl
sti
mov
pop
xor
push
int
repnz
aad
mov
sahf
mov
and
addr16
sahf
adc
pop
mov
lock
jns
dec
jecxz
cli
loopne
test
stos
mov
jle
mov
cmp
sti
mov
mov
leave
sbb
sbb
pop
xchg
pusha
xchg
pop
push
lcall
fidivl
dec
dec
dec
cltd
ret
outsb
dec
pop
sub
jne
shll
mov
pop
inc
popf
jl
daa
jecxz
ss
out
adc
mov
int3
pop
rclb
cmpb
xor
pop
ret
dec
inc
rcrb
inc
push
sub
cltd
mov
iret
shll
std
nop
cmp
popa
push
mov
dec
or
testb
out
ret
sub
xlat
pop
loope
jb
xor
pop
outsl
movsb
sub
test
mov
fcomi
popf
fwait
lret
pusha
xor
cmp
out
dec
andb
jle
lds
subl
iret
sti
out
pop
or
daa
cmp
mov
jne
inc
and
in
sub
cmc
mov
sbb
sub
aam
push
lock
aas
inc
and
lret
test
nop
xchg
insl
inc
je
iret
cmpsl
fiadds
divb
push
scas
pop
lea
xchg
out
xchg
sbb
pop
xlat
daa
lahf
out
cwtl
int
adc
and
add
and
jb
out
adcl
out
ss
xchg
mov
mov
fwait
in
pop
sti
loope
scas
movsb
xor
and
lret
inc
cmp
test
adc
sti
xor
addr16
jno
xlat
xchg
cmp
xor
mov
jmp
or
jb
jns
clc
cmp
loopne
inc
sub
jne
push
push
jb
dec
jnp,pt
jo
push
sub
mov
or
and
jg
mov
aad
push
pop
lea
xchg
in
sub
aaa
outsl
or
loopne
lcall
insl
inc
add
dec
jno
cvtpi2ps
sub
mulb
test
and
sbb
xor
test
adc
jmp
dec
insb
inc
aam
jne
sbb
ret
and
xchg
cmp
mov
mov
jge
into
xor
push
ret
inc
xor
push
inc
pop
push
inc
push
adc
andb
mov
std
push
cmp
clc
inc
lcall
mov
pop
in
jg
repnz
call
push
imul
repnz
cli
pop
aas
or
push
cli
inc
xchg
jmp
xchg
hlt
sbb
out
jecxz
fsubr
int3
mov
imul
aaa
clc
div
daa
cmp
cli
mov
and
vmwrite
or
push
pusha
test
xor
aam
and
scas
jecxz
sub
in
roll
in
rol
loopne
xchg
pop
xchg
dec
pop
mov
push
cmp
and
test
sbb
sub
or
mov
mov
aaa
push
cli
cmp
aam
jmp
adc
inc
xchg
hlt
fcmovnbe
std
xor
fsubrl
pop
rolb
daa
outsl
mov
in
movsb
and
mov
dec
adc
sbb
ja
outsl
adc
int
push
jb
sarb
mov
cmc
add
push
hlt
jp
test
leave
rclb
clc
jo
pop
mov
test
and
mov
xchg
inc
lock
pop
pop
sbb
mov
jl
cmpl
pop
lea
cli
mov
push
inc
in
mov
xor
repnz
jbe
dec
jmp
and
sub
imul
sti
or
leave
adcl
mov
movsb
mov
cmpsb
sarl
imul
push
or
pop
fbld
cmpsb
xchg
subb
cmp
scas
out
xchg
fcomip
mov
lods
enter
fnsave
ret
mov
mov
imul
popf
rcl
xor
and
fmuls
xor
out
jmp
fstpl
cmp
push
int
mov
hlt
jl
cmp
sbb
sbb
stos
pushf
and
cwtl
adc
fstl
push
clc
or
stos
mov
xadd
gs
xchg
mov
ds
sub
fidivrl
xchg
or
and
out
or
jl
repnz
pop
cmp
shlb
imul
ljmp
inc
and
push
lcall
mov
outsl
and
dec
add
aam
xchg
lret
into
fdivs
jge
jb
xchg
orl
cmp
mov
and
push
loope
sbb
jmp
push
clc
ja
mull
pop
fadd
push
jle
pusha
shrl
jnp
aaa
in
aaa
adc
out
cmpsb
jmp
cmpb
imul
shll
and
lds
xor
mov
dec
jle
aad
pusha
repnz
aaa
jmp
ja
xlat
lret
fcoms
mov
inc
sbb
mov
pop
stc
cltd
mov
imul
jp
mov
mov
mov
add
lds
daa
cmp
daa
adc
sbb
push
push
xor
add
push
lods
out
ret
xlat
mov
dec
lcall
cmc
jne
adc
das
iret
push
push
push
mov
sub
lret
adc
arpl
mov
cmp
arpl
push
les
rcll
pop
mov
cmovge
aas
sub
push
test
divl
add
pop
push
minps
xchg
jo
sub
sti
test
sub
mov
cmpsl
push
cmp
or
test
ret
addr16
std
xchg
aaa
fiaddl
push
mov
cmpsb
outsl
push
push
xor
xlat
adc
popa
dec
and
jp
ljmp
mov
push
repz
inc
inc
popa
sub
add
sub
leave
shrb
jmp
sub
jnp
dec
cs
sbb
cmp
popa
adc
cmpsl
push
in
jle
or
rcrb
leave
jge
mov
mov
or
inc
xor
xchg
dec
mov
dec
rcl
push
jae
inc
inc
imul
and
fstpl
imul
sbb
cmp
arpl
jmp
cmp
movsl
int
sub
cmp
adc
cmp
dec
loop
pushf
arpl
jecxz
popf
mov
mov
test
shl
xchg
lock
fcom
pushf
out
jmp
inc
fsts
idivl
mov
iret
out
lds
mov
mov
jg
and
pushf
add
repz
dec
adc
fucom
xor
insb
push
negl
jae
loop
xchg
adc
pop
xchg
popf
test
out
cmp
or
into
outsb
repnz
push
mov
call
fildl
decl
push
ret
lock
mov
lds
and
or
sbb
push
jnp
frstor
dec
pushf
std
xchg
lret
push
xor
xchg
insl
out
sub
ret
cmpsb
sbb
push
ljmp
add
pop
xor
es
pop
or
cmp
outsl
shlb
test
leave
fimuls
mov
lock
sub
jle
inc
xor
gs
mov
pop
mov
pusha
sbb
sub
mov
addl
mov
adc
out
mov
pop
jp
out
scas
in
data16
into
shl
pop
pop
push
xchg
xlat
lock
mov
leave
push
cld
fistpl
stc
mov
xor
mov
inc
and
popf
or
insl
jg
shlb
cmpsb
sub
cmp
push
mov
out
in
shll
sub
je
rcrl
or
test
roll
pop
mov
mov
sub
mov
mov
bound
ja
sub
adc
int3
fstpl
dec
int
add
dec
xor
mov
ror
xchg
pop
inc
or
dec
fcomi
xchg
cmp
pop
mov
lahf
lds
sub
frstor
sti
rorb
lahf
int3
pop
cmp
xor
filds
and
out
and
mov
pop
scas
mov
and
std
xchg
sti
mov
xchg
jns
push
leave
fwait
movsb
xchg
ret
jle
mov
mov
cli
pop
dec
inc
sbb
jl
movsl
xor
sbb
or
mov
mov
mov
sbb
call
jge
cld
push
ret
outsl
dec
pop
sbb
leave
mov
test
rorb
and
mov
add
dec
in
sbb
mul
xor
cli
sbb
push
or
clc
lret
push
and
sarl
daa
pusha
xchg
adc
adc
or
int3
fwait
mov
dec
inc
ss
stos
mov
cmp
hlt
shlb
push
sbb
xorb
jne
jns
imul
mov
xor
ret
and
in
insl
out
xchg
inc
nop
push
sahf
push
fdivs
roll
pop
mov
in
pop
or
add
int
mov
xor
xor
lahf
dec
dec
pusha
jbe
je
fwait
ret
adc
filds
xor
xchg
jbe
push
pop
scas
adc
and
les
shll
mov
in
mov
cs
cli
mov
lahf
fildl
stos
movsl
xor
pop
cmpsb
decl
lods
mov
cld
int
cli
adc
pop
ret
push
lods
push
fmuls
xor
cmpl
jmp
lods
inc
das
pop
cs
push
pop
adc
pushw
test
push
ret
mov
push
pop
idivb
jns
sbb
ret
jle
sahf
mov
sbb
jl
or
gs
mov
fiaddl
push
aaa
or
jmp
enter
in
fisubs
loopne
push
cmp
icebp
lahf
sbb
lret
jmp
in
mov
fisttpl
mov
adc
or
adc
daa
adc
xchg
movsl
inc
pop
push
in
mov
dec
orl
mov
jo
pusha
leave
imul
xorb
xor
add
dec
call
sti
and
outsb
mov
sbb
push
movsl
ret
jo
push
stos
jmp
ss
les
sub
shl
xor
shl
bnd
or
fcoms
dec
fbstp
hlt
inc
mov
adc
sub
cmp
lret
adc
xchg
mov
pop
xchg
pusha
xor
imulb
test
or
pusha
iret
jle
sbb
add
xor
out
push
jmp
sti
lret
and
mov
adc
test
xchg
stc
stc
call
inc
jmp
adc
push
cmp
add
mov
in
cmp
mov
ds
mov
int3
inc
mov
aad
outsl
jo
mov
mov
xor
jle
sub
cmp
and
arpl
das
cmp
ljmp
mov
cmp
add
pop
lahf
sbb
lea
mov
sahf
scas
inc
jge
ss
mov
jg
and
mov
xchg
inc
xor
sub
add
fiaddl
mov
dec
and
or
fpatan
scas
repz
mov
lea
sub
loop
test
dec
adc
and
push
mov
dec
sahf
mov
mov
out
repnz
lahf
ljmp
sub
stos
arpl
leave
clc
dec
dec
pop
std
mov
adc
scas
enter
pop
add
xlat
mov
inc
popf
rcrb
rcrb
jecxz
cwtl
xor
leave
shll
cmp
scas
mov
add
add
inc
fidivrl
pop
and
shlb
test
loope
std
sub
cmpsb
xor
out
loop
repnz
add
xchg
cwtl
inc
mov
xchg
scas
xor
or
rorl
int
and
mov
mov
gs
fs
sbb
jnp
cld
call
xor
xchg
lods
add
jecxz
add
fisttpll
cmp
leave
cmpsb
push
aaa
or
cli
cs
xchg
sbb
add
cld
lret
div
dec
pop
dec
inc
and
jecxz
cmpsb
sub
out
je
lock
pushf
and
xor
jb
cmpsl
sbbl
jecxz
inc
mov
jb
stos
or
push
xchg
std
cmpsb
push
dec
lea
jnp
outsl
sbb
lods
lods
outsl
in
push
cli
dec
testl
js
mov
out
mov
dec
push
ljmp
stc
hlt
and
sarb
pop
icebp
decb
push
sub
dec
out
sbbb
xor
leave
cltd
aam
add
into
jmp
repz
aad
cmp
cmp
ds
gs
cld
mov
cmpb
cmp
loop
pop
xchg
subb
jno
subl
loop
sti
in
movsb
scas
clc
push
cmp
mov
fisubrs
in
rcr
jmp
rolb
adc
sarl
mov
les
inc
pop
int3
adc
and
iret
mov
aam
pop
scas
aam
adc
xchg
in
loopne
scas
jae
sti
rcrb
shlb
cmp
cmp
cwtl
xchg
add
pop
add
pop
xor
push
pushf
jge
lock
cmp
sbb
imul
movsb
ljmp
mov
pop
jg
lock
testl
in
adc
ja
stc
xchg
aam
inc
fwait
shlb
ficompl
cmp
push
xchg
inc
es
cmpsl
scas
push
push
adc
std
xor
rcrb
nop
rolb
mov
movsb
xor
add
test
es
call
addr16
pop
lds
dec
mov
or
pop
xchg
dec
pshufw
jnp
dec
pop
nop
pushf
sbb
sahf
adc
fistps
mov
xchg
push
dec
ds
out
and
xor
out
mov
jbe
adc
xor
mov
jmp
pusha
ss
scas
test
incb
xor
dec
dec
mov
lods
jno
jge
and
push
nop
cwtl
pop
in
sub
dec
insl
mov
jge
clc
fisttpll
loope
test
fidivrl
cmp
jne
adc
rolb
add
mov
popa
add
lods
lret
cmp
cltd
xchg
cmpsl
daa
mov
sbb
add
aas
or
pop
ret
and
xchg
sbb
cmp
lds
inc
sub
fdivs
push
pop
fcompl
or
cmp
cmp
pop
rcl
inc
outsb
push
cs
sbb
in
mov
pop
cmpsb
inc
add
mov
cld
jl
in
addr16
sub
pop
into
inc
add
lods
jg
popa
ret
cli
xchg
addr16
sbb
das
fldt
mov
sbb
stc
lds
enter
in
nop
dec
sub
pop
loopne
clc
mov
lahf
imul
fs
pop
stos
add
jae
jne
mov
push
mov
jno
rcr
fldcw
lds
ret
dec
in
test
gs
add
aad
xchg
push
ds
xchg
jg
xchg
push
ljmp
scas
lret
mov
mov
or
cmp
roll
lahf
ljmp
aas
add
and
pop
call
cli
gs
inc
and
fmull
push
cltd
std
and
cld
inc
dec
ret
pop
outsb
rcrb
and
jge
add
fldl
orb
mov
pop
enter
inc
inc
mov
cs
jecxz
lret
jge
and
and
xchg
xlat
inc
xchg
stos
xchg
loopne
dec
movsl
xor
sub
jmp
aam
outsb
pop
insb
pop
xchg
xor
fistps
lret
aas
pop
jg
hlt
pusha
int3
xor
mov
in
inc
or
in
adc
lds
lcall
in
push
ljmp
xchg
mov
movsb
jmp
sahf
les
inc
repz
lods
cmpsb
dec
adc
xor
jle
jp
mov
pop
dec
imul
lret
lretw
cmc
sub
jecxz
push
cld
bound
xchg
mov
div
call
and
sub
mov
fnstenv
jp
mov
cld
push
pop
test
mov
jne
ds
inc
and
in
cmp
jp
push
popf
aas
ds
out
xchg
ror
xchg
dec
je
dec
pop
jmp
jle
mov
shll
mov
adc
sbb
add
inc
sti
cmpsb
iret
inc
jne
fmuls
mov
mul
jecxz
int3
cmpsb
scas
sarl
inc
mov
aad
pop
lock
jne
es
jmp
pusha
pop
out
daa
lea
ljmp
mov
mov
xor
bound
inc
cmp
mov
pop
jne
nop
aas
mov
or
add
lahf
push
mov
stc
sbb
mov
sub
dec
push
mov
inc
sar
jae
add
fstps
xchg
icebp
adc
jns
pop
mov
dec
push
rcll
ret
fwait
ja
adc
jp
pop
xor
es
xlat
popf
pop
jae
jmp
mov
mov
pop
push
js
add
test
rcrl
lret
xchg
data16
or
inc
bound
push
or
aam
arpl
enter
call
dec
xchg
pop
loop
in
es
loope
sub
push
mov
pop
sub
stos
xchg
cmpl
aad
pop
sub
push
orl
sbb
xor
xchg
cld
xchg
inc
ss
shr
adc
mov
movsb
xchg
add
orps
testl
xchg
lret
aam
or
scas
fildl
add
adc
xchg
ret
dec
pop
jb
test
fwait
push
jp
mov
xlat
lret
dec
je
cltd
push
fstl
jecxz
xor
lods
push
jmp
js
xorl
jne
mov
xorl
test
dec
pushf
and
dec
lds
pop
bound
xor
cmpb
adc
jl
add
jl
popf
sub
les
adc
addr16
mull
pop
jae
dec
mov
jae
mov
out
mov
adc
mov
jo
cmp
cld
sbb
insb
leave
jl
aas
and
insl
out
sub
pop
pop
int
loope
sbb
mov
hlt
add
pop
test
mov
sub
sbb
out
mov
fucomp
sub
repnz
jle
and
xchg
inc
inc
mov
push
inc
dec
ret
mov
movsl
test
pusha
adc
lock
ss
sbb
out
cmp
xor
push
adc
pop
mov
add
mov
jo
and
adc
mov
cmpl
jl
test
cmp
data16
cs
ljmp
stc
scas
in
jmp
mov
or
push
jge
jae
xchg
cmpsb
cmp
push
out
andl
and
enter
aaa
hlt
inc
loop
adc
xor
adc
pop
mov
in
cmp
jle
sbb
mov
jbe
rcr
mov
cmp
push
jle
aaa
and
xor
popa
jnp
pop
ss
imul
push
cwtl
pusha
jp
test
in
mov
jb
mov
or
mov
loopne
xchg
add
jo
jae
andb
cmpsl
mov
xchg
fs
xchg
sbb
mov
mov
add
outsl
es
sub
sbb
xor
mov
out
aam
hlt
xchg
add
push
pop
lahf
lahf
fwait
add
mov
mov
jb
pop
adcl
dec
mov
sub
cmp
test
scas
sub
push
pushf
test
imull
push
jmp
sub
nop
sti
sarb
adc
cmp
mov
inc
rcrl
mov
lcall
loopne
pop
negb
push
ja
fs
int3
jns
fisubs
mov
cmp
ss
lahf
cltd
bound
fwait
jp
or
shlb
sub
out
mov
mov
sbb
aaa
pop
ss
jbe
popf
push
rcrb
or
lahf
add
xlat
aas
jmp
xlat
cmp
or
cmp
lods
dec
mov
mov
add
fistpll
scas
xor
add
add
xchg
push
fistpll
xchg
and
mov
xchg
mov
bound
fisubrl
mov
jl
jnp
xchg
dec
test
das
push
mov
dec
and
sub
addb
lods
cmp
mov
adc
or
dec
xsave
shrl
es
outsl
jl
and
ss
fcomps
inc
cmp
movsl
pop
xchg
pop
inc
call
daa
jbe
rolb
rcr
inc
sahf
mov
xchg
push
mov
repz
jnp
or
loopne
or
out
aam
jecxz
imul
repnz
push
dec
inc
ja
mov
sbb
cmp
sub
lahf
ss
out
into
aad
dec
mov
addr16
sub
jae
mov
dec
orb
mov
lahf
int
inc
inc
pop
mov
sbb
das
jns
lahf
sub
ja
sbb
jmp
popf
cltd
pop
sub
decl
fidivrl
xlat
add
stos
adc
in
in
inc
lea
inc
out
mov
dec
aam
out
notl
jmp
xchg
daa
je
xchg
mov
test
pop
sbb
jo
scas
mov
xchg
mov
inc
repz
mov
scas
pop
mov
popf
jmp
test
jnp
mov
mov
add
clc
adc
das
cmp
push
dec
aas
sbb
repnz
or
scas
xchg
and
arpl
jnp
rorb
ss
dec
push
push
adcb
scas
jecxz
add
xlat
mov
add
andb
insl
ljmp
ljmp
ret
mov
pop
stos
hlt
fs
ja
jle
mov
sbb
or
aam
inc
inc
mov
lds
mov
pop
aad
loopne
jge
imul
loop
sub
pop
adcb
mov
mov
loope
xchg
sub
xchg
and
xor
shll
jge
add
cwtl
leave
inc
out
insl
mov
pop
pop
jmp
ds
cmc
les
jmp
int
cwtl
push
sbb
popf
jnp
jp
lock
cmc
push
jae
mov
fwait
jb
xchg
loope
mov
sbb
popa
fld
mov
out
lea
fadds
cld
adc
pop
push
dec
ljmp
xchg
mov
dec
mov
push
inc
cli
pop
dec
popf
repnz
lret
fisttps
cmp
sub
cmp
fs
adc
inc
jno
inc
push
int3
jb
cmp
dec
movsb
jle
repnz
pusha
adc
lret
lods
lcall
push
sahf
bound
mov
inc
sarb
scas
and
fiaddl
stos
xlat
ret
sbbb
push
and
in
mov
or
cmpsb
and
js
push
lahf
xor
into
inc
cmp
insb
out
sub
cli
xchg
sub
dec
mov
iret
mov
jle
or
or
adc
sbb
pop
and
mov
jecxz
leave
add
mov
xlat
inc
shrb
inc
jecxz
or
or
xor
idivl
xor
push
pop
xor
xchg
or
les
xor
xor
out
filds
int3
jnp
sahf
and
add
adc
sub
lods
andb
movb
lea
fsub
sbb
push
ss
outsl
xor
dec
pop
cmp
mov
fistpll
inc
fs
mov
pushf
lock
mov
adc
cmp
out
jb
sub
clc
outsb
jno
and
xor
fstpt
cmp
sahf
in
push
adc
push
jmp
push
jecxz
fmull
aam
mov
test
in
fstps
cmp
cmp
out
sbb
inc
mov
gs
or
mov
pushf
js
jnp
in
mov
fwait
push
inc
or
mov
cli
in
test
or
testl
xor
cmp
pop
push
fbld
sbb
arpl
out
add
mov
mov
rcrb
in
pop
lcall
vdivps
push
add
jmp
mov
loope
stos
mov
scas
xor
jmp
cli
mov
push
adc
or
in
jge
cmp
xor
repnz
lods
jae
in
fwait
push
rcrb
lcall
sti
test
dec
pop
push
sbb
daa
mov
sub
xchg
fiaddl
and
lret
jle
xchg
xor
mov
dec
and
clc
jbe
fsubr
stos
negb
add
sub
insb
push
outsb
int3
js
pop
mov
sub
jbe
std
pop
loopne
push
dec
shrb
rcrl
mov
pop
shrb
adc
xor
test
mov
sbb
cmp
jmp
movsb
sbb
pop
xorl
and
cmp
arpl
aam
mov
sub
mov
sti
sub
and
xor
jge
jg
sbb
mov
add
imul
out
sub
sbb
aaa
es
push
jne
xor
loopne
mov
lahf
and
ds
lahf
pop
in
pop
mov
sti
dec
ds
mov
outsl
pop
mov
mov
cli
dec
pop
adc
mov
and
aam
sub
pop
adc
pop
pop
cld
sub
adc
stc
adc
mov
cmp
add
out
mov
aad
add
js
push
mov
outsb
enter
btc
fldln2
sbb
xor
dec
push
mov
shlb
xor
loop
mov
stos
add
pop
inc
jecxz
lcall
scas
jmp
loopne
cmp
daa
jle
or
ret
jo
jl
sub
xor
mov
push
sbb
add
fs
cmp
out
and
aas
inc
xchg
imul
sub
shl
jp
ljmp
push
and
adc
fstpl
and
jne
or
jg
imul
mov
insl
pop
or
stos
adc
adc
mov
xchg
lea
mov
or
lods
fstpl
mov
push
ret
xchg
stos
sbb
aas
dec
aam
xchg
jb
pop
in
adc
mov
imull
jecxz
inc
mov
inc
adc
mov
mov
dec
mov
lahf
pop
clc
mov
loope
pop
ds
xorb
mov
in
pop
sar
or
mov
subb
mov
arpl
cmc
pop
mov
mov
bound
fmuls
cmpsb
mov
and
mov
lods
xchg
cmp
push
notl
lock
popa
gs
mov
in
lret
sbb
mov
inc
std
lods
or
mov
jno
jmp
add
adc
in
inc
sub
push
fiadds
or
jbe
dec
inc
xlat
repz
mov
jmp
test
fsubrs
inc
rcl
pop
push
jmp
mov
les
ja
cltd
and
cmp
xor
es
push
mov
xchg
mov
inc
pop
leave
fidivrl
lods
sbb
fs
sbb
inc
in
sbb
das
add
mov
pop
dec
out
or
aam
lods
or
mov
jge
je
stos
mov
jle
movsb
sub
mov
cmp
add
movsl
inc
dec
mov
pop
icebp
cmpsw
dec
insl
leave
movsl
inc
dec
push
push
stc
sub
jmp
push
mov
sbb
xchg
popf
imul
cs
les
lock
loop
daa
inc
std
cmp
sbb
shlb
cmp
flds
movsl
sub
mov
pop
imul
mov
pop
xor
xor
movsb
or
fstpl
xchg
push
pop
cmpsl
inc
int
pop
mov
xchg
pop
cs
test
mov
dec
ja
dec
mov
clc
aam
xchg
pop
cwtl
jb
out
loop
lahf
jge,pt
cmpsb
rorl
mov
into
jno
xchg
mov
loopne
adc
fwait
incl
cmpsl
sub
inc
push
gs
jg
ds
inc
cmp
out
loopne
popl
xchg
push
cmp
loope
xchg
stos
sarl
jecxz
push
lret
movsl
push
dec
insb
insl
mov
aaa
mov
add
pop
and
push
lret
jge
into
and
in
mov
lods
mov
push
cmp
and
lock
test
xchg
xchg
mov
sub
jno
push
mov
insb
jl
push
lods
inc
fs
and
cmpsl
addr16
xor
jge
aam
mov
test
push
mov
mov
mov
incl
push
rcrb
sub
mov
jle
aas
cwtl
pop
lret
mov
movb
and
lea
jb
scas
mov
aam
rorb
dec
bnd
and
mov
int3
shrb
sbb
jmp
xchg
mov
jge
aad
in
divl
push
inc
mov
inc
pop
std
insb
cmc
sbb
loopne
and
pop
cld
out
pop
aam
rcll
arpl
sahf
loope
mov
xchg
push
mov
pushf
lahf
shrl
test
fdivl
imul
jge
insb
xchg
push
cmp
dec
mov
imul
iret
xchg
push
cmp
fnstsw
push
daa
jne
mov
leave
pminsw
sbb
add
push
and
mov
sti
sbbl
mov
scas
nop
mov
out
data16
and
jecxz
fistl
loopne
sti
ljmp
sbb
inc
add
dec
mov
sub
dec
loop
sub
cmpl
sub
push
loopne
jbe
lods
pop
inc
into
mov
ds
push
xchg
shr
pop
sub
insl
lock
call
icebp
cmpsl
test
arpl
fs
adc
repz
push
push
sub
push
push
mov
sbb
setb
mov
lock
out
int
mov
add
adc
push
inc
mov
std
add
mov
nop
dec
mov
repnz
mov
lahf
xor
push
and
nop
testb
jmp
mov
sbb
mov
iret
jae
lret
sbb
lock
cmp
pavgb
stos
dec
mov
mov
lahf
lret
int
fucomp
in
push
repnz
stos
lcall
push
xchg
jg
jl
sub
int3
jecxz
rolb
rcll
fidivs
and
sbb
mov
mov
jg
test
mov
mov
push
sub
add
or
test
inc
or
push
dec
imul
push
sbb
pop
mov
xor
stos
mov
call
push
test
loopne
mov
and
aam
fwait
cwtl
jmp
test
or
dec
loopne
cmp
mov
iret
mov
shl
ljmp
adc
jg
adc
clc
loop
push
icebp
gs
and
and
into
jmp
fucom
in
scas
popf
mov
dec
pushf
rcr
inc
in
pusha
mov
sti
push
or
ds
rcrb
cwtl
sbb
fs
jo
pop
decb
gs
sbb
pop
sub
jmp
lods
cmp
ret
outsl
loope
sub
and
push
test
jns
insl
in
jne
into
add
mov
insb
mov
pop
cmp
jno
fldcw
pop
push
xchg
mov
cmpsl
lret
frstor
lret
mov
flds
call
fs
test
xor
rolb
mov
jno
aam
les
jne
ret
andl
out
gs
add
mov
add
loop
outsl
jns
cmp
or
mov
xchg
in
ret
mov
clc
repz
setge
mov
mov
rorb
lods
pushf
mov
jg
pop
iret
push
inc
push
out
xchg
inc
mov
dec
jmp
std
loope
sbb
leave
xor
lods
mov
repz
or
cmp
ljmp
cmp
out
outsb
inc
mov
mov
or
popa
fldenv
sbb
fnstenv
inc
adc
into
pop
cmpsb
ret
mov
out
cmp
ja
mov
in
xor
or
fimull
mov
ficomps
push
sarl
xchg
mov
in
dec
xor
push
mov
or
and
loopne
out
roll
mov
add
jo
std
clc
push
shlb
gs
fstps
dec
push
sub
pop
pop
push
leave
out
inc
pop
sub
xor
mov
scas
dec
out
aam
mov
xor
lcall
in
mov
xchg
pop
adc
rcrb
ss
inc
es
xchg
or
cmp
cmc
inc
subb
mov
cltd
adc
shlb
jmp
inc
xchg
pop
jb
inc
aad
out
ja
jecxz
sbb
jle
scas
cmp
out
add
mov
movsb
push
aam
and
testb
inc
ds
xchg
push
test
in
je
ret
mov
ljmp
dec
mov
jae
ljmp
test
je
adc
lahf
inc
push
xor
push
push
fcomps
je
xchg
push
jg
cmp
adc
ret
lods
fbld
mov
cli
lock
add
pushf
add
shll
ret
aam
in
adc
fsubs
sahf
lea
fs
lods
cmp
mov
mov
in
arpl
movsl
xor
inc
sarb
iret
test
pop
adcb
fldt
sbb
shll
ret
dec
inc
jecxz
imul
inc
sub
sahf
sbb
dec
bound
mov
out
dec
push
fwait
aad
frstor
cmp
add
inc
and
xor
in
mov
adc
push
jg
test
push
pop
int
sub
sbb
mov
mov
out
xchg
rol
pop
mov
pop
sbb
mov
inc
daa
rorb
enter
mov
sbb
jecxz
dec
pop
xor
mov
adc
loopne
mov
frstor
fdivp
repnz
sbb
sub
les
imul
add
xchg
sbb
mov
add
test
stc
mov
inc
sarl
cmp
pop
inc
add
je
fxam
xor
mov
ret
sahf
push
or
scas
incb
out
adc
sub
rorb
mov
loopne
and
mov
mov
jno
les
sahf
gs
aaa
cltd
rcrb
mov
mov
fldenv
pop
dec
bound
stos
cmp
cwtl
addl
or
scas
xchg
jnp
cmpsl
test
iret
insb
sbb
mov
cld
jmp
lret
adcl
lret
inc
adc
xchg
stos
fisttpl
cmp
inc
int
xchg
mov
jno
repz
loop
aas
aas
push
push
in
popf
push
push
mov
test
imul
cli
push
es
jb
in
arpl
mov
xor
jl
sub
in
xor
mov
dec
popf
ret
add
mov
cwtl
sar
loope
mov
cs
adc
roll
push
stos
push
scas
cmp
hlt
pop
dec
out
pop
add
jp
sub
inc
ret
pop
icebp
cmp
mov
fiadds
lahf
ficompl
lods
lea
dec
adc
sbb
mov
orl
in
jbe
fisubs
adcb
cmp
pusha
sbb
add
aam
jb
gs
fisttpl
mov
cmp
int
mov
jb
jo
xchg
push
and
mov
shrl
xchg
mov
cs
mov
pusha
sub
and
mov
cmp
fsubrl
and
leave
outsb
push
bound
jae
pusha
pop
adc
push
jno
and
js
xlat
fildll
jmp
dec
insb
es
xor
sub
fwait
xor
push
ret
jnp
xchg
fists
xor
jo
cmpsl
or
fisttps
mov
cmpsb
cmp
cmp
pop
mov
daa
xchg
mov
jbe
push
pop
ret
cwtl
pusha
addb
test
mov
hlt
add
mov
lds
in
push
inc
adc
dec
dec
cmp
stos
rcll
cmp
pop
cmp
pop
orb
sub
mov
les
movsl
or
mov
and
mov
cmc
rcl
xchg
stc
or
push
mov
mov
xchg
cmpl
outsb
in
setp
add
mov
or
add
int
sbb
addl
and
ds
enter
sti
pop
or
iret
loopne
aad
mov
pop
and
pop
inc
dec
cmp
mov
fsubr
sahf
int
xchg
add
inc
ds
cwtl
fidivl
mull
sub
dec
sub
sub
sub
fldl
outsb
sbb
add
jle
stos
push
lret
sub
mov
fadd
add
in
xchg
mov
leave
call
xchg
popf
inc
adc
xor
jg
xorl
fbld
and
les
loopne
inc
out
xor
in
fs
pop
fnstenv
jns
arpl
jmp
sub
mov
test
dec
sbb
rorl
cmpb
and
stc
jmp
les
ds
call
sahf
pop
loopne
les
or
push
stos
mov
iret
mov
ja
mov
cmpsb
adc
cltd
lods
lds
clc
ret
jmp
xor
into
sub
xchg
xchg
data16
sbb
mov
addr16
sub
test
pop
decb
scas
and
je
rol
test
jb
xchg
fs
mov
cmp
daa
adc
and
xor
pop
xchg
mov
test
mov
mov
es
int
and
je
cmp
xchg
xchg
sarb
int3
dec
pop
sbb
ja
xchg
dec
mov
jge
fnstenv
mov
and
add
icebp
xor
sub
hlt
das
aam
int
sti
nop
add
addl
pop
inc
ret
rorl
dec
les
cmpsb
xor
xor
jno
mov
int3
cmp
xor
fstpt
mov
pop
les
inc
or
dec
nop
sub
and
mov
mov
push
sarw
sub
jg
push
dec
xchg
inc
xchg
aaa
popa
pop
add
xchg
in
shlb
sbb
push
cli
aam
pop
jae
xor
int
lods
inc
push
jno
push
cmc
test
cmp
lret
clc
clc
cmp
xchg
movsl
jge
sub
jle
add
or
fldenv
movsl
cmpsl
dec
jp
jnp
loope
sbb
mov
xor
lret
cli
mov
pop
cmp
popa
jns
or
jbe
repnz
lods
movsl
ljmp
clc
jg
xchg
sub
jge
and
mov
es
xlat
testl
pop
xchg
mov
out
outsl
jecxz
fisttpll
sub
push
cmp
add
lret
add
add
lds
dec
sahf
jg
cmp
aad
add
scas
ret
mov
mov
pusha
jge
xlat
lcall
fwait
pop
cld
pop
leave
out
sbb
cmc
and
xchg
in
jmp
iret
fwait
aas
or
negb
mov
mov
rorb
jp
mov
add
data16
mov
mov
repz
or
mov
sub
mov
push
sub
test
jg
je
enter
cli
xor
jbe
xor
out
cmpsl
xchg
add
and
sbb
decb
or
ret
add
call
pop
jo
stos
xchg
cmp
ret
sub
pop
push
push
push
mov
mov
xor
enter
dec
popf
dec
cmp
mov
rorl
mov
dec
mov
mov
fiadds
test
jne
cmp
jmp
cmp
pop
pop
and
xor
push
ljmp
sub
into
fldcw
and
sbbl
addl
fcmovnu
mov
jae
outsl
scas
insl
push
icebp
gs
daa
mov
and
cmc
movsb
rclb
dec
and
insb
in
lods
jb
dec
sub
in
inc
dec
mov
enter
cltd
scas
or
jl
lea
test
insl
and
bound
cld
mov
inc
push
mov
jae
movsl
mull
xchg
adc
aam
push
daa
mov
lds
sub
push
inc
xlat
in
sub
test
mov
jno
cld
mov
lret
test
sub
les
sub
push
adc
or
js
xchg
cmp
orb
es
mov
xchg
xchg
das
dec
loopne
adc
inc
jg
mov
pop
outsb
fistps
lret
clc
lret
lahf
stos
and
push
cmp
push
fucomi
loopne
aas
shrl
aad
or
rcrb
dec
and
or
push
mov
es
clc
sbb
jmp
or
jbe
jle
mov
dec
pop
pusha
sbb
das
and
lret
lods
sbb
xor
fwait
mov
add
sub
inc
xchg
iret
lock
cmp
test
push
xchg
dec
iret
xorb
loopne
call
push
jmp
mov
adc
jmp
sarb
sub
dec
pop
aaa
and
sbb
push
jl
sub
dec
fidivrl
add
push
push
je
cmp
loopne
jne
test
sbb
test
jno
rol
icebp
adc
mov
in
and
xchg
xchg
push
hlt
jp
cs
adc
mov
lahf
adc
cmp
stos
sub
jmp
inc
out
xlat
jle
iret
pop
cltd
add
int
test
xlat
push
les
aad
adc
cmpsb
sub
into
and
fildll
jg
loopne
pop
jb
jecxz
pop
and
pushf
jnp
aam
in
loop
aaa
lcall
das
mov
loop
pop
in
mov
cwtl
stos
dec
fwait
sbb
inc
and
fisttps
js
cld
loope
mov
jecxz
adc
jl
or
and
or
inc
xlat
and
lock
iret
cmp
jp
andb
aas
xchg
push
aaa
dec
mov
movsl
fwait
xchg
leave
sub
xlat
and
das
jns
jmp
sbb
xchg
push
pushf
inc
push
xor
xchg
je
adc
imul
in
mov
push
xchg
pop
inc
or
lods
dec
popf
cli
cmp
test
test
repnz
std
in
lret
jae
scas
fsubl
pop
fs
push
fs
imul
add
insb
ss
scas
fmull
cld
mov
mov
subb
dec
push
fcmovb
js
rcll
popa
cmp
push
cmp
stos
pop
popf
jbe
nop
inc
sub
outsl
pushf
xor
mov
cli
cmp
pop
ds
ret
out
mov
mov
jo
push
fidivs
rcr
in
cmp
cmp
in
push
lret
je
lret
mov
inc
loope
or
cs
jle
sbb
sar
xchg
cltd
xchg
push
movsb
sbb
push
lret
mov
fimull
fsubp
pop
hlt
pop
or
fmull
adc
ja
push
sbb
mov
push
mov
das
mov
outsb
dec
and
add
lahf
enter
icebp
nop
pop
lds
xor
mov
push
and
sub
push
fstpl
cltd
sbb
into
inc
push
add
jmp
and
fadds
xchg
dec
pop
fildll
jbe
add
push
mov
orb
ficoms
or
pop
mov
pushf
or
int3
jmp
inc
jge
stos
sbb
push
cs
aad
pop
add
push
fcomip
fwait
mov
xor
pop
and
iret
mov
loopne
jg
cld
push
xor
and
add
mov
pop
xor
in
popw
test
dec
or
ss
scas
arpl
cmpsl
inc
adc
cmp
les
in
js
sub
lret
lcall
xchg
jo
jmp
pusha
inc
sbb
stos
cmp
test
iret
pusha
pop
inc
and
inc
insl
movsb
push
and
inc
aad
cmp
add
xchg
lods
subps
push
cmp
call
push
add
xlat
popa
mov
or
dec
jmp
pushf
mov
pop
enter
punpcklbw
adc
xchg
dec
cwtl
add
test
and
pushf
lret
movsb
int3
cmpsb
pop
mov
and
out
xchg
fiaddl
inc
sub
mov
movl
cmp
rcrl
dec
iret
pop
mov
xchg
iret
dec
addr16
sub
ret
xlat
mov
pop
or
sub
sub
sub
test
pushf
insb
sbb
sbbb
ret
sub
sub
lea
in
mov
es
fadds
std
sub
push
fucomi
push
and
mov
into
sti
or
out
lds
or
dec
and
insl
mov
shrb
mov
jo
dec
add
arpl
stc
jle
dec
xor
fnstcw
movsb
mov
pop
jmp
and
std
xorb
adc
sahf
imul
std
mov
cwtl
add
es
sub
nop
scas
jge
jg
je
xchg
daa
add
sbb
push
mov
cld
dec
mov
mov
add
or
sahf
divb
xor
int3
xor
push
cmp
mov
mov
lods
adc
and
dec
inc
nop
cwtl
cli
aam
inc
jg
xlat
test
imul
add
add
inc
sub
mov
adc
out
arpl
loopne
in
lods
stc
lahf
sub
and
repnz
sbb
push
inc
jecxz
cmpb
cmp
inc
mov
adc
xlat
js
ret
sbb
jg
pop
jmp
iret
inc
fldcw
push
inc
cmpsb
xchg
mov
inc
dec
movsl
push
and
stos
lahf
out
mov
cmc
sahf
mov
inc
icebp
test
cli
ljmp
xchg
and
pop
lea
in
repz
jb
popf
or
addl
daa
adc
dec
pop
sub
call
rcrb
les
dec
fwait
sub
imul
pop
push
call
pop
ja
shlb
mov
jb
sar
mov
addb
movsb
pop
dec
mov
cli
or
jl
cli
xchg
aad
xchg
mov
jbe,pn
mov
arpl
daa
repz
mov
nop
ror
mov
dec
cmp
jo
test
xlat
and
and
jmp
adc
cmp
sahf
and
pushf
push
stos
imul
pop
cli
fldcw
add
push
adc
xchg
js
outsb
sbb
imul
loope
std
pop
jge
testl
pop
xchg
xor
dec
es
sbb
js
popf
jmp
stc
stos
mov
int3
jl
ret
pop
repz
pop
pop
sub
dec
bound
and
xchg
cmpsl
arpl
pop
inc
cmpsb
loopne
test
loope
lret
adc
test
mov
jle
jo,pt
fcoms
insl
push
mov
mov
ds
inc
leave
repz
pop
divl
and
jg
pop
pushf
mov
jg
adc
dec
cmc
adc
cltd
pop
mov
mov
mov
xorb
push
dec
cmovl
dec
cmpsb
dec
movsb
mov
fisubrl
inc
scas
jo
cwtl
fisubrs
xchg
xor
mov
jb
mov
out
nopl
int
insb
mov
pop
outsl
cmp
jb
sbb
leave
lods
cmpsl
adc
pop
adc
loop
sub
int
mov
adc
cwtl
xchg
lds
xor
and
jmp
lock
lahf
or
lea
sahf
arpl
or
out
enter
adc
xchg
lcall
push
arpl
push
outsb
mov
ret
pop
rolb
in
subb
outsb
std
mov
orl
cmp
popf
test
sbb
data16
loopne
ficoml
sahf
mov
xchg
xor
adc
pop
or
push
mov
inc
ret
pop
push
cmp
cltd
fildll
in
mov
or
cmp
iret
imul
cli
inc
stos
xchg
mov
ljmp
xchg
cld
into
xchg
test
xchg
push
dec
idiv
in
add
xchg
pop
cmpsl
in
fsts
dec
jne
pop
inc
mov
pop
nop
cmp
sbb
addr16
lods
fmul
and
arpl
aam
repnz
jo
scas
imul
and
out
mov
adc
mov
mov
mov
lea
rorl
cmpsb
lock
lods
shrl
jmp
int
aaa
mov
fldenv
pop
mov
out
das
inc
repnz
lds
jb
push
push
jmp
cmp
jb
xor
sarb
lock
inc
dec
test
sub
push
sbb
data16
cmp
repnz
cmc
imull
icebp
leave
loop
mov
inc
jo
push
xor
xchg
cmp
mov
mov
ss
cmp
outsl
addr16
in
js
or
xor
mov
es
jmp
mov
jmp
out
or
add
add
lea
mov
mov
pop
sahf
data16
js
mov
out
in
or
cwtl
adc
adc
push
push
xor
xchg
adcb
add
sub
push
or
adc
fs
sarl
stos
mov
jnp
in
lods
cmp
movsb
xor
decb
js
inc
je
sub
mov
repnz
test
mov
mov
mov
daa
out
adc
hlt
cli
popa
or
xlat
jo
xchg
jo
cld
cwtl
xor
dec
cmc
sub
push
out
aaa
xchg
cltd
testl
mov
pop
rcrb
insb
out
int3
dec
fidivrs
mov
lea
sub
arpl
push
mov
incb
in
sub
ret
and
out
or
cmpsl
xchg
iret
dec
inc
and
and
inc
daa
popa
xor
and
into
fst
lea
std
stos
xchg
jmp
out
clc
sbb
dec
loope
cmp
mov
sub
in
aaa
jo
fs
sbb
movsb
rcll
pop
xchg
mov
cmp
jecxz
fs
xchg
pop
mov
sahf
dec
or
sub
leave
mov
inc
rcl
sub
sbb
cmp
or
cs
xchg
mov
adcl
xchg
mov
cmp
xchg
push
sbb
pop
iret
lods
ret
mov
mov
xor
inc
in
mov
jae
ficompl
es
fldt
xchg
std
mov
mov
inc
roll
insb
loopne
push
dec
lods
adc
xor
jmp
cltd
add
outsl
xchg
test
jne
or
pop
aam
cmp
pop
std
xchg
cwtl
out
je
stos
dec
mov
adc
and
mov
fnstcw
int
mov
ds
scas
cmp
cmpsb
push
shll
lret
das
out
leave
jle
mov
mov
or
leave
cmp
jp
lcall
push
dec
fsubrs
std
fstl
mov
pop
dec
arpl
hlt
and
mov
inc
es
popf
sub
dec
pop
ret
hlt
pop
jns
pusha
fwait
cmp
inc
movsl
pop
xchg
fs
ja
data16
sbb
enter
in
daa
rclb
fwait
mov
out
ljmp
sarl
out
sbb
fistl
xchg
xchg
stos
add
jo
mov
out
outsb
sbb
ret
jl
rcll
data16
adc
xchg
jne
pop
jnp
mov
sbb
stc
xor
stc
popa
pop
out
into
jmp
push
mov
pop
mov
or
mov
adcl
aaa
mov
imul
jb
pop
out
or
xor
fisubl
or
jp
lcall
cli
cmpsb
in
arpl
stos
out
iret
mov
call
test
pop
icebp
movsl
or
adc
cmpb
pop
cmpsb
stos
xor
jl
test
push
pop
sahf
ret
xchg
shrl
ss
incl
adc
imul
mov
mov
jno
jne
insl
inc
cmp
jmp
push
fucomi
sbbb
into
xor
or
jne
sub
mov
arpl
push
out
out
sub
rclb
lahf
push
adcl
aam
xchg
pop
addb
mov
cli
mov
jae
or
push
sbb
mov
daa
mov
std
hlt
mov
ficompl
jb
fdiv
push
xor
and
outsb
sub
push
shll
imul
jmp
mov
mov
mov
rorl
test
mov
sub
sbb
fsubl
mov
js
fwait
dec
orl
and
jne
xchg
out
into
push
repnz
movsl
cmp
lcall
rorb
decl
shl
inc
scas
sub
mov
cli
pop
cltd
cmpl
or
jbe
popf
lret
dec
fcompl
popa
lcall
fldl
adc
mov
add
pusha
aaa
jmp
add
inc
out
nop
cltd
pushf
mov
cli
in
mov
lock
jecxz
outsb
daa
jb
adc
mov
adc
cmp
repz
lcall
or
inc
inc
mov
pop
jge
mov
add
in
sbb
xchg
pop
dec
pop
imul
mov
aad
jp
cmp
inc
push
ficomps
mov
adc
orb
mov
push
jmp
clc
rclb
fld
inc
jle
dec
int
push
mov
jae
xchg
xchg
xchg
ret
sahf
fildll
repnz
pop
pusha
jno
test
pop
push
adc
jg
popa
imul
hlt
inc
inc
imul
outsl
int3
sub
test
mov
pop
cmpsl
mov
sbb
insb
add
xor
xchg
sub
sub
pop
lock
cld
les
xor
xchg
in
leave
gs
lock
cmp
and
aad
mov
mov
or
mov
repnz
push
clc
loop
add
mov
jns
sti
das
stc
pop
adc
out
push
mov
jno
rcl
mov
inc
xor
ds
sahf
aam
push
mov
mov
out
cli
ljmp
hlt
test
sub
xchg
sub
inc
in
enter
xchg
cmp
cmp
push
push
xchg
xchg
and
lock
adc
out
or
xlat
add
sbb
or
sub
lods
inc
xchg
pop
and
cmpsb
fwait
mov
les
push
clc
icebp
lock
insb
pop
mov
arpl
imull
clc
cltd
xchg
push
xor
sub
scas
mov
pushf
add
sub
sub
addl
movsl
fsubrs
std
stc
movsb
repz
sbb
mov
movsl
dec
ja
insl
push
xchg
xor
push
jno
insl
fistpll
into
mov
sti
outsb
aam
push
daa
inc
adc
imul
add
rclb
lds
adc
ret
sub
lea
push
lods
les
sbb
cmp
js,pn
inc
xchg
push
inc
add
push
adc
xchg
mul
test
in
pop
pop
jbe
rcrl
ret
add
icebp
xchg
sarb
int
data16
or
cmp
sbb
hlt
jbe
movsl
mov
jp
bound
in
xlat
lds
test
add
lock
hlt
fildll
std
inc
cmc
lahf
test
stc
rcrb
or
xchg
rorl
into
pushf
hlt
daa
cmp
movsl
ds
jnp
add
sarl
addl
inc
ljmp
sbb
jmp
ja
and
repz
sbb
cltd
pop
jmp
pop
mov
stos
in
pop
les
add
xor
pop
inc
das
mov
decb
daa
lahf
ret
sub
es
pop
ret
popa
arpl
icebp
lret
mov
jbe
out
cmp
xlat
xchg
jp
pop
cwtl
push
mov
or
adc
cmp
mov
push
popa
mov
sahf
fisttpl
fs
mov
ljmp
lock
jb
test
sbb
sbbb
outsb
mov
pop
push
test
jecxz
lock
push
fs
sbb
jecxz
test
sbb
hlt
cmp
mov
inc
jecxz
loopne
cmp
jb
jne
add
xchg
push
push
cs
adc
xchg
mov
sbbb
mov
dec
jge
dec
and
pop
rcrl
sub
outsb
jns
movb
and
jo
and
lahf
shr
cmp
sarb
inc
insl
sbb
cmpsb
add
dec
mov
mov
sub
adc
loope
iret
mov
nop
cmp
imul
aad
adc
int
outsb
inc
and
daa
stc
icebp
xor
nop
movsl
jne
mov
jp
and
popf
push
dec
mov
push
sbb
in
scas
imul
xchg
mov
mov
xlat
test
or
ret
xchg
loopne
push
push
je
sar
xchg
inc
cmp
push
lea
sti
jbe
lds
fwait
mov
outsl
sub
xchg
call
cmp
mov
xchg
hlt
xor
and
lods
xor
sub
lcall
or
out
inc
jne
popa
adc
std
cmc
cmpsb
dec
pop
setae
push
leave
aaa
aaa
js
pextrw
movsl
mov
or
jae
cld
or
mov
xchg
push
test
mov
test
pop
fs
pop
sub
sub
mov
xor
mov
push
shlb
pusha
outsb
xchg
dec
outsl
mov
fsubrp
xor
inc
clc
orb
jl
xchg
movsl
je
dec
jbe
flds
dec
lcall
cltd
xchg
std
addb
mov
adc
js
popa
mov
pushf
mov
pop
add
enter
fildll
push
sbb
mov
push
mov
mov
xor
xor
ljmp
in
rcll
mov
gs
jg
jo
sub
insb
sbbb
lods
icebp
push
sbb
js
jb
out
push
xor
xchg
insb
ljmp
mov
add
mov
xor
mov
imul
push
sub
inc
lods
adc
jge
jne
add
lahf
ja
jns
and
or
shrb
inc
pop
fdivrs
and
adc
jno
sahf
adc
jno
adc
pushl
sbb
leave
enter
enter
push
and
adc
or
int3
jge
jb
mov
push
fisubrs
inc
fs
stc
enter
in
mov
pop
loope
mov
sbb
push
sar
ja
jmp
pop
cmpsl
iret
sub
lret
jno
outsl
xchg
push
mov
lock
cmp
sbb
pushl
sbb
rol
mov
les
jbe
lock
addr16
sub
xchg
dec
jmp
pop
cmp
aaa
shlb
in
negb
xchg
mov
mov
in
scas
jmp
shlb
mov
adc
lock
xor
mov
mov
test
fdivl
push
daa
pop
aas
lcall
divl
add
fwait
sub
int3
mov
int3
sti
popa
sub
loop
repnz
mov
mov
pop
cmpsl
mov
and
pusha
pop
mov
jns
or
inc
les
mov
in
cmpsl
mov
sbb
and
jno
cs
sub
mov
cmp
incl
adcl
push
sub
and
js
mov
pop
add
xchg
sbb
push
jle
xor
lret
in
popf
xchg
mov
inc
cltd
pop
inc
mov
test
pushf
lret
add
add
jp
jmp
xchg
imul
std
sub
and
and
inc
stc
cmpsl
stos
jecxz
cmc
in
xor
test
stos
lds
movsb
pop
and
sbb
data16
xchg
mov
gs
xchg
test
xchg
out
mov
pop
push
call
dec
aas
xlat
add
stos
inc
jmp
sub
test
and
push
imul
push
das
xchg
rol
dec
mov
ret
push
add
repz
fwait
pop
cmc
dec
gs
int
xchg
outsb
push
mov
inc
sub
push
shrd
fildll
pushf
sub
sub
pop
testl
enter
and
addr16
push
insl
dec
ljmp
and
aam
out
jl
imul
pop
in
mov
lret
lret
mov
dec
mov
and
insb
lods
or
ror
movsb
rorb
pop
add
sbb
mov
aam
enter
into
pusha
xor
rorb
scas
xchg
sar
test
sbb
xorl
add
xchg
popa
aad
push
jae
aaa
sbb
xchg
cmc
cmpsb
loopne
or
jbe
push
xor
xor
push
ret
dec
mov
adcb
insb
push
cmp
xchg
test
sbb
imul
jge
lret
les
mov
push
mov
jns
or
push
ret
add
imul
pop
cltd
data16
cs
movsb
mov
outsl
icebp
mov
pop
adc
inc
push
scas
stos
jle
rorl
push
sub
lods
adc
insb
jno
cwtl
inc
lret
sahf
in
xor
test
int3
push
outsb
mov
inc
iret
sub
ds
xor
sbb
loopne
sub
pusha
xchg
dec
loope
repz
and
xchg
pop
cmpl
out
jo
mov
cld
bnd
lods
push
roll
mov
jno
and
and
cmpsb
and
shll
mov
scas
jle
fcomps
xchg
xor
shlb
sbb
push
add
inc
and
pop
add
push
arpl
ss
and
cmp
push
rcll
mov
aam
add
and
hlt
testb
stc
mov
incb
push
jo
test
bound
pop
gs
gs
ret
xchg
addr16
andb
movsb
add
push
pop
js
ret
pop
xor
or
test
sbb
inc
rolb
fldcw
xor
mov
stos
popf
lret
pop
xchg
or
sbb
sahf
outsl
cmc
push
scas
mull
out
push
cmp
das
mov
or
jmp
mov
xor
mov
shrl
pop
push
shll
les
inc
je
push
pop
jmp
in
lea
xor
mov
jle
sub
push
push
adc
cmp
pushf
ljmp
aam
mov
sub
popf
outsb
push
ljmp
inc
hlt
sahf
mov
mov
cwtl
lret
dec
push
fldt
xchg
jno
dec
xchg
or
clc
imul
xchg
adc
shl
cs
ffreep
icebp
ret
cld
ja
pop
adc
fsubrs
sahf
or
out
sbb
loop
incb
data16
fisttps
sbb
enter
pop
inc
add
push
sub
mov
jae
sbb
stos
lods
mov
or
je
stc
pop
jo
je
test
mov
pop
popa
xchg
aaa
mov
adc
popa
lcall
pop
sub
add
lock
shlb
inc
cmp
lret
push
mov
push
mov
pushf
jnp
push
iret
repz
lcall
mov
loopne
into
pop
cwtl
push
repz
leave
xchg
outsl
sub
mov
into
out
add
add
push
ret
fs
mov
popa
lret
xchg
in
dec
vsqrtss
js
push
addl
push
scas
mov
inc
or
fidivrl
out
xor
cli
jae
mov
adc
inc
adc
jge
sbb
sbb
sbb
jmp
sbb
pop
xchg
sbb
adc
int3
jmp
stos
movsl
push
push
and
fbld
lret
dec
rorl
add
in
outsb
inc
repnz
loop
mov
stos
sub
sub
jg
aam
roll
and
adc
cltd
sti
cld
int3
sub
out
sbb
data16
jo
sbb
aas
fwait
addl
and
jmp
xchg
xchg
es
loop
in
mov
inc
dec
test
nop
mov
jecxz
cmpsl
popa
daa
testb
adc
out
sub
sbb
pop
mov
push
daa
pop
int3
jnp
out
or
xchg
mov
shll
mov
inc
das
ja
and
cmp
adc
mov
aas
cmp
lahf
dec
ficoms
incb
adc
pop
cld
ret
adc
jl
loope
adc
dec
fistpll
cmpsl
mov
sub
cmpsb
into
fistpl
in
pop
lea
dec
pop
sti
jne
cmp
repnz
jle
fildll
stos
sti
mov
xchg
cltd
pop
fisttpl
xchg
sub
sbb
das
ror
insb
shl
mov
lods
scas
push
test
xchg
inc
hlt
cmp
sbb
push
loopne
lods
jns
push
aad
push
dec
imul
lods
std
cmp
fbld
call
mov
in
push
insb
pushf
sbb
imul
xchg
icebp
push
pop
cmc
push
testb
sti
mov
cli
xor
repz
lea
sub
add
xor
shrl
pop
lea
ret
cmpl
inc
mov
pop
enter
mov
subl
pop
push
loop
cmp
jecxz
push
insb
jae
lea
pop
sbb
and
test
lahf
cmp
mov
pusha
sahf
push
testb
inc
fnsave
mov
jecxz
cwtl
rcr
pop
test
or
aaa
cltd
mov
adc
movsb
push
ret
fldcw
cmp
cmc
lahf
dec
arpl
push
sahf
aas
fbstp
mov
lahf
push
jne
in
mov
imul
add
addl
push
push
xchg
repnz
pop
sub
ljmp
cmpsw
push
fidivs
mov
jp
mov
popl
in
pop
cmp
mov
hlt
xchg
out
outsl
jno
fmuls
ret
cmpsb
or
and
mov
push
int3
xchg
fidivrs
and
mov
out
push
xor
andb
mov
gs
cmpsl
add
lods
lea
clc
or
push
lret
push
xchg
dec
int
jne
cli
jle
mov
out
aam
and
stos
or
push
push
pop
add
aas
aam
mov
sub
js
jb
mov
into
mov
cmp
adc
mov
pop
ret
mov
pop
mov
inc
sub
pop
push
aaa
pop
adcb
mov
push
push
in
scas
pop
shrl
pop
push
xchg
data16
cmp
add
xchg
movsb
popa
iret
outsb
in
cmp
cli
stc
gs
fidivrs
jo
cs
cmp
xchg
jmp
data16
sbb
test
add
mov
inc
sub
adc
lock
dec
cld
add
inc
xlat
push
jmp
iret
dec
or
std
pop
push
ss
int3
dec
arpl
xchg
mov
shll
and
ret
outsl
or
je
and
or
stc
xor
outsl
lock
adc
lock
adc
mov
mov
pop
andl
das
xchg
gs
out
pushf
aaa
dec
stos
test
pop
push
insl
loopne
ja
jp
lret
mov
clc
mov
daa
cmp
push
push
orl
leave
testb
adc
iret
and
lret
shll
imul
xor
inc
mov
in
mov
into
adc
sbb
int
pop
dec
lret
and
sub
sahf
test
jge
out
aaa
loopne
mov
cmpsb
pop
ficoms
xchg
or
pushf
add
fstps
push
out
jno
imul
es
sub
lock
inc
mov
cwtl
sbb
inc
push
xchg
arpl
out
push
js
push
xchg
sbb
xor
mov
add
mov
ret
in
mov
and
jb
clc
out
sub
icebp
imul
lea
xlat
fs
push
aad
js
pop
dec
xchg
test
xor
sub
adc
dec
pushf
mov
es
pop
jmp
push
inc
push
and
clc
jmp
adc
adc
dec
sbb
jbe
pop
int
sub
adc
push
pop
mov
ja
mov
rcrb
fistpll
mov
rcl
in
leave
outsl
int
cli
insl
ret
dec
cmp
mov
shl
test
fdivrl
or
push
push
sub
lods
and
cmpsl
mov
aam
xor
push
mov
pop
cld
sub
std
js
lods
cmp
inc
xchg
scas
fwait
test
sti
int
sub
dec
enter
mov
mov
in
push
mov
dec
add
aad
cmp
data16
and
xor
pop
cmpl
stc
jbe
cmp
test
inc
data16
push
and
cmc
sti
mov
addb
test
sbb
adc
cwtl
lahf
mov
fimuls
sahf
mov
filds
stos
out
loope
jg
jp
inc
mov
adc
sub
es
jecxz
jg
xchg
and
lock
mov
fstl
daa
pop
jne
lret
inc
push
repz
cmp
nop
xor
stc
scas
fs
jl
inc
jl
and
fsubrs
movsl
pushf
mov
roll
hlt
jns
adc
mov
faddl
inc
jge
mov
dec
pusha
xchg
outsl
adc
into
mov
in
sahf
and
sbb
pop
in
xchg
sahf
xchg
mov
jae
dec
pusha
jnp
cmpsl
shll
or
pop
inc
arpl
lret
cmp
iret
jb
jl
xchg
aad
push
adc
addr16
add
test
or
add
sbb
insl
jg
or
fs
or
or
test
cmp
cli
aaa
cmp
add
xchg
test
pop
orb
adc
mov
fcom
mov
mov
jg
mov
sub
inc
fisttpll
loopne
push
or
scas
xor
xchg
inc
add
xor
inc
inc
cmpsb
mov
dec
jns
cltd
cmovno
fldt
push
cmc
sub
xlat
ljmp
mov
lcall
shll
sub
rclb
lods
fwait
adc
and
push
mov
clc
sub
cmpsl
xor
shll
xor
cs
add
mov
dec
dec
or
arpl
cmp
insb
or
or
mov
mov
aad
pop
sbb
push
insl
sub
mov
fidivs
ror
mov
sahf
enter
test
xor
pusha
mov
jge
aaa
inc
stos
shrl
add
das
aad
push
sub
mov
shlb
dec
stc
add
push
and
scas
insb
bound
fnstenv
mov
and
sahf
and
sub
jne
cmc
icebp
test
stos
pusha
cltd
pop
scas
fistpl
roll
fnsave
jae
dec
cli
mov
push
add
loope
jno
add
xor
sbb
ss
sub
fcomp
popf
jl
xlat
andl
cmp
jl
mov
adc
gs
sub
adc
insl
out
or
jo
sbb
push
xchg
inc
rorb
mov
out
dec
les
mov
insb
mov
or
push
cld
int3
dec
int
jle
push
add
cmp
jg
pop
cmp
movsl
mov
ljmp
cmp
xor
gs
xor
or
cmp
inc
mov
push
aam
rcll
and
test
insb
nop
mov
dec
out
push
andb
je
sub
sub
call
push
daa
jl
jae
push
outsb
push
mov
imul
test
lret
iret
rcll
xor
dec
sub
pop
inc
in
loope
icebp
add
imul
and
jmp
arpl
iret
and
xchg
imul
pmulhw
or
shll
cmpsl
or
xorl
dec
push
adc
and
loopne
jge
jp
push
arpl
jno
xor
sbb
loop
push
jmp
push
xor
clc
ficoms
mov
jnp
fmul
dec
jecxz
sub
int
in
aad
ljmp
scas
sub
je
jp
dec
and
cmp
mov
orl
mov
sub
or
pop
nop
stos
and
pop
cltd
add
mov
neg
loop
xor
mov
xchg
xor
xchg
adc
hlt
jnp
mov
jmp
fistps
mov
lea
cmp
mov
pop
jmp
xchg
mov
inc
fidivs
pop
and
xor
sbb
dec
ss
int
sti
inc
jge
pop
pop
or
cmp
scas
xchg
dec
ret
xor
iret
xchg
test
adc
fisttps
jb
add
cmpsb
cmp
xchg
daa
popa
push
call
pusha
mov
pop
push
sbb
jg
adc
in
push
repz
push
leave
aaa
adc
sbb
and
loopne
or
pop
shll
iret
add
xchg
add
cmp
mov
les
xchg
add
out
push
sub
iret
inc
stc
mov
xor
pop
mov
enter
scas
add
fmull
sub
dec
jb
sbb
inc
mov
or
xchg
imul
paddsb
cmp
push
ss
cli
stc
dec
xor
jg
jp
pop
add
dec
mov
pop
jmp
xor
sub
lods
push
jb
loope
pop
or
jo
scas
jne
or
popa
and
push
outsl
les
rorl
imul
jbe
iret
sahf
mov
jno
and
inc
fsts
mov
inc
and
lods
stc
lds
and
jge
les
iret
fs
jge
sub
clc
or
mov
movsb
movsl
cmc
imul
or
push
fwait
xor
clc
rcrb
insl
cwtl
mov
test
addr16
mov
mov
lret
rcr
adc
scas
sbb
xchg
shlb
or
enter
std
imul
sbb
notb
jno
mov
test
jae
imul
dec
xchg
ljmp
push
jne
adc
adc
jg
add
stos
xchg
xor
mov
shrb
add
jne
add
ss
mov
pop
test
shll
mov
pop
cmp
mov
mov
into
push
in
jl
or
mov
dec
cmp
adc
lret
mov
cli
mov
shll
mov
sbb
lds
rorb
pop
lods
gs
clc
mov
cmp
xchg
addb
jae
sub
int
lret
mov
jbe
fxch
xchg
xor
notl
cmpsl
popa
pushf
xchg
pop
pop
jecxz
and
movsb
in
xchg
xor
pop
push
lock
xchg
leave
mov
shll
out
filds
repnz
dec
add
sahf
dec
jnp
mov
sti
jo
mov
pop
or
test
popa
dec
repnz
sub
jo
xlat
sbb
fnsave
xchg
add
pop
insl
cmp
mov
xchg
dec
int3
jbe
or
dec
or
mov
pusha
fildll
sbb
add
xchg
push
push
in
leave
mov
jne
outsb
xchg
cmp
mov
test
push
jno
add
push
add
jle
cli
pop
mov
push
sbb
ficomps
cmc
xchg
lcall
pushf
addb
movsl
xchg
inc
out
mov
cs
lret
sub
aam
cmpsl
aad
push
aas
inc
mov
mov
add
cmp
loop
test
sahf
or
shrl
push
adc
imul
pop
pop
xchg
cmpsb
push
pop
push
scas
repnz
stc
adc
mov
add
or
jne
xor
and
int3
fldl
xor
je
test
pop
icebp
mov
pop
push
shl
xchg
mov
sub
movsl
inc
adc
fcomps
jmp
jp
mov
sub
jne
jl
js
shl
mov
jecxz
pop
out
mov
push
mov
mov
imul
lock
popf
stc
add
mov
inc
fs
lahf
scas
cmpsl
sub
push
mov
dec
or
cld
or
or
xor
out
int3
lret
stc
or
pop
jae
and
leave
popf
jae
loopne
jns
adc
inc
lcall
insl
push
xor
addr16
mov
enter
mov
imulb
mov
jae
inc
cmc
mov
ja
fsubs
xor
jbe
xchg
mov
lea
lcall
jg
add
lcall
out
fcmovb
xchg
push
push
inc
sbb
js
mov
jo
rcrl
sub
cmp
and
in
push
shll
cmpsb
add
adc
call
imul
fwait
inc
dec
mov
pop
dec
addr16
dec
call
inc
sub
dec
mov
xlat
cltd
jl
lea
xchg
sub
xchg
and
mov
cs
jnp
iret
orb
inc
push
popa
pop
lcall
cmp
test
mov
scas
sbb
mov
cmp
ficompl
xlat
mov
inc
inc
jle
xor
push
movsl
and
mov
pop
in
insb
cmp
jle
cmc
rorb
mov
jb
xchg
pop
xchg
out
cmc
int3
jne
jg
push
push
mov
pop
jge
pop
hlt
add
inc
lea
xchg
aam
sti
rolb
adc
or
xchg
ljmp
mov
loope
xor
sbb
lods
ret
aas
call
inc
cmp
sbb
ffreep
mov
push
bound
movsb
dec
sub
jne
and
je
pop
shll
aaa
popf
int3
push
push
cli
jnp
xor
cltd
pop
ret
pop
push
das
jb
mov
rolb
pop
rcrb
imul
push
xchg
xchg
mov
dec
sub
adc
mov
jmp
aas
jmp
fldl
dec
adc
push
daa
add
addb
push
xor
mov
shl
adc
lret
lret
mov
push
xlat
movsl
insb
mov
mov
xor
daa
gs
jp
nop
inc
pop
xchg
xor
mov
movsb
jp
rolb
mov
cwtl
jge
cmp
and
pop
cmp
mov
mov
xor
fdiv
mov
jno
andb
sbb
jmp
lret
lahf
push
xor
mov
lock
in
add
push
lea
add
rclb
pushf
les
std
scas
adcl
pop
jmp
mov
dec
inc
dec
inc
aad
out
dec
adc
sbb
out
jae
xor
fs
ret
sbb
fsts
loop
dec
js
xchg
cmc
lret
push
pop
mov
cmc
inc
xchg
adc
xchg
enter
pop
int
add
and
lahf
stc
les
jns
popa
mov
icebp
push
inc
loop
and
aad
sbb
sub
shl
sub
pop
test
test
ja
sub
dec
insl
xlat
in
inc
pusha
shll
mov
add
sahf
adc
sbbb
sahf
adc
inc
mov
test
lds
fistpl
lods
adc
int3
aam
sub
stc
push
pop
dec
fmull
aad
jno
mov
mov
and
out
scas
push
cmp
iret
pop
add
adc
sbb
sar
sub
psubsb
xchg
daa
jl
push
push
or
ljmp
cmp
mov
adc
mov
les
jecxz
call
jno
popa
repz
fs
insl
movsb
jg
test
push
movsb
imul
mov
push
test
imull
cmp
mov
inc
add
out
jne
call
das
jnp
adc
popf
push
scas
pop
jno
js
fwait
dec
mov
xlat
aaa
or
out
cmp
mov
push
leave
and
jg
push
xchg
scas
xchg
inc
push
mov
cmovl
mov
rorb
cmc
push
push
lods
mov
mov
cmpsl
shll
adc
jne
mov
jg
mov
jae
pop
imul
pop
in
jb
mov
out
hlt
cwtl
mov
ret
mov
lods
mov
ss
pop
jb
daa
repnz
leave
dec
movsl
fldcw
sub
cld
cmp
div
adc
inc
les
ja
xchg
sub
stos
sbb
xchg
xchg
repnz
and
cmp
aam
leave
aaa
lods
mov
push
jecxz
js
fldcw
mov
sahf
lret
xor
sbb
gs
imul
scas
int
sub
stos
inc
outsl
push
bnd
insl
mov
mov
and
loopne
scas
fistpll
dec
or
mov
insb
loop
mov
js
xchg
iret
sbb
mulb
loope
sbb
lahf
sbb
and
mov
mov
fimull
pop
aam
push
cwtl
out
ret
jne
xchg
push
xchg
adc
jp
ja
xor
push
lret
mov
sarb
mov
in
pop
jbe
pop
hlt
push
inc
sub
scas
pop
std
lahf
stc
imul
xchg
mov
and
call
jle
mov
sbb
rcll
push
ret
addr16
jb
mov
xor
imul
fwait
or
leave
cs
xchg
or
out
xor
add
ljmp
es
sbb
lods
adc
lret
pop
repnz
pop
ja
sub
cmp
loop
mov
fldenv
cmp
cli
push
inc
shrl
test
ds
dec
stc
ja
orl
aaa
mov
add
sbb
and
or
cmp
and
ja
daa
ret
lret
push
xor
add
push
scas
pop
xchg
mov
or
ror
ss
xchg
cli
xchg
push
imul
pop
les
jge
push
daa
imul
pop
add
jbe
in
pop
cld
jl
add
mov
clc
push
test
aam
idivl
aaa
inc
dec
shrb
pop
jmp
int
lds
out
sub
insb
push
sub
lods
shlb
popa
jg
dec
mov
arpl
add
ds
ljmp
aaa
push
xor
mov
sbb
mov
mov
bnd
xchg
pop
inc
inc
add
push
xlat
ss
mov
cmpb
rcrb
std
out
xor
mov
jg
mulb
push
test
add
loopne
sti
pop
fidivl
add
mov
lods
into
mov
cmp
jb
xchg
stc
ss
mov
pop
xor
mov
sub
mov
mov
mov
sub
mov
inc
and
in
mov
out
mov
aam
pop
push
jne
or
sbbb
jns
stos
lea
ret
das
aam
sub
in
inc
neg
jge
mov
mov
punpckldq
mov
sbb
add
add
daa
inc
adc
inc
out
mov
mov
loop
scas
mov
fistl
add
cmp
push
aad
pop
mov
in
pop
out
or
iret
scas
rcll
inc
sub
xchg
lahf
ret
pushf
mov
lds
dec
aaa
and
fstpl
lods
sub
sahf
bound
into
aaa
xchg
inc
adc
xor
int3
push
or
pop
push
push
add
xorb
ret
pushl
movsl
in
daa
xchg
pop
out
mov
xor
pop
repz
test
push
daa
iret
out
mov
cmpsl
inc
dec
push
pop
cmp
jae
mov
xchg
leave
or
es
ja
sbb
lods
add
jle
cwtl
add
jge
pop
inc
xchg
inc
loope
movsl
adc
shrl
mov
not
sub
nop
mov
inc
adc
jge
popf
xchg
dec
lock
push
leave
and
movl
jmp
jp
mov
into
jle
test
cltd
inc
sub
push
jne
repnz
pop
movsl
movsl
xchg
add
ljmp
mov
adc
repnz
push
in
sbb
ss
mov
jnp
andl
adc
daa
jb
lock
int3
je
xor
inc
xchg
pop
loope
dec
in
fistpll
pop
push
jae
pusha
jnp
push
sub
ds
inc
rolb
inc
lods
hlt
and
push
pop
fwait
cmp
pop
outsl
xor
popf
fisubrl
arpl
dec
xor
mov
lock
test
mov
mov
pop
ret
aaa
push
test
outsb
xchg
add
stos
daa
adc
jns
inc
and
dec
cmpsb
push
fstpl
into
iret
cltd
xchg
sbb
divb
stos
dec
nop
cmp
dec
ret
lods
or
mov
lret
lahf
pop
fadds
and
pushl
scas
add
iret
mov
cld
jns
lods
ret
repz
lock
pop
jo
shll
repnz
dec
imull
pusha
ffree
fisubrl
mov
iret
outsb
adc
sti
ss
in
push
out
clc
mov
test
lods
icebp
dec
xchg
xchg
mov
adc
jns
jmp
mov
mov
xor
je
push
sar
js
sub
mov
sub
sti
xor
sub
out
fucom
mov
dec
lds
adc
inc
pop
cmp
mov
mov
sbb
rcr
xor
jp
push
loopne
push
dec
mov
arpl
mov
lods
and
ss
push
in
ja
fsubrs
shll
fdivl
cmp
dec
addl
shlb
add
adc
mov
jle
inc
enter
loopne
addl
js
pop
pop
cwtl
inc
jnp
outsl
fwait
xchg
and
mov
dec
jae
or
into
adc
fdivrs
or
lahf
inc
subl
xchg
mov
fcoml
adc
pop
arpl
lods
icebp
sub
or
pop
lods
daa
fimull
push
movsb
push
pop
jmp
nop
mov
lock
sbb
enter
xlat
dec
fdivp
push
lock
andl
rorb
rcll
adc
pop
insl
inc
mov
push
nop
clc
pop
mov
pop
movsb
aad
jg
jbe
adc
lea
inc
int3
adc
sbb
sbb
ret
fidivrl
mov
idivb
and
in
dec
push
sahf
mov
int
mov
adc
add
jge
sub
or
cld
sti
cmp
fs
out
test
pop
sbb
jnp
sarl
popf
pop
stos
stos
out
mov
add
sbb
push
or
stos
inc
jecxz
cmpsl
dec
in
in
subl
or
pusha
xor
sub
popa
and
jno
xchg
jo
ljmp
lea
cmp
shrb
xchg
scas
mov
imul
rcl
jp
pop
pop
lea
push
fidivrs
jnp
or
sbb
movl
leave
test
or
jb
xchg
in
shl
mov
ret
add
mov
inc
mov
jae
aaa
loop
data16
icebp
push
pop
insl
into
xchg
out
sbb
fisubl
push
lds
cmp
and
repz
or
in
dec
mov
mov
xor
gs
daa
pop
cltd
sbb
ret
xor
and
sub
repnz
dec
lcall
es
jb
cmpsl
add
dec
cmp
imul
stos
pusha
mov
mov
xchg
pushf
dec
and
movsl
mov
cmp
movsl
mov
jge
push
sub
insb
inc
scas
mov
imul
adc
jno
fnstenv
mov
lahf
das
lods
dec
mov
cmp
mov
pushf
dec
lods
or
xor
mov
or
shll
into
and
dec
mov
fsubrs
rorb
fcoml
int
fcoms
or
push
xchg
or
push
fists
mov
or
insb
mov
call
or
hlt
outsl
adc
xchg
adc
in
popa
mov
mov
mov
sub
add
mov
push
aam
out
xchg
xchg
popf
in
nop
mov
cmpsb
adc
aam
test
mov
adc
mov
movsl
mov
add
negb
inc
test
xchg
pop
out
add
test
jge
and
sbb
fldcw
mov
das
seta
jnp
and
roll
ljmp
icebp
or
sbb
rcr
in
aas
adc
sbb
repz
pop
xor
ret
mov
imul
mov
fnstenv
xor
mov
dec
mov
lds
stos
inc
in
lock
add
in
xor
sbb
sbb
push
out
sbb
out
mov
jl
mov
push
mov
mov
popa
mov
and
leave
repnz
popf
dec
stos
outsb
pop
adc
xor
dec
dec
test
mov
shll
jno
push
mov
xchg
adc
add
std
cmp
mov
mov
fs
leave
es
mov
sub
xchg
jmp
sbb
and
xor
es
pop
cmp
fs
aas
adc
enter
gs
test
or
fwait
in
bound
dec
xlat
cmp
movsb
push
or
cmpsl
insl
mov
and
add
mov
test
push
mov
cwtl
inc
stc
lock
dec
addb
inc
mov
xlat
jl
pop
sbb
mov
adc
cmpsb
pop
or
and
lret
mov
xlat
cmp
std
xchg
loopne
or
sub
sbb
fnstsw
and
out
sub
test
push
pop
xchg
out
cwtl
mov
rolb
leave
or
push
test
sbb
aaa
ljmp
int
das
mov
pusha
push
mov
dec
cmpsl
xchg
fcmovu
sbb
sbb
jno
scas
fsubr
mov
inc
add
loop
outsl
cmpsb
or
cmp
mov
xchg
cli
adc
jmp
sub
xor
test
inc
or
sbb
lods
filds
aas
jnp
rol
imul
call
out
xchg
das
in
hlt
shl
cli
lea
xlat
cmp
cmp
std
adc
pusha
ds
testb
adcl
popa
in
mov
mov
add
aaa
jnp
or
gs
in
ss
scas
push
push
sbb
out
dec
orb
or
xchg
aas
sarl
movsl
lea
xor
mov
pushf
mov
adc
cmp
inc
lods
inc
orb
fcompp
mov
inc
and
dec
jbe
inc
push
adc
xorb
cmp
push
stos
inc
iret
add
sbb
fidivrs
xchg
mov
stos
pop
adc
pop
xchg
or
jge
maxps
or
stos
loopne
shl
sbb
push
pop
out
push
fs
imul
daa
pop
gs
add
int3
arpl
unpckhps
gs
outsl
sub
adcb
push
cld
mov
push
inc
loop
lret
hlt
xchg
xchg
daa
mov
lcall
clc
cmp
add
sahf
int3
mov
inc
jae
sbb
xor
fs
xor
repz
cli
lods
sbb
aas
push
jg
sbb
push
fsubl
jns
adc
nop
mov
inc
sbb
and
push
rorb
inc
test
and
push
in
subb
es
popa
test
lret
cmc
imul
dec
pusha
push
daa
ret
sbb
inc
cli
enter
test
outsl
xchg
into
xchg
outsb
ficoml
sbb
jb
es
mov
dec
or
push
in
dec
mov
mov
fmul
shrl
sbb
add
fiaddl
cmp
jbe
fsts
pshufw
and
add
mov
push
mov
mov
adc
add
ret
mov
cli
sbb
jle
call
hlt
popf
sub
sbb
xchg
sbb
dec
sti
sbb
or
jae
mov
shll
aas
sub
adc
fisttpl
xchg
cs
fdivr
lods
jae
jle
test
pushf
int
jbe
ljmp
or
or
inc
cmc
lock
pop
pushf
decb
lds
out
fcoml
jmp
mov
filds
xor
repnz
add
rcrl
loopne
repz
inc
sti
jle
ds
jns
cmp
pop
scas
pop
mov
scas
push
popaw
push
xlat
ljmp
test
popf
pavgw
sbbb
int
pop
loope
aad
pop
out
mov
adc
xchg
xlat
fstp
and
cmc
or
pop
pop
rorb
and
push
xor
cmp
rcll
cmpsl
lret
dec
adc
popa
ja
leave
dec
vpminub
das
repnz
hlt
hlt
loop
aad
idivb
jecxz
mov
mov
adc
sarl
cld
hlt
repz
fistps
insb
stc
cwtl
dec
fldcw
xchg
loopne
mov
imul
sub
xchg
test
adc
push
cmp
aad
or
push
mov
add
lods
mov
and
lods
xchg
popf
push
fs
add
add
or
enter
sarl
shll
dec
fwait
mov
sti
jp
inc
or
sbb
rorl
imul
pop
push
and
jb
pop
and
daa
mov
push
movsl
movsl
pop
push
cmp
call
nop
adc
mov
std
or
ror
pop
and
mov
cmp
dec
adc
dec
test
aas
into
jecxz
jne
fmull
loope
loop
xor
pop
stos
add
shrl
mov
addr16
call
xor
jle
jge
xor
inc
cltd
mov
xchg
xor
mov
jno
mov
mov
cmp
into
cs
popa
or
fisubs
fwait
sbb
loope
fcmovb
xchg
mov
sub
insb
out
cmp
and
stc
jns
sbb
je
pop
shrl
loopne
pusha
cmc
adc
sbb
or
ljmp
clc
mov
pop
push
or
pop
mov
jno
lds
repz
sahf
mov
je
xor
ficompl
dec
mov
jae
es
mov
mov
inc
pop
inc
inc
xorl
mov
test
test
push
pop
cs
aaa
jo
mov
fmulp
test
mov
int3
mov
minps
fstpt
dec
sbb
add
rcll
aas
loope
js
jecxz
repnz
inc
lock
mov
xor
test
pop
or
test
fwait
pop
sub
mov
xor
clc
repz
sub
inc
test
dec
lds
xlat
daa
adc
lock
es
sbb
mov
fs
mov
mov
jmp
push
cli
test
lea
pop
int3
push
and
xor
addr16
das
mov
test
or
adc
jne
dec
loopne
cmpsl
xor
xchg
xor
xor
insb
fstpl
dec
pop
lea
loope
test
dec
sub
shrl
and
mov
xlat
sti
fsubs
mov
out
sub
dec
sbb
fsts
lcall
pushf
shrb
sahf
push
xorb
and
pop
pushf
pop
dec
xorb
and
scas
daa
lcall
sbb
mov
mov
daa
das
push
adc
xchg
mov
dec
xor
dec
push
clc
into
ret
cmp
cmp
test
add
mov
xchg
pop
arpl
scas
ret
ss
in
jnp
test
sub
cli
bnd
add
frstor
mov
sti
stos
bound
aad
sbb
mov
and
push
mov
push
push
push
gs
outsl
fnstcw
jmp
cltd
out
sbb
mov
jmp
jl
jecxz
mov
imul
shr
leave
cmpl
fmul
cmp
dec
ficoml
jb
and
mov
add
push
lret
mov
dec
mov
in
pop
aad
pop
sub
cmp
bound
pop
cmc
push
jle
cmp
pop
cmp
mov
leave
insb
jae
push
or
or
fnstenv
inc
jns
inc
aad
pushf
xchg
iret
and
mov
add
cmp
out
jb
pop
and
xchg
scas
or
movsb
push
mov
mov
idivl
imul
cmc
cmp
jbe
cmp
call
xchg
ss
lret
insb
fisttps
mov
jle
or
adc
fsts
xor
sar
or
mov
and
and
and
dec
bound
sarb
mov
xchg
add
push
xchg
add
movsl
adc
push
sbb
sbb
pop
shlb
mov
push
jge
les
or
jae
mov
ret
mov
fimull
mov
push
push
neg
sbb
pop
mov
mov
xchg
push
xorl
insl
iret
aas
lds
and
pop
or
xchg
push
mov
sbb
hlt
loope
mov
int3
bound
les
arpl
jecxz
mov
ds
add
and
into
cmpsl
clc
mov
mov
pop
push
ror
add
xor
repnz
xor
xchg
cwtl
inc
into
or
xor
jmp
push
jo
dec
mov
xchg
sti
or
adc
inc
ljmp
data16
in
sarl
ljmp
pop
insb
gs
inc
pushw
push
popa
adc
add
insb
ja
sub
mov
add
decl
mov
sti
add
mov
adc
add
repnz
adc
nop
push
leave
sub
mov
fstl
subw
adc
sub
out
xor
pop
repz
aad
pop
pushf
push
stc
cmp
inc
sub
pop
js
jb
ja
pushf
pop
pop
jnp
sub
insl
mov
pop
int
mov
out
or
jle
cmc
xor
mov
notl
inc
and
int
fistps
jbe
inc
push
repz
mov
loope,pt
mov
out
or
pop
push
inc
notb
out
push
je
mov
movsl
imul
fldt
aam
pop
and
inc
mov
inc
outsb
leave
sarl
rcrl
addr16
out
pop
jb
xchg
mov
int3
daa
mov
ljmp
push
jmp
dec
lcall
lret
ljmp
mov
jg
fnstsw
adc
inc
repz
sbb
push
daa
lods
repz
pop
cli
push
mov
jnp
mov
es
in
push
int
in
cli
jno
dec
xchg
hlt
je
pop
cmpsb
mov
adc
ret
jg
je
xlat
sub
inc
push
jae
dec
shlb
mov
add
shll
lret
xchg
ds
mov
add
imul
scas
push
mov
stos
xor
data16
push
cmc
or
test
outsl
out
cmpsl
addb
popf
mov
inc
cltd
cs
pop
jae
add
in
push
call
adc
inc
ret
sub
popa
test
sub
test
insl
xchg
xchg
into
outsl
jae
inc
mov
cmc
xor
enter
aas
insb
and
into
jns
or
icebp
popa
mov
inc
dec
cmpsb
jbe
pop
lcall
xor
pop
pop
cmpxchg
into
cmp
fiaddl
shlb
xor
inc
ret
dec
test
xor
imul
lods
in
lea
push
cmp
xor
and
ss
call
test
pop
outsb
roll
jg
mov
in
daa
ss
jne
fidivs
xchg
jb
inc
imul
pop
xchg
mov
jp
xchg
add
mov
mov
mov
testl
fnstenv
fistpl
jle
movsb
sbb
and
movsb
fimuls
adc
push
inc
xorb
scas
stos
xchg
jp
xchg
xchg
pop
adc
ret
into
out
xorb
xor
faddl
xchg
inc
mov
movsb
push
jl
sbb
fdivl
aad
pop
sbb
test
dec
xchg
movsl
pop
addr16
cmc
leave
dec
lret
ss
subb
and
jle
into
notl
ret
repz
jo
adc
or
xchg
pushf
mov
loopne
pop
ja
push
or
mov
dec
lahf
call
mov
loopne
mov
aad
aam
mov
xor
dec
push
jbe
enter
js
das
cmp
dec
js
cmp
mov
cmpsb
push
je
mov
idiv
or
aaa
or
push
jl
cld
xchg
roll
scas
pop
mov
add
ss
mov
push
adcl
jns
das
sbb
call
cwtl
jmp
sbb
aaa
mov
andl
mov
jne
mov
sarl
idivb
cmp
dec
je
popf
pop
cmp
inc
sub
cld
repnz
in
js
lods
inc
mov
pop
dec
mov
jg
or
pop
adc
test
ja
xor
iret
pop
fxch
and
sub
inc
inc
popf
push
addr16
push
push
xchg
push
lock
in
cli
pop
iret
jo
adcl
sub
insb
paddsw
push
push
jg
cld
out
data16
stos
dec
mov
xor
xchg
loopne
stc
add
pop
cmp
push
xchg
mov
lahf
test
dec
or
jnp
mov
add
sahf
mov
decl
sbb
pusha
sarl
or
or
sbb
in
cmp
stos
pop
movsb
js
pop
mov
inc
mov
lret
mov
push
jp
inc
jl
push
sbb
pop
or
mov
dec
enter
or
repz
pop
jnp
cli
dec
pop
mov
pop
in
pop
mov
mov
jecxz
in
pop
push
push
jnp
mov
test
repz
aam
incb
popa
enter
es
rclb
arpl
rorb
imul
fs
push
std
mov
and
inc
push
mov
and
inc
push
mov
cmp
in
into
imul
mov
xchg
aad
push
imul
jg
pop
lahf
icebp
adc
dec
lds
mov
bound
sbb
popa
pop
stos
cmpsb
scas
pop
pop
mov
sub
jno
pop
pop
dec
loop
outsb
sahf
ja
sub
push
add
mov
cwtl
push
jae
inc
dec
add
mov
jl
inc
xor
pop
fldt
loope
xor
mov
mov
push
repz
sbb
testb
arpl
nop
add
dec
jno
les
les
inc
or
sbb
bound
ss
aad
xor
mov
lcall
cmp
inc
xchg
and
or
push
or
enter
inc
cli
jge
or
jl
mov
jbe
mov
dec
test
sbb
icebp
and
mov
xchg
fnstcw
bound
sbb
fists
dec
ret
in
dec
int3
push
fisubrs
ds
or
les
aad
fldlg2
mov
std
xchg
scas
orl
faddl
outsb
sti
xchg
push
mov
xor
mov
rcrb
pop
inc
dec
mulb
data16
out
dec
repz
repz
xor
ss
testl
jne
scas
cltd
orb
xorl
xchg
popf
pushf
lock
add
pop
mov
movsl
jae
ret
pusha
xchg
cltd
add
sub
add
mov
ja
cmp
xchg
or
popf
xchg
loop
ficompl
dec
sbbb
dec
add
ljmp
test
adc
jo
mov
jle
hlt
dec
das
test
mov
int
dec
lea
mov
xor
pop
push
pop
cmp
andl
adc
ljmp
sub
cmp
cmp
shrb
out
pop
ss
inc
cmp
xor
sbb
ret
in
jae
fdivrs
ljmp
je
fimuls
sbb
mov
addl
fimull
ja
nop
xor
adc
repnz
hlt
cmp
icebp
mov
movsb
shr
movsb
insb
push
cltd
test
outsb
sub
notb
ja
in
sarb
hlt
hlt
cmc
in
das
frstor
sub
movsl
fcomi
jp
push
mov
jmp
lcall
mov
push
inc
jle
mov
stc
xor
inc
cmp
xor
divl
pop
dec
enter
fdiv
jle
jne
leave
mov
stc
fsts
add
sarb
jo
ja
fdivs
jecxz
xor
rorb
jmp
sbb
addr16
int3
je
xchg
xchg
jnp
mov
dec
test
jnp
lock
xchg
fstl
aaa
mov
stc
rclb
in
ds
imul
int
scas
shrb
in
add
push
rcl
push
mov
adc
lods
mov
cmp
push
jne
mov
pop
xchg
pop
inc
sar
mov
mov
add
adc
push
cmp
and
mov
jno
ret
cld
fistps
and
add
ss
dec
test
mov
cltd
xchg
jecxz
scas
jbe
dec
dec
mov
stos
pop
fcoml
scas
jo
pop
push
mov
inc
mov
xchg
popf
dec
mov
pop
lret
pop
xchg
rcrb
xchg
loope
pop
add
pop
adc
mov
call
adc
dec
push
iret
fwait
ret
loopne
cmpsl
adc
push
ret
pop
fsubl
dec
ret
mov
ret
mov
imul
test
aas
mov
push
push
and
mov
orb
in
lds
outsb
or
pusha
jl
dec
std
scas
and
clc
pop
pushf
imul
aas
cs
pusha
dec
cmp
xchg
roll
push
fs
add
in
pop
ret
or
sti
sub
addr16
or
and
int3
push
outsb
xchg
mov
pop
sbb
push
outsl
stos
fstps
jns
loope
lahf
add
push
hlt
mov
fidivrl
mov
js
jne
in
in
dec
and
movhps
test
out
mov
adc
pop
sub
mov
lahf
outsl
inc
mov
add
lahf
in
int3
imul
arpl
lahf
sbb
xchg
dec
push
sti
mov
or
adc
pop
adc
fistps
inc
sbb
lds
lret
adc
pop
lret
sahf
push
xchg
stos
push
sub
xchg
testl
adc
ja
scas
mov
jl
ja
jns
loopne
push
pusha
ret
xor
xchg
sbb
shrl
and
lret
cltd
arpl
sub
jns
out
mov
test
lock
adc
push
or
dec
jle
cli
sbb
lret
adc
or
mov
add
cwtl
xchg
int3
sub
jle
es
sarb
pop
inc
outsl
xor
mov
and
add
jmp
test
push
xchg
addr16
push
repnz
sbbl
xchg
sub
ret
lcall
lods
mov
aas
cmc
mov
in
test
je
test
stos
xchg
mov
or
adc
shr
jle
clc
movsl
jb
dec
cli
xor
push
cld
aaa
dec
dec
mov
lock
jbe
adc
add
push
adc
int
insb
aas
or
lods
out
addr16
xchg
xlat
dec
movsb
lcall
fistpl
xchg
pop
lahf
xor
lock
inc
inc
popf
jne
adc
mov
pop
or
mov
mov
xchg
jl
sub
in
lret
jp
ds
in
aas
int3
pop
pop
popf
fnsave
cmp
popf
popf
push
rol
out
into
add
scas
jne
sbb
mov
push
push
rorl
inc
cmp
push
popf
mov
into
les
sub
shl
aas
es
jge
jmp
roll
loope
out
imul
mov
jae
cmc
push
push
jne
sbb
fs
hlt
mov
push
ret
xchg
xor
xchg
aam
daa
daa
das
or
pop
lods
daa
ljmp
sub
outsl
sbbl
mov
and
leave
jno
fldenv
fcmovu
outsl
out
push
and
incb
outsb
fdiv
shll
gs
sbb
es
dec
mov
jecxz
push
xchg
popf
je
jl
cmpsb
or
lahf
mov
cmp
orb
push
fndisi(8087
cltd
loopne
pop
arpl
jae
or
pop
inc
xchg
jg
push
mul
xchg
filds
cmpsl
xchg
inc
sbb
std
aad
cmpsl
xchg
xchg
aad
test
loopne
mov
int3
aam
repnz
aaa
rol
fistpll
mov
adc
add
mov
add
xor
dec
inc
enter
add
imul
roll
push
and
std
cmc
mov
pop
jno
mov
add
rcl
push
sahf
insl
fistpl
xchg
adc
icebp
aaa
fdivrl
sub
enter
mov
cmp
or
cmp
fwait
cli
adc
jmp
fwait
lds
mov
in
mov
movsl
fs
das
xor
sti
fsub
push
sub
or
jg
lods
movsb
insl
or
in
fwait
lds
loope
adc
les
dec
movsb
mov
ds
pushf
cmpsb
dec
loopne
pop
sbb
inc
and
dec
stos
in
inc
in
push
and
xchg
push
jnp
push
pop
fistpl
mull
adc
sbb
sub
add
rolb
mov
fstps
pop
ss
mov
mov
test
shlb
add
sub
push
fidivl
push
and
fs
movsb
push
test
sbb
push
jle
mov
cmp
pushf
and
sbb
call
popl
add
popf
dec
or
bound
pop
xor
adc
sahf
xor
mov
sbb
into
nop
xchg
lea
xchg
or
and
loop
sbbl
cmp
push
les
xor
mov
and
push
loope
cmpb
add
addl
fcmovnu
cmc
fcoml
push
sbb
sub
mov
pop
add
adc
imul
mov
sub
or
push
pushf
lock
xor
mov
pop
pop
insb
lret
loopne
stos
pusha
pusha
jp
dec
inc
test
jl
popa
scas
rcrb
test
dec
in
fwait
dec
and
ret
scas
mov
scas
pushf
cmpsl
sub
bound
xor
ljmp
jne
int
lock
inc
in
les
add
out
mov
push
in
in
or
ja
pop
pop
sbb
fs
pop
xor
xor
mov
arpl
loop
adc
sahf
xor
xlat
jns
jae
dec
push
jp
mov
enter
loop
lea
push
clc
xchg
scas
ss
ficoms
arpl
xchg
push
jae
fsubrp
sub
sbb
pop
jl
dec
jns
cmpsl
mov
dec
sahf
movsb
shll
push
sahf
dec
ss
fisubl
outsl
out
mov
cli
pop
lret
pop
and
add
cmpsl
jbe
and
rcrb
or
sbb
jae
shll
inc
and
sbb
mov
jnp
xlat
pxor
mov
dec
mov
mov
aas
icebp
xor
les
cmp
dec
mov
test
sub
ret
mov
and
pop
xchg
lods
insl
adc
cltd
jo
shr
aaa
lret
push
inc
mov
pop
dec
mov
pushl
pop
stos
dec
sub
cs
add
dec
jmp
call
xchg
cmc
cmp
sbb
push
mov
out
push
mov
popa
aaa
xor
scas
adc
jecxz
mov
les
lret
std
mov
sub
cmp
sbb
data16
adcl
cltd
movsb
xor
fsubp
xchg
daa
push
pop
stc
test
sti
aad
fldcw
push
mov
mov
iret
xchg
cmp
inc
frstor
fsts
and
jl
fistpll
pop
xchg
mov
ret
icebp
jnp
mov
add
jns
mov
pusha
jnp
leave
pop
loopne
fnsave
sub
add
xor
jae
aam
sahf
push
push
xchg
mov
sbb
mov
insl
cmpl
cmpsl
fildl
aaa
sbb
sar
and
mov
std
clc
jl
xor
sbb
pop
test
push
push
cmp
ret
mov
jge
std
mov
ds
aam
sbb
cmpsb
fwait
mov
or
mov
lea
movsl
movsl
xchg
xchg
xor
fwait
and
out
fmull
inc
fistpl
and
pop
sti
xchg
dec
mov
outsb
ret
emms
outsl
clc
inc
pop
mov
jo
mov
xchg
cmp
sub
mov
add
loopne
outsb
add
mov
xchg
stos
mov
shll
ds
div
cli
xor
cmp
and
scas
mov
pop
pusha
xchg
lods
mov
int
ret
push
add
cli
fmull
jle
imul
nop
mov
loopne
int
xchg
ds
out
xor
out
ja
mov
jb
jo
pop
rcl
adc
stos
add
cmc
push
mov
jle
xchg
mov
in
loope
sub
fsubrl
popa
int
arpl
scas
cmc
cli
xor
dec
jb
outsb
ja
sub
mov
mov
fadds
mov
sti
jnp
pop
out
loope
fmuls
xchg
pop
inc
test
sahf
mov
andl
js
outsb
xchg
pop
mov
fadd
sub
cmp
popf
incb
arpl
adc
dec
out
imul
xor
dec
iret
out
in
mov
ja
xor
imul
ds
pop
nop
xor
lret
ja
push
das
fildl
loopne
mov
mov
inc
mov
cmp
lds
pop
jg
addr16
sbb
jle
mov
aaa
mov
jg
lock
movsl
dec
pop
pop
mov
outsb
lret
fs
inc
scas
mov
jb
ljmp
sbb
sub
in
aad
stos
mov
jp
and
das
inc
dec
cmp
cmp
je
rorl
rcrb
cs
sbb
lahf
cmp
xchg
push
xchg
xchg
test
das
iret
lret
sub
dec
and
ss
ja
push
push
lock
mov
cmpsb
mov
mov
pop
mov
xor
call
pop
mov
lahf
push
inc
mov
jp,pt
ss
movsb
xchg
xchg
mov
cwtl
out
les
int
imul
loope
int
adc
stos
mov
mov
xchg
jp
mov
cwtl
push
mov
mov
dec
cmpsl
les
in
xor
scas
cld
pop
leave
push
lahf
adc
insb
es
lock
jmp
repz
mov
push
ficompl
and
shrb
inc
pop
addr16
sbb
xchg
push
xchg
or
fists
xchg
arpl
and
push
xor
xchg
imul
or
int3
push
dec
or
mov
sub
lea
xchg
nop
fs
decl
pop
sbb
dec
repz
out
scas
and
dec
std
xchg
enter
clc
mov
hlt
cmp
and
sub
nop
push
dec
insb
lahf
jb
jne
xlat
and
repz
aam
repnz
pop
hlt
adc
dec
inc
aam
pop
or
adc
rorb
out
mov
push
xor
movsb
pop
jne
dec
jle
stos
outsl
xchg
popf
pop
jbe
adc
orl
lds
mov
push
sbb
jg
filds
clts
push
in
and
pop
mov
jnp
xchg
arpl
mov
je
lahf
pop
sbb
sub
jecxz
xchg
xor
jg
xor
hlt
xchg
fbld
mov
stc
xor
mull
push
pusha
jge
jle
mov
xor
iret
add
and
add
dec
pop
bound
cmpsb
subl
mov
dec
idiv
in
pushf
icebp
cmpsb
adc
stc
test
adcl
mulb
pop
cmp
adc
arpl
mul
adc
fcomps
ss
js
push
xor
jecxz
out
jg
xchg
pop
mov
mov
sub
fsts
or
push
sbb
insb
pop
jb
cmc
stos
push
in
or
fldpi
jle
sub
out
xlat
xorl
icebp
bound
fcomi
ret
test
cmp
fs
push
cltd
into
lret
fcompl
dec
jmp
fldcw
cmc
pushl
sbb
test
addb
mov
clc
aaa
ret
rclb
pop
inc
mov
adc
pop
and
pop
jo
es
add
popf
scas
int
cmp
mulb
jnp
sub
add
int3
movsl
push
dec
test
ficoms
mov
ret
and
mov
nop
xchg
cmp
jne
rorb
adc
adc
xchg
pop
fnstsw
in
mov
inc
test
rorb
sahf
popa
or
mov
fxch
xchg
dec
pop
cli
add
push
cld
push
push
xchg
les
outsl
add
out
pop
je
repz
add
incb
in
shrb
inc
pop
sub
bound
out
sub
loope
xchg
loope
pop
xchg
orl
xor
push
arpl
outsb
xchg
jmp
dec
sbbb
dec
jne
pop
adc
mov
fcmovu
lds
xor
cmpsl
xchg
or
mov
rolb
call
sbb
mov
jbe
fsubp
ss
rcrb
cmp
pop
dec
mov
xor
ret
adc
dec
sub
pop
push
sub
xchg
jno
mov
jne
inc
jl
mov
pop
cmp
pushf
pop
loopne
ss
test
inc
xor
daa
out
cmp
mov
mov
stos
push
cmp
mov
je
loopne
inc
in
adc
fldl
movsl
daa
push
lods
out
xor
jno
icebp
inc
sub
mov
xlat
adc
and
mov
test
or
sbbb
push
pop
add
dec
cmc
xor
push
dec
icebp
lds
or
mov
mov
insl
ret
mov
jno
sub
out
mov
out
sarl
mov
loopne
enter
jl
lret
adc
sti
rorb
mov
mov
inc
jns
and
call
shrb
cmp
inc
mov
stos
mov
insb
mov
xchg
dec
ds
es
into
stos
push
test
fdiv
sbbl
cmp
ret
dec
and
inc
les
int3
dec
sti
add
and
jne
idivl
in
sub
push
imul
aam
shrb
push
pop
in
pop
cld
mov
and
pop
mov
roll
xor
fwait
lahf
jo
ja
mov
scas
stos
or
lret
adc
add
jecxz
je
xorb
imul
cmpsb
aas
loop
ret
cmp
rcrl
inc
icebp
xor
les
jge
les
bndldx
xchg
inc
jge
or
addr16
sbb
xchg
subl
lods
icebp
movsl
mulb
das
sbb
and
mov
lret
cmp
add
icebp
mov
insl
cwtl
enter
outsb
mov
mov
gs
arpl
adc
push
mov
stos
mov
cmp
add
cwtl
and
insb
cmpsb
adc
stos
xor
in
js
mov
out
jae
orb
sub
cmpsl
add
ret
out
or
and
pop
mov
push
fwait
push
push
les
out
jb
push
and
push
cmc
call
notl
lods
jmp
repz
and
add
pop
in
adc
cltd
js
sub
lahf
rorl
out
cmp
aas
insl
xlat
pop
xor
jns
jecxz
pop
jge
lds
ja
pop
sub
mov
hlt
loopne
adc
sbb
mov
lds
insb
pop
pop
call
fdiv
jge
inc
lods
fnsave
and
dec
insb
mov
sub
imul
andps
mov
je
gs
sbb
and
push
sub
pop
sbb
mov
lock
cwtl
or
loope
sub
fs
dec
push
movsb
push
mov
xchg
repz
inc
fs
and
jmp
addr16
push
cmpsb
mov
jmp
mov
in
jmp
subl
xchg
test
addr16
enter
fcmovb
cmp
adc
sarb
pusha
fcoml
shlb
mov
ss
cmp
dec
dec
cld
bnd
or
add
clc
repz
aas
jmp
leave
or
push
cmp
jns
sub
daa
divl
subl
imul
cltd
es
dec
mov
mov
push
in
inc
out
jp
sti
pop
fdivs
dec
push
fidivrs
xchg
mov
sarl
adc
xchg
inc
sub
mov
cmp
push
fidivrs
lret
add
pop
aaa
mov
leave
icebp
movsb
inc
xchg
jmp
add
sti
mov
je
mov
and
outsb
pop
cmp
stc
movsb
out
cmpsb
test
test
in
lret
jge
je
mov
inc
jae
lahf
mov
into
gs
mov
or
mov
xor
sbbl
fimull
scas
lods
iret
aad
movsb
or
xor
shrl
rol
adcb
pop
xor
int
fisttpl
jnp
out
inc
imul
ficoms
cwtl
mul
je
fildl
in
and
jnp
xchg
adc
ss
add
jne
ret
sub
or
stos
pop
push
mov
and
iret
push
push
outsb
das
adc
movzbl
sub
mov
cltd
lea
ljmp
cld
lea
fdivl
in
les
sahf
sub
sbb
test
mov
cld
fisttps
and
shl
movsl
xlat
fmul
adc
adc
loope
cmp
test
mov
das
dec
outsb
scas
movsb
xchg
int3
or
cmpsb
ja
sub
negl
cmp
jmp
cli
adc
cltd
adc
adc
mov
lcall
pushf
movsb
or
xchg
push
movsb
cwtl
rep
or
cmpsl
aad
pop
xchg
mov
pop
xchg
jp
and
lea
xor
jo
xchg
pop
push
jl
fisubs
call
popf
push
addr16
push
inc
jns
test
push
stos
mov
add
pop
mov
int
aas
int3
xchg
dec
jl
sbb
push
int
sbb
shrl
mov
lcall
pop
mov
rcrl
jae
push
inc
push
xor
roll
inc
aaa
xlat
cwtl
sub
cli
mov
ljmp
test
adc
mov
pop
add
pop
inc
and
pop
das
cmp
add
jbe
addr16
mov
aad
in
and
add
mov
cs
cmp
inc
jecxz
in
inc
pop
cli
test
cmc
leave
jbe
or
sbb
leave
or
mov
shrl
mov
rclb
out
adcl
test
mov
adc
sub
or
repz
jae
jle
adc
aas
cmp
mov
in
adc
pop
enter
sub
jmp
sbb
loopne
adc
push
outsb
inc
sahf
mov
scas
sbb
mov
mov
inc
add
mov
mov
addr16
in
test
or
sub
les
inc
mov
hlt
mov
pop
jge
mov
pop
push
sub
pop
pop
xchg
xchg
test
inc
cmpsb
cmp
xchg
cmpsb
ret
cmp
and
adc
mov
dec
xor
sbb
fdivrl
inc
pop
dec
movsl
clc
rclb
ja
shll
ret
and
xlat
cmp
add
xchg
outsl
out
mov
inc
mov
sub
es
daa
dec
aad
sub
and
cmp
aad
cli
repz
sbb
jl
sbb
ficoms
rcll
xchg
cmp
fwait
js
loopne
cs
std
mov
inc
cwtl
mov
aad
decl
sub
mov
jbe
pop
xor
fwait
mov
adc
xorb
mov
outsb
jo
aas
movsl
push
cltd
cmpsb
and
mov
add
xlat
dec
dec
fdivr
je
subb
out
jnp
cmp
sub
lds
jns
adc
outsb
pop
or
test
int3
mov
or
push
add
lea
xor
push
inc
push
mov
dec
outsl
pop
mov
les
outsl
cmp
xor
jmp
andl
xor
mov
xlat
jge
pop
inc
push
cli
mov
loopne
les
and
inc
scas
xchg
or
daa
add
or
gs
cmp
jae
xlat
jne
mov
out
sub
sub
pop
xchg
dec
jl,pt
repz
inc
les
jp
cmp
rcrl
push
andl
fwait
popf
rorl
or
jne
cmp
mov
lods
das
xchg
or
jnp
or
pop
bnd
pushf
test
enter
pop
xchg
push
pushl
cltd
and
idiv
scas
clc
add
js
test
push
jmp
cld
loopne
push
pop
sbb
cmc
mov
mov
cld
jp
jno
inc
mov
add
dec
xchg
xchg
in
outsl
jp
movsl
aaa
push
out
pop
jns
push
adc
sti
or
sbb
lods
cmp
addb
dec
sbb
lods
mov
sub
hlt
mov
pusha
lods
pop
out
out
sbb
data16
add
push
fstps
sbb
mov
sub
add
mov
lock
insb
inc
repz
pushf
or
leave
and
mov
sbb
adc
mov
or
shlb
test
jecxz
out
test
pop
test
push
in
cltd
lea
push
pop
xchg
scas
add
xchg
loopne
sbb
lret
sar
test
xchg
jge
sub
pop
dec
mov
lock
push
mov
sbb
inc
cmp
iret
cmpb
sbb
pop
push
shlb
mov
add
fimull
into
mov
call
nop
sbb
sbb
loopne
mov
add
mov
dec
mov
cli
repnz
and
loope
jnp
lret
mov
ja
mov
jne
les
insb
xor
std
stos
in
sbb
and
sbbl
cwtl
cmp
push
mov
jp
add
jbe
adc
rsm
mov
clc
in
sbbb
rcrb
jbe
test
in
mov
int3
pop
adc
and
fsts
in
lods
inc
pusha
xorl
lret
jge
mov
cmp
mov
cwtl
roll
cvtps2pd
mov
movsb
mov
adc
fidivrs
and
xchg
shrl
adc
pop
dec
cmpsl
je
repnz
aad
and
mov
or
pop
shlb
mov
jecxz
roll
push
popf
inc
sar
push
stc
sub
sbb
icebp
mov
shr
jg
push
scas
in
test
ja
sub
inc
dec
xchg
test
cmp
mov
jnp
hlt
fmulp
xor
push
xchg
push
in
repz
and
push
fcmove
mov
repnz
sar
ss
inc
or
imul
jge
insb
cmp
divl
jns,pt
push
add
xchg
scas
pop
add
ja
inc
lock
mov
daa
cmp
inc
add
out
sbb
pop
imul
int3
dec
pushf
dec
cmc
inc
push
mov
popa
das
lret
jae
adc
jnp
mov
jae
mov
aad
cs
add
ret
std
mov
fidivl
outsb
adc
fiadds
push
sbb
pop
sbbb
jg
push
dec
xchg
loope
lcall
adc
sub
adc
xor
and
xchg
imul
dec
mov
lahf
test
push
es
jmp
in
mov
js
jle
dec
cmp
sub
dec
out
jecxz
es
dec
cwtl
out
imul
push
cmpsl
jle
sub
push
movsl
int3
jbe
lahf
cmp
aad
xchg
dec
cmp
lcall
and
xor
pmaxub
push
sub
dec
stos
out
inc
push
pusha
push
mov
pop
fdivrl
andb
adc
jmp
mov
add
pop
jecxz
and
outsl
stc
sahf
cmp
mov
pop
cmpsb
cmpsb
sbb
push
lock
inc
jae
jl
loope
inc
mov
xor
call
mov
lret
mov
push
inc
mov
or
call
push
push
jae
mov
cwtl
into
push
mov
into
fcomps
mov
jnp
jae
or
inc
and
scas
jle
xchg
sti
mov
mov
imul
or
insl
jmp
xchg
adc
cltd
fistl
pop
inc
data16
cmpb
jl
xchg
xchg
rorb
push
test
mov
push
aad
or
xchg
and
pop
adc
mov
pop
gs
cmpsl
js
or
aam
jg
insb
fisttpl
mov
push
xor
aaa
jecxz
inc
mov
xor
xchg
in
data16
or
jle
pop
movsl
inc
push
std
adc
push
jl
aad
mov
jnp
divl
in
and
mov
gs
mov
mov
push
ljmp
nop
pop
mov
dec
mov
je
jae
sub
add
je
dec
sub
lods
add
push
xchg
mov
xor
cld
inc
mov
sub
je
cmp
fcompl
mov
inc
test
dec
imul
jns
xor
imul
push
je
ja
pushaw
xor
decb
test
jl
in
test
dec
xchg
mov
fwait
cs
lds
lret
pop
ret
lea
xchg
pop
cld
rolb
loope
xor
cmpsl
add
ja
push
mov
popf
add
bound
mov
sti
mov
pushl
out
es
test
ficoms
enter
hlt
push
push
fwait
hlt
lds
jl
lods
out
pop
stos
jne
daa
inc
lock
inc
push
sbbb
xchg
rolb
jnp
pop
addl
adc
mov
shrl
inc
test
repnz
lcall
xchg
aaa
movsl
rcrb
stos
push
inc
test
push
xchg
pop
stos
mov
push
loope
andb
add
push
adc
adc
in
dec
inc
xchg
test
cwtl
mov
cwtl
add
xchg
shlb
cli
cmp
jle
mov
inc
inc
mov
fmuls
les
call
repnz
push
loop
add
push
inc
push
and
jp
test
sbb
adc
nop
outsb
les
rol
loopne
mov
sub
test
imul
gs
cmp
loopne
mov
push
test
incb
jmp
dec
lret
out
adc
and
mov
js
rolb
jmp
push
arpl
adc
mov
popf
jo
in
test
in
adc
call
sti
test
mov
or
push
and
push
push
adc
icebp
int
jns
or
inc
lds
dec
mov
mov
mov
popf
jbe
sub
mov
and
stc
pop
sbb
sti
loope
out
and
daa
sbb
pusha
pop
out
mov
pop
leave
sbb
xor
fldl
add
negb
mov
jno
mov
pop
jno
sub
and
cmp
nop
pop
shrb
dec
out
lcall
pop
pusha
andb
push
mov
fistpll
push
movsb
addr16
sarl
jmp
jno
sbb
icebp
in
dec
jno
sbb
and
hlt
sbb
xchg
pop
jbe
add
outsl
leave
cmpsl
out
push
stos
push
and
cli
insb
in
cmp
aas
adc
into
repz
int3
mov
xor
pop
jae
sbb
cmpsb
mov
iret
out
inc
dec
mov
out
loope
mov
push
dec
mov
movsb
inc
pop
and
loope
mov
pop
lcall
and
ficomps
insl
pop
ss
xchg
test
cltd
lods
pop
stos
testb
pop
daa
xchg
repnz
sti
aam
lock
xlat
nop
icebp
pusha
addr16
mov
mov
ds
jno
hlt
sub
mov
dec
xor
push
push
pop
add
lret
popf
mov
ljmp
jp
add
adc
mov
cmp
and
dec
inc
ja
ret
lods
xchg
add
jle
cmp
imul
adc
cmp
mov
popf
push
mov
das
test
mov
inc
fidivrs
xchg
jns
fldenv
and
testl
pop
dec
pop
scas
jno
pop
push
ret
mov
adc
stos
popf
mov
xor
xor
loop
lret
in
sub
xlat
cmp
mov
jmp
push
sbb
scas
dec
call
cld
or
pop
mov
mov
mov
push
cld
add
xor
add
sub
stc
or
and
popf
and
hlt
add
outsb
or
movlps
mov
add
mov
je
xchg
pop
pop
cmp
pop
mov
bound
rcl
jge
movsb
jo
data16
cmpsl
push
xchg
leave
jnp
lahf
cmc
loope
push
rolb
lret
cmp
add
orps
cltd
xchg
jno
jb
mov
dec
pop
cltd
ljmp
hlt
std
sub
roll
int
idivb
push
into
test
incb
xlat
push
pop
mov
sub
inc
add
ja
ljmp
imul
pop
pop
xchg
jae
sysenter
fadds
inc
push
lcall
mov
divb
mov
sbbl
mov
lods
enter
test
mov
sbb
enter
mov
inc
sbb
cmovle
push
jmp
andl
pop
adc
push
lods
push
lahf
ds
sbb
pop
repz
outsl
icebp
lcall
daa
fmull
aaa
push
cltd
cmpsb
out
flds
pop
sub
loop
adc
ss
pop
jmp
sub
pop
fistpl
mov
call
cmp
icebp
imul
ficoml
or
pushf
fmuls
lret
daa
in
gs
xchg
sti
and
jo
inc
sbb
jl
xchg
mov
jmp
je
cld
adc
insl
ja
or
nop
dec
ret
stc
cmc
lods
lods
mov
xor
adcb
jl
adc
cmp
roll
movsb
test
pop
or
push
and
nop
roll
orb
pop
xacquire
movsl
cmpsb
scas
scas
dec
fdivl
ret
in
dec
test
lods
push
cmpsb
fnstcw
test
or
fisubrs
mov
cmp
cmp
sub
shl
sbb
xchg
les
rcrb
adc
repz
rolb
add
xor
repnz
cmpsb
push
mov
arpl
test
xor
nop
ja
hlt
xor
xchg
cwtl
mov
xor
lods
push
inc
dec
and
xchg
pop
cmc
fsubs
sub
arpl
enter
aad
jg
scas
movsb
scas
sub
int3
lods
iret
adc
mov
xchg
push
cmc
add
or
inc
testb
push
sti
popf
arpl
pop
mov
leave
sbb
add
cmp
cmp
repnz
sbb
cmpsb
xor
cmc
rcll
ffreep
and
inc
inc
inc
or
les
or
adc
ss
mov
test
rorl
fs
orl
add
mov
sub
push
dec
repz
sbb
icebp
stos
or
and
aaa
mov
mov
cmc
add
dec
cmp
imull
mov
xlat
sub
and
adc
sarl
shlb
or
xor
shlb
js
push
mov
cmp
arpl
sbb
and
dec
mov
jns
sub
cmpb
mov
sbb
inc
mov
and
enter
bound
cli
sbb
xor
sarl
mov
outsl
test
cmc
cmp
xor
mov
xchg
jae
cmp
testb
int3
cwtl
mov
pop
sbb
jns
jg
in
sahf
xchg
aad
pop
sbb
cmp
dec
and
popf
fimull
fildl
mov
jmp
sbb
jmp
dec
add
push
fcomp
call
pop
repnz
xchg
adc
scas
pop
dec
ds
mov
inc
fnsave
mov
xchg
ret
test
icebp
inc
ja
inc
popa
movsl
leave
test
mov
rcl
fnstcw
out
xor
sub
pop
adc
fadds
mov
jmp
stc
std
cmp
dec
jae
aas
imul
fmull
call
pop
mov
sbbl
pushf
or
out
pop
pop
sbb
sub
add
mov
out
shlb
insl
call
push
inc
and
sarl
addr16
xchg
dec
cli
push
jecxz
lods
xchg
xchg
mov
js
xlat
hlt
inc
add
or
ficomps
mov
push
stos
mov
out
imull
cli
mov
ret
and
int
lahf
lret
call
mov
mov
cmp
fisttpl
in
sbb
jmp
push
mov
iret
mov
mov
outsl
repz
inc
adc
mov
scas
dec
sbb
adc
subb
test
aas
loope
pop
push
cs
pop
or
xchg
mov
inc
data16
xchg
inc
test
ficoml
inc
test
or
shll
ss
sub
test
jns
ds
testb
mov
xor
pop
shr
push
cwtl
imul
fadd
daa
inc
fstl
idiv
jecxz
out
and
jle
movsb
mov
nop
mov
pop
lahf
mov
lahf
xchg
mov
jmp
mov
lods
add
outsb
jge
push
push
xchg
mov
aad
test
arpl
ret
imul
xor
fnstcw
xor
imul
xchg
shlb
cmp
dec
and
sti
mov
aaa
sub
mov
jl
dec
insb
loop
cs
inc
imulb
loopne
mov
cmp
mov
or
pop
push
push
in
inc
xor
ljmp
out
lea
mov
arpl
jb
cmp
cmp
or
cmp
out
mov
pop
idivb
pusha
cmp
std
jne
inc
repz
pop
mov
aas
or
push
mov
and
test
mov
lods
frstor
decl
cmp
adc
xchg
and
xor
or
lret
stc
incl
cmp
xor
stos
xchg
mov
stos
and
or
sbb
inc
pop
in
pop
fucomp
push
imul
dec
pushf
mov
pop
cmp
loop
or
sub
xchg
push
push
add
mov
and
les
add
xor
lcall
inc
pop
jg
popa
mov
xchg
xchg
ret
sub
sub
mov
cmc
mov
cmp
xchg
xor
cmpsb
or
jg
mov
or
mov
pop
fwait
ret
xor
leave
popa
sbbb
or
adc
inc
scas
xor
and
mov
xchg
and
add
cmp
jmp
popa
and
jge
mov
nop
pop
nop
jecxz
pop
dec
mov
adc
sub
jae
push
mov
jno
inc
pop
push
das
mov
inc
or
add
lret
sub
or
mov
or
mov
add
jne
jae
inc
es
hlt
mov
packssdw
filds
jo
loopne
mov
mov
xchg
leave
xchg
out
xor
sahf
test
icebp
mov
je
dec
aaa
mov
fisubrl
outsl
and
and
pop
sbb
es
arpl
push
js
orb
insb
mov
adc
imul
jp
sub
xor
repnz
insb
pop
shr
xchg
xlat
sub
jne
std
mov
sarb
int
insb
sbb
push
ret
call
int
js
out
mov
loopne
adc
scas
xchg
mov
in
lds
or
sub
mov
push
lods
out
and
and
fsubr
push
js
enter
pop
lock
or
daa
xchg
mov
call
and
mov
sub
xchg
mov
push
add
push
fsubp
jbe
jmp
fcoms
fs
pop
jecxz
jnp
int
lahf
test
repnz
mov
dec
call
gs
setp
fnstsw
lcall
ret
add
cmpsl
lcall
xor
adc
or
cmp
xlat
ficoml
mov
pop
pop
insl
pop
jle
push
ja
and
repnz
sbb
gs
cmpsl
movsb
jge
mov
push
jp
mov
push
test
pop
dec
and
syscall
push
and
sti
mov
xor
push
mov
push
scas
push
adc
cwtl
mov
cmp
ljmp
dec
pop
jge
aad
les
loope
jg
jle
sarb
and
jl
xor
push
or
push
std
pop
movb
xor
adc
out
sbb
into
jg
sbb
mov
enter
xchg
mov
inc
pop
shrb
cmp
stos
jmp
ljmp
pop
enter
xor
scas
dec
icebp
test
xor
cmc
scas
icebp
sahf
mov
repnz
mov
pusha
push
sarl
xor
pop
add
mov
mov
inc
out
xor
sbb
addr16
js
mov
dec
int
stos
shr
fdivr
inc
mov
fstpl
cld
movsb
aaa
fisubl
cmp
cmpl
les
stos
ljmp
add
dec
insl
adc
int3
jne
jb
xlat
xor
jle
movsb
stc
push
mov
dec
and
jns
cli
mov
sti
test
out
push
or
jecxz
aaa
sbb
fidivs
test
scas
hlt
cmp
xchg
popf
subb
adc
aas
pop
subb
shll
aam
subl
movsb
mov
je
popa
je
scas
das
stos
ss
mov
cli
cli
xrelease
loop
shr
sbb
xchg
stos
mov
cmp
ja
pop
lods
sub
cmp
jg
lcall
scas
or
cwtl
mov
cs
mul
add
jne
add
sbb
ss
mov
jecxz
lods
cmpl
jl
cld
mov
lods
push
sbb
jb
cmp
std
mov
sub
adc
push
inc
idiv
sbb
or
push
pop
and
push
add
fwait
xchg
sbb
test
les
mov
cltd
push
xchg
scas
int3
pop
repz
mov
dec
std
mov
sub
cli
aam
adc
leave
xchg
xchg
jb
fadd
jns
push
int
push
popa
das
in
sbb
test
stos
mov
lods
fnstenv
int3
sbb
jge
push
add
mov
lret
imul
loop
mov
in
xor
mov
ljmp
dec
shlb
movsb
inc
imul
push
scas
leave
sub
sbb
mov
enter
std
rclb
out
sub
or
addr16
and
jl
inc
rep
arpl
aam
ret
mov
leave
ret
divb
adc
adc
out
push
je
into
dec
xchg
mov
std
sub
cmp
ret
data16
sbb
add
or
ljmp
pop
jae
nopl
xchg
call
jnp
aam
loope
lds
xor
ds
pop
out
push
out
movsl
int
int
mov
sub
mov
jp
fiadds
stos
daa
scas
cmpsl
nop
mov
mov
dec
arpl
adc
mov
mov
pop
dec
int3
push
bound
push
mov
in
pop
jmp
das
imul
jl
ficompl
pop
jecxz
or
ret
in
adc
and
add
es
push
faddl
cmpsl
outsb
inc
mov
pop
repnz
xlat
jbe
test
dec
dec
movsb
jge
aad
test
out
or
jb
mov
ret
add
xchg
mov
sbb
in
mov
lods
into
xchg
fwait
cmp
stc
or
xchg
pop
sbb
stc
cmpsb
pop
ss
mov
or
pop
xchg
push
fucomp
ficoml
mov
pop
jg
addl
fwait
and
adc
cmp
sub
or
or
les
xchg
cltd
jmp
and
jbe
test
xchg
pop
lods
fiadds
pop
lahf
arpl
sar
push
outsl
stos
cli
lods
dec
adc
mov
xchg
icebp
sbb
bound
call
and
jecxz
adc
es
pop
imul
sbb
jecxz
add
mov
cmp
pop
stos
scas
dec
lcall
mov
repnz
xchg
aas
outsl
lret
dec
stos
cmp
jl
xlat
mov
cmp
inc
cmpsl
lret
rsm
inc
mov
jg
shrb
push
in
ret
cmp
push
lcall
es
mov
or
mov
addr16
mov
int3
adc
mov
mov
outsb
add
mov
inc
sbb
jo
cmp
push
xchg
std
cld
adc
arpl
inc
aad
movsl
pop
mov
jb
dec
lahf
push
cmp
mov
push
jecxz
dec
push
repnz
in
subl
mov
addb
int
mov
add
mov
and
mov
imul
mov
push
ffree
fists
mov
jmp
jmp
ficomps
loope
xchg
dec
std
add
fisttpl
out
xchg
pop
stos
xchg
in
stos
mov
test
inc
jo
and
adc
test
mov
jmp
jnp
mov
dec
dec
sub
movsl
les
sbb
push
adc
pop
adc
shrl
outsb
and
xor
pop
pop
inc
loopne
das
stc
dec
lahf
in
cmp
cmc
adc
adc
jae
pop
sbb
pop
daa
cmp
test
lods
and
test
aam
icebp
std
jo
xlat
push
jbe
test
xchg
xor
lahf
nop
imul
sub
mov
pop
cmp
testb
arpl
adc
jecxz
mov
mov
rcr
aad
imul
sub
cmp
inc
push
push
ficompl
mov
repz
pop
mov
mov
xor
mov
rcrl
sahf
ja
pop
or
cwtl
jp
sar
and
sbb
sbb
pop
jl
aad
shll
jne
adc
pusha
shlb
xchg
hlt
xchg
mov
decl
jge
add
xor
xor
fisubl
leave
mov
loop
jmp
sub
and
mov
mov
lret
xchg
cmp
push
pop
rclb
movsb
std
and
test
shrl
xchg
adc
mov
inc
clc
cmpl
call
fstpt
test
test
aas
and
mov
loope
inc
push
lcall
add
sub
stc
ja
cmc
sbb
inc
shlb
adc
icebp
and
sbb
xchg
jg
add
mov
sub
ja
mov
cmp
sub
cmp
sbb
mov
mov
dec
add
popa
icebp
pop
aaa
jp
adc
mov
mov
sti
push
cmp
xchg
jmp
shll
arpl
lahf
lcall
stc
inc
or
fistpll
inc
sarl
aad
adc
mov
jns
mov
fstps
jbe
jae
sbb
cmp
lods
push
addr16
dec
cmpsb
jl
push
aad
xor
pop
aaa
adc
sub
je
cltd
sub
inc
jbe
icebp
jo
push
jle
rcll
sub
dec
add
mov
std
cmp
xchg
sbb
xchg
insb
sbb
scas
add
add
std
dec
leave
lea
cmpsl
mov
mov
fidivs
or
mov
add
or
imul
mov
xchg
outsl
arpl
lock
mov
pop
push
push
leave
dec
dec
pop
ds
stos
test
push
dec
jbe
pop
sub
push
icebp
dec
pop
push
cmc
jl
cmp
in
je
sub
leave
dec
adc
mov
pop
or
inc
dec
in
jne
adc
mov
out
xor
xlat
addr16
mov
push
cmpsl
daa
pushf
cmp
daa
add
adc
adc
loop
cmp
pop
loope
sub
pop
sahf
add
dec
xchg
lea
jl
int
mov
push
xchg
and
or
push
dec
jb
scas
ret
stos
or
mov
add
mov
cld
mov
fwait
std
cmpsb
adc
mov
mov
adc
das
mov
pusha
movsl
fmull
pushl
dec
movl
popa
cli
adc
cmpsl
jmp
fmull
dec
cmp
fisttpll
xlat
add
outsb
adc
pusha
scas
mov
jnp
loopne
jo
rorl
jecxz
test
test
push
test
shll
and
lahf
pop
and
test
push
sahf
push
insl
test
jp
sub
mov
test
js
dec
test
psadbw
fs
icebp
ret
add
and
lds
pop
bound
mov
pop
pop
mov
mov
jle
ret
and
scas
and
adc
adc
lcall
push
int
sub
and
jecxz
repnz
call
cltd
test
dec
sahf
push
add
add
mov
stos
adc
cmp
test
imull
add
adc
mov
jmp
mov
xor
pop
sub
leave
push
cmp
mov
sub
mov
lahf
mov
fcompl
into
or
loope
mov
iret
sti
fidivl
xor
inc
ljmp
rorl
cli
popf
jg
scas
jge
mov
inc
jle
divb
dec
sub
fildll
and
or
pop
out
mov
enter
inc
xchg
dec
xor
shrl
pop
inc
adc
faddp
and
rol
fnstcw
xor
xor
adc
ret
scas
sahf
xor
cli
inc
outsb
filds
sub
ficoml
xchg
inc
cmp
rcrb
and
pextrw
ss
push
add
push
push
jae
and
adc
data16
jmp
and
mov
in
rcl
imul
dec
rcrb
adc
inc
mov
dec
pop
lock
sub
xchg
or
shld
cmp
mov
inc
push
stos
rorb
loopne
add
stos
rcrl
cld
mov
mov
popa
lahf
pop
push
dec
push
fsts
ja
mov
jb
mov
add
pop
sbb
or
push
xlat
cwtl
inc
cmpsb
adc
cmpsb
imul
pop
lods
ret
ret
push
push
sbb
add
repz
mov
in
test
sbb
cmpsl
inc
fsub
dec
shl
js
fildl
mov
aam
mov
bound
cmp
and
sti
sahf
add
inc
dec
jg
push
mov
and
cld
inc
xor
das
lods
dec
xchg
imul
push
ds
pause
popa
inc
jmp
aaa
rcrl
add
pop
push
loopne
sub
cs
mov
pop
test
pop
pop
xchg
dec
inc
or
push
inc
and
sub
popa
sub
in
addb
shr
cmp
shrb
jno
adc
scas
jge
fdivrs
xchg
push
mov
in
imul
pop
jl
mov
dec
rcr
adc
mov
push
stc
sub
push
xchg
add
bnd
cwtl
push
cmpsb
faddl
xor
jecxz
dec
cmp
addl
in
int3
add
shl
xor
dec
pop
xor
jbe
dec
sub
push
std
popf
push
lods
and
scas
jp
push
push
pop
lea
pop
cmp
andb
fisubrl
push
test
cmp
xor
push
std
in
sbb
dec
xor
add
mov
mov
stos
std
sbb
shll
cld
mov
sbb
arpl
shll
arpl
repz
xchg
xor
adc
cltd
cmp
and
mov
cmp
jno
fsubr
add
sbb
aad
in
rep
mov
cmpsl
cmp
inc
mov
loopne
scas
adc
outsb
push
cmp
xor
lret
dec
inc
mov
mov
jo
insb
and
test
mov
aad
cmpsb
test
mov
adc
xchg
mov
jo
push
push
stc
mov
adc
pop
or
cmp
scas
jecxz
out
sub
lret
push
xchg
rorb
mov
out
gs
dec
sub
pop
lea
and
mov
sub
jno
push
rcll
rcll
and
add
pop
ficoml
mov
outsl
and
mov
icebp
mov
adc
outsb
xlat
pop
imul
neg
dec
lods
pop
stos
out
in
aad
cmp
je
cmp
ss
cmpsb
or
inc
fistl
xor
cmp
lahf
and
jle
lahf
mov
in
pusha
shlb
jno
pop
in
out
lods
ss
and
xor
or
mov
push
xchg
cvtps2pi
mov
cmpsb
xchg
dec
mov
iret
rorb
lcall
cmc
pusha
jp
popf
or
xchg
pushf
mov
and
xchg
mov
push
sbb
imul
add
bnd
add
or
aaa
xor
les
add
mov
dec
and
mov
test
add
jnp
mov
inc
and
leave
xor
mov
ds
sub
ja
pop
dec
mov
cmp
inc
call
sub
mov
data16
lahf
adc
aaa
inc
sub
mov
adc
pop
outsb
pop
cmpsb
push
dec
rorl
xor
push
sbb
adc
in
sti
cld
gs
pop
mov
mov
pop
inc
jle
mov
mov
fucomi
mov
jne
inc
fisttps
cmp
mov
pusha
pop
pshufw
xchg
test
lret
mov
adc
outsl
xor
fs
sub
lods
pop
dec
inc
mov
nop
sar
rcr
mov
aas
add
adc
jb
dec
rclb
dec
pop
rorl
mov
cmp
mov
mov
lahf
pop
addb
mov
sysenter
pop
dec
aas
cmp
pop
sub
jae
pop
push
ljmp
pop
mov
xor
sbb
je
arpl
scas
adc
mov
dec
adc
pop
shrb
and
xor
push
in
add
sbb
enter
int
push
in
and
es
push
incl
pop
push
push
cmp
push
fcoml
xor
xor
mov
mov
aam
or
add
pop
lods
mov
xchg
mov
lret
arpl
loope
arpl
dec
cmp
stos
aad
pop
call
pop
jge
push
pop
pushf
cli
sbb
lahf
mov
cmp
sti
insl
add
cmp
xorl
rclb
test
mov
adc
or
ss
hlt
lds
cli
insl
adc
jb
bnd
repz
jmp
mov
push
sub
jae
pop
jnp
dec
movsl
out
in
push
push
pop
xor
pop
inc
and
adc
sarb
xchg
ret
and
jno
shll
test
repz
add
jno
popa
int
cli
js
leave
or
inc
jns
pop
sub
push
out
cmc
adc
xor
daa
or
aam
popa
pop
xor
pop
xchg
pusha
jg
xor
test
lret
test
mov
push
adc
mov
cltd
addb
adc
xor
cmpsb
notl
inc
lock
mov
repnz
shlb
loopne
jo
je
inc
mov
imul
fstpl
enter
or
faddp
push
int3
push
cmpsl
out
std
popl
push
mov
imul
loopne
icebp
je
pop
clc
push
fnstsw
mov
push
mov
add
stc
les
loope
pop
inc
push
lock
cmc
pop
test
jne
xchg
gs
das
inc
inc
lret
jns
lods
lahf
fdivs
or
dec
or
icebp
adc
add
fstpl
mov
repnz
pop
lea
repnz
loope
sbb
jmp
xchg
xorl
lds
shlb
or
add
shrb
dec
pop
cld
hlt
test
fs
sti
in
fistl
push
addr16
lds
ret
sub
cltd
xchg
loope
mov
jbe
pushf
std
jge
popf
xchg
ret
repnz
mov
leave
jg
outsb
xchg
les
push
xchg
pop
adc
jl
ret
stc
mov
sarl
fs
fucomi
out
test
movsl
pop
sbb
sbbb
push
add
or
fs
ljmp
stc
jbe
mov
insl
cmpsb
int3
mov
popf
daa
cmc
loope
cmc
jmp
inc
jge
sahf
loop
aaa
jg
jecxz
xchg
cmp
pushf
popa
movsb
aas
mov
in
xchg
clc
mov
pop
dec
dec
inc
subb
popf
cld
lahf
bound
fisubl
add
sub
or
push
loop
or
test
icebp
add
mov
jge
into
mov
test
sub
mov
and
rclb
fistl
call
jb
popf
sarl
std
test
das
insl
push
xchg
push
mov
test
cmpsb
in
mov
adc
jge
xor
inc
fidivrl
bound
sub
and
sti
xor
xor
mov
sbbl
push
jns
jmp
int
cli
or
jmp
or
jge
out
mov
pop
and
mov
inc
jge
jl
jecxz
cmpsl
lods
pop
or
sub
frstor
sub
data16
or
mov
adc
stos
fprem
daa
lcall
pop
dec
xor
mov
outsb
jo
push
je
lcall
scas
and
rolb
mov
jb
addr16
xadd
xchg
pop
gs
aam
inc
hlt
adc
repnz
jmp
mov
shrb
lret
sbb
adc
mov
idivb
jbe
sti
les
push
nop
xor
arpl
cmp
js
mov
xchg
loope
leave
or
popf
repz
inc
pop
dec
add
filds
cmp
jp
ret
adcb
add
fnstsw
scas
lea
das
jle
xchg
cmp
mov
aad
dec
mov
jp
inc
sarl
ror
xor
dec
adc
adc
cltd
inc
push
xlat
cmc
aam
data16
adcl
add
out
inc
js
or
testb
sbbl
aam
xchg
push
pop
cmp
sub
mov
mov
lods
cmp
out
mov
mov
lock
pushl
cmp
mov
hlt
cmp
pop
mov
add
jnp
imul
js
in
cmp
movsb
lods
dec
shll
xor
dec
in
pushw
sub
gs
cli
lahf
inc
sbb
imul
ss
js
dec
mov
jb
cmp
les
jge
cmpl
mov
popa
xor
xor
out
cmp
push
out
insl
pop
xor
pushf
dec
mov
mov
mov
or
daa
sbb
arpl
rcr
mov
adc
cmpsl
and
lret
stos
push
rcrl
cmpsl
pop
je
out
subb
sub
push
adc
cmp
loope
jg
arpl
fs
pop
xchg
enter
repz
imul
cmpsl
movsl
test
add
notl
ja
roll
negb
mov
out
nop
mov
mov
xor
push
push
das
or
sahf
es
int
mov
adc
inc
fstps
loopne
nop
fs
sbb
pushf
jp
jbe
cs
test
mov
or
ret
gs
mov
pop
sbb
mov
dec
mov
aad
lret
fcmovnb
inc
mov
mov
pusha
and
lea
ja
lock
inc
mov
test
fld
pop
out
push
sahf
les
sub
cmpsl
mov
lcall
pop
jmp
mov
xorb
jl
sahf
xchg
inc
enter
leave
lcall
cmpsl
xchg
stc
cltd
adc
dec
adc
push
aas
xchg
inc
sbb
push
dec
lods
xlat
mov
lcall
test
or
xor
stos
sub
pop
add
sub
mov
test
and
push
out
mov
dec
jg
push
scas
ror
sub
sti
sbb
xor
cmp
rorl
mov
cmp
jl
or
loope
inc
inc
repnz
call
rcrl
cmp
adc
inc
dec
cmpsl
gs
lock
ljmp
sub
in
and
fnsave
scas
psrld
sub
mov
jbe
fwait
cmp
fwait
pop
mov
fwait
mov
in
es
push
std
int
je
pop
in
cmp
xor
ret
aas
pop
cli
pushf
out
jae
xchg
cld
mov
stc
jnp
pop
sub
shl
mov
cmp
dec
jae
push
push
lret
sub
and
and
call
nop
imul
mov
mov
mov
addr16
mov
or
pop
out
repnz
add
xchg
and
jne
shll
dec
shr
int
repz
adc
cmpsl
mov
adc
pop
je
psllq
pop
mov
fs
or
mov
iret
sbb
xor
pop
add
dec
pop
push
fnsave
lcall
push
fidivl
adc
xchg
adc
gs
pushf
dec
test
xor
add
xchg
addb
loope
aas
cltd
xchg
pop
icebp
stos
mov
scas
je
sbb
mov
insl
cmp
leave
bound
and
jmp
ljmp
push
cmp
lret
sar
movsb
cltd
out
ret
gs
cmp
jb
movsb
xchg
push
xor
ret
orb
sbb
fdiv
push
push
pushl
xchg
in
inc
lods
repnz
cmp
dec
orl
subl
push
andb
jbe
inc
mov
mov
cmc
gs
xlat
push
notl
fstpt
jle
outsl
and
or
int3
gs
dec
inc
je
arpl
push
sbb
ror
dec
cwtl
dec
mov
mov
inc
and
or
inc
mov
enter
enter
ja
cltd
lcall
lret
shrl
aam
add
out
cli
lods
pop
repnz
js
adc
push
popa
sti
add
jl
orb
xchg
jg
sti
sbb
add
or
inc
push
adc
gs
mov
sbb
fadd
stos
ficoms
jge
das
cltd
movsl
adc
mov
idivl
jne
lock
inc
push
add
mov
out
and
ss
or
push
adc
out
pop
fs
data16
arpl
sahf
mov
and
pop
adc
int3
inc
jnp
mov
in
lcall
repnz
lods
and
ret
jge
adc
addb
mov
push
sbb
aas
aad
int3
xlat
icebp
std
add
ja
add
sarl
loopne
push
xor
lret
je
inc
or
cmp
popf
jecxz
imul
mov
xchg
sub
es
div
test
mov
push
xlat
or
and
fwait
and
fcomps
xor
push
cmp
nop
xchg
lea
ljmp
js
inc
or
repnz
add
sub
dec
dec
add
rol
mov
xlat
cmpsl
lcall
cmp
scas
fidivrl
addr16
xchg
nop
in
out
mov
fwait
ss
stc
sarb
les
stc
pop
std
das
jge
mov
andl
jb
mov
xchg
mov
into
sbb
jecxz
scas
and
orb
or
inc
cwtl
add
iret
cmp
ljmp
pop
jo
pop
jae
insb
stos
stos
out
faddp
mov
ret
inc
ja
sub
and
lea
inc
out
jns
inc
add
mov
mov
and
mov
rorl
mov
negl
aam
adc
mov
xor
mov
or
or
dec
inc
mov
aad
jmp
imul
mov
fists
and
lock
insb
mov
and
push
pop
ss
jmp
out
push
xchg
pop
mov
leave
pop
lcall
outsb
inc
nop
sbb
sbb
sbb
xchg
add
jmp
cld
cmpb
jbe
mov
sbb
jae
push
pop
pop
pop
mull
mov
leave
and
inc
inc
rolb
std
rcll
arpl
js
sbbb
mov
sbb
aaa
inc
xchg
xor
and
fwait
arpl
stc
mov
mov
mov
jle
sahf
xchg
dec
and
add
imul
int
jecxz
jb
jb
and
imul
pop
arpl
rclb
adc
cmp
pop
fstl
sub
enter
mov
movsb
push
mov
mov
jae
lea
sbb
fwait
and
mov
pop
jge
adc
shll
out
icebp
mov
adc
and
dec
add
pushf
jns
imul
mov
jo
cltd
sub
movsb
jle
xchg
pushf
imul
push
dec
hlt
cltd
ret
testl
mov
cmpsl
cltd
lds
lcall
jno
cli
or
int3
fwait
or
test
lret
jp
adc
in
xchg
test
out
das
pop
fmulp
xchg
push
push
mov
pushf
insb
lods
add
xchg
cmp
fcomip
subl
mov
push
pop
fadds
pop
and
jo
rolb
fidivl
or
sbb
aaa
xor
out
push
push
jl
push
decb
xor
cmp
jle
lret
in
inc
je
jns
popa
scas
out
mov
jle
repnz
inc
out
insl
add
shll
sub
push
xor
jecxz
fs
pop
cmovg
imul
and
pop
test
push
outsl
ss
jo
mov
jl
mov
push
pop
fcmovu
mov
cmp
adc
adc
xor
popf
pop
mov
rol
dec
add
dec
mov
out
jmp
icebp
lret
and
push
mov
xchg
imul
jl
aas
mov
imul
mov
mov
xchg
fisttpl
and
jp
clc
aad
imul
mov
jge
aad
call
push
jb
aaa
das
jne
in
out
xor
dec
int
lock
lcall
insl
les
sub
sub
repnz
imul
in
cmp
lods
xor
mov
test
jmp
jl
inc
add
cmp
push
or
jb
call
jbe
mov
dec
pop
mov
aaa
jge
test
out
jp
jecxz
mov
repz
jne
bound
mov
mov
movsb
cmp
mov
cmp
cmp
lea
inc
aam
test
dec
daa
pop
fs
ljmp
out
push
lret
ja
icebp
adc
and
cld
bound
xchg
jg
jnp
mov
test
mov
dec
rclb
cld
pop
xor
jnp
mov
shl
jge
or
jle
das
sti
scas
dec
dec
test
cmp
sub
mov
mov
or
mov
les
push
push
addr16
shlb
pusha
loop
cmp
idiv
push
and
nop
inc
xchg
imulb
or
add
pop
mov
lea
sub
movsb
or
push
iret
movsb
fistpll
add
mov
cmpsl
push
pop
mov
xor
sub
mov
movsl
sub
mov
add
cmp
mov
sbb
dec
in
mov
mov
scas
jl
jne
push
push
out
icebp
shll
ret
adc
in
inc
mov
push
ds
add
insb
lods
das
jl
and
shl
rorb
repnz
int3
repnz
mov
aam
and
in
ret
mov
push
ljmp
int
or
je
mov
pop
les
mov
sub
fstps
mov
rcll
sub
xchg
mov
lods
mov
xchg
out
push
and
dec
sti
lahf
cmp
mov
add
xor
ret
sub
mov
sahf
popf
mov
rcrl
sbb
aaa
fmuls
sahf
adc
pushf
xor
sub
push
mov
or
push
mov
cmp
adcl
push
stos
jmp
dec
cmpsb
into
pop
mov
popf
mov
jg
jae
xor
cmpsb
inc
out
scas
inc
sbb
dec
cmp
add
mov
je
and
adc
cmp
ret
push
mov
clc
jbe
cmp
inc
orl
imul
aam
into
xor
xchg
jge
mov
je
nop
cli
mov
in
cmp
inc
jne
loop
sub
int3
mov
push
sbbl
pop
cmpb
mov
mov
popa
add
leave
addr16
out
push
clc
xlat
add
pop
movsl
xor
xchg
int
and
cmp
xor
xlat
cmovnp
sbb
mov
jnp
shr
pop
add
imul
add
push
icebp
repnz
jp
mov
iret
pop
andl
lods
es
push
jnp,pn
mov
loop
push
sbb
add
or
sub
out
adc
lods
popa
mov
scas
imul
cld
dec
xorl
shll
xor
xor
jns
cmp
adc
stc
mov
mov
sub
mov
dec
jg
pop
stc
inc
popa
rcrb
pop
scas
dec
les
push
or
es
adc
xor
ja
clc
sbb
cmpsl
aad
faddp
ss
bound
push
dec
sarl
rcll
data16
cmp
es
out
mov
outsl
mulb
pop
std
imul
call
rcrl
push
pop
sub
test
xchg
pop
cmp
cmp
inc
inc
nop
popf
leave
pop
mov
aaa
xor
xchg
imul
daa
ret
inc
mov
jb
inc
adc
xor
sbb
sbb
xchg
lret
push
mov
add
push
divb
ss
in
cmp
dec
cwtl
mov
mov
adc
scas
mov
add
pop
dec
cmp
push
jbe
xchg
pusha
rcr
sarb
inc
fidivl
test
jo
pop
gs
sub
aas
xchg
lahf
or
movsb
cld
jl
dec
sti
jmp
xor
out
stos
pop
cmpsl
sbb
add
push
addr16
popf
dec
mov
addr16
add
je
add
ljmp
scas
jle
push
dec
push
in
push
and
dec
test
ret
icebp
mov
stos
cld
or
jge
jge
add
mov
lcall
jmp
push
out
add
fs
int3
es
adc
out
mov
in
aam
lret
cltd
add
xorb
push
test
leave
pop
pop
imul
cmp
push
mov
shll
mov
pop
call
xor
test
adc
lds
inc
adc
sarb
jg
outsb
xor
out
xor
scas
jg
pop
rcll
xor
xlat
xor
sti
adc
pop
pop
lahf
adc
and
inc
inc
pushf
mov
and
repnz
lods
jae
jg
cmpsl
jmp
sar
sbb
jbe
fs
shlb
push
jb
xor
mov
rcr
push
addl
in
jle
xor
pop
gs
repz
pop
jecxz
in
stos
add
push
dec
inc
xchg
adc
cltd
sbb
sub
sbb
insl
out
xor
mov
leave
dec
cmpsl
aas
iret
repz
outsl
jmp
lods
pop
cmp
addb
fstps
mov
pop
sbb
addr16
mov
shl
push
js
test
lods
sub
std
add
ds
popa
adc
into
dec
or
push
push
sbb
inc
push
iret
cmp
xchg
or
xchg
fs
inc
testb
jmp
or
cs
jge
loopne
out
fistl
rcrb
loopne
sahf
mulb
lahf
cmpsb
jnp
and
sub
cltd
cli
and
push
faddl
xchg
jae
das
push
mov
sub
adc
outsb
popf
icebp
lahf
out
in
fdivrl
jg
fidivrs
inc
sbb
pushf
rorl
mov
out
xchg
fldt
test
ja
pop
jo
cmpsb
mov
pop
mov
mov
jp
push
lahf
mov
xor
test
jns
data16
xor
or
and
dec
pushf
es
jne
sub
mov
mov
add
mov
rcrl
mov
xchg
sub
popa
pop
xor
pop
iret
mov
inc
popa
push
jo,pn
mov
and
sbb
dec
push
mov
mov
lcall
xchg
push
cmpsl
mov
cmc
aad
xlat
xorl
xchg
pop
jg
enter
js
mov
nop
repnz
jne
pop
loop
stos
les
push
sahf
int3
fildll
and
mov
jmp
sub
je
stos
pop
and
sbb
clc
mov
and
inc
push
mov
fldcw
dec
lret
stc
mov
mov
sub
cmpsl
xchg
or
je
lret
dec
mov
jmp
es
jb
push
jg
and
jmp
pop
xchg
lret
fadds
sbb
jne
sarl
mov
mov
aas
adc
out
push
or
add
adc
xorl
pop
subb
add
test
pop
std
pop
popf
jg
or
cmpsl
jb
and
aaa
sti
cmp
pop
xchg
adc
sub
sbb
xchg
nop
cld
cmpsb
or
push
rcrb
ficompl
pop
push
or
push
in
loope
scas
stc
sub
sahf
inc
dec
jbe
push
or
repz
adc
std
adc
test
movsl
jne
lcall
add
icebp
shll
sbb
push
or
outsl
cmp
xchg
sub
loope
push
iret
pop
mov
into
std
fsubp
outsb
lret
shll
lods
jg
shrl
mov
dec
mov
xchg
mov
aam
andb
mov
sti
movsl
mov
xor
lock
cltd
test
jb
mov
pop
push
ds
fdivrs
push
mov
and
push
int
cmp
mov
jns
sbb
xchg
lret
into
xor
or
test
xor
and
fucomp
push
fdivr
sub
rolb
mov
jns
and
icebp
iret
add
add
jo
cli
shrl
nop
xor
push
and
push
sbb
fimull
in
inc
jno
fcoml
test
in
cmp
sbb
mov
adc
mov
jp
jmp
adcb
or
aam
or
or
xor
and
orb
push
sub
lock
cmp
fsubr
data16
repz
mov
mov
sar
inc
fucom
into
push
or
inc
rclb
sbb
insb
push
xorl
mov
bound
rcrl
adc
subb
test
jmp
ret
sti
cmpl
inc
xorb
aas
sub
lcall
ja
cmp
or
mov
sub
jl
fisubrl
jne
mov
outsb
cmp
aaa
mov
push
xor
add
pop
xor
and
dec
jne
testl
mov
adc
into
inc
mov
mov
cmp
in
inc
dec
dec
scas
loope
lods
mov
mov
jns
add
pop
lret
movsb
shlb
popf
jle
into
pop
inc
pop
add
pop
pop
dec
or
into
sbb
cmp
jge
jnp
popf
push
bound
xchg
pop
mov
mov
xchg
push
mov
xchg
pusha
pushf
aad
and
test
sub
pop
jo
mov
test
fildll
mov
mov
jno
inc
adc
nop
jmp
loope
jo
mulb
sbb
repz
sbb
dec
adc
add
add
out
scas
movl
movsl
jl
test
in
in
stos
xchg
icebp
adc
adc
cmp
imul
xchg
sub
bnd
insl
and
mov
cmc
fidivrl
xor
mov
int3
sub
sub
pop
mov
cmp
mul
inc
mov
add
cmp
adc
cmp
xchg
stos
pop
mov
inc
sbb
mov
and
xchg
inc
fcomip
ds
or
aam
jp
jne
fisttps
pop
loop
es
inc
das
icebp
sub
mov
leave
jge
and
ss
inc
sub
dec
mov
bound
pop
ds
push
andb
and
ss
imul
repz
ss
das
repnz
or
adc
outsb
js
rcr
pop
mov
xchg
xchg
jnp
in
test
pop
rcrb
daa
add
scas
iret
push
mov
and
aam
hlt
mov
bound
pop
mov
push
push
imul
into
dec
in
mov
js
mov
xchg
jmp
dec
mov
icebp
dec
ficoml
dec
sub
jmp
bound
mov
ss
fs
cld
cmp
dec
or
and
enter
flds
sbb
cmpsl
mov
or
data16
cmp
leave
inc
adc
xchg
loop
jnp
adc
inc
xchg
sbb
daa
popa
int
mov
push
jmp
jecxz
adc
and
scas
sub
daa
lods
mov
inc
test
or
adc
test
mov
in
enter
push
add
loopne
roll
cmp
cpuid
pop
xchg
mov
add
lret
mov
aas
cld
cmp
ja
sbb
nop
xor
aas
mov
cmp
arpl
jae
inc
pop
sub
lds
pop
jns
je
add
pop
lock
in
xlat
adc
pushf
pop
pop
popf
cvttps2pi
cmp
add
subb
incb
cmpsb
pushf
cwtl
sub
idivl
rol
and
aaa
faddl
xchg
pop
add
inc
adc
push
pop
push
and
mov
push
inc
inc
ja
dec
xchg
and
dec
dec
adc
or
lret
adc
rolb
xor
aad
nop
jno
ja
aad
pop
jp
sub
leave
addr16
push
or
inc
xor
jecxz
mov
dec
pop
ja
xchg
fldl
fcoml
add
int3
aad
inc
and
adc
pop
push
imul
cmp
mov
add
cmp
xor
inc
push
popa
fmull
cmp
ret
cmp
arpl
cmp
test
out
movsl
and
or
and
xor
cmp
ss
shrb
inc
sub
in
loope
mov
mov
js
push
dec
mov
ds
sbb
test
test
cwtl
jnp
lock
xchg
mov
xor
int
jo
mov
mov
push
movsl
in
push
lods
addb
dec
jae
daa
stos
jno
xorb
mov
sbb
js
add
shll
mov
add
pop
mov
pop
rcrl
sbbl
js
pusha
mov
in
pop
dec
iret
sbb
inc
aaa
jmp
cmp
pop
test
mov
xor
lahf
shlb
leave
lods
lcall
add
sbb
scas
rorl
rcr
lea
jne
daa
lret
outsl
pusha
jnp
out
xchg
pop
add
jecxz
outsl
xchg
mov
cmpsb
lock
fcompl
mov
addb
xchg
mov
outsl
out
gs
mov
dec
enter
jle
dec
pusha
imul
dec
enter
movsb
testb
iret
ss
sub
push
mov
mov
cwtl
dec
cmp
mov
add
rcr
ss
rorb
in
or
in
sbb
mov
lock
rclb
push
pushf
sbb
mulb
movsb
xor
in
push
stc
fstpt
pop
xchg
in
sbb
dec
mov
int3
jmp
les
movsl
push
and
inc
inc
aas
rcl
and
out
jns
and
push
or
pop
cmp
rol
shlb
pop
dec
xor
xchg
adc
sarb
xchg
ja
cmp
add
xchg
sbb
add
adc
mov
add
sub
adc
xchg
jno
jae
in
xchg
inc
xchg
jne
cmpsb
fwait
or
lock
or
sub
adc
stos
int3
nop
push
lea
adc
xor
out
and
sbb
mov
bound
sub
cwtl
pop
sbb
dec
pop
int3
enter
mov
mov
pop
inc
shll
jbe
push
shr
sbb
cmp
dec
cmp
mov
add
jnp
lret
jb
stos
mov
xchg
cwtl
jno
sub
jp
mov
and
push
sti
pop
cs
pusha
dec
mov
fiadds
outsl
push
repz
push
push
dec
mov
cli
and
ja
lock
imul
push
sub
fsubrl
jno
inc
fldl
jp
int
jb
or
ficompl
insb
shll
mov
fiaddl
lds
sbb
js
ret
ss
xchg
insb
jecxz
or
loopne
jns
sbb
add
cmpsl
and
or
adc
or
jo
ljmp
lock
xor
xchg
sti
cmp
push
xchg
aam
lds
pop
lret
jg
xchg
sbb
movsl
cwtl
je
pop
or
test
jbe
or
ljmp
adc
jb
insb
mov
fwait
mov
sbb
push
sahf
scas
mov
call
sbbl
pop
ja
sub
fimuls
mov
jno
push
lea
dec
ret
das
mov
pusha
nop
test
loope
mov
mov
pop
adc
mov
ss
pop
cmpsb
iret
xor
sub
pop
xchg
stc
es
xchg
jle
rcrl
in
add
cld
xchg
inc
out
and
push
or
jb
stc
fiadds
fs
hlt
lcall
mov
push
mov
lret
inc
add
icebp
add
pop
popf
or
jo
mov
fmuls
in
add
subb
cmp
sti
mov
sub
popf
sahf
loopne
xchg
jmp
dec
scas
pop
dec
inc
xlat
jo
cld
add
add
jo
inc
push
mov
mov
cmovae
jg
into
xchg
aas
xor
enter
sbb
dec
add
mov
orb
pushf
push
push
stos
fidivs
insb
jecxz
xor
popf
lods
dec
ret
sbb
xor
div
dec
jp
fnstsw
and
mov
dec
xor
lods
int3
mov
and
addr16
jg
loop
rcrl
push
sub
inc
dec
imul
jae
hlt
jo
roll
add
ffree
popa
jns
mov
xor
aas
jns
pop
out
clc
ds
je
ffreep
cltd
mov
mov
mov
ds
imul
lock
xchg
imul
loope
ljmp
xor
dec
aas
and
pusha
xchg
lods
jmp
loope
lock
cld
pop
xchg
sbb
cmp
faddl
push
orb
nop
and
bound
cmpsb
dec
xchg
aas
lahf
loope
and
cmp
fidivrs
shll
imul
cltd
cltd
xchg
mov
ret
sub
xchg
leave
pop
inc
adc
fs
aam
or
and
loopne
popf
lock
jp
xchg
je
mov
addb
sbb
cli
push
add
out
aad
and
add
and
sub
mov
bnd
std
pop
mov
mov
jp,pt
and
jnp
inc
notb
or
pop
and
pop
add
adc
movsb
das
roll
cmp
and
in
mov
movsb
in
sbb
ret
lcall
fwait
mov
lret
cwtl
cmp
popf
cmp
pop
repz
push
stos
add
sub
jae
jne
xor
fwait
clc
js
dec
lock
mov
andb
ret
xlat
sub
sub
pop
pop
pushf
daa
add
lcall
idivl
add
mov
sub
mov
add
cmp
ds
mov
lahf
push
lcall
mov
test
sub
push
sub
sbbb
clc
je
leave
out
pushf
sub
subb
xor
or
push
aam
push
add
mov
or
adc
arpl
xchg
imul
add
push
jle
test
sbb
enter
aad
les
insl
inc
lods
add
in
out
add
mov
push
dec
pop
adc
int
jne
mov
fisubl
movsl
push
inc
xor
pop
es
xor
xlat
inc
or
or
xchg
mov
out
out
adc
inc
mov
push
nop
mov
mov
lea
dec
dec
cmp
lock
pop
aaa
sub
sbb
push
pop
out
push
add
adc
mov
cmc
lock
daa
aad
ret
pushf
jmp
add
js
loopne
lods
icebp
push
sub
pusha
cmp
stos
add
out
adc
into
xor
lds
mov
xchg
cmc
ljmp
push
push
popaw
insb
popa
sahf
decb
mov
and
jle
cmp
mov
pop
popa
or
push
sbb
push
dec
lods
inc
mov
add
cmp
pop
mov
add
push
std
sub
add
mov
and
mov
mov
pop
inc
mov
les
shll
mov
icebp
push
xchg
inc
mov
fsub
mov
push
jb
xor
mov
jo
and
lret
out
testl
inc
jae
test
out
in
sbb
sub
out
xor
add
mov
xchg
pop
push
and
gs
pushf
cmp
push
and
mov
repz
stc
mov
mov
fnstsw
fiaddl
xchg
and
pop
pop
scas
pop
mov
icebp
adc
push
or
xchg
enter
rcr
xchg
jle
imul
mov
insl
aam
or
test
add
cld
adc
stos
xor
aaa
int
xchg
aad
pop
orl
mov
das
insb
ja
lcall
xchg
lock
scas
inc
mov
scas
jl
mov
cmp
and
mov
sub
dec
mov
mov
cld
push
add
out
mov
jns
xchg
in
fiadds
push
out
adc
xchg
sti
or
mov
sahf
pop
pop
in
cmp
add
out
lea
scas
add
or
jle
sub
mov
sahf
mov
cli
jle
add
jle
lret
out
lea
add
or
dec
inc
push
jo
mov
in
pop
gs
mov
stc
out
stos
mov
or
dec
jg
jne
loop
push
hlt
repz
pop
jne
jecxz
mov
ds
call
xchg
sbb
mulb
jl
push
sub
ja
push
xchg
addr16
inc
xchg
mov
ret
cmp
sbb
out
sbb
ret
les
mov
leave
cli
xor
inc
jge,pt
adc
lods
imul
lods
in
outsl
mov
cmp
test
ds
jl
mov
xlat
jmp
outsl
xorb
push
dec
int
xor
scas
sub
daa
stos
adc
ja
mov
sbb
test
aaa
mov
notb
xor
adc
pop
dec
clc
repnz
lret
inc
xchg
lcall
xchg
mov
pop
stos
call
cmpsl
lods
in
test
mov
adc
clc
xor
out
sbb
adc
loop
xchg
sbb
pop
dec
cmp
mov
push
shll
insb
fmull
push
imul
sub
pushf
in
movsl
xchg
cmp
mov
movsl
out
cmp
cmpsb
mov
rclb
mov
into
sbb
lds
xlat
mov
xchg
cmpb
or
cmp
outsl
les
mov
rcrl
xchg
jmp
inc
jmp
jne
xchg
or
sub
leave
pop
in
xchg
jle
jae
jmp
lret
lcall
in
es
hlt
dec
sub
leave
stc
lcall
mov
fwait
xchg
and
xchg
cld
xchg
lea
pop
out
in
popl
lea
jp
mov
cmp
dec
mov
xor
jmp
add
movsb
in
rcrb
repnz
sbb
adc
orb
xchg
cmpsb
clc
ds
xor
ds
or
add
aad
jge
fstpt
mov
dec
cmc
mov
ss
add
sahf
cltd
das
leave
in
mov
pop
adc
leave
cmp
pop
shlb
popa
mov
mov
sti
pusha
ret
out
mov
popf
insb
out
mov
or
cwtl
xor
push
ja
mov
out
jl
idivl
fcmovu
imul
jne
pop
xchg
jge
mov
loop
cmp
dec
xchg
repnz
lret
push
mov
push
nop
cld
pop
mov
add
lock
sbb
mov
pop
inc
js
clc
push
lret
lahf
cmpsb
push
inc
fiaddl
push
push
xchg
sbb
dec
fdivl
lcall
fsubrl
cmp
inc
push
adc
dec
mov
stos
mov
cltd
mulb
pusha
outsb
mov
popl
inc
or
sti
jg
mov
push
ror
cli
mov
shl
pop
jbe
mov
cmp
cmpsl
and
imul
jo
pop
mov
push
cmp
mov
movsb
fdiv
notl
fcoms
dec
mov
ret
pop
add
movsb
aas
inc
sub
sub
jmp
jle
das
scas
inc
and
rorb
jno
cli
adcb
jg
xchg
jmp
add
out
adc
sti
movaps
fists
adc
sub
imul
loop
std
and
jbe
jmpw
cmp
xor
sub
ss
popa
push
fisttpll
sub
out
out
mov
push
bnd
gs
cmp
sbb
or
and
sbb
xchg
inc
dec
pop
xchg
mov
div
in
pusha
sbb
add
jo
in
jecxz
cmp
popl
xchg
sbb
xchg
jo
inc
fistl
inc
fmul
sub
ja
xchg
outsl
decb
or
hlt
adc
mov
loopne
sub
xor
pop
xchg
mov
adc
inc
stc
cmp
loope
sbb
pop
mov
xor
pop
adc
cs
and
ljmp
outsb
jge
shll
or
sbb
jbe
pushf
sti
stc
subl
popa
je
mov
jno
push
icebp
mov
pop
mov
or
clc
inc
jns
push
nop
mov
int
aad
xor
testb
cmpsb
sbb
pop
push
jno
loope
clc
fcoms
lret
ss
dec
stc
lahf
aad
pop
es
mov
mov
mov
testb
je
fsqrt
inc
je
das
jae
ljmp
mov
pop
cld
push
jl
movsl
xor
add
add
or
cli
fisttpll
sbb
or
es
sbb
inc
neg
nop
mov
inc
in
add
imul
nop
adc
jb
iret
xchg
mov
pushf
loop
mov
mov
mov
jae
mov
pop
sbb
cmp
dec
and
sarl
mov
mov
inc
test
test
addb
mov
push
xchg
xor
mov
loope
movsb
sub
xor
test
int3
mov
ret
dec
pushf
and
cmc
sbb
sahf
ljmp
or
rcrl
and
sub
jne
sub
arpl
cli
addr16
mov
test
orl
test
xchg
add
mov
cmp
cmp
mov
mov
xor
insl
imul
inc
psllq
pop
arpl
jecxz
fildl
scas
iret
mov
mov
jne
pop
cmp
mov
test
das
push
dec
mov
or
mov
arpl
xor
jo
mov
xor
push
lods
cli
add
dec
or
bound
jle
in
fwait
mov
ljmp
or
xchg
ljmp
inc
call
rcll
ret
push
shlb
in
lea
fcmovne
adc
dec
jle
fwait
popa
push
xchg
rcpps
test
leave
push
mov
mov
jns
and
pop
inc
int
fidivrl
sub
stos
mov
push
and
sub
and
jg
mov
es
aam
push
test
cmc
aas
mov
int
mov
xor
dec
and
pop
stc
or
xchg
popf
add
xchg
fwait
nop
dec
dec
xor
jnp
mov
jae
out
gs
lret
or
or
mov
xor
cmc
mov
cmp
incb
arpl
notl
movsl
push
popf
fdivrp
push
add
fucomp
daa
xchg
aam
xchg
lcall
lret
or
mov
push
mov
fxam
and
cwtl
aad
test
mov
mov
sub
xchg
push
adc
sub
adc
movsl
mov
sar
test
cltd
adc
in
inc
mov
sub
dec
pushf
pushf
jl
inc
pusha
int3
xchg
andl
sbbb
sub
rorl
cmovp
icebp
cwtl
mov
data16
jmp
ret
or
xchg
dec
insl
je
adc
inc
mov
into
mov
repz
fld
mov
jno
jne
clc
xlat
add
cmpsl
popa
data16
fadd
test
test
fidivrl
sbb
pop
mov
push
in
rorb
add
aam
scas
loop
mov
push
rcl
movsl
sahf
fdivrs
lret
xchg
movsl
in
sub
or
inc
insb
push
fidivl
push
sti
test
push
pop
mov
daa
data16
xchg
ja
aas
fstps
add
add
mov
sti
inc
insl
jns
ret
push
enter
dec
mov
mov
mov
clc
enter
ret
pop
fstpl
das
mov
shlb
scas
mov
mov
dec
leave
das
or
or
jb
dec
loopne
xor
push
jg
sbb
inc
dec
push
ds
in
cmp
int3
popa
movsb
bound
sbb
insb
ror
xchg
xchg
add
scas
jnp
popf
cld
pop
daa
cli
fwait
cli
xchg
adc
or
js
cld
int3
stc
int3
test
mov
andl
repz
jo
incb
fs
xor
leave
push
dec
fcompl
adc
sbb
mov
xor
mov
pop
mov
jne
data16
lcall
sbb
pop
test
jb
inc
xlat
or
test
mov
mov
xor
out
xor
jge
movhlps
andl
jne
rclb
dec
aad
cmpsl
adc
push
scas
inc
pop
inc
shrb
das
ja
jne
imul
push
lahf
push
cmp
sub
push
out
std
xchg
and
mov
aad
adc
inc
ficoml
mov
sbb
lahf
mov
insb
cmp
inc
shll
push
adc
lods
out
shrb
add
neg
xchg
outsl
les
gs
sub
hlt
pop
adc
jle
das
sub
lcall
nop
push
mov
sbb
sub
and
adc
dec
icebp
and
push
cltd
mov
dec
cmpsb
insb
or
popa
call
pop
shr
mov
sarl
int3
lret
aaa
loope
add
loopne
ret
ret
cmp
stos
rcll
jmp
insl
fnsave
xor
lea
imull
sahf
cmc
inc
or
xor
sub
data16
sahf
pop
push
and
xchg
jbe
lock
dec
pusha
push
in
data16
adc
mov
cmp
sub
out
scas
adcl
jmp
and
push
add
pop
test
test
mov
sbb
pop
xor
xor
loop
inc
int3
arpl
cld
pop
pop
ret
rclb
mov
loope
mov
xlat
xor
mov
scas
out
aas
xor
jb
mov
jno
fsubrl
in
cli
mov
movsb
imul
pop
test
mov
cmp
ret
sub
out
adc
or
pop
ss
gs
fdiv
jg
inc
pop
dec
movsb
fnstcw
pop
shll
aaa
xor
push
leave
sti
pop
sub
jne
mov
or
test
or
pop
stos
sbb
cmp
and
jo
push
mov
hlt
xor
mov
inc
sbb
dec
sbb
out
jbe
shlb
ss
call
cwtl
or
xor
imul
call
popf
xor
push
push
dec
into
pop
scas
sahf
arpl
cmp
subl
scas
rcrl
out
arpl
stc
adc
leave
jbe
mov
lcall
xor
cli
jmp
imul
and
lret
enter
rolb
inc
add
das
cwtl
enter
imul
hlt
sahf
xchg
rcll
mov
lds
mov
in
push
mov
pop
push
rcll
aad
pop
inc
sbb
adc
push
pop
adc
cmpl
repnz
jge
fwait
rcrb
stc
mov
mov
fisttpl
xchg
add
lret
add
and
aam
and
mov
pushf
shl
mov
xor
pop
mov
mov
test
cs
pusha
jno
mov
xor
mov
jmp
sarb
inc
xchg
pop
fldenv
ss
out
mov
sub
and
fdivrs
insl
mov
loope
cmp
jae
hlt
lret
loope
js
aaa
and
or
in
add
sbb
jnp
movsb
sub
movsl
and
decb
xlat
push
xchg
push
push
test
imul
dec
lcall
mov
out
lods
mov
cmp
nop
push
dec
clc
and
mov
insl
pop
or
out
lods
pop
add
jecxz
imul
jl
test
xchg
push
daa
xchg
negl
xor
addb
test
inc
jmp
mov
dec
stos
inc
dec
aad
aas
adc
jge
xor
push
xor
and
pushf
cmp
dec
call
aam
aam
mov
iret
aam
divps
int3
lret
andl
scas
mov
jnp
lods
mov
jne
dec
insb
shl
imul
je
fdivrs
push
data16
adc
dec
loopne
fsubs
jno
sbb
and
int3
out
pushf
js
xchg
sar
jae
mov
ret
clc
jne
dec
fsubl
push
loope
lret
out
jb
xchg
mov
fildl
dec
or
push
sbb
mov
mov
mov
push
jecxz
sbb
mov
xor
fimuls
in
cmp
out
mov
lahf
dec
jp
leave
notb
jne
dec
lret
inc
imul
xchg
in
push
cmp
cmp
test
mov
mov
lahf
cmp
icebp
fildll
pop
bound
xchg
fildll
loop
mov
ret
jge
nop
adc
and
scas
loopne
stc
mov
sub
dec
jns
and
sbb
xor
mov
jecxz
fcmovbe
shl
mov
js
pop
pushf
cs
xlat
aad
sbbl
push
and
jg
repnz
xchg
out
and
mov
ss
mov
in
lea
xor
stos
idiv
repnz
enter
ret
int3
int3
add
dec
shll
cmp
adc
loope
fs
test
imul
fwait
mov
fdivrs
dec
sub
push
inc
mov
inc
sbb
add
les
stc
jbe
pop
das
popa
mov
divb
loope
jle
stos
dec
push
xchg
pop
inc
call
add
daa
pop
in
xchg
push
cmpsl
cmp
push
std
insb
cmp
ficoms
add
shrl
lret
enter
mov
mov
aaa
jmp
pop
inc
pop
cmp
loope
push
dec
add
les
add
push
push
dec
adc
xor
sub
orb
sub
mov
js
or
xorl
mov
jp
jl
cmpsb
mov
ja
repz
add
mov
adc
dec
popf
popa
out
scas
xchg
mov
dec
decb
lods
sbb
jb
xchg
outsl
adc
and
mov
cs
dec
sti
push
js
cmp
daa
loope
cs
sub
in
ret
test
xor
xchg
incb
inc
dec
xorb
pop
iret
icebp
in
jnp
andb
push
sbb
out
add
jns
and
lahf
pop
stos
jnp
stc
addr16
sub
mov
fildl
aam
rclb
sbb
pop
sub
or
loope
popf
daa
int
loop
mov
push
push
insb
lods
pusha
in
xchg
inc
cmp
fsubr
stos
scas
or
lahf
push
mov
test
push
add
mov
loope
pop
push
mov
in
int3
test
call
push
scas
push
dec
bnd
sahf
test
imul
mov
jb
stos
jp
das
pop
lea
dec
jno
aas
cmp
pop
icebp
enter
cli
push
mov
std
aam
xlat
jbe
std
cltd
jle
xchg
inc
cltd
test
adc
cmp
lea
jae
scas
jae
repz
jmp
add
sbb
jns
cmp
sub
addr16
in
in
aaa
lcall
out
lret
push
mov
adcl
add
mov
and
ss
xor
pop
ret
push
repz
aam
sbb
ret
push
int
sub
inc
leave
addl
xor
je
mov
test
fcmovnbe
inc
mul
mov
sbb
xchg
dec
shll
jne
push
inc
mov
daa
xchg
test
call
push
and
jecxz
cmp
test
and
cmp
sbb
adc
orb
fwait
in
pop
shrl
push
test
or
gs
aad
add
adc
por
iret
fs
shrb
push
mov
push
xor
fadd
jl
popa
sbb
sbb
pop
les
add
mov
imul
roll
xchg
and
cld
insl
cli
ljmp
pop
or
shlb
pop
mov
sbb
mov
dec
ret
insb
pop
outsb
daa
xchg
call
pop
and
stc
xchg
adc
mov
ja
mov
mov
lea
hlt
icebp
movsl
or
xchg
test
jo
xchg
fisubs
and
adc
arpl
lock
adc
mov
daa
fnsave
mov
jno
fcmovne
xchg
cli
cmp
sbb
in
or
sbbl
ret
xor
jecxz
push
jb
pushl
fisubl
sub
or
es
inc
aam
or
ficompl
xor
jns
xor
and
cwtl
mov
push
fucom
jmp
nop
iret
stos
imul
movsb
ja
or
lret
mov
mov
mov
jo
stos
js
outsb
dec
sub
cltd
pusha
push
xor
movsl
clc
aas
mov
enter
sar
jnp
fmuls
xchg
lea
fstp
jnp
cs
jmp
shl
jge
lock
dec
mov
inc
mov
lahf
divl
sub
je
push
mov
xchg
cmp
xor
ss
sub
dec
inc
xchg
call
lret
imulb
lcall
in
sbb
pop
out
or
dec
pop
adc
mov
call
and
jle
xchg
sub
adc
jbe
les
mov
dec
sub
push
mov
inc
imul
push
sbb
hlt
and
xchg
notl
shlb
and
push
and
ljmp
incl
push
lret
or
shl
repz
sbb
lahf
aad
dec
xchg
mov
loopne
mov
in
xchg
mov
in
mov
jmp
or
das
inc
or
and
mov
push
insl
and
out
cli
cmp
ret
xchg
or
mov
in
sbb
push
scas
pop
add
push
dec
and
sub
push
lods
hlt
sbb
pop
add
and
adcb
mov
mov
test
xlat
mov
sar
xchg
popf
lock
repnz
xchg
jp
hlt
idivb
push
xor
jae
mov
sbb
arpl
mov
sbb
adcl
push
cmp
sahf
loope
jl
mov
pop
clc
mov
inc
ficompl
or
lock
not
sbb
sahf
jg
int
mov
xor
mov
rcrb
pop
mov
data16
loop
add
in
mov
sbb
mov
fisttpl
push
mov
leave
pop
mov
std
cmc
mov
mov
xacquire
pop
lea
or
push
je
or
sbb
out
mov
test
sbb
xchg
xor
cli
fidivs
andl
outsb
add
shrl
arpl
jecxz
repnz
jmp
or
jae
bound
outsl
sbb
xchg
imul
fsub
xor
adc
jecxz
mov
out
xchg
dec
lock
mov
sub
inc
sarb
push
and
mov
mov
sbb
pop
mov
mov
xor
add
adc
jge
out
mov
pop
bound
shll
mov
xchg
mov
mov
add
mov
jg
pop
mov
or
sub
mov
push
mov
cld
outsb
xor
dec
jbe
or
adc
jl
sub
idivl
xlat
pop
mov
sub
mov
lahf
addr16
xchg
xchg
mov
imul
xchg
in
xchg
push
mov
push
mov
lret
test
mov
xor
stos
xchg
xchg
orb
lcall
movsl
inc
lods
insl
mov
adc
ret
cs
push
test
sub
sbb
int
xchg
mov
mov
mov
push
xchg
add
orb
mov
push
or
das
add
cli
cmpsb
sbb
adc
enter
inc
xor
xor
outsl
pop
sti
lea
outsb
cmp
or
cmp
jae
sbb
ljmp
inc
xor
pushf
jo
stos
fmulp
leave
fadd
cmpsb
scas
jp
mov
jge
loope
fsubr
dec
out
mov
xchg
pop
or
scas
mov
jns
xchg
or
cmp
xor
lods
outsl
dec
iret
cmpl
bound
cmc
jmp
mov
ja
cmpsb
push
mov
xor
fcmovnu
out
pop
add
scas
mov
repz
leave
iret
test
in
pop
loop
sti
leave
xor
addr16
cmp
mov
test
cmp
out
cmp
push
add
sbb
xor
pop
xchg
mov
jns
pop
movsl
cld
ja
pop
xor
inc
mov
sbb
mov
cld
add
xlat
fs
pusha
adc
xor
pop
and
cmp
inc
daa
ret
test
sub
pop
dec
mov
subb
jae
mov
inc
ds
dec
rorl
ss
jle
xor
mov
rorl
js
nop
mov
cli
lea
cmp
into
gs
sbb
sbb
sbb
ja
mov
inc
pushf
pop
mov
push
pop
das
lods
int3
mov
jo
adc
adc
jbe
push
sub
maxps
lahf
insb
mov
es
sbb
jae
mov
pusha
cld
mov
dec
mov
std
test
add
pop
hlt
push
xor
add
les
icebp
xchg
les
stc
out
pop
repz
add
test
jns
pop
jge
out
lds
mov
lock
pop
cmp
pop
or
aas
adc
fistpll
sub
flds
mov
mov
xor
mov
add
xchg
inc
push
scas
loope
nop
mov
or
seto
lcall
sub
pop
mov
std
mov
ss
xchg
and
shll
icebp
jae
push
inc
in
mov
inc
xor
shl
inc
push
addr16
je
sti
mov
std
sbb
or
dec
or
adc
dec
xchg
pushf
imul
add
inc
cltd
inc
js
mov
int
aas
mov
popf
test
cmpsl
add
mov
repnz
sbb
int
repz
dec
dec
test
cmp
shll
out
sbb
cs
cmpsl
arpl
or
jmp
or
inc
push
or
push
adc
fldt
dec
rorl
pop
pop
sbb
sbb
add
mov
mov
dec
inc
fwait
aad
imul
sub
inc
cmp
mov
jl
push
popf
xchg
jne
jle
pushf
inc
adc
je
arpl
and
or
inc
push
scas
arpl
mov
xchg
push
cmp
in
pusha
jp
cltd
jne
xor
cmp
hlt
iret
sti
pusha
scas
and
mov
adc
out
adc
popa
ljmp
pop
push
fdivrs
cmc
xlat
sar
sahf
addr16
xchg
sub
hlt
movsl
push
sub
mov
cli
pusha
imul
fwait
jae
and
mov
testl
out
mov
jg
mov
pushf
pop
jnp
sahf
jae
hlt
imul
push
jmp
lods
jns
mov
dec
hlt
popf
fisubs
out
inc
add
xchg
or
int
lcall
sbb
mov
loopne
sahf
decl
dec
and
loopne
pop
ret
dec
push
dec
cmp
fistl
rcrl
or
sub
sub
imul
push
mov
test
xchg
mov
dec
sub
xor
fwait
mov
imul
hlt
sarb
dec
lret
insl
add
scas
jecxz
ss
sbb
adc
nop
insb
pop
push
enter
sti
xchg
fistl
jle
insl
mov
loopne
fisubrl
sub
popf
add
into
cmp
inc
inc
scas
test
push
inc
lods
inc
int3
popa
je
xor
cmp
jno
lahf
cmp
sub
pop
sbb
cli
and
pop
push
sbb
into
lcall
loop
insb
ja
flds
hlt
mov
mov
aam
and
stos
xchg
or
cmp
notl
push
xor
aas
dec
push
and
aas
jno
xchg
dec
mov
ljmp
emms
pop
fimuls
inc
shlb
sbb
dec
mov
push
inc
or
xchg
mov
push
jnp
add
nop
xor
test
dec
xchg
mov
testb
push
lret
push
out
repz
outsl
sbb
loopne
mov
lods
aaa
push
add
xor
add
cmpsl
stos
jmp
pushf
cli
xchg
pop
mov
jae
mov
cmp
int
push
les
aaa
cmp
push
arpl
adc
int3
sub
sub
ss
addr16
sub
hlt
mov
mov
hlt
fwait
decb
push
jne
sbb
xchg
je
mov
xor
push
inc
ret
outsl
mov
xorl
repnz
hlt
xchg
push
loop
cmc
adc
nop
aas
cmpsb
add
or
ljmp
add
dec
loop
negb
push
lea
shlb
test
vpsubd
push
out
inc
inc
shlb
jmp
ret
in
clc
sbb
adcb
orl
shl
push
repnz
movsb
in
enter
fs
adc
les
addb
adc
add
std
and
adc
add
xor
arpl
push
mov
loopne
ffree
pop
xchg
cmp
xchg
bound
inc
push
loopne
ret
or
add
pop
xchg
loop
xlat
lret
jnp
mov
movsb
sbb
mov
out
xchg
xchg
shrl
mov
test
out
stc
into
sub
fadd
cmpsl
pop
mov
das
or
daa
push
push
emms
mov
sbb
das
leave
xor
fsqrt
pusha
ja
out
aas
fiaddl
xchg
mov
jb
daa
cmpsl
xchg
scas
adc
sti
jns
mov
jae
mov
fs
out
cld
insb
out
rcrl
sbb
iret
push
pop
iret
dec
xor
adc
ja
cwtl
cmp
bound
push
hlt
or
xlat
push
es
mov
pop
pop
lret
enter
int3
imul
rolb
lea
mov
pop
js
mov
dec
movsb
mov
push
rcrl
loope,pt
inc
pop
mov
cwtl
mov
outsl
stc
stos
mov
in
sub
scas
lret
mov
xchg
add
leave
push
sub
in
mov
aas
lea
test
xchg
cmp
dec
testl
dec
addb
dec
or
iret
sub
mov
inc
add
movsl
mov
insl
jnp
scas
sbb
add
js
sbbb
js
sub
in
inc
enter
mov
lock
xor
lcall
jg
rcrb
xor
sub
mov
outsl
addr16
adc
arpl
out
lret
lahf
repz
js
jo
rclb
roll
xchg
je
lods
mov
fwait
daa
dec
lea
mov
iret
repz
mov
gs
cmpsl
dec
lcall
popf
xor
fmull
push
and
insb
ja
inc
or
movb
lahf
jno
pushf
mov
xor
in
dec
imul
jecxz
inc
sub
jl
add
mov
sub
or
adc
dec
xchg
pop
les
fdivrs
call
rcll
push
mov
adcb
jnp
scas
mov
xor
std
cmpsl
xchg
sti
pop
xchg
les
pop
mov
ljmp
cmpb
jnp
mov
dec
fcmove
and
xor
js
pop
mov
sub
dec
lcall
mov
hlt
test
pop
ds
sbb
dec
dec
and
push
jns
xor
fcomps
xchg
ljmp
adc
jb
mov
xchg
xchg
in
inc
cld
pop
out
xor
pop
bnd
test
sub
test
shlb
sub
mov
or
adc
jl
mov
lret
testl
imul
push
lret
xchg
pushf
mov
cmpb
sbb
cli
in
xchg
repnz
xchg
push
ret
push
or
push
sbb
cwtl
fisttpll
pop
das
mov
push
ror
adc
mov
dec
loope
pop
outsb
fsubr
adc
mov
hlt
sbb
add
sub
adc
sbb
mov
push
xchg
fs
xor
pushf
leave
pop
xlat
adc
inc
sti
ret
pop
hlt
inc
xor
insl
dec
mov
inc
fistpll
out
lcall
inc
adc
mov
push
mov
aaa
fldl
cmpsl
jl
pop
sets
pop
fdivs
adc
adc
xchg
and
cli
lcall
dec
je
mov
push
mov
adc
out
pop
out
xchg
stos
aas
xchg
int3
test
pop
mov
pop
int
test
xchg
xlat
push
sub
into
add
mov
or
test
mov
aam
shlb
xor
xor
and
add
push
maxps
mov
mov
sbb
sbb
mov
fdivrl
xchg
loop
mov
enter
pop
xor
mov
faddp
das
data16
or
mov
mov
jp
lds
mov
push
pop
and
cltd
sbb
push
popa
arpl
mov
add
enter
pop
xchg
jne
test
jle
stc
mov
sbb
jnp
sahf
pop
fisttpll
iret
jp
icebp
daa
aas
push
aad
cmpsb
sub
fsts
jns
repz
loope
add
jbe
inc
jbe
pop
sbb
cmp
sub
arpl
std
cmp
pop
dec
pop
mov
imul
jns
mov
iret
cs
stos
movsl
xchg
setp
add
cmc
sarl
or
and
xor
mov
lahf
inc
jp
sbb
dec
loope
popf
or
stos
cmp
xchg
popf
dec
jle
mov
xchg
jg
in
mov
adc
lcall
cli
cmp
hlt
cmpb
mov
pop
jge
mov
and
mov
lods
push
inc
mov
jae
lds
mov
nop
sbb
inc
inc
das
mov
sahf
outsb
les
jo
jae
xchg
dec
sti
adc
int
rcrb
fimull
fcmove
jae
pop
loope
lods
jo
and
fst
fwait
repz
hlt
sbb
jge
les
fldenv
mov
push
inc
mov
shl
xchg
adc
pop
cmp
push
push
dec
mov
push
or
cmp
mov
mov
xchg
ljmp
into
ficompl
in
ljmp
mov
mov
push
loopne
in
dec
out
pop
lods
cmp
sbb
push
cmp
jp
or
jg
mov
adc
add
movsb
andb
push
or
in
dec
ret
add
or
mov
cli
les
xchg
mul
mov
cmpsb
stos
movsb
mov
fisttpll
mov
lret
pop
mov
adc
out
mov
sbb
push
es
xchg
fdivs
push
sub
jle
std
into
inc
or
xor
sti
jmp
mov
cmp
mov
jo
jg
dec
pushf
mov
outsl
mov
or
jo
adc
iret
in
xor
shrl
fisttpl
push
loope
mov
les
inc
jmp
iret
outsl
mov
out
fldt
lock
add
fnstcw
iret
sbb
pop
pop
hlt
inc
sahf
add
je
lds
cmp
mov
xor
out
fcom
adc
mov
and
mov
pop
push
faddl
dec
out
test
not
xor
mov
xchg
test
dec
std
mov
call
sub
or
mov
popf
cmp
rorb
add
add
repnz
int
shrl
inc
ret
ficomps
sbb
insb
out
xor
pop
fisttps
fnop
push
mov
inc
or
repnz
mov
scas
adc
icebp
out
mov
dec
loopne
mov
scas
xchg
cmp
pop
jne
aam
push
add
mov
jo
adc
push
test
push
loop
rclb
push
popa
movsb
test
out
push
clc
xchg
das
movsl
cmp
push
je
sub
dec
jg
xor
js
mov
out
cmp
push
adcb
gs
mov
outsb
adc
fwait
pop
add
arpl
xchg
mov
pop
je
sub
sub
cli
movsl
aam
incb
int
std
aad
xchg
jle
stc
fwait
jle
and
pop
mov
testl
sti
les
inc
jl
cmpsb
jbe
out
jb
and
inc
lock
sbb
pop
frstor
or
clc
jmp
daa
xchg
cmp
mov
ret
sbb
dec
in
cmp
push
mov
jp
push
mov
stc
iret
pop
and
sahf
add
pop
and
ds
xchg
mov
addb
aas
xchg
and
and
cltd
mov
imul
jp
shlb
fsubs
shlb
cmp
cmp
scas
jge
sarb
movsb
dec
push
mov
push
loopne
fmull
rcrb
pop
lock
cs
in
jmp
sbb
add
mov
loop
stos
mov
adc
mov
cmp
xchg
inc
or
pop
add
pop
loop
fisubs
inc
ja
pop
pop
adc
cmpb
mov
dec
leave
inc
jg
cmc
call
jp
pop
xchg
mov
jo
xchg
pop
daa
mov
faddl
scas
or
push
lahf
xchg
pop
dec
xor
fisubrl
add
cmp
call
dec
clc
mov
xchg
mov
les
shrl
adc
jg
mov
xchg
mov
dec
mov
xchg
push
call
mov
xor
push
xchg
lret
js
fmuls
int3
push
mov
imulb
out
xchg
jl
push
repnz
mov
sub
mov
sbb
cmc
sbb
fcomp
mov
and
cld
xchg
push
aam
lret
push
les
stos
sub
push
andb
dec
das
test
scas
shlb
in
xor
mov
sub
xor
pop
adcb
notb
je
sbb
test
mov
test
out
mov
int3
idivb
mov
das
xor
shr
xchg
das
push
jmp
xor
movsb
cli
mov
into
lods
mov
mov
shlb
dec
movsb
sub
mov
cmp
or
shlb
jmp
fs
add
push
inc
xor
hlt
xor
cmp
jg
repz
mov
roll
push
push
cwtl
das
mov
pop
out
daa
int
js
sub
jo
push
fcompl
enter
in
xchg
mov
punpcklbw
insl
lds
gs
data16
daa
sub
dec
or
cmp
dec
xchg
jbe
pop
push
sub
inc
lds
jp
mov
test
add
pop
and
xchg
bound
sbb
mov
out
dec
xchg
ljmp
loop
push
sbb
lcall
jmp
fisubs
and
mov
add
es
gs
sbb
xor
cmpsl
dec
adc
out
lock
mov
xchg
fs
or
cmp
inc
and
sbb
or
imul
dec
mov
sub
pop
sub
pushf
mov
push
or
in
mov
popa
and
cmp
push
inc
dec
mov
sbb
imul
dec
loop
mov
inc
xor
ss
lds
adc
ss
jne
pop
les
xlat
icebp
cs
stos
fldcw
xchg
shrl
pop
dec
mov
pop
or
jp
leave
leave
lahf
in
int
outsb
popf
daa
inc
push
mov
hlt
fmuls
movsb
mov
shl
sbb
or
mov
or
cmpsl
insb
cmp
mov
je
push
popa
jg
outsb
imul
mov
cwtl
push
mull
mov
adc
mov
test
or
ljmp
xchg
mov
mov
or
pushf
mov
mov
movsl
pop
mov
push
loopne
xchg
dec
xchg
dec
mov
lret
push
cmp
popa
lds
push
jb
push
lahf
xchg
cmpsb
daa
stc
sbb
xorl
push
xchg
dec
arpl
imul
outsl
jb
inc
iret
sar
inc
xor
int3
fstpl
add
xchg
push
or
fidivrl
jp
pushl
sub
pop
sahf
xchg
aam
int3
test
jmp
sahf
mov
shll
adc
mov
fistpll
sub
inc
mov
mov
cmp
out
adcb
lea
pop
xor
push
in
mov
adc
outsb
lods
js
call
cmp
cltd
out
push
imul
lods
stc
mov
stos
lds
mov
fwait
sbbl
xlat
sub
xchg
pop
fisttps
and
mov
push
dec
in
jno
cmpb
lret
and
mov
and
fistpl
jecxz
loopne
fstl
rcrb
sbb
xor
out
es
movsl
dec
jle
xor
outsb
jae
and
loopne
imul
lret
inc
mov
inc
inc
mov
fisttps
or
push
jecxz
fwait
push
leave
jbe
and
cmp
xor
outsb
imul
mov
inc
xchg
divb
mov
into
int
test
mov
loopne
sahf
push
stc
sbbl
jns
mov
mov
cmp
shlb
lret
outsb
mov
push
jecxz
dec
out
stc
mov
push
aam
in
stos
test
sahf
sbb
loopne
lret
add
jle,pn
rorb
insb
xchg
insl
mov
and
xor
das
and
dec
aam
adc
jb
loop
xchg
andb
pop
in
ljmp
loope
push
cmp
cmpsl
in
jno
mov
lods
mov
test
xchg
mov
or
sub
popa
pop
mov
mov
test
add
insb
xlat
popf
lret
dec
inc
ret
xor
xchg
imul
or
pop
inc
imul
xor
fs
leave
mov
das
adc
xchg
inc
dec
scas
int
xor
adc
jle
xor
mov
nop
add
cmp
dec
imul
out
mov
jbe
sahf
shlb
jl
mov
jle
cmp
mov
stos
ja
adc
dec
ss
pushf
mov
mov
dec
mov
hlt
lret
movsb
sbb
fistps
mov
mov
addr16
mov
gs
loope
mov
fucomip
repnz
mov
or
dec
ljmp
xchg
sbb
xor
addl
sub
jne
adc
push
push
decb
dec
jg
jmp
arpl
jmp
xchg
jno
out
jne
rol
std
aas
ja
loope
shrb
daa
mov
ljmp
jo
stos
sub
ret
cmp
push
out
jne
mov
sbb
lock
imul
lods
xchg
jae
sbb
cmp
lcall
or
cmc
inc
movsb
cmpsl
repz
nop
jecxz
mov
mov
stc
sbb
fwait
or
je
jle
mov
sarl
enter
sub
and
cmpsb
subl
jge
pushf
pop
mov
mov
in
addr16
xor
nop
lahf
lret
or
sbb
sbb
mov
mov
and
mov
je
pop
lock
mov
jbe
sub
sub
cmp
test
je
push
rorb
fiadds
mov
mov
pop
leave
jge
inc
dec
or
sub
push
pusha
xlat
cmp
lahf
ret
daa
pop
fidivrl
lods
rorl
inc
jae
jno
pop
cmpsl
js
imul
and
icebp
jns
fdiv
testl
mov
ja
jge
sti
add
fdivl
fldl
sti
inc
sub
sbb
add
nop
add
jmp
sub
push
scas
arpl
push
adc
jno
pop
pusha
enter
xchg
jl
and
mov
or
dec
pop
sbb
call
jnp
mov
clc
pop
into
sbb
call
ljmp
add
push
or
pop
pop
push
jne
lods
or
out
movsl
shrl
imul
adc
subb
lods
fimull
and
and
enter
ret
mov
inc
pop
cmp
jno
and
imul
sbbl
mov
and
inc
lock
pushf
test
ja
int
add
cmp
lret
call
jb
pop
jne
mov
push
enter
or
arpl
mov
lret
xor
test
cwtl
shl
push
or
add
xchg
inc
xchg
inc
mov
pop
aaa
mov
mov
cmp
decb
sahf
sub
jle
sbb
fidivs
mov
cli
insb
int
adc
or
repnz
cmpsl
out
xor
jno
lret
bound
mov
repnz
fs
and
pop
jmp
mov
xor
jmp
jecxz
xor
sbb
dec
and
fbstp
xchg
int3
and
fs
fiaddl
mov
sarl
xchg
gs
loop
pop
pushf
push
pop
xchg
push
pop
and
data16
cs
int3
sti
outsb
pop
sahf
scas
dec
ss
lcall
bound
fdivrl
fwait
js
xor
xor
fsub
imul
xor
jae
sahf
and
ret
push
hlt
xchg
js
mov
jge
pusha
push
sti
lret
or
inc
testb
xchg
and
fs
outsb
and
outsb
clc
int3
bound
xor
daa
dec
push
outsb
adc
pop
push
fwait
int3
insb
add
xchg
mov
cmp
int3
mov
fimull
and
sahf
mov
out
cmp
jns
dec
mov
sbb
sub
add
jmp
ret
or
xchg
sub
pop
push
jecxz
xor
and
inc
push
cmpsl
aaa
movsb
ret
cmovg
add
push
dec
addr16
in
int
xchg
bound
out
or
push
out
ret
mov
inc
sti
int
pop
aaa
adc
icebp
lret
dec
mov
fiaddl
mov
xchg
lret
std
inc
fidivrs
sbb
cli
dec
or
sbb
ret
popa
lcall
sbb
into
add
std
ja
jb
add
mov
testb
and
pop
std
xor
iret
jno
repnz
sbb
jmp
sbb
lret
add
test
mov
nop
push
cs
sub
faddp
xchg
sti
inc
dec
cmp
pop
cwtl
gs
cmp
fiaddl
fdivp
icebp
addl
mov
gs
cmp
stc
mov
lods
and
xchg
scas
sbb
pop
and
and
and
or
mov
daa
insl
or
mov
adc
and
inc
pop
sub
pop
mov
fucomp
mov
and
pop
mov
dec
out
adc
outsb
fistps
int3
mov
shll
mov
lods
mov
out
into
push
lcall
out
push
mov
pop
lods
in
pop
cs
mov
xchg
pushf
inc
add
sub
inc
lahf
cmp
xchg
cmp
adc
mov
cmp
mov
mov
xchg
pop
push
jne
inc
sub
shrb
jnp
test
das
cwtl
push
or
shll
popf
js
loope
xlat
es
in
cmp
mov
lret
and
sub
call
inc
clc
mov
cltd
test
push
data16
lahf
pop
movsl
jb
or
xchg
dec
dec
xor
dec
das
sti
and
loop
dec
push
leave
cpuid
xchg
pop
and
jno
xor
or
loop
divps
jb
or
ds
adc
push
adc
andl
fldl
into
mov
and
dec
or
jl
inc
subl
outsl
or
scas
or
rorb
adc
mov
pop
test
mov
andb
mov
pop
bound
pop
int
hlt
mov
inc
push
sbb
addr16
mov
sub
outsl
dec
mov
and
pop
ljmp
jmp
rcll
jnp
mov
cmp
pushf
in
movsb
mov
out
or
mov
inc
mov
dec
or
les
mov
cmp
inc
test
testb
push
jecxz
cmp
mov
pop
mov
rclb
repnz
js
imul
setge
add
addr16
shll
dec
sbb
mov
or
mov
xor
push
ja
mov
sbb
mov
adc
pop
cmp
movsb
jmp
outsb
cmpsb
scas
and
push
mov
inc
mov
fptan
mov
mov
jo
iret
insb
push
pusha
and
lods
test
rclb
es
sub
sbb
xchg
dec
sbb
test
mov
test
xor
sbb
cmc
pop
cmp
mov
out
sbb
xchg
add
mov
out
fldcw
gs
int3
loop
enter
inc
aaa
cltd
push
popa
sbb
cmpsl
mov
xchg
es
mov
cmp
mov
pop
std
sub
ljmp
loop
enter
mov
insb
stos
xchg
jbe
insb
lcall
inc
sub
dec
inc
lea
outsb
adc
ja
lods
fldt
fidivrs
bound
push
into
mov
rcll
int3
inc
adc
mov
and
inc
loop
jns
bound
push
push
add
pop
fld1
mov
jo
je
test
pop
jns
add
mov
jns
test
nop
cmp
nop
mov
rclb
push
cli
pop
loope
dec
mov
add
mov
push
lds
adc
push
ret
aas
lret
bound
shr
mov
hlt
dec
dec
mov
cmpsb
xchg
aam
push
outsb
ds
loope
inc
into
hlt
sub
out
ja
xchg
sti
dec
es
ficoml
mov
dec
lret
mov
xor
mov
test
iret
ja
add
orb
mov
aam
mov
push
andl
jo
insb
test
mov
mov
sub
imul
mov
gs
pushf
fwait
mov
data16
rcrb
xor
jle
xchg
add
mov
in
adc
mov
lds
scas
sbb
in
pop
inc
stos
sbb
stc
cltd
or
lods
jnp
or
ja
mov
btc
jmp
insb
xorl
xchg
xor
les
push
mov
push
notb
jns
jbe
dec
sbb
jno
out
mov
adc
inc
mov
adcb
dec
lock
enter
scas
out
or
scas
dec
sub
cmp
dec
shrl
mov
test
mov
xchg
mov
adc
pop
mov
inc
shr
cmc
lcall
xchg
cmpsb
jg
or
out
fnstenv
fdivrl
jp
sub
mov
or
jp
xchg
addr16
frstor
movsb
fstps
mov
sub
in
jmp
call
dec
mov
jge
xor
fwait
or
out
aas
push
aas
mov
xor
cltd
xor
cmp
mov
mov
pop
push
data16
cmp
push
pop
push
ljmp
lret
insl
in
fcomps
mov
jmp
jle
inc
sbb
out
push
clc
xchg
daa
mov
sbb
and
push
call
jmp
test
test
stc
imul
mov
or
sub
arpl
push
outsl
mov
cmpsb
mov
xchg
sarb
outsl
test
xchg
and
out
mov
or
ss
gs
pop
sar
repz
imul
mov
es
lret
shrl
jno
xchg
jmp
out
nop
out
mov
pushf
sbb
stos
fwait
xchg
push
add
sub
dec
pop
jae
cmp
inc
and
xchg
movsl
cmp
jno
mov
or
push
and
push
lea
dec
mov
jno
loope
mov
mov
xor
mov
ss
into
lret
popa
mov
sbbl
cmp
mov
mov
cmpsb
lds
dec
jo
and
test
stos
sbb
ss
fdivrl
xchg
fsubrl
movsl
movsb
mov
lahf
inc
nop
jae
xlat
mov
mov
inc
mov
fstpt
push
mov
pop
sarl
inc
sbb
nop
mov
mov
loopne
xor
das
fwait
xchg
push
sti
das
push
arpl
and
insb
pop
aaa
inc
mov
lcall
test
fbld
push
or
test
cmpsb
inc
add
cmp
pop
pop
data16
cld
jmp
in
stos
jl
jl
out
xorl
mov
mov
clc
into
dec
jne
cmp
inc
or
pop
or
pop
xor
std
add
gs
cli
ret
lock
test
mov
mov
mov
bound
jl
xor
push
fwait
sbb
popf
dec
mov
inc
xor
mov
jns
in
pop
inc
into
mov
insb
jg
jge
ljmp
ja
dec
jnp
inc
dec
sub
test
fsub
gs
addr16
sbb
sub
icebp
inc
xor
into
cwtl
xor
mov
ja
fdivp
out
imul
mov
mov
mov
js
sbbl
icebp
inc
cmp
jb
enter
inc
inc
popf
int3
pop
mov
cmp
mov
dec
aad
rol
pop
out
js
mov
aas
rol
mov
add
pushf
inc
out
push
repz
cltd
or
mov
jecxz
add
xor
test
cmpsb
cmp
cmp
or
test
fldl
lcall
add
push
andl
xchg
sbbb
pop
push
jb
mov
imul
movsb
es
and
and
testl
fadd
mov
in
ret
inc
push
pop
jmp
das
jge
pop
adc
cltd
sub
adc
repz
jae
clc
mov
fs
push
mov
sahf
push
mov
and
out
sbb
mov
and
loopne
push
add
sub
jnp
stos
or
repnz
xor
jg
popf
iret
repnz
lret
jecxz
imul
or
cmp
enter
stos
pop
jle
mov
out
xchg
xor
pop
cli
data16
sbb
push
sarb
or
jae
jb
jno
xchg
cli
pop
sub
cmpsb
cmp
dec
mov
jmp
sub
dec
ss
std
mov
cli
sub
pop
shrl
bound
stc
adc
mov
test
mov
push
ja
arpl
cmpsl
ss
pop
mov
xor
jmp
or
enter
adc
sbb
daa
pushf
push
push
push
inc
fwait
or
shrb
lcall
and
pop
adc
sub
cmpsb
inc
out
aaa
das
or
push
dec
pop
cld
push
data16
cwtl
xor
loope
aam
inc
fwait
mov
mov
cld
add
mov
test
xchg
dec
xchg
add
popa
fcom
mov
fimuls
dec
out
mov
ret
push
mov
or
fcomps
negb
or
cmp
inc
jmp
lcall
shrl
iret
enter
xor
in
stos
aaa
rcrl
adc
and
xor
leave
sub
lock
adc
call
int
lods
xchg
ljmp
outsl
mov
ss
bound
sbb
lret
adc
fsubl
enter
mov
push
jl
daa
dec
jecxz
mov
fcoms
cltd
and
jno
aam
xor
mov
cmp
xchg
xlat
pop
sub
imul
pushf
int3
lcall
xchg
sbb
mov
fisubrs
int3
or
loopne
test
pop
addb
mov
adc
sbb
or
cmc
repnz
lds
adc
fmuls
xor
push
aad
sti
push
dec
fistl
push
inc
shrl
in
pop
jno
push
loopw
jle
ds
hlt
dec
mov
xchg
lods
js
ret
repnz
test
ds
ret
add
mov
enter
sbb
or
insl
adc
sahf
pop
into
and
mov
and
mov
sbb
sar
jecxz
cs
aaa
mov
das
aas
push
push
data16
pushf
pop
fildll
fs
stc
jecxz
les
inc
inc
xchg
scas
ret
hlt
mulb
sub
icebp
outsl
sti
int
mov
dec
pushf
or
repnz
gs
and
inc
lcall
jg
imul
jp
ja
in
cmpsl
dec
pop
xchg
jns
fwait
push
inc
frstor
sbb
and
cmp
repz
adc
xor
push
stos
je
mov
cmp
fs
fdivrs
stos
push
add
jecxz
sarl
or
mov
in
adc
movsb
xchg
pop
lcall
cmp
int3
fdivl
mov
mov
pop
mov
jmp
idivl
fs
movl
pop
jp
scas
das
mov
std
std
shl
mov
out
jo
sbb
add
insb
push
fildl
add
cmp
inc
xor
hlt
sbb
xchg
js
jle
data16
inc
pop
cmpsl
fcoml
push
in
or
jge
xchg
in
lret
insl
or
roll
shrl
fdivl
adc
cmp
cmp
mov
push
cs
cmp
mov
mov
add
mov
push
push
pushf
and
sub
loope
aaa
xor
fidivrl
out
mov
cmp
fcoml
xchg
fst
cli
ret
cli
mov
dec
sub
out
push
cs
xor
pushf
jb
int3
xorl
ret
repz
or
stc
cmp
in
pop
sbb
inc
cli
xor
mov
cmc
mov
addb
sub
pop
stc
frstpm(287
cmp
adc
jns
mov
jne
lds
shl
pop
das
daa
jle
dec
in
imul
fimuls
cmp
mov
in
pushf
fcomps
pushf
nop
sub
add
mov
stc
xlat
je
in
mov
push
push
es
stos
lahf
aas
lret
sub
or
xchg
pop
loopne
sti
dec
inc
xchg
xlat
xor
mov
test
push
push
cmp
pusha
movsl
jne
jnp
push
pop
cmp
gs
pop
jbe
or
adc
dec
shll
js
dec
jg
xor
adc
inc
pop
push
shrb
cmp
jnp
fisttpll
lods
add
add
add
sub
mov
dec
push
mov
pop
inc
fisttpl
adc
dec
gs
or
cmpsl
dec
stos
push
subl
mov
mov
outsb
add
or
cmpsl
cs
or
pop
dec
jecxz
cmpsb
adc
pop
cmp
mov
mov
xor
jno
stos
push
enter
lret
test
dec
xchg
xchg
sbbl
xchg
scas
mov
fstp
adc
xorb
sub
jno
or
xchg
test
jp
dec
xchg
scas
pushf
push
sbbb
adcb
jp
movsb
int
sub
fldenv
pop
or
adc
cs
pop
fdivr
ficoml
sahf
jae
out
inc
xchg
and
or
mov
gs
jp
pop
mov
mov
mul
lahf
cmp
shll
xchg
sub
cwtl
nop
cmc
cs
adcb
xchg
sub
jl
fs
sbb
fdivrl
xor
shlb
sbb
test
mov
loop
bound
popf
mov
popf
pop
jns
scas
les
jb
cltd
scas
push
scas
mov
xchg
inc
mov
aad
sbb
lcall
testl
aam
out
sbb
add
out
and
ds
xchg
dec
in
sbb
jo
add
push
les
fs
cli
popa
jmp
add
addb
or
mov
inc
cltd
or
mov
nop
in
jle
inc
daa
testl
jb
in
or
out
mov
xor
jo
inc
and
inc
pop
mov
rcrl
shrb
xchg
sub
jno
movsl
xor
mov
mov
cmpb
test
dec
fnsave
add
sti
bound
stc
out
adc
xor
pop
mov
test
lahf
popa
out
xchg
cmp
cld
icebp
sbb
lret
sub
in
jle
dec
addr16
add
lock
xor
mov
popf
test
adc
test
xchg
xor
xchg
rcll
shlb
js
or
repnz
sub
shrl
sbb
xor
inc
out
xchg
shll
add
cmc
push
or
or
jl
adc
xchg
push
repz
mov
push
jle
jmp
or
in
and
pop
push
int
add
aas
stos
mov
push
call
fnsave
fcomip
lret
mov
cwtl
outsb
test
movl
test
cmp
jl
and
pushf
mov
inc
sti
repz
pop
cmp
mov
fadd
imul
clc
pop
pusha
mov
or
dec
jne
jnp
neg
testb
xor
sbb
test
sbb
xor
pusha
xor
shrb
mov
gs
in
js
test
xlat
jmp
push
add
push
fiaddl
sarb
xor
pop
cmp
test
pop
ja
mov
mov
add
addb
sahf
imul
inc
push
push
dec
cld
pop
icebp
and
es
xchg
mov
lret
fldcw
or
sub
xchg
pop
mov
inc
mov
push
lret
mov
fnstenv
lock
in
fxch
xchg
pop
loopne
das
push
shll
adc
jp
out
xchg
push
gs
and
jae
mov
into
lock
jle
xchg
scas
lahf
xor
push
pushf
scas
pop
xor
sbb
sub
dec
icebp
insl
or
dec
pop
test
fidivs
dec
mov
arpl
arpl
and
in
xchg
into
mov
pusha
pop
call
fnsave
scas
call
es
nop
mov
mov
jmp
addb
outsl
gs
mov
bound
xchg
scas
jbe
icebp
in
pop
jbe
jmp
nop
andb
pop
es
cld
cwtl
mov
ret
outsl
jg
popf
fs
pop
or
pushl
filds
movsb
mov
cmp
sbb
addr16
mov
adc
xor
cmp
add
fnstenv
or
idiv
and
sub
jle
aaa
or
aam
sub
jb
dec
sub
push
fstp
or
pop
inc
pop
fstl
and
stos
cmpsl
inc
dec
in
cmp
leave
inc
xor
jmp
aad
mov
rcll
xchg
pop
xchg
bound
dec
ljmp
ljmp
leave
pop
lret
pop
jae
ret
jge
sbb
movsb
push
pop
cmp
pop
xchg
add
mov
inc
xor
fisubs
adcb
cmp
or
push
and
sbbb
pop
movsb
ja
inc
out
popw
loop
inc
cmovo
mov
daa
cmp
jmp
push
or
sbb
jmp
xor
loopne
dec
xlat
pop
mov
push
out
cs
shrl
xchg
or
mov
cltd
or
mov
xchg
jcxz
mov
adc
js
ss
xor
loopne
mov
std
fsubrs
fwait
xorb
push
testb
lret
mov
ss
ljmp
jne
xchg
cmp
adc
pop
push
lret
inc
fmuls
mov
xchg
sbb
in
rolb
mov
cld
sti
je
mov
in
inc
fs
lock
ficomps
jp
push
scas
sub
out
push
rclb
mov
hlt
pop
das
aam
nop
and
xor
icebp
mov
cmp
add
mov
sub
loop
dec
adc
je
lret
jbe
int3
jb
pop
mov
mov
xchg
fldt
fsts
popa
push
sahf
arpl
cwtl
incb
push
sbb
add
mov
sahf
jbe
fisubrl
pop
imul
mov
add
push
je
adc
adc
xlat
stos
popf
pop
fsubrl
nop
cltd
je
fisubs
int3
jp
pop
aas
js
stos
ss
test
push
mov
lods
add
sarl
and
into
in
lahf
pop
test
cmc
out
cmp
jns
mov
cmp
stos
xor
mov
cmp
stc
push
mov
out
mov
jmp
mov
stc
fadds
inc
jge
or
dec
fs
mov
xor
adc
cs
mov
add
icebp
das
lods
and
dec
sub
inc
nop
mov
sahf
pop
jae
sub
xchg
pop
cli
leave
iret
jecxz
and
inc
enter
sahf
scas
pop
aad
movsb
ljmp
or
jp
stos
loopne
pushf
mov
mov
adc
pop
mov
enter
fwait
and
negl
fimuls
notb
dec
leave
xchg
and
lcall
out
adc
mov
cmp
mov
mov
iret
stos
dec
out
or
xor
pop
iret
popa
lahf
std
out
pop
cmp
and
fs
in
daa
stos
cmp
cld
sbb
das
movsl
aad
cltd
inc
jne
mov
arpl
lods
sbb
shll
jp
insl
add
adc
bswap
push
mov
xchg
mov
lock
ja
popa
lret
lods
cmp
mov
imul
lods
sbb
frstor
popa
int
push
shl
mov
jge
mov
mov
mov
sbb
pop
sti
dec
mov
fstpl
jle
pop
addr16
push
cmp
sbb
mov
outsb
iret
scas
push
insl
dec
mov
fcmovbe
mov
jecxz
mov
mov
mov
pop
mov
sti
aaa
adc
mov
orb
loopne
stos
lahf
push
mov
pusha
imul
cmp
ss
xor
cmp
mov
add
jge
movsl
lea
ret
divl
or
dec
push
fdiv
outsl
pop
shl
stos
cmpsb
outsl
pop
or
dec
inc
mov
sub
loope
jge
pusha
jo
inc
dec
xor
pop
mov
outsb
push
fisttpll
pop
lods
dec
pop
lret
cmp
pop
gs
pop
in
xor
mov
xchg
xchg
xchg
jge
sub
jge
repz
jecxz
jnp
pop
push
jb
scas
jl
adc
add
dec
rcr
rclb
icebp
mov
pop
adc
mov
aam
jb
cmc
mov
test
push
jo
jge
mov
add
add
inc
cmpsl
push
lret
pusha
mov
push
test
pushf
enter
or
xorb
sub
mov
inc
insb
movsb
aad
lods
or
mov
fwait
sub
int
int3
cmp
inc
and
fstpl
pop
pop
cltd
in
inc
das
popf
fwait
push
xchg
mov
fcomps
mov
movsb
fcoms
push
adc
xrelease
or
daa
inc
fisttpl
rcl
imul
popa
outsb
xchg
adc
movsb
mov
insl
gs
add
xor
daa
jmp
das
lea
in
cmpsb
clc
clc
out
dec
dec
lds
push
xchg
mov
mov
adc
or
push
in
jmp
mov
test
lret
mov
add
out
loopne
lods
bound
stos
sub
mov
inc
std
jp
dec
dec
xchg
inc
out
divb
jmp
daa
mov
add
push
leave
lcall
adc
dec
dec
lock
out
fwait
inc
adc
mov
aam
xchg
pop
out
stos
mov
xor
int
add
jno
push
bnd
cmp
push
xor
push
imul
rclb
push
into
ds
data16
mov
pop
popa
pop
pop
xchg
pusha
adc
fiadds
xchg
mov
add
jmp
or
jno
adc
lcall
adc
ss
movsb
add
inc
in
call
cmp
and
xor
mov
pop
imul
xor
jbe
dec
pop
mov
lret
imul
mov
movsl
into
cmp
mov
mov
dec
imul
sub
sub
push
and
fimuls
jmp
mov
gs
scas
jp
call
stos
and
cmp
xchg
pop
popa
shl
sub
scas
mov
add
inc
push
xlat
inc
daa
clc
cmp
mov
shl
test
out
sub
push
push
in
xorl
in
push
mov
xlat
mov
out
xchg
stos
dec
iret
adc
mov
in
xor
lahf
pop
sub
loope
test
push
dec
rorb
jb
push
mov
xchg
punpcklwd
daa
xchg
repz
loop
insb
and
xlat
push
xor
fcoms
inc
dec
xchg
jb
xchg
out
jbe
and
sbb
scas
das
xchg
jnp
cmp
mov
lret
test
sub
or
test
mov
xchg
pop
adc
ja
inc
les
adc
fs
mov
fimull
or
xchg
mov
push
lea
divb
mov
xlat
jbe
push
aaa
add
fisubrs
shr
and
ja
mov
hlt
ror
jmp
mov
int
loop
push
or
int
movsb
icebp
fcompl
xchg
test
pop
or
popa
mov
jae
out
add
push
mov
xchg
xor
push
cli
mov
mov
mov
cmpb
prefetcht1
popf
mov
outsl
iret
stos
adc
adc
xchg
aaa
dec
int
jmp
jg
mov
sbb
cmp
xor
xlat
shl
jno
sbb
mov
je
jg
fs
int
test
xchg
jns
addr16
add
sahf
xor
stos
out
add
xchg
inc
sbb
pop
gs
push
movsl
mov
and
pusha
fcoml
mov
stc
jmp
push
mov
sub
add
idivb
loope
fwait
jnp
fbstp
cmp
mov
cmpl
cmpl
out
pop
int3
pushf
fildll
xchg
xchg
mov
pop
mov
mov
lods
add
fwait
and
sahf
push
add
jp
mov
rcll
pop
add
lret
cmp
jbe
lret
lcall
dec
lret
lock
pop
stc
pusha
fwait
sub
mov
imul
in
imul
and
fwait
xchg
leave
insb
lds
cltd
mov
fwait
addr16
sahf
dec
ss
pop
push
pusha
outsb
lahf
jne
aad
mov
imul
pop
add
xchg
lock
stos
mov
and
out
and
add
mov
aam
mov
cmpsb
addr16
fcoms
cmpsl
mov
idiv
dec
add
ljmp
jle
pop
xchg
ret
ss
pop
sbb
mov
mov
lret
cmp
movsl
jns
mov
lcall
clc
movsl
filds
rorl
push
adc
xchg
lcall
test
jnp
and
cltd
fistpl
xor
xor
xor
data16
push
mov
int
ja
roll
jns
mov
nop
sub
mov
repz
scas
or
jnp
inc
mov
rcr
arpl
call
fwait
or
fldt
mov
imul
jbe
pop
add
stos
and
and
push
ja
jmp
add
dec
out
addb
ret
paddusb
js
stc
jp
sbb
push
aas
jle
mov
jp
enter
and
adc
icebp
xor
pushf
loop
sbb
aas
mov
xchg
out
mov
movsb
ljmp
mov
cltd
sub
xchg
and
fdivrs
lods
mov
dec
jg
mov
or
mov
fwait
or
test
pop
dec
xchg
pop
push
and
sbb
or
add
mov
adc
lods
ja
test
jae
jno
xchg
mov
sbb
out
jno
clc
mov
ss
xor
shll
dec
sub
aas
push
xorb
mov
dec
jg
iret
jns
rolb
xor
hlt
pop
je
pop
cmp
push
movsb
int
lcall
js
in
shlb
mov
imul
xchg
lea
or
mov
icebp
inc
fs
enter
fldt
mov
addr16
sbb
outsl
jne
adc
scas
ds
sbb
gs
cs
push
lods
addr16
js
jl
push
enter
pop
sbb
inc
sbb
pusha
dec
dec
ds
outsb
add
pop
mov
sahf
xchg
call
mov
aas
jne
add
mov
sbb
adc
mov
cmpsb
rol
sti
repnz
push
adc
and
imul
pop
stos
movl
push
mov
jg
cltd
sbb
or
pop
inc
xor
test
out
jb
jbe
push
std
cmp
outsb
jb
xchg
mov
outsb
ljmp
aad
sub
and
mov
test
aaa
xchg
pop
in
xchg
insl
data16
cwtl
push
das
sti
iret
xor
jp
adc
jne
repnz
sbb
out
cld
dec
mov
pop
sahf
xorb
adc
test
leave
inc
jp
pop
dec
leave
aas
or
and
and
test
push
sbb
insb
ja
jnp
in
pop
out
dec
push
mov
aas
in
dec
xchg
in
and
jle
pop
dec
testl
mov
push
mov
mov
shl
inc
lret
les
sub
jp
add
cmp
in
mov
mov
mov
cli
fisttpll
xor
cwtd
lret
sbb
jno
or
push
cwtl
cmp
lock
lret
das
int3
roll
popa
dec
dec
add
jl
xchg
cmpsl
add
rclb
bound
cmp
es
addr16
fsubs
cmp
out
sbb
lcall
ret
clc
mov
xor
lds
adc
mov
imul
pop
pop
pop
xor
mov
dec
mov
dec
pop
cmpsl
mov
test
add
lret
negl
pusha
lcall
fstpl
mov
fcompl
xchg
ret
mov
jo
add
cmpsl
jbe
cmp
ret
cmp
gs
inc
pop
sbb
mov
push
cmp
and
lea
adc
pusha
inc
rclb
dec
cmp
sbb
adc
mov
sbb
push
imul
xchg
repnz
push
pop
mov
mov
pop
adc
mov
std
mulb
adc
mov
mov
and
add
add
mov
inc
ret
mov
nop
out
rol
out
and
pushf
leave
cwtl
mov
fadds
push
jp
fists
or
iret
movsb
jbe
jl
loop
insb
xchg
push
jmp
xchg
insl
pop
add
int3
sahf
cld
dec
inc
sbb
das
sarb
adc
push
insb
decl
movb
aaa
lcall
pop
xchg
xor
or
psrld
push
inc
mov
loopne
or
mov
push
mov
sub
pop
mov
test
sahf
loopne
mov
insb
add
lahf
xor
call
cld
mull
mov
scas
pop
aaa
adc
nop
sbb
mov
mul
lret
or
fistl
fyl2x
js
cmp
inc
lods
aas
movsb
ror
aam
adc
dec
jmp
rol
or
in
mov
jl
sub
mov
lods
in
jmp
jb
push
pop
mov
cmpb
sbb
mov
xchg
and
std
mov
dec
mov
or
xor
int
lock
xor
iret
or
fs
out
add
pop
test
mov
sbb
mov
adcb
sbb
stos
pop
data16
sbb
jns
das
jle
into
pop
inc
mov
push
subl
pop
dec
xchg
mov
ja
ret
lods
cmpsb
fmuls
rdtsc
xchg
cmp
push
out
jmp
add
xorps
dec
add
jbe
orl
sbb
pop
push
xchg
js
push
or
cmpsb
jle
lods
out
adc
lock
das
shlb
sahf
idiv
fisttpl
fldenv
cmpsb
gs
or
icebp
jmp
repnz
popa
xor
ja
jl
ret
dec
dec
mov
repnz
lods
mov
mov
fs
clc
add
icebp
xchg
das
and
movsb
hlt
push
xchg
xorl
adc
popa
and
iret
lods
add
subb
enter
fs
mov
lock
popl
lods
scas
popf
push
or
movsl
pop
pop
adc
xchg
mov
mov
push
fucomp
xchg
push
xor
jae
cld
mov
icebp
les
pop
and
pop
inc
das
cs
or
fbstp
adc
lds
sbb
mov
cmp
adc
lods
add
in
push
xor
add
xchg
stc
xchg
mov
cmp
fcomps
mov
movsb
xchg
std
out
nop
lcall
sub
rclb
adc
add
inc
hlt
adc
clc
aad
enter
push
push
dec
dec
push
dec
fst
out
xchg
je
cmp
pop
sub
and
popf
mov
fnstcw
add
dec
mov
mov
mov
loopne
shrl
in
jb
inc
mov
out
xchg
dec
pop
mov
nop
sbb
sub
jg
sub
mov
mov
in
cmpsb
add
xchg
loopne
arpl
std
lahf
adc
sbb
push
cmp
jge
and
movsb
icebp
jae
in
jae
aas
jo
or
sahf
aaa
xor
xchg
imull
jl
loop
push
mov
sbb
iret
dec
jo
push
xchg
int3
hlt
test
jns
ds
dec
es
or
mov
mov
lds
mov
mov
das
cwtl
jns
lret
out
shlb
inc
add
push
out
mov
daa
cmpsl
loope
shlb
cmpl
push
scas
jecxz
ret
cld
ds
imull
xchg
mov
sbb
fstpt
mov
add
mov
out
adc
pop
sub
out
xchg
mov
mov
js
out
push
divb
pop
cli
ss
mov
lret
or
mov
xchg
adc
and
inc
cwtl
stc
mov
jl
xchg
pop
icebp
sti
leave
adcl
outsl
jmp
dec
push
sub
mov
mov
xor
pop
or
fucomi
mov
ss
push
lock
cmp
fs
pop
test
test
mov
mov
jns
dec
into
movsl
xchg
js
lea
mov
aas
sbb
enter
xor
fwait
ja
mull
mov
mov
cmp
stos
push
jp
dec
fdivr
adc
adc
loop
inc
dec
in
js
lods
jns
into
arpl
push
sbb
fnstcw
push
fimuls
xchg
ret
sahf
lret
scas
pusha
xor
daa
push
sarl
sbb
popa
jb
leave
sub
popa
inc
xchg
sub
loopne
repz
mov
test
lahf
test
push
and
jle
ret
cmp
jns
push
notl
push
pop
out
rcrb
mov
daa
call
aam
xor
cmc
std
cmp
lahf
out
in
test
imul
pop
imul
lret
sub
add
fstps
ja
sub
jo
roll
mov
mov
xchg
xor
sbb
cmp
sbb
mov
mov
aad
jo
pop
xchg
sti
incl
or
pop
and
mov
loope
mov
jne
sbb
rol
dec
stos
cmpsl
fisubl
cmc
pop
xchg
ret
jb
push
out
cmpsb
insb
test
imul
xor
cmpsb
push
bound
jp
js
incb
inc
add
jmp
shll
je
je
pop
pushf
sahf
jb
cwtl
and
ret
add
mov
xchg
sti
mov
cmp
push
cmp
inc
loopne
mov
pop
sarb
test
cwtl
xorl
dec
push
add
ret
jmp
mov
xchg
dec
leave
or
and
cmp
xor
mov
lds
mov
jg
pop
fsts
lret
mov
inc
pop
dec
out
outsl
ja
add
cltd
pop
sub
jmp
cmc
daa
sub
stc
mov
sub
fsubrl
in
stos
lods
xchg
in
sub
and
rcr
mov
xor
cmpsb
adc
mov
cltd
inc
test
and
jb
imulb
loope
ret
inc
push
inc
cmc
xlat
jne
ja
mov
or
sbb
les
aas
es
out
ds
inc
in
popf
ret
stc
cs
sti
sti
ret
sbb
fadd
mov
leave
mov
dec
stos
mov
push
and
pop
aaa
push
in
movsl
enter
dec
cs
es
inc
cmp
idivl
leave
cld
inc
push
mov
sub
push
adc
daa
add
xchg
mov
iret
test
and
ret
cli
inc
dec
adc
push
insb
and
fs
lea
lods
scas
ret
nop
xchg
lock
xor
test
or
and
ja
push
in
iret
jge
into
pop
test
int
lds
pop
dec
mov
aaa
std
jne
ljmp
ret
mov
mov
jp
aam
icebp
mov
cs
insb
mov
imul
daa
add
adc
and
in
jmp
pop
popf
dec
add
inc
div
inc
mov
jnp
xor
xchg
mov
mov
fildl
nop
mov
push
data16
jmp
lock
fwait
jp
lret
jb
lods
outsb
mov
adc
pop
jp
insb
xor
pop
sbb
popa
cmp
xchg
jns
cmp
inc
jne
pop
in
pop
loope
inc
pop
cwtl
sub
xor
xchg
push
push
mov
cmp
fisttps
out
sbb
rcrb
add
popa
xchg
jg
aaa
aad
push
lea
gs
fstps
cmp
add
dec
imul
and
sbb
cmpsb
pusha
add
je
jmp
jle
xlat
jmp
push
jp
sbb
mov
mov
sbb
inc
adc
sbb
imul
fisubrs
jl
gs
jg
ja
sbb
and
mov
jmp
jmp
xor
addr16
jno
sbb
and
inc
lods
dec
adc
in
pop
ret
shlb
out
data16
stos
sbbb
int
rorb
stos
mov
mov
xchg
out
xchg
sub
daa
jbe
popa
inc
mov
dec
mov
inc
mov
adc
cwtl
sub
sub
xchg
and
sbb
push
jae
xlat
sti
sbb
fcoml
out
es
xchg
test
movsl
xchg
int3
push
lahf
in
jae
dec
jne
xchg
mov
test
jnp
sbb
pop
pop
jae,pt
js
push
in
jecxz
lds
jno
jno
loop
movsb
jnp
lret
fwait
jg
rol
cmc
call
ds
xchg
je
and
ds
aam
adc
pop
bound
push
cs
dec
std
pop
scas
popf
mov
iretw
jle
xor
lods
mov
rol
ja
sbb
mov
dec
mov
test
cli
pusha
cs
repnz
xor
mov
mov
enter
sub
push
sbb
hlt
xlat
in
leave
sbb
mov
loop
dec
call
push
or
repnz
test
inc
lahf
mov
into
pop
mov
jmp
cmpsl
pop
jmp
mov
loop
push
andb
test
rcll
ret
insl
pop
adcl
push
cli
adc
cmp
lahf
fisubrs
test
into
mov
repnz
and
test
movb
jp
jne
stos
loop
in
xchg
sbb
or
sub
adc
and
jg
inc
push
sahf
pushf
push
adcl
je
sti
mov
inc
in
cmp
outsl
lret
bound
in
nop
aas
cmp
nop
loop
dec
push
xchg
or
stc
nop
clc
add
dec
xor
push
cmp
add
lds
push
and
repz
mov
xchg
xor
mov
fisubs
movsb
pop
enter
jl
sub
sahf
movsl
pop
shll
jno
notb
ja
pop
aam
popf
mov
push
dec
out
xchg
xor
xor
aam
adc
fsubs
xchg
jns
test
xor
outsb
ficoml
add
jle
xchg
xor
and
aas
sub
ljmp
mov
fcmovb
outsl
imul
push
xor
push
mov
mov
out
call
pushf
cmp
pop
shrb
xchg
xchg
pop
mov
add
pop
test
xor
pop
push
out
xor
mov
je
dec
cmp
arpl
inc
cmp
push
xchg
mov
xchg
insb
fs
xchg
or
mov
jne
lret
imul
int3
rcrl
mov
pop
lds
sub
xchg
mov
add
mov
rclb
fadds
dec
cli
inc
xchg
inc
ret
or
test
and
sbb
mov
daa
jecxz
stc
repnz
add
mov
jle
jg
cmpsb
aaa
jge
add
imul
mov
lcall
jl
push
addr16
lods
and
cmp
movmskps
jno
shlb
jno
sbb
lret
push
popf
push
fwait
lods
data16
into
or
add
jmp
and
dec
repz
jmp
mov
lret
aad
or
mov
and
fildll
jbe
ja,pn
and
cmp
xor
or
sbb
dec
cwtl
fwait
rclb
out
push
dec
test
ja
pop
or
inc
mov
and
psubusb
push
cmp
mov
inc
push
fists
shll
sub
ss
jne
xchg
repnz
aaa
std
or
fidivrl
or
cmp
sub
cmp
cs
xchg
js
sahf
imul
fadd
add
inc
in
pop
ljmp
das
fldenv
push
out
cld
mov
push
insl
mov
fldenv
add
inc
or
rcl
repnz
rol
xchg
xchg
scas
mov
mov
addr16
pop
sub
xlat
orl
sbb
xchg
and
movsb
pop
sbb
ljmp
popa
popf
xchg
mov
cmp
mov
cmp
test
push
hlt
into
and
adc
adcb
jns
call
mov
getsec
scas
mov
adc
sbb
inc
adc
shr
mov
add
dec
movsl
cmpsl
enter
and
push
mov
jp
jg
or
xchg
stc
jle
test
jle
mov
push
cmp
mov
xor
out
or
xchg
fisubrl
ljmp
add
push
loop
jo
loope
pop
cmp
mov
scas
jno
or
pop
xchg
cmc
loopne
fs
lcall
cmp
mov
sbb
hlt
stc
adc
dec
push
ret
out
adc
loopne
sarl
jmp
je,pt
pop
mov
and
mov
fistps
aaa
xor
dec
into
cmp
int
stos
mov
mov
std
daa
push
ret
and
cwtl
mov
ret
bound
out
lods
inc
shl
jl
incl
pop
lods
add
out
lcall
dec
jmp
cmp
pop
aas
xchg
pusha
cmp
jp
aaa
dec
lds
roll
cs
insb
jecxz
inc
pop
iret
in
shll
mov
mov
or
and
cmc
push
mov
push
mov
mov
aaa
mov
jae
sahf
movsl
repnz
and
or
and
xchg
mov
pop
nop
out
jns
add
adc
nop
stc
cmp
arpl
nop
or
dec
push
gs
ss
cmpl
out
jae
ja
lock
add
imul
popl
aas
ret
inc
pop
lret
jns
jne
jns
inc
fwait
dec
inc
lock
jecxz
sbb
mov
xchg
cmp
lret
mov
or
push
pop
pop
mov
add
sbb
mov
inc
push
mov
aaa
adc
pusha
insb
fstpl
mov
cwtl
cmp
pop
movhps
mov
aad
xchg
jmp
dec
xor
jnp
es
mov
pop
or
gs
andw
pop
inc
mov
push
cmpsb
jno
lods
inc
jg
movsl
aas
cmpsl
add
and
mov
dec
add
std
js
les
xor
push
insl
xor
in
mov
mov
add
push
sbb
jecxz
cwtl
mov
imul
flds
out
lret
fwait
clc
mov
rolb
cmpsl
in
aas
ret
in
inc
and
inc
xor
jns
mov
fsubrs
or
int3
sub
xor
inc
and
jns
mov
shrl
pop
push
push
mov
or
mov
in
outsl
es
es
xchg
enter
mov
mov
and
push
xchg
adcb
test
mov
cmc
sti
popf
xor
lret
es
movb
sbb
out
push
adc
push
mov
hlt
push
cmp
jo
xor
inc
mov
cmp
xlat
adc
shr
mov
incl
xchg
adcl
mov
jnp
push
fimull
push
and
mov
les
mov
movsl
or
fldcw
insb
lcall
or
mov
adc
push
out
push
icebp
push
xchg
sub
arpl
mov
lret
mov
data16
sbb
mov
ds
in
mov
insb
mov
xor
cmc
xchg
sbbb
jns
pop
push
in
int3
jno
fs
lahf
pop
or
jg
cmp
cltd
mov
push
xchg
cltd
or
mov
push
std
mov
dec
jnp
sbb
shrl
in
bound
adcl
aad
pop
xor
fimull
add
cli
mov
jb
shlb
aad
jno
jae
jnp
adc
arpl
lea
and
test
dec
cmp
in
and
into
popa
mov
xchg
push
insb
mov
sar
out
leave
data16
sub
data16
mov
movsl
mov
clc
mov
lea
push
in
mov
je
int3
sub
enter
fisubrl
cmp
pop
sbbl
testl
jmp
sarl
pop
cli
mov
idiv
bound
jge
adc
loopne
das
flds
sti
jp
imul
cld
jmp
sub
gs
shlb
cmp
inc
jg
movsl
xchg
jo
pop
loop
cmp
sub
pop
push
jle
data16
pop
and
stos
mov
in
jae
mov
test
inc
xchg
or
cmpsb
btc
movsb
enter
mulb
mov
loop
mov
and
stc
sbb
jecxz
movsb
push
aam
sbb
jno
dec
movsl
add
sbb
cmp
lock
fsub
fstpl
mov
inc
sub
rcrb
mov
arpl
mov
xor
xlat
dec
inc
lds
aas
js
loopne
jp
popf
repnz
popf
or
inc
jmp
xor
mov
pop
dec
leave
mov
and
pop
mov
dec
call
pop
subl
sti
mov
arpl
xchg
stc
insb
vpmacsdql
insb
je
mov
mov
insb
xchg
leave
xor
stos
shll
mov
adc
or
sbb
cmpsb
outsl
mov
int3
xchg
repz
or
adc
xlat
movsb
push
imul
fcomps
inc
cmc
fisubs
enter
push
add
loope
push
and
mov
adc
into
add
sub
push
dec
outsb
nop
psllq
jae
inc
repz
and
mov
and
nop
add
enter
lret
into
rcrl
xor
push
out
sub
in
xor
scas
jmp
mov
jge
stc
pop
sub
jns
in
push
fs
adc
lds
dec
stos
sub
shrb
mov
xorl
push
lcall
pop
xor
loope
mov
in
es
test
adc
xor
jg
notl
loopne
clc
aas
push
pushf
aad
dec
in
add
mov
hlt
dec
mov
sbb
test
or
clc
jl
rclb
mov
sub
xchg
mov
outsl
mov
mov
or
dec
sbb
bsf
jp
push
sbb
mov
xchg
fstpt
mov
jmp
pushf
rol
inc
push
ja
lcall
add
lds
imul
jbe
and
cmp
inc
mov
sbb
orl
mov
popa
lods
loopw
adc
sbb
mov
pop
lds
jbe
xchg
mov
jmp
outsb
cmpsb
stc
cmp
fs
mov
fidivrs
fs
imul
mov
les
push
fisttpll
cwtl
les
ljmp
loope
dec
inc
xchg
fnstsw
es
xor
test
mov
push
daa
xchg
loope
aad
nop
dec
test
movsb
xor
addr16
es
inc
sarb
orb
push
inc
mov
test
jge
das
sarb
mov
push
or
sbb
jp
mov
cltd
jl
push
lcall
std
or
fisubs
cmc
leave
inc
sub
js
mov
pop
shrl
sbb
push
jbe
lods
lahf
push
push
inc
roll
scas
ja
jle
test
aad
push
push
pop
pop
mov
push
mov
jno
rorb
adc
or
add
nop
cmp
xchg
call
or
sbb
stos
cmp
pop
scas
pop
push
cmp
adc
sub
cmc
and
stos
scas
sbb
mov
mov
fsubl
jns
push
out
mov
and
hlt
add
add
mov
push
jecxz
nop
xor
or
inc
pop
xchg
sti
cmpsl
iret
xlat
or
sbb
cmp
adc
lea
inc
dec
pop
xchg
jg
sub
cmpsb
addl
xlat
inc
push
cmp
rcl
and
test
pushf
repnz
outsl
sbb
cmc
sti
and
in
insb
loope,pt
je
sarl
dec
pusha
pop
pop
in
jo
clc
ficomps
or
sub
popf
test
pop
cmpb
aad
cli
or
dec
and
test
jo
pop
test
scas
xchg
loopne
pop
mov
jb
cmp
lahf
mov
into
aam
push
pushf
dec
decb
pop
in
lds
loopne
psubusb
shlb
lahf
sub
adc
cmp
adc
cmc
dec
jle
mov
subl
les
in
xor
ficoms
jne
addr16
lret
pushf
sbb
daa
loopne
dec
mov
icebp
jmp
ror
aad
inc
test
dec
mov
loope
and
push
cs
clc
fcoml
jmp
jmp
xchg
test
in
scas
gs
jle
loope
pop
adc
mov
int3
xchg
push
add
xorb
lods
lds
pop
fisubrs
shl
out
sbb
mov
mov
hlt
pushf
jmp
insl
sub
dec
rcll
call
dec
std
fimull
mull
addr16
pop
hlt
sti
mov
inc
das
es
xchg
adc
rorb
xchg
movb
mov
push
cmpsb
das
mov
std
outsl
cmpsl
add
stos
gs
fdivl
mov
and
jge
dec
outsl
push
and
mov
in
push
xchg
in
decl
mov
popa
imul
dec
iret
mov
shl
lods
mov
mov
ret
push
das
push
adc
out
int
popl
sub
push
mov
mov
lahf
int
and
jle
cltd
or
xchg
push
jp
xchg
inc
cmp
rcr
rorl
fs
cmc
stos
gs
push
push
add
test
lods
fwait
ret
aad
add
adc
inc
pop
xchg
inc
xchg
xor
into
ss
xlat
into
gs
mov
mov
negl
ret
adc
insl
scas
jo
xor
fmull
jbe
mov
stos
mov
push
fsubrl
pop
je
loop
pop
clc
push
int
pop
or
mov
pop
cmp
or
sbb
push
dec
mov
fstps
push
call
push
pop
out
mov
stc
inc
dec
lcall
sub
push
adc
sbb
mov
lcall
pusha
sbb
adc
mov
cmp
ret
ja
jmp
stc
test
movsl
adc
int3
dec
mov
inc
mov
xor
mov
jmp
loop
pop
mov
xor
adc
inc
add
ds
sbb
stos
iret
add
ret
cmp
mov
mov
test
loop
lret
mov
repz
xorb
sub
ljmp
jne
pop
cwtl
cmp
adc
or
rcpps
in
repnz
mov
cmpsb
pop
les
clc
xchg
jne
jp
push
sahf
fidivrl
sub
xchg
xlat
and
adc
cmpsb
xlat
decl
rcrl
sarb
push
sub
cmpsb
push
add
test
fildl
add
sbb
or
sub
pop
mov
jg
popa
jmp
xchg
push
popa
xlat
sub
in
and
shl
icebp
xchg
mov
aas
jns
and
lahf
js
lret
imul
popf
pop
fs
popa
jbe
imul
notb
sub
out
clc
add
inc
cmp
ss
rcll
push
fistpll
xchg
cmpsl
out
stos
sti
out
add
xchg
ret
mov
pop
mov
sbb
sub
jg
mov
xor
or
inc
fimull
test
inc
fimull
ljmp
test
es
cmpsb
lahf
sbb
cmp
xchg
cmp
lock
jg
das
pop
popf
cmp
jmp
sbb
enter
sarb
inc
mov
das
shlb
xorb
rclb
push
mov
add
push
pop
pop
cltd
jl
mov
shlb
inc
jp
pushf
insl
pop
inc
adc
dec
fwait
loopne
jp
imul
shlb
std
loop
int3
jle
jp
push
xor
jmp
xor
inc
lds
sbb
scas
cmp
inc
movsl
orl
insb
mov
ret
mull
push
fiadds
push
mov
inc
jns
mov
push
mov
jl
jl
mov
mov
sub
or
lcall
and
dec
sbb
inc
xchg
ror
push
fsts
loop
xchg
ds
pop
jne
cmp
dec
inc
jnp
or
mov
xchg
dec
nop
mov
pop
and
sbb
popl
repz
push
pop
fwait
dec
sarb
sahf
cmovae
or
pop
sbb
lret
cmpsb
inc
lods
add
sbb
test
jno
cmp
add
push
push
mov
insb
xchg
sti
nop
mov
orb
sub
aas
xor
or
mov
shrb
xchg
ljmp
jae
cmp
jnp
jle
inc
push
fistps
outsb
imul
pop
jne
mov
adc
stos
xchg
adc
subl
cmp
jecxz
in
or
cmp
inc
sbb
out
cli
insl
arpl
or
test
inc
sbbb
jecxz
das
inc
enter
dec
and
add
leave
cmp
jecxz
xadd
jg
mov
ss
jns
addb
mov
js
cmp
out
pusha
dec
pop
daa
mov
ficoms
jo
ret
xchg
or
cmpsb
pop
lret
pop
adc
cmp
addr16
pushf
pop
or
outsb
inc
and
sbb
cmp
orb
dec
xor
popf
ret
testl
xor
xchg
ret
mov
in
and
add
movsl
sub
sbb
mov
pop
jae
movsb
pop
or
int3
jp
xchg
inc
push
mov
gs
mov
int
xor
cmc
adc
cs
cmp
pop
xchg
pusha
negl
jbe
daa
jnp
jbe
ret
imul
push
xchg
mov
inc
cmp
and
push
dec
push
popf
mov
fs
scas
sub
xlat
into
mov
sbb
stos
test
fmul
xor
gs
sub
jno
xchg
dec
xchg
ret
iret
jp
dec
ds
in
mov
jg
mov
hlt
sbb
jo
push
jg
fdivr
mov
decl
inc
pop
test
inc
in
fsub
aas
sub
mov
std
ss
mov
mov
jnp
cmpsl
pop
xchg
and
mov
cmc
jnp
xchg
clc
pop
pushf
and
cmp
aam
adc
push
sbb
rcrb
cmp
je
or
or
dec
or
fisubs
push
lret
je
push
ja
iret
pop
cmp
scas
lods
in
iret
fidivs
hlt
mov
pop
adc
sub
push
push
pop
cli
jecxz
rorl
sahf
lret
jne
ds
out
rcrl
bound
and
imulb
sub
out
mov
imul
jne
and
dec
lret
jbe
clc
out
jecxz
sbb
fwait
jg
xor
movsl
imul
mov
clc
pop
loop
mov
pop
mov
mov
cmp
push
gs
lds
and
in
fwait
xor
pop
xor
jg
mov
xorb
arpl
mov
ficompl
xorb
aaa
popa
adc
xor
inc
or
ss
loop
rcll
cmpsl
pop
cltd
andb
xchg
inc
jg
or
je
pop
mov
lods
xchg
jne
shrb
add
mov
push
jbe
mov
lods
popa
mov
inc
rcr
nop
sub
lret
dec
bound
stos
das
xor
cld
scas
xor
jno
call
stc
scas
mov
cmp
jle
dec
ljmp
insb
mov
leave
jno
add
push
aam
push
xor
adc
and
sub
mov
cmp
pop
lret
aad
ljmp
mov
arpl
lcall
ljmp
ss
cmp
xor
dec
cmp
add
cmp
sbb
adc
les
std
mov
and
cmpsl
scas
imul
pop
ss
lahf
loopne
mov
aad
jbe
pop
addr16
push
rcrb
jecxz
sbb
pop
mov
push
push
pop
dec
lods
push
fwait
jns
fs
cmp
dec
imul
nop
lods
xlat
xor
mov
xchg
or
pop
into
cmpb
and
mov
fidivrl
mov
xor
imul
mov
fmuls
pop
out
cli
out
incl
adc
ret
scas
inc
cmc
scas
or
outsb
pushf
inc
stos
mov
push
cltd
shll
rolb
cmpsl
jae
and
insl
test
sub
pop
and
test
pop
mov
lock
add
push
or
pop
pop
pop
and
jae
and
iretw
mov
das
fsts
xchg
popa
mov
test
imul
xchg
dec
rolb
jmp
or
xchg
mov
es
sti
imulb
js
js
arpl
fidivl
jmp
repnz
ja
xor
aam
nop
les
inc
mov
ljmp
popf
xchg
fmull
scas
jge
mov
inc
jge
loop
dec
into
mov
imul
test
push
jno
dec
lock
sbb
xchg
and
push
inc
sbb
js
adc
and
sbb
jg
push
clc
test
cmp
jae
push
pop
or
push
add
sbbl
test
and
add
leave
adc
jbe
lret
and
mov
pop
push
int3
es
xor
sti
push
sahf
fbstp
mov
inc
fcomps
icebp
and
in
push
xor
cmpb
sub
mov
jo
mov
xchg
and
xor
or
scas
mov
pop
mov
lcall
mov
rcll
xchg
sub
xchg
dec
sbb
push
mull
fbld
bound
cmpsb
mov
setnp
fisttps
je
sbb
inc
pop
std
test
inc
filds
cmc
sub
mov
inc
mov
add
fsubr
sarb
arpl
add
loop
mov
imul
cmp
xor
or
jmp
cmp
or
call
jecxz
jle
ljmp
or
test
mov
xor
ds
push
xor
jne
dec
mov
mov
clc
add
add
pop
dec
jbe
icebp
dec
int3
cld
mov
pushf
jge
aad
insl
pop
scas
hlt
cwtl
adc
add
xorl
inc
in
lret
xor
sbb
mov
mov
sbb
mov
cmp
stc
rolb
sbb
mov
xor
sti
mov
sahf
mov
rcll
dec
jp
or
xor
fcmovnb
inc
xchg
shll
addb
lcall
jmp
jno
out
repz
sbb
ljmp
das
scas
xlat
or
test
mov
cmp
arpl
faddl
adc
cmp
lods
ss
mov
adc
lret
sahf
fnstenv
pushf
cli
cmp
aad
add
arpl
dec
cwtl
jle
push
shlb
cmpl
loope
sub
xor
jle
sub
out
inc
push
loop
outsl
adc
xchg
inc
jl
loope
loopne
dec
js
pop
mov
or
sbb
add
cmpsl
jbe
cmpsb
clc
mov
and
pusha
repnz
jp
js
int
jne
jl
inc
repnz
inc
adc
xchg
mov
sub
inc
ja
cmp
or
insb
xchg
mov
push
pop
sub
es
fistpll
or
sti
sti
cmp
jmp
sbb
rcll
aaa
out
cmp
dec
or
loop
les
lret
in
pusha
shlb
pop
mov
add
lret
sub
gs
push
scas
inc
pop
push
dec
in
jmp
mov
pop
movsl
in
mov
sbb
and
sbb
sbb
sub
rcrl
test
ret
fadds
sti
sbb
je
fisubrs
dec
test
push
cmp
mov
pop
sbb
mov
pop
sti
fisttpll
push
test
inc
mov
inc
ret
iret
mov
add
add
mov
dec
loope
push
xor
iret
test
imul
xlat
adc
ffree
cmc
arpl
mov
icebp
arpl
testb
adc
sbb
jbe
jge
hlt
fs
imul
fsub
aas
pop
hlt
enter
mov
stos
out
mov
pop
pusha
sbb
jns
push
fsubs
dec
pop
xchg
in
cmp
int
mov
iret
jbe
sbb
sbb
xchg
in
arpl
mov
pop
stos
fwait
shll
xchg
mov
xor
xor
and
xchg
fmul
in
stc
cld
push
push
xchg
xchg
in
pop
mov
das
and
std
scas
test
stos
ja
mov
mov
fsts
lcall
mov
or
push
insb
xchg
pop
inc
inc
ljmp
mov
adc
mov
jns
push
icebp
or
lcall
fwait
jg
mov
fimuls
decl
adc
sbb
xor
add
outsb
mov
cwtl
fistl
jge
bound
xchg
adcl
repz
rcrl
stos
push
xchg
jl
and
or
in
test
push
add
decb
jg
sahf
out
jmp
insl
cmpsl
cmp
mov
pop
or
and
aam
mov
jne
movsb
int3
lock
and
fidivs
loopne
sub
mov
xor
insb
xchg
dec
sbb
mov
xchg
roll
lock
jecxz
pop
dec
jae
or
bswap
pop
sub
mov
fildl
ret
xor
or
das
mov
arpl
sbb
push
mov
popa
sub
and
pop
imul
jmp
xlat
mov
sub
inc
clc
sbb
movsb
xor
cmp
lds
inc
les
adc
stos
sahf
gs
mov
sub
fnstcw
adcl
arpl
fsub
fidivl
ret
mov
pop
xchg
or
or
jg
lret
mov
add
push
jae
sbb
pusha
scas
aas
or
push
jns
out
xor
push
leave
xchg
and
cmp
inc
iret
lcall
inc
or
mov
adc
fdivl
cli
pop
sbb
cld
inc
cmpsl
pop
int
jecxz
ret
mov
mov
dec
out
movsl
loopne
fmull
adc
push
jle
lds
xor
dec
sti
out
sub
pop
out
jl
push
adc
cld
inc
sbb
add
in
xchg
shrb
jbe
and
push
cmp
out
jle
cli
inc
out
jmp
xchg
or
add
stos
jbe
push
xchg
aad
fucomi
iret
jecxz
pop
add
outsl
hlt
in
out
pop
shll
push
or
sti
mov
pop
sti
jmp
fdivrl
adc
in
and
in
mov
cmp
data16
cmpsl
js
cmp
jno
inc
xchg
jns
and
rcll
dec
and
adc
iret
sub
sti
ljmp
incb
sbb
push
cmp
test
lea
mov
mov
xor
adc
sbb
add
dec
popa
add
inc
es
adc
and
out
push
icebp
or
jmp
out
mov
xchg
in
mov
fsubrl
flds
sub
cmp
iret
nop
mov
das
imul
mov
fdivrp
inc
dec
outsl
jne
movsl
iret
out
pop
imul
or
mov
push
jecxz
jno
sub
mov
sbb
jle
mov
out
adc
gs
or
add
scas
and
ja
mov
inc
cltd
ds
dec
pop
adc
add
jns
xchg
xchg
aas
adc
pop
mov
movsl
orl
mov
jg
mov
cmovle
add
in
jp
sbb
mov
mov
jae
arpl
fisttpll
ds
mov
pop
out
cld
mov
jb
cmpsb
xor
adc
xchg
xor
in
add
daa
inc
jmp
sbb
repz
pusha
dec
lahf
es
xchg
lods
xor
adc
adc
gs
pop
out
dec
scas
jae
scas
mov
push
cltd
movsl
sbb
mov
rorb
jle
fildl
mov
lret
ret
inc
mov
shrb
xchg
xchg
imul
addps
test
cmp
in
xor
rcr
pop
mov
and
lret
in
popf
sti
jne
shlb
xlat
mov
or
in
or
mov
addr16
xor
lea
scas
rolb
sbb
or
push
cmp
push
cmpsb
pop
arpl
push
pop
scas
rol
cld
dec
mov
cmpl
jle
sub
cld
lahf
adc
ds
stc
imul
cmp
in
lock
mov
sbb
push
mov
mov
or
or
push
sub
mov
movl
pushf
mov
leave
pop
loop
jae
pop
xchg
fidivrs
into
mov
aam
cmc
adc
pop
fxch
mov
mov
ss
jno
mov
sbb
mov
stos
push
adcl
inc
push
scas
mov
mov
mov
xchg
jnp
pop
ret
popa
xorb
xchg
adc
clc
cmp
or
dec
lret
test
pop
pop
pop
jge
loop
adc
pushf
out
hlt
imul
inc
dec
rclb
daa
xchg
pusha
andl
mov
leave
rclb
in
sbb
adc
nop
or
cmp
idivl
lcall
push
ret
mov
je
lret
adc
dec
jp
add
test
xchg
fwait
aam
test
fdivrs
inc
out
rol
cmp
fisubrl
mov
mov
mov
xor
fs
push
divb
or
cltd
bound
jnp
movb
sbb
int3
mov
jb
mov
jle
lods
jns
data16
jnp
inc
fwait
jbe
and
das
mov
xor
int
rclb
leave
mov
add
or
inc
xor
sbbb
mov
flds
xchg
xor
xchg
adc
int3
push
lods
xchg
adc
or
adc
jle
sti
lods
leave
clc
jb
clc
xchg
hlt
sbb
test
enter
cmp
inc
dec
clc
pop
push
mov
lcall
mov
dec
cmp
fists
xchg
clc
inc
inc
mov
aas
mov
and
bound
int3
rcl
push
cmp
push
pop
or
add
fstps
mov
lods
call
fnstsw
repnz
shufps
outsb
sbb
mov
mov
mov
push
loop
mov
adc
lcall
pop
dec
cwtl
or
xchg
mov
sbb
mov
push
sub
test
sub
sub
arpl
enter
add
loopne
push
push
cmp
sub
adc
push
int3
mov
inc
mov
add
out
fdiv
mov
jl,pt
rorl
push
or
int
filds
out
negl
loope
arpl
push
push
movsb
jo
xor
sub
xor
mov
pop
hlt
idivb
hlt
dec
mov
xchg
iret
ret
pop
es
pop
jno
xorl
dec
jl
mov
pop
push
movsl
mov
loop
or
sub
stos
adc
cmpsl
sub
mov
xchg
push
movsb
aas
leave
adc
cmc
aad
xor
cmpb
icebp
push
jp
stos
inc
jl
jle
pause
lods
add
fs
mov
nop
add
dec
mov
pop
loopne
pop
xor
iret
test
ds
sbb
loop
pop
cltd
push
pusha
rclb
sbb
mov
fdivrs
arpl
push
sub
lods
sub
jae
mov
cli
das
fidivrs
jo
fsubp
notb
xchg
inc
rorl
leave
and
sbb
xor
pop
push
enter
sbbl
mov
js
dec
popa
mov
adc
dec
fistpll
pop
fdivr
mov
sbb
aad
pop
ret
jb
pop
dec
push
mov
outsb
lret
fistl
mov
ret
mov
add
adc
push
dec
rol
lds
xor
jmp
enter
add
jge
push
fisubl
adc
jecxz
xchg
dec
adc
mov
push
push
cwtl
mov
lea
xchg
or
es
subb
push
ljmp
sahf
leave
dec
cld
movq
push
cli
push
loop
jae
inc
lods
into
ret
test
dec
inc
lcall
xchg
mov
and
clc
lods
inc
fdivrs
adc
xor
xchg
mov
mov
lret
mov
sub
xor
loope
xchg
aas
mov
int3
or
adc
icebp
dec
mov
aas
mov
test
xchg
stos
fistl
sbb
adc
bts
fwait
aad
stos
pop
add
cs
pop
xlat
inc
dec
stos
push
sbb
andl
xchg
loope
xchg
nop
pop
mov
movsb
dec
and
xlat
dec
cmp
mov
adc
pop
pop
sbb
mov
jmp
mov
push
rorl
js
pop
leave
push
xor
jnp
cwtl
mov
lock
sub
push
mov
sub
jo
and
xlat
pushf
bound
lods
pop
xor
popa
pop
rclb
shl
rcll
dec
daa
fadd
outsl
subl
lahf
jge
fstpl
gs
in
cmp
lea
xchg
add
mov
mov
pop
loop
mov
ss
and
sub
pop
push
jle
outsl
sub
addl
fcoml
and
fwait
jl
jle
push
mov
mov
test
adc
lods
dec
loope
call
movsl
rorl
dec
call
add
outsl
outsb
xor
pop
push
lods
iret
or
inc
cld
inc
aad
adc
cmp
ret
aas
test
int3
dec
loope
cmp
mov
dec
fwait
lock
ficomps
inc
cmp
jne
push
ficoms
mov
xor
dec
push
jmp
scas
pop
cmp
mov
cmc
cmp
stos
loopne
cmovge
push
adc
rclb
jae
or
mov
sbb
xor
iret
sub
or
sub
jmp
and
mov
fs
jp
jo
movsb
stos
pop
sbb
xlat
or
jo
scas
and
push
or
jo
repz
pop
testb
das
fmull
add
repz
addr16
adc
and
sub
mov
inc
fadds
js
and
pop
cmp
jl
lcall
pushf
fsubrl
movsb
nop
xor
jg
movsl
pop
je
adcb
and
enter
in
xchg
movsl
and
sub
stc
scas
hlt
mov
mov
cmp
outsl
push
lds
mov
int
xchg
xchg
test
push
mov
ljmp
sbb
xchg
sbb
mov
mov
mov
or
cmp
cmp
mov
or
outsl
and
in
call
xor
xor
push
imul
mov
jg
jae
sub
add
fwait
dec
lret
xchg
inc
push
lods
dec
inc
pop
push
inc
xlat
dec
out
jge
mov
adc
je
sub
and
sub
loope
mov
out
or
xor
cmpl
inc
loopne
and
loop
jmp
mov
inc
push
sbb
out
or
mov
mov
lcall
push
mov
xchg
pop
movsl
lods
push
out
aam
pop
cli
dec
es
mov
rcrl
out
ljmp
jno
call
out
and
pop
push
mov
push
scas
and
addl
xor
mov
sbb
dec
mov
xchg
or
xchg
sti
sbb
cmpsb
fucom
mov
das
leave
cmpsb
lahf
ja
dec
mov
jb
mov
lcall
jno
mov
movsl
inc
jne
adc
cmp
push
push
sbb
fwait
cmc
mov
mov
push
mov
out
xor
fsubp
ljmp
and
stos
bound
inc
cmp
aaa
xchg
inc
outsb
sbb
mov
loop
sbb
pusha
loope
iret
inc
push
mov
or
sbb
popl
xor
jle
arpl
ret
hlt
mov
xor
mov
xorb
js
and
jmp
mov
hlt
pop
inc
sub
int3
mov
repnz
mov
in
mov
movsb
dec
push
int
stc
adc
shl
and
int3
ljmp
pop
pop
cwtl
repnz
arpl
adc
test
jb
jmp
out
lahf
lods
xchg
add
cmpb
test
cwtl
shrb
iret
sub
loopne
xor
adc
out
arpl
push
call
loop
sub
lods
lahf
mov
int
mov
outsb
xchg
adc
insl
jb
mov
inc
sahf
ds
aaa
mov
lds
pop
nop
xor
xchg
add
popf
movsl
rcr
in
or
test
pusha
gs
add
push
push
adc
adc
add
pusha
xchg
frstor
xchg
testl
jne
mov
mov
pop
pusha
pop
sub
xchg
mov
rorb
jp
imul
mov
adc
add
jnp
data16
mov
add
or
jmp
nop
sub
add
icebp
fwait
xchg
filds
adc
lahf
and
js
sub
out
mov
loop
sub
or
add
pop
dec
repz
bound
fistl
mov
out
jne
mov
jb
pusha
mov
pop
mov
repnz
sub
push
cmpsl
add
jmp
leave
xchg
lcall
inc
fstl
inc
cltd
cmpsl
push
mov
rorb
add
dec
sub
std
nop
in
adc
imull
call
lock
into
rcr
xchg
fisttpl
xchg
cmpsl
in
and
xchg
scas
test
enter
outsb
cmpsl
aas
call
and
rcll
mov
mov
xchg
movsb
js
fs
psubsb
out
sbb
xor
leave
scas
sti
dec
pop
xchg
cmc
add
pusha
stc
or
out
sbb
bound
dec
pop
fistps
or
mov
push
fcmovu
insl
xchg
adc
outsb
lods
shrl
pop
jecxz
cmpsl
xor
mov
out
pop
mov
andb
in
mov
add
mov
and
lret
or
jb
cwtl
lods
jo
mov
pop
cmpsl
xor
out
in
adc
aas
dec
sub
sti
sbb
test
pop
ret
aad
pusha
jo
jbe
movsl
fs
into
adcb
mov
int
pop
pushl
xchg
insl
jne
lcall
add
push
lock
xor
loope
insl
addl
xchg
std
push
cs
xchg
fsubrl
cmc
in
inc
pop
sub
shr
icebp
and
jg
mov
mov
fwait
xchg
xchg
push
or
lea
pop
into
popf
lods
sbb
xlat
jne
xchg
sahf
sbb
clc
popa
or
in
imul
mov
lods
nop
div
hlt
pop
pop
sub
jb
sbb
dec
pop
je
mov
cmp
push
mov
jmp
xor
xchg
pop
shrb
mov
push
lds
icebp
dec
fwait
lret
jg
jbe
adc
in
push
pushf
pop
int3
shll
cmp
repz
adc
je
add
repnz
popa
and
rol
cwtl
lea
mov
call
iret
sbb
ror
sub
loope
fs
cs
pop
cmp
stos
push
movl
cmpsl
dec
rcrb
dec
mov
out
rdtsc
fstps
xchg
int3
sti
mov
aam
cltd
cmp
call
out
sub
xchg
rclb
testl
js
sbb
push
dec
mov
rcrl
call
int
mov
jbe
inc
out
packssdw
loop
jns
popf
dec
mov
ljmp
ficompl
inc
insb
cmp
inc
fs
and
adc
lret
in
xlat
pushf
dec
stos
dec
mov
mov
mov
flds
add
int3
clc
in
lea
into
out
rcrb
jecxz
stc
or
fildll
xor
xor
jne
shll
sbb
push
leave
xchg
jl
pop
scas
sub
inc
add
mov
mov
mov
ret
pop
stos
iret
lcall
xor
pop
jo
inc
stos
test
movsb
je
fadds
fwait
dec
cmp
js
sbb
ret
add
push
pop
mov
enter
jbe
lahf
int3
adcb
mov
or
xor
arpl
xor
mov
fists
mov
mov
lds
int3
mov
sarl
hlt
inc
in
mov
mov
xor
stos
mov
dec
es
les
popf
push
and
stos
jae
jle
pusha
sti
jbe
mov
inc
mov
mov
xlat
sub
push
adc
imul
push
ds
sub
shl
adc
adc
in
pop
mov
jecxz
ret
or
lret
les
dec
xor
cmpsl
cmc
sbbl
xchg
imul
imul
push
push
ficoms
or
ja
adc
jne
sbb
lahf
jnp
xor
jmp
dec
dec
inc
dec
mov
mov
jmp
jl
mov
xchg
mov
in
jge
cs
push
popa
clc
movsl
adc
movsb
js
sub
scas
aam
mov
mov
in
pop
mov
dec
jno
lea
inc
ret
fisttpl
adc
lahf
lods
adc
pop
cli
in
jnp
gs
and
sub
xor
out
sub
xorl
sbb
lret
or
and
push
push
xor
xor
std
jp
mov
lret
ds
into
xchg
xchg
in
add
jnp
dec
push
scas
adc
lea
movsb
repnz
mov
or
sbb
ja
out
adc
mov
or
mov
jge
lret
jno
sbb
cltd
inc
inc
hlt
es
inc
mov
rorb
in
mov
push
lcall
cmp
mov
outsb
jl
arpl
push
mov
xor
ret
mov
rclb
add
cmpsl
std
mov
xchg
pushf
jno
leave
jne
mov
call
dec
leave
aad
mov
pushf
mov
les
sbb
and
stc
mov
xor
jl
ss
jbe
popf
adc
loopne
push
icebp
jle
ror
pusha
pop
add
fucomp
add
into
mov
mov
out
push
xor
jge
pop
dec
dec
scas
add
movsb
rclb
ljmp
mov
add
jecxz
ret
out
jg
jecxz
aas
iret
das
cs
dec
adc
adc
mov
insl
sub
and
das
orl
lahf
int3
xchg
pop
inc
dec
imulb
jl
or
sahf
adc
scas
test
popf
cmp
pop
pop
mov
and
loopne
out
roll
ds
and
fistpl
es
pop
mov
xor
loope
sbb
out
mov
dec
std
sbb
push
sbb
adc
adc
cmp
popa
push
xchg
testb
bnd
outsb
in
cmc
cmc
cli
sbb
in
shll
add
mov
cs
sub
sub
mov
mov
pop
lods
rolb
xchg
mov
je
lcall
es
in
movsb
rcll
xlat
mulb
test
xor
or
sbb
cli
shlb
push
mov
dec
sub
in
xchg
enter
popa
adc
aas
out
jp
pop
pop
or
inc
pop
js
mov
inc
stos
imul
je
pop
xchg
push
out
std
daa
push
sbb
cmpsl
es
cmp
cltd
popa
enter
and
pop
mov
and
add
sub
mov
test
or
jb
aaa
cmp
fdivp
call
repnz
pop
aas
add
xor
std
dec
xor
and
cmpsl
mov
or
mov
jo
xorb
fcoms
in
add
mov
inc
jbe
js
adc
pop
stos
mov
aaa
aad
lret
push
mov
icebp
mov
sbb
pop
subb
in
add
sub
fmull
push
in
lcall
loope
mov
ss
jo
gs
lds
lods
mov
pop
jns
cmpsl
xchg
jo
daa
pop
adc
jmp
stos
pop
adc
stos
aam
sbb
repnz
push
outsl
cmp
inc
mov
inc
sbb
jg
ss
xchg
cld
out
scas
out
rcll
adc
xor
popa
ret
cmc
pop
or
stc
cmp
ja
jle
and
in
inc
push
mov
rolb
test
adc
cmp
mov
mov
jp,pt
outsl
mov
dec
pop
cld
pop
sarl
movsb
lea
inc
addl
ja
repz
das
daa
add
stos
push
shrl
inc
in
aaa
sub
mov
sbb
dec
js
stos
popf
push
icebp
and
cmpsl
mov
mov
mov
inc
adcb
jecxz
dec
jae
adc
clc
mov
mov
sbb
sti
fisubrs
mov
xchg
dec
dec
push
nop
ret
lret
and
ljmp
aam
mov
adc
mov
divb
sbb
pop
xchg
mov
imul
fstps
xchg
xchg
add
inc
or
inc
clc
cmpsl
push
mov
sub
fldenv
lods
xchg
mov
xor
fisttps
cmp
mov
shll
add
sti
mov
mov
test
mov
cmp
mov
insb
sbb
adc
jno
mov
dec
movsl
inc
in
in
jbe
sub
scas
cmp
stos
cmp
or
inc
ja
push
and
mov
mov
enter
mov
fadds
clc
sub
popa
sbb
adc
lret
push
cmpsl
pusha
scas
inc
cmp
sar
push
jne
sbb
fwait
arpl
or
sub
or
lret
push
leave
pop
cmpsw
daa
das
inc
push
and
push
outsb
sub
out
adc
cmc
rclb
ror
lret
push
adc
and
dec
add
scas
or
inc
mov
pop
push
inc
lret
shlb
out
sbb
sbb
sbb
sahf
adc
inc
lds
out
imul
dec
js
mov
add
sbb
and
lock
push
push
dec
fisubrl
lods
push
test
ljmp
xor
push
dec
push
jecxz
inc
lds
addr16
mov
push
push
gs
bound
adc
daa
sub
inc
push
fstps
xchg
mov
adc
mov
in
and
outsl
stos
aas
xchg
push
xor
inc
mov
std
lahf
dec
in
es
xor
push
insl
sahf
mov
and
cwtl
sbb
shlb
pop
sbb
sbbb
add
mov
dec
in
in
and
jl
insb
lea
sub
fsub
aas
mov
inc
xchg
adc
jmp
inc
and
adc
mov
pusha
lds
mov
add
adc
out
mov
dec
push
dec
test
or
cs
mov
loopne
imul
and
nop
movsb
cmp
je
and
loop
add
loopne
adc
xchg
cld
fdivl
xchg
sub
pop
insl
imul
pop
mov
cmpsb
inc
cmp
dec
xchg
out
jp
js
movl
inc
sbbb
xor
iret
add
insl
popa
jnp
xchg
jl
fsubrl
in
mov
xchg
std
and
push
jp
testl
push
add
mov
test
push
mov
xor
dec
fwait
ljmp
pop
dec
cmp
dec
aad
movsl
xlat
mov
lea
pushf
call
pop
in
jle
out
push
or
inc
xor
movsb
inc
jne
jae
js
pop
push
add
movsl
fadds
mov
dec
fs
mov
mov
addb
jle
sbb
pop
and
out
ret
push
pop
daa
call
repz
or
pop
imul
xchg
inc
stos
mov
je
fisttpl
pop
xor
sbb
xor
hlt
push
add
lods
push
lret
pop
and
dec
mov
cmc
mov
xor
jg
xchg
and
outsl
xor
cwtl
push
addr16
jg
add
movsb
xchg
neg
xchg
leave
sub
mov
outsl
push
jo
test
mov
pop
mov
rcrb
das
sti
lret
test
and
cmp
push
out
add
loopne
xor
add
push
lcall
mov
cmpsb
mov
imul
movsb
scas
cmpsb
shl
mov
pop
mov
divl
rsqrtps
xchg
inc
push
jae
sbb
loop
add
and
mov
nop
rcrl
aaa
mov
shlb
pusha
cmpsb
adc
sub
int3
fsubl
and
test
push
test
sahf
jmp
mov
adc
jmp
mov
dec
inc
sahf
mov
aad
insb
les
push
add
inc
ret
cwtl
xchg
xor
flds
loopne
add
hlt
xchg
rcrl
addl
arpl
push
mov
or
test
push
insb
mov
lds
xor
xor
rcr
mov
les
fisubs
repnz
mov
rcll
sub
push
sub
mov
push
xchg
pop
popa
outsl
xchg
jle
xor
pop
jp
push
jo
jmp
jmp
ret
out
loop
dec
dec
into
pop
push
enter
lcall
jae
add
push
jbe
jbe
xlat
inc
repz
jae
test
shl
and
add
lret
mov
pop
jmp
insl
and
outsb
in
loopne
jmp
aam
cmp
in
out
dec
and
loop
subl
pop
imulb
push
add
add
imul
mov
iret
ret
sti
jecxz
in
jnp
fnstenv
std
dec
lock
cmp
mov
nop
iret
fwait
fs
adc
test
into
pop
in
cwtl
or
int
andl
fstps
lock
out
das
push
repz
test
repz
add
cmp
dec
rcrb
lods
xor
xchg
mov
movsl
insb
mov
nop
hlt
aam
lods
fwait
xor
or
sti
into
and
in
das
leave
test
adc
ljmp
mov
jae
adc
out
sbb
push
scas
std
and
sub
ljmp
cwtl
cmpsb
jbe
push
and
fisubrs
cmp
ficomps
sbb
jecxz
mov
lret
push
dec
das
loopne
xchg
xor
pop
pop
push
add
sbb
or
test
js
js
jecxz
xchg
sbb
mov
adc
xor
ds
dec
inc
sahf
xchg
scas
mov
push
dec
inc
jnp
mov
fisubl
hlt
fsubrl
inc
arpl
mov
mov
or
outsl
jo
adc
adc
dec
pop
adc
aam
cmp
jae
pop
sar
xor
jge
or
sbb
aas
arpl
or
ret
inc
pop
sub
xchg
flds
hlt
enter
jg
inc
xchg
dec
pop
jno
xor
out
push
adc
repnz
stc
add
jae
push
push
mov
sbb
popl
cld
or
in
popa
ljmp
jg
cld
loopne
dec
into
jp
adc
xchg
inc
mov
jno
pop
lods
int
sbb
jge
imul
adc
pop
inc
xchg
test
push
xor
pushf
push
jne
icebp
push
adc
sbbb
lret
xchg
in
sub
call
or
cmp
push
add
in
jne
negl
int
sti
jbe
mov
pop
add
sub
fsubr
pusha
cmp
xor
loop
and
ret
fwait
jp
sti
mov
inc
mov
lods
jl
pop
fmul
cld
cmpb
jle
popf
adc
xlat
mov
rolb
loop
push
fildll
out
ja
push
or
or
icebp
push
inc
mov
inc
arpl
ret
xchg
jle
xor
stos
dec
sub
jo
push
mov
out
aaa
lds
ret
jmp
jne
pushf
adc
dec
dec
adc
inc
aam
pop
fwait
mov
mov
mov
and
fisubl
ja
scas
idivb
mov
mov
mov
or
xor
rcll
fmull
sub
clc
outsl
in
lods
xchg
inc
dec
sub
mov
sub
rcrb
lahf
jnp
sbb
dec
jmp
rcrb
lcall
loopne
sahf
cld
jne
or
dec
xor
js
aaa
lret
inc
call
mov
lds
sbb
push
push
in
jns
dec
gs
jecxz
loope
dec
iret
hlt
sbbb
inc
jle
mov
inc
push
and
mov
in
int3
nop
push
xlat
mov
mov
or
pop
inc
and
mov
insl
aas
lret
mov
xchg
fwait
add
push
push
clc
jmp
mov
pop
mov
mulb
adc
nop
icebp
xchg
mov
jmp
xchg
add
pop
clc
inc
dec
lods
mov
lods
pop
xor
mov
aaa
inc
roll
lds
movsl
out
ret
push
ljmp
mov
inc
movb
push
pusha
imul
test
clc
jo
or
xor
lahf
inc
push
loop
popa
fldl
sub
setge
imul
mov
xor
nop
popa
inc
xchg
rcl
addr16
outsb
add
jae
lahf
sub
ja
push
sbb
shrl
inc
mov
mov
mov
adc
sahf
adc
mov
icebp
adc
cmp
cmp
push
sub
mov
clc
test
cmp
in
jg
fadds
jne
jno
das
imul
pop
jno
mov
inc
sbb
add
testb
push
addr16
pushf
dec
pop
pop
xor
sbb
test
test
adc
xlat
sub
fsubrl
adc
mov
jp
mov
stos
add
jb
adc
jmp
adc
push
test
jno
aam
add
mov
push
shr
pop
add
sarb
jb
mov
scas
xchg
clc
jg
aaa
lcall
xchg
xlat
mov
in
movsb
mov
jb
pop
pop
loope
push
lret
shrl
xor
push
insb
repz
aaa
add
ds
cmpsl
push
je
movsl
clc
push
loope
dec
push
sub
rcrb
inc
sub
xor
movsl
imul
pop
sti
add
cs
lock
je
jbe
mov
daa
aaa
jb
cli
mov
and
jp
fs
mov
leave
push
pop
insl
mov
ret
or
imul
sbb
jg
es
adc
xor
aam
adc
lcall
jle
ret
repnz
mov
orb
push
rolb
cmp
mov
rclb
sbb
popa
jp
stc
outsl
sahf
mov
fcom
push
inc
bound
add
cli
int3
pop
lds
js
push
mov
cmp
add
jno
dec
mov
and
cmp
mov
sub
add
lods
icebp
dec
adc
sbb
sbb
sub
mov
sbb
jg
jb
add
inc
rcll
inc
push
inc
jmp
xor
fnstcw
push
jns
inc
and
or
fnstsw
jae
sub
sar
shlb
mov
das
push
ljmp
arpl
sbb
les
test
lret
mov
lret
aaa
out
repz
and
outsb
cmpl
adc
mov
inc
ret
scas
pop
nop
jmp
test
xlat
jae
aad
call
imul
pop
imul
xlat
mov
dec
jp
cmp
ret
shl
filds
mov
add
xchg
aas
sub
dec
push
jnp
inc
jno
mov
mov
add
inc
pop
es
fwait
leave
fistl
pop
mov
and
scas
inc
insl
dec
inc
xchg
pop
addl
lods
fcmove
or
xor
or
jo
xchg
fdivrs
les
inc
sub
push
mov
lock
pop
adc
and
and
imul
pop
es
cli
loope
sub
scas
cmp
lea
jle
pop
push
in
push
ds
out
push
add
js
push
std
jecxz
cwtl
jp
push
sbb
pop
iret
push
ljmp
dec
sbb
mov
roll
and
xor
stos
jecxz
iret
test
loopne
sbb
adcb
lret
jmp
fs
mov
adc
arpl
hlt
out
imul
loopne
lcall
fwait
mov
dec
testl
dec
jecxz
rolb
mov
cmp
mov
push
adc
xchg
ficomps
test
jnp
push
lahf
xorl
test
or
das
js
dec
flds
imul
inc
jl
loope
cmp
mov
push
popa
pop
cltd
ds
xchg
test
inc
popf
and
push
mull
mov
cmp
push
pop
xchg
push
xchg
mov
or
bswap
adc
ljmp
and
lock
in
fisubl
faddl
sti
test
pop
jecxz
or
out
ficomps
repnz
into
dec
pop
jmp
ds
js
mov
lea
inc
inc
mov
and
lahf
loopne
jecxz
in
cmpb
iret
mov
xor
sbb
xchg
xor
sbb
ljmp
repz
imul
rcll
sub
cmp
aad
loope
lock
or
stc
lds
xchg
in
cmpl
pusha
add
testb
mov
insl
adc
ljmp
add
into
shlb
cmpsb
cmpsb
sub
push
mov
and
mov
movsl
cld
and
sbb
cmc
imul
jb
imul
xor
mov
daa
shrl
cmp
fcoml
popf
loop
pusha
add
stc
cmpsl
inc
xchg
out
xor
fwait
ja
jl
adc
std
ja
roll
push
loop
in
jp
iret
xchg
int3
inc
lock
mov
dec
push
enter
xor
add
pop
in
mov
mov
hlt
push
push
lahf
jge
xchg
mov
aaa
mov
sub
rorb
shrl
adc
mov
pop
mov
daa
stos
lea
out
mov
sub
insl
jle
insl
fistl
xchg
push
mov
fwait
or
roll
mov
inc
inc
fwait
sbbb
mov
jp
lret
pop
dec
sti
iret
jbe
cmpsl
and
scas
jnp
sub
adc
pushf
xorl
clc
jnp
push
add
mov
xorl
fisubrl
pop
jle
leave
rorb
lock
dec
js
mov
push
inc
xchg
sub
addr16
jmp
inc
mov
inc
pusha
ss
cmc
dec
int3
pop
es
push
cmpsb
sub
cmp
jg
lods
dec
cmp
jno
aaa
sub
mov
dec
jp
ds
xchg
jg
clc
aaa
push
xchg
add
pop
sub
pop
cmpsb
ret
cli
fptan
fs
dec
push
call
pop
ljmp
iret
popa
push
push
jecxz
int3
jnp
jmp
in
gs
sahf
test
nop
orl
xchg
sbb
in
jbe
stos
mov
decl
mov
push
pop
cmp
jno
ds
or
dec
push
aam
or
jl
sahf
mov
jg
and
cli
mov
cmp
xor
dec
xchg
cmpsb
push
into
mov
shl
lret
jne
push
and
movsl
jnp
sti
pop
sub
int
fcmovu
jecxz
or
in
iret
xchg
adc
mov
jbe
outsb
inc
mov
push
leave
add
in
cmp
add
das
cmp
xlat
jmp
adc
ss
jne
into
xchg
enter
sbb
daa
pop
cmpsl
mov
and
data16
test
push
cs
push
pop
cli
shrl
mov
push
dec
dec
outsb
out
mov
or
les
aaa
adc
mov
fcoml
cmp
jbe
lods
repnz
push
lcall
dec
stc
mov
addb
out
sahf
andb
lcall
lret
cli
sub
int3
cmpsl
jne
lahf
rolb
jecxz
sbb
push
cli
xchg
or
in
dec
mov
dec
je
in
je
aam
lahf
arpl
fists
test
mov
dec
cmc
cmp
lcall
fprem1
mov
divb
lcall
nop
and
dec
shl
test
cmc
add
or
in
imul
and
inc
push
and
lret
inc
sub
orb
addr16
cld
arpl
sub
scas
je
bound
clc
cmp
push
fidivl
out
aas
rcrb
out
mov
push
push
add
jg
or
xchg
sbb
cmp
adc
xchg
mov
add
or
lds
lock
or
cmpsb
and
fisubrl
xor
in
sub
push
push
cmc
mov
jge
or
mov
movsb
sbb
sbbl
mov
push
mov
mov
rol
fdivl
addl
movsl
jno
ds
cmpsl
test
pop
pop
stc
stos
dec
inc
ljmp
lret
incb
lods
lret
in
leave
mov
loopne
xor
loope
scas
mov
subl
mov
xlat
pop
sub
xchg
das
xchg
mov
nop
sti
ret
lcall
or
push
imul
push
inc
cwtl
ret
push
rcrb
out
mov
jb
lret
out
mov
sbb
lahf
or
jns
fwait
insl
mov
loopne
mov
or
mov
mov
fdivrs
inc
rcl
fneni(8087
lcall
xchg
or
inc
adc
fisubrl
sbb
ret
push
ret
or
jmp
testb
mov
mov
out
dec
sub
sub
arpl
pusha
out
inc
call
pushf
cmp
lret
incl
jge
dec
add
xchg
adc
lock
cmp
movsb
adc
add
jne
xor
jae
jae
or
adc
in
cmp
inc
sbb
dec
sub
mov
stos
xor
aaa
sbb
fadd
xchg
sbb
std
hlt
xor
jo
sbb
xor
daa
or
shrl
or
shl
cmp
dec
fdivr
inc
xor
cmp
popf
lea
cltd
bound
rolb
lods
fldl
aam
mov
jo
repz
add
fiadds
in
mov
xchg
inc
mov
jmp
dec
mov
iret
dec
jns
ja
adc
xchg
mov
lods
repnz
mov
jb
pop
cmpsb
mov
xchg
cmc
aam
adc
dec
push
pop
js
dec
test
mov
pop
xor
out
mov
cmp
ljmp
mov
js
mov
in
arpl
popf
sahf
popf
popa
push
ret
shrl
mov
dec
push
xchg
inc
jbe
push
ljmp
mov
xchg
mov
cmpsl
pop
ret
and
cmp
pop
ss
rol
sbb
stos
fwait
xlat
add
sbb
std
loopne
loop
loopne
jmp
sbb
fisttpl
clc
mov
mov
xor
ljmp
dec
out
fidivrs
popf
pop
lods
fisttps
cmpsb
lret
cmc
add
cmp
and
fdivrs
testb
insb
add
int
daa
xchg
mov
push
shll
inc
jnp
sbb
je
mov
mov
sbb
mov
sbb
or
shrb
dec
push
add
test
xchg
xor
xchg
es
cvtps2pi
and
mov
xor
mov
xor
je
leave
test
push
cmp
out
in
jecxz
push
and
test
or
clc
xorb
lea
sub
decl
shll
ss
xchg
repnz
ss
jae
in
mov
inc
xorl
mov
fstpl
test
cltd
inc
xor
xchg
jns
dec
jnp
sbb
jg
and
cli
pop
cli
mov
notb
aaa
js
cmp
xchg
ret
mov
ds
cs
push
out
leave
fnstcw
cmp
lock
inc
loop
out
push
std
sbb
icebp
lods
mov
dec
test
cmpsl
in
cmc
div
movsb
fisttps
jnp
leave
ja
ljmp
das
or
push
mov
dec
jns
imul
jl
ss
divl
inc
add
outsb
pop
lahf
mov
cmp
jne
lea
ret
sub
lds
aam
popf
mov
pop
out
scas
xor
clc
adc
imul
xor
sub
test
cmp
test
mov
mov
scas
dec
pop
mov
cmc
aad
sub
push
and
jnp
dec
sbb
xchg
push
xchg
addr16
sbb
mov
out
xchg
add
cmp
pop
fidivl
pop
jbe
jno
pop
mov
xchg
jbe
or
lods
test
insb
xchg
stos
dec
mov
cmp
das
dec
mov
jb
push
aad
xor
jle
mov
inc
divb
lret
cmp
insb
or
or
enter
and
jecxz
not
mov
xchg
and
ja
sub
sub
sub
or
mov
push
pop
mov
mov
add
or
xchg
ror
mov
mov
in
xor
jns
xchg
jae
mov
cmp
xor
push
or
add
daa
ja
mov
fdivr
xor
cmp
enter
cs
add
fidivl
mov
push
mov
xchg
pop
jae
adcb
imul
and
out
pusha
jmp
mov
bound
in
sti
push
movsb
arpl
jns
xor
testb
mov
cmc
inc
jne
movsb
and
enter
sbbl
in
cmp
arpl
cltd
xchg
pop
ljmp
out
sub
or
sbb
ret
dec
mov
dec
xchg
imul
xor
cmp
mov
imul
jbe
push
jo
call
ficoms
std
jb
daa
fildll
xor
dec
lret
inc
cmp
ret
mov
ljmp
jns
mov
jge
mov
inc
add
hlt
push
add
iret
lods
hlt
into
and
push
xchg
xlat
sbb
mov
cli
cwtl
enter
pop
out
insl
jecxz
test
sub
add
sub
mov
mov
in
cmp
mov
push
daa
lock
hlt
mov
into
pusha
test
enter
mov
andl
ss
repnz
rclb
int3
cmp
negl
mov
and
xchg
sub
pop
in
pop
out
std
cmpsb
dec
and
pushf
ret
stos
neg
movsb
lret
sahf
testb
cltd
out
xchg
jp
xor
dec
mov
lret
lea
mov
stos
out
mov
pusha
cltd
pop
les
and
mov
and
subb
cmp
pop
mov
and
pusha
push
mov
jne
hlt
cmp
and
pop
stos
lret
cs
stos
inc
adc
xchg
sbb
nop
pop
call
mov
repnz
or
mov
push
in
adc
es
mov
js
mov
js
enter
shll
cmc
call
dec
aas
xchg
jge
je
inc
push
stos
sbb
mov
neg
rorl
outsb
mov
sbb
aad
mov
mov
jne
inc
repnz
pop
sbb
xor
fwait
pop
test
mov
pop
lods
sbb
inc
or
in
ss
mov
jnp
adc
xor
dec
adc
mov
add
idivb
lods
add
fldt
enter
or
cmp
sub
enter
fstps
fs
xchg
test
xor
insl
addl
popa
push
and
xchg
in
dec
enter
dec
incb
jne
push
and
dec
es
jmp
push
adc
lds
aaa
movsb
mov
mov
jge
push
bound
sbb
mov
fsubl
xor
enter
je
or
idivl
inc
fldln2
lcall
es
mov
sbb
inc
xor
test
insb
push
dec
sub
sarl
lds
mov
jl
leave
lea
push
out
dec
sbb
in
test
data16
lea
sub
or
enter
mov
loopne
ret
or
sub
cmc
or
std
jp
shr
pop
adc
pop
push
cld
outsb
cwtl
mov
js
pop
push
mov
push
mov
and
es
sub
je
out
imul
sbb
aas
ja
and
stc
mov
adc
push
pop
inc
out
mov
mov
insl
cli
fnstsw
pop
xchg
cld
or
push
scas
sub
mov
lods
dec
mov
push
fdiv
or
pop
jecxz
mov
push
push
jle
add
and
cwtl
in
outsl
pop
clc
movsb
popf
ret
sub
push
xor
insl
fistpll
cltd
jns
aaa
lahf
cwtl
cmc
andl
repz
mov
dec
mov
mov
dec
les
and
jo
ljmp
push
negb
es
mov
test
cmp
xor
fcomi
cld
sbb
mov
mov
dec
push
and
stos
dec
mov
fwait
xchg
sbb
mov
and
data16
push
loope
add
out
shrb
imul
aam
or
mov
jns
and
xor
push
cmp
hlt
xchg
sub
stc
jge
shll
push
inc
lret
dec
rdpmc
dec
in
ja
sbb
mov
add
loop
cmp
push
je
pop
jne
push
pop
add
pusha
in
jle
outsl
sbb
adc
or
mov
fwait
std
push
fisttpl
call
lret
in
mov
mov
jo
jbe
bound
jl
movsb
or
je
mov
push
pop
xchg
aam
push
shl
addb
scas
inc
outsl
xor
in
jge
insb
or
jg
fstpt
jo
out
iret
xchg
dec
das
inc
popa
out
in
dec
push
xor
xor
or
daa
enter
movsl
lods
into
fdivrl
les
pop
or
xlat
xchg
hlt
jnp
ss
or
dec
stos
adc
pop
push
push
pop
adc
outsb
ds
call
mov
mov
or
loopne
jecxz
fcomps
mov
push
jbe
jae
daa
aas
movsb
sarl
mov
adc
test
sub
mov
test
int
pop
push
xchg
popa
add
sub
sbbb
ret
xor
adc
fcoml
adc
add
sbbl
mov
test
push
cmpsb
cmp
inc
or
inc
add
and
leave
xor
aad
and
add
filds
and
and
or
cmpsb
inc
xlat
lds
dec
xor
adc
out
push
ja
push
fcmovb
insl
stos
pushf
addb
add
push
xlat
pop
movsb
adc
fnstcw
fwait
sbb
daa
les
out
lock
negl
lret
sub
lock
dec
cmp
pop
cwtl
iret
pop
xchg
nop
outsl
in
test
xchg
mov
and
pop
jmp
stc
mov
adc
xlat
pushf
mov
jl
xchg
lret
and
push
sub
mov
pop
push
cmp
jge
push
pop
cmp
add
bound
out
sarl
push
or
cmp
rdpmc
sarb
mov
push
std
xchg
adc
sbb
aad
cmpsb
outsb
xor
sbb
push
les
pop
sbb
lods
mov
insb
mov
and
push
mov
cmp
xchg
clc
jbe
std
xor
and
loop
sub
into
push
xor
repz
inc
xchg
sub
scas
outsb
xchg
mov
mov
daa
in
aad
sub
jmp
mov
xchg
cmc
xchg
xchg
xchg
mov
or
sbb
push
inc
inc
add
pop
popf
sub
loop
roll
and
adc
cld
push
xor
cld
jns
movsl
push
sub
mov
pop
pop
mov
inc
cmpsl
push
std
cmp
sahf
out
sub
mov
fstpt
jo
xchg
adc
sbb
jae
enter
dec
shll
cld
fsubs
loop
out
inc
cltd
xchg
and
out
mov
in
mov
cmc
addr16
xchg
cld
ja
loop
xor
inc
jge
cmp
pusha
xchg
icebp
lock
mov
mov
fstps
inc
dec
mov
incl
push
int3
mov
sti
gs
in
cmp
rcl
mov
fiadds
outsb
mov
push
sub
pop
sub
dec
je
push
shlb
mov
cltd
xchg
std
jbe
call
std
sub
lods
insl
add
inc
das
jb
xchg
push
ret
jo
loop
jne
out
popa
imul
lea
and
dec
push
xor
insb
loopne
jg
push
arpl
cs
sarl
lea
or
and
in
call
movsl
pop
pop
cwtl
or
fdivrs
xor
pushf
std
sbb
mov
sbb
dec
loop
inc
mov
ret
mov
sbb
mov
movsl
xchg
pop
pop
add
jg
adc
call
jmp
int
lock
xchg
pop
orb
sahf
mov
mov
arpl
mov
in
lods
stos
inc
pop
fs
fldenv
pop
ja
dec
jbe
fucom
ljmp
mov
and
jb
xchg
adc
shr
xorb
je
idiv
inc
pop
dec
jnp
sti
ret
mov
sbb
jle
mov
jno
add
cwtl
lret
add
inc
loope
mov
bnd
pushf
testb
fwait
mov
lds
sbb
and
cmpsl
pop
jo
push
inc
in
xchg
pop
push
adc
mov
insl
enter
into
add
dec
dec
sbb
insl
jae
and
push
push
or
fdivl
pop
repz
cmc
ljmp
xchg
xlat
inc
inc
push
xor
mov
dec
xor
fstpt
jecxz
jmp
push
in
push
pop
ds
and
shr
rcrl
or
arpl
jp
pop
push
out
test
out
es
jno
cltd
fs
mov
fs
mov
jp
cmp
es
push
outsb
inc
cmc
and
roll
mov
adc
adc
stos
repnz
das
pop
test
mov
rcrb
jmp
push
add
in
dec
mov
jbe
sub
mov
push
aam
push
mov
sbb
mov
cmp
loope
loop
in
stc
xchg
jns
lock
popa
mov
pop
adc
jmp
or
lock
lds
les
lret
adc
int3
xor
pop
movsl
add
mov
adc
sbb
mov
or
lea
or
mov
xor
inc
jg
mov
mov
rolb
jmp
fwait
mov
push
scas
loopne
sub
jp
lcall
mov
shl
pushf
jne
pop
call
stos
adc
mov
dec
mov
aaa
bnd
adc
xchg
sahf
repnz
cwtl
jne
daa
xchg
jp
mov
pop
pusha
push
cmpb
pop
ret
rol
sbb
pop
clc
push
lret
rcrl
je
arpl
int
icebp
aam
inc
inc
es
hlt
mov
inc
add
sbb
call
xchg
xor
es
sahf
add
inc
mov
andl
mov
lret
addr16
ret
jne
lods
cltd
jns
inc
inc
repnz
pop
mov
xor
push
xchg
pop
ljmp
sbb
fidivrl
shrb
shll
pushf
inc
inc
notb
and
push
cld
sarl
xor
dec
movsl
in
insb
add
or
cld
or
adc
push
jns
push
loopne
jb
sbb
jo
dec
mov
dec
in
imull
pop
or
rorb
je
push
jp
push
mov
dec
fs
jge
imul
faddl
ljmp
daa
sbb
mov
mov
gs
mov
lcall
out
or
ja
inc
ror
mov
subl
popf
xor
add
lods
mov
xchg
jns
ljmp
shlb
ljmp
fisubrs
add
xor
call
pop
gs
pop
mov
pop
sbb
mov
lret
scas
ret
addr16
add
pop
xlat
jns
mov
adc
insb
xchg
mov
push
loope
mov
insb
inc
outsb
sbb
pop
sub
jmp
loope
ljmp
test
adc
add
iret
and
push
adc
popf
in
mov
sar
jge
loope
jmp
xor
cmp
pop
je
jecxz
sub
push
add
adc
ror
cltd
fwait
add
adc
fdivs
shlb
fwait
loope
mov
aam
andl
adc
dec
jecxz,pt
push
mov
cmc
scas
or
jg
mov
xor
enter
sub
or
das
pop
xchg
sub
sahf
rclb
ja
ss
cli
iret
jle
mov
mov
jge
enter
arpl
rorl
add
out
out
cmp
repnz
pop
cmp
dec
mov
xor
notb
sbb
pop
cltd
test
cmpsl
inc
xchg
mov
xchg
loop
jb
iret
lods
les
test
dec
in
push
mov
cmp
inc
repz
fcmovnb
mov
mov
dec
inc
adc
dec
xchg
pop
repnz
push
stc
jo
out
sub
clc
xor
fxch
out
and
mov
daa
jo
pop
int3
int
ficomps
fsubl
into
fnsave
push
push
or
sub
daa
ss
xor
push
lcall
lds
iret
pop
adc
jnp
pop
xor
push
xlat
mov
lods
fcomi
repz
mov
not
popa
repz
or
call
mov
xchg
out
cmp
add
aam
lcall
sbb
out
das
sub
xor
pop
test
inc
lret
push
das
jle
inc
or
cmp
or
cld
add
xor
cmp
sbb
imul
clc
jns
mov
stos
xor
xor
pushf
ss
mov
push
icebp
int3
ja
mov
cs
sbb
out
data16
inc
push
test
imul
adc
popl
out
mov
xor
xchg
nop
scas
test
push
adc
addr16
add
push
xchg
das
sub
rorl
sub
jb
mov
scas
jmp
mov
fdivp
mov
sarb
mov
sti
adc
jb
push
subb
stos
scas
lea
test
jg
out
out
mov
inc
and
jmp
or
ret
popf
jae
mov
imull
xchg
es
xor
bound
mov
pop
jg
xor
lods
stc
ret
xor
out
cmc
sbb
sbb
dec
fildl
js
dec
mov
mov
sti
jne
out
and
mov
mov
fs
loope
ret
movsb
jmp
pop
mov
aaa
dec
test
int3
pop
ds
jo
push
xor
hlt
mov
mov
or
cmp
xchg
jo
mov
leave
push
inc
fs
add
in
xchg
jmp
lret
into
hlt
js
jns
pop
into
ljmp
fdivrp
insb
mov
dec
mov
jp
aas
and
pop
fidivrl
fisttps
rorl
arpl
inc
cli
add
not
xor
fdivrl
cmp
dec
dec
jle
sar
fs
mov
das
in
scas
aaa
fsubrs
adc
clc
repz
inc
pushf
inc
sub
sbb
jne
and
pusha
lret
mov
mov
mov
xor
repz
adc
push
push
add
je
dec
scas
push
sti
and
mov
xor
and
or
mov
shlb
insl
repz
movsl
lods
shrl
sbbl
mov
sbb
mov
fsubrl
mov
cmp
inc
mov
and
in
sbb
add
inc
xor
xchg
mov
jnp
pop
pop
inc
add
fwait
das
popf
negb
xchg
push
and
mov
or
xor
aas
lods
push
lods
mov
out
adc
xchg
loope
or
cli
mov
jnp
je
xchg
out
xor
xor
ss
push
cmp
hlt
add
in
fwait
leave
fsubr
push
and
int3
adc
cmp
stc
adc
push
andl
xchg
sub
xchg
xchg
fwait
aas
gs
ret
cltd
jo
jg
mov
mov
sbb
lock
push
mov
xor
shl
xchg
scas
push
jp
jecxz
ds
movsl
or
push
mov
pop
aad
clc
lcall
sahf
mov
xchg
cmp
cmp
fsubrs
addr16
add
xor
mov
out
faddl
leave
jge
insb
out
add
dec
shl
or
bound
inc
lret
pop
cmpsl
jg
lods
and
fiadds
and
xchg
mov
shr
or
adc
aaa
sub
cmpsl
jns
jge
cltd
pusha
arpl
inc
sbb
movsl
and
jl
out
lds
addr16
lods
pop
stos
jl
mov
stos
cmp
fdivs
xor
lods
mov
cli
jnp
push
adc
test
test
repz
test
cwtl
add
shl
scas
dec
xor
sbb
ret
stc
leave
xchg
pop
lds
cmp
jle
and
or
cmp
mov
in
fstps
sbb
cli
push
cmpsb
and
push
inc
call
scas
test
or
fiaddl
mov
xchg
push
les
push
push
mov
xchg
stc
lcall
push
push
int3
cli
arpl
std
pushaw
fcmovu
shlb
ljmp
adc
mov
xchg
jle
je
fcompl
pusha
int
xorl
push
cmpb
pop
jo
sub
fildll
pop
mov
and
aaa
je
leave
ss
sbb
jl
mov
or
lods
cmpb
or
pushw
adc
xor
and
repnz
push
jbe
movsl
inc
lret
in
xor
leave
lds
mov
ja
push
push
ret
jnp
inc
imul
nop
js
dec
lock
in
or
loope
sbb
jg
dec
lret
clc
xor
dec
mov
stos
xor
rcr
dec
orl
fists
fldenv
mov
dec
es
jmp
push
pop
scas
imul
and
inc
ljmp
mov
sbb
xchg
ja
push
mov
mov
jne
aaa
push
adc
pushf
int
insl
in
std
dec
jae
push
arpl
push
fldenv
aad
cmp
es
add
lods
xor
aas
push
mov
sbb
sbb
dec
pop
incb
add
sbb
cmp
sub
inc
mov
cmp
xchg
or
hlt
sub
push
fsubs
mov
cltd
sub
push
loope
in
fiaddl
arpl
aad
jno
cmp
enter
lods
mov
int
or
push
inc
subb
inc
push
int3
rclb
fs
bnd
rcll
lods
xchg
fsubr
ret
pop
cmp
movsb
out
cmp
sbb
lea
jecxz
sub
movsl
cwtl
imul
fwait
loop
or
xor
mov
or
mov
icebp
stc
add
iret
roll
pop
es
cmp
push
pop
arpl
jne
jbe
jmp
mov
insb
es
mov
fs
mov
loope
push
jbe
icebp
das
jne
popa
push
cltd
dec
pop
ja
out
sub
inc
notl
mov
sahf
xchg
mov
mov
out
sahf
cmp
sbb
push
jne
mov
faddp
fisttps
add
test
xchg
pop
in
call
repnz
pop
jnp
pop
push
cmp
pushf
xor
das
movzbl
pop
mov
popa
dec
or
mov
add
insl
scas
push
adc
push
shll
insl
xchg
dec
jne
mov
sub
es
or
mov
jp
push
out
fstpt
adc
adc
pop
adc
ret
jb
aaa
push
aas
jae
stos
jno
fcomi
movsb
and
aaa
inc
jne
mov
fldcw
fucom
lret
jl
cli
cmp
mov
leave
mov
or
pop
scas
clc
jecxz
lea
or
jg
ja
xor
icebp
mov
mov
lahf
gs
or
inc
test
imul
dec
enter
jns
mov
mov
lods
sub
int3
repz
test
inc
cmpb
punpckhdq
in
ja
sbb
mov
test
ret
aad
lock
insb
dec
lret
imul
xchg
jecxz
xchg
xchg
loopne
dec
arpl
ja
gs
iret
or
jbe
ret
ret
push
test
sbb
or
push
fistpl
xchg
mov
pop
mov
pop
pop
mov
xchg
test
rorb
lea
andl
mov
movsb
stos
jge
and
outsb
push
mov
add
in
test
mov
cmp
mov
jecxz
je
mov
mov
push
xor
mov
std
xor
shll
mov
shl
fsubrl
fs
das
add
pop
mov
sbb
inc
xor
pop
imul
cmp
mov
lahf
sub
add
popa
mov
dec
mov
jae
fidivrs
xor
mov
push
or
imul
pop
int
in
mov
popl
daa
mov
in
out
and
mov
jns
xor
sbb
das
xor
dec
cmp
pop
adc
xchg
je
push
push
sbb
movsl
ljmp
mov
jne
pop
xor
xchg
cmp
lret
sbb
push
movsb
cmp
jno
pop
sbb
xchg
shlb
ror
iret
mov
mov
loop
sbb
call
push
or
jle
mov
pop
inc
mov
js
cmp
sti
pop
ja
sub
sahf
scas
into
jmp
and
gs
xchg
je
aas
jne
mov
sub
int
xchg
arpl
cld
cmpsb
or
je
popf
pop
arpl
addl
imul
adc
jno
sahf
jnp
aam
rorl
ja
and
shll
xchg
js
fwait
push
xor
imul
mov
sbb
mov
popl
icebp
loopne
repnz
pop
das
das
outsb
mov
lds
dec
insb
popf
pusha
aad
sbb
test
dec
imul
dec
xor
sti
xchg
ss
push
xchg
pop
xchg
or
fdivp
insl
xchg
jb
lret
pop
inc
cmpsb
leave
mov
xlat
dec
mov
inc
loope
mov
inc
js
mov
outsb
in
dec
mov
test
int3
ds
mov
fcmovbe
push
bound
inc
lock
aas
jno
mov
xor
lahf
xor
les
pop
stos
nop
xchg
lret
push
push
mov
inc
cld
inc
mov
and
mov
loopne
rcrb
push
or
push
cmp
cwtl
mov
inc
jge
imul
inc
cmp
add
add
push
jae
pop
and
jnp
ja
mov
adc
mov
fcmovnb
push
bound
es
mulb
adc
repz
sub
stos
cs
push
pop
pop
mov
xchg
call
jg
xlat
pop
push
outsb
idiv
mull
out
lcall
neg
push
lods
fbstp
mov
xchg
in
xor
or
dec
push
or
push
jnp
test
je
stos
in
aam
fs
pop
leave
xor
jg
movsb
imul
cld
sbb
mov
ljmp
inc
push
cltd
mov
cmp
inc
or
lret
jne
xchg
push
mov
push
inc
call
lret
adc
je
mov
es
add
fsubl
out
fisubs
push
push
adc
adcl
fcompl
xor
xchg
test
mov
push
jo
scas
js
fdivrp
popf
sbb
xchg
or
mov
sub
mov
xchg
inc
and
pop
shrl
movsb
test
cmp
mov
jb
sbb
popa
ja
or
fdivl
fwait
pop
cmp
jge
rolb
test
into
je
add
jns
lea
shr
adc
ds
sbb
jmp
test
add
xor
sbb
popf
movsb
int3
loop
imul
test
lret
mov
sbbb
mov
xchg
xchg
js
push
movsl
adc
dec
dec
adc
mov
cmc
shlb
sbb
adc
and
bound
adc
scas
into
mov
mov
out
dec
gs
mov
outsb
in
shl
and
sbb
lds
insl
mov
push
or
xor
bound
push
leave
mov
mov
inc
rorb
call
jb
cmp
sub
jno
and
fisubrs
mov
adc
mov
cmp
mov
popf
cld
popf
and
sbb
push
sbb
stc
loop
mov
lock
mov
xchg
fwait
pop
loope
sahf
cmp
cld
mov
xchg
adc
pop
push
mov
fstpl
inc
repnz
or
xor
cmp
mov
jno
aaa
pop
leave
push
xor
dec
jg
add
popa
add
lods
xor
xor
mov
orb
hlt
and
mov
xchg
add
cmc
aas
mov
inc
jmp
les
popf
mov
lock
jp
adc
fdivs
mov
icebp
adc
cmp
stos
jae
int3
stos
xor
push
inc
bound
and
xchg
mov
sbb
imul
mov
cmpsb
pop
ds
mov
jp
jle
pop
cmpsb
das
xchg
dec
imul
xchg
xorb
popa
sub
lea
mov
inc
mov
lcall
mov
notb
push
jecxz
xor
xchg
adc
xchg
in
iret
aas
in
lahf
fsubr
cmp
cs
inc
iret
adcb
inc
lods
mov
int
dec
jae
push
lods
jmp
inc
ljmp
dec
pop
xchg
mov
testb
jb
pop
mov
adc
mov
dec
out
nop
fldcw
push
sbb
xchg
nop
rcr
repnz
xor
stos
or
jmp
push
cmp
scas
push
sbbb
xchg
movsb
shlb
jae
or
push
sub
scas
pusha
sub
jmp
loope
sarb
mov
or
xchg
add
in
dec
pop
inc
les
test
and
sbb
xchg
cmp
xchg
sub
add
or
mov
ficoms
mov
and
jb
or
inc
jae
les
daa
cmp
lock
mov
add
ss
aad
jae,pn
incl
jo
sub
cli
cltd
sbb
or
outsl
jne
pop
xchg
out
mov
or
lret
ret
adc
ljmp
cs
or
test
shl
xchg
insb
lret
aaa
into
xchg
pop
push
loope
xchg
stos
inc
fbstp
fnstenv
jle
xor
aam
xor
div
leave
inc
lods
fisubrs
add
xor
fldl2e
jo
in
fwait
mov
push
cs
aam
mov
dec
jg
push
xchg
ret
jl
sahf
mov
sarl
and
fdivs
jno
sub
cmp
push
roll
jge
jg
inc
nop
cmpsb
scas
call
subl
cmp
sarl
scas
pop
cmp
push
jo
mov
push
in
pop
out
xchg
iret
andl
xchg
mov
psubsb
xor
jb
into
dec
insb
fwait
sbb
fnop
jp
mov
outsl
push
inc
push
repz
dec
repnz
jp
mov
int
or
mov
add
mov
scas
test
pop
cmpsb
cltd
jbe
add
out
dec
sub
movb
or
lods
push
movsl
je
das
push
nop
fs
sbb
cmp
sub
pop
mov
mov
arpl
and
sbb
mov
push
pop
adc
adc
mov
xchg
lret
loopne
loop
jle
int3
jnp
jl
ljmp
hlt
xchg
imul
pop
push
xor
movsl
cld
sub
jmp
add
jl
xchg
loop
addb
dec
sarl
inc
std
lea
test
push
cld
gs
adc
aam
add
xchg
jbe
test
fcomps
scas
ss
mov
ret
jo
xor
sub
xor
inc
cltd
cmp
mov
mov
dec
mov
aaa
pop
jmp
movsb
sub
test
int3
sbb
ja
shrl
sub
mov
loop
inc
out
out
aam
adcl
addr16
rolb
jge
mov
sub
add
pusha
clc
mov
mov
iret
mov
sahf
jae
xchg
js
mov
into
jge
xor
bnd
sub
sbb
sbb
orl
aad
nop
mov
adc
sbb
jg
push
and
and
push
xor
xor
ret
and
push
dec
loopne
notb
jg
inc
outsl
xchg
imul
push
iret
nop
sub
mov
in
push
cli
test
jae
sub
mov
jbe
fdiv
adc
cli
xor
shr
lret
loopne
and
cmpb
outsb
adc
ds
loope
pop
je
ret
jne
inc
cmpsb
xchg
jle
jbe
xchg
and
dec
dec
mov
dec
das
cmp
sbb
inc
jecxz
icebp
loop
push
lret
jecxz
lcall
popf
pop
loopne,pn
cwtl
pop
cmp
push
div
fsubl
cwtl
pop
lcall
int
popl
std
xor
testb
pop
rorb
arpl
loope
and
add
jge
pop
ret
lahf
mov
cli
dec
icebp
adc
shl
add
pop
fimuls
and
imul
stos
gs
cmp
ds
mov
dec
adc
ljmp
movb
pop
addl
adc
in
inc
fs
imul
repnz
pop
insb
test
fwait
enter
mov
mov
enter
sahf
mov
cmpsb
scas
out
in
rorb
sbb
jae
and
mov
mov
inc
stos
insb
cltd
jle
popf
or
mov
jno
inc
push
jne
jl
mov
and
or
sub
fdivrp
cmp
test
inc
test
xchg
stos
test
xor
adc
lret
xchg
xchg
or
sbb
jnp
sbb
fcompl
xchg
pop
aad
push
ret
cmp
cltd
fisttpl
jo
arpl
pop
push
push
fistpl
push
sbb
subb
adc
push
and
mov
js
pop
jecxz
jbe
hlt
outsb
add
push
add
daa
push
dec
stos
fidivrl
inc
cmp
dec
adc
test
pop
mov
or
xchg
mov
mov
dec
mov
stc
push
jo
stos
and
insb
jp
or
xchg
bound
sbb
jge
add
xor
insb
adc
xchg
adc
jl
je
das
sbb
pusha
mov
sbb
cmpsl
push
setns
test
adc
xchg
adc
addr16
xchg
cmpsb
ret
fwait
and
jp
sub
add
scas
int3
je
ja
adc
shlb
shl
mov
sub
adc
mov
adc
jae
inc
jmp
jns
pop
repnz
jp
int
es
mov
push
jae
adcb
fists
or
lock
inc
xchg
test
sbb
add
fsts
jp
ljmp
stos
push
xchg
mov
xchg
imul
int3
add
xchg
sti
jbe
mov
push
push
in
inc
mov
arpl
scas
mov
sbb
push
pop
cmpsl
bound
cs
imul
out
jmp
fcoml
movsb
dec
adc
sbb
dec
insb
arpl
jl
push
std
inc
fsubs
jno
xchg
leave
xchg
jecxz
add
or
xchg
push
mov
jle
cmp
scas
xchg
mov
mov
mov
push
adc
push
push
gs
add
dec
imul
fidivrs
dec
enter
add
dec
push
mov
test
cwtl
popa
xchg
leave
jecxz
pop
sbb
out
mov
out
repz
mov
das
pusha
in
in
pop
clc
xor
inc
mov
cmpl
std
imul
mov
jo
addr16
cmc
rcrb
or
jl
lods
sub
xorb
xchg
jbe
sti
jle
adc
push
cmp
inc
ret
push
repz
gs
add
outsb
push
dec
lea
in
mov
fs
aam
pop
std
ss
rcrb
xor
jno
ret
into
push
iret
rolb
in
mov
testb
xchg
repnz
ret
fsubs
fcomps
jno
push
loop
push
in
mov
xchg
jno
ss
repz
and
xchg
cmpsl
xchg
addb
filds
fcompl
cmp
inc
addb
stos
add
cmpsb
outsb
mov
call
outsl
addb
mov
pop
repnz
dec
imul
xchg
mov
mov
scas
shrb
outsl
dec
mov
das
xchg
xor
or
in
xchg
popf
sub
subl
jge
xchg
cwtl
sti
jecxz
xchg
fbstp
sub
iret
pop
sub
push
fcmovbe
adc
sub
cmp
dec
pop
in
mov
stc
adc
aam
ret
push
or
xchg
or
aaa
dec
idivb
mov
xchg
add
cli
mov
mov
aas
xlat
idivl
lret
fs
js
out
push
jnp
or
aam
aaa
in
movsb
movaps
push
leave
int3
pushf
mov
mov
xor
jno
lds
xor
inc
fbld
push
or
pop
xchg
lret
mov
sub
ds
nop
cmp
sbb
js
lcall
les
int
xor
test
or
outsl
repz
hlt
inc
sbb
dec
jl
lahf
pop
jl
lret
stc
lahf
cmc
in
push
jo,pt
adc
cmp
incb
mov
in
inc
sbb
cwtl
fucomi
pop
imul
jge
sub
push
lods
xchg
in
or
mov
popf
xchg
fildll
pop
ljmp
jge
push
mov
jo
mov
xor
icebp
in
xchg
and
nop
pop
lods
mov
cmpsl
test
insb
xchg
aaa
pop
je
int3
cmpsb
sti
mov
maxps
xlat
int
pop
and
xor
xchg
inc
cmpsl
and
pop
shll
ror
sbb
int
adc
int
adc
mov
jne
xchg
aad
cmpsb
inc
pop
jno
jge
shl
mov
xchg
mov
out
iret
jle
dec
xchg
add
inc
cmp
cld
jp
pop
das
jge
cltd
add
lret
jo
scas
popl
div
jle
mov
xor
scas
pop
or
cmp
or
dec
mov
xor
sarb
mov
xchg
pop
sti
fdivr
xor
imul
xchg
lcall
popf
rolb
dec
xor
sub
jp
cmpsl
imul
cmpsb
sbb
stc
push
jo
iret
test
rcr
jp
cmp
push
jo
jnp
and
test
pop
sbb
or
jbe
adc
sbb
and
jg
fistpll
mov
ret
inc
mov
js
in
sub
enter
sbb
bound
popf
test
icebp
mov
mov
xchg
imul
push
mov
xorl
loop
rcl
cmpsl
cmp
lods
inc
fcomp
outsl
adc
jb
jnp
pop
cmp
fidivs
insl
insb
orl
out
idivl
call
add
scas
push
sbb
inc
daa
aam
repz
lods
insl
jne
xor
test
psrad
aad
scas
mov
aam
sub
fcmovne
loop
or
xchg
and
push
inc
out
dec
mov
mov
adc
mov
xchg
daa
aad
add
cmpsb
addl
dec
push
lods
jmp
xchg
xchg
mov
sahf
cmp
dec
test
int
orb
push
pop
in
ret
call
test
or
xchg
pop
iret
fsts
mov
xor
cld
jnp
test
mov
ljmp
mov
lds
fcompl
jmp
push
mov
add
adc
dec
jb
fstl
int3
pop
cmp
push
xlat
rolb
cltd
inc
xor
jg
subb
inc
andl
cmp
push
movsb
andl
add
xchg
mov
mov
stos
push
gs
fists
aas
imull
and
cmp
js
lds
sbb
loopne
ds
imul
lea
jo
iret
xchg
or
inc
add
stos
dec
insb
in
lock
push
mov
imul
mov
std
add
jnp
push
xchg
inc
push
cld
mov
push
test
xor
dec
or
repz
into
jns
sub
mov
inc
xchg
lea
shll
dec
sub
sub
mov
out
fcmovnb
sub
lods
jmp
aaa
mov
in
jne
xor
or
sbb
movsl
out
mov
mov
xchg
pop
notb
jg
inc
pushf
fcompl
andl
rol
adcb
cmp
xchg
fisubl
cmp
pushf
pop
fdivl
push
sub
inc
add
sbb
cmp
xchg
cmp
sub
jge
mov
lret
push
sbb
fld
xchg
mov
in
pop
insl
mov
shll
int
insl
add
mov
scas
in
cmpsl
and
enter
jecxz
dec
into
xor
xchg
mov
push
dec
ljmp
xchg
int
cld
pop
loope
mov
push
adc
repz
add
cmc
mov
aaa
aam
jo
loop
cs
jl
test
push
gs
pop
xorps
hlt
add
inc
cmpsl
jnp
int
push
clc
lods
in
sub
shrb
insb
fwait
xor
and
mov
push
movsl
lock
int
data16
icebp
addb
in
and
fisubrs
push
jle
fidivrl
cmp
dec
mov
adc
jns
pop
fisubrl
cmp
xor
cmp
jmp
fiaddl
inc
add
out
in
xchg
loop
mov
into
mov
or
fsub
icebp
sarl
das
cli
sub
cmp
dec
pop
shrb
push
mov
fbstp
pop
or
mov
bound
inc
push
jnp
imul
cmpsl
sub
inc
cmpsl
pop
xchg
daa
inc
jns
inc
fstl
push
push
fistl
cmpsl
adc
shll
mov
es
cwtl
jecxz
dec
stos
mov
or
lds
inc
sahf
daa
cmpb
rorl
popf
mov
inc
int
icebp
jmp
dec
adc
leave
insl
add
sahf
xor
cli
and
sub
add
sahf
iret
push
rorl
add
cltd
mov
imul
sbb
push
pushf
or
xchg
das
add
pop
jbe
mov
adc
aaa
add
and
in
xor
scas
sbb
dec
inc
lahf
dec
adc
mov
lret
in
jo
addr16
nop
inc
test
aas
add
iret
or
sarl
jmp
cmp
xchg
pop
leave
jge
push
jmp
xchg
in
xchg
ljmp
xor
mov
mov
mov
push
xor
cmp
dec
lods
dec
addr16
xor
popf
movb
adc
cmp
bound
or
pop
pop
sbb
addr16
sbb
or
pushf
pop
mov
loope
stos
popf
mov
or
xor
mov
ret
inc
cwtl
jbe
ss
scas
outsl
mov
sbb
jns
sub
cmpsl
mov
push
stos
les
in
icebp
mov
fstl
les
pop
sahf
adc
es
in
movsb
cmpb
shrl
stc
cs
aam
ja
shrl
mov
ja
sub
and
scas
jecxz
hlt
jge
adc
add
adc
jge
pop
loopne
or
mov
dec
mov
inc
std
gs
addb
xchg
sahf
shll
fldl
jno
sub
hlt
mov
sbb
ficompl
pop
dec
repz
add
mov
push
mov
mov
jecxz
mov
inc
adc
std
fsubs
arpl
mov
out
out
pop
cli
mov
dec
fdivrs
mov
xchg
faddp
cmc
xchg
adc
lcall
mov
adcb
dec
ss
xlat
sbb
sbb
mov
and
mov
out
mov
test
add
dec
add
and
adc
popf
and
mov
fs
add
sub
enter
dec
cmpsl
mov
push
in
mov
push
push
arpl
roll
push
dec
xchg
mov
enter
loope
jno
cmpsl
pop
in
stos
dec
mov
mov
pop
testl
inc
inc
mov
add
es
mov
push
in
lea
push
sub
lea
pop
dec
jmp
lahf
mov
ficoms
int3
and
push
int3
jmp
inc
icebp
adc
jns
aas
sbb
test
out
dec
jge
and
inc
pop
mov
outsl
push
in
fistps
push
mov
lahf
les
add
inc
dec
jecxz
cmp
mov
mov
mov
popa
mov
cmpl
xorb
in
push
popa
nop
or
and
daa
mov
mov
lahf
push
jmp
inc
loope
adc
shlb
int3
fs
pop
xchg
or
and
sarl
adc
daa
out
in
inc
gs
fldcw
adc
test
push
rclb
lea
inc
pop
gs
sbbl
push
into
repz
sub
jne
in
int
cmp
std
sbb
xor
or
stos
sub
sub
pop
out
das
cmpb
ret
fs
idivl
push
repz
jnp
push
mov
bound
gs
inc
and
loope
cli
pop
shrb
or
frstor
mov
add
cltd
inc
lods
adc
mov
aam
mov
sahf
test
jns
cld
mov
lahf
nop
hlt
push
loope
outsl
leave
xor
lret
xor
int
fcoms
cli
call
fidivs
add
mov
pop
mov
movsb
mov
arpl
adc
std
cmp
push
push
test
mov
mov
pop
daa
xor
out
fbstp
stc
xor
outsl
inc
es
testl
movsl
inc
pop
jno
aam
inc
call
subl
mov
test
lods
loop
test
push
mov
jge
and
inc
pop
adc
sub
cmpsb
sub
dec
clc
jge
lcall
dec
loop
popf
arpl
xor
push
icebp
xchg
xchg
mov
test
shrl
cmc
movsb
and
add
sub
xchg
push
jle
cwtl
dec
jmp
pop
enter
jg
mov
pusha
sub
jns
xor
add
lahf
ds
js
test
inc
sbb
sahf
jns
mov
sbb
das
xor
mov
mov
ja
pop
cmp
lds
movb
and
dec
ljmp
out
subb
push
pop
dec
jp
test
mov
mov
loope
or
push
les
int3
lahf
pop
xor
and
pusha
mov
rol
xchg
sub
mov
cmp
test
call
add
insl
jb
adc
scas
hlt
or
insb
dec
leave
rcrl
jb
rcl
lahf
cli
sub
or
pop
fistpll
outsb
pop
jmp
adc
inc
jae
icebp
stos
es
adc
and
or
rcl
lret
ja
std
daa
sub
xor
jne
pop
jle
scas
icebp
lahf
lret
or
mov
xchg
scas
lods
xor
neg
inc
aaa
sbb
imul
lock
jmp
mov
sbb
call
pushf
dec
adc
test
into
sbb
pop
in
arpl
adc
sub
addl
hlt
mov
dec
shlb
push
inc
sahf
add
xchg
loopne
and
inc
mov
mov
enter
fdivr
loop
adc
mov
dec
mov
mov
xchg
and
dec
subb
xchg
jg
ret
testb
add
push
jecxz
push
jg
xorl
enter
inc
dec
lret
iret
push
or
or
insb
mov
movb
sub
fildl
inc
bsf
cmp
pushf
mov
fs
dec
cmc
stos
sti
and
addr16
xchg
std
scas
dec
jmp
inc
je
push
rol
aas
cld
push
fucom
dec
fildl
nop
mul
adc
jg
test
int
jne
test
aam
sub
lret
aas
gs
sub
xchg
pop
and
push
iret
mov
add
adcb
cmp
icebp
jbe
cmp
in
and
xor
enter
fwait
inc
insb
xor
jmp
fidivrs
fwait
scas
mov
int
xor
pop
stos
lds
out
adc
push
sbb
shll
nop
sub
in
cltd
pop
call
mov
repnz
mov
cmp
or
insl
mov
and
fsubrl
test
cld
cmp
or
fdivp
movsl
sbb
stos
int3
inc
cwtl
pushf
mov
ffree
scas
ljmp
sub
lea
lcall
rcr
das
sarb
pop
dec
in
sti
and
or
mov
push
ss
cli
cmp
or
aam
dec
xchg
pop
push
pusha
push
std
sub
test
roll
fwait
call
pop
jecxz
pop
sub
xchg
xor
fldenv
pop
ret
push
imul
or
fadd
sub
jge
jae
sub
loope
mov
jo
or
ss
in
cmp
add
int
sub
int
xor
into
dec
jnp
pop
or
inc
add
inc
pop
mov
mov
ror
mov
sbb
mov
dec
jle
mov
in
sbb
mov
pop
enter
sbb
push
inc
aad
fwait
shl
mov
mov
sbb
call
or
pop
ja
enter
push
xchg
vpaddusb
lods
jecxz
xchg
inc
ds
mov
outsl
add
rcrb
aam
inc
lret
xor
xor
push
lret
sbb
repz
lea
gs
shlb
mov
iret
cld
ret
or
shlb
ljmp
xchg
mov
lcall
iret
enter
xchg
push
sbb
adc
into
sbb
pop
mov
std
ds
or
adc
je
icebp
push
cmp
cmp
xor
cmpsl
or
lods
popf
sbb
jmp
fwait
lods
shr
inc
ljmp
and
lods
and
cmp
jl
imul
jle
push
out
xchg
jae,pn
fidivrl
push
sbb
jne,pn
sbb
lods
outsb
jmp
jge
add
push
outsl
cmp
in
out
jbe
xchg
pmullw
into
inc
cmp
inc
in
ss
imul
inc
fucomip
add
sbb
lock
mov
jno
inc
push
xor
in
inc
push
jle
cmpsb
xchg
sub
cwtl
mov
cwtl
out
andb
inc
test
int3
xlat
int3
mov
push
mov
inc
inc
je
jge
ss
call
jo
xchg
mul
mov
mov
mov
ret
aad
ljmp
test
int
inc
mov
imull
xchg
sub
jl
push
stos
shlb
sbbb
rcr
inc
mov
dec
lcall
nop
sti
dec
cli
stos
mov
test
jge
push
out
push
cwtl
adc
dec
aad
pop
imul
adc
test
sbb
pop
adc
lcall
dec
adc
pusha
je
cmp
and
add
sub
push
stc
out
or
popf
enter
out
icebp
loopne
xchg
mov
daa
cmp
addl
add
mov
fisttpl
shrl
out
loopne
push
in
push
loope
fs
icebp
inc
sub
stos
inc
in
push
mov
enter
xchg
dec
cmpsl
in
adc
mov
addr16
dec
sub
lock
dec
jge
outsb
insb
pop
jb
int
scas
je
decl
ficoml
ja
movsl
xor
mov
fwait
mov
imul
jg
inc
mov
mov
sub
test
test
pop
in
xchg
iretw
jle
push
lods
mov
out
dec
ja
and
add
imul
sub
insl
jne
or
xlat
fistpl
lahf
mov
subl
cwtl
xchg
rolb
mov
fdivrl
in
mov
sub
arpl
addr16
outsl
jmp
mov
out
orl
std
jne
sbb
mov
sub
pop
lds
dec
orb
testl
leave
lahf
dec
xor
std
ljmp
inc
outsl
imul
cmpsb
sbb
xchg
add
add
xchg
inc
int
fiaddl
arpl
adc
std
mov
cld
ror
cwtl
cmp
std
pushf
repz
int
xor
testb
lods
inc
clc
adc
jbe
jo
add
out
xor
ds
or
stc
lahf
rcrl
int3
push
dec
or
mov
pop
lret
pop
out
mov
and
js
inc
dec
outsb
sub
mov
lahf
fcompl
call
std
xchg
mov
in
call
pop
and
cltd
or
fcomi
neg
test
jae
push
ret
pop
dec
pop
scas
out
pop
mov
sbb
or
or
sti
xchg
lods
xchg
imul
mov
mov
in
mov
sbb
shrb
jne
stc
mov
call
insl
push
mov
mov
add
mov
sub
popa
xchg
inc
enter
scas
dec
std
dec
dec
nop
jge
enter
testb
jns
add
xor
jnp
lret
and
jl
inc
test
push
cs
jae
in
aaa
call
cmp
xor
std
enter
jnp
stos
stc
fidivrl
inc
fmul
mov
enter
add
sbb
adc
dec
xchg
ret
cmpsb
out
inc
call
pop
iret
pop
outsb
push
in
jno
pop
adc
inc
mov
dec
jns
and
pop
lret
sub
cmc
and
lret
test
mov
fldcw
pop
or
addb
xor
call
inc
stos
test
and
dec
adc
or
and
pusha
jmp
movsb
clc
xor
mov
adc
lods
aad
ffree
sbb
decl
popa
jnp
mov
ret
out
jno
sti
sub
inc
push
out
aas
sub
mov
jp
dec
sahf
dec
inc
jbe
lods
scas
fldenv
push
and
dec
sub
push
orb
xor
or
adc
loope
adc
loope
arpl
xchg
xor
push
std
rcr
adc
and
sub
dec
std
sub
push
iret
repz
mov
xor
pop
xor
sbb
jno
int3
ret
scas
outsl
ror
and
test
pushf
jp
dec
iret
adc
dec
mov
outsb
or
push
lods
mov
movl
and
rcr
int3
cld
fidivrl
incl
inc
jno
jecxz
idivl
push
movsl
jbe
orb
xchg
sub
and
cmp
mov
fs
pop
jl
sbb
dec
aam
dec
incb
add
into
addl
inc
icebp
mov
pushf
push
mov
lods
mov
lds
mov
jle
cmp
call
mov
inc
push
mov
mov
std
clc
adc
fs
jmp
stos
and
dec
scas
mov
rcrb
aaa
push
cmp
mov
xchg
aas
mov
lods
add
inc
int3
scas
fmull
fcoms
mov
xor
mov
nop
call
cli
test
repnz
cmp
pop
insl
xlat
insl
jbe
xor
dec
sub
push
xor
shr
idivb
shrb
mov
add
arpl
push
jecxz
inc
and
movsl
sti
adc
cltd
loop
icebp
jns
dec
ja
and
push
mov
sbb
dec
pop
enter
ffree
into
mov
lods
pushf
sub
jae
shl
pushf
jl
hlt
lods
xchg
fsqrt
nop
mov
sub
dec
mov
xchg
push
pop
nop
sub
aaa
cmp
add
ja
scas
mov
adc
in
add
das
push
sbb
daa
orl
sub
xlat
cld
je
rol
outsl
xor
lock
in
push
sbb
in
or
lds
xchg
sbb
cltd
es
jmp
movsb
ret
xchg
lahf
int
mov
aaa
xor
hlt
ds
push
test
push
movsl
or
mov
das
cwtl
fsubrl
pop
imul
movsb
je
in
push
or
es
insb
dec
stos
fsubrs
or
sub
or
daa
stos
xchg
das
mov
jae
ret
push
dec
pop
and
jo
cld
adc
lods
jp
mov
dec
and
mov
mov
popf
push
adc
mov
into
ds
mov
ret
pushf
jle
fdivrl
out
repnz
or
add
rcl
lods
jg
push
and
mov
push
fadds
out
and
outsb
je
ljmp
jecxz
adc
push
and
xor
sbb
adc
pop
rolb
cmp
mov
pop
aam
ret
cltd
in
mov
aas
mov
push
sbb
mov
mov
imul
cli
bound
adc
sbb
adc
test
jno
inc
adc
pushf
ja
dec
leave
xchg
mov
mov
or
xor
imul
cld
insl
dec
arpl
fwait
outsl
in
mov
or
fsub
mov
mov
cltd
and
pop
nop
sub
repnz
icebp
cmpl
add
les
aam
adc
in
fiaddl
int3
jae
imulb
sub
shr
stc
pop
adc
leave
sbb
daa
mov
lret
pop
int3
push
xchg
sub
addl
addr16
stos
dec
test
hlt
cmpsl
movsl
add
fnstsw
dec
les
aam
or
cld
xlat
xor
and
test
das
aam
or
movl
cwtl
ret
push
cmp
dec
sbb
pop
hlt
push
jo
out
mov
add
jns
dec
sbb
cmp
mov
jg
icebp
pop
sbb
push
mov
out
pop
pop
pop
xchg
or
mov
into
cwtl
xor
loope
lock
inc
xchg
ret
test
dec
rcrb
mov
xchg
dec
ja
out
xor
mov
xchg
les
inc
shlb
xchg
call
cmp
ss
mov
shl
dec
mov
ljmp
jnp
xchg
jle
xchg
aam
aad
cltd
jle
or
popa
mov
leave
fstl
lcall
push
push
into
xor
adc
les
add
jp
cltd
and
inc
pushf
fwait
enter
shl
loop
sub
adc
sbb
mov
rcl
add
scas
and
push
or
adc
out
xchg
bnd
xchg
cli
mov
cs
ljmp
data16
ret
in
lcall
jno
adc
insl
fadds
mov
jecxz
xor
daa
cwtl
push
dec
push
pop
mov
cmpsb
xchg
lret
cmp
lods
xor
inc
pop
jecxz
div
xchg
adc
xchg
push
test
fdivrl
cmp
sub
out
xchg
fdivrs
fisttpll
add
aad
or
jg
pop
subb
push
icebp
adc
mov
push
data16
mov
sub
cmp
mov
inc
pop
push
xchg
jne
cmp
cmp
loop
pusha
sarl
out
inc
mov
push
pushf
push
dec
lods
xchg
outsl
push
repz
add
cmpsl
lahf
aad
mov
sti
addr16
scas
test
lcall
sub
imul
xor
cmp
fisubrl
decb
push
imul
sbb
sub
orl
test
dec
add
stc
sahf
dec
imul
dec
arpl
adc
dec
or
cmpl
std
out
and
lds
jge
or
xchg
adc
mov
sti
mov
mov
mov
push
leave
hlt
add
mov
mov
mov
fcmovnb
adc
mov
mov
loopne
out
add
dec
ss
sub
rcll
lcall
mov
js
cmp
pop
inc
or
lea
mov
lahf
and
fwait
push
cmp
push
insl
repz
pop
repnz
and
dec
or
add
push
cld
xlat
cmp
xchg
inc
jge
jb
lods
push
cwtl
test
stos
pop
sarl
mov
sub
mov
dec
sub
pop
push
dec
xchg
outsl
int3
jns
sbb
xchg
pop
pushf
add
push
jecxz
or
jl
and
pop
jne
ret
xlat
loopne
jl
ret
inc
mov
pushf
and
push
ss
movsl
mov
cli
mov
call
xchg
xchg
insb
das
nop
xor
adcb
mov
movsl
mov
test
inc
iret
stos
cli
adc
sti
xlat
pop
mov
cmp
mov
scas
pop
pop
mov
adc
xor
xchg
xor
pop
in
outsl
negb
dec
inc
jbe
adc
in
adc
imul
lcall
movl
fs
imul
dec
dec
ficoms
iret
rcrb
mov
aam
popa
xchg
shlb
stos
push
jns
inc
les
out
imul
in
add
psubusb
arpl
xchg
aas
xchg
es
or
loop
inc
sbb
sbb
adc
xchg
jmp
ficompl
stos
sub
mov
inc
mov
shll
and
shlb
pop
pop
cmc
cmpsb
jae
test
arpl
notl
xchg
out
in
sbb
bound
test
pop
and
inc
cmpsl
jmp
push
jl
addr16
loope
sub
leave
push
arpl
mov
inc
pop
lret
mov
mov
sbb
xchg
fistps
out
out
jge
cmp
mov
sbb
sti
jbe
lea
pushf
inc
cmpsb
mov
dec
popf
xor
imul
xor
mov
pop
push
aas
aad
popa
cmp
mov
push
in
outsb
std
popa
mov
movl
ret
sbb
pusha
in
rcll
or
mov
out
loopne
xchg
subb
cld
mov
adc
lds
sub
jno
sub
fidivrl
dec
popf
popf
cmp
mov
rclb
mov
push
loope
push
testb
xor
sub
rcrb
mov
xor
outsl
push
clc
cli
rcl
dec
enter
and
lds
es
xchg
sbb
repz
or
shrl
call
xor
cmp
test
xor
xor
lea
push
push
pop
adc
mov
iret
ja
out
cmp
movsl
add
xor
dec
push
push
and
mov
test
inc
mov
arpl
add
mov
test
clc
clc
pop
push
jecxz
sub
loop
test
enter
push
leave
mov
push
movsb
mov
push
push
cmc
mov
cmp
dec
fwait
ret
push
mov
mov
fidivs
subl
mov
imul
dec
sbb
mov
or
push
loope
out
testl
xchg
cmp
mov
cmp
lods
inc
and
loop
pushf
cmp
sub
addr16
out
ss
rcrl
cmp
jne
sbb
adc
bound
add
and
mov
repnz
scas
pop
int3
xchg
sub
mov
or
jmp
cmp
inc
fcomp
xchg
push
xchg
jl
icebp
cs
cmpl
ja
sbb
repnz
imul
xor
mov
inc
aaa
dec
mov
ss
lcall
adc
lds
fildl
fadds
pop
mov
int
ja
jl
cmpsb
ficompl
ret
adc
or
mov
adc
push
xchg
cmp
rcrl
out
push
into
aad
push
sti
inc
fs
daa
ret
push
inc
test
adc
adcb
jbe,pn
cmp
mov
mov
xchg
fdivp
or
ja
imul
cmpsl
fwait
subl
pusha
xor
in
pop
push
insl
call
insl
cltd
lea
jp
mov
cmp
fisubrs
scas
imul
std
mov
lret
inc
cmpsb
out
pop
adc
sbb
ds
pushf
scas
cld
mov
push
jno
outsb
or
cld
test
inc
push
sbb
ds
loope
mov
push
push
insb
fistpll
cmpb
jae
mov
rcrb
aaa
cs
ja
es
repnz
xchg
cs
and
out
add
inc
jle
repz
jp
xor
daa
cmpsb
xlat
dec
popa
lret
cmp
or
push
jle
inc
pop
movb
adc
sub
sub
test
xchg
stos
mov
fsubrs
and
push
lahf
loop
mov
push
jne
mov
loop
and
cmpsb
orl
sub
lock
sub
jle
addr16
push
mov
inc
lods
pop
mov
icebp
sub
mov
push
inc
jmp
sub
in
jle
je
dec
adc
in
pop
xchg
xor
dec
xchg
sub
add
push
mov
and
jp
stos
mov
clc
cmpsb
jle
inc
sub
std
jge
add
imul
shrl
or
jo
pushf
enter
pop
push
mov
push
push
popl
xor
mov
cmp
lods
das
fwait
and
cmp
in
pop
fstps
jle
lods
outsl
pusha
test
mov
push
cmpsl
cmp
je
xchg
popa
rorl
stc
shlb
loop
scas
jp
les
out
add
sarb
and
inc
mov
lods
inc
pop
pop
sbb
cmp
push
and
jo
call
dec
fcmovb
outsl
push
inc
jmp
sub
pop
jb
ficomps
mov
test
adc
jbe,pn
xor
jb
arpl
cltd
push
xchg
shrl
sub
call
mov
fisttpl
lea
adc
sub
js
pop
sub
daa
lds
jnp
lock
jnp
push
mov
and
outsb
push
mov
in
cwtl
adc
leave
and
jg
jecxz
ljmp
pop
call
push
jmp
andb
push
mov
in
out
and
pusha
jns
sti
adc
loope
idivl
mov
push
fnstsw
add
addb
adc
iret
dec
mov
sub
dec
stos
dec
popa
mov
inc
aam
pop
or
xor
aas
or
mov
jecxz
out
jb
jae
cmc
popf
mov
lods
rcr
mov
xchg
rclb
sbb
loop
lods
mov
icebp
cmp
jne
push
or
add
mov
into
mov
outsb
dec
lods
insl
pop
cmc
loop
out
xchg
repz
stos
push
cmp
test
in
je
lcall
jp
in
cs
mull
lahf
out
and
lahf
dec
jno
mov
mov
inc
and
unpckhps
sbb
leave
push
test
sub
inc
ret
pop
popf
lds
push
cs
aaa
add
push
cmp
mov
cmpsl
frndint
cmpsb
mov
jl
jmp
js
in
jae
push
mov
mov
cmp
mov
jecxz
adc
pop
jp
fsubr
fcmovbe
leave
lods
push
inc
add
popf
jno
push
idivl
imul
mov
mov
ret
aas
xlat
jbe
cmpsb
out
xchg
shl
ljmp
sub
adc
lret
cmp
mov
cli
bound
and
adc
inc
cltd
cltd
fwait
inc
push
and
mov
scas
imul
sbb
aad
cwtl
fists
call
push
fs
pop
sahf
aaa
enter
data16
mov
lcall
xchg
sbb
fimuls
mov
push
pop
shll
sbb
add
nop
fsubrs
mov
cli
pop
mov
aad
add
ds
push
push
adc
cmpsb
cmpsl
cwtl
cs
push
insb
cmp
inc
aad
push
mov
shlb
je
icebp
xor
mov
call
scas
icebp
xchg
adc
xchg
lret
and
sub
leave
mov
in
cmpsl
cltd
rcrl
repnz
xor
hlt
mov
lgdtl
imul
out
lret
testb
jecxz
mov
repnz
ds
and
jmp
aad
test
dec
sub
pop
subb
push
lea
scas
push
lock
mov
rolb
int
pusha
xlat
js
js
sahf
xchg
pop
or
mov
insl
sbb
cmpsb
out
xor
mov
movsb
mov
pusha
sub
fstpt
mov
xor
shll
adc
in
stc
scas
leave
xchg
imul
es
in
mov
and
gs
push
inc
sub
cmp
cwtl
clc
inc
sub
mov
test
andb
xor
mov
pop
and
add
shlb
addb
scas
lds
test
and
hlt
clc
jbe
mov
push
dec
jae
sti
in
shll
ds
into
lds
cmp
inc
loop
and
add
and
push
xor
or
mov
daa
sbb
ds
push
test
jecxz
mov
mov
mov
or
cmp
jg
mov
loop
cs
inc
push
stos
in
mov
fildll
dec
test
xor
lods
xchg
sub
sub
push
js
and
cld
clc
insl
mov
imul
pop
mov
pop
lea
andb
adc
cmp
data16
repz
mov
rcr
pop
mov
insl
into
lret
fwait
test
inc
je
jne
lods
and
cltd
jp
sub
in
push
imul
sahf
inc
hlt
call
cltd
or
pop
cli
inc
je
repnz
push
dec
xchg
adc
loop
sub
xchg
and
mov
adcb
sbb
xchg
xor
movsl
cmp
mov
sub
jmp
lock
push
adc
iret
pop
je
cmp
loop
mov
nop
adc
inc
cmpsb
push
sbbl
flds
push
inc
sub
mov
cmp
pop
dec
add
adc
sbb
lods
and
and
xchg
push
cs
arpl
cld
hlt
int3
jbe
dec
popf
jns
and
pop
in
pop
sbb
out
dec
popf
push
arpl
aam
inc
mov
into
mov
xchg
insl
add
into
jb
aaa
xchg
repz
add
insl
imul
mov
sub
push
push
dec
pop
add
mov
push
xchg
gs
add
dec
dec
or
add
pop
in
push
mov
xor
jbe
nop
sysret
push
iret
aam
ljmp
shl
mov
leave
shll
pop
dec
jno
mov
dec
pushf
imul
test
fidivrs
dec
mov
mov
xor
mov
add
dec
pop
mov
js
jle
pop
xor
pop
push
push
sbb
inc
repz
and
cmp
cmp
je
orl
or
lods
std
int
mov
test
push
xor
sbb
out
lret
das
cmpl
and
and
stc
and
imul
cltd
out
jge
add
in
scas
inc
orb
pushf
pop
push
idivl
movsb
ljmp
loope
cs
jl
push
xchg
push
pop
dec
shlb
inc
and
pushf
sti
push
in
push
xor
imul
jle
test
cld
les
mov
jns
icebp
aad
jmp
pop
sub
sti
sbb
cmpsl
negl
xchg
sbb
in
aaa
cmc
bswap
filds
movsb
lret
shr
mov
out
test
cld
adc
fdivrl
sbb
inc
xchg
scas
jno
pusha
cltd
sarl
arpl
jb
dec
and
int
rorl
push
add
push
cmc
jg
dec
jne
push
pop
aad
xorl
jbe
add
mov
lods
cli
popf
dec
mull
sub
pop
xchg
mov
lds
loop
pusha
mov
repz
and
pop
lods
inc
jo
fbstp
pop
pusha
imul
cmp
lahf
lcall
loop
mov
aam
imul
pop
in
sarb
sarb
inc
mov
fbld
std
sbb
cmp
popa
mov
enter
movsl
mov
rolb
sbb
and
imul
add
hlt
add
lret
mov
mov
fildl
addr16
fistpl
dec
push
and
or
add
popf
iret
adc
xlat
call
movsl
push
fwait
shlb
icebp
or
lahf
push
test
push
iret
aad
es
test
js
jbe
cmp
mov
jge
in
stos
insb
cltd
dec
rolb
add
adc
jl
lahf
pop
in
repnz
inc
loope
gs
sbb
shl
ret
cmp
mov
and
sbb
rcrb
loopne,pt
test
cmpsb
inc
jb
js
mov
pusha
in
push
movsb
repz
test
repz
lcall
push
sbb
jne
xor
jb
decb
mov
lods
jne
call
mov
filds
jo
mov
mov
or
cmp
jl
add
jno
ficoms
pushf
cltd
cmp
lcall
cmp
in
cs
dec
lret
pop
jae
js
mov
leave
mov
xor
aas
jle
fsts
out
stc
in
jle
mov
mov
push
pop
pop
movsb
hlt
pop
out
xchg
pop
push
ljmp
adc
loopne
call
push
xchg
cmp
iret
mov
ret
jae
icebp
jne
mov
pop
mov
mov
and
inc
pmulhuw
js
loope
cmp
out
hlt
jg
gs
or
sbb
cmp
mov
movsb
sub
dec
mov
ljmp
dec
inc
cmp
add
dec
adc
popf
mov
inc
cwtl
jp
cmp
cmpsb
fists
das
jo
sbbb
jecxz
add
dec
xor
push
inc
leave
les
add
imul
sahf
adc
mov
dec
pusha
clc
sbb
fmuls
leave
mov
sub
lds
jg
lds
test
ret
push
sbb
mov
int3
mov
out
in
mov
stc
add
sti
adc
repz
dec
les
jecxz
loopne
ss
test
sub
jno
cltd
mov
test
in
je
and
jmp
das
and
into
add
cmp
add
clc
xchg
mov
add
mov
fcomp
or
and
repnz
adc
mov
push
in
cmp
imul
stos
sbb
pop
test
add
dec
sub
and
mov
test
dec
sub
mov
gs
int
pop
inc
jnp
cltd
push
sbb
sub
jecxz
and
xchg
push
and
adc
xchg
adc
ljmp
imul
fisubl
mov
loope
lock
xchg
sti
xchg
ret
inc
pop
jg
clc
pop
fxch
outsl
inc
cmp
xchg
sti
mov
lahf
lret
sub
orb
in
xchg
push
add
mov
push
mov
push
xlat
cmp
in
or
scas
and
push
lds
gs
ja
fadds
fs
add
inc
pop
cld
adc
insl
mov
mov
push
dec
insl
out
sbb
or
into
pusha
int3
sub
lret
jmp
pop
mov
stos
bound
jae
and
insb
pop
inc
cmp
jecxz
popa
mov
orl
loopne
out
xchg
icebp
dec
movsl
inc
sti
sbb
testb
and
push
push
dec
jmp
outsb
xor
push
mov
jo
lods
jbe
out
out
inc
nop/reserved
sbb
mov
mov
scas
mov
mov
pop
push
xchg
sub
mov
or
roll
cmp
xchg
mov
pop
xchg
pusha
aaa
test
test
outsb
sbb
call
inc
enter
sbb
imul
test
dec
push
mov
sub
pusha
or
inc
test
cmc
cmpsb
daa
out
pop
xor
cli
sbb
sbb
mov
arpl
inc
dec
rcl
cmp
iret
cmp
xorl
sbb
clc
mov
inc
push
test
xor
jmp
popa
pop
mov
mov
andb
cmpsb
mov
sahf
jl
sub
xor
ficomps
xor
mov
xchg
pop
xchg
xchg
mov
jns
arpl
sbbb
cmpsl
cmpsb
jno
pop
and
lock
lcall
pop
shll
pop
pop
scas
mov
jp
enter
inc
stos
test
enter
dec
mov
lret
jmp
daa
and
push
outsb
cs
xchg
push
dec
shll
xor
jne
mov
int
and
loope
sbb
adc
les
xor
pop
vdivsd
sub
testl
sub
repz
ret
xchg
mov
mov
mov
pop
pop
das
in
aam
pop
mov
fptan
fmuls
xchg
push
addl
jns
push
push
sahf
mov
pusha
inc
push
jb
decb
leave
scas
or
mov
neg
inc
push
aaa
adc
mov
stos
adc
sbb
or
mov
mov
sub
adcb
jo
shlb
sarb
gs
mov
pop
ljmp
bswap
mov
adc
xchg
or
mov
adc
mov
js
adc
push
repz
out
lock
xchg
jmp
jp
or
adc
out
sarb
fsts
sbb
hlt
sbb
inc
dec
adc
push
jbe
mov
mov
and
mov
jo
ljmp
xor
sub
jbe
ja
aaa
dec
dec
insl
stos
cwtl
xor
imul
mov
dec
cmp
outsl
adc
lds
push
lods
out
mov
repz
test
lret
xchg
subl
ja
repz
inc
mov
mov
adc
dec
jne
leave
sahf
jecxz
mov
push
imul
aam
cmpsb
fildl
mov
addr16
outsb
add
subl
push
out
and
mov
test
scas
outsb
jne
adc
daa
test
dec
sub
out
sub
std
mov
pop
loopne
popa
ror
or
mov
cwtl
and
cli
cli
test
push
add
cmc
mov
xchg
mov
adc
ja
or
cmp
sbb
aam
mov
sti
xlat
fmull
mov
cmp
fsubl
sub
mov
pop
jmp
fldt
rcll
mov
inc
incb
adc
ret
fbld
sub
sub
mov
add
xor
ficompl
arpl
notl
pop
mov
testl
repnz
lods
push
sbb
rcll
xchg
shr
cmp
gs
ljmp
std
push
ja
out
and
dec
push
push
stc
ret
test
cs
pop
clc
loop
jle
push
das
mov
lahf
in
jns
and
push
jmp
and
and
or
jmp
outsl
xchg
dec
jmp
cld
add
mov
inc
dec
movsb
in
testb
mov
pusha
das
aas
pop
in
pop
pop
arpl
mov
pextrw
and
xor
es
in
pop
mov
add
push
push
in
jae
xlat
xor
icebp
sti
push
sbb
sbb
jb
push
pusha
xor
xor
mov
sub
mov
call
push
cmpsl
add
call
ljmp
sub
pop
mov
jnp
fwait
dec
xor
mov
test
cmp
mov
or
adc
loop
jle
lods
sbb
pop
add
fdivs
lods
jae
addr16
stc
lahf
mov
xor
pop
jne
shlb
pop
lcall
mov
and
sub
shl
js
ds
xchg
dec
mov
jmp
stc
in
data16
out
xchg
mov
jp
push
cld
mov
hlt
imul
xchg
insl
mov
sub
shl
les
mov
or
mov
jmp
sbb
int3
sbb
data16
arpl
ja
ljmp
jae
xchg
loope
xchg
ljmp
xor
jle
mov
fildl
pop
ss
ss
dec
push
inc
mov
outsb
in
fs
mov
mov
cmp
out
arpl
idivl
add
push
mov
adc
clc
adc
pop
testl
sub
pop
lods
orl
or
jns
dec
popf
pop
sbb
xchg
pop
pushf
mov
insl
xor
xchg
cmpsl
lcall
inc
sub
orb
lds
mov
pushf
cmpsl
lds
mov
mov
and
xor
stos
dec
test
dec
or
jns
add
xchg
cmp
vmread
lret
mov
jo
notl
mov
add
jmp
jp
mov
mov
arpl
sbb
int3
mov
ss
dec
jp
lret
out
or
mov
mov
jo
nop
cmc
hlt
xlat
sbb
add
fstps
ret
outsb
mov
cmpl
out
movsl
inc
dec
and
lods
fsubrs
fstpl
mov
cs
cmp
mov
inc
pop
popf
inc
out
aaa
lret
shll
dec
dec
jnp
imul
ret
movsb
js
sbb
subl
pop
ss
jl
mov
bound
cmpb
fadds
add
adc
cltd
addr16
jbe
stc
lahf
push
xorb
xchg
pop
xlat
sbb
jne
mov
xchg
cmp
pop
mov
mov
and
xchg
and
sbb
jmp
add
inc
adc
add
cli
mov
or
pop
mov
lods
jmp
jg
mov
outsl
pop
pop
ljmp
inc
or
pop
adc
mov
lret
rorl
dec
stc
sub
jnp
aas
jbe
or
mov
xor
mov
mov
decl
mov
pop
out
fstpl
inc
adc
ja
lahf
xchg
push
in
lea
pushf
ss
jbe
or
add
ret
iret
jbe
add
out
rorl
insb
aaa
adc
movsb
shlb
cmp
push
mov
sti
xchg
cmpsl
add
leave
in
push
test
push
sbb
push
mov
xor
push
es
inc
fisubrs
pop
inc
sub
add
xor
hlt
je
xchg
sbb
adc
xchg
daa
push
and
das
scas
sti
popa
stc
sub
movsl
nop
push
fidivrs
mov
mov
xchg
jno
orb
sbbl
fildll
adc
cmp
xlat
dec
fcoms
xor
popa
xchg
mov
cmc
scas
xchg
scas
shrl
into
push
orl
test
mov
pop
mov
repz
dec
pop
repz
cmp
jbe
sti
scas
mov
mov
and
cmp
mov
mov
cmp
sub
xchg
call
jp
push
or
daa
mov
adc
cmpsl
mov
sub
jge
repnz
push
ja
push
repnz
pop
mov
iret
orb
test
push
les
or
lcall
mov
ja
je
push
sbb
adc
dec
lea
add
repz
sub
xchg
loope
inc
mov
and
lret
or
adc
inc
mov
add
mov
inc
sbb
test
inc
fsts
lret
push
sub
sub
push
jb,pn
jg
adcl
push
std
aas
adc
adcl
shll
incb
cmpsl
sbb
mov
jb
fnstenv
ljmp
aaa
in
nop
xchg
adc
sub
leave
xchg
mov
xor
sub
icebp
loop
adc
cmpb
scas
xor
dec
mov
push
and
pusha
loope
repz
mov
repnz
clc
mov
mov
mov
mov
add
ljmp
mov
xlat
scas
add
xchg
sub
movsl
rorl
cmp
inc
jge
or
inc
inc
sti
std
and
int
xchg
or
push
loop
test
aas
into
adc
lcall
xlat
inc
lods
pop
adc
pop
inc
popf
stc
aaa
dec
fnsave
mov
sti
and
pop
push
cmc
dec
inc
inc
jns
mov
cmp
ds
stc
add
lock
jp
lcall
mov
mov
sub
sub
xchg
pop
jp
push
cmp
mov
fldenv
lcall
dec
dec
loopne
lahf
sti
push
jne
sub
out
fcomps
mov
inc
inc
in
bound
xchg
sub
xchg
mov
mov
push
xchg
aas
jno
and
xchg
xchg
jns
xor
mov
int
jae
adc
out
stos
push
test
sub
movsb
xchg
fdivl
pop
inc
int3
call
repnz
sbb
clc
sub
mov
and
aad
fmull
cmp
das
ds
sub
sti
mov
stos
jp
outsb
and
or
mov
adc
xchg
cmp
pop
mov
adc
outsl
sub
add
negl
ret
push
or
mov
movsl
aas
cwtl
cmp
sbb
xor
pop
cwtl
dec
mov
push
push
nop
mov
mov
jb
jb
push
or
lret
ss
not
ja
xchg
repnz
mov
push
cmpsl
jnp
mov
mov
outsb
mov
call
ror
loop
shll
mov
test
xchg
movswl
dec
push
into
push
mov
pop
cmp
dec
xor
xor
cmp
es
fnstsw
testl
mov
sahf
call
mov
xor
xlat
shll
pop
sti
in
cmpsl
imul
cmpsb
add
or
add
jl
ds
jecxz
xchg
sub
cmp
push
mov
stc
jl
test
gs
inc
push
out
jbe
ja
pop
xchg
mov
sbb
mov
sbb
dec
xchg
sbb
push
cmp
sahf
inc
std
adc
fsubrp
flds
jg
sbb
push
test
jmp
adcl
clc
pop
ja
cs
cmp
inc
cmp
repnz
loop
pop
into
adc
shl
aad
or
iret
mov
lea
inc
bnd
cli
push
inc
test
loopne
loopne
or
sarb
aas
test
scas
sub
xchg
in
mov
add
loop
hlt
int
fdivrl
in
adc
addr16
adc
xor
mov
push
push
lds
scas
lcallw
or
jo
cmp
and
iret
mov
jno
inc
mov
adc
imul
adc
add
push
stos
pop
or
sbb
out
enter
int
les
inc
xor
iret
mov
insb
stos
adc
mov
rclb
hlt
fldenv
fidivs
sbb
lods
mov
into
sbb
pop
jmp
pop
mov
mov
mov
movsb
inc
sub
pop
cmp
push
cld
mov
movsl
lret
cli
mov
insb
mov
sbb
sarl
jb
mov
aaa
dec
cmp
jecxz
push
inc
divb
cmc
out
out
inc
sub
push
inc
or
push
xor
xchg
loope
dec
mov
xchg
cmp
divl
and
subl
jno
pop
ds
mov
xlat
jo
jg
stos
xchg
cmc
in
inc
in
dec
addb
pop
insb
push
push
out
test
xchg
jecxz
out
movb
lahf
add
inc
dec
mov
xchg
or
pop
mov
sbb
lock
fcmove
add
sub
popf
lret
test
or
fsts
and
adc
fstl
mov
mov
mov
dec
pop
and
lea
stos
nop
ljmp
loop
or
mov
push
mov
mov
repnz
mov
fnsave
shl
jno
and
xchg
mov
fnsave
sbb
push
into
adc
aaa
test
inc
insb
and
push
jb
fsubrs
adc
jb
cmp
push
pop
mov
loopne
mov
repz
xchg
movsb
ficoms
sti
add
jae
jae
imul
clc
in
mov
lret
shrb
xchg
add
addr16
stc
fdecstp
gs
insb
pop
lock
aam
call
pop
mov
lea
aas
adc
inc
repz
adc
or
mov
jg
lret
hlt
aam
inc
push
xor
add
enter
sbbl
cmc
fcmovb
mov
push
fistps
or
lahf
sbb
xor
jb
push
icebp
imul
ss
jp
sbb
inc
sub
nop
out
jnp
mov
leave
les
mov
pop
push
push
lods
pop
aas
add
push
xchg
or
jp
sbb
or
and
mov
mov
addr16
getsec
popf
stc
dec
adc
dec
sti
mov
xor
test
pop
cwtl
mov
das
gs
push
add
mov
shll
repnz
cltd
push
jle
ret
dec
add
xorl
aad
call
shrl
jle
out
or
mov
flds
push
add
mov
sbb
mov
pop
in
cli
adc
xchg
insb
inc
or
enter
dec
test
int
dec
xchg
imul
ret
add
lds
aam
rcrb
cmp
inc
ja
loop
dec
in
jecxz
int3
jle
filds
adc
mov
sub
or
mov
mov
sbb
jae
sahf
jmp
ficoml
push
lds
movsl
lods
sbb
sbb
negl
sbb
add
push
xor
lahf
hlt
int
mov
inc
push
scas
push
test
push
pusha
leave
pop
lcall
mulb
test
pop
movsb
imul
jecxz
pop
pop
scas
cmp
cmp
or
movsl
pushf
data16
adc
gs
icebp
ljmp
pop
cwtl
mov
lds
jmp
loop
cmp
mov
add
ret
dec
cmp
stos
sbb
arpl
lret
sahf
inc
or
out
imul
sbb
fld
popa
push
mov
jp
lds
sub
hlt
sbb
push
jo
fwait
add
mov
mov
out
xchg
pop
mov
iret
das
std
mov
rcl
jmp
scas
cltd
xor
popa
out
aad
out
push
inc
push
push
out
pop
jo
sarl
mov
jge
xor
je
xchg
test
dec
subb
jbe
cmp
outsl
rcrb
fildll
pop
cwtl
sbb
push
mov
mov
xor
stc
repnz
in
add
mov
pop
arpl
das
mov
jne
mov
sub
in
xchg
jno
test
insl
mov
dec
xor
icebp
scas
enter
sub
outsl
mov
cmp
test
xor
into
adc
lock
movsb
mov
mov
add
lea
js
orl
sbb
sbb
mov
xor
jmp
jge
aad
add
jmp
xor
hlt
xor
mov
push
cmp
push
notl
cmp
jge
jb
cltd
pop
data16
ljmp
or
stc
insl
clc
jne
les
leave
mov
lods
test
xchg
push
inc
jbe
nop
mov
push
fs
jecxz
add
mov
pop
fcmovbe
xor
pop
or
cmc
aad
ja
cmp
mov
add
mov
xor
imul
out
lods
popf
adc
imul
adcl
push
movsl
pop
cmp
das
divl
lcall
flds
dec
jns
or
adc
jo
pop
popa
movsl
rcrl
popfw
enter
cld
sub
rcll
xor
push
mov
add
xor
loop
cmp
std
xchg
stc
dec
sti
shl
add
and
pushf
dec
sub
daa
sub
pop
adc
push
popa
mov
jno
cs
cmc
arpl
mov
repnz
repz
orb
xchg
mov
es
pop
rorl
cmpsl
add
fnstsw
movhlps
lahf
push
adc
loopne
jmp
cmp
add
inc
jmp
inc
pop
ror
stc
test
jbe
ret
sub
cmp
pop
pop
inc
pop
dec
xchg
arpl
sub
xor
mov
sbb
add
push
sub
lds
mov
cmc
aas
popa
xchg
cli
jbe
jge
push
orb
add
clc
cmpsb
cmp
mov
into
lahf
sub
mov
ret
dec
pop
pop
sarl
sub
out
pop
fcomip
add
imul
jmp
ud2
cld
cltd
dec
jne
addl
fstpl
shrl
insb
cmp
insl
in
jmp
shll
xor
psubd
xchg
cmp
xor
jge
and
pop
dec
jnp
dec
lock
cld
jecxz
popf
stos
jle
xlat
add
rcr
stos
aad
popa
loope
sahf
mov
inc
ret
push
and
into
push
in
testb
test
sbb
push
add
lahf
mov
lods
push
add
dec
cmpsl
outsl
add
cmpsb
js
fldenv
rorb
mov
scas
inc
cmp
jecxz
sbb
fwait
xor
xor
icebp
pop
add
add
loop
insl
lea
xchg
jmp
mov
mov
adc
xchg
jae
aaa
mov
lods
push
lds
push
in
dec
xor
cmpsl
mov
fadds
out
les
mov
lret
adc
add
and
loopne
xor
mov
cwtl
pop
inc
ss
fiadds
inc
and
adc
pavgw
jno
inc
fcmovnbe
test
xor
dec
push
addb
jmp
and
dec
mov
ds
orb
dec
loop
je
and
mov
inc
fwait
sbb
push
lret
and
ss
or
sub
sahf
mov
jae
arpl
push
mov
mov
cmp
jp
xchg
mov
and
ss
fsubs
xchg
or
cwtl
xchg
ljmp
add
shl
and
call
insl
push
int
xchg
das
popa
clc
repz
shl
mov
lea
filds
clc
mov
loopne
dec
dec
and
add
test
stc
push
xor
sbb
cmp
add
xchg
xor
mov
pop
aaa
out
pop
mov
and
cli
movsl
sti
rcrl
pop
dec
ja
xchg
pop
push
push
test
pop
das
icebp
mov
scas
mov
and
dec
push
inc
repnz
insb
add
push
fsubl
mov
push
add
mov
loope
imul
jo
adc
shrl
lret
int3
in
dec
pop
sub
sti
mov
fdivrp
mov
out
fidivrl
push
hlt
lcall
test
adc
push
xorl
cmp
das
stos
pop
pushf
pop
mov
daa
cmp
jo
sbb
in
lds
das
jmp
ds
imul
in
sbb
stos
xchg
or
add
inc
jmp
mov
cmpsb
jle
add
inc
sub
adc
jg
imul
sarl
push
int3
jno
movsb
and
out
ficomps
push
inc
xchg
pop
imul
inc
popa
xchg
iret
loope
int3
neg
lods
pop
movsl
or
popa
es
aaa
inc
mov
cmp
sbb
pop
ss
and
hlt
and
xchg
lahf
jmp
inc
outsb
xchg
push
xchg
push
jns
add
dec
in
shrl
lret
arpl
mov
mov
sub
xor
ficoml
mov
sub
and
incl
pop
mov
or
jge
fidivl
mov
cld
nop
mov
pop
lcall
test
in
jge
mov
fists
hlt
pop
push
aad
bnd
sub
ja
xor
pop
loope
insb
inc
dec
sbb
sbb
mov
jns
push
pop
xchg
fwait
cmp
jae
test
mov
mov
push
lcall
mov
jnp
enter
cmc
sarb
jae
sub
mov
dec
cmp
testl
push
xchg
sahf
filds
cmp
push
sbb
mov
aaa
xchg
ficoms
push
pop
mov
ficomps
ret
or
mov
dec
in
iret
fs
lds
cmp
call
or
lods
nop
arpl
out
mov
mov
test
xchg
mov
nop
cli
push
jne
cmp
and
push
mov
cmpsb
xchg
out
pop
jo
subb
mov
or
push
aas
pop
sbb
or
scas
ds
dec
ret
test
pushf
outsl
sub
push
or
out
cmp
insl
mov
inc
pop
push
mov
dec
mov
dec
jno
and
in
stc
in
movsb
pop
mov
sbbl
jne
mov
mov
pop
mov
fs
dec
xchg
adc
sub
dec
or
out
adc
or
pop
loope
jecxz
adc
mov
jae
add
popa
lcall
adc
shlb
addps
mov
ss
xor
jns
stos
cli
add
add
pop
push
cmp
jne
bound
shlb
add
dec
loop
lods
out
sbb
or
sub
cmc
inc
negl
jl
jne
lret
rcrl
xchg
int
inc
outsb
mov
les
xorl
and
inc
jno
ja
push
rorl
push
and
ss
cmp
mov
les
fimuls
or
cs
push
pop
call
push
xor
ljmp
push
test
bound
inc
inc
mov
dec
push
mov
jle
ds
jo
popf
adc
sbb
imulb
int
jnp
fistps
lods
push
call
lahf
push
pop
inc
mov
xor
jmp
pop
ja
jae
ds
ja
jae
mov
out
xchg
incl
shl
lahf
cmp
xchg
and
xchg
iret
fwait
lret
mov
rclb
xchg
cs
dec
rcrb
cmp
lret
and
xchg
ljmp
jp
xor
xchg
xchg
adc
xchg
push
inc
nop
fcmovb
test
cltd
pop
push
mov
test
pop
fstpl
sbbb
bnd
mov
xor
movsb
sbb
adc
and
repz
or
cmc
mov
adc
or
lock
mov
in
aam
add
mov
dec
out
lea
jne
sti
test
or
dec
mov
addr16
xchg
stos
inc
mov
aaa
mov
inc
rcl
das
cld
aaa
mov
xor
mov
add
in
pop
cmp
jg,pt
adc
mov
out
jb
out
test
in
jge
jns
jp
xchg
lret
rclb
es
iret
inc
rcll
lds
add
cmp
dec
sub
adcl
jmp
jo
aam
insb
in
ret
mov
das
dec
fdivrl
sbb
xchg
les
neg
or
mov
in
dec
fldenv
add
test
sbb
inc
addr16
divb
test
cmp
cmpb
in
pop
mov
cli
cmc
add
gs
pop
es
ud1
xor
fadds
imul
daa
xchg
mov
inc
sub
adc
mov
adc
xor
fwait
sub
push
or
cmc
sbb
cmp
and
fdivs
aad
add
mov
add
in
and
loopne
xchg
adc
push
enter
pop
jmp
pop
cmp
and
jmp
dec
dec
lock
ficoml
fs
fmuls
in
xlat
push
dec
cli
push
push
ja
xchg
mov
and
mov
ret
lcall
pop
pop
ljmp
fs
jb
jle
inc
daa
pusha
ss
das
or
pop
dec
pop
mov
push
aas
out
ret
xchg
mov
mov
mov
or
xchg
push
xchg
mov
fdivs
loopne
loop
dec
xlat
je
pop
xchg
inc
adc
dec
loop
jnp
and
call
insb
dec
mov
cmp
mov
popf
js
adc
cmp
insl
inc
pop
sub
jmp
or
and
push
sbb
sub
lods
daa
das
rcr
adc
out
pop
inc
xor
add
or
mov
xlat
push
jecxz
in
xor
clc
inc
in
cmc
fisttps
and
sarl
sub
fcompl
cmp
mov
xchg
jb
inc
scas
add
cwtl
inc
in
push
nop
daa
fs
fistpll
mov
mov
sbb
adc
stos
and
aas
dec
in
lods
push
cmp
jge
cmp
cmp
adc
sub
add
xorb
push
or
scas
sub
add
pop
mov
shl
in
mov
lea
or
loop
xchg
mov
dec
mov
dec
hlt
fmulp
les
fisubl
repnz
jmp
inc
movsb
stos
xchg
sbb
dec
push
loope
jecxz
mov
repnz
adc
inc
xlat
add
dec
adc
enter
lcall
and
add
shrb
cmpsb
jno
jo
sarb
fdivs
add
lds
lods
xchg
dec
jne
inc
in
aam
fsubrl
jne
mov
in
dec
sbb
testl
and
repnz
leave
jo
ds
aad
aam
mov
mov
jmp
mov
inc
lahf
mov
arpl
and
push
pop
xor
aad
cli
dec
pop
jmp
pop
dec
ss
and
jecxz
pop
lret
pop
xor
cs
addr16
pop
push
arpl
mov
fnstenv
xchg
aaa
mov
push
lea
and
jp
mov
inc
leave
les
sbb
push
xchg
stos
xchg
aam
pop
push
sbb
stos
rcrb
lret
clc
xchg
pop
cmp
inc
in
jnp
popa
xchg
popf
xchg
jge
out
dec
shrl
jecxz
push
inc
mov
imul
or
pop
rcrb
repz
arpl
lahf
arpl
in
icebp
in
mov
mov
sbb
sbb
push
das
adc
push
ds
mov
sub
inc
xchg
pushf
mov
aaa
push
push
into
aas
outsl
xor
sub
mov
loop
aam
inc
cmpsl
mov
shl
dec
and
push
inc
shll
gs
and
mov
nop
push
into
xchg
jo
adc
clc
or
rorb
andb
fcmove
mov
testb
mulss
sbbl
sbb
cmpsl
in
push
fsubrs
xchg
inc
or
clc
inc
and
and
das
shlb
push
dec
adc
mov
into
adc
fidivrs
js
es
out
pop
imul
iret
fcmovb
jl
sub
iret
or
shrb
scas
pop
sbb
icebp
imulw
sub
cmp
fsqrt
cwtl
pop
test
push
mov
adc
rcr
stos
ljmp
lcall
xchg
pop
lock
popf
inc
and
movups
mov
mov
repz
xchg
out
or
test
dec
sarl
pop
repnz
iret
shlb
int3
outsl
repz
stos
cltd
fs
add
jge
int3
mov
cmc
xor
gs
stos
cwtl
sbb
les
int
pop
pop
push
inc
je
jae
stos
sbb
les
and
insl
icebp
mov
repz
xchg
ds
dec
adc
add
scas
inc
mov
adc
lds
test
sub
repnz
imul
add
arpl
pushf
inc
test
lods
rcll
add
jbe
cmpsl
pop
mov
xchg
ja
jbe
push
or
cmp
leave
jbe
jecxz
lods
adc
mov
add
int
outsb
repz
inc
gs
dec
lea
mov
push
rcll
lds
out
mov
les
dec
iret
dec
add
mov
ss
dec
cmp
inc
rcr
aaa
jns
pop
ja
push
shll
out
mov
xchg
mov
test
pop
lock
fstpt
jl
push
and
adc
xchg
fbld
ja
inc
lret
fdivl
push
and
aaa
arpl
xchg
dec
mov
mov
lret
or
rorb
dec
add
or
and
pop
sbb
xchg
pop
pop
daa
xor
sbb
gs
dec
pop
mov
xchg
mov
or
pop
inc
sbb
sub
std
lret
dec
mov
mov
mov
aam
sbb
add
stc
pop
sub
addb
xor
jne
fldcw
push
xorl
xchg
lock
sub
lds
fcom
adc
add
sarb
mov
enter
data16
int3
xor
loopne
mov
xchg
nop
xchg
incb
loope
xor
jb
sub
xchg
inc
cmpsb
test
lods
inc
xorl
movsl
ret
loop
je
das
call
dec
test
sub
push
mov
mov
mov
mov
mov
dec
push
into
ret
inc
mov
mov
lret
jae
jo
jne
adc
sub
scas
dec
outsl
push
push
nop
mulb
cmpsb
xor
mov
mov
sbb
fs
pop
dec
fldl
lret
adc
push
repz
dec
xor
jb
dec
test
icebp
cmp
in
movsb
mov
mov
inc
ljmp
movsl
inc
jp
andl
add
shl
popa
inc
int
je
pusha
xor
cmc
lea
add
insb
loopne
mov
xor
sbb
adcl
jle
ret
cmp
jno
sbb
adcb
mov
es
cli
push
mov
add
fdivrp
repnz
icebp
and
pushf
pop
sub
fsubrl
jmp
lret
sti
iret
dec
xchg
and
jp
mov
push
mov
xor
daa
mov
mov
ljmp
aaa
stos
repz
push
mov
out
mov
or
into
outsb
fmul
pop
stc
call
jnp
cmp
cmpsb
daa
cmpsl
lahf
mov
add
push
sub
jns
mov
mov
rcr
add
pop
ret
jne
add
xchg
cmpsb
add
jnp
push
jns
add
imul
mov
pushf
xchg
sub
mov
xchg
lea
addb
mov
lret
xchg
repnz
aas
in
xchg
add
mov
jl
push
mov
ljmp
cmp
xchg
pop
lahf
es
sbb
mov
push
clc
fsubrl
inc
push
mov
aas
dec
xlat
ljmp
dec
push
loope
pop
mov
mov
add
push
js
dec
std
dec
imul
mov
push
shl
sbb
cmp
add
sub
fcomps
arpl
cmp
sub
mov
in
shlb
mov
stos
out
or
sub
or
das
mov
mov
cli
hlt
lods
adc
sub
negl
sub
cmc
jg
aam
mov
dec
pop
test
mov
push
fdivs
fcoms
push
inc
xchg
aam
lea
repnz
mov
mov
mov
stos
movsb
sub
mov
shlb
fcmovu
push
push
add
xchg
jno
sbb
xchg
clc
sbb
test
adc
in
sarb
sbb
and
lds
dec
xchg
scas
cmpsl
xorl
das
xorl
sti
xchg
out
adc
add
inc
xchg
jae
inc
test
mov
clc
repz
out
xchg
xor
rolb
cmp
es
negb
aad
lock
pop
push
aas
cmpsl
adc
push
lcall
cmp
sbb
mov
sub
in
sbb
imull
mov
in
mov
add
pop
js
inc
mov
repnz
das
dec
adcl
push
in
ret
dec
orl
dec
enter
sbb
in
sub
jae
repz
out
lods
lods
dec
fldenv
testl
arpl
mov
sub
xor
in
cmp
sub
sbb
fwait
pop
idivb
mov
xorb
cmc
sbb
mov
movsl
mov
xor
ret
add
outsl
insb
adc
stos
jae
fadds
loopne
stos
int
fimull
adc
sbb
mov
out
test
xor
das
jge
cltd
cmp
adc
repnz
je
into
mov
loop
pop
iret
pop
push
ret
lret
call
push
fwait
cltd
jae
push
push
sbb
mov
or
lret
rcr
ficoml
xchg
test
cwtl
test
fs
out
fcoml
xor
jmp
js
scas
mov
pop
pushf
xor
dec
adc
sbb
mov
jge
dec
jne
mov
sbb
test
or
mov
out
das
mov
push
cmp
cmp
dec
in
scas
mov
cltd
int
fsubrl
jno
fistps
daa
cmpsl
xor
es
xchg
push
lahf
test
not
xor
cmc
push
jne
sub
fdiv
sub
clc
jnp
out
mov
cmp
lahf
xor
mulb
int
aad
in
ret
shl
add
sbb
sahf
pop
in
sahf
inc
insb
xchg
pop
int
mov
movsl
push
cmc
mov
and
mov
ret
aaa
idivb
fists
fwait
xchg
sti
sbb
add
das
frstor
scas
dec
dec
adc
dec
or
call
add
dec
adc
cs
cmp
mov
inc
notb
xor
xchg
filds
adc
cmp
test
mov
stos
lods
shlb
clc
rcrl
inc
mov
xor
data16
daa
sub
xor
adc
into
inc
jo
stos
cmpsb
stos
mov
das
je
test
mov
jl
mov
mov
or
mov
pop
inc
push
mov
fstps
rorb
idivl
arpl
sub
lock
and
push
in
hlt
cwtl
scas
add
lcall
ret
dec
push
out
imulb
je
std
je
std
add
sub
pop
inc
cmp
cwtl
repz
sti
cltd
mov
push
ret
add
mov
clc
xchg
cmp
scas
jecxz
mov
sub
and
scas
lcall
cs
mov
test
ret
push
xlat
fsub
dec
cmp
rcrl
movsb
push
and
add
lcall
xchg
mov
adcl
mov
mov
popw
mov
add
pusha
out
adc
cpuid
clc
and
popa
adc
cli
and
je
jmp
cmpsb
scas
push
cmp
mov
or
sbb
movsl
push
popf
aas
jno
mov
sub
adc
push
jae
out
cmp
dec
mov
mov
fiaddl
pushf
scas
pushf
push
xor
cwtl
dec
mov
loopne
enter
imul
decl
rclb
xor
mov
inc
sbb
sub
sbb
cmpsl
xor
loopne
or
mov
inc
lea
fcoms
mov
mov
cltd
inc
js
mov
push
insb
jge
xchg
icebp
add
cmp
inc
jo
popa
jnp
sar
push
and
pop
dec
imul
xchg
jmp
dec
fsts
repz
or
xchg
dec
sahf
push
xor
scas
mov
outsl
rorb
adc
xchg
pop
mov
jne
adc
pop
loopne
adc
insb
lea
int3
cmp
out
jae
or
jae
jno
std
jge
inc
in
cs
dec
sti
repz
xor
out
out
xor
mov
mov
popf
les
sbb
xorb
xchg
jecxz
cld
xchg
lret
inc
mov
push
je
sbbl
fsub
xchg
cmp
ficomps
inc
out
sub
push
inc
fisttpl
movsl
subb
fsubrp
pop
in
mov
sub
jne
sbb
cmp
ja
cli
aam
inc
inc
push
roll
or
push
ja
stc
xchg
in
loopne
inc
push
jbe
fs
pushf
lret
mov
pushf
cmp
jle
cmp
mov
int
sbb
xchg
in
adc
dec
call
js
lret
lret
arpl
subb
lods
mov
cmp
add
cmpsl
mov
je
jle
pop
cwtl
mov
mov
jne
cmp
cmp
aam
mov
enter
mov
sahf
jle
fistl
ds
gs
in
cs
outsb
add
scas
jp
cmp
jecxz
dec
testl
pop
loopne
nop
adc
fcoml
jne
xor
xchg
push
xchg
push
sbb
test
pop
in
push
cli
push
shlb
push
mov
fwait
push
out
cltd
lods
dec
lret
push
mov
fldl
or
test
inc
fisubl
imul
rcrb
cs
jnp
xchg
jp
stc
pop
sbb
add
add
aas
pop
mov
cwtl
adc
lods
and
jmp
pop
cmpsl
pop
xor
pop
idivb
shr
orl
sub
cmovb
sbb
xchg
dec
rcr
push
ja
mov
jno
lcall
lcall
lret
push
ja
jnp
mov
lcall
cmp
xor
sub
and
jnp
adcl
lods
test
mov
cmp
add
test
mov
pushf
cwtl
pop
popf
push
adc
push
ds
push
mov
xchg
je
mov
lahf
outsb
add
stos
call
out
sub
push
mov
stos
sahf
sub
outsl
cli
jecxz
test
inc
aad
sbb
and
lcall
fstpt
push
in
and
insl
or
push
xchg
js
cmp
adc
dec
lods
rcrb
movsb
mov
in
mov
push
push
dec
jnp
aaa
test
lret
xor
xor
sti
push
add
mov
scas
adc
or
cs
icebp
mov
arpl
mov
jae
cmp
sbb
mov
add
adc
cmpsl
cmp
jbe
inc
fstl
sarb
dec
mov
pop
outsb
pop
inc
roll
mov
aad
xchg
mov
sbb
iret
stos
sbb
popf
cmpsl
lods
push
cmpsl
ret
pushf
icebp
jmp
sbb
jne
pop
loopne
or
or
ss
xlat
push
push
rclb
mov
das
sbb
inc
cltd
scas
jbe
add
shlb
mov
fmull
cmp
pop
shlb
mov
push
loopne
push
in
insb
cmp
std
ja
imul
aam
lods
jne
fwait
xchg
add
test
lods
inc
adc
shrb
push
adc
decb
xor
or
adc
adc
xchg
sbb
xchg
push
ret
xor
popf
add
adc
into
jmp
or
repnz
push
stos
add
add
dec
mov
push
mov
mov
xor
in
sbb
adc
and
lret
xchg
sar
xchg
mov
or
data16
pop
shrb
lret
add
mov
dec
ret
adc
aam
jbe
jae
lea
dec
xchg
pop
push
fisttpl
out
push
inc
fwait
enter
movsb
push
push
add
test
pop
fidivs
xor
insl
lret
shlb
in
and
int3
xor
imulb
xchg
movsb
mov
les
pop
sbb
mov
inc
ss
push
jns
fcomps
fcmovnbe
xlat
push
pop
add
xchg
out
mov
push
idiv
push
xchg
mov
shll
dec
xor
xor
loope
jno
in
loop
xor
jg
mov
add
dec
sub
imul
xchg
sbb
mov
je
imul
cwtl
in
jnp
xchg
and
lret
pop
adc
int3
into
mov
mov
jp
mov
adcl
dec
mov
ljmp
lock
imul
test
inc
lcall
pop
sbb
icebp
pop
sbb
mov
out
lcall
dec
jp
pusha
push
mov
mov
popa
int3
and
loopne
sub
pop
flds
jg
mov
and
xchg
adc
xchg
cs
jl
das
pop
sub
dec
jno
adc
inc
pop
xchg
xlat
mov
adc
rcrb
xchg
shll
idivb
out
push
dec
movsb
scas
sahf
jb
mov
pop
sbb
mov
lret
add
jns
es
mov
sub
adc
xlat
imul
pop
inc
aad
cmc
fs
clc
mov
pop
insl
push
sbb
mov
in
roll
inc
in
push
aam
test
ljmp
rcrl
daa
loop
xor
scas
cld
xchg
or
loope
sub
fsubl
test
dec
push
or
mov
les
jae
jnp
dec
mov
inc
sub
lahf
testl
ds
sarl
mov
push
loope
xchg
mov
loop
sub
mov
jae
xor
or
and
push
dec
lret
push
cmc
imul
mov
ss
xlat
notb
mov
xor
fsubrp
mov
jbe
cmp
lret
imul
inc
xchg
out
sbb
popa
lods
pop
add
and
dec
cmpsl
inc
and
insl
xor
inc
lcall
std
adc
fildl
dec
in
adc
mov
lock
dec
in
push
jne
jg
inc
lock
mov
ljmp
pop
push
xlat
push
jge
stos
jecxz
inc
cmpsb
cmp
lret
dec
test
pop
push
add
mov
mov
outsl
roll
jl
sarb
imul
enter
push
sbb
jns
sahf
outsl
ret
xor
movsb
stos
jge
clc
inc
mov
popf
inc
jne
sbb
mov
divb
aad
pop
cmp
in
dec
iret
jno
pop
mov
xchg
data16
test
mov
pop
stos
scas
pushf
sbb
xchg
or
popa
xchg
sahf
or
insb
rcll
jmp
aam
push
subl
shlb
mov
sti
dec
imul
jmp
cmp
rolb
cli
outsl
push
inc
mov
jo
andb
mov
popf
add
pop
ljmp
clc
dec
mov
inc
cltd
xor
sbb
std
xor
add
sub
aad
push
xor
inc
push
mov
pop
xchg
popf
fstp
cmp
popf
inc
push
ret
adc
adc
jno
leave
repnz
outsb
dec
mov
fldl
mov
cmp
jmp
mov
dec
shr
mov
es
sbb
xchg
cmpsl
roll
mov
mov
mov
movsl
pop
stos
mov
jl
push
or
jg
push
jae
or
lret
jb
inc
call
inc
and
add
xchg
jmp
je
mov
daa
xchg
mov
in
sar
xchg
jl
cmp
js
shrl
stc
xchg
std
xchg
push
adc
mov
and
out
dec
sbb
adc
jno
add
mov
push
test
cmpsl
sahf
cwtl
lock
mov
pop
in
inc
mov
lcall
cmp
daa
cmp
inc
fsubrs
test
and
mov
fs
loopne
sub
mov
inc
sbb
sub
inc
dec
test
pop
outsl
in
add
insl
sbb
in
pop
mov
pop
in
fnsave
clc
test
cmpsb
inc
jb
mov
sub
subl
loopne
je
fs
sahf
insl
mov
or
sub
adc
insl
or
xor
push
test
out
lret
stc
insl
cmp
lret
xor
xor
decl
bound
ds
hlt
leave
xlat
rcr
mov
data16
or
jle
add
int3
outsl
out
xchg
outsl
out
lds
jge
pushf
adc
lahf
mov
out
mov
shl
mov
jle
fwait
jmp
insb
out
dec
test
aas
orl
in
call
inc
subb
jo
imul
data16
add
mov
mov
shll
pop
out
and
sub
sbb
xor
mov
push
lock
cmp
jg
mov
aas
cmp
fstl
inc
or
xchg
loopne
ds
adc
negl
and
mov
and
stos
loop
jge
dec
pushf
sarl
dec
mov
add
xlat
mov
mov
xchg
jnp
ss
jae
xor
xchg
push
out
jnp
cmp
int3
insb
pop
add
mov
xchg
lods
or
xlat
and
inc
jb
cmp
mov
dec
jge
repz
in
mov
mov
sub
adc
or
push
iret
ret
orl
icebp
pop
mov
iret
xchg
jmp
xchg
loope
fwait
loopne
lds
fnstenv
mov
sbb
jnp
cltd
push
gs
iret
jmp
xor
or
xchg
loop
popa
cmpsl
mov
xor
aam
fidivrl
cmp
test
sahf
int
xchg
lea
push
popa
movsb
pop
jp
sbb
or
adcl
data16
cld
dec
incl
xlat
mov
jb
popf
push
rcrb
mov
sub
insb
jae
jo
jge
lahf
mov
cmp
cmp
icebp
inc
inc
push
lods
sbb
rdtsc
lcall
cld
pusha
test
or
shl
mov
ljmp
inc
lods
pop
shl
rclb
je
xchg
out
in
mov
sti
popf
out
mov
jb
add
popf
hlt
pop
xor
or
les
and
or
inc
mov
in
fnstcw
mov
xor
insb
xor
lret
js
out
add
fxtract
adc
mov
sbb
test
aam
cmp
xchg
ja
test
lahf
daa
std
jge,pn
and
push
test
push
out
push
inc
mov
lds
xor
popa
inc
pop
movsl
fsubl
adc
leave
insl
loope
andb
pop
lds
sahf
enter
iret
push
fs
xchg
mov
std
push
repnz
xchg
daa
xor
arpl
jp
add
bt
or
hlt
mov
notb
lea
and
mov
insb
test
cltd
movsb
pop
lret
cmp
repz
out
add
test
xlat
rorb
sarb
sub
pop
cmc
js
imul
or
pop
adc
repnz
lds
mov
lods
sti
stos
int3
dec
mov
outsl
add
ret
rorw
and
mov
gs
xchg
add
push
inc
inc
xor
repnz
push
iret
repnz
fwait
test
jmp
mov
pop
loopne
popf
decl
xchg
les
clc
jge
adc
mov
andb
sar
sbb
xor
push
loop
mov
mov
and
jbe
ja
jbe
and
xor
xchg
jnp
addr16
push
xchg
and
rorl
or
sbb
shrl
fistpl
in
shll
daa
dec
inc
or
scas
pop
bnd
sti
andb
aam
bound
pop
jmp
cmc
dec
ret
cmc
stos
adcb
xchg
cmp
push
aam
sbb
mov
addb
adc
push
in
popa
test
enter
and
test
lds
adc
aas
mov
adc
stos
ds
sti
loop
jne
jmp
push
fidivl
stc
mov
add
mov
icebp
data16
pop
cmpsb
cmp
aad
mov
sub
inc
xor
dec
and
xlat
outsb
or
mov
push
data16
push
and
leave
xor
cmp
stos
mov
loopne
fsts
mov
cmpsb
xor
and
xchg
js
out
test
inc
loope
pop
cmp
insb
jle
out
in
xchg
in
out
nop
dec
mov
dec
fldcw
dec
inc
lcall
inc
jmp
rcll
data16
sbb
xor
adc
data16
movsb
scas
or
or
jnp
push
inc
inc
dec
sbb
inc
jbe
mov
lods
sarb
jecxz
ficoms
lods
imul
push
xor
xlat
cs
push
pop
in
ljmp
add
dec
push
cmpsb
shl
jb
sub
jb
adc
in
or
add
add
fnstsw
mov
jl
mov
hlt
mov
out
xchg
inc
add
xchg
pop
fiadds
inc
test
scas
loop
jb
add
pop
cmpsl
icebp
iret
test
jnp
or
sbb
cmp
ja
test
xchg
mov
fnstenvs
lock
insl
xchg
pop
shll
add
pop
add
rclb
sahf
cmpl
pop
mov
inc
repnz
mov
mov
dec
in
pop
push
icebp
test
clc
mov
mov
dec
ret
repz
nop
cmpb
mov
test
xchg
andl
rorl
out
mov
bnd
test
out
iret
sbb
cli
sub
push
sub
insl
imul
sarb
add
xor
cmp
lds
ds
lcall
cmpb
push
jnp
cmp
cmp
push
inc
repz
jg
sahf
cld
jo
in
jno
es
dec
aas
push
cltd
dec
scas
call
dec
add
xor
fsubs
jnp
inc
mov
pop
and
subl
cmp
jns
add
push
inc
cwtl
and
xchg
pusha
xor
sbb
scas
xor
or
pop
and
dec
sbb
sbb
pushf
xor
jecxz
dec
cmp
xchg
cs
mov
xlat
mov
cltd
je
jg
xchg
out
jge
and
adc
push
je
movsl
inc
mov
jae
adc
adc
popl
sbb
rcrl
jecxz
repnz
ss
mov
das
pop
jl
loopne
out
outsl
mov
dec
mov
lock
xchg
out
push
mov
les
enter
push
iret
pushf
mov
test
fists
mov
xchg
xchg
mov
ja
inc
cwtl
daa
dec
jo
jmp
jno
xorb
xor
inc
stos
and
call
out
shld
sub
mull
jbe
jl
adcl
mov
inc
jecxz
test
add
leave
xchg
ret
dec
call
mov
dec
fmulp
jo
sbb
sub
or
push
addr16
mov
push
mov
xor
outsb
jns
mov
outsl
jo
add
inc
fistpll
lods
add
jb
hlt
push
dec
push
insl
inc
gs
cmp
pusha
jle
or
js
sub
mov
or
mov
iret
lods
stos
jnp
xchg
stc
add
sbb
adc
inc
sbb
leave
xchg
cmc
inc
fisubs
jo
add
pop
flds
inc
sbb
movsl
and
pop
pop
jecxz
push
push
push
bound
je
xor
scas
lea
pop
or
xchg
flds
mov
jae
xchg
in
shrb
loopne
add
xor
insl
das
clc
xchg
cli
imul
inc
ficoml
mov
pop
mov
clc
cmc
test
xchg
xchg
jmp
sub
push
dec
nop
out
sbb
fiaddl
xchg
mov
ss
fwait
pop
adc
int3
aaa
mov
xchg
inc
xchg
outsb
cmp
repz
loop
cwtl
and
cmp
aad
scas
sbb
mov
xor
mov
push
jo
divb
shlb
add
pop
push
out
jle
mov
pop
outsb
add
fwait
sub
xor
test
push
push
or
inc
cld
mov
stos
jbe
dec
pop
adc
aam
pop
lcall
lret
pop
popf
and
push
mov
adc
jle
mov
pop
push
stc
dec
sbb
dec
vandpd
dec
rcll
sbb
ret
pop
mov
addr16
call
pop
pop
idivl
movb
mov
mov
sbb
mov
mov
xor
lret
xchg
les
xor
pop
or
sbb
cmp
inc
mov
xor
scas
shrb
xchg
sbb
push
enter
pop
sbb
testb
jge
mov
mov
cmp
inc
adc
fldenv
adc
lock
fadd
aas
or
test
rcl
arpl
in
test
jne
fs
jne
sbb
jp
out
mov
mov
adc
push
or
add
iret
shlb
iret
dec
sub
pop
dec
incb
jg
mov
fsubp
mov
push
adc
sub
adc
dec
loope
hlt
mov
xor
mov
push
xor
jae
call
mov
pop
roll
inc
or
or
mov
pop
pop
repnz
push
jl
addr16
ds
sub
add
xor
sub
jbe
lds
aam
and
adc
sub
cmc
out
xchg
mov
mov
mov
in
and
out
jae
cmp
test
ret
sub
mov
mov
out
ja
xor
test
pop
sahf
or
mov
xchg
jl
and
push
dec
mov
mov
ja
sub
and
rep
fldl
mov
pop
sub
mov
adc
xchg
jns
call
ficoml
cmp
adc
popf
dec
pop
pop
jp
lods
push
jae
movsl
scas
and
mov
or
push
andl
mov
call
pop
add
popf
pop
push
inc
out
jo
in
xchg
shlb
push
sarl
mov
mov
fs
cmpsb
cmp
push
inc
xchg
cmp
jnp
push
inc
dec
fisubrl
int3
mov
sbb
lret
mov
imul
popf
mov
test
mov
pop
sbb
sbb
inc
dec
mov
mov
pop
ficomps
jl
clc
add
js
aad
push
mov
enter
divb
in
pop
fldcw
js
xchg
aas
loope
fidivrl
outsl
push
xor
mov
mov
mov
lahf
dec
in
mov
and
lcall
xor
pop
xchg
scas
sbb
ret
inc
xchg
mov
pop
ljmp
fsubrs
jo
insb
adc
sahf
mov
sub
push
push
fistpll
dec
jle
lret
lds
scas
scas
orb
dec
insb
jne
pop
mov
enter
jecxz
das
xchg
addb
jp
shll
inc
adc
fidivs
int
pop
jp
and
sub
push
dec
mov
ljmp
call
or
into
mov
adc
xor
in
add
mov
jmp
cmp
cmpsb
in
mov
pop
pop
pushl
jl
push
insb
xor
push
dec
lods
push
and
mov
and
in
daa
inc
rclb
jb
loopne
loop
and
movsb
push
add
loopne
jmp
push
cmp
loope
mov
xchg
mov
fisubrl
or
inc
inc
jg
dec
xor
push
push
mov
sti
mov
cmp
inc
cmp
fwait
mov
daa
push
push
mov
mov
pop
daa
xor
cwtl
add
aad
mov
xor
sarl
xchg
aas
icebp
ss
test
out
push
add
loop
mov
mov
xor
fistl
fs
mov
jp
jle
mov
test
or
add
scas
shlb
fwait
dec
sbb
xor
dec
mov
sbb
add
faddl
and
js
xor
push
dec
lret
rorl
add
ret
mov
push
in
jle
in
inc
mov
cmp
jle
pop
mov
jnp
cmp
cmp
in
out
ds
scas
xchg
add
mov
mov
aam
testb
cmp
xor
mov
loop
jmp
and
aaa
lods
jno
popa
lods
push
addr16
lock
test
dec
xchg
xor
data16
imul
js
sub
xchg
mov
je
pop
mov
adc
adc
adcb
jb
rol
lods
sub
in
daa
stos
lock
in
jne
jo
arpl
adc
aad
sbb
dec
je
jne
pushf
fldl2e
pop
mov
cmp
xor
loop
movmskps
or
lahf
mov
lret
lock
xlat
int3
jge
cli
leave
push
mov
pop
dec
xchg
add
and
cli
in
lcall
rcrb
or
cltd
lods
lock
mov
outsl
cmp
jp
movsb
jmp
pop
mov
xchg
out
fs
push
pop
jae
addr16
dec
call
test
popa
call
sbb
imull
je
add
inc
mov
sbb
movsb
jp
int
dec
shlb
adc
mov
adc
adc
movsb
inc
cmp
in
cmp
xlat
loopne
xchg
cmp
subb
dec
inc
int
sahf
sub
outsl
test
lock
jne
jb
outsl
or
dec
push
cld
das
jecxz
mov
add
xor
popa
repnz
inc
and
pop
mov
or
sub
and
mov
lock
inc
cli
sti
out
cmpsl
inc
cli
cmp
sub
imul
jp
jnp
leave
jno
mov
pop
push
and
popf
sbb
daa
loope
fs
or
fbld
movsb
mov
insl
dec
pop
pushf
ret
test
mov
outsb
test
jo,pn
xchg
inc
pop
sub
icebp
andl
pop
dec
add
jg
jmp
jg
push
and
mov
in
sbb
add
lds
inc
mov
cmp
sub
push
sub
aad
mov
lock
loope
shll
mov
mov
mov
pushf
xor
fisttpll
adc
pop
sbb
push
xchg
pop
int3
adc
dec
or
shlb
mov
add
pop
xor
jns
dec
or
popf
out
mov
inc
push
xchg
inc
xchg
sti
arpl
pop
fistpll
lret
push
outsl
loope
sub
inc
jecxz
xchg
jns
cmp
add
cmp
inc
insb
mov
mov
loopne
outsb
in
jno
mov
xchg
xchg
int
in
fs
sub
aad
cwtl
and
sbb
mov
fwait
sbb
out
push
mov
ret
shlb
add
fisttpll
xlat
jne
add
mov
int3
lea
dec
cmp
ret
or
sub
test
lea
sub
nop
insl
sti
test
test
cmpl
loop
sub
adc
shl
mov
push
inc
xchg
lock
jmp
dec
xlat
pop
cs
insb
bound
mov
loopne
add
sbb
pop
ja
mov
ror
ret
mov
xorl
inc
in
add
jg
inc
jp
dec
bound
lret
stc
sbb
push
movl
xchg
pop
repnz
std
ret
mov
mov
xchg
inc
loope
inc
fwait
sbb
mov
out
sbb
fistpll
inc
sbb
je
rorl
adc
ffreep
into
and
xchg
fsubl
iret
in
enter
aaa
xchg
inc
outsb
movsl
addr16
dec
fmuls
mov
aaa
js
add
mov
inc
sbb
out
push
ret
or
test
xlat
test
mov
mov
lods
sbb
mov
outsl
ret
cwtl
ljmp
xchg
cmp
push
push
pop
imul
sti
ljmp
scas
incb
bound
js
mov
arpl
out
out
add
test
dec
xchg
fistpl
addb
shrl
inc
pop
mov
scas
arpl
xor
mov
adc
je
fcmovnu
inc
aaa
add
cltd
push
dec
push
sub
int3
ja
and
stc
test
add
icebp
pop
sti
adc
jnp
dec
dec
dec
xchg
stc
test
or
sar
xlat
sub
pop
out
fisubrs
ror
xor
incb
sub
mov
mov
mov
jp
es
dec
dec
out
inc
lods
xchg
jns
sub
inc
inc
js
fistpl
sub
cwtl
sub
lods
jb
and
pop
das
ja
sub
je
fprem
mov
mov
sbb
imul
mov
gs
aas
insb
sbb
or
mov
imul
ficoms
lret
and
imul
sbb
lcall
orb
push
and
test
push
pop
adc
leave
stc
bound
mov
adc
imul
popa
inc
fnsave
push
mov
pop
sahf
sub
xchg
hlt
lods
repnz
inc
cmpsb
pop
or
mov
out
jecxz
push
and
and
inc
and
push
aam
adc
js
mov
jl
and
std
xlat
xor
roll
test
in
push
dec
sub
int
jo
sub
insl
dec
or
dec
ljmp
enter
mov
or
adc
mov
xchg
cmc
imul
repnz
fs
lcall
mov
cmp
dec
cs
fs
inc
ja
sub
push
pushf
adc
cmc
mov
out
lock
fdivrp
xchg
shll
sbbl
rcrl
mov
std
mov
cli
adc
gs
mov
xlat
repz
xchg
pop
jmp
sbb
scas
sbb
lret
cmpl
inc
jb
dec
xor
mov
insb
in
lret
sbb
push
ret
xchg
lret
outsb
icebp
lods
rclb
mov
or
je
mov
xchg
aam
and
and
sub
mov
xchg
clc
add
adc
mov
outsl
xor
ja
sbb
insl
mov
aas
out
cmp
addl
loop
dec
shrl
insl
cltd
pushf
imul
push
dec
add
stos
lret
shlb
sti
mov
push
jp
dec
iret
adc
push
rcrb
inc
mov
mov
fisttpll
dec
pop
ret
push
inc
out
out
fsts
mov
mov
push
into
insl
push
xor
jbe
jge
out
mov
es
dec
lret
orb
and
fmull
cmp
push
mov
cmp
sti
jo
mov
jbe
jae
xchg
roll
jne
or
mov
pop
popf
sub
cmp
xchg
mov
xchg
dec
insb
popa
dec
xchg
mov
mov
js
shl
dec
data16
cmp
pop
mov
push
popa
repz
bound
mov
loopne
mov
call
call
mov
or
outsl
mov
mov
ss
lods
xor
xorl
pop
jle
shll
loopne
movl
mov
sti
sbb
sub
das
xor
es
test
push
xor
xchg
mov
dec
inc
mov
test
dec
mov
pop
les
loope
out
inc
sbb
and
ficomps
pop
mov
test
aad
scas
mov
jmp
stos
mov
scas
or
lds
aaa
fs
les
dec
cmpl
adc
cld
imul
aam
test
fcompl
test
sbb
ja
adc
les
or
mov
pop
mov
cld
in
stos
push
lods
and
mov
sbb
mov
sbb
jp
popf
push
mov
fistpl
scas
lock
insl
enter
add
cmp
jl
mov
testb
or
xlat
adc
pop
and
sbb
sbb
movl
adc
mov
rcr
daa
sbb
pop
xchg
insb
jecxz
mov
mov
popf
rorl
dec
sbb
inc
hlt
pushf
jg
data16
mov
es
rcll
insl
or
jae
insl
or
sbb
jbe
inc
add
mov
pop
out
xor
out
jmp
jns
jns
add
pop
mov
or
cs
enter
je
adc
popf
sbb
and
jecxz
pop
fstps
cwtl
xor
lds
push
movsb
jne
mov
lret
addr16
lret
dec
mov
mov
cmp
sbb
outsb
outsb
fisubrl
sub
mov
loop
xor
sub
jge
popf
xchg
xchg
or
jl
enter
cmc
fst
jo
insl
sbb
xor
xchg
mov
dec
je
popf
adc
popa
push
or
mov
insb
clc
das
or
outsl
xor
pop
loopne
repz
cmp
jb
cmc
imul
es
fsubr
mov
or
push
jmp
lods
dec
jmp
and
lods
xor
jae
mov
daa
add
xchg
in
loope
sbb
mov
jno
and
mov
jno
pop
lods
jae
ficompl
add
sahf
out
lcall
push
setle
jp
addr16
sbb
and
aas
sbb
ja
in
arpl
pop
sbb
movsb
dec
repz
aas
push
outsb
jns
sub
mov
fwait
gs
int3
lods
mov
mov
or
dec
movl
mov
inc
sahf
push
daa
leave
in
cmc
adc
sbb
cwtl
or
xchg
dec
pushf
push
push
repnz
push
xchg
aas
int
pop
or
add
push
std
outsb
mov
enter
sub
add
add
enter
loopne
ret
icebp
mov
rolb
decl
loopne
fimull
inc
rorl
ret
dec
inc
les
aam
js
mov
lods
cli
or
or
in
out
test
insl
jle
inc
cld
aas
push
cmp
pop
inc
and
outsl
dec
push
pushf
std
mov
mov
fistl
push
jb
jne
dec
cwtl
js
adc
dec
mov
dec
aad
shll
sbb
sbb
jmp
bound
adc
sbb
push
fwait
mov
xlat
mov
add
fmull
add
cld
xlat
aaa
mov
cltd
push
popf
push
inc
mov
push
push
das
inc
call
inc
gs
mov
ja
xchg
fcoms
push
push
xor
lods
ret
lcall
aad
jle
outsl
or
push
leave
in
out
jb
jns
mov
and
lock
ja
je
sub
iret
sub
rorb
lcall
enter
aas
pop
pop
imul
mov
xchg
into
daa
dec
fxch
or
popf
shll
fistps
push
xor
pop
sbb
insb
sub
sub
cs
sti
inc
stos
cltd
pop
sbb
imul
cs
lcall
hlt
fsts
push
mov
dec
in
or
aam
mov
mov
mov
jp
mov
xor
mov
out
stc
xchg
aaa
dec
jle
xchg
aam
js
fwait
sub
sahf
cmpb
cwtl
popa
jb
mov
sbb
adc
mov
push
popa
gs
cwtl
inc
sub
or
leave
dec
push
into
push
cli
aam
fs
lds
movsb
sub
push
das
imul
cltd
out
cltd
mov
pop
aas
or
push
dec
jmp
push
js
out
cmpsb
mov
aaa
add
stc
jbe
in
xchg
mov
sub
jnp
scas
int3
andl
pop
xchg
repz
mulb
pop
push
jg
xor
repnz
loop
sub
scas
jns
sbb
je
or
mov
xchg
into
sbb
xchg
and
jns
mov
pushf
jg
sbb
out
inc
icebp
out
sbb
repz
mov
pop
inc
adc
jne
fwait
lock
lods
add
mov
test
repz
mov
ljmp
adc
cltd
mov
lret
mov
in
test
push
aad
dec
movsb
cltd
test
stc
sbb
or
fwait
aam
insl
std
mov
rcl
out
test
aam
xchg
lret
data16
xor
insl
cmp
test
mov
add
leave
or
arpl
testl
jg
pop
lcall
clc
push
cli
ds
inc
sub
jp
mov
ja
pop
xchg
mov
es
xchg
inc
pop
add
fs
dec
sub
mov
mov
sub
ss
repnz
xor
pop
scas
in
je
add
pop
pop
cs
or
pop
xor
jo
scas
xchg
jl
xchg
cltd
jge
push
fsubr
lret
lds
loope
xor
mov
mov
mov
cmp
es
mov
push
mov
xchg
and
mulb
cltd
adc
and
xor
loope
rorb
js
dec
or
jmp
sbb
push
jg
pusha
mov
push
sbb
inc
movsb
in
in
andb
pop
xchg
test
or
js
sarl
mov
ljmp
in
xor
adc
repz
xor
mov
mov
ds
and
jae
mov
and
dec
ret
add
cwtl
out
popa
pop
insl
leave
add
stc
mov
cli
mul
xchg
movsl
shrb
push
jp
stos
cmp
and
sub
stos
imul
pop
pop
sub
mov
es
sub
loopne
loope
pop
outsl
icebp
dec
aaa
pop
scas
bound
jmp
jo
lahf
add
scas
fdivs
popf
adc
sub
push
cmp
push
ret
aas
sbb
xlat
cmp
mov
xor
mov
insl
push
jp
dec
arpl
mov
ret
stos
add
sti
sbb
loope
lods
pop
push
dec
and
push
mov
mov
scas
lock
cs
adcb
into
cltd
pop
std
test
cmpsb
adcb
sbb
mov
mov
je
mov
cltd
jne
stos
jp
dec
fstpl
outsl
lcall
or
push
in
ret
add
aam
cmp
and
fstl
movsb
dec
les
sub
lds
test
imul
dec
popf
std
mov
add
idivl
pop
mov
imul
pusha
push
mov
pop
jg
jmp
ret
test
xor
divps
mov
add
fmulp
pop
jl
int3
out
jecxz
push
add
fidivrl
add
sbb
jns
or
xor
mov
cmp
and
sbb
jne
ljmp
cmpsl
lret
mov
data16
xchg
mov
push
pop
lods
mov
lods
insb
sahf
mov
aas
out
push
adc
stos
popf
mov
lret
xor
out
xor
roll
lock
cmpsb
pop
stos
pop
xor
mov
mov
mov
jl
cmp
test
adc
push
shl
and
hlt
fcomp
inc
pusha
cmpl
jmp
ret
enter
scas
xchg
idivb
inc
adc
cli
icebp
cmpsl
adcb
mov
mov
mov
adc
xor
mov
mov
ljmp
mov
or
adc
popf
inc
sub
int3
and
push
add
fstpl
lahf
je
loop
lret
mov
test
cltd
xchg
into
lods
mov
mov
cmp
adc
cmpsb
mov
pushf
lahf
dec
in
loope
daa
js
fwait
cmp
and
sbb
sub
insb
aaa
les
shl
pop
repz
add
jmp
movb
mov
push
and
in
add
aas
jbe
js
sub
loope
mov
push
xchg
dec
jl
xor
idivl
adc
mov
cmp
mov
mov
bt
mov
subb
mulb
cs
out
fbstp
and
inc
push
in
cmp
mov
dec
adc
or
pop
sti
ljmp
sub
imul
push
roll
mov
into
shrb
mov
adc
mov
mov
lock
push
fsubs
aam
sarb
movb
mov
cmpsl
and
loopne
out
push
lret
ret
mov
cmc
repz
push
js
jp
dec
and
mov
stos
sbb
jae
rcl
clc
adc
pop
mov
pop
mov
push
dec
sub
pop
mov
inc
lods
ljmp
push
in
movsl
push
ss
orl
xorb
lock
xorb
dec
insl
test
sbb
mov
ljmp
outsb
cmp
push
pop
cmpb
gs
and
jnp
es
sar
daa
jmp
and
loope
jl
loope
nop
pop
sti
lock
adc
aam
jnp
jb
sbb
inc
add
lcall
jle
call
cmpsl
cmp
add
fidivs
lock
mov
mov
pop
repnz
mov
jo
mov
jae
repz
scas
clc
dec
inc
sub
daa
mov
lock
pop
push
outsb
fistpl
lahf
adc
pop
sub
call
sar
test
inc
stc
mov
sub
fs
rcr
into
jnp
fdivr
mov
fcmovnbe
fwait
adc
insl
andb
out
jge
stos
lea
mov
jae
subl
sahf
jnp
arpl
xor
arpl
jge
lret
mov
push
lahf
and
roll
jge
ljmp
lahf
jnp
jge
jl
or
mov
stc
divb
jne
and
add
out
cmpsl
and
and
rcrl
cwtl
popa
fwait
push
mov
call
out
loope
jg
jmp
sub
lret
pop
in
xchg
cs
je
fstpl
stos
pop
mov
mov
push
int3
imul
or
lods
adc
pushf
mov
fwait
sti
clc
das
rcr
sarl
mov
and
icebp
test
push
pushf
xorl
cmpsl
xor
outsl
add
pop
mov
ds
push
mov
push
push
jno
rcr
mov
sub
jp
sbb
test
lret
add
or
or
test
pop
iret
adc
cmp
dec
pop
inc
mov
lahf
ljmp
cmp
arpl
into
out
cmp
dec
shlb
push
pop
push
or
cmpb
mov
filds
jb
decb
add
jp
mov
cmp
add
mov
or
cmp
inc
sub
mov
imul
cmc
dec
int
cmp
jbe
cmc
stos
data16
test
mov
mov
scas
xor
in
sbb
sbb
mov
in
lds
jnp
orb
popa
xchg
or
xchg
xchg
stos
popf
mov
cld
jmp
adc
dec
or
por
test
jmp
sub
orl
mov
lods
lock
ret
and
bound
shll
pop
mov
sub
mov
jmp
icebp
cwtl
sbbl
in
mov
call
cmp
andl
push
sub
push
fsubrs
mov
movl
xor
pop
ret
insb
aas
ss
call
ss
ror
pop
and
mov
mov
xchg
cmp
sbb
mov
pop
pushf
lret
test
stos
mov
push
bound
movb
sub
pop
or
mov
fs
xchg
jecxz
mov
mov
imul
fwait
mov
mov
movsb
in
roll
xor
pop
es
and
repnz
pop
es
xchg
lds
mov
pop
test
or
mov
and
mov
or
mov
or
addl
sub
mov
mov
cmpsb
js
xchg
cmp
adc
lahf
lcall
mov
cwtl
incb
push
ret
faddl
xor
cmc
jmp
jbe
adc
pop
lahf
xor
jp
mov
inc
imul
or
stos
lods
mov
fisubrl
pop
fs
adc
outsl
imull
mov
jmp
sbb
mov
fs
int
inc
push
jns
pusha
repz
lds
incb
push
dec
outsl
sub
sbb
outsl
inc
cmc
mov
loope
pop
mov
sbb
mov
iret
dec
icebp
mov
cli
jbe
sub
add
add
push
ret
push
add
add
add
add
add
addb
add
sub
add
pop
add
addb
add
push
ret
push
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
push
ret
push
add
add
add
add
add
js
add
add
add
fiadds
add
add
add
add
add
aaa
dec
push
add
add
add
add
add
mov
add
or
add
mov
add
push
ret
push
add
add
add
add
add
enter
adc
add
xor
add
add
add
add
add
aaa
dec
push
add
add
add
add
add
lock
add
jne
add
add
add
add
add
add
aaa
dec
push
add
add
add
add
add
sbb
add
js
add
rol
add
mov
add
push
ret
inc
outsl
insl
add
push
add
add
add
add
nop
add
addb
add
mov
jne
add
add
xorb
add
or
add
xor
add
pop
ret
inc
outsl
insl
add
add
add
add
addb
add
and
add
pop
ret
inc
outsl
insl
add
add
add
add
test
add
push
enter
adc
add
cmp
outsl
insl
add
add
add
add
rolb
add
clc
fadds
push
add
add
aaa
dec
inc
outsl
insl
add
add
add
add
clc
add
add
add
test
add
mov
add
push
ret
inc
outsl
insl
add
add
add
add
and
add
or
add
test
add
mov
add
push
ret
inc
outsl
insl
add
add
add
add
dec
add
add
add
add
push
ret
push
add
add
add
add
add
add
add
push
ret
inc
outsl
insl
add
add
add
add
mov
add
sbb
add
pop
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
and
add
add
andb
add
add
or
add
adc
add
sbb
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
sub
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
adc
add
sub
and
add
add
loope
pop
add
enter
test
add
add
add
pop
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
or
add
xchg
adc
or
or
add
stc
add
fiadds
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
or
add
cltd
adc
push
xchg
adc
or
pop
decl
and
push
stos
and
or
mov
incl
or
add
add
fadds
cmp
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
pop
pop
fadds
cmp
fiadds
jne
incl
xchg
ud0
mov
sbb
add
jnp
pushl
push
aas
nop
xor
adc
sbb
add
sbb
decl
sbb
or
or
add
cld
add
jmp
add
add
add
add
add
dec
add
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
push
add
add
add
sub
or
rcrl
ss
decl
sub
incl
incl
pop
incl
nop
ud0
lahf
adc
or
lcall
shlb
add
jle
push
fdivrs
call
enter
mov
ljmp
push
ljmp
pop
incl
pushf
adc
add
movsb
sbb
or
adc
add
or
add
testl
inc
add
add
add
add
add
add
pop
add
add
add
xor
add
and
add
adc
add
add
add
or
add
cmp
push
push
mov
sub
ljmp
cs
incl
sbb
push
lahf
push
decl
test
push
call
mov
cmp
sub
dec
incl
cwtl
adc
adc
lock
jmp
enter
aam
ljmp
int
cmpsl
lcall
lcall
add
adc
add
decl
mov
adc
add
jno
incl
fs
add
loope
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
dec
adc
ja
es
scas
ljmp
push
mov
call
cs
push
test
decl
mov
call
mov
aaa
ljmp
int3
inc
pushl
aad
aas
fbld
adc
sub
or
fwait
outsl
ljmp
pushf
inc
test
in
push
jecxz
push
in
ljmp
jnp
outsb
incl
lcall
mov
incl
xchg
push
incl
lcall
pop
cltd
adc
push
mov
incl
or
add
std
add
lock
mov
add
dec
add
add
add
add
add
adc
add
sub
sub
ljmp
push
mov
ljmp
dec
mov
decl
xchg
das
lcall
xor
es
xor
push
cmp
pop
incl
outsb
lcall
xchg
das
ret
add
call
js
incl
incl
data16
call
mov
mov
mov
fcmovb
ljmp
cli
hlt
cmc
out
jmp
jecxz
mov
movsb
gs
cmp
adc
incl
xchg
or
add
or
flds
add
cmp
add
push
add
add
add
add
add
add
dec
mov
ljmp
push
mov
ljmp
dec
mov
lcall
xlat
dec
cmp
pop
incl
imul
pop
hlt
mov
dec
in
jns
sub
push
call
shrb
or
cltd
adc
add
add
call
das
call
popf
outsl
push
lods
mov
mov
mov
call
jmp
xlat
push
in
std
sti
push
div
jmp
out
lcall
mov
cmp
add
cmc
add
mov
add
adc
add
add
add
add
add
pop
add
add
pop
add
inc
add
add
decl
dec
ljmp
inc
mov
ljmp
push
mov
ljmp
dec
mov
ljmp
decl
lcall
mov
push
hlt
test
xor
pop
ljmp
mov
aas
mov
jmp
lret
adc
call
mov
sbb
incl
jl
incl
jne
jmp
ja
jmp
lcall
movsl
jg
mov
mov
mov
push
jmp
ffreep
mov
js
add
and
add
add
add
add
add
add
add
add
add
incl
fwait
or
or
inc
mov
ljmp
mov
ljmp
push
sar
xor
call
test
push
cmc
mov
cmp
int3
dec
jmp
and
mov
inc
sbb
mov
dec
pop
jl
sbb
pop
andb
xor
sub
call
xor
movnti
decl
mov
incl
fwait
adc
add
add
or
jp
pushl
inc
ljmp
lods
mov
mov
mov
fxch
call
sahf
out
or
insb
add
add
add
add
add
add
add
pop
add
mov
add
or
add
mov
adc
adc
ljmp
inc
mov
jmp
xchg
jmp
aas
stos
call
xor
decl
jle
xor
pop
call
xor
xchg
dec
adc
mov
cmp
call
pop
cmp
fsubrl
fsubl
fcoms
dec
inc
and
mov
sbb
xchg
dec
adc
jb
sbb
dec
nop
and
sub
das
decl
mov
sbb
add
add
add
call
ud0
sub
mov
mov
add
add
add
add
and
add
or
popa
add
add
incl
popf
adc
or
and
sbb
sub
sbb
jmp
stos
lcall
sub
lods
lcall
das
xchg
call
xor
decl
inc
decl
das
or
ret
cmp
call
push
das
call
data16
inc
dec
and
inc
dec
and
rcrl
fcomps
fcomps
call
dec
sub
mov
inc
adc
mov
jmp
sbb
cmp
mov
call
shrb
or
sub
pop
mov
incl
pushf
adc
add
add
add
jmp
jb
pushl
dec
testb
or
add
add
add
adc
add
test
decl
sbb
jmp
lds
ljmp
popa
call
xor
jmp
in
jmp
mov
call
mov
addr16
das
ljmp
xor
dec
inc
and
aam
sub
ficompl
fisubs
call
inc
mov
scas
fcompl
inc
mov
dec
and
dec
and
rcll
aam
xor
rcll
dec
inc
and
mov
inc
ud0
jnp
pushl
mov
and
incl
test
push
incl
jge
incl
jb
incl
pop
add
add
add
add
push
add
ret
or
lcall
lret
xor
push
ljmp
xchg
pop
call
push
lods
jmp
in
jmp
mov
jmp
jl
lcall
jnp
call
inc
cmpsl
decl
sbb
popf
sub
into
inc
sbb
rorl
fsts
frstor
jmp
jno
jmp
jge
call
push
and
clc
shlb
jmp
lret
fnstcw
call
mov
gs
inc
dec
sub
rolb
dec
and
rclb
call
push
sub
int
and
sarb
mov
ud0
pusha
adc
dec
test
ljmp
movsb
push
call
mov
push
incl
lea
incl
pop
add
add
add
add
adc
jnp
in
mov
inc
ljmp
rorl
cmp
pop
incl
imul
jle
lcall
imul
and
lcall
jo
lcall
insb
int
push
inc
stos
decl
das
xor
frstor
jmp
insl
dec
jmp
jp
call
xchg
insl
fldcw
mov
scas
mov
dec
test
fadd
ljmp
in
fcos
neg
jmp
mov
dec
test
ret
mov
inc
pop
dec
inc
and
int
and
inc
cmp
mov
xor
decl
pop
or
das
dec
add
or
add
add
add
jp
fisubrs
int
pushl
fstps
inc
loope
decl
lcall
incl
cmp
push
mov
lcall
push
call
gs
call
sub
lcall
jp
ljmp
cmp
out
pop
ljmp
push
stos
xchg
loope
pop
mov
imul
mull
inc
movsl
dec
mov
fcmovb
jmp
aam
push
out
push
ljmp
xlat
fildll
pop
inc
pop
cmp
mov
inc
sbb
enter
lret
inc
aas
sbb
mov
xor
incl
add
dec
add
add
cmp
popa
decl
jae
push
lock
stc
lcall
xchg
decl
jne
pop
inc
mov
call
pop
sar
inc
mov
adc
stos
decl
or
add
clc
incl
in
pushl
mov
out
xchg
in
cwtl
jb
icebp
movsl
jg
divb
sahf
ljmp
inc
dec
and
mov
dec
and
lds
fdivrs
in
xchg
jbe
sti
lods
mov
mov
call
ret
jecxz
push
jmp
cli
cld
hlt
in
in
into
sar
movsb
nop
dec
jne
mov
cmp
dec
inc
pop
mov
sub
int
add
sub
add
or
push
pop
std
xchg
lcall
lcall
jl
dec
call
xor
call
lods
decl
pusha
mov
incl
incl
ljmp
cmp
push
popf
je
cmc
mov
cli
rcrb
repz
arpl
ljmp
in
jb
jmp
imul
pop
ss
push
sub
mov
inc
sbb
mov
bound
push
sahf
jg
std
mov
inc
lods
call
mov
out
in
cld
push
in
call
fcoml
add
dec
add
add
add
add
add
imul
lcall
lcall
sub
or
decl
push
mov
incl
incl
fdivr
decl
xchg
incl
iret
sti
incl
ret
cmp
mov
xchg
cld
cmpsb
ja
fnstsw
decl
aaa
jl
insb
cmp
cltd
dec
gs
pop
push
jmp
insb
inc
jmp
imul
dec
push
sub
mov
cmp
pushl
dec
es
jno
jmp
outsl
push
test
mov
mov
fcmove
jmp
sti
clc
jmp
shll
add
add
add
add
add
add
sbb
add
sub
mov
mov
ud0
ss
call
jg
or
incl
icebp
incl
xchg
fdivrp
sbb
mov
sbb
sti
incl
mov
cmp
mov
jmp
jmp
and
incl
sbb
incl
push
iret
incl
sbb
pushl
jb
mov
pop
dec
jmp
imul
loop
aaa
call
push
cs
dec
and
mov
adc
mov
ud0
pop
xor
fnstcw
jmp
scas
xchg
inc
lods
call
ret
fnstsw
or
add
add
add
add
add
and
or
mov
inc
sbb
movl
incl
incl
sti
incl
mov
call
dec
mov
ljmp
dec
mov
push
inc
mov
add
cmp
inc
push
decl
decl
adc
incl
sub
incl
daa
adc
sar
adc
cmp
decl
and
decl
sbb
decl
cmp
stos
dec
push
call
pop
inc
jmp
gs
out
xor
dec
dec
and
ljmp
cmp
pushl
popa
ds
fiadds
mov
adc
push
mov
add
data16
add
pushf
sub
push
call
dec
daa
jmp
pop
pushl
scas
call
incl
call
ljmp
inc
mov
sub
push
mov
incl
mov
call
mov
incl
sbb
incl
jecxz
add
cli
decl
inc
decl
daa
lcall
sbb
test
xor
mov
pop
sub
loopne
out
decl
xor
decl
sub
incl
ret
call
pop
lods
ljmp
xchg
lcall
jns
mov
arpl
mov
dec
fstps
jmp
pop
xor
loop
sub
inc
inc
sbb
mov
or
test
inc
sbb
xchg
sub
out
push
push
add
add
add
movsb
xor
mov
fstpl
call
push
pop
incl
mov
incl
gs
sub
scas
ljmp
mov
ljmp
push
mov
incl
xchg
cli
incl
fwait
decl
pop
incl
xor
decl
cmp
lcall
dec
ljmp
push
decl
daa
xlat
lcall
and
push
sarb
mov
ja
call
mov
and
mov
decl
sub
ljmp
and
decl
sbb
pushl
push
mov
gs
jb
xchg
inc
pop
inc
push
inc
fcompl
jmp
pop
sub
fistl
dec
inc
sbb
call
add
dec
add
add
test
or
frstor
jmp
jne
out
xchg
mov
xchg
out
add
incl
je
ljmp
cmp
mov
ljmp
mov
sbb
mov
add
decl
inc
int
or
cli
call
inc
jmp
push
cmp
incl
decl
lcall
and
fistpll
out
int3
jmp
lret
jmp
enter
pushf
mov
incl
lcall
ret
and
incl
sub
decl
sub
fcos
add
push
scas
lcall
and
jmp
dec
xor
mov
push
stc
jno
add
add
add
mov
sbb
in
pop
jmp
pushf
jo
ret
jp
incl
mov
incl
lret
decl
xchg
fdivrp
sub
mov
call
ds
incl
incl
mov
call
inc
int
and
xor
inc
imul
jmp
lcall
cmp
lcall
sbb
jmp
fwait
xchg
mov
pushf
dec
lods
fidivrl
push
fdivr
push
jmp
call
ret
movsl
xchg
ret
addr16
call
and
add
in
add
and
incl
pop
mov
jmp
adc
out
and
movsb
add
add
add
push
stos
cmp
lret
ljmp
std
mov
dec
lea
incl
mov
fdivr
and
movsl
lcall
cmp
incl
nop
incl
sar
sbb
ljmp
push
idiv
aas
addr16
decl
lcall
ljmp
decl
pop
in
pop
adc
pushl
pushl
xchg
mov
stc
lods
inc
cltd
dec
test
call
mov
push
call
push
out
dec
mov
call
mov
daa
xor
incl
pop
lret
and
incl
and
incl
and
decl
sbb
fiaddl
add
inc
add
add
stos
cmp
mov
clc
mov
fwait
dec
pushf
cltd
incl
js
incl
lods
jmp
loop
or
incl
mov
incl
mov
call
dec
mov
pushl
dec
dec
jae
lcall
ljmp
jge
call
mov
stc
call
lock
xor
incl
push
lret
push
mov
sbb
movsb
incl
cltd
incl
mov
in
cld
mov
mov
out
loopne
std
lock
push
push
jmp
mov
inc
mov
decl
mov
mov
add
add
in
jae
fsubrs
test
xchg
incl
outsb
in
add
incl
xchg
decl
js
lcall
inc
sar
pop
jmp
jl
call
cmp
incl
push
xchg
decl
cmpsl
jmp
pushl
pop
ljmp
push
ljmp
push
jmp
lcall
cmp
decl
sub
incl
sbb
decl
adc
push
aas
xchg
call
mov
inc
sahf
dec
lods
fcmovnb
jmp
out
std
fnstcw
inc
mov
add
and
add
add
lahf
sub
inc
lds
iret
cwtl
mov
jno
lahf
call
or
incl
jecxz
add
jmp
pop
sar
daa
dec
mov
ljmp
nop
ljmp
cmp
decl
test
decl
pushl
pop
pushl
pop
pushl
pop
ljmp
push
ljmp
push
jmp
push
lcall
inc
hlt
decl
xor
decl
and
incl
adc
call
adc
dec
xchg
jmp
xchg
xchg
cld
mov
inc
cmpsl
call
mov
push
in
fnstsw
or
add
add
add
add
add
or
adc
push
mov
add
iret
decl
inc
lret
call
fs
and
lods
jmp
fs
mov
ljmp
xchg
ljmp
xchg
in
call
cmp
jns
fdivr
mov
incl
aas
data16
aas
gs
cmp
cmp
pushl
pop
pushl
pop
ljmp
pop
ljmp
push
jmp
push
jmp
jmp
dec
lcall
dec
call
inc
cli
call
cmp
decl
sub
incl
sbb
lcall
sbb
js
xchg
ljmp
mov
mov
call
add
add
add
sbb
add
pop
push
jl
incl
das
repz
cmp
lcall
cmp
ljmp
inc
in
lcall
cmp
ljmp
xchg
out
ljmp
xchg
in
ljmp
cwtl
lock
cltd
repnz
inc
cmpsl
ljmp
xor
incl
jmp
dec
outsb
decl
incl
incl
ds
cmp
cmp
pushl
pop
ljmp
pop
ljmp
push
ljmp
push
jmp
push
jmp
dec
lcall
dec
lcall
lcall
dec
call
inc
call
inc
call
cmp
out
pop
pop
lret
incl
or
fwait
call
xchg
jmp
adc
mov
add
jnp
add
inc
add
add
adc
daa
add
inc
jmp
pushl
insl
ljmp
fdivrp
sub
lock
cwtl
lock
cwtl
lock
xchg
call
push
mov
decl
sub
jmp
ss
cmp
incl
repz
incl
aas
push
cmp
pushl
ljmp
pop
ljmp
push
ljmp
push
jmp
dec
lcall
dec
lcall
dec
lcall
inc
call
inc
decl
inc
decl
std
decl
xor
add
bts
adc
lahf
call
push
ja
add
add
add
push
adc
ret
adc
pushl
pop
incl
call
jmp
pushl
push
mov
ljmp
fwait
repz
xchg
out
ljmp
xchg
in
ljmp
xchg
jmp
sub
in
ljmp
mov
jmp
sbb
call
dec
test
decl
and
lcall
sub
mov
aas
cli
incl
cmp
pushl
ljmp
push
jmp
push
jmp
jmp
dec
lcall
dec
lcall
dec
call
inc
call
inc
decl
aas
decl
ds
incl
cmp
decl
lret
call
mov
add
add
add
or
sbb
decl
lcall
ljmp
incl
mov
jmp
lcall
sub
jmp
ljmp
mov
ljmp
xchg
ljmp
test
ljmp
xchg
ljmp
test
ljmp
jge
jmp
outsl
sar
pop
push
mov
adc
call
es
lcall
inc
push
call
cmp
pushl
pop
ljmp
push
jmp
push
jmp
dec
jmp
dec
lcall
inc
call
inc
call
call
inc
decl
cmp
call
and
les
or
add
add
add
sbb
lods
in
imul
pop
jnp
ljmp
jns
decl
scas
jp
ljmp
dec
lods
lcall
pop
mov
push
je
jmp
sub
out
sub
fdivrp
sub
ljmp
jnp
ljmp
jp
ljmp
js
ljmp
sub
ljmp
outsl
sar
pop
pop
sar
dec
stos
decl
xor
call
sub
ljmp
inc
sar
xor
pushl
pop
std
pushl
pop
ljmp
push
jmp
push
jmp
dec
lcall
dec
lcall
inc
stc
call
adc
fcoml
or
arpl
add
sldt
add
sbb
sahf
ret
sti
pushl
incl
stos
call
mov
incl
repz
xlat
decl
sar
dec
mov
and
lcall
pop
mov
jmp
jl
ljmp
jle
ljmp
jnp
ljmp
ja
ljmp
jae
ljmp
jno
ljmp
outsl
sar
sub
ljmp
outsb
sar
sub
sar
sub
jmp
popa
lcall
cmp
decl
sub
jmp
inc
fdivrp
sub
idiv
sub
push
jmp
cmp
call
sbb
mov
add
add
sbb
lcall
lods
lcall
stos
decl
mov
incl
mov
jmp
push
pop
xlat
jmp
ljmp
insb
aam
ds
mov
es
cmpsb
lcall
dec
stos
lcall
addr16
aam
sub
ljmp
outsl
sar
sub
ljmp
addr16
ljmp
gs
ljmp
fs
arpl
ljmp
lret
leave
ljmp
pop
jmp
inc
lods
call
xor
decl
and
lcall
vunpckhps
mov
jmp
add
pop
add
add
add
add
adc
xchg
jae
outsb
ljmp
mov
lcall
test
decl
mov
js
bnd
cmp
mov
call
jmp
ljmp
pop
pushl
dec
scas
jmp
aas
mov
lcall
push
mov
es
vcvtsi2sdl
ljmp
int
sub
ljmp
pop
ljmp
pop
vcvtsi2sdl
ljmp
pop
ret
pop
ret
pop
ret
ljmp
ret
push
sar
dec
mov
sbb
movsb
call
xor
incl
add
and
adc
xchg
sbb
push
lahf
mov
pop
arpl
jnp
out
xchg
movsb
idiv
lahf
mov
lcall
lods
decl
movsl
decl
mov
idiv
pusha
jno
incl
pushl
ds
incl
iret
call
in
pop
jae
call
fdivr
inc
push
sar
inc
stos
jmp
cmp
lcall
cmpsb
jmp
dec
mov
sub
ljmp
vcvtsd2si
ljmp
sar
push
sar
push
mov
ljmp
push
mov
ljmp
xor
std
or
mov
add
add
add
add
adc
lcall
or
popf
and
movsb
rolb
mov
jl
jmp
xchg
cmpsl
std
call
lods
decl
mov
incl
cltd
ljmp
icebp
call
fdivr
cmp
ret
pushl
inc
incl
sar
push
push
call
out
dec
pop
sar
xor
mov
and
sahf
lcall
cmp
ljmp
push
mov
ljmp
push
sar
push
mov
decl
adc
fadds
inc
pop
add
add
adc
cltd
push
ud2
daa
push
or
scas
sub
faddl
sar
jb
incl
cmpsb
decl
cmpsb
incl
popf
incl
pushf
pushl
sti
jmp
in
decl
sar
xor
insb
out
outsl
nop
ljmp
lcall
stc
call
out
inc
pop
into
lcall
sub
sti
push
ss
std
and
call
push
jge
add
add
sbb
add
add
add
add
or
nop
cs
xchg
jns
sbb
out
push
enter
jecxz
jle
idiv
mov
incl
jl
jnp
pushl
pushl
ljmp
ljmp
ljmp
jmp
sti
cmp
lcall
pop
cwtl
int
pop
pusha
push
add
push
inc
pop
add
inc
sbb
add
add
adc
adc
or
mov
push
lahf
ret
xor
mov
dec
pop
iret
ljmp
jmp
incl
sahf
jnp
pushl
pushl
ljmp
std
incl
lcall
sahf
call
add
adc
add
add
add
add
setp
adc
xchg
pop
push
adc
sarb
ds
ljmp
js
cld
lcall
in
sub
jg
or
dec
add
add
add
add
adc
cltd
add
or
insl
sbb
lcall
adc
xor
add
or
add
add
add
add
jmp
ud0
add
incl
add
incl
add
incl
add
lock
add
add
inc
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
incl
add
addb
pop
incl
add
clc
add
incl
add
incl
add
incl
add
push
pop
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
aas
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
add
adc
pop
xchg
adc
incb
push
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
pop
add
add
add
xor
add
lock
or
incl
lea
cmp
incl
xchg
adc
incl
xchg
adc
add
pop
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
outsl
nopl
sbb
cmpsb
incl
dec
inc
incl
or
push
mov
and
sbb
xor
push
mov
ljmp
fnstcw
decl
mov
xor
adc
adc
add
or
add
loop
cmp
mov
add
add
add
push
add
add
add
add
add
or
mov
aaa
fwait
out
sub
and
pop
arpl
or
sub
and
xlat
push
decl
pop
lcall
mov
mov
fadd
push
loop
call
fidivrl
pushl
imul
or
or
add
testl
dec
add
add
add
add
and
add
push
add
push
add
sbbl
push
mov
call
je
jmp
cmp
incl
call
cmp
mov
decl
mov
cmp
cmp
call
test
cmpsb
call
ret
ljmp
out
ljmp
mov
cmp
fwait
pop
decl
mov
std
add
add
add
add
add
add
adc
inc
add
test
arpl
icebp
pop
inc
xchg
ljmp
push
mov
jmp
inc
scas
lcall
jg
loop,pt
decl
jns
dec
lock
ss
pushl
mov
lcall
mov
sub
or
pop
jmp
subb
mov
cmp
call
enter
cld
cmc
icebp
jmp
shll
mov
add
add
add
add
add
or
pop
mov
jmp
dec
cltd
ljmp
dec
mov
lcall
inc
stos
pushl
mov
testl
lcall
dec
es
mov
bound
ljmp
and
mov
sub
push
scas
and
add
or
sbb
xor
xchg
xchg
push
dec
test
jmp
mov
mov
cwtl
add
add
add
add
add
mov
jle
clc
add
adc
or
xor
and
lcall
push
mov
push
xor
call
dec
incl
cmp
int
and
rcrb
inc
push
sub
int3
dec
sub
int
sub
mov
push
push
pushl
sbb
dec
xchg
decl
and
add
adc
sbb
and
js
dec
cli
cmp
roll
add
add
push
add
int3
or
sub
and
cmp
and
pop
call
push
mov
jmp
mov
decl
xor
call
mov
inc
and
fcomps
fisubrs
dec
pop
xor
fistl
mov
roll
dec
pop
xor
into
dec
sub
lret
inc
and
mov
dec
push
pushl
sbb
dec
mov
and
push
call
stos
sbb
add
or
add
add
mov
out
shll
sub
dec
cmp
pop
jmp
fdivr
push
jp
lcall
jae
decl
cwtl
ljmp
inc
fistl
fsubl
jmp
jne
call
pop
ss
xchg
jno
fdivrs
push
xlat
sar
lods
fbld
pop
inc
push
cs
inc
sbb
movb
mov
dec
adc
xchg
push
jae
ljmp
imul
add
add
adc
and
cmp
pop
decl
je
pop
cld
mov
xor
leave
call
call
push
mov
or
jnp
ljmp
push
mov
call
jae
inc
push
sub
call
scas
xchg
std
lods
in
fdivr
std
in
in
rol
fstps
pop
dec
pop
aaa
inc
dec
es
cmp
lcall
add
sbb
jle
pop
sti
xchg
ljmp
jae
pop
push
push
call
inc
mov
or
incl
fdivrp
pushl
fwait
push
mov
nop
clc
stos
jle
jmp
data16
rcrl
inc
push
sub
ret
dec
inc
fisttps
mov
dec
mov
fmulp
out
jecxz
sti
bnd
lock
jmp
ret
fcoms
and
inc
adc
push
add
add
adc
jle
mov
pushl
aaa
dec
decl
outsl
mov
incl
xchg
incl
jl
test
cld
mov
dec
jnp
pushl
jns
inc
sub
lcall
mov
xchg
dec
addr16
mov
popa
inc
call
pop
xor
leave
dec
and
mov
dec
sub
into
push
jmp
mov
out
test
mov
jmp
fcos
mul
notl
cmp
add
add
add
lcall
jg
pop
call
mov
hlt
call
outsl
leave
jmp
inc
mov
adc
incl
mov
pushl
fwait
jmp
and
incl
aad
or
adc
jmp
sub
pushl
jb
lods
dec
push
dec
pop
aas
fistpl
call
push
and
rolb
mov
pop
xor
shll
jmp
test
clc
dec
inc
xor
inc
add
add
stos
xor
mov
aad
cmp
incl
iret
clc
call
inc
mov
ljmp
pop
lret
mov
mov
add
enter
bnd
inc
decl
pop
stos
jmp
mov
lcall
or
fdivr
add
lret
call
push
mov
inc
sub
ljmp
push
aas
dec
dec
sub
movb
mov
ss
clc
inc
adc
cltd
add
add
mov
sbb
fisubrs
fidivs
cmp
mov
lcall
push
mov
call
push
enter
decl
aaa
aad
or
clc
jmp
dec
cmp
decl
and
ljmp
fstpt
mov
jle
incl
lcall
cs
and
incl
and
lcall
and
lcall
je
mov
pop
mov
aas
push
cld
push
sbb
cltd
add
add
ret
in
jmp
xchg
jp
aas
add
add
mov
call
push
leave
incl
jle
incl
jbe
jmp
dec
in
xor
jne
ljmp
jmp
xor
jns
xchg
ficompl
pushf
call
mov
jmp
in
sar
out
pushl
jle
incl
int3
jmp
cmp
decl
and
leave
decl
push
mov
and
testl
add
and
repz
xchg
incl
lret
test
call
push
incl
ljmp
push
ret
jmp
ds
insb
lcall
jp
decl
push
ljmp
cs
push
cmp
decl
nop
xchg
push
mov
mov
jmp
lret
in
ljmp
lcall
into
jmp
and
decl
or
add
add
mov
sbb
std
mov
pushf
jmp
arpl
incl
xchg
decl
test
lcall
popa
aad
and
lret
lcall
push
cmp
js
incl
mov
cmp
ljmp
push
jmp
push
lcall
inc
idiv
push
das
fdivrp
or
leave
jmp
mov
push
inc
lahf
call
mov
cld
sarl
push
lock
ljmp
add
add
add
add
dec
sbb
pop
pop
xor
mov
pop
ds
call
addr16
and
ljmp
jl
ljmp
je
call
incl
jge
ds
cmp
pushl
pop
ljmp
push
ljmp
push
jmp
dec
lcall
dec
cld
call
xor
call
sub
lcall
and
sahf
pushl
xchg
pushl
scas
cmpsl
clc
int
testl
add
add
or
adc
decl
cmp
lcall
idiv
cs
fdivrp
and
ljmp
xchg
out
ljmp
xchg
out
jmp
sbb
sbb
ljmp
inc
sar
push
aad
inc
pop
call
aas
data16
cmp
pushl
pop
pushl
pop
ljmp
jmp
dec
lcall
dec
lcall
dec
call
idiv
or
call
sbb
cld
xor
jne
add
sbb
add
add
sbb
cli
ljmp
push
incl
decl
jmp
ljmp
lcall
daa
xchg
jmp
and
lcall
push
mov
lcall
inc
push
loope
cmp
arpl
pushl
ljmp
pop
ljmp
push
jmp
dec
lcall
dec
call
inc
call
inc
decl
cmp
incl
sub
int
or
pop
lahf
add
add
and
ljmp
pushl
jnp
in
pushl
gs
sbb
jmp
mov
ljmp
mov
ljmp
test
ljmp
and
sub
aad
sbb
call
inc
cmpsl
call
mov
ljmp
inc
into
ljmp
push
loopne
xor
ljmp
pop
ljmp
push
jmp
push
lcall
dec
lcall
call
inc
call
ds
call
es
out
vmread
add
add
cmp
incl
cmpsb
decl
xchg
call
aad
ds
ljmp
pop
mov
jmp
jbe
ljmp
jge
ljmp
jp
ljmp
jne
ljmp
jae
ljmp
outsl
sar
es
jmp
pop
mov
call
cmp
lcall
xor
sub
ljmp
push
jmp
lcall
aaa
adc
mov
inc
add
or
add
add
xor
clc
lcall
decl
incl
push
fcos
push
popa
sar
inc
push
sar
push
mov
jmp
pop
sar
popa
jmp
lretw
lretw
ljmp
fs
popa
enter
ljmp
pop
ret
jmp
push
mov
sbb
mov
call
xor
incl
add
add
sbb
pop
jmp
mov
call
mov
call
mov
hlt
ljmp
in
pop
imul
incl
incl
int
dec
pusha
sar
cmp
ret
dec
mov
and
jmp
push
mov
sub
sub
sub
ljmp
push
sar
push
mov
jmp
inc
lods
decl
sbb
es
add
add
or
fs
add
inc
adc
aaa
mov
push
pop
leave
fdivl
clc
adcb
decl
mov
clc
lcall
loope
dec
pop
sar
inc
push
sar
inc
push
fdivr
push
insl
in
dec
popa
sar
xor
ljmp
inc
mov
and
es
mov
daa
dec
mov
sbb
xchg
loope
pop
inc
jns
add
add
sub
das
sbb
pushf
pop
es
test
inc
dec
rcr
addr16
jp
repnz
mov
pushl
cmc
jmp
ljmp
mov
jmp
cld
incl
fdivr
adc
adc
or
insb
addb
sub
add
add
add
add
add
pop
add
jne
and
movsl
sahf
aas
inc
rcl
addr16
insl
sub
jbe
idiv
jne
cld
jmp
jmp
daa
sub
int3
or
pop
imul
add
add
das
add
add
ds
push
mov
mov
sbb
sub
add
add
add
add
lock
loopne
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
sldt
add
addb
aas
lock
jg
add
jmp
ud0
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
imul
popa
add
add
incl
outsb
add
incl
outsb
add
decl
cmp
or
pushf
incl
outsb
add
incl
outsb
add
incl
outsb
add
lret
add
outsb
add
call
mov
call
mov
call
mov
call
mov
decl
cmp
decl
cmp
decl
cmp
call
mov
call
mov
call
mov
call
mov
call
movsb
and
add
incl
add
jae
outsb
add
pushl
ficoml
xor
push
pushl
ficoml
xor
push
decl
inc
stos
decl
ficoml
xor
push
pushl
ficoml
xor
push
jmp
outsb
add
jae
outsb
add
call
xchg
call
xchg
call
xchg
call
xchg
call
dec
mov
adc
call
dec
mov
push
call
call
xchg
call
xchg
cmp
jae
add
incl
add
imul
movsl
pop
jg
pusha
jg
pusha
jg
pusha
jg
pusha
call
push
mov
adc
call
push
mov
jg
pusha
jg
pusha
jg
pusha
jg
pusha
pushl
pop
incl
outsb
add
pusha
xchg
sub
xchg
stos
xor
ljmp
xor
ljmp
xor
decl
push
lret
decl
push
or
stos
xor
ljmp
xor
ljmp
and
imul
sbbb
push
push
js
jmp
jnp
jmp
pushf
jmp
pushf
jmp
pushf
jmp
jnp
push
js
jmp
jnp
ljmp
jmp
add
jae
xor
jmp
mov
repz
ja
cld
pushf
insl
out
popf
ja
ss
call
pushl
scas
out
popf
ja
cld
pushf
insl
out
popf
ja
repz
arpl
stos
xor
incl
add
imul
cmpsl
call
popf
call
xchg
call
popf
decl
call
decl
call
popf
call
xchg
call
popf
fisubl
ljmp
add
andl
call
adc
push
adc
push
xlat
call
adc
push
adc
push
adc
add
add
adc
and
jmp
aas
jmp
aas
jmp
aas
aas
stos
out
inc
test
aas
stos
out
and
jmp
aas
jmp
aas
jmp
aas
jmp
aas
call
adc
push
adc
insl
xchg
ljmp
ljmp
ljmp
jmp
jg
jmp
jg
jmp
jg
ljmp
ljmp
ljmp
ljmp
call
repz
adc
push
adc
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
lcall
mov
jmp
xchg
out
call
adc
push
adc
cltd
lods
in
call
ljmp
xchg
out
jmp
xchg
out
jmp
xchg
out
call
ljmp
lods
in
incl
adc
push
adc
call
adc
push
adc
daa
xchg
out
jmp
xchg
out
jmp
xchg
out
call
adc
push
adc
push
adc
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
insb
or
add
push
add
ja
add
push
add
sbb
adc
adc
and
pop
add
add
push
add
jae
add
jp
add
outsb
cmp
cmp
add
sbb
fs
or
pop
jnp
add
pop
add
das
add
sub
arpl
add
sbb
xor
jb
aaa
aas
add
jbe
xor
jbe
outsb
ss
or
pop
popa
add
push
jne
inc
outsl
inc
add
dec
add
pop
add
jge
push
imul
jbe
je
pushf
xor
add
xor
add
cmp
lea
add
sub
mov
inc
sbb
into
push
sub
jecxz
cs
bound
add
cmp
mov
arpl
nop
push
push
add
bound
xchg
dec
push
add
pop
dec
add
insl
dec
add
jb
add
jb
add
xchg
add
xchg
or
add
mov
add
cmpsb
sbb
or
add
test
add
xchg
das
add
cwtl
and
cmp
and
adc
sub
or
daa
add
mov
sub
dec
test
add
add
add
sub
adc
lds
and
cmp
xor
inc
add
mov
add
test
pop
test
inc
xchg
dec
add
dec
add
push
add
push
add
dec
add
push
add
push
add
push
add
add
add
jns
jg
jg
push
scas
imul
movsb
add
outsb
add
jbe
sub
inc
add
int3
dec
add
aad
add
loop
add
jmp
add
add
jb
dec
jmp
push
add
jg
mov
test
test
outsl
add
fwait
outsl
add
mov
fcoml
insl
add
movsl
jg
cmc
movsl
jnp
adc
xchg
add
sbb
add
xor
add
xor
add
cs
add
scas
add
xor
add
aaa
scas
add
popl
pop
dec
mov
and
stos
add
inc
stos
add
pop
cmpsb
add
dec
mov
add
push
mov
add
pusha
mov
add
addl
push
popl
jb
nop
add
mov
outsb
imul
or
roll
sub
les
or
add
push
movb
inc
lds
cmp
add
pop
ret
push
iret
add
inc
fadds
xor
and
add
push
flds
sbb
add
outsl
rolb
sbb
add
push
std
add
jb
add
arpl
add
int3
add
xlat
add
iret
add
in
dec
outsl
clc
add
jmp
add
js
add
jle
add
addb
movb
or
faddl
add
jmp
add
faddl
jae
sti
add
sar
add
icebp
incb
mov
xchg
add
pushf
mov
add
xchg
nop
add
pushf
mov
fsubrl
add
stos
mov
cli
mov
add
mov
xchg
add
mov
add
mov
add
mov
mov
add
ret
sti
ret
leave
int3
stos
add
enter
les
add
aam
add
lret
sti
aam
add
xchg
ret
pushf
std
add
mov
add
ret
out
ret
fcmovb
add
add
loope
add
out
add
in
add
call
fildl
jmp
jmp
add
cmc
jmp
add
or
or
add
arpl
add
inc
inc
add
or
push
add
inc
inc
dec
dec
dec
inc
inc
add
and
add
add
inc
inc
inc
inc
add
inc
inc
dec
dec
dec
inc
inc
add
and
add
sbb
inc
inc
push
push
inc
add
clc
out
dec
inc
inc
inc
dec
inc
inc
add
or
add
mov
add
pop
jno
add
jmp
clc
cli
cmc
in
bound
inc
inc
inc
inc
inc
add
and
lea
dec
inc
pop
push
jno
ja
add
sti
std
mul
outsl
dec
inc
inc
inc
inc
inc
inc
add
add
add
sahf
nop
dec
pop
jno
ja
jb
add
ljmp
loop
dec
inc
inc
inc
inc
inc
or
add
add
add
add
lods
sahf
sahf
sahf
sahf
mov
jnp
jnp
pop
dec
inc
inc
add
adc
sbb
ljmp
stc
loope
dec
add
add
add
add
add
sahf
mov
jnp
jne
dec
push
pop
pop
push
pop
dec
inc
add
pop
push
jl
fsubr
jmp
std
jmp
add
add
add
insb
or
inc
inc
sbb
sahf
nop
pop
mov
xor
adc
dec
inc
add
add
idiv
out
add
add
pop
add
inc
inc
sbb
cltd
mov
jne
sub
xor
xor
sub
push
push
inc
inc
add
add
add
add
add
inc
push
pop
pop
xchg
lea
push
xor
xor
xor
xor
xor
sub
push
inc
inc
inc
add
pop
and
add
push
pop
pop
jae
xchg
mov
lret
xchg
mov
sub
xor
xor
cmp
xor
xor
sub
push
inc
inc
add
or
add
push
push
jno
pop
cwtl
lret
lret
leave
mov
push
sub
xor
xor
ljmp
xor
xor
xor
sub
sub
push
dec
push
push
inc
or
add
jno
jne
and
push
sub
xor
ds
call
sti
cmc
fldl
xor
xor
sub
add
jne
jnp
lds
xchg
mov
aas
addb
xchg
cli
jmp
xorl
sub
das
add
popa
ja
mov
mov
rcrb
xchg
xor
xor
addb
hlt
mov
sub
sub
add
outsb
jns
mov
xchg
mov
lcall
aas
aas
xor
xor
mov
call
hlt
xchg
add
add
pop
jp
sub
pop
stos
int3
ror
enter
mov
cmp
cmp
xor
sub
xor
xchg
loopne
cmc
std
jmp
add
add
add
cs
sbb
rcl
enter
iret
lahf
fiaddl
test
xchg
xchg
sbb
cmp
xor
sub
xor
fldl
add
add
sub
xor
cltd
lcall
xchg
cmpsl
stos
test
stos
stos
stos
cmpsl
xchg
mov
xor
sub
cmp
add
subl
enter
sahf
xchg
int3
lret
cmpsl
stos
stos
stos
stos
xchg
mov
stos
test
xchg
mov
cmp
xor
xor
sub
sub
add
cmp
xor
cmp
sarb
pushf
lret
test
stos
mov
test
jmp
aam
movsl
test
test
xchg
xchg
sbb
cmp
cs
add
cmp
addb
mov
xchg
lret
stos
mov
mov
cmc
clc
clc
clc
hlt
shll
test
cmpsl
xchg
mov
sbb
xor
aaa
add
xor
iret
enter
cwtl
mov
mov
mov
jmp
cli
repz
cmpsb
test
cmpsl
cmpsl
mov
cmp
iret
lret
xchg
xchg
mov
mov
mov
xchg
xchg
rol
call
std
icebp
in
movsl
test
cmpsl
test
cmpsl
xchg
add
cmp
int3
lret
stos
lret
lods
nop
mov
mov
mov
mov
call
cld
icebp
les
add
mov
lods
scas
leave
xchg
mov
into
mov
mov
mov
mov
cmpsl
xchg
mov
ljmp
ffreep
add
add
xor
movsb
mov
mov
lret
xchg
mov
mov
mov
mov
mov
stos
test
xchg
mov
jmp
out
add
add
mov
mov
lret
lret
lret
cwtl
int
into
mov
mov
mov
mov
mov
mov
cmpsl
xchg
mov
jecxz
add
add
xchg
test
stos
mov
xchg
leave
lret
lret
lret
lret
cwtl
xchg
scas
mov
mov
mov
mov
mov
mov
mov
stos
stos
test
xchg
mov
add
mov
lret
lret
lret
lret
stos
xchg
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
test
xchg
xchg
xchg
add
movsl
stos
mov
mov
lret
lret
lret
lret
lret
lret
lret
leave
mov
xchg
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
test
add
xchg
mov
mov
mov
lret
lret
lret
lret
lret
lret
leave
leave
leave
mov
cwtl
cwtl
mov
mov
mov
mov
mov
mov
stos
test
add
add
out
out
int
sahf
mov
lret
lret
lret
leave
mov
leave
leave
mov
mov
scas
cwtl
mov
mov
mov
mov
mov
mov
xchg
add
add
add
out
out
out
out
into
mov
mov
lret
mov
mov
mov
mov
mov
cwtl
xchg
mov
mov
mov
ret
add
add
add
cmpsb
mov
out
out
out
out
mov
lahf
xchg
cltd
sahf
mov
mov
mov
scas
mov
mov
scas
sahf
cwtl
mov
add
out
out
out
out
into
mov
mov
cltd
pushf
scas
mov
mov
scas
scas
scas
scas
scas
scas
scas
cwtl
xchg
mov
add
add
add
lock
out
out
out
out
out
into
mov
mov
xchg
cltd
cltd
scas
scas
mov
scas
scas
sahf
sahf
scas
sahf
xchg
mov
add
out
out
out
out
out
out
out
out
mov
mov
cltd
xchg
cltd
pushf
scas
scas
scas
sahf
cltd
sbb
add
cmpsb
movsl
movsl
mov
out
out
out
out
into
mov
into
mov
xchg
lcall
movsl
movsl
mov
out
out
out
out
into
into
into
mov
les
out
out
into
into
into
into
mov
add
add
movsl
popf
mov
cmpsb
add
add
incl
add
incl
add
push
aas
incl
add
inc
pop
incl
add
incl
add
add
push
add
pop
incl
add
loopne
add
jg
add
addb
add
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
add
add
add
sldt
rolb
add
sldt
addb
add
sldt
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
sldt
addb
add
sldt
addb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
sldt
addb
add
sldt
addb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
lock
incl
add
incb
pop
incl
add
jmp
ud0
add
aas
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
add
jl
add
jnp
add
jo
add
imul
pop
jno
add
and
das
push
add
jb
add
adc
jae
sbb
push
cmp
add
add
je
jb
jae
push
dec
inc
add
arpl
adc
push
jg
add
push
add
pop
add
inc
add
inc
add
push
add
pop
add
jnp
inc
jle
gs
add
cmp
mov
cmp
add
pop
push
add
inc
sbb
mov
dec
and
mov
dec
cmp
mov
cmp
xchg
bound
add
inc
sbb
lret
add
dec
sub
push
sub
xlat
push
sub
enter
aam
ss
pusha
cmp
loopne
cmp
mov
pop
add
push
jno
mov
jno
add
addr16
add
inc
add
jae
add
jbe
add
jbe
add
ja
add
jnp
add
mov
add
adc
sbb
adc
push
pushf
pop
add
movsl
adc
add
mov
add
push
add
mov
add
test
add
xchg
sub
ss
xor
add
sub
adc
xor
and
sub
and
mov
xor
dec
mov
push
xchg
add
cmp
add
lret
cmp
and
pop
add
mov
xchg
jnp
push
test
jp
push
add
dec
add
dec
add
push
add
add
ja
jb
jb
push
mov
imul
mov
add
ja
sub
inc
add
push
add
pop
add
loop
add
add
jae
inc
jecxz
add
jbe
push
out
jle
dec
lock
mov
push
add
cltd
arpl
mov
jge
ljmp
add
mov
fsts
outsb
add
cmpsb
jl
daa
push
nop
add
xor
add
sbb
add
aaa
cmpsb
add
and
add
xor
mov
dec
xor
pop
inc
xchg
add
inc
xchg
and
add
jne
add
inc
test
add
inc
mov
push
push
mov
sbb
add
inc
stos
add
dec
mov
xor
add
push
mov
add
outsl
mov
add
xchg
add
xchg
addr16
add
fwait
add
pushf
add
scas
add
stos
add
add
lods
add
sbb
add
roll
and
lret
add
ss
add
push
movl
sbb
add
insb
into
add
inc
cld
add
push
cli
add
arpl
add
int3
add
rolb
imul
add
testl
xchg
addr16
add
mov
cmp
mov
push
out
addb
stc
test
pop
sti
xchg
add
mov
add
add
and
sti
add
xchg
add
xchg
in
add
lcall
inc
or
jb
testb
sar
add
loopne
add
xchg
mov
mov
fwait
add
xchg
lods
add
xchg
nop
add
test
add
movsl
test
lock
mov
loop
cmpsl
add
mov
movsl
add
lret
ror
movsl
add
shll
in
lods
add
les
add
lret
mov
cld
aad
add
lds
sbbb
add
int3
roll
rol
add
fadd
add
add
fst
add
in
add
in
add
jmp
loop
ljmp
add
lock
add
div
add
add
sbb
add
add
inc
inc
inc
inc
add
sbb
add
sbb
add
push
push
inc
inc
inc
add
sbb
add
add
push
pusha
inc
xor
dec
inc
inc
add
sbb
add
dec
push
jb
inc
jge
call
jo
inc
inc
inc
add
or
add
add
add
xchg
mov
sahf
adc
jae
jp
inc
dec
pop
jg
in
cmc
cli
hlt
loope
arpl
insl
add
add
add
mov
jnp
pop
push
push
push
inc
dec
pop
jl
fcomip
cmc
sti
stc
jecxz
add
add
inc
dec
xchg
mov
jbe
and
pop
pop
push
inc
inc
inc
pop
jge
fsubrp
aad
add
inc
dec
push
xchg
mov
es
xor
das
xor
daa
or
push
push
dec
inc
add
sbb
add
push
popa
bound
and
xor
cmp
xor
es
inc
inc
data16
jb
cwtl
lret
mov
xor
lock
in
inc
xor
es
add
jns
ret
popf
pushf
enter
fdivrl
xor
fsub
repz
clc
out
fstpt
xor
and
cmp
push
ja
fwait
pushf
enter
xchg
xchg
xor
xor
fsubr
lock
cli
repnz
sub
add
outsb
sub
iret
enter
inc
adc
xor
xchg
call
add
and
pop
iret
shll
cmp
mov
adc
xor
xor
sub
inc
fdivrl
add
xor
rcrb
scas
mov
scas
stos
lods
mov
xchg
adc
sub
cs
and
add
cmp
mov
mov
mov
jmp
mov
mov
aaa
sub
cmp
cmp
xchg
iret
mov
mov
mov
repz
mov
mov
leave
iret
mov
mov
in
in
mov
xchg
xchg
rcr
call
ljmp
mov
lret
mov
mov
in
in
sarl
scas
scas
xchg
xchg
rcr
lock
sti
clc
aam
add
sbb
int3
int3
mov
in
mov
mov
mov
mov
scas
xchg
movsl
fucomp
aam
add
into
into
lret
mov
mov
mov
mov
mov
mov
scas
mov
mov
mov
int
mov
cltd
mov
mov
mov
mov
mov
mov
scas
cmpsl
add
mov
int3
int3
int3
mov
mov
mov
mov
mov
mov
stos
add
mov
sarl
lret
mov
mov
fwait
mov
mov
mov
mov
in
in
mov
mov
mov
mov
mov
movsb
add
add
add
mov
in
in
mov
mov
mov
mov
xchg
add
sarl
mov
mov
mov
shrl
mov
xchg
xlat
xlat
mov
sarl
add
add
add
cld
push
pop
incl
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
addb
aas
loopne
add
incb
add
jmp
pop
aas
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
sub
add
dec
cmp
fldt
add
js
add
jnp
add
movsb
and
adc
aas
add
pop
add
pusha
add
jo
xor
push
add
out
add
sbbb
jno
jecxz
arpl
cld
pushf
insl
add
popf
ja
repz
pushf
add
cmp
inc
addl
inc
stos
add
dec
mov
adc
add
mov
add
lretw
add
push
faddl
push
jbe
add
xchg
add
mov
add
xchg
out
add
pushf
incl
aas
stos
out
ss
incl
push
nop
incl
insl
xchg
incl
inc
test
add
incl
push
andl
add
rcrl
add
mov
add
movsl
ljmp
lods
in
add
mov
incl
sgdtl
add
add
sbb
add
add
add
add
or
or
or
sbb
or
or
or
add
or
adc
adc
sbb
adc
adc
add
adc
es
es
add
or
push
push
push
push
push
push
push
or
add
and
add
push
add
pop
adc
or
sub
sub
or
adc
add
add
push
sub
sub
adc
add
ss
xor
add
xor
sbb
sbb
xor
xor
sbb
sbb
sbb
sbb
and
and
sub
sub
and
and
sbb
sbb
and
and
cs
and
aas
cmp
daa
cmp
sbb
sbb
cmp
cmp
sub
sub
cmp
cmp
sbb
aaa
sbb
sbb
sbb
sub
sbb
sbb
sbb
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
jne
and
add
add
add
jne
adc
add
add
add
add
xor
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
add
int3
cli
add
fdivr
add
lock
add
add
add
add
add
cmp
add
add
add
mov
cli
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
lret
fnstsw
pop
pop
pop
xchg
cmp
mov
adc
xchg
faddl
mov
jns
es
popa
jle
jae
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
bound
test
cmp
insl
and
aas
dec
adc
sub
pusha
mov
es
or
fildl
punpcklbw
or
ficoms
or
inc
icebp
inc
add
addr16
cmp
push
sbb
and
add
movsb
shlb
push
push
push
call
xor
dec
call
inc
or
rolb
jns
fidivrs
push
or
jbe
add
lea
lods
stos
nop
add
adc
add
test
mov
mov
repnz
jnp
push
cli
rep
cld
repnz
sbb
add
xchg
outsl
add
push
ret
lcall
sbb
call
nop
add
lea
les
inc
mov
xchg
aaa
and
push
call
mov
rorb
xchg
shrl
inc
xchg
or
sti
sub
add
mov
test
inc
push
pusha
outsb
je
mov
lea
mov
mov
sub
xorb
dec
loope
ret
lea
push
aas
inc
pop
add
addb
addr16
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
icebp
dec
inc
clc
icebp
add
test
sub
mov
or
ret
repnz
dec
ds
xor
sbb
cltd
cmpsb
cmp
and
add
add
pop
pop
ret
push
popa
jne
and
call
jmp
push
adc
push
add
test
pop
push
or
jle
sbb
xchg
sti
sbb
push
push
negl
ret
mov
xor
mov
dec
in
popa
lods
push
jne
lcall
cmc
call
shll
inc
enter
dec
mov
mov
cltd
xchg
or
xchg
push
enter
push
xchg
pop
cmp
pop
or
mov
add
push
jmp
daa
add
inc
adc
mov
dec
dec
xchg
insb
xor
inc
pop
adc
add
jne
cmp
jge
loope
inc
jo
rolb
add
sub
mov
je
dec
mov
xlat
jne
sub
ret
push
shr
popa
rclb
les
push
dec
add
pop
roll
pop
pop
and
inc
or
sub
xor
test
push
push
xor
jmp
or
cmp
inc
xor
in
aas
add
jbe
add
call
pop
mov
pusha
aas
push
lcall
inc
pop
aas
mov
lret
adc
in
pop
jp
je
loopne
jae
xor
dec
or
loop
push
add
movsl
pop
sub
jnp
xchg
cli
movsb
jnp
push
rcrl
stos
clc
lret
stos
pop
into
pusha
insl
cmp
cmp
ret
xorb
mov
pushf
inc
lcall
push
push
xchg
xchg
mov
test
push
mov
sbb
outsb
orl
ret
mov
pop
das
and
test
mov
hlt
pop
push
dec
or
das
aaa
push
push
in
push
in
xchg
dec
pop
enter
sub
inc
sub
adc
push
in
jmp
lret
mov
cli
cmp
jne
push
stc
jmp
fidivl
jl
sbb
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
inc
or
pop
rolb
mov
push
je
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
loop
xorl
xchg
pop
xchg
in
sbb
pop
mov
rclb
scas
or
jno
adc
addl
rol
cmp
pop
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
mov
pop
inc
cmp
clc
cmp
lret
xor
es
push
dec
push
mov
enter
mov
xchg
test
push
outsl
mov
shrb
sub
insl
mov
call
cmp
andb
repz
cmpsb
imul
je
mov
mov
cmpb
add
daa
call
pusha
cmp
cltd
push
lea
insl
xor
sarl
push
add
add
call
sbb
movsl
and
test
or
enter
dec
and
scas
and
xor
in
add
sub
push
xor
pop
cmpsb
ficomps
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
daa
arpl
jae
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
dec
pushf
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
xor
add
hlt
push
add
clc
or
add
cli
add
mov
add
add
inc
add
cli
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
sub
shll
pop
