mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
int3
inc
inc
test
inc
and
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
pop
add
xor
add
add
add
add
add
add
add
or
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
and
cmp
cmpsl
inc
add
test
lcall
fidivl
cli
jmp
pop
jb
lea
call
ret
cmp
adc
pop
mov
adc
jns
mov
movsb
std
mov
inc
cwtl
outsb
fstpl
sti
mov
mov
lcall
adc
pop
xchg
sbb
popa
sarb
mov
cmp
cmp
sbb
or
mov
adc
inc
xor
clc
pop
xor
shrb
leave
mov
nop
or
dec
add
xor
mov
sbb
sbbb
lcall
mov
jbe
mov
pop
in
ja
cmp
mov
pushf
jecxz
adc
mov
inc
cmp
pop
fidivrs
push
push
int
inc
add
jnp
cltd
insl
dec
rcrb
and
and
sub
in
jne
mov
daa
sbb
mov
jmp
aaa
sbb
cmp
aaa
pusha
cltd
movsl
and
xor
out
roll
hlt
add
xlat
in
xor
mov
mov
adc
popf
sub
jne
push
les
adc
sti
jp
adc
fbld
push
jno
test
mov
jg
push
fidivrs
into
cmp
inc
rol
fwait
mov
pop
iret
adc
push
and
inc
or
push
scas
aas
negb
and
mov
out
add
adc
into
lret
sbb
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
and
cmp
cmpsl
inc
add
test
lcall
fidivl
cli
jmp
pop
jb
lea
call
ret
cmp
adc
pop
mov
adc
jns
mov
movsb
std
mov
inc
cwtl
outsb
fstpl
sti
mov
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
and
cmp
cmpsl
inc
add
test
lcall
fidivl
cli
jmp
pop
jb
lea
call
ret
cmp
adc
pop
mov
adc
jns
mov
movsb
std
mov
inc
cwtl
outsb
fstpl
sti
mov
mov
lcall
adc
pop
xchg
sbb
popa
sarb
mov
cmp
cmp
sbb
or
mov
adc
inc
xor
clc
pop
xor
shrb
leave
mov
nop
or
dec
add
xor
mov
sbb
sbbb
lcall
mov
jbe
mov
pop
in
ja
cmp
mov
pushf
jecxz
adc
mov
inc
cmp
pop
fidivrs
push
push
int
inc
add
jnp
cltd
insl
dec
rcrb
and
and
sub
in
jne
mov
daa
sbb
mov
jmp
aaa
sbb
cmp
aaa
pusha
cltd
movsl
and
xor
out
roll
hlt
add
xlat
in
xor
mov
mov
adc
popf
sub
jne
push
les
adc
sti
jp
adc
fbld
push
jno
test
mov
jg
push
fidivrs
into
cmp
inc
rol
fwait
mov
pop
iret
adc
push
and
inc
or
push
scas
aas
negb
and
mov
out
add
adc
into
lret
sbb
cmp
push
dec
sub
ljmp
mov
lret
fiaddl
or
sbb
jmp
cld
adc
mov
xor
int3
and
add
pop
stos
popa
sti
sub
xor
mov
sarl
leave
test
xor
add
mov
push
pop
std
jl
jle
or
push
bound
test
out
and
inc
mov
or
ja
inc
cmp
or
add
outsw
push
aam
cmp
les
pop
mov
mov
lcall
scas
sbb
popa
or
mov
out
test
inc
cmp
insb
and
imulb
sbb
inc
mov
rcrb
je
sub
aas
lret
jle
push
flds
jbe
mov
mov
mov
cmpsl
inc
sbb
mov
lods
lods
pop
xor
mov
jnp
out
xchg
sbb
xchg
insb
cmp
enter
mov
into
inc
sbb
cmpsl
fs
mov
mov
sbb
fcmovbe
xor
loope
lret
push
dec
cmp
xchg
xchg
popa
sbbb
jae
andl
push
xchg
addr16
or
pop
push
dec
les
jmp
nop
cltd
rorb
and
jno
sbb
das
pop
ss
adc
adc
pop
push
and
dec
mov
mov
cmpsb
enter
adc
sub
jmp
push
dec
loope
mov
fcmovnbe
sub
aaa
xor
imul
mov
jge
add
in
mov
fnsave
and
jl
push
and
pop
dec
test
mov
icebp
jl
stos
mov
je
lds
pop
mov
mov
faddl
pop
push
insl
mov
sub
jbe
loope
shr
icebp
mov
outsl
test
fisubl
mov
lds
cmp
fimuls
mov
fimuls
cmp
dec
inc
out
jbe
daa
leave
jmp
push
daa
outsb
mov
xchg
cmp
push
into
test
pop
mov
fildl
pop
xchg
js
adc
mov
js
ljmp
aaa
rclb
sbb
push
enter
pop
cmp
sbb
pop
test
xor
and
mov
mov
data16
fbld
sub
stc
sarb
fwait
in
stos
jp
ljmp
or
inc
mov
imul
imul
ficoml
adc
jl
mov
xchg
sahf
mov
scas
cmp
xlat
mov
mov
xor
cmp
or
rcr
cmpsb
adc
in
lea
adc
lcall
push
nop
sbb
sbb
dec
xchg
push
adcl
cmpsl
out
inc
lcall
out
aas
mov
jne
gs
xchg
adc
dec
test
xchg
fidivrs
lret
and
mov
popf
daa
mov
fidivl
jne
fs
push
aaa
inc
scas
ds
lea
adc
mov
orb
mov
push
xchg
push
add
imul
sbb
stc
roll
into
pop
mov
js
test
and
cmpsl
mov
pop
rcrl
pushf
negl
mov
mov
sub
mov
cltd
je
xor
hlt
notb
dec
sahf
enter
dec
sahf
loop
adc
lret
ds
test
and
sbb
push
lds
mov
mov
sub
jae
push
jp
inc
rcrl
dec
push
data16
xchg
lret
into
mov
cltd
mov
in
mov
fwait
shl
dec
mov
mov
sbb
orl
sbb
lahf
mov
imul
daa
add
push
mov
andl
mov
jae
mull
sub
mov
adc
lcall
add
sti
mov
jno
dec
mov
sub
data16
jle
fs
push
sub
add
dec
ret
ret
sub
sub
in
mov
mov
hlt
and
cwtl
es
xchg
imul
mov
test
xchg
cmpb
lds
and
mov
sub
inc
es
xchg
lret
mov
arpl
xchg
ret
pop
mov
jb
arpl
add
into
icebp
or
scas
divl
out
mov
cltd
out
in
fwait
lea
xorb
push
in
loopne
sti
push
pop
std
popl
or
xchg
sub
jns
repnz
cmpsl
adc
mov
and
aas
test
jl
mov
xchg
es
test
cmp
pop
inc
jno,pn
sbb
lcall
js
outsb
dec
fisubrl
pushf
jb
movsl
mov
mov
and
mov
sub
test
mov
dec
outsb
call
pop
or
pop
sub
repnz
pop
idivb
into
mov
and
adc
mov
insb
loopne
divl
dec
push
mov
jne
pop
and
dec
movsl
jmp
mov
or
test
jge
cmc
jae
or
mov
imul
mov
push
fwait
aad
cli
sub
cmp
lret
in
test
sub
xchg
xlat
ret
test
std
push
fbld
loopne
int
dec
and
xor
daa
mov
cwtl
and
sbb
sbb
idivl
insb
push
mov
jne
sbb
shll
roll
push
fsubrp
inc
inc
cmp
mov
repnz
aas
pusha
xor
pop
in
pop
push
and
push
jb
pop
push
mov
mov
fwait
ljmp
mov
inc
mov
add
lahf
outsl
adc
aas
add
call
lret
push
notb
push
mov
xor
mov
ljmp
pop
test
and
pop
pop
and
leave
pop
adc
in
add
jo
and
and
scas
adcb
icebp
xchg
ljmp
fadd
insb
xchg
call
push
push
mov
in
dec
jge
inc
lods
or
std
and
ds
inc
clc
jae
xorb
mov
dec
into
and
test
push
jg
mov
add
ljmp
outsl
jo
jae
jl
mov
cmp
call
lret
sbb
test
pop
vpshuflw
jae
cltd
cmp
xchg
push
addb
or
or
jo
push
jbe
jge
sub
addr16
aaa
bound
xchg
jp
lods
in
sub
pop
mov
mov
pushf
jno
jns
test
inc
pop
popf
lret
mov
push
iret
dec
int3
sub
je
arpl
mulps
sub
test
test
shl
imul
iret
sti
sub
movsl
stos
push
loop
out
loop
int3
lods
dec
adc
jmp
icebp
jge
jge
push
out
cmc
dec
jmp
xchg
mov
mov
in
or
inc
int
jl
ja
dec
lahf
xor
jae
inc
cli
sti
mov
xchg
push
popa
or
ljmp
cmpsl
cmp
xchg
xor
sub
inc
out
sub
cs
push
rcl
scas
outsl
sti
stos
push
sub
testb
in
mov
es
cld
insb
daa
jns
mov
push
jne
mov
adc
sbb
int3
mov
popa
push
lret
or
xor
je
push
adc
mov
vpunpcklwd
mov
lret
leave
and
dec
aas
jmp
movsb
std
sub
xchg
dec
mov
push
fisttpll
movsl
nop
stos
xchg
pusha
jl
in
lret
mov
out
jg
add
push
fwait
ret
sbb
mull
sbb
daa
jecxz
xor
and
test
or
outsb
mov
hlt
jns
rorl
in
lods
xor
jp
int3
sbb
mov
pusha
fs
mov
add
mov
fldl
or
lret
jmp
mov
dec
adc
in
stos
cmp
aad
cwtl
ror
dec
inc
lret
sub
ja
out
sub
dec
jno
push
test
cli
cmp
push
fs
inc
cmp
hlt
clc
and
add
movsl
andl
mov
mov
pop
sub
xchg
mov
cmp
fidivrl
add
les
in
and
push
xor
das
aad
pop
jae
ret
xor
inc
mov
push
jnp
setl
sbb
mov
sbb
sub
lcall
push
roll
ret
rcl
mov
out
ss
cltd
stc
xor
scas
ret
adc
inc
icebp
shl
sbb
repz
ret
mov
inc
and
outsl
mov
out
mov
pushf
sbb
push
ss
out
mov
pop
in
mov
inc
enter
pushf
jno
jg
lret
mov
fbld
loop
push
dec
int3
add
inc
jae
jmp
shlb
xlat
int
stos
xor
cmp
movb
pop
xchg
sti
cmp
mov
pop
mov
add
push
sub
and
cs
fwait
scas
sbbl
sub
aaa
mov
mov
pop
xchg
pop
mov
inc
repnz
mov
cli
sbb
push
jns
mov
iret
mov
fs
and
imul
ja
shl
clc
lods
test
inc
out
dec
std
sbb
out
cmp
lods
jl
pop
dec
stos
cmp
jg
arpl
iret
fs
push
cmc
das
insl
jae
dec
scas
push
adc
pop
pushf
dec
addr16
lret
int3
lods
xor
xor
mov
mov
add
cld
icebp
cmp
stos
add
and
fildll
dec
xchg
hlt
paddq
and
imul
jbe
mov
orl
xchg
xchg
jge
out
mov
jns
inc
add
das
mov
sbb
aas
cwtl
push
cmp
pop
test
xor
test
mov
lea
mul
or
je
imulb
mov
mov
jne
out
xchg
jg
pop
mov
and
fcoms
filds
dec
leave
out
fs
adc
add
fsubs
mov
loope
jle
sahf
sub
mov
mov
mov
adc
cmp
int3
js
mov
push
inc
aas
inc
xor
jmp
std
and
push
sub
adc
jnp
jbe
xchg
fdivp
rcll
testl
xchg
jmp
jb
and
jne
shlb
data16
enter
cmc
outsl
sub
loop
sbb
dec
jp
jge
call
lds
or
addr16
jge
lcall
sbb
sbb
jle
adc
pop
ret
mov
mov
lcall
ja
sbb
jg
loope
inc
sub
fidivs
int3
xchg
popf
push
int3
das
adc
inc
es
lods
mov
cmpsb
frstor
push
shrl
sti
pop
rcl
push
adc
or
or
and
call
push
sub
adc
cmp
mov
cwtl
sbb
jnp
repz
sub
mov
cltd
sub
xchg
lods
inc
or
repz
fwait
xor
movsl
mov
dec
mov
insl
add
mov
enter
cli
mov
aas
pushf
and
mov
pop
dec
mov
mov
dec
and
daa
movsl
out
jle
adc
inc
sbb
cmp
sub
jno
jns
sbb
pop
leave
push
pop
movsb
jmp
dec
mov
rorb
fbstp
daa
js
mov
inc
mov
jp
in
negb
clc
stos
lds
xor
fists
push
push
test
pop
mov
or
push
sub
cmpsb
rorb
dec
xchg
rcrb
out
jbe
rcr
mov
mov
push
filds
fists
nop
lret
mov
dec
stc
fsubrs
rol
out
aaa
aad
mov
aad
and
pop
push
add
in
add
pop
sub
mov
ja
outsl
pushf
fiadds
and
ss
ret
jl
rclb
push
cmpsl
pop
lea
xchg
fs
call
jmp
sub
nop
push
mov
mov
gs
mov
stos
jne
cmp
inc
dec
mov
jge
stos
es
dec
xchg
mov
inc
xchg
push
cmpsl
add
imull
aad
cmp
jne
loope
push
divl
dec
repz
sub
andb
sbb
cmpl
ffree
pop
fcmovnbe
fdivr
pusha
jae
cmp
es
and
sub
sub
out
jb
insb
aas
pushf
cmp
fstpt
imulb
inc
ret
je
shlb
gs
cld
push
mov
sub
cmp
pushf
in
dec
stos
mov
out
push
lahf
jle
jo
push
in
xchg
and
xchg
aaa
fisubs
idiv
rcrl
xchg
adc
push
in
and
cmp
jae,pt
mov
and
out
sbb
xor
loop
fcoms
mov
shlb
gs
dec
add
sub
sbb
out
xor
mov
add
jo
push
push
loope
ja
xchg
adc
mov
icebp
popf
add
mov
scas
inc
push
adc
xchg
out
je
or
push
call
jg
add
jo
testl
mov
pop
xchg
inc
inc
test
dec
adc
mov
sti
jo
test
adc
sub
or
pop
adc
data16
and
das
push
adc
leave
lods
pop
test
lcall
iret
dec
in
fidivs
aad
xchg
dec
stos
and
jne
sbb
aas
outsb
mov
lahf
and
jle
adc
pop
sub
or
lcall
push
sti
ds
negb
fs
lock
int3
pusha
les
inc
call
jge
scas
mov
iret
xor
scas
sarb
cmp
cli
sub
pop
inc
mov
xchg
inc
aad
push
mov
xor
pop
int3
div
sub
push
dec
jge
pop
hlt
mov
xorb
aam
scas
insl
xchg
push
add
in
movsl
jb
dec
mov
stos
lcall
sbb
cmpsb
mov
or
or
int3
aas
add
insb
xor
adc
sahf
arpl
rclb
push
testb
rcr
ss
hlt
inc
cmpsb
ljmp
mov
ljmp
test
aas
into
mov
movsb
mov
xchg
lods
push
jmp
dec
sbb
xchg
sub
lahf
mov
jg
imul
es
ret
lcall
jbe
filds
sub
movsb
cmovb
dec
adc
or
xchg
mov
and
stc
popf
dec
or
jnp
faddl
xor
push
adc
fmull
jae
aas
cltd
bound
aad
loop
popa
loopne
xchg
fbld
inc
xor
pop
test
je
push
test
cmpsb
js
bound
sbb
sbb
in
fldl
test
call
pop
lds
adc
jge
clc
or
xlat
fdivrs
xchg
lahf
stos
push
repnz
xor
push
jo,pn
cltd
insb
fnstcw
movsb
jo
mov
fnstsw
push
arpl
arpl
lcall
xlat
or
jns
xor
adc
aad
insb
shrb
add
and
xor
cs
fisttps
gs
cmp
cmpb
pop
cltd
test
jnp
adc
es
movsl
adc
inc
fistps
aam
incb
nop
outsb
or
cltd
jg
xchg
aas
adcl
jno
fsubl
enter
jp
xor
scas
das
and
test
shll
in
mov
add
xor
mov
int
xchg
ret
test
xor
cwtl
inc
hlt
test
es
inc
out
ljmp
cltd
cmpl
jp
inc
inc
and
ret
dec
pop
lds
jmp
xor
mov
das
repz
aad
cmp
fld
imul
mov
jp
pop
arpl
or
aam
loope
jmp
sbb
repnz
ret
hlt
cmp
out
dec
mov
push
xchg
jae
xchg
test
jae
popa
in
mov
jmp
adc
popa
cli
inc
add
xchg
xor
mov
inc
sbb
xchg
adc
iret
mov
ffreep
mov
or
lods
mov
sub
dec
clc
mov
push
sub
jge
leave
lret
sbb
sbb
leave
lret
push
dec
jnp
adc
div
popl
cmp
in
pop
dec
fisubrs
add
test
das
insl
xchg
in
xchg
adc
fcom
mov
test
in
sub
push
sahf
xor
sbb
mov
lret
mov
enter
jae
aaa
cmpsl
movsb
jp
pop
lods
scas
sahf
popa
xchg
mov
mov
into
or
xchg
imul
pop
pop
push
fwait
movsl
lret
addr16
and
imul
in
jl
inc
ret
cmp
dec
cmc
cmpl
call
cmp
push
and
ret
in
push
sbb
sbb
orl
lds
scas
push
xchg
sbb
sbb
in
outsl
std
outsb
adc
xchg
jno
std
int3
or
mov
rorl
sub
scas
lods
inc
pop
sahf
pop
loopne
mov
mov
jno
xchg
out
in
dec
push
push
mov
enter
je
stos
add
jo
mov
jns
dec
ja
out
mov
dec
aas
jbe
mov
dec
dec
mov
ret
in
std
leave
rol
add
pop
imul
dec
adc
or
pop
xor
es
shll
adc
in
cmc
cmp
lock
imul
xlat
inc
pop
cmp
fdivrs
pop
lds
loopne
mov
pusha
cld
mov
push
xchg
pop
loopne
mov
icebp
repz
hlt
cld
mov
test
sbb
mov
movsl
jge
leave
xchg
xchg
sbb
sbb
loop
mov
int3
imul
popa
pushl
imul
subb
sub
pop
sub
dec
fistl
or
repz
pop
jecxz
inc
xor
jo
xchg
aas
addr16
dec
xor
xchg
cmp
mov
icebp
jp
aam
or
leave
cld
jg
jmp
jp
lods
ljmp
jg
fstpl
xchg
lcall
popf
push
mov
aaa
cli
and
fcomps
in
hlt
or
or
into
scas
imul
in
call
repz
sahf
xchg
jl
xchg
sub
xchg
mov
hlt
test
push
ljmp
out
cmpsb
mov
subl
adc
adc
ret
inc
loope
xchg
push
mov
ja
adc
lods
scas
xor
lds
daa
and
jecxz
push
dec
push
xor
pop
fdivl
mov
push
xchg
adc
fwait
add
jo
xorl
inc
inc
inc
inc
adc
xor
fs
push
in
push
test
pusha
pop
popa
addr16
fwait
cmp
xchg
fcmovnb
lods
adc
mov
cmp
and
rolb
repnz
mov
aas
shrb
aad
push
mov
cltd
clc
cltd
fists
in
or
pushf
notl
push
xchg
mov
fs
pusha
int
adc
and
enter
adc
push
jns
nop
bound
test
insb
inc
hlt
ds
mov
lods
std
jnp
dec
es
aad
iret
mov
jecxz
in
mov
pushf
out
mov
vshufps
adc
lret
push
pop
add
sahf
rorb
or
into
mov
xor
das
vmovlps
inc
mov
out
or
daa
add
dec
dec
mov
cltd
mov
sbbb
cmpsl
xor
addr16
icebp
mov
and
cmpsb
insb
cmp
test
adc
outsl
add
int3
pop
add
inc
pusha
call
sub
xor
mov
mov
adc
fs
lds
cmp
das
inc
out
adc
jae
aaa
fs
and
scas
jb
mov
add
ret
outsb
loop
leave
cwtl
inc
int
cld
in
in
adc
sbb
jne
inc
lcall
loopne
push
sbb
sbb
jle
jle
fisubrl
mov
dec
pushf
in
int
push
pop
je
fiadds
movsl
and
daa
mov
mov
mov
adc
fistpll
xchg
pop
and
add
repnz
push
sahf
pop
leave
mov
jne
pop
aaa
push
xlat
jl
loopne
adc
cmpsl
jns
hlt
xor
aas
xor
scas
xor
xor
sti
fisttps
adc
clc
cmp
xchg
popa
repnz
adc
hlt
arpl
aad
cmp
pusha
xchg
pop
cmp
push
cwtl
dec
jbe
test
gs
loope
sbb
out
jne
shl
mov
aaa
inc
gs
sub
jg
dec
adc
jns
mov
iret
cmpsl
loope
pop
into
addr16
into
mov
in
into
sarb
ficomps
and
inc
pop
or
enter
stc
or
jae
mov
lcall
xchg
pop
pusha
sub
lret
test
fstps
loop
push
fdivp
mov
push
jp
ficoml
and
add
enter
jle
jge
mov
mov
cltd
adcl
jmp
repnz
data16
fcmovu
adc
mov
jns
add
mov
nop
adc
lds
leave
out
addr16
push
xchg
adc
push
mov
stc
jo
jecxz
stc
mov
test
mov
xor
mov
fldenv
pop
mov
inc
cli
movsl
push
jg
test
inc
scas
aad
pop
lahf
mov
mov
sub
lret
icebp
outsb
jne
inc
popa
test
jl
mov
stc
sbb
cmp
add
jp
ja
in
dec
sub
lahf
cmp
mov
push
aam
or
mov
cs
test
jmp
sarb
pusha
mov
cmp
loope
fwait
xor
pop
int3
sbb
jb
inc
mull
cmp
xor
jno
fisubrl
mov
fcmove
fimuls
push
fcmovbe
and
pop
gs
or
mov
js
mov
add
addr16
push
mov
sub
cmc
fisubrs
nop
bound
xlat
outsb
idivl
rolb
xchg
lods
cmc
cmp
adc
sub
mov
fnstsw
jl
mov
push
add
out
cmp
inc
push
aad
cmp
xchg
adc
ja
out
push
lcall
stos
jae
not
sti
dec
mov
jb
inc
push
inc
mov
fistl
push
test
jmp
fstp
dec
hlt
outsb
int
rorl
adc
adc
pop
mov
xlat
pop
dec
push
dec
pusha
xor
jp
push
dec
cmpsl
sub
or
jl
add
cmp
mov
inc
dec
mov
jl
pop
ret
scas
add
gs
sbb
pop
es
pushf
cmp
gs
test
std
fwait
daa
mov
sahf
in
movsl
xchg
adc
pop
fs
cmp
dec
aad
xchg
imul
loop
jge
jg
jne
fwait
pop
inc
inc
daa
enter
sub
shlb
mov
cmp
test
int3
cmpsl
push
mov
mov
cmp
adc
iret
dec
xor
stos
cli
adc
push
mov
pop
in
add
xlat
cmp
or
mov
push
repnz
aam
jmp
xchg
mov
icebp
push
push
and
and
aam
jle
out
lods
out
movsb
aad
imul
andb
cmp
mov
in
stc
fiaddl
test
jmp
cmp
pop
sbb
ret
cmp
xor
inc
dec
mov
stos
or
dec
loopne
out
adc
pop
jns
push
fistpll
adc
push
adcl
fsubr
or
sbb
rorb
or
dec
stos
cmpsb
mov
xchg
popf
pop
xor
shlb
push
aaa
js
jbe
sbb
call
jne
mov
int3
imul
mov
sbb
push
jp
fildl
pop
imul
push
mov
xchg
rorl
aad
popa
push
fnstsw
rcr
xchg
fisubs
loop
adc
mov
or
cmp
pop
pop
xchg
fisttps
ret
stos
pop
sbb
sub
sub
nop
bound
push
imul
lahf
in
jl
mov
sub
dec
mov
inc
inc
ror
sub
mov
mov
test
push
call
pcmpeqw
push
cmp
jg
cli
lea
imul
ret
and
xchg
out
test
movsl
or
jmp
enter
lods
mov
cmpl
mov
mov
add
mov
mov
sbbl
cld
rol
mov
sbb
clc
ds
or
adc
pusha
lea
sbb
adc
or
cwtl
or
and
pop
jmp
cmp
fsubl
adc
dec
out
fs
pop
or
cld
cltd
testl
push
lods
push
test
inc
push
xlat
mov
daa
jl
andb
ss
mov
imul
mov
jge
dec
jb
cmc
jb
fwait
iret
lcall
dec
sahf
shlb
jecxz
mov
or
inc
inc
push
push
or
bound
mov
icebp
adc
lahf
sbbl
cli
jmp
stos
xor
jns
sub
cld
add
movsb
sbb
or
jne
push
ret
in
std
fisubs
ret
pushf
pushf
jns
lahf
sbb
dec
mov
fisttpll
mov
and
movsl
ret
pop
mov
repz
insb
and
xlat
fildll
pop
sti
mov
out
daa
dec
cmpsb
inc
test
adc
in
push
pop
lahf
lcall
adc
lock
xchg
or
cmp
push
mov
icebp
cmp
iret
addr16
jo
push
adc
or
inc
pop
xchg
push
lea
fs
dec
sub
sbb
test
stos
adc
mov
push
ja
mov
dec
sbb
cmp
cmpsl
in
adc
in
inc
cmp
loop
add
out
daa
ljmp
dec
or
out
in
orb
inc
pop
inc
xor
sbb
pop
lahf
fwait
add
ss
in
jle
cmp
lcall
pop
cmpsb
outsb
rorl
cmp
jae
pop
les
int
push
add
dec
leave
movsb
cmpsb
mov
leave
push
roll
out
das
movsl
out
add
popl
jl
adc
cli
sub
mov
lret
ret
mov
fstp
std
hlt
fwait
loopne
iret
jnp
sbb
ja
fistps
pop
and
adc
cs
in
add
xor
ficomps
shr
pop
sub
imul
pop
rorl
pop
mov
or
popa
pop
and
enter
or
push
or
or
sbb
mov
popf
rolb
hlt
imul
vcvttss2si
adc
addl
dec
xchg
push
insb
adc
jg
inc
mov
xchg
cwtl
xchg
adc
imul
mov
and
ja
aaa
or
out
cmc
imul
gs
dec
loopne
fidivrl
inc
sub
mov
loope
or
xor
sub
outsb
imul
das
jo
push
mov
xor
sti
stos
std
adc
dec
rorb
pop
mov
add
jae
mov
test
dec
pusha
jmp
ret
sub
pop
and
mov
popa
sbb
sub
sbb
addr16
aaa
popf
sbb
dec
jg
das
or
add
sub
sar
xor
push
cwtl
imulb
inc
jo
sbb
rcl
insl
into
test
aaa
negb
pop
out
rclb
inc
sub
push
les
out
in
gs
insl
jecxz
or
loopne
add
sbb
mov
leave
sahf
enter
cli
lcall
jae
dec
out
xchg
das
mov
sub
loop
and
addr16
popa
or
xchg
jo
push
mov
xlat
jg
pop
aad
jno
dec
ds
call
les
dec
stos
cmpsb
or
push
xchg
movsl
imul
fisubs
or
jbe
push
or
loopne
jb
pop
push
daa
lods
fimull
mov
arpl
mov
jl
dec
xor
inc
xor
aas
mov
mov
xchg
fbld
test
mov
ret
int3
sbb
mov
mov
filds
negb
roll
cmc
xor
mov
cmp
lods
cmp
pop
outsl
insl
jns
mov
dec
and
pop
mov
clc
cli
push
xor
je
lahf
stc
add
test
mov
pop
dec
add
in
mov
mov
xchg
out
mov
sbb
adc
mov
cmp
pop
jg
mov
jmp
es
mov
add
push
punpckhwd
enter
cmp
das
xor
xchg
push
xchg
pmulhw
or
inc
orb
lcall
imul
cli
sub
push
repz
test
xor
popl
cmp
add
enter
int
add
xchg
jns
mov
bound
jmp
lds
mov
and
aaa
adc
int3
mov
lcall
add
and
pop
cmp
fimuls
or
lret
xchg
sub
les
rol
daa
push
andl
test
shrl
lods
data16
leave
xchg
out
arpl
lods
fstps
xchg
xchg
sub
dec
or
mov
pop
lcall
mov
int3
sbb
inc
sub
adc
dec
test
or
mov
xor
push
mov
ret
jne
adc
out
and
xor
lods
or
jecxz
push
jge
test
xor
ljmp
lock
cltd
cmp
or
loopne
subl
inc
xor
xchg
fsts
jg
ret
js
inc
xlat
push
jae
jle
xor
fdivs
dec
sub
jne
mov
fidivs
mov
cmp
loopne
imul
xrelease
adcb
int
out
mov
or
dec
clc
and
sub
outsl
push
sub
movsb
iret
inc
sti
jo
pop
data16
add
imul
loop
xchg
fsubrs
std
repz
jb
add
xchg
rorb
mov
enter
ficoml
mov
or
jns
das
ds
or
ss
lahf
enter
sub
mov
sbb
or
int3
jle
enter
sbb
ja
sub
push
mov
jl
jmp
push
dec
cs
or
mov
cmp
imul
fucom
stos
mov
push
lods
clc
movsl
add
out
pop
cmp
pop
sub
mov
ds
das
mov
in
lock
dec
mov
repnz
or
adc
xor
push
cld
jmp
cmp
inc
push
repz
call
jp
pushf
sub
sbb
push
fsubl
add
clc
cs
out
xlat
xchg
cmp
cmpsl
ret
cld
lock
mov
stos
adc
ss
dec
jns
cli
mov
jle
xchg
push
in
push
scas
mov
adc
in
ret
and
je
iret
cmp
test
mov
jl
xchg
mov
imul
stc
in
xchg
mov
mov
xchg
out
fwait
out
shrl
xor
mov
cmp
loope
stc
fcom
hlt
cmpsl
mov
mov
mov
lgs
cmp
movsl
setle
test
shr
xor
icebp
or
daa
mov
add
insb
int
out
fidivrl
mov
push
lret
cmp
mov
dec
dec
popf
xchg
pop
mov
mov
and
push
je
or
jle,pt
inc
jne
sub
shr
test
mov
ficompl
dec
mov
mov
xchg
push
loope
in
stos
push
push
mov
popf
pop
ds
daa
cltd
repnz
jmp
sahf
and
gs
jl
lods
pop
hlt
std
lcall
mov
xlat
mov
push
fs
dec
mov
aam
lahf
xchg
and
adc
enter
lock
mov
fnsave
pop
and
mov
arpl
xchg
ficomps
vphaddbq
dec
pop
mov
xchg
push
xchg
sub
add
out
addr16
ss
stc
mov
cmp
shl
das
shr
aas
cmp
push
or
cmp
jb
int
imul
dec
xor
lea
mov
cld
movsb
inc
repz
sbb
mov
xchg
and
mov
inc
outsb
std
and
sub
imul
and
pop
mov
xchg
or
jmp
vcvtps2pd
ret
hlt
xchg
pusha
add
adc
xchg
mov
mov
jo
xor
add
xlat
mov
push
lcall
mov
push
push
adc
fwait
sbb
xchg
inc
es
subb
push
into
cmp
mov
pop
xor
mov
push
sub
mov
sti
jmpw
out
scas
pushf
sub
pop
std
xchg
sti
daa
mov
ret
mov
pop
js
ret
pop
pop
mov
push
inc
cli
jo
test
lahf
out
jg
icebp
xor
and
xchg
adc
loopne
pop
jne
sub
std
test
imul
ret
mov
pusha
imul
nop
push
sub
pop
sarb
xchg
cmp
test
xor
push
repz
sub
xchg
rcl
lds
jno
cmp
test
mov
test
mov
movsb
shrb
aad
insl
out
jo
mov
xchg
jb
ds
and
sbb
scas
mov
testl
mov
lcall
push
dec
call
int
add
mov
cmp
mov
popa
jne
push
sub
lods
dec
loope
xchg
cmp
leave
push
dec
popa
dec
pop
pop
jmp
imul
xor
jns
cmp
add
rclb
xor
push
cmp
shlb
incb
cwtl
scas
and
cld
cwtl
fdivrs
cmpsb
outsb
inc
hlt
fisttps
mov
xlat
fs
and
dec
fsubrl
into
inc
sbb
mov
ja
outsl
out
clc
ret
mov
and
lahf
jecxz
adc
xor
cmpsl
stos
xor
int
pop
sbb
xchg
mov
sti
addb
fldenv
sahf
out
je
cmp
test
push
jmp
mov
repnz
das
lcall
push
pop
mov
pop
and
xlat
inc
jge
std
and
scas
nop
scas
and
iret
addr16
xchg
dec
mov
adc
jmp
pop
stos
cs
dec
cmp
push
xchg
sbb
and
add
pop
fidivl
clc
lock
mov
cld
pop
andb
sub
enter
adc
dec
add
xor
enter
xchg
mov
jg
int3
sub
push
fildll
push
icebp
jge
dec
sbb
inc
dec
cwtl
cmp
test
movsb
cmp
mov
pusha
icebp
mov
fwait
imul
ja
adc
mov
inc
jno
sub
mov
scas
imul
mov
fstl
mov
pushf
mov
in
je
pop
insl
in
mov
inc
or
sub
sbb
xor
jnp
scas
xor
into
jecxz
and
mov
or
sbb
cld
fcomp
popa
outsl
adc
dec
xor
dec
or
dec
xlat
mov
cmp
ds
dec
inc
adc
scas
mov
mov
xchg
aam
cli
outsl
ret
jbe
test
sub
dec
dec
add
in
out
xchg
sbb
push
jmp
mov
dec
cld
call
cmp
pop
jns
xor
mov
ljmp
sub
jge
and
int
fisubrl
or
out
hlt
dec
cmp
xlat
das
stc
pop
mov
aam
adc
outsb
mov
shll
shll
inc
scas
mov
repnz
mov
mov
fsubrs
in
shlb
adc
and
xchg
cld
ret
jno
cmpsb
inc
inc
add
cmp
pushf
mov
popf
rcr
aam
rcrl
or
insl
inc
insb
pop
dec
mov
stos
sti
loope
lcall
imul
dec
lret
or
inc
loop
sahf
or
mov
shll
mov
stc
adc
and
lcall
and
subl
adc
fistpl
sar
fcoml
jnp
mov
jge
adc
dec
unpcklps
mov
jge
adc
fs
shrl
push
cmc
enter
loop
sti
cli
push
xchg
test
cmp
mull
dec
add
ja
jb
sbb
lret
call
into
xchg
in
sbb
dec
in
dec
ljmp
jmp
outsl
inc
aas
iret
in
andb
mov
and
xchg
std
stos
lock
pop
fsubr
sub
jns
or
mov
fcoms
in
stos
xlat
jle
fimull
cmp
icebp
call
add
mov
sbb
stc
jne
mov
xchg
mov
out
insb
sbb
iret
movsl
mov
and
xchg
jmp
mov
dec
xchg
das
sbb
jle
shufps
ja
add
add
push
add
ret
jecxz
and
sbbb
pop
push
test
dec
and
std
xor
cli
mov
ja
lock
sbb
scas
push
jns
pop
xchg
das
mov
leave
sub
pop
dec
popa
pop
pop
gs
std
outsl
pop
sbb
lcall
add
and
jns
shrb
jmp
push
jae
leave
out
adc
and
cmp
xlat
outsb
insb
in
lret
fdivl
dec
dec
out
pmulhuw
imul
inc
incl
sbb
dec
popf
mov
imul
xor
fs
mov
popf
sbb
adc
pop
testl
mov
addl
es
adc
mov
insl
add
jle
out
push
xor
xchg
cmpsl
lahf
push
insb
cli
xchg
mov
imul
xchg
dec
fsubs
insb
clc
data16
loop
xchg
dec
add
push
sbb
cmp
or
jns
xchg
shr
cltd
xchg
rcrb
xor
and
imul
and
aam
push
sar
insl
imul
xchg
and
dec
mov
mov
sbb
add
xchg
sbb
call
out
lret
inc
xchg
stos
leave
cmp
mov
or
mov
ljmp
in
idivl
xor
cmc
in
cld
icebp
jmp
or
imul
stos
xchg
inc
imul
popf
inc
or
mov
mov
call
ds
inc
iret
loopne
stos
hlt
sbb
mov
int3
push
gs
cmp
or
aam
push
aas
adc
stos
push
test
mov
std
imul
push
jmp
jae
mov
addr16
addl
leave
jne
fwait
leave
push
mov
push
lret
xor
jl
rorb
sbb
dec
out
mov
inc
cmc
rcll
out
lret
cli
mov
sbb
sub
jne
outsl
dec
inc
das
add
mov
pop
shlb
out
data16
cmp
lods
sbbb
cmpsb
and
pop
insl
int
mov
bound
dec
into
pop
daa
and
push
dec
cld
int3
sbb
fnstenv
mov
std
in
push
xchg
pushf
inc
xlat
fildl
pop
in
pop
loope
jmp
jo
outsl
mov
mov
mov
lcall
xlat
jmp
cmp
pop
fwait
iret
adc
inc
sub
sbb
enter
insl
cmp
out
dec
clc
mov
cs
lock
fsubrl
adcl
aaa
lahf
adc
adc
test
sbb
cld
cmp
ss
push
pushf
lahf
enter
cmp
loopne
mov
mov
inc
inc
mov
stos
jg
lock
out
sbb
jnp,pt
or
gs
iret
leave
lods
cmc
and
jae
movsl
sub
xor
and
outsb
insl
inc
xchg
lea
push
add
xor
gs
lock
lods
aaa
adc
mov
dec
sbb
into
ja
mov
cmp
mov
push
fcmovb
fs
stc
lret
mov
aaa
push
inc
lahf
shufps
lret
aas
andl
jns
cmp
sbb
aaa
and
pop
add
sbb
pop
stos
push
std
sbb
ss
ds
out
daa
lahf
mov
push
in
les
fsubrl
push
mov
rcll
loop
jbe
pop
mov
mov
loope
data16
arpl
popf
in
popf
add
add
in
mov
cs
sbb
loop
dec
aad
scas
pop
pop
xchg
aaa
call
cmp
xchg
vmovmskps
adc
sub
fisttps
jle
inc
xor
repz
stos
jns
nop
sarw
mov
out
adc
mov
test
pop
push
and
nop
xchg
jecxz
pushf
scas
add
jl
loopne
cli
aad
outsb
pop
outsl
sub
outsb
stos
or
divb
xchg
dec
mov
ljmp
mov
rcll
xor
dec
xchg
loop
pop
in
cld
out
and
jl
push
iret
dec
dec
or
mov
pop
cmc
mov
leave
xor
push
mov
push
push
jb
xor
mov
in
xor
mov
test
dec
adc
das
outsl
aaa
arpl
or
mov
jge
fs
cmp
adc
cmpsb
clc
pop
adc
dec
push
pop
in
and
outsl
cmp
lret
pop
cwtl
mov
cmc
fwait
mov
repnz
mov
add
add
into
gs
jns
xchg
repnz
mov
out
inc
or
shlb
enter
cmp
insl
gs
test
lea
add
xchg
dec
cs
ljmp
inc
jmp
push
add
push
push
fidivrs
xchg
outsl
cmc
mov
ss
stos
mov
dec
repz
xchg
cmp
and
add
mov
jmp
mov
add
lret
adc
jnp
cs
lahf
repnz
and
push
jno
aaa
imul
mov
ljmp
sub
lahf
push
adc
xor
xchg
imul
xor
repnz
and
call
rorl
cmp
or
stos
and
aad
movsb
aas
inc
ret
mov
add
js
xor
int3
cmpl
mov
pop
pusha
xchg
mov
jnp
test
dec
hlt
xchg
mov
test
push
repnz
pop
mov
add
insb
mov
and
sbb
inc
aad
stc
mov
xor
idivl
leave
ret
inc
jno
push
add
lahf
lods
outsb
sarb
test
das
cmp
sarb
scas
add
les
dec
mov
push
or
adc
jbe
and
xor
push
sbb
stos
sbb
ror
xchg
loopne
lcall
mov
outsb
daa
mov
inc
dec
cmp
lret
push
inc
in
push
xor
ficomps
gs
mov
pop
adc
jmp
bound
es
call
and
mov
jl
jbe
sbb
out
notb
jb
rcrl
inc
pop
fnstcw
sti
insl
or
mov
repz
mov
jg
sbb
inc
mov
mov
mov
push
xchg
mov
out
sub
outsb
dec
and
mov
xchg
add
adc
and
stc
jl
clc
inc
dec
leave
ret
and
int
sbb
mov
movsb
jne
pop
sub
push
stc
pop
test
push
xchg
cltd
xchg
mov
push
in
cmpl
xchg
mov
out
clc
repnz
cmpsl
into
mov
sti
push
movl
pop
in
cmpsl
cmc
arpl
stos
sub
test
fwait
inc
mov
lahf
iret
mov
xlat
enter
mov
dec
aaa
fwait
loope
je
cmp
mov
stos
mov
cli
into
lahf
or
push
out
cmpsl
insb
mov
add
or
add
jmp
push
sbb
xor
xor
add
push
or
das
ror
pop
push
cltd
mov
jbe
ja
mov
xchg
fwait
pop
jmp
fidivrl
rcrl
add
xor
nop
push
and
in
dec
jmp
sbb
cs
test
xor
aas
xor
lods
lds
hlt
cwtl
rcrb
in
int
dec
mull
in
enter
popa
ss
xchg
fwait
out
lcall
and
cmpb
xor
jbe
xlat
jl
sarb
jno
mulb
mov
scas
mov
mov
pop
push
and
push
out
enter
fdivrl
aad
mov
mov
xor
dec
jb
cmpsb
lods
fadds
dec
mov
stos
iret
es
and
shlb
jg
aas
jbe
fcmovu
sahf
or
xor
jns
scas
push
jno
sti
pop
std
mov
jg
call
add
outsb
es
pushf
push
std
bound
mov
lds
inc
adc
pop
cmp
imul
and
das
pop
movsb
sub
adc
in
jle
js
out
dec
leave
jo
mov
add
xlat
mov
cli
push
outsb
dec
insb
loope
and
sbb
mov
push
cmp
jmp
out
loopne
das
cmp
or
cmpsb
pop
std
dec
dec
adc
test
out
adc
pop
push
mov
inc
jno
inc
jnp
fptan
cli
lcall
mov
mov
pop
mov
sahf
imul
and
inc
add
es
in
and
bound
jns
xor
pop
dec
xchg
cs
mov
ljmp
push
xor
rcl
rcr
repnz
push
push
or
cmp
and
inc
mov
mov
xor
adc
mov
inc
push
test
nop
cmc
pop
lods
push
dec
pusha
movsb
popa
stc
insb
mov
pop
fldenv
cmp
mov
sbb
stos
popa
add
xchg
in
mov
fistpl
pop
dec
ror
add
sarb
or
sub
nop
jl
loop
or
jmp
mov
sub
shrb
add
subb
cli
aad
and
ljmp
sub
push
and
lret
test
std
leave
je
jmp
bnd
push
or
daa
mov
scas
sbb
in
es
adc
jae
sbb
in
cmp
fdivrs
jbe
jg
es
mov
hlt
or
sbb
xchg
jg
addr16
xlat
jb
xor
loope
push
add
daa
dec
and
mov
inc
cmp
mov
repz
mov
ljmp
sarl
xchg
rcrb
fldt
aaa
negl
out
cmp
and
mov
mov
test
sub
and
aad
frstor
loopne
fdivs
ljmp
xor
dec
mov
xor
imul
cltd
or
imul
xlat
mov
push
and
or
add
push
or
addl
cmpsb
pop
cwtl
cltd
stos
add
mov
repz
xor
dec
adc
cli
arpl
mov
xlat
insb
or
jmp
add
or
addr16
leave
faddp
lods
or
jg
fimuls
cmp
aam
fnsave
dec
adc
lods
or
and
sub
mov
std
popa
sub
push
in
adc
pop
lret
lahf
cld
mov
push
popa
out
int
or
nop
or
adc
push
loope
js
xor
aas
mov
xlat
dec
mov
jmp
repnz
repnz
mov
push
jmp
out
mov
mov
xchg
bound
jecxz
sub
fistl
inc
mov
mov
mov
outsl
adcl
mov
jmp
outsb
push
cld
add
aad
aad
pop
lods
and
add
pop
sbb
or
pop
mov
ss
rcrb
fcomip
pushf
aam
inc
or
inc
dec
cmp
aaa
lods
dec
ss
out
xchg
sbb
mov
daa
std
inc
mov
mov
rorl
or
xor
fidivrs
push
cli
push
add
sti
xor
mov
lret
mov
mov
add
jmp
jmp
push
cs
data16
js
dec
and
dec
and
sbb
mov
xor
inc
rep
addr16
sti
lds
mov
lret
fisubs
cmp
cmc
pop
in
sub
jns
aaa
pop
mov
pop
jno
sahf
xor
out
xchg
dec
inc
jne
lods
pushf
cmpsb
adc
std
xor
add
scas
cmp
jl
jmp
dec
sub
mov
sub
push
pushf
fistpl
inc
cmp
aaa
out
xor
mov
divb
xchg
and
fildll
xchg
xchg
icebp
test
popa
and
jne
or
mov
insl
ljmp
mov
adc
pop
dec
pop
mov
push
ja
jb
sti
or
loopne
jmp
call
xor
dec
adc
outsl
push
mov
jle
jmp
inc
repnz
jmp
pop
inc
mov
outsl
addr16
dec
and
aas
scas
inc
leave
out
dec
jbe
dec
sbb
icebp
test
repz
xor
or
add
sub
xchg
mov
add
aaa
outsb
fisttpl
inc
sbb
test
xor
jg
ds
cmpsl
push
xlat
mov
mov
sub
lds
stc
pop
fisttps
push
jp
push
leave
shr
mov
pushf
fwait
push
dec
cmp
and
aad
mov
jp
add
rorb
mov
out
pushl
nop
xchg
sbb
loope
fimuls
cmpb
pushf
rclb
xchg
mov
mov
cli
and
and
mov
xchg
cmpsb
gs
loopne
add
dec
daa
lods
sti
cmp
daa
cmpsl
aam
shr
addr16
push
mov
andl
pop
jecxz
je
mov
push
sbb
pop
les
in
add
push
pop
jne
or
iret
mov
sub
lret
inc
cmpsb
test
add
cmp
jmp
cltd
cmp
lods
je
cld
xchg
mov
sub
push
outsl
js
rcrl
insl
push
in
cmp
cmp
jnp
jle
arpl
inc
data16
or
in
inc
ret
loope
pop
insl
test
mov
rclb
push
insb
fldlg2
mov
push
mov
mov
jbe
jbe
shrl
movsb
jecxz
sub
test
or
mov
fisttpll
push
inc
pop
subl
push
sub
push
sub
rol
jmp
xor
mov
nop
negb
jp
push
or
sub
daa
mov
dec
insl
xor
push
adc
inc
popa
mov
dec
mov
mov
cmc
inc
push
lock
or
mov
imul
cmp
add
ja
sahf
pop
aam
sbb
int
or
jg
test
ret
ss
mov
ret
imul
mov
cltd
push
xchg
in
mov
jecxz
ljmp
mov
in
mov
xor
popa
push
push
ficoms
push
inc
add
dec
lret
repz
add
cmc
jmp
lods
aad
cmpsb
outsb
add
in
es
cmp
out
bound
sbb
and
loopne
add
sbbl
xor
push
jnp
les
cmp
mov
push
outsb
clc
fmuls
fnstenv
roll
filds
xchg
push
test
cld
push
and
xor
cmp
push
dec
popf
in
cmp
loope
xor
jno
std
hlt
lahf
mov
pop
pop
pop
lds
out
shll
fwait
nop
sbb
jbe
subb
cmc
int
cmpb
xchg
aas
call
or
clc
jmp
int
push
fwait
pmaddwd
aad
mov
mov
sahf
ret
push
xchg
out
xor
sub
or
adc
push
fxch
movsl
iret
sub
mov
dec
faddl
cli
push
mov
jno
in
subb
pushf
adc
scas
xor
call
lret
xor
or
push
sbb
cmp
jmp
mov
mov
xchg
xor
and
jns
stos
or
xchg
xchg
push
sbb
ret
arpl
adc
inc
leave
mov
adc
stc
adc
mov
test
xchg
lea
sbb
gs
inc
xchg
fdivs
movsb
lcall
inc
orb
jnp
imul
lods
mov
add
xor
jge
movsl
sbbb
cmpsb
dec
lea
sub
mov
pop
cmp
sbb
adc
mov
idivl
mov
fistpll
push
adc
push
lea
jmp
pop
or
inc
pop
sbb
repz
mov
es
fsubrl
inc
fistps
gs
lret
inc
aad
push
dec
shl
mov
int
inc
cwtl
push
mov
cli
hlt
pusha
mov
les
arpl
xor
mov
sbbl
clc
sbb
movsb
xchg
and
jns
mov
push
es
mov
push
mov
adc
sarl
sub
bound
push
jmp
jno
push
aaa
cwtl
jne
mov
add
push
ja
hlt
arpl
pop
mov
jg
sub
or
cmpsb
or
stc
call
jo
dec
movsb
inc
cwtl
pop
inc
fldcw
dec
addr16
cwtl
repz
or
jmp
cld
pop
and
stos
push
lea
test
xlat
mov
ss
jecxz
ret
inc
fcomp
lods
sub
data16
sub
inc
mov
push
pop
rcr
notb
inc
jle
in
daa
pop
sub
xor
sub
bnd
xlat
stos
mov
jp
call
mov
mov
icebp
das
lds
nop
push
sahf
mov
movsl
dec
int
and
pop
mov
xor
dec
jnp,pt
xchg
xchg
jae
pop
cltd
cmc
ja
aaa
iret
dec
lahf
push
sbb
sti
test
or
mov
dec
gs
arpl
sub
xchg
mov
test
cmp
cmp
inc
xchg
mov
mov
push
popf
xor
adc
pop
popa
add
xchg
pop
arpl
push
jb
adc
subl
inc
inc
add
insl
sar
in
mov
xor
imul
icebp
shll
pop
stos
adc
js
mov
jp
xor
icebp
inc
push
or
jno
test
add
xor
std
rorl
mov
fists
sti
in
in
pop
lret
xor
cmp
mov
leave
fcoms
lods
pop
sbb
iret
aas
push
mov
insb
inc
jbe
xchg
into
jge
push
cwtl
push
aad
add
cltd
std
xchg
addl
push
ret
ja
lret
repnz
les
sbb
push
sub
pop
js
mov
lods
call
ret
insl
xchg
jmp
sub
mov
out
fadds
dec
mov
sub
xor
out
dec
sub
mov
popa
mulb
adc
mov
repnz
clc
loopne
add
push
add
sub
scas
inc
ljmp
pop
pusha
in
xor
or
sub
mov
add
sahf
notb
pop
ljmp
stc
movsb
xlat
test
ret
arpl
mov
or
dec
call
movsl
mov
push
data16
aam
fs
xadd
push
xlat
jge
mov
pop
mov
jb
rorl
daa
add
jae
jbe
push
outsb
lahf
arpl
loope
lock
and
rolb
push
mov
cs
fsubs
jmp
mov
inc
insb
mov
pop
ret
scas
js
pop
rcl
imul
xchg
cmpl
test
in
inc
jmp
leave
data16
inc
das
test
or
cmc
jbe
fnstcw
scas
sbb
inc
test
nop
adc
mov
js
shr
xchg
inc
repnz
aam
leave
fdivr
add
push
clc
clc
fdivrl
scas
add
fsubrl
cmp
push
test
popf
jbe
pslld
subb
cmpsl
mov
mov
mov
vmwrite
jns
jne
dec
xchg
xor
data16
dec
pop
cmpsb
jne
fldenv
pop
mov
fwait
xor
imulb
mov
daa
sub
mov
or
push
imul
mov
roll
dec
leave
movsb
xor
movsb
sub
shll
cmpsb
lock
fcoml
add
inc
stc
pop
dec
mov
test
fisttps
sbb
mov
xlat
int
sub
jge
mov
shll
mov
push
imul
movsb
and
insb
inc
outsb
clc
les
mov
test
fs
cmp
insl
out
outsl
outsb
pushf
js
and
nop
pop
fadd
mov
insl
mov
xor
inc
in
shl
xchg
loope
sti
gs
ret
test
daa
jbe
enter
xchg
and
test
fmull
int3
cmp
pushf
jecxz
ja
mov
or
adc
add
mov
adc
icebp
cld
mov
js
jg
in
insb
mov
repnz
fbld
negl
ret
fstpl
push
sahf
popa
pusha
xor
mov
xchg
or
icebp
cltd
fnsave
xor
mov
pop
xor
aam
sbb
int3
mov
xchg
lret
fdivs
jno
dec
xchg
cmpsl
cmp
xor
sbb
add
or
push
adc
add
outsb
clts
xchg
gs
dec
dec
cmpsl
inc
adc
insl
push
xor
push
test
xor
mov
out
push
xchg
push
and
ja
fld
push
inc
enter
out
mov
clc
or
lds
fisttpll
fildl
ror
es
mov
mov
sub
mov
mov
mov
pop
or
out
dec
cmp
or
psrad
jns
jl
ret
pop
xchg
jmp
and
inc
push
pushf
shrl
cmp
loope
xor
xchg
adc
xchg
mov
jo
stos
daa
mov
xchg
fwait
cwtl
shlb
xchg
and
lds
repz
dec
jne
sarb
mov
push
xchg
or
js
sbb
xlat
jb
xchg
dec
mov
aaa
push
pop
cmpsl
rcrl
sbb
insb
test
adc
cli
push
clc
jmp
nop
mov
in
icebp
inc
xchg
or
ret
stos
fs
lods
cmp
adc
inc
int3
inc
and
leave
push
push
inc
fidivs
xor
push
fdecstp
xchg
sub
iret
and
aad
ret
inc
push
hlt
mov
jg
cmpsl
fdivrs
shr
gs
dec
push
ljmp
rol
ja
flds
rorb
cli
lcall
into
inc
gs
outsl
jg
jl
dec
js
cltd
push
mov
out
jge
lret
call
hlt
insb
icebp
adc
jb
jno
xchg
cmp
pushf
or
mov
push
cmc
pop
jecxz
push
cltd
mov
repnz
imul
mov
xchg
cmp
fdivp
in
inc
mov
fldcw
sahf
shrl
.byte
add
add
sbb
add
add
push
add
inc
add
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
in
int3
adc
nop
cmp
cs
stos
movsl
sub
push
shlb
lcall
test
adc
emms
loopne
sahf
dec
repnz
adc
push
mov
or
push
jne
xor
push
sahf
mov
adc
mov
xor
imul
fistpl
je
leave
cmp
push
mov
cwtl
pcmpeqw
test
jae
pop
pop
mov
and
cmp
cmpsl
inc
add
test
lcall
fidivl
cli
jmp
pop
jb
lea
call
ret
cmp
adc
pop
mov
adc
jns
mov
movsb
std
mov
inc
cwtl
outsb
fstpl
sti
mov
mov
lcall
adc
pop
xchg
sbb
popa
sarb
mov
cmp
cmp
sbb
or
mov
adc
inc
xor
clc
pop
xor
shrb
leave
mov
nop
or
dec
add
xor
mov
sbb
sbbb
lcall
mov
jbe
mov
pop
in
ja
cmp
mov
pushf
jecxz
adc
mov
inc
cmp
pop
fidivrs
push
push
int
inc
add
jnp
cltd
insl
dec
rcrb
and
and
sub
in
jne
mov
daa
sbb
mov
jmp
aaa
sbb
cmp
aaa
pusha
cltd
movsl
and
xor
out
roll
hlt
add
xlat
in
xor
mov
mov
adc
popf
sub
jne
push
les
adc
sti
jp
adc
fbld
push
jno
test
mov
jg
push
fidivrs
into
cmp
inc
rol
fwait
mov
pop
iret
adc
push
and
inc
or
push
scas
aas
negb
and
mov
out
add
adc
into
lret
sbb
cmp
push
dec
sub
ljmp
mov
lret
fiaddl
or
sbb
jmp
cld
adc
mov
xor
int3
and
add
pop
stos
popa
sti
sub
xor
mov
sarl
leave
test
xor
add
mov
push
pop
std
jl
jle
or
push
bound
test
out
and
inc
mov
or
ja
inc
cmp
or
add
outsw
push
aam
cmp
les
pop
mov
mov
lcall
scas
sbb
popa
or
mov
out
test
inc
cmp
insb
and
imulb
sbb
inc
mov
rcrb
je
sub
aas
lret
jle
push
flds
jbe
mov
mov
mov
cmpsl
inc
sbb
mov
lods
lods
pop
xor
mov
jnp
out
xchg
sbb
xchg
insb
cmp
enter
mov
into
inc
sbb
cmpsl
fs
mov
mov
sbb
fcmovbe
xor
loope
lret
push
dec
cmp
xchg
xchg
popa
sbbb
jae
andl
push
xchg
addr16
or
pop
push
dec
les
jmp
nop
cltd
rorb
and
jno
sbb
das
pop
ss
adc
adc
pop
push
and
dec
mov
mov
cmpsb
enter
adc
sub
jmp
push
dec
loope
mov
fcmovnbe
sub
aaa
xor
imul
mov
jge
add
in
mov
fnsave
and
jl
push
and
pop
dec
test
mov
icebp
jl
stos
mov
je
lds
pop
mov
mov
faddl
pop
push
insl
mov
sub
jbe
loope
shr
icebp
mov
outsl
test
fisubl
mov
lds
cmp
fimuls
mov
fimuls
cmp
dec
inc
out
jbe
daa
leave
jmp
push
daa
outsb
mov
xchg
cmp
push
into
test
pop
mov
fildl
pop
xchg
js
adc
mov
js
ljmp
aaa
rclb
sbb
push
enter
pop
cmp
sbb
pop
test
xor
and
mov
mov
data16
fbld
sub
stc
sarb
fwait
in
stos
jp
ljmp
or
inc
mov
imul
imul
ficoml
adc
jl
mov
xchg
sahf
mov
scas
cmp
xlat
mov
mov
xor
cmp
or
rcr
cmpsb
adc
in
lea
adc
lcall
push
nop
sbb
sbb
dec
xchg
push
adcl
cmpsl
out
inc
lcall
out
aas
mov
jne
gs
xchg
adc
dec
test
xchg
fidivrs
lret
and
mov
popf
daa
mov
fidivl
jne
fs
push
aaa
inc
scas
ds
lea
adc
mov
orb
mov
push
xchg
push
add
imul
sbb
stc
roll
into
pop
mov
js
test
and
cmpsl
mov
pop
rcrl
pushf
negl
mov
mov
sub
mov
cltd
je
xor
hlt
notb
dec
sahf
enter
dec
sahf
loop
adc
lret
ds
test
and
sbb
push
lds
mov
mov
sub
jae
push
jp
inc
rcrl
dec
push
data16
xchg
lret
into
mov
cltd
mov
in
mov
fwait
shl
dec
mov
mov
sbb
orl
sbb
lahf
mov
imul
daa
add
push
mov
andl
mov
jae
mull
sub
mov
adc
lcall
add
sti
mov
jno
dec
mov
sub
data16
jle
fs
push
sub
add
dec
ret
ret
sub
sub
in
mov
mov
hlt
and
cwtl
es
xchg
imul
mov
test
xchg
cmpb
lds
and
mov
sub
inc
es
xchg
lret
mov
arpl
xchg
ret
pop
mov
jb
arpl
add
into
icebp
or
scas
divl
out
mov
cltd
out
in
fwait
lea
xorb
push
in
loopne
sti
push
pop
std
popl
or
xchg
sub
jns
repnz
cmpsl
adc
mov
and
aas
test
jl
mov
xchg
es
test
cmp
pop
inc
jno,pn
sbb
lcall
js
outsb
dec
fisubrl
pushf
jb
movsl
mov
mov
and
mov
sub
test
mov
dec
outsb
call
pop
or
pop
sub
repnz
pop
idivb
into
mov
and
adc
mov
insb
loopne
divl
dec
push
mov
jne
pop
and
dec
movsl
jmp
mov
or
test
jge
cmc
jae
or
mov
imul
mov
push
fwait
aad
cli
sub
cmp
lret
in
test
sub
xchg
xlat
ret
test
std
push
fbld
loopne
int
dec
and
xor
daa
mov
cwtl
and
sbb
sbb
idivl
insb
push
mov
jne
sbb
shll
roll
push
fsubrp
inc
inc
cmp
mov
repnz
aas
pusha
xor
pop
in
pop
push
and
push
jb
pop
push
mov
mov
fwait
ljmp
mov
inc
mov
add
lahf
outsl
adc
aas
add
call
lret
push
notb
push
mov
xor
mov
ljmp
pop
test
and
pop
pop
and
leave
pop
adc
in
add
jo
and
and
scas
adcb
icebp
xchg
ljmp
fadd
insb
xchg
call
push
push
mov
in
dec
jge
inc
lods
or
std
and
ds
inc
clc
jae
xorb
mov
dec
into
and
test
push
jg
mov
add
ljmp
outsl
jo
jae
jl
mov
cmp
call
lret
sbb
test
pop
vpshuflw
jae
cltd
cmp
xchg
push
addb
or
or
jo
push
jbe
jge
sub
addr16
aaa
bound
xchg
jp
lods
in
sub
pop
mov
mov
pushf
jno
jns
test
inc
pop
popf
lret
mov
push
iret
dec
int3
sub
je
arpl
mulps
sub
test
test
shl
imul
iret
sti
sub
movsl
stos
push
loop
out
loop
int3
lods
dec
adc
jmp
icebp
jge
jge
push
out
cmc
dec
jmp
xchg
mov
mov
in
or
inc
int
jl
ja
dec
lahf
xor
jae
inc
cli
sti
mov
xchg
push
popa
or
ljmp
cmpsl
cmp
xchg
xor
sub
inc
out
sub
cs
push
rcl
scas
outsl
sti
stos
push
sub
testb
in
mov
es
cld
insb
daa
jns
mov
push
jne
mov
adc
sbb
int3
mov
popa
push
lret
or
xor
je
push
adc
mov
vpunpcklwd
mov
lret
leave
and
dec
aas
jmp
movsb
std
sub
xchg
dec
mov
push
fisttpll
movsl
nop
stos
xchg
pusha
jl
in
lret
mov
out
jg
add
push
fwait
ret
sbb
mull
sbb
daa
jecxz
xor
and
test
or
outsb
mov
hlt
jns
rorl
in
lods
xor
jp
int3
sbb
mov
pusha
fs
mov
add
mov
fldl
or
lret
jmp
mov
dec
adc
in
stos
cmp
aad
cwtl
ror
dec
inc
lret
sub
ja
out
sub
dec
jno
push
test
cli
cmp
push
fs
inc
cmp
hlt
clc
and
add
movsl
andl
mov
mov
pop
sub
xchg
mov
cmp
fidivrl
add
les
in
and
push
xor
das
aad
pop
jae
ret
xor
inc
mov
push
jnp
setl
sbb
mov
sbb
sub
lcall
push
roll
ret
rcl
mov
out
ss
cltd
stc
xor
scas
ret
adc
inc
icebp
shl
sbb
repz
ret
mov
inc
and
outsl
mov
out
mov
pushf
sbb
push
ss
out
mov
pop
in
mov
inc
enter
pushf
jno
jg
lret
mov
fbld
loop
push
dec
int3
add
inc
jae
jmp
shlb
xlat
int
stos
xor
cmp
movb
pop
xchg
sti
cmp
mov
pop
mov
add
push
sub
and
cs
fwait
scas
sbbl
sub
aaa
mov
mov
pop
xchg
pop
mov
inc
repnz
mov
cli
sbb
push
jns
mov
iret
mov
fs
and
imul
ja
shl
clc
lods
test
inc
out
dec
std
sbb
out
cmp
lods
jl
pop
dec
stos
cmp
jg
arpl
iret
fs
push
cmc
das
insl
jae
dec
scas
push
adc
pop
pushf
dec
addr16
lret
int3
lods
xor
xor
mov
mov
add
cld
icebp
cmp
stos
add
and
fildll
dec
xchg
hlt
paddq
and
imul
jbe
mov
orl
xchg
xchg
jge
out
mov
jns
inc
add
das
mov
sbb
aas
cwtl
push
cmp
pop
test
xor
test
mov
lea
mul
or
je
imulb
mov
mov
jne
out
xchg
jg
pop
mov
and
fcoms
filds
dec
leave
out
fs
adc
add
fsubs
mov
loope
jle
sahf
sub
mov
mov
mov
adc
cmp
int3
js
mov
push
inc
aas
inc
xor
jmp
std
and
push
sub
adc
jnp
jbe
xchg
fdivp
rcll
testl
xchg
jmp
jb
and
jne
shlb
data16
enter
cmc
outsl
sub
loop
sbb
dec
jp
jge
call
lds
or
addr16
jge
lcall
sbb
sbb
jle
adc
pop
ret
mov
mov
lcall
ja
sbb
jg
loope
inc
sub
fidivs
int3
xchg
popf
push
int3
das
adc
inc
es
lods
mov
cmpsb
frstor
push
shrl
sti
pop
rcl
push
adc
or
or
and
call
push
sub
adc
cmp
mov
cwtl
sbb
jnp
repz
sub
mov
cltd
sub
xchg
lods
inc
or
repz
fwait
xor
movsl
mov
dec
mov
insl
add
mov
enter
cli
mov
aas
pushf
and
mov
pop
dec
mov
mov
dec
and
daa
movsl
out
jle
adc
inc
sbb
cmp
sub
jno
jns
sbb
pop
leave
push
pop
movsb
jmp
dec
mov
rorb
fbstp
daa
js
mov
inc
mov
jp
in
negb
clc
stos
lds
xor
fists
push
push
test
pop
mov
or
push
sub
cmpsb
rorb
dec
xchg
rcrb
out
jbe
rcr
mov
mov
push
filds
fists
nop
lret
mov
dec
stc
fsubrs
rol
out
aaa
aad
mov
aad
and
pop
push
add
in
add
pop
sub
mov
ja
outsl
pushf
fiadds
and
ss
ret
jl
rclb
push
cmpsl
pop
lea
xchg
fs
call
jmp
sub
nop
push
mov
mov
gs
mov
stos
jne
cmp
inc
dec
mov
jge
stos
es
dec
xchg
mov
inc
xchg
push
cmpsl
add
imull
aad
cmp
jne
loope
push
divl
dec
repz
sub
andb
sbb
cmpl
ffree
pop
fcmovnbe
fdivr
pusha
jae
cmp
es
and
sub
sub
out
jb
insb
aas
pushf
cmp
fstpt
imulb
inc
ret
je
shlb
gs
cld
push
mov
sub
cmp
pushf
in
dec
stos
mov
out
push
lahf
jle
jo
push
in
xchg
and
xchg
aaa
fisubs
idiv
rcrl
xchg
adc
push
in
and
cmp
jae,pt
mov
and
out
sbb
xor
loop
fcoms
mov
shlb
gs
dec
add
sub
sbb
out
xor
mov
add
jo
push
push
loope
ja
xchg
adc
mov
icebp
popf
add
mov
scas
inc
push
adc
xchg
out
je
or
push
call
jg
add
jo
testl
mov
pop
xchg
inc
inc
test
dec
adc
mov
sti
jo
test
adc
sub
or
pop
adc
data16
and
das
push
adc
leave
lods
pop
test
lcall
iret
dec
in
fidivs
aad
xchg
dec
stos
and
jne
sbb
aas
outsb
mov
lahf
and
jle
adc
pop
sub
or
lcall
push
sti
ds
negb
fs
lock
int3
pusha
les
inc
call
jge
scas
mov
iret
xor
scas
sarb
cmp
cli
sub
pop
inc
mov
xchg
inc
aad
push
mov
xor
pop
int3
div
sub
push
dec
jge
pop
hlt
mov
xorb
aam
scas
insl
xchg
push
add
in
movsl
jb
dec
mov
stos
lcall
sbb
cmpsb
mov
or
or
int3
aas
add
insb
xor
adc
sahf
arpl
rclb
push
testb
rcr
ss
hlt
inc
cmpsb
ljmp
mov
ljmp
test
aas
into
mov
movsb
mov
xchg
lods
push
jmp
dec
sbb
xchg
sub
lahf
mov
jg
imul
es
ret
lcall
jbe
filds
sub
movsb
cmovb
dec
adc
or
xchg
mov
and
stc
popf
dec
or
jnp
faddl
xor
push
adc
fmull
jae
aas
cltd
bound
aad
loop
popa
loopne
xchg
fbld
inc
xor
pop
test
je
push
test
cmpsb
js
bound
sbb
sbb
in
fldl
test
call
pop
lds
adc
jge
clc
or
xlat
fdivrs
xchg
lahf
stos
push
repnz
xor
push
jo,pn
cltd
insb
fnstcw
movsb
jo
mov
fnstsw
push
arpl
arpl
lcall
xlat
or
jns
xor
adc
aad
insb
shrb
add
and
xor
cs
fisttps
gs
cmp
cmpb
pop
cltd
test
jnp
adc
es
movsl
adc
inc
fistps
aam
incb
nop
outsb
or
cltd
jg
xchg
aas
adcl
jno
fsubl
enter
jp
xor
scas
das
and
test
shll
in
mov
add
xor
mov
int
xchg
ret
test
xor
cwtl
inc
hlt
test
es
inc
out
ljmp
cltd
cmpl
jp
inc
inc
and
ret
dec
pop
lds
jmp
xor
mov
das
repz
aad
cmp
fld
imul
mov
jp
pop
arpl
or
aam
loope
jmp
sbb
repnz
ret
hlt
cmp
out
dec
mov
push
xchg
jae
xchg
test
jae
popa
in
mov
jmp
adc
popa
cli
inc
add
xchg
xor
mov
inc
sbb
xchg
adc
iret
mov
ffreep
mov
or
lods
mov
sub
dec
clc
mov
push
sub
jge
leave
lret
sbb
sbb
leave
lret
push
dec
jnp
adc
div
popl
cmp
in
pop
dec
fisubrs
add
test
das
insl
xchg
in
xchg
adc
fcom
mov
test
in
sub
push
sahf
xor
sbb
mov
lret
mov
enter
jae
aaa
cmpsl
movsb
jp
pop
lods
scas
sahf
popa
xchg
mov
mov
into
or
xchg
imul
pop
pop
push
fwait
movsl
lret
addr16
and
imul
in
jl
inc
ret
cmp
dec
cmc
cmpl
call
cmp
push
and
ret
in
push
sbb
sbb
orl
lds
scas
push
xchg
sbb
sbb
in
outsl
std
outsb
adc
xchg
jno
std
int3
or
mov
rorl
sub
scas
lods
inc
pop
sahf
pop
loopne
mov
mov
jno
xchg
out
in
dec
push
push
mov
enter
je
stos
add
jo
mov
jns
dec
ja
out
mov
dec
aas
jbe
mov
dec
dec
mov
ret
in
std
leave
rol
add
pop
imul
dec
adc
or
pop
xor
es
shll
adc
in
cmc
cmp
lock
imul
xlat
inc
pop
cmp
fdivrs
pop
lds
loopne
mov
pusha
cld
mov
push
xchg
pop
loopne
mov
icebp
repz
hlt
cld
mov
test
sbb
mov
movsl
jge
leave
xchg
xchg
sbb
sbb
loop
mov
int3
imul
popa
pushl
imul
subb
sub
pop
sub
dec
fistl
or
repz
pop
jecxz
inc
xor
jo
xchg
aas
addr16
dec
xor
xchg
cmp
mov
icebp
jp
aam
or
leave
cld
jg
jmp
jp
lods
ljmp
jg
fstpl
xchg
lcall
popf
push
mov
aaa
cli
and
fcomps
in
hlt
or
or
into
scas
imul
in
call
repz
sahf
xchg
jl
xchg
sub
xchg
mov
hlt
test
push
ljmp
out
cmpsb
mov
subl
adc
adc
ret
inc
loope
xchg
push
mov
ja
adc
lods
scas
xor
lds
daa
and
jecxz
push
dec
push
xor
pop
fdivl
mov
push
xchg
adc
fwait
add
jo
xorl
inc
inc
inc
inc
adc
xor
fs
push
in
push
test
pusha
pop
popa
addr16
fwait
cmp
xchg
fcmovnb
lods
adc
mov
cmp
and
rolb
repnz
mov
aas
shrb
aad
push
mov
cltd
clc
cltd
fists
in
or
pushf
notl
push
xchg
mov
fs
pusha
int
adc
and
enter
adc
push
jns
nop
bound
test
insb
inc
hlt
ds
mov
lods
std
jnp
dec
es
aad
iret
mov
jecxz
in
mov
pushf
out
mov
vshufps
adc
lret
push
pop
add
sahf
rorb
or
into
mov
xor
das
vmovlps
inc
mov
out
or
daa
add
dec
dec
mov
cltd
mov
sbbb
cmpsl
xor
addr16
icebp
mov
and
cmpsb
insb
cmp
test
adc
outsl
add
int3
pop
add
inc
pusha
call
sub
xor
mov
mov
adc
fs
lds
cmp
das
inc
out
adc
jae
aaa
fs
and
scas
jb
mov
add
ret
outsb
loop
leave
cwtl
inc
int
cld
in
in
adc
sbb
jne
inc
lcall
loopne
push
sbb
sbb
jle
jle
fisubrl
mov
dec
pushf
in
int
push
pop
je
fiadds
movsl
and
daa
mov
mov
mov
adc
fistpll
xchg
pop
and
add
repnz
push
sahf
pop
leave
mov
jne
pop
aaa
push
xlat
jl
loopne
adc
cmpsl
jns
hlt
xor
aas
xor
scas
xor
xor
sti
fisttps
adc
clc
cmp
xchg
popa
repnz
adc
hlt
arpl
aad
cmp
pusha
xchg
pop
cmp
push
cwtl
dec
jbe
test
gs
loope
sbb
out
jne
shl
mov
aaa
inc
gs
sub
jg
dec
adc
jns
mov
iret
cmpsl
loope
pop
into
addr16
into
mov
in
into
sarb
ficomps
and
inc
pop
or
enter
stc
or
jae
mov
lcall
xchg
pop
pusha
sub
lret
test
fstps
loop
push
fdivp
mov
push
jp
ficoml
and
add
enter
jle
jge
mov
mov
cltd
adcl
jmp
repnz
data16
fcmovu
adc
mov
jns
add
mov
nop
adc
lds
leave
out
addr16
push
xchg
adc
push
mov
stc
jo
jecxz
stc
mov
test
mov
xor
mov
fldenv
pop
mov
inc
cli
movsl
push
jg
test
inc
scas
aad
pop
lahf
mov
mov
sub
lret
icebp
outsb
jne
inc
popa
test
jl
mov
stc
sbb
cmp
add
jp
ja
in
dec
sub
lahf
cmp
mov
push
aam
or
mov
cs
test
jmp
sarb
pusha
mov
cmp
loope
fwait
xor
pop
int3
sbb
jb
inc
mull
cmp
xor
jno
fisubrl
mov
fcmove
fimuls
push
fcmovbe
and
pop
gs
or
mov
js
mov
add
addr16
push
mov
sub
cmc
fisubrs
nop
bound
xlat
outsb
idivl
rolb
xchg
lods
cmc
cmp
adc
sub
mov
fnstsw
jl
mov
push
add
out
cmp
inc
push
aad
cmp
xchg
adc
ja
out
push
lcall
stos
jae
not
sti
dec
mov
jb
inc
push
inc
mov
fistl
push
test
jmp
fstp
dec
hlt
outsb
int
rorl
adc
adc
pop
mov
xlat
pop
dec
push
dec
pusha
xor
jp
push
dec
cmpsl
sub
or
jl
add
cmp
mov
inc
dec
mov
jl
pop
ret
scas
add
gs
sbb
pop
es
pushf
cmp
gs
test
std
fwait
daa
mov
sahf
in
movsl
xchg
adc
pop
fs
cmp
dec
aad
xchg
imul
loop
jge
jg
jne
fwait
pop
inc
inc
daa
enter
sub
shlb
mov
cmp
test
int3
cmpsl
push
mov
mov
cmp
adc
iret
dec
xor
stos
cli
adc
push
mov
pop
in
add
xlat
cmp
or
mov
push
repnz
aam
jmp
xchg
mov
icebp
push
push
and
and
aam
jle
out
lods
out
movsb
aad
imul
andb
cmp
mov
in
stc
fiaddl
test
jmp
cmp
pop
sbb
ret
cmp
xor
inc
dec
mov
stos
or
dec
loopne
out
adc
pop
jns
push
fistpll
adc
push
adcl
fsubr
or
sbb
rorb
or
dec
stos
cmpsb
mov
xchg
popf
pop
xor
shlb
push
aaa
js
jbe
sbb
call
jne
mov
int3
imul
mov
sbb
push
jp
fildl
pop
imul
push
mov
xchg
rorl
aad
popa
push
fnstsw
rcr
xchg
fisubs
loop
adc
mov
or
cmp
pop
pop
xchg
fisttps
ret
stos
pop
sbb
sub
sub
nop
bound
push
imul
lahf
in
jl
mov
sub
dec
mov
inc
inc
ror
sub
mov
mov
test
push
call
pcmpeqw
push
cmp
jg
cli
lea
imul
ret
and
xchg
out
test
movsl
or
jmp
enter
lods
mov
cmpl
mov
mov
add
mov
mov
sbbl
cld
rol
mov
sbb
clc
ds
or
adc
pusha
lea
sbb
adc
or
cwtl
or
and
pop
jmp
cmp
fsubl
adc
dec
out
fs
pop
or
cld
cltd
testl
push
lods
push
test
inc
push
xlat
mov
daa
jl
andb
ss
mov
imul
mov
jge
dec
jb
cmc
jb
fwait
iret
lcall
dec
sahf
shlb
jecxz
mov
or
inc
inc
push
push
or
bound
mov
icebp
adc
lahf
sbbl
cli
jmp
stos
xor
jns
sub
cld
add
movsb
sbb
or
jne
push
ret
in
std
fisubs
ret
pushf
pushf
jns
lahf
sbb
dec
mov
fisttpll
mov
and
movsl
ret
pop
mov
repz
insb
and
xlat
fildll
pop
sti
mov
out
daa
dec
cmpsb
inc
test
adc
in
push
pop
lahf
lcall
adc
lock
xchg
or
cmp
push
mov
icebp
cmp
iret
addr16
jo
push
adc
or
inc
pop
xchg
push
lea
fs
dec
sub
sbb
test
stos
adc
mov
push
ja
mov
dec
sbb
cmp
cmpsl
in
adc
in
inc
cmp
loop
add
out
daa
ljmp
dec
or
out
in
orb
inc
pop
inc
xor
sbb
pop
lahf
fwait
add
ss
in
jle
cmp
lcall
pop
cmpsb
outsb
rorl
cmp
jae
pop
les
int
push
add
dec
leave
movsb
cmpsb
mov
leave
push
roll
out
das
movsl
out
add
popl
jl
adc
cli
sub
mov
lret
ret
mov
fstp
std
hlt
fwait
loopne
iret
jnp
sbb
ja
fistps
pop
and
adc
cs
in
add
xor
ficomps
shr
pop
sub
imul
pop
rorl
pop
mov
or
popa
pop
and
enter
or
push
or
or
sbb
mov
popf
rolb
hlt
imul
vcvttss2si
adc
addl
dec
xchg
push
insb
adc
jg
inc
mov
xchg
cwtl
xchg
adc
imul
mov
and
ja
aaa
or
out
cmc
imul
gs
dec
loopne
fidivrl
inc
sub
mov
loope
or
xor
sub
outsb
imul
das
jo
push
mov
xor
sti
stos
std
adc
dec
rorb
pop
mov
add
jae
mov
test
dec
pusha
jmp
ret
sub
pop
and
mov
popa
sbb
sub
sbb
addr16
aaa
popf
sbb
dec
jg
das
or
add
sub
sar
xor
push
cwtl
imulb
inc
jo
sbb
rcl
insl
into
test
aaa
negb
pop
out
rclb
inc
sub
push
les
out
in
gs
insl
jecxz
or
loopne
add
sbb
mov
leave
sahf
enter
cli
lcall
jae
dec
out
xchg
das
mov
sub
loop
and
addr16
popa
or
xchg
jo
push
mov
xlat
jg
pop
aad
jno
dec
ds
call
les
dec
stos
cmpsb
or
push
xchg
movsl
imul
fisubs
or
jbe
push
or
loopne
jb
pop
push
daa
lods
fimull
mov
arpl
mov
jl
dec
xor
inc
xor
aas
mov
mov
xchg
fbld
test
mov
ret
int3
sbb
mov
mov
filds
negb
roll
cmc
xor
mov
cmp
lods
cmp
pop
outsl
insl
jns
mov
dec
and
pop
mov
clc
cli
push
xor
je
lahf
stc
add
test
mov
pop
dec
add
in
mov
mov
xchg
out
mov
sbb
adc
mov
cmp
pop
jg
mov
jmp
es
mov
add
push
punpckhwd
enter
cmp
das
xor
xchg
push
xchg
pmulhw
or
inc
orb
lcall
imul
cli
sub
push
repz
test
xor
popl
cmp
add
enter
int
add
xchg
jns
mov
bound
jmp
lds
mov
and
aaa
adc
int3
mov
lcall
add
and
pop
cmp
fimuls
or
lret
xchg
sub
les
rol
daa
push
andl
test
shrl
lods
data16
leave
xchg
out
arpl
lods
fstps
xchg
xchg
sub
dec
or
mov
pop
lcall
mov
int3
sbb
inc
sub
adc
dec
test
or
mov
xor
push
mov
ret
jne
adc
out
and
xor
lods
or
jecxz
push
jge
test
xor
ljmp
lock
cltd
cmp
or
loopne
subl
inc
xor
xchg
fsts
jg
ret
js
inc
xlat
push
jae
jle
xor
fdivs
dec
sub
jne
mov
fidivs
mov
cmp
loopne
imul
xrelease
adcb
int
out
mov
or
dec
clc
and
sub
outsl
push
sub
movsb
iret
inc
sti
jo
pop
data16
add
imul
loop
xchg
fsubrs
std
repz
jb
add
xchg
rorb
mov
enter
ficoml
mov
or
jns
das
ds
or
ss
lahf
enter
sub
mov
sbb
or
int3
jle
enter
sbb
ja
sub
push
mov
jl
jmp
push
dec
cs
or
mov
cmp
imul
fucom
stos
mov
push
lods
clc
movsl
add
out
pop
cmp
pop
sub
mov
ds
das
mov
in
lock
dec
mov
repnz
or
adc
xor
push
cld
jmp
cmp
inc
push
repz
call
jp
pushf
sub
sbb
push
fsubl
add
clc
cs
out
xlat
xchg
cmp
cmpsl
ret
cld
lock
mov
stos
adc
ss
dec
jns
cli
mov
jle
xchg
push
in
push
scas
mov
adc
in
ret
and
je
iret
cmp
test
mov
jl
xchg
mov
imul
stc
in
xchg
mov
mov
xchg
out
fwait
out
shrl
xor
mov
cmp
loope
stc
fcom
hlt
cmpsl
mov
mov
mov
lgs
cmp
movsl
setle
test
shr
xor
icebp
or
daa
mov
add
insb
int
out
fidivrl
mov
push
lret
cmp
mov
dec
dec
popf
xchg
pop
mov
mov
and
push
je
or
jle,pt
inc
jne
sub
shr
test
mov
ficompl
dec
mov
mov
xchg
push
loope
in
stos
push
push
mov
popf
pop
ds
daa
cltd
repnz
jmp
sahf
and
gs
jl
lods
pop
hlt
std
lcall
mov
xlat
mov
push
fs
dec
mov
aam
lahf
xchg
and
adc
enter
lock
mov
fnsave
pop
and
mov
arpl
xchg
ficomps
vphaddbq
dec
pop
mov
xchg
push
xchg
sub
add
out
addr16
ss
stc
mov
cmp
shl
das
shr
aas
cmp
push
or
cmp
jb
int
imul
dec
xor
lea
mov
cld
movsb
inc
repz
sbb
mov
xchg
and
mov
inc
outsb
std
and
sub
imul
and
pop
mov
xchg
or
jmp
vcvtps2pd
ret
hlt
xchg
pusha
add
adc
xchg
mov
mov
jo
xor
add
xlat
mov
push
lcall
mov
push
push
adc
fwait
sbb
xchg
inc
es
subb
push
into
cmp
mov
pop
xor
mov
push
sub
mov
sti
jmpw
out
scas
pushf
sub
pop
std
xchg
sti
daa
mov
ret
mov
pop
js
ret
pop
pop
mov
push
inc
cli
jo
test
lahf
out
jg
icebp
xor
and
xchg
adc
loopne
pop
jne
sub
std
test
imul
ret
mov
pusha
imul
nop
push
sub
pop
sarb
xchg
cmp
test
xor
push
repz
sub
xchg
rcl
lds
jno
cmp
test
mov
test
mov
movsb
shrb
aad
insl
out
jo
mov
xchg
jb
ds
and
sbb
scas
mov
testl
mov
lcall
push
dec
call
int
add
mov
cmp
mov
popa
jne
push
sub
lods
dec
loope
xchg
cmp
leave
push
dec
popa
dec
pop
pop
jmp
imul
xor
jns
cmp
add
rclb
xor
push
cmp
shlb
incb
cwtl
scas
and
cld
cwtl
fdivrs
cmpsb
outsb
inc
hlt
fisttps
mov
xlat
fs
and
dec
fsubrl
into
inc
sbb
mov
ja
outsl
out
clc
ret
mov
and
lahf
jecxz
adc
xor
cmpsl
stos
xor
int
pop
sbb
xchg
mov
sti
addb
fldenv
sahf
out
je
cmp
test
push
jmp
mov
repnz
das
lcall
push
pop
mov
pop
and
xlat
inc
jge
std
and
scas
nop
scas
and
iret
addr16
xchg
dec
mov
adc
jmp
pop
stos
cs
dec
cmp
push
xchg
sbb
and
add
pop
fidivl
clc
lock
mov
cld
pop
andb
sub
enter
adc
dec
add
xor
enter
xchg
mov
jg
int3
sub
push
fildll
push
icebp
jge
dec
sbb
inc
dec
cwtl
cmp
test
movsb
cmp
mov
pusha
icebp
mov
fwait
imul
ja
adc
mov
inc
jno
sub
mov
scas
imul
mov
fstl
mov
pushf
mov
in
je
pop
insl
in
mov
inc
or
sub
sbb
xor
jnp
scas
xor
into
jecxz
and
mov
or
sbb
cld
fcomp
popa
outsl
adc
dec
xor
dec
or
dec
xlat
mov
cmp
ds
dec
inc
adc
scas
mov
mov
xchg
aam
cli
outsl
ret
jbe
test
sub
dec
dec
add
in
out
xchg
sbb
push
jmp
mov
dec
cld
call
cmp
pop
jns
xor
mov
ljmp
sub
jge
and
int
fisubrl
or
out
hlt
dec
cmp
xlat
das
stc
pop
mov
aam
adc
outsb
mov
shll
shll
inc
scas
mov
repnz
mov
mov
fsubrs
in
shlb
adc
and
xchg
cld
ret
jno
cmpsb
inc
inc
add
cmp
pushf
mov
popf
rcr
aam
rcrl
or
insl
inc
insb
pop
dec
mov
stos
sti
loope
lcall
imul
dec
lret
or
inc
loop
sahf
or
mov
shll
mov
stc
adc
and
lcall
and
subl
adc
fistpl
sar
fcoml
jnp
mov
jge
adc
dec
unpcklps
mov
jge
adc
fs
shrl
push
cmc
enter
loop
sti
cli
push
xchg
test
cmp
mull
dec
add
ja
jb
sbb
lret
call
into
xchg
in
sbb
dec
in
dec
ljmp
jmp
outsl
inc
aas
iret
in
andb
mov
and
xchg
std
stos
lock
pop
fsubr
sub
jns
or
mov
fcoms
in
stos
xlat
jle
fimull
cmp
icebp
call
add
mov
sbb
stc
jne
mov
xchg
mov
out
insb
sbb
iret
movsl
mov
and
xchg
jmp
mov
dec
xchg
das
sbb
jle
shufps
ja
add
add
push
add
ret
jecxz
and
sbbb
pop
push
test
dec
and
std
xor
cli
mov
ja
lock
sbb
scas
push
jns
pop
xchg
das
mov
leave
sub
pop
dec
popa
pop
pop
gs
std
outsl
pop
sbb
lcall
add
and
jns
shrb
jmp
push
jae
leave
out
adc
and
cmp
xlat
outsb
insb
in
lret
fdivl
dec
dec
out
pmulhuw
imul
inc
incl
sbb
dec
popf
mov
imul
xor
fs
mov
popf
sbb
adc
pop
testl
mov
addl
es
adc
mov
insl
add
jle
out
push
xor
xchg
cmpsl
lahf
push
insb
cli
xchg
mov
imul
xchg
dec
fsubs
insb
clc
data16
loop
xchg
dec
add
push
sbb
cmp
or
jns
xchg
shr
cltd
xchg
rcrb
xor
and
imul
and
aam
push
sar
insl
imul
xchg
and
dec
mov
mov
sbb
add
xchg
sbb
call
out
lret
inc
xchg
stos
leave
cmp
mov
or
mov
ljmp
in
idivl
xor
cmc
in
cld
icebp
jmp
or
imul
stos
xchg
inc
imul
popf
inc
or
mov
mov
call
ds
inc
iret
loopne
stos
hlt
sbb
mov
int3
push
gs
cmp
or
aam
push
aas
adc
stos
push
test
mov
std
imul
push
jmp
jae
mov
addr16
addl
leave
jne
fwait
leave
push
mov
push
lret
xor
jl
rorb
sbb
dec
out
mov
inc
cmc
rcll
out
lret
cli
mov
sbb
sub
jne
outsl
dec
inc
das
add
mov
pop
shlb
out
data16
cmp
lods
sbbb
cmpsb
and
pop
insl
int
mov
bound
dec
into
pop
daa
and
push
dec
cld
int3
sbb
fnstenv
mov
std
in
push
xchg
pushf
inc
xlat
fildl
pop
in
pop
loope
jmp
jo
outsl
mov
mov
mov
lcall
xlat
jmp
cmp
pop
fwait
iret
adc
inc
sub
sbb
enter
insl
cmp
out
dec
clc
mov
cs
lock
fsubrl
adcl
aaa
lahf
adc
adc
test
sbb
cld
cmp
ss
push
pushf
lahf
enter
cmp
loopne
mov
mov
inc
inc
mov
stos
jg
lock
out
sbb
jnp,pt
or
gs
iret
leave
lods
cmc
and
jae
movsl
sub
xor
and
outsb
insl
inc
xchg
lea
push
add
xor
gs
lock
lods
aaa
adc
mov
dec
sbb
into
ja
mov
cmp
mov
push
fcmovb
fs
stc
lret
mov
aaa
push
inc
lahf
shufps
lret
aas
andl
jns
cmp
sbb
aaa
and
pop
add
sbb
pop
stos
push
std
sbb
ss
ds
out
daa
lahf
mov
push
in
les
fsubrl
push
mov
rcll
loop
jbe
pop
mov
mov
loope
data16
arpl
popf
in
popf
add
add
in
mov
cs
sbb
loop
dec
aad
scas
pop
pop
xchg
aaa
call
cmp
xchg
vmovmskps
adc
sub
fisttps
jle
inc
xor
repz
stos
jns
nop
sarw
mov
out
adc
mov
test
pop
push
and
nop
xchg
jecxz
pushf
scas
add
jl
loopne
cli
aad
outsb
pop
outsl
sub
outsb
stos
or
divb
xchg
dec
mov
ljmp
mov
rcll
xor
dec
xchg
loop
pop
in
cld
out
and
jl
push
iret
dec
dec
or
mov
pop
cmc
mov
leave
xor
push
mov
push
push
jb
xor
mov
in
xor
mov
test
dec
adc
das
outsl
aaa
arpl
or
mov
jge
fs
cmp
adc
cmpsb
clc
pop
adc
dec
push
pop
in
and
outsl
cmp
lret
pop
cwtl
mov
cmc
fwait
mov
repnz
mov
add
add
into
gs
jns
xchg
repnz
mov
out
inc
or
shlb
enter
cmp
insl
gs
test
lea
add
xchg
dec
cs
ljmp
inc
jmp
push
add
push
push
fidivrs
xchg
outsl
cmc
mov
ss
stos
mov
dec
repz
xchg
cmp
and
add
mov
jmp
mov
add
lret
adc
jnp
cs
lahf
repnz
and
push
jno
aaa
imul
mov
ljmp
sub
lahf
push
adc
xor
xchg
imul
xor
repnz
and
call
rorl
cmp
or
stos
and
aad
movsb
aas
inc
ret
mov
add
js
xor
int3
cmpl
mov
pop
pusha
xchg
mov
jnp
test
dec
hlt
xchg
mov
test
push
repnz
pop
mov
add
insb
mov
and
sbb
inc
aad
stc
mov
xor
idivl
leave
ret
inc
jno
push
add
lahf
lods
outsb
sarb
test
das
cmp
sarb
scas
add
les
dec
mov
push
or
adc
jbe
and
xor
push
sbb
stos
sbb
ror
xchg
loopne
lcall
mov
outsb
daa
mov
inc
dec
cmp
lret
push
inc
in
push
xor
ficomps
gs
mov
pop
adc
jmp
bound
es
call
and
mov
jl
jbe
sbb
out
notb
jb
rcrl
inc
pop
fnstcw
sti
insl
or
mov
repz
mov
jg
sbb
inc
mov
mov
mov
push
xchg
mov
out
sub
outsb
dec
and
mov
xchg
add
adc
and
stc
jl
clc
inc
dec
leave
ret
and
int
sbb
mov
movsb
jne
pop
sub
push
stc
pop
test
push
xchg
cltd
xchg
mov
push
in
cmpl
xchg
mov
out
clc
repnz
cmpsl
into
mov
sti
push
movl
pop
in
cmpsl
cmc
arpl
stos
sub
test
fwait
inc
mov
lahf
iret
mov
xlat
enter
mov
dec
aaa
fwait
loope
je
cmp
mov
stos
mov
cli
into
lahf
or
push
out
cmpsl
insb
mov
add
or
add
jmp
push
sbb
xor
xor
add
push
or
das
ror
pop
push
cltd
mov
jbe
ja
mov
xchg
fwait
pop
jmp
fidivrl
rcrl
add
xor
nop
push
and
in
dec
jmp
sbb
cs
test
xor
aas
xor
lods
lds
hlt
cwtl
rcrb
in
int
dec
mull
in
enter
popa
ss
xchg
fwait
out
lcall
and
cmpb
xor
jbe
xlat
jl
sarb
jno
mulb
mov
scas
mov
mov
pop
push
and
push
out
enter
fdivrl
aad
mov
mov
xor
dec
jb
cmpsb
lods
fadds
dec
mov
stos
iret
es
and
shlb
jg
aas
jbe
fcmovu
sahf
or
xor
jns
scas
push
jno
sti
pop
std
mov
jg
call
add
outsb
es
pushf
push
std
bound
mov
lds
inc
adc
pop
cmp
imul
and
das
pop
movsb
sub
adc
in
jle
js
out
dec
leave
jo
mov
add
xlat
mov
cli
push
outsb
dec
insb
loope
and
sbb
mov
push
cmp
jmp
out
loopne
das
cmp
or
cmpsb
pop
std
dec
dec
adc
test
out
adc
pop
push
mov
inc
jno
inc
jnp
fptan
cli
lcall
mov
mov
pop
mov
sahf
imul
and
inc
add
es
in
and
bound
jns
xor
pop
dec
xchg
cs
mov
ljmp
push
xor
rcl
rcr
repnz
push
push
or
cmp
and
inc
mov
mov
xor
adc
mov
inc
push
test
nop
cmc
pop
lods
push
dec
pusha
movsb
popa
stc
insb
mov
pop
fldenv
cmp
mov
sbb
stos
popa
add
xchg
in
mov
fistpl
pop
dec
ror
add
sarb
or
sub
nop
jl
loop
or
jmp
mov
sub
shrb
add
subb
cli
aad
and
ljmp
sub
push
and
lret
test
std
leave
je
jmp
bnd
push
or
daa
mov
scas
sbb
in
es
adc
jae
sbb
in
cmp
fdivrs
jbe
jg
es
mov
hlt
or
sbb
xchg
jg
addr16
xlat
jb
xor
loope
push
add
daa
dec
and
mov
inc
cmp
mov
repz
mov
ljmp
sarl
xchg
rcrb
fldt
aaa
negl
out
cmp
and
mov
mov
test
sub
and
aad
frstor
loopne
fdivs
ljmp
xor
dec
mov
xor
imul
cltd
or
imul
xlat
mov
push
and
or
add
push
or
addl
cmpsb
pop
cwtl
cltd
stos
add
mov
repz
xor
dec
adc
cli
arpl
mov
xlat
insb
or
jmp
add
or
addr16
leave
faddp
lods
or
jg
fimuls
cmp
aam
fnsave
dec
adc
lods
or
and
sub
mov
std
popa
sub
push
in
adc
pop
lret
lahf
cld
mov
push
popa
out
int
or
nop
or
adc
push
loope
js
xor
aas
mov
xlat
dec
mov
jmp
repnz
repnz
mov
push
jmp
out
mov
mov
xchg
bound
jecxz
sub
fistl
inc
mov
mov
mov
outsl
adcl
mov
jmp
outsb
push
cld
add
aad
aad
pop
lods
and
add
pop
sbb
or
pop
mov
ss
rcrb
fcomip
pushf
aam
inc
or
inc
dec
cmp
aaa
lods
dec
ss
out
xchg
sbb
mov
daa
std
inc
mov
mov
rorl
or
xor
fidivrs
push
cli
push
add
sti
xor
mov
lret
mov
mov
add
jmp
jmp
push
cs
data16
js
dec
and
dec
and
sbb
mov
xor
inc
rep
addr16
sti
lds
mov
lret
fisubs
cmp
cmc
pop
in
sub
jns
aaa
pop
mov
pop
jno
sahf
xor
out
xchg
dec
inc
jne
lods
pushf
cmpsb
adc
std
xor
add
scas
cmp
jl
jmp
dec
sub
mov
sub
push
pushf
fistpl
inc
cmp
aaa
out
xor
mov
divb
xchg
and
fildll
xchg
xchg
icebp
test
popa
and
jne
or
mov
insl
ljmp
mov
adc
pop
dec
pop
mov
push
ja
jb
sti
or
loopne
jmp
call
xor
dec
adc
outsl
push
mov
jle
jmp
inc
repnz
jmp
pop
inc
mov
outsl
addr16
dec
and
aas
scas
inc
leave
out
dec
jbe
dec
sbb
icebp
test
repz
xor
or
add
sub
xchg
mov
add
aaa
outsb
fisttpl
inc
sbb
test
xor
jg
ds
cmpsl
push
xlat
mov
mov
sub
lds
stc
pop
fisttps
push
jp
push
leave
shr
mov
pushf
fwait
push
dec
cmp
and
aad
mov
jp
add
rorb
mov
out
pushl
nop
xchg
sbb
loope
fimuls
cmpb
pushf
rclb
xchg
mov
mov
cli
and
and
mov
xchg
cmpsb
gs
loopne
add
dec
daa
lods
sti
cmp
daa
cmpsl
aam
shr
addr16
push
mov
andl
pop
jecxz
je
mov
push
sbb
pop
les
in
add
push
pop
jne
or
iret
mov
sub
lret
inc
cmpsb
test
add
cmp
jmp
cltd
cmp
lods
je
cld
xchg
mov
sub
push
outsl
js
rcrl
insl
push
in
cmp
cmp
jnp
jle
arpl
inc
data16
or
in
inc
ret
loope
pop
insl
test
mov
rclb
push
insb
fldlg2
mov
push
mov
mov
jbe
jbe
shrl
movsb
jecxz
sub
test
or
mov
fisttpll
push
inc
pop
subl
push
sub
push
sub
rol
jmp
xor
mov
nop
negb
jp
push
or
sub
daa
mov
dec
insl
xor
push
adc
inc
popa
mov
dec
mov
mov
cmc
inc
push
lock
or
mov
imul
cmp
add
ja
sahf
pop
aam
sbb
int
or
jg
test
ret
ss
mov
ret
imul
mov
cltd
push
xchg
in
mov
jecxz
ljmp
mov
in
mov
xor
popa
push
push
ficoms
push
inc
add
dec
lret
repz
add
cmc
jmp
lods
aad
cmpsb
outsb
add
in
es
cmp
out
bound
sbb
and
loopne
add
sbbl
xor
push
jnp
les
cmp
mov
push
outsb
clc
fmuls
fnstenv
roll
filds
xchg
push
test
cld
push
and
xor
cmp
push
dec
popf
in
cmp
loope
xor
jno
std
hlt
lahf
mov
pop
pop
pop
lds
out
shll
fwait
nop
sbb
jbe
subb
cmc
int
cmpb
xchg
aas
call
or
clc
jmp
int
push
fwait
pmaddwd
aad
mov
mov
sahf
ret
push
xchg
out
xor
sub
or
adc
push
fxch
movsl
iret
sub
mov
dec
faddl
cli
push
mov
jno
in
subb
pushf
adc
scas
xor
call
lret
xor
or
push
sbb
cmp
jmp
mov
mov
xchg
xor
and
jns
stos
or
xchg
xchg
push
sbb
ret
arpl
adc
inc
leave
mov
adc
stc
adc
mov
test
xchg
lea
sbb
gs
inc
xchg
fdivs
movsb
lcall
inc
orb
jnp
imul
lods
mov
add
xor
jge
movsl
sbbb
cmpsb
dec
lea
sub
mov
pop
cmp
sbb
adc
mov
idivl
mov
fistpll
push
adc
push
lea
jmp
pop
or
inc
pop
sbb
repz
mov
es
fsubrl
inc
fistps
gs
lret
inc
aad
push
dec
shl
mov
int
inc
cwtl
push
mov
cli
hlt
pusha
mov
les
arpl
xor
mov
sbbl
clc
sbb
movsb
xchg
and
jns
mov
push
es
mov
push
mov
adc
sarl
sub
bound
push
jmp
jno
push
aaa
cwtl
jne
mov
add
push
ja
hlt
arpl
pop
mov
jg
sub
or
cmpsb
or
stc
call
jo
dec
movsb
inc
cwtl
pop
inc
fldcw
dec
addr16
cwtl
repz
or
jmp
cld
pop
and
stos
push
lea
test
xlat
mov
ss
jecxz
ret
inc
fcomp
lods
sub
data16
sub
inc
mov
push
pop
rcr
notb
inc
jle
in
daa
pop
sub
xor
sub
bnd
xlat
stos
mov
jp
call
mov
mov
icebp
das
lds
nop
push
sahf
mov
movsl
dec
int
and
pop
mov
xor
dec
jnp,pt
xchg
xchg
jae
pop
cltd
cmc
ja
aaa
iret
dec
lahf
push
sbb
sti
test
or
mov
dec
gs
arpl
sub
xchg
mov
test
cmp
cmp
inc
xchg
mov
mov
push
popf
xor
adc
pop
popa
add
xchg
pop
arpl
push
jb
adc
subl
inc
inc
add
insl
sar
in
mov
xor
imul
icebp
shll
pop
stos
adc
js
mov
jp
xor
icebp
inc
push
or
jno
test
add
xor
std
rorl
mov
fists
sti
in
in
pop
lret
xor
cmp
mov
leave
fcoms
lods
pop
sbb
iret
aas
push
mov
insb
inc
jbe
xchg
into
jge
push
cwtl
push
aad
add
cltd
std
xchg
addl
push
ret
ja
lret
repnz
les
sbb
push
sub
pop
js
mov
lods
call
ret
insl
xchg
jmp
sub
mov
out
fadds
dec
mov
sub
xor
out
dec
sub
mov
popa
mulb
adc
mov
repnz
clc
loopne
add
push
add
sub
scas
inc
ljmp
pop
pusha
in
xor
or
sub
mov
add
sahf
notb
pop
ljmp
stc
movsb
xlat
test
ret
arpl
mov
or
dec
call
movsl
mov
push
data16
aam
fs
xadd
push
xlat
jge
mov
pop
mov
jb
rorl
daa
add
jae
jbe
push
outsb
lahf
arpl
loope
lock
and
rolb
push
mov
cs
fsubs
jmp
mov
inc
insb
mov
pop
ret
scas
js
pop
rcl
imul
xchg
cmpl
test
in
inc
jmp
leave
data16
inc
das
test
or
cmc
jbe
fnstcw
scas
sbb
inc
test
nop
adc
mov
js
shr
xchg
inc
repnz
aam
leave
fdivr
add
push
clc
clc
fdivrl
scas
add
fsubrl
cmp
push
test
popf
jbe
pslld
subb
cmpsl
mov
mov
mov
vmwrite
jns
jne
dec
xchg
xor
data16
dec
pop
cmpsb
jne
fldenv
pop
mov
fwait
xor
imulb
mov
daa
sub
mov
or
push
imul
mov
roll
dec
leave
movsb
xor
movsb
sub
shll
cmpsb
lock
fcoml
add
inc
stc
pop
dec
mov
test
fisttps
sbb
mov
xlat
int
sub
jge
mov
shll
mov
push
imul
movsb
and
insb
inc
outsb
clc
les
mov
test
fs
cmp
insl
out
outsl
outsb
pushf
js
and
nop
pop
fadd
mov
insl
mov
xor
inc
in
shl
xchg
loope
sti
gs
ret
test
daa
jbe
enter
xchg
and
test
fmull
int3
cmp
pushf
jecxz
ja
mov
or
adc
add
mov
adc
icebp
cld
mov
js
jg
in
insb
mov
repnz
fbld
negl
ret
fstpl
push
sahf
popa
pusha
xor
mov
xchg
or
icebp
cltd
fnsave
xor
mov
pop
xor
aam
sbb
int3
mov
xchg
lret
fdivs
jno
dec
xchg
cmpsl
cmp
xor
sbb
add
or
push
adc
add
outsb
clts
xchg
gs
dec
dec
cmpsl
inc
adc
insl
push
xor
push
test
xor
mov
out
push
xchg
push
and
ja
fld
push
inc
enter
out
mov
clc
or
lds
fisttpll
fildl
ror
es
mov
mov
sub
mov
mov
mov
pop
or
out
dec
cmp
or
psrad
jns
jl
ret
pop
xchg
jmp
and
inc
push
pushf
shrl
cmp
loope
xor
xchg
adc
xchg
mov
jo
stos
daa
mov
xchg
fwait
cwtl
shlb
xchg
and
lds
repz
dec
jne
sarb
mov
push
xchg
or
js
sbb
xlat
jb
xchg
dec
mov
aaa
push
pop
cmpsl
rcrl
sbb
insb
test
adc
cli
push
clc
jmp
nop
mov
in
icebp
inc
xchg
or
ret
stos
fs
lods
cmp
adc
inc
int3
inc
and
leave
push
push
inc
fidivs
xor
push
fdecstp
xchg
sub
iret
and
aad
ret
inc
push
hlt
mov
jg
cmpsl
fdivrs
shr
gs
dec
push
ljmp
rol
ja
flds
rorb
cli
lcall
into
inc
gs
outsl
jg
jl
dec
js
cltd
push
mov
out
jge
lret
call
hlt
insb
icebp
adc
jb
jno
xchg
cmp
pushf
or
mov
push
cmc
pop
jecxz
push
cltd
mov
repnz
imul
mov
xchg
cmp
fdivp
in
inc
mov
fldcw
sahf
shrl
xchg
push
push
andb
ds
test
adc
in
adc
add
fisttps
jmp
or
fs
inc
push
sbb
sbb
mov
add
mov
jne
decl
xchg
jno
mov
push
dec
jle
shll
pop
xchg
mov
dec
popf
out
insb
and
mov
arpl
sbb
sbb
cmpsl
xor
imul
mov
bound
cwtl
loopne
int
jge
out
popa
stos
mov
jge
mov
ds
pushf
cmp
jb
inc
mov
and
imul
fstpt
add
lahf
sbb
push
es
data16
jno
out
imul
xor
sub
ljmp
ss
loopne
dec
rorl
pop
cmp
pop
jle
push
int3
scas
nop
movsl
out
lods
lcall
add
std
xchg
clc
mov
xchg
test
ret
fst
popf
pop
inc
es
push
jne
shrl
vunpcklps
xchg
cmp
inc
jp
dec
scas
movsl
xchg
sahf
ret
add
call
push
outsl
xchg
test
xor
adc
fistps
mov
dec
mov
ret
stos
inc
iret
mulb
mov
dec
shr
hlt
adc
insb
sahf
ds
lret
bound
sti
jp
push
mov
scas
ficoms
inc
inc
mov
subl
xor
adc
push
adc
outsl
xchg
jp
loop
in
cmpsl
addr16
xchg
sub
aas
das
pop
enter
inc
and
and
aad
xchg
loopne
pop
stc
in
pop
out
and
fdivrs
sbb
mov
xorl
mov
push
enter
cmp
jecxz
dec
jb
cld
dec
aaa
sbb
sahf
dec
fidivs
stc
mov
xchg
shrl
jae
pop
outsl
movsl
and
lcall
mov
jnp
lods
cltd
out
les
push
lret
shl
jae
movsb
fisubl
ljmp
push
and
scas
jp
mov
cmc
jmp
adc
pop
insb
add
push
in
and
das
call
lahf
pop
mov
bound
dec
inc
mov
and
mov
insl
repnz
pop
loop
jmp
mov
pop
cmc
lcall
pop
cwtl
aad
je
or
and
pop
inc
daa
jb
out
pop
scas
jl
fstpl
or
cmpsb
add
jnp
add
into
xchg
jb
sar
outsl
mulb
jbe
shll
pop
jl
mov
push
xchg
push
jp
inc
jnp
xchg
cwtl
jecxz
cmp
in
loopne
sub
adc
pop
sbb
out
jnp
stos
push
push
inc
ficompl
pop
sbb
push
xor
xchg
pop
lds
into
mov
std
cltd
pop
insl
hlt
xor
push
popf
mov
into
xor
push
aam
adc
cmp
cmp
dec
mov
dec
or
pusha
imul
fsubrl
cmc
shrl
jle
push
ja
rorb
push
cmpsb
mov
popa
mov
ss
bound
aam
frstor
mov
adc
sub
lahf
dec
lock
add
pop
pop
nop
or
pop
dec
addr16
xorl
cmp
push
xchg
push
aaa
subb
dec
or
push
jl
stc
xor
jb
pop
push
pop
mov
leave
and
mov
in
inc
icebp
ror
dec
jo
and
xchg
bound
cmp
jl
mov
sub
fcoms
rorb
and
pop
push
cmc
gs
add
orl
fwait
sti
in
mov
mov
fwait
jl
lods
fstpl
dec
adc
mov
out
sbb
push
sbb
adc
pop
mov
and
push
ja
movsb
sahf
lea
xchg
dec
repnz
mov
sbb
outsl
cld
fsubr
jmp
inc
xchg
mov
test
inc
xchg
or
add
adc
iret
sbb
push
sbb
cli
inc
fs
mov
mov
adc
jl
cli
mov
lahf
xlat
jne
or
int
test
pop
push
dec
add
jnp
xor
rorb
cltd
pop
repz
lahf
popf
xor
je
shrb
shr
mov
inc
shrl
dec
and
loopne
jnp
pop
enter
jae
xchg
xchg
cwtl
repz
js
mov
cmp
sbb
cmp
adc
xchg
and
adc
imul
mov
call
andb
adc
shr
ja
cmp
jnp
cmp
pusha
out
dec
sahf
push
cmp
sub
pop
dec
inc
out
imulb
imul
clc
jmp
jmp
mov
jl
fwait
bound
xorb
outsb
imul
rcrl
hlt
mov
pop
inc
outsl
add
inc
out
pop
adc
in
jge
push
adc
test
loope
fsub
lret
scas
lods
sub
movaps
mov
cmp
lret
pusha
add
sar
sahf
cmpsb
lods
xor
push
addr16
into
inc
addr16
pop
shll
repz
test
ret
and
pop
bound
xor
not
in
idivb
loop
push
and
mov
xor
mov
xor
das
hlt
popf
lods
add
push
in
aaa
mov
adc
sub
jnp
mov
stos
stc
pop
mov
lcall
stos
jae
pop
insl
js
mov
xlat
and
out
popa
test
push
mov
in
mov
hlt
dec
scas
scas
fcomp
mov
fcompl
and
ja
cmp
jle
push
jge
sahf
decl
fsubp
jae
push
xchg
push
addr16
je
imul
ret
outsb
insl
mov
nop
push
insl
jp
mov
adc
adc
mov
ja
jge
cmp
scas
data16
jle
ja
jb
call
cld
popa
jp
in
cmp
mov
rorl
in
dec
xchg
in
pop
push
scas
fwait
fs
cmp
xor
lods
xor
repnz
push
adc
adc
xchg
or
mov
xchg
shlb
ss
pop
aas
mov
sbb
inc
jnp
jl
mov
lock
dec
imul
add
push
scas
xor
das
cltd
imul
flds
test
push
dec
test
or
sar
test
dec
mov
jae
push
push
call
mov
mov
bound
data16
test
sti
ret
shlb
jbe
daa
fmull
mov
int3
fwait
xor
add
xor
dec
fdivrl
push
push
mov
das
scas
jno,pn
imul
cltd
sub
cmpb
scas
mov
sbb
fists
arpl
push
jecxz
and
pop
inc
cltd
mov
sbb
repz
xchg
or
mov
or
or
sbb
mov
aad
mov
hlt
into
call
adc
push
outsl
and
orb
pusha
daa
out
fcompl
cltd
out
pop
jns
arpl
jg
cwtl
sub
repz
pop
lahf
test
ret
nop
pop
pop
push
call
in
shrl
and
shlb
inc
es
cs
inc
mov
mov
adc
outsl
dec
xchg
in
out
stc
xor
pop
mov
test
sbbb
cltd
adc
outsb
testb
ljmp
push
icebp
fcom
inc
adc
add
repnz
outsl
fcmovbe
or
rorl
cld
cwtl
fadds
add
pop
pop
push
dec
rorb
in
and
repnz
clc
adc
je
mov
jmp
sub
lods
xlat
pop
orl
mov
rorl
pop
fwait
es
sub
lods
repnz
dec
inc
out
lds
lea
repz
sbb
fildll
xor
jecxz
dec
xor
or
pop
lcall
push
sahf
adc
add
mov
sub
mov
cltd
xchg
mov
cmp
scas
cmp
mov
daa
mov
pop
sub
mov
push
mov
cmpsl
mov
daa
sbb
push
xchg
adc
js
hlt
sub
popa
push
arpl
repnz
sbb
loop
cmp
sbb
pop
sub
and
or
test
sub
or
in
and
ret
xchg
jno
dec
jg
sbbl
jle
mov
sbb
push
jge
jl
pusha
enter
jmp
out
push
les
cmpsb
add
aaa
lcall
lahf
divl
je
push
mov
xor
jne
or
mov
lods
or
pop
bound
add
dec
mov
aaa
popa
leave
xchg
xlat
inc
cmc
add
aad
pop
stos
aad
filds
orb
das
fsubr
sub
add
jge
test
loope
push
pop
mov
js
out
cmp
aam
sbb
jl
mov
sbb
cld
hlt
mov
push
addr16
adc
shll
push
jl
in
icebp
test
sarl
frstor
inc
xchg
mov
cmp
and
ret
sub
lds
lcall
jae
sbb
cmp
push
enter
xchg
decl
in
cmp
icebp
jns
dec
inc
push
pmaxub
sbb
fnstsw
sbb
jnp
hlt
cmp
movsl
mov
pop
lods
adc
dec
adc
fcmovbe
mov
jecxz
inc
mov
scas
and
cli
lret
ljmp
cmp
xor
scas
pop
iret
mov
cli
sbb
mov
cld
fisttpll
add
psraw
add
outsl
adc
jp
int3
dec
rorb
enter
rcrl
jmp
std
adcl
pop
dec
jmp
lret
sbb
xor
popa
hlt
mov
cmp
test
push
xchg
repz
lock
out
push
iret
cmp
stos
push
push
cmc
arpl
adc
pop
sub
sub
sbb
es
mov
mov
push
xchg
adc
adc
bound
adc
cli
mov
or
movsb
rorl
xchg
sub
mov
popa
jb
rcll
ss
push
cs
inc
add
add
rolb
xor
aas
xchg
lret
rcrl
hlt
pop
lods
mov
sbb
pop
or
xchg
jae
and
mulb
mov
or
insl
ss
lcall
dec
jp
adc
sub
inc
test
mov
mov
jb
lock
push
imul
outsl
inc
js
hlt
mov
adc
test
ljmp
xchg
push
xor
in
mov
pop
jmp
ja
fldt
jne
push
mov
jbe
pop
mov
add
scas
pusha
sti
sub
sbb
fsubrs
and
hlt
cmp
or
out
movsb
imul
and
sub
test
mov
iret
xorl
inc
dec
jo
icebp
xchg
or
inc
cs
ljmp
sub
and
mov
fsubl
aam
mov
imul
loope
leave
push
test
push
fdiv
fldcw
cmpsl
fbstp
lock
insl
xchg
push
mov
xor
shlb
add
lahf
fnstsw
nop
test
scas
dec
jmp
xor
scas
jo
cld
sub
or
imul
sbb
push
repz
dec
movsl
out
sti
cmp
and
lock
ja
sub
dec
aaa
mov
out
xchg
outsb
xor
mov
xchg
dec
fiadds
push
xor
roll
xor
sub
enter
rolb
lods
shl
xchg
mov
mov
mov
hlt
pop
xchg
mov
sbb
pop
mov
out
test
add
es
pop
das
loopne
mov
mov
push
cmp
sahf
pop
out
xchg
xor
sub
lcall
cmp
or
adc
xor
lock
xor
push
or
lock
sar
idiv
dec
cli
outsl
and
mov
into
mov
out
outsb
insl
jb
adcl
popf
adc
push
cmp
adc
inc
rolb
scas
xchg
adc
inc
and
sbb
or
shll
sahf
add
stc
mov
or
or
cmp
mov
mov
out
cmp
add
fldenv
mov
sbb
dec
jno
addl
sbb
sub
inc
inc
loope
mov
outsb
dec
mov
lret
push
in
pop
out
cmp
js
sub
add
xchg
mov
jge
and
pop
hlt
hlt
jmp
jo
out
dec
pop
aad
inc
and
loop
daa
xor
cmpsb
gs
and
push
sub
or
inc
fstl
jb
xor
ror
xchg
push
inc
mov
push
test
pop
lods
pop
or
mov
fsubr
jae
cmc
or
into
outsl
cs
push
in
icebp
mov
mov
clc
xor
jb
sub
cmp
icebp
jge
es
cli
jae
and
mov
jg
hlt
lahf
scas
mov
mov
cmp
adc
xor
push
cld
cmp
lea
cltd
cmpsl
pop
mov
mov
add
shl
pop
inc
and
rol
xchg
xchg
xchg
jmp
mov
shr
movsb
imul
sub
mov
popf
call
sti
mov
sbb
pusha
icebp
ja
pop
mov
or
sbb
dec
gs
mov
xchg
add
push
mov
mov
xchg
imul
lds
jp
loope
imul
ljmp
pop
stc
or
inc
xor
push
aaa
push
mov
mov
insl
idivl
insb
push
lds
popf
inc
fwait
xchg
push
xchg
or
dec
loope
mov
mov
inc
xlat
push
arpl
loope
psubusb
xchg
enter
mov
pop
hlt
sti
and
xchg
xchg
lcall
pop
sub
inc
mov
cltd
int3
mov
adc
fwait
inc
mov
mov
inc
mov
jnp
iret
pop
cmpsb
push
fistps
rcr
repz
xchg
aam
cmp
dec
and
cmp
or
jmp
ret
inc
ficomps
mov
je
or
mov
xchg
adc
rolb
pop
sbbb
sub
sub
and
incl
adc
loope
lret
iret
outsl
jne
lds
adc
imul
dec
aad
and
aas
fs
int3
cmc
cmp
das
icebp
fcomip
xor
xlat
push
sbb
lahf
shr
clc
push
add
inc
push
push
mov
scas
dec
mov
mov
jnp
xchg
rep
mov
cmp
add
lahf
mov
sti
test
mov
xchg
push
icebp
xchg
sbb
in
clc
clc
pop
outsb
fcmovbe
adc
les
test
add
repz
mov
xchg
lock
cmp
jns
push
mov
int
jne
sbb
sbb
and
rolb
fs
lock
pop
jecxz
mov
aas
push
adc
mov
jecxz
pushf
test
adc
hlt
cmp
jnp
inc
pop
cld
pop
nop
pop
in
xor
mov
rcr
jno
adc
in
pop
cmp
xor
fwait
arpl
lret
push
aad
icebp
mov
popf
clc
sub
mov
add
stc
xor
loope
jns
add
cs
dec
xor
cmp
or
je
mov
shrb
test
mov
gs
cld
subl
fistps
mov
int3
aas
aam
push
mov
loope
adc
mov
in
fstpl
into
pop
pop
outsl
repz
dec
decl
testb
icebp
lods
lds
and
fsubr
daa
gs
shrl
imull
decb
les
loop
dec
inc
mov
inc
add
xchg
or
sbb
dec
sbb
je
jge
mov
lcall
inc
cs
test
aaa
movsl
in
push
fmull
stc
xchg
lock
push
and
subb
ja
add
lods
fwait
adc
call
cld
mov
xchg
and
adc
ja
mov
movsb
mov
xor
andb
cmp
fnstsw
mov
hlt
movsb
xor
pop
dec
mov
das
adc
sbb
rolb
sti
mov
out
gs
loopne
int3
sub
pop
mov
mov
sti
pop
xchg
push
test
push
mov
jno
dec
dec
dec
stos
imul
add
out
loope
mov
fnstsw
ja
cmc
rorl
mov
mov
movsl
push
inc
arpl
inc
lods
xor
or
ja
and
movsb
push
pushf
add
call
push
arpl
xchg
call
inc
out
arpl
scas
mov
fwait
movsl
add
push
sub
fwait
ds
dec
mov
xor
mov
pop
push
fisttps
xor
movsb
or
xor
scas
addb
repz
std
iret
int
sbb
sarl
xor
sub
add
jae
sbb
fdiv
fbld
ljmp
dec
jmp
and
push
xchg
mov
mov
sbb
das
orb
adc
pcmpgtw
cmp
pop
fdivl
mov
pop
es
fcompl
cbtw
or
cmp
lahf
scas
cmpsl
scas
mov
call
shrb
xor
outsb
addb
mov
mov
jbe
pop
enter
mov
aas
sub
pop
sub
outsb
mov
pushf
mov
dec
roll
and
pushf
lds
cmpsl
push
imul
mov
and
mov
aas
ret
cli
xchg
roll
jbe
into
fists
les
adc
mov
mov
lret
push
inc
fistpll
xor
scas
xor
push
mov
push
cwtl
adc
and
insb
mov
or
push
jecxz
mov
das
fwait
sbb
pushf
fdivrs
into
daa
sbb
sub
jnp
shrl
mov
out
loopne
imul
fimull
fdivl
cs
cmpsl
lahf
mov
out
push
cmc
or
mov
jno
and
cmp
mov
sbb
push
fisttpll
sub
bound
pop
push
adc
int
repnz
sbb
lods
jl
lock
aam
pop
fwait
xchg
scas
out
ja
push
cmp
cmp
cmp
lahf
add
sub
int3
lret
jp
fstps
mov
inc
out
imul
xor
nop
clc
pop
mov
mov
mov
jo
clc
iret
jns
push
addb
jecxz
push
pop
lcall
sub
cmp
mov
inc
out
push
popf
jge
daa
xor
or
mov
rcll
mov
lahf
and
xchg
mov
cmc
in
pop
mov
xchg
in
push
dec
jne
mov
mov
and
imul
clc
inc
pop
or
ret
dec
lea
dec
mov
xchg
js
push
lea
jge
mov
js
and
in
je
lcall
or
inc
push
les
lret
repz
imul
add
add
mov
or
in
lock
in
xchg
int3
add
jp
les
lret
mov
add
cmp
repz
scas
mov
or
push
movsb
add
inc
popa
sbb
in
xchg
push
xchg
push
int
mov
lret
sahf
in
jbe
cmpsl
pushf
fucomip
mov
pop
or
fwait
enter
test
sti
or
loope
loopne
sub
lret
sub
test
imul
in
aad
sbb
inc
mov
cmpl
sbb
cmpw
sub
cli
leave
pop
insb
shll
dec
xorb
and
mov
ss
jo
cmc
xchg
iret
into
mov
adc
mov
div
xchg
sbb
nop
lock
xor
sbb
cmp
mov
scas
push
xchg
xlat
jl
or
ds
pop
test
pop
fisubrl
testl
and
push
mov
movsb
mov
stos
xchg
repnz
loopne
rclb
pop
dec
mov
pusha
lds
cli
mov
inc
out
ja
or
shrb
enterw
or
pop
push
sbb
pop
mov
push
loop
jb
imulb
pop
xchg
cmp
cmc
std
daa
and
jle
and
out
and
mov
orb
out
lods
in
jge
js
push
sbb
out
roll
mov
fildl
cmp
cmpsb
inc
test
fnstenv
xor
in
lock
mov
cmp
je
hlt
data16
inc
xchg
inc
outsb
add
out
xchg
cmp
mov
jmp
aaa
xlat
loopnew
insl
jns
sbb
cltd
inc
test
cmp
nop
cmp
or
lods
fldcw
jp
sbb
das
mov
inc
jp
xor
mov
test
jmp
clc
jl
pop
add
enter
jmp
fisubl
mov
push
leave
push
sbb
mov
test
jl
or
aad
push
fisttpl
aaa
jl
xor
ja
lods
xchg
xor
outsb
imul
arpl
fucomip
mov
insb
lea
les
jno
jmp
and
scas
add
mov
pcmpeqw
mov
pop
jmp
in
daa
js
cltd
adc
xchg
addr16
add
lods
mov
fisubl
and
or
dec
push
inc
movsb
cmp
mov
mov
add
cli
fsubrs
sbb
pop
or
fiaddl
xchg
jp
dec
add
les
