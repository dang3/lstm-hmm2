mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
dec
add
cmp
add
add
add
add
add
or
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
cmp
mov
test
jecxz
xor
mov
cltd
mov
add
jb
testl
xchg
push
push
xlat
or
sahf
pop
je
out
push
fistps
inc
or
pop
mov
push
in
int3
repz
adc
dec
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
cmp
mov
test
jecxz
xor
mov
cltd
mov
add
jb
testl
xchg
push
push
xlat
or
sahf
pop
je
out
push
fistps
inc
or
pop
mov
push
in
int3
repz
adc
dec
and
fsts
andb
mov
arpl
sub
and
repnz
das
orb
test
cltd
sti
outsl
ds
lock
outsb
mov
movsb
int3
pusha
jmp
jge
dec
lock
popf
popf
pushf
mov
out
js
stos
inc
add
push
inc
lcall
mov
ljmp
pop
fldl
lret
repz
test
outsb
add
and
orb
pop
jecxz
dec
inc
jl
sahf
or
sub
mov
xchg
movsl
ds
or
sbb
push
out
and
addb
fcom
lea
leave
mov
inc
fnsave
repz
aad
dec
popa
mov
add
pop
sub
xchg
loope
inc
mov
subl
pop
add
mov
iret
shlb
pop
ja
cwtl
mov
sub
sub
mov
push
subl
pop
arpl
out
dec
pop
adc
jl
xor
jmp
or
jo
aas
push
lret
xchg
pop
clc
rclb
adc
adcb
icebp
cmpl
and
test
push
shl
adc
sbb
and
sub
push
les
mov
pop
inc
loop
fs
cmp
jae
pop
repnz
mov
out
leave
aaa
inc
push
push
pop
pop
cld
scas
inc
xor
int3
sub
fistl
leave
fldpi
les
js
mov
into
inc
mov
jb
cld
mov
jo
jo
xor
cmp
dec
lods
mov
xchg
sti
xchg
mov
pop
xor
sti
int3
popf
and
gs
fs
pop
push
mov
xchg
pop
outsb
jecxz
ficoml
sbb
xor
cwtl
dec
xor
aad
imul
xchg
ss
cs
mov
dec
cmc
jns
xor
inc
cmpb
add
mov
js
or
pop
mov
ljmp
rcl
or
jo
xchg
into
daa
cmc
cmp
into
shll
cs
push
pop
mov
roll
cmpsb
jle
mov
or
mov
mov
add
and
gs
mov
push
in
rorl
mov
xchg
xchg
sub
and
jmp
add
arpl
pop
fwait
je
pusha
cs
gs
dec
out
in
add
cmp
pop
cmpb
sbb
inc
scas
mov
xor
out
xchg
cmpl
nop
cmp
dec
flds
lcall
mov
xor
mov
adc
jae
scas
jno
into
fmull
dec
loope
mov
mov
mov
push
inc
outsb
inc
xchg
xor
lahf
push
movsb
mov
sahf
lret
dec
push
je
int3
cmpsl
pop
jp
out
mov
mov
push
cld
shr
test
out
xlat
xchg
jp
push
mov
mov
sbb
fcompl
arpl
xchg
cld
push
cmpsl
jnp
ret
xor
stos
dec
add
mov
add
addl
std
cmp
inc
es
and
jo
outsb
rclb
pop
hlt
jnp
into
lods
inc
mov
xorl
xchg
sub
dec
jne
incb
test
sub
xchg
mov
subb
pop
mov
lahf
jg
pop
mov
lods
stos
js
adc
sahf
lock
ds
sub
xor
or
fstpt
sub
cs
push
mov
jmp
mov
lahf
scas
repz
and
pop
push
xor
add
jno
test
push
and
mov
pop
lret
test
cmp
xchg
or
lods
sbb
into
and
sbb
lock
mov
fcompl
fwait
int
sub
scas
and
mov
jp
or
mov
inc
adc
popa
jecxz
leave
jp
ja
push
fwait
sbb
cltd
es
popa
mov
cs
sub
cmp
dec
seta
jmp
jae
mov
mov
pop
adc
ss
jmp
out
arpl
push
sarb
movl
inc
clc
and
ret
or
mov
out
jle
iret
shr
test
js
add
add
jae
imull
mov
inc
loop
push
test
cltd
mov
push
es
and
adc
roll
icebp
add
and
pop
andl
pop
stos
sub
lcall
jecxz
adc
and
ret
fxch
xchg
or
sbb
mov
cmc
and
xlat
aam
mov
js
sbb
ljmp
mov
lock
sbb
mov
push
add
xchg
add
dec
repz
and
roll
mov
push
mov
arpl
in
ret
dec
aad
ja
mov
sbb
xchg
cmp
xchg
pop
cmp
lcall
in
cmp
or
imul
sahf
scas
push
or
pop
dec
sbb
ljmp
mov
jno
idivl
lret
mov
xchg
inc
cmc
sbb
sti
movsl
enter
xchg
or
insb
sub
lret
dec
dec
idivb
dec
mov
push
jnp
notb
push
sbb
shlb
stos
xchg
lea
jmp
jp
dec
cmpsb
lock
mov
dec
add
xchg
out
mov
aas
lods
xchg
dec
js
jmp
shll
fimull
jp
mov
cltd
loope
mov
lea
xchg
push
sbb
sbb
and
aad
je
popa
jp
clc
mov
icebp
call
xchg
ds
sbb
fs
mov
scas
mov
push
test
jmp
pop
mov
into
add
or
cmpsl
movb
idivb
pop
in
inc
pop
aaa
and
cmp
int
test
rorb
push
adc
sti
loope
push
mov
xor
xor
or
arpl
sbb
push
call
adc
mov
xchg
pop
add
sub
fdivr
xlat
jne
sub
in
push
cmpsl
es
lock
aas
in
sub
int3
jp
inc
or
add
aad
pop
jno
fst
mov
insl
enter
testb
stc
stos
clc
mov
mov
das
stos
mov
pop
push
incl
inc
and
mov
lcall
arpl
jb
lret
cmp
mov
es
add
in
jnp
fcoml
fiadds
push
arpl
es
xor
inc
adcl
jns
pop
cli
lret
cmpsl
das
mov
fs
xor
sub
hlt
fildl
mov
pop
push
test
mov
cmp
add
sbbl
jle
pop
add
fstpt
jnp
shld
push
xor
inc
lods
fadd
mov
and
fadd
sbb
lret
in
cmp
shlb
bound
mov
xchg
movsb
push
sub
test
cmp
shrb
xor
mull
shl
and
mov
rcll
and
addr16
lea
mov
int
int3
mov
insb
inc
push
inc
mov
out
popa
cltd
out
aaa
xchg
das
int
mov
mov
imul
je
dec
dec
dec
pop
adc
xchg
cmp
pop
push
sbb
push
cli
mov
mov
sub
mov
jnp
inc
les
popf
lcall
arpl
stos
bt
sbb
int
popf
jle
push
xchg
arpl
and
in
mov
and
xor
adc
inc
inc
int
adc
xchg
sbb
pop
bound
add
clc
aam
cmovbe
mov
cmp
mov
lods
ret
mov
cli
lds
icebp
mov
das
mov
mov
adc
sub
xchg
cli
dec
jnp
repz
mov
push
imul
test
popa
ja
sbb
mov
push
or
push
mov
or
push
mov
push
dec
xchg
ja
jne
mov
jg
and
imul
xchg
add
stos
push
insb
leave
jge
adc
add
cmpsb
out
adc
out
rol
fwait
pusha
xorl
jle
pop
int3
les
jl
les
inc
push
inc
fwait
jnp
pop
adc
pop
movl
and
test
inc
dec
repz
mov
mov
out
inc
pop
lods
jmp
and
aam
rorl
inc
repz
call
xchg
fcomi
cmp
pop
cmp
movsb
ficoml
push
sbb
clc
in
loope
push
jle
add
das
jns
jbe
xchg
test
data16
pop
scas
ds
adc
test
std
nop
push
and
cmp
das
movsb
and
sub
xchg
sahf
fcomps
ds
and
jp
std
cmp
and
xor
sub
xlat
and
xlat
and
dec
sub
cmpl
push
xor
add
add
fcompl
mov
mov
in
dec
stc
adc
adc
repnz
pop
inc
lods
pop
cmpl
or
mov
fists
push
and
inc
adc
in
sub
add
stc
ss
out
ss
fbld
sub
mov
roll
scas
addb
xor
and
push
sub
push
jmp
es
ret
gs
or
jo
in
jp
sbb
pop
insb
scas
ja
fstl
dec
adcl
in
fbld
pop
mov
mov
mov
test
sbb
pusha
lds
cmp
sub
adc
arpl
jmp
pushf
int
jno
aad
out
jg
jecxz
adc
mov
inc
pop
mov
stc
sub
sahf
mov
cmp
cmp
mov
movsl
mov
cmc
push
rorl
ret
cmpsl
mov
pop
mov
insl
ds
add
cli
adc
js
sbb
punpckhbw
inc
cmp
pop
aas
in
xor
push
int
mov
sahf
ljmp
fwait
popa
lods
stc
and
cmp
add
inc
into
gs
add
data16
cmp
ret
flds
movsl
frstor
jne
mov
sub
imul
xchg
dec
aam
pop
adc
jb
pop
ret
xchg
sub
es
push
js
ss
mov
mov
dec
enter
int3
imul
pop
jmp
adc
fbld
jg
jno,pt
xor
pop
call
mov
lcall
xchg
nop
cmpsl
mov
test
dec
push
jg
push
andl
push
jo
in
mov
imul
pop
push
setg
sbb
adc
movsb
mov
and
jb
pop
dec
or
mov
push
jmp
jno
shlb
fdiv
jae
push
ss
cli
lock
and
push
mov
ds
popf
scas
cmpsb
test
insl
dec
enter
pop
in
jp
pop
in
repnz
push
std
out
jecxz
sbbl
push
fimuls
stos
das
mov
in
inc
dec
pop
and
outsb
mov
mov
sub
loop
xchg
insl
jne
addr16
pop
cmc
inc
mov
outsb
cmp
mull
dec
xor
xchg
pop
pop
xchg
pop
addr16
xlat
sub
push
test
orb
jae
addb
mov
adc
add
sub
pop
shl
or
fcmovnu
adc
adc
cmc
pop
lcall
mov
mov
fxch
xor
js
insb
xchg
pop
sub
popf
or
and
outsb
into
inc
mov
sbb
xchg
xor
adc
roll
in
xchg
jmp
inc
xchg
loopne
inc
sbb
cmc
nop
aas
jo
jae
dec
and
xchg
divb
loop
dec
pop
mov
les
cmp
aad
jg
and
cwtl
xchg
xchg
call
out
in
in
aam
inc
mov
sarl
xlat
add
subb
push
mov
stos
popa
jnp
cmpsl
push
movb
dec
lcall
in
cli
push
cmp
dec
fldl
insb
cld
rolb
mov
and
sti
clc
mov
push
scas
shrl
out
inc
test
in
xor
hlt
jne
and
mov
pushf
jne
pop
push
inc
sub
jmp
or
lret
es
xor
mov
popf
sti
pop
sub
jno
mov
cmc
pop
xor
repz
shrl
gs
movsl
ja
out
fisttpll
inc
std
in
nop
enter
add
icebp
inc
or
fisubl
fsubl
inc
xchg
xchg
and
testb
out
add
cmp
sar
cld
cmp
adc
push
out
dec
stos
stc
dec
leave
cmc
pop
in
loopne
notb
mov
add
cmp
repnz
repnz
mov
sti
sti
fstpl
jnp
mov
jmp
or
push
dec
sub
sub
and
or
xor
and
push
lret
or
mov
pusha
pop
out
sub
jae
adc
roll
inc
xor
mov
mov
sbb
dec
cmp
popa
arpl
test
cli
mov
jg
jge
push
mov
je
or
orl
out
inc
mov
inc
aad
xchg
inc
xchg
push
xor
jge
push
es
mov
out
loope
sub
add
push
in
cmp
fwait
xchg
mov
push
mov
xor
bound
dec
jb
pop
nop
jo
lods
fsubrl
dec
addr16
loopne
pop
sbb
jae
xchg
mov
insb
pop
cmpsb
sbb
call
xchg
cmp
aaa
pop
jp
nop
sub
lods
rcrl
repnz
lock
mov
cmpsb
dec
adc
out
add
cmpsb
xchg
jmp
rclb
fildll
jnp
xor
push
dec
pushf
dec
dec
xchg
pop
loopne
pop
mov
cmp
mov
jnp
aaa
xlat
add
es
inc
xchg
push
push
sub
outsb
pop
les
lea
mov
cmc
mov
inc
fwait
fwait
bound
rclb
dec
sbb
xor
lahf
add
nop
mov
jp
rolb
lock
mov
aam
int
movsl
xchg
stc
sbbl
jle
lods
mov
fdivs
arpl
xchg
das
loop
or
mov
mov
ja
shlb
sbb
aaa
rol
cmp
rcrb
int3
push
inc
mov
dec
or
jmp
pop
imul
push
jo
nop
rclb
xchg
out
cltd
sub
dec
das
out
mov
ror
pushf
call
jecxz
je
fiadds
popf
or
lods
add
or
loope
cs
out
add
mov
mov
inc
pusha
xchg
fbstp
test
cli
mov
mov
jnp
pop
and
add
fld
test
add
xchg
icebp
sub
ss
outsl
aaa
adc
mov
jnp
mov
push
inc
cli
or
lcall
sub
jl
push
movsb
push
mov
jbe
inc
mov
sub
cmp
jmp
lss
xchg
out
mov
das
leave
jo
dec
jecxz
xchg
fnsave
inc
mov
inc
aaa
adc
enter
ror
cmpsb
xchg
mov
out
hlt
insb
out
cmp
jno
add
das
js
adc
sub
std
loope
xchg
ss
adc
dec
pusha
fidivrs
loope
adc
insb
and
ret
push
cmp
push
jnp
mov
mov
sub
cmp
shll
loop
out
dec
movsl
mov
insb
outsb
inc
xchg
scas
jp
sti
aaa
add
cmp
adc
jmp
dec
mov
stc
mov
lret
cmp
or
adc
pop
ds
les
mov
mov
ret
adc
mull
pop
or
imul
mov
push
roll
cmpl
cltd
out
lret
ljmp
jbe
fnsave
adc
adc
jbe
sbb
inc
xchg
lods
divb
cmp
and
pop
dec
jbe
inc
sbb
or
sub
pop
mov
add
dec
add
pop
xor
fld
data16
and
in
in
out
sbbb
cli
lea
ja
cmpsb
rorb
xchg
and
cmpsl
mov
mov
loope
jo
adc
xchg
aaa
xor
cli
pop
push
pop
pop
ja
lods
adc
dec
aaa
mov
sbb
ss
arpl
das
mov
xchg
jecxz
jno
push
cmpsl
in
jns
push
push
fwait
dec
mov
cltd
and
dec
lret
es
subb
push
cli
sti
je
jp
out
add
mov
xchg
add
add
fistpl
xor
in
pushf
cld
push
mov
outsb
adc
mov
lock
jle
jl
out
les
dec
jp
jno
int
mov
negl
les
jae
fisubs
push
arpl
mov
outsl
das
fisttpl
fadd
mov
mov
gs
or
pusha
sbb
sub
cld
sbb
dec
shl
or
cmp
outsl
sub
popf
mov
out
add
stc
xchg
push
mov
xchg
push
bound
push
bnd
lret
mov
or
adc
mov
jmp
rcl
or
push
or
nop
ja
movsl
mov
out
push
aam
aaa
xchg
add
push
pushf
pop
test
mov
fcmovu
jns
pop
mov
ds
movl
lahf
lock
cmp
xor
pop
ror
outsl
dec
repz
ljmp
cmp
divps
repnz
jmp
pop
loop
cmpsb
push
cli
adc
test
in
jb
dec
mov
insb
movb
sub
or
lods
cmpsb
xor
sbb
jb
jbe
mov
shlb
lock
cmp
xchg
inc
rcl
lcall
sub
or
je
mov
jne
test
xchg
mov
imul
int
mov
jae
mov
negb
inc
sbb
adc
stos
inc
int
xchg
test
push
push
xchg
popa
xchg
jmp
jl
ret
and
ret
ret
shlb
pushf
es
cwtl
mov
sbb
sbb
pushf
cs
xor
and
cmpb
jecxz
rcll
inc
adc
shr
add
adc
ljmp
sbb
and
add
add
lods
fmul
andb
mov
cs
xor
dec
push
sub
popa
jle
sbb
fmull
lcall
scas
ret
jmp
and
jo
sub
mov
aas
fs
inc
cmpsb
bound
and
add
js
mov
adc
cs
pop
jg
xlat
arpl
repz
inc
inc
out
hlt
cmp
dec
loope
call
stos
js
leave
mov
lea
outsb
push
in
insb
mov
test
adc
lret
mov
lods
mov
inc
js
add
lods
in
into
addr16
mov
ret
fisubrs
addr16
int3
lret
out
stos
sbb
sbb
es
push
mov
aas
ds
pushf
js
loop
lods
imul
out
js
popa
movsb
jg
enter
mov
and
push
add
mov
xchg
lock
jg
mov
test
loopne
fs
dec
push
xchg
mov
enter
mov
popf
outsb
mov
insb
or
movsl
xchg
fldenv
mov
push
jg
loope
lret
mov
mov
jo
lret
test
pcmpgtw
sub
add
pop
js
pop
sub
dec
and
add
fdivrs
mov
mov
push
sub
js
js
out
fstl
jp
xor
xchg
test
ret
ljmp
pop
dec
out
pop
out
dec
in
ds
imul
mov
or
dec
ja
mov
scas
xchg
cmp
gs
mov
push
lock
sarl
mov
loop
xchg
iret
or
inc
sbbb
sarb
mov
lods
jle
or
cmp
sub
mov
inc
hlt
xchg
and
sbb
ror
push
mov
aad
outsl
cwtl
jnp
push
sbb
or
xchg
imul
enter
mov
or
fdivl
imul
cmp
or
mov
xchg
sahf
popf
fimull
xlat
adc
dec
dec
jg
loop
ss
pop
sub
mulb
pop
popa
in
pushf
push
pop
cwtl
out
mov
and
cmpsl
stos
jb
sbb
sbb
dec
push
loopne
xorb
loope
dec
dec
jne
push
cmpsl
sub
popa
pop
add
cmp
aaa
out
inc
push
iret
loopne
jo
push
or
mov
icebp
dec
sbbl
sbb
adc
and
mov
jge
pop
movsb
jecxz
add
inc
xchg
xchg
xor
cs
rol
fiaddl
mov
sbb
jmp
outsl
jmp
ljmp
fldcw
jle
and
jmp
inc
rorl
and
push
aas
test
push
jle
sbb
popf
pmulhuw
jge
in
push
jp
push
in
mov
stos
add
das
test
pop
xchg
inc
cmc
xchg
jnp
mov
daa
jl
negb
sbb
mov
dec
pop
sbb
cmpsl
popf
inc
ret
inc
testl
mov
aas
insb
mov
push
dec
push
push
and
pop
add
ds
test
jmp
arpl
push
int
sub
sbb
ja
mov
vcvtsi2sdl
mov
inc
inc
enter
pop
mov
out
pause
ss
jae
inc
outsl
lea
test
loopne
add
incl
push
ja
add
and
push
xchg
jle
sbb
lods
jno
xor
sub
addr16
mov
xor
ss
pusha
mov
call
xor
test
shll
xor
xor
out
jg
dec
cmc
shll
imul
lahf
sub
sbb
scas
fs
iret
cmp
je
mov
lock
enter
dec
or
mov
stc
insl
lods
mov
lea
sahf
in
andb
or
xchg
out
outsb
hlt
fdivs
les
mov
out
loopne
aam
pusha
in
mov
popa
mov
dec
push
xor
add
mov
inc
pop
dec
jae
shlb
and
add
and
inc
ret
rcrl
push
into
shlb
jo
xor
sti
inc
out
xor
xorl
inc
call
sbb
xor
push
mov
popf
aas
inc
adc
in
pusha
jp
xor
dec
inc
insl
pop
into
mov
fimull
cwtl
add
sub
mov
inc
ret
adc
push
iret
dec
dec
mov
mov
mov
pop
ss
sbb
jmp
mov
add
aad
rcrb
xchg
or
mov
int
imul
add
fistl
movsl
mov
mov
loop
pop
movsl
aam
cltd
adc
mov
push
xchg
jle
bound
mov
int3
loop
lods
mov
xor
mov
jbe
add
imulb
mov
rorl
loop
das
cmpsb
mov
das
aas
cmp
daa
lea
mov
cmp
or
repz
fbstp
inc
test
cmp
jnp
mov
repnz
int
hlt
cmp
inc
lea
mov
or
push
or
xchg
sbb
adc
cmp
ja
aaa
mov
mov
cltd
loope
mov
add
sbb
xchg
xchg
dec
into
imul
push
insb
sbb
jbe
popf
pop
or
adc
repz
push
and
push
cld
adc
clc
dec
push
sbb
mov
test
cmpsl
pop
aas
pop
mov
and
inc
xchg
andb
mov
popf
mov
and
cmp
loop
sbb
dec
out
mov
out
stos
inc
pop
cltd
mov
pop
mov
xor
or
adc
icebp
fisttps
inc
sub
inc
xor
daa
cmc
icebp
add
inc
jae
outsl
jmp
fmull
dec
xor
dec
stos
xchg
pop
int
xchg
push
sbb
mov
incl
inc
mov
xchg
xor
mov
push
push
inc
dec
ficompl
pop
imul
push
dec
mov
pusha
cli
cmp
adc
aaa
inc
int3
push
cmpsl
rcll
sbbl
movsl
adc
dec
ja
xorl
push
mov
in
shlb
mov
sahf
lea
int3
pop
xor
insb
pop
jo
aad
scas
in
mov
pop
shlb
int3
das
pushf
shlb
sti
fstl
loop
pop
aas
loopne
mov
pop
adc
xchg
push
push
out
scas
mov
mov
cmp
sub
aas
push
add
mov
or
cmp
cmpsb
es
mov
aam
or
js
xchg
or
jns
stos
sub
sbb
fisttpll
mov
loopne
dec
scas
push
sbb
fsubs
jno
push
pop
jo
aad
pop
fldln2
add
popl
out
lock
out
jne
push
test
inc
or
add
or
pop
jp
cmp
xlat
lcall
test
pop
push
push
adc
sti
xchg
cmp
sbb
jne
daa
adc
popf
jbe
rorl
mov
pop
aas
ror
inc
xchg
fisubs
sbb
mov
pop
loopne
cmp
movsl
push
inc
mov
shl
add
rclb
jbe
mov
add
fdivs
lds
xorl
mov
dec
outsl
movsl
sbb
mov
xor
or
test
js
mov
insb
outsl
sbb
cmc
andb
fcompl
sbb
xchg
cmpsl
bnd
and
mov
sub
or
cmp
xor
push
iret
mov
jae,pt
and
scas
mov
jp
adc
mov
mov
xor
fildll
mov
and
aam
jne
arpl
imul
sbbl
fldcw
jnp
xchg
xchg
xor
push
mov
mov
sbb
cmp
mov
cld
pop
mov
mov
cmc
push
add
mov
fdivp
aad
aad
loopne
loop
das
les
cmp
xchg
hlt
adc
mov
mov
out
xchg
push
pop
je
mov
mov
aam
fistpll
out
push
sub
add
dec
cmp
sub
dec
shlb
icebp
inc
outsl
sbb
enter
int3
stc
jno
push
imul
out
and
pop
mull
adcb
mov
test
gs
jno
fstp
leavew
pop
test
jo
aas
dec
daa
mov
pusha
jne
mov
out
sbb
inc
int
push
in
mov
insb
sahf
cmp
jmp
sub
push
movsb
jbe
mov
and
sbbl
mov
push
adc
out
inc
cmp
jbe
outsb
and
inc
cmp
sbb
adc
das
jge
cli
push
aam
sarb
sti
std
cs
outsb
or
mov
lea
jl
ljmp
mov
adc
mov
push
jecxz
popf
sub
add
inc
fadds
cli
jge
adc
mov
jnp
idivl
jecxz
movsl
fldl
sub
repnz
mov
push
xchg
jmp
imul
dec
fsubrs
xor
insb
int
mov
dec
sub
cli
adc
cwtl
and
push
pop
in
addr16
cltd
lahf
mov
mov
les
mov
pusha
dec
lahf
mov
inc
adc
dec
push
in
aas
testl
mov
dec
dec
fstpl
mov
incl
fwait
lret
icebp
push
stos
add
lahf
xchg
in
push
inc
push
call
stc
test
sbb
fisubrl
adc
sahf
inc
cli
cmpsb
xchg
dec
xorb
ret
in
outsl
push
jne
pop
jmp
popl
insl
jecxz
dec
pop
imul
mov
and
stos
dec
sbb
sbbl
cmc
je
xchg
aad
addb
std
mov
stos
xchg
out
sub
mov
mov
sbb
scas
mov
push
sbb
lea
cmp
xchg
aad
cwtl
dec
sar
aam
std
and
scas
cmp
xchg
pop
mov
pop
hlt
stos
sahf
jge
sarb
mov
out
adc
insl
sub
aas
add
push
data16
sbb
jbe
test
cwtl
mov
scas
dec
pop
lds
jo
mov
in
leave
lret
add
xchg
loope
inc
jns
movsb
lods
dec
pusha
cmp
loope
pop
bound
pop
sbb
insb
inc
hlt
or
inc
shr
js
inc
mov
in
cli
xor
into
sahf
shll
out
adc
jb
xor
outsb
icebp
pop
dec
cmpsl
loope
dec
daa
mov
xor
ljmp
stos
add
or
mov
cmp
bound
cmp
adc
dec
sbb
xlat
mov
inc
sub
jb
mov
lods
stc
in
movsb
inc
shlb
cld
mov
int3
out
in
loop
add
inc
mov
xchg
enter
pop
pop
add
pop
pop
sub
leave
mov
sbb
sahf
jbe
pusha
add
mov
adc
xchg
jmp
and
movsb
mov
xor
into
xchg
mov
call
hlt
pop
scas
and
mov
push
test
jl
mov
fadd
xchg
inc
push
sbb
jo
mov
push
inc
sbb
inc
mov
push
loop
inc
dec
mov
sbb
int3
pop
push
or
fiaddl
mov
shlb
ret
insl
data16
inc
mov
adc
mov
scas
jno
xor
jmp
cmc
scas
or
lea
cmp
rcrb
aaa
dec
inc
daa
ljmp
clc
push
shrb
leave
jle
xchg
jb
push
inc
out
xor
dec
adc
jecxz
arpl
cwtl
in
mov
xchg
aam
mov
and
dec
lods
pop
notl
jle
xchg
mov
loope
add
call
das
cld
pop
mov
lods
fldenv
in
cmp
stos
popa
xchg
add
int3
xor
or
outsb
stos
cltd
sarb
jae
scas
xor
out
loope
iret
clc
sub
xchg
scas
push
enter
add
cmpl
inc
call
aad
stc
out
mov
es
aaa
sub
cmp
cmc
push
insb
pop
dec
add
daa
mov
ja
mov
ret
aaa
push
adc
je
inc
ror
divb
and
out
rolb
xchg
insl
inc
push
dec
int
mov
xchg
adc
insl
outsl
mov
fbstp
sub
sahf
loop
mov
pushf
mov
shlb
movsb
xchg
stos
mov
in
fwait
bound
mov
loope
and
prefetcht1
mov
sbb
leave
mov
cmp
dec
or
adc
jecxz
fcomi
adc
loope
rolb
jmp
jae
out
pop
inc
cmp
in
imul
aam
out
push
and
sti
add
cmc
enter
xchg
iret
jne
xchg
xchg
pop
cmpl
test
pop
mov
and
stc
push
dec
mov
bound
movsl
mov
pop
neg
or
inc
aas
pop
or
cmp
cmp
orb
insl
mov
scas
stos
sub
dec
sbb
inc
dec
insb
push
push
lock
adc
jp
lock
in
sub
bound
jns
sub
scas
or
push
mov
push
sahf
pop
xchg
test
cmp
loopne
popa
jmp
inc
xor
loop
cmc
ljmp
jns
push
notb
sbb
xor
int3
scas
mov
aad
xchg
fistpl
push
or
mov
mov
sti
lret
arpl
dec
arpl
gs
mov
outsb
sahf
lods
cs
popa
push
loop
ror
xor
add
gs
cmpsb
jp
jmp
mov
pop
imul
scas
inc
xchg
rcll
or
push
and
lcall
shll
add
lea
sub
sub
dec
lods
add
lea
mov
cmp
dec
push
lea
mov
xor
movsl
into
push
popa
int3
mov
or
xor
xorb
into
jp
je
bound
imull
and
hlt
and
movsb
std
push
hlt
fstpt
out
test
je
cs
insl
sub
jne
jle
dec
push
ljmp
mov
ja
jle
mov
cltd
scas
mov
jbe
inc
in
dec
fwait
mov
scas
mov
aam
int3
xor
pusha
adc
add
xlat
lret
dec
shlb
sbb
es
pop
imul
stc
xor
aaa
adcb
mov
ret
xlat
adc
pusha
pop
adc
pop
add
mov
sarl
stos
cltd
lock
fcompl
jp
dec
xor
xor
jb
cmc
imul
jecxz
call
frstor
call
add
xchg
es
xor
les
adc
repz
jo
outsb
jmp
repz
mov
es
fcomp
adc
dec
enter
dec
sahf
inc
pop
leave
insl
sbb
cmp
mov
mov
jp
mov
sbb
ja
jmp
xchg
or
add
js
sub
bound
outsb
lcall
rcr
pop
lahf
xorb
jae
mov
sbb
pop
jp
and
inc
je
dec
imul
xor
xchg
iret
mov
pop
insl
sarl
jl
add
ret
sub
scas
out
xor
and
test
cltd
out
dec
pop
stos
mov
pusha
cmpsb
les
test
movntq
loope
jne
push
cwtl
mov
inc
push
or
pop
shrl
jbe
and
mov
push
rorb
add
cmpsb
lcall
push
imul
push
adc
lcall
lds
scas
stos
pusha
mov
push
iret
push
push
xchg
cmp
cmpsb
sub
inc
mov
sti
lods
lea
push
push
cmp
cmp
dec
dec
mov
lahf
pop
hlt
jl
syscall
dec
insl
pop
imul
xor
repnz
repz
aam
negl
inc
dec
mov
ficomps
sar
sar
sub
xlat
push
in
jp
cmp
ret
arpl
aaa
push
pop
inc
rcrl
push
mov
and
fistl
pop
out
ficoms
orb
ds
inc
rdmsr
or
mov
jp
sbb
cmp
lahf
or
jge
adc
sub
push
aaa
push
pop
bound
sbb
cmpsl
movsb
mov
out
add
iret
daa
adc
hlt
fcompl
or
dec
inc
idivb
aas
push
push
fimuls
pop
sub
decb
aaa
mov
add
pop
int
dec
ffree
imul
cmpsl
add
mov
mov
mov
pusha
push
dec
sub
jg
outsl
mov
jns
xor
jmp
pop
mov
mov
in
fsub
fsubr
sahf
mov
sbb
rolb
pop
roll
in
sbb
mov
push
cmp
fildll
lods
sarb
pop
loopne
cmp
shlb
jne
fiaddl
enter
idivl
icebp
sbb
adc
andl
dec
cmp
fisttps
dec
jne
pop
inc
mov
lret
mov
mov
jmp
es
fstps
mov
bound
mov
or
rcr
cld
test
and
cmp
pop
stos
ljmp
adc
movsl
dec
insl
push
xchg
loop
divb
mov
adc
in
adc
and
es
les
add
xor
cmpsl
mov
pop
or
les
outsb
cmp
sbb
inc
scas
scas
add
mov
adc
mov
pushf
fcmovbe
outsb
stc
xor
adc
int
gs
icebp
or
loope
pop
xchg
dec
lcall
cmpsb
xchg
fisttpll
adc
xchg
pop
rcrb
loopne
in
dec
pusha
ret
iret
or
cwtl
and
ja
jl
mov
xchg
push
xor
mov
repz
pop
xchg
test
adc
dec
pusha
sbb
ffree
roll
rcll
rcr
out
and
pop
mov
push
adc
or
mov
add
imul
cmp
pop
cmp
cmpsb
sub
pop
stc
adc
pop
addr16
mov
ja
mov
mul
int
icebp
mov
mov
xor
sub
leave
push
js
sub
pop
fimuls
push
daa
cmp
dec
mov
jg
mov
xor
fnstsw
or
or
or
nop
pop
mov
popa
les
stc
jecxz
add
sub
mov
sbb
dec
je
xor
add
mov
lcall
xchg
subl
mov
popa
aam
dec
das
mov
or
pop
fimuls
js
cli
in
es
loop
xor
inc
not
inc
jbe
leave
je
loope
pop
adc
xorl
sub
les
xchg
dec
clc
loopne
xor
push
sub
clc
push
test
cli
clc
pop
sbb
fs
gs
lods
out
mov
clc
lock
adc
and
bound
aaa
push
stos
xchg
cmp
leave
enter
inc
xchg
inc
out
fld
lret
pop
aaa
fisttps
add
into
test
addr16
cld
xchg
dec
xor
push
insl
mov
add
pop
les
jge
imul
arpl
imul
push
pop
or
and
jl
push
shrb
outsl
sbb
mov
lods
add
je
out
mov
lret
adc
sub
lea
jno
mov
mov
int
mov
lret
cltd
hlt
mov
into
adc
aad
aaa
pop
or
out
fmuls
xlat
pop
es
sahf
xchg
fnsave
xchg
movsb
rolb
shll
xchg
in
mov
cltd
pop
dec
mov
jb
xchg
or
jo
xchg
push
ss
aam
out
mov
mov
imul
ret
movsl
xor
pusha
in
out
andb
inc
scas
bound
fmull
push
adc
call
inc
movb
adc
pop
lcall
fnstenv
out
fidivrl
mov
ret
jge
fdivrs
daa
sub
movsb
in
dec
inc
adc
mov
mov
bnd
pop
pop
push
addr16
xorb
mov
roll
inc
and
mov
pop
insb
dec
pop
cli
fs
sarb
dec
fists
and
dec
jo
xor
lcall
and
out
add
cmpsl
in
testb
cmp
pop
lret
xchg
and
xchg
in
enter
cmp
pop
arpl
xchg
popf
cmc
test
jns
arpl
xchg
sub
push
shr
cmpsl
mov
bound
push
in
xor
inc
shlb
lcall
imul
sub
ror
movsl
add
inc
xchg
movsb
mov
les
icebp
jecxz
sbb
jge
sbb
in
pop
jecxz
dec
sub
adcl
adc
xchg
xchg
cmc
outsl
std
and
sub
push
into
mov
leave
and
ficoml
push
pop
aad
pop
mov
mov
pusha
jmp
inc
scas
xlat
adc
repnz
imul
xchg
jge
callw
aam
pop
fwait
ds
push
jle
cwtl
aaa
stc
cld
sub
dec
test
sub
aas
cld
sar
sbb
mov
cltd
mov
inc
xchg
jmp
decl
movsl
jg
xor
push
inc
cmp
adcl
mov
push
pop
xor
xor
mov
data16
inc
hlt
cmp
repnz
cmp
test
inc
and
daa
fs
ss
mov
lret
cmpsl
and
cs
shrb
inc
adc
les
mov
int3
mov
xor
xchg
xchg
pop
and
pushf
xchg
insl
lahf
mov
xchg
in
or
add
adc
xor
ja
mov
test
sub
adc
push
fwait
mov
push
cmpb
loop
add
pop
jecxz
mov
sbbl
or
push
inc
adc
mov
sbb
xor
ret
repnz
out
add
xor
fsqrt
rcll
inc
int3
lea
test
data16
mov
inc
dec
adcb
std
int3
sub
sbb
or
.byte
add
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
je
pminsw
div
add
mov
incb
dec
xchg
or
mov
scas
jno
ficoml
ret
mov
outsb
pop
inc
xchg
mov
ss
dec
xorl
cmpsl
mov
cmp
pop
daa
movb
lea
mov
pop
mov
int
xchg
cmp
lds
aas
dec
dec
or
movsl
orb
and
or
aas
fldenv
gs
xchg
push
lea
adc
mov
mov
cmc
inc
jne
fcoml
out
sub
pop
lods
mov
jb
loopne
cmpb
scas
clc
cmpsl
imul
adc
cmpsb
out
repz
setle
test
mov
scas
push
xor
adc
in
icebp
sub
or
xor
loop
mov
lret
aam
or
pop
add
scas
adc
adcb
mov
outsb
insb
xlat
lret
inc
jno
testl
adc
dec
clc
roll
adc
test
ljmp
ret
jp
cmp
sti
and
cli
pop
ljmp
inc
clc
xor
cmp
adc
das
std
jae
add
fs
inc
cld
gs
popw
imul
dec
cmpb
inc
sub
addr16
out
outsb
adc
jb
fmull
iret
adc
and
in
push
pop
xchg
xor
xor
mov
bound
mov
cmp
or
pop
daa
jnp
cmp
mov
jecxz
xchg
iret
xor
push
mov
sub
xlat
arpl
test
fdivrl
mov
sub
inc
loope
pop
xchg
pusha
pop
jle
inc
and
cmp
lods
jb
dec
jns
mov
lea
push
fsubp
mov
jb
xchg
mul
sub
movsl
adc
add
out
mov
es
inc
pop
fisubs
nop
xor
push
stos
popf
cmp
mov
fs
fbstp
and
leave
xchg
call
cmc
sti
sahf
inc
test
fwait
xor
stc
xchg
and
or
jge
call
mov
leave
addb
dec
xor
cmp
mov
test
jecxz
xor
mov
cltd
mov
add
jb
testl
xchg
push
push
xlat
or
sahf
pop
je
out
push
fistps
inc
or
pop
mov
push
in
int3
repz
adc
dec
and
fsts
andb
mov
arpl
sub
and
repnz
das
orb
test
cltd
sti
outsl
ds
lock
outsb
mov
movsb
int3
pusha
jmp
jge
dec
lock
popf
popf
pushf
mov
out
js
stos
inc
add
push
inc
lcall
mov
ljmp
pop
fldl
lret
repz
test
outsb
add
and
orb
pop
jecxz
dec
inc
jl
sahf
or
sub
mov
xchg
movsl
ds
or
sbb
push
out
and
addb
fcom
lea
leave
mov
inc
fnsave
repz
aad
dec
popa
mov
add
pop
sub
xchg
loope
inc
mov
subl
pop
add
mov
iret
shlb
pop
ja
cwtl
mov
sub
sub
mov
push
subl
pop
arpl
out
dec
pop
adc
jl
xor
jmp
or
jo
aas
push
lret
xchg
pop
clc
rclb
adc
adcb
icebp
cmpl
and
test
push
shl
adc
sbb
and
sub
push
les
mov
pop
inc
loop
fs
cmp
jae
pop
repnz
mov
out
leave
aaa
inc
push
push
pop
pop
cld
scas
inc
xor
int3
sub
fistl
leave
fldpi
les
js
mov
into
inc
mov
jb
cld
mov
jo
jo
xor
cmp
dec
lods
mov
xchg
sti
xchg
mov
pop
xor
sti
int3
popf
and
gs
fs
pop
push
mov
xchg
pop
outsb
jecxz
ficoml
sbb
xor
cwtl
dec
xor
aad
imul
xchg
ss
cs
mov
dec
cmc
jns
xor
inc
cmpb
add
mov
js
or
pop
mov
ljmp
rcl
or
jo
xchg
into
daa
cmc
cmp
into
shll
cs
push
pop
mov
roll
cmpsb
jle
mov
or
mov
mov
add
and
gs
mov
push
in
rorl
mov
xchg
xchg
sub
and
jmp
add
arpl
pop
fwait
je
pusha
cs
gs
dec
out
in
add
cmp
pop
cmpb
sbb
inc
scas
mov
xor
out
xchg
cmpl
nop
cmp
dec
flds
lcall
mov
xor
mov
adc
jae
scas
jno
into
fmull
dec
loope
mov
mov
mov
push
inc
outsb
inc
xchg
xor
lahf
push
movsb
mov
sahf
lret
dec
push
je
int3
cmpsl
pop
jp
out
mov
mov
push
cld
shr
test
out
xlat
xchg
jp
push
mov
mov
sbb
fcompl
arpl
xchg
cld
push
cmpsl
jnp
ret
xor
stos
dec
add
mov
add
addl
std
cmp
inc
es
and
jo
outsb
rclb
pop
hlt
jnp
into
lods
inc
mov
xorl
xchg
sub
dec
jne
incb
test
sub
xchg
mov
subb
pop
mov
lahf
jg
pop
mov
lods
stos
js
adc
sahf
lock
ds
sub
xor
or
fstpt
sub
cs
push
mov
jmp
mov
lahf
scas
repz
and
pop
push
xor
add
jno
test
push
and
mov
pop
lret
test
cmp
xchg
or
lods
sbb
into
and
sbb
lock
mov
fcompl
fwait
int
sub
scas
and
mov
jp
or
mov
inc
adc
popa
jecxz
leave
jp
ja
push
fwait
sbb
cltd
es
popa
mov
cs
sub
cmp
dec
seta
jmp
jae
mov
mov
pop
adc
ss
jmp
out
arpl
push
sarb
movl
inc
clc
and
ret
or
mov
out
jle
iret
shr
test
js
add
add
jae
imull
mov
inc
loop
push
test
cltd
mov
push
es
and
adc
roll
icebp
add
and
pop
andl
pop
stos
sub
lcall
jecxz
adc
and
ret
fxch
xchg
or
sbb
mov
cmc
and
xlat
aam
mov
js
sbb
ljmp
mov
lock
sbb
mov
push
add
xchg
add
dec
repz
and
roll
mov
push
mov
arpl
in
ret
dec
aad
ja
mov
sbb
xchg
cmp
xchg
pop
cmp
lcall
in
cmp
or
imul
sahf
scas
push
or
pop
dec
sbb
ljmp
mov
jno
idivl
lret
mov
xchg
inc
cmc
sbb
sti
movsl
enter
xchg
or
insb
sub
lret
dec
dec
idivb
dec
mov
push
jnp
notb
push
sbb
shlb
stos
xchg
lea
jmp
jp
dec
cmpsb
lock
mov
dec
add
xchg
out
mov
aas
lods
xchg
dec
js
jmp
shll
fimull
jp
mov
cltd
loope
mov
lea
xchg
push
sbb
sbb
and
aad
je
popa
jp
clc
mov
icebp
call
xchg
ds
sbb
fs
mov
scas
mov
push
test
jmp
pop
mov
into
add
or
cmpsl
movb
idivb
pop
in
inc
pop
aaa
and
cmp
int
test
rorb
push
adc
sti
loope
push
mov
xor
xor
or
arpl
sbb
push
call
adc
mov
xchg
pop
add
sub
fdivr
xlat
jne
sub
in
push
cmpsl
es
lock
aas
in
sub
int3
jp
inc
or
add
aad
pop
jno
fst
mov
insl
enter
testb
stc
stos
clc
mov
mov
das
stos
mov
pop
push
incl
inc
and
mov
lcall
arpl
jb
lret
cmp
mov
es
add
in
jnp
fcoml
fiadds
push
arpl
es
xor
inc
adcl
jns
pop
cli
lret
cmpsl
das
mov
fs
xor
sub
hlt
fildl
mov
pop
push
test
mov
cmp
add
sbbl
jle
pop
add
fstpt
jnp
shld
push
xor
inc
lods
fadd
mov
and
fadd
sbb
lret
in
cmp
shlb
bound
mov
xchg
movsb
push
sub
test
cmp
shrb
xor
mull
shl
and
mov
rcll
and
addr16
lea
mov
int
int3
mov
insb
inc
push
inc
mov
out
popa
cltd
out
aaa
xchg
das
int
mov
mov
imul
je
dec
dec
dec
pop
adc
xchg
cmp
pop
push
sbb
push
cli
mov
mov
sub
mov
jnp
inc
les
popf
lcall
arpl
stos
bt
sbb
int
popf
jle
push
xchg
arpl
and
in
mov
and
xor
adc
inc
inc
int
adc
xchg
sbb
pop
bound
add
clc
aam
cmovbe
mov
cmp
mov
lods
ret
mov
cli
lds
icebp
mov
das
mov
mov
adc
sub
xchg
cli
dec
jnp
repz
mov
push
imul
test
popa
ja
sbb
mov
push
or
push
mov
or
push
mov
push
dec
xchg
ja
jne
mov
jg
and
imul
xchg
add
stos
push
insb
leave
jge
adc
add
cmpsb
out
adc
out
rol
fwait
pusha
xorl
jle
pop
int3
les
jl
les
inc
push
inc
fwait
jnp
pop
adc
pop
movl
and
test
inc
dec
repz
mov
mov
out
inc
pop
lods
jmp
and
aam
rorl
inc
repz
call
xchg
fcomi
cmp
pop
cmp
movsb
ficoml
push
sbb
clc
in
loope
push
jle
add
das
jns
jbe
xchg
test
data16
pop
scas
ds
adc
test
std
nop
push
and
cmp
das
movsb
and
sub
xchg
sahf
fcomps
ds
and
jp
std
cmp
and
xor
sub
xlat
and
xlat
and
dec
sub
cmpl
push
xor
add
add
fcompl
mov
mov
in
dec
stc
adc
adc
repnz
pop
inc
lods
pop
cmpl
or
mov
fists
push
and
inc
adc
in
sub
add
stc
ss
out
ss
fbld
sub
mov
roll
scas
addb
xor
and
push
sub
push
jmp
es
ret
gs
or
jo
in
jp
sbb
pop
insb
scas
ja
fstl
dec
adcl
in
fbld
pop
mov
mov
mov
test
sbb
pusha
lds
cmp
sub
adc
arpl
jmp
pushf
int
jno
aad
out
jg
jecxz
adc
mov
inc
pop
mov
stc
sub
sahf
mov
cmp
cmp
mov
movsl
mov
cmc
push
rorl
ret
cmpsl
mov
pop
mov
insl
ds
add
cli
adc
js
sbb
punpckhbw
inc
cmp
pop
aas
in
xor
push
int
mov
sahf
ljmp
fwait
popa
lods
stc
and
cmp
add
inc
into
gs
add
data16
cmp
ret
flds
movsl
frstor
jne
mov
sub
imul
xchg
dec
aam
pop
adc
jb
pop
ret
xchg
sub
es
push
js
ss
mov
mov
dec
enter
int3
imul
pop
jmp
adc
fbld
jg
jno,pt
xor
pop
call
mov
lcall
xchg
nop
cmpsl
mov
test
dec
push
jg
push
andl
push
jo
in
mov
imul
pop
push
setg
sbb
adc
movsb
mov
and
jb
pop
dec
or
mov
push
jmp
jno
shlb
fdiv
jae
push
ss
cli
lock
and
push
mov
ds
popf
scas
cmpsb
test
insl
dec
enter
pop
in
jp
pop
in
repnz
push
std
out
jecxz
sbbl
push
fimuls
stos
das
mov
in
inc
dec
pop
and
outsb
mov
mov
sub
loop
xchg
insl
jne
addr16
pop
cmc
inc
mov
outsb
cmp
mull
dec
xor
xchg
pop
pop
xchg
pop
addr16
xlat
sub
push
test
orb
jae
addb
mov
adc
add
sub
pop
shl
or
fcmovnu
adc
adc
cmc
pop
lcall
mov
mov
fxch
xor
js
insb
xchg
pop
sub
popf
or
and
outsb
into
inc
mov
sbb
xchg
xor
adc
roll
in
xchg
jmp
inc
xchg
loopne
inc
sbb
cmc
nop
aas
jo
jae
dec
and
xchg
divb
loop
dec
pop
mov
les
cmp
aad
jg
and
cwtl
xchg
xchg
call
out
in
in
aam
inc
mov
sarl
xlat
add
subb
push
mov
stos
popa
jnp
cmpsl
push
movb
dec
lcall
in
cli
push
cmp
dec
fldl
insb
cld
rolb
mov
and
sti
clc
mov
push
scas
shrl
out
inc
test
in
xor
hlt
jne
and
mov
pushf
jne
pop
push
inc
sub
jmp
or
lret
es
xor
mov
popf
sti
pop
sub
jno
mov
cmc
pop
xor
repz
shrl
gs
movsl
ja
out
fisttpll
inc
std
in
nop
enter
add
icebp
inc
or
fisubl
fsubl
inc
xchg
xchg
and
testb
out
add
cmp
sar
cld
cmp
adc
push
out
dec
stos
stc
dec
leave
cmc
pop
in
loopne
notb
mov
add
cmp
repnz
repnz
mov
sti
sti
fstpl
jnp
mov
jmp
or
push
dec
sub
sub
and
or
xor
and
push
lret
or
mov
pusha
pop
out
sub
jae
adc
roll
inc
xor
mov
mov
sbb
dec
cmp
popa
arpl
test
cli
mov
jg
jge
push
mov
je
or
orl
out
inc
mov
inc
aad
xchg
inc
xchg
push
xor
jge
push
es
mov
out
loope
sub
add
push
in
cmp
fwait
xchg
mov
push
mov
xor
bound
dec
jb
pop
nop
jo
lods
fsubrl
dec
addr16
loopne
pop
sbb
jae
xchg
mov
insb
pop
cmpsb
sbb
call
xchg
cmp
aaa
pop
jp
nop
sub
lods
rcrl
repnz
lock
mov
cmpsb
dec
adc
out
add
cmpsb
xchg
jmp
rclb
fildll
jnp
xor
push
dec
pushf
dec
dec
xchg
pop
loopne
pop
mov
cmp
mov
jnp
aaa
xlat
add
es
inc
xchg
push
push
sub
outsb
pop
les
lea
mov
cmc
mov
inc
fwait
fwait
bound
rclb
dec
sbb
xor
lahf
add
nop
mov
jp
rolb
lock
mov
aam
int
movsl
xchg
stc
sbbl
jle
lods
mov
fdivs
arpl
xchg
das
loop
or
mov
mov
ja
shlb
sbb
aaa
rol
cmp
rcrb
int3
push
inc
mov
dec
or
jmp
pop
imul
push
jo
nop
rclb
xchg
out
cltd
sub
dec
das
out
mov
ror
pushf
call
jecxz
je
fiadds
popf
or
lods
add
or
loope
cs
out
add
mov
mov
inc
pusha
xchg
fbstp
test
cli
mov
mov
jnp
pop
and
add
fld
test
add
xchg
icebp
sub
ss
outsl
aaa
adc
mov
jnp
mov
push
inc
cli
or
lcall
sub
jl
push
movsb
push
mov
jbe
inc
mov
sub
cmp
jmp
lss
xchg
out
mov
das
leave
jo
dec
jecxz
xchg
fnsave
inc
mov
inc
aaa
adc
enter
ror
cmpsb
xchg
mov
out
hlt
insb
out
cmp
jno
add
das
js
adc
sub
std
loope
xchg
ss
adc
dec
pusha
fidivrs
loope
adc
insb
and
ret
push
cmp
push
jnp
mov
mov
sub
cmp
shll
loop
out
dec
movsl
mov
insb
outsb
inc
xchg
scas
jp
sti
aaa
add
cmp
adc
jmp
dec
mov
stc
mov
lret
cmp
or
adc
pop
ds
les
mov
mov
ret
adc
mull
pop
or
imul
mov
push
roll
cmpl
cltd
out
lret
ljmp
jbe
fnsave
adc
adc
jbe
sbb
inc
xchg
lods
divb
cmp
and
pop
dec
jbe
inc
sbb
or
sub
pop
mov
add
dec
add
pop
xor
fld
data16
and
in
in
out
sbbb
cli
lea
ja
cmpsb
rorb
xchg
and
cmpsl
mov
mov
loope
jo
adc
xchg
aaa
xor
cli
pop
push
pop
pop
ja
lods
adc
dec
aaa
mov
sbb
ss
arpl
das
mov
xchg
jecxz
jno
push
cmpsl
in
jns
push
push
fwait
dec
mov
cltd
and
dec
lret
es
subb
push
cli
sti
je
jp
out
add
mov
xchg
add
add
fistpl
xor
in
pushf
cld
push
mov
outsb
adc
mov
lock
jle
jl
out
les
dec
jp
jno
int
mov
negl
les
jae
fisubs
push
arpl
mov
outsl
das
fisttpl
fadd
mov
mov
gs
or
pusha
sbb
sub
cld
sbb
dec
shl
or
cmp
outsl
sub
popf
mov
out
add
stc
xchg
push
mov
xchg
push
bound
push
bnd
lret
mov
or
adc
mov
jmp
rcl
or
push
or
nop
ja
movsl
mov
out
push
aam
aaa
xchg
add
push
pushf
pop
test
mov
fcmovu
jns
pop
mov
ds
movl
lahf
lock
cmp
xor
pop
ror
outsl
dec
repz
ljmp
cmp
divps
repnz
jmp
pop
loop
cmpsb
push
cli
adc
test
in
jb
dec
mov
insb
movb
sub
or
lods
cmpsb
xor
sbb
jb
jbe
mov
shlb
lock
cmp
xchg
inc
rcl
lcall
sub
or
je
mov
jne
test
xchg
mov
imul
int
mov
jae
mov
negb
inc
sbb
adc
stos
inc
int
xchg
test
push
push
xchg
popa
xchg
jmp
jl
ret
and
ret
ret
shlb
pushf
es
cwtl
mov
sbb
sbb
pushf
cs
xor
and
cmpb
jecxz
rcll
inc
adc
shr
add
adc
ljmp
sbb
and
add
add
lods
fmul
andb
mov
cs
xor
dec
push
sub
popa
jle
sbb
fmull
lcall
scas
ret
jmp
and
jo
sub
mov
aas
fs
inc
cmpsb
bound
and
add
js
mov
adc
cs
pop
jg
xlat
arpl
repz
inc
inc
out
hlt
cmp
dec
loope
call
stos
js
leave
mov
lea
outsb
push
in
insb
mov
test
adc
lret
mov
lods
mov
inc
js
add
lods
in
into
addr16
mov
ret
fisubrs
addr16
int3
lret
out
stos
sbb
sbb
es
push
mov
aas
ds
pushf
js
loop
lods
imul
out
js
popa
movsb
jg
enter
mov
and
push
add
mov
xchg
lock
jg
mov
test
loopne
fs
dec
push
xchg
mov
enter
mov
popf
outsb
mov
insb
or
movsl
xchg
fldenv
mov
push
jg
loope
lret
mov
mov
jo
lret
test
pcmpgtw
sub
add
pop
js
pop
sub
dec
and
add
fdivrs
mov
mov
push
sub
js
js
out
fstl
jp
xor
xchg
test
ret
ljmp
pop
dec
out
pop
out
dec
in
ds
imul
mov
or
dec
ja
mov
scas
xchg
cmp
gs
mov
push
lock
sarl
mov
loop
xchg
iret
or
inc
sbbb
sarb
mov
lods
jle
or
cmp
sub
mov
inc
hlt
xchg
and
sbb
ror
push
mov
aad
outsl
cwtl
jnp
push
sbb
or
xchg
imul
enter
mov
or
fdivl
imul
cmp
or
mov
xchg
sahf
popf
fimull
xlat
adc
dec
dec
jg
loop
ss
pop
sub
mulb
pop
popa
in
pushf
push
pop
cwtl
out
mov
and
cmpsl
stos
jb
sbb
sbb
dec
push
loopne
xorb
loope
dec
dec
jne
push
cmpsl
sub
popa
pop
add
cmp
aaa
out
inc
push
iret
loopne
jo
push
or
mov
icebp
dec
sbbl
sbb
adc
and
mov
jge
pop
movsb
jecxz
add
inc
xchg
xchg
xor
cs
rol
fiaddl
mov
sbb
jmp
outsl
jmp
ljmp
fldcw
jle
and
jmp
inc
rorl
and
push
aas
test
push
jle
sbb
popf
pmulhuw
jge
in
push
jp
push
in
mov
stos
add
das
test
pop
xchg
inc
cmc
xchg
jnp
mov
daa
jl
negb
sbb
mov
dec
pop
sbb
cmpsl
popf
inc
ret
inc
testl
mov
aas
insb
mov
push
dec
push
push
and
pop
add
ds
test
jmp
arpl
push
int
sub
sbb
ja
mov
vcvtsi2sdl
mov
inc
inc
enter
pop
mov
out
pause
ss
jae
inc
outsl
lea
test
loopne
add
incl
push
ja
add
and
push
xchg
jle
sbb
lods
jno
xor
sub
addr16
mov
xor
ss
pusha
mov
call
xor
test
shll
xor
xor
out
jg
dec
cmc
shll
imul
lahf
sub
sbb
scas
fs
iret
cmp
je
mov
lock
enter
dec
or
mov
stc
insl
lods
mov
lea
sahf
in
andb
or
xchg
out
outsb
hlt
fdivs
les
mov
out
loopne
aam
pusha
in
mov
popa
mov
dec
push
xor
add
mov
inc
pop
dec
jae
shlb
and
add
and
inc
ret
rcrl
push
into
shlb
jo
xor
sti
inc
out
xor
xorl
inc
call
sbb
xor
push
mov
popf
aas
inc
adc
in
pusha
jp
xor
dec
inc
insl
pop
into
mov
fimull
cwtl
add
sub
mov
inc
ret
adc
push
iret
dec
dec
mov
mov
mov
pop
ss
sbb
jmp
mov
add
aad
rcrb
xchg
or
mov
int
imul
add
fistl
movsl
mov
mov
loop
pop
movsl
aam
cltd
adc
mov
push
xchg
jle
bound
mov
int3
loop
lods
mov
xor
mov
jbe
add
imulb
mov
rorl
loop
das
cmpsb
mov
das
aas
cmp
daa
lea
mov
cmp
or
repz
fbstp
inc
test
cmp
jnp
mov
repnz
int
hlt
cmp
inc
lea
mov
or
push
or
xchg
sbb
adc
cmp
ja
aaa
mov
mov
cltd
loope
mov
add
sbb
xchg
xchg
dec
into
imul
push
insb
sbb
jbe
popf
pop
or
adc
repz
push
and
push
cld
adc
clc
dec
push
sbb
mov
test
cmpsl
pop
aas
pop
mov
and
inc
xchg
andb
mov
popf
mov
and
cmp
loop
sbb
dec
out
mov
out
stos
inc
pop
cltd
mov
pop
mov
xor
or
adc
icebp
fisttps
inc
sub
inc
xor
daa
cmc
icebp
add
inc
jae
outsl
jmp
fmull
dec
xor
dec
stos
xchg
pop
int
xchg
push
sbb
mov
incl
inc
mov
xchg
xor
mov
push
push
inc
dec
ficompl
pop
imul
push
dec
mov
pusha
cli
cmp
adc
aaa
inc
int3
push
cmpsl
rcll
sbbl
movsl
adc
dec
ja
xorl
push
mov
in
shlb
mov
sahf
lea
int3
pop
xor
insb
pop
jo
aad
scas
in
mov
pop
shlb
int3
das
pushf
shlb
sti
fstl
loop
pop
aas
loopne
mov
pop
adc
xchg
push
push
out
scas
mov
mov
cmp
sub
aas
push
add
mov
or
cmp
cmpsb
es
mov
aam
or
js
xchg
or
jns
stos
sub
sbb
fisttpll
mov
loopne
dec
scas
push
sbb
fsubs
jno
push
pop
jo
aad
pop
fldln2
add
popl
out
lock
out
jne
push
test
inc
or
add
or
pop
jp
cmp
xlat
lcall
test
pop
push
push
adc
sti
xchg
cmp
sbb
jne
daa
adc
popf
jbe
rorl
mov
pop
aas
ror
inc
xchg
fisubs
sbb
mov
pop
loopne
cmp
movsl
push
inc
mov
shl
add
rclb
jbe
mov
add
fdivs
lds
xorl
mov
dec
outsl
movsl
sbb
mov
xor
or
test
js
mov
insb
outsl
sbb
cmc
andb
fcompl
sbb
xchg
cmpsl
bnd
and
mov
sub
or
cmp
xor
push
iret
mov
jae,pt
and
scas
mov
jp
adc
mov
mov
xor
fildll
mov
and
aam
jne
arpl
imul
sbbl
fldcw
jnp
xchg
xchg
xor
push
mov
mov
sbb
cmp
mov
cld
pop
mov
mov
cmc
push
add
mov
fdivp
aad
aad
loopne
loop
das
les
cmp
xchg
hlt
adc
mov
mov
out
xchg
push
pop
je
mov
mov
aam
fistpll
out
push
sub
add
dec
cmp
sub
dec
shlb
icebp
inc
outsl
sbb
enter
int3
stc
jno
push
imul
out
and
pop
mull
adcb
mov
test
gs
jno
fstp
leavew
pop
test
jo
aas
dec
daa
mov
pusha
jne
mov
out
sbb
inc
int
push
in
mov
insb
sahf
cmp
jmp
sub
push
movsb
jbe
mov
and
sbbl
mov
push
adc
out
inc
cmp
jbe
outsb
and
inc
cmp
sbb
adc
das
jge
cli
push
aam
sarb
sti
std
cs
outsb
or
mov
lea
jl
ljmp
mov
adc
mov
push
jecxz
popf
sub
add
inc
fadds
cli
jge
adc
mov
jnp
idivl
jecxz
movsl
fldl
sub
repnz
mov
push
xchg
jmp
imul
dec
fsubrs
xor
insb
int
mov
dec
sub
cli
adc
cwtl
and
push
pop
in
addr16
cltd
lahf
mov
mov
les
mov
pusha
dec
lahf
mov
inc
adc
dec
push
in
aas
testl
mov
dec
dec
fstpl
mov
incl
fwait
lret
icebp
push
stos
add
lahf
xchg
in
push
inc
push
call
stc
test
sbb
fisubrl
adc
sahf
inc
cli
cmpsb
xchg
dec
xorb
ret
in
outsl
push
jne
pop
jmp
popl
insl
jecxz
dec
pop
imul
mov
and
stos
dec
sbb
sbbl
cmc
je
xchg
aad
addb
std
mov
stos
xchg
out
sub
mov
mov
sbb
scas
mov
push
sbb
lea
cmp
xchg
aad
cwtl
dec
sar
aam
std
and
scas
cmp
xchg
pop
mov
pop
hlt
stos
sahf
jge
sarb
mov
out
adc
insl
sub
aas
add
push
data16
sbb
jbe
test
cwtl
mov
scas
dec
pop
lds
jo
mov
in
leave
lret
add
xchg
loope
inc
jns
movsb
lods
dec
pusha
cmp
loope
pop
bound
pop
sbb
insb
inc
hlt
or
inc
shr
js
inc
mov
in
cli
xor
into
sahf
shll
out
adc
jb
xor
outsb
icebp
pop
dec
cmpsl
loope
dec
daa
mov
xor
ljmp
stos
add
or
mov
cmp
bound
cmp
adc
dec
sbb
xlat
mov
inc
sub
jb
mov
lods
stc
in
movsb
inc
shlb
cld
mov
int3
out
in
loop
add
inc
mov
xchg
enter
pop
pop
add
pop
pop
sub
leave
mov
sbb
sahf
jbe
pusha
add
mov
adc
xchg
jmp
and
movsb
mov
xor
into
xchg
mov
call
hlt
pop
scas
and
mov
push
test
jl
mov
fadd
xchg
inc
push
sbb
jo
mov
push
inc
sbb
inc
mov
push
loop
inc
dec
mov
sbb
int3
pop
push
or
fiaddl
mov
shlb
ret
insl
data16
inc
mov
adc
mov
scas
jno
xor
jmp
cmc
scas
or
lea
cmp
rcrb
aaa
dec
inc
daa
ljmp
clc
push
shrb
leave
jle
xchg
jb
push
inc
out
xor
dec
adc
jecxz
arpl
cwtl
in
mov
xchg
aam
mov
and
dec
lods
pop
notl
jle
xchg
mov
loope
add
call
das
cld
pop
mov
lods
fldenv
in
cmp
stos
popa
xchg
add
int3
xor
or
outsb
stos
cltd
sarb
jae
scas
xor
out
loope
iret
clc
sub
xchg
scas
push
enter
add
cmpl
inc
call
aad
stc
out
mov
es
aaa
sub
cmp
cmc
push
insb
pop
dec
add
daa
mov
ja
mov
ret
aaa
push
adc
je
inc
ror
divb
and
out
rolb
xchg
insl
inc
push
dec
int
mov
xchg
adc
insl
outsl
mov
fbstp
sub
sahf
loop
mov
pushf
mov
shlb
movsb
xchg
stos
mov
in
fwait
bound
mov
loope
and
prefetcht1
mov
sbb
leave
mov
cmp
dec
or
adc
jecxz
fcomi
adc
loope
rolb
jmp
jae
out
pop
inc
cmp
in
imul
aam
out
push
and
sti
add
cmc
enter
xchg
iret
jne
xchg
xchg
pop
cmpl
test
pop
mov
and
stc
push
dec
mov
bound
movsl
mov
pop
neg
or
inc
aas
pop
or
cmp
cmp
orb
insl
mov
scas
stos
sub
dec
sbb
inc
dec
insb
push
push
lock
adc
jp
lock
in
sub
bound
jns
sub
scas
or
push
mov
push
sahf
pop
xchg
test
cmp
loopne
popa
jmp
inc
xor
loop
cmc
ljmp
jns
push
notb
sbb
xor
int3
scas
mov
aad
xchg
fistpl
push
or
mov
mov
sti
lret
arpl
dec
arpl
gs
mov
outsb
sahf
lods
cs
popa
push
loop
ror
xor
add
gs
cmpsb
jp
jmp
mov
pop
imul
scas
inc
xchg
rcll
or
push
and
lcall
shll
add
lea
sub
sub
dec
lods
add
lea
mov
cmp
dec
push
lea
mov
xor
movsl
into
push
popa
int3
mov
or
xor
xorb
into
jp
je
bound
imull
and
hlt
and
movsb
std
push
hlt
fstpt
out
test
je
cs
insl
sub
jne
jle
dec
push
ljmp
mov
ja
jle
mov
cltd
scas
mov
jbe
inc
in
dec
fwait
mov
scas
mov
aam
int3
xor
pusha
adc
add
xlat
lret
dec
shlb
sbb
es
pop
imul
stc
xor
aaa
adcb
mov
ret
xlat
adc
pusha
pop
adc
pop
add
mov
sarl
stos
cltd
lock
fcompl
jp
dec
xor
xor
jb
cmc
imul
jecxz
call
frstor
call
add
xchg
es
xor
les
adc
repz
jo
outsb
jmp
repz
mov
es
fcomp
adc
dec
enter
dec
sahf
inc
pop
leave
insl
sbb
cmp
mov
mov
jp
mov
sbb
ja
jmp
xchg
or
add
js
sub
bound
outsb
lcall
rcr
pop
lahf
xorb
jae
mov
sbb
pop
jp
and
inc
je
dec
imul
xor
xchg
iret
mov
pop
insl
sarl
jl
add
ret
sub
scas
out
xor
and
test
cltd
out
dec
pop
stos
mov
pusha
cmpsb
les
test
movntq
loope
jne
push
cwtl
mov
inc
push
or
pop
shrl
jbe
and
mov
push
rorb
add
cmpsb
lcall
push
imul
push
adc
lcall
lds
scas
stos
pusha
mov
push
iret
push
push
xchg
cmp
cmpsb
sub
inc
mov
sti
lods
lea
push
push
cmp
cmp
dec
dec
mov
lahf
pop
hlt
jl
syscall
dec
insl
pop
imul
xor
repnz
repz
aam
negl
inc
dec
mov
ficomps
sar
sar
sub
xlat
push
in
jp
cmp
ret
arpl
aaa
push
pop
inc
rcrl
push
mov
and
fistl
pop
out
ficoms
orb
ds
inc
rdmsr
or
mov
jp
sbb
cmp
lahf
or
jge
adc
sub
push
aaa
push
pop
bound
sbb
cmpsl
movsb
mov
out
add
iret
daa
adc
hlt
fcompl
or
dec
inc
idivb
aas
push
push
fimuls
pop
sub
decb
aaa
mov
add
pop
int
dec
ffree
imul
cmpsl
add
mov
mov
mov
pusha
push
dec
sub
jg
outsl
mov
jns
xor
jmp
pop
mov
mov
in
fsub
fsubr
sahf
mov
sbb
rolb
pop
roll
in
sbb
mov
push
cmp
fildll
lods
sarb
pop
loopne
cmp
shlb
jne
fiaddl
enter
idivl
icebp
sbb
adc
andl
dec
cmp
fisttps
dec
jne
pop
inc
mov
lret
mov
mov
jmp
es
fstps
mov
bound
mov
or
rcr
cld
test
and
cmp
pop
stos
ljmp
adc
movsl
dec
insl
push
xchg
loop
divb
mov
adc
in
adc
and
es
les
add
xor
cmpsl
mov
pop
or
les
outsb
cmp
sbb
inc
scas
scas
add
mov
adc
mov
pushf
fcmovbe
outsb
stc
xor
adc
int
gs
icebp
or
loope
pop
xchg
dec
lcall
cmpsb
xchg
fisttpll
adc
xchg
pop
rcrb
loopne
in
dec
pusha
ret
iret
or
cwtl
and
ja
jl
mov
xchg
push
xor
mov
repz
pop
xchg
test
adc
dec
pusha
sbb
ffree
roll
rcll
rcr
out
and
pop
mov
push
adc
or
mov
add
imul
cmp
pop
cmp
cmpsb
sub
pop
stc
adc
pop
addr16
mov
ja
mov
mul
int
icebp
mov
mov
xor
sub
leave
push
js
sub
pop
fimuls
push
daa
cmp
dec
mov
jg
mov
xor
fnstsw
or
or
or
nop
pop
mov
popa
les
stc
jecxz
add
sub
mov
sbb
dec
je
xor
add
mov
lcall
xchg
subl
mov
popa
aam
dec
das
mov
or
pop
fimuls
js
cli
in
es
loop
xor
inc
not
inc
jbe
leave
je
loope
pop
adc
xorl
sub
les
xchg
dec
clc
loopne
xor
push
sub
clc
push
test
cli
clc
pop
sbb
fs
gs
lods
out
mov
clc
lock
adc
and
bound
aaa
push
stos
xchg
cmp
leave
enter
inc
xchg
inc
out
fld
lret
pop
aaa
fisttps
add
into
test
addr16
cld
xchg
dec
xor
push
insl
mov
add
pop
les
jge
imul
arpl
imul
push
pop
or
and
jl
push
shrb
outsl
sbb
mov
lods
add
je
out
mov
lret
adc
sub
lea
jno
mov
mov
int
mov
lret
cltd
hlt
mov
into
adc
aad
aaa
pop
or
out
fmuls
xlat
pop
es
sahf
xchg
fnsave
xchg
movsb
rolb
shll
xchg
in
mov
cltd
pop
dec
mov
jb
xchg
or
jo
xchg
push
ss
aam
out
mov
mov
imul
ret
movsl
xor
pusha
in
out
andb
inc
scas
bound
fmull
push
adc
call
inc
movb
adc
pop
lcall
fnstenv
out
fidivrl
mov
ret
jge
fdivrs
daa
sub
movsb
in
dec
inc
adc
mov
mov
bnd
pop
pop
push
addr16
xorb
mov
roll
inc
and
mov
pop
insb
dec
pop
cli
fs
sarb
dec
fists
and
dec
jo
xor
lcall
and
out
add
cmpsl
in
testb
cmp
pop
lret
xchg
and
xchg
in
enter
cmp
pop
arpl
xchg
popf
cmc
test
jns
arpl
xchg
sub
push
shr
cmpsl
mov
bound
push
in
xor
inc
shlb
lcall
imul
sub
ror
movsl
add
inc
xchg
movsb
mov
les
icebp
jecxz
sbb
jge
sbb
in
pop
jecxz
dec
sub
adcl
adc
xchg
xchg
cmc
outsl
std
and
sub
push
into
mov
leave
and
ficoml
push
pop
aad
pop
mov
mov
pusha
jmp
inc
scas
xlat
adc
repnz
imul
xchg
jge
callw
aam
pop
fwait
ds
push
jle
cwtl
aaa
stc
cld
sub
dec
test
sub
aas
cld
sar
sbb
mov
cltd
mov
inc
xchg
jmp
decl
movsl
jg
xor
push
inc
cmp
adcl
mov
push
pop
xor
xor
mov
data16
inc
hlt
cmp
repnz
cmp
test
inc
and
daa
fs
ss
mov
lret
cmpsl
and
cs
shrb
inc
adc
les
mov
int3
mov
xor
xchg
xchg
pop
and
pushf
xchg
insl
lahf
mov
xchg
in
or
add
adc
xor
ja
mov
test
sub
adc
push
fwait
mov
push
cmpb
loop
add
pop
jecxz
mov
sbbl
or
push
inc
adc
mov
sbb
xor
ret
repnz
out
add
xor
fsqrt
rcll
inc
int3
lea
test
data16
mov
inc
dec
adcb
std
int3
sub
sbb
or
mov
mov
push
pop
push
xchg
xor
pop
dec
fldl
mov
loope
outsl
paddusb
cltd
into
mov
mov
daa
cltd
xor
mov
xchg
sbb
ficoms
sbb
fpatan
mov
shlb
mov
mov
lret
cltd
cld
out
xor
xor
push
movsl
rolb
sbb
mov
push
cmpsl
scas
out
shll
lods
icebp
dec
fisttpll
fisubs
cmp
xlat
pop
inc
pusha
pop
xchg
out
popa
ss
repz
pop
call
std
jg
ja
mull
aaa
sbb
shl
push
fistl
aas
sahf
inc
pusha
xor
lods
jne
jmp
xor
xchg
pop
push
scas
movsl
loop
inc
out
jbe
fadd
cli
sbb
and
out
int3
insl
bound
push
adc
mov
cmpsb
test
dec
fucomi
imul
dec
icebp
pop
mov
mov
imul
or
cmpb
fs
adc
dec
inc
lods
push
pop
push
in
icebp
or
out
out
incb
and
mov
add
and
in
cmc
mov
andl
movsl
sahf
cmp
and
popa
jmp
ret
stc
icebp
loopne
sub
xor
sub
sbb
jb
sbb
xchg
ss
cmc
push
dec
stc
adc
pop
mov
xchg
in
imul
adc
adc
loopne
cli
scas
sub
xor
sbb
mov
pop
jb
mov
jno
rcrb
adc
outsl
or
and
dec
xor
cmp
scas
push
push
xchg
rorb
xor
test
adc
out
pop
je
je
hlt
and
mov
xchg
dec
jno
mov
inc
filds
or
push
aaa
cmpsl
andl
divps
jno
iret
cmpsb
sti
dec
repz
xchg
clc
sub
clc
fisttpl
fnstsw
das
cs
mov
pop
sub
aad
push
adc
sub
cmp
popf
std
mov
js
ljmp
roll
pop
in
xchg
inc
pop
jo
sbb
pusha
les
mov
jo
inc
ret
sarl
in
addr16
inc
adc
and
int
jle
ficoml
hlt
dec
sub
jecxz
push
fmull
add
and
adc
xchg
clc
sbbb
adc
push
lret
ss
mov
cmp
lret
mov
in
sbb
mov
popa
push
cmp
xchg
dec
lods
mov
jecxz
mov
inc
loop
xchg
inc
outsb
sub
call
xor
or
ret
xchg
xchg
aad
pop
imull
jno
sub
lds
inc
fsubrs
inc
data16
mov
jno
adc
negl
out
and
out
loopne
mov
xor
aam
mov
dec
imul
int
ficomps
pop
dec
mov
insl
xchg
mov
lcall
dec
add
pop
xor
inc
or
repz
out
lret
push
movsb
cwtl
dec
cld
mov
js
mov
pop
rolb
std
rcrb
hlt
pop
and
mov
push
push
lret
lock
pop
sti
mov
cmc
sub
cli
out
jmp
mov
adc
xchg
pop
fwait
pop
sbb
adc
pop
sub
pop
push
adc
xor
push
jo
cmp
arpl
jne
insb
push
leave
cmp
cmpl
fsubr
adc
movsb
mov
enter
bound
test
aam
sub
pop
test
push
test
pop
or
dec
mov
lcall
iret
bnd
in
fwait
cmp
sbb
mov
mov
jno
inc
or
pop
into
xor
insl
pop
cld
xor
xchg
subb
imulw
sbb
ficoms
rol
shrl
and
xor
pop
ljmp
mov
enter
ret
movl
mov
test
push
mov
scas
jg
mov
fs
mov
push
mov
inc
lods
sub
push
and
dec
ljmp
and
clc
xor
movl
cmp
push
sti
mov
xor
lods
fidivrl
sbb
je
sarl
inc
mov
pop
cld
xchg
test
inc
aad
add
sbb
clc
jno
aas
movsb
enter
in
xchg
in
fisttps
xchg
adc
mov
sbb
xchg
lods
movb
into
testl
lcall
int
mov
sub
sarb
leave
fbld
jnp
rolb
pop
pop
cld
add
adc
sub
lods
cmpsb
ficoms
adc
rcll
push
xchg
jmp
and
inc
pop
repz
adc
scas
andb
adc
sub
mov
je
leave
pusha
stos
adc
push
fnsave
in
xchg
cmp
add
and
subb
addr16
adc
mov
addr16
frstor
add
push
test
add
mov
lcall
in
pmuludq
sbb
lods
sbb
jl
aam
sub
es
push
adc
rorb
pop
inc
sbb
mov
stos
pushf
push
cmp
ficompl
mov
or
adc
or
js
ret
cmp
scas
sub
inc
and
scas
sahf
xchg
call
sub
sbb
cmpsl
xchg
pop
jne
cmp
jmp
xchg
inc
sbb
jge
lahf
scas
adc
in
jno
popa
xchg
push
adc
sbb
rcll
lock
gs
inc
dec
cmp
cmp
imul
js
js
lods
or
sub
sar
push
or
lahf
push
xchg
adc
jp
push
faddl
movsb
lea
outsb
mov
adc
sub
push
cmp
cli
out
inc
lcall
imulb
iret
sbb
scas
xchg
and
push
adc
stos
inc
cmpsb
stos
std
sbb
sbb
push
cmp
sub
push
ss
jle
lcall
dec
sbb
push
mov
popf
jle
adc
xor
sti
aaa
sub
push
mov
incl
add
cmp
js
xor
hlt
mov
xlat
into
loope
test
ret
mov
lahf
es
jmp
adc
loopw
sbb
fisubs
add
push
and
fildll
sbb
mov
in
ret
xchg
std
sti
dec
imul
sbb
inc
dec
dec
les
ja
out
mov
fadds
test
lret
cmp
mov
mov
push
rcrb
cmp
push
sbb
repz
sarl
lock
or
adc
cmovne
out
cli
inc
jg
das
aaa
mov
and
out
mov
and
pop
push
mov
sub
arpl
sbb
cmpl
fs
xor
aas
cltd
add
bound
sbb
inc
popf
inc
jnp
pop
xchg
jecxz
lcall
and
mov
lods
in
stos
xchg
fcomi
sbb
push
push
pop
push
jae
jmp
outsb
sbb
nopl
cmp
int
mov
cmp
es
cmpsb
shrl
arpl
xor
test
pop
cmp
addr16
ret
outsb
mov
test
clc
or
enter
movsl
aas
sub
sub
shl
outsb
jp
mov
dec
jle
adc
daa
pop
pop
not
push
push
testl
add
sbb
das
cwtl
fucomp
sbb
repnz
and
push
pusha
push
mov
mov
push
mov
lods
push
mov
push
pop
inc
inc
stc
je
lock
add
es
push
cmpsl
sbb
mov
in
test
xchg
out
pop
pushf
lods
lds
std
mov
stos
jmp
xchg
rcrl
push
jae
push
sbb
mov
out
cmp
pop
adc
hlt
nop
mov
cmp
lods
fdiv
jl
mov
or
adc
mov
xor
mov
roll
cmpsl
jo
divb
test
test
rolb
icebp
cwtl
hlt
mov
cmpsl
and
mov
inc
push
sbb
jno
push
cmp
cli
adc
xchg
int3
stos
lahf
xor
dec
mov
dec
clc
mov
mov
shll
mov
cltd
xchg
mov
loopne
lret
and
outsl
lcall
dec
jle
xchg
rcrl
adc
jne
mov
pop
stc
mov
mov
popf
adc
sbb
fnstcw
mov
push
sbb
and
test
shll
xor
or
out
pop
fadds
push
push
arpl
testl
insb
loop
das
test
pop
adc
imul
je
nop
cmp
cmp
icebp
stos
pop
sti
rcr
out
xchg
mov
jge
loopne
or
mov
pop
lods
fiaddl
xor
mov
add
dec
push
inc
cmp
aam
mov
imul
ret
std
aaa
ret
add
dec
jmp
mov
arpl
das
jb
push
pop
imul
cmp
leave
das
fucomi
pop
adc
mov
and
sbb
xor
stc
sbb
jo,pn
push
js
call
pop
push
popa
aas
stos
jmp
not
cmp
mov
mov
and
stc
mov
push
mull
xor
rcrb
cmc
int
les
xchg
mov
mov
fidivl
insb
push
pop
adc
std
sub
pop
pinsrw
mov
push
add
jmp
add
stos
mov
shr
insb
and
repnz
js
ljmp
rcll
push
fldpi
daa
mov
notl
xor
and
aas
repz
push
lods
mov
cmpsl
orl
pop
push
xorb
sub
xchg
dec
stos
mov
sub
dec
or
xchg
adc
mov
add
push
xchg
sahf
mov
cmp
notb
mov
push
aad
daa
inc
sub
and
clc
fadds
shll
jg
xchg
push
pop
lods
cmp
aad
or
mov
rcr
inc
fildll
and
jne
pop
mov
rol
and
pushl
xchg
sbb
jg
andl
imul
jae
popa
lods
gs
or
pop
add
aam
mov
ret
sub
fistpll
adc
inc
jo
add
jns
and
jno
push
sbb
dec
push
push
pop
sbb
jg
push
stos
adc
ret
stos
test
mov
sbb
outsl
push
mov
aad
add
fiaddl
addl
std
das
xor
inc
and
ds
xchg
or
xchg
cld
add
fldt
pop
mov
lods
xchg
cmp
xchg
add
jg
cmp
push
dec
jge
das
inc
dec
sbb
inc
pop
mov
into
jno
mov
mov
mov
pop
lods
xchg
add
bnd
outsl
cmc
add
xor
jp
xlat
jns
scas
add
xor
andl
hlt
je
dec
rcrl
and
mov
aas
inc
inc
das
dec
sbb
hlt
lea
cmp
dec
call
stos
or
mov
in
enter
imul
rcrb
and
sub
icebp
xchg
fidivl
out
movsb
pop
push
mov
out
add
push
jb
shl
mov
xchg
repz
leave
lods
addr16
mov
adc
sbb
or
mov
xor
push
stos
adc
cmpsl
ret
mov
call
shll
lret
cmp
pop
jge
inc
lods
sub
int3
loopne
xchg
int
mov
add
xchg
mov
pop
in
fistps
or
test
push
or
and
enter
adc
jae
push
mov
mov
sub
testl
je
cwtl
fisubs
jo
dec
loopne
gs
sti
out
imul
vandps
dec
sti
add
lods
int3
cmp
lods
add
push
in
inc
scas
mov
pop
lds
dec
rorb
clc
jns
jbe
inc
aad
subl
lea
xor
in
lahf
cmpsb
push
js
cs
dec
jb
data16
sub
or
cmp
insb
fwait
leave
ficomps
mov
jnp
cld
ja
testb
xor
daa
outsb
cmp
fwait
or
xor
imul
xchg
fldt
and
lret
sti
dec
jmp
cmp
mov
pop
aas
jb
ja
in
mov
rcll
mov
adc
dec
push
popf
test
or
mov
add
push
cmpl
aam
adc
add
imul
push
add
jge
mov
mov
stc
jmp
and
arpl
in
add
out
dec
lret
stos
ret
cmp
stos
je
jo
sbb
adc
aaa
mov
mov
repz
cmp
aaa
jmp
and
mov
cmp
fnstsw
xchg
dec
test
sti
call
je
scas
mov
in
rorl
mov
mov
adcl
adc
or
inc
cltd
cmc
flds
mov
bound
insl
cmp
jl
dec
stos
and
inc
mov
fcmovu
sbb
aad
jo
mov
xchg
imulb
ficompl
cmp
jae
fs
negb
xchg
xor
outsb
stos
xchg
out
xlat
out
mov
inc
flds
lcall
dec
pop
aam
pop
jmp
add
lea
sub
sarb
mov
stc
mov
push
pop
cmp
or
test
test
gs
test
cltd
mov
mov
jecxz
or
inc
pop
lahf
test
and
psubusb
lret
inc
push
out
aad
add
pop
addr16
cwtl
and
out
fisttpll
pmuludq
xlat
jbe
out
jo
std
sbb
jmp
push
add
mov
or
inc
and
xchg
adc
subl
inc
movsb
iret
shr
and
leave
xchg
pop
nop
cmpsb
ljmp
and
inc
int
das
pop
mov
cs
cltd
and
push
cltd
jns
push
scas
xchg
cwtl
iret
divl
xchg
jl
xor
cmpsb
jl
sarb
lods
or
mov
arpl
scas
xchg
dec
rol
je
outsl
xor
sub
xor
shrb
clc
mov
addr16
testb
mov
into
call
or
sub
adc
mov
outsl
mov
inc
into
daa
movsl
js
vpsubusb
jl
cwtl
fxch
aaa
rolb
push
repnz
pop
push
ret
sbb
leave
sub
mov
and
hlt
pop
fwait
mov
stc
in
sbb
mov
cmp
leave
and
xchg
jl
arpl
int
mov
xor
push
xchg
clc
ljmp
gs
ja
fisubs
es
mov
subb
sub
mov
arpl
lcall
cli
push
push
and
enter
add
push
aam
cmp
into
cmpsl
std
dec
sti
push
pushf
mov
xchg
or
rolb
xor
lea
sub
pop
imulb
jecxz
out
xchg
aam
mov
mov
cmp
pop
push
dec
into
and
jnp
fbstp
and
aad
or
push
int3
pop
data16
popf
xorl
mov
mov
xchg
sub
and
jnp
test
dec
cmp
add
roll
mov
jecxz
push
or
jle
cli
jne
lods
xor
jecxz
push
insl
and
pop
pop
insb
stc
icebp
loop
mov
dec
mov
loope
mov
mulb
mov
push
xchg
hlt
jnp
pop
shll
lea
or
inc
jge
push
lret
pop
sub
inc
pop
cmp
jp
xor
arpl
add
mov
mov
gs
cmc
jp
mov
inc
mov
dec
ret
imul
mov
repz
cmc
adc
mov
test
je
mov
fwait
inc
mov
mov
inc
ficoms
test
pop
mov
sti
adc
mov
fisubs
cltd
clc
mov
mov
pop
push
or
inc
jb
fsts
ret
cmc
addr16
xchg
popa
mov
and
dec
jecxz
into
xlat
mov
lret
sbbb
xchg
pop
pop
pop
add
push
mov
inc
fcom
push
bound
lret
leave
mov
xchg
test
in
testb
and
pusha
add
daa
mov
cmpsb
jnp
in
sbb
sub
pop
ret
xchg
cmp
xchg
pop
lds
push
js
jecxz
xchg
adc
xchg
mov
orb
xchg
sbb
xor
xor
add
xchg
adc
lret
mov
mov
fs
pop
dec
cmp
inc
xor
mov
jbe
lcall
xchg
aam
adc
imul
pop
mov
xchg
mov
sbb
adc
push
xchg
mov
sbb
and
adc
or
cltd
cmp
insl
xchg
sbb
imul
shr
insb
nop
jns
mov
cmpsb
out
int3
push
mov
loopne
mov
mov
add
jg
stos
in
fst
int
xchg
daa
push
pop
scas
scas
sarb
cmpsl
mov
jp
jo
or
mov
fs
adc
das
ret
fisubrl
adc
dec
dec
sti
xchg
cwtl
into
xchg
push
pop
imul
arpl
inc
mov
xor
inc
cli
int
sub
lret
jnp
pop
xchg
and
pop
out
jne
mov
sub
lret
mov
dec
or
pusha
out
mov
rorb
and
inc
inc
mov
psrld
sarb
jbe
stos
pusha
testl
icebp
int
push
mov
flds
scas
mov
sar
or
dec
xor
out
jae
ja
fwait
xor
int3
and
jb
mov
aas
jecxz
stos
cmp
push
push
cmp
repz
int3
std
mov
pop
movsl
push
mov
call
flds
sub
insl
fsubrs
insb
adc
mov
lret
push
inc
std
xchg
les
cwtl
jp
pushf
ret
jle
mov
mov
xchg
push
pop
fcmovu
loop
aaa
cmp
adc
imul
out
nop
clc
rolb
or
cmc
cmpl
mov
stos
scas
ja
outsl
pop
add
xchg
sbb
and
out
das
imul
mov
cmp
imul
jne
xchg
mov
aaa
mov
aas
jmp
mov
lock
pop
outsl
sbb
add
insl
pop
xchg
mov
inc
pop
sub
repnz
adc
mov
or
ja
jl
and
mov
sub
sub
and
jb
aaa
fiaddl
leave
xchg
movsb
jge
jnp
jge
repz
cld
mov
add
fcomps
data16
into
jecxz
js
cmpsl
inc
xchg
mov
arpl
dec
jb
loope
cld
inc
pop
iret
sbbb
lea
outsl
sub
sub
xorb
fsubrl
mov
push
sbbb
popa
icebp
add
lret
popa
sbb
test
imul
sub
rorb
hlt
addr16
fs
sub
dec
cmp
loop
aad
inc
jmp
mov
movsb
push
call
xor
add
xchg
incl
push
insb
xor
arpl
aaa
je
and
jbe
push
mov
mov
push
jnp
jmp
imul
mov
pop
jge
test
imul
mov
sub
into
por
idivl
jns
and
jmp
insb
ret
lret
or
pusha
cs
mov
adc
sbb
mov
es
sbb
clc
xor
leave
jmp
jae
shr
inc
add
int
cld
sub
xchg
mov
fnstcw
ss
and
popf
iret
sbb
mov
out
xor
jno
add
pop
adcb
bound
ljmp
mov
sub
iret
scas
add
sbb
jno
adc
lds
jg
mov
pop
imul
or
jge
or
or
test
bound
and
aaa
ds
ret
push
push
dec
adc
cmpsl
inc
adc
fs
inc
mov
test
mov
xor
inc
sahf
mov
push
enter
push
mov
mov
cmpsb
ret
jmp
xor
repz
out
movsb
jp
es
shrl
sti
loop
iret
or
sti
pop
xchg
xchg
jbe
sbb
ret
sub
jns
and
in
in
ja
jbe
rcll
flds
inc
push
cmpsb
mov
pop
push
adc
cwtl
mov
sti
fcmovnb
push
mov
je
repz
or
pop
js
mov
mov
cltd
or
cmp
push
out
dec
mov
sbb
lods
ds
jle,pn
repz
fcompl
cmpsb
lods
jecxz
jecxz
lods
test
push
inc
push
sub
mov
ficoml
push
into
mov
cmp
inc
cmpsb
push
aam
adc
enter
orl
enter
inc
cmpsl
add
andl
pusha
or
dec
mov
inc
xchg
jo
ret
inc
lock
test
jmp
mov
jecxz
add
scas
push
push
lock
lea
lret
xor
dec
into
add
pop
std
fs
jp
or
push
scas
mov
lahf
jge
lods
sub
ret
mov
adc
add
fwait
add
ret
cwtl
out
std
xchg
shll
call
test
inc
dec
jo
das
lea
sbb
mov
xorb
xor
jbe
gs
mov
add
out
loopne
jle
loopne
or
push
xchg
cmpsl
aaa
xchg
ja
fsts
arpl
and
adc
daa
out
sarb
leave
cmpsb
pop
mov
fst
jmp
imul
pop
mov
out
push
xor
jnp
outsb
xchg
and
jg
push
clc
cmpw
cmp
aaa
imul
lea
stc
xlat
and
cld
lret
js
popa
aad
in
and
inc
mov
arpl
filds
pop
xor
ja
mov
into
ss
rclb
lret
ret
fsubrl
pop
dec
mov
push
mov
sub
push
push
jecxz
divb
xchg
cmp
xor
ret
lds
pop
inc
inc
cmp
aad
scas
adc
push
rolb
mov
into
imul
mov
and
jb
xchg
in
jecxz
aad
lcall
loopne
imulb
dec
movsl
mov
and
lret
popf
or
push
or
fwait
dec
ds
mov
inc
fistpl
mov
mov
sub
adc
add
mov
add
cwtl
mov
je
sub
cmp
sbb
sub
and
dec
cmp
out
or
push
test
and
cmpsl
mov
adc
sahf
dec
jae
sbb
lahf
cmpsl
jge
adc
jmp
andb
or
cwtl
mov
clc
fidivl
xchg
addl
pop
dec
cmc
ds
pcmpgtw
push
push
xchg
adc
test
cwtl
push
dec
loope
cmpsl
jge
sahf
inc
flds
negl
cs
rcll
test
dec
mov
imul
dec
inc
pop
mov
aam
orb
jl
xor
push
sub
sub
sub
imul
pop
jl
out
scas
in
mov
pop
mov
fwait
or
fstpt
lods
or
adc
pop
dec
mov
ficompl
and
test
movsb
pop
stc
stos
mov
je
sub
pushf
cmc
fidivrl
popa
lahf
loopne
in
mov
aaa
addl
jecxz
jmp
movsb
insl
sub
insl
push
push
sub
jl,pn
jecxz
js
xchg
jmp
fidivrl
cmc
es
lret
shlb
jbe
sbb
add
