inc
lahf
pop
add
add
or
inc
lahf
pop
add
add
add
add
notl
mov
rorb
jne
inc
cmp
gs
push
cld
sub
mov
add
in
pop
popf
xor
sbb
lcall
and
or
call
or
fs
imul
xchg
xchg
cmpsb
jae
lds
insb
xor
push
mov
roll
in
insl
lret
sahf
fs
bound
in
lahf
mov
cld
iret
cmp
add
shl
pop
sbb
loop
cli
sbb
insb
popf
mov
mov
pop
push
jne
fcmove
xchg
push
jo
jecxz
out
push
aad
lret
int
cmc
jo
rcll
cmpsb
je
mov
add
mov
andl
dec
add
sahf
shll
jb
andl
std
stc
pop
das
sbb
mov
inc
insb
sub
cmpsb
je
bound
cld
loop
test
clc
mov
shlb
and
mov
mov
dec
sbb
pop
shrb
out
dec
cmp
stos
aad
cmp
push
mov
loope
movsb
sarb
in
mov
adc
enter
sbb
add
sbb
mov
sti
and
fisttpl
or
loop
or
pop
hlt
popf
shrl
call
or
repnz
stos
rorl
bound
loopne
xor
test
dec
xorl
pop
inc
fcoml
lret
jp
cmp
jge
cmc
pop
scas
dec
add
xchg
sahf
lea
dec
adc
orb
insb
jmp
aaa
pop
push
nop
enter
push
mov
js
pushf
and
mov
scas
and
adc
ds
mov
ret
xchg
pop
jns
fsubs
rolb
lret
jl
cmp
popa
push
movb
jmp
movsl
push
aas
movsl
jge
notb
aam
cmp
outsl
add
mov
cwtl
je
adcl
and
out
aad
lret
arpl
mulb
xor
iret
dec
loope
lret
push
mov
pushf
out
mov
xchg
fwait
lret
adc
jp
dec
mov
iret
stc
jne
mov
shlb
pop
daa
xor
loopne
ja
inc
gs
inc
loopne,pn
add
push
repnz
mov
xchg
out
cltd
shlb
pop
mov
sbb
mov
pop
popa
cld
arpl
insl
fldt
mov
push
divb
cwtl
dec
xchg
ds
jne
push
cmp
jl
lods
test
xor
mov
mov
cmp
lock
aam
mov
and
call
mov
testb
pop
test
adc
int3
mov
pop
push
pusha
test
clc
ret
sahf
mov
aad
add
sahf
mov
or
mov
insl
dec
dec
mov
xchg
in
or
clc
sbb
rcr
pop
mov
les
out
mov
jg
jne
xchg
scas
xchg
cmc
pop
dec
xchg
lea
out
adc
sbb
fcmove
scas
sbb
inc
fsubp
mov
arpl
cwtl
aam
dec
test
jno
test
fs
filds
and
ficomps
push
mov
or
pop
jno
xchg
jnp
rcll
bound
sbb
fcmovb
cmp
incl
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
dec
test
lret
js
jne
xor
enter
mov
xchg
addr16
add
mov
sahf
icebp
loop
cli
rcll
faddl
dec
dec
sti
mov
out
pop
xchg
jecxz
inc
xchg
dec
mov
pop
jne
rcr
xor
add
jg
pop
dec
fidivs
pop
cmp
fyl2xp1
add
jp
or
push
imul
jp
jl
in
push
mov
jmp
and
jne
in
jae
in
iret
sub
test
push
sub
inc
sbb
add
fldl
inc
rclb
fwait
lods
add
add
gs
adc
iret
mov
loope
cld
and
or
mov
outsl
ss
pop
and
mov
int
jmp
xor
imul
test
mov
ja
test
lcall
fldcw
dec
lret
lret
je
cltd
jl
sbb
sub
fs
cmpsl
xlat
sub
int3
jl
xchg
mov
enter
hlt
pop
test
std
push
push
incl
inc
fidivrs
arpl
outsb
stc
roll
lock
stos
fimuls
sub
or
push
scas
xchg
push
call
sub
data16
daa
daa
fidivl
or
push
ds
imul
fistps
dec
jns
mov
call
out
mov
push
mov
in
pushf
cmp
sub
xchg
inc
mov
push
rcr
and
ljmp
popa
xor
int
jo
add
aad
mov
insl
frstor
out
mov
jl
test
movsb
fwait
roll
cld
frstor
in
cwtl
int3
aam
gs
scas
and
mov
sbb
push
std
or
push
je
lds
xor
fistpl
fs
push
test
mov
sub
out
adc
push
arpl
cmp
dec
mov
fucom
lcall
mov
cmpsb
mov
cmp
and
outsl
jno
push
add
mov
add
sahf
and
jo
gs
lock
stc
fs
push
int3
gs
test
xor
mov
lret
insl
std
fwait
sbb
clc
pop
lods
subb
pop
insl
ret
pop
inc
pop
and
cld
pop
in
repz
inc
jmp
imul
lock
jne
push
ret
or
xchg
cltd
aas
sub
lea
das
test
lret
sub
out
add
jg
mov
xor
add
push
iret
cwtl
inc
add
sub
add
mov
insb
sahf
imul
scas
fdivrs
enter
xchg
lea
stos
add
inc
push
repz
mov
and
xchg
add
icebp
lods
add
stos
sub
enter
xor
mov
fwait
xor
inc
leave
or
loope
inc
sbb
in
es
cmp
mov
xor
or
lods
orb
pop
xor
repz
movsb
sar
mov
shlb
inc
and
add
movsl
lcall
pop
cli
adc
orl
cmpsb
push
mov
xchg
push
pop
push
mov
ret
sbb
outsb
cmp
movlps
mov
mov
push
cmp
and
inc
pop
stos
les
adc
jg
jmp
add
outsb
das
in
leave
push
shl
push
movsb
mov
fisttpl
or
scas
inc
popa
xor
push
mov
cld
fwait
lea
xor
dec
mulb
and
mov
jmp
xor
sub
arpl
jmp
ret
mov
fdivrl
sub
jmp
ret
inc
pop
or
mov
sub
stos
iret
out
jo
mov
fidivs
mov
jns
popa
fidivrs
idivl
out
clc
push
fdivl
scas
fdivrl
or
ja
or
in
aaa
in
cmp
mov
flds
and
sbb
icebp
cmp
shlb
mov
enter
dec
ret
insl
je
cmp
jge
repnz
in
lods
outsl
sbb
fwait
scas
and
jo
das
sbb
mov
adc
imul
cmp
pop
shrl
hlt
iret
or
adc
imul
push
lret
and
pop
xchg
xlat
jmp
cmp
mov
mov
mov
push
mull
jmp
ds
popa
std
loop
xchg
rcrb
fbstp
xchg
pop
fcomps
scas
jmp
imul
ds
cmpsl
mov
lret
arpl
xchg
enter
cmp
push
cmp
out
test
cmpb
lock
addl
xor
test
int3
push
lahf
sahf
in
and
int
notl
xchg
push
in
and
or
add
fimuls
add
test
out
ja
cs
dec
or
lds
fsubrs
xchg
repz
out
dec
cmp
rclb
sub
lcall
dec
rorl
and
cmpsl
divl
cmc
inc
dec
fadds
adc
fs
cld
stos
adc
push
sahf
aad
push
mull
pushf
jmp
fistps
sbb
pop
xchg
and
mov
aam
rolb
mov
mov
mov
or
xchg
lret
cmpsb
and
stc
pusha
jmp
sahf
inc
iret
mov
cmp
ss
call
pop
add
or
ss
or
xor
mov
xchg
push
aas
mov
aas
incl
shrl
movsb
dec
inc
jmp
xchg
mov
iret
inc
and
jmp
scas
mov
sub
or
frstor
cld
scas
mov
ds
jmp
cmp
and
xchg
add
push
inc
bound
cld
aaa
mov
xor
arpl
pop
xor
dec
dec
push
aas
push
mov
stos
fnstsw
out
xchg
fstpl
xor
sahf
rorl
scas
jnp
push
movsl
aaa
dec
nop
jne
in
xor
xor
dec
and
test
fists
jecxz
lret
add
adc
jae
jmp
ds
and
add
mov
repnz
cmpsl
mov
inc
and
pop
out
xor
cli
dec
ja
jns
adcb
pop
pop
pop
into
sarb
mov
loop
aaa
or
and
negb
pop
orb
sub
adc
mov
mulb
addr16
out
sub
dec
das
pop
outsl
pusha
stos
das
mov
pop
pop
pop
aad
or
push
nop
cld
pop
mov
sub
adc
cld
or
loopne
mov
mov
ret
jae,pt
push
fistpl
fsubl
out
add
imul
inc
aaa
xchg
mov
push
pop
jbe
jg
inc
lods
cmp
outsb
jp
xorl
pop
movsb
pop
sti
addr16
mov
cmp
fistpll
into
je
ficoms
and
lods
clc
jmp
dec
das
sti
mov
jns
jnp
xchg
and
mov
icebp
aad
adc
testl
cmpsb
or
pop
dec
mov
sub
jne
in
jbe
xchg
rcr
mov
mov
xor
inc
dec
faddl
es
popa
jl
movsl
mov
iret
mov
sbbl
enter
lds
mov
jnp
repz
mov
out
add
loope
mov
cmp
popf
push
jnp
ret
xchg
bound
jae
lret
cmp
mov
xor
cmp
ret
and
cmp
pop
arpl
lret
clc
subl
jmp
mov
sub
sbb
clc
add
mov
cmp
jmp
mov
ja
jle
push
pop
leave
jbe
mov
mov
dec
out
scas
je
imul
andb
les
xchg
fmuls
mov
subb
mov
and
ficomps
add
add
mov
sti
dec
sbb
lods
adc
bound
or
mov
inc
mov
call
nop
push
mov
push
dec
int
sti
inc
js
and
decl
arpl
xchg
scas
pusha
inc
mov
test
pop
loop
inc
push
jae
dec
imul
inc
out
mov
xor
fcomi
mov
sti
jge
test
hlt
repz
das
hlt
aaa
xchg
lcall
mov
mov
lds
adc
cmp
pop
add
xchg
cmpsl
xlat
shll
cltd
cs
sbbl
mov
mov
sahf
testb
cmc
repnz
mov
mov
cmp
outsl
push
aad
xor
je
mov
push
and
ljmp
dec
pop
xor
jae
jle
lock
movsl
sbb
pop
bound
enter
xchg
jmp
inc
mov
adc
fiadds
jae
mov
dec
shll
insb
sub
mov
and
popa
sbb
shl
loope
subl
lahf
jae
fisubrl
mov
xchg
push
stc
adc
pop
adc
lods
fistpl
test
xchg
les
mov
and
and
jo,pt
cmp
cmpsl
cmovbe
sub
push
sar
je
and
shlb
inc
jne,pn
popf
nop
lret
sub
in
aas
scas
xchg
loop
cmc
inc
out
push
iret
imul
inc
sarb
incb
xor
addr16
sub
adc
nop
clc
lea
pushf
ja
jecxz
test
push
xor
nop
sub
mov
lock
cmc
leave
or
pop
lock
sbb
jae
mov
adc
xor
fisubrl
mov
aad
xchg
pop
das
cs
mov
out
inc
test
and
cs
push
rcrb
in
adc
aas
js
inc
cs
sbb
and
mov
xchg
es
pop
or
fwait
sub
lret
pop
inc
lods
cmp
adc
enter
bound
ja
call
sub
xchg
cmp
int3
mov
arpl
movsl
in
in
mov
mov
sbb
pop
fs
sub
dec
push
jg
lods
mov
stos
fisttpl
push
shrb
ret
and
loopne
mov
fildl
sub
xchg
mov
mov
xor
fbstp
repnz
insb
sbb
mov
icebp
aas
cmpsb
cmp
xorl
mov
jp
push
ja
pop
jp
insl
pop
cmpsl
out
jge
adc
dec
inc
xchg
fdivrs
andl
xchg
pop
add
cwtl
mov
add
pop
dec
fidivrs
mov
jmp
nop
leave
mov
push
mov
mov
push
adc
jnp
stc
adc
and
arpl
in
out
jmp
out
loope
dec
cwtl
xchg
cmp
rolb
mov
mov
out
fildll
out
iret
jg
movsl
add
mov
cs
ret
sti
out
mov
jl
sub
adc
sbb
adc
insb
pop
mov
hlt
aas
mov
ljmp
adc
push
add
stc
dec
pop
sub
les
rcll
test
imulb
pop
pop
incb
inc
and
sbb
pop
movsb
roll
pushf
mov
clc
jae
sbb
lea
adc
adc
test
inc
in
sbb
testl
cmpsl
sub
aaa
sub
mov
mov
into
test
stos
sub
pop
into
or
xchg
xlat
dec
or
imul
cld
adc
add
mov
pop
mov
mov
test
xor
xor
loope
hlt
repnz
and
fwait
adc
scas
adc
sbb
push
aam
imul
ret
dec
insl
mov
adc
scas
jbe
and
cltd
sbb
and
call
mov
mov
inc
dec
notb
add
rcrl
clc
test
jmp
adc
aaa
push
and
lcall
fcom
mov
test
clc
popa
pop
add
mov
mov
popa
and
sub
mov
leave
iret
add
addr16
in
in
cmp
jae
xorb
arpl
add
popa
xchg
inc
gs
call
inc
loop
xor
movsb
lods
cld
jo
cwtl
lds
adc
sarb
repz
pushf
jo
daa
repnz
aaa
mov
cmpl
ljmp
mov
mov
lods
sub
sti
test
inc
scas
sbb
jbe
gs
xchg
outsl
sarl
push
xor
ret
fnstcw
add
outsb
inc
jg
insl
stos
mov
xor
mov
mov
rcll
inc
push
fwait
les
jne
or
mov
in
shrl
or
jmp
data16
sarl
cmpl
push
push
pusha
pop
add
jns
pushf
mov
lea
mov
xchg
fisttpll
movsb
push
lods
or
mov
lods
adc
lock
xlat
test
scas
push
cmpsb
xor
js
adc
xor
icebp
nop
sbb
fnstcw
push
or
fs
xchg
push
jg
mov
dec
out
jne
or
imul
mov
mov
mov
mov
decl
adc
xlat
pushf
cmp
or
test
in
outsl
andl
sub
popa
push
pop
add
xchg
xor
and
imul
mov
mov
cmpsl
scas
dec
roll
je
xlat
or
pand
xlat
mov
pusha
sub
sbb
or
cltd
mov
or
pusha
xchg
and
adc
sub
xchg
mov
xor
xor
pop
push
jne
ret
sbb
adc
xchg
ficompl
mov
and
and
mov
xlat
push
xor
inc
pusha
dec
insl
enter
pop
jbe
fucom
pop
out
fdivrs
addr16
push
adc
or
in
jmp
sub
lfence
mov
out
and
ror
mov
mov
icebp
leave
fbld
out
dec
xor
or
and
sbb
inc
mov
into
imul
xchg
pop
out
arpl
jo
mov
vfnmsubss
sub
xchg
sbbb
mov
call
int
loope
int
mov
xchg
pop
hlt
and
pop
ja
sbb
mov
movsl
test
pushf
lret
test
imul
movsb
loope
sbb
mov
test
adc
in
mov
inc
xor
aas
stc
cs
repz
dec
mov
push
sub
test
push
aas
sbb
sub
fimull
xor
sub
sub
mov
iret
sub
and
stos
and
xchg
add
cli
push
lahf
ret
jl
movb
push
or
fwait
pop
inc
push
sub
add
pop
pop
aad
push
cmp
ret
cwtl
imul
or
sbbb
mov
cmp
cmp
das
loop
fcmovne
mov
ret
decl
cmp
lret
mov
ss
cmc
dec
pop
or
jae
fdivs
sbb
sub
jp
mov
jmp
daa
lea
mov
push
cmp
or
mov
insb
add
ds
shlb
mov
decb
jb
dec
les
subl
inc
out
test
xchg
sbb
or
in
into
nop
inc
or
movsl
int3
ds
cs
nop
movsl
vorps
adc
and
xchg
ds
loope
fbstp
dec
lcall
js
in
shlb
push
mov
movsb
lock
sbb
inc
sub
dec
jnp
loop
loop
sub
scas
sbb
insb
mov
mov
ds
cltd
loope
mov
mov
cmpsl
stos
cmp
pop
push
add
mov
mov
mov
test
mov
cmp
mov
xchg
mov
sti
or
dec
imul
pushf
and
sub
hlt
mov
cmp
sub
xchg
test
xchg
jl
daa
sub
cmp
imul
lret
push
out
sti
push
out
jne
addr16
js
data16
jle
mov
pop
test
xchg
daa
dec
arpl
or
cmp
or
fs
cmp
negb
push
out
cmp
sahf
xchg
leave
add
dec
int
stos
stos
out
mov
pop
je
bnd
mov
mov
jge
or
jns
jl
or
push
sbb
xchg
cmp
js
dec
inc
shrb
out
mov
xor
movsb
xchg
jecxz
sahf
sbb
add
mov
jno
mov
push
xchg
cwtl
inc
or
mov
enter
push
and
jb
mov
mov
loope
out
jns
adc
push
sbb
lods
push
xchg
das
test
add
sub
scas
insb
pop
iret
fwait
and
sbb
push
dec
and
js
adcb
cld
and
push
xchg
inc
xchg
in
adc
fucom
inc
insb
sub
jae
pop
cmp
push
fwait
daa
or
arpl
adc
inc
and
xor
dec
dec
mov
or
movsl
xor
pop
mov
dec
mov
push
mov
push
ljmp
inc
jmp
dec
mov
lods
mov
xor
mov
test
lods
test
cmp
imul
jnp
in
sbb
bound
sbb
sub
inc
sar
mov
dec
dec
mov
sub
lods
cltd
and
sahf
xchg
adc
and
ljmp
cltd
add
mov
int3
jl
dec
pop
lahf
mov
cmp
call
jne
jno
dec
pop
fcoml
les
fildll
xor
mov
jg
fists
adc
test
push
sbb
or
mov
fdivs
mov
lahf
cli
inc
gs
insb
lea
push
outsl
cld
out
dec
jl
add
int3
adc
sbb
cmp
cmpsl
fsubrl
mov
rcll
fisttps
stos
mov
adc
ss
pop
push
push
or
adc
sub
shlb
xchg
push
movsl
ret
in
cmp
fbstp
push
dec
out
cmp
lds
mov
add
test
popl
mov
cld
lock
leave
rcrl
dec
sub
jecxz
jno
jl
xchg
mov
stos
pop
cld
add
imul
fisubs
push
lahf
std
sub
fdivp
inc
jnp
mov
subb
scas
mov
nop
insl
loopne
adc
invd
dec
movsb
fstpt
cli
jb
jne
jns
mov
xchg
mov
or
xchg
xchg
cmp
sahf
sbb
pusha
jbe
popa
or
vpsrlq
and
cmc
pop
or
js
mov
pop
sub
inc
repz
nop
cmp
or
call
cld
sub
inc
push
pop
lock
pop
adc
in
or
pop
std
lea
test
dec
sahf
xor
mov
ja
stos
jb
ds
fs
cld
inc
outsl
sub
les
jae
ret
call
or
mov
std
or
mul
aam
movsl
xor
cmp
and
popf
pcmpgtb
xchg
dec
loope
insb
adc
xor
sbb
hlt
pop
loope
push
sub
aam
or
lea
push
incl
push
dec
inc
fsub
ds
sbb
pop
xor
scas
xor
std
mov
inc
pop
popa
lods
gs
lahf
pop
xchg
pop
jb
dec
cltd
mov
enter
loopne
sbb
adc
xor
add
push
lcall
out
add
fs
cmp
out
add
push
pop
popf
adc
xchg
add
aam
sbb
xchg
mov
sbb
scas
out
dec
pushf
sarb
cmp
lret
sbb
fcmovne
adc
dec
sti
cld
sti
roll
push
out
add
hlt
jno
adc
mov
iret
leave
stos
xor
lret
nop
lea
xchg
ja
pop
test
pusha
ss
mov
xor
inc
jecxz
loop
mov
shll
cmp
mov
loopne
int3
popf
dec
jl
push
into
xchg
sbb
ss
push
fstl
mov
mov
dec
imul
mov
lock
sbb
mov
xor
call
mov
repnz
imul
clc
std
cld
jnp
push
inc
aaa
outsb
in
push
xchg
and
inc
push
in
scas
mov
jno
pop
jle
mov
jg
adc
inc
sti
add
pop
push
repz
mov
xchg
nop
push
xor
pop
out
iret
add
push
adc
sbb
jae
mov
dec
pop
push
pop
push
push
das
in
jo
push
fistl
jnp
dec
cwtl
rorb
ljmp
bswap
test
pop
lcall
shr
sub
push
xor
leave
in
scas
or
js
fnstenv
sub
insl
mull
push
call
divl
sbb
popa
fucomip
xchg
adc
adc
mov
aam
push
xchg
jne
movsl
xchg
mov
dec
std
jg
fdivrs
mov
sub
shl
jmp
loop
sbb
outsl
jnp
sub
jno
fildll
sbbb
or
movsl
out
jno
mov
rcr
pop
test
notb
mov
add
addl
in
sbb
dec
mov
adc
lea
es
xchg
pop
in
int
lods
das
jne
or
pop
pop
test
adc
and
testl
fsubrl
aas
sbb
and
adc
test
or
sbb
sub
fisubrs
fnstsw
idivb
out
jecxz
cmp
insl
js
aas
lret
pop
pop
daa
out
xchg
movsl
xor
and
scas
push
push
aaa
subl
or
loop
xor
test
xor
fs
cwtl
mov
cld
inc
dec
jle
lods
je
mov
push
sbb
ja
sub
inc
outsb
mov
mov
lods
rcrb
lods
dec
leave
sub
lret
enter
fldenv
pop
mov
ds
scas
lret
or
xchg
push
cli
lock
mov
push
mov
mov
sub
test
adc
xor
cli
mov
push
mov
jmp
lods
push
adc
ja
push
ret
std
and
adcb
in
push
jle
sti
mov
adc
xor
pop
pop
inc
inc
icebp
test
lahf
xchg
jl
pop
mulb
repnz
aad
lods
cmpsl
mov
pop
dec
push
xchg
jne
xor
aas
int3
dec
adc
inc
mov
fsubrs
cmp
jp
and
je
pop
cmp
inc
xorb
mov
fwait
jle
out
mov
cmp
mov
push
and
mov
es
mov
pop
outsl
inc
dec
cmc
add
pop
repz
andl
jbe
test
mov
out
push
xchg
jnp
xchg
xor
popa
push
add
and
test
mov
push
dec
icebp
push
add
sbb
and
xor
mov
cmpsb
imul
jns
mov
sahf
pop
fisubs
xor
mov
and
fnsave
out
xor
or
leave
push
jl
stos
cmp
adc
xchg
jnp
call
jge
adc
clc
mov
and
je
pop
lcall
sbbb
out
xchg
pushf
mov
inc
jmp
push
inc
xchg
or
negl
insb
or
pop
pop
inc
lret
in
mov
loop
xor
cmp
lods
mov
mov
xchg
int
arpl
movsb
inc
xchg
sub
loopne
jne
push
push
pop
popa
or
jge
xchg
addr16
bound
ss
ror
jo
shl
xchg
outsl
lret
mov
cld
push
dec
sbb
lock
pop
adc
xor
xchg
adc
xchg
out
push
dec
mov
aaa
mov
sbb
or
adc
insl
mov
dec
pop
xor
popa
mov
inc
push
pop
and
outsb
adc
xor
fsubrs
sbb
scas
icebp
add
imul
mov
mov
lret
daa
mov
push
dec
inc
jl
pop
xor
out
push
jno
fcmovb
lods
pushf
jg
insb
adc
sub
shrd
cmp
cs
cmp
or
pushf
mov
cmp
adc
std
rcrl
pushw
mov
lret
repnz
mov
outsl
mov
mov
add
lea
sbb
xor
pop
pushl
insb
leave
or
or
pop
sub
or
dec
push
stc
mull
inc
mov
pop
lcall
fbld
fstps
loopne
xor
mov
gs
mov
fs
xlat
ljmp
imul
repnz
mov
ficoms
jbe
test
jae
sbb
fs
jnp
mov
clc
xlat
cmpsb
repz
out
sbb
faddl
mov
add
imul
pop
mov
call
push
cmpsb
add
sbb
fbld
fldl
xchg
pop
push
icebp
sbb
add
add
adc
fwait
loope
test
into
ljmp
cmp
lret
std
movsl
into
ljmp
jecxz
daa
fstp
push
inc
pop
cmc
imul
sti
xor
les
pop
mov
lahf
subb
push
adc
mov
into
push
pop
pop
sbb
push
mov
in
xor
cmpsl
jp
fisttpl
adc
inc
in
add
mov
stos
adc
imul
adc
dec
xchg
test
push
cmp
xchg
test
adc
fadds
js
mov
add
sub
int3
push
cld
nop
mov
adc
daa
fsub
jecxz
lock
dec
repnz
and
out
nop
fs
lahf
in
imul
out
adc
cld
jle
mov
ret
insb
cmpsl
fisttps
sub
sbb
inc
mov
inc
or
ss
loope
push
mov
into
lahf
dec
aam
lea
mov
cmpsb
jb
or
jecxz
xorl
test
pop
insb
jae
mov
cs
adc
pop
loop
mov
fnsave
mov
lock
cmp
xorl
sti
mov
enter
mov
mov
or
push
cmpsl
xor
adc
pop
sub
aas
icebp
push
in
incb
sbb
pop
cltd
ds
xchg
rcr
pop
idivl
shrl
loopne,pt
rolb
movsb
adc
arpl
pop
jo
ficoms
es
andl
in
call
lods
add
xor
xor
sbb
jecxz
jbe
xor
sub
stos
iret
setge
cld
negb
scas
push
mov
pop
movsb
inc
cli
jne
xor
outsb
nop
iret
sti
xchg
repz
sbb
sub
push
bound
xchg
inc
xor
aas
cli
lods
xor
testb
rorb
inc
push
inc
push
icebp
ljmp
fcmovnbe
pusha
mov
ss
cmp
xchg
add
inc
stos
imul
shl
popa
xor
addr16
imul
push
stc
cs
cmp
xchg
dec
dec
mov
xor
sbb
dec
leave
in
cltd
cmpb
and
in
imul
lock
xor
je
aaa
pop
mov
jmp
movsl
mov
mov
mov
mov
leave
dec
pop
in
enter
lcall
xchg
dec
adc
add
dec
js
movsb
subl
and
scas
fldl
in
lock
or
loope
lock
ficoml
mov
js
cmp
cmc
leave
clc
aam
xchg
sahf
and
loope
in
or
test
cli
mov
pushl
loop
loop
mov
push
jno
push
insb
ret
movsl
cltd
xchg
out
rorl
mov
sbb
push
shl
in
push
cmc
add
jle
aam
add
mov
icebp
loope
and
jmp
mov
mov
cmp
add
push
mov
inc
je
jnp
mov
shrb
inc
loopne
or
imul
fcmovu
repz
inc
add
pop
mov
fstps
fs
cs
pop
addl
jne
jns
sbb
push
jb
add
pop
and
xor
sbb
mov
mov
push
jmp
std
mov
addr16
xchg
sete
add
sarl
dec
into
subb
ja
sahf
xchg
into
stc
nop
sub
loop
xchg
add
sub
dec
sbb
lahf
and
cmc
ja
cltd
fwait
rclb
les
es
push
scas
mov
aam
sar
pop
push
jnp
lock
cld
pop
or
or
cs
scas
push
jno
mov
xchg
repz
or
idiv
stos
mov
cmp
loopne
lods
mov
movsb
adc
adc
and
das
bound
sub
ds
adc
int
push
popa
xor
andl
xchg
mov
lret
mov
xchg
shll
aas
sub
lahf
out
adc
mov
mov
cmp
movsb
xchg
std
mov
cmp
and
outsl
mov
repz
mov
cmpb
lcall
inc
adc
inc
add
jne
sbb
repnz
add
fisubs
in
add
lret
stc
mov
mov
and
loopne
sub
addr16
sub
imul
pusha
pop
das
push
jne
pop
or
std
rolb
jne
push
mov
mov
iret
and
inc
push
ss
xchg
enter
sbb
incl
xor
lret
mov
lock
js
add
and
movsb
icebp
sahf
jb
subl
insl
bound
into
in
shrb
pop
pop
insb
imul
ret
cmpsb
stc
loop
js
mov
jno
in
inc
push
out
add
call
push
sbb
cmpsb
mov
lds
sahf
ficoms
jmp
ret
push
pop
jns
pop
mov
call
out
arpl
movq
sbb
jbe
add
ret
leave
into
rol
enter
shll
nop
inc
mov
call
jmp
in
cmpsb
inc
jl
fsubp
push
xchg
movl
aam
aad
sub
add
outsb
inc
jne
into
popa
dec
insb
imul
inc
jne
pusha
push
out
pop
cwtl
dec
mov
mov
and
fwait
pushf
mov
shrl
push
pop
enter
mov
jo
mov
cmp
xchg
pop
mov
push
enter
cmc
jbe
addb
arpl
adc
sub
sbb
xchg
xorb
or
cmp
sbb
or
movsb
mov
xchg
xor
sub
push
inc
pop
mov
jmp
test
das
and
pop
mov
lea
sbb
xor
or
cmpsb
sbb
push
fs
insl
mov
cmp
or
sarb
divl
subb
push
out
mov
mov
aam
adc
mov
loope
sbb
push
gs
cmc
cmpsb
into
fisubrs
inc
mov
cmp
cmp
and
cmpsl
ret
xorb
pop
sub
cmpsl
mov
xor
aas
dec
inc
fcomip
mov
dec
idiv
cli
push
mov
sub
mov
loope
out
sarl
aaa
mov
inc
add
xchg
mov
aaa
loope
stos
pop
stos
adc
push
ret
push
inc
xchg
pushl
cmpsb
ret
push
push
xor
add
lret
add
or
sbb
ljmp
cmpsb
xor
mov
pop
movsb
mov
mov
push
add
add
or
xchg
jge
roll
pop
insl
pushf
mov
mov
popf
ret
ficompl
repz
jo
jp
or
cwtl
xchg
aas
cmpsl
aad
jnp
pusha
jle
out
pop
ror
inc
sbbl
pusha
test
push
fnstsw
pop
lods
and
sbb
mov
test
inc
scas
lods
adc
push
aad
cmp
and
stos
ja
shr
push
mov
sub
rcl
add
ds
ret
lea
fisttpl
mov
jecxz
sub
push
and
xor
stc
pop
xor
int
roll
test
xchg
mov
lret
pop
mov
shr
and
push
insb
and
mov
jnp
pushf
mov
les
testb
sarb
dec
or
push
testl
data16
fcmovu
jno
outsl
mov
mov
sbb
xchg
xchg
mov
ds
mov
push
lock
mov
test
and
sti
push
pop
mov
loope
push
inc
int3
adc
lock
push
lock
insl
test
jecxz
pop
das
pop
mov
push
cmp
cmp
adc
not
stos
ljmp
rcrl
rcl
xchg
add
fistps
out
lcall
fs
imul
mov
ds
aas
mov
add
addb
mov
inc
sbb
jo
or
cmp
dec
add
sbb
xor
into
fildll
or
adc
imul
js
mov
in
push
jb
sub
adc
mov
inc
sbbb
mov
std
push
pop
xor
push
orb
movb
inc
mov
and
xor
adc
sub
arpl
subb
pop
shl
fsubr
nop
push
push
popf
or
mov
inc
sub
add
sbb
sbb
cmp
fwait
test
in
fwait
jno
test
pop
xor
xor
cmp
mov
mov
push
sbb
inc
pop
addr16
push
pop
pop
aaa
adc
repz
inc
sbb
mov
inc
cltd
jg
jmp
repz
lret
mov
out
sub
cmp
sbb
sub
icebp
xor
arpl
xor
sbb
loope
xchg
jnp
imulb
mov
loopne
push
jp
std
enter
jbe
subl
add
scas
call
mov
xchg
cmp
jg
test
mov
add
movsb
rclb
push
lret
mov
mov
iret
stc
mov
dec
insl
icebp
out
sub
xor
pop
outsb
dec
and
sub
fstpl
jns
scas
nop
dec
xchg
lahf
stc
scas
test
and
mov
mov
ficoms
aam
and
mov
imul
test
daa
sbb
and
jmp
pusha
mov
sub
xchg
ljmp
negb
jl
hlt
in
movsl
jp
aaa
leave
jg
xchg
push
popf
imul
repz
mov
add
xor
lods
mov
dec
or
ljmp
lea
mov
cli
ss
inc
cmp
sub
push
pop
xchg
jg
sbb
test
push
int
mov
call
sahf
scas
xchg
mov
faddl
cmp
call
stc
jae
xchg
cli
inc
ja
mov
jnp
xchg
jne
lahf
enter
in
xchg
or
lods
ret
movsb
hlt
fldl
in
add
xchg
jmp
repnz
mov
jmp
test
pop
icebp
cli
les
mov
in
les
out
xchg
cmpb
insl
test
lock
aam
mov
pop
cmpsl
lods
inc
dec
insl
adc
ret
sub
xor
cmp
and
push
and
jns
sbb
mov
mov
scas
stos
inc
mov
push
lds
dec
fisttps
jo
pop
enter
adc
loopne
push
push
cmpsb
cmp
icebp
test
adc
dec
cmp
je
out
xchg
pop
dec
and
or
into
lret
cs
and
cmp
outsb
or
push
je
fcompl
fildl
sub
icebp
loope
enter
dec
push
add
loop
mov
sub
roll
add
jmp
sahf
xlat
adc
in
jb
inc
xchg
push
test
sub
sbb
into
mov
add
lret
inc
and
adc
sub
inc
jns
dec
shll
inc
aaa
sbb
out
test
lods
mov
fs
dec
cmpl
stos
les
leave
out
mov
or
cli
inc
stos
cmc
mov
lahf
sub
mov
rolb
pop
mov
cwtl
adc
xor
pop
jbe
loop
cmovns
push
pop
jmp
mov
jmp
test
mov
les
add
push
pop
outsb
pop
adc
fwait
xchg
out
fisttpl
imul
loop
icebp
mov
add
cmp
xchg
mov
cmpsb
loop
scas
inc
cmp
ficomps
xor
mov
lock
pushl
sahf
stos
out
add
adc
ret
subb
push
add
sub
inc
adc
add
adc
mov
scas
fwait
add
stos
out
ret
int3
js
add
scas
test
dec
xchg
into
xchg
mov
jle
mov
cmp
pop
dec
push
mulb
addl
outsl
xor
mov
or
push
cmc
adc
sbb
sahf
pop
into
jne
push
or
jne
mov
sbb
and
jnp
test
inc
push
xor
xchg
dec
and
mov
fimuls
xchg
loop
int3
sbb
clc
shll
es
mov
test
inc
shlb
pcmpgtw
add
mov
mov
or
add
jle
cmp
add
into
pop
sarb
out
mov
dec
pop
dec
movsb
scas
subl
nop
inc
and
mov
sarl
sarl
jle
cmc
in
into
fwait
pop
adc
pop
cwtl
mov
mov
mov
arpl
sbb
add
enter
xchg
xor
dec
pop
cmp
adc
lea
lret
insb
mov
mov
add
addr16
ret
jg
in
out
cs
jno
xchg
outsl
adc
sbbb
mov
movsb
dec
pop
cmp
movsb
scas
leave
jge
cmp
push
cmp
mov
push
or
ds
or
dec
mov
pop
mov
lret
push
stos
fbld
inc
pop
xor
and
pop
ss
test
xchg
sbb
xor
sub
or
sub
std
shll
call
shlb
sbb
gs
out
faddl
mov
cltd
sbb
loopne
sarl
adc
enter
cmp
jno
dec
imul
mov
pop
mov
shll
aas
fs
js
pop
jp
ljmp
fists
fwait
lahf
dec
outsb
mov
negb
sub
das
pusha
push
push
cli
test
jne
test
push
dec
idivl
repz
inc
mov
testl
adc
lret
aaa
push
inc
or
popf
sbb
inc
into
sub
mov
mov
push
mov
dec
mov
sbb
movsb
sbb
cmp
pop
mov
int
and
push
dec
cli
xor
add
mov
and
cmpsb
or
pop
xlat
sbb
mov
cwtl
scas
in
mov
inc
icebp
ret
mov
mov
imulb
in
sbb
fwait
sahf
inc
jb
push
insl
sbb
mov
adc
sbb
jl
imul
xchg
adc
jg
jb
inc
lock
push
pop
rclb
outsl
das
js
jae
aas
les
inc
lret
add
test
push
sbb
inc
xor
in
jmp
cmp
xchg
add
xlat
orb
mov
push
es
mov
enter
es
cmp
xchg
bound
mov
add
xorl
lods
insl
bound
andl
es
push
jg
scas
int3
mov
dec
rcl
sbb
sbb
lds
shrl
hlt
scas
scas
fcomi
xchg
lret
arpl
and
cmp
inc
sub
ljmp
arpl
test
xchg
cwtl
xchg
dec
pop
xchg
and
pushf
std
std
mov
fdivrs
shrl
jbe
insb
shrl
fucomi
cmp
test
enter
lcall
dec
dec
pusha
pop
lret
xchg
lcall
or
fdivl
mov
sbb
mov
xor
mov
sbb
jne
scas
xchg
xchg
dec
pusha
ret
push
sti
in
mov
std
mov
nop
xlat
cmp
mov
cmc
or
add
push
enter
jno
mov
cmp
mov
jecxz
int
ficoms
outsl
movsb
pop
out
and
and
das
inc
and
mov
mov
stc
int
sub
lods
xchg
sub
stos
lods
mov
pop
xchg
out
imul
bound
ljmp
push
inc
in
push
dec
sub
fidivs
sbb
test
pop
test
cmp
aad
jo
shrl
shlb
add
jmp
inc
inc
mov
in
adc
sbb
fldcw
shr
in
cmp
insb
mov
jp
es
scas
xchg
sbb
jb
lcall
pop
fdivs
leave
mov
sbb
xor
push
mov
fistl
mov
cmp
push
gs
pop
mov
int
dec
cli
push
push
inc
inc
rolb
cmpsb
cmp
jmp
adc
sbb
cmp
ret
fs
daa
push
mov
outsb
iret
push
rcrl
addl
pusha
add
adc
add
fcmovu
inc
dec
gs
popa
inc
lds
sarb
scas
and
sub
ret
pop
sub
xor
ja
jo
ficoml
mov
outsl
rorb
lods
stc
sbb
popa
std
mov
mov
ret
dec
roll
cmp
pop
inc
xchg
inc
mov
dec
fdivs
cmp
dec
xor
outsb
jmp
sar
hlt
pop
insl
cwtl
imul
add
sub
jne
enter
insl
inc
out
mov
icebp
sbb
or
insb
dec
mov
adc
in
push
jno
inc
or
push
in
push
sbb
xor
popa
icebp
je
push
dec
inc
mov
jae
push
lock
fwait
scas
xchg
push
inc
inc
xor
shlb
sbbb
dec
cmp
xor
xchg
sub
mov
sub
xor
dec
loope
mov
movsb
stc
insb
clc
push
jl
fwait
stos
fwait
test
fistpl
rorl
pop
cmc
mov
lods
xlat
cmp
push
dec
jle
xchg
es
popf
in
enter
cmp
daa
xor
dec
sub
xor
pop
lea
cmc
fimull
mov
inc
es
sbb
adc
ds
inc
jl
adc
push
js
icebp
jns
popa
out
dec
neg
mov
es
mov
mov
adc
in
ret
jno
xchg
sub
daa
cmp
or
int3
push
xlat
mov
sbb
int3
stos
xchg
inc
lea
les
in
xor
pushf
push
stc
push
das
adc
out
sbb
push
mov
sbb
enter
inc
hlt
filds
push
into
and
fstp
push
add
adc
test
jne
outsl
add
dec
dec
mov
clc
test
repnz
jl
iret
sbb
cmpsl
fidivs
or
mov
mov
test
out
jl
mov
mov
mov
push
dec
jb
stc
dec
push
or
movsl
int3
jb
adc
cwtl
loope
and
cmc
dec
cmpsl
insl
das
mov
aas
test
sarl
rclb
mov
iret
pushf
mov
daa
add
imul
xchg
outsb
sub
in
pop
pop
in
and
repnz
push
aam
cld
sub
enter
out
xor
lahf
and
leave
xor
jb
jb
addr16
push
xor
rolb
repnz
cwtl
jmp
adc
mov
jp
inc
scas
sbb
xchg
mov
add
sub
fistl
jge
int
xor
mov
add
fisttps
pop
mov
out
sbb
xlat
fdivrs
lret
cld
rorl
mov
cwtl
lods
shlb
add
in
addr16
push
sbb
add
inc
push
incb
jbe
ja
iret
in
mov
add
cmp
pushl
push
arpl
mov
sub
js
inc
sbb
mov
xchg
cmc
ret
xor
rcl
mov
cwtl
adcl
adc
cmp
adc
roll
fs
mov
inc
lea
aas
outsl
jge
mov
xor
mov
mov
add
inc
scas
cmpl
lret
cmp
or
cmpsb
and
cwtl
arpl
mov
stos
jge
sti
add
mov
js
movsb
mov
loope
add
pusha
loopne
int
in
inc
jb
mov
jg
daa
jns
inc
jl
and
mov
shr
cwtl
call
inc
fistpl
and
jns
and
into
dec
out
mov
mov
loop
pop
mov
add
cmp
mov
jl
fidivrs
rcll
insb
mov
ja
lock
repnz
fcom
imull
cld
shlb
mov
or
orl
adc
mov
daa
lods
andl
fisubrs
cwtl
and
orl
dec
inc
sbb
lea
add
les
lock
xor
mov
ds
and
popf
clc
fcmovne
jle
fwait
pop
mov
lcall
les
xchg
cld
push
cli
mov
inc
pop
lea
repz
dec
mov
shlb
shl
test
inc
mov
inc
ss
mov
mov
cld
and
imul
push
inc
out
out
test
mov
push
dec
inc
lods
bound
cmp
out
js
mov
and
fcmovbe
popf
xchg
icebp
daa
or
push
sub
addl
mov
add
jg
scas
dec
and
pop
cs
sti
add
std
cmp
push
cli
scas
pushf
xor
or
test
sbb
and
add
jmp
mov
adc
test
inc
stos
push
mov
xor
mov
roll
imul
add
iret
paddw
nop
mov
jge
add
jge
cmpsb
push
mov
mov
test
pop
xchg
fwait
je
or
push
push
shll
mov
ja
das
mov
xchg
add
sub
mov
or
sbbl
xor
jbe
adc
inc
test
pop
xor
sbb
and
or
fnstenv
fildll
stos
test
rorl
cmp
mov
nop
mov
xchg
gs
in
ja
psrad
sub
push
fidivrl
pop
add
cmp
mov
in
sbb
lret
lret
lahf
xchg
mov
stos
fstpl
xchg
scas
fsts
imul
add
ja
je
or
ret
pushf
sarb
jne
stos
sbb
aad
inc
popf
test
push
adc
js
je
mov
push
pop
cli
jecxz
int
pop
ds
loopne
jne
push
lcall
stos
cmp
test
aaa
repz
fists
out
es
loopne
adc
decl
shlb
and
ja
out
cmp
and
pop
lods
hlt
dec
mov
mov
shlb
dec
hlt
mov
xchg
mov
dec
sbb
int3
mulb
pop
into
mov
out
std
into
or
sub
xlat
sbb
xor
and
xor
or
pop
dec
and
jne
mov
jo
pop
cwtl
and
xorl
cmpsl
cltd
pusha
jae
dec
adc
pushf
mov
dec
mov
std
loop
mov
mov
cmp
fs
dec
cmp
psrad
pop
daa
gs
and
dec
test
inc
inc
int3
aas
add
xchg
xchg
dec
sbb
lods
popa
mov
fdivrl
ja
mov
cmp
pop
int
lods
lds
lods
fsubrs
push
jb
and
pop
xchg
aad
pop
xchg
pop
mov
mov
dec
pop
cltd
jnp
fucom
imull
pop
xchg
jbe
imul
hlt
sbb
sahf
in
call
ja
inc
ja
leave
add
or
add
sarb
xchg
cmpsl
outsb
pop
cmc
dec
xor
push
push
imul
cmp
sarb
push
push
ret
out
cltd
movsl
cmpb
fsubrl
xor
xchg
sti
lods
cmp
ljmp
pop
lods
push
cmp
and
sub
testb
xchg
add
ljmp
xchg
fs
add
jbe
dec
je
dec
idivb
adc
cld
sub
xor
cmp
cmc
out
fistpl
fcmovnu
push
sub
sahf
or
loope
addr16
insl
dec
rcrl
call
pop
or
jno
inc
adc
mov
sub
ds
push
cmovbe
pop
or
les
rclb
movsl
ror
lahf
cmp
in
xchg
push
cs
in
pop
fisubs
mull
cmp
lods
in
les
inc
test
mov
test
push
movsl
arpl
mov
push
ret
mov
push
ds
fldenv
xor
mov
es
cli
xchg
mov
shl
test
xor
jno
jl
mov
fisubs
and
cmc
mov
adc
jnp
jl
sbb
nop
cli
je
sub
push
test
lock
push
shlb
mov
or
jg
lds
pop
nop
lock
sbb
aas
push
cmpsl
insl
or
mov
stos
test
xor
fwait
stos
insl
scas
and
lret
aaa
repz
lods
or
leave
sbb
push
fldl
mov
shlb
pusha
xlat
add
dec
inc
nop
pusha
test
push
pop
inc
shll
xchg
imul
jo
adc
push
or
push
in
addr16
inc
jne
ss
and
test
sbb
cmovbe
or
jne
add
imul
sti
xchg
popl
ret
mov
cmc
jnp
inc
fidivrl
lods
cs
pop
xchg
add
lock
das
adc
frstpm(287
shrb
nop
popf
inc
in
mov
pop
sbb
jns
int3
add
addr16
outsb
imull
dec
mov
adc
je
pop
sbb
pop
inc
push
mov
cld
jo
rcll
scas
aam
stos
xor
ret
rorl
mov
mov
mov
push
inc
cmp
fsub
ja
mov
inc
mov
add
stos
and
enter
mov
fldcw
mov
arpl
negl
mov
lods
test
pop
loop
idivl
xchg
or
stc
sahf
inc
push
decb
aas
ror
mov
cmpsl
xor
fsubrs
dec
cmpsb
mov
orl
fsin
out
inc
je
scas
xor
nop
inc
dec
sbb
push
add
sbb
mov
or
xchg
pop
test
adc
rcrl
sub
mov
mov
dec
popa
out
dec
into
mov
ja
pusha
imul
jl
cwtl
int3
adc
test
fnstsw
adc
push
xchg
or
cmp
and
mov
std
dec
mov
pop
fs
fistl
push
sbb
rclb
inc
nop
ret
int
inc
out
lahf
add
stc
mov
jo
insl
or
out
es
pop
rcrl
add
fldt
inc
jb,pt
cwtl
pop
add
add
out
enter
adc
icebp
adc
loope
jl
popa
in
pop
push
sbb
sub
xchg
cmpsb
les
lods
jne
and
adc
pop
dec
or
imul
pop
ror
ja
popf
push
iret
mov
addr16
xchg
outsl
fcomp
aas
or
enter
fucom
sbb
fmull
push
cwtl
dec
sub
sub
imul
test
pop
cmp
cmp
arpl
sbb
lahf
sbb
mov
arpl
shrl
test
addb
pusha
test
push
mov
out
inc
test
sub
jns
sub
and
lret
and
test
es
inc
cli
cwtl
jl
daa
mov
daa
xchg
cs
stos
adc
pop
das
rcrb
sbb
pop
jp
out
xchg
jbe
cmp
fldl
stos
or
std
sbb
test
cmpsl
and
mov
dec
mov
or
jle
xchg
jb
xor
adc
adc
bswap
insl
pop
pusha
movsb
in
dec
and
dec
push
lds
xchg
jbe
xchg
or
push
cli
dec
lods
in
pop
sbb
mov
sbb
std
test
stos
sti
in
sbb
dec
add
adc
in
ficoml
jmp
scas
inc
popa
test
das
push
xchg
out
lea
pop
fnsave
mov
in
out
add
push
mov
sbb
push
mov
or
or
xchg
aas
shr
add
lahf
xlat
mov
sbb
and
cld
bound
mov
push
cmp
imul
lret
pop
pop
or
pushf
or
int
cltd
mov
push
lret
jnp
roll
pop
xor
mov
rol
and
roll
mov
cmp
xchg
jae
test
addr16
adc
out
jmp
or
leave
sbb
cmp
movsb
nop
push
imul
mov
add
inc
mov
sbb
mov
adc
leave
subl
or
mov
pushf
sub
leave
xor
jnp
xor
xchg
xchg
and
inc
fistps
bound
adc
push
scas
add
add
add
push
enter
ds
jb
dec
cs
les
add
in
sbb
imul
es
mov
mov
lock
inc
insb
mov
add
mov
push
pop
and
mov
add
push
pop
jb
xchg
and
iret
arpl
inc
addr16
and
ds
pop
ret
xchg
int3
je
xor
lahf
mov
cmp
fimull
das
and
aad
repz
rorl
add
or
cmp
test
jl
push
sub
les
jne
mov
mov
in
cmp
add
insl
jnp
inc
mov
mov
mov
push
xchg
call
insb
outsl
pop
cmpsl
mov
adc
jno
inc
shlb
data16
in
xchg
sbb
gs
cmp
scas
pop
andb
xor
add
adc
popa
add
or
dec
outsl
shll
cmp
xorl
add
test
jmp
lock
pop
test
ds
shrb
mov
arpl
fisubs
dec
repnz
rol
mov
lea
dec
lea
jle
mov
insl
loope
sub
lcall
out
repnz
pop
pop
jge
inc
sbb
icebp
fwait
stos
mov
shlw
sub
bound
mov
repz
xor
mov
rcl
int3
mov
mov
fs
mov
test
std
mov
shrb
iret
mov
fbstp
push
push
sbb
gs
out
mov
xorl
mov
jns
sub
mov
shlb
xchg
cwtl
pusha
push
push
mov
rolb
cld
push
jb
movsb
xchg
cmp
xor
xor
push
dec
movsb
or
mov
jge
scas
shlb
pop
daa
mov
inc
adc
clc
mov
cmpl
pop
out
outsl
ds
xorb
adc
add
cmpsb
or
lret
sbb
sahf
fmuls
adc
dec
sarl
jg,pn
xchg
push
adc
je
xchg
cwtl
sub
outsl
sub
xor
add
mov
mov
adc
mov
jne
cmpsl
cmp
int
and
shl
or
out
insb
fnstcw
nop
data16
shr
lds
cmp
into
popf
jbe
shll
xchg
loopne
mov
push
dec
mov
inc
inc
insb
test
jb
xchg
pop
fcom
mov
es
push
mov
fildl
pop
rcll
push
dec
add
jno
lcall
sub
cmpsl
push
push
inc
and
outsl
int
mov
fidivs
mov
test
add
dec
mov
ja
mov
rcll
adc
mov
mov
adc
bound
jmp
mov
nop
test
cmp
inc
subb
fwait
mov
out
lods
inc
adc
sahf
loop
jmp
inc
cmpsb
dec
in
insl
das
sub
scas
out
imul
mov
mov
ds
out
js
pop
xchg
push
daa
lret
pop
and
cmpsl
je
jl
movsb
inc
mov
and
loopne
test
orb
sub
je
mov
sbb
xor
lret
sbb
bound
clc
mov
leave
inc
inc
mov
ja
mov
add
add
in
hlt
fldcw
mov
imul
xor
cmpsl
xchg
xlat
sub
pop
call
mov
inc
movsl
jecxz
addr16
les
stos
int
andl
mov
sbb
scas
dec
iret
and
clc
rcrl
loope
rorl
push
loop
pop
mov
fidivl
mov
mov
mov
popf
packssdw
push
in
adc
mov
andl
out
in
pop
jge
scas
cmp
pop
ss
cs
loope
pusha
out
add
fstps
js
xorb
mov
or
enter
dec
iret
push
dec
loope
cmpb
and
stos
fidivrl
in
mov
ds
pop
insl
test
js
ss
and
add
xchg
decl
or
dec
test
xor
jnp
out
sbb
cs
mov
repnz
sbb
inc
sub
sbb
movsl
inc
jbe
jle
das
cltd
lods
mov
aad
clc
add
test
sub
dec
aaa
or
fidivs
movsb
sub
test
dec
cwtl
and
test
push
cmp
ljmp
mov
mov
iret
cli
outsb
sti
fnstcw
ljmp
enter
scas
lds
jbe
cltd
lds
lds
into
jmp
push
ror
dec
lcall
scas
iret
sub
add
push
and
lret
test
filds
leave
into
add
mov
stc
lea
std
cmp
cmp
outsl
xrelease
xchg
inc
fwait
xor
mov
mov
test
mov
xchg
cwtl
mov
addr16
xchg
shlb
cmp
mov
int
xchg
xor
ljmp
hlt
cs
add
out
cmp
or
mov
lahf
aam
mov
mov
mov
dec
stc
mov
loope
inc
scas
adc
repz
insl
lcall
cmpl
cmp
xchg
sahf
adc
mov
test
xchg
insb
mov
mov
loope
jo
divb
loopne
clc
das
jg
insl
stos
clc
xor
lcall
aam
sbb
push
mov
cmp
pop
into
push
cmp
mov
iret
push
addl
pushf
xchg
loope
jmp
daa
dec
cmp
xchg
xchg
btc
or
adc
pop
pop
out
mov
adc
out
mov
orb
imul
outsb
daa
out
mov
cmc
cmp
out
lods
ljmp
fisttpll
out
cmp
xchg
sbb
enter
roll
jb
and
jle
sub
jbe
fwait
pushf
push
mov
pop
push
jo
in
push
pop
xchg
stos
mov
fidivrl
repz
insl
test
mov
lods
ret
daa
lahf
ja
idivb
cmc
pop
or
dec
xchg
adcb
jg
mov
xchg
push
mov
mov
jg
imul
or
sub
test
xchg
add
xchg
xchg
pop
daa
adc
pop
cmp
cwtl
and
lock
sahf
inc
les
cwtl
lea
inc
mov
pop
sub
popf
fwait
mov
popf
push
mov
addb
mov
mov
xchg
enter
into
lock
mov
lret
lock
xor
mov
and
sarl
push
aam
hlt
cmpsl
int
test
mov
cmp
jle
xchg
das
addl
cmc
add
aas
andb
mov
mov
or
jg
fdivs
jl
mov
add
pop
add
mov
mov
lock
sub
xlat
xchg
mov
cmp
imul
bound
or
andb
adc
jo
cmp
cmp
dec
sbb
mov
xchg
push
xchg
or
movb
das
fs
subb
popf
fs
cmc
jae
fisttpll
repnz
addr16
enter
lcall
jns
mov
mov
push
nop
rolb
dec
push
sbb
lea
sbb
cli
insb
xchg
push
sbb
pop
sbb
cmpsl
inc
cmc
out
ficoml
sbb
or
sahf
mov
into
xlat
les
incb
and
or
loopne
or
test
loopne
push
shrl
dec
xor
mov
mov
jp
dec
xlat
xchg
imul
sahf
cmp
pop
add
imul
mov
and
adc
sbb
movsl
xchg
icebp
xchg
popa
cmp
jo
jb
mov
add
inc
push
pop
lds
mov
pop
stos
lods
cmp
movsl
add
mov
pop
and
cmp
into
xchg
cmpsb
call
pop
les
jmp
or
mov
mov
leave
adc
sub
mov
cmc
in
out
sub
hlt
jecxz
test
add
jbe
imulb
xor
les
xchg
xor
das
cmpsl
stc
loopne
pop
std
mov
in
fadds
int
mov
mov
adc
insl
push
pop
jmp
ss
or
cmp
nop
and
jle
jo
mov
movsl
mov
xor
lahf
jne
mov
and
xchg
xchg
sarl
shl
ds
fs
repz
ret
shlb
cli
movsl
inc
ja
dec
mov
or
or
les
subl
fistpll
pop
movsb
mov
mov
sub
int
jns
sub
fcomps
sahf
mov
cmpsl
xchg
sahf
jne
test
lret
adc
add
add
loope
repz
js
fcompl
loopne
mov
scas
je
and
jbe
in
in
xchg
in
push
fmul
mov
push
jne
mov
add
shl
addr16
aam
xchg
push
fnstenv
lret
mov
cld
dec
cmc
push
pop
add
pop
sub
mov
sub
dec
fstl
cli
fwait
inc
sbb
imul
xchg
aas
fisubs
pop
dec
push
pop
sti
aaa
jae
inc
and
scas
inc
fldcw
adc
test
or
sub
outsl
lahf
push
out
ret
scas
and
in
push
in
xchg
mov
or
mov
int3
shlb
test
lods
xchg
roll
mov
aaa
or
or
nop
fsubl
data16
fs
adc
cltd
outsl
add
in
lods
xor
scas
pop
dec
cltd
adc
dec
sarl
jge
neg
icebp
mov
or
scas
add
adc
cmp
cmpsl
gs
cmp
adc
mov
lds
insl
add
clc
push
inc
sarb
jmp
pop
out
loope
mov
mov
gs
out
jne
xchg
inc
punpcklwd
andl
mov
cli
mov
test
dec
clc
cli
jle
cmp
add
arpl
ljmp
cmp
fs
negb
cmp
add
sbb
daa
pop
jbe
pop
cmpsb
ficoms
push
outsb
push
andl
cmp
pop
mov
mov
inc
sbb
aam
xchg
jmp
push
adc
jne
es
cmp
mov
pushf
and
nop
lea
or
fistps
loopne
add
mov
enter
test
bound
fmull
or
ficoms
xchg
mov
mov
sub
ljmp
mov
jge
movsl
sbb
mov
inc
int3
adc
pop
decl
rcl
jbe
rcr
scas
cmc
mov
ror
insb
int3
adc
dec
jmp
subl
pop
cmp
add
jg
xlat
frstor
into
mov
and
pop
lods
inc
daa
add
jbe
pop
lcall
cmp
jb
lods
out
mov
pop
hlt
js
std
fisttpll
pop
lods
gs
test
std
xor
push
lods
cs
cltd
mov
jg
xor
adc
std
or
ficomps
jo
aad
hlt
shll
cwtl
push
jo
sub
xor
test
mulb
pop
inc
rcrl
pop
dec
inc
int3
gs
mov
pop
and
or
pop
or
ja
xor
and
pop
mov
cmp
leave
ljmp
pop
pop
mov
loope
inc
and
fwait
inc
jae
mov
test
rcrl
and
inc
nop
iret
in
xor
push
loope
xor
mov
iret
or
mov
jo
inc
cmc
ds
xor
jno
mov
outsb
sbb
hlt
sbb
add
mov
dec
pop
in
cmp
push
or
sub
mov
mov
cmp
or
shl
shrb
mov
inc
lret
ja
push
fistl
out
jne
push
cld
or
pop
sbb
pop
sarb
das
test
mov
jns
in
sti
fistl
repz
jle
movsl
and
push
mov
out
jecxz
sbb
call
add
xchg
in
test
add
xor
mov
test
or
sub
inc
jo
movsb
or
movsl
mov
ds
inc
jno
push
insb
fsubs
adc
inc
cmc
sbb
aaa
fs
sub
jne
xor
scas
jae
call
xor
xchg
lods
test
testl
lahf
mov
fidivrl
mov
cmp
mov
cmp
mov
sbb
jge
adc
jbe
out
insl
sub
movsb
push
jecxz
mov
fwait
sub
sbb
repnz
int
mov
inc
addl
inc
aad
pop
sub
mov
rcll
subl
xchg
mov
in
fdivs
iret
push
pop
movsl
iret
fimull
dec
xchg
insl
lret
cwtl
mov
mov
inc
or
jae
das
add
daa
cwtl
mov
cli
pop
lea
mulb
push
popf
cmpsl
xor
xor
push
aad
arpl
dec
icebp
shlb
or
hlt
cmp
xchg
pop
in
lret
insl
xchg
out
xchg
sbb
jae
in
pop
pop
and
xchg
rcrb
sbb
jmp
jne
sbb
pusha
imul
int3
stc
ss
cmp
sahf
add
popa
push
pop
out
pop
sub
pop
fsubrl
stos
ror
jnp
push
or
push
dec
sbb
fwait
mov
jg
pminub
stc
test
out
incb
mov
stc
int3
or
pop
in
add
lcall
sahf
movsl
inc
lret
inc
inc
in
or
sahf
lds
mov
cmc
int3
jmp
cmpsb
sbb
jno
xor
xchg
jne
push
in
les
jl
jg
lahf
mov
aad
shll
push
add
cmp
or
jnp
pop
jle
sbb
movsb
xchg
xor
outsl
sub
adc
pop
std
cmpsb
xor
cmp
out
sub
sbb
mov
testl
cmp
pop
jb
jbe
mov
add
push
push
aaa
cmp
or
mov
xor
sbb
mov
inc
xor
imul
mov
adc
cltd
test
es
sti
and
push
test
dec
outsb
in
push
aas
std
arpl
clc
pop
mov
lret
push
faddp
ret
push
sbb
gs
mov
fnstsw
enter
add
cmp
pop
xor
sbb
mov
popa
es
js
xlat
pop
mov
mov
fiaddl
ljmp
lahf
addr16
dec
sbb
out
mov
mov
push
adc
out
test
pop
mov
or
jo
scas
mov
inc
push
arpl
lret
mov
pop
pop
mov
mov
cltd
push
mov
scas
stos
and
inc
pop
add
sbb
fildl
test
dec
add
rclb
or
mov
stos
xor
imul
mov
inc
or
lods
jb
ss
icebp
inc
pop
add
adc
mov
xor
clc
push
testl
lret
popf
scas
jo
fidivl
adc
shll
or
sub
test
les
daa
incb
iret
mov
dec
and
mov
inc
jg
pop
xchg
adc
nop
and
pusha
cmp
lea
ret
pop
jnp
mov
cmpsb
inc
sbb
repz
lret
stc
xchg
mov
pop
test
cmp
in
sbb
fisubs
scas
call
int
jmp
sub
mov
inc
or
andl
inc
stos
adc
push
mov
xchg
pop
rorb
scas
fidivl
push
imul
test
push
popa
push
jne,pn
and
stos
ret
and
repnz
and
fs
pushf
loopne
scas
insb
outsl
push
push
xchg
mov
inc
mov
and
pop
repz
outsb
test
inc
hlt
arpl
adc
mov
daa
cs
push
cwtl
loope
loopne
jne
inc
outsb
sub
jb
mov
lea
int3
sbb
jge
mov
pop
insb
add
iret
ja
cli
mul
int3
cmp
xchg
push
rorl
adc
xchg
push
ficompl
lods
sbb
stos
jg
dec
jb
dec
adc
mov
mov
jo
call
insb
aam
push
sub
cmp
push
repnz
into
into
or
jno
lahf
add
mov
and
dec
mov
hlt
sub
cmp
subb
repz
mov
lret
lcall
roll
test
sbb
out
enter
incb
aad
mov
addr16
daa
gs
xrelease
jmp
xchg
faddl
imul
addr16
jo
cmp
lcall
cmp
adc
add
mov
es
negl
sbb
xchg
and
hlt
notb
pop
in
xor
orl
xchg
sub
out
loopne
lods
scas
push
lods
add
out
and
mov
sbb
jl
add
adc
sub
leave
test
and
push
hlt
push
je
out
int
xor
xor
xor
cmp
aad
jbe
or
sub
les
popa
jp
jns
mov
gs
and
sbb
dec
movb
xchg
fcomps
jb
daa
adc
loope
stos
inc
cmp
xor
and
sti
pop
or
loopne
pop
hlt
jno
push
fnstsw
les
xchg
pop
mov
add
stos
loopne
jp
add
das
jb
lods
mov
xchg
aaa
push
jne
pop
imul
push
cmova
enter
pushl
sub
add
adc
mov
addr16
push
int
jb
iret
xor
into
jle
mov
or
mov
push
pushf
sti
xor
int
xor
pop
jle
aas
cmp
enter
inc
cmp
shrb
bound
cmp
cmpsl
cmpsb
jmp
test
ret
jg
loope
leave
lds
push
xchg
nop
cmp
pop
lea
inc
sub
xor
fldenv
xchg
jle
repz
pop
loop
shll
lcall
xlat
insb
pushf
jge
push
dec
or
inc
sbb
in
jb
pop
xor
jae
in
aas
fxch
sarb
mov
jns
insb
push
fld
into
mov
cmpsl
and
test
push
inc
push
or
aas
fs
int
cld
add
xor
loopne
movsb
or
jnp
add
stos
pop
mov
and
dec
std
xchg
out
aas
and
outsl
fidivs
dec
adc
xor
rcrb
cs
pop
add
in
xchg
addr16
and
cmp
iret
inc
ss
jp
arpl
adcb
aam
subb
xor
xchg
mov
test
clc
in
sbb
ret
cmp
inc
les
pop
adc
pop
push
sarl
andb
add
mov
pop
and
nop
add
scas
call
stos
movsl
add
xor
cmp
rclb
movsl
out
adc
cmp
movhps
or
inc
aad
jno
cmp
jns
movsb
stos
push
sub
add
inc
into
xor
jp
fidivs
sbb
pop
or
test
cmp
ret
orps
outsl
mov
cmp
xor
pop
sub
addr16
addr16
lahf
adc
or
mov
into
fnsave
cmp
and
scas
sub
jl
das
adc
movsl
push
xor
into
mov
jnp
add
sub
xor
pop
icebp
inc
inc
fidivrl
pop
fists
fwait
mov
loope
in
movsb
test
lcall
jne
dec
xchg
ret
jno
mov
iret
pop
jo
pop
ds
xchg
shl
in
call
rcrb
dec
enter
add
xchg
xchg
and
in
rolb
pop
sbb
mov
aad
pop
fldenv
sahf
cmp
stos
push
and
scas
lock
push
sub
bnd
test
adc
out
sti
test
pop
mov
pop
loope
lret
push
add
pop
in
adc
inc
fcoml
mov
ja
rcrb
fisttpl
cmp
add
xchg
movsb
adc
jnp
mov
sub
movsb
mov
adcb
xchg
pop
loopne
fwait
mov
lods
xchg
or
into
adc
ljmp
shlb
jb
mov
jecxz
popa
mov
stos
out
pushf
je
sbb
cld
add
cmp
push
imul
xor
icebp
adc
shlb
dec
lret
dec
cmc
ljmp
sahf
xchg
daa
std
jnp
call
push
sub
adc
shrb
ret
jecxz
lret
jmp
es
fs
adc
or
roll
fmull
int
icebp
adc
jns
out
enter
pop
int3
pop
mov
mov
bound
mov
andb
sub
sbb
adc
cmp
mov
shrl
sbb
clc
xor
jp
xchg
add
call
cmp
pop
sbb
stc
fiadds
mov
mov
inc
jp
push
cmpsb
loope
adc
jge
icebp
adc
shl
scas
jae
push
sub
test
pop
push
aad
cmp
hlt
shl
fcmovnu
mov
mov
cmpsb
lods
sbb
xchg
shrl
jnp
adc
and
and
popf
in
xchg
out
add
push
js
xor
sbb
xchg
lcall
js
roll
or
lds
test
scas
inc
inc
sbb
cwtl
subl
jp
je
xchg
repnz
and
stos
pop
sbb
mov
outsl
mov
push
leave
out
lods
xchg
bound
cmp
inc
xlat
mov
pusha
shl
or
mov
int3
pop
movsl
decb
push
dec
add
aam
jno
call
test
jmp
jnp
xor
adc
sub
hlt
ds
jmp
xchg
mov
inc
shr
add
push
xor
sbb
in
mov
stc
test
out
hlt
xorl
adc
movl
negl
add
enter
xor
mov
cli
mov
orb
jmp
sub
push
and
ja
shlb
cmc
imul
mov
mov
pop
xsha1
cmpsb
or
jne
popf
inc
jmp
les
cmpsb
test
dec
xchg
loop
arpl
jnp
add
mov
or
and
or
xchg
js
cmpsb
mov
xchg
xchg
cmp
pop
rcl
in
dec
pop
sub
sbb
push
and
jmp
cli
mov
out
and
arpl
leave
out
stos
es
into
add
sub
loopne
fsubrl
and
pop
adc
insl
iret
pushf
jae
mov
xchg
fcomi
mov
sbb
int3
mov
push
out
or
adc
jno
inc
sub
push
mov
jmp
adc
sarb
daa
inc
xor
or
fisubrs
incb
inc
mov
mov
and
sbb
inc
inc
and
aaa
xchg
push
test
jno
xchg
daa
bndldx
rol
xlat
dec
mov
sbb
dec
fadds
mov
push
es
pop
sbb
xor
push
xchg
lcall
mov
mov
jmp
mov
push
sbb
sub
mov
adc
xor
test
sbb
mov
jbe
das
lds
test
pop
jmp
add
dec
clc
int
clc
fsubrl
sub
mov
jbe
pop
mov
xchg
mov
jo
pop
std
pop
sub
push
sbb
xchg
addr16
jno
movsl
test
es
enter
add
pushf
scas
add
popa
inc
stos
dec
inc
hlt
push
ret
sbb
xchg
in
movsb
fs
add
aas
and
cltd
lods
arpl
js
cmp
leave
and
or
push
lock
adc
cmpsb
loopne
out
mov
xor
xor
in
mov
cmpsb
jmp
in
sbb
sti
jne
insl
les
add
mul
ljmp
int
and
std
adc
xorb
mov
loopne
das
jl
enter
jg
mov
or
fwait
dec
xor
pop
sub
mov
push
int
decb
popf
rcrl
add
data16
mov
push
mov
mov
pop
cli
cmpl
add
xor
loopne
ss
dec
dec
mov
addr16
jmp
mov
jecxz
movb
pop
loop
int3
sub
mov
rcrl
push
insl
jl
and
aaa
push
scas
lea
fs
repz
sub
popa
dec
and
and
xlat
psubusw
movlps
mov
repnz
push
jae
mov
test
cmp
pushf
mov
mov
push
incb
cli
jnp
dec
push
negb
and
mov
jno
adc
or
sub
mov
cmp
into
ret
paddq
push
cwtl
hlt
jecxz
or
pop
jg
inc
in
and
add
cld
cmpsb
loopne
rcrb
mov
js
jp
cmp
lcall
fwait
or
or
cwtl
sub
bndstx
das
adc
push
pushf
pop
dec
arpl
mov
inc
in
ja
add
insl
shll
popf
pop
enter
add
mov
ficomps
shrb
and
pop
mov
sbb
add
aaa
inc
and
aas
push
xchg
xor
mov
adc
cli
xchg
xchg
pop
mov
jb
scas
loop
lods
push
rcl
scas
arpl
cmp
and
test
and
or
inc
loopne
push
add
arpl
push
pop
xchg
leave
mov
loop
in
dec
fcmove
sbb
arpl
adc
out
sar
cmp
stos
out
or
and
mov
and
clc
cmp
pushf
jmp
call
testl
int
sahf
insl
jle
add
stc
fbstp
inc
xchg
nop
stos
loop
sub
scas
lds
cs
frstor
clc
fiaddl
cld
mov
daa
pcmpeqw
jne
bound
sbb
cmp
nop
or
sbb
and
xchg
mov
sbb
jg
mov
adc
bound
mov
jge
cltd
stos
enter
sbb
add
or
dec
scas
add
xor
int
jle
mov
stos
test
pushf
sarb
xor
jbe
xor
mov
jmp
enter
bnd
push
mov
addr16
pop
pop
cltd
movsl
cmc
andb
or
adcl
mov
mov
and
mov
clc
mov
shrl
mov
shlb
bound
add
inc
pop
and
push
enter
out
adc
mov
shl
mov
ss
out
mov
cmp
cli
mov
pop
pusha
jae
scas
negb
push
or
push
mov
xlat
shrl
add
xorb
lock
jne
sbb
push
mov
pop
int3
imul
pop
push
fsubr
outsl
mov
mov
out
inc
inc
xor
dec
test
push
pop
outsl
mov
pusha
adc
dec
adc
and
pop
test
cmp
out
rorl
imul
xor
sbb
mov
iret
sub
lea
add
in
fmuls
addr16
sub
sahf
add
mov
lret
imul
pop
adc
mov
sub
inc
push
je
es
jg
shlb
in
cwtl
push
fcomi
jne
xchg
mov
pop
jnp
pop
xchg
stc
push
xor
cwtl
imulb
loopne
and
mov
lods
xchg
mov
jmp
sbb
loopne
insb
inc
inc
inc
out
cmpsb
outsl
sub
enter
xchg
in
enter
sbb
arpl
lret
inc
inc
jge
or
lahf
divb
push
dec
ja
jl
out
push
mov
aaa
and
adc
sarb
icebp
xchg
data16
cwtl
push
outsl
arpl
sub
sub
add
ret
fnsave
scas
movsl
aaa
jmp
add
cmp
xlat
lret
test
xchg
test
push
mov
and
shll
jns
inc
fadd
out
insl
aaa
dec
incb
jmp
dec
in
lret
cmpsb
jns
adc
jge
and
test
xchg
push
stos
cmp
lret
and
ror
sbb
dec
jo
shl
push
and
lods
ret
mov
add
push
aam
push
lcall
and
cwtl
push
or
mov
fmul
sahf
cld
out
dec
clc
cltd
sbbb
adc
call
adc
sub
jp
outsl
ja
mov
aam
xchg
xchg
mov
mov
in
add
sub
popf
cmpsl
jl
ret
fcomip
push
adc
test
jbe
xchg
imul
mov
add
test
cwtl
mov
adc
mov
test
addr16
icebp
sbb
adc
inc
or
in
inc
daa
inc
das
dec
push
adc
fdivl
push
dec
pop
xchg
outsb
lods
mov
push
stos
jle
or
cmp
pop
imul
inc
out
aam
imul
or
fwait
das
push
mov
jmp
out
mov
cmc
sbb
add
mov
je
inc
in
cmp
lret
ret
inc
mov
mov
fstl
inc
pcmpgtd
orl
loop
xor
push
fistps
push
adc
aas
movsb
test
leave
mov
mov
xchg
stc
testl
push
repz
decb
sbb
popa
pop
lret
fcoml
lds
pop
jbe
mov
aad
int3
pop
xchg
pop
mov
pop
popa
pop
outsb
mov
cmpsb
lea
addr16
or
lods
stos
jnp
sbb
sub
mov
mov
dec
xchg
fcoms
imul
shll
or
lock
test
sbb
inc
aam
rcrl
mov
sbb
push
ret
into
movsl
add
mov
jne
int
jae
jo
pushf
lea
push
or
pop
adc
out
ljmp
mov
pop
or
adc
mov
mov
cwtl
bound
dec
jno
stc
les
or
jmp
in
in
mov
push
add
bound
mov
pop
lahf
roll
sub
in
and
cmpsb
adc
pop
out
mov
inc
or
mov
addr16
mov
pop
popa
cmpsb
xchg
pop
out
push
das
test
xor
es
psubusb
in
xchg
lcall
insb
jne
incb
push
movsb
sub
push
mov
push
adcl
jmp
loope
insb
and
xchg
mov
je
sub
call
loope
cld
popl
mov
and
pop
cmp
lods
iret
dec
mov
mov
mov
dec
loopne
mov
mov
xchg
xchg
push
call
inc
fcomps
push
int3
inc
dec
ja
sahf
xorl
xchg
hlt
inc
sti
and
cwtl
mov
int3
adc
jg
mov
movsl
outsb
xor
cltd
enter
pop
sub
and
mov
push
orl
rolb
popf
ret
mov
adc
out
lret
lcall
iret
fcmovnbe
cmp
pop
cs
inc
mov
enter
js
xchg
jle
std
pop
push
das
cmp
sub
sub
rclb
sbb
mov
dec
jp
ret
fdivl
add
push
fstps
mov
adc
outsl
xlat
into
ss
mov
or
mov
jae
lods
jbe
xor
inc
testl
imul
insl
or
pop
xchg
pop
fimull
cs
and
ror
mov
lock
subl
addr16
sub
subb
mov
dec
jmp
addr16
std
jge
cld
test
push
jb
loopne
pusha
imul
mov
into
enter
cmpsl
xchg
shll
push
pop
or
je
inc
xor
jne
sbb
imul
xchg
ja
outsl
sbb
xchg
or
cmp
push
xor
loope,pt
dec
jae
push
arpl
in
pop
iret
inc
jo
cmp
arpl
dec
flds
or
cmp
aam
cld
lds
bound
jo
lock
test
rcl
fimull
jg
fstpl
daa
std
test
and
pop
daa
mov
sti
and
jmp
sub
push
stc
pop
and
das
jg
and
in
js
lods
mov
stc
push
dec
bound
icebp
loope
pop
xor
mov
scas
cltd
ret
nop
push
into
add
scas
cwtl
xchg
outsl
call
xchg
scas
mov
dec
sub
push
xor
repnz
fidivrl
fwait
push
loopne
outsb
cmp
jae
cmp
ja
jbe
cmp
iret
mov
aam
xor
inc
es
cmp
leave
sub
or
ja
jo
jb
les
iret
add
sarb
add
insl
dec
xchg
and
aad
ja,pn
repz
dec
loope
push
aaa
dec
je
pop
inc
sub
jbe
mov
movsb
or
lock
cltd
xor
mov
pusha
into
fdivrs
pop
cli
mov
ljmp
inc
and
xchg
xchg
inc
and
pop
in
adc
popa
in
mov
sbb
popf
mov
fsubs
movsb
inc
leave
imul
pop
icebp
je
sahf
xchg
push
or
out
loop
xor
dec
rcrl
cli
mov
push
xchg
lods
and
mov
lcall
aas
cmc
int
dec
mov
loopne
clc
mov
adc
in
in
rcll
das
push
cmp
imul
les
idiv
popa
mov
add
pop
lds
movsl
popf
sbb
andb
cltd
test
xor
and
sub
xchg
in
in
pusha
sbb
cmc
les
add
es
outsb
fwait
xchg
adc
inc
sbb
and
adc
lods
in
or
loop
repz
scas
in
sbb
pop
loope
pop
mov
jl
subl
pusha
mov
cmp
mov
std
jmp
cmpsl
push
lock
imull
add
pop
push
add
aad
xor
jle
dec
jns
jnp
cs
gs
mov
push
loop
sbb
cmp
dec
ljmp
sub
pop
sarb
xchg
add
fsub
dec
sbb
fisttpl
scas
lcall
mov
mov
out
bound
imul
cmp
rcl
sbb
mov
mov
mov
cmpsb
jnp
dec
xchg
loope
inc
and
js
jp
jmp
add
fimuls
mov
mov
js
popf
enter
add
je
leave
dec
xor
pop
xor
daa
rolb
xchg
lods
dec
jns
int3
pop
lret
je
mov
dec
and
push
enter
mov
leave
xor
je
mov
leave
popa
pusha
pop
or
mov
sbb
sbb
insb
les
xor
mov
imul
lcall
xchg
into
and
enter
push
cmp
mov
xlat
sub
in
int3
inc
aaa
stc
cs
add
lret
shrl
lea
pop
sahf
int3
ss
out
push
mov
es
stc
mov
lods
or
xchg
lret
in
sti
push
shl
add
lea
imul
lcall
dec
movsb
les
mov
sti
gs
add
sub
push
fs
cmp
lea
in
lock
jbe
idivb
fisubrl
add
insl
std
lods
push
cmp
fdivs
lods
mov
loopne
dec
es
inc
iret
pop
add
call
addr16
adc
xor
sbb
jno
fistpl
aaa
aam
jmp
cmp
and
scas
rorb
lea
xchg
push
xchg
mov
sti
jno
sub
cmpsb
lea
push
rcr
sbb
das
lret
out
xchg
ret
xchg
adc
in
arpl
dec
flds
repz
pop
sbb
lret
stos
lock
mov
in
ret
jne
inc
jne
cmp
mov
movsl
cmp
fcom
imul
loop
je
cwtl
fdiv
dec
or
sub
call
or
sub
jb
test
cs
push
out
lds
inc
movl
or
dec
imul
enter
popf
xor
xchg
jae
lds
rcrl
rcrl
out
and
inc
mov
xchg
xor
cmp
pop
nop
or
icebp
sub
pop
xchg
pop
lds
cmp
mov
mov
sub
and
in
jecxz
pushf
xchg
mov
stc
mov
aas
sbb
mov
repnz
pop
daa
pop
pop
jl
aaa
cs
sbb
push
jnp
aas
addr16
daa
inc
mov
jae
outsb
insl
sbb
je
mov
xchg
or
hlt
mov
jno
or
jno
mov
mov
fs
mov
push
neg
push
pop
sub
into
movsb
xchg
dec
sub
sbb
push
cmp
xor
dec
cmp
inc
popa
fidivrl
popa
int3
lcall
dec
rolb
xchg
pop
push
mov
cmp
fcoml
push
imul
sbb
lods
add
jl
or
in
add
daa
sub
outsb
shlb
pop
lea
lods
jno
pop
xor
adc
in
lret
mov
sub
push
repz
jg
push
test
mov
lds
mov
mov
xor
push
jae
test
mov
and
repz
clc
popa
mov
mov
xchg
sub
insl
push
xchg
fadd
hlt
push
xchg
ljmp
fs
les
or
lods
mov
incl
mov
shll
push
xchg
test
sub
jns
and
jb
clc
int
pop
and
int3
inc
xlat
pop
sub
std
adc
and
ds
pop
xchg
xor
xchg
ret
xor
ja
or
pusha
add
iret
jle
or
mov
movb
fbld
push
ret
and
ds
push
mov
xchg
dec
aaa
out
jge
cld
sti
pop
divb
mov
cmp
inc
out
in
xchg
adc
inc
fidivl
les
jae
mov
mov
or
pop
lds
pop
sbb
mov
nop
fists
inc
cli
xchg
call
stos
push
and
mulb
jae
jnp
mov
repnz
sahf
and
xor
push
pop
addr16
xchg
fdivp
and
insl
pop
inc
adc
pop
fiaddl
mov
lods
or
and
loope
fldenv
xlat
mov
lods
enter
lcall
pushf
mov
adc
mov
and
xchg
movsl
mov
hlt
mov
in
add
mov
stos
jbe
aad
pop
icebp
leave
movl
or
push
xorb
jnp
sub
inc
dec
dec
insb
mov
test
dec
jmp
je
jg
pop
xchg
adc
pop
in
mov
sbb
nop
cs
lock
jl
sbb
inc
jo
mov
movsb
lea
mov
xor
aad
repz
scas
sub
xor
aas
call
inc
mov
in
or
decl
movsb
rcrl
mov
sahf
fsts
jecxz
dec
jp
mov
test
jae
das
das
repnz
jle
xor
mov
add
or
imul
movsb
xchg
shrb
sbb
fisttpll
js
push
cs
xchg
stos
dec
or
xchg
clc
push
push
dec
cli
jmp
shlb
test
and
ret
adc
xchg
jns
out
enter
shl
fcompl
mov
in
insl
cld
inc
inc
push
daa
nop
add
sbb
push
movb
repz
mov
outsb
and
mov
dec
and
pop
vminpd
mov
mov
in
fstpl
shrb
adc
in
jo
adc
dec
adc
aaa
lret
mov
bound
jmp
daa
ficoms
cmpsl
insl
pop
ljmp
sub
push
ret
ret
fsubrl
add
inc
loop
sub
sahf
movsb
lret
sbb
xor
jmp
fwait
jo
add
fnstenv
inc
xchg
in
cs
and
scas
sub
fstl
fs
test
mov
div
lret
movsb
or
jnp
les
call
addr16
sub
xor
and
lock
xchg
outsb
mov
stos
data16
enter
dec
loopne
adc
ret
fsubrl
sahf
in
lahf
lods
insl
jl
stos
notl
dec
add
popa
inc
lret
cwtl
les
int3
sbb
bound
xor
aas
les
xor
or
jmp
pop
mov
xorl
dec
pop
sub
push
outsb
sub
mov
jbe
jns
scas
popa
push
adc
shlb
cltd
gs
lea
sbb
and
orb
call
hlt
out
scas
add
xor
mov
aad
fisttpl
and
push
lret
daa
or
add
adc
pop
movsb
mov
in
repz
mov
pop
inc
mov
mov
or
mov
aas
push
mov
shrb
stos
inc
and
sbb
pop
add
push
enter
sub
and
mov
data16
data16
ret
insb
out
push
lea
and
fstpl
es
and
xchg
out
and
dec
js
xor
jmp
lea
divl
loopne
adcb
leave
xor
je
sub
pop
les
dec
out
adc
mov
mov
push
pop
cmp
ret
nop
insl
test
shrl
dec
lret
push
pop
mov
adc
sub
cmp
jb
nop
push
mov
dec
int3
adcl
stos
out
sbb
push
gs
fwait
add
sbb
sbb
mov
icebp
insb
pop
cmpsl
pop
sbb
sbb
repnz
sti
test
mov
inc
xor
sbb
sahf
mov
or
icebp
fs
or
addr16
in
idivl
xlat
xchg
mov
jb
sub
movb
into
xor
fstl
pushf
xchg
daa
push
lcall
jle
jns
adc
enter
fisttps
jae
shl
add
mov
push
mov
clc
jg
add
dec
das
movsb
or
stc
push
scas
into
and
nop
jmp
mov
test
pop
sbb
dec
sub
popw
je
or
jbe
mov
dec
in
call
sahf
jno
adc
push
lcall
mov
cmc
fs
xor
pop
xorl
in
fwait
xchg
jl
xchg
lret
push
jae
mov
xor
shlb
dec
sub
aas
inc
jae
into
ljmp
sub
cmp
aad
popa
lds
insb
pop
outsl
push
aam
mov
imul
adc
jne
int
mov
mov
cld
sahf
nop
mov
movsb
rcll
dec
mov
mov
pop
loop
sti
jecxz
je
lds
cmp
mov
sbb
addr16
add
decl
cmpsb
aas
cmpsb
sahf
leave
lret
test
imul
ja
mull
out
inc
jns
adc
ja
sub
imul
inc
sbb
js
xchg
mov
push
sbb
repnz
ds
cli
adc
mov
addr16
dec
in
xchg
ret
and
in
mov
repz
mov
adc
aaa
dec
scas
inc
mov
sub
filds
sbb
fildl
pop
jmp
jns
rcrl
roll
arpl
jns
fsubs
aaa
adc
dec
mov
cmc
call
mov
sub
hlt
mov
mov
dec
push
mov
int
das
xchg
push
mov
mov
or
xor
sbb
fwait
sub
pop
xchg
jl
cmovge
jmp
add
and
scas
and
or
stos
xlat
push
mov
jno
jmp
daa
movsb
add
push
and
cmp
mov
or
inc
push
fisubrs
sub
inc
gs
adc
xchg
sahf
cwtl
loopne
call
icebp
adc
scas
jge
leave
inc
insl
outsb
and
sbb
cmpsl
nop
adc
lret
mov
sarl
mov
jg
xlat
and
mov
sub
mov
jae
lret
iret
outsb
lret
mov
inc
and
push
mov
mov
movsl
xchg
mov
inc
into
jecxz
fimuls
xchg
out
jno
sub
cmpsl
call
mov
call
out
daa
push
add
bound
xor
push
mov
fwait
mov
sbb
jmp
add
outsb
xchg
and
call
jp
sbb
fldenv
push
sahf
pop
imul
add
outsl
jae
lret
out
test
sub
sarl
add
xor
pop
mov
insl
mov
pop
mov
lahf
out
add
test
or
or
dec
lcall
and
aam
call
xor
cmpsb
in
xor
push
loope
popf
adc
aas
pusha
fwait
dec
push
xor
mov
pop
sub
sarl
shrl
fistpl
xchg
daa
aas
in
insb
xor
mov
addr16
sub
pop
out
sahf
jno
and
inc
mov
jge
into
dec
pop
dec
dec
jno
test
popl
ja
cmp
adc
dec
fldln2
bswap
sbb
push
sbb
dec
pop
inc
les
push
and
int
xchg
mov
mov
vpmacsdd
imul
pop
fs
push
jmp
cwtl
jns
push
leave
and
cmpl
sti
cs
addr16
push
ss
bound
cli
add
dec
xor
jge
ret
xchg
int3
movsl
rcll
mov
nopl
push
push
mov
mov
jecxz
cmpsl
push
or
cmpsb
sub
cmp
pop
xchg
pop
sarb
xor
imul
les
and
aas
in
xlat
sbb
sbb
popa
ljmp
xor
jle
addr16
xor
lods
scas
adc
push
xchg
ljmp
and
idiv
dec
sti
in
scas
xor
inc
loope
lcall
sahf
cmpb
fs
inc
pop
pusha
imull
in
cwtl
js
fnsave
test
xchg
addr16
inc
xor
xor
movmskps
cmc
and
mov
jno
ret
ficoml
mov
es
das
pop
orb
inc
dec
loope
aam
or
jo
mov
andb
adc
stc
dec
sbb
add
inc
ffree
push
adc
arpl
inc
pop
and
adc
cmp
dec
loop
pop
dec
aas
push
mov
mov
push
mov
mov
cmp
or
add
int3
xor
mov
xchg
push
icebp
mov
lret
negl
push
rorb
popf
xchg
xlat
adc
mov
inc
fsub
icebp
scas
xchg
pop
sti
cmp
fistl
mov
dec
sbb
mov
add
and
xchg
test
or
hlt
stc
mov
call
sub
out
sahf
faddl
or
xlat
mov
or
pushf
pop
adc
adc
lods
movq
test
pop
ljmp
ret
dec
and
clc
fsubrs
scas
adc
pop
add
xorl
loopne
rcrb
mov
sbb
imul
aam
xchg
xchg
aaa
lahf
in
xchg
loop
loopne
cmp
mov
bound
sub
mov
cmp
or
lock
jbe
repnz
int3
dec
pop
loope
cmpsl
add
or
jmp
cmp
xchg
addps
or
push
and
out
add
sub
mov
das
mov
or
jmp
mov
inc
pop
mov
cmc
outsb
je
pop
aad
inc
jnp
mov
sub
insb
fcmovb
sub
scas
pop
sub
mov
loop
int3
add
xlat
cli
arpl
lret
add
cmp
mov
mov
mov
add
add
pop
pop
xor
jne
mov
cmpsb
mov
sub
imul
sbb
add
add
lahf
xchg
or
popf
dec
sub
push
jae
mov
punpckldq
imul
jg
insl
and
stos
insl
inc
sbb
js
out
jecxz
daa
mov
push
mov
jae
pop
push
ja
es
add
ja
cli
psrld
add
arpl
fsubl
loope
sarb
inc
push
push
dec
notb
or
push
ror
out
filds
jecxz
jle
xchg
cmp
lret
outsb
in
aaa
and
xchg
push
je
xor
and
inc
xorl
lahf
push
pop
stc
gs
jns
push
pop
or
cmp
pushf
push
movsl
fwait
repz
adc
xchg
icebp
pop
mov
and
dec
or
jp
xlat
divb
xchg
pop
jnp
cmpsl
mov
mov
add
aam
incb
push
jp
dec
inc
imul
hlt
dec
cmp
add
add
inc
xor
cli
subb
push
in
fsubrs
and
ffreep
fs
jmp
clc
out
or
iret
push
dec
call
push
xchg
cmpsb
into
mov
lock
lret
cmp
mov
mov
pop
dec
xlat
sbb
dec
pop
shlb
pop
stos
into
sbb
jg
pop
cmp
mov
in
pushf
loope
mov
outsb
xchg
lock
xchg
sahf
sbbb
pop
add
xchg
jns
in
mov
push
and
cmpsl
stos
aad
jmp
cmp
sahf
jp
popl
fcmovnb
popf
ret
aaa
mov
loope
inc
xor
ljmp
sub
outsb
sbb
rcll
or
sarl
mov
pop
push
sub
stc
cmp
or
and
hlt
pop
test
sbb
mov
jl
xor
inc
push
fnsave
pop
insb
outsl
sti
sbb
add
enter
popf
jbe
lret
mov
or
pop
xchg
cmpsl
jo
inc
in
push
mov
mov
dec
sub
fs
push
xchg
fistpll
jecxz
pop
sub
dec
gs
fsubs
pop
stc
out
adc
rol
pop
lret
xor
cmp
stc
push
jg
popa
xchg
adcl
adc
dec
jle
dec
data16
int
or
les
dec
mov
jg
imul
lea
movsb
jne
cmp
cli
scas
lds
inc
gs
pop
xor
inc
scas
int
repnz
xor
fnstenv
fs
mov
mov
cvtps2pd
fstl
aad
xor
dec
call
mov
pusha
xor
and
and
lds
mov
inc
stos
pop
push
cmpsb
dec
mov
negl
jae
andl
sub
pusha
or
addr16
adc
or
or
pop
insl
std
dec
mov
out
or
adc
fimuls
inc
lcall
jl
cmc
mov
jae
repnz
fcmovu
and
xor
cld
adc
repz
sbb
push
bound
faddl
push
jno
cld
popa
cmp
mov
push
lahf
orb
cmpsl
bound
mov
adc
xchg
xor
mov
xchg
xlat
cmp
mov
jae
pop
mov
mov
aad
inc
enter
mov
mov
shl
fisubs
mov
inc
leave
fwait
pop
leave
sub
fnstsw
jmp
add
stc
lcall
test
xor
cli
out
movsl
push
fs
jo
add
and
or
inc
mov
test
neg
data16
mull
xor
mov
sub
mov
push
push
xchg
insl
pop
xor
in
adc
push
and
fldcw
lahf
in
pop
cmc
mov
mov
or
lret
or
add
or
xorl
mov
dec
pop
sbb
cli
jecxz
cld
mov
and
mov
cmc
adc
cmpsl
xlat
xchg
sahf
in
and
mov
clc
in
gs
inc
and
xor
jle
xor
inc
lods
outsl
repz
push
mov
testb
xchg
cmpsb
pop
clc
lods
or
xor
sub
push
dec
cld
jbe
ficomps
xor
fidivrs
ret
and
dec
popa
jno
inc
xchg
js
jge
rcll
pushf
jp
lods
outsb
out
pusha
addr16
push
ficompl
xlat
push
inc
rorb
lret
mov
je
fstl
repnz
mov
push
or
inc
xchg
xor
sbb
addr16
xlat
xchg
outsl
and
daa
imul
in
sub
cli
inc
dec
jo
pop
xor
xchg
into
pop
dec
ds
mull
test
xchg
test
data16
outsb
in
push
in
lock
lcall
mov
sub
fists
leave
smsw
rcrb
test
fnstsw
adc
push
sub
or
push
arpl
addr16
cmp
les
loope
push
dec
aas
mov
mov
push
push
inc
imul
jle
sbb
pop
inc
insl
xor
add
mov
jl
fmuls
test
mov
pop
xorl
sub
or
and
aas
mov
push
push
sbb
dec
je
scas
xor
jle
jb
mov
pop
xor
ja
mov
repnz
push
outsl
inc
cwtl
outsl
ljmp
je
std
jmp
outsl
push
dec
or
jno
test
stos
dec
xor
cmp
xor
xor
cwtl
pushf
and
outsl
ja
jg
fisubl
popf
xor
or
add
mov
shll
ds
das
or
insb
cmc
popa
and
sbb
fdivrl
and
inc
push
sub
and
mov
sbb
push
mov
out
xor
push
jo
int3
insb
fdivl
daa
xchg
sbb
mov
fistl
ds
push
push
xorl
push
xor
pop
fwait
ret
std
pop
mov
cmc
push
push
and
popa
adc
fld
sarb
hlt
cmp
popa
lds
sub
ljmp
je
jno
dec
cli
cmp
bound
ficompl
add
aaa
ret
gs
pop
hlt
or
addr16
fnstenv
popa
push
mov
mov
ret
es
cmp
fcompl
sbbl
xchg
mov
fisubl
lcall
push
out
push
inc
pop
in
xlat
pop
cmp
inc
and
ret
sbb
xchg
push
leave
jno
cmp
add
into
sbb
out
les
scas
insb
push
jne
cmp
pusha
xchg
push
pusha
adc
add
aad
xchg
mov
cmpsl
jp
xchg
jg
rclb
cmp
and
fcomps
cmpsb
jo
jecxz
xor
push
mov
lret
fld
jl
or
xor
pop
pop
cmp
adc
cmpsl
jmp
cmp
jo
rcll
and
or
adc
cli
out
adc
iret
or
sbb
arpl
mov
imul
ret
outsl
cs
into
dec
sahf
add
or
mov
push
sub
iret
insb
mov
pusha
push
lds
std
sahf
or
iret
adc
push
add
sub
lock
pop
mov
cltd
sahf
daa
xchg
cmp
jo
dec
mov
loopne
mov
lods
mov
hlt
jbe
jb
lahf
frstor
or
imul
outsb
mov
iret
pop
das
lock
pop
lea
jge
push
or
into
cmp
lret
ds
jp
in
jb
arpl
dec
popf
addb
mov
std
imul
mov
cwtl
js
out
mov
or
movsb
je
nop
incl
push
subb
insb
divb
enter
jge
mov
nop
mov
pushf
jl
sbbb
inc
add
mov
mov
mov
sbb
jae
lods
mov
mov
pop
add
fimull
ljmp
and
fstpl
xchg
mov
adc
mov
lret
pop
pop
mov
int
in
xchg
ret
mov
add
ret
aaa
push
aas
lds
xor
loope
pop
lods
push
cltd
ja
xchg
les
popf
sub
ss
sbb
aaa
and
sbb
cmpsb
inc
cmp
outsb
loopne
lock
addb
mov
adc
adc
das
mov
pop
mov
cmp
mov
xor
mov
push
push
cmp
ljmp
stos
clc
sbb
fsubl
popa
mov
cmp
leave
cmc
ds
es
aas
pop
das
sub
lds
lret
cltd
lods
dec
js
or
xchg
ja
cmp
data16
fildll
pop
pop
push
mov
shll
jo
sbb
jecxz
imul
stos
fldt
jge
sbb
push
test
outsb
fldt
daa
je
xchg
xchg
push
and
or
lea
lods
iret
jae
mov
inc
xlat
or
int3
in
es
addr16
sub
in
xorb
xchg
in
mov
adc
das
cs
in
fisttpll
sub
mov
shrl
sbb
dec
arpl
xchg
fsubp
aad
fisttps
pop
xchg
inc
sub
out
mov
and
push
std
push
mov
xor
data16
inc
in
pop
leave
mov
adc
fwait
xor
hlt
mov
xchg
pop
mov
inc
cmc
mov
mov
lods
and
ss
aam
stos
in
inc
out
dec
push
por
xchg
jnp
push
xor
loopne
je
inc
addl
add
inc
push
push
hlt
mov
add
mov
or
stos
data16
mov
das
ficoml
dec
sbb
dec
cmp
inc
pop
shlb
test
pusha
dec
les
ret
adc
int
rcl
std
dec
es
cmp
dec
adc
sbb
rorl
outsb
inc
dec
aas
daa
call
dec
std
rcll
mov
mov
add
sub
jecxz
add
shr
out
xchg
std
push
cmp
mov
mov
cli
mov
idivb
or
or
lret
inc
dec
or
pop
repnz
jecxz
sbb
mov
int3
lods
mov
adc
repz
popf
cmp
call
mov
xor
mov
nop
lcall
idivl
dec
lret
push
in
cmp
sub
int3
fmuls
adc
popa
movsl
mov
daa
aam
fdivr
jo
cmp
sbb
out
iret
dec
in
int
jecxz
orl
or
add
xor
mov
sub
mov
adc
stc
cld
jns
xchg
in
sub
rclb
fstpl
mov
add
ljmp
jnp
mov
mov
cmpb
lahf
movb
dec
in
mov
push
aas
das
push
pop
add
out
lret
sub
lret
loopne
push
and
insb
cmpsl
icebp
stos
les
or
unpckhps
pushf
xchg
movsl
repnz
pop
call
push
add
xor
pop
pusha
xor
loopne
call
je
out
mov
repnz
std
rolb
jne
aad
dec
mov
sbb
cmp
sub
lods
sbb
adc
sbb
lret
push
pop
outsb
outsb
repz
int
pop
fwait
adc
std
imul
in
sbb
mov
mov
iret
fisubrl
xor
jnp
aad
scas
mov
stos
repnz
adc
loope
sarb
lea
xchg
test
mov
les
jo
dec
les
xchg
in
ljmp
dec
dec
push
data16
pop
jbe
addr16
mov
xchg
mov
xchg
lcall
sbb
mov
jp
sub
adc
sub
mov
or
daa
mov
push
xchg
pop
adc
mov
sbb
push
pop
out
add
fadd
fcmovne
inc
sub
inc
fistps
cmp
mov
inc
mov
xor
xchg
das
xor
movsl
outsl
dec
adc
aaa
call
div
insb
div
imul
mov
xchg
pop
imul
idiv
add
pop
sub
in
das
mov
sbb
pop
sub
jno
sub
jmp
mov
hlt
or
loopne
and
dec
lods
dec
mov
sub
mov
dec
pop
jge
sti
jmp
pop
lock
fs
jb
mov
or
push
out
sub
ret
add
shll
mov
clc
dec
dec
cmpsl
and
scas
push
pop
xchg
test
cli
insl
lret
mov
and
inc
mov
sbb
test
sub
push
insl
pop
cwtl
pop
mov
test
adc
iret
cli
cs
jg
mov
ds
xchg
filds
bound
jb
xor
xchg
stos
int
mov
jmp
pop
add
lock
int
push
xchg
dec
cmpsb
imul
pop
outsl
or
ja
mov
in
or
mov
lahf
or
mov
jmp
mov
mov
inc
cmp
out
nop
add
jl
mov
sbb
fwait
test
dec
adc
rcll
sub
sbb
lret
dec
pop
inc
cld
leave
sub
sahf
orl
jle
repnz
and
xchg
ret
test
xorb
fs
dec
jae
sub
loopne
sub
ret
test
das
and
xchg
xor
mov
add
decl
test
inc
aaa
pop
ror
xor
push
xor
mov
cmp
imul
mov
insb
test
mov
call
xchg
xchg
ljmp
jne
or
add
clc
test
inc
push
mov
push
ljmp
xor
out
or
sahf
inc
push
jae
fistl
add
adc
int3
xor
pop
jge
sbb
xchg
xor
mov
clc
outsb
mov
xchg
test
aaa
repz
xchg
insb
add
outsl
ja
les
jbe
cmp
pop
mov
add
xor
xor
pop
adc
sub
insl
sti
ficomps
loopne
lock
jo
daa
rclb
scas
lret
in
sub
divb
add
dec
or
vhsubpd
or
jns
xchg
out
clc
and
push
into
inc
mov
xchg
push
aad
leave
cmp
push
jmp
ficomps
mov
cld
rolb
cmpsl
xchg
mov
aad
dec
pop
mov
jl
pusha
es
add
jge
xchg
xor
or
sub
mov
stos
sbb
jmp
lret
and
pop
adc
sbb
bnd
mov
je
stc
mov
dec
sbb
xchg
pop
add
mov
sub
push
xchg
jnp
sahf
das
cmpsb
test
cmpsb
pop
lea
mov
hlt
mov
stc
sbb
inc
es
fidivs
mov
bound
out
insl
jle
cmp
das
and
iret
cmp
adc
jae
jl
jle
cmp
dec
jbe
jecxz
sbb
and
hlt
cmpsb
ficoms
js
dec
fscale
or
test
add
xor
mov
inc
aaa
push
int
jns
cmp
inc
push
dec
sub
xlat
ja
mov
inc
adc
lds
and
cwtl
xor
adc
and
dec
xor
fwait
stos
mov
ficompl
negl
and
repnz
sbb
push
cld
out
lret
push
mov
outsl
stos
dec
popa
inc
mov
arpl
mov
push
adc
push
pop
stc
adc
subb
jp
xchg
imul
xchg
movsb
fstps
push
test
mov
fisttps
iret
push
mov
mov
stos
mov
cli
je
lea
jecxz
roll
xlat
sbb
fcomi
loope
mov
mov
adc
inc
sahf
mov
sub
mov
in
dec
jle
pop
xor
push
sbb
arpl
mov
sbb
repz
out
sti
pushf
adcb
xchg
lahf
lcall
mov
push
scas
push
xchg
adcl
scas
sbb
cs
out
stos
xor
inc
repnz
inc
jmp
popa
lock
fstpl
lds
dec
xchg
fmulp
ret
sbb
loope
add
xorb
sub
push
std
repnz
xor
aaa
mov
xchg
inc
out
fs
mov
fdivrs
rorb
xchg
mov
call
jle
adcl
xlat
shlb
mov
pop
call
jg
packssdw
mov
inc
pop
and
das
cmpsl
jb
pop
mov
mov
add
jo
fisttps
sbb
mov
sarl
push
in
and
in
sbb
les
cmp
lock
outsl
enter
test
aad
cmp
loop
imul
add
loopne,pn
mov
jns
jo
sub
das
adc
test
ret
cmp
adc
xchg
lds
xor
mov
jecxz
dec
mov
cmp
scas
jge
std
cmp
ds
or
repz
push
mov
fs
lahf
out
in
adc
cmp
stos
sub
jmp
pop
or
inc
push
sub
fisubrs
push
cmpsl
hlt
leave
xchg
fildl
ss
cmpsl
pop
and
inc
insl
or
sub
dec
fdivp
inc
pushf
es
sti
dec
loopne
out
jne
or
jb
divl
icebp
call
push
push
dec
xchg
xor
or
insb
fmull
mov
lds
jae
push
iret
adc
add
les
cmc
clc
popf
movsb
sub
pop
daa
aam
insb
add
inc
jl
leave
rol
imul
add
mov
in
pop
adc
cmp
jmp
test
lahf
fidivs
popa
lahf
in
jo
inc
pop
inc
loopne
daa
adc
call
fwait
pop
xor
cld
popf
jle
inc
data16
std
and
stos
mov
jns
loop
nop
std
mov
xchg
sbb
clc
dec
lret
mov
push
cwtl
xor
imul
mov
outsb
into
cwtl
rcrb
fisttpll
mov
lret
and
jl
mov
cmp
mov
inc
loopne
in
pop
dec
out
aad
into
mov
pop
mov
pusha
pop
pusha
stc
or
int
sbb
enter
loop
jp
adc
stos
pop
or
stos
mov
push
testb
mov
dec
mov
mov
fisubs
stc
xchg
sbbl
mov
imul
push
xor
cld
int
xchg
xlat
jmp
and
xlat
ds
in
out
dec
mov
rorl
or
xchg
xor
outsb
cmpsl
mov
push
fadds
loop
adc
iret
cmp
iret
std
push
push
xchg
mov
sub
test
pushl
pop
sbb
mov
xorl
jmp
add
and
mov
popa
or
fidivl
mov
or
cmp
test
pop
cmp
movsl
das
push
scas
lcall
out
andl
lock
mov
aam
jp
and
or
out
dec
sub
dec
aam
fxch
lcall
or
das
mov
inc
into
sbb
jne
cmp
cmp
sti
pop
dec
push
dec
and
dec
fistpll
lock
and
add
cmc
test
mov
xor
and
lods
stc
fmuls
fwait
loop
xor
push
xchg
pop
xor
mov
out
pop
jmp
test
clc
xchg
mov
mov
push
cmp
jl
mov
mov
ja
lods
dec
mov
loopne
mov
mov
adc
xlat
pusha
lea
out
dec
sbb
in
inc
sbb
popf
stos
sbb
mov
pop
out
fcoms
mov
jp
lods
enter
pusha
mov
adc
bound
and
or
dec
jo
out
cltd
or
sub
inc
imul
aam
aaa
loopne
adc
add
sub
sbb
sub
push
repz
push
in
jp
clc
js
repz
mov
mov
shll
mov
out
rorl
or
ljmp
push
std
test
sub
adc
cltd
push
jg
jne
in
mov
addr16
push
cmp
frstor
sub
imul
jmp
in
push
movsl
loope
jecxz
arpl
ja
insb
and
pop
add
sbb
sub
das
daa
push
mov
lds
mov
push
jmp
jno
adc
jp
cs
and
inc
fs
push
sbb
jne
inc
cmp
mov
sti
xor
rcll
std
pop
inc
inc
pop
push
cmovbe
dec
mov
lcall
inc
lods
add
imul
mov
clc
std
xchg
xchg
dec
mov
rol
push
mov
add
push
mov
mov
dec
lods
pop
ret
and
ja
subl
and
mov
cwtl
and
mov
xchg
mov
lea
out
nop
ja
cmp
rcll
outsl
movsb
or
call
outsb
mov
xchg
or
adcl
dec
std
cmpl
test
cmp
call
or
aam
xor
lahf
xchg
xchg
xchg
adc
call
sbb
mov
xor
mov
mov
or
enter
popf
adc
mov
daa
push
fiadds
insb
push
dec
mov
in
das
in
fdivrl
pop
call
pop
scas
sbb
ret
cpuid
in
jne
cmp
mov
xchg
pushf
pop
fwait
push
push
inc
out
imul
cmpsl
iret
or
test
lds
jnp
dec
jg
and
mov
cwtl
jae
lea
sahf
pop
mov
fimuls
dec
pop
mov
push
lahf
test
push
push
cmc
ds
and
shr
idiv
mov
and
arpl
fnstcw
stos
jns
movsl
push
bnd
mov
dec
scas
jno
pop
gs
gs
cwtl
divl
cmp
loope
mov
data16
mov
les
mov
xlat
mov
test
gs
push
push
data16
mov
sub
mov
test
fisttpl
sub
dec
cmpsl
fwait
aad
test
movb
jnp
nop
popa
mov
repnz
rorb
xchg
nop
sbbl
push
xchg
divb
add
mov
push
adc
cmpsl
ljmp
sub
mov
push
mov
mov
jl
add
fs
push
daa
mov
sub
leave
mov
mov
jns
sbb
lods
mov
cltd
xor
jmp
mov
out
arpl
mov
mov
sbb
push
xorb
sbb
in
lret
mov
in
sahf
adc
ja
push
jb
mov
leave
rcl
dec
mov
rolb
adc
std
xlat
shlb
loopne
js
mov
xchg
call
addr16
dec
stc
shr
adc
cli
inc
lret
mov
aam
mov
int
sbb
je
cmp
rorb
sbb
andb
mov
xchg
xlat
sarb
repz
and
ljmp
inc
pop
aaa
outsl
xchg
das
cmp
mov
jle
add
mov
adc
mov
ret
add
adcl
cli
pop
jmp
sub
fwait
pop
xor
jmp
fs
ret
scas
jo
push
add
dec
add
and
cmp
hlt
cli
mov
mov
out
roll
xor
adc
add
mov
mov
dec
cmp
push
sub
xlat
push
push
add
dec
cmp
fpatan
shlb
or
movsb
sti
dec
mov
lret
stos
iret
cmp
mov
into
xor
out
leave
repnz
mov
lret
pop
pusha
adc
jae
in
dec
fdivs
xchg
xchg
xor
sbb
cmp
ret
in
xor
mov
je
cwtl
icebp
mov
popa
dec
xchg
mov
out
or
jp
jp
adc
cmc
mov
fiaddl
aaa
cli
outsl
sub
pop
mov
test
xor
negl
scas
lods
sbb
adc
xchg
mov
test
movsl
mov
push
dec
dec
push
jno
jp
mov
push
or
cltd
push
ljmp
inc
adc
push
cli
arpl
cmp
lcall
fmuls
jg
lret
dec
lods
jmp
ljmp
sub
xlat
cmp
sub
dec
rcll
mov
cmpsl
pop
jmp
push
sub
or
mov
call
daa
dec
push
sti
fisubl
test
aas
mov
sbb
pop
sbb
jg
cmp
aas
fs
mov
and
call
jns
xacquire
and
and
sub
jne
fistl
daa
call
inc
clc
push
mov
push
and
pop
addr16
dec
imul
push
sub
shrl
jns
jbe
fwait
pop
out
xor
test
fnstsw
shlb
jbe
les
lahf
sub
test
mov
mov
adc
push
cmp
and
popf
xor
inc
mov
iret
iret
mov
stc
mov
test
mov
or
jmp
es
je
dec
jae
mov
dec
insb
mov
sbb
mov
jmp
nop
adc
xchg
sahf
pop
fists
in
lcall
inc
mov
push
sub
inc
jmp
int
shlb
add
fimuls
xchg
xchg
xor
push
scas
pop
xchg
inc
int3
imul
outsb
ss
and
jno
xlat
mov
adc
dec
xor
xchg
andl
cmp
push
icebp
imul
loop
mov
loop
xor
int3
xor
jmp
loope
cltd
mov
add
fbld
mov
repnz
aad
xorb
push
jnp
icebp
jbe
mov
adc
scas
test
bound
jb
fucom
sahf
lea
mov
test
mov
xlat
push
xchg
push
fs
xor
mov
xchg
sbb
hlt
pop
cmp
xchg
andb
lret
and
sbb
adc
add
or
je
xchg
add
cwtl
xchg
repz
popa
add
jp
call
push
iret
in
xchg
mov
je
jge
xor
mov
pop
outsl
mov
sbb
int
push
fs
out
push
mov
push
lods
jle
dec
daa
jmp
bound
or
test
push
int3
insb
and
sti
mov
mov
addl
ror
pop
mov
pusha
out
das
xlat
mov
ds
daa
or
adc
dec
fiadds
pushf
or
add
mov
jae
jmp
inc
jp
push
stos
inc
add
xchg
push
test
jno
int
lret
or
movsb
dec
inc
lods
in
nop
mov
pop
xchg
xlat
cld
push
xchg
or
pop
push
fidivrl
in
mov
mov
sub
test
sbb
ret
xor
xor
inc
ret
cmpsl
je
mov
fs
dec
or
cmp
jne
and
jmp
cld
mov
lock
shrb
mov
xchg
xor
push
insl
adc
mov
pop
inc
xor
jle
dec
adc
or
scas
loopne
pop
adc
test
xchg
xchg
test
mov
outsb
add
add
jmp
out
movsb
sahf
ret
dec
and
dec
pop
mov
dec
mov
pop
jg
pop
lret
mov
cmp
xorb
cmpb
adc
push
pusha
jbe
pusha
mov
cmp
push
jg
jbe
push
out
sub
int
jo
inc
mov
mov
pop
pop
lret
arpl
add
js
addr16
cwtl
dec
out
sub
pop
lds
jg
fisubrl
aad
lods
arpl
mov
mov
mulb
pop
and
or
xor
js
xchg
sbb
push
lcall
stos
or
mov
pop
sub
faddl
ret
movsb
clc
or
push
test
mov
inc
mov
cmp
mov
xor
jge
or
jle
push
cmp
xchg
je
inc
push
jae
scas
dec
fldcw
and
dec
push
and
pushf
xor
outsb
jbe
cs
ja
mov
xor
mov
data16
scas
movsb
inc
dec
ret
and
and
pop
test
test
rcrb
es
mov
mov
testl
xchg
leave
jo
sbb
xchg
mov
push
mov
inc
fildl
jb
xchg
popf
outsb
les
jge
scas
jp
lcall
jae
scas
push
stos
and
jne
lods
mov
xor
incb
test
xchg
gs
push
jmp
rcr
aad
xor
mov
push
inc
cmp
pushf
ljmp
icebp
leave
xlat
rorb
mov
jae
rcrb
repz
std
les
fcoml
sti
mov
rolb
xchg
out
jb
dec
xchg
cltd
leave
std
icebp
xchg
cmp
into
stos
inc
dec
jl
and
pop
xor
mov
xor
jmp
gs
push
call
mov
pop
pop
xchg
scas
subb
sub
pop
in
adc
sahf
repnz
mov
insl
mov
pop
std
test
jns
filds
iret
test
outsl
cmp
imul
inc
cmp
mov
out
fcompl
fcmovu
add
jae
call
rol
xchg
cld
cmp
enter
sti
pop
mov
dec
mov
ds
cmp
cmpl
lea
iret
jecxz
out
jnp
jno
mov
fwait
cmpsb
aad
jp
cltd
out
in
xchg
mov
mov
mov
sub
and
cltd
dec
loopne
clc
adc
out
repnz
cmp
outsb
lds
mov
cmp
xor
pop
mov
aas
inc
mov
sbb
pushf
sub
ja
popf
lock
sbb
and
xor
and
jne
sub
addr16
in
repz
or
repz
pop
insl
xchg
mov
mov
negl
push
in
push
sub
pop
add
or
int
mov
pop
xchg
lea
pop
lds
pusha
cmpsb
nop
pop
pop
sbb
inc
mov
adc
movsb
fcomps
ss
mov
jp
mov
add
mov
pop
mov
les
mov
movsl
pop
or
cli
test
outsb
imul
imul
pop
in
sub
shl
inc
push
imul
adc
jnp
in
fwait
rcrl
mov
inc
hlt
xchg
mov
inc
rorb
xchg
pop
mov
cld
xchg
sub
fwait
jns
idivb
lea
dec
inc
imul
xchg
or
mov
outsl
js
outsb
jnp
jb
loope
popa
mov
pop
lds
pop
xor
push
xor
ret
mov
xchg
testb
bt
pusha
pop
addr16
sub
and
lock
add
popa
movsb
push
and
mov
mov
fbld
mov
mov
cld
cmpsb
pop
les
or
cmc
jecxz
pop
sub
inc
jb
imul
das
jmp
shlb
dec
mov
and
sbb
cltd
push
pop
mov
pop
lods
aam
cwtl
push
add
aam
xchg
call
push
cmp
push
movsl
mov
stos
xor
push
mov
insl
es
jo
push
repnz
aaa
cmc
mov
dec
push
popf
inc
movsb
sbb
xchg
or
call
or
scas
jl
cmpsl
scas
push
leave
jne
fmuls
cmovg
in
jbe
int3
stc
pop
imul
jnp
xlat
cltd
outsl
pop
jl,pn
in
fsubrl
imul
insb
fdivrl
dec
daa
mov
mov
fwait
adc
or
je
sub
xor
xchg
jns
clc
std
bound
adc
mov
cltd
mov
imul
and
je
in
push
cmp
insb
int
int
cmp
xor
cmpsb
icebp
and
clc
mov
jbe
mov
movsl
call
mov
jmp
ss
mov
sub
mov
dec
bound
cmp
push
psubsw
sub
test
add
ret
mov
int3
inc
mov
and
aad
mov
lret
push
xor
lcall
sbb
add
int
fwait
insb
inc
jbe
sub
mov
loop
cmp
and
mov
addr16
push
cmpxchg
rolb
add
or
inc
mov
jmp
xchg
pop
xchg
inc
sub
mov
mov
mov
jo
rcl
mov
xchg
xor
mov
icebp
stos
sbb
push
rorl
cld
pop
ds
es
stos
scas
in
daa
push
lods
and
inc
push
xchg
loope
insl
adc
inc
xchg
adc
adc
mov
add
xor
mov
jnp
fprem
movsb
or
ss
xor
sub
push
push
jmp
ficompl
arpl
nop
mov
inc
push
sub
lds
push
outsl
push
jns
rcl
jge
into
xchg
aaa
test
push
lahf
fdivr
cmp
les
js
mov
outsb
xchg
movsl
jae
and
dec
push
mov
ljmp
or
jno
imulb
insb
lret
adc
sbb
and
sbb
sub
fistl
push
or
in
xor
jle
insb
xchg
sub
stos
movsb
cmp
jge
inc
adc
aam
loop
scas
out
jbe
pop
adc
in
movsl
shrb
cmc
push
negl
movsl
lds
inc
repz
push
mov
or
mov
jae
clc
scas
xor
push
aad
jbe
inc
or
pop
cmp
mov
int
xchg
jge
adc
xchg
imul
addr16
pop
cmpb
sti
int
or
inc
or
xor
mov
xor
dec
xor
xor
mov
imul
xlat
fimull
jae
fnstenv
aas
adc
and
pop
outsb
hlt
lea
out
xchg
push
xchg
inc
sub
pop
dec
mov
jl
in
inc
cmp
mov
pop
xor
xor
hlt
xor
ljmp
mov
imul
mov
repz
and
inc
push
sub
cli
sub
imul
pop
push
flds
popf
push
and
mov
pushf
push
jmp
mov
outsl
cmp
dec
mov
adc
inc
pop
pop
inc
push
sub
inc
jno
ss
jne
dec
or
insl
sti
dec
mov
cmp
in
mov
fstps
xchg
xchg
adc
int
hlt
mov
cld
hlt
jl
ficomps
leave
mov
cmp
ret
mov
jmp
adc
inc
pop
orb
std
cmpsl
int3
pop
jmp
or
cmp
loopne
daa
dec
push
inc
mov
jne
into
push
rorl
xchg
loop
sbb
pop
xchg
add
cmp
mov
xchg
cmpsb
inc
pop
push
xor
add
lock
xchg
cmpsl
push
pop
mov
push
pop
lcall
fsubrs
dec
mov
push
pop
out
mov
push
aas
lcall
adc
movsl
and
aaa
jnp
sarl
xchg
cmp
clc
sbb
xlat
sbb
xchg
and
in
dec
cmp
lret
jnp
cltd
pusha
push
lods
negb
jp
jo
dec
cmp
and
sbb
out
xchg
jmp
inc
enter
inc
mov
xchg
imul
mov
mov
or
jl
xchg
fnstenv
xchg
pop
mov
jmp
inc
imull
popf
ror
jecxz
mov
nop
cld
cmp
pop
adc
jo
lods
mov
je
and
xor
dec
sbb
jg
aam
xor
jns
or
loop
pop
or
push
dec
mov
dec
pop
aad
sbb
xchg
jne
push
pop
cmp
jg
mov
inc
sbb
jb
and
mov
mov
mov
pop
cmp
cmc
jecxz
inc
sbb
cmpsb
mov
lea
sbb
rolb
or
push
pop
jbe
bound
sarb
mov
cmp
jge
add
push
movsl
xor
mov
xlat
push
cmp
iret
dec
mov
sbb
movsb
dec
lods
or
not
rorb
imulb
daa
mov
imul
jns
das
ret
js
push
add
mov
out
dec
ficoml
negl
cmp
stos
mov
push
pop
into
sub
inc
lds
and
mov
push
fiaddl
js
xor
or
dec
rorl
insl
ffreep
xor
lret
in
mov
dec
filds
mov
push
nop
mov
scas
cmp
jp
mov
ljmp
push
inc
jp
sub
daa
aad
or
out
popa
xchg
xchg
xor
xchg
sbb
xor
ficomps
sbb
sub
fdivl
fisubrs
push
loop
cmpl
adc
stos
clc
adc
jg
push
push
fsubrs
lret
mov
andl
mov
nop
test
test
cmp
push
imul
adc
nop
sarl
mov
jle
adc
stos
icebp
insl
and
cld
mov
jl
and
arpl
dec
ret
pop
pop
adcb
sbb
xor
mov
inc
repz
repz
inc
mov
in
mov
dec
leave
xchg
stos
dec
loop
fnsave
lea
sbb
pop
daa
sub
into
cld
mov
push
mov
mov
js
inc
sub
jge
mov
pusha
mov
xor
fmul
btc
ret
popf
int
cli
sahf
inc
lret
xor
dec
lods
cmp
mov
dec
mov
xchg
cltd
or
jo
lea
sarb
std
cwtl
movsb
mov
lret
jo
cmc
push
mov
mov
out
cld
mov
aaa
js
rclb
jnp
add
pushf
mov
add
in
push
or
mov
insb
fisubrl
sub
jae
test
lods
cltd
mov
jae
pop
xchg
jb
outsb
rorb
adc
xchg
jge
sbb
dec
push
sbb
je
cmp
jnp
loopne
lea
cmp
outsb
inc
inc
sub
out
js
insl
inc
pop
adc
aaa
push
cmc
pop
mov
inc
bound
xchg
pop
xchg
bound
pop
scas
rolb
mov
enter
xor
mov
sti
sub
lret
mov
mov
sub
pop
sbb
pop
dec
adc
mov
lret
xchg
dec
jnp
out
insb
jne
cmp
clc
stos
lds
push
jno
or
in
mov
jns
push
push
mov
out
movsl
shll
add
sbb
ret
loop
or
mov
fsts
cmp
mov
inc
pop
sbb
loopne
sti
mov
adc
xor
out
cmp
mov
aam
pop
xor
in
loope
lret
xor
insl
lahf
fadds
jns
lods
clc
dec
jl
sbb
mov
mov
lcall
sar
add
and
mov
pop
ficoms
cmp
stc
repz
rorl
mov
loopne
into
fxch
iret
arpl
sbb
sbbl
cmc
cmp
fcmove
xchg
jno
insl
test
mov
push
push
test
insb
xor
stos
cli
adc
outsb
lahf
scas
sbb
sbb
repz
test
lret
push
push
nop
imul
lods
iret
sbb
jge
icebp
pop
mov
icebp
ret
inc
xor
push
addr16
movsl
xor
mov
mov
xchg
dec
bound
push
in
in
mov
jno
stos
fbld
add
mov
test
cmp
lret
sub
int3
dec
xchg
fcoms
sbb
cmp
sbb
or
enter
ret
and
idivl
and
jl
pop
loopne
lock
ret
rorb
or
xchg
mov
mov
jle
mov
xchg
insb
into
xchg
cmpsl
repnz
xchg
addr16
ds
cmp
jle
mov
mov
jns
andl
pop
paddsw
daa
cmp
mov
add
push
mov
sub
sub
xchg
mov
add
mov
je
inc
int
pop
mov
test
sub
dec
push
loope
lahf
mov
call
popa
jle
ljmpw
loop
iret
insl
cmp
fisttpl
mov
pop
loopne
ja
xor
xchg
mov
xlat
adc
mov
in
out
cmp
jae
or
pop
outsb
js
xchg
cld
xchg
mov
dec
adc
sbb
pusha
mov
scas
add
out
in
mov
shrl
ret
sub
push
or
mov
cmp
repz
repz
push
jle
push
pop
test
out
jns
popf
pop
adc
xchg
xor
cmc
into
out
dec
fnsave
jmp
lea
sub
mov
mov
push
adcl
sub
in
cld
or
push
xorb
push
jmp
int3
push
cmpsb
movsb
jecxz
int
shll
arpl
mov
sbb
xor
mov
cmpsl
testb
cmc
mov
ja
test
mov
sbb
add
cs
xorl
call
data16
and
nop
fwait
div
add
aas
jp
mov
ficoml
pusha
je
fidivrs
and
xchg
pusha
nop
xchg
add
test
outsl
push
inc
push
lock
cmp
push
nop
arpl
repnz
mov
or
mov
push
stos
hlt
fldl
jbe
mov
out
push
int
into
pop
jae
push
and
jmp
aad
pop
aas
cs
into
mov
outsl
aam
fnstenv
pop
and
test
rorl
jmp
mov
bound
pop
lock
or
test
jg
and
out
in
cmp
xor
adc
les
dec
ret
std
pop
enter
xor
and
or
xchg
push
fcomp
sub
push
jbe
decb
sbb
idivl
push
mov
jle
repnz
in
test
mov
out
cmp
aad
xchg
jbe
repz
fisubrl
bound
es
jbe
push
mov
pop
lcall
je
and
jmp
xor
cwtl
stc
jae
jae
ret
test
cmp
dec
mov
popf
jmp
xchg
out
pop
cmpb
jo
push
mov
pushf
ret
and
jmp
and
pop
testl
dec
and
lock
cwtl
mov
clc
xchg
ds
fidivrs
pop
pop
mov
pop
push
loop
mov
repz
sbb
push
push
dec
lds
mov
pop
rcrb
sahf
cmp
imul
or
xchg
out
mov
jbe
cltd
mov
adc
fsub
sbb
adc
ret
clc
xchg
mov
scas
xlat
add
ficoms
ds
addr16
or
jg
out
scas
into
icebp
dec
imul
rcrl
icebp
dec
pop
inc
ret
rorb
push
rorb
and
pop
loopne
pop
adc
and
in
mov
cld
jne
lahf
cmp
cmpsl
in
and
ss
and
mov
jmp
loope
pusha
push
mov
cmpsl
dec
dec
ret
lock
sub
or
mov
test
imul
cld
out
and
repz
xchg
pushf
xor
cltd
mov
lcall
push
imul
pop
push
lret
mulb
in
mov
dec
mov
shl
jl
and
push
cmp
and
push
and
xchg
lret
popf
testl
sub
dec
xchg
pop
pop
xchg
inc
mov
inc
aam
test
loopne
hlt
push
daa
gs
fists
cs
lahf
cmp
testb
push
popf
xor
sbb
inc
das
cmp
shll
cltd
adc
js
sub
sub
jge
sub
jo,pt
rcl
cmp
adc
push
fwait
inc
and
inc
xorl
add
push
pop
gs
dec
ja
push
inc
stos
stc
dec
mov
jne
mov
fwait
jle
adc
jbe
sub
cmp
mov
pop
sbb
popa
pop
out
mov
js
sbb
dec
std
mov
jbe
jbe
sub
aas
add
adc
push
cs
addb
in
inc
push
outsl
in
xlat
push
adc
aas
dec
cmp
push
fscale
cld
in
loop
pusha
sub
movsb
movsb
insb
or
repz
fs
push
add
ret
jg
in
add
dec
pusha
cmpsl
mov
jge
loopne
call
dec
pushf
or
and
inc
and
nop
sub
inc
aad
dec
push
pop
or
pop
mov
out
adc
sbb
or
jle
js
pop
loopne
inc
push
test
cmp
xchg
or
pop
int
xorb
loopne
setle
ret
clc
cmpsb
push
out
bound
into
inc
mull
lcall
loope
aaa
scas
fdivr
iret
cmp
in
cli
inc
sub
mov
xchg
stos
mov
mov
repz
sub
xchg
mov
jb
sbb
pop
xor
xor
shll
mov
into
repnz
leave
or
aas
addb
scas
insl
and
out
rcrl
lods
movsl
in
nop
insb
stos
inc
push
fisttps
xchg
lds
int
out
cmp
push
jne
and
fwait
loope
pop
sbb
sub
push
lret
sub
push
dec
pop
sub
pop
int3
and
mov
bound
sub
ret
jmp
je
mov
xchg
or
mov
or
pop
dec
adc
pop
push
push
mov
fstpt
mov
xchg
pop
les
in
repz
negl
inc
jbe
std
filds
mov
lock
fldz
stos
arpl
gs
ret
ja
mov
bnd
enter
xor
push
or
mov
adc
andl
loopne
call
int3
xchg
inc
xor
shll
sbb
fs
clc
lahf
jp
repnz
jl
ljmp
xchg
mov
je
scas
movsb
mov
dec
cli
mov
mov
jmp
repz
mov
outsl
mov
insb
push
add
adcb
and
sub
lahf
int3
int3
mov
andl
lcall
js
push
iret
icebp
or
or
mov
and
aad
stos
jle
or
or
mov
movb
jns
inc
int
mov
fldenv
mov
sahf
ds
add
adc
pusha
call
add
mov
mov
fdiv
xchg
push
arpl
out
sbb
inc
jbe
les
xor
xor
mov
into
xor
stc
fistpll
call
mov
mov
and
popf
cmp
push
xchg
adc
cmp
mov
pop
inc
push
cmpl
outsl
mov
cld
adcb
adcb
or
sub
idivl
pop
inc
sbb
daa
movswl
shrb
sbbb
shl
fcmovnbe
jnp
inc
arpl
repz
int3
inc
sub
ficoms
test
cs
insl
pop
or
pop
dec
fidivl
xor
rclb
test
dec
into
xchg
mov
jecxz
pop
cmpsl
popf
mov
rcl
cmp
sbb
adc
popa
ds
push
inc
lds
shl
flds
sub
ja
add
inc
loop
mov
ljmp
ljmp
adc
jge
rcrb
out
dec
or
mov
pop
and
sbb
cmp
pop
add
cmc
inc
adc
enter
xchg
lcall
rcll
cmp
pop
mov
sbbb
sbb
mov
stos
shl
lods
xchg
popa
daa
jns
imul
jecxz
into
xor
je
sub
xchg
pop
mov
aad
xor
test
sbb
scas
sahf
xchg
aam
and
jmp
add
mov
sub
or
cmp
push
and
cmpsl
ja
inc
insb
vmovlpd
popa
shrb
faddl
dec
xor
movl
mov
xor
mov
jmp
push
iret
add
ficoml
pop
pop
out
inc
in
pop
les
dec
cld
or
repnz
sahf
xchg
lds
arpl
mov
lea
xchg
pop
mov
insl
ljmp
or
pop
mov
iret
sbb
pop
dec
xor
push
mov
dec
scas
push
adc
shll
insl
fwait
jg
dec
inc
xorb
aad
outsl
lret
bound
test
mov
push
dec
mov
push
fbld
pop
fsub
push
test
popa
mov
cmpsb
mov
scas
jne
orl
outsl
rcl
or
jle
mov
outsl
xchg
pusha
int3
stos
jle
push
cwtl
lods
cmp
push
orl
lahf
push
call
popa
inc
popf
movsl
push
bound
stos
loope
xor
lea
int3
addr16
iret
pop
add
and
shl
cld
mov
dec
call
loop
xchg
mull
cwtl
pop
xchg
adc
imul
pop
and
cmp
add
dec
inc
lret
sbb
add
fwait
ret
loop
sar
icebp
sbb
cmp
cmp
ret
rolb
or
cld
sub
mov
test
cmp
sbb
mov
push
mov
mov
and
adc
push
bound
aad
jne
pop
sub
out
or
popf
aam
stos
ret
das
fisttps
cmp
pop
imul
or
popf
jmp
inc
addr16
arpl
cmp
dec
cmp
js
movsb
lods
pop
loopne
and
cld
mov
fsts
mov
clc
clc
jge
sahf
ljmp
ja
sbb
push
sub
in
cmpsl
out
out
xchg
inc
pop
inc
fs
popf
adc
imul
shlb
imul
test
push
aad
push
nop
popa
pop
loopne
mov
inc
and
jbe
mov
scas
fdivrs
jns
jecxz
stc
or
push
incl
fwait
in
pushf
push
stos
imul
xchg
pushf
adc
or
push
imul
jmp
xor
test
inc
bound
adc
test
subb
inc
sbb
mov
js
lods
scas
popf
push
mov
xor
int3
pop
jmp
pop
clc
inc
leave
lret
loop
and
call
ss
cmpsb
test
loope
loop
out
or
inc
xor
cmpb
jmp
jb
icebp
mov
ret
dec
les
mov
popa
adc
mov
sbb
push
dec
jns
sub
pop
and
or
repz
mov
lret
push
insb
xchg
jns
pop
rcrb
shrl
outsl
cmp
mov
sub
in
mov
hlt
lret
enter
psubd
fstl
adc
adcl
jnp
xrelease
pop
cmp
xchg
or
jg
fmull
or
mov
mov
jmp
decl
loop
sbb
jo
inc
xchg
sbb
and
mov
jae
ret
and
sub
rcll
jb
xchg
add
mov
cld
aam
sub
test
mov
lret
aas
adc
sti
daa
imul
and
add
lods
mov
sub
incl
mov
push
repz
inc
and
or
or
cltd
aad
pusha
imul
cmp
cmpsl
popa
in
lret
sbb
scas
icebp
scas
js
jne
sub
jg
push
aas
dec
loope
ds
aad
scas
lea
sbb
scas
fsubs
xchg
popa
and
aad
add
daa
aad
testl
pop
or
adc
push
mov
sbb
lahf
xchg
add
fwait
repnz
mov
test
mov
jnp
lock
and
or
add
addl
and
test
outsl
sbb
dec
pop
xchg
mov
stos
in
jno
test
loopne
rep
mov
int3
push
push
das
jb
daa
or
ds
jle
push
mov
xlat
or
dec
test
shll
cltd
mov
out
movsb
xor
sarl
push
int
cs
popa
push
nop
fistpl
xchg
pop
mov
int3
jecxz
cwtl
sbb
add
aam
push
xchg
out
outsb
pop
mov
mov
out
jbe
mov
test
adc
and
xchg
out
inc
mov
add
rcl
lock
dec
inc
mov
loopne
adc
pusha
inc
mov
cld
cwtl
cli
xchg
fsubrl
mov
adc
or
xchg
arpl
lock
mov
iret
mov
divl
popa
jecxz
pop
and
fildl
pop
subb
jp
jle
push
insb
popf
int
stc
aam
add
mov
or
cmpsb
mov
sbb
inc
cmp
ret
stc
ss
inc
outsb
mov
sub
addr16
mov
sbb
stos
mov
add
je
aad
dec
call
roll
in
inc
sub
dec
jbe
cmpsb
loope
in
xchg
sbb
dec
cs
rorb
pop
mov
sarl
push
and
fstpt
adc
lret
pushl
popf
dec
dec
ds
ficomps
loope
cli
xchg
push
aas
ret
xchg
int
mov
pop
ret
mov
addb
ficoms
and
hlt
mov
dec
mov
daa
mov
repz
ljmp
bound
jae
mov
and
rorl
pop
negl
mov
in
jle
repz
cld
pop
out
dec
in
in
mov
test
dec
jmp
gs
push
bound
adc
xchg
pop
repz
scas
dec
leave
and
out
imulb
sahf
jmp
shlb
cwtl
add
xchg
pushf
pop
add
mov
mul
cmpsl
lock
mov
push
cmpsb
sbb
ss
and
jge
mov
sbb
or
dec
cmc
into
xor
das
or
pop
adc
aas
jne
mov
cmp
loopne
imulb
pop
push
jbe
jb
mov
lcallw
or
push
lahf
sahf
push
loopne
dec
or
mov
hlt
push
adc
jl
mov
in
sbb
test
test
imul
xorl
sbb
imul
icebp
fwait
inc
cmp
fwait
mov
mov
push
jecxz
movsb
xchg
cmp
testl
shrl
mov
repz
faddl
stc
adc
push
aad
xor
rolb
cmp
lret
rcr
dec
dec
mov
adc
jmp
fiaddl
out
sbb
dec
je
push
cmp
in
iret
clc
popa
mov
les
xchg
mov
inc
cmpsl
loope
aad
or
jae
pop
sub
lods
lds
pop
subl
dec
xor
xchg
cmp
pop
pop
ja
in
dec
in
adc
jge
pop
push
rcrl
test
loope
fs
enter
xor
mov
ffree
xor
adc
xor
aas
dec
bound
movsb
dec
or
enter
nop
lods
sbb
mov
std
fs
push
xor
cmp
mov
lret
lahf
int
sbb
push
jo
lret
push
add
sti
repz
or
out
push
push
popf
int3
add
adc
xchg
insb
mov
xor
arpl
xchg
xchg
jno
fwait
test
je
sbb
sbb
ss
pusha
jno
popf
mov
popf
dec
xchg
and
bound
in
rclb
popf
arpl
mov
mov
cwtl
cmp
jmp
sbb
scas
insb
add
pop
lcall
or
ret
in
mov
cmp
loope
dec
dec
mov
dec
bound
mov
sbb
jg
sahf
jp
adc
mov
mov
pop
lock
push
mov
inc
sbb
pop
add
cmp
lods
in
inc
xchg
int
or
das
sbb
jl
jns
subl
pop
lret
repnz
cmp
jae
inc
pop
insl
and
cmp
cmp
mov
xor
cmp
in
push
push
xchg
dec
dec
js
cwtl
jecxz
mov
push
and
shll
xor
and
sti
inc
sti
jle
shrl
stos
cltd
arpl
pop
repnz
gs
aam
lahf
mov
sbb
and
sbb
xchg
lods
cs
shlb
xchg
int
sti
push
dec
std
lret
pop
notl
sti
jmp
lret
xchg
dec
leave
out
sbb
push
sbb
push
es
pop
ror
cmp
xor
and
xchg
repz
cmp
addr16
out
dec
adc
rcrl
fisubl
je
and
imul
bound
pop
dec
dec
push
push
mov
test
xchg
push
xor
push
std
scas
fs
inc
pop
push
xchg
cmp
adc
lahf
push
adc
test
lods
pop
movsb
test
pop
les
add
js
sub
push
rcr
fdivrl
dec
xor
add
je
xchg
and
jbe
cmp
jg
jb
gs
sub
cltd
inc
mov
ret
sahf
xor
jae
arpl
mov
sbb
mov
pop
cwtl
rorb
xchg
imul
adcl
mov
pop
inc
je
mov
jno
dec
and
frstor
data16
adc
lahf
aad
fs
loop
mov
push
add
imul
cld
pop
inc
insb
nop
cmp
ss
dec
sbb
mov
add
data16
mov
and
push
xchg
ss
dec
mov
imul
icebp
pop
sub
ja
mov
lock
leave
lahf
xchg
pop
enter
mov
mov
push
clc
jae
fs
lea
cmp
cmp
aad
fcoml
push
js
es
dec
cmp
fisubs
mov
sub
imul
dec
ss
mov
push
aas
test
mov
in
sbb
int3
inc
push
xlat
xchg
es
fsubrs
and
add
mov
divb
cmpsl
leave
test
pop
pop
mov
sbb
data16
rcl
movsl
pop
testb
dec
testb
in
rcl
sub
fldl2t
ss
jno
enter
and
jno
add
adc
aad
pop
test
jno
sub
sar
cmpsb
arpl
iret
int3
in
mov
lahf
gs
mov
mov
scas
outsl
dec
fistpl
cmp
lcall
aaa
enter
arpl
imul
cmp
sub
and
push
bsf
mov
repz
out
mov
imul
aaa
jg
jl
pop
push
mov
inc
adc
mov
or
insb
jmp
mov
sub
ljmp
sysexit
pop
push
cmc
dec
fst
jnp
rcr
dec
mov
fmull
out
fdivrl
movsb
arpl
js
not
jae
into
push
xor
pop
or
into
cmp
adcl
scas
shrb
jmp
mov
repz
mov
push
cltd
jp
push
imul
ret
mov
mov
sbb
adc
mov
xchg
xchg
and
xchg
pusha
cmpsb
cmp
mov
pushf
mov
scas
test
push
pop
mov
push
mov
into
and
call
bound
cld
adc
mov
cmpsl
or
lea
jle
pop
inc
pop
gs
or
add
pop
and
push
out
push
xchg
ret
hlt
leave
out
aaa
lret
or
les
into
mov
aad
arpl
icebp
push
or
std
inc
dec
mov
cvtpi2ps
pop
ljmp
rcrb
cmp
xlat
sahf
sub
inc
incb
stc
add
fsubr
in
mov
jo
dec
sub
or
lahf
fdivr
mov
aam
xchg
push
xchg
sub
and
outsb
sub
enter
mov
mov
out
push
stos
push
or
push
sarl
pushf
and
shrl
out
adc
repnz
inc
cmpsb
mov
adc
or
subb
in
into
sahf
lahf
sbb
leave
jnp,pn
dec
dec
aad
andl
jbe
add
lahf
in
xchg
cli
mov
push
push
jecxz
sub
push
js
fadd
xor
je
push
call
sbb
stos
push
sub
xor
cmp
clc
popl
fdivrs
xlat
push
mov
sbb
imul
jecxz
dec
or
aam
or
or
and
js
icebp
fisttps
fmull
mov
xorb
fidivl
test
sbb
fcmove
mov
xor
in
inc
adc
out
push
mov
jbe
jmp
aas
scas
add
test
stos
cs
jae
jb
sub
testl
jbe,pn
aad
sbb
sub
pusha
cmpsl
repnz
mov
test
and
inc
nop
and
div
insl
dec
orl
jecxz
jne,pt
and
std
mov
inc
or
cmpsl
jecxz
pop
inc
stos
push
push
lea
loopne
or
sub
sub
nop
add
pop
outsl
push
xor
xlat
int
inc
mov
lds
aaa
ret
pop
stos
cwtl
sub
fs
outsb
add
subl
xlat
push
sahf
mov
pop
pop
ljmp
pop
sbb
jns
adc
push
jae
mov
hlt
dec
sub
out
sbb
jb
mov
lret
add
pop
cmp
push
js
leave
arpl
add
aad
sbb
stos
xchg
stos
push
xchg
mov
mov
mov
fisttpll
adc
inc
fidivl
fcoml
notb
ja
and
out
dec
jae
bound
dec
and
mov
jecxz
inc
xor
push
jge
adc
bound
and
pusha
pop
dec
fcompl
stos
sub
jb
orb
cld
lret
sbb
jge
jp
mov
loopne
inc
and
mov
insb
orb
imul
push
xor
adc
adc
xchg
ljmp
add
mov
mov
dec
cmp
movsb
cmp
and
or
jle
add
test
inc
sub
test
push
cmp
test
std
jb
cmp
icebp
out
push
in
and
imul
mov
add
out
sub
pop
int
push
push
stc
or
cmp
sbb
bound
sbb
ret
in
xchg
test
std
or
mov
dec
jae
std
xchg
outsl
push
jecxz
je
movb
sti
xchg
xlat
pushf
loopne
int
add
jle
sarb
and
ja
stos
stos
insl
rcr
cmc
cs
adc
inc
sub
fsts
xchg
add
mov
push
and
test
sub
fldenv
jecxz
cld
aas
daa
fucom
or
aad
xchg
cmpsl
jp
lcall
ljmp
pop
sbb
cmp
jnp
out
sbb
sbb
lods
pop
cmp
dec
test
push
test
xor
cmp
fxch
dec
iret
mov
fsubs
stos
fs
pop
sub
sub
bnd
mov
cmpl
xor
aas
subl
mov
mov
push
lret
mov
push
jnp
fcom
mov
jp
mov
mov
mov
cmp
es
ds
cmp
mov
stos
lods
incb
jb
out
cmpsl
lods
outsb
gs
or
mov
adc
or
or
adc
test
inc
lock
std
xor
aaa
jg
out
mov
jo
ljmp
push
cmpl
arpl
fwait
sbb
push
xchg
mov
int
jne
rcrb
sbb
mov
jmp
out
call
aad
jp
es
xchg
testl
and
jg
movsl
xchg
flds
xor
pusha
movsl
xchg
insb
leave
cmp
mov
jmp
mov
xchg
mov
leave
lods
mov
or
mov
ljmp
pushf
out
outsl
cmpb
pop
xchg
mov
rorl
mov
jne
sub
lret
jbe
inc
loope
dec
mov
cltd
call
addr16
cld
out
mov
and
test
lret
repz
lds
test
or
leave
pop
add
mov
incb
mov
lea
mov
lea
inc
inc
sbb
or
dec
imul
in
and
cmpb
insb
or
inc
mov
sub
fwait
dec
pop
and
imul
mov
jg
lcall
mov
cwtl
loope
add
mov
push
ret
mov
bound
pop
pop
lock
mov
jge
ljmp
adc
jne
test
or
mov
cmp
lds
loopne
inc
or
push
lock
or
arpl
loopne
test
xchg
pop
xor
sub
icebp
jecxz
push
or
push
sti
adc
push
stos
pop
push
sbb
add
testl
sbb
mov
negl
mov
aas
sbb
movsb
push
imulb
mov
mov
cmpsl
lcall
mov
xchg
dec
ljmp
fisubrs
pop
pop
mov
sti
xchg
std
shlb
jno
pop
aas
or
xchg
lcall
ss
jecxz
adc
sbb
nop
mov
mov
mov
xor
aaa
ja
dec
repnz
add
mov
lret
rcrb
pop
jge
sub
jmp
and
popa
data16
dec
xor
stos
lock
or
out
pop
hlt
lea
push
xacquire
xor
sti
and
push
test
jo
push
in
push
out
mov
jmp
out
push
fnstcw
mov
ja
stos
fdivs
std
jb
hlt
fidivrs
inc
jnp
rorb
iret
in
jg
mov
or
cmp
inc
outsl
jae
lcall
and
jno
push
push
movsb
cmc
sbb
lock
nop
jl
pop
xor
out
xor
xchg
xor
push
jne
mov
push
jae
addr16
cmp
das
das
call
out
pop
ljmp
data16
lods
stos
or
pop
je
or
add
sub
stos
and
push
lods
jb
sbb
pop
stc
jmp
inc
or
aas
jecxz
outsb
pop
pop
cmp
inc
sti
sbb
hlt
mov
cmp
fisubl
push
mov
fmuls
mov
enter
rcl
shlb
lfs
mov
jle
aam
bound
add
push
push
xchg
bound
pop
test
sbbb
xlat
lock
out
mov
mov
js
popf
stc
push
pop
rolb
xchg
xchg
push
mov
lret
or
mov
imul
insl
lea
mov
xchg
inc
fsts
push
push
push
xchg
dec
loop
leave
cli
pop
xor
adc
push
dec
sbb
nop
inc
imul
gs
dec
or
scas
mov
rcll
imul
xchg
outsb
push
pop
jg
in
pop
xchg
jb
add
mov
jl
xchg
test
and
and
popa
mov
test
cli
arpl
xchg
aam
push
ss
mov
dec
push
test
andb
adc
test
pop
jecxz
test
out
adc
clc
js
fists
addr16
sbb
rol
repnz
das
add
pop
aad
fwait
xor
dec
pop
test
pop
xorb
xchg
push
sbb
push
pop
fs
loop
out
loopne
jb
dec
pop
out
push
push
sub
pop
shll
push
ljmp
push
call
sbb
out
xor
pop
pop
inc
inc
in
lods
addb
neg
xchg
push
shll
push
mov
mov
sbb
jae
lods
or
aad
pop
std
or
sbb
inc
ljmp
cmc
aam
subl
push
pop
mov
xchg
rclb
aas
dec
loopne
mov
adc
fs
les
pop
xchg
mov
popf
leave
pop
xchg
fsubp
je
popf
cmc
pop
sbb
jo
sarl
test
xchg
es
fwait
arpl
add
adc
pop
int3
and
cmp
shll
lock
mov
jmp
aam
xchg
push
mov
int3
jns
dec
lret
data16
outsb
popf
cmp
mov
and
sub
pop
sti
cmp
int3
inc
jbe
shrl
add
rcl
lea
pop
mov
enter
sub
jae
les
jl
lahf
outsb
rol
mov
aad
arpl
jo
mul
inc
push
in
push
xlat
jnp
push
mov
inc
pop
add
movsl
mov
pop
inc
push
sti
sub
call
or
dec
or
shr
sahf
pushf
xor
dec
or
or
and
xor
fcmovu
mov
cmc
outsl
mov
mov
dec
cmp
mul
jge
in
cmpsb
xlat
cli
out
dec
xchg
sarl
add
xchg
into
mov
mov
dec
jo
shlb
mov
movsb
fs
insb
pop
dec
mov
pusha
lock
lcall
cmp
xchg
inc
push
add
adc
jno
xor
enter
pop
add
mov
lea
cwtl
sub
pop
insb
shrl
sub
inc
in
pop
bound
jns
sbb
sti
loope
je
movsb
scas
push
sbb
lret
mov
sub
xchg
stc
fcmove
pop
iret
cmp
cmp
jbe
mov
rcrl
jp
sub
add
xchg
xorb
push
adc
repz
icebp
push
scas
xor
push
nop
mov
and
ja
jge
inc
lods
jne
lret
xchg
xlat
daa
push
add
aaa
mov
lret
std
xchg
mov
pop
cmpsl
and
mov
loope
push
dec
test
fwait
lahf
and
push
loope
sahf
movsl
xchg
icebp
clc
inc
cltd
push
pop
xchg
sub
inc
shl
jmp
push
inc
aam
push
push
inc
pop
in
aam
jecxz
popa
or
bound
inc
in
sarl
and
push
popf
lcall
or
sbb
imul
lret
arpl
cmp
and
es
out
fs
jb
xchg
js
xchg
jge
cs
dec
sub
push
and
fsts
mov
or
mov
in
jno
bound
or
pop
shll
lret
fsubrl
mov
ja
pop
fildll
roll
pop
aam
or
fildl
popa
dec
cmpsb
mov
jns
dec
jne
lret
dec
add
out
cmc
jno
roll
ds
ficompl
push
jl
bound
mov
ret
add
xchg
jo
push
insb
cmp
adc
adc
imul
add
gs
pop
shrl
inc
sti
add
js
in
fsub
dec
push
negb
jnp
adc
orl
push
xchg
sbb
jne
xchg
movsb
test
pop
jecxz
outsl
dec
inc
mov
xchg
pop
arpl
adc
iret
cmp
inc
xor
inc
lock
cld
mov
lods
out
inc
sub
scas
lret
dec
stos
in
lock
push
dec
xchg
rcr
xor
sbb
inc
mov
push
ficompl
icebp
cmpsb
imul
jecxz
pushf
add
sbbb
pop
cltd
cwtl
stc
push
or
stos
mov
cs
sti
cmc
cmp
std
test
icebp
movsl
adc
outsb
and
out
imul
and
lds
push
or
fdivrl
jo
adc
pusha
test
enter
and
adc
lahf
das
push
incl
jge
sbb
jl
add
fists
adc
push
pop
mov
push
add
pop
hlt
cmp
leave
jmp
repnz
sbb
or
add
xorl
sub
test
outsl
and
dec
mov
mov
in
ja
sbb
xor
test
mov
mov
aam
jae
adc
ja
push
push
pop
push
subl
mov
cmpsl
lret
ja
mov
xchg
pop
mov
inc
lret
mov
aad
lods
test
jmp
arpl
mov
ss
push
test
dec
lcall
addr16
mov
and
mov
call
adc
pop
and
add
cwtl
cwtl
or
movsb
sbb
in
add
fdivp
roll
dec
xchg
mov
dec
xchg
pusha
ljmp
outsl
stc
mov
lahf
push
mov
push
sbb
inc
mov
movsl
ss
jmp
mov
fists
jb
cmp
jne
add
ficoml
aas
lcall
mov
pop
test
lea
cmp
mov
mov
fnstsw
ja
sbb
sbb
es
push
or
mov
sti
imul
outsl
mov
xchg
xor
fcoml
sub
add
push
rcrb
xchg
popa
jns
fidivl
cmc
mov
jae
and
data16
pop
push
rol
push
mov
test
loop
mov
rcrl
daa
and
inc
cmp
jb
or
adc
and
cltd
mov
pushf
or
dec
das
lock
inc
test
or
cmp
test
xor
xchg
push
xchg
out
and
aam
int3
dec
insb
and
faddp
sbb
pop
lret
sbb
sbb
shl
sbb
out
push
cmp
xor
in
push
push
sti
das
inc
jl
pop
cmp
loopne
pop
pop
push
ja
decb
popf
addr16
sbb
test
mov
repz
xor
cltd
lret
jo
in
inc
push
ss
push
push
js
cmp
mov
scas
test
in
add
shlb
inc
cmp
or
push
xor
shlb
fsubs
xchg
imul
inc
mov
cmp
mov
sbb
dec
dec
insl
push
popf
xchg
lock
lcall
popa
fdivs
inc
pushf
mov
lcall
gs
int
cli
dec
lock
push
jecxz
adc
pop
mov
dec
mov
in
int
fwait
dec
addb
ja
mov
cmp
and
or
out
int
fcompl
push
adc
jns
mov
mov
out
out
arpl
stc
jo
jns
add
insl
dec
cmpsl
inc
jno
mov
jl
cmp
leave
sub
pop
jle
pushf
push
pop
mov
es
push
push
cmp
rcrl
outsb
mov
inc
orl
mov
in
lods
mov
push
mov
pop
sub
lods
outsb
cmpsl
ja
xchg
in
aad
jp
iret
rorb
push
push
inc
and
xlat
les
mov
mov
fbstp
mov
jne
sbb
mov
sbb
push
mulb
lods
mov
aaa
push
mov
sub
jle
mov
push
roll
inc
mull
sti
inc
out
cmp
add
lret
out
push
das
mov
xchg
xchg
mov
or
lea
jae
lock
push
fs
jg
fstpt
aad
xor
mov
pop
adc
or
stc
stos
mov
dec
xor
xor
inc
or
mov
mov
fldl
dec
adc
pop
out
int3
dec
xchg
push
and
and
in
cmp
cltd
lock
in
cmc
into
daa
push
mov
mov
push
in
jne
xchg
test
or
xor
inc
push
xchg
cmc
push
xlat
mov
hlt
scas
fidivrl
popf
das
shll
sub
xchg
push
test
mov
adc
lods
jo
adc
sub
mov
mov
pop
xor
xchg
sti
mov
and
mov
mov
popw
jle
fwait
mov
hlt
cli
insb
cmp
pop
or
aaa
mov
iret
adc
lods
push
loope
dec
jmp
shll
mov
flds
jb
pop
cmpsb
or
adc
lds
mov
daa
xor
ss
sub
cmp
push
aad
mov
out
dec
mov
xchg
repz
popf
pusha
in
mov
mov
dec
jmp
std
add
mov
xchg
psrlq
and
fisubrs
sbb
inc
addw
add
sub
test
cmpsb
leave
cmp
imul
cmpsl
int
sub
lcall
xchg
ss
hlt
mov
xor
loope
aas
shll
je
mov
call
frstor
out
and
lods
push
xor
mov
add
jecxz
ja
cwtl
lods
cs
sbb
adc
cmpsl
or
adc
out
xchg
fwait
xor
mov
pop
out
jnp
xchg
mov
repnz
popa
rcr
sbb
pop
or
jnp
mov
dec
test
adc
mov
out
push
dec
mov
cwtl
clc
les
push
test
fwait
pop
dec
push
mov
cmp
repnz
fwait
insl
mov
push
mov
shl
imul
arpl
xchg
fabs
cmp
pop
inc
ja
dec
outsb
jmp
xor
pop
xlat
add
jle
cli
in
inc
mov
jmp
mov
sub
pop
mov
mulb
repz
sub
dec
add
dec
cmp
or
aam
sbb
xor
ss
push
cmp
mov
cmc
stos
add
sahf
loopne
orl
xchg
mov
lock
sarb
lret
je
ss
push
rcrl
push
mov
sub
iret
mov
adc
adc
in
mov
sub
mov
out
cmp
into
sbb
rcr
or
xchg
pop
andl
jmp
jecxz
pop
pop
xor
movsl
jne
dec
lock
aaa
inc
dec
jmp
adc
mov
push
pop
dec
sarl
cli
cmp
rcrb
cltd
ljmp
inc
add
cmpsl
rcl
ret
jo
jmp
add
cmp
ljmp
test
jno
jns
sar
fmull
gs
mov
mov
push
fnstsw
leave
das
popf
mov
jbe
fists
mov
cmp
mov
iret
sub
xor
iret
or
into
cmpsb
mov
sub
inc
mov
stc
imul
push
mov
add
dec
test
insb
pusha
sub
repnz
outsl
loope
lods
pushf
and
mov
push
data16
xor
lock
outsb
sahf
adc
test
mov
mov
sbb
jne
fidivrl
or
sbb
xor
imull
inc
sub
xchg
stos
jg
mov
lret
daa
je
inc
dec
mov
repz
les
into
sub
incb
repz
emms
rorl
push
adc
jge
sbb
mov
xchg
out
in
int3
clc
shrb
dec
push
inc
rcll
insb
fistpll
leave
dec
fisttpl
movsb
rolb
lds
in
and
mov
in
jp
mov
inc
lret
inc
ror
lret
arpl
xor
pusha
xchg
pop
push
cwtl
push
lods
addl
and
int3
jp
fscale
int
add
xor
mov
mov
test
lods
sub
xchg
push
ja
fsubrl
pusha
xchg
scas
mov
sub
lods
filds
xlat
or
sbb
loope
popa
inc
call
es
adc
dec
js
rorl
dec
cmp
imul
jne
loop
inc
pop
scas
pop
in
sub
lret
sub
fmull
jb
hlt
stos
iret
mov
mov
or
repnz
pop
pop
nop
push
mov
shrb
xor
adc
adc
sub
inc
out
ret
dec
add
mov
cmp
rclb
sbb
inc
repz
popf
subb
dec
push
sbb
into
adc
int
or
das
push
movsl
movb
mov
or
push
cmp
jle
cmp
push
sub
imul
ss
add
clc
inc
sbb
pop
mov
mov
lods
xor
and
std
test
or
xlat
insb
cs
mov
outsb
sti
adc
insb
aam
and
dec
cmp
push
jo
add
stc
outsb
movsb
add
cltd
jns
pop
adc
add
push
inc
popf
dec
or
jo
sbb
mov
adc
insl
sub
xchg
loopne
pushf
roll
scas
jecxz
or
repz
sub
dec
dec
or
sti
clc
mov
add
call
adc
mov
adcb
pop
jle
test
fisttps
xor
hlt
or
bound
jmp
inc
jnp
lcall
in
pop
ljmp
in
ja
mov
aam
enter
add
mov
push
mov
notl
mov
lea
cmp
popf
data16
pop
cmc
adc
js
imul
iret
jl
jno
test
xor
repnz
bound
mov
mov
push
aad
xchg
into
sub
mov
jle
jmp
pop
ret
adc
dec
mov
jecxz
leave
out
lea
jns
sarl
mov
push
mov
inc
imul
fidivs
aad
mov
sub
popa
inc
or
adc
enter
xchg
dec
mov
or
add
xchg
cmp
repnz
and
int3
pop
shl
lods
or
popf
scas
pop
fidivl
and
inc
dec
in
out
jecxz
into
pop
outsb
movsb
shrl
outsb
mov
mov
in
in
push
xor
popf
test
lahf
pop
testb
sbb
dec
loope
cmpsl
fisttpll
cmp
jno
push
xor
and
pop
mov
add
divl
mov
sbb
mov
xchg
nop
add
sti
movsl
fnstcw
sub
fadds
push
mov
inc
rorl
adc
lcall
mov
into
dec
pop
add
mov
fcompl
xchg
xchg
clc
xchg
cmp
aaa
sar
push
sbbb
leave
adc
push
cltd
pop
test
jge
pop
push
xor
fwait
lret
jge
push
mov
insl
stc
lock
jle
les
mov
into
jmp
iret
cmp
jne
cmp
adc
rcl
insl
cmpsb
push
dec
lea
jmp
mov
je
mov
xchg
cmp
fwait
ja
shl
xor
inc
les
ja
xor
sarl
call
inc
imul
cmp
inc
fmull
popf
fs
jmp
jo
cmc
mov
xchg
push
or
mov
idivl
dec
adc
xchg
lcall
into
inc
lea
leave
fwait
mov
loopne
xorb
mov
jmp
rcrl
push
xor
adc
xchg
pusha
mov
sbb
cmp
mov
xor
cmp
fcomi
cmp
jno
sub
sbb
pop
test
enter
mov
shl
push
or
fsts
ret
xchg
mov
into
cs
jbe
in
cmpsb
popf
xor
xlat
add
nop
fdivl
pmaxsw
clc
mov
aad
inc
xchg
lods
ja
cmpsl
sbbl
jg
out
divb
dec
jmp
xor
sti
sbb
add
aad
roll
mov
inc
call
jmp
or
add
cs
loop
pushf
push
mov
inc
call
iret
add
stos
xchg
cs
mov
push
jo
mov
mov
outsb
pusha
push
mov
pop
adc
gs
repz
fidivl
stos
loop
leave
xchg
outsb
xchg
jg
mov
sub
movsl
ss
into
xchg
sub
je
popf
add
adc
orl
cmc
out
loop
loopne
rorl
fstpt
movsb
pusha
xchg
and
das
dec
aaa
mov
xor
movsl
or
cmpsl
pop
xor
push
xor
inc
ljmp
repz
jg
pop
push
jns
pop
loop
sub
xchg
or
lods
adc
movsb
leave
xor
sbb
pop
mov
sbb
cmc
mov
mov
adcb
cmp
orb
mov
in
sub
rcrl
shlb
push
jl
cmp
fcmovb
mov
or
test
lods
push
jl
or
pop
popa
inc
lret
mov
and
repz
push
push
and
mov
mov
fwait
scas
cltd
cmp
push
lea
add
testb
cmp
push
sahf
cli
xchg
jns
popa
sbb
ror
adc
pop
pop
dec
cld
or
sub
inc
jg
js
inc
addr16
and
out
ja
push
fwait
jne
imul
aas
mov
sub
ljmp
push
push
xchg
mov
xchg
sbb
xlat
cmp
push
lcall
mov
mov
imull
repnz
ret
nop
adc
mov
shrl
in
lea
scas
out
insb
or
xchg
andl
inc
and
push
ds
cmpsb
mov
sub
lds
int3
mov
in
jnp
or
inc
rol
mov
or
jnp
into
insb
sbb
shlb
test
jmp
mov
imulb
and
mov
negb
jecxz
xacquire
add
push
in
pop
iret
push
movsb
fisttpll
lods
cltd
ljmp
or
daa
fwait
mov
stc
xor
fisubs
stos
jnp
outsl
test
iret
shl
mov
push
inc
mov
hlt
shlb
insl
cmp
scas
and
stos
fistps
out
push
imul
outsb
imulb
mov
stc
adc
stos
pop
and
and
std
sub
pop
xchg
xor
and
adc
jp
cmp
and
jp
push
mov
pop
mov
mov
pop
cmp
aas
dec
rcrl
test
subl
adc
dec
dec
scas
jle
xor
lea
adcl
pop
mov
or
add
clc
and
movd
into
jb
cmp
aam
xchg
enter
popf
mov
lods
movsb
push
in
jo
aam
xchg
pop
mov
out
pusha
mov
pop
pop
jg
mov
sti
pop
mov
fs
and
popf
subl
inc
fwait
xor
insl
add
jmp
push
sbb
sbb
xchg
jmp
fwait
test
pop
andb
imul
scas
stos
cli
cmpsb
nop
repnz
jecxz
movsl
pop
dec
scas
add
data16
dec
adc
xchg
out
add
pushf
xchg
mov
movsl
clc
je
sbb
jl
pop
lret
xor
in
push
int3
icebp
stos
int
mov
sub
push
add
or
fstps
xchg
mov
pushf
jno
dec
das
push
pushf
inc
sbb
fisttpll
out
inc
pop
sbb
jne
repz
cmp
dec
and
xor
cs
mov
or
inc
adc
and
daa
std
ss
dec
mov
pop
or
jnp
ret
inc
xchg
pop
sub
inc
cmpl
push
ja
pop
repnz
push
jb
inc
or
mov
icebp
imul
es
punpckhbw
aaa
data16
pop
sbb
js
cmp
sbb
xchg
push
mov
out
jae
or
sbb
sbb
stos
or
flds
pushf
in
sar
inc
adc
jae
pop
rcll
sbb
jecxz
jp
les
iret
cld
mov
push
push
sub
ss
sbb
leave
inc
xor
pminsw
pop
testb
test
orb
das
rolb
cmpl
jge
sbb
mov
lahf
jbe
sbb
jo
dec
stos
enter
pop
ret
xchg
sbb
inc
fxch
ss
lcall
loopne
cwtl
cmp
or
fcmovne
jo
mov
pusha
sub
je
add
fwait
int3
dec
and
dec
mov
jge
je
mov
fisubrl
inc
test
xor
xor
inc
int
xlat
sbb
or
xchg
cli
cmp
cwtl
pop
inc
mov
aaa
jo
inc
adcl
mov
test
and
out
data16
lret
ja
in
pusha
cmpsb
pusha
mov
cmpsb
and
or
add
gs
in
adc
rorl
addb
icebp
addb
outsb
lods
sbb
dec
jle
not
in
inc
sub
cmp
pop
push
shl
cmp
lret
inc
push
outsb
clc
pusha
dec
mov
orl
inc
out
pop
outsb
inc
dec
jg
divb
into
jl
loop
pusha
pop
cwtl
sub
cmp
out
hlt
mov
loop
stos
adc
or
add
jbe
es
adc
scas
inc
adc
xor
mov
mov
adc
fsubr
sbb
nop
pop
out
mov
mov
mov
sarl
clc
push
sti
cwtl
shrb
repz
in
jo
subl
repnz
jge
inc
stos
fisttpl
pop
ret
sub
ljmp
xor
push
inc
fisubl
mov
in
ss
mov
mov
stos
push
add
rcll
or
pusha
inc
push
pop
push
lock
loope
dec
sarl
mov
push
sbb
stos
cmpsl
mov
lds
js
dec
addr16
rcll
xor
popf
movsl
mov
xchg
cmpsl
int3
daa
xor
mov
fsubs
push
dec
push
aad
lcall
sbb
mov
je
mov
lock
rolb
loopne
fcmovu
lret
xchg
pop
dec
cmc
mov
adc
sar
mov
push
cli
add
clc
stc
faddl
fs
lahf
xchg
mov
nop
std
or
adc
mov
sar
jecxz
pop
inc
out
mov
lcall
jmp
fstpl
adc
jecxz,pt
cmp
xor
cltd
and
and
lret
inc
outsl
xlat
divb
lret
ret
int3
pop
jnp,pt
fdivrp
add
movsl
gs
jns
testb
clc
ficompl
ret
out
xchg
push
lret
movsl
jge
test
xor
insl
mov
loopne
ljmp
push
packssdw
jp
cwtl
inc
mov
popf
ja
lret
cmp
mov
insl
mov
pusha
repnz
leave
add
push
inc
jmp
sub
adc
sbb
mov
sub
in
mov
daa
outsb
xchg
pop
pusha
sub
jne
jmp
inc
lcall
divb
inc
jno
dec
mov
push
icebp
popa
pop
inc
inc
cwtl
cmp
push
jp
push
add
imul
cltd
fidivl
lcall
rorb
enter
xchg
ds
push
xor
fstl
push
dec
xchg
adc
mov
lret
push
jo
jbe
jmp
out
addl
mov
push
mov
jb
mov
add
sub
flds
and
xchg
leave
adc
cwtl
mov
pop
pop
test
add
fldenv
loop
inc
imul
sub
or
jl
inc
subl
imul
loope
jbe
jbe
lods
inc
test
fwait
push
roll
ss
nop
jns
add
out
jo
cwtl
cmp
scas
lds
sbb
sbb
xchg
inc
lods
fldt
cmp
add
lock
pushf
js
in
cmp
mov
pop
lds
xor
test
jns
add
ret
push
nop
mov
cld
std
mov
xor
in
lahf
scas
pop
out
inc
push
lahf
add
mov
loop
push
loopne
loope
xor
mov
cmp
mov
inc
mov
ss
ss
or
push
sbb
scas
fstpl
xchg
and
mov
out
outsb
ds
enter
lret
xor
fistpl
sti
ret
fisttpll
lcall
sub
imul
cmpsb
pop
sub
cld
mov
cld
shl
aas
adc
scas
mov
sbb
mov
shll
pusha
lcall
fisubs
int
pop
call
mov
das
fs
mov
cmpsb
mov
decb
test
xor
dec
jp
cmp
sarb
pushf
fnsave
jb
add
arpl
jo
dec
add
in
inc
and
call
inc
std
repnz
lods
sbb
popf
cltd
lahf
fadds
adc
jp
shrl
cmp
or
icebp
pop
imul
mov
jp
add
and
lods
es
fs
jo
jb
std
xchg
je
push
loope
out
xchg
outsb
testl
stos
dec
mov
lock
pop
sbb
hlt
mov
or
xlat
push
insb
dec
pushf
and
fsubl
icebp
dec
ja
repnz
inc
push
imul
add
sub
pop
stos
pop
scas
mov
dec
test
xchg
aas
xor
push
xchg
xor
fwait
lea
push
and
push
or
orb
mov
orl
jb
mov
or
pop
and
popf
scas
cwtl
scas
ljmp
sbb
addr16
repz
push
push
or
test
faddl
or
or
push
pop
push
in
inc
or
cmp
imul
mov
mov
sbb
cmpsl
jne
or
mov
das
fwait
outsl
fs
gs
enter
out
popf
add
pop
jle
or
add
rcl
jmp
jno
std
popf
sub
lahf
cmp
add
xchg
inc
mov
in
or
cmpsb
dec
lea
inc
pop
mov
or
jnp
mov
adc
inc
out
and
adc
jae
cmpsb
jbe
fnop
stc
pushf
add
adc
jbe
jg
lret
jbe
lds
lock
cmp
sbb
inc
mov
aam
popa
orb
mov
stos
xchg
cmp
nop/reserved
test
outsb
insl
dec
in
jl
push
fcoms
out
mov
pop
mov
push
add
test
std
out
sbbb
mov
pop
insl
fnstenv
xchg
dec
xor
push
mov
loope
das
rcrb
stos
cmpsl
xchg
sahf
pop
mull
rcr
shrb
sbb
lods
adc
dec
test
ucomiss
pop
cmc
xchg
sbb
push
test
mov
into
xchg
push
cmp
inc
es
and
and
mov
int3
push
mov
imul
sub
fmuls
or
inc
pop
fimuls
add
adcl
fld
lret
dec
shlb
ja
mov
and
push
fbstp
lret
sbb
loopne
or
lods
iret
hlt
lcall
lds
ljmp
push
push
out
in
cmpsb
cmp
xor
push
push
nop
je
lods
pop
cmp
shlb
mov
add
push
pop
mov
push
push
cs
inc
test
repnz
cmc
cmp
mov
xor
adc
mov
jl
jl
adcl
jns
dec
sub
or
test
sub
scas
xor
push
into
ds
fstpl
fsub
test
mov
ret
lcall
outsb
cmp
mov
xor
outsb
into
dec
and
arpl
cmp
jo
test
dec
cmpsb
push
push
add
imul
imul
fs
stos
push
dec
fistps
movsl
vsubss
mov
jne
cmpsl
mull
clc
mov
fmulp
push
insl
ret
mov
scas
mov
ljmp
xchg
loopne
jg
xchg
shl
mov
iret
jl
xchg
pop
and
ret
loope
roll
ja
mov
mov
fsubrl
jp
in
sbb
push
and
scas
out
mov
add
je
xor
std
mov
push
movsb
enter
cmc
inc
xchg
icebp
arpl
imul
popa
aaa
xchg
fwait
dec
fcmovnb
xchg
outsb
adc
xchg
js
mov
mov
cmp
pushl
dec
sbb
or
pop
sub
cmc
into
mov
ds
inc
push
int3
mov
sub
sub
mov
mov
pop
fimuls
mov
cmp
out
sub
mov
mov
daa
rclb
outsb
or
mov
subb
mov
stos
lods
ljmp
inc
dec
ret
mov
fs
pop
fimull
lods
repz
fcmovbe
mull
mov
outsb
loop
mov
movsl
dec
sbb
dec
add
and
ja
cmp
in
cmp
sub
xor
mov
imul
pop
aas
pop
into
stc
pop
xchg
icebp
loope
jo
add
jne
enter
jae
adcb
xor
clc
adc
pushf
pop
pop
adcl
mov
cmove
fnstcw
pop
loop
jmp
in
test
jae
push
mov
cmp
sub
test
roll
das
cmp
mov
ss
mov
cmpsl
push
mov
nop
dec
xchg
lret
test
test
xor
xchg
inc
stos
cmp
notl
int
add
xor
mov
jmp
loopne
lcall
xor
outsl
fs
out
xor
dec
and
stos
push
push
xchg
jg
aam
in
cmp
int
mov
testl
dec
mov
sahf
cmp
inc
fs
inc
aaa
mov
jo
dec
shll
or
add
popa
xor
rcll
add
push
cmc
test
jne
inc
maxps
sbb
outsl
xor
dec
add
sbb
cpuid
add
xchg
fs
rol
and
lods
push
mov
test
and
pop
xor
adc
inc
pop
or
push
and
sub
rorb
sbb
imul
fnstenv
cmpsl
pop
dec
mov
nop
in
push
mov
stos
fadds
hlt
mov
pop
or
in
xchg
push
jp
inc
dec
sysret
lods
mov
jmp
jae
insl
mov
push
out
popa
sarl
jp
dec
xor
sahf
ljmp
xchg
repnz
and
pop
add
push
jns
ss
push
xor
scas
stc
jge
mov
gs
add
or
js
jne
mov
mov
insl
pop
jg
mov
or
mov
stos
mov
test
data16
sub
jnp
xchg
gs
jl
scas
js
push
xlat
jle
scas
pop
test
xchg
dec
cmp
jg
pop
adc
push
dec
mov
mov
clc
ficomps
lods
jnp
push
xor
stc
in
leave
sahf
in
and
inc
mov
or
sti
clc
loop
inc
xor
inc
sahf
xchg
mov
mov
adc
aad
adc
fmuls
and
test
sti
int
out
inc
pushf
inc
xor
loope
cwtl
ficompl
xor
push
inc
jl
cmpsl
mov
xchg
dec
pop
mov
push
into
lods
pop
js
test
xchg
icebp
dec
enter
test
je
js
push
push
or
adc
ficoms
sbb
adc
sub
mov
pop
sub
lock
mov
dec
mov
sahf
es
aaa
mov
jle
dec
xchg
mov
adc
pop
dec
ret
sub
fidivrs
pusha
cmp
xorb
lret
ja
mov
fucomi
leavew
sub
pop
add
cmpsl
push
stos
mov
arpl
mov
mov
fmuls
mov
fwait
mov
pop
cmpsl
or
cmpsb
and
pop
rcl
sti
movsb
add
mov
stos
imul
mov
mov
xchg
pushf
jno
mov
jb
jnp
jo
mov
insl
push
inc
push
nop
mov
rorb
xchg
jns
pop
cs
rsqrtps
xor
nop
inc
fldenv
add
mov
pop
mov
cmp
pop
and
push
cli
ss
fisttps
js
jmp
and
ja
xor
enter
outsl
add
aaa
or
mov
fldl2e
es
push
mov
sbb
lahf
add
xor
sub
loope
inc
loopne
add
loop
shll
inc
or
pop
xchg
jae
out
test
test
jmp
aas
call
push
sbb
das
pop
inc
dec
pop
add
repnz
jbe
sub
inc
push
rol
in
aas
dec
or
or
pop
orb
xor
jno
mov
push
xchg
jo
faddl
mov
insl
das
mov
rcrl
shrb
dec
lods
cli
mov
aaa
loopne
hlt
and
addr16
movsl
outsl
sbb
cmpsb
xchg
sbb
mov
enter
nop
mov
and
pop
les
outsb
stos
xor
repz
lock
out
arpl
push
adc
pop
inc
ja
cwtl
sbb
add
mov
out
inc
dec
in
add
imul
sub
stos
repz
push
jmp
xchg
push
lret
lods
roll
cmp
cli
mov
sti
jmp
jle
push
pop
les
int
bound
mov
cmc
lods
sub
insl
xor
std
icebp
jo
jg
mov
iret
out
out
into
dec
inc
jns
pop
adc
adc
xchg
int
loope
inc
add
or
cmp
push
enter
test
xor
push
adc
int3
mov
dec
mov
xor
cmp
leave
stos
mov
fiadds
icebp
scas
aaa
mov
dec
out
jnp
outsb
je
jnp
pop
pop
sub
es
jle
cwtl
or
sarb
add
xchg
sub
clc
jmp
movsb
call
cld
mov
dec
xchg
pop
push
pop
sarl
push
rorb
cmpsb
dec
outsl
xchg
push
cs
stos
popa
xor
mov
push
dec
sahf
inc
movsl
adc
lods
mov
cmp
std
push
adc
jecxz
dec
add
xchg
dec
mov
arpl
mov
sub
sbbl
rsqrtps
and
out
movsb
and
xchg
or
arpl
push
dec
enter
mov
push
icebp
idiv
adc
insl
pop
daa
add
sub
or
dec
cmpsl
adc
insl
sub
sub
push
dec
hlt
movsl
inc
test
rorb
xor
outsl
sbb
into
fdivr
scas
cmp
int3
leave
push
imul
push
fdivp
lret
int
xchg
cmp
or
jo
push
out
test
mov
mov
out
rdmsr
pushf
cmp
hlt
fbld
scas
cmpsl
jnp
jmp
fs
pop
pop
push
dec
push
sbb
das
sbb
leave
jo
int
cli
inc
add
add
repnz
mov
mov
mov
gs
clc
sbb
add
lods
dec
mov
stc
and
push
fstpl
push
jl
jb
inc
dec
outsl
push
gs
sbb
mov
cli
mov
int
jns
mov
mov
mov
sbb
and
push
inc
in
lds
std
push
jae
adc
jno
stc
int3
push
push
lret
jo
sahf
call
jl
pop
out
push
rorb
arpl
jmp
insl
mov
scas
sbb
pop
mov
ds
push
or
daa
insl
lcall
les
add
cmc
jp
push
add
pop
xor
inc
fpatan
stos
je
xchg
add
mov
out
call
aad
jecxz
stc
cwtl
test
fwait
lock
aam
jne
mov
cmp
jle
inc
stc
ljmp
lret
cwtl
ljmp
or
loope
out
bnd
sti
jne
aam
sarb
fdiv
jbe
cld
or
ret
and
fistpl
jb
dec
and
jns
jg
adc
add
js
sbb
push
dec
mov
mov
jecxz
mov
cmpsl
mov
jmp
das
ljmp
dec
inc
fucomp
test
and
xchg
inc
or
sahf
lea
jb
hlt
testl
mov
push
pop
cmp
cmpsl
pop
movl
sti
jae
mov
push
inc
adc
jp
xor
data16
cmc
popf
sbb
iret
sub
mov
fucom
out
cmc
aaa
dec
dec
xor
push
insb
movsl
loopne
xchg
adc
imul
int
or
xor
jns
pop
xorl
bound
sub
out
mov
lea
mov
pop
int
andl
fmull
pushf
pop
jne
push
pop
rcll
insl
in
cltd
mull
push
rcll
icebp
xor
add
jp
popa
fidivrl
push
mov
lcall
fisttpll
cld
mov
idiv
jbe
sub
jg
fsts
gs
add
lods
jg
or
pop
in
pop
in
lret
and
fnsave
into
test
in
fidivrl
xlat
sub
dec
push
fwait
jnp
pop
insb
dec
into
sub
pushf
jle
loopne
lds
outsl
and
in
push
xchg
and
jne
xchg
push
out
fwait
repnz
fsubl
inc
adc
push
mov
cld
sbb
aam
mov
ja
add
pop
inc
jmp
stos
jb
cmp
sbb
gs
mov
clc
push
mov
add
push
xchg
mov
lds
xchg
jle
and
cmp
adc
inc
lods
mov
mov
inc
and
mov
cmc
notl
mov
and
xchg
dec
repz
mov
inc
loope
inc
and
clc
subl
leave
ja
cmpsl
fldl
sbb
mov
jns
out
movsl
mov
jmp
sub
mov
call
movsb
repz
cmp
inc
jle
push
dec
cld
jno
out
cmp
shrl
ds
push
sbb
lret
xor
lret
push
dec
xor
clc
mov
repz
push
shrl
mov
pop
xchg
inc
out
cld
add
mov
xchg
and
adc
lock
add
mov
add
push
mov
js
in
stc
xchg
arpl
xchg
fstl
mov
xor
lret
sbb
push
push
sbb
pusha
idiv
xor
jle
mov
jnp
lahf
notb
jl
insl
xor
mov
outsb
jmp
divl
fldcw
sbb
mov
pop
mov
std
adcb
insl
xchg
or
in
test
adcl
xchg
cmp
push
mov
sti
mov
shl
dec
xchg
clc
xor
mov
stos
int
sbb
cmp
xor
pop
add
arpl
push
and
sub
pshufw
dec
fcompl
jns
inc
push
js
repnz
mov
xchg
gs
mov
sub
scas
dec
jb
das
mov
stos
cmp
mov
push
xchg
pop
push
sub
es
mov
inc
lcall
xor
push
fbld
shll
pushf
sub
flds
or
inc
or
inc
pop
imul
mov
xorb
pop
jmp
pop
xchg
in
mov
push
or
cs
inc
sbb
push
aad
adc
shlb
jecxz
push
pop
xor
adc
sar
jb
mov
mov
or
cld
fldt
ja
orb
cltd
or
clc
adc
cld
adc
fcmovbe
rcrl
arpl
in
push
pop
flds
mov
dec
aaa
les
insb
popf
push
add
test
lods
mov
cmp
cli
je
cltd
adc
stos
cmp
jne
pop
sbb
mov
adc
movb
inc
mov
sub
mov
shll
orl
leave
xchg
dec
into
cmp
and
aad
sbb
push
cmc
inc
push
jae
das
xchg
es
jl
das
lret
jns
es
cli
push
into
shlb
pop
in
xchg
shl
pusha
inc
outsb
leave
cwtl
mov
rol
aad
std
push
mov
ret
pop
shll
call
aam
cli
or
mov
mov
rcrb
insl
sbb
rorl
sub
sub
aam
aas
xlat
cmpsl
xor
rorb
daa
and
loopne
shll
pop
out
cmp
push
test
dec
cmpsl
or
ficomps
jnp
bound
sub
cld
and
into
push
push
jno
add
sub
daa
fwait
xchg
cld
cs
cmp
addr16
mov
jbe
loope
scas
sub
dec
es
cld
loope
out
add
and
shrb
cli
push
xor
out
add
jne
cwtl
push
add
out
test
cwtl
cmpsl
fimull
lods
adc
cmc
mov
sub
lahf
xchg
pop
jg
js
test
cmp
ret
or
xlat
sub
daa
ret
push
int3
lods
xchg
mov
lret
sbb
stos
lret
push
cmpsb
dec
push
push
push
push
dec
out
cmp
call
mov
add
push
cmpsb
push
adcl
push
movl
adc
sbb
sub
mov
scas
and
xor
fsts
scas
in
xchg
fmull
ds
mov
int3
push
lahf
push
out
pusha
adc
sbb
xor
es
aas
push
add
mov
leave
xor
testl
xlat
xlat
jg
jnp
call
cmp
aam
mov
sti
jle
pop
mov
xor
sbb
adc
add
push
inc
mov
cld
enter
mov
jbe
adc
xor
adc
adc
iret
sub
jo
sbb
lods
ljmp
lcall
ds
bound
rcrb
sti
fstps
aas
addr16
movb
sahf
push
lock
sbb
in
pop
mov
push
out
shll
jg
mov
pop
dec
int3
cmp
jnp
jecxz
mov
pushf
mov
cs
out
movsl
xchg
mov
mov
add
mov
stos
sarl
js
js
bswap
pop
fiaddl
xchg
jecxz
mov
rorl
mov
call
inc
lret
jae
xor
xchg
ja
mov
mov
jbe
xor
popa
adc
add
enterw
xorl
push
shl
and
xor
dec
pop
adc
jne
add
cmp
pushf
sahf
xchg
xor
ds
faddp
mov
adc
fidivl
repz
pop
jnp
jb
xchg
mov
mov
int3
sahf
gs
cwtl
xchg
mov
push
mov
incb
incl
add
dec
pushf
and
jb
aas
dec
add
loop
pop
fwait
or
mov
icebp
xchg
arpl
movsb
or
mov
outsb
out
inc
repnz
xor
popf
xor
pop
jge
orl
data16
push
mov
inc
jmp
insl
dec
leave
pushl
fwait
mov
xchg
or
cmc
fidivl
pop
imul
dec
pop
mov
or
out
mov
pop
cld
add
pop
scas
sub
fisubrl
sub
adc
out
pop
shll
mov
cmp
mov
adc
inc
pop
rolb
stos
fwait
sub
sbb
pusha
pop
sbb
adc
or
mov
inc
test
xor
pop
sarl
inc
ljmp
and
sarl
adc
sbb
addw
jge
cmp
inc
mov
dec
sub
dec
cmp
mov
pop
xorb
lods
adc
test
andb
sub
push
sbb
js
rcrb
cld
mov
inc
push
lret
sbbb
and
mov
dec
sahf
adc
mov
insl
std
adc
pushf
adc
ss
inc
and
fnsave
outsb
in
fldl
dec
mov
pop
lea
cmp
ret
test
sub
push
push
faddl
inc
push
aad
sbb
jmp
push
mov
push
dec
mov
xchg
xor
jne
repnz
add
ljmp
xor
mov
dec
cmp
aaa
lahf
iret
shr
add
testb
cmpsl
sarb
out
cmp
or
dec
fwait
add
js
dec
pusha
or
pop
nop
cwtl
pop
push
mul
sub
gs
das
insb
inc
xlat
mov
xchg
dec
jecxz
sti
popa
add
jmp
aaa
ds
add
xchg
imul
ss
popf
je
int
inc
or
scas
mov
mov
sahf
pop
mov
out
cmp
insb
cmpsb
out
pop
out
mov
add
adc
push
scas
popf
es
mov
xchg
sub
test
sub
scas
inc
dec
lds
divl
pushl
inc
jmp
stc
pop
rcrl
xchg
xchg
das
nop
inc
out
jno
xor
and
dec
jp
in
test
das
xchg
xor
mov
iret
xchg
jns
jo
or
xorl
test
sbb
subl
fsubrp
add
fidivs
test
es
xor
sbb
xchg
push
lcall
add
mov
js
mov
or
push
xor
add
mov
mov
or
push
dec
jle
pop
enter
enter
fstpt
enter
loope
and
jle
ja
mov
cli
pop
mov
sbb
lret
out
push
adc
lea
sub
sbb
fbld
adc
mov
cld
std
aas
cmpsb
fnstsw
pop
das
cmpsl
into
mov
popf
scas
outsb
push
pop
mov
add
inc
repnz
insl
repnz
mov
test
cmp
stos
adc
pusha
or
adc
cmp
out
inc
ret
ljmp
sbb
xchg
fisttps
jbe
jp
mov
cmp
xor
cmp
sti
cwtl
repnz
pop
sbb
fst
rcrb
rorl
ret
out
inc
movaps
adc
enter
in
aad
push
push
outsb
stos
mov
xor
mov
iret
or
clc
repnz
jl
out
xor
shlb
insb
sub
cli
ss
add
lret
mov
imul
mov
and
ljmp
fidivl
ljmp
pop
add
pusha
inc
adc
mov
xor
cmp
or
mov
push
jno
fcomps
popf
pop
fisubs
cmpsb
loopne
out
rclb
sub
mov
mull
cwtl
pop
push
push
iret
daa
sub
das
push
lods
xor
aaa
mov
adc
insb
add
lret
aaa
sbb
lock
inc
out
imul
push
mov
mov
imul
imul
jns
ret
dec
mov
lea
mov
cmp
mov
arpl
pop
mov
das
pop
or
add
mov
sub
xor
sti
xor
lahf
sbb
pop
or
push
cmp
cmp
shl
and
dec
ljmp
fcmovnu
shrl
leave
or
test
jp
shlb
scas
pop
dec
imul
pop
in
shrl
cmc
mov
lcall
inc
inc
xor
imul
dec
hlt
sahf
decl
in
dec
xchg
movsb
push
xchg
dec
sbb
outsb
aam
inc
ja
mov
and
icebp
mov
pop
sbb
les
hlt
mov
pop
push
jg
out
jle
cld
ja
sub
xor
fistpll
aam
push
int
mul
clc
in
shll
in
mov
jp
push
mov
in
mov
xor
mov
sub
mov
in
mov
sub
cmpsb
in
cmp
test
lods
fiaddl
jecxz
adcb
push
push
sarl
jbe
mov
icebp
and
es
xchg
test
xchg
mov
test
addr16
movsl
ret
scas
sub
ret
jmp
into
out
xchg
mov
outsb
inc
xor
hlt
mov
push
cmp
mov
scas
sarb
lcall
jne
adc
mov
push
imul
lcall
pop
jg
xchg
xchg
mov
movsl
movsb
stc
pop
arpl
inc
mov
pushf
sarb
pop
fists
cmc
push
gs
call
fdivs
add
add
mov
dec
loope
mov
mov
aas
mov
mov
mov
dec
mov
rorb
sbb
xchg
xor
in
leave
cld
insl
adc
push
adc
roll
jbe
pushf
fxch
xor
jb
push
inc
fsubs
push
cmp
pop
lret
lock
fs
addr16
pop
adc
loope
or
jl
jb
loope
mov
aad
fmull
fidivrs
jecxz
mov
aam
mov
xlat
pop
clc
mov
ljmp
cltd
bswap
mov
test
dec
push
adc
jmp
imul
js
or
or
cs
test
leave
mov
je
pop
jb
xchg
lcall
cs
sub
add
xor
fsubrs
loopne
and
push
fstpt
out
loop
es
xchg
dec
out
movsb
push
aas
and
mov
sub
jns
adc
out
sub
out
xor
mov
repnz
inc
icebp
pop
mov
xchg
sti
int3
fldt
lods
test
out
or
push
fildl
out
adc
jle
arpl
jno
mov
adc
je
pop
stc
mov
pop
loop
and
xor
xchg
scas
push
push
sub
jno
jno
aad
loopne
aad
or
pop
push
jle
stos
mov
shlb
push
fsubrl
dec
xchg
lods
enter
jbe
pop
xlat
mov
pop
mov
or
nop
movsb
mov
jno
add
or
mov
data16
push
insb
pop
jns
xchg
outsl
xchg
mov
nop
xor
mov
in
cmp
inc
ljmp
popa
dec
lods
clc
mov
clc
ret
cmp
stc
inc
xor
or
pop
je
pop
gs
or
in
dec
pushf
push
lock
mov
inc
stc
or
jp
mov
cmpsl
fldcw
push
mov
lods
pop
sub
int
adc
xor
mov
jne
mov
lock
pop
mov
push
mov
arpl
push
push
and
push
popa
andb
andl
mov
adc
sub
cmc
pop
movsl
das
aaa
dec
and
nop
xor
mov
in
daa
scas
xor
push
ror
or
ret
lcall
cmp
ja
push
lods
inc
jg
outsl
mov
movsb
push
hlt
dec
sbb
daa
in
shl
sbbb
inc
adc
and
ljmp
sub
mov
aas
sahf
loopne
add
and
cmp
mov
pop
popa
cmc
sub
xor
cmp
jge
inc
rcr
mov
mov
fldt
jl
sub
int
lret
add
mov
push
rcll
clc
or
dec
nop
jle
stos
and
xchg
push
test
push
fisubrl
dec
and
test
jnp
lods
or
ljmp
mov
ficomps
adc
lock
sahf
std
fstpl
mov
jns
clc
cs
dec
jno
ficomps
mov
dec
and
cmp
ja
adc
cwtl
les
or
push
pop
mov
mov
arpl
cmp
nop
pushf
sub
insb
aaa
rcll
jmp
mov
and
or
shll
add
or
mov
inc
jmp
pop
cli
mov
loop
fwait
sbb
fldl
inc
out
enter
outsb
pop
sbb
pop
cs
fs
dec
pop
fsubs
xchg
movsl
fsubp
or
rorl
push
push
das
sbb
insb
pop
push
and
pop
into
jnp
xlat
pop
cli
je
pop
xchg
xchg
movsl
xor
int3
push
fildll
jb
sub
add
mov
mov
xchg
mov
sub
pop
cmp
fcoml
xchg
movsl
stc
jle
ficoml
mov
inc
push
cwtl
shr
ficomps
cmp
repz
pop
mov
movsb
cmc
scas
sar
dec
divl
seto
aam
xchg
rol
jae
cmp
adc
or
jl
aas
mov
or
inc
mov
jl
pop
ja
scas
shll
sub
xchg
push
dec
mov
adc
orl
xchg
push
and
adcl
inc
addb
add
push
std
xchg
mov
lcall
and
xchg
popa
sub
add
push
cmp
shlb
cmp
cmc
sbb
xor
and
add
pop
cmp
dec
mov
bound
loopne
aam
pop
fxch
mov
sahf
mov
cs
imul
aad
dec
push
ret
push
rorb
pop
pusha
orb
mov
cmp
fnsave
fcoms
jo
inc
inc
aam
movsb
dec
hlt
push
js
out
and
dec
stc
mov
pushf
outsb
lock
jecxz
push
sbb
out
adc
dec
pop
fcoms
pusha
sub
sub
cmp
enter
outsl
mov
fistpl
in
in
xchg
icebp
mov
lods
or
sbb
mov
dec
in
mov
cltd
cwtl
insb
mov
fistpl
mov
add
js
and
pop
lock
stc
daa
or
loopne
cwtl
scas
pop
iret
adc
jne
add
mov
rcl
std
adcl
pop
call
add
sar
dec
das
cmpsl
mov
shrl
sbb
rolb
push
pop
adc
pop
fidivs
inc
push
xchg
rolb
in
pop
leave
pop
insb
and
xor
jg
xchg
inc
mov
test
pop
movsb
loop
std
nop
add
cmpb
xchg
jo
or
add
mov
adc
je
pop
dec
mov
dec
roll
xchg
add
dec
and
push
call
sbb
push
mov
ja,pn
dec
and
mov
fwait
ja
mov
clc
mov
mov
lret
fidivl
adc
das
movsl
pusha
xchg
shl
sbb
test
dec
jecxz
mov
dec
in
rcr
lods
sbb
into
ja
mov
mov
cwtl
int
xchg
fstps
inc
or
inc
cwtl
das
ret
push
pop
sub
aas
jne
cmc
inc
mov
or
xchg
out
jle
cmp
sbb
fcomi
sub
out
cmp
test
mov
movsl
adc
mov
pop
add
lea
nop
scas
mov
adc
into
movsb
test
stc
add
iret
subb
in
mov
sarl
je
frstor
or
xchg
notb
mov
clc
mov
shl
ja
adc
xor
fisttpll
in
sti
inc
sub
jl
pop
and
xchg
cmp
push
push
lock
lahf
imul
or
xor
dec
bound
sbb
iret
in
outsl
pop
ret
mov
repz
sti
mov
dec
pop
and
repnz
jb
dec
add
push
icebp
add
roll
jno
nop
mov
cmc
xor
and
push
imul
das
mov
out
out
inc
adc
stos
and
and
cld
fidivl
jp
jb
cmc
cmp
push
sub
jp
cli
ljmp
inc
lods
adc
xor
xchg
mov
pop
fwait
mov
adcb
adc
shr
aas
pop
subl
xlat
mov
sub
outsb
pop
jle
int
std
in
cli
fninit
dec
and
mov
mov
lret
cli
jmp
jge
out
push
icebp
sub
mov
pop
push
ss
adc
leave
ss
mov
lods
cwtl
add
jnp
push
imul
je
sbb
adc
cmpsb
arpl
pop
push
push
sbb
jmp
stos
sti
imul
int3
mov
lea
test
call
jp
push
ljmp
outsb
push
mov
es
inc
ja
mov
sub
adc
xor
test
or
or
dec
lcall
ljmp
aad
dec
add
stos
mov
mov
addr16
mov
shlb
mov
insl
sub
jnp
adc
pop
repnz
lcall
nop
dec
jle
ds
aam
adc
mov
cmp
cmp
mov
sbb
jo
jmp
sbb
call
jb
sbb
cmp
repnz
jnp
loope
pop
hlt
lret
dec
jno
xchg
cmp
sub
dec
jg
movsl
leave
and
cmp
pop
gs
xor
int
dec
inc
stos
fnstenv
push
cmp
sub
jg
cld
xor
ja
int
stos
and
mov
or
test
pop
xchg
ret
dec
adc
dec
cmp
inc
int
pop
fwait
loop
inc
sbb
add
ret
adc
aam
pusha
xchg
mov
inc
repz
jl
adc
frstor
sbb
ljmp
push
sarl
xchg
loop
mov
add
push
std
rorb
aas
aas
push
push
push
xlat
das
or
pop
and
shl
imul
xor
sarb
imul
mov
pop
mov
pusha
sub
pop
mov
adc
ja
loopne
mov
loope
lret
mov
daa
repnz
jge
dec
jb
hlt
rcll
scas
pop
or
test
in
rcrb
mov
in
xor
push
ljmp
mov
repnz
push
jge
jbe
jmp
push
adc
fdivrp
data16
and
cmc
sub
jb
dec
and
inc
cmp
out
stos
mov
fisubrs
das
jecxz
outsl
mov
inc
sub
andl
mov
int3
popf
out
outsl
lcall
and
js
std
sahf
out
out
scas
cmp
lahf
popf
xor
mov
lds
mov
fs
inc
test
adc
pop
cwtl
lock
sub
rep
or
adc
nop
jne
dec
movb
lods
test
insb
lea
xchg
filds
sbb
dec
mov
jl
pop
add
aas
mulb
or
xchg
and
or
ss
shll
call
scas
xchg
mov
xlat
data16
cmpsb
sbb
mov
dec
xchg
adc
mov
sub
shr
push
in
lea
jb
icebp
or
std
fidivrs
jno
dec
mov
mov
mov
fldt
in
adc
jno
push
insl
punpckhwd
fcmovbe
sub
sub
mov
jbe,pn
fstpl
inc
xor
clc
les
dec
movsl
pop
mov
cs
ret
mov
mov
dec
std
pop
out
or
inc
scas
leave
sti
and
xchg
pusha
dec
adc
fs
int3
ja
xchg
pop
lahf
addr16
fsubrs
std
sub
shr
jecxz
lret
in
imul
daa
scas
inc
rol
lret
and
sub
xchg
xchg
jno
and
xchg
insl
popf
leave
sbb
aam
xchg
rcr
mov
daa
cmp
xchg
shrb
daa
enter
and
leave
clc
movsb
cltd
or
clc
test
sbb
dec
ret
out
xor
jp
jns
pop
out
inc
jge
jmp
in
aaa
test
in
and
mov
mov
stos
sub
loop
jns
cwtl
ret
jmp
enter
icebp
out
mov
lods
sub
sbb
ss
test
pop
ds
arpl
cmpsl
or
repz
xor
cmpsl
js
xor
xor
mull
lret
lahf
test
mull
nop
hlt
add
mov
push
int
mov
subl
mov
lahf
mov
add
and
mov
add
or
std
push
push
mov
cltd
pop
stc
stos
stos
jbe
xchg
lcall
cmc
sub
leave
fistps
movsl
xlat
lret
out
adc
mov
movsl
pop
or
shrb
or
xor
mov
mov
cmp
sahf
mov
call
mov
jle
test
in
aam
int3
lds
xchg
stos
jo
iret
scas
jmp
bound
aaa
fs
aaa
mov
jae
mov
and
ret
dec
pop
cmp
lock
xorl
popa
aam
std
or
xchg
scas
mov
adc
push
lahf
fmull
outsl
clc
call
jae
xorb
clc
mov
jns
test
rol
or
lea
dec
mov
pop
fistpl
sbb
dec
orl
mov
sbb
lods
mov
cld
decb
aad
test
inc
je
inc
js
fldcw
mov
mov
xlat
mov
hlt
mov
xchg
in
in
ss
aaa
scas
or
cmp
adc
adc
inc
lods
jns
int3
lret
hlt
xor
cli
add
or
cmp
lock
mov
xor
fldenv
std
jnp
push
sub
cvtps2pi
adc
arpl
sub
mov
dec
mov
movsl
add
mov
mov
lcall
je
jne
addl
outsl
mov
push
sub
int3
inc
movsb
mov
mov
pop
sub
xlat
sbb
and
push
adc
fs
mov
nop
mov
or
cmp
xor
pop
icebp
ret
cs
mov
or
dec
dec
nop
lahf
fisubrs
jae
mov
int3
out
fsubrl
jmp
stos
mov
cmp
xchg
xor
push
movsl
bound
insl
gs
cmp
jp
mov
push
jmp
pop
repnz
or
add
fbstp
dec
imul
aaa
inc
mov
out
mov
xchg
xor
loope
stc
subl
outsb
xor
fbld
mov
xor
cli
in
and
int
jmp
jle
jnp
pop
gs
sarl
xchg
cs
addr16
add
out
leave
adc
pop
or
mov
sub
inc
popa
popf
cli
sbb
xchg
cwtl
jecxz
rorb
adc
add
xchg
rorb
sbb
adc
bound
js
nop
stos
clc
mov
push
push
mov
in
mov
cli
mov
and
in
mov
mov
inc
test
les
dec
push
addr16
pop
add
mov
mov
inc
jecxz
fistl
adc
jmp
lret
pop
cmpsl
and
sub
mov
cmp
and
pop
cmc
das
mov
mov
in
jg
or
jle
gs
mov
jp
xor
js
or
lods
ljmp
pop
and
jecxz
test
mov
call
mov
dec
scas
add
mov
xchg
idivl
fdivl
shlb
decb
inc
jno
push
jbe
js
add
gs
cltd
pop
call
push
mov
cmp
and
pushf
sbbl
inc
ret
sbb
add
loope
dec
mov
push
sub
sbb
fnstcw
pop
addb
cwtl
jne
ljmp
xchg
ds
push
ret
inc
sbb
or
jb
or
jb
pusha
and
add
test
fs
jns
lods
ljmp
sbb
adc
pop
lods
adc
sbb
mov
inc
inc
pmaxsw
dec
push
xchg
jnp
test
lea
adc
leave
adcb
adc
mov
jbe
inc
out
adc
aad
jle
mov
rcll
call
xor
xchg
and
pop
mov
sbb
popa
es
push
out
inc
sbbb
and
xchg
jne
enter
add
je
pop
or
ds
pop
mov
pop
xchg
add
add
std
or
push
xchg
popf
cmpsl
in
dec
push
hlt
scas
and
mov
push
pop
pushf
xor
mov
and
sub
orl
pop
xor
shll
mov
mov
xlat
cmp
sub
pop
and
xchg
ret
and
mov
adcl
jl
sub
and
xchg
cmpsb
pop
test
cltd
mov
ret
or
jae
das
in
mov
push
insb
inc
rorb
xor
into
ret
mov
lahf
jle
negl
ljmp
dec
jg
cld
cmp
or
add
inc
xor
mov
mov
subb
mov
sarb
out
popf
das
lcall
dec
xchg
data16
xchg
cmp
int3
mov
cld
dec
popa
ret
pop
push
out
movsb
add
fsts
pop
test
ret
dec
push
fistps
xor
idivb
in
mov
sub
mov
dec
cwtl
mov
jle
cmp
jl
sti
mov
pop
test
mov
inc
cmp
dec
pop
pop
push
xchg
mov
mov
mov
ss
outsl
scas
dec
mov
cmpb
jl
sub
push
xchg
cmp
hlt
jbe
mov
call
pop
push
mov
sub
mov
xor
pop
push
xor
scas
pop
inc
xor
adc
stos
fcoms
stos
dec
bound
roll
jb
or
sbb
out
jmp
and
aaa
jge
sub
aas
pop
and
data16
movsl
sbb
adc
std
dec
add
testb
ljmp
test
jl
xor
and
lea
mov
bound
loopne
push
push
cltd
lret
stc
pop
lret
jl
cwtl
dec
repnz
jne
pop
mov
mov
pop
dec
ret
repz
xlat
insl
adc
cmp
arpl
add
std
add
xchg
rorl
inc
mov
xchg
cmp
stos
in
or
mov
fidivrl
mov
lret
push
mov
or
mov
xor
insl
mov
sub
add
cmp
pushf
adc
pop
out
pusha
pop
jnp
cmp
notl
out
clc
loop
pop
jecxz
inc
pop
mov
or
mov
mov
jmp
stc
test
sub
xor
mov
pop
pop
aam
fcoml
and
in
out
mov
jl
mov
and
mov
int3
push
cli
ret
mov
push
cmp
push
cli
xlat
and
bound
push
mov
imul
push
xor
pop
popf
cltd
push
mov
mov
and
loopne
in
xchg
int3
js
lret
jnp
mov
inc
lock
and
test
mov
int3
push
ljmp
inc
loope
push
mov
and
push
lds
xchg
fiaddl
push
xor
dec
cltd
mov
push
shl
gs
lret
repz
dec
add
inc
sbb
pop
mov
imul
lea
inc
sub
mov
push
lea
mov
imul
add
push
jl
aam
or
xchg
mov
addr16
pop
mov
in
mov
mov
dec
mov
jno
ret
int
xor
call
test
popf
popa
jne
je
jmp
lea
add
mov
mov
mul
js
pop
movsl
xchg
mov
dec
inc
and
mov
xchg
sbb
shlb
dec
inc
mov
movsl
lods
xor
and
sub
rcrl
dec
sbb
jle
dec
int3
stos
cmc
and
sub
xchg
incb
sub
xor
push
pop
aaa
out
push
daa
xlat
sub
xchg
mov
dec
push
mov
xor
dec
cmp
inc
cmp
rcrl
jg
jg
nop
dec
inc
sub
lcall
mov
scas
mull
jl
sarl
and
jnp
or
int
lret
je
mov
push
mov
push
cltd
scas
jp
pop
ret
test
push
mov
cmp
pop
inc
ljmp
sbb
pop
jp
and
sbbb
int
or
hlt
mov
adc
push
xchg
and
xor
push
in
mov
dec
lds
lock
andb
cmp
mov
call
ds
sub
enter
clc
test
fisttps
test
jae
js
xchg
pop
ret
dec
mov
pop
stos
mov
mov
das
xor
xchg
lock
pop
jge
pop
mov
xor
dec
repz
scas
mov
jg
iret
mov
rclb
wrmsr
xor
xchg
ds
xor
arpl
scas
mov
mov
dec
movsl
out
jae
sbb
vmovshdup
sbb
push
xor
jo
ret
negb
cmpsl
test
mov
cwtl
mov
cmp
xchg
dec
xchg
lcall
and
mov
cmp
rcrb
arpl
xor
xor
iret
outsl
fcmovnu
sbb
loopne
sti
in
push
cwtl
cmp
pop
or
xlat
add
ret
pop
pop
inc
mov
mov
mov
xor
loope
ss
push
repnz
mov
mov
jge
in
dec
sub
mov
lds
in
or
sbb
or
ficoml
inc
mov
ret
loope
push
jp
jnp
ljmp
iret
push
or
pop
jnp
push
push
in
out
inc
pop
pushf
push
leave
cli
inc
test
aaa
dec
movsb
jl
stos
test
jl
outsl
scas
jnp
std
jne
inc
mov
pusha
xchg
fcomip
lds
cmpsl
mov
jns
lcall
rcll
add
mov
and
pop
insl
mov
fucom
fs
dec
add
pop
dec
cmp
mov
dec
lcall
shlb
fldt
sarb
mov
out
and
ljmp
mov
hlt
test
add
inc
fsin
imul
mov
and
enter
pop
bnd
call
push
cs
aad
adc
clc
jno
jmp
imul
inc
dec
add
scas
lock
scas
sub
movsl
repz
pop
xchg
jmp
add
imul
pop
jnp
mov
imul
subb
xorb
xchg
test
push
jmp
mov
dec
lock
arpl
push
mov
iret
add
pop
lock
jns
into
fisubs
cmp
or
insl
mov
push
in
jb
mov
std
xchg
das
in
adc
cmp
xor
lcall
sbb
std
sub
or
xchg
mov
inc
loope
jecxz
pop
cmpsb
stc
push
jmp
cmc
outsb
dec
push
mov
xchg
aas
adc
sub
lret
and
xchg
nop
push
imul
jno
daa
dec
stos
dec
push
jnp
enter
je
gs
movsl
jl
xor
xor
pop
mov
cmp
dec
cmp
pop
or
xor
rol
cld
mov
outsb
hlt
lret
push
pop
fimuls
pop
das
lahf
cmp
cmp
and
mov
xor
jo
rcr
and
pop
inc
dec
adc
jbe
sub
adc
movsb
shl
push
cmp
pop
mov
cmpsl
xchg
cltd
out
stc
or
jbe
or
ds
xor
outsb
xchg
fsubrs
jp
in
mov
nop
ss
jg
xchg
sarl
enter
pop
divb
pop
jge
push
mov
imul
inc
pop
sbb
jmp
xchg
sub
enter
sub
cmp
add
mov
fs
pushf
push
into
cmc
jg
push
hlt
or
insb
js
lea
imul
daa
stc
jle
mov
push
sub
push
nop
inc
push
jg
shlb
xchg
add
add
lcall
fs
mov
test
std
insl
cmc
sub
push
pop
jle
sbb
pop
nop
movb
insb
mov
xchg
imul
cmp
cltd
sbb
insl
cmp
dec
jno
loopne
sbbl
xchg
jecxz
arpl
push
push
outsl
pop
leave
mov
rorl
mov
pop
cwtl
cs
jae
das
loopne
mov
int
sbb
aas
mov
outsl
jecxz
jecxz
inc
push
pop
scas
cmpsb
cmp
jge
cld
mov
out
dec
outsb
pop
loop
mov
lret
das
dec
mov
mov
ds
dec
daa
cmp
jmp
int
orl
rcrb
xor
out
scas
jae
inc
outsl
daa
sub
mov
inc
adc
cltd
and
mov
cmp
jecxz
push
jnp
jne
jmp
test
xor
fnsave
iret
jmp
mov
sarb
add
adc
mov
hlt
xlat
popa
jl
mov
imul
adc
negb
jl
repz
test
sub
mov
movsb
xor
jecxz
lea
xor
mov
stos
cltd
je
fmul
pop
cmc
sbb
push
lret
xlat
jae
sbb
cmp
jmp
sbb
test
mov
sarb
lods
call
cmpsl
xlat
xchg
pop
cmp
xchg
ds
outsb
lods
fsubl
lods
gs
hlt
das
cmp
cmp
xlat
sbb
fisttps
test
jg
xor
fwait
jg
sbb
insl
xor
repnz
pop
xor
dec
test
enter
xchg
jl
jb
js
sahf
stos
sub
sub
inc
test
jb
shr
jns
ret
cmpl
imul
jecxz
subl
xchg
icebp
xor
fimull
push
sbb
xchg
mov
xor
vmread
add
mov
fisttpll
or
adc
dec
icebp
rorl
mov
xor
and
clc
in
popf
out
pop
push
aas
fists
pop
sti
push
mov
adc
xchg
dec
dec
push
mov
mov
push
movsl
inc
push
jnp
in
and
sbb
xchg
inc
loop
stos
leave
repz
aaa
dec
jns
xchg
and
sbb
iret
mov
mov
xor
icebp
pop
adc
mov
repz
flds
je
cmpsb
nop
dec
mov
jnp
add
jge
jns
loopne
dec
andb
jp
popf
call
lcall
ja
or
adcl
mov
fwait
hlt
pop
pop
pusha
mov
stc
lret
pop
fldt
or
cmp
out
into
jnp
arpl
xchg
jmp
inc
inc
lahf
xor
test
xor
rol
test
jmp
mov
jbe
out
hlt
lea
call
mov
inc
mov
mov
cmp
sti
cmp
sti
cmp
xor
inc
mov
in
rcll
cmp
popl
and
inc
cmpl
add
loope
es
pop
fbld
add
sbb
pop
sbb
ljmp
bound
jmp
xchg
sbb
xchg
seto
repz
jo
cvtpi2ps
aaa
jo
push
rcrl
arpl
jg
jle
loop
or
mov
mov
inc
popf
pop
ljmp
nop
fildl
xor
aaa
or
js
js
data16
jne
cmpl
pop
leave
fbstp
cmp
mov
mov
jbe
and
jg
loope
outsb
jl
and
xor
sahf
sbb
mov
mov
shrl
out
mov
out
jle
mov
hlt
xor
js
and
xor
sbb
sbb
mov
push
in
sahf
lcall
lds
dec
lcall
daa
bound
cmp
xor
mov
or
rcrl
int3
sahf
pop
xchg
icebp
sub
int
mov
lods
inc
gs
mov
js
lret
data16
mov
pop
rcr
mov
pop
add
cmp
jbe
or
xor
mov
mov
mov
adc
js
xor
cmp
gs
dec
lds
push
hlt
dec
xchg
sub
jle
add
add
stc
cltd
test
loopne
mov
sub
iret
mov
mov
shll
bound
dec
loopne
pop
lret
jecxz
scas
repnz
in
shll
clc
std
aad
jmp
std
inc
mov
inc
mov
cmp
sub
stos
adc
xchg
shl
add
dec
fidivrl
xor
aaa
mov
fdiv
mov
add
sub
popf
aaa
popa
jle
lds
lods
dec
sbb
or
sbb
push
or
test
in
and
dec
mov
es
push
xor
inc
es
les
xor
pop
test
fistps
cmp
cli
pushf
add
adc
add
xchg
dec
and
sbb
sahf
icebp
test
pop
pop
lods
les
popa
das
hlt
xchg
xchg
push
mov
mov
lret
div
test
push
and
fnstsw
ljmp
sbb
shrl
xor
nop
rep
out
cmpsl
inc
inc
mov
out
cmp
rcll
mov
in
xchg
fsubp
xor
aam
xlat
jecxz
and
cli
inc
imul
je
shlb
cmp
lret
pushf
in
arpl
jns
or
andb
cld
jbe
js
jmp
call
inc
mov
mov
test
pop
lret
aam
scas
or
roll
mov
inc
push
stos
dec
dec
ss
fmuls
cmp
test
mov
repz
hlt
movsb
push
repnz
mov
and
shr
lahf
add
cmc
movsb
addl
mov
xor
push
mov
sbb
mov
cmp
dec
pop
push
sbb
fdivrp
cld
jne
inc
pop
dec
fs
fimull
inc
or
sub
loope
rcrb
and
add
push
leave
mov
inc
scas
les
je
inc
movl
or
jae
ss
cwtl
lea
sbb
ja
push
movsb
jo
xor
dec
addl
sbb
pop
outsb
mov
xchg
inc
dec
push
cmp
int
pusha
ljmp
test
inc
cmc
jge
cmp
icebp
scas
testl
mov
push
movsl
jnp
mov
jl
push
or
ret
cs
je
adc
fsubrl
outsb
push
jg
pusha
push
mov
xchg
inc
out
fcomip
pop
bound
addr16
lret
adc
scas
shll
xchg
add
in
aad
jns
ja
call
xor
shl
mov
jb
add
push
jno
out
imul
pop
lods
add
dec
and
ja
fisttps
fnstcw
mov
clc
fstl
mov
push
mov
mov
jmp
mov
scas
add
mov
jecxz
les
push
xchg
outsb
lret
in
or
cmpsb
in
jmp
scas
push
es
inc
pop
call
inc
clc
sahf
cmp
sub
and
scas
int3
mov
loop
push
fcmovbe
xchg
ds
inc
fsub
sbb
pop
and
insl
and
or
fs
push
lret
lret
xchg
and
add
push
nop
int
dec
addb
mov
sub
addb
cmp
dec
daa
pop
stc
repz
mov
rclb
enter
pop
scas
inc
fiadds
rcl
mov
cmp
add
fdivrl
mov
idiv
and
and
rcrb
gs
addr16
dec
mov
pop
xor
scas
imul
xchg
cmp
mov
mov
push
cld
je
add
mov
ja
lods
nop
adc
mov
xor
push
xor
sub
cmc
add
add
loopne
add
leave
push
sahf
pop
mov
jne
jg
cmp
stos
jmp
ljmp
imul
push
inc
jbe
adcl
dec
out
js
fs
orl
or
jbe
cld
test
and
push
mov
add
jno
test
nop
cmp
cli
insb
mov
mov
ljmp
sub
lcall
or
outsb
mov
inc
and
push
push
xchg
in
push
inc
divl
inc
nop
pusha
push
xchg
ficoms
insb
fisubs
xor
jbe
and
jge
icebp
lock
cmc
push
push
pop
bound
mov
stc
add
test
das
enter
cmc
xchg
into
xchg
jge
mov
or
adc
and
mov
popf
inc
mov
jne
sub
out
sub
jmp
dec
jb
jmp
sbb
adc
div
in
pusha
jp
icebp
jmp
ja
jne
dec
jnp
inc
fisubs
push
dec
repz
ret
aad
out
das
ficoml
into
cli
idivl
mov
mov
cmp
mov
cmp
mov
in
push
mov
pop
outsl
shll
mov
push
add
and
iret
std
cmp
sahf
scas
adc
adc
arpl
mov
inc
or
adc
jne
adc
mov
addr16
arpl
divl
add
in
mov
add
int3
sbb
in
or
add
mov
mov
out
and
lcall
in
shlb
push
sbb
xchg
and
jmp
inc
xor
mov
aaa
repz
pop
push
bound
into
pushf
cwtl
sub
popa
dec
lods
in
rolb
std
icebp
sub
inc
rcl
pop
rol
fstpt
jle
pop
mov
in
sbb
cmpsl
jns
add
cmpsl
mov
mov
mov
add
ret
ret
or
pop
mov
jl
jg
mov
inc
dec
jge
pop
mov
and
lret
mov
mov
subl
and
sbbl
nop
dec
dec
aaa
aam
jmp
pusha
mov
push
mov
insl
sub
sti
rcl
cs
lock
out
sti
mov
inc
add
and
and
push
popa
sahf
sub
mov
jmp
lcall
scas
movsl
fimull
pop
xchg
lret
push
aas
sbb
test
shl
je
xor
loope
jns
dec
dec
inc
adc
jne
pop
mov
icebp
sub
aad
ja
ss
mov
push
jge
jb
mov
mov
or
inc
pop
adc
sub
mov
xlat
pop
fwait
dec
adc
loopne
andb
popf
repnz
stc
cmpsb
fdivl
std
imul
ret
xor
and
pusha
popf
fmul
out
pop
cmpsl
mov
cmp
fists
pop
fld
sbb
lock
es
mov
dec
ss
aas
xor
jne
lahf
test
mov
pop
mov
cmp
xchg
pop
shll
cld
xchg
push
jae
out
gs
pop
cmc
sbb
sbb
inc
dec
leave
in
mov
inc
sahf
pop
push
int3
inc
rolb
cmp
mov
imul
orl
dec
or
lods
sbb
stos
rol
ja
dec
xor
test
push
lahf
fs
in
icebp
and
out
aam
in
rcr
shl
sub
push
jne
pop
inc
jecxz
jmp
or
xchg
xor
out
scas
add
sbb
std
inc
mov
sub
and
push
clc
push
mov
in
and
hlt
jmp
in
rorl
jle
cmp
adc
xchg
int3
bound
or
mov
pop
adc
push
xorl
js
negl
movl
out
sar
sub
mov
xor
jbe
mov
mov
mov
xor
sub
pop
cltd
xor
jb
mov
cmp
fcomp
or
sbbl
or
es
cmp
mov
out
adc
repnz
cs
fsts
idivl
cmpsl
repnz
pop
push
pop
dec
movsl
xchg
int3
sub
decb
cwtl
xchg
jnp
jg
sub
addr16
orb
mov
pop
daa
xor
cmp
and
ret
sub
in
inc
and
outsl
or
ret
mov
into
imull
outsl
sti
add
inc
sub
ss
and
mov
mov
mov
and
sahf
fcomip
pop
lods
mov
push
fcmovu
xor
add
adc
sbb
inc
jns
fs
xor
jb
inc
push
fsubl
test
jae
popa
ret
pop
movsl
inc
mov
addl
cmpsb
and
sub
int
jmp
dec
mov
sub
pushf
daa
mov
xchg
mov
inc
inc
aam
fs
add
dec
ret
dec
cmp
out
cld
lods
stc
packuswb
addl
jmp
cmp
add
mov
and
aaa
out
pop
cs
in
fldl
outsb
fistps
mov
repnz
test
shll
and
lods
shlb
and
pop
pop
pop
or
fcoms
adc
mov
sahf
mov
fisttpll
jbe
int
popl
lods
pop
cltd
xchg
xchg
lods
into
push
sub
icebp
ret
shlb
push
mov
xchg
push
adc
or
cld
int
mov
nop
inc
ljmp
pop
mov
xchg
clc
and
mov
fstpt
dec
aam
fsubrp
rcr
test
or
dec
jg,pn
xchg
mov
into
aam
mov
push
data16
call
hlt
lret
scas
and
dec
aas
sub
push
xchg
ljmp
or
push
flds
mov
dec
dec
mov
inc
cmp
cmc
mov
push
xchg
mov
adc
xchg
mov
dec
pop
add
lea
enter
pop
sbbb
push
out
mov
pop
int
cmp
mov
js
in
sub
push
out
adc
push
pop
adc
fwait
mov
fwait
in
or
fs
adc
mov
xchg
les
shr
add
adc
imul
sbb
jmp
sbb
sbb
add
lock
sub
and
stos
mul
lods
push
repz
and
adc
cmp
mov
inc
iret
mov
andb
lock
dec
mov
jp
fwait
pop
sahf
cld
push
mov
push
push
lods
sub
popfw
xchg
inc
cmp
mov
leave
bound
pop
imul
stos
adc
enter
scas
inc
cwtl
jge
inc
in
out
adc
std
inc
xchg
pop
pop
dec
mov
cltd
shll
int
out
mov
fdivs
fucomi
in
daa
push
and
inc
mov
mov
aas
inc
out
push
lcall
sbb
mov
push
daa
mov
inc
cmp
xchg
mov
daa
or
pop
mov
inc
pop
test
inc
jle
not
lea
ja
in
mov
repz
jp
cmp
stc
inc
ret
or
add
xor
xchg
shlb
cld
pushf
inc
movl
nop
xlat
scas
cmp
or
lock
je
shll
mov
lret
in
int3
mov
lods
pop
mov
fcmovne
push
or
rcl
xor
aas
sbb
push
push
sub
rorl
lods
mov
mov
cmpb
xor
cmpsb
jno
mov
nop
je
push
icebp
xor
push
in
jmp
push
fmull
rep
inc
idivl
push
daa
xor
add
pop
push
adc
cmp
push
repnz
lods
cmp
dec
je
inc
push
std
iret
cmc
repz
fcmovnbe
insl
sbb
sbb
daa
dec
leave
jl
in
pop
shr
insb
aam
cmp
dec
cmp
inc
cltd
mov
ss
pop
mov
jns
aaa
fsts
xor
insl
ja
xchg
shll
pop
lret
out
fisubs
push
adc
insl
mov
loopne
pop
aas
in
cmc
scas
push
or
sarb
dec
ret
mov
push
cmovb
xor
lret
and
pop
mov
add
pop
movsb
sahf
ficomps
rol
mov
inc
xchg
dec
call
pop
imul
and
add
xchg
in
in
jl
adc
sbb
popa
and
xchg
pop
xchg
xchg
push
add
lcall
xchg
jmp
sbb
out
jne
and
pushf
repnz
sbb
adc
sub
lds
pop
mov
pop
mov
scas
sub
stc
jno
add
sub
test
mov
insb
inc
mov
movsb
rcrb
mov
adc
xor
inc
adc
xchg
sub
inc
lret
xchg
sub
and
jecxz
popa
out
loop
jle
cs
out
insb
pop
fldenv
xchg
into
cs
ljmp
cmp
sub
dec
xchg
scas
repz
in
sub
xchg
test
shlb
pop
push
movsb
int3
cs
scas
addr16
or
adc
mov
je
sbb
shrl
movb
mov
or
push
mov
mov
test
jg
stos
jno
push
hlt
aaa
test
adc
roll
or
mov
call
in
push
mov
std
negl
popaw
adc
jecxz
cmpsl
xor
and
mov
jb
dec
addr16
lret
ficoms
out
mov
push
scas
push
push
cmpsl
ret
or
bound
cwtl
ret
outsl
lods
enter
insl
pop
add
push
outsb
or
hlt
sarl
push
sahf
flds
pop
shl
add
loopne
or
adc
lds
jmp
dec
pop
fnsetpm(287
or
xor
xchg
mov
mov
in
leave
pop
and
mov
sar
cld
jmp
loop
lahf
xor
pop
adc
je
dec
push
mov
fists
mov
push
pop
xchg
xor
xchg
ret
je
popa
or
repz
movsb
pop
sub
scas
outsb
mov
pop
dec
add
and
inc
rclb
inc
cmp
xor
test
adc
jne
jl
subl
xchg
repz
out
sbb
pop
mov
adc
push
fwait
adc
jne
push
repz
push
fistpl
add
mov
cmovnp
push
cmp
fwait
inc
in
jae
sub
inc
cltd
mov
lds
cli
fwait
testl
xchg
xlat
jge
cmc
add
adc
adc
jle
insb
sbb
test
mov
incl
cltd
pop
add
aam
mov
aas
lods
xchg
gs
dec
pop
fistpll
int3
jbe
jne
daa
mov
or
inc
adc
pop
ss
dec
mov
shr
cs
cs
mov
xchg
and
repnz
xor
rolb
hlt
add
jo
lods
int
dec
sbb
dec
dec
push
push
into
fisubrs
add
xor
xchg
enter
gs
cmp
aas
mov
push
xchg
or
inc
push
fistl
sub
scas
aaa
ljmp
cmp
sub
std
out
nop
rcrb
dec
repz
mov
mov
sbb
add
xor
push
mov
dec
lds
ss
mov
push
jns
add
push
rcrl
jne
jecxz
sbb
lcall
xor
es
adc
mov
xchg
ja
movb
cmp
add
fcmovb
inc
movsl
cmpsb
rolb
jnp
shlb
inc
jne
fisubs
jmp
fucomip
inc
aas
movb
mov
add
cmp
popa
shlb
push
sbb
test
xor
and
stc
mov
adc
xchg
adc
shlb
jne
test
cmp
fldpi
push
jl
add
push
addl
into
adcl
pop
mov
xor
mov
inc
jp
std
push
popf
jne
sahf
jecxz
gs
adc
sbb
xor
cs
sub
movsb
add
out
cmp
pop
push
outsb
jle
xchg
and
pushf
jg
bound
gs
mull
xchg
mov
outsb
test
enter
test
add
push
aaa
jne
mov
scas
inc
insb
testb
clc
adc
jmp
addr16
in
shll
fnstsw
inc
shll
testb
mov
mov
jno
pop
sbb
and
ds
inc
ret
jo
iret
or
mov
jecxz
rcrl
adc
push
int
adc
psubw
int3
daa
push
outsb
outsb
icebp
inc
xor
mov
test
stc
pop
inc
orl
and
pop
xor
loope
pop
mov
rcl
push
rorb
andb
data16
adc
sahf
lret
mov
inc
lock
rcrl
repnz
lret
in
push
out
ds
outsb
cmp
xchg
push
ret
out
jb
imul
xor
sub
cmp
clc
test
xchg
cwtl
cmp
sbb
lea
add
jg
or
cltd
fcmovnbe
xor
insl
movsl
jmp
aas
sbbb
cwtl
fsts
lods
jg
cmc
jecxz
cmp
mov
rclb
icebp
mov
gs
cwtl
sbbl
mov
imul
loope
setb
inc
cmp
adc
inc
and
cltd
sub
mov
jbe
push
mov
in
xor
pop
fdivrp
push
mov
mov
cmp
fnstenv
in
stos
mov
cmp
xchg
adc
jne
test
movsb
mov
sub
cmc
adc
sbb
jge
jnp
jl
mov
pusha
movnti
outsl
loope
cli
pop
push
pusha
push
call
dec
in
mov
loope
cltd
push
xor
jge
scas
out
lret
call
scas
mov
test
dec
mov
leave
fnstenv
call
setp
dec
jg
sub
lea
orl
call
jle
loopne
mov
mov
ljmp
mov
out
stos
out
xor
lods
and
xchg
push
jne
enter
dec
xor
lods
pop
lods
jns
dec
adc
repz
cld
pop
fiaddl
cwtl
out
jb
cmpsb
lock
cmpsl
adc
pusha
or
lods
fmull
mov
or
jg
push
jne
divl
mov
and
mov
push
shlb
jo
sbb
jo
push
or
pop
ret
mov
and
xor
nop
sub
mov
pop
lcall
sahf
pop
fsubrs
lock
gs
jmp
pop
pop
mov
es
jnp
pop
hlt
cs
xor
loopne
je
inc
psubusw
mov
mov
pop
addr16
jno
shrl
outsb
sbb
in
cltd
cltd
popa
push
nopl
test
mov
jle
xor
lock
jno
xchg
movsb
hlt
jl
mov
insb
fnstenv
mov
sub
int
and
cmp
xor
insb
ret
out
in
movsb
shrl
push
fnsave
bound
inc
push
and
jp
xchg
pop
sub
pop
not
out
movsb
push
cli
dec
out
mov
xor
aam
rcr
cmpsl
xchg
cmc
pop
pop
mov
insb
lock
in
aad
test
mov
fyl2xp1
pop
fs
js
cmp
push
mov
push
movsb
pushf
jae
daa
inc
xchg
popf
call
inc
aad
adc
mov
push
jae
cmpsb
cli
cld
outsl
mov
adc
call
imul
data16
push
mov
jmp
push
cltd
xor
and
int
push
adcl
fmull
shlb
rcll
leave
push
mov
xor
popf
ret
shrl
xor
xor
pop
mov
cmovns
or
push
aam
pop
jp
int
pop
xor
or
stos
xchg
idivl
mov
push
push
push
loop
paddsb
xor
pop
pop
addr16
jle
ss
push
ds
xlat
xchg
arpl
xchg
leave
gs
mov
mov
sbb
mov
jns
cmp
sub
xor
sub
cmp
pop
sub
out
gs
lret
cmpsb
mov
mov
fdivrp
xchg
mov
hlt
push
dec
test
sbb
cmpsl
pop
jp
dec
mov
into
in
lahf
mov
pop
xchg
jno
std
cltd
subb
ja
xchg
sbb
mov
cmpsb
lods
test
xchg
cltd
jmp
clc
mov
and
loope
lods
mov
loope
cli
ss
cltd
mov
sub
inc
loop
mov
sbb
adc
inc
mov
cs
icebp
adc
mov
inc
adcb
pusha
fldcw
sub
and
iret
cmp
and
mull
sbb
outsl
lcall
cmp
nop
jns
pop
push
test
hlt
jecxz
pop
or
mov
jecxz
in
xlat
and
pop
and
xchg
jmp
mov
out
ljmp
xchg
or
or
scas
pop
ss
dec
lods
inc
mov
insb
imul
and
mov
add
mov
lret
inc
sub
aas
test
sbb
out
test
sbb
and
or
jl
loop
call
pop
adc
dec
inc
jo
lock
cltd
pop
pcmpgtd
dec
push
lret
cmpsl
movsl
orl
enter
xchg
cmp
fsts
data16
imul
enter
jle
std
leave
xlat
inc
xchg
sub
sub
test
dec
js
or
es
std
inc
and
xor
push
xlat
outsb
xor
inc
add
repz
pop
fnstsw
sub
clc
lret
dec
push
popf
in
pop
loop
dec
ret
popa
imul
lds
sub
dec
mov
push
leave
adcl
pop
leave
out
ret
out
jle
jge
cltd
ljmp
xor
imul
test
pop
test
mov
jne
testl
pop
jno
jb
shlb
and
testb
ret
xchg
or
pop
imul
repz
flds
jle
dec
mov
push
push
push
rcll
daa
and
cmpl
dec
std
mov
and
outsl
and
and
in
mov
sbb
stos
popa
jo
mov
nop
mov
aam
adc
jo
xor
jecxz
cmp
fdivrs
and
in
cmp
push
cltd
aam
push
stos
aad
mov
mov
cld
fcomps
pop
shr
lods
rcrl
lea
xchg
dec
push
gs
pop
fdivp
in
dec
popa
popf
xor
sahf
xchg
icebp
jns
or
xor
je
sub
call
mov
daa
neg
xor
mov
and
nop
mov
adc
les
mov
pop
inc
or
inc
loopne
mov
int3
push
mov
scas
ss
out
fsubrs
jle
inc
mov
fcom
adc
xchg
dec
dec
mov
push
rorb
lret
loope
or
lds
jg
jns
push
or
dec
push
pop
push
lock
mov
inc
sub
iret
adc
sub
jl
in
mov
insl
repz
cli
jbe
imul
cmpsb
out
push
outsb
mov
inc
cltd
sbb
push
popa
xchg
in
pop
cmp
pop
adc
cmp
ret
pop
cltd
xor
das
out
mov
scas
push
movl
inc
jge
inc
repnz
dec
jbe
lds
rcrl
lret
mov
aam
mov
out
mov
xor
nop
xchg
or
mov
mov
clc
aaa
mov
out
mov
push
jae
pushf
retw
dec
mov
shr
mov
aas
lret
shl
test
fimuls
repnz
xor
sub
popa
sub
sub
inc
mov
sarl
negb
cli
adc
sbb
add
cli
repnz
jge
movsl
mov
pop
fisttpl
pop
lods
and
mov
test
adc
arpl
in
xchg
sbb
mov
inc
dec
mov
arpl
ss
or
xchg
lahf
arpl
push
dec
stos
sarl
inc
mov
jmp
fcmovnbe
enter
fscale
pop
cmp
xlat
fmuls
adc
sbb
lret
lds
pusha
xchg
ficomps
orl
push
fwait
dec
xchg
notl
jle
addr16
jmp
imul
loopne
scas
data16
addr16
jle
test
enter
jge
leave
add
jle
mov
enter
add
xor
jbe
and
push
mov
dec
scas
cs
in
packssdw
or
xchg
push
lret
lea
inc
sahf
imull
dec
cmpsb
icebp
xchg
cltd
test
push
out
xchg
fld
sbb
es
push
inc
sub
cmp
hlt
addr16
ds
arpl
iret
arpl
pop
mov
sbb
dec
sbb
xor
mov
fdivp
aaa
aas
dec
ds
inc
cld
push
pop
cmpsl
dec
mov
scas
arpl
jmp
mov
popf
inc
sub
jmp
sub
loope
mov
arpl
or
inc
arpl
int
leave
xchg
push
in
shlb
in
fsubrs
jb
divb
push
out
inc
jmp
jmp
cmp
xchg
mov
inc
fxch
andl
aaa
cli
mov
xlat
pop
test
flds
in
inc
ljmp
jge
test
stc
sub
or
and
mov
add
and
lret
mov
mov
adc
lahf
mov
xchg
mov
jns
and
mov
out
push
inc
mov
cmpsl
push
psubb
js
inc
inc
das
mov
leave
and
xor
ja
or
lret
aad
stos
je
xor
cmp
lcall
push
call
ljmp
ljmp
daa
mov
sti
sub
sar
cmpsb
xor
or
pusha
mov
ret
loopne
and
mov
jl
mov
fimull
outsb
mov
int
xchg
xor
sbb
sahf
enter
add
out
push
out
icebp
dec
cmc
popf
pop
imul
lods
dec
jle
jb
add
mov
push
push
in
mov
mov
xlat
and
pop
sbb
sbb
mov
out
push
cmp
add
lahf
sbb
xchg
aas
into
xor
hlt
rcll
rorb
out
lds
ja
xchg
cli
bound
or
add
mov
mov
xor
push
add
test
ret
or
mov
xor
rorl
rcrb
pop
fs
fdivs
or
and
std
sub
pop
xor
sti
sbbb
jae
mov
loopne
pushf
mov
inc
shll
xchg
sbb
mov
ds
scas
inc
fwait
xchg
lcall
icebp
adcb
stos
int3
dec
cmp
or
push
xchg
in
xor
push
jge
inc
dec
push
les
push
jbe
xor
negb
in
or
mov
ds
rcr
stos
mov
je
jmp
mov
enter
scas
push
ljmp
jnp
sbb
mov
adc
mov
inc
jne
xchg
test
fcomps
pop
add
lods
popf
xor
jb
pop
xchg
das
aad
aaa
test
cmp
notb
jmp
lret
mov
sti
adc
mov
out
jg
dec
mov
or
cmpsb
mov
aas
jge
loope
jmp
xor
scas
lea
fbld
or
jle
xchg
xchg
cmp
mov
orl
jne
push
je
mov
lods
pop
dec
out
cmp
mov
pusha
jle
jo
mov
cmpsl
and
sub
jae
mov
push
cmp
ret
xor
or
add
adc
ret
inc
sub
fldenv
jge
leave
mov
sti
xor
mov
add
mov
inc
movsb
mov
and
mov
orl
in
addr16
sahf
or
clc
or
pop
mov
sbb
add
in
adc
dec
jne
sbb
cli
mov
fdivl
mov
cs
je
testl
addr16
jl
jns
sbb
jb
xor
addr16
cwtl
add
pop
dec
jae
jnp
xor
cmp
lock
mov
xchg
mov
andl
add
into
sti
xor
lret
imul
sbb
inc
cmpsl
jne
arpl
je
ret
cmp
leave
mov
sbb
xchg
js
cmp
xchg
fdivl
xchg
jg
mov
popa
jp
inc
push
mov
sti
out
daa
repz
fsub
adc
adc
adc
inc
ljmp
inc
inc
xchg
jae
pop
xchg
pop
mov
xchg
xor
and
stc
clc
mov
and
mov
pop
cmp
mov
div
lods
mov
mov
jecxz
cli
enter
outsb
or
mov
orl
shlb
in
stc
mov
dec
mov
xor
inc
jbe
xor
push
xchg
push
push
rcrl
push
imul
and
xchg
aad
nop
js
repz
adc
mov
lods
roll
and
and
dec
jne
fcom
addr16
mov
loop
xor
frstor
xor
mov
fistps
or
sub
movsl
out
jp
loope
adc
push
add
add
xchg
out
sub
ljmp
adc
out
jecxz
lock
mov
dec
rorb
test
cmp
pop
es
mov
bound
lret
xchg
inc
fists
std
loope
inc
xchg
pop
push
fdivrs
sbb
mov
sub
in
fldcw
insl
push
movsb
cmp
mov
xor
and
gs
jecxz
sbb
sbb
mov
cld
pop
cmp
adc
pop
cmp
sahf
jno
subb
adc
mov
add
out
ss
je
adc
iret
xchg
leave
pop
sbb
lock
out
stos
jo
stos
mov
out
sub
leave
push
ds
js
rolb
xchg
jl
clc
inc
dec
fs
sbb
shlb
jbe
sbb
push
dec
or
push
add
lret
add
xor
xor
xchg
and
jmp
fcompl
mov
ja
inc
popf
sbb
cmp
push
push
and
cmpsb
push
pop
jge
shll
mov
outsl
cmp
lret
lcall
jl
and
fdivs
mov
xchg
test
push
mov
hlt
loopne
in
les
and
add
je
xor
fidivrs
push
in
xor
push
xor
push
adc
fimull
xor
or
fxam
out
fisubs
xchg
fmull
insb
test
fcmovnb
es
xchg
add
xchg
lods
in
dec
cmp
daa
cmp
out
sub
xchg
ret
or
out
mov
mov
sub
jle
call
lcall
jmp
sbb
push
in
js
push
add
call
or
cs
loopne
fdivrp
movsb
cli
jo
pop
dec
jle
imul
bound
add
cmp
jbe
cmp
insb
pop
mov
sbb
fistpl
popa
pop
push
and
jb
push
hlt
xchg
xchg
sub
cmp
fbld
jns
jno
ds
fwait
and
insl
aas
fmull
push
jmp
fbstp
adc
mov
addr16
cld
xchg
vmovntps
add
stc
xchg
fstps
icebp
dec
sub
sahf
push
adc
and
lods
dec
fdivs
mov
movsb
sbb
xchg
push
xor
xor
xchg
cmc
and
mov
sub
jb
mov
ret
xchg
repnz
les
mov
in
div
dec
dec
dec
adc
inc
sahf
jno
in
imul
ss
arpl
xor
fwait
xchg
sbb
mov
je
into
mov
out
loop
fadds
cltd
and
sbb
imul
inc
push
outsb
ficomps
jge
rolb
test
mov
std
cltd
dec
nop
inc
xor
idivb
dec
mov
fs
mov
gs
dec
shrb
nop
fistps
xchg
mov
inc
and
sub
pop
fisubrs
push
add
push
in
ds
mov
pushf
and
pop
lock
repz
loopne
out
sbb
shrb
lret
push
sub
push
adc
xor
repz
pusha
imul
push
pop
dec
orb
fstpt
fstps
in
adc
or
mov
cmp
cwtl
inc
pop
mov
in
sbb
xchg
out
fsubrs
imul
jo
shl
imul
mov
idivl
lock
mov
mov
ret
mov
inc
sub
pop
das
cmp
lods
loope
xor
mov
sub
mov
mov
pop
cmp
fcoml
test
inc
mov
mov
jae
adc
test
inc
test
rcr
or
movsb
cmc
jmp
sbb
pop
jbe
add
pop
cwtl
pop
ja
push
sub
pop
inc
sbb
call
or
push
pop
int3
push
inc
push
sarb
in
xlat
aaa
xor
pop
xchg
adc
cmpsl
lahf
mov
jge
jno
sbb
dec
divb
fcmovnbe
fistl
cmp
scas
cmc
fwait
push
push
push
into
loopne
push
out
cmp
sbb
sub
sub
sub
imul
cmp
pop
test
xor
sub
pop
and
lods
stos
xor
lods
jb
add
in
or
insb
xchg
lahf
jecxz
inc
lea
in
xor
fs
cs
fcomip
popa
adc
call
lods
lods
jge
stc
mov
push
dec
cmpsb
jnp
into
movsb
sub
jns
leave
xor
sub
loope
mov
in
xchg
add
out
lea
mov
xchg
in
sub
cmc
cmpb
xchg
insb
mov
or
nop
subb
jae
xchg
leave
hlt
and
popf
mov
jbe
das
lea
cmpsl
aaa
loope
cmc
mov
scas
xchg
dec
or
adcb
cmpsl
test
dec
or
jmp
movsl
xor
and
sbb
or
lahf
jmp
outsl
xchg
inc
nop
fnstsw
add
femms
cmpsb
and
mov
mov
testb
shl
inc
fists
repnz
dec
xchg
sub
jb
lea
lods
inc
push
lock
insl
faddp
outsb
aas
jl
mov
inc
push
jae
call
roll
xlat
sbb
cmp
loopne
cmp
jb
sub
push
enter
aas
addr16
lret
mov
hlt
mov
cmpsb
jne
pop
sub
repz
sbb
int3
sbb
dec
xor
mov
fs
xchg
pop
jp
push
mov
cmp
dec
xchg
clc
loopne
les
sub
test
dec
into
dec
cltd
push
cmp
lahf
call
pop
out
and
fs
pusha
xor
mov
lds
addr16
push
fsubrs
mov
mov
pop
cmpsb
imul
and
push
sbb
and
adc
shlb
imul
xor
fs
cmc
xlat
xchg
ds
cmp
mov
test
adc
xchg
ror
sub
and
add
mov
sbb
xchg
mov
jne
lea
pop
aad
lret
movsb
mov
icebp
test
and
xchg
sbb
lcall
div
mov
pop
sbb
mov
mov
jp
sbb
inc
mov
mov
scas
mov
ret
sub
icebp
mov
cmp
lahf
adc
in
dec
push
dec
add
xchg
mov
sbb
jg
repnz
jp
pop
popf
cmpsb
cmp
or
mov
add
xlat
pop
mov
in
aaa
out
out
loope
sub
call
jns
in
hlt
pop
xor
sbb
push
out
fstpl
mov
inc
xor
pop
leave
xor
ja
rcll
jbe
pop
pop
sar
gs
lea
xorl
or
nop
leave
test
or
in
push
vpsrld
jle
sub
add
push
mov
lahf
test
es
fidivl
pop
les
bound
jno
sub
add
cwtl
andl
push
cs
int
lods
dec
push
sbb
sbb
repnz
pop
jno
out
and
mull
or
push
out
push
setl
rcrb
test
cmpsb
or
push
loopne
cwtl
jnp
mov
and
pop
pop
lds
les
call
sbb
jnp
test
and
data16
cld
fistpll
sbb
iret
mov
sti
outsl
jb
dec
xchg
loope
lahf
lret
lock
ficomps
ds
pusha
push
and
imul
sbb
xchg
pushf
scas
xlat
das
adc
jae
dec
mov
xor
das
mov
jae
cmpsb
pop
pop
jns
int3
decl
outsl
in
or
mov
sub
nop
inc
adc
addr16
cmp
jb
bound
in
pop
sbb
cmpsl
and
mov
outsl
iret
subl
dec
popw
aad
dec
and
pop
push
push
sbb
jle
adc
pop
or
rorl
sahf
push
push
or
cmpsb
es
sahf
fists
pop
ret
stc
inc
dec
pop
dec
popa
mov
flds
aam
adc
packsswb
test
add
add
aam
push
iret
hlt
sub
sub
jb
push
test
add
pop
or
dec
or
xchg
lods
xlat
add
mov
gs
shll
jo
dec
lea
adc
mov
sbb
or
xorl
cmc
aaa
mov
and
es
sub
mov
das
and
dec
lods
dec
xchg
into
nop
mov
fildll
push
add
repz
jbe
lds
jno
xchg
js
sub
fimuls
popf
xor
push
shll
ficoms
lock
push
inc
cltd
push
leave
je
popa
mov
fldl
stc
cmp
xchg
push
ljmp
add
mov
mov
mov
jl
notb
mov
lock
xor
mov
addb
add
xchg
push
cld
sbb
fstps
in
lret
ja
add
jecxz
mov
out
movsl
jge
aam
mov
shrl
jle
fldenv
incb
clc
jno
sbb
jns
sub
in
push
mov
bound
inc
mov
xor
ja
push
inc
push
das
into
out
flds
push
push
jmp
pop
imul
pop
cltd
lret
or
sahf
ja
cs
or
enter
loopne,pt
insl
inc
jno
clc
mov
jle
sbb
pop
inc
mov
insb
xorl
pop
rcrb
fdivrs
xchg
sub
cmp
xorl
dec
xchg
adc
std
ljmp
xchg
xor
xor
jae
daa
sub
adc
mov
sub
dec
jg
pop
ljmp
imul
loope
lock
out
cmp
xchg
jp
jge
or
push
dec
das
push
shl
mov
and
and
xchg
and
jb
adc
aas
xor
xlat
in
jl
ds
js
adc
adc
or
aaa
jnp
loope
mov
arpl
xchg
adc
xor
or
cld
aam
mov
adc
jmp
decl
cs
repz
scas
ds
out
mov
add
aam
push
into
in
xchg
es
pusha
out
outsl
jmp
orl
xchg
fistps
push
cmpl
mov
ficompl
xchg
pop
daa
mov
icebp
aad
loop
ret
mov
xlat
repz
add
dec
jecxz
push
lods
cmp
push
inc
inc
cld
push
hlt
movl
scas
fsubrs
inc
outsb
and
pusha
mov
add
push
add
rcrb
les
stos
cmp
inc
mov
mov
outsl
lock
mov
mov
pop
xchg
je
adc
add
ss
push
cmp
pop
int
jns
bound
mov
aad
bound
imul
cmp
xchg
add
jge
push
loop
and
lahf
mov
outsb
rcl
push
mov
or
stos
jmp
ja
jnp
xchg
int
jle
adc
pop
xchg
nop
sbb
je
mov
xor
aad
add
cmpsl
sbb
cmpsl
add
aam
jg
fldcw
mov
xor
ret
dec
inc
jb
sub
repz
rcrl
inc
pop
fs
outsb
lods
imul
sub
rcrl
inc
repnz
es
and
sbb
or
or
xchg
push
loop
adc
cmp
ja
sahf
outsb
mov
aaa
add
test
inc
xorb
mov
lods
adc
lcall
adc
add
pusha
adc
sbb
pop
adc
cmp
insb
sub
iret
test
lds
jae
cmpsl
jb
cmp
xor
jp
popa
je
mov
sbb
mov
mov
std
out
mov
cld
mov
xchg
cmp
fildll
adc
clc
fidivs
and
aaa
or
ss
sti
mov
pop
bound
jne
inc
push
andl
cmp
inc
xchg
push
mov
std
jb
faddl
shl
dec
jge
mov
das
jecxz
adc
ret
fldl
aas
insl
and
jmp
stos
push
lret
in
cli
mov
popa
test
lcall
inc
xchg
mov
es
pop
mov
icebp
xchg
sub
mov
pop
xlat
pop
fldt
lds
mov
xor
insl
inc
dec
inc
cmc
xchg
push
mov
addb
push
mov
cmp
mov
mov
lock
xchg
mov
jp
jo
add
fldl
xor
fnstenv
pop
repz
fs
into
loope
dec
dec
add
xor
fildl
shl
inc
mov
nop
pop
and
adc
adc
cmp
out
add
or
stc
mov
fcmovb
in
jle
dec
mov
ljmp
test
pop
and
sub
dec
mov
enter
xchg
stos
daa
insb
shr
shr
iret
or
mulb
inc
pop
pop
cmpsb
fsub
call
ret
push
jne
loope
int3
fstpl
jae
mov
stc
loope
adc
pushf
outsl
add
cld
or
xor
cmpl
faddp
mov
adcl
push
add
jnp
pmullw
pop
mov
xor
cmpsb
subb
jmp
imul
lods
lods
pop
iret
push
gs
lret
sti
fadds
lea
cmpsl
mov
or
jns
test
in
rorb
or
mov
jo
cwtl
sar
cld
or
and
testl
dec
pop
fisubrs
jg
sub
in
sti
dec
inc
mov
xchg
push
mov
out
rorb
sbb
cmp
inc
push
jecxz
out
add
cltd
stc
call
in
pop
out
mov
push
fwait
xchg
inc
sbb
iret
mov
ret
cmp
xchg
lods
mov
push
loope
sub
icebp
mov
mov
adc
sbb
jp
adc
dec
fsubl
stos
pop
sbb
sub
and
adc
cld
arpl
or
xor
les
mov
insb
sub
pmaxub
repnz
stos
aaa
fwait
stos
jo
scas
gs
or
cmp
cld
jns
pop
jp
ficoms
gs
sti
std
out
cmp
cmc
sbb
mov
xor
scas
into
mov
jo
add
jbe
cltd
jmp
xor
xchg
test
mov
inc
outsl
pop
mov
pop
jmp
mov
adc
xchg
mov
cltd
addb
dec
push
dec
leave
push
negl
outsb
jb
adc
fcoms
cwtl
inc
mov
or
jne,pn
xchg
mov
xlat
in
push
mov
std
std
and
bound
cli
ret
jle
cmpsb
inc
mov
xlat
fdivl
flds
cmc
or
cmp
fwait
pop
popa
les
pop
xchg
je
gs
fimull
inc
or
repz
rol
daa
roll
adc
mov
push
jns
dec
jno
and
aad
aad
add
dec
add
mov
pop
insl
jno
pop
negl
and
mov
mov
push
ror
out
push
outsb
mov
call
inc
jae
ret
gs
aam
mov
push
inc
aaa
adc
push
add
inc
inc
fisubrl
push
stc
jb
xchg
ret
cli
ret
xor
arpl
es
in
push
insl
fucomip
adc
les
pop
and
jno
xchg
sbb
cwtl
xchg
stos
lret
adc
jl
mov
dec
pusha
jge,pn
sub
dec
adc
pusha
xorb
fisubrs
sub
out
lret
add
or
call
jl
jbe
pop
push
test
aad
movsb
inc
jge
out
in
or
mov
pop
adc
fidivrs
iret
cmpsl
sub
inc
rcll
les
adc
movsb
mov
cltd
inc
adc
inc
lods
nop
nop
pop
sub
inc
xchg
aad
push
push
mov
out
push
jge
inc
stos
mov
pop
push
stos
sbb
out
or
sub
hlt
inc
mov
imul
add
lret
jbe
mov
in
outsb
push
xor
push
or
pop
mov
stc
dec
dec
add
or
push
mov
push
inc
fcoms
rep
out
movsl
stos
mov
lcall
mov
insl
outsl
add
cmp
gs
cmp
shrb
push
fisttpl
push
andb
dec
inc
cmp
mov
fcomip
push
arpl
arpl
pop
es
daa
xor
cmp
in
dec
or
cltd
mov
aad
lcall
xchg
iret
sub
decl
and
lock
insb
add
pop
xchg
xchg
xlat
mov
shrl
dec
sub
xor
cmp
mov
cmp
fimuls
stos
xchg
jnp
jecxz
out
imul
cmpsl
dec
inc
push
dec
loop
adc
dec
push
lock
outsl
cmp
aad
leave
mov
fimull
xorb
lcall
out
mov
in
popa
jl
lods
sbb
pushf
pop
jmp
cld
incb
or
test
xorb
sbb
mov
stos
jae
pop
or
ljmp
add
pop
mov
imul
sub
or
pop
out
push
es
cmp
arpl
test
xchg
push
jno
loop
mov
loop
jl
mov
jecxz
mov
in
mov
xor
jecxz
jge
pop
lcall
mov
jmp
jle
xchg
loop
mov
mov
notb
orl
adc
mov
xchg
push
and
or
in
xchg
mov
mov
popa
inc
jmp
sbb
xchg
and
das
ficoml
cli
fsubr
cmc
sub
es
dec
cmc
mov
das
repnz
mov
sbb
bound
pop
pusha
and
jg
and
out
sub
add
mov
dec
std
mov
sbb
inc
aad
xor
imulb
add
jne
pop
pop
clc
cmp
idivb
out
fstps
repz
mov
dec
movsb
pushf
xor
rcr
pop
add
sti
mov
cli
inc
fdivs
dec
cmpsl
icebp
popf
call
es
scas
sbb
ja
push
fucomi
lea
jne
lods
cmp
xor
pop
jecxz
cmp
jno
dec
or
jae
shlb
xchg
repz
lea
jo
ds
mov
lods
pop
and
lea
mov
inc
dec
pusha
je
enter
xlat
xchg
xchg
out
sarl
push
lea
inc
jo
mov
jmp
mov
ja
inc
daa
es
sti
test
inc
pop
jae
mulb
imul
mov
pusha
not
das
pop
addr16
sub
cmp
add
mov
aas
ret
lods
cmp
std
ret
mov
mov
nop
add
xor
adc
sbb
and
mov
pop
lahf
dec
jns
sarb
ret
xchg
mov
es
push
movsl
adc
adc
sub
adc
cwtl
sub
aas
pushf
lods
push
lahf
mov
dec
lret
adc
sub
lret
jmp
loop
adc
mov
js
cs
sbb
gs
adc
pop
cli
xor
xchg
test
insb
dec
sbb
lea
int
push
fistl
mov
push
add
psubsb
gs
dec
iret
fwait
mov
test
adc
mov
lret
in
xchg
movsl
cmp
xchg
jecxz
xor
inc
addr16
jne
xchg
mov
ret
dec
push
lods
dec
and
mov
mov
pop
fwait
pop
push
imul
outsb
mov
pop
lcall
sarb
rcll
insb
mov
or
cld
pop
mov
sahf
test
jb
xchg
das
fcmovnbe
xchg
leave
dec
test
mov
push
sub
hlt
mov
xor
aad
divl
gs
fwait
adc
or
daa
arpl
push
fcmovnu
push
pop
cmp
pop
les
pop
repz
mov
push
aas
popf
sub
adcl
pinsrw
or
lcall
outsb
scas
pop
ljmp
lret
lret
lcall
cmp
loop
loopne
stos
rcll
scas
xor
pop
push
cmpsl
test
and
dec
sub
movsl
js
rorl
mov
and
repnz
or
fbld
cmp
add
push
pop
imul
je
mov
adc
ljmp
lds
and
mov
lcall
xor
or
xchg
orb
and
lahf
jnp
mov
fmul
and
out
mov
cmp
xor
cmp
xor
pop
rcrb
pop
or
loopne
inc
jmp
popf
popa
aam
in
sbb
mov
cmpsb
fldt
push
out
adc
repz
fs
adc
fldcw
push
test
jo
sbbb
sub
push
icebp
sar
ds
scas
lret
mov
mov
mov
in
pop
aas
fistpl
push
push
mov
in
mov
cmp
push
fdivs
xor
in
outsb
cmp
pushf
add
test
sahf
cmp
jg
imul
cmp
sbbl
in
or
sub
imul
add
push
dec
xlat
push
xchg
mov
mov
pop
xor
push
mov
lret
lock
mov
loopne
mov
data16
subl
negb
fcmovnu
enter
inc
into
push
fstps
popa
pop
jns
test
inc
and
cmp
or
push
add
sub
cltd
ud2
cli
mov
adc
loope
mov
shlb
loopne
into
lds
aam
and
data16
jo
or
fs
addr16
cld
pop
movsb
cmp
add
lods
sbbl
or
xchg
ret
into
mov
cmpsb
lret
sbb
inc
fwait
stos
xchg
rorl
jo
push
and
xlat
loope
push
pop
data16
mov
stos
in
jae
xchg
shrl
inc
mov
test
test
sub
adc
mov
bnd
fidivrs
cmp
pop
sub
out
add
ficompl
add
pop
pusha
or
sbb
jecxz
rclb
xor
bound
pushf
call
or
xlat
xchg
loop
xchg
jo
push
jb
dec
call
add
inc
push
cmpl
pushf
movsl
mov
xor
repz
negb
and
in
push
mov
or
ds
ljmp
inc
ljmp
xor
adc
add
push
fsts
adc
test
add
jne
je
xchg
push
dec
adc
addl
cmp
jnp
push
inc
push
pop
arpl
outsl
nop
aas
inc
and
adc
mov
mov
pop
sub
mov
push
dec
and
push
fadds
and
dec
dec
mov
sbb
cmp
cmp
popl
call
lcall
fimull
std
data16
dec
adc
push
adc
inc
push
inc
mov
push
dec
lahf
setle
add
xorl
xchg
xor
out
cmovb
mov
mov
fpatan
jl
inc
mov
loope
jmp
mov
ds
mov
jle
imul
or
fidivs
jle
pop
stc
clc
lcall
test
cmp
out
adc
mov
push
jge
test
add
fcomps
sub
add
test
arpl
xchg
push
cli
lock
fiadds
popf
sub
arpl
aam
cmp
xchg
cli
push
movsl
lods
adc
dec
mov
cmp
rorl
push
sbb
sub
fstpt
es
push
je
mov
and
jbe
or
push
leave
loopne
pop
imull
fcoml
ret
mov
push
adc
pushf
and
es
adc
cmp
sbb
jns
rorl
gs
mov
mov
inc
rclb
pop
rep
sub
ret
insb
cwtl
pop
inc
push
mov
subl
push
inc
lcall
les
xor
push
pop
jge
popf
cmp
aaa
adc
push
jae
mov
cmp
incb
fs
dec
cmp
or
pop
mov
add
dec
stos
imul
or
in
shll
imul
scas
cli
int
push
or
repz
lahf
lret
movsl
sbb
adc
mov
mov
xchg
lods
or
xchg
cld
pusha
loope
dec
push
and
in
pusha
mov
and
mov
sub
inc
les
js
pop
dec
orl
mov
repnz
push
cltd
xchg
repz
jne
xor
sbb
jne
xor
cmp
cli
push
es
push
pop
test
lcall
es
jmp
or
sti
mov
dec
dec
mov
pop
ret
xor
add
ds
lea
sbb
sub
or
jnp
mov
add
xchg
add
inc
rcl
pusha
or
iret
jl
test
jns
add
add
fs
cmp
jle
jae
cli
mov
aaa
aam
xchg
js
leave
jbe
mov
mov
test
inc
or
push
sbb
or
icebp
mov
in
lret
push
inc
fbld
nop
lock
shr
and
add
lods
test
or
mov
orl
ljmp
dec
loop
pop
ja
mov
mov
xor
adc
mov
and
out
sub
mov
sahf
jl
cmp
adc
ss
pop
nop
lcall
test
int3
dec
popa
gs
int
lock
jno
in
push
mov
adc
lret
cmp
inc
jbe
mov
dec
xchg
add
mov
jg
mov
or
cli
popa
mov
into
pop
sub
push
inc
push
mov
rcrb
loop
std
push
pop
rcrb
push
fdivp
stos
mov
lods
lea
mov
dec
xchg
push
sub
int3
outsl
out
pushf
mov
dec
ds
sahf
dec
aas
arpl
or
adc
mov
xchg
xchg
and
jecxz
pop
push
and
sub
inc
out
push
addl
pop
xlat
mov
loopne
pusha
and
sub
mov
fiadds
data16
mov
jecxz
in
dec
into
xor
and
aad
xchg
push
mov
out
pop
or
jmp
imul
mov
enter
push
mov
inc
sbb
mov
in
cltd
sbb
loopne
mov
mov
lahf
popf
cmpsl
pop
add
pop
mov
ljmp
stos
ffreep
add
cwtl
inc
inc
subb
and
jbe
mov
lcall
idivl
sub
mov
data16
jne
mov
pusha
popa
mov
dec
dec
mov
push
xor
and
aaa
mov
rorb
addr16
push
and
and
mov
mov
pop
popa
fs
mov
aad
xor
jnp
inc
dec
lcall
xchg
mov
enter
mov
out
movsb
and
push
sub
loop
cmp
cltd
push
outsl
and
push
sub
inc
jae
sbbb
sahf
fstps
sbb
fmulp
repnz
into
out
xor
adc
lahf
push
pop
xor
cmpsl
int
fsubs
dec
cmp
pop
or
jle
dec
push
xor
fstpt
jmp
xor
xlat
push
test
cmp
jmp
inc
gs
ja
push
or
ja
insl
aaa
fwait
ljmp
stc
xor
xchg
lock
mov
int
pop
and
scas
sub
test
loopne
xor
sub
mov
and
mov
mov
icebp
mov
sub
and
jmp
divb
and
test
aad
pop
jmp
repnz
xchg
jne
mov
ja
jo
hlt
inc
dec
ret
cli
dec
adc
adcl
mov
dec
and
cmc
jo
push
add
pop
daa
nop
pop
xor
xchg
push
shlb
arpl
lret
mulb
or
into
in
and
hlt
dec
or
int3
mov
pushf
or
cmp
imul
sti
sbb
loopne
cmp
cmpsl
cmp
cmpsl
das
mov
in
jl
je
dec
testb
clc
imul
mov
sbb
adc
and
xlat
push
and
push
in
push
push
lea
mov
sbb
data16
lods
enter
mov
add
pop
mov
cmp
dec
imul
xor
push
stc
addr16
jecxz
das
aad
inc
imul
dec
inc
cmp
pop
popa
pop
and
ss
inc
push
lods
jnp
pop
lods
dec
push
or
int3
add
stos
in
clc
xor
sahf
xchg
in
mov
loopne
sbb
aaa
mov
xchg
call
aam
rclb
or
loop
jg
mov
pop
in
jo
mov
mov
pop
ja
jmp
push
push
pop
stc
shlb
or
rcrb
gs
in
mov
mov
sub
jle
dec
mov
jnp
sahf
push
mov
pusha
xchg
push
and
inc
repnz
jo
jle
mov
ljmp
mov
jne
add
ds
xchg
aaa
stos
je
fs
mov
lea
add
xor
jmp
inc
popf
repnz
ficoms
aas
mov
lds
pxor
sarb
std
insl
out
push
mov
roll
scas
dec
push
clc
fmul
mov
sub
sbbl
in
or
or
adc
mov
fcom
subl
je
fcoms
es
shl
rcrl
ds
out
push
cld
jg
xchg
fstpl
inc
mov
rclb
daa
push
pop
pop
dec
xchg
loopne
loope
sbb
lock
mov
out
aaa
xchg
add
mov
lahf
test
fildl
add
pop
icebp
repz
jmp
add
sub
fisubl
shl
lea
mov
mov
jae
packssdw
lods
insl
divl
in
dec
pop
into
xor
loopne
das
test
cli
dec
or
dec
push
out
sub
and
xchg
insl
inc
pop
aas
push
rcrb
sbb
rorb
lea
cs
rcrl
sub
add
out
dec
les
sbb
dec
popa
int
pop
mov
call
aas
or
jmp
and
cwtl
lock
ds
hlt
mov
and
testb
lcall
sbb
lret
mov
mov
scas
sub
adc
dec
std
ficomps
inc
stc
mov
lock
stc
cli
pop
fwait
push
inc
nop
xor
xor
dec
nop
inc
xlat
jnp
push
loope
push
cmp
adc
dec
mov
ficomps
cld
jg
enter
test
clc
bound
jle
jmp
fwait
sbb
mov
mov
subl
pop
jbe
add
mulb
xchg
pop
mov
or
test
add
jmp
cwtl
inc
je
jae
mov
cld
inc
negl
popf
xor
cmpsb
push
inc
sub
inc
cwtl
and
mov
rcll
pusha
idivb
mov
js
rclb
xbegin
insb
jno
inc
call
into
bound
jbe
sti
and
adc
inc
sub
pop
ret
sbb
into
mov
pop
test
mov
ret
lret
lret
hlt
jns
pop
dec
je
and
int
mov
das
icebp
cmpsb
fcomp
adc
push
sbb
lahf
stos
inc
jns
stos
add
gs
jnp
out
mov
out
testl
jbe
fs
daa
popa
inc
jmp
adc
cmc
out
insl
jbe
add
stos
ret
test
in
int3
std
inc
dec
fstpl
call
push
jmp
addr16
es
mov
pop
rorl
nop
rolb
gs
mov
fwait
out
adc
popa
sub
outsb
aaa
xor
xchg
xchg
iret
push
jne
js
push
adc
aad
mov
stos
popf
xchg
cld
les
es
or
push
das
insl
push
jg
or
cmp
sbb
push
push
sbb
loope
and
out
outsl
add
mov
out
movsb
push
dec
popf
in
xor
cli
mov
pop
cmp
test
outsl
mov
aad
ficoml
fstl
lods
xchg
shlb
std
adc
flds
fwait
mov
xor
pop
fistl
loopne
dec
mov
sti
fistpl
outsl
sub
and
imul
iret
loop
outsb
filds
xorl
xor
xchg
test
lods
jg
scas
scas
dec
push
jnp
push
shll
movsb
push
pop
pop
out
aam
test
mov
mov
sub
push
arpl
fs
adc
cmp
xchg
flds
mov
lds
cld
mov
cmp
mov
mov
inc
repnz
sbbb
xchg
or
std
fildl
sbb
loop
ffree
pop
sti
adc
repz
sub
insl
dec
movsl
mov
sub
sub
aas
sahf
and
sub
mov
out
pop
ret
fcomip
fidivrl
sbb
mov
ja
lock
inc
and
iret
nop
outsl
std
jg
sbbl
pop
daa
imul
push
jle
sub
add
fistps
adc
jb
mov
jns
imul
aad
jo
or
inc
xchg
aam
and
call
lds
and
int
cltd
data16
and
jp
jecxz
and
sar
popf
push
push
repnz
aas
xchg
dec
xchg
add
aaa
js
ret
lar
cld
imul
xchg
dec
pushf
dec
pop
repnz
les
mul
fildll
mov
pop
sbb
mov
lret
addl
xchg
sub
pop
sub
push
pop
mov
push
dec
xor
data16
lods
jle
mov
decb
jg
std
xor
jbe
mov
arpl
iret
pop
mov
mov
fiaddl
mov
dec
cld
pushf
xchg
xchg
sub
adc
cltd
pushf
imul
sub
std
negb
push
dec
pop
mov
fadd
out
test
mov
mov
fs
in
fldcw
in
clc
stos
scas
xor
cwtl
and
fisttps
es
arpl
dec
xor
xchg
inc
push
pop
jnp
pop
imul
sub
and
adc
cmp
mov
lret
in
pop
or
loope
inc
jb
out
mov
les
mov
test
out
js
jecxz
call
sbb
and
int
mov
das
mov
xchg
or
adc
lods
sbb
daa
xor
xor
cmp
mov
cwtl
loopne
push
pop
popa
fcoml
out
orb
jle
push
callw
fst
sbb
dec
sbb
imul
jmp
jge
or
ss
cmp
hlt
add
sbb
movsb
lods
popl
mov
lret
mov
test
mov
addb
lret
shrb
push
frstor
mov
es
pop
mov
sbb
mov
jno
movsb
mov
dec
out
push
sar
stc
mov
leave
dec
adc
bound
lds
xchg
es
dec
int
movsl
fnstenv
test
imul
fimull
pop
add
push
mov
lock
jo
lods
or
xchg
dec
rep
mov
mov
jne
fldl
mov
push
mov
std
dec
pop
sbb
cmpsb
iret
push
call
test
outsb
mov
std
mov
adc
lods
jl
fdivrs
xchg
jne
fldt
xor
mov
dec
add
popa
xchg
mov
rorb
and
dec
and
cld
les
dec
fidivl
dec
int3
jbe
scas
xchg
jmp
rclb
sbb
fwait
pop
pop
popf
shrl
adc
sub
dec
ljmp
or
ret
mov
xor
xchg
add
std
mov
pop
decl
addb
jno
adc
cmp
daa
in
push
nop
add
sub
jbe
push
add
pushf
sub
xor
fmul
jb
rolb
pusha
mov
aam
int3
inc
icebp
pop
jmp
sbb
dec
adc
idiv
dec
sbb
jecxz
gs
ret
adc
stc
test
or
sub
imul
mov
xchg
stc
mov
loopne
lcall
roll
enter
scas
stos
push
or
adc
sahf
pop
leave
incl
or
mov
push
mov
pusha
and
pushf
cmp
push
stos
pop
stc
arpl
popa
mov
jae
ror
icebp
cmp
fidivrl
pop
call
mov
pop
xchg
sti
mov
add
or
gs
cmp
xor
lret
inc
add
das
jg
mov
pushf
repnz
cwtl
jle
hlt
mov
test
inc
or
mov
jle
les
in
loopne
mov
push
fwait
inc
adc
pop
cld
loope
outsl
mov
add
iret
mov
movsl
popa
das
out
je
adc
xor
fldl
dec
xor
xchg
sbb
jo
insl
out
sbb
or
pop
push
pop
mov
jmp
scas
inc
sbb
or
or
cmp
push
arpl
or
addr16
pop
loopne
mov
loopne
push
and
rorb
insl
addb
xor
push
sub
cltd
adc
sub
loop
sub
movaps
dec
into
mov
adc
xchg
mov
or
es
mov
pop
push
push
std
shrl
repnz
bound
movsl
or
or
test
push
cld
mov
xchg
cmp
jne
jg
push
imul
push
fsubl
cwtl
xchg
cmp
into
add
adc
lret
cmp
lret
mov
cmpsl
out
pusha
mov
mov
push
les
ljmp
mov
jne
in
adc
adc
jl
mov
xor
adc
ret
push
adc
cltd
cld
fstl
testl
push
mov
pop
push
mov
mov
movsl
popf
xchg
ljmp
lds
push
and
pop
add
jmp
rol
stos
mov
fldt
mov
adcl
jle
xchg
xchg
dec
sbb
and
dec
mov
pop
sbb
mov
mov
adc
pcmpgtw
dec
adc
call
pop
cld
sti
xchg
aad
int
popf
push
cmp
rorl
or
out
xlat
cmp
je
push
adc
pop
lea
sarl
call
cmp
adc
pop
mov
pop
xchg
push
mov
hlt
and
mov
imul
cmp
pop
bound
fs
cmpsb
xor
fldt
std
popa
pushf
xchg
hlt
jecxz
lods
or
mov
dec
lcall
or
cmpsb
stos
hlt
pop
mov
sbb
daa
hlt
mov
fldz
pusha
mov
rcrl
out
mov
jnp
leave
sub
daa
stc
nop
cmc
jo
xchg
fldcw
dec
mov
mov
shll
pop
jbe
mov
mov
fwait
mov
xchg
dec
mov
insb
sbb
repnz
xor
sbb
pop
adc
lret
xor
andb
cwtl
pop
fs
imul
push
push
adc
loopne
lods
shlb
mov
fs
gs
xor
rclb
sbb
cmp
mov
test
mov
sbb
sbb
arpl
jo
mov
xor
jnp
in
and
das
clc
in
mov
mov
jnp
xor
in
mov
arpl
add
mov
insl
loopne
stc
lret
roll
dec
jo
je
mov
mov
test
insl
inc
orl
pusha
aas
aam
cmpsb
cmc
sbbl
mov
popa
adc
mov
mov
into
mov
inc
jae
xchg
push
bound
inc
xchg
fdivrp
ret
jne
rcll
mov
imul
popf
xchg
sub
mov
jb
movsb
pusha
aad
out
lea
or
fs
cmp
lds
sahf
push
dec
xchg
xor
int
mov
cltd
and
jb
pop
pop
inc
push
push
arpl
int3
sub
sbb
lret
arpl
adc
clc
xor
punpckhbw
mov
icebp
sbb
adc
test
aam
stos
sub
rol
mov
or
test
fistl
xchg
xchg
mov
sbb
mov
or
stos
cwtl
push
push
add
mov
add
clc
sub
nop
popl
int3
mov
out
sub
jge
fistl
sbb
pop
jl
lret
cmp
aas
fimuls
sbb
pop
cltd
or
outsb
push
sbbl
lods
jle
push
inc
notb
loope
adc
jl
xor
inc
mov
push
mov
cmp
jecxz
cmc
inc
mov
in
jg
sbb
inc
ds
ret
push
pop
nop
or
sub
cs
gs
jmp
int3
dec
push
in
stos
sub
pop
push
mov
jmp
jle
and
movsb
sti
push
imul
ljmp
sub
cld
nop
or
pop
cmp
bound
mov
jo
cmp
mov
xor
sub
mov
out
call
mov
out
push
lods
jo
pop
lret
mov
or
stos
imul
cmp
and
shlb
or
inc
adc
jmp
ret
push
or
jne
fmuls
pop
jns
shrb
or
mov
nop
ss
xchg
push
sbb
insb
test
sub
jge
sbb
into
push
data16
mov
call
flds
in
test
or
repz
xlat
fwait
mov
sub
hlt
scas
repz
fmull
ss
aad
xchg
mov
stos
fs
inc
js
sub
sbb
fwait
xor
out
pushf
add
leave
pop
lods
cld
inc
cmp
xor
lods
repz
fdivr
and
lds
xor
fidivs
mov
add
add
out
cmp
mov
cmp
es
jbe
fs
mov
not
xchg
fsubrs
loop
inc
out
jae
xlat
mov
lods
lock
add
stos
fcompl
mov
sbb
sti
xor
jb
pextrw
jb
pop
xor
mov
sar
imul
decb
out
loope
repz
mov
sti
cli
je
popa
cmp
mov
es
arpl
pop
inc
pop
mov
dec
scas
adc
inc
xchg
sub
inc
out
stos
fld
mov
ret
iret
mov
insl
xchg
addr16
rcrb
sub
aaa
divl
lret
dec
cli
cmp
pushf
cmp
inc
repz
pop
mov
pop
lret
sarl
cwtl
fsts
mov
test
push
andl
movsb
mov
es
call
inc
jns
mov
sarb
ss
ja
dec
rol
push
push
mov
les
idivb
cli
pushf
mov
push
gs
cmp
lea
outsb
int
or
xlat
dec
outsb
les
mov
jge
fs
push
or
ljmp
lret
add
aas
adcb
pop
insl
stc
fsts
adc
mov
outsl
dec
pop
fistps
subb
xchg
mov
lock
in
sti
ja
or
pop
repz
test
xor
ret
outsb
je
adc
scas
cmp
lock
inc
ds
js
inc
pop
pushf
fstp
xchg
mov
subl
aaa
mov
push
rcrl
xor
sti
test
rcrl
cmp
fistpll
cmp
or
add
ds
arpl
xchg
or
xadd
push
test
loope
lock
adc
jl
out
xchg
sub
stc
xchg
aas
and
and
or
jmp
test
je
scas
ret
or
inc
out
jo
ds
mov
mov
sti
xchg
and
mov
adc
arpl
pop
pop
mov
sub
jp
mov
test
loope
loop
pop
dec
sub
outsl
push
loope
push
aas
push
lods
add
and
mov
inc
push
in
repz
out
in
push
sbb
pop
pop
lea
xor
xor
adc
sbb
add
inc
xchg
es
das
das
ret
loope
cmpsl
stos
ficompl
push
or
addr16
cmp
cs
hlt
imul
sub
or
in
cs
inc
popa
mov
push
fnstsw
xchg
nop
dec
dec
ror
cmpsb
pop
or
fcom
pop
test
shrl
mov
inc
or
and
stos
aad
sbb
ljmp
adc
xor
iret
jae
adc
xor
sbb
out
repz
ja
xchg
out
mov
movsl
push
clts
sub
stc
icebp
pop
push
xchg
pusha
ret
lods
adc
ss
push
dec
pop
push
mov
sub
int
call
dec
inc
mov
pusha
dec
sarl
icebp
sti
out
or
pusha
rclb
addr16
clc
xor
lret
cs
in
clc
movsb
cs
sbb
and
mov
or
lret
sbb
ret
fwait
cld
popa
inc
test
addl
outsl
xchg
popa
pushf
cmp
fidivrl
push
les
cltd
add
cmpsb
mov
ds
sub
out
xor
cmp
shrl
imull
pusha
ds
pop
mov
push
dec
clc
cmp
jne
pop
cld
stos
dec
xchg
cwtl
rcrl
das
nop
call
pop
mov
les
sub
push
jb
adc
push
pop
xchg
inc
aaa
cmp
jbe
mov
add
sbb
cmpsb
mov
lahf
push
fiaddl
pop
push
stc
and
hlt
in
ret
jp
addb
inc
pop
out
out
andl
in
and
sub
xor
leave
mov
in
cltd
add
add
mov
pop
adc
dec
fsubrp
mov
test
call
into
mov
mov
mov
jp
cmpsb
or
cmc
scas
sbb
sub
pop
xchg
push
jl
adc
les
shrl
mov
call
data16
mov
adc
insb
ret
data16
push
pop
into
int3
push
sti
mov
lods
scas
mulb
sub
fmull
aad
out
jbe
push
cmpsb
popa
add
les
jmp
dec
jae
enter
gs
out
pop
ficomps
jmp
lds
clc
jmp
or
push
loop
jb
fdiv
dec
mov
fsubrl
adc
in
sub
xor
inc
cmpsl
popf
xor
lods
out
push
mov
xlat
jecxz
out
es
dec
or
leave
mov
inc
xchg
add
dec
dec
mov
sub
xchg
test
in
add
mulb
push
adc
inc
mov
inc
jae
cmp
test
push
xchg
fucom
cmp
subb
add
out
xchg
pop
out
or
enter
pop
ljmp
mov
cmpsb
fnstcw
in
xorl
pop
in
dec
push
pushf
mov
mov
lods
shl
test
adcl
xchg
aad
sarb
test
add
es
outsl
nop
sub
push
pop
aaa
addr16
lcall
pop
fwait
rcl
push
dec
push
sbb
jo
cmpsl
cmp
push
ret
mov
out
xor
sub
add
jg
mov
sbb
pand
push
pushf
cmc
sub
stc
pop
add
test
dec
xor
fiadds
xchg
pop
shrb
sbb
push
je
pop
dec
or
popa
push
adcb
inc
sti
stc
es
pop
cmp
push
insb
push
xor
loop
pop
test
aam
stos
push
in
lcall
outsl
xchg
or
mov
jl
or
negl
out
stc
xchg
sub
xchg
das
js
sbb
aam
std
jns
jge,pt
sub
shlb
enter
fdivrl
lds
pop
sbb
adc
jo
cmp
jg
push
in
lds
mov
ss
push
ret
sub
sbb
cmp
dec
in
lea
xor
cwtl
negb
dec
test
pushl
mov
setne
jne
sahf
jmp
xlat
lods
pop
pop
jge
stos
push
test
bnd
xchg
leave
hlt
sarb
fistpl
nop
sarl
jno
pop
mov
lret
inc
outsl
pushf
stc
mov
fidivl
es
rcr
arpl
repnz
inc
xchg
jae
and
mov
stos
sub
cmp
outsl
dec
cmp
xchg
mull
es
out
repnz
jmp
fldt
testb
arpl
xchg
mov
jmp
inc
pop
cmp
mov
call
pop
mov
addb
xor
cmpsb
sub
and
xor
and
jle
sub
cmp
aad
leave
add
rolb
pop
mov
push
sti
pusha
es
pop
sbb
jo
dec
sbb
dec
dec
push
les
in
rorb
mov
xor
fidivl
sti
adc
mov
ja
cmpsl
xchg
aaa
mov
inc
lods
repnz
fldlg2
popf
jmp
loopne
xchg
fwait
sbb
movsb
nop
sbb
call
xchg
xlat
push
or
pushf
filds
aas
aaa
lret
cli
pushf
pop
shrb
dec
in
sub
or
pmaddwd
pop
pusha
out
arpl
mov
adc
mov
scas
cld
mov
arpl
loope
daa
pop
lret
stc
add
xlat
inc
imul
jbe
push
sub
mov
in
and
add
icebp
inc
mov
jle
mov
cmp
je
push
push
add
arpl
rorb
mov
clc
jb
cmp
out
add
fbld
inc
jp
pop
mov
or
fwait
cltd
xor
inc
cli
ds
jno
jge
bound
movsl
cmpsl
loope
ja
imul
cmp
push
out
push
outsl
icebp
dec
mov
cmp
xor
jp
cld
push
adc
lret
mov
cwtl
push
cmp
adc
add
xchg
xor
sbb
lcall
jne
adc
lahf
lock
push
mov
ss
orps
xor
popa
sarl
push
sar
mov
adc
lea
adc
and
mov
divb
inc
cmp
in
ds
adc
mov
inc
mov
daa
ret
lret
inc
fs
mov
push
add
xorb
xchg
push
insb
loop
adc
fdivr
xor
inc
loope
dec
jne
dec
xchg
test
in
push
or
lahf
push
stc
das
lahf
adc
sub
mov
jmp
inc
fsubr
jb
pop
test
cmc
ficompl
mov
push
test
jns
movsb
leave
add
bound
sub
test
pop
mov
mov
inc
mov
out
iret
out
jmp
mov
jl
jge
push
push
push
add
int3
dec
mov
add
sbb
dec
dec
orl
loop
dec
enter
out
and
fistpl
pushf
aaa
lock
xchg
das
push
rcrb
mov
in
insb
movsb
pop
fcmovne
fbld
add
mov
sbb
repnz
shl
mov
pusha
int
sub
cmc
cmp
adc
mov
shr
lock
mov
ss
popa
cmpsb
and
pop
int3
xor
push
rolb
sub
mov
insl
std
stos
lds
enter
mov
adc
inc
jg
loop
in
loopne
scas
jae
inc
in
pop
out
jge
sub
rcr
insb
inc
jne
mov
sbb
add
cwtl
lret
cmpl
inc
scas
inc
push
dec
add
pusha
movsl
mov
mov
or
lds
jmp
push
add
pusha
idivl
mov
mov
ficoms
mov
outsb
lock
aam
aas
fcoml
dec
popa
or
mov
icebp
pop
js
adc
pop
dec
mov
mov
xor
jnp
mov
cltd
push
xchg
imul
popa
cld
jbe
pop
jb
mov
into
clc
xlat
lock
out
adc
adc
pop
mov
inc
dec
xor
mov
inc
rcll
adc
and
push
nop
mov
sub
das
sbb
pushf
js
std
dec
jnp
xchg
xor
rclb
inc
das
adc
mov
insl
subl
jmp
and
push
jae
push
mov
pusha
mov
outsb
mov
mov
or
inc
lock
loop
pop
pop
shrb
nop
test
mov
scas
xchg
push
sbb
mov
pop
mov
pop
mov
mov
xchg
into
inc
push
rcll
add
rcll
shl
icebp
sbb
sbb
into
mov
mov
aam
test
stc
enter
test
inc
call
sahf
mov
lcall
sarl
or
js
inc
mov
test
clc
and
cmc
addl
ljmp
xchg
mov
jl
ljmp
je
icebp
mov
aas
les
hlt
out
xchg
jns
or
mov
out
clc
cmpsl
in
popf
call
inc
add
sbb
sub
push
rorl
scas
stos
mov
sti
aam
call
rclb
ja
sarl
rclb
mov
mov
adc
pmovmskb
push
push
pusha
or
testb
and
fs
inc
sub
scas
mov
push
sbb
mov
cmp
mov
mov
or
fcmovnu
sub
add
mov
xchg
jmp
mov
arpl
mov
scas
mov
test
imul
jns
or
push
in
rolb
addr16
lds
xchg
xchg
addl
or
adc
pusha
xchg
call
aas
pop
mov
cmc
pop
push
clc
xor
or
in
inc
mov
jle
cwtl
add
mov
mov
stos
sahf
and
cmpsl
sbbl
in
int3
inc
push
cmp
rcll
fidivrs
or
mov
and
aam
jecxz
cmp
inc
adc
inc
push
push
xchg
add
ret
pusha
in
dec
iret
inc
int
repz
adc
aad
push
lret
jb
or
test
repnz
fsubrl
sbb
inc
add
addr16
mov
adc
inc
into
subb
call
mov
fs
scas
dec
jns
adc
iret
int3
into
mov
sarb
rorb
sbb
and
ja
leave
je
mov
sbb
stos
ja
cmp
inc
outsb
dec
jnp
out
xchg
cltd
jns
daa
inc
and
mov
mov
push
mov
add
cli
clc
jo
fs
dec
fmulp
or
ret
sub
and
xor
adc
icebp
in
daa
popa
sub
jg
nop
and
mov
add
jbe
cltd
pushf
test
sarl
push
push
mov
cmpb
or
iret
mov
aam
cmc
mov
out
sbb
jnp
cs
pop
mov
popf
xor
add
test
dec
ret
gs
mov
xchg
sub
in
inc
sub
mov
sub
aam
pushl
shlb
sbb
or
mov
pusha
xlat
cs
dec
leave
dec
inc
mov
ds
jmp
iret
ret
daa
pop
nop
mov
and
out
movd
cmp
notl
xchg
mov
mov
inc
lret
and
call
or
out
xor
stos
sahf
pop
push
and
popa
or
frstor
js
rol
push
pop
arpl
pop
imul
mov
shlb
adc
jo
cmpsl
cli
dec
test
imul
xor
adc
add
repz
cld
mov
jl
xchg
jp
mov
enter
jg
daa
mov
mov
inc
push
jnp
adc
pushf
mov
dec
fwait
jno
adc
inc
int3
shrb
mov
pop
or
outsb
mov
jge
cmpsl
fs
push
aam
cmpsl
sub
xchg
into
loopne
in
push
daa
xor
pcmpeqb
xchg
xchg
jb
sub
add
push
pop
dec
pop
das
fwait
out
xchg
fdivrl
mov
adc
push
notb
xchg
loope
je
in
push
push
jg
arpl
jg
adc
rcrl
jl
adcb
cmp
lods
inc
cwtl
notb
addb
push
jne
add
out
leave
push
pushf
pop
shll
cmp
subl
mov
shll
mov
shl
les
xchg
popf
pusha
fwait
cs
jbe
sbb
shlb
fnstsw
and
mov
add
mov
inc
adc
add
push
xlat
std
movsl
cmp
or
sub
lock
cld
movsl
icebp
mov
fidivs
sub
inc
mov
push
mov
into
scas
daa
dec
dec
add
xchg
in
inc
outsl
jmp
and
or
and
jecxz
test
cmp
mov
and
jns
sbb
xor
and
pop
test
jl
cwtl
mov
adc
ss
sub
int3
sub
mov
sbb
jl
sahf
push
outsb
mov
bound
pushf
repz
inc
jae
mov
and
sbb
loopne
scas
mov
xchg
jecxz
xchg
adc
mov
or
jns
xor
adc
or
bound
push
ret
cltd
and
inc
mov
scas
lahf
test
add
cmp
jg
xor
test
and
inc
mov
out
push
iret
add
mov
adc
inc
and
pop
push
dec
inc
xchg
jmp
lret
imul
popf
stos
out
or
es
sbb
hlt
xor
pop
adc
mov
enter
xchg
ficoml
bound
sub
fwait
sub
outsl
xchg
rcrb
lret
test
scas
ljmp
add
inc
push
mov
push
jnp
fwait
or
mov
roll
adc
xchg
mov
cld
insb
andb
stc
sub
in
and
push
sub
cltd
dec
inc
lea
pushf
shr
fnsave
orb
or
jne
pushf
call
inc
mov
mov
mov
aam
imul
sub
mov
inc
negl
shr
or
cld
loop
pop
push
and
push
jecxz
int3
xchg
imul
jnp
and
push
jp
imul
xor
stos
mov
fsubr
jno
and
bound
pop
xchg
cmp
lods
lcall
icebp
cmp
add
xchg
mov
xorl
pop
stc
push
mov
arpl
repnz
stc
xor
int
xchg
pusha
aas
loope
add
rorl
jno
dec
rclb
dec
jbe
insb
jp
push
dec
push
sbb
pop
and
pop
dec
ret
mov
nop
data16
and
sub
adcl
leave
stos
dec
aas
arpl
and
inc
xor
mov
cmpsl
mov
or
divl
lahf
pusha
jb
push
popf
jmp
and
sbb
dec
inc
dec
mov
outsl
bound
out
pop
xor
sub
jno
or
adcb
sti
push
sbb
mov
and
add
fwait
loopne
mov
outsl
mov
pop
pop
xchg
adc
popa
push
sub
mov
mov
xlat
cmpsl
insb
push
lea
add
add
jle
int3
adc
lret
cmp
notb
shlb
stos
aas
pushf
lea
out
jmp
push
jno
xchg
dec
push
jecxz
push
or
pusha
add
addr16
insb
cli
mov
mov
scas
sbbl
out
data16
add
xor
sbb
xorb
mov
in
inc
sbb
repnz
inc
mov
int3
sbb
push
in
mov
cmp
mov
xchg
loop
popa
mov
cmp
inc
push
mov
cs
mov
xor
add
addr16
inc
pop
push
into
push
inc
fimull
xchg
shlb
push
sti
dec
mov
cltd
and
in
je
mov
sub
std
rorl
lods
loope
jo
loopne
sub
sbb
into
dec
push
xchg
movb
xchg
push
mov
ror
test
pop
pop
xchg
jo
rorb
xchg
aas
sub
sub
in
jle
inc
mov
xchg
cmp
dec
inc
adc
jecxz
xor
cs
addl
mov
xchg
mov
aad
outsl
das
xchg
fs
xchg
bound
loope
push
dec
in
lret
add
aaa
sbbl
mov
adc
mov
cmp
sar
or
pushf
adc
add
pop
xor
cs
test
mov
sub
jle
mov
jae
repnz
and
nop
sbb
xchg
or
jg
jl
push
jno
mov
cli
pop
push
aas
ret
movsb
and
adcb
jae
and
mov
loop
rorl
cld
into
add
aaa
pop
imul
lods
cmp
call
pop
add
movsb
inc
out
lds
jmp
leave
out
inc
jg
or
negl
cs
notb
bound
xchg
pusha
stos
mov
outsb
inc
out
mov
sub
xor
je
xchg
sbb
adc
mov
jge
sub
sbb
mov
adc
out
mov
jl
jge
frstor
lods
pop
jg
outsb
pop
xchg
stos
push
xor
out
es
cs
icebp
les
test
int
mov
or
adc
stos
and
mov
lret
fwait
orb
cmp
cld
sub
lock
push
lret
fidivrl
std
mov
decl
mov
jp
cmpsl
daa
push
jg
es
mov
clc
jno
loope
enter
fwait
push
dec
mov
adc
dec
f2xm1
dec
add
cltd
test
ror
fisubrl
mov
test
sub
mov
jp
repnz
shll
push
bound
enter
sbb
mov
data16
lcall
push
xor
fidivl
outsb
add
or
std
sbb
pop
or
jae
adc
lods
push
out
enter
adc
fsubp
inc
dec
std
push
mov
inc
add
cmpsl
in
xor
shrb
pop
lods
cltd
jne
pop
mov
push
cmp
loopne
loop
verr
inc
ja
aaa
cmp
outsl
dec
testl
outsb
push
sbb
jmp
rorb
fisubrs
jno
popf
jle
mov
das
out
call
fs
pushf
push
ret
pop
aaa
mov
mov
outsb
add
push
sub
adc
mov
adc
mov
pop
ret
xchg
test
adc
push
sahf
push
fbstp
jge
repnz
and
cld
push
aaa
popf
mov
adc
cmc
mov
aas
xchg
mov
int3
jle
xchg
mov
mov
inc
ret
mov
adc
sub
pop
popf
push
ret
xlat
das
int
mov
movq
lods
mov
and
sub
or
into
lock
js
cltd
jg
jnp
xor
nop
aaa
testl
or
jecxz
push
leave
mov
xchg
cmc
add
push
call
cmpsb
gs
jnp
lods
dec
adc
fiaddl
xchg
cmpsb
imul
mov
cmc
mov
mov
push
dec
pop
adc
je
mov
das
movsl
orb
out
sub
mov
mov
sahf
sub
fisttpl
les
inc
neg
jb
bound
pop
xchg
mov
xor
push
cmp
iret
js
mov
push
xor
dec
shr
rcl
or
fwait
cmp
push
mov
cmp
adc
xor
jne
fisubl
cld
xchg
dec
xchg
outsb
popa
imul
imul
add
mov
adc
pop
mov
jb
or
cmp
and
je
je
pop
xchg
dec
ja
adc
dec
cld
sub
push
mov
mov
jnp
pop
neg
out
jecxz
or
push
adc
inc
jae
icebp
mov
xlat
mov
dec
test
and
or
cltd
pop
or
inc
aas
adc
push
imul
push
in
cmpsb
outsb
movsb
aam
ss
mulb
or
or
ficoms
popf
xlat
fucomip
mov
cmc
lahf
mov
cmc
out
aad
adc
xchg
out
aas
add
or
dec
xor
sti
cmpsl
add
mov
call
cwtl
pop
xchg
call
ljmp
dec
push
and
adc
xor
pop
push
pop
fadd
out
xor
cli
inc
aaa
mov
adcl
xchg
dec
sarb
std
mov
out
push
dec
arpl
insb
jl
mov
addr16
out
lds
sub
daa
xchg
mov
outsb
xchg
gs
je
sbb
insl
hlt
ret
jg
imul
cmp
mov
xor
sbb
push
or
lods
sbb
mov
cld
call
mov
test
cs
mov
shll
xor
stos
mov
or
adc
pop
cmp
pop
lock
mov
mov
push
xchg
outsb
xor
jp
jge
rol
pop
jo
loopne
das
je
mov
mov
mov
repz
add
fsub
jp
out
jle
adcl
pusha
push
xchg
cmpsl
inc
fs
sti
xor
hlt
push
rcl
gs
mov
mov
and
push
adc
mov
mov
or
jae
pop
stos
xchg
xchg
cli
mov
test
les
loope
leave
pop
inc
hlt
pop
addr16
roll
insb
sbb
dec
or
movsb
out
cmc
push
mov
and
dec
in
sub
sbb
jo
cmp
fwait
push
lods
add
cld
sbb
jp
dec
fisubrs
jge
inc
dec
shll
out
scas
add
std
xorl
mov
cli
pop
push
dec
add
push
out
sub
pop
push
lcall
scas
mov
dec
jb
inc
roll
fbstp
xchg
pop
cmp
mov
inc
enter
jmp
jl
and
loop
push
push
dec
popf
pop
fisttpl
xchg
jmp
fwait
jnp
negl
lret
jg
xchg
out
inc
or
fsubrs
pop
dec
scas
dec
or
lahf
dec
sbb
test
js
out
cmpsb
cmp
loopne
outsb
int3
jle
fmuls
cwtl
stos
adcl
pop
test
pop
fldl
ficoms
je
xlat
mov
out
lock
dec
pop
out
divl
std
mov
fwait
mov
dec
out
lcall
mov
push
inc
in
jecxz
aad
movsl
fistl
jp
mov
daa
mov
inc
clc
mov
into
shll
mov
xor
jno
sbb
jae
daa
push
fsubrs
faddl
int
mov
xor
ret
aad
cmp
fs
in
xchg
fs
jo
jecxz
sub
roll
loope
pop
mov
or
icebp
icebp
stc
lock
dec
incb
ret
neg
movsb
je
in
je
jmp
leave
clc
jb
repz
inc
pop
es
test
xchg
push
mul
out
scas
mov
push
ds
daa
dec
sbb
dec
aas
cmp
imul
aam
daa
sub
enter
ret
fs
pop
popa
xor
insb
adc
jno
dec
sub
adcl
cmp
hlt
adcl
push
cmp
push
pop
rorl
imul
lock
jns
mov
pop
adc
or
xchg
sub
xor
mov
in
pop
lock
wrmsr
dec
or
fwait
repnz
lahf
add
jmp
pop
mov
dec
movsb
mov
scas
insl
and
sub
cmp
rol
dec
or
mov
cwtl
and
imul
jmp
stos
mov
scas
lock
push
jge
fcomps
mov
out
ss
cwtl
les
mov
test
cmpl
rcrl
pop
int3
mov
into
sbb
lret
addl
dec
out
xor
ret
jge
sti
insb
in
aas
sub
pop
ds
jb
inc
lret
test
aaa
andl
clc
gs
dec
jae
mov
ja
push
or
lds
xchg
pop
cmc
pop
pusha
js
jmp
inc
or
sbb
pop
call
pop
stos
scas
je
popf
cmp
jnp
push
pop
and
push
push
cwtl
pop
outsl
cmc
movsl
mov
push
rolb
cmp
data16
push
cmp
inc
mov
int
ret
sbb
push
jp
and
fistps
inc
inc
xchg
jae
popf
push
cmovne
adc
adc
or
push
and
in
sub
and
pop
xchg
add
nop
imul
ja
mov
add
jmp
popa
imul
scas
mov
jg
add
out
mov
push
arpl
xchg
cmp
lcall
adc
mov
daa
mov
add
fwait
mov
sbb
outsb
sub
xor
shrl
mov
aad
cmp
imul
push
fimull
das
dec
push
jbe
jmp
icebp
stc
fsubs
mov
inc
ret
int
and
add
mov
ljmp
push
mov
mov
vshufps
push
in
lds
leave
jb
popf
lock
pop
lock
lods
fnstcw
sbbb
pop
sub
ja
leave
gs
fldlg2
and
outsb
add
ret
xor
dec
or
repz
dec
dec
pop
pushf
jp
xlat
xor
aaa
add
mov
cs
cmp
pusha
mov
push
mov
dec
or
fwait
push
sub
fisttpl
out
dec
push
movsl
fs
sub
stc
and
dec
shll
aam
mov
xlat
stos
lahf
ja
into
pop
int3
mov
call
dec
sbb
into
push
fldt
in
in
push
sahf
fstl
mov
je
int3
ss
pop
cmp
lcall
adc
scas
lock
cmpsl
aas
das
cltd
mov
scas
in
addr16
je
scas
and
xorb
push
bound
add
data16
adc
sub
sbb
jo
sub
pop
mov
push
movsb
les
sbb
jle
ja
testl
xchg
inc
and
jno
pop
jnp
adc
push
std
sub
sbb
jno
fstpl
or
push
cmpb
mov
scas
int3
push
std
mov
aas
out
xchg
push
adc
cwtl
daa
push
repnz
and
sbb
stc
add
xlat
mov
inc
add
mov
iret
maskmovq
notl
shll
roll
sub
cli
or
testl
dec
loope
or
jbe
sbb
fnsave
dec
mov
data16
inc
push
sti
scas
lds
inc
popf
sahf
in
int
push
sbb
inc
xchg
xor
xor
int3
cld
test
mov
icebp
push
iret
insl
sub
and
loope
pop
add
mov
dec
inc
cmp
scas
pop
xchg
fiaddl
inc
sbb
or
stc
rorl
mov
inc
js
cld
in
push
mov
stos
jae
aam
or
inc
scas
inc
ret
jbe
into
ret
arpl
mov
adc
out
cmp
xchg
jle
mov
das
pop
out
iret
sahf
and
test
out
js
or
push
cli
icebp
xchg
push
add
iret
orl
dec
jg
xor
inc
scas
je
pop
mov
nop
sbb
fdivp
push
imul
or
jmp
xchg
mov
pop
test
jnp
ret
pusha
andl
cmp
mov
popf
mov
jbe
std
test
adc
jp
jmp
out
leave
dec
or
xchg
pop
jno
and
push
mov
mov
mov
cmp
or
in
and
daa
xchg
mov
push
rcrb
or
mov
adc
in
rcl
data16
jge
jge
and
add
jno
add
jp
arpl
arpl
pusha
cmp
mov
lods
mov
ljmp
loopne
sbb
push
jmp
push
aad
fiaddl
fwait
out
mov
or
movsb
sub
jl
push
mov
or
out
pop
outsl
push
es
fbstp
pop
mull
insb
cmp
adc
mov
jbe
sbb
dec
mov
cmp
inc
lret
xchg
xor
addr16
das
int
cltd
cmp
mov
pop
stos
mov
addl
or
pop
adc
popf
lret
sahf
fs
push
out
fwait
inc
xor
iret
loopne
adc
add
popa
in
xchg
dec
ss
in
adc
xchg
adc
adc
repnz
stos
faddl
and
xchg
lret
mov
xchg
notb
xchg
mov
mov
adc
sbb
setne
inc
fwait
push
es
mov
sti
xor
sti
testl
inc
sub
jecxz
lcall
leave
int3
andl
shrb
add
jecxz
jb
in
cld
ret
out
out
addr16
or
lahf
mov
adc
movsb
lods
negl
aad
jmp
aam
and
imul
pop
mov
mov
mov
push
cs
cmp
inc
lahf
xor
adcl
jmp
test
fwait
inc
push
sub
je
lea
pushf
push
push
jg
andb
jb
mov
inc
data16
inc
mov
mov
test
lret
xchg
pop
jbe
ja
mov
pop
mov
cmc
push
mov
frstor
cmp
test
pslld
cmpsb
xchg
cs
jae
pop
bound
nop
sti
sub
xor
jne
mov
jne
ret
jb
cmpsb
in
mov
and
sarl
or
jecxz
jge
or
dec
cmp
fdivp
dec
loope
mov
les
mov
dec
ja
lds
loop
mov
mov
les
mov
test
outsl
adc
fisttpl
and
mov
fwait
pop
lcall
fs
push
rcr
sub
hlt
push
mov
sti
daa
mov
push
subb
sahf
ret
adc
popf
stc
mov
and
popa
mov
out
pop
aas
xor
fbstp
and
enter
fwait
mov
hlt
std
push
lock
clc
inc
ret
adc
ja
fidivl
sub
in
mul
xlat
rcrb
jbe
mov
and
test
push
shlb
or
adc
je
cmp
xor
adc
in
push
mov
jl
dec
dec
mov
inc
push
mov
das
loopne
addl
pop
fmull
xchg
out
rorl
rcrb
hlt
jnp
mov
sub
adc
lds
hlt
daa
cmc
sub
test
inc
hlt
cmpsl
jno
inc
ljmp
lock
add
pop
faddp
rorb
push
jp
int
movsl
stc
adc
ss
or
imul
push
in
pusha
inc
mov
push
loop
scas
pop
repnz
das
cltd
inc
out
test
lods
ficoml
xchg
out
in
add
sub
and
test
inc
loop
push
adc
adc
adc
mov
sub
shrl
lock
out
ficoml
mov
imul
push
addr16
cmpl
sahf
shl
repz
xchg
lcall
scas
lods
adc
fsubl
jecxz
dec
and
movsl
mov
adc
roll
push
inc
lock
stc
jo
jno
pop
pop
xchg
clc
scas
lret
test
mov
sub
and
das
call
mov
sub
push
xor
add
xor
inc
sub
or
popf
mov
mov
xor
lods
test
ficompl
lds
jle
sub
add
jp
jmp
cmc
daa
out
imul
or
and
sub
adc
ds
insb
daa
in
nop
xchg
xchg
or
sub
ljmp
pop
pushf
leave
testl
bound
pusha
mov
sbb
ret
mov
pop
sahf
cli
pop
mov
mov
lods
push
adc
mov
mov
cmp
cmc
cli
icebp
fadds
iret
ds
xchg
sahf
outsb
lahf
fistps
and
or
in
frstor
shrb
pop
mov
bnd
xchg
cmp
cmp
push
mov
jnp
sub
jmp
mov
rcll
call
inc
movsb
sub
lock
test
xchg
bndldx
cwtl
xchg
adc
inc
pop
inc
xchg
rcll
sub
jge
xlat
sahf
mov
jns
adcl
sti
cmpsl
mov
sbb
sub
insl
inc
push
lret
lds
das
mov
jbe
dec
outsb
xchg
sub
addb
bound
jg
scas
stos
mov
mov
pop
push
and
rol
fwait
fwait
inc
sub
or
divl
or
test
out
sub
iret
dec
dec
cwtl
and
mov
nop
cmp
xchg
and
cmp
dec
mov
pop
ds
mov
int3
and
lock
or
jbe
push
push
mov
or
aam
cld
std
dec
xchg
push
xchg
push
jb
adc
faddp
xchg
cltd
pop
hlt
int
mov
and
push
lds
call
inc
xorb
mov
mov
loop
xchg
cmp
mov
xchg
jl
sub
out
jb
out
cmp
adc
das
insl
xlat
pop
arpl
shlb
mov
adc
test
or
inc
ds
scas
jbe
and
aam
fldcw
orb
mov
and
fwait
push
mov
or
lahf
dec
clc
fisttpll
cld
das
adc
bound
dec
jecxz
jl
jge
or
mov
push
repnz
nop
push
push
xchg
jg
in
arpl
cmc
psubd
aam
lea
test
and
es
imul
adc
cli
xor
jecxz
mov
mov
mov
je,pt
and
mov
icebp
int3
inc
stos
fbstp
jb
sub
or
sbb
and
out
xchg
dec
cmpl
sbb
testb
loope
jg
cmp
push
jp,pt
arpl
dec
outsl
ja
mov
loopne
push
mov
mov
cltd
inc
pop
fwait
push
lcall
ss
inc
scas
lcall
mov
xchg
pop
xor
mov
icebp
cli
mulb
mull
mov
add
dec
fs
xchg
sti
sbb
mov
out
into
loope
xor
in
jne
fcmovb
test
call
pop
sbbl
cld
lret
mov
les
aas
fcompl
and
icebp
jae
insl
ret
adc
icebp
push
xor
mov
push
in
je
mov
lret
cld
out
jbe
inc
decb
xchg
push
lcall
jl
subl
pop
icebp
cvtps2pd
test
sbb
cmpsb
or
movups
rolb
push
mov
inc
adc
pop
enter
daa
lods
mov
mov
ljmp
or
adc
test
xchg
mov
fstl
mov
addl
jb
cmpsb
dec
std
sti
push
inc
dec
cmp
dec
cmc
out
pop
mov
icebp
nop
cmp
add
sbb
lods
fldt
sbb
push
rcl
testb
mov
jp
xchg
push
cmpsb
shr
sbb
icebp
movsl
in
or
pop
xor
add
push
sub
mul
test
cmp
mov
ss
inc
cmp
adc
mov
inc
push
daa
dec
mov
test
movq
sar
hlt
or
cmp
jo
adc
mov
adc
mov
scas
mov
lcall
ret
loopne
aaa
xchg
out
cwtl
popf
stos
inc
jge
mov
mov
movsb
add
cs
push
or
or
xlat
sti
xchg
push
push
xchg
and
xchg
mov
pop
add
adc
ds
mov
adc
sbb
pop
gs
les
pop
mov
mov
inc
ja
dec
push
xchg
mov
xchg
sarl
movsb
mov
fsubs
sarl
ds
mov
das
and
and
sbb
dec
mov
scas
xor
inc
mov
aaa
xchg
pushf
addl
add
or
ljmp
subl
aas
pusha
inc
call
jb
cmp
push
or
xchg
insb
pop
jne
shrl
fs
jl
xchg
lea
pop
imul
in
adc
cwtl
lea
ds
hlt
jne
jo
push
sbb
test
mov
fists
je
aas
sub
sarb
ja
mov
out
inc
fcoml
jns
cs
testl
mov
out
sbb
dec
mov
std
loope
pop
scas
rclb
or
es
mov
push
pusha
mov
jo
and
add
stos
mov
and
push
sbb
mov
scas
in
mov
sub
mov
out
pop
pop
insb
addr16
lock
ret
lock
pop
dec
add
jno
jo
push
je
sub
aam
stc
inc
and
fwait
xor
enter
out
fwait
xchg
loop
hlt
xor
push
xchg
and
push
dec
and
cmp
adc
xchg
movsb
mov
das
movsl
or
push
fidivrs
pop
sub
and
push
mov
adc
jno
aas
mov
cmpsl
push
iret
cmpsl
dec
pop
data16
je
mov
daa
nop
daa
dec
lcall
adc
sbbl
sbb
ljmp
ret
ja
fidivs
divl
mov
sub
adc
sbb
insl
enter
clc
sbb
scas
aad
push
adc
xchg
xchg
out
test
and
pop
add
or
dec
or
pop
lret
pop
mov
fwait
and
ljmp
cmc
mov
ja
dec
fsincos
jmp
jecxz
arpl
jo
mov
jl
sahf
and
sbb
adc
mov
js
adc
cwtl
clc
enter
adc
push
inc
xchg
ror
sub
insl
xchg
mov
inc
adc
movsl
mov
repnz
hlt
sbb
and
call
insb
xor
dec
or
loopne
dec
lahf
mov
rcll
jb
es
xor
push
loop
lcall
leave
inc
in
aam
mov
jg
adc
inc
loopne
subb
shl
idivb
jge
ds
fs
bound
gs
push
idiv
rcrl
xchg
mov
decb
mov
push
xchg
sbb
in
into
sub
outsb
hlt
cmpsl
je
adc
outsb
je
decl
lds
stos
adc
loope
adc
cld
push
mov
mov
nop
pop
add
pusha
ljmp
clc
xrelease
in
add
and
fucomi
idivb
jge
ret
adc
popf
cmpsl
xchg
cwtl
xor
pop
movsb
lcall
xorb
jns
inc
sahf
mov
fcom
xor
popa
push
push
test
flds
lods
dec
mov
orb
test
fcoms
jmp
iret
test
push
enter
aad
shrb
mov
xchg
mov
test
push
fldenv
test
add
xchg
cltd
enter
cmp
or
dec
in
popf
dec
fldt
cli
push
fs
insl
inc
or
and
dec
sbb
sub
mov
sub
xor
sahf
pop
mov
stos
std
data16
cmp
or
lcall
stos
or
jae
adc
lods
dec
incl
imul
inc
xor
pop
js
mov
jno
test
mov
sub
add
sar
imul
ljmp
fdivrl
or
or
push
loopne
pop
test
xchg
mov
mov
in
or
adc
cmp
cmp
and
xor
imul
dec
imul
inc
stc
sub
or
mov
lods
mov
mov
inc
xor
mov
int
out
xor
push
lds
dec
pop
jge
dec
push
data16
xchg
test
in
les
jae
loope
pushf
call
dec
jge
add
popl
and
ljmp
fs
sbb
lds
cmp
sbb
lock
mov
test
in
das
xchg
pop
adc
movsl
test
xchg
push
or
pop
xlat
add
xor
mov
int
in
clc
xor
mov
sahf
test
push
fldt
cltd
cli
test
ds
ja
sub
push
push
jne
insb
dec
push
std
js
pop
shrl
icebp
jae
jg
mov
mov
and
jnp
pop
int
push
cwtl
cmp
push
mov
sbb
xor
out
or
jae
les
sbbl
shrl
mov
cmpsb
adcb
shr
dec
cwtl
je
loop
push
xchg
jp
xchg
sub
cld
sub
mov
dec
loope
push
or
jae
mov
xchg
jge
cmp
push
adc
sar
sub
jae
shl
in
sub
out
inc
mov
mov
pop
mov
dec
mov
repnz
xor
sbb
roll
outsl
fnsave
inc
rcl
ficomps
pop
mov
ljmp
jns
fidivrl
push
jo
pop
shlb
lods
repnz
loopne
or
adcl
out
popa
cmp
sti
icebp
scas
cmpb
shrb
jle
cmp
pushf
or
dec
adc
xlat
push
or
scas
xor
movsb
xchg
int
test
pop
cmp
cli
cmpsb
outsl
das
lock
nop
iret
lahf
xchg
loopne
out
pop
cmp
jecxz
pop
movsb
push
push
push
movsl
pop
jg
xlat
orl
incl
jp
shrb
or
das
push
jp
clc
mov
push
push
incb
sarl
test
cs
mov
js
pop
out
sbb
sub
xchg
jp
movsb
mov
loope
push
in
xchg
je
push
push
ss
cmpsl
clc
addb
scas
in
sarl
cmpsl
pushf
cmpsl
fmul
sub
outsb
out
sub
mull
fs
push
push
les
push
loope
je
xchg
xor
sbb
add
into
xor
and
or
cmp
nop
es
aas
icebp
pop
std
xor
inc
mov
pop
push
pop
jp
cmp
mov
shrb
iret
out
ret
imul
stos
subl
fsubr
xlat
xor
pop
sbb
jb
or
lret
push
sbb
jecxz
push
lret
pop
je
flds
test
les
or
push
lahf
cld
mov
lahf
in
add
js
ret
lods
pop
or
cmp
mov
test
sbb
into
fsubrl
push
or
sbb
sub
ja
push
clc
pop
adc
push
adc
dec
bound
jbe
stc
mov
lcall
fwait
jns
dec
shll
push
and
lock
jae
push
sbb
or
cs
mov
cmp
test
pop
movsl
mov
in
ret
or
jmp
push
and
nop
fisubrl
in
outsb
sbb
hlt
and
je
mov
in
add
pop
stos
and
lock
bsf
xor
sub
xchg
cmp
pop
into
imul
or
dec
scas
jno
mov
jle
jne
sub
ljmp
jmp
jmp
xchg
lock
cs
ficompl
fldt
out
push
jg
and
lahf
test
sbb
int
push
mov
test
pop
cmpsb
mov
pushw
xchg
outsb
sub
cli
dec
pop
mov
mov
ljmp
ret
adc
cmp
pushf
fdivl
add
xor
sub
fildll
adc
sbb
daa
rcll
sub
or
mov
cmp
or
xchg
aas
js
or
mov
lcall
repnz
dec
jmp
cltd
sub
hlt
sub
push
ds
sbb
mov
or
ret
push
push
mov
lock
lret
push
fwait
jns
loope
cmpsb
inc
mov
aaa
pop
add
jmp
fwait
mov
pushw
inc
fwait
adc
mov
dec
insl
pop
aad
jge
sbb
pop
push
stos
notl
add
mov
xor
push
and
movsb
mov
mov
pushl
lods
xchg
mov
lods
cmp
mov
fistl
sbb
xor
ficompl
sar
clc
cli
pop
xchg
fsubrp
push
scas
and
divl
and
orl
out
pop
xchg
stos
mov
push
repnz
push
xchg
dec
and
and
frstor
inc
push
mov
push
aaa
jnp
arpl
mull
shl
insb
push
lahf
xor
adc
xor
inc
jge
inc
cmpsl
fs
cmp
fcompl
dec
notb
std
xor
lahf
ss
hlt
shl
jge
jbe
sbb
mov
push
inc
mov
shll
push
pusha
daa
scas
loope
jg
shrb
xor
popa
jbe
push
sub
iret
adc
jg
pusha
xor
pushl
and
icebp
cmp
sbb
insb
cltd
mov
not
arpl
xor
scas
into
jl
pop
js
jo
dec
in
imull
cmp
dec
aaa
ret
xor
jge
insb
notl
mov
mov
mov
insl
inc
movsb
push
les
loope
and
sub
push
and
movsb
scas
stos
stos
pop
mov
jo
fwait
outsl
fistl
push
sub
addr16
pop
in
xor
xlat
adc
pop
test
or
loope
cli
movsl
jecxz
mov
dec
shr
jo
push
in
outsb
cmpsl
imul
in
mov
shl
loopne
mov
mov
fs
mov
repnz
push
xchg
movb
call
cmp
pop
aam
std
push
pop
sbb
or
pause
adc
or
adc
gs
and
nop
jbe
lcall
adc
and
dec
mov
dec
xchg
adc
push
test
enter
pop
rorl
ljmp
add
jp
lods
xchg
dec
into
test
or
xor
adc
addl
pop
leave
pop
lahf
rcll
pop
cmc
or
sbbl
repnz
or
adc
lods
or
mov
push
addr16
push
adc
and
and
jno
xor
or
and
icebp
pop
shll
pop
sarl
pusha
lret
add
scas
fisubs
int
ljmp
vmaxss
xchg
call
leave
sbb
inc
fucomi
ljmp
repz
pusha
mov
or
dec
adc
ja
cs
je
shl
ss
lock
xor
enter
pop
or
shrb
into
jp
or
sub
int
push
mov
pop
insl
inc
jge
mov
ljmp
adc
sbb
enter
aam
gs
cmc
into
push
in
jnp
insl
cltd
fdivs
and
or
loope
data16
push
sbb
pop
mov
stc
mov
sahf
test
enter
popa
adc
rcr
mov
sbb
cmp
push
notb
shll
cmc
xchg
stos
jge
movsl
in
sbb
mov
in
fwait
lock
dec
mov
sub
jns
js
xor
mov
cmp
shlb
adc
adc
aad
mov
adc
mov
les
iret
xor
fsts
jne
xor
into
add
cltd
scas
cwtl
xchg
cmp
adc
pop
xor
add
cli
cmp
add
xor
or
jns
fwait
cmp
fidivl
pop
ja
into
icebp
addr16
mov
mov
clc
hlt
out
cld
movsb
fwait
enter
pop
decl
push
dec
pushf
mov
enter
outsl
mov
pop
icebp
fdiv
pop
imul
and
mov
mov
movsl
ds
std
add
xor
shlb
jge
testb
aam
sub
fadds
imul
adc
mov
mov
dec
xor
outsl
mov
add
in
push
jnp
sahf
pop
add
ret
sbb
std
ret
mov
mov
imul
mov
outsb
mov
fists
pop
mov
dec
mov
pop
add
xchg
fdivl
adc
mov
push
cmp
call
push
imul
stc
sahf
cld
sub
mov
fdivrl
jmp
imul
cmpsb
adc
es
add
and
in
sbb
mov
cmp
ss
pop
fsubs
xor
jmp
fstl
ja
dec
xchg
mov
repnz
xor
sbbb
addb
shlb
adc
cmp
lods
push
out
cmp
pop
addr16
add
ss
repnz
dec
insl
pop
mov
aad
or
and
sbb
jl
cmp
push
ljmp
jne
add
cli
sub
jl
jnp
xorl
add
mov
or
cmp
and
cmp
cmc
frstor
dec
in
sub
jp
dec
mov
ja
imul
test
aas
pop
push
jl
dec
sub
jmp
ljmp
xchg
sti
gs
stos
inc
lods
adc
and
jbe
lret
scas
outsb
jo
jne
lahf
pop
repz
cmp
adc
lcall
rcl
jae
push
mov
mov
sbb
cmp
popa
in
pop
icebp
cvtps2pi
push
stos
mov
in
pop
mov
fstpl
rcll
cmp
adc
daa
xor
test
sahf
pop
fwait
sbb
lret
fwait
in
sbb
push
in
in
push
out
jno
lcall
jecxz
cltd
in
ds
aam
xchg
push
mov
orb
push
pop
enter
and
mov
mov
dec
clc
call
and
jb
mov
sbb
pop
mov
gs
rcrb
ror
dec
mov
jmp
clc
push
or
cld
xorl
nop
fildll
dec
mov
addb
jo
mov
test
stc
scas
bound
jecxz
jecxz
out
fs
xor
gs
nop
jmp
jge
stos
xor
and
cli
in
nop
inc
xchg
sbb
call
stc
in
pop
sub
jns
mov
push
jmp
add
scas
and
fsts
mov
or
sbb
push
dec
jl
mulb
rclb
jg
dec
cmp
inc
sub
push
add
mov
xor
sbb
mov
push
je
push
mov
bnd
imul
out
adc
repnz
mov
cmp
out
jae
mov
ds
xchg
jmp
xchg
pushf
inc
sub
pop
lods
add
in
pushf
lods
imul
in
outsb
loope
lea
or
add
xchg
arpl
pop
or
mov
inc
jne
cltd
jle
sahf
sub
xor
jo
mov
pusha
gs
icebp
stc
push
sbb
repnz
cwtl
jp
xor
sub
lcall
fdivrp
push
push
pop
test
imul
cmp
scas
pop
ret
mov
movl
popa
sbb
decl
mov
push
adc
and
inc
mov
xchg
push
jne
aad
cmpsl
push
addr16
dec
repz
sar
fwait
out
ror
call
iret
dec
repnz
fimull
mov
dec
cld
add
lea
pop
cmc
mov
push
test
lret
shll
cmp
cmp
jp
out
pop
aad
in
fs
jmp
xchg
cs
fcoms
addl
lods
cmc
gs
add
int
cltd
mov
and
aad
clc
sahf
scas
and
mov
rcl
hlt
dec
mov
mov
loope
adc
cmp
push
fdivrl
jp
xor
roll
lret
xchg
inc
lods
pop
cwtl
outsl
repnz
scas
mov
sbb
movsb
ret
pop
xadd
rorl
push
push
imul
cld
cmp
adc
sbb
sbb
jp
dec
mov
cmp
movsb
js
push
inc
sbb
leave
mov
incb
ret
mov
pushf
mov
mov
mov
setg
rolb
xchg
test
sub
xchg
sti
jmp
adc
dec
cmp
push
adc
add
sub
dec
jp
mov
adc
xor
enter
xor
inc
test
xlat
adc
lret
gs
lcall
adc
imul
sbb
mov
imul
xor
mov
jns
repz
cli
icebp
xor
mov
test
into
idivl
sahf
sbb
cmp
mov
or
inc
sbb
lahf
xor
test
and
sbb
lret
out
adc
in
fstpt
adc
xor
fimuls
int
int
imul
stos
fdivrs
inc
loop
sbb
iret
ljmp
jne
mov
fidivrs
movsl
clc
mov
sbb
xchg
into
push
xchg
push
sahf
icebp
mov
mulb
leave
lods
outsl
jecxz
dec
add
and
mov
add
adc
in
daa
xchg
pusha
lret
imul
test
xchg
jno
pop
shlb
mov
mov
and
pop
add
in
popf
xorl
das
outsl
pop
mov
or
push
dec
sub
call
sbb
jo
jge
add
in
cmp
and
ret
aam
sahf
push
xor
imul
push
bound
xor
mov
repnz
arpl
out
mov
xchg
aaa
incb
rorb
mov
jmp
ja
sahf
mov
gs
gs
ja
pushf
loope
dec
repz
lret
mov
cmp
mov
dec
push
cmpsb
nop
enter
cmpsl
arpl
dec
decb
jmp
push
pop
lret
jb
popw
inc
jns
mov
cli
aaa
adc
dec
fwait
ret
mov
sar
pop
scas
mov
sbb
jg
dec
lods
test
test
dec
mov
xor
dec
out
fsubr
mov
push
js
in
ds
or
sub
rcrb
aas
and
ss
mov
out
test
out
jmp
in
hlt
test
dec
cmp
push
xlat
sbb
mov
ret
or
arpl
xchg
pop
sub
jge
push
test
pop
pop
roll
sub
out
imul
mov
inc
mov
mul
fst
inc
mov
sub
inc
or
and
das
xor
js
ret
dec
cmp
inc
jle
dec
addb
pushf
hlt
jns
shrb
cmp
shlb
mov
lret
adc
stos
outsl
test
cmp
dec
or
xchg
sbb
mov
jo
mov
cmp
mov
popf
xor
flds
push
lock
loopne
sub
mov
or
xchg
jle
loop
mov
mov
adc
inc
fstps
jg
fstpl
adc
adcb
imul
mov
mov
dec
call
in
add
sbb
or
xor
adc
or
push
test
push
pop
or
inc
cmp
mov
pop
xor
mov
icebp
add
bnd
es
xchg
mov
jge
ret
push
ss
imul
ds
cmp
adc
sbb
inc
lea
fwait
sub
xchg
jo
add
jl
xor
stc
imul
cmp
mov
xchg
fldenv
fldenv
rcll
xor
lret
stos
xor
adc
mov
xor
xchg
and
cli
sbb
pop
or
push
pop
mov
sub
popa
sbb
lods
jno
pusha
xor
lock
mov
sub
pop
cwtl
cmp
aam
cmpsb
lcall
movsb
sub
lds
push
dec
cld
mov
fsubrl
sub
out
sub
call
mov
les
jle
xchg
subl
jl
ret
push
sahf
repz
data16
iret
jecxz
daa
dec
testl
mov
sbb
or
adc
imul
add
scas
notl
jb
push
jl
ret
mov
in
xchg
rcl
sbb
sbb
push
pop
jecxz
pop
jo
insb
in
or
xchg
rol
jo
cs
adc
mulb
aad
push
test
mov
jns
xor
cmc
jp
xchg
stc
jae
dec
out
rorl
adc
sub
push
jecxz
scas
add
xchg
mov
lds
add
fmul
les
cmp
std
push
scas
dec
in
cmp
add
outsb
inc
cmc
push
mov
int
popa
push
xchg
imul
jg
adc
pushf
lret
imul
ds
and
or
add
sub
mov
adc
fdivrp
xchg
int3
fisubrl
dec
in
cmp
pop
sahf
sbb
dec
movsb
lret
jg
push
int
pop
psadbw
pop
jge
xchg
mov
cmp
mov
xchg
popl
inc
push
lea
sahf
fidivrl
jle
pop
xor
sbb
enter
mov
push
stos
das
mov
mov
inc
jp
xchg
test
xchg
push
adc
mov
icebp
out
mov
jle
std
xchg
out
or
sbb
inc
push
aam
test
fistpl
sbb
cld
fnsave
lock
loopne
addl
jo
mov
pop
sbb
sub
sbb
addr16
adc
cmp
hlt
xor
lcall
push
cmp
jne
in
adc
and
mov
es
fwait
xchg
stos
mov
fucomip
mov
ljmp
mov
cli
inc
outsl
shrl
xchg
push
add
adc
lcall
jne
mov
pushf
rorl
and
into
pop
inc
testl
movsb
cmpsb
add
xlat
cltd
shll
pop
push
adc
int3
inc
fldl
je
pop
sub
sbbb
push
negl
push
and
xchg
push
cmp
jl
mov
jl
mov
and
int3
pop
std
jge
jo
test
jmp
daa
jb
jae
fiadds
mov
inc
xor
loope
mov
cwtl
scas
addr16
xchg
scas
mov
int
test
mov
xor
push
sub
lock
mov
cwtl
push
and
ret
fidivrl
mov
fisubrl
sarl
test
sbb
xor
inc
movsb
sbb
mov
fisubrs
arpl
in
ss
movsl
and
push
add
cwtl
les
cli
inc
xor
jle
ja
pusha
mov
or
in
cli
mov
adc
lret
xchg
jle
mov
or
movsl
dec
jbe
mov
jns
std
add
inc
sti
jge
inc
ret
fwait
inc
shrl
pop
xorl
xor
push
scas
push
stos
jne
lahf
push
push
pop
scas
out
ds
bound
and
nop
sarb
lods
pop
movsb
sbbl
mov
or
aaa
outsb
lds
mov
mov
pop
lods
into
mov
cmp
lahf
push
mov
sbb
xchg
mov
shll
fwait
mov
mov
pop
jb
stos
insb
scas
push
jecxz
jecxz
sbb
cmp
loope
jbe
xchg
jl
push
dec
or
xor
shl
lret
inc
or
mov
andl
push
cmp
lea
push
pop
loope
jns
pop
daa
sbb
imul
add
push
pop
call
inc
mov
mov
loop
mov
popa
mov
adc
cwtl
lods
test
mov
adc
gs
jle
outsl
jmp
jmp
xchg
scas
aad
mov
int
dec
mov
stos
ljmp
push
sbb
mov
mov
xchg
inc
clc
push
mov
inc
clc
or
ja
rcrl
pop
lock
into
xchg
movsb
in
xor
lods
aas
in
xchg
mov
test
xchg
jg
test
icebp
ja
or
xchg
adc
mov
lea
daa
or
es
inc
in
pop
shll
sub
out
sbb
dec
adc
cmpsb
jnp
decl
jo
pop
fisttps
fnsave
test
mov
lret
xchg
cmp
push
jmp
scas
and
cltd
pop
pop
rol
gs
cld
xor
aaa
insl
cld
push
in
cmp
push
data16
ja
test
std
xlat
xor
xchg
cmp
cmp
push
push
inc
inc
sub
fidivrs
shl
nop
out
inc
das
ret
nop
cs
push
mov
jb
lods
pop
or
inc
jmp
adc
and
mov
test
adc
lret
lods
xlat
movsb
lock
xor
iret
xor
mov
loope
sub
adc
ja
inc
pop
mov
ss
movsb
adc
or
mov
mov
or
dec
enter
jge
jle
shl
popa
push
or
xchg
movsl
cltd
insb
sub
mov
std
push
mov
pushf
sbb
popf
and
jge
pop
mov
adc
xor
aad
jnp
sbb
lock
jmp
test
inc
les
add
pop
dec
or
xchg
pop
in
xchg
out
jbe
ds
ljmp
pop
das
adc
mov
movsbl
or
cwtl
and
jmp
and
int3
adc
lahf
dec
aaa
mov
adc
push
mov
inc
jl
loope
add
lret
leave
pop
mov
std
and
shrb
jmp
or
fnstenv
pop
add
lret
push
and
int
push
mov
repz
xor
push
mov
adcb
pop
mov
mov
xchg
fildl
lock
inc
mov
repnz
cmp
inc
and
jbe
in
in
add
outsl
dec
aam
lret
je
pop
cmc
cmp
shl
in
out
xorb
and
xor
dec
jmp
and
push
mov
ss
add
in
rorl
add
push
xchg
pop
ds
lahf
or
cmc
jge
adc
lock
jbe
aaa
es
push
pop
loop
imul
aaa
adcb
test
push
lahf
xchg
test
pop
sub
loopne
pusha
movsl
rorb
xlat
in
cmp
jne
cmp
pusha
push
call
into
loopne
jmp
rorb
jmp
imul
out
push
mov
or
sub
popf
add
test
ljmp
jns
lds
pop
shlb
in
mov
jmp
dec
mov
xchg
popa
push
sarb
sbb
inc
push
xor
jns
push
lea
nop
or
pop
dec
push
lcall
mov
aaa
sub
cmp
into
mov
loope
in
adc
out
xchg
adc
jecxz
aam
fidivrl
out
int3
test
clc
out
ds
mov
faddp
lock
int3
nop
inc
incb
mov
stc
pop
sub
pop
push
out
mov
mov
mov
sbb
std
adc
jge
xchg
sbb
enter
repnz
mov
sub
cmp
add
xchg
pop
sarl
stos
std
sbbb
stos
cmp
inc
fldcw
pop
adc
js
cltd
lret
shll
xchg
jae
jp
call
mov
sbb
rorb
clc
mov
cmp
scas
movsb
sbb
hlt
scas
jl
cltd
cmp
insl
loopne
adc
xor
in
pop
stc
das
lahf
lds
mov
shl
rcll
lea
in
cmp
fucomip
xchg
sahf
loopne
lcall
inc
call
jmp
xchg
mov
cmp
je
adc
add
pushf
xor
repnz
sub
rolb
sarl
roll
mov
dec
cmpsl
push
mov
adc
aas
call
xchg
scas
roll
sahf
fwait
cld
mov
xchg
movsl
push
sarl
hlt
jecxz
mov
cli
adc
movsl
outsl
cmpsb
imul
das
xchg
sbb
outsl
out
pop
pop
mov
in
and
push
xlat
sbb
inc
mov
lea
add
push
cmp
xor
sbb
inc
sub
sub
cmp
add
adc
dec
sub
jb
sub
and
into
or
aam
sub
and
cmc
adc
test
imul
stc
cmpl
sbb
rolb
add
dec
movsl
cld
fidivrs
mov
mov
push
ror
shr
xchg
je
or
hlt
adc
pop
or
add
fs
bound
pop
inc
jns
xlat
popf
or
push
out
pop
dec
mov
mov
std
fwait
addb
fbstp
fistpll
out
sub
lods
int
enter
inc
rol
addl
mov
insl
xor
mov
inc
sbb
xor
sbb
das
jle
cltd
add
cmpsl
pop
rol
sub
mov
adc
addl
aaa
gs
xorb
inc
xor
fiadds
aad
das
mov
in
js
cmpl
sbb
mov
out
test
scas
decl
cwtl
push
out
cs
and
cli
or
pop
fwait
or
rcrb
rcll
sub
mov
pop
cs
or
addr16
stc
adc
xchg
jnp
sbb
mov
es
mov
cmpsl
shll
pop
xor
imul
add
mov
cmp
push
arpl
clc
dec
roll
loop
xor
stc
xorl
add
or
mov
int3
jbe
push
pop
dec
call
arpl
dec
inc
jl
ja
mov
int
cmp
pop
enter
aad
in
xchg
add
adc
push
ja
inc
xchg
movsl
dec
xchg
imull
out
dec
sub
inc
arpl
lret
and
xchg
mov
into
cmpsb
dec
sub
es
xor
ja
cmp
inc
or
ljmp
into
out
test
hlt
cmp
repz
xor
movb
mov
inc
xchg
push
fwait
xchg
add
call
add
jmp
fldenv
fwait
aad
subl
movsl
pop
push
loop
jbe
push
xor
inc
push
out
stos
imul
jge
mov
mov
or
outsl
push
mov
mov
add
xor
ret
scas
or
sub
jb
dec
dec
test
pop
inc
pop
jmp
aas
fisubs
lahf
divb
push
stos
negb
outsl
into
hlt
in
loope
jecxz
repnz
push
mov
and
es
je
fstpl
xor
movsb
jo
add
aad
mov
inc
pop
in
xor
push
cmp
arpl
loope
lods
shll
sbb
jno
push
daa
js
xchg
push
iret
pop
test
mov
rcll
ja
rolb
nop
mov
push
movsb
pop
pop
adc
fcmove
dec
ret
jge,pn
orb
in
add
bound
push
xor
dec
lahf
pop
lea
loop
call
lret
sbb
cmpsb
outsl
jo
xchg
adc
popf
int
in
pushf
xchg
shll
je
xchg
cmpb
pop
sub
repnz
pop
and
icebp
fmul
sbb
mov
and
aad
outsl
pop
mul
pushf
rclb
jo
sbb
cli
mov
sbb
fisubl
xchg
cmpsl
cltd
cmp
pop
lcall
and
dec
inc
int3
xlat
pop
ret
in
shll
dec
adc
or
mov
aaa
loope
or
dec
mov
shl
mov
cmp
xchg
scas
je
jnp
pushf
or
loopne
aam
inc
outsl
fisubrs
or
sub
sub
fdivrl
jge
out
and
xchg
les
push
in
pop
jbe
pop
pop
lahf
xlat
lahf
xchg
pop
in
jne
jle
mov
scas
push
cwtl
sbb
add
imul
das
sub
dec
mov
dec
xor
mov
int
sbb
ret
mov
fdivrs
jmp
mov
js
aas
pop
jo
push
or
mov
scas
push
loope
lahf
inc
mov
aas
stc
fwait
sbb
xchg
ja
push
mov
lock
mov
es
xor
jne
dec
stos
pop
fiadds
sub
push
aam
nop
stos
pop
cltd
mov
xor
mov
nop
daa
imul
fsub
pop
and
add
adc
out
clc
mov
jnp
lds
hlt
loopne
int
imul
sub
rep
in
int3
stc
in
and
aaa
and
push
inc
and
xor
mov
xlat
mov
push
dec
jmp
lcall
insl
cli
inc
mov
and
imul
mov
pop
xor
sahf
in
repnz
or
adc
test
aam
mov
push
lahf
enter
cmp
dec
mov
jmp
les
into
test
insb
ss
push
sar
ljmp
lret
or
cwtl
daa
cmp
xor
aam
lods
push
add
pushf
mov
repnz
lock
xchg
xor
or
mov
movsb
xchg
add
in
popa
shl
xorl
ljmp
paddd
and
jmp
in
cltd
sub
and
shll
sti
inc
jns
push
negl
mov
inc
jl
inc
jbe
mov
mov
adc
adc
pushf
sbb
pop
mov
sub
shll
pop
or
outsb
in
sub
rorb
scas
cmp
sub
mov
scas
add
sbb
shl
lea
loop
dec
loopne
subb
scas
adc
iret
push
dec
fld
jmp
xchg
dec
daa
adc
aas
adc
int3
cld
arpl
adc
sbb
lea
add
popf
dec
and
repnz
add
fldt
lock
xlat
mov
sbb
pop
push
or
enter
in
pop
out
inc
sahf
jnp
jl
and
pop
xchg
imulb
aad
stc
sbb
pushf
xchg
pop
xchg
cmp
out
add
incb
mov
xchg
mov
lahf
add
popf
jno
jg
mov
ds
dec
loopne
lea
xor
ss
sbb
xor
lahf
cmc
mov
dec
xlat
adc
repz
in
sub
sub
inc
xor
fildll
push
addr16
push
fdivrl
nop
jecxz
ds
cmp
mov
add
nop
lds
sbb
adcb
shlb
add
loopne
mov
enter
inc
dec
repnz
out
jnp
daa
push
dec
push
push
add
mov
sub
mov
loopne
sbb
addb
cmp
push
sbb
fdivl
dec
rorl
cltd
push
mov
cmpsl
jae
ret
das
call
sbb
inc
and
adc
inc
icebp
fsubl
mov
push
cmpsl
xchg
pusha
mov
mov
rcrb
or
cmpsl
out
call
mov
enter
fsubp
test
mov
xchg
mov
lcall
insb
dec
insl
aad
dec
lahf
jno
lret
fstl
dec
and
imul
out
pop
xor
out
icebp
adc
lret
xchg
sahf
into
fists
push
dec
ja
push
and
bound
sub
lahf
jecxz
dec
frstor
jge
sub
push
adc
push
jecxz
push
loope
fstpl
call
cs
lods
arpl
xor
xlat
ret
and
orl
leave
mov
nop
adc
cmp
mov
jne
mov
sbb
cli
push
sbb
std
mov
stos
mov
outsb
mov
pushf
lcall
lret
lea
mov
int3
mov
adc
mov
rolb
pop
dec
adc
outsb
jg
and
lea
in
mov
add
push
cmp
add
mov
push
xchg
xor
es
movsl
je
lock
xchg
sahf
xchg
movb
jae
cmpsl
je
repz
lret
and
add
imul
jne
sbb
stc
dec
sahf
mov
inc
or
xchg
push
mov
mov
stos
cltd
movsb
sub
dec
decb
lret
gs
clc
test
push
pop
fmul
rcll
out
imul
add
lret
cmp
into
iret
loop
mov
mov
ss
or
jae
or
sub
push
jbe
ficompl
cwtl
pop
mov
test
jbe
dec
in
es
mov
stc
dec
dec
xchg
insb
pop
es
imul
ret
jno
inc
das
jg
les
mov
cmp
cld
add
or
and
outsl
xchg
inc
mov
mov
cmp
in
inc
jne
mov
dec
sbb
clc
mov
fbld
fst
dec
cmp
orb
sub
jge
push
adc
fistl
push
dec
lret
xor
in
popf
rcll
adc
je
mov
mov
mov
jbe
test
popl
mov
ljmp
add
mov
jne
jl
mov
pop
jns
out
sarl
ss
jnp
mov
test
inc
pcmpeqw
out
pop
lret
cmc
leave
mov
scas
out
fmuls
mov
data16
inc
xchg
aad
push
fbld
dec
xor
movsb
mov
loop
clc
popf
repz
cli
shll
mov
repnz
xor
mov
adc
inc
insb
imul
sub
xchg
pushf
lds
or
jecxz
cwtl
mov
inc
lahf
adc
push
jnp
jle
inc
dec
es
addl
xchg
jns
jnp
jp
ljmp
sbb
push
stc
ds
lds
and
pop
mov
and
out
and
ss
cltd
add
sbb
jbe
push
das
repz
inc
xchg
stos
fldcw
mov
cmp
xor
in
mov
rcrb
repnz
in
mov
aaa
fsubrs
enter
data16
or
scas
mov
lods
jnp
pop
jbe
pop
mov
mov
sbb
mov
int
jmp
push
lock
int3
cmp
cmp
jae
xchg
mov
and
cli
aaa
xchg
or
add
or
mov
sbb
inc
lods
cs
jno
outsb
fistpll
cmpsl
lahf
ret
push
in
test
cmpsl
cmp
xchg
jecxz
push
js
clc
jle
dec
into
lret
lods
cmpsl
sahf
leave
out
jg
movsl
enter
loopne
stc
out
int3
sbb
rcrl
ljmp
jl
or
test
out
jle
rcll
xor
push
push
out
rcrb
aam
jl
stos
es
fiadds
sub
inc
and
pop
dec
sbbl
xchg
ficoml
xor
pop
jcxz
scas
aam
mov
push
pop
test
add
fwait
push
xchg
cmp
mov
imul
add
pop
outsl
out
inc
cmp
sbb
lea
stc
fisttpl
lock
pop
out
jge
ja
cld
xchg
out
pop
jno
sbb
xchg
lods
mov
outsl
stos
sub
lcall
aam
icebp
sub
xchg
jmp
mov
mov
push
mov
pop
pushf
bound
lahf
push
push
push
jbe
sti
add
out
mov
je
fcoml
notb
icebp
dec
pop
aad
mov
pop
iret
sbb
repnz
cmp
repz
cs
and
jno
cli
cmp
imul
inc
fcoms
sti
adc
push
lahf
xor
fsubs
or
mov
and
lds
sahf
jg
in
cltd
lahf
mov
div
fisubl
cld
enter
jmp
mov
mov
in
xchg
adc
mov
dec
xor
xor
xor
jae
xchg
test
sbb
test
mov
jb
or
push
call
and
in
ljmp
mov
jne
push
lcall
xchg
sub
mov
repnz
xchg
mov
inc
jno
dec
cmpsb
pop
inc
jno
inc
xchg
lea
pop
mov
mov
in
push
lahf
mov
iret
imul
vmread
inc
in
adc
lock
aam
xchg
lret
mov
add
cmc
enter
xchg
test
inc
xchg
stos
aas
testb
lods
mov
test
sub
inc
movsl
pop
add
dec
xor
aam
push
and
ficompl
addr16
mov
xor
or
sub
xor
je
xchg
add
inc
nop
iret
sahf
shlb
fmull
mov
in
mov
dec
je
cs
mov
mov
add
cmpsl
jb
rol
imul
cmp
stc
or
xorl
xchg
cwtl
cmp
bound
lds
fwait
imul
mov
into
mov
xlat
xchg
mov
movsl
jo
jp
jle
dec
add
adc
test
push
push
ja
imul
pop
movsb
ja
outsl
imul
dec
data16
mov
fcomp
dec
pusha
and
xor
test
rorb
mov
lods
mov
hlt
fcmovbe
mov
and
pop
pop
dec
dec
std
out
ret
sbb
mov
lods
addr16
mov
rclb
jmp
add
sub
sahf
int
inc
push
cs
adc
mov
or
or
roll
fsubrl
fisttpl
xchg
jae
adc
inc
lahf
sbb
adc
sbbl
bound
ret
sbb
fnsave
sbb
jb
rorl
lret
sub
rcr
sub
or
mov
cld
popf
push
push
xchg
mov
jge
out
jp
xchg
adc
sahf
repz
or
cmc
dec
push
fcmovnb
out
pop
in
ljmp
push
jbe
jo
add
sbb
mov
insb
add
test
xor
add
out
push
sub
stos
aas
fbld
fldcw
test
cmc
jns
xchg
sbb
test
std
mov
push
xchg
jae
mov
out
jecxz
daa
sub
pavgb
roll
ja
cltd
fdivs
xchg
add
mov
xchg
dec
push
cmpsl
mov
addr16
int
hlt
fidivrs
mov
imul
cmc
xchg
pop
decb
sub
adc
jb
inc
sahf
out
std
mov
test
pop
pop
fisubs
lods
sbb
and
sti
cs
mov
cli
rcrb
add
pop
gs
subb
in
pop
sahf
loop
sbb
inc
xchg
jbe
lods
sub
adc
adc
dec
in
push
insl
cltd
sbb
pop
xchg
dec
push
fists
fcmovb
pushf
mov
adc
push
lock
cmp
lahf
mov
adc
adc
sbb
sbb
and
lds
mov
xchg
sub
jle
aad
fdivrl
ret
jmp
das
mov
lret
xchg
adc
into
lret
and
sub
and
sahf
lcall
pop
jbe
lcall
mov
enter
ja
xchg
out
push
mov
jb
out
dec
dec
jae
ret
ret
mov
xchg
clc
bound
mov
stos
cmp
push
cmp
fmull
or
sbb
jbe
mov
push
hlt
lds
push
fstpt
xchg
push
in
push
inc
loop
stos
jae
les
ds
shll
shlb
push
pushf
test
loop
imul
data16
adc
cmpl
jle
xchg
add
add
adc
push
push
xchg
sahf
lret
mov
testl
xchg
and
lcall
imul
mov
repz
cli
imul
cmpsl
xlat
xlat
sub
sub
cmp
stos
add
add
cld
cs
call
out
jecxz
data16
xlat
xchg
idivb
ljmp
jb
inc
add
das
or
daa
cltd
xchg
pop
fcom
fstpl
loop
roll
fmull
test
rcrb
out
push
popf
sub
sti
out
mov
mov
shrl
push
aas
push
js
stos
aaa
sbb
pop
stos
and
icebp
jl
mov
sti
dec
in
xchg
pusha
out
aaa
and
xchg
in
xchg
jge
mov
add
addr16
lods
push
pop
jle
repnz
stos
dec
hlt
adc
ss
in
or
mov
les
clc
and
cmpsl
flds
sub
push
call
sti
adc
add
cmp
pusha
cmp
and
sbb
mov
inc
xor
rolb
subl
pop
jp
jl
sub
test
lahf
sti
addr16
imul
mov
int
stos
cmp
fcomps
cs
pop
adc
adc
mov
and
out
icebp
rcrb
lea
data16
repnz
adcb
fimull
push
in
mov
es
adc
out
push
fsubr
sub
cwtl
add
push
sub
lret
adc
aaa
and
mov
cli
dec
rorl
pop
fsts
jnp
in
int3
mov
xchg
lea
lds
xor
mov
lahf
mov
push
push
sbb
fists
adc
out
sbb
fistps
mov
cmp
ss
and
pop
cld
xor
nop
mov
shr
hlt
pop
fisubrs
jge
sub
notl
adc
hlt
dec
xchg
lods
outsb
dec
mov
jbe
lret
dec
dec
imul
rolb
repnz
dec
pop
mov
fs
or
adc
or
and
shll
pop
fwait
or
fstl
sub
cli
cmc
sahf
push
dec
or
mov
cmpb
jb
cmp
mov
jl
or
insb
cmpsb
lret
lahf
push
jne
add
xchg
aam
xor
xlat
jae
inc
jl
fsubp
jg
mov
adc
mov
add
push
sub
cld
aam
fildll
ljmp
jmp
jno
lret
cmp
pop
mov
inc
push
test
dec
pop
jl
and
mov
mov
push
lods
out
ljmp
push
roll
test
add
inc
jns
inc
nop
pop
hlt
fwait
hlt
nop
cltd
jne
loop
dec
xchg
or
pop
mov
sbb
xor
fisubl
outsl
jo
pop
lods
push
mov
mov
xchg
test
mov
xor
push
pmulhw
call
repnz
gs
fdivs
adc
popf
mov
and
push
cld
scas
ja
cmp
pusha
popa
pushf
nop
add
push
sbb
outsb
into
and
sbb
movsl
scas
xchg
addb
mov
icebp
inc
inc
dec
inc
test
xor
and
cmc
inc
mov
test
lods
gs
sbb
outsb
pop
fsubr
inc
sbb
pop
mov
ds
lcall
mov
xor
cmp
out
cli
in
outsb
js
mov
push
and
xor
sbb
push
shll
sub
pushf
rolb
pop
cltd
in
fwait
jge
cmp
lret
push
hlt
clc
adcb
fisubrl
iret
or
cld
xor
jne
jle
push
add
sbb
push
clc
je
lds
pop
push
cltd
and
mov
xor
jae
push
push
sahf
push
dec
pusha
add
add
cmp
inc
cltd
add
mov
stos
push
push
outsb
test
loop
lods
aad
sub
jae
scas
lret
dec
sub
xor
data16
and
imulb
ret
scas
fbstp
vfnmaddpd
js
adc
pop
mov
pop
jne
lods
adc
or
dec
mov
cld
in
sbbb
pop
fnstenv
imulb
into
sti
xchg
cmp
xchg
rclb
les
sbb
enter
dec
jnp
insb
sub
sbb
fwait
cmpl
xchg
mov
aas
daa
mov
repnz
out
mov
jmp
lahf
xchg
xchg
loopne
hlt
inc
push
aas
das
push
adc
or
xchg
loope
add
scas
mov
pusha
nop
pop
dec
bnd
iret
mov
dec
adc
add
or
adc
mov
divb
test
or
test
sub
lods
repz
pop
xchg
dec
fstpt
sarb
cmp
inc
and
cmp
es
cwtl
orl
jecxz
adc
cmp
je
ds
add
out
arpl
mov
repnz
inc
sarl
lods
into
in
cmp
ret
inc
dec
inc
lret
pop
cmc
arpl
push
mov
jl
push
call
pop
rclb
test
nop
mov
sub
xchg
xorb
jl
mov
pusha
repz
out
imulb
mov
xor
filds
jmp
mov
decb
in
std
test
pop
xorl
sbb
pop
divl
dec
pop
out
in
jle
xor
inc
lods
nop
bound
inc
xchg
in
xor
inc
sbb
fcompl
push
adc
pop
mov
pop
in
pop
test
fidivl
pop
fwait
mov
mov
fcoms
dec
inc
jge
xchg
jecxz
and
push
mov
mov
push
xchg
test
push
out
loope
push
je
sarl
jge
idiv
cmpsb
mov
sub
add
icebp
push
inc
mov
add
stc
lods
xorb
and
sbb
repnz
sub
inc
out
enter
stc
movsb
fmull
push
lret
in
mov
adc
xorl
or
sbb
clc
arpl
addb
or
pop
enter
icebp
loopne
push
adc
inc
test
adc
into
loop
sbb
jo
dec
insb
cmc
mov
stos
push
testb
sti
push
gs
dec
or
and
mov
sub
test
dec
mov
fwait
inc
and
ss
ret
sarl
xor
push
lret
lea
inc
addl
je
pop
sti
sub
push
fisubrs
outsb
dec
push
or
xlat
sub
or
pop
ret
in
test
pop
addr16
sti
loopne
or
lret
imul
mov
sbb
and
movsl
lea
push
or
out
xchg
push
dec
test
xchg
scas
jne
dec
loop
push
sub
out
push
adc
mov
imul
shlb
or
aas
sub
aaa
adc
cmc
mov
mov
mov
fs
jbe
mov
add
adc
or
xchg
add
add
test
das
adc
and
inc
push
lock
push
jo
mov
ljmp
fnsave
pop
aam
jne
push
in
ret
movsb
fcompl
xor
dec
in
inc
and
mov
std
mov
imul
or
lods
and
call
aas
sbb
jb
loope
aam
jne
popf
push
outsb
xchg
add
xor
gs
or
loopne
cmpsb
adc
sahf
sbb
mov
in
je
cs
jmp
and
fmull
fs
mov
lret
push
mov
inc
lcall
and
and
mov
mov
fldlg2
movsl
add
int
cmp
xchg
sti
lcall
and
jno
sbb
test
dec
adc
mov
mov
test
stos
sbb
inc
divb
ja
sbb
enter
negb
insl
sbb
xchg
test
fst
dec
mulb
sub
mov
in
push
test
cmpl
or
data16
mov
xor
push
cld
push
fucom
into
dec
pop
in
jp
pop
add
adc
push
ficomps
mov
mov
cmp
leave
inc
shlb
rcrl
je
add
add
insl
sub
mov
push
pop
dec
jns
xor
xor
aad
push
xor
fsubrl
mov
aad
mov
pop
xor
xor
jnp
pop
clc
cli
push
movsl
cwtl
add
mov
aam
lods
mov
ja
mov
into
mov
mov
pop
stos
push
lret
mov
mov
mov
test
or
scas
stos
cmpsb
pop
push
sahf
jmp
outsb
pop
out
adc
scas
incl
push
jmp
cmc
pop
call
jno
loopne
push
or
pusha
ret
xor
ret
scas
push
outsl
out
dec
push
or
mov
pop
jg
fisubrl
mov
mov
mov
jo
nop
cmp
cmp
clc
push
or
lods
add
xbegin
jmp
daa
cmp
int
stos
push
add
fsubrs
repnz
xor
cltd
pop
jmp
dec
cmp
or
mov
pop
push
lock
pop
fcomip
int
testl
mov
stos
pop
and
fnstcw
sbbb
movsb
popa
data16
and
call
push
outsl
jno
js
push
aas
call
scas
rorl
jecxz
decb
in
push
mov
xchg
dec
repz
leave
pop
dec
out
cli
cmp
sahf
movsb
and
sbb
xchg
jnp
jo
add
std
pop
add
pop
mov
push
xchg
into
xor
popa
ret
outsl
adc
mov
test
dec
das
and
mov
or
insb
inc
test
test
mov
arpl
and
int3
adc
cmp
mov
and
mov
jecxz
mov
push
aam
rcl
ljmp
sti
mov
dec
fsubrs
or
in
gs
xchg
aam
out
lea
inc
add
mov
scas
mov
adc
dec
fidivl
imul
cmc
cmp
or
cmp
cs
jge
inc
mov
stos
sahf
ret
enter
fstps
push
fmull
mov
fsubrp
pop
inc
add
inc
push
cs
and
sti
imul
test
sbb
mov
stc
cmp
dec
sahf
js
mov
aas
dec
add
stc
mov
mov
enter
cmpsb
clc
js
ret
push
fwait
xchg
mov
jl
rorb
out
xchg
enter
and
and
adc
and
mov
lcall
and
push
push
pusha
push
mov
inc
jnp
mov
loope
rclb
cmp
test
nopl
xor
dec
or
pusha
xchg
cmp
jno
or
leave
imul
mov
cltd
xor
idivb
out
cmp
cld
andb
test
cmc
sub
inc
std
or
data16
xchg
loope
insb
jmp
sbb
inc
dec
ror
pop
cmc
jle
jge
fsubl
sbb
loope
test
xor
cmpsl
bound
add
push
idiv
repnz
xor
cmpb
sub
shlb
scas
inc
jb
popf
fidivrs
cmc
out
dec
nop
fldpi
mov
fnstenv
mov
cld
out
insl
lods
stos
mov
sbb
xchg
les
add
adc
rorb
cmp
in
jmp
cmp
xor
vpmulhw
xor
mov
shlb
test
mov
cmp
adcl
mov
add
mov
lcall
push
mov
inc
pop
sub
xchg
scas
sahf
out
jp
dec
imul
pop
movsl
in
icebp
lock
cmc
adc
push
imul
sbb
dec
jne
insl
push
sub
cmpsl
popa
pop
call
aas
jo
jnp
adc
lahf
push
push
pop
mov
scas
xchg
shrl
mov
pop
xorb
or
add
mov
stos
pop
cmp
jmp
jne
mov
mov
enter
ret
sbb
jb
mov
jl
rcrl
jns
xchg
dec
in
push
pop
add
adc
ficoml
rol
adc
mov
mov
int3
push
inc
jl
dec
adc
inc
or
or
push
add
and
scas
divl
movsb
push
out
xchg
addr16
xor
lds
clc
call
and
jecxz
cli
adc
push
cmpsb
das
test
dec
mov
xchg
mov
in
xchg
or
bound
fidivl
orl
mov
xchg
sub
in
andl
add
out
adc
lods
add
dec
cmpsl
aaa
add
gs
push
push
fsubrs
repnz
insl
out
sbb
mov
jb
xor
dec
test
dec
popf
and
dec
ficomps
clc
imul
jnp
push
icebp
adc
sbb
mov
out
cmp
movsb
out
bswap
loope
lds
xchg
cmp
xchg
popf
loope
add
jnp
inc
add
jl
push
pusha
aam
add
adc
loope
sub
cld
xchg
das
jnp
and
clc
cld
jle
mov
xchg
pop
sub
push
movsb
test
push
cmp
dec
jg
daa
sub
push
xlat
push
jge
fwait
xlat
cmpsb
dec
out
fisttpl
xor
jecxz
adc
inc
int
mov
pop
fimull
icebp
je
fdivrl
mov
pusha
out
lea
push
push
loope
fld
cmp
fdivp
jo
mov
xchg
inc
mov
test
jno
jg
xchg
pop
mov
and
sbb
mov
push
lods
aaa
push
pushf
lds
pop
cmpsl
jb,pn
lods
scas
shll
inc
nop
mov
jo
add
lret
divl
pop
fidivrs
std
loop
clc
xor
sti
dec
mov
push
arpl
inc
jecxz
faddl
pop
aaa
ljmp
push
jge
cltd
sti
pop
jmp
fdivl
jmp
ret
xchg
adc
push
es
mov
or
pop
fcoms
fbstp
xlat
jle
in
dec
cmc
loop
les
adc
int3
jmp
test
subl
adc
push
sti
fadd
pop
aam
ret
pop
or
imul
adcl
shll
out
fwait
testl
mov
pop
test
out
sbb
lret
lret
cwtl
andl
push
mov
xchg
fs
and
call
jge
push
leave
inc
pop
jg
mov
mov
mov
mov
or
jp
jl
xor
mov
rclb
lods
je
xlat
cwtl
mov
mov
push
lahf
pop
cmp
cmp
push
lahf
repz
aas
pop
stos
jno
out
jae
lods
pushl
sbb
xlat
add
not
sub
cmp
inc
dec
orl
lea
repnz
fsubrl
inc
lcall
pop
insl
ljmp
jno
xor
in
idivb
scas
repnz
sbb
inc
pop
pop
in
lods
pushf
mov
aam
mov
mov
loop
icebp
xor
add
ficomps
dec
and
shr
std
mov
rep
pop
mov
lea
cmp
sbb
cmp
ret
pop
sbb
lret
outsb
mov
hlt
push
cmpsl
dec
ja
push
aaa
add
push
pop
out
xchg
iret
cs
mov
pop
or
in
dec
sti
pop
mov
push
fsubl
jb
push
jmp
mov
nop
inc
cmpsl
std
daa
mov
test
test
hlt
loopne
xor
in
xor
ja
and
ss
lret
ret
int
cli
sahf
or
imul
jb
push
movsl
lret
xchg
imul
fistl
repz
je
int
iret
notl
punpckhwd
stc
fnsave
rclb
cwtl
cli
out
pop
mov
mov
arpl
adc
maxps
push
test
mov
jo
xor
fwait
or
outsb
hlt
jmp
repz
stc
dec
dec
push
outsl
testl
lret
or
adc
mov
adc
out
sahf
or
insl
cmpb
test
test
aas
inc
imul
xor
loop
cmp
inc
inc
je
call
ja
ds
test
and
je
jnp
aam
scas
sub
insl
clc
mov
das
test
inc
fld
into
sbb
cmp
inc
add
mov
mov
xchg
pop
jbe
insl
pop
and
adc
ljmp
push
or
test
popf
mov
mov
adc
ss
movsb
cld
ds
inc
xchg
js
pop
jne
xor
arpl
idiv
add
cmp
add
inc
cmp
sbb
fadds
fdivr
shl
movaps
inc
je
addb
inc
jge
cltd
fwait
loopne
imul
adc
xor
adc
jnp
mov
dec
dec
ret
add
xchg
pop
loopne
hlt
sub
mov
aas
add
cmpb
subb
jb
jge
jnp,pt
iret
push
movl
xor
test
mov
ss
lret
mov
sub
adc
sahf
pop
push
cmc
push
repnz
pop
mov
out
xchg
push
clc
repnz
jb
insl
lods
pop
bound
gs
leave
pop
mov
jae
adc
mov
or
push
mov
push
js
negl
and
cmp
dec
call
inc
icebp
pop
push
enter
loope
jp
sbb
sub
nop
mov
pop
test
sbb
and
pushl
push
jbe
mov
shl
mov
cwtl
add
outsb
push
push
push
jbe
jge
roll
mov
pop
sbb
icebp
jle
fisttps
xchg
or
mov
ljmp
jo
fisubl
rolb
xor
in
sbb
cld
sub
cmp
xchg
mov
mov
pop
mov
pusha
mov
test
sub
xchg
xchg
cli
mov
pshufw
loope
xor
ja
lds
fsubs
push
adc
ficoms
aam
pop
fwait
add
xchg
leave
push
jo
andl
jmp
leave
inc
je
shlb
add
pop
dec
add
fiaddl
sbb
shr
mov
test
mov
adc
scas
jle
popa
jae
ret
addr16
int
dec
xor
adc
call
sbb
and
in
nop
mov
testl
sbb
out
pusha
push
aam
out
lcall
xor
xchg
dec
xor
jmp
sub
divl
test
xchg
pushf
out
cld
lret
aas
sarl
sbb
test
dec
rcl
mov
pop
push
jg
xor
daa
dec
in
lds
mov
int
push
cltd
or
jmp
fbstp
sbb
pop
pop
cwtl
cmp
push
sti
cld
inc
push
and
mov
std
adc
int3
scas
mov
mov
loope
mov
push
pop
stos
sub
push
jns
pop
je
cmp
ss
sub
and
pop
in
cmp
inc
xor
fildll
xcrypt-ofb
cmpsl
sub
mov
daa
ret
dec
out
and
push
gs
xor
je
jb
and
lods
stc
adc
cmp
jmp
in
push
arpl
sbb
test
ljmp
inc
adc
pop
push
popa
inc
incl
out
les
cmp
int
jo
movsl
xlat
adcl
lahf
adc
push
jnp
mov
cmp
lods
daa
incl
jns
mov
jmp
jmp
or
fcoml
bound
or
push
pop
sahf
out
pop
xchg
aam
bound
imul
or
mov
int
js
iret
rcl
inc
shll
mov
add
jmp
mov
imul
pop
sbb
ja
mov
mov
push
push
adc
test
dec
mov
pop
ffreep
or
mov
cmp
scas
push
cld
cli
add
xor
rolb
xchg
sbb
shll
ja
add
lret
add
leave
cld
fdivl
add
sarb
addr16
lret
out
push
xchg
orb
repz
dec
test
clc
lods
adc
shlb
cmc
jle
sub
fnstcw
and
push
dec
loop
dec
mov
les
outsb
mov
mov
xchg
cmp
out
mov
popf
pop
das
arpl
repz
adc
pop
lods
sub
cwtl
aam
pop
loope
in
inc
push
sub
dec
push
addr16
adc
loop
orl
jno
push
jmp
cltd
sub
invd
mov
push
test
mov
arpl
addr16
lahf
test
adc
fnop
imul
push
lods
jbe
mov
add
inc
mov
xor
and
xlat
mov
cmp
gs
cmc
rorl
adc
std
insb
test
jae
icebp
pop
and
lea
inc
cmp
inc
into
push
mov
lods
sub
aas
rcr
loope
mov
mov
test
mov
fs
dec
xchg
or
mov
push
rorl
xchg
xor
aas
imul
nop
sub
sub
rcl
cmp
inc
sbb
dec
andl
negl
aam
dec
pop
cld
dec
dec
arpl
sbb
sub
push
mov
add
idivl
xor
mov
inc
repz
adc
divb
adc
js
add
cli
imul
push
xchg
xchg
xchg
aad
jp
jp
push
fsubrl
adc
popa
adc
hlt
arpl
js
scas
pop
mov
js
je
mov
aam
js
outsl
in
scas
les
fistpll
cli
cmp
lret
xchg
out
lock
sub
fwait
add
cwtl
cwtl
loopne
sbb
mov
adc
xchg
mov
pop
push
in
push
loopne
orb
mov
test
xor
dec
int3
popf
sub
xchg
int
es
gs
pop
int
adc
scas
lds
gs
mov
outsl
aaa
adc
std
daa
repnz
push
shr
xor
jp
ja
mov
fnsave
in
cmp
pop
fwait
xor
adc
cmpsb
adc
add
mov
jb
es
hlt
jl
popf
rcrb
dec
or
mov
sub
std
add
clc
cld
mov
lock
scas
mov
xor
outsl
adc
push
xchg
mov
jne
insl
mov
mov
into
dec
popf
sub
xchg
inc
js
jge
aas
popa
mov
mov
std
mov
ja
ret
fdivl
mov
xor
cmp
test
test
xor
out
aas
fistps
loopne
add
xor
subl
jmp
mov
test
in
pop
aad
jo
movsb
pop
jle
aas
mov
les
jnp
data16
mov
inc
mov
ret
aad
xchg
push
cmp
add
popa
adc
sub
mov
dec
rol
inc
jge
add
aas
call
push
sub
imul
subb
rcl
push
pop
js
jmp
mov
stc
arpl
jmp
mov
pop
adc
xor
test
xchg
mov
push
pop
push
sub
imul
int
jge
push
mov
pop
popf
testl
jecxz
addr16
sub
inc
jno
lds
repnz
push
lds
fxch
orb
dec
mov
or
mov
xor
dec
imul
neg
inc
mov
sbb
call
add
pop
mov
flds
push
lods
jmp
js
loope
add
sub
mov
xchg
ret
scas
push
push
mov
adc
icebp
fsubs
jno
mov
inc
add
popf
sbb
loope
std
push
test
and
adc
add
mov
repz
cltd
mov
xor
xlat
xchg
xchg
adc
shlb
repnz
pop
addr16
mov
in
std
push
hlt
adc
mov
aaa
xor
inc
dec
push
jmp
lahf
and
scas
xor
push
ss
push
popl
pushf
popf
sbb
ret
outsl
cmpsl
rorb
loopne
jge
outsl
int3
mov
inc
push
ss
mov
mov
out
fbld
mov
test
iret
nop
xchg
popa
cld
dec
add
cwtl
aaa
cmp
mov
xor
lds
mov
mov
or
adc
test
rclb
insb
clc
repnz
and
jg
inc
or
negb
or
out
out
pop
lods
push
inc
insb
rcrb
jl
cmpsb
jecxz
inc
lds
test
or
push
xchg
popf
loopne
and
mov
pop
push
or
fst
cmp
repz
jle
inc
rcrb
add
dec
lcall
inc
loopne
call
inc
add
add
push
stc
inc
and
ds
jge
xchg
movsb
add
mov
xor
rol
loope
pop
pop
add
sahf
and
adc
push
jns
js
fimuls
xchg
sub
xor
inc
out
test
out
xor
mov
out
in
cmpsb
push
xchg
in
enter
adc
ja
cmp
inc
cmp
sub
loopne
inc
xor
inc
testl
pop
aaa
dec
sub
fisttps
imul
das
popf
icebp
and
jb
mov
rcrl
push
shlb
test
addr16
xchg
jno
jp
mov
jno
mov
add
jge
xor
dec
inc
cwtl
xor
loopne
mov
fsubl
adc
in
adc
and
mov
insl
mov
cli
xchg
mov
lret
dec
shrb
push
hlt
or
sub
jp
out
sahf
and
lret
lods
add
das
outsl
jg
cmp
insl
test
data16
mov
xlat
data16
mov
sub
adc
xor
sbb
outsl
sar
add
push
xor
insb
add
lahf
push
inc
push
cmp
je
xor
sub
dec
je
outsl
pop
popa
sbb
pop
pop
mov
and
push
xchg
addl
rcll
fmull
test
jmp
adc
xor
mov
mov
out
cli
xor
inc
pop
mov
inc
mov
pop
adc
mov
xchg
pop
adc
dec
ljmp
mov
mov
hlt
push
pop
rcrl
mov
pushf
in
or
shrl
iret
xchg
sbb
ss
pop
pop
filds
std
cmp
sub
adc
mov
dec
popa
mov
push
lret
andb
sub
outsb
addr16
inc
rorb
jmp
mov
and
aaa
repz
pop
popa
mov
enter
sub
jno
pop
loop
xchg
shll
jb
sub
aaa
xor
loope
sahf
and
dec
les
xor
and
mov
inc
daa
pop
jmp
sahf
cwtl
dec
jg
mov
or
dec
push
or
sbb
in
mov
popf
cs
testl
enter
xchg
bound
xchg
mov
outsb
imul
cmpsb
test
sub
jo
xor
push
pop
cmpsl
popa
into
popf
movsl
mov
je
push
imul
sub
incb
addr16
mov
roll
out
fldl
pinsrw
dec
je
idivb
xchg
ja
xchg
cld
xchg
push
lea
jae
gs
cmpsl
dec
aas
sbb
and
fisubs
adc
dec
jb
sbb
imul
xchg
into
sbb
and
mov
push
cltd
dec
movsb
dec
std
int
inc
loope
insb
lahf
mov
pop
test
jl
mov
pop
sbb
cmp
sti
mov
jle
pop
out
jp
lsl
lcall
daa
sbb
jmp
or
xor
mov
jle
stc
aam
push
mov
mul
in
scas
dec
sbb
iret
outsl
cmp
out
pushf
push
fwait
fwait
adc
inc
out
adc
in
loopne
jmp
push
xor
test
xchg
rcr
sti
inc
iret
js
dec
loop
pop
xor
shlb
fldcw
xchg
imul
jmp
jp
cli
into
bound
xlat
add
jle
xchg
mov
dec
ljmp
outsb
add
movsb
fbld
xor
fs
add
stos
daa
sub
adc
mov
add
out
out
or
pop
fwait
mov
push
xchg
aaa
or
and
aas
leave
fnstenv
adcb
sarb
inc
pop
sti
mov
movsl
sbb
jns
or
xchg
xor
and
test
subl
ss
sahf
dec
adc
inc
adc
or
mov
data16
sbb
std
push
jno
test
sub
sbb
dec
jbe
in
or
imul
out
ss
shlb
jle
adc
cwtl
jecxz
dec
loope
dec
mov
adc
push
mov
jne
xchg
xor
lock
fistps
xchg
rcrl
adc
dec
xlat
test
mov
js
cmp
push
daa
xchg
rcrb
aas
xlat
int3
xchg
xchg
stos
pop
inc
ror
sbb
test
xor
mov
jecxz
sti
aad
add
inc
stos
mov
mov
sub
and
icebp
push
lods
loop
ret
ret
mov
and
jo
cmp
or
xchg
fs
imull
pop
add
rcl
or
frstor
dec
mov
lcall
fiaddl
das
stos
out
xor
push
xchg
xor
sbb
adc
int
lret
and
xchg
pushf
movsb
stos
popf
xchg
or
movsl
call
adc
lea
into
mov
into
fsubrs
pop
sar
scas
xlat
pop
mov
aam
in
jecxz
lret
pushf
aad
mov
mov
das
insl
push
movsb
push
scas
sub
pop
and
mov
adcl
lahf
in
jge
inc
std
in
out
das
xchg
out
jle
xchg
arpl
xlat
mov
rcll
sbb
adc
fs
cmp
cmp
bound
inc
adc
dec
pop
adc
xchg
and
sbb
inc
mov
inc
or
fimuls
sarb
in
jg
imul
out
and
inc
mov
in
push
inc
aas
mov
dec
jno
stc
pop
sub
sub
fisttpll
inc
xor
dec
xor
cmp
pop
cwtl
push
xchg
fwait
mov
out
jae
xchg
lock
enter
pop
push
pop
sub
lret
loope
lock
ja
jo
cwtl
pop
int
lea
loope
push
add
mov
shr
jno
push
pop
rcl
dec
jle
arpl
scas
adc
test
sub
int3
cmpsl
sbb
lret
lds
push
aas
and
nop
js
xchg
jg
xor
push
pop
enter
dec
pushf
in
movsb
jecxz
push
xor
lock
outsl
mov
add
decb
sbb
aaa
inc
scas
notl
das
test
lcall
cmc
jns
cmpsb
gs
sar
mov
lret
push
inc
push
pop
lret
push
popf
xchg
fs
push
mov
bound
adc
jno
std
jp
jae
les
loope
xchg
mov
jno
daa
lret
push
std
arpl
mov
imulb
cmpl
dec
inc
insl
mov
testl
insb
aam
cld
dec
xchg
rclb
and
insl
into
lret
fcomip
rcr
fs
add
test
adc
lock
inc
mov
stos
stos
repz
roll
and
jge
push
aas
xchg
dec
add
sbb
leave
inc
pop
mov
or
out
lods
pop
jmp
lahf
inc
popfw
sbb
mov
inc
add
xor
cld
dec
mov
sahf
add
hlt
and
loop
lds
xchg
cli
jbe
sbb
xor
in
mov
loop
dec
iret
jl
cli
std
xor
pop
or
in
icebp
push
lods
cmp
shrl
add
cmpsb
cmp
shll
mov
icebp
pop
outsb
cmpb
dec
iret
inc
addb
dec
mov
gs
cmp
fstps
mov
dec
push
adc
mov
testb
popa
or
repnz
fldenv
jmp
push
dec
fdivp
sub
sbb
xchg
jno
lea
lods
sbb
mov
test
addb
push
lock
fwait
adc
cmp
imul
sub
mov
fwait
or
add
mov
mov
mov
cmp
xorb
add
inc
mov
jp
fidivs
xchg
fcmovb
aad
test
inc
cmpsb
dec
adc
inc
scas
rorl
cmc
push
iret
push
adc
aas
ds
dec
cmp
mov
popa
faddl
sbb
or
push
fidivl
fstps
clc
xchg
xor
les
orb
xor
dec
dec
test
ja
test
incl
push
into
sub
in
and
push
ret
and
into
push
xchg
lods
mov
sub
cmpl
mov
fwait
test
cmpl
inc
in
dec
mov
inc
popf
loop
jmp
fsubrs
sub
sbb
pop
lcall
xor
pop
cmp
xchg
mov
adc
adc
adc
jg
ljmp
notb
fisttpl
dec
ds
jns
xchg
rorb
xor
xchg
mov
pushf
cmp
outsb
cmp
sub
mov
lea
fbld
sbb
xor
jmp
pop
sub
adc
push
dec
nop
push
aaa
jg
sti
popl
cltd
pop
push
loope
ljmp
mov
cmc
mov
pop
pop
icebp
fisttpll
ss
cmp
adc
ret
sti
sahf
sbb
mov
cmpsl
sbb
repz
mull
lds
mov
cmp
fwait
rcr
inc
lds
sahf
fs
cmp
inc
pop
loope
jne
push
mov
int
or
pop
in
ret
out
out
sbb
mov
fdivrp
je
jg
mov
into
stc
mov
aam
adc
mov
jp
jle
push
add
dec
and
pop
pop
pop
cmp
sti
cmpsl
add
jne
sti
push
jae
push
mov
test
cmpb
cmpsl
daa
out
jmp
xor
push
push
shr
cmpb
es
divb
jnp
ds
lret
rorl
mov
das
loope
jp
and
jo
mov
pusha
lret
jmp
jb
out
stos
sbb
cli
sub
sub
mov
xchg
in
sbb
pop
xchg
push
in
mov
ja
sbb
ficompl
jbe
add
mov
dec
sub
cltd
sbb
or
idivl
in
push
jecxz
ret
inc
jnp
cmp
sub
sub
cmpl
mov
loop
jecxz
enter
popa
ret
pushf
push
imul
push
xchg
loop
fucomip
call
mov
orb
nop
scas
pop
fisttpl
lds
movsb
and
push
nop
cltd
xchg
scas
icebp
fst
leave
jg
inc
jmp
jp
cmp
aad
or
in
rclb
mov
js
insb
push
mov
daa
out
ret
add
sahf
adc
mov
mov
sbb
adc
xor
jo
iret
repnz
xchg
int
mov
sbb
xchg
imul
popf
inc
xchg
sbb
pop
xor
xchg
add
xor
mov
inc
push
dec
inc
mov
xchg
mov
inc
xchg
xor
sub
xor
cmp
xchg
pop
jo
push
roll
aam
dec
jne
pop
cltd
jnp
test
hlt
cld
jae
jnp
je
sbb
mov
int3
movsb
icebp
mov
mov
daa
idivb
mov
ficoms
out
pop
fists
and
insl
cmpsl
call
jno
push
inc
imul
pop
add
xor
inc
js
xchg
pop
xor
cwtl
mov
mov
mov
cwtl
sbb
sub
shll
int
dec
push
push
gs
lods
repz
pop
xlat
call
cltd
pop
lret
rcr
das
sub
ds
pop
lock
insb
jno
stc
pop
lahf
lcall
adc
dec
cwtl
mov
xchg
aam
adc
aaa
icebp
cmp
ss
xor
rcll
inc
pop
dec
jbe
push
mov
shll
add
mov
push
sbb
in
pop
xchg
adcb
jnp
inc
cltd
adc
test
jnp
jl
adc
aam
adc
movsl
xor
adc
inc
inc
lret
shll
push
fadds
mov
stc
xchg
mov
into
gs
mov
stos
cmp
sar
repnz
scas
mov
popf
push
add
subl
sub
jb
inc
cmpb
or
iret
xor
cmc
sub
xchg
aaa
or
or
add
xlat
cmp
paddq
or
les
fs
mov
out
push
into
in
push
add
inc
push
xchg
sub
adc
movsb
mov
in
cltd
movsl
push
pop
jmp
cmp
je
mov
inc
or
pop
nop
jg
xor
test
sub
mov
outsl
arpl
test
push
xor
mov
bound
mov
pop
xchg
and
push
jo
jae
xchg
rcll
adc
ds
mov
mov
dec
sahf
mov
pop
xchg
cmp
add
mov
repnz
lahf
lock
push
adc
xchg
push
pop
mov
sbbl
xchg
adc
outsb
std
mov
mov
add
mov
bound
movsb
mov
js
push
jg
jp
add
cmp
jo
dec
adc
in
jo
aas
sub
sub
adcl
aam
jg
xor
enter
cwtl
lock
mov
movsb
jbe
dec
sbb
push
fistps
adc
ss
mov
xorl
jmp
pop
movsl
pusha
lds
push
xlat
sbb
add
jp
push
adc
or
jp
push
sbb
add
scas
mov
dec
stos
sub
dec
pop
push
dec
sbb
stos
iret
push
out
jp
leave
cmpsb
jae
sbb
outsl
jg
hlt
mov
xchg
pop
fnstcw
pop
mov
sbb
xor
add
or
cmp
xor
lea
shr
pusha
inc
jb
lahf
pop
into
xchg
repnz
ss
nop
in
cmc
pop
sub
dec
jno
jbe
inc
hlt
jnp
aaa
outsl
ret
stos
sbb
cltd
or
cwtl
mov
hlt
inc
sbb
and
cmpsb
adc
adc
add
add
mov
aam
clc
cmp
push
repnz
repnz
jbe
pushf
inc
xlat
pop
call
mov
xchg
inc
inc
into
xor
sbb
int
xchg
cmc
mov
jl
call
int3
ror
mov
sub
sub
or
adc
inc
push
cwtl
int
pop
fildll
out
or
jbe
out
daa
xor
out
bound
es
inc
mov
jmp
cmp
int
addb
mov
add
xor
push
aaa
gs
incl
clc
stc
mov
movsl
outsl
fwait
sbb
adc
or
inc
insl
aad
je
pop
arpl
cmp
cmp
sbb
call
and
mov
faddl
insl
ljmp
cs
or
idivl
mov
xchg
adc
hlt
pop
repnz
test
stc
cmovs
and
jp
scas
jns
sbb
xor
push
pushl
je
xchg
std
rorl
and
pusha
or
and
lret
aaa
dec
pop
cli
aam
xor
aam
pop
leave
mov
rcll
dec
in
fsubr
mov
aaa
lret
push
mov
or
aas
rolb
push
mov
inc
imul
aaa
stc
or
push
scas
xor
inc
inc
pop
pusha
dec
mov
daa
xchg
jp
insl
jg
insl
cmp
pop
sbb
xor
mov
sub
lea
add
jl
xor
dec
das
mov
cld
sbb
scas
mov
cmp
inc
sbb
ret
lods
push
push
sbb
fidivs
gs
mov
inc
mov
mov
inc
and
mov
sarl
sbb
test
xchg
or
xor
xorl
addr16
jg
xor
js
add
and
or
js
cli
xchg
lea
mov
mov
and
int
jns
jae
sbb
movsb
mov
mov
decl
mov
push
out
xchg
push
and
mov
xchg
and
loope
add
jl
subl
inc
rcr
pop
xchg
jno
inc
repnz
aad
sahf
jecxz
add
jae
test
mov
clc
jp
loop
out
ror
out
mov
bound
std
mov
or
outsb
jae
pushl
jge
or
fidivrl
scas
sub
call
sub
aaa
gs
mov
push
stos
and
add
idivb
int3
mov
movsl
jl
pop
pop
je
dec
xor
cmpsb
lods
daa
iret
jne
mov
lret
aam
jbe
pop
inc
dec
push
enter
push
dec
hlt
and
and
jbe
stc
add
and
out
jae
scas
test
fsts
arpl
xor
lods
sub
xchg
test
test
xor
mov
fcoml
stos
arpl
notl
add
fsts
dec
ret
verr
fisttps
xchg
adcl
add
movsb
icebp
sbbl
rep
mov
pop
xchg
leave
xchg
sarb
mov
cmp
push
cmpsb
subb
cmp
fbstp
sub
dec
in
ja
imul
daa
jbe
xor
mov
outsl
sarb
imul
outsb
insl
and
jecxz
cmp
bnd
fiadds
fsubrs
int3
mov
mov
dec
insl
xor
adc
sub
repz
cld
fs
repnz
bound
idivl
sbb
daa
adc
xchg
dec
push
fs
inc
aaa
xchg
jns
xchg
imul
clc
pop
das
cmpsl
push
cs
xchg
push
and
in
jo
jmp
sbb
adc
push
jge
nop
cmpsl
incl
aaa
out
xchg
mov
mov
add
jne
dec
xchg
test
xor
add
data16
adc
adc
sarl
mov
mov
inc
xchg
cmp
mov
sub
clc
adc
or
xchg
inc
int3
cmp
je
adc
loopne
mov
sbb
cmp
xlat
push
movsb
jmp
mov
stos
sbb
in
in
add
out
sub
out
xlat
ja
jle
leave
sub
icebp
or
inc
cmpsl
loope
in
cmp
or
lods
xor
lea
dec
add
and
icebp
sub
lahf
pop
cli
cltd
pop
js
outsl
cmc
add
insb
xor
sti
test
inc
scas
xchg
mov
jnp
sahf
xchg
sbb
daa
xchg
test
imul
nop
inc
pop
cmc
xor
or
pop
stc
pop
sbb
aad
iret
fcmove
mov
add
data16
cmp
xor
jecxz
dec
out
sbb
insb
jl
jnp
pushf
es
adc
imul
in
jne
jb
push
cmp
mov
call
and
xor
push
or
cmp
mov
les
sbb
push
jp
test
cwtl
mov
lahf
pop
arpl
pop
mov
xor
test
rcll
aad
jnp
loopne
push
inc
shrl
outsb
xrelease
subl
push
mov
or
dec
gs
mov
mov
iret
jne
add
ljmp
jns
fwait
je
in
xor
fcmovu
outsb
xor
out
in
jno
adc
ret
mov
in
ret
test
imull
jecxz
clc
pop
aam
sarl
int3
lahf
aad
in
pop
dec
in
jle
xchg
add
mov
mov
push
repnz
pop
jne
inc
inc
jae
cmpsl
jmp
mov
lar
push
cmpl
ret
xlat
sbb
adc
gs
cmp
cmp
pop
and
xchg
push
ljmp
inc
jp
movsb
mov
pusha
lret
add
js,pn
pop
push
add
ja
pop
pop
aas
pushf
mov
or
std
punpckhwd
in
and
inc
mov
mov
mov
movsb
addl
xor
popa
scas
inc
sbb
je
adc
aas
cmpsb
adc
fwait
jge
jg
mov
imul
cli
jns
sbb
orb
push
cld
out
adc
push
movsb
add
imul
adc
lock
rcl
jmp
jmp
cmp
pop
xor
mov
sti
and
adc
aaa
mov
pop
push
pushf
lods
inc
out
sbb
and
jmp
mov
sub
push
test
pop
pop
xor
les
or
push
xchg
aad
test
jb
mov
cld
xchg
data16
pushf
test
movsb
sbb
pop
movsl
xor
dec
mov
cmpsb
cmp
aas
inc
sbb
std
add
rclb
sbb
ret
add
dec
xor
add
lret
jmp
fwait
jno
addr16
nop
cmp
cmpb
fidivs
imul
push
push
mov
add
xor
mov
rcll
cli
push
push
jbe
lea
out
xchg
add
mov
cli
int3
arpl
jmp
jno
in
cmpsl
lock
sbb
jnp
jl
je
xchg
into
mov
cmpsl
pop
movsl
push
adc
cltd
call
pushf
and
insl
sub
adc
in
jns
pop
push
sub
adc
inc
xor
addl
push
jo
pop
dec
dec
jle
ret
mov
fcmovne
mov
xlat
jmp
idivb
adc
pusha
popf
jle
push
sbb
les
push
xchg
js
clc
xor
or
mov
pop
xchg
dec
lock
fidivl
mov
pop
mov
hlt
mov
iret
scas
sti
dec
fnstcw
pop
mov
add
or
out
sbb
push
popf
in
ljmp
adcl
mov
xchg
adc
insl
adc
mov
add
repnz
xchg
lea
imul
dec
out
mov
fdiv
out
mov
xchg
dec
sbb
sbb
cmp
adc
ss
or
add
lret
jo
xchg
add
sub
xorb
xor
fldl
imul
push
xchg
inc
inc
lcall
or
add
icebp
xor
rorb
loope
enter
sbb
xor
aas
mov
fstps
sub
test
gs
xor
shrb
les
inc
cwtl
mov
shrl
outsl
inc
sti
inc
aam
add
push
in
fmuls
movsb
pop
inc
adc
outsl
jecxz
les
and
push
in
lahf
test
arpl
clc
inc
push
push
lret
fildll
sti
loop
sbb
in
adc
loope
cmp
and
sub
fstpt
cmp
aad
test
inc
fwait
or
lods
xor
lock
fnsave
cmp
unpckhps
sti
mov
shrb
xor
orb
ja
psrlw
inc
xor
sub
sbb
clc
repz
mov
insl
jg
mov
andb
in
inc
std
push
lret
push
in
and
mov
inc
sbb
inc
jbe
xor
int3
jmp
subb
xchg
push
mov
iret
pop
mov
dec
dec
outsb
negl
mov
lahf
aad
and
aaa
dec
int
jecxz
inc
in
fs
push
and
sbb
fcmovnb
xchg
shll
jnp
xor
hlt
in
jo
mov
aas
imul
shlb
lret
mov
or
pop
dec
pop
cmp
push
mov
adc
shll
add
ss
jp
mov
xor
aam
sbb
fldcw
fcompl
dec
push
or
loop
push
pop
pop
pop
cmp
cmp
pop
xchg
dec
fwait
inc
out
sub
or
sbb
cwtl
rcr
stos
addb
imul
cmpsl
stc
sub
pop
iret
cmp
add
and
repnz
lds
push
sbb
aad
sarl
mov
je
pop
sub
mov
xchg
xor
xchg
aas
insb
rorb
cmp
addl
loope
pop
cmp
mov
je
testb
push
and
sub
mov
inc
out
ret
imul
cmp
into
adc
sahf
dec
or
inc
mov
test
addr16
adc
out
fcmovbe
inc
scas
sbb
pop
in
push
or
mov
xchg
orl
pushf
pop
mov
ja
and
mov
jg
fwait
add
adc
das
pushf
push
adc
ret
in
mov
and
in
into
pusha
pop
cmc
cmp
jp
and
mov
mov
stos
and
or
ss
and
ja
and
iret
push
out
inc
popa
xchg
mov
pop
rcrb
mov
hlt
jnp
sub
not
xor
dec
jl
dec
and
xor
pop
loope
sub
xor
inc
jmp
loopne
sti
pop
xor
push
xor
lret
push
cltd
mov
pop
mov
xor
lret
out
jne
daa
insl
or
add
xorb
jne
sbb
and
jle
jo
das
fcoms
rorb
pop
dec
mov
ret
push
push
hlt
xchg
pusha
fisttpll
in
jmp
dec
sbb
out
add
xchg
mov
mov
in
add
out
lock
mov
adc
sti
andps
mov
mov
repnz
lcall
popa
push
pop
push
push
jns
jp
xchg
inc
xor
fists
mov
clc
mov
leave
mov
push
mov
fdivl
mov
sub
ret
iret
roll
mov
ljmp
insl
push
bound
cli
pushf
cltd
and
xlat
jp
cli
sub
out
mov
pop
sub
fldcw
xchg
or
push
sub
push
dec
sbb
andl
mov
rcr
lret
push
push
mov
push
jmp
sar
push
outsl
shlb
xor
dec
movb
mov
rcr
js
and
repz
inc
add
mov
les
shrb
push
cltd
pushf
fsub
xchg
ljmp
xchg
repz
neg
sbb
mov
fs
repz
mov
xchg
int
and
pop
mov
lock
sar
inc
jne
mov
ret
fwait
out
push
aad
xor
scas
and
out
cmp
mov
or
dec
lret
cmp
popa
gs
lods
mov
cltd
into
sub
cmp
jmp
xchg
cmpsl
out
sbb
bound
mov
mov
popa
pop
sbb
jg
push
out
add
cmp
and
jb
push
add
mov
mov
jo
xchg
cmpsb
push
test
mov
hlt
push
sbb
fadds
cli
jle
out
add
sub
push
mov
jo
sub
int3
jge
movsb
dec
or
push
out
or
cmp
mov
push
pop
bound
shlb
mov
inc
mov
mov
popf
jno
push
sti
push
rclb
clc
sub
imul
stos
pop
mov
adc
dec
into
notl
cmp
nop
xor
add
dec
add
mov
popf
push
jne
xchg
decb
fsubrs
test
lock
subl
aas
dec
mov
outsl
cltd
xchg
mov
mov
enter
sbb
mov
mov
stc
repz
pop
in
jg
shrb
test
and
rolb
ret
push
xor
cwtl
iret
and
fisubrs
std
ljmp
cmpb
test
adc
cmp
stc
cld
test
test
mov
jmp
mov
adcb
inc
idiv
xor
fbld
mov
pop
push
sub
pop
xchg
xor
cmc
push
inc
adc
dec
xor
sub
pop
mov
cmpsl
pop
sbb
inc
jnp
mov
outsb
insl
xorl
xorl
push
lods
sub
pop
popa
pop
and
jp
adc
add
lock
cmp
inc
jnp
mov
inc
jp
cwtl
es
in
sbbl
test
jp
jns
loopne
dec
jmp
add
push
imul
push
movsb
cmp
sti
dec
pop
mov
dec
and
add
push
lret
sbb
cmp
xlat
mov
or
adc
jmp
imul
and
repz
repnz
fmull
inc
push
inc
and
adc
mov
ss
mov
fldenv
adcb
add
lods
mov
xlat
pop
ds
pushf
fcompl
cmp
loope
mov
push
test
adc
xor
jg
mov
sbb
inc
je
inc
mov
mov
push
adc
ja
das
shrb
add
xchg
xchg
fcmovnu
pop
pusha
dec
jge
add
and
mov
andb
sub
addr16
ljmp
jae
outsb
aas
jno
mov
mov
inc
xchg
and
dec
and
mov
sub
push
in
notb
movsl
in
decb
sub
sub
xchg
inc
sub
sbb
sbb
push
mov
pusha
mov
aaa
sub
adc
inc
dec
repnz
sbb
aaa
cmpsb
cmp
push
mov
sbb
mov
cmp
out
and
subl
orl
ficomps
push
push
mov
in
mov
mov
jae
sbb
popfw
mov
jl
jecxz
mov
rcrb
mov
imul
stc
xacquire
adc
add
fsub
pushf
add
sbb
cmpsl
arpl
dec
push
xor
xchg
and
out
fcmovb
xor
add
scas
aaa
mov
lock
jno
fucom
fwait
or
ljmp
popf
fsubrl
jge
xor
in
mov
sahf
mov
enter
inc
rcrb
lods
adc
dec
mov
pusha
sahf
stc
aas
outsb
jg
rcl
dec
xchg
adc
das
sub
mov
adc
xchg
push
lods
or
push
xlat
or
mov
adc
fbld
xchg
aad
adc
pushf
mov
adc
ja
lcall
mov
push
pusha
jmp
or
mov
or
lods
test
test
and
ja
add
mulb
cmp
jo
push
inc
xchg
andl
xor
andl
jecxz
or
rcll
sbb
cmp
shll
push
or
jne
mov
sub
repnz
sub
imul
test
jmp
ffree
inc
xchg
add
loope
mov
out
out
call
popf
jns
mov
and
xchg
icebp
std
cmp
dec
stc
mov
mov
and
jecxz
out
icebp
rcrb
iret
mov
in
enter
std
adc
or
push
cmp
test
sbb
lret
inc
jmp
stc
mov
adc
push
mov
cmpsl
outsl
out
add
aam
cmpsb
inc
pop
xchg
add
test
outsl
ror
cli
xchg
push
movsb
cwtl
popa
enter
jnp
mov
leave
cs
call
and
or
jmp
mov
ret
pop
add
shll
out
call
sub
popf
mov
cwtl
ficomps
push
les
jae
in
lock
push
adc
mov
dec
aas
cmc
xor
or
jl
mov
pop
and
in
fs
cmc
jmp
lahf
mov
in
lock
or
scas
mov
addr16
inc
jecxz
jle
ja
pop
mov
lret
push
or
xchg
shll
cmp
fwait
mov
or
cli
mov
dec
ja
push
inc
jecxz
cmp
xchg
lahf
inc
test
data16
xor
pop
mov
ret
and
push
sbb
and
mov
xchg
mov
orl
cltd
aas
cmp
mov
mov
push
mov
mov
das
imul
push
clc
aaa
jmp
stos
mov
not
inc
out
pop
jnp
dec
daa
es
mov
ret
push
add
mov
hlt
aas
jne
mov
out
adc
aam
std
hlt
push
xor
out
ficompl
hlt
inc
je
pop
das
pop
clc
ret
insb
cltd
sbb
mov
icebp
insl
addr16
lcall
xor
xorb
in
clc
inc
in
lock
adcb
sub
cltd
xorb
cmp
lret
lea
stc
xor
jp
bound
test
stc
scas
jle
push
pop
and
push
sti
dec
and
fisttpl
push
and
fisubrl
mov
pop
in
lods
xor
mov
call
hlt
incl
arpl
movsb
or
into
cmp
xchg
xor
mov
int
pop
pusha
cmp
mov
mov
aam
cmpl
mov
stc
push
add
dec
dec
imul
mov
dec
adc
add
mov
stos
push
push
sbb
cmpsl
pop
stos
jae
push
jle
mov
lea
rclb
mov
in
lahf
cmpsl
push
sub
jne
sub
or
sbb
jo
push
sub
inc
add
jle
enter
movsb
push
cs
les
xchg
std
xor
or
mov
pushf
lea
mov
mov
adc
test
xchg
in
push
test
out
insb
adcb
push
add
jno
add
ljmp
cmpsb
add
hlt
insl
dec
sub
jle
nop
mov
xchg
xchg
inc
push
lods
add
xlat
cmpsb
stos
out
jno
loopne
mov
mov
pop
xor
cwtl
test
ret
gs
mov
xchg
push
and
lcall
mov
sub
mov
cmp
lcall
paddd
outsl
aaa
mov
or
int3
fdivr
insb
push
jp
loopne
loopne
call
test
and
test
add
adc
hlt
sub
lods
cltd
adc
mov
sahf
shll
sahf
jno
les
test
pop
ret
psadbw
xchg
bound
xlat
aaa
cld
sbb
jnp
xchg
xchg
inc
js
out
lahf
pop
add
je
sbb
mov
or
adcl
lret
pop
sbb
mov
arpl
pop
ret
cwtl
fwait
or
mov
mov
rcr
mov
cltd
cmc
insl
jmp
gs
popf
jl
icebp
jge
lds
pop
mov
mov
dec
mov
aam
and
ret
insb
jnp
in
pop
outsl
adc
adc
out
das
pop
mov
jle
lahf
movsb
ficoms
fwait
mov
aaa
out
jl
pop
inc
movsb
push
xchg
mov
add
sbb
mov
xchg
mov
sbb
push
pop
int
inc
jp
inc
es
arpl
push
imul
or
inc
pcmpgtw
jmp
fld
xchg
clc
lock
pop
mov
cmp
leave
mov
jae
push
addr16
sti
sub
push
aam
cltd
in
lods
adc
add
data16
dec
movsl
insl
jecxz
iret
js
mov
adc
push
inc
xor
aad
jl
mov
jg
fucom
arpl
dec
inc
addr16
lock
inc
jl
scas
fldt
adc
mov
adc
fs
stos
inc
icebp
xor
popf
call
pusha
insl
inc
out
mov
push
mov
ret
jnp
add
sub
fadd
stc
jl
inc
nop
rclb
pop
ret
clc
push
cmpsb
sbb
nop
scas
pop
push
push
or
ret
mov
shrb
mov
push
pop
lods
mov
ret
lcall
stos
jns
aam
es
out
andb
stos
jne
repnz
mov
mov
jecxz
jae
sub
idiv
subb
or
mov
sahf
cmc
inc
mov
mov
push
inc
cs
loopne
enter
lock
xchg
scas
clc
pop
fcmovu
push
xchg
into
xchg
push
mov
cltd
adc
iret
js
mov
mov
and
push
xor
adc
sub
sbb
cmp
jb
xor
fbld
hlt
fmul
lods
cltd
mov
outsb
mov
stc
data16
mov
mov
or
inc
mov
sbb
mov
cwtl
or
mov
mov
jg
pop
shrb
cmp
stc
jge
loope
add
cmp
cmp
mov
or
jp
xor
lea
inc
cmp
pop
repnz
push
pop
fwait
aaa
int
cmp
lret
xchg
cmpsb
fnstsw
outsl
jae
mov
sub
inc
sub
aad
scas
mov
insl
xchg
cmpsl
mov
jl
push
xchg
pop
inc
fistpll
subl
outsb
cwtl
fwait
sbb
outsl
bound
pop
pusha
add
cwtl
inc
jns
push
mov
andb
cmc
lock
mov
jne
mov
jne
add
cmp
jmp
nop
cld
out
fwait
pop
cmp
push
xor
faddp
pop
and
push
lds
std
pop
jle
dec
inc
cwtl
int3
xchg
mov
not
shlb
xor
in
cmpl
pop
inc
push
mov
imul
mov
repnz
cmp
inc
dec
lahf
scas
push
jge
gs
loope
cmp
pop
xor
stos
xchg
stc
movsb
in
dec
jns
xor
add
inc
loop
pop
rorb
arpl
mov
loopne
sub
lods
lahf
subl
mov
addr16
xchg
pop
rolb
xor
jmp
addl
jb
dec
je
mov
inc
sar
les
loop
das
jge
jbe
cltd
not
mov
aaa
inc
adcl
dec
stos
sub
jne
sub
mov
mov
xchg
and
loope
mov
push
xor
add
jns
cs
jge
sahf
inc
or
sbbb
xchg
dec
or
sub
mov
xchg
xchg
loop
sbb
sub
sbb
mov
loope
cmp
mov
ret
dec
cmpsb
add
sbb
insb
fdivp
push
sub
outsl
imul
hlt
int
icebp
push
and
das
push
pusha
mov
ss
push
icebp
jp
dec
daa
sub
mov
mov
repz
idiv
xor
or
adc
sbb
sub
popa
inc
inc
ss
mov
repnz
xor
adc
stos
dec
outsl
sbb
mov
lea
and
lahf
inc
inc
aaa
test
cs
int
dec
push
add
out
negl
xchg
ss
push
push
mov
call
mov
fdivl
push
mov
dec
push
rcl
je
movsl
jnp
pushf
inc
xchg
stc
dec
andl
mov
add
ret
or
cld
jmp
aam
xorb
das
shlb
xor
mov
xor
xchg
sub
loop
mov
fldl
jg
sbb
into
mov
push
imul
dec
push
js
data16
imul
inc
cmp
je
dec
pop
cmp
or
clc
testl
mov
cmp
cmpl
daa
int
loop
xor
xchg
aaa
aam
and
push
xchg
leave
xor
inc
popf
cmp
icebp
mov
mov
scas
daa
dec
inc
and
std
jl
in
mov
and
movsb
out
inc
mov
shrb
mov
or
mov
sahf
frstor
push
dec
sbb
mov
push
std
stos
dec
adc
dec
or
ljmp
stos
push
sarb
out
push
inc
fistpll
mov
xor
ror
in
cmp
sahf
pop
xor
dec
shlb
sbb
clc
xchg
add
jle
xchg
jno
and
stc
xchg
ret
xor
popf
clc
int
add
xor
or
xor
in
xchg
pop
cmp
loop
stos
fdiv
adc
mov
inc
pop
push
int
rcll
sbb
js
pop
testl
into
and
add
xchg
cmp
and
imul
rorb
stos
bound
fdivp
outsl
xchg
dec
neg
xor
pop
push
push
and
mov
nop
xor
cmp
jp
pop
fldcw
and
sub
xchg
fwait
out
mov
adc
inc
dec
adc
subl
dec
push
cmpl
adc
aaa
daa
stc
or
mov
mov
jge
data16
mov
mov
mov
ss
stos
leave
push
icebp
jge
jle
mov
rcr
adc
int
rolb
push
icebp
shr
or
and
es
std
xchg
mov
sbb
test
mov
mov
jne
mov
mov
lods
daa
add
xor
lods
mov
je
lcall
arpl
dec
dec
jp
aas
xchg
ljmp
mov
pop
mov
iret
cli
shrl
lods
mov
daa
inc
xchg
and
ss
jnp
dec
xor
pop
cli
cld
testb
mov
sahf
pop
mov
xchg
and
jmp
mov
imul
lock
mov
xorl
lods
loope
cmp
pop
xor
rcr
cld
jmp
push
dec
in
or
into
fwait
cmpsl
in
lods
pop
push
dec
in
repnz
outsb
and
pop
push
leave
sbb
out
and
into
and
shlb
mov
mov
repnz
filds
into
in
xchg
rorb
arpl
jle
mov
fistl
mov
vrsqrtss
inc
mov
or
stos
ds
scas
or
sahf
lahf
sbb
insl
int3
cltd
int
jle
aad
iret
inc
mov
mov
das
mov
bound
pusha
movb
inc
ja
scas
shl
dec
loop
mov
rep
inc
imul
push
les
xor
cmpsl
jae
aad
stc
cmp
dec
jno
insl
mov
incl
push
mov
outsl
jnp
xchg
mov
fs
adc
push
rclb
mov
jg
es
adcb
cmp
dec
inc
dec
adc
jl
stos
dec
ret
sub
xor
cmp
rcr
xchg
subb
or
dec
push
jnp
loopne
and
in
sub
das
cmpsl
pop
outsb
lea
hlt
jmp
push
pushf
push
jno
push
test
xor
cmp
repnz
sbb
inc
outsl
fsts
sub
dec
lret
dec
nop
jg
fs
push
jl
and
dec
sub
lret
cmp
in
adc
pop
mov
dec
ljmp
or
mov
rcrl
jle
inc
adc
cltd
rcll
sbb
add
insb
in
and
bound
into
mov
int
dec
ret
sub
fcompl
data16
jg
cmp
xchg
mov
shrb
dec
inc
jb
or
push
xchg
les
pop
xor
or
das
push
push
lock
pushf
shrl
rorl
mov
xor
scas
sti
in
and
in
jp
adc
jmp
push
sub
idiv
clc
clc
loope
mov
mul
je
out
in
cltd
push
add
shrl
es
push
mov
insl
cmp
imul
dec
rol
cld
sub
les
cmp
cmp
repz
ret
xor
shl
or
pushl
out
cmc
scas
ret
push
pop
mov
pop
jo
sbb
movsb
pop
cwtl
or
push
mov
push
dec
sub
mov
sub
inc
or
and
add
sahf
shll
push
jmp
or
adc
roll
shld
pop
cmc
inc
cmp
rolb
bound
and
pop
sub
out
fldt
scas
into
stc
mov
jecxz
pop
pop
adc
mov
scas
rcll
imul
sti
fs
jbe
push
push
or
int
sahf
insb
or
out
mov
sahf
xchg
aad
dec
call
pop
out
or
sbb
outsb
mov
and
mov
inc
add
pop
sub
inc
std
mov
inc
mov
xor
pop
mov
aaa
icebp
insl
repz
pushf
jge
cmp
stc
push
xor
jbe
rolb
inc
mov
adc
shll
shl
das
fdivrs
test
hlt
push
and
and
adc
sub
inc
jnp
popf
les
loopne
cli
lahf
xor
vmaxss
cmc
and
xlat
xor
imul
aam
cmp
popa
xchg
aam
gs
int
es
call
icebp
bound
adc
scas
leave
mov
incb
pop
jb
scas
fnop
dec
sbb
xor
cmpsb
or
xchg
add
hlt
or
jg
jmp
push
add
shll
xor
fcoms
mov
pop
lcall
jo
push
adc
jb
ds
push
ja
dec
test
push
fsubrl
out
sub
pop
xor
mov
in
push
xor
fisubrs
mov
sub
sti
pop
js
jns
in
jle
adc
sti
int
jle
mov
mov
jle
push
lret
jmp
das
in
test
ljmp
je
or
fnsave
xor
iret
pop
cmp
scas
test
xchg
jp
or
imul
xchg
mov
fucomp
jecxz
mov
sub
aam
mov
pop
mov
and
addr16
and
xchg
jg
xlat
adc
adcb
insb
push
lods
cmpsb
and
test
push
xor
add
je
repz
call
arpl
shll
inc
std
mov
sar
mov
mov
push
jge
leave
or
inc
dec
lcall
push
inc
negb
popa
mov
rcrb
es
or
shll
notl
mov
lret
or
fsub
mov
adc
xchg
add
mov
int
sti
xchg
out
push
xor
jl
push
popf
mov
add
leave
mov
in
cli
and
or
sub
pop
push
push
je
popf
sub
adc
pop
mov
shll
mov
sbb
imul
insl
outsb
and
inc
mov
cmp
jmp
add
movsl
cwtl
and
or
push
push
ret
or
pusha
adc
pop
xor
cmp
arpl
push
mov
pop
adc
aas
or
jae
add
xor
mov
and
cwtl
mov
punpckhbw
repz
jnp
ss
jns
sub
cmp
mov
inc
push
cmp
mov
mov
int
std
xchg
xchg
pop
adc
mov
ret
mov
mov
fimull
jmp
in
lods
xchg
lods
ss
sbb
les
lcall
and
iret
xchg
cmp
mov
sub
mov
lret
mov
add
call
cmc
push
aaa
adc
lret
cli
je
test
rclb
jle
loopne
xchg
or
fistl
adc
pusha
pop
cmp
stc
mov
and
mov
shll
and
push
mov
jb
idivb
ja
das
pop
ds
pop
ffreep
pop
test
stc
repnz
pop
ret
in
adc
in
subb
mov
orb
cmc
into
fstp
dec
inc
xchg
cmp
ret
subb
or
test
push
fdivl
jmp
testl
jp
mov
stos
push
ljmp
jle
cmp
mov
js
ficoml
sti
xchg
out
int
xor
aaa
jmp
push
fsubl
pushf
mov
scas
inc
test
out
insb
insl
pop
push
push
add
pop
fists
fldt
gs
cmp
push
sub
jl
jno
call
mov
daa
mov
pop
mov
jno
inc
in
jg
xchg
fcomi
es
shll
xor
jg
pop
out
cltd
cmpsb
popa
loop
bound
dec
test
jno
scas
dec
add
pop
inc
pop
jbe
mov
add
fisttpl
add
fstpt
jp
cmp
fdivs
xor
xchg
dec
movsb
and
cld
sti
add
lret
push
lcall
outsb
mov
fs
imul
push
cmc
movsl
xor
lahf
push
mov
fsts
ss
aad
roll
scas
arpl
push
filds
dec
mov
jns
xchg
mov
iret
mov
insl
or
icebp
bound
lods
adc
insw
adc
adc
and
mov
cmp
cli
testl
or
nop
xor
jp
push
lcall
sar
aad
pusha
out
sub
sbb
pushf
into
push
insb
sbb
in
push
movsb
xlat
imul
outsb
pushf
je
add
xchg
xor
xor
cltd
mov
xchg
cmpsl
inc
jo
mov
scas
fisttpl
mov
cld
pop
lds
mov
sub
sub
pop
out
in
cwtl
sbb
jae
sub
rorl
in
outsl
push
insb
push
jle
cmc
outsl
loope
lahf
xchg
scas
push
inc
out
or
xor
mov
pop
daa
bound
clc
mov
imul
xchg
xor
pop
notb
sbb
mov
fiadds
sub
cltd
negl
int3
aas
cmc
pop
xlat
stos
daa
jno
inc
or
subl
outsl
sbb
movsl
repz
cmpsl
popf
out
dec
adc
push
push
mov
mov
loope
dec
inc
cmp
sbb
lcall
repnz
rcrl
mov
popa
lcall
dec
mov
sub
movsb
mov
mov
dec
mov
jbe
or
pop
es
lahf
jg
daa
dec
inc
dec
xor
scas
xchg
fwait
call
ret
push
mov
in
push
push
inc
dec
dec
mov
call
xor
outsl
fisttps
mov
out
pusha
add
mov
scas
mov
jp
xchg
and
stos
push
bound
or
cld
clc
jp
jo
ljmp
leave
cmp
xor
mov
lods
scas
pop
ss
cld
mov
ret
outsl
or
mov
ret
movsl
push
aas
loop
xchg
je
cmp
xchg
pushf
pop
jecxz
push
cld
stc
mov
or
cltd
fwait
and
sbb
ljmp
mov
mov
int
inc
scas
outsb
mov
jnp
in
pop
cmp
outsl
inc
inc
inc
cmp
pop
push
cltd
or
testl
dec
mov
cmp
gs
pop
loopne
dec
enter
je
sub
dec
mov
xor
test
outsl
lret
mov
aad
sarl
outsb
pop
or
fsubrl
lret
xchg
jb
sub
mov
pop
sahf
loopne
cmpsl
or
jge
call
add
sar
fists
mov
scas
ret
rolb
scas
outsl
push
ja
and
popa
gs
or
enter
and
loope
pop
sub
mov
dec
add
mov
adc
mov
dec
dec
and
aas
ss
test
enter
cmp
out
sub
xor
pcmpgtd
add
loope
adc
shll
aaa
sub
mov
loop
dec
dec
shll
jns
fistps
out
jge
sbb
loop
subl
xor
cmc
jge
and
pop
les
add
or
push
je
comiss
cwtl
arpl
cld
imul
shrl
mov
pop
mov
xchg
mov
dec
sub
dec
inc
sub
inc
pushf
cmp
push
cmpsl
mov
xchg
jecxz
sti
inc
popf
pop
push
jnp
addr16
pop
or
imul
mov
xor
daa
push
test
in
bnd
dec
subl
out
sub
xchg
push
loop
xchg
ret
stc
jl
mov
popf
dec
gs
arpl
pop
cs
pop
and
mov
rcrb
rcl
int3
pop
or
lods
mov
fwait
sbb
ja
mov
mov
loop
cmp
adc
sbb
sbb
test
data16
push
in
repz
pop
mov
xor
push
incl
bound
and
and
and
movsl
repz
ss
mov
in
mov
out
aaa
inc
mov
pop
pop
mov
loop
jae
addb
dec
mov
mov
xchg
xchg
jbe
xor
jecxz
push
divb
pop
mov
dec
jb
or
movsb
lea
outsb
add
inc
sub
ret
adc
push
push
idivl
aaa
inc
xchg
imul
gs
jae
add
sarb
test
mov
sbbb
cmp
enter
jae
pop
cmp
mov
cli
cmp
es
popa
and
in
push
jl
push
jmp
mov
mov
jge
mov
aaa
push
lret
stos
cmp
xor
pop
mov
daa
jb
adc
xor
rorb
addb
mov
mov
sub
and
imul
pop
sbb
xchg
xor
fisttps
push
es
mov
movsb
out
repz
idivl
sti
rorb
addl
pop
enter
fs
fisubl
ljmp
push
xchg
push
loopne
aad
sti
jns
rcrl
mov
inc
add
out
xchg
sub
jne
pop
inc
call
mov
rdtsc
addr16
loope
dec
pop
xchg
push
push
int
dec
mov
aam
dec
out
adcl
out
sub
clc
inc
test
mov
in
shr
adc
add
hlt
test
test
jmp
sbb
adc
movsl
ljmp
cmpsb
lds
mov
ja
add
gs
mov
xlat
add
loope
lret
loop
iret
xor
lods
dec
js
orl
dec
ja
in
leave
pop
cmp
das
adc
popf
mov
lret
xor
pushf
fiadds
loope
sbb
mov
mov
xchg
js
dec
in
mov
scas
aad
int3
insb
cli
push
jbe
mov
xor
cwtl
jle
repnz
push
add
mov
xor
mov
cmp
dec
or
into
pop
roll
xchg
mov
in
adc
nop
and
iret
fdivrs
notl
lret
mov
fwait
ss
cmpsl
fldcw
cli
dec
lcall
mov
xchg
les
adc
js
js
jmp
sub
ja
mov
mov
dec
jne
mov
cmp
test
inc
adc
stc
sub
leave
mov
pop
cli
pop
fisubs
ds
pop
sub
jge
mov
cwtl
je
ds
movsb
gs
int3
cld
push
jns
push
and
mov
push
xor
cltd
mulb
call
outsl
test
cmpsl
mov
jg
jp
shl
repnz
lahf
push
sub
mov
add
repnz
inc
xchg
xchg
les
in
xor
out
or
push
ret
inc
repnz
jecxz
out
xor
and
in
fstpl
rcl
adc
push
lahf
xchg
push
xchg
lods
aaa
dec
sub
xchg
lret
inc
xchg
pop
test
imul
lods
data16
out
inc
lods
jns
sti
jge
stos
mov
cltd
jge
clc
push
add
xor
out
cmp
add
out
xorl
ret
iret
int
fdivrl
sbb
push
inc
mov
dec
out
mov
pop
clc
lods
imul
pop
sub
cmp
outsb
xor
aam
sarb
dec
sbb
cld
add
mov
cmpsl
xchg
mov
jmp
ds
jp
dec
idiv
mov
cmp
int3
xor
scas
xchg
mov
inc
daa
insl
sar
nop
out
xor
xor
enter
dec
inc
jl
cli
sbb
pushf
inc
inc
je,pn
les
in
push
lret
ret
inc
mov
fcoms
add
pop
mov
xor
in
cmp
cmpsl
enter
subl
test
pop
test
aas
adc
xor
test
and
xor
cmp
call
repnz
ror
es
add
subb
ud0
inc
pop
jle
fisttpl
adc
xor
lods
mov
push
inc
packuswb
mov
bound
jp
xchg
adc
or
sbb
dec
sbbl
mov
mul
mov
push
jecxz
xor
mov
andb
movsb
shl
cmp
cmc
or
lods
adcl
jo
lret
ret
fisubrl
add
and
cli
push
dec
push
iret
iret
mov
sub
arpl
inc
fs
jb
imul
clc
mov
push
das
cli
int
push
cmp
mov
je
adc
fwait
iret
lea
inc
rcl
mov
js
xchg
mov
cmc
movsb
or
inc
mov
mov
gs
mov
xor
inc
ja
push
sbb
or
stos
cmpsb
sarl
aaa
mov
in
insb
xchg
pop
jne
push
ds
addr16
movsl
inc
imul
push
or
and
sahf
cltd
aaa
fisubs
jl
fs
xchg
xchg
in
cmpsl
mov
repnz
icebp
jp
cltd
mov
mov
in
jecxz
js
je,pn
add
enter
inc
movsl
lcall
dec
shl
fnstsw
and
ret
fsubl
mov
into
addr16
lcall
xor
ljmp
mov
cltd
or
and
jb
mov
xor
data16
loopne
les
or
push
dec
clc
loopne
jae
cmc
out
or
add
mov
dec
jmp
mov
mov
cltd
test
loope
or
repnz
data16
pop
mov
mov
aad
mov
movsl
sarb
stos
and
std
cli
pop
fldt
or
adc
mov
inc
sahf
lods
and
xor
pop
fs
arpl
pop
adc
jmp
push
mov
add
fidivrs
mov
out
xor
fwait
mov
sbb
hlt
shll
or
xchg
int3
test
es
cltd
push
mov
xchg
int3
pop
gs
dec
or
sahf
cmp
or
push
xchg
shl
mov
rcll
and
aad
ficoml
push
xchg
or
sahf
pop
push
or
mov
leave
jno
ret
into
hlt
and
cld
pop
push
and
gs
jg
insb
and
xor
inc
aaa
or
inc
xor
mov
add
popa
mov
and
adc
sarl
dec
jnp
ret
js
xchg
sub
push
adc
adc
js
or
xor
sbbb
stc
jge
cmc
fdivrl
mov
adc
push
nop
icebp
add
adc
inc
cmp
lods
cmp
orb
mulb
stos
add
fs
lock
movsb
daa
dec
push
sub
sarb
cltd
rcr
pop
and
popa
cmpsl
lds
xchg
xor
or
dec
imul
add
add
clc
adc
lahf
and
jo
pop
shl
fidivrl
jnp
and
cwtl
dec
mov
push
decb
jb
jae
dec
jge
int
push
subl
loop
inc
adc
cmc
sub
cmc
leave
out
roll
dec
cmp
mov
test
jno
sub
jg
xchg
popf
imull
repz
push
sti
subl
stos
and
mov
inc
pop
xor
out
add
loopne
jecxz
cmp
addl
push
cwtl
ret
daa
insb
or
jo
jmp
mov
xor
dec
movsl
outsl
and
insb
push
xchg
and
scas
mov
push
xchg
loope
adc
add
daa
jmp
clc
add
dec
pushf
dec
sub
cmpsl
rcl
pop
and
icebp
out
int3
sub
add
sahf
inc
cmpsl
add
pop
test
sti
lcall
in
aam
xchg
mov
icebp
adcb
and
push
push
lods
aam
aaa
js
xor
fists
ds
push
leave
sub
mov
enter
jbe
mov
pushf
jno
mov
fdivrl
in
xchg
dec
icebp
mov
iret
inc
ja
xor
mov
or
pusha
int3
add
or
orb
mov
iret
loop
das
inc
cmc
or
adc
in
mov
movsl
jbe
stos
in
in
fs
mov
or
mov
jecxz
aad
cmpsl
scas
iret
addr16
push
cli
pop
mov
pop
testl
push
mov
movsb
ret
sub
insb
in
pop
aam
or
test
insl
cmp
cli
add
and
cmp
test
aam
addl
add
sub
jl
mov
cs
and
shll
out
mov
mov
insl
inc
pop
dec
mov
pop
jmp
in
ds
stos
jnp
cmp
lcall
out
inc
push
mov
test
jne
fstps
pop
popa
in
fwait
add
dec
test
cmp
cmpsl
and
pop
arpl
xor
sbb
ja
pop
cmp
jno
imul
pop
repnz
rolb
ret
fs
repz
or
test
mov
xchg
jmp
iret
in
cld
xor
sarb
mov
jg
push
fsubr
addb
jbe
cmp
flds
sbb
cli
ds
xchg
aas
jle
push
or
inc
call
dec
out
inc
fistl
push
lds
mov
sbb
outsb
lahf
mov
mov
sti
xchg
mov
xchg
lods
cs
pop
fs
pop
sbb
jge
jmp
adc
loope
test
push
adc
push
pushf
cs
js
fidivrl
cmp
and
add
iret
add
nop
lahf
je
mov
call
cmp
mov
add
rcl
push
push
nop
fmull
ljmp
push
dec
imul
push
in
gs
inc
xor
pop
xor
sahf
dec
cld
adcb
cmpsl
aam
cs
shll
dec
lea
push
in
jae
mov
adc
sbb
dec
inc
mov
rep
cmp
jne
push
out
ds
jg
add
inc
adc
out
jmp
out
mov
push
stos
in
adc
mov
xor
or
les
mov
jecxz
pop
cmp
lods
fstl
stos
popa
sbb
pop
test
add
sub
pusha
cwtl
in
stos
mov
pop
sbb
push
dec
jbe
cmpsb
and
jecxz
movsl
cmpsb
mov
mov
push
cs
or
inc
cmp
cmp
sub
mov
mov
pop
sbb
mov
xor
jge
inc
mov
mov
push
cmp
push
xchg
push
repz
pop
pop
repnz
pop
stos
pop
lret
and
frstor
imul
push
icebp
and
popf
and
fsubr
mov
outsl
jge
or
jo
adc
sbbl
mov
cmp
mov
stos
arpl
mov
adc
lret
dec
dec
jo
test
in
test
sbb
xor
adc
pop
push
sub
pop
cltd
xor
pop
cmp
pop
sub
lods
mov
pop
ret
cmp
sbb
mov
aaa
mov
cmp
aaa
adc
cmc
scas
mov
sahf
adc
xchg
ljmp
or
cmp
xchg
repnz
jge
cs
xorb
sub
push
sahf
adc
fisttpll
lock
adc
jno
gs
test
mov
in
loop
clc
or
aas
or
pop
adc
pop
dec
jns
stc
subl
aaa
cwtl
cmp
sub
jmp
mov
adc
pop
sahf
loop
daa
xor
jp
xchg
js
push
mov
test
pop
add
scas
add
sub
int3
mov
jmp
or
push
lock
xchg
out
lds
aaa
or
cmpsl
inc
int
xchg
cmp
shll
dec
jmp
xchg
xor
fcmovnbe
and
ja
jp
test
mov
mov
cld
and
aas
and
inc
repz
ror
rcr
jl
dec
mov
mov
or
adc
jo
xor
fsts
shll
dec
ljmp
cmpsb
adc
adcb
aas
cmp
gs
sub
xchg
lcall
mulb
jmp
stos
or
sahf
lock
dec
xchg
sbb
cli
pop
or
mov
adc
insb
cmpsb
mov
inc
mov
lea
sbb
fisubrs
inc
mov
sub
and
outsl
inc
jns
imul
xor
xor
repnz
xlat
add
xor
pop
xchg
loop
insl
cmp
scas
cmpsl
movsb
push
xchg
movsb
int3
adc
or
ljmp
pop
fistps
adc
inc
das
xchg
sub
mov
adc
aas
in
push
pop
cmp
das
or
push
mov
add
sbb
cmc
testb
dec
cmp
je
and
loop
xor
mov
sub
sub
push
jl
mov
push
xchg
inc
testl
loope
jo
call
adc
push
cmp
cmc
loopne
outsb
lret
sbb
inc
or
mov
xchg
pop
fstl
stos
jae
shl
mov
popa
insb
sub
test
inc
sbb
inc
mulb
testl
aaa
inc
roll
and
je
sub
lret
mov
adc
outsl
sbb
int3
or
and
inc
inc
fs
push
out
stos
sub
mov
shl
popf
jg
out
jecxz
pop
mov
sbb
sbb
xchg
xchg
es
adc
in
or
dec
shl
shll
sub
sub
jge
mov
fnstcw
pop
add
jl
in
mov
xor
test
call
and
rorb
stos
vpcmpgtb
lret
popf
add
fdiv
push
xor
mov
loope
aas
test
es
sahf
mov
ror
dec
inc
push
ret
lods
rcl
or
sbb
sbb
cltd
in
and
dec
stos
push
push
push
sub
fnstenv
xor
push
add
add
out
sub
in
or
aad
cmovne
cmp
test
dec
test
insb
or
cwtl
pusha
outsb
int3
clc
sbb
sbb
popa
mov
rclb
imul
ret
jmp
mov
hlt
mov
out
jecxz
pushf
sub
mov
das
mov
scas
movsl
sub
sub
xchg
movntq
shr
hlt
pop
mov
rcrb
push
xchg
sub
or
adc
inc
lret
cmp
or
lcall
aad
data16
pop
aam
add
or
xor
jle
or
push
push
xor
mov
mov
mov
xor
or
push
jmp
sbb
out
arpl
cmp
aas
insb
jno
or
fwait
enter
sbb
jle
push
out
cmc
popf
out
adc
push
and
jbe
fdivrs
sbb
fdivl
test
enter
xor
cmp
ss
mov
adc
mov
jge
enter
cwtl
je
bound
xchg
push
aas
test
xor
cltd
inc
insl
rcll
mov
lods
mov
outsl
scas
test
dec
stos
aas
ds
ds
xchg
jnp
out
fidivrs
or
jle
inc
test
sbbb
adc
xor
fisubs
sbb
and
out
icebp
aad
jne
and
sbb
lahf
or
repz
out
jnp
out
rol
jle
mov
dec
adc
sbb
and
data16
aad
sub
pushf
les
add
lea
test
adc
inc
jo
mov
or
mov
or
inc
in
dec
lods
adc
and
std
mov
fstl
sbb
or
dec
xchg
pop
pop
adc
pop
leave
ret
cmp
push
sub
add
dec
fsubrp
cli
mov
lcall
sub
fsubrl
sti
mov
cmp
jl
inc
cmp
in
sub
dec
fists
add
out
push
jp
and
sbb
mov
xor
mov
jb
push
divb
cmpsl
sbb
jb
das
push
sbb
dec
mov
and
xor
jmp
stos
aas
rcl
inc
scas
pop
sbb
pop
jb
xchg
jp
pop
mov
icebp
lret
push
xor
cs
jnp
fs
xlat
pop
lcall
xor
insl
xlat
in
rolb
subb
cmp
dec
push
adc
pop
movsl
negl
pop
sub
mov
loop
mov
std
inc
and
cli
popa
outsb
fxch
mov
inc
in
addr16
cmc
jp
cltd
cmc
in
push
pushf
add
addr16
push
add
mov
subb
jns
mov
jecxz
cmp
mov
and
or
inc
jl
addr16
movl
fsts
mov
insl
iret
mov
mov
xchg
stos
out
inc
dec
call
mov
sub
ss
mov
leave
sarb
sbb
cltd
cld
mov
mov
pop
lahf
sbb
dec
test
mov
mov
imul
lcall
scas
ficoml
scas
xor
and
adc
les
jle
gs
movsl
lcall
out
xchg
popa
js
push
cmp
dec
adc
ret
popf
and
pop
xchg
in
loop
mov
aam
ljmp
mov
xorl
pushf
lret
cmp
and
in
push
aaa
pusha
inc
jnp
out
and
js
xor
push
add
mov
mov
cmc
jl
jp
fnstsw
aaa
inc
xchg
lret
inc
cmp
adc
xchg
ret
ret
mov
pop
movsl
stc
shlb
mov
jb
leave
test
ljmp
xchg
or
xchg
mov
adc
mov
mov
pop
lret
mov
add
daa
cmp
loop
into
pop
test
cltd
push
cli
sti
cmc
sub
sti
out
fnstsw
icebp
and
mull
loop
iret
push
jae
push
int
inc
or
xor
and
jle
xchg
lock
xor
mov
pop
popa
xor
cmp
sahf
cmp
in
sbbl
mov
dec
xchg
cmp
adc
xchg
inc
fiadds
outsb
ret
fisttpl
lar
mov
shll
hlt
or
dec
lock
xchg
jg
fs
frstor
incl
sbb
mov
dec
scas
clc
fwait
mov
adc
scas
lea
push
and
ljmp
push
sbb
sbb
in
xchg
repnz
cltd
mov
mov
sub
jae
sbb
and
stos
ja
imul
lahf
fdivl
daa
push
in
mov
jge
repnz
inc
xor
cs
imul
fcmovnbe
xchg
pop
das
gs
and
push
push
call
rcll
cmp
lcall
sub
movsb
in
adc
add
imul
leave
lods
add
mov
sahf
push
push
and
popa
in
stc
sbb
inc
daa
repnz
xchg
push
fiadds
dec
ljmp
test
mov
cmpsb
cwtl
sbb
adc
jnp
lea
sti
push
popf
es
daa
in
stc
add
shrl
sbb
add
adc
cmpb
mov
divl
adc
xor
xchg
jne
mov
push
sbb
addr16
cmp
push
movsb
pop
pop
xchg
push
dec
sbbb
mov
sbbb
in
adc
movsl
xor
in
mov
iret
pushf
xchg
ljmp
cmpsl
leavew
mov
cmp
lahf
ficoms
jle
mov
cmp
aaa
out
xchg
out
fldcw
in
imul
popf
sahf
cmp
mov
inc
jecxz
es
or
push
xor
adc
pushf
add
sbb
mov
sbb
shlb
xchg
dec
lds
nop
mov
cli
cmpsb
std
jl
adc
dec
les
data16
test
jo
pop
or
mov
in
int
sti
push
sub
dec
push
push
fnstcw
ficoms
rorl
clc
adc
aad
adc
mov
les
push
pop
rcrb
push
mov
push
xchg
xor
inc
pop
andb
int
and
jg
jcxz
jnp
cmp
jne
ljmp
stc
xor
in
adc
adc
add
inc
inc
fnstsw
fsts
sub
xchg
gs
xchg
xlat
sahf
push
aad
adc
cli
jl
mov
cmp
bound
clc
push
or
push
sahf
fdivrs
push
pop
jnp
inc
je
in
xchg
or
mov
sbb
xchg
dec
dec
vmovapd
or
imulb
andb
daa
lret
add
insb
xchg
mov
aam
push
icebp
inc
paddb
cli
test
push
fwait
jae
sbb
mov
lret
cmp
fsub
shrb
in
sbb
decl
arpl
incb
pushf
and
sub
es
mov
movsl
es
leave
test
dec
arpl
mov
test
sub
insb
test
clc
cmp
xchg
popf
push
dec
sbb
push
call
gs
fcomps
pop
adc
incl
mov
and
dec
push
scas
nop
lock
ja
push
out
push
jnp
or
push
out
iret
mov
call
pop
sbb
lret
sarl
xchg
pop
add
cmpsl
loop
pop
and
adc
mov
pop
cmc
sbb
inc
call
stc
loop
sub
cmp
pushf
shll
jb
pop
mov
bnd
pop
outsb
jae
inc
mov
push
pop
xorb
pop
scas
add
mov
scas
adc
cld
repz
jo
notl
movsl
iret
and
cmp
sub
cmp
sbb
es
icebp
mov
jmp
jns
pusha
and
mov
stc
stc
xchg
ljmp
repz
sub
shrb
lret
jo
lret
dec
ret
mov
push
inc
xchg
push
jg
std
jo
inc
icebp
rcrl
xor
scas
lcall
pop
lcall
scas
mov
jnp
sub
and
jbe
cmp
mov
adc
push
push
cmp
mov
push
xor
aaa
xchg
or
inc
jmp
pop
sbb
sbb
push
xor
sub
jp
aam
test
test
scas
inc
rep
sub
cli
not
xlat
or
cmpsb
js
jno
dec
popa
mov
insl
ret
out
out
xor
bound
pusha
sbb
pusha
xor
loope
sub
mov
jo
lret
test
rclb
mov
shll
mov
add
mov
inc
fisubl
cmp
das
xlat
mov
mov
shl
mov
dec
pop
or
psllq
int3
jg
movsb
push
mov
mov
inc
stc
loope
pop
dec
sub
or
push
inc
jecxz
jle
mov
fsubr
lret
sub
sub
test
jl
mov
xor
aaa
jge
in
add
pop
mov
rol
out
mov
adc
mov
add
mov
shr
sub
mov
hlt
rol
out
lcall
les
test
xchg
push
and
add
sub
popa
stc
adcb
dec
out
dec
mov
mov
cmc
inc
jle
les
jmp
shr
int
push
shll
adc
jl
shll
dec
ret
push
adc
rcr
in
or
in
imul
jle
shll
nop
jp
call
or
test
sub
mov
mov
jge
cwtl
in
push
dec
fbld
mov
jae
inc
or
loopne
fwait
out
lds
mov
ljmp
cmpsb
movsl
pmaxsw
movsb
sbb
rcr
dec
in
push
stos
pushf
call
scas
pop
jbe
test
inc
jnp
dec
mov
push
clc
daa
push
mov
repz
aad
push
enter
sbb
cmp
lret
dec
cmpsl
jl
jb
insl
dec
mov
xor
xor
fs
cmpsl
push
sub
dec
xlat
dec
sbb
lcall
jbe
stc
leave
mov
mov
dec
cmpsb
xchg
or
xor
inc
xor
lcall
rolb
jg
out
frstor
add
repnz
sbb
ljmp
dec
jne
pushf
push
movsl
inc
mov
test
pop
cmpsb
nop
cmp
mov
pop
cmp
jno
loope
push
push
push
shrl
adc
sbb
cmp
movsb
mov
xor
test
enter
ficoml
jns
aam
test
and
sbb
jmp
clc
aad
jae
mov
ja
enter
add
mov
sub
jns
imul
add
cmp
push
jmp
jb
xor
pop
scas
loope
fwait
and
in
xchg
iret
pop
shrl
jecxz
cmp
push
push
mov
mov
clc
mov
push
addb
pop
insb
jp
jecxz
mov
enter
lods
add
adc
jns
mov
lret
loop
lea
cmp
das
cmp
leave
mov
js
in
shlb
pop
adc
call
sub
rolb
mov
dec
jns
and
int3
jmp
enter
popa
adc
adc
imul
imul
fdivl
adc
out
pushf
stos
enter
sbb
stc
iret
jo
shll
pop
xor
sbb
aas
lret
push
mov
xchg
daa
pop
mov
mov
std
out
es
pushf
add
pushf
sti
or
shll
int
lahf
test
insl
jl
cmp
dec
cli
push
bnd
xacquire
mov
cmp
mov
pusha
addr16
pusha
lcall
jbe
adc
popf
test
mov
sub
into
int
jnp
loope
or
je
je
inc
jnp
scas
stc
pop
cld
stos
mov
xchg
subb
fcoms
xor
adc
out
pop
or
cmpb
mov
into
and
fwait
popf
push
shl
add
ljmp
xor
cmp
movsl
std
inc
aam
add
cld
mov
cmc
mov
ljmp
add
out
iret
xor
and
pop
aas
mov
lea
jg
jg
mov
jbe
stos
sahf
arpl
scas
add
inc
insl
jle
dec
push
pop
xor
inc
dec
and
sar
mov
cwtl
test
imul
rcrb
cs
pop
cmp
out
fdivr
push
jl
lret
jno
stos
adc
leave
xlat
iret
cmp
mov
mov
stc
lock
mov
dec
scas
nop
ss
fistl
addr16
rol
popa
push
rcr
xchg
xchg
or
mov
jne
pop
cmpsb
loop
inc
inc
stc
mov
jns
aam
xor
mov
sub
lock
out
hlt
adc
mov
decb
push
hlt
mov
dec
adc
loopne
pop
xor
xchg
xor
lahf
mov
mov
ficoml
jne
add
out
mov
and
shrl
cmp
js
cmp
inc
pop
or
mov
mov
testb
jbe
jl
jmp
lahf
and
out
fs
pusha
inc
jnp
fcomi
popf
mov
xchg
push
je
popa
or
ret
mov
add
jg
dec
lcall
add
ret
push
jnp
jmp
or
mov
lret
cmpsl
xlat
imul
es
pop
fidivl
test
adc
jo
sub
inc
call
daa
sti
and
int3
loope
jp
stos
inc
sbb
xor
mov
cmp
fists
xor
push
sub
iret
and
xor
movsl
es
mov
fwait
xor
pop
movsl
mov
or
or
or
and
imul
push
or
pop
test
xchg
sbb
mov
push
xor
xchg
scas
inc
jnp
es
imul
jo
push
push
dec
xor
scas
scas
scas
std
sbb
fnstcw
pop
repnz
mov
scas
adc
lock
jle
out
inc
out
out
pop
daa
mov
dec
push
ret
adc
pop
ret
filds
fdivrl
xor
add
in
mov
lret
es
sub
scas
inc
in
pop
add
xchg
xor
sbb
fbstp
jno
jle
nop
outsl
pop
cmpsl
popa
jnp
ret
push
daa
mov
jns
mov
push
or
or
xchg
sti
pop
push
dec
push
hlt
mov
out
rorl
arpl
stc
and
das
popf
mov
ret
jbe
cmp
adc
mov
mov
stc
dec
cmp
xor
cltd
jecxz
sbb
repnz
cli
popf
sub
cmc
test
cmp
std
je
mov
fisubrs
jae
mov
mov
aaa
mov
mov
sbb
aas
adc
mov
ret
jmp
mov
mov
sub
loope
push
cwtl
dec
in
xchg
inc
pop
jl
inc
sub
pop
repz
ss
aaa
pop
sbbl
pop
xchg
loop
scas
pusha
pop
pop
lret
shlb
dec
or
xchg
mov
sbb
into
adc
sbb
add
gs
mov
mov
mov
mov
sbb
inc
xlat
pop
dec
mov
notl
add
adc
fs
pop
cmp
shll
fiaddl
push
divb
inc
mov
ja
pop
xchg
shrl
lods
into
dec
push
sarl
pop
adc
popa
filds
repnz
fimull
mov
jle
lock
imul
mov
cmc
push
mov
call
and
cmc
dec
shrl
and
push
add
sbbl
daa
stos
sub
repz
aas
mov
add
mov
sub
pusha
cmp
ljmp
cs
insl
xor
gs
insl
pop
loop
sbb
inc
pop
mov
and
add
bound
push
add
xor
mov
shr
lds
pop
sbb
in
icebp
push
push
test
xchg
es
setge
xor
fwait
pop
inc
jbe
mov
mov
xchg
xor
pop
in
jg
jecxz
add
insb
ret
or
lock
adc
pop
dec
pop
shlb
sti
jo
ss
repnz
outsl
shrl
notb
xchg
int
inc
stc
adc
scas
lods
fwait
sbb
xchg
test
sub
imull
jbe
cmp
dec
add
repnz
bound
push
and
jae
xchg
push
fwait
add
mov
inc
outsb
push
fwait
pop
mov
fwait
cmc
dec
fxch
or
add
pop
sbbl
cmp
outsl
mov
push
inc
sbb
mov
xchg
test
cmp
inc
mov
js
adc
and
mov
in
ljmp
hlt
sub
testb
jnp
mov
push
inc
mov
xor
mov
cmpsl
loope
push
int
mov
inc
outsl
xchg
push
mov
sbb
fsts
test
in
pop
fmul
addb
cmp
sbb
int
cmp
rcrl
xor
xor
imul
icebp
add
lods
sub
mov
jp
push
and
adcl
pushf
inc
call
lahf
push
push
jno
xchg
divl
or
js
clc
mov
xchg
loope
xchg
push
scas
mov
jle
mov
mov
dec
fdivs
jne
fadd
arpl
bound
jecxz
pushf
lcall
mov
push
fdivrl
faddl
and
pop
loop
lret
mov
pop
or
ss
xchg
mov
sbb
insl
xchg
test
push
jnp
ljmp
sub
jle
add
cmp
add
xorb
dec
cmp
pop
into
sub
shrl
ficoml
cmpb
or
mov
loopne
gs
repnz
hlt
in
sub
call
aad
push
and
mov
inc
ret
mov
xor
test
aaa
enter
and
mov
inc
shrl
and
test
es
lcall
push
mov
sahf
jl
adc
flds
dec
and
sbb
jge
imul
mov
jbe
fldt
into
imul
dec
outsl
push
jge
or
mov
repnz
mov
mov
stos
ret
popa
decl
dec
in
xchg
xchg
jnp
push
mov
movsl
cmp
cmp
movsb
adc
lcall
inc
clc
leave
out
push
xor
out
daa
pusha
je
xorl
outsl
imul
push
and
sbb
dec
mov
fs
ja
pop
pop
add
mov
lock
xchg
pop
mov
lock
out
das
aaa
fstpt
sbb
lea
add
cmp
xchg
add
or
pop
pop
in
cmp
cmp
bound
pop
in
popf
jo
lret
or
les
in
push
ds
adc
scas
cmp
fisttpl
loop
inc
mov
mov
xlat
movsl
out
push
lods
je
mov
jmp
cwtl
mov
addl
push
arpl
pusha
and
mov
leave
mov
pop
rolb
dec
movsl
xchg
movsb
mov
mov
and
nop
sbb
jg
inc
test
xor
shll
stos
sub
inc
std
lds
mov
and
addr16
movsb
mov
add
je
outsl
jne
aaa
sahf
mov
mov
add
add
je
mov
nop
inc
cmc
xor
ja
nop
in
sbb
mov
mov
jb
cmpsb
dec
or
dec
inc
jne
fwait
and
in
dec
mov
cmpsb
add
jmp
push
movsl
lock
fldenv
xlat
xor
sub
mov
cmpsb
jnp
stc
adc
push
test
dec
repnz
cmp
mov
push
out
xlat
shrl
push
inc
cli
fdivrs
mov
loopne
daa
xchg
andb
or
daa
sub
fldl
dec
roll
scas
xor
sub
sbb
mov
sub
cmp
in
pop
add
cmpsl
cs
imul
ja
rorb
rcrb
xor
cmpsl
xchg
lcall
fwait
shll
jbe
xchg
sbb
dec
cmp
js
mov
sbb
insb
push
add
push
loop
lret
mov
mov
or
jl
lods
push
mov
outsl
jp
xchg
mov
jns
addr16
xor
int3
dec
pop
std
xor
imul
nop
cmp
inc
arpl
adc
mov
call
int
cltd
test
shlb
xor
out
add
mov
in
mov
push
bound
mov
cltd
cltd
xor
jmp
filds
mull
push
mov
fildl
addr16
lret
pop
shl
je
out
lahf
xchg
sbb
add
dec
cmp
mov
jle
adcb
and
dec
push
mov
push
mov
repnz
and
cwtl
push
insl
fucomip
add
test
mov
loopne
cmpsb
mov
push
jbe
xor
fwait
mov
repnz
sub
leave
je
in
lret
sub
dec
xor
sub
or
iret
aaa
icebp
ja
and
lea
iret
add
decl
jmp
xor
cmc
test
dec
addl
fs
aaa
mov
in
outsb
cli
lds
iret
testl
std
loop
es
ss
jge
imul
jge
fiadds
xlat
gs
sahf
mov
cwtl
sub
inc
push
dec
push
ss
add
adc
add
add
sarl
jae
inc
mov
dec
repnz
roll
in
imul
flds
add
sbb
test
loopne
data16
pop
test
pop
ljmp
jecxz
mov
cmp
xlat
inc
push
xorl
sub
or
out
push
and
lcall
daa
mov
jno
jb
shll
sub
cmc
xchg
add
in
and
xchg
cld
scas
std
test
cld
dec
int
cmp
push
adc
jl
lods
data16
pop
dec
mov
cmp
mov
and
js
fcoml
test
nop
repz
jns
rorl
lods
cld
mov
scas
mov
sbb
mov
dec
fidivrs
xchg
pop
inc
xchg
inc
mov
and
mov
shll
push
daa
inc
mov
mov
nop
add
popf
stc
and
daa
mov
ja
dec
pushf
outsb
out
dec
push
data16
test
data16
fdivrs
lods
mov
in
popa
cmp
and
out
inc
imul
push
jle
xchg
call
addl
out
xor
fld
nop
pushf
push
pusha
push
mov
call
into
lea
inc
sub
inc
lcall
mov
in
jle
out
cwtl
aas
mov
out
xor
jl
or
pop
in
pop
rorb
xchg
push
das
fmull
add
dec
movsb
test
ret
outsb
lcall
movsb
or
sbb
adc
push
out
sub
and
dec
iret
stc
mov
out
inc
sub
mov
mov
outsl
cmpsl
rcrb
dec
mov
adc
jmp
inc
push
rclb
mov
outsl
in
mov
out
mov
insb
dec
xchg
ja
outsl
pop
in
daa
les
mov
sbb
adc
sub
cmp
ja
cmp
push
add
addr16
test
pop
push
jg
jbe
lock
and
sbb
mov
mov
mov
inc
in
mov
jno,pt
ljmp
es
cmpsl
and
mov
pop
mov
iret
int3
scas
xchg
adc
jne
pop
mov
dec
mov
ja,pt
imul
xor
xchg
test
negl
inc
inc
pop
ficoms
cltd
mov
dec
fldl
pushf
cs
cmp
cmp
call
lock
dec
jle
and
scas
call
cltd
and
sbb
leave
insb
push
mov
cmp
shll
mov
mov
cmp
fbstp
leave
mov
cmpsl
stc
push
pop
sub
push
enter
aaa
cli
push
and
pop
pop
xchg
cmp
das
jae
mov
mov
daa
mov
pop
ja
jnp
imul
bound
pop
es
inc
push
lock
shr
insb
xchg
arpl
je
in
cmc
ljmp
loope
pop
mov
clc
sbbl
xlat
aam
js
or
fisttpll
push
or
rclb
push
cltd
int3
mov
jns
sbb
push
sub
xor
dec
mov
aaa
pop
test
aaa
cmp
add
mov
dec
add
cli
and
or
outsl
mov
push
sbb
sub
int3
push
inc
dec
leave
aaa
fiadds
mov
aam
sbb
add
sti
mov
mov
out
in
shll
mov
jns
pop
enter
adc
dec
lods
mov
xor
jbe
adc
xor
inc
test
mov
mov
setp
arpl
mov
mov
cmp
movsl
push
sti
pop
pop
or
lcall
fimuls
aas
test
ficoms
out
rorl
repz
push
push
cwtl
xchg
cli
adc
add
inc
mov
and
inc
jle,pn
orb
lods
push
notl
lahf
mov
sub
dec
repz
in
xchg
fsubs
pop
jmp
leave
lock
hlt
add
jnp
push
mov
test
ljmp
rorl
outsl
repnz
es
add
fs
sub
pop
dec
std
jle
pop
into
test
sub
mov
jp
mov
inc
or
push
lods
and
add
xor
sahf
dec
cwtl
xchg
or
mov
dec
lods
sti
dec
iret
inc
les
mov
jge
hlt
jg
cmp
mov
xchg
in
dec
leave
push
loopne
ljmp
popf
pop
das
cmc
jns
rcr
sbb
push
or
and
add
clc
out
jg
sbb
mov
xlat
jge
roll
push
das
lock
hlt
popf
xchg
dec
inc
jecxz
daa
mov
fcompl
std
out
or
out
dec
ljmp
sub
mov
je
pop
rol
ret
mov
dec
sbb
in
mov
xchg
xchg
adc
ret
or
adc
data16
dec
fdivl
paddusw
or
sbb
push
mov
std
jnp
das
sbb
and
lret
add
adc
mov
cld
jge
mov
imul
push
loop
lea
stos
loopne
inc
cmp
mov
mov
pop
mov
cmp
cmp
daa
in
or
insl
fwait
jmp
addr16
cmp
jo
xchg
les
dec
cltd
lock
xor
or
push
popf
push
mov
loope
fs
fstl
mov
push
jbe
rclb
and
loop
sub
pop
or
imul
cmpsl
xor
mov
aaa
mov
cli
lahf
loopne
lock
jno
xor
mov
sbb
insl
popf
aam
cmp
daa
jno
mov
mov
ljmp
ret
pop
mov
mov
mov
inc
adc
jp
xchg
leave
pop
fwait
jp
loope
lds
loope
fistpll
mov
or
xor
xchg
mov
sar
psubw
loopne
jb
xor
enter
push
loope
movsl
fs
insl
and
mov
sbb
inc
lret
jno
enter
popa
scas
pop
sbb
push
je
xchg
or
lcall
lahf
adc
mov
add
orb
adc
lar
inc
addr16
or
std
out
push
andl
imul
lcall
pop
les
adc
lds
ds
fs
mov
jnp
pop
mov
mov
loopne
cwtl
cld
or
inc
xor
pop
sbb
mov
outsl
or
insl
aas
int
mov
and
pop
movb
jmp
mov
pop
sbb
mov
ret
pop
or
inc
sub
xor
test
test
cmp
mov
add
sub
push
inc
cmp
outsl
sbb
dec
sbb
sbb
pusha
shlb
into
mov
and
mov
ret
pushf
sub
sti
push
cmc
inc
lcall
or
out
push
push
lods
clc
sub
pop
and
push
icebp
mov
loop
jnp
out
push
or
pop
dec
lock
dec
idiv
fs
out
jecxz
dec
sbb
sbb
fidivrl
adc
push
hlt
xchg
sbbl
out
push
pop
sub
pushw
push
aas
lcall
out
xor
ret
int
or
mov
sub
cltd
cmp
sti
pop
inc
xchg
or
lret
mov
pop
das
fucomi
and
xchg
iret
mov
call
cwtl
cmp
add
out
pop
mov
mov
cwtl
jmp
jo
test
dec
ss
into
inc
fidivl
mov
cmp
xor
or
pop
xchg
mov
out
push
mov
in
mov
out
and
sbb
sbb
daa
mov
sub
mov
in
mov
ret
xor
inc
insl
cli
inc
mov
sti
lret
lcall
shrb
and
imul
push
lea
sub
sbb
mov
sub
filds
jbe
cwtl
std
push
fsubs
jo
and
sarb
ss
cmp
dec
sti
rorl
jmp
lcall
xchg
jle
jne
push
mov
in
es
inc
push
pop
mov
push
mov
hlt
xchg
and
leave
mov
rorb
jae
and
pop
mov
stc
fidivs
movsb
dec
in
leave
inc
popf
dec
cltd
cmp
daa
int3
xor
idiv
cwtl
add
sbb
xchg
mov
aad
mov
ds
icebp
jecxz
sub
push
add
sbb
mov
jb
pusha
test
dec
xchg
lock
inc
or
out
lds
sbb
add
mov
push
daa
jns
mov
scas
inc
nop
lock
dec
xchg
fmull
sbb
mov
jp
mov
or
test
subb
sbb
push
inc
adc
sub
pop
rclb
sbb
lock
gs
sub
dec
mov
xor
and
pop
mov
iret
inc
out
je
xchg
js
sbb
cli
fdiv
aaa
push
movsb
dec
pop
rorb
jp
adc
data16
lods
sub
dec
xchg
fldt
out
mov
and
and
testl
je
cld
lds
xchg
dec
pop
rol
inc
jp
ja
stos
enter
minps
cli
enter
pop
notl
imul
leave
inc
dec
gs
int3
jecxz
mov
popf
aam
inc
lods
fistps
popa
lahf
inc
sub
cmp
cmpsb
repnz
aas
sub
dec
mov
pusha
int
cmpsb
std
ret
jnp
pop
push
in
jmp
ja
pop
scas
mov
jle
lock
push
adc
cmpsb
jmp
loop
and
mov
xor
fnstcw
push
push
push
pop
sbb
testb
sub
dec
cmp
push
inc
xchg
push
pop
add
repz
dec
cmpsb
cs
dec
cs
insb
daa
push
xor
push
dec
jmp
je
cmpsl
movsl
arpl
and
mov
push
call
outsl
shl
lcall
call
sbbl
sbb
dec
fdivr
in
ss
mov
sahf
xor
pop
adc
mov
in
mov
fdivl
push
aad
adc
aam
cwtl
ss
fstpl
dec
jne
cli
mov
dec
ret
xor
push
loope
mov
adcb
outsl
mov
xor
mov
test
fisubs
xor
cmp
in
mov
jno
jle
push
outsl
ret
inc
push
mov
jb
aam
add
les
sarl
sbb
mov
shrl
imul
aam
nop
push
pop
gs
ds
xchg
bound
mov
out
neg
aas
pop
mov
es
ja
push
loopne
mov
pop
test
mov
jbe
ja
cmp
sub
push
loopne
push
inc
movsb
jge
dec
lock
push
adc
mov
adc
outsb
enter
xor
and
jp
xor
gs
mov
ds
mov
cwtl
repz
mov
lcall
cld
bsr
pop
hlt
push
fcomps
popf
and
out
and
mov
test
mov
lods
lcall
or
popa
cld
dec
mov
cmp
sub
and
jne
sbb
fxch
adc
popf
cwtl
inc
imul
push
xchg
imul
add
pusha
sub
fmuls
scas
arpl
stos
sub
xchg
sbbb
xchg
cmp
push
pop
pop
and
in
cmp
dec
pop
jg
lret
dec
push
xchg
dec
dec
xchg
pop
xchg
pop
mov
fisubrl
mov
xchg
pop
pop
add
sub
ss
sbb
ja
xchg
and
cld
lcall
dec
jno
jle
sub
adc
fidivrs
lahf
ljmp
mov
push
fisubl
pushf
push
xchg
adcl
out
mov
mov
sub
xchg
mov
inc
arpl
je
and
xor
jg
dec
std
jne
ficoms
popf
hlt
jbe
mov
int
and
fyl2x
and
adc
and
or
xor
int3
pop
lods
push
fwait
adc
fimull
jno
pop
das
out
and
xor
fcmovu
arpl
lahf
xchg
aad
out
fbld
fisttps
jecxz
xchg
push
popa
cwtl
add
sarl
cmp
xor
fldt
imul
add
cs
divl
out
mov
dec
mov
out
test
pop
leave
push
clc
jnp
loop
inc
mov
push
fs
add
adc
and
movsl
pop
insb
or
xchg
std
and
mov
push
js
inc
lret
lea
out
xchg
aas
push
cwtl
pop
add
lods
cmpsl
sbb
shrb
aad
cs
loopne
shlb
adc
stos
roll
jno
mov
and
repz
adc
sbb
out
xchg
sub
sbb
inc
push
into
cmp
jo
es
into
mov
mov
mov
clc
icebp
and
or
sub
jb
inc
mov
test
sub
dec
xchg
les
fcoms
cs
push
ret
mov
dec
and
and
sub
out
movsl
jo
int
jp
test
les
lods
mull
mov
jno
cmc
das
in
fsub
pop
and
cmp
mov
clc
lods
outsl
sbbl
add
fisttpl
pop
fists
and
and
mov
add
fldenv
sbb
aam
hlt
mov
mov
xchg
test
xchg
jg
adc
and
dec
out
lahf
cmpsb
adc
sarb
adc
adc
mov
push
inc
cmpsl
and
das
add
sub
sub
push
jns
inc
lret
ficomps
mov
sbbl
mov
insb
sbb
mov
stc
andb
hlt
fiadds
pop
cmp
mov
adc
in
fwait
cmpsb
outsb
mov
jmp
xchg
test
or
sbb
mov
mov
cwtl
xchg
add
stos
mov
in
xchg
imul
sbb
lods
imul
insb
mov
push
adc
add
outsb
test
lods
inc
pop
clc
cmp
loopne
jae
out
loop
ja
hlt
mov
dec
shrb
sbb
jp
enter
test
test
mov
mov
or
mov
ljmp
mov
xor
push
pushl
and
cmp
stos
jmp
outsl
or
mov
stc
mov
mov
push
pop
mov
pop
adc
call
or
cmp
shlb
mov
sbb
lahf
mov
stos
orb
add
jb
xorb
inc
push
ficompl
mov
mov
shll
stc
dec
jle
sbb
in
and
stos
sub
shr
test
xchg
jbe
jge
ret
subl
imul
jge
movsb
cmpsl
mov
cwtl
repz
cwtl
sbb
aaa
rcll
pop
dec
ds
aad
lcall
test
and
add
subl
clc
out
ja
mov
jns
xchg
mov
jl
mov
lcall
mov
cltd
out
fsub
loopne
mov
xorb
scas
lcall
sti
mov
cmp
repnz
adc
insb
out
or
sbb
lret
jb
dec
insb
es
dec
icebp
cmc
cs
sub
adc
dec
inc
jns
in
ds
push
jns
inc
fs
pop
cltd
fsubrs
push
inc
out
cli
mov
xor
clc
andb
push
sahf
adc
mov
pop
out
pop
cwtl
and
xchg
shll
mov
adc
outsl
mov
cmp
out
and
test
js
les
stos
insl
adc
pop
mov
sub
xchg
aaa
push
scas
inc
cltd
add
push
sbb
fldt
scas
addb
add
push
pop
or
cvtps2pd
xchg
bound
shlb
xor
and
fidivl
iret
enter
ret
popf
fildl
or
arpl
iret
pop
sbb
mov
out
pop
push
mov
rcll
subb
mov
jnp
xor
sbb
rolb
int3
outsb
movsl
mov
mov
add
dec
xor
iret
or
bound
rcrl
mov
add
loope
andl
push
push
adc
mov
into
cmp
inc
int
mov
mov
mov
or
add
mov
xor
sbb
xchg
ffreep
jp
push
inc
and
fistpll
inc
leave
push
andb
shlb
sbb
call
push
test
sub
or
pop
or
data16
mov
roll
lds
daa
out
and
pop
and
movb
call
cmp
sub
add
rolb
repz
add
adc
mov
xchg
push
push
daa
xchg
jne
ret
mov
rcr
out
daa
cwtl
sub
mov
imul
adc
pop
les
mov
out
and
mov
shlb
out
mov
sub
bound
and
adc
or
xor
inc
loop
lock
outsb
jecxz
test
lea
jno
inc
dec
ret
out
and
pop
shrl
push
addb
sbb
mov
pop
adc
mov
mov
std
xchg
mov
outsl
cmp
lahf
push
xchg
insb
cwtl
iret
js
or
and
push
enter
mov
icebp
push
mov
mov
into
mov
pop
sbb
out
push
or
enter
popf
cmpb
inc
jno
inc
aam
inc
aad
sti
rcrb
fsubs
or
xchg
dec
sbb
sbb
mov
out
xor
jle
fildll
cmpsl
inc
pop
xlat
mov
xchg
dec
inc
pushf
adc
jmp
xchg
shll
xchg
or
mov
push
mov
orb
sub
jo
or
or
mov
fsubrp
test
sbb
sub
xchg
and
xchg
pop
add
ret
jae
pop
jne
push
rcrl
sbb
xchg
cmp
or
xor
lock
fcmovb
inc
fstpt
cmc
lcall
push
mov
or
pop
imul
xchg
mov
sbb
bound
pop
sbb
xor
jb
push
adc
or
pop
lds
clc
xchg
or
sub
addb
popa
and
insb
test
push
mov
add
or
fsts
out
xor
aaa
btr
into
daa
sub
pop
mov
pop
mov
out
clc
test
dec
jns
outsb
and
inc
cmp
cmc
jo
ds
lahf
mov
jecxz
addr16
jbe
mov
pop
iret
add
in
xchg
arpl
cmp
out
fsubl
jecxz
lcall
in
push
jbe
mov
sbb
pop
cmp
icebp
andb
sub
out
xchg
fldl2e
or
roll
lret
adc
and
loop
cltd
ljmp
imul
jp
scas
or
sub
stos
cmpsl
pop
rcr
sbb
xchg
mov
arpl
arpl
mov
cmpsb
add
es
push
pop
dec
rolb
outsb
jbe
sbb
pop
mov
aam
xchg
lret
into
pushf
xchg
in
orl
adc
aaa
pushl
sbb
cmpsl
mov
add
push
adc
adc
mov
imul
stc
scas
cmp
enter
divl
arpl
push
fcoml
gs
lret
stos
mov
jno
ja
inc
sub
push
mov
aaa
xchg
fadds
mov
jmp
mov
out
dec
mov
cmp
xchg
sbb
sahf
les
xor
sbb
mov
cmp
lods
stc
aad
xor
sbb
aaa
mov
or
mov
call
dec
sub
push
or
jnp
mov
mov
incl
test
mov
adc
add
mov
les
mov
jno
mov
or
inc
idivb
mov
je
sub
jg
testl
in
mov
cld
xor
arpl
lods
in
test
out
imul
rol
scas
inc
fadd
fbstp
cmp
pusha
jle
ret
or
add
pop
sbb
into
nop
mov
shr
adc
ret
mov
jo
add
jno
popa
ret
rcrl
fnsave
inc
cmp
cmp
fisubs
loop
sbb
xorb
mov
mov
mov
stc
enter
xor
std
lret
aad
fsubs
fcompl
jns
push
dec
movsb
sub
mov
mov
xlat
hlt
xor
leave
and
xchg
dec
xor
xlat
adc
xlat
jnp
fdiv
sub
int3
lods
xchg
or
xor
sub
imul
rcrb
lods
testb
in
in
popa
std
pop
in
push
and
fsubp
push
cmpsb
ja
push
mov
mov
pop
jp
mov
pop
fmull
mov
insb
cwtl
add
mov
and
pop
int
jo
jmp
xchg
push
lret
and
fcoms
xor
cmp
adc
jl
lahf
mov
lcall
insl
sbb
add
add
in
test
ret
xor
sbb
pop
cmpl
inc
popf
or
pop
dec
mov
sbb
inc
in
test
inc
je
lea
clc
out
aaa
jl
stc
jne
sbb
xor
push
sbb
and
lea
lods
loop
rcrb
jecxz
inc
jb
in
mov
dec
decl
daa
adc
icebp
in
add
inc
ljmp
pop
pop
jle
outsl
mov
pop
popa
fwait
inc
mov
sbb
inc
addr16
xor
sahf
or
cmp
cs
jb
cltd
push
xor
out
into
aaa
cmpsb
mov
xchg
or
or
aam
sub
rorb
cmpb
shl
scas
jns
aam
sub
enter
lahf
xchg
out
cmp
imul
inc
stc
mov
mov
shlb
xchg
mov
jnp
jne
push
jle
ss
fidivrs
jl
mov
call
mov
cmpsl
add
cmp
dec
js
ret
and
xchg
or
fimull
imul
xor
xor
mov
xor
mov
cmpsl
in
into
add
in
mov
lock
xor
xchg
mov
jb
into
std
scas
push
cltd
add
rcrb
pop
stos
mov
push
addb
add
push
adc
pop
cmp
andl
pop
scas
adc
pop
out
mov
fidivrl
aam
xlat
push
mov
out
fldenv
aaa
shll
add
imul
mov
mov
jp
and
push
and
adcl
inc
je
inc
fs
pop
rcll
cmpsb
xchg
adcb
cmp
cmp
cmp
dec
shll
inc
sub
dec
cli
adc
aad
shl
adc
mov
xor
movsl
mov
sub
mov
mov
sbb
mov
cmp
shlb
insl
insb
stos
xchg
mov
push
jmp
adc
loopne
mov
repz
mov
mov
leave
and
jg
cmpsb
and
xor
adc
shll
es
push
jbe
push
cmpsl
lock
ret
sahf
mov
dec
gs
push
sti
jae
push
lahf
sub
cwtl
jp
xor
inc
test
cmp
ljmp
and
outsl
and
jne
dec
jl
mov
dec
or
lcall
leave
addl
mov
into
nop
mov
fs
prefetch
pop
dec
call
dec
and
test
cmc
and
add
les
loope
addb
jge
mov
ret
cmp
cmp
das
insl
xchg
add
push
aaa
mov
cmc
mov
pop
aaa
xchg
ss
or
mov
mov
adc
sub
cld
xchg
das
mov
imul
movsl
mov
push
pop
enter
mov
or
rorl
sbb
addl
sahf
sbb
jns
adc
sbb
xor
lcall
repz
push
sub
push
repnz
test
cltd
stc
mov
shrb
jns
xor
cmpsb
in
and
inc
in
stos
add
or
aaa
fs
sar
mov
push
insb
in
enter
xchg
push
in
pop
or
clc
mov
sub
jmp
jno
clc
bound
cmp
sbb
push
fdivl
inc
lods
push
cld
jae
mov
and
inc
sbb
dec
fnstcw
xor
dec
add
loope
adc
mov
lods
lods
jbe
leave
pop
faddl
out
leave
mov
cmc
mov
xlat
js
in
loopne
jne
pop
aam
xor
pop
outsb
sub
mov
enter
inc
shll
mov
outsl
push
push
jnp
mov
sub
mov
and
or
jg
cld
nop
shlb
mov
add
loop
leave
test
cmpsl
sbbb
xchg
or
cmpsb
pop
je
insl
dec
jecxz
movsl
not
int3
pop
ja
lret
mov
aas
xlat
data16
jp
mov
mov
mov
fnstenv
cmp
mov
int
lock
gs
in
push
push
cmp
xchg
scas
cmp
add
push
imul
add
dec
idivb
test
les
jl
test
inc
adc
sub
js
dec
dec
sti
inc
inc
mov
pop
jle
push
ds
mov
sub
jns
and
rcrb
mov
adc
ret
sbb
mov
cmp
arpl
mov
push
aad
mov
mov
call
std
test
jle
xchg
push
bound
xchg
mov
repz
fldt
push
mov
mov
mov
in
pop
inc
test
pop
xlat
stos
outsl
div
leave
cmp
mov
ds
fsubrp
jnp
gs
das
lea
shll
stos
xchg
fdivl
push
insb
es
ret
ss
cmp
cwtl
pop
mov
in
mov
rol
dec
cmp
nop
or
mov
les
mov
outsl
pop
pusha
pop
repnz
cmp
sub
mov
lret
cmp
shlb
shll
mov
sbb
mov
push
jmp
xchg
jns
das
sarl
inc
lret
pushf
iret
shl
mov
adc
dec
mov
lcall
or
in
pushf
and
adc
mov
mov
cmp
filds
cmp
test
cmp
jae
push
mov
js
mov
sbb
sbb
lock
test
imul
push
ud2
int
lret
sub
in
jmp
aaa
rcll
xchg
mov
lret
stos
fisttpll
jae
or
cs
nop
daa
popa
outsl
imul
cmp
test
pop
xor
sbb
inc
repz
clc
xchg
mov
jg
nop
or
mov
stos
push
mov
xchg
out
and
mov
or
inc
mov
sti
mov
jae
push
mov
mov
sti
push
aas
add
xor
xor
ret
jp
inc
xor
fstp
mov
lods
or
cmp
mov
out
push
cli
cs
inc
test
mov
mov
mov
sarl
repnz
pop
imul
out
mov
addr16
fisubrs
call
sbb
jg
xor
inc
into
fs
lahf
push
add
scas
inc
mov
les
jae
pavgb
pop
pop
lds
mov
xchg
sub
push
jl
sbb
pop
jno
mov
or
inc
sbb
sahf
ja
jae
rcrb
ret
dec
sbb
push
addr16
or
addr16
sub
add
ret
push
xchg
xchg
ret
pop
pop
and
push
push
loopne
in
es
xchg
mov
cmpb
adc
mov
push
rcrl
cwtl
adc
pop
movsb
hlt
popf
push
xor
pushf
xchg
adc
sbbb
sti
ret
sbb
mov
aam
sub
mov
adc
pop
js
mov
rcrb
mov
cmc
ds
ret
cwtl
push
adc
mov
icebp
ficoml
lret
fucomi
adc
xor
movsb
xchg
repnz
mov
bswap
sahf
cli
mov
je
notb
add
cmc
xchg
int3
cld
rolb
rolb
mov
pop
xor
out
enter
outsb
push
cli
or
sub
sarl
cmp
mov
cmpsl
mov
mov
xchg
cmp
push
jmp
outsl
push
xchg
add
ret
push
jmp
pop
xor
lret
scas
fwait
add
inc
inc
setb
nop
repnz
xchg
aas
mov
dec
rcr
icebp
mov
and
in
dec
push
pop
mov
testb
std
insl
xchg
insl
arpl
inc
mov
jl
adc
push
push
cmp
xor
subb
mov
jo
lods
arpl
jo
mov
lahf
out
mov
or
fwait
and
call
pusha
fnstcw
jb
loop
shrl
jge
push
mov
jne
sub
aaa
mov
movsl
imul
mov
push
xor
xor
adc
shll
pop
pusha
cmp
jne
sbb
xlat
jbe
jmp
mov
xor
insl
daa
push
pop
jns
dec
xchg
fcmovu
jno
jmp
or
mov
nop
cmpsl
adc
aad
loopne
mov
inc
lods
rorl
sub
out
and
fstl
es
mov
sbb
xor
dec
jb
xor
jns
push
jb
sahf
scas
dec
leave
xor
insl
mov
stos
push
mov
insb
mov
in
jge
into
or
fldt
push
scas
lcall
dec
mov
loop
and
icebp
xor
add
jne
sub
push
xor
pushf
mov
sub
arpl
call
pop
mov
adc
ljmp
pop
test
mov
jb
push
mov
fsubl
jg
ljmp
sbb
aam
mov
scas
and
dec
adc
jg
outsl
mov
or
cmp
lea
das
jns
fs
mov
xchg
clc
xchg
rcrl
mov
ss
aas
ret
and
add
xor
test
jae
jge
pop
mov
xchg
jb
fcoms
or
push
ficompl
add
ret
pop
pop
pop
mov
std
out
sub
sbb
mov
aaa
daa
shll
mov
ret
cmp
sub
lcall
imul
and
mov
mov
sub
fmuls
jbe
stos
je
mov
sub
mov
fldenv
inc
shll
pop
mov
ja
cwtl
adc
icebp
jmp
xor
jmp
test
pop
ljmp
aas
mov
popf
jnp
insl
fs
xchg
xchg
jbe
divl
je
dec
xchg
push
gs
in
pop
sti
dec
jl
fisttpll
shl
mov
rcrb
inc
push
orl
out
rcl
aas
scas
enter
in
dec
inc
push
adcb
or
adc
pop
sbb
lcall
rcll
pushf
stc
xchg
add
sbb
xchg
pop
gs
mov
xchg
jp
dec
fisubs
push
mov
xchg
jmp
cltd
je
and
lahf
test
mov
out
mov
aad
dec
jns
xchg
dec
dec
pop
and
or
scas
das
cmp
pop
inc
jge
jae
rcrl
adc
sbb
sar
dec
mov
inc
sbb
or
jnp
popa
test
cmp
test
dec
push
rol
adc
dec
jmp
lods
das
call
ss
rcll
dec
out
outsl
repnz
sub
and
cmpsb
cmp
outsb
and
in
scas
mov
repz
cmp
sub
loopne
das
cmp
test
pop
ret
xor
and
lcall
sub
movsb
jecxz
out
push
andb
push
xor
dec
cmp
pop
inc
push
sahf
loop
or
movsl
pop
jnp
test
mul
or
in
pop
and
add
andb
insb
push
dec
cmc
or
mov
pop
dec
adc
sbb
push
daa
repnz
shll
out
movb
sub
sub
in
cli
and
add
pop
lret
in
pop
and
dec
mov
xor
hlt
cmp
mov
jmp
xlat
fdivrs
pop
rcrb
movsl
jge
fwait
jno
or
int
inc
in
pop
scas
xor
dec
icebp
jbe
insb
int3
dec
adc
mov
sub
or
cld
imul
ret
dec
scas
movsb
sbb
rcrb
and
punpcklwd
xlat
ret
xor
mov
xchg
jmp
dec
pop
cmp
std
js
test
hlt
into
arpl
int3
loop
cmpsl
jae
push
ss
pop
outsb
jmp
inc
mov
add
gs
je
mov
sbb
xchg
pusha
sbb
ss
ja
sti
pop
pop
xorb
cmp
sbb
dec
mov
jo
sub
sub
inc
xchg
sbb
int3
in
and
daa
repnz
jns
sti
bound
pop
fwait
cmp
cmp
adc
mov
int
xor
cmpsl
mov
dec
inc
adc
adc
jmp
cli
dec
ret
mov
adc
add
and
lock
fsubrs
aam
in
out
mov
jne
adc
sbb
in
jg
cs
dec
xchg
push
rclb
clc
sar
repnz
in
dec
arpl
clc
test
sub
push
cmp
lea
sub
adc
lods
stos
push
in
inc
dec
adc
movsb
repz
sub
and
shlb
pushf
mov
adcb
in
fcomi
movd
sub
xchg
lods
aas
adc
inc
roll
mov
mov
jne
sub
sub
and
les
nop
fcoms
mov
mov
stos
clc
mov
or
jbe
test
nopl
mov
push
cltd
push
pushf
incl
sbb
or
mov
lret
mov
popa
cmpl
imul
mul
mov
inc
pop
stos
xchg
lock
mov
test
arpl
inc
fidivrl
jne
mov
push
inc
xchg
int3
loop
and
in
pop
jo
xchg
and
adc
jno
cwtl
ja
call
mov
xorb
test
and
mov
dec
push
mov
mov
or
lods
out
lods
pop
mov
clc
and
sbb
or
popa
and
neg
inc
filds
sub
stc
sbb
xchg
pop
inc
out
xchg
or
jmp
xchg
or
gs
add
je
out
push
push
cld
adc
adc
mov
mov
int
in
hlt
xor
js
int
pop
add
in
shlb
dec
jmp
lcall
cmp
arpl
add
inc
inc
rcl
or
jns
fisttpll
bound
mov
cmp
pop
arpl
push
rcr
adc
cmp
dec
dec
addb
orl
loopne
mov
fs
add
jmp
mov
xchg
sahf
xchg
pop
sub
rorl
xor
aas
lahf
fdivrl
push
sbb
jmp
test
mov
sub
mov
mov
mov
inc
out
jbe
add
pushf
or
sar
int3
mov
lea
lds
push
gs
stos
push
push
xchg
cmp
xchg
sti
daa
mov
sbb
es
push
and
adc
mov
or
mov
add
dec
ficomps
cmpsl
popa
jo
push
cmp
or
jmp
out
rol
fwait
cltd
or
jp
mov
ss
dec
inc
cmp
loopne
jo
mov
add
movsb
repnz
aas
mov
scas
mov
enter
cmpsb
jb
xor
mov
push
push
mov
jb
jmp
les
bswap
flds
inc
fadds
stos
xchg
dec
and
adc
sub
adc
loopne
mov
icebp
push
xchg
pop
xchg
lds
inc
sti
mov
out
hlt
out
sub
or
push
sub
data16
and
dec
xor
je
iret
fs
mov
scas
aaa
ljmp
mov
je
xor
xor
push
addr16
push
push
pop
pop
jns
xor
fiaddl
cs
bound
or
cmp
iret
pop
lock
xchg
sbb
jne
stos
pushf
je
push
or
push
adc
pop
test
dec
aam
lcall
lcall
pop
jo
cmp
inc
cmp
xchg
cwtl
push
pop
mov
jno
mov
sahf
push
outsb
lods
dec
sarl
lds
fimuls
call
jg
sti
sub
mov
fildll
scas
fidivrl
push
pushf
jae
mov
pop
sbb
or
scas
bound
push
or
sub
xor
test
iret
iret
aaa
xchg
sti
orl
daa
sub
lods
adc
xchg
dec
mov
xchg
sbb
gs
dec
xchg
popf
in
cmc
stc
imul
int3
sub
imull
mov
inc
push
pop
mov
pop
sub
mov
test
jmp
pop
xor
js
notb
out
jno
dec
jno
jle
lret
sahf
std
xchg
jle
pop
sahf
in
rcr
dec
mov
es
test
cmp
movsl
iret
in
jecxz
and
cmp
cmp
lea
push
loop
andl
jecxz
xlat
mov
xchg
lods
test
jge
fidivl
push
outsb
pop
sub
adc
jge
neg
insb
scas
push
loopne
sub
push
xchg
adc
daa
adc
dec
pop
in
pop
mov
jmp
inc
push
in
int3
dec
test
mov
dec
movl
mov
adc
call
loopne
adc
fdivl
xchg
adc
or
mov
jmp
dec
sub
mov
cld
cmp
add
daa
add
add
and
xor
add
ds
add
add
dec
pushf
adc
sub
pop
decb
js
jae
orb
out
insl
push
xorl
pop
mov
out
pop
ds
push
mov
test
mov
xchg
clc
mov
add
pop
add
cmp
arpl
cmp
fnstenv
adc
outsb
mov
int3
adc
pop
fwait
dec
cmpl
cmc
jecxz
jle
ss
cmp
loopne
jns
shlb
pop
lds
mov
wbinvd
push
stos
ret
sti
sbb
ret
push
test
test
push
fldl
outsb
jno
enter
mov
popa
inc
hlt
pop
mov
cmp
push
push
inc
sub
cmc
and
xor
repz
lea
outsl
cmp
out
repz
inc
push
out
xchg
sub
jo
mov
fmuls
inc
mov
jnp
mov
pop
push
loopne
jbe
and
or
insl
imul
mov
cmp
imul
es
or
adc
xor
xchg
and
push
enter
or
xchg
arpl
cmpsb
push
xchg
mov
stc
pushf
adc
orb
pop
cmp
sub
mov
int
loope
dec
scas
out
cld
pop
jl
sub
dec
cmp
sub
mov
mov
arpl
sbb
mov
dec
mov
aas
popa
push
xor
or
mov
and
push
push
hlt
imul
push
outsl
and
sbb
jge
cmpsb
sti
loop
xchg
subl
xchg
scas
pop
int3
insb
xchg
cld
pop
mov
mov
int
pop
fsincos
mov
or
scas
inc
aas
inc
mov
gs
scas
nop
insl
test
sub
fldl
imul
daa
xchg
or
js
jne
and
mov
popa
or
jl
add
xorl
mov
rol
pop
push
push
mov
lods
scas
subb
outsl
or
pop
sbb
mov
dec
loopne
mov
sub
out
lcall
scas
cli
loope
sbb
mov
push
pop
stos
sti
mov
imul
aas
imul
cld
aad
out
and
fadds
mov
test
push
lcall
cmpsl
into
xorl
mov
xorb
adcl
ficoms
mov
sub
xor
xchg
mov
mov
jb
dec
cli
sub
inc
pop
inc
cwtl
ror
and
in
xchg
add
xor
icebp
cwtl
sbbl
lea
decb
into
fwait
xchg
addr16
test
sbb
aas
shlb
inc
scas
fsincos
popa
jns
je
jl
loopne
movl
xchg
lcall
rol
dec
in
inc
arpl
push
jmp
divl
inc
xchg
fmull
adc
xor
enter
inc
out
insb
sub
push
dec
or
cld
leave
inc
pop
sbb
and
stos
inc
dec
and
cwtl
jle
mov
bound
andb
sub
cmpsl
aaa
lds
lret
cmp
cmp
xchg
out
adc
xchg
lea
pop
inc
cmpsl
mov
out
inc
scas
jne
mov
notl
add
sub
cmpsl
or
fwait
xchg
jmp
outsb
sbb
adc
les
lret
mov
push
mov
icebp
mov
xlat
push
xchg
mov
out
jl
mov
or
je
lds
jne
rclb
inc
mov
pusha
mov
cwtl
shl
outsl
pop
jmp
out
xchg
xor
push
movsl
std
jo
es
sub
and
add
sub
pop
dec
lods
xchg
xor
adc
push
ds
test
mov
sub
xor
cmpl
and
jl
mov
sub
xor
fs
mov
sbb
ds
sti
lret
dec
pop
mov
jnp
pushf
mov
push
addr16
push
rcrb
iret
sarl
ljmp
insl
lahf
sbb
dec
repnz
cwtl
mov
pop
aad
mov
push
dec
imul
dec
dec
dec
push
mov
in
sbb
lea
pusha
sbb
cmpsl
icebp
push
jb
mov
ss
call
fs
cmp
cmpsb
xor
xchg
imul
stos
scas
xchg
pop
pushl
cmpsb
lods
dec
adc
movsl
adc
loope
pop
push
pushf
out
ljmp
dec
push
xor
and
xchg
clc
jnp
xor
xchg
jnp
icebp
and
shll
or
push
nop
inc
scas
adc
inc
push
jne
jnp
jge
movsl
sub
hlt
enter
xor
mov
mov
xchg
iret
pop
sbb
mov
imul
ds
jmp
icebp
xchg
fxch
inc
xor
mov
mov
ljmp
push
push
dec
adc
dec
pop
shlb
aaa
mov
push
fnsave
sub
inc
sub
rcr
mov
sbb
lock
sarb
mov
jne
jo
sbb
sub
iret
gs
jmp
sarl
jne
push
jnp
out
aas
data16
aam
outsb
add
sub
and
mov
insb
out
xchg
call
out
jb
lea
mov
clc
int
mov
add
andb
cmpsl
int
dec
xchg
xor
sub
out
jb
les
mov
scas
and
shr
dec
lahf
loop
mulps
pusha
and
mov
sbb
push
fwait
pop
in
add
ficoml
jno
jle
rcrl
xor
and
mov
sahf
ja
sti
mov
ja
xchg
stos
out
xor
fcomp
and
push
sti
sbb
daa
jmp
push
adc
sub
cmp
clc
push
mov
repnz
sbb
cs
push
ljmp
in
inc
xor
sub
add
dec
test
shrb
js
rcrl
outsb
inc
in
into
testl
lret
dec
and
sbb
cmp
sbb
dec
or
repnz
scas
in
adcl
in
rclb
les
vpcmpeqd
push
mov
adc
or
mov
or
nop
lret
in
cltd
icebp
mov
inc
xchg
pop
sub
xlat
movl
pop
dec
add
xchg
das
out
int
rcrl
ficompl
mov
leave
ljmp
pop
or
sub
fwait
shr
cld
push
cld
aad
popa
inc
cmp
hlt
mov
fbstp
shll
push
and
addr16
mov
test
lea
push
xchg
and
add
icebp
popa
je
imul
clc
mov
cwtl
dec
sub
xchg
xlat
xor
data16
dec
fstps
out
mov
pop
push
jg
fcompl
mov
daa
push
xlat
mov
push
mov
mov
push
lret
shlb
inc
stc
sub
jmp
sbb
xchg
xor
jns
in
push
mov
mov
pushl
sahf
xchg
and
or
das
sub
add
xor
out
test
mov
pop
push
das
or
adc
icebp
loopne
and
adc
sbb
les
push
gs
and
out
sub
dec
repnz
test
je
sub
or
xor
sti
jne
ds
out
in
sbb
sarb
mov
iret
mov
stos
inc
cmp
mov
adc
aad
lds
sbbl
xchg
push
jmp
xchg
mov
fmuls
add
stos
movsb
mov
jo
push
movsl
pop
mov
pushf
sub
fs
inc
pusha
or
orb
sub
push
rcr
addr16
push
clc
outsb
xchg
imul
pusha
push
ret
psrld
cmp
xlat
ret
jge
mov
test
xchg
add
mov
jbe
es
stos
push
nop
scas
in
mov
iret
xor
lods
cmp
les
mov
in
push
or
fwait
int
arpl
adc
call
cmp
pushf
xor
dec
mov
cmp
stos
outsl
imul
xchg
cs
fs
add
adcl
xchg
sub
jno
out
xor
cmp
push
push
xchg
xchg
in
push
adc
adc
mov
push
sbbl
pop
aam
loop
stos
loope
xor
in
cld
cmp
in
out
scas
xchg
sbb
loop
int3
or
fsubl
enter
fisubrl
sub
jmp
add
adc
lcall
jge
cmpsb
or
mov
mov
inc
inc
or
mov
pop
pop
inc
xlat
ljmp
sbb
iret
cwtl
popf
aad
xor
cli
jo
ja
mov
gs
sbb
in
lahf
bswap
mov
rorl
negl
in
mov
xchg
adc
pop
nop
mov
add
mov
dec
pop
aam
adc
stos
cmp
stos
notl
leave
mov
inc
mov
int
mov
push
jecxz
nop
pop
movsl
out
jecxz
sub
adc
xchg
push
inc
test
cwtl
mov
mov
inc
pop
cmp
cmc
xor
shlb
ds
loop
lods
shll
cli
pushw
in
xor
sbbl
xchg
insb
scas
cli
inc
lret
cmpsl
xchg
movsb
sysret
mov
rep
aam
shr
mov
lea
sbb
xchg
mov
call
lret
imul
scas
popf
and
push
pusha
ljmp
lds
clc
out
mov
push
dec
cmpsl
shlb
adc
roll
outsb
inc
out
xchg
mov
fdivrs
lahf
pop
or
iret
pop
mov
xorl
push
inc
cmpsl
xchg
sbb
cwtl
ss
jo
into
cmp
adc
ret
lds
scas
inc
pop
or
movsb
mov
and
jg
rolb
mov
orb
xor
testb
mov
cltd
ja
or
fistps
pop
xor
ljmp
pop
inc
jecxz
xchg
push
test
sub
enter
adc
test
lcall
mov
lds
stos
ja
lods
mov
cmpsb
scas
xor
xchg
pop
cwtl
dec
adc
enter
out
pop
cmp
mov
mov
je
enter
cmp
movsb
xlat
dec
mov
mov
cmpsb
cmpsb
ret
push
push
adc
in
mov
mov
mov
lods
shlb
std
lret
out
xor
pop
pop
and
call
notl
in
stc
fists
insb
lods
adc
xor
add
xor
dec
orb
aad
fbld
mov
popa
or
int
sbb
xchg
int3
ja
mov
add
or
push
aas
push
ret
cmp
jecxz
and
lds
imul
popa
mov
pop
js
sub
cmp
fmull
nop
notb
fsubrs
in
rclb
add
dec
add
mov
cmp
ss
stc
mov
mov
sbb
and
push
fneni(8087
xor
popf
push
out
outsb
lret
inc
pop
or
mov
jle
or
inc
icebp
mov
ljmp
loopne
adc
fmul
arpl
xorb
cmc
mov
sub
lods
dec
xchg
int3
xchg
lods
jbe
pop
xchg
sub
dec
test
cmp
fmulp
mov
popf
add
cwtl
mov
and
mov
lret
std
mov
inc
fucomi
dec
rcll
push
jmp
adc
mov
sti
cmp
or
aas
daa
pop
test
fcoml
push
stos
push
lods
xchg
dec
ja
inc
fildll
dec
add
cwtl
sub
pop
add
dec
dec
push
mov
lock
mov
mov
movsl
mov
cltd
dec
jmp
imul
out
pinsrw
push
pop
dec
shrl
or
out
xorb
pop
cli
push
push
not
decl
ret
xor
shrb
add
rcr
push
push
xor
ds
in
jno
push
xchg
fstps
aad
mov
mov
jne
sbb
xor
pop
sub
fldt
push
mov
xchg
or
xor
jg
cmc
fistl
or
test
push
push
dec
std
jne
jl
bound
jle
xchg
or
xor
adc
cmpsl
in
cmpsb
xor
outsl
cmc
in
outsl
clc
inc
or
negb
or
cmc
sub
mov
pop
add
into
nop
fs
ljmp
scas
pop
in
xor
jne
imull
xrelease
inc
dec
sub
push
push
adc
pop
xchg
mov
imul
gs
rclb
int
inc
pushf
mov
xor
mov
ds
loopne
add
lds
jnp
adc
xchg
movsl
movsb
cmpsb
pop
sbb
notl
lahf
adc
mov
mov
inc
ljmp
enter
dec
xchg
mov
xchg
add
lods
loope
shlb
jp
cmp
add
adc
cs
js
divb
out
cltd
cmp
fs
test
jno
cli
inc
xorl
jno
jns
dec
jg
lret
pop
xor
into
mov
das
lea
mov
test
mov
repnz
push
jnp
cwtl
leave
out
cmp
dec
incl
cbtw
dec
andl
and
push
sbb
in
cld
mov
push
test
or
lret
jb
loope
das
jmp
ljmp
inc
popf
dec
mov
aaa
pop
repnz
test
mov
push
xor
mov
clc
int3
xchg
fbld
sahf
ss
sub
fnsave
call
mov
sti
in
cmp
and
mov
out
or
mov
int
ja
jmp
pop
divl
daa
decb
aaa
enter
mov
xlat
outsl
in
movsb
inc
sti
popf
xchg
ss
jmp
pop
in
int
sub
xor
movsl
ljmp
cmp
in
and
ret
mov
adc
jmp
dec
jecxz
push
mov
inc
mov
xchg
dec
mov
mov
xchg
cld
fldcw
mov
inc
inc
push
cs
adc
jecxz
pop
pop
in
mov
push
popa
dec
outsl
cli
cltd
out
mov
mov
pop
sbb
imul
sbb
inc
int3
fisubrl
sub
in
mov
pop
sub
mov
xchg
loopne
push
sahf
arpl
cmpsb
pop
push
xor
jbe
mov
pop
repz
adc
pop
sarl
push
push
shll
sti
arpl
aas
jbe
sbb
rolb
adc
cmpb
lret
mov
test
push
mov
adc
insb
lods
mov
push
pop
fmulp
imul
call
mov
jp
push
fldl
mov
dec
push
cmp
jo
jbe
into
pop
or
les
lret
or
inc
and
loope
cmp
xchg
cwtl
mov
push
cld
out
subl
rcll
enter
mov
xchg
jmp
dec
cld
and
push
ljmp
sub
in
rolb
mov
xchg
in
das
inc
add
adc
mov
pop
out
in
add
sub
jge
mov
pop
sub
lea
jl
dec
aad
test
cmpsl
dec
and
mov
dec
adc
jl
addl
mov
movsb
mov
std
adcb
and
call
adc
scas
enter
test
jns
sahf
add
ret
jne
jmp
sarl
mov
popa
out
push
mov
inc
repnz
repz
inc
test
xchg
mov
lret
mov
ja
or
gs
push
push
cs
in
add
in
cmp
push
les
iret
xorb
cli
repnz
and
push
repz
adc
inc
loop
in
inc
pusha
repnz
clc
sarb
mov
rorl
ret
jl
inc
nop
bound
or
mov
leave
push
roll
in
mov
dec
lcall
scas
push
xchg
dec
pop
cwtl
mov
mov
adc
loop
mov
xchg
and
mov
std
pop
or
mov
adc
push
stos
mov
xor
pop
mov
pop
dec
movsl
out
leave
dec
push
mov
push
loop
movsl
mov
fisubl
sahf
test
dec
mov
adc
mov
dec
outsl
mov
leave
pop
mov
flds
fldenv
sub
in
mov
lret
cltd
lods
jne
outsl
aad
inc
and
cmpsb
jmp
out
mov
ja
insb
sub
dec
test
jp
jnp
pop
rcl
orl
mov
sub
sarb
mov
into
int3
jbe
inc
imul
dec
pusha
ffree
shll
insb
jo
icebp
std
add
mov
mov
das
push
mov
dec
xchg
pop
cmp
pop
sbb
stc
adc
lods
cmp
outsb
lret
push
dec
cltd
add
jp
adc
dec
xor
add
mov
sahf
sbb
sub
stos
shr
xor
lcall
sub
les
fimuls
lock
and
push
dec
fsts
inc
xchg
lods
and
insb
inc
movsl
mov
and
imul
outsb
daa
cltd
cmp
xor
jle
inc
mov
or
fcomps
add
lcallw
mov
fwait
jmp
icebp
outsb
push
jae
ds
push
pop
loope
sub
pop
dec
ja
push
push
movsb
ss
decb
sbb
adc
andl
and
mov
add
jecxz
adc
call
in
in
enter
push
push
push
xchg
lock
xchg
lock
mov
leave
sahf
popa
cmp
sbb
mov
aas
cmc
and
popf
inc
xor
movsl
push
inc
mov
xor
lahf
add
jge
pop
inc
lds
out
test
push
pop
stos
inc
jg
jecxz
nop
sbb
lods
inc
loopne
push
and
ficoml
add
adc
fnstenv
shll
sarl
test
das
or
mov
xor
xchg
xchg
cmpsb
mov
sti
push
movsl
xchg
addr16
mov
mov
testl
xor
aad
rorb
shll
out
mov
xor
cs
xor
hlt
mov
rorb
call
sbb
mov
aas
in
pop
insl
sbb
ret
push
mov
popa
fcmovb
popa
lcall
aas
iret
xor
cld
push
sar
lea
jno
dec
sub
mov
fsts
popa
pop
inc
push
dec
push
or
pop
rcrb
xchg
xchg
pusha
ss
inc
or
out
cltd
sub
sahf
cld
int
mov
push
hlt
mov
fdivl
adc
sbb
xchg
lcall
lods
int3
mov
push
xor
inc
sub
dec
xor
lcall
sbb
jp
pushf
xchg
outsl
and
pop
push
hlt
jmp
das
jg
add
adc
fdivs
bound
push
lret
and
aad
fwait
mov
pop
scas
xchg
dec
dec
notb
pop
popa
mov
add
repz
adc
inc
stos
mov
call
les
repnz
mov
sub
aad
fwait
and
push
inc
js
nop
fbld
pop
and
mov
fstps
aad
mov
xchg
arpl
hlt
mov
jno
shrb
inc
push
in
in
loop
or
aad
bound
loopne
and
mov
pop
aad
jo
leave
mov
in
in
data16
clc
xchg
pop
test
xlat
jmp
cld
push
sub
notl
dec
scas
dec
adc
dec
lea
fsts
push
mov
mov
in
cmp
and
lock
jne
and
aas
popf
mov
inc
and
push
dec
lds
test
lods
jne
xchg
iret
mov
test
loopne
lahf
js
pop
push
ret
sbb
cmp
lock
dec
mov
in
movsl
mov
test
std
sti
rorb
inc
mov
outsb
int
call
sbb
pop
adc
jp
pop
sbb
scas
popa
rcrl
in
pop
adcb
out
jns
xlat
stos
push
jmp
loop
xchg
dec
mov
sbb
push
test
insl
jbe
rol
test
or
nop
gs
sub
add
inc
and
ret
dec
int3
pop
call
insb
mov
test
cmp
jle
cmp
popf
mov
nop
sti
repz
xchg
xor
idivl
pop
xchg
sarl
rclb
cmpsb
stos
sub
jns
xlat
loope
in
pop
jecxz
mov
xchg
cmp
clc
cmp
pop
out
outsb
cmpsb
pushf
inc
mov
sbb
and
add
adc
jb
push
cmp
jo
mov
stos
pop
push
add
nop
mov
dec
fwait
push
mov
pop
outsb
movsb
jns
xchg
cmpsb
jle
lea
std
dec
cmp
aam
cmc
mov
shlb
into
imul
lret
adc
out
xor
test
jecxz
inc
clc
test
fdivrl
imul
pushf
shrl
jnp
cltd
push
ret
or
shrl
sti
jl
mov
add
inc
jno
sahf
daa
sbb
mov
iret
in
fwait
sti
in
adc
or
sarl
inc
cmpsl
push
dec
inc
mov
test
xor
aam
pop
push
dec
mov
js
cmp
mov
pusha
shrd
adcl
or
push
popf
mov
xor
push
xor
cmp
mov
jnp
xchg
pop
jae
xchg
push
xchg
xchg
xor
mov
xchg
lods
jle
cs
adc
fstps
rorl
mov
xchg
sbb
cmp
pusha
cmpsl
or
jp
xor
sub
das
and
imul
sub
mov
rorl
jne
lret
iret
or
mov
pop
lcall
aad
insl
mov
aas
jge
mov
popf
jge
orl
mov
bound
jle
sub
xchg
sbb
push
das
push
imul
dec
inc
and
add
mov
mov
inc
inc
mov
push
mov
mov
mov
jmp
jo
push
lods
cmpsb
and
sahf
jbe
jae
mov
pop
out
push
add
pop
enter
pop
jl
and
movups
fildll
and
mov
in
xchg
bound
adc
fucomp
daa
data16
mov
lcall
ffreep
bound
sub
sub
or
out
mov
xor
add
ja
aam
adc
in
ljmp
mov
adc
cli
push
cli
dec
test
aad
out
xorl
std
das
inc
sub
pop
jns
arpl
push
imul
std
mov
or
je
fs
pop
outsl
dec
ret
or
jne
lods
cmp
sbb
cmpsl
lods
xor
adc
sarl
xlat
push
jp
pop
pusha
test
sahf
les
cmp
stc
enter
mov
lods
sub
add
fnstcw
incb
adc
xchg
mov
sub
xor
fcompl
ret
insl
xchg
fldl
pop
insl
mov
mov
and
sbb
pop
xor
mov
mov
mov
mov
movsb
jbe
inc
bound
xchg
insl
mov
loope
cmp
cmc
ds
popf
cmc
xor
pop
jmp
mov
sbb
jg
cmp
adc
push
aaa
cmpsl
or
jg
ss
enter
pushf
mov
mov
daa
xlat
and
mov
cli
adc
mov
stc
mov
fidivrs
xor
movsl
mov
sahf
ja
pop
mov
cmp
mov
xor
lods
test
popa
jb
sub
inc
xor
mov
insl
mov
or
daa
cmp
sbb
jae
dec
pop
fistl
icebp
shlb
fucomp
pop
gs
mov
sbb
decl
push
mov
xchg
stos
loopne
jg,pn
sbb
test
mov
std
rcr
jnp
sbb
inc
push
mov
and
call
orl
mov
cmc
mov
dec
pop
jo
pop
cs
lret
lods
fidivs
cli
jl
mov
push
jl
scas
xor
mov
shrb
gs
add
mov
cmp
pop
add
xchg
jge
sub
popa
xchg
xchg
clc
xor
sbb
jae
pop
xor
or
ret
add
cli
sub
scas
sub
and
mov
hlt
lret
mov
adcl
jo
add
mov
arpl
jnp
sbb
repnz
rorl
lods
loope
inc
pop
or
seta
xchg
roll
aad
cltd
fistpl
scas
stos
scas
sbbb
adc
fwait
into
nop
or
or
dec
mov
in
mov
xchg
cwtl
cmp
popf
cmp
xor
or
and
mov
and
sbb
rcrb
mov
lods
dec
xchg
mov
sub
arpl
arpl
dec
mov
mov
cmp
inc
fdivl
mov
fsubl
xor
dec
in
lock
or
pop
adcb
fdivp
xchg
aaa
xor
daa
aad
adc
test
add
insl
fists
ficoml
orb
neg
mov
push
scas
mov
stos
fstpt
mov
mov
sti
sub
and
sub
fiaddl
stos
cmc
add
add
jb
sub
pmaxsw
jmp
push
in
pop
orl
mov
jle
mov
pop
pop
sbb
scas
xchg
push
mov
sahf
data16
xchg
int
cmp
cli
loopne
pusha
stc
adc
mov
js
sbb
fucomp
lahf
data16
jb
add
mov
loop
lock
cli
push
inc
push
dec
lea
and
pop
pop
add
inc
and
xor
aaa
fwait
inc
mov
stos
push
js
push
xchg
cltd
test
mov
push
cmp
pop
stc
mov
mov
in
push
push
scas
inc
mov
jns
push
dec
lret
lret
int
aad
in
insb
dec
fs
ljmp
fs
nop
xchg
inc
inc
ja
fs
mov
pcmpeqd
std
fidivl
jg
and
shrl
mov
les
sbbb
outsb
sbb
fwait
lret
or
mov
mov
push
dec
cmpsl
mov
mov
out
insb
sbb
ret
cmp
pop
adc
out
fisubl
sub
cmc
out
iret
jno
mov
mov
push
out
rorl
in
sub
aad
jns
sbb
test
mov
cmpl
sub
xchg
add
mov
mov
mov
mov
fdiv
inc
loop
lods
dec
dec
add
mov
sub
xor
or
enter
xor
xor
insb
push
insb
push
stos
in
std
jle
xor
or
push
add
cmpsb
adc
leave
cmpsl
call
dec
mov
aam
das
ss
adc
int
pop
dec
pop
pop
enter
jns
mov
mov
iret
add
cmpsl
mov
and
mov
icebp
and
in
out
xchg
add
inc
add
bound
mov
push
jo
cmp
pop
imull
shlb
ficoms
mov
sub
imul
enter
pop
in
outsl
jmp
mov
rol
mov
sbb
mov
sbb
jbe
sub
jne
rcl
mov
xchg
arpl
cmp
mov
repnz
sbb
inc
rcll
xchg
xchg
cmc
adc
pop
in
jno
inc
dec
js
aad
mov
mov
cvttps2pi
enter
xchg
out
add
sub
cmp
push
jae
xchg
fidivrs
xor
cmp
pop
mov
insl
test
mov
jmp
adc
and
ret
out
lods
xchg
jge
cmp
fcmovbe
rorl
lret
cmpsl
js
in
sti
dec
fdivr
xor
xor
push
jmp
mov
add
mov
mov
into
stos
rolb
mov
aaa
addr16
mov
pop
and
pop
mov
nop
out
cwtl
sub
loop
leave
mov
and
rcll
push
int
cmp
push
out
xchg
lock
lcall
mov
ss
push
insb
js
and
mov
data16
push
test
out
icebp
outsb
data16
sbb
insl
sbb
sbb
ljmp
xchg
jle
xlat
aad
pushf
out
rolb
or
into
xchg
jl
push
jb
sbb
or
lock
pop
outsb
cli
loopne
jnp
sbb
nop
jae
cmpb
insb
imul
xlat
sbb
cmp
push
dec
mov
imul
lds
cltd
and
add
jmp
cmp
aam
enter
xchg
andl
inc
inc
or
ljmp
mov
in
fistpl
loope
xor
sbb
bound
fldz
and
jae
adc
lds
xchg
stos
jo
xchg
add
cmp
jle
popa
fcomps
iret
sub
imul
out
loop
dec
insb
push
pushf
push
fmuls
pop
pop
lret
test
cmp
outsb
mov
dec
mov
stos
or
mov
in
mov
mov
scas
and
xlat
mov
sub
push
mov
cmp
or
es
repnz
sub
jge
clc
dec
ja
xor
push
arpl
sub
ret
sbb
xchg
mov
xchg
jns
and
or
out
iret
jl
nop
push
std
xchg
inc
adc
adc
xor
aam
addr16
je
jo
sti
adc
xchg
xor
and
scas
dec
mov
xchg
je
and
shll
jo
and
adc
andb
xor
add
mov
dec
push
sahf
leave
cltd
mov
mov
shrl
and
dec
xchg
ret
fcmove
ret
imul
xchg
adcl
les
sbb
mov
pop
movsb
insb
aam
sbb
inc
lret
mov
and
sti
sbb
and
adc
jle
xor
xor
or
outsb
leave
in
pop
xchg
fcmovnu
lock
push
xor
cmp
mov
movsl
and
mov
fldt
subb
gs
addr16
ljmp
mov
imul
jae
push
cmpsb
bound
loopne
stos
inc
aam
fcoml
repz
ret
sub
mov
or
movsl
xchg
jle
pop
lret
mov
stos
add
inc
mov
aas
cmc
shrb
mov
stos
add
inc
pushf
fs
cmc
jnp
mov
adc
adc
mov
sub
cld
sub
out
movsb
lea
cmp
inc
ds
iret
pop
ror
pop
xor
mov
pop
dec
inc
xor
add
push
pop
dec
xchg
int3
and
inc
push
push
add
mov
ret
bound
scas
mov
aad
leave
or
addr16
dec
insl
sahf
jecxz
movsl
sbb
call
inc
mov
call
jbe
das
inc
les
fnstcw
push
mov
jp
sbb
mov
cmp
and
cmp
dec
lea
mov
jl
jge
aam
jmp
mov
pusha
icebp
mov
int3
repz
cmpsl
sub
push
jl
push
mov
aam
clc
roll
insb
shl
dec
pop
dec
pop
mov
test
push
push
jle
popa
adc
sbb
loope
sub
shlb
notl
repz
jg
adc
loop
add
cmc
adc
shrl
push
mov
dec
test
push
pop
dec
jp
cwtl
outsb
sub
inc
cmp
inc
hlt
jmp
jns
lea
jg
sub
popf
pop
mov
cli
dec
dec
push
cmp
mov
push
add
in
push
xor
stos
fdivrs
cmp
ss
sub
lods
lret
xor
loope
data16
out
jmp
fdivrl
jle
pop
fstpt
push
sub
cmp
imul
insb
ss
leave
mov
loopne
into
scas
xchg
pop
push
lods
pop
adc
test
push
mov
xchg
xchg
inc
nop
sar
sub
aas
lret
lret
add
or
cmc
pop
xor
and
rcpps
adc
mov
sbb
or
xor
cmp
mov
in
mov
test
sbb
and
dec
aam
bswap
ret
addl
adc
cmp
orl
ret
sbb
popf
popl
xchg
push
xor
dec
mov
jbe
pop
test
icebp
loope
sbb
mov
lods
xchg
xchg
pop
jns
rorl
adc
daa
jmp
add
sbb
mov
jns
pop
fnstenv
cmc
and
inc
sahf
loope
inc
std
inc
shll
adc
popl
pop
cwtl
arpl
inc
mov
sbb
push
shll
jbe
mov
jmp
mov
pop
aam
in
or
xchg
jne
insb
sbb
movsb
sub
pop
sarl
adc
sar
or
popl
adc
push
mov
shrl
mov
mov
stc
mov
js
push
push
xchg
rclb
lock
mov
ret
push
mov
dec
fcoms
jmp
int3
dec
aad
fcoms
jmp
push
aad
pop
mov
out
enter
sub
popa
ljmp
dec
lds
cmp
mov
dec
inc
mov
test
jne
cltd
in
push
gs
cld
push
cmpl
lods
sbb
or
rcrb
pop
and
out
xchg
roll
add
xchg
and
xchg
pop
mov
xchg
push
icebp
lret
cmp
lods
imul
pop
lods
fxch
int3
ret
cmpl
adc
in
scas
cmp
adc
adcl
pop
mov
fdivp
pushf
sub
filds
mov
scas
pop
fwait
dec
fcomps
repz
addr16
aas
xchg
pop
andl
pop
sbb
in
in
popa
nop
dec
xchg
fwait
les
dec
sbb
fdivr
mov
pop
add
jg
inc
loope
sub
pop
add
int3
push
xchg
or
mov
lea
ja
scas
sbb
xchg
and
lock
pushw
push
jo
jge
xchg
inc
and
add
xor
and
test
sub
mov
adc
adc
addr16
movq
or
aam
mov
rcll
jecxz
popa
lods
lods
test
push
addr16
out
mov
out
pop
jl
mov
mov
cmc
inc
and
xorl
xchg
xchg
adc
es
sbb
adc
cmp
imul
push
mov
jmp
fldt
adc
stos
mov
mov
pop
or
add
nop
jbe
dec
dec
cmp
push
adc
test
xchg
fs
dec
dec
arpl
out
cwtl
mov
inc
jb
mov
mov
mov
cwtl
je
xchg
cmp
push
stos
lods
mov
push
leave
in
scas
gs
dec
cmp
lahf
or
ss
sbb
mov
adc
outsl
es
and
sbb
push
jle
mov
mov
adc
jb
repnz
inc
add
data16
lods
aad
in
push
jno
mov
jns
cwtl
push
into
enter
add
push
xor
mov
xor
lret
jmp
std
inc
xor
or
mov
jns
jno
nop
add
xor
cli
lret
jle
iret
in
cmp
data16
dec
scas
xchg
push
rcr
leave
popa
lock
xor
jae
inc
inc
fiadds
mov
rcr
cmp
mov
fisttpl
jge,pn
subl
cmp
mov
add
lret
lds
in
adc
or
add
push
xchg
dec
loope
cltd
fmull
xchg
fistps
pop
fmuls
xor
rcr
scas
mov
cmp
aad
test
aas
xchg
pop
push
lret
xlat
pop
add
jmp
rcl
lret
mov
add
std
aaa
sub
fs
mov
enter
lea
outsb
out
aaa
ljmp
dec
pop
hlt
ds
bound
pop
inc
data16
sbb
sub
repnz
mov
out
jns
xor
popl
addr16
sub
jns
jecxz
aas
sarl
insl
dec
xor
outsb
mov
and
mov
mov
dec
shlb
mov
test
addr16
in
mov
insl
and
out
lret
pushf
bound
cmpl
call
jo
push
in
dec
and
int3
mov
jno
cs
and
enter
sahf
mov
addb
mov
fdivr
sar
cld
cmp
std
outsl
js
int
cmpsl
iret
jge
roll
leave
jg
jl
jmp
cmpsb
mov
pop
or
adc
push
dec
adc
xor
insb
mov
call
test
scas
push
inc
nop
adc
jbe
aad
and
jns
pop
popa
mov
inc
sub
dec
lea
and
loopne
pop
loopne
jns
lahf
dec
icebp
jno
aad
xchg
xchg
jmp
ja
pop
rorl
cli
repz
sti
push
ljmp
mov
mov
into
pushf
cli
aaa
fnstcw
and
pop
sub
xchg
and
cmp
enter
das
mov
icebp
mov
jae
cmpsl
inc
dec
test
dec
into
bound
stos
push
cmp
jmp
outsb
mov
pusha
std
imul
negb
sub
pusha
jcxz
inc
push
lock
dec
dec
int3
add
iret
cmc
cwtl
repnz
mov
jmp
push
out
and
push
mov
fsubrs
shr
pop
push
pop
ljmp
sbb
cmp
jb
mov
faddp
fs
stc
sbb
hlt
push
cwtl
enter
or
sbb
out
mov
subb
inc
jle
lret
es
or
cmp
jnp
or
in
enter
dec
imul
inc
shrb
movsb
push
adc
shrl
imul
push
cmp
imul
in
leave
jb
sbb
pop
lds
fisttpll
lret
cld
push
ja
pop
fcomi
push
mov
mov
popa
or
pop
or
mov
aaa
and
mov
cmp
lods
inc
push
mov
push
mov
lret
lods
dec
mov
fmul
movsl
mov
mov
and
jno
and
scas
adc
ficompl
mov
addr16
jb
test
pop
sbb
repnz
push
rclb
mov
jo
out
pop
loop
stos
or
lahf
fildll
pop
xor
popf
pop
fists
cmc
add
sub
stos
add
bound
shll
cs
add
in
pop
mov
sub
call
inc
xlat
rorl
push
arpl
cmp
jbe
xchg
ret
add
je
jle
sbb
adc
nop
adc
dec
and
xorl
sub
mov
add
push
clc
xchg
out
insl
pop
fwait
cmp
sbb
pop
enter
push
dec
negl
movsb
sar
ficoml
test
shl
mov
sbb
dec
pusha
or
cld
or
aas
xchg
and
jno
fldcw
inc
inc
ss
jbe
test
sbbl
mov
jle
cmc
movsl
add
mov
sub
and
add
or
enter
jp
pop
loope
sub
jmp
out
into
inc
sub
and
rorl
jb
std
incb
jp
lds
jae
dec
outsb
xlat
gs
leave
sub
lret
jns
push
das
mov
add
jle
mov
cltd
inc
int
cmpl
ficompl
or
add
mov
insl
ret
xor
xor
lret
push
sub
loope
dec
push
push
and
pop
push
pushl
stc
mov
push
mov
test
mov
adc
in
xchg
xchg
and
sub
rorl
inc
xchg
and
inc
sahf
aas
cmp
sub
mov
mov
dec
popw
out
js
cmp
movsl
adc
dec
push
popa
aaa
psrlw
jl
movsb
out
cmc
pop
insb
shlb
fdivp
inc
test
push
popa
dec
pop
sbb
stos
in
test
les
sub
push
loop
push
push
mov
pusha
fildl
xor
push
icebp
insb
mov
std
rclb
or
fistpl
mov
mov
xchg
sbb
lret
mov
test
bound
xchg
scas
jge
test
and
cmpsb
dec
icebp
imul
addr16
pop
imul
jno
sub
push
inc
hlt
clc
dec
icebp
aaa
sub
xor
bound
test
xor
rorl
jae
inc
subb
cmp
std
mov
out
into
jg
fsin
mov
das
sub
test
xor
push
ja
jae
jnp
movsb
xchg
int
shll
aam
cmpsl
or
cmpsl
add
add
fwait
das
stos
hlt
push
add
dec
call
lahf
in
sbb
cwtl
mov
mov
fmull
xchg
dec
mov
push
fidivs
pop
adc
out
jecxz
ljmp
dec
mov
imul
inc
roll
test
sbb
mov
sarb
cmp
imul
pushf
jmp
xchg
xor
xor
mov
sub
push
leave
lahf
mov
inc
xchg
dec
dec
ffree
ret
and
or
int3
lods
jge
out
mov
xchg
aad
repz
incb
js
imul
or
shll
cmp
clc
jg
cli
movsb
std
mov
adc
int
and
xchg
int3
push
lcall
arpl
add
or
adc
xor
mov
scas
popf
sbb
repz
dec
pcmpgtw
cmpsb
xor
loopne
inc
insb
adc
xchg
jbe
bound
lods
adc
mov
or
sub
pop
xor
lcall
push
push
dec
mov
in
xchg
popf
mov
xchg
mov
arpl
stc
cmp
cmp
das
repz
or
scas
sbb
inc
inc
sbb
add
aam
mov
sbb
jg
sub
jg
add
js
mov
and
push
ret
cmp
cltd
iret
aas
xor
aam
mov
push
sbb
roll
stc
cltd
dec
sub
ds
andb
pop
sti
inc
xor
ss
lahf
adc
mov
out
lock
xchg
add
pop
pop
loopne
repnz
fwait
js
sbb
das
mov
fmulp
xor
repz
or
out
lret
mov
dec
shrl
xchg
daa
cmp
out
loopne
scas
cmp
inc
push
jno,pt
xchg
cmp
cmp
inc
mov
lret
push
mov
cmp
inc
sub
jae
cld
out
lret
decb
in
mov
ja
jb
xor
dec
cmp
xchg
cmp
shrl
test
jmp
hlt
lcall
repnz
adc
xchg
out
inc
fmull
pushf
sbbl
sarb
and
fistl
ret
aas
jge
mov
popf
adc
inc
mov
loope
mov
jmp
test
pop
scas
mov
adc
xor
mov
inc
fistpll
mov
jg
dec
das
xor
or
cmp
into
cmc
mov
es
mov
clc
ret
mov
and
dec
mov
or
and
cmp
jle
daa
cmp
cs
ds
dec
inc
mov
std
or
ficompl
mov
lods
mov
xor
pop
es
xchg
stos
insb
call
push
shl
movsb
ds
push
sbb
repnz
jne
loopne
dec
test
add
pop
sbb
ret
xchg
lds
jmp
sub
cmp
in
sub
clc
push
test
or
loopne
lock
dec
lods
fprem
jb
jbe
hlt
repnz
cmp
mov
lcall
inc
aam
or
loopne
jb
ss
push
fwait
stos
dec
xor
mov
mov
scas
aad
iret
inc
fisubrs
push
stc
push
inc
and
jecxz
push
cmp
ficomps
inc
dec
mov
pop
mov
pop
scas
arpl
adc
test
jb
cmp
jno
cmp
test
in
push
das
inc
insb
sub
mov
cmc
insl
push
mov
adc
fsubrl
andl
int
and
jmp
fstpl
sahf
pop
and
inc
outsl
leave
lret
mov
xor
mov
jae
std
ljmp
pop
lcall
test
add
adc
pop
cwtl
pusha
sbb
mov
xchg
rclb
fcoms
jae
cmp
xor
or
loope
cltd
inc
js
push
mov
xchg
in
push
push
sub
addr16
in
cmp
push
into
jle
adc
dec
pop
sub
out
shl
cmp
xor
push
lret
mov
jge
inc
add
cwtl
xor
das
xchg
loope
call
std
or
push
roll
imul
add
push
insb
movsb
cmpsb
nop
jg
push
scas
in
js
in
iret
mov
xchg
rorb
jp
xchg
lods
or
in
in
xorl
cltd
pop
cmp
out
aam
jmp
jmp
in
aam
mov
aad
mov
sbb
sbb
ds
sahf
mov
inc
lahf
cmp
xchg
mov
lahf
ja
cmp
lds
adc
les
sbb
cmp
xchg
cmp
push
push
adc
or
lahf
out
aad
iret
insw
movsl
dec
pusha
sub
jecxz
lret
shl
jmp
sbb
xor
lret
in
push
inc
adc
stos
fdivs
dec
in
imul
insb
sub
scas
mov
xlat
xchg
imul
inc
and
aad
pop
adc
mov
mov
adc
adc
clc
sarb
dec
pop
out
mov
or
fstps
sbb
pop
jmp
fmull
add
imul
xor
jg
popa
xchg
adc
lods
jge
sahf
ds
sbb
js
stc
sarb
dec
mov
adc
xchg
or
lcall
iret
aaa
mov
and
loope
fs
push
mov
out
filds
lcall
jne
cmp
push
loopew
and
sti
xor
in
and
adc
cmpsb
xor
xor
adc
xchg
lock
jecxz
es
jg
and
inc
jb
xchg
inc
push
adc
jno
enter
inc
cld
fcomi
dec
mov
jae
cli
mov
ds
dec
aas
ret
mov
subb
pop
lods
icebp
fbstp
push
hlt
orb
sets
fcmovb
movsl
popf
mov
pusha
push
mov
minps
outsl
es
repnz
int
adc
pop
ja
add
and
test
cmpsb
add
into
out
mov
imul
inc
in
int3
xor
clc
sub
sub
xor
pop
pop
aaa
jp
sbb
lcall
jae
inc
or
imul
lods
mov
mov
sahf
cmpsb
mov
cmp
or
mov
dec
daa
cwtl
je
dec
out
xchg
int3
push
fsub
xchg
loop
imul
and
sbb
leave
rolb
mov
push
leave
dec
in
dec
jo
dec
inc
scas
mov
push
push
pop
rorb
adc
orl
insl
jg
add
sbb
push
or
xor
fldt
and
or
dec
pop
and
ret
lods
pusha
jb
ret
dec
jge
sbb
pop
fdivs
push
call
push
mov
call
or
int
mov
mov
lods
jmp
sub
push
les
loope
jp
into
jo
adc
jle
or
mov
push
dec
pop
cmp
pop
inc
fucomi
xchg
push
mov
cli
imull
mov
lods
lock
add
stos
std
sub
lods
inc
mov
lcall
pop
mov
mov
push
daa
mov
ret
sahf
lret
sbb
cli
xchg
add
test
mov
push
out
test
in
popa
aam
mov
inc
in
imul
js
test
push
add
lods
jge
lret
mov
out
cmp
test
insb
inc
cmp
stos
das
cmpsl
xchg
jne
rcl
adc
adc
pop
daa
out
inc
push
mov
gs
cmovg
rclb
mov
shlb
mov
xchg
out
mov
test
test
adc
cmp
movsl
scas
sbb
movsl
pop
push
mov
adc
mov
imul
mov
mov
popf
mov
fldl
cld
insb
pop
pop
pop
rorb
in
stos
push
mov
add
mov
ret
mov
sbb
sbb
inc
orb
aaa
mov
or
loopne
mov
outsb
dec
aas
inc
fwait
je
loope
nop
cmc
pusha
cmp
stc
ds
int
addl
jle
daa
inc
sbbl
sub
jl
xchg
aaa
sbb
sbb
data16
out
or
cs
inc
addr16
cmp
xchg
test
sbb
lret
push
mov
xlat
lret
cmpsb
aad
mov
push
mov
dec
dec
das
mov
cmpsb
movsb
xor
cwtl
jl
sbb
sub
ret
movsb
fcoml
cmp
mov
loop
add
push
in
daa
cs
ja
jge
call
andl
cwtl
insb
jmp
mov
sub
stos
scas
adc
xor
mov
sbb
sub
lcall
shlb
adc
cmp
mov
jb
pop
lock
mov
mov
ja
pop
jb
sbb
push
in
xchg
repnz
pop
pop
popa
xchg
faddl
lcall
mov
add
cmp
lea
call
ret
mov
xchg
add
test
mov
in
jp
inc
out
xchg
push
popa
cmp
mov
fdivl
mov
outsb
in
jbe
push
cmp
pop
jo
movsb
cltd
push
enter
iret
adc
bound
push
ss
sub
cltd
cmp
call
mov
xor
adc
pop
and
scas
sbbl
jp
ret
mov
jmp
test
lock
lock
xor
sbb
mov
jno
or
das
fisubs
ja
add
test
inc
mov
sbb
pop
fistps
int
adc
loopne
int
lret
les
dec
in
imul
push
sarb
dec
dec
pop
ss
imul
in
scas
push
lret
push
adc
rcr
mov
pop
das
sbb
fldt
sbb
xor
into
jno
insb
mov
out
dec
adc
cmp
scas
cld
adc
inc
out
fcom
push
int
inc
sbb
shrb
or
hlt
incb
cmp
dec
cmp
lds
outsb
pusha
and
rorb
dec
rorl
mov
sub
call
cmp
movsl
idivl
negl
pop
les
and
mov
mov
mov
mov
add
adc
mov
pusha
dec
pop
xchg
out
sub
loopne
inc
arpl
push
fidivrl
xor
pop
xor
sbb
or
cmp
add
test
out
inc
xor
mov
sub
cs
mov
cmc
dec
rcrb
insb
cmp
inc
xor
hlt
sbb
mov
fwait
clc
and
aas
xchg
xchg
push
push
clc
out
jae
into
loope
fmuls
sbb
mov
outsb
mov
xchg
fwait
iret
and
stos
add
fdivr
inc
push
mov
into
cmp
and
xor
jns
jae
add
xor
xchg
call
loop
test
mov
addl
cs
loope
outsb
popf
xchg
enter
dec
and
and
lret
xor
jmp
adc
or
test
and
loopne
cmp
js
maskmovq
negl
out
ss
jle
pop
mov
lahf
rorb
ds
cs
mov
cmp
clc
inc
scas
and
and
test
mov
or
jns
outsb
dec
in
cmp
xor
gs
loope
mov
loopne
xchg
bound
sub
mov
mov
cmpsb
mov
push
jb
repz
inc
xchg
mov
jns
faddp
cs
xchg
stos
lods
dec
inc
lock
push
jne
inc
pop
je
xchg
adc
mov
mov
cmp
rorl
cltd
lds
pop
jo
mul
and
push
xchg
icebp
push
mov
pop
mov
sub
aam
mov
loope
dec
outsb
or
ret
mov
shll
jbe
xor
add
in
js
cmp
adc
xchg
lcall
cmc
push
pop
lret
dec
sub
insl
or
ret
mov
jmp
nop
lds
fwait
cmp
std
stc
cs
ljmp
mov
jae
fldl2e
pop
std
cmp
dec
and
sbb
jle
cmp
stc
fdivr
iret
xchg
mov
in
sahf
pop
sbb
repz
in
ret
jno
or
rcll
pop
adc
push
jno
jbe
inc
test
and
int
mov
and
sub
ds
adc
in
add
cs
popa
xor
or
dec
sbb
xor
cs
je
int
and
out
sub
push
adc
mov
push
lcall
inc
add
cltd
mov
sbb
lods
pop
xor
imul
icebp
cmpsb
insl
enter
test
out
out
add
adc
stos
jp,pn
cmp
scas
rclb
int3
jecxz
xchg
iret
and
in
test
das
mov
or
jne
je
das
sbb
int
xchg
cli
push
das
add
cmpsl
in
testb
push
ret
or
int3
outsb
fisttpl
xor
adc
xor
mov
leave
jmp
fdiv
je
nop
xchg
dec
in
pusha
inc
adc
pop
jl
icebp
push
sbb
push
insl
mov
lcall
mov
dec
mov
fs
stos
es
dec
das
pmaxsw
js
xchg
cmp
aas
mov
cmp
push
sbb
fsubs
imull
out
xor
xchg
or
jle
sbb
fs
inc
out
fbstp
cld
fmul
sahf
bound
insl
je
outsb
inc
fwait
leave
mov
in
adc
rcll
pop
jl
cld
mov
push
int3
out
or
ret
jmp
add
aad
jmp
mov
xchg
mov
test
stc
and
and
out
andb
lods
mov
test
and
jno
pop
jae
push
dec
icebp
xchg
xor
xor
fucomp
popf
mov
or
insl
popa
dec
shrb
cmc
mov
mov
xor
aam
add
sub
adcl
cmp
lea
inc
sub
jg
mov
sbb
xchg
mov
aas
push
mov
loope
jle
and
xchg
mov
add
js
sbbb
iret
mov
test
adc
cmp
or
enter
stc
inc
push
push
das
jg
pop
loopne
push
add
xor
and
dec
xor
push
clc
cmp
into
or
dec
mov
add
sbb
pop
mov
out
cmpsb
shl
orb
mov
insb
out
and
js
and
insl
outsb
cmp
xlat
divps
insb
jp
jg
mov
or
adc
xchg
aaa
faddp
repz
push
xchg
jne
int
jecxz
mov
fwait
push
or
dec
es
or
out
pusha
das
lret
xchg
sahf
adc
mov
mov
push
test
repz
sbb
outsb
pop
cmp
aaa
jae
sbb
dec
fs
loopne
repz
in
jno
out
or
sbb
cmp
ss
sbb
xchg
jge
xor
sub
inc
loope
mov
dec
cmp
push
push
xor
lods
mov
aad
push
push
xchg
mov
into
bound
mov
arpl
mov
mov
jmp
fcmovu
ds
cmpl
bound
inc
je
cwtl
push
xor
rorl
ss
sahf
push
insb
push
dec
pop
fnsave
sarl
addr16
jge
jno
mov
inc
jmp
je
add
jecxz
out
test
jno
cmpsb
xchg
and
cltd
std
fmuls
int3
std
lock
pop
sbb
jno
and
adc
hlt
mov
sbb
aad
in
and
mov
mov
dec
imul
pop
cmpsl
data16
mov
cmp
mov
lret
pop
fwait
cmp
mov
sub
mov
leave
or
fisubs
cltd
inc
icebp
das
scas
pop
dec
xlat
adc
shlb
inc
sub
sbb
fwait
dec
orb
mov
insb
dec
jnp
mov
sbb
or
inc
mov
lcall
mov
push
lock
mov
mov
or
pop
sub
push
cmp
dec
arpl
pushf
dec
sbb
lret
mov
aas
lds
lea
sub
shl
hlt
cmp
jg
in
repz
push
ljmp
cwtl
mov
lods
flds
loopne
notb
pop
or
stos
sub
pop
jbe
xlat
push
and
jmp
jbe
pop
xchg
shlb
mov
xchg
jmp
cmp
repnz
lret
bound
mov
pusha
cmc
and
imul
orb
mov
fcompl
aam
jl
aam
cmpsb
lret
jb
pop
mov
sbb
insb
mov
test
or
and
movsb
loope
stos
lcall
xor
pop
scas
cld
mov
cli
pop
mov
loop
movsl
call
int3
jns
fwait
cmpsb
sub
aaa
test
push
lods
sub
cmpsl
push
sub
add
cmp
or
push
or
mov
jb
xchg
call
push
xorl
aam
repnz
inc
push
sub
rorl
orl
and
jb
movl
jbe
cld
jge
popf
mov
cmc
int
push
xor
and
adc
iret
mov
push
ret
in
bnd
pushf
mov
repnz
clc
jp
loopne
loope
imul
in
ja
inc
imul
pop
pop
sarl
sahf
rclb
xchg
icebp
pop
mov
sub
filds
jbe
and
push
hlt
sub
pop
cwtl
mov
xor
mov
cwtl
and
or
lret
mov
aam
enter
mov
in
inc
sbb
outsl
cmpsl
xchg
jle
push
popf
mov
cmpsb
ss
bound
js
dec
aaa
dec
outsl
pop
sarl
ljmp
pushf
cmpsb
std
loop
popf
leave
jo
inc
ret
test
aas
psubq
je,pn
adc
and
xchg
mov
leave
fnsave
fidivrs
dec
dec
into
xor
xchg
iret
jno
cmp
orl
cmp
pop
test
repnz
dec
pop
or
jge,pn
js
mov
push
bound
scas
mov
sub
push
ret
xchg
inc
add
dec
pop
into
cmp
hlt
notl
pop
cmp
pop
lods
and
sbb
mov
scas
push
and
or
insb
add
fdivrl
cltd
jge
rorb
jae
movsb
and
ds
xchg
pop
addb
xor
call
mov
push
cwtl
ljmp
jbe
push
or
sub
add
stos
ficoml
jecxz
scas
pop
in
add
jge
std
mov
dec
imul
stc
inc
jg
mov
cmp
add
ss
ret
xchg
out
cmpsl
or
mov
push
data16
sub
fldt
imul
sahf
mov
inc
imul
or
push
jae
pushf
gs
daa
jecxz
mov
test
jg
and
push
sbb
jecxz
dec
jb
push
lret
pop
mov
jbe
mov
dec
shlb
out
popl
cld
adc
out
ret
xor
add
pop
pop
dec
mov
insb
lea
loop
addr16
movb
push
and
out
sbb
dec
data16
cmpsb
je
stos
fs
ret
call
in
mov
jle
in
decb
les
jle
add
inc
std
fisubs
or
xchg
insl
ret
xchg
pushf
mov
call
cmpxchg8b
int3
dec
lret
mov
inc
xchg
cli
fwait
outsb
mov
outsb
dec
in
or
loop
pop
xchg
pop
ret
insb
test
adc
and
repz
arpl
movsl
jle
mov
dec
push
lahf
xchg
pshufw
out
stc
enter
mulb
dec
dec
jmp
cmp
je
das
data16
sub
lock
pop
jne
idivl
pop
stc
fimull
xor
inc
xor
stc
jg
stos
xchg
inc
mov
mov
popa
lods
pop
xor
or
iret
int3
mov
jmp
add
xchg
dec
jl
fs
lods
leave
out
pop
adc
mov
leave
cmc
xlat
das
mov
or
inc
sub
mov
dec
cmc
mov
fldcw
imul
xchg
mov
mov
pop
test
pop
loopne
xlat
je
cltd
cmc
jae
test
into
andb
lcall
aad
push
inc
lret
out
pusha
movsl
add
lret
xor
lahf
sti
xchg
aaa
inc
std
xor
pop
push
les
push
leave
jbe
out
int
lret
imul
call
sahf
iret
add
imul
in
push
inc
or
dec
jne
xchg
dec
lret
daa
lahf
jno
gs
sbbl
mov
hlt
imul
lods
jmp
lahf
test
and
dec
mov
push
pop
cmc
iret
movl
sbb
dec
push
jp
mov
pop
mov
out
pop
ss
jle
jbe
xor
lock
cmp
outsb
adc
aaa
mov
stos
bound
test
push
jmp
mov
loopne
je
jecxz
push
cli
es
sub
insb
jno
negl
dec
fisubrl
push
popa
sub
test
aas
mov
icebp
xchg
mov
mov
out
cld
mov
dec
in
popf
pop
das
mov
sub
faddl
adc
push
ret
mov
stc
sub
jae
or
mov
and
cmp
je
into
mov
mov
inc
mov
ja
loopne
mov
out
out
or
ret
push
push
jmp
test
push
jle
or
cmp
add
insl
inc
mov
gs
cmp
or
mov
ffree
mov
adc
fisttps
ljmp
xchg
stc
inc
inc
adc
pop
cmp
jmp
out
adc
push
push
inc
inc
jae
or
aad
ficoms
sub
movsb
lcall
es
out
adc
cli
mov
enter
cmp
stc
ljmp
jge
adc
inc
ror
hlt
mov
fwait
jo
stos
test
inc
js
jge
stc
es
or
loop
push
aad
push
mov
in
xor
loope
fistpll
push
sbb
jecxz
ret
out
frstor
inc
xor
out
aam
pop
inc
mov
sbb
les
lret
mov
adcl
mov
and
bound
xlat
stc
or
mov
outsb
mov
add
gs
jo
es
cmp
std
fadds
ljmp
adc
push
lret
cmp
xchg
push
mov
push
inc
push
pushf
sub
addr16
jnp
mov
xchg
push
pop
into
and
inc
cmp
or
adc
sub
xor
loop
in
loope
inc
pop
ja
sti
or
adc
div
cmp
or
cmp
fiadds
jnp
jmp
and
fwait
fs
test
arpl
fdivp
mov
subb
mov
repnz
addr16
lds
nop
mov
pop
movsb
loope
xor
mov
imull
ds
and
mov
sbb
mov
daa
testl
jge
sub
sarb
cmp
out
mov
jmp
lea
jb
insl
ret
test
dec
cmp
test
call
das
inc
movsl
ret
and
outsb
push
sti
jo
cmp
jne
dec
cltd
in
aaa
cmp
arpl
into
xchg
lds
addb
lcall
inc
imul
push
cmp
or
aaa
insl
sbb
lcall
sbb
stc
lds
ret
mov
adc
test
imul
mov
jle
dec
or
mov
data16
fwait
testb
and
out
imul
addb
add
js
cs
ja
in
psrlq
sub
sarb
andl
mov
pop
icebp
movsl
test
cmp
shlb
in
and
mov
aam
movsl
cmpsb
cli
mov
hlt
cmp
fwait
xor
in
mov
or
popa
addl
pop
fbstp
adc
adc
jg
fwait
in
les
inc
lods
pusha
sahf
es
ljmp
ds
lock
pop
cwtl
decb
pop
sub
sbb
mov
data16
nop
mov
mov
lea
cmp
popf
jmp
cmp
fwait
cmc
lods
rcrl
dec
ljmp
and
adc
inc
test
cmpsb
jecxz
sub
xchg
cmp
cmp
shlb
dec
adc
adc
pop
ss
add
fbstp
fiadds
cli
subl
test
hlt
push
repz
sti
iret
jle
cwtl
push
pop
lea
xchg
inc
outsl
andps
roll
xor
fucomi
ss
ss
rcr
push
out
inc
out
add
mulb
arpl
outsl
fs
andb
leave
push
push
pop
cwtl
xlat
bound
adc
jb
lret
or
rorl
imul
mov
cmp
stos
jmp
cs
hlt
scas
dec
jmp
nop
sbb
mov
mov
ss
jno
insl
cmp
insb
xchg
sti
push
dec
sbb
sub
add
scas
hlt
ss
outsl
je
sub
xchg
fdiv
outsl
jmp
gs
fadds
add
push
fldenv
ret
insl
jg
adc
and
xchg
dec
ja
xor
or
sbb
push
lods
sbb
jp
xchg
fcom
sub
mov
movsb
arpl
jne
adc
cmpsb
mov
or
imull
inc
cmp
add
adc
xor
add
mov
xor
push
fwait
inc
cmp
push
cmp
or
sbb
rorb
and
sub
ficompl
inc
jle
adc
cmc
mov
or
fists
adcb
out
lret
sahf
and
outsl
mov
js
int3
test
in
sbb
cmpsb
dec
mov
daa
pop
cmp
insl
aas
mov
pop
inc
sbb
sbb
lahf
sub
push
xchg
or
mov
stmxcsr
ficoml
mov
divl
and
fxch
pop
xchg
insl
dec
jle
out
ljmp
cmp
in
outsb
jbe
xchg
and
xlat
sbb
rcr
add
leave
movaps
sub
adc
jp
int3
mov
adc
mov
xor
mov
insb
out
jae
inc
and
in
jne
shll
add
hlt
pushf
fists
xchg
clc
lods
stos
xchg
test
daa
push
jb
in
sub
inc
pop
ret
ds
aas
cmc
enter
push
movsb
mov
movsb
bound
pop
fwait
scas
xchg
aaa
cmpsb
jecxz
clc
sub
and
lcall
mov
adc
fwait
enterw
bound
lock
mov
loop
shll
push
adc
andl
dec
into
leave
dec
mov
xchg
mov
aad
popa
ss
xchg
addr16
aas
push
xor
sub
sti
addb
mov
push
adc
lock
scas
jbe
loopne
ljmp
in
rcl
pop
cld
aaa
je
loop
sbb
sbb
in
sub
pop
dec
das
movsb
add
nop
lret
push
fstpl
inc
jns
fcompl
pop
ja
xor
lods
or
aad
stos
pop
stos
mov
fcomip
out
int
sub
add
mov
daa
or
pusha
pop
push
loope
cld
in
jle
rolb
inc
mov
and
xchg
jmp
mov
out
add
cld
in
aam
mov
fimuls
iret
call
pop
nop
lea
mov
jle
flds
adc
es
outsl
nopl
cmp
or
scas
pusha
out
ss
out
jl
rol
add
sbb
or
or
mov
xorl
xor
filds
jmp
in
add
es
xor
out
jbe
mov
xchg
mov
mull
cs
aas
loope
lea
ljmp
mov
push
ret
js
xor
xor
loopne
push
dec
adc
or
ficomps
and
fdivrl
outsl
lea
std
xor
repz
mov
add
sub
sbb
lcall
insb
dec
lds
jnp
pop
test
adc
insl
inc
js
mov
sbb
loopne
mov
add
dec
jo
pextrw
pop
jne
sbb
cwtl
cltd
mov
or
lods
aam
cmp
adc
cmp
xchg
pop
add
adc
push
mov
dec
lods
mov
mov
ja
add
cmc
xor
mov
xchg
push
pusha
adc
dec
mov
pushf
leave
mov
out
aas
xor
lock
call
std
ret
sub
clc
adc
out
cmp
sahf
hlt
jecxz
jns
push
gs
stos
jne
push
shrl
mov
and
jl
inc
jne
adc
jp
lods
sub
mov
test
negb
cmp
lds
outsl
mov
sbb
ffreep
addr16
cmp
nop
cmpb
imull
mov
inc
adcl
subl
and
sub
call
cmp
mov
sahf
mov
add
in
sbbb
out
clc
andl
sbb
int
xchg
movsl
push
pushf
jb
pop
xor
push
push
pop
lcall
rolb
call
adc
sarb
xor
in
lds
push
nop
and
icebp
inc
popf
iret
mov
cmc
dec
scas
lea
pop
sahf
or
pop
mov
inc
es
sar
cmpl
mov
adc
sbb
mov
push
clc
fimuls
dec
pop
cmp
in
add
pop
stc
push
repz
roll
int3
lds
xor
jns
inc
mov
imul
sub
in
mov
ljmp
lods
lods
rorb
xor
mov
mov
jne
test
or
leave
push
sub
js
mov
mov
lock
mov
mov
cmp
and
iret
sbb
into
jge
ror
fists
dec
mov
addr16
jg
hlt
outsb
pop
data16
mov
dec
loop
push
jmp
lods
push
popfw
out
sahf
sbb
call
adcl
flds
stc
stos
aaa
cmp
and
or
stos
xlat
stc
sub
push
cmp
jecxz
fimuls
jp
cmpsl
or
addr16
jo
add
cld
sub
ret
push
mov
lret
hlt
loope
jnp
xchg
ss
xchg
rcr
push
dec
lcall
mov
sbb
cmp
sbb
xor
jge
test
das
stos
mov
or
jbe
dec
andb
stos
mov
inc
or
scas
lods
add
fisttps
fiadds
sti
mov
imul
shl
in
mov
lret
cmpsl
sarl
hlt
jmp
jno
repnz
jg
lret
test
push
or
outsl
orl
les
adc
imul
daa
cmp
push
sbb
mov
xor
mov
add
or
mov
push
outsl
addr16
imull
int
das
repnz
and
fsubrp
subl
push
lret
inc
lret
insl
or
test
mov
data16
movsl
mov
pop
pushl
pop
fmull
adc
cmp
fldt
mov
addr16
fistl
dec
inc
sahf
cltd
push
in
scas
insl
dec
xchg
cld
push
ljmp
and
mov
cmp
imul
ja
mov
outsb
push
dec
inc
xchg
xor
inc
in
cmpsb
cmp
mov
iret
pop
push
iret
adc
inc
insl
xlat
pop
xchg
mov
jl
inc
ficoml
mov
popa
sbbl
in
call
xor
test
andl
cmp
loopne
ficoml
cmp
pop
in
clc
popa
pop
sub
movsb
pop
inc
xor
push
lea
test
hlt
stos
ss
rorb
jae
jmp
fucomip
das
out
or
xor
xor
cmpsb
add
mov
orl
cmp
push
es
filds
xchg
adc
fs
cmpsb
dec
pop
lcall
adcb
cltd
mov
call
jbe
push
out
sub
adc
add
int3
iret
fstps
pop
iret
lods
sar
jno
sbb
or
mov
sub
xor
fstl
push
ljmp
or
pop
pop
jle
in
call
cwtl
mov
mov
cs
ja
movl
shrl
je
aas
adc
popf
ljmp
jp
stos
cmp
jbe
test
add
cs
mov
enter
xchg
jnp
mov
ss
imul
icebp
mov
or
and
jmp
push
sub
cmp
jbe
sub
and
cmc
scas
test
cmp
mov
xor
js
lods
mov
xor
mov
mov
ja
add
mov
hlt
push
adcb
test
pop
pop
stc
sub
nop
fs
adc
out
cmpsb
mov
mov
sub
mov
jmp
js
mov
fisubl
lcall
cmp
subl
jb
inc
ds
jne
mov
dec
insl
movsb
loope
inc
jo
push
jle
fdivrl
inc
push
pop
or
pop
cmpsb
xchg
das
lahf
cmp
jb,pn
scas
xorb
inc
dec
cmc
shll
push
shrb
inc
out
cmp
fists
or
pushf
int
fidivl
mov
mov
popf
fldt
das
shrb
sarl
js
and
shlb
je
adc
int
jo
inc
push
jb
outsl
jp,pn
imul
imul
loope
mov
ljmp
data16
mov
push
mov
ficoms
sti
lods
or
dec
mov
sbb
adc
popl
xorb
ret
out
nop
xor
shlb
xchg
xchg
in
mov
pop
aam
jae
femms
mov
pop
call
andb
dec
stos
push
stos
sub
cmpsb
jg
inc
out
out
add
pop
jg
xor
pusha
push
and
insl
jns
or
xchg
faddl
inc
lcall
rcrl
xchg
sub
pusha
mov
dec
jp
inc
scas
cltd
xor
push
pop
adc
gs
rcrl
data16
cwtl
je
adc
dec
or
popf
jg
mov
rcrb
int3
ss
inc
push
cli
adc
jg
xchg
divb
jbe
push
out
fldenv
adcl
dec
hlt
andl
push
test
popa
mov
adc
addr16
inc
lret
inc
xchg
rclb
fwait
and
repz
lcall
pop
mov
bound
jno
cltd
fcoms
mov
xchg
push
call
xor
call
cltd
movsb
iret
stc
mov
jb
push
mov
push
lret
aaa
and
mov
loop
mov
movsl
xor
dec
fiaddl
push
mov
inc
ficoms
aaa
push
push
jbe
push
lods
adcl
mov
aaa
into
out
jae
fimull
les
or
sub
push
add
mov
orl
cmc
repz
fisttps
enter
xchg
lahf
jb
out
and
jne
je
xchg
out
inc
dec
or
imul
sub
das
push
add
push
lea
les
pusha
inc
testl
xchg
iret
pop
sub
pop
sar
or
lea
dec
inc
inc
movsb
loop
push
adc
addr16
mov
gs
scas
sarb
mov
mov
out
divl
jp
insb
mov
rorl
and
inc
push
dec
jbe
out
xchg
popa
cmpsl
dec
push
sti
mov
pop
mov
xlat
enter
xor
dec
inc
add
out
sbb
or
jo
aam
xorl
std
test
stos
xor
jle
pop
movsl
mov
adc
jg
je
lret
mov
inc
cmp
cmc
cmp
xor
push
xor
jns
pop
shrl
push
pop
or
cld
int
push
mov
pop
ror
aad
dec
lods
sahf
popf
mov
les
mov
push
fwait
loop
inc
mov
icebp
mov
gs
pop
out
orb
cld
dec
xchg
add
outsb
dec
mov
imul
jle
xchg
addr16
and
cmc
mov
mov
mov
push
scas
inc
pop
mov
lods
pop
std
rolw
inc
mov
sbb
iret
adc
adc
dec
mov
mov
push
jne
or
outsb
push
jge
mov
in
adc
daa
mov
sub
lock
fisttps
xchg
adc
andl
imul
mov
dec
out
or
pop
xor
and
dec
mov
pop
popf
sub
xor
cmp
cli
push
inc
ret
subb
sbb
mov
clc
mov
sahf
int3
and
lret
idivb
add
cs
arpl
xchg
adc
jecxz
add
dec
ret
and
sbb
sub
or
jp
int
nop
rcr
int
mov
mov
repz
mov
jp
sahf
xchg
movsb
pop
pop
test
cmpsl
xchg
mov
xchg
popa
ljmp
xchg
lods
cmpsl
sub
push
mov
int
mov
cmp
fcompl
xlat
sub
xor
rcr
mov
sbb
and
fadds
adc
mov
adc
push
cs
mov
fs
mov
iret
lcall
dec
mov
dec
sub
sbb
and
pop
dec
mov
cmpsl
out
cmp
push
aam
mov
ret
fstpl
pop
sub
or
fs
lret
xchg
xor
push
lcall
sub
lret
push
in
sbb
bound
mov
mov
push
dec
jno
bnd
and
jns
jb
incb
xor
cmp
adc
xchg
dec
je
push
jno
popa
pop
aad
sbb
mov
int3
dec
les
pop
pop
test
int3
scas
adc
mov
rolb
dec
inc
stos
mov
test
lds
add
push
insb
adc
push
lea
mov
sbb
mov
mov
test
xor
pop
mov
mov
inc
add
push
cld
dec
je
movsb
push
mov
rclb
mov
xchg
sbb
adc
add
gs
jp
loopne
cmpsb
inc
pop
sub
mov
mov
mov
dec
cwtl
cmp
es
repnz
push
xchg
mov
inc
gs
mov
inc
adc
push
les
and
shrb
dec
out
sub
insb
and
mull
cltd
push
inc
shlb
xor
pop
imull
das
push
push
fs
jg
pushf
mov
inc
inc
js
cli
notrack
pop
xchg
scas
push
jnp
dec
xor
mull
mov
pop
fs
jb
mov
lahf
js
ret
dec
mov
andb
pop
ret
or
cmpsl
dec
jmp
mov
lods
sub
pop
add
cmpsb
outsb
and
ja
xchg
repz
or
mov
and
inc
addr16
jle
and
clc
test
leave
in
pusha
inc
int3
rolb
jnp
sub
sti
lcall
cmpps
add
fildl
sbb
or
lea
sub
mov
xchg
into
cmp
pop
mov
shlb
mov
adc
in
jno
icebp
ret
push
lods
xchg
mulb
inc
rorl
roll
and
fistl
mov
add
jecxz
add
loopne
loopne
call
adc
and
add
jnp
divb
mov
out
sbb
mov
pop
insb
xchg
pop
sbb
out
lds
xor
lods
mov
or
cmp
jno
or
cmc
mov
ss
push
pop
mov
inc
push
and
cmpsl
adc
dec
mov
mov
fistpl
adc
scas
lock
mov
mov
add
sub
xchg
pop
addr16
fs
scas
cmp
and
fists
adc
leave
sub
repz
dec
test
sub
add
shll
jns
xchg
push
jecxz
decb
sahf
jo
call
push
ja
and
mov
add
sbb
xchg
bound
in
pop
dec
addr16
push
cmpsl
jge
ficoml
xchg
je
pop
lds
mov
leave
push
xlat
push
test
js
sbb
add
into
pushf
push
test
fwait
nop
scas
data16
or
aas
ds
pusha
int
sub
lcall
cmp
mov
mov
stos
mov
clc
mov
data16
mov
mov
decl
dec
rcll
imul
lret
push
xor
push
cmp
scas
lods
cmp
add
in
test
mov
lret
icebp
cs
popa
arpl
cmp
jno
and
cmp
hlt
int
ja
push
push
mov
mov
pop
pusha
and
push
pop
cld
in
outsb
push
adc
icebp
je
mov
mov
dec
daa
pop
mov
xor
repnz
mov
mov
leave
lods
aas
mov
fisubs
sti
or
pop
jno
cmp
xchg
pop
sti
call
pusha
repnz
add
into
mov
mov
test
sbb
cmp
sti
icebp
dec
dec
ss
mov
repnz
loope
jg
inc
fldl
cmpb
jno
xchg
mov
int3
out
jg
add
adcb
xor
std
enter
cmp
xchg
iret
addr16
outsb
sub
insb
jg
fidivl
aaa
cs
fcomps
and
and
out
dec
jg
mov
dec
fdivrl
les
jo
or
push
inc
mov
cmpb
leave
cltd
adc
sti
repnz
aas
mov
sbb
repnz
dec
cwtl
inc
xchg
fisubrl
xchg
or
lods
pushf
mov
loop
js
sarl
fwait
movlps
xchg
loopne
mov
cmp
ret
mov
icebp
inc
ret
cltd
xchg
loope
pop
sub
pop
insb
push
xor
push
shl
lods
daa
fwait
mov
fldl
mov
inc
in
ror
scas
lds
out
push
dec
pushf
mov
mov
test
clc
mov
and
lahf
stos
rcll
mov
aaa
fsubs
and
mov
mov
fbstp
cld
pop
ficoms
nop
xchg
jle
push
pop
jnp
jle
fcom
sub
shll
add
mov
lods
dec
cmpsl
aad
test
shll
push
mov
inc
ror
jg
cmp
cmp
mov
stos
xor
test
push
imul
mov
jnp
cmp
pop
xor
inc
arpl
pushf
mov
insl
icebp
movsb
jnp
repnz
pushf
repnz
jbe
fs
push
xchg
imulb
push
adc
push
cmp
sti
mov
in
xor
add
pop
or
mov
push
insl
repnz
movsl
add
dec
rcr
lret
pop
je
mov
call
add
aas
or
mov
call
into
je
cmp
aas
xchg
out
imul
arpl
jmp
fs
or
mov
xlat
xchg
cmp
dec
ljmp
xchg
inc
mov
mov
cmp
cmc
insl
mov
dec
ja
sbb
dec
xor
add
push
and
jno
pop
addr16
xchg
pop
into
mov
xchg
fsubl
pause
jno
int3
xor
jne
lahf
xchg
cmpl
mov
subl
jbe
push
aam
cmp
pop
push
pop
call
daa
aad
pop
add
mov
sbb
adc
add
cld
dec
mov
cli
xchg
sti
xchg
test
push
xchg
dec
sbb
pop
out
dec
mov
ret
popf
hlt
pushf
mov
aas
sub
dec
jle
sub
test
dec
popf
cmp
mov
mov
dec
cmpsb
stc
push
push
pusha
in
lock
mov
movsb
sbb
fisttpll
or
out
lea
jmp
ljmp
dec
insl
mov
mov
cltd
push
cmp
arpl
push
cmp
cmp
mov
mov
cmpsl
imul
out
enter
cld
jne
les
push
mov
fcoms
or
push
mov
mov
fsubs
fs
xor
and
arpl
cmp
ss
pushf
orl
movsb
insb
cltd
xlat
pusha
mov
cltd
and
adc
mov
xchg
xchg
mov
push
test
mov
sbb
fldt
cmp
aas
xchg
mov
inc
pop
out
cmp
cmp
popa
pop
mov
test
mov
pop
fs
jno
and
dec
imul
pop
mov
xchg
test
jae
lock
mov
repnz
push
addr16
int3
rcl
dec
push
hlt
mov
ss
insl
push
pop
jo
fisttpl
loopew
xor
add
or
jmp
jg
je
setg
push
lret
xchg
inc
mov
stos
orl
mov
pop
out
mov
arpl
sub
icebp
jmp
shlb
icebp
push
lds
dec
stos
mov
cmp
sbb
mov
push
lret
out
inc
mov
cmp
inc
jne
aaa
pop
daa
pop
mov
test
or
repnz
xchg
jbe
mul
dec
loop
test
cmp
fnstenv
jmp
push
out
cmc
xchg
stos
loop
pop
and
adc
push
add
icebp
dec
int
ret
das
movaps
loopne
fwait
and
stc
out
cs
repz
fisubs
jge
daa
loopne
and
dec
inc
push
lods
neg
jae
out
cwtl
aas
pop
jmp
lea
push
pop
mov
lock
mov
dec
insl
mov
stos
push
push
xchg
scas
aas
mov
leave
aaa
div
repnz
inc
push
jle
in
cmpsb
pop
adc
inc
aas
jg
cmp
cwtl
lock
std
and
jne
cs
cld
inc
add
iret
push
loope
xchg
ljmp
imul
jecxz
jae
pop
ds
sbb
cmp
push
shlb
cli
shlb
ret
iret
outsb
fimull
mov
adc
jnp
sbb
cwtl
pop
sbbb
imul
iret
mulb
xchg
cmc
hlt
mov
sbb
fwait
mov
pop
mov
call
pop
inc
loope
jp
cmp
cwtl
adc
mov
lahf
push
and
lea
movd
cmpsl
inc
and
repz
test
adc
and
adc
mov
out
outsl
push
icebp
jmp
mov
es
lods
push
mov
cmp
cmp
sbb
ret
jnp
stos
jecxz
jbe
xchg
movsl
popf
repz
adc
inc
mov
rcrb
pop
cwtl
xor
fsubrp
mov
test
pop
lret
mov
cmp
cmp
dec
cmpb
add
outsl
mov
jmp
insb
fwait
jg
fstps
ja
xchg
sbb
sahf
ljmp
xor
sbb
addr16
mov
icebp
fmull
sbb
movsb
ljmp
xchg
pop
jmp
ja
enter
das
test
outsb
sbb
and
adc
loopne
aad
loop
push
cmp
mov
pop
fiadds
ret
mov
daa
mov
mov
lds
popf
insb
ss
push
dec
ds
movsl
in
mov
pop
loope
shl
xchg
or
insl
arpl
or
inc
xchg
arpl
inc
adc
aas
xchg
xchg
repz
mov
xchg
xchg
out
loopne
xchg
cmp
call
dec
out
dec
js
lahf
push
movsl
xor
dec
fildll
insb
in
xor
in
subb
je
test
pop
cmpl
jle
lock
pop
push
cmpsb
arpl
test
insb
bound
pop
scas
loop
shlb
in
decl
inc
cld
jb
fnstcw
lds
leave
mov
into
mov
cmpsl
hlt
in
imul
sbb
nop
mov
xor
pop
out
addr16
pop
add
mov
xor
fcoms
in
push
push
adcb
cmp
xor
mov
lds
lock
lock
mov
mov
in
fsubrs
push
rorl
lods
cmp
aam
insl
mov
xchg
sti
inc
xchg
mov
sbb
sub
mov
pop
sub
jge
inc
cmp
fildl
mov
sbb
addr16
jmp
pop
pop
cmc
test
push
dec
adc
popfw
loopne
enter
daa
pop
iret
icebp
and
ficoml
jmp
lock
fmulp
in
in
jb
rcrb
cmpsb
ret
lods
sbb
push
sub
repnz
add
andl
loope
inc
sti
xchg
sub
mov
movsl
dec
pop
rol
scas
push
leave
inc
pusha
call
aam
and
outsl
sub
jl
clc
imul
sub
jbe
push
sub
iret
outsb
mov
call
adc
cmp
lret
dec
fs
xchg
add
xor
pop
fiaddl
lret
xor
dec
push
push
xchg
mov
inc
addr16
aad
pop
andb
loop
pop
in
ret
data16
outsb
jmp
mov
or
mov
dec
mov
mov
inc
cmp
aam
jae
push
in
sbb
fcomip
pop
scas
ror
in
jmp
pop
push
or
in
addr16
scas
stc
arpl
enter
jo
push
sti
cmpb
cli
out
fisttpl
inc
in
add
adc
les
xchg
arpl
icebp
leave
and
cmp
insb
in
mov
bound
xchg
es
xchg
dec
es
imul
ret
sub
pop
enter
or
adc
movl
daa
sub
ss
insb
add
clc
and
mov
and
mov
popa
cmc
xchg
xchg
push
aam
pop
cmp
xor
js
adc
rcr
push
cmpl
adcb
ja
lahf
es
cmp
inc
scas
or
inc
mov
fwait
or
lcall
stos
pop
mov
xor
inc
sub
int
call
movsb
pop
cmpsl
or
enter
sbb
adc
inc
daa
mov
ljmp
mov
xchg
pop
js
jb
mov
mov
loopne
lahf
test
sbb
mov
or
dec
pop
mov
lret
fimuls
xchg
cmovg
andl
scas
data16
add
inc
inc
negl
adc
fadd
sub
pushf
jno
mov
dec
movsb
xchg
xchg
les
arpl
testl
jge
addl
mov
fldt
or
add
push
fstpt
push
movl
lret
push
lods
inc
mov
and
sbb
jo
jns
stc
sbb
add
adc
rorb
mov
gs
pop
lret
sub
push
sbb
push
jns
out
adc
fldl
xchg
push
cmp
imul
int
ret
fwait
dec
pop
pop
fisttps
in
aas
inc
movb
outsl
mov
dec
ret
sahf
sbb
xchg
int3
jnp
out
leave
pop
call
aas
into
faddp
addr16
loope
push
int
lcall
jmp
repnz
push
inc
adc
xor
shlb
jle
test
mov
xchg
jne
fidivrl
push
les
jg
outsb
test
in
mov
testl
add
aas
mov
sbb
mov
scas
adc
lock
in
sub
inc
or
imul
inc
stos
int
sar
outsb
add
jae
mov
into
shlb
cltd
mov
insb
arpl
mov
cmp
push
push
mov
daa
cmpsl
xor
lret
inc
fiaddl
ljmp
adc
test
ret
cmp
xchg
mov
repz
push
push
inc
inc
cltd
lock
fs
and
pop
xchg
fcoms
inc
in
ljmp
adc
stc
jo
test
insl
arpl
or
mov
mov
sub
xor
mov
mov
sub
push
aas
ljmp
aam
test
jecxz
inc
dec
sbb
push
mov
ja
sbb
mov
push
push
idivl
mov
cmp
pop
pushf
sub
das
jo
adc
hlt
mul
push
int3
inc
mov
or
pop
jne
jb
push
clc
mov
xchg
push
movsl
mov
pop
movsb
fcmovnbe
ss
mov
aaa
loop
push
outsl
ja
xchg
sarl
fnstenv
jmp
jo
mov
and
repnz
pusha
push
mov
or
lock
sub
stos
and
sti
push
xor
fnstsw
enter
rcrb
push
mov
movsl
xchg
scas
mov
lcall
lea
or
mov
jg
mov
test
mov
int3
xchg
jg
stc
in
jnp
adc
sbb
and
movsb
scas
sub
es
jp
movsl
sbb
les
les
cs
sub
push
shll
push
call
int3
outsl
aam
cs
cmp
adc
add
xchg
or
xchg
fsts
and
mov
shlb
xchg
mov
fdivs
add
pop
insl
jle
out
pop
pop
je
and
xchg
mov
jb
mov
outsb
and
addl
in
inc
xchg
cmp
scas
inc
ss
mov
fimuls
rcrb
pop
icebp
aad
xchg
test
imul
enter
sub
call
movsb
or
xor
push
mov
aaa
pop
jno
inc
ja
pop
mov
in
cld
and
outsl
jmp
insb
inc
xchg
xchg
inc
dec
pop
xlat
cmp
sahf
push
or
cmpsl
add
fdivrp
or
xchg
sti
and
out
cs
cmp
mov
mov
inc
mov
rorl
sub
jge
mov
out
jl
jle
push
mov
mov
sub
mov
cmp
add
mov
or
xchg
dec
pop
adc
lahf
jecxz
lock
sub
xor
mov
test
scas
iret
call
lock
das
push
int
and
pop
mov
imul
sub
adc
cmpsb
rcrb
adc
cld
jbe
sub
aaa
lods
or
pop
pop
xchg
push
clc
pop
xor
or
cwtl
mov
sbb
decl
sbb
or
into
ficompl
mov
mov
dec
dec
dec
frstor
and
mov
sbb
pop
notl
es
shlb
subl
lret
cli
cwtl
adc
mov
inc
mov
out
scas
and
repnz
pop
mov
xor
leave
mov
cmp
sahf
xchg
add
pop
jb
sbb
jns
in
icebp
out
dec
out
sbb
pcmpgtb
mov
daa
push
cmp
push
incl
xor
imul
rolb
cmp
fsubrl
sbb
push
xlat
cmp
test
mov
jge
inc
mov
loopne
pop
enter
mov
rolb
pop
inc
aas
lods
dec
repnz
add
xchg
repz
cmp
std
push
pusha
jo
fwait
repz
je
sar
push
daa
add
call
cmc
out
fisubrs
in
popf
icebp
cmpsb
dec
lahf
daa
call
hlt
inc
js
push
xchg
movnti
and
movsb
iret
loopne
test
xchg
adc
add
fstl
sub
cltd
mov
jl
cmp
out
lock
pusha
mov
cmpsl
outsl
cmpsl
jb
sub
pop
fdivl
sbb
sbb
xlat
dec
xor
int
push
rclb
lret
push
lret
std
xchg
inc
hlt
xor
lret
sbb
mov
ret
mov
jle
leave
test
jg
mov
stc
into
sti
movsb
outsb
mov
mov
les
notb
and
mov
clc
scas
sbb
mov
stos
push
scas
inc
jne
imul
sub
dec
push
es
and
mov
and
pop
xchg
nop
pop
add
or
jmp
fsubrl
test
jp
cltd
dec
mov
inc
sub
cmp
adc
cli
jecxz
push
das
and
sub
repnz
mov
sbb
adc
ret
jo
cmp
cltd
lcall
sub
adc
sub
lea
dec
lock
jae
mov
outsl
adc
xor
pop
or
or
and
push
sub
push
sbb
dec
mov
imul
imul
cmp
and
jl
or
fdivrs
inc
rcll
or
bound
aam
xchg
dec
inc
out
cmp
shll
subl
in
xor
jmp
enter
and
in
movsb
cld
cmp
lock
jne
pop
es
mov
and
jne
dec
xchg
sub
mov
inc
push
pushf
xchg
jno
pop
pushf
cmpsb
mov
pop
sbb
jge
out
lret
out
mov
inc
dec
enter
lret
lock
inc
scas
sbb
sbb
icebp
jge
jb
add
repnz
push
sbb
add
ds
sbb
adcl
xchg
roll
cmc
sub
adc
arpl
adcb
ds
loopne
mov
fs
sbb
hlt
repz
ljmp
adc
cmpsl
cli
popf
leave
repz
add
or
stos
daa
test
into
ds
jb
pop
ja
inc
mov
insl
lret
lea
mov
mov
call
pop
and
lods
sti
jmp
adc
xlat
ljmp
sbb
mov
stc
mov
mov
iret
rcr
dec
in
xchg
sbb
mov
movsl
ja
xchg
mov
icebp
sbb
stos
push
aas
or
clc
out
xor
stc
inc
inc
dec
mov
out
imulb
jns
mov
js
jecxz
add
fidivl
lock
aas
sub
sub
fisttpl
outsl
test
mov
pusha
jo
mov
xor
in
addr16
popf
sub
out
fcoml
mov
xorb
cli
addr16
out
ret
pop
das
mov
mov
jbe
stos
jae
sbb
xchg
in
in
cmpl
push
popl
sti
test
outsl
xchg
mov
loope
int
push
dec
push
ret
fldcw
std
in
movsb
movsb
sub
and
xlat
mov
add
jp
loopne
stos
scas
mov
daa
and
add
sub
sbb
iret
add
xor
push
xchg
push
sbb
sbb
jl
mov
push
fstp
or
xchg
inc
inc
imul
setle
leave
xor
lea
jae
pop
cwtl
test
ficompl
pop
popa
dec
inc
inc
mov
inc
enter
xchg
das
push
cltd
xchg
mov
mov
lret
mov
icebp
in
or
js
cs
orl
jl
or
jge
mov
cmpb
xor
sub
mov
addl
dec
mov
pusha
mov
es
xlat
stos
lret
loop
popf
rcrl
imul
and
cmp
int
and
jo
adc
cmpb
mov
xlat
mov
inc
aas
test
jp
pop
sbb
das
xor
sbb
ret
and
daa
int
adc
cld
idivl
scas
lods
outsb
xor
add
adc
cmpsb
cmp
push
push
push
arpl
jnp
push
subl
idivl
sahf
mov
jo
mov
subb
aas
mov
xor
or
jge
call
sub
inc
add
insb
movsb
mov
mov
sub
shll
push
mov
pop
or
and
fisttpll
adc
jg
roll
inc
iret
mov
lret
cwtl
mov
loop
mov
stos
mov
sbb
movsb
pop
popa
xchg
sub
stos
cmp
repz
sahf
rcl
ja
movsb
leave
loopne
loopne
mov
sarb
pop
test
lock
push
mov
test
sbb
add
aam
sbb
lret
loop
sbb
shrl
mov
push
or
dec
mov
inc
test
xchg
and
xchg
es
out
sbb
pop
lods
xchg
fldcw
lcall
pop
sbb
int3
adc
movsb
sbb
xchg
cmp
and
shll
sub
mov
nop
aad
fsubr
push
xor
sbb
inc
in
push
cli
pop
jbe
mov
sbb
lea
xor
jb
jbe
andb
or
mov
dec
int
sbb
stos
fcoml
test
movsb
enter
movsl
rorl
mov
lea
push
push
dec
std
and
jmp
jno
fbld
lock
lods
xchg
jne
rcll
jns
sbb
sub
pop
shlb
cmp
xor
pop
xor
adc
jl
push
loopne
stc
inc
dec
out
test
jl
jmp
es
fistpl
mov
lahf
insl
hlt
cmp
lret
fldcw
cli
jecxz
dec
pushf
decl
andb
repz
inc
out
sub
push
ja
adc
mov
sub
sub
lea
or
sbbl
push
test
pop
adcb
mov
cmpsb
pusha
fisubs
sbb
loop
in
xchg
adc
imul
jns
xchg
sbb
pop
scas
jmp
cli
shrb
jp
xor
pop
test
mov
push
lcall
test
jmp
call
mov
pop
dec
mov
out
std
hlt
ret
sahf
in
imul
pop
adc
outsl
or
jne
call
adc
dec
sahf
pop
jbe
inc
inc
pop
inc
sub
sbb
cmpsl
and
loope
inc
in
mov
fwait
or
inc
out
pop
mov
xor
neg
test
mov
lret
jg
push
mov
jns
idivl
sbb
dec
cmp
pop
push
ss
xor
or
fcompl
mov
repz
sub
ljmp
test
push
push
pusha
xchg
and
push
push
jno
cltd
cmp
add
lcall
jbe
mov
je
loope
movsb
pop
pop
push
pop
rorl
push
outsl
add
imul
jae
sarb
out
and
adc
stos
inc
sub
testl
enter
sbb
add
push
or
call
xor
mov
lock
jle
jns
faddl
push
ret
test
sbb
or
fbld
gs
mov
jnp
mov
mov
loop
adc
sbb
jge
lret
bound
bound
add
in
rcll
loop
lds
into
aas
mov
cli
hlt
mov
and
jle
dec
inc
adc
mov
push
push
inc
xchg
call
mov
subb
lods
jl
cmp
push
mov
orl
outsb
mov
xlat
add
xlat
mov
mov
and
jecxz
inc
push
dec
rolb
loope
cli
mov
stos
xor
jmp
inc
push
into
sub
and
test
rolb
push
movsb
xchg
mov
std
insl
lea
inc
aam
shrl
inc
repnz
gs
mov
lret
movsb
xchg
sub
sbb
hlt
cmp
ror
cmp
lods
jg
mov
and
ds
lea
lret
loop
xor
xor
xor
mov
sbb
cmp
xchg
out
inc
fwait
loopne
leave
dec
mov
xor
inc
jns
insl
sub
adc
inc
sbb
mov
notb
jno
test
int
test
jne
and
data16
and
push
mov
add
inc
cmp
cmp
daa
cs
addr16
es
cs
imul
add
mov
push
inc
add
shlb
scas
or
jmp
adc
lods
lds
cltd
cmpsl
ret
and
idivb
mov
dec
inc
stos
pop
mov
xchg
leave
push
cmp
sub
decl
mov
out
incl
jo
and
jg
add
pop
into
scas
outsb
je
xchg
jno
pop
pop
es
pusha
jg
xchg
test
adc
jae
and
aad
repnz
ud2
xlat
pop
jnp
cs
push
jle
mov
xor
push
cmpsl
adc
push
pop
mov
jae
lea
mov
adc
xlat
inc
mov
ret
and
mov
mov
or
imul
popa
cmp
sub
lods
add
shl
ds
pop
push
and
sub
in
pop
je
and
or
lods
arpl
test
dec
fldenv
sbb
cmpsl
ret
movsl
cltd
aaa
push
sahf
push
rcrl
repnz
jae
fs
sub
cs
mov
mov
mov
xor
in
mov
mov
fimuls
stos
movsl
jb
push
dec
jp
arpl
faddl
clc
jge
mov
xor
inc
and
xchg
xorb
adc
mov
cmpsb
lds
xlat
lret
js
sar
adc
call
add
loope
push
mov
pop
sbb
lods
test
dec
or
lcall
ret
mov
inc
fistpl
movsl
sahf
adc
stc
stc
lods
dec
jb
clc
mov
fs
inc
pusha
add
fimuls
jne
adc
in
lea
ds
movsl
shll
cltd
mov
scas
inc
jmp
mov
jbe
mov
xor
lcall
es
jb
loopne
jmp
int3
cmp
xchg
clc
rolb
dec
pop
push
xchg
pop
mov
jnp
test
or
outsl
sbb
loope
aam
mov
sub
sub
shll
xchg
xchg
hlt
cmp
in
cmp
add
inc
add
push
pop
dec
insb
mov
or
shlb
divl
in
sub
data16
cmp
sbb
push
loop
nop
sbb
rclb
dec
sbb
jp
fnstenv
ss
mov
mov
int3
adc
ss
movsb
lret
int3
or
xor
adc
and
mov
js
and
adc
jecxz
pop
outsb
mov
push
adc
push
sub
jg
fidivs
jns
aam
push
scas
scas
icebp
subl
call
sti
cmp
mov
pop
inc
pop
shlb
lahf
pushf
subb
stc
ja
lret
and
ret
add
aad
aad
or
lods
push
mov
or
les
adc
mov
adc
icebp
call
mov
xchg
add
je
jle
jns
in
les
cld
sbb
dec
xchg
lds
sub
les
and
inc
popa
icebp
dec
lock
data16
jmp
mov
fnstsw
icebp
test
ret
sub
out
fidivrs
sbb
fcoms
xchg
hlt
pop
xchg
cmp
lods
lret
cmp
sbb
adc
sar
xor
fcmovbe
stos
xchg
push
sub
rcr
ficoml
daa
cmp
cmpsl
addr16
or
add
lahf
imul
push
in
and
jns
dec
enter
pop
stc
jge
xor
or
lods
adc
inc
aam
xchg
xchg
in
mov
std
or
sub
xchg
or
mov
sub
mov
jnp
pop
fdivrp
xchg
icebp
mov
xor
jo
dec
pop
rcrl
out
jge
cmc
mov
scas
xchg
icebp
xlat
dec
out
mov
mov
jb
sbb
lahf
fiadds
lea
lret
xor
addr16
test
and
sbb
fwait
shl
adc
rorl
sbb
lods
mov
inc
sub
xchg
and
stos
cmpl
push
adc
sub
sub
and
cwtl
popa
mov
in
pop
xchg
mov
ror
in
cltd
and
scas
orb
stos
stos
mov
adc
mov
push
sbb
mov
mov
sub
add
mull
leave
push
test
imul
mov
pop
adc
fsubrs
xlat
push
jne
jmp
mov
out
fisubrl
lret
mov
push
rclb
adc
outsb
dec
cmp
int
lea
and
fnstcw
or
fisubrl
push
sarl
pop
inc
or
push
in
push
insb
ror
fwait
shl
push
inc
fistpll
sbb
push
xchg
in
mov
sbb
mov
test
sbb
mov
xlat
adc
jge
imul
pop
xor
iret
sub
mov
mov
test
mov
fidivrs
xor
jmp
jae
cs
sti
push
push
mov
add
jmp
pop
std
mov
inc
adc
jmp
iret
xor
jae
sbb
inc
test
cmpsl
jg
inc
or
inc
jnp
std
xchg
test
neg
sti
ja
out
lahf
cwtl
mov
pop
mov
push
test
mov
dec
inc
or
mov
leave
jb
cmc
cmp
sbb
popf
xchg
inc
push
es
and
and
xchg
test
lods
jnp
mov
mov
dec
pop
push
lret
test
cmp
inc
pop
and
pop
inc
jmp
cmpl
jo
aam
jecxz
jmp
mov
mov
ss
sbb
pop
popf
dec
lahf
lret
adc
out
in
fsubrl
pop
push
inc
push
fiadds
std
ja
scas
mov
jle
jns
mov
lret
sbb
pop
bnd
xlat
jo
loopne
push
aad
inc
push
in
mov
test
xchg
pop
icebp
jle
je
cmpsl
fistpll
insl
dec
cmp
cmpsb
inc
push
icebp
cmc
cmp
mov
sub
mov
pop
add
mov
sub
mov
xchg
cs
movsl
jge
push
push
add
push
sub
das
scas
dec
xchg
test
ret
sti
outsb
stos
adc
add
and
inc
sahf
imul
xchg
sub
dec
jbe
mov
test
jo
mov
ret
insl
sbb
vmwrite
mov
movsl
sbb
jae
rcrl
dec
mov
mov
int
mov
push
lds
mov
add
and
aad
mov
jp
in
mov
pop
ficoml
pushf
dec
xor
clc
movsb
inc
sbb
scas
ljmp
lret
add
pop
mov
adc
repz
out
repz
filds
push
js
aad
or
outsl
imul
mov
in
push
adc
add
add
mov
mov
out
inc
xchg
fldt
mov
fstl
mov
mov
inc
pop
pop
cmpsl
lret
cli
xchg
ja
aaa
clc
fisubl
mov
mov
sbb
stos
jg,pn
js
add
sbb
mov
aad
lock
rcrl
pushf
xchg
xchg
mov
mov
dec
sti
dec
push
pop
and
push
lret
aas
sahf
ret
pop
into
jnp
shll
pop
xor
cmp
sub
hlt
lahf
mov
xchg
jb
push
cmp
lods
and
fwait
push
movsb
push
stc
rclb
mov
scas
mov
dec
addr16
inc
mov
or
sbb
lods
push
rorl
pop
inc
xchg
mov
cli
lock
ja
iret
jle
scas
mov
adc
fs
sub
or
push
ficompl
movsl
pop
jno
test
adc
xchg
add
mov
addl
or
xchg
inc
mov
dec
xchg
mov
or
bound
cmpsl
sti
jns
lds
leave
pop
sahf
lods
adc
or
into
push
lods
cld
test
inc
jo
and
aam
rcll
loop
mov
xchg
incl
jmp
call
jmp
mov
decb
lss
pop
add
jns
sub
push
std
mov
cltd
cli
icebp
fnstenv
inc
loopne
jne
cld
add
add
call
enter
pop
sbb
scas
fstp
sub
es
mov
movsl
cmp
outsb
dec
jb
sub
adc
js
popf
shll
aaa
pop
repz
sub
jl
jb
call
stos
jnp
dec
adc
scas
xchg
lcall
inc
jno
lret
imul
inc
daa
or
push
arpl
dec
jbe
mov
cld
mov
dec
cld
lods
inc
fistpl
in
imul
std
dec
int
add
sub
lods
movsb
mov
push
mov
push
adc
mov
xchg
sbb
cltd
lret
pusha
cmovge
andb
xlat
dec
adc
mov
in
rolb
mov
ret
rolb
mov
mov
sbb
cmp
dec
cmpsl
push
and
sbb
inc
int
rol
push
add
lret
rcl
mov
out
or
subb
mov
inc
daa
mov
sub
cs
test
jb
enter
enter
fs
fnstsw
imul
xlat
or
mov
jg
add
jle
xor
xchg
shlb
xor
call
imul
pop
or
cli
cmpsb
pop
adc
dec
out
insl
add
cmp
jae
ret
adc
int
out
pusha
sub
xchg
je
mov
push
loopne
mov
adc
das
inc
lds
dec
out
out
call
test
psubd
loop
jb
sub
mov
call
sti
and
jecxz
adc
mov
rorl
pushf
test
test
loope
aas
or
lods
lcall
loop
gs
vmwrite
push
mov
push
sbb
pop
pop
sbb
in
or
pop
sub
daa
or
push
mov
and
mov
push
xor
ss
dec
gs
sbb
dec
mov
push
mov
push
divl
ret
or
sub
mov
ss
aaa
push
adc
mov
loopne
test
or
xchg
xchg
mov
jb
arpl
dec
and
sbb
mov
mov
imul
sub
inc
and
shll
mov
test
aam
dec
daa
aad
mov
mov
jno
mov
xchg
sub
cld
mov
enter
sbb
xor
cmp
pop
mov
lcall
mov
insl
aaa
add
dec
ret
dec
and
ret
push
imul
add
outsb
push
mov
das
cmp
and
dec
jecxz
xlat
mov
sbb
jbe
dec
mov
push
sbb
ss
stc
pop
call
cmp
aaa
jecxz
je
ja
pop
daa
inc
sbb
push
std
jecxz
int
xchg
inc
sbb
push
call
mov
in
cmp
mov
inc
inc
lcall
lretw
shrl
mov
add
ljmp
mov
sub
fs
push
ret
mov
sbb
addl
cmp
xlat
dec
mov
jmp
cmp
stc
ror
jb
sbb
int3
cld
scas
out
int3
bound
fmulp
jp
loopne
imul
ljmp
lods
popf
mov
mov
into
jns
xor
and
arpl
pop
test
loope
mov
pop
arpl
and
lahf
jmp
les
push
push
cmpsb
repnz
and
pop
mov
lea
inc
ds
mov
mov
sbb
mov
rcrb
mov
and
or
add
sbb
pop
lcall
jnp
mov
call
sub
mov
lahf
mov
jbe
xchg
cmp
inc
and
and
jne
inc
push
inc
xchg
mov
pop
jns
jmp
jmp
pop
dec
jmp
push
lock
insl
lods
ret
ljmp
fwait
shl
add
addb
push
les
mov
fiaddl
inc
inc
add
sbb
push
push
mov
aad
push
das
jge
pop
lock
iret
fsts
lea
insb
xor
mov
push
int
ljmp
jo
dec
test
xor
scas
lock
andl
mov
pop
aas
shll
jne,pt
dec
adcb
shrl
xor
inc
push
into
pop
aad
or
push
jns
lret
adc
cmp
stc
push
mov
xchg
push
and
lahf
das
jmp
add
lahf
dec
xchg
xchg
sub
and
scas
jmp
mov
push
xor
mov
inc
lahf
lock
clc
out
addr16
leave
push
std
enter
adc
shr
notl
out
xchg
cmp
stc
shlb
cmpsl
sub
xlat
jae
sub
sti
inc
fs
dec
jp
notl
arpl
mov
das
pop
pop
lods
neg
repnz
pop
roll
mov
and
dec
std
not
insl
xor
lods
mov
rcrl
mov
sbb
icebp
std
cmp
and
je
test
test
lds
cmc
sub
xchg
out
xchg
fadds
jmp
cmp
out
or
xchg
imul
nop
int
aad
dec
mov
loopne
fsubr
das
jns
adc
adc
xorb
xor
sti
add
pop
sbb
cmpsb
mov
push
lods
fnstcw
loop
push
repz
ret
mov
fisubl
fimuls
std
fstps
pop
fmul
mov
int3
mov
dec
popa
out
inc
push
push
dec
sub
cli
lret
and
xlat
int3
fisubs
push
dec
sti
jae
and
jbe
xor
push
sbbl
hlt
mov
or
inc
pop
clc
push
dec
hlt
fimuls
test
fnsave
pop
sbb
mov
aas
pop
lret
sub
inc
mov
inc
sarb
and
dec
sbb
lea
xchg
push
outsl
lds
bswap
enter
adc
pop
cld
xor
mov
jle
decl
mov
or
mov
addr16
jge
dec
fsub
in
dec
stos
dec
lods
cltd
inc
ss
push
clc
add
out
xlat
mov
dec
xchg
lock
out
push
in
xchg
lods
pusha
and
sub
out
fmulp
shlb
sti
xchg
sub
mov
in
sbb
ds
in
mov
jne
lods
in
enter
push
pop
loop
mov
xchg
fdivs
inc
mov
insl
enter
dec
cmp
xor
cld
inc
push
nop
xor
aad
cmp
adc
and
mov
lds
ljmp
xor
cmp
cmc
or
pop
pop
into
mov
mov
dec
xchg
pop
rorb
jns
cmpsb
dec
pop
ret
and
out
fisttps
sti
cmp
loop
xchg
popa
xchg
adc
pop
insb
leave
leave
in
cmpsl
bound
jo
imul
or
call
pop
popa
pop
jns
cmpsb
iret
pop
push
adc
aad
xor
mov
loope
pop
scas
mov
xchg
gs
out
pop
stc
sti
movsb
xor
bound
stos
xchg
test
movsl
xchg
jl
cltd
or
pop
lret
dec
xor
icebp
jg
inc
out
add
sub
inc
loope
arpl
fmuls
nop
mov
clc
rep
fs
mov
xor
dec
insl
jne
push
push
cmpsl
inc
mov
or
mov
fsubrl
add
test
gs
jo
push
and
lods
mov
or
les
imul
ljmp
cmpsl
nop
loop
movsb
lcall
adc
lret
add
jae
push
incb
jbe
dec
inc
pop
cmp
mov
inc
cmp
push
sbb
add
lods
adc
jle
fbstp
cmpsl
lods
sarl
subl
movsl
fbld
rolb
and
scas
dec
shl
cmpsb
leave
xchg
inc
roll
xchg
lock
cmpsb
pop
mov
mov
jnp
add
sarl
xor
fsubrs
andl
jmp
sub
sub
stos
lret
cmpsb
xchg
insb
push
das
rcr
mov
mov
lret
lcall
stos
sbb
pop
repnz
jmp
push
jmp
xlat
sub
jbe
xchg
and
xorb
out
jge
xchg
icebp
lock
shll
repz
dec
loope
or
mov
repz
out
mov
cmp
xchg
outsl
cmc
sbb
jp
push
out
cld
inc
jl
into
call
adc
adc
fadds
xchg
icebp
xor
sbb
adc
mov
jle
push
ret
repnz
push
arpl
and
mov
popf
ret
int
clc
in
decl
in
insl
cli
cwtl
sub
add
ljmp
or
lcall
mov
inc
fdivrs
imul
sub
dec
out
lods
jecxz
scas
mov
push
mov
sbb
xor
adc
loope
push
call
xchg
ja
and
fcmovu
outsl
or
mov
fidivrl
lret
add
mov
loope
mov
fs
popa
mov
gs
dec
pop
pop
jnp
outsb
pop
subl
sub
test
push
jle
cld
mov
jbe
in
jnp
arpl
mov
cltd
push
idiv
mov
ljmp
sub
mov
shlb
sbb
out
addr16
fldcw
pop
xor
mov
pop
test
arpl
les
adc
mov
dec
lods
xchg
mov
pop
or
mov
xor
xchg
lahf
call
cld
cmc
cmp
cmpb
ds
cs
cmp
gs
dec
mov
pushf
outsb
sbb
jle
push
inc
jb
cmp
push
out
imul
inc
sub
lock
clc
mov
cmpsb
and
mov
xchg
ret
jge
cli
mov
mov
xchg
int
inc
enter
leave
mov
sub
bswap
pusha
xlat
fbstp
adcl
gs
daa
movsb
and
xchg
cltd
lds
cmp
in
in
fsubrp
push
inc
adc
add
out
lcall
push
stos
dec
push
prefetch
or
and
fnstcw
in
xchg
or
push
inc
mov
mov
xchg
pop
mov
in
inc
pop
mov
outsl
mov
sbb
ds
pushf
xchg
in
cs
iret
mov
xchg
gs
scas
xor
sub
aam
das
repnz
in
pop
mov
xor
leave
mov
into
inc
ficoml
cmc
lds
mov
out
idivl
out
cltd
shr
mov
insb
push
mov
in
nop
cli
inc
fnstsw
mov
insl
xchg
mov
mov
lods
mov
pop
movsb
loopne
mov
sub
mov
xchg
pop
mov
out
fistpll
xchg
mov
cmp
cmpsl
mov
roll
inc
lret
lahf
sahf
add
mov
add
mov
cmp
push
pop
mov
mov
xor
xchg
std
pop
addr16
adcb
mov
xchg
loop
in
dec
jno
and
cltd
pop
inc
add
mov
repnz
mov
push
pop
xor
jge
jecxz
lea
imul
shrl
iret
sbb
int3
loop
push
xchg
jg
in
icebp
cld
mov
int
divb
into
xor
bswap
js
test
sbb
jae
or
sbb
icebp
les
inc
arpl
add
fstps
lret
dec
push
data16
mov
incb
xor
dec
lret
mov
pop
jecxz
stos
roll
dec
add
mov
cmp
push
pop
push
adc
xchg
fidivl
push
fdivl
sub
pop
mov
aam
out
stos
push
aam
dec
add
sbb
insl
lods
jg
out
fnstsw
jne
int3
push
imul
xchg
popf
lret
addr16
xorb
scas
push
push
subl
in
jg
jnp
fsubr
insb
dec
mov
stos
scas
pop
sub
or
xchg
xorb
cmpsb
das
or
cmp
data16
push
mov
pop
sbb
int
sub
push
cmp
jo
mov
and
nop
mov
and
adc
shrl
xor
les
popa
scas
push
shrb
sbb
xchg
test
fwait
adc
adc
sahf
bound
rcll
gs
dec
xchg
out
sub
push
outsl
lods
fistpll
fnsave
int
fs
std
fdivrl
push
fsubrs
cwtl
or
dec
aam
jp
rolb
mov
dec
sub
sbb
add
leave
mov
jb
push
xchg
cmc
adc
div
jl
call
push
dec
pop
cmpsl
dec
add
xchg
shrl
into
dec
divb
ds
enter
cmpl
popa
sub
adcl
sbb
gs
xor
adc
xlat
popf
aaa
movsb
rorb
sub
push
inc
bound
sahf
hlt
jbe
jb
ret
ret
ljmp
stos
ja
pop
fdiv
fisubs
rcrl
daa
pop
mov
imul
ljmp
mov
lds
test
filds
fmul
xchg
xchg
xchg
arpl
mov
out
imul
lds
dec
jle
fidivl
daa
adc
xchg
aas
mov
ss
fsub
xor
ljmp
dec
nop
arpl
loope
mov
int
pop
pushl
imul
movsl
out
or
and
stos
inc
fcom
mov
mov
add
fcmovne
enter
mov
data16
imul
cli
mov
jns,pt
ret
mov
mov
call
xor
fistpll
pop
fwait
cltd
inc
jno
out
jge
xchg
mov
jnp
add
in
out
dec
pop
mov
or
movsb
xchg
push
outsb
or
loope
ret
jg
xchg
imul
mov
addl
rcrl
xor
jg
leave
in
sub
lahf
leave
cmp
les
lret
xlat
jne
cmp
lods
add
sbb
std
scas
add
outsl
scas
dec
cltd
out
mov
mov
sub
push
dec
cmp
push
add
and
repnz
outsb
mov
negb
xor
iret
sbb
xor
fs
lea
cmpsb
in
pop
xchg
inc
adc
xchg
pop
mov
dec
and
mov
aad
cwtl
pop
cmp
pop
scas
dec
xor
daa
dec
dec
ret
mov
jge
jnp
dec
lds
inc
push
scas
dec
outsl
inc
mov
pushf
sbb
daa
sarl
std
sbb
fdivl
dec
aad
js
adc
mov
pop
les
or
xchg
and
test
xchg
jns
int3
mov
cli
in
inc
jl
pop
addl
push
xor
and
inc
fnsave
jg
or
xchg
inc
lcall
jle
call
mov
cmp
jmp
loope
scas
cmp
cmp
push
push
ss
loope
and
jbe
sarl
xchg
insb
and
or
ret
ret
enter
push
repnz
scas
mov
add
shlb
scas
dec
adcl
addr16
mov
lds
and
mov
xor
dec
outsb
and
push
mov
aam
fists
pushf
lret
lcall
ret
fcoml
xchg
mov
movsl
loopne
and
subl
scas
mov
arpl
push
pop
xchg
sub
and
or
int
or
add
iret
es
xor
push
jb
lods
lds
mov
sbb
js
xchg
fiadds
mov
fsubrs
inc
add
outsl
lods
loope
mov
pop
sub
push
ret
je
dec
mov
call
out
pop
movsl
dec
mov
popa
push
fs
mov
jmp
rol
mov
jno
cmpsl
psubd
std
xor
aas
pop
xchg
pop
movsl
add
aad
dec
xor
push
das
cmp
dec
or
or
data16
mov
dec
iret
xlat
push
icebp
daa
or
dec
call
pop
inc
dec
in
cmp
es
call
ret
mov
add
dec
pop
jge
xchg
inc
mov
js
sub
or
fidivs
fstl
lahf
mov
test
xor
in
jns
add
orl
test
cmpsl
push
mov
cmp
in
pop
stc
fwait
xlat
jmp
push
mulb
xchg
dec
lock
or
adc
inc
iret
call
fsubs
or
mov
sbb
xchg
inc
sbb
push
jne
push
cmpsl
daa
int3
es
aas
mov
push
push
out
inc
jb
scas
mov
mov
mull
or
lcall
jl
sbbl
mov
pushf
jno
push
pop
xor
popa
int
icebp
cmp
xor
out
out
xchg
dec
mov
lret
ret
idivb
in
xchg
dec
jo
out
push
mov
shlb
pop
vprotb
pusha
mov
and
out
xor
sbb
rorb
push
inc
or
ss
add
cmp
lock
or
cli
jo
out
in
jp
into
push
jp
inc
scas
sub
cld
dec
pop
ss
adc
sti
gs
xor
scas
mov
mov
cmc
push
add
jnp
inc
mov
mov
or
jmp
popf
std
jb
cwtl
iret
imul
scas
push
stc
sbb
adc
ret
rcrb
xlat
sbb
mov
mov
fsubrs
into
fs
cmp
lods
nop
jl
adc
cmpsb
sahf
sub
jp
ss
lcall
leave
popf
push
mov
loope
in
addb
bound
insl
push
enter
sub
icebp
and
push
out
xchg
ficomps
js
pop
sub
lods
enter
out
imul
xchg
add
adc
adc
lret
mov
push
nop
sub
pop
xrelease
ret
inc
insl
out
xlat
and
fwait
sub
mov
inc
inc
xchg
aaa
push
dec
arpl
addr16
iret
pop
gs
clc
enter
sbb
aam
aaa
shll
push
leave
fdivl
mov
cmp
and
fwait
inc
rclb
popf
lods
in
notb
push
dec
mov
movsb
push
addr16
rcr
pop
sub
or
jb
pop
aam
mov
lock
or
fcmovnbe
test
and
divb
inc
rorl
mov
sub
loop
mov
aad
and
inc
mov
int
adc
cmpxchg
jo
out
and
xor
fdivl
xor
test
aad
inc
mov
ds
xchg
vcvtsd2ss
lods
jb
jb
imul
out
into
mov
sbb
push
seto
in
bound
icebp
jp
test
or
add
orl
or
add
sbb
es
pop
xorb
ror
sbb
push
push
sbb
jns
inc
push
subl
mov
hlt
inc
imul
push
lcall
dec
pop
and
outsl
nop
enter
push
negl
add
std
int
negb
lds
xchg
xor
add
gs
sbb
mov
repz
mov
pop
dec
sti
js
or
daa
jg
jmp
out
enter
adc
inc
push
mov
daa
sub
out
int3
mov
int3
dec
fwait
imul
mov
into
xchg
push
xor
or
roll
push
daa
and
fwait
out
mov
stc
jg
mov
or
repnz
ja
sbb
daa
mov
xor
ror
push
cmpsb
dec
xchg
jl
sub
cld
mov
pushf
xchg
push
pop
fcomp
cmp
pop
cmp
lcall
xor
push
repnz
scas
rorb
push
shl
bound
movsl
cmp
in
mov
call
shll
sbb
ret
ljmp
xor
pop
add
ja
hlt
aaa
jae
loopne
push
and
pop
dec
stos
pop
add
rclb
stc
xor
xorb
mov
enter
fxch
mov
pop
lds
xor
imul
das
mov
int3
mov
test
xor
lcall
clc
cmpsb
cmpb
data16
mov
lods
jmp
mov
pop
cmp
cmp
xchg
and
hlt
in
in
and
push
iret
fcomi
es
mov
pop
dec
jb
je
sub
hlt
mov
dec
jg
xchg
sub
pop
clc
jp
inc
mov
cmp
std
aas
sbb
es
fs
popf
lcall
pop
mov
inc
clc
ja
pop
mov
scas
inc
inc
cmp
ret
push
push
inc
hlt
add
cltd
idivl
pop
test
dec
inc
jp
imul
cmp
repnz
std
pop
sbb
sbb
jnp
popa
icebp
scas
das
cmpsl
sub
lds
ficoms
inc
jp
mov
adc
test
ljmp
jle
cs
push
sub
test
sub
es
or
lock
in
inc
mov
pop
jg
jbe,pn
outsl
xchg
or
mov
mov
shl
repz
jge
inc
mov
ret
paddsw
jbe
sahf
stc
xor
mov
out
popf
push
bound
push
mov
ja
mov
nop
xorb
lock
bsf
add
stc
mov
cmpsb
cmp
movsb
aam
ret
addr16
testb
mov
add
gs
inc
and
fdivr
rcr
loop
ja
mov
movsl
mov
adc
arpl
lcall
jecxz
and
mov
leave
sbb
testl
cmp
dec
sub
and
xchg
xchg
mov
sbb
push
inc
ss
push
icebp
xor
imul
inc
aad
push
stos
jo
je
lret
jb,pt
testb
lahf
leave
or
or
cmpsb
pop
js
data16
cli
lods
fs
or
ret
xchg
sbb
sbb
ljmp
adc
aam
fstpl
pop
outsb
cld
xchg
push
push
add
pop
mov
movsl
enter
std
sub
imul
inc
ja
negb
sahf
nop
sub
pop
aam
addl
pop
push
add
jae
dec
lea
xor
ret
cltd
mov
lahf
fiadds
push
outsb
rorb
sub
lea
mov
shr
xchg
and
jge
mov
push
or
pop
out
mov
leave
leave
mov
pop
outsb
xchg
dec
mov
ret
inc
push
gs
clc
imul
xor
xchg
xor
pop
adc
faddl
sbbl
std
mov
imul
and
mov
aas
mov
fmull
xor
cmp
aad
lods
fnstenv
imul
or
mov
jbe
push
imulb
fwait
daa
cmpl
movsl
mov
sub
add
xlat
rolb
mov
scas
push
jnp
jp
push
xchg
dec
xlat
jne
lcall
pop
cwtl
or
sub
mov
push
stos
shll
push
mov
adc
in
xchg
sbb
cld
jmp
lds
mov
push
mov
sub
adc
into
add
fidivl
stc
dec
mov
les
mov
xchg
lods
sub
add
push
mov
imul
push
push
jecxz
ljmp
xor
mov
in
enter
or
sub
lretw
push
rclb
adc
xlat
xchg
push
xor
aaa
mulb
in
shl
xchg
pop
xlat
xor
dec
aaa
jp
test
cwtl
or
incl
jbe
rcrb
pushf
add
inc
cmp
jne
pop
mov
inc
bnd
xchg
aad
xchg
nop
sbbl
hlt
bound
insb
loopne
fdivrl
jb
sahf
test
icebp
dec
xchg
mov
jns
add
lods
inc
cmp
fwait
out
push
sysenter
and
sti
mov
xchg
jnp
mov
movsb
pop
dec
aaa
push
xchg
cmc
in
cmp
fldl
xchg
xor
pop
xor
xor
mov
imul
fs
popf
xor
sub
dec
lahf
lea
daa
xchg
mov
pop
shlb
inc
sbb
mov
dec
push
mov
sti
pop
mov
adc
push
lret
push
loop
outsb
sarb
ret
lahf
push
mov
jecxz
mov
xchg
jae
ljmp
shll
mov
stos
outsb
adc
inc
inc
push
lods
rcl
jne
push
xchg
push
cwtl
xor
lods
loope
js
add
aas
adc
flds
xchg
inc
dec
or
je
cwtl
dec
jns
aam
add
jnp
sti
sbb
adc
jle
sbbb
cmp
daa
dec
cmc
and
test
js
jle
iret
hlt
les
adc
sbb
jne
fstpt
cmp
pop
dec
shrl
mov
cltd
and
movsl
cli
mov
dec
sbb
fstps
or
pop
shl
cmp
repz
cmp
or
dec
and
mov
inc
sbb
outsb
rorb
jnp
ret
push
aam
out
ds
pop
pushf
xchg
add
sbb
or
stos
imul
mov
lock
xor
xor
mov
and
adc
pop
dec
push
test
push
cmp
mov
fdivrs
inc
divb
mov
sbb
jb
ljmp
cld
add
pop
pop
adc
test
xor
js
xchg
leave
in
pop
mov
ljmp
sbb
adc
sub
mov
ja
sbb
add
test
xchg
jae
mov
ficompl
arpl
jbe
das
sbb
dec
jnp
jecxz
cmpsl
push
cs
aaa
clc
adc
inc
jmp
or
sbb
aam
push
jecxz
cwtl
inc
pop
ds
fnstsw
inc
movsl
repnz
mov
jo
xor
xchg
insl
shlb
jb
clc
sub
xor
aam
pushf
push
loopne
mov
jae
int3
mov
or
xor
clc
dec
dec
xchg
hlt
jg
insb
sub
sbb
sub
addl
nop
pop
cmc
push
fildll
sbb
push
dec
add
xchg
dec
push
dec
mov
call
mov
arpl
popf
adc
sub
and
inc
cmpsb
bsr
lods
cmp
dec
mov
fadds
testb
cltd
jg
repnz
insl
adc
int3
inc
fsubrs
cs
or
jecxz
loop
ja
divl
fsubrs
scas
or
insb
sub
mov
pop
popf
ret
rcrb
mov
jecxz
int
enter
lea
scas
inc
pop
and
xor
lret
pop
sub
lret
pushf
lar
pop
jmp
add
cltd
jae
out
loopne
dec
nop
push
sahf
mov
dec
adc
movsb
cmp
jl
in
ret
cltd
cmpsl
call
arpl
push
leave
xchg
mov
stos
setl
mov
jmp
jecxz
add
out
or
fsubrl
jl
in
lret
cmp
cltd
add
test
mov
bound
inc
adc
cltd
test
rclb
dec
push
loop
pop
mov
xchg
loope
jle
leave
mov
adc
mov
out
lahf
mov
into
in
fwait
mov
std
pushf
xor
add
xlat
cld
test
jae
or
mov
mov
divb
enter
jne
cltd
jne
mov
ror
rorb
mov
or
dec
stos
dec
mov
sbb
es
sbb
xlat
cmp
cmpb
insl
add
out
aad
loop
add
fstl
arpl
enter
call
pusha
pop
jge
fstpl
dec
sub
xor
addr16
adc
jmp
sub
dec
imul
icebp
inc
inc
std
decl
push
test
xchg
inc
pop
or
mov
nop
cmp
hlt
pop
fiadds
sub
sub
bound
pop
push
jbe
mov
dec
or
ds
mov
decb
decb
inc
ja
jns
push
jmp
addr16
insl
cmp
pop
xor
mov
in
or
add
test
out
dec
cmpl
xchg
and
sbb
sti
inc
pop
inc
mov
sbb
lods
inc
in
lcall
rclb
xor
push
xor
inc
mov
or
hlt
mov
cmp
jnp
push
pop
fnstcw
pop
jl
push
mov
psubusb
rolb
and
sti
adc
mov
popf
xchg
call
inc
mov
imul
mov
stc
test
mov
sub
xor
sub
sbb
pop
jg
bound
mov
xor
jmp
cmc
jne
jae
lret
cwtl
stc
xor
stos
pop
shll
out
and
call
outsl
lds
jns
push
xchg
lods
jge
js
mov
mov
sbb
andl
aaa
out
ss
notl
mov
les
and
scas
lods
bound
outsl
jns
push
aad
cmc
xor
icebp
mov
mov
arpl
fcoms
fbld
movsb
imull
mov
cmp
in
xorb
dec
in
jne
cld
mov
xorl
xchg
push
xchg
icebp
jmp
xor
or
fbstp
mov
xchg
add
xchg
push
push
iret
sbb
fidivl
das
push
hlt
push
aam
mov
clc
xchg
adc
mov
mov
cmp
int
fstp
mov
clc
pop
mov
add
xchg
pop
push
or
cli
inc
outsl
cmp
mov
sahf
cmc
sub
jmp
cld
imul
daa
leave
xchg
daa
cli
sub
xchg
push
pop
inc
xchg
and
or
stc
adc
jnp
or
xchg
adc
lea
call
and
test
xlat
insl
mov
push
pop
inc
sub
inc
dec
out
pop
cmp
inc
mov
push
mov
mov
dec
jbe
stos
or
pop
std
dec
mov
test
fwait
push
cmpsl
stos
pop
push
inc
push
mov
and
dec
out
xor
dec
mov
push
popa
movsl
and
push
xor
out
je
mov
or
jl
test
mov
and
mov
sbb
push
lcall
push
mov
cmpsl
lods
leave
std
xchg
iret
in
xchg
ret
mov
sub
movsb
xchg
fistpll
mov
outsl
push
jne
cmc
aam
push
jnp
loop
pop
divl
push
sub
lahf
xor
cmp
gs
cmp
xor
incb
je
popl
cmp
sbb
ljmpw
push
mov
and
test
lahf
and
inc
mov
xlat
loopne
pop
push
lret
pop
fistl
cld
rcrl
xor
xchg
xchg
jbe
push
mov
cli
xor
dec
leave
frstor
loopne
jle
mov
stos
inc
add
and
or
test
jg
xchg
or
inc
pushf
ss
xchg
into
aaa
test
mov
inc
xorb
adc
test
test
pushf
jbe
shl
and
push
lea
pop
and
and
mov
andb
pusha
xchg
and
sarl
sub
and
jl
repnz
cli
adc
ret
sub
push
mov
in
mov
push
jne
aaa
pop
mov
jle
cmp
sub
xchg
enter
xlat
ja
and
movsl
or
imul
repnz
cmpsb
sub
cmpsl
adc
ret
jecxz
push
xor
inc
shl
jl
shrl
es
pop
push
data16
call
pop
imul
loop
push
inc
inc
jnp
insl
xchg
roll
sahf
jmp
mov
sbb
xor
push
in
push
jbe
jg
lods
inc
shrl
mov
aas
not
out
rorl
ja
outsl
test
mov
pop
dec
adc
test
aam
das
lods
push
bound
jg
addl
test
jmp
xchg
mov
xor
adc
mov
es
outsb
test
cmp
inc
adc
cs
nop
or
addr16
lods
adc
cltd
int
jbe
xchg
cmpsl
fistl
sub
pushf
mov
cmpsl
outsb
aas
pop
xchg
lds
dec
icebp
popf
jae
inc
test
sub
and
out
jmp
hlt
jae
mov
lods
mov
mov
jns
negl
daa
out
sbb
addb
xchg
mov
into
out
pop
mov
outsb
sbb
addr16
push
insl
dec
ja
rcr
dec
pop
add
cld
arpl
popf
test
jae
xlat
out
jge
dec
cmpsb
insb
sbb
push
xchg
xchg
dec
fildll
add
sahf
subl
adc
cmp
repnz
adc
push
lock
mov
les
inc
mov
sub
sub
push
inc
xchg
dec
adc
xor
cli
adc
les
adc
addr16
insl
xchg
dec
xchg
dec
in
jl
and
mov
sub
mov
lahf
rolb
scas
sbb
add
cmp
mov
dec
mov
stos
cmp
jge
cld
inc
popf
loope
hlt
adc
pop
fisttpll
push
and
mov
dec
jge
pop
aaa
xor
out
fsub
loopne
adc
hlt
mov
enter
popa
lahf
adc
jb
pop
pop
cld
adcb
sbb
ror
pushf
xor
and
hlt
or
out
xor
lea
loop
fwait
mov
pop
int
jle
leave
sub
pop
pop
cmp
cmp
push
ret
inc
daa
addr16
shll
mov
adc
push
or
sub
push
iret
mov
mov
pop
out
mov
call
icebp
xchg
cmpsb
push
pop
xor
lods
dec
dec
fmull
fcmovnb
iret
sub
inc
fisubrl
aas
movsb
jecxz
mov
jge
push
inc
add
jl
inc
inc
xchg
jmp
jmp
jmp
fsubrp
push
xor
stos
lods
xchg
mov
popf
stos
std
loopne
xchg
xchg
pop
lods
jecxz
enter
mov
call
sub
push
in
dec
lcall
xor
lret
cmpsb
add
xor
cmp
adc
test
loop
mov
test
push
sub
sbb
outsb
xor
sub
xlat
pushf
inc
mov
or
movsl
jbe
mov
lods
aaa
sub
cmp
insl
and
call
add
mov
inc
pop
enter
add
dec
lods
cli
scas
dec
cli
adc
out
std
or
jns
lods
outsl
lods
inc
sub
subl
fdivs
xor
in
mov
mov
in
inc
cmp
inc
cmpsl
lret
dec
popf
test
mov
in
dec
stc
outsb
daa
mov
fwait
dec
std
jecxz
inc
testb
mov
imul
test
rolb
and
push
sub
or
mov
adc
sbb
nop
movsl
mov
pop
cmp
shrb
dec
fdivp
mov
pop
push
in
sub
lcall
les
jp
jle
aaa
iret
cmp
mov
pushw
mov
and
mov
ja
je
push
sub
shll
or
cwtl
aam
sahf
leave
daa
in
push
xor
jle
mov
inc
bound
pop
lock
gs
lock
lock
xchg
rcl
or
lods
xorl
jno
pop
adcb
push
stc
mov
push
hlt
sarb
in
dec
rcrl
dec
push
out
lods
fdivs
xchg
mov
js
adc
cmp
in
sub
or
lds
push
fisubrs
adc
dec
lahf
dec
movsb
sbb
xor
mov
dec
test
xor
dec
dec
mov
add
mov
mov
dec
mov
movsl
xlat
adc
cltd
cmp
vpsllq
outsl
orl
sti
mulps
sub
or
push
add
test
popa
fstpt
imul
fistpl
sti
pop
cmp
add
cmpsb
invd
xchg
in
aad
dec
call
mov
es
int
sti
leave
loop
lock
mov
or
icebp
add
ret
xchg
out
int
sahf
cltd
and
test
adc
xchg
mov
ja
dec
jmp
inc
cli
and
mov
pop
xor
push
fbstp
int
pusha
loop
in
or
jmp
stc
mov
rcrl
movl
imul
outsl
and
sbb
add
push
stc
scas
cmp
pop
mov
nop
jne
hlt
sub
ss
ja
cltd
test
sbb
aaa
rcll
rolb
cmpsl
jns
nop
nop
or
cs
lret
lcall
jg
rorl
mov
aam
frstor
lods
scas
push
cmp
push
cltd
lds
sarb
fldenv
out
mov
cmpsb
ss
bound
dec
or
jl
mov
pop
popf
mov
test
pushf
ss
inc
sub
movsl
pop
jl
jge
push
rolb
xchg
into
lods
xor
iret
iret
sub
dec
jno
push
lock
hlt
rorl
xor
daa
dec
pusha
inc
sbb
push
cs
xchg
dec
push
or
mov
aad
setp
std
jo
data16
outsb
push
mov
mov
mov
mov
js
push
test
push
daa
andb
mov
outsl
xchg
jae
repnz
add
out
call
pop
rorl
testl
adc
in
xchg
and
lds
xor
ds
into
mov
dec
mov
stos
cltd
inc
push
jl
ljmp
ljmp
cli
cmp
lret
push
xor
imul
adc
ss
mov
mov
rorb
js
pop
pop
test
mov
mov
popa
fsubrs
std
xchg
loop
lods
sbb
fcmovnu
pop
dec
comiss
xchg
es
popl
xchg
lcall
rol
mov
cli
ss
pop
mov
xchg
and
jo
xchg
pop
cmp
stos
and
dec
add
pop
cs
mov
or
and
ds
pop
add
or
lret
cmp
mov
roll
add
jne
iret
sbb
pop
sti
aad
in
mov
fnstcw
mov
xchg
inc
cmpsb
scas
out
xchg
loopne
cs
lock
xchg
dec
cwtl
lods
xor
push
add
bound
jg
jno
mov
or
iret
pop
jge
stc
mov
pop
loop
shll
xor
inc
pop
jno
xchg
inc
and
shl
fldlg2
jns
cmpsb
pop
pushf
fwait
shl
adc
iret
jnp
jbe
sub
repnz
mov
xchg
popa
or
outsl
outsl
pop
lret
jmp
push
cmpsl
dec
xchg
sar
mov
adc
rcrl
jno
icebp
aaa
push
push
jmp
repz
push
ljmp
xor
push
add
imul
pusha
pop
insl
mov
adc
shl
into
add
push
loop
push
imul
xor
scas
sbbb
jbe,pt
test
jg
das
addr16
dec
scas
arpl
and
lds
mov
sbb
mov
sbb
ljmp
pusha
and
fcmovne
stos
pop
std
xchg
xchg
imul
sbb
cmp
fdivs
or
sbb
dec
repz
mov
pusha
sbb
aam
enter
sahf
cmp
arpl
lcall
add
repnz
sbb
fstpt
adc
xchg
loopne
and
arpl
xor
xor
movsb
mov
mov
or
add
nop
lea
push
push
push
push
push
push
outsl
and
sub
push
sub
cwtl
repnz
xor
mov
dec
lea
adc
adc
lds
push
loop
sbb
rcrl
test
call
xchg
or
mov
sbb
lahf
sahf
xchg
ficoml
mov
shlb
mov
pop
cmp
repnz
push
popf
out
ror
pushf
test
js
fs
sub
mov
pop
push
mov
mov
out
cmp
inc
lcall
lods
fstps
nop
popl
jmp
cmp
out
pushf
shll
inc
push
repz
je
xchg
popa
es
mov
aam
push
push
mov
or
push
fisubrs
cmpsl
cmp
adc
jae
cmp
and
enter
shrb
sbb
xor
pop
stc
invd
ljmp
dec
ljmp
loopne
insl
sub
jge
xchg
and
ret
add
lods
in
jmp
nop
loop
fldcw
sbb
and
xchg
push
imul
pusha
cmpl
pushf
xor
cwtl
scas
cmp
clc
mov
add
in
dec
out
dec
jae
push
outsl
and
mov
jg
sub
xlat
lods
xchg
jge
repnz
pop
and
gs
jno
subl
add
shlb
mov
dec
out
adc
cmpsb
xchg
mov
clc
sbb
stc
fisubrs
cld
or
int3
fnsave
sahf
push
adc
jmp
pop
rcrb
mov
es
into
out
sar
neg
mov
mov
repnz
sbb
sarb
inc
jno
push
pop
mov
divl
pop
add
and
mov
call
mov
push
cli
mov
fmuls
pop
outsl
mov
inc
icebp
fidivl
mov
movsl
pusha
test
clc
inc
movsb
xchg
fldl
xchg
or
out
clc
xlat
xor
add
ss
mov
shll
mov
in
mov
in
jnp
int3
sub
and
sbb
inc
or
xchg
cmp
push
mov
incb
sbb
push
and
cmp
inc
repnz
or
xlat
addr16
bnd
mov
stos
in
pop
push
mov
cs
into
push
adc
adcb
lcall
fcompl
cmpsl
fcmovnb
lea
iret
arpl
loope
loopne
mulb
pop
cmp
pop
mov
bound
sub
testb
loopne
xchg
gs
sti
lahf
call
mov
cmpsb
mul
fiadds
movsb
adc
jmp
pop
or
cmp
push
out
stos
lods
adc
dec
pop
mov
xchg
xor
mov
mov
or
sbb
xchg
lea
jno
jmp
dec
or
arpl
mov
lret
test
inc
es
jp
jb
mov
or
jecxz
out
pop
mov
adcb
and
mov
js
pop
mov
or
cltd
lods
insl
lds
mov
ret
and
pop
mov
jle
loope
nop
lret
xchg
lahf
aam
inc
dec
xor
push
lods
xlat
cmovl
imul
movsb
iret
push
movb
push
inc
inc
dec
sub
mov
jp
outsb
fcmovnb
xor
cmp
cmp
pop
or
rclb
ror
adc
leave
dec
cs
jnp
movsb
adcl
test
pop
test
pop
pushl
roll
push
push
jecxz
jp
lcall
and
pop
adc
idiv
jbe
pop
pop
loope
xchg
out
gs
lahf
jnp
mov
and
adc
clc
dec
mov
fmul
addr16
ljmp
insb
ret
mov
adc
xor
aas
hlt
xchg
sbb
mov
aam
or
xor
push
daa
dec
adc
push
mov
adc
xchg
in
setle
fmull
rcr
sti
leave
add
or
add
fsubrl
xchg
pop
movsb
xor
inc
push
jl
sub
or
in
scas
js,pt
mov
roll
push
xchg
pop
inc
sub
loope
cmc
jns
jl
repz
mov
in
cwtl
sbb
and
mov
test
cs
movsb
add
pop
sbb
pop
mov
imul
sub
jmp
cld
inc
aaa
pop
xchg
or
add
daa
nop
cltd
mov
leave
lea
in
mov
xchg
andb
lret
cmp
das
mov
push
enter
push
aad
lret
jl
mov
xchg
xchg
pop
insb
sbb
ret
xchg
adc
push
cmp
adc
mov
pop
mov
jge
rol
je
inc
fdivs
mov
cmp
push
cmpsl
lds
mov
xchg
sti
mov
push
and
push
and
fcomp
shlb
popf
mov
xor
in
pop
mov
jo
and
fcomp
out
repz
outsb
dec
aas
sbb
stos
add
xor
jno,pn
sbb
push
jg
cmp
ds
loope
fnstenv
and
xchg
adc
xor
pusha
movsb
xchg
data16
xchg
in
pop
jne
ja
mov
fucomip
add
lret
bound
jp
hlt
push
jne
xchg
xchg
mov
and
loop
outsl
sbb
and
push
and
popf
sbb
mov
test
sub
inc
cmp
fwait
mov
pop
push
fiaddl
aad
out
and
adc
inc
cmpsb
xor
jl
mov
and
jmp
loopne
cwtl
out
cmp
decb
lcall
mov
nop
add
cmp
dec
xchg
sti
mov
das
cmp
xchg
mov
mov
push
mov
jne
xor
fucom
mov
mov
mov
aaa
movsb
mov
cld
sub
adc
xchg
dec
jb
jne
rcrb
mov
inc
ss
mov
int3
sbb
sar
pop
into
add
mov
jns
vmovntpd
loop
xchg
lcall
icebp
jns
mov
mov
xchg
leave
enter
push
fwait
and
inc
lock
rcl
dec
je
fnstcw
clc
fwait
sarl
mov
xor
dec
sub
mov
jbe
aad
cltd
mov
xor
mov
mov
aaa
dec
xchg
or
push
adc
bound
mov
dec
push
daa
push
push
pop
xchg
sub
outsl
es
out
rclb
sahf
gs
and
push
inc
lcall
in
in
loopne
pushl
or
push
orl
pop
sbb
push
xchg
aad
sbb
push
mov
jp
jns
dec
mov
mov
ret
sbb
mov
add
repz
pop
xchg
ret
inc
sbb
mov
clc
andl
dec
arpl
mov
scas
aaa
or
rcr
xor
dec
adc
jbe
popw
les
pop
sub
inc
je
aam
les
repz
pop
jmp
lcall
jmp
ds
das
xchg
inc
pop
jo
and
cmpl
les
xor
out
leave
loopne
jae
pop
cmpsb
aad
popf
fsubl
and
das
ljmp
jmp
fidivl
leave
popf
movsw
xor
icebp
insl
jb
inc
in
xor
cmp
aam
inc
repz
insl
inc
data16
add
or
ja
pop
xor
or
mov
xchg
mov
mov
lods
jle
push
fucomip
adc
adc
lds
nop
imul
sbb
div
adc
cmpsb
movsb
push
imul
std
and
lea
insb
aaa
mov
jns
jo
or
dec
inc
cmp
add
in
push
xchg
and
pushf
xlat
lods
jns
out
push
arpl
cmp
add
aam
inc
inc
inc
pop
iret
push
insl
imul
fsts
lods
fistl
mov
test
inc
dec
flds
mov
sbb
divb
fisubrl
xchg
fbld
xchg
jmp
mov
in
inc
out
push
jb
pop
scas
nop
popa
call
lock
repnz
insb
cwtl
mov
popa
js
mov
out
or
jl
inc
sbb
dec
mov
shrl
clc
incl
dec
adc
das
mov
sbb
push
push
shlb
push
mov
mov
pop
adc
cmp
jnp
dec
push
cld
push
das
incb
lahf
sbb
pushf
sub
push
push
mov
div
dec
xchg
dec
mov
xor
pop
sbb
repnz
scas
rcll
sbb
lcall
push
in
jae
mov
xchg
fs
and
pop
dec
pop
sbb
pop
push
sub
cmp
pop
push
xchg
iret
jecxz
jb
repz
pop
fisubrs
push
imul
pop
incb
cwtl
enter
imul
loope
xchg
mov
push
xchg
or
lcall
cmp
mov
mov
or
pop
je
sbb
inc
fsubrs
into
aam
push
or
dec
or
mov
xchg
mov
inc
cmp
mov
inc
adc
idivl
movsb
sbb
ds
and
adc
jp
inc
pop
adc
cmp
cmc
pop
pop
inc
call
push
sub
push
cmp
loop
pusha
and
dec
mov
dec
fistpl
inc
jbe
fdivrs
dec
and
sti
cmp
push
jle
fwait
gs
mov
adc
in
and
shlb
inc
jmp
lock
inc
cmp
das
cli
pop
ja
cmp
add
jb
aaa
filds
pop
fdivrl
imul
aad
scas
jl
inc
cli
ror
dec
divb
mov
movsb
mov
test
push
pop
lods
iret
mov
mov
aad
dec
popa
loop
inc
push
pop
lods
jae
jno
sub
jg
add
inc
mov
loop
int3
je
and
out
lods
ljmp
cwtl
cmp
xor
stos
cld
mov
orl
mov
orb
movsl
push
mov
push
aaa
in
cmp
xor
test
xchg
ret
mov
or
imul
int3
jo
lret
in
gs
fisttpll
popa
in
mov
dec
cld
jge
sar
add
mov
pop
adc
pop
mov
std
out
icebp
sbb
or
inc
xchg
fisttpl
pop
xor
stc
rcr
inc
jns
mov
shrb
sbb
les
les
fcoml
mov
push
movsb
push
mov
cld
stc
iret
cmp
and
or
out
ror
add
cmp
addr16
jle
les
movsl
cld
inc
test
sbb
fisubs
loopne
out
and
movsb
mov
lds
loope
xchg
mov
cmp
dec
push
mov
push
mov
ss
lcall
sub
or
imul
outsl
dec
xor
sarl
das
mov
pop
call
pop
shl
repz
jg
and
sub
andb
xor
lods
jno
inc
dec
fcomp
in
in
xor
mov
sbb
fistpll
mov
add
shrl
cmpb
jns
xchg
cmpsb
es
shlb
addl
push
xchg
push
add
popf
jl
push
jg
mov
int3
push
das
stos
fisttpl
and
xchg
pop
mov
add
in
loop
xchg
fisttpl
test
es
aas
pop
aaa
pop
fwait
mov
pop
xchg
int
scas
cmpl
sub
arpl
or
arpl
insl
xchg
sbb
jbe
add
add
addr16
mov
cmovne
sbb
mov
cmp
out
pusha
ret
cmp
adc
push
mov
add
rcr
imul
xor
pop
lcall
cltd
shrl
dec
insl
call
leave
scas
iret
jg
shrl
les
dec
aaa
lcall
and
loop
xor
imul
xchg
arpl
or
lods
adc
movb
add
pop
je
std
mov
test
lahf
push
jl
cmp
dec
popf
inc
xor
rorb
jbe
fdivl
dec
out
mov
sub
mov
outsb
push
push
in
xchg
fistpl
ja
sub
and
push
loope
ss
outsb
jmp
inc
pusha
push
aaa
inc
loop
aam
mov
movsb
rcrl
jno
out
pop
push
outsb
scas
popf
cmp
mov
loope
stc
jb
sub
dec
or
pop
dec
les
fldl
inc
jae
dec
ficomps
and
aaa
incb
and
or
iret
movsl
lods
mov
cld
xchg
adc
xchg
hlt
xchg
inc
shl
test
data16
jno
inc
lahf
adc
and
dec
flds
ja
xor
dec
scas
movsl
jnp
jg
fsubrl
mov
jmp
xor
ss
out
outsb
jp
pop
mov
and
lds
pushl
add
xor
mov
call
stc
loop
movsb
shlb
fsubs
in
jbe
xchg
orl
fsts
jno
aad
add
xchg
fisubrs
js
ja
fistps
insl
mov
bound
mov
pop
pop
or
mov
cmp
daa
cmp
outsb
push
lock
xlat
cmp
sub
cs
int3
ret
lods
rdtsc
lea
and
xor
lret
inc
es
pop
test
lds
sub
cmpl
test
into
pop
popf
mov
jmp
mov
push
adc
inc
dec
adc
or
push
mov
ds
cltd
out
cmp
repz
pushf
fwait
push
data16
rolb
ljmp
lcall
xchg
out
mov
adc
cmp
mov
cmp
in
aad
cltd
or
inc
lret
and
out
shll
rcll
hlt
fisubl
mov
pop
test
sub
fcmovnu
xchg
addr16
in
js
jl
xor
jns
or
xchg
ss
xor
lret
movsb
and
rcrb
nop
lds
ret
or
sahf
pop
int
mov
push
jmp
popf
mov
fmull
jecxz
psraw
sbb
push
mov
fs
fiadds
and
andb
inc
test
mov
insl
fistl
in
ret
jo
cli
lret
xchg
xchg
lock
hlt
xchg
push
mov
mov
lahf
pop
subl
in
jns
in
sbb
imul
aaa
adc
outsl
xchg
iret
je
dec
das
fwait
adc
and
aaa
inc
pop
xchg
std
scas
in
sarl
push
notl
cmp
nop
sub
adc
cmp
mov
xor
insl
clc
push
mov
add
test
xor
mov
mov
int3
lret
push
sarl
cmp
and
xor
adc
jo
inc
lret
out
sbb
sbbl
xor
adc
push
jno
pop
sbb
adc
cmp
decb
popa
mov
mov
jns
imul
xchg
stos
xchg
pop
loope
out
push
ret
aaa
push
mov
sub
mov
notl
cmp
dec
and
jmp
lret
shr
cld
and
sbb
shll
xor
push
std
inc
pop
sub
inc
icebp
xchg
cli
stc
dec
repnz
xchg
inc
daa
and
sti
mov
cmp
mov
dec
mov
sub
jns
cmp
cmp
dec
mov
pusha
repnz
fildl
inc
pop
fidivs
mov
mov
das
mov
inc
scas
adc
ror
dec
popf
jae
ja
out
lock
push
xor
das
fidivl
dec
cmp
jne
sub
jge
pop
add
pop
add
sbb
sub
mov
sbbb
push
adc
orb
pop
stos
in
ficomps
cmp
int
dec
xchg
push
jns
pop
sbb
inc
clc
ds
inc
cmc
dec
dec
cmc
icebp
das
aam
inc
jns
sahf
pop
out
imull
add
mov
dec
push
or
outsl
mov
repz
bound
mov
push
ds
pop
add
jg
adc
adc
xor
stos
fdivl
mov
andb
ret
or
cltd
test
mov
jne
sti
pushf
jne
out
scas
xchg
push
xchg
roll
jmp
jg
shll
adc
das
negl
mov
divb
cmpsb
push
mov
jge
jns
in
push
cmp
push
mov
jmp
out
mov
outsl
sbb
test
aas
dec
mov
lods
jnp
and
mov
rcl
test
add
or
push
mov
adc
mov
sub
cli
inc
cmp
sub
adc
xlat
xlat
test
add
repz
add
cmp
jae
and
and
lahf
test
test
sbb
lret
mov
test
jl
add
mov
xchg
jns
push
cmp
je
addr16
test
jge
inc
pushf
dec
dec
mov
ds
add
mov
js
lret
lret
sarb
mov
fwait
dec
bnd
sbb
adc
sub
and
adc
test
mov
cmp
pushw
addl
repnz
add
mov
xchg
and
lret
addb
jbe
push
mov
mov
jle
mov
mov
imul
rcll
dec
xchg
and
fcoms
xor
jb
add
mov
sti
adcb
not
popf
pop
into
xor
push
cmp
and
and
std
jo
xlat
sbb
outsl
jae
push
xor
push
addr16
ficompl
jl
insl
rcrb
adcl
cs
or
pop
mov
dec
sub
repz
dec
push
les
cmp
or
dec
push
cld
xchg
mov
daa
push
rcrl
ljmp
icebp
call
repz
xchg
arpl
fimuls
dec
mov
arpl
add
cs
cmp
aaa
pushf
mov
sub
pop
insl
lret
add
pop
mov
jb
jmp
out
xlat
negb
mov
mov
sub
cltd
adc
sbb
lods
lds
fnstenv
stos
ret
xchg
shr
lods
js
xorl
shl
push
cmp
movsb
loope
mov
sub
loope
pop
aad
push
flds
aas
mov
pusha
cmc
movsb
rcll
jns
sbb
mov
pop
mov
xchg
sub
jp
aam
jne
adc
inc
xchg
fs
mov
fiadds
scas
sub
imul
or
cmp
cmp
gs
push
and
sbb
cmp
mov
pop
mov
mov
sahf
fldl
iret
fcompl
jecxz
cld
outsl
es
enter
mov
mov
inc
fisttps
push
ds
or
dec
or
lods
add
fwait
add
inc
lock
xchg
loope
xor
mov
enter
and
mov
cltd
and
jo
xor
push
gs
jb
std
push
mov
imul
call
jmp
xchg
movsb
imul
rorl
xor
stos
inc
cmpsb
in
orb
push
mov
sub
cli
sub
call
stos
sbb
mov
and
test
cwtl
ficoms
cwtl
push
shrb
pop
adc
divl
in
add
ss
shll
insl
xor
lret
xor
mov
test
or
fmuls
in
mov
xlat
sbb
jecxz
mov
stos
cmpsb
test
inc
pop
inc
sbb
xchg
xchg
pushl
inc
hlt
dec
pop
test
icebp
fcmovbe
fidivs
bound
or
outsb
mov
inc
mov
push
dec
loopne
shll
out
imul
js
jnp
mov
xchg
iret
loop
jg
rcll
cmpsl
xchg
cld
ljmp
mov
mov
out
mov
xchg
cmp
push
jns
popa
and
out
inc
dec
dec
jae
imul
in
lock
icebp
mov
shrb
jno
in
push
fucom
dec
mov
xor
sub
aas
scas
inc
test
inc
push
sbb
push
hlt
xor
imul
dec
outsb
dec
ds
pusha
mov
data16
mov
mov
testb
filds
push
notl
fs
push
jae
lcall
popa
push
notl
push
and
sub
jno
push
pop
mov
test
cmp
pop
mov
adc
stos
mov
mov
jns
pop
mov
mov
aas
or
outsb
add
sub
lret
xorl
mov
jge
icebp
aad
xor
rep
popa
out
xor
test
flds
mov
pop
test
cmpsb
lret
add
std
push
es
sub
shll
ds
or
testb
jp
and
fisubrs
sbb
xchg
inc
xorl
in
cmpsb
shlb
sbb
cmp
lahf
js
push
js
mov
push
push
cmpsl
push
adc
mov
repnz
inc
sub
out
inc
jp
test
mov
lods
je
inc
mov
mov
movsb
add
inc
outsb
cld
lea
lods
arpl
nop
xor
lcall
sbb
addr16
cmp
jns
push
imul
pushf
les
pop
xchg
or
test
inc
cmp
push
push
gs
push
or
xor
or
addr16
or
repz
adc
mov
movsl
xor
shlb
add
push
pop
mov
test
push
add
jnp
mov
int3
js
adcl
sub
in
mov
sub
imul
inc
push
jl
addr16
inc
aad
mov
dec
rcrb
mov
lcall
or
aaa
in
or
adc
mov
cmp
xchg
push
jg
and
pop
and
pop
mov
jno
jbe
les
dec
xor
ljmp
lds
adc
mov
imull
jmp
cs
xchg
jp
outsb
mov
jp
add
cmpsl
xchg
add
cmp
insb
jmp
rorl
cmp
mov
ds
stos
lock
shl
jl
leave
aas
dec
push
in
lock
es
mov
pop
cmp
sbb
int3
jns
ss
and
outsb
insl
movsl
leave
leave
stos
sbb
xchg
add
add
popa
in
out
and
cmp
dec
rolb
xchg
push
jb
sub
sub
and
loopne
dec
jae
sahf
test
cmp
xchg
sar
out
xchg
mov
enter
xchg
iret
push
mov
lock
adc
test
stc
lea
xchg
loope
cmp
lods
xchg
mov
out
call
es
sbb
adc
sub
scas
xchg
xchg
add
dec
rolb
and
sub
pop
ret
cmp
inc
movsl
xchg
rclb
aas
xchg
or
mov
ss
loope
shrl
cmp
mov
adc
cltd
push
push
arpl
pop
lret
sbb
inc
mov
push
imul
into
push
adcl
lcall
fcoml
clc
imulb
pushf
test
addr16
js
loope
sahf
jbe
xor
push
addr16
bound
xor
movsb
dec
in
jecxz
aam
loop
push
xor
sub
xchg
cmp
mov
xchg
dec
inc
nop
mov
mul
clc
loop
dec
xor
or
adc
add
sub
hlt
and
xchg
cmp
js
sub
inc
dec
xchg
aam
fistl
mov
jle
or
vpmullw
fildl
and
push
fdivr
fistps
add
mov
loopne
clc
adc
cmpsl
popa
hlt
jnp
push
add
mov
fstpt
outsb
and
mov
shlb
cltd
jne
xor
sbb
ret
enter
call
ret
lret
mov
imul
arpl
xchg
push
test
cmp
or
aad
aam
pop
outsb
andb
mull
stos
insb
outsb
jp
out
pop
mov
jne
pop
out
mov
test
cltd
push
sub
je
into
and
stos
daa
adc
in
movsl
gs
insl
sub
push
dec
cmpl
rclb
push
xchg
aam
lods
xor
jae
xor
enter
push
jmp
rcrb
dec
dec
pop
cmc
inc
imul
rcrl
or
mov
mov
sbb
jne
dec
mov
mov
lahf
scas
aad
dec
mov
xor
shll
mull
scas
popa
mov
mov
mov
andl
jnp
aad
xor
jbe
push
or
and
dec
in
sbb
dec
ds
movsl
xor
dec
jp
fisubl
into
les
cli
pop
mov
add
mov
jp
mov
mov
mov
mov
fistps
mov
outsb
jmp
inc
mov
push
inc
outsl
lcall
ljmp
mul
jno
xor
sub
popf
pop
and
test
shl
dec
out
add
icebp
jns
lods
loop
push
fisttpl
movsb
mov
fcoms
cmp
clc
int3
lds
cmp
sub
ret
and
data16
inc
fisttps
mov
and
jns
xchg
push
arpl
push
adc
ljmp
adc
clc
cli
lret
mov
mov
push
pop
mov
cmpb
mov
fsubrs
aad
pusha
ds
leave
out
int3
pop
xor
aad
push
shrb
mov
and
xor
aaa
sub
mov
sbb
adc
je
mov
cmc
xor
mov
stc
adc
insl
pop
lcall
sar
mov
jne
fidivrl
movsb
fadds
or
ret
gs
imul
sub
das
int
mov
jns
in
popf
lods
out
in
ret
jo
int3
or
jmp
lret
jno
sbb
cmp
pop
adc
lret
xchg
xchg
pop
adc
dec
adc
fcmovnu
scas
rcrb
xor
movsb
stos
push
adc
test
into
push
xchg
insb
scas
adc
in
jp
and
fistl
imul
or
das
sbb
sub
fisttpl
cmp
lcall
and
aad
jnp
imul
js
cld
sub
jb
xor
iret
mov
sarl
jo
push
mov
aaa
pop
sub
pop
push
inc
dec
jp
mov
xlat
cmp
pop
shr
aad
add
gs
bound
repnz
dec
clc
inc
in
mov
pop
mov
and
and
lcall
xchg
xor
pop
std
pop
cmp
fisubrl
xor
loopne
mov
sbb
mov
lret
aam
push
xor
cmp
mov
xchg
inc
sbb
ljmp
rorb
push
xchg
mov
imul
jp
cs
jno
mov
in
mov
pop
cmp
imul
dec
push
hlt
adc
jno
pop
into
xchg
iret
call
dec
roll
js
cmpl
or
push
into
xchg
out
les
lods
ds
lcall
add
mov
xor
pop
xorl
add
aad
jb
stos
mov
xchg
jb
or
int3
mov
fs
in
addr16
mov
jne
jp
outsb
lods
dec
repnz
into
aaa
mov
jmp
mov
out
jg
xchg
movsb
dec
mov
push
xor
xor
xor
jb
imul
cmp
push
insb
loope
xor
mov
lret
rclb
add
or
cmovge
jno
scas
add
dec
jmp
sub
mov
gs
addr16
fcomps
lods
fcoms
enter
push
sar
pop
mov
push
add
push
pop
jl
mov
push
test
mov
in
mov
mov
adc
pop
xorl
push
into
jbe
jmp
mov
mov
in
lock
add
mov
add
dec
mov
adc
add
cld
cwtl
xor
ds
scas
sbb
xor
sti
test
xchg
pop
stos
or
ret
das
testl
lret
test
push
out
mov
mov
sahf
mov
test
sbb
add
bound
aad
jae
sar
hlt
out
daa
lret
sbb
sub
mov
aam
dec
popa
jb
xchg
imul
adc
or
inc
xor
cmpsb
nop
in
sub
pop
push
adc
inc
repz
xchg
push
jnp
pop
mov
jo
hlt
push
cmc
jmp
fimull
stos
or
out
fldl
movsl
lds
mov
es
or
cs
aad
mov
aas
fxch
mov
fcmove
mov
imul
push
xchg
in
into
imul
mov
dec
xor
sub
cwtl
mov
mov
mov
lods
test
rorl
fs
nop
push
inc
mov
insb
xor
mov
push
push
rorb
jmp
rcll
mov
outsb
popf
into
xor
sarb
inc
xchg
in
push
sbb
repnz
rorl
pusha
cmp
jecxz
sbb
jg
subl
adc
push
push
adc
xor
popa
push
jo
in
dec
jne
xchg
inc
notl
jnp
dec
cmp
jno
add
add
loopne
mov
fldl
cmpb
imul
mov
xor
rolb
mov
adcb
js
push
mov
insb
pop
in
pop
mov
jecxz
aad
jmp
orb
nop
mov
xor
mov
int
add
movsl
fiaddl
sarl
fidivs
cmp
mov
sub
sub
jb
insb
pop
sbb
leave
insb
pop
pop
aad
mov
rorl
enter
adc
pop
iret
jo
lret
int
add
mov
pop
cmp
test
pusha
andl
aad
addl
mov
jb
cmp
dec
fcmovnbe
pop
adc
nop
mov
js
test
add
test
roll
pop
cmp
add
push
or
fwait
jns
cmp
xor
gs
jb
cmpsb
xchg
mov
dec
ljmp
jg
sub
clc
js
push
pushf
jno
cmp
stc
in
xchg
int
mov
ud0
ja
push
xor
fnsave
fidivs
jecxz
inc
jecxz
push
push
lods
imul
in
push
sub
in
cmp
sub
jmp
neg
decb
addr16
mov
add
jge
out
mov
lahf
fdiv
xor
mov
stos
xchg
out
popf
jl
shll
stos
andb
inc
outsb
cld
mov
ja
shl
adc
rcrb
clc
or
inc
and
xor
scas
pop
mov
neg
out
imul
aad
or
xchg
inc
pop
mov
dec
xor
xchg
dec
lcall
mov
ljmp
mov
icebp
pushf
int3
sbb
mov
mov
adc
xchg
mov
ret
inc
std
imul
jns
fbstp
inc
cmpsb
xor
fcoml
pop
popf
sbb
inc
jl
mov
or
sbb
es
push
fisubrl
sbb
inc
jb
das
jne
movsl
xor
sub
mov
insb
mov
mov
sub
sub
xchg
push
jnp
cmp
outsl
mov
in
mov
mov
mov
in
lods
loope
fcmovu
aad
nop
nop
ret
sahf
iret
xchg
sub
fs
cmp
mov
inc
ss
fisubrl
sbb
jno
cmp
push
mov
mov
xchg
and
and
mov
mov
into
sub
push
pop
fisubl
js
pop
popa
sarb
icebp
or
xlat
aas
sbb
rorb
mov
ret
std
das
sub
loopne
in
es
sarb
mov
sub
cltd
test
scas
in
jge
push
jecxz
dec
je
cmpl
sbbb
outsb
xorl
in
outsb
sub
fwait
adc
jne
ud2
or
shrb
call
outsb
lcall
ret
jmp
jge
sub
push
jbe
in
add
popa
pop
mov
rolb
inc
das
dec
rolb
loopne
icebp
imul
scas
adc
incl
mov
popf
and
sub
dec
sahf
fwait
aaa
jae
mov
inc
and
outsl
and
mov
dec
addl
arpl
lds
push
xor
dec
aad
mov
pusha
sahf
fs
orl
adc
dec
sbb
jecxz
lcall
repz
sub
sub
pop
push
xchg
pop
mov
dec
sahf
es
or
sbb
and
mov
xor
clc
sub
mov
ss
iret
dec
jle
pushf
fidivrl
xor
int3
push
je
in
lods
outsl
jg
sub
jb
aam
jns
adc
clc
or
xlat
decl
cmp
push
gs
sahf
mov
mov
fdivl
cmc
divb
andl
movsb
add
out
mov
orb
jae
es
sub
ja
dec
inc
std
ficomps
and
jno
test
lods
jae
or
inc
mov
je
mov
sbb
add
scas
cld
push
and
fucomip
dec
and
xchg
sbb
xor
fstpt
gs
imul
mov
adcb
jp
cmpsl
neg
call
add
test
jb
std
jns
pop
mov
mov
test
scas
sbb
fs
call
mov
out
adc
or
scas
cli
xor
mov
call
jmp
push
xor
test
sub
int
lret
jno
and
sarb
and
jne
mov
orl
mov
int
dec
imul
sub
sbbb
add
or
mov
dec
push
cmp
jbe
adc
nop
inc
ja
mov
cwtl
ret
insl
jmp
jne
das
js
cmp
push
pushl
outsl
dec
add
out
fwait
call
pop
adc
mov
out
sub
sub
cmc
inc
sbb
add
pop
shll
shl
dec
mov
jge
repnz
inc
scas
pushf
inc
data16
daa
movsb
in
ljmp
dec
in
sbb
inc
mov
pop
fldenv
and
leave
pushf
ds
cmp
cwtl
je
daa
aad
icebp
jo
jns
sbb
xor
dec
fs
cmpsb
sbb
jl
dec
loop
xor
xchg
xchg
sbb
or
cmpsb
sub
fxch
call
ret
cs
addr16
fidivl
cmp
jae
inc
aas
pop
sti
mov
rclb
lds
imul
cmp
or
data16
mov
fsubrs
movsb
ret
sub
into
enter
fs
pop
jg
repnz
xchg
sahf
push
add
dec
fisttpl
lods
pop
xor
xchg
mov
ds
mov
in
fsubrs
xor
shlb
or
cmpsb
sbb
fnstenv
mov
into
mov
or
ja
dec
sahf
aaa
or
jmp
adc
out
test
push
fwait
or
cs
xor
in
cmpl
inc
in
pushf
mov
outsb
pop
dec
cwtl
add
mov
mov
xchg
mov
adc
and
xor
sahf
adc
lea
bound
push
lcall
dec
clc
push
divl
leave
pop
mov
sahf
es
fwait
cmpsl
push
aas
push
pop
xchg
mov
enter
cld
imul
jp
push
jle
repnz
lret
divl
sub
outsl
mov
xor
clc
outsl
jp
cmpsb
addb
pop
pop
ret
fwait
testl
out
scas
cmpsb
jnp
mov
mov
loop
mov
pop
push
lret
dec
adc
gs
push
adc
std
hlt
add
pop
push
ljmp
push
jbe
in
loop
push
sub
add
jle
int
out
xlat
cmp
lret
sub
lods
jecxz
dec
inc
mov
in
sub
cltd
or
in
adc
mov
ret
cmp
fimuls
pop
nop
push
or
inc
xchg
aam
shr
mov
add
dec
xchg
mov
and
nop
mov
mov
fdivl
sbb
add
jb
or
out
lea
mov
jo
scas
push
hlt
lea
repnz
out
and
mov
in
fidivs
fistl
repz
sahf
idivl
adc
cld
and
mov
xchg
mov
xor
xchg
mov
sti
les
sub
outsb
cmp
subb
adc
scas
or
xchg
roll
lret
dec
jmp
stc
aam
nop
xor
sbb
call
cmp
sub
dec
adc
repz
dec
stos
adcb
pop
pushf
test
add
loop
shlb
jae
loope
inc
loopne
aaa
cmp
inc
cmp
lods
addr16
mov
mov
mov
xchg
fldenv
imul
in
push
dec
jb
push
lret
inc
repnz
pop
push
iret
movsl
mov
testl
pop
dec
insl
or
push
jbe
divb
or
sub
add
adc
mov
sarl
jge
into
mov
push
fcmovu
mov
pushf
aam
lret
xor
pop
sarb
jg
vmwrite
ja
xchg
inc
mov
pusha
enter
imul
mov
xchg
xor
jmp
or
setl
cld
lods
jg
mov
imul
push
add
inc
and
inc
mov
push
fimuls
cmp
lds
mov
icebp
das
add
mov
dec
pop
enter
xor
cmpsb
clc
insb
pop
fidivs
adc
and
cli
pop
ret
inc
lods
lret
arpl
mov
shll
cmpsl
shr
lods
mov
pop
popf
adcb
cmpsl
or
std
sub
add
cwtl
cmp
mov
enter
addb
add
scas
rorl
iret
jo
fdiv
arpl
jno
rcrb
mov
adc
sub
or
jge
mov
sti
jb
negl
cmp
adc
cs
or
adc
sub
mov
adc
shrb
xlat
inc
cmpsl
imul
sbb
ret
mov
xchg
orb
orl
scas
mov
ds
fsubs
jae
xchg
out
pop
clc
mov
mov
xchg
mov
mov
lret
mov
ret
divl
loop
jge
imul
mov
sti
jne
jmp
push
mov
sbb
add
mov
push
call
cmp
pop
mov
cld
cmp
adc
aad
xchg
push
sahf
pop
lods
movsl
sub
inc
mov
cmpsl
add
push
insb
orl
lahf
xchg
jne
jp
mov
decl
inc
rdmsr
cmp
adc
and
cmp
pop
mov
bound
inc
pushf
xor
cmp
test
push
iret
inc
movsb
cld
or
add
je
inc
mov
mov
movsl
xchg
jecxz
imul
jnp
daa
sbb
cmc
sub
pop
cmp
outsl
inc
movsl
test
fdivl
hlt
inc
ja
mov
pop
cmpb
xor
stc
aaa
ljmp
movsb
xor
push
dec
cmp
cwtl
lock
mov
andl
cmp
lods
jne,pn
mov
xchg
jg
cmp
cmpsl
ss
scas
pop
nop
fmuls
sub
out
mov
lock
mov
push
jb
lods
push
adc
nop
mov
mov
xchg
xlat
imulb
jmp
sbb
push
out
leave
out
mov
int3
jbe
jno
jnp
fstpt
xlat
scas
sub
push
xchg
dec
popf
enter
xchg
lds
aad
pop
dec
add
sub
pop
inc
aas
das
out
hlt
jge
pop
pop
jo
adc
push
push
mov
push
xlat
sub
mov
inc
jne
ficoml
in
shr
fstpl
mov
insl
xchg
inc
mov
imul
rcrb
cmpsb
push
sub
mov
xchg
mov
shr
rcll
mov
in
repz
stos
sbb
nop
fcmovb
jg
inc
sub
pop
ljmp
imul
mov
rcl
cmp
mov
push
shrl
or
gs
sbb
repnz
xchg
ds
sub
insb
xor
jb
and
lret
cmp
mov
push
cmp
xor
stc
iret
popa
jmp
mov
shl
fiaddl
lcall
cmpsl
add
es
outsl
int3
enter
lea
cmpb
push
aaa
lret
in
mov
adc
testb
out
shl
mov
mov
push
sbb
insl
pusha
pop
adc
in
mov
lds
nop
test
or
cmp
inc
outsl
les
mov
jae
aas
pop
das
cs
lcall
inc
fwait
testb
mov
xchg
pop
jl,pn
mov
call
rolb
xchg
xor
cmpsl
shr
lods
adc
lcall
sub
dec
push
das
jnp
dec
push
repnz
lret
jns
rcpps
add
xchg
dec
push
pop
pusha
push
inc
int
fcoms
bound
fcomip
cmpsl
xor
fld
insl
scas
mov
dec
cwtl
dec
pop
rolb
push
mov
and
jno
lds
shr
xor
add
pop
lea
mov
push
lds
mov
mov
mov
and
movsl
adc
adc
jo
xorb
aad
mov
and
jne
jne
or
repnz
clc
mov
mov
jns
mov
sub
in
fiaddl
xchg
jmp
jecxz
sub
push
adc
imul
outsb
adc
sub
mov
movsl
cli
push
jp
cs
mov
lods
insb
xor
pop
pushl
sbb
popa
lcall
cmp
push
xchg
sbbl
data16
push
jle
cwtl
mov
js
jne
inc
cs
test
arpl
jns
xor
filds
pop
xchg
and
or
and
ja
xchg
popf
adc
ljmp
adc
aam
dec
push
lcall
xchg
das
jmp
adc
push
in
daa
mov
mov
iret
lods
call
push
imul
test
jp
cmpsb
adc
sbb
xchg
pop
shrl
lret
lods
test
loopne
pop
dec
cmp
out
sub
xchg
sbb
dec
and
shr
jne
nop
lods
xchg
mov
hlt
aam
test
jae
gs
outsb
rolb
pop
mov
outsl
pop
adc
lret
inc
nop
xor
jae
cmp
cmpsb
ss
sub
jl
push
movl
lods
out
sub
ret
push
fisubrl
frstor
loopne
xor
imul
lret
mov
mov
jmp
shll
xchg
ret
test
fs
push
repnz
outsl
pop
and
mov
jle
inc
mov
pop
sbb
push
stos
int
pop
cmpsb
test
dec
jmp
dec
jo
push
jbe
xchg
mov
cld
into
ja
lcall
daa
lds
idivb
mov
cmpsl
inc
xchg
cli
shll
fcomp
jge
iret
pop
lock
mov
addr16
push
loopne
outsl
cmp
dec
mov
pop
cmp
cmpsb
jmp
jg
clc
in
dec
pop
adc
or
out
sbb
fs
pop
mov
imul
adcb
sub
out
fisttpl
fcoms
jns
mov
jmp
push
dec
xchg
mov
gs
out
mov
ss
mov
sub
jae
dec
imul
mov
lods
lea
test
inc
pop
or
or
inc
nop
fwait
xchg
ds
xchg
dec
fcomps
iret
sub
mov
inc
frstor
in
xorb
mov
xchg
sub
push
movsb
dec
mov
out
sub
icebp
movsl
filds
adc
lock
xchg
jbe
add
cs
pop
dec
clc
bound
pop
sub
lock
dec
repnz
icebp
fwait
enter
lods
pop
add
fsubrs
adc
inc
es
xchg
aad
mov
out
shr
daa
dec
mov
push
xor
sbb
repz
jl
push
ficomps
sbb
xchg
push
sub
jno
test
inc
arpl
inc
call
push
dec
and
rcll
adc
popa
imul
sbb
cs
and
fs
xchg
imul
inc
adcb
repnz
xchg
cmpsb
rcll
jle
sbb
cmpsl
lret
aam
ljmp
mov
dec
mov
inc
ds
dec
aam
pop
sbb
and
push
inc
add
xor
sub
loope
in
aam
dec
daa
lret
cmp
test
ret
subb
std
into
push
imul
jns
leave
sbb
dec
pop
push
jae
xchg
sub
sbb
push
or
add
mov
lret
jle
push
rcl
push
js
daa
test
ss
pause
mov
int3
sbb
into
mov
pusha
lret
sub
fistpll
push
test
jge
movsb
es
sub
adc
lcall
push
cmpb
clc
pop
inc
lea
sti
stos
data16
mov
js
cld
jg
xor
ret
sahf
sub
cmc
jnp
cld
sti
movsb
adc
mov
inc
push
ret
fcmovb
ja
in
cmp
pxor
in
scas
xchg
out
mov
movsl
inc
inc
out
es
leave
mov
cmp
std
sbb
jae
in
and
adc
sub
add
mov
push
mov
xor
cmp
es
fcoms
lahf
xor
repz
jp
cmpb
clc
jo
push
jno
inc
or
xor
xor
xlat
pop
mov
xchg
js
arpl
cmc
dec
icebp
rcr
pop
add
into
fnsave
jno
add
out
jb
pop
rcl
test
movl
insb
adc
lds
pop
sub
movsl
pop
jne
pop
jns
sbb
sarl
int
cs
addb
cmp
dec
xor
xchg
and
shll
aad
inc
leave
mov
leave
dec
fsin
push
cmp
cmpsb
fwait
mov
xor
cwtl
mov
mov
dec
sub
mov
xchg
fwait
imul
cmp
loopne
pop
dec
xor
jl
mov
mov
icebp
js
sub
cmp
jle
stos
loop
jne
ja
mov
cmp
mov
fnstcw
lcall
inc
and
jle
adc
mov
addr16
jmp
jg
adcb
imul
mov
xchg
and
arpl
mov
push
add
movsb
pushf
test
jae
dec
stc
call
jb
jmp
fisttpl
lret
mov
insl
rclb
das
adcb
aas
or
dec
in
bound
mov
inc
fwait
popa
fidivrs
inc
adc
sub
jb
lds
aam
xchg
scas
icebp
ds
push
push
cmp
pop
repz
adc
out
int3
out
add
cmp
push
mov
loope
cld
add
mov
mov
mov
notl
xchg
es
ret
push
and
push
sub
sbb
mov
inc
mov
sub
xchg
mov
addr16
and
lock
jmp
mov
je
or
xlat
movsl
or
mov
cmp
test
add
mov
push
jp
insl
fs
xlat
int
sbb
pop
dec
mov
cwtl
jae
add
add
rol
gs
fcmovnbe
adc
cmp
inc
cmp
bound
or
lret
lret
xchg
sbb
jecxz
dec
mov
and
xchg
ds
cmovl
adc
jecxz
lret
dec
jno
jno
xor
outsl
xchg
mov
xor
xor
xor
mov
imul
add
cmp
int3
or
add
rclb
sub
add
out
insb
push
sbb
enter
das
xchg
stc
insl
popf
subb
pop
out
scas
jl
sbbb
xor
pop
adc
scas
popa
cmp
or
cltd
and
cmp
mov
test
mov
imul
jae
push
scas
test
mov
adc
inc
xor
scas
test
inc
sbb
mov
xchg
push
in
jb
push
push
pop
inc
js
or
push
or
and
rclb
lods
cli
pop
dec
push
adc
push
andb
insl
lcall
lods
lret
sbb
aam
xchg
subb
negl
cmp
inc
ss
je
ja
test
stc
xchg
sbb
sbb
out
ret
pop
cmpsl
fdivl
pop
xchg
adc
inc
cmp
adc
cmp
bound
xor
inc
sbb
cmp
mov
or
test
jp
mov
or
xlat
xchg
test
imull
jg
cmp
sub
and
mov
clc
pop
wbinvd
hlt
xorb
popa
pop
pop
outsl
adc
mov
mov
cli
movsb
repz
jae
addb
pop
imul
mov
iret
or
lret
cli
pop
pop
mov
cmp
lahf
mov
xor
movsl
dec
cmp
dec
push
jl
pop
cmp
cmpsb
jecxz
mov
insb
add
pusha
pop
arpl
insb
cwtl
out
pop
hlt
jl
jecxz
out
lock
or
sbb
cmpsl
aam
ljmp
mov
mov
repnz
test
stc
push
cmp
mov
lahf
jnp
mov
push
xchg
inc
mov
pop
negb
pop
cmp
dec
adc
xor
cmp
jbe
inc
dec
into
adc
sub
and
rolb
sub
cld
inc
push
lcall
int3
sti
sbb
sub
adc
sbbb
mov
push
lcall
xchg
jmp
fisttps
cltd
pop
cmp
mov
icebp
stc
ss
test
adc
mov
rolb
mov
jbe
loope
fiadds
out
pusha
stc
cmp
jae
rcll
sub
dec
pusha
sti
fimull
and
in
or
repnz
xor
adc
add
leave
xor
clc
xlat
jp
xchg
jo
sub
je
stc
cs
pop
adc
idiv
cmp
mov
mov
pop
sti
arpl
movsl
sahf
jle
mov
push
adc
adc
sub
loop
xchg
or
xlat
sbbl
xlat
mov
imull
ss
jno
outsb
xor
dec
push
in
push
fstps
lds
lea
aas
divl
jb
stc
xchg
mul
inc
mov
loop
inc
nop
xor
push
sbbb
jmp
cmp
pop
int
mov
movnti
pop
fcmove
gs
movsb
inc
jge
negb
cmc
adc
fwait
dec
ret
fadds
ja
xchg
jle
push
pusha
jg
mov
add
in
shrb
pop
fs
divb
fsubr
jbe
add
addr16
pop
sub
xchg
add
push
fisttpl
push
cmp
mov
push
sbb
imul
pop
pop
out
add
inc
dec
das
iret
inc
adc
insl
mov
sub
pushf
daa
popf
shl
and
push
dec
pop
cmp
fiadds
lds
xor
mov
sbb
jg
mov
push
imul
rorl
xor
xor
fucom
adc
jmp
pushf
out
pop
js
jge
xchg
subl
or
fistpll
jae
call
push
fsubr
stc
jge
in
outsb
shll
adc
arpl
xchg
and
addl
cmp
mov
cmpsb
ret
pop
xchg
cmp
lock
in
sub
add
jg
push
loop
pusha
push
xlat
fwait
loope
cwtl
or
test
push
jge
outsb
fdivr
mov
call
mov
out
xchg
int
lock
mov
rcrl
dec
fistl
popf
leave
sub
fwait
testb
sbb
das
xor
shrl
jo
lret
mov
stos
dec
xchg
jnp
pusha
fs
xchg
test
and
fsubr
cmp
mov
bound
in
mov
inc
repz
mov
inc
aam
insl
jbe
jg
push
je
dec
fisttpl
lods
jg
in
fnstsw
push
lahf
and
imul
and
stos
subb
adc
movsb
mov
rclb
test
xchg
mov
jno
cmp
mov
out
and
inc
out
rclb
cmp
cmpsl
in
sbb
push
mov
jg
pop
xor
add
aad
jl
or
fldcw
popa
dec
sbb
int3
mov
inc
xchg
push
mov
or
data16
mov
outsb
mov
orl
bound
cmp
xchg
mov
adc
popf
pop
push
movsl
jae
mov
or
jle
cwtl
int3
mov
mov
xor
jns
dec
scas
arpl
insl
mov
sbb
imul
dec
stos
icebp
mov
sub
int3
mov
cltd
pop
push
cltd
es
push
stc
lods
test
jb
and
jl
mov
xchg
rolb
push
incb
dec
pop
out
jg
lcall
jl
pop
pop
add
nop
hlt
push
mov
xchg
jmp
mov
and
pop
adc
das
push
popa
cli
mov
mov
lods
stos
xor
and
loopne
mov
loop
fnstcw
dec
stc
push
push
pop
add
clc
sbb
fsubs
xchg
cmpsb
scas
xchg
xorb
int
push
sarb
sbb
push
lods
adc
lods
inc
lcall
and
xor
lahf
mov
movsb
add
js
loope
popf
out
sbb
xchg
jae
jo
push
test
mov
xchg
outsl
pop
lret
aam
inc
insl
and
mov
xor
stc
or
loope
push
xchg
inc
xor
mov
clc
pop
adcl
jb
xor
mov
in
jns
xchg
repz
insb
sub
dec
das
cwtl
stos
insl
mov
sbbb
sbb
icebp
mov
mov
jecxz
and
cwtl
mull
cld
ret
pushf
push
addr16
cmp
jmp
aaa
push
jmp
mov
loop
insb
jb,pt
push
mov
in
divl
ljmp
cmpsb
xchg
push
enter
out
inc
mov
cmpl
cmc
addr16
push
pop
ret
cmp
ss
cmp
or
cmp
inc
jl
cmp
insl
jmp
adc
cmp
scas
into
jle
jae
add
fildll
jns
sub
add
dec
xor
dec
lods
outsb
mov
fstpl
in
pop
rorb
xlat
xchg
fcoms
xchg
mov
inc
rcl
ret
and
lods
sub
jne
xor
xchg
inc
adc
inc
es
mov
jns
xchg
pop
adc
hlt
das
enter
enter
int
sti
adc
mov
mov
mov
sar
dec
add
aas
inc
mov
aad
sub
ds
push
nop
in
jnp
into
into
test
adc
cmp
jo
mov
push
jne
sub
addr16
adc
addr16
mov
fld
inc
sbb
or
add
sahf
sbb
lret
jb
and
lock
xor
iret
mov
mov
out
loope
jecxz
push
and
rorl
and
adc
xchg
xchg
dec
call
es
add
test
fwait
inc
or
mov
and
das
dec
aam
repz
mov
adc
mov
es
mov
outsb
inc
dec
out
scas
inc
insb
std
add
iret
shll
rolb
mov
mov
sbb
and
mull
cld
jae
fs
ret
cmpb
xchg
lahf
movsl
dec
cmp
loopne
mov
pop
dec
fldenv
adc
xlat
pop
lds
xchg
cmp
lcall
inc
add
shlb
sbb
jmp
inc
cmpb
xor
clc
cld
xchg
scas
pop
mov
or
pop
aaa
fistpll
dec
cmp
orl
loopne
clc
mov
pop
pusha
inc
cmpsl
ja
mull
add
mov
jmp
mov
jbe
ljmp
sbb
shr
xchg
lods
stos
inc
sbb
xchg
sub
shll
jge
fwait
mov
les
mov
lods
mov
xchg
daa
jo
mov
jg
cmp
fwait
hlt
dec
test
xchg
lcall
inc
pop
dec
xlat
rcrl
cmc
add
int
add
negb
adc
fs
xor
test
nop
and
sarb
rcr
arpl
adc
jnp
loopne
rcl
leave
movl
pop
adc
int
js
iret
push
cmp
adcl
sub
scas
iret
popf
sub
cltd
into
ss
mov
movsb
hlt
cmp
adcl
jno
xor
mov
sbb
cmp
xchg
pop
xor
out
divb
neg
cltd
or
std
leave
pop
cld
mov
test
sbb
dec
mov
movsl
jmp
aas
out
cmp
cmpl
fcompl
out
out
adc
out
js
popa
cmpb
sbb
add
push
xor
popf
test
or
fs
push
dec
aam
mov
test
cmp
fsubr
incl
adcl
add
push
dec
test
sarl
dec
jbe
lea
std
int
sbb
lea
dec
popa
pushf
xor
dec
add
cs
mov
cmp
cmp
cli
cltd
imul
lret
mov
cmp
jg
invd
shr
xor
scas
pop
cmpsb
mov
or
sub
ds
dec
fists
repz
or
in
lods
and
insb
pop
jnp
jl
mov
xorw
cmpsl
cmc
hlt
and
enter
scas
mov
push
xor
dec
mov
pop
in
arpl
jnp
cmp
out
xchg
cmp
bound
push
mov
mov
xchg
inc
and
sahf
sahf
call
and
push
adc
or
mov
push
sub
jle
adc
cmp
int
xchg
add
in
loop
and
dec
or
into
mov
shll
jp
adc
dec
add
iret
dec
data16
inc
xor
jmp
pushf
sarb
sub
insl
testl
loop
lods
lret
sbb
adcb
js
add
push
jae
popf
inc
loop
xor
jecxz
xchg
push
or
aaa
lods
jle
imul
jae
mov
push
fnstsw
cli
test
sbb
cmp
insb
add
add
mov
repnz
lock
mov
call
cmpsb
xor
loope
inc
scas
and
adc
out
cmpsb
xcrypt-ofb
cmpsl
push
inc
fucomi
mov
xchg
adc
push
mov
and
cli
js
inc
add
dec
mov
xchg
insl
jg
lret
mov
push
cmp
dec
out
fsts
out
outsl
mov
jno
pop
fcomps
or
or
mov
mov
pop
loop
pusha
lods
mov
aaa
and
mov
mov
push
and
divl
inc
inc
fcmovu
icebp
sbb
out
mov
sub
lret
add
adc
sub
scas
mov
pop
adc
mulb
por
jno
sub
cmp
sbb
fisubs
sahf
outsl
push
ljmp
out
and
ret
fistl
sbb
push
jp
fisubrs
repnz
sbbl
iret
imul
movsl
leave
push
jle
rcll
mov
ficomps
dec
pop
int
in
sub
dec
cld
adc
ret
test
push
les
unpckhps
push
and
ja,pn
lods
and
scas
fsubp
mov
cltd
test
jns
ja
jl
sbb
push
mov
xor
lds
pop
fstpt
gs
sbb
or
jmp
jmp
mov
fstpl
stos
mov
push
xor
mov
pop
add
out
xchg
mov
push
test
cwtl
inc
dec
jl
pop
push
xchg
out
jbe
leave
bound
out
mov
xchg
adc
dec
test
or
pop
xchg
gs
fiadds
daa
or
push
push
sub
push
dec
mov
stos
sub
loope
mov
sub
mov
sub
rol
icebp
sahf
xchg
gs
mov
popa
sbb
pop
pop
mov
xchg
mov
out
pusha
or
xor
xor
dec
cmp
mov
sahf
jmp
and
leave
pop
push
lea
outsb
stos
mov
sub
cli
inc
vcvttss2si
ja
out
adcb
mov
sarl
mov
jmp
xor
movsl
out
insb
adcb
cltd
xchg
mov
in
ret
nop
mov
out
jb
adc
mov
sub
insb
add
dec
testl
jmp
mov
les
loopne
nop
insl
sub
fsubrl
sbbl
imul
aaa
push
sbb
aaa
mov
xchg
insl
jnp
or
sbb
outsb
xor
stos
pop
scas
lea
nop
lds
imul
int3
test
mov
fildll
stos
adc
pusha
fbstp
sbb
sbb
lock
test
xor
mov
mov
mov
ret
fcoms
sbb
outsb
std
and
mov
or
jb
sub
xchg
test
shl
sub
fnstcw
inc
mov
in
pop
mov
repnz
das
pushf
pop
pop
jecxz
in
imul
pop
dec
shlb
enter
sub
cmpsl
sub
sub
push
negb
mov
stos
js
push
in
inc
loope
xor
cmpsl
popf
test
adc
pop
jmp
inc
lcall
or
call
in
xor
dec
inc
scas
jno
xlat
mov
scas
pop
arpl
mov
cltd
xor
loope
xchg
mov
bnd
jle
std
outsl
push
out
mov
pop
shlb
cmp
sub
popa
mov
stos
inc
shlb
mov
cmp
mov
ror
mov
lods
test
sbb
pop
jp
in
mov
out
movsl
push
xchg
sub
subl
adc
and
lea
jne
ret
es
in
fistpll
ds
cltd
inc
jle
test
stc
shl
repnz
ss
lods
mov
mov
stos
aad
outsl
adc
sbb
jno
sbb
dec
inc
or
inc
jle
negb
cli
insb
and
cld
mov
adc
xorb
push
push
std
adc
xor
aas
clc
call
hlt
loope
idiv
or
pop
addr16
clc
sbb
ljmp
js
test
sbb
insb
xor
daa
cmp
insl
jge
jecxz
xchg
popa
rcrl
mov
dec
shrl
mov
adc
ret
pushf
movsb
ja
cmpsb
scas
sahf
stos
insb
sub
bound
in
ret
mov
cmp
iret
or
mov
sub
dec
push
mov
stos
jo
mov
dec
out
mov
jl
jg
fildl
lret
and
pop
xchg
das
mov
or
out
sahf
push
xchg
dec
mov
push
push
mov
mov
out
inc
xor
imul
mov
fildl
mov
or
and
jae
dec
adc
dec
cmp
lcall
dec
jne
cmp
mov
fs
lret
fs
testb
lret
mov
mov
das
rcrb
mov
je
push
fcmovbe
inc
es
sub
pop
inc
hlt
jbe
or
shl
or
leave
sbb
fldcw
mov
jbe
ss
jecxz
movsl
arpl
jno
mov
out
jo
cmp
cmp
roll
push
pop
and
xor
testb
xchg
mov
fstl
or
mov
ja
dec
gs
adc
fisubrl
inc
jle
decb
mov
mov
cmpl
call
pop
and
inc
push
mov
aaa
push
out
cmp
pop
insl
push
dec
pop
or
dec
mov
int
push
xor
lods
sub
addl
call
loop
mov
adc
push
jbe
xor
cmp
cmp
sub
mov
cmpsl
cmpsb
aas
xchg
stc
pop
mov
sti
cmp
fcmovb
xor
ret
fucom
jg
outsb
or
pusha
iret
jl
xchg
add
movsl
pop
cmp
insb
cmpsl
lock
mov
pop
or
imul
cmp
push
aas
or
sahf
inc
stos
adc
pop
out
xor
into
movsb
mov
adc
nop
inc
adc
je
insl
jmp
shll
cmc
lret
popa
push
sbb
pop
fisubs
cmp
and
mov
jle
mov
outsl
std
dec
jl
aam
or
iret
pop
and
lods
les
inc
mov
sub
sub
mov
pop
scas
lcall
add
and
xchg
mov
in
adc
xchg
and
push
dec
push
sub
xchg
pop
sbb
adc
inc
out
call
inc
lea
xor
push
int
fwait
mov
fnstcw
fisubrs
push
dec
or
xchg
fldl
mov
js
jbe
inc
pop
cmp
fisttpl
das
and
lds
loope
jae
outsb
fbstp
ds
push
mov
loopne
nop
adc
xchg
mov
out
inc
outsb
mov
inc
add
int
sub
or
cmc
outsl
cmp
add
pushf
out
js
mov
dec
in
xchg
push
cmp
push
and
out
jb
mov
mov
mov
sarb
cmp
sbb
shll
rcrl
lret
lret
call
pop
dec
pop
cmpsl
movsl
pop
sbb
cmp
jnp
mov
cli
imulb
inc
cmp
sahf
pop
sub
jnp
mov
mov
push
cmpsb
xchg
data16
mov
jecxz
sbb
add
mov
and
pop
repz
les
add
jecxz
lods
inc
ret
inc
fiaddl
je
mov
xchg
xor
test
insl
push
mov
mov
inc
sbb
pop
and
jge
dec
arpl
hlt
xchg
and
or
rcl
js
inc
push
and
adc
ror
test
test
pusha
cmp
push
dec
xchg
pop
adcl
cmp
xor
jg
rcl
lock
scas
in
mov
and
icebp
xchg
jmp
jbe
mov
push
or
or
sub
loop
pushf
sub
jmp
adc
incl
push
lret
mov
xchg
ret
mov
icebp
sub
push
jb
test
lods
iret
push
sahf
adc
mov
jb
insb
fcompl
pop
ljmp
sti
sub
jno
jno
clc
sub
xorl
jb
iret
cltd
inc
test
jns
jns
cli
push
stc
cwtl
adc
ds
cmp
mov
ss
adc
jb
in
in
inc
pop
sbb
adc
ficompl
scas
jne
je
add
jmp
adc
jnp
xor
pushl
pop
cmp
sbb
push
and
xlat
and
or
in
push
inc
xor
mov
xchg
in
dec
aam
mov
push
popf
inc
idiv
adc
sahf
mov
jmp
cli
dec
aas
aas
cmpb
jl
xor
jb
push
pop
out
pop
cwtl
in
add
add
dec
fsubs
mov
stos
int3
or
dec
in
or
lods
cmp
push
add
je
xchg
dec
pop
xchg
aam
popf
shlb
in
mov
inc
cwtl
in
xchg
cmp
mov
fcompl
je,pt
add
sbb
shlb
lea
inc
xor
fldcw
jecxz
loopne
xchg
mov
mov
es
ret
cld
sti
lods
sbb
cs
pop
movsl
xor
lret
mov
ja
push
pop
iret
repz
cmpsb
aas
cwtl
jge
repz
xor
gs
sbb
inc
jne
sub
les
inc
fwait
mov
inc
inc
cmp
xor
aas
sbb
aas
and
adc
xchg
ret
mov
sbb
in
pop
xchg
lea
pop
jmp
repz
push
xchg
fdivr
in
add
dec
sub
sub
inc
test
jae
shll
inc
xor
aad
mov
sysexit
psubsb
scas
iret
fidivrs
mov
push
orb
ja
pop
test
mov
js
jno
sbbl
sub
outsb
inc
fimull
mov
adc
lods
inc
or
and
out
and
push
pop
add
adc
fstps
out
mov
leave
add
add
bound
aad
and
lret
out
inc
xchg
aam
in
xor
repnz
push
jae
inc
push
ret
jmp
imul
mov
in
pusha
ror
mov
push
push
rclb
mull
sub
push
fildll
add
mov
call
ficomps
out
push
sub
mov
sbb
fwait
dec
xor
jnp
mov
xor
mov
cs
push
cmp
and
fisttpl
adc
or
popa
mov
cli
fs
ret
mov
mov
xor
xchg
dec
enter
mov
adcb
out
movsl
arpl
mov
in
dec
aam
push
aam
scas
stc
outsb
pop
xor
jno
adc
and
cmp
xchg
cmc
jb
bnd
sbb
notb
sub
add
cltd
aaa
mov
outsb
outsl
inc
pop
mov
fimull
mov
fstpl
jo
das
scas
in
sub
out
loop
ds
stc
sub
movsl
add
cmp
pop
dec
sahf
ds
inc
out
lock
test
enter
cmp
sahf
or
or
inc
sub
lret
outsl
lret
jbe
jae
mov
xor
lods
xchg
push
inc
jle
idivl
jmp
mov
subl
mov
pop
pop
jo
add
je
into
pop
fildl
adc
or
cs
sbb
cmp
add
sbb
lcall
jl
add
inc
idiv
push
adc
push
cmpsb
sbb
test
outsl
sbb
push
jno
sbb
or
xchg
mov
dec
dec
adc
test
jmp
aaa
orb
or
iret
push
jb
pop
out
xor
aaa
shl
imul
jnp
dec
pop
xchg
out
shlb
arpl
cmc
cmp
jmp
in
xchg
xlat
loopne
shrb
inc
xchg
pop
fsts
adc
mov
loop
xor
or
xchg
xchg
inc
mov
arpl
or
add
xchg
and
sub
repz
addl
hlt
xchg
mov
xlat
or
pop
test
je
dec
or
cmp
sub
jne
push
mov
jnp
xchg
sahf
mov
sbb
add
clc
xlat
cmp
fucomi
add
push
dec
les
aad
jecxz
cmp
mov
lods
pop
aad
mov
cmp
jl
icebp
or
xchg
cmpsb
push
icebp
cmc
mov
jecxz
push
mov
add
dec
mov
or
aaa
xchg
stc
dec
push
test
sub
sbb
and
push
dec
inc
mov
or
pop
gs
xor
aaa
pop
in
mov
push
jae
mov
jle
lods
xchg
pop
dec
lea
fcomps
inc
movsl
mov
sbb
push
int3
clc
ficompl
jmp
ds
bound
fs
scas
adc
cmp
out
jne
xchg
js
pop
roll
idivb
popf
inc
scas
cmpsl
stos
lods
sahf
push
sbb
add
cwtl
jns
in
ds
inc
jecxz
xchg
or
lret
cmp
insb
jo
loope
inc
fs
and
adc
test
shr
push
cmp
aas
add
or
lea
out
push
sarl
push
lcall
dec
sti
mov
loope
out
faddl
mov
int
int3
xchg
movl
ds
iret
scas
mov
call
imul
cmp
or
push
outsl
jns
push
xchg
fisubl
lock
jp
push
mov
fiadds
les
push
sbb
sub
jge
xor
fisubrs
test
sub
insl
sub
lock
or
or
mov
inc
xchg
mov
sti
pop
enter
and
jmp
dec
xor
jae
enter
test
sub
bound
push
arpl
mov
or
xchg
bound
mov
sahf
lods
idivl
xor
insl
inc
or
sbb
mov
pushf
sub
test
mov
or
pop
cmp
pusha
dec
adc
loope
adcl
push
es
lock
scas
jg
fbstp
out
stos
lret
xchg
mov
fnstsw
mov
sti
cmp
and
pushf
lock
mov
sub
fcomp
and
push
pop
or
and
shr
pop
xchg
cmpsb
dec
mov
sbb
lcall
jp
imul
push
adc
es
mov
or
cmpsl
insl
pop
and
or
mov
std
scas
test
sub
sbb
jno
push
dec
cmp
adc
or
sbb
out
dec
push
cmp
inc
fstpt
inc
dec
in
jns
add
sbb
rcl
mov
mov
repnz
inc
mov
inc
add
fnstsw
mov
xchg
dec
insb
push
jl
adc
hlt
inc
xor
adc
mov
rorb
xor
mov
cmpsl
sbb
pop
out
les
das
movsl
push
inc
mul
and
inc
std
or
sub
mov
out
adc
pop
ja
rcrl
inc
rclb
jmp
xor
out
out
mull
test
ror
out
mov
pop
adc
push
ljmp
daa
xchg
lods
jle
mov
out
sub
lret
inc
out
repz
mov
loopne
cmp
add
rol
cmp
add
sbb
dec
xor
pusha
inc
and
pop
jp
sbb
shl
js
out
inc
pop
jb
testb
xchg
cmc
addb
and
cs
in
out
aad
ret
inc
imul
in
mov
leave
add
and
cmp
stos
mov
and
xchg
mov
pushf
rcl
shlb
lcall
int3
dec
lcall
fld
dec
mov
push
lds
sbb
dec
sbb
in
andl
andl
int
add
scas
mov
sbb
mov
in
xorb
insb
iret
outsl
dec
cwtl
aad
and
je
lahf
fwait
xchg
inc
pop
pop
mov
popf
scas
outsl
stos
cmp
imul
sub
popf
aas
hlt
adc
inc
test
cmp
cwtl
addr16
jp
add
adc
testb
push
xchg
jge
adc
fldpi
and
iret
loop
jp
adc
les
int3
repnz
and
lahf
repnz
out
xchg
aaa
jne
add
sbb
push
inc
xorb
xchg
lcall
xchg
cmp
xchg
fmull
sbb
mov
enter
es
push
faddl
data16
sbb
adc
fwait
movsl
ljmp
mov
add
sbb
push
shrl
jg
int3
sbb
or
add
cmpsl
dec
fcomip
jle
mov
mov
scas
adc
sub
push
out
mov
and
es
dec
shll
addr16
mov
and
popa
adc
aad
movsb
adc
xor
mov
xlat
inc
fbld
sti
into
mov
in
push
adc
cld
cmp
lcall
push
pop
aaa
scas
or
mov
xchg
out
mov
ljmp
xchg
imul
jp
cld
je
rolb
push
int3
pushf
jne
das
das
lret
inc
add
xchg
rcll
sub
insl
mov
loopne
push
testb
adc
fdivr
add
sbb
inc
sar
sbb
out
cmp
negl
lock
out
push
or
mov
xor
inc
lods
cmc
ffreep
iret
shrl
jmp
das
or
into
dec
sub
mov
popf
mov
mov
pop
jb
fistps
mov
aam
movsl
push
add
repnz
std
xor
push
scas
mov
push
test
je
mov
mov
xchg
lock
out
mov
pop
push
sub
ljmp
dec
cmc
jnp
pop
sbb
insb
loope
psrlw
cs
aad
push
enter
cmp
xlat
cmp
je
jbe
or
test
arpl
pop
fcom
inc
xchg
imul
jnp
cmp
pop
jl
xorb
aas
ret
rcr
inc
push
dec
jne
dec
outsb
adc
lret
test
and
aaa
push
lret
dec
loop
or
sub
jl
into
xor
ljmp
and
fistl
idivb
cld
jae
out
mov
in
jge
or
jmp
push
or
outsl
arpl
je
lret
mov
inc
stc
popf
sbb
dec
roll
dec
mov
jmp
das
add
add
pop
aas
xor
ds
in
and
jle
mov
std
xchg
mov
push
and
inc
hlt
sub
fmul
iret
xchg
mov
lods
push
dec
pop
xorb
aad
loope
adc
cld
ljmp
add
push
adc
stc
lahf
stos
lahf
xchg
and
cli
int3
andl
jno
add
pop
imul
loop
mov
packuswb
int3
xchg
orb
sahf
dec
popa
movsl
mov
loopne
aaa
popf
outsb
into
out
and
pushf
xor
ljmp
pop
cwtl
sub
jbe
and
xor
mov
sub
jmp
loope
or
ljmp
popf
ret
lods
cmp
push
sub
and
dec
arpl
cmp
into
inc
mov
ds
lret
cwtl
xchg
xlat
jb
or
iret
call
call
dec
cmpsl
ret
jne
lea
cmp
or
les
loop
mov
mov
inc
popf
in
push
sbb
or
je
lods
mov
jo
add
std
or
es
dec
sbb
sbb
push
pop
shll
std
repnz
stos
cmc
fcom
and
pop
mov
test
mov
fildl
sub
daa
mov
lret
pop
mov
cmpsb
out
outsb
cmp
shll
xchg
cmp
mov
mov
test
cs
mov
vpxor
jg
inc
scas
cmp
adc
adc
mov
xlat
test
cld
mov
psrld
cmpsb
add
and
inc
test
cmp
pop
das
and
hlt
cmc
js
lds
ljmp
rcll
or
mov
add
ljmp
inc
fs
sbb
cltd
cmp
ret
enter
add
jecxz
cltd
push
push
adc
and
jle
pop
jge
dec
sub
and
mov
aas
xor
xor
cs
mov
fdivs
aam
fwait
mov
push
mov
dec
inc
pop
fisubs
jo
pop
fisubl
int
stos
jmp
mov
inc
inc
and
stos
cmp
cmp
and
out
mov
bound
or
insl
xchg
bound
and
mov
adc
xor
daa
cs
mov
cmc
sti
adc
icebp
cmp
cmpsb
nop
and
xor
dec
imul
jge,pn
jns
jb
xchg
or
pop
loop
dec
lods
or
sbb
jnp
aad
or
add
mov
xor
cmovne
inc
movsl
stos
in
adc
sub
add
pop
mov
add
test
stos
imull
or
movsl
xor
sarl
jbe
mov
mov
ja
std
leave
cmp
nop
ds
inc
xor
cld
mov
popf
inc
faddl
jge
ljmp
lods
push
enter
fdivrl
jg
mov
add
xchg
xor
stc
je
mov
mov
cmp
pop
popf
outsb
inc
sbb
fnsave
xchg
ljmp
mov
jae
xchg
pop
aaa
sar
loopne
xor
cmp
sbb
fistps
xchg
icebp
jp
pop
jmp
or
lods
adc
fimuls
aaa
mov
cmp
sub
ret
out
inc
jne
mov
scas
fwait
sti
inc
insb
cmp
ljmp
or
cmp
pop
sub
xchg
xchg
fildl
add
outsb
jno
mov
mov
sbb
fiadds
sbb
into
jae
icebp
das
pusha
nop
and
add
icebp
cwtl
mov
xlat
cmp
jbe
dec
mov
cmp
xchg
aas
jo
add
xchg
pushf
mov
xor
scas
lods
lock
in
adc
push
jb
mov
mov
pop
adc
sub
out
mov
arpl
add
jmp
outsl
xor
sub
sub
inc
mov
shl
daa
sahf
test
mov
pop
ret
dec
outsl
bound
stc
pop
leave
out
jno
pop
repz
push
mov
movsl
insl
push
mov
jl
inc
jmp
mov
inc
pop
sbbl
das
vphaddbw
stos
in
leave
cmc
mov
mov
add
xor
hlt
aam
out
aam
and
adc
hlt
xlat
stos
inc
or
adc
pop
and
pop
mov
mov
gs
inc
xor
loope
xchg
imul
int
scas
pop
scas
in
or
stos
outsl
stos
jae
fdivr
and
clc
inc
push
in
mov
cmp
fnstsw
and
bnd
movsl
pop
mov
push
inc
xchg
aad
sbb
repnz
test
outsl
sbb
test
aas
in
inc
pushf
xchg
imul
sbb
jb
test
out
mov
sahf
fucomi
daa
sbb
jp
insl
mov
cld
cmp
add
lods
adc
movsl
lock
pop
pop
lods
je
mov
xor
ds
mov
dec
jns
setae
and
inc
mov
push
sbb
cmc
shl
adc
loope
addl
lret
subl
dec
pop
shrl
mov
mov
sbb
insl
out
inc
rcrb
sub
adc
mov
divl
cld
mov
jbe
pop
push
rolb
sbbl
mov
cwtl
xchg
stos
test
test
int
data16
fs
inc
jo
lods
rcrb
or
xor
int3
int
jle
jae
mov
les
mov
imul
jns
or
or
call
dec
pop
insl
nop
cmp
xchg
cmp
dec
subl
dec
or
sahf
inc
popf
sub
call
and
movsb
dec
ret
adc
push
dec
in
xchg
data16
adc
gs
jns
sbb
xor
jmp
call
cltd
ror
mov
fdivl
lea
inc
dec
mov
insl
mov
add
jl
mov
mov
mov
std
push
and
mov
xchg
and
aaa
test
and
cmp
aad
scas
daa
mov
clc
push
inc
iret
xor
cmp
push
jle
and
inc
sarb
xor
xchg
loopne
ds
lods
and
pop
imul
or
ja
cli
outsb
mov
xchg
jbe
ret
cmp
aas
imul
jg
jg
inc
cltd
aad
ret
mov
jl
dec
aad
lcall
loop
push
lods
lcall
add
lods
mov
mov
das
add
sarl
pop
insb
adc
daa
mull
sub
lea
mov
pop
rcr
or
lret
movsl
mov
mov
push
push
adc
cmp
lods
fisubs
pusha
mov
jnp
ljmp
lahf
pop
adc
sar
shll
cmp
outsl
adc
inc
enter
mov
movsl
fwait
lds
mov
lods
xchg
mov
or
out
aad
pop
or
subb
dec
adc
cmp
cld
sub
rcll
jo
xor
out
dec
aaa
inc
lds
jle
add
jle
ljmp
jp
or
aam
es
sbb
imul
fdiv
and
add
or
pop
mov
jae
sub
xlat
mov
adc
mov
push
push
bound
rcrl
in
inc
js
dec
push
ficoms
scas
or
unpckhps
fildl
outsl
dec
mov
mov
inc
xor
test
out
adc
popa
push
sub
push
adc
jg
insl
stos
cmpsb
jbe
scas
lret
and
subb
sub
cmpl
jmp
mov
cltd
scas
call
xor
lock
mov
mov
mov
scas
fdivrs
mov
pusha
mov
push
and
stos
pusha
cmpsl
pop
test
stos
xchg
dec
mov
insl
and
js
mov
mov
aaa
int3
mov
cmpb
add
sar
or
in
mov
lcall
aad
fstpl
lahf
add
fidivl
test
inc
or
jbe
in
mov
inc
push
into
xor
mov
cmp
add
and
push
imul
ret
add
push
aad
mov
lcall
mov
pop
sub
push
ror
add
mov
mov
aas
fimuls
fmul
dec
mov
push
leave
fwait
mov
mov
movsb
cmpsb
jg
jbe
mov
aam
movsl
and
pusha
out
add
add
pop
bound
sub
stos
pop
sahf
pop
adc
mov
daa
jb
xchg
mov
sbb
sahf
ss
mov
lcall
pop
fcoml
jb
cmovs
dec
inc
ljmp
fs
xchg
xor
jmp
jp
mov
sbb
cmp
or
lcall
sarb
xor
loope
nop
cld
jne
push
sub
jns
lds
push
pushf
sti
jl
imul
cmp
cmp
jp
jno
inc
fmull
cmp
clc
sbb
or
stos
pop
xor
jo
pop
dec
sbbl
lds
pushf
cmc
xchg
xor
pop
aam
or
mov
repz
arpl
mov
xchg
pop
cmc
xchg
cltd
adc
cmp
mov
outsb
cmpsl
sbb
push
inc
mov
std
dec
ss
scas
dec
les
repnz
adc
mov
sub
xchg
data16
and
js
div
pop
inc
lret
ds
in
mov
xor
pop
cmp
fmul
mov
mov
and
iret
daa
push
pop
outsl
test
outsl
int
dec
cli
dec
inc
xor
out
pop
jno
jb
les
push
mov
rorl
or
push
push
adc
mov
addr16
xor
xchg
jo
adc
sbb
ret
dec
pushf
add
fnclex
push
dec
std
outsb
je
outsb
rcl
cmpsl
mov
jge
shlb
sbbl
jmp
push
sbb
cwtl
cwtl
push
mov
jne
movsl
jo
sbb
push
sbb
xorb
je
mov
sar
pop
and
in
inc
ret
ljmp
fwait
pusha
xchg
pop
cmp
pop
push
dec
jge
pop
jl
jmp
mov
jecxz
iret
sar
std
push
mov
inc
dec
sbb
aam
addb
movsl
xchg
sahf
jae
push
add
js
cs
pop
testl
push
mov
repz
psubusb
jo
or
out
inc
aas
adc
pop
and
pusha
push
int
in
push
popf
xorl
and
test
addl
loopne
xor
fdivrl
pop
pop
sbb
sub
in
cld
pop
aad
jbe
push
mov
adcl
loop
xchg
cs
xchg
fwait
pop
clc
adc
mov
mov
fldcw
dec
adc
pop
pop
out
mov
push
mov
or
push
mov
lods
out
jo
push
adc
std
adcl
push
ljmp
movsl
xor
and
scas
and
test
xchg
sbb
lret
mov
sub
sbb
sbb
cmpsb
inc
fsubs
dec
addb
orb
mov
rorl
fxam
adc
mov
mov
add
adc
mov
inc
out
mov
sub
fimull
jl
jg
pop
pcmpeqw
or
int
jb
cmp
xor
fistpll
push
inc
arpl
push
adc
xchg
jns
rcll
xchg
push
dec
pop
aaa
les
push
sbb
lret
dec
mov
xor
decl
and
lcall
loope
xor
insb
pop
add
out
mov
fistpl
test
mov
fisttpl
lock
dec
and
ret
les
fwait
sub
pop
mov
mov
aas
lds
mov
mov
in
cwtl
and
loope
ret
lea
sbb
test
stc
push
dec
icebp
adc
dec
sub
add
mov
in
or
movb
pop
shll
mov
xlat
pushf
cmp
outsb
mov
insb
inc
lock
pushf
dec
push
lods
mov
jmp
fistps
repz
inc
aam
mov
or
lcall
test
mov
rcrb
sub
adc
shr
and
in
mov
inc
mov
jne
testb
push
mov
push
cmp
inc
fnstcw
cld
inc
decb
cmpsl
aas
lcall
mov
lcall
jo
add
push
aas
inc
inc
adc
cmp
mov
xchg
pop
cltd
fcomps
int3
out
xchg
mov
out
xor
xchg
rorb
sub
dec
jl
or
js
mov
bound
or
scas
jmp
data16
inc
int3
jl
push
shll
push
pop
sarl
fdiv
sbb
fnsave
pushf
aam
mov
push
jmp
mov
in
fwait
xor
inc
pop
test
sub
xchg
push
xor
iret
xor
adcl
inc
xor
cmp
xchg
cmc
cli
arpl
or
and
jb
lock
xlat
mov
xor
cmpsb
sub
or
pushf
ljmp
inc
xlat
insl
fwait
enter
xor
ret
sub
popa
pop
and
int3
dec
cs
cld
mov
cmpb
mov
mov
jle
pop
sbb
lods
xor
outsb
sbb
dec
dec
push
dec
cmp
into
ss
aad
mov
mov
mov
lds
and
push
icebp
pop
xor
int
dec
xchg
decl
outsb
aad
cmp
mov
lret
cmp
in
xchg
mov
call
aaa
outsl
loope
int
jnp
fistps
pusha
lret
xchg
ror
push
insl
sub
mov
lods
btc
jo
sbbb
iret
js
adc
mov
stos
repnz
push
push
iret
adcl
mov
or
mov
cmovl
push
aad
mov
dec
cltd
jp
arpl
into
ret
stos
sbb
or
cmp
cwtl
mov
ljmp
out
add
xlat
fwait
aaa
call
aam
jbe
push
orb
mov
test
jbe
ret
xchg
jnp
push
adc
scas
movsb
and
test
add
pop
xchg
pop
xor
lods
ret
imul
inc
aaa
dec
icebp
jmp
pop
cmpsl
dec
mov
fcmovnbe
dec
mov
inc
sarl
inc
xlat
outsb
pop
scas
lock
rcr
repnz
inc
adc
shrb
jl
dec
sub
xchg
clc
jl
xchg
adc
jo
push
jecxz
aad
pushf
mov
out
lahf
jecxz
lods
fwait
pop
sbb
mov
mov
outsb
daa
into
push
cmp
orb
mov
repz
adc
jmp
ret
sub
lret
icebp
rcrb
inc
jle
shl
mov
mov
push
popf
movsl
sbb
aas
ror
ja
les
mov
or
stos
inc
jge
mov
ljmp
xor
add
jns
push
jmp
addr16
sbb
push
pop
adc
xor
dec
mov
inc
movntps
push
jo
hlt
fisubl
adc
cs
sub
addr16
sbb
out
mov
iret
dec
lret
dec
adc
std
test
sbb
adc
or
cmp
mov
lock
sahf
cld
aas
imul
xchg
adc
ret
add
mov
push
mov
enter
cmc
int3
xchg
inc
jno
jbe
rolb
dec
lret
int
jbe
and
mov
imul
cmp
mov
or
gs
adc
push
fs
fstpt
pop
out
jecxz
mov
xchg
aad
mov
std
leave
idivb
inc
in
cmpsb
sbb
fwait
sarb
andl
add
test
roll
test
cmp
cmc
sub
dec
stos
sub
incl
xchg
push
xor
je
dec
data16
iret
dec
dec
cmpsb
jp
sub
add
adc
jo
mov
jl
imul
xorl
lcall
pushf
call
push
hlt
or
mov
sbb
aaa
repnz
inc
stc
xchg
xchg
dec
daa
imul
inc
in
jl
ss
jl
leave
fisubrs
dec
out
push
xchg
sbb
arpl
inc
jl
daa
xchg
cmp
dec
fucom
scas
mov
fistpll
cmp
lock
mov
repnz
xchg
inc
mov
pop
push
xlat
je
and
xchg
or
sub
mov
jl
xor
inc
xchg
adc
ds
nop
pop
push
bound
xor
lock
sti
sub
cltd
insl
add
and
cmp
rorl
mov
into
test
pop
sbb
sub
pushf
add
or
popf
mov
pushf
mov
cwtl
jmp
int
pop
pushf
iret
push
xchg
lret
dec
jge
iret
mov
icebp
mov
xchg
inc
dec
dec
int3
mov
je
adc
aam
sbb
cs
adc
fs
ljmp
clc
cwtl
or
and
or
std
ret
movsb
push
mov
cmp
push
add
xor
mov
cmp
popf
sub
cmpsb
dec
push
cmp
sbb
aas
stos
inc
pushf
pop
xchg
add
test
ret
xchg
notl
mov
xchg
lahf
adc
cmpsl
or
dec
icebp
dec
ds
sub
adc
addl
adc
insb
cmpsb
pop
xchg
add
xchg
sub
insl
inc
outsl
cmp
pop
xchg
adc
mov
adc
sub
mov
scas
fisubl
cmp
leave
dec
and
cmpl
outsb
push
dec
sub
xor
jp
or
sub
fsubrs
faddl
xchg
lods
dec
idivl
addl
jg
sbb
jb
aaa
les
and
and
jae
cli
add
fcoml
add
pop
add
mov
and
in
lcall
les
or
int3
std
dec
out
mov
pop
mov
jl
or
popa
jbe
in
sub
int
add
xlat
in
sarb
je
and
add
test
pop
fs
dec
cmovne
filds
pop
int
mov
cld
lods
sub
je
leave
loope
fsub
addr16
nop
loop
xchg
jg
push
scas
xor
mov
popf
out
pop
ss
es
call
jnp
pop
lcall
loope
fs
pop
leave
or
inc
add
aam
outsl
inc
sbb
hlt
aad
cmovl
not
and
rcrl
adc
xchg
gs
arpl
push
inc
jns
jl
mov
add
sbb
sbb
repz
adc
enter
and
adcl
in
cmp
jns
pop
out
dec
sub
mov
movsb
sub
jb
in
push
xchg
scas
xchg
push
sti
pusha
pop
movsb
cs
jb
gs
out
les
shlb
sbb
xor
pop
mov
mov
cs
stc
or
lret
xchg
xor
pop
jbe
sub
cmpsl
mov
ret
inc
xchg
jno
imul
adc
les
pop
lcall
sbb
fcom
fbstp
adc
xor
jg
test
mov
cltd
dec
dec
push
xorb
jp
imul
add
clc
pop
push
xchg
sahf
fst
adc
data16
psubd
xchg
aad
add
lods
xchg
pop
mov
or
xchg
gs
push
dec
lea
into
mov
jp
and
cmp
dec
cld
mov
sub
mov
fdivp
mov
movsl
sbb
push
pop
cmc
adc
jg
push
mov
sub
mov
fmul
das
lods
in
xchg
sahf
add
mov
inc
cs
pop
add
mov
imul
ljmp
pop
cli
sti
mov
cmp
test
jle
pop
pop
ds
iret
ja
jbe
push
insl
mov
jno
push
inc
jb
jp
scas
loopne
test
pop
jnp
sub
nop
push
cli
mull
xor
cmp
sub
pop
fidivl
mov
pop
hlt
movsb
mov
pop
push
mov
cmp
imul
ret
jg
xchg
js
in
ljmp
pushl
int3
add
lds
ds
outsb
add
out
mov
lods
jp
inc
and
mov
jle
dec
xor
xor
fildl
scas
mov
add
test
sbb
fdivrs
lahf
rcrb
psrld
xchg
enter
push
mov
mov
or
push
lea
mov
mov
sub
jno
dec
mov
arpl
fbstp
aam
sub
xlat
push
movsl
xchg
test
push
leave
ds
push
icebp
iret
insb
pop
dec
loope
cmc
in
mov
fnsave
dec
or
push
lahf
cwtl
aaa
outsl
mov
mov
sbb
in
xor
xchg
rcrl
pop
lahf
cld
xor
enter
xlat
fdivrs
scas
mov
mov
jl
pop
test
shlb
lds
loop
mov
jmp
push
stos
inc
fcompl
inc
jle
cwtl
das
imul
xchg
or
adc
xchg
inc
push
or
lea
jo
in
das
jo
hlt
xor
xchg
adc
mov
xchg
add
mov
xor
stos
jl
adc
in
insb
xor
xchg
cmp
sub
xchg
scas
push
cld
out
test
insb
mov
movsb
mov
inc
jecxz
popa
scas
sbb
pushf
in
mov
fdivrl
rcr
loopne
lret
push
fwait
cmp
jg
mov
dec
cmp
push
stos
and
iret
jecxz
adc
pusha
dec
movsb
inc
mov
xchg
iret
inc
fsubrl
sti
adc
and
movsb
test
mov
dec
mov
out
dec
test
inc
add
mov
call
call
inc
aad
mov
inc
pushf
popa
jl
mov
stos
iret
jnp
in
pop
mov
mov
test
cmp
dec
rolb
sbb
add
lds
mov
ret
sub
mov
into
outsl
dec
and
inc
adc
xchg
rcrl
xlat
scas
lock
mov
loope
das
shll
stos
sub
push
outsb
cmpl
out
xor
inc
rclb
sarl
pop
adc
jle
ja
mov
aam
dec
xor
pop
cmp
je
js
xchg
add
mov
push
lea
mov
call
stos
sbb
gs
icebp
cmpsb
aad
push
fsubrs
inc
js
jle
xchg
je
jg
sbb
sub
lcall
sahf
jne
adc
inc
je
nop
test
xor
adc
sub
sub
clc
rcrl
mov
jae
adc
aam
shrl
cmpsl
dec
jge
cli
cmp
sbb
and
mov
inc
fwait
inc
fdivl
cmp
popa
add
jns
out
fists
add
jbe
xchg
fcos
or
pop
pop
xor
cltd
pop
shll
ja
jecxz
movsl
inc
jg
or
mov
aas
pop
xor
inc
or
fwait
mov
mov
sub
sti
icebp
addr16
popa
loop
inc
aaa
mov
int
xchg
shll
adc
xchg
sub
push
mov
dec
mov
ror
call
mov
insb
hlt
repz
ss
test
add
add
mov
in
xchg
or
movsl
mov
mov
sub
inc
outsl
jmp
cwtl
imul
nopl
sarl
sbbb
mov
int
outsb
mov
addr16
inc
bound
adc
jne
cwtl
xor
adc
mov
addr16
aaa
ret
or
jg
dec
stos
lods
dec
push
mov
icebp
cmp
mov
lea
ss
xchg
repz
adc
jno
xchg
sbb
movsb
lock
out
xor
insl
jecxz
cmp
inc
repnz
frstor
ljmp
cmp
adc
rcll
mov
out
jb
sbb
fnsave
daa
cltd
push
ljmp
inc
and
xchg
cmp
adc
mov
dec
cmp
in
bound
mov
mov
das
repz
push
scas
fs
mov
add
dec
inc
js,pn
mov
ss
cmp
push
addl
out
or
sti
mov
xor
bound
rclb
pop
sarb
addr16
fstpl
xor
cmc
push
lock
cmp
call
mov
cs
pop
in
or
sub
les
add
int3
pusha
xchg
outsl
jns
sbb
push
pop
mov
push
and
or
and
or
inc
shl
leave
inc
push
push
adc
or
cmove
lods
sbb
icebp
mov
stc
adcl
push
jbe
xchg
add
push
push
xor
addr16
test
pop
sub
push
dec
inc
test
dec
cmp
xlat
scas
les
ret
nop
aad
ficoml
mov
hlt
enter
aaa
xor
add
stc
push
dec
mov
jp
jmp
jae
mov
cmc
mov
mov
movsb
push
jns
fcoms
sub
sub
and
lock
into
mov
pop
jae
mov
shlb
push
pop
sbb
cmp
lock
mov
lea
add
fmuls
insl
push
in
adc
icebp
jns
jno
outsb
xchg
ficomps
and
daa
mov
call
dec
or
sbb
push
test
fildll
mov
out
fstpt
xor
ret
or
mov
neg
jl
in
mov
rcll
mov
or
jb
jmp
and
xor
jno
cmpsb
in
sub
xorb
and
jg
repz
and
in
mov
test
sbb
stos
out
jge
mov
xchg
cmp
ds
xchg
stos
dec
mov
cmp
cmc
and
insb
pop
sub
mov
je
jle
or
jbe
leave
xchg
cmc
or
addb
xchg
test
add
ja
adc
ljmp
scas
imul
jns
dec
adc
mov
fstl
das
testb
cmp
in
inc
xchg
test
cmp
cmpb
nop
xchg
adc
xor
push
mov
bound
jbe
std
mov
cmp
jns
imul
lret
sarb
aad
push
nop
adc
xor
push
cwtl
lret
outsb
popf
stos
xchg
mov
shlb
outsb
mov
jo
lock
pop
push
cmp
push
in
negl
dec
out
imul
psrad
in
cmp
in
pushf
or
dec
enter
dec
dec
xchg
test
pop
jno
or
jae
sub
sub
cmpsb
mov
das
mov
iret
jecxz
sub
sarl
jmp
mull
imul
enter
inc
test
popa
int3
mov
lods
fstp
xor
into
cmp
xor
xchg
or
pop
mov
jmp
fsubrl
ds
js
inc
test
hlt
divb
pop
xchg
aas
pop
cmpsb
cmp
scas
lahf
aaa
cs
aas
test
push
nop
or
in
dec
out
test
and
call
cld
xchg
pop
sub
sbb
mov
daa
or
aam
test
lret
lods
mov
inc
add
clc
sub
xchg
aaa
dec
pop
sbbb
js
dec
lds
mov
aaa
xor
fs
cmp
popa
ja
sub
loopne
jnp
loopne,pt
dec
mov
xchg
add
in
push
xor
sahf
and
dec
dec
sub
mov
dec
jecxz
xchg
push
lea
cmpsl
repz
cmc
insl
jecxz
aaa
inc
dec
mov
sti
mov
stos
inc
andb
in
push
jns
es
cmp
or
cmpsl
out
jnp
jmp
xchg
xchg
aas
xchg
lods
setns
out
pop
stc
js
subb
pop
cmp
call
or
adc
ret
sub
ret
aaa
sub
mov
ret
cmp
jge
sub
test
test
iret
mov
lds
fwait
shll
add
sbb
and
stos
adc
push
imul
inc
mov
mov
fwait
sub
dec
mov
or
xchg
mov
daa
cli
jge
cmp
jle
jge
dec
outsb
or
or
xor
loopne
mov
jmp
cmp
into
mov
in
dec
cmp
lods
sti
idiv
dec
xchg
mov
cli
cmp
nop
adc
scas
stos
loope
aas
cmpsl
jl
fmuls
imul
dec
mov
push
add
fidivrs
adc
sbb
adc
stos
push
or
aad
test
mov
push
cmpsl
imul
mov
loopne
jle
mov
fsubl
cld
lock
pop
in
scas
rol
ret
lret
or
inc
jge
in
ret
movsl
pop
sbb
aam
and
dec
mov
cmc
insb
jb
xor
fldcw
pop
inc
xchg
fcomi
xchg
dec
jle
add
ss
test
pop
mov
mov
fstps
cmp
std
popw
push
stos
sub
xchg
xor
addl
cld
adc
ret
xlat
inc
adc
xchg
xchg
jp
fwait
inc
pusha
dec
xchg
or
add
stc
mov
mov
jmp
xor
loope
pushf
fucomp
jge
mov
dec
stos
loopne
lock
gs
aas
stc
mov
and
cwtl
es
cwtl
insb
lods
sbb
jp
lret
repnz
icebp
sbb
jbe
and
or
mov
pushf
and
popf
outsl
push
sub
cmp
dec
les
mov
int
mov
jle
sub
mov
aas
jge
sti
jb
inc
push
cmp
imul
sub
push
iret
and
cli
aas
repnz
push
adc
loopne
dec
icebp
sbb
or
jl
rolb
int3
dec
mov
push
xchg
inc
mull
cmc
inc
enter
adc
fnstenv
lahf
rep
mov
lock
mov
roll
add
push
movsl
mov
pop
jge
mov
out
jmp
lea
sub
push
repnz
pop
leave
repnz
sahf
and
mov
or
dec
scas
mov
test
call
mov
mov
mov
add
pop
sarl
pop
mov
sub
push
or
sub
lea
sub
mov
inc
mov
xchg
adc
fcomps
lods
or
scas
test
aaa
mov
xchg
jnp
mov
mov
adc
icebp
mov
rcl
mov
andb
or
fisubl
mov
jp
fdivs
sub
cmp
lock
push
fninit
imul
mov
xchg
mov
pop
sbb
shlb
jp
push
das
xor
jp
xchg
aad
pop
xchg
xor
rolb
dec
xchg
sub
jle
negb
stos
cli
jg
aaa
lahf
lods
push
sbb
sti
xor
cltd
push
sbb
adc
dec
andl
sub
pushf
add
pop
imul
or
lods
cli
aaa
push
insb
sbb
inc
int
mov
jmp
loopne
cmp
lods
fimull
mov
movsl
pop
dec
mov
or
cltd
push
sub
mov
inc
icebp
push
mov
test
in
out
in
sbb
insb
lds
scas
cmp
movzwl
cmp
lock
add
or
cs
inc
ja
outsb
sbbl
jb
and
add
popf
push
aaa
inc
iret
inc
lds
pusha
movsl
popf
jo
push
in
xchg
sahf
inc
sub
inc
inc
filds
les
sub
and
inc
jae
jne
ss
jmp
call
dec
addb
jl
cmp
ja
xorl
jle
xor
lahf
stc
xor
cmp
pop
aad
sub
mov
sub
dec
cmp
leave
mov
inc
pop
es
bound
push
or
fdivrl
jnp
cmp
gs
negl
lock
xor
inc
xchg
aas
pusha
shl
pop
adc
and
mov
icebp
nop
mov
scas
faddl
pop
lods
push
je
inc
clc
mov
imul
push
clc
mov
lods
hlt
aaa
sbb
xor
testl
lods
in
mov
jae
push
xchg
pextrw
sbb
imul
sub
sub
movsb
cmp
adc
mov
mov
outsl
mov
mov
pop
jae
jmp
add
les
jp
mov
clc
imul
and
shll
dec
out
sub
jns
aas
fidivs
xchg
sub
lds
sub
xchg
jnp
shrl
std
aaa
hlt
sarb
jl
and
out
bound
dec
pop
add
gs
not
pop
arpl
test
sub
mov
adc
inc
ficompl
push
push
pop
int
dec
mov
mov
cmp
movsb
add
enter
mov
pop
jl
jnp
rorl
or
jo
sub
or
insb
jae
xchg
aad
inc
int
stos
lods
jl
rcll
jno
hlt
pop
pop
data16
ret
cltd
adc
mov
dec
aaa
and
leave
pop
jno
sub
mov
xchg
push
and
popf
insl
dec
icebp
out
mov
decl
push
or
xchg
jno
lcall
iret
mov
addb
mov
arpl
aas
fstl
add
inc
xor
ficoms
jbe
in
test
cltd
pushl
xor
or
lcall
in
sarb
sar
jge
leave
jge
movsl
insb
repnz
aad
stos
push
mov
mov
add
inc
mov
fildll
ja
into
div
mov
jecxz
repnz
mov
mov
inc
xor
ss
jo
arpl
and
adc
aad
pop
mov
cltd
lahf
std
jnp
ja
sub
mov
jle
pop
or
sub
cmpsb
cmp
out
ret
mov
das
loope
popf
xchg
add
jmp
push
and
xchg
shl
negb
dec
ret
sbb
imul
sub
mov
fnstcw
into
sub
mov
mov
mov
hlt
stc
sub
or
mov
fsubrl
ficomps
and
inc
adc
in
push
pop
push
and
sub
xchg
xchg
xchg
shrb
sti
add
aam
pushf
or
js
or
aas
inc
push
sar
mov
jnp
shrl
jo
bound
xor
add
sti
sbb
fimuls
loop
das
jmp
test
push
sub
cli
pop
aad
inc
cli
enter
adc
inc
mov
imul
sbb
lea
fidivl
mov
jbe
int
sub
push
clc
scas
insl
popf
in
xchg
jns
mov
adcl
and
out
dec
lret
push
push
out
dec
mov
ficompl
out
fldt
sub
add
repz
ja
fcomps
cmc
xor
mov
mov
rcrl
cmp
or
pop
hlt
xor
jb
sbb
cli
shll
or
xor
push
cmpsb
test
pop
mov
lods
mov
rcll
cli
cwtl
jge
out
and
pop
mov
adc
clc
xchg
jnp
cltd
xor
and
push
mov
sar
mov
and
cltd
pop
rol
pop
or
call
add
loop
sbb
push
fdiv
jb
jg
cltd
ljmp
cmp
dec
cltd
pusha
out
popa
orb
jp
insb
sbb
ds
nop
arpl
xchg
adc
fsubs
aam
data16
pop
or
fistl
add
aaa
push
or
test
cltd
push
fsincos
sub
xchg
lret
lods
icebp
jg
sub
lret
imul
mov
push
ror
loop
ds
push
lret
xor
rclb
pushf
inc
mov
jnp
add
pop
sub
imul
dec
negb
add
iret
cmp
xor
in
test
sahf
or
cli
pop
adc
cmp
xor
dec
pusha
test
rcr
mov
pop
pop
xchg
cs
loopne
jae
xor
mov
cmp
jne
cmp
ds
xor
sahf
fnstcw
inc
and
ret
add
stos
loop
and
adc
imul
in
xchg
pop
inc
jecxz
push
jecxz
sbb
sbb
sbb
rcrl
xchg
int3
add
mov
movsb
xor
scas
lds
mov
sahf
test
mov
aam
mov
fs
pop
jo
mov
pop
stos
faddp
clc
push
pop
xor
sbb
bound
dec
lods
push
test
sbb
lcall
pushf
mov
jno
in
pushf
jae
das
cltd
jecxz
std
sbb
dec
xcrypt-ofb
cmpsl
adc
pop
xchg
insb
sbb
mov
in
xlat
push
push
mov
data16
insb
shlb
flds
inc
lds
ljmp
push
mov
adc
mov
xchg
test
or
add
xchg
je
test
ficompl
push
sub
andb
push
xchg
push
xchg
xor
cmp
lahf
mov
or
sub
pop
mov
sbbl
repz
xlat
pop
cs
sahf
and
mov
cmp
aad
pop
lea
test
je
mov
adc
adc
mov
inc
imul
sti
imul
repnz
jge
mov
xchg
pop
imul
xor
dec
jl
pop
inc
ds
jecxz
in
add
sbb
test
push
jbe
jl
xor
pop
flds
xchg
mov
out
out
testb
push
push
lock
xor
lcall
gs
pop
cli
insl
out
stos
test
mov
mov
popa
and
loopne
sti
nop
cmp
sub
scas
rcll
in
cmpsl
movsb
pop
ds
dec
xchg
sahf
push
xchg
repz
cmc
dec
jl
add
imul
gs
das
xor
in
test
jle
jle
movsl
in
dec
lret
call
inc
xor
cmp
lods
int
test
loopne
pop
dec
jnp
ret
mov
jg
push
ds
rorl
cli
xor
cmc
or
add
pop
dec
mov
ficompl
jg
repnz
loope
fmuls
out
mov
je
or
push
mov
xchg
xlat
in
cwtl
pop
rolb
or
inc
mov
test
sbb
shl
mov
nop
rcl
dec
xor
push
inc
xchg
adc
or
fs
lea
push
fimuls
mov
sub
dec
iret
mov
jecxz
jae
mov
or
dec
add
bndldx
insl
adc
dec
mov
jne
pop
and
mov
notb
xchg
and
lret
iret
fistps
and
and
mov
and
cld
adc
pop
ret
or
mov
in
jo
rcrl
shlb
jecxz
and
stc
pop
pop
cmp
xchg
js
test
dec
xor
xchg
mov
lods
daa
cmp
ja
ds
dec
out
lret
push
and
dec
push
sub
out
push
sub
sbb
xchg
out
call
aad
sub
rolb
mov
push
mov
icebp
or
movsl
insl
add
adc
into
out
mov
rclb
lock
add
out
mov
jg
jo
mov
cmp
mov
cld
mov
mov
xor
jle
jge
mov
cmpsb
aaa
jb
push
jmp
imul
add
testb
gs
jo
jle
frstor
pop
bound
lcall
dec
cmp
push
fs
add
push
mov
and
sbb
loop
shll
push
stos
jp
sbbl
mov
xchg
jbe
cmp
adc
xchg
fs
outsl
outsb
mov
cwtl
sub
sbb
xchg
adc
aad
xrelease
in
cwtl
scas
out
mov
ss
pop
out
mov
in
sub
push
and
mov
dec
mov
sub
rclb
or
add
add
loop
loope
add
fsubrp
lods
adc
cwtl
stc
push
pushf
mov
adc
mov
call
xor
rcr
dec
jbe
xor
push
push
call
mov
call
inc
xor
jge
or
push
lahf
cmp
insl
push
cmp
add
pop
sar
mov
in
ds
outsb
xlat
mov
call
cmpsl
enter
jbe
jecxz
mov
inc
push
insl
xor
dec
bound
inc
and
stc
mov
xchg
int3
mov
and
dec
mov
dec
mov
jecxz
sub
jbe
ror
rorl
jl
jmp
sbb
bound
pop
stc
insb
test
out
in
push
stc
scas
jmp
loop
movsb
pop
scas
dec
arpl
dec
pop
fwait
popa
shll
out
cli
imul
rcll
or
sbb
arpl
pop
fldt
dec
mov
adc
inc
jecxz
mov
inc
dec
into
cmp
rorl
mov
es
inc
push
sub
lcallw
repz
or
gs
cmp
mov
mov
mov
lahf
dec
pop
dec
idivb
loope
loopne
xor
out
pop
adc
fwait
xor
xor
and
cmp
arpl
bound
sub
daa
inc
xlat
push
mov
mov
cmp
out
pop
aam
dec
cli
emms
gs
repnz
fwait
cld
adc
dec
ds
cwtl
jmp
push
cmp
gs
jle
mov
int
adc
out
mov
pop
sub
adcb
ret
fmul
ss
call
out
std
outsl
jnp
sbb
pop
add
cmpsb
aad
les
fnstsw
imul
or
adc
jns
pop
shll
inc
addr16
xchg
mov
pop
adc
mov
sub
mov
outsb
adc
int
lods
lea
shll
jbe
push
jo
inc
dec
fdivrs
mov
lea
or
rorb
jnp
enter
sbb
dec
or
jbe
xchg
out
ja
out
jb
xor
mov
mov
cs
cld
fs
jne
rcrl
imul
jns
or
mov
rolb
and
subl
xchg
lret
and
lea
ja
push
mov
pop
jae
mov
jmp
mov
jmp
mov
sub
and
jne
adc
pop
sub
add
js
xor
leave
mov
pop
sti
aad
adc
xor
adc
xchg
cs
jmp
mov
dec
or
add
adc
dec
pop
push
xor
push
icebp
add
push
in
sbb
push
js
les
mov
mov
inc
push
aas
xchg
leave
push
and
call
out
cmpsl
inc
sbb
nop
xor
add
or
sub
mov
popf
mov
hlt
mov
in
mov
jp
int3
sbb
fnstsw
test
ljmp
pop
vmovlps
mov
js
f2xm1
sub
das
mov
aam
dec
dec
cli
fisttps
fistps
pop
push
sub
xlat
jecxz
mov
and
adc
adc
repz
insl
cld
lods
mov
addr16
std
test
adc
cmp
aas
rorb
or
ret
sbb
and
mov
jle
lahf
pop
xor
sbb
cli
psrlw
lock
lahf
jb
pop
cs
cli
imul
xor
xchg
dec
aad
fidivrs
mov
pop
cmc
lods
arpl
xchg
mov
sub
xchg
das
ja
mov
lea
cmovne
sbb
outsb
xor
mov
sub
mov
mov
mov
fidivl
sub
pop
adc
mov
sub
add
insl
adc
lds
mov
xor
cmp
jns
fiaddl
jmp
inc
mov
jnp
mov
dec
mov
jge
mov
sbb
mov
lret
ficoms
sahf
xor
cmp
sub
btc
imul
cmp
lods
mov
out
xor
mov
notb
hlt
or
dec
daa
xor
and
dec
cmp
xchg
push
inc
dec
scas
jae
dec
test
fildll
imul
push
add
jle
dec
sbb
movsb
stc
and
jnp
inc
fwait
stc
lahf
ss
rol
pop
push
out
movsb
push
mov
lahf
scas
inc
sbb
inc
xchg
sub
insl
ret
sub
or
mov
je
xchg
aam
popf
mov
sub
pop
jl
push
or
jge
std
mov
mov
xor
scas
pop
mov
nop
out
pop
mov
in
in
adc
repnz
mov
aas
pop
sti
scas
and
out
lcall
sub
push
pop
push
dec
int3
ficoml
add
mov
ret
test
jl
popf
push
adc
push
cmc
stos
not
loope
cmpb
ret
sbb
bound
test
inc
add
or
in
lods
push
mov
lods
shll
icebp
scas
insl
and
xor
lret
dec
lods
mov
add
cld
and
frstor
push
lds
icebp
jle
add
xchg
pop
aad
mov
int
ret
xchg
mov
mov
cmpb
dec
ja
xor
push
jb
jne
sbb
cs
fistpl
inc
ficomps
or
sub
out
mov
jno
mov
cs
xchg
lret
mov
jo
cmp
xlat
cmpb
aam
ss
or
clc
andb
in
test
popf
lds
and
sbb
rclb
pop
dec
jno,pn
sub
jle
push
enter
pop
mov
int3
aam
sbb
xor
and
lret
inc
jns
fwait
xor
mov
rol
dec
cmp
mov
dec
xor
dec
cmpb
fs
scas
mov
lcall
or
mov
fistpl
jo
lods
push
ss
aaa
inc
ss
adc
mov
into
scas
mov
fs
fisttps
push
loopne
std
inc
mov
sub
jmp
add
sbb
addr16
aas
fisttpll
dec
add
mov
aas
pop
pusha
add
inc
mov
sub
inc
cmpsb
movsb
test
psllw
bnd
sahf
in
aam
mov
lods
test
xchg
xchg
ljmp
or
bound
jmp
xchg
inc
rol
sub
xchg
jmp
xorl
xchg
cmpsb
pop
mov
lods
push
imul
mov
fsts
jno
mov
lea
flds
outsl
xor
push
push
outsl
mov
jecxz
lods
repz
xchg
jne
xchg
mov
mov
inc
imul
arpl
loop
daa
dec
aaa
scas
inc
cli
lock
jne
cmp
mov
sub
mov
cmpsb
lret
mov
cmp
mov
cli
icebp
or
dec
rclb
dec
adcb
inc
movsb
sub
pop
test
aas
sahf
js
push
test
or
mov
xchg
jno
sbb
movsl
pushw
dec
mov
lret
leave
shll
mov
push
mov
loop
leave
push
insl
pop
lret
jg
pop
sbb
lahf
or
stos
cmp
insl
xor
rolb
push
add
arpl
negb
xor
lods
cmp
fstps
push
ljmp
mov
mov
fcomps
xchg
sub
sub
adc
cmp
push
data16
dec
push
sub
popa
mov
adc
mov
cmpsb
popl
stos
xor
lcall
test
mov
iret
loopne
imulb
mov
jg
subb
sar
dec
jg
daa
lret
and
cmp
push
rorb
push
xchg
ljmp
mov
jp
inc
icebp
out
jecxz
das
int
data16
pop
mulb
jnp
xchg
dec
push
mov
xchg
and
fcom
pop
push
add
int
aad
imul
int
outsb
pop
jge
ss
push
inc
in
fsubrs
add
push
mov
or
lds
push
push
mov
mov
lods
sub
pop
dec
pushf
rcr
xor
imul
jecxz
pop
mov
dec
pop
in
mov
movsl
cmp
icebp
pop
xchg
nop
into
dec
cltd
jne
setnp
push
adc
mov
pop
lods
jge
xor
gs
adc
call
jg
push
pop
mov
sbb
dec
fsubrp
stos
push
arpl
push
pop
inc
clc
pusha
lock
mov
mov
dec
loope
nop
sahf
cmc
add
pop
test
mov
adc
loopne
inc
ds
divb
xchg
insl
push
sub
daa
cmp
repz
push
loop
test
xor
repnz
fs
ljmp
dec
xchg
lahf
sarb
jmp
xor
fsubrs
test
inc
cmp
push
xchg
xor
dec
dec
iret
xorb
or
push
dec
ds
xchg
or
add
fcmove
lea
out
mov
and
and
fnstsw
jnp
negb
jmp
cmpsl
sar
adc
ret
mov
xchg
nop
mov
xor
adc
std
xchg
xchg
mov
cmpsl
icebp
push
cmpsl
inc
bound
mov
and
jne
xor
pop
mov
mov
xchg
in
in
scas
sbb
rcr
mov
sub
dec
dec
xor
repz
fwait
shl
dec
or
jmp
call
mov
insb
flds
pop
hlt
frstor
scas
js
sbb
or
iret
and
jbe
mov
push
or
arpl
frstor
mov
mov
js
in
pop
jbe
sbb
repz
pop
inc
in
ljmp
loope
test
mov
inc
cwtl
jg
cmp
rclb
push
je
xchg
imul
inc
add
lods
mov
cmp
xchg
fimuls
jge
inc
int3
movsl
je
cmpsb
mov
les
cmp
xor
fistl
dec
ja
mov
xorb
aas
out
repnz
sar
sub
mov
inc
mov
cltd
jl
out
sub
xlat
lcall
xor
mov
xor
push
iret
cmp
fisubl
sub
arpl
xor
cs
adc
cmp
add
out
iret
pop
cld
sahf
movsb
mov
dec
fwait
cmp
addr16
in
test
inc
pushaw
mov
clc
lar
mov
mov
in
inc
push
inc
aam
push
pop
mov
lods
ds
je
sahf
sbb
add
pop
cmpsl
leave
mov
mov
fldl
pop
pushf
sub
xchg
cs
xor
in
jmp
pop
shl
idivb
imul
sti
jmp
xchg
test
shrb
sbb
cs
adc
pop
repz
cmp
inc
cmpsl
xor
bound
pusha
inc
mov
adc
dec
fdivp
std
mov
cld
loopne
dec
es
into
dec
inc
inc
jge
mov
inc
lcall
lahf
jns
mov
push
or
jno
insl
add
lods
jo
sbb
or
add
arpl
ror
fidivrl
das
add
fistpll
dec
push
outsl
pop
cmpsl
test
xchg
xlat
notb
ss
jne
rcll
cmp
fsubs
addl
pushl
xlat
cs
sbb
mov
mov
mov
xlat
clc
daa
add
and
xchg
inc
sub
adc
sub
sahf
mov
mov
mov
std
cmp
shll
stos
xchg
shlb
shlb
jmp
cmp
push
xchg
sbb
cmpsb
dec
out
in
pop
or
dec
in
push
push
repnz
push
add
jnp
pop
aas
pmulhw
pop
ss
divb
fxch
jmp
mov
in
mov
andl
xor
in
xor
adc
mov
mov
or
or
js
in
in
and
into
pop
popfw
jge
imulb
loopne
stc
scas
adc
pop
sbb
sub
xlat
add
and
lahf
xor
fdivrs
bound
fcmovbe
sbb
pop
xchg
jbe
movsl
ss
js
inc
cmp
jl
adc
mov
xlat
inc
fisttpl
mov
cmp
lea
lcall
outsb
lods
loop
sahf
mov
mov
fwait
xor
and
movsb
aad
popl
shrb
cmp
ret
in
mov
scas
mov
xorb
pmaxsw
cltd
mov
push
mov
ret
loope
mov
sbb
out
in
add
cmp
out
add
shll
cwtl
bswap
adc
sub
leave
lds
pop
sub
adc
add
mov
mov
ret
xor
ja
sub
int
sbb
jo
push
repnz
sbb
mov
aas
dec
xor
ljmp
aaa
imul
xchg
stos
mov
fcoms
std
cld
sub
fsubl
inc
fdivrs
and
push
cmp
aad
inc
cmp
cmp
pop
cmp
call
sbb
inc
push
push
leave
ret
test
jmp
sahf
daa
jp
add
jg
fcompl
sbbl
lahf
xorb
call
mov
ret
jl
dec
mov
pop
out
mov
sub
mov
test
adc
dec
and
sbb
mov
iret
std
cmc
fldt
fildll
cltd
sbb
insl
repz
iret
xor
stos
iret
nop
idivl
ret
movsl
dec
fs
lods
dec
adc
cmp
leave
out
mov
gs
out
pop
cmp
aad
pop
xorl
adc
push
int3
cs
dec
adc
cmp
mov
lret
xchg
or
or
in
mov
jp
leave
mov
mov
add
aaa
lock
xchg
popf
fcompl
dec
adc
mov
call
jge
sbb
sub
call
das
sub
arpl
sub
fistl
jbe
add
nop
aaa
cmp
push
xlat
push
faddl
jns
in
stos
or
fmul
add
adc
fiaddl
dec
out
js
das
xchg
push
and
fisubs
lahf
and
test
sbb
push
cmp
lret
addb
and
lret
rorb
xor
or
sahf
xor
lret
jne
mov
jnp
jecxz
andb
mov
pop
lods
stos
or
or
jmp
inc
xchg
inc
mov
mov
js
mov
or
pusha
pop
dec
outsl
sub
rorl
and
mov
pusha
aas
mov
cmpsl
inc
mov
fildll
add
test
cmp
in
dec
cmpsb
inc
jbe
jno
adc
dec
adc
pop
sbbl
rcl
mov
in
or
cld
xorl
jle
inc
pop
push
out
and
cmp
js
mov
dec
and
mov
or
pushf
mov
je
pop
pop
xchg
mov
push
cmp
ret
mov
ja
mov
fldt
sub
test
arpl
push
add
fnstcw
push
and
pusha
pop
jne
pushf
inc
sbb
inc
pop
scas
jne
jge
xchg
or
arpl
and
dec
cmp
adc
xor
daa
fwait
adc
xor
push
cmpsl
jle
mov
divb
or
into
mov
jmp
mov
sbb
sub
pop
jmp
cli
rorb
sbb
inc
sub
or
adc
inc
lock
cmc
mov
adc
addb
pop
mov
int3
iret
mov
mov
push
push
sarb
imul
shl
lods
test
fs
sub
push
and
stc
mov
xchg
sub
sarb
dec
push
pop
jmp
in
sbb
or
push
inc
mov
fdivrl
stos
cmp
lods
mov
lds
jp
imul
cmp
mov
jno
lds
ret
and
mov
push
cwtl
enter
sar
fmuls
insb
std
adc
mov
insb
lock
scas
add
lcall
jg
cs
xchg
sahf
cmp
fidivrl
loope
mov
adc
or
jl
test
in
adc
inc
ror
and
mov
mov
jb
iret
out
xor
pop
in
inc
xor
xchg
rclb
ja
cmp
jmp
test
adc
loop
shll
push
mov
dec
and
push
jo
hlt
xchg
mov
inc
inc
jbe
sub
aas
sahf
xor
movsl
or
inc
inc
mov
mov
outsl
mov
and
loopne
out
dec
pop
add
mov
shll
cmp
or
cmpsb
push
faddl
test
lret
add
lods
fisubs
xor
pop
inc
dec
sub
xor
and
js
jnp
hlt
adc
xor
and
aam
sti
sarb
fs
out
data16
hlt
and
aam
and
or
repnz
sbb
clc
cli
icebp
inc
add
bswap
add
sub
mov
push
cs
faddl
icebp
out
lds
cmp
outsl
mov
imul
sub
xchg
pushf
call
mov
stos
mov
or
iret
sbb
push
mov
push
pop
fwait
mov
rcll
ds
out
xor
xchg
add
jge
fadd
xor
lahf
lahf
push
pop
out
bound
jne
cltd
ss
lret
insl
pop
xor
pop
pop
movsl
pop
xchg
rcrl
mov
loopne
sbbb
xchg
rolb
gs
push
mov
jnp
dec
jmp
push
mov
movsb
pop
push
sub
cltd
insb
or
insl
in
xchg
adc
aas
and
inc
sti
fldl
sub
fcoml
cmp
ret
xchg
test
lea
inc
repz
push
das
xor
adc
mov
imul
cmpsb
popa
push
mov
in
sbb
sub
jnp
fldl
mulb
mov
xor
sahf
mov
push
push
mov
adc
jb
mov
pop
pop
aad
mov
clc
ror
js
ss
pop
inc
and
andb
int
in
dec
popf
mov
in
dec
pop
pop
push
or
jo
add
sahf
adc
mov
push
popa
in
lds
dec
or
xchg
in
cmpsb
daa
frstor
jb
mov
add
daa
in
movsb
cli
hlt
xchg
push
dec
sub
mov
out
ret
iret
mov
rclb
inc
sub
daa
push
xor
and
adc
hlt
mov
and
mov
dec
rep
xchg
inc
pop
je
sbb
movsl
sub
lahf
pop
mov
lock
jle
adc
into
adc
fwait
in
xlat
jg
mov
dec
ja
in
int3
and
mov
data16
in
in
add
add
imul
inc
xlat
aam
dec
xchg
fprem
mov
cwtl
or
das
insb
inc
push
sub
mov
daa
push
sbb
imul
in
add
dec
cmp
sub
add
sahf
ja
ficomps
jl
adc
std
les
mov
mov
outsl
repz
and
lea
add
sbb
lret
mov
xorb
xor
pop
aad
dec
ror
mov
in
jge
mov
cld
cmp
pop
and
aad
test
cwtl
push
jmp
aas
sub
sub
dec
imul
pop
jecxz
ss
daa
out
subb
and
pop
repnz
cmpl
icebp
in
sub
xor
sbb
lret
fisttps
int3
sbb
mov
mov
negb
xor
or
xchg
xchg
sbb
movsl
add
out
mov
cld
xlat
mov
pop
test
jle
inc
cmpsl
and
out
cmp
dec
and
rcr
shll
add
and
sbb
std
cltd
ret
add
push
cmpb
inc
cmp
ds
add
clc
stc
popf
dec
jae
mov
loopne
rcl
icebp
daa
lret
or
xchg
xchg
sub
jl
jl
xchg
jnp
mov
sub
fsubrs
dec
mov
mov
push
andb
mov
movsl
ds
lcall
mov
adc
les
xchg
mov
in
xchg
inc
int3
dec
les
cltd
inc
js
aad
es
sbb
xlat
mov
sub
jp
lds
cmpsl
cmp
imul
sub
ret
add
xchg
daa
mov
cli
sub
pop
inc
pop
insb
or
stos
cmp
repnz
movsl
jl
rcll
xor
adc
jmp
jg
shlb
jmp
divl
mov
repz
jl
lahf
mov
jbe
inc
xor
rcrl
jb
add
cmc
lret
sbb
jo
mov
jg
mov
or
inc
stos
popa
into
push
cmp
and
xchg
mov
test
enter
loop
pop
js
fcoms
push
roll
enter
test
sbb
test
int
xchg
daa
mov
dec
pushf
sbb
cmp
lock
repnz
roll
data16
test
adc
pop
test
mov
xchg
inc
sub
cmp
movsl
jg
fiaddl
jp
jo
aam
cmp
xchg
xchg
fadd
push
jns
jno
pusha
inc
mov
scas
adc
aam
jp
cmpsb
inc
xchg
sub
push
repnz
inc
pop
shr
fdivr
xchg
jmp
or
xor
push
xchg
dec
adc
inc
int3
jp
lret
sti
lret
stos
dec
cmp
mov
push
mov
je
adc
movsb
pop
and
mov
lcall
pop
adc
scas
loopne
mov
popa
outsl
or
test
adc
in
adc
imul
xor
out
stos
loop
mov
outsb
popa
or
rol
xor
movsb
xchg
pop
mov
and
stos
fs
mov
jo
xor
push
movsb
mov
xchg
cwtl
lods
sbb
and
mov
arpl
jns
cmpsb
lcall
mulb
and
push
jnp
mov
clc
xor
mov
and
cs
sar
jg
adc
jp
and
into
adc
sarl
jne
imul
in
inc
lock
jecxz
cmp
movsl
out
mov
addb
andl
mov
enter
frstor
aaa
mov
jb
ss
pop
iret
clc
sbb
pop
mov
sub
outsb
imul
add
dec
inc
jbe
jmp
pop
xchg
jne
inc
dec
adc
dec
adc
sub
xchg
dec
rcrl
sbb
aad
icebp
scas
cld
or
mov
pusha
and
or
fisubs
xchg
xor
mov
push
lea
pop
xor
fistps
fcos
movsl
dec
andb
mov
das
out
sub
sahf
out
add
adc
lret
push
hlt
pop
mov
les
mov
hlt
pop
aaa
cmpl
cmp
adc
or
mov
mov
popf
in
mov
cmpsb
lea
or
das
pop
sbb
sarb
adc
rcrb
das
std
testb
mov
xor
jl
or
in
fdivs
jo
sbb
mov
xor
mov
mov
out
adc
int
mov
in
sbb
cmp
mov
and
js
and
adc
fwait
mov
jb
test
fnstcw
push
inc
xlat
bound
cld
daa
sbb
dec
jp
sti
and
mov
outsb
cmp
pop
outsb
bswap
repnz
loope
mov
dec
mov
or
mov
lods
xchg
test
dec
in
cmp
cmp
cmc
pop
into
out
xchg
pop
enter
adc
cmp
inc
call
fnsave
movsb
xorl
cld
mov
pusha
pusha
jg
push
jb
outsl
shrb
pop
fwait
shll
inc
adc
or
or
in
gs
add
or
mulb
and
sub
or
cltd
pop
fists
insb
mov
std
fiaddl
push
xor
mov
mov
ds
jmp
dec
orl
addb
cli
inc
xlat
jns
in
dec
push
or
std
jge
ljmp
aaa
aaa
in
add
outsb
adcb
adcl
lcall
cmp
cmp
push
inc
push
mov
push
in
mov
lods
add
enter
sbb
pusha
push
sti
cmc
dec
mov
push
insb
leave
punpckhwd
out
jmp
in
fsubr
stos
mov
pop
add
mov
add
test
push
insl
clc
or
lods
pop
out
and
sbb
or
jg
movsl
repnz
adc
ja
mov
sbb
push
dec
push
inc
jge
cmc
push
adc
jg
loope
and
loopne
aaa
mov
jmp
lock
fstpl
or
leave
and
shlb
clc
in
fisttps
or
je
imul
and
hlt
cwtl
jno
add
pop
fdivp
add
add
js
adc
scas
fistps
inc
cmc
pop
iret
outsb
out
ret
pusha
dec
dec
in
xchg
jp
cmp
js
push
dec
mov
push
es
sub
push
cltd
mov
inc
bound
je
out
dec
out
lret
rdpmc
jmp
sbb
out
aas
adc
and
dec
pop
sbb
push
inc
rcrl
lea
jne
call
cmp
int3
cli
cmpsl
inc
imul
xorb
test
fadd
into
sbb
aaa
pop
data16
cmp
std
jno
test
xor
dec
lcall
push
addl
xchg
pushf
mov
xor
ss
mov
lods
xor
in
flds
call
xchg
mov
and
test
pop
sahf
pop
xchg
xchg
jp
mov
fcomp
sub
aad
arpl
push
xchg
jecxz
dec
or
xor
lret
lret
cmp
das
sbb
mov
in
aas
inc
jno
inc
into
out
sbb
jne
push
mov
mov
mov
out
lea
fsubr
stos
sub
jnp
bound
push
mov
inc
lcall
jg
add
mov
adc
idivl
test
cwtl
sub
test
mov
scas
scas
add
shll
and
jle
add
push
jmp
aad
repnz
ret
fimull
stos
dec
test
sbb
bnd
lds
fmull
push
push
dec
inc
stc
imul
xorb
jmp
add
ljmp
and
ja
rolb
jge
pusha
pushf
daa
mul
ror
popa
sbb
jle
mov
fwait
xchg
cmpsl
xchg
and
cmp
pop
jecxz
xchg
subl
sub
iret
or
lock
cltd
popf
loopne
jecxz
mov
inc
mov
mov
jmp
sti
loope
insl
shlb
jae
add
jl
jb
out
fdivrs
dec
movsb
adc
cmp
aam
xchg
int3
outsl
or
mov
ss
addps
sub
lcall
xchg
add
sarb
xchg
jg
in
outsl
rclb
outsl
or
nop
jg
mov
ds
sub
mov
xor
push
in
hlt
mov
pop
sub
roll
test
cmc
mov
add
cld
sbb
int
jo
mov
rcll
int
cld
test
lods
sub
dec
lods
jmp
xchg
mov
call
adc
jne
jmp
pop
push
out
clc
adc
jbe
xchg
jge
insl
lret
mov
or
lock
jecxz
lcall
sub
jae
sbb
pusha
arpl
aam
xlat
enter
shrb
data16
adc
icebp
pop
mov
add
inc
scas
xchg
mov
loop
pushf
jne
fmul
loop
jnp
das
and
add
or
stos
popa
rol
cmp
fisttpll
ret
out
in
add
pop
aaa
add
xchg
inc
outsl
adc
mov
adc
insb
in
pop
test
sub
movsl
mov
mul
xchg
insl
out
out
fmull
mov
or
mov
mov
adc
and
mov
out
lret
test
insb
scas
or
adc
xchg
fwait
dec
push
es
or
movsb
fwait
push
add
sub
cmc
int3
add
sbb
add
lea
clc
repnz
jns
lcall
fs
or
repz
imul
jg
ss
inc
repz
scas
pop
daa
bound
lock
enter
sarb
xor
out
lods
push
ljmp
imul
lods
cld
stc
cwtl
popa
xchg
jae
sub
out
xor
sarl
data16
enter
add
mov
int
xchg
push
mov
dec
sbb
int3
movsl
or
cmp
and
sbb
das
add
lret
cmp
adcl
lcall
or
add
add
in
push
mov
pop
fwait
loopne
das
push
pop
stos
mov
mov
add
jle
mov
mov
icebp
jae
adc
xchg
push
or
inc
daa
pop
mov
shrl
cltd
mov
dec
les
dec
pop
adc
sbb
jmp
out
adc
jp
cmp
das
insb
inc
adc
bound
jb
mov
out
push
aad
ret
dec
mov
leave
or
sub
fildll
jmp
stos
out
pop
and
scas
fildll
adc
xor
add
pop
pop
jno
fiadds
dec
dec
aam
sbb
sub
imul
imul
repnz
dec
inc
fdivrs
cmp
sbb
aad
jecxz
psubb
pop
in
mov
imul
fistpll
repnz
fcoml
push
push
inc
stos
filds
xchg
dec
pop
xchg
xchg
sub
lods
enter
cmpsb
cmc
mov
faddl
enter
xorl
dec
lret
mov
call
pop
enter
sub
lods
pop
int
cmp
pop
mov
int
xor
in
sub
stos
arpl
cmp
loopne
adc
adc
clc
inc
inc
enter
dec
cld
lods
in
in
push
add
out
pushf
stos
rol
loope
or
or
inc
fists
push
jo
fstpl
dec
push
cs
inc
lods
xor
stos
pop
mov
testb
xchg
call
jmp
sarl
fsub
out
fadds
pop
lock
loop
ja
insb
mov
nop
add
pushf
mov
in
enter
jb
pushf
lds
inc
xchg
ja
and
jle
add
pusha
cmp
jge
jns
inc
or
outsl
cs
adc
fcomi
packssdw
scas
cmp
xchg
loope
ds
sbb
dec
jb
aas
lret
xchg
ljmp
shl
gs
fwait
ja
cmpsb
sbb
pop
and
sub
sub
repz
and
ds
andb
dec
ds
push
mov
shll
and
cmp
cli
lods
cmpb
cmp
les
fnsave
sbb
test
pusha
mov
xlat
test
jb
add
cmpsb
arpl
sbbl
push
jmp
loope
in
inc
xlat
cmpsl
sbb
jmp
sbb
xchg
mov
and
cmp
sub
jecxz
out
sub
clc
inc
pop
out
mov
push
jns
insl
inc
sbb
pop
repnz
cwtl
sahf
addl
adc
cmp
jne
and
aam
movsb
and
cmpsl
mov
sub
dec
ret
and
cmp
mov
dec
pop
ret
jno
mov
scas
les
int3
xor
lock
dec
inc
fcoms
jb
pusha
or
mov
daa
stos
leave
mov
es
mov
pushf
xchg
out
movsb
test
test
xor
xchg
mov
je
in
mov
popa
adc
movsl
pop
std
fsubs
and
iret
adc
sub
test
xor
mov
in
pop
orl
push
call
fdiv
inc
cmpsl
test
das
fcoms
movsl
js
dec
mov
add
mov
mov
cld
fdivr
cld
sbb
adc
loopne
call
and
jge
jno
cld
sub
jbe
gs
push
int3
subb
mov
sub
xor
pop
data16
jmp
dec
inc
add
mov
jl
jo
jl
cmp
adc
orl
adcl
arpl
lret
mov
dec
loop
inc
leave
repnz
push
inc
jecxz
pop
pop
or
test
fldt
daa
leave
xchg
lods
lock
push
push
push
mov
cwtl
test
mov
inc
or
mov
icebp
pushf
jns
mov
sbb
loop
in
pmaxub
mov
cmp
push
cmp
pop
imul
stc
ds
inc
popf
lret
fsubrl
pop
push
xor
sarl
mov
call
sbb
pop
mov
sbb
mov
add
fcmovne
adc
fidivl
pushf
pop
adc
xlat
cld
setle
dec
daa
adc
jbe
jmp
push
dec
mov
popf
xor
mov
mov
xor
lock
xchg
cmp
into
hlt
pushf
data16
hlt
js
mov
mov
pop
out
jge
ret
dec
and
shll
mov
out
arpl
pop
mov
into
cmpsl
cmp
pop
xchg
pop
push
and
call
in
sub
xchg
xorl
lds
sub
xlat
out
jae
cmc
sub
jbe
xor
hlt
ds
mov
pop
jmp
xchg
ficoml
push
dec
int3
adc
mulb
push
scas
lods
pop
cmp
scas
jg
sub
fidivrs
dec
aas
xor
pop
xchg
jae
fisttpll
ljmp
outsb
mov
xchg
popa
xchg
cmp
test
mov
in
or
mov
adc
push
cli
cmpsw
push
call
arpl
push
jp
cmp
cli
jbe
cwtl
mov
addr16
cmp
mov
stos
insl
xchg
dec
pop
inc
cmpl
add
and
outsl
ljmp
es
or
jp
cmp
push
std
and
and
daa
call
lret
cwtl
icebp
push
cld
jno
dec
and
cwtl
or
pop
or
xchg
addr16
or
lahf
inc
scas
adc
out
repz
jmp
add
cmp
sbb
mov
loopne
sbbb
xor
mov
mov
cltd
stos
sub
pop
push
je
sub
pusha
jmp
mov
negb
lea
negb
stos
add
out
movsl
or
push
leave
pop
sti
dec
sub
cmp
outsl
inc
push
leave
lret
enter
push
push
add
and
jp
cli
shrl
and
cmpsb
pop
insb
and
fwait
idivl
push
daa
push
in
mov
ds
sbb
cmc
add
lahf
sub
jo
loopne
jno
pop
mov
rep
mov
jno
push
cmp
push
inc
jns
sbb
jg
ss
cmp
push
aad
pop
jmp
loope
insl
outsl
mov
pop
loop
insl
cmc
movsl
mov
cwtl
nop
outsb
push
mov
addr16
cmp
and
or
xchg
jbe
sub
es
xchg
mov
clc
mov
loop
movsb
pop
icebp
mov
mov
aam
fs
lcall
xchg
pop
adc
mov
lea
aas
nop
int
imul
test
xchg
cmpsb
cmp
xor
imul
xchg
fwait
sarb
pop
dec
sbb
jl
xor
lods
in
jmp
mov
dec
pop
out
inc
imul
xchg
icebp
mov
push
add
movb
jg
cmpsl
ss
sub
pusha
add
jge
cmc
mov
repnz
xlat
dec
test
xlat
sub
add
call
push
and
mov
add
dec
lods
ss
push
mov
jmp
push
in
lahf
adcb
adc
andb
xor
jno
mov
adc
fdivrs
xchg
mov
dec
mov
sbb
dec
cmp
adc
scas
mov
sub
mov
outsb
sbb
jle
in
lock
inc
cmpsl
movsl
ss
fwait
cltd
enter
fsubrl
insb
neg
inc
repnz
adc
iret
fstpl
out
or
fdivrs
jmp
outsl
cmp
adc
cmp
popa
loope
jno
outsb
mov
test
cld
jno
push
mov
push
inc
idivl
push
in
or
xor
mov
cltd
in
adc
add
enter
mov
aaa
sub
lahf
int3
test
xor
mov
xchg
mov
inc
out
sbb
push
mov
fs
pop
cmp
sub
adc
aas
test
inc
test
xchg
aad
fsubrs
sahf
dec
inc
mov
enter
cltd
test
sarb
and
test
cmp
sbb
pop
pop
insl
xor
mov
adc
in
arpl
mov
sbb
mov
stc
jmp
jae
add
jmp
dec
mov
int
adc
adc
negb
shlb
jp
mov
cmpl
js
repz
dec
inc
or
insl
int
sub
cmp
mov
sub
lods
stos
push
ret
and
push
xchg
xchg
and
lock
in
cltd
or
and
pop
inc
and
sub
sbb
adc
scas
mov
add
dec
lods
xor
sti
push
nop
and
stos
dec
lock
push
or
mov
sub
aas
notl
cmp
addr16
adc
movsl
clc
ds
sub
pushf
test
sbb
mov
stos
lret
nop
and
adc
je
pop
mov
aaa
sub
mov
fwait
sbb
fcoms
ss
jmp
ds
jbe,pn
pop
jg
jle
enter
add
cmp
xor
mov
into
out
inc
xor
jmp
mov
ret
iret
inc
es
or
test
inc
xor
sti
pop
add
aas
push
jg
dec
push
mov
add
push
adc
fwait
push
sub
pop
cmp
das
mov
jecxz
aam
out
mov
pop
sbb
aaa
jge
pop
mov
mov
mov
call
test
call
pusha
imul
push
cmc
outsb
inc
push
jecxz
lock
test
rol
add
fwait
out
sub
cmp
add
cmp
mov
jge
mov
ja
shll
or
xchg
and
mov
dec
enter
xchg
mov
out
mov
sti
pop
ret
aad
and
mov
js
int
add
push
add
sub
dec
test
push
test
mov
int3
in
ljmp
cltd
mov
add
pushf
jg
movl
in
inc
ret
sti
dec
scas
repnz
ret
pushf
adc
mov
push
popf
sahf
cmp
rorl
in
cld
add
mov
std
and
push
or
andl
pusha
sti
ja
fildl
inc
pusha
xchg
jae
pop
jmp
xor
xchg
aad
enter
inc
push
fmull
leave
adc
push
xchg
pop
es
rcrl
ret
push
push
lock
xor
or
repnz
call
inc
adc
push
adc
add
jp
fidivrl
pusha
adc
das
jnp
xchg
ja
push
pop
rcrl
sub
or
mov
add
mov
mov
imul
test
add
and
sub
xchg
jo
push
jo
rcrl
imul
mov
int3
mov
popa
inc
daa
movsb
xor
xchg
push
sub
cmp
enter
imul
pop
or
insb
dec
and
test
jecxz
push
xor
mov
jno
lea
dec
xor
jo
addl
inc
adc
xor
or
aas
das
loope
jmp
insl
or
scas
mov
subl
pop
mov
outsl
dec
jmp
adc
jge
scas
pushw
lea
xor
and
dec
dec
aad
add
cli
pcmpeqb
ret
jp
inc
cmp
adc
xchg
scas
mov
scas
mov
pop
daa
sub
sub
arpl
enter
test
jecxz
je
fnsave
sbb
inc
pop
je
faddl
dec
into
xor
sub
mov
cld
and
in
loope
dec
out
repnz
sub
mov
int3
repz
aas
adc
jae
cwtl
xorb
inc
mov
fcoms
pop
std
sub
dec
push
lahf
push
sbb
loopne
cltd
pusha
cmpl
mov
mov
jne
lds
repz
dec
in
xchg
sti
daa
add
jbe
push
ret
lcall
clc
jbe
push
mov
cmp
or
aaa
sbb
and
cmp
pop
mov
push
pusha
mov
sub
mov
add
cmp
inc
sbb
add
stc
aad
data16
push
mov
lahf
pop
push
lret
scas
push
cmp
ss
imul
loop
inc
adc
inc
fnstcw
decl
pop
shlb
notl
clc
lret
sahf
aas
in
aas
cltd
popf
xchg
adc
inc
out
jns,pt
push
push
aad
loope
and
sbb
pop
sti
loope
mov
addb
mov
mov
scas
popa
push
mov
stos
add
and
insb
testl
ret
or
in
fsubrs
fisttps
mov
cmpsb
push
mov
add
xor
lods
jns
fisubl
ror
notl
imul
fdivr
push
pushf
xor
addr16
pop
mov
jmp
cli
sahf
fimull
push
js
inc
xor
in
sbb
add
out
pop
dec
shrl
into
mov
dec
jl
sbb
fisubrl
shrl
adc
pop
enter
and
sbb
cmp
xor
sarb
imul
mov
jp
les
jo
repz
or
mov
lret
cwtl
imul
add
and
dec
rolb
inc
and
dec
pusha
imul
mov
rcr
das
popa
dec
loope
in
xor
pop
adc
mov
stc
jmp
dec
shlb
cmp
xlat
out
iret
aad
fwait
cs
sbb
sub
mov
loopne
xchg
lods
mov
pop
mov
jg
xor
mov
jo
xchg
outsb
and
jb
sbb
and
xchg
nop
push
and
and
adc
sub
jmp
lods
cld
in
push
cmp
movsl
aaa
fstpl
aam
cld
sub
mov
push
xor
sbb
cmpsb
enter
pop
mov
imul
xor
lods
jno
lds
jnp
imul
int
xchg
sahf
ss
dec
shrl
adc
dec
ja
jns
mov
inc
movsl
repnz
js
cli
mov
jge
inc
mov
repnz
inc
cwtl
jnp
clc
jne
mov
stc
inc
pusha
out
lock
in
jg
loop
lods
loopne
inc
es
repz
mov
sarl
push
fcomps
shll
push
lea
cwtl
fbstp
mov
adc
cmpsb
out
out
xchg
orb
test
rcr
mov
push
movsb
add
xchg
stos
adc
hlt
hlt
test
sbb
mov
and
pop
xchg
lahf
aad
xchg
sub
fs
push
pop
cld
nop
pop
add
cmp
sbb
dec
aaa
jb
sub
fsubs
sub
pop
xchg
mov
sbb
addr16
loope
inc
int3
cltd
xorl
pop
and
or
sbb
iret
mov
mov
dec
xchg
mov
out
movsl
aad
push
jp
jnp
xor
fcmovb
std
int3
pop
pop
add
lret
fimuls
fisubrs
dec
mov
xor
xchg
push
inc
iret
sub
jmp
in
pcmpgtd
in
aas
cmp
sbb
or
push
pop
xchg
into
xor
stos
pop
ds
push
xorb
push
popf
push
adc
mov
aas
outsl
pop
repz
and
adc
xor
pushf
or
mov
dec
sub
aam
mov
mov
sahf
sub
jns
mul
and
xor
push
sbb
inc
mov
xchg
mov
cmp
and
leave
inc
jp
stos
aam
inc
sbb
pop
enter
clc
movsl
test
nop
sbb
aam
push
adc
pop
mov
jg
pop
jle
sahf
adc
ficoml
dec
scas
insl
popa
xchg
mov
mov
push
mov
pop
fsub
int
mov
ret
adc
lea
or
jl
push
insl
andnps
push
rcll
cmp
call
cli
mov
push
je
call
movsb
sbb
sub
lock
jmp
mov
rcrl
cs
add
xor
out
mov
inc
and
mov
add
jb
fstl
xor
adc
sbb
rcl
out
les
loopne
jle
cmp
jb
sub
out
jb
push
ds
add
lods
xchg
je
int3
mov
mov
aam
push
ljmp
enter
push
sbb
add
pusha
sbb
pop
xchg
mov
in
mov
jb
xorb
inc
mov
shrl
in
cmc
mov
jg
jge
cs
jecxz
sbb
dec
xchg
cmpl
fldenv
les
out
xor
and
sbb
out
lds
adc
mov
xor
packssdw
fwait
mov
ficompl
mov
dec
sbb
clc
dec
outsb
push
ret
pop
mov
je
rorb
jge
into
inc
neg
lock
rcrb
in
cmp
xchg
inc
nopl
dec
dec
cmc
adc
addr16
sbb
xor
pop
dec
push
das
out
mull
pusha
push
pop
dec
lds
and
and
mov
inc
jle
ret
inc
fsub
dec
lahf
cmp
cs
push
pop
pop
xchg
inc
hlt
adc
or
int3
jb
subb
xor
icebp
mov
insb
or
pop
jbe
fcoms
mov
in
and
or
popf
outsl
adc
mov
adc
ljmp
scas
inc
scas
xor
imull
mov
mov
jl
jae
jne
jle
rcl
sti
and
stc
dec
shl
xchg
pop
dec
nop
rcrl
and
and
xlat
mov
sub
adc
xchg
out
scas
push
mov
cmpl
daa
add
test
add
ja
fmul
out
insl
icebp
out
inc
call
jns
push
out
and
add
pop
xor
das
leave
sti
dec
mov
lds
dec
rorb
std
outsl
and
pusha
lea
push
xor
pushf
or
pop
ss
test
push
cli
jmp
mov
rorl
sti
mov
sbb
popa
pop
fldl
in
repz
push
stos
pop
daa
cltd
cmp
jl
loope
lods
dec
out
rcll
sti
cmp
sub
test
stos
xchg
mov
mov
and
adc
adc
scas
imul
adcl
mov
mov
and
ret
push
push
push
lcall
rorb
or
mov
cmpsb
fildl
loope
jno
inc
pop
add
sbb
iret
sbb
andb
sub
dec
cs
xchg
arpl
aad
push
std
inc
sbb
pushf
lds
cmp
divb
push
add
inc
or
imulb
dec
popa
scas
mov
movsl
sub
pop
icebp
outsl
cmp
scas
sbb
mov
shrb
lods
test
call
xor
insl
jno
insl
inc
shrb
pop
hlt
loopne
icebp
insb
xchg
jle
push
xchg
or
cltd
jbe
sub
and
popa
mov
or
fidivs
int3
jns
aam
pop
dec
loop
jo
out
jb
mov
hlt
jb
mov
call
inc
std
push
adc
out
popa
aam
sbb
out
add
aam
push
jmp
mov
gs
lds
push
int
outsb
inc
scas
cmp
push
add
or
mov
mov
cmp
notl
ljmp
pop
adc
ljmp
je
mov
xchg
mov
fmul
pop
adc
mov
mov
cmp
jb
not
pop
mov
imul
out
mov
cmp
loopne
mov
pop
add
inc
add
adc
imul
cli
addr16
mov
cltd
add
sbbl
mov
cmp
inc
xchg
mov
pop
push
mov
inc
iret
pop
stos
and
xor
xchg
loope
mov
ret
pop
mov
mov
rol
bound
jns
stos
insl
and
bound
bound
call
mov
testl
repnz
adcb
dec
lock
mov
dec
or
push
test
adcb
in
lock
xchg
xchg
out
neg
adc
in
rclb
sbb
ss
xor
cmpsl
cmp
mov
sti
push
dec
dec
dec
mov
fwait
jnp
xchg
push
arpl
das
mov
addr16
ljmp
fsub
push
stos
fstpl
jbe
pop
jp
mov
push
xor
addl
mov
xorb
dec
fdivr
mov
insl
and
cmp
movl
adc
inc
push
lahf
push
mov
cltd
out
das
jae
rcrb
push
out
pop
xor
add
sub
push
data16
sub
pop
xor
xchg
jle
adc
cmp
or
sbb
cmp
mov
jge
test
pop
push
scas
clc
adc
std
lret
fdiv
pop
outsl
xor
cs
mov
rorb
or
push
outsl
jmp
adc
push
lock
loop
adc
stos
sarb
jnp
dec
jge
cld
dec
add
cmp
je
ret
shll
xchg
or
push
or
jle
hlt
sti
jp
xchg
pop
pushf
inc
decl
mov
sbb
push
das
push
negb
into
sti
mov
jne
jle
add
xchg
hlt
sub
pop
xchg
sbb
sti
ret
mov
and
jb
ss
faddp
push
nop
jnp
mov
out
adc
xor
stc
dec
int3
xor
repz
cmc
add
fcomps
inc
pushf
nop
lock
sbbl
pop
clc
sub
cltd
or
and
sbb
mov
jmp
inc
or
mov
jae
repz
mov
and
pop
mov
jmp
cs
mov
xchg
fprem1
insb
loop
sub
mov
mov
jmp
push
mov
xlat
scas
ret
clc
pop
jmp
mov
sub
or
lock
out
shlb
jno
sub
sbb
pop
das
loopne
aaa
movsb
or
push
pop
movsl
repz
out
imul
xchg
sbb
mov
dec
mov
pop
data16
cwtl
cmc
mov
arpl
add
pop
push
jmp
push
mov
mov
jecxz
stc
xchg
adc
mov
roll
cmp
pop
out
lock
jmp
mov
into
clc
inc
testb
dec
iret
adc
mov
sbb
sub
push
pop
jne
add
jae
es
mov
dec
aaa
enter
pop
add
and
fists
add
imul
nop
pop
mov
pop
mov
sbb
pop
jae
sbb
ss
aas
filds
xchg
dec
rorl
or
scas
lods
mov
fwait
es
cmp
inc
jb
inc
xor
mov
jge
xchg
or
lds
mov
adc
inc
fsub
xchg
inc
subl
clc
mov
jp
subl
sub
push
pop
nop
ret
jecxz
xor
gs
lock
xchg
stos
xor
pop
jle
push
xchg
jnp
les
xor
xor
dec
or
sbb
dec
push
inc
popa
clc
pop
pop
fldl
mov
je
loope
jl
jno
sbb
jecxz
pop
mov
inc
outsl
loope
aam
dec
and
pop
mov
inc
dec
jne
jge
jmp
add
es
cld
jnp
int
add
stos
mov
data16
adc
in
cld
or
cmp
push
sub
ret
outsl
pop
popa
cmp
fimuls
jo
push
std
rorl
jle
stos
data16
movsl
inc
pop
js
push
and
push
inc
mov
lock
fcom
imul
push
aas
loope
jmp
sub
cmpsb
sti
pushf
into
pop
adc
faddl
add
adc
andl
jmp
addr16
mov
test
and
jmp
mov
dec
loope
fadds
sahf
push
rolb
cli
mov
xchg
add
jmp
aam
adc
lock
test
ds
je
cmc
pop
xor
cs
test
lods
insl
popf
dec
test
adc
mov
repz
and
enter
lahf
or
rcl
mov
jmp
xchg
fldcw
shlb
repnz
jne
test
jl
dec
lahf
cmp
cmpsl
iret
pop
xchg
inc
push
jg
movsb
fsub
push
repnz
and
rol
mov
add
arpl
mov
adc
ret
test
addr16
mov
jge
mov
sbb
xor
rol
je
cs
xchg
sub
push
jecxz
and
fistps
pop
sbbb
xchg
adc
pop
loop
xchg
mov
loop
dec
sub
daa
lret
mov
es
cs
daa
sub
fwait
sub
jmp
dec
jl
mov
lds
icebp
stos
xchg
mov
mov
test
xor
in
icebp
add
fnsave
jno
pusha
adcb
cmpsb
pushf
rorl
popf
call
icebp
xchg
leave
div
aam
ret
adc
in
jmp
jge
out
mov
imul
dec
sbb
orb
call
loop
dec
out
out
in
jle
cmp
stos
pop
sub
mov
cltd
ljmp
daa
imul
scas
ss
fsubp
push
jge
orl
xchg
mov
dec
mov
add
mov
inc
lds
jb
pop
or
dec
sub
cmp
repnz
jmp
sti
scas
jno
jne
jl
and
std
mov
cmpsb
adc
add
xor
hlt
jb
shlb
pusha
jb
hlt
pop
mov
cltd
cmp
lahf
push
ss
mov
movsb
sahf
pushl
fisubs
add
cli
pop
mov
in
add
and
pop
lret
sarb
mov
lds
outsb
xchg
loope
lea
aas
or
icebp
jecxz
dec
mov
sub
cltd
clc
js
dec
leave
cltd
add
sbb
mov
xchg
fdivr
ret
jg
adc
or
fisubrs
lahf
or
add
sub
cmp
cmpb
and
in
and
cmpsb
adc
push
sbb
sub
pop
mov
aaa
loope
and
push
add
mov
movsb
push
aam
sar
push
je
or
movsl
jno
sub
mov
sbb
cld
cmpsb
mov
mov
outsl
cmpsl
out
or
xor
jp
insl
pop
sbb
and
jb
repz
in
dec
or
ficomps
loopne
gs
push
add
pop
test
std
inc
dec
nop
popf
inc
cmpsl
out
mov
stos
lds
or
jo
and
in
leave
adc
xor
push
aam
and
xor
or
out
outsl
dec
les
add
aas
and
xor
clc
push
out
fadds
dec
out
push
mov
fidivrs
ffree
and
or
ds
push
rcll
fisubrl
xchg
insl
dec
dec
sbb
inc
pushf
push
pop
fsts
in
lds
pushl
dec
test
lahf
cmp
mov
sbb
add
repnz
ss
in
shll
pop
mov
pop
cmpl
pop
shlb
es
mov
xchg
divl
jp
push
push
roll
test
stos
cmp
push
push
dec
ja
and
insl
add
rcr
pop
call
adc
clc
xlat
mov
dec
hlt
rorb
jge
mov
and
and
cmp
mov
and
xchg
xchg
or
sub
pop
cmp
xchg
pushf
and
or
mov
test
leave
je
jno
in
mov
adc
jmp
lds
inc
mov
hlt
es
inc
divb
jecxz
dec
mov
adc
dec
and
pushf
and
add
lea
mov
rclb
or
pop
xchg
push
movsl
outsb
add
sti
push
out
push
leave
xlat
jne
lret
cmc
xor
xchg
pop
adc
jne
mov
dec
lret
popa
jle
add
cs
mov
or
dec
push
dec
clc
and
data16
outsb
out
mov
pop
sub
fbstp
and
popa
data16
icebp
jp
and
mov
dec
xchg
xor
mov
decb
adc
and
inc
subl
and
jne
and
arpl
inc
push
xor
cmp
mov
push
push
push
cltd
adcb
push
or
imul
pop
lcall
xor
hlt
fsub
es
pop
jl
sbb
xor
int
jmp
aam
xchg
int
pop
aam
inc
stc
fwait
dec
mov
add
fldenv
mov
or
jo
jns
mov
fidivrs
arpl
mov
rorl
loop
dec
pusha
inc
ss
inc
mov
cmp
punpckldq
fnstcw
or
rcr
scas
jmp
jae
fmull
adc
scas
jo
cmpb
inc
int3
fmull
pop
out
out
add
xchg
outsl
sub
pop
iret
pop
fs
lret
dec
jne
sahf
aam
pushf
push
mov
push
sbb
mov
out
sti
or
mov
into
add
cmpsb
xchg
adc
insb
addr16
inc
mov
mov
lret
jbe
push
and
jne
xor
out
push
cmp
call
mov
stc
in
jae
inc
mov
les
inc
dec
shrl
imul
jecxz
jg
dec
sbb
std
lds
test
or
dec
mov
pop
mov
lret
pusha
mov
xchg
lock
insl
in
cmpsb
adc
ljmp
jnp
andb
lret
daa
in
mov
clc
jno
xchg
out
idivl
cmp
mov
jne
cmpsl
push
push
mov
and
push
and
push
xchg
sbb
and
nop
aad
aas
loop
mov
call
jmp
dec
stos
pop
sub
pop
iret
add
mov
das
adc
pop
lods
test
jle
or
pop
mov
xchg
leave
lret
jns
pcmpeqd
pop
sbb
lods
movsl
inc
mov
push
pop
pop
notl
mov
sbb
sbb
scas
loop
stos
icebp
rsqrtps
lea
push
or
add
rorl
xchg
mov
fdivl
ds
iret
fists
jecxz
add
arpl
mov
dec
fcoms
les
dec
ret
mov
aas
jg
sbb
ljmp
push
push
repz
insl
int
xchg
mov
jp
nop
out
aam
dec
dec
sub
repz
stc
in
add
dec
jae
push
push
outsb
sbb
sbb
mov
and
fucomip
andb
rorl
mov
dec
sbb
or
shl
insb
scas
sub
push
push
jmp
rcll
out
daa
add
pop
push
lahf
rcl
cmpl
mov
sub
out
ret
cmp
outsl
mov
outsb
add
mov
inc
xchg
addl
xchg
mov
iret
lret
ljmp
cli
or
pop
aam
pop
bound
adc
icebp
cld
das
enter
lcall
sbb
xor
add
and
push
pushf
jne
jnp
mov
clc
sbb
shrl
dec
loopne
sub
push
and
movsb
xchg
jge
jecxz
out
xchg
sbbl
sbb
add
cmp
dec
cmp
test
popf
cmc
bnd
insl
ljmp
nop
mov
cmp
stos
ja
mov
call
in
fcmovnbe
leave
xor
jg
mov
stos
notl
jmp
xchg
mov
mov
decb
dec
or
mov
ja
and
lds
fs
dec
mov
aas
sbb
xor
daa
jno
dec
cmp
mov
int
adc
fisubrs
mul
xlat
repz
cwtl
adc
clc
jae
xchg
mov
mov
mov
ret
add
xor
mov
inc
iret
sbb
mov
sub
mov
xchg
les
adc
push
mov
xchg
loop
in
pop
mov
jmp
stc
es
aaa
xchg
ljmp
test
sub
ret
mov
jae
rolb
mov
sarl
lret
dec
xor
hlt
sub
cmp
shr
mov
scas
sub
pop
in
repnz
roll
loop
mov
lds
push
sub
ret
adc
pop
fdivs
mov
pcmpgtd
cmp
dec
gs
jo
imul
cwtl
das
test
test
insl
or
mov
jbe
enter
call
push
push
shll
test
stc
pop
jge
testl
pop
push
movsl
push
jmp
in
test
jmp
into
test
mov
lock
push
mov
push
cmp
adc
es
movsb
and
out
sub
inc
or
sub
add
std
xor
pop
and
mov
sbb
mov
popf
rcrl
dec
or
movsb
mov
pop
add
andb
push
jge
loope
out
pop
bswap
int
push
mov
xchg
into
int3
imul
mov
lahf
pop
cs
jp
cmp
cmp
sti
into
fsubp
loop
mov
xchg
mov
jmp
stc
insl
loope
stos
in
popa
sub
mov
adc
lods
and
mov
fstpt
out
pop
xchg
shlb
in
cmp
xchg
xchg
sub
decb
adc
fwait
stos
pushf
pusha
out
iret
inc
imul
gs
inc
or
das
cltd
repz
in
call
stos
cmc
jmp
cmc
mov
lahf
je
push
lret
cld
mov
ja
or
xchg
sub
and
inc
adc
mov
jno
pop
xchg
stos
int
inc
jmp
pop
test
cwtl
or
xor
loopne
sbb
ret
stos
add
out
lods
in
and
cmp
in
inc
dec
adc
push
fwait
inc
xor
mov
cmp
push
mov
sub
outsb
mov
insb
xor
adc
roll
sub
jo
mov
gs
dec
out
push
sub
sbb
inc
fs
push
cmp
out
iret
out
jmp
push
add
push
xchg
xor
call
and
hlt
or
pop
bound
or
imul
sub
mov
data16
sub
scas
in
das
xor
into
or
xchg
js
push
mov
arpl
cmp
xchg
cmp
popa
add
adc
cld
mov
dec
mov
leave
xchg
push
repnz
cmc
add
jge
ss
mov
lds
mov
fisubl
cmpsb
xorl
arpl
pop
inc
inc
outsl
fwait
lahf
or
mov
cld
mov
xchg
mov
inc
je
sub
add
sbbb
mov
pop
adc
lahf
jecxz
mov
push
mov
jo
in
xchg
and
pop
xor
scas
cmc
push
or
fcomps
xchg
adc
in
cltd
mull
push
ljmp
pop
ret
add
hlt
les
xchg
shr
cld
mov
insl
fidivl
stos
je
cmc
outsb
mov
push
ficomps
inc
jnp
cmp
divl
pushf
jae
mov
sub
mov
sub
push
cmp
repz
movsb
add
adc
decl
push
fstps
test
repz
jge
jnp
mov
dec
or
mov
xor
sbb
push
shrb
adc
test
mov
xchg
mov
negb
xor
out
pop
out
jmp
push
and
iret
and
pop
jle
out
iret
lcall
mov
inc
fadds
lods
imul
incb
adc
mov
xor
mov
in
xor
jno
jbe
div
sbb
add
cltd
add
movsb
dec
cmp
mov
pop
cli
jle
pop
mov
jmp
adc
out
push
push
jae
iret
or
mov
xor
mov
xor
add
inc
sub
jmp
mov
jnp
xchg
insb
sbb
scas
pop
cmpsl
xor
xor
lods
test
xchg
in
test
andb
test
dec
cmp
mov
movb
jmp
testb
mov
aam
lock
mov
push
sbbb
sub
sub
ret
mov
test
faddl
imulb
inc
push
test
jmp
or
pusha
mov
insb
aas
outsb
jl
jnp
xchg
es
mov
lret
dec
je
outsb
adc
arpl
rcrb
cmp
mov
and
xchg
sbb
fcomps
adc
jmp
push
arpl
mulb
inc
aam
inc
inc
int
subb
xchg
pop
lds
mov
sbb
fbstp
sbb
pusha
adc
pop
jbe
inc
rclb
aad
xor
iret
sbb
into
inc
jae
pop
or
add
data16
mov
mov
xor
mov
fwait
fs
or
daa
aas
and
out
outsb
xor
stc
test
sbb
lock
lods
mov
cmpsl
mov
stos
das
ficompl
cmc
cmp
cmp
xor
je
ret
aas
addr16
out
repnz
or
orl
adc
sti
outsl
nop
cmpsb
pushf
in
jns
add
stc
mov
addr16
add
xchg
movsb
das
sub
out
push
adc
dec
pop
sub
jge
les
and
dec
mov
adcl
addl
movsb
divl
addr16
stc
lods
inc
icebp
std
push
scas
xchg
push
and
ror
in
mov
aad
mov
imul
push
lcall
xor
scas
outsl
push
inc
lods
push
xor
addr16
pop
int3
mov
clc
push
sub
lock
sbb
lock
clc
movsb
imul
xchg
les
les
dec
or
add
ret
adc
in
jle
and
movsb
mov
xlat
into
xchg
inc
nop
ja
dec
sbb
sarl
cmp
pop
cmpb
mov
or
xlat
sti
in
in
sbb
xchg
mov
or
int
sub
jae
fcompl
mov
jmp
imul
test
aas
mov
inc
xor
xchg
fstps
mov
cmp
lcall
sbbb
arpl
fisttpl
sbb
xchg
sub
pop
adc
rsqrtps
sbb
cs
outsl
add
loop
mov
xchg
imul
inc
xchg
pop
fwait
sarl
lret
rclb
ljmp
pop
nop
xchg
incb
shll
ja
stos
int
loopne
add
xchg
scas
iret
pop
sub
aam
cmp
ljmp
push
pmulhuw
filds
movsl
popl
ror
sbb
mov
mov
nop
mov
sbb
int
nop
mov
inc
jne
jl
lret
gs
sub
mov
lret
mov
mov
hlt
sbb
aad
push
push
push
sub
sub
cli
mov
mov
fists
or
adc
fnsave
mov
cltd
or
ud0
xor
bound
das
and
hlt
in
inc
popf
mov
movsb
mov
mov
fstl
daa
mov
arpl
jae
jo
and
fisubrl
xchg
xor
xchg
pop
mov
out
pushf
and
movl
sub
sbb
jbe
xchg
fisubrs
shlb
addl
dec
xchg
data16
pop
lret
movsl
js
ljmp
and
inc
pop
cmpsb
adc
mov
and
lds
and
lahf
aam
cs
test
loopne
xor
sarb
push
cwtl
jns
btr
outsb
sar
sub
jge
sub
lock
rorl
mov
xchg
inc
jmp
cmpsl
out
mov
fs
lods
shrb
xchg
pop
mov
cmpb
cmp
movsb
std
mov
lods
loop
adc
dec
inc
lock
xchg
icebp
xor
adc
jbe
repz
cmpsb
push
cmp
aaa
adc
jb,pn
jbe,pn
cli
sub
fldenv
in
xor
ja
mov
repz
jg
cmp
dec
cmpsl
fstpl
out
sub
decl
dec
test
hlt
hlt
fcompl
pop
out
sub
lret
stos
out
lods
sub
sbb
test
xor
pop
cmp
mov
pop
add
mov
ds
dec
fadd
stos
lea
out
loope
jge
add
arpl
push
les
jg
mov
pushf
ficomps
sbb
jnp
cltd
or
ret
lods
mov
cs
adc
pop
sbb
push
aaa
adc
mov
or
mov
lcall
push
jno
cwtl
mov
test
mov
div
or
jne
dec
out
cmp
mov
jg
movsb
and
nop
mov
dec
xor
lahf
inc
jno
test
pop
int
fiaddl
nop
pop
mov
les
xor
push
cmp
mov
aam
or
cltd
dec
rcr
ficomps
dec
aad
jnp
mov
fsubrl
push
stc
xorl
jl
out
icebp
sub
mov
test
fldl2t
in
cld
mov
sti
fisttpl
inc
out
jecxz
movsb
inc
and
repz
loopne
dec
or
mov
add
xchg
int
inc
push
sbb
sbb
and
subb
into
flds
fidivrl
je
jne
mov
add
add
mov
add
cli
sub
movsb
jnp
sbb
insb
pop
stc
ljmp
insl
mov
push
in
add
xor
xchg
mov
insb
push
adc
adc
int3
shlb
popa
sarb
out
jmp
jns
ss
daa
rolb
sbb
aad
cmp
cmp
jecxz
addb
bound
nop
mov
dec
and
mov
mov
lock
into
mov
add
aad
cmp
or
mov
mov
jecxz
int
xorl
xor
xlat
or
scas
or
sbb
dec
leave
jo
dec
arpl
xchg
xchg
roll
xchg
pop
sub
es
repnz
mov
in
outsb
adc
add
jge
aas
andl
cmp
jl
test
mov
in
mov
repz
mov
pop
lods
mov
sbb
jbe
les
sbb
js
dec
nop
inc
mov
jno
imulb
jmp
cmp
dec
lahf
rcr
lcall
lcall
pop
mov
rcll
push
cmpsl
hlt
int3
push
rclb
pop
cs
test
add
inc
jp
inc
push
addb
inc
repz
pop
mov
and
aam
xor
xor
inc
into
cmp
pop
in
dec
in
enter
enter
cwtl
enter
or
push
lcall
mov
out
subb
mov
push
xchg
cwtl
inc
je
ss
add
inc
push
lock
sub
test
jbe
shlb
andb
pop
lds
sub
sbb
jb
cltd
lret
testl
icebp
xlat
dec
call
pop
ja
dec
out
inc
test
sbb
movsb
jae
test
fadd
xchg
dec
xchg
dec
and
mov
sub
inc
lods
mov
cmp
iret
enter
pop
pop
xor
push
push
arpl
stos
push
mov
fwait
mov
das
mov
mov
ret
lcall
bound
and
ja
test
or
xor
repz
and
outsl
in
sub
scas
adc
lds
xchg
mov
inc
test
xchg
pop
ret
sahf
data16
jae
movsl
push
pop
xor
outsl
dec
add
sub
adc
or
mov
ret
stos
in
jp
scas
jns
lcall
or
or
stos
repz
ret
shr
adc
push
push
sahf
popf
int3
mov
test
mov
insl
rol
rcrb
inc
lds
rcr
jo
out
mov
or
mov
pop
or
xchg
arpl
adc
adc
mov
pop
lea
cmp
in
subb
mov
mov
insb
xchg
iret
test
jle
and
xchg
pushf
mov
jge
lods
xchg
xchg
jle
fs
leave
adc
add
adc
pop
ss
rcrl
ret
lods
xor
push
shlb
mov
dec
fstl
pop
or
aad
sbb
sub
mov
mov
scas
enter
fnstsw
rcrb
add
pop
jno
sbb
out
leave
rcr
fimull
stc
inc
inc
dec
cmp
div
inc
loop
fbld
fwait
add
fisubrs
pushf
cmp
sahf
mov
aad
sub
push
fisttpl
repz
loopne
xor
dec
sub
sbb
xchg
push
gs
jle
inc
sub
sub
fcomip
aam
add
cmp
fldl
dec
js
sbb
xor
out
mov
cs
lods
fwait
jp
jbe
pop
pop
pop
mov
dec
jg
iret
and
stos
popf
std
jg
xor
and
adcb
cmc
out
les
or
loop
ds
aas
jae
jb
dec
sbb
pushf
mov
mov
mov
ret
enter
ret
fidivrl
or
pop
cmp
push
test
xor
mov
pop
pushf
int3
pop
repz
pop
aam
sbb
jmp
mov
xchg
sbbl
pop
xchg
xlat
jmp
push
sub
cli
push
xchg
roll
mov
dec
pop
dec
pusha
fcoms
int
std
outsl
mov
cmp
daa
mov
jo
roll
xor
test
cvttps2pi
pop
jmp
cs
xor
adc
pop
mov
pop
mov
les
xchg
adc
scas
sub
dec
add
xchg
mov
jno
mov
cs
insb
sub
jae
das
jnp
xor
out
adc
push
leave
xchg
insl
xchg
or
mov
or
repnz
and
flds
and
movsl
icebp
sub
in
cmp
jns
and
rol
repz
push
dec
repz
mov
sti
pop
or
mov
xor
xlat
stos
icebp
notb
ss
cmp
xor
cmc
jns
rorl
pusha
into
push
cmp
xor
enter
outsl
add
mov
cs
lea
dec
cmp
dec
dec
adc
jle
mov
xlat
mov
sub
shr
and
sub
adc
stos
push
or
stos
xor
cmp
lods
sub
roll
pop
loop
inc
loopne
pushf
adc
mov
push
pusha
loop
or
add
les
dec
addl
gs
jmp
sahf
ret
jp
cmp
and
xlat
push
stos
aam
xchg
xchg
mov
out
mov
andl
push
sub
ljmp
ljmp
movsb
xchg
fsubs
outsb
dec
cmpsb
pop
cs
xlat
adc
fcoml
jle
xor
jne
notb
icebp
movsl
and
dec
popf
mov
test
negl
outsl
ds
push
pop
lods
mov
mov
int3
mov
fistpl
repz
int
cmp
or
pop
inc
dec
std
adc
add
loope
cmp
push
into
rolb
push
enter
sub
arpl
ljmp
pop
jbe
arpl
call
insl
hlt
sbb
pop
lcall
cld
pop
lock
into
pop
mov
popa
out
inc
mov
fnstenv
mov
in
jle
push
cmovno
int
mov
jge
sti
adc
mov
mov
movsl
cmp
jmp
cmc
fsubs
ret
repz
testl
jmp
adc
inc
or
out
adc
fcoms
sub
push
subl
icebp
cmpb
bound
in
enter
adc
add
push
jl
stos
lcall
mov
bound
mov
aam
shr
popf
rorl
push
or
and
int
pop
in
cmpsb
push
ljmp
or
dec
pop
repz
push
std
pop
and
ja
cmp
push
xchg
mov
add
dec
pop
iret
mov
inc
add
dec
add
and
cmpsb
loop
sub
cwtl
rcll
lock
ret
test
incl
jp
adc
js
or
dec
mov
inc
out
cmpsb
loop
in
arpl
loop
cmp
lret
out
into
out
test
mov
repnz
push
adc
and
xor
movsb
dec
je
cmp
js
jge
cmovle
out
je
sub
sub
data16
pop
nop
in
sahf
cmp
sbb
cs
mov
cmp
pop
or
pop
insl
cmp
or
into
in
leave
nop
lcall
imul
mov
or
enter
int
and
cmp
pop
out
stos
aam
dec
and
loop
add
int
loope
or
push
add
sarl
mov
dec
lret
push
fwait
fs
inc
nop
leave
pop
cmp
loop
adc
xchg
jge
int3
inc
mov
fildl
lea
ljmp
lods
es
call
imul
sti
dec
push
das
clc
adc
jle
test
jecxz
push
scas
mov
mov
lahf
mov
lret
mov
xor
inc
adc
enter
adc
sub
lds
mov
or
testb
shrb
adc
sub
imul
mov
sub
mov
insl
adc
xor
lock
xchg
xchg
xor
pusha
jno
cmpsb
xor
repz
pop
jmp
push
mov
sub
push
popa
inc
insb
movsb
bsf
jp
add
aas
sub
fcmovnb
icebp
fnstcw
int
test
test
add
inc
filds
pop
sub
aad
dec
jecxz
jecxz
push
loop
sbb
inc
mov
inc
insl
int
incb
ljmp
sahf
daa
repnz
mov
mov
in
out
inc
bound
push
mov
xor
push
repz
in
mov
or
cmp
inc
mov
ficomps
jl
aad
and
mov
adc
pop
movsb
cltd
pop
inc
sbb
scas
adc
pop
jmp
loopne
lcall
enter
aaa
cmp
push
sti
mov
adc
inc
lds
lea
xor
es
xor
sti
inc
inc
cmp
je
jle
daa
pop
aas
rcrb
dec
data16
jo
sbb
ja
dec
mov
jmp
leave
dec
shll
imul
and
jb
inc
jecxz
add
sbb
out
cmc
imul
ja
mov
mov
push
mov
lock
cmp
mov
xchg
mov
push
adc
stc
adc
aad
movsl
aas
pop
jnp
add
push
ljmp
mov
out
scas
pop
imul
sub
out
xor
test
xlat
push
ficompl
in
int3
gs
jae
fwait
movsb
jno
inc
call
push
mov
xchg
xchg
mov
sar
mov
pop
rcr
sbb
jecxz
test
jl
dec
movsb
sbb
and
mov
pop
mov
jno
sahf
mov
xchg
aas
push
xchg
jg
jle
sub
je
fldl
xchg
ds
jmp
pushl
sub
mov
std
leave
sub
testb
fcmovb
insl
dec
and
xchg
repz
mov
mov
jae
mov
xchg
inc
and
sbb
push
daa
and
sub
xor
cmp
mov
into
adc
mov
outsb
movsl
popa
cmp
imul
push
icebp
or
adc
int3
lret
dec
pop
push
cmp
inc
scas
adc
fcoms
or
pop
ja
scas
mov
fs
xlat
jecxz
and
test
nop
dec
push
int3
or
aas
mov
aaa
out
gs
push
iret
xor
push
or
inc
repnz
rcr
ret
cmpl
int
push
pop
int3
in
mov
adc
or
mul
mov
fnsave
outsl
lretw
pop
push
or
sbb
jge
mov
add
cmpsl
test
in
fwait
pop
mov
pop
enter
dec
wrmsr
cwtl
sbb
stos
movsb
and
mov
fstpl
sarl
pop
adc
push
cs
jns
test
xorb
add
int
or
rcll
aas
sbb
pop
jmp
add
loopne
and
pop
out
xchg
lods
sbb
xchg
sbb
push
pop
jge
mov
lret
insl
out
sbb
pop
test
sbb
je
add
jge
repz
mov
lods
out
pushf
push
jecxz
inc
shr
bound
adc
push
jp
inc
orb
pop
dec
lret
sbb
in
cwtl
sbb
dec
call
cmc
fadds
push
xchg
mov
pop
jp
adc
add
push
mov
cs
xor
push
mov
pop
xchg
or
xchg
dec
dec
std
sub
jae
js
xchg
push
das
mov
cmp
es
fcompl
mov
lahf
sub
xchg
mov
mov
or
fmul
in
mov
cmpsl
mov
push
test
aad
cmp
push
and
imul
sbb
mov
inc
clc
bound
xchg
outsb
daa
mul
cwtl
es
jge
adcl
adc
push
sbb
or
cwtl
sub
test
cli
hlt
push
les
aaa
mov
rcrl
in
icebp
push
adc
fnstsw
jle
jno
scas
jne
addl
jp
in
ficompl
adc
pop
cvtps2pi
aad
jns
pop
mov
repz
and
les
adc
or
mov
xchg
aas
sbb
add
icebp
dec
test
loop
mov
les
jle
or
adc
mov
test
sti
xchg
ror
shlb
lods
cmp
or
mov
mov
inc
adc
aaa
fdivrs
stc
cmp
sub
mov
fistl
lcall
daa
out
out
mov
cld
insb
repz
cmp
jae
inc
xlat
push
out
mov
adc
inc
sub
int3
mov
addl
add
sbb
dec
nop
jae
std
xchg
fsubrs
jo
shrb
add
stc
lahf
imul
call
test
fstps
jmp
inc
mov
cli
stc
fstpt
sbb
dec
jne
sub
push
cld
mov
test
xchg
fistpll
cld
lcall
cwtl
push
addr16
inc
adc
xor
stos
iret
inc
sbb
test
popf
dec
push
cmp
add
mov
adc
dec
xor
adc
rcrl
dec
loop
pop
popl
daa
pop
shlb
xor
icebp
lcall
mov
das
out
adcl
stc
dec
in
sahf
xchg
lahf
fsts
inc
mov
in
or
inc
notb
stc
mov
icebp
push
sub
aam
pushf
pop
inc
mov
sbb
lret
imul
pusha
popa
cs
cmp
dec
push
or
ret
pusha
scas
sbb
imul
adc
pop
pop
into
mov
das
ja
popl
cld
aaa
ret
push
push
lret
pop
add
out
adc
les
sub
add
sbb
or
imul
fidivs
nop
fisubs
sub
shl
inc
jl
mov
iret
cmp
addb
and
ljmp
xor
in
push
dec
push
ljmp
sub
movsl
mov
and
push
pop
xchg
add
push
pop
sti
mov
mov
mov
add
pop
fstpl
mov
dec
sbb
mov
and
xor
or
iret
loopne
jmp
mov
cs
xchg
mov
pop
mov
fnstcw
ret
dec
jnp
pusha
push
in
lret
inc
mov
stos
sahf
mov
incl
mov
jecxz
stos
dec
mov
cmc
xchg
call
mov
jp
test
lret
jle
jl
inc
movsb
sbb
in
les
mov
mov
xor
fxch
jge
mov
test
in
mov
adc
mov
sub
mov
imul
pushf
mov
xchg
cld
das
push
stos
add
sub
cs
jmp
pop
cmp
lods
mov
inc
test
xor
push
mov
mov
inc
jecxz
cmp
sbb
add
lret
cmp
sbb
push
add
or
pop
push
jmp
or
and
dec
shll
test
sub
ficoml
pop
aad
dec
dec
arpl
hlt
dec
push
pop
dec
out
pop
ds
ffreep
jb
in
stc
insl
push
adc
loop
mov
insl
test
jmp
in
cwtl
fistl
cltd
pushf
lods
shlb
jge
jno
into
fldcw
or
leave
lods
jo
loop
xchg
lahf
sub
mov
xor
and
outsl
clc
jbe
cmpsb
sub
sub
stc
insb
xchg
imul
icebp
orb
and
sbb
insl
and
enter
inc
pop
mov
cmp
shrb
inc
das
cs
or
test
cmp
push
jae
in
test
dec
into
leave
lcall
je
scas
jb
aas
push
xchg
or
mov
clc
bound
loope
or
xchg
stos
addr16
ljmp
xlat
repnz
or
lea
in
and
insl
js
xchg
iret
push
pop
or
mov
xor
pop
mov
rorb
push
out
push
cmc
or
inc
sub
inc
test
into
das
adc
pop
out
out
les
call
setg
enter
xor
inc
fs
lahf
mov
popa
cmpb
ds
arpl
testl
jle
aad
in
pusha
arpl
mov
in
ror
mov
iret
adc
gs
mov
aam
fisttpl
fisubl
xor
gs
xor
cld
fwait
cli
les
xchg
sub
dec
jle
jo
pop
sub
dec
test
nop
mov
or
mov
push
jns
pop
sub
adc
sbb
inc
negb
lret
cmpsb
insb
cwtl
jne
int3
jne
or
push
mov
aaa
pop
cld
frstor
cmp
fsubr
test
sbb
loope
mov
outsl
fisubs
shrl
jecxz
movsl
add
das
pmulhw
mov
pop
jp
xchg
fdivs
pop
jne
pop
fisttpll
stc
loope
and
sub
and
mov
fdivrs
add
inc
scas
adc
mov
jmp
jae
xchg
sub
rcll
pop
dec
fwait
rolb
jno
pop
mov
loopne
dec
dec
xchg
fmul
adc
cmp
and
push
mov
movsl
sbb
or
and
adc
dec
enter
mov
add
xchg
insl
jmp
fcmove
out
push
ja
sbb
dec
pop
jle
mov
rcrl
insb
adc
push
push
sarl
adc
adc
dec
stos
xchg
and
push
mov
out
dec
cmc
jno
sahf
adc
fsts
xor
ja
fsts
sbb
xor
and
xlat
les
xor
ss
mov
jne
pushf
sbb
sti
imul
sti
or
and
mov
or
lock
dec
loop
and
cld
fidivrl
orl
cmp
pop
jno
mov
jb
jecxz
xchg
stc
into
lcall
aaa
in
and
xchg
shlb
shrl
iret
call
mov
push
cli
xor
xor
xor
push
and
mov
adc
andb
or
test
jecxz
test
mov
pop
dec
inc
mov
push
sbb
mov
push
jb
xlat
imul
fwait
pusha
push
pop
lock
inc
pushf
add
inc
inc
xchg
push
movb
xchg
int
push
mov
cmp
in
sub
in
mov
rcrl
stos
in
xchg
adc
or
ljmp
sbb
sbb
mov
ret
pop
mov
and
aas
in
lods
cmp
cld
int
lret
out
mov
jmp
pop
xchg
xchg
dec
js
pop
clc
mov
xchg
cmp
pop
jle
and
xor
ror
cld
mov
dec
adc
movsb
jno
scas
subb
or
mov
xchg
push
int3
movsl
lods
xor
aas
jno
sbb
in
xchg
jle
or
ffreep
and
mov
jmp
sub
in
mov
pop
dec
mov
pop
mov
lcall
cli
movsl
sub
notb
pushf
xchg
pop
xor
pop
cmp
popa
popa
sti
add
xor
test
sbb
js
sbb
jnp
push
dec
jne
xor
pop
or
and
jle
scas
sbb
dec
jns
add
fwait
movsl
mov
mov
xorl
push
repnz
mov
dec
data16
repnz
pop
popa
jg
jle
jle
lods
cmp
ljmp
or
sbb
in
sar
xchg
xor
in
nop
xchg
pop
dec
xchg
cwtl
call
lds
mov
cmpsl
cld
mov
arpl
fwait
loopne
jl
mov
in
aad
mov
mov
ljmp
xchg
adc
push
xchg
pop
vcvttps2dq
jl
add
cmpsl
mov
or
stos
and
sar
mov
push
iret
adc
out
xor
int
outsl
and
cmpb
cwtl
jp
cmp
xor
fldl
jecxz
imul
pop
mov
mov
jb
mov
enter
ljmp
or
sbb
jmp
insb
sub
hlt
xor
jge
pop
jne
stc
lahf
fstpl
andl
addl
loope
dec
sahf
dec
and
shr
jmp
flds
jns
sbb
mov
push
data16
pop
not
imul
push
scas
shrb
fbstp
and
in
inc
ss
add
aam
sti
int
dec
ja
push
push
lods
fstps
lahf
data16
ss
and
mov
cmpsb
sti
movsl
sbb
pushw
jb
mov
mov
jns
hlt
shll
pop
inc
test
pop
in
rcrb
movsl
adc
ljmp
cmp
out
sub
xchg
xchg
push
lret
adc
mov
movsb
xor
ja
stos
xchg
bound
cmpsb
rcl
popa
push
and
jge
in
leave
mov
push
push
test
in
dec
jmp
push
sub
inc
insl
xchg
pushl
ret
cmp
inc
popa
sub
insb
adc
sbb
cli
and
xchg
ret
push
js
inc
ja
cwtl
xor
jnp
sub
pop
jg
fmuls
push
pop
inc
psubd
setg
mov
les
mov
cmpsb
scas
outsb
xlat
xor
mov
adc
push
sbb
leave
and
mov
mov
cld
shlb
std
mov
xor
loope
xor
fs
jbe
out
xchg
dec
jbe
jbe
mov
and
and
out
sbb
adc
sbb
ficoms
mov
mov
sbb
iret
daa
daa
push
push
enter
data16
icebp
pop
sbb
adc
and
mov
movsl
cmp
xchg
xchg
push
xchg
cmp
int3
loopne
es
pop
aas
cwtl
sbb
mov
pop
cmp
nop
in
data16
dec
loop
xlat
orb
aaa
adc
xor
cltd
xorb
inc
push
jnp
jns
shl
out
andb
ja
insb
ja
jmp
pop
aaa
cs
sbb
mov
in
xorb
xor
mov
dec
sbb
xchg
flds
iret
out
insl
jmp
mov
sub
push
jno
xchg
roll
js
test
gs
mull
js
cmpsl
fistpll
clc
jmp
xor
jo
js
sti
lahf
dec
lret
mov
dec
cmp
int3
cwtl
movsl
cmpsl
mov
or
cld
inc
push
cltd
movsl
mov
loope
xchg
scas
fsubrs
int3
inc
dec
push
ret
push
xor
or
cmp
mov
cwtl
and
add
xlat
cli
adc
sbb
fidivrs
add
adc
hlt
lea
dec
add
mov
in
or
jmp
sbb
lea
out
nop
xor
lea
push
or
inc
out
cmpsb
bound
dec
dec
dec
push
pop
pop
inc
fnsave
and
hlt
imul
jae
jne
dec
sub
inc
mov
sub
mov
imul
ret
mov
sti
pop
pop
mov
xchg
add
dec
push
addr16
mov
mov
and
notb
push
mov
jp
push
call
mov
in
test
mov
fnstenv
repz
nop
ss
leave
ds
icebp
mov
test
xlat
shrl
xchg
xor
lds
sub
rcll
dec
jns
push
mov
outsb
rclb
arpl
mov
je
pusha
push
push
mov
loopne
testb
into
pop
jo
and
fs
xor
addb
xor
xor
sbb
push
enter
cmp
test
mov
mov
mov
adc
cmpxchg
mov
bnd
or
push
adc
les
mov
jnp
adc
int3
push
std
mov
mov
aaa
jno
or
fwait
out
shll
push
aam
cld
sub
popf
stc
cld
in
test
pushf
aaa
fldcw
lds
stos
mov
fisttps
xor
or
nop
fisubs
push
dec
pop
out
pop
push
fnstenv
push
shr
cmp
mov
ffreep
mov
inc
cltd
xchg
lods
cli
repnz
push
adc
add
jp
xor
sub
ljmp
stc
xchg
inc
pop
into
pop
nop
jmp
cmpsb
jnp
into
stc
fdiv
imul
nop
or
rep
xlat
inc
xchg
xlat
jne
mov
scas
lahf
scas
jle
cmp
mov
repnz
add
int3
push
jnp
or
adc
dec
add
bound
xlat
xchg
loopne
xor
imul
notb
or
pushf
cmpsb
mov
pop
push
jmp
jl
ret
inc
cmp
into
push
inc
push
into
js
dec
mov
popa
scas
xlat
lds
pop
adc
push
stos
jmp
frstor
rcll
data16
nop
pop
jne
push
sbb
jmp
inc
mov
aam
sbb
mov
fs
lahf
imul
or
inc
fcoml
xchg
jnp
jge
daa
xor
cltd
push
inc
xchg
and
mov
jle
pop
adcl
out
sbb
push
xorl
mov
mov
mov
fbld
leave
stos
cwtl
data16
mov
xchg
push
xchg
retw
adc
sub
xlat
scas
xor
outsb
test
popa
xor
movsb
inc
fs
inc
iret
hlt
lock
and
and
or
inc
mov
int3
and
jnp
dec
fidivl
mov
sar
ret
push
f2xm1
jbe
jnp
sbb
add
xor
fsubrs
mov
pushf
fs
lds
cmp
adc
outsb
jns
push
aaa
xor
adc
pop
adc
dec
rcrl
mov
mov
rcrl
cmpb
aad
push
in
xchg
inc
add
cmpsl
inc
xchg
ret
add
jbe
outsl
push
xchg
push
stc
lahf
push
cmpsl
add
hlt
aam
ret
cmp
pop
int3
sarb
movsb
pop
mov
and
popf
add
lcall
repz
push
mov
mov
pop
out
jg
xor
dec
repz
fdivp
stc
lods
pop
cmp
dec
aaa
lcall
sbb
xor
rcrl
fstpt
inc
or
inc
mov
pop
repnz
repnz
mov
loop
jp
inc
std
in
mov
aam
pusha
sub
jge
popf
insl
fiadds
aam
pop
mov
xor
inc
adc
icebp
dec
lcall
in
pop
ljmp
mov
pop
rorb
cmp
pop
xor
lea
cmp
cmp
inc
punpckhdq
adc
pop
sarl
mov
int
push
inc
inc
xor
mov
xchg
outsl
lcall
push
gs
stos
in
mov
adc
sbb
loop
jg
out
cmp
scas
lods
das
lahf
sub
stc
mov
std
sti
in
sub
pop
mov
arpl
mov
mov
pop
mov
push
mov
fwait
mov
sbb
add
cmp
test
lahf
and
xor
popf
ja
aam
pop
xor
jne
ljmp
insl
mov
inc
xorl
repz
add
lods
lret
or
push
in
sub
jo
dec
enter
and
inc
aad
adc
rcrb
stos
sub
int
mov
inc
stos
push
icebp
xchg
es
in
xchg
testb
adc
adc
mov
in
out
sub
imul
popf
pusha
enter
movsb
push
jno
pop
inc
cmp
sti
sub
fldcw
xorb
scas
movsb
cmp
pop
mov
mov
bound
das
aad
in
mov
aaa
push
sahf
or
cli
push
mov
xchg
out
mov
das
lds
add
xchg
mov
adc
imul
popa
sbb
cmp
dec
movsl
xchg
int3
xchg
mov
inc
repz
dec
mov
push
test
mov
lahf
pop
inc
push
pop
add
pop
mov
in
mov
dec
outsb
xchg
daa
scas
repnz
push
js
jo
cmpsb
push
mov
popa
movsl
mov
push
imul
out
ss
pop
repnz
jno
int3
out
mov
idivb
xlat
cmp
mov
dec
sbb
fldl
pushf
cmp
int3
push
jp
sahf
cli
sub
shrl
cltd
loope
cmp
imul
jg
jo
mov
cli
mov
push
mov
cmp
sbbb
mov
jge
fnsave
push
iret
cs
pop
pop
sub
push
mov
add
xchg
sub
pop
and
xchg
divl
push
sub
in
inc
lcall
mov
cmp
fisubl
cwtl
fs
and
xchg
test
mov
and
ret
mov
out
push
sarl
cwtl
mov
jmp
repnz
push
jbe
add
dec
dec
push
xchg
stc
cs
xor
andl
push
mov
xchg
cli
mov
and
pop
shl
adc
mov
into
mov
lds
or
mov
and
fildll
mov
push
xchg
cld
jl
or
push
mov
push
pop
lods
jecxz
mov
in
xor
pop
pop
mov
inc
mov
imul
out
or
add
mov
pop
stos
fmuls
cmp
movsb
in
mov
mov
lcall
pop
or
jno
nop
fwait
popf
pop
pushf
ja
shl
jle
pop
pop
inc
pop
ret
xchg
decl
cld
dec
push
int
pop
insb
and
jo
xchg
push
dec
pop
xor
push
loope
icebp
shr
jmp
push
mov
xchg
iret
jge
lret
dec
fwait
jmp
mov
mov
rcrl
xchg
push
jb
inc
stos
das
pop
jno
mov
pop
mov
push
adc
pop
int3
jbe
movsl
scas
xlat
jmp
stos
jae
arpl
pop
add
pop
push
or
xor
jnp
jno
sbb
test
scas
mov
mov
sub
roll
mov
stos
dec
jl
adc
push
mov
and
adc
scas
mov
loop
push
mov
mov
adc
loopne
gs
lods
cs
sti
int
sub
push
adc
test
and
dec
xorb
fsts
pop
imul
pop
leave
aas
lcall
sub
xor
ja
adc
data16
mov
icebp
xchg
pushf
mov
addr16
stc
dec
lock
add
jmp
test
and
jno
xchg
dec
jp
mov
test
pop
or
imull
jae
inc
jg
mov
cs
pop
pop
mov
fldenv
dec
out
pop
inc
aam
repnz
mov
jge
mov
add
push
mov
push
jo
rcl
repnz
xchg
cwtl
cwtl
jl
xor
lods
xor
xchg
jns
sub
jo
adc
nop
push
and
mov
ret
cwtl
push
or
cs
negl
pop
push
sbb
cwtl
xchg
lods
test
roll
cmpsb
fwait
xlat
pop
mov
bswap
push
cmp
pop
push
mov
xor
out
jp
pop
jno
cmp
inc
mov
popa
mov
popf
rcr
int
xor
mov
fcomp
cmc
pop
in
ficomps
jp
xor
fs
add
xor
cltd
push
and
cmovb
movsl
sub
outsl
jge
out
out
mov
inc
inc
xchg
and
adc
mov
adc
cmp
pushf
lahf
jmp
cli
stos
mov
xchg
out
inc
xchg
pop
js
cmp
sbb
xchg
pop
aad
aaa
xlat
out
jbe
jnp
mov
test
daa
pop
gs
mov
cmp
int3
shll
lcall
fdivrs
or
fisubs
dec
and
imul
stos
mov
mov
jmp
mov
loopne
nop
cmp
call
push
fs
mov
bound
cli
pop
or
dec
xchg
cld
arpl
jp
popa
cmc
mov
out
inc
rep
or
or
adc
or
cmp
mov
lea
gs
in
repz
push
insl
out
mov
push
push
mov
fdivrs
pop
xchg
imul
xor
call
pop
dec
pop
mov
loope
dec
lret
pop
into
inc
jo
std
repz
cs
sub
in
ss
and
das
fdivrl
inc
ret
cmp
leave
insb
into
dec
sbb
mov
jmp
dec
jl
xor
call
dec
push
push
das
push
jne
xchg
sbb
dec
mov
mov
jo
flds
imulb
repz
lret
fimuls
adc
out
add
hlt
insb
aam
stos
sbb
dec
orb
ret
mov
or
fistps
sahf
push
andl
jge
cmc
pop
pop
jge
addr16
test
and
test
sbb
inc
cmpsl
iret
shrl
lods
andb
push
ret
sbb
js
fldcw
pop
push
outsb
sub
mov
adc
cld
mov
in
sbb
cmp
sbb
int3
push
shlb
push
pop
out
inc
filds
andl
mov
cltd
sub
mov
sub
cltd
mov
add
xchg
pop
insl
push
sub
adc
adc
push
ss
jmp
int3
adc
lret
push
lahf
xor
xor
add
inc
cmpsb
mov
sbb
fidivrs
outsb
ret
mov
and
pop
stc
mov
xor
sbb
pop
pop
push
lock
push
sub
pop
in
popa
sti
sarb
dec
xor
fiadds
inc
std
jns
mov
fstl
movsl
cmp
xor
out
addr16
das
fimuls
mov
pop
xor
popf
cmp
lret
outsb
int
push
arpl
add
mov
das
dec
loope
rolb
int
into
jb
mov
lea
js
xor
mov
mov
xor
pop
lahf
and
sub
repnz
leave
out
dec
adc
test
insb
iret
dec
stos
and
sub
sbb
xor
mov
add
fidivs
mov
imul
mov
out
dec
repz
sub
mov
cli
cltd
aaa
fisubrs
pop
outsl
orb
out
in
and
sbb
out
xorb
mov
xchg
cmpsl
cld
mov
pop
or
xchg
insl
int3
daa
push
dec
outsb
xor
mov
sub
mov
mov
pushf
das
or
cmp
mov
lock
lods
stc
add
pop
lcall
mov
andl
mov
push
into
or
mov
push
dec
dec
cmp
adc
jle
inc
xchg
fistpll
pop
popa
pop
cld
stos
mov
mov
fsubrs
jbe
sbb
fdivrl
mov
sbb
sahf
cmp
xor
inc
jne
sbb
sub
adc
call
iret
xor
mov
les
cmpsb
loop
add
andb
int3
test
sbb
lret
mov
dec
test
in
xor
jmp
mov
pop
in
cmpsl
lds
push
rcrl
fcomi
xchg
jle
nop
add
out
or
sbb
ss
sbb
dec
fisttps
loop
loop
andb
add
add
mov
aad
push
imul
test
sub
cmp
jp
outsl
ja
mov
push
mov
insb
push
or
xchg
aad
stos
jns
adc
insb
out
cmpl
test
jne
dec
xor
cltd
push
and
insb
in
mov
mov
pushf
sub
pop
mov
orb
dec
stos
bound
xchg
add
clc
and
out
sarb
vpunpcklbw
push
pop
sub
call
push
cmp
xor
popa
cmp
movsb
and
pop
movsb
jae
fistpl
add
popa
enter
scas
xchg
inc
push
mov
add
cmp
push
inc
pusha
push
xchg
sub
out
stos
idiv
loope
std
xchg
mov
sbb
adc
xor
pop
push
add
push
ss
les
stc
pop
push
pop
mov
add
jae
push
push
pop
and
test
lock
aas
dec
js
sub
sbb
push
pop
mov
fs
jno
mov
jno
lret
pop
lret
add
addb
adc
push
jno
mov
femms
cmp
jb
cmc
sbb
cmpsl
in
sub
add
stos
or
xor
jb
or
rorb
and
xor
lahf
fucomp
jae
pop
jg
dec
and
dec
in
or
add
int3
jae
inc
fistl
push
lahf
and
xor
mov
fwait
and
cmp
pop
jo
dec
cmc
sbb
nop
xor
out
in
sbb
fstps
jge
das
rorl
adc
pushf
mov
sbb
orl
push
xchg
pop
or
mov
adc
loopne
mov
lret
mov
mov
xchg
or
push
push
clc
mov
cltd
inc
int3
popf
dec
pop
inc
jecxz
dec
push
fisttpl
mov
cmpsb
dec
ret
je
xor
adc
pop
cmp
in
sbb
outsb
sti
hlt
sbb
ficoml
ss
dec
das
adc
mov
popa
aaa
jecxz
clc
enter
hlt
xor
icebp
daa
int
cld
dec
xchg
test
xor
xchg
mov
int3
xchg
sub
jne
lret
addb
int
push
or
sub
jecxz
or
inc
and
sti
and
std
daa
add
das
fsubrs
aaa
out
lret
test
cmp
dec
jo
sbbl
fisubrl
mov
or
addr16
mov
test
push
insl
mov
mov
push
push
jle
ds
sbb
in
stos
adc
jns
cld
call
daa
lcall
aas
filds
mov
xor
orb
jle
jbe
mov
mov
rcrl
sub
mov
jmp
test
inc
cwtl
iret
popa
fistps
pop
xchg
mov
push
dec
pop
push
pop
stc
push
cli
ja
sub
rcll
jmp
lods
cmp
or
jb
es
cwtl
xor
mov
movsb
pop
push
cli
cmp
inc
or
imul
dec
adc
sbb
cltd
mov
clc
mov
adc
xchg
fsubs
je
sub
je
cld
ror
push
jmp
test
add
push
dec
sti
mov
aam
push
jp
fisttpl
arpl
leave
cmpsl
repnz
lds
cmp
dec
loopne
sub
imull
add
pop
push
jecxz
and
xchg
addl
sub
jl
lds
adcb
dec
cmp
sbb
sarl
push
leave
repnz
mov
popa
mov
inc
int
iret
imul
sub
loop
lret
cmp
jno
rolb
ret
lods
addr16
movsb
xor
test
and
jno
repnz
xor
das
xchg
xor
adc
adc
mov
xchg
ret
mov
push
sub
pop
xchg
push
cltd
sbb
or
scas
push
mov
pop
mov
cmp
lock
mov
xchg
roll
lock
adc
adc
pop
cwtl
int3
lods
sbb
test
gs
test
test
push
pslld
dec
fildll
sub
bound
pop
ljmp
cmp
xchg
mov
pop
sti
lret
pop
dec
jb
int3
dec
pop
and
adc
sub
add
and
or
adc
mov
xchg
iret
int
mov
test
test
in
cmp
jl
les
cmpsb
iret
sahf
jle
dec
push
test
fdivs
in
daa
insl
xchg
aas
stos
test
pop
call
xor
lods
sahf
pop
mov
outsb
jnp
inc
div
bound
mov
jmp
sub
xor
shlb
mov
xchg
ret
lret
cwtl
outsb
lret
popa
ja
je
pop
mov
dec
jb
add
xchg
dec
inc
mov
xchg
mov
fwait
cmp
mov
aas
mov
scas
imul
fcmovnb
imul
aas
adc
jle
jbe
push
jbe
out
cs
push
push
xchg
push
imul
mov
je
push
movsb
stos
xchg
sbb
sub
add
mov
jge
loope
cli
add
bound
add
cmpsb
pop
das
push
jp
xor
sub
popa
scas
add
xchg
and
ret
xor
xchg
sti
xchg
lret
movsb
int
jmp
and
in
das
adc
jne
inc
mov
movsl
andb
push
sub
loope
jg
test
push
pop
mov
mov
int3
inc
xchg
jle
cltd
or
push
in
add
or
outsb
jb
mov
pop
xchg
enter
ret
or
cmp
adc
add
stos
push
loope
jo
pop
sub
mov
or
aaa
lock
sub
loop
ss
mov
sub
sbb
repz
test
je
dec
sub
push
scas
push
imul
test
pop
lds
cltd
and
mov
rolb
sbb
mov
inc
imul
mov
cltd
rolb
push
lds
out
int3
xor
pop
rclb
pop
fcoml
test
mov
ds
and
push
test
pop
jg
mov
lret
cmpsb
mov
mov
fisubl
mov
popf
je
and
sbb
lret
pop
pop
push
xchg
jo
jo
pop
dec
fsubrl
mov
enter
lods
push
pop
jle
cmp
cld
lods
imul
movsl
pop
lds
add
mov
mov
or
jmp
push
xor
pop
dec
sbb
aaa
jbe
push
out
push
in
adc
in
out
adc
dec
out
repnz
xor
mov
mov
mov
mov
add
mov
sub
inc
sub
and
or
aas
sub
cltd
push
movsb
cs
pop
jmp
adc
shll
cwtl
dec
jne
xor
push
sub
cmc
mov
popf
cmp
out
inc
int
hlt
push
addl
push
addb
jg
mov
ficoms
xchg
pop
cli
movsl
mov
call
add
pusha
sub
and
out
sbb
mov
fisubrl
mov
mov
movsb
push
or
sbb
jne
pop
testb
mov
in
xchg
adc
clc
stos
fstps
and
ficompl
pop
xchg
adc
add
dec
shrb
xor
stc
out
cmpsb
stos
outsb
lahf
xor
out
adc
mov
test
nop
mov
jbe
mov
lret
lock
std
pop
mov
cwtl
out
in
test
leave
lock
aas
dec
sbb
push
sbb
popa
lock
jge
push
xor
or
cwtl
loope
enter
jb
jg
lock
subl
and
xlat
dec
cli
xorl
repnz
aas
je
sti
ret
push
xor
out
pop
ret
pop
aad
orb
hlt
push
sbb
lods
mov
sbb
repnz
xor
or
xchg
push
clc
mov
scas
push
inc
in
iret
stos
add
icebp
inc
leave
push
cmpsl
cwtl
aam
xchg
movsl
push
add
cmpsb
add
in
aam
jbe
sub
movsl
fcmove
xchg
add
pop
dec
sub
mov
outsb
sbb
mov
inc
jp
adcl
and
pop
inc
mov
in
mov
add
cmc
cmp
jno
sub
fcompl
insb
int
jo
out
push
adc
pop
sub
ja
jne
pusha
orl
xchg
xor
pop
xchg
jne
mov
or
dec
cmova
adc
xor
dec
add
inc
push
cmpsl
fnstenvs
rclb
add
and
push
sbb
add
or
int
lods
rclb
subb
adc
aam
popa
jecxz
outsl
sbb
push
iret
mov
shrl
arpl
dec
mov
jp
ja
push
push
cli
in
jmp
sbb
or
lods
push
nop
or
in
in
adc
pop
or
sbb
xchg
push
enter
cltd
jnp
clc
in
daa
mov
sub
and
fcoml
sbb
mov
push
add
mov
ret
hlt
push
mov
mov
pop
dec
sbb
add
stos
cmp
in
xchg
ljmp
mov
fcompl
or
mov
mov
dec
js
cli
sbb
xor
inc
repz
ss
lock
aas
sbbl
test
push
pusha
push
je
cmp
hlt
jmp
loop
std
xchg
mov
push
pop
test
nop
pop
in
out
test
insb
xchg
notb
xor
sub
xlat
jl
jb
cmp
ret
sub
lcall
ret
cmp
mov
push
sbb
cmp
dec
imul
mov
ja
mov
stos
dec
xor
push
or
clc
dec
hlt
push
fmuls
mov
cwtl
sbb
pop
jnp
movsl
call
test
jae
sbb
outsl
mov
inc
mov
cmpsl
movsb
icebp
inc
xor
fidivs
fistpl
imul
adc
mov
pop
jns
mov
jae
out
and
movsl
inc
andb
jmp
xchg
xchg
push
enter
dec
push
mov
movsl
lds
shrb
addr16
mov
int3
into
cmp
sarl
clc
movsl
dec
sbb
cmp
out
sbb
filds
mov
sub
sub
stos
sbb
dec
and
pop
add
enter
es
test
pop
ss
js
enter
pop
pop
mov
push
gs
inc
gs
nop
aad
or
inc
adc
das
mov
flds
jb
lret
cmp
mov
pusha
jl
lahf
out
fcmovnb
jg
and
xchg
popa
jno
daa
mov
xchg
push
cmpl
mov
stc
and
xor
incl
mov
arpl
cmp
jno
xor
movsb
mov
cmpsb
scas
xrelease
addr16
clc
popf
fdivrs
sbb
inc
xor
dec
fldl
sbb
jb
mov
loop
pop
es
mov
xor
xchg
mov
mov
push
mov
mov
mov
sbb
cli
mov
or
jo
in
push
das
test
xlat
pop
mov
mov
in
add
push
outsl
push
and
and
push
out
aam
pop
inc
pop
fcomps
clc
out
push
out
mov
and
mov
xor
setnp
stc
dec
push
jbe
aaa
mov
inc
fnstcw
fisubs
pop
push
les
pop
mov
and
mov
pop
idiv
clc
out
push
or
push
mov
and
mov
push
jb
xor
push
mov
cli
adc
shr
loope
jmp
arpl
mov
pop
inc
jmp
cmp
mov
mov
xor
mov
movsb
rclb
mov
stos
inc
push
je
pop
pop
lds
loopne
mov
mov
push
xor
cmpsl
mov
jp
or
jg
add
vpsubb
add
pop
cmpb
adc
lret
mov
or
mov
and
pop
xlat
mov
jae
adc
int
scas
adc
push
icebp
sub
mov
sub
pop
lcall
lds
ret
and
sbb
inc
jb
into
mov
aam
and
jp
or
outsl
or
js
outsl
rcrb
push
out
sti
xchg
jne
mov
sahf
cmpsb
enter
xchg
in
outsb
lods
outsl
or
out
cmpsb
pop
jg
test
lds
jmp
lret
cltd
fstpt
add
test
popa
and
mov
cmp
aas
cvtps2pd
popf
push
ss
test
inc
scas
insl
ljmp
fmuls
mov
call
dec
inc
daa
jecxz
and
cltd
loopne
aad
xchg
add
dec
fdivrs
subl
pop
test
jmp
sbb
sarb
lret
jo
enter
ss
pusha
sub
insl
pop
cmpsb
jns
jl
pop
hlt
jo
das
adc
out
dec
push
mov
push
pop
xor
push
cmp
adc
push
mov
idivb
mov
insl
rorl
sbb
xchg
inc
or
or
push
xchg
ret
pop
add
pop
es
or
xor
pusha
push
das
call
adc
add
imul
sbb
dec
xchg
ljmp
mov
inc
pop
fistpll
jnp
fstpl
cmp
xchg
scas
push
mov
and
jb
fdivrl
adc
cmp
pop
lea
add
dec
fsubrs
mov
cmp
pop
sbb
xchg
out
mov
xchg
and
out
mov
stos
mov
je
mov
or
dec
pop
lock
or
aas
add
hlt
fidivrl
movsb
or
cmpsb
xchg
hlt
mov
lods
mov
xor
jmp
daa
push
das
sahf
or
pop
mov
inc
mov
inc
scas
inc
lret
imul
adc
sbb
bnd
int
negb
rcrb
lea
outsl
insl
out
or
movsl
sbb
push
adcl
fdivrs
pop
cmp
jns
stc
in
lcall
movsb
std
sbb
das
or
adc
mov
lcall
push
call
adcl
or
fldcw
icebp
push
lcall
pop
pop
je
add
adc
mov
shrb
cwtl
clc
push
leave
ljmp
out
aas
jge
fsubp
shrl
repnz
xchg
fimuls
addl
mov
int3
test
icebp
out
idivb
add
jge
stos
cmpsl
dec
cmpsb
insb
je
cmp
lret
mov
out
ja
jge
cld
mov
stos
enter
das
inc
mov
aad
outsl
in
les
repnz
lret
sahf
xchg
jg
add
mov
cmpsl
adc
pop
rol
inc
stos
fsubrl
push
cmc
dec
jno
cmp
bound
stos
loop
inc
shlb
in
xor
adc
lret
add
cmpsb
push
fiadds
cmp
icebp
negb
jns
subb
jno
das
sbb
sarb
jg
dec
ss
jne
push
lods
aaa
inc
lods
push
data16
aam
insb
and
mov
loope
sbb
out
jb
arpl
jae
inc
roll
adcl
mov
clc
jge
ss
mov
ds
mov
outsb
sbb
fsubrp
test
sbb
cld
xorb
ds
adc
sarl
jecxz
in
dec
cwtl
sub
adc
push
jmp
pop
popf
add
sbb
xor
mov
les
cs
mov
add
mov
bound
sub
and
xor
push
out
cmp
cmp
rorb
fisubs
hlt
mov
jne
icebp
mov
xchg
inc
test
adc
in
stos
les
cmp
xchg
push
push
jmp
aaa
clc
pop
enter
xlat
popf
imul
push
das
push
dec
jns
mov
inc
movsl
stos
sbb
jo
dec
sbb
mov
pop
push
ret
jge
lret
out
inc
fdivs
xorb
jge
mov
inc
loopne
jae
repz
std
pushl
inc
mov
push
inc
in
push
ret
xchg
sarb
clc
ss
mov
cmp
pop
inc
mov
ljmp
cli
out
xchg
sbb
sub
das
fmuls
mov
pop
inc
jg
xor
loopne
xchg
jmp
outsb
jp
pop
push
pop
mov
fs
pop
arpl
jnp
push
jne
fdivrl
lds
aaa
dec
xor
jecxz
push
sbb
fldt
jo
out
mov
les
dec
out
in
repnz
cmp
adc
pop
stos
inc
aad
add
pusha
stos
xor
mov
sub
jno
mov
jmp
adc
jno
cltd
jmp
mov
cli
mov
xchg
ja
mov
push
push
mov
push
out
push
push
repz
in
mov
lods
loop
fsub
xlat
lret
int3
dec
and
dec
ljmp
mov
push
loop
mov
divb
ds
ljmp
mov
int
dec
add
sub
xchg
stc
lea
push
lret
jae
movsl
sub
or
add
sub
xchg
out
cmpsl
inc
pop
addr16
xchg
clc
pop
popf
mov
fistpl
test
cmc
sbb
mov
push
in
and
inc
add
sbbb
in
mov
lds
lret
scas
call
mov
imul
adc
jp
les
mov
push
adc
orl
je
mov
dec
jmp
mov
pop
inc
jbe
cmpl
movsl
pop
mov
pop
jmp
push
icebp
mov
mov
out
jg
aam
pop
cmpsl
push
idivl
movsb
aas
repz
sub
mov
js
movsl
popa
rcrb
rclb
mov
sbb
sbbb
pop
push
mov
ljmp
mov
leave
sub
jae
xchg
outsb
nop
call
xchg
ljmp
cmp
inc
insb
mov
popa
ja
aad
dec
mov
insl
jmp
int3
push
stos
icebp
sti
xor
push
push
sbb
xchg
jle
jnp
stc
daa
inc
adc
out
pop
xor
jae
mov
enter
add
loop
pop
mov
outsl
in
mov
das
jo
and
hlt
xor
sahf
mov
fwait
ds
imul
push
xor
dec
pop
mov
dec
push
inc
gs
dec
cmp
and
xor
push
rorb
add
and
sbb
sbb
loop
in
test
sti
in
add
sub
in
xor
outsb
jp
sub
sti
adc
jmp
sub
pop
sbb
mov
xor
stos
xchg
push
nop
out
sarl
inc
pushf
leave
es
pushf
xchg
dec
pop
adc
cmc
iret
xor
repnz
in
or
xchg
aam
mov
sbb
mov
out
jmp
push
add
aam
inc
aad
stos
outsl
xchg
idiv
mov
ja
dec
xchg
fcmovnu
stc
es
test
enter
jns
mov
sbb
cli
xchg
xchg
test
mov
cmp
scas
aas
ss
pop
push
pop
adcl
jp
pop
push
sbb
xor
and
fmuls
xchg
xchg
cmp
xchg
fmull
sahf
jbe
lret
es
jecxz
cwtl
jp
pushf
mov
dec
imulb
popa
out
pop
mov
and
es
jno
and
arpl
ficompl
adc
jne
nop
nop
icebp
out
insl
sub
fucomi
cmp
loop
push
loope
lock
push
push
adc
es
sbb
or
and
into
das
lret
jl
pop
jno
cmp
rclb
popa
add
and
jmp
outsb
movsl
jne
test
cmp
mov
lret
jmp
cmpsl
bound
hlt
push
in
xor
enter
test
inc
outsl
hlt
in
mov
fcomps
iret
out
adcl
shrl
outsl
jno
pop
cmp
shrb
cld
push
xchg
test
in
fst
addr16
inc
xchg
fistl
dec
push
xor
fistpll
mov
dec
movl
dec
lret
fmull
push
fwait
das
jns
loope
mov
inc
sub
arpl
pop
sbb
rorb
cmpsl
dec
pop
lods
and
gs
add
pop
mov
test
insb
pop
xor
jle
or
ja
lods
jmp
je
sahf
cmpsb
inc
xchg
xchg
stos
cmp
inc
dec
cmpb
pop
add
sbbl
and
jno
mov
mov
add
xchg
jnp
jp
pop
loopne
sub
or
arpl
loopne
cmpsb
push
mov
or
cmpsb
inc
test
sbb
xchg
adc
lret
addr16
jl
and
xchg
dec
sbb
out
addb
xchg
sub
fcmovne
push
fwait
push
mov
jne
dec
or
frstor
iret
jne
leave
pop
mov
les
jmp
mov
jo
hlt
icebp
out
call
sub
cmpsb
or
or
sub
mulb
mov
xor
out
ljmp
subl
xchg
sub
jge
iret
mov
push
xchg
or
pushf
aaa
test
jle
mov
xchg
pushf
imulb
pop
xchg
or
mov
enter
stos
push
adc
call
ds
xchg
mov
pop
pop
or
dec
jne
push
cmp
mov
dec
stc
ja
sbb
pop
in
mov
pop
push
cmc
leave
loopne
and
xchg
inc
rcrl
inc
test
popa
aas
xlat
gs
dec
inc
lods
incl
jge
stos
mov
mov
out
iret
daa
adc
cmp
push
cs
pop
push
test
stc
xchg
sub
or
rorb
jb
mov
lods
cld
mov
pop
sub
mov
mov
fisttps
pop
subb
sbb
sbb
icebp
jb
jne
pop
cmp
push
out
fwait
cli
lods
daa
es
sub
insb
lret
in
ja
cmp
mov
add
push
sbb
xchg
iret
out
jae
dec
dec
arpl
xor
jb
rcrb
jecxz
sub
jb
xor
mov
data16
sub
leave
lods
loopne
mov
fmull
loop
test
cld
pop
mov
sub
subl
adc
enter
sub
jl
mov
iret
add
stos
pop
lds
sbb
add
out
les
jmp
fdivrl
mov
outsb
xchg
push
push
out
fisubl
mov
mov
mov
jb
shlb
jg
dec
in
std
cmp
fcmove
in
add
push
loop
mov
popa
roll
mov
lret
mov
das
mov
push
and
fdivl
dec
pop
mov
jno
out
push
arpl
nop
testl
scas
imul
jg
or
sbb
stos
add
cltd
pop
rcll
andb
idivl
xor
ret
mov
dec
or
xor
xor
loopne
lahf
sub
popa
or
lcall
mov
sub
pop
dec
bound
sub
jl
push
push
adc
mov
add
xchg
add
decl
in
jo
mov
jne
pop
push
out
and
push
add
dec
scas
xchg
js
aas
outsl
cli
sub
fmulp
add
inc
lcall
mov
aaa
mov
les
js
mov
rcll
mov
cmp
push
mov
jns
jl
adc
and
mov
jae
xor
xlat
mov
or
inc
jae
xchg
and
mov
mov
cli
cmp
sbb
cmpsb
jo
pop
dec
cli
popa
xor
out
int
lret
in
jmp
lcall
dec
ficomps
cmp
jno
cmc
jmp
inc
nop
cmp
sbb
mov
call
insl
cs
aas
jl
ljmp
push
jp
or
shr
stos
cltd
add
add
pop
jl
xchg
or
mov
push
jg
dec
sbb
scas
aas
jb
in
iret
rcll
rolb
xor
sub
dec
add
lret
aam
pop
enter
fwait
call
outsl
sbb
subl
xchg
and
inc
pop
ja
hlt
cmc
sbb
dec
dec
lods
test
jnp
xchg
cmp
sub
push
jmp
adc
mov
scas
add
xchg
mov
scas
add
jns
les
adc
pop
cmpsl
xlat
fs
out
cmp
or
push
or
ret
js
rorl
repz
mov
sbb
fucomip
out
mov
sub
inc
addr16
xchg
xchg
mov
add
xchg
or
sub
iret
jle
mov
adc
or
ret
imul
sarb
xor
je
pusha
or
xchg
test
or
in
xchg
stos
lea
fcmove
cmp
imul
imul
or
mov
add
jl
shl
mov
iret
fucomip
fsubr
pop
outsl
loop
incb
subl
lds
push
jns
movsb
adc
or
insb
jae
dec
dec
call
jg
enter
jb
aad
ror
pop
mov
adc
jbe
in
test
xor
lcall
sbbl
cwtl
imul
jae
imul
xor
or
sub
lods
pop
scas
mov
push
lds
int
jnp
cmpsb
xchg
dec
fsubrs
mov
aaa
push
push
outsb
js
add
xchg
cmp
into
push
push
lcall
out
test
stos
loop
xor
inc
dec
push
jp
cmc
in
or
andl
add
push
jns
mov
loope
lods
nop
cwtl
ss
sub
dec
fists
out
cmpsb
ljmp
cs
mov
cmp
push
jg
fildll
sub
hlt
add
mov
sub
test
jbe
cli
cld
jne
jmp
cmp
ss
and
pop
out
pop
mov
pop
outsl
lret
sbb
cmc
in
clc
inc
sbb
out
jb
lea
or
jecxz
fcoml
pop
int
jle
mov
adc
jno
push
in
push
pushf
fstpt
xchg
fldcw
ss
sahf
inc
xchg
pop
push
adc
jnp
and
mov
fstpt
or
gs
pusha
jl
cmp
cmp
cmpsl
mov
lret
out
jmp
xchg
push
lea
pushf
mov
data16
lds
popf
test
loope
mov
inc
and
or
jo
inc
jge
sbb
leave
lcall
mov
sti
pop
insb
xchg
js
inc
mov
add
test
pop
ret
xchg
test
data16
sbb
mov
push
fs
gs
push
or
and
sbb
lds
jmp
fsts
lea
pop
sbb
mov
inc
je
jno
mov
xorb
bound
push
mov
pop
arpl
push
lret
jnp
rcrb
sub
mov
push
inc
and
out
sbb
push
adc
es
jmp
adc
dec
and
inc
popa
pop
scas
mov
sub
jmp
fsubl
xchg
imul
jnp
jbe
push
insb
cmp
std
jecxz
test
jnp
out
call
mov
in
aam
cmpsl
mov
repnz
pop
xchg
andl
push
sbb
clc
dec
out
and
ja
loope
rep
in
out
inc
lahf
mov
xor
iret
or
ret
popf
xchg
adc
out
lret
pop
lret
clc
iret
cmp
add
mov
or
test
repnz
pusha
ficompl
insb
cmc
andb
mov
adc
jne
std
cmp
call
inc
push
push
add
xor
mov
adc
das
and
jae
cmpxchg
jle
arpl
test
out
cs
or
imul
cmpsl
popl
lea
ss
mov
addb
xor
outsb
xchg
pop
cmpsb
adc
cmc
cli
jmp
inc
fnstsw
pop
sub
clc
std
pushl
mov
lock
add
cltd
jle
dec
loope
lret
adc
jns
sbbb
sub
clc
xchg
cli
or
cmp
psadbw
add
lret
scas
cmp
lcall
sub
and
pop
pop
fimull
and
jg
and
insl
adc
mov
stc
lds
lret
or
mov
jb
pop
loop
xchg
dec
outsb
xor
xorb
out
or
cmp
fidivrl
xchg
aad
cld
push
cmc
sti
add
shrl
hlt
inc
fcompl
push
mov
fucomip
mov
das
out
cmp
scas
int3
mov
inc
fsubrs
mov
add
mov
imul
repnz
repnz
xchg
pusha
jne
xchg
jge
cmpsb
xlat
aam
cmp
inc
push
mov
fwait
pop
lret
mov
daa
and
out
mov
mov
sub
mov
inc
movl
lahf
and
fisttpll
mov
add
ljmp
push
insb
lock
mov
sarl
pop
arpl
mov
dec
je
jae
dec
hlt
sbb
cltd
sub
add
jne
std
lock
fstpl
add
sar
dec
mov
data16
inc
xchg
mov
inc
push
sbb
mov
dec
xchg
push
les
mov
cmp
ja
mov
mov
fs
push
testl
std
jns
cmp
ret
push
xchg
lods
movsl
imul
mulb
int
sub
xchg
jb
sbb
lret
enter
aam
dec
lahf
imul
out
mov
cwtl
shlb
mov
mov
subb
mov
jl
or
push
inc
movsb
mov
sbbb
add
call
pop
mov
cli
jge
push
out
adc
push
adc
fnstenv
adc
xchg
add
popa
mov
out
andl
inc
jb
fmuls
andb
clc
or
les
jge
ja
leave
mov
and
notl
or
out
es
xor
or
call
test
popf
or
loope
xchg
sub
pop
sub
push
mov
ret
pop
lahf
frstor
xor
mov
ret
shlb
cli
sub
xor
das
imul
xor
out
insl
xor
mov
jb
sbb
pop
and
faddl
mov
fists
jg
jnp
test
movl
test
mov
mov
adcw
lods
pop
insl
jno
inc
call
scas
jnp
lret
pop
dec
push
mov
inc
mov
and
outsl
pop
adc
push
repnz
scas
mov
and
pop
xor
rcl
mov
pusha
test
pop
mov
or
ljmp
inc
mov
movsb
cmp
lods
sbb
dec
call
sub
rcll
std
sahf
lods
xor
mov
and
lret
daa
lcall
and
jno
mov
out
into
xor
push
push
dec
repz
repz
pushf
jns
enter
test
lret
dec
pop
cmp
push
jp
in
xchg
lahf
or
inc
scas
sub
cmp
and
xor
push
ror
arpl
negl
xchg
out
mov
out
out
jg
pop
fst
fmuls
push
cmc
jnp
rorb
lcall
sub
pop
dec
loope
xchg
add
push
addr16
pop
mov
mov
cmpsl
ss
dec
rcll
jo
aad
movsl
mov
sub
xchg
out
pop
or
test
mov
xchg
testb
mov
or
jecxz
cs
jp
pop
fldl
loopne
out
insb
mov
xor
enter
lahf
and
cltd
xchg
ds
jno
jnp
lods
fsubrs
pop
or
add
sub
dec
jge
aad
insl
xor
mov
xchg
jl
jae
dec
call
popf
fmull
push
dec
dec
jecxz
in
sub
mov
scas
dec
xchg
clc
in
fsubs
xor
or
loop
push
jns
bound
or
jle
cmpsl
aad
lock
sbb
shlb
fisubrl
mov
or
push
test
or
loopw
bound
push
outsb
inc
notl
push
scas
out
lds
fs
into
icebp
pusha
out
cmp
mov
jecxz
pop
inc
jp
les
aas
cld
mov
loope
sub
inc
or
pop
inc
sub
outsb
sub
fsubr
mov
mov
jnp
adc
movsb
movsl
mov
jg
ret
call
jne
enter
add
fmul
nop
and
cmp
fistl
push
out
mov
fs
mov
lret
push
cli
call
out
sub
in
outsl
inc
jp
mov
mov
lock
jmp
lcall
fistps
out
xor
sub
pop
pop
dec
mov
pop
popl
loop
scas
aaa
dec
mov
pop
dec
add
cmpsb
dec
lds
push
sub
ret
or
xchg
into
jne
outsb
mov
jae
xor
movsl
cmp
sub
xor
gs
inc
fimull
in
jnp
data16
aam
ljmp
aas
lret
jmp
pushf
or
cs
loope
setp
daa
aaa
push
xor
rcll
jb
xor
sbb
fiadds
pavgw
mov
sub
sbb
shlb
jecxz
outsl
mov
or
cmp
jmp
and
lret
ret
and
std
push
movsb
aam
ljmp
in
roll
in
fcompl
hlt
in
xor
sbb
jno
xchg
scas
test
into
jmp
and
push
push
mov
jb
push
faddp
and
cltd
sbb
rcrb
and
add
scas
icebp
push
in
cltd
jecxz
mov
xor
mov
mov
inc
or
daa
sub
jge
insb
lret
mov
pop
arpl
lcall
or
cli
sarb
mov
sbb
xor
fcomi
push
mov
and
sti
repnz
jo
jecxz
aas
push
dec
push
inc
mov
or
or
jmp
gs
je
popf
mov
test
push
pusha
das
and
pop
and
push
lds
add
or
lds
sbb
int
xchg
xchg
lea
lds
cmpsb
jle
aam
inc
lahf
mov
push
insb
inc
xor
fcompl
sub
scas
xor
loop
xchg
insl
decl
lret
pop
out
inc
add
xor
push
je
icebp
xor
divl
push
pusha
pusha
int
cltd
mov
xchg
sbb
clc
adc
icebp
movl
push
mov
cmc
xor
outsb
pop
subl
sbbb
sub
lea
dec
cmp
dec
and
js
ret
and
test
movq
pop
sbb
jb
push
fmulp
mov
in
aam
test
in
or
aad
fadd
xchg
cmc
xor
insl
insb
mull
xchg
cmpsl
popf
cld
xchg
cmp
incb
cmpb
lahf
dec
jmp
xor
mov
mov
test
cli
loopne
xchg
loopne
sub
test
cld
aam
stc
or
jg
mov
and
sahf
popf
dec
enter
dec
xchg
and
subb
jno
std
xor
sub
push
mov
sbb
lods
loope
mov
jne
pop
and
jg
sub
mov
aad
loop
fiadds
jp
test
inc
hlt
sbb
subl
movb
imul
push
dec
sub
cmp
dec
stos
sub
imul
and
adc
sbb
pusha
test
cwtl
mov
lahf
fucomi
dec
imul
cmp
gs
aad
cmp
or
or
pop
pusha
into
mov
mov
into
push
popa
pop
ret
das
loope
ret
iret
shll
pop
xchg
loop
xor
jbe
or
adc
in
ret
xchg
fcoms
mov
mov
sarb
js
inc
dec
or
push
add
or
sub
or
mov
dec
enter
push
ret
pop
test
aaa
push
mov
xor
xlat
xor
fisttpl
mov
inc
dec
cmp
cld
xorl
inc
inc
int3
lret
mov
xor
bound
or
jecxz
cld
jns
iret
pop
pop
out
sub
fildll
jb
pusha
arpl
sbb
mov
dec
sub
sub
shrl
out
pusha
int3
add
and
int3
mov
lret
dec
fdivp
or
jae
es
sbb
stos
pop
push
xchg
iret
test
inc
mov
mov
pop
hlt
push
rol
mov
inc
cmp
jnp
icebp
lahf
pushf
jno
sub
pop
or
movsb
stos
pusha
rcr
push
das
xchg
cmp
mov
mov
ret
mov
aaa
rolb
jbe
mov
insb
scas
loopne
adc
mov
test
fidivs
subl
xor
ret
addr16
xchg
bound
out
loope
mov
jmp
mov
xchg
xchg
mov
push
push
cmp
sbb
pop
mov
and
lret
and
sub
out
sbb
add
ja
push
sahf
mov
sahf
rcrb
inc
insl
xlat
sbb
add
fwait
int
dec
pop
in
jmp
pop
sub
xor
scas
out
lock
add
out
xchg
pop
mov
lea
cmp
jnp
adc
mov
jb
inc
xchg
into
add
xlat
int
lock
push
xor
lcall
dec
dec
ljmp
adc
and
and
or
stos
int3
add
arpl
repz
pop
xor
xor
mov
scas
inc
orb
xor
dec
mov
cmpsb
sub
movsl
push
cmp
fidivs
lods
out
dec
and
or
pop
xor
cmp
jle
es
cltd
xor
stos
scas
sub
xor
jmp
mov
push
loop
sti
adc
pop
ljmp
ds
leave
pop
lea
dec
out
adc
jo
out
pop
lods
aad
divps
daa
jmp
xorb
lods
adc
jle
jle
jecxz
or
cmpsb
mov
inc
call
test
cli
arpl
icebp
addl
out
fisubl
inc
cmp
ret
mov
imul
and
sub
hlt
sbb
dec
mov
nop
jb
icebp
pop
lock
leave
dec
mov
lods
pop
and
neg
jno
int3
xchg
mov
lret
fisubrs
inc
or
frndint
jp
clc
int
mov
repnz
loope
sbb
enter
imul
fcompl
mov
out
aas
mov
loopne
aas
shlb
lods
adc
leave
push
add
fnstenv
sbb
sbb
sub
gs
repnz
fsubl
xchg
dec
mov
pop
lahf
shl
and
xor
sarl
pop
adc
push
push
fsubr
and
pop
sbb
fldcw
fbstp
lods
jns
mov
js
pop
lcall
fcmovnb
scas
out
lods
mov
adc
adc
std
popa
ja
clc
xor
xchg
push
inc
pusha
xchg
xlat
jl
and
cltd
cmpsb
in
pop
gs
or
add
push
repz
mov
jg
or
dec
shl
cmp
dec
cltd
iret
scas
fimuls
pop
icebp
lret
loopne
sub
cmpb
xor
dec
nop
and
aad
push
and
fldl
adc
push
and
stc
jne
mov
orps
std
int3
xor
or
mov
bound
cmp
pop
cli
imul
fistps
sbb
repnz
imul
lock
mov
xchg
push
or
notl
push
lods
lods
add
mov
sub
cmpsl
mov
ja
pop
shl
rorl
add
mov
subb
ja
push
scas
jnp
mov
dec
push
pop
faddp
test
cld
cmp
fwait
adc
xchg
ja
cmp
ds
jo
mov
jae
frstor
arpl
add
push
jg
mov
out
insb
in
data16
push
mov
sub
jle
dec
mov
adc
mov
enter
pop
out
adc
out
sub
fsts
push
sub
pop
popf
fldenv
clc
pusha
mov
push
xchg
js
std
mov
cmp
outsl
shl
sub
cmc
cmc
ja
lods
add
cmp
mov
add
mov
into
add
fldcw
loopne
out
dec
jge
sbb
test
scas
ja
lahf
mov
int
sti
mov
loop
insb
adc
and
cmp
in
loopne
lock
jmp
sbb
sbb
mov
in
lock
push
xchg
dec
insb
into
shl
sub
xor
icebp
adc
or
sahf
pop
and
test
into
jmp
mov
stos
and
dec
mov
and
iret
ret
or
push
sbb
in
repz
xchg
mov
dec
test
push
repz
rcr
cmp
pusha
cmp
lods
mov
aas
jae
cmp
popa
lods
push
into
lahf
pop
pop
or
cmova
mov
pop
mov
scas
test
flds
insb
inc
xor
repnz
nop
fdivs
mov
stos
lds
in
cs
js
pop
jmp
push
xchg
insl
and
test
dec
fadds
mov
cmp
lret
cmp
jno
xchg
or
roll
lcall
mov
gs
adc
sarl
adc
cmp
out
push
lahf
push
xor
sbb
jl
orb
loope
stos
icebp
mov
mov
fs
mov
lods
sbb
mov
mov
mov
icebp
sbb
cmp
dec
fwait
mov
mov
mov
int3
or
mov
cmp
add
shl
inc
test
mov
ja
mov
test
sub
adc
es
leave
imul
out
out
xor
in
jb
aaa
aad
test
mov
daa
sub
pop
stc
xor
popf
mov
add
aam
shll
aas
div
mov
and
jle
sbb
xchg
inc
outsl
fs
xor
addr16
stos
pop
add
sahf
xorb
or
jb
decb
mov
adc
fdivs
pop
mov
pop
jl
jo
jp
mov
pushf
push
adcl
out
mov
jmp
inc
stos
lahf
or
loope
dec
mov
lret
push
mov
jl
jge,pt
lock
adc
outsl
dec
xor
sbb
sbb
insb
jle
popa
and
cld
xchg
sub
add
xchg
gs
retw
negb
cmpsl
rorb
imull
mov
sub
add
flds
stos
mov
fs
cmpsb
dec
aam
bound
dec
sahf
loope
dec
aaa
leave
shl
shll
fneni(8087
ffreep
fsts
dec
aad
clc
cwtl
or
lds
mov
bound
jne
in
lahf
push
jae
ja
pop
push
mov
or
mov
mov
icebp
hlt
pop
dec
aad
mov
in
outsb
push
ret
pop
aad
dec
fsubrs
sub
das
shr
sub
mov
sbb
rcr
xchg
xchg
iret
in
add
es
es
sti
xchg
jo
imul
add
bound
fcomps
fildl
neg
stc
sbb
mov
xchg
std
and
stos
mov
xor
loope
loopne
adc
pop
pop
jnp
xchg
sub
mov
mov
add
xchg
jge
mov
dec
xor
push
jno
mov
jno
dec
mov
fldl
rcll
sbb
gs
cmc
out
outsl
js
inc
dec
jb
mov
sbb
sarb
fs
rol
lods
adcl
jbe
movl
fsubrl
mov
inc
pop
inc
in
jbe
aas
pop
add
push
icebp
popf
cmpsl
inc
xchg
adc
in
out
daa
rclb
ret
data16
mov
lret
sub
aaa
push
mov
fnstenv
sub
push
loope
dec
pushf
data16
pop
or
call
xchg
jg
pushl
ja
push
pop
push
mov
pextrw
nop
movsb
nop
ds
outsl
sub
mov
sub
lods
adc
ss
pop
faddl
cs
scas
mov
dec
jno
ss
arpl
rcrl
sbb
js
pop
pop
lods
aas
mov
repnz
stc
hlt
das
mov
dec
push
or
push
pushl
hlt
aas
sub
pop
cmpsb
jle
push
or
aas
repz
test
mov
arpl
ds
dec
jbe
dec
mov
loopne
aas
cmp
mov
out
cmp
adc
cld
nop
sbb
add
subl
dec
jnp
aas
frstor
and
int
mov
mov
clc
xchg
and
xlat
enter
ds
aas
scas
addr16
cwtl
mov
push
out
ds
out
cmp
je
cmp
pop
fidivrl
out
leave
clc
dec
and
icebp
nop
sub
fbld
push
cmp
sub
lds
daa
push
jae
fidivs
mov
fidivrl
imull
or
fs
inc
sbb
insb
ret
popa
add
xor
mov
push
stc
popa
jo
inc
sahf
aad
push
inc
lcall
pusha
in
fisubl
xor
pop
lea
imul
dec
hlt
fstpt
push
pop
popf
dec
movsl
in
lret
xor
mov
or
sbb
xchg
push
sbb
dec
pop
ja
push
pop
push
shlw
std
leave
stc
movl
and
out
iret
loop
jle
test
rdtsc
add
mov
xor
and
imul
dec
adc
dec
cmpsb
sub
idiv
shll
mov
pop
icebp
jns,pn
fldcw
rolb
jl
andb
in
sbb
mov
mov
cltd
les
stc
popf
adc
test
roll
dec
add
mov
bnd
das
lcall
inc
cmc
sbb
xor
xchg
mov
mov
jp
jbe
cmp
in
lock
mov
repnz
pusha
and
dec
push
and
pop
add
mov
lock
mov
jo
test
lret
cmp
loop
in
out
adc
pushf
ja
pushf
hlt
jbe
xchg
negb
jecxz
std
xlat
out
push
mov
add
ds
push
lret
xchg
cmc
mov
sub
xor
fildl
sbb
dec
sub
fucom
sub
pop
xor
es
xchg
in
xor
xor
mov
adc
cltd
mov
push
inc
fwait
sbb
pop
ret
push
gs
lret
repz
pop
insl
xchg
mov
outsb
mov
mov
push
pop
lods
push
inc
jecxz
and
mov
jmp
xchg
cmpsl
push
sarl
push
cmc
out
cmp
inc
loopne
enter
inc
into
repz
aad
adc
in
or
movsl
jp
js
xor
push
add
jo
ja
lock
or
cmp
fadds
stos
mov
xchg
scas
jns
push
and
ffree
jecxz
lret
and
xor
push
imul
xorb
adc
cmp
cld
test
xchg
cli
jnp
inc
pop
mov
rorl
mov
call
addr16
add
mov
push
stc
mov
jmp
scas
xchg
fisubs
clflush
jecxz
ja
test
in
aas
shll
inc
sbb
add
add
sub
iret
push
add
mov
mov
push
cmp
or
movsl
lret
push
push
rcll
sar
xchg
sub
cmpsb
popa
mov
into
fs
test
mov
das
test
pop
clc
fwait
in
aam
test
icebp
sbbb
bswap
add
and
aam
jns
rep
dec
cli
inc
imul
orl
lods
insb
jae
into
xor
imul
add
sub
rcrl
xchg
mov
mov
popa
in
aad
mov
sbb
cmp
add
mov
xadd
fsubrs
dec
sub
cld
nop
mov
push
add
pop
iret
or
cmp
xlat
xchg
dec
or
and
loop
xorl
fistl
or
mov
or
xchg
dec
out
out
fs
js
or
jmp
test
pop
dec
loop
xchg
stc
in
iret
iret
lcall
fistpl
cmpsb
pop
adc
xchg
pop
and
nop
cmp
pop
push
dec
xchg
stos
sub
int3
sub
mov
and
das
aad
pop
dec
lret
cmp
xchg
daa
add
add
inc
rcl
daa
push
out
inc
and
or
daa
cmp
xor
sub
sahf
adc
dec
repz
jecxz
jg
pop
sbb
scas
test
pop
jge
jns
dec
int3
add
jne
sub
jg
dec
lahf
scas
push
sti
add
pushf
and
push
cmpsw
sub
nop
sbb
jne
psrld
lret
pop
cmpsb
push
jae
xchg
iret
pusha
mov
fdivs
clc
cmp
mov
sbb
imul
test
push
mov
or
mov
iret
js
dec
sti
sbb
ret
pop
mov
lods
les
push
xor
jne
mov
je
insl
cli
or
push
adc
sbb
pop
dec
cli
aas
clc
mov
add
inc
arpl
andb
js
out
loope
popa
lock
sub
addr16
ja
sbb
push
sarl
addl
and
sbb
jle
arpl
imul
dec
or
das
out
pop
mov
clc
xchg
sbb
fs
in
jle
cltd
mov
pushl
xchg
adc
sub
ficoml
mov
fnclex
sbb
xchg
cwtl
test
out
lahf
ss
stos
lds
mov
lret
add
mov
xchg
cmp
cmpl
sbb
jns
lret
testb
xlat
adc
cmp
or
test
mov
pop
fcomip
iret
mov
ss
outsb
ror
cmp
andl
xchg
or
or
jl
and
cmp
jg
cltd
test
pop
adc
fisttpll
call
fistl
loope
xchg
stos
insb
dec
jae
cli
ret
xor
push
add
mov
cli
jb
push
test
test
push
xchg
imul
fidivl
or
scas
in
cmp
scas
add
sub
pushf
fildl
fisubs
jno
add
lret
or
ficomps
add
dec
enter
in
lea
rorl
decl
lods
push
xchg
rcll
int3
add
and
jmp
dec
lea
shrb
mov
mov
cmp
repnz
sti
in
add
scas
mov
mov
push
cmp
test
xchg
sub
jo
adc
fwait
cmpsb
daa
jg
or
gs
xlat
dec
test
jp
mov
inc
mov
or
pop
jnp
add
arpl
pop
dec
shl
add
fildl
pop
xor
ds
xchg
push
ljmp
sub
ja
repnz
outsl
jno
and
cmc
hlt
pop
cmp
into
cmp
clc
orb
test
pop
cli
push
xchg
notl
mov
pushf
push
inc
addr16
scas
icebp
jmp
add
test
add
xor
sub
xchg
lods
mov
int
dec
cmp
in
adc
inc
ret
movsl
mov
aas
cmpl
mov
sarb
dec
int3
jmp
cli
jecxz
sbb
mov
movsl
jne
xor
in
fwait
dec
leave
mov
add
mov
mov
not
shrl
ljmp
sbb
cmp
push
cmp
and
xchg
xchg
fcmovne
dec
enter
dec
and
mov
pop
sbb
jns
or
or
pusha
loopne
js
xchg
dec
cli
jae
dec
adc
jl
int3
mov
sti
mov
loop
loopne
jl
inc
adc
fldcw
dec
sahf
ret
xchg
out
daa
sbb
add
lods
ficompl
push
cmp
stos
dec
mov
outsl
out
push
shrb
xchg
rorl
dec
xor
add
push
cmp
pop
adc
dec
xor
jge
lods
and
mov
shr
add
hlt
and
mov
clc
fmul
add
and
out
int
jno
popa
and
int
xor
rcll
jmp
nop
fcomps
or
pushf
push
or
mov
adc
push
dec
repnz
push
dec
sub
adc
jbe
mov
push
cmpb
dec
sti
cmc
push
inc
pushf
xor
or
xor
sub
and
cs
cld
mov
cli
repnz
lock
shll
and
mov
mov
mov
mov
dec
xor
mov
rcll
dec
ja
mov
dec
mov
orl
insl
xchg
lret
add
mov
ret
sahf
cmpsb
and
mov
pop
lods
mov
mov
dec
iret
popa
jbe
sub
jecxz
rcrb
cs
subb
out
xor
and
arpl
adc
ljmp
in
sub
mov
mov
jns
push
push
xchg
insb
fyl2x
loopne
jne
pop
sub
sub
mov
lcall
dec
xor
in
lcall
inc
or
add
sbb
sub
xor
xchg
mov
ficoms
loope
scas
inc
push
or
cld
pop
js
xchg
aad
fadds
dec
fimuls
mov
movsl
jle
pop
mov
cmp
inc
xchg
cmp
pop
adc
push
sti
sbb
inc
inc
je
push
imul
sub
lock
pushf
lret
fwait
es
arpl
ds
in
sbb
leave
shrb
pop
popa
inc
jne
adc
popf
icebp
movl
add
fs
popa
cmp
lock
ret
xorl
fwait
jg
sbb
pop
cmp
mov
fidivl
les
jae
xor
xor
xchg
out
in
jbe
mov
cmp
cltd
adc
fsubr
rolb
mov
fsubrl
xchg
mov
enter
xchg
mov
jne
inc
push
ss
test
mov
mov
sub
jo
mov
adc
xor
xor
out
or
mov
xor
in
jmp
lcall
dec
xor
int
or
jge
xor
popf
lods
dec
sub
sahf
inc
adc
jp
loopne
cmpsb
or
lods
sbb
das
leave
cmp
testb
jp
aad
scas
cmc
mov
sarl
fsubrl
mov
arpl
push
pop
ret
push
cld
imul
imul
test
xlat
lcall
or
leave
adc
jmp
popa
xor
mov
sti
and
mov
mov
jge
xchg
imul
arpl
dec
pop
and
stc
pop
lcall
and
dec
push
into
gs
mov
push
sbb
and
xor
mov
ret
bndldx
pop
cmc
push
mov
cmp
mov
and
cmc
cmpsb
data16
mov
xchg
mov
stc
and
cld
jmp
cmpsl
sub
repnz
fstpt
lea
adcb
je
rclb
mov
cmp
aaa
lret
in
ror
push
ljmp
xlat
mov
fdivrl
call
in
andb
inc
sbb
stc
std
xchg
test
loop
pop
lcall
ret
enter
mov
mov
sub
dec
lods
and
outsl
push
sub
sti
adc
and
inc
jb
cmpb
mov
rol
ror
adc
gs
insb
inc
add
push
inc
cmp
jg
cmpsb
lea
mov
and
mov
je
gs
insl
add
aad
stc
jl
test
mov
test
pop
dec
sahf
mov
cmpsb
jo
ret
icebp
xor
adc
xor
loope
mov
into
lret
arpl
dec
rcrl
fwait
gs
popfw
pushf
cli
leave
jb
xchg
mov
sub
cmc
push
aam
cmp
push
stos
fistl
and
mov
cmp
negl
xchg
pop
jmp
sub
add
test
and
dec
test
shrb
jmp
xchg
inc
lahf
push
insb
xchg
arpl
hlt
or
repnz
idivb
push
into
das
jne
cmpsb
pop
sub
xchg
scas
bound
mov
test
aad
mov
xchg
rolb
inc
aaa
xor
pop
orb
xor
insb
bound
inc
mov
movsl
mov
test
mov
mov
mov
sbb
jmp
outsl
fnsetpm(287
sub
repz
push
cmp
lods
data16
out
mov
in
call
cwtl
pop
loop
mov
sub
sub
cmc
ss
lcall
mov
jecxz
dec
xchg
adc
das
cwtl
pop
scas
outsl
and
cmp
stos
cmp
aas
les
inc
lea
sub
xor
in
sub
fdivl
jnp
xlat
sbb
adcl
jmp
mov
scas
add
and
ret
cmpsb
jmp
arpl
cmp
push
xor
mov
push
aaa
xor
int3
or
lret
mov
lahf
bound
mov
loope
imul
insb
out
adc
clc
fbld
push
in
dec
stos
sti
call
rorl
mov
hlt
add
mov
adc
adc
jg
scas
rcrb
xor
inc
jae
cmp
add
in
arpl
xchg
test
ds
mov
sub
gs
jne
in
in
popf
push
jl
gs
sti
adc
fnstcw
pop
stos
aaa
and
inc
loope
xor
jle
xor
fwait
inc
pop
xchg
repnz
insb
cltd
rolb
aad
aas
xchg
les
and
inc
push
add
or
das
mov
mov
daa
sbb
roll
mov
addl
adcl
push
fld
push
xor
ret
sbb
pop
sbb
jl
fsubs
or
sbb
sbb
lcall
incl
mov
and
arpl
out
sarb
push
jmp
push
fs
cld
xlat
icebp
push
ficomps
repz
add
adc
sub
sarb
dec
stos
xchg
cmc
scas
lea
xchg
fwait
mov
or
ficomps
mov
inc
mulb
test
pop
imul
outsb
iret
inc
cmp
mov
into
gs
mov
loopne
xchg
icebp
mov
push
sbb
repnz
test
pop
rclb
es
or
in
shr
mov
jge
dec
xchg
sahf
cmp
dec
xor
jns
dec
sbb
xor
cmp
inc
jae
mov
sbb
sahf
or
xorl
push
jno
ds
jmp
loop
shr
mov
add
scas
push
push
imul
call
push
mov
int3
stos
int3
into
mov
movl
addr16
cmp
repnz
push
mov
inc
ret
mov
mov
xchg
lcall
lock
popa
inc
pop
fdivrs
lcall
rcrb
pop
cmp
mov
xor
lea
jg
call
fwait
stos
pop
cltd
cmp
repnz
inc
cmp
add
add
xorl
test
js
xchg
aaa
adcb
xor
lods
mov
and
insb
int
fucomi
in
leave
jb
or
xor
sahf
stc
add
das
arpl
pop
not
jne
push
mov
dec
jb
sbb
cmp
add
daa
mov
imul
mov
mov
cli
xor
lret
ds
jge
or
xor
dec
into
inc
andb
jg
fwait
cmp
ud2
add
in
xchg
sbb
ret
sbb
adc
xlat
rcr
jmp
ljmp
sbb
jmp
cmp
int3
fsubs
in
jg
push
stc
jae
pop
popf
xor
mov
shll
adc
notl
cmpsl
btsl
cmp
cmp
outsl
pop
cmpsb
sarb
int
in
pop
cmc
sbb
cmpsb
pop
inc
clc
std
movsl
xlat
je
pop
jns
icebp
adc
mov
mov
or
inc
jne
out
xchg
xchg
jl
ret
cmp
adc
cmpsb
into
sub
mov
insl
dec
mov
repz
mov
cmp
sbb
pop
dec
sti
jg
dec
sbb
mov
outsb
insl
pop
cltd
int3
mov
jne
push
sub
jb
mov
jecxz
lret
jns
orb
adc
push
sub
pop
mov
cmp
dec
and
mov
hlt
je
daa
mov
sub
icebp
mov
jl
jne
cmpsb
sahf
xchg
stos
pop
xor
and
jnp
mov
add
adc
test
sub
repz
popa
mov
push
std
mov
lds
dec
and
out
dec
pop
and
cmp
sbb
aaa
fdivp
rorb
icebp
aad
xchg
incb
popa
jb
push
push
mov
or
cmpl
push
or
cmpsl
icebp
sbb
jbe
xor
pop
shl
imul
mul
mov
lds
or
test
gs
or
test
ss
add
jmp
in
xchg
jo
cld
aaa
xor
and
mov
aam
data16
es
arpl
jmp
jno
inc
jecxz
fistpll
push
pop
ss
and
add
adc
loope
push
dec
xchg
adc
movsl
aas
xor
xor
int
shrb
repz
xchg
in
cmpsb
aaa
leave
sbb
xchg
mov
push
adc
fsts
pop
xchg
sbb
pop
jp
mov
stos
push
dec
push
ror
dec
icebp
add
jge
xchg
lock
int3
mov
inc
cmp
and
push
dec
pop
adc
xlat
adc
fwait
xor
and
js
sbb
sbb
in
dec
ja
lds
outsl
mov
cmp
add
push
add
pusha
cli
ss
jnp
fiadds
out
mull
add
les
xor
je
mov
outsb
rclb
or
inc
inc
xrstor
xor
sbb
ret
jmp
mov
iret
jns
dec
decb
adc
fidivrl
lock
mov
mov
and
mov
movsb
movsl
int
ds
cs
loopne
sbb
shll
out
rolb
sbb
pop
movsb
cmp
add
cs
mov
or
pop
arpl
dec
dec
inc
mov
cmpb
insl
fisttps
inc
rorl
dec
andb
mov
out
push
in
cmpsb
xlat
mov
xchg
test
adc
mov
add
dec
jp
jbe
add
jg
fimuls
mov
or
and
sub
mov
push
xor
push
dec
jmp
or
xchg
out
mov
pop
lock
sbb
xchg
xchg
push
insb
sbb
mov
lods
push
jle
sbb
pusha
mov
adc
aad
xor
jns
lret
cmp
dec
lcall
out
pusha
in
hlt
aas
in
jnp,pn
adcb
push
loop
mov
insb
aas
and
push
xchg
cmpsb
scas
xchg
xchg
sbb
hlt
push
pop
adc
repz
jb
jnp
jns
lcall
jo
xor
test
mov
icebp
inc
xchg
mov
mov
popl
xchg
adc
or
dec
sub
test
outsl
jo
jmp
push
and
jnp
adc
sub
adc
das
mov
jl
clc
mov
je
mov
ja
mov
push
adc
pop
push
and
dec
scas
rcll
push
shr
push
add
in
insb
aad
and
std
repnz
in
xlat
or
sbb
or
mov
mov
loopne
test
jns
mov
sbb
addr16
mov
jae
push
dec
out
and
adc
cmp
movsl
fwait
test
enter
ljmp
aas
lock
icebp
push
or
mov
jmp
pop
cmc
cli
lea
test
sahf
lcall
imul
lds
inc
cmp
sbb
mov
leave
sub
inc
mov
loope
add
inc
jnp
les
jne
mov
testl
pop
dec
cli
dec
jno
pusha
in
jge
insb
loopne
lret
out
mov
cmp
int3
jecxz
add
cld
gs
jp
mov
or
sub
cs
aad
imul
clc
roll
jmp
scas
mov
sub
jae,pt
stos
jl,pt
jmp
xchg
mov
lret
notl
movsb
mov
addr16
push
cmpsl
in
fcomip
ljmp
cmp
push
adc
sub
popf
addr16
pop
cmp
xorl
mov
pop
jbe
xchg
lcall
clc
enter
pop
dec
pusha
sbb
mov
loop
jmp
pusha
daa
cld
out
sbb
adc
lds
cmp
stos
scas
sbb
cli
cmp
fisttps
push
and
addr16
add
xchg
scas
adc
adc
jne
outsl
mov
scas
in
xchg
pop
fldt
adc
movsb
vandnps
pop
rolb
lcall
or
scas
mov
jle
mov
mov
repnz
loop
pop
cld
jno
mov
sub
sbb
hlt
inc
ds
sub
and
lods
jae
push
mov
xchg
mov
loopne
test
mov
xor
pop
cmp
enter
call
or
sti
cmp
in
mov
jecxz
jae
pop
jno
inc
jmp
jp
inc
mov
add
cmc
xchg
mov
mov
mov
iret
sbb
int3
cmp
and
loopne
testb
sbb
mov
outsl
imul
fs
iret
mov
push
cmp
xchg
cmp
jb
ja
js
ja
stc
popl
insl
ss
insb
es
scas
fsubrp
cmp
push
adc
out
in
scas
jmp
mov
outsl
test
div
xor
cmc
pop
cmp
and
mov
in
sbb
jmp
mov
test
mov
sub
mov
test
cmpsb
xor
mov
cmp
cmp
add
stc
ds
adc
movsb
sti
dec
dec
xchg
fwait
movsb
mov
loope
dec
cmc
cmpsb
fsts
xorb
jb
popf
rcrb
mov
jmp
fs
sub
scas
xchg
push
pop
pop
jno
mov
testb
lods
rorl
clc
push
cmpl
push
push
fcmovbe
push
testb
mov
xchg
sub
xor
jl
jge
sub
cmp
daa
lahf
mov
push
clc
movsb
sub
mov
lock
shll
daa
sbb
int3
sti
or
out
add
out
push
fucomip
cmp
pop
mov
rcl
pop
cmp
int
mov
mov
das
ret
mov
test
mov
add
jl
jge
push
popf
xchg
jne
das
jbe
dec
mov
xor
inc
ss
ret
jnp
push
test
leave
jmp
adc
jns
out
pop
rorb
jl
testl
fsubrs
jl
mov
sub
jns
mov
data16
in
or
das
add
inc
in
lahf
mov
pushf
adc
jo
lods
jg
mov
pop
adc
sbbb
inc
push
js
pop
std
flds
cmp
fdiv
mov
cmc
idivb
in
aad
rclb
push
sarl
jno
adc
push
mov
lods
lahf
imul
filds
cmp
test
inc
inc
test
mov
jg
lret
scas
cmpsb
scas
pushf
sti
sbb
cmp
scas
jp
inc
dec
in
dec
add
mov
fs
imul
jmp
mov
lods
push
and
mov
out
movsb
lods
int
int
cltd
pushf
mov
icebp
cmp
ds
aaa
fsubl
lds
and
fnsave
pop
xor
ja
jns
jno
jge
negl
sbb
mov
adc
dec
cltd
pop
pop
xor
outsl
in
and
jmp
pop
jecxz
cmp
test
adc
fisubrl
call
xor
add
mov
rorb
loope
sub
inc
sub
std
stos
or
cmp
push
stc
repz
faddl
sub
mov
mov
leave
push
jbe
js
roll
push
xchg
sub
jb
shl
inc
inc
push
insb
ja
sbb
fdivr
sbb
loope
les
cwtl
and
xchg
sbb
outsb
cmovs
lret
inc
movsb
rcrb
loop
cmp
and
mov
daa
pop
push
roll
clc
mov
push
or
or
push
pop
mov
out
pop
or
sbb
cmpsb
lret
lret
test
aad
mov
rcrb
xchg
or
mov
test
xor
test
je
sbb
lcall
xlat
mov
mov
xchg
js
push
test
std
push
sti
orl
das
inc
into
rcll
xor
jge
aas
cmp
outsl
cmpsl
adc
xor
movsb
clc
pop
push
cmpsl
sub
fmul
shl
cmp
jbe
inc
push
lcall
mov
aad
outsb
ret
sbb
fsubrs
pushf
jmp
inc
int
fadd
pop
enter
rolb
sti
cmp
fsubrl
pop
cmp
negl
adc
out
mov
sbb
je
loope
loopne
popa
adc
xchg
jb
cltd
test
les
jge
push
mov
adc
sahf
sbb
dec
fistpl
outsb
sbb
xchg
gs
mov
mov
sbb
xor
or
sub
nop
outsl
loope
jge
in
pop
push
mov
mov
pop
leave
push
cmp
inc
fucom
xchg
insb
enter
sbb
hlt
dec
add
inc
push
je
into
xchg
push
or
jns
dec
popf
inc
test
xchg
rcrl
cmpb
dec
lea
fcoml
jae
mov
shlb
mov
push
imul
sarl
lret
std
mov
jb
inc
ret
pop
cwtl
sbb
dec
outsb
pusha
push
insl
int3
xor
repnz
add
pop
hlt
xchg
daa
cmc
test
sbb
std
jl
rcrl
or
sbb
imul
pop
test
je
lcall
rolb
add
dec
leave
and
movsl
jo
gs
jne
ja
imull
pop
sbb
lods
xchg
int3
lea
les
lods
idivl
push
enter
fisubs
movsb
call
xor
das
in
mov
nop
data16
push
decb
mov
sub
inc
in
jbe
sbb
cmpsb
xchg
call
loop
dec
cmp
in
fbstp
gs
xlat
ds
mov
push
cmp
sti
rcl
or
xchg
mov
jae
mov
sbbl
xchg
hlt
dec
imul
mov
push
jl
push
fisubrs
push
xchg
dec
out
iret
loop
arpl
mov
pop
je
jns
in
mov
and
mov
jl
mov
mov
dec
std
cmp
add
cmovl
and
inc
sbb
cmp
addr16
push
push
mov
icebp
inc
dec
int
xchg
in
xlat
aas
mov
iret
int3
jne
test
mov
decb
add
pop
pcmpeqb
popf
lds
mov
and
or
fwait
xlat
fs
pop
pop
rcll
int
or
fldt
lds
out
sub
pop
cltd
and
aad
out
cmp
rcr
ss
into
leave
test
dec
shll
dec
hlt
ljmp
inc
mov
sub
mov
pop
test
ja
xor
pop
rolb
push
mov
or
enter
and
push
cmpsb
and
cmp
jb
ljmp
add
scas
dec
cmp
dec
sub
push
mov
cmpxchg
fistl
or
pop
lock
mov
es
xor
fisubl
ds
inc
mov
movsl
out
daa
leave
xor
or
add
inc
push
hlt
cmp
mov
ficompl
shlb
imul
imul
aam
jne
xchg
fnsave
sbb
dec
aam
fdivl
hlt
push
jno
dec
sti
ljmp
push
inc
fs
repnz
scas
or
add
jle
xcrypt-ecb
cmpsl
dec
inc
sbb
push
insl
dec
stos
push
pop
dec
loop
cmp
jmp
cs
push
ret
xchg
inc
sub
inc
xchg
xchg
imul
pushf
addr16
fwait
cmp
lret
in
xchg
out
in
fstpt
jno
fistpll
out
pop
stc
in
push
fisubs
call
lds
xor
push
lock
sbb
jmp
sub
add
inc
scas
mov
jl
dec
ja
nop
cld
add
pop
clc
jg
add
test
pop
mov
rol
xor
jl
cmpsl
sbb
lcall
leave
or
insb
stos
lahf
and
cwtl
es
mov
sahf
shlb
test
rclb
rclb
cmp
sbb
out
jg
mov
jecxz
aam
mov
adc
insl
add
pop
pushf
jl
jl
sbb
stc
adc
pop
mov
dec
or
pop
mov
lods
adc
xchg
inc
fisttpll
mov
imul
cmp
ret
dec
scas
pop
xchg
sbb
fisubrl
ja
xchg
and
sub
or
xchg
push
push
or
push
subb
int
pushf
sub
mov
insl
lds
adc
mov
adc
insl
fdivrs
cmp
xchg
popf
aaa
frstor
mov
xlat
cwtl
mov
and
mov
sub
mov
inc
xor
xchg
sub
xchg
or
inc
dec
push
pop
mov
andl
xor
pop
pushf
and
push
sub
xor
pop
adc
lock
jno
es
sarl
gs
pushf
fistl
add
mov
adc
in
cwtl
test
jae
jp
xor
hlt
loope
stos
lock
movb
jo
cld
add
cltd
in
or
xor
out
adc
push
sub
mov
inc
lret
inc
stos
addr16
ja
movsl
leave
daa
cld
mov
iret
hlt
sub
jns
dec
sti
cmpsb
daa
inc
mov
mov
jmp
push
cmp
rolb
cmp
push
jmp
dec
je
push
cmp
je
mov
test
repz
push
enter
sbb
stos
iret
insb
push
das
rorb
sub
popl
add
mov
mov
iret
mov
inc
das
sbb
inc
adc
cs
divl
leave
dec
adc
push
mov
adc
call
push
dec
inc
sbb
jl
scas
xchg
cli
mov
orb
mov
ret
ja
fistpll
pop
fbstp
lret
or
mov
gs
mov
xor
jbe
outsb
sbbl
aad
outsl
fldcw
roll
int
rclb
jbe
or
inc
aaa
mov
sti
leave
sbb
mov
clc
insb
sahf
mov
dec
push
mov
push
mull
out
dec
clc
movsb
xor
xor
stos
xorl
push
outsl
fstp
xor
pop
cmpl
push
roll
sbb
rcll
movsl
jnp
jp
jp
cmpsb
mov
es
ss
fs
int3
mov
xchg
fxch
shrb
add
into
push
jmp
cmp
cmp
imul
or
imul
dec
test
xchg
or
push
cli
jp
pop
push
stos
insb
mov
and
jle
loop
rolb
sbb
pusha
in
and
or
jmp
int
push
dec
insl
xchg
repz
mov
out
jle
cld
cmpsl
or
cmp
jge
mov
jp
sti
sahf
loope
movsl
lea
lcall
cmp
inc
into
outsl
cmc
push
and
loopne
mov
jge
lea
add
mov
mov
out
cmp
andb
mov
out
loop
mov
aaa
inc
or
jns
arpl
jo
shrl
jge
aaa
enter
or
xchg
lahf
in
xchg
movsb
mov
adc
inc
adc
sbb
xchg
xchg
fiaddl
js
and
in
xchg
xor
andb
mov
push
lret
adc
mov
jne
jecxz
inc
sbb
push
cli
in
ja
nop
mov
or
iret
push
or
mov
add
rcl
dec
mov
xor
mov
push
xor
cmpsl
dec
repnz
ret
sub
cmp
mov
flds
sub
popl
pop
mov
stc
shll
mov
lcall
or
icebp
pusha
adc
lea
sub
cltd
and
mov
sti
sub
lds
scas
call
stc
je
psraw
inc
dec
cmpsb
jp
mov
insl
xor
xor
pop
or
add
fistl
in
cmp
inc
shll
pop
stc
scas
pop
fiadds
xchg
sti
aam
add
mov
daa
mov
jp
add
pop
jno
jle
fmull
aas
in
stos
inc
sbb
push
add
push
pop
fsubrs
jle
adc
mov
sub
push
fisttps
mov
mov
int3
lcall
mov
inc
shl
and
add
xchg
xchg
mov
stos
lcall
sub
adc
mov
jne
lock
dec
xor
sbbl
out
adc
loope
sbb
mov
jne
js
iret
je
jecxz
or
sbb
mov
cmpsb
xchg
mov
das
cltd
out
shlb
test
adc
in
jp
lds
xchg
mov
ret
adc
cmp
dec
imul
das
lods
ficompl
repz
fsqrt
and
mov
mov
rolb
adc
sub
add
or
xchg
xchg
ja
jecxz
push
jle
mov
jb
icebp
sarl
cmp
cmpsb
out
negl
mov
js
shl
bound
aam
dec
fadd
or
dec
inc
out
pop
xchg
or
and
xor
in
std
or
or
sub
dec
adc
xchg
addr16
jecxz
adc
sub
push
dec
popf
fsts
pop
or
jo
mov
mov
test
aaa
jo
jne
aam
cmp
loop
pushf
scas
xchg
xchg
cmp
ret
mov
mov
sbb
in
aaa
movsl
movsl
adcl
nop
icebp
pop
scas
in
mov
cmp
cmp
mov
stos
xlat
cmpl
fimull
xlat
aam
nop
pause
dec
mov
and
loope
and
adc
xchg
jne
int3
das
dec
popa
xchg
aaa
pop
iret
add
mov
outsl
stos
je
aas
mov
or
mov
xor
pusha
mov
aad
mov
sub
add
adcb
add
sub
ss
movsl
lods
inc
pop
add
daa
fwait
adc
ja
push
sahf
mov
xchg
int3
sarl
cmp
clc
into
inc
repz
ficomps
push
outsb
fnstenv
inc
popa
sbb
lock
cmp
jno
les
xchg
jecxz
insl
aam
cltd
mov
xchg
sbb
add
sub
jl
xchg
or
pop
jg
icebp
stos
imull
daa
sbb
cmc
popf
jb
and
xchg
fsubp
rcrb
sbb
jo
xor
adc
test
daa
mov
out
mov
iret
mov
std
je
sbb
or
mov
mov
std
mov
adc
jnp
inc
out
push
cmovp
fisttps
push
dec
fnstcw
aam
mov
jl
loop
das
test
push
jb
lds
push
push
int
jne
in
jo
lret
xchg
pop
addr16
mov
xchg
imul
dec
mov
mov
in
sub
sbb
mov
sub
repz
popf
clc
pop
dec
sti
icebp
jnp
mov
xor
inc
shrb
xchg
push
mov
pop
and
xchg
test
pop
pop
fwait
xchg
stc
xor
inc
nop
rcrb
in
mov
add
or
add
adc
mov
jecxz
in
jl
cmpsb
loopne
adc
bound
cli
stos
push
cmp
mov
lret
popf
js
sti
scas
adc
ss
inc
sub
jne
lret
test
outsb
daa
mov
icebp
out
icebp
out
stos
dec
call
popa
mov
sbb
dec
sub
div
cmp
test
inc
add
loop
rorb
scas
insl
mov
cmp
push
xor
std
nop
scas
push
in
jae
mov
xchg
dec
inc
jns
xchg
call
add
sbb
fimull
adc
cld
je
rcrl
cwtl
sbb
mov
arpl
cmpsb
imul
push
dec
push
inc
jbe
xchg
mov
test
fistl
mov
push
cmp
xchg
in
xchg
andl
xchg
test
push
ret
and
pop
les
orl
cmpsb
sbb
mov
adc
push
mov
into
jl
mov
push
aad
lock
push
sti
cmp
pop
imul
fcomip
push
shrb
fldl
call
xchg
fwait
or
call
data16
mov
push
add
inc
sub
fwait
negl
mov
jb
mov
sub
aaa
lock
mov
stos
sbb
cmpsl
mov
dec
adc
jns
imul
sbb
scas
sub
mov
pushf
cmp
pop
and
iret
pop
push
scas
testl
mov
sbb
push
outsl
inc
xchg
mov
push
negb
mov
mov
inc
pop
jle
data16
push
scas
push
sub
mov
shll
dec
or
mov
inc
xchg
outsb
xchg
mov
ret
popa
push
jnp
in
xor
push
stos
xchg
mov
mov
subl
adc
clc
cmc
rorl
dec
push
lret
or
addr16
mov
bound
popf
mov
ljmp
call
adcl
pop
outsl
pop
cli
and
adc
lock
sub
iret
test
and
sbb
scas
push
xor
or
imull
xor
mov
pop
and
jb
sbb
push
sub
sub
mov
xchg
shlb
or
cs
xchg
mov
or
imul
and
flds
mov
mov
xchg
add
or
jae
insb
xlat
das
lahf
pop
hlt
ficoml
fisttps
movsl
and
aad
xchg
jbe
sbb
cmp
pop
lcall
loop
cmpsb
sub
fimull
std
shrl
dec
jge
data16
sahf
jg
jb
inc
jmp
cmp
and
push
dec
in
scas
lret
fcompl
xchg
ja
clc
sub
xchg
cmp
or
and
aaa
cmp
xchg
add
push
mov
xchg
ficompl
or
ljmp
cltd
es
xlat
adc
mov
mov
xchg
iret
add
jnp
push
dec
fs
shlb
push
ficoms
mov
outsl
pop
inc
jg
sbb
adc
mov
fcompl
xchg
call
leave
stos
mov
inc
push
popf
xor
or
push
fnstcw
push
or
cmc
movsl
xor
gs
adc
loope
add
or
fcoml
test
lahf
fidivs
out
bound
loop
lock
je
icebp
clc
ljmp
daa
xor
mov
test
pop
mov
jl
int3
shlb
sti
add
lcall
popa
dec
sbb
outsb
fwait
shlb
or
lret
enter
xchg
mov
xchg
enter
pop
ret
mov
mov
push
lds
inc
fstp
testb
sbb
shl
lahf
sti
cld
pop
jecxz
int
int3
aam
mov
outsb
add
xor
jns
jno
lfs
ds
xchg
sbb
repz
mov
pop
dec
inc
xchg
cli
or
inc
outsl
scas
jmp
cli
or
and
test
xchg
mov
pop
repnz
push
sahf
daa
jge
stos
adc
inc
clc
movsl
ss
in
mov
lret
mov
imull
scas
cld
cltd
cli
or
movsb
or
lock
pop
test
and
leave
lock
add
jle
push
std
pop
out
lods
ja
imul
scas
ficoms
cmp
imul
sarl
adc
shlb
xlat
lret
mov
fistpl
fdivs
mov
xor
bound
add
call
mov
les
pop
and
pop
sbb
and
dec
pushf
aad
mov
out
into
lahf
icebp
bound
pop
sbb
and
aas
ljmp
ja
sahf
fsubr
ret
mov
iret
xchg
mov
stc
and
int3
stos
cmp
pop
add
jns
out
mov
jecxz
scas
adc
push
popf
arpl
add
fs
sbb
mov
xor
in
scas
xor
es
xor
idivb
pop
lret
mov
idivb
loop
push
dec
fisttps
cmp
push
int3
addl
sti
xor
pop
in
ds
int
or
push
loop
icebp
jmp
sub
ljmp
cmp
in
out
sahf
jbe
inc
xor
pop
imul
xchg
hlt
mov
cmc
loope
fs
xor
clc
xchg
repnz
xor
lds
arpl
push
jge
loope
cmp
sti
mov
mov
xor
cmp
dec
xchg
cmc
pushl
out
std
ja
xor
mov
sub
jge
loop
cmp
xchg
ret
pop
jp
push
popa
int3
sbbl
pop
mov
insb
mov
sbb
aad
mov
inc
ljmp
sub
scas
out
test
arpl
mov
sti
sub
push
movl
insb
xchg
movsb
mov
pop
or
call
sub
add
test
and
add
and
test
and
mov
into
mov
fistpll
aam
jmp
addr16
jno
int
scas
shlb
ljmp
cmp
aam
cmc
ss
jl
cmp
mov
cwtl
push
js
inc
scas
push
pop
inc
adcb
imul
cmpsb
cmp
xor
testl
xor
std
mov
test
dec
jecxz
es
roll
inc
xchg
sbb
add
es
pop
pop
xor
add
out
fcmovbe
addr16
add
xchg
mov
cmp
out
sbb
add
mov
mov
jno
bound
loope
arpl
mov
lds
es
rorb
cmp
xor
pop
xor
lcall
xchg
xor
stos
mul
outsb
in
mov
mov
mov
xor
jl
pop
and
test
rol
ljmp
xchg
sub
das
std
dec
bound
imul
pop
cmp
or
mov
outsb
mov
sahf
out
lds
mov
mov
lcall
mov
clc
stos
fstpl
jbe
pop
and
inc
insl
jge
sub
shlb
sub
jg
divw
movsb
inc
ljmp
add
aaa
cld
cmp
lcall
scas
xor
sub
lret
js
fdivl
push
test
adc
cmp
fldt
cmp
jmp
cwtl
rcl
pop
mov
int3
ds
mov
fmul
lock
out
scas
notb
jge
xorb
repz
pushf
add
outsl
mov
inc
into
dec
arpl
sub
mov
lret
adc
test
sub
int
or
add
sarb
fs
adc
popa
cmc
jb
or
push
sti
push
test
mov
addr16
xlat
fs
fimull
pop
repnz
div
add
or
inc
test
mov
into
scas
movsl
fdivrl
xchg
dec
popa
add
arpl
or
adc
fdiv
call
jne
jo
xchg
fwait
xchg
adc
repnz
pop
test
movsl
jg
rclb
mov
in
int
jae
pop
inc
jns
push
shlb
inc
cmpsl
push
ljmp
or
sub
jp
stos
jle
out
sahf
mov
ret
loope
fsubr
int
mov
out
loopne
out
lret
dec
sahf
out
outsl
ret
loope
mov
mov
mov
inc
fucomi
daa
scas
adc
loope
repnz
xchg
sub
addb
jns
adc
push
test
aaa
pop
inc
push
sub
lods
int3
aam
or
push
add
insl
jecxz
xchg
xchg
push
mov
xorl
or
repnz
xchg
sub
int
insb
and
inc
loope
cli
in
jnp
mov
lret
loopne
and
jnp
loopne
sub
ljmp
mov
xchg
xchg
imul
mov
xchg
xchg
fcmovnu
mov
call
fbld
hlt
rorb
addb
sub
into
dec
inc
popa
cmc
test
repz
mov
pusha
sub
jmp
imul
jmp
sub
rol
jb
cmp
cmp
dec
stos
scas
xchg
and
add
fwait
dec
insb
mov
mov
add
or
or
mov
sbbb
add
test
test
xchg
pop
nop
mov
hlt
ds
inc
int3
mov
dec
sub
divb
adc
loope
push
or
ss
xor
jbe
push
push
mov
cmp
or
push
jne
push
lret
ljmp
das
lds
out
inc
push
or
and
fidivl
mov
flds
lcall
xchg
aaa
test
mov
loop
push
jnp
imul
enter
movsb
jns
adc
lock
inc
cld
jae
lds
adc
sbb
into
dec
push
adc
orb
lss
test
aad
inc
leave
push
test
cmp
cltd
cmp
bound
fwait
mov
lods
jp
adc
rcrb
imul
loopne
inc
outsb
mov
xor
ret
dec
shlb
and
push
push
cmp
dec
and
cld
xor
mov
rorb
mov
jnp
fucom
stos
imul
gs
clc
test
adc
rcll
pop
pop
pop
gs
inc
jbe
outsb
in
aam
je
divl
inc
and
push
std
sbb
inc
jmp
push
test
aad
dec
pop
inc
repz
push
add
cltd
mov
inc
push
rorb
test
sbb
sti
aaa
rorl
jae
lds
movsb
cmpsb
push
add
mov
test
ror
sub
adc
mov
cs
repz
push
or
cmpsl
pop
inc
mov
mov
imul
bound
and
pop
call
out
push
in
std
arpl
fnstcw
mov
mov
lock
addr16
inc
or
addr16
sub
lret
andb
cmc
xchg
pop
shrl
sub
daa
add
movsb
jbe
push
notl
push
in
daa
inc
dec
movsl
jp
aam
add
add
xlat
std
add
outsb
out
nop
shrl
fidivs
add
arpl
popl
mov
xor
cmp
jecxz
mov
inc
jo
lods
sar
loopne
call
das
push
lret
fisttpl
cmpsl
adc
aas
pop
lock
mov
popf
lods
jmp
sbb
adc
lret
inc
insl
imul
xchg
xlat
es
cwtl
jno
movsb
dec
cld
pop
or
cld
mov
dec
cs
mov
leave
mov
ss
insb
jb
pop
sbb
sbb
imul
adc
and
xor
cmpsl
mov
cmp
and
ss
fiadds
push
mov
je
cltd
or
fdivl
pusha
fwait
mov
cmc
or
lods
xor
sub
test
mov
es
das
scas
clc
lods
lret
mov
xlat
pop
push
mov
or
and
inc
push
aam
xlat
dec
adc
pop
push
in
mov
frstor
mov
fwait
adc
or
cmp
xchg
lret
arpl
cli
out
adc
stc
out
hlt
popa
inc
lods
add
mov
push
js
cmp
pusha
dec
cli
addb
hlt
cli
fisubrs
jp
or
pop
add
push
scas
mov
shll
bound
shll
mov
xor
into
dec
icebp
rol
mov
mov
hlt
mov
push
add
jno
iret
das
cltd
fwait
into
mov
xchg
mov
inc
cwtl
psubsw
xchg
insl
jb
sahf
test
lods
mov
js
mov
xchg
push
push
les
iret
dec
and
sarl
sbb
add
std
push
mov
xchg
adc
add
jp
js
dec
xor
test
ret
ja
cli
ret
mov
pop
test
jbe
bnd
fdivs
xor
hlt
xchg
popa
sarb
lret
cmp
fcompl
jb
inc
adc
xchg
and
push
dec
popa
add
dec
ret
mov
pop
cmp
gs
dec
cmpsb
out
jmp
jle
mov
jne
cmpl
dec
sub
lea
mov
cmpsl
jo
pop
cwtl
pop
cmp
push
push
out
addr16
inc
insl
test
mov
or
fldcw
movsl
scas
jecxz
or
inc
out
gs
in
jg
test
jmp
jae
push
icebp
push
ret
int
icebp
dec
into
or
jecxz
mov
xor
lds
dec
add
inc
sarl
arpl
adcb
ja
xchg
xchg
jl
and
jnp
insl
inc
repz
dec
mov
pushf
inc
jnp
dec
test
out
and
sub
cmp
jne
fsubrl
lock
and
in
jmp
xchg
pop
inc
ss
jns
loopne
lds
cmpsl
fbld
xor
adc
cld
mull
testl
outsl
pop
icebp
popf
in
push
and
push
adcl
icebp
xor
and
movsb
in
loopne
gs
mov
stos
rclb
int
cmpsb
imul
test
sub
adc
out
dec
push
pushf
pop
lock
add
mov
ljmp
int
fidivrl
cmp
ret
mov
adc
ret
pop
adc
sub
sbb
inc
insl
lea
adc
cmp
mov
pushf
pusha
test
dec
jno
outsb
fwait
sbb
sbbl
inc
push
xlat
jns
push
inc
bound
pop
loopne
cli
add
jae
sbb
cwtl
xlat
ljmp
repnz
data16
sbb
lods
pop
popf
mov
xor
pop
rcll
fwait
mov
mov
fimuls
sti
push
insb
mov
out
test
cmpsb
xor
push
pop
fadds
lods
imulb
adc
sub
ror
inc
mov
aas
cmp
push
arpl
sub
jge
mov
mov
stos
outsb
push
das
cli
popf
mulb
je
ljmp
int
inc
fwait
push
mov
or
cmp
stos
push
jb
test
or
sahf
lock
movsl
les
adc
addr16
addb
sub
dec
popa
xchg
mov
fstps
imul
mov
andb
cmp
cmp
out
hlt
cwtl
addr16
adc
ds
out
mov
leave
xlat
pushf
mov
mov
sub
jecxz
stc
add
and
into
mov
in
insb
push
or
icebp
cltd
es
ror
xor
cmp
sahf
mov
xchg
sub
fs
or
rcrb
mov
ficompl
cmp
push
add
sbb
lret
xchg
js
inc
sti
insb
call
push
jg
fsubr
push
and
and
adc
insl
and
sbb
dec
mov
sub
mov
mov
xchg
fisubs
pop
xchg
adc
mov
loop
int3
pusha
and
and
push
cmc
iret
mov
xor
cmp
mov
adc
xchg
push
sbb
pusha
jns
add
ja
stos
pop
ljmp
insb
or
sbb
xchg
and
lcall
scas
movsl
popa
xchg
or
test
mov
insl
sub
dec
out
add
ljmp
mov
ret
in
dec
ds
inc
push
cmpb
push
inc
lock
push
bound
out
shlb
xlat
in
pop
in
jbe
mov
or
bswap
mov
push
negb
pop
sahf
lea
cld
cli
jbe
mov
or
dec
dec
rcll
mov
iret
jb
dec
insb
sbb
inc
aas
sbb
mov
pop
xchg
and
es
push
stc
xor
std
lea
jo
sub
cld
pop
insl
iret
movl
test
mov
adc
imul
mov
int
out
dec
adc
negl
gs
scas
jb
pop
out
fsub
jmp
icebp
clc
loop
pop
mov
inc
xor
fsts
add
cmp
or
arpl
out
inc
mov
enter
mov
shlb
and
xlat
adc
cmpsb
ror
xchg
xor
aad
int
pop
or
lcall
push
out
inc
lret
mov
xor
fildll
xchg
adc
and
loop
adc
rcrb
adc
fs
jb
subl
push
in
inc
in
dec
int3
and
in
pop
adc
jle
sub
dec
movsb
cmp
lahf
jb
push
arpl
aad
sarl
insb
add
fsubl
call
repnz
and
in
cmp
int3
insb
dec
lods
insb
jp
scas
xor
push
call
adc
and
or
mov
sbb
xchg
sub
add
insb
inc
dec
add
lret
and
test
cmp
inc
add
xchg
sbb
mov
mov
ffree
adc
push
divb
jge
pop
pushf
fnstcw
inc
cmpsb
aam
mov
pop
xor
dec
popa
inc
das
data16
jb
or
or
sub
loop
mov
adc
in
pop
mov
pop
mov
mov
rsqrtps
clc
inc
cmp
push
mov
arpl
xchg
xchg
rclb
mov
mov
push
xchg
ljmp
mov
and
or
pop
pop
fs
xor
mov
leave
push
ficoml
mov
loope
mov
insl
mov
sub
iret
sbb
sbbb
movsb
dec
stos
xchg
out
fdiv
or
jg
in
or
jmp
ds
push
adc
pop
mov
push
inc
mov
int3
xor
lods
or
out
int
mov
and
imulb
jl
aaa
mov
sub
dec
xor
gs
push
rolb
inc
out
leave
jbe
add
ret
mov
hlt
dec
loop
popa
and
or
test
mov
shlb
lret
outsl
push
push
int3
dec
cmc
aad
sarl
xor
lahf
mov
xchg
and
stos
lds
aam
lods
xor
jne
aas
push
xchg
inc
sbb
xlat
out
fadds
call
mov
mov
mov
jmp
nop
repz
jbe
nop
adc
or
outsl
sub
dec
adc
lcall
fbld
adcl
mov
add
cmp
mov
inc
pop
mov
sti
int3
movsb
ljmp
ret
das
daa
jmp
test
in
or
gs
mov
stos
mov
fs
mov
xchg
rclb
movb
add
mov
test
xchg
or
out
fsts
xchg
mov
push
daa
cmpl
pusha
out
and
xor
in
sbb
stos
push
xchg
fstps
mov
js
cmp
iret
into
add
in
lea
hlt
xchg
adc
add
cltd
cli
sub
mov
and
sub
shl
jno
std
sub
push
loopne
das
adc
push
pop
sbb
mov
adc
aam
ss
xor
and
jmp
inc
add
or
insb
pop
bnd
cmp
push
shr
xchg
mov
or
inc
jno
popf
or
pop
out
push
sbb
cwtl
cmp
fsubs
pop
lods
sub
sub
enter
sbb
push
jle
push
call
popa
jo
adc
xchg
inc
fwait
shl
dec
aaa
pop
sub
fs
movsl
in
leave
imul
stc
mov
test
clc
push
and
out
cmp
lret
in
dec
adc
outsb
mov
jl
mov
pop
xor
loope
arpl
and
push
jge
cwtl
pop
rolb
dec
lret
bound
mov
lahf
inc
adc
lahf
aas
and
imul
aas
dec
inc
loopne
mov
pop
setnp
pop
call
pushf
arpl
inc
jb
call
adc
cmpsl
lods
add
movsl
sarb
xlat
cwtl
cwtl
dec
repz
fsubrs
jae
xchg
loope
inc
mov
std
call
jo
lods
fsubrs
loop
out
in
insb
js
aad
loop
mov
push
iret
pop
not
jne
pop
test
xchg
push
mov
mov
fwait
rcll
std
xchg
lock
int
cmpl
push
mov
stos
insb
std
and
jmp
mov
xchg
sbb
push
push
lea
inc
out
insl
xchg
or
xchg
xor
fldenv
and
inc
dec
pop
in
lds
xchg
in
iret
mov
xor
xlat
sarl
insl
jecxz
cld
pushf
stos
ljmp
repz
xor
mov
sub
or
jnp
mov
lret
mov
and
xor
imul
fiadds
pop
mov
adc
add
faddl
pop
lahf
int
xor
imull
xchg
add
das
xor
push
jge
push
call
add
aam
and
aaa
je
mov
out
xchg
daa
jno
cmp
add
fdivrl
dec
fwait
pop
sarb
pop
movsb
imul
sub
mov
arpl
pop
jp
cmc
push
sbb
adc
dec
ss
or
test
dec
dec
mov
mov
out
cmpsl
pop
shll
insb
xchg
xor
shlb
push
loop
push
adc
xor
mov
test
inc
bound
mov
daa
imul
jle
sbb
mov
aad
xcrypt-cfb
inc
jno
lds
cmpsl
mulb
dec
push
lods
lea
sbb
iret
icebp
push
pop
in
sarl
inc
sub
ret
scas
aaa
mov
sbb
daa
add
lea
adc
push
lock
dec
addb
sbb
push
add
movsl
xor
outsb
dec
sbb
xchg
xchg
or
push
sbb
movsb
call
ja
dec
mov
in
inc
push
lret
sub
push
bound
mov
popa
out
mov
push
lods
and
cmpsl
insb
inc
js
jno
jnp
movsb
or
add
xchg
pusha
pop
mov
xlat
in
test
inc
inc
dec
test
mov
cld
cmpsb
lret
shrb
sahf
popf
fisubrl
inc
inc
push
iret
cmp
adc
mov
cmpsl
inc
aas
gs
push
negb
in
loop
int
mov
orb
leave
push
out
inc
mov
shl
cltd
cmpsb
adc
and
jg
mov
xor
stc
sti
xchg
fdivrs
insb
mov
ds
stc
add
or
or
xlat
popa
cs
push
adc
lods
dec
outsl
enter
dec
pusha
pop
adc
fbstp
mov
lea
lock
hlt
mov
mov
adc
pop
aam
cmp
push
lock
enter
out
ret
xchg
push
push
lret
cwtl
pop
popf
cmp
push
scas
test
movsl
push
enter
popf
xchg
push
mov
cmp
jl
sbb
sub
pop
movsl
cs
or
dec
pop
xor
rep
or
sbb
jl
mov
jmp
xchg
xchg
push
sahf
ljmp
loop
aam
or
and
ret
imull
mov
jle
aad
sbb
inc
cmpl
jne
roll
add
aad
xor
fscale
aas
and
dec
sub
cmp
fs
int3
insb
stos
cmp
xchg
xchg
adc
jg
scas
dec
pushf
dec
arpl
pop
add
xorb
fisttpl
jl
push
out
cmp
jns
mov
std
ljmp
popf
or
stos
data16
repnz
mov
insb
pop
cmp
mov
inc
and
in
or
rol
jne
dec
jmp
xchg
stos
dec
push
cmp
test
lods
or
jns
fcmove
jp
push
xchg
or
popl
xchg
dec
mov
adc
stos
jne
lds
ss
xor
pop
cmc
ret
pop
ljmp
pop
cmpsl
push
sub
sar
xlat
outsl
jnp
pop
jmp
pop
dec
xchg
jge
enter
sub
incb
imul
jle
sub
xchg
xor
push
loopne
cli
and
xor
mov
jbe
popf
or
cmp
movsb
jo
and
fdivrs
push
mov
push
out
mov
cmp
mov
sbb
and
imul
xchg
add
xchg
xchg
cmp
rcrl
pop
push
inc
in
cmp
dec
mov
sub
and
sahf
stc
push
outsl
pop
addl
iret
sti
cld
cmp
add
sub
jns
jge
out
mov
adc
xlat
rcrb
xchg
fsubs
repnz
cmp
jl
adc
adc
fildl
adc
inc
jno
mov
popf
outsb
push
mov
jp
jecxz,pn
jp
xor
stos
rcrb
jle
mov
rorl
mov
mov
jmp
push
push
shrl
mov
ret
stc
lcall
into
pusha
cmc
dec
mov
lahf
push
push
loope
sbb
sub
cmovns
gs
fdivrs
jp
mov
mov
insl
cmp
or
mov
ds
insb
pop
sub
xor
in
jno
nop
jmp
sub
dec
aas
and
scas
xchg
rorl
imul
shl
sub
push
inc
mov
push
mov
mov
in
je
pop
mov
jmp
subl
sbb
into
sbb
adc
xor
cmpl
in
xchg
xchg
jg
gs
add
scas
lea
cmovge
jle
mov
sbb
cmc
sub
mov
je
popa
xor
push
or
xchg
lahf
dec
aad
pusha
jecxz
add
jp
int
stos
pop
mov
or
enter
xor
sbb
nop
jecxz
adcl
cmp
mov
stos
fadds
out
outsl
xor
lods
dec
push
pop
xchg
sub
sub
mov
mov
xchg
mov
in
dec
xor
jle
iret
adc
push
fwait
gs
fcomps
pop
popf
int3
inc
jecxz
push
xor
out
cmc
mov
or
imul
popa
add
jp
mov
inc
or
lea
jecxz
pop
pop
outsl
addr16
jge
inc
mov
aam
and
or
pusha
push
fidivrs
xor
ds
fisubrs
sbb
or
imul
ss
xor
cmp
enter
or
into
jle
or
cmpsl
add
and
rcr
sbb
es
stos
arpl
repz
iret
xchg
lret
cmpsl
mov
adcb
xor
push
cmp
xor
jb
mov
movsl
jecxz
jg
rolb
dec
and
add
add
lahf
jne
in
enter
cmpb
or
imul
popa
sub
icebp
dec
cmpsb
sbbb
lcall
add
in
adc
pop
dec
inc
stos
pop
clc
add
in
inc
outsl
jae
inc
inc
pusha
mov
fistpl
sub
sar
push
jmp
push
mov
cmp
xor
fcoms
adc
repnz
xlat
test
test
jmp
stc
cli
push
mov
and
cs
shll
jmp
push
pop
or
int
mov
add
ret
mov
testl
lret
mov
jmp
sub
rclb
mov
adcl
mov
es
jg
in
cmpsl
xchg
subb
sbb
sbb
mov
dec
sbbb
xchg
out
pop
xchg
inc
out
hlt
sti
addr16
out
jecxz
ret
mov
lods
outsb
leave
add
das
scas
jbe
jno
mov
fisubs
movsl
pop
movsl
lcall
inc
je
sar
das
fwait
mov
sahf
jno
outsl
arpl
jecxz
das
loopne
sbb
je
dec
fidivs
out
inc
mov
xlat
push
or
mov
stos
jnp
outsl
out
cs
or
mov
insl
mov
icebp
sahf
push
lret
fucomp
push
push
mov
sbb
adc
xchg
cmpsl
push
mov
loope
js
xlat
inc
push
jne
pop
adc
ret
js
jge
ficoml
pusha
mov
xor
sub
dec
repz
out
sbbb
ret
aam
in
testb
and
cmpsl
dec
inc
xchg
daa
insb
and
cmpsl
and
ds
mov
add
xchg
xchg
sar
inc
das
in
cli
lds
push
test
movsl
clc
xchg
dec
xchg
into
imul
jle
sbb
gs
ds
jg
and
int3
xor
arpl
pop
sub
or
xor
jae
jecxz
adc
xor
je
or
adc
repnz
int
jae
ret
mov
pop
outsl
scas
fsub
dec
sbb
pop
adc
stos
mov
in
cmp
popf
mov
dec
push
jge
mov
int
cmpb
out
fisttpll
sbb
pop
mov
lea
sub
mov
ret
jmp
jmp
xor
pop
dec
test
sub
int
lds
leave
iret
dec
lcall
xor
pushf
pop
and
pop
rcll
in
xlat
fcoml
cmp
mov
sbb
sbb
mov
xor
insl
pop
stos
pop
fmulp
jp
orl
sbb
or
mov
or
out
xor
in
mov
dec
sbb
clc
jnp
or
enter
push
fdivrp
cs
and
mov
popf
pop
aas
jno
sub
aaa
and
mov
xchg
pop
enter
lcall
dec
popa
jmp
xor
ds
xchg
fistps
jl
xor
scas
and
lea
sbb
js
dec
inc
imul
jne
jge
sti
pop
cmp
dec
das
or
mov
ret
jg
inc
dec
xchg
in
pusha
jo
andl
xchg
adc
mov
aaa
out
iret
jg
or
jp
mov
mov
nop
push
bound
or
and
mov
mov
pop
add
shlb
enter
popa
dec
or
push
gs
outsl
push
cs
loopne
dec
stc
out
roll
xchg
adc
pop
lahf
dec
ret
xchg
cltd
ret
xor
pop
pushf
insl
mov
mov
fidivl
push
and
mov
push
in
xchg
cmp
adcl
sub
xlat
leave
lea
pop
mov
subb
sbb
fsubrs
mov
cli
or
sub
insl
out
add
cltd
mov
in
cmpl
mov
popl
arpl
sti
inc
xchg
pop
clc
dec
jb
cli
cltd
push
cmc
inc
lret
arpl
fstps
push
stos
enter
es
xchg
sbbl
pop
in
notl
sub
clc
repnz
ret
mov
mov
sub
push
xchg
push
test
sahf
push
dec
pop
loop
pop
cmc
cld
cld
push
pop
fstl
xchg
dec
sub
dec
cld
test
mov
rorb
and
add
cmp
adc
sub
lds
ret
push
dec
pop
pop
std
mov
addb
loop
or
stos
popa
sbb
js
outsb
lea
pop
inc
icebp
xor
lods
je
and
mov
push
pop
fwait
mov
dec
mov
into
fdivr
inc
sub
adc
xchg
adc
outsb
push
cltd
sub
test
sbb
lahf
rcll
dec
xchg
jo
xorl
pushf
cmpl
xchg
cs
stos
xor
into
out
loop
dec
popf
enter
and
push
idivb
mov
loopne
cltd
or
dec
test
cltd
xor
mov
fisubl
inc
add
xchg
dec
cmpb
jge
pop
cmpsb
test
push
mov
mov
and
inc
outsb
ret
adc
cs
cmp
fstl
xlat
push
push
inc
sub
mov
and
mov
jl
outsb
sbb
testl
lock
js
mov
adc
icebp
ret
xor
xor
les
and
fisubrs
and
mov
jl
popa
and
call
xchg
out
and
mov
loopne
fcmovnb
mov
out
pop
subb
ss
mov
dec
mov
fildll
push
lret
outsl
loop
cld
cmp
les
sub
daa
jle
cmpsl
dec
out
loop
add
bswap
gs
out
mov
stc
fcmovnu
or
stos
sbb
cltd
xlat
ds
mov
mov
pop
data16
xchg
ret
dec
outsb
rcll
push
std
imul
push
xchg
ljmp
fldenv
dec
mov
ss
iret
cmp
mov
dec
pop
lds
pop
ja
push
icebp
sbbb
cmpsb
movsb
push
inc
xchg
mov
test
xchg
lahf
mov
mov
loop
jg
add
bound
pop
dec
and
sarb
sbb
clc
icebp
dec
cs
jecxz
inc
mov
pop
addr16
jnp
ds
int3
in
stos
aad
stc
push
inc
mov
inc
lcall
push
push
gs
dec
jnp
out
push
fld
ss
mov
insb
mulb
lret
inc
sarl
fbld
xor
les
dec
inc
or
push
int
push
scas
push
test
sub
inc
je
lds
ret
mov
mov
push
sbb
popa
mov
mov
sbb
pop
cmp
nop
mov
jp
or
mov
pushl
fwait
es
inc
pop
cmp
test
push
cmpsl
and
push
pusha
xchg
pop
mov
jp
xchg
cmp
xchg
xor
shl
xor
out
scas
sti
xchg
into
pop
sub
fs
testl
sbb
jle
cmp
clc
xchg
test
push
mov
sub
stc
aaa
ret
stos
aas
mov
jae
popa
lret
loop
xor
add
mov
sti
xor
icebp
jae
mov
sbb
mov
xor
pop
sbb
aam
sub
sub
in
jecxz
pop
adc
and
popa
loope
rorl
movsb
sub
test
movsl
or
inc
imul
cmp
mov
jl
fsts
fdivs
pop
enter
or
sub
adc
mov
scas
scas
cmp
fsubrs
lds
mov
pop
aaa
mov
sti
hlt
lahf
popf
ja
fsubrl
out
adc
test
mov
push
mov
or
pop
and
mov
xor
call
iret
jo
xor
mov
pop
aam
idiv
sbb
sbb
jl
stos
dec
lcall
decb
nop
jbe
in
bound
sub
stos
lret
fldcw
mov
imul
jge
loope
mov
mov
cmp
pop
pushf
add
pop
mov
mov
lret
cs
cmpb
push
xchg
mov
outsb
mov
cmp
mov
sbb
arpl
call
inc
ss
add
cmp
add
mov
inc
inc
push
dec
stos
push
fwait
sti
dec
mov
jb
mov
mov
sub
cmc
cs
push
insb
testb
lods
sti
cli
xlat
lock
add
cmp
jnp
addl
aam
mov
outsb
sub
pop
neg
imul
fwait
or
adc
dec
jb
xchg
addr16
shlb
mov
inc
pop
lea
int3
add
test
or
enter
pop
cmp
push
ja
arpl
jle
ljmp
mov
mov
ljmp
mov
nop
sub
add
insl
add
pushw
imul
lea
inc
nop
dec
adc
test
aam
xchg
inc
inc
cmp
insb
add
cmp
out
pop
mov
pop
fstpl
rolb
call
push
call
jns
dec
sbb
mov
sub
nop
and
add
inc
cmpsb
pop
push
outsl
inc
cmpsb
aaa
mov
sarb
les
cmp
push
leave
push
les
sub
mov
pop
push
mov
dec
cmc
dec
push
pop
pop
ds
cwtl
add
push
out
xor
into
fistps
mov
stos
jg
jbe
mov
add
push
gs
sahf
adcb
aad
enter
push
stc
nop
or
jne
mov
flds
xchg
pushf
mov
and
or
jae
pop
mov
out
ja
dec
add
xchg
inc
xor
insl
rcr
outsb
sahf
es
fs
inc
jmp
popf
fidivrs
add
sarb
mov
imul
stos
insl
sbb
int3
sti
lret
push
sbb
imul
mov
icebp
jp
push
lret
mov
in
cmp
clc
mov
pop
jae
adc
mov
cs
sub
and
rcll
jp
pushl
jecxz
movsl
mov
stc
push
mov
fidivl
sub
adc
ljmp
adc
and
enter
xchg
sub
sbb
stos
jmp
fs
sub
in
xor
movsb
and
movsl
nop
dec
xchg
lea
js
into
subb
mov
cld
xor
dec
push
nop
sti
test
jmp
jle
mov
cmp
inc
jl
iret
sbb
or
and
xor
aad
mov
and
pop
mov
xchg
xor
lods
int3
scas
push
inc
sbb
scas
sub
mov
fucom
lods
shll
or
lahf
iret
jbe
imul
iret
xchg
lea
rolb
js
scas
test
push
sarb
jl
shl
push
mov
jno
xchg
ds
push
movsl
gs
add
sub
test
in
mov
pop
add
pop
adc
mov
jmp
jge
cltd
mov
xor
es
mov
mov
mov
in
call
push
dec
test
adc
adcb
inc
xlat
cmp
shll
pop
pop
in
ds
imul
cli
es
cmp
dec
xchg
test
popa
jg
movsb
xchg
sbb
jg
xchg
xchg
dec
ficompl
aad
xchg
fwait
into
sub
inc
ss
mov
call
sar
push
add
mov
dec
mov
cwtl
out
ret
mov
js
wrmsr
fisttpl
in
adcl
rclb
dec
pusha
popf
les
add
in
out
adc
jno
and
sbb
pop
lret
test
sub
ljmp
cmpsl
scas
jl
lret
xchg
pop
inc
mov
mov
pop
add
lods
xchg
xchg
fadds
pop
insl
lret
and
jns
addb
insb
push
ret
xchg
lret
jns
loop
fwait
pop
xchg
mov
mov
aam
mov
xor
push
fdivs
stc
out
das
leave
pop
fisttps
popf
lds
ret
mov
je
movsb
pop
adc
in
adc
femms
test
loope
dec
cmpsb
sub
enter
jecxz
imul
mov
inc
ds
sti
jns
and
jecxz
out
mov
into
fwait
mov
cs
sbb
lock
push
mov
bound
dec
frstor
mov
dec
add
mov
mulb
mov
jae
imul
fwait
cs
dec
mov
sbbl
inc
xchg
cmpsl
fsub
imul
fwait
sub
inc
sti
aas
out
dec
out
cmpsl
xchg
mov
daa
call
fcoml
pop
std
pop
mov
popa
inc
lods
pusha
add
or
int3
out
insb
scas
bound
pop
mov
ss
pop
sbb
test
sahf
add
jp
sbb
mov
push
xor
cltd
sub
and
inc
or
das
pop
test
fsubrs
movsb
loopne
mov
mov
clc
out
out
and
je
fdivrs
outsl
xorl
xlat
jle
test
mov
dec
outsb
faddl
mov
add
dec
inc
push
adc
add
jmp
daa
pop
in
ja
pop
pop
mov
test
sbbb
xchg
push
ret
and
movsl
insb
sub
leave
mov
loope
insb
jle
insl
enter
mov
dec
push
iret
loope
inc
push
in
subb
mov
jno
cwtl
insb
shll
iret
xor
pop
stos
lcall
push
sti
lods
mov
scas
int3
cmpb
mov
adc
inc
arpl
jl
testb
fidivl
insb
xchg
mov
inc
cwtl
test
add
mov
repz
xchg
sahf
repnz
or
adc
addr16
mov
mov
out
aas
mov
and
push
sar
xor
mov
dec
jecxz
xchg
lods
out
cwtl
jb
mov
das
mov
scas
lret
std
sbb
and
aad
lods
and
int
cmp
fists
mov
mov
pushf
cmp
add
jns
stos
shr
pop
inc
pop
ss
rcrl
mov
jne
push
push
stos
in
repz
add
in
cli
mov
jo
loopew
lds
mov
ucomiss
lods
scas
hlt
aas
mov
xchg
iret
das
inc
cmp
sahf
sub
or
pop
inc
into
mov
sahf
add
xor
inc
sarl
shl
or
loope
test
stos
xor
movsb
fs
inc
inc
test
mov
bound
xchg
and
pop
push
out
out
inc
jg
jae
cli
mov
mov
xchg
fcmovnu
test
jge
jmp
hlt
fsubp
sub
jl
cmpsl
popa
pop
test
call
dec
ja
cmc
mov
fisttps
dec
js
in
add
inc
pop
mov
mov
jle
fadds
je
mov
mov
pop
aaa
xchg
inc
insl
icebp
cmpsl
add
arpl
mov
es
mov
les
ror
adc
add
int
dec
push
ds
sub
push
pop
jl
inc
loope
dec
mov
in
jmp
lods
pop
fcomi
test
push
jno
ja
fildl
xchg
movsl
test
enter
sbb
into
iret
outsl
insl
outsl
inc
pop
popa
aad
adc
mov
popa
or
jno
lods
mov
jge
movsb
imul
or
lds
xchg
xor
aam
std
test
xor
add
jb
aam
mov
adc
mov
lea
mov
inc
jne
jo
cmp
movsl
js
adc
fstpt
xor
aad
pushf
xchg
push
and
push
cmpb
scas
xor
stc
fwait
inc
mov
sbb
cmp
push
dec
aam
xor
pop
ret
push
fisubl
arpl
and
rcr
pop
mov
pop
inc
dec
sbb
pop
mov
cltd
das
pop
dec
shll
mulb
xchg
test
sub
icebp
stc
lods
sub
out
aaa
push
frstor
mov
lret
dec
lds
fmuls
repnz
lods
repz
fucom
sbb
fsubs
jnp
pop
jne
addb
mov
stc
jne
push
mov
xor
into
es
popa
jbe
xor
mov
or
insb
push
sbb
imul
sbb
mov
cmpsb
mov
fwait
lds
mov
xor
xchg
test
int3
jle
or
stc
rcrb
test
add
adc
lea
popa
xor
pop
xor
call
aas
iret
lret
lods
hlt
mov
nop
mov
xchg
jmp
xor
and
and
xchg
xor
popa
push
sub
adcl
lock
pushf
ret
inc
notb
add
adc
iret
or
sahf
jae
imul
cmp
lods
test
bound
sub
mov
mov
add
cmc
dec
inc
fwait
aas
enter
push
xor
xor
or
mov
push
daa
cmp
loopne
push
lret
jne
test
loope
loope
sbb
test
or
jp
cld
dec
push
into
push
xchg
popf
inc
gs
ljmp
jp
les
imul
fsubs
jae
sbbl
imul
mov
rorb
ds
add
lcall
lcall
inc
clc
repz
sub
inc
gs
loope
in
sub
xchg
andb
sti
nop
das
cltd
stos
dec
push
cmpsl
sub
sbb
lea
int
fisubs
lcall
cmp
jg
mov
ljmp
or
pop
lcall
aas
xor
adc
test
and
mov
push
test
mov
dec
sbb
sub
xchg
stc
sub
arpl
mov
sub
stc
and
dec
stc
out
in
push
dec
ljmp
rcrl
lods
and
scas
push
adc
xchg
dec
jbe
rclb
movsl
mov
mov
sbb
test
mov
and
jecxz
insl
mov
inc
jae
push
imul
rolb
push
add
dec
adc
or
xor
and
cmpsb
sbbl
cs
idiv
and
xchg
jbe
rol
xchg
cmp
pop
sub
mov
mov
mov
fisubrs
inc
gs
andl
fsubrs
mov
fdiv
test
cmp
push
repnz
bound
cwtl
shll
ret
dec
lea
fs
inc
mov
int3
jl
xor
das
orb
push
add
ficompl
lods
push
ret
clc
subb
pop
and
idivl
jle
sbb
loop
push
aaa
mov
scas
push
fnsave
dec
sub
cld
or
or
or
push
out
adc
ja
and
shlb
daa
sub
jmp
push
sub
data16
push
push
repz
xchg
pop
dec
ret
mov
xchg
test
push
pop
sbb
mov
in
push
insl
mov
lock
mov
rcrl
sbb
repz
mov
sbb
jbe
push
fs
xlat
mov
insb
pop
lea
imul
enter
sahf
dec
inc
jg
jmp
addr16
in
lods
jnp
jl
and
ja
test
inc
pop
outsb
dec
dec
icebp
and
aaa
stos
jmp
cltd
hlt
dec
outsb
mov
or
pushf
and
popa
inc
adc
fldl
mov
shll
arpl
add
xchg
sub
addr16
mov
push
test
dec
sub
jecxz
lret
in
xchg
in
push
adc
sbb
push
fadd
adc
aam
sub
cs
sub
into
nop
mov
loopne
mov
mov
js
pop
xor
pusha
sub
push
adcl
mov
loopne
mov
fisubrs
xchg
hlt
cmp
jmp
dec
and
add
sub
aad
mov
imul
js
nop
xchg
movsb
jbe
mov
negb
pop
mov
shl
sti
aas
test
fnstsw
fimull
roll
decl
mov
aaa
insl
roll
adc
push
outsl
aam
hlt
adc
jecxz
pop
out
sarl
sub
outsb
out
xchg
mov
mov
loop
fildl
fcomi
xchg
mov
sti
js
out
mov
add
mov
je
and
sub
leave
adc
xor
xchg
push
or
lret
sahf
cmpsb
js
test
sub
cld
loope
stc
dec
jg
mov
icebp
fmuls
ss
lods
cmp
loop
ret
jnp
xchg
mov
fdivl
movsb
imul
faddl
dec
std
jae
sbb
call
mov
sahf
mul
add
push
stos
loope
lret
xor
les
and
shl
mov
mov
mov
movsl
pop
inc
ljmp
ss
inc
std
lcall
ret
inc
cmc
cwtl
test
mov
call
adcl
pop
dec
sub
nop
add
pop
pop
and
aaa
sub
popf
jo
pop
push
mov
dec
dec
pop
inc
aaa
inc
mov
test
sbb
je
or
sbb
data16
jno,pn
lret
fmull
pop
jo
fwait
popa
mov
stos
sbb
pop
cmp
sbb
rol
push
enter
jmp
out
pop
adc
cmp
jmp
push
adc
rol
dec
jmp
mov
je
cmp
iret
xchg
int
fdivl
enter
and
cmpsl
repnz
dec
mov
mov
inc
mov
add
arpl
mov
jge
icebp
adc
popf
filds
addr16
and
pop
clc
mov
in
mov
push
and
adc
addr16
add
xchg
inc
das
mov
adc
out
popf
popa
lock
push
mov
mov
fcompl
sub
scas
int
jl
fidivrl
fwait
xchg
pop
popa
push
dec
sub
and
es
loop
sti
in
sub
or
jne
inc
mov
push
adc
nop
or
push
mov
jge
mov
pushf
sti
enter
call
add
shlb
sarb
inc
lods
dec
cmp
mov
xor
mov
mov
mov
and
iret
out
inc
repnz
sahf
pop
aad
adc
mov
xor
xor
int
xchg
popa
xchg
pop
imul
mov
in
or
repnz
sti
aam
mov
cmpsb
stos
pop
jecxz
popa
movsb
mov
mov
in
imul
rorb
sbb
sbb
shlb
jmp
lcall
cld
ret
jno
out
insl
nop
loop
mov
xchg
fs
call
mov
sbb
add
pop
pop
pop
mov
or
mov
mov
add
fsubrl
gs
adc
repz
pop
test
pop
fiadds
sub
insl
xchg
mov
pop
in
insb
testl
rep
cltd
mov
jae
sbb
sub
adc
ja
and
lret
loope
imul
ljmp
and
fwait
pop
cwtl
aaa
pop
out
sbb
jl
lret
je
scas
sbb
jno
push
xor
sub
cmpsb
call
or
sub
inc
rorb
mov
and
shll
adc
stc
ret
iret
enter
stos
insl
call
push
aad
out
jnp
adc
mov
push
cmp
add
out
inc
sub
aad
xchg
aaa
mov
sub
dec
cli
adc
je
out
dec
jl
xchg
scas
pusha
jmp
pop
aaa
pop
pop
push
testl
push
pop
and
out
add
shlb
outsb
insl
mov
push
xor
mov
les
push
jno
adc
aad
pop
icebp
xor
je
cmp
lret
add
mov
xor
pop
add
js
ret
add
aaa
xchg
pop
jp
test
pusha
sti
push
and
nop
fnstcw
fadds
movsb
xchg
fidivs
xor
sub
lcall
sub
xchg
and
jl
mov
pushf
or
out
in
lods
pop
in
jecxz
mov
mov
mov
aam
push
jmp
inc
mov
adc
jns
loop
arpl
lcall
mov
in
sbb
std
push
mov
ja
xlat
and
and
clc
mov
testl
daa
jne
dec
pop
aam
out
xor
repnz
xchg
pop
roll
in
stos
movsb
jae
sahf
in
or
lret
icebp
sbbb
dec
adc
aad
adc
ficompl
mov
pop
or
xchg
mov
sahf
into
std
adc
movsb
mov
cmp
mov
adc
scas
mov
mov
xor
pop
mov
popfw
aaa
sbb
sub
cmc
jg
pop
inc
stos
and
jge
popf
lahf
jne
cmpsb
jmp
pop
mov
test
mov
add
pop
jbe
xor
sahf
xchg
clc
xor
dec
add
adc
jmp
xchg
aaa
scas
mov
ja
shll
jg
push
fcoms
sub
gs
hlt
jg
xor
and
sbb
ss
and
mov
mov
aaa
test
inc
loopne
add
icebp
xchg
out
push
aam
adc
ret
loop
mov
push
in
out
dec
dec
lds
mov
notl
cmp
leave
push
lret
clc
sub
xor
xchg
movl
loopne
adc
mov
push
and
lret
js
loope
mov
cs
mull
lcall
pop
adc
sub
shl
mov
mov
ret
xchg
mov
cmp
outsb
loope
inc
aas
daa
icebp
or
pusha
lods
test
cmpl
inc
sbb
push
and
insb
test
cmpsl
subb
cmp
xor
fcomps
add
stc
and
out
js
pushf
outsl
sbb
and
mov
xchg
inc
fldenv
sub
or
cld
push
adc
jl
aad
movsb
mov
in
mov
nop
pop
mov
dec
and
repnz
popa
or
ficoml
scas
into
lock
lahf
mov
data16
sbb
sbb
ror
mov
fdivs
in
sbb
sub
popf
mov
pop
outsl
mov
leave
repnz
sub
sbb
push
orb
mov
mov
sub
push
rcrl
or
clts
ljmp
pop
adc
data16
mov
mov
enter
xor
mov
dec
and
pop
aam
sub
sarb
sbb
dec
inc
fnstenv
mov
adc
out
cli
mov
xchg
scas
mov
push
movsl
jo
stos
insl
pop
stos
test
out
jns
int
and
cli
push
xchg
xchg
mov
divl
cmp
cmpsl
mov
ljmp
mov
test
cmc
test
sub
outsb
dec
pop
mov
pop
test
cmpsb
sahf
push
mov
inc
inc
out
jmp
popa
xor
push
xchg
lret
push
inc
addr16
lahf
adc
push
cltd
xchg
dec
dec
xchg
jg
cmpsl
testl
inc
outsb
leave
xor
add
dec
dec
mov
push
mov
sbbb
addr16
sbb
jecxz
xchg
mov
lret
add
arpl
pushf
jnp
sub
notb
add
cmc
aad
notl
jbe
or
out
loope
and
rorl
push
or
iret
iret
dec
cmp
pop
hlt
loopne
into
push
add
femms
sahf
cmp
and
popa
and
jns
inc
test
lods
xor
jo
fidivrl
cmp
lcall
cmp
in
or
push
jae
ret
fcompl
pop
in
ja
lahf
dec
in
push
mov
lea
mov
jne
jle
rcrl
xor
or
inc
loope
push
out
jmp
fpatan
inc
pop
lahf
cmpl
repz
cmc
fwait
dec
stc
and
pop
in
mov
cs
daa
sub
iret
dec
push
out
push
push
xchg
jmp
cmp
aaa
xlat
mov
mov
popa
call
out
insb
cmp
or
dec
inc
mov
pop
adc
nop
xlat
pop
int
sbb
dec
ja
adc
cs
pop
inc
jne
jge
adc
pop
push
sbb
inc
and
lods
out
sub
sbb
cld
cmp
dec
xchg
xchg
jnp
xchg
jb
push
cmp
clc
dec
cmp
mov
cmp
imul
decb
adc
cmp
aam
jbe
mov
lock
mulb
loopne
cltd
dec
adcb
iret
pop
push
pop
loop
je
sub
sti
xor
shll
mov
mov
mov
jg
cmc
mov
mov
fidivs
inc
mov
add
xor
add
popa
mov
sbb
out
pop
sahf
das
into
popa
cmpb
dec
xor
sub
adc
sti
push
insl
inc
push
cld
cmpsb
sbb
cs
decb
adc
inc
loopne
test
mov
adc
cli
rorl
imul
jns
add
imul
cmpsl
or
scas
movsl
sbb
cmp
in
ficoml
cmpsb
iret
out
gs
out
outsl
mov
fs
push
xor
xchg
lcall
inc
inc
in
jle
push
stc
daa
sub
lcall
incb
stc
add
movsl
rcrl
pop
icebp
and
pop
sbb
popf
add
shlb
stc
sbb
out
fldt
cmp
push
insl
packssdw
mov
fwait
and
jg
mov
jl
add
mov
outsl
jmp
sbb
add
sub
push
inc
cwtl
cmp
repnz
jecxz
out
sbb
mov
push
or
setb
popl
cwtl
inc
data16
sbbl
lods
pop
call
pop
jns
icebp
push
jns
into
mov
sbb
fisttpll
inc
mov
mov
xchg
leave
dec
ja
stos
mov
xchg
lock
je
out
push
testb
rcr
movsb
mov
push
ljmp
push
repnz
in
incb
fsubrs
and
out
stc
jge
mov
scas
cmp
pop
sbb
mov
mov
xor
rclb
push
andb
adc
mov
inc
lods
pop
in
push
ss
push
inc
inc
outsb
xor
mov
push
mov
hlt
cmp
fnstenv
cmc
mov
jns
and
cs
lea
cmpsl
stos
popa
lret
or
jmp
in
imul
ret
mov
dec
xchg
sub
dec
jg
test
add
push
arpl
out
mov
push
xor
add
mov
out
rorb
push
or
cld
mov
cmp
popa
add
shll
adc
jbe
inc
push
std
jno
push
shrb
xor
pushf
xchg
mov
push
and
push
inc
add
filds
notl
mov
aam
pop
and
push
and
sbb
push
xchg
mov
enter
jle
add
gs
fsubrs
ljmp
adc
addb
pop
adc
inc
jmp
fdivs
add
xor
jmp
push
jns
not
xor
repz
int
inc
lahf
jbe
fldenv
jmp
mov
push
xor
mov
dec
add
test
jb
mov
test
mov
sti
pop
or
sarb
mov
xchg
xor
lret
cli
popw
pop
fs
bound
push
or
or
notl
shll
pop
imull
mov
xchg
add
cmp
dec
mov
xchg
mov
jb
sub
jle
lods
stc
jecxz
push
sbb
inc
push
repnz
aas
lcall
stc
add
xchg
sbb
mov
les
push
xor
popa
xor
in
cmp
cmp
mov
out
cmp
mov
sub
pop
out
xlat
jle
subb
mov
xor
push
stc
xor
popf
and
fwait
push
shl
lcall
jmp
mov
cmp
xchg
mov
xor
lods
dec
into
shlb
jnp
mov
sar
call
les
lret
rcr
xor
dec
call
xor
xlat
test
mov
adc
cld
xchg
sub
push
pop
iret
mov
xor
inc
popf
repnz
scas
aas
and
out
movl
push
lret
dec
push
cmp
ret
mov
mov
push
gs
adc
mov
mov
lret
aam
and
mov
out
or
pop
pop
mov
jge
push
rclb
push
xchg
sbb
int3
out
cli
in
sub
ja
leave
movsl
jb
stos
add
lcall
lcall
lods
push
aaa
mov
sbb
push
jne
jecxz
jmp
sti
jns
mov
xchg
cmp
aam
add
insl
dec
sbb
cmp
or
mov
mov
cmpsl
cli
jl
jmp
pop
lods
pop
bound
jle
adc
jae
fcompl
mov
in
xchg
dec
jge
dec
shll
push
lcall
xor
out
inc
cld
and
pop
shlb
les
cmc
xchg
lahf
std
ljmp
push
jbe
cmpsb
dec
xchg
or
and
push
stos
lds
aas
mov
adc
adc
roll
add
scas
test
dec
sbb
adc
inc
add
cmp
sub
stos
mov
pop
sti
popf
ja
stos
fadd
int3
jp
xchg
jl
sub
jae
loopw
push
out
fisttpll
aaa
nop
fimull
mov
and
arpl
xrelease
jo
ret
repz
pop
dec
sbb
cmp
xorl
aaa
scas
rorl
cmp
sbb
xchg
les
fnsave
sbb
rcr
xchg
outsl
mov
sub
add
int3
imul
inc
lods
fs
cmp
adc
inc
scas
lock
sbb
push
subb
or
orb
adc
daa
dec
jo
into
cmp
mov
mov
mov
xchg
call
and
imul
loop
lds
dec
test
push
xchg
rclb
repnz
out
pop
mov
mov
je
pop
lea
stc
cmp
xchg
or
push
stc
loope
lahf
dec
cmp
jo
loope
xor
call
jg
mov
xchg
sahf
cli
mov
testb
aad
icebp
and
aaa
stos
jg
sbb
jecxz
xor
cmpsb
push
and
int3
jo
loope
fwait
iret
orb
inc
add
shll
mov
or
rorl
stos
nop
push
ret
in
cmp
jl
pop
xchg
add
or
mov
xchg
hlt
ret
jl
fwait
adc
movsb
sub
jmp
jl
je
inc
xchg
fidivrs
xor
daa
mov
nop
push
lds
rcr
addr16
add
push
mov
dec
adc
aam
aas
loope
pop
lret
fnstenv
clc
int
dec
jbe
pop
fstp
xchg
pop
loope
mov
jl
push
imul
adcb
test
sar
or
aad
jae
out
jecxz
jbe
pop
in
sarb
pop
dec
hlt
inc
dec
xor
ror
jge
push
fistps
popf
inc
nop
or
mov
dec
lock
sub
mov
out
shrb
cwtl
movsb
lea
cli
movsb
out
fldl
mov
test
mov
lcall
loope
mov
movsl
ret
cs
jmp
xchg
std
inc
stc
and
inc
mov
push
push
xchg
push
xor
test
cld
mov
rclb
pop
insb
rcrl
loop
pusha
sub
into
jb
xchg
loop
add
lods
cmp
xor
es
sbb
xor
xchg
mov
ret
fldz
and
in
movsl
lods
loop
dec
sbb
fisubrs
fwait
jne
xchg
dec
lcall
repnz
inc
push
aas
jmp
push
xor
iret
mov
enter
aad
fldenv
xchg
or
pop
outsb
daa
jae
icebp
push
fldl
notb
lock
hlt
imul
clc
push
sbb
mov
cmp
rcll
or
cld
fs
mov
dec
fnstenv
orl
fs
cwtl
and
adc
pop
movsb
test
lock
dec
sub
jbe
loopne
jge
out
test
jnp
int3
and
or
pop
stc
push
int3
lret
add
cwtl
mov
test
cltd
emms
adc
jmp
inc
mov
mov
sti
sub
lock
sbb
mov
xor
or
subl
push
je
cwtl
testl
in
or
jecxz
mov
adc
loopne
and
add
shll
mov
and
cld
subb
mov
ret
xchg
mov
inc
js
rclb
scas
out
push
cli
bound
nop
cltd
loop
pop
fdivrs
lea
sbb
inc
mov
roll
arpl
in
insb
hlt
push
sarb
lea
sub
inc
add
push
or
inc
ds
js
xchg
jecxz
stos
or
aam
jp
push
pop
dec
rcll
outsl
fdivl
stos
ds
aas
loope
add
sbb
es
into
cmp
or
jp
test
mov
pop
cmp
aad
and
xor
clc
clc
insl
pop
adc
mov
rsqrtps
lock
cmp
loopne
ficomps
pusha
inc
inc
jle
xor
nop
stos
adc
sarl
movsl
sub
js
jmp
or
jb
cld
jbe
cmpl
xor
roll
mov
filds
mov
mov
lods
arpl
je
cmp
mov
shll
pop
adc
bound
jb
adc
or
dec
jno
push
aas
ljmp
inc
mov
or
int3
lret
gs
push
lds
std
addr16
or
push
jne
lret
dec
adc
and
mov
mov
dec
in
loopne
push
add
cmp
add
out
fcmovnb
pop
push
lret
das
lcallw
testl
stc
mov
pop
stos
lock
fwait
aam
pop
cs
jmp
mov
mov
mov
adc
cmp
enter
add
nop
pop
inc
hlt
scas
add
dec
hlt
movsb
sbbb
inc
jo
cmp
and
cmc
add
pop
ljmp
movsb
imul
xchg
dec
fldl
outsb
lret
pop
mov
cmp
pop
xor
xor
xchg
test
cmp
adc
outsl
out
cmpsl
add
mov
je
fsub
idivl
fsubrs
or
insb
jno
mov
gs
push
lret
sbb
xor
pop
lods
xor
push
sti
adc
xor
pop
out
add
mov
rclb
xlat
add
test
ja
pop
movsl
add
add
pop
rorb
leave
into
cwtl
and
jae
add
adc
fnsave
dec
fsubr
test
rcrl
or
rcr
rclb
movsl
shlb
daa
sub
push
lods
mov
loopne
repz
test
dec
popf
and
dec
cmp
cmc
push
jo
lret
js
int3
xchg
cld
mov
cmp
cwtl
daa
mov
mov
cmp
ja
pop
jl
mov
mov
cld
push
inc
sahf
les
or
cmc
pop
outsb
jb
inc
push
xlat
xchg
and
adc
jae
and
fs
cmp
fucomip
push
dec
dec
jae
repnz
mov
or
in
jns
xchg
push
and
punpckhwd
cmp
movsl
ds
repnz
cmp
mov
adc
mov
dec
outsl
aas
dec
je
imul
or
xlat
aas
adc
add
push
mov
push
jg
stos
sub
mov
push
or
hlt
call
push
or
ficoms
push
addr16
xchg
add
pop
test
test
mov
jns
mul
icebp
xchg
xchg
xor
loop
repz
mov
clc
inc
les
cmp
iret
jbe,pt
sub
hlt
add
pushf
pop
fwait
xor
jne
inc
sbb
cli
lcall
cmpsl
add
ja
push
xor
jo
es
dec
repnz
sub
mov
testl
dec
mov
push
jl
sub
ret
dec
push
insl
into
shll
lret
inc
insb
sbb
mov
outsb
xchg
push
and
iret
imul
sbb
jle
fcmovne
push
cmp
pop
fisubrs
pushf
push
sub
sahf
or
lret
push
push
xor
mov
lcall
cmpsb
out
xor
xor
subl
repnz
cwtl
rcl
jp
mov
aas
movsl
inc
push
and
out
inc
ret
andb
mov
movsb
aam
lods
push
dec
lcall
jg
mov
inc
push
stos
xor
pop
outsl
lahf
push
sub
scas
ss
aas
dec
jb
in
cmp
adc
loope
xlat
stc
ret
enter
mov
cmp
fisttps
dec
xchg
test
mov
imul
xchg
pusha
imul
ss
mov
sub
mov
push
mov
ss
scas
in
sbb
ja
idiv
js
cmp
sahf
gs
cmp
stos
sub
nop
sub
pushf
and
push
jns
mov
xchg
push
lret
pop
push
hlt
adc
xchg
cltd
mov
or
push
adcl
mov
push
outsb
pushl
cmc
fstl
jno
arpl
cwtl
clc
inc
sbb
outsb
in
in
add
sub
enter
icebp
imul
or
pop
jecxz
nop
or
inc
pop
mulb
mov
add
push
jecxz
mov
adc
adc
inc
roll
popf
fistpl
add
sub
call
clc
movb
mov
roll
stc
push
mov
xchg
and
mov
in
dec
inc
sti
lods
fistl
repnz
clc
mov
loop
lret
jecxz
mov
int
inc
mov
je
jb
jmp
push
dec
fidivl
ja
into
imul
ss
add
fwait
push
push
int
mov
xorl
dec
test
lret
sti
xor
xor
loopne
ret
and
jmp
pop
and
inc
test
cmp
push
mov
call
xlat
dec
pusha
test
mov
cmp
andl
or
lods
xchg
mov
mov
push
pusha
mov
icebp
mov
cmp
sidtl
idivb
sbb
inc
and
push
xorb
jg
and
ret
sahf
out
adc
jg
xor
lret
push
cmp
fstl
mov
inc
ret
loopne
nop
arpl
cmp
pushf
orb
loopne
xchg
dec
shrb
lea
leave
jb
cmp
jl
xor
xchg
aaa
sbbb
out
mov
call
xor
lock
loope
test
xor
mov
movsb
sub
daa
movsb
inc
adc
mov
jg
jmp
add
xor
jl
in
or
mov
in
sub
jle
in
and
mov
pop
lcall
jle
xchg
mov
int
mov
loopne
xchg
out
aaa
pop
popa
mov
popf
inc
test
push
out
cmp
popa
mov
dec
iret
addl
dec
dec
pop
mov
ss
jno
in
xor
mov
dec
add
pop
push
out
lds
inc
pusha
push
testl
and
repz
pop
ljmp
in
clc
je
add
push
and
push
in
dec
sub
pop
or
push
sub
lock
push
jb
lahf
imul
imul
mov
cwtl
push
jp
sti
movsl
cmp
sbb
mov
mov
pushf
repz
pop
in
mov
lods
stos
in
dec
ljmp
xchg
test
jmp
or
xlat
inc
pop
clc
jge
int3
cmpl
loop
shll
inc
in
cwtl
inc
fnstsw
inc
pop
adc
inc
dec
sahf
test
mov
cltd
xchg
and
dec
jmp
popa
cmpsl
xchg
cmpsl
pop
sub
jmp
jge
push
mov
fistps
sarb
sub
fcoml
jp
test
or
jne
inc
mov
or
mov
cld
pop
sbb
outsb
lods
sub
add
push
mov
fists
rsqrtps
mov
push
js
mov
push
lahf
ja
push
sti
push
cmc
popa
jp
cmp
in
xor
movsb
fcomps
jo
pop
imul
jbe
idivl
jmp
xchg
dec
xchg
addb
popf
test
in
push
bound
adc
scas
push
ret
loope
push
push
inc
insb
mov
iret
roll
xor
push
gs
mov
roll
loopne
pop
or
arpl
push
xchg
pop
pop
mov
loop
ss
fwait
and
jae
dec
fiaddl
mov
xor
rep
aad
loopne
add
mov
push
aam
filds
push
fldt
dec
inc
mov
stos
ljmp
pushf
adc
xchg
cmpsl
pop
leave
push
cmp
mov
fildll
dec
testb
jns
popa
hlt
dec
dec
add
addr16
sbb
mov
fildll
jp
add
out
mov
addr16
aam
std
xchg
cmp
iret
rorl
lret
mov
add
cwtl
mov
mov
pop
pushf
adc
sub
push
sub
fildll
push
sub
ror
or
jmp
sbb
jae
push
xchg
mov
sbb
cs
cmc
xchg
test
lea
xchg
pushf
sbb
leave
push
jmp
test
xchg
jge
call
loop
insl
mov
mov
les
lahf
sti
add
int3
test
xchg
or
mov
dec
mov
or
stos
outsb
pop
jns
mull
bound
cmp
inc
add
out
mov
xor
lds
repz
sahf
daa
shrl
sahf
jbe
or
xor
test
jo
into
aad
std
mov
stos
cmp
jbe
lret
push
sbb
or
xor
repnz
shl
jg
inc
cmp
rcrb
jp
or
push
and
sbb
sti
inc
sbb
and
cltd
bound
push
pusha
lcall
nop
cmp
xlat
xchg
or
fidivrl
add
push
push
mov
fisubrl
jmp
cld
std
scas
data16
std
xchg
fisubrs
cmc
xchg
inc
sbb
std
out
insb
mov
push
jb
dec
ljmp
jbe
pop
cmp
adcl
adc
rcrb
rcl
or
fcomip
and
dec
flds
ljmp
gs
sahf
inc
cli
in
dec
scas
test
je
in
pop
mov
sbb
mov
and
repz
into
or
lods
cmp
inc
sbb
mov
shl
mov
lock
test
imul
lea
addb
sbb
dec
ds
jnp
jb
push
andl
or
mov
je
cld
jno
jecxz
inc
mov
jmp
ficoms
pushf
divl
inc
pushf
fwait
mov
xlat
or
in
mov
out
sahf
shlb
adc
dec
lcall
mov
je
mov
dec
or
stos
and
xchg
in
xchg
rcrl
inc
jno,pt
push
dec
daa
enter
xor
mov
adc
mov
sbb
test
into
sub
xor
hlt
cwtl
test
mov
xchg
mov
mov
or
xchg
out
or
jb
cwtl
popa
xorb
xchg
pop
pop
rorb
jmp
icebp
arpl
test
icebp
loop
cmc
movsl
lret
movsl
cmp
dec
scas
add
test
mov
or
outsb
xor
divl
mov
pushl
jecxz
cmp
jo
and
xchg
mov
loop
jns
ljmp
push
xor
xor
xchg
jbe
jle
xor
test
leave
outsb
stos
pop
add
adc
stos
ljmp
inc
sbb
cltd
mov
subb
leave
pop
nop
dec
or
mov
inc
push
inc
daa
or
sub
out
cmp
cli
clc
dec
sub
inc
jo
push
fsub
xor
dec
xor
cmpsb
jl
fildl
jmp
sbb
xchg
fisttpll
adc
jp
into
dec
jle
dec
bound
addb
cmp
aad
adc
mov
loope
sbb
jmp
rorb
out
xor
cltd
mov
and
mov
in
inc
testl
out
lods
sub
mov
mov
push
xchg
or
int
insb
mov
out
pop
add
xchg
rol
fcomps
insl
push
jg
add
negb
jb
jae
xchg
data16
cli
xchg
outsl
push
xchg
mov
push
loop
add
dec
jg
lahf
inc
pop
push
loop
add
out
adc
imull
inc
xor
jmp
pop
mov
fwait
jg
cmpsb
add
xor
pop
nop
pop
jmp
ds
out
push
das
xchg
test
out
push
xor
shl
jmp
sbb
nop
xchg
mov
mov
push
sbb
adc
popf
fs
rcl
or
xor
fisttps
xchg
fnstsw
mov
fnsave
inc
scas
or
mov
and
pop
xchg
orl
or
and
lods
mov
movsl
or
arpl
cs
cmp
push
jo
inc
adc
addr16
push
xchg
jnp
sub
or
mov
insb
add
or
in
lea
add
pop
mov
repz
arpl
push
jecxz
adc
stos
push
sub
xchg
cmp
or
movsb
sub
lea
and
sub
mov
roll
sub
into
mov
hlt
sbb
xchg
pop
in
and
sti
xchg
fsub
stc
push
pop
pop
jp
clc
loopne
xchg
inc
pop
je
ljmp
xorb
jno
aas
jb
push
mov
jg
test
data16
repz
pop
jp
push
jg
push
xchg
inc
and
dec
cmp
mov
sti
movsb
xchg
int3
in
ljmp
push
push
push
lcall
sbb
iretw
pop
push
and
xor
xchg
ss
jp
jb
pop
mul
je
ret
fbld
fs
adcl
or
loope
xchg
xchg
pop
incl
hlt
xchg
sub
lret
jbe
aad
pop
clc
jp
push
sbb
ds
outsl
out
pushf
mov
xchg
dec
out
enter
repnz
jmp
jmp
test
cmp
hlt
cmc
scas
repz
test
sub
mov
jle
cmp
or
pop
lahf
shl
cs
pushf
mov
movsb
subps
lds
dec
sbb
call
push
rcll
sub
add
shlb
decb
pop
push
push
int
cmp
pop
aad
fs
sbb
jne
mov
sbb
sub
in
loop
cwtl
lea
lret
sbb
xor
pop
lahf
shrl
sbb
sub
outsb
fcmovbe
dec
push
sbb
and
push
mov
cli
cmpsb
arpl
dec
dec
icebp
add
pop
xor
in
mov
inc
sub
pop
inc
xchg
jecxz
adc
ret
dec
jle
sub
jg
lea
dec
pop
outsl
int3
out
pop
inc
or
fs
inc
cmc
fwait
loopne
cld
ficomps
jae
mov
out
mov
out
xorb
xchg
clc
in
xchg
pop
subb
or
addr16
sub
dec
push
push
and
rcrl
popa
jo
pop
jns
sbb
jmp
dec
sub
aad
js
movsb
add
scas
call
fidivs
loopne
cmp
jge
sub
and
mov
ljmp
sub
mov
cmp
es
mov
pop
insb
out
fs
sub
lods
xor
call
dec
xchg
xor
fcmovu
push
push
mov
sub
sub
lea
inc
ss
sbb
call
in
sub
jmp
mov
enter
call
es
mov
mov
and
repnz
dec
subl
xlat
push
out
imulb
jae
in
push
cmp
push
lret
popa
adc
xchg
adc
push
push
mov
aam
jl
mov
push
push
mov
or
mov
les
push
push
scas
and
push
inc
cltd
std
js
and
mov
adc
jecxz
sub
pop
cmp
hlt
mov
mov
sbb
and
sub
pop
lds
sub
sbb
jmp
dec
mov
iret
ja
lahf
data16
into
adc
dec
push
and
inc
cld
loop
jbe
test
add
push
call
pop
xor
mov
mov
out
ss
add
lcall
jmp
sar
adc
mov
cltd
bound
cs
popl
adc
fadds
imulb
mov
ljmp
lahf
xor
in
std
dec
jae
mov
mov
jbe
xlat
in
xchg
aaa
repz
and
pop
in
adc
sti
mov
cs
xchg
scas
out
in
jne
shrb
stos
or
cmp
movsb
mov
xor
scas
inc
gs
mov
lods
and
stc
mov
xorb
imulb
ja
inc
jb
cmp
nop
mov
or
mov
popf
out
push
rolb
in
lock
inc
shrl
mov
cs
movsb
push
jns
gs
das
lds
jns
mov
jns
mov
pop
jb
dec
test
adc
inc
in
cmp
std
in
pop
xchg
shlb
mov
adc
sti
ljmp
sub
xlat
ja
sbb
ljmp
sub
int3
or
test
adc
xchg
inc
loop
adc
sub
or
cmc
or
fimuls
xor
cmp
sub
mov
jecxz
dec
jne
into
adc
sub
cmp
add
std
pop
push
push
and
stc
cld
dec
mov
pop
jnp
inc
out
loope
ss
mov
mov
imul
stc
xchg
test
fidivs
lea
pop
fbld
ja
js
add
and
repnz
cwtl
repnz
jne
mov
dec
jg
int
popa
fistpll
cmp
push
jne
lret
int3
cltd
mov
int3
ss
sub
pop
imul
jg
sbb
xor
cltd
data16
lea
dec
push
gs
gs
jp
gs
std
stos
in
add
sahf
test
aad
leave
and
es
push
das
inc
or
or
sti
repz
sbb
test
inc
jb
sahf
push
lods
sub
jb
push
mov
push
js
icebp
call
ljmp
add
lret
test
movsb
cmp
std
out
add
and
outsl
loop
je
mov
jle
sbb
mov
mov
mov
mov
repz
loope
jne
cmp
mov
lret
jno
lret
mov
sub
addb
sbb
inc
scas
push
adc
inc
jle
cmpsb
lea
xchg
cmp
xchg
mov
scas
sub
std
pop
xchg
xchg
faddp
call
adc
cmp
cs
addr16
xchg
imul
mov
std
pop
add
xchg
dec
xor
and
mov
jb
dec
mov
mov
bound
sahf
test
xchg
adc
mov
hlt
add
jb
push
push
lds
mov
push
push
jcxz
xor
mov
fs
je
push
cld
out
sbb
dec
sbb
xor
int
insb
pop
gs
or
in
bound
das
ss
int
lahf
dec
das
popa
outsb
or
cmp
mov
pop
ja
and
mov
jne
xchg
sbb
push
add
pop
outsl
fiadds
push
call
inc
pop
decb
ret
insl
shll
icebp
cmpsl
xorb
bound
jbe
ret
sti
inc
je
repnz
addb
loope
mov
sbb
pop
aas
aaa
or
jns
addr16
inc
sbb
insb
arpl
mov
push
mov
lea
test
xor
pop
ret
mov
push
mov
push
test
and
add
inc
or
adc
pop
mov
nop
fwait
sarl
cmp
jb
lret
dec
bound
mov
lahf
lahf
test
push
movsb
clc
in
and
and
mov
repnz
leave
sub
xchg
push
cli
cmp
aaa
fmuls
leave
sbb
lret
add
into
in
or
sbb
mov
sbb
fadds
push
jmp
inc
mov
sub
pop
inc
cmp
lea
pop
push
jo
push
cmpsb
ja
push
xor
xchg
xlat
adc
inc
das
mov
mov
mov
rcr
inc
cmp
and
mov
mov
outsl
jp
push
int3
inc
mov
push
cmp
ret
adc
mov
sahf
push
jbe
xchg
mov
sub
pop
xlat
sub
mov
dec
dec
stos
repnz
ljmp
sub
mov
fisubrl
lahf
lods
mov
pop
cmp
xor
ret
std
mov
icebp
cltd
jg
mov
fxch
sahf
and
inc
sbb
mov
das
dec
in
sub
dec
stos
sbb
add
sahf
push
xchg
sbb
sub
jge
jmp
mov
cmpb
push
lods
jns
fnstcw
pop
cmp
adc
lods
add
xchg
mov
les
mov
push
or
push
mov
fimuls
push
add
sbbl
sti
fidivrs
in
adc
jle
adc
mov
push
aam
in
xchg
cli
ja
ret
push
mov
xchg
mov
and
ja
push
pushf
pusha
mov
movsl
aad
jge
in
leave
xchg
outsb
dec
mov
adc
mov
mov
rcll
mov
jb
or
je
daa
rol
ljmp
push
jmp
push
mov
xchg
adc
ds
jmp
popf
fnsave
idivb
pop
sbb
inc
and
dec
aaa
dec
inc
dec
in
clc
jle
push
sub
daa
gs
push
lock
scas
jbe
pop
lods
dec
scas
and
push
nop
out
jb
dec
jae
stos
push
jae
nop/reserved
sti
jne
xor
or
nop
inc
mov
leave
clc
and
popa
pop
pop
mov
shll
scas
sub
sub
mov
lret
inc
mov
lock
mov
push
lds
mov
sub
stc
inc
or
fists
movsb
jp
jne
xchg
or
jb
pushf
lret
push
xorb
int
dec
outsl
lds
xor
repz
shll
adcb
daa
lock
or
cmp
jmp
leave
push
jbe
and
add
mov
je
insb
fsubrl
not
cmpsl
fdivl
mov
xor
clc
inc
cmpsl
mov
icebp
mov
sbb
scas
sti
ja
push
je
mov
es
jecxz
sbbl
add
xor
dec
add
push
jg
outsl
xor
mov
xorb
cmp
jns
mov
and
ret
jp
mov
jle
movntq
out
enter
out
xchg
in
arpl
add
dec
ja
dec
xchg
cmpl
push
int
inc
and
inc
adc
or
pop
std
repnz
sub
add
inc
icebp
in
push
cmp
mov
xor
aas
rcl
hlt
jbe
inc
in
pop
movsl
mov
ret
in
imul
mov
stos
mov
jp
mov
in
cmp
in
lahf
stos
sbb
js
mov
hlt
adc
mov
mov
jge
xchg
cld
push
aaa
add
scas
not
and
pop
cmp
adc
dec
adc
addr16
fwait
mov
cs
jo
repz
jne
sti
xchg
test
jp
xor
adc
push
xchg
in
pushf
jle
lahf
insl
jp
push
pop
dec
mov
jnp
adc
in
fcmovbe
aas
std
lea
lcall
xchg
inc
into
rol
xchg
jle
sbb
sbb
clc
xchg
sbb
adc
aam
mov
ja
std
cli
lea
add
lea
fucomi
inc
cmp
outsl
mov
mov
sbb
ret
dec
ja
mov
rcr
pop
test
and
xor
das
hlt
loop
xchg
insl
insl
jns
mov
pop
divb
stos
cmp
les
jle
jl
movsl
cli
jne
inc
ret
scas
imul
aaa
inc
les
or
xlat
int3
mov
mov
fidivs
adc
insb
mov
imul
setle
ficoms
xor
dec
or
mull
xor
or
inc
into
aam
push
xchg
lcall
jno
mov
in
and
das
subl
test
xchg
out
dec
hlt
sub
mov
jp
cld
cmp
xchg
loope
dec
ds
dec
decl
cmp
xchg
dec
sub
imul
sbb
ret
jno
ficomps
xchg
cli
cmpsb
in
sub
jbe
fistps
pop
idiv
jle
add
mov
sbb
fmul
int3
mov
mov
dec
test
cmp
imul
push
adcl
inc
pop
popa
inc
and
jle
xor
add
das
inc
xor
mov
mov
fldcw
cs
pop
repnz
adc
inc
cwtl
xor
cmc
pop
pop
pusha
sbbl
cmpl
icebp
les
inc
inc
dec
in
lods
jns
mov
mov
push
cmp
dec
cmp
loopne
fldl
repz
cmp
iret
decb
in
rcll
xchg
and
mov
lret
into
mov
inc
dec
iret
pop
aad
sub
repz
sbb
test
mov
push
rcll
scas
sbb
adc
mov
jmp
cmpsl
mov
scas
pop
lods
inc
push
jmp
mov
jge
dec
push
hlt
push
out
xor
jns
stc
add
lcall
or
or
sbb
cmp
or
pusha
ret
mov
je
popa
test
jno
data16
and
nop
or
data16
mov
jb
jns
add
mov
xchg
mov
subl
sti
daa
mov
pop
jns
or
inc
sbb
inc
xor
or
ja
subl
repz
out
fdivl
push
push
stos
int
sarb
out
dec
mov
rcll
mov
shlb
xchg
push
adc
cwtl
cs
ret
jo
pop
push
cwtl
aam
stos
dec
push
pop
sbb
fnsave
pop
dec
sub
mov
inc
insb
stc
fisubrl
stc
dec
push
mov
aaa
sti
jno
loopne
mov
add
pushf
loopew
and
icebp
pop
xacquire
push
inc
push
xchg
push
out
xlat
es
mov
adc
pop
orb
std
fcmovnbe
icebp
and
jmp
sub
dec
mov
push
in
sub
dec
repz
or
lret
out
cmc
outsl
jno
lods
xchg
lret
popf
dec
lea
mov
and
add
mov
xor
inc
test
mov
stos
xor
push
cmp
in
insb
mov
shr
adc
shl
mov
fists
push
mov
add
negl
popa
xor
call
and
and
lret
arpl
inc
test
mov
sub
ret
xlat
testb
pop
in
dec
mov
aad
jle
adc
gs
or
mov
or
fldt
popf
notb
mov
add
or
lea
psubusw
pop
idivb
pushf
in
fisttpl
imul
or
or
push
inc
aas
lahf
xchg
inc
and
out
inc
cmpsb
mov
rorl
mov
pop
roll
es
and
std
jae
loopne
test
mov
stc
cmp
xchg
scas
cmp
inc
jmp
sbb
aam
jns,pt
outsl
adc
ja
xchg
dec
lcallw
dec
scas
inc
adc
idivb
xchg
cmp
push
dec
stos
test
out
mov
stc
push
inc
adc
push
mov
jecxz
mov
pop
fcmove
je
jns
inc
adc
jp
push
or
std
sbb
xor
imul
sbb
das
pop
outsl
push
pop
mov
cmp
les
add
and
jl
sbb
pop
inc
cld
testl
or
sub
push
xor
ljmp
jmp
xchg
stos
add
sub
lods
mov
xchg
inc
ss
xor
jns
add
mov
pop
sub
outsl
rcrb
imul
loope
inc
mov
push
mov
imul
je
jns
lods
push
xchg
std
jns
adcl
jbe
sub
xorb
stos
sub
decl
loopne
insl
dec
add
cli
inc
push
or
or
cwtl
hlt
fidivl
das
imul
inc
es
imul
mov
xchg
mov
call
xchg
sub
dec
sub
sti
adc
add
movsb
in
push
inc
and
pop
pop
xlat
ss
and
pop
jb
scas
das
pop
gs
idivl
lods
sbb
out
sahf
rclb
scas
mov
mov
cmpsb
xchg
pop
or
cmpl
dec
cmp
subl
dec
xor
pop
inc
pop
or
adc
and
daa
test
or
repnz
or
sbb
in
pusha
adc
lahf
xor
sub
clc
add
or
popf
mov
inc
xchg
add
int3
cwtl
clc
cmp
pop
pop
aad
adc
pop
and
dec
mov
out
cmp
adc
sbbl
lcall
inc
lods
repnz
jbe
adc
fidivl
lea
xlat
shll
lods
add
test
and
hlt
hlt
xor
add
test
sub
pushf
and
pop
fcmovnb
dec
xor
dec
outsb
mov
ljmp
adc
push
xchg
ret
insb
sbb
cli
fists
movd
sub
test
xchg
mov
and
mov
aam
lea
inc
loopne
gs
sub
out
aaa
in
mov
pop
pop
push
in
or
mov
lods
dec
and
enter
stos
decb
test
cmc
jl
scas
shrb
outsb
add
int
inc
ljmp
mov
add
jo
sar
dec
and
push
jge
dec
sub
outsb
add
rorb
enter
and
mov
int3
cmp
loope
xchg
push
xor
aas
dec
sub
pop
in
adc
sub
mov
push
outsb
xorl
pop
imul
lahf
ret
cmp
daa
fidivs
cs
sbb
out
out
les
cmpsb
out
lods
mov
dec
out
jp
stos
sbb
adc
test
push
cmp
pop
sub
pop
sbb
pop
pop
aad
and
shrb
or
pop
mov
fs
jge
add
push
xor
nop
push
decl
lock
jle
mov
faddl
pop
add
dec
scas
jns
push
jbe
jb
jo
or
xchg
cltd
bound
jmp
xor
sub
cld
ljmp
sahf
and
sti
jno
into
ljmp
jo
sub
sub
mov
push
aas
inc
popa
sbb
ret
fstpt
cmpl
inc
jns
ljmp
fcompl
push
add
cmpsb
adc
or
in
and
sbb
hlt
test
push
sbb
xchg
outsb
cmp
mov
xchg
insb
insl
sub
xchg
mov
inc
jns
mov
orb
push
cmpl
divb
clc
xchg
pop
dec
repz
dec
sbb
ds
das
fidivs
popa
aam
add
or
pop
push
js
mov
and
scas
add
nop
lods
adc
adc
call
outsl
cmpsb
inc
pop
inc
xor
inc
push
pop
xorb
jg
aam
mov
dec
scas
jns
adc
jae
fsubrs
js
adc
insb
inc
les
and
xor
in
adc
and
aas
inc
cld
outsb
push
pop
push
jle
stos
mov
add
jmp
xchg
loope
pop
pop
bound
wrmsr
cmp
fcoms
repnz
flds
mov
inc
arpl
push
orb
push
xchg
popa
dec
sub
xor
push
inc
arpl
in
adcb
sub
lahf
mov
push
push
inc
loope
loope
hlt
mov
out
out
aas
mov
shlb
mov
mov
or
sub
xor
adc
mov
mov
mov
das
and
sub
pushf
xchg
daa
sbb
outsl
je
inc
mov
shlb
inc
mov
testl
lds
int
adc
arpl
fcoms
inc
mov
mull
dec
jno
sub
adc
int3
xchg
fstps
bound
sbb
xor
jae
fnstsw
add
push
fwait
shll
jo
popf
imul
adc
sub
test
or
les
inc
jb
jns
jnp
lock
sbb
cmp
in
mov
iret
fucomip
jp
dec
arpl
push
sbb
add
sahf
mov
xlat
cmc
and
insl
stc
and
dec
xor
je
lahf
push
movsb
xchg
shr
jmp
loop
inc
bound
xchg
sahf
sbb
mov
sub
repz
pop
decl
nop
add
mov
repnz
jno
js
sbb
adc
jbe
imul
shrb
mov
mov
jne
push
fisubrs
inc
ror
cs
sbbl
and
dec
jnp
xchg
push
lds
pop
push
lahf
jae
push
repnz
seto
clc
add
loope
data16
sbb
lods
daa
stos
lods
fs
mov
ret
mov
xlat
pop
jbe
push
daa
orb
sub
sbb
mov
mov
push
stos
in
pop
sbb
lods
lret
sub
enter
and
rclb
jnp
lock
stos
imulb
rol
jbe
pop
pop
bound
pop
idivb
xchg
lds
test
jo
push
sbb
aam
sub
inc
mov
neg
xchg
add
cmp
mov
int3
repnz
adc
inc
pop
arpl
movsb
enter
imul
imul
rolb
call
negl
ljmp
cmp
pop
cld
mov
call
or
or
fistpll
push
js
pop
sbb
xchg
add
iret
sbb
lret
sahf
or
fmull
cmp
mov
jmp
in
add
mov
int3
mov
cli
adc
inc
decl
in
push
pop
int
xlat
cmc
sub
scas
pop
dec
cli
xor
sti
mov
add
in
adc
adc
push
rcl
mov
in
push
jnp
jge
pop
ja
out
xchg
test
shlb
adcb
push
xor
jo
or
sub
fisttps
xor
sub
xchg
sub
push
sub
lcall
xchg
repz
stc
data16
xchg
push
jmp
inc
cli
adc
add
fisubrl
push
cli
leave
insl
or
lock
decb
jl
data16
rclb
inc
aaa
sti
cmpsl
or
in
fidivrs
test
push
add
rorb
stos
je
pop
aas
outsb
jbe
xchg
fmuls
int3
sti
lret
shr
sbb
test
sub
push
push
mov
rorb
les
xchg
jns
xor
push
pop
sub
or
cmp
xor
xchg
lods
hlt
mov
jmp
jns
mov
jae
cmc
adc
adc
das
stos
mov
pop
rcll
dec
test
js
xchg
dec
push
pop
ljmp
mov
add
pop
and
xor
adc
cwtl
push
jbe
lds
fidivrl
jg
pop
rorb
clc
push
lahf
jl
sub
shrl
sub
es
jno
pop
roll
and
js
jg
or
sbb
fucomi
or
mov
jns
mov
jl
test
lods
es
add
inc
cli
lcall
cwtl
cmp
imul
pop
mov
fwait
and
jp
lret
scas
cmp
push
pusha
lahf
or
pop
xlat
cmp
addl
or
dec
xchg
pop
mov
mov
mov
outsb
loop
xor
int3
and
les
pop
add
adc
pop
rcr
enter
cmp
pusha
stos
adc
lea
and
out
ficomps
pop
imul
cmpsb
call
xor
pop
test
xchg
popa
push
mov
pusha
sarl
jle
mov
out
sbb
aam
fwait
out
sub
sub
jge
jl
in
enter
dec
push
and
xchg
or
mov
add
mov
jmp
push
mov
and
cmp
repz
sub
sbb
dec
call
addr16
xlat
pop
jmp
je
sub
inc
enter
das
xchg
adc
lea
adcl
std
cs
push
push
stos
lods
pop
and
push
mov
mov
push
call
test
pop
je
inc
ficoms
jb
aas
push
pop
jbe
das
hlt
mov
jmp
addl
or
mov
popa
pop
loopne
gs
adc
xor
test
sbb
cmp
fistpl
sbb
or
push
into
fisubrs
daa
int3
pop
add
ret
rcll
jecxz
out
in
xlat
sbb
mov
mov
dec
pop
sar
mov
push
movsl
mov
pop
adc
add
push
ja
jmp
mov
aad
push
mov
mov
ja
xchg
xor
sbb
out
loope
movsb
jmp
jmp
aas
pop
stos
cmovns
mov
movsl
les
ds
lds
adc
loop
push
push
mov
out
sub
popf
xchg
das
fisubl
daa
imul
inc
leave
xor
sub
jbe
and
inc
push
jle
push
mov
aad
adcl
xchg
or
dec
dec
popa
aam
std
pop
jo
lahf
movsl
jns
sbb
adc
jle
pop
lock
addr16
inc
sbb
ds
out
cmp
xor
push
data16
pop
dec
mov
push
fyl2xp1
mov
lock
insl
cmp
pop
dec
jmp
dec
leave
add
jnp
inc
out
or
xlat
dec
or
sbb
and
lcall
pop
je
test
std
mov
pushf
sbb
mov
clc
das
jo
out
imulb
pop
jl
dec
stos
mov
mov
mov
and
xchg
dec
movsl
jne
push
push
pushl
adc
loop
popf
les
out
sub
jnp
add
push
adc
sar
dec
cmp
add
test
add
push
setp
data16
sub
lds
inc
mov
not
mov
mov
les
jb
jge
push
and
fidivrs
aas
out
sub
push
mov
xchg
movl
fiadds
inc
mov
and
cld
mov
ret
cmpsl
pop
adc
dec
cmpsl
fndisi(8087
int
mov
imul
cmp
mov
inc
jl
mov
fisttpl
pop
dec
aad
fadds
fwait
jge
test
mov
call
dec
popa
cld
sub
cmpsb
sbb
je
push
push
inc
dec
fwait
dec
lock
or
and
das
inc
add
xchg
and
sub
inc
jns
mov
dec
fcoms
xor
pop
add
icebp
dec
jns
inc
out
mov
or
aas
jb
dec
in
mov
jnp
pop
roll
add
mov
enter
or
out
mov
out
sub
out
arpl
sbbl
roll
into
pop
inc
add
mov
mov
idiv
lret
mov
jne
popa
gs
adc
test
je
mov
les
jae
jno
rcr
adc
leave
aad
dec
push
addr16
movsb
outsl
jle
leave
add
mov
adc
jecxz
insl
lahf
test
test
mov
jne
push
push
add
insb
cmp
ds
movsl
stos
outsb
jnp
cmc
jns
jmp
push
fidivrs
and
lea
outsl
sub
push
out
fidivl
sahf
mov
lds
cmpsb
rorl
mov
popf
adc
push
push
pop
enter
xor
push
test
dec
sbb
mov
enter
lds
push
mov
fisubl
stc
into
cld
and
lods
movsb
leave
daa
or
pop
jbe
out
push
lds
sub
rorb
data16
insl
push
insb
cmc
scas
mov
push
inc
in
cmp
arpl
sbb
pop
mov
push
gs
jp
fsincos
mov
and
xor
sub
cmp
pop
aas
cmp
sub
cltd
arpl
mov
jbe
aam
int
scas
xchg
les
pop
pop
cmc
pop
mov
xchg
cmpl
inc
out
test
ret
scas
fistpll
mov
std
adc
dec
mov
xor
mov
jne
push
pop
shlb
out
fdivrl
lea
movsb
or
add
mov
fisubrs
push
and
mov
in
and
jne
adc
push
ficoms
int3
xor
jle
cmp
or
out
pop
xorb
mov
stc
bound
pop
sbb
cld
push
loope
stos
icebp
int
push
mov
std
push
xchg
sub
push
cmpsl
push
pop
in
enter
and
addb
mov
dec
or
xchg
fnstsw
ror
xlat
test
xor
mov
adcl
fldt
in
or
mov
sti
xchg
mov
sub
test
ja
test
xor
js
das
push
popa
mov
and
push
pop
loope
push
es
cwtl
cwtl
mov
push
pop
inc
scas
into
mov
sub
stos
pop
or
mov
pop
mov
add
call
nop
add
jne
out
mov
pop
out
ret
push
rcl
dec
mov
and
clc
and
jmp
jp
push
xchg
jle
xor
out
pop
xor
mov
aaa
hlt
dec
inc
inc
cmc
test
loope
pop
push
jno
sahf
out
shl
xlat
pop
out
ljmp
out
push
cmpsb
fdivrs
fldcw
aad
mov
cmc
gs
dec
or
mov
mov
xor
mov
inc
and
push
stos
and
pop
mov
add
xor
jns
popa
xchg
jecxz
xor
sub
xor
pop
and
dec
add
ja
push
cmp
cmp
mov
leave
fwait
jecxz
mov
shrb
add
lcall
sar
cmp
out
loopne
pop
negl
jno
call
in
jge
add
insl
xchg
stc
sbb
in
mov
sub
dec
cmp
add
add
mov
stos
aam
inc
jnp
mov
addb
fdivl
lods
in
aad
repnz
mov
bsf
cmovb
ss
jb
pop
pusha
in
inc
or
add
in
fcompl
sbb
scas
xchg
add
cmp
adc
pop
sbb
jae
jne
pop
rcrl
dec
repz
mov
insl
js
adc
hlt
aaa
inc
mov
lods
or
js
adc
dec
push
test
aaa
push
in
xor
jge
movsl
add
xchg
mov
stos
iret
inc
repnz
fstps
pop
xchg
sub
jle
or
rcr
lock
adc
sti
inc
adc
mov
test
or
and
xor
sbb
jbe
pop
or
jo
into
js
xchg
sbbl
inc
mov
subb
imul
movsl
push
dec
addl
and
cmp
inc
jb
fisubl
pop
push
ret
outsb
ficoms
loopne
xor
or
mov
arpl
push
cmp
popa
das
jp
int
mov
or
clc
mov
test
rolb
icebp
mov
sub
in
jmp
inc
sub
cli
inc
jg
xchg
jne
ret
mov
lret
jmp
add
rcrb
push
mov
push
es
xor
lds
cmc
mov
push
pop
stc
lcall
mov
lods
lcall
iret
fstpt
pop
scas
mov
popl
and
mov
insl
inc
dec
inc
sub
adc
cmp
mov
in
divb
add
sub
mov
jecxz
ret
pusha
cmpsl
int3
sub
enter
or
sahf
push
filds
orb
lods
mov
out
bound
pop
movsl
cmp
inc
xor
repnz
xor
pop
jbe
sti
mov
cmp
stos
dec
cmpsb
jbe
mov
into
jo
mov
mov
call
pop
rcrb
pop
int
xor
por
inc
arpl
cmp
jbe
and
paddusb
lock
jbe
div
pop
sbb
mov
loopne
and
outsb
push
xchg
cmp
call
nop
jp
shll
lcall
jns
fcompl
xor
outsb
adc
ja
push
cmp
test
outsb
xor
scas
mov
jecxz
or
test
or
pop
cli
sbb
jge
cmp
int
inc
cmpsb
jb
mov
sarl
xchg
lock
push
mov
hlt
push
mov
subl
cwtl
iret
incl
jl
jns
or
outsb
or
push
and
mov
ljmp
adcb
mov
pushf
ficompl
add
insb
sti
pop
jg
xorb
clc
loope
cmp
iret
mov
adc
push
loop
sti
in
dec
or
lcall
pusha
mov
roll
add
sub
inc
inc
cmp
stos
test
jb
movups
xchg
or
add
enter
lret
or
or
lods
pop
push
add
xchg
shl
push
mov
sbb
movsl
ss
out
out
xor
loopne
or
sbb
enter
lahf
out
mov
push
data16
int
inc
gs
addr16
imul
daa
pop
lcall
adc
xchg
dec
jle
add
or
xor
jl
cld
push
imul
adc
xchg
mov
inc
mov
add
fidivrl
lret
cmp
push
sahf
sti
icebp
notb
push
data16
dec
sbb
jne
ror
sbb
xchg
pop
cmpsb
push
shl
cltd
sbb
std
mov
fcompl
sbb
test
repz
addr16
push
cltd
fildl
mov
sub
popf
or
xor
out
cmpsb
popf
xchg
arpl
sub
or
cld
add
popf
adc
mov
cltd
push
lock
xchg
mov
mov
adc
mov
push
xchg
and
rclb
loope
sbb
imul
xor
repnz
shrb
out
mov
cmpsb
ret
sbb
inc
scas
mov
jle
mov
dec
hlt
adc
xchg
les
xor
fnsave
adc
and
mov
xchg
jb
push
mov
sub
cmpsb
out
pushf
call
xor
cli
dec
jg
and
in
adc
pop
in
stos
daa
scas
add
sahf
and
stos
inc
adc
icebp
loop
adcb
lods
rclb
out
mov
push
cmpsl
pusha
xlat
and
adc
xchg
in
xchg
xor
adc
sub
in
clc
adc
pop
push
add
imul
arpl
jbe
ret
push
cmpsl
arpl
mov
or
scas
jb
sbbb
in
or
or
fsubrs
adc
mov
ffreep
xchg
pushf
hlt
pop
das
dec
sub
push
xchg
cwtl
iret
xor
les
mov
xor
mov
xorl
jmp
xchg
cmpb
pop
cmp
daa
add
sub
cs
test
and
jl
push
sbb
pop
outsl
xchg
jl
ss
jae
enter
sub
and
out
or
push
call
ja
fstps
mov
sbb
out
movsl
xchg
jnp
fwait
sub
xchg
pop
filds
jmp
inc
jle
pusha
xor
popf
insl
pushf
aam
push
in
pop
ret
les
adc
push
bnd
and
fs
mov
cmp
cs
mov
mov
ss
shrb
ja
hlt
stos
add
les
lret
push
sbb
rcr
scas
dec
adc
dec
pop
lahf
std
cmpsb
adc
inc
jae
mov
cmp
push
sub
out
scas
cs
xor
jb
ret
lods
in
icebp
push
mov
stos
int
lahf
xchg
imul
addr16
and
mov
fcomps
lods
mov
mov
mov
flds
or
dec
mov
mov
jecxz
mov
adc
pop
mov
mov
xor
jne
and
inc
shlb
icebp
je
in
mov
cmp
nop
mov
dec
adc
and
pop
es
scas
sahf
pusha
inc
sbbl
mov
ja
cltd
sbb
and
int3
mov
cmp
mov
dec
mov
test
add
xchg
xchg
jnp
mov
enter
xchg
jns
hlt
insl
pinsrw
cmp
xchg
pop
ljmp
frstor
mov
mov
negb
add
sbb
inc
sub
dec
outsb
imul
int3
mov
jo
xor
outsb
roll
shll
mov
sbb
sub
xor
in
icebp
dec
ficoms
push
jnp
jle
movsl
pop
mov
push
pop
mov
arpl
mov
jmp
cmp
orl
sarl
lock
divb
jae
dec
push
loope
adc
inc
int3
outsl
sahf
mov
lock
lds
mov
outsl
test
sbb
ljmp
mov
push
mov
mov
fxch
push
enter
xor
dec
mov
xor
test
pop
or
mov
sbbb
jge
insl
inc
mov
out
xchg
dec
test
lds
add
je
out
cmp
pop
mov
lds
mov
add
push
std
sub
cs
push
lods
pop
jno
jnp
je
jns
ljmp
jbe
sti
insl
fiaddl
pop
out
cmp
mov
loope
dec
testb
add
mov
xchg
out
sbb
cltd
test
mov
sub
dec
jp
out
mov
push
nop
aas
sub
dec
mul
out
mov
push
jl
frstor
imul
dec
btcl
pop
mov
add
fnstcw
movsl
and
and
cmp
scas
lret
jg
dec
push
add
pop
pop
jae
iret
mov
jecxz
es
fidivs
dec
inc
add
cltd
rclb
sub
repnz
imul
and
ds
pushw
and
inc
push
add
pop
jo
push
sub
lcall
data16
pop
sbb
ret
fdivrp
jo
pop
popa
out
lods
out
adc
sahf
cmpsl
int3
jge
ds
sbb
xor
mov
mov
mov
xchg
jno
insb
adc
mov
mov
mov
cltd
jnp
lods
dec
divl
jp
mov
in
jnp
xor
pop
repz
sub
int3
cmp
mov
lods
jmp
cmp
push
out
dec
sub
jnp
fcompl
scas
add
loopne
and
xchg
cmp
cmp
jle
xor
insl
pusha
outsl
push
fs
scas
add
fldl
dec
sbb
dec
jae
outsl
pop
xor
fldenv
dec
testb
ljmp
out
fisubrl
mov
pop
dec
fsubr
xor
or
sbb
stos
push
fildll
dec
cli
andb
xchg
mov
outsb
enter
and
daa
mov
mov
je
stos
lods
jae
mov
fistl
mov
jnp
jno
lods
and
adc
jecxz
sbb
lcall
sbb
and
and
jle
mov
push
inc
fwait
sar
or
into
mov
aad
push
sti
inc
movsb
loopne
dec
jbe
cmc
insl
and
xor
hlt
add
data16
in
xor
and
lock
lock
pushf
js
inc
stc
xor
pop
mov
adc
ret
adc
divb
outsl
dec
sbb
mov
mov
push
xchg
mov
cmp
mov
or
outsl
mov
pop
mov
ss
sub
cli
sub
jle
push
mov
sbb
inc
js
xchg
fdivrl
push
push
xor
mov
xchg
test
cmp
xchg
mov
mov
xchg
mov
insb
jb
movsl
jo
inc
negl
xor
or
mov
arpl
ret
and
mov
pushf
das
fiaddl
shr
mov
sbb
daa
jno
mov
mov
adc
mov
jmp
lea
cmpsl
cld
leave
pop
lahf
jmp
cld
mov
or
add
aaa
rcl
push
out
dec
cli
scas
popf
cmpsl
push
sbb
sub
xchg
jmp
sbbl
jne
mov
loope
inc
xor
add
xchg
sub
jnp
sub
inc
push
mov
sti
mov
hlt
rep
mov
loopne
ret
push
mov
loope
pop
push
dec
mov
push
dec
scas
out
mov
int
fldcw
adc
jne
push
clc
inc
jae
leave
cltd
push
push
das
mov
dec
mov
enter
ljmp
mov
xor
lret
pop
mov
xchg
dec
cmc
cwtl
out
fisubl
jns
aaa
jp
xlat
js
repnz
push
cmp
stc
sub
jmp
stc
adc
les
outsl
xor
mov
push
or
pop
call
or
nop
cmp
mov
les
aam
xchg
dec
mov
inc
das
sbb
loop
aad
sub
push
xchg
add
sahf
in
xchg
mov
repz
lret
jl
les
push
mov
jo
xor
jnp
dec
mull
scas
pop
and
jb
insb
mov
mov
xchg
mov
mov
sbb
add
pop
ficoms
rcr
mov
aaa
xchg
adc
pop
decb
pop
into
lock
cmp
dec
das
xchg
mov
mov
xchg
jnp
cmpb
cwtl
cmpsl
sti
dec
leave
jp
lods
shrl
jg
in
or
dec
inc
shrl
test
or
inc
mov
add
xchg
mov
cmp
fadds
ja
dec
and
test
imul
xchg
mov
stos
es
jle
pop
fwait
or
pop
arpl
bound
xor
test
push
or
je
add
movsb
push
jl
ret
insl
cmp
dec
repnz
adc
jo
stos
mov
arpl
push
adc
lret
movsl
aaa
outsl
or
out
sbbb
ljmp
and
clc
popf
lahf
sahf
xchg
popa
rcr
pop
cmc
incl
mov
out
ret
xchg
cmp
mov
push
popf
ret
call
sar
push
pop
repz
xor
popa
das
or
rcrb
test
insl
nop
add
mov
arpl
mov
xchg
dec
jg
pop
dec
test
mov
dec
cmp
cli
xchg
xlat
pop
pop
jb
adc
jmp
mov
in
xchg
mov
xchg
jb
sbb
jns
stc
sbb
sub
dec
adc
inc
inc
sub
push
mov
aas
cmp
scas
xor
inc
fsubrp
inc
andl
add
cmpsl
int
and
test
push
mov
mov
push
or
hlt
fs
stos
iret
sahf
loop
push
mov
repnz
arpl
sub
fstpt
add
mov
jl
das
inc
lods
cltd
mov
std
out
imul
stos
iret
cs
push
xchg
jb
xchg
adcl
pop
pop
stos
aaa
ret
dec
mov
jae
push
jmp
jae
test
and
es
loop
dec
loopne
movsl
pop
cmpl
fstps
jmp
rcrb
nop
ja
in
mov
int3
sbb
xor
xor
pop
stos
cltd
jge
xlat
jle
stos
faddp
xor
sahf
inc
and
and
push
jg
stos
test
neg
inc
leave
cmp
sub
dec
mov
pop
dec
stos
adc
fninit
jne
imul
pusha
xchg
lret
leave
ror
mov
and
ljmp
aam
sbb
sbb
call
push
jecxz
ficompl
add
add
pop
add
ja
mov
and
mov
push
js
lcall
fsubrp
shll
shll
mov
cmp
jno
xlat
sbb
inc
adc
enter
push
repz
cmp
fs
mov
pusha
or
and
cld
sbb
repz
fistps
pop
mov
aad
jns
outsb
mov
cwtl
mov
movsl
jae
pop
pop
js
add
add
std
push
push
imul
loopne
inc
pop
push
adc
sbbb
imul
push
aad
sbb
mov
xor
outsl
das
adc
clc
mov
imul
out
int
shl
xchg
push
jl
mov
scas
add
pushf
cwtl
pushl
icebp
andl
sbb
push
jno
push
xchg
cmpsl
xchg
mov
cli
cmp
push
fidivs
aaa
shl
ds
mov
mov
jno
and
xchg
sbb
pop
enter
popa
lods
or
push
and
mov
outsb
shrl
clc
push
divl
mov
enter
jmp
leave
neg
pop
mov
xor
push
add
push
test
in
out
mov
ds
dec
xor
inc
ja
outsl
mov
mov
aaa
movsl
and
in
inc
push
sahf
std
repnz
pop
ds
ret
jno
sbb
lahf
dec
mov
pop
add
pop
movsl
fimull
inc
jle
enter
repz
push
and
push
cmp
dec
cli
cmp
dec
jno
stos
inc
sub
add
scas
idivl
sti
out
cwtl
or
std
jmp
js,pt
cmpsl
push
push
mov
pop
and
push
sbb
and
fs
mov
test
pop
in
inc
mov
int3
sub
aaa
pushf
lods
add
cwtl
and
inc
adc
shll
mov
xor
mov
lret
mov
ret
fcoml
jbe
pop
cmpsl
xchg
pushf
mov
jl
add
jmp
data16
ss
xlat
clc
divb
adc
inc
jle
out
push
adc
xor
mov
in
mov
cmp
pop
mov
out
ljmp
aas
dec
cmp
cmp
pop
or
push
daa
dec
pop
int3
cmpsl
inc
cmp
pop
jge
adc
cwtl
loope
sbb
mov
or
das
sub
xor
cmp
pop
in
xchg
mov
push
push
cmp
cmp
clc
xchg
jecxz
jns
leave
fwait
push
aas
jecxz
loop
cmp
rol
sbbl
lods
dec
andb
or
pop
std
outsl
pop
sbb
jmp
cmpsb
mov
test
cmp
dec
shrl
aaa
pop
pop
and
ret
mov
imul
fsubrs
mov
in
mov
sbb
clc
push
jbe
add
pusha
xor
pop
rorl
inc
pop
dec
fldt
daa
mov
jne
testl
testl
mov
daa
cs
mov
push
xchg
test
sub
mov
and
xorb
sbb
pop
sar
outsl
inc
cmp
ss
push
and
and
add
clc
sub
xchg
push
std
jl
push
iret
mov
outsl
arpl
outsb
je
xor
sbb
sbb
orb
xor
inc
dec
sub
rolb
add
mov
xchg
leave
adcb
inc
mov
sbb
and
scas
pop
sub
out
sbbl
fwait
aam
mov
ret
pop
clc
nop
mov
dec
rcl
or
dec
stos
or
mov
popa
and
and
roll
mov
mov
clc
and
jmp
mov
dec
mov
insl
stos
addr16
dec
pop
ret
ja
jp
rorl
sub
es
inc
mov
and
fistpl
jno
stos
mov
pop
add
mov
fcomps
sub
and
mov
stc
cli
in
or
rcrl
shrb
rcrb
sub
mov
xor
insl
aas
mov
jbe
popw
faddl
into
mov
test
in
dec
or
pop
popa
aam
test
adc
fstp
std
mulb
adc
cmp
enter
test
jnp
mov
sbb
jecxz
cmp
inc
inc
cmc
hlt
hlt
dec
xchg
arpl
mov
mov
jecxz
xchg
lret
test
lods
sahf
mov
lds
mov
xchg
int
arpl
sub
sbbb
orb
dec
or
xchg
or
mov
outsl
mov
sbb
popa
lcall
inc
jg
lock
jl
dec
push
pop
jb
out
mov
orl
jge
sbb
inc
fadds
rclb
fdiv
lds
dec
rol
jge
sub
notb
xlat
out
aad
jbe
nop
fisttps
xlat
adc
xor
cmp
push
das
cmp
icebp
or
sarl
aad
icebp
outsb
push
pop
xchg
pusha
sbb
jae
sub
fs
sahf
in
inc
mov
aad
lods
fbld
pop
int3
lds
push
mov
enter
mov
call
lret
xchg
dec
fists
pusha
sahf
cvtpi2ps
das
jno
cmp
mov
addr16
cwtl
push
add
imul
js
imul
dec
pop
inc
repz
sahf
xchg
mov
lret
mov
les
push
adc
adc
nop
lods
push
fimull
je
pop
xchg
cmpsb
repnz
push
and
imul
push
cltd
fmuls
fcomip
rorl
clc
pop
cmc
push
and
lret
cli
imul
mov
aaa
lods
push
stos
std
jne
std
xchg
push
sahf
outsb
add
xor
call
jb
pop
adc
leave
push
mov
mov
and
movl
mov
dec
pop
shl
sbb
inc
push
and
pop
fsubs
push
cmc
sbb
cmp
xchg
fwait
mov
jo
and
add
lds
and
fs
mov
insb
hlt
repnz
add
leave
outsl
call
pushf
ljmp
popf
jbe
jne
jno
arpl
pop
xchg
insl
sub
lret
sbb
mov
xchg
and
out
sub
mov
dec
iret
in
jne
jg
cmp
jns
and
orps
jmp
scas
dec
push
adc
jno
jle
inc
mov
sbb
mul
sbb
mov
push
insb
das
dec
push
nop
cmp
xchg
cwtl
fmul
cmp
xor
fidivl
lret
xchg
inc
inc
cli
fiadds
add
mov
daa
mov
jno
push
push
cld
pop
stc
pop
leave
xlat
pop
mov
repnz
inc
sub
fisubl
addr16
aaa
sbb
adc
pop
js
cmp
outsb
orb
aaa
sbb
std
lea
xor
fcmovnb
hlt
out
mov
sbb
in
cmp
lds
xor
mov
pop
js
or
out
repz
testb
mov
push
fwait
push
sub
cmc
mov
in
lds
fs
shll
movb
int3
les
fs
ljmp
imul
push
movsl
mov
mov
and
or
dec
movsl
into
cmpsl
cmp
ficomps
jns
inc
jg
pushf
push
rcll
mov
call
insb
jo
movsb
inc
cmp
fiaddl
stc
out
mov
add
sub
and
jns
lea
mov
fsubrl
dec
movsl
aaa
xor
js
ficoms
lahf
sahf
lcall
sbb
mov
fucomi
jno
pop
sub
sub
std
out
cmc
icebp
sub
ret
or
lea
mov
pop
es
movsl
jmp
push
and
cli
test
mov
dec
in
in
sub
pop
push
push
ficoml
popf
push
enter
lods
jg
rcrl
and
lds
out
int
test
xchg
sub
arpl
inc
fists
jg
loop
sub
movsb
sub
push
jns
les
push
hlt
adc
popf
addb
add
sbb
dec
bound
dec
mov
aam
lods
sbb
inc
jbe
lea
aam
jmp
dec
mov
shlb
pop
mov
push
clc
std
cwtl
daa
mov
imul
testb
xlat
adc
xor
pop
mov
jo
inc
jp
pop
sub
jge
jecxz
std
mov
mov
fmulp
push
out
mov
mov
push
lods
or
das
les
xchg
inc
jg
inc
outsb
lds
mov
movsl
push
jle
mov
cmpsb
ret
popf
mov
in
test
pop
jg
add
lods
clc
jg
sub
cmp
aam
cmp
js
call
pop
mov
mov
xlat
popa
enter
test
int
fwait
jge
mov
jle
and
mov
gs
mov
xor
jne
jg
and
mov
and
ror
mov
cld
int
jp
pusha
push
sub
std
jg
jle
dec
fistpll
cmpsl
sub
das
or
daa
sub
icebp
test
adc
mov
scas
imul
addl
sbb
mov
dec
ds
andb
cmp
cmp
xor
sbb
mov
cmp
add
test
sub
pop
int
loope
push
or
dec
mov
sub
cltd
sub
mov
push
lods
inc
dec
mov
pop
psllw
and
imul
and
inc
and
jmp
and
xor
sub
arpl
rorb
mov
mov
jne
adc
xchg
lds
adc
dec
inc
cwtl
and
mov
sub
stos
lret
pop
std
xor
add
arpl
pop
std
rclb
mov
mov
popf
outsb
pop
sbb
pop
sub
xor
inc
pop
into
cmp
cli
pop
adc
loope
mov
sbb
sbb
or
icebp
cmpb
xchg
ja
and
pop
mov
xchg
rol
nop
add
idiv
push
stos
add
push
clc
xlat
js
lahf
mov
dec
aas
and
sti
das
or
or
lcall
sbb
cmp
sub
push
fwait
stos
sub
mov
outsb
in
test
pop
aam
in
pop
nop
mov
pop
lods
aam
cmp
sbb
pop
hlt
jno
xor
repz
ljmp
or
sub
and
in
rolb
and
rorb
mov
jg
sbb
sti
cld
jmp
jae
lock
mov
popf
lods
adc
loopne
arpl
arpl
icebp
shll
cmp
push
inc
mov
xchg
push
push
dec
inc
jmp
add
mov
outsb
inc
cmp
add
decb
pop
mov
mov
add
stos
mov
lea
jb
xor
and
movsl
pop
mov
add
and
clc
ss
add
in
xchg
add
push
mov
insb
adc
jbe
es
lea
in
fistpll
xor
or
or
and
mov
cltd
sahf
push
jmp
filds
dec
lcall
sub
adc
les
test
or
stc
sarb
mov
sbb
int3
out
lret
sbb
jle
sub
mov
cmp
xor
lcall
mov
in
cs
add
fstpl
gs
addl
xor
push
lds
js
cmp
mov
and
mov
movlps
or
add
in
sub
shl
stos
sbb
aad
dec
je
je
mov
movsb
jp
shlb
pop
sbb
push
xchg
int3
sub
aad
cmovnp
mov
dec
cwtl
lcall
add
adc
and
inc
xchg
jp
sub
push
fstpt
cmp
imul
push
jg
ljmp
hlt
jb
adc
std
xor
imul
cmc
divl
inc
fldcw
pop
and
notl
jmp
repnz
arpl
add
push
mov
addr16
adc
xchg
out
cld
sub
lret
das
adc
jg
in
add
add
xchg
add
mov
cmp
cmpsl
cmp
inc
push
sub
movsb
adc
sbbb
dec
jb
mov
out
fistps
in
sub
scas
mov
stc
dec
xor
adc
js
and
cli
cld
rcll
popf
adc
movsb
sub
push
or
ret
pop
mov
pop
daa
dec
jg
shlb
or
mov
push
xchg
call
call
push
shl
dec
les
adcl
mov
into
mov
jae
and
add
leave
jo
xor
aad
fmul
jge
xor
out
jb
jmp
dec
cmp
sbb
data16
fcoms
add
mov
cmp
sbbb
sub
insb
fwait
inc
jg
fisubl
inc
push
lods
leave
jg
or
fs
lds
xor
rol
jmp
lahf
xlat
mov
inc
and
je
inc
cmp
mov
xor
aas
ds
jl
mov
mov
adc
sbb
imul
jnp
fdivrl
mov
ja
call
adc
in
dec
popa
mov
sbb
dec
repz
loopne
roll
sbb
mov
mov
sbb
mov
mov
movsb
xor
and
outsb
xchg
xor
or
inc
lods
into
lret
mov
push
and
cmc
mov
ja
ret
dec
ja
xor
add
jno
insl
scas
je
fwait
dec
ret
mov
jno
adc
xchg
adc
mov
jne
mov
dec
mov
clc
fwait
jns
push
push
out
fcompp
cld
rol
in
cmc
cmp
or
loope
fstpt
add
mov
jb
or
adc
div
inc
outsl
xor
addr16
jp
inc
inc
jmp
ds
push
cmc
jb
pushf
popa
lods
mov
loop
jo
arpl
dec
ret
dec
inc
popa
cli
dec
scas
jmp
rclb
loop
mov
aad
and
fstp
loopne
mov
sbb
mov
jp
pop
mov
inc
rcl
call
gs
insb
loopne
es
adc
add
fsubl
adcb
or
sbb
mov
mov
cmpsb
sahf
cli
xor
xor
insb
and
and
aam
sahf
sarb
adc
cmp
xchg
cmp
jne
mov
adc
movsb
mov
int
mov
pop
pop
mov
sub
lret
aad
mov
mov
test
out
sub
xchg
jmp
xorl
hlt
movlhps
mov
add
push
out
and
xor
pop
inc
clc
push
sbb
out
ss
mov
icebp
mov
les
aad
test
pop
add
xor
push
das
inc
iret
push
bound
sub
mov
enter
jns
sbb
push
push
clc
sub
rolb
lcall
inc
fs
xchg
mov
ficomps
orl
mov
inc
push
jb
in
loop
in
mov
pop
mov
rorb
cmp
arpl
out
out
daa
smsw
cwtl
loope
dec
ret
pop
dec
test
cli
sbbb
es
adc
clc
jno
lcall
xor
push
cmp
or
sbbb
and
rol
fists
pop
ficompl
jle,pn
adc
and
push
cld
ret
mov
bound
mov
xor
jl
jg
mov
sub
imul
gs
xor
bound
jp
push
mov
cmp
push
in
adc
dec
pop
xchg
adc
mov
push
mov
xchg
add
stc
dec
shrl
enter
lret
es
push
mov
jb
subb
mov
cmp
dec
ja
ficomps
and
cmp
push
in
int
push
aam
mov
mov
pop
dec
jb
and
mov
adc
add
mov
jp
xchg
stc
into
ret
push
imul
mov
int3
pop
cli
inc
xchg
mov
xor
pop
mov
dec
rclb
sbb
dec
cld
rorl
cmp
mov
xchg
hlt
pop
sarl
inc
test
outsl
sub
movsl
fistl
mov
push
dec
inc
fdivr
sub
xchg
out
cs
sarl
xchg
xchg
dec
dec
xlat
mov
cmc
fs
sbb
pop
jg
lds
and
xchg
and
outsb
xchg
test
or
jns
sub
fldcw
jo
es
xchg
and
pop
jbe
xchg
push
push
stos
lcall
out
sbb
xchg
sub
rclb
fs
mov
into
adc
adc
push
push
or
daa
out
inc
outsb
out
gs
jbe
pop
rcl
push
mov
pop
jl
mov
jae
clc
mov
jne
xchg
jo
imul
addr16
mov
pop
xor
jne
cmp
bound
pusha
adc
cli
xor
mov
cwtl
jmp
cs
mov
mov
xchg
pop
cwtl
sub
leave
lahf
in
out
mov
fs
scas
sub
lahf
ror
mov
or
pushf
in
scas
cmp
inc
inc
stc
push
in
sti
aaa
cmp
lds
insb
cli
push
dec
stos
mov
aad
cld
dec
int
pop
fnstenv
inc
adcb
call
ficompl
imul
xchg
cli
lock
popa
stos
fidivrl
mov
test
aaa
loop
cmp
cmp
sub
xchg
rcrb
shlb
mov
aam
repz
mov
cmc
add
popf
outsb
push
stos
mov
fsubs
sbb
fistpll
ss
dec
cmpsb
dec
lea
mov
mov
or
pop
mov
push
mov
sub
push
pop
in
scas
out
cli
dec
mov
mov
pop
int3
push
rolb
mov
je
insb
push
hlt
mov
mov
jo
mov
add
mov
stos
jnp
out
loop
out
cwtl
cmp
mov
jb
pop
adc
sti
addr16
dec
or
leave
aad
shll
aaa
and
xchg
sbb
cmp
xchg
in
insl
jg
jno
fists
adc
push
fucom
push
inc
sub
sub
sub
pop
sbb
nop
adc
or
repnz
jnp
push
adc
xor
data16
adc
inc
push
nop
dec
mulb
int
roll
jecxz
out
xor
xchg
cmp
xchg
push
scas
ficomps
xchg
addb
mulb
imul
nop
dec
sbb
adc
pop
cmpsl
jmp
dec
xchg
cmp
fists
xor
cmp
dec
adc
xchg
add
setae
fimull
push
pop
and
jns
mov
or
mov
and
rcll
insl
jge
sbb
sbbb
fstp
mov
test
scas
cmp
icebp
xchg
call
mov
dec
test
mov
das
push
jo
pop
push
inc
fstps
imul
testb
orb
std
dec
movsb
sub
lret
stos
mov
mov
dec
fs
inc
into
add
mov
jge
out
mov
mov
out
and
lods
push
dec
into
cmc
xor
pop
ficompl
test
sbb
pop
cwtl
xchg
adc
and
jns
mov
test
mov
iret
dec
das
out
lcall
pushw
stc
xor
adc
xor
mov
mov
lcall
mov
lret
pop
js
movsb
dec
xchg
mov
into
jge
clc
sti
inc
jno
fnstcw
xbegin
insl
nop
jno
push
mov
jo
js
pop
bound
mov
arpl
pop
mov
popf
lcall
lret
push
divb
test
das
xchg
mov
ret
or
mov
aam
push
cmp
loope
inc
xchg
dec
ss
jbe
lcall
mov
faddl
bound
mov
sbb
sbb
inc
mov
adc
and
sbb
dec
lods
mov
push
add
stos
adc
lock
jo
cmp
mov
xchg
in
sub
cltd
xchg
in
mov
mov
les
popa
xor
imul
or
pop
lahf
out
not
and
das
sbb
xlat
sbb
fidivs
dec
mov
cmp
rcrb
push
cmc
xlat
fcompl
inc
out
lods
mov
inc
sub
fisttps
mov
inc
inc
jecxz
idiv
ficomps
sbb
fstpl
jmp
outsb
sbb
or
bound
jbe
adc
jno
cmp
sub
pop
mov
inc
or
push
fsubrl
cltd
sub
stc
lea
or
inc
add
bound
sti
aaa
das
rorl
dec
sbb
out
and
inc
or
dec
pop
test
fs
adc
decl
xor
add
sub
and
sbb
mov
mov
push
jmp
scas
fnop
cmpsl
fstp
lret
fstl
cld
mov
aad
sub
push
mov
repz
outsl
adc
jo
cmc
push
adc
mov
dec
mov
push
ljmp
push
loop
pushf
lock
in
aaa
lds
mov
dec
cmp
sbb
in
cmp
push
mov
std
je
enter
jg
imul
test
ljmp
mov
pop
xchg
mov
imul
outsb
dec
sbb
das
fwait
mov
mov
push
sub
les
or
xor
dec
iret
pop
scas
sbb
xor
pusha
repz
cmpsl
pop
adc
jmp
xchg
cmp
clc
mov
in
aam
mov
test
rcll
int3
xor
and
cmp
xor
ja
fadds
je
and
sbb
mulb
orl
stos
in
mov
or
pop
fists
cs
and
orl
into
das
in
fsubs
jae
cmpsl
mov
pop
mov
inc
int
jne
aas
jno
mov
sub
aas
je
loop
mov
repz
icebp
dec
sti
fdivr
ret
in
jge
xchg
adcl
xchg
xchg
mov
ret
push
inc
push
cmp
cmp
nop
mov
js
lret
sub
cltd
ss
lret
lock
imul
cs
xor
add
stos
inc
scas
push
adc
lahf
push
pop
mov
ret
cs
adc
adc
adc
jecxz
cltd
inc
add
lock
pop
mov
bound
or
pop
dec
ret
jo
pushf
adc
sahf
xor
out
lea
imul
es
mov
adc
xchg
out
jge
fs
mov
fnstsw
int
jmp
pop
cmp
push
leave
jle
cmp
and
and
dec
add
xor
arpl
xor
adc
mov
mov
mov
clc
xchg
bound
jo
jp
push
fs
lods
pop
inc
inc
and
stos
mov
xchg
or
mov
dec
lea
lds
lret
jmp
js
push
sti
jnp
lds
or
aam
lods
cmp
xor
jns
xorb
stos
pop
fidivrs
cmp
les
xchg
mov
adc
test
movsl
push
and
mov
adc
dec
mov
cld
iret
push
std
out
int
or
loopne
cli
test
addl
cmp
xlat
push
repz
xor
cltd
call
adc
cltd
daa
jno
cmpsl
mov
rcrb
clc
fstpl
mov
xchg
sub
inc
mov
outsl
aaa
or
or
imul
push
cwtl
int3
scas
push
sbb
bound
insl
adc
aam
pop
push
jae
jp
stos
xor
push
xor
mov
std
cltd
inc
jbe
xlat
outsb
rolb
out
daa
sahf
xor
dec
push
cmpsb
outsb
pop
and
dec
inc
icebp
hlt
mov
jnp
jp
xchg
cmpsb
jno
fstpt
jb
pop
lahf
insl
popf
movsb
add
adc
popa
ds
test
sbb
cmpsb
daa
adc
test
or
test
pop
mov
aas
mov
outsl
gs
mov
mov
cli
aad
lds
sbb
cmp
pusha
dec
cmp
mov
cmp
dec
inc
inc
iret
stos
leave
push
sbb
fs
jnp
mov
inc
push
cmpl
add
fucomp
dec
and
pop
bound
rclb
ljmp
icebp
insb
pop
or
in
mov
jg
mov
xlat
out
push
push
fnstcw
fiadds
mov
shlb
fnstsw
scas
stos
jns
aaa
lcall
sahf
sbb
std
ss
mov
push
push
scas
dec
xchg
add
movl
mov
sub
add
paddusw
hlt
in
es
in
cmp
cwtl
and
adc
inc
addr16
and
shll
or
sbb
movsl
aas
in
fwait
cltd
sbb
bound
xchg
out
stc
or
je
and
int3
jg
mov
lods
pop
or
pop
outsb
cmp
jno
andb
rdmsr
outsl
xchg
gs
lods
fwait
mov
mov
int
xchg
arpl
mov
or
lret
or
in
popa
stos
push
mov
pop
pop
divb
insl
fsubrl
hlt
dec
scas
enter
adc
mov
xor
repz
insb
cwtl
test
cli
dec
roll
adc
pop
and
pop
mov
jp
jb
mov
xor
xchg
pop
push
arpl
aad
call
mov
hlt
movsb
cmc
push
and
push
addb
popa
push
mov
xor
mov
push
movsb
repnz
sub
and
fdivr
aam
scas
xor
out
stos
inc
lcall
sbb
inc
es
ds
mov
add
sub
gs
sahf
pop
aam
inc
cmp
aaa
inc
mov
fisubs
inc
or
adc
fwait
fcmovnbe
not
cltd
call
and
repnz
xor
int3
add
xor
xor
leave
dec
pop
pop
lahf
es
cmp
or
inc
or
mov
sub
push
push
aaa
push
inc
push
int3
push
inc
out
push
cmp
xchg
lcall
xchg
or
jmp
pop
scas
adc
xchg
mov
cmpsl
xchg
das
out
jle
or
insl
or
loope
xchg
push
daa
testb
test
mov
out
in
aam
rcrl
in
sti
mov
out
pop
rcll
adcb
ret
call
in
mov
stos
jle
je
je
pop
aam
cs
xchg
cwtl
inc
call
xchg
js
icebp
pop
push
push
xchg
insl
mov
mov
ret
adc
mov
mov
cmp
lock
mov
and
imul
sbb
arpl
add
mov
popf
mov
xchg
rcrb
test
pop
mov
mov
mov
cmp
dec
dec
test
mov
fnstenv
and
fs
mov
loop
aam
pop
popa
sub
mov
cmc
loopne
add
lahf
xor
or
cmc
mov
mov
push
lcall
mov
dec
xchg
or
repz
aaa
loopne
inc
sbb
nopl
pop
test
mov
mov
nop
mov
movsb
cmp
fst
cwtl
push
xchg
data16
insl
jle
push
loopne
ret
out
mov
fld
out
pop
imul
mov
shl
sbb
clc
sbb
data16
add
dec
lret
in
mov
mov
in
xchg
push
cli
lods
sub
jl
int3
dec
or
gs
lcall
sbb
fstl
aam
punpckhwd
mov
push
mov
xchg
jmp
add
pop
mov
fiaddl
lret
adc
xchg
mov
push
out
lods
or
mov
dec
shlb
xchg
in
inc
cld
or
sbb
inc
and
in
popf
mov
cmpsl
mov
mov
cmp
lcall
and
xor
loopne
push
repnz
insb
in
loop
push
xchg
lret
jecxz
dec
scas
xchg
mov
outsl
mov
outsl
jge
jp
and
data16
and
aad
dec
mov
enter
push
xchg
add
mov
sar
sti
ljmp
inc
jp
scas
pop
adc
cli
jbe
insb
sub
shrb
mov
pop
mov
dec
sub
test
push
loope
shl
js
dec
dec
sbb
jbe
sbb
fnstcw
ds
adc
jb
adc
mov
push
add
fistpl
orl
in
xor
xchg
scas
in
into
daa
mov
push
mov
xlat
mov
shlb
test
cmp
stos
jae
sub
daa
xchg
mov
mov
call
mov
fnstcw
pop
jnp
movsb
mov
outsl
or
call
mov
ret
negl
fs
sub
sub
push
fistl
mov
lcall
sbb
jge
test
mov
sbb
sub
lock
int
out
mov
out
and
das
je
sub
out
push
imul
loopne
add
mov
mov
sub
pop
mov
popa
add
incb
outsl
inc
ds
sbb
push
pop
gs
into
cs
xchg
and
xchg
sbb
jmp
aad
orl
fwait
adc
mov
mov
testl
push
repz
sub
xchg
popa
ficompl
stc
cmp
adc
mov
movsb
in
popa
mov
hlt
rorl
xchg
mov
jbe
insl
xor
jo
lods
sbb
and
xchg
int
dec
fisttpll
pop
or
mov
cmp
dec
test
shr
out
aas
add
sahf
cmp
lods
sahf
sub
push
arpl
sbb
clc
sub
int
xchg
push
jecxz
or
ss
in
add
sub
dec
mov
inc
mov
mov
cmp
fdiv
rcrb
insl
inc
jno
mov
or
je
push
int
pop
cmp
adc
push
out
das
inc
inc
fsubp
mov
pop
or
lret
stos
repz
push
out
pop
push
sbb
lcall
in
push
gs
pop
sub
aas
ljmp
add
add
lds
mov
fwait
dec
mov
push
inc
outsb
pushf
in
xchg
cltd
inc
mov
inc
cmp
mov
cmp
sub
lods
mov
xor
clc
shrb
lret
dec
cwtl
repnz
test
xchg
inc
add
punpcklwd
push
pop
mov
fs
xchg
pop
inc
std
mov
pop
testl
scas
jnp
xor
cmpsb
add
jae
popf
pop
out
stc
stos
stos
data16
movsl
push
aad
mov
push
insl
aaa
stc
adc
mov
inc
push
mov
mov
or
add
adc
adc
scas
imul
shlb
mov
xchg
dec
je
inc
lods
outsb
or
insl
fdivrp
or
xor
cmp
pop
pop
ljmp
push
call
arpl
dec
sub
sub
fildll
cmp
xchg
in
push
les
mov
push
stc
cli
bnd
cmc
iret
pop
sbb
xor
push
test
sub
adc
mov
ds
jle
mov
cmp
mov
mov
ret
nop
add
sub
push
outsl
cmpsl
jo
pop
xor
daa
jae
bound
xor
xor
fstps
lock
jnp
ss
repnz
adc
das
fdivrp
and
mov
ret
pushf
ds
in
out
fnsave
xchg
js
xlat
ss
outsb
movsb
insb
sti
and
mov
pop
mov
jge
sbb
push
mov
cltd
cmova
int
in
push
cltd
mov
jne
std
je
stc
dec
call
ja
stos
enter
add
adc
inc
dec
inc
popf
xor
insl
jle
cltd
inc
cs
aad
mov
stos
data16
loop
icebp
cmpsb
fstps
or
xlat
rorb
sbb
push
dec
mov
aas
xchg
jne
or
leave
imul
aaa
jno
inc
stos
cmpb
cmp
jnp
jnp
inc
leave
cltd
sbb
xlat
cmpsb
jnp
and
xor
push
xor
ret
ficoms
fcmove
popa
adc
cmp
or
lret
lea
push
adc
mov
lock
mov
jne
push
loope
xchg
inc
inc
push
idivb
imul
mov
ja
jb
fwait
pop
cmp
xchg
aam
dec
jl
fucomi
sbb
xor
cmpl
mov
adc
aam
in
test
fcoml
sub
or
mov
inc
push
rclb
pop
outsb
sub
sub
mov
cmp
pop
loope
fcom
mov
mov
dec
mov
shlb
dec
inc
jnp
xlat
ljmp
inc
and
sbb
xlat
cs
fists
sub
push
ja
xlat
je
call
sbb
pop
dec
mov
out
mov
sub
jp
xchg
cld
or
cmc
cwtl
icebp
inc
shr
adc
stos
mov
repz
jmp
cmp
push
loop
in
mov
jne
pop
iret
inc
pop
xor
jle
loopne
in
adc
rorl
data16
mov
pop
jmp
mov
mov
sbb
jae
and
or
dec
stc
repz
in
mov
movsl
mov
ficomps
lods
inc
mov
jnp
jne
jno
mov
add
dec
mov
jae,pn
cmc
aaa
loop
jbe
xor
rolb
pop
lret
addr16
xchg
lcall
mov
hlt
xchg
ja
xchg
mov
ds
es
pop
int
lea
sahf
xchg
inc
rcrb
push
js
inc
push
xchg
jae
mov
popf
stc
xor
pop
sub
movsl
scas
lret
adc
sahf
jae
aam
fs
mov
sub
lds
iret
aad
push
js
arpl
stos
fldcw
js
fldl
adc
jnp
mov
pop
sbb
movsl
fwait
pop
mov
mov
push
clc
iret
div
xor
inc
inc
nopl
bound
and
nop
add
test
iret
or
cmp
mov
add
lea
jle
popa
out
insl
repnz
and
int3
add
xchg
adc
lods
rol
sbb
push
pop
ss
or
not
andb
xchg
pop
jbe
push
out
cwtl
lods
push
out
and
in
incb
sbb
dec
jl
inc
daa
adc
dec
scas
cmp
jl
cmp
vmwrite
arpl
mov
test
mov
inc
cmp
std
push
popf
lret
dec
std
or
in
mov
imul
jmp
je
imul
daa
imul
sub
fmuls
les
push
ffreep
repz
rorl
aas
sbb
movsl
or
fldcw
js
mov
xchg
mov
stos
or
pop
cmpsb
push
aad
push
xor
pop
lret
in
mov
pusha
xor
test
enter
shll
out
mov
mov
shl
into
scas
mov
adc
mov
add
lock
mov
sbbl
lods
cmpsb
pop
cmc
mov
jg
in
out
cmpsb
loopne
int3
cmp
inc
push
ret
test
je
adc
out
push
int3
cli
mov
insl
adc
pop
repnz
dec
lods
lret
xchg
loope
subl
and
or
jbe
inc
subb
mov
lahf
fs
inc
rol
dec
lods
add
xchg
jnp
fbstp
or
dec
xchg
push
decb
pop
hlt
push
sti
repz
adc
icebp
push
imul
sub
jecxz
add
ret
lock
xor
xor
cmp
mov
dec
jg
fidivrs
mov
movsb
sbb
out
cmp
sbb
jle
or
sbb
sahf
sahf
fistps
xor
pop
rcr
sbb
inc
and
sub
sub
adcl
rcr
std
enter
bound
test
insl
pop
push
jo
mov
adc
push
out
and
sbb
repz
repnz
xchg
popa
xorl
mov
mov
xor
pop
mov
filds
and
push
push
stos
or
lods
push
xor
test
mov
mov
pop
sub
sbb
dec
insl
mov
int3
sbb
cmp
das
out
fmull
or
pop
add
fldenv
push
ret
inc
pop
aam
and
jge
pop
ret
inc
pop
pushl
push
aam
dec
movsb
and
jg
call
ds
inc
jl,pt
xchg
out
movl
mov
xor
mov
data16
add
rcll
mov
inc
mov
pop
sub
sarb
xor
stos
ss
test
repnz
mov
fdivs
cmp
sub
adc
repz
or
inc
fldenv
and
popa
in
push
cs
pop
mov
mov
idivl
inc
push
sbbl
fs
push
xor
xchg
adc
fmull
adc
push
jae
dec
mov
fldcw
xor
push
xor
ret
push
das
imul
lcall
xor
lret
xabort
xchg
out
add
mov
scas
stc
sbb
inc
jae
out
popa
nop
push
stos
lds
or
out
ret
dec
push
outsl
dec
je
js
jle
add
insb
push
das
push
inc
in
and
aas
shlb
inc
pusha
push
call
in
je
mov
popa
push
and
inc
xchg
jl
mov
das
sbb
cli
inc
shrl
xchg
movsl
imul
jbe
add
or
negb
push
jl
jae
in
gs
loope
inc
cmpsl
cmpsb
mov
jbe
and
xor
inc
clc
shll
dec
and
pushf
mov
mov
add
cld
fnstenv
jnp
and
push
and
xchg
rcrl
xchg
adc
imul
inc
test
push
fabs
adc
lock
into
int3
in
push
popa
push
cmp
inc
mov
test
cmpb
icebp
adc
outsl
fldt
pop
xor
mov
aam
daa
dec
fisubl
and
fcomi
cmp
jbe
push
sub
movsb
test
dec
call
adc
or
in
sbb
inc
xchg
push
push
cmp
fs
mov
ds
insb
cmpl
aas
jne
rclb
addb
push
mov
fsubrl
push
push
sti
or
ret
dec
fbld
inc
dec
sbb
cwtl
movsb
or
test
mov
jp
mov
loop
or
inc
dec
loope
cwtl
inc
sub
add
leave
or
sbb
dec
xchg
add
and
addb
add
aad
sti
cmp
xor
and
fiaddl
ffree
fsubs
scas
mov
lods
push
xor
mov
push
test
sbb
and
nop
adc
push
and
sub
icebp
xor
sbb
test
xlat
or
cli
cmp
and
mov
les
or
xchg
cmp
into
add
xor
fs
mov
inc
xor
ja
out
in
movsb
fisttpl
sub
int3
push
into
sub
adcb
push
push
fnstcw
xchg
pop
orb
inc
sbb
sahf
pop
aam
add
test
xor
insb
in
shll
loop
dec
scas
dec
jbe
pushf
ret
mov
outsb
rcrl
dec
sub
xchg
pushf
pop
lds
call
mov
imul
cmpsb
aam
mov
add
or
fcom
cmp
adc
iret
notb
and
mov
cmp
xlat
lds
mov
adc
imul
out
arpl
out
dec
iret
sti
mov
and
mov
aaa
pop
sub
cmp
mov
inc
push
jge
mov
call
and
loopne
cmpsl
lret
add
jmp
into
and
cli
jg
and
mov
insl
testb
push
imul
sbb
jp
in
mov
jbe
imul
push
lcall
test
dec
pop
int
inc
aad
out
push
inc
shrl
popf
adc
pop
cli
cld
jle
std
movsl
lret
and
jp
cmpl
aam
sbb
xor
xlat
ljmp
cwtl
push
fstps
adc
sti
sti
dec
xchg
ret
mov
pop
outsl
jnp
mov
les
rcrl
cmp
mov
dec
in
jmp
leave
adc
mov
cmp
ljmp
mov
or
imul
std
pop
pop
mov
inc
lret
cmp
cmpb
mov
dec
add
aam
sub
dec
cld
fsubr
jl
adc
pop
ja
in
sbb
push
les
cld
jp
repz
aad
sbb
xchg
push
mov
dec
or
mov
in
mov
jnp
jle
sbb
sub
cwtl
das
outsb
inc
jns
pop
mov
adcb
icebp
sub
popf
movsl
cmpl
jle
push
sahf
sub
fists
mov
jp
pop
hlt
mov
lret
cmp
and
dec
pop
mov
cmp
aaa
stc
mov
xchg
lcall
mov
jg
shrl
mov
mov
adc
in
lea
imul
sub
pop
out
mov
adc
je
in
daa
add
dec
pop
mov
loop
jne
mov
or
push
push
add
jno
mov
lods
mov
inc
and
pop
mov
stos
cmp
pop
mov
push
xor
in
daa
cmp
push
int
lods
mov
inc
sbb
outsl
mov
subb
mov
out
sbb
xchg
dec
lods
in
xor
ficoml
push
mov
sti
adcl
xlat
push
sub
cmp
jne
mov
push
cmp
addl
scas
mov
in
cwtl
cmpb
cmp
xlat
xchg
inc
ficoms
adc
jecxz
push
mov
in
sub
and
jmp
icebp
fmul
sbb
xchg
dec
adc
imulb
sbb
out
clc
dec
xor
dec
push
xor
int3
cmp
scas
bound
xor
xor
sub
repz
int3
rcl
dec
dec
xor
fcompl
inc
jp
pop
xor
dec
pop
mov
enter
aaa
sub
pop
adc
cmc
jb
pushf
movsl
sbb
pop
jg
int
mov
push
push
mov
mov
add
fcmovnu
add
pop
mov
lock
add
mov
push
test
clc
insb
cmp
fdecstp
fiadds
push
mov
fisttpl
mov
pusha
add
mov
movsl
into
pushf
sbb
stos
pop
cmpsb
push
dec
in
leave
cmc
sbb
dec
pop
je
jle
addl
es
inc
int
and
push
mov
adc
or
outsb
in
xlat
addb
or
xor
pop
pusha
xor
pop
clc
fucomip
repz
lea
arpl
fisubrs
or
adc
mov
fucom
std
test
adc
adc
cs
xchg
pusha
xorb
insb
repnz
movb
cmp
dec
les
xchg
mov
pop
and
cltd
ja
fs
cmp
sbb
stos
jne
pop
fsts
lahf
mov
xlat
push
mov
in
imul
and
std
sarl
sti
test
push
mov
sbb
ja
inc
xchg
xchg
and
icebp
je
mov
std
lcall
lock
cmc
mov
cmpl
sbb
sbb
pop
push
in
fildll
daa
test
lds
xor
sbb
xchg
jbe
in
sub
fmuls
push
out
cld
mov
sbb
mov
sub
or
xor
xchg
cmc
lock
adc
mov
mov
jle
jmp
mov
ss
in
fistl
dec
insb
mov
cmp
mov
dec
lcall
imul
lock
xlat
adc
arpl
push
adc
push
ljmp
xchg
and
movsb
cs
fidivrs
mov
jp
lcallw
pop
aam
mov
lods
ja
std
pop
enter
cmpsl
jnp
mov
pop
mov
mov
test
pop
test
daa
aas
scas
push
std
not
in
into
repz
je
pop
cwtl
enter
les
jmp
mov
popf
jmp
xchg
mov
fcoms
in
mov
fsubrl
mov
mov
bnd
xchg
and
int3
test
lahf
pop
adc
jmp
clc
mov
fstl
lea
mov
std
add
mov
mov
push
or
sub
loop
sahf
rolb
repz
in
and
mov
clc
icebp
xchg
cld
and
gs
enter
in
mov
push
or
mov
dec
test
mov
xchg
enter
imul
pop
jp
xlat
call
outsl
addr16
out
inc
and
push
adc
pusha
cmpsb
jb
xchg
icebp
add
cmp
dec
mov
mov
or
push
pusha
or
aas
mov
pop
mov
mov
fdivr
cmp
lods
call
mov
mov
push
lock
aas
mov
push
call
test
fld
pop
pop
mov
jo
pusha
adc
sbb
sbbl
sub
leave
dec
push
cmp
out
lds
jge
cwtl
adc
jg
mov
stos
imul
imul
xchg
es
mov
orl
pop
jmp
xor
js
mov
push
push
pop
sbb
es
int
and
and
dec
arpl
in
jae
and
fdivs
or
scas
xor
jo
outsl
xchg
and
xor
mov
cmpb
loopne
insb
scas
mov
cmp
jb
mov
lods
aam
or
push
ja
push
insl
clc
test
inc
mov
push
sub
fisubl
push
insl
cmc
insb
pop
cmp
pop
rorb
xlat
pushf
cmp
and
movsl
mov
ds
ljmp
cli
xlat
movsl
cmp
sub
int
test
data16
test
sbb
rcll
sub
pop
mov
dec
insb
mov
movsl
rclb
pusha
pop
jae,pn
into
mov
or
inc
xor
xchg
jnp
aam
inc
push
subl
cli
stc
sub
js
and
or
push
sub
push
mov
loopne
push
in
mov
mov
push
flds
out
jecxz
pop
push
dec
mov
adc
xchg
dec
mov
xor
dec
pop
dec
xchg
pop
pop
clc
popf
shlb
sbb
push
ss
jbe
pop
adc
jge
mov
jo
lods
pop
add
sbb
sti
or
sub
xchg
outsb
pop
inc
fs
dec
dec
mov
cmp
sbb
pushf
shll
or
jne
lret
cmp
xor
xor
enter
mov
incl
in
inc
cmp
pop
fisubl
ja
and
lahf
mov
pushf
fimuls
lods
pop
jp
call
cs
loopne
xorb
xor
xchg
inc
stc
test
xchg
jo
je
push
loope
outsb
jne
jg
insb
inc
or
das
xchg
sub
and
pop
cmp
mov
loope
mov
adc
and
jge
ret
imul
adc
inc
xchg
sbb
cmpsb
push
test
xchg
lock
xor
call
icebp
mov
call
repnz
movsb
dec
lds
push
ss
aam
or
test
sub
icebp
jge
xchg
jnp
movsl
push
pop
addr16
pushf
bound
loope
movsb
mov
inc
iret
mov
mov
paddb
pushf
pop
test
adc
cmpsl
mov
xchg
cmp
addr16
pop
cmp
pop
jge
xchg
leave
push
in
push
nop
movups
adc
xchg
cmp
or
xor
sahf
xor
popa
cmp
insl
sub
aas
nop
loope
iret
mov
pop
clc
push
fcmovbe
stos
jg
xor
loop
dec
test
divb
jecxz
cwtl
cmp
movsb
jp
filds
imul
push
jp
jb
push
xor
out
and
ret
cmp
and
stos
das
rolb
stos
mov
jg
or
cmpsl
stos
and
xor
cwtl
add
push
test
xchg
xchg
nop
movsl
adc
jmp
sub
push
loopne
aaa
jmp
arpl
rorb
jge
rcrb
sbb
jo
inc
fcoms
call
stc
pop
popa
ret
lea
aas
mov
dec
movsb
mov
add
jne
in
into
sub
pop
cmp
xchg
in
inc
jp
or
sub
fsubs
or
cli
and
sbb
iret
gs
mov
inc
push
in
xor
xchg
xchg
mov
js
and
pop
xor
xchg
jb
jge
add
pop
sbb
xchg
sub
xor
push
ja
les
roll
fistps
pusha
aam
fnsave
xchg
es
lods
call
adc
mov
jle
dec
repnz
xchg
fiaddl
and
dec
mov
popa
push
rorl
push
ja
mov
or
mov
sbb
adc
cmp
xor
sub
xchg
or
imul
clc
ret
hlt
inc
xor
push
stos
jle
adc
adc
add
addr16
fnstsw
xchg
arpl
mov
xchg
pop
ficomps
cmp
mov
push
mov
dec
insb
xchg
cmp
mov
push
aaa
stos
cmp
insb
test
cli
scas
mov
and
mov
inc
and
mov
cli
jnp
mov
cmp
push
cmp
out
mov
mov
jl
roll
movsb
sahf
sbb
ret
fs
stc
mov
dec
imul
xbegin
pushf
jns
scas
insl
cwtl
jmp
aas
aad
mov
mov
inc
or
stos
int
jbe
adc
scas
movsl
and
sbb
shll
sbb
push
adc
js
shr
sub
loop
xor
add
outsl
mov
test
imul
xchg
fstpt
mov
scas
repz
mov
lods
inc
fs
dec
push
and
roll
fsubrs
nop
leave
pop
mov
into
std
shl
insb
xor
adc
inc
mov
addr16
lea
test
in
cmp
fcoms
enter
sbb
nop
sub
loop
scas
out
gs
fldl
or
jno
inc
jg
pop
fwait
iret
push
add
int
sbb
and
enter
mov
lret
cld
cs
pop
add
aas
pop
leave
mov
mov
push
icebp
aad
or
outsb
jge
sub
cltd
iret
add
xlat
testl
cld
inc
mov
pushf
mov
add
pop
pop
and
call
sahf
or
mov
sub
jns
int3
add
insb
mov
sti
mov
vmovupd
filds
jno
rclb
idivb
subb
or
xchg
sub
dec
adc
cs
pop
add
mov
sub
dec
das
popa
xor
sbb
rcll
pushf
and
popa
xor
std
lret
negl
xchg
pop
in
popf
mov
jbe
ficomps
mov
push
xchg
into
mov
sub
pop
in
je
dec
pop
xchg
arpl
cli
mov
out
popf
ljmp
dec
dec
negl
mov
push
int3
psrlq
icebp
les
fsubs
dec
lea
out
shll
xchg
notl
je
xor
ret
push
push
rolb
in
sbb
and
inc
scas
xor
into
inc
gs
add
pop
jg
add
mov
mov
lahf
movsl
pop
cmp
jb
into
jg
leave
pop
jbe
and
lock
cmp
aaa
jmp
dec
mov
and
jge
or
mov
into
or
jg
push
pop
jbe
aas
xchg
xchg
outsl
pop
cmp
scas
pop
jae
cmp
das
xor
xlat
insb
aas
mov
ja
enter
leave
jge
inc
iret
rcr
xchg
adc
push
mov
sub
mov
daa
fidivl
rcrl
es
sahf
es
push
push
out
mov
aam
test
cmpsb
lods
test
add
push
imul
xchg
das
xchg
push
sub
and
lret
pusha
ret
test
sbb
ret
pop
mov
out
pop
jb
dec
mov
rolb
adc
jg
xchg
imul
js
mov
cmc
inc
jo
jnp
xor
stc
mov
dec
stc
adc
mov
xchg
mov
adc
icebp
xor
mov
insl
sub
arpl
add
test
xchg
int3
cmc
push
push
inc
xor
imul
jo
in
lods
subl
cmp
sub
data16
add
mov
pop
lock
or
lds
in
or
cwtl
sub
ss
std
std
inc
add
inc
imul
push
dec
fsqrt
test
loop
test
mov
adc
push
mov
mov
test
ds
int
dec
xor
outsl
sbb
enter
sbb
sbb
stc
jmp
pand
xor
fisttps
dec
repnz
out
loop
icebp
push
fadds
dec
outsl
out
sahf
sub
cmpsb
dec
out
jns
xchg
sub
mov
fcmovnbe
mov
es
push
lds
xor
shrb
sbb
adc
int
dec
xchg
movsb
loopne
xor
inc
add
or
test
aas
mov
jge
adc
mov
imul
insb
aad
fisubrs
mov
sbb
imul
insb
push
or
dec
ret
xchg
movsl
xchg
jecxz
out
mov
jmp
clc
sbb
repz
test
or
inc
aas
mov
push
insb
sub
xchg
add
fnsave
dec
filds
test
lahf
jg
push
xor
sti
dec
push
ds
mov
pop
dec
sub
mov
xlat
cs
mov
or
cs
aad
xor
pop
xchg
ret
push
in
popf
cmp
movsb
lds
lahf
mov
out
jmp
out
add
sub
in
cltd
mov
cmc
or
xor
sub
add
mov
in
add
arpl
sbbl
mov
push
push
adc
fimull
mov
mov
sub
inc
das
ret
ljmp
xchg
mov
andl
popa
shlb
pop
adc
add
mov
mov
jle
xor
mov
sti
cmc
mov
mov
jne
jp
pop
dec
bound
or
pop
cld
mov
jl
jle
sub
cmp
jge
push
inc
mov
adc
xchg
scas
jl
mov
cmp
loope
int3
push
les
mov
int3
pushf
mov
push
sbb
in
popa
mov
sbb
test
dec
xchg
sbb
dec
push
xchg
mov
jp
inc
xor
dec
in
inc
dec
and
xor
add
sti
loopne
adc
inc
out
xchg
jge
in
push
das
insb
sub
lods
ljmp
cmp
mov
out
and
mov
xlat
ds
loop
shll
int
jp
add
jb
xor
imul
lds
lock
repnz
fbstp
lret
cmp
cli
in
fld1
jno
movsl
mov
jns
dec
mov
mov
fisubrs
add
xor
ja
mov
mov
popf
popa
add
sbb
sub
daa
imul
out
int3
add
fs
arpl
jnp
dec
testb
adc
icebp
mov
int3
aas
pop
sub
inc
fsubrp
imull
inc
xor
or
js
out
push
stos
in
dec
mov
inc
cmp
and
pop
jle
mov
leave
call
fcoms
adc
xchg
jp
xor
sub
or
inc
cmp
or
shrl
lret
lds
daa
jg
jmp
sti
jge
loopne
test
ja
dec
movsl
cmp
aaa
sub
adc
andb
in
adc
dec
mov
pop
mov
push
out
nop
sbb
outsl
lahf
mov
movsl
outsb
fwait
mov
lcall
or
sbb
xor
push
mov
mov
mov
xor
call
loope
fstpt
mov
jne
cmp
popa
lret
dec
in
dec
push
inc
mov
mov
out
xchg
dec
mov
or
imul
or
adc
adc
mov
sbb
pop
scas
ljmp
pop
jmp
mov
mov
dec
adc
leave
call
and
lock
scas
mov
sub
lock
adc
mov
pop
mov
loope
cmp
mov
inc
in
les
pop
xor
mov
push
fcmovu
call
push
mov
mov
mov
cli
xchg
nop
icebp
cmpsb
mov
cmp
jae
dec
bnd
stos
add
fs
lods
push
mov
stos
mov
or
pop
add
ja
cli
inc
shll
movsl
icebp
div
fidivrs
repz
pop
lds
sbb
dec
lods
mov
test
xchg
rorl
dec
insb
fistl
icebp
mov
imul
insb
push
mov
cmpsl
mov
std
aad
pusha
out
mov
jp
add
fistl
mov
test
imul
lret
mov
in
push
in
fwait
cltd
out
jle
and
add
dec
and
insb
lods
and
or
fcoml
pushf
test
xchg
ljmp
inc
sbb
lods
xchg
movb
dec
test
push
movsl
sbb
add
and
ret
fldenv
push
push
mov
arpl
jmp
or
mov
pop
iret
mov
or
mov
adc
lea
mov
outsl
cmp
jg
mov
push
mov
test
jg
outsl
mov
and
or
lret
jne
adc
mov
jecxz
or
xorl
lods
out
push
enter
gs
fcoml
orl
flds
pushf
and
jmp
dec
stos
cmpsb
lock
jns
jmp
mov
movsb
fidivrl
fildl
mov
cmpsb
push
adc
dec
repz
mov
or
aaa
cmp
jecxz
pop
mov
sub
xchg
and
mov
enter
dec
push
mull
pop
mov
imul
push
adc
out
push
and
xchg
jo
ret
ja
inc
adc
jne
add
mov
cmp
push
in
sub
sub
lea
arpl
push
or
push
ret
scas
xchg
in
das
notl
add
scas
sub
xchg
and
xchg
cmpsb
sub
test
inc
stos
mov
lds
inc
les
enter
rcll
int
mov
rcll
mov
push
pop
inc
mov
mov
cmp
sub
push
mov
addb
jno
pop
inc
dec
xchg
mov
in
xor
lahf
mov
outsb
or
sahf
push
push
xor
jg
std
xchg
dec
imul
sub
stc
inc
and
insl
push
jae
sbb
pop
cld
gs
out
hlt
and
shll
ret
pop
lahf
in
and
test
in
mov
xor
xchg
imul
icebp
xor
cmpsl
shrl
xorb
cmp
test
jne
cmp
push
mov
ret
inc
fucomp
and
jmp
xchg
out
cmp
mov
jbe
mov
mov
and
xor
cltd
fadds
jl
mov
adc
in
lock
add
pop
xchg
cmpl
insl
lock
inc
mov
lea
pushf
std
and
push
adc
sub
ja
and
sti
xchg
jmp
mov
jmp
aad
hlt
dec
sub
inc
in
cmc
dec
enter
adc
jge
ds
jne
push
leave
inc
out
sbb
pop
cltd
sbb
jo
data16
and
xchg
xchg
loope
xchg
cltd
aaa
jb
or
dec
rorb
testb
push
add
leave
hlt
jbe
mov
push
and
aaa
jl
xlat
test
call
and
xchg
jbe
out
xlat
xor
jns
jle
mov
pop
push
cld
fidivl
movsb
shlb
xor
psrad
push
rolb
sbb
xor
push
add
add
xchg
cmpsb
arpl
inc
sbb
mov
lret
ret
int3
arpl
dec
and
movsl
xchg
add
leave
je
adc
push
scas
mov
lahf
pop
out
inc
jno
adcl
xor
out
ret
jg
jb
clc
inc
mov
push
fs
data16
mov
mov
test
dec
mov
sub
in
rdpmc
xor
insb
cmpsb
mov
pop
mov
scas
push
pop
add
push
frstor
dec
outsl
mov
out
jle
mov
mov
nop
jbe
in
js
pop
sbb
mov
inc
sbb
test
jne
pop
jns
cwtl
pop
lcall
push
lahf
or
and
adc
movsb
mov
mov
cmp
xor
es
jle
jecxz
iret
add
xchg
push
jle
mov
pop
gs
pop
inc
mov
sbb
or
push
fs
dec
or
andb
int
xchg
mov
jp
cmp
mov
inc
mov
lea
add
mov
jo
mov
data16
jl
into
push
xchg
push
lcall
movsl
mov
cmpsl
popa
test
ja
or
add
nop
outsb
sbb
call
cli
xor
and
scas
pusha
cwtl
mov
add
push
cmp
rcrb
imul
sbb
aad
fistps
jb
nop
addr16
mov
mov
lods
mov
pop
pop
test
int3
xor
pop
mov
movsb
or
lods
stos
and
aad
jmp
xchg
sti
pop
shll
imul
shll
mov
adc
xchg
dec
repnz
and
xchg
std
or
or
mov
fs
add
scas
shll
loop
or
arpl
movsl
cmp
add
aas
sarb
mov
add
jb
js
lods
add
outsl
cwtl
add
ret
jmp
adc
mov
jl
push
lahf
adc
fcomps
pop
fbstp
bound
jbe
repz
pop
ficoml
push
jmp
popf
lret
xlat
cmc
jne
in
lock
dec
and
xor
dec
shr
repz
pop
stc
dec
aad
ss
and
daa
cltd
aad
and
iret
loope
fs
loope
loopne
sbb
movsl
jae
dec
mov
jg
lods
and
aas
xchg
fs
push
in
mov
mov
sbb
mov
mov
sbb
xor
mov
mov
sbb
jo
std
inc
sbb
loope
out
mov
pop
adc
ret
mov
pop
mov
dec
or
and
jae
aaa
out
decl
xchg
stos
test
adc
cld
add
push
xchg
test
stos
or
push
adc
fwait
pop
and
xchg
mov
xchg
imul
into
out
push
adc
push
xchg
aad
and
je
out
rol
add
mov
pop
push
push
jbe
xor
into
shll
rolb
fpatan
mov
loopne
cli
shrl
add
repnz
cmpsb
test
movsl
mov
or
jo
or
sbb
popa
inc
xchg
flds
shl
mov
out
cmp
and
cmc
fs
or
jecxz
jns
and
xorb
push
shll
loop
inc
popa
cmp
sbb
adc
mov
ss
dec
into
pminsw
daa
frstor
or
arpl
pop
dec
insl
dec
movsl
cld
adc
sbb
pop
insl
daa
pop
test
std
and
pop
xor
pop
jns
and
dec
or
and
or
insb
sbb
jo
mov
aad
arpl
push
mov
lret
jno
sbb
cltd
add
inc
push
pop
sub
test
xor
pop
xchg
popa
sub
xchg
into
cmp
imul
shlb
popa
rep
fdivs
aas
xchg
nop
stc
in
jne
inc
ret
lret
xchg
push
cmp
test
jnp
addr16
jo
cwtl
cmp
mov
insb
jnp
fistpll
xor
pop
xchg
repnz
test
lcall
jmp
pop
fcoms
mov
cmp
int3
popa
or
ss
inc
cmp
push
aaa
adc
fwait
in
pusha
je
pusha
in
xchg
add
mov
jbe
pop
push
adc
sbbb
pop
lahf
les
push
daa
in
fucom
dec
rcr
sub
push
adc
jmp
xor
imull
mov
in
ret
mov
sbb
xchg
dec
js
rolb
mov
cmp
adc
push
xor
pushf
out
cmp
mov
dec
pop
enter
mov
push
fwait
es
cmc
pushf
rorl
mov
test
nop
add
leave
mov
add
es
loopne
cmpsl
ds
adc
adc
incl
imul
lahf
mov
fcmovnb
mov
shl
push
pop
sarb
mov
and
xor
or
xchg
mov
cmpsb
test
sbbb
test
inc
outsb
testb
push
jo,pn
mov
popa
xorl
in
ret
outsl
rcll
aam
sti
pushf
jl
iret
pop
int3
outsb
xor
add
cs
xchg
add
mov
sbb
and
lret
push
mov
jnp
mov
ficoml
xchg
insl
fstl
sub
negb
in
dec
insb
pop
dec
aas
out
xchg
pop
test
fsubrl
pop
push
sbbb
cmp
in
mov
mov
popf
ret
push
cltd
std
adc
dec
cmp
pop
mov
imul
mov
and
sahf
sub
xor
and
pop
mov
adc
outsl
rol
jecxz
mov
addr16
mov
imul
xlat
pop
clc
inc
inc
dec
dec
jnp
out
dec
leave
cmp
add
and
adc
pop
xor
fnstsw
subl
loopne
in
push
stos
outsb
xorb
aas
sub
lods
pushf
push
insl
ljmp
outsb
daa
repnz
addl
or
cs
inc
ret
inc
cld
addr16
adc
inc
push
mov
data16
cmc
jno
loope
insl
sahf
mov
loope
sti
cmpsb
xchg
push
fwait
inc
dec
jo
lods
and
and
inc
stos
mov
cmp
out
clc
lods
jns
arpl
xor
cmp
pushf
movsb
pop
and
jge
in
in
fisubl
paddsb
and
pop
mov
mov
or
fwait
mov
cmc
add
mov
lahf
pop
push
sbb
arpl
rorl
pop
sbb
data16
call
pusha
sbb
insl
push
daa
fsts
stc
ret
outsl
cld
stc
xor
call
or
decl
in
cmc
add
sti
dec
into
daa
dec
pop
xor
mov
pop
js
lret
scas
xlat
mov
test
jb
repnz
add
adc
dec
push
imul
cmp
les
jbe
and
mov
xchg
jne
push
hlt
push
adc
popf
xchg
cmc
push
inc
xchg
stc
out
and
push
pop
orl
xor
push
cmp
jp
jno
daa
les
mov
mov
mov
adc
movsl
movb
loop
xorl
xor
sub
jo
mov
subb
int3
es
xlat
inc
rcll
sbb
addr16
or
jle
xlat
stos
int3
mov
ds
push
sar
cmpsb
or
fs
xchg
cwtl
jns
mov
fadd
xchg
sbb
pop
cmp
dec
test
fistpl
xchg
cwtl
mov
lcall
pop
mov
mov
dec
xor
mov
jge
xchg
mov
mov
out
popf
push
sub
cltd
jb
lret
xor
inc
andl
cmp
daa
insl
sbb
jmp
sbb
inc
shll
cmpsl
xor
pop
dec
stos
data16
sub
adc
mov
sbb
adc
cltd
loopne
and
jp
or
nop
jge
popa
rep
stc
faddl
dec
jae
sub
insb
int3
fstl
icebp
mov
or
out
pop
mov
aad
jne
add
aaa
jmp
add
xchg
aas
sarb
jl
sub
pop
imul
cmpl
jno
sbb
sbb
and
js
int3
sub
cmc
xchg
push
mulb
popa
rcll
subb
insb
cmc
inc
and
inc
adc
sub
xchg
dec
mulb
outsl
mov
es
aad
bound
xor
pushf
lods
mov
xchg
xlat
popf
pusha
pop
pop
sub
add
jnp
mov
sbb
xor
add
clc
xor
scas
gs
les
sahf
data16
outsl
mov
bound
fwait
pop
cwtl
add
pop
or
daa
sub
mov
notb
mov
das
loop
gs
ret
dec
repnz
sub
xchg
xchg
cwtl
xchg
mov
fcompl
insb
sub
push
jg
jnp
fnstcw
cmc
subl
add
hlt
adc
sahf
cld
push
mov
imul
xchg
push
jecxz
jb
test
jo
or
vandps
pop
push
xor
and
shll
aaa
or
mov
xchg
add
arpl
or
xchg
mov
sub
sub
stos
cmp
or
in
adc
movsb
adc
dec
pop
push
push
xchg
imul
arpl
sub
cmp
ds
pop
mov
fldl
sbbb
clc
scas
jns
xchg
ds
or
nop
into
int
lea
cmp
dec
imul
or
negb
xchg
insb
dec
ret
jnp
push
je
jb,pn
leave
idivb
mull
inc
inc
sbb
dec
mov
push
adc
xor
sti
fbld
leave
and
lock
mov
or
xchg
push
loope
loope
testb
shl
dec
dec
mov
cmp
pushf
add
push
mov
xchg
es
pop
pop
ss
xchg
mov
push
vpmacssdqh
in
pop
sub
movsb
or
xchg
push
adc
sub
outsb
inc
jae
loope
in
inc
sbb
push
push
mov
xor
test
mov
cmpsb
add
mov
xor
jp
xor
xchg
inc
lods
mov
jae
leave
sarb
repnz
repz
adc
jecxz
stos
aaa
enter
ret
lods
imul
fwait
int3
imul
add
jg
cmp
lret
add
test
mov
sub
or
aam
mov
loopne
dec
cwtl
sub
jl
negl
or
push
and
pop
lret
icebp
mov
adc
push
and
mov
jge
add
inc
es
test
sub
add
add
jo
jmp
ficompl
aas
jle
xchg
xchg
jmp
sbb
mov
xchg
int
cmc
adc
jle
add
add
clc
loop
gs
cmp
repnz
int
mov
imul
cmpsb
jae
xchg
jle
mov
and
or
stos
popa
and
adc
call
xlat
xchg
fwait
jb
sahf
adc
mov
mov
cmpsb
mov
sub
or
in
mov
jecxz
dec
mov
xchg
or
pop
jmp
fisubs
add
jle
out
ljmp
sbb
cmpb
fcomp
add
test
rcl
iret
scas
in
int3
in
test
lock
mov
mov
rcrl
pusha
add
add
pop
sbb
inc
cmp
lds
popa
xchg
les
leave
cmc
add
mov
clc
pushl
dec
lods
pop
push
xlat
cmp
icebp
int
or
dec
or
dec
add
pop
push
out
pop
pop
sub
pushf
pop
inc
adc
es
scas
in
lods
ljmp
adc
and
pop
mov
cmp
pusha
push
xlat
mov
jecxz
push
dec
test
fsubrl
iret
push
cmpl
stc
jmp
sbb
adc
loopne
xor
std
adc
mov
mov
mov
stos
cmpb
adc
mov
jle
lahf
add
mov
sbb
inc
stc
mov
mov
cmc
push
dec
sahf
pop
lods
pop
stc
je
aad
ljmp
pop
jae
mov
in
sar
cmp
inc
incb
sub
mov
dec
out
out
dec
mov
mov
xchg
call
imul
xchg
cmp
cmp
bound
out
pusha
mov
movsl
jecxz
xchg
cmp
push
adc
push
ret
roll
subl
push
xor
inc
mov
add
shlb
adc
and
inc
shll
sub
jae
push
sbb
sti
xchg
ret
sbb
jo
jmp
jmp
sub
repz
ret
xor
cmp
cli
pop
push
aam
ljmp
std
add
push
adc
iret
mov
dec
mov
add
cs
xor
sub
repz
imul
negl
dec
add
push
mov
mov
rcll
jbe
loop
mov
scas
jne
mov
and
rorb
shrb
jge
mov
mov
or
or
sahf
stos
cmp
test
imul
mov
fiaddl
push
fdivl
ja
shrb
iret
fs
mov
jne
push
test
push
aad
xorb
loopne
and
cld
cli
dec
mov
nop
dec
jne
xchg
shlb
mov
add
icebp
xchg
adc
pop
icebp
ljmp
pop
dec
les
xor
fistpl
test
xor
stc
fisubrl
out
insb
sbb
test
stos
inc
addr16
xchg
loop
cmp
out
cld
rorl
add
fildl
cmp
imul
andl
xor
sbb
jle
enter
or
pop
shlb
dec
jo
xor
xchg
sub
call
in
int
and
rcrl
pop
lcall
or
mov
jmp
push
int3
out
mov
mov
jbe
or
lret
arpl
mov
sub
adc
pop
jmp
jns
xchg
aam
or
lea
xor
cld
inc
inc
mov
aam
js
xchg
add
pop
scas
dec
mov
inc
push
adc
jae
iret
sub
xor
or
rolb
insb
dec
add
mov
fwait
pop
mov
fcoml
xor
js
jns
out
out
pushf
gs
push
push
push
loop
addr16
add
mov
mov
into
pop
dec
sub
and
mov
outsl
xchg
dec
nop
or
cmpsl
jno
pop
fstl
dec
jg
arpl
scas
aaa
imul
mov
cwtl
dec
inc
inc
dec
mov
sub
iret
or
adc
and
jo
inc
outsl
sti
push
ja
scas
adc
iret
sbb
push
enter
push
repz
jge
clc
nop
or
aas
mov
test
xchg
cwtl
push
es
jge
inc
push
insb
add
fistpl
cwtl
sbb
lods
enter
mov
pop
xchg
int3
das
arpl
jecxz
movsb
fisttps
out
jns
mov
adc
or
xchg
mov
stos
mov
or
icebp
dec
repz
push
adc
and
mov
cs
inc
push
ror
xchg
fistl
or
fimuls
xor
cmc
cli
popa
sub
nop
and
stos
push
push
mov
fs
pop
mov
add
push
lret
add
mov
rorb
cmp
lock
stc
cmp
dec
jecxz
push
push
dec
sti
pop
jecxz
jge
sbbl
in
cmp
or
and
mov
sub
nop
mov
push
xchg
and
xorb
mov
repnz
imul
in
aas
les
inc
fsubr
mov
push
or
xchg
rorl
mov
push
aaa
jns
pop
aam
popf
mov
cltd
xor
jns
lea
clc
sbb
sub
xor
lods
hlt
push
push
or
add
cmp
loope
xor
adc
mull
push
inc
xor
shll
push
push
mov
out
pop
lea
sahf
mov
xchg
mov
dec
shlb
ja
xchg
mov
mov
mov
fsubr
lods
aaa
jne
or
ret
sbb
into
imul
jg
jge
mov
out
pop
inc
stos
iret
in
cmpsb
cmp
std
cld
pusha
gs
sbb
jle
xor
jmp
jnp
por
mov
sbb
mov
lods
pop
mov
fiaddl
mov
inc
es
mov
sub
push
pop
das
jle
jl
pop
add
and
mov
addb
mov
push
dec
mov
inc
dec
out
popa
jmp
jle
outsl
cld
inc
pop
js
pop
push
repnz
pop
stos
mov
out
xlat
inc
add
repz
or
mov
push
mov
push
ljmp
aam
sbb
dec
mov
cmp
push
dec
push
out
jb
and
inc
mov
imul
ret
enter
jp
jp
divb
imul
fisubrl
jg
cltd
ret
adcb
xor
or
xor
ret
pop
xchg
scas
xor
hlt
pop
xchg
jecxz
jmp
cmp
stos
sub
pusha
leave
loop
cmpsb
movsl
or
cmp
fidivl
mov
lret
jmp
sahf
push
cmpsl
and
scas
cs
mov
sub
xorb
fsubrs
imulb
out
es
push
call
mov
dec
push
dec
mov
add
lcall
xor
or
lock
xchg
lcall
push
mov
je
out
or
aaa
or
mov
jg
into
clc
or
sbb
push
cmc
pop
das
jae
mov
ljmp
xchg
push
xor
mov
mov
pop
fs
cmpl
cmp
das
add
add
sti
add
mov
xor
bound
imul
jne
mov
shll
add
adc
aaa
fadd
xchg
cld
bound
pop
lret
push
mov
xchg
repnz
outsl
and
xchg
cmpsl
iret
mov
test
aas
mov
aam
or
loope
xchg
bound
clc
jp
cmp
add
pop
and
in
lods
push
in
xor
lds
pop
cwtl
and
int3
lds
shrb
sbb
in
jge
pop
loopne
sbb
es
xor
les
aad
arpl
fisttpll
fisubs
mov
push
sbb
pop
adc
decl
cmp
outsb
js
stos
mov
sbb
cld
fdivrs
pop
xchg
or
mov
test
sbb
mov
add
rorl
and
xchg
lds
sbb
cmpsb
rcl
pushf
lret
ret
dec
repnz
push
inc
xor
gs
cmp
test
cmpsb
mov
mov
clc
mov
jae
lahf
scas
idivb
push
sti
popl
test
ds
push
or
lahf
imul
or
addl
push
inc
addr16
in
sub
add
mov
cwtl
in
xor
pop
jle
cmp
imul
pop
hlt
lret
mov
pop
arpl
push
lret
xchg
or
mul
add
filds
arpl
stos
lods
test
adcb
imul
lods
imul
cmp
lea
add
jnp
mov
insb
jl
xchg
das
xchg
mov
jle
lcall
outsl
mov
mov
xchg
mov
mov
push
sbb
mov
jbe
mov
pop
test
mov
ljmp
sbb
iret
adc
xor
sahf
les
and
test
out
xchg
add
pop
popa
xor
jb
aad
xchg
aam
sub
data16
test
out
enter
and
cmc
into
int3
mov
and
iret
in
sub
lahf
and
popf
cmp
aas
pop
loopne
or
xor
inc
pop
jl
cmp
cmpsb
std
repnz
sub
addr16
mov
jp
push
sub
mov
mov
cmpsb
xchg
mov
hlt
jne
rcrl
jp
rcll
fisttpll
xchg
cmp
insl
dec
jb
movsb
mov
in
and
sbb
jns
pop
clc
jmp
add
pop
fs
cmc
add
fcmovnb
loopne
cld
lods
or
fs
ficoms
fwait
xor
mov
push
sub
shr
dec
add
adc
ret
xchg
add
ss
dec
out
ret
sar
loopne
int
stos
cwtl
mov
and
mov
xorb
mov
int
push
fimull
push
ss
and
pop
xchg
inc
xor
loopne
icebp
stos
sbb
ret
sub
clc
pop
insb
mov
in
xor
add
mov
stos
xor
sbb
lods
frstor
add
jae
inc
sahf
push
sub
inc
int
xorb
shll
mov
mov
mov
adc
push
xlat
inc
movsl
stc
fbld
mov
shrl
in
push
cmp
mov
imul
out
xchg
push
jo
ds
jb
mov
ja
xchg
adc
daa
jge
cltd
enter
ds
dec
dec
sub
mov
dec
push
out
fldz
mov
loope
adc
xor
pop
xchg
sub
pop
dec
roll
int3
fdivs
pop
jmp
das
and
xchg
pop
int3
std
daa
dec
testl
mov
negl
mov
xchg
test
and
sub
icebp
jecxz
inc
xchg
pop
sarl
push
push
aaa
outsb
popf
push
mov
in
cmp
shll
sbb
add
jl
sahf
out
inc
jp
xchg
enter
imul
mov
in
mov
jle
add
jmp
lock
mov
mov
mov
loope
loopne
out
jmp
hlt
push
aam
xchg
push
push
and
leave
ret
insb
call
insl
cmc
push
mov
or
sub
sbbl
xor
movsb
pop
push
cmp
mov
push
aam
adc
in
int
sub
enter
mov
push
mov
mov
adc
insb
add
and
jno
out
outsb
ljmp
inc
push
ds
xor
lret
jp
jle
jno
sub
test
push
adc
mov
xor
xor
cwtl
adc
jbe
add
test
cld
stos
inc
and
test
cltd
xchg
and
ret
pop
loop
cmp
pusha
arpl
hlt
pop
xlat
aaa
push
fldenv
mov
cmp
mov
fbstp
out
jmp
xor
xchg
jns
jecxz
stc
xchg
cmpsl
cmpsb
push
insb
lahf
sbb
adc
mov
sub
movsb
aas
xchg
adcb
adcl
cmp
out
aam
icebp
cld
sub
xchg
jp
cs
pop
mov
out
cmpb
repnz
scas
lret
xchg
push
bound
sbb
mov
inc
dec
xchg
bound
fldt
push
pop
hlt
js
cmp
in
sti
xchg
inc
lock
test
inc
pop
fistps
movsb
test
aaa
aad
pop
inc
shrb
pop
dec
sub
pop
iret
mov
iret
dec
xchg
pushl
test
sbb
shrb
mov
int
rorl
sbbl
xlat
in
cmc
jae
loopne
mov
pusha
fnsave
inc
lock
push
test
je
arpl
mov
int3
mov
mov
aad
and
inc
test
xor
or
fdivr
popf
mov
out
divb
in
mov
or
mov
add
cmp
sbb
mov
lret
cmpsb
cmp
ror
into
sbb
mov
in
popf
and
xchg
dec
int
dec
adc
push
les
push
pop
aad
pushf
push
and
jbe
inc
adc
clc
je
insl
shlb
das
mov
sub
lods
mov
in
push
push
hlt
inc
pop
sbb
daa
inc
cmpsb
xchg
insl
inc
scas
push
hlt
or
scas
cmp
lcall
daa
in
loope
call
add
push
shlb
nop
push
adc
jbe
aad
lret
out
popf
jg
mov
js
add
jnp
repnz
outsl
dec
lret
stos
pop
rcl
mov
jno
shr
mov
nop
add
arpl
fldenv
add
ds
jo
or
sub
or
mov
int3
popa
mov
idiv
outsl
shlb
fsubs
test
and
sbb
push
mov
sbb
out
sbb
cld
cmp
push
sub
add
mov
scas
movsl
out
test
cmp
mull
movsl
call
lods
cmp
pop
dec
jp
xor
mov
add
mov
pop
mov
xor
or
inc
imull
mov
je
mov
mov
lods
cwtl
adc
or
iret
fdivr
shl
cmp
pop
stos
dec
or
lods
add
and
xchg
push
mov
or
mov
notb
mov
jp
aam
adc
scas
sbb
lcall
cs
std
pop
shlb
pop
out
jnp
jns
aas
clc
nop
mov
popf
divb
pop
lods
test
push
push
mov
add
mov
ret
outsl
into
ja
int3
xor
sub
or
rorb
lret
aad
dec
fmul
pop
out
jmp
outsl
sahf
lahf
negl
xchg
add
clc
push
loope
or
mov
or
cmp
mov
xchg
repnz
push
push
push
aam
jno
popa
push
mov
adcl
jae
xchg
outsl
stos
pop
pop
xchg
call
xor
and
mov
dec
sti
pushf
sti
push
aaa
mov
cmovle
pop
xor
gs
jae
cmp
jne
daa
adc
sahf
lods
mov
dec
arpl
pop
movsl
fildll
outsb
fistpll
aad
xor
hlt
add
nop
pop
jge
icebp
repnz
inc
sbb
scas
dec
dec
xchg
cmpsl
xor
rolb
mov
scas
shll
mov
xor
mov
daa
test
pop
xor
int3
scas
outsb
pushf
mov
mov
inc
xor
sub
in
dec
mov
mov
sbb
push
mov
jecxz
or
sti
cmp
fimull
ret
cwtl
jo
mov
or
fisttpll
dec
mov
cmp
fs
mov
daa
or
mov
sbb
inc
into
dec
pop
jno
jle
mov
sti
mov
jb
inc
movb
cli
into
les
or
imul
das
call
jge
rcr
or
das
imul
mov
out
pop
sub
xor
or
data16
mov
shrb
icebp
cwtl
sub
std
mov
add
add
inc
push
or
idivb
mov
ficoms
or
cld
xor
scas
push
push
mov
adc
push
push
sbb
mov
sbb
scas
xchg
rorl
cmpsl
movsl
add
daa
mul
sub
pop
into
out
dec
stos
jecxz
jecxz
lret
mov
mov
fs
xchg
aam
or
into
jnp
cmp
outsl
mov
fstl
enter
test
test
mov
imul
lret
ret
popa
jns
adc
mov
fcomps
out
xchg
xor
imul
push
jno
jb
jo
testl
adcb
push
jl
push
mov
pop
out
adc
jmp
adc
jbe
adc
sbb
mov
xor
inc
xchg
fisttps
mov
or
int3
xorb
xchg
gs
xor
jns
aaa
pop
xchg
dec
arpl
sub
jmp
pop
fildl
daa
xchg
inc
pop
inc
xchg
popf
inc
lods
cmp
iret
push
add
lret
test
dec
test
int3
fbstp
orl
addr16
fptan
mov
cld
lods
iret
test
pop
lcall
imul
push
cwtl
and
adc
insb
mov
insb
mov
adc
out
testb
out
decb
movsl
int
jecxz
lahf
jbe
lret
lds
sub
stos
in
enter
push
jb
ljmp
add
push
pop
xchg
xor
jle
addl
fisubs
icebp
mov
les
push
jl
insl
pop
mov
ret
pop
les
xor
push
pop
lahf
mov
push
sub
ret
ljmp
inc
pop
insb
xchg
pop
sahf
sub
adc
sbbl
mov
cmpsb
mov
pop
sbb
add
jb
dec
cmc
lcall
popa
or
js
sbb
negl
sub
or
sub
int3
sbb
adc
pop
inc
dec
faddl
xchg
mov
shl
scas
fistps
test
outsl
std
imull
shrl
fistl
mov
lahf
cmp
cmpsl
cmc
push
xor
movsl
jbe
addr16
lret
fwait
rcll
cltd
jle
mov
je
push
outsb
scas
sub
xchg
push
push
dec
divb
icebp
push
pop
lds
loop
dec
div
repz
insl
sub
cs
adc
fstpt
mov
cmp
icebp
xor
int
add
out
cmp
scas
fildll
ja
sub
scas
mov
scas
mov
scas
xrelease
mov
test
xor
mov
and
fs
clc
push
icebp
jnp
arpl
stos
inc
stos
rorl
fsub
je
into
stos
mov
jg
xchg
add
adc
icebp
xchg
sbb
and
sub
xor
lret
jo
inc
into
mov
sub
andl
dec
fldz
sbb
dec
loopne
andb
mov
in
enter
ficoms
adc
add
in
cmp
iret
repz
cld
addr16
js
fsubs
adc
int3
fwait
xor
dec
popf
mov
hlt
sub
mov
or
rcll
and
int3
and
jbe
mov
daa
and
scas
push
dec
ds
aaa
int
mov
add
aam
dec
push
mov
cmp
iret
outsl
xor
pop
add
sub
movsb
and
movsb
dec
das
lds
inc
mov
pop
jne
leave
outsb
mov
enter
mov
sbb
jns
jmp
sub
push
pop
jge
mov
vpsubusw
cmp
mov
push
cmp
mov
in
and
fdivrl
jge
mov
cmp
inc
cltd
nop
mov
mov
pop
test
push
mov
mov
int
jmp
cld
dec
dec
fwait
sbb
dec
mov
and
imul
test
mov
notb
mov
mov
in
popa
sub
and
adc
mov
outsb
fnstcw
jle
xor
pop
pop
lock
xchg
push
pop
pop
sbb
sub
sub
les
and
xor
test
sub
test
xchg
jne
pusha
xchg
fstp
adc
push
pop
pop
stc
imulw
imul
negb
loope
inc
inc
lods
push
mov
and
xor
cmp
loop
sbb
shll
clc
jne
fnstenv
loop
add
pushf
xchg
in
cmc
jbe
fcmovu
cmpsl
sti
jg
xor
jle
dec
and
out
mov
daa
ror
repz
sub
test
adcb
adcb
in
adc
inc
inc
aad
dec
xor
adcl
cltd
popf
repz
aam
fstl
mov
dec
pop
dec
insb
sbb
mov
movsb
jg
mov
push
fs
sahf
das
sbb
jle
sbb
jns
lds
mov
mov
xchg
sub
hlt
sbb
lahf
adc
clc
mov
das
sub
dec
shlb
mov
frndint
xchg
dec
imul
fisttpl
test
xchg
or
outsl
cmp
jns
sub
ficoms
pushf
outsb
and
lret
xor
mov
inc
sti
push
fsts
xchg
les
xchg
out
add
inc
mulb
xcrypt-cbc
cmpsl
push
sbb
std
adc
sbb
dec
jg
mov
out
push
mov
call
xor
cltd
adc
pop
loope
ss
sarl
push
dec
aaa
xchg
sti
pop
push
aam
mov
jg
jp
movl
and
sub
and
test
jno
mov
xor
cmp
stos
jg
cli
xor
adc
outsb
xchg
pop
cmc
lods
addb
arpl
sahf
push
jmp
or
in
xor
js
out
mov
scas
aas
push
pop
sbb
jge
insl
stos
out
call
push
mov
lods
daa
inc
out
cmc
jp
pop
mov
addr16
inc
adc
dec
push
xchg
jae
mov
inc
imul
movl
or
jno
inc
fcmovnu
mov
lds
es
xchg
pop
mov
je
mov
loopne
pop
add
fbstp
or
mov
popa
ja
mov
sbb
jnp
cltd
outsb
stos
add
test
stc
les
sbb
imul
cmp
xor
mov
or
out
lods
pop
add
adc
adc
roll
bound
insb
cmpl
mov
in
xor
mov
xor
and
rclb
cld
adc
das
les
and
add
fmul
rorl
mov
adcb
aam
arpl
and
ret
push
pop
loopne
int
mov
cwtl
add
fmul
dec
pop
push
clc
mov
adc
xchg
or
jg
loopne
cmp
mov
or
repz
cmp
movsl
loope
clc
push
and
cld
xchg
mov
cli
pop
mov
ljmp
fxch
movsl
loopne
popa
mov
in
cld
mov
cmpb
jp
stc
in
and
aam
cmpl
and
aad
arpl
adc
clc
jle
push
add
mov
pop
das
lds
outsb
jg
push
nopl
mov
sub
jns
xchg
pop
sub
popa
inc
imull
mov
popl
lods
ja
daa
in
lahf
cs
cmpsb
bound
pop
dec
faddl
hlt
add
rclb
jns
ja
stos
mov
repnz
dec
sbb
or
mov
pop
or
dec
aad
jmp
sahf
scas
or
cmpsl
cmp
mov
xor
and
test
lret
stos
fsubs
jbe
pop
jge
or
rclb
jle
movsb
enter
js
inc
aaa
in
out
sbb
pop
push
rep
jno
xchg
sub
es
mov
inc
movsb
push
mov
mov
pop
icebp
dec
insl
jge
ss
sub
arpl
ds
aam
movsl
ds
mov
jbe
xor
scas
fucomp
pop
data16
leave
pushl
int3
inc
not
mov
mov
js
data16
pop
xchg
and
mov
jo
jb
mov
mov
push
pusha
jge
mov
test
ss
sti
lret
adc
imul
aas
aam
cmp
push
sub
in
jge
addr16
inc
aaa
out
push
dec
popf
pop
add
cmp
xor
and
jne
adc
jne
adc
cmp
das
mov
mov
int
rclb
mov
cli
mov
in
or
dec
sbb
mov
add
pop
mov
mov
into
xor
and
notl
lahf
rcpps
sub
inc
mov
mov
sub
or
sbb
sub
xchg
stos
cltd
out
fadds
mul
fcoml
imul
mov
sub
push
dec
xchg
out
xor
mov
into
imul
pop
sbb
loop
scas
and
daa
pushf
movsl
mov
pop
iret
int3
loopne
scas
sub
insl
mov
insl
sub
mov
arpl
cmpsb
out
ret
push
pusha
or
inc
dec
loope
adcb
fcoml
movsl
stos
imul
stos
cwtl
push
adc
imul
enter
icebp
jmp
xchg
adc
adc
cmp
fadds
mov
stc
jecxz
xchg
dec
sbb
test
add
sub
mov
cmp
pop
sub
push
mov
xor
adc
jnp
sbb
dec
mov
lret
into
repz
cmpsl
pop
inc
sti
and
sbb
dec
or
in
dec
outsl
pushl
xor
sub
addr16
out
jb
ja
loope
mov
loope
push
addl
inc
arpl
cmpsb
mov
pop
lods
or
loopne
pop
das
push
mov
insl
addb
stos
lock
push
xor
les
lea
ljmp
xchg
aaa
cmp
dec
fcoml
pop
xchg
rcrb
xchg
aaa
add
or
lods
mov
jmp
push
jb
movsb
cmp
mov
negb
mov
out
lock
ficomps
lret
into
and
sti
or
cli
sub
adc
jmp
ret
subl
and
cpuid
jle
lcall
xor
dec
push
test
pop
push
dec
push
inc
sti
les
xchg
sub
mov
sub
fwait
int3
in
mov
jne
in
dec
shll
outsl
cwtl
sbb
push
fs
js
add
xchg
nop
int
popa
sahf
dec
sbb
cmp
idivl
xchg
fs
mov
jnp
mov
and
loop
hlt
adc
popa
pop
or
fisubl
push
xlat
inc
clc
iret
sub
out
mov
adc
fmuls
mov
fcomps
and
stc
ret
pop
stc
rcrb
cmpsb
pop
mov
and
jg
cmp
adc
sbb
rcrl
xor
jb
fcmovnbe
mov
xchg
adc
mov
mov
cmp
jg
fadds
xchg
int
test
add
sub
outsl
fsubrs
data16
pusha
xchg
dec
inc
xchg
hlt
cmpsl
cmp
and
jecxz
sahf
ljmp
xchg
push
stos
add
sbb
jmp
in
ds
jbe
xor
sbb
push
imul
mov
call
mov
xchg
sbb
mov
cmc
pop
js
sbb
push
cwtl
cmp
lods
add
jb
lods
sahf
mov
out
popf
pop
adcl
std
fidivrl
stos
faddl
or
cmp
shll
inc
imul
xor
outsl
call
outsl
pusha
push
aad
xor
pop
dec
es
int3
dec
jnp
mov
or
and
jns
or
pop
in
mov
pushf
out
aaa
and
stos
cld
sbb
test
and
aas
inc
fcomps
mov
dec
cmp
mov
and
jns
loope
lret
sbb
stc
gs
fstl
cltd
nop
into
dec
jge
mov
popf
outsl
fsubl
aaa
enter
std
xchg
cmp
mov
sub
and
insb
fmul
aaa
int3
push
mov
mov
inc
test
mov
int
xor
pop
mov
sti
jp
jecxz
jmp
sub
jl
push
stos
sub
sbb
adc
sub
lret
daa
pop
add
sub
xor
mov
mov
arpl
fimuls
and
and
ja
pop
inc
jns
fisttps
inc
xor
daa
lcall
arpl
lods
cmp
fidivs
out
mov
push
push
mov
loopne
jge
icebp
mov
jae
test
rol
jmp
inc
xchg
punpckhbw
popf
pusha
add
sahf
in
call
sbb
xlat
mov
cltd
movsb
mov
mov
dec
shlb
in
adc
jmp
or
mov
add
mov
leave
push
dec
insb
scas
shlb
icebp
lahf
mov
stos
inc
outsb
data16
lret
sti
std
mov
cmp
mov
jb
sbb
push
sub
push
add
sub
cmp
jp
pop
int3
loope
or
fnstenv
rorl
ja
outsb
lahf
pop
push
sbb
orl
add
cmp
sub
pop
loopne
mov
mov
xor
in
in
adc
fidivs
mov
sbb
xchg
sbb
add
push
pop
imull
gs
mov
push
adc
sbb
pop
mov
sbb
pop
cmpsl
pushf
cmp
pop
cmp
std
inc
mov
cltd
and
loopne
clc
stos
push
push
inc
push
or
fwait
sbb
data16
adc
inc
mov
test
mov
out
push
aaa
cmp
enter
fldcw
pop
push
ljmp
jae
cmp
fadds
stos
popf
scas
rol
dec
negl
pop
dec
and
iret
in
mov
jno
outsb
adc
xor
loopne
jo
xchg
jo
xchg
cmp
mov
sbb
mov
test
xchg
cli
dec
sub
mov
adc
or
fistpl
mov
bound
fiaddl
and
lods
add
fnsave
jb
push
add
loope
sbb
push
cwtl
mov
sbb
lds
pusha
mov
ret
and
mov
ror
sti
idivb
pop
push
cmp
sbb
mov
stos
push
xchg
imul
xor
out
pop
pop
lock
or
mov
out
daa
ficompl
insb
mov
jns
jecxz
popf
lea
adc
dec
ret
adc
add
outsl
loope
xorl
sbb
or
cld
and
mov
lahf
popf
scas
mov
mulb
mov
out
movsb
test
dec
test
std
sub
inc
jle
out
fcoml
jle
hlt
push
std
and
cmp
jle
leave
mov
jne
jecxz
jmp
lods
mov
cmp
ljmp
push
cwtl
rcll
insb
inc
pop
dec
mov
cld
lahf
cmp
or
xchg
gs
rcl
or
xchg
mov
test
add
cmp
xor
pusha
adc
mov
ret
lds
sbb
adc
fisttps
sub
mov
lahf
scas
repnz
test
ret
push
adc
aaa
dec
dec
or
mov
clc
add
jne
ret
pop
push
jmp
cld
jp
in
mov
stos
or
stos
sbb
or
xor
inc
adc
es
mov
pushl
adc
jmp
push
adc
pushl
test
dec
lret
jae
stos
pop
pop
addb
shll
aas
push
mov
inc
ja
xor
sub
jb
mov
imul
xorl
push
or
pop
sbb
xchg
out
icebp
jne
lock
mov
orl
jmp
das
xor
cmpsl
ss
push
jp
mov
xchg
data16
add
add
scas
xchg
mov
js
xchg
add
jecxz
xchg
popf
pop
pusha
xchg
icebp
mov
pop
mov
xor
test
vcvtpd2dqy
adc
lret
and
call
inc
loopne
pushf
fbstp
mov
fwait
mov
in
lret
rolb
mov
test
int
pusha
xchg
adc
cmp
xchg
push
dec
dec
lret
in
adc
xor
push
push
mov
out
daa
jecxz
mov
jg
ds
icebp
mov
sub
ret
in
rcll
iret
cs
cltd
mov
test
bound
pop
repnz
shll
sub
jg
cmp
jecxz
xchg
sbb
std
loopne
lret
push
push
gs
popa
aad
fisttps
push
test
lret
add
cmp
push
scas
fldt
pusha
imul
sbb
pop
scas
or
pop
dec
sahf
into
sbb
jo
xor
nop
fidivrl
and
mov
mov
inc
jo
mov
cmc
scas
sbb
inc
int
stc
mov
add
push
imull
mov
lock
pushf
mov
bound
lods
div
or
stc
stc
rorb
lahf
mov
shlb
add
mov
and
xlat
fiadds
adc
mov
scas
cltd
mov
or
xchg
add
aas
sbb
pop
and
test
fndisi(8087
or
push
dec
cwtl
mov
nop
cmp
out
sti
mov
cltd
or
cld
nop
or
xor
shlb
subb
icebp
pop
jnp
jo
cltd
out
ret
and
mov
push
fdiv
jge
std
sub
dec
inc
test
sbb
sub
mov
cltd
lcall
lods
fcmove
mov
push
mov
insl
xor
or
cltd
hlt
lods
push
shrl
cmc
fidivrl
shll
mov
add
jecxz
push
adc
sub
inc
fld
pop
jle
and
jmp
in
imul
pop
aam
add
push
and
loopne
xchg
adc
push
stc
push
rcr
mov
fildl
rcl
out
cld
xchg
push
mov
addr16
inc
add
aam
rcl
cli
jo
outsb
pusha
push
ljmp
jle
fcomps
insl
cli
xchg
mov
sbb
xchg
out
jmp
shlb
in
popa
sbb
sub
inc
xor
lea
mov
xor
and
sub
adc
lods
pusha
mov
xlat
pop
pop
xlat
loop
jns
mov
inc
sbb
mov
xor
lret
fs
cmp
mov
scas
xchg
sub
ss
out
mov
lea
xchg
fdivs
fmul
outsl
sub
sub
dec
dec
shll
xchg
mov
xchg
jle
rcll
mov
arpl
push
mov
int3
jbe
es
pop
mov
iret
imul
test
pop
hlt
pop
push
test
adc
push
mov
mov
imul
sahf
jg
sub
cs
fisttpll
adc
sbb
leave
ret
and
jo
xchg
shr
cmp
push
shlb
mov
pop
mov
push
dec
cmp
sbb
jbe
lret
aam
cmp
lea
cmp
les
pusha
pop
popa
mov
lret
subl
pop
and
imul
push
scas
pop
cli
stos
fcomps
test
pop
es
not
insb
or
iret
pop
adc
adc
inc
sahf
jmp
mov
sbb
xor
cmp
mov
jnp
lods
outsl
movsl
loopne
stos
add
ret
fwait
lods
bound
inc
sti
push
imul
addr16
das
push
bound
dec
mov
sbb
add
mov
cltd
jp
cmp
pop
mov
aaa
dec
inc
repnz
mov
pop
dec
mov
cmpsb
mov
inc
mov
inc
inc
adc
stc
mov
adc
enter
lock
fwait
adc
jge
sbb
repnz
cmp
sub
enter
cld
mov
mov
adc
jns
hlt
xchg
xor
aad
add
aaa
jae
cs
out
sti
ret
xor
jae
jae
adc
xlat
outsb
in
shll
shl
xchg
mov
lret
adc
into
push
pushf
sbb
pop
inc
mov
add
mov
xchg
mov
fwait
add
jge
pop
sub
loope
mov
ja
cmpsl
mov
jno
test
inc
sub
mov
jb
insl
lods
test
mov
div
js
or
ret
sbb
stos
js
ret
or
pop
aad
pop
mov
aas
in
fs
pusha
lds
cmp
push
cmp
pop
xlat
sbb
cmovb
sbb
int3
dec
mov
mov
or
in
fwait
test
outsl
mov
sti
addr16
dec
test
loop
sbb
notl
scas
not
fwait
mov
rorb
fidivrs
jne
mov
mov
cmp
mov
mov
xor
pop
enter
ss
lea
jl
outsb
and
mov
mov
cmp
and
data16
sbb
lret
out
xchg
inc
fdivrs
sbb
fcmovnbe
push
dec
out
ss
arpl
leave
pusha
inc
jecxz
lret
addl
shr
int3
cmp
add
mov
add
shll
sub
out
in
cltd
les
sbb
and
jb
ss
fldt
js
popa
sahf
dec
xor
pop
push
cli
inc
idivb
sbb
or
cmp
fstl
inc
xor
sub
sbbl
dec
iret
std
add
pop
fs
sbb
outsl
cmp
cmc
dec
pop
movsl
test
push
jno
out
lds
jmp
dec
mov
dec
or
push
jle
xor
sub
aam
mov
xlat
or
pusha
cmp
adc
jle
jns
push
ret
out
mov
mov
xchg
or
inc
das
mov
mov
loope
bound
dec
fistl
test
sub
push
sub
xchg
imul
cmp
scas
mov
sub
inc
pop
jno
add
add
xchg
inc
fsubl
ret
lahf
outsl
std
adc
adc
cmp
sub
fists
push
sbb
outsb
lcall
sub
xchg
in
mov
pop
shl
mov
xlat
test
imul
scas
in
adc
dec
psadbw
mov
insb
adc
std
cmp
xchg
jne
ret
lret
test
mov
add
shr
adc
or
add
mov
sub
xchg
lods
inc
push
repz
adc
xchg
mov
jnp
loopne
cmpsl
hlt
cmp
fnstsw
mov
and
push
rorl
jecxz
test
xor
xchg
das
lcall
cs
push
push
loope
jmp
mov
fistps
sub
aaa
pop
rolb
push
fs
mov
xchg
mov
cmp
fldt
pop
mov
add
mov
push
adc
out
cmpsb
jmp
fwait
mov
stos
mov
push
stc
adc
inc
xor
inc
pop
dec
mov
jp
imul
jo
out
dec
xchg
loopne
mov
jno
push
je
add
shll
ja
out
dec
pop
out
mov
jp
and
iret
popl
inc
ja
cmp
aas
xor
repz
nop
movsl
inc
xor
pop
testb
add
imul
rcrb
push
fidivl
shll
movsb
dec
jno
push
iret
jl
ficomps
mov
mov
or
andl
lods
dec
mov
mov
dec
adcb
xchg
jg
dec
xor
ret
fsubs
pop
xor
stos
lds
mov
inc
xor
dec
lds
push
aas
cmpsb
cmp
es
movsl
adc
lahf
jne
mov
aad
insb
fcom
sti
in
fs
mov
sub
rorl
or
jo
cwtl
andl
lahf
and
mov
fisttpl
push
mov
inc
xor
xchg
fdivs
mov
js
mov
les
addl
jne
jne
push
push
and
xchg
mov
stos
xchg
lret
in
push
sbb
inc
adc
adc
lods
inc
orl
popf
mov
cli
push
mov
xor
sbb
clc
jnp
jno
movq
imul
fucom
push
push
jnp
or
sub
cmc
mov
ret
shrl
and
xor
cmp
xlat
js
test
sahf
sbb
xor
sahf
scas
mov
mov
cld
movsb
lds
push
addr16
cmp
xchg
mov
sti
lock
push
lds
ja
das
mov
and
cltd
inc
mov
xor
dec
xor
scas
sbbb
in
push
adc
fidivrl
out
xlat
jb
sbb
cmp
testl
sbb
popf
mov
inc
lret
add
inc
xchg
es
mov
sub
pop
fcmove
lcall
inc
loope
fmull
adc
ret
ror
in
dec
loopne
fcmovnb
stos
mov
mov
test
pop
cmp
outsb
icebp
push
out
loop
stc
daa
sub
mov
or
mov
std
shl
mov
inc
lock
inc
into
jns
jne
clc
jno
push
mov
andl
cwtl
pushf
dec
and
loop
rclb
daa
int3
push
add
adc
cwtl
jg
jnp
xchg
out
je
mov
pop
je
cld
lods
adc
outsb
xor
sbb
lret
or
roll
mov
and
mov
inc
pushf
addr16
and
mov
push
jmp
mov
sub
sbb
xchg
push
adc
jp
shl
fists
bound
cld
mov
jb
sbb
mov
jo
int
lahf
push
jecxz
lods
fs
enter
jecxz
mov
pop
enter
subb
mov
jmp
movsb
insl
call
or
sbb
jns
movsl
xchg
sub
ror
repnz
cli
lret
xchg
imul
es
xor
push
lea
cltd
rolb
cmpsl
mov
mov
cmc
mov
dec
inc
data16
repz
test
and
scas
sbb
loope
repz
in
inc
and
adc
xor
mov
xchg
push
xor
xor
dec
in
sbb
aas
popa
jmp
out
xor
rep
xor
mov
lret
pop
mov
xchg
stos
mov
repz
loop
and
js
fldcw
jg,pn
push
adc
mov
xchg
ret
loope,pt
into
std
mov
pop
push
insb
insb
cltd
and
mov
and
mov
cwtl
aas
jp
js
insb
jae
dec
iret
lcall
psubusw
test
mov
sub
pop
mov
sbb
adc
fnstenv
lahf
mov
data16
mov
inc
in
and
mov
pop
sbb
sub
icebp
or
jecxz
lods
std
inc
addr16
out
mov
mov
pop
mov
adc
cmc
rcrb
rcrl
ss
mov
lods
lods
div
jp
and
cmp
mov
mov
xor
cmp
jg
scas
ds
jne
mov
lds
push
mov
pop
jno
scas
lds
je
std
or
js
and
fldenv
adc
adc
dec
or
sub
out
ljmp
stos
add
mov
cmpsl
sub
and
xchg
or
push
lods
push
mov
fmuls
jmp
cmpsl
dec
sub
xor
popa
stos
sub
pop
in
mov
test
jge,pn
hlt
fmul
cmpsb
rorb
xor
repz
mov
and
add
cltd
adc
leave
pushf
mov
mov
mov
das
sbb
adc
cwtl
lock
pop
mov
push
roll
or
dec
adc
inc
jl
mov
icebp
pop
ror
vmptrld
pop
out
sub
add
in
push
mov
pop
repz
and
jbe
jne
shll
xor
outsb
loop
into
aas
in
imul
icebp
xchg
enter
test
outsl
les
inc
pusha
cmp
das
repz
pop
popf
mov
inc
inc
stos
xor
cmpsb
or
test
movsl
sbb
xchg
xchg
outsb
sub
or
cmp
or
push
inc
ss
out
movsb
dec
xor
sbb
fdiv
dec
iret
fisubrs
cmpl
aam
std
das
pop
test
out
or
dec
cs
mov
sbb
pop
leave
xchg
cmpsb
add
shll
mov
xchg
sub
xchg
outsb
aas
pop
fdivrs
popa
sub
gs
ficomps
xor
fistps
dec
sub
ret
jbe
mov
iret
imul
adc
and
mov
lcall
xchg
in
push
inc
iret
mov
inc
mov
shlb
sub
ret
dec
int3
and
loop
ret
sbb
adc
cwtl
ja
jo
cmp
and
xor
nop
jb
movsl
mov
data16
mov
jp
lret
rsm
cwtl
imul
cmpsb
scas
xchg
js
jns
pusha
or
int3
push
mov
ds
xchg
aad
fmull
cmp
inc
shrl
fbld
in
ds
les
fldl
pop
xor
sahf
shrl
ret
ds
orl
sar
jle
inc
and
aaa
sub
testl
fstpl
out
arpl
sub
loope
stos
into
ja
xchg
outsb
mov
daa
imul
sbb
jmp
mov
xor
ror
mov
adc
xor
loope
rep
les
jl
pop
pop
mov
mov
mov
mov
imul
addb
xor
push
xchg
js
cli
cmp
xchg
mov
and
adcl
out
adc
add
pop
loopne
imull
jle
sahf
xchg
jno
fcmove
cld
dec
lods
fildll
sarb
setns
mov
clc
mov
int3
jecxz
daa
xor
bound
jno
xchg
aas
add
pop
mov
inc
subl
scas
or
push
out
add
sahf
test
mov
cmpsl
cs
in
add
aas
repz
push
popf
add
fwait
pop
addb
lahf
andl
push
sarl
sbb
mov
andl
inc
es
or
data16
cmc
mov
mov
adc
jp
cli
sbb
add
lea
nop
ds
cmp
mov
stc
shll
push
mov
sub
fldcw
or
jp
adc
mov
dec
fldl
sbb
or
mov
push
pop
sub
and
jnp
push
pop
sub
jecxz
or
push
daa
xor
sub
add
jmp
jp
jo
mov
push
out
sarl
adc
jns
cld
cltd
xchg
dec
inc
movsb
repz
sarl
xchg
pop
cmp
lods
jl,pt
scas
sbb
push
push
enter
or
nop
inc
xlat
fwait
or
dec
mov
sti
mov
or
outsl
xchg
dec
inc
int3
pop
cmp
pop
lret
cmp
fstpl
mov
cmp
mov
push
aaa
inc
mov
adc
xchg
outsl
shrb
scas
fucomi
das
mov
je
rcll
or
loope
pushf
dec
scas
fcom
or
hlt
repnz
cmc
lret
das
pop
sbb
sarl
pop
cs
mov
mov
shl
lret
xchg
lret
clc
out
mov
lret
and
scas
mov
shll
cli
sbb
or
pushf
lea
es
push
push
or
mov
fwait
hlt
ret
mov
xor
and
push
mov
mov
jb
jge
icebp
out
xchg
int
add
lcall
stos
mov
xor
enter
and
aam
repz
int
mov
cmp
rcll
xchg
jnp
in
inc
add
clc
dec
addr16
loope
pop
mov
test
push
dec
in
mov
leave
or
mov
in
pop
gs
shrb
cmp
push
scas
pop
sti
pop
cwtl
pop
xchg
fdivrl
mov
xor
nop
jno
cmp
loope
xchg
jbe
shr
sbb
mov
sbb
adc
mov
push
cld
adc
ret
inc
int3
data16
cmp
jae
lret
cmp
data16
push
cmc
dec
or
add
enter
fmulp
pop
jl
inc
je
out
pusha
jp
push
rep
jo
lods
stos
xorl
cmpsb
mov
repz
adc
add
iret
stos
fcomip
int
das
sbb
lcall
stos
mov
stos
adc
mov
stc
push
pop
das
pop
sub
leave
or
lret
mov
jl
and
lret
adc
fistpl
pop
mov
push
push
jp
jle
les
mov
imul
pusha
mov
inc
iret
pop
mov
sub
pop
sub
mov
and
loopne
sub
mov
js
push
jb
xchg
call
mov
push
adc
or
lret
adc
cmp
mov
pop
lret
ret
mov
push
jno
cmp
jns
sbb
push
pushw
cld
bswap
push
lret
dec
aad
lcall
dec
cmpsl
jmp
mov
dec
out
movsb
fisubl
popf
jle
rolb
stos
dec
jo
xrelease
cmp
xor
pop
clc
cmp
xlat
test
neg
mov
mov
ja
jmp
pop
scas
and
dec
test
call
lods
cmp
sbb
repz
inc
call
pusha
pop
pop
fnstsw
lods
push
pop
js
jg
popf
and
mov
test
jmp
lods
rcrb
adc
inc
adc
sub
outsl
popf
mov
push
or
sti
push
pop
cmp
push
pop
stc
xor
int
pop
push
jmp
cmpsb
and
fisttpll
test
mov
addr16
inc
sub
call
js
xchg
cli
lret
jae
adc
js
pop
dec
sbb
lock
out
fwait
es
inc
das
mov
jne
dec
test
sbb
gs
mov
dec
jno
addl
push
pop
jae
mov
cmp
mov
push
adc
cmpsl
jecxz
mov
pop
mov
jmp
cli
fisttps
int3
fsubs
sahf
aaa
sbbb
addr16
lret
xor
lods
dec
adc
push
stos
movsl
pop
or
fidivl
mov
lea
mov
pop
test
dec
push
cmp
and
dec
sbb
jnp
insl
shl
sub
push
sbb
mov
pusha
jno
inc
adc
sbb
or
fldenv
aam
mov
add
jmp
push
rclb
mov
jmp
cmpsb
xchg
enter
outsb
inc
jg
lahf
imul
mov
pusha
and
jmp
pop
nop
xchg
aam
sub
lods
inc
pop
popa
xor
dec
adc
pusha
leave
fcmovu
je
nop
mov
lock
cmp
cmp
lea
vxorps
inc
js
outsl
test
gs
subb
sub
pop
dec
cwtl
xor
inc
sbb
inc
movsl
adc
push
adc
out
outsl
jnp
push
pop
push
bound
mov
movsb
fcmovnu
stc
in
andb
jnp
daa
ljmp
ret
scas
xchg
mov
inc
inc
mov
and
inc
cmp
mov
mov
dec
pop
imul
dec
and
mov
jl
sub
loopne
or
aad
inc
ljmp
ret
mov
mov
bound
rorb
mov
push
aas
pop
das
cmpsl
ss
scas
cmp
mov
and
sbbb
xchg
jo
and
dec
mov
enter
in
idivb
cmp
pop
mov
mov
pusha
int
cld
arpl
inc
stos
aaa
scas
pusha
iret
ja
sbbl
jae
mov
aam
cmpsb
lret
pusha
outsl
sub
mov
fsubrl
xchg
push
push
mov
incl
mov
fsubl
dec
lods
mov
sbbb
push
sub
mov
cmp
sub
add
pop
xchg
fidivrl
addb
cld
jne
movsb
or
add
mov
pop
mov
sbb
mov
inc
jo
adc
sbb
push
mov
add
in
aaa
xlat
and
jb
jno
add
mov
rolb
mov
adc
rorl
ret
out
imul
insb
jb
pusha
dec
and
jmp
sub
fwait
push
int3
insl
mov
pop
cld
mov
push
mov
js
imul
pop
fwait
dec
cmp
cmp
subl
add
pop
jmp
and
lret
mov
mov
movb
xor
lahf
cmp
data16
stos
inc
push
lds
scas
add
mov
inc
xor
rcrb
jp
and
pop
clc
div
mov
ret
jo
or
pop
cmp
xor
stc
and
adc
pop
hlt
enter
mov
nop
scas
cmp
add
test
fwait
or
std
and
nop
xchg
jg
bound
aam
mov
jne
scas
jb
pop
mov
jno
cltd
adc
dec
xor
ljmp
xchg
xchg
les
push
or
cmpsl
int3
scas
les
xorb
push
mov
jl
fisubrs
rcll
cwtl
jno
out
dec
aas
mov
lret
hlt
and
push
in
lock
xchg
loope
mov
aaa
sbb
fdivr
and
cmp
das
and
bound
pop
inc
sub
jg
mov
mov
mov
and
fimuls
loopne
jecxz
cltd
stc
push
pop
dec
xchg
lcall
jle
sti
icebp
lret
mull
cmp
aaa
adc
hlt
rorl
subl
jnp
filds
stos
cmp
sub
jne
add
hlt
std
mov
mov
xchg
shl
in
xor
ret
jbe
jno
inc
pusha
mov
pop
push
popf
mull
dec
mov
sbb
bound
push
inc
sar
inc
dec
cmp
and
dec
mov
xchg
sbb
push
inc
push
addr16
mov
pushf
aam
dec
cs
hlt
mulb
cld
push
xchg
mov
lds
pop
sbb
scas
push
je
arpl
or
and
popf
sub
pop
outsl
jns
std
inc
push
ljmp
sbb
adc
mov
orl
fdivs
mov
sbb
cltd
in
push
pushf
push
pop
std
inc
mov
imul
inc
repz
jnp
xorl
loope
sbb
arpl
pusha
xchg
xor
cmpb
jge
mov
js
cltd
lret
dec
jle
xor
or
sub
pop
jecxz
call
add
jbe
mov
inc
or
ret
dec
and
mov
pop
xlat
sub
in
mov
dec
fnstcw
mov
or
mov
mov
sbb
and
rcrb
mov
pop
sbb
lahf
shlb
pop
cmp
lods
sbb
fnstenv
icebp
push
outsb
push
sbb
push
enter
xorb
mov
mov
push
adc
mov
xor
dec
aad
adc
inc
jmp
fldt
aam
sub
dec
hlt
mov
pop
sbb
jo
cmp
lcall
mov
sbb
lods
mov
mov
xor
dec
adc
mov
jle
popf
fildll
xchg
loop
or
popa
and
repz
adc
in
cmpsb
cwtl
call
ret
out
inc
add
adc
lahf
jnp
roll
outsl
jne
mov
test
xchg
and
sbb
decb
ret
xor
xchg
dec
addr16
or
not
lock
sbb
pop
xchg
pop
sbb
fisubrs
push
je
jae
mov
and
std
test
xchg
movsl
cmp
test
les
repnz
push
cmp
cmpsb
sub
test
cltd
pop
std
lcall
outsl
jae
stos
mov
push
pop
outsl
xor
xchg
cmp
arpl
jne
sub
ficompl
popa
jmp
test
movsl
dec
and
int3
fisubs
mov
xor
cltd
dec
cmp
push
sub
adc
lock
xchg
pop
mov
or
xchg
loopne
xor
aaa
nop
dec
dec
sub
cli
adc
insb
xchg
xchg
jecxz
or
adc
xchg
pop
mov
lods
push
mov
inc
inc
cmpsb
movsl
movsb
push
mov
js
mov
mov
pushf
jno
stos
in
and
xlat
rorl
push
hlt
mov
xor
cmpsl
aas
push
push
in
stos
mov
xchg
lea
imul
sti
mov
mov
mov
ds
mov
push
std
xor
xchg
jecxz
out
lret
sti
out
xor
lcall
push
mov
xchg
mov
dec
fcoml
daa
leave
repz
stc
jbe
inc
aad
pusha
sub
mov
filds
pop
into
loopne
push
cli
xor
lds
push
inc
hlt
loop
js
dec
sbb
imul
in
loope
pop
add
push
rclb
mov
fwait
sub
mov
rorb
cltd
mov
insb
cmpsb
sbb
pop
int
sbb
push
aam
pop
lods
push
loopne
lret
dec
or
sub
leave
sahf
xlat
inc
aaa
fdivr
fsub
stc
and
cmpsl
bnd
test
mov
dec
mov
sub
js
inc
int3
push
ret
adc
mov
or
outsl
fldt
clc
das
enter
cs
xor
mov
scas
jecxz
pop
dec
and
hlt
test
hlt
adc
pop
xlat
jb
mov
mov
jo
or
repnz
xchg
sub
push
aas
push
std
out
mov
fwait
ss
pop
outsb
xchg
xchg
ljmp
cmc
mov
sub
test
aad
icebp
mov
dec
fwait
into
mov
or
fcoms
in
movsl
jne
mov
std
cmp
imul
adc
jmp
pop
mov
jno
sub
add
popf
lds
mov
fucomip
xchg
scas
das
subl
xchg
mov
jge
mov
mov
iret
loop
jl
xchg
icebp
push
adc
out
or
sub
push
insl
pop
mov
insb
cltd
mov
mov
inc
in
rclb
inc
push
push
jnp
enter
mov
mov
cmpsb
fs
fdivl
mov
pop
push
jle
jnp
xchg
pop
mov
inc
add
inc
xor
xchg
sub
popa
jae
mov
sbb
pop
fimuls
test
push
pop
fiadds
ret
stos
mov
push
push
pusha
xchg
cmp
test
push
stos
inc
inc
pop
jnp
dec
insl
xlat
scas
inc
pop
jmp
ret
add
imul
lock
mov
addl
movsb
mov
mov
test
clc
adcb
subb
pop
dec
popf
sti
ret
mov
jl
dec
cmp
rolb
les
mov
int3
lock
popa
repz
loope
test
imul
pop
aaa
lods
repnz
pop
and
jge
push
jbe
scas
out
cmp
mov
lock
pop
cmpsl
push
jmp
push
push
push
lret
dec
dec
imul
loop
sub
pop
imul
and
int
xor
repnz
cli
in
adc
jg
sbb
outsl
imul
inc
rcr
or
lret
or
icebp
sbb
inc
push
fistpll
xchg
mov
xchg
sti
orl
into
lcall
out
xchg
stos
inc
ror
mov
cmpsl
es
test
sub
cld
cmc
jno
fiadds
aas
jno
cmpsb
and
shlb
test
ss
sbb
shl
mov
push
cmp
div
arpl
lds
fbstp
pop
jp
lahf
in
add
test
cmpl
lret
mov
cmpl
stc
pop
xlat
out
fimull
lock
xchg
xchg
out
mov
add
pop
icebp
les
imul
cmp
mov
cmp
xchg
adc
cltd
out
popf
fsubrs
scas
add
stc
les
ret
cmp
cmp
xchg
sbb
or
adc
imul
inc
test
scas
test
xor
inc
xor
xchg
xchg
inc
add
cmc
sub
cmp
insl
jno
movsb
xchg
xchg
cwtl
fcoml
jbe
mov
or
sub
lahf
mov
mov
sub
out
inc
sbb
ss
xlat
je
jmp
mov
pop
iret
lret
test
sub
xor
mov
enter
popf
sbb
stos
adc
lock
inc
xchg
repz
stos
or
fcom
push
jae
jo
icebp
add
mov
mov
jo
mov
mov
cmc
jp
jmp
lock
add
in
dec
ss
insl
sub
fbstp
out
mov
add
mov
jecxz
push
push
sbb
incb
mov
push
incl
setg
popf
scas
lahf
stc
xchg
leave
out
enter
add
aaa
inc
aad
lds
xor
jl
and
fists
xchg
scas
jnp
sbb
adc
inc
cmpsb
into
enter
xchg
out
gs
mov
dec
in
sti
cmp
inc
subb
cli
xor
xlat
stos
jge
mov
inc
xor
sbb
cwtl
roll
es
sbb
divl
pop
out
adc
scas
les
pop
inc
pop
and
loopne
outsl
loopne
push
dec
call
paddusb
movsb
xor
je
insb
cmp
test
outsb
outsb
inc
push
lds
test
jne
aaa
pop
insb
inc
push
fs
fmuls
add
cmc
negb
mov
dec
loop
jge
lods
arpl
dec
pusha
jmp
or
arpl
mov
divb
pop
xor
movb
mov
inc
xchg
out
jbe
add
std
sub
fnstcw
sub
mov
lea
popa
pop
inc
popf
xor
adc
les
ss
xchg
dec
cmp
jmp
or
xchg
lahf
in
scas
push
fisubrs
xchg
xchg
imul
jb
sbb
pop
scas
cmp
adc
ret
rol
sbb
cmp
mov
push
addr16
sbb
xchg
inc
in
or
out
pushf
or
fistpl
lock
jne
arpl
dec
incb
push
cli
lahf
sbb
out
jmp
xor
neg
sub
xchg
lret
jno
lret
test
mov
test
imul
xor
jp
mov
inc
arpl
nop
pop
pop
mov
pop
adc
ret
shll
loop
shll
sbb
jl
in
fisttpl
jmp
cmp
cmpsl
mov
dec
fdivl
rolb
jmp
outsb
push
imul
outsb
popa
scas
std
popl
rorl
insb
pop
test
push
mov
xchg
inc
and
xchg
in
push
aad
arpl
lock
sbb
repnz
lahf
ss
outsl
lock
imul
ret
mov
jb
and
subb
jl
leave
lret
imul
test
mov
stos
lret
adc
cli
lea
push
jp
mov
mov
leave
jb
hlt
ffree
sbb
arpl
mov
jle
mov
std
out
push
test
push
or
xor
mov
lock
and
fildll
mov
push
pop
or
movsl
dec
sub
lret
stc
loope
mov
fs
sbb
in
nop
push
in
push
arpl
adc
xchg
stc
mulb
push
cltd
xorb
dec
hlt
and
pop
divl
inc
inc
out
sbb
sbb
inc
xchg
out
push
or
mov
xchg
lahf
js
push
test
aaa
into
les
rcll
dec
and
pop
pop
outsb
adc
fldl2t
sbb
inc
lock
test
xchg
std
push
jle
shl
or
pop
jnp
adc
xchg
movsl
xor
enter
sti
xchg
dec
push
lret
push
jl
stos
in
rcll
dec
pop
rcr
repnz
sub
xchg
fbstp
cmpsb
imul
jecxz
pop
mov
mov
sub
neg
mov
jp
mov
jbe
cmpsl
icebp
into
outsb
push
xchg
jo
cwtl
cltd
jae
cmpsl
pusha
shll
clc
insl
insl
add
push
or
push
cmp
mov
aad
inc
adc
loope
mov
loopne
cmp
add
jge
and
jbe
cmpsl
adc
loope
lahf
jbe
fdivl
mov
lret
mov
sbb
or
or
mov
xchg
xchg
jno
std
stos
inc
iret
call
imul
mov
nop
sub
inc
dec
xor
mov
fisubrl
pop
or
cmp
jp
mov
orb
sbbb
stos
sbb
in
sub
sbb
inc
icebp
les
int3
lcall
ljmp
xchg
mov
jp
in
dec
inc
bound
nop
add
pop
add
add
and
stos
mov
movsl
scas
pop
out
out
jo
das
mov
adc
insl
jo
lea
mov
cmp
and
push
sub
mov
mov
and
js
movsl
jbe
test
and
mov
repnz
insl
pop
sub
dec
repnz
insl
adc
in
das
mov
iret
rcll
dec
test
ret
jmp
mov
leave
jne
lahf
test
fwait
jnp
pop
jne
mov
push
and
aaa
jg
imul
enter
es
mov
arpl
nop
mov
sbb
mov
mov
in
sbb
test
stos
in
dec
cwtl
adc
aam
mov
jae
lret
inc
mov
notb
aad
enter
sub
jg
pop
aad
aad
movsl
sti
push
lret
jb
pop
xor
js
inc
fwait
cmpsl
sahf
jnp
decb
mov
sub
pop
and
in
inc
fwait
arpl
por
jbe
and
adc
adc
push
mov
and
inc
mov
lods
jnp
mov
pushf
or
or
fidivrs
call
or
in
mov
stc
cmp
cmp
xor
sub
rcll
jns
fcoml
add
cmpsb
xor
and
cmp
xchg
addb
and
sub
test
imul
mov
xor
mov
mov
out
aad
sbbl
xor
jb
mov
into
rorb
jb
add
push
jle
jne
or
mov
push
sbb
pushf
inc
xchg
push
shll
pusha
pop
bound
popf
and
shlb
sub
bound
inc
orl
mov
jge
fs
outsl
ds
adcl
inc
popf
xlat
daa
fstpl
lcall
lahf
sbb
shrb
or
int3
sub
dec
insl
call
adc
icebp
inc
clc
fs
push
cmp
mov
stos
movsl
sbb
sub
cmp
add
addr16
loopne
xchg
xchg
fidivl
fidivrl
mov
int
and
sahf
cmpsl
imul
jmp
imul
ja
popa
in
cwtl
mov
xor
mov
mov
daa
mov
adc
stos
fcmovnbe
add
push
and
and
cld
dec
inc
adc
ja
mov
jp
dec
add
repz
or
loopne
int
push
test
movsb
mov
insb
cmpsb
mov
cmp
aas
mov
pop
xchg
inc
xchg
fiadds
imul
pop
shl
insb
pop
mov
and
ss
push
inc
pusha
out
inc
fdivrl
aam
popf
mov
sbb
pop
mov
out
and
and
lods
adc
mov
dec
arpl
not
nop
lcall
cmp
test
mov
sub
mov
adc
test
hlt
pop
adc
jecxz
cmp
jns
xchg
cmpsb
stc
jns
xchg
cltd
mov
or
shlb
inc
push
mov
adc
hlt
mov
or
or
add
movsl
pop
fcomp
jnp
jl
cmp
ljmp
fwait
pinsrw
sub
adc
cmp
ret
aam
lcall
iret
cmp
outsl
cmp
sub
adc
fdivl
mov
iret
rorb
and
nop
sbb
xchg
or
sti
jns
jecxz
jg
adc
and
mov
mov
cmpsl
cmp
cmc
mov
mov
out
jno
aaa
cmc
or
inc
test
loop
adc
sub
push
cwtl
pop
cwtl
dec
mov
aam
mov
pop
jns
pop
movsl
inc
cmp
jp
jo
data16
lret
pop
rcrb
ret
dec
dec
mov
xchg
lcall
mov
mov
ja
subb
or
pop
testl
imul
dec
mov
loopne
sbb
hlt
jge
jo
inc
pusha
inc
xor
test
sbb
mov
in
data16
inc
aas
xor
notl
push
cmp
int
iret
sbb
aam
dec
and
pusha
xchg
and
mov
mov
jns
jg
insb
mov
hlt
jmp
xchg
inc
jno
adc
loope
out
inc
and
popa
jae
inc
ret
dec
jo
mov
lods
shl
sbb
fs
mov
inc
mov
or
mov
in
mov
out
icebp
dec
scas
mov
subb
mov
cmp
rcrb
mov
repnz
std
mov
insl
les
inc
aad
cwtl
mov
int
xorl
xchg
sub
es
push
mov
shlb
mov
lds
mov
mov
push
pop
sub
mov
and
into
xchg
xchg
push
or
je
into
cmp
mov
push
add
rcll
sub
movl
iret
lcall
lret
sub
inc
xchg
add
pop
dec
or
xor
fsubrs
mov
inc
cmp
inc
jns
add
xchg
dec
data16
xor
or
fidivrs
mov
inc
stos
sbb
shl
leave
add
mov
insb
and
add
and
adc
dec
sti
xchg
dec
xor
mov
or
mov
mov
push
popa
pop
inc
cmp
jne
push
jl
push
mov
xchg
leave
xor
jbe
jl
pop
sub
fcoml
mov
imul
cltd
mov
jg
pop
ds
dec
sbb
xchg
and
int
inc
inc
cmpsl
ret
sahf
dec
xchg
and
xor
popa
push
mov
and
and
mov
cli
adc
fbstp
pop
or
das
xor
imul
lds
out
movsl
or
cli
insb
stos
inc
add
jmp
xor
pop
jecxz
xor
mov
jg
cli
mov
call
shrl
add
sbb
fmulp
mov
lods
fcompl
notl
jmp
dec
rcrl
out
test
xchg
cwtl
lods
pop
and
cmp
fildl
js
pop
add
mov
es
imul
repnz
lock
fimull
movsb
movsl
pop
outsl
lcall
sub
iret
movq
sti
dec
dec
sahf
bound
sbb
rol
pop
fwait
push
stc
mov
enter
cli
aaa
ret
into
xor
xchg
xor
xchg
mov
xchg
jbe
and
jns
roll
gs
xchg
jo
inc
pop
jbe
pop
cs
mov
in
cmp
xchg
cmp
xorb
dec
push
adc
in
mov
call
cs
add
inc
sub
inc
xor
test
insb
js
rol
fisubrs
xor
xor
lret
sub
jbe
fistpl
scas
xor
lods
push
push
addr16
lcall
xor
fwait
popf
cli
shlb
mov
push
and
sbb
sbb
push
cmp
lds
pop
sub
mov
and
mov
push
sub
cmp
nop
mov
xchg
iret
lods
popf
xchg
push
movsl
cltd
lahf
adc
jne
mov
cs
cltd
xlat
aam
fsts
js
imul
push
ds
push
test
inc
jg
in
repz
in
cmp
in
and
push
jp
adc
add
addr16
insb
mov
lahf
jmp
inc
push
mov
dec
es
loope
in
clc
push
jge
cltd
fdivl
pop
sub
push
add
mov
fs
sub
sbb
daa
push
mov
mov
mov
cltd
dec
jp
or
jbe
inc
lods
push
and
mov
fs
add
lods
roll
ds
jnp
in
jle
push
dec
cmp
lcall
jne
xor
sbb
push
mov
dec
fdivrs
loop
jl
cmp
pop
pop
xchg
cld
adc
loop
sti
stc
out
xor
jg
pop
push
pop
or
ljmp
out
in
cli
add
rcl
repz
pop
addr16
out
cmpsl
push
adc
ljmp
mov
shrl
xlat
cmp
or
xor
sbb
mov
push
xor
adc
int
in
lcall
lock
aam
pop
dec
cmp
jmp
xchg
or
mov
jno
stos
scas
xlat
inc
fildl
xor
sub
adc
lods
xchg
subb
jle
bound
insb
dec
repnz
divl
mov
push
nop
mov
inc
jne
xchg
icebp
fisttpl
jo
mov
cs
cmpsl
rcrb
jb
pop
sbb
or
jle
shll
push
int
push
repz
fsubrl
ljmp
cmpsb
xchg
mov
rcll
push
push
mov
push
cmc
aam
cltd
inc
mov
mov
mov
test
jg
and
add
negl
cmc
in
into
push
add
pop
rorl
push
sbb
dec
adc
sbb
cmp
inc
jge
mov
call
pop
es
mov
adc
sub
mov
pop
ds
in
add
and
popf
mov
inc
sbb
and
in
and
sbb
xchg
pop
inc
jp
sub
test
out
dec
push
out
adc
mov
ret
sahf
cvtps2pd
in
repnz
inc
mov
outsb
lret
lds
xor
icebp
out
cmp
dec
jl
mov
or
xchg
outsb
inc
sub
mov
ror
jae
pop
test
dec
insb
xor
movsl
cwtl
aad
sub
jns
xchg
cltd
push
les
clc
mov
mov
jo
inc
xor
xor
pop
mov
mov
pop
incb
out
xor
inc
add
ret
and
iret
pop
xchg
sub
and
lret
inc
stos
xchg
sub
mov
dec
sbb
in
decl
pop
push
adc
rclb
jg
add
xor
mov
arpl
gs
jne
sub
dec
enter
testl
pop
ljmp
push
adc
dec
push
loop
movsl
or
sbb
xor
shl
std
sbbb
hlt
sub
sbb
sbb
daa
mov
divb
xchg
fidivrs
ljmp
mov
pop
out
roll
push
cmpsb
imul
dec
hlt
ret
jns
and
sbb
xchg
aas
stc
jl
push
jl
mov
mov
mov
sbb
imul
loop
sub
cmpsl
in
in
sub
into
out
push
fsubp
fidivrs
daa
jl
out
sbb
mov
nop
test
outsl
xchg
or
je
jnp
xor
clc
add
pop
jbe
mov
jecxz
jno
mov
hlt
test
lods
mov
outsb
dec
jl
lock
lret
sub
mov
xor
negl
mov
lcall
cwtl
inc
and
mov
ljmp
mov
xchg
or
popa
arpl
or
jo,pn
in
fsts
dec
loope
mov
testl
fs
movsb
popf
jl
xor
dec
or
shll
dec
xor
sub
xor
cltd
mov
adc
and
or
dec
bound
mov
cwtl
fmuls
ss
mov
adc
or
mov
or
mov
sub
jns
and
ljmp
mov
sub
or
dec
mov
test
mov
inc
mov
xchg
mov
or
enter
push
add
in
test
fstpl
mov
mov
subb
cmpsb
cmpsl
fisubrl
cmc
pop
push
jl
lods
fiaddl
aad
mov
mov
or
sub
push
pop
lods
sti
sbb
jge
cmp
jl
jb
pop
cmp
lea
lret
inc
out
adc
mov
sub
push
and
sahf
js
in
bound
enter
fistpll
imul
out
adc
movsb
mov
test
aas
pusha
lea
test
push
xlat
cmpsl
movb
call
pop
clc
mov
mov
jg
enter
rolb
flds
andb
imul
pop
lcall
sub
ror
jl
loop
js
fldl
scas
and
sub
sbbl
mov
je
mov
daa
lods
lcall
push
pop
jns
and
pusha
rcl
clc
jbe
mov
lea
add
mov
daa
push
sbb
inc
adc
xchg
pop
mov
pop
mov
push
xchg
gs
std
iret
rcrb
jae
test
xor
lcall
jmp
pusha
fsubrl
jl
and
push
xchg
inc
and
ret
push
sahf
frstor
pop
xlat
arpl
inc
xchg
out
adc
shll
rorl
outsl
mov
mov
inc
mov
loope
push
pop
mov
addr16
xchg
leave
push
push
inc
test
ljmp
jmp
cmpl
lahf
lcall
insl
xor
insb
mull
and
pushf
pushf
xor
push
push
mov
ljmp
lods
pop
out
push
scas
lahf
mov
push
stos
test
scas
scas
xchg
sbb
cmp
jecxz
inc
mov
repz
fxch
popf
mov
jb
andb
cmp
inc
int3
mov
xchg
pop
add
pop
fnstenv
sbb
jnp
les
push
push
pop
inc
jnp
mov
jmp
cld
fwait
sub
fs
fldcw
in
sub
loope
int
int
cwtl
inc
iret
pop
push
and
mov
mov
ret
jno
cmp
mov
ja
ljmp
adc
icebp
mov
into
mov
adcb
mov
fs
mov
aaa
fs
and
imul
push
inc
xchg
sub
fimull
sti
ret
dec
xchg
mov
xor
ja
lcall
pop
cltd
movsl
fnstcw
inc
insl
and
pop
jl
addr16
inc
cmp
popa
ljmp
mov
mov
cltd
lds
mov
lods
mov
fimuls
outsb
ficoml
loope
dec
xchg
jne
adc
inc
in
mov
pop
mov
movsb
das
push
add
adc
fbld
mov
adc
sbb
lcall
into
cli
addl
insb
es
and
movsl
lret
insl
ret
xor
int3
mov
lahf
and
xor
xor
and
aas
sahf
fisubrl
pop
addr16
repnz
push
mov
cmp
addr16
cli
fnsave
xor
es
dec
sahf
mov
pop
push
jns
mov
mov
outsl
push
into
rorl
cmp
lods
in
pop
mov
gs
insl
jne
xchg
xchg
and
cmpl
sbb
call
adc
lods
dec
das
dec
cmpb
pop
and
adcl
and
jae
pop
aam
outsb
das
fwait
jae
lret
arpl
lods
pop
pop
rcrl
mov
decl
sbb
pushf
add
push
push
ret
push
mov
sub
shlb
push
lods
xchg
add
loope
fistps
popf
filds
mov
cmp
jle
and
add
outsb
sbb
inc
out
push
push
in
les
sub
sti
sbb
jge
fmuls
xchg
jne
nop
ja
aaa
mov
cmp
sbb
inc
daa
mov
jg
std
xor
lahf
hlt
imul
ds
mov
cmp
push
aam
mov
pop
bound
cmpl
arpl
xor
adc
testl
addr16
push
das
mov
add
lahf
leave
test
lcall
out
fisttpl
dec
mov
ret
ficoml
pusha
inc
test
jo
push
inc
int3
fcmovb
pop
fs
aam
es
add
fsts
rorl
push
or
into
sub
pop
js
add
inc
xor
in
mov
sbb
sbb
leave
ret
inc
data16
jns
lock
sbb
add
or
orb
out
xchg
inc
aaa
xor
adc
pop
pop
pop
cvtpi2ps
sub
push
mov
in
or
lods
push
sbb
pusha
cwtl
rorl
call
pop
insb
pusha
aad
fs
scas
sub
jecxz
cmp
cmpsl
jno
xchg
aaa
mov
and
pop
out
sti
push
xor
pusha
pop
popf
push
and
insb
cmp
pusha
ja
jecxz
mov
jo
je
cld
sbb
mov
xchg
stos
addr16
lcall
xchg
cmp
jge
mov
xchg
sbb
push
pushf
mov
inc
out
call
lret
test
scas
inc
repz
mov
pop
shr
pop
shrb
pop
or
mov
outsb
shr
dec
and
ret
inc
fnstsw
xlat
or
iret
xchg
fwait
mov
pop
stos
sahf
mov
and
mov
mov
or
cmp
and
dec
aas
dec
jle
lret
jns
out
sub
jg
dec
dec
xlat
mov
shr
aam
repnz
sbb
pushf
pop
inc
fwait
lds
push
inc
push
adc
add
imul
jmp
mov
dec
adc
jo
mov
mov
or
push
inc
cmc
push
scas
ja
hlt
lahf
pop
nop
mov
and
jne
sub
pop
add
fdiv
pop
stos
cmp
cmp
aam
push
mov
fsubrs
jns
pop
pop
pop
and
leave
rcrl
mov
je
sbb
lods
bound
dec
shl
outsl
movsb
outsb
rep
sbb
sub
jb
int
cmp
scas
sub
mov
pusha
mov
cmpl
sbb
int3
in
sbb
add
lret
jp
shll
inc
dec
inc
ljmp
fidivrl
fistl
jb
mov
and
pop
cwtl
aaa
sbb
mov
aam
push
leave
sub
pusha
cli
stos
nop
pop
mov
mov
mov
inc
lret
and
jo
jle
int3
jp
push
cs
aas
icebp
aad
cmp
aas
adc
fnsave
sub
lds
xor
jbe
dec
lahf
lock
mov
and
mov
scas
lock
dec
lahf
push
jae
fisttps
mov
mov
add
fistpll
insl
cwtl
mov
mov
loopne
push
popa
aas
xchg
insl
jecxz
popa
mov
mov
jg
pop
out
out
mov
pop
iret
lea
repz
pop
sbb
xchg
into
daa
pop
mov
adc
push
mov
outsl
fwait
arpl
dec
cltd
cmp
decb
push
iret
jns
sbb
icebp
dec
mov
xlat
pop
inc
pop
jp
jb
cli
fmull
mov
lods
test
data16
jmp
imul
sahf
sub
push
icebp
xor
daa
jge
jns
jg
iret
cld
test
adc
mov
movsb
loope
or
jne
fdivl
dec
je
sbb
repz
cmp
add
js
js
mov
incl
movsb
daa
sti
push
pushf
and
das
mov
stos
cmp
clc
loop
stos
mov
adc
and
push
xchg
test
cmp
gs
jbe
call
in
or
adc
push
sub
repz
mov
loopne
or
fsubrs
sub
dec
mov
out
jmp
and
fistpll
or
gs
lret
popf
dec
pop
push
inc
ds
fmuls
xchg
mov
lcall
pop
xor
adc
mov
push
push
pop
outsl
jmp
mov
push
in
xchg
orb
sub
sbb
lods
aam
pop
fs
mov
xchg
shll
cwtl
dec
testb
jp
jge
lret
sub
fcomps
jle
inc
adc
jnp
push
mov
and
test
insl
scas
pmaddwd
das
xchg
or
insb
adc
cmpsl
pop
xchg
xor
pop
lcall
mov
dec
lds
popa
push
push
cmp
or
sub
dec
xchg
test
movsb
sbb
insl
mov
arpl
stc
jge
test
outsb
xor
mov
sub
and
push
cmpb
sbb
cwtl
add
push
or
das
pop
pop
subl
cmp
mov
inc
mov
loopne
fdiv
filds
insl
mov
push
pop
jl
dec
xchg
xchg
jmp
fildl
aam
push
fcompl
fisttps
repz
int
pop
sub
sbb
cmp
cs
adc
xchg
daa
pop
int
xchg
push
jle
push
push
xchg
push
test
sbb
mov
mov
xor
cmp
lahf
cmp
sub
in
pop
popa
xchg
jle
ss
push
mov
and
cmp
jo
lret
mov
sub
xor
adc
pop
xchg
test
or
stc
orl
dec
or
rep
leave
shl
test
aam
std
out
hlt
js
ret
jno
push
sbb
xor
test
in
popf
mov
out
add
inc
or
sub
dec
pop
push
and
test
ljmp
fdivr
adc
jno
mov
loopne
jae
jnp
in
xchg
jbe
push
jbe
jp
imul
sbb
sub
or
add
jl
jl
mov
push
data16
cmp
sbb
push
jmp
repnz
loop
push
dec
js
popf
push
repnz
pop
mov
push
subl
enter
repnz
cmp
jmp
scas
dec
xchg
in
cld
test
jp
loopne
movsl
std
cmp
sbb
das
pop
pop
divb
pop
or
inc
mov
fstl
movsl
pop
mov
fcompl
jge
fisubrs
nop
push
and
lret
insb
fidivs
aam
cmpsb
xchg
addr16
stos
arpl
xchg
movb
jecxz
jnp
jmp
in
popf
shlb
push
mov
jmp
mov
jl
loope
stos
xor
into
lret
mov
jmp
dec
adc
aaa
push
cmpsl
xchg
loopne
into
or
pop
cmp
sub
subb
dec
mov
inc
push
clc
push
mov
movsl
mov
into
cmpl
jno
jge
leave
into
xchg
sub
mov
xor
cs
insb
adc
leave
popf
pop
test
add
inc
shlb
je,pt
bswap
icebp
inc
xchg
mov
mov
rorb
addr16
jae
or
add
aas
pop
sub
mov
cmp
aad
dec
fsts
xchg
in
hlt
xchg
xchg
aas
sbb
or
mov
sub
jmp
mov
sub
js
jno
int3
stos
mov
and
rorb
in
and
popa
inc
ret
stos
xlat
push
cmpsl
mov
rclb
jecxz
and
ja
cmp
xlat
mov
jle
mov
les
push
adc
push
and
jae
pop
popa
test
insb
sbb
lret
add
mov
sti
and
pop
cmp
pop
inc
decb
pop
cmp
push
cmpsl
lcall
sub
and
pop
push
or
bound
inc
and
lods
cmpsl
pushf
sbb
add
xchg
cltd
out
push
ret
aad
pop
mov
mov
hlt
sbbl
in
dec
inc
sub
xor
stos
fdivl
and
jl
adc
aam
dec
ja
outsb
aad
xchg
and
cmp
mov
lret
mov
aam
out
imul
loopne
daa
fcoms
pop
or
pop
and
jg
sub
push
dec
jnp
push
mov
movsl
sbb
sahf
adcb
lcall
sbbb
mov
cld
mov
addr16
push
cmp
pop
ret
add
test
dec
cs
jle
cs
cmc
push
maskmovq
insl
inc
outsl
jmp
add
mov
xchg
push
pop
pop
sub
push
in
negb
fisttps
pop
stc
adc
icebp
xor
and
adc
dec
test
nop
dec
sub
and
loop
ds
mov
mov
jmp
jno
sbb
shr
lret
popf
sbb
test
cmp
div
mov
cmc
popa
std
push
cmc
jl
ja
sarb
push
faddp
mov
jo
sti
out
sub
add
and
dec
aam
lods
jl
inc
std
test
leave
movsb
jne
out
sub
fdivrs
pop
mov
inc
daa
mov
cmp
icebp
push
mov
hlt
inc
cwtl
fstpt
std
loope
lea
inc
scas
mov
xchg
push
in
inc
jmp
push
inc
aam
orl
adc
mov
add
mov
or
mov
sbb
sbb
pushf
das
or
or
mov
dec
push
out
movsb
jae
bound
dec
jp
fdivs
cmp
movsb
xor
jne
dec
push
or
jb
popf
dec
xchg
adc
gs
push
or
mov
xor
mov
out
insb
jnp
inc
cld
ss
inc
cli
fiadds
ret
mov
adc
lods
es
nop
pop
inc
xchg
addr16
xor
test
iret
outsb
xor
dec
popa
push
sub
and
cmp
pop
in
mov
push
mov
out
dec
test
nop
push
inc
dec
or
dec
and
aam
ss
xchg
adc
jnp
cld
fldenv
es
fsubrl
push
sarl
mov
hlt
fnstsw
pop
jl
mov
inc
or
lods
lret
pop
movsb
push
sbb
popf
sbb
mov
xchg
inc
push
xchg
loopne
fstl
push
mov
in
test
test
imul
xchg
loop
in
xchg
dec
xchg
ret
sarl
in
in
add
imul
rorb
push
jmp
add
shlb
ss
mov
mov
or
sahf
fwait
ss
nop
repnz
jp
xchg
outsl
xor
dec
fsubrs
js
mov
mov
dec
mov
lcall
ret
out
add
daa
int3
aas
xor
jmp
or
leave
push
lcall
sub
imul
push
add
xchg
fildl
or
cld
mov
adc
fstl
xlat
inc
cltd
push
xor
fmuls
dec
add
sbb
mov
popf
inc
leave
mov
mov
xchg
pop
xor
push
ja
test
cwtl
inc
mov
or
cmp
repz
sbb
mov
test
or
jno
sub
sbb
sbb
pop
jo
fsubrs
cld
mov
sub
xlat
jo
mov
popa
addr16
aaa
nop
sub
cmpsb
and
push
je
inc
call
popf
mov
fldenv
icebp
pop
dec
mov
or
aad
outsl
mov
lock
dec
cmp
mov
add
mov
movsl
test
fmull
xchg
fs
lret
mov
jno
cmp
xchg
mov
scas
xchg
lcall
push
rolb
xor
ret
stos
fdivs
jne
sar
mov
std
pushf
xchg
mov
loopne
mov
mov
pop
cmp
cmpl
push
mov
jbe
add
xchg
mov
test
lock
inc
xchg
xor
add
ds
adc
ret
stos
mov
outsl
int
and
add
and
jno
inc
ds
xchg
negl
les
xor
push
sub
pop
push
repnz
push
mov
xchg
mov
iret
loope
fsubrl
pop
sub
fprem1
cmp
mov
lods
inc
add
xchg
in
inc
mov
jns
push
or
ret
clc
dec
cmpsb
pop
fisubl
mov
cmpsl
xchg
and
add
fbld
stos
mov
xor
dec
inc
imul
or
or
mov
push
arpl
jb
lahf
mov
das
repnz
leave
dec
mov
pushf
iret
fst
shll
aaa
sbb
adc
scas
xchg
out
jge
fs
aas
jo
xchg
jg
cmp
mov
cmp
xor
jns
in
jne
test
jne
inc
sbb
xchg
mov
mov
popf
int3
sub
adc
sbb
cmp
or
cltd
mov
out
xor
dec
test
jecxz
push
jno
aad
inc
mov
add
rorb
pushf
push
adc
inc
stc
cmp
cmp
cmp
pop
popf
test
jg
xlat
mov
sarl
dec
or
filds
cltd
jne
addb
stos
push
pop
or
fsubs
rolb
outsb
es
and
fstl
sub
mov
and
pop
cmp
icebp
cltd
xchg
sub
out
add
add
xor
xchg
jno
movsl
fwait
lock
xor
rcll
imul
mov
mov
dec
cltd
dec
pop
rorl
lcall
pop
lret
filds
fsubrl
sti
sub
mov
out
adc
or
cmp
cmp
or
fiadds
pop
mov
mov
push
cltd
sbb
xchg
cmpsb
fdiv
inc
dec
clc
xchg
lahf
fs
inc
mov
xor
arpl
shll
shll
idiv
push
adc
pop
or
arpl
ror
stos
out
test
shrb
jno
out
jle
fisttpll
push
mov
jne
jecxz
mov
je
cmp
cmp
jg
stc
jb
and
bound
cwtl
sbb
std
popa
movsl
repnz
xor
xchg
insl
xchg
add
les
fsubs
daa
jg
into
xchg
jle
jecxz
mov
enter
hlt
aaa
xor
test
in
or
pop
push
cmp
inc
scas
sbb
test
mov
in
or
xchg
adc
out
daa
test
mov
and
push
ror
lret
xchg
data16
xchg
mov
mov
flds
jp
sbb
fwait
or
jl
or
les
pop
out
and
jmp
ret
mov
hlt
mov
jns
jno
lret
cwtl
jg
or
mov
shl
mov
icebp
dec
mov
xorb
setns
inc
dec
push
mov
stos
stos
push
in
psadbw
pushf
movsl
cli
subl
ja
in
lock
loop
js
pop
jns
push
xchg
push
and
xchg
aaa
out
push
mull
daa
inc
inc
mov
shll
imul
imul
sbb
jecxz
push
das
out
in
aas
mov
mov
out
cmpsb
sub
ljmp
or
mov
ljmp
push
inc
loope
divl
andb
push
jmp
and
ret
stos
scas
add
lcall
movsl
pop
dec
mov
sub
push
icebp
pop
mov
or
loop
mov
jo
icebp
shrb
rcr
out
mov
mov
xchg
out
shll
dec
incb
sub
jl
outsb
cld
lods
and
adc
mov
pop
adcl
fs
mov
lods
and
stc
push
lcall
test
fdivrl
dec
add
push
xor
pop
clc
mov
add
cwtl
add
into
ret
push
out
int
cmp
loop
mov
inc
mov
pushf
pop
add
mov
sbb
punpckhbw
xorl
pushl
and
movl
clc
push
mov
sub
adc
add
pop
sbb
mov
test
mov
or
loopne
jns
rcrb
push
mov
repz
mov
inc
sbb
loop
jnp
mov
in
jnp
and
pop
mov
mov
push
mov
insb
push
mov
fcom
sub
xchg
ss
std
or
mov
add
leave
adcl
xor
xchg
sahf
daa
xor
push
stos
jo
gs
std
stos
test
xor
ljmp
xchg
int3
filds
mov
std
fs
jne
mov
jp
cmp
push
addb
cli
lods
cwtl
jl
jecxz
mov
cwtl
pop
mov
lretw
rep
pop
cmp
sti
dec
mulb
stc
repnz
adc
ret
inc
push
es
enter
cmpsb
inc
mov
mov
insl
nop
out
add
mov
andl
push
out
sub
xchg
mov
aaa
mov
hlt
lret
pop
pop
push
jmp
pop
inc
scas
pop
ja
dec
ss
in
xor
pop
repz
mov
lret
imul
pusha
cmpl
imul
or
pop
ja
jmp
lret
inc
jmp
lds
xchg
or
push
lds
pop
pop
cmp
jnp
dec
add
sub
out
pop
xor
imul
sbb
jge
dec
push
pop
xchg
or
xchg
addb
sub
ljmp
faddp
push
xchg
les
lahf
xchg
jg
and
push
xor
or
xor
jecxz,pn
push
vpshufb
cs
aaa
js
or
mov
and
add
dec
into
lret
xor
lret
xchg
xor
pop
decb
dec
mov
push
push
sub
cmp
push
mov
jecxz
xchg
inc
clc
subl
insb
or
inc
lcall
mov
adc
lods
rol
cwtl
jne
push
outsb
and
lods
in
xor
roll
in
pop
dec
aam
and
test
cmp
jmp
mov
jp
mov
lea
out
outsl
jae
stos
dec
cmp
out
jo
add
lret
mov
data16
mov
xchg
scas
in
js
adc
and
dec
mov
imul
fcoml
jno
scas
in
sub
mov
push
std
aam
adc
lcall
mov
mov
sub
push
adcl
sbb
out
out
inc
lds
js
jnp
sbb
xor
sub
cmp
sub
sub
lods
ret
add
or
insb
pop
cmp
pop
cltd
fs
arpl
sahf
jo
dec
push
aam
dec
add
jl
add
adc
test
enter
jecxz
and
cld
cmp
sahf
shlb
aam
in
into
mov
and
movsb
pop
or
daa
out
js
mov
sub
push
cmp
and
out
add
aaa
push
mov
pop
or
stos
mov
je
stos
cmp
add
les
push
sub
int
ss
inc
sub
xchg
test
aas
jg
mov
cmp
imul
mov
int3
xlat
outsb
fdivr
orl
mov
int3
adc
flds
jecxz
or
loope
fbstp
orl
imul
fnstsw
cmp
iret
and
push
ja
sub
adc
dec
lahf
mov
into
mov
dec
and
testl
pusha
sbb
or
sbb
cmp
and
push
xchg
decb
add
fidivs
in
and
testl
pusha
inc
jl
stos
jae
cmp
scas
sbb
cmp
mov
cmc
fdivl
sbb
mov
mov
lcall
loopne
pop
cs
jnp
lret
loop
testl
scas
mov
loop
cmp
xchg
je
test
dec
sub
adc
ljmp
gs
es
lret
xor
stc
sbb
xchg
push
push
push
lea
lds
or
add
aad
add
adc
test
pop
inc
xchg
in
fs
sbb
push
jmp
dec
jg
orl
insl
lods
test
fdivrl
pop
xchg
lret
mov
es
push
mov
cmpsb
xchg
cmp
jp
push
mov
jb
fldt
and
out
rcll
cwtl
pop
xor
jno
fsubs
cmp
clc
and
in
lahf
sbb
adc
push
aaa
dec
js
and
mov
push
sbb
and
loop
jp
imul
mov
outsl
and
or
inc
xchg
js
push
in
daa
fidivrs
pop
cmpsl
in
dec
daa
fistps
mov
inc
sub
push
flds
jb
xor
xchg
mov
enter
outsl
movsl
add
sub
sbb
mov
fsubp
sub
ret
xchg
stos
mov
inc
adc
cmp
push
add
rclb
jne
ret
in
repnz
lock
dec
pop
cltd
xchg
and
cmpsl
push
add
xor
in
xlat
mov
pop
mov
std
mov
sbb
xlat
cmp
stos
enter
out
cmp
mov
hlt
sub
popf
inc
mov
mov
into
jo
mov
mov
fdivl
rcrl
dec
pop
leave
cmpb
jno
jbe
mov
in
inc
push
or
pop
xor
inc
xchg
dec
inc
and
pop
test
xor
or
sbb
fwait
int3
jo
pop
fldt
fcoml
inc
jo
mov
mov
jns
lods
movsl
xor
daa
sti
xchg
es
daa
pop
lahf
sahf
xor
mov
sti
cmp
add
mov
out
out
mov
lret
into
pop
mov
and
dec
test
mov
in
in
mov
iret
xchg
data16
js
xor
jecxz
inc
or
ja
or
cmp
repz
test
subb
xchg
xor
test
dec
jle
xchg
push
xor
xor
cld
inc
ret
loop
mov
mov
and
mov
pusha
xchg
lret
add
or
mov
fdivp
std
xor
push
pop
imul
hlt
adc
dec
iret
fs
addb
dec
mov
mov
mov
mov
cwtl
mov
bound
pushf
out
shl
cmp
lods
dec
repz
xchg
dec
sub
inc
mov
test
push
sub
pusha
mov
mov
pop
aad
mov
inc
stos
pop
and
xor
fs
cmpsl
lock
mov
scas
adc
ljmp
das
mov
mov
fwait
cmc
sbb
jne
cmp
pop
repz
push
dec
push
jmp
xlat
rolb
mov
sub
push
daa
xchg
push
push
cmp
ror
mov
fs
rcll
cld
sahf
cmp
test
mov
fmull
dec
dec
mov
lret
inc
inc
mov
fs
in
lahf
outsl
pop
xchg
cmp
popa
imul
stc
loopne
dec
push
dec
and
in
in
icebp
clc
xlat
aaa
cmp
mov
dec
mov
lea
push
leave
popf
loopne
cmp
popa
sub
loop
sub
call
pushf
das
adc
push
inc
in
pop
push
pusha
and
outsb
loope
mov
sub
sub
pop
cmp
ss
xor
es
sarl
and
xchg
loopne
jecxz
fldenv
fimuls
mov
leave
cmp
into
fs
int3
loopne
clc
sub
sbb
cmpb
rolb
adc
or
fcomps
cmp
aas
adc
fists
aas
push
ljmp
xchg
push
mov
mov
add
shrb
adc
stos
mov
lcall
fisubs
fldt
mov
xchg
sub
stos
sbb
shll
sbb
pop
aas
test
jl
sbb
pop
in
mov
sub
sbb
out
pop
push
aas
pop
push
xchg
mov
sub
std
rol
push
or
xor
int3
das
aaa
arpl
lahf
les
dec
sbb
xchg
pushf
add
push
outsl
mov
imul
es
push
mov
mov
int
sub
jp
jle
sbb
sbb
push
pop
sti
lds
xchg
addr16
repz
xchg
fsubp
adc
fisubs
pop
shll
xor
jo
mov
jmp
push
pop
xor
mov
adc
lahf
jg
scas
push
add
mov
sbb
das
sub
in
repnz
mov
ljmp
xor
push
inc
mov
adc
dec
fldenv
aaa
mov
pop
mov
lcall
cli
aam
mov
inc
mov
pop
push
xchg
pop
inc
inc
jl
ret
push
gs
loop
mov
stc
pop
pop
packssdw
cmp
aaa
jno
daa
inc
push
outsb
sbb
cwtl
adc
mov
jb
inc
mov
mov
outsb
ficomps
mov
andb
sbb
jnp
xchg
cwtl
dec
lahf
in
mov
and
je
xor
sbb
rcl
roll
stos
mov
xchg
mov
lods
pop
cs
insl
ret
lea
pusha
mov
mov
scas
adc
push
loop
xchg
dec
or
push
jns
pop
sub
jg
pop
add
mov
outsl
aad
adc
test
xor
or
int
lods
mov
mov
push
pop
sub
dec
repnz
rolb
stc
pop
jp
loop
mov
mov
aad
in
adc
jp
sbb
xlat
cmp
cmpb
or
xchg
dec
push
lahf
xor
std
lods
clc
pop
insb
xchg
fbld
imull
stc
dec
jo
xlat
add
test
lock
daa
stos
push
outsl
and
iret
dec
dec
in
mov
leave
jmp
subb
jl
cmc
xchg
xchg
mov
jns
jns
jo
lock
ds
sub
inc
es
pusha
fisubrs
ror
adcb
pop
xchg
pop
or
jecxz
mov
inc
add
xchg
xchg
mov
in
xchg
pop
dec
lahf
jl
xchg
adc
ss
fldt
jp
jae
stos
and
push
mov
sub
gs
movsl
movl
pop
push
mov
sbb
push
aam
dec
ja
stos
mov
les
mov
xor
inc
imul
and
mov
mov
out
test
or
or
dec
test
pop
iret
pusha
jbe
cmp
sub
subl
fwait
das
and
mov
mov
jnp
pand
mov
imul
repnz
xchg
jle
xchg
push
loop
mov
mov
mov
mov
push
xchg
sarl
xchg
bound
jecxz
mov
adc
idivb
lcall
setl
rorb
sbb
rorb
stc
adc
push
in
xchg
adc
sbb
les
nop
into
add
call
cwtl
adc
dec
aam
adc
aam
or
sub
cs
sub
pushf
lahf
xchg
pop
fisttpl
jae
repnz
sahf
das
arpl
and
es
std
ss
aaa
orl
push
orl
push
lods
pop
sbb
shrb
adcl
jae
in
subl
push
ret
fisubl
and
sbb
aad
insl
or
jmp
lock
or
lcall
bsf
mov
das
mov
stos
sub
lea
or
push
jl
stos
rep
mov
sbb
mov
push
insb
push
sti
je
mov
cld
insl
dec
cltd
test
mov
inc
mov
adc
mov
or
push
mov
loopne
imul
xchg
pop
push
out
fwait
int3
mov
jae
push
push
add
cmc
roll
inc
out
rolb
mov
jg
addr16
bound
idivl
mov
push
data16
in
sbb
pusha
lea
mov
fwait
sbb
aas
adc
xchg
leave
fsubp
xchg
and
lea
or
inc
inc
popa
imul
data16
jge
lds
repnz
pop
dec
in
or
cli
dec
pop
or
gs
or
es
aam
sub
mov
nop
xlat
ret
lds
pushf
aad
cwtl
cltd
or
aad
dec
dec
out
insl
les
mov
mov
xchg
pop
fstpt
cmp
lcall
daa
lock
or
lret
mov
or
rorl
int3
stc
pop
cmp
push
dec
mov
out
xor
loope
xchg
loop
sbb
mov
xchg
lea
or
loopne
dec
and
xchg
dec
sti
out
push
movsb
sub
movsb
test
pop
mov
incb
ret
js
dec
outsb
mov
push
mov
lock
outsb
pop
jnp
or
push
push
das
arpl
imul
cmp
lds
mov
in
mov
add
cmp
xchg
mov
into
xchg
ss
mov
xlat
mov
dec
and
xchg
getsec
movsb
outsb
inc
jl,pn
jmp
push
jle
mov
add
sub
add
gs
mov
loopne
lahf
out
mov
jb
jne
ja
aad
push
leave
mov
mov
repnz
jo
xchg
lds
or
sahf
pop
dec
sub
popf
scas
mov
out
fcomip
leave
push
repnz
test
dec
xchg
les
repnz
loope
ja
mov
pusha
ja
add
sub
stos
pop
mov
jae
mov
xorb
jo
gs
insb
pop
pusha
and
mov
iret
add
push
and
and
faddl
outsl
xor
stos
sub
mov
test
add
das
dec
loop
inc
adc
jne
fwait
sahf
leave
jecxz
fs
mov
enter
test
dec
cmp
xor
inc
and
lahf
and
cmp
pop
fists
mov
mov
ss
fsub
shlb
cmpb
pop
adc
xchg
jne
aad
xor
test
lods
or
fisubs
pop
sbb
aam
or
jo
sbb
insb
popa
xor
dec
jno
or
into
lea
mov
pop
out
mov
cmp
stos
dec
in
gs
jns
cs
daa
testb
orl
aas
js
sbb
sub
scas
xor
xchg
call
lret
sti
fstps
xchg
mov
cs
das
xor
push
flds
popa
bound
xlat
imul
xor
push
ret
lock
and
pusha
pop
and
push
cmpsl
outsl
mov
mov
hlt
mov
push
out
dec
clc
ret
or
fwait
bound
push
push
mov
pop
test
push
mov
call
insl
mov
shl
lock
dec
xor
and
xor
adc
cltd
fxch
adcl
mov
dec
adc
xchg
jge
in
das
inc
cwtl
pop
inc
loope
jno
add
mov
insl
lods
pop
nop
stos
push
add
aaa
jne
push
shl
stc
rclb
das
pop
mov
nop
daa
es
ss
sub
and
lock
push
loope
out
fisubrs
xchg
mov
fiadds
dec
push
sub
jecxz
sbb
jmp
mov
xor
aad
pop
mov
sub
xchg
adc
out
cmp
push
jnp
add
jmp
fldt
mov
lret
mov
mov
daa
adc
xchg
into
ss
or
mov
adc
loope
xchg
jbe
sbb
test
cmp
mov
jbe
dec
push
sbb
sti
sbb
and
movsl
pop
test
xchg
ja
cs
sti
adc
out
sub
out
dec
jg
iret
inc
les
jl
sbb
cmp
add
jg
mov
out
insb
jecxz
inc
std
out
negb
cli
dec
add
pop
cmp
add
rcrb
adc
or
sbbl
pop
push
bound
cmp
shrl
shll
mov
inc
lahf
xchg
xchg
inc
arpl
bound
inc
movsl
adc
cltd
add
xchg
shlb
outsb
sbb
ljmp
cmp
lret
inc
cmp
ss
in
loope
fsubp
pop
addb
arpl
fcomps
ret
fdivr
ucomiss
leave
jecxz
adc
and
inc
insb
sbb
ret
sub
and
mov
adc
iret
cmp
scas
inc
cmp
int
cmp
dec
lret
sub
pop
mov
lds
pop
cli
stos
and
cwtl
xor
loop
add
and
sub
outsl
mov
movsl
push
sbb
sub
out
jg
cwtl
cli
pop
jmp
popa
dec
shrl
dec
lahf
xchg
int3
out
xchg
es
cmp
sub
mov
lods
ret
adc
jle
ret
ljmp
ja
std
adcb
lcall
jne
andl
inc
pop
lret
add
mov
je
lret
insb
push
mov
xchg
pop
popa
lods
dec
jmp
inc
rorb
push
int
fisubs
mov
daa
push
push
inc
jmp
add
mov
jp
xor
mov
adc
notl
ret
int3
xchg
fidivs
psadbw
je
addr16
pop
loop
lret
xor
pop
ljmp
inc
pop
sbb
adc
dec
je
xor
xor
mov
das
es
mov
inc
clc
je
xor
mov
lret
jl
mov
and
and
ljmp
dec
sub
add
push
pop
imul
imul
js
dec
bound
in
sbb
xor
dec
pop
jg
or
ja
pop
push
mov
in
sbb
push
pop
and
out
mov
or
fs
sbbb
jmp
pushf
arpl
mov
fs
inc
stos
jl
jecxz
xor
jns,pn
roll
data16
out
lods
inc
jb
jg
push
and
pop
aam
push
jmp
mov
fwait
push
cli
fs
push
cld
movsl
cmp
sbb
fadds
sbb
daa
or
xor
ja
leave
sahf
inc
fisubs
xor
xchg
ljmp
push
adc
in
push
hlt
pushf
dec
sub
shl
lret
bound
dec
xor
mov
add
xchg
movb
daa
adc
fucomp
imul
test
adc
js
out
stos
ret
xor
xchg
jns
mov
jp
cld
dec
movq
pusha
xlat
sub
fsubrs
sbb
pop
imul
add
inc
call
out
mov
jmp
fimuls
cmpsb
xchg
mov
lods
loop
scas
mov
fsubrs
mov
arpl
inc
faddp
mov
cmpsl
ret
jne
inc
movsl
les
outsb
mov
add
cmp
orl
fimull
inc
pop
mov
cmp
aas
pop
jne
pop
adc
add
xchg
cmc
pop
jmp
jns
mov
imull
xchg
pusha
dec
fildll
in
dec
leave
add
and
adc
dec
xor
sbb
repnz
daa
mov
pusha
stos
mov
push
jmp
pop
inc
shrb
jg
dec
hlt
fisubrl
repnz
pop
inc
or
inc
insb
test
sbb
aaa
subb
mov
rcl
mov
lods
out
and
and
lods
loopne
pop
in
rcr
jo
dec
arpl
push
cltd
pop
rclb
push
push
ret
cli
jae
xchg
adcl
std
dec
imul
push
in
mov
push
out
lea
js
xor
and
mov
xchg
adc
dec
add
in
scas
aad
inc
int
mov
dec
sahf
inc
xor
icebp
inc
mov
mov
ficoml
hlt
sub
pop
jp
lahf
xor
popf
sub
daa
in
shrb
dec
outsl
mov
cmp
inc
das
mov
les
subl
dec
negl
mov
icebp
shll
sub
cmc
pusha
mov
xorl
adc
sub
daa
ja
cld
or
mov
xor
dec
mov
sub
fsts
jb
xor
and
xchg
bound
jo
or
pop
test
dec
jno
inc
xor
jo
cld
mov
in
jne
sbb
mov
jecxz
inc
mov
jmp
dec
divl
orl
mov
inc
lcall
pop
and
xor
mov
insb
sbb
sbb
mul
fisttpl
mov
sarl
imull
jl
sbb
dec
out
mov
scas
aas
mov
xchg
xor
mov
mov
push
xchg
or
inc
adc
inc
pop
mov
cmp
lock
mov
dec
xchg
loopne
pop
dec
icebp
jp
stc
test
stc
xor
xchg
jbe
and
add
xchg
jecxz
ret
and
adc
inc
nop
xor
xor
aam
es
or
leave
insb
push
enter
and
push
lods
pop
xor
adc
push
adc
pop
clc
icebp
das
fsubl
push
pop
pop
or
in
enter
jbe
push
adc
jge
add
sub
jae
adc
jl
cli
fmull
das
popa
xlat
xlat
rorl
insb
dec
sarl
mov
cmp
repz
adc
xchg
js
enter
loop
sahf
fdivs
lret
pop
inc
clc
lods
jns
and
fadds
mov
pop
test
lock
and
mov
or
cmp
mov
or
in
pushf
dec
test
rcl
insl
add
jns
jmp
nop
cmp
into
idivl
in
xchg
in
ja
lret
loope
fldcw
stc
sbb
mov
mov
outsb
push
pop
lea
xchg
add
inc
out
daa
add
repz
out
xor
iret
xor
cmpsl
mov
movsb
and
jno
mov
jmp
mov
cmp
or
imul
orb
mov
cmpsl
cmpb
es
mov
adc
arpl
ja
push
push
mov
insb
push
jle
int3
ja
je
jl
outsb
mov
int
mov
fwait
mov
xchg
pusha
into
push
ret
mov
pop
sbb
outsb
pop
adc
in
cmpsl
mov
sahf
dec
repnz
adc
mov
cli
sbb
inc
xor
adc
add
xchg
push
cmp
and
push
jb
dec
xchg
cmpb
sub
and
test
sbb
dec
test
sbb
pop
icebp
pushf
xchg
jnp
out
in
or
std
fucomp
iret
pop
adc
xor
dec
inc
fistl
cs
ds
xchg
and
push
fisttpll
inc
lcall
pop
lds
das
repz
lea
add
pushf
mov
arpl
insl
mov
dec
hlt
mov
adc
pop
testl
scas
xchg
pushf
das
xchg
stos
adc
pop
in
and
add
jbe
jl
add
or
fadds
pop
mov
push
bound
lret
movsb
adc
imul
scas
shrb
fnstsw
add
test
sub
dec
xchg
mov
xor
or
clc
shll
push
xorl
or
jb
mov
mov
int
sub
repnz
cmp
cwtl
out
test
adc
push
nop
mov
jbe
bound
lods
outsl
cmp
flds
xor
repnz
int3
xchg
add
sub
pop
xlat
out
fisubrl
mov
jge
decb
adc
pop
lds
test
shlb
add
mov
in
push
mov
test
repnz
fldcw
call
cmp
movsl
add
stos
stos
jb
pusha
shll
and
stos
mov
xchg
aas
clc
dec
push
fisubs
popf
movsb
xor
jb
pop
push
cli
hlt
jns
mov
push
pop
xchg
adc
iret
fwait
or
add
fdivrl
lahf
xchg
pop
mov
mov
imul
loop
mov
or
aas
mov
inc
jbe
or
pop
sub
and
ror
mov
mov
js
in
dec
push
xor
gs
or
lods
pop
pop
adc
ja
out
sub
insb
lods
sti
es
xchg
adc
sbb
stc
mov
mov
lahf
cli
sarb
popa
leave
xchg
jp
jns
lcall
lret
daa
mov
pop
dec
pop
cld
mov
out
or
rcrb
dec
iret
and
jb
gs
lock
push
jno
stos
notb
push
rcll
pop
mov
mov
lock
ja
inc
loop
add
je
fmulp
loope
loope
cmp
rcrl
arpl
sahf
and
stos
push
pop
out
wbinvd
mov
mov
mov
xchg
scas
xor
sub
cld
ja
es
test
ret
popf
out
ss
fidivrl
jle
arpl
sbb
mov
fidivrs
and
mov
test
data16
clc
lea
mov
lds
les
aas
adc
dec
jle
inc
int
cs
adc
jo
pop
mov
daa
cmpsl
jl
gs
lods
daa
sub
ret
pushf
jge
in
pop
jl
cwtl
dec
dec
pusha
push
mov
ret
cmc
mov
mov
pop
jno
inc
fimull
in
push
ret
adc
push
test
cmp
or
adc
and
ficoml
and
push
jbe
call
loope
lds
hlt
mov
mov
mov
adc
jmp
jle
lret
adc
cmp
push
fwait
punpckldq
pusha
loopne
fcomp
orb
orl
pop
pop
and
clc
mov
add
mov
or
idivb
jp
xchg
or
push
ficoms
sbb
or
cmc
movsb
and
adc
loope
jns
mov
jle
stos
mov
dec
push
lahf
loop
cmp
sub
jb
dec
sub
pop
shlb
dec
iret
lahf
pop
shlb
iret
hlt
leave
or
pop
shr
cld
push
cmp
mov
jb
cltd
and
pop
jne
pop
lods
adc
hlt
mov
and
jecxz
cmp
dec
sub
in
push
mov
sbb
mov
jnp
add
and
iret
test
pop
jae
inc
sti
lods
mov
add
sbb
sbb
mov
out
shlb
adc
in
ss
sahf
stc
jge
mov
ret
mulb
lcall
repz
mov
outsl
push
push
cmp
testb
mov
jl
dec
xlat
or
rorl
inc
pop
cld
and
pop
add
test
shll
hlt
xchg
jae
cwtl
and
jno
rcl
iret
rcr
pop
test
test
scas
sub
leave
mov
push
jbe
outsl
lret
outsb
aad
roll
mov
das
xor
ds
jb
add
mov
jb
inc
mov
sar
push
mov
and
push
icebp
inc
push
testb
test
dec
out
rorb
das
dec
fwait
cmp
push
fnstsw
pop
sbb
cmc
jge
pop
cmpsl
xchg
xchg
incl
jmp
das
or
and
jecxz
push
sub
pop
sub
and
dec
test
push
sub
pusha
cmpsl
inc
andl
and
lret
sub
xchg
fistpll
repnz
sub
in
mov
inc
cmpsb
sbb
pop
test
adc
pop
aad
outsl
xchg
sbb
mov
pop
lret
das
push
add
cwtl
adc
test
icebp
lret
cmpsl
adc
jb
sbb
push
mov
lret
mov
jg
inc
adc
and
mov
xchg
pop
loop
jbe
xor
movsl
pop
cmpsl
fildll
sub
loope
ret
notl
add
out
outsb
add
out
xor
je
cmp
decb
jg
lock
test
test
outsl
sub
inc
mov
mov
mov
repz
sbb
push
cmp
outsb
push
mov
int
mov
adc
push
add
test
bound
cld
jnp
mov
add
cmc
lcall
pop
les
pop
aaa
jno
mov
lods
in
adc
push
sub
jne
mov
lahf
cwtl
push
mov
mov
xchg
push
push
add
sub
ret
dec
gs
jp
jno
fwait
cli
dec
faddp
dec
push
cmc
dec
xchg
daa
cwtl
loopne
loop
jne
daa
mov
scas
xchg
add
popa
pop
in
ss
mov
sub
cli
ret
jecxz
sub
outsl
cmp
sbb
jo
adc
sbb
repz
sbb
mov
gs
cmpsl
jae
pop
push
push
xor
mov
movsl
bound
pop
rclb
sahf
and
bound
into
cmp
les
daa
lods
test
push
fwait
outsb
adc
les
xchg
push
stos
jo
push
push
jno
mov
mov
insb
jae
loop
das
and
sub
test
cmp
mov
stos
movsb
or
fisubrl
fisttps
lret
inc
in
gs
adc
sub
lahf
les
cmpsb
xchg
add
jbe
sti
lret
popa
addr16
sub
sbb
ja
push
movsb
filds
mov
xor
or
mov
mov
sbb
push
and
ss
lahf
inc
testl
popf
push
xchg
pop
std
mov
mov
ret
mov
mov
mov
jg
or
lret
jae
repnz
ret
call
loopne
add
xchg
int3
xor
push
cmp
jno
pop
mov
push
or
mov
and
jns
cli
pop
or
jo
jle
pop
cwtl
imul
in
and
arpl
inc
stos
xor
enter
mov
xor
aad
cltd
loopne
xor
call
mov
xor
push
dec
je
shlb
into
sbb
or
mov
dec
in
add
xchg
in
rcrb
scas
lahf
inc
lret
and
pop
inc
lds
hlt
push
rcrl
mov
pop
add
mov
clc
jge
mov
mov
and
jle
aam
sbb
mov
jg
jmp
je
lock
test
dec
and
fmulp
add
bound
subb
push
inc
sub
jne
insb
mov
dec
mov
iret
dec
repz
xchg
pop
rep
push
push
movsb
push
hlt
call
mov
cwtl
sahf
je
imul
in
insl
clc
jl
jae
dec
sbb
xor
push
mov
adc
mov
mov
sbb
mov
mov
jne
out
outsl
movsb
pop
stos
test
pusha
ja
je
scas
push
movsb
jne
adc
inc
jo
das
in
xchg
loopne
adc
dec
cli
push
mov
insb
fcmovnu
xchg
into
inc
out
lcall
ret
mov
mov
data16
add
in
mov
push
sub
sub
fcmovnb
insb
ja
insb
cmp
jo
mov
cmpsb
lret
or
fldl
enter
repz
push
dec
cmpsl
sub
dec
push
add
lods
iret
add
mov
ja
and
jp
mov
in
insb
xchg
insb
dec
cmp
or
mov
push
mov
es
repnz
sub
jl
inc
push
lcall
fs
cld
adc
inc
inc
imul
fcoms
sub
ljmp
movsb
jecxz
das
idivb
cmpsl
lods
inc
and
inc
xor
jbe
in
or
sub
icebp
repz
or
pop
add
sub
mov
push
sub
xlat
shl
cs
fdivs
dec
cmc
dec
sbbl
arpl
and
xchg
lret
inc
sti
popf
lock
mov
mov
push
cltd
das
aas
push
mov
lret
loope
or
inc
xlat
mov
mov
mov
add
pop
cltd
xor
mov
sub
insl
das
mov
ja
jo
imul
js
into
call
sbb
fs
mov
lods
lcall
xchg
lret
cmp
and
loopne
sbb
mov
pop
pop
push
cld
mov
pop
xchg
xor
in
mov
out
pop
stc
jo
and
add
jp
jae
inc
scas
out
mov
inc
mov
orl
in
shlb
inc
es
int
loopne
xchg
jl
xchg
pop
in
rolb
inc
cmp
leave
sub
in
bound
jnp
mov
fistps
shrb
pushf
in
xchg
or
js
or
pop
jns
sub
leave
push
mov
pop
cmp
sarb
push
dec
push
xchg
leave
fisttpl
repnz
out
jb
sub
jbe
jne
test
and
pop
scas
pusha
xchg
dec
push
repz
ja
ret
int3
add
shlw
test
lret
movsb
popf
cmp
and
in
dec
adcb
iret
or
mov
sub
div
test
cmp
fstl
cmp
or
xchg
mov
mov
adcb
fs
cmp
mov
outsb
jle
loop
mov
jmp
jmp
das
fnstenv
mov
sbb
push
dec
sub
mov
push
int3
jl
jbe
mov
sub
and
mov
mov
inc
add
cmp
out
jmp
aaa
test
pop
pop
repnz
fstp
outsb
mov
popf
or
call
gs
leave
in
ficompl
es
mov
out
fxch
cmp
mov
jl
jge
into
xlat
adc
cmpl
scas
xchg
mov
cwtl
shrb
shll
dec
cmpsb
xlat
or
adc
aas
hlt
es
cmp
into
loopne
jg
jno
pop
sub
int3
roll
ret
add
ret
stc
adc
fwait
scas
mov
hlt
cld
push
inc
lcall
add
test
add
loopne
cmp
jno
cltd
lret
repz
scas
cld
scas
mov
ja
mov
loop
shlb
dec
xor
les
shrl
rcrl
int3
shrb
test
imul
jp
dec
xchg
insb
in
cmp
enter
pop
shr
adc
pop
scas
pop
xlat
je
cmp
pop
sbb
add
pop
cmp
and
mov
xchg
movsb
aas
jo
call
pop
dec
pop
addb
flds
dec
dec
cltd
pop
jp
mov
add
adc
dec
jecxz
xchg
mov
xor
lods
dec
daa
outsl
cs
data16
inc
add
cltd
and
sahf
mov
add
fisubs
jp
rclb
loopne
or
mov
orb
pop
imul
inc
xchg
popf
adc
sub
sub
pusha
aaa
clc
mov
divl
jg
stos
std
mov
adc
arpl
in
insb
inc
dec
add
mov
in
push
cli
mov
push
hlt
jae
hlt
divb
divb
fstpl
pop
fsubl
lcall
ja
or
gs
xor
pop
aaa
push
bound
sbb
dec
cmp
maskmovq
divl
pop
insl
jns
mov
cmp
lock
add
jg
or
mov
mov
push
sbb
aad
popa
and
mov
inc
mov
dec
xchg
and
mov
push
roll
xchg
mov
jnp
fs
js
xchg
into
aad
jno
imul
leave
les
aad
mov
in
pop
movsl
add
es
stos
and
pusha
mov
lods
mov
sarl
lds
out
ror
mov
sbb
xor
addr16
ret
jmp
jge
bound
jb
idivb
rcrl
aam
lcall
cmpsl
xchg
sti
cmc
ja
pop
xchg
mov
enter
cmc
xor
add
cli
cmp
repnz
repz
pushw
lret
nop
cmp
sub
cmp
push
loope
mov
fs
lcall
mov
pusha
sub
or
pop
in
xchg
xchg
pop
mov
add
mov
lret
mov
outsb
int3
mov
pop
add
sbb
std
pop
mov
cmp
sbb
imul
pop
pop
test
bound
sbb
add
jo
pusha
pop
push
enter
stos
cmpl
push
jg
or
lret
out
sti
out
jne
out
sub
jecxz
cli
jns
mov
ja
dec
mov
movsl
test
pushf
cmp
mov
mov
in
inc
pushf
mov
cmp
into
jmp
inc
sbb
sub
jle
jg
enter
dec
inc
jne
int3
pop
roll
popf
std
fs
pop
cmp
xchg
pop
scas
sub
in
adc
xchg
lret
jne
inc
mov
xor
in
and
add
cmc
push
arpl
fmuls
inc
pusha
cmp
idivl
test
push
stos
out
scas
stos
cmc
lahf
cltd
pop
pop
sbb
ret
or
scas
aaa
dec
xor
inc
pop
xchg
cmp
xchg
jl
mov
or
test
xchg
js
mov
idiv
ss
sbb
ja
aad
testb
outsl
lds
xchg
mov
xor
mov
or
jp
and
xchg
mov
lcall
jge
mov
jl
mov
loopne
int
jnp
stos
mov
sbb
bound
test
mov
jbe
xor
mov
in
lahf
int3
imul
ds
and
sbb
out
dec
inc
mov
lds
or
test
stos
daa
daa
pusha
xor
xchg
mov
cmp
sub
sub
ljmp
pushf
shlb
leave
mov
mov
lret
dec
cmpb
es
xor
sbb
mov
inc
jnp
push
cmpsb
lret
dec
xor
lea
mov
jnp
clc
dec
stc
lock
pusha
inc
daa
rclb
cld
in
inc
xor
out
and
stos
mov
adc
in
xchg
call
les
cwtl
xlat
mov
int
mov
js
mov
xchg
movsl
ds
inc
int
and
sub
loope
adc
js
test
or
lods
mov
loopne
loope
subb
xchg
sub
lock
es
inc
mov
addr16
adc
mov
mov
jbe
xchg
clc
jno
daa
hlt
test
cmp
enter
cmpsb
loop
mov
lret
inc
lea
pop
fsubp
or
cmp
mov
xor
ds
pop
cmp
dec
sub
ljmp
test
xchg
test
push
sub
shr
movl
loop
sti
mov
mov
pushf
dec
js
sub
sub
inc
sbb
aam
sub
ret
jbe
xor
mov
mov
sbb
out
in
cld
in
clc
lock
iret
mov
nop
xlat
push
pop
ss
jne
dec
stos
ja
jge
pop
xchg
mov
ss
sbbl
aam
mov
mov
mov
nop
jno
add
or
adc
mov
jl
ja
xchg
dec
gs
push
xchg
cmpsb
sub
mov
add
fsub
ficoml
jne
outsl
xchg
negb
xchg
jecxz
and
shlb
int
or
out
pop
xchg
mov
sbb
mov
call
rcll
dec
add
leave
and
mov
sbb
or
loopne
inc
mov
push
sub
jnp
fsubrp
idivb
push
adc
std
and
mov
pop
cmp
jne
sbb
mov
jo
jbe
mov
cs
int
xor
out
inc
cmp
popf
cmp
inc
xchg
mov
jp
mov
inc
mov
sbb
jo
popf
mov
addr16
out
add
jp
push
jle
cmp
jl
test
lcall
in
mov
sub
xorb
ja
push
xor
add
xor
push
mov
mov
sti
aad
imul
insl
sahf
lret
mov
fistpl
push
dec
test
popf
sahf
je
push
or
pop
xor
cmp
push
inc
imul
dec
mov
xchg
out
mov
mov
fyl2xp1
aam
pop
lock
cmpsl
and
or
xor
pop
cmc
repnz
xlat
std
inc
aad
ret
sub
jmp
inc
lock
fstpt
test
cmpsl
stos
in
adc
shlb
stc
loope
inc
stos
and
push
cmp
addr16
in
or
call
jbe
aaa
dec
push
mov
lods
inc
rcr
dec
push
out
lock
into
and
mov
movsb
iret
mov
jmp
push
or
loop
inc
xchg
gs
fs
fwait
pop
mov
xchg
in
lcall
fiaddl
stc
je
mov
xchg
and
les
mov
leave
std
jmp
mov
pop
mov
stc
push
lods
insl
sahf
jp
popf
shlb
push
or
adc
mov
into
xchg
push
es
pop
mov
push
mov
stos
mov
jnp
and
xchg
out
xor
adc
adcb
push
sub
popa
movsb
shrb
mov
dec
nop
imul
jge
mov
xchg
jno
cwtl
stc
std
mov
dec
fs
xchg
icebp
out
cmpsb
in
iret
fadds
ret
xor
fwait
rol
cmp
and
pop
mov
ss
cmp
fsubl
fdivrs
push
pop
mov
ret
ret
mov
jl
bound
sti
mov
mov
and
in
lods
jno
stos
lcall
and
adc
inc
mov
mov
push
push
lods
mov
lds
mov
daa
jae
shl
fildl
in
dec
inc
mov
sub
xchg
push
sbb
scas
pusha
scas
cltd
add
sub
mov
push
cmpb
in
subl
mov
mov
ja
cwtl
xor
int3
ja
fcmovb
pop
mov
mov
add
pushf
push
pop
dec
xchg
stos
lods
lret
xor
aad
fcmovu
pop
mov
fisubrs
aas
mov
mov
cmpsl
inc
in
inc
stos
sbb
push
dec
mov
jbe
mov
push
mov
test
enter
lcall
shlb
mov
lods
or
mov
insl
add
hlt
push
mov
and
mov
mov
pop
mov
in
adc
pop
push
or
xchg
popf
into
mov
inc
loop
pop
gs
pop
daa
mov
add
dec
jge
mov
insl
xchg
cmp
lret
stos
inc
jae
gs
xlat
jb
or
mov
paddb
bound
inc
sub
or
jae
pushf
pop
inc
cltd
sub
std
jecxz
pop
push
or
rolb
sub
push
cmp
movsb
outsb
jg
lret
rcl
mov
pushf
aad
into
pop
add
divl
add
loop
jno
adc
xor
dec
push
xchg
daa
popf
hlt
outsl
adc
pop
xchg
push
cmc
add
xchg
popf
leave
dec
or
scas
shll
cli
call
cmp
mov
inc
iret
ljmp
add
lods
xchg
js
mov
and
mov
sbb
cli
mov
jg
adcl
or
mov
jae
repnz
fs
inc
xchg
es
mov
and
jns
es
movsl
lds
or
mov
adc
in
inc
and
xchg
mov
mov
orl
dec
or
movsl
ror
enter
stos
sub
sbb
and
lahf
inc
sub
mov
std
mov
push
test
jno
jmp
insb
sbb
ja
sbb
mov
sub
cmpsl
nop
sbb
into
stc
outsl
xor
stos
cmp
pop
add
and
push
in
cmp
dec
fiaddl
neg
push
and
insl
add
lcall
aad
xchg
stc
mov
scas
pop
loope
pop
pop
ret
sar
pop
aaa
stc
add
mov
jp
mov
fimull
push
mov
test
push
cmpsl
lret
outsl
out
sbb
loopne
fisubrs
arpl
adc
leave
daa
data16
xor
shl
and
cmp
ljmp
jo
cmpsb
mov
mov
jmp
rcrb
rclb
pop
mov
gs
subb
enter
sbb
pop
cwtl
xor
rcll
fmuls
jg
jmp
dec
push
and
mov
add
std
mov
sbb
mov
jno
jbe
hlt
pusha
or
xchg
loope
inc
mov
push
es
icebp
int
push
and
jne
adc
push
push
mov
inc
and
lahf
test
cltd
inc
mov
cltd
cmp
cld
add
in
popl
pop
arpl
mov
inc
aas
lret
mov
mov
mov
add
pop
xchg
rolb
fsts
sbb
cmpb
cmpsb
push
push
pushf
lods
push
jbe
lahf
mov
xchg
xchg
inc
sub
cltd
xchg
mov
inc
fcmovb
or
jns
and
jge
std
ret
jno
mov
xchg
mov
adc
clc
fsubr
cmp
ret
int
jecxz
dec
pop
aam
sbb
mov
cs
test
cmpsl
mov
inc
pusha
test
or
push
mov
push
int3
add
inc
movsl
mov
ret
xor
sub
mov
scas
mov
mov
sbb
dec
dec
adcb
and
dec
addr16
inc
xchg
sub
pop
inc
loopne
daa
jecxz
sbb
arpl
jmp
aam
push
ficompl
sub
out
mov
fwait
ret
adc
mov
in
cmp
out
sub
and
dec
sbb
and
add
in
bnd
insb
add
jne
sub
shlb
and
xor
fwait
adcl
rorb
sbb
push
add
imul
xchg
jns
fimull
adcl
xor
push
shlb
mov
mov
dec
pop
scas
rolb
test
and
fldl
sbb
out
cli
mov
stc
xor
mov
adc
movsb
pop
adc
jnp
pop
imul
mov
pop
lea
and
add
push
mov
mov
push
cwtl
pushf
xor
cmpl
mov
jne
jp
jp
xchg
pop
mov
insl
add
mov
rclb
out
jbe
or
movsb
outsb
mov
xor
imul
ja
mov
scas
xchg
mov
xchg
dec
popf
rcl
jo
adc
cmp
ljmp
test
mov
and
add
xchg
xor
sub
mov
xchg
dec
add
lcall
cmp
jg
inc
test
data16
sub
sbb
inc
in
cmp
push
inc
xor
add
outsl
aam
sbb
xchg
mov
mov
xor
ret
adc
stc
outsl
cmp
insb
mov
dec
pop
fwait
pop
in
mov
rcr
bound
je
or
pop
filds
lock
mov
push
fists
into
sbb
rcrb
jbe
aam
xchg
push
out
lods
push
push
mov
xchg
or
icebp
gs
dec
pop
push
in
cmc
into
rcl
mov
out
sub
data16
jmp
sbb
jecxz
inc
pushf
sub
inc
jae
fdivs
nop
or
cmp
xor
pop
xchg
pop
xchg
je
cmp
sbb
arpl
xor
push
aas
pusha
nop
dec
shl
cmp
int
enter
rol
mov
repnz
lock
in
jne
cmp
pop
loope
push
pop
jo
out
xchg
adc
jns
push
sbb
and
shll
adc
in
push
mov
test
lods
mov
stc
mov
call
lahf
je
mov
cmp
push
mov
xor
mov
push
cmp
push
jp
aas
mov
fucomi
xchg
in
mov
into
inc
je
xchg
xchg
add
repz
add
pop
leave
push
jns
std
pop
outsl
and
ror
jmp
inc
inc
cmp
sbb
push
push
pop
adc
xor
xor
test
inc
data16
int
jb
xchg
adc
fcompl
adc
fwait
ret
lahf
add
add
push
xchg
and
jne
lret
dec
fs
fcoml
push
daa
cmp
pusha
jns
jne
lcall
sbb
std
ficoml
xor
dec
mov
fcoms
adc
xor
fldenv
mov
fistpl
xchg
mov
leave
inc
out
outsb
add
push
inc
jb
or
ljmp
lods
pop
repz
stos
ret
fadd
xchg
enter
dec
sub
dec
icebp
cmpsb
or
movl
and
cmp
sub
xchg
mov
inc
cwtl
push
mov
sub
jne
in
push
adc
hlt
aas
sub
add
mov
ss
pop
jns
xlat
inc
cmp
or
loop
lea
pusha
and
or
lods
rclb
hlt
loop
jp
add
adc
mov
or
test
mov
mov
sub
sbb
arpl
daa
nop
cwtl
mov
jmp
das
and
cmp
int
test
outsl
mov
inc
idiv
pop
adc
cmc
cwtl
adc
imul
mov
pop
pop
push
push
and
leave
sbb
movsl
cmpsl
mov
fs
lea
xor
or
jle
dec
sub
pop
fwait
loop
pop
xchg
dec
add
sti
jecxz
pop
subl
mov
scas
popa
fwait
xor
fs
loop
enter
loop
setb
fistps
adc
push
and
sub
push
jp
lahf
cmpsl
out
push
xchg
dec
or
cmp
aas
test
in
push
cmpsl
and
scas
ja
push
les
das
outsb
xor
dec
fistl
mov
mov
and
sub
popf
cwtl
jno
out
ss
cmpsb
inc
sti
out
out
adc
inc
or
jb
mov
hlt
scas
push
lock
mov
icebp
and
iret
pop
mov
pop
lcall
dec
enter
nop
in
mov
or
ljmp
int3
jno
sub
jle
mov
mov
jle
cld
or
and
jo
sahf
inc
popf
xchg
int3
ret
pop
lea
mov
pop
sbb
xor
inc
pop
mov
mov
fwait
add
ret
cli
subb
scas
jmp
cmpsl
ds
jne
dec
scas
das
pop
les
pop
pop
sbb
sbb
rcr
mov
dec
jle
pusha
lock
leave
out
test
xor
adc
xchg
push
jns
sbb
das
cld
sar
faddl
imul
and
fnstsw
ja
shlb
cmpsb
pop
insl
pop
loope
add
lods
js
xchg
cld
jl
sub
loope
mov
jp
push
outsl
out
jb
xchg
out
sub
jle
push
scas
mov
lods
nop
sbb
js
xchg
je
arpl
gs
cwtl
dec
jnp
mov
mov
jecxz
sti
shlb
movsb
inc
fistpl
cwtl
ja
stc
xchg
xchg
loopne
in
push
sbb
out
jg
mov
or
into
aaa
jne
bound
pop
rcrl
cmp
lods
dec
mov
cmpb
dec
adc
xor
xor
cmp
gs
cmp
xchg
and
aaa
cmpsl
enter
pop
cmp
dec
lret
xchg
lock
imul
xor
mov
or
xchg
lret
clc
jo
pop
adc
mov
jle
jecxz
mov
addl
mov
mov
std
fwait
dec
cmpsb
xor
fldlg2
bound
shrb
xchg
lods
inc
cmp
call
in
lcall
adc
cmp
pop
xor
popf
ds
lods
int3
repz
mov
mov
or
xchg
arpl
loopne
jmp
rorl
lods
pop
pop
push
sub
and
mov
ja
mov
mov
ljmp
mov
cmp
cltd
cmp
pop
sub
sbb
cld
push
cmovae
cmp
inc
xchg
adc
lea
ja
dec
shr
lcall
jge
movaps
out
loopne
add
scas
xchg
inc
xor
imull
call
push
ret
aad
loop
cmp
mov
xchg
mov
movsb
adc
stc
imul
dec
lret
daa
adc
adc
jo
enter
jg
sub
jmp
xchg
push
fnstcw
mov
mov
int
mov
adc
inc
xor
push
enter
sub
dec
push
mov
lret
call
stc
mov
mov
jmp
mov
mov
jb
cmp
fcmovbe
pop
orl
testl
or
mov
lock
cmp
lods
pop
add
daa
test
jp
lahf
movsl
sbb
jl
pusha
xchg
cld
rolb
inc
fbld
setbe
test
stos
outsb
cmpsb
jnp
jb
mov
testl
adc
insl
sbb
xor
movsl
in
xor
dec
cmp
insb
and
mov
das
inc
into
push
adc
nop
or
call
ret
adcl
cmpb
sbb
repz
lret
and
adc
pop
jbe
sbb
sti
jb
mov
arpl
mov
shl
lcall
sbb
pop
jmp
adc
jmp
lahf
rcrb
and
das
pop
enter
arpl
push
cmpps
jb
fldenv
push
cmp
iret
mov
mov
pop
scas
mov
jo
push
lcall
xchg
enter
das
and
cmp
mov
mov
scas
icebp
xor
jnp
popf
pushf
out
add
jo
cld
push
ret
movsb
test
jnp
xchg
jg
adc
jo
and
cs
outsl
xor
adc
daa
into
movsl
notb
inc
mov
into
inc
loop
lods
push
pop
sbb
and
cmp
cli
std
jae
insb
inc
mov
add
dec
jnp
sbb
lds
jbe
sbb
mov
or
cwtl
mull
inc
add
mov
xchg
pop
cmpsl
and
or
imul
ljmp
loope
int
pop
xor
dec
push
add
sub
pop
mov
inc
adc
cld
js
push
mov
push
mov
dec
gs
mov
sahf
pop
lods
mov
scas
lods
test
vprotd
insb
repnz
inc
add
jg
add
insb
inc
dec
mov
mov
and
xchg
and
xchg
subl
loopne
outsl
outsl
mov
cltd
mov
xor
shlb
loop
adc
adc
shll
movsb
inc
mov
add
lock
lods
cmp
call
gs
jg
mov
lret
mov
pop
dec
clc
into
shr
aas
and
repz
mov
inc
jbe
dec
pop
aas
call
arpl
popf
sbb
sbb
xchg
sbb
movsl
lds
pop
jmp
jge
adc
in
xor
xlat
cmp
gs
hlt
cmp
stos
inc
insl
xchg
icebp
stc
mov
add
fistpll
or
sti
leave
mov
test
cld
sbbl
pop
xchg
andb
cmp
jns
dec
mov
mov
ficomps
xorb
pop
das
xlat
dec
hlt
jns
pop
mov
and
scas
rcrb
int
pop
stos
fldt
xor
pop
cltd
adc
rcrl
repz
popf
xlat
shr
or
imul
jecxz
sub
cmpb
stos
mov
mov
dec
les
add
bound
cmp
orb
or
mov
pop
outsl
sbb
in
add
add
daa
cmp
movl
sti
ss
xchg
ret
mov
inc
mov
fsubr
cmp
mov
mov
imul
jecxz
mov
inc
sbb
sahf
mov
cmc
jne
mov
xchg
scas
scas
mov
xchg
mov
push
or
and
test
adc
inc
inc
cmp
pop
and
mov
shlb
pop
popa
mov
aas
call
inc
and
imul
xchg
sbbb
dec
imulb
xchg
aaa
jecxz
cld
push
or
push
hlt
aaa
mov
inc
test
sub
mov
stos
sti
mov
push
sbb
adc
cmp
fdivr
nop
push
aam
das
vmovhpd
mov
dec
and
sub
or
cmp
hlt
mov
jno
test
add
sub
push
pop
xchg
pop
imul
push
adc
fsts
mov
rorl
nop
push
and
mov
iret
or
adc
jge
push
mov
sbb
lea
cmp
fistps
js
ljmp
adc
aaa
pop
push
lahf
rclb
cld
push
decl
out
pushf
adc
xor
lcall
scas
hlt
sub
outsl
bound
scas
test
pop
outsb
sahf
gs
mull
outsl
imul
jo
sbb
stos
mov
or
push
jns
cmp
sbb
mov
fdivl
in
adc
adcb
add
and
push
imul
test
add
push
shr
sbb
popa
xchg
vandnpd
fnstcw
fs
xlat
das
in
sar
divl
sub
cli
sub
jnp
mov
push
sub
cwtl
lock
mov
push
popf
mov
leave
adc
xchg
adc
mov
mov
iret
imul
sbb
sub
in
xchg
inc
push
rclb
insl
stc
sub
test
add
int3
mov
jno
and
jnp
dec
rcrl
mov
adc
sub
cmp
rorb
push
push
repz
ficoml
cld
cmc
adc
rolb
gs
mov
sahf
sbb
out
push
jo
aas
cld
mov
lds
out
cmp
movsl
cltd
push
or
mov
outsb
js
sub
cwtl
adc
dec
mov
scas
movsb
mov
xchg
scas
addl
mov
or
lods
and
orl
inc
xchg
insb
popf
push
nop
fwait
icebp
loopne
lret
mov
imul
cmpsl
inc
jo
lds
mov
movsl
or
xor
inc
add
insl
push
push
push
inc
mov
sbb
out
pop
dec
mov
mov
cwtl
out
mov
jns
or
pop
mov
mov
add
loopne
and
pop
push
aam
stc
call
hlt
insb
scas
pushf
mov
add
sub
lahf
pop
push
es
mov
insb
clc
xchg
into
lea
mov
out
mov
inc
xor
sub
pop
into
test
xchg
add
getsec
shl
std
adc
dec
xlat
inc
mov
movsl
cli
in
js
idiv
xor
js
or
jmp
fisttpl
sub
out
loopne
lret
mull
inc
or
lods
mov
fwait
outsl
rorl
je
sbb
into
jo
dec
jge
call
or
xor
push
xor
mov
and
xchg
popa
dec
je
adc
adc
cltd
or
mov
bound
jg
fimuls
hlt
xchg
jb
push
adc
mov
push
xchg
into
cmp
lcall
sub
addr16
das
in
sarb
insb
or
movsb
das
or
jge
in
dec
imul
in
imul
pop
outsl
add
mov
iret
dec
and
and
dec
out
inc
xchg
int
inc
lahf
sub
hlt
dec
stos
xlat
push
push
ja
repz
cli
repz
mov
stc
mov
lock
xchg
cmp
iret
mov
or
subl
pushf
push
repz
pop
ljmp
dec
int3
loope
inc
mov
loopne
adc
hlt
stos
lret
out
sub
cmp
push
dec
pusha
sti
sbb
test
rol
daa
push
lahf
mov
int3
mov
xchg
clc
adc
sub
cmp
adcl
xor
mov
jae
mov
sub
push
aaa
shll
ljmp
push
pop
leave
es
pop
mov
mov
fwait
lcall
das
inc
fs
lods
notb
jmp
adc
jo
orb
sub
and
mov
scas
ljmp
out
arpl
mov
jnp
mov
jle
push
ret
add
pop
lret
jnp
push
jl
xchg
mov
popa
mov
push
cmc
lcall
mov
call
scas
cmp
xchg
pop
imul
push
dec
movb
aaa
lcall
jb
dec
or
psllw
lods
test
inc
push
cmpsb
cmp
push
and
push
mov
aaa
loop
aam
and
mov
pusha
cwtl
sub
jg
in
shrd
lods
in
bound
stc
sbb
out
cltd
cmp
mov
insl
mov
sets
stos
sti
cmc
and
fsts
inc
daa
jns
lea
mov
mov
ss
jne
in
xchg
inc
push
pop
and
outsb
pop
mov
inc
cmp
xlat
jl
aas
loope
xchg
mov
sbb
add
add
sbb
movsb
lret
sub
xlat
lcall
add
mov
stos
and
push
loopne
fldl
loope
push
idiv
or
sbbb
icebp
inc
test
out
ret
xor
mov
fisttpll
and
sbb
shr
or
lds
and
mov
pop
mov
inc
mov
jb
cld
loopne
jg
icebp
sbb
gs
xor
sbb
shll
aam
movsl
dec
faddl
xor
jp
sti
mov
xchg
mov
add
pushf
xchg
pushf
adc
and
js
faddl
stos
insb
gs
arpl
cld
outsb
mov
jmp
sbb
pop
jmp
pop
mov
or
enter
rclb
mov
ss
push
inc
mov
out
daa
inc
jo
add
sbb
mov
or
popa
dec
pushl
cli
fs
enter
mov
testl
adc
lea
cmp
pop
add
in
and
add
ljmp
aas
hlt
in
inc
cmpsl
mov
cs
jae
jl
sub
cmp
loope
jno
fwait
movsl
sbb
in
fisubrs
sbb
or
mov
mov
push
pop
mov
out
mov
std
ret
rcrl
push
daa
inc
sti
jmp
outsl
push
dec
lcall
push
push
loope
scas
xor
sub
or
inc
lret
sub
pop
jbe
les
insl
test
das
pop
cmp
fdivs
mov
stos
lds
lret
dec
sbb
pusha
jp
lret
push
pusha
add
addr16
mov
lods
cli
addr16
pop
daa
fistl
ljmp
arpl
bound
divb
push
mov
push
xlat
mov
das
inc
sbb
push
movsl
add
test
into
adc
lock
sub
jl
xchg
and
loope
fistps
mull
adc
mul
gs
xchg
cld
sarl
dec
push
int3
fdivrl
mov
imul
sbb
pop
dec
jno
fwait
out
mov
push
cmp
popf
adc
xchg
ds
add
pop
pop
lahf
call
mov
aad
mov
repz
cmp
arpl
jns
push
rcll
cmp
mov
lods
pop
fnstcw
into
cmp
xchg
aad
pusha
fwait
and
xchg
xor
cltd
and
in
add
mov
cmp
mov
mov
sub
mov
pop
test
jmp
mov
dec
dec
shrb
fistpll
ljmp
inc
push
scas
gs
push
push
lock
cltd
popf
movsl
xchg
xchg
mov
cli
test
push
les
push
fnsave
lret
jp
imul
push
shll
add
xchg
shrl
enter
xchg
push
inc
movsb
lods
cmp
sub
iret
mov
fucomp
sub
arpl
sahf
movsl
xchg
jns,pn
cmp
push
lret
dec
ret
inc
cltd
mov
and
xchg
push
jecxz
ret
cmc
mov
jp
test
incl
in
sub
popf
jge
lahf
aam
ret
shll
pop
out
dec
into
pop
arpl
shl
orl
sbb
or
adc
call
les
sarb
shll
lcall
scas
addr16
nop
mov
push
dec
scas
leave
inc
dec
mull
mov
popa
cmc
fdivr
mov
sub
inc
pop
testb
int3
cmp
lods
je
pop
test
xchg
add
clc
push
mov
fsubl
xor
inc
test
cmp
daa
and
shll
pop
add
jge
mov
dec
add
fdivrl
dec
out
fxch
hlt
ljmp
int3
jp
iret
icebp
mov
rcll
pushf
cmp
insl
xorl
sub
xor
movsb
fnstcw
inc
arpl
sbb
xlat
jp
jl
jae
mov
mov
enter
sub
mov
jecxz
les
mov
jmp
test
lret
mov
lea
scas
lahf
add
push
outsl
cwtl
inc
arpl
stos
mov
jnp
push
fidivl
cmp
cld
scas
jle
pop
leave
jo
mov
push
dec
and
mov
cmp
mov
insb
xchg
rclb
sti
or
and
mov
sbb
and
mov
in
in
mov
loopne
dec
es
imul
stos
or
cld
cmp
stos
cmp
addb
popf
xchg
out
inc
add
mov
mov
mov
inc
decl
or
cld
pop
jl
mov
push
mov
cmp
out
inc
aas
or
stc
push
loope
xchg
repz
pop
int3
mov
xchg
mull
mov
and
dec
sti
add
cwtl
test
test
mov
and
sti
cwtl
adc
jns
mov
inc
xor
gs
mov
push
pushf
shrb
int3
mov
aad
jle
jae
and
xchg
shll
je
dec
es
push
in
sub
hlt
outsb
sti
or
into
test
test
sub
mov
das
loope
pushf
into
sub
or
es
test
rcrb
jb
push
adc
std
repnz
adc
js
in
inc
fisubl
mov
jp
imul
sti
inc
sub
adc
ljmp
xlat
movsb
mov
jae
mov
sub
repnz
jle
push
rorl
stc
out
xchg
jmp
stos
mov
push
jo
subb
jmp
push
lds
loope
iret
or
pusha
pop
xchg
test
adc
jne
addl
adc
xor
jmp
sub
gs
cmp
mov
adc
sbb
int
dec
lds
push
out
mov
loop
mov
inc
shl
push
aaa
out
in
sub
addr16
pop
sahf
std
xchg
sub
lahf
aad
test
aad
mov
popa
sub
xchg
outsb
push
rcrw
leave
neg
adc
push
cmp
inc
xchg
jp
and
testl
push
pop
push
ficomps
into
or
push
fidivs
aaa
xor
sbb
loope
push
xor
ja
popf
stos
inc
pop
mov
xor
pop
mov
mov
cltd
or
jecxz
in
lahf
fs
test
cmpsb
adc
mov
cmpsb
ret
bound
xchg
mov
lret
pop
xor
push
sub
mov
roll
jecxz
cwtl
sub
hlt
ret
inc
jge
inc
cmc
lock
stc
sub
sbb
imul
pop
popf
or
mov
test
xchg
sub
sbb
sbb
cmp
xchg
xor
cmp
xlat
cmpsb
imul
pop
arpl
loope
lret
add
outsl
jne
mov
xor
xchg
arpl
adc
shrb
sub
stc
inc
dec
cmp
inc
mov
outsl
sbb
jae
call
mov
fisubrs
adc
loop
popf
out
addb
adc
es
nop
push
pop
fists
lahf
in
jae
jb
cmpsb
insb
jb
cmp
jecxz
out
rclb
xchg
movsb
std
loop
sti
in
mov
or
fcompl
or
inc
mov
mov
out
cs
push
inc
pcmpgtb
xchg
cs
into
sbb
mov
jmp
cmp
mov
jmp
push
add
jg
in
xor
lds
sbb
les
imul
int3
sub
mov
sub
push
aad
cmpxchg
adc
js
or
jbe
mov
inc
sahf
enter
xchg
out
rolb
arpl
mov
or
dec
rolb
test
mov
inc
hlt
ss
ret
xchg
or
fiaddl
cwtl
push
negl
loopne
mov
leave
movsl
lock
lcall
out
push
push
aas
mov
loope
sbb
or
js
icebp
jmp
out
loopne
std
or
mov
or
into
pushf
inc
pop
jbe
leave
sbb
jbe
xchg
dec
fsubl
rol
mov
in
mov
mov
and
dec
sub
pop
mov
or
cltd
fimull
adc
stc
xlat
stos
pusha
aas
adc
repz
and
cmp
jp
es
xchg
mov
adc
mov
push
psubq
scas
dec
pop
test
aad
gs
pop
jae
push
pop
sbb
daa
aaa
pop
mov
gs
fbld
movsb
loopne
or
push
outsl
sbb
cmp
mov
xlat
lret
jge
ljmp
xchg
pop
daa
cld
roll
add
aad
cltd
mov
or
jo
or
xchg
aaa
pop
pop
sarl
clc
adc
xlat
push
adc
lea
iret
jno
adc
out
sbb
insb
push
cmc
popf
xor
sahf
outsb
test
push
out
mov
es
data16
pusha
call
mov
mov
cmc
out
mov
daa
fs
sbb
in
xor
xor
sbb
bound
xor
iret
add
or
mov
add
push
mov
mov
pop
cmp
pop
push
rolb
mov
out
xchg
stc
stos
enter
ss
xor
inc
int3
jecxz
clc
ret
pop
adc
ret
cwtl
mov
imul
ds
and
insb
fwait
addr16
and
sbb
pop
mov
mov
call
js
in
out
fwait
imul
and
adc
aaa
adc
xchg
decl
cli
add
cmpsl
pop
cmp
scas
xchg
das
xor
incl
sub
adc
je,pt
fiadds
cwtl
mov
call
sub
push
lret
xor
iret
pusha
push
ret
fbld
idivb
xchg
add
or
or
subb
push
enter
jecxz
mov
push
lds
pop
xor
pushf
push
imul
add
insb
pop
add
bound
cmp
fidivrl
cmp
adc
sub
pop
sub
dec
insl
jne
and
mov
push
mov
adc
dec
cmp
into
in
inc
push
and
pop
cmp
popa
testl
and
cld
and
xor
add
es
pusha
dec
and
out
cmpsl
push
rorb
sbb
adc
ffree
push
mov
jmp
pop
mov
sti
push
inc
add
jb
jno
xchg
stos
in
add
and
cmp
or
je
xorl
hlt
xor
push
pop
mov
in
add
cmpsl
fadds
call
lock
push
pop
incl
int
into
xchg
push
jne
push
push
repnz
push
sbb
dec
push
xor
bswap
push
or
mov
mov
movsb
inc
mov
cmpsb
je
jp
mov
in
xorb
out
inc
pop
adc
cmpsl
lds
outsl
insb
loop
inc
lea
lret
dec
and
sub
ljmp
mov
dec
divl
je
pop
dec
movsl
loopne
or
add
mov
mov
sub
aaa
jo
dec
inc
pop
jo
push
leave
in
or
out
cmp
sarb
pop
rcl
orl
addr16
sub
iret
inc
add
cltd
les
cmp
es
xchg
dec
pop
jns
popf
lea
loopne
popf
jb
adc
aaa
cmp
rcrl
and
mov
shlb
imul
outsl
adc
ds
and
sti
xchg
repnz
jmp
frstor
adcl
add
push
dec
xchg
les
inc
ret
sub
cmp
sub
cmc
mov
in
mov
sbb
fmul
inc
aas
inc
in
jp
rcll
mov
shll
popf
daa
dec
xlat
jmp
mov
pop
lea
insl
push
insl
mov
and
cli
rol
lret
imul
or
adc
jnp
loope
mov
sbb
cmpsl
mov
iret
pop
lret
das
and
add
andb
std
and
sub
mov
mov
mov
movsb
cli
cltd
iret
test
inc
test
mov
fsub
sbb
lds
cli
dec
imul
lods
mov
mov
lahf
je
jnp
stos
orb
dec
stos
cmp
cmp
rorl
jae
stos
push
addr16
das
inc
cs
sbb
mov
nop
sub
and
test
aaa
mov
aaa
pop
idivl
ds
jle
jmp
and
loope
std
scas
call
xor
mov
lcall
test
push
fcompl
xchg
rcll
test
xchg
pushf
incl
js
mov
iret
test
sub
mov
popa
inc
nop
pop
aaa
mov
fcmove
and
pop
pop
push
sub
sarb
fcmove
mov
cs
push
std
ja
xchg
test
sti
jp
cmp
rclb
jp
sbb
xchg
push
cs
push
lea
jns
fistpll
sub
xor
xor
push
add
adc
mov
adc
push
outsb
pop
dec
xchg
jb
std
jl
jg
mov
pop
adc
shrl
pop
xchg
es
push
push
mov
imul
push
pop
push
hlt
fistl
scas
sub
in
sarb
in
ffree
cmpsl
mov
sbb
dec
mov
sub
bound
or
mov
jnp
xchg
push
loopne
pop
fstl
pop
adc
xchg
push
rcl
xor
sbb
push
cmpsb
add
int3
sbb
nop
pop
sbb
mov
inc
and
shrb
mov
dec
xrelease
sub
inc
loop
ja
test
fdiv
xchg
dec
es
and
xor
xchg
pushf
mov
push
loop
or
mov
lods
jns
out
jl
or
mov
cmp
jnp
mov
sub
loope
out
cmp
ret
mov
jnp
jne
test
mov
jne
jae
xor
scas
pop
mul
mov
icebp
mov
ret
lahf
lahf
into
bsr
add
ss
lock
dec
sbb
mov
jae
and
int
not
lret
push
xchg
je
mov
cmp
ljmp
xor
adc
pop
stc
xor
imul
or
adc
fnstenv
sbb
inc
pop
xchg
int
sti
xchg
pop
iret
xchg
adc
adc
or
pop
fwait
clc
xlat
je
hlt
mov
and
adc
pop
sti
xchg
mov
shr
mov
nop
lcall
mov
pusha
cmp
or
test
fldt
popa
cmp
dec
pop
mov
pop
and
pop
mov
mov
loop
mov
push
sub
cmpsl
add
nop
mov
imul
xchg
ret
jbe
fs
or
out
sti
sbb
pop
pop
movd
cmc
rcrl
xor
lock
xchg
and
out
pop
stos
lret
xor
or
in
cmp
sub
repnz
inc
xchg
arpl
lock
outsb
pushf
mov
or
sbb
rorb
hlt
testb
or
imul
or
movl
arpl
test
dec
setno
adc
adc
inc
leave
fwait
pop
push
leave
mov
subl
pop
cli
shlb
into
in
fdivrs
cmp
mov
add
movsl
pop
xchg
dec
xor
in
xchg
sarb
dec
adc
xchg
int3
and
add
mov
imul
push
cmpsb
repnz
out
mov
jg
mov
leave
addr16
adc
xchg
xchg
mov
push
mov
in
sbb
fwait
outsb
je
test
pop
mov
cmp
cld
and
stos
sbb
push
dec
loop
fs
mov
xlat
xchg
mov
or
pop
and
inc
int
mov
test
ja
xchg
test
add
js
jg
xlat
or
int3
add
mov
sub
stos
jns
mov
cmpsl
xchg
fistps
cmpsl
jl
jb
pop
cld
mov
imul
rolb
ret
add
xor
mov
dec
fs
in
jbe
xchg
addr16
jns
ret
cltd
bound
xor
movsl
pop
data16
dec
hlt
xchg
push
push
inc
jnp
mov
mov
lahf
jl
dec
lods
fstps
aam
sbb
sub
xchg
test
int
cmpsl
mov
imul
out
add
out
adc
fmul
popf
mov
mov
fidivs
sbb
add
cmp
cmp
adc
sbb
test
mov
jl
mov
jp
xchg
mov
lock
xorb
cwtl
lods
push
shll
pop
inc
sbb
rolb
lods
in
xchg
mov
dec
es
aam
jge
push
sub
cmc
cmpsb
sub
push
mov
ljmp
cltd
xchg
and
inc
adc
ret
push
aam
mov
fldt
lea
int
sub
fcompl
test
call
lods
clc
andb
mov
jle
outsl
or
pop
push
and
pop
sub
aaa
jno
add
sarl
lods
add
adc
in
pop
xor
fidivrl
mov
mov
ficoms
cli
repnz
mov
pop
jle
jmp
mov
inc
mov
push
scas
sti
mov
push
xchg
cmpsb
sbb
add
jge
mov
push
rcl
mov
xchg
jg
das
or
xor
enter
int3
mov
push
cld
ja
pop
mov
jg
dec
adc
cld
movsb
pop
les
pop
mov
push
mov
lret
cmp
je
cltd
and
sub
jb
cld
mov
outsb
rolb
fisubrs
jp
in
push
js
pop
frstor
testb
bound
pop
or
je
and
adc
adc
int3
pop
lea
inc
ret
pusha
daa
loopne
mov
mov
cwtl
cmp
lods
rolb
call
push
lock
dec
imul
sbb
out
test
negb
add
fdiv
stos
xchg
fdivs
pop
in
cld
mov
rolb
lahf
sub
test
lret
mov
into
outsl
sbb
push
std
mov
mull
in
lods
jne
dec
sbb
sbb
mov
xchg
adc
and
scas
push
mov
ljmp
aas
rcll
inc
enter
push
xor
mov
mov
lret
pop
test
pop
loopne
fdivp
push
ss
sub
inc
jge
dec
push
inc
mov
adc
aad
add
repnz
cmp
out
shrl
and
mov
mov
mov
xchg
mov
mov
test
inc
movsl
mov
in
in
lods
insl
loope
xchg
jno
mov
xor
shll
mov
jp
mov
push
and
inc
and
repz
dec
arpl
or
jmp
push
jmp
test
mov
push
frstor
cli
dec
push
bound
icebp
insb
push
xchg
cmp
jl
out
xchg
push
das
sbb
mov
shr
mov
out
jl
dec
mov
repz
ldmxcsr
jg
adc
test
add
shlb
xchg
test
movl
ficompl
mov
stc
mov
outsb
inc
or
int3
pop
sbb
imul
push
jbe
jle
ret
sub
or
and
sub
mov
pop
flds
and
cmpsl
es
mov
int
shll
int
push
cmp
lcall
mov
sub
stos
repz
int
cltd
add
xchg
dec
lcall
bound
into
sub
mov
lret
pop
inc
nop
or
cwtl
scas
jae
mov
cmp
xchg
cmpsb
mov
or
adc
pop
add
xchg
adc
pushf
xchg
jno
lods
jmp
shll
mov
adc
mov
test
push
and
or
xor
ficomps
bswap
lret
pop
mov
push
push
add
movsl
inc
dec
lret
jo
mov
jl
pop
xchg
cmp
sti
pop
cli
add
inc
iret
mov
nop
fxch
push
popf
mov
fsubrl
xor
clc
pop
ss
dec
and
cmc
pop
inc
mov
adc
cmc
fwait
mov
jno
mull
sub
testl
pop
bound
call
sub
sub
sub
sub
jo
pop
call
xor
stc
xor
dec
mov
sbb
mov
stc
fnsave
lods
outsb
mov
outsb
pusha
insl
cmp
pop
mov
sbb
xlat
out
adc
jp
pop
sbb
daa
je
push
xchg
jp
add
shll
add
sti
adc
out
aas
fs
push
hlt
and
add
xor
inc
add
and
lock
dec
push
jb
jl
iret
xor
jo
ss
fs
leave
scas
lock
sbb
daa
or
out
mov
mov
mov
adc
loopne
mov
fstp
inc
pop
fidivrs
xor
and
test
sub
jb
add
jb
pop
arpl
pusha
sub
inc
pop
fsubrs
push
addr16
subl
add
mov
dec
sub
jae
fs
dec
inc
push
sub
addb
shl
mov
pop
ss
jnp
dec
lcall
iret
andb
inc
push
cmp
push
dec
cmpl
xor
lcall
lahf
mov
or
mov
in
imul
mov
mov
nop
xchg
push
or
psubb
or
dec
sub
fimuls
daa
dec
add
pop
sarl
repnz
test
imulb
lds
adc
sti
pop
into
loope
jl
movsb
pop
inc
ret
aam
jge
ja
adc
sub
adc
ret
cmp
adc
push
stos
out
mov
sbb
test
addr16
addr16
jno
xorl
xchg
cld
ss
push
xchg
cwtl
jo
mov
sti
or
xorb
out
sbb
push
int
scas
das
test
adc
lds
push
jmp
mov
xlat
ret
sub
cmpsb
stos
pop
scas
outsb
std
mov
pushf
mov
sub
in
pushf
dec
mov
lret
and
outsb
sbb
imul
ds
mov
ficoms
jl
xchg
cmp
lret
cwtl
cmp
jno
cmp
adc
or
fwait
jb
imul
mov
loop
dec
aas
push
repz
mov
loopne
lret
jnp
jns
ud1
mov
aaa
or
mov
or
adc
and
mov
mov
in
push
jae
icebp
mov
mov
les
sub
mov
mov
enter
inc
cmc
fs
in
mov
push
dec
inc
mov
out
mov
dec
lods
and
sub
ror
stc
adc
stos
inc
cmpsl
jae
cld
add
dec
repz
mov
loopne
cmpl
mov
clc
sbb
cwtl
sti
xchg
pop
sub
fisttpll
movsb
inc
cld
sbb
mov
call
sbb
insl
and
addb
adc
jb
and
mov
jg
push
mov
bound
scas
enter
and
add
pop
sti
mov
fdivp
clc
mov
or
jns
jns
bnd
inc
mov
xchg
out
sub
stos
inc
xor
mov
cmp
push
popf
and
pop
fsubp
inc
imul
popf
or
cmc
sbb
sub
cmp
es
sub
ret
mov
fcomps
pop
jle
adc
adc
push
inc
add
or
test
jmp
ja
fstps
test
and
int3
or
decb
lods
fists
push
mov
and
push
mov
xor
add
push
add
push
add
jno
xorb
jg
lret
movsb
int
mov
jb
push
cmp
fucomip
mov
fnsave
cmpl
dec
xor
xor
out
stos
mov
faddl
fnstenv
push
dec
dec
icebp
xchg
rorl
das
xor
aam
imul
movsl
scas
js
mov
mov
mov
jns
daa
cwtl
sbb
mov
outsb
mov
push
cli
and
lock
jl
and
inc
ficoml
or
outsl
add
fwait
mov
pop
hlt
stos
or
out
xchg
push
rcr
lcall
jp
pop
xchg
add
in
mov
dec
sbb
pushf
fiaddl
out
mov
and
jae
clc
fisttps
aaa
push
insl
bound
mov
or
enter
sbb
jmp
test
cmp
sarb
xchg
lock
stos
insl
cltd
inc
rol
push
mov
adc
test
test
pop
push
in
hlt
inc
cld
mov
aaa
cmp
xchg
xor
adc
or
dec
mov
idiv
push
mov
testb
fdivs
cmpsl
push
xor
dec
mov
sbb
or
lcall
xchg
dec
push
mov
pavgw
mov
fdivl
imul
fucom
pop
cmp
jns
adc
js
pop
or
iret
or
jns
out
jge
or
mov
xchg
jae
inc
ret
jne
mov
out
add
push
pop
push
outsl
dec
push
repz
push
or
mov
loop
negb
in
cmp
mov
push
int3
data16
add
fs
lods
inc
mov
fcmove
dec
inc
imul
xor
call
test
pop
orl
out
mov
rorb
mov
sbb
sbb
inc
cmpsb
adc
or
adc
mov
xlat
cld
pusha
mov
lcall
jl
inc
jns
adc
lea
inc
not
arpl
fidivrl
or
xlat
inc
repz
rcrl
ret
mov
out
xchg
cmp
fs
sub
sub
and
hlt
divb
pop
lret
fstl
scas
sbb
gs
adc
jg
pop
pop
push
xchg
mov
pop
inc
fucomip
outsl
cmp
cmp
mov
sub
mov
mov
jno
inc
mov
jg
mov
fdivrl
inc
mov
inc
or
pop
jae
mov
jo
lods
in
and
xchg
jb
and
cltd
rorb
pop
insb
xchg
dec
outsl
lods
xor
inc
fdivr
movsl
mov
in
xlat
mov
movsl
cli
mov
mov
pop
cmp
shll
or
lea
xchg
loop
or
pusha
addl
push
into
mov
fs
cmpsb
adc
or
cmp
or
inc
insl
or
xor
jb
jns
cld
mov
mov
push
jns
adc
dec
inc
pop
jmp
jae
popa
mov
jno
in
js
adc
setnp
adc
cmp
popf
push
movzbl
in
idivl
sub
jmp
lahf
fs
or
rcl
or
mov
cs
pushf
cmp
std
sahf
push
add
icebp
ljmp
push
jg
push
ds
sbb
cmc
push
lods
aam
add
data16
xor
sub
test
jb
loopne
imul
lods
sti
lods
jmp
jno
dec
push
out
je
lahf
dec
dec
mov
mov
jne
into
into
sbb
mov
sahf
jl
hlt
stos
and
fcmove
mov
pop
enter
mov
jp
mov
cmp
sub
and
pop
dec
xchg
pop
cmp
pushf
gs
adc
sub
cmp
sbb
jno
push
inc
into
testl
add
or
jo
cmp
test
std
pop
or
int
out
loop
adc
jns
popf
stc
and
inc
pop
mov
xor
and
add
test
push
rcrl
cmpsb
scas
sub
test
mov
sbbl
pop
ret
mov
insb
mov
popf
in
iret
mov
repnz
sub
fisubs
out
sbb
iret
sbb
sbb
aaa
push
shll
or
stc
mov
enter
outsb
pusha
xchg
and
xor
dec
lcall
push
aam
pop
repnz
xor
pop
push
or
push
int3
inc
fcoms
sahf
cmp
dec
mov
outsl
into
je
popa
add
xchg
adc
cwtl
cld
or
and
or
push
xor
mov
call
cmp
cmp
mov
mov
cmpsb
daa
out
adc
mov
imul
iret
mov
arpl
jbe
aaa
js
roll
fdivl
push
scas
jbe
push
xor
jle
inc
push
in
push
cmp
or
sub
push
sub
xchg
dec
mov
inc
pop
sti
jle
sbb
lods
mov
jmp
mov
sub
lahf
jl
movsl
jb
sti
outsl
inc
aas
out
or
cs
push
fistpl
pop
adc
or
movsl
adc
sahf
xor
clc
stc
or
popa
out
aad
push
xchg
cmpsb
adc
pop
iret
xor
xor
pop
cwtl
fdivl
jmp
inc
leave
pop
sub
push
sahf
push
and
mov
jge
mov
mov
sub
jle
inc
jbe
in
ljmp
add
jg
xchg
pushf
nop
nop
push
cmc
lods
mov
push
add
mov
jge
int3
lea
and
call
dec
fiaddl
ljmp
mov
cmpsb
mov
rcrb
or
sub
adc
cmp
icebp
xor
jb
cltd
mov
bound
rcl
xor
xchg
dec
mov
push
mov
push
out
pusha
add
and
imul
add
fwait
pushw
mov
adc
jno
cmpsb
popf
lahf
je
sbb
cmpl
jno
rorb
adc
sti
fisttpl
ljmp
faddl
ljmp
data16
imul
cld
jb
xlat
inc
or
outsb
push
std
jp
push
push
xor
pop
shrb
pop
dec
jae
or
inc
cmp
mov
mov
dec
sbb
inc
sarl
jmp
cmpsb
pop
aas
pop
xchg
negl
jb
pushf
sbb
sub
stos
cmp
lahf
pop
lea
lea
inc
push
cmp
fcmovnu
sti
stos
jae
or
dec
jecxz
lret
xor
dec
rsm
lods
hlt
outsl
ljmp
out
js
xor
pop
test
lods
cmp
movsl
mov
rclb
cmova
mov
jmp
adc
dec
lea
xchg
or
scas
mov
add
and
es
in
andb
lods
cmp
fidivrs
ljmp
mov
pop
xor
aas
iret
clc
inc
xorb
sub
bound
mov
and
or
jmp
pop
jmp
xchg
rcrl
and
sub
sbb
xchg
inc
and
jmp
jbe
or
push
test
ficomps
inc
daa
test
pop
add
ds
pop
adc
add
call
bound
sub
inc
or
mov
mov
mov
push
push
in
dec
add
or
push
mov
jnp
sti
and
xor
cmp
test
jbe
cmpb
fistl
mov
inc
dec
minps
push
jl
sbb
das
jmp
cmpsl
mov
fs
fisubs
and
mov
bound
add
or
ss
mov
jo
dec
xchg
pop
rorl
mov
push
in
xor
outsb
daa
jnp
dec
js
clc
aas
cmp
negb
push
push
sarb
test
push
dec
outsb
add
jle
movsl
stos
aas
loop
imul
mov
mov
push
negl
out
mov
mov
loopne
dec
pop
add
out
mov
scas
mov
aam
jge
test
mov
les
xchg
pop
mov
pop
xchg
mov
add
pop
std
or
into
lahf
lcall
leave
arpl
es
imul
enter
mov
loop
test
pop
iret
and
std
sbb
imul
or
cmp
psrlq
sahf
outsl
dec
push
and
xchg
jp
mov
aas
mov
dec
leave
lods
push
aaa
jle
rcll
jbe
int
bound
sub
xor
mov
dec
inc
js
push
pop
aas
sbb
jae
or
mov
xor
pop
mov
sbb
pop
pushf
and
cld
aad
pop
cli
addr16
mov
xchg
add
mov
mov
sbb
or
and
loop
cmc
push
mov
into
data16
inc
xchg
add
inc
mov
ds
fcmovne
cli
jmp
and
cmp
jne
sub
push
jns
jge
aas
rol
iret
sub
and
jp
xchg
xchg
test
repnz
loope
push
lret
out
push
inc
xchg
jg
mov
or
pop
out
pop
and
iret
pop
ret
xlat
push
addr16
mov
movsb
push
xchg
dec
dec
xabort
insb
push
push
lahf
inc
inc
aam
das
das
push
pop
in
lock
push
imul
xchg
stc
push
mov
sub
negl
adc
std
xchg
sbb
adc
lahf
dec
in
push
lods
jbe
mov
aaa
cmp
mov
xchg
dec
jae
out
mov
cmp
dec
xchg
xchg
push
data16
push
xchg
jbe
into
cmp
sub
sbb
or
sbb
jg
test
mov
fsubrl
pop
stos
or
imulb
sti
or
je
xor
bound
mov
push
xchg
aaa
ret
xchg
mov
testb
push
jle
sbb
pop
in
sub
out
mov
fisubrs
push
mov
sbb
outsb
in
stos
cmp
jecxz
insl
leave
xor
jae
push
scas
jle
add
add
imul
adc
or
lahf
jg
in
outsl
aaa
insb
pop
orl
hlt
cmp
bound
mov
pop
cmpsb
adc
mov
pop
or
icebp
xchg
in
xor
mov
push
mov
fbld
stos
je
scas
ss
scas
mov
insl
sub
pop
cmp
pushf
aas
mov
in
js
mov
mov
pusha
ja
bound
push
mov
mov
xchg
xchg
loope
xorl
in
sub
scas
test
cltd
dec
jns
or
das
push
out
sbb
adc
fwait
lods
xchg
jnp
inc
lret
cmp
sub
cli
cwtl
cmp
sbb
mov
or
adc
lret
push
adc
fsin
div
std
xlat
push
sbb
sub
stc
mov
js
dec
dec
repnz
jns
popa
insl
and
sub
lds
fisubl
and
fisttps
or
mov
cmc
jae
fdiv
lcall
dec
in
sbb
pop
int3
cld
mov
jecxz
popa
int3
nop
pop
jge
rcl
mov
arpl
lds
inc
mov
mov
jbe
fstps
cltd
mov
add
scas
mov
xor
popf
push
js
cmc
out
lret
js
pop
mov
in
inc
mov
jns
sub
sbb
js
jb
sub
iret
jp
xchg
sbb
pop
mov
les
pop
out
xorb
jge
push
int
adc
mov
pop
cmpsl
or
cltd
das
cmp
sub
in
inc
add
sbb
xor
fmul
aaa
mov
push
imul
dec
sarb
inc
testb
xchg
adc
lea
push
inc
inc
jecxz
inc
mov
movsb
mov
jns
hlt
cld
addr16
movsl
popf
insb
fnsave
into
adc
or
test
enter
repz
ror
loopne
sbb
mov
insl
and
push
adc
sti
sahf
mov
imulb
dec
adc
xor
pop
xor
movsl
mov
popa
cmpsl
sbb
jbe
and
fidivl
or
mull
xor
pop
movsl
and
cmpsl
sti
cmp
cmp
ljmp
mov
jl
cmc
daa
sti
push
push
cmc
jbe
dec
xlat
sub
fidivrs
push
dec
and
dec
pop
mov
fstl
push
inc
ficompl
fisttpll
clc
adc
scas
sub
ret
das
and
push
inc
cmp
lods
loop
jmp
das
dec
loop
lods
xor
sub
dec
mov
mov
push
inc
aas
push
outsb
push
in
jns
cmc
or
ds
push
xor
jle
stos
lahf
sbb
jns
movsb
iret
mov
call
mov
pop
push
rorl
out
sub
adc
mov
cld
dec
sbb
flds
fmull
xor
std
dec
jecxz
cwtl
mov
nop
and
jle
insl
mov
fs
xor
cmp
xorl
movsb
dec
inc
fcmovne
outsb
shrb
andb
mov
push
mov
sub
paddsb
pushf
orl
shrl
notl
jl
cwtl
mov
mov
test
imul
daa
mov
ret
pushf
test
stc
mov
cmpsb
push
jnp
sbb
cmpsl
pop
pop
mov
fwait
jae
and
adc
xchg
mov
xor
scas
in
lret
insl
ret
xchg
cmp
or
cmp
push
jns
pushf
mov
fistl
lahf
movsl
loop
icebp
mov
js
out
stos
sarl
xchg
popa
fdivrs
aaa
in
lret
fsubrs
xlat
iret
mov
fs
jo
pushf
cmc
std
fidivrl
mov
xchg
pop
xor
mov
lds
rcpps
adc
pusha
cmpl
shll
das
sbb
loop
cmpsl
out
fwait
int3
mov
jp
push
lahf
sub
pop
lods
mov
pop
daa
inc
pop
test
mov
aas
js
pusha
pop
and
mov
xchg
push
and
cwtl
cmp
shrb
dec
dec
call
orl
sub
les
gs
mov
pop
daa
outsl
std
add
mov
ds
or
and
addl
cltd
xorb
aas
in
outsl
cmp
inc
xchg
sbb
push
xchg
mov
test
xor
jnp
roll
lds
shl
mov
in
or
dec
shlb
mov
mov
jne
in
sarb
pusha
cmp
mov
xor
mov
or
lret
sub
in
cmc
dec
or
loope
out
sbb
jmp
adc
pop
inc
sub
cld
adc
scas
push
mov
mov
inc
or
lods
lret
push
adc
xchg
popf
cmc
jmp
xchg
stos
pop
leave
or
push
sub
xlat
mov
fidivrs
fsubs
push
cld
sbb
nop
push
dec
push
into
pop
pop
jle
repz
mov
mov
test
imul
out
addr16
adc
sbb
test
sbb
mov
mov
into
das
lods
inc
pop
aad
mov
xchg
icebp
aas
adc
sbb
jnp
xor
jne
clc
push
lcall
mov
mov
aad
lcall
add
mov
push
push
test
imul
movsb
movsb
dec
inc
out
ds
or
pop
inc
push
pop
or
add
cmc
cld
adc
mov
lret
jne
js
loopne
mov
cmp
pop
sarl
jb
xchg
ja
stos
mov
inc
cli
fsts
inc
adc
loopne
add
rorl
cltd
jne
push
sub
xchg
rclb
scas
shl
faddl
inc
jno
gs
adc
daa
jmp
fstps
cmp
imul
xor
nop
and
js
mov
mov
xor
ret
adc
addr16
mov
inc
ja
mov
movsl
sti
popf
sti
lea
notb
cmp
add
cld
imul
adc
stc
jle
aad
cwtl
push
mov
stos
out
aaa
or
dec
rorl
lcall
and
movsl
mov
push
cmp
push
mov
sub
cmpsb
sub
dec
mov
cmpsb
or
rclb
jecxz
mov
fnsave
fs
cmp
out
dec
ds
lcall
ret
fwait
cld
scas
push
lret
jl
lock
fsubs
fs
pop
xor
in
fists
loopne
cmc
js
addr16
or
inc
inc
adc
jb
lahf
sbbl
jne
sub
sahf
mov
jae
push
repz
mov
in
cld
dec
shr
xchg
push
in
mov
pop
cmp
test
and
add
orl
out
outsb
mov
cmp
sahf
fmuls
mov
pop
ss
push
popf
push
jmp
jp
jbe
lods
cmc
mov
mov
pop
xchg
xlat
cwtl
add
pop
adc
ret
loope
lret
xchg
lock
stos
mov
sub
jg
pop
add
lods
scas
xchg
inc
push
test
jecxz
inc
mov
push
test
rcr
scas
faddp
mov
adc
je
jnp
aas
dec
scas
les
sbb
pop
fdivl
lahf
cmp
jg
dec
sbb
or
xchg
in
or
mov
xor
pop
stos
mov
inc
cmp
cwtl
movsb
dec
dec
add
sbb
insl
or
push
inc
roll
mov
xchg
shr
cmp
push
lret
mov
push
sbb
mov
pop
mov
cwtl
pushf
add
rcrl
mov
loop
jecxz
js
push
inc
jns
push
loop
mov
inc
add
pop
xchg
shrl
addr16
jp
push
ja
insl
mov
cmp
add
shlb
mov
js
inc
and
pop
lcall
loop
in
xchg
or
add
int3
stos
and
hlt
in
test
repnz
movsb
pop
and
mov
adc
jmp
repz
les
js
cmpsb
insl
clc
push
imul
pop
xchg
pop
cmc
arpl
movsl
pusha
xchg
adc
inc
adc
xchg
push
mov
mov
clc
pop
sub
jbe
sbb
xchg
test
sahf
pop
xor
das
mov
repz
dec
adcb
popa
mov
js
inc
or
mov
ret
ret
xor
movb
dec
hlt
push
push
mov
cs
mov
xlat
icebp
inc
push
lock
pop
repz
sbb
lea
in
out
sub
js
lock
push
push
dec
jns
inc
push
xlat
lcall
rcrb
imulb
pushf
pop
jno
mov
dec
pop
fnstcw
or
lcall
or
and
fstl
movsl
aaa
jbe
ret
jle
inc
xorb
dec
sbb
pop
mov
hlt
mov
insl
pop
daa
iret
test
jo
jnp
nop
adc
popf
orl
lock
divb
dec
lahf
call
roll
rorb
pop
mov
sbb
jo
mov
push
pusha
cmp
addr16
pushw
or
lea
sbb
lock
push
push
jae
xchg
int
loopne
mov
xchg
xor
mov
sbb
fwait
scas
push
push
loop
mov
test
int
ret
or
add
cmpsb
sbbb
mov
mov
in
and
imul
xchg
clc
test
xor
and
outsl
pop
mov
cld
and
xorl
test
jne
lahf
or
iret
shl
ds
mov
rcll
gs
or
pop
lahf
fidivl
jge
insl
pushf
fiaddl
enter
xor
aas
std
jecxz
cmpsb
cmpsl
popf
add
in
test
mov
inc
arpl
dec
lret
ret
mov
jecxz
outsl
jl
pop
std
ret
inc
sbbl
fsubs
mov
loop
sub
fists
in
lret
push
jb
xchg
push
fstpt
mov
and
imul
movsb
dec
inc
push
imul
addl
xor
loopne
pop
outsl
imul
sbb
cmp
lahf
add
cmc
adcb
push
push
dec
stc
add
lods
aam
out
lock
push
jb
ja
cmpsl
add
add
inc
mov
dec
insb
jb
loopne
out
or
mov
or
aad
adc
sub
cld
test
mov
sbb
or
mov
stos
xchg
test
stos
out
xchg
addr16
pop
stc
sub
mov
bound
cmp
cmp
add
movsl
dec
mov
fbstp
test
stc
add
add
std
mov
add
jb
or
inc
add
xor
icebp
mov
fisubs
cmp
enter
int3
push
adc
sub
dec
lret
bound
mov
xchg
push
xchg
int
or
inc
shrb
test
cmc
pop
lret
enter
xchg
out
cltd
xor
push
incl
sub
push
fdivl
and
and
mov
jne
jnp
nop
dec
jmp
xchg
les
iretw
out
or
xlat
cmp
or
test
rolb
lret
repz
lods
and
fmul
shrb
jne
aas
mov
dec
test
inc
fsubs
loope,pt
rorb
xlat
xor
cli
lcall
out
mov
mov
or
mov
ds
inc
sarl
jg
aaa
mov
test
sar
outsb
aam
fidivrs
mov
cmp
mov
out
das
leave
popa
inc
mov
cmp
push
insl
in
pushf
mov
or
lock
popa
mov
or
jmp
fldenv
or
pop
adc
add
das
xchg
jecxz
jge
shlb
jecxz
pop
sub
mov
andl
jecxz
popf
inc
mov
les
inc
xchg
daa
leave
inc
or
movzbl
push
repz
mov
mov
cltd
push
fcoms
push
outsl
test
or
sub
jmp
push
fsubrp
movsb
jecxz
jmp
pop
xchg
jnp
test
fstpl
lods
adc
lret
testb
out
mov
cmp
loopne
scas
xchg
sbb
pop
sbb
movsb
mov
repnz
js
push
ja
push
cmp
xor
pop
cmpl
push
ljmp
xchg
fiaddl
dec
sbb
jle
xchg
and
rol
lahf
lods
lret
je
ds
inc
sbbl
jb
sub
inc
jno
inc
add
sahf
mov
lret
notb
in
xchg
sbb
idiv
pop
rorb
cmp
lea
cmpsb
push
repnz
rorb
out
out
inc
sbb
mov
sub
es
jno
jmp
fcomps
movsl
leave
cmp
adc
jge
mov
pop
loop
lret
xorl
push
repnz
movsl
dec
adcb
jae
xor
cmp
jno
loopne
inc
mov
pop
jno
lahf
daa
mov
outsl
mov
ljmp
jmp
sbb
cmp
repz
jo
clc
in
mov
mov
scas
push
mov
out
je
jae
push
and
das
dec
je
adc
nop
sbb
rcrl
lock
xchg
pop
mov
in
adc
js
jno
in
fcoms
pop
or
jl
imul
mov
cltd
jb
push
xchg
mov
int3
out
int3
imul
das
stos
add
fistpll
sub
dec
cmc
pop
cmp
ljmp
xor
pop
jne
sbb
leave
daa
je
dec
xchg
xchg
fnsave
adc
mov
inc
lahf
xchg
mov
xor
sbb
popf
sti
sbb
ds
sub
push
imul
mov
jg
cmp
mov
mov
cmp
push
fstpl
inc
ficomps
icebp
pop
mov
xlat
fadds
outsl
rcrl
xor
mov
xchg
sti
ljmp
jecxz
aam
adc
pushf
push
cmp
sub
mov
lret
mov
fstl
push
sub
clc
mov
xchg
xchg
mov
flds
rcl
pop
rcll
daa
shl
test
enter
jne
shl
pop
incb
mov
in
iret
mov
sbb
cmp
in
and
jae
adc
xor
js
scas
stos
jge
cmp
jae
jp
sub
lods
xor
mov
cmp
dec
dec
fidivrl
inc
shr
shll
push
inc
add
xlat
pop
pop
push
cmc
push
push
pop
lock
sub
nop
xchg
or
mov
xor
fsubl
lcall
pop
dec
loop
adc
push
cmp
push
dec
outsl
pushf
dec
jne
jbe
mov
mov
cmp
rcrl
or
push
adc
dec
in
push
dec
push
inc
pop
push
subl
and
aaa
push
incl
pop
mov
mov
cld
inc
std
popl
inc
pop
ljmp
in
dec
pop
aad
add
adc
dec
pop
sub
dec
cli
rorl
test
and
mov
or
es
push
xchg
and
scas
aam
jecxz
lock
add
fcomps
daa
pop
lret
jecxz
inc
push
push
ds
test
sub
sbb
dec
mov
je
mov
pop
inc
test
fadd
jp
arpl
ds
cwtl
mov
cs
mov
mov
das
scas
and
xor
fs
je
jecxz
test
adc
jne
je
aad
mov
add
in
and
loope
adc
fwait
jmp
call
push
repz
lret
sbbl
jns
sub
mov
fwait
mov
cmp
nop
aam
ret
fsubr
pop
adc
repnz
and
and
in
jp
xchg
pop
fsubr
dec
fisttps
outsb
jle
aad
sbb
mov
add
adc
std
lock
pop
mov
pop
imul
sub
jns
dec
jno
sbb
stos
cld
or
popa
lock
out
es
inc
cmp
mov
pop
shr
leave
ja
jns
push
sub
cmpsl
or
aad
adc
inc
andb
sti
pop
pusha
iret
int3
cmpsb
jb
iret
mov
popa
push
scas
repz
pop
out
les
push
lock
sti
jg
jle
sbbl
mov
stos
in
outsb
out
or
add
popl
ret
push
pop
in
add
out
xchg
or
push
in
in
stos
into
add
xchg
imul
inc
mov
popf
fstpt
cmc
jnp
imul
fdivr
inc
in
xor
popf
mov
dec
test
aas
aaa
sub
ret
sub
jb
cmc
cwtl
pusha
sub
jp
adc
fs
jle
sbb
jb
sub
mov
lret
fldcw
dec
mov
jmp
push
in
daa
mov
sbb
stos
inc
inc
inc
aam
pusha
ror
mov
jae
inc
xchg
adc
cmc
fisubs
sub
jl
out
push
stos
inc
or
xchg
cs
clc
mov
xchg
pop
out
add
aas
int3
jmp
cwtl
adc
dec
jecxz
mov
out
jmp
outsl
cmp
popa
push
inc
aad
mov
mov
scas
mov
inc
or
sub
xor
xor
push
inc
xchg
sbb
sbb
jo
int
and
and
push
dec
sbb
imul
or
cmpsl
cwtl
inc
xor
pop
jl
sub
xor
pop
shl
push
arpl
pop
rol
adc
xchg
fbld
dec
jne
ret
divb
pop
and
pop
adc
test
push
jnp
inc
pop
inc
movb
rcrb
lock
insb
andb
shll
adc
xchg
pusha
fwait
ss
or
jl
push
sbb
loopne
inc
lods
pop
xor
xchg
lret
inc
adc
jae
pop
arpl
in
inc
ljmp
sbb
rclb
mov
sub
mov
test
sarb
push
xor
push
jecxz
pop
test
sub
lods
sub
insb
aaa
lcall
adc
xchg
jae
lea
mov
cmp
xor
cltd
sbb
ror
popf
in
les
data16
orl
rcll
mov
mov
mov
rolb
sub
gs
inc
into
inc
pop
xor
lea
cmp
cmp
loopne
jne
popf
adc
push
or
push
mov
sbb
outsb
stos
fiadds
mov
mov
cmp
inc
mov
adc
sbb
fistl
push
jns
cmp
sub
outsb
xor
push
cmc
sti
insb
in
mov
popf
mov
xor
stos
rorb
lods
mov
leave
shr
push
rep
jb
jl
scas
jne
insl
add
stos
sub
xchg
fsts
movsl
insl
les
dec
xor
js
add
inc
cltd
or
ss
xorb
sub
adc
sub
cmp
stos
cmp
jno
xchg
mov
mov
mov
mov
ficompl
cmp
sbb
add
je
and
push
jnp
repnz
push
rcl
sub
and
js
pop
shr
sub
sbb
movsl
cmpsb
loop
jecxz
inc
push
pop
nop
fwait
and
mov
push
jle
and
popl
dec
jg
xchg
fldl2t
orb
xchg
rorb
rclb
sub
mov
mov
or
mov
pop
testl
jnp,pt
cmp
jne
scas
sarl
pop
outsl
mov
mov
cmp
dec
sbb
fstpt
dec
mov
out
fadd
jl
aad
scas
jge
out
test
aas
sbb
call
or
in
out
jge
add
fildll
mov
xchg
scas
mov
cltd
sarl
jl
inc
sub
stc
out
inc
or
popf
pop
push
or
js
lret
lods
sarb
lcall
dec
imul
jno
mov
mov
mov
les
sbb
jbe
pop
adc
dec
or
sarl
sub
push
mov
loop
mov
xchg
test
js
jae
aas
idivb
add
std
mov
fnstcw
push
ret
fsubrp
movl
cli
add
mov
jb
out
mov
jo
pop
mov
dec
insb
fsub
sti
pop
adc
add
push
mov
or
xor
stc
sbb
neg
dec
shll
js
ja
sub
faddl
xchg
fnstsw
cmc
lods
push
out
addr16
fimull
movl
stc
popa
movsl
stos
push
cli
cmpsb
lds
xchg
dec
dec
xor
jns
mov
lods
mov
dec
dec
dec
dec
xlat
dec
aas
push
push
jge
out
icebp
xchg
test
daa
jnp
adc
ja
add
sbb
or
subl
in
sahf
dec
push
mov
lret
dec
leave
jg
aad
fwait
mov
stos
inc
into
lcall
push
aaa
or
cmp
jno
arpl
test
pop
ficomps
push
mov
call
and
push
lds
pop
pop
insl
push
out
rcll
xor
push
pushf
ljmp
add
out
lahf
imul
mov
in
stc
rorb
xor
sbb
mov
jg
mov
loop
sahf
mov
xchg
les
adc
bound
popa
mov
push
shll
pextrw
sub
push
push
sub
fcmove
or
sarb
add
xchg
jne
repnz
and
enter
fdivl
jp
pop
outsl
jnp
jl
lods
jne
cmp
and
and
fdivs
xor
aad
in
or
mov
push
xor
imul
cs
or
dec
clc
sub
mov
imul
mov
imul
and
lea
lcall
inc
jne
pop
popf
out
in
mov
enter
cli
sbb
inc
and
xchg
xlat
scas
movsl
pop
fcmovne
add
in
outsl
movsl
mov
mov
add
mov
cld
cs
enter
mov
or
and
mov
sub
stc
and
fcompl
cmp
jmp
les
aad
hlt
stos
out
and
add
sbb
lret
mov
cmp
inc
jge
mov
popf
jae
lret
push
js
int
ljmp
pop
cmc
lods
dec
xor
pop
cmp
insl
xchg
or
inc
add
mov
add
push
ret
or
and
lea
and
cmp
mov
rcl
shrb
add
push
cmp
mov
xchg
cmpsb
adc
mov
push
and
mov
pop
sti
int3
test
mov
cwtd
loop
fdivs
cmp
xor
div
mov
rolb
lret
or
les
pop
xchg
xor
bnd
adc
push
mov
dec
mov
jp
mov
adc
int
xor
inc
sbb
out
out
aaa
xor
pop
dec
pop
fwait
imul
cwtl
out
scas
push
inc
pop
int
lahf
loop
pop
mov
out
push
arpl
dec
mov
repz
lods
fcmove
xor
push
mov
sub
in
repz
push
sbb
mov
mov
out
lahf
int
pop
iret
cs
testl
mov
inc
in
js
lret
out
mov
adc
sub
add
rorl
inc
les
push
scas
and
cmp
pop
add
mov
jb
xchg
mov
or
fsubp
fmuls
pusha
stos
jecxz
inc
jp
fisubrl
and
out
adc
push
pop
mov
xchg
pop
fldt
sti
pop
push
cmpsl
shlb
push
es
and
in
add
add
sub
sbb
and
dec
or
xchg
push
fwait
das
fnstsw
adc
loope
movsl
xchg
pop
push
jl
mov
push
xchg
fxch
sbb
xchg
in
int
ss
subb
leave
data16
js
in
jg
decl
sub
jno
adc
or
mov
lods
insb
mov
add
scas
or
enter
push
mov
cmp
lods
fyl2x
hlt
mov
out
fwait
pop
dec
addl
cmp
cs
sub
sbb
xchg
fstl
daa
mov
and
or
je
aam
sbb
in
clc
inc
popa
fmul
add
shll
jne
lret
aam
cmpsb
addl
add
mov
mov
mov
mov
mov
jge
ficoms
sbb
xchg
out
ljmp
mov
add
ficomps
fcoms
mov
std
mov
xchg
dec
cmc
and
out
out
movsl
in
arpl
pop
out
outsl
je
fbstp
fadds
lods
mov
push
cs
mov
pop
stos
push
stos
xchg
out
clc
mov
ds
js
vpshufd
sub
adc
pop
adc
fiadds
jmp
cmp
sbb
fwait
and
maxps
cmp
das
jnp
mov
imul
sbb
mov
xor
mov
les
clc
pusha
jecxz
sbb
in
mov
mov
fcomps
cwtl
sahf
rol
xchg
sbbl
sub
jno
cmp
cmp
sub
pop
in
jle
lcall
out
xchg
xchg
out
lods
pusha
enter
arpl
insl
push
cmpsl
data16
push
in
shlb
enter
cld
pop
cmp
daa
divb
lea
fs
adc
out
add
out
popa
dec
or
mov
pop
add
mov
adc
lcall
pop
or
sub
insb
int
or
add
rcrl
xor
jg
push
add
les
stc
jnp
cmp
out
outsl
fidivrs
adc
xor
and
mov
push
stos
imul
xchg
ret
test
loopne
inc
rcrl
pop
cltd
dec
dec
push
dec
dec
mov
and
and
data16
pop
sar
nop
adc
or
add
addr16
outsl
mov
scas
inc
in
inc
and
mov
push
mov
fs
sbb
stos
sub
loop
and
add
rcl
cwtl
movsl
mov
mov
fwait
mov
mov
bound
sbbl
jne
inc
lock
cmp
jl
popa
std
in
jp
in
cmp
cmpsb
adc
in
cltd
mov
sub
push
in
mov
stos
mov
push
inc
push
xchg
cli
push
imul
ret
mov
sub
cmp
mov
push
lds
jecxz
xor
push
mov
insl
sbb
push
mov
fidivrs
inc
and
jns
inc
or
es
mov
enter
pop
pop
ror
fdivrl
je
sbbl
dec
adc
mov
xor
and
arpl
int
mov
in
shll
sarl
pusha
jae
sahf
test
lods
pushf
inc
mov
adc
test
aas
cli
mov
lret
jb
and
into
adc
imul
pop
inc
jecxz
mov
xor
push
add
xor
add
jnp
addr16
sub
sbb
sbb
and
loopne
cmp
pop
negl
shlb
mov
sub
mov
lahf
dec
xchg
adc
stc
shlb
inc
int
enter
cmp
pop
pusha
iret
mov
pop
dec
enter
gs
adc
scas
mov
xor
lahf
add
pushl
push
icebp
xchg
pop
loopne
dec
ret
sbb
jb
xchg
dec
fsubrp
or
lcall
dec
call
scas
and
bound
rorl
jmp
sub
popa
loopne
pop
pop
pop
jle
std
lret
stc
sub
jbe
sbb
mov
mov
in
jnp
insb
jbe
inc
rcrb
pop
sbb
xchg
push
sub
bound
jmp
movsl
out
mov
cmp
add
hlt
mov
icebp
sub
cs
or
mov
mov
ficompl
adc
js
add
bound
movsb
mov
push
inc
into
fwait
jns
dec
aad
inc
mov
adc
gs
or
xor
mov
sbb
jbe
push
adc
fmuls
jg
pop
mov
into
addr16
push
icebp
dec
cmp
cmp
sti
xor
pushf
out
jle
adc
fidivl
fs
xor
xchg
decl
or
inc
sub
cwtl
or
cmp
xor
lods
fcompl
inc
dec
out
mov
push
pop
mov
lock
lcall
ja
push
insb
adc
sub
pop
fs
int3
push
inc
sarb
scas
es
rorb
sti
cmp
inc
dec
mov
adc
ret
sub
mov
sbb
jnp
xchg
pop
mov
or
cs
test
std
sbb
pop
dec
jo
push
fisubs
lret
out
fbld
mov
push
mov
or
insl
mov
and
mov
les
sbb
repz
push
sub
mov
xchg
lods
movsb
nop
mov
stos
pop
inc
lahf
add
inc
mov
push
xchg
fnstsw
mov
inc
inc
int3
leave
sub
jle
inc
jno
pop
sarb
cmp
popa
cld
push
enter
add
repz
leave
jnp
dec
add
mov
int3
or
pop
stos
push
sarb
daa
adc
cmp
movl
inc
out
push
aaa
inc
dec
lret
dec
lcall
mov
mov
pusha
imul
push
mov
std
mov
ds
addr16
adc
fstps
jl
popa
dec
push
es
push
jg
mov
push
or
pop
xchg
dec
test
lahf
aas
sbb
lcall
out
frstor
bnd
add
add
insb
rorb
add
cld
subb
out
fs
inc
jnp
sub
and
dec
sub
mov
dec
sub
mov
outsl
mov
xchg
into
jge
aam
xchg
lcall
sti
call
cmc
popf
pop
nop
push
stos
enter
push
loopne
in
inc
mov
shrb
test
or
test
lea
fmul
adc
add
dec
mov
into
lea
out
jnp
out
lcall
mov
lods
or
mov
push
fistpll
inc
icebp
adc
rcr
push
mov
push
fwait
int3
cmp
xchg
scas
push
arpl
jo
das
ss
jne
or
add
insl
cmp
push
inc
scas
push
and
popf
mov
loop
cltd
loop
xchg
xor
xchg
adc
mov
cmp
stos
and
mov
lret
sub
jl
nop
sahf
add
sar
mov
inc
ss
ja
inc
push
out
sbb
mov
mov
jg
add
lcall
call
jl
cmpsl
repz
jo
cmp
scas
and
dec
fisttpl
loopne
pushf
aad
popa
ss
icebp
dec
fs
mov
adc
xchg
js
rcrl
cmp
les
jecxz
pusha
icebp
jo
fldl
pop
xchg
mov
dec
push
jbe
jecxz
add
cltd
nop
clc
pop
add
shrb
mov
adc
aam
sbbb
test
js
js
stos
jmp
push
popa
mov
and
outsl
or
or
test
or
ljmp
cmp
lea
mov
mov
dec
mov
dec
repz
test
lods
daa
or
js
xor
sarb
arpl
and
popa
mov
and
push
insb
add
cmp
dec
daa
jnp
mov
cltd
cmc
xchg
jne
xchg
push
xor
mov
sti
jle
imul
mov
add
data16
leave
or
out
inc
popf
orb
stos
loope
mov
clc
mov
sub
pop
test
bound
inc
xlat
lea
jecxz
inc
rol
data16
xor
inc
xor
scas
in
cmp
in
sub
xchg
pop
mov
and
sbb
clc
xor
adc
gs
mov
mov
push
scas
mov
ret
jg
inc
es
sahf
pop
mov
push
movsl
or
mov
mov
hlt
and
pop
cmp
aas
cmp
lea
add
cmp
cmpsl
or
push
mov
dec
ljmp
leave
gs
cmp
movsl
sbb
lds
push
dec
inc
in
or
or
notl
mov
jecxz
loop
jl
lods
hlt
pop
aaa
cmpsl
ret
jne
push
shl
or
xchg
mov
dec
xlat
adcb
ja
out
mov
sub
xchg
test
lea
push
rsqrtps
rol
adc
aad
mov
or
fidivrs
cmc
loop
xor
fldcw
scas
push
and
ret
jb
jns
in
sbbb
stos
ret
mov
add
loope
dec
mov
fcmovne
mov
es
jb
mov
addr16
sub
ret
scas
add
mov
shrb
popf
push
mov
mov
and
inc
call
mov
js
push
ss
jno
adc
mov
rorl
inc
xchg
and
mov
shl
enter
add
cmp
adc
xor
sbb
lods
jbe
xchg
cli
xchg
in
dec
pop
or
pop
lds
dec
pushf
in
or
in
cmpl
fstpl
pop
add
mov
adc
inc
fucomp
out
cwtl
into
sbb
cmp
xor
cmp
loop
jnp
cmp
dec
sub
dec
adc
mov
stc
lret
mov
jmp
fnstenv
fbstp
clc
pop
in
pop
sti
stc
enter
xchg
test
sbb
pop
int3
std
stos
fwait
lods
cmp
imul
push
ljmp
addr16
call
adcl
push
dec
pop
outsl
dec
xchg
addb
sahf
pop
xchg
mov
pop
fsubrs
xor
sbb
fstpl
lret
insb
jnp
mov
jecxz
cwtl
out
push
mov
imulb
cmp
adc
int
adc
mov
popa
shl
arpl
push
fstl
pop
mov
loope
add
mov
cs
mov
jl
clc
daa
sub
imul
enter
mov
inc
pop
adc
insl
add
rcl
pop
xchg
cmpsb
rcr
and
pop
mov
jne
cltd
dec
xor
inc
push
push
add
cmp
xor
in
pop
adc
out
and
out
subl
lock
jg
or
lea
ss
call
or
push
cmp
int
movsb
or
push
inc
sbb
cmpsb
shlb
mov
sahf
lods
cmp
sbb
adc
dec
pushl
jge
cmpb
data16
adcb
add
cwtl
insb
push
popa
xchg
fcmovne
ss
lcall
mov
jp
jl
divl
cmp
lcall
dec
mov
rol
ss
sbb
fs
repnz
jno
cmp
xor
or
jnp
inc
leave
loope
jmp
jmp
dec
fcompl
aad
dec
pop
int
push
jle
stos
cld
imul
mov
xor
adc
cs
cld
loopne
add
inc
setno
xchg
outsb
enter
xor
lods
sbb
scas
fcom
mov
or
sub
xorb
dec
jbe
loope
ss
xor
cmp
dec
mov
enter
cwtl
bound
fnsave
xchg
xchg
js
dec
sub
data16
mov
stc
mov
push
mov
mov
fnstenv
add
sub
ds
fstl
cli
push
daa
xor
pop
dec
ja
mov
faddp
xor
jbe
sbb
sarl
push
push
lods
mov
lret
mov
push
imul
fsubr
lods
xchg
out
dec
xrelease
mov
repnz
fisttpl
push
lcall
xchg
nop
and
bnd
and
es
cmpsb
sub
rcrb
icebp
or
and
xchg
dec
movsl
fidivs
mov
mov
mov
xorb
movsb
loopne
cmp
enter
xor
fnstcw
and
cmp
addr16
dec
dec
sbb
fildll
out
xlat
fcoms
ss
dec
pop
fdivp
shl
add
dec
pop
cmp
or
pop
jnp
nop
mov
push
incb
xchg
int
insl
pop
call
add
nop
rcll
and
rorl
dec
inc
stos
cltd
sbb
and
add
push
cmpl
lret
stos
lret
push
mov
xchg
movsl
addr16
test
imul
sti
xor
mov
lret
data16
inc
cld
and
dec
mov
frstor
adc
lret
xor
pop
adc
sbb
and
push
ljmp
or
std
sbb
repz
cmpsb
test
bound
insb
jp
test
push
sub
out
mov
cmpsb
cmpsl
xchg
ret
mov
pushf
icebp
sub
pushf
mov
push
fidivrl
lods
lret
mov
mov
inc
xchg
aam
inc
out
cmp
dec
aam
dec
push
dec
adc
add
push
repz
cs
or
push
mov
ljmp
sbb
idivb
cmp
stos
jg
insl
cli
loop
mov
adc
jg
jno
push
cmp
dec
insl
data16
stc
cmp
pushf
or
jbe
insb
push
dec
and
cld
aas
les
in
inc
cmp
icebp
out
js
cwtl
pusha
cmpsl
cmpsb
scas
add
outsb
pop
gs
pop
mov
sbb
jb
pop
mov
xor
lret
pop
jns
stos
add
sub
xchg
xlat
loope
xchg
aam
in
arpl
or
and
in
cltd
push
sbb
lods
xchg
nop
inc
inc
loop
mov
pop
adc
xor
jge
popf
icebp
push
and
js
aad
out
ficoms
or
rcl
shl
mov
push
out
jl
xchg
enter
or
pop
adc
and
mov
sub
sub
rcl
scas
ret
rol
hlt
and
test
xchg
cwtl
mov
lock
scas
fsubrs
add
xor
pop
jmp
clc
mov
clc
daa
insl
ds
mov
cmpsl
cwtl
jo
xchg
shll
pop
fadd
loope
xor
psubb
push
repnz
push
mov
loope
inc
arpl
je
shrb
adc
and
push
mov
popf
add
adc
lret
out
and
es
push
jnp
push
loop
mov
insl
add
movsl
mov
and
data16
ja
test
jmp
call
xchg
add
lds
pusha
nop
call
movsl
icebp
imul
out
inc
inc
pusha
into
stos
into
cld
leave
enter
test
adc
sarl
data16
pop
adc
xor
mov
sub
xor
lret
lea
xchg
and
in
ja
shrl
inc
cmp
jmp
repz
cltd
scas
xchg
dec
ja
sub
inc
lahf
fdivr
mov
js
pop
push
add
pop
dec
mov
mov
push
xchg
dec
nop
mov
shll
inc
jg
outsb
mov
fdivrs
test
pop
gs
je
pop
sub
mov
cmp
xchg
loopne
mov
jecxz
rdmsr
ret
mov
xchg
xchg
and
jle
push
out
pop
mov
and
lods
push
lahf
jae
cmp
pop
pop
mov
in
test
icebp
cmp
movl
inc
mov
mov
inc
out
jp
sub
mov
or
adc
cmpb
ret
push
and
pop
int3
inc
jbe
and
add
rcrb
push
dec
daa
inc
or
push
and
stos
mov
dec
mov
push
or
test
xor
repz
mov
cmpsb
nop
pop
jle
fsts
cmp
test
mov
dec
scas
add
shl
inc
and
adc
and
sub
imul
lcall
cmpsb
ret
sub
sbb
imul
pop
movsl
mov
sbb
iret
cmc
push
xor
mov
xor
and
inc
sbb
das
adc
mov
imulb
enter
mov
xor
xchg
push
xorb
push
cmpsl
cltd
dec
sbb
lods
and
lds
push
loopne
and
cmp
movl
sub
out
sbb
inc
push
outsl
ficoms
cmc
inc
or
add
cmp
imul
xor
lret
scas
cltd
dec
push
lcall
xor
inc
imulb
mov
pop
je
dec
popa
or
mov
sbb
or
mov
dec
fmul
sbb
xchg
xchg
frstor
popf
neg
or
inc
jno
xchg
push
mov
iret
adc
int
les
mov
aaa
mov
lahf
and
and
jg
rorl
fdivs
cld
cmpsb
cmp
mov
pop
xchg
cmpsl
mov
mov
in
xchg
inc
leave
pop
faddp
adc
getsec
movsl
das
jae
fists
js
shrl
mov
imul
mov
fisttpll
jg
loopew
popf
sub
ret
mov
mov
xchg
dec
push
pop
movsl
or
xbegin
adc
hlt
dec
jl
inc
out
mov
xor
dec
gs
and
hlt
xor
popl
pusha
bound
out
std
push
fdivp
xlat
jbe
aam
lds
mov
stc
jbe
adc
cmp
test
fildll
flds
xchg
pusha
inc
push
outsb
inc
push
cmp
pop
fstpl
pop
scas
mov
jo
insb
cli
in
inc
lcall
xchg
popa
and
gs
daa
outsl
fdivl
inc
popa
fnstsw
cmpsb
imul
xchg
int
and
add
inc
xor
into
lret
out
ret
mov
ficompl
push
mov
adc
mov
je
rorb
mov
shl
movsb
in
gs
outsl
hlt
lret
mov
outsb
call
and
sub
push
dec
aas
cmpb
pop
loopne
fcmove
or
fsubs
xchg
ret
dec
scas
popf
xchg
and
leave
fwait
jno,pt
cmp
cmpsl
std
lock
inc
movsl
inc
sub
push
inc
mov
lock
out
or
mov
bound
xchg
xchg
loopne
jmp
adc
icebp
mov
pusha
adc
or
dec
loopne
iret
test
lock
cmpsb
jmp
iret
cmp
sti
or
mov
shlb
out
fldt
out
pop
mov
push
lock
add
xor
jecxz
xlat
xchg
lret
ss
test
imul
add
lods
push
mov
dec
or
pop
lret
aaa
popf
in
repz
inc
or
arpl
es
mov
ja
add
std
and
and
mov
push
fidivrs
dec
dec
outsl
inc
and
sbb
movsl
pop
push
or
ljmp
lret
jp
xor
mov
push
shrb
add
pop
mov
leave
std
outsb
imul
lahf
mov
mov
pop
aad
arpl
int3
leave
mull
push
js
sub
enter
test
nop
fucomi
cmp
aad
xchg
cmp
inc
jl
push
sub
and
or
and
repz
pushf
das
int
mov
push
fistps
push
lea
mov
mov
sbb
xchg
add
pop
or
sbb
xchg
nop
aad
inc
xchg
out
sbb
scas
sub
mov
arpl
mov
add
outsl
testb
sti
ljmp
lcall
repnz
in
sbb
int3
mov
jnp
fidivrs
xchg
jle
mov
popa
xchg
out
and
inc
jns
ja
mov
sbb
mov
push
or
mov
inc
mov
and
aad
loop
dec
inc
outsb
fucomi
pop
dec
rorl
jmp
push
inc
scas
idivb
test
sti
inc
addr16
mov
imul
add
adc
push
test
subb
clc
ja
push
add
mov
aad
in
leave
sub
inc
adc
mov
out
test
and
pop
mov
clc
icebp
xlat
cli
mov
pushf
sahf
int
jmp
daa
jo
je
lcall
cmpb
cwtl
fdivr
xchg
mov
jle
xchg
inc
inc
lret
orl
jecxz
pop
pop
jbe
sub
sahf
adc
hlt
jo
inc
aad
add
in
pop
add
mov
jns
xchg
jmp
add
cmpsb
lods
flds
push
xchg
lret
jne
nop
repz
imul
mov
je
dec
adc
lods
mov
aad
out
sub
lret
pop
push
mov
sub
imul
adc
adc
leave
mov
pop
jns
or
xchg
test
lock
mov
jae
outsb
and
jmp
push
scas
pop
fisttps
jbe
out
jne
lea
cmp
movsl
mov
cmpsb
cwtl
pop
scas
pop
pop
pushf
movsl
lahf
and
cmp
es
jmp
jl
bound
jp
ja
pop
enter
lret
mov
fmuls
mov
idivb
inc
sub
fstpt
popf
mov
mov
int3
sub
dec
mov
leave
adc
push
ja
prefetch
push
test
scas
cmp
pushf
sub
adc
xchg
mov
inc
xor
scas
cld
cmp
add
mov
sub
je
push
sbb
sub
stc
ret
lock
cmpsb
insb
movsl
add
and
fnstsw
pop
inc
cmp
loope
in
push
cs
repz
cmp
outsb
lds
aad
or
pop
movsb
or
pop
and
in
rclb
dec
mov
scas
dec
cmpb
add
adc
data16
std
mov
fdivrl
xchg
jg
or
mov
mov
dec
sub
nop
nop
leave
int3
scas
mov
jno
sub
nop
mov
add
pop
repnz
or
pushf
xchg
int
sbb
pop
pushf
sbb
pop
divb
dec
fisubs
sub
mov
xor
sahf
lea
ds
addr16
xchg
lahf
and
jmp
cmp
mov
xor
cmp
xchg
andl
mov
in
inc
nop
pushf
dec
xor
or
popf
mov
nop
sub
sub
insl
xor
ja
mov
push
inc
test
xchg
adcl
imulb
rolb
sti
dec
dec
jb
dec
loope
jle
mov
or
cmpsl
in
js
not
mov
pop
lods
dec
sub
or
add
adc
pop
jb
repnz
xor
scas
cmp
clc
je
inc
aad
push
sub
xor
into
lahf
mov
pop
jbe
mov
fstpl
movsb
enter
sarb
jb
cli
loopne
push
xor
cmp
aam
pop
cmp
sbb
push
rclb
cs
in
adcb
pop
mov
adc
mov
mov
inc
jb
sbb
ret
xchg
xor
jmp
divl
or
pop
mov
shr
loopne
sbbb
vmovaps
popa
cwtl
mov
sub
sbb
lods
sub
imul
enter
icebp
push
push
jle
pop
enter
rcr
jb
sbb
rolb
out
cmpsb
mov
pop
push
push
outsl
mov
leave
outsl
sbb
xchg
daa
add
and
ja
mov
in
adc
and
inc
mov
cmp
xchg
adc
outsl
mov
inc
pop
arpl
fs
scas
aam
int3
jno
test
lcall
fwait
xlat
mulb
scas
lock
inc
pop
or
sub
or
mov
rol
stos
xorb
fwait
mov
mov
xor
mov
aas
std
mov
and
imul
enter
mov
shll
push
mov
fwait
sbb
addb
test
sub
out
sar
adc
shr
ret
adc
xchg
cld
jnp
jmp
stc
and
mov
scas
pop
dec
xor
xorb
push
mov
jae
int3
das
aas
xchg
adc
push
sbb
xchg
add
lock
mov
cmpsl
pop
test
jg
fimuls
paddusb
cli
sub
xor
xor
test
cli
pusha
rcr
out
adc
sub
clc
sub
pop
push
mov
fwait
push
cmp
mov
test
leave
call
clc
add
cld
xchg
lods
sbb
sbb
or
pop
lock
or
xor
and
and
mov
cmp
inc
cmpsl
xor
xchg
lahf
gs
ljmp
pop
dec
adc
loopne
loope
test
lret
pop
add
rclb
mov
das
sbb
xorb
nop
shl
inc
imul
popf
inc
mov
adc
cmpsb
cmp
inc
movsb
mov
shlb
pop
sbb
movsl
sbb
and
arpl
cmp
pop
jns
insb
imul
icebp
dec
adc
pop
aad
daa
mov
rolb
cld
loop
sub
or
lcallw
xchg
jg
fsubl
aaa
cld
les
and
idivl
sbb
mov
push
dec
dec
ret
imul
outsb
mov
mov
mov
inc
jmp
cmpsl
aad
ds
sub
and
and
xor
sbb
hlt
inc
shlb
outsl
mov
mov
lods
xchg
int3
das
push
jno
or
dec
and
daa
scas
jecxz
dec
call
cwtl
dec
stc
and
pushf
add
rclb
and
sbb
cmpsl
fmuls
adc
cmp
mov
pushf
mov
out
hlt
mov
call
sbb
mov
xchg
popf
add
push
int3
mov
pop
js
mov
mov
les
fs
xchg
test
xor
xchg
test
jl
pop
pop
pusha
mov
mov
pop
xor
fisubrs
and
lcall
push
rolb
int3
dec
test
jae
mov
outsb
jecxz
fwait
mov
sub
and
adc
mov
and
icebp
js
lods
push
adc
sti
dec
add
jecxz
dec
jecxz
push
push
jecxz
jno
test
or
mov
pop
push
stc
cmp
lcall
cmp
out
xorl
xchg
mov
push
or
jle
arpl
mov
jmp
push
cmp
and
cmc
sbb
es
imul
mov
test
jbe
nop
cmpsl
mov
cwtl
mov
fistpll
lea
push
sti
jge
fbstp
inc
inc
int3
jl
pop
adc
sub
xchg
cltd
js
negb
mov
dec
dec
mov
dec
push
fisubl
cwtl
cltd
push
ret
lea
rorb
push
lret
mov
popa
jne
xchg
push
je
cmp
add
aaa
in
das
dec
lea
cmp
in
mov
push
orb
iret
or
mov
cmp
out
cs
scas
xchg
sub
fdivr
dec
flds
lods
xchg
sbb
loopne
insb
arpl
xchg
sarl
imul
lret
in
lea
icebp
daa
es
negb
cmc
and
mov
jg
lcall
dec
xchg
cmp
push
cld
jne
jmp
jmp
cmp
test
xor
cltd
movsl
mov
cmc
outsl
mov
jno
xor
test
pop
mov
jno
push
inc
or
mov
aam
push
mov
outsb
add
adc
cmp
mov
jae
sbb
lds
pop
sti
dec
pop
sbb
xlat
xor
cmc
xchg
sbb
int
bound
dec
int
dec
int
outsb
or
inc
shr
xchg
xchg
hlt
push
dec
stos
sub
xchg
add
jl
xchg
sbb
shl
xor
idivb
dec
jmp
mov
pop
testb
push
or
jg
test
aas
pop
stc
jl
loop
cwtl
push
fs
cmpsb
sbb
and
fistps
cli
out
xor
sub
testl
push
mov
mov
xchg
data16
jo
scas
push
mov
mov
pop
out
lods
push
push
pop
fisubrs
fucomp
stc
jg
scas
fiaddl
test
ljmp
repz
data16
gs
cmpsb
invd
pop
data16
stc
xchg
ljmp
push
cmp
or
cmp
stos
push
outsb
lret
sub
je
xchg
arpl
pop
mov
push
adc
pop
mov
lds
push
xor
lahf
mov
mov
cwtl
orl
in
mov
clc
sub
stos
cli
cwtl
inc
das
test
and
lahf
scas
data16
sbb
mov
xor
outsl
mov
pop
and
cs
push
dec
push
add
mov
inc
mov
push
es
push
leave
cmc
sti
jge
std
lahf
and
dec
lea
mov
fidivrs
loope
pop
gs
mov
fidivrl
adc
sbb
rorl
xor
rorb
subl
push
movl
loope
add
mov
fdiv
mov
add
inc
rolb
mov
pop
jl
cmp
dec
stos
or
jno
cld
add
incl
jl
adcb
lcall
mov
loope
lock
mov
pop
xor
ret
fwait
mov
sub
cmp
in
and
divl
push
loope
adc
hlt
out
xor
mov
clc
lds
jg
out
movb
push
fldt
pop
push
jle
shlb
sti
mov
dec
dec
cwtl
hlt
movsl
cltd
hlt
pop
pop
and
enter
or
mov
repnz
and
xchg
fisttpll
lock
sub
inc
push
and
ret
pop
push
jmp
xlat
daa
xchg
idivl
inc
or
push
ja
add
out
inc
add
leave
push
lock
push
and
mov
dec
cld
dec
xchg
or
mov
mov
pop
movsb
lret
fwait
sub
inc
decl
fbld
imul
aas
inc
icebp
lods
lds
pop
mov
add
xor
rorl
push
mov
adc
pop
fmul
into
lds
pop
repnz
mov
xor
inc
hlt
mov
ds
mov
sbbl
or
mov
aas
xchg
push
and
sahf
push
data16
addb
shll
std
jo
cmp
pop
movsb
sub
jae
cmc
nop
arpl
sahf
cs
in
add
outsl
sub
clc
mov
pop
ljmp
push
inc
mulb
add
dec
mov
fnsave
adc
add
xchg
push
lcall
in
mov
call
cs
xchg
sub
push
adc
in
inc
ljmp
mov
stc
out
arpl
jg,pn
decl
push
aam
pop
mov
shll
inc
mov
das
aas
inc
inc
xor
mov
push
adc
or
popa
mov
mov
movsl
js
dec
or
mov
lret
push
xchg
mov
ss
loope
outsl
push
push
add
mov
lock
sbb
mov
mov
xchg
or
leave
mov
dec
adc
lcall
jecxz
loopne
lock
sbb
pop
lods
cmp
sti
mov
sub
mov
jo
sbb
mov
popa
out
mov
stc
mov
push
jbe
loope
push
pop
fstps
mov
lds
incl
sti
clc
pop
lcall
xor
sub
je
div
sbb
mov
mov
and
dec
rolb
stc
insl
cmpsb
jp
pop
sub
ds
and
push
sarb
jo
cmp
inc
aaa
sub
cmp
fucomp
jae
movsl
aas
lahf
and
popf
xor
mov
test
adcb
or
inc
sbb
das
lcall
pop
mov
xchg
or
push
lds
out
and
sbb
arpl
cmp
leave
cmpsb
loopne
es
imul
sbbl
push
std
and
imul
add
test
aaa
cld
lock
fwait
adc
stos
std
and
fucomi
inc
pop
jo
sub
jmp
fucom
std
roll
push
pop
cli
imul
shrb
mov
rcrl
rcll
cmp
ss
icebp
push
pop
and
sub
adc
stc
mov
push
cwtl
sti
test
insl
or
push
nop
add
aad
std
cmp
cmpl
popf
fistpl
sbbl
stc
jle
cli
fisubrl
fisubs
outsb
adc
dec
loope
push
nop
call
cmp
or
mov
xor
insl
xor
mov
cmovle
pop
pusha
out
scas
inc
movsl
mov
push
push
mov
jg
mov
es
fsub
in
sub
jg
jae
lods
cli
loope
cmp
sbb
cli
sbb
or
add
adc
insl
ret
rclb
push
mov
rol
xchg
in
out
inc
cmp
outsl
insb
push
test
xchg
dec
dec
int3
es
pushf
sub
cmp
hlt
fsubrs
xchg
lahf
stos
lods
sbb
pusha
add
fcomps
push
pop
pop
outsb
cmpsb
mov
xchg
fstpl
ss
mov
test
shll
ffree
pop
cltd
fsubr
incl
dec
mov
sbb
xchg
xlat
mov
aam
jo
jp
ret
call
repz
dec
mov
jecxz
je
dec
push
cmpsb
fbld
pop
xlat
inc
adc
popf
daa
jns
movsl
rol
pmaxsw
es
mov
jmp
adc
xor
mov
pop
subl
jne
adc
and
mov
adc
jp
adc
add
hlt
sti
jno
mov
iret
mov
lods
jl
cmp
mov
pop
mov
inc
mov
mov
xor
popa
shlb
jle
popa
stc
lret
adc
push
xor
xor
enter
xchg
xchg
inc
aas
add
addr16
jmp
xchg
or
in
stos
jae
je
mov
push
jp
rcrl
ret
lret
fidivl
push
cmpsl
xorb
lods
aad
dec
mov
and
cmpsl
xchg
in
push
es
mov
xchg
xchg
inc
imul
lods
xor
call
add
pop
std
popa
xor
and
mov
add
mov
sti
xor
icebp
fsubrl
jge
das
jnp
mov
or
mov
ds
pushf
mov
cwtl
xchg
fwait
dec
xchg
push
cmpsb
fpatan
adc
dec
adc
dec
das
sub
mov
adc
sbb
lock
test
fidivrs
in
call
or
sbb
shll
adc
icebp
std
jmp
sbb
and
push
sub
sub
scas
and
cmpsb
or
ss
dec
and
test
cltd
mov
aas
inc
popf
insl
or
lret
lret
mov
fsubr
or
scas
add
call
out
and
sbb
aam
jbe
shl
dec
bound
xor
test
inc
mov
aas
inc
cltd
xor
pop
ficoml
sbb
std
scas
fcmovnu
test
imulb
daa
rcrb
dec
mov
mov
xchg
pop
cmp
mov
pop
jb
fsubrs
xor
stos
sub
xchg
into
or
pop
inc
mov
mov
cwtl
jae
scas
out
push
jmp
adc
repz
jp
test
filds
sub
dec
push
xchg
shrb
jno
idivl
rclb
out
inc
mov
into
jb
int
imull
clc
jg
mov
sbb
inc
sub
bound
xor
add
out
nop
out
cs
ss
sub
lods
sub
jmp
push
add
movsl
std
movsb
mov
and
aam
mov
aaa
add
bound
notb
inc
hlt
outsb
lods
push
dec
repnz
inc
addr16
mov
mov
test
add
push
push
or
inc
mov
mov
shrb
jmp
and
pop
xchg
scas
bound
rolb
inc
int
sub
lock
int
adc
jl
pop
shrb
daa
pop
mov
inc
out
xchg
or
dec
ss
push
xchg
aaa
lds
mov
shlb
int
outsb
inc
mov
shr
adc
test
add
lock
adc
inc
cld
jl
push
ss
sbb
inc
data16
mov
rcrl
fdivl
filds
loope
pop
cmp
call
or
jmp
sub
mov
testb
in
jg
mov
daa
and
cmpb
ljmp
fcompl
xchg
inc
lods
and
fwait
or
xchg
cs
or
loop
ss
out
lods
in
aad
addr16
sub
ret
mov
xchg
popf
xchg
or
and
movsb
mov
add
push
sub
lods
and
xchg
mov
mov
or
insb
cs
sub
push
sbbl
cmpsl
repnz
mov
sbb
jp
jle
movsl
ret
xor
outsb
xchg
mov
xor
push
xor
pusha
imul
imul
pop
orl
jp
and
jl
ljmp
cmp
test
add
fxtract
stos
sbb
jnp
dec
arpl
dec
pop
lea
mov
aam
out
cmp
out
das
inc
jnp
enter
sbb
cli
and
test
mov
sti
pop
pop
daa
dec
cli
mov
out
cmpsb
xor
push
cmc
xor
pusha
mov
adc
sbb
cmp
inc
addr16
ja
xor
enter
or
movsb
inc
movsb
loope
push
fstl
int
sub
push
cmpb
mov
sti
loopne
xor
xchg
pop
cmp
pop
lahf
out
ret
xchg
les
dec
jbe
sbb
inc
std
pop
inc
cli
push
ljmp
push
cmpsb
imul
inc
mov
xchg
ds
push
movsb
hlt
lret
mov
scas
and
mov
aas
pop
mov
jb
outsl
pop
lret
xchg
and
fsubl
cltd
jle
ja
push
xor
adc
movsl
mov
ljmp
mov
push
adc
adc
lock
in
dec
stos
setp
and
mov
les
mov
cmp
jge
add
pop
cli
ljmp
out
jp
arpl
adc
stos
sarb
ret
adc
dec
lret
ret
repnz
divl
mov
push
imul
sbb
lahf
pusha
test
test
mov
jae
stc
in
mov
jnp
nop
out
out
dec
xlat
cmp
scas
movsb
fsubs
repz
add
and
add
and
inc
stos
sub
aas
jo
inc
stos
xor
jbe
into
cmc
mov
cmp
mov
dec
decl
aam
rorl
dec
flds
loop
bnd
scas
xor
jno
pop
outsl
adc
fwait
shll
out
mov
popf
pop
leave
popf
push
cwtl
arpl
push
cmp
dec
shll
adc
adcl
add
fwait
nop
ss
push
subl
jge
imul
pop
enter
add
fdivrs
cmpxchg8b
dec
inc
lret
push
push
in
test
mov
inc
add
pop
pop
sub
cmpl
lret
outsl
nopl
xchg
push
sbb
cmc
data16
out
ljmp
push
data16
roll
std
or
repnz
jo
pop
bound
jno
jno
push
push
xchg
add
mov
adc
or
movsb
sub
jns
arpl
mov
mov
dec
lods
mov
or
aad
and
pushw
cwtl
inc
dec
jl
dec
fs
pop
pop
xlat
mov
mov
ss
lcall
add
fimuls
and
out
adc
pushl
xchg
das
adc
or
sub
push
mov
std
inc
sbb
cmp
xchg
lods
ret
hlt
push
in
add
pop
fists
cmp
or
cmp
cmpsl
popf
push
lock
enter
inc
mov
scas
mov
aad
push
xor
jb
fmuls
sti
in
cmp
neg
add
mov
pop
or
inc
imul
xchg
das
ret
pop
aas
sbb
or
xor
fadds
shlb
insl
pop
or
jmp
mov
dec
or
inc
inc
in
xor
push
fiadds
out
xchg
int
gs
repnz
mov
xchg
in
add
xchg
insb
pop
cmpsl
push
inc
test
mov
xor
in
dec
insb
and
aad
mov
cli
add
outsl
adc
pop
push
movsb
cmp
and
or
popa
ds
push
xor
jae
fabs
jecxz
mov
xor
sub
add
add
pop
nop
jo
inc
mov
dec
cmp
or
push
cmpsl
arpl
cmc
js
xchg
xor
call
in
or
lret
xchg
lret
jmp
xlat
mov
pop
pop
cmp
shl
jecxz
mov
adc
in
or
pop
sub
cmpsb
addr16
pop
repz
outsb
sbb
and
into
ds
ret
inc
loope
pop
lea
fcoms
pop
cmc
xchg
mov
test
or
push
push
jge
es
xchg
in
pusha
inc
icebp
inc
mov
mov
pop
pop
lret
mov
sub
jne
jnp
push
clc
dec
test
sarl
shl
inc
mov
sbb
loopne
jbe
jl
cmp
pop
push
ljmp
cmp
cltd
outsl
or
hlt
sahf
out
xor
mov
inc
inc
inc
sub
pop
lods
push
cmp
mov
cmpl
je
push
outsl
imul
les
xchg
sub
dec
push
adc
lea
inc
ret
jg
xor
and
bnd
mov
jl,pt
jge
jmp
jmp
movsl
cwtl
das
jae
into
subb
sbb
in
ds
rcr
cltd
inc
je,pt
or
cmc
cld
outsl
sbb
aas
popf
int
xor
sub
mov
lds
mov
push
pusha
push
xchg
or
mov
xchg
dec
dec
pop
pop
dec
orb
cmp
pop
dec
xchg
dec
lcall
js
push
into
bound
add
inc
dec
xor
out
sti
ja
fsubs
dec
stos
adc
cmpb
or
jb
scas
mov
popa
cld
cwtl
bnd
into
lods
sahf
dec
mov
pop
cmp
loop
jp
outsl
adc
shrl
outsb
nop
push
inc
cs
fadds
lods
test
push
jne
adc
outsb
pusha
add
xor
js
mov
dec
jecxz
addl
dec
fs
aad
out
rcl
test
mov
jns
ja
mov
jp,pt
roll
cmp
push
jbe
mov
roll
mov
adc
xchg
arpl
movsl
rcll
xchg
xor
or
sub
and
mov
xchg
addr16
jns
jg
push
jbe
cmp
cmpsl
inc
dec
ja
fcmovnbe
scas
jns
rcl
push
mov
push
dec
outsb
test
je
xchg
in
clc
ret
adc
rcrl
call
mov
or
xchg
imul
outsb
out
insl
pop
sub
dec
mov
arpl
cmp
xchg
sub
push
dec
imulb
jnp
inc
mov
push
sbb
dec
jmp
enter
xchg
in
jo
enter
and
pop
mov
sti
testb
rcrb
sub
ret
pop
aas
stc
out
stc
fistl
enter
xorl
scas
nop
test
or
ds
cli
adc
clc
ja
shrb
imul
sub
xchg
cs
in
out
bswap
push
idivl
xchg
mov
scas
xchg
aas
adc
sbb
cltd
push
or
lea
push
lds
subb
ljmp
cmp
mov
aaa
pop
lea
xor
sarl
stos
jbe
xchg
adc
ljmp
ficoms
icebp
adc
daa
mov
or
fnsave
and
andb
xchg
mov
mov
sbb
dec
inc
pushf
mov
std
popf
adc
adc
ds
sbb
mov
jp
iret
rcrl
loop
stc
mov
xchg
and
xchg
mov
hlt
loope
loop
jne
ja
fs
aaa
lods
add
jae
hlt
cs
and
cmpsl
or
outsl
xchg
js
xor
jne
inc
lcall
pop
mov
outsl
lea
xchg
cwtl
cmp
and
mov
in
and
push
mov
mov
mov
xor
sub
imul
cmpsb
cmp
dec
mov
jae
or
outsl
arpl
sub
in
cli
jns
pop
adcb
cmp
or
mov
fucomi
fnstsw
stos
or
in
or
dec
jmp
cmp
xchg
jbe
ret
shlb
fistpl
lea
test
rcrl
stc
cld
pop
pop
pop
pop
xchg
mov
les
mov
std
mov
in
add
inc
pop
and
fimull
sub
lods
inc
mov
cmp
lcall
mov
jl
inc
into
out
imul
cmp
and
cmpsl
popa
xchg
push
call
pusha
mov
mov
clc
lea
mov
sub
in
mov
xor
push
loopne
jp
test
stc
outsb
dec
mov
insl
in
je
aaa
std
adc
inc
and
xchg
aaa
jo
cld
push
cs
push
sub
inc
enter
stos
test
jl
dec
and
jb
jns
push
bswap
add
mov
jnp
sub
loopne
inc
mov
repz
pop
jbe
push
sub
sub
adc
sti
xchg
jns
mov
or
xchg
pusha
xchg
mov
xlat
test
shrb
sahf
lods
or
jg
inc
sti
xchg
push
aaa
dec
mov
mov
int3
adc
mov
into
inc
mov
pop
jl
sub
lock
jg
mov
shrb
dec
xor
gs
fiadds
pop
shrl
scas
sti
xor
sub
or
pop
inc
mov
ja
rorb
mov
cli
cmp
ja
cmpsb
test
stos
xorb
adc
fldcw
mov
push
enter
xchg
add
inc
mov
hlt
mov
xchg
aam
ljmp
mov
add
enter
mov
cs
inc
and
adc
cld
inc
and
add
lret
fcomp
in
jne
xchg
mov
sarl
aas
in
and
mov
imul
sbb
xor
cmp
dec
sbb
mov
sbb
push
cmp
aaa
dec
push
insb
in
jae
mov
xor
sub
les
xchg
mov
pop
fistl
arpl
popa
pop
sub
cmp
mov
cs
sub
jns
jmp
rcl
pusha
pop
test
sbb
mov
call
sbb
mov
or
call
test
xor
fisttpl
push
gs
cs
mov
shrl
sbb
push
popa
pop
mov
rolb
mov
iret
setle
mov
cltd
pop
xchg
cmp
add
sbb
pop
add
and
ret
and
push
xor
gs
test
icebp
cmp
or
mov
sbb
sahf
lds
ljmp
dec
ret
mov
negl
pop
sbb
jo
xchg
push
pop
shll
mov
mov
outsb
xor
push
mov
loop
rorb
roll
mov
cmp
fcomi
adc
cmp
iret
dec
std
pop
or
fnstsw
or
mov
mov
jmp
cmc
pop
mov
into
sbb
dec
pop
add
scas
out
shll
in
push
pushaw
mov
in
add
mov
js
cmp
insl
lods
sti
lods
add
mov
adc
cltd
add
push
std
test
rcr
loop
cmpsb
sbb
cmp
and
add
or
mov
sbb
push
fstpt
cmpsb
push
and
hlt
rol
mov
pop
jg
into
scas
pop
xor
stos
cwtl
sahf
push
pop
pop
mov
outsl
xchg
add
in
stos
push
mov
pushf
push
cltd
and
or
jnp
nop
jno
jb
mulb
stc
and
insl
pop
inc
in
xor
out
or
sbb
je
mov
inc
xchg
or
shlb
fstps
rol
inc
jmp
sub
fs
loop
in
mov
push
idivb
std
icebp
nop
inc
flds
and
addl
or
pop
jbe
adc
or
pop
sub
sbb
popa
push
sub
shll
movsl
mov
push
out
rorb
dec
testl
dec
cwtl
aas
jne
push
push
push
sahf
or
pop
dec
cli
mov
pop
jl
stc
and
xchg
jecxz
xlat
lods
dec
pop
stc
fcomi
xor
push
sti
xchg
pusha
repz
xlat
lret
push
pop
jnp
stc
pop
push
iret
mov
ficoml
dec
mov
push
sbb
cmc
cmpsb
testl
icebp
and
dec
sbb
push
ficomps
sub
mov
and
dec
es
sbb
stos
inc
hlt
fwait
lods
sarl
sbb
xorl
gs
dec
int
dec
jmp
addb
lret
mov
jae
pushf
movsb
mov
or
adc
repnz
dec
sbb
sti
xchg
sarb
add
es
les
push
xor
dec
jmp
or
shr
negl
notl
push
cli
lds
das
mov
int
xlat
adc
jnp
daa
mov
jns
sbb
bound
push
dec
aas
rcrb
ficomps
lahf
shl
mov
inc
mov
lds
repnz
enter
daa
inc
push
jmp
mov
or
jle
push
pop
xchg
sub
cltd
sbb
mov
cmp
push
cmpsl
jle
add
mov
arpl
pop
out
cmc
lods
mov
or
scas
out
inc
movsl
pushf
aaa
jno
sbb
imul
dec
fldl
or
aam
sub
in
mov
push
push
cli
mov
sub
sub
shll
mov
mov
aad
arpl
xchg
clc
or
fadd
add
inc
and
lods
mov
lods
sbb
or
and
xor
movsw
subb
repz
jle
pushf
dec
and
push
mov
xchg
push
dec
gs
hlt
sbb
repz
push
push
pop
xor
push
lret
pop
pop
cmpsb
dec
stos
sti
jmp
jecxz
sub
lods
or
lds
mov
mov
cli
inc
jmp
repz
stc
subl
cmp
mov
or
in
leave
or
orl
xlat
pop
and
clc
test
imul
test
shll
aas
and
lret
pusha
pushf
aas
push
sbb
xchg
arpl
xorl
xchg
pop
mov
rcrl
pop
bound
push
mov
test
or
stc
lcall
sbb
test
pop
lret
pop
mov
sub
sub
xchg
adc
stos
xchg
mov
mov
ret
sahf
inc
mov
pop
lret
in
mov
push
inc
aad
dec
or
add
mov
xchg
repz
movsb
popf
out
aad
and
ficomps
push
mov
mov
inc
aad
shlb
add
les
xchg
adc
cmp
js
mov
imul
xor
jbe
outsb
sbb
add
push
fmuls
arpl
or
sub
xor
mov
movsl
xchg
movsb
pop
dec
mov
xor
scas
es
icebp
test
in
lcall
mov
pop
lahf
fsubrp
fbld
xor
scas
test
sub
pop
lahf
pop
inc
test
jecxz
mov
adc
cli
leave
mov
mov
inc
mov
imul
push
sub
scas
pusha
sub
subb
enter
mov
std
int3
add
or
les
into
fsub
mov
loopne
imul
inc
andl
or
sub
imul
stc
jle
jecxz
imul
data16
les
sub
pop
inc
negb
inc
ret
ja
pop
jge
aam
xchg
pop
repnz
mov
add
testl
pop
not
cmpsb
jmp
adc
repz
ja
pop
or
adc
pop
xor
loop
fcomp
sbb
or
imulb
clc
mov
mov
xor
jo
std
push
or
dec
push
fwait
mov
aas
in
and
test
push
in
out
mov
out
dec
sub
cmp
into
jmp
ljmp
out
lcall
jmp
test
cmp
push
mov
sbb
adc
nop
outsb
xor
negl
pop
push
sub
sub
faddp
cmc
pop
js
andl
imulb
dec
jecxz
sub
in
dec
xor
fwait
mov
inc
sarl
cli
mov
mov
lcall
xchg
out
in
xchg
loope
out
mov
or
aam
mov
jg
aaa
movd
andb
shrl
push
in
ret
jnp
adc
fnsave
cwtl
mov
fldenv
cli
cmpsl
dec
mov
push
cwtl
outsl
in
faddl
ret
popa
xchg
jmp
fwait
jg
mov
inc
ffreep
mov
xorb
imul
xchg
mov
pop
lret
ret
dec
mov
and
mov
push
sahf
mov
in
std
insb
adc
mov
mov
rcrb
cmp
mov
inc
cmpsl
push
sub
xor
mov
push
jle
popl
test
adc
sub
add
pop
jne
loopne
jmp
mov
int
push
sub
or
nop
mov
pop
inc
mov
int3
out
push
mov
es
lods
cmc
das
pop
or
cmp
rcll
pop
mov
jae
dec
mov
sub
dec
inc
js
xchg
loopne
scas
rcll
ja
loop
jl
mov
mov
sbb
daa
ss
mov
shll
ret
adc
addl
aad
mov
and
sbb
cmp
adc
push
bnd
sbb
mov
xchg
rcl
test
push
cmc
aaa
sbb
xchg
xlat
sbb
jo
rcl
cltd
ss
pop
dec
test
mov
push
in
leave
adc
jmp
repz
mov
imul
out
stos
sbb
je
popf
sub
add
enter
jnp
divb
push
orb
adc
cld
xlat
ret
inc
inc
call
rorl
daa
add
xlat
leave
inc
fbstp
mov
test
xchg
sbb
mov
push
sbb
xorl
pop
dec
leave
outsb
insb
xor
and
xor
jnp
icebp
and
jno
loop
popa
in
testb
cmc
sub
sub
js
mov
inc
subb
popf
lock
sub
inc
adc
xlat
mov
pop
adc
icebp
iret
jp
jae
mov
and
outsl
cmc
mov
or
pop
nop
xlat
mov
loope
jnp
add
xchg
sub
jl
mul
lret
jne
repz
jb
je
mov
lcall
popf
repnz
ror
mov
xor
pop
xor
repz
xor
fimull
push
mov
in
cmpsl
dec
aaa
leave
imul
bsr
xchg
add
test
push
leave
addr16
mov
divb
push
cld
jge
sub
pop
ret
adc
rcrl
repz
pop
or
es
aam
mov
sti
xchg
mov
mov
sarb
sub
fsubrl
fwait
mov
mov
sbb
mov
push
jns
adc
fucomi
pop
and
cmp
push
es
jmp
pop
xor
int3
test
pop
xor
add
cmp
movsb
pop
jge
inc
xchg
mov
xor
xchg
addl
xor
inc
xor
das
gs
lods
imul
mov
pop
and
mov
mov
out
clc
inc
test
stos
add
pusha
decl
and
movsl
jl
shr
negl
pop
movsl
add
cmc
orl
dec
add
xor
lock
es
sbb
lods
push
mov
rorl
mov
jns
lret
jg
je
rorl
jl
jb
pop
test
mov
aas
lds
sub
mov
imul
xchg
jmp
int
sub
pop
lret
push
mov
pop
pop
xor
and
xor
xchg
mov
sbb
gs
dec
adc
and
mov
dec
push
push
cltd
or
lcall
cs
jp
push
cmp
ss
push
jns
jae
xchg
pop
stos
jecxz
cld
popa
mov
fs
mov
andb
int
pop
sub
cmc
cwtl
sahf
jecxz
jb
fdivs
cmp
cmpsb
paddsb
dec
adc
fs
movsl
pop
inc
lock
dec
jmp
mov
cmp
ja
mov
in
dec
out
mov
subb
scas
out
push
data16
pop
add
es
mov
outsl
cwtl
add
popf
adc
pop
inc
xchg
cmc
in
pop
filds
xor
sub
mov
or
sbb
and
orl
dec
int
mov
jp
aad
jmp
adcl
cwtl
cli
and
popa
pushf
rcll
sbb
and
sub
mov
pop
or
adc
leave
dec
mov
and
lock
pop
dec
jno
xor
and
shrl
cwtl
insb
scas
xor
lods
lods
pusha
mov
push
test
or
cmp
xchg
jge
sub
xor
sbb
orl
out
mov
cmc
aas
or
lods
fsubs
pop
nop
aad
sbb
cltd
dec
dec
push
aaa
loope
int
addr16
pop
lea
xchg
pop
pop
fwait
insb
push
mov
mov
mov
loopne
popa
cmpl
xchg
les
pop
cmp
mov
cli
xchg
pop
lret
hlt
or
dec
pop
cld
mov
cmp
jnp,pn
fstpt
arpl
repz
fadds
sbb
xlat
push
sub
adc
daa
iret
fists
fcom
in
mov
inc
leave
fucomip
cmpsl
push
cmpsb
sub
jl
sti
push
push
fwait
inc
pop
or
or
add
icebp
imul
rcr
mulb
xchg
push
dec
inc
inc
sbbl
rclb
inc
sub
out
fxch
movsb
lds
pushf
jle
sub
lea
out
adc
ret
mov
pop
adc
mov
pop
int
push
pop
arpl
pusha
mov
sahf
dec
sahf
sti
daa
call
sbb
push
cmp
mov
das
add
and
mov
sbb
ss
cli
into
sarb
ret
add
add
mov
xchg
fstl
popa
sub
hlt
and
mov
scas
enter
xor
addr16
push
hlt
pop
adc
sub
push
and
loop
mov
cmpsb
pop
lods
xchg
loopne
andl
mov
pop
insl
adc
push
xor
xlat
fdivl
mov
js
xor
mov
test
popf
jns
enter
push
pop
sti
ret
mov
movsl
aas
enter
lods
das
lods
jo
pop
sbb
test
push
lods
ret
je
shl
or
js
aam
sbb
xchg
and
mov
xchg
cmc
push
in
bound
shll
lods
sbb
inc
push
lock
xor
fucomi
inc
fisubs
cltd
ds
push
lock
jnp
cmpsl
inc
xor
cmp
movsb
mov
aad
outsb
mov
sub
sbbb
in
in
mov
std
cli
dec
jmp
pop
std
xchg
rolb
jmp
je
outsb
push
push
xchg
nop
rcl
and
jns
in
out
jmp
mov
nop
gs
pop
push
mov
mov
mov
cmp
popa
popf
pop
sub
add
sub
jg
pop
ljmp
outsb
call
or
inc
outsl
adc
cmp
sbb
insb
mov
cltd
push
cld
xchg
push
jle
cmp
sbb
cmp
dec
jp
push
lcall
into
stos
stc
dec
jp
jle
leave
int
xor
test
adcb
adc
sub
mov
xlat
add
call
lds
faddl
xor
mov
lcall
push
loop
add
jnp
xchg
adc
mov
outsb
add
cmpsb
lret
stc
aad
inc
cmp
jae
repnz
cli
jnp
cmpsl
sub
shlb
dec
mov
gs
jl
sti
imul
add
negb
jle
fidivl
movsb
sbb
xchg
in
mov
push
push
jle
ror
jg
and
popl
cmpsb
jge
cmp
sbb
jle
popa
cli
mov
fcmovnb
pop
inc
dec
adc
xchg
mov
test
sbb
fwait
jp
cli
mov
arpl
push
pop
cmp
es
xor
aaa
ljmp
pop
push
pushf
mov
jmp
inc
addr16
pop
push
dec
xchg
scas
xor
mov
push
fdivrs
adc
or
jg
out
fimull
cmp
push
xchg
cmpsl
xchg
xchg
mov
in
ret
fmul
ja
inc
jae
out
inc
cwtl
push
cmpl
hlt
sub
stc
mov
mov
pop
add
push
adc
fbstp
sbb
addr16
cmpsb
xchg
xchg
sbb
fadd
cmp
xor
int
dec
xchg
jb
call
adc
divb
mul
jb
mov
jnp
cltd
jno
sbb
imul
dec
sti
jmp
push
es
dec
pop
jp
mov
lea
lahf
lock
test
dec
add
dec
mov
mov
adc
addb
loope
xor
stc
mov
push
xor
mov
imul
lods
imul
or
push
adc
int
pop
ret
mov
in
or
stc
pop
dec
fidivl
push
pusha
dec
lea
popf
jecxz
cmpsl
in
mov
cmp
aam
clc
add
leave
xor
xchg
mov
adc
jbe
mov
or
hlt
mov
push
fwait
dec
dec
into
mov
cmc
leave
loope
inc
push
cmc
push
adc
or
mov
lea
sub
fdivrl
push
clc
mov
addl
decb
xchg
lods
bound
xchg
add
lret
loopne
fs
fiadds
push
rcrl
ret
in
sbb
insb
add
fs
shl
test
in
push
out
pop
mov
xor
and
or
jno
sub
push
mov
clc
jp
sar
les
cli
std
mov
in
popa
setne
insl
jne
ret
push
pop
mov
dec
push
adc
nop
or
or
aas
divl
inc
ljmp
gs
lds
scas
js
pusha
cmpsl
call
mov
jns
pop
add
adc
mov
out
xchg
or
pop
loop
pushf
mov
xor
cmp
sub
mov
cs
popl
call
mov
xchg
mov
xor
int3
mov
and
inc
je
mov
mov
pop
sbb
xor
mov
cmp
shlb
xchg
out
mov
adc
inc
test
adc
jbe
mov
test
stos
decl
inc
test
ficoml
jnp
mov
push
fsubrs
add
cltd
insb
cld
push
call
jbe
cmpl
mov
shll
fcompl
fmull
fwait
mov
or
mov
cs
sub
jne
jbe,pn
popa
ja
push
iret
sub
test
add
mov
xchg
jnp
leave
test
shlb
sub
or
inc
ret
stos
add
xchg
dec
rolb
ret
or
dec
mov
iret
cmpsb
lahf
or
sahf
insl
mov
push
rorb
or
pop
jecxz
gs
mov
jl
orl
push
push
js
enter
mov
pop
mov
out
cld
sub
sbbb
push
sub
clc
bound
lods
sub
xchg
in
addr16
in
test
xor
dec
testb
aas
xchg
fmull
call
testl
lods
dec
adcb
sub
jp
arpl
js
hlt
pop
test
push
orl
data16
xor
jle
xchg
sub
ret
or
jmp
sahf
push
das
xor
jg
cmp
mov
sbb
out
fnstsw
or
jl
stos
dec
fcompl
int
or
test
fdivl
subb
das
adc
or
daa
mov
lahf
pop
ja
mov
mov
loopne
mov
pop
nop
or
call
insl
pop
mov
xor
fadd
sub
mov
push
push
push
mov
mov
cltd
loope
cwtl
in
push
loope
cmp
stos
pop
loopne
enter
je
sti
jne
in
sbb
xor
jns
lock
outsl
jno
lods
xor
rcrb
sub
xchg
and
dec
xchg
mov
sub
xchg
out
push
and
xor
movsb
lret
in
stos
xchg
faddl
sarb
test
add
cs
imull
insl
cmp
jns
xor
loop
push
add
je
mov
add
test
stc
mov
inc
pop
inc
std
dec
stos
arpl
test
icebp
andl
in
out
add
xchg
and
movsb
insl
inc
or
pop
cmp
and
fnsave
or
xchg
enter
push
jo
fisttpl
scas
daa
pop
and
pop
imul
mov
ja
call
mov
or
lcall
fisubrl
inc
jmp
insl
and
xchg
nop
es
cmp
adc
movl
lods
mov
and
push
adc
inc
and
ljmp
or
pop
fs
fadds
in
stc
fcoml
popl
mov
push
inc
dec
jle
push
fistps
fistl
fldenv
mov
addl
test
push
lea
imul
mov
fcom
xchg
push
inc
and
push
mov
jo
mov
or
xor
fsubrl
and
xor
sbb
xchg
arpl
dec
and
pop
insl
test
cmp
mov
cmpsl
xor
pop
push
sahf
xor
pop
pop
int3
xorl
sbb
aam
sarl
add
leave
into
ret
push
fstps
lcall
jl
arpl
imul
lahf
and
jmp
ljmp
jbe
stos
xchg
mov
cmp
jno
fucom
mov
shll
pop
fidivs
push
addl
test
sysexit
dec
rorb
iret
shlb
adc
fistl
cmpsl
adc
loopne
xor
fwait
shl
sarb
and
bound
inc
xchg
cs
call
adc
nop
cld
and
pop
in
jbe
jb
clc
aas
xchg
and
lea
int
add
pusha
dec
rep
dec
in
dec
mov
lods
pop
and
repnz
sub
or
xchg
into
mov
push
push
test
push
or
imull
std
repz
mov
xchg
scas
or
xor
loopne
jbe
adc
add
stos
jae
cs
sarl
sbb
loopne
ja
maxps
xlat
call
cltd
jo
sbb
xchg
mov
lea
jmp
in
and
insb
loopne
push
inc
push
subb
jle
lods
ret
testl
inc
sahf
bound
cmp
cmp
lcall
dec
jno
push
pop
xchg
mov
sub
xor
test
iret
jae
pop
and
outsl
sbb
stos
mov
mov
pop
mov
jne
ds
das
mov
xchg
mov
imul
adcb
je
mov
ds
sbbl
mov
mov
cmp
add
jle
dec
div
and
mov
aas
mov
into
cli
in
ret
icebp
ds
pop
sub
aad
jnp
ljmp
jo,pt
mov
jg
cmc
xchg
movsl
hlt
addb
or
lea
or
in
and
gs
ljmp
cwtl
pop
inc
inc
cld
xor
rorb
adc
mov
aam
daa
sbb
fbstp
mov
fcomi
into
pop
subb
and
arpl
xor
imul
xchg
das
adc
out
mov
add
aam
push
pop
inc
cmpsl
xchg
fldt
test
mov
mov
or
fdiv
popa
mov
xlat
and
pop
jno
test
mov
and
pusha
add
popf
popf
cmpsb
sbb
scas
out
inc
in
enter
cmpsl
sti
shrl
jp
xchg
inc
xor
or
fcomps
icebp
rcrl
out
stos
std
add
out
or
jb
xor
and
cmpsb
add
aad
hlt
cmp
xor
sub
xorb
sub
jb
inc
mov
mov
orw
inc
sti
mov
mov
mov
mov
rorb
mov
repnz
sub
jmp
pop
inc
stc
mov
jb
inc
mov
adc
jecxz
cmp
jno
js
xor
mov
push
adc
aas
xchg
sahf
mov
inc
pop
pop
jbe
add
stos
push
mov
and
ret
jnp
shl
icebp
jle
stos
test
loope
mov
andb
jns
pop
mov
pop
push
iret
out
lds
repz
dec
push
mov
mov
mov
in
add
mov
jns
insl
loop
inc
dec
loop
ret
andl
sarl
ljmp
add
lods
mov
dec
or
inc
repnz
imul
cmp
shrl
ret
xor
enter
push
pop
cmc
lea
xchg
sub
mov
scas
jecxz
stos
icebp
test
jle
lcall
aad
mov
ret
mov
xchg
in
stos
lds
dec
cli
lret
xchg
das
or
fcmovnb
push
push
divb
and
movsl
and
daa
mov
movsl
jno
inc
cld
mov
dec
or
cmp
sub
inc
jae
rcl
and
out
jo
mov
sbb
popf
pop
in
cmpsb
mov
hlt
xchg
dec
pop
sub
or
push
and
mov
pop
test
cli
xchg
vmovsd
adc
jnp
xchg
adc
or
and
cwtl
push
or
iret
lcall
mov
sub
push
mov
inc
xchg
pop
cwtl
adc
xor
jb
cmp
pop
dec
sub
adc
jb
lcall
adc
ss
push
push
rorb
sar
or
inc
lock
xchg
mov
cld
js
das
lock
xor
or
out
sub
mov
cmp
sbb
add
pop
pop
fidivl
xchg
pop
cmp
stos
and
fadd
pop
lret
jmp
push
jmp
mov
adc
fdivs
xchg
imul
mov
imul
adc
cld
xor
sbb
icebp
inc
dec
push
arpl
test
pop
sbb
std
xchg
mov
sbb
inc
movsb
lcall
inc
daa
pop
mov
sub
mov
fistpl
inc
jl
clc
je
iret
adc
or
sbb
jnp
into
cs
add
incl
in
lds
shl
mov
ret
scas
push
adc
xor
push
mov
stc
nop
push
mov
dec
sub
add
xchg
icebp
ret
jae
push
pop
mov
aas
scas
pusha
fs
insb
popf
pushf
out
dec
and
ljmp
inc
data16
aad
dec
adc
ss
jl
ja
or
sbb
sub
push
fdivl
out
mov
repnz
jmp
int
pop
fmull
aas
imul
pop
iret
dec
in
test
andb
dec
cli
pop
mov
jmp
out
sti
repnz
mov
aad
mov
sub
leave
insb
mov
repnz
std
cwtl
xor
fldcw
rolb
dec
push
movsb
in
into
int3
jle
mov
aad
out
push
mov
jecxz
xor
mov
les
dec
mov
xor
mov
xlat
stc
jecxz
adc
or
or
fucomi
sbb
jne
jo
and
sub
jle
push
cmc
lds
lahf
out
sarb
sti
les
aam
and
fdiv
test
pop
ss
sub
mov
cmp
mov
mov
andl
cli
mov
repnz
aaa
inc
dec
scas
sub
subb
jb
xchg
out
jge
dec
mov
std
nop
aaa
jbe
insb
or
mov
inc
les
xchg
jb
mov
xor
aas
sub
pop
dec
daa
loop
nop
adc
inc
push
fs
ljmp
aaa
cld
pop
and
jmp
fcmovnu
mov
push
clc
arpl
mov
aaa
pop
push
sbb
cmp
pop
data16
not
mov
fmuls
jp
jo
ret
movsl
pop
mov
or
mov
pusha
or
icebp
pop
into
sub
xor
jnp
adc
pop
jb
sub
pushf
push
sub
mov
or
push
and
out
inc
mov
xor
loopne
in
cltd
je
scas
rorl
pop
mov
jmp
pop
popf
sbb
js
adc
addl
bound
mov
jbe
pushf
mov
jmp
sarl
in
mov
daa
notl
push
sub
jle
dec
sub
xchg
repz
ljmp
loop
dec
push
into
repz
dec
movsb
mov
fistpll
mov
in
mov
sbb
dec
call
push
inc
fnsave
inc
arpl
ret
jno
mov
push
cmpl
imul
inc
sbb
cmp
push
enter
mov
data16
mov
xor
pop
bound
adc
sbb
pop
xor
mov
add
cwtl
mov
pop
jp
ljmp
insl
dec
or
in
mov
fcoml
inc
aas
andb
xor
test
ds
mov
icebp
imul
adc
and
cwtl
pop
mov
ficoml
mov
aad
fbstp
or
pusha
sub
or
jl
popa
jne
out
sahf
dec
js
jb
push
jp
es
xor
sub
aad
or
les
xor
mov
jne
icebp
xor
xchg
mov
clc
pushf
fimuls
xor
jmp
int3
push
out
sub
pop
fildll
sub
and
dec
fadds
aam
sub
inc
sub
or
cmpxchg
xor
je
loop
mov
mov
push
add
inc
push
lahf
dec
sbb
repz
add
test
mov
loope
mov
mov
mov
gs
dec
ljmp
jns
xchg
adc
mov
jecxz
outsb
cmp
lret
or
nop
gs
and
nop
fsubs
enter
sbb
test
ret
jp
jl
gs
out
les
jmp
mov
mov
dec
insb
or
call
jmp
mov
insl
mov
out
fildl
test
dec
sahf
test
mov
sub
pop
or
jb
je
cwtl
jge
cmp
testl
dec
mov
je
ja
jecxz
cmc
movsl
inc
fldt
mov
inc
sub
dec
adc
xorl
xchg
imul
enter
sbb
faddp
add
lds
clc
mov
adc
adc
cwtl
pop
xor
mov
sbb
movsl
andl
xchg
ficomps
loop
jg
scas
add
dec
xchg
sbb
shll
xchg
faddl
push
std
movsb
lds
cmp
lock
inc
mov
incb
clc
pop
dec
lods
inc
addb
dec
mov
jl
adc
or
mov
pop
jno
mov
andl
ljmp
dec
rclb
sub
scas
scas
or
test
test
nopl
sub
sub
scas
and
lcall
dec
scas
push
loopne
mov
cmp
movsl
js
lods
jl
adc
cmp
fistpll
xchg
mov
pop
repnz
add
xor
and
xchg
xchg
pop
fsubrl
inc
ds
mov
fwait
das
lock
cmp
stc
or
and
js
add
dec
or
mov
jle
jo,pn
popf
push
ret
mov
cmp
sub
decl
iret
addr16
sub
inc
pop
push
pop
jnp
xchg
adc
push
je
mov
loope
mov
dec
negl
pop
test
ret
std
lods
mov
and
sbb
outsl
jl
jge
xchg
cwtl
and
addr16
repz
xor
inc
push
or
adc
insl
shll
outsl
or
sub
insb
sub
test
pop
lret
cmpsb
je
lret
test
repnz
repnz
data16
dec
or
andl
test
sahf
or
add
push
pop
add
addr16
std
xchg
mov
sub
add
push
cltd
dec
mov
cltd
or
or
jle
test
xchg
and
insb
loopne
scas
sbb
pop
inc
clc
adc
sbbb
test
dec
adc
inc
mov
ss
inc
lock
lds
push
leave
enter
mov
insb
faddp
mov
and
inc
inc
sub
addr16
inc
jb
movsb
inc
push
loop
dec
push
movb
push
rolb
inc
leave
jne
and
add
push
xchg
ljmp
dec
insb
cmpsl
in
jbe
jae
mov
lcall
inc
adcl
fimull
roll
loope
aad
notb
mov
es
je
stos
repz
xchg
int
addr16
ds
fwait
push
jnp
xchg
les
add
int
pop
mov
inc
cmp
inc
dec
data16
sbb
jg
stos
scas
fmull
hlt
push
adc
sub
js
lret
and
push
inc
jl
into
mov
filds
or
xor
jge
das
jmp
and
pop
mov
call
popa
cmp
mov
mov
data16
jmp
pop
xor
cmpb
xchg
push
hlt
pop
cwtl
icebp
fmuls
xchg
xor
add
test
mov
fadd
mov
mov
fiaddl
push
or
jge
or
inc
pop
aas
cld
out
cmp
add
xor
in
sahf
or
mov
mov
ret
mov
jae
ret
lcall
jns
push
mov
jecxz
gs
or
fcomps
adc
ret
jp
ja
sub
inc
pop
int
test
std
out
sarb
fucomp
and
mov
adc
sbb
lock
xchg
insb
adc
shrl
sub
sub
lahf
or
jb
movsl
xchg
decl
mov
cmp
inc
in
lock
addb
movsl
jg
pusha
jp
sub
cli
mov
mov
or
out
sub
cmp
outsb
cmc
stos
test
decb
rol
test
nop
mov
shlb
dec
enter
das
in
scas
stos
scas
jns
mov
or
sahf
enter
inc
mov
and
inc
mov
test
mov
fwait
xor
out
flds
cmpsl
rorl
imulb
xlat
add
adc
cmp
inc
imul
jecxz
test
add
in
aad
mov
xchg
cs
cld
fmulp
and
shll
jns
lods
outsl
insl
pop
xor
inc
cmp
les
mov
daa
clc
mov
add
adcl
enter
sahf
mov
pop
push
mov
push
bts
mov
ret
aas
fimuls
cmp
call
shl
aas
inc
or
cmp
sub
push
sbb
mov
imul
mov
imul
cmpsb
or
push
les
std
pushf
inc
inc
mov
xchg
push
lahf
sub
lcall
fadds
jg
push
outsb
push
in
dec
mov
jecxz
seto
adc
ret
jle
xchg
mov
dec
cmp
pop
mov
ja
jne
adc
adc
mov
xor
popa
add
cmp
and
cli
rolb
loop
imul
pushf
lea
rcll
jmp
inc
push
je
sysenter
and
out
bound
sti
inc
out
adc
gs
xchg
jp
outsb
dec
fldcw
bound
roll
and
lods
mov
aaa
imul
stos
xchg
mov
addr16
and
lods
mov
pushf
stos
mov
fidivs
lahf
mov
inc
add
sti
gs
push
mov
sbb
les
xchg
fsub
and
jnp
les
loopne
movsb
sarb
add
pushf
mov
nop
pop
xor
sti
fldenv
cmpsb
xor
push
sub
mov
shl
data16
cmp
imul
dec
add
test
push
cltd
add
hlt
clc
add
das
sar
sti
fs
push
sub
or
test
xor
lea
and
lds
jle
loope
dec
gs
jb
stc
mov
jns
and
cld
movsb
or
adc
mov
sbb
push
push
pop
cmp
out
gs
dec
scas
mov
jns
sub
jg
cwtl
cmp
imul
push
xor
sub
ja
push
sub
call
mov
aaa
push
pmaxsw
cmp
push
pop
test
cmpsl
enter
out
cmp
xchg
repz
mov
enter
adc
scas
cmp
movsl
sbb
add
test
jp
xchg
adc
inc
mov
mov
cmpsl
outsl
xlat
cwtl
cmp
shlb
mov
xor
inc
cli
ljmp
testb
setae
lcall
js
mov
cli
jo
or
mov
cwtl
xchg
inc
cmpsl
push
nop
push
jae
push
xchg
imul
mov
mov
ljmp
xchg
shll
xchg
mov
test
int
aas
icebp
inc
decl
test
mov
clc
rcl
adc
cli
hlt
and
mov
jl
repnz
mov
into
or
mov
sbbl
lahf
xchg
out
lahf
push
addr16
push
dec
sarl
insb
mov
push
jno
sti
mov
pusha
cli
popa
pop
pushf
dec
iret
mov
xchg
mov
jae
arpl
fsubr
inc
ljmp
leave
lods
jne
cmp
push
aas
adc
or
mov
popa
xor
ret
sbb
ficoms
and
decl
xor
das
hlt
fwait
xchg
inc
adc
inc
xor
popa
jno
lds
push
xchg
mov
sti
js
sbb
mov
jns
icebp
sti
test
dec
push
or
add
jne
mov
das
cmc
sub
ret
jmp
decb
test
shlb
scas
dec
sbb
lcall
popa
fmull
add
stos
jecxz
jbe
xchg
xchg
sahf
out
push
jae
xchg
repnz
andb
xor
int
das
mov
inc
jmp
dec
fs
cltd
pop
sbb
andb
test
loopne
data16
sub
shl
mov
push
jnp
mov
jl,pt
ret
dec
push
and
push
mov
bswap
test
and
dec
dec
test
call
pop
xchg
push
scas
outsb
mov
push
icebp
sarl
bound
push
ss
mov
js
dec
and
nop
outsl
inc
pop
imul
mov
cmc
pop
leave
push
adc
orl
mov
xor
push
xchg
lret
ja
xchg
cltd
das
xor
mov
jne
lret
imul
and
cmpsb
jp
and
sbb
mov
mov
test
arpl
add
ds
aas
loope
mov
sbbl
lock
ret
rcrl
mov
pop
cltd
xchg
sub
into
inc
lret
mov
lcall
es
popa
shrl
sbb
mov
inc
adc
pop
rorl
jno
shll
mov
dec
lret
clc
mull
pop
and
popw
jmp
sarb
push
mov
jno
or
into
jae
xor
fldcw
adc
aam
addb
xchg
dec
dec
jne
or
dec
das
repz
arpl
sarb
ret
inc
dec
je
mov
xor
and
and
pop
pushf
pop
inc
jecxz
sbb
ss
and
mov
inc
fs
mov
pop
xor
cs
or
push
mov
dec
jbe
ds
shlb
mov
pop
xchg
fisubrl
arpl
rorl
arpl
jae
outsb
push
mov
jns
xor
mov
and
imul
dec
mov
jle
imul
mov
add
and
mov
nop
das
xchg
rcrl
adc
cmp
les
fmuls
mov
ja
loop
out
xchg
jle
sbb
mov
push
xor
sahf
dec
cmp
gs
addr16
dec
shrl
test
dec
js
imul
cmp
mov
xchg
jae
inc
sub
inc
leave
gs
xchg
jmp
mov
imul
lea
or
mov
add
leave
dec
push
cmp
dec
xor
inc
xor
push
mov
andl
lods
mov
sbb
add
xor
xchg
and
pop
xorl
negb
aas
inc
push
and
xor
mov
sahf
mov
sbb
push
lret
jnp
test
sahf
push
cmpsl
pop
fwait
mov
inc
xor
mov
xor
jle
pushf
dec
repnz
cltd
into
nop
mov
xchg
aam
push
xor
or
mov
cmp
int3
fwait
enter
mov
push
jmp
fildl
xorl
push
aas
aas
sar
and
pop
test
repz
sarb
push
cmpsb
mov
xchg
sbb
mov
scas
mov
mov
movsb
test
mov
jg
sbb
mov
fistl
add
sahf
imul
add
fstl
imul
and
je
movsb
mov
push
test
push
shlb
sub
pop
je
jge
imul
leave
cmpsb
mov
arpl
negl
lock
push
in
test
inc
jno
cwtl
cmp
icebp
insl
mov
nop
cmp
adc
mov
mov
fsubrs
mov
pop
mov
sbb
sbb
test
mov
mov
out
cmpsb
in
out
clc
adc
mov
testb
pop
out
lds
imul
xor
mov
sbb
mov
push
pop
gs
movsb
add
movsl
outsl
xchg
dec
mov
push
dec
xor
nop
fimull
gs
push
push
mov
dec
dec
push
mov
jg
insb
or
fcoms
into
jnp
push
repnz
mov
scas
add
mov
les
stc
aaa
push
mov
cmp
inc
or
das
scas
das
je
xchg
arpl
data16
ja
jg
adc
or
fsubrl
lahf
dec
and
imul
xchg
ds
push
pop
outsb
and
das
xor
lods
xchg
mov
jbe
cmp
int3
cmp
in
scas
push
mov
call
loop
jle
shlb
push
out
dec
lods
dec
pop
int
jl
add
inc
fs
fisubs
inc
pop
xchg
cli
das
and
cld
cwtl
add
jae
jbe
pop
add
mov
pop
mov
imul
cs
adc
cli
xor
jmp
fs
push
loop
or
adc
fmul
dec
ja
mov
ljmp
push
xor
aas
pushf
pop
lahf
mov
xor
fistps
insl
push
sbb
mov
fs
jb
push
mov
cmpsb
outsl
rcr
lea
not
add
sbb
inc
lods
mov
mov
jns
dec
ja
call
push
sbb
idivl
xor
adc
aas
leave
loop
dec
xchg
xor
loope
mov
iret
stos
xchg
or
rol
clc
jle
jno
jbe
cmp
cmpsb
mov
pop
rclb
mov
sub
cmp
test
out
add
adc
mov
cmp
pop
sbb
add
xor
fwait
and
sbb
rclb
mov
movsl
xor
inc
push
mov
jmp
jge
daa
clc
in
pop
inc
and
loope
push
and
ss
mov
pop
repz
jno
test
mov
loope
pop
lret
sub
and
push
jecxz
add
add
inc
bound
lea
jle
hlt
xchg
cs
push
mov
mov
mov
and
xor
out
push
jno
mov
push
sub
gs
push
subb
sbb
fs
cltd
jmp
popa
lds
fldl
or
cmp
jl
int
sub
add
enter
jge
test
stc
fs
pushl
jnp
les
jecxz
test
lahf
xor
inc
add
test
adc
in
pop
mov
test
pop
mov
stos
xor
fmull
pop
mov
mov
xchg
les
or
popa
arpl
jo
dec
aas
mov
add
inc
adc
subl
pusha
cmp
pop
jno
fdivrl
push
inc
and
popa
mov
out
fiaddl
xchg
arpl
dec
push
leave
mov
lods
or
fcmovnu
xor
divb
sahf
inc
fimull
add
cmp
addr16
call
jp
inc
and
scas
and
orb
sbbl
das
outsl
icebp
cmp
and
push
jg
stc
jb
push
inc
popf
arpl
imul
leave
icebp
and
inc
loope
ljmp
cmc
stos
fsub
jge
out
push
into
sub
ljmp
and
in
int3
imull
insb
lock
push
test
call
add
adc
push
xadd
xchg
xchg
fcoms
lds
and
fnstenv
fwait
lret
fidivs
push
rcr
hlt
xor
out
movsb
xchg
scas
add
stos
leave
pop
xor
jo
leave
push
cltd
pop
mov
xchg
call
xor
jmp
xchg
std
push
and
dec
inc
insl
push
lea
scas
jmp
inc
rclb
inc
sti
dec
jecxz
push
xchg
aaa
lods
sti
cmp
int3
cmp
sarb
loop
mov
add
cltd
pop
mov
cwtl
lret
in
clc
test
scas
je
jl
push
xchg
mov
imul
mov
sbb
xchg
cmp
dec
jo
sbb
and
mov
mov
jge
mov
or
pop
ja
mov
rorb
fnsave
cmp
ja
shll
add
cmp
or
mov
je
and
push
xor
xchg
add
adc
imul
sub
push
push
mov
jge
out
insb
cmpsb
adc
xchg
sarl
fucomip
fcomip
jbe
es
in
push
lcall
sbb
push
lahf
mov
fldl
cmp
cmpsl
xchg
test
push
cmp
ret
mov
addl
fs
mov
cmpsb
repnz
loop
adc
in
dec
popf
rorb
rclb
movb
jbe
mov
loope
add
cmp
movsl
ljmp
xchg
stos
ficompl
jbe
mov
pop
jo
add
pop
jae
push
cld
es
lea
mov
jae
and
push
xchg
scas
or
fmulp
pop
jnp
inc
inc
jns
jge
and
loope
xor
xor
addr16
lret
sti
sub
ret
jne
mov
inc
js
or
add
mov
push
pop
mov
nop
shr
int3
ret
mov
lcall
push
test
sbb
xchg
in
scas
jmp
jecxz
xchg
add
ja
mov
scas
push
pop
ja
loope
test
mov
rcll
sub
inc
notl
in
jae
or
dec
ja
idivb
cwtl
dec
cmp
aad
outsl
xor
je
or
jno
mov
adc
in
lods
mov
jp
test
mov
xor
fldt
inc
mov
leave
push
dec
dec
pop
xor
sbb
pop
cld
aam
push
mov
insb
adc
shr
sbb
cli
stos
adc
jo
bound
mov
imull
jo
dec
dec
sbb
roll
sub
pop
sbb
popf
dec
adc
push
adcl
sar
ss
inc
enter
scas
mov
ret
jnp
mov
pushf
add
sub
stc
idivb
jge
lds
add
leave
cmpb
push
stc
test
push
shlb
mov
shll
stos
sub
imul
add
push
pushf
dec
mov
cltd
aaa
or
call
pop
cmp
mov
enter
lods
push
jecxz
pop
movsb
cwtl
dec
xchg
inc
pop
cmpsl
rclb
jno
fidivrl
or
lret
xor
fnsave
loopne
rol
push
mov
xor
or
lea
mov
mov
push
shlb
andl
inc
pop
and
out
shrl
pop
popf
fwait
push
movsl
imul
mov
cmp
rcrl
faddp
pop
loope
sub
dec
jmp
mov
hlt
sbb
xchg
jae
push
mov
dec
out
jb
xchg
outsl
stos
dec
int
out
scas
in
sub
cmp
pop
add
pop
lret
je
aas
lock
sub
xlat
int3
repnz
int3
adc
subb
mov
xchg
stos
or
cmp
out
push
aaa
lock
mov
js
jp
fdivs
ljmp
mov
adc
mov
xchg
mov
mov
in
mov
je
imul
and
xchg
sub
stos
mov
pop
stos
lds
rorb
ror
sbb
sarb
cmpsl
pop
int
mov
or
mov
faddl
hlt
mov
jge
sub
or
dec
lods
daa
mov
mov
push
sbbl
aaa
push
or
roll
sub
xchg
in
jno
push
pusha
fcoms
call
add
adc
and
sahf
cmpl
notl
outsl
pop
adc
aaa
push
or
mov
movsb
enter
sbb
hlt
pop
jne
fstpl
jns
aas
call
cwtl
pop
ret
jmp
inc
and
mov
xchg
mov
xchg
hlt
jg
test
mov
das
sub
sbb
xor
dec
int
fcompl
jo
mov
mov
pop
jno
and
data16
imul
rcrb
push
cmpb
pop
or
adcb
fnstsw
adc
adc
sbbl
push
dec
or
aad
in
fadds
dec
daa
test
cmp
das
mov
add
add
repz
add
add
add
add
fadds
add
add
add
clc
add
orb
add
cwtl
add
addb
add
repz
add
add
add
add
add
add
add
addb
andb
add
add
add
add
addb
add
repz
add
add
add
add
add
add
jo
add
add
add
outsb
push
add
add
add
add
add
cmp
add
add
add
add
add
add
cwtl
add
add
into
push
add
add
repz
add
add
add
add
add
add
rolb
add
xor
add
add
add
add
add
cmp
add
add
add
add
add
add
call
add
add
lds
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
xorb
add
dec
add
xorb
add
jo
add
repz
inc
outsl
insl
add
add
add
add
cmp
add
call
add
add
add
add
add
add
cmp
inc
outsl
insl
add
add
add
add
pusha
add
add
in
add
add
add
cmp
inc
outsl
insl
add
add
add
add
mov
add
js
pop
add
add
mov
add
repz
add
add
add
add
add
add
mov
add
repz
inc
outsl
insl
add
add
add
add
enter
loopne
pop
add
add
add
add
add
add
push
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
ja
pop
js
mov
add
add
lock
jg
mov
add
add
xorb
clc
sti
mov
add
add
lock
js
mov
add
add
cmpb
xchg
mov
add
add
lock
js
or
add
jg
cmpb
xchg
add
call
add
lock
out
add
js
jo
add
add
cmpb
mov
pop
xchg
add
lock
scas
jmp
js
jo
add
add
lock
mov
jmp
testl
xchg
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
jo
hlt
call
dec
xchg
add
add
incl
hlt
decb
xchg
add
add
ja
jo
out
call
xchg
add
add
add
pop
hlt
decb
add
add
add
add
hlt
out
out
call
add
add
add
add
hlt
mov
decb
add
add
add
pop
hlt
mov
out
call
add
add
add
pop
hlt
mov
xchg
add
add
add
pop
hlt
inc
inc
inc
inc
inc
dec
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
call
jne
and
add
add
add
jne
adc
add
add
add
add
xor
repz
add
add
repz
add
add
add
repz
add
add
add
decl
add
repz
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
dec
push
push
dec
loope
xor
lds
in
mov
lds
repnz
test
stc
jne
push
lods
add
or
dec
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
lock
or
les
or
mov
adc
mov
fcompl
pusha
push
inc
lds
outsl
push
adc
and
xor
icebp
inc
add
xor
push
cwtl
lahf
or
add
shlb
mov
adc
and
push
push
push
call
in
dec
push
call
or
add
arpl
push
or
jbe
add
repnz
lods
stos
add
nop
cmpl
adc
jae
cmp
and
shrb
movsb
out
iret
and
cmp
das
sbb
push
arpl
stc
lcall
test
call
cwtl
add
lea
dec
push
inc
mov
push
and
mov
call
mov
xchg
fld
sub
or
push
sti
nop
cmpsl
add
adc
test
push
inc
inc
inc
push
subb
mov
lea
push
mov
and
sub
xorb
loope
ret
push
lea
push
aas
pop
adc
mov
sbb
enter
lahf
aas
shlb
inc
xchg
or
stos
adc
int
xor
or
sub
aaa
dec
fisubs
or
dec
inc
loopne
add
sub
sub
test
adc
repnz
sub
push
clc
aaa
rcrb
jno
pushl
cmp
inc
or
pop
pop
maxps
push
imul
mov
sub
loopne
pop
push
xchg
or
xchg
adc
pop
push
sub
jb
pop
sti
dec
jbe
add
fnstsw
ret
mov
xor
stos
pop
loop
rcrl
push
jne
scas
push
add
mov
shll
pop
enter
and
loopne
jmp
cmpsb
cltd
inc
or
push
push
and
loop
push
sbb
pop
cmp
or
and
xor
jmp
pushf
mov
push
clc
movzwl
test
jge
sub
xchg
lods
jp
in
dec
cld
movl
jne
or
iret
jge
test
rclb
sub
iret
shll
enter
arpl
cmp
mov
sarw
or
push
push
add
mov
jae
inc
jmp
pop
pop
nop
mov
xor
mov
pop
ret
std
lock
cmp
add
in
add
jbe
adc
or
cmpsl
xor
mov
cmpb
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
je
loopne
xor
lds
dec
or
add
pop
movsl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
cmpsb
ret
add
mov
adc
stos
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
dec
mov
push
fistps
mov
in
pop
dec
sbb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
jp
lcall
and
push
add
push
push
call
sbb
mov
adc
lds
bound
inc
sbb
or
adc
ror
adc
mov
inc
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
sbb
into
jge
mov
adc
jp
jge
jbe
testb
dec
lahf
mov
je
push
movsb
jg
test
cmp
cmp
jmp
mov
inc
jmp
push
inc
pop
dec
xchg
pop
xor
push
dec
mov
push
inc
mov
pushf
stos
pop
test
scas
repz
xor
icebp
mov
call
and
or
add
xor
xchg
insl
movsl
xchg
sbb
and
inc
mov
dec
adc
jl
prefetchnta
shr
pusha
loope
push
lret
jbe
insb
xor
cmp
sti
push
add
testb
mov
inc
push
xchg
cmp
mov
xchg
jp
and
cmpsl
sub
scas
jno
or
push
lea
loopne
push
xor
push
pop
cmpsb
hlt
lret
sbb
jo
insb
imul
sbb
gs
jae
dec
adc
and
std
mov
gs
ljmp
outsl
jae
das
insb
sahf
pop
outsb
lahf
je
bound
mov
imulb
out
mov
dec
cmp
xor
popa
insb
mov
sub
push
xchg
daa
je
mov
mov
dec
in
jecxz
popa
addr16
inc
outsl
cmp
cmp
js
data16
fidivrs
cmp
imul
dec
push
inc
rol
dec
popa
outsb
fs
add
xlat
mov
movl
les
jl
pop
imul
mov
jbe
xchg
lcall
stos
mov
xor
rorl
jmp
push
dec
cmp
dec
xor
jp
dec
pushf
or
mov
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
repz
add
push
add
clc
or
add
incl
add
repz
add
pop
add
add
adc
pop
add
pop
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
fisubrs
sub
sbb
mov
add
add
add
mov
in
sub
inc
and
mov
push
push
mov
mov
shl
mov
push
mov
mov
sub
mov
mov
shl
mov
add
mov
shl
xor
sub
mov
add
mov
mov
mov
mov
mov
mov
movb
mov
je
mov
mov
rep
mov
movzbl
xor
mov
add
or
mov
mov
shl
or
movzbl
shl
or
cmp
jbe
push
mov
mov
and
mov
shl
add
cmp
mov
mov
lea
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
movzbl
mov
and
mov
sub
mov
shr
mov
shl
mov
add
imul
cmp
lea
mov
jl
mov
sub
mov
movzbl
mov
mov
mov
add
mov
and
cmp
lea
lea
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
test
mov
je
cmp
jge
mov
mov
lea
cmp
jae
movzbl
shl
shl
or
add
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
test
mov
lea
je
cmp
jl
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
mov
mov
add
mov
mov
cmp
mov
mov
jge
movl
jmp
cmp
jge
sub
mov
jmp
sub
mov
jmp
mov
shr
sub
sub
sub
cmp
mov
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
mov
mov
xor
cmp
setl
mov
mov
mov
lea
sub
and
mov
jmp
mov
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
lea
shl
add
cmp
mov
mov
lea
jae
shl
mov
mov
movzbl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
xor
cmp
setge
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setge
sub
and
add
mov
lea
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shl
mov
lea
xor
movl
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
shl
mov
lea
mov
movl
jmp
sub
sub
mov
shr
sub
mov
add
mov
movl
mov
mov
mov
nop
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
subl
jne
mov
mov
shl
sub
add
cmpl
jge
addl
cmp
mov
jl
mov
mov
shl
lea
movl
mov
cmp
jae
mov
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
subl
jne
sub
cmp
jl
mov
mov
sar
and
sub
or
cmp
mov
jge
shl
movl
mov
mov
sub
mov
lea
mov
jmp
mov
sub
jmp
lea
cmp
jae
movzbl
shl
shl
or
add
shr
add
cmp
jb
sub
or
sub
jne
mov
add
shl
mov
mov
movl
movl
mov
jmp
mov
cmp
jae
movzbl
shl
shl
or
add
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
mov
or
lea
shll
subl
jne
jmp
mov
addl
je
mov
mov
mov
sub
add
add
lea
mov
sub
mov
add
add
test
mov
jne
mov
cmp
jb
mov
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
mov
pop
pop
pop
mov
xor
pop
add
ret
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
movzbl
cltd
mov
idiv
push
mov
push
push
mov
movzbl
cltd
idiv
mov
mov
mov
add
mov
shl
mov
mov
add
shl
push
push
call
mov
mov
mov
lea
push
push
push
push
mov
add
push
lea
push
mov
call
mov
push
push
push
call
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
inc
add
add
mov
add
sub
add
adc
pop
add
pop
add
pop
add
add
hlt
add
add
add
add
add
mov
add
lahf
repz
add
pusha
add
inc
add
outsl
push
add
add
add
add
add
xor
add
add
add
add
rcr
push
add
pop
add
adc
add
adc
add
xor
add
add
add
add
add
xor
movsb
add
add
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
lea
mov
shr
shl
push
lea
push
push
push
push
call
mov
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
arpl
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
gs
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
add
lcall
adc
push
add
insl
push
add
rcrl
add
jmp
add
push
push
add
cmp
add
dec
push
add
add
add
jp
add
pushf
sbb
adc
