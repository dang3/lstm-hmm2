mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
mov
add
add
cmp
add
add
add
add
add
add
add
pop
add
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
jge
fstpt
mov
mov
cmp
sub
sub
lds
mov
or
pop
mov
xchg
inc
loopne
add
movsb
testb
stos
lret
or
lods
int
pop
and
xchg
fisubrl
pop
jo
scas
popa
inc
mov
and
mov
or
xor
inc
aam
xchg
jecxz
insl
xchg
add
aad
and
dec
pusha
xchg
ret
popa
adc
cmp
dec
inc
dec
orl
push
dec
jmp
mov
cld
jns
sub
jns
mov
sbb
aad
push
jns
gs
movsl
test
jl
mov
jmp
dec
push
sub
pushf
addr16
xor
xor
into
sub
adc
and
mov
loopne
pushf
xchg
rorb
fcomps
and
dec
sub
and
bound
pushf
mov
or
enter
mov
faddl
push
pop
mov
mov
sub
xchg
push
pushf
xor
repz
xor
xchg
out
mov
sub
add
xchg
cmp
cmp
mov
shll
cld
ror
xor
lea
mov
scas
cli
inc
and
cmp
cmp
jbe
aam
cltd
test
pop
xlat
mov
mov
push
shlb
lahf
cmp
data16
mov
cmc
aas
sub
mov
mov
jns
cmpsl
nop
test
mov
jns
adc
jo
imul
adc
mov
ljmp
cltd
mov
push
lcall
and
xchg
mov
aam
and
andl
sahf
das
sbb
inc
xor
cmpsb
dec
and
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
jge
fstpt
mov
mov
cmp
sub
sub
lds
mov
or
pop
mov
xchg
inc
loopne
add
movsb
testb
stos
lret
or
lods
int
pop
and
xchg
fisubrl
pop
jo
scas
popa
inc
mov
and
mov
or
xor
inc
aam
xchg
jecxz
insl
xchg
add
aad
and
dec
pusha
xchg
ret
popa
adc
cmp
dec
inc
dec
orl
push
dec
jmp
mov
cld
jns
sub
jns
mov
sbb
aad
push
jns
gs
movsl
test
jl
mov
jmp
dec
push
sub
pushf
addr16
xor
xor
into
sub
adc
and
mov
loopne
pushf
xchg
rorb
fcomps
and
dec
sub
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
jge
fstpt
mov
mov
cmp
sub
sub
lds
mov
or
pop
mov
xchg
inc
loopne
add
movsb
testb
stos
lret
or
lods
int
pop
and
xchg
fisubrl
pop
jo
scas
popa
inc
mov
and
mov
or
xor
inc
aam
xchg
jecxz
insl
xchg
add
aad
and
dec
pusha
xchg
ret
popa
adc
cmp
dec
inc
dec
orl
push
dec
jmp
mov
cld
jns
sub
jns
mov
sbb
aad
push
jns
gs
movsl
test
jl
mov
jmp
dec
push
sub
pushf
addr16
xor
xor
into
sub
adc
and
mov
loopne
pushf
xchg
rorb
fcomps
and
dec
sub
and
bound
pushf
mov
or
enter
mov
faddl
push
pop
mov
mov
sub
xchg
push
pushf
xor
repz
xor
xchg
out
mov
sub
add
xchg
cmp
cmp
mov
shll
cld
ror
xor
lea
mov
scas
cli
inc
and
cmp
cmp
jbe
aam
cltd
test
pop
xlat
mov
mov
push
shlb
lahf
cmp
data16
mov
cmc
aas
sub
mov
mov
jns
cmpsl
nop
test
mov
jns
adc
jo
imul
adc
mov
ljmp
cltd
mov
push
lcall
and
xchg
mov
aam
and
andl
sahf
das
sbb
inc
xor
cmpsb
dec
and
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
fistl
cmp
lret
flds
dec
daa
push
test
mov
cmc
insl
dec
cmp
sub
outsl
adc
mov
push
push
mov
and
adc
inc
mov
and
bound
jne
adcl
shll
data16
lret
stos
cmpl
dec
sti
sbb
lcall
mov
push
imul
push
popa
fidivrs
aas
imul
orb
push
stc
std
testl
pop
adc
in
ds
dec
mov
jne
sub
adc
lret
inc
pushf
test
jae
mov
je
xchg
jb
xor
lcall
push
inc
dec
shll
add
or
rcrl
sub
inc
mov
sbb
adc
pop
cwtl
mov
cmp
or
nop
add
out
decb
bound
mov
inc
pop
leave
xor
sub
xorb
mov
stos
fimull
decb
ljmp
xchg
cli
or
daa
and
enter
mov
mov
mov
int
xor
out
icebp
rcll
xchg
lock
push
shll
or
roll
and
cmc
js
dec
mov
pop
rorb
in
fcomip
jp
mov
sub
adc
repnz
std
mov
test
jne
add
ljmp
cmpsl
fldt
mov
and
jo
test
sti
stos
inc
inc
icebp
out
test
sti
stos
loope
and
xlat
dec
push
mov
orb
cmp
lods
inc
lahf
cmc
clc
jns
out
pop
mov
cs
lret
daa
ret
dec
jnp
pop
sbb
inc
jns
pop
sub
mov
les
ficomps
push
sbbl
inc
and
dec
lret
inc
sbb
cmp
lahf
imul
iret
cltd
mov
fwait
gs
setg
mov
adc
mov
add
pslld
inc
loop
sbb
das
sub
and
mov
push
fdivrp
iret
or
loope
pop
and
inc
mov
int3
xchg
mov
fdivs
push
andb
lock
shrb
mov
imul
jl
pusha
lds
xor
inc
adc
or
jne
sbb
test
je
sub
fsubs
outsl
mov
repnz
mov
sbb
dec
xor
out
adc
cmp
cli
xchg
fisubl
fldenv
fmuls
aas
mov
mov
push
add
adc
iret
cmp
call
aam
pop
ss
mov
inc
in
les
lret
jecxz
and
dec
dec
icebp
or
aas
nop
inc
push
into
adc
inc
out
aaa
mov
sub
inc
icebp
sbb
rcll
les
sbb
hlt
imul
daa
insb
mov
insl
fbstp
scas
mulb
dec
mov
or
mov
pop
xchg
mov
test
add
lock
pop
adcb
jp
test
pop
ficoml
lds
out
add
cmp
into
jae
aad
out
iret
loope
adc
sbb
inc
or
sti
jge
leave
push
push
nop
cwtl
clc
movsl
jne
inc
mov
adcb
fisubrs
inc
fs
hlt
pop
scas
push
int3
sti
fnop
pop
scas
in
mov
sbb
inc
xchg
push
stc
mov
pop
sbbb
jge
sub
ret
push
adc
outsb
xor
jb
scas
or
lods
sbb
cmp
adc
lret
hlt
enter
sbb
pop
jo
pop
lods
push
insb
pushf
aam
push
pop
popa
xor
mov
mov
lods
dec
adc
inc
clc
mov
les
stc
dec
ret
dec
adc
mov
cltd
xor
push
insl
and
std
inc
xlat
xchg
test
movl
subl
popf
jo
sbb
addr16
call
add
gs
pop
mov
mov
lret
pop
jle
add
cld
into
test
rclb
ret
sub
push
and
or
adc
add
fwait
das
xlat
cmp
cmp
cmp
cmpsl
mov
lock
cs
pop
dec
sbb
iret
loopne
out
fnstsw
jmp
jg
sub
push
leave
jno
popa
mov
insb
fsubl
leave
add
mov
xchg
xchg
ret
jbe
mov
jge
testl
add
mov
add
jmp
lret
dec
cmp
or
orl
inc
imul
arpl
fxch
jbe
push
xchg
cmp
leave
xor
mov
mov
mov
xor
mov
pop
idivl
inc
jl
jecxz
adc
aaa
jae
das
cwtl
pop
rol
out
pop
inc
jmp
mov
or
jp
jg
out
mov
data16
sbb
pop
sub
sub
xchg
mov
xorb
and
and
pop
shlb
popf
dec
dec
xor
iret
pop
cmpsb
inc
mov
mov
mov
fisubl
cmc
mov
ss
push
push
fstl
loope
pusha
cmpsl
cwtl
jno
add
mov
in
add
pop
mov
cvtpi2ps
aad
push
sub
sub
push
lods
std
pop
icebp
in
inc
push
nop
cmp
addb
stos
and
fistpl
lds
sbb
aaa
punpckhbw
mov
inc
sarb
jl
jmp
filds
bound
out
adc
sbb
andl
mov
jae
test
filds
sbb
outsl
and
adc
inc
in
sub
sbb
stc
jmp
mov
adc
test
dec
pop
fidivl
ficoms
scas
push
xchg
mov
push
mov
xchg
cmc
ffreep
fst
loop
mull
jg
push
int3
ss
in
pop
cli
mov
stos
pop
push
icebp
mov
xor
mov
rcl
jb
jbe
in
push
mov
dec
cmp
lret
mulb
out
je
enter
gs
inc
pusha
xorl
xchg
xchg
filds
add
dec
mov
mov
jne
push
fcmovne
xchg
das
pop
mov
cmp
mov
add
and
jns
fistpl
fcomi
push
imul
cmc
leave
jge
cmp
shrl
mov
add
nop
inc
in
sub
mov
cmpsl
adcb
movsl
jge
add
subl
push
mov
push
push
sti
jle
pop
mov
push
jae
mov
add
lret
mov
or
xor
push
mov
cmp
inc
dec
bound
scas
bound
add
test
imul
sbb
shll
insl
jp
mov
mov
pop
pop
mov
sti
je
fdivl
add
xor
jnp
outsl
stc
out
sar
dec
mov
jns
sbbl
sbb
pop
mov
xlat
mov
jge
sahf
loop
sbb
and
sahf
cmpsb
adc
push
xor
add
js
sub
jge
gs
sub
pop
iret
das
mov
jge
es
pop
fsub
push
int
pop
lahf
repnz
icebp
cmp
pop
cmp
jmp
inc
jecxz
jg
xor
jne
stos
mov
lea
mov
clc
push
fcoml
sbb
push
iret
test
cmp
or
dec
imul
xor
mov
idivl
or
cmp
cmpsb
sbb
add
das
subl
cld
cmp
mov
sub
jp
inc
jne
loopne
xor
dec
test
pop
ss
and
insb
int
sub
lock
xor
clc
enter
enter
repnz
icebp
xchg
add
jns
or
lods
pop
pusha
movsl
adc
ss
cmp
cmp
seto
ret
push
pop
in
push
mov
jb
subl
push
popa
sub
push
test
inc
jmp
filds
adc
cmp
add
fsubrl
sub
ja
jno
pop
mov
dec
fdivrp
std
push
mov
test
les
inc
inc
adc
mov
xchg
fs
mov
inc
and
stos
mov
pop
data16
daa
cmp
sti
mov
outsl
lock
xchg
inc
mov
int
jne
inc
adc
inc
add
pop
jae
loopne
mov
or
adc
dec
dec
mov
mov
pop
adc
mov
lahf
sti
push
jb
fwait
jns
xchg
xor
adc
pop
sub
add
dec
dec
sub
addr16
lods
arpl
mov
fisubl
nop
or
xor
adc
std
test
dec
add
bound
add
pop
stos
sahf
adc
dec
xor
add
push
cmpsb
adc
sub
lods
movsb
mov
and
sbb
xor
or
ret
xchg
ljmp
in
push
xor
pop
cmp
push
outsb
dec
popa
xchg
ffree
clc
dec
dec
mov
mulb
sti
mov
test
add
or
jae
sub
fsubrp
mul
sti
push
push
mov
xlat
mov
add
sub
testl
js
adc
fldt
mov
mov
xor
sbb
mov
dec
adc
lock
or
pop
stc
faddl
test
jmp
orb
rorl
sbb
dec
inc
inc
inc
jno
in
cmp
ret
mov
push
enter
dec
aad
scas
cwtl
repz
cltd
je
sahf
push
jb
aaa
inc
sub
mov
loop
jo
or
add
mov
fdivr
jnp
outsb
jecxz
xor
and
test
cmpsl
fldt
hlt
shl
in
mov
jg
push
into
cwtl
test
sbb
lahf
mov
aaa
push
sbb
std
or
data16
aam
ret
xchg
in
xchg
movsl
or
xchg
daa
aas
mov
test
stc
adc
les
fmuls
pop
jno
cmc
fucomip
mov
pop
pop
adc
and
cmp
cmp
sbb
daa
jb
and
frstor
jmp
mov
xlat
cmpsl
test
fistl
xor
in
or
dec
cld
subb
out
pop
fisubrs
out
aam
test
dec
jne
into
fisubs
push
lret
xor
adc
in
mov
ret
cmp
push
in
shl
out
subl
aam
scas
xor
mov
dec
mov
test
xlat
dec
outsl
stos
cmp
dec
lret
pop
add
xor
int3
fisubrl
mov
test
push
lds
insb
xor
jne
pop
adc
insb
testl
add
cmp
mov
in
lds
or
xchg
push
pop
test
xor
jl
inc
fs
lret
aam
inc
pop
sub
into
aad
rcll
xorb
push
fs
inc
into
imul
mov
dec
sub
pop
rcll
sub
cmpsl
jo
push
inc
roll
pop
adc
scas
sbb
data16
fcomp
ljmp
or
xchg
test
sub
ficoml
push
fdecstp
pop
mov
and
cmp
mov
xchg
add
cli
push
add
xlat
pop
sub
mov
sub
mov
jmp
fdivl
mov
lcall
pop
movsl
mov
cmp
out
dec
mov
dec
sbb
push
jp
mov
arpl
pushf
aaa
pop
xchg
icebp
mov
dec
js
dec
mov
fistpll
fldenv
and
imul
js
std
pop
out
sbb
aaa
sahf
es
xchg
sbb
dec
add
out
inc
nop
dec
sbb
adc
pop
in
adc
test
mov
clc
les
xchg
data16
xchg
subb
pop
or
ror
cs
add
fisubs
sub
sub
outsl
or
fucomip
dec
pop
insb
and
jmp
xchg
inc
shrb
inc
sbbl
and
psubd
mov
sbb
mov
push
cmp
push
mov
cs
ljmp
sub
adc
test
movsb
clc
idivl
out
jns
pop
lea
nop
aaa
jno
mov
daa
mov
int3
or
add
mov
stos
adc
fsubrp
or
mov
popf
mov
fists
mov
in
lea
lods
push
and
rcrb
loope
xor
scas
lret
int3
aas
cmp
out
jecxz
mov
pusha
and
aaa
adc
lods
cmp
and
out
addl
stos
mov
xchg
xchg
insb
rorl
cwtl
ja
ret
insb
cld
mov
push
adc
add
mov
nop
mov
push
jge
mov
adc
pop
or
shrl
scas
movsb
lods
xchg
sbb
mov
mov
and
or
jge
pop
fbstp
mov
or
xchg
shl
mov
adc
xor
mov
dec
xor
pop
ret
out
fldenv
xchg
fistpl
cld
sbb
out
inc
js
dec
pop
les
mov
and
popa
mov
pop
add
outsl
int3
insb
jae
xor
push
fidivrl
movsb
push
cmpl
sbb
sti
sahf
jge
ret
divl
inc
push
out
push
add
into
xlat
enter
stos
incl
jnp
mov
cmovns
fnsave
push
aaa
inc
dec
push
adc
inc
xor
incb
jmp
dec
popa
push
jnp
data16
sbb
fbstp
jnp
lcall
movsl
stc
int3
inc
add
test
repnz
mov
push
sub
fistps
jl
scas
inc
das
lcall
popa
fldt
fistps
fwait
jo
sbb
xchg
mov
outsb
xorl
sbb
icebp
mov
sbb
lea
aaa
out
jns
aas
mov
inc
push
shll
aad
andl
mov
lds
mov
hlt
adc
and
popa
out
xor
pop
xchg
cmc
sahf
js
jne
cmp
movsl
icebp
adc
jns
xorb
sub
pop
jp
es
enter
imul
outsb
and
or
rorb
bound
dec
subl
xorb
insb
cmpsb
ja
movsb
bound
xchg
pop
xor
jae
lock
xor
in
push
popf
mov
repnz
mov
mov
movsb
loop
aaa
sahf
dec
cwtl
pop
out
push
pusha
xchg
cmpsl
lods
ret
dec
scas
icebp
adc
mov
or
lahf
loop
add
hlt
cmp
cwtl
loopne
insl
push
ss
mov
cmp
dec
mov
or
sbb
int3
fdivl
xorb
push
hlt
pop
and
sub
mov
data16
cmpl
cmp
andl
add
add
sbb
sub
loop
gs
inc
into
xchg
pusha
lds
out
into
loopne
sbb
ljmp
push
xchg
divl
or
inc
xor
leave
inc
and
adc
ljmp
cld
outsb
xor
arpl
mov
cld
repnz
sbb
std
test
scas
pop
cld
mov
popa
int3
fildl
shlb
jnp
adc
sti
jecxz
jge
or
mov
cmpsl
push
mov
cmp
stos
xor
inc
fisubrs
mov
inc
xchg
dec
pop
adc
int
jb
pop
mov
movsb
andb
mov
xchg
test
nop
mov
or
leave
mov
mov
arpl
les
sbb
and
orb
pop
les
or
push
imul
xchg
jge
fistps
fists
sub
sub
fildll
pop
jns
pop
xor
mov
andl
ret
xor
mov
inc
mov
sarb
cmpsl
xor
pushf
jbe
imul
and
inc
outsb
inc
xchg
stc
mov
pop
pop
popa
outsb
test
aam
xchg
movsl
xchg
jle
fisubs
ret
jno
jne
pop
insl
in
shl
jecxz
inc
jo
rclb
mov
iret
jmp
bound
bound
shlb
in
mov
push
pop
int
push
sub
mov
jecxz
shr
repnz
aaa
aam
insl
in
push
lds
pusha
push
cmp
adc
mov
jo
xchg
mov
jle
icebp
mov
add
mov
push
les
fiadds
inc
cmpsb
jnp
mov
sub
inc
fucomp
sti
adc
adc
jle
mov
jbe
mov
sub
scas
cmpsb
subb
ja
shll
call
dec
cmp
scas
sub
mov
pop
icebp
add
jo
subb
jl
jb
loopne
push
cmp
sbb
outsb
mov
loope
fmull
mov
rol
pop
orl
push
dec
pop
or
push
push
clc
aaa
hlt
fs
test
cmpb
add
je
insb
pop
mov
std
outsl
add
push
sub
dec
xor
aam
add
cmp
push
std
sbb
mov
xchg
pop
imul
adc
xor
mov
jmp
stc
test
ffree
push
ror
mov
push
dec
xchg
sub
dec
loop
loopne
aas
movsl
sbbb
sub
cmp
sub
and
scas
sahf
push
sbb
xorb
add
or
les
fwait
dec
xor
imul
jmp
out
xor
ss
push
xchg
addr16
nop
dec
lods
jae
js
and
xchg
mov
or
test
aam
hlt
pop
int
pop
sub
sub
test
in
sub
or
in
push
loopne
mov
mov
inc
jle
fistpl
lret
mov
mov
push
cmpsb
dec
push
mov
jle
xor
or
add
movsb
lock
push
xchg
mov
test
stos
mov
pushf
ret
jmp
sbb
add
jb
xchg
push
jmp
sub
fsub
push
dec
adc
xchg
add
sarb
rcrl
push
jbe
cmc
cmpb
stc
mov
test
icebp
es
test
lods
repz
add
fwait
mov
fsubs
pop
leave
je
push
lods
cli
hlt
mov
addr16
xor
lods
imul
mov
jle
scas
or
push
call
js
and
stc
lods
pop
inc
mulb
jnp
incb
inc
std
popa
nop
lea
lret
xchg
adc
outsl
dec
xchg
jle
jmp
aaa
pop
fstl
push
addr16
imul
mov
rcll
cmp
adc
imul
mov
ljmp
in
cld
jbe
movsl
daa
repnz
or
adc
and
outsb
in
divl
in
ret
stc
das
pop
movsb
jns
int3
ret
or
insl
nop
aaa
xchg
inc
jo
lea
mov
inc
jg
mov
ja
movsb
adc
aas
jns
lahf
sbb
and
add
xlat
jge
sub
sarl
popl
mov
shl
stos
out
xor
call
push
scas
xchg
addr16
pushf
js
add
fsin
pop
call
xchg
jne
mov
xchg
nop
or
mov
xor
xchg
cmc
inc
and
jecxz
scas
dec
add
iret
lds
xchg
arpl
lret
icebp
cmpsl
cld
imul
cmp
in
imul
jle
xor
sbb
shrb
push
test
icebp
push
movsl
sbb
and
push
mov
pusha
push
stos
cmp
repnz
rcrl
dec
or
and
mov
aad
testl
push
pop
addr16
jae
icebp
mov
push
sbb
test
xorl
mov
fsubs
mov
shrb
cmp
jmp
push
cmpsb
mov
mov
adc
add
dec
fldenv
dec
cmp
jno
pusha
pop
xorb
fidivrs
jb
dec
in
dec
jbe
imul
imul
hlt
and
rorl
adc
or
mov
lahf
enter
mov
inc
or
fstpl
or
jecxz
xor
in
mov
sahf
frstor
xor
mov
pop
mov
jl
push
sti
fidivrs
mov
xchg
repz
sbb
lret
ljmp
lret
lret
or
sarl
arpl
repz
xor
xor
pop
adc
dec
enter
pop
pop
loopne
testl
pop
imul
sbb
dec
xor
push
and
repnz
add
jp
sbb
lcall
in
hlt
ss
cmp
inc
dec
cmp
mov
aaa
jmp
push
sub
xor
push
mov
mov
shlb
pop
test
dec
ljmp
inc
dec
int3
mov
fwait
sar
pop
ror
mov
and
cmp
pusha
xchg
jo
popa
cs
mov
loop
xorb
out
add
insl
adc
jae
fwait
outsb
loope
enter
mov
out
cwtl
aas
jae
mov
ljmp
xchg
xor
adc
push
xor
sbb
dec
movsl
fildll
xor
jl
inc
popa
addb
fwait
icebp
dec
pushf
and
or
in
lahf
jno
sbb
sti
sub
mov
xchg
js
cltd
adc
inc
adc
lock
inc
data16
rcll
sub
sub
call
mov
xor
sub
dec
inc
in
cmp
ffreep
pop
ljmp
es
xchg
das
hlt
mov
xlat
sbbb
cmp
xor
lahf
pop
adcl
sub
cmpsl
mov
dec
test
in
push
xchg
jne
dec
pop
sbb
sbb
fwait
clc
ds
push
push
rcr
ret
xchg
jns
lret
shl
cld
inc
add
insb
shlb
sbb
mov
loop
add
push
std
adc
inc
loop
adc
jns
andl
add
sub
fst
pop
jmp
pop
dec
xor
mov
out
mov
mov
lahf
and
add
or
imul
mov
scas
fwait
cwtl
inc
and
mov
xchg
data16
pop
gs
sub
dec
or
sub
and
iret
xor
or
dec
xlat
test
sbb
dec
fnstsw
js
and
jo
or
aam
js
outsb
push
sub
dec
scas
mov
and
fstp
adc
std
movsl
mov
ja
mov
and
cmp
ja
shr
ja
push
pop
or
inc
sub
cmp
mov
ror
out
jge
das
hlt
inc
cs
repz
lods
pusha
xor
ljmp
out
test
shlb
push
popa
or
aad
aas
popf
ja
lds
out
shll
mov
leave
sti
in
sub
xor
xchg
mov
push
das
cld
and
xor
nop
iret
push
es
sub
xchg
mov
xchg
sbb
lea
xchg
mov
test
outsb
mov
adc
popa
ret
xor
mov
xchg
sbb
push
orb
mov
jbe
dec
sub
mov
jg
mov
scas
dec
cs
xor
shl
lret
fistl
pop
push
and
push
pop
pop
push
jp
mov
lret
in
lods
mov
cwtl
sub
jle
xchg
fdivrs
loope
dec
jb
mov
jae
sbb
jg
movl
lock
xor
test
jle
cli
jg
enter
adc
xchg
adc
ret
roll
xor
jnp
incl
inc
das
ficomps
ffree
imul
into
into
pop
cwtl
fcmovne
js
fcmovb
add
lock
out
leave
cmp
adcl
mov
lock
jl
jecxz
sub
addr16
inc
shlb
loopne
and
push
mov
xor
and
rorl
in
pushf
out
mov
ret
inc
jo
xlat
rorb
popf
xchg
inc
or
out
mov
pusha
pop
sbb
jb
arpl
imul
inc
test
mov
or
sub
sub
jb
out
or
jmp
jg
inc
clc
aas
loope
cwtl
or
insl
push
loopne
cltd
mov
pop
sbbl
ret
mov
mov
stos
xorl
push
mov
mov
xchg
xor
addr16
jge
cwtl
int3
lods
and
sbb
jmp
mov
ljmp
lcall
lds
pop
pop
push
xchg
and
int3
inc
nop
xchg
or
rolb
into
jnp
cmp
add
pop
add
push
and
lret
dec
jo
es
popa
inc
pushf
popf
rolb
xor
negb
pop
xlat
sti
xchg
cmpsl
xchg
push
inc
dec
xor
xchg
leave
in
dec
inc
pop
mov
movsl
push
push
xchg
insb
bound
mov
xchg
jecxz
aad
mov
lds
push
inc
aam
mov
inc
push
icebp
dec
lock
loopne
popa
int
add
sbb
inc
sbb
negl
xor
lahf
mov
aam
inc
xor
pmaxsw
leave
dec
stos
cmp
cmpsl
add
inc
daa
and
xchg
rep
sbb
sub
sub
pop
ja
mov
iret
and
out
inc
push
icebp
mov
and
lahf
dec
test
imul
mov
stos
in
xchg
mov
add
mov
lea
fisubrl
xor
sbb
cmc
mov
sub
outsl
dec
movsb
xor
out
mov
sub
sbb
aam
shlb
add
pop
or
into
mov
jno
ret
aas
test
sbbb
lret
jle
mov
cmp
pop
into
jp
or
mov
mov
outsl
or
pop
dec
in
mov
push
mov
pop
xchg
call
popa
inc
cmp
in
cmp
pop
sub
and
push
mov
pop
test
cmpb
inc
stc
mov
lret
pop
and
mov
adc
pop
sbb
in
lock
ret
addr16
pop
and
cwtl
sti
mov
sbb
push
sub
push
mov
gs
adc
repz
sub
pop
dec
mov
mov
mov
xchg
shlb
xchg
mov
in
out
cmp
das
inc
push
out
repnz
add
jle
arpl
pop
cwtl
sbb
shrb
or
ja
andb
pop
mov
pushf
push
jbe
sub
xchg
mov
adc
cli
sbb
sbb
out
popa
aaa
into
adc
push
jno
gs
pop
mov
clc
inc
imul
or
divb
js
test
jb
nop
pushf
or
cmp
pop
shll
mov
stos
lods
dec
sbb
das
push
push
jl
add
outsl
mov
out
inc
mov
jns
hlt
jbe
jae
testl
xchg
roll
jle
mov
jp
gs
jns
mov
push
out
je
imul
mov
adc
les
lods
es
aam
xchg
std
pop
stc
pop
jg
adc
mov
or
in
popf
sbb
dec
in
jle
pop
sbb
jge
popf
test
das
cmp
cmpl
jae
mov
sti
loop
mov
xor
push
out
loop
ja
cli
sti
decl
cmpsl
mov
lods
push
sbb
jnp
pop
sbb
inc
sub
push
js
dec
and
mov
add
dec
out
adc
sub
repz
push
pslld
scas
ret
xor
adc
and
arpl
or
mov
daa
add
paddb
or
ss
arpl
push
dec
push
adc
repnz
cltd
imul
push
mov
inc
repnz
add
arpl
inc
adc
add
int3
mov
aaa
in
jne
mov
popf
xor
sbb
sti
inc
mov
lahf
cmp
cltd
xor
insb
negb
jnp
jae
cmpsl
inc
in
and
movsl
jg
ret
xlat
aaa
pushf
xor
push
rep
sarb
clc
xorl
mov
mov
outsb
push
adc
push
jg
jb
xchg
arpl
fists
in
and
add
imulb
jno
jp
mov
jle
aas
jle
and
sub
jb
mov
jae
loope
add
mov
mov
push
call
addl
mov
stos
repz
aam
add
xor
test
add
mov
inc
mov
inc
movsb
insl
mov
sub
adc
cmp
ret
sub
in
add
mov
ret
hlt
jle
add
cltd
sub
mov
mov
int3
call
or
in
and
ljmp
push
int3
enter
and
xchg
push
lret
or
cld
aam
punpcklbw
gs
insb
scas
mov
imul
push
push
movsl
dec
bound
pop
pop
rcrl
xchg
adc
jnp
inc
jge
mov
leave
paddw
inc
into
sbb
push
loop
mov
cmpsl
in
push
inc
andl
cld
popa
iret
mov
dec
jnp
fstpt
int
fmull
inc
mov
in
cmp
lea
push
cmpb
sub
das
fs
ror
xor
ja
test
std
cmpb
mov
pop
mov
rol
fsubr
jecxz
popa
out
imul
fmuls
shl
cmp
cmp
jno
jnp
outsb
inc
xchg
adc
mov
fstl
xor
sub
push
pop
jb
mov
push
sbb
cmp
push
decb
or
ficompl
cwtl
mov
push
inc
xchg
mov
fs
repz
sbb
mov
icebp
or
xor
jo
popa
jns
add
xchg
sbb
js
fcmovne
cmp
inc
nop
pop
mov
lcall
add
push
sub
ret
jg
xorb
jns
or
hlt
lock
aaa
dec
push
push
sbb
add
mov
xchg
inc
xlat
fldcw
std
sub
lods
jmp
dec
xlat
xor
es
aad
pop
xchg
in
stos
outsl
mov
shrl
xor
xchg
stos
add
fbstp
sbb
popf
divb
mov
out
lahf
jecxz
addr16
fdivl
popf
mov
lcall
pop
stos
lahf
push
push
sub
xor
xor
cwtl
outsb
pop
sbb
mov
mov
inc
mov
add
sbb
pusha
mov
pop
daa
xlat
rorl
cltd
jo
pop
mov
adc
ljmp
or
xor
xor
jmp
out
iret
movb
sbb
test
jle
lcall
test
jp
jecxz
aas
push
pop
jmp
stc
lds
jmp
mov
push
sti
cs
adc
int3
sahf
pop
pop
test
cmp
ret
rcrl
mov
mov
xchg
or
xchg
pop
sub
jmp
loop
xor
fwait
dec
mov
in
fisubl
cld
cmp
inc
xchg
mov
movsl
pop
sbb
iret
mov
cltd
cmp
jmp
mov
adc
dec
rol
mov
shlb
insb
mov
mov
push
pop
inc
cmp
jp
push
incl
int
cmp
sub
das
mov
xor
sbb
lahf
stos
mov
pop
loop
cmp
inc
sub
movl
xor
lods
or
dec
sbb
push
lret
subb
adc
in
cmp
mov
xchg
int
push
arpl
enter
sub
in
test
and
ljmp
mov
test
mov
test
push
jne
inc
mov
xor
mov
repnz
lret
ret
fwait
cld
sub
xorb
push
xchg
and
sub
jo
push
inc
jge
gs
fildl
cs
mov
jp
jg
inc
rclb
sarb
xor
fstl
mov
mov
int
hlt
imul
rcl
lods
jle
outsl
ret
ja
loopne
jp
cwtl
sahf
fbld
jns
jle
cld
or
cli
or
mov
and
xchg
push
mov
dec
test
sbb
js
fcompl
push
imul
insl
notb
and
pop
jne
pop
in
push
inc
cmpl
mov
push
pop
mov
jecxz
out
mov
fwait
sbb
sahf
cld
lock
idiv
cmp
xchg
jnp
mov
jmp
sahf
je
fimull
js
push
mov
mov
testl
add
xlat
adc
sub
popa
mov
push
gs
sbb
lahf
arpl
adc
fnstenv
jne
mov
loop
pop
fs
push
jecxz
jge
mov
ja
push
jbe
out
inc
lret
test
rcll
cwtl
into
sub
cmp
jg
dec
inc
pop
xchg
push
daa
fcoml
add
xor
mov
xchg
push
adc
in
dec
in
ret
push
xchg
inc
mov
repnz
mov
test
pop
mov
inc
outsb
rcll
cli
out
lock
in
subb
adc
inc
testl
cmp
shlb
cmp
and
test
mov
pop
pop
cmpsb
dec
out
into
mov
stos
fsubs
or
ret
xchg
addr16
xorl
xchg
leave
sbb
xor
aam
leave
xchg
fidivl
inc
add
or
mov
xchg
mov
xchg
push
sbb
push
jae
push
in
idiv
pop
xchg
test
test
adc
sbb
mov
add
xor
les
jno
or
inc
xchg
mov
fsubs
into
stos
sahf
mov
inc
push
ret
mov
and
stos
adc
jne
daa
pop
ljmp
call
jle
mov
roll
push
test
cmc
cld
out
push
ljmp
fsts
sub
rclb
mov
rorb
mov
xchg
lcall
or
pop
mov
or
mov
pop
pusha
add
fstps
and
outsb
jns
notl
xorl
fiadds
bnd
fwait
lahf
add
inc
cltd
jb
out
scas
and
fs
leave
mov
or
out
mov
push
cwtl
lea
xor
xchg
repnz
jp
sahf
mov
cmp
nop
fwait
xchg
popa
push
inc
imul
jo
sbb
arpl
sub
stc
mov
out
fadds
and
repz
scas
int
mull
nop
clc
inc
add
out
scas
inc
mov
cld
add
add
mov
int3
jmp
fsubrp
insl
addb
jnp
loopne
push
push
or
aam
xchg
stos
jnp
inc
cmp
push
outsb
lock
adc
in
inc
dec
pop
es
mov
sti
mov
stos
jne
lds
push
jne
mov
iret
imulb
call
mov
mov
es
cmp
movsl
jae
mov
and
cmc
in
repz
hlt
out
daa
mov
sub
adc
mov
sbb
jns
sub
dec
jne
jmp
lea
ljmp
pop
mov
push
sti
pop
xor
jb
icebp
fwait
xchg
repnz
and
fmuls
mov
xor
fsubrl
ja
imul
jae
loop
loopne
aam
pop
jnp
pop
fisttps
push
mov
sub
enter
rcl
or
inc
loope
mov
add
movsl
aaa
push
push
mov
js
mov
shlb
js
push
xchg
jg
inc
add
dec
cli
xchg
inc
in
mov
push
adc
test
dec
add
jle
mov
dec
mov
or
xchg
add
and
or
and
inc
or
and
mov
xchg
repnz
js
lods
out
repz
push
jmp
push
clc
sbb
pusha
push
pop
xorb
stos
push
int
lds
les
sub
ja
adc
lods
and
sbb
mov
shl
xchg
pop
decb
mov
xchg
dec
and
dec
and
sub
lcall
push
scas
cmpsl
stc
movsl
in
cmp
loope
xor
lahf
je
frstor
jae,pt
dec
call
xlat
mov
fsts
push
ss
add
enter
testl
ljmp
cltd
jb
dec
push
adc
dec
xchg
lret
push
jo
sbb
push
xchg
test
xlat
imul
add
inc
test
mov
enter
xor
sbb
lahf
cmpsb
mov
cmp
mov
xor
cwtl
mov
mov
cs
or
cmpsb
dec
jmp
fstl
in
jge
sub
lcallw
sarl
inc
mov
int3
inc
fidivrs
jnp
xor
loop
add
fmull
insb
and
in
push
je
adc
lahf
pop
in
clc
mov
es
fildl
pop
xor
mov
cmp
sub
mov
cmp
rorl
and
lret
xchg
faddl
loope
shll
stos
dec
cltd
cmpsb
inc
pop
pushf
pushf
mov
lret
jbe
fmull
pop
xchg
pushaw
shll
int3
pusha
inc
jno
xchg
sbb
mov
inc
fldt
or
pop
pop
fnstcw
mov
outsl
addr16
sub
fcmovbe
pushf
cmpsb
xor
and
aaa
jmp
mov
push
pusha
sub
gs
arpl
jo
add
js
xor
mov
mov
xchg
pop
lahf
fcmovnu
sbb
mov
cli
in
fucomi
test
and
mov
mov
adc
sbb
pop
fsubrl
or
imulb
int
aas
aad
sti
push
sbb
lea
test
xor
cmpsl
and
add
or
mov
fmuls
mov
movsl
add
pop
fimull
loope
add
mov
jb
or
mov
stc
inc
and
andl
lock
inc
out
xchg
mov
movsb
scas
and
je
lcall
jge
mov
inc
mov
in
pop
and
sbbb
lahf
aaa
mov
js
push
data16
out
cwtl
sbb
sti
cmp
cmp
xor
dec
test
inc
add
and
mov
mov
adc
std
dec
add
adcl
imul
lock
aam
stos
mov
loopne
leave
cmp
arpl
push
adc
cmp
rol
xor
and
mov
mov
ficoml
or
cmc
mov
andl
cltd
jae
or
sbb
add
outsb
and
ret
sub
dec
aaa
jae
les
lret
shrb
and
push
push
xlat
out
sub
stc
pushf
data16
mov
lds
and
ljmp
cmc
in
loop
pop
data16
cmpsb
mov
stc
lods
inc
nop
notl
aam
adc
sub
mov
push
clc
jnp
out
sub
repz
mov
fildl
jle
mov
stos
pop
xchg
add
add
mov
dec
scas
adc
inc
repz
push
cmpsl
inc
movsb
add
lret
arpl
rclb
mov
pop
outsb
sti
movsl
out
mov
pop
push
mov
adc
aam
cmp
mov
loopne
mov
adc
ds
xor
push
pop
daa
in
test
aad
mov
dec
sbb
mov
xor
sub
rcr
jge
ds
lret
jmp
xor
push
andl
cmp
sbb
inc
mov
dec
sub
inc
sub
shrl
scas
dec
mov
callw
test
loopne
aaa
cmp
pop
sbb
out
inc
push
test
push
cmovb
inc
popa
lret
mov
hlt
adc
and
pop
jmp
lret
out
ret
jmp
push
mov
mov
les
mov
mov
and
cmpsl
sub
daa
jge
stos
mov
push
in
push
xor
mov
dec
push
arpl
dec
inc
and
sahf
fs
dec
flds
ret
fidivl
mov
daa
test
xchg
stos
sti
cmp
cmpsb
imul
inc
jnp
or
jl
xchg
test
mov
fildll
movl
fstps
in
ljmp
dec
imul
push
daa
xlat
sbb
mov
cltd
jnp
dec
dec
xor
mov
mov
pop
sub
cmovbe
mov
pop
inc
lahf
push
leave
jle
jno
push
jecxz
out
jle,pt
add
xchg
pop
ror
psubusw
inc
pop
hlt
push
data16
push
lcall
divb
jb
into
mov
fildll
add
outsb
mov
loop
mov
cmp
xorl
jp
jno
mov
lret
cmp
xchg
inc
ret
pushf
jg
lock
ds
shr
and
pop
movsb
mov
fadds
jo
cld
mov
bound
in
jge
xchg
sbb
inc
icebp
pop
adc
cmp
jecxz
outsb
dec
insl
xor
lcall
in
push
cmpsl
movsb
push
test
sub
das
dec
fbstp
lret
add
hlt
ss
or
xor
cmc
aam
int3
mov
ss
xor
test
sub
in
rcrl
fcmove
dec
jbe
cmc
dec
cmc
jg
in
popf
push
clc
jle
addr16
or
add
or
test
xchg
int3
popa
lea
push
popf
sahf
sub
in
loopne
jge
pushf
add
insb
enter
imul
mov
dec
loope
sub
pop
lock
xor
pushf
mov
mov
lret
out
sbb
sahf
cmpsl
cmp
into
jmp
mov
push
or
pop
mov
xchg
mov
imul
insl
sbb
mov
xchg
mov
push
jg
shlb
sbb
movq
mov
test
aas
jno
out
test
rcrb
stos
pop
out
dec
mov
sbb
pop
pcmpeqd
mov
and
movsb
sub
push
mov
call
rcrb
dec
lahf
ds
sbb
lea
sbb
pop
in
inc
ficomps
test
dec
pop
cmp
dec
int
sub
mov
inc
inc
lods
jmp
daa
lds
js
cmp
addr16
orb
cmp
fwait
mov
cltd
insb
and
jbe
aaa
adc
mov
into
stc
push
adc
stos
xchg
shlb
and
cs
inc
cld
mov
add
cwtl
call
inc
cwtl
adc
cmp
jne
rep
mov
inc
mov
call
loopne
xlat
aas
mov
lret
push
mov
cmp
cltd
clc
rcrb
push
fcmovb
outsl
icebp
mov
adc
mov
or
and
pop
pop
jb
add
push
and
push
push
rcl
mov
movsl
rol
inc
dec
or
loop
dec
mov
inc
xor
mov
daa
and
cmpsl
mov
outsb
mov
roll
xchg
push
mov
dec
lret
arpl
mov
jne
add
sbb
fisubrl
iret
mov
data16
xor
dec
ss
addb
repz
mov
ljmp
cmp
or
mov
sbb
sahf
mov
mov
jg
mov
sbb
repnz
loopne
fwait
pushf
in
lods
dec
in
dec
jbe
push
xchg
add
int3
mov
add
mov
push
mov
lods
cmp
rorb
scas
pusha
dec
jg
dec
aad
call
sub
xchg
das
xor
sti
cld
pop
repz
or
cwtl
pop
data16
jle
sub
gs
push
dec
call
jecxz
sbb
jmp
sti
mov
inc
shr
daa
mov
xchg
jne
sbb
std
adc
mov
add
bnd
inc
xor
xchg
xor
jno
shrb
ljmp
cld
xchg
insl
addr16
cltd
loope
inc
jns
sub
aad
add
xchg
arpl
xor
mov
insl
jmp
pop
inc
leave
xchg
mov
lock
push
cmpsb
enter
repnz
scas
ret
mov
aas
mov
in
rclb
xchg
pinsrw
push
outsl
mov
int
push
lcall
insl
pmuludq
movsl
in
mov
mov
pop
push
mov
push
adc
or
out
addr16
sti
inc
jmp
and
clc
cltd
fs
mov
aad
inc
ljmp
gs
xor
pop
ret
dec
incb
pop
push
in
and
inc
pop
lahf
arpl
insl
mov
rorb
cltd
movsb
mov
insl
mov
js
xchg
or
xchg
mov
inc
stos
or
mov
lods
fldt
sbb
push
iret
or
out
insl
jbe
push
rorb
xchg
mov
leave
sbb
into
xlat
inc
int3
es
pop
mov
push
add
int3
lods
test
mov
jle
lods
cmp
add
sahf
es
mov
pop
in
push
outsb
icebp
adc
jp
loope
mov
mov
xor
pop
out
test
test
iret
daa
test
cmp
mov
pop
or
jne
pop
cmp
lea
out
or
ret
into
cmp
adc
mov
or
pop
negb
mul
je
int3
pop
add
pop
add
inc
mov
fdivs
mov
inc
xor
insb
push
xchg
outsb
mov
sbb
dec
adc
adc
pushf
mov
mov
mov
and
sbb
jnp
xchg
sbb
or
jnp
out
mov
jb
mov
jecxz
js
inc
test
stc
gs
outsl
es
add
xchg
in
cmp
sbb
testb
mov
repnz
rorb
push
sub
mov
mov
ret
idivl
push
or
push
ret
mov
lds
lret
les
mov
out
push
xor
shlb
xchg
daa
mov
pop
cmp
enter
pop
and
mov
xor
add
fwait
mov
aaa
fprem
sbb
mov
aad
jmp
jnp
sbb
insl
pushw
sahf
push
xor
push
test
push
es
push
pop
cmp
and
jp
add
out
sub
popa
jle
and
sti
xor
xchg
cld
add
inc
push
and
cmp
dec
imul
xor
xchg
popf
notb
test
add
jl
push
sub
and
aas
fldenv
xchg
ljmp
or
into
mov
stc
and
clc
pop
lret
push
fstpt
sub
push
inc
in
lds
js
cmpsb
das
push
mov
push
out
mov
xchg
inc
ror
mov
repnz
outsb
pop
ljmp
dec
inc
xchg
inc
test
cmpsl
jo
rolb
gs
push
test
jo
sbb
in
aaa
test
xchg
in
cwtl
aas
lock
jns
push
std
out
shll
mov
mov
jg
xchg
pop
mov
mov
ret
cmp
iret
cld
xchg
fcoms
daa
and
fidivrl
jbe
pop
jl
inc
lock
stc
aaa
push
jnp
int3
and
in
enter
adc
ljmp
cmpsl
or
repnz
dec
cmc
cmc
int
lock
add
daa
fcoml
aaa
sub
inc
inc
mov
mov
adc
scas
mov
jns
out
dec
push
jl
and
rol
or
xchg
decl
into
js
fs
pop
push
lds
mov
adc
mov
add
and
lods
or
ja
out
sbb
lock
shl
sub
dec
mov
or
lret
or
mov
aaa
jb,pn
aam
movsb
in
daa
pop
das
fwait
ret
in
inc
sbb
rcll
add
fisubrl
enter
pop
dec
mov
jae
shr
jl
movsb
cmc
imul
js
mov
inc
xchg
mov
xor
xor
das
jl
cmpsl
stc
push
dec
popf
pushl
mov
jg
idiv
test
add
mov
std
in
jno
lock
push
mov
sub
or
repz
ss
lea
xchg
jecxz
and
sub
clc
xchg
cmp
dec
xchg
fs
int3
fdiv
push
outsl
xchg
push
iret
inc
adc
dec
test
cs
sub
or
lock
mov
mov
inc
push
or
ljmp
arpl
sbb
dec
cmc
xchg
cmc
into
rcr
or
jb
pop
xchg
std
jg
mov
cmp
mov
outsl
mov
divb
xchg
cld
sub
pop
mov
or
out
inc
neg
jbe
rcrb
and
dec
fsubr
icebp
mov
aam
shll
xchg
xlat
lret
jae
hlt
lock
imul
sahf
mov
xchg
mov
enter
jnp
fnstsw
divb
cmpsl
jp
mov
jns
inc
cld
sub
xor
mov
imul
dec
sbb
cmp
stc
or
outsb
gs
inc
push
test
jae
inc
imul
pop
shrb
fs
lret
std
cmp
stc
mov
test
xchg
add
dec
cmp
in
imul
int
push
push
aaa
test
push
add
jne
orb
add
out
inc
outsb
cmp
mov
fsubrs
add
xor
lret
mov
inc
data16
mov
in
or
xchg
imul
inc
push
mov
jp
sub
popa
mov
sbb
or
add
push
add
fisubrs
pop
dec
mov
dec
stos
dec
cmc
adcb
lods
add
mov
mov
mov
cmp
mov
cmp
or
popf
aaa
dec
xchg
mov
nop
in
fsubs
daa
or
inc
insl
mov
jp
arpl
sub
idivb
xchg
cli
flds
pop
ss
jl
cmp
aas
bound
scas
imul
mov
enter
jnp
lds
jns
rcr
push
pop
cli
stos
icebp
pushf
loop
les
outsl
or
jnp
shll
pop
mov
lret
cltd
repz
shrb
inc
movsb
sbb
test
clc
adc
cmpsl
mov
xchg
lock
repz
sbb
movsl
xchg
aam
jb
jecxz
pop
jae
jo
je
add
mov
cmp
out
in
xchg
pop
mov
dec
rolb
sub
add
cmp
repz
in
dec
sahf
xor
imul
xchg
xchg
cs
fdivrp
outsl
lods
cli
and
lods
loope
andb
cs
push
adc
test
pop
enter
push
scas
test
sub
dec
dec
ja
aad
mov
mov
inc
push
jmp
fcoms
mov
test
sub
into
daa
or
rorl
inc
adc
mov
outsb
mov
shlb
out
mov
push
inc
mov
sbb
and
pop
push
jge
jno
and
imul
cmp
push
call
daa
jbe
stc
inc
or
fbld
mov
sbb
pop
popl
arpl
xor
adc
stc
pop
dec
inc
daa
je
inc
inc
jno
aaa
shlb
movsl
sbb
xchg
jb
push
mov
mov
rcll
push
cmp
cmp
testl
cs
out
pop
jb
jp
jp
adc
fimull
mov
in
test
inc
ficomps
jp
in
fsubrs
jl
sbb
mov
aad
inc
cmp
xchg
lods
mov
mov
jl
push
mov
sbb
out
hlt
cmpsb
test
sbb
test
filds
outsb
loop
sub
mov
sti
jmp
popf
push
test
lock
subb
mov
and
popf
lock
pop
or
ljmp
xor
push
lret
inc
aaa
or
pushf
in
in
sbb
jo
mov
loop
popa
mov
push
mov
popf
adc
dec
push
cmp
std
rolb
pop
mulb
and
add
in
shr
or
add
icebp
dec
fsub
roll
loope
rclb
std
add
subl
je
aad
push
lret
or
dec
sub
push
icebp
pop
push
or
lock
mov
cmpsl
mov
sub
sbb
pushf
dec
or
xor
sub
jp
mov
test
jns
push
ds
cmp
and
mov
lret
leave
pop
rep
jno
call
loopne
sbb
jo
fimuls
stos
fs
jnp
out
leave
sbb
mov
enter
cmp
mov
or
push
mov
and
sub
fisttps
in
inc
mov
adc
stos
adc
push
mov
xorb
fsub
push
mov
fyl2x
jl
sub
bound
nop
inc
int3
or
mov
in
outsl
add
and
insb
mov
sub
icebp
xchg
stos
hlt
inc
jb
sub
pop
cmc
out
sti
adc
addr16
dec
xorb
adc
fsts
mulb
movsl
pop
dec
mov
push
in
pop
jne
sti
mov
sahf
fs
movsl
push
rorb
add
xchg
dec
lods
pop
jle
jns
or
lds
and
mov
cltd
cltd
bound
stos
and
push
dec
dec
xchg
sbb
stos
in
repnz
int
enter
js
mov
sub
dec
fs
in
fdivrl
jmp
fisttps
scas
dec
push
mov
das
lret
and
lret
jecxz
push
loopne
out
mov
dec
xchg
xor
insl
repnz
ficoms
xor
out
mov
repnz
xchg
les
ret
xchg
jge
sub
xor
jg
xchg
aaa
arpl
sti
mov
testl
aaa
aad
pop
xchg
pop
scas
lcall
and
cmpsb
dec
daa
or
or
mov
repz
mov
mov
jle
jbe
movsb
push
push
arpl
inc
xlat
in
push
lahf
mov
cli
inc
sbb
mov
lsl
push
ds
jl
push
nop
adcb
test
add
adc
mov
jnp
push
jg
scas
push
jno
adc
mov
int
lea
push
popf
insl
aas
dec
and
inc
mov
jno
filds
jbe
sbb
mov
xchg
xor
mov
outsb
lods
jge
lret
sub
pop
inc
push
sbb
sbb
out
cwtl
data16
pop
shrl
and
repnz
push
in
cmp
int3
jne
rolb
dec
dec
test
or
add
jb
dec
fldt
sub
dec
rorl
andb
mov
push
cmp
push
je
inc
arpl
adc
cmp
loopne
sahf
mov
mov
aaa
mulb
pop
gs
sbb
jbe
and
cmp
jg
xchg
jno
mull
inc
push
addr16
dec
sub
jb
es
lcall
in
add
xchg
adc
sti
roll
pop
sub
arpl
clc
data16
push
aaa
mov
sub
mov
mov
gs
enter
cmc
cli
sub
data16
push
les
stc
int3
push
mov
in
sub
or
dec
addb
test
adc
in
mov
sbb
dec
stos
jmp
xchg
lods
sub
jno
or
add
sahf
mov
cmp
add
es
pop
xlat
inc
lret
dec
ret
out
test
cmp
mov
stos
lahf
out
icebp
push
loope
mov
sti
scas
stos
mov
aas
aad
movsl
mov
dec
in
pop
call
dec
mov
aad
imul
ficompl
scas
fdivr
loop
push
scas
mov
lock
xchg
xor
call
jl
fisubl
out
rol
inc
and
push
icebp
lcall
fwait
in
leave
xchg
in
cmp
push
insl
popa
or
wrmsr
dec
ljmp
push
fstpl
pop
fists
adc
xor
gs
je
movsl
leave
mov
add
adc
cmp
ja
or
insb
mov
gs
lock
add
jmp
mov
push
inc
aad
ja
cmp
cs
dec
sbb
sbb
cli
xchg
je
out
inc
mov
lods
pop
mov
sahf
push
adc
jb
popa
cmp
mov
sbb
and
in
imul
sbb
sahf
arpl
cli
xlat
cmpsl
daa
lcall
outsb
andps
push
sahf
jmp
xor
cmpsl
sbb
in
jg
imul
mov
andb
push
mov
lret
and
xchg
popa
sbb
popf
insl
xchg
addb
mov
mov
aad
sub
jg
mov
cmp
mov
lods
push
mov
sbb
fwait
movups
jp
jns
jb
jbe
jmp
call
sub
dec
push
sub
fcomps
popf
fdivrs
call
sahf
push
flds
mull
mov
mov
push
xchg
sub
iret
sub
mov
pop
in
mov
nop
lcall
mov
fs
fistpll
adc
jp
cmp
stos
pushf
xchg
cwtl
mov
adc
jl
jns
cmp
test
rcl
cmpsl
aaa
lock
pop
and
cmp
sub
and
xchg
sti
dec
pop
push
lods
push
mov
aas
jno
jg
lods
in
daa
rcll
icebp
add
and
xchg
adc
cmpsl
scas
jb
arpl
in
fwait
cli
ja
mov
jle
xchg
and
fwait
sbb
sub
in
mov
mov
add
push
call
mov
xor
daa
xchg
add
andw
xlat
aaa
sti
pop
faddp
outsb
sub
stos
lret
sub
pop
and
out
mov
fdiv
rolb
sub
decl
loopne
mov
repz
or
mov
sahf
shlb
shl
dec
int3
js
cli
adc
mov
iret
test
push
in
shrb
ljmp
cs
cltd
xchg
cmc
mov
mov
or
stc
int
imul
lret
push
pop
mov
fistl
adc
mov
mov
mov
inc
mov
add
cmpsb
mov
fstpt
cmp
sbb
adcl
popf
arpl
jno
insb
mov
pop
push
fldenv
mov
std
gs
lock
add
pusha
leave
dec
mov
sarb
insb
loop
pop
or
push
and
je
js
test
test
dec
mov
mov
push
cmp
jne
clc
cmp
xor
jmp
sub
cmpsb
add
movsl
mov
xor
or
push
daa
sub
jb
cli
in
fcmovbe
pop
pusha
jp
xchg
rclb
std
add
in
movl
gs
lods
inc
aaa
pop
imul
jge
mov
gs
push
iret
sahf
xchg
outsb
xor
dec
cmp
jge
loop
mov
mov
mov
adc
stos
stc
push
cmp
cmp
and
xchg
jg
add
adc
push
adc
sub
ljmp
out
sar
scas
pop
xchg
push
stos
xchg
fcmovnu
cmpsb
push
aam
addl
cmp
sub
sub
inc
mov
mov
fwait
mov
or
pop
fadd
mov
lods
xor
test
cmp
or
pop
pop
adc
add
mov
mov
pop
pop
jg
ficoml
ljmp
jnp
gs
cmp
jbe
pop
inc
sbb
sub
mov
lds
je
lods
repz
cmpsl
out
xor
loope
xor
jge
pusha
insb
loopne
in
andb
cmp
mov
dec
mov
dec
fists
push
insb
arpl
pop
mov
mov
mov
es
call
mov
imul
in
mov
add
pop
je
int
or
or
jbe
lret
and
push
lods
outsl
daa
popf
push
pusha
inc
lds
jne
int
inc
xor
dec
fldt
cmp
inc
fldl
sbb
or
fiadds
je
mov
cmc
mov
pop
popf
pop
dec
or
aaa
sbb
cmp
stos
popf
testl
push
mov
dec
pop
pop
in
add
sbb
insw
fdiv
loop
dec
inc
repnz
shlb
xor
xchg
adc
jnp
adc
cmp
mov
jb
jle
shl
pushf
mov
movb
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
pop
add
popa
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
jge
fstpt
mov
mov
cmp
sub
sub
lds
mov
or
pop
mov
xchg
inc
loopne
add
movsb
testb
stos
lret
or
lods
int
pop
and
xchg
fisubrl
pop
jo
scas
popa
inc
mov
and
mov
or
xor
inc
aam
xchg
jecxz
insl
xchg
add
aad
and
dec
pusha
xchg
ret
popa
adc
cmp
dec
inc
dec
orl
push
dec
jmp
mov
cld
jns
sub
jns
mov
sbb
aad
push
jns
gs
movsl
test
jl
mov
jmp
dec
push
sub
pushf
addr16
xor
xor
into
sub
adc
and
mov
loopne
pushf
xchg
rorb
fcomps
and
dec
sub
and
bound
pushf
mov
or
enter
mov
faddl
push
pop
mov
mov
sub
xchg
push
pushf
xor
repz
xor
xchg
out
mov
sub
add
xchg
cmp
cmp
mov
shll
cld
ror
xor
lea
mov
scas
cli
inc
and
cmp
cmp
jbe
aam
cltd
test
pop
xlat
mov
mov
push
shlb
lahf
cmp
data16
mov
cmc
aas
sub
mov
mov
jns
cmpsl
nop
test
mov
jns
adc
jo
imul
adc
mov
ljmp
cltd
mov
push
lcall
and
xchg
mov
aam
and
andl
sahf
das
sbb
inc
xor
cmpsb
dec
and
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
fistl
cmp
lret
flds
dec
daa
push
test
mov
cmc
insl
dec
cmp
sub
outsl
adc
mov
push
push
mov
and
adc
inc
mov
and
bound
jne
adcl
shll
data16
lret
stos
cmpl
dec
sti
sbb
lcall
mov
push
imul
push
popa
fidivrs
aas
imul
orb
push
stc
std
testl
pop
adc
in
ds
dec
mov
jne
sub
adc
lret
inc
pushf
test
jae
mov
je
xchg
jb
xor
lcall
push
inc
dec
shll
add
or
rcrl
sub
inc
mov
sbb
adc
pop
cwtl
mov
cmp
or
nop
add
out
decb
bound
mov
inc
pop
leave
xor
sub
xorb
mov
stos
fimull
decb
ljmp
xchg
cli
or
daa
and
enter
mov
mov
mov
int
xor
out
icebp
rcll
xchg
lock
push
shll
or
roll
and
cmc
js
dec
mov
pop
rorb
in
fcomip
jp
mov
sub
adc
repnz
std
mov
test
jne
add
ljmp
cmpsl
fldt
mov
and
jo
test
sti
stos
inc
inc
icebp
out
test
sti
stos
loope
and
xlat
dec
push
mov
orb
cmp
lods
inc
lahf
cmc
clc
jns
out
pop
mov
cs
lret
daa
ret
dec
jnp
pop
sbb
inc
jns
pop
sub
mov
les
ficomps
push
sbbl
inc
and
dec
lret
inc
sbb
cmp
lahf
imul
iret
cltd
mov
fwait
gs
setg
mov
adc
mov
add
pslld
inc
loop
sbb
das
sub
and
mov
push
fdivrp
iret
or
loope
pop
and
inc
mov
int3
xchg
mov
fdivs
push
andb
lock
shrb
mov
imul
jl
pusha
lds
xor
inc
adc
or
jne
sbb
test
je
sub
fsubs
outsl
mov
repnz
mov
sbb
dec
xor
out
adc
cmp
cli
xchg
fisubl
fldenv
fmuls
aas
mov
mov
push
add
adc
iret
cmp
call
aam
pop
ss
mov
inc
in
les
lret
jecxz
and
dec
dec
icebp
or
aas
nop
inc
push
into
adc
inc
out
aaa
mov
sub
inc
icebp
sbb
rcll
les
sbb
hlt
imul
daa
insb
mov
insl
fbstp
scas
mulb
dec
mov
or
mov
pop
xchg
mov
test
add
lock
pop
adcb
jp
test
pop
ficoml
lds
out
add
cmp
into
jae
aad
out
iret
loope
adc
sbb
inc
or
sti
jge
leave
push
push
nop
cwtl
clc
movsl
jne
inc
mov
adcb
fisubrs
inc
fs
hlt
pop
scas
push
int3
sti
fnop
pop
scas
in
mov
sbb
inc
xchg
push
stc
mov
pop
sbbb
jge
sub
ret
push
adc
outsb
xor
jb
scas
or
lods
sbb
cmp
adc
lret
hlt
enter
sbb
pop
jo
pop
lods
push
insb
pushf
aam
push
pop
popa
xor
mov
mov
lods
dec
adc
inc
clc
mov
les
stc
dec
ret
dec
adc
mov
cltd
xor
push
insl
and
std
inc
xlat
xchg
test
movl
subl
popf
jo
sbb
addr16
call
add
gs
pop
mov
mov
lret
pop
jle
add
cld
into
test
rclb
ret
sub
push
and
or
adc
add
fwait
das
xlat
cmp
cmp
cmp
cmpsl
mov
lock
cs
pop
dec
sbb
iret
loopne
out
fnstsw
jmp
jg
sub
push
leave
jno
popa
mov
insb
fsubl
leave
add
mov
xchg
xchg
ret
jbe
mov
jge
testl
add
mov
add
jmp
lret
dec
cmp
or
orl
inc
imul
arpl
fxch
jbe
push
xchg
cmp
leave
xor
mov
mov
mov
xor
mov
pop
idivl
inc
jl
jecxz
adc
aaa
jae
das
cwtl
pop
rol
out
pop
inc
jmp
mov
or
jp
jg
out
mov
data16
sbb
pop
sub
sub
xchg
mov
xorb
and
and
pop
shlb
popf
dec
dec
xor
iret
pop
cmpsb
inc
mov
mov
mov
fisubl
cmc
mov
ss
push
push
fstl
loope
pusha
cmpsl
cwtl
jno
add
mov
in
add
pop
mov
cvtpi2ps
aad
push
sub
sub
push
lods
std
pop
icebp
in
inc
push
nop
cmp
addb
stos
and
fistpl
lds
sbb
aaa
punpckhbw
mov
inc
sarb
jl
jmp
filds
bound
out
adc
sbb
andl
mov
jae
test
filds
sbb
outsl
and
adc
inc
in
sub
sbb
stc
jmp
mov
adc
test
dec
pop
fidivl
ficoms
scas
push
xchg
mov
push
mov
xchg
cmc
ffreep
fst
loop
mull
jg
push
int3
ss
in
pop
cli
mov
stos
pop
push
icebp
mov
xor
mov
rcl
jb
jbe
in
push
mov
dec
cmp
lret
mulb
out
je
enter
gs
inc
pusha
xorl
xchg
xchg
filds
add
dec
mov
mov
jne
push
fcmovne
xchg
das
pop
mov
cmp
mov
add
and
jns
fistpl
fcomi
push
imul
cmc
leave
jge
cmp
shrl
mov
add
nop
inc
in
sub
mov
cmpsl
adcb
movsl
jge
add
subl
push
mov
push
push
sti
jle
pop
mov
push
jae
mov
add
lret
mov
or
xor
push
mov
cmp
inc
dec
bound
scas
bound
add
test
imul
sbb
shll
insl
jp
mov
mov
pop
pop
mov
sti
je
fdivl
add
xor
jnp
outsl
stc
out
sar
dec
mov
jns
sbbl
sbb
pop
mov
xlat
mov
jge
sahf
loop
sbb
and
sahf
cmpsb
adc
push
xor
add
js
sub
jge
gs
sub
pop
iret
das
mov
jge
es
pop
fsub
push
int
pop
lahf
repnz
icebp
cmp
pop
cmp
jmp
inc
jecxz
jg
xor
jne
stos
mov
lea
mov
clc
push
fcoml
sbb
push
iret
test
cmp
or
dec
imul
xor
mov
idivl
or
cmp
cmpsb
sbb
add
das
subl
cld
cmp
mov
sub
jp
inc
jne
loopne
xor
dec
test
pop
ss
and
insb
int
sub
lock
xor
clc
enter
enter
repnz
icebp
xchg
add
jns
or
lods
pop
pusha
movsl
adc
ss
cmp
cmp
seto
ret
push
pop
in
push
mov
jb
subl
push
popa
sub
push
test
inc
jmp
filds
adc
cmp
add
fsubrl
sub
ja
jno
pop
mov
dec
fdivrp
std
push
mov
test
les
inc
inc
adc
mov
xchg
fs
mov
inc
and
stos
mov
pop
data16
daa
cmp
sti
mov
outsl
lock
xchg
inc
mov
int
jne
inc
adc
inc
add
pop
jae
loopne
mov
or
adc
dec
dec
mov
mov
pop
adc
mov
lahf
sti
push
jb
fwait
jns
xchg
xor
adc
pop
sub
add
dec
dec
sub
addr16
lods
arpl
mov
fisubl
nop
or
xor
adc
std
test
dec
add
bound
add
pop
stos
sahf
adc
dec
xor
add
push
cmpsb
adc
sub
lods
movsb
mov
and
sbb
xor
or
ret
xchg
ljmp
in
push
xor
pop
cmp
push
outsb
dec
popa
xchg
ffree
clc
dec
dec
mov
mulb
sti
mov
test
add
or
jae
sub
fsubrp
mul
sti
push
push
mov
xlat
mov
add
sub
testl
js
adc
fldt
mov
mov
xor
sbb
mov
dec
adc
lock
or
pop
stc
faddl
test
jmp
orb
rorl
sbb
dec
inc
inc
inc
jno
in
cmp
ret
mov
push
enter
dec
aad
scas
cwtl
repz
cltd
je
sahf
push
jb
aaa
inc
sub
mov
loop
jo
or
add
mov
fdivr
jnp
outsb
jecxz
xor
and
test
cmpsl
fldt
hlt
shl
in
mov
jg
push
into
cwtl
test
sbb
lahf
mov
aaa
push
sbb
std
or
data16
aam
ret
xchg
in
xchg
movsl
or
xchg
daa
aas
mov
test
stc
adc
les
fmuls
pop
jno
cmc
fucomip
mov
pop
pop
adc
and
cmp
cmp
sbb
daa
jb
and
frstor
jmp
mov
xlat
cmpsl
test
fistl
xor
in
or
dec
cld
subb
out
pop
fisubrs
out
aam
test
dec
jne
into
fisubs
push
lret
xor
adc
in
mov
ret
cmp
push
in
shl
out
subl
aam
scas
xor
mov
dec
mov
test
xlat
dec
outsl
stos
cmp
dec
lret
pop
add
xor
int3
fisubrl
mov
test
push
lds
insb
xor
jne
pop
adc
insb
testl
add
cmp
mov
in
lds
or
xchg
push
pop
test
xor
jl
inc
fs
lret
aam
inc
pop
sub
into
aad
rcll
xorb
push
fs
inc
into
imul
mov
dec
sub
pop
rcll
sub
cmpsl
jo
push
inc
roll
pop
adc
scas
sbb
data16
fcomp
ljmp
or
xchg
test
sub
ficoml
push
fdecstp
pop
mov
and
cmp
mov
xchg
add
cli
push
add
xlat
pop
sub
mov
sub
mov
jmp
fdivl
mov
lcall
pop
movsl
mov
cmp
out
dec
mov
dec
sbb
push
jp
mov
arpl
pushf
aaa
pop
xchg
icebp
mov
dec
js
dec
mov
fistpll
fldenv
and
imul
js
std
pop
out
sbb
aaa
sahf
es
xchg
sbb
dec
add
out
inc
nop
dec
sbb
adc
pop
in
adc
test
mov
clc
les
xchg
data16
xchg
subb
pop
or
ror
cs
add
fisubs
sub
sub
outsl
or
fucomip
dec
pop
insb
and
jmp
xchg
inc
shrb
inc
sbbl
and
psubd
mov
sbb
mov
push
cmp
push
mov
cs
ljmp
sub
adc
test
movsb
clc
idivl
out
jns
pop
lea
nop
aaa
jno
mov
daa
mov
int3
or
add
mov
stos
adc
fsubrp
or
mov
popf
mov
fists
mov
in
lea
lods
push
and
rcrb
loope
xor
scas
lret
int3
aas
cmp
out
jecxz
mov
pusha
and
aaa
adc
lods
cmp
and
out
addl
stos
mov
xchg
xchg
insb
rorl
cwtl
ja
ret
insb
cld
mov
push
adc
add
mov
nop
mov
push
jge
mov
adc
pop
or
shrl
scas
movsb
lods
xchg
sbb
mov
mov
and
or
jge
pop
fbstp
mov
or
xchg
shl
mov
adc
xor
mov
dec
xor
pop
ret
out
fldenv
xchg
fistpl
cld
sbb
out
inc
js
dec
pop
les
mov
and
popa
mov
pop
add
outsl
int3
insb
jae
xor
push
fidivrl
movsb
push
cmpl
sbb
sti
sahf
jge
ret
divl
inc
push
out
push
add
into
xlat
enter
stos
incl
jnp
mov
cmovns
fnsave
push
aaa
inc
dec
push
adc
inc
xor
incb
jmp
dec
popa
push
jnp
data16
sbb
fbstp
jnp
lcall
movsl
stc
int3
inc
add
test
repnz
mov
push
sub
fistps
jl
scas
inc
das
lcall
popa
fldt
fistps
fwait
jo
sbb
xchg
mov
outsb
xorl
sbb
icebp
mov
sbb
lea
aaa
out
jns
aas
mov
inc
push
shll
aad
andl
mov
lds
mov
hlt
adc
and
popa
out
xor
pop
xchg
cmc
sahf
js
jne
cmp
movsl
icebp
adc
jns
xorb
sub
pop
jp
es
enter
imul
outsb
and
or
rorb
bound
dec
subl
xorb
insb
cmpsb
ja
movsb
bound
xchg
pop
xor
jae
lock
xor
in
push
popf
mov
repnz
mov
mov
movsb
loop
aaa
sahf
dec
cwtl
pop
out
push
pusha
xchg
cmpsl
lods
ret
dec
scas
icebp
adc
mov
or
lahf
loop
add
hlt
cmp
cwtl
loopne
insl
push
ss
mov
cmp
dec
mov
or
sbb
int3
fdivl
xorb
push
hlt
pop
and
sub
mov
data16
cmpl
cmp
andl
add
add
sbb
sub
loop
gs
inc
into
xchg
pusha
lds
out
into
loopne
sbb
ljmp
push
xchg
divl
or
inc
xor
leave
inc
and
adc
ljmp
cld
outsb
xor
arpl
mov
cld
repnz
sbb
std
test
scas
pop
cld
mov
popa
int3
fildl
shlb
jnp
adc
sti
jecxz
jge
or
mov
cmpsl
push
mov
cmp
stos
xor
inc
fisubrs
mov
inc
xchg
dec
pop
adc
int
jb
pop
mov
movsb
andb
mov
xchg
test
nop
mov
or
leave
mov
mov
arpl
les
sbb
and
orb
pop
les
or
push
imul
xchg
jge
fistps
fists
sub
sub
fildll
pop
jns
pop
xor
mov
andl
ret
xor
mov
inc
mov
sarb
cmpsl
xor
pushf
jbe
imul
and
inc
outsb
inc
xchg
stc
mov
pop
pop
popa
outsb
test
aam
xchg
movsl
xchg
jle
fisubs
ret
jno
jne
pop
insl
in
shl
jecxz
inc
jo
rclb
mov
iret
jmp
bound
bound
shlb
in
mov
push
pop
int
push
sub
mov
jecxz
shr
repnz
aaa
aam
insl
in
push
lds
pusha
push
cmp
adc
mov
jo
xchg
mov
jle
icebp
mov
add
mov
push
les
fiadds
inc
cmpsb
jnp
mov
sub
inc
fucomp
sti
adc
adc
jle
mov
jbe
mov
sub
scas
cmpsb
subb
ja
shll
call
dec
cmp
scas
sub
mov
pop
icebp
add
jo
subb
jl
jb
loopne
push
cmp
sbb
outsb
mov
loope
fmull
mov
rol
pop
orl
push
dec
pop
or
push
push
clc
aaa
hlt
fs
test
cmpb
add
je
insb
pop
mov
std
outsl
add
push
sub
dec
xor
aam
add
cmp
push
std
sbb
mov
xchg
pop
imul
adc
xor
mov
jmp
stc
test
ffree
push
ror
mov
push
dec
xchg
sub
dec
loop
loopne
aas
movsl
sbbb
sub
cmp
sub
and
scas
sahf
push
sbb
xorb
add
or
les
fwait
dec
xor
imul
jmp
out
xor
ss
push
xchg
addr16
nop
dec
lods
jae
js
and
xchg
mov
or
test
aam
hlt
pop
int
pop
sub
sub
test
in
sub
or
in
push
loopne
mov
mov
inc
jle
fistpl
lret
mov
mov
push
cmpsb
dec
push
mov
jle
xor
or
add
movsb
lock
push
xchg
mov
test
stos
mov
pushf
ret
jmp
sbb
add
jb
xchg
push
jmp
sub
fsub
push
dec
adc
xchg
add
sarb
rcrl
push
jbe
cmc
cmpb
stc
mov
test
icebp
es
test
lods
repz
add
fwait
mov
fsubs
pop
leave
je
push
lods
cli
hlt
mov
addr16
xor
lods
imul
mov
jle
scas
or
push
call
js
and
stc
lods
pop
inc
mulb
jnp
incb
inc
std
popa
nop
lea
lret
xchg
adc
outsl
dec
xchg
jle
jmp
aaa
pop
fstl
push
addr16
imul
mov
rcll
cmp
adc
imul
mov
ljmp
in
cld
jbe
movsl
daa
repnz
or
adc
and
outsb
in
divl
in
ret
stc
das
pop
movsb
jns
int3
ret
or
insl
nop
aaa
xchg
inc
jo
lea
mov
inc
jg
mov
ja
movsb
adc
aas
jns
lahf
sbb
and
add
xlat
jge
sub
sarl
popl
mov
shl
stos
out
xor
call
push
scas
xchg
addr16
pushf
js
add
fsin
pop
call
xchg
jne
mov
xchg
nop
or
mov
xor
xchg
cmc
inc
and
jecxz
scas
dec
add
iret
lds
xchg
arpl
lret
icebp
cmpsl
cld
imul
cmp
in
imul
jle
xor
sbb
shrb
push
test
icebp
push
movsl
sbb
and
push
mov
pusha
push
stos
cmp
repnz
rcrl
dec
or
and
mov
aad
testl
push
pop
addr16
jae
icebp
mov
push
sbb
test
xorl
mov
fsubs
mov
shrb
cmp
jmp
push
cmpsb
mov
mov
adc
add
dec
fldenv
dec
cmp
jno
pusha
pop
xorb
fidivrs
jb
dec
in
dec
jbe
imul
imul
hlt
and
rorl
adc
or
mov
lahf
enter
mov
inc
or
fstpl
or
jecxz
xor
in
mov
sahf
frstor
xor
mov
pop
mov
jl
push
sti
fidivrs
mov
xchg
repz
sbb
lret
ljmp
lret
lret
or
sarl
arpl
repz
xor
xor
pop
adc
dec
enter
pop
pop
loopne
testl
pop
imul
sbb
dec
xor
push
and
repnz
add
jp
sbb
lcall
in
hlt
ss
cmp
inc
dec
cmp
mov
aaa
jmp
push
sub
xor
push
mov
mov
shlb
pop
test
dec
ljmp
inc
dec
int3
mov
fwait
sar
pop
ror
mov
and
cmp
pusha
xchg
jo
popa
cs
mov
loop
xorb
out
add
insl
adc
jae
fwait
outsb
loope
enter
mov
out
cwtl
aas
jae
mov
ljmp
xchg
xor
adc
push
xor
sbb
dec
movsl
fildll
xor
jl
inc
popa
addb
fwait
icebp
dec
pushf
and
or
in
lahf
jno
sbb
sti
sub
mov
xchg
js
cltd
adc
inc
adc
lock
inc
data16
rcll
sub
sub
call
mov
xor
sub
dec
inc
in
cmp
ffreep
pop
ljmp
es
xchg
das
hlt
mov
xlat
sbbb
cmp
xor
lahf
pop
adcl
sub
cmpsl
mov
dec
test
in
push
xchg
jne
dec
pop
sbb
sbb
fwait
clc
ds
push
push
rcr
ret
xchg
jns
lret
shl
cld
inc
add
insb
shlb
sbb
mov
loop
add
push
std
adc
inc
loop
adc
jns
andl
add
sub
fst
pop
jmp
pop
dec
xor
mov
out
mov
mov
lahf
and
add
or
imul
mov
scas
fwait
cwtl
inc
and
mov
xchg
data16
pop
gs
sub
dec
or
sub
and
iret
xor
or
dec
xlat
test
sbb
dec
fnstsw
js
and
jo
or
aam
js
outsb
push
sub
dec
scas
mov
and
fstp
adc
std
movsl
mov
ja
mov
and
cmp
ja
shr
ja
push
pop
or
inc
sub
cmp
mov
ror
out
jge
das
hlt
inc
cs
repz
lods
pusha
xor
ljmp
out
test
shlb
push
popa
or
aad
aas
popf
ja
lds
out
shll
mov
leave
sti
in
sub
xor
xchg
mov
push
das
cld
and
xor
nop
iret
push
es
sub
xchg
mov
xchg
sbb
lea
xchg
mov
test
outsb
mov
adc
popa
ret
xor
mov
xchg
sbb
push
orb
mov
jbe
dec
sub
mov
jg
mov
scas
dec
cs
xor
shl
lret
fistl
pop
push
and
push
pop
pop
push
jp
mov
lret
in
lods
mov
cwtl
sub
jle
xchg
fdivrs
loope
dec
jb
mov
jae
sbb
jg
movl
lock
xor
test
jle
cli
jg
enter
adc
xchg
adc
ret
roll
xor
jnp
incl
inc
das
ficomps
ffree
imul
into
into
pop
cwtl
fcmovne
js
fcmovb
add
lock
out
leave
cmp
adcl
mov
lock
jl
jecxz
sub
addr16
inc
shlb
loopne
and
push
mov
xor
and
rorl
in
pushf
out
mov
ret
inc
jo
xlat
rorb
popf
xchg
inc
or
out
mov
pusha
pop
sbb
jb
arpl
imul
inc
test
mov
or
sub
sub
jb
out
or
jmp
jg
inc
clc
aas
loope
cwtl
or
insl
push
loopne
cltd
mov
pop
sbbl
ret
mov
mov
stos
xorl
push
mov
mov
xchg
xor
addr16
jge
cwtl
int3
lods
and
sbb
jmp
mov
ljmp
lcall
lds
pop
pop
push
xchg
and
int3
inc
nop
xchg
or
rolb
into
jnp
cmp
add
pop
add
push
and
lret
dec
jo
es
popa
inc
pushf
popf
rolb
xor
negb
pop
xlat
sti
xchg
cmpsl
xchg
push
inc
dec
xor
xchg
leave
in
dec
inc
pop
mov
movsl
push
push
xchg
insb
bound
mov
xchg
jecxz
aad
mov
lds
push
inc
aam
mov
inc
push
icebp
dec
lock
loopne
popa
int
add
sbb
inc
sbb
negl
xor
lahf
mov
aam
inc
xor
pmaxsw
leave
dec
stos
cmp
cmpsl
add
inc
daa
and
xchg
rep
sbb
sub
sub
pop
ja
mov
iret
and
out
inc
push
icebp
mov
and
lahf
dec
test
imul
mov
stos
in
xchg
mov
add
mov
lea
fisubrl
xor
sbb
cmc
mov
sub
outsl
dec
movsb
xor
out
mov
sub
sbb
aam
shlb
add
pop
or
into
mov
jno
ret
aas
test
sbbb
lret
jle
mov
cmp
pop
into
jp
or
mov
mov
outsl
or
pop
dec
in
mov
push
mov
pop
xchg
call
popa
inc
cmp
in
cmp
pop
sub
and
push
mov
pop
test
cmpb
inc
stc
mov
lret
pop
and
mov
adc
pop
sbb
in
lock
ret
addr16
pop
and
cwtl
sti
mov
sbb
push
sub
push
mov
gs
adc
repz
sub
pop
dec
mov
mov
mov
xchg
shlb
xchg
mov
in
out
cmp
das
inc
push
out
repnz
add
jle
arpl
pop
cwtl
sbb
shrb
or
ja
andb
pop
mov
pushf
push
jbe
sub
xchg
mov
adc
cli
sbb
sbb
out
popa
aaa
into
adc
push
jno
gs
pop
mov
clc
inc
imul
or
divb
js
test
jb
nop
pushf
or
cmp
pop
shll
mov
stos
lods
dec
sbb
das
push
push
jl
add
outsl
mov
out
inc
mov
jns
hlt
jbe
jae
testl
xchg
roll
jle
mov
jp
gs
jns
mov
push
out
je
imul
mov
adc
les
lods
es
aam
xchg
std
pop
stc
pop
jg
adc
mov
or
in
popf
sbb
dec
in
jle
pop
sbb
jge
popf
test
das
cmp
cmpl
jae
mov
sti
loop
mov
xor
push
out
loop
ja
cli
sti
decl
cmpsl
mov
lods
push
sbb
jnp
pop
sbb
inc
sub
push
js
dec
and
mov
add
dec
out
adc
sub
repz
push
pslld
scas
ret
xor
adc
and
arpl
or
mov
daa
add
paddb
or
ss
arpl
push
dec
push
adc
repnz
cltd
imul
push
mov
inc
repnz
add
arpl
inc
adc
add
int3
mov
aaa
in
jne
mov
popf
xor
sbb
sti
inc
mov
lahf
cmp
cltd
xor
insb
negb
jnp
jae
cmpsl
inc
in
and
movsl
jg
ret
xlat
aaa
pushf
xor
push
rep
sarb
clc
xorl
mov
mov
outsb
push
adc
push
jg
jb
xchg
arpl
fists
in
and
add
imulb
jno
jp
mov
jle
aas
jle
and
sub
jb
mov
jae
loope
add
mov
mov
push
call
addl
mov
stos
repz
aam
add
xor
test
add
mov
inc
mov
inc
movsb
insl
mov
sub
adc
cmp
ret
sub
in
add
mov
ret
hlt
jle
add
cltd
sub
mov
mov
int3
call
or
in
and
ljmp
push
int3
enter
and
xchg
push
lret
or
cld
aam
punpcklbw
gs
insb
scas
mov
imul
push
push
movsl
dec
bound
pop
pop
rcrl
xchg
adc
jnp
inc
jge
mov
leave
paddw
inc
into
sbb
push
loop
mov
cmpsl
in
push
inc
andl
cld
popa
iret
mov
dec
jnp
fstpt
int
fmull
inc
mov
in
cmp
lea
push
cmpb
sub
das
fs
ror
xor
ja
test
std
cmpb
mov
pop
mov
rol
fsubr
jecxz
popa
out
imul
fmuls
shl
cmp
cmp
jno
jnp
outsb
inc
xchg
adc
mov
fstl
xor
sub
push
pop
jb
mov
push
sbb
cmp
push
decb
or
ficompl
cwtl
mov
push
inc
xchg
mov
fs
repz
sbb
mov
icebp
or
xor
jo
popa
jns
add
xchg
sbb
js
fcmovne
cmp
inc
nop
pop
mov
lcall
add
push
sub
ret
jg
xorb
jns
or
hlt
lock
aaa
dec
push
push
sbb
add
mov
xchg
inc
xlat
fldcw
std
sub
lods
jmp
dec
xlat
xor
es
aad
pop
xchg
in
stos
outsl
mov
shrl
xor
xchg
stos
add
fbstp
sbb
popf
divb
mov
out
lahf
jecxz
addr16
fdivl
popf
mov
lcall
pop
stos
lahf
push
push
sub
xor
xor
cwtl
outsb
pop
sbb
mov
mov
inc
mov
add
sbb
pusha
mov
pop
daa
xlat
rorl
cltd
jo
pop
mov
adc
ljmp
or
xor
xor
jmp
out
iret
movb
sbb
test
jle
lcall
test
jp
jecxz
aas
push
pop
jmp
stc
lds
jmp
mov
push
sti
cs
adc
int3
sahf
pop
pop
test
cmp
ret
rcrl
mov
mov
xchg
or
xchg
pop
sub
jmp
loop
xor
fwait
dec
mov
in
fisubl
cld
cmp
inc
xchg
mov
movsl
pop
sbb
iret
mov
cltd
cmp
jmp
mov
adc
dec
rol
mov
shlb
insb
mov
mov
push
pop
inc
cmp
jp
push
incl
int
cmp
sub
das
mov
xor
sbb
lahf
stos
mov
pop
loop
cmp
inc
sub
movl
xor
lods
or
dec
sbb
push
lret
subb
adc
in
cmp
mov
xchg
int
push
arpl
enter
sub
in
test
and
ljmp
mov
test
mov
test
push
jne
inc
mov
xor
mov
repnz
lret
ret
fwait
cld
sub
xorb
push
xchg
and
sub
jo
push
inc
jge
gs
fildl
cs
mov
jp
jg
inc
rclb
sarb
xor
fstl
mov
mov
int
hlt
imul
rcl
lods
jle
outsl
ret
ja
loopne
jp
cwtl
sahf
fbld
jns
jle
cld
or
cli
or
mov
and
xchg
push
mov
dec
test
sbb
js
fcompl
push
imul
insl
notb
and
pop
jne
pop
in
push
inc
cmpl
mov
push
pop
mov
jecxz
out
mov
fwait
sbb
sahf
cld
lock
idiv
cmp
xchg
jnp
mov
jmp
sahf
je
fimull
js
push
mov
mov
testl
add
xlat
adc
sub
popa
mov
push
gs
sbb
lahf
arpl
adc
fnstenv
jne
mov
loop
pop
fs
push
jecxz
jge
mov
ja
push
jbe
out
inc
lret
test
rcll
cwtl
into
sub
cmp
jg
dec
inc
pop
xchg
push
daa
fcoml
add
xor
mov
xchg
push
adc
in
dec
in
ret
push
xchg
inc
mov
repnz
mov
test
pop
mov
inc
outsb
rcll
cli
out
lock
in
subb
adc
inc
testl
cmp
shlb
cmp
and
test
mov
pop
pop
cmpsb
dec
out
into
mov
stos
fsubs
or
ret
xchg
addr16
xorl
xchg
leave
sbb
xor
aam
leave
xchg
fidivl
inc
add
or
mov
xchg
mov
xchg
push
sbb
push
jae
push
in
idiv
pop
xchg
test
test
adc
sbb
mov
add
xor
les
jno
or
inc
xchg
mov
fsubs
into
stos
sahf
mov
inc
push
ret
mov
and
stos
adc
jne
daa
pop
ljmp
call
jle
mov
roll
push
test
cmc
cld
out
push
ljmp
fsts
sub
rclb
mov
rorb
mov
xchg
lcall
or
pop
mov
or
mov
pop
pusha
add
fstps
and
outsb
jns
notl
xorl
fiadds
bnd
fwait
lahf
add
inc
cltd
jb
out
scas
and
fs
leave
mov
or
out
mov
push
cwtl
lea
xor
xchg
repnz
jp
sahf
mov
cmp
nop
fwait
xchg
popa
push
inc
imul
jo
sbb
arpl
sub
stc
mov
out
fadds
and
repz
scas
int
mull
nop
clc
inc
add
out
scas
inc
mov
cld
add
add
mov
int3
jmp
fsubrp
insl
addb
jnp
loopne
push
push
or
aam
xchg
stos
jnp
inc
cmp
push
outsb
lock
adc
in
inc
dec
pop
es
mov
sti
mov
stos
jne
lds
push
jne
mov
iret
imulb
call
mov
mov
es
cmp
movsl
jae
mov
and
cmc
in
repz
hlt
out
daa
mov
sub
adc
mov
sbb
jns
sub
dec
jne
jmp
lea
ljmp
pop
mov
push
sti
pop
xor
jb
icebp
fwait
xchg
repnz
and
fmuls
mov
xor
fsubrl
ja
imul
jae
loop
loopne
aam
pop
jnp
pop
fisttps
push
mov
sub
enter
rcl
or
inc
loope
mov
add
movsl
aaa
push
push
mov
js
mov
shlb
js
push
xchg
jg
inc
add
dec
cli
xchg
inc
in
mov
push
adc
test
dec
add
jle
mov
dec
mov
or
xchg
add
and
or
and
inc
or
and
mov
xchg
repnz
js
lods
out
repz
push
jmp
push
clc
sbb
pusha
push
pop
xorb
stos
push
int
lds
les
sub
ja
adc
lods
and
sbb
mov
shl
xchg
pop
decb
mov
xchg
dec
and
dec
and
sub
lcall
push
scas
cmpsl
stc
movsl
in
cmp
loope
xor
lahf
je
frstor
jae,pt
dec
call
xlat
mov
fsts
push
ss
add
enter
testl
ljmp
cltd
jb
dec
push
adc
dec
xchg
lret
push
jo
sbb
push
xchg
test
xlat
imul
add
inc
test
mov
enter
xor
sbb
lahf
cmpsb
mov
cmp
mov
xor
cwtl
mov
mov
cs
or
cmpsb
dec
jmp
fstl
in
jge
sub
lcallw
sarl
inc
mov
int3
inc
fidivrs
jnp
xor
loop
add
fmull
insb
and
in
push
je
adc
lahf
pop
in
clc
mov
es
fildl
pop
xor
mov
cmp
sub
mov
cmp
rorl
and
lret
xchg
faddl
loope
shll
stos
dec
cltd
cmpsb
inc
pop
pushf
pushf
mov
lret
jbe
fmull
pop
xchg
pushaw
shll
int3
pusha
inc
jno
xchg
sbb
mov
inc
fldt
or
pop
pop
fnstcw
mov
outsl
addr16
sub
fcmovbe
pushf
cmpsb
xor
and
aaa
jmp
mov
push
pusha
sub
gs
arpl
jo
add
js
xor
mov
mov
xchg
pop
lahf
fcmovnu
sbb
mov
cli
in
fucomi
test
and
mov
mov
adc
sbb
pop
fsubrl
or
imulb
int
aas
aad
sti
push
sbb
lea
test
xor
cmpsl
and
add
or
mov
fmuls
mov
movsl
add
pop
fimull
loope
add
mov
jb
or
mov
stc
inc
and
andl
lock
inc
out
xchg
mov
movsb
scas
and
je
lcall
jge
mov
inc
mov
in
pop
and
sbbb
lahf
aaa
mov
js
push
data16
out
cwtl
sbb
sti
cmp
cmp
xor
dec
test
inc
add
and
mov
mov
adc
std
dec
add
adcl
imul
lock
aam
stos
mov
loopne
leave
cmp
arpl
push
adc
cmp
rol
xor
and
mov
mov
ficoml
or
cmc
mov
andl
cltd
jae
or
sbb
add
outsb
and
ret
sub
dec
aaa
jae
les
lret
shrb
and
push
push
xlat
out
sub
stc
pushf
data16
mov
lds
and
ljmp
cmc
in
loop
pop
data16
cmpsb
mov
stc
lods
inc
nop
notl
aam
adc
sub
mov
push
clc
jnp
out
sub
repz
mov
fildl
jle
mov
stos
pop
xchg
add
add
mov
dec
scas
adc
inc
repz
push
cmpsl
inc
movsb
add
lret
arpl
rclb
mov
pop
outsb
sti
movsl
out
mov
pop
push
mov
adc
aam
cmp
mov
loopne
mov
adc
ds
xor
push
pop
daa
in
test
aad
mov
dec
sbb
mov
xor
sub
rcr
jge
ds
lret
jmp
xor
push
andl
cmp
sbb
inc
mov
dec
sub
inc
sub
shrl
scas
dec
mov
callw
test
loopne
aaa
cmp
pop
sbb
out
inc
push
test
push
cmovb
inc
popa
lret
mov
hlt
adc
and
pop
jmp
lret
out
ret
jmp
push
mov
mov
les
mov
mov
and
cmpsl
sub
daa
jge
stos
mov
push
in
push
xor
mov
dec
push
arpl
dec
inc
and
sahf
fs
dec
flds
ret
fidivl
mov
daa
test
xchg
stos
sti
cmp
cmpsb
imul
inc
jnp
or
jl
xchg
test
mov
fildll
movl
fstps
in
ljmp
dec
imul
push
daa
xlat
sbb
mov
cltd
jnp
dec
dec
xor
mov
mov
pop
sub
cmovbe
mov
pop
inc
lahf
push
leave
jle
jno
push
jecxz
out
jle,pt
add
xchg
pop
ror
psubusw
inc
pop
hlt
push
data16
push
lcall
divb
jb
into
mov
fildll
add
outsb
mov
loop
mov
cmp
xorl
jp
jno
mov
lret
cmp
xchg
inc
ret
pushf
jg
lock
ds
shr
and
pop
movsb
mov
fadds
jo
cld
mov
bound
in
jge
xchg
sbb
inc
icebp
pop
adc
cmp
jecxz
outsb
dec
insl
xor
lcall
in
push
cmpsl
movsb
push
test
sub
das
dec
fbstp
lret
add
hlt
ss
or
xor
cmc
aam
int3
mov
ss
xor
test
sub
in
rcrl
fcmove
dec
jbe
cmc
dec
cmc
jg
in
popf
push
clc
jle
addr16
or
add
or
test
xchg
int3
popa
lea
push
popf
sahf
sub
in
loopne
jge
pushf
add
insb
enter
imul
mov
dec
loope
sub
pop
lock
xor
pushf
mov
mov
lret
out
sbb
sahf
cmpsl
cmp
into
jmp
mov
push
or
pop
mov
xchg
mov
imul
insl
sbb
mov
xchg
mov
push
jg
shlb
sbb
movq
mov
test
aas
jno
out
test
rcrb
stos
pop
out
dec
mov
sbb
pop
pcmpeqd
mov
and
movsb
sub
push
mov
call
rcrb
dec
lahf
ds
sbb
lea
sbb
pop
in
inc
ficomps
test
dec
pop
cmp
dec
int
sub
mov
inc
inc
lods
jmp
daa
lds
js
cmp
addr16
orb
cmp
fwait
mov
cltd
insb
and
jbe
aaa
adc
mov
into
stc
push
adc
stos
xchg
shlb
and
cs
inc
cld
mov
add
cwtl
call
inc
cwtl
adc
cmp
jne
rep
mov
inc
mov
call
loopne
xlat
aas
mov
lret
push
mov
cmp
cltd
clc
rcrb
push
fcmovb
outsl
icebp
mov
adc
mov
or
and
pop
pop
jb
add
push
and
push
push
rcl
mov
movsl
rol
inc
dec
or
loop
dec
mov
inc
xor
mov
daa
and
cmpsl
mov
outsb
mov
roll
xchg
push
mov
dec
lret
arpl
mov
jne
add
sbb
fisubrl
iret
mov
data16
xor
dec
ss
addb
repz
mov
ljmp
cmp
or
mov
sbb
sahf
mov
mov
jg
mov
sbb
repnz
loopne
fwait
pushf
in
lods
dec
in
dec
jbe
push
xchg
add
int3
mov
add
mov
push
mov
lods
cmp
rorb
scas
pusha
dec
jg
dec
aad
call
sub
xchg
das
xor
sti
cld
pop
repz
or
cwtl
pop
data16
jle
sub
gs
push
dec
call
jecxz
sbb
jmp
sti
mov
inc
shr
daa
mov
xchg
jne
sbb
std
adc
mov
add
bnd
inc
xor
xchg
xor
jno
shrb
ljmp
cld
xchg
insl
addr16
cltd
loope
inc
jns
sub
aad
add
xchg
arpl
xor
mov
insl
jmp
pop
inc
leave
xchg
mov
lock
push
cmpsb
enter
repnz
scas
ret
mov
aas
mov
in
rclb
xchg
pinsrw
push
outsl
mov
int
push
lcall
insl
pmuludq
movsl
in
mov
mov
pop
push
mov
push
adc
or
out
addr16
sti
inc
jmp
and
clc
cltd
fs
mov
aad
inc
ljmp
gs
xor
pop
ret
dec
incb
pop
push
in
and
inc
pop
lahf
arpl
insl
mov
rorb
cltd
movsb
mov
insl
mov
js
xchg
or
xchg
mov
inc
stos
or
mov
lods
fldt
sbb
push
iret
or
out
insl
jbe
push
rorb
xchg
mov
leave
sbb
into
xlat
inc
int3
es
pop
mov
push
add
int3
lods
test
mov
jle
lods
cmp
add
sahf
es
mov
pop
in
push
outsb
icebp
adc
jp
loope
mov
mov
xor
pop
out
test
test
iret
daa
test
cmp
mov
pop
or
jne
pop
cmp
lea
out
or
ret
into
cmp
adc
mov
or
pop
negb
mul
je
int3
pop
add
pop
add
inc
mov
fdivs
mov
inc
xor
insb
push
xchg
outsb
mov
sbb
dec
adc
adc
pushf
mov
mov
mov
and
sbb
jnp
xchg
sbb
or
jnp
out
mov
jb
mov
jecxz
js
inc
test
stc
gs
outsl
es
add
xchg
in
cmp
sbb
testb
mov
repnz
rorb
push
sub
mov
mov
ret
idivl
push
or
push
ret
mov
lds
lret
les
mov
out
push
xor
shlb
xchg
daa
mov
pop
cmp
enter
pop
and
mov
xor
add
fwait
mov
aaa
fprem
sbb
mov
aad
jmp
jnp
sbb
insl
pushw
sahf
push
xor
push
test
push
es
push
pop
cmp
and
jp
add
out
sub
popa
jle
and
sti
xor
xchg
cld
add
inc
push
and
cmp
dec
imul
xor
xchg
popf
notb
test
add
jl
push
sub
and
aas
fldenv
xchg
ljmp
or
into
mov
stc
and
clc
pop
lret
push
fstpt
sub
push
inc
in
lds
js
cmpsb
das
push
mov
push
out
mov
xchg
inc
ror
mov
repnz
outsb
pop
ljmp
dec
inc
xchg
inc
test
cmpsl
jo
rolb
gs
push
test
jo
sbb
in
aaa
test
xchg
in
cwtl
aas
lock
jns
push
std
out
shll
mov
mov
jg
xchg
pop
mov
mov
ret
cmp
iret
cld
xchg
fcoms
daa
and
fidivrl
jbe
pop
jl
inc
lock
stc
aaa
push
jnp
int3
and
in
enter
adc
ljmp
cmpsl
or
repnz
dec
cmc
cmc
int
lock
add
daa
fcoml
aaa
sub
inc
inc
mov
mov
adc
scas
mov
jns
out
dec
push
jl
and
rol
or
xchg
decl
into
js
fs
pop
push
lds
mov
adc
mov
add
and
lods
or
ja
out
sbb
lock
shl
sub
dec
mov
or
lret
or
mov
aaa
jb,pn
aam
movsb
in
daa
pop
das
fwait
ret
in
inc
sbb
rcll
add
fisubrl
enter
pop
dec
mov
jae
shr
jl
movsb
cmc
imul
js
mov
inc
xchg
mov
xor
xor
das
jl
cmpsl
stc
push
dec
popf
pushl
mov
jg
idiv
test
add
mov
std
in
jno
lock
push
mov
sub
or
repz
ss
lea
xchg
jecxz
and
sub
clc
xchg
cmp
dec
xchg
fs
int3
fdiv
push
outsl
xchg
push
iret
inc
adc
dec
test
cs
sub
or
lock
mov
mov
inc
push
or
ljmp
arpl
sbb
dec
cmc
xchg
cmc
into
rcr
or
jb
pop
xchg
std
jg
mov
cmp
mov
outsl
mov
divb
xchg
cld
sub
pop
mov
or
out
inc
neg
jbe
rcrb
and
dec
fsubr
icebp
mov
aam
shll
xchg
xlat
lret
jae
hlt
lock
imul
sahf
mov
xchg
mov
enter
jnp
fnstsw
divb
cmpsl
jp
mov
jns
inc
cld
sub
xor
mov
imul
dec
sbb
cmp
stc
or
outsb
gs
inc
push
test
jae
inc
imul
pop
shrb
fs
lret
std
cmp
stc
mov
test
xchg
add
dec
cmp
in
imul
int
push
push
aaa
test
push
add
jne
orb
add
out
inc
outsb
cmp
mov
fsubrs
add
xor
lret
mov
inc
data16
mov
in
or
xchg
imul
inc
push
mov
jp
sub
popa
mov
sbb
or
add
push
add
fisubrs
pop
dec
mov
dec
stos
dec
cmc
adcb
lods
add
mov
mov
mov
cmp
mov
cmp
or
popf
aaa
dec
xchg
mov
nop
in
fsubs
daa
or
inc
insl
mov
jp
arpl
sub
idivb
xchg
cli
flds
pop
ss
jl
cmp
aas
bound
scas
imul
mov
enter
jnp
lds
jns
rcr
push
pop
cli
stos
icebp
pushf
loop
les
outsl
or
jnp
shll
pop
mov
lret
cltd
repz
shrb
inc
movsb
sbb
test
clc
adc
cmpsl
mov
xchg
lock
repz
sbb
movsl
xchg
aam
jb
jecxz
pop
jae
jo
je
add
mov
cmp
out
in
xchg
pop
mov
dec
rolb
sub
add
cmp
repz
in
dec
sahf
xor
imul
xchg
xchg
cs
fdivrp
outsl
lods
cli
and
lods
loope
andb
cs
push
adc
test
pop
enter
push
scas
test
sub
dec
dec
ja
aad
mov
mov
inc
push
jmp
fcoms
mov
test
sub
into
daa
or
rorl
inc
adc
mov
outsb
mov
shlb
out
mov
push
inc
mov
sbb
and
pop
push
jge
jno
and
imul
cmp
push
call
daa
jbe
stc
inc
or
fbld
mov
sbb
pop
popl
arpl
xor
adc
stc
pop
dec
inc
daa
je
inc
inc
jno
aaa
shlb
movsl
sbb
xchg
jb
push
mov
mov
rcll
push
cmp
cmp
testl
cs
out
pop
jb
jp
jp
adc
fimull
mov
in
test
inc
ficomps
jp
in
fsubrs
jl
sbb
mov
aad
inc
cmp
xchg
lods
mov
mov
jl
push
mov
sbb
out
hlt
cmpsb
test
sbb
test
filds
outsb
loop
sub
mov
sti
jmp
popf
push
test
lock
subb
mov
and
popf
lock
pop
or
ljmp
xor
push
lret
inc
aaa
or
pushf
in
in
sbb
jo
mov
loop
popa
mov
push
mov
popf
adc
dec
push
cmp
std
rolb
pop
mulb
and
add
in
shr
or
add
icebp
dec
fsub
roll
loope
rclb
std
add
subl
je
aad
push
lret
or
dec
sub
push
icebp
pop
push
or
lock
mov
cmpsl
mov
sub
sbb
pushf
dec
or
xor
sub
jp
mov
test
jns
push
ds
cmp
and
mov
lret
leave
pop
rep
jno
call
loopne
sbb
jo
fimuls
stos
fs
jnp
out
leave
sbb
mov
enter
cmp
mov
or
push
mov
and
sub
fisttps
in
inc
mov
adc
stos
adc
push
mov
xorb
fsub
push
mov
fyl2x
jl
sub
bound
nop
inc
int3
or
mov
in
outsl
add
and
insb
mov
sub
icebp
xchg
stos
hlt
inc
jb
sub
pop
cmc
out
sti
adc
addr16
dec
xorb
adc
fsts
mulb
movsl
pop
dec
mov
push
in
pop
jne
sti
mov
sahf
fs
movsl
push
rorb
add
xchg
dec
lods
pop
jle
jns
or
lds
and
mov
cltd
cltd
bound
stos
and
push
dec
dec
xchg
sbb
stos
in
repnz
int
enter
js
mov
sub
dec
fs
in
fdivrl
jmp
fisttps
scas
dec
push
mov
das
lret
and
lret
jecxz
push
loopne
out
mov
dec
xchg
xor
insl
repnz
ficoms
xor
out
mov
repnz
xchg
les
ret
xchg
jge
sub
xor
jg
xchg
aaa
arpl
sti
mov
testl
aaa
aad
pop
xchg
pop
scas
lcall
and
cmpsb
dec
daa
or
or
mov
repz
mov
mov
jle
jbe
movsb
push
push
arpl
inc
xlat
in
push
lahf
mov
cli
inc
sbb
mov
lsl
push
ds
jl
push
nop
adcb
test
add
adc
mov
jnp
push
jg
scas
push
jno
adc
mov
int
lea
push
popf
insl
aas
dec
and
inc
mov
jno
filds
jbe
sbb
mov
xchg
xor
mov
outsb
lods
jge
lret
sub
pop
inc
push
sbb
sbb
out
cwtl
data16
pop
shrl
and
repnz
push
in
cmp
int3
jne
rolb
dec
dec
test
or
add
jb
dec
fldt
sub
dec
rorl
andb
mov
push
cmp
push
je
inc
arpl
adc
cmp
loopne
sahf
mov
mov
aaa
mulb
pop
gs
sbb
jbe
and
cmp
jg
xchg
jno
mull
inc
push
addr16
dec
sub
jb
es
lcall
in
add
xchg
adc
sti
roll
pop
sub
arpl
clc
data16
push
aaa
mov
sub
mov
mov
gs
enter
cmc
cli
sub
data16
push
les
stc
int3
push
mov
in
sub
or
dec
addb
test
adc
in
mov
sbb
dec
stos
jmp
xchg
lods
sub
jno
or
add
sahf
mov
cmp
add
es
pop
xlat
inc
lret
dec
ret
out
test
cmp
mov
stos
lahf
out
icebp
push
loope
mov
sti
scas
stos
mov
aas
aad
movsl
mov
dec
in
pop
call
dec
mov
aad
imul
ficompl
scas
fdivr
loop
push
scas
mov
lock
xchg
xor
call
jl
fisubl
out
rol
inc
and
push
icebp
lcall
fwait
in
leave
xchg
in
cmp
push
insl
popa
or
wrmsr
dec
ljmp
push
fstpl
pop
fists
adc
xor
gs
je
movsl
leave
mov
add
adc
cmp
ja
or
insb
mov
gs
lock
add
jmp
mov
push
inc
aad
ja
cmp
cs
dec
sbb
sbb
cli
xchg
je
out
inc
mov
lods
pop
mov
sahf
push
adc
jb
popa
cmp
mov
sbb
and
in
imul
sbb
sahf
arpl
cli
xlat
cmpsl
daa
lcall
outsb
andps
push
sahf
jmp
xor
cmpsl
sbb
in
jg
imul
mov
andb
push
mov
lret
and
xchg
popa
sbb
popf
insl
xchg
addb
mov
mov
aad
sub
jg
mov
cmp
mov
lods
push
mov
sbb
fwait
movups
jp
jns
jb
jbe
jmp
call
sub
dec
push
sub
fcomps
popf
fdivrs
call
sahf
push
flds
mull
mov
mov
push
xchg
sub
iret
sub
mov
pop
in
mov
nop
lcall
mov
fs
fistpll
adc
jp
cmp
stos
pushf
xchg
cwtl
mov
adc
jl
jns
cmp
test
rcl
cmpsl
aaa
lock
pop
and
cmp
sub
and
xchg
sti
dec
pop
push
lods
push
mov
aas
jno
jg
lods
in
daa
rcll
icebp
add
and
xchg
adc
cmpsl
scas
jb
arpl
in
fwait
cli
ja
mov
jle
xchg
and
fwait
sbb
sub
in
mov
mov
add
push
call
mov
xor
daa
xchg
add
andw
xlat
aaa
sti
pop
faddp
outsb
sub
stos
lret
sub
pop
and
out
mov
fdiv
rolb
sub
decl
loopne
mov
repz
or
mov
sahf
shlb
shl
dec
int3
js
cli
adc
mov
iret
test
push
in
shrb
ljmp
cs
cltd
xchg
cmc
mov
mov
or
stc
int
imul
lret
push
pop
mov
fistl
adc
mov
mov
mov
inc
mov
add
cmpsb
mov
fstpt
cmp
sbb
adcl
popf
arpl
jno
insb
mov
pop
push
fldenv
mov
std
gs
lock
add
pusha
leave
dec
mov
sarb
insb
loop
pop
or
push
and
je
js
test
test
dec
mov
mov
push
cmp
jne
clc
cmp
xor
jmp
sub
cmpsb
add
movsl
mov
xor
or
push
daa
sub
jb
cli
in
fcmovbe
pop
pusha
jp
xchg
rclb
std
add
in
movl
gs
lods
inc
aaa
pop
imul
jge
mov
gs
push
iret
sahf
xchg
outsb
xor
dec
cmp
jge
loop
mov
mov
mov
adc
stos
stc
push
cmp
cmp
and
xchg
jg
add
adc
push
adc
sub
ljmp
out
sar
scas
pop
xchg
push
stos
xchg
fcmovnu
cmpsb
push
aam
addl
cmp
sub
sub
inc
mov
mov
fwait
mov
or
pop
fadd
mov
lods
xor
test
cmp
or
pop
pop
adc
add
mov
mov
pop
pop
jg
ficoml
ljmp
jnp
gs
cmp
jbe
pop
inc
sbb
sub
mov
lds
je
lods
repz
cmpsl
out
xor
loope
xor
jge
pusha
insb
loopne
in
andb
cmp
mov
dec
mov
dec
fists
push
insb
arpl
pop
mov
mov
mov
es
call
mov
imul
in
mov
add
pop
je
int
or
or
jbe
lret
and
push
lods
outsl
daa
popf
push
pusha
inc
lds
jne
int
inc
xor
dec
fldt
cmp
inc
fldl
sbb
or
fiadds
je
mov
cmc
mov
pop
popf
pop
dec
or
aaa
sbb
cmp
stos
popf
testl
push
mov
dec
pop
pop
in
add
sbb
insw
fdiv
loop
dec
inc
repnz
shlb
xor
xchg
adc
jnp
adc
cmp
mov
jb
jle
shl
pushf
mov
movb
mov
add
jg
inc
test
and
ljmp
sub
xlat
aas
repnz
jb
loop
mov
in
inc
jbe
or
or
in
xchg
inc
sbb
aas
cmc
lods
jnp
or
jl
aam
lods
pop
popa
out
push
cmp
loope
xchg
sbb
jo
aam
mov
dec
nop
inc
push
adc
into
inc
icebp
das
stc
inc
mov
cmc
mov
nop
aam
push
xchg
jmp
ds
xchg
aas
dec
and
jae
dec
addr16
jp
jno
dec
mov
fucomp
dec
and
adc
sbb
lea
mov
cwtl
into
vpmaddwd
int3
xor
js
push
and
dec
imul
pop
add
stc
aas
test
outsl
fstpl
push
or
cmp
cltd
je
mov
cs
imul
movsb
sub
jbe
mov
movsl
xchg
repnz
cmp
add
mov
lret
dec
lret
es
cmp
push
movsb
sbb
pop
fxtract
mov
fcoms
sbb
pop
fstpt
out
mov
inc
iret
rcrl
push
mov
fwait
daa
dec
cmpsl
pop
dec
mov
popf
gs
cltd
popa
xchg
sbb
mov
mov
cltd
movsl
dec
jno
jg
xchg
push
dec
pop
adc
jecxz
cmpsl
das
jle
out
in
push
lret
inc
cmp
ss
mov
pushf
out
and
xlat
stos
mov
add
xchg
test
xchg
lea
inc
std
add
mov
ja
repnz
push
dec
aas
and
jecxz
ret
addl
xor
sti
out
adcl
jne
pop
negl
pop
sbb
leave
fmuls
mov
add
mov
jg
cld
jle
loopne
ret
jns
dec
jbe
sarl
fisubrs
and
pop
popf
shlb
xchg
add
flds
sub
push
xchg
pop
test
jmp
or
add
lahf
dec
jno
iret
mov
loopne
popf
mov
std
lods
cmp
pop
mov
push
xor
xor
aad
inc
mov
sbb
imul
and
dec
lock
cld
sbb
fstpt
inc
aad
insb
stc
mov
mov
adc
or
out
fcomps
arpl
sbb
inc
sahf
int
rcrb
jecxz
jmp
subb
out
fidivrs
pop
ret
fcoms
shll
jl
and
mov
inc
and
dec
mov
addr16
mov
mov
mov
cmp
inc
test
lds
pop
enter
sub
fdivrs
ds
dec
in
mov
pop
lahf
jno
cli
xor
out
leave
mov
cmp
test
lahf
cwtl
fistps
mov
ret
push
lret
mov
fdivrl
jge
jmp
adc
jae
mov
popa
xor
push
mov
fiadds
cmc
and
mov
add
stc
addr16
aaa
inc
sub
shll
imul
mov
push
or
xor
lods
ljmp
sti
add
loopne
sbb
xchg
rcl
push
repnz
pop
jbe
cmpsb
and
lock
fdivl
push
lahf
mov
push
push
mov
mov
adc
repnz
das
xor
cmpsl
out
movsb
test
in
sbb
cmp
jbe
mov
loope
fisttpll
outsb
inc
cltd
rorl
jge
orl
jl
rcr
mov
mov
mov
mov
lea
enter
ret
repz
bound
nop
movsl
and
mov
into
mov
xor
cli
cmc
sbb
pop
push
mov
sub
add
jb
dec
inc
fdivr
in
xor
or
ds
and
or
jno
pop
stc
push
pop
mov
inc
lods
adc
enter
sbb
add
int
or
ja
pop
jle
insl
cmp
movsl
cld
cmp
in
inc
sahf
es
fsubr
add
std
shl
xchg
jle
mov
xor
jge
dec
push
xor
jle
outsb
insb
cmp
loop
lods
bound
ljmp
xlat
stc
mov
mov
cmp
ljmp
cli
jb
mov
es
das
mov
push
sbb
in
pop
test
mov
mov
sbb
mov
pushf
mov
jge
or
repz
cltd
pop
ss
jle
imull
call
aas
repnz
or
pop
add
and
cmp
out
push
mov
rcrb
dec
pop
inc
pusha
push
push
cltd
cs
lods
sbb
into
fldt
stc
je
movsl
push
adc
sub
and
xor
dec
and
dec
inc
ljmp
mov
cltd
xchg
pop
adc
mov
mov
mov
loopne
add
mov
push
imul
pop
push
sbb
popa
insl
movsl
adc
dec
dec
in
pop
dec
insl
push
daa
sarl
shll
enter
dec
stos
dec
mov
and
das
rcl
hlt
cmp
adc
or
xor
sub
mov
movsb
pop
jmp
jae
sub
insl
push
mov
and
scas
lret
xor
push
pop
cwtl
filds
mov
xlat
push
scas
test
scas
call
rorb
xchg
inc
push
fs
adc
mov
and
andb
das
ret
adc
inc
mov
and
add
js
inc
test
icebp
adc
push
push
popf
mov
push
testb
aam
popa
loop
xchg
xor
test
fimull
stos
inc
leave
jo
es
popf
and
xchg
shl
pop
loop
lcall
mov
decl
sub
enter
int3
insb
and
loopne
dec
push
xchg
out
notl
pop
mov
sbb
in
mov
enter
inc
rcrl
inc
mov
pop
scas
or
movsl
rcll
vprotb
ljmp
aam
std
fsts
push
pop
adc
and
mov
mov
in
sbb
int
mov
dec
pop
inc
or
aad
mov
dec
pop
xchg
je
xor
mov
xchg
insb
sub
xor
call
jp
cltd
xchg
mov
int
subl
mov
in
xchg
and
je
dec
push
mov
dec
cld
dec
jae
push
cmp
es
adc
sub
cltd
rcr
fnstsw
hlt
sub
incb
sbb
ret
in
mov
jle
inc
sbbb
pop
sbb
or
aad
shlb
mov
sub
cs
movsb
movsb
pusha
add
out
in
dec
into
rcrl
inc
lea
dec
pop
sbb
and
inc
add
dec
xchg
rolb
and
out
movsl
das
testl
cmp
dec
mov
ret
jmp
and
jae
push
jg
repnz
jecxz
das
push
std
sub
lock
xchg
jge
dec
sub
push
adc
je
push
cmc
ja
lret
sbbl
push
pop
adc
cmp
add
inc
sbb
jbe
push
xchg
push
call
adc
into
mov
mov
pusha
sbb
shll
pop
fwait
mov
fbstp
ja
or
or
jge
xor
jge
leave
popf
and
push
add
fstpt
pop
mov
pop
fistpll
push
inc
or
shrl
push
insl
ja
cld
daa
pop
dec
mov
rcll
out
add
shrb
sub
xor
ss
neg
dec
xchg
loopne
sub
fistpl
mov
xchg
or
inc
cltd
dec
mov
insb
mov
inc
dec
cmp
push
mov
add
fwait
es
imul
inc
lock
cltd
outsb
mov
sbb
outsl
pop
adc
dec
adc
mov
lea
mov
pop
sbb
lret
insb
in
inc
insb
mov
xchg
push
cmp
cmp
jge
aad
cmpsl
js
push
mov
pusha
lds
mov
cmp
sti
pusha
cld
mov
add
bound
roll
adc
cmp
push
lahf
in
push
or
mov
adcb
pop
pushf
add
mov
mov
push
and
mov
je
lea
xchg
dec
rclb
jmp
ss
push
or
dec
mov
das
or
mov
imul
in
cli
adc
insb
push
mov
lret
out
bound
lcall
mov
xchg
sub
mov
pop
or
jmp
xor
mov
adc
push
jno
pop
stos
jl
je
xchg
jl
cmc
imulb
jle
adc
adc
inc
sub
jae
lret
outsl
gs
xor
jmp
in
cwtl
cmpb
adc
mov
and
faddl
push
cmpsb
jne
sbb
loopne
sub
fstps
in
inc
insl
cmp
xorb
enter
add
jbe,pn
sbb
std
insl
les
jae
add
sub
adc
and
hlt
cmpsl
daa
adc
push
daa
fbld
nop
les
push
jbe
sbb
mov
mov
ja
jnp
inc
xor
sub
add
sbb
fsubs
imul
and
shll
add
push
cld
movsb
cmc
popf
push
or
and
lds
push
fstl
repnz
ss
add
fucomip
mov
push
stos
pop
in
icebp
ja
nop
inc
ret
in
std
sub
lock
ffreep
jp
ja
daa
fwait
add
ss
lea
fsts
add
mov
and
stos
sub
mov
mov
ja
sub
jge
hlt
mov
cmc
sbb
repnz
mov
mov
mov
push
jecxz
rcl
mov
cli
xchg
and
movsb
add
in
shrb
push
inc
mov
xor
fisubrs
into
out
xor
xor
cmp
test
push
pop
int
negl
ret
je
cld
dec
lahf
dec
aad
popf
push
add
mov
clc
push
dec
mov
lret
mov
mov
in
bndstx
scas
in
fistpll
repz
dec
lea
test
das
daa
xchg
xchg
call
in
adcb
jg
mov
int
sbb
outsb
lret
jne
mov
out
fcoml
sbb
cmp
pop
aad
jp
or
xchg
xchg
or
mov
xchg
push
jno
out
xchg
icebp
fisttpl
daa
hlt
in
hlt
mov
dec
sub
add
push
or
lea
in
mov
xchg
imul
mov
push
lea
out
sub
imul
loopne
gs
lock
cmp
or
or
jmp
movsl
into
mov
shrl
cwtl
jl
or
mov
icebp
xor
inc
push
aad
fs
push
out
mov
call
xchg
xchg
jg
decl
pop
rol
mov
lahf
mov
pop
mov
dec
out
fadds
cmp
cmp
and
inc
enter
sbb
adc
iret
aad
dec
jle
cltd
insl
das
and
lods
pop
or
push
test
pop
ja
ja
and
sbb
loop
pop
imul
icebp
movsb
cmp
adcl
das
cmpsl
jb
shl
push
mov
stos
xchg
adc
imul
insb
seta
push
adc
inc
std
cmp
dec
jmp
and
out
lcall
das
fwait
sti
xor
hlt
sub
cmpsb
pop
leave
pop
dec
ret
mov
push
or
test
push
jge
mov
outsl
mov
lods
cmpsl
mov
push
lds
xor
fcmovb
and
fs
mov
repnz
stos
adc
fcmovnu
int3
addr16
pop
and
push
xchg
push
int3
aaa
and
add
shlb
xchg
mov
pop
out
jbe
cmp
stos
inc
shlb
rcrl
xor
mov
test
lock
call
inc
add
xchg
ficompl
and
and
mov
dec
fistps
xor
iret
pop
movsl
xchg
daa
dec
orb
lods
add
fildl
pop
mov
ret
push
inc
in
shll
mov
xor
inc
add
addb
cmp
and
sbb
fisubrl
jns
btc
test
lret
rorb
outsb
call
mov
mov
and
jle
cld
cmp
mov
sbb
fs
int3
push
mov
jbe
push
and
pop
mov
clc
add
dec
movsl
dec
push
cmpsb
xlat
imul
fistpll
lret
ret
iret
push
and
inc
test
sbb
pop
cmc
ljmp
es
jmp
out
jg
pusha
test
and
mov
into
or
aas
xchg
xor
xor
mov
das
popf
push
imul
or
cltd
push
jl
mov
int
jle
lret
stos
add
jl
nop
jl
rorl
imul
int3
add
in
jns
jl
dec
add
negb
adc
xor
or
lret
test
dec
leave
jno
xlat
mov
inc
js
mov
jge
out
out
cmp
rcrl
ret
or
loope
xor
inc
push
adc
xor
pop
xchg
mov
stos
jl
pop
jns
mov
icebp
or
and
inc
test
lahf
sbb
pushw
push
pop
repz
inc
rcr
mov
ljmp
leave
add
lods
dec
dec
movsl
xor
sbb
jbe
push
push
out
push
mov
fistl
pop
in
aaa
cmp
xlat
int
pop
cmc
add
or
xlat
mov
xor
and
add
jno
adc
icebp
dec
cmpsl
or
xor
out
sub
in
mov
test
add
clc
mov
xchg
pop
mov
mov
sbb
xor
fwait
add
das
je
sbb
jne
sbb
stc
pop
dec
pop
js
push
sbb
fnstenv
jecxz,pn
jb
pop
cmpsl
mov
les
js
int
inc
or
ljmp
jge
pop
mov
xor
ret
ljmp
rclb
sub
fists
sbb
mov
std
jae
sub
in
fwait
in
mov
and
arpl
mov
rolb
lock
fisubs
mov
jbe
jne
lds
xor
pusha
mov
aas
xchg
dec
imul
fsubl
push
fistpll
pop
cmp
jo
cmp
adc
push
test
fimuls
rorb
mov
inc
imul
ret
xchg
xchg
imul
push
data16
inc
lds
xor
int
enter
add
sub
out
push
daa
aaa
or
sub
dec
loopne
lock
sub
sub
jb
stos
movsl
sub
and
cld
movsb
movsl
aaa
or
and
outsl
pop
cs
xchg
lods
cbtw
xor
test
out
xor
pusha
xor
lret
mov
mov
push
outsb
xchg
pop
xchg
add
xchg
mov
ja
dec
mov
dec
adc
mov
cld
cs
subl
jae
test
orb
sti
aad
shrb
inc
insl
push
xor
jne
insl
lods
cld
dec
in
push
jns
arpl
xchg
stc
mov
fdivrs
inc
pop
sub
test
sub
dec
xchg
popa
jp
test
dec
js
or
addl
adc
sub
mov
in
mov
loopne
sbb
jnp,pn
aad
fcomps
jecxz
stos
push
mov
cmpsl
inc
lea
pop
fisttpll
jp
aas
popa
add
iret
ds
sub
ffreep
fs
jo
jnp
mov
ljmp
jle
jns
push
lret
xchg
pop
imul
aaa
lods
push
outsl
mov
inc
pop
jnp
js,pt
stos
sbb
and
mov
cmp
pop
adc
dec
add
mov
xchg
pop
cmp
inc
jmp
and
sub
out
jae
pop
shll
sub
roll
mov
mov
out
popf
sbb
fstl
mov
jns
out
mov
test
xlat
push
mov
push
jno
aad
lock
xchg
ret
clc
sub
rcll
shrl
push
sbb
xchg
xchg
dec
xchg
shrb
repnz
sub
cmp
or
cmpsl
or
int
jo
fimull
dec
scas
mov
lods
inc
pushf
mov
sbbl
xor
mov
fwait
jne
add
das
test
cltd
or
sahf
flds
sub
push
nop
jb
add
adc
adc
andl
jl
repz
fsubrp
pusha
pop
mov
adc
test
je
jbe
ficompl
pushf
stos
lahf
xor
hlt
sub
push
fisttpl
dec
cmp
fs
lret
mov
gs
mov
sbb
out
loopne
inc
add
push
lods
push
hlt
ss
adc
inc
mov
movsb
cmp
cmp
imul
add
out
xor
or
loop
neg
cmpsb
std
and
jmp
cli
cmp
pop
sub
jecxz
daa
or
push
sti
fwait
nop
jge
cmp
push
pop
xlat
xor
push
mov
push
mov
push
les
sbb
loopne
and
ss
mov
xor
sub
jg
arpl
test
xchg
cmp
testl
adc
adc
pop
mov
adc
fxch
xchg
sbb
bound
push
repnz
dec
std
mov
pop
js
sahf
mov
xchg
sbb
pop
cmp
in
mov
jns
pop
std
inc
sarl
inc
xchg
imul
mov
retw
dec
add
xchg
imul
test
pop
dec
lcall
sbb
dec
sub
insb
lahf
jnp
sahf
hlt
mov
leave
xor
dec
nop
dec
xor
lcall
sar
xchg
pop
ret
cli
push
sbb
rcl
jp
ljmp
pop
pop
sbb
out
mov
add
gs
mov
add
daa
rorl
fstl
adc
ja
xor
jge
rorl
mov
mov
push
or
ja
fisttps
ret
jns
push
and
xor
and
push
inc
sub
mov
push
push
mov
push
xor
lods
sti
fcmovne
push
cli
ret
arpl
add
js
dec
xchg
mov
cli
fmull
pop
push
xor
jne
jno
jmp
jmp
iret
pop
leave
cmpsb
xchg
pop
fidivrs
rol
xchg
push
xchg
or
aam
mov
inc
mov
mov
aad
xchg
add
arpl
jecxz
mov
pusha
xor
mov
jne
push
adc
aad
popf
aam
add
cli
xchg
jno
pop
arpl
ss
hlt
mov
aaa
test
movb
shl
test
test
jg,pn
std
cli
cmp
pop
imul
mov
xchg
popf
in
shlb
int
addl
add
pop
xlat
dec
jno
mov
pop
mov
jbe
mov
dec
jb
imul
mov
fwait
test
mov
or
inc
mov
mov
repz
jmp
sub
jo
pop
call
iret
sbb
insb
rcl
ds
sbb
jge
push
enter
cmp
insl
lds
outsb
add
jg
ja
fs
scas
push
ficoms
lea
ds
leave
jne
leave
enter
lret
jne
pop
cmp
mov
addr16
bound
insb
or
lret
sbb
stos
fstpt
sarb
rorb
ja
or
dec
mov
xor
cmp
jg
negl
aam
or
lods
pop
mov
outsb
jle
jo
out
add
adc
push
mov
ret
lret
mov
mov
out
cltd
and
fneni(8087
rep
jae
test
mov
fidivl
movsb
pop
xchg
xchg
and
hlt
les
jmp
dec
inc
mov
mov
xor
jno
cli
int
jle
jl
dec
mov
arpl
fistps
pop
ss
add
out
sbb
fcompl
and
jecxz
nop
cmp
lret
out
mov
fwait
scas
pop
push
or
hlt
dec
inc
mov
shrb
out
xor
push
subb
sub
jae
ja
out
xchg
push
dec
int3
adc
sbb
jg
inc
sbb
jle
mov
or
jp
mov
arpl
adc
fisttps
adc
push
inc
sar
xchg
inc
or
in
cmc
cmp
sub
pop
and
cmc
or
cmp
mov
pop
or
bswap
mov
xchg
sbb
or
les
pop
mov
popl
jp
daa
icebp
mov
fnstenv
mov
sahf
loope
xor
lds
push
outsb
popa
out
out
in
pusha
jae
mov
inc
pop
sub
xchg
test
jae
xor
leave
lret
jmp
neg
push
mov
xor
add
or
add
or
fs
jo
inc
cmc
cmp
bound
fistpl
dec
mov
addr16
sbb
daa
arpl
sbb
sbb
nop
xor
call
clc
adc
dec
fwait
mov
loop
loop
cmpsl
imul
lret
std
rcrb
push
cli
mov
and
dec
loopne
mov
ljmp
ficoms
shll
push
ret
sub
adc
cmp
xor
rcll
arpl
jecxz
addr16
xor
fdiv
fisubrs
aam
scas
xor
mov
sahf
dec
sbb
jno
es
push
mov
and
sub
lret
lds
pop
in
hlt
in
and
aaa
lcall
xor
cmp
adc
rcr
add
mov
or
inc
popa
iret
mov
ljmp
fdiv
lods
ficoms
adc
push
cmp
inc
cwtl
sbb
bound
sbb
sbb
lods
xchg
add
jl
shl
mov
call
and
sub
jno
movsb
or
xchg
and
inc
xor
pop
pop
int
mov
mov
cs
std
mov
mov
cmp
push
out
cmc
lret
sub
push
dec
rcr
push
loop
add
stc
rorl
roll
fldcw
pop
nop
mov
out
fidivs
sub
mov
in
mov
xchg
jle
mov
xor
mov
out
testl
and
or
and
imul
inc
es
or
out
repnz
adc
ret
mov
test
or
jnp
sbb
scas
push
sub
outsl
push
mov
mov
enter
add
adc
inc
push
out
or
sarl
jl
jno
aam
fildll
jo
mov
pop
mov
decl
ljmp
ss
ljmp
jp
shlb
inc
inc
add
or
test
pop
dec
inc
fwait
and
jmp
inc
add
dec
xchg
cmpsl
pop
xor
mov
fidivs
inc
fwait
sbb
mov
dec
dec
ret
mov
jmp
or
or
mov
ficoms
mov
lods
pop
mov
jno
adc
push
dec
out
jle
insl
adc
inc
xchg
in
lds
mov
shr
mov
cmc
dec
add
xchg
mov
pop
sbb
imul
mov
add
shrl
xchg
sbb
lret
test
pop
push
adc
xchg
cmp
int
add
adc
cmpl
out
incl
hlt
cmp
jnp
mov
add
mov
lds
push
adc
scas
test
and
cmpsl
