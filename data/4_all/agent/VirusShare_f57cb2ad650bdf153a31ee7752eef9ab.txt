mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
adc
popa
adc
rcrl
mov
pop
push
fsin
adc
dec
aam
pop
and
sbb
mov
or
out
jle
pop
lods
lock
rclb
cs
add
sarl
mov
out
fisttpl
call
shrb
xor
add
ss
sbb
xchg
mov
pop
adc
loop
in
mov
xchg
pop
mov
sbb
outsb
jmp
sub
xchg
jb
cs
subb
sti
or
dec
mov
repnz
es
pop
lahf
sbb
inc
mov
call
cli
out
jnp
jecxz
add
add
loope
ficomps
scas
add
dec
xchg
jb
ds
or
add
roll
push
inc
and
pop
pop
and
bound
sub
and
out
pop
jb
push
push
inc
movsl
xor
std
add
std
cld
jp
jp
sbb
jge
cs
or
addl
cmp
xchg
mov
xchg
mov
or
mov
pop
in
clc
jbe
sbb
mov
ss
lret
lea
pop
pminsw
sbb
lret
mov
mov
jg
clc
jns
pop
or
cltd
cmc
imul
xchg
mov
cld
mov
in
fmulp
outsl
push
xor
or
lock
xchg
sub
push
add
stos
mov
adc
xor
cmp
clc
stc
pop
sbb
pop
push
rorb
stc
cmp
sub
mov
sahf
sub
xchg
dec
jp
add
test
fisttps
jp
adc
adc
add
std
cli
or
or
sbb
repnz
shlb
mov
mov
sub
jne
jae
test
fldl2e
fimull
dec
or
and
das
int
ja
inc
or
jno
jbe
adcb
dec
cld
cli
mov
mov
inc
sub
cli
mov
arpl
fsubs
inc
xchg
imulb
dec
pop
jns
xor
inc
lcall
out
stos
fmull
xor
lods
mov
mov
xor
jne
and
push
scas
dec
outsb
mov
fsts
adc
test
push
popf
test
push
nop
sbb
mov
insb
pusha
jnp
xor
out
and
cltd
aam
and
pop
sub
outsl
push
pop
pop
aad
imul
adc
std
lret
js
rcrl
inc
pusha
pop
fcmovb
adc
cmp
mov
pushf
mov
insl
faddp
mov
adc
sbb
imul
divl
subb
inc
bound
mov
lock
mov
xchg
sti
xchg
ffree
aam
fisttps
mov
sbb
jno
cmovo
hlt
or
and
mov
cmpsb
leave
popa
mov
mov
sbb
push
rclb
pop
pop
popa
or
xchg
pop
push
cmpb
lret
pop
mov
popf
xor
out
jne
sub
inc
movsl
scas
jl
faddl
jo
add
int3
in
push
ret
push
movsl
xchg
mov
xchg
push
ljmp
sbb
int
inc
sbb
jg
scas
push
imull
leave
cmp
jp
test
iret
insl
adc
push
std
adc
add
mov
out
xor
mov
pop
lods
scas
insb
jne
add
cmc
dec
xchg
mov
pop
pop
mov
push
test
loopne
xchg
popf
iret
nop
addr16
and
lods
aam
iret
mov
sub
sbbb
cmp
push
sbbl
fiadds
shll
leave
shl
das
sbb
stc
fcmovu
pop
fwait
or
sub
push
push
cwtl
dec
jl
dec
adc
dec
mov
lock
cli
insb
in
push
push
rcll
inc
mov
cmp
fsubs
and
inc
mov
sub
push
mov
xchg
pushf
out
cld
ret
test
cwtl
sub
push
pop
dec
push
mov
jns
push
out
scas
mov
sahf
sbbl
jne
xor
mov
stos
mov
std
iret
ret
call
xor
shll
scas
adc
jae
lods
cmpl
adc
mov
ljmp
mov
call
movb
and
mov
xor
jne
arpl
in
pop
iret
cmpsb
fdivrs
std
or
scas
add
or
dec
and
fsubl
dec
clc
pop
dec
mov
sbb
or
xor
test
addb
xor
push
cmc
sub
xor
sub
cmc
dec
sub
sbb
sbb
mul
or
push
cli
cld
pop
cltd
ds
jns
lods
pusha
mov
scas
and
xchg
ret
fwait
mov
push
sbb
jg
div
push
pop
bound
lea
or
mov
xchg
jle
cwtl
push
test
mov
loopne
xchg
lock
mov
cmpl
or
cmpb
sbb
xchg
mov
andb
imul
jns
mov
enter
xchg
pushf
add
push
push
sbb
out
push
pop
pop
mov
fists
sbb
inc
jae
out
scas
sub
jne
or
adc
int
lret
jle
lock
in
lret
cmp
in
decl
rcrb
push
push
mov
fcom
test
jp
push
and
xchg
in
xor
jae
jo
push
fidivl
ficompl
mov
pop
pop
scas
fnstsw
pop
mov
cltd
into
dec
mov
xchg
fcmovnb
data16
jno
jmp
pop
mov
xchg
add
mov
adc
pop
popa
addr16
inc
gs
es
nop
iret
xchg
sbb
cmp
dec
jmp
sub
sbb
ret
jno
fists
xchg
or
loopne
push
add
jno
sub
jl
adc
push
mov
andl
add
ja
pop
stos
xorb
leave
dec
sbb
sub
xchg
pop
mov
mov
inc
pop
pop
push
rcrb
push
cmp
dec
push
xor
pop
hlt
dec
popa
imul
cmp
movsl
movsb
sbb
or
push
mov
adc
jno
push
outsl
popf
mov
jo
cmp
mov
and
sub
cmpsb
inc
xor
pop
fwait
cmp
fistpl
ret
jg
sbb
cmp
mov
mov
ret
push
iret
xchg
into
subl
fisubl
push
lods
loope
mov
push
test
iret
jp
testb
and
in
ss
fadds
inc
or
dec
pop
sbb
add
mov
dec
mov
and
push
pop
sub
les
ljmp
data16
rcr
in
xor
mov
out
cltd
es
mov
mov
gs
in
mov
push
fldcw
and
fisubrs
pop
ret
push
aas
xor
std
mov
sar
jle
loope
pop
sarl
sub
cmp
fstps
add
out
popa
or
mov
out
mov
xchg
sub
sti
stos
push
pop
xchg
popa
or
cmp
xor
test
in
adc
push
jmp
jae
icebp
sbb
sbb
mov
xchg
inc
inc
sbb
adc
cvttps2pi
rolb
push
or
lea
gs
sahf
cmp
mov
xchg
fisubrl
xchg
rep
push
push
cmp
push
cmp
pusha
xor
and
and
ret
mov
dec
adc
int3
jmp
cwtl
pushf
daa
dec
push
pop
lcall
mov
jle
push
shrl
sti
sarb
rcrl
adc
mov
dec
pop
pop
jmp
sbb
xchg
pop
pop
fs
xor
inc
mov
and
je
pushf
and
jne
xchg
jl
sahf
mov
lods
jl
add
popf
mov
inc
adc
test
sbb
mov
andl
lret
jge
mov
mov
subb
les
xchg
inc
frstor
rolb
mov
or
stos
push
cmp
insb
mov
addb
nop
push
mov
iret
push
jo
shlb
or
jp
scas
lds
lock
inc
mov
jg
jo
mov
out
pop
mov
arpl
dec
negb
lock
in
sub
xchg
mov
or
stos
mov
cmpsb
jae
loopne
daa
sub
sbb
ljmp
adc
xor
pop
loop
or
in
push
cmp
pop
imul
mov
push
sub
scas
lahf
dec
add
xchg
lcall
push
jnp
mov
cmp
pop
jle
es
test
shr
aad
mov
jge
das
mov
push
push
imul
push
fwait
ljmp
shrl
stc
es
jb
or
call
dec
out
addr16
jmp
push
adc
sbb
mov
and
jg
sbb
cmp
out
insl
stc
rorl
and
popa
sub
adc
or
add
icebp
xchg
and
ja
fbstp
int
andl
push
dec
fcoml
in
cld
loope
push
mov
push
xchg
cmpsb
push
dec
fisttpl
adc
mov
mov
mov
pusha
dec
fmuls
sbbb
pop
subl
loopne
addl
adc
int3
adcb
add
cmp
popf
mov
xor
cmc
push
sti
jp
and
imul
aad
sub
dec
push
out
int
cltd
cmp
add
and
pop
movsb
scas
dec
jb
out
cmp
jl
push
ja
call
push
cld
sbb
icebp
out
jmp
out
mov
aas
aad
rcrl
adc
fwait
pusha
mov
icebp
outsl
inc
mov
popa
popa
pushf
lret
push
mov
pusha
gs
scas
sbb
or
aam
pop
xchg
mov
mov
push
out
test
fnstsw
cmp
insb
call
add
inc
sbb
add
and
scas
jne
lods
cmpsb
fstps
push
jp
jnp
ss
fsub
out
push
pushf
sahf
jl
jecxz
pop
or
cld
mov
xchg
or
pop
pop
push
jnp
push
mov
xorl
je
lret
rol
popa
xacquire
nop
push
add
test
insl
cmpsl
lcall
jno
dec
and
jl
pop
movsb
cmp
fstl
in
mov
mov
xchg
int
lds
pop
movl
push
xchg
dec
mov
cld
push
outsb
xor
push
pop
push
adc
xchg
loop
iret
push
mov
adc
out
mov
dec
jbe
pop
adc
push
add
sbb
pusha
xor
xchg
pop
ret
xor
xor
jmp
cli
or
pop
cli
jg
cld
aas
mov
and
mov
imul
loop
pop
xor
mov
xor
mov
and
xchg
ss
or
cmp
pop
rcrb
cmpsl
int3
push
fsubrs
jg
std
mov
ljmp
mov
mov
and
lock
stos
pop
frstor
outsl
push
outsl
pop
push
fmuls
dec
mov
jmp
test
jnp
push
aas
dec
sbb
inc
add
data16
dec
sbb
pusha
adc
jle
push
add
test
mov
push
pop
cs
test
sub
das
adc
mov
jmp
push
dec
mov
xchg
inc
and
pop
push
jb
pushf
mov
ficoms
and
lea
cmp
clc
iret
mov
scas
or
xchg
clc
sar
ljmp
mov
inc
mov
rorl
loope
enter
test
xchg
mov
adc
scas
dec
xchg
insb
jecxz
bound
lea
xor
or
cmpl
dec
movsb
pmaddwd
and
imul
push
jne
int3
fisttps
pop
mov
xor
xor
xchg
out
cltd
aaa
push
ds
out
sbbl
jg
dec
and
and
and
je
lds
mov
xchg
push
add
mov
sbb
mov
out
mov
aam
sub
fnstcw
mov
adc
hlt
sti
popa
ja
adc
scas
icebp
frstor
in
cmp
arpl
xchg
xlat
aad
xor
cmp
cmp
sbb
cmp
aam
out
mov
mov
mov
enter
shrb
add
cld
cltd
enter
pop
pop
jb
xor
imul
mov
sbb
dec
cltd
ds
xor
cld
bound
js
pop
pop
jne
fidivs
cs
jp
push
xchg
and
and
call
xchg
xor
xchg
adcb
fwait
or
push
xchg
cmp
pop
pushl
outsb
sub
jae
dec
xlat
sbb
div
add
out
sub
js
cmp
cmpsl
aad
daa
dec
je,pt
popa
mov
aad
sti
inc
gs
cld
add
sarl
push
fsubrl
and
inc
ljmp
xor
and
mov
dec
mov
mov
shrb
sub
sbb
jmp
push
xor
adc
or
cwtl
stc
enter
ljmp
xchg
test
sub
sub
sti
sub
hlt
pop
scas
xchg
ret
imul
dec
and
rorl
adc
enter
adc
inc
fldenv
or
inc
loop
in
sub
imul
sub
cmp
mov
out
pop
outsb
cmp
sti
ja
aam
js
cmp
mov
pop
push
dec
cmp
mov
aaa
pop
outsl
adc
adc
xchg
jb
insl
sbb
call
addr16
jg
rcrb
lahf
ja
test
or
stos
ds
inc
ret
jmp
xor
loope
negl
mov
xchg
or
mov
jne
in
inc
sahf
sub
lock
push
xor
pop
dec
mov
iret
inc
sbb
fisubs
addr16
xlat
iret
push
repz
fs
mov
negb
call
out
push
popa
jp
add
push
mov
adc
ss
fmul
mov
call
pusha
mov
fisttpll
leave
lret
mov
xlat
idivl
push
add
jns
adc
add
xor
cmpsb
sbb
xor
push
cwtl
ror
jo
xor
mov
lea
jno
xchg
into
lods
mov
or
mov
je
and
fmuls
mov
insl
popa
fwait
ret
adc
pop
inc
lahf
frstor
out
jo
je
xchg
loope
xor
es
iret
daa
jg
ja
and
lock
stos
fisttpl
adc
data16
xor
pushl
data16
jmp
fisttpl
loope
jecxz
pusha
lcall
mov
rolb
ror
ljmp
cs
xor
add
pmaxub
fwait
js
outsb
cmpsb
and
mov
pand
dec
inc
sahf
pop
icebp
jne
mov
pop
sub
cmpsb
inc
jne
dec
test
pop
push
xchg
inc
mov
int
nop
jne
inc
pop
scas
push
mov
or
cli
in
mov
sub
pop
jno
repnz
scas
hlt
add
adc
pop
sbb
sbb
movb
gs
inc
movb
loop
mov
push
adc
pop
pusha
lret
mov
bound
outsb
ds
add
jae
test
test
loop
in
in
dec
push
stc
shlb
xchg
into
lss
inc
cmp
dec
and
xor
out
mov
push
bound
xor
push
jb
and
scas
jg
mov
popa
dec
sub
mov
dec
xrelease
aaa
push
or
jecxz
xchg
mov
and
gs
arpl
jp
add
test
push
xchg
xchg
pop
pop
lds
filds
push
sub
xchg
test
pop
mov
lock
xlat
mov
int
pop
enter
jp
das
jo
pop
mov
mov
repnz
dec
mov
stos
out
rcl
fldenv
xchg
inc
xchg
out
je
mov
mov
popf
and
mov
stc
pop
outsb
mov
xchg
xor
push
sbb
mov
pop
mov
addr16
cs
xor
rcr
dec
mov
scas
inc
mov
dec
and
pop
mov
addr16
in
or
cmp
mov
sbb
negl
pop
push
sbb
bound
jb
int3
loop
inc
push
icebp
pop
add
jl
int
or
shlb
adc
mov
gs
xor
rolb
adc
lret
sarb
divb
sbb
fisttps
jecxz
dec
push
push
jbe
push
inc
dec
fnstsw
xchg
fsubrp
jecxz
and
jns
int3
jae
push
adc
in
aaa
sbb
ret
mov
push
pop
xor
ss
jg
subl
mov
scas
mov
xchg
daa
mov
jae
cmc
inc
adc
loopne
cmpsb
pop
sar
jge
outsb
movsb
into
mov
sar
lods
mov
push
call
dec
and
push
dec
add
pop
movb
aas
pop
mov
sbb
sahf
inc
ret
mov
pushf
int3
aam
gs
cmp
ss
fstl
xchg
and
js
hlt
inc
inc
push
xor
leave
pop
mov
and
test
jge
or
and
sub
dec
pop
add
xchg
sbb
rcl
sbb
mov
mov
test
jo
in
cld
push
xchg
aas
mov
mov
sub
mov
mov
loopne
dec
mov
js
sub
adc
cli
adcl
aad
arpl
mov
mov
add
dec
pop
stos
xor
push
pop
xchg
inc
imul
or
mov
mov
ss
out
pop
pushf
movsb
mov
insb
push
test
in
inc
pop
or
push
mov
push
jecxz
faddp
mov
mov
and
or
or
mov
ret
enter
insl
je
sbb
xor
fisubs
aad
push
lds
cmpsl
xchg
nop
sub
arpl
mov
sbb
pusha
cltd
fnstenv
divb
xor
and
mov
in
mov
int
mov
push
jmp
or
pop
push
int
out
sbb
adc
test
jmp
jl
adc
loop
clc
adc
or
inc
add
jo
push
mov
scas
sbbl
sbb
push
dec
push
movsl
and
mov
mov
outsl
push
adc
push
mov
pusha
xor
repz
push
mov
jae
mov
loop
lret
ljmp
push
out
pop
inc
lret
cmp
orb
dec
icebp
jne
out
and
lods
cmc
jno
lods
pop
jnp
out
xchg
fbld
mov
fprem1
mov
in
sub
jle
cmp
sbb
mov
in
ljmp
out
jbe
fcom
cmp
add
mov
call
shl
mov
add
xchg
data16
inc
inc
xchg
fwait
icebp
faddl
jg
fcmovne
in
pop
outsl
push
mov
jecxz
bound
ss
scas
orb
stos
sti
dec
push
xor
ljmp
cmp
imul
mov
fs
addr16
hlt
or
cmp
scas
jmp
add
mov
pusha
cmpl
loopne
dec
pop
lock
in
lea
sbb
sub
xchg
cmp
lret
cli
xchg
mov
in
pop
push
mov
loope
jae
dec
iret
outsb
jmp
ss
xor
lds
sti
pusha
mov
rclb
sbb
cmp
data16
scas
sub
push
lock
aad
clc
into
jle
ja
sarl
jnp
push
inc
and
popa
loope
lahf
adc
hlt
mov
jne
andb
ljmp
outsb
pop
mov
inc
and
paddsb
mov
inc
and
push
lret
pop
pop
leave
mov
hlt
add
cmp
pop
repz
push
pop
popa
fldt
les
movsl
dec
jp
out
orl
test
add
pop
frstor
sbb
insl
push
mov
shrl
lea
fs
sub
jnp
shl
ss
sahf
jmp
jnp
xor
mov
inc
cmp
pusha
and
fstpl
pop
fcoms
mov
out
add
daa
adc
or
or
adc
pushf
dec
popf
mov
push
ss
add
and
test
negl
sti
mov
adc
mov
dec
sarb
ret
addr16
inc
mov
add
sub
push
call
add
inc
and
in
pop
addb
mov
outsl
out
and
cmp
sub
jmp
or
adc
mov
dec
jecxz
sbb
ds
add
loope
dec
or
cli
sbb
int
imul
adc
lret
mov
es
and
xchg
cli
sbb
or
cmpsb
xchg
dec
sub
dec
outsb
lret
rcl
lods
arpl
or
and
sub
jge
arpl
daa
cli
jnp
test
into
ds
aaa
stos
add
out
sbb
or
cs
cmpsb
ljmp
sub
cmpsl
mov
pop
xchg
sbb
xor
push
roll
loop
mov
mov
pop
lret
fsubl
mov
and
sub
sub
xchg
jo
imul
cmc
inc
je
adc
mov
adcb
lods
push
bound
sub
arpl
lea
add
out
outsb
sub
xor
test
mov
xor
xor
es
das
mov
or
sub
mov
stos
cli
aas
in
jle
in
pop
sub
fdivp
js
and
aad
mov
xor
jp
test
mov
add
jb
je
xor
xchg
sub
xor
xchg
mov
aam
sub
es
cs
sub
and
sahf
or
js
stos
repnz
cmp
arpl
mov
mov
xor
sbb
fnstsw
push
cmp
or
dec
dec
sbb
mov
leave
lcall
lods
fs
cmp
mov
out
popa
inc
sar
jp
jmp
cmpsb
mov
ret
xor
mov
out
jle
lods
fsubs
xlat
call
in
mov
cmp
lods
popa
stc
push
mov
push
jecxz
cmc
cld
jl
out
cmp
aas
mov
mov
push
jo
pop
data16
xchg
outsb
and
push
cmp
or
inc
sbb
sub
insl
mov
ljmp
add
mov
cmp
jge
inc
sbb
jne
mov
lcall
push
imul
rolb
es
outsl
ja
dec
pushf
int3
lret
xchg
in
mov
lahf
fists
add
sub
inc
hlt
push
xor
adc
jbe
xchg
push
addr16
sub
fistl
mov
mov
pop
out
arpl
mov
pop
aas
push
adc
mov
into
push
inc
and
dec
dec
dec
push
jne
jns
int3
fwait
lret
xor
mov
cltd
inc
sbb
shlb
ds
xlat
add
jnp
fnstsw
or
sub
dec
stos
or
sbbb
repnz
dec
imul
jmp
das
into
pushw
and
push
mull
movsb
fcmovbe
mov
dec
and
add
mov
jne
mov
cmp
fldcw
leave
shrl
push
mov
daa
aad
and
mov
dec
mov
outsb
sbb
scas
or
jp
sbb
cmp
aam
dec
mov
int
into
lods
xchg
negl
pop
and
fidivl
adc
int
adc
insl
rclb
lods
lock
sbb
aas
push
leave
fcompl
imul
push
jne
aam
cmpsl
jns
out
rolb
mov
lahf
data16
pop
dec
mov
insb
fldcw
jbe
andl
jmp
add
dec
cld
push
inc
lods
loop
imul
jnp
sti
mov
cmc
loop
popf
mov
sti
jnp
shrd
pop
sbb
popf
dec
xchg
or
fcoms
mov
ds
cld
or
or
sbb
repz
lea
xchg
repz
js
stos
std
test
lret
cmp
push
cmpsb
pushf
xorl
cmc
cwtl
inc
push
cmp
outsl
movsb
inc
in
cmp
loopne
mov
push
push
jle
lock
jp
pop
mov
sbb
pop
clc
xor
push
push
dec
mov
push
icebp
pop
add
mov
mov
orb
nop
mov
inc
mov
fcom
pop
popa
mov
cmp
cmpsl
lahf
lret
out
stos
pop
xor
mov
dec
nop
in
jmp
leave
addr16
out
sbb
fists
pop
xchg
xchg
leave
rcll
pop
ds
inc
push
mov
pop
fldt
xchg
ja
jmp
push
jge
add
and
lcall
fnstenv
addb
mov
rol
or
push
xchg
pop
pusha
mov
add
jp
sub
loop
push
inc
mov
or
loopne
pop
loop
out
jg
mov
lcall
cld
lods
lahf
std
repnz
mov
jb
shlb
ds
lea
add
mov
cli
das
fisubl
jmp
jno
icebp
mov
test
icebp
cmp
int
cmpsb
nopl
stos
dec
repz
sbb
leave
out
mov
pop
xchg
or
in
lods
jo
loope
es
out
mov
jl
aas
enter
rcl
fs
xlat
lahf
sub
jmp
je
adc
dec
dec
pop
lret
and
xlat
sub
imul
mov
imul
jecxz
popa
adc
loope
loopne
popf
mov
popf
pop
fistps
or
nop
lret
out
and
sub
or
add
jb
std
adc
sbb
cmp
loop
cmp
pop
inc
testl
andb
mov
dec
orb
jle
scas
lret
sub
lcall
loope
jl
int
lock
test
mov
clc
mov
imul
mov
lahf
sbb
or
ret
les
adc
ret
push
iret
cmp
jecxz
das
in
sub
orb
fwait
xchg
dec
add
push
test
adc
fs
adc
and
lods
icebp
sbb
xchg
or
es
pop
je
pushf
outsl
scas
fcmove
lock
leave
insl
adc
data16
test
subb
cli
sbb
sub
mulb
stos
imul
in
mov
pushf
lahf
jno
lcall
sub
mov
pop
pusha
test
xor
fsubl
push
add
or
xchg
popf
dec
pop
mov
xchg
pop
dec
push
and
mov
dec
jne
rolb
into
lock
push
xchg
pop
and
loopne
lds
push
outsb
inc
and
mov
into
in
aaa
xlat
popf
mov
and
adc
mov
cmpsb
fistl
add
rcll
lock
push
das
fistl
repnz
repnz
addr16
shrb
adc
sbb
sub
lock
fmul
jecxz
imul
xchg
fs
push
arpl
pop
testb
roll
xchg
jl
or
lahf
movsl
movl
aas
test
fsub
or
dec
lcall
popf
sub
fdiv
outsl
pop
add
inc
icebp
mov
push
pop
out
aaa
jae
repnz
std
xor
xchg
ret
dec
cmp
adc
mov
test
mov
mov
pop
mov
aaa
pop
es
sbb
sub
mov
cli
call
lds
xchg
mov
xor
cmpsl
mov
jns
add
jo
insb
push
adc
cmp
xchg
add
xchg
sub
lds
inc
fdivr
jno
jne
lcall
dec
inc
push
fistpll
clc
push
dec
xor
repz
mov
call
mov
or
xchg
jo
xchg
das
pusha
lods
push
jle
fbstp
jmp
mov
sub
in
das
adc
sub
inc
mov
fidivs
push
jl
cmp
movsb
pop
mov
sbb
test
and
sbb
fldcw
xor
cmpsb
in
ja
out
outsl
movsb
rcrb
into
je
out
xlat
sbb
sbb
or
clc
pop
or
out
add
cmp
cltd
or
jmp
mov
leave
cmp
sub
testl
stc
imul
andb
es
movl
push
and
imul
dec
or
and
aam
pop
xor
pop
inc
fucomi
test
rcll
and
mov
sbb
arpl
xchg
cmpsb
sti
jge
jp
adcb
dec
add
fisubrs
cmpsl
sahf
arpl
lret
mov
push
mov
addb
and
dec
das
xchg
aad
lret
mov
add
xor
mov
sbb
pusha
or
clc
ljmp
and
dec
inc
and
jnp
add
je
outsb
test
clc
mov
test
movsl
xchg
lea
lods
push
xchg
stos
xchg
cmpsb
ljmp
push
mov
ljmp
scas
fucomi
jle
repz
pop
lock
mov
adc
jnp
add
and
fsubrl
sbb
and
pop
adc
loope
and
sub
sbbl
dec
aas
addl
add
std
ret
lods
and
mov
push
aad
call
dec
in
cmp
iret
sub
pop
add
jecxz
lret
enter
or
shlb
adc
pop
pop
sbb
cli
pushf
les
int3
mov
xchg
cmp
mov
cmp
jns
dec
mov
fcoml
enter
jae
in
mov
xchg
es
test
dec
or
mov
sub
jnp
jp
or
les
push
inc
cs
and
mov
pop
outsb
pop
inc
out
jmp
add
pop
test
dec
push
lods
mov
xchg
sbb
inc
adc
andl
lods
or
push
dec
cltd
xchg
jo
pop
xchg
sbb
sbb
mov
sub
dec
outsl
cmp
jns
repz
outsl
call
inc
std
mov
fsubp
rorb
pusha
mov
repz
dec
xchg
pop
ficoml
jl
mov
mov
inc
gs
stos
xor
and
adc
pop
xchg
rolb
test
push
push
jmp
arpl
adc
fiaddl
nop
lret
fcomip
js
cltd
idivl
push
sub
cmpsb
cmp
insb
divw
imul
call
sahf
shlb
pop
fwait
xchg
push
fildl
mov
sti
push
sbb
test
dec
sbb
lret
mov
nop
pushl
adc
lahf
pushf
sub
cld
cmpl
mov
dec
mov
movsb
dec
iret
fiaddl
inc
xchg
test
lret
into
and
fsubs
push
sub
stos
sub
insl
and
xor
jmp
dec
ljmp
and
rcrb
dec
sbb
sub
call
loop
and
cmc
ljmp
jmp
test
movsb
dec
xchg
sub
inc
push
fstpt
and
ret
std
mov
movsl
test
into
outsl
cmc
mov
hlt
inc
mov
int
push
cmp
lea
cmp
add
adc
sti
loopne
mov
je
enter
dec
pushf
jge
sub
jle
cld
fs
and
sbb
outsb
inc
rorl
roll
jnp
pop
xlat
cld
jb
sub
dec
cmp
fs
jg
icebp
cs
scas
leave
leave
sub
mov
popf
dec
leave
pop
xchg
popa
loop
aam
aas
cmove
and
sbb
sub
dec
enter
imul
xchg
mov
sub
mov
test
insb
out
imul
inc
cli
jae
daa
nop
mov
xchg
sub
xchg
add
fistps
sbb
xor
sub
fld
addr16
in
mov
in
push
mov
add
push
leave
dec
test
cmpsb
xor
mov
push
ss
js
je
rorl
cmp
push
imul
inc
ret
jno
or
cmc
cmc
jne
xchg
cmpsl
and
mov
loopne
sub
jle
inc
popf
add
mov
push
popf
insb
nop
dec
movsb
push
cmpsl
inc
inc
loop
sbb
mov
outsb
and
rol
fwait
loop
punpcklbw
pushl
js
cli
pop
jl
enter
inc
or
addr16
repnz
cli
rcrb
adc
nop
test
ljmp
mov
in
lock
sub
das
leave
dec
and
inc
mov
cld
out
lods
loop
addl
push
and
adc
pop
and
call
test
test
popf
jle
pusha
pusha
mov
stos
mov
mov
ret
mov
dec
pop
or
cli
xchg
je
lods
in
adc
mov
or
lret
arpl
iret
xlat
lahf
fcom
mov
scas
cmc
mov
call
mov
mov
mov
mov
mov
xlat
ja
mov
mov
enter
loop
out
lock
mov
and
sub
mov
xchg
mov
lcall
mov
stos
sub
xchg
mov
pusha
lods
mov
fisttpll
addl
jnp
pop
xchg
xchg
je
dec
xchg
hlt
test
jne
push
fdiv
stos
push
jmp
les
cmp
push
mov
stos
jo
mov
push
cs
and
cmp
leave
dec
aaa
jle
test
mov
jno
or
loopne
xor
cmc
push
dec
dec
xchg
xchg
popa
pushf
cmp
mov
pop
nop
pop
pop
jo
or
xor
jecxz
jmp
pop
push
or
push
cltd
pop
add
mov
xchg
hlt
cmp
adc
jnp
dec
sbb
scas
loopne
push
jne
jle
loopne
pop
andb
mov
xchg
lock
or
or
push
adc
aam
sub
jo
movsb
repnz
xchg
push
inc
pop
pop
mov
adc
add
push
and
sub
lods
xchg
jbe
push
jg
adc
sub
xor
cmp
rorl
push
ret
jecxz
enter
test
scas
mov
outsl
cmp
ret
imul
leavew
xlat
add
pop
mov
dec
stc
sbb
arpl
sbb
adc
jno
in
pop
pop
push
ds
imul
popa
or
sub
pop
push
jl
iret
dec
adc
negl
xor
xchg
int3
dec
mov
in
out
xchg
nop
insb
in
movsl
das
pushf
xor
fnop
pop
ficoms
or
sbb
inc
cmp
int
rcll
push
xor
mov
mov
sub
into
sub
mov
sub
dec
das
sub
dec
sbb
cmp
rcrb
mull
out
fisubs
nop
jo,pt
imul
fmull
test
bound
stos
sbbl
sub
mov
dec
cmp
test
rolb
ds
mov
adc
push
pop
jl
shl
repz
arpl
notl
xchg
insl
inc
mov
loopne
add
lods
ja
mov
cmp
mov
sub
shll
sub
fistpll
pop
rcrb
push
xchg
es
xchg
negl
mov
js
in
or
sbb
mov
int
enter
aas
and
scas
fidivrs
sbb
lahf
adc
mov
subb
xor
outsb
aas
lret
jmp
das
call
sbb
data16
pop
cli
xchg
cmp
fld
add
pop
loop
jnp,pn
push
popa
idivb
jno
iret
clc
mov
xchg
cmp
fs
xlat
icebp
out
or
sub
inc
dec
adc
pop
add
sbb
filds
adc
pop
pop
or
xchg
pop
fimuls
push
jne
sub
std
pop
lcall
in
dec
out
pop
sub
xor
imul
lret
push
mov
xor
or
mov
xchg
xchg
inc
jmp
xor
psubd
mov
dec
jl
call
js
push
in
mov
mov
into
lods
or
inc
mov
push
subb
bound
jp
xor
jecxz
icebp
cmpsl
sub
decb
xchg
inc
dec
insb
pop
or
sbb
add
lock
cmc
in
das
ja
std
insl
jg
push
cmp
lcall
testb
mov
loop
jo
lcall
push
cs
xchg
lahf
and
mov
cmp
mov
or
imul
cmp
jle
arpl
or
icebp
mov
aaa
sahf
fstpt
int
dec
sarl
adc
icebp
fsubrs
fidivs
xor
xabort
mov
jg
xchg
into
outsb
push
fistps
enter
repz
mov
xchg
test
lods
test
scas
insl
movsl
xchg
pop
mov
out
sahf
je
out
fidivs
jne
inc
je
shl
sbb
jae
sti
cmp
cltd
cli
dec
xchg
insl
mov
ja
xor
xchg
lcall
stos
mov
outsb
mov
add
popa
dec
mov
stc
movsl
dec
add
push
mov
ret
jae
mov
push
or
adc
int
sub
ss
push
push
scas
je
movsb
push
js
loope
test
dec
sti
bound
xchg
hlt
les
xchg
inc
sbb
mov
xchg
xor
mov
sti
mov
stos
mov
ja
or
ljmp
shl
mov
sub
mov
repnz
cmp
adc
xor
mov
imul
cld
loopne
jmp
mov
popf
cmp
cmp
jae
and
push
sahf
call
inc
loope
enter
loopne
daa
jns
stos
lret
sub
icebp
jb
mov
or
pop
popa
negl
sub
hlt
push
ror
mov
sub
cwtl
sub
xlat
inc
ja
shll
mov
adc
add
pop
test
add
mul
pop
jg
xchg
sbb
test
jnp
cld
and
cmp
shlb
jne
fucom
adc
or
fldl
dec
pop
xor
andl
mov
nop
mov
mov
mov
adc
sub
mov
cli
inc
mov
add
push
dec
cmpsb
into
rcl
orl
add
mov
popf
in
int3
jo
je
lea
andl
adc
jle
outsl
pusha
cltd
enter
mov
enter
sbb
je
push
and
mov
jp
push
popa
mov
jp
imul
adc
cmp
jge
jbe
decb
cmpsb
jne
fwait
js
fmull
jp
adc
push
xchg
cltd
push
lret
test
mov
test
out
jp
addr16
xor
xchg
loope
xor
adc
lea
mov
imul
and
hlt
sub
add
ljmp
adc
jae
shll
mov
imul
test
push
adc
test
inc
leave
xchg
ss
sbb
mov
call
test
idiv
cmp
push
push
cmpsb
pop
fcoml
mov
push
xchg
mov
out
push
xor
sbb
aam
pop
or
lret
sbb
call
or
mov
or
xchg
clc
inc
lds
pop
mov
mov
jns
jecxz
jecxz
in
sub
mov
adc
or
aam
imulb
fwait
je
push
aad
std
outsl
xchg
xchg
or
out
js
dec
cmp
arpl
pop
adc
jecxz
hlt
int
dec
push
cltd
jno
cmp
add
popa
jp
pop
adc
xchg
lcall
mov
sbb
jne
cli
loope
fisubl
inc
push
xor
mov
fists
push
lea
lahf
mov
sub
inc
rol
cmp
pop
pop
cmp
push
sbb
xor
mov
test
dec
incb
pop
orb
roll
clc
mul
test
fdivrl
mov
inc
pusha
repnz
cmp
fidivl
mov
push
push
mov
lahf
outsb
xor
or
xor
rcrb
mov
mov
xchg
xlat
cs
lods
pop
nop
sub
sti
xchg
xor
mov
fs
cmc
jnp
and
lcall
dec
xchg
xor
sbb
shl
rcll
xor
into
cvtdq2ps
leave
and
fists
mov
mov
sbb
mov
stos
test
sbb
ljmp
outsl
mov
xlat
decl
xlat
cltd
sub
or
dec
outsb
push
sarl
cmp
jb
in
popf
cmp
cld
out
cmp
inc
xor
cmp
lds
inc
repz
in
aam
or
aad
jno
stos
dec
pop
in
mov
adc
sub
cmp
sbb
mov
mov
in
in
jo
sub
or
push
cmp
leave
cmp
and
lods
outsl
enter
add
lock
adcb
enter
pop
mov
mov
int
daa
jg
imul
inc
jmp
mov
int
bound
cmp
arpl
out
xor
inc
ja
decb
jg,pn
xor
cmp
clc
jno
pop
or
mov
std
add
jns
cmpsl
and
ljmp
rcrb
xlat
lock
add
pop
fdivrl
loope
push
fidivl
sbb
ret
add
aam
or
inc
je
sub
imul
add
inc
mov
dec
lea
jg
shlb
add
or
in
movsb
fisubs
div
pop
sub
not
les
les
lret
into
push
rcrb
test
popa
xchg
ret
push
inc
aaa
xchg
adc
cmovno
gs
mov
pop
scas
pop
outsb
bound
push
inc
fdivs
rolb
lock
dec
rol
in
std
mov
mov
loop
mov
adc
loopne
leave
stos
xchg
ja
push
inc
inc
push
and
inc
scas
es
out
mov
push
pop
test
gs
hlt
call
jle
jl
sub
lahf
mov
jecxz
adc
popa
pop
addr16
pop
mov
add
pusha
mov
movsb
xor
mov
stc
jmp
sbbb
lods
in
inc
dec
xor
imul
mov
js
cmp
mov
cli
repz
in
je
push
out
enter
push
sub
test
and
jle
adc
hlt
pushf
cmp
clc
dec
out
and
xor
inc
push
sbb
mov
xchg
sub
mov
cmp
cwtl
jmp
xchg
stc
xchg
sbb
stos
cmp
inc
dec
lahf
xchg
scas
addr16
aaa
xchg
and
movsl
popa
inc
aam
lret
push
arpl
cld
sbb
push
mov
jnp
sbb
in
inc
jnp
ja
ret
inc
and
inc
enter
xor
pop
pop
loopne
icebp
push
test
aad
push
mov
cmp
cmp
scas
xor
and
push
sbb
pop
xchg
outsl
lock
adc
jbe
movsb
ss
cld
btsl
aaa
data16
imul
lahf
sub
bnd
adc
mov
xor
hlt
dec
mov
daa
outsb
ja
lret
push
push
lret
cmpsl
and
scas
dec
xlat
and
fs
push
sbb
in
xchg
jg
bound
mov
pop
cmp
data16
mov
mov
dec
repnz
iret
push
push
adc
cli
sub
add
hlt
add
adc
sbb
dec
arpl
call
rcrb
sbb
cltd
call
adc
push
push
es
adc
adc
push
inc
adc
out
js
das
mov
sbb
test
fstps
pop
jnp
jno
xchg
jmp
adc
sbb
stc
xchg
jne
add
xchg
dec
jg
xchg
jne
xchg
int3
mov
mov
sbb
inc
mov
subb
mov
ja
push
xor
push
jne
loope
shll
sahf
mov
push
pop
lcall
or
cmp
xchg
pop
rolb
mov
daa
std
aam
sub
ja
loopne
xor
imul
lds
rcrb
mov
fstps
adc
dec
pop
insl
dec
hlt
pushf
dec
fiadds
mov
or
jge
sti
les
repnz
inc
sbb
inc
sub
aas
mov
adc
lcall
dec
mov
sti
and
pop
mov
jle
cmc
or
push
test
outsb
mov
arpl
lods
lods
inc
inc
iret
cmp
mov
das
scas
adc
ds
inc
dec
aaa
mov
jae
push
icebp
adc
mov
test
js
data16
mov
aas
ss
xchg
ret
dec
nop
mov
cli
jl
lahf
add
cmp
add
dec
popf
lods
jne
pop
mov
loopne
inc
mov
mov
jnp
cltd
sbb
cltd
mov
xchg
sub
push
push
fcomip
in
popf
aas
fadds
mov
aam
cwtl
cmp
xchg
xchg
and
cmp
sti
movsl
inc
out
pop
or
sub
cmp
lcall
or
into
addr16
mov
xchg
mov
jno
add
sbb
pop
pop
stos
shrl
mov
adcb
sbb
je
inc
call
jae
adc
das
pop
mov
popa
ljmp
mov
imul
adc
jmp
xchg
fldl
pop
jbe
sub
adc
mov
fisubs
sub
push
jnp
add
xchg
mov
cmpsb
pop
add
dec
fwait
mov
lods
movsl
aas
sti
pop
mov
mov
fnsetpm(287
testb
aad
outsb
xlat
pop
mov
scas
cwtl
out
js
mov
xchg
dec
or
inc
push
jmp
or
xchg
ljmp
lea
popf
push
jbe
push
gs
ja
xchg
mov
sbb
andl
pop
imul
stos
pop
rcll
add
xor
enter
lret
mov
sti
test
jge
mov
inc
jbe
xchg
rorb
lret
mov
jge
or
fstps
outsl
sbb
inc
jo
mov
or
dec
test
das
fcoml
mov
cli
test
das
fdivs
jl
dec
popa
cld
cmpsb
mov
js
jbe
call
lret
sub
push
pop
inc
push
fmulp
adc
push
gs
ret
aad
dec
push
and
in
jnp
fnsave
ret
or
mov
mov
mov
adc
mov
xchg
cmpsl
flds
out
nop
int
iret
mov
mov
cmpsb
pop
mov
movups
inc
inc
sbb
ret
ret
jl
jge
shrb
mov
xor
scas
repz
xchg
mov
sbb
add
lcall
and
xor
hlt
rcl
leave
add
xchg
adc
or
mov
jg
scas
pop
adc
jle
repz
dec
cmc
cltd
rorl
movsb
mov
cmp
push
mov
mov
cmc
test
push
mov
aam
sahf
lods
jle
xor
or
repz
xor
leave
repnz
or
xlat
lret
js
insb
ds
add
cmpsl
sub
dec
pushf
cmp
push
mov
lcall
xor
mov
push
faddl
jno
adc
sub
or
popa
push
sarb
inc
jle
cmp
out
aam
adc
xchg
xchg
pushf
outsl
movsb
das
out
or
imul
stos
pop
mov
shr
jge
outsb
sub
lods
dec
subl
hlt
inc
test
mov
in
sub
add
nop
hlt
inc
aas
mov
xor
rolb
and
lock
xchg
pop
lock
and
jb
add
inc
jmp
andb
das
lret
mov
push
fistpll
aas
shr
mov
sahf
pop
jmp
adc
pop
dec
call
and
mov
arpl
loopne
sub
jno
xor
dec
ret
lcall
jg
ret
xor
push
sarl
lods
jo
scas
pop
jle
jo
mov
jl
add
lock
jnp
inc
subb
mov
sarl
lret
pop
rcrl
push
dec
dec
iret
sbb
ret
popf
push
adcb
fnstenv
adc
mov
insl
dec
out
and
adc
cli
mov
gs
js
jae
and
lea
stc
sbb
mov
jo
into
test
mov
pop
insb
dec
push
jmp
mov
xchg
xor
jg
movsb
mov
mov
xor
add
jmp
jne
xchg
call
mov
jb
xor
das
loopne
inc
daa
fildl
pop
mov
push
adcl
jno
add
inc
ret
aaa
rorl
mov
cmp
or
mov
cmpsl
xchg
andb
mov
lret
sahf
adc
nop
loop
jmp
fs
nop
jl
test
js
inc
bound
enter
call
icebp
popa
and
fsubs
lret
clc
push
pop
pop
icebp
dec
mov
nop
loope
push
sbb
push
loope
insl
testl
in
xchg
mov
gs
mov
mov
stos
orl
sbb
jns
adc
or
or
sub
dec
lahf
dec
mov
mov
dec
es
jbe
rorb
push
addr16
ficomps
jae
or
pop
mov
dec
sbb
outsb
inc
dec
mov
lret
cmp
mov
and
dec
scas
out
lahf
icebp
add
sbb
cmp
in
shll
xor
repnz
popa
cmp
cmpl
and
pop
and
push
jp
pop
pop
nop
sbb
jne
lcall
push
mov
add
lock
cmpsl
scas
mov
test
rclb
xchg
dec
nop
and
in
hlt
push
push
sbb
sbb
inc
inc
cs
pop
jl
dec
ffree
inc
test
les
cltd
jle
and
cmp
loopne
es
stc
dec
mov
add
xlat
sub
jl
inc
mov
ss
pop
cwtl
xchg
sub
fnstcw
mov
outsl
pushf
inc
enter
std
out
jl
loopne
jo
pop
rcr
std
lcall
fidivs
sbb
adc
iret
mov
xchg
jmp
fistpl
jo
loopne
mov
xor
shlb
mov
mov
jg
push
mov
push
jns
jge
mov
rorb
sub
repz
adcl
cwtl
leave
mov
insb
cmp
and
je
mov
dec
fwait
sbbb
cmp
js
or
fst
sub
push
xchg
and
push
pop
or
out
add
inc
mov
pop
xorl
ret
loope
pop
bound
push
push
mov
sbb
hlt
ficoml
adc
pop
fucomi
jb
mov
mov
jno
sub
inc
adc
dec
inc
shlb
out
dec
or
lcall
push
jmp
mov
shll
loope
aad
add
lret
mov
pop
shll
mov
lock
mov
jne
mov
sub
fsubrp
inc
pop
xadd
push
add
loopne
cmpsb
repnz
fsubs
fcomip
test
dec
inc
push
add
add
mov
mov
leave
xchg
sub
inc
dec
pop
cmp
hlt
or
daa
xor
cmp
ret
jmp
xchg
in
or
dec
aaa
lret
aam
xchg
dec
js
adc
out
pop
outsb
test
pop
fs
mov
push
sub
jbe
xor
aam
jp
popl
cltd
xlat
xorl
push
xchg
dec
lods
adc
jns
loop,pt
push
scas
popa
stos
cmpsl
mov
or
mov
cmovbe
cmp
or
jb
les
dec
inc
mov
and
add
sbbb
in
cmp
inc
sbb
fistpl
xor
and
loope
popa
clc
adc
add
in
lahf
aad
sub
cwtl
filds
xor
mov
pop
jnp
ret
incb
out
inc
dec
mov
add
dec
or
lock
xchg
mov
sub
mov
les
rcr
mov
aas
jecxz
out
adc
push
pusha
fnstsw
mov
ds
rsqrtps
inc
mov
ljmp
leave
fisubrl
inc
adc
and
cld
jp,pn
nop
xchg
lods
int3
xor
xor
lcall
adc
int3
pusha
rcr
fisubs
mov
es
ljmp
push
stc
shlb
rolb
shlb
pop
jns
lahf
jmp
adc
mov
push
fstpt
sti
mov
dec
ss
test
out
fstps
xchg
js
jno
sbbb
data16
push
insb
or
xchg
mov
fsub
adc
fldcw
outsb
out
pop
jmp
test
xchg
sahf
loope
or
incl
adc
int3
loop
push
cmpl
std
adc
mov
add
inc
mov
push
mov
repnz
js
adc
jg
pop
pop
jb
fcoms
xor
sarb
xchg
inc
or
call
cmp
inc
or
fisubrl
sub
or
lret
push
shl
stos
lods
rcrb
iret
daa
rclb
addb
add
ret
mov
pop
orl
or
lock
dec
push
sub
mov
sar
je
xor
inc
push
mov
lret
scas
pop
fs
xchg
pop
cwtl
repz
fisttpl
fdivrl
push
cmp
ror
roll
icebp
shl
cmp
mov
mov
imul
xor
arpl
inc
jge
and
cmp
add
adc
sub
mov
int3
xchg
xor
mov
adc
lock
fnstenv
or
fsincos
mov
and
inc
fcmovnbe
jns,pt
xlat
rcl
pop
adc
adc
outsb
push
fnstenv
and
.byte
mov
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
negb
sahf
dec
fidivl
inc
mov
sub
insl
pop
js
into
call
ja
in
dec
out
testb
cmp
mov
push
mov
jecxz
push
les
xor
aad
repz
dec
pop
xchg
fldz
mov
fcoml
and
pop
lret
stos
jne
ret
xchg
push
mov
into
lret
or
cmp
jnp
dec
bound
mov
mov
pop
push
sub
fwait
xchg
loop
enter
sub
mov
mov
fidivrl
mov
inc
scas
jo
stos
stos
cmc
jp
ss
fucomi
cmp
int
push
or
stos
xor
ret
xchg
mov
jns
pop
lret
mov
lahf
ljmp
mov
ficompl
cmp
pop
cs
sbb
inc
xchg
in
cmpsl
jne
pop
cmp
cmp
scas
ja
nopl
cmp
int3
sbb
cmp
adc
pop
xchg
std
sbb
lcall
pushl
add
pop
fcomps
push
stos
daa
ret
les
aas
push
ret
dec
push
cmp
inc
sub
mov
fwait
lret
nop
loope
fisubrs
lods
jecxz
sbb
nop
sub
pop
jbe
cmp
xchg
mov
xor
push
sbb
mov
rclb
dec
arpl
pop
fs
dec
adc
mov
xor
mov
cwtl
inc
dec
repz
lcall
xor
fnstcw
daa
xor
fbld
xor
pop
adc
fsubp
xchg
sbb
clc
call
cli
cmc
and
pop
sbb
outsl
setg
call
into
jecxz
movsl
sbb
frstor
dec
es
mov
and
xchg
mov
shll
mov
mov
push
dec
add
gs
pop
dec
scas
and
cmpsb
mov
sysenter
stc
or
paddw
dec
ja
mov
inc
daa
repnz
inc
iret
and
lcall
out
xor
jp
dec
inc
adc
popa
adc
rcrl
mov
pop
push
fsin
adc
dec
aam
pop
and
sbb
mov
or
out
jle
pop
lods
lock
rclb
cs
add
sarl
mov
out
fisttpl
call
shrb
xor
add
ss
sbb
xchg
mov
pop
adc
loop
in
mov
xchg
pop
mov
sbb
outsb
jmp
sub
xchg
jb
cs
subb
sti
or
dec
mov
repnz
es
pop
lahf
sbb
inc
mov
call
cli
out
jnp
jecxz
add
add
loope
ficomps
scas
add
dec
xchg
jb
ds
or
add
roll
push
inc
and
pop
pop
and
bound
sub
and
out
pop
jb
push
push
inc
movsl
xor
std
add
std
cld
jp
jp
sbb
jge
cs
or
addl
cmp
xchg
mov
xchg
mov
or
mov
pop
in
clc
jbe
sbb
mov
ss
lret
lea
pop
pminsw
sbb
lret
mov
mov
jg
clc
jns
pop
or
cltd
cmc
imul
xchg
mov
cld
mov
in
fmulp
outsl
push
xor
or
lock
xchg
sub
push
add
stos
mov
adc
xor
cmp
clc
stc
pop
sbb
pop
push
rorb
stc
cmp
sub
mov
sahf
sub
xchg
dec
jp
add
test
fisttps
jp
adc
adc
add
std
cli
or
or
sbb
repnz
shlb
mov
mov
sub
jne
jae
test
fldl2e
fimull
dec
or
and
das
int
ja
inc
or
jno
jbe
adcb
dec
cld
cli
mov
mov
inc
sub
cli
mov
arpl
fsubs
inc
xchg
imulb
dec
pop
jns
xor
inc
lcall
out
stos
fmull
xor
lods
mov
mov
xor
jne
and
push
scas
dec
outsb
mov
fsts
adc
test
push
popf
test
push
nop
sbb
mov
insb
pusha
jnp
xor
out
and
cltd
aam
and
pop
sub
outsl
push
pop
pop
aad
imul
adc
std
lret
js
rcrl
inc
pusha
pop
fcmovb
adc
cmp
mov
pushf
mov
insl
faddp
mov
adc
sbb
imul
divl
subb
inc
bound
mov
lock
mov
xchg
sti
xchg
ffree
aam
fisttps
mov
sbb
jno
cmovo
hlt
or
and
mov
cmpsb
leave
popa
mov
mov
sbb
push
rclb
pop
pop
popa
or
xchg
pop
push
cmpb
lret
pop
mov
popf
xor
out
jne
sub
inc
movsl
scas
jl
faddl
jo
add
int3
in
push
ret
push
movsl
xchg
mov
xchg
push
ljmp
sbb
int
inc
sbb
jg
scas
push
imull
leave
cmp
jp
test
iret
insl
adc
push
std
adc
add
mov
out
xor
mov
pop
lods
scas
insb
jne
add
cmc
dec
xchg
mov
pop
pop
mov
push
test
loopne
xchg
popf
iret
nop
addr16
and
lods
aam
iret
mov
sub
sbbb
cmp
push
sbbl
fiadds
shll
leave
shl
das
sbb
stc
fcmovu
pop
fwait
or
sub
push
push
cwtl
dec
jl
dec
adc
dec
mov
lock
cli
insb
in
push
push
rcll
inc
mov
cmp
fsubs
and
inc
mov
sub
push
mov
xchg
pushf
out
cld
ret
test
cwtl
sub
push
pop
dec
push
mov
jns
push
out
scas
mov
sahf
sbbl
jne
xor
mov
stos
mov
std
iret
ret
call
xor
shll
scas
adc
jae
lods
cmpl
adc
mov
ljmp
mov
call
movb
and
mov
xor
jne
arpl
in
pop
iret
cmpsb
fdivrs
std
or
scas
add
or
dec
and
fsubl
dec
clc
pop
dec
mov
sbb
or
xor
test
addb
xor
push
cmc
sub
xor
sub
cmc
dec
sub
sbb
sbb
mul
or
push
cli
cld
pop
cltd
ds
jns
lods
pusha
mov
scas
and
xchg
ret
fwait
mov
push
sbb
jg
div
push
pop
bound
lea
or
mov
xchg
jle
cwtl
push
test
mov
loopne
xchg
lock
mov
cmpl
or
cmpb
sbb
xchg
mov
andb
imul
jns
mov
enter
xchg
pushf
add
push
push
sbb
out
push
pop
pop
mov
fists
sbb
inc
jae
out
scas
sub
jne
or
adc
int
lret
jle
lock
in
lret
cmp
in
decl
rcrb
push
push
mov
fcom
test
jp
push
and
xchg
in
xor
jae
jo
push
fidivl
ficompl
mov
pop
pop
scas
fnstsw
pop
mov
cltd
into
dec
mov
xchg
fcmovnb
data16
jno
jmp
pop
mov
xchg
add
mov
adc
pop
popa
addr16
inc
gs
es
nop
iret
xchg
sbb
cmp
dec
jmp
sub
sbb
ret
jno
fists
xchg
or
loopne
push
add
jno
sub
jl
adc
push
mov
andl
add
ja
pop
stos
xorb
leave
dec
sbb
sub
xchg
pop
mov
mov
inc
pop
pop
push
rcrb
push
cmp
dec
push
xor
pop
hlt
dec
popa
imul
cmp
movsl
movsb
sbb
or
push
mov
adc
jno
push
outsl
popf
mov
jo
cmp
mov
and
sub
cmpsb
inc
xor
pop
fwait
cmp
fistpl
ret
jg
sbb
cmp
mov
mov
ret
push
iret
xchg
into
subl
fisubl
push
lods
loope
mov
push
test
iret
jp
testb
and
in
ss
fadds
inc
or
dec
pop
sbb
add
mov
dec
mov
and
push
pop
sub
les
ljmp
data16
rcr
in
xor
mov
out
cltd
es
mov
mov
gs
in
mov
push
fldcw
and
fisubrs
pop
ret
push
aas
xor
std
mov
sar
jle
loope
pop
sarl
sub
cmp
fstps
add
out
popa
or
mov
out
mov
xchg
sub
sti
stos
push
pop
xchg
popa
or
cmp
xor
test
in
adc
push
jmp
jae
icebp
sbb
sbb
mov
xchg
inc
inc
sbb
adc
cvttps2pi
rolb
push
or
lea
gs
sahf
cmp
mov
xchg
fisubrl
xchg
rep
push
push
cmp
push
cmp
pusha
xor
and
and
ret
mov
dec
adc
int3
jmp
cwtl
pushf
daa
dec
push
pop
lcall
mov
jle
push
shrl
sti
sarb
rcrl
adc
mov
dec
pop
pop
jmp
sbb
xchg
pop
pop
fs
xor
inc
mov
and
je
pushf
and
jne
xchg
jl
sahf
mov
lods
jl
add
popf
mov
inc
adc
test
sbb
mov
andl
lret
jge
mov
mov
subb
les
xchg
inc
frstor
rolb
mov
or
stos
push
cmp
insb
mov
addb
nop
push
mov
iret
push
jo
shlb
or
jp
scas
lds
lock
inc
mov
jg
jo
mov
out
pop
mov
arpl
dec
negb
lock
in
sub
xchg
mov
or
stos
mov
cmpsb
jae
loopne
daa
sub
sbb
ljmp
adc
xor
pop
loop
or
in
push
cmp
pop
imul
mov
push
sub
scas
lahf
dec
add
xchg
lcall
push
jnp
mov
cmp
pop
jle
es
test
shr
aad
mov
jge
das
mov
push
push
imul
push
fwait
ljmp
shrl
stc
es
jb
or
call
dec
out
addr16
jmp
push
adc
sbb
mov
and
jg
sbb
cmp
out
insl
stc
rorl
and
popa
sub
adc
or
add
icebp
xchg
and
ja
fbstp
int
andl
push
dec
fcoml
in
cld
loope
push
mov
push
xchg
cmpsb
push
dec
fisttpl
adc
mov
mov
mov
pusha
dec
fmuls
sbbb
pop
subl
loopne
addl
adc
int3
adcb
add
cmp
popf
mov
xor
cmc
push
sti
jp
and
imul
aad
sub
dec
push
out
int
cltd
cmp
add
and
pop
movsb
scas
dec
jb
out
cmp
jl
push
ja
call
push
cld
sbb
icebp
out
jmp
out
mov
aas
aad
rcrl
adc
fwait
pusha
mov
icebp
outsl
inc
mov
popa
popa
pushf
lret
push
mov
pusha
gs
scas
sbb
or
aam
pop
xchg
mov
mov
push
out
test
fnstsw
cmp
insb
call
add
inc
sbb
add
and
scas
jne
lods
cmpsb
fstps
push
jp
jnp
ss
fsub
out
push
pushf
sahf
jl
jecxz
pop
or
cld
mov
xchg
or
pop
pop
push
jnp
push
mov
xorl
je
lret
rol
popa
xacquire
nop
push
add
test
insl
cmpsl
lcall
jno
dec
and
jl
pop
movsb
cmp
fstl
in
mov
mov
xchg
int
lds
pop
movl
push
xchg
dec
mov
cld
push
outsb
xor
push
pop
push
adc
xchg
loop
iret
push
mov
adc
out
mov
dec
jbe
pop
adc
push
add
sbb
pusha
xor
xchg
pop
ret
xor
xor
jmp
cli
or
pop
cli
jg
cld
aas
mov
and
mov
imul
loop
pop
xor
mov
xor
mov
and
xchg
ss
or
cmp
pop
rcrb
cmpsl
int3
push
fsubrs
jg
std
mov
ljmp
mov
mov
and
lock
stos
pop
frstor
outsl
push
outsl
pop
push
fmuls
dec
mov
jmp
test
jnp
push
aas
dec
sbb
inc
add
data16
dec
sbb
pusha
adc
jle
push
add
test
mov
push
pop
cs
test
sub
das
adc
mov
jmp
push
dec
mov
xchg
inc
and
pop
push
jb
pushf
mov
ficoms
and
lea
cmp
clc
iret
mov
scas
or
xchg
clc
sar
ljmp
mov
inc
mov
rorl
loope
enter
test
xchg
mov
adc
scas
dec
xchg
insb
jecxz
bound
lea
xor
or
cmpl
dec
movsb
pmaddwd
and
imul
push
jne
int3
fisttps
pop
mov
xor
xor
xchg
out
cltd
aaa
push
ds
out
sbbl
jg
dec
and
and
and
je
lds
mov
xchg
push
add
mov
sbb
mov
out
mov
aam
sub
fnstcw
mov
adc
hlt
sti
popa
ja
adc
scas
icebp
frstor
in
cmp
arpl
xchg
xlat
aad
xor
cmp
cmp
sbb
cmp
aam
out
mov
mov
mov
enter
shrb
add
cld
cltd
enter
pop
pop
jb
xor
imul
mov
sbb
dec
cltd
ds
xor
cld
bound
js
pop
pop
jne
fidivs
cs
jp
push
xchg
and
and
call
xchg
xor
xchg
adcb
fwait
or
push
xchg
cmp
pop
pushl
outsb
sub
jae
dec
xlat
sbb
div
add
out
sub
js
cmp
cmpsl
aad
daa
dec
je,pt
popa
mov
aad
sti
inc
gs
cld
add
sarl
push
fsubrl
and
inc
ljmp
xor
and
mov
dec
mov
mov
shrb
sub
sbb
jmp
push
xor
adc
or
cwtl
stc
enter
ljmp
xchg
test
sub
sub
sti
sub
hlt
pop
scas
xchg
ret
imul
dec
and
rorl
adc
enter
adc
inc
fldenv
or
inc
loop
in
sub
imul
sub
cmp
mov
out
pop
outsb
cmp
sti
ja
aam
js
cmp
mov
pop
push
dec
cmp
mov
aaa
pop
outsl
adc
adc
xchg
jb
insl
sbb
call
addr16
jg
rcrb
lahf
ja
test
or
stos
ds
inc
ret
jmp
xor
loope
negl
mov
xchg
or
mov
jne
in
inc
sahf
sub
lock
push
xor
pop
dec
mov
iret
inc
sbb
fisubs
addr16
xlat
iret
push
repz
fs
mov
negb
call
out
push
popa
jp
add
push
mov
adc
ss
fmul
mov
call
pusha
mov
fisttpll
leave
lret
mov
xlat
idivl
push
add
jns
adc
add
xor
cmpsb
sbb
xor
push
cwtl
ror
jo
xor
mov
lea
jno
xchg
into
lods
mov
or
mov
je
and
fmuls
mov
insl
popa
fwait
ret
adc
pop
inc
lahf
frstor
out
jo
je
xchg
loope
xor
es
iret
daa
jg
ja
and
lock
stos
fisttpl
adc
data16
xor
pushl
data16
jmp
fisttpl
loope
jecxz
pusha
lcall
mov
rolb
ror
ljmp
cs
xor
add
pmaxub
fwait
js
outsb
cmpsb
and
mov
pand
dec
inc
sahf
pop
icebp
jne
mov
pop
sub
cmpsb
inc
jne
dec
test
pop
push
xchg
inc
mov
int
nop
jne
inc
pop
scas
push
mov
or
cli
in
mov
sub
pop
jno
repnz
scas
hlt
add
adc
pop
sbb
sbb
movb
gs
inc
movb
loop
mov
push
adc
pop
pusha
lret
mov
bound
outsb
ds
add
jae
test
test
loop
in
in
dec
push
stc
shlb
xchg
into
lss
inc
cmp
dec
and
xor
out
mov
push
bound
xor
push
jb
and
scas
jg
mov
popa
dec
sub
mov
dec
xrelease
aaa
push
or
jecxz
xchg
mov
and
gs
arpl
jp
add
test
push
xchg
xchg
pop
pop
lds
filds
push
sub
xchg
test
pop
mov
lock
xlat
mov
int
pop
enter
jp
das
jo
pop
mov
mov
repnz
dec
mov
stos
out
rcl
fldenv
xchg
inc
xchg
out
je
mov
mov
popf
and
mov
stc
pop
outsb
mov
xchg
xor
push
sbb
mov
pop
mov
addr16
cs
xor
rcr
dec
mov
scas
inc
mov
dec
and
pop
mov
addr16
in
or
cmp
mov
sbb
negl
pop
push
sbb
bound
jb
int3
loop
inc
push
icebp
pop
add
jl
int
or
shlb
adc
mov
gs
xor
rolb
adc
lret
sarb
divb
sbb
fisttps
jecxz
dec
push
push
jbe
push
inc
dec
fnstsw
xchg
fsubrp
jecxz
and
jns
int3
jae
push
adc
in
aaa
sbb
ret
mov
push
pop
xor
ss
jg
subl
mov
scas
mov
xchg
daa
mov
jae
cmc
inc
adc
loopne
cmpsb
pop
sar
jge
outsb
movsb
into
mov
sar
lods
mov
push
call
dec
and
push
dec
add
pop
movb
aas
pop
mov
sbb
sahf
inc
ret
mov
pushf
int3
aam
gs
cmp
ss
fstl
xchg
and
js
hlt
inc
inc
push
xor
leave
pop
mov
and
test
jge
or
and
sub
dec
pop
add
xchg
sbb
rcl
sbb
mov
mov
test
jo
in
cld
push
xchg
aas
mov
mov
sub
mov
mov
loopne
dec
mov
js
sub
adc
cli
adcl
aad
arpl
mov
mov
add
dec
pop
stos
xor
push
pop
xchg
inc
imul
or
mov
mov
ss
out
pop
pushf
movsb
mov
insb
push
test
in
inc
pop
or
push
mov
push
jecxz
faddp
mov
mov
and
or
or
mov
ret
enter
insl
je
sbb
xor
fisubs
aad
push
lds
cmpsl
xchg
nop
sub
arpl
mov
sbb
pusha
cltd
fnstenv
divb
xor
and
mov
in
mov
int
mov
push
jmp
or
pop
push
int
out
sbb
adc
test
jmp
jl
adc
loop
clc
adc
or
inc
add
jo
push
mov
scas
sbbl
sbb
push
dec
push
movsl
and
mov
mov
outsl
push
adc
push
mov
pusha
xor
repz
push
mov
jae
mov
loop
lret
ljmp
push
out
pop
inc
lret
cmp
orb
dec
icebp
jne
out
and
lods
cmc
jno
lods
pop
jnp
out
xchg
fbld
mov
fprem1
mov
in
sub
jle
cmp
sbb
mov
in
ljmp
out
jbe
fcom
cmp
add
mov
call
shl
mov
add
xchg
data16
inc
inc
xchg
fwait
icebp
faddl
jg
fcmovne
in
pop
outsl
push
mov
jecxz
bound
ss
scas
orb
stos
sti
dec
push
xor
ljmp
cmp
imul
mov
fs
addr16
hlt
or
cmp
scas
jmp
add
mov
pusha
cmpl
loopne
dec
pop
lock
in
lea
sbb
sub
xchg
cmp
lret
cli
xchg
mov
in
pop
push
mov
loope
jae
dec
iret
outsb
jmp
ss
xor
lds
sti
pusha
mov
rclb
sbb
cmp
data16
scas
sub
push
lock
aad
clc
into
jle
ja
sarl
jnp
push
inc
and
popa
loope
lahf
adc
hlt
mov
jne
andb
ljmp
outsb
pop
mov
inc
and
paddsb
mov
inc
and
push
lret
pop
pop
leave
mov
hlt
add
cmp
pop
repz
push
pop
popa
fldt
les
movsl
dec
jp
out
orl
test
add
pop
frstor
sbb
insl
push
mov
shrl
lea
fs
sub
jnp
shl
ss
sahf
jmp
jnp
xor
mov
inc
cmp
pusha
and
fstpl
pop
fcoms
mov
out
add
daa
adc
or
or
adc
pushf
dec
popf
mov
push
ss
add
and
test
negl
sti
mov
adc
mov
dec
sarb
ret
addr16
inc
mov
add
sub
push
call
add
inc
and
in
pop
addb
mov
outsl
out
and
cmp
sub
jmp
or
adc
mov
dec
jecxz
sbb
ds
add
loope
dec
or
cli
sbb
int
imul
adc
lret
mov
es
and
xchg
cli
sbb
or
cmpsb
xchg
dec
sub
dec
outsb
lret
rcl
lods
arpl
or
and
sub
jge
arpl
daa
cli
jnp
test
into
ds
aaa
stos
add
out
sbb
or
cs
cmpsb
ljmp
sub
cmpsl
mov
pop
xchg
sbb
xor
push
roll
loop
mov
mov
pop
lret
fsubl
mov
and
sub
sub
xchg
jo
imul
cmc
inc
je
adc
mov
adcb
lods
push
bound
sub
arpl
lea
add
out
outsb
sub
xor
test
mov
xor
xor
es
das
mov
or
sub
mov
stos
cli
aas
in
jle
in
pop
sub
fdivp
js
and
aad
mov
xor
jp
test
mov
add
jb
je
xor
xchg
sub
xor
xchg
mov
aam
sub
es
cs
sub
and
sahf
or
js
stos
repnz
cmp
arpl
mov
mov
xor
sbb
fnstsw
push
cmp
or
dec
dec
sbb
mov
leave
lcall
lods
fs
cmp
mov
out
popa
inc
sar
jp
jmp
cmpsb
mov
ret
xor
mov
out
jle
lods
fsubs
xlat
call
in
mov
cmp
lods
popa
stc
push
mov
push
jecxz
cmc
cld
jl
out
cmp
aas
mov
mov
push
jo
pop
data16
xchg
outsb
and
push
cmp
or
inc
sbb
sub
insl
mov
ljmp
add
mov
cmp
jge
inc
sbb
jne
mov
lcall
push
imul
rolb
es
outsl
ja
dec
pushf
int3
lret
xchg
in
mov
lahf
fists
add
sub
inc
hlt
push
xor
adc
jbe
xchg
push
addr16
sub
fistl
mov
mov
pop
out
arpl
mov
pop
aas
push
adc
mov
into
push
inc
and
dec
dec
dec
push
jne
jns
int3
fwait
lret
xor
mov
cltd
inc
sbb
shlb
ds
xlat
add
jnp
fnstsw
or
sub
dec
stos
or
sbbb
repnz
dec
imul
jmp
das
into
pushw
and
push
mull
movsb
fcmovbe
mov
dec
and
add
mov
jne
mov
cmp
fldcw
leave
shrl
push
mov
daa
aad
and
mov
dec
mov
outsb
sbb
scas
or
jp
sbb
cmp
aam
dec
mov
int
into
lods
xchg
negl
pop
and
fidivl
adc
int
adc
insl
rclb
lods
lock
sbb
aas
push
leave
fcompl
imul
push
jne
aam
cmpsl
jns
out
rolb
mov
lahf
data16
pop
dec
mov
insb
fldcw
jbe
andl
jmp
add
dec
cld
push
inc
lods
loop
imul
jnp
sti
mov
cmc
loop
popf
mov
sti
jnp
shrd
pop
sbb
popf
dec
xchg
or
fcoms
mov
ds
cld
or
or
sbb
repz
lea
xchg
repz
js
stos
std
test
lret
cmp
push
cmpsb
pushf
xorl
cmc
cwtl
inc
push
cmp
outsl
movsb
inc
in
cmp
loopne
mov
push
push
jle
lock
jp
pop
mov
sbb
pop
clc
xor
push
push
dec
mov
push
icebp
pop
add
mov
mov
orb
nop
mov
inc
mov
fcom
pop
popa
mov
cmp
cmpsl
lahf
lret
out
stos
pop
xor
mov
dec
nop
in
jmp
leave
addr16
out
sbb
fists
pop
xchg
xchg
leave
rcll
pop
ds
inc
push
mov
pop
fldt
xchg
ja
jmp
push
jge
add
and
lcall
fnstenv
addb
mov
rol
or
push
xchg
pop
pusha
mov
add
jp
sub
loop
push
inc
mov
or
loopne
pop
loop
out
jg
mov
lcall
cld
lods
lahf
std
repnz
mov
jb
shlb
ds
lea
add
mov
cli
das
fisubl
jmp
jno
icebp
mov
test
icebp
cmp
int
cmpsb
nopl
stos
dec
repz
sbb
leave
out
mov
pop
xchg
or
in
lods
jo
loope
es
out
mov
jl
aas
enter
rcl
fs
xlat
lahf
sub
jmp
je
adc
dec
dec
pop
lret
and
xlat
sub
imul
mov
imul
jecxz
popa
adc
loope
loopne
popf
mov
popf
pop
fistps
or
nop
lret
out
and
sub
or
add
jb
std
adc
sbb
cmp
loop
cmp
pop
inc
testl
andb
mov
dec
orb
jle
scas
lret
sub
lcall
loope
jl
int
lock
test
mov
clc
mov
imul
mov
lahf
sbb
or
ret
les
adc
ret
push
iret
cmp
jecxz
das
in
sub
orb
fwait
xchg
dec
add
push
test
adc
fs
adc
and
lods
icebp
sbb
xchg
or
es
pop
je
pushf
outsl
scas
fcmove
lock
leave
insl
adc
data16
test
subb
cli
sbb
sub
mulb
stos
imul
in
mov
pushf
lahf
jno
lcall
sub
mov
pop
pusha
test
xor
fsubl
push
add
or
xchg
popf
dec
pop
mov
xchg
pop
dec
push
and
mov
dec
jne
rolb
into
lock
push
xchg
pop
and
loopne
lds
push
outsb
inc
and
mov
into
in
aaa
xlat
popf
mov
and
adc
mov
cmpsb
fistl
add
rcll
lock
push
das
fistl
repnz
repnz
addr16
shrb
adc
sbb
sub
lock
fmul
jecxz
imul
xchg
fs
push
arpl
pop
testb
roll
xchg
jl
or
lahf
movsl
movl
aas
test
fsub
or
dec
lcall
popf
sub
fdiv
outsl
pop
add
inc
icebp
mov
push
pop
out
aaa
jae
repnz
std
xor
xchg
ret
dec
cmp
adc
mov
test
mov
mov
pop
mov
aaa
pop
es
sbb
sub
mov
cli
call
lds
xchg
mov
xor
cmpsl
mov
jns
add
jo
insb
push
adc
cmp
xchg
add
xchg
sub
lds
inc
fdivr
jno
jne
lcall
dec
inc
push
fistpll
clc
push
dec
xor
repz
mov
call
mov
or
xchg
jo
xchg
das
pusha
lods
push
jle
fbstp
jmp
mov
sub
in
das
adc
sub
inc
mov
fidivs
push
jl
cmp
movsb
pop
mov
sbb
test
and
sbb
fldcw
xor
cmpsb
in
ja
out
outsl
movsb
rcrb
into
je
out
xlat
sbb
sbb
or
clc
pop
or
out
add
cmp
cltd
or
jmp
mov
leave
cmp
sub
testl
stc
imul
andb
es
movl
push
and
imul
dec
or
and
aam
pop
xor
pop
inc
fucomi
test
rcll
and
mov
sbb
arpl
xchg
cmpsb
sti
jge
jp
adcb
dec
add
fisubrs
cmpsl
sahf
arpl
lret
mov
push
mov
addb
and
dec
das
xchg
aad
lret
mov
add
xor
mov
sbb
pusha
or
clc
ljmp
and
dec
inc
and
jnp
add
je
outsb
test
clc
mov
test
movsl
xchg
lea
lods
push
xchg
stos
xchg
cmpsb
ljmp
push
mov
ljmp
scas
fucomi
jle
repz
pop
lock
mov
adc
jnp
add
and
fsubrl
sbb
and
pop
adc
loope
and
sub
sbbl
dec
aas
addl
add
std
ret
lods
and
mov
push
aad
call
dec
in
cmp
iret
sub
pop
add
jecxz
lret
enter
or
shlb
adc
pop
pop
sbb
cli
pushf
les
int3
mov
xchg
cmp
mov
cmp
jns
dec
mov
fcoml
enter
jae
in
mov
xchg
es
test
dec
or
mov
sub
jnp
jp
or
les
push
inc
cs
and
mov
pop
outsb
pop
inc
out
jmp
add
pop
test
dec
push
lods
mov
xchg
sbb
inc
adc
andl
lods
or
push
dec
cltd
xchg
jo
pop
xchg
sbb
sbb
mov
sub
dec
outsl
cmp
jns
repz
outsl
call
inc
std
mov
fsubp
rorb
pusha
mov
repz
dec
xchg
pop
ficoml
jl
mov
mov
inc
gs
stos
xor
and
adc
pop
xchg
rolb
test
push
push
jmp
arpl
adc
fiaddl
nop
lret
fcomip
js
cltd
idivl
push
sub
cmpsb
cmp
insb
divw
imul
call
sahf
shlb
pop
fwait
xchg
push
fildl
mov
sti
push
sbb
test
dec
sbb
lret
mov
nop
pushl
adc
lahf
pushf
sub
cld
cmpl
mov
dec
mov
movsb
dec
iret
fiaddl
inc
xchg
test
lret
into
and
fsubs
push
sub
stos
sub
insl
and
xor
jmp
dec
ljmp
and
rcrb
dec
sbb
sub
call
loop
and
cmc
ljmp
jmp
test
movsb
dec
xchg
sub
inc
push
fstpt
and
ret
std
mov
movsl
test
into
outsl
cmc
mov
hlt
inc
mov
int
push
cmp
lea
cmp
add
adc
sti
loopne
mov
je
enter
dec
pushf
jge
sub
jle
cld
fs
and
sbb
outsb
inc
rorl
roll
jnp
pop
xlat
cld
jb
sub
dec
cmp
fs
jg
icebp
cs
scas
leave
leave
sub
mov
popf
dec
leave
pop
xchg
popa
loop
aam
aas
cmove
and
sbb
sub
dec
enter
imul
xchg
mov
sub
mov
test
insb
out
imul
inc
cli
jae
daa
nop
mov
xchg
sub
xchg
add
fistps
sbb
xor
sub
fld
addr16
in
mov
in
push
mov
add
push
leave
dec
test
cmpsb
xor
mov
push
ss
js
je
rorl
cmp
push
imul
inc
ret
jno
or
cmc
cmc
jne
xchg
cmpsl
and
mov
loopne
sub
jle
inc
popf
add
mov
push
popf
insb
nop
dec
movsb
push
cmpsl
inc
inc
loop
sbb
mov
outsb
and
rol
fwait
loop
punpcklbw
pushl
js
cli
pop
jl
enter
inc
or
addr16
repnz
cli
rcrb
adc
nop
test
ljmp
mov
in
lock
sub
das
leave
dec
and
inc
mov
cld
out
lods
loop
addl
push
and
adc
pop
and
call
test
test
popf
jle
pusha
pusha
mov
stos
mov
mov
ret
mov
dec
pop
or
cli
xchg
je
lods
in
adc
mov
or
lret
arpl
iret
xlat
lahf
fcom
mov
scas
cmc
mov
call
mov
mov
mov
mov
mov
xlat
ja
mov
mov
enter
loop
out
lock
mov
and
sub
mov
xchg
mov
lcall
mov
stos
sub
xchg
mov
pusha
lods
mov
fisttpll
addl
jnp
pop
xchg
xchg
je
dec
xchg
hlt
test
jne
push
fdiv
stos
push
jmp
les
cmp
push
mov
stos
jo
mov
push
cs
and
cmp
leave
dec
aaa
jle
test
mov
jno
or
loopne
xor
cmc
push
dec
dec
xchg
xchg
popa
pushf
cmp
mov
pop
nop
pop
pop
jo
or
xor
jecxz
jmp
pop
push
or
push
cltd
pop
add
mov
xchg
hlt
cmp
adc
jnp
dec
sbb
scas
loopne
push
jne
jle
loopne
pop
andb
mov
xchg
lock
or
or
push
adc
aam
sub
jo
movsb
repnz
xchg
push
inc
pop
pop
mov
adc
add
push
and
sub
lods
xchg
jbe
push
jg
adc
sub
xor
cmp
rorl
push
ret
jecxz
enter
test
scas
mov
outsl
cmp
ret
imul
leavew
xlat
add
pop
mov
dec
stc
sbb
arpl
sbb
adc
jno
in
pop
pop
push
ds
imul
popa
or
sub
pop
push
jl
iret
dec
adc
negl
xor
xchg
int3
dec
mov
in
out
xchg
nop
insb
in
movsl
das
pushf
xor
fnop
pop
ficoms
or
sbb
inc
cmp
int
rcll
push
xor
mov
mov
sub
into
sub
mov
sub
dec
das
sub
dec
sbb
cmp
rcrb
mull
out
fisubs
nop
jo,pt
imul
fmull
test
bound
stos
sbbl
sub
mov
dec
cmp
test
rolb
ds
mov
adc
push
pop
jl
shl
repz
arpl
notl
xchg
insl
inc
mov
loopne
add
lods
ja
mov
cmp
mov
sub
shll
sub
fistpll
pop
rcrb
push
xchg
es
xchg
negl
mov
js
in
or
sbb
mov
int
enter
aas
and
scas
fidivrs
sbb
lahf
adc
mov
subb
xor
outsb
aas
lret
jmp
das
call
sbb
data16
pop
cli
xchg
cmp
fld
add
pop
loop
jnp,pn
push
popa
idivb
jno
iret
clc
mov
xchg
cmp
fs
xlat
icebp
out
or
sub
inc
dec
adc
pop
add
sbb
filds
adc
pop
pop
or
xchg
pop
fimuls
push
jne
sub
std
pop
lcall
in
dec
out
pop
sub
xor
imul
lret
push
mov
xor
or
mov
xchg
xchg
inc
jmp
xor
psubd
mov
dec
jl
call
js
push
in
mov
mov
into
lods
or
inc
mov
push
subb
bound
jp
xor
jecxz
icebp
cmpsl
sub
decb
xchg
inc
dec
insb
pop
or
sbb
add
lock
cmc
in
das
ja
std
insl
jg
push
cmp
lcall
testb
mov
loop
jo
lcall
push
cs
xchg
lahf
and
mov
cmp
mov
or
imul
cmp
jle
arpl
or
icebp
mov
aaa
sahf
fstpt
int
dec
sarl
adc
icebp
fsubrs
fidivs
xor
xabort
mov
jg
xchg
into
outsb
push
fistps
enter
repz
mov
xchg
test
lods
test
scas
insl
movsl
xchg
pop
mov
out
sahf
je
out
fidivs
jne
inc
je
shl
sbb
jae
sti
cmp
cltd
cli
dec
xchg
insl
mov
ja
xor
xchg
lcall
stos
mov
outsb
mov
add
popa
dec
mov
stc
movsl
dec
add
push
mov
ret
jae
mov
push
or
adc
int
sub
ss
push
push
scas
je
movsb
push
js
loope
test
dec
sti
bound
xchg
hlt
les
xchg
inc
sbb
mov
xchg
xor
mov
sti
mov
stos
mov
ja
or
ljmp
shl
mov
sub
mov
repnz
cmp
adc
xor
mov
imul
cld
loopne
jmp
mov
popf
cmp
cmp
jae
and
push
sahf
call
inc
loope
enter
loopne
daa
jns
stos
lret
sub
icebp
jb
mov
or
pop
popa
negl
sub
hlt
push
ror
mov
sub
cwtl
sub
xlat
inc
ja
shll
mov
adc
add
pop
test
add
mul
pop
jg
xchg
sbb
test
jnp
cld
and
cmp
shlb
jne
fucom
adc
or
fldl
dec
pop
xor
andl
mov
nop
mov
mov
mov
adc
sub
mov
cli
inc
mov
add
push
dec
cmpsb
into
rcl
orl
add
mov
popf
in
int3
jo
je
lea
andl
adc
jle
outsl
pusha
cltd
enter
mov
enter
sbb
je
push
and
mov
jp
push
popa
mov
jp
imul
adc
cmp
jge
jbe
decb
cmpsb
jne
fwait
js
fmull
jp
adc
push
xchg
cltd
push
lret
test
mov
test
out
jp
addr16
xor
xchg
loope
xor
adc
lea
mov
imul
and
hlt
sub
add
ljmp
adc
jae
shll
mov
imul
test
push
adc
test
inc
leave
xchg
ss
sbb
mov
call
test
idiv
cmp
push
push
cmpsb
pop
fcoml
mov
push
xchg
mov
out
push
xor
sbb
aam
pop
or
lret
sbb
call
or
mov
or
xchg
clc
inc
lds
pop
mov
mov
jns
jecxz
jecxz
in
sub
mov
adc
or
aam
imulb
fwait
je
push
aad
std
outsl
xchg
xchg
or
out
js
dec
cmp
arpl
pop
adc
jecxz
hlt
int
dec
push
cltd
jno
cmp
add
popa
jp
pop
adc
xchg
lcall
mov
sbb
jne
cli
loope
fisubl
inc
push
xor
mov
fists
push
lea
lahf
mov
sub
inc
rol
cmp
pop
pop
cmp
push
sbb
xor
mov
test
dec
incb
pop
orb
roll
clc
mul
test
fdivrl
mov
inc
pusha
repnz
cmp
fidivl
mov
push
push
mov
lahf
outsb
xor
or
xor
rcrb
mov
mov
xchg
xlat
cs
lods
pop
nop
sub
sti
xchg
xor
mov
fs
cmc
jnp
and
lcall
dec
xchg
xor
sbb
shl
rcll
xor
into
cvtdq2ps
leave
and
fists
mov
mov
sbb
mov
stos
test
sbb
ljmp
outsl
mov
xlat
decl
xlat
cltd
sub
or
dec
outsb
push
sarl
cmp
jb
in
popf
cmp
cld
out
cmp
inc
xor
cmp
lds
inc
repz
in
aam
or
aad
jno
stos
dec
pop
in
mov
adc
sub
cmp
sbb
mov
mov
in
in
jo
sub
or
push
cmp
leave
cmp
and
lods
outsl
enter
add
lock
adcb
enter
pop
mov
mov
int
daa
jg
imul
inc
jmp
mov
int
bound
cmp
arpl
out
xor
inc
ja
decb
jg,pn
xor
cmp
clc
jno
pop
or
mov
std
add
jns
cmpsl
and
ljmp
rcrb
xlat
lock
add
pop
fdivrl
loope
push
fidivl
sbb
ret
add
aam
or
inc
je
sub
imul
add
inc
mov
dec
lea
jg
shlb
add
or
in
movsb
fisubs
div
pop
sub
not
les
les
lret
into
push
rcrb
test
popa
xchg
ret
push
inc
aaa
xchg
adc
cmovno
gs
mov
pop
scas
pop
outsb
bound
push
inc
fdivs
rolb
lock
dec
rol
in
std
mov
mov
loop
mov
adc
loopne
leave
stos
xchg
ja
push
inc
inc
push
and
inc
scas
es
out
mov
push
pop
test
gs
hlt
call
jle
jl
sub
lahf
mov
jecxz
adc
popa
pop
addr16
pop
mov
add
pusha
mov
movsb
xor
mov
stc
jmp
sbbb
lods
in
inc
dec
xor
imul
mov
js
cmp
mov
cli
repz
in
je
push
out
enter
push
sub
test
and
jle
adc
hlt
pushf
cmp
clc
dec
out
and
xor
inc
push
sbb
mov
xchg
sub
mov
cmp
cwtl
jmp
xchg
stc
xchg
sbb
stos
cmp
inc
dec
lahf
xchg
scas
addr16
aaa
xchg
and
movsl
popa
inc
aam
lret
push
arpl
cld
sbb
push
mov
jnp
sbb
in
inc
jnp
ja
ret
inc
and
inc
enter
xor
pop
pop
loopne
icebp
push
test
aad
push
mov
cmp
cmp
scas
xor
and
push
sbb
pop
xchg
outsl
lock
adc
jbe
movsb
ss
cld
btsl
aaa
data16
imul
lahf
sub
bnd
adc
mov
xor
hlt
dec
mov
daa
outsb
ja
lret
push
push
lret
cmpsl
and
scas
dec
xlat
and
fs
push
sbb
in
xchg
jg
bound
mov
pop
cmp
data16
mov
mov
dec
repnz
iret
push
push
adc
cli
sub
add
hlt
add
adc
sbb
dec
arpl
call
rcrb
sbb
cltd
call
adc
push
push
es
adc
adc
push
inc
adc
out
js
das
mov
sbb
test
fstps
pop
jnp
jno
xchg
jmp
adc
sbb
stc
xchg
jne
add
xchg
dec
jg
xchg
jne
xchg
int3
mov
mov
sbb
inc
mov
subb
mov
ja
push
xor
push
jne
loope
shll
sahf
mov
push
pop
lcall
or
cmp
xchg
pop
rolb
mov
daa
std
aam
sub
ja
loopne
xor
imul
lds
rcrb
mov
fstps
adc
dec
pop
insl
dec
hlt
pushf
dec
fiadds
mov
or
jge
sti
les
repnz
inc
sbb
inc
sub
aas
mov
adc
lcall
dec
mov
sti
and
pop
mov
jle
cmc
or
push
test
outsb
mov
arpl
lods
lods
inc
inc
iret
cmp
mov
das
scas
adc
ds
inc
dec
aaa
mov
jae
push
icebp
adc
mov
test
js
data16
mov
aas
ss
xchg
ret
dec
nop
mov
cli
jl
lahf
add
cmp
add
dec
popf
lods
jne
pop
mov
loopne
inc
mov
mov
jnp
cltd
sbb
cltd
mov
xchg
sub
push
push
fcomip
in
popf
aas
fadds
mov
aam
cwtl
cmp
xchg
xchg
and
cmp
sti
movsl
inc
out
pop
or
sub
cmp
lcall
or
into
addr16
mov
xchg
mov
jno
add
sbb
pop
pop
stos
shrl
mov
adcb
sbb
je
inc
call
jae
adc
das
pop
mov
popa
ljmp
mov
imul
adc
jmp
xchg
fldl
pop
jbe
sub
adc
mov
fisubs
sub
push
jnp
add
xchg
mov
cmpsb
pop
add
dec
fwait
mov
lods
movsl
aas
sti
pop
mov
mov
fnsetpm(287
testb
aad
outsb
xlat
pop
mov
scas
cwtl
out
js
mov
xchg
dec
or
inc
push
jmp
or
xchg
ljmp
lea
popf
push
jbe
push
gs
ja
xchg
mov
sbb
andl
pop
imul
stos
pop
rcll
add
xor
enter
lret
mov
sti
test
jge
mov
inc
jbe
xchg
rorb
lret
mov
jge
or
fstps
outsl
sbb
inc
jo
mov
or
dec
test
das
fcoml
mov
cli
test
das
fdivs
jl
dec
popa
cld
cmpsb
mov
js
jbe
call
lret
sub
push
pop
inc
push
fmulp
adc
push
gs
ret
aad
dec
push
and
in
jnp
fnsave
ret
or
mov
mov
mov
adc
mov
xchg
cmpsl
flds
out
nop
int
iret
mov
mov
cmpsb
pop
mov
movups
inc
inc
sbb
ret
ret
jl
jge
shrb
mov
xor
scas
repz
xchg
mov
sbb
add
lcall
and
xor
hlt
rcl
leave
add
xchg
adc
or
mov
jg
scas
pop
adc
jle
repz
dec
cmc
cltd
rorl
movsb
mov
cmp
push
mov
mov
cmc
test
push
mov
aam
sahf
lods
jle
xor
or
repz
xor
leave
repnz
or
xlat
lret
js
insb
ds
add
cmpsl
sub
dec
pushf
cmp
push
mov
lcall
xor
mov
push
faddl
jno
adc
sub
or
popa
push
sarb
inc
jle
cmp
out
aam
adc
xchg
xchg
pushf
outsl
movsb
das
out
or
imul
stos
pop
mov
shr
jge
outsb
sub
lods
dec
subl
hlt
inc
test
mov
in
sub
add
nop
hlt
inc
aas
mov
xor
rolb
and
lock
xchg
pop
lock
and
jb
add
inc
jmp
andb
das
lret
mov
push
fistpll
aas
shr
mov
sahf
pop
jmp
adc
pop
dec
call
and
mov
arpl
loopne
sub
jno
xor
dec
ret
lcall
jg
ret
xor
push
sarl
lods
jo
scas
pop
jle
jo
mov
jl
add
lock
jnp
inc
subb
mov
sarl
lret
pop
rcrl
push
dec
dec
iret
sbb
ret
popf
push
adcb
fnstenv
adc
mov
insl
dec
out
and
adc
cli
mov
gs
js
jae
and
lea
stc
sbb
mov
jo
into
test
mov
pop
insb
dec
push
jmp
mov
xchg
xor
jg
movsb
mov
mov
xor
add
jmp
jne
xchg
call
mov
jb
xor
das
loopne
inc
daa
fildl
pop
mov
push
adcl
jno
add
inc
ret
aaa
rorl
mov
cmp
or
mov
cmpsl
xchg
andb
mov
lret
sahf
adc
nop
loop
jmp
fs
nop
jl
test
js
inc
bound
enter
call
icebp
popa
and
fsubs
lret
clc
push
pop
pop
icebp
dec
mov
nop
loope
push
sbb
push
loope
insl
testl
in
xchg
mov
gs
mov
mov
stos
orl
sbb
jns
adc
or
or
sub
dec
lahf
dec
mov
mov
dec
es
jbe
rorb
push
addr16
ficomps
jae
or
pop
mov
dec
sbb
outsb
inc
dec
mov
lret
cmp
mov
and
dec
scas
out
lahf
icebp
add
sbb
cmp
in
shll
xor
repnz
popa
cmp
cmpl
and
pop
and
push
jp
pop
pop
nop
sbb
jne
lcall
push
mov
add
lock
cmpsl
scas
mov
test
rclb
xchg
dec
nop
and
in
hlt
push
push
sbb
sbb
inc
inc
cs
pop
jl
dec
ffree
inc
test
les
cltd
jle
and
cmp
loopne
es
stc
dec
mov
add
xlat
sub
jl
inc
mov
ss
pop
cwtl
xchg
sub
fnstcw
mov
outsl
pushf
inc
enter
std
out
jl
loopne
jo
pop
rcr
std
lcall
fidivs
sbb
adc
iret
mov
xchg
jmp
fistpl
jo
loopne
mov
xor
shlb
mov
mov
jg
push
mov
push
jns
jge
mov
rorb
sub
repz
adcl
cwtl
leave
mov
insb
cmp
and
je
mov
dec
fwait
sbbb
cmp
js
or
fst
sub
push
xchg
and
push
pop
or
out
add
inc
mov
pop
xorl
ret
loope
pop
bound
push
push
mov
sbb
hlt
ficoml
adc
pop
fucomi
jb
mov
mov
jno
sub
inc
adc
dec
inc
shlb
out
dec
or
lcall
push
jmp
mov
shll
loope
aad
add
lret
mov
pop
shll
mov
lock
mov
jne
mov
sub
fsubrp
inc
pop
xadd
push
add
loopne
cmpsb
repnz
fsubs
fcomip
test
dec
inc
push
add
add
mov
mov
leave
xchg
sub
inc
dec
pop
cmp
hlt
or
daa
xor
cmp
ret
jmp
xchg
in
or
dec
aaa
lret
aam
xchg
dec
js
adc
out
pop
outsb
test
pop
fs
mov
push
sub
jbe
xor
aam
jp
popl
cltd
xlat
xorl
push
xchg
dec
lods
adc
jns
loop,pt
push
scas
popa
stos
cmpsl
mov
or
mov
cmovbe
cmp
or
jb
les
dec
inc
mov
and
add
sbbb
in
cmp
inc
sbb
fistpl
xor
and
loope
popa
clc
adc
add
in
lahf
aad
sub
cwtl
filds
xor
mov
pop
jnp
ret
incb
out
inc
dec
mov
add
dec
or
lock
xchg
mov
sub
mov
les
rcr
mov
aas
jecxz
out
adc
push
pusha
fnstsw
mov
ds
rsqrtps
inc
mov
ljmp
leave
fisubrl
inc
adc
and
cld
jp,pn
nop
xchg
lods
int3
xor
xor
lcall
adc
int3
pusha
rcr
fisubs
mov
es
ljmp
push
stc
shlb
rolb
shlb
pop
jns
lahf
jmp
adc
mov
push
fstpt
sti
mov
dec
ss
test
out
fstps
xchg
js
jno
sbbb
data16
push
insb
or
xchg
mov
fsub
adc
fldcw
outsb
out
pop
jmp
test
xchg
sahf
loope
or
incl
adc
int3
loop
push
cmpl
std
adc
mov
add
inc
mov
push
mov
repnz
js
adc
jg
pop
pop
jb
fcoms
xor
sarb
xchg
inc
or
call
cmp
inc
or
fisubrl
sub
or
lret
push
shl
stos
lods
rcrb
iret
daa
rclb
addb
add
ret
mov
pop
orl
or
lock
dec
push
sub
mov
sar
je
xor
inc
push
mov
lret
scas
pop
fs
xchg
pop
cwtl
repz
fisttpl
fdivrl
push
cmp
ror
roll
icebp
shl
cmp
mov
mov
imul
xor
arpl
inc
jge
and
cmp
add
adc
sub
mov
int3
xchg
xor
mov
adc
lock
fnstenv
or
fsincos
mov
and
inc
fcmovnbe
jns,pt
xlat
rcl
pop
adc
adc
outsb
push
fnstenv
and
orb
push
mov
pop
adc
ficoms
sbb
cmc
lcall
movsl
sysexit
pop
inc
mov
fbld
les
xor
mov
mov
dec
fcomip
iret
push
add
xor
rclb
outsb
sub
jecxz
xlat
pop
aas
fisttpll
sub
xor
insb
cwtl
push
negl
and
addl
add
sar
mov
mov
aam
loop
push
add
aad
and
sub
xchg
or
and
and
sbb
inc
cmp
outsb
scas
imulb
jecxz
orl
sbb
arpl
ret
mov
lods
aaa
sbbb
stc
push
aad
push
pop
mov
xor
int3
fs
add
cmpsb
das
outsb
shrb
push
cmp
inc
mov
punpcklbw
pop
sarb
test
sub
leave
xchg
ror
popf
lds
lahf
pop
mov
mov
test
rep
mov
shrb
rcrb
mov
mov
imul
mov
or
jo
dec
das
push
test
mov
and
cltd
mov
or
jbe
out
dec
jne
fidivl
mov
sub
cmp
add
std
pusha
imul
add
fwait
hlt
std
fidivrl
pop
push
int
lds
cmp
pusha
cs
mov
xchg
xchg
inc
mov
pop
scas
inc
repz
push
aam
sbb
mov
and
push
pop
push
and
push
insl
add
test
xor
mov
pop
or
xchg
pop
rcrl
pop
bound
pop
fadds
bound
jns
xchg
push
mov
pushf
popl
cmp
out
and
adc
int
jg
push
xor
add
mov
mov
or
push
xchg
xlat
mov
add
jge
das
sbb
dec
stos
push
push
rcr
jecxz
xor
jbe
xchg
jmp
inc
in
mov
or
jp
jmp
test
cld
repnz
mov
jno
outsb
mov
fadd
sbbb
add
insl
adc
outsl
clc
mov
mov
cmpsl
nop
cmp
jno
pushf
arpl
stos
push
clc
push
xchg
mulps
sahf
sub
fiaddl
rcll
mov
or
add
stos
js,pn
mov
adc
int
xchg
mov
rclb
or
int3
mov
mov
inc
stos
cmp
rclb
xor
adc
pop
or
xchg
xlat
mov
mov
mov
pop
dec
out
hlt
roll
dec
pop
jecxz
loopne
jbe
mov
std
in
or
sarl
mov
stos
fstps
jge
pushf
mov
int3
inc
lea
pushf
or
aad
mov
ret
insl
jmp
sub
adc
test
pop
xor
jmp
xchg
xchg
push
dec
push
dec
jbe
sbb
pop
sbb
hlt
adc
adc
popa
pop
mov
mov
cmp
or
xchg
imul
jae
mov
or
jg
leave
mov
xchg
sbb
mov
jle
xchg
sbb
mov
add
mov
iret
int3
pop
sub
sbb
lock
icebp
push
jge
and
jne
ret
dec
adc
stc
inc
mov
cltd
rorb
lods
jmp
sbb
or
bound
inc
stc
sbb
pop
cltd
shr
mov
outsl
sub
sub
bound
xchg
add
mov
mov
jno
cmpsb
pop
aam
movsl
xchg
pushf
adc
in
fmul
dec
mov
test
mov
call
jl
jmp
push
test
mov
out
stc
dec
jl
jnp
or
mov
sub
arpl
mov
mov
add
cmp
mov
hlt
daa
adc
cmp
mov
inc
adcl
loopne
bound
sbb
gs
push
xlat
decl
pop
fisubrl
out
inc
jecxz
adc
mov
xor
mov
fwait
adc
test
mov
jmp
inc
lods
or
dec
mov
test
inc
mov
sahf
nop
jno
mov
add
test
push
jecxz
movsl
mov
icebp
fsts
js
scas
jmp
int3
inc
mov
and
decl
mov
fdivl
addb
cmp
notb
es
idivl
cli
inc
mov
fsts
and
data16
mov
leave
into
fldt
jp
test
popf
fnstcw
xchg
out
addr16
and
outsb
lock
mov
insl
cmp
push
push
fsts
push
or
mov
in
mov
adc
ret
aam
mov
add
push
in
xchg
loop
cmovns
xchg
das
test
jo
pop
out
sub
incb
or
fsubs
aas
mov
bound
stos
sub
pop
add
sbb
mov
xor
add
sbb
lock
test
adc
xchg
mov
sbb
adc
shll
fbstp
xchg
call
push
dec
sbb
dec
imul
pop
dec
push
aas
add
pop
in
test
lock
call
push
inc
into
and
daa
jno
test
or
pop
mov
imul
repz
push
inc
push
je
push
ljmp
jge
jno
mov
adc
or
jge
push
out
cmp
pusha
jecxz
dec
mov
jnp
pop
inc
into
sbb
fsubrl
insb
ficompl
cs
rcrl
dec
cmpsl
mov
mov
cmp
cmpsb
cmc
cmp
cmp
sub
mov
and
pop
xlat
sub
test
xor
cli
jnp
sti
pushl
pop
lock
add
pop
call
pushf
sub
cltd
mov
hlt
and
icebp
movsb
je
cmp
pop
enter
jmp
xor
and
rcrb
test
lea
and
adc
xchg
jo
repnz
shrb
idiv
push
lcall
or
pushl
call
data16
push
push
lods
movzwl
insb
push
in
mov
insb
es
cmp
iret
std
dec
and
dec
out
decl
sub
or
scas
aas
cltd
mov
faddl
std
xchg
outsl
out
lds
push
ds
cmpsl
jp
pop
shlb
cmp
push
or
test
xchg
mov
popa
jae
iret
pop
mov
xor
mov
push
xchg
adc
dec
push
fs
jp
adc
test
stc
adc
int3
adc
adc
jno
gs
mov
cmpb
ret
dec
subb
subl
mov
subb
xor
mov
jl
push
jae
pop
mov
jp
in
mov
lret
xchg
or
inc
sbb
fmull
ja
jl
xlat
inc
movntps
loopne
dec
mov
out
mov
movsl
in
cmpsb
sbb
dec
jl,pt
hlt
jge
sbb
mov
ss
lea
mov
and
mov
lret
cld
ds
jbe
pop
and
dec
inc
jns
xor
dec
xor
or
push
inc
aam
test
pop
dec
add
cli
repnz
lds
mov
in
mov
xchg
jle
xchg
lds
in
jbe
push
push
xor
jo
push
ret
std
xlat
cmpsb
cmpsb
call
push
add
or
stc
cmpl
scas
mov
dec
or
test
negl
add
jp
movsb
cmp
call
movsb
addr16
in
mov
adc
out
mov
mov
ja
xor
sarb
loope
jecxz
push
stos
lahf
inc
outsb
nop
dec
xlat
je
cs
std
or
addb
sti
repz
popf
jb
subl
insb
pop
cld
mov
push
inc
outsb
cmp
subl
adc
dec
sti
sbb
and
sbb
xorb
xor
popa
xor
push
shlb
mov
pushf
sub
sti
jne
ja
xchg
mov
pop
and
daa
mov
fidivl
lret
testb
in
pusha
mov
xchg
cmp
mov
dec
inc
or
inc
or
inc
xor
dec
mov
leave
cmp
outsl
cld
jl
inc
mov
loop
sbb
jmp
pushl
movsb
inc
adc
cmpxchg
xor
jl
enter
mov
shll
jp
add
jp
inc
pop
pop
dec
sbb
in
mov
and
and
shl
shrb
mov
fiaddl
push
sarb
pop
stos
dec
dec
sbb
xchg
test
pop
mov
test
ret
rorb
popf
adc
fnstenv
and
shrl
out
xchg
lret
push
cmpsb
int3
and
bnd
sbb
insl
pop
inc
jnp
test
das
xchg
lea
andb
inc
push
imul
lods
mov
icebp
fdivrl
push
iret
mov
loope
xchg
out
orb
push
jb
lret
push
jecxz
lahf
and
or
int3
out
pop
into
mov
out
aad
or
movsb
int
imul
sub
rclb
xor
stos
rcl
push
clc
aad
mov
outsl
xor
adc
sub
cmp
xor
pop
or
loop
xchg
mov
pop
in
cs
pop
aam
adc
mov
std
inc
push
in
mov
call
push
mov
add
fsubrs
imull
xor
fidivs
push
js
shll
pop
cld
push
sbb
push
push
xor
xchg
mov
cmovo
push
mov
inc
stos
aas
pop
jmp
or
pop
mov
lds
fdivrl
cli
xlat
pusha
or
loope
pop
mov
dec
fs
sub
decb
push
jp
cmp
xchg
repnz
pushf
xor
pop
or
mov
xor
lds
test
iret
shl
push
mov
popa
mov
cli
sarl
adc
xor
addr16
mov
or
jmp
sahf
add
push
add
bound
shl
addr16
ljmp
xchg
fcmovnb
popa
cmp
ret
or
inc
pushf
lods
mov
nop
adc
leave
mov
add
jno
test
pop
dec
add
add
cmp
or
movsl
jg
push
push
inc
mov
cld
lret
incl
xchg
mov
lret
cli
out
cmpsl
adc
outsl
dec
pop
scas
cwtl
jp
jmp
adc
xor
inc
mov
mov
inc
add
sub
add
mov
pop
push
popf
test
popa
jmp
or
cmp
test
sub
sub
xchg
cmp
xor
mov
movsb
repnz
stc
sti
subb
mov
push
mov
mov
and
aas
sbb
add
push
cmp
scas
mov
pop
or
adc
xor
sub
mov
xchg
out
ljmp
dec
movsb
mov
mov
scas
lock
dec
xchg
mov
pop
out
inc
js
outsb
jnp
and
push
pop
rclb
faddl
pop
sub
ror
bound
popf
sbb
ja
int
mov
push
fidivl
xor
sub
and
inc
or
or
out
sub
jle
xlat
xchg
or
in
aam
pop
stc
sub
in
sbb
cmpsl
mov
push
sarl
dec
sub
jp
and
mov
add
popa
cs
jmp
mov
xchg
dec
pusha
xchg
out
and
std
and
in
and
fcoms
jmp
push
dec
inc
xchg
lods
lcall
jmp
daa
out
sbb
outsl
sbb
and
ss
or
xor
jno
aad
push
mov
add
pop
hlt
lods
adc
adc
xchg
dec
sbb
popa
mull
insb
adc
ljmp
cmp
and
cmpb
mov
mov
adc
jg
xor
inc
mov
hlt
ret
enter
ficoml
jbe
js
pop
loopne
jmp
mov
sub
btc
dec
or
outsb
dec
aas
inc
adc
fsubrl
adcb
test
xchg
pop
test
mov
movsb
out
mov
in
dec
mov
cmpsl
push
sbb
jns
cmc
dec
jae
xchg
aam
sbb
push
jne
test
popf
pop
jg
mov
imull
idivl
mov
push
pushf
pushf
bound
adc
fistpll
jg
cmp
adc
xchg
hlt
adc
add
call
jnp
add
cmp
push
xorb
pushl
push
dec
rorl
fiaddl
cmc
cmpsb
movsb
popa
cmpsb
popf
lods
mov
bound
pop
pop
jnp
sbb
insl
out
jb
les
push
aas
fwait
xchg
rclb
and
xchg
mov
cvtps2pi
movsb
movsl
push
jl
jae
cmpsb
mov
or
sbb
pop
inc
inc
sbb
sti
dec
lods
aad
test
xor
lret
pop
sub
adc
pop
repnz
roll
repz
outsl
mov
mov
sahf
adc
dec
adc
ds
ret
jae
mov
adc
and
in
es
and
xchg
stos
sbb
test
pop
dec
jl
push
mov
sub
stc
scas
mov
push
adc
out
or
mov
mov
cmp
ja
xor
jo
cli
jge
pop
mov
lds
jp
dec
or
test
les
mov
lea
pop
cs
stos
mov
push
stos
pop
xor
cmpl
sbb
fistpll
push
jbe
daa
xchg
rcrb
add
movsb
mov
mov
loop
les
fdivrs
imul
lods
das
sub
cmp
jae
push
cltd
loopne
dec
xor
jns
and
sti
push
and
fwait
jmp
dec
mov
daa
sbb
nop
mov
stc
leave
mov
mov
ds
cmc
mov
fcmovbe
push
lret
out
adc
out
mov
cmp
pop
pop
mov
inc
push
inc
roll
cmp
sbb
sub
stc
pop
mov
adc
pop
lods
cmp
mov
aad
push
dec
imul
mov
aas
cmpsb
bound
out
push
cmp
cmp
mov
sub
lock
dec
jb
je
cmpsb
sbb
aaa
jnp,pt
sbb
jbe
xor
mov
ds
sbb
out
cmp
aaa
jo
pusha
cmpsb
out
in
repnz
cwtl
cmpsb
out
lock
cmp
dec
xor
mov
and
test
cs
dec
push
or
fs
stos
jmp
test
pop
mov
sbb
repz
test
fdivs
daa
xor
cmc
xchg
lock
les
loope
clc
mov
cmp
cmpsl
mov
dec
pop
divb
fdivrs
fisttpl
mov
xchg
mov
cmp
loope
xchg
inc
jecxz
iret
rclb
add
adc
inc
insl
aam
jae
mov
inc
sub
inc
dec
mov
and
dec
je
inc
test
imul
rol
test
sarl
je
std
fsubs
bound
xor
fstpt
cmc
mov
sub
jl
sbb
cmp
xsaves
das
xor
mov
xchg
xchg
push
add
mov
fsubrp
mov
imul
xor
in
xor
sbb
or
and
and
inc
xor
aaa
add
lods
jo
mov
in
stc
add
ja
sub
fwait
lahf
dec
jo
cmp
aas
jmp
data16
cwtl
add
subb
and
repnz
push
cs
loope
xor
orl
mov
lret
cltd
stos
clc
fdivs
aaa
orl
sub
outsb
lahf
sub
cmc
lret
sub
xchg
scas
iret
imul
das
iret
sti
sarl
ret
icebp
adc
cmc
dec
fstpl
sub
fadds
xor
out
push
decb
popf
xchg
aaa
xor
pop
jp
xchg
or
xchg
imul
loope
mov
cli
sub
or
add
jecxz
dec
lods
cli
xchg
jne
add
cmp
mov
mov
jecxz
cmp
and
hlt
std
jns
fidivl
and
and
inc
data16
jne
mov
mov
push
dec
adc
fstpl
cmp
jge
cmp
jb
repz
xor
data16
lods
std
arpl
pop
sbb
fsincos
fs
loope
jne
leave
pop
das
lahf
mov
mov
sbb
and
pop
sahf
and
ret
xchg
cmc
push
cmpsb
test
inc
and
sti
call
es
fiaddl
cmc
scas
sbb
out
cwtl
xchg
mov
fcoml
mov
xor
ja
push
push
dec
adc
cmp
addr16
inc
aas
add
and
mov
jecxz
dec
or
jle
in
insl
cmpsb
add
cmpl
jae
js
data16
mov
cs
add
sbbb
jbe
popf
jp
arpl
xchg
xchg
pop
fcomi
stc
or
dec
inc
xlat
popf
jne
jmp
cwtl
cld
enter
testl
pop
pusha
test
cli
outsl
mov
add
repz
push
movsl
xor
test
fwait
hlt
pop
or
paddusw
ret
adc
push
ljmp
iret
in
aad
insb
cltd
sub
fisttpll
sahf
inc
pop
mov
dec
movsl
sub
out
cmp
clc
scas
sarb
int3
mov
cmp
sub
ret
push
test
xor
addl
dec
in
mov
fwait
push
gs
or
xlat
shlb
ds
leave
jbe
lds
iret
mov
imul
stos
dec
mov
adc
fucom
inc
inc
jmp
daa
aas
pop
int
pop
xlat
into
jmp
inc
or
fdivs
xor
sbb
mov
sbb
pop
adc
nop
decl
push
ss
pcmpeqw
jbe
ret
popf
into
jle
aas
inc
insl
dec
push
lds
xchg
sbb
jge
bound
pusha
sbb
fcomip
dec
das
adc
jns
mov
