jbe
je
xchg
lock
fsubrs
fildll
inc
repnz
ss
cmpsl
mov
xor
adc
xor
addr16
mov
lods
push
xchg
xchg
rorl
js
out
fisubrs
inc
movsl
xor
cmp
imul
adc
cmp
mov
add
js
and
pop
push
nop
jns
hlt
cmp
adcb
in
push
xor
stos
and
idiv
stos
scas
ss
cmpsb
add
fisttpl
ja
in
icebp
cmc
or
hlt
test
stos
or
mov
adc
fisubrl
pop
lret
getsec
movsl
and
pop
cmp
cmc
or
test
loopne
add
out
pop
movsl
mov
mov
pop
or
insw
aaa
xchg
sbb
scas
test
decb
mov
jbe
sub
lret
xchg
mov
es
shl
fnstcw
leave
jmp
fcmovnb
mov
movsb
clc
mov
mov
cmp
cmp
inc
add
jecxz
pop
jle
iret
pop
stc
pop
xchg
adc
jmp
pop
adc
ret
sub
insl
lods
xor
sti
jns
repz
ret
fwait
sbb
and
adc
mov
add
xchg
jg
shl
lret
xchg
mov
or
pop
or
sub
push
add
or
in
and
lods
mov
adc
xor
fnstcw
lcall
int3
pushf
pop
popl
loope
jg
adc
add
xchg
push
repnz
aad
and
jle
inc
fwait
and
xchg
mov
adc
mov
cmp
shll
jb
std
mov
and
inc
hlt
fsubs
insl
loopne
jg
mov
repnz
xchg
ret
addr16
dec
aad
xchg
lock
or
cmp
in
mov
sbb
push
pop
stc
pop
mov
fdivl
nop
out
mov
in
jae
pop
pusha
push
mov
xchg
jecxz
fiadds
loope
jo
mov
subl
in
cld
pop
js
outsl
inc
and
fiaddl
sbb
mov
pop
inc
sub
ret
test
rolb
mov
leave
fwait
scas
mov
pop
mov
pop
push
xor
cltd
rcll
sbb
dec
lret
and
xchg
xchg
push
pop
test
add
sub
fmul
in
dec
cwtl
mov
dec
cltd
and
lahf
mov
es
popa
add
rolb
dec
or
imul
mov
ss
in
movsb
movsb
lds
xchg
cmp
sahf
jge
jg
adcb
mov
mov
sbb
sbb
fisubl
cmpsl
mov
mov
push
mov
add
cmp
pop
js
arpl
xchg
add
inc
ja
test
mov
xchg
aas
xchg
fs
scas
push
push
test
inc
icebp
dec
sub
mov
add
int3
xchg
addr16
pushf
and
push
call
lds
mov
cld
sub
cmc
jg
jmp
and
ficoms
sub
and
leave
jp
xor
push
adc
push
cmp
jge
rorb
mov
sahf
loop
aad
push
mov
pop
push
mov
lcall
push
int3
pop
lcall
push
mov
dec
sbb
lret
sbb
add
and
jge
lahf
mov
imull
arpl
mov
rol
jmp
inc
add
lret
jp
insb
add
ret
and
xor
lods
sbb
mov
pop
repnz
lods
test
scas
icebp
in
arpl
bound
pushf
add
aaa
adc
mov
lahf
rorl
jg
dec
test
fldenv
mov
shll
scas
sbb
iret
jb
sub
mov
push
lods
je
push
inc
dec
ret
lret
xor
mov
rcll
sub
out
sub
dec
call
scas
loopne
bound
gs
mov
jmp
repnz
dec
ljmp
lret
add
jns
jo
into
add
dec
ret
addr16
sub
mov
cs
stc
out
xchg
mov
push
sbb
movsl
test
push
xchg
fdivrl
cmp
in
pop
and
fwait
imul
dec
jne
inc
cmpsl
inc
or
mov
aad
mov
add
rcll
or
adc
mov
sub
pop
sbb
inc
adc
sbb
sub
js
jno
ret
xchg
xor
fcmovnbe
test
dec
lcall
pop
rcl
pop
mov
mov
call
cmp
jae
icebp
out
pop
aaa
and
add
xor
nop
cmpsl
ret
jp
cmc
dec
mov
adc
dec
loop
adc
inc
mov
outsl
shlb
xchg
das
sbb
cmp
loopne
scas
and
adcl
out
push
inc
jecxz
insl
ja
das
or
movsl
lcall
mov
inc
add
jnp
mov
js
and
loopne
sahf
cmc
xchg
or
icebp
es
loopne
inc
daa
cmp
cltd
adc
pop
cmc
cmp
xor
in
mov
cld
fnstenv
and
mov
jb
fsubrs
jmp
jp
leave
jo
mov
inc
std
out
or
call
xchg
cld
out
mov
and
repz
cmpsb
xor
sbb
xchg
mov
push
loope
or
mov
xchg
icebp
shll
cmc
test
sub
or
lahf
test
dec
dec
add
int
jg
mov
pop
dec
mov
les
xchg
adc
cld
xchg
pop
adc
xchg
popa
test
pushf
dec
xchg
xlat
aaa
push
int
in
mov
aam
mov
inc
mov
insb
sbb
jb
lds
pusha
pop
mov
push
inc
out
cmpsl
jle
cli
or
std
fisubrs
and
popa
push
int
test
xor
leave
icebp
aas
or
in
sbb
xor
cltd
cmp
add
dec
add
cwtl
sub
enter
jg
popf
test
sbb
xchg
call
fadd
push
in
xlat
pop
aaa
add
mov
enter
inc
scas
std
xor
mov
mov
push
jg
aad
aam
push
je
xchg
jmp
and
fucomp
mov
push
clc
scas
into
es
pop
imul
call
sarl
push
fs
ss
test
mov
lea
dec
testl
dec
rcrl
jbe
pop
xchg
mov
ret
sbb
ljmp
pop
jno
sub
sub
orb
cwtl
and
push
and
mov
fsubrl
xchg
aam
mov
mov
adc
andb
mov
rorb
xchg
push
jns
cmc
mov
sub
adc
mov
scas
mov
sahf
cwtl
xchg
inc
dec
sbb
and
in
in
fiadds
enter
xor
lahf
sbb
dec
mov
add
and
data16
inc
fldl
or
cmpsb
ja
fsubs
stos
mov
cmpb
enter
sbb
jne
xor
outsl
push
test
and
cli
js
inc
and
mov
outsl
add
into
movaps
negb
add
inc
mov
and
mov
test
adc
and
mov
sbb
stc
adc
insl
cmpsl
jl
les
adc
sbb
mov
pop
ret
sbb
jmp
jns
out
aam
sbb
mov
push
mov
push
cmp
cmp
cli
arpl
sbb
rcrb
addr16
and
push
pushf
add
imul
fnsave
xor
insb
push
mov
xchg
pop
jno
add
or
sub
mov
ja
into
jns
inc
shlb
xchg
scas
sub
jo
mov
or
es
int
mov
inc
insb
fcmovu
jmp
cmp
push
pop
ss
mov
movsb
mov
in
loopne
dec
mov
mov
ds
cmp
lods
jnp
push
fsubrs
es
mov
push
int3
mov
call
sbbb
in
inc
int3
ss
and
adc
add
dec
and
aad
pusha
dec
rcll
add
and
push
scas
and
push
mov
das
cmp
mov
call
repnz
push
in
scas
add
adc
mov
pop
dec
pop
roll
lret
jns
lret
loopne
pop
movsl
push
or
xchg
rolb
cld
es
sti
ss
and
add
jne
sbb
mov
mov
jge
out
pop
cld
mov
jno
sub
push
stos
pushf
repnz
mov
mov
mov
or
fbld
enter
push
outsb
mov
insb
daa
cmpsl
push
jne
scas
or
out
add
sub
or
in
cmp
pop
cltd
scas
movsb
pop
hlt
cmp
mov
insb
jnp
push
sub
clc
aas
mov
pushf
dec
mov
mov
cmp
mov
jo
xchg
daa
mov
lret
cmp
outsl
sbb
leave
cmp
sub
lds
mov
movsb
pop
inc
cmc
and
int
nop
fisubl
divb
xchg
fmull
xor
enter
xor
ret
pop
jb
xchg
je
fcoms
notl
push
jo
addr16
insl
outsl
je
repz
dec
xchg
lahf
out
adcl
cmc
movsb
xor
int
add
dec
pop
lods
daa
shll
cmpsl
push
xchg
stos
mov
ret
lret
sub
mov
repz
jmp
ljmp
jo
dec
xchg
adc
xchg
adc
jo
mov
mov
mov
cmp
rsqrtps
xchg
sbb
mov
call
xchg
add
dec
in
xor
inc
and
jle
adc
xlat
xor
popa
aaa
mov
pop
fldl
les
les
mov
scas
ret
fistl
push
dec
dec
jmp
xor
outsl
aad
pusha
popa
imul
dec
jno
inc
dec
in
aaa
adc
jge
nop
xor
cltd
movsb
sub
out
jb
test
pop
divb
xor
xchg
das
movsl
xchg
idiv
sti
out
or
mov
jns
cmp
fucom
jmp
mov
pop
mov
shl
cld
or
cld
inc
lret
sub
lock
add
jecxz
in
cmp
push
ret
cmp
xor
out
cli
inc
or
int3
xchg
cwtl
daa
clc
xchg
mov
mov
xchg
jecxz
lds
repz
mov
test
cmpsl
lret
pop
lds
inc
ret
sbb
sahf
movsb
mov
bound
rcl
cld
mov
loop
adc
cmp
shrl
push
add
xchg
out
xchg
xor
xchg
in
adc
sbb
decl
outsb
popa
dec
or
scas
out
mov
jo
ret
mov
aam
loopne
push
int
inc
sbb
scas
fistpl
mov
add
into
mov
leave
mov
xchg
jl
stc
inc
loopne
mov
dec
test
push
mov
lret
mov
lret
in
inc
or
sub
and
cs
mov
lods
adc
pop
jmp
xor
jno
xor
icebp
xchg
jle
in
xchg
stos
ja
mov
cmc
lods
dec
jno
inc
push
cmp
clc
icebp
push
lds
lret
and
xorl
ja
int
mov
pushf
mov
push
add
dec
xchg
iret
adc
xchg
insl
aas
cltd
cld
pushl
jle
cli
das
mov
pop
mov
lock
scas
mov
mov
sbb
stos
sbb
ljmp
mov
mov
mov
cmp
lcall
cmp
sbb
push
into
adc
jns
mov
pop
xchg
ret
mov
pop
pop
ret
and
in
dec
xor
sbb
or
or
std
scas
pop
clc
or
add
dec
sub
jno
xchg
repz
js
ret
outsb
or
jecxz
xor
loope
sub
fwait
insb
xor
das
and
cld
negb
divb
cmp
lret
xor
pushw
add
sahf
xor
lret
push
sub
iret
adc
sar
aaa
push
mov
add
fwait
mov
pop
xchg
imulb
mov
int3
mov
inc
pop
insb
mov
jmp
das
xchg
subl
clc
dec
inc
dec
and
loopne
inc
pop
mov
ret
xor
or
addb
ljmp
aam
pop
ret
mov
push
xchg
cmp
pop
xor
adc
roll
jl
add
xchg
mov
test
add
sbb
outsl
adc
mov
dec
insl
clc
jae
push
popa
inc
fxch
sub
push
insb
or
mov
and
mov
stos
cmpsl
dec
ss
dec
je
cmp
outsl
xchg
fmulp
mov
lds
lds
xor
test
xor
and
lahf
and
dec
mov
aaa
lret
mov
test
mov
sub
fldenv
cmp
xchg
cmp
dec
xchg
sub
fisttpl
inc
xchg
out
mov
jmp
add
pop
jmp
xor
and
dec
jmp
aam
mov
cld
xchg
inc
add
mov
xchg
or
idiv
mov
test
xchg
adc
or
add
fidivrs
clc
pop
cmp
imul
aas
loope
mov
xor
sbb
push
stc
iret
cmpl
inc
call
aaa
inc
xor
les
fisttpll
inc
mov
or
and
fs
mov
push
in
cltd
sub
jae
cmp
or
sbb
lds
or
sarb
adc
pop
mov
stos
pusha
scas
cltd
lock
push
aam
fbstp
sahf
mov
iret
inc
into
add
xchg
imul
sbb
pop
xchg
mov
scas
pop
mov
insl
pusha
lods
ja
xchg
mov
mov
movb
sbb
sub
ror
int3
cmpsl
xor
test
adc
call
jb
call
int
push
adc
adc
aad
lret
pop
outsl
mov
in
repz
in
in
pop
mov
pop
loope
in
rcll
jmp
push
loopne
scas
jbe
add
cmp
or
jle
rorb
xchg
jl
ficoms
mov
jno
and
insl
mov
pop
cmp
mov
adc
lods
mov
or
inc
mov
jecxz
inc
jae
adc
nop
push
lret
cld
xchg
add
ja
mov
xor
pop
jo
mov
and
pop
in
sub
mov
pushf
imul
add
je
mov
pop
lret
dec
inc
xor
cmp
inc
shr
in
jo
out
or
cld
ja
daa
negl
data16
or
and
push
xchg
outsb
imul
jecxz
and
out
out
jg
imul
dec
out
lret
jge
mov
mov
cs
xchg
inc
adc
pop
cmp
ret
testl
and
push
jmp
enter
enter
mov
xor
sbb
adc
and
mov
lock
jecxz
mov
sbb
cmp
out
and
jo
jns
shlb
aam
leave
cmp
jbe
cld
shlb
jp
push
stc
idivb
stc
jo
lret
and
pop
xor
or
push
cmpsl
fabs
dec
mov
icebp
movl
stos
jae
loopne
fs
xor
outsb
push
dec
rcrl
dec
test
popf
dec
jmp
loop
lds
popf
mov
mov
loope
pop
lods
cmp
sub
neg
xor
fwait
dec
and
out
rcll
xor
and
and
cmp
ja
inc
mov
pop
fbld
lock
xchg
mov
xchg
add
mov
xor
in
movsl
das
mov
jle
cmpsl
add
mov
loop
lods
negb
outsl
jo
mov
jae
mov
popf
loope
inc
mov
dec
cmpb
stos
loope
push
adc
imul
shr
int3
jl
jnp
jge
and
fsubl
dec
lcall
cs
ds
imull
repnz
mov
js
push
shlb
insb
adc
fnstsw
cmc
jb
inc
scas
dec
dec
mov
pop
push
sub
and
push
stos
imul
xchg
adc
lret
enter
mov
xchg
cli
mov
inc
pusha
jmp
icebp
sbb
sub
stc
xlat
stos
mov
dec
adc
das
jmp
jnp
cmp
dec
push
mov
pop
cld
ljmp
leave
aad
and
jecxz
cmpsl
cmp
mov
push
push
rcr
test
call
ds
inc
add
test
xor
pop
insb
push
loopne
inc
rcrb
jbe
fdiv
outsb
sti
and
xchg
push
add
or
or
push
xchg
cmpb
mov
push
xchg
cli
ds
je
scas
imul
dec
and
ja
xchg
fcompp
add
xchg
jle
jg
fld
out
mov
cmpl
shlb
mov
sahf
aad
xchg
push
sbb
and
sti
sub
cwtl
jp
call
cmp
xchg
js
and
popf
repnz
out
movsb
xor
pushf
ret
aas
mov
dec
xor
mov
test
je
pop
lods
das
mov
xchg
sub
ds
movsb
and
movsl
ficoms
dec
mov
das
shll
sub
icebp
push
jae
lahf
mov
xor
sarb
jp
pop
je
imul
add
inc
movq
mov
lret
add
pop
fcoms
and
mov
and
pop
das
cmpsb
mov
test
mov
in
and
inc
xor
frndint
js
rol
dec
xor
push
insb
xor
sbb
dec
xchg
jb
push
sub
enter
mov
cmp
movsl
loopne
pop
jl
add
rcrl
push
xchg
sub
mov
ds
int3
lret
dec
pop
fsub
test
mov
cmp
cwtl
xchg
dec
xchg
ficoms
mov
mov
mov
bound
lds
aad
div
popa
mov
adc
insl
std
push
in
xchg
dec
bound
mov
imul
outsb
cs
test
add
push
test
jmp
cmp
pusha
inc
ljmp
push
ret
rorb
jb
es
les
jae
ficompl
pushf
adc
cmc
mov
xchg
pop
stc
inc
dec
jmp
ss
inc
aas
dec
mov
and
pop
out
add
adcb
cmp
stc
mov
or
dec
repnz
addr16
pop
push
mov
hlt
and
jg
pop
sub
out
add
out
adc
aaa
cmpsb
mov
addl
pop
dec
cli
xchg
into
push
push
fimuls
cs
inc
mov
sub
stos
out
fbstp
movsl
adcl
fldcw
testl
repz
pop
sbb
out
ds
dec
mov
mov
stos
push
adc
inc
push
mov
insb
out
pop
test
ret
popa
mov
into
add
neg
and
fdivr
movsb
cmpsl
in
dec
mov
adc
lret
dec
or
adc
loop
and
lahf
jle
add
xor
ja
test
add
sub
loope
mul
stos
dec
xchg
pop
inc
jl
sub
mov
jle
jg
sbb
stc
mov
mov
das
test
pop
or
xchg
dec
shlb
lods
dec
cld
aad
mov
pop
cmpl
mov
or
mov
test
pop
pop
sub
inc
rcrb
cltd
inc
addl
jo
or
push
imul
jae
clc
std
mov
push
pop
fmuls
and
dec
xchg
inc
push
pop
and
xchg
add
jmp
fildll
roll
pop
call
dec
push
jl
and
push
stc
jbe
pop
inc
movsl
subl
pushf
mov
inc
idivb
lods
sahf
dec
xchg
or
lret
icebp
sub
dec
mov
iret
xchg
aas
test
data16
xchg
ds
pop
mov
xor
mov
jg
and
ljmp
idivb
fnclex
mov
xor
or
mov
mov
sbbb
out
repz
inc
pop
divb
iret
pop
inc
or
mov
rcrl
pop
xor
shrb
rep
call
cmp
jmp
push
and
mov
movd
pop
and
mov
clc
int3
ja
and
mov
ljmp
jmp
fidivl
repz
inc
inc
sbb
sbb
rclb
insl
mov
ret
mov
aad
jns
loope
sbb
sub
dec
nop
mov
fdiv
das
sbb
mov
jge
inc
jp
inc
sub
mov
aam
add
outsl
cmpb
rclb
mov
inc
repz
xor
push
fdivrs
inc
stos
push
daa
push
jnp
cmpb
pop
in
icebp
sub
push
and
cmpsb
cmp
fs
sub
outsl
enter
pusha
imul
lds
loope,pn
mov
mov
push
inc
xchg
sbb
pop
push
dec
add
rolb
ret
xor
mov
aam
mov
in
cld
icebp
cld
clc
rol
iret
idivl
call
add
loop
cmp
lods
cmp
push
into
lock
mov
mov
out
clc
xor
xorb
sub
lods
dec
repnz
repz
pop
aam
push
cmp
cmp
pop
add
fwait
fs
push
sarb
or
jmp
lahf
outsl
xor
add
pop
mov
inc
or
mov
repnz
jbe
xchg
out
mov
xchg
out
pop
jo
int3
push
ds
xchg
sub
pusha
out
add
add
imul
pop
or
adc
mov
repz
push
gs
xor
cmp
mov
xchg
adc
rorl
imul
gs
dec
push
push
rcrl
add
xchg
aas
test
stos
repnz
bound
mov
std
mov
sbb
xorb
imul
xchg
push
cmp
in
cmp
lods
fsubrl
xor
push
inc
jne
inc
push
mov
sub
addr16
pop
scas
sub
sub
cs
cld
fwait
adc
sbb
fs
jl
insb
arpl
into
pusha
lock
cmc
push
aas
inc
leave
dec
sub
jae
sub
pop
pop
int3
sti
xlat
test
outsl
or
cmovp
ficompl
mov
adc
leave
cmpsl
mov
push
pop
daa
notl
pop
es
and
xor
aam
xchg
sub
negl
out
out
push
mov
sub
xor
rcl
lcall
sbb
xor
hlt
mov
inc
xor
or
mov
push
mov
mov
dec
js
push
and
outsl
call
push
es
dec
fcmovu
sti
clc
rolb
lds
mov
or
enter
movsl
sbb
jne
inc
movsb
imul
ds
cmp
cmp
roll
fisttps
enter
jbe
lcall
int
push
mov
sti
mov
add
sbbb
adc
dec
mov
popa
add
cmp
ret
jns
xor
xchg
dec
adc
pop
in
xor
mov
out
push
lock
push
fiaddl
mov
xor
xchg
xor
and
lahf
imul
loope
mov
lock
rcll
dec
andl
fadds
cmp
cmp
jbe
arpl
lock
mov
subl
test
pop
ljmp
test
popa
pop
stc
adc
imul
mov
sbb
xor
js
jge
fisubrl
add
mov
sbb
mov
shlb
mov
insb
aam
push
pop
cwtl
out
sahf
and
push
sub
sub
lds
popf
sub
push
mov
xchg
insb
and
sub
xchg
push
sub
push
add
mov
outsl
test
add
sahf
lret
int
ljmp
cmp
es
sub
test
push
repz
sahf
cmp
dec
in
into
jmp
pop
and
push
inc
sub
adc
cmp
xchg
pop
jns
out
repz
push
std
adc
int3
dec
sub
mov
lahf
lods
dec
push
call
and
mov
in
shll
fnstenv
cmc
mov
aas
sbb
movsb
push
sub
jns
cmp
sbb
mov
mov
imul
mov
or
push
or
imul
das
and
js
xchg
out
adc
jmp
jle
popl
xchg
mov
mov
hlt
call
sbb
and
mov
rclb
dec
loop
jg
into
fdivl
sub
std
mov
xchg
pop
insb
add
push
cmp
push
les
stc
xor
rcl
sbb
mov
mov
insl
push
inc
in
sub
dec
repnz
xor
pushf
adc
mov
jo
xchg
pop
outsb
sbb
or
fsubp
lahf
shrb
mov
pop
push
sub
fmull
lahf
not
or
negb
out
inc
mov
out
pop
cmp
imul
mov
mov
inc
sub
bound
mov
push
call
cmp
mov
and
push
sbb
push
jns
scas
cli
dec
inc
lret
ucomiss
mov
or
sbb
pop
push
int3
repz
mov
aad
inc
imul
pop
or
mov
jl
shll
jg
rcr
arpl
sub
dec
test
gs
mov
gs
push
cmp
push
mov
imul
lods
add
cwtl
out
bound
outsl
inc
pop
cmp
xlat
dec
fisttps
add
out
mov
fildl
cld
or
dec
pop
mov
cmp
pop
adc
mov
cmp
inc
mov
mov
into
mov
mov
adc
aam
fwait
xchg
dec
jmp
mov
popf
xor
or
pop
lods
aam
xchg
fdivrs
inc
test
mov
push
xchg
sbb
paddq
rol
orb
cmpsb
inc
ret
cltd
movsl
outsl
or
int3
or
mov
scas
sub
dec
sbb
push
sub
dec
mov
sub
lock
mov
ret
fisubrs
sub
pushf
xchg
inc
dec
or
sub
jne
and
pusha
lahf
xchg
sub
scas
cmc
mov
ja
orb
sbb
fnstsw
sbbb
sub
inc
movsl
imul
mov
xor
arpl
mov
xchg
mov
push
pushf
or
mov
adc
cmp
or
mov
cmpsb
xchg
inc
or
test
fistpl
aad
dec
mov
pop
stc
cwtl
aam
pop
js
test
cmp
lods
add
mov
dec
and
shl
popa
repnz
movsb
mov
and
jne
lea
xlat
imul
sub
dec
fmuls
sti
push
sbb
cwtl
pop
hlt
inc
cmp
or
mov
xor
out
addb
std
lods
adc
xchg
icebp
pop
ss
fisubl
fadds
sbb
xchg
arpl
fsts
cltd
cmp
xor
in
xchg
and
call
repz
xor
and
fwait
call
add
mov
hlt
arpl
sub
gs
lahf
out
sbb
jg
lods
hlt
or
and
not
mov
mov
or
adc
pop
add
cld
stos
aad
mov
jno
add
mov
ljmp
adc
addr16
test
jae
daa
jb
mov
push
stos
mov
pop
mov
sbb
inc
cmp
push
cld
sbb
leave
ss
cwtl
push
inc
fs
jnp
dec
cmpb
shlb
adc
clc
mov
test
daa
test
pop
push
xchg
dec
sub
insb
xchg
roll
cmpb
mov
pop
bound
push
add
push
and
inc
cmp
in
xor
or
fidivl
hlt
fs
mov
out
lret
mov
hlt
enter
push
ret
stos
adc
mov
push
je
push
into
popl
xchg
icebp
mov
pop
mov
sbb
imul
pop
loope
dec
adc
imul
push
enter
imul
and
lods
lcall
aam
adcb
and
dec
stos
out
out
clc
mov
movsl
nop
idivb
mov
xlat
ja
mov
xor
adc
mov
fwait
jmp
cmp
push
push
in
lahf
add
dec
shlb
add
cld
cmp
jecxz
add
or
jg
jmp
sbb
movsl
adc
sub
push
mov
sub
add
dec
sub
push
sub
adcl
cmp
mov
pop
test
xchg
in
pop
out
lret
mov
dec
push
xorl
xchg
insb
adc
mov
cmpsb
out
ficoms
pop
mov
and
fucomip
ds
mov
pop
cltd
dec
or
sub
xchg
je
scas
movsl
xchg
subl
jg
xchg
or
addr16
xor
pop
and
je
jae
pop
bound
mov
xlat
cmpsl
leave
pop
js
lret
cmp
xor
mov
adcl
sub
ja
js
add
cmpsl
movsb
pop
ds
stc
xor
lea
mov
clc
js
std
mov
pusha
pop
jge
add
mov
pop
gs
lods
mov
dec
inc
mov
mov
adc
and
in
jnp
adc
idivb
imul
mov
xor
enter
pushf
loope
dec
pusha
mov
popf
and
sub
int3
cmpb
sti
sub
stos
inc
in
int
xor
lahf
jecxz
ljmp
sub
sub
sub
movsl
mov
sti
sbb
jecxz
je
push
add
aam
jle
shr
cwtl
or
or
or
inc
pop
sbb
aad
mov
insb
roll
mov
lock
mov
loope
je
mov
call
xchg
xchg
and
jnp
rcl
mov
dec
pop
mov
sub
fcomps
mov
imul
das
scas
fldt
mov
mov
stos
cmp
testl
pop
xchg
sarl
or
or
and
push
clc
in
ss
mov
stos
cmp
mov
or
scas
aas
test
mov
loop
loop
scas
shrl
or
aam
inc
xor
mov
sbb
mov
repz
out
jb
and
mov
xor
test
or
xchg
ret
xor
cmp
xchg
stc
xor
dec
push
je
popa
pop
mov
pop
xor
in
mov
fwait
jl
cltd
movsl
mov
in
lods
mov
movsl
scas
pop
cld
sub
jmp
or
sbb
loope
mov
cmpl
inc
in
lods
jle
fiadds
jl
pop
outsb
mov
shlb
shlb
xor
out
in
test
xor
int
call
loopne
inc
negb
mov
pop
loopne
decb
cld
push
jnp
in
mov
pop
repz
push
loope
cs
data16
decb
dec
dec
push
jb
gs
out
lock
xor
xchg
addr16
xchg
movsb
cld
ficoms
cmpsl
xor
xchg
pop
sbb
pop
in
je
and
mov
shrl
aas
lahf
cmp
aam
loopne
jno
cli
mov
sti
pop
daa
pop
xchg
lahf
cmpb
lock
mov
inc
fs
out
pop
bound
inc
xchg
mov
jg
pop
lret
mov
or
xor
sbb
pop
ss
rclb
mov
sub
sti
add
loop
xchg
xor
jns
shl
push
fiaddl
xlat
sbb
cmp
adc
in
lods
xchg
sbb
mov
jge
pushf
mov
in
leave
adc
mov
daa
je
lahf
cmp
add
mov
jbe
mov
pusha
rcrb
mov
dec
jb
daa
sbb
ljmp
add
mov
idivl
shll
sbb
sbb
sub
je
adc
sti
stos
fldenv
mov
mov
add
clc
and
cmp
and
xor
adc
std
or
cmp
mov
pop
es
stos
push
arpl
out
aaa
stc
les
jge
mov
xchg
stos
dec
push
pusha
mov
push
andb
add
sahf
repnz
gs
jmp
adc
ds
adc
clc
mov
dec
ret
test
adc
sub
push
push
dec
das
pop
movsb
cmp
ss
xchg
add
popf
shl
fsubl
nop
adc
pop
sti
out
xor
in
loopne
ljmp
pushf
cli
xchg
testb
cmpsl
xor
xchg
or
cwtl
jno
pushf
repnz
xor
insl
cmp
scas
mov
mov
aas
imul
xorl
mov
or
add
imul
jne
xor
imul
pop
mov
out
pushf
je
or
test
clc
push
jae
in
push
hlt
in
fcmovnb
aas
mov
sbb
jmp
dec
mov
push
push
push
arpl
sub
ljmp
scas
sti
jmp
aas
out
xor
insb
sbb
loop
ja
cltd
or
sub
push
daa
in
test
rclb
in
loopne
pop
or
adc
sub
outsb
cmp
daa
push
scas
pop
xorl
rorl
mov
int3
lret
mov
xor
pop
sub
add
out
hlt
lcall
mov
cmp
push
mov
inc
push
dec
sbb
stc
and
mov
inc
push
inc
mov
arpl
pop
fidivrs
leave
jb
imul
xchg
mov
jle
xorb
or
jle
mov
subl
pop
in
jg
sbb
push
jle
je
rolb
jbe
jp
inc
adc
in
mov
dec
mov
in
sbb
mov
cmp
push
mov
xchg
jg
int3
or
shll
loopne
outsl
sarb
fdivr
movsb
aaa
cmpsl
and
mov
push
xor
int3
mov
cmc
add
pop
test
incb
xchg
insl
adc
mov
test
inc
popa
cmp
push
lret
cmp
mov
add
insl
xchg
xor
ret
loop
inc
fdiv
in
pop
sub
jno
xchg
sub
shrl
test
sub
xchg
in
stc
pop
mov
loop
jg
scas
jecxz
dec
stos
fisubrs
shll
sub
fidivrl
jnp
into
movsb
loope
mov
sbb
push
xchg
lock
cmpl
push
push
sahf
mov
stc
ret
or
ljmp
cltd
sub
push
lock
sub
shll
dec
call
push
lods
imul
dec
push
push
add
adc
negb
mov
mov
mov
xor
mov
outsb
cmc
cmpsl
pop
jae
xchg
aaa
add
insl
sahf
clc
pop
add
or
jl
cltd
stos
sti
fimuls
pop
lahf
push
test
cmp
aam
push
sub
ror
add
lret
lcall
shlb
mov
dec
xchg
rclb
lcall
xor
xchg
pop
stc
xor
repnz
mov
and
push
sbb
mov
mov
in
pusha
arpl
lods
mov
cwtl
rolb
sub
mov
push
fcmovnu
mov
incb
inc
jmp
insb
int
inc
mov
lret
xchg
sti
push
mov
lods
and
sub
mov
jmp
in
xor
insb
mov
aas
mov
push
into
int3
loope
mov
roll
popa
insl
push
test
movsl
add
adc
arpl
rorb
insl
scas
jno
add
imul
sti
mov
aaa
mov
xchg
jp
jbe
mov
pop
mov
out
add
test
movsl
fstl
lea
jne
sbb
jmp
mov
dec
daa
pop
mov
mov
mov
es
stc
test
movsb
xor
xor
test
sti
aas
jbe
mov
sub
pop
ret
in
sbb
jne
dec
sbb
mov
lret
mov
xor
rcrb
in
nop
dec
test
cld
sbb
pop
push
and
daa
or
ret
xchg
out
mov
in
dec
jns
xchg
test
or
cmp
outsb
test
xchg
mov
and
cmp
bound
jb
stos
jbe
stos
pop
and
shrl
push
in
pop
adc
stc
pop
adc
pop
adc
mov
jle
dec
bound
xchg
mov
out
jo
jnp
leave
aas
add
mov
xchg
mov
ret
xchg
movsb
ds
mov
sbb
inc
cld
or
add
js
call
mov
cld
loop
mov
cmp
pop
test
std
xchg
cmc
pop
scas
lcall
cli
sub
addr16
out
sbb
mov
shll
xchg
xchg
test
loope
outsl
sbb
jle
ds
xor
stos
stc
pop
cmp
cwtl
dec
add
adc
sbb
les
repz
adc
xchg
inc
push
lret
stc
push
xor
cmp
add
sbb
xchg
mov
pop
mov
out
loop
test
movsb
lock
das
adcb
cmp
mov
fsubs
push
or
mov
adcb
pop
lods
pop
jle
inc
arpl
addr16
or
and
and
cmp
jle
lret
mov
mov
ds
cmpsb
xor
loope
add
in
addr16
repnz
mov
pusha
inc
xor
outsb
xor
rorl
inc
repnz
dec
push
pop
pop
call
out
push
pop
pop
out
pop
daa
rorl
mov
pop
inc
dec
inc
push
xlat
sbb
mov
jb
into
adc
and
aam
loope
sbb
dec
in
push
lea
das
inc
std
stos
sub
inc
push
loop
lahf
push
orl
add
jne
mov
jl
dec
pop
iret
enter
icebp
ret
and
or
outsb
test
and
jl
add
and
mov
push
lahf
mov
ficoms
jne
adc
mov
cmp
mov
repnz
pop
adc
cmp
enter
pop
ficoms
fisubs
loopne
rcrl
loope
pop
mov
jg
fistpll
and
xchg
test
pop
add
loop
pop
in
mov
movsl
loop
cs
inc
in
out
jbe
push
dec
mov
int
sbb
add
cmp
mov
dec
adc
outsb
lret
mov
fildl
test
or
mov
bound
jns
fst
arpl
sti
shll
insl
in
insl
jmp
insl
mov
mov
rcll
add
jne
movsb
gs
and
sbbb
add
push
fmull
inc
mov
push
jnp
pop
fdivl
adc
aad
imul
dec
in
sahf
pushf
out
rcrl
ds
adc
push
lahf
adc
jecxz
shr
xchg
out
aas
lcall
popa
int
mov
add
arpl
push
cmp
fsubp
push
jl
daa
das
out
mov
ret
sbb
inc
clc
jge
xchg
jns
cmp
pop
out
adc
jl
negl
in
and
out
cmpsl
jecxz
cmp
mov
lods
xor
hlt
mov
fwait
stos
mov
insl
out
in
adc
xchg
push
test
int3
rcrb
inc
imul
push
or
sub
dec
and
mov
sbb
les
mov
add
rcr
test
mov
mov
stc
in
add
fs
shr
sub
lods
test
mov
leave
pop
filds
pop
sub
aad
data16
jg
ja
or
ret
lret
mov
enter
push
jecxz
add
out
je
pop
pop
and
ljmp
imul
aaa
or
push
int
jle
mov
mov
lea
rcll
aas
test
sar
dec
ja
out
nop
xchg
mov
or
bnd
mov
cs
pop
dec
dec
fstpt
lock
pop
fcomps
mov
dec
dec
pop
lock
dec
dec
xchg
enter
roll
clc
add
outsb
mov
outsb
in
cmp
mov
mov
inc
into
jnp
ficompl
adc
pushf
fists
jecxz
add
xor
lret
sub
dec
leave
mov
dec
mov
dec
test
jl
or
or
mov
pop
inc
adc
pop
enter
sti
adc
addr16
inc
mov
xor
pushf
mov
insl
lahf
daa
ss
subb
sbbb
push
or
lea
xchg
jg
push
push
mov
pop
fdiv
cmp
cmp
int
leave
pop
push
sbb
dec
lds
and
mov
arpl
mov
pop
dec
pcmpgtd
mov
insl
repz
jnp
shrl
and
imul
addr16
cmp
test
lds
pop
arpl
pop
sub
adc
inc
scas
sub
fbld
outsb
inc
push
insl
add
or
call
cwtl
test
pop
imul
stos
inc
out
jg
sbb
cs
scas
jge
sub
mov
mov
mov
mov
xchg
inc
push
mov
sub
pop
les
std
mov
xor
clc
push
mov
jg
mov
pop
push
push
pop
xchg
into
mov
shl
icebp
mull
sbb
and
movb
test
test
sbb
lea
dec
sub
xchg
loope
out
fsubr
sub
cmp
mov
sub
cltd
test
pusha
xchg
jg
cwtl
mov
aaa
scas
mov
add
and
dec
sub
xabort
add
popf
jmp
mov
mov
ljmp
adc
adc
push
loop
nop
cld
scas
iret
inc
icebp
mov
xchg
insb
stos
je
mov
mov
shlb
std
cmp
aam
pop
push
fwait
jl
cwtl
scas
dec
popa
int
stos
or
cltd
imul
xor
jnp
xchg
xchg
fiadds
mov
mov
shl
push
loopne
arpl
mov
fs
loop
inc
add
loop
jae
loopne
rclb
insb
test
data16
mov
lds
mov
sub
and
and
pop
lret
or
and
mov
jnp
push
and
insb
repz
inc
test
sub
cmc
leave
add
mov
xlat
lods
loop
cld
jle
test
subb
dec
or
cmpsb
sub
mov
outsb
bound
int
insb
shlb
xor
ror
enter
mov
out
sbb
fbld
cmp
sbb
loope
lcall
mov
gs
outsb
inc
movsl
roll
and
cld
hlt
out
mov
and
mov
inc
push
mov
mov
aam
movsl
ficompl
repz
cld
cli
frstor
xchg
adc
jo
scas
lahf
mov
xor
pop
mov
outsl
cli
arpl
xchg
or
jp
inc
in
jp
pop
lds
mov
and
add
insb
jns
stos
and
mov
add
push
or
movsl
cmp
addr16
dec
inc
mov
add
add
push
jo
ficompl
mov
xchg
ljmp
mov
aad
movsl
inc
daa
fldl
adc
xchg
xchg
scas
pop
rclb
mov
adc
movsb
pand
rolb
test
out
inc
xchg
xor
outsb
mov
shl
xabort
jns
xor
sub
in
loop
fcoms
scas
imulb
sbb
bound
mov
dec
add
and
pusha
sbb
jmp
lods
mov
sub
add
pop
mov
in
stc
cmp
mov
aad
push
outsb
les
pop
jmp
dec
aas
and
mov
mov
imul
mov
jns
lahf
cwtl
ud0
out
mov
cltd
pop
lret
aam
mov
andl
in
inc
or
ja
aad
xchg
hlt
lock
push
mov
sbb
or
xor
pusha
cmpsl
push
adc
inc
cwtl
vmulss
rcrl
in
add
ss
pop
int3
and
loop
mov
int3
ljmp
pop
cwtl
or
or
push
lods
xchg
in
push
and
pusha
fdivrl
jp
add
test
xor
sbb
je
call
dec
cmp
and
jb
ljmp
sahf
sub
fldenv
adc
add
cmp
dec
add
pop
repz
and
loope
pop
cs
jp
dec
jae
push
mov
iret
in
xchg
test
or
inc
repz
jge
fildl
loope
jns
push
lret
or
ds
mov
jo
inc
xchg
aaa
mov
sbb
sub
xchg
js
mov
fiaddl
xlat
add
hlt
iret
std
mov
out
test
add
add
stos
and
jmp
sbb
adc
dec
and
pop
idivb
sarb
out
lea
cmp
push
cltd
imul
inc
sbb
sti
pop
sub
push
xchg
xor
fucomi
cmp
lcall
push
scas
mov
jae
je
push
mov
or
imul
jecxz
push
mov
cmp
push
fdivr
or
imul
iret
aas
and
fldenv
add
mov
mov
fsin
push
mov
es
jno
push
and
jno
adc
adc
or
sbb
icebp
aam
mov
xchg
das
into
mov
xchg
in
and
mov
xchg
mov
mov
stos
stc
jns
push
mov
push
pop
sbbl
add
fwait
xchg
rcrl
mov
ss
decb
jge
in
in
add
mov
sbb
mov
push
ds
pusha
js
sbb
call
xchg
lahf
mov
or
push
aad
add
fimull
dec
mov
stc
mov
ss
mov
mov
xchg
mov
aad
andb
repnz
mov
ret
notl
frstor
mov
outsb
push
icebp
add
fcmovne
rcrl
out
and
outsl
inc
lock
hlt
int
add
push
stos
xchg
fsubp
xchg
pop
in
push
les
mov
add
pop
les
pop
loopne
daa
xor
neg
int3
add
test
out
in
push
inc
xlat
mov
jmp
push
mov
xchg
or
sub
lret
xchg
lods
dec
rcll
xor
jge
mov
push
arpl
shrl
ja
adc
outsb
rcrb
imul
int3
pusha
stos
fistpll
jmp
rorl
add
and
push
out
rep
decb
fisttpl
push
xchg
jnp
loopne
and
mov
jnp
iret
cmpsb
push
bound
fsubrl
out
adc
in
cmpl
adc
sub
mov
pop
or
adc
and
pop
push
sub
adcb
rcrl
pop
addr16
add
outsb
mov
in
rcll
out
cmpsb
push
dec
sti
data16
sub
sbbl
and
jnp
jbe
mov
mov
int3
into
push
pop
hlt
aad
cmp
ss
pop
stos
xor
ja
enter
sbb
add
js
mov
stos
inc
add
mov
push
les
add
roll
lods
push
dec
cwtl
mov
xchg
mov
out
or
std
add
jp
pusha
or
aad
or
adc
dec
insl
inc
xchg
jb
pushf
sbb
pop
outsl
xchg
adc
add
cmp
scas
in
mov
sahf
lret
push
fsubrs
xor
js
sub
std
or
pusha
lgs
adc
mov
mov
push
lret
aas
pop
ja
outsb
data16
and
stos
pushf
daa
adc
pusha
mov
stos
lcall
fucom
fidivrs
les
fcompl
filds
mov
in
dec
shrl
cmc
mov
pop
fbld
sbb
mov
mov
push
popa
lea
cmp
dec
inc
lods
out
add
xor
xor
fidivs
fisttpl
inc
in
int
scas
sbb
xor
or
inc
adcl
cmp
pop
mov
jno
and
icebp
inc
movsl
mov
pop
lock
cmpsl
or
dec
movsl
xor
inc
xor
sub
xchg
testl
int
xchg
mov
shll
lret
adc
lcall
stos
push
jns
sub
ds
pop
xchg
and
stc
mov
pop
sub
mov
orb
inc
xchg
mov
xlat
dec
push
adc
add
pand
mov
pusha
mov
scas
out
ret
test
in
insb
int3
idiv
or
inc
out
fildl
mov
fs
dec
adc
mov
cltd
cmp
pop
aam
inc
stos
lds
cmp
lods
fwait
mov
push
jo
ss
push
je
pop
dec
add
aad
xchg
xchg
fisttpl
dec
popa
xchg
cmpb
lds
das
xor
das
cmp
mov
nop
pop
push
jo
inc
add
jo
jecxz
into
popa
js
fs
sahf
testb
cmp
push
sub
mov
cmpsb
lret
inc
push
push
rcl
rcrl
rcrl
cmc
dec
aas
pop
inc
stos
clc
and
test
inc
push
sub
lret
ljmp
sarb
notb
pop
loopne
pop
sbb
mov
jp
sahf
outsb
pop
push
fisubrs
stos
aad
push
js
inc
in
push
pop
push
fcmovu
lahf
movsb
cmp
add
scas
mov
mov
mov
sub
stos
insl
mov
add
pop
xchg
add
add
push
jbe
dec
sbb
movsl
jno
stc
jge
pop
je
loope
xor
push
sub
pop
imul
mov
add
mov
loop
pop
push
fldt
and
mov
lret
lcall
pop
js
into
xchg
test
mov
xchg
mov
add
repnz
sub
mov
data16
mov
lcall
ds
fwait
pop
jo
ficomps
dec
stos
mov
dec
cli
js,pn
scas
nop
cmpsl
out
sub
sub
pop
into
adc
mov
loopne
sub
loop
xchg
mov
outsl
xor
push
into
mov
insl
out
iret
push
xchg
jne
dec
fidivs
push
in
punpckldq
orl
pop
push
add
xchg
pop
xlat
xchg
cltd
mov
nop
into
ss
adc
scas
dec
pop
divb
dec
inc
je
adc
or
inc
push
xchg
inc
stc
scas
rcr
jnp
xchg
nop
push
or
and
sti
in
cmpb
lds
mov
push
sti
lods
int3
js
inc
cltd
lods
pop
push
cltd
nop
fistpl
fisubrs
mov
xor
loopne
sub
mov
inc
ljmp
subb
xchg
xchg
mov
sti
movsb
outsb
insb
adc
and
and
or
fwait
mov
int3
xchg
test
pop
sahf
inc
daa
jbe
mov
pop
pop
loope
dec
subl
stos
xchg
fistpl
push
mov
mov
mov
pop
jle
hlt
cmp
add
aaa
popf
icebp
add
test
mov
fildll
xlat
or
cmp
dec
xchg
fincstp
and
enter
jae
out
pop
or
and
xor
outsb
vaddsd
dec
jge
daa
xor
inc
mov
sbb
add
std
ds
loop
lcall
das
test
xchg
out
hlt
rolb
mov
sub
or
and
in
or
es
fwait
push
push
or
mov
mov
popf
into
out
add
xor
pminsw
icebp
aam
or
in
inc
mov
push
mov
repz
pop
dec
scas
fcmovne
js
int3
imul
aad
or
or
ficompl
xor
sbb
aaa
inc
shrl
lret
stc
in
in
mov
push
xchg
add
push
add
sub
sbb
mov
mov
add
xchg
mov
push
fdiv
lods
mov
or
repnz
sub
stos
mov
movsl
maskmovq
imull
xor
andl
outsb
test
popf
push
cmp
sbb
mov
jmp
xor
lods
clc
push
outsl
dec
push
dec
lret
fdivp
enter
call
aam
dec
stos
dec
fdivrl
jbe,pt
push
adc
mov
loope
fcmovne
xlat
jl
inc
mov
and
jne
out
cmpsl
mov
pop
xchg
dec
xorl
test
testl
sar
in
lds
sbb
xlat
xor
and
dec
push
stos
ret
scas
lock
jb
and
jb
rcrl
in
dec
aam
and
mov
jo
stc
inc
loopnew
mov
mov
aaa
iret
mov
imull
orb
sub
mov
sub
test
fcmovnbe
test
je
and
or
adc
mov
add
jmp
icebp
ss
fists
sub
mov
cli
push
int
push
and
mull
out
or
fisttpl
or
mov
ja
push
cmc
ficomps
push
ljmp
or
loopne
hlt
or
jle
cmp
add
lea
push
cmpsb
xlat
xor
bound
xor
pop
mov
xor
lock
push
pushf
or
pop
cmp
cmp
add
adc
mov
lahf
cmp
stc
andb
scas
xlat
jno
sub
adc
ret
mov
hlt
xchg
lods
jbe
cmp
decb
adc
push
aad
mov
outsl
mov
in
jb
fcoml
mov
movsb
aas
sbbb
mov
adc
mov
sbb
pop
xor
sub
bound
xchg
push
das
hlt
adc
sub
jge
sahf
xlat
icebp
mov
jno
mov
jmp
pop
into
xlat
insb
and
jno
std
rorb
jo
lahf
adc
int3
pusha
aad
cmp
mov
fidivl
push
fs
jecxz
pop
inc
aaa
and
jmp
int
add
leave
ds
loop
xor
sbb
cmp
repnz
lret
pop
or
mov
inc
jp
inc
mov
mov
in
mov
ds
subb
shll
jecxz
ljmp
ljmp
out
xchg
push
mov
ret
and
movsb
jmp
jg
scas
push
fnstenv
xchg
adc
scas
mov
bound
or
es
jecxz
outsl
mov
jg
in
sarb
dec
mov
call
mov
xor
cwtl
test
ljmp
sti
mov
das
test
push
jmp
inc
mov
rorl
push
cltd
sbb
push
inc
pop
aad
es
and
and
xchg
cmp
push
jno
jp
push
push
lret
sub
jne
loop
adc
rolb
fs
push
cmc
add
les
repnz
cwtl
push
xchg
xchg
ss
inc
inc
fnstcw
out
add
cmc
push
fs
add
mov
jmp
pushf
adc
stc
cmpsb
je
fnstenv
je
movsl
lea
ficoml
dec
lea
mov
ret
std
xor
mov
xchg
or
aas
cmpsb
outsb
mov
jae
jo
pop
in
sub
pop
xchg
lea
jne
bound
or
xchg
mov
lret
push
lock
jno
mov
mov
in
xorb
int3
sub
fidivs
and
mov
sbb
cld
mov
aaa
out
mov
sbb
addb
or
adc
xor
in
or
xchg
in
sub
aam
adc
mov
and
das
int
aam
popa
xor
mov
pop
loop
cmp
xchg
xchg
arpl
ficoms
adc
cmp
arpl
adc
es
adc
std
sub
sbb
std
xchg
cmp
ja
add
js
popf
fsubrl
push
dec
ljmp
and
sbbl
insb
outsb
lods
mov
xchg
mov
adc
xchg
push
and
aam
flds
and
stos
mov
in
xor
sub
push
or
dec
pop
jg
shlb
push
sub
xchg
pushf
push
push
mov
cmp
in
push
popa
dec
mov
loope
push
addb
test
test
sub
push
sbb
ds
ds
das
push
mov
std
mov
stos
les
adc
jbe
cltd
jnp
loopne
xchg
sub
divl
fwait
mov
call
rol
gs
es
mov
and
and
dec
imul
xchg
sub
inc
nop
stos
aad
nopl
and
lds
mov
xor
and
mov
pop
jne
add
nop
mov
mov
cli
jmp
xchg
mov
test
cmp
enter
jg
pop
movb
mov
addr16
sub
dec
mov
jno
push
mov
push
pop
popf
ja
jae
dec
or
adc
ret
jecxz
add
mull
mov
and
popf
test
fadds
or
mov
loope
ret
inc
daa
clc
cmp
sbb
ds
pop
push
mov
das
insb
loop
mov
sarb
mov
rcrl
in
jae
out
push
xor
int3
xor
lods
jecxz
in
pop
mov
leave
mov
fstl
adc
outsb
out
ret
jle
pop
leave
orb
pushf
bound
mov
cwtl
dec
cmp
daa
add
cmpl
dec
push
push
scas
and
xlat
adc
dec
xchg
sbb
mov
std
lea
mov
pop
pop
jae
mov
pop
cmp
cmp
pop
movsl
xchg
push
cmpsb
cmp
dec
loop
fsubl
push
ret
pusha
repz
push
push
aad
mov
movsb
jnp
in
mulb
jnp
adc
cltd
mov
pop
idivl
cld
lods
sub
subl
fsubrs
stos
hlt
add
cwtl
mov
out
and
iret
call
ljmp
stc
popa
out
mov
mov
xchg
and
and
sahf
pop
sar
daa
rolb
ret
mov
in
js
mov
mov
inc
mov
aad
mov
test
fidivs
push
lahf
movsl
pop
or
test
outsl
adc
xchg
mov
dec
jnp
pop
lahf
iret
inc
inc
pop
mov
out
fnstsw
or
fistpl
cmp
jne
push
outsb
xchg
je
popa
lret
fs
push
xlat
loopne
add
mov
cli
enter
cmpsb
mov
sbb
xor
adcb
mov
pop
and
lods
mov
out
inc
pop
mov
ds
push
addb
sbb
jecxz
test
jmp
test
mov
add
leave
jne
sti
push
rcll
stos
sub
shrl
sub
cs
out
mov
xor
xor
aad
repz
stos
cmp
arpl
ljmp
lret
adc
inc
sbb
fstpt
or
sub
lret
mov
xor
loope
outsb
test
pop
loopne
mov
inc
movsb
jl
inc
pop
clc
dec
ds
mov
mov
jo
mov
aaa
mov
mov
xor
fs
cmc
lods
dec
mov
pop
les
movsl
sub
enter
dec
mov
sbb
shrb
and
push
jecxz
dec
jo
inc
jns
insb
pop
movsl
cli
iret
loop
das
lods
andb
mov
cmp
jo
inc
loope
mov
sar
pop
cli
js
stos
xor
fidivrs
movsb
addb
rcrb
jle
repz
xchg
mov
add
jno
int3
fsubs
pop
or
mov
mov
clc
sbb
out
xor
sbb
outsl
jne
jne
into
sbb
lcall
jb
mov
dec
mov
and
mov
push
lds
adc
or
insl
inc
xor
adc
iret
inc
pop
ret
sub
enter
inc
sahf
xchg
cmp
scas
mov
out
inc
mov
pop
mov
or
adc
in
cld
and
mov
pusha
dec
push
fcompl
push
lret
xchg
add
adc
mov
std
out
gs
mov
in
test
mov
push
popa
push
mov
pop
loope
sub
das
sahf
push
mov
adc
sub
sbb
fdivrs
dec
bound
xor
push
cmp
sub
and
in
inc
movsl
enter
dec
ret
pop
and
xchg
stos
out
adc
pop
dec
adc
xchg
cs
or
add
xchg
adc
jge
std
cltd
xchg
jb,pn
fadds
fcoml
add
shrb
das
into
insl
jecxz
mov
sbb
leave
cmpsl
jo
test
cltd
jecxz
cmp
fstp
push
nop
push
or
lret
add
jae
cld
inc
and
jbe
inc
jb
lods
dec
push
adc
dec
lret
adc
and
jp
subb
push
stos
and
clc
or
neg
xchg
xor
lods
pop
popa
ss
je
mov
aas
and
xor
sub
inc
xchg
hlt
sub
inc
jle
pop
jecxz
dec
or
xor
mov
xchg
push
scas
sub
call
xor
call
pusha
push
xchg
xor
insb
add
jecxz
fwait
pop
test
xchg
xor
ljmp
out
lcall
fildll
ret
push
imul
cmp
pop
sub
cmp
lods
jne
mov
clc
sti
jbe
stos
scas
mov
jbe
gs
xchg
jne
xchg
adc
fisubl
pop
adc
clc
push
outsb
mov
jne
mov
scas
xorl
xchg
divb
inc
jo
adc
daa
jne
or
add
ret
pop
ret
cmp
rcll
fsubs
sub
inc
lods
push
mov
movsl
sbb
xchg
in
lahf
pop
enter
xor
test
pushf
lret
mov
repnz
push
jo
das
sbb
xor
cmp
cld
or
mov
enter
push
and
xor
cltd
fbstp
lcall
or
adc
sahf
js
imul
ja,pt
repz
call
outsl
fdivrp
mov
or
add
sub
xchg
jb
mull
pop
mov
xor
and
fiadds
testb
sub
push
subl
int
movb
pop
adc
dec
out
xchg
pop
dec
fisubrs
es
call
into
mov
mov
sbb
cld
pop
push
xchg
adc
jecxz
sub
mov
xorb
cli
std
and
inc
xor
lods
mov
cmc
loop
mov
add
in
aas
ljmp
sub
in
repz
das
nop
mov
aas
dec
daa
pop
call
sbb
adc
fsts
pop
push
sbb
mov
mov
mov
push
pop
test
mov
jnp
rorl
and
inc
mov
jae
xchg
xor
out
movsb
push
outsl
push
out
mov
jno
sbb
data16
aaa
scas
lods
mov
test
ss
xor
cmp
xorl
shll
outsb
pop
mov
andb
dec
jae
out
cmpsl
push
iret
dec
test
pop
sti
sub
stos
andb
sbb
lcall
jge
cmpsb
scas
fcoms
fimull
add
inc
xchg
add
call
fwait
popa
mov
pushf
int3
pop
lods
cli
pop
add
stos
aad
xchg
jae
movsb
xchg
ljmp
and
fsubrp
lea
or
gs
pop
arpl
mov
outsb
fidivs
pusha
jns
into
sub
lahf
jb
sub
dec
test
inc
fimull
stos
sub
call
xor
adc
mov
imul
push
fdivl
outsl
mov
sub
les
dec
lcall
xor
adc
xlat
popa
pop
add
stos
or
outsb
fldt
repz
fistps
push
mov
icebp
clc
jmp
dec
mov
jp
out
pop
jmp
or
adc
loope
iret
xchg
inc
inc
in
cmp
xchg
test
cltd
mov
xor
adc
cmpsb
mov
loopne
inc
jecxz
sbb
dec
add
dec
adc
mov
int
sbb
lds
mov
push
daa
mov
or
push
loopne
ret
and
sub
lcall
pop
dec
adc
jp
or
cld
out
lahf
aad
inc
in
adc
int
loop
mov
shll
and
lcall
xor
xchg
mov
aam
push
fwait
push
mov
ret
pop
bound
cmp
sub
rcr
dec
adc
rcl
push
cld
rcrl
mov
pop
out
repz
repnz
neg
sti
add
clc
jns
lock
pop
mov
in
ss
xchg
bound
andb
dec
xor
lahf
jmp
scas
bound
push
testb
sti
mov
pop
shr
push
mov
sub
jae
xor
inc
mov
sbb
js
stc
jae
add
bound
mov
xchg
xor
pushf
inc
or
dec
jb
mov
movsb
sub
pusha
and
or
cmpsb
loop
mulb
cmovge
lahf
jecxz
cmpsl
imul
out
aam
movsb
xchg
pop
sbb
gs
outsl
pop
mov
ja
add
std
loop
push
dec
mov
add
push
or
stc
popa
cmp
notl
repz
dec
mov
fldl
insb
push
aaa
shlb
mov
mov
inc
mov
movsb
scas
aaa
adc
pop
cmpsb
or
stc
sub
push
fwait
add
stos
dec
sahf
add
and
add
push
adc
sub
aam
cmp
xchg
mov
out
push
push
hlt
cli
aad
in
movsl
stos
fistps
and
cmc
adc
mov
mov
fdivp
ret
mov
mov
and
push
xor
stos
cwtl
sbb
rcr
jmp
je
testl
xchg
imul
out
leave
jns
add
fcmovnb
and
mov
cmp
call
jmp
inc
xchg
sahf
mov
dec
dec
sbb
pop
sbb
outsb
cmp
pop
pop
dec
xor
push
mov
hlt
add
and
jmp
pop
dec
fs
movsl
jmp
inc
sbb
je
or
mov
jmp
mov
cmp
fmuls
pop
pop
ficompl
int
dec
lds
jp
out
int3
sbbb
sub
cs
pop
xchg
xor
mov
bound
push
sub
sub
or
in
sbb
testl
das
cmpsb
cs
popf
or
out
iret
fbstp
push
mov
insb
and
and
jno
xchg
mov
dec
ljmp
inc
in
out
sbb
pop
inc
push
int
pop
leave
cmpsl
fimull
sub
adc
pusha
movsb
jbe
fwait
or
movsb
xor
sbb
scas
xchg
or
test
xchg
out
adc
aad
mov
ljmp
test
push
test
aam
es
and
subb
in
sbb
mov
loope
mov
cmp
lods
fimuls
in
movsb
leave
imul
cmp
sub
subps
ret
cld
mov
int
das
dec
or
add
ficoms
mov
sbb
mov
rorb
out
in
jle
icebp
sbb
iret
and
push
push
jbe
into
adc
enter
data16
push
test
adc
jge
sbb
outsb
mov
add
bound
mov
inc
inc
pop
sbb
sub
jg
xchg
xchg
fimull
in
insb
add
add
push
add
adc
pop
jecxz
aam
push
inc
xchg
bound
mov
stos
inc
lret
mov
dec
mov
inc
sti
inc
cld
pushf
aad
outsl
or
outsb
adcl
in
pusha
pop
and
std
jecxz
cld
and
ljmp
sti
lcall
orl
pop
and
or
cmp
loopne
mov
pextrw
and
data16
xor
mov
cmp
dec
push
push
jl
lret
and
push
xchg
loopne
mov
pop
cmp
mov
cli
aam
inc
ds
jns
mov
xorb
xchg
sub
inc
mov
lahf
dec
dec
push
mov
cmpsl
ret
jmp
xor
mov
stc
adc
sub
jle
jmp
int
inc
dec
mov
cmpsl
xchg
sub
cmpsb
ror
imul
repz
scas
and
jp
pop
or
dec
fmull
add
push
dec
testl
movsl
loop
add
xor
xchg
xlat
xor
xchg
pusha
push
das
xor
xchg
ret
xor
add
ja
or
adc
shll
sbb
xchg
add
rcrl
ret
fwait
sahf
jmp
push
xor
sub
popf
push
mov
pop
pop
ljmp
or
add
je
cmp
sar
and
outsb
mov
imul
popf
push
cmpsl
pusha
inc
lods
roll
dec
push
gs
ss
pop
mov
leave
les
lods
fwait
scas
sbb
adc
cmpsb
ret
repnz
lock
jbe
mov
int
adc
xchg
push
lret
test
push
js
inc
xor
dec
sbbb
sbb
xor
test
mov
inc
in
and
cmp
popa
jp
jg
cld
imulb
fdivs
or
aas
mov
gs
jnp
in
add
jg
mov
dec
dec
sub
mov
fldl
cmp
dec
xchg
adc
leave
mov
push
ret
sub
sahf
jl
dec
shl
adcb
loopne
xchg
out
int3
adc
std
dec
jmp
pop
or
es
repz
or
pop
dec
jo
stos
icebp
mov
jg
add
pop
mov
adc
mov
adc
jbe
loopne
cmp
lcall
push
scas
ss
inc
dec
push
cmp
lret
out
stos
xchg
sar
jmp
xchg
fisubrl
xor
mov
call
mov
or
adc
repnz
mov
aad
or
mov
mov
mov
nop
xchg
or
push
test
mov
inc
das
xchg
popf
fcomp
push
pop
lds
sub
cmc
enter
scas
popa
sarl
das
daa
xchg
mov
loopne
in
xor
push
push
inc
or
bound
fimuls
sarb
es
ljmp
stc
loop
cmpsb
test
fwait
push
mov
addb
xor
mov
enter
cmpsl
mov
or
fisttps
ljmp
xchg
test
les
cmpsb
sti
adc
stc
or
xchg
jle
mov
mov
pop
repz
jo
sub
orb
push
and
push
xor
xchg
adc
ljmp
fcomps
scas
loope
jle
dec
ret
mov
loop
and
loop
dec
jmp
cltd
dec
dec
add
je
pop
jmp
icebp
dec
sbb
and
pop
fidivl
ret
test
adc
adcl
xchg
jp
push
aas
cmp
xor
or
daa
ret
mov
clc
insl
iret
inc
push
cmp
fidivrl
add
lahf
sahf
add
mov
js
pop
data16
popa
in
mov
sub
adc
inc
mov
jns
inc
mov
jo
adc
cld
mov
mov
add
out
addr16
popl
mov
adc
mov
orb
call
sbb
negb
mov
xor
inc
out
pop
orb
jge
jno
add
cld
lods
orb
lcall
vpunpckhdq
xor
loopne
mov
sub
xchg
imul
push
lahf
cmp
pop
rcl
data16
test
pop
push
es
testl
pop
add
rcr
pop
sbb
xchg
cmp
cmp
push
adc
adc
popa
push
sub
pop
push
adc
mov
hlt
iret
je
cli
lret
or
or
mov
popf
pop
out
push
sub
jno
or
popa
mov
in
jge
popf
test
pop
push
inc
in
sub
pop
inc
jge
ror
nop
inc
mov
pop
gs
add
lods
jnp
push
es
shr
mov
jle
leave
ljmp
pop
cmc
repnz
aas
outsl
ret
lods
insb
ljmp
stos
cs
jle
fidivs
dec
lock
xchg
adc
jecxz
lods
sbb
gs
push
inc
pop
xor
dec
fisttpll
or
jmp
test
negl
push
movsb
jo
push
aam
movsb
stos
push
aam
dec
add
sti
repnz
insl
sbb
push
cli
fistps
leave
popa
mov
mov
inc
and
push
mov
pop
push
add
test
add
test
inc
adc
popa
and
and
pop
push
mov
mov
mov
in
xchg
inc
rorl
pop
outsl
lock
adc
cmp
mov
js
sbb
push
xchg
test
inc
xchg
or
mov
fwait
pop
aam
xor
scas
outsl
xchg
push
cli
add
in
fld
adc
sub
jp
shrl
add
cs
jno
test
xchg
test
imul
lock
or
jae
xorl
ss
jo
ja
push
mov
xchg
fwait
movsl
dec
lods
xor
push
dec
lds
pop
scas
push
insl
arpl
cmp
fdivl
not
in
insb
lret
inc
lcall
lock
enter
push
stos
cmp
clc
out
int3
pop
xchg
mov
mov
jmp
push
scas
clc
lcall
movsl
xor
push
adc
test
in
inc
pop
fadds
int3
pop
out
jns
jmp
cmp
dec
ret
loopne
in
jns
push
mov
hlt
mov
js
jne
mov
fidivl
lcall
jecxz
movsl
loopne
mov
push
xor
mov
pop
jecxz
test
fistps
xor
dec
jb
or
pop
ss
jne
mov
int3
movsb
fst
rclb
add
cmpsb
inc
xlat
mov
lahf
and
xchg
xor
sub
inc
leave
add
mov
cmpsb
sub
ljmp
rolb
stos
or
mov
mov
sub
mov
movsb
mov
sub
clc
xor
push
imul
cmp
hlt
cmp
mov
ret
or
jno
cmp
xchg
mov
scas
mov
js
mov
insl
jle
mov
nop
cmp
iret
fildll
call
push
jno
pop
push
pusha
pop
dec
pop
ja
pop
in
push
pop
sbb
clc
outsb
adc
nop
jns
add
adc
and
flds
push
repz
or
xor
pop
call
or
in
rcl
pop
and
mov
test
imul
mov
aaa
in
mov
cli
std
mov
movsl
inc
xor
ret
lret
push
rcrb
sbb
into
in
and
gs
mov
and
jecxz
repnz
jnp
dec
cltd
cmp
jno
xor
push
hlt
fwait
jmp
cmpsb
add
int3
jg
sbb
test
nop
scas
ror
lret
mov
nop
sub
xchg
add
jne
mov
xor
inc
mov
orb
aad
push
add
jae
aam
daa
aad
xchg
pop
jp
mov
cld
out
loopne
pop
sbb
mov
fcoms
ds
add
shlb
cltd
in
jbe
inc
cmp
fwait
xlat
fidivrl
fildll
mov
stos
xchg
shll
filds
in
pop
add
xchg
mov
fsubrs
daa
insl
out
cmp
mov
xchg
mov
xor
mov
scas
cli
insl
xchg
lea
sbb
icebp
xchg
or
pop
hlt
fucomp
mov
testl
inc
enter
cld
std
jno
sub
test
jo
fwait
xchg
call
lcall
es
adc
int
in
out
add
adc
xchg
idivb
fs
mov
pop
dec
mov
in
push
aaa
aad
imul
das
fisubl
mov
xlat
cmc
mov
xor
js
hlt
push
pop
jo
adc
inc
push
es
aas
xchg
dec
roll
xlat
xor
imul
push
push
add
adc
sti
xor
cmp
jge
dec
mov
sbb
push
rolb
pop
adc
fdivrl
dec
int3
test
iret
and
push
lcall
sbbl
push
mov
add
mov
or
inc
cmp
xor
add
adc
subb
ret
cmp
cmp
sub
rcrb
mov
cmp
fcomps
aad
aas
xchg
inc
ret
into
lea
fldt
pop
les
into
stos
xchg
inc
das
in
xor
lds
in
xchg
daa
cmp
shrl
mov
pop
shll
pop
in
icebp
out
xchg
sub
adc
aam
mov
out
xchg
jne
xchg
jae
xor
pusha
dec
sarl
add
cld
mov
xchg
xor
xlat
loope
cmp
add
add
pop
lock
adc
push
fwait
test
shrl
or
cld
pop
mov
xchg
pop
dec
inc
jne
adc
push
rol
xor
cmpsb
pop
test
or
mov
push
shlb
push
ja
xchg
jnp
jnp
mov
mov
cmp
mov
and
scas
or
pop
mov
out
pop
xchg
pop
out
mov
pusha
out
pop
ret
jle
enter
xor
out
mov
xchg
ja
pop
fists
jl
test
rcll
jle
mov
xlat
aas
cmp
sbb
jl
mov
clc
push
or
sysret
mov
xchg
fs
movlpd
or
frstor
repnz
pop
loopne
cmc
cld
cmp
or
inc
push
push
in
data16
jo
lock
push
ret
fnstcw
push
cmpb
mulw
insb
cmp
aad
insl
mov
jo
les
push
clc
mov
loopne
loope
add
movsb
cmp
and
or
push
test
jnp
fldenv
jle
movsl
test
cltd
jge
stos
test
inc
cmp
test
adc
adc
push
daa
stos
sarb
js
shl
mov
gs
sahf
mov
das
push
jae
movsl
adc
jnp
movsb
hlt
pushf
fmuls
cmp
adc
cmpsb
scas
xor
mov
cmp
add
aad
jmp
in
mov
dec
adc
ja
push
imul
and
mov
cltd
cmp
imul
sbb
dec
inc
mulb
sbbb
push
push
xor
outsb
pushf
scas
push
ja
jnp
xor
movsb
cmpsb
mov
ja
call
mov
adc
repz
int3
xor
mov
lret
dec
insb
aaa
add
sbb
cmc
arpl
std
mov
repz
mov
jmp
in
jo
test
jp
es
insb
mov
std
cmpsl
ret
adc
fnstsw
clc
add
clc
mov
or
adc
test
ficoms
inc
outsl
xchg
jl
insl
dec
mov
mov
mov
jb
je
idiv
sub
hlt
loop
mov
subb
cs
movsb
mov
jmp
cmpsl
shll
and
adc
pop
inc
xor
jl
lock
std
sbb
cmp
cmc
jecxz
push
loope
jl
daa
sbb
bound
das
fadds
adc
aas
or
mov
sub
stos
call
xchg
push
xchg
ret
in
dec
aas
scas
mov
icebp
lods
mov
sbb
sbb
jl
inc
pop
xchg
call
xchg
add
loope
in
outsb
sub
scas
xorb
mov
xchg
cltd
je
js
imulb
aad
clc
and
mov
lea
popa
outsl
pop
and
xor
movsl
pop
cmp
or
ret
xchg
bts
mov
push
jecxz
in
rcrb
imul
and
and
test
ja
xchg
mov
jne
inc
loopne
xchg
or
adc
pop
fcoml
lret
popf
test
fistpl
cli
scas
mov
adc
push
fistpl
addr16
dec
int
es
push
xchg
adc
test
int
imul
push
xchg
rolb
add
lods
or
sbb
ret
and
outsb
xchg
push
dec
sbb
adc
and
xor
lahf
adc
adc
inc
inc
and
outsl
cltd
push
or
sub
jae
jno
cmp
mov
in
mov
shll
add
pop
xchg
clc
mull
adc
je
lds
divb
push
div
adc
adc
outsb
pop
pop
mov
js
cltd
sar
stos
adc
mov
sub
out
mov
lock
and
daa
adc
pop
insl
lahf
popf
mov
or
hlt
outsl
addr16
xchg
orl
bound
fistl
or
mov
mov
daa
pushf
movsl
sbb
push
sbb
adc
sub
jp
or
aam
mulb
mov
inc
das
xor
inc
jle
cwtl
pop
jne
aas
sbb
bound
cmp
js
xchg
jno
movsb
test
push
insb
dec
cmp
inc
inc
pop
jmp
sbbb
out
add
jmp
je
cli
into
fnstcw
insb
loop
and
dec
clc
out
stos
inc
mov
es
jmp
inc
out
xor
dec
pop
imul
leave
js
imul
xchg
mov
ficoms
js
popf
mov
in
nop
fincstp
lods
ss
fs
imul
mov
inc
push
fcoms
cmp
int
dec
sbb
orl
sbb
in
inc
imul
movsb
add
outsl
fidivl
insl
insl
mov
mov
push
lret
outsb
lods
repnz
or
rcr
test
xor
pop
push
mov
cmpsl
adc
or
inc
cld
and
mov
fcomps
mov
sbb
aam
mov
mov
imul
test
sbb
cmp
dec
out
movsb
imul
add
shlb
out
cwtl
orl
push
int3
pop
outsb
rorl
add
xor
mov
adc
lods
push
add
subb
orb
stos
fsubl
xchg
or
jbe
jns
imulb
xchg
sub
jnp
cs
cmp
mov
jge
cmp
into
outsb
adc
inc
mov
shll
xchg
loope
cmp
imul
les
aad
fisttps
xor
loopne
jl
mov
mov
sahf
mov
mov
jl
ja
sti
sbb
xor
xor
pop
popa
jb
outsl
or
and
xor
mov
sbb
in
repnz
imul
daa
je
dec
and
repnz
sbb
dec
jge
mov
jbe
das
sub
fdivs
pop
insb
pop
mov
fdivrl
add
xorl
jl
jno
pop
test
add
or
jns
rclb
cld
loope
mov
jmp
jmp
call
cmpsl
divb
aaa
repnz
fs
lock
mov
xchg
fwait
in
cmp
jbe
add
inc
pop
xor
das
mov
mov
in
jns
aaa
or
lret
mov
test
jne
enter
push
clc
iret
neg
and
sub
jnp
dec
and
xor
jb
int3
scas
cwtl
ljmp
jnp
ljmp
in
cltd
lods
jb
lods
js
add
dec
loopne
or
mov
repnz
mov
inc
cmp
cld
js
or
mov
cmp
fs
or
pop
jo
or
pop
inc
jne
mov
repz
ficoms
stos
inc
sbb
adc
mov
xchg
inc
xchg
fwait
cltd
in
ljmp
mov
roll
repnz
fistps
cmovp
cs
cmp
pushf
xchg
sbb
sub
add
pop
lea
rol
xlat
xchg
jae
push
ljmp
stos
cli
mov
cwtl
jbe
scas
push
movsb
das
pop
push
stc
or
push
jb
jge
jg
out
outsb
fwait
andps
aaa
xchg
xor
insl
or
mov
mov
sahf
roll
imul
test
push
jg
outsb
mov
mov
scas
sub
sub
test
inc
push
fcos
mov
repnz
lcall
ret
mov
fs
xlat
fisubl
lds
arpl
insb
xchg
movsl
dec
sbb
adc
nop
or
xchg
jecxz
xor
ja
aad
stc
mov
pop
push
inc
int
pop
lret
sub
pop
cs
cmp
mov
or
adc
popf
push
mov
and
pop
push
in
cmp
mov
into
out
icebp
lods
sbb
roll
in
cs
mov
in
fsubl
lret
jne
adc
leave
scas
cmpsl
push
xchg
jl
push
je
testb
jmp
adc
dec
xchg
lret
jecxz
or
sti
xchg
pop
shll
aad
mov
jle
dec
popa
andb
jb
enter
js
mov
or
mov
jl
test
jmp
adc
xchg
push
gs
test
stc
add
std
loope
cmpsb
mov
push
adc
jmp
mov
lcall
repnz
xor
stc
sub
mov
mov
pop
fsts
xchg
sub
push
or
and
xchg
add
cli
cld
inc
arpl
aaa
cwtl
cltd
out
adc
notl
or
jmp
mov
push
leave
and
int3
repz
aaa
int
ret
das
mov
mov
sahf
pop
sahf
cmpb
in
push
out
iret
inc
iret
or
out
andb
sub
f2xm1
mov
jns
mov
fmulp
cli
xor
jns
jg
insb
mov
sbb
aas
sti
sub
insl
mov
pop
outsl
and
sub
inc
sbb
outsb
lahf
stos
mov
mov
iret
jb
loopne
fcmovu
xlat
mov
and
pop
out
sti
ds
inc
pop
sub
dec
xor
fldl
gs
jbe
mov
rclb
and
adc
test
dec
adc
pop
sub
andb
lret
pushf
int3
push
movsb
jbe
or
jl
pop
mov
stos
or
pop
xor
call
push
insl
ljmp
mov
ljmp
shlb
cmpsb
sub
cs
push
test
fdiv
mov
fcom
shll
scas
xchg
push
jo
outsl
jp
xor
inc
sub
adc
cs
int
es
mov
loopne
lods
sub
pop
lahf
fistpll
fisubl
clc
mov
insl
mov
enter
pop
pop
jne
insl
add
fstps
imul
popf
dec
sti
sbb
in
cmpsb
sub
loopne
dec
mov
jno
jl
adc
lods
and
stc
xor
sub
into
mov
and
jbe
mov
rolb
xor
cmp
sbb
mov
dec
loop
mov
adc
push
mov
jns
das
fsubl
mov
je
jne
fdivl
mov
cltd
or
jbe
mov
das
pop
enter
test
fcoms
and
or
cmc
mov
test
xchg
xchg
cmp
popf
std
or
sub
sub
cmp
daa
sbb
add
stos
cmp
jne
imul
shll
addb
pop
mov
in
adc
pop
fsubrl
xchg
sti
xchg
jae
popa
lea
and
mov
push
int
int
das
cmp
mov
jae
push
pop
adc
cs
fidivrl
sub
ljmp
rclb
clc
sub
xchg
hlt
and
mov
int3
sti
negb
leave
adc
es
loop
push
ret
sub
inc
aas
sub
pop
mov
dec
sbb
gs
pop
mov
sbb
mov
adc
dec
mov
xor
lds
stc
mov
aam
sub
cmp
jmp
dec
leave
ss
rcrl
int
xchg
loop
outsb
push
cmp
leave
inc
jp
fstp
mov
jb
mov
pusha
clc
mov
mov
xor
pop
dec
decl
jp
xor
sub
andb
or
mov
out
push
cmpsl
sahf
lahf
mov
lods
in
int3
dec
push
imul
lret
sti
roll
int3
insl
in
int3
std
mov
sbb
sbb
push
fsubr
int
into
test
dec
leave
xchg
pushf
scas
js
push
jmp
mov
adc
jmp
mov
test
push
add
repnz
push
lret
mov
rcl
xchg
or
xlat
mov
shrl
adc
push
jp
push
insb
fwait
je
leave
icebp
ss
ss
add
cli
pop
push
enter
sub
in
test
sub
dec
clc
adc
jl
cli
fwait
sub
int3
mov
mov
cmc
mov
adc
into
aam
icebp
in
and
mov
push
aas
cwtl
mov
repz
repnz
fldl
out
or
ja
imul
inc
mov
mov
sbbl
mov
movsl
insl
adc
pop
stos
mov
jns
pop
insb
sub
iret
and
xor
cmp
jle
in
xchg
add
outsl
jecxz
jecxz
sbb
imul
imul
push
out
imul
add
jmp
cmpsb
leave
in
jb
sti
repnz
sub
cwtl
adc
sbb
jae
pop
xor
push
fidivrl
int3
dec
jnp
scas
je
mov
mov
repz
adc
mov
mov
mov
push
dec
shld
jnp
pop
sbb
push
pushf
lods
enter
and
scas
adc
mov
xor
imul
mov
dec
push
cmp
xchg
mul
shll
ds
sub
xor
test
psllq
push
jl
dec
or
cs
fsubl
xor
add
add
lock
ds
lds
inc
out
push
sbb
adc
mov
sub
inc
fidivs
insl
outsb
sbbl
mov
push
lahf
or
jp
sbb
les
mov
mull
xchg
push
int3
mov
ficomps
scas
rcll
sarb
inc
insl
gs
sbb
pop
out
cmpl
adc
pusha
popf
daa
iret
push
pop
adc
sahf
sub
int3
jmp
xlat
mov
cmpsb
xchg
inc
lds
ja
loope,pn
es
out
int3
pop
jne
std
ror
dec
cli
sub
adc
jo
cmp
dec
xor
lcall
mov
fnsave
test
scas
xor
jae
std
dec
imul
mov
xchg
out
fsubrs
xor
jb
lret
push
mov
sbb
lea
xchg
popf
cmp
xchg
sub
imul
inc
add
arpl
enter
loopne
imul
fwait
add
mov
xchg
aad
inc
mov
sub
lods
cmc
pop
jg
ret
int3
mov
mov
sbb
lea
fisubs
mov
int3
in
fwait
test
je
lcall
xor
fwait
int3
leave
mov
jmp
xor
ss
mov
js
xor
adc
add
add
mov
test
cmp
dec
sbb
mov
sub
aaa
mov
mov
adc
in
or
out
shrl
ljmp
daa
andb
daa
add
mov
scas
mov
pop
xor
cmpsl
inc
jge
sti
popa
mov
repz
ret
outsb
shll
sbb
scas
push
cltd
stos
push
addr16
mov
out
add
fcomps
pop
sbb
inc
lret
orl
insl
jns
aas
loopne,pt
xchg
in
out
daa
xchg
es
add
push
fwait
pop
mov
jmp
or
push
aam
xor
popf
aad
add
into
stos
sbb
clts
ljmp
lea
and
lret
and
cmc
pusha
in
aas
jae,pn
add
lods
mov
outsb
inc
dec
cmpsb
out
iret
pop
mov
fnstsw
into
add
fldpi
mov
mov
push
and
pusha
jns
sbb
add
lret
std
pop
pop
loopne
outsl
test
adc
insl
cmp
insb
jmp
jle
hlt
adc
sub
iret
mov
sar
inc
mov
loop
mov
or
inc
adc
add
test
mov
lds
mov
adc
mov
adc
xchg
add
sub
add
dec
cmpsl
sbb
shl
push
jle,pn
fists
and
xchg
inc
faddl
xchg
jne
ret
jge
out
das
bound
pusha
aad
or
or
mov
or
fcompl
pop
jae
or
dec
mov
lock
jge
addr16
sub
hlt
pop
push
xchg
pushl
dec
sbb
cwtl
es
sbb
shrb
dec
jle
insl
repnz
out
jecxz
mov
test
sub
pop
shlb
into
xchg
iret
inc
loopne
or
out
outsl
add
add
jnp
out
jb
adc
adc
rcll
jge
cmpb
jmp
xor
lds
xchg
push
mov
inc
shrl
inc
dec
pushf
js
call
clc
jecxz
loop
loop
xchg
icebp
mov
cmp
mov
lret
outsl
decl
outsb
jg
jl
pushf
pop
int3
in
jle
dec
mulb
cs
loop
mov
jecxz
aad
push
dec
dec
or
pusha
incl
loope
push
jl
inc
lahf
xchg
inc
test
cmp
jecxz
xchg
adc
fsubrs
stos
add
and
cmp
xchg
dec
push
adc
sbb
out
test
data16
jo
stc
pop
push
fstl
xlat
dec
push
push
aad
push
outsl
mov
adc
rcrb
inc
mov
mov
cltd
loop
sbb
ret
mov
out
stos
sbb
movsl
fstl
push
xor
dec
mov
or
cmpsl
cli
outsb
push
dec
daa
clts
je
sbb
lods
adc
inc
mov
add
mov
mov
lods
movsl
or
js
jecxz
insl
cmp
mov
adc
add
dec
ret
mov
dec
sbb
imul
pop
add
test
mov
psubsw
add
or
arpl
jl
add
nop
sub
sbb
adc
xchg
and
std
jae
push
imul
or
dec
xor
scas
pop
sbb
mov
hlt
lock
pop
scas
dec
inc
mov
jmp
mov
out
or
mov
dec
int3
sbb
fwait
cmp
cld
mov
and
dec
or
sbb
and
out
imul
mov
data16
icebp
pop
mov
stc
push
jne
testl
dec
daa
sbb
or
daa
push
mov
cmc
push
movsb
pop
lahf
jbe
mov
add
shr
and
cmp
icebp
fmull
pop
dec
sar
repz
push
sbb
lret
or
jg
jg
lret
mov
loope
ret
or
insl
jecxz
cli
sbb
sbb
pop
lods
pusha
xchg
and
sub
insb
mov
push
add
shll
sbbb
pop
int
orl
sbb
cmp
dec
jo
add
mov
sub
test
pop
cmpsb
dec
jno
cli
xor
mov
ss
mov
loop
xchg
in
xor
ja
add
pop
or
mov
sbb
or
mov
xchg
sti
pop
cmc
in
push
cmp
push
dec
fmull
mov
dec
imul
enter
mov
jmp
mov
cld
push
lcall
add
push
es
out
in
sbb
xor
xchg
jl
jmp
hlt
movups
out
xor
outsb
mov
and
ret
jmp
out
xchg
pop
pushf
cli
mov
xchg
push
or
pop
rcll
xchg
jg
dec
xchg
out
lret
push
out
mov
push
ljmp
fstpl
adc
out
mov
loopne
scas
inc
mov
push
aad
adc
or
notb
adc
pushf
sbb
repz
testl
xor
mov
and
fisubrs
mov
push
cltd
mov
imul
fcmovu
out
fsubs
mov
jp
test
sub
push
je
lock
outsl
xchg
ret
fs
cmp
pop
xchg
cltd
xchg
jbe
das
loope
push
inc
stos
pop
iret
push
pop
loope
and
out
imul
insb
inc
lret
and
inc
xchg
sub
jmp
insb
es
fwait
lock
ret
xor
adc
push
pop
das
outsl
into
int3
mov
xor
cmp
mov
mov
lea
decl
cmc
sub
aad
dec
push
cmp
mov
test
xor
lea
mov
jns
jecxz
aas
lret
outsl
jno
loopne
jp
mov
pop
daa
addb
push
jb
mov
je
inc
fistl
mov
and
mov
add
lock
sub
ja
jae
jmp
pop
in
lret
repnz
rcll
ds
test
pop
in
shl
jne
int3
xchg
add
incb
mov
sbb
scas
movsb
int
push
enter
mov
je
test
jno
ss
cmpsl
jno
ds
xchg
daa
mov
rcr
cmp
test
ret
or
pop
stos
pop
or
push
jge
popf
push
scas
aaa
xor
sub
inc
push
inc
aad
cmpsb
push
push
xchg
aad
mov
notl
ss
pushf
jle
adcl
test
pop
call
mov
repz
and
jns
lret
adc
rcl
add
js
push
or
ret
adc
xchg
lcall
enter
lds
mov
test
pushf
aad
shlb
popa
push
xchg
mov
leave
std
ljmp
xchg
loope
cmp
into
and
lods
xchg
adc
inc
sahf
test
in
dec
sti
stos
lods
xor
out
lds
push
xchg
inc
add
push
nop
sub
mov
rolb
xchg
clc
icebp
lret
negl
test
ljmp
out
fwait
movsb
cli
push
popa
xor
cmpsb
test
dec
in
rclb
loope
jmp
loope
sub
outsb
nop
jno
pop
insl
jns
cmc
call
push
dec
lods
adc
or
xchg
mov
push
test
testb
add
test
imul
cmp
repz
xchg
loopne
xchg
fs
das
mov
dec
xlat
ds
xchg
lods
pop
push
pop
dec
add
clc
dec
subb
ds
or
fisttpl
and
xchg
fldenv
inc
push
int
clc
jmp
xor
add
sti
or
add
adc
sbb
push
mov
clc
in
lods
hlt
stos
cld
pop
add
lea
jle
and
scas
lods
mov
mov
es
add
dec
mov
test
push
ds
or
pop
add
ret
xchg
sub
mov
and
cmp
mov
dec
lahf
sbb
push
xor
jle
insl
sub
sbbb
jns
pushf
pusha
push
fistpl
adc
les
enter
repz
push
jns
int
das
jnp
jne
iret
xor
loopne
mov
popf
insb
pushf
rcrb
xchg
pusha
add
adc
sub
sbb
les
loopne
ljmp
xor
or
les
shll
jl
add
mov
and
out
or
popa
cltd
pop
outsl
sub
clc
and
sub
jmp
out
daa
xchg
cs
or
pand
mov
gs
add
lret
loop
add
loope
bound
clc
mov
dec
xchg
jecxz
push
ja
inc
and
xor
cmp
adc
shll
test
repz
dec
or
jns
jmp
inc
insb
push
sbb
adc
sbb
fstl
mov
std
mov
push
jge
ss
gs
repnz
sbb
fwait
add
inc
xchg
inc
cmp
aam
xchg
gs
mov
leave
xor
adc
pop
lcall
jp
push
enter
and
insl
les
and
jl
push
leave
popf
movsl
gs
dec
sub
inc
movaps
inc
mov
mov
fwait
jbe
mov
jo
jp
jns
cmpsb
inc
fyl2xp1
test
sub
lods
sbb
inc
add
inc
scas
cli
sbb
push
sahf
test
mov
loop
cmp
pop
or
mov
stos
imul
clc
iret
add
cli
xchg
push
mov
fimull
jb
xor
xor
in
dec
aam
stos
fidivrl
aad
out
setno
iret
gs
adc
cld
test
dec
in
pop
mov
inc
or
idivb
int
cwtl
cmp
dec
pop
data16
inc
pop
jbe
or
popf
mov
cmpsl
push
jmp
ds
jmp
bound
addr16
mov
cmc
nop
jns
jo
and
ds
mov
sbb
cmp
cmp
lods
push
mov
fmulp
adc
pop
dec
xchg
sbb
aas
mov
adc
imulb
incl
aad
test
subb
sbb
es
ret
mov
loope
jge
test
shlb
lcall
push
mov
cmp
push
add
add
addr16
or
hlt
add
movb
cmpsl
leave
cmp
bound
out
stc
ljmp
ret
pushf
adc
sahf
pop
scas
repnz
in
lock
bound
dec
inc
sub
dec
adc
adc
fdiv
sub
ljmp
jl
cld
cmp
jecxz
test
std
stos
bound
div
leave
push
adc
xchg
mov
xchg
sbb
sub
cld
sti
mov
fs
mov
repz
inc
loopne
add
out
dec
jle
mov
fisubrl
dec
js
dec
lret
mov
xlat
shrb
mov
push
push
pop
xchg
cld
sub
jne
fs
aas
add
rolb
jmp
unpcklps
movsl
adc
mov
pop
shll
jp
in
les
pusha
fwait
out
jle
adc
rorl
ret
paddd
stos
out
pop
mov
scas
sti
adc
mov
mov
outsb
adc
sub
aam
jb
fwait
inc
pop
je,pn
scas
repz
mov
fs
out
inc
in
cli
mov
mov
in
mov
loopne
shr
clc
sub
push
push
inc
inc
add
xor
das
aaa
and
lret
das
mov
int
mov
or
arpl
mov
mov
cmp
inc
and
fisubl
or
xor
mov
cli
jbe
mov
int3
ret
or
lock
xlat
push
and
sbb
inc
insl
pop
aaa
pop
test
cltd
loopne
neg
sahf
xlat
scas
fsub
sub
pop
mov
outsb
outsl
push
cltd
lea
popf
dec
in
adc
data16
hlt
cmp
std
xchg
inc
pop
and
add
adc
test
push
ja
add
pop
inc
and
jo
dec
ret
aaa
int
jno
cli
adc
cmp
in
shlb
mov
sub
add
sbb
sub
clc
or
sbb
mov
mov
ljmp
outsl
mov
mov
icebp
sub
imul
in
out
call
mov
push
nop
ficoms
push
test
push
repnz
inc
ds
aas
lods
add
inc
fnsave
mov
cmp
addr16
sbb
inc
enter
mov
outsb
pop
dec
scas
xchg
aad
jl
sbb
inc
int3
cmp
mov
repz
sub
loop
test
pop
popf
fcoml
aaa
pop
loop
pop
inc
pop
mov
dec
sub
test
bound
push
and
pop
enter
clc
scas
xchg
sti
xchg
stos
xor
add
imul
int
dec
pop
outsb
xchg
out
push
or
scas
sub
xor
xchg
insl
adc
dec
enter
mov
mov
sbb
lahf
inc
xor
mov
pop
jnp
ss
out
or
mov
dec
rol
jg
push
inc
and
push
mov
ficompl
test
mov
pusha
mov
adc
cmpsl
or
movsl
bound
in
pop
xor
push
push
repz
pop
mov
repz
mov
sub
dec
mov
cmpsl
add
sbb
sbb
mov
mov
orl
stc
cmp
jns
movsl
pop
outsl
push
pop
push
mov
or
mov
test
hlt
xchg
fdivs
popa
sub
movsl
xchg
inc
jg
jg
sti
or
sub
ret
das
stc
jmp
imul
rorb
imul
xchg
subb
dec
and
shrl
push
fcmovne
and
inc
and
jo
das
jo
dec
fwait
mov
or
jmp
mov
out
lods
xor
xor
je
dec
fnclex
mov
rcr
mov
sbb
pop
dec
sbb
mov
or
daa
cmp
xchg
cmp
xor
ret
push
nop
cmp
sbb
fistps
cmp
sub
fldt
loop
lcall
into
cli
xor
xchg
pop
call
mov
pop
test
into
sahf
dec
fldl
jecxz
in
and
ret
inc
cltd
shlb
jle
cmpsb
call
jnp
xorl
xor
push
push
pop
sbbb
ja
inc
and
sti
xchg
insb
test
std
sbb
pop
nop
jo
scas
or
repnz
mov
test
repz
fisttpl
mov
push
dec
das
fistps
xchg
lea
loopne
leave
scas
jge
enter
mov
dec
daa
out
in
jns
jg
outsl
dec
mov
pop
int3
nop
out
pusha
lea
imul
xchg
inc
cmp
dec
out
into
jl
aad
cltd
dec
imul
lds
inc
nop
lds
push
xchg
xchg
fxam
adc
add
imul
popf
arpl
sub
repnz
adc
or
jmp
aad
add
xchg
fisttpll
imul
cmp
ficoml
lahf
xchg
test
mov
mov
push
nop
jp
in
jns
jp
dec
push
gs
fistps
ljmp
bound
inc
mov
adc
push
fdivp
jne
pop
aaa
sbb
das
daa
xchg
lds
dec
adcb
lcall
cmp
sti
push
fwait
loopew
or
test
xchg
cltd
arpl
push
pop
inc
dec
adc
jmp
scas
sbb
push
xchg
scas
decb
push
jp
mov
rclb
ds
pop
mov
lock
cld
sub
aam
add
mov
mov
clc
pop
in
in
ret
stos
jo
xor
loopne
sbb
xchg
mov
stc
dec
pop
mov
mov
lret
mov
int3
addl
jmp
psraw
jb
stos
sarl
pop
andb
popa
sarb
add
sub
mov
aam
sbb
out
add
jecxz
xchg
mov
pop
push
mov
shl
and
loope
and
das
ds
xchg
popf
call
inc
insb
fsubrs
cwtl
sub
hlt
rorb
jecxz
pop
ljmp
xor
hlt
sbb
outsl
pushf
xchg
jns
mov
fidivrl
sbb
pusha
adc
lods
push
push
jb
clc
push
inc
adc
pop
pop
cmp
cwtl
lahf
fmul
sbb
aaa
add
data16
ja
out
mov
jmp
xchg
popl
adc
call
cwtl
mov
ret
push
pop
testb
and
ret
add
test
shrl
lret
dec
lds
mov
sub
mov
cld
lea
push
lret
sub
add
iret
add
add
add
pusha
mov
lea
push
or
push
push
push
push
mov
mov
mov
and
shr
xor
sub
shr
imul
not
inc
loop
pop
pop
pop
pop
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
