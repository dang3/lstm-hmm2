mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
ret
ja
and
mov
and
or
ret
inc
sub
and
mov
faddl
out
mov
out
scas
std
cmpsb
les
or
sub
jb
gs
popa
enter
int
fisttpl
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
shll
shlb
rcrl
in
xchg
xor
inc
aad
add
cmp
pop
fcomp
scas
jmp
jae
fldcw
fidivl
fisttpl
push
add
mov
loop
jecxz
add
inc
in
out
call
imul
daa
in
pop
in
aaa
lock
pslld
scas
jmp
cmpsb
repz
cmc
sbb
add
aaa
jg
insl
fwait
clc
stc
dec
add
pop
sti
js
cld
je
mov
nop
jmp
add
nop
mov
or
adc
mov
pushl
and
daa
test
je
push
add
pop
call
mov
jmp
mov
dec
mov
inc
add
ja
jmp
loope
mov
sbb
adc
mov
jnp
negb
and
and
adc
or
and
add
mov
lcall
data16
xor
fsts
adc
or
jo
sarl
mov
idivb
sti
jne
mov
push
fsubrl
add
push
out
sbb
or
jl
jb
sbb
cltd
xchg
outsb
jnp
push
push
inc
push
adc
icebp
arpl
fisttps
inc
and
push
jb
jl
pop
ret
jmp
mov
daa
mov
or
divb
push
jecxz
call
decl
jnp
inc
mov
test
mov
jne
andb
cwtl
orb
movzbl
inc
cmp
jl
mov
pop
jg
add
adc
inc
cmp
imul
add
shll
cmp
mov
add
pop
adcb
fisttpl
lock
or
fisttpl
jne
sub
ret
stos
insb
inc
fcmovu
shlb
test
pop
fildll
mov
andl
mov
push
push
push
cli
faddl
push
sbb
fs
jo
cmpw
adc
pushf
leave
fidivs
in
or
call
mov
mov
imul
push
inc
sbb
xchg
lods
inc
dec
aas
fstp
nop
gs
ret
add
mov
std
mov
dec
xchg
incb
mov
cltd
clc
fdivrl
lea
push
mov
sub
mov
adc
cmp
jl
dec
or
xchg
lcall
in
xchg
or
or
dec
jne
ret
xchg
jmp
or
mov
fmuls
xor
in
jg
dec
daa
mov
xor
cmp
jbe
test
adc
ret
push
mov
mov
push
pop
cmp
jl
mov
push
or
shl
nop
lds
sbb
lea
push
jmp
or
punpcklwd
pop
push
adc
lods
cmp
xchg
sub
add
sbb
in
shr
add
add
add
add
push
push
mov
fisttps
loopne
mov
outsb
imul
xor
imul
cs
add
dec
bound
popa
fs
imul
inc
pop
pop
mov
add
mov
xchg
cmp
shll
dec
ret
imul
pop
pop
xlat
pop
lds
sbb
push
enter
insl
sbb
cltd
lock
mov
pop
or
fsubs
mov
push
repz
adc
lret
sti
in
add
pop
push
clc
sub
sub
insl
mov
inc
cmp
clc
xchg
xchg
subl
shr
dec
mov
int3
push
jns
pop
outsl
pop
sbb
xor
sbb
lods
mov
movb
fcomi
ret
sub
jp
jae
rcr
mov
sbb
imull
imulb
xchg
in
aad
test
sub
adc
and
inc
jne
xchg
push
cmpsl
fcom
cmpl
add
inc
js
mov
jmp
fdivrl
jne
push
fwait
lods
aam
rclb
mov
push
dec
cmp
ss
outsl
and
je
adc
mov
adc
aas
sbb
ficomps
fwait
push
and
jb
add
sub
mov
xchg
ret
in
push
inc
rorb
dec
xor
call
std
pop
or
ret
sub
sti
mov
jl
lea
shl
fidivrs
aam
mov
sub
cmp
das
scas
in
sbb
sub
addr16
dec
mov
sbb
add
mov
push
cmc
je
dec
mov
sbb
push
add
sbbl
xor
jge
xor
incb
mov
jne
xchg
pop
sub
adc
fs
xchg
test
std
cwtl
fimull
fs
sub
mov
adc
adcb
je
mov
test
add
xor
int3
les
and
into
shlb
gs
sub
cmpsb
outsb
gs
xor
xlat
xor
adc
add
mov
pop
rorb
mov
jne
loope
add
inc
les
xlat
xor
lods
lods
pop
scas
adc
push
inc
scas
add
dec
mov
jne
xlat
jnp
pop
mov
mov
mov
mov
add
in
dec
imulb
lods
mov
adc
or
sub
or
es
dec
pop
test
repnz
xlat
xchg
ss
nop
mov
nop
es
inc
dec
repnz
and
xor
mov
mul
ret
jb
mov
movl
fcompl
mov
cmp
ja
repz
fmuls
pop
rcrl
repnz
mov
pop
jb
movsb
push
push
or
subb
push
loope
add
stos
das
mov
loop
push
cld
jmp
mov
push
pusha
lea
mov
pushf
nop
pushf
push
lea
fsubr
ja
push
sbb
sbb
arpl
jmp
jne
pop
jns
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
pop
jnp
lret
fcoms
mov
sbbl
daa
popf
xchg
insl
popa
add
push
xor
sub
lock
and
rcrw
push
inc
cmp
das
ret
inc
stos
inc
cmp
cmp
add
cmp
cmp
aad
xor
inc
lret
imul
lcall
jne
cwtl
cmpsb
jo
xchg
jmp
je
pop
jmp
in
xchg
in
pop
out
psrlq
out
inc
mov
mov
jb
dec
shll
insb
gs
sbb
xor
jl
mov
inc
in
stos
or
mov
cmc
popf
cld
int
std
mov
std
enter
sub
add
sbb
sub
or
push
loop
push
push
xchg
sahf
stos
xchg
push
std
or
sbb
js
ficomps
push
int3
call
push
lock
sbbl
test
pop
push
jmp
fadds
adc
adc
lock
xor
loope
sub
subb
cmc
aam
cmp
sub
movups
add
mov
xchg
rclb
push
popa
inc
lods
or
cmp
push
in
es
fisttpl
adc
adc
xchg
ljmp
cmp
fistpll
movsl
movsw
movsb
push
inc
pop
ljmp
test
sbb
jbe
data16
cmp
xchg
inc
addb
xor
push
mov
or
cmp
xlat
cmp
shll
movsb
jbe
aad
out
pusha
push
and
mov
pop
cld
mov
xchg
sti
les
inc
mov
cmp
inc
mov
data16
mov
sbb
and
add
lea
mov
xor
fimuls
mov
cltd
pop
idiv
cmp
sti
lret
lret
fstpt
add
jl
popa
jle
jp
add
fdivr
ss
jl
pop
add
orb
out
pop
mov
fcomps
add
add
inc
xor
inc
mov
in
nop
stc
adc
stc
movsb
ds
in
movsl
cwtl
sti
cltd
sti
pushf
cld
xor
je
or
push
add
adc
mov
nop
xor
pop
mov
wbinvd
cmp
fnstenv
mov
sarb
test
jecxz
in
push
je
cwtl
in
out
out
sbbb
jmp
pusha
add
arpl
or
cmp
push
nop
stc
daa
inc
test
or
jbe
cmpb
and
push
dec
and
repz
pop
xor
and
out
into
sbb
cwtl
sti
ljmp
decb
fxch
adc
and
push
lret
pop
test
push
icebp
sahf
push
icebp
int
sub
inc
push
icebp
pop
or
xor
dec
gs
inc
inc
xlat
lock
inc
repnz
repz
dec
hlt
cmc
scas
notb
imull
lcall
insb
cmpsb
imul
or
or
cmpsb
imul
jo
fsubs
fldcw
imul
lcall
xor
inc
js
push
pop
pop
daa
push
mov
push
in
dec
dec
cmp
jbe
sub
out
add
into
sarb
stos
scas
mov
shll
xlat
sub
insl
inc
aam
inc
test
mov
or
or
test
aas
push
notl
or
dec
pop
aad
inc
adc
jbe
inc
inc
lahf
jmp
addb
push
in
adc
jbe
xchg
cmp
je
add
jne
imul
subb
or
or
pusha
or
sbb
mov
sti
sub
xor
loope
rorl
fwait
in
clc
fbld
add
adc
incl
push
testb
sbb
int
inc
inc
add
sbb
push
adc
imul
push
inc
lods
outsb
xor
push
and
bound
out
in
andb
sbb
or
aam
add
cmp
je
jmp
icebp
test
xor
insb
mov
cmp
inc
int3
inc
enter
and
jae
sbb
leave
testl
mov
jmp
sbb
insl
adc
pop
adc
mov
ja
jecxz
push
add
popf
gs
xchg
jge
jae
xchg
adcb
inc
or
adc
mov
or
mov
andb
add
cmp
sub
outsb
sub
pop
add
jne
loope
inc
pop
cmp
jae
pop
push
adc
push
xchg
gs
popa
pusha
pop
adc
add
jg
loope
push
xor
mov
mov
jmp
sub
sbb
pop
inc
xchg
or
fsubp
mov
adc
pop
imul
test
sub
sub
loope
mov
call
call
leave
sub
out
lods
mov
xor
call
in
outsl
mov
inc
out
pop
stc
call
jno
mov
xor
dec
push
jg
mov
xor
or
stc
jp
in
jge
inc
ret
ret
clc
pushf
mov
jmp
sbb
mov
mov
and
inc
test
jmp
sub
std
mov
andb
add
sbb
out
pop
mov
cwtl
call
sbb
mov
cmc
sar
jns
cmp
aam
push
and
leave
sub
shll
xor
aas
inc
dec
adc
fsts
in
test
adc
in
ret
clc
push
cmp
xor
jnp
lea
pop
adc
push
out
arpl
add
add
les
sub
lds
out
hlt
inc
loop
adc
xor
mov
mov
adc
push
addr16
adc
inc
adc
push
lods
jnp,pt
sub
mov
dec
sub
sbb
jp
push
mov
jbe
jne
je
cmp
push
test
test
cmp
pop
icebp
push
inc
dec
inc
out
pop
mov
push
push
adc
cs
add
pop
gs
in
push
mov
add
or
inc
lret
jnp
inc
ja
loopne
cmpsl
pop
jge
out
push
adcb
lea
and
mov
test
pop
adc
push
cmp
pop
sbb
and
mov
clc
xor
and
fadd
loop
je
push
cwtl
fdivr
ds
push
jbe
cmp
mov
stc
jo
fldenv
jbe
enter
and
add
push
popa
pop
pop
dec
sub
dec
inc
jge
jae
insb
aaa
lods
adc
test
test
mov
mov
in
pop
pop
or
test
test
jbe
inc
hlt
or
out
movsl
shll
xor
orl
mov
rorl
pop
pop
roll
call
jmp
in
dec
sub
inc
xor
out
dec
or
ss
in
fsubl
fwait
lea
in
push
inc
ret
inc
ret
insb
pop
and
and
shlb
sbb
rcr
jp
leave
xor
fcmovb
jae
popa
shlb
std
add
int
add
xor
push
outsl
push
mov
aaa
sbb
and
xchg
sar
or
mov
adc
or
sub
popa
mov
push
ds
shll
cmp
xor
xchg
lea
or
sti
jne
cld
push
pusha
outsl
bound
sbb
test
fisubs
push
sbb
mov
sbb
add
repnz
or
hlt
add
mov
shl
clc
stc
adc
mov
sbb
mov
push
bound
in
in
out
and
ljmp
in
enter
fldl
and
mov
xchg
loop
popa
push
ja
push
cltd
cwtl
in
rcrb
adc
ret
enter
sub
dec
jl
pop
pop
loopne
incb
mov
push
mov
pusha
sbb
ljmp
mov
shlb
ds
inc
add
inc
add
out
cmpl
pushf
nop
mov
adc
jmp
mov
add
cld
push
inc
pop
ret
add
andl
mov
or
add
movsb
test
mov
fs
mov
fs
enter
adc
jle
cmp
fsubrs
lea
push
push
ss
push
jp
pop
jecxz
pop
loopne
cmpsb
neg
sbb
add
mov
mov
lahf
push
cmp
jg
idivl
or
jae
sub
mov
add
outsl
or
loope
or
add
add
push
dec
sub
sbb
rol
addr16
out
pop
add
pop
orl
out
scas
add
mov
cmp
xor
add
sti
and
push
mov
or
idivl
loopne
jecxz
mov
loopne
or
aaa
ss
daa
xchg
stos
xchg
inc
xor
jae
or
pop
xchg
xor
and
divb
mov
jne
cmpb
jne
inc
or
add
or
repnz
jbe
aam
dec
cmc
dec
jne
movsb
jl
imulb
mov
cs
jmp
sub
adc
pop
pusha
pop
add
jno
or
cwtl
xor
imul
inc
addb
or
test
adc
ret
mov
fsubrl
aam
loopne
lock
mov
add
and
iret
and
shll
mov
xchg
mov
lcall
sub
negl
je
aas
pop
dec
shll
aam
add
add
add
inc
pusha
xor
mov
mov
ds
sub
adc
pop
ja
f2xm1
xor
add
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
scas
imul
sbb
es
imul
scas
ret
add
mov
mov
rclb
cltd
and
xchg
and
minps
cs
pop
jle
jae
adc
mov
xor
pop
pusha
and
outsl
inc
adc
aas
add
or
pop
sti
jg
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
in
call
clc
call
pusha
lret
sub
cmpsl
ret
add
in
mov
test
xchg
sarl
adc
movsl
insl
insl
mov
jmp
mov
ljmp
out
int3
ja
push
xor
push
push
inc
push
push
xor
nop
push
push
add
and
add
decl
pop
je
outsb
jns
and
mov
mov
test
mov
jo
ljmp
inc
bound
push
je
imul
divb
fwait
pop
add
pop
pop
and
fs
or
insl
pop
cld
dec
gs
gs
repz
xor
xor
frstor
pop
popl
add
lahf
mov
cmp
nop
nop
pop
mov
lea
push
call
lea
insl
adc
out
adc
incl
jnp
add
add
push
push
push
push
push
mov
call
mov
and
popf
popa
jmp
pop
pop
call
out
into
scas
loope
repz
mov
fldcw
xor
inc
xchg
push
adc
test
cmp
fiadds
cmp
es
jp
pushf
inc
scas
jle
push
xchg
aaa
inc
outsl
lahf
lock
icebp
cmp
data16
jae
mov
sti
mov
pop
into
les
mov
int3
out
mov
fisttps
neg
cmp
sub
or
mov
repz
mov
inc
inc
dec
inc
pop
inc
fistpll
daa
aam
lret
ror
push
idiv
mov
mov
mov
aas
jno
jbe
sbb
xchg
mov
add
arpl
and
shlb
mov
outsl
fmuls
mov
or
idivb
add
jnp
mov
aad
enter
jg
imull
insl
outsl
outsl
mov
shlb
xor
inc
mov
pushl
jae
jne
fs
sub
push
sbb
xlat
cmp
shlw
pop
jae
jae
gs
and
mov
jo
mov
pop
mov
sub
std
insl
arpl
popa
push
push
jb
arpl
sbb
outsl
jo
fcmovu
ss
aaa
fs
add
add
outsl
out
mulb
jns
or
add
or
adc
imul
outsl
data16
sub
sbb
and
inc
jae
data16
bound
push
inc
push
inc
pop
dec
push
dec
mov
imul
xor
dec
inc
cs
cld
push
add
add
cmp
adc
sbb
sub
inc
dec
dec
add
icebp
add
test
in
mov
adc
add
cmp
mov
mov
inc
lods
push
pop
mov
jg
int
mov
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
add
outsb
and
inc
dec
push
and
gs
mov
pusha
inc
je
inc
adc
fwait
cs
add
and
sti
out
out
pop
cmp
mov
and
and
paddw
push
sbb
pop
sub
repz
jae
cmp
cmp
inc
mov
fs
popf
sub
test
fdivr
push
imul
imulb
dec
add
add
loopne
and
add
pop
imull
adc
addb
nop
in
or
push
adc
add
add
pop
sbb
addb
sbb
add
loopne
mov
pop
push
add
xchg
add
or
pop
addb
cmpsl
mov
dec
je,pn
js
pop
sub
mov
nop
jbe
fwait
or
std
test
jb,pn
popa
je
daa
or
push
insb
mov
adc
sub
es
cwtl
std
add
rolb
daa
inc
cwtl
test
arpl
add
enter
pusha
dec
jbe
jo
or
ja
lahf
jg
daa
pusha
lahf
daa
xor
dec
mov
dec
pop
daa
insb
ret
test
jb
insb
outsl
arpl
dec
push
add
das
inc
pop
pop
push
ja
pop
or
pop
xor
push
nop
or
or
or
call
inc
icebp
movsl
loop
push
push
xor
push
lcall
mov
xchg
gs
mov
sbb
stos
leave
call
test
cmpsb
aaa
mov
push
dec
mov
push
mov
inc
leave
jl
push
push
mov
loope
mov
xor
fistpll
cmp
rol
test
jmp
stos
mov
mov
inc
iret
pusha
or
mov
sbb
push
inc
sbb
filds
ljmp
push
add
js
pusha
push
mov
mov
mov
call
pushf
sbb
pushf
pushl
and
imul
fldt
inc
xor
test
lret
orb
push
nop
inc
shll
dec
mov
cld
dec
addr16
push
js
jne
test
mov
fcoml
push
test
mov
push
mov
add
stos
cmpsb
ret
aam
or
aaa
imul
push
inc
push
lea
push
xchg
leave
pop
sbb
call
fadds
jne
xchg
or
pop
es
das
pushf
adc
dec
or
js
push
mov
lock
mov
xor
shll
out
sbb
clc
mov
call
xchg
movsb
jnp
call
adc
push
pushfw
andl
add
jmp
push
push
jmp
jnp
push
cmp
fldenv
mov
push
inc
sub
clc
push
jmp
xor
mov
or
inc
cld
fldl
and
lcall
jnp
cwtl
aaa
pop
add
call
push
icebp
out
mov
and
jmp
mull
loope
mov
pop
adc
sub
push
sti
cmp
pop
call
mov
cwtl
movsl
inc
cmp
out
shrb
inc
lods
push
stc
std
repnz
sub
sbb
leave
popf
push
mov
lea
imul
xchg
xchg
mov
lret
add
addl
lahf
mov
scas
inc
das
ficomps
push
in
psraw
shll
cmp
inc
mov
push
shll
fst
mov
lret
mov
lods
mov
sbb
cltd
pop
test
cmpsl
dec
jbe
sarb
call
les
shll
shl
bndldx
movsl
xchg
add
mov
icebp
out
in
mov
idivl
sub
dec
fistpll
divb
ret
mov
mov
ds
in
pusha
test
jmp
dec
ja
lcall
movsb
sub
xorb
pop
mov
movsb
sbb
mov
dec
jg
mov
clc
pop
rorl
fidivrs
fbstp
je
shl
add
loop
jecxz
pop
shll
in
pop
out
sbb
lods
sbb
push
fcompl
outsb
fldt
sub
lock
call
jne
pop
les
push
mov
repnz
lea
clc
bt
or
or
hlt
pop
ja
cmpsl
stc
pusha
sub
dec
push
jecxz
add
pop
jnp
and
mov
hlt
sbb
mov
insl
add
aaa
jl
pop
pop
mov
push
add
in
imull
jno
sub
mov
push
push
imul
sub
add
jmp
or
xchg
xchg
in
inc
call
mov
xor
imul
pop
shll
outsb
cltd
dec
test
mov
or
mov
std
sbb
cmp
adc
mov
push
push
pop
mov
or
or
sbb
rclb
mov
jge
mov
inc
mov
sub
das
adc
push
or
ja
mov
movl
js
inc
mov
add
mov
das
inc
imul
hlt
sbb
faddp
mov
pop
add
xlat
push
bound
aam
stos
add
mov
popa
or
pop
dec
or
and
es
mov
pop
in
fstpt
hlt
jae
hlt
stos
xor
sbb
fsubp
add
xchg
lock
xchg
or
and
push
cwtl
insl
xchg
push
and
rcll
mov
jecxz
and
lea
push
inc
lock
mov
xor
add
jmp
fsubr
mov
call
cmp
push
cmp
pushf
or
cmp
sbb
hlt
incl
inc
cmp
jg
cmpl
aaa
mov
dec
inc
push
cwtl
or
add
loopne
push
call
mov
in
xor
cmp
adc
int3
roll
inc
clc
pop
push
adc
in
lcall
pop
movsl
mov
ds
movsl
movsl
push
or
mov
xor
mov
push
mov
xchg
xchg
mov
xchg
outsl
ret
shll
xchg
clc
mov
jbe
dec
mov
out
push
cwtl
mov
cltd
mov
lcall
sahf
mov
xor
mov
pop
mov
mov
mov
stos
test
jo
pop
stos
pop
lods
push
lods
add
push
scas
jp
xor
xor
pop
cmp
and
xor
shl
mov
mov
dec
xlat
fldlg2
cwtl
xchg
lods
xchg
xor
addl
movsl
call
loope
lret
or
popa
fs
or
or
movsl
or
lcall
push
data16
insb
mov
mov
ljmp
loope
out
sub
or
sbb
imul
outsb
adc
pop
mov
mov
cmp
dec
je
xchg
add
mov
jmp
roll
sub
cmp
pop
fdivrl
push
mov
addl
inc
fstps
sbb
imul
in
add
stos
gs
inc
jmp
mov
sbb
rcrb
sub
push
or
inc
pop
shr
pop
popf
xor
sub
pop
mov
jg
test
orb
sbb
add
xor
dec
mov
decb
xor
lahf
rol
adc
shl
mov
stc
cmp
roll
jmp
mov
adc
xor
cmpb
lret
adc
cmp
cs
push
sub
dec
adc
pop
cmp
mov
inc
add
adc
cmp
add
ja
and
or
pop
or
pop
dec
sub
out
xchg
xor
sbbl
fildl
dec
add
adc
and
neg
enter
xchg
inc
cwtl
xchg
movsl
adc
sarb
xchg
insl
push
enter
mov
xor
test
outsb
shr
push
dec
or
out
out
sub
clc
call
outsb
push
cmpl
push
sbb
add
lods
lret
in
call
mov
pop
lock
addr16
add
or
xor
rcll
sbb
xor
mov
xchg
call
pop
jb
inc
out
mov
jo
lods
xor
adc
mov
les
xchg
je
out
stos
mov
adc
in
sub
sub
pop
add
mov
stos
jo
js
dec
jne
xlat
add
cmp
aas
test
mov
cld
inc
and
divl
je
jnp
sarl
push
push
fisttpl
shll
push
lea
push
scas
aad
adc
cmp
data16
pop
push
sub
rorb
daa
hlt
xlat
les
push
pusha
xor
rorb
test
jge
into
xchg
cmc
pusha
mov
cmp
and
lock
mov
sbb
push
ja
neg
pop
fldenv
push
test
ret
adc
lds
pop
add
pop
cmp
call
add
loope
jl
stos
and
dec
dec
adc
mov
xchg
and
push
inc
aaa
dec
shll
mov
xlat
scas
sahf
pop
mov
pusha
inc
sub
push
pop
andl
movsl
jle
jo
mov
push
push
push
pop
dec
sbb
xor
rcll
mov
mov
out
or
or
dec
adc
cmc
andb
test
fcomp
out
fs
sub
mov
mov
scas
call
push
add
test
sub
pusha
add
loope
pop
rorl
in
mov
add
imul
hlt
cld
xor
aad
cmp
sbb
stos
sar
adc
rorb
add
lea
cltd
cmpsb
fistpl
popf
mov
lcall
aad
xor
imul
push
add
popf
xchg
addl
xrelease
ja
jle
fdivrp
pop
call
inc
mov
sub
fsubl
mov
adc
sbb
mov
fdivs
mov
insb
jge
sub
or
dec
fcoms
xchg
call
sbb
sbb
nop
stos
push
push
in
in
xor
or
fiaddl
add
stc
sbb
add
inc
subl
lock
icebp
nop
jbe
cmpsb
imul
testb
imul
jl
div
jno
test
jp
cwtl
in
sub
repnz
inc
adc
je
negb
fadd
sbb
rcrl
mov
push
fldenv
mov
jl
leave
and
pop
add
xlat
push
jo
notb
jmp
sahf
sbb
cmp
pop
inc
pop
cmp
add
pop
add
getsec
cmp
inc
and
push
test
inc
decl
testb
or
inc
mov
pop
cld
dec
out
add
int
jmp
cwtl
imul
or
mov
in
out
dec
pop
sbb
xchg
xchg
cmp
xchg
fisubrl
scas
jmp
fcmovnu
xchg
and
stos
sub
jo
inc
ret
sti
subl
ja
mov
call
mov
aas
or
loopne
lods
data16
lret
roll
mov
pop
push
mov
mov
adc
xor
cmp
push
or
sub
xor
sub
mov
sbb
dec
cmp
inc
test
aam
stos
jne
cwtl
movsb
or
mov
inc
ja
inc
push
movl
int3
or
xchg
cmp
fs
and
add
out
notl
add
or
pop
jbe
inc
iret
mov
movsb
push
and
add
or
cmp
push
imul
inc
and
shlb
jge
out
add
inc
mul
push
pop
in
mov
jae
mov
shl
and
lock
add
mov
push
sbb
je
cwtl
orb
add
cmp
shr
in
imul
pusha
movsb
jne
iret
icebp
popa
jbe
inc
loopne
shll
je
mov
ss
pop
cli
dec
push
popa
shll
aam
enter
jmp
push
push
pop
add
pop
push
cmp
pusha
es
pop
out
sbb
or
mull
pusha
in
mov
jo
ret
push
sub
sub
and
les
imul
mov
add
push
sbb
je
push
sbb
outsl
fldcw
iret
pop
arpl
and
leave
inc
sahf
and
testb
push
outsb
out
test
rolb
icebp
sahf
loopne
pop
push
pop
cmp
je
inc
push
and
into
dec
test
jne
inc
mov
into
aad
mov
adc
jae
xchg
movups
push
mov
loop
mov
adc
pop
pop
dec
adc
mov
inc
or
add
or
or
add
cmp
inc
push
dec
sub
push
push
add
sub
ret
scas
fst
push
inc
sub
movsl
pop
dec
mov
inc
jns
pusha
loope
add
push
stc
dec
add
xor
add
adc
test
adc
sub
sub
mov
fimuls
std
inc
cmp
ss
cmp
insl
loope
lahf
mov
subl
adc
shll
clc
pop
mov
or
xor
add
add
mov
and
xor
mov
adc
inc
xor
push
out
stos
daa
imul
or
pop
mov
inc
jmp
pop
jle
adc
orb
mov
insb
jecxz
arpl
or
sub
aam
add
std
mov
mov
pop
jae
pop
call
add
loopne
call
call
push
jbe
mov
cmp
jg
cmp
jl
push
inc
call
push
fsubr
jb
mov
pop
inc
dec
push
adc
bound
mov
xor
add
push
pop
lcall
jmp
push
xor
jg
call
jae
test
and
sub
and
mov
rclb
ret
call
push
cld
out
sti
fstl
mov
mov
add
or
shlb
cwtl
push
jno
mov
pop
ret
js
cmp
cmp
ret
adc
push
xor
sbb
mov
sbb
adc
jp
ret
xchg
ret
mov
sbb
leave
mov
bound
ds
ds
je
or
push
ret
jo
popf
mov
xor
xchg
pop
pop
cmp
aad
adc
ss
sti
dec
inc
mov
push
mov
sbb
iret
lcall
jne
shlb
imul
xor
mov
sbb
arpl
push
fprem1
mov
mul
paddsw
filds
xchg
orb
mov
jle
cmp
lea
sti
addr16
dec
call
xchg
pushf
fwait
adc
xchg
sbb
sahf
xchg
sub
in
lahf
lds
push
push
pushf
xor
mov
fistpll
ljmp
pusha
sbb
pushf
jmp
push
add
fcomps
add
or
call
imul
lcall
mov
push
jne
repnz
repz
xor
rclb
inc
rcll
addr16
inc
push
or
lds
movb
mov
leave
pop
lret
or
lock
mov
cmpsb
push
bound
xor
lcall
mov
cmpsb
js
test
xchg
cld
call
inc
test
xlat
rolb
xor
and
ret
inc
insb
push
loope
loop
jecxz
cmc
push
jne
in
in
out
out
sbb
iret
jnp
das
sbbl
add
mov
outsb
orb
mov
aaa
mov
add
xchg
addr16
adc
imul
sub
gs
inc
mov
mov
inc
clc
ljmp
xlat
sar
xor
cwtl
fiaddl
fucomi
cmp
leave
add
xchg
loopne
push
push
xchg
pop
and
shll
jl
mov
cmpl
call
jbe
movl
xor
xor
xor
pusha
lds
mov
pop
lock
call
sub
pop
repnz
in
dec
imul
inc
les
popa
sub
push
lcall
inc
add
clc
xchg
loopne
jne
leave
or
dec
jne
pop
add
mov
ds
jecxz
inc
mov
andb
push
jb
dec
xchg
dec
or
call
shr
out
lock
pop
mov
std
mov
dec
jge
add
je
pop
mov
xor
jmp
add
xor
icebp
loopne
call
notb
fbstp
clc
scas
add
repnz
and
cmpsb
das
pop
inc
cmpsb
dec
xchg
or
sbb
mov
es
aaa
rcrb
sbb
push
dec
xchg
and
test
xor
test
dec
and
sbb
dec
outsb
mov
sub
frstor
cld
cltd
xchg
shll
mov
and
mov
xor
mov
lahf
jl,pn
inc
frstor
cmp
adc
jecxz
in
dec
shll
push
xor
call
ss
add
shr
add
mov
arpl
push
das
test
adc
mov
test
sbb
xchg
out
outsl
mov
add
adc
xor
xchg
jle
mov
sub
cli
mov
add
xor
cmp
push
mov
push
addr16
mov
loope
cmp
pop
or
cld
add
in
and
push
pusha
cmp
into
mov
cltd
push
repnz
cmp
and
js
mov
andb
jno
stos
add
push
popf
xlat
jge
dec
cmp
inc
fsubs
ret
jle
jmp
sbb
xchg
and
test
sub
fistpll
in
and
fsubs
lock
sub
adc
aad
jg
pop
pop
clc
stc
cmc
testb
das
sbb
decb
and
adc
cld
mov
call
mov
ja
jmp
js
outsb
fld
adc
mov
or
or
out
popa
incb
movb
mov
testb
sbb
or
test
in
addr16
jmp
fidivs
lahf
icebp
mov
push
or
andb
popa
fcmovu
or
ret
clc
cs
pop
or
mov
push
mov
rcll
cld
push
inc
call
sbb
add
and
data16
or
fstpt
call
call
mov
or
add
loopne
cmc
mov
sub
mov
dec
in
ja
pop
fiaddl
cmp
jne
cmp
outsb
idiv
std
arpl
pop
add
cmp
sti
cmp
je
pushl
jnp
add
aas
in
cmpsb
inc
sbb
mov
fbstp
mov
pop
mov
aas
lea
fwait
mov
mov
push
mov
jle
call
js
push
adc
adc
mov
lods
fmull
cmp
mov
dec
add
pop
aaa
mov
push
and
push
pop
dec
mov
pop
stos
ret
cmp
aaa
jno
shl
decl
mov
mov
jne
xor
hlt
lods
or
por
mov
adc
shlb
jbe
std
clc
lea
mov
js
xor
orb
cmp
movsl
mov
fidivs
add
add
lea
jmp
inc
andnps
ja
mov
rorl
xor
or
and
mov
add
jns
es
push
mov
cmp
add
add
or
aaa
adc
iret
neg
mov
add
jmp
dec
rorb
pusha
aas
jno
jno
dec
push
or
jne
sub
cmp
jne
std
negb
jge
or
mov
mov
jmp
fimull
inc
pop
mov
mov
idivl
test
and
dec
or
xchg
sbb
mov
mov
mov
jne
pop
aam
mov
sahf
in
mov
jne
lahf
andl
sbb
add
adc
int3
add
jle
push
jo
mov
pop
je
imul
dec
jne
and
pop
cs
mov
xor
loop
lock
push
iret
jge
adc
lret
pop
push
and
sti
mov
add
cmp
insb
mov
inc
add
jp
fs
fucomi
push
pop
mov
jo
mov
ret
insb
jmp
sbb
fsts
aaa
ds
adc
sbb
jmp
cwtl
aas
fimull
or
dec
or
pop
mov
mov
cltd
mov
test
adc
cmp
je
dec
fsubrl
jecxz
mov
push
and
outsb
sbbb
pop
mov
scas
lcall
call
jmp
push
xchg
fstpt
mov
movl
xlat
enter
in
js
jne
mov
inc
lds
mov
out
mov
sbb
jbe
add
sub
or
lds
cs
call
mov
mov
testb
or
add
push
sbb
adc
push
mov
xor
out
test
test
jb
ss
clc
subb
mov
or
fwait
mov
out
xchg
jnp
mov
lds
jo
xor
insl
jecxz
sqrtps
or
add
in
pusha
dec
sbb
inc
adc
lea
sbb
mov
sub
mov
call
mov
sub
je
cmp
add
pop
ss
push
inc
xor
clc
jecxz
call
movsl
and
call
and
addb
sbb
xchg
addr16
jbe
lea
pushl
pop
repz
dec
lock
or
dec
cmp
jb
jmp
imul
in
loop
add
cmp
dec
push
mov
jne
clc
pop
adc
lcall
and
jmp
push
jg
int3
movl
les
clc
pushl
ss
cli
and
push
cs
jp
and
pop
mov
mov
cmp
dec
ss
lea
test
mov
or
pop
push
push
hlt
lods
add
pop
sub
adc
xchg
or
and
int3
add
dec
pop
push
push
push
or
stos
jle
je
cmc
lods
adc
clc
nop
push
mov
icebp
lock
push
fistpl
sbb
push
data16
imul
out
stc
aam
fsubs
das
idivl
loop
fidivs
gs
icebp
adc
mov
adc
rorb
lahf
mov
call
sub
or
stc
pop
push
jge
outsb
je
adc
jne
sti
dec
out
sub
in
ljmp
mov
or
and
outsl
or
das
and
inc
stc
clc
outsl
std
pop
mov
jle
cld
sbb
add
xchg
inc
push
in
xchg
dec
add
pop
adc
mov
cli
sub
mov
mov
add
xchg
adc
cmpb
scas
test
mov
std
test
fdivl
cld
sub
sti
popf
lock
das
outsl
or
jle
out
inc
aas
adc
push
push
push
jge
dec
int
hlt
add
push
psubb
jae
fwait
movsl
push
hlt
push
call
mov
hlt
pop
or
mov
test
test
xor
pop
mov
xchg
adcb
hlt
cltd
pop
test
call
pop
incl
and
mov
dec
inc
dec
mov
fidivl
mov
push
loopne
jb
fldt
fwait
sbb
repz
pop
and
cmp
dec
cmp
je
dec
dec
cmpw
pusha
out
ljmp
cmp
outsl
mov
outsl
push
add
and
jecxz
inc
pop
mov
sbb
adc
sbb
and
shl
inc
or
call
push
mov
aad
or
sbb
pop
pop
jb
add
fildl
sbb
bound
cltd
scas
imul
push
test
fcos
fstpt
xchg
sbbb
inc
add
dec
rcrl
das
jne
shrb
cmp
pop
sub
or
lea
inc
cli
pop
cmp
jo
dec
test
sbbl
pusha
cmp
pop
pop
pop
cmp
jne
jo
lea
bound
cmp
and
mov
push
or
lcall
test
test
rolb
sbb
lock
push
insl
shl
xchg
repnz
outsb
push
sbb
mov
add
mov
adcb
sti
sbb
addb
pop
mov
subl
add
fisttpl
xchg
outsl
mov
fldt
mov
lea
mov
jbe
xlat
aad
in
xchg
push
cmp
fisubrl
xchg
aaa
xchg
je
sbb
or
bound
scas
pop
mov
add
in
movsl
inc
add
pop
test
cmpb
xor
js
cmpb
into
dec
jmp
inc
cmpsb
iret
ret
add
lcall
pop
inc
loopne
adc
fadds
jmp
or
fildll
sub
sbb
roll
in
mov
xor
xorb
cwtl
xor
xor
fwait
xor
lods
enter
adc
insb
orb
fnstenv
push
jne
sbbb
mov
add
fadd
fiadds
fadd
ja
push
adc
js
movsl
lret
mov
push
push
and
jmp
add
inc
or
sub
sarb
jle
ja
mov
push
push
push
ret
push
adc
mov
jae
cli
add
jbe
clc
mov
pop
or
sar
and
pop
mov
add
cmp
stos
cs
in
lea
add
or
imul
add
push
push
inc
std
mov
pop
sub
cmpl
addr16
or
cli
insb
mov
dec
and
cmpsb
xor
xor
mov
test
call
sbb
mov
mov
sbb
outsl
data16
aam
cmp
bnd
shlb
xorb
mov
loope
lcall
shlb
mov
mov
add
mov
testl
inc
mov
mov
push
addl
push
icebp
push
mov
lods
mov
clc
inc
jl
sub
ret
mov
scas
pop
adc
popf
roll
insl
or
stc
sbb
popf
xor
shl
out
shufps
push
pop
imul
cmp
or
push
ja
jae
imul
pop
dec
push
imul
in
insb
imul
imul
sub
lods
xlat
arpl
leave
xor
jo
outsl
inc
stos
pop
stos
jmp
mov
lods
or
lcall
push
sbb
mov
into
push
in
cmp
jo
cmpsb
imul
aad
imul
inc
inc
shll
xor
xor
mov
inc
in
sbb
inc
pop
xlat
xor
call
loope
dec
inc
test
dec
cmp
push
popa
mov
je
adc
push
push
lcall
cmp
pop
ds
aas
sub
data16
jnp
cmc
test
push
inc
in
test
xchg
xor
mov
flds
cli
sub
fcompp
dec
popa
dec
test
in
test
lods
and
into
into
into
xchg
arpl
imul
into
jl
insl
push
inc
outsb
and
cmp
cmp
jo
jno
jb
push
sbb
adc
sbb
sbb
add
dec
pushf
popf
dec
add
push
dec
sahf
sub
inc
mov
jo
cmpsb
xor
outsb
push
push
lret
cmp
jmp
int
into
in
out
imul
imul
pusha
lcall
sbb
lea
dec
push
in
or
test
popa
sbb
jne
jbe
test
js
jns
daa
fdivrl
xor
inc
test
jl
jbe
dec
popa
jge
jle
jg
rolb
push
xorb
push
inc
and
popw
lods
addb
pop
out
add
add
cmp
pop
sahf
xchg
adc
sub
pusha
xchg
fildl
pusha
stos
pop
adcl
pop
jp
lock
dec
mov
push
jmp
clc
sti
push
cmp
xchg
lea
fldt
push
sub
sub
push
cmp
push
mov
jbe
fwait
cmp
mov
add
lcall
enter
pop
lea
sbb
lds
enter
inc
mov
push
push
fisttpll
shrl
xor
scas
sbb
test
incb
xor
cmp
add
mov
jns
int
ljmp
pop
pop
out
imul
imul
mov
sbbl
aam
sarl
add
xchg
jmp
ds
sub
dec
push
xor
enter
in
jmp
sbb
or
adcl
cmp
ja
push
aam
xchg
add
jle
outsl
call
fildl
aad
inc
adc
call
xchg
mov
add
adc
add
dec
popa
adc
in
int
or
repnz
je
loope
jmp
mov
xlat
pop
cwtl
in
fwait
jns
push
push
mov
and
call
sti
fiaddl
clc
sbb
cmp
sub
inc
mov
lock
sbb
xlat
popf
sub
push
cld
test
ss
mov
inc
adc
mov
add
les
and
loope
loop
rol
adcb
dec
push
loopne
cwtl
adc
andb
or
icebp
shl
sbbb
ss
pushf
adc
add
scas
adc
mov
cmpsl
lock
cmp
scas
lock
orb
fiadds
jo
sbbl
mov
pop
andl
sub
fildl
dec
push
push
ret
adcb
fidivrs
sub
repnz
call
inc
sti
and
aaa
dec
out
push
int3
jbe
mov
push
sub
lahf
xor
je
call
push
lods
and
cmp
adc
aaa
fistpl
sahf
jmp
or
ja
xchg
addr16
lret
push
push
dec
or
jo
sub
pop
pop
sbb
rol
or
cld
rol
addb
dec
std
cmp
jbe
mov
add
scas
push
sub
mov
adc
inc
mov
imull
or
jmp
push
jmp
push
push
mov
adc
lods
bnd
or
add
aaa
mov
xchg
mov
sahf
xor
js
sahf
or
jecxz
insb
and
or
add
or
insb
add
inc
add
adc
dec
nop
aaa
xchg
or
loope
adc
scas
gs
rcrb
ffree
or
in
xchg
pop
mov
dec
cmp
sbb
mov
gs
xor
icebp
push
aam
xchg
push
push
notb
mov
std
and
roll
sbb
push
mov
xchg
cmp
xor
test
cld
sbb
pop
push
sbb
fmuls
mov
dec
xlat
mov
enter
or
mov
movb
add
mov
add
fildl
mov
ret
lods
adc
ljmp
adc
and
mov
xor
cmp
inc
sbb
mov
sbbb
clc
push
pop
lcall
cld
add
pop
pop
and
lock
add
int3
add
xchg
and
cmpsb
mov
mov
addl
sub
xor
stos
lods
fadds
int
cs
mov
mov
pop
insb
rolb
mov
mov
sub
mov
add
and
xchg
adc
adc
mov
and
or
enter
add
gs
fs
into
xor
insl
and
cwtl
push
jb
scas
jmp
push
pop
shll
setae
lds
rcrl
inc
sub
in
je
pusha
addr16
shlb
push
add
cmp
or
mov
cmp
adc
mov
lock
and
adc
inc
mov
movsb
bndstx
pop
jp
std
jp
mov
push
push
call
pop
mov
imul
or
xorl
push
in
loope
andb
pop
mov
inc
rorb
inc
dec
lret
lcall
mov
insb
lds
push
call
inc
nop
add
dec
clc
cld
cs
xchg
add
cmpsb
ja
cmp
ja
es
push
daa
lods
add
inc
add
dec
lock
push
xchg
push
push
test
sar
xchg
cmp
icebp
loopne
insb
fldl
push
iret
lcall
jg
pop
lock
push
pop
or
pop
push
or
in
call
adcb
xor
aaa
xor
call
in
roll
cmp
jl
jnp
fiaddl
cmp
fxch
mov
pop
lods
push
mov
scas
fwait
push
mov
out
inc
leave
lock
int3
xor
or
in
int3
or
lds
out
mov
in
fmuls
mov
add
lods
lds
mov
fwait
adc
in
lea
incl
es
testl
arpl
lock
daa
adc
pop
sbb
mov
call
inc
lea
sbb
negb
movsl
mov
shlb
sub
lds
mov
add
add
nop
xchg
adc
add
test
xchg
jge
mov
sbbl
adc
push
lock
pop
loopne
ds
pop
dec
push
push
push
dec
xor
add
jmp
jns
mov
movb
xchg
sub
push
mov
fsubr
inc
add
push
inc
pop
add
push
ret
in
imul
jo
xchg
and
xlat
adc
fucomip
gs
push
leave
mov
push
lea
repnz
rorl
xchg
inc
push
popf
xchg
sub
sub
jle
jg
repnz
mov
sub
xchg
xor
adc
push
sbb
call
jl
xor
pop
mov
call
call
out
dec
push
add
push
mov
call
adc
clc
cmp
or
cwtl
push
mov
movsl
inc
mov
js
test
test
or
xor
mov
shlb
sahf
mov
sbb
mov
das
cmpsb
mov
pushf
cmp
ja
ja
leave
inc
daa
orb
adc
lock
or
mov
and
orb
add
rorb
dec
push
push
jmp
pushf
mov
mov
loope
pop
stc
mov
cmp
sbb
sub
pusha
or
orl
call
xor
mov
push
mov
add
push
stc
jnp
cmp
ret
lds
pop
nop
stos
fwait
adc
lods
sbb
aad
enter
insl
xchg
sub
xchg
push
das
xchg
xor
mov
inc
push
std
orb
or
push
or
clc
lea
fdivrl
xor
xchg
add
dec
sub
xor
adc
xor
paddb
push
sbb
dec
jne
adcl
mov
sub
jge
sub
test
mov
jne
lods
ret
push
fcmovnu
push
jmp
idivb
lods
pmulhuw
mov
add
fs
adc
das
ss
cmp
bound
scas
dec
push
inc
xchg
scas
sub
push
mov
lahf
sub
lea
roll
ret
mov
mov
sub
leave
jne
cmp
pusha
getsec
aam
mov
test
test
pop
pop
add
js
xchg
push
outsb
jl
shrb
lea
jmp
cmp
xor
or
loope
test
mov
sbb
pop
cmp
icebp
add
push
outsl
and
dec
push
and
rorl
mov
push
pushl
out
call
jmp
cmp
stc
shlb
jo
push
mov
pushf
add
pop
or
cli
add
inc
pushf
dec
xor
pusha
pop
shl
or
clc
add
popa
fnstcw
mov
ja
push
shlb
cld
or
fs
jo
ja
inc
xlat
and
xchg
aas
pop
pop
push
ljmp
pop
sbb
jne
push
inc
jge
repz
push
fs
stos
into
sbb
pop
pop
dec
pop
clc
bound
push
add
clc
pusha
lock
inc
mov
stc
stc
pusha
cmp
xor
pushf
cmc
mov
js
jl
ss
cmp
pop
in
cmc
loopne
mov
leave
xor
cmp
jge
add
pushf
add
jmp
xchg
pop
cmp
sti
or
push
push
push
cwtl
add
push
js
xchg
sub
add
or
xor
add
mov
adc
or
inc
ljmp
lods
lcall
jns
xor
push
xchg
les
insl
xor
lret
push
iret
out
sub
push
pop
cmp
jmp
mov
loopne
pusha
mov
cmp
fildll
pusha
addr16
data16
sar
jge
int3
les
cli
out
jmp
mov
subb
mov
dec
mov
scas
mov
xor
lea
pusha
pop
rcr
sub
jbe
add
cmp
in
stos
xlat
xchg
or
test
adc
jns
and
inc
sub
xor
push
out
popf
aas
popa
cmp
and
lcall
sahf
adc
xchg
jmp
movsb
xchg
adc
cmpsb
jmp
stos
lods
lods
scas
jmp
cmpsb
jmp
scas
pop
mov
mov
mov
lcall
mov
insl
stos
imul
mov
sti
push
stos
out
mov
sub
mov
and
ljmp
jmp
test
lret
pop
scas
imul
sub
inc
mov
pop
rcl
test
pop
aad
imul
fmuls
fstps
fcmovu
aaa
mov
es
imul
imul
jecxz
in
out
jmp
call
js
cwtl
jmp
je
daa
mov
lcall
repnz
push
sarl
negb
idiv
pop
add
cli
or
pop
std
jae
pop
call
aad
das
sub
lea
imul
lea
enter
rolb
add
mov
insl
mov
or
or
adc
add
push
jo
ja
lahf
push
dec
test
cmp
and
pop
xchg
push
push
pushf
data16
mov
mov
int3
or
rolb
or
mov
pop
mov
or
push
xchg
add
xor
inc
mov
sti
and
sub
pop
je
mov
jmp
adc
sbb
or
add
rolb
call
mov
aaa
mov
jmp
add
mov
shrb
cltd
pop
inc
pop
sarb
add
inc
inc
jne
addb
sahf
mov
jmp
mov
xor
mov
mov
rolb
or
or
push
ltr
loope
shll
mov
ret
insl
add
xorl
add
cwtl
adc
icebp
lods
test
adc
add
sub
in
std
sub
inc
pop
das
js
hlt
push
mov
jmp
fwait
test
stos
mov
or
shll
bound
test
mov
call
cmp
and
push
lahf
cmp
enter
test
ljmp
popa
data16
insb
scas
ret
insb
mov
mov
lahf
jne
add
scas
mov
adc
xor
xchg
pop
pusha
cmp
add
sub
mov
lcall
inc
mov
pushf
and
pusha
push
cld
ljmp
sbb
scas
pop
pop
add
or
mov
jo
and
mov
nop
or
and
mov
adc
insb
adc
jo
mov
add
inc
in
push
add
push
and
add
and
push
mov
dec
mov
push
xchg
adc
add
xchg
dec
push
filds
inc
testl
fadd
mov
add
or
loope
lds
adc
add
cmpw
sbb
cmp
lret
js
insl
pop
pop
jne
inc
aad
fildl
sbb
or
push
scas
das
mov
push
stos
sbb
mov
ror
arpl
jae
dec
dec
ds
push
pop
jmp
nop
pusha
or
mov
sub
fdivrs
outsb
mov
cmp
je
data16
fistpll
adc
pop
cmp
mov
xor
jae
jg
imulb
mov
adc
adc
pushf
inc
jmp
cmp
jb
clc
adc
decl
pop
test
mov
int
add
add
xor
push
addb
call
mov
cmp
cli
add
outsl
in
or
mov
loopne
shll
adc
mov
and
lahf
cmp
cmpl
sub
inc
js
xor
mov
out
rcrl
xor
sbb
mov
xor
xchg
xchg
xchg
xchg
sahf
mov
jp
outsl
mov
mov
sub
imul
andl
cltd
jae
lcall
mov
stos
mov
push
les
lds
cmpsb
imul
mov
xlat
dec
shll
mov
call
pop
faddl
jmp
outsb
add
pop
loope
lcall
mov
imul
xchg
inc
aam
jge
mov
cwtl
pop
mov
sbb
push
stos
lcall
aas
pushf
popf
sbb
je
xchg
sahf
push
lahf
mov
lcall
mov
outsb
lcall
repnz
sbb
adcb
lahf
out
shlb
fmull
aam
push
roll
fdivs
lods
adc
adc
add
in
adc
cwtl
cltd
insb
fs
aad
push
dec
pop
rorb
fs
aam
lods
mov
cwtl
pop
mov
inc
adc
call
push
or
dec
pop
and
lea
je
push
std
push
and
shrl
pop
jge
cltd
enter
push
push
pop
xor
cmp
xchg
aam
data16
push
xor
mov
add
push
pop
inc
add
daa
mov
jne
push
pop
adc
pop
inc
je
mov
push
push
or
addb
cmp
ficompl
mov
cmp
mov
ficompl
dec
clc
cmp
mov
mov
or
inc
in
jnp
add
mov
sub
add
and
in
and
push
or
sarl
push
fiaddl
ret
negb
pop
sbb
flds
pop
or
sbb
popa
jmp
inc
scas
xor
sub
xor
xchg
fistl
call
aaa
sub
sbb
mov
pop
call
lds
push
arpl
mov
call
add
cmp
mov
or
jle
push
cmpsb
lret
lock
lods
daa
inc
pop
sbb
mov
jg
and
and
jne
inc
inc
inc
push
inc
mov
call
cs
cmp
pop
jb
mov
fdivl
cs
pop
cld
jle
add
jnp
push
jnp
shll
xchg
hlt
or
push
pop
xchg
fstpl
sbb
add
andl
add
imul
push
lods
subl
pop
fbld
pop
jb
in
mov
xor
push
daa
xchg
xor
add
jbe
bound
adc
movsl
jb
cltd
in
scas
imul
xchg
jmp
pusha
andb
aaa
mov
cmp
jne
cmp
push
loop
sub
mov
pop
shr
add
xchg
clc
out
icebp
into
data16
call
or
push
cmp
jne
jmp
add
jne
sbb
test
testb
loop
or
movl
sbb
xor
cmp
jecxz
add
fsubr
mov
inc
inc
jb
mov
cltd
fldenv
pushf
stos
stos
lock
mov
cmp
jne
inc
jbe
loopne
insl
mov
push
cwtl
jmp
lods
sbb
or
rolb
sbb
mov
cmc
sbb
push
call
add
jle
mov
ss
add
jl
lgdtl
jnp
and
or
jnp
je
push
sub
test
pop
lahf
jp
ud1
mov
or
hlt
lods
fistl
ficomps
lods
mov
rclb
pop
add
insb
cli
xchg
pop
mov
enter
xchg
lods
push
mov
int3
inc
add
sub
fsubrl
inc
add
leave
call
dec
adc
shll
call
aam
test
jo
in
adc
dec
in
out
inc
aas
push
clc
xchg
push
mov
andb
push
cmp
add
aad
rclb
pop
movsb
adc
or
add
in
sub
adc
pop
or
into
aas
push
or
xlat
mov
mov
inc
imul
into
idiv
cmp
pop
jge
mov
and
fcomps
mov
sub
adc
inc
outsl
add
fldl
and
push
negb
cld
sub
jge
dec
hlt
push
push
push
mov
xchg
adc
or
push
repz
sbb
xor
js
dec
sub
int
pop
call
stos
dec
sub
fsubr
pop
in
mov
cmpsb
mov
cs
stos
dec
jo
pop
bnd
or
addr16
and
mov
hlt
cmp
pop
dec
shll
gs
dec
shll
gs
jb
scas
fwait
push
and
test
test
scas
stos
bts
gs
mov
inc
sbbl
sub
arpl
adc
pop
dec
adc
mov
int3
push
add
rol
jno
jne
das
adc
shlb
dec
rolb
cmpsb
bound
sbb
adc
push
adc
add
mov
shll
push
dec
xchg
or
and
aad
sub
dec
scas
jmp
scas
fcomps
fisttpl
push
mov
inc
loopne
loope
loop
add
in
inc
xlat
mov
mov
mov
xlat
int
pop
mov
mov
inc
movzbl
or
mov
lods
xlat
jne
mov
arpl
and
or
inc
shlb
fs
jmp
push
or
fcomps
and
pusha
mov
pop
dec
outsl
mov
mov
call
lcall
add
lcall
push
jnp
push
add
jo
fisubrl
outsl
fists
add
or
xchg
enter
mov
loopne
dec
popa
jecxz
push
pop
mov
adc
mov
icebp
jne
add
add
cmp
push
das
and
scas
push
je
pop
scas
xchg
mov
loop
jne
mov
adc
adc
add
lcall
push
lcall
add
mov
xor
or
mov
sub
push
inc
pop
test
ret
inc
add
sub
or
xchg
sbb
push
stc
dec
scas
push
movnti
jno
and
dec
bound
in
adc
xchg
mov
inc
icebp
int3
adc
push
pop
pusha
sbb
in
in
push
pop
push
cmp
or
jo
sub
add
shrl
lock
sbb
inc
call
sbbb
mov
adc
cmovle
imul
mov
pushf
adc
outsb
pop
push
push
sub
fnstsw
rorb
pop
or
insb
lret
mov
push
add
adc
pop
pop
insl
fwait
stos
push
ret
or
imul
pop
pop
pop
test
jne
adc
inc
pusha
push
inc
jne
add
js
mov
inc
cmp
sbbb
jle
jbe
mov
jae
test
add
jnp
push
sub
xchg
dec
adc
add
inc
mov
or
push
xor
loopne
jecxz
leave
lahf
dec
leave
and
pop
je
sbb
add
fstps
aaa
push
addl
sbbb
test
sbb
or
popf
inc
or
jne
shll
push
and
push
jmp
mov
in
mov
push
shr
in
cmc
inc
mov
mov
in
fst
adc
or
imul
lret
mov
sub
shl
and
sub
inc
clc
xchg
cmp
add
shrb
setbe
jmp
outsl
fisttps
mov
xor
neg
not
and
xor
xor
sar
adc
add
mov
add
mov
ss
jbe
dec
movsl
pop
ror
das
inc
notl
or
xchg
call
pop
mov
out
cmp
lea
and
ja
mov
mov
add
inc
mov
stos
mov
mov
or
cld
loope
rcrb
and
je
push
or
ret
cld
push
insb
add
xlat
adc
ret
orb
lods
jmp
add
push
stos
xchg
add
dec
jo
pop
cmp
jle
roll
movsb
or
add
hlt
pop
or
adc
cmp
jae
and
jb
sub
and
and
outsb
into
sub
das
jne
ss
push
ds
imul
inc
push
cmp
sub
fisttps
inc
jle
mov
fnstsw
aas
cmp
imulb
cs
mov
sbb
mov
and
std
into
call
sbb
imul
insl
fisttps
inc
jb
or
ss
mov
shr
adc
or
adc
data16
repz
rcll
stc
adc
sbb
mov
das
jmp
jae
int
jno
test
arpl
imul
cmp
rorl
jno
popa
jb
mov
es
xor
and
rclb
outsb
push
jne
sbb
imul
lcall
hlt
loope
fstps
out
dec
shll
jmp
popf
sub
lock
icebp
repnz
push
jge
push
adc
cmp
add
aad
sbbl
jne
and
xor
or
push
mov
rorb
rcrb
mov
pop
pop
or
cmp
push
dec
orl
sub
arpl
psubsb
adc
push
push
lock
mov
addr16
sbb
add
sub
dec
nop
lret
inc
sub
gs
cltd
push
add
stos
call
sub
add
sub
pop
in
and
and
int3
or
popa
icebp
or
adc
iret
xor
pusha
and
or
ljmp
dec
out
or
imul
repnz
cmpsb
jo
jae
jne
adc
and
sub
jbe
in
popf
icebp
popa
pop
jno
insl
call
add
mov
push
insb
filds
xor
add
push
dec
sub
xchg
cmp
cmp
mov
enter
pushf
pop
cmp
sbb
insb
icebp
inc
cmp
and
std
inc
mov
and
movsl
or
ret
fs
sbb
les
xor
inc
cmp
cld
inc
je
int
lcall
loope
daa
imul
adc
rcl
dec
mov
cli
rolb
sbb
jne
push
pop
sbb
xorb
loopne
mov
out
cmp
jo
xor
loopne
mov
out
sbb
inc
mov
addl
add
cmp
inc
testb
test
push
jmp
inc
test
or
mov
xchg
dec
sub
in
dec
or
and
cld
pop
sti
push
fisubrl
dec
iret
mov
cmpsb
imul
lcall
xor
imul
in
lahf
pop
mov
aaa
stos
mov
insl
mov
subl
popa
jl
out
aad
mov
pop
xor
div
gs
dec
hlt
and
or
adc
and
mov
xchg
adc
test
mov
sbb
leave
cld
push
sbb
jmp
pop
insb
scas
lret
xor
xchg
add
pop
and
scas
jmp
fwait
pushf
pushf
mov
cwtl
pop
orb
mov
in
data16
daa
cmpsb
imul
fwait
sub
test
cmp
scas
inc
scas
fdivs
sub
popa
rcll
sbbb
sub
xor
outsl
outsb
cmp
add
in
add
les
scas
enter
add
call
xor
xor
aaa
orl
fdivs
or
mov
pop
push
sbb
jg
loopne
or
nop
movsb
xchg
ljmp
cmp
or
ficoml
insb
fildll
jae
ja
jl
add
and
andb
outsl
ret
test
and
outsl
adc
jno
jp
xlat
repz
adc
aam
jg
mov
dec
je
add
icebp
jne
add
scas
push
jmp
or
sbb
aas
push
inc
cwtl
dec
cld
incl
mov
lahf
psubsb
ljmp
push
add
rorb
adc
daa
test
jmp
call
mov
jg
mov
mov
pop
inc
mov
jmp
mov
nop
mov
push
xor
mov
pop
mov
mov
loopne
test
add
adc
orl
adc
mov
mov
adc
push
or
mov
mul
ljmp
rcl
shlb
cli
cmp
cltd
addr16
sbb
and
lods
push
andb
xor
imul
test
sbb
sahf
jae
jbe
psubsb
cld
jmp
xlat
insl
push
fiadds
mov
push
ja
lock
xchg
ljmp
sbb
popa
je
and
fs
adc
add
mov
cli
jns
or
not
xchg
insb
adc
clc
cmp
and
xchg
mov
xor
insl
int3
jle
popf
mov
push
jmp
mov
xorl
ficoms
add
mov
jl
sub
add
scas
psllq
repz
push
cmp
jne
sub
loopne
add
lock
push
jmp
jae
sahf
loop
jmp
xchg
pop
icebp
add
fs
and
or
cmp
adc
sarb
cmpl
jle
scas
adc
js
or
sbb
incl
push
ffree
add
push
loop
mov
clc
subl
and
add
sti
out
sbb
dec
add
out
or
rclb
out
mov
or
js
push
aaa
shlb
sti
pop
cld
inc
std
inc
lds
rclb
pushf
incl
rorb
dec
pusha
mov
loopne
push
mov
push
js
mov
dec
je
mov
dec
rclb
test
add
dec
dec
inc
and
je
mov
push
xchg
inc
inc
inc
shll
push
push
fstps
mov
sbb
inc
sbb
xor
sub
jne
push
push
lahf
jp
xor
rcr
fs
cltd
and
lds
xor
fwait
loopne
loope
popa
push
jo
lcall
mov
xor
mov
cltd
in
mov
add
fldenv
add
mov
push
xlat
psubd
sti
fs
loope
shrb
cmp
gs
sub
rol
add
inc
add
xchg
stc
xor
adc
mov
sub
sbb
add
push
iret
or
mov
hlt
inc
jl
add
xor
cmp
and
jge
cs
test
push
mov
lea
fldl
icebp
push
sub
or
cmp
imul
jo
call
add
add
clc
testl
jl
pop
clc
call
jb
xor
or
outsb
incl
mov
add
or
pop
pop
jmp
sbb
int
dec
and
nop
add
repnz
dec
add
add
in
popl
xchg
push
fwait
xlat
iret
int3
lret
add
xchg
adc
dec
push
and
daa
mov
jo
add
in
pop
add
movsb
cmp
add
push
xchg
mov
shll
rorb
sti
lret
jb
mov
and
add
dec
pop
mov
sbb
add
idivb
push
cmc
adc
movsl
sbb
or
xorb
or
insl
push
les
cmp
js
jno
jne
lret
push
insl
push
mov
jg
mov
dec
into
add
test
adc
push
dec
add
or
cmp
mov
lret
daa
test
inc
cmpsl
pop
adc
pmaxsw
push
xchg
and
movsb
inc
push
shll
ljmp
cmp
ret
mov
and
les
sbbl
adc
test
pop
xchg
sub
add
lock
mov
testl
cmp
add
add
jl
add
push
xchg
out
jmp
sub
mov
adc
and
add
movsb
dec
outsb
add
inc
xor
xor
stc
jmp
add
xor
xor
sub
xor
xor
and
int3
add
test
push
xor
or
movsl
and
xor
push
and
fcmovnb
int3
sub
adc
inc
inc
sahf
and
inc
inc
inc
int3
rcl
fcomps
insb
cld
ret
adc
add
inc
popf
pop
adc
sbb
dec
add
jbe
sub
inc
push
popf
lahf
arpl
sub
in
and
and
in
lock
push
and
clc
cld
mov
mov
xor
mov
clc
pop
or
mov
sub
sti
scas
jp
js
andl
mov
pop
xlat
inc
add
in
call
mov
jmp
arpl
es
xor
ljmp
jno
cmp
jb
mov
test
je
call
push
sub
add
out
add
ljmp
push
pavgb
push
mov
pop
pop
daa
pop
mov
add
es
je
xchg
mov
jne
mov
pop
mov
leave
adc
ljmp
xlat
sbb
xor
pop
aaa
jbe
lods
rclb
test
inc
add
enter
and
sbb
and
pop
cmp
cmp
xor
cs
pushf
dec
xor
movb
or
xor
movsb
pushf
mov
insb
roll
outsb
mov
inc
pop
mov
dec
push
call
jmp
pop
mov
or
add
dec
and
ficomps
xchg
inc
jecxz
pop
aad
sbbl
cmp
mov
addl
push
loopne
in
cmp
aad
mov
sub
mov
add
mov
mov
jne
lret
inc
adc
pop
xchg
push
mov
dec
xor
pop
ret
lock
jl
jne
cmpl
scas
jmp
mov
cwtl
adc
popf
jge
pusha
int3
int3
xor
mov
mov
add
sub
stc
pop
xor
mov
lcall
add
addr16
add
je
call
jl
dec
shll
loopne
mov
xchg
sub
cmp
shll
mov
dec
ret
sub
sbb
or
sub
ja
enter
shll
das
out
in
fcompl
xchg
stos
cwtl
addl
shll
lock
lcall
add
add
and
imul
insb
lcall
lcall
add
imul
imul
shll
add
mov
test
mov
incl
xor
mov
ret
jecxz
scas
mov
add
call
pop
in
lahf
insl
mov
cltd
aaa
insl
popa
imul
jl
arpl
outsb
xor
jo
mov
mov
jae
mov
add
sub
sub
inc
out
xor
outsb
jnp
in
rorb
aam
dec
or
jbe
cltd
insb
movaps
sub
imul
mov
imul
in
flds
test
pop
mov
in
mov
xchg
sbb
sub
pop
sub
xacquire
add
ret
nop
and
fs
xchg
jb
and
test
xor
xchg
or
andl
xchg
mov
mov
popa
dec
push
pop
mov
cmpsl
add
mov
sarb
dec
daa
push
pusha
pop
movl
imul
rcrb
add
jp
mov
outsl
add
gs
outsl
sub
push
insb
gs
jg
inc
gs
lods
xor
outsl
fs
dec
popa
outsb
fs
incl
je
popa
insb
pop
xor
and
je
and
mov
inc
sarb
sbb
dec
outsl
inc
dec
imul
popa
jb
xor
mov
imul
jnp
sbb
push
or
jae
pop
push
cmp
fistpl
xor
insb
outsl
jae
add
or
insb
decl
je
jb
jb
mov
dec
jne
sub
pop
inc
gs
movsb
test
gs
fdivs
jge
cs
popa
mov
xlat
add
popa
sti
inc
sbb
add
inc
ret
pusha
mov
outsl
movsb
push
das
add
insb
imul
jne
cmp
cmp
dec
inc
nop
das
popa
inc
stos
push
fcomi
lock
es
bound
and
adc
or
imul
or
imul
push
xor
gs
sub
or
gs
ret
ss
popa
imul
mov
inc
jns
flds
mov
mov
gs
dec
add
mov
mov
ret
push
je
and
pop
and
push
lcall
inc
in
add
push
dec
adc
insb
mov
fistps
imul
push
ret
shlb
cmp
adc
rcrl
add
pop
add
pop
adc
clc
inc
push
dec
inc
dec
stc
aaa
pop
jnp
ja
xor
add
dec
mov
push
insb
or
add
xor
pushf
add
mov
xlat
jns
adc
mov
popa
adc
fdivr
or
aas
xor
inc
pop
push
add
iret
aaa
js
xor
dec
pop
pop
pop
or
in
inc
js
stos
popa
insl
push
or
out
std
mov
mov
mov
lea
mov
mov
stos
daa
outsb
js
mov
js
add
imulb
jae
lret
fnstsw
je
push
gs
cmpsl
cmp
add
sub
fsub
mov
inc
outsl
push
or
adc
out
sti
or
in
or
outsb
pop
lods
adc
jo
addr16
or
jne
mov
cmovge
imul
inc
arpl
or
xor
xchg
punpckhwd
cmp
addr16
mov
dec
aas
iret
pop
jo
sbb
sbb
dec
mov
xchg
mov
xorl
test
xchg
cmp
pop
push
das
push
popa
jbe
rcrl
sub
ret
pop
inc
sbbl
dec
inc
dec
push
dec
push
sti
xchg
or
mov
arpl
and
into
mov
cmp
inc
inc
pop
or
add
add
insb
or
add
mov
cmp
or
bound
fninit
sbb
pop
jbe
mov
sbb
and
sbb
inc
inc
dec
mov
xchg
sar
incl
call
in
lahf
enter
rcrb
frstor
mov
std
dec
pop
arpl
data16
decl
inc
push
fwait
lds
push
xchg
fldl
jnp
inc
xor
dec
mov
int3
xor
xchg
loopne
xchg
mov
pushl
out
adc
jno
or
push
adc
sti
xor
cmp
lahf
icebp
sub
scas
ss
add
orl
and
sarb
in
imul
pop
arpl
ja
ficompl
cmpb
mov
in
sub
jae
add
sbb
add
bound
push
sub
int3
addr16
xor
dec
fmul
pop
add
mov
push
sbb
push
sub
cmpsl
sub
fwait
leave
imul
adc
adc
mov
sub
mov
xor
mov
popa
add
sub
and
push
adc
dec
pop
xor
sbbb
filds
jae
mov
xchg
xchg
push
js
fmuls
imul
mov
xchg
mov
inc
mov
das
mov
mov
mov
jns
fstl
stos
jg
mov
outsb
fidivs
fsubr
xor
out
xchg
cltd
dec
aas
mov
jnp
sub
into
addb
push
pushl
int
hlt
lea
roll
or
mov
shrl
pop
into
dec
fwait
or
pushl
loope
mov
cli
cltd
mov
iret
fwait
push
imulb
jge
adc
mov
imul
jnp
incl
stos
shrl
mov
jns
push
sbb
push
je
mov
test
lock
mov
jae
dec
inc
add
inc
mov
incl
sbb
call
mov
aas
cmc
jl
fldcw
out
push
jnp
xlat
xchg
xchg
inc
repnz
and
enter
sbb
mov
xor
test
xchg
inc
call
out
movsl
dec
pushl
pop
mov
mov
dec
jl
data16
push
add
lds
std
incl
sarl
scas
sbb
ss
pusha
or
pop
mov
pop
mov
dec
pop
pop
mov
call
push
xchg
or
or
jae
fimuls
add
mov
mov
scas
into
dec
test
sbb
xchg
repz
push
rcrb
and
mov
xlat
bnd
push
push
sub
or
rorl
incl
std
les
lcall
decl
add
sbb
sbb
rolb
fsubl
pushl
decl
and
les
hlt
int
inc
inc
leave
movsl
xor
cli
push
pop
jmp
dec
je
pop
shlb
xchg
lret
add
jmp
inc
jns
sti
test
xor
lds
sbb
jmp
xchg
lea
jne
lahf
mov
test
pop
loop
outsl
invd
mov
mov
push
pop
lret
sub
mov
inc
pop
pop
dec
xchg
std
jmp
cmpsl
movsl
inc
jge
pop
jmp
mov
dec
je
mov
xchg
push
shr
and
cmp
dec
dec
fadds
xor
xor
sbb
out
psubq
sti
push
dec
daa
mov
les
lds
in
dec
mov
sub
and
bound
fistpll
pop
jl
jnp
mov
pop
sub
add
add
outsl
fs
fists
pushf
push
shlb
and
sbb
add
ss
mov
add
jbe
mov
push
hlt
add
fsubrs
nop
adc
dec
fs
cmp
sti
sub
scas
mov
hlt
xor
sbb
sarl
or
pop
sbb
daa
call
add
adc
gs
and
insb
test
and
xor
add
xchg
mov
xchg
add
dec
and
xor
add
out
xchg
test
xor
mov
nop
add
sbb
sub
sbb
sub
sub
dec
pop
jmp
adc
inc
add
or
movsl
shll
jbe
push
push
pop
sbb
push
cltd
adc
lods
adc
push
or
cmpsb
push
hlt
or
inc
mov
call
add
adc
adc
mov
lds
push
enter
inc
cmpb
data16
lea
push
sbb
inc
or
pop
or
push
rorb
subl
sbb
adc
adc
mov
scas
insb
and
clc
xor
sub
pop
pop
je
inc
testb
jg
mov
popaw
int3
adc
and
mov
call
inc
int
popa
es
or
outsb
fucomip
pusha
xor
notrack
push
mov
je
jb
fmul
push
lds
addb
or
sub
addl
mov
ret
push
xor
jp
arpl
scas
or
jbe
mov
push
and
dec
mov
mov
add
fmuls
mov
fsubl
pushf
jne
sbb
xchg
cmp
decl
jne
outsl
add
test
jge
not
inc
mov
push
xchg
push
adc
popa
out
je
inc
jbe
fmuls
ret
add
jp
or
add
pop
mov
test
sete
cli
js
jp
and
js
sub
dec
mov
or
mov
pop
push
bound
and
adc
or
inc
mov
aas
jg
mov
ja
mov
dec
dec
mov
cmp
pop
ljmp
or
adc
out
mov
xchg
lock
rol
sub
xchg
push
inc
pop
sub
aas
push
xor
jne
lcall
fs
or
ret
jmp
adc
pcmpeqw
sub
push
push
xor
loopne
mov
fdivl
adc
nop
and
int3
xor
pop
pop
ret
push
aad
mov
and
or
hlt
mov
xchg
xchg
xchg
cmpsb
imul
jo
fisubrl
icebp
imul
mov
lret
cltd
mov
pop
cmc
adc
mov
and
adc
pop
fsubr
pop
pop
and
mov
or
jo
in
xor
aaa
or
and
arpl
mov
adc
mov
test
cwtl
add
push
pop
sbb
mov
and
or
subl
sub
mov
cmpsl
push
call
add
and
pop
add
rcrl
jge
cmp
ja
add
das
inc
mov
ss
inc
mov
dec
or
addb
decl
or
iret
int
inc
ss
into
cld
into
sti
call
stc
cmp
shrb
ret
mov
push
pop
mov
daa
sti
cmp
push
adc
jnp
mov
add
and
imul
lcall
aas
jnp
outsl
pop
fwait
roll
mov
jmp
mov
or
movsb
jecxz
enter
jbe
sbb
pop
nop
xchg
adc
push
push
jmp
sbb
push
cmpsb
dec
push
mov
push
push
xor
call
or
and
incb
mov
mov
lds
cmp
mov
out
xor
andl
sbb
adc
mov
adc
xchg
cld
scas
and
lods
fsts
test
cmp
push
faddl
mov
push
ljmp
mov
ret
mov
push
mov
push
mov
add
out
in
int3
xlat
push
cwtl
or
cmp
sbb
je
outsb
adc
jp
shl
inc
fstp
out
adc
cmp
sub
adc
and
sbb
aaa
sub
or
jle
xor
and
xorb
mov
push
pop
fiaddl
push
pop
dec
sub
fstpl
je
mov
ficompl
xchg
mov
rorb
shll
int3
clc
mov
popf
lods
in
mov
popa
mov
mov
movsb
inc
inc
cmpsl
arpl
mov
push
in
push
sbb
jmp
sbb
and
and
pop
int3
syscall
xchg
adc
mov
push
adc
lods
mov
adc
push
scas
sub
mov
out
dec
xchg
dec
clc
jle
xchg
xchg
or
cld
jge
xor
mov
ds
cs
inc
shlb
fidivrs
xrelease
fcoms
mov
call
sub
add
cmp
inc
out
pop
and
icebp
jmp
cltd
jns
test
mov
add
jne
mov
cmpsb
mov
xchg
cltd
cmp
lea
cmc
inc
sub
bnd
push
rcrl
mov
mov
mov
push
push
imul
lods
imul
sub
call
adc
or
add
inc
in
shlb
inc
mov
mov
aas
dec
mov
ret
mov
pop
add
mov
and
push
nop
das
mov
mov
lods
mov
add
sub
sbb
dec
cmp
xchg
inc
in
mov
sbb
mov
outsl
add
js
rolb
sbb
daa
into
jno
cld
daa
add
clc
call
sbb
sub
and
mov
ror
dec
hlt
sub
push
add
mov
sahf
or
imul
push
mov
push
fsubs
mov
mov
xor
push
cwtl
push
jb
push
mov
push
mov
add
popf
in
inc
fildl
cmpsb
push
sbb
push
mov
push
pop
adc
enter
or
sub
mov
call
or
mov
inc
loopne
push
jmp
dec
and
adc
mov
inc
sbb
or
dec
ficomps
or
ds
cmp
jnp
shl
movsb
insb
xor
ja
jne
push
push
push
insb
push
or
jnp
mov
cmp
add
pop
xchg
xchg
cmp
repz
stos
sahf
rclb
mov
int3
test
add
add
jecxz
pop
mov
mov
fnsave
and
scas
mov
and
push
push
shr
cmp
jmp
and
or
lods
cmp
lods
sbb
inc
push
scas
and
mov
int3
and
inc
insb
pop
sbb
push
mov
mov
push
xchg
add
cld
cmp
pop
ss
lret
or
and
or
pop
xchg
stos
movsb
add
shl
add
mov
xlat
je
push
xchg
jbe
and
fldenv
pop
add
cmp
pop
dec
shll
pop
movsb
add
or
xor
cli
adc
add
cmp
lcall
mov
aam
mov
push
scas
sbb
sub
imul
movl
nop
xor
cld
jmp
xor
out
jnp
and
jo
shlb
rcr
jbe
insb
adc
ret
mov
xor
cmp
jne
add
mov
xchg
adc
test
add
add
outsl
rorl
out
add
or
add
add
add
imul
xchg
addb
inc
adc
and
and
dec
imul
cwtl
inc
stos
popf
jecxz
imul
jbe
sub
fldt
test
and
loopne
clc
mov
imul
push
dec
pop
or
pop
add
push
add
jo
add
les
and
in
popa
bound
addl
xchg
add
mov
outsb
inc
fisubrs
addb
cmp
arpl
push
mov
imul
xor
xchg
push
push
int
mov
or
jae
gs
pop
push
outsl
dec
andl
mov
or
dec
inc
roll
les
icebp
cmp
arpl
stos
add
mov
ljmp
mov
mov
popa
je
sub
fwait
addb
repnz
inc
add
int
sub
and
rolb
jns
jl
cmpsl
rcll
incl
push
xchg
lods
fdivrl
adc
push
aad
out
add
xor
pop
adc
mov
inc
lret
mov
inc
push
xlat
rclb
sbb
jne
daa
cmp
jle
dec
xchg
cmovb
fs
or
sub
cmp
pusha
add
je
add
mov
aas
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
idivb
outsb
mov
jg
cmp
movsl
xlat
ja
mov
mov
dec
jecxz
fdivs
add
pushl
add
mov
in
je
in
sbb
mov
ljmp
jbe
cmpsb
in
ljmp
mov
mov
or
int3
lahf
pusha
into
push
into
pop
xor
cmp
clc
jmp
loope
inc
cwtl
inc
cmc
mov
jno
xor
movsb
out
add
js
add
lcall
or
enter
cmp
mov
shll
push
stos
add
mov
mov
inc
loopne
out
and
push
outsb
test
stos
mov
and
xchg
pushf
or
mov
imul
pop
lret
into
int3
in
in
decl
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
cmova
scas
pop
sbb
clc
idivl
mov
xor
xchg
pop
push
jnp
call
dec
mov
dec
cld
mov
fistl
ss
jmp
movsl
or
loopne
pop
jmp
add
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
jg
fistl
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
cmp
cld
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
and
jnp
cmp
repz
adcl
faddp
in
shrl
bound
jle
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
repz
stos
incl
cltd
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
add
lret
ud0
jg
int
imul
xlat
pop
gs
repnz
sbb
jge
dec
in
lock
inc
cli
and
aam
pop
enter
shlb
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
xbegin
js
enter
jl
faddl
pop
and
push
or
inc
xchg
pushf
insb
or
push
or
add
sbb
sub
jmp
push
push
pop
inc
mov
adc
pushf
shlb
jb
cmove
int
xlat
push
add
mov
mov
add
add
stos
mov
xchg
leave
lods
int
rcl
jne
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
test
sub
or
cld
jg
cmp
inc
add
mov
lock
repz
sbb
insb
and
loopne
jmp
xor
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
stc
movsb
jmp
repnz
push
in
aaa
xchg
pop
cmp
cs
outsl
dec
sub
das
lret
lcall
push
aad
add
mov
mov
mov
movsl
mov
mov
sub
stc
insl
cmpl
into
xchg
into
adc
jle
fisubrs
mov
mov
leave
mov
pop
fnstsw
decl
or
jecxz
pushf
adc
scas
jb
adc
mov
add
repnz
dec
inc
mov
inc
or
xchg
and
iret
into
add
sti
clc
lcall
and
sub
cmp
push
hlt
adc
sbb
ficompl
pushl
adc
ret
cwtl
jne
stos
sub
mov
jecxz
sahf
lcall
add
xor
jg
insb
lods
arpl
mov
cld
mov
jle
aad
clc
test
inc
mov
mov
sbb
dec
pop
pop
stos
jecxz
mov
mov
xchg
cmc
into
lock
incl
mov
ret
jno
dec
les
lea
cld
mov
pop
mov
fmul
jge
cltd
in
jmp
mov
aam
push
shr
das
adc
test
popa
jg
repnz
add
or
mov
xchg
cs
enter
jo
pushl
inc
insl
mov
ja
xchg
enter
gs
dec
jge
insl
xor
jmp
lods
jge
sbb
dec
inc
jnp
aam
call
stos
mov
and
inc
add
xchg
icebp
and
pushl
cli
add
xor
push
bound
test
add
sarl
insl
mov
sub
inc
stos
enter
xchg
jmp
out
and
jl
cmp
clc
inc
mov
xlat
jge
lcall
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
pop
call
inc
test
jg
subb
jne
mov
addl
cld
ss
jmp
in
insl
pop
stos
insb
mov
adc
sbb
insb
das
ss
jg
aas
xor
mov
out
jns
pop
leave
aas
aad
jg
call
in
mov
lret
push
mov
fisubrs
add
jae
scas
pop
jo
dec
rcll
adcb
loop
sub
bound
adc
mov
rorb
mov
jl
pop
out
sar
or
scas
loope
and
sarl
test
aaa
mov
push
js
insb
or
dec
mov
or
push
cltd
and
loope
mov
adc
push
sub
into
fcomip
jg
sub
dec
test
mov
dec
add
and
push
cmc
add
outsl
into
imul
pop
pop
dec
incl
cmp
icebp
xor
dec
ja
into
jb
xor
pop
jo
jecxz
mov
push
ror
mov
cli
sub
sti
lret
and
push
ret
mov
mov
call
das
inc
sub
or
adc
scas
out
or
das
stc
mov
mov
mov
or
jl
loope
aam
into
ret
mov
mov
ret
xchg
cli
mov
dec
and
decl
mov
test
iret
pop
xor
pusha
hlt
pop
mov
xchg
or
push
and
aam
jg
pop
pop
ret
or
adc
test
xchg
into
movsl
add
shl
inc
pop
jmp
out
repz
mov
scas
lret
xchg
cmp
loop
sar
sbb
dec
ljmp
arpl
outsl
mov
sarb
loope
enter
and
lea
sti
pop
vmwrite
int3
cmp
stc
out
mov
and
aam
push
lret
insl
out
outsl
ljmp
test
push
or
dec
add
sub
inc
push
jo
scas
adc
loope
movsl
jb
into
jp
ret
push
adc
sbb
dec
stos
in
jg
dec
int3
inc
ljmp
stos
lock
decl
xlat
jo
sub
sbb
push
daa
or
sub
xchg
adc
clc
or
aas
add
test
jecxz
jne
mov
adc
clc
pop
push
and
xchg
xchg
stos
jle
mov
adc
fucomip
call
sbb
hlt
and
pop
add
iret
cld
ret
arpl
das
cmpb
call
dec
and
gs
adc
mov
cs
inc
mov
cmp
mov
xrelease
xor
stos
das
push
lret
ds
jmp
sbbb
jae
mov
sarb
push
mov
ret
jns
lcall
jmp
iret
cmp
dec
mov
repz
addr16
jmp
add
add
out
xchg
adc
iret
daa
ret
dec
das
jge
jg
mov
pop
jne
mov
add
mov
dec
cmp
int
scas
repnz
into
fidivrs
call
in
jg
insb
and
xor
push
stc
add
push
mov
or
test
repnz
jg
jg
rcll
into
and
iret
push
sub
push
inc
xchg
test
push
xchg
popf
xchg
stos
push
sub
fstps
lret
fwait
in
add
or
lcall
jecxz
outsb
cmp
movsl
and
mov
push
enter
rolb
mov
into
sbb
mov
mov
xlat
jb
pop
mov
cmp
lods
outsl
xchg
sub
xor
cs
es
lods
inc
test
or
or
incl
add
call
movsl
popf
popa
ret
fistpll
sbb
and
outsb
mov
mov
mov
popf
pop
adc
cmpsb
jne
lahf
rcl
push
mov
adc
js
fadd
imul
rcll
popa
imul
xchg
in
xor
mov
push
sbb
popf
in
jle
fisubs
sbb
imul
addl
mov
add
fiaddl
jg
adc
inc
arpl
jg
and
ret
aas
push
jb
cmpsl
loopne
mov
jns
in
add
call
insl
aam
push
int3
fisubrs
adc
cmpsl
xchg
sbb
xchg
cltd
popa
or
loop
dec
ljmp
loop
aam
mov
js
add
dec
pusha
mov
cmp
data16
or
scas
pop
std
jno
jnp
and
xchg
movsl
inc
jmp
mov
mov
cmp
rorl
push
sbb
mov
out
pop
and
or
and
mulb
fadd
adc
stos
and
sub
out
jne
or
add
jbe
adc
pop
imul
cs
push
or
adc
and
das
lock
das
and
add
into
pop
jne
jne
rorb
call
ror
test
pop
mov
xor
das
notl
inc
out
mov
aad
mov
outsl
sub
incl
mov
fcompl
outsl
xchg
xor
icebp
mov
ret
ret
lcall
sbb
icebp
mov
mov
mov
ret
ja
mov
push
add
sbb
rcrb
sub
xor
and
in
pop
in
jne
in
sub
shlb
loop
sub
mov
les
cmp
out
add
push
loope
outsl
and
push
mov
stos
lods
test
sbb
and
pop
pop
sbb
rorb
aaa
jg
inc
lock
xlat
xchg
addr16
sarb
rolb
stc
out
dec
lret
and
push
mov
pushf
mov
mov
dec
dec
cltd
and
aam
push
leave
popf
shrl
pop
loop
jg
pushf
mov
test
int
and
dec
clc
add
add
sar
aaa
inc
movsl
hlt
jne
mov
call
adc
inc
pushf
test
cmc
fdivr
call
or
stc
sub
push
mov
pusha
jmp
decl
xchg
pop
ret
jne
or
cmp
mov
mov
lods
shl
fsubrl
clc
pusha
push
arpl
dec
out
mov
and
mov
cld
ffreep
fwait
xchg
lods
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
shlb
mov
inc
nop
add
pushf
xchg
sub
inc
sbb
rorb
xchg
pop
jp
sbb
cmp
cmp
xchg
fnstcw
cltd
cld
mov
sub
std
mov
outsb
add
dec
mov
loopne
call
lea
iret
mov
inc
in
xchg
mov
inc
loop
mov
dec
push
adc
xor
lcall
push
xor
pop
clc
shll
popa
mov
mov
pop
nop
pop
jo
out
in
mov
sbb
jmp
mov
lcall
add
mov
push
xchg
scas
xor
clc
decl
pop
sub
bound
jle
aad
test
popa
sbb
sbb
cmpsl
pusha
xchg
je
push
cmp
pop
into
clc
mov
mov
mov
ret
jbe
outsl
ffree
clc
or
and
push
pop
pop
ret
loop
pop
pop
push
jo
jno
add
and
aam
das
mov
mov
ss
test
add
cli
pop
xchg
clc
add
dec
je
aam
xchg
stos
push
in
aad
lock
inc
jno
sarl
inc
push
add
add
or
sub
xor
xor
xor
add
xchg
pushl
aam
sahf
xor
xor
fdivs
sbb
xor
xor
dec
cld
testb
xor
add
xor
lcall
ja
push
imul
push
ss
imul
jge
test
mov
fstpt
mov
into
ss
add
aaa
push
aaa
pop
pushl
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
shll
fdivl
add
or
sbb
inc
cmp
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
sbb
aas
cmp
incl
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
adc
cmp
xor
cmp
pop
cmp
call
cmp
mov
mov
mov
fists
cmp
cld
cmp
pop
ds
gs
mov
ds
or
test
push
xor
add
add
add
call
mov
dec
gs
sti
enter
je
insb
insb
filds
or
push
sbbb
or
inc
nop
add
or
add
notl
and
pusha
add
or
add
inc
rolb
add
nop
pop
pusha
xchg
and
and
push
enter
and
ret
inc
fsts
add
fsubs
test
cmp
and
add
add
and
insb
mov
rorb
adc
pop
or
inc
push
and
incl
dec
pop
add
and
out
dec
ds
add
and
add
test
inc
xchg
lea
pop
shlb
sbbb
daa
mov
add
dec
push
or
ret
mov
pop
and
out
add
xchg
std
adc
xor
push
push
inc
mov
add
add
pushl
inc
and
add
jae
push
inc
jb
push
and
ja
clc
imul
sti
or
push
addr16
xor
push
or
jae
and
nop
dec
dec
inc
inc
nop
jl
xor
jae
mov
push
xor
lret
incl
lods
cmp
movsb
mov
fidivl
in
lods
mov
mov
adc
mov
mov
jbe
aas
movsb
mov
or
decl
push
popa
imul
lds
mov
mov
stos
insb
repnz
jb
adc
and
subb
xor
pop
pop
push
dec
push
push
pop
inc
decb
dec
inc
pop
inc
inc
jecxz
mov
mov
lcall
decl
rcl
int
orl
lock
mov
fisttpll
pushl
int
cld
ss
add
xor
xor
inc
dec
add
inc
push
pop
clc
or
jb
adc
mov
insl
lahf
add
sbb
cli
jg
push
inc
add
mov
daa
pop
fists
mov
decl
mov
xlat
out
fldl
addr16
in
shlb
cmpxchg
pop
sbb
add
mov
ljmp
pop
sbb
in
lret
roll
xor
cltd
stos
pop
xchg
or
faddl
add
inc
and
incb
fldcw
sub
incb
daa
xlat
or
aaa
cmp
inc
sbb
aam
aas
adc
jae
out
in
notb
fwait
mov
mov
mov
arpl
loope
std
fidivrs
pop
jnp
or
sarl
jnp
mov
fcom
outsl
mov
pop
fistps
sbb
imul
mov
jnp
stos
stos
jmp
fidivrs
roll
mov
xchg
jnp
inc
push
popa
int
ret
fsubp
mov
sub
cmp
lahf
maskmovq
or
pop
mov
dec
ret
iret
setnp
fsubrp
sbb
mov
mov
aaa
jnp
ret
ja
aam
daa
sti
lock
fstl
mov
ljmp
rcll
das
or
setp
sbb
dec
mov
mov
sub
pop
movsbl
fidivrs
fwait
add
xchg
pop
jo
idivb
pop
jnp
daa
xlat
psubb
mov
roll
lret
fbstp
vmptrld
iret
ret
outsl
push
sub
push
fdivr
xchg
lret
cmp
fcomip
fildll
ficoml
mov
sarl
mov
lret
das
adc
movq
ret
xchg
scas
psadbw
ljmp
fsubrp
xorb
ficompl
mov
mov
daa
xlat
inc
paddsb
cmp
sub
gs
lret
adc
cli
sbb
ja
mov
mov
sub
lock
mov
outsl
mov
add
add
mov
push
sti
test
sub
aad
shr
mov
fcomps
lcall
call
sti
cmp
sub
shl
and
or
sub
sub
incl
pop
rcl
pop
mov
mov
incl
cmc
dec
pusha
pop
shlb
insb
mov
rorb
ljmp
testl
dec
fdivp
fsubrp
arpl
inc
std
in
mov
stc
jnp
add
cmc
shlb
icebp
add
mov
add
insb
push
jmp
pop
or
push
mov
add
pop
add
pop
cmp
xor
mov
and
adcl
mov
add
stc
ss
out
cmp
xchg
add
hlt
xchg
faddp
inc
les
iret
mov
xchg
add
fdivl
and
mov
int
adc
xor
jle
cli
and
push
or
rcll
jne
fmul
cmpsb
ja
aam
aas
fdivrs
cli
pushf
dec
es
sbb
stc
xor
push
testl
sbb
imul
imul
clc
add
and
xlat
pop
push
push
shr
jnp
mov
add
pop
adc
call
mov
outsl
mov
jae
ja
fimuls
jmp
inc
add
mov
divl
call
or
or
sbb
push
inc
aas
push
adc
popf
clc
pushl
repnz
arpl
sahf
and
jle
sbb
arpl
shrl
jge
inc
adc
lods
in
xchg
movsl
outsl
pop
fnstsw
ljmp
xor
xchg
add
loopne
mov
push
mov
insw
xchg
ds
cmp
and
dec
mov
sbb
fildll
pushl
sbb
int
sbb
sti
push
movb
sub
fbld
sub
adc
jg
call
into
push
mov
mov
out
sub
jmp
fsubrs
incl
jge
jbe
add
jno
mov
jge
inc
mov
and
add
jmp
xor
mov
frndint
or
mov
scas
dec
mov
divb
in
pop
lods
stc
pop
jmp
sub
mov
cli
xchg
lret
mov
jbe
xchg
push
in
add
jb
xchg
decl
pop
repz
popa
add
lcall
push
mov
mov
subl
adc
mov
adc
push
je
adc
not
xchg
adc
push
rol
loop
ljmp
shlb
or
lock
insb
xchg
pop
push
jbe
sbb
iret
decb
sbb
add
lcall
or
inc
call
cli
or
mov
lret
dec
and
neg
jmp
pop
pop
fsubrs
lret
pop
lods
ljmp
sub
add
push
out
mov
push
outsb
loop
jb
andb
insb
pop
out
ret
mov
in
ja
adc
add
fisttps
lds
aaa
or
mov
stos
stos
pop
xchg
ja
xchg
test
bts
pushf
xor
daa
cld
arpl
pop
or
mov
movl
jmp
inc
scas
xor
pop
call
out
sub
xor
imul
mov
idiv
dec
shr
add
rcr
rol
or
cmp
ljmp
push
dec
les
add
jge
push
cmp
jmp
fildl
push
xor
push
mov
sub
addr16
push
adc
insb
sub
into
clc
das
sbb
sbb
mov
je
xlat
mov
pop
sub
ret
in
add
insl
mov
fisubrs
pop
or
pop
pushf
call
ljmp
xchg
mov
filds
push
push
push
les
and
les
mov
test
mov
sbb
popa
xchg
pop
cmc
pushf
pop
push
inc
test
sbb
mov
inc
jnp
cmc
add
repz
clc
adc
jg
stc
in
pop
xor
insl
call
adc
push
xchg
pushf
xchg
mov
outsl
mov
sub
adc
cmc
or
ret
ret
xchg
adc
shl
decl
xchg
inc
lcall
jo
pusha
pop
push
push
mov
test
cmp
or
push
xor
pop
jne
mov
adc
jbe
test
sbb
jbe
bound
mov
or
push
and
sub
lock
cs
dec
push
pushf
sub
mov
jo
icebp
ss
sub
out
push
jo
divl
mov
loope
xchg
mov
mov
sub
out
sbb
cmpsb
mov
push
jmp
fldl
jb
cmp
mov
jmp
jo
xorb
jmp
cli
ja
inc
cmpsb
pop
or
pop
rcl
sti
sti
push
test
pop
repnz
stc
sbb
pop
jecxz
pushf
addr16
leave
lock
incl
ja
std
dec
push
cld
cltd
push
sbb
cmpsb
clc
in
aam
clc
add
daa
mov
add
loopne
mov
mov
adc
pop
mov
pop
inc
push
push
inc
mov
sub
xorl
nop
xor
ss
xchg
add
lcall
in
lret
dec
das
shrb
cmp
aas
out
in
and
loopne
or
xor
lods
mov
pusha
lret
std
rcll
xchg
into
ret
xor
sbb
dec
aas
jge
jmp
enter
rorl
mov
xor
add
mov
sbb
or
cli
add
sbb
fisubrl
out
sub
fistpl
sub
inc
xor
clc
pusha
push
movups
cmpsb
mov
jmp
jo
push
and
lret
setl
lods
hlt
pop
push
xor
sti
je
push
loope
push
outsb
mov
and
fsubr
pop
popf
leave
loop
scas
dec
int
jecxz
cmp
inc
je
aad
inc
push
call
mov
lds
or
js
sbb
or
adc
push
inc
call
mov
mov
add
pop
out
ror
fwait
leave
pop
filds
inc
rcl
imul
xchg
popa
adcb
sbb
outsl
aaa
mov
ret
insb
and
xchg
lods
jmp
sub
xchg
mov
add
cwtl
shll
ljmp
jne
or
outsb
stos
push
jns
cs
adc
insl
cmp
jmp
out
add
ds
mov
inc
push
fistpl
in
xchg
push
xchg
pop
lock
and
ret
pop
popa
xor
or
cwtl
scas
es
cmp
adc
add
ljmp
push
sbb
xchg
mov
jg
push
and
jl
mov
add
inc
sbbl
arpl
xlat
sbb
cmp
shlb
lcall
test
mov
test
pushf
rclb
pop
mov
mov
daa
push
aaa
das
pop
mov
jecxz
lea
rcrb
mov
call
jbe
stc
clc
psubb
movsb
inc
shr
add
repnz
push
ja
or
cmc
mov
outsl
inc
test
push
and
push
pusha
aaa
sahf
add
sub
xchg
cmp
pop
add
pop
call
adc
ret
mov
clc
pop
push
sbb
adc
std
and
mov
pusha
dec
sub
aam
int3
mov
in
mov
pushw
push
mov
int
ds
adc
call
loopne
sub
adc
imul
push
dec
sbb
in
sub
jno
popf
push
adc
add
dec
add
push
loopne
ja
jbe
pop
sti
add
call
sub
hlt
sbb
cmpsb
pusha
rep
adc
pop
stc
cmc
mov
push
fsubrp
mov
sets
lcall
jmp
in
fcoml
jbe
add
add
decl
loopne
scas
jmp
or
ja
cwtl
cmp
call
out
insb
jo
mov
pop
in
or
cmc
ja
fidivs
xor
ret
jmp
lret
out
mov
dec
lahf
mov
shl
sub
push
add
mov
adc
into
push
fsubr
test
push
sbb
cmp
cmc
test
add
lahf
jo
and
push
shrl
mov
movsl
xor
push
jbe
cmp
sbb
test
and
bound
or
cmp
inc
cmp
add
movl
adc
push
cs
mov
ret
int
sub
insl
repnz
scas
cmc
mov
popf
mov
push
and
aaa
pop
ljmp
ret
nop
icebp
das
push
hlt
cmp
push
js
loope
jl
clc
test
es
clc
and
call
loope
aam
test
jle
and
jns
xor
add
seta
imulb
add
cld
movb
adc
dec
enter
test
push
mov
in
jo
adc
jecxz
and
push
sbb
cmp
mov
dec
and
mov
adc
sbb
jb
push
and
ret
cld
cmp
mov
adc
call
pusha
cmp
movd
jg
mov
push
adc
dec
frstor
add
adc
rolb
pushf
jmp
call
call
mov
lods
and
jmp
imulb
ficoms
push
pop
pop
adc
hlt
aaa
push
not
xor
rcl
push
mov
push
pop
hlt
cmp
shr
jmp
dec
push
ds
js
jle
push
push
stos
dec
addr16
adc
xor
scas
imul
mov
insb
dec
shl
pop
cmp
sub
movb
outsl
push
adc
push
int
jmp
and
shl
mov
xor
data16
push
cli
cmp
loope
xlat
inc
xor
shrl
addb
and
and
sub
add
or
divb
fucomp
mov
test
mov
cwtl
pusha
std
enter
or
push
outsb
and
out
fcoml
xor
and
lds
sbb
jecxz
aas
mov
pusha
and
add
ja
or
test
leave
xor
rorl
jecxz
ja
fisttpl
and
lods
je
fsubr
insl
out
jg
aad
push
dec
add
pop
jnp
cli
test
push
cmp
and
jge
orb
pop
inc
ret
shrb
xchg
xor
fisubrs
fdivr
shl
arpl
repz
xor
cmp
jo
sbb
pop
neg
sbb
cmc
sahf
ret
mov
and
data16
adc
aam
je
and
cld
xchg
test
jmp
mov
arpl
arpl
rcrl
outsl
add
in
xchg
scas
int3
scas
addb
jle
ret
rolb
xadd
cmc
test
dec
xor
adc
aad
clc
pop
lret
cmp
shr
lods
adc
bound
shr
sub
adc
xchg
jmp
and
popf
mov
mov
xchg
mov
fisubl
daa
sub
scas
call
in
xchg
fidivl
out
testb
jo
push
mov
repz
xchg
aam
call
loope
pusha
sti
cmp
mov
inc
cld
fiadds
lret
test
data16
inc
push
out
iret
or
mov
xor
rorl
test
pop
jg
lods
fimull
ret
hlt
pop
xor
clc
mov
sub
or
push
add
or
dec
decb
fwait
lds
cmp
mov
push
inc
mov
into
test
pop
test
inc
popa
cmp
inc
imul
jbe
cmc
clc
jae
inc
mov
xor
popf
loopne
std
or
or
jno
lret
mov
xor
xchg
cmp
dec
mov
outsl
out
fstpl
lcall
leave
push
test
mov
fadds
cmpsl
cmc
push
dec
mov
out
enter
cmp
clc
stos
test
push
xchg
test
jno
test
popf
mov
cmpb
push
and
dec
out
out
jl
pusha
push
and
in
insb
adc
adc
push
jnp
add
jo
jo
mov
inc
jp
out
xor
push
or
ljmp
mov
shr
adc
cmp
pop
jmp
in
xchg
xor
xchg
out
push
stc
fdiv
mov
pop
scas
and
dec
and
jbe
xchg
imul
lcall
or
mov
push
lods
arpl
fadds
aad
xchg
jne
shlb
push
fwait
loope
xchg
orb
iret
inc
daa
pop
or
inc
clc
bound
clc
cmp
cmc
es
xchg
and
fptan
dec
lea
adc
popa
subb
and
cmp
adc
inc
inc
add
push
or
jle
xlat
leave
jmp
adc
js
cmp
mov
jg
hlt
cmc
jbe
push
das
out
lea
inc
mov
insb
push
in
nop
les
movl
push
loopne
ret
imul
xor
inc
add
cltd
daa
or
push
mov
pop
inc
rcl
out
aaa
cld
inc
es
test
aaa
call
ja
mov
sbb
push
ljmp
aam
cmp
out
call
add
lods
les
inc
sbb
add
push
insl
dec
into
adc
adc
push
imul
fldenv
cwtl
loope
movsl
jnp
ds
loopne
cmp
mov
add
push
pop
xchg
notl
adcb
mov
lahf
dec
in
add
ja
or
scas
lock
pop
ljmp
in
cmp
sti
das
mov
pop
test
popf
rdtsc
sets
call
adc
inc
clc
dec
stc
xchg
clc
push
ja
testl
pop
int3
pop
xor
push
jbe
sahf
ror
cwtl
pusha
cmc
sub
add
pop
cmp
or
shl
xchg
pushl
or
ja
xchg
push
ss
mov
push
mov
test
loop
jecxz
mov
jmp
mov
pop
push
dec
enter
fsubrl
pop
mov
repnz
or
ja
pop
mov
push
add
fstpt
inc
shr
loop
jmp
add
xchg
jmp
rcr
scas
jmp
clc
sbb
add
cmp
mov
pop
sbb
inc
and
jo
rol
add
popf
iret
std
or
xlat
hlt
mov
pop
inc
xchg
loope
push
xor
insl
jg
je
lock
adc
pop
mov
ret
xor
mov
xchg
das
movsb
pop
add
cmp
loop
stos
gs
sub
jb
aam
fiadds
shlb
hlt
lock
lea
mov
xor
push
sbb
xor
out
mov
or
fisubs
adc
in
icebp
fildl
and
in
mov
push
fucomip
mov
ret
in
jbe
push
mov
out
mov
ret
jmp
push
add
rolb
adc
jo
out
and
loop
scas
pop
pop
pop
cmp
mov
mov
pop
fists
aaa
cmp
cwtl
xor
xchg
ret
or
fstpl
lods
sbb
stc
dec
ljmp
addb
cs
jmp
or
push
or
push
sbb
jo
js
popf
xchg
lret
and
sub
imul
pushf
xchg
pop
xor
inc
addr16
cwtl
ficompl
inc
inc
sti
inc
and
xchg
ja
cmp
pusha
call
jnp
push
arpl
mov
push
cld
mov
push
sbb
iret
test
ja
addr16
inc
stc
fists
pop
loopne
in
in
std
out
adc
mov
stc
shl
cmp
and
push
mov
fstpl
sub
inc
dec
sahf
clc
lds
cmpsb
pop
outsb
jmp
cs
add
sbb
mov
movsl
pop
or
inc
jp
mov
add
sbb
rcr
std
das
shrb
in
adc
movsl
jmp
sbb
push
test
bound
cld
cmp
sbb
jno
mov
addr16
mov
jmp
push
jle
stos
call
sub
les
rorl
pop
sbb
jmp
jl
sbb
cmp
cmp
cmp
sbb
sbb
or
jae
push
pop
jl
ljmp
cld
das
pushf
jg
dec
pop
pushf
loope
xchg
push
adc
mov
push
into
sub
fistpl
cwtl
ficomps
push
jecxz
dec
ds
cwtl
in
pop
pop
xor
decl
mov
push
jg
cmp
fstl
iret
sub
push
cmpsb
aaa
andb
sub
dec
lock
cmp
mov
lods
es
hlt
mov
pop
in
inc
add
push
stos
xchg
ret
push
add
std
lock
pop
sub
lock
xlat
enter
cmp
jmp
frstor
stc
rcrl
fcmovbe
sub
push
sub
dec
rorl
adc
bound
loopne
adc
add
fucomi
sub
nop
mov
enter
rol
pop
pusha
cmp
mov
push
push
jp
sbb
nop
test
or
movsl
pop
jp
into
xchg
or
rolb
sbb
rcll
and
mov
shr
stos
push
decb
xchg
push
cmc
fucomip
and
push
sbb
mov
pusha
call
xchg
mov
pusha
add
mov
ja
jge
loope
dec
mov
push
aam
mov
jl
sbb
xchg
frstor
pop
xchg
ss
and
push
scas
push
mov
call
sti
and
punpckhwd
push
sub
loope
inc
test
lea
icebp
in
imul
dec
dec
stc
mov
push
cmp
pop
shl
or
idivl
or
stc
jmp
out
add
add
in
dec
lret
es
jae
add
push
sub
test
dec
icebp
or
cmc
fs
call
cmp
sbb
sub
call
mov
cmp
mov
jle
inc
orl
cmp
cltd
jmp
das
orb
into
call
and
jg
loop
add
cmp
pop
mov
andl
mov
test
incl
je
push
mov
mov
outsb
adc
pop
es
mov
in
mov
jmp
cs
push
mull
add
sub
jmp
jmp
jmp
fdivp
repnz
orb
add
out
inc
or
xchg
sti
mov
addr16
jl
and
pop
pop
sbb
pop
pop
outsb
mov
pop
paddsb
jge
and
adc
inc
pop
pop
dec
mov
cmpsb
jno
gs
call
call
aam
fisttps
test
mov
adc
sub
out
adc
jbe
xor
mov
mov
sub
or
xchg
ret
call
pop
insl
sbb
or
call
addb
jg
mov
dec
sub
or
stc
push
push
pusha
mov
clc
divl
jne
cli
sbb
pop
out
lock
sbb
cmp
daa
loop
in
sbb
sbb
xor
pop
mov
outsb
lret
outsb
mov
ss
adc
adc
xor
aas
jmp
add
push
or
mov
inc
or
mov
jge
push
jns
inc
jecxz
jo
jns
push
inc
mov
lcall
add
pushf
xor
or
shll
sbb
call
push
jl
popa
pop
sub
lret
sub
cmp
pop
inc
das
test
fstpl
xchg
xchg
adc
sbb
mov
jl
rorl
ffreep
pusha
mov
decl
outsl
inc
dec
ret
pop
xor
aam
jne
shlb
adc
lods
int
and
cmpsb
out
xchg
cltd
add
mov
aaa
aaa
mov
mov
call
repz
pop
int3
sub
fisttpl
loopne
scas
sbb
xchg
out
arpl
and
add
or
sbb
lods
mov
push
and
xchg
out
andl
insl
inc
adc
pop
ljmp
clc
add
xor
xor
push
imul
pushf
pushf
inc
fistps
negl
adc
push
setb
cli
pushf
mov
push
push
or
jmp
inc
push
pop
inc
test
sbb
aas
add
call
jnp
or
sub
movsl
mov
mov
std
daa
push
call
out
or
pop
mov
insb
push
jnp
or
daa
jmp
mov
adc
imul
pushf
push
xor
add
cmp
sbb
mov
dec
mov
jp
andb
jle
push
clc
loop
jno
add
lahf
sti
fwait
gs
call
pop
addl
pop
inc
loop
dec
outsb
fprem
push
push
jmp
xlat
adc
xchg
pushl
adc
pop
mov
mov
lock
cli
push
lcall
arpl
hlt
jmp
xchg
dec
sub
sbb
insb
aad
test
out
adc
dec
aas
fs
sti
cmp
orl
insb
pop
ljmp
mov
and
pop
leave
xor
adc
aam
daa
or
and
push
call
ret
lods
fwait
testb
dec
or
xor
xor
sub
lea
adc
fisubrl
loop
mov
pop
or
loop
lea
pushf
push
test
and
push
push
push
mov
jmp
pusha
sub
pop
das
popf
sub
xor
mov
jns
hlt
test
fstps
cmp
cli
test
dec
loope
dec
xor
jnp
fildll
loopne
xor
decl
int
jbe
mov
scas
push
lock
add
mov
dec
aad
add
xor
jne
movsb
inc
or
sahf
xchg
lods
icebp
push
pop
push
addl
aad
add
cmp
sbb
scas
lock
lcall
rorb
fisubrl
pop
cli
add
xchg
sbb
call
cmp
push
adc
call
jmp
fs
and
lods
enter
insb
into
ljmp
lea
xchg
out
gs
mov
mov
mov
cmc
push
or
cld
push
xadd
push
add
mov
rcrl
loop
mov
mov
lock
cmc
jo
sub
jo
inc
subb
stos
fdivp
add
in
loope
jno
aad
aam
mov
fstl
sub
stc
cmp
lcall
xchg
push
fnstsw
ficomps
pop
cmpl
cmc
add
jmp
aas
fists
out
lds
frstor
ljmp
cmp
cli
sbbl
or
popa
outsb
ret
add
or
add
add
cwtl
loopne
dec
or
and
and
mov
inc
shr
mov
hlt
sbb
out
pop
in
std
inc
jmp
xchg
repz
cwtl
cmp
mov
xchg
adcb
mov
fmuls
loop
push
jne
cmp
negb
icebp
pop
xor
test
shll
mov
sub
call
xlat
std
call
pop
cwtl
scas
fsubr
outsb
mov
xchg
add
mov
into
or
or
pusha
jecxz
into
lahf
movb
mov
lahf
inc
paddusw
cmc
das
sbb
aaa
sub
sbb
cmc
pop
xor
add
lods
leave
cs
cli
les
push
cmp
inc
test
out
inc
dec
call
cmpsl
es
sarl
dec
cmp
addb
push
push
add
ja
call
les
cmp
call
pushf
xor
divl
mov
jno
insb
stos
adc
sbb
push
lods
ljmp
adc
ljmp
inc
mov
xor
push
mov
pop
sbb
push
xchg
xor
bswap
push
fidivs
jns
cs
in
cmp
mov
loopne
mov
cmpsb
jmp
mov
cmpsb
imul
dec
clc
push
inc
ds
test
adc
nop
loopne
and
cmp
and
adc
pop
out
cld
sar
mov
dec
rol
pop
pusha
test
pop
or
or
test
pop
icebp
aaa
adc
les
pop
jbe
je,pt
fcoms
std
adc
jmp
rorl
jmp
jns
dec
dec
pop
xchg
xchg
jo
xchg
pusha
ret
or
add
stc
lods
push
ljmp
jae
jecxz
push
mov
xchg
xchg
popa
jmp
mov
jmp
cmc
ret
jmp
add
lds
add
pushf
nop
dec
mull
mov
ds
cltd
gs
xlat
jno
clc
xor
dec
push
mov
and
jbe
lock
mov
jle
or
inc
adc
mov
andb
jo
fmuls
outsl
xchg
push
cmpsb
das
ret
test
fistl
in
pushf
sub
push
test
add
ljmp
call
shlb
loope
shl
inc
not
push
mov
pop
pop
inc
dec
in
faddl
test
inc
mov
sub
clc
outsb
jge
push
push
or
movsb
push
inc
roll
test
dec
stc
sbb
jge
les
cs
decl
sub
cmp
cmp
andb
cmp
xchg
test
loopne
data16
add
outsb
gs
or
stos
cmc
test
ljmp
adc
or
cmp
test
cmc
movb
mov
sub
stc
cmp
lds
lret
sub
imul
std
cld
sub
cmp
pop
nop
js
xor
mov
sub
jnp
adc
popl
cmpsl
nop
arpl
fdivr
jb
and
pop
dec
push
mov
inc
add
je
mov
clc
scas
push
movsb
pop
orb
or
movsb
aam
stos
pop
subb
xchg
xchg
or
jecxz
cli
cmp
jns
push
jmp
jbe
add
xor
nop
and
cli
push
mov
add
fsubr
test
gs
fwait
mov
xor
pop
adc
jno
add
dec
xor
add
dec
push
stos
les
out
pop
mov
and
std
push
pusha
push
jmp
jb
pop
stos
sub
stos
pushf
stos
test
push
adc
loop
mov
xchg
mov
push
push
cmp
lods
pusha
dec
pop
test
push
pop
jmp
inc
adc
loopne
test
out
sub
dec
fidivrs
adc
adc
inc
jmp
lock
dec
push
adc
xor
and
mov
cmp
mov
cmp
mov
or
call
or
insl
mov
sub
jmp
cmp
pop
mov
fiadds
or
mov
xor
pop
or
mov
pop
xchg
sub
pushf
addr16
call
push
add
repnz
pushf
pushf
orb
pop
mov
insl
inc
xchg
jne
lcall
mov
mov
mov
dec
mov
jmp
or
enter
or
fstps
stos
xor
xor
jge
sti
cmpsb
cmp
sub
stc
rolb
mov
movsl
sub
mov
inc
ret
imul
pushf
faddl
data16
xor
ret
cmp
ret
nop
cmp
xchg
in
sub
add
pop
and
sub
icebp
aad
dec
popf
in
ljmp
mov
cli
and
test
pop
mov
mov
hlt
loop
out
out
pop
test
mov
and
jl
cmp
int3
dec
mov
shlb
lock
dec
sbb
loop
push
std
bound
mov
fs
icebp
iret
sbb
dec
nop
inc
jbe
hlt
pop
pop
cmp
jmp
add
adc
or
sbb
sahf
inc
push
leave
or
bnd
mov
jnp
fisubs
cmc
std
sub
into
and
jl
lea
icebp
js
or
dec
cmp
imul
fiaddl
fwait
mov
push
xor
xor
pop
pop
or
jns
add
fcmovnu
test
dec
dec
sarl
lds
dec
add
lods
mov
lea
popf
jne
test
pop
add
movsl
enter
das
cmc
call
ss
xchg
pushf
jno
mov
cmp
mov
divl
mov
jle
sub
dec
test
push
sbb
xchg
jnp
cmp
jmp
jo
jbe
xchg
inc
mov
inc
sub
sti
mov
aad
push
outsl
fistpll
into
aas
imul
push
cmpsb
mov
dec
lock
jo
mov
lods
test
stos
xor
shrl
push
pop
out
jo
adc
hlt
fcoml
push
push
push
sub
xchg
inc
add
in
clc
call
jmp
mov
dec
mov
pop
mov
outsl
loopne
xchg
xchg
je
call
mov
nop
mov
xchg
xlat
cwtl
fcmovbe
mov
fmul
adc
adc
mov
repnz
out
jmp
ljmp
sbb
scas
pop
mov
mov
stc
subb
pop
dec
mov
inc
jmp
das
mov
adc
mov
ja
add
sub
nop
fdivr
jmp
pop
jno
push
mov
jne
sti
pop
shll
aam
xchg
js
cmp
decb
jl
mov
pushl
sub
pop
jl
cmpb
imul
rcrl
mov
push
push
add
dec
mov
adc
cmp
jg
xchg
adc
jecxz
lock
jo
mov
and
mov
mov
add
sti
gs
cmp
inc
mov
movsl
jmp
pop
cwtl
sti
ret
add
sbb
add
into
testl
pop
mov
call
pop
inc
xor
test
call
cli
push
aad
call
jo
aaa
jo
into
inc
or
es
les
sub
add
sbb
inc
movsl
dec
push
lods
clc
adc
sub
jmp
stos
scas
and
ljmp
jle
push
sub
sahf
dec
push
hlt
arpl
fsubs
lea
pop
or
loopne
jmp
lock
mov
add
movsb
push
sub
call
cmpsl
cmp
aas
pusha
pusha
lods
push
push
xchg
adc
and
sub
mov
loope
pushf
inc
push
inc
add
mov
xor
push
mov
push
cmp
clc
leave
ficomps
pop
ljmp
cmp
sahf
mov
cmp
test
sarb
adc
into
stos
jmp
insb
lret
cmpsb
or
add
xchg
or
cmp
or
pop
sub
hlt
jno
push
call
shlb
sti
stos
push
call
inc
fwait
xor
push
std
mov
std
std
dec
cmp
or
out
popa
mov
mov
pop
add
push
mov
mov
pop
push
inc
je,pn
add
test
xchg
jp
mov
fists
pushf
push
enter
insb
rolb
add
iret
pop
pop
mov
fildll
cmp
pushf
rclb
cmp
jmp
sti
call
pop
jg
add
pop
clc
stc
cmpl
and
ret
pop
push
push
or
mov
push
ja
mov
add
loop
sub
pop
aam
mov
add
mov
cmp
pop
push
ret
daa
sub
inc
call
adc
push
pop
addl
cld
pop
gs
push
inc
lock
ss
mov
call
cs
adc
mov
mov
cmc
mov
mov
and
sub
xchg
call
fsubrl
inc
test
add
test
mov
aam
in
mov
or
cmp
call
cmp
cmpsl
mov
call
inc
adc
mov
or
push
inc
test
shlb
shrb
mov
push
in
sar
bound
push
incb
test
test
roll
call
mov
pop
xor
pushf
nop
pushf
mov
scas
pop
xchg
add
mov
mov
inc
inc
or
jno
xor
cs
aad
mov
mov
push
movsl
out
std
and
jne
push
call
mov
jmp
sub
dec
or
outsl
and
push
pop
outsl
cmp
adcl
jg
add
lods
and
xor
mov
and
mov
call
movsb
imull
push
scas
inc
nop
pushf
pushf
shrl
daa
enter
pop
aaa
insb
cmp
cmc
in
jnp
ror
outsb
lahf
je
dec
popl
push
test
inc
sub
icebp
in
ljmp
add
adc
clc
outsl
clc
push
insb
push
out
jmp
pop
mov
add
push
test
pushf
cmp
xor
push
scas
sbb
or
add
mov
cld
das
cmp
mov
mov
cmc
pushf
cmp
cmpsb
pusha
ljmp
cli
mov
xchg
or
inc
sub
aas
mov
test
mov
jecxz
hlt
pusha
sahf
add
movsl
out
xchg
jmp
mov
pop
sahf
xchg
shrb
xor
clc
inc
mov
cmc
rolb
sti
sub
pop
call
lods
push
pop
cwtl
mov
test
and
sbb
or
roll
insb
jge
stos
loopne
cmc
pop
push
or
shr
call
mov
int
pop
test
fucomi
or
je
stos
sbb
mov
mov
jge
sti
jg
out
sub
aad
sahf
jo
adc
or
xorl
cmp
sub
push
ret
aad
jb
jle
je
mov
scas
mov
xchg
mov
xchg
xor
mov
inc
nop
imul
lret
mov
test
mov
lea
push
rorb
push
xchg
shl
add
cmp
mov
mov
and
mov
cmp
mov
lahf
xor
mov
xchg
fdivrl
jmp
mov
mov
jmp
or
cwtl
lds
pusha
or
pop
cmp
or
lds
sbb
cmp
adc
addb
js
sbb
out
mov
jno
cwtl
or
xor
shll
mov
cs
xchg
insl
jae
push
mov
sub
jge
sbb
cmpsl
adc
rol
mov
out
mov
mov
push
cmp
cli
cmp
cwtl
add
pop
pusha
popa
jb
shl
cmp
add
cmp
dec
andl
add
fiaddl
call
rolb
mov
sbb
add
and
adc
call
jmp
sub
and
xor
pop
jae
scas
dec
pop
ret
add
pop
sub
inc
loope
adc
and
repnz
les
mov
lcall
sub
push
inc
movsb
lahf
call
push
sub
js
ret
jge
lret
adc
roll
sbbl
adc
aaa
adc
testl
popa
fstpl
loope
dec
rcr
shrl
insl
jp
ds
loope
aam
push
cltd
push
push
aaa
stos
in
ret
mov
push
jae
inc
cld
dec
or
xor
sub
sbb
inc
xor
cmp
sahf
xor
and
loope
push
push
mov
inc
lea
out
mov
imull
js
fists
push
cmp
or
stc
push
or
cwtl
jo
das
call
adc
or
repnz
xorl
push
push
fisttpl
inc
mov
ret
pop
cbtw
mov
stos
add
xchg
ja
sbb
add
cmp
cmpsl
lock
add
mov
add
jnp
xor
push
ret
jecxz
out
in
lcall
repnz
mov
pop
loop
lcall
jp
aaa
nop
loope
stos
jg
data16
movb
lock
sti
test
jmp
adc
mov
andb
adcl
push
shll
xchg
sub
add
sbb
xchg
stc
movsb
push
cmp
jmp
add
sarb
add
and
xchg
cli
ret
push
mov
enter
push
nop
dec
les
repz
rorb
adc
lods
ror
fdivrp
pop
pop
nop
std
les
inc
mov
push
jb
or
rol
vmulss
cmc
test
push
in
addb
pop
xor
mov
jnp
fistps
pushf
pop
mov
shlb
leave
lods
ljmp
pop
test
rclb
loope
out
orb
sahf
inc
in
adc
aam
push
into
push
dec
js
sbb
cwtl
cmpsb
shr
push
loopne
outsl
jg
std
mov
and
test
pusha
and
adc
stos
adc
and
push
nop
push
push
push
cmp
in
sbb
int3
loopne
push
ljmp
or
insl
fistps
and
call
inc
cld
xlat
sbb
adc
std
add
fcmovnu
adc
mov
pusha
ret
fcos
add
sarb
aam
inc
mov
cmp
mov
in
push
cmp
aad
int
jmp
das
pop
scas
call
jbe
call
cmpsb
imul
mov
xor
loop,pn
js
xchg
push
xchg
jne
push
popl
or
std
jbe
hlt
mov
add
mov
pop
ja
and
xor
jg
repz
mov
adc
add
stc
test
scas
mov
int
and
icebp
jbe
scas
jmp
icebp
enter
pop
jp
daa
sbb
cli
movsl
fsts
sahf
incb
outsl
icebp
mov
and
fwait
ret
push
cld
pop
push
mov
lret
lret
es
jne
decl
cld
pop
pop
shll
lods
sbb
es
jl
fdivrp
and
data16
mov
dec
or
aaa
pop
aas
sub
es
jmp
call
pop
xor
testb
fbld
push
rcrl
adc
xor
sbb
arpl
loop
xor
lods
dec
cmp
add
sbb
sbbb
enter
fisubrs
insl
inc
mov
leave
jo
or
jmp
pop
mov
repz
jno
outsb
test
dec
dec
cmp
sbb
jmp
fadds
clc
dec
shr
out
push
jge
push
xor
iret
pop
pushf
setno
icebp
cs
js
mov
fisttps
mov
sub
fildll
out
mov
pop
sbb
imul
push
xchg
xchg
clc
insl
push
or
sbbb
jno
mov
loop
add
sahf
stos
push
jle
mov
lock
adc
add
jnp
push
incl
aas
adc
push
cs
pop
pop
add
xchg
call
inc
shll
jbe
into
mov
mov
test
jbe
add
test
and
jmp
sub
push
aas
adc
xor
int
fsubrp
pop
icebp
mov
std
out
jmp
fldl
push
iret
inc
xchg
mov
cmpsl
cmc
gs
dec
adc
add
cmpsl
push
mov
nop
popl
pop
int
mov
incb
mov
orl
ror
push
test
or
clc
lods
dec
adc
or
fsubs
in
and
lret
ja
jg
pop
call
sti
mov
cltd
and
fldl
jno
daa
decl
dec
lahf
sub
and
sbb
cmp
idivb
cli
sti
or
outsb
pop
int3
jl
xor
fdivr
nop
dec
pop
lcall
call
mov
sub
cs
push
pop
mov
movsl
stc
je
dec
and
jg
out
cmp
xchg
xlat
cmp
jne
or
mov
lcall
add
or
mov
xor
sahf
xchg
dec
jno
sbb
lock
adc
dec
data16
and
cmc
stos
repz
int
mov
ja
stos
outsl
and
rorl
cltd
shll
fiadds
or
in
push
repz
ljmp
imul
ret
insl
sub
adc
sub
add
pop
es
lahf
cld
in
jge
fidivl
and
aam
pop
into
outsl
cld
pop
sub
fildll
adc
test
lea
jmp
add
inc
fsubrl
push
cld
jmp
les
int
push
mov
fmuls
push
push
xchg
dec
mov
arpl
aam
jo
jb
enter
and
push
mov
or
pop
xchg
daa
shrb
jge
mov
icebp
test
inc
imul
cld
and
aam
push
sti
ljmp
mov
sub
inc
sarl
add
xchg
inc
xor
aaa
incl
mov
fadds
fmull
adc
sbb
inc
dec
idiv
decl
mov
ret
js
subb
lret
pop
insl
and
or
adc
dec
out
inc
fisttpl
lret
out
jmp
mov
and
aam
pop
insl
out
pop
cwtl
cmpsb
xchg
test
fstpl
or
fbstp
shrl
mov
add
xlat
arpl
int
or
outsl
aas
jnp
fiadds
xchg
ret
je
push
insl
leave
iret
lea
mov
icebp
or
pop
or
fwait
in
jg
shlb
cmp
dec
dec
dec
cmc
and
insl
pop
jecxz
pushl
fndisi(8087
popa
in
xchg
push
popa
into
or
xchg
outsl
insb
lock
test
push
cli
arpl
add
dec
jl
test
add
loopne
or
fmuls
pop
xchg
data16
lock
std
test
push
adc
out
ror
sub
add
repz
out
pop
xor
pop
mov
dec
dec
xchg
ljmp
pusha
aam
enter
adc
test
fmul
xchg
jg
call
mov
push
sbb
cmpsl
hlt
xor
xchg
call
pushl
aad
sbb
jp
mov
or
unpckhps
out
int3
pop
and
jno
pop
pop
insl
out
js
jmp
aas
int3
sub
add
mov
ret
cld
fbstp
sub
popf
fwait
xor
mov
sub
inc
jne
js
popl
test
pushf
push
rorl
inc
xbegin
mov
ret
ja
pop
or
and
xchg
aaa
pop
jecxz
das
mov
adc
mov
dec
cwtl
insl
mov
push
lret
lcall
shrb
adc
test
dec
popf
loope
and
mov
call
mov
jne
push
or
push
fstp
cld
pop
jg
rcr
dec
add
ret
jp
jnp
int3
lret
dec
test
mov
mov
dec
jno
push
cld
and
test
cld
les
in
jo
in
sbb
fistl
dec
fsubs
adc
mov
insb
sbb
les
cmpsw
xor
cmpsb
adc
pop
shl
pop
and
xor
mov
sbb
in
push
mov
ret
jno
inc
out
mov
insl
add
sti
xchg
sahf
add
outsl
addb
std
fldt
jle
call
call
push
and
and
mov
popf
sahf
xchg
mov
filds
mov
ja
call
fisubs
sarl
cmp
insl
int3
push
fildl
cmpsb
test
ja
das
fstpl
repnz
sbb
fisttpl
insl
add
pop
inc
and
sarb
jle
in
inc
pop
and
aam
lret
incl
lahf
adc
sbb
fwait
xchg
loope
push
cmp
dec
fstl
movsb
cmc
xchg
xchg
mov
hlt
pop
test
push
xchg
and
dec
lods
lock
mov
pop
push
lret
cmc
jecxz
add
jle
je
call
xor
and
push
xor
bound
into
mov
adc
imul
sar
in
jns
inc
insb
push
mov
xlat
jecxz
add
jl
add
xor
inc
pushl
sub
push
leave
popf
mov
roll
mov
cmovnp
sbb
xlat
mov
mov
xor
inc
dec
aad
in
push
fiadds
call
stc
in
movsl
repnz
mov
push
enter
cmpsb
pushf
push
mov
xor
xor
push
pop
das
push
xchg
lock
jmp
inc
pusha
adc
es
fxch
lcall
cmp
mov
xor
dec
das
lock
mov
dec
fists
sub
loope
mov
xchg
gs
pushl
push
lret
sahf
adc
jecxz
or
xor
cwtl
cmpb
pop
cmp
pushl
sub
ficoms
fsubr
adc
ljmp
add
iret
jecxz
je
gs
aas
add
fdivr
ljmp
cs
into
sub
mov
mov
xchg
dec
cvtpi2ps
inc
sar
loop
into
cmpsb
sbb
lcall
mov
or
push
and
jo
mov
test
jg
outsl
adc
ss
popa
add
jb
repnz
xor
lds
aam
push
decb
inc
jg
mov
es
cmp
lock
mov
aad
test
adc
inc
stos
inc
into
in
leave
aas
lds
aad
ja
mov
push
push
add
test
pop
cli
dec
xorl
pop
fidivs
mov
rcll
mov
nop
jl
push
jmp
dec
outsl
andb
in
pop
xor
jb
adc
jg
stc
pop
jle
dec
aaa
dec
test
and
fs
mov
mov
add
bnd
jno
add
pushf
jle
adc
dec
cmpsl
and
cld
sub
push
arpl
lret
sbb
roll
movsl
push
sti
cmpl
fbld
ja
jecxz
xor
sbb
push
mov
mov
stos
out
adc
and
into
mov
jae
lods
addr16
inc
xor
cmp
adc
pop
jmp
adc
and
inc
mov
lcall
fs
dec
rcrl
xor
push
sub
int3
sub
pop
jp
sub
adc
inc
cmpsb
das
pushf
mov
dec
dec
in
push
cmp
imul
lcall
popl
or
xlat
subb
adc
aad
test
pop
push
adc
push
out
orb
push
xchg
shrl
xchg
jnp
in
pop
aas
xchg
mov
stos
loop
add
repz
orl
hlt
mov
es
std
mov
jg
daa
mov
and
push
lret
lcall
xchg
adc
xchg
out
repz
sub
dec
and
repnz
arpl
mov
mov
pop
adc
mov
xchg
push
mov
sbb
jne
popf
and
loop
repnz
movsl
mov
sbb
or
ret
stc
cmp
add
arpl
jg
out
and
rclb
js
popl
add
adc
fucomi
int3
jecxz
into
jbe
decl
add
push
add
test
fsubrl
add
jg
or
adc
dec
mov
arpl
sub
xor
shlb
insl
fimuls
hlt
aaa
pop
call
imul
mov
sub
shl
lea
and
sbbb
and
fisttps
out
pop
xor
mov
xor
cli
js
test
decl
adc
call
mov
mov
repz
adc
push
out
sub
aam
in
inc
mov
lahf
mov
insl
out
imul
mov
jp
loope
inc
mov
sahf
xor
jns
std
in
pushl
adc
add
xchg
push
int
lods
mov
xchg
sub
ss
pusha
sbb
pushl
xor
call
jno
pop
push
lret
xor
outsl
call
inc
adc
cmp
aam
cmp
loopne
jg
xchg
inc
int
jmp
xchg
lcall
sub
or
mov
pand
adc
jne
dec
stos
lret
scas
in
pop
cmp
into
dec
inc
aad
inc
and
mov
stc
fiadds
mov
imul
out
test
jns
adcl
gs
out
jg
pop
adc
stc
cmpsb
push
shll
mov
cmp
subb
lods
ret
adc
cld
cwtl
test
and
mov
push
mov
mov
pop
out
or
xchg
adc
lret
add
xchg
lret
sbbb
pop
sub
dec
xor
xchg
or
jge
rolb
add
jnp
in
lcall
xor
out
mov
cmp
fwait
jns
and
push
je
test
xor
out
rcrl
xchg
gs
push
push
lea
or
stos
je
xchg
mov
aam
clc
lea
sub
and
ja
mov
push
das
mov
xor
rorl
mov
out
inc
fwait
inc
sbb
stos
mov
in
stc
xor
xchg
enter
pop
push
xor
dec
add
adc
and
incb
dec
stc
jns
mov
scas
in
xchg
divl
xchg
das
mov
jge
push
aam
inc
sbb
mulb
fisubrl
xchg
les
loope
pop
aas
lahf
dec
or
stc
repnz
imul
pop
inc
pop
nop
and
int
clc
fucomip
outsl
mov
shll
cmp
and
adc
add
push
adc
xchg
add
or
cmpsl
sub
loope
mov
decl
or
jl
ljmp
adc
xchg
mov
out
in
add
fadds
push
popa
mov
cvtps2pi
movb
or
or
ljmp
mov
lea
outsb
push
cmp
jb
insb
add
mov
fdivrl
mov
adc
adc
pop
cmpsl
inc
jecxz
clc
pushl
imul
popf
stos
fwait
xchg
push
and
lret
notl
ljmp
add
repz
test
and
xor
int
inc
aad
loopne
lcall
nop
push
pop
mov
popf
fyl2xp1
out
notb
lock
and
xor
clc
mov
and
and
out
insl
xorb
popa
xchg
sti
dec
in
sti
pop
xor
loop
mov
mov
jns
imul
sub
cld
mov
pop
xchg
daa
add
rcll
xchg
cld
dec
pinsrw
imul
das
dec
lds
out
mov
fwait
cs
jo
mov
adc
xor
outsl
cmc
sub
in
fwait
cmp
das
aas
es
push
or
movsl
fbld
in
sarl
ss
test
or
inc
jle
pop
fdiv
xor
out
loopne
sbb
aad
or
dec
icebp
xchg
lcall
imul
adc
mov
fadd
xor
sarb
decl
sbb
inc
scas
sbb
int3
xchg
mov
pop
mov
xchg
in
mov
decl
cmc
jle
ret
jmp
cmpsb
mov
repnz
add
mov
imul
xlat
test
ret
cli
inc
out
out
push
cmp
cmp
push
movsl
push
jle
clc
jle
inc
imul
lock
movsl
stos
mov
push
lret
sub
pop
ret
xchg
fisubrs
adc
in
adc
adc
xor
jge
jg
enter
adc
ja
push
addr16
ljmp
lret
jg
mov
outsl
mov
pushf
pushf
sub
dec
push
jb
or
dec
out
pop
jl
lcall
add
push
mov
insb
packssdw
rorb
dec
jge
aam
lret
out
inc
adc
sub
cmp
mov
sub
jp
stos
imul
adc
jg
and
sbb
nop
adc
cmp
inc
das
pop
mov
jno
lret
icebp
xor
inc
repnz
incl
filds
xor
inc
scas
ds
inc
adc
or
inc
imul
ss
call
dec
xchg
lret
enter
pop
cmp
clc
cmova
fldt
sbb
outsb
mov
outsl
mov
filds
jg
adc
cmp
js
das
cld
out
and
pop
enter
nop
jnp
je
xchg
lret
int3
sbb
jge
sub
mov
jge
adc
loope
or
adc
inc
pop
jno
jle
fidivrl
push
jmp
cmp
jg
pop
imul
mov
mov
fiadds
rolb
mov
mov
adcl
xor
insb
add
xchg
mov
add
inc
out
adc
in
hlt
mov
sub
arpl
cli
mov
xchg
or
adc
push
rcr
rol
imul
push
stos
pop
and
repnz
scas
pop
imul
pushf
lds
dec
mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
ret
ja
and
mov
and
or
ret
inc
sub
and
mov
faddl
out
mov
out
scas
std
cmpsb
les
or
sub
jb
gs
popa
enter
int
fisttpl
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
shll
shlb
rcrl
in
xchg
xor
inc
aad
add
cmp
pop
fcomp
scas
jmp
jae
fldcw
fidivl
fisttpl
push
add
mov
loop
jecxz
add
inc
in
out
call
imul
daa
in
pop
in
aaa
lock
pslld
scas
jmp
cmpsb
repz
cmc
sbb
add
aaa
jg
insl
fwait
clc
stc
dec
add
pop
sti
js
cld
je
mov
nop
jmp
add
nop
mov
or
adc
mov
pushl
and
daa
test
je
push
add
pop
call
mov
jmp
mov
dec
mov
inc
add
ja
jmp
loope
mov
sbb
adc
mov
jnp
negb
and
and
adc
or
and
add
mov
lcall
data16
xor
fsts
adc
or
jo
sarl
mov
idivb
sti
jne
mov
push
fsubrl
add
push
out
sbb
or
jl
jb
sbb
cltd
xchg
outsb
jnp
push
push
inc
push
adc
icebp
arpl
fisttps
inc
and
push
jb
jl
pop
ret
jmp
mov
daa
mov
or
divb
push
jecxz
call
decl
jnp
inc
mov
test
mov
jne
andb
cwtl
orb
movzbl
inc
cmp
jl
mov
pop
jg
add
adc
inc
cmp
imul
add
shll
cmp
mov
add
pop
adcb
fisttpl
lock
or
fisttpl
jne
sub
ret
stos
insb
inc
fcmovu
shlb
test
pop
fildll
mov
andl
mov
push
push
push
cli
faddl
push
sbb
fs
jo
cmpw
adc
pushf
leave
fidivs
in
or
call
mov
mov
imul
push
inc
sbb
xchg
lods
inc
dec
aas
fstp
nop
gs
ret
add
mov
std
mov
dec
xchg
incb
mov
cltd
clc
fdivrl
lea
push
mov
sub
mov
adc
cmp
jl
dec
or
xchg
lcall
in
xchg
or
or
dec
jne
ret
xchg
jmp
or
mov
fmuls
xor
in
jg
dec
daa
mov
xor
cmp
jbe
test
adc
ret
push
mov
mov
push
pop
cmp
jl
mov
push
or
shl
nop
lds
sbb
lea
push
jmp
or
punpcklwd
pop
push
adc
lods
cmp
xchg
sub
add
sbb
in
shr
add
add
add
add
push
push
mov
fisttps
loopne
mov
outsb
imul
xor
imul
cs
add
dec
bound
popa
fs
imul
inc
pop
pop
mov
add
mov
xchg
cmp
shll
dec
ret
imul
pop
pop
xlat
pop
lds
sbb
push
enter
insl
sbb
cltd
lock
mov
pop
or
fsubs
mov
push
repz
adc
lret
sti
in
add
pop
push
clc
sub
sub
insl
mov
inc
cmp
clc
xchg
xchg
subl
shr
dec
mov
int3
push
jns
pop
outsl
pop
sbb
xor
sbb
lods
mov
movb
fcomi
ret
sub
jp
jae
rcr
mov
sbb
imull
imulb
xchg
in
aad
test
sub
adc
and
inc
jne
xchg
push
cmpsl
fcom
cmpl
add
inc
js
mov
jmp
fdivrl
jne
push
fwait
lods
aam
rclb
mov
push
dec
cmp
ss
outsl
and
je
adc
mov
adc
aas
sbb
ficomps
fwait
push
and
jb
add
sub
mov
xchg
ret
in
push
inc
rorb
dec
xor
call
std
pop
or
ret
sub
sti
mov
jl
lea
shl
fidivrs
aam
mov
sub
cmp
das
scas
in
sbb
sub
addr16
dec
mov
sbb
add
mov
push
cmc
je
dec
mov
sbb
push
add
sbbl
xor
jge
xor
incb
mov
jne
xchg
pop
sub
adc
fs
xchg
test
std
cwtl
fimull
fs
sub
mov
adc
adcb
je
mov
test
add
xor
int3
les
and
into
shlb
gs
sub
cmpsb
outsb
gs
xor
xlat
xor
adc
add
mov
pop
rorb
mov
jne
loope
add
inc
les
xlat
xor
lods
lods
pop
scas
adc
push
inc
scas
add
dec
mov
jne
xlat
jnp
pop
mov
mov
mov
mov
add
in
dec
imulb
lods
mov
adc
or
sub
or
es
dec
pop
test
repnz
xlat
xchg
ss
nop
mov
nop
es
inc
dec
repnz
and
xor
mov
mul
ret
jb
mov
movl
fcompl
mov
cmp
ja
repz
fmuls
pop
rcrl
repnz
mov
pop
jb
movsb
push
push
or
subb
push
loope
add
stos
das
mov
loop
push
cld
jmp
mov
push
pusha
lea
mov
pushf
nop
pushf
push
lea
fsubr
ja
push
sbb
sbb
arpl
jmp
jne
pop
jns
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
pop
jnp
lret
fcoms
mov
sbbl
daa
popf
xchg
insl
popa
add
push
xor
sub
lock
and
rcrw
push
inc
cmp
das
ret
inc
stos
inc
cmp
cmp
add
cmp
cmp
aad
xor
inc
lret
imul
lcall
jne
cwtl
cmpsb
jo
xchg
jmp
je
pop
jmp
in
xchg
in
pop
out
psrlq
out
inc
mov
mov
jb
dec
shll
insb
gs
sbb
xor
jl
mov
inc
in
stos
or
mov
cmc
popf
cld
int
std
mov
std
enter
sub
add
sbb
sub
or
push
loop
push
push
xchg
sahf
stos
xchg
push
std
or
sbb
js
ficomps
push
int3
call
push
lock
sbbl
test
pop
push
jmp
fadds
adc
adc
lock
xor
loope
sub
subb
cmc
aam
cmp
sub
movups
add
mov
xchg
rclb
push
popa
inc
lods
or
cmp
push
in
es
fisttpl
adc
adc
xchg
ljmp
cmp
fistpll
movsl
movsw
movsb
push
inc
pop
ljmp
test
sbb
jbe
data16
cmp
xchg
inc
addb
xor
push
mov
or
cmp
xlat
cmp
shll
movsb
jbe
aad
out
pusha
push
and
mov
pop
cld
mov
xchg
sti
les
inc
mov
cmp
inc
mov
data16
mov
sbb
and
add
lea
mov
xor
fimuls
mov
cltd
pop
idiv
cmp
sti
lret
lret
fstpt
add
jl
popa
jle
jp
add
fdivr
ss
jl
pop
add
orb
out
pop
mov
fcomps
add
add
inc
xor
inc
mov
in
nop
stc
adc
stc
movsb
ds
in
movsl
cwtl
sti
cltd
sti
pushf
cld
xor
je
or
push
add
adc
mov
nop
xor
pop
mov
wbinvd
cmp
fnstenv
mov
sarb
test
jecxz
in
push
je
cwtl
in
out
out
sbbb
jmp
pusha
add
arpl
or
cmp
push
nop
stc
daa
inc
test
or
jbe
cmpb
and
push
dec
and
repz
pop
xor
and
out
into
sbb
cwtl
sti
ljmp
decb
fxch
adc
and
push
lret
pop
test
push
icebp
sahf
push
icebp
int
sub
inc
push
icebp
pop
or
xor
dec
gs
inc
inc
xlat
lock
inc
repnz
repz
dec
hlt
cmc
scas
notb
imull
lcall
insb
cmpsb
imul
or
or
cmpsb
imul
jo
fsubs
fldcw
imul
lcall
xor
inc
js
push
pop
pop
daa
push
mov
push
in
dec
dec
cmp
jbe
sub
out
add
into
sarb
stos
scas
mov
shll
xlat
sub
insl
inc
aam
inc
test
mov
or
or
test
aas
push
notl
or
dec
pop
aad
inc
adc
jbe
inc
inc
lahf
jmp
addb
push
in
adc
jbe
xchg
cmp
je
add
jne
imul
subb
or
or
pusha
or
sbb
mov
sti
sub
xor
loope
rorl
fwait
in
clc
fbld
add
adc
incl
push
testb
sbb
int
inc
inc
add
sbb
push
adc
imul
push
inc
lods
outsb
xor
push
and
bound
out
in
andb
sbb
or
aam
add
cmp
je
jmp
icebp
test
xor
insb
mov
cmp
inc
int3
inc
enter
and
jae
sbb
leave
testl
mov
jmp
sbb
insl
adc
pop
adc
mov
ja
jecxz
push
add
popf
gs
xchg
jge
jae
xchg
adcb
inc
or
adc
mov
or
mov
andb
add
cmp
sub
outsb
sub
pop
add
jne
loope
inc
pop
cmp
jae
pop
push
adc
push
xchg
gs
popa
pusha
pop
adc
add
jg
loope
push
xor
mov
mov
jmp
sub
sbb
pop
inc
xchg
or
fsubp
mov
adc
pop
imul
test
sub
sub
loope
mov
call
call
leave
sub
out
lods
mov
xor
call
in
outsl
mov
inc
out
pop
stc
call
jno
mov
xor
dec
push
jg
mov
xor
or
stc
jp
in
jge
inc
ret
ret
clc
pushf
mov
jmp
sbb
mov
mov
and
inc
test
jmp
sub
std
mov
andb
add
sbb
out
pop
mov
cwtl
call
sbb
mov
cmc
sar
jns
cmp
aam
push
and
leave
sub
shll
xor
aas
inc
dec
adc
fsts
in
test
adc
in
ret
clc
push
cmp
xor
jnp
lea
pop
adc
push
out
arpl
add
add
les
sub
lds
out
hlt
inc
loop
adc
xor
mov
mov
adc
push
addr16
adc
inc
adc
push
lods
jnp,pt
sub
mov
dec
sub
sbb
jp
push
mov
jbe
jne
je
cmp
push
test
test
cmp
pop
icebp
push
inc
dec
inc
out
pop
mov
push
push
adc
cs
add
pop
gs
in
push
mov
add
or
inc
lret
jnp
inc
ja
loopne
cmpsl
pop
jge
out
push
adcb
lea
and
mov
test
pop
adc
push
cmp
pop
sbb
and
mov
clc
xor
and
fadd
loop
je
push
cwtl
fdivr
ds
push
jbe
cmp
mov
stc
jo
fldenv
jbe
enter
and
add
push
popa
pop
pop
dec
sub
dec
inc
jge
jae
insb
aaa
lods
adc
test
test
mov
mov
in
pop
pop
or
test
test
jbe
inc
hlt
or
out
movsl
shll
xor
orl
mov
rorl
pop
pop
roll
call
jmp
in
dec
sub
inc
xor
out
dec
or
ss
in
fsubl
fwait
lea
in
push
inc
ret
inc
ret
insb
pop
and
and
shlb
sbb
rcr
jp
leave
xor
fcmovb
jae
popa
shlb
std
add
int
add
xor
push
outsl
push
mov
aaa
sbb
and
xchg
sar
or
mov
adc
or
sub
popa
mov
push
ds
shll
cmp
xor
xchg
lea
or
sti
jne
cld
push
pusha
outsl
bound
sbb
test
fisubs
push
sbb
mov
sbb
add
repnz
or
hlt
add
mov
shl
clc
stc
adc
mov
sbb
mov
push
bound
in
in
out
and
ljmp
in
enter
fldl
and
mov
xchg
loop
popa
push
ja
push
cltd
cwtl
in
rcrb
adc
ret
enter
sub
dec
jl
pop
pop
loopne
incb
mov
push
mov
pusha
sbb
ljmp
mov
shlb
ds
inc
add
inc
add
out
cmpl
pushf
nop
mov
adc
jmp
mov
add
cld
push
inc
pop
ret
add
andl
mov
or
add
movsb
test
mov
fs
mov
fs
enter
adc
jle
cmp
fsubrs
lea
push
push
ss
push
jp
pop
jecxz
pop
loopne
cmpsb
neg
sbb
add
mov
mov
lahf
push
cmp
jg
idivl
or
jae
sub
mov
add
outsl
or
loope
or
add
add
push
dec
sub
sbb
rol
addr16
out
pop
add
pop
orl
out
scas
add
mov
cmp
xor
add
sti
and
push
mov
or
idivl
loopne
jecxz
mov
loopne
or
aaa
ss
daa
xchg
stos
xchg
inc
xor
jae
or
pop
xchg
xor
and
divb
mov
jne
cmpb
jne
inc
or
add
or
repnz
jbe
aam
dec
cmc
dec
jne
movsb
jl
imulb
mov
cs
jmp
sub
adc
pop
pusha
pop
add
jno
or
cwtl
xor
imul
inc
addb
or
test
adc
ret
mov
fsubrl
aam
loopne
lock
mov
add
and
iret
and
shll
mov
xchg
mov
lcall
sub
negl
je
aas
pop
dec
shll
aam
add
add
add
inc
pusha
xor
mov
mov
ds
sub
adc
pop
ja
f2xm1
xor
add
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
scas
imul
sbb
es
imul
scas
ret
add
mov
mov
rclb
cltd
and
xchg
and
minps
cs
pop
jle
jae
adc
mov
xor
pop
pusha
and
outsl
inc
adc
aas
add
or
pop
sti
jg
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
in
call
clc
call
pusha
lret
sub
cmpsl
ret
add
in
mov
test
xchg
sarl
adc
movsl
insl
insl
mov
jmp
mov
ljmp
out
int3
ja
push
xor
push
push
inc
push
push
xor
nop
push
push
add
and
add
decl
pop
je
outsb
jns
and
mov
mov
test
mov
jo
ljmp
inc
bound
push
je
imul
divb
fwait
pop
add
pop
pop
and
fs
or
insl
pop
cld
dec
gs
gs
repz
xor
xor
frstor
pop
popl
add
lahf
mov
cmp
nop
nop
pop
mov
lea
push
call
lea
insl
adc
out
adc
incl
jnp
add
add
push
push
push
push
push
mov
call
mov
and
popf
popa
jmp
pop
pop
call
out
into
scas
loope
repz
mov
fldcw
xor
inc
xchg
push
adc
test
cmp
fiadds
cmp
es
jp
pushf
inc
scas
jle
push
xchg
aaa
inc
outsl
lahf
lock
icebp
cmp
data16
jae
mov
sti
mov
pop
into
les
mov
int3
out
mov
fisttps
neg
cmp
sub
or
mov
repz
mov
inc
inc
dec
inc
pop
inc
fistpll
daa
aam
lret
ror
push
idiv
mov
mov
mov
aas
jno
jbe
sbb
xchg
mov
add
arpl
and
shlb
mov
outsl
fmuls
mov
or
idivb
add
jnp
mov
aad
enter
jg
imull
insl
outsl
outsl
mov
shlb
xor
inc
mov
pushl
jae
jne
fs
sub
push
sbb
xlat
cmp
shlw
pop
jae
jae
gs
and
mov
jo
mov
pop
mov
sub
std
insl
arpl
popa
push
push
jb
arpl
sbb
outsl
jo
fcmovu
ss
aaa
fs
add
add
outsl
out
mulb
jns
or
add
or
adc
imul
outsl
data16
sub
sbb
and
inc
jae
data16
bound
push
inc
push
inc
pop
dec
push
dec
mov
imul
xor
dec
inc
cs
cld
push
add
add
cmp
adc
sbb
sub
inc
dec
dec
add
icebp
add
test
in
mov
adc
add
cmp
mov
mov
inc
lods
push
pop
mov
jg
int
mov
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
add
outsb
and
inc
dec
push
and
gs
mov
pusha
inc
je
inc
adc
fwait
cs
add
and
sti
out
out
pop
cmp
mov
and
and
paddw
push
sbb
pop
sub
repz
jae
cmp
cmp
inc
mov
fs
popf
sub
test
fdivr
push
imul
imulb
dec
add
add
loopne
and
add
pop
imull
adc
addb
nop
in
or
push
adc
add
add
pop
sbb
addb
sbb
add
loopne
mov
pop
push
add
xchg
add
or
pop
addb
cmpsl
mov
dec
je,pn
js
pop
sub
mov
nop
jbe
fwait
or
std
test
jb,pn
popa
je
daa
or
push
insb
mov
adc
sub
es
cwtl
std
add
rolb
daa
inc
cwtl
test
arpl
add
enter
pusha
dec
jbe
jo
or
ja
lahf
jg
daa
pusha
lahf
daa
xor
dec
mov
dec
pop
daa
insb
ret
test
jb
insb
outsl
arpl
dec
push
add
das
inc
pop
pop
push
ja
pop
or
pop
xor
push
nop
or
or
or
call
inc
icebp
movsl
loop
push
push
xor
push
lcall
mov
xchg
gs
mov
sbb
stos
leave
call
test
cmpsb
aaa
mov
push
dec
mov
push
mov
inc
leave
jl
push
push
mov
loope
mov
xor
fistpll
cmp
rol
test
jmp
stos
mov
mov
inc
iret
pusha
or
mov
sbb
push
inc
sbb
filds
ljmp
push
add
js
pusha
push
mov
mov
mov
call
pushf
sbb
pushf
pushl
and
imul
fldt
inc
xor
test
lret
orb
push
nop
inc
shll
dec
mov
cld
dec
addr16
push
js
jne
test
mov
fcoml
push
test
mov
push
mov
add
stos
cmpsb
ret
aam
or
aaa
imul
push
inc
push
lea
push
xchg
leave
pop
sbb
call
fadds
jne
xchg
or
pop
es
das
pushf
adc
dec
or
js
push
mov
lock
mov
xor
shll
out
sbb
clc
mov
call
xchg
movsb
jnp
call
adc
push
pushfw
andl
add
jmp
push
push
jmp
jnp
push
cmp
fldenv
mov
push
inc
sub
clc
push
jmp
xor
mov
or
inc
cld
fldl
and
lcall
jnp
cwtl
aaa
pop
add
call
push
icebp
out
mov
and
jmp
mull
loope
mov
pop
adc
sub
push
sti
cmp
pop
call
mov
cwtl
movsl
inc
cmp
out
shrb
inc
lods
push
stc
std
repnz
sub
sbb
leave
popf
push
mov
lea
imul
xchg
xchg
mov
lret
add
addl
lahf
mov
scas
inc
das
ficomps
push
in
psraw
shll
cmp
inc
mov
push
shll
fst
mov
lret
mov
lods
mov
sbb
cltd
pop
test
cmpsl
dec
jbe
sarb
call
les
shll
shl
bndldx
movsl
xchg
add
mov
icebp
out
in
mov
idivl
sub
dec
fistpll
divb
ret
mov
mov
ds
in
pusha
test
jmp
dec
ja
lcall
movsb
sub
xorb
pop
mov
movsb
sbb
mov
dec
jg
mov
clc
pop
rorl
fidivrs
fbstp
je
shl
add
loop
jecxz
pop
shll
in
pop
out
sbb
lods
sbb
push
fcompl
outsb
fldt
sub
lock
call
jne
pop
les
push
mov
repnz
lea
clc
bt
or
or
hlt
pop
ja
cmpsl
stc
pusha
sub
dec
push
jecxz
add
pop
jnp
and
mov
hlt
sbb
mov
insl
add
aaa
jl
pop
pop
mov
push
add
in
imull
jno
sub
mov
push
push
imul
sub
add
jmp
or
xchg
xchg
in
inc
call
mov
xor
imul
pop
shll
outsb
cltd
dec
test
mov
or
mov
std
sbb
cmp
adc
mov
push
push
pop
mov
or
or
sbb
rclb
mov
jge
mov
inc
mov
sub
das
adc
push
or
ja
mov
movl
js
inc
mov
add
mov
das
inc
imul
hlt
sbb
faddp
mov
pop
add
xlat
push
bound
aam
stos
add
mov
popa
or
pop
dec
or
and
es
mov
pop
in
fstpt
hlt
jae
hlt
stos
xor
sbb
fsubp
add
xchg
lock
xchg
or
and
push
cwtl
insl
xchg
push
and
rcll
mov
jecxz
and
lea
push
inc
lock
mov
xor
add
jmp
fsubr
mov
call
cmp
push
cmp
pushf
or
cmp
sbb
hlt
incl
inc
cmp
jg
cmpl
aaa
mov
dec
inc
push
cwtl
or
add
loopne
push
call
mov
in
xor
cmp
adc
int3
roll
inc
clc
pop
push
adc
in
lcall
pop
movsl
mov
ds
movsl
movsl
push
or
mov
xor
mov
push
mov
xchg
xchg
mov
xchg
outsl
ret
shll
xchg
clc
mov
jbe
dec
mov
out
push
cwtl
mov
cltd
mov
lcall
sahf
mov
xor
mov
pop
mov
mov
mov
stos
test
jo
pop
stos
pop
lods
push
lods
add
push
scas
jp
xor
xor
pop
cmp
and
xor
shl
mov
mov
dec
xlat
fldlg2
cwtl
xchg
lods
xchg
xor
addl
movsl
call
loope
lret
or
popa
fs
or
or
movsl
or
lcall
push
data16
insb
mov
mov
ljmp
loope
out
sub
or
sbb
imul
outsb
adc
pop
mov
mov
cmp
dec
je
xchg
add
mov
jmp
roll
sub
cmp
pop
fdivrl
push
mov
addl
inc
fstps
sbb
imul
in
add
stos
gs
inc
jmp
mov
sbb
rcrb
sub
push
or
inc
pop
shr
pop
popf
xor
sub
pop
mov
jg
test
orb
sbb
add
xor
dec
mov
decb
xor
lahf
rol
adc
shl
mov
stc
cmp
roll
jmp
mov
adc
xor
cmpb
lret
adc
cmp
cs
push
sub
dec
adc
pop
cmp
mov
inc
add
adc
cmp
add
ja
and
or
pop
or
pop
dec
sub
out
xchg
xor
sbbl
fildl
dec
add
adc
and
neg
enter
xchg
inc
cwtl
xchg
movsl
adc
sarb
xchg
insl
push
enter
mov
xor
test
outsb
shr
push
dec
or
out
out
sub
clc
call
outsb
push
cmpl
push
sbb
add
lods
lret
in
call
mov
pop
lock
addr16
add
or
xor
rcll
sbb
xor
mov
xchg
call
pop
jb
inc
out
mov
jo
lods
xor
adc
mov
les
xchg
je
out
stos
mov
adc
in
sub
sub
pop
add
mov
stos
jo
js
dec
jne
xlat
add
cmp
aas
test
mov
cld
inc
and
divl
je
jnp
sarl
push
push
fisttpl
shll
push
lea
push
scas
aad
adc
cmp
data16
pop
push
sub
rorb
daa
hlt
xlat
les
push
pusha
xor
rorb
test
jge
into
xchg
cmc
pusha
mov
cmp
and
lock
mov
sbb
push
ja
neg
pop
fldenv
push
test
ret
adc
lds
pop
add
pop
cmp
call
add
loope
jl
stos
and
dec
dec
adc
mov
xchg
and
push
inc
aaa
dec
shll
mov
xlat
scas
sahf
pop
mov
pusha
inc
sub
push
pop
andl
movsl
jle
jo
mov
push
push
push
pop
dec
sbb
xor
rcll
mov
mov
out
or
or
dec
adc
cmc
andb
test
fcomp
out
fs
sub
mov
mov
scas
call
push
add
test
sub
pusha
add
loope
pop
rorl
in
mov
add
imul
hlt
cld
xor
aad
cmp
sbb
stos
sar
adc
rorb
add
lea
cltd
cmpsb
fistpl
popf
mov
lcall
aad
xor
imul
push
add
popf
xchg
addl
xrelease
ja
jle
fdivrp
pop
call
inc
mov
sub
fsubl
mov
adc
sbb
mov
fdivs
mov
insb
jge
sub
or
dec
fcoms
xchg
call
sbb
sbb
nop
stos
push
push
in
in
xor
or
fiaddl
add
stc
sbb
add
inc
subl
lock
icebp
nop
jbe
cmpsb
imul
testb
imul
jl
div
jno
test
jp
cwtl
in
sub
repnz
inc
adc
je
negb
fadd
sbb
rcrl
mov
push
fldenv
mov
jl
leave
and
pop
add
xlat
push
jo
notb
jmp
sahf
sbb
cmp
pop
inc
pop
cmp
add
pop
add
getsec
cmp
inc
and
push
test
inc
decl
testb
or
inc
mov
pop
cld
dec
out
add
int
jmp
cwtl
imul
or
mov
in
out
dec
pop
sbb
xchg
xchg
cmp
xchg
fisubrl
scas
jmp
fcmovnu
xchg
and
stos
sub
jo
inc
ret
sti
subl
ja
mov
call
mov
aas
or
loopne
lods
data16
lret
roll
mov
pop
push
mov
mov
adc
xor
cmp
push
or
sub
xor
sub
mov
sbb
dec
cmp
inc
test
aam
stos
jne
cwtl
movsb
or
mov
inc
ja
inc
push
movl
int3
or
xchg
cmp
fs
and
add
out
notl
add
or
pop
jbe
inc
iret
mov
movsb
push
and
add
or
cmp
push
imul
inc
and
shlb
jge
out
add
inc
mul
push
pop
in
mov
jae
mov
shl
and
lock
add
mov
push
sbb
je
cwtl
orb
add
cmp
shr
in
imul
pusha
movsb
jne
iret
icebp
popa
jbe
inc
loopne
shll
je
mov
ss
pop
cli
dec
push
popa
shll
aam
enter
jmp
push
push
pop
add
pop
push
cmp
pusha
es
pop
out
sbb
or
mull
pusha
in
mov
jo
ret
push
sub
sub
and
les
imul
mov
add
push
sbb
je
push
sbb
outsl
fldcw
iret
pop
arpl
and
leave
inc
sahf
and
testb
push
outsb
out
test
rolb
icebp
sahf
loopne
pop
push
pop
cmp
je
inc
push
and
into
dec
test
jne
inc
mov
into
aad
mov
adc
jae
xchg
movups
push
mov
loop
mov
adc
pop
pop
dec
adc
mov
inc
or
add
or
or
add
cmp
inc
push
dec
sub
push
push
add
sub
ret
scas
fst
push
inc
sub
movsl
pop
dec
mov
inc
jns
pusha
loope
add
push
stc
dec
add
xor
add
adc
test
adc
sub
sub
mov
fimuls
std
inc
cmp
ss
cmp
insl
loope
lahf
mov
subl
adc
shll
clc
pop
mov
or
xor
add
add
mov
and
xor
mov
adc
inc
xor
push
out
stos
daa
imul
or
pop
mov
inc
jmp
pop
jle
adc
orb
mov
insb
jecxz
arpl
or
sub
aam
add
std
mov
mov
pop
jae
pop
call
add
loopne
call
call
push
jbe
mov
cmp
jg
cmp
jl
push
inc
call
push
fsubr
jb
mov
pop
inc
dec
push
adc
bound
mov
xor
add
push
pop
lcall
jmp
push
xor
jg
call
jae
test
and
sub
and
mov
rclb
ret
call
push
cld
out
sti
fstl
mov
mov
add
or
shlb
cwtl
push
jno
mov
pop
ret
js
cmp
cmp
ret
adc
push
xor
sbb
mov
sbb
adc
jp
ret
xchg
ret
mov
sbb
leave
mov
bound
ds
ds
je
or
push
ret
jo
popf
mov
xor
xchg
pop
pop
cmp
aad
adc
ss
sti
dec
inc
mov
push
mov
sbb
iret
lcall
jne
shlb
imul
xor
mov
sbb
arpl
push
fprem1
mov
mul
paddsw
filds
xchg
orb
mov
jle
cmp
lea
sti
addr16
dec
call
xchg
pushf
fwait
adc
xchg
sbb
sahf
xchg
sub
in
lahf
lds
push
push
pushf
xor
mov
fistpll
ljmp
pusha
sbb
pushf
jmp
push
add
fcomps
add
or
call
imul
lcall
mov
push
jne
repnz
repz
xor
rclb
inc
rcll
addr16
inc
push
or
lds
movb
mov
leave
pop
lret
or
lock
mov
cmpsb
push
bound
xor
lcall
mov
cmpsb
js
test
xchg
cld
call
inc
test
xlat
rolb
xor
and
ret
inc
insb
push
loope
loop
jecxz
cmc
push
jne
in
in
out
out
sbb
iret
jnp
das
sbbl
add
mov
outsb
orb
mov
aaa
mov
add
xchg
addr16
adc
imul
sub
gs
inc
mov
mov
inc
clc
ljmp
xlat
sar
xor
cwtl
fiaddl
fucomi
cmp
leave
add
xchg
loopne
push
push
xchg
pop
and
shll
jl
mov
cmpl
call
jbe
movl
xor
xor
xor
pusha
lds
mov
pop
lock
call
sub
pop
repnz
in
dec
imul
inc
les
popa
sub
push
lcall
inc
add
clc
xchg
loopne
jne
leave
or
dec
jne
pop
add
mov
ds
jecxz
inc
mov
andb
push
jb
dec
xchg
dec
or
call
shr
out
lock
pop
mov
std
mov
dec
jge
add
je
pop
mov
xor
jmp
add
xor
icebp
loopne
call
notb
fbstp
clc
scas
add
repnz
and
cmpsb
das
pop
inc
cmpsb
dec
xchg
or
sbb
mov
es
aaa
rcrb
sbb
push
dec
xchg
and
test
xor
test
dec
and
sbb
dec
outsb
mov
sub
frstor
cld
cltd
xchg
shll
mov
and
mov
xor
mov
lahf
jl,pn
inc
frstor
cmp
adc
jecxz
in
dec
shll
push
xor
call
ss
add
shr
add
mov
arpl
push
das
test
adc
mov
test
sbb
xchg
out
outsl
mov
add
adc
xor
xchg
jle
mov
sub
cli
mov
add
xor
cmp
push
mov
push
addr16
mov
loope
cmp
pop
or
cld
add
in
and
push
pusha
cmp
into
mov
cltd
push
repnz
cmp
and
js
mov
andb
jno
stos
add
push
popf
xlat
jge
dec
cmp
inc
fsubs
ret
jle
jmp
sbb
xchg
and
test
sub
fistpll
in
and
fsubs
lock
sub
adc
aad
jg
pop
pop
clc
stc
cmc
testb
das
sbb
decb
and
adc
cld
mov
call
mov
ja
jmp
js
outsb
fld
adc
mov
or
or
out
popa
incb
movb
mov
testb
sbb
or
test
in
addr16
jmp
fidivs
lahf
icebp
mov
push
or
andb
popa
fcmovu
or
ret
clc
cs
pop
or
mov
push
mov
rcll
cld
push
inc
call
sbb
add
and
data16
or
fstpt
call
call
mov
or
add
loopne
cmc
mov
sub
mov
dec
in
ja
pop
fiaddl
cmp
jne
cmp
outsb
idiv
std
arpl
pop
add
cmp
sti
cmp
je
pushl
jnp
add
aas
in
cmpsb
inc
sbb
mov
fbstp
mov
pop
mov
aas
lea
fwait
mov
mov
push
mov
jle
call
js
push
adc
adc
mov
lods
fmull
cmp
mov
dec
add
pop
aaa
mov
push
and
push
pop
dec
mov
pop
stos
ret
cmp
aaa
jno
shl
decl
mov
mov
jne
xor
hlt
lods
or
por
mov
adc
shlb
jbe
std
clc
lea
mov
js
xor
orb
cmp
movsl
mov
fidivs
add
add
lea
jmp
inc
andnps
ja
mov
rorl
xor
or
and
mov
add
jns
es
push
mov
cmp
add
add
or
aaa
adc
iret
neg
mov
add
jmp
dec
rorb
pusha
aas
jno
jno
dec
push
or
jne
sub
cmp
jne
std
negb
jge
or
mov
mov
jmp
fimull
inc
pop
mov
mov
idivl
test
and
dec
or
xchg
sbb
mov
mov
mov
jne
pop
aam
mov
sahf
in
mov
jne
lahf
andl
sbb
add
adc
int3
add
jle
push
jo
mov
pop
je
imul
dec
jne
and
pop
cs
mov
xor
loop
lock
push
iret
jge
adc
lret
pop
push
and
sti
mov
add
cmp
insb
mov
inc
add
jp
fs
fucomi
push
pop
mov
jo
mov
ret
insb
jmp
sbb
fsts
aaa
ds
adc
sbb
jmp
cwtl
aas
fimull
or
dec
or
pop
mov
mov
cltd
mov
test
adc
cmp
je
dec
fsubrl
jecxz
mov
push
and
outsb
sbbb
pop
mov
scas
lcall
call
jmp
push
xchg
fstpt
mov
movl
xlat
enter
in
js
jne
mov
inc
lds
mov
out
mov
sbb
jbe
add
sub
or
lds
cs
call
mov
mov
testb
or
add
push
sbb
adc
push
mov
xor
out
test
test
jb
ss
clc
subb
mov
or
fwait
mov
out
xchg
jnp
mov
lds
jo
xor
insl
jecxz
sqrtps
or
add
in
pusha
dec
sbb
inc
adc
lea
sbb
mov
sub
mov
call
mov
sub
je
cmp
add
pop
ss
push
inc
xor
clc
jecxz
call
movsl
and
call
and
addb
sbb
xchg
addr16
jbe
lea
pushl
pop
repz
dec
lock
or
dec
cmp
jb
jmp
imul
in
loop
add
cmp
dec
push
mov
jne
clc
pop
adc
lcall
and
jmp
push
jg
int3
movl
les
clc
pushl
ss
cli
and
push
cs
jp
and
pop
mov
mov
cmp
dec
ss
lea
test
mov
or
pop
push
push
hlt
lods
add
pop
sub
adc
xchg
or
and
int3
add
dec
pop
push
push
push
or
stos
jle
je
cmc
lods
adc
clc
nop
push
mov
icebp
lock
push
fistpl
sbb
push
data16
imul
out
stc
aam
fsubs
das
idivl
loop
fidivs
gs
icebp
adc
mov
adc
rorb
lahf
mov
call
sub
or
stc
pop
push
jge
outsb
je
adc
jne
sti
dec
out
sub
in
ljmp
mov
or
and
outsl
or
das
and
inc
stc
clc
outsl
std
pop
mov
jle
cld
sbb
add
xchg
inc
push
in
xchg
dec
add
pop
adc
mov
cli
sub
mov
mov
add
xchg
adc
cmpb
scas
test
mov
std
test
fdivl
cld
sub
sti
popf
lock
das
outsl
or
jle
out
inc
aas
adc
push
push
push
jge
dec
int
hlt
add
push
psubb
jae
fwait
movsl
push
hlt
push
call
mov
hlt
pop
or
mov
test
test
xor
pop
mov
xchg
adcb
hlt
cltd
pop
test
call
pop
incl
and
mov
dec
inc
dec
mov
fidivl
mov
push
loopne
jb
fldt
fwait
sbb
repz
pop
and
cmp
dec
cmp
je
dec
dec
cmpw
pusha
out
ljmp
cmp
outsl
mov
outsl
push
add
and
jecxz
inc
pop
mov
sbb
adc
sbb
and
shl
inc
or
call
push
mov
aad
or
sbb
pop
pop
jb
add
fildl
sbb
bound
cltd
scas
imul
push
test
fcos
fstpt
xchg
sbbb
inc
add
dec
rcrl
das
jne
shrb
cmp
pop
sub
or
lea
inc
cli
pop
cmp
jo
dec
test
sbbl
pusha
cmp
pop
pop
pop
cmp
jne
jo
lea
bound
cmp
and
mov
push
or
lcall
test
test
rolb
sbb
lock
push
insl
shl
xchg
repnz
outsb
push
sbb
mov
add
mov
adcb
sti
sbb
addb
pop
mov
subl
add
fisttpl
xchg
outsl
mov
fldt
mov
lea
mov
jbe
xlat
aad
in
xchg
push
cmp
fisubrl
xchg
aaa
xchg
je
sbb
or
bound
scas
pop
mov
add
in
movsl
inc
add
pop
test
cmpb
xor
js
cmpb
into
dec
jmp
inc
cmpsb
iret
ret
add
lcall
pop
inc
loopne
adc
fadds
jmp
or
fildll
sub
sbb
roll
in
mov
xor
xorb
cwtl
xor
xor
fwait
xor
lods
enter
adc
insb
orb
fnstenv
push
jne
sbbb
mov
add
fadd
fiadds
fadd
ja
push
adc
js
movsl
lret
mov
push
push
and
jmp
add
inc
or
sub
sarb
jle
ja
mov
push
push
push
ret
push
adc
mov
jae
cli
add
jbe
clc
mov
pop
or
sar
and
pop
mov
add
cmp
stos
cs
in
lea
add
or
imul
add
push
push
inc
std
mov
pop
sub
cmpl
addr16
or
cli
insb
mov
dec
and
cmpsb
xor
xor
mov
test
call
sbb
mov
mov
sbb
outsl
data16
aam
cmp
bnd
shlb
xorb
mov
loope
lcall
shlb
mov
mov
add
mov
testl
inc
mov
mov
push
addl
push
icebp
push
mov
lods
mov
clc
inc
jl
sub
ret
mov
scas
pop
adc
popf
roll
insl
or
stc
sbb
popf
xor
shl
out
shufps
push
pop
imul
cmp
or
push
ja
jae
imul
pop
dec
push
imul
in
insb
imul
imul
sub
lods
xlat
arpl
leave
xor
jo
outsl
inc
stos
pop
stos
jmp
mov
lods
or
lcall
push
sbb
mov
into
push
in
cmp
jo
cmpsb
imul
aad
imul
inc
inc
shll
xor
xor
mov
inc
in
sbb
inc
pop
xlat
xor
call
loope
dec
inc
test
dec
cmp
push
popa
mov
je
adc
push
push
lcall
cmp
pop
ds
aas
sub
data16
jnp
cmc
test
push
inc
in
test
xchg
xor
mov
flds
cli
sub
fcompp
dec
popa
dec
test
in
test
lods
and
into
into
into
xchg
arpl
imul
into
jl
insl
push
inc
outsb
and
cmp
cmp
jo
jno
jb
push
sbb
adc
sbb
sbb
add
dec
pushf
popf
dec
add
push
dec
sahf
sub
inc
mov
jo
cmpsb
xor
outsb
push
push
lret
cmp
jmp
int
into
in
out
imul
imul
pusha
lcall
sbb
lea
dec
push
in
or
test
popa
sbb
jne
jbe
test
js
jns
daa
fdivrl
xor
inc
test
jl
jbe
dec
popa
jge
jle
jg
rolb
push
xorb
push
inc
and
popw
lods
addb
pop
out
add
add
cmp
pop
sahf
xchg
adc
sub
pusha
xchg
fildl
pusha
stos
pop
adcl
pop
jp
lock
dec
mov
push
jmp
clc
sti
push
cmp
xchg
lea
fldt
push
sub
sub
push
cmp
push
mov
jbe
fwait
cmp
mov
add
lcall
enter
pop
lea
sbb
lds
enter
inc
mov
push
push
fisttpll
shrl
xor
scas
sbb
test
incb
xor
cmp
add
mov
jns
int
ljmp
pop
pop
out
imul
imul
mov
sbbl
aam
sarl
add
xchg
jmp
ds
sub
dec
push
xor
enter
in
jmp
sbb
or
adcl
cmp
ja
push
aam
xchg
add
jle
outsl
call
fildl
aad
inc
adc
call
xchg
mov
add
adc
add
dec
popa
adc
in
int
or
repnz
je
loope
jmp
mov
xlat
pop
cwtl
in
fwait
jns
push
push
mov
and
call
sti
fiaddl
clc
sbb
cmp
sub
inc
mov
lock
sbb
xlat
popf
sub
push
cld
test
ss
mov
inc
adc
mov
add
les
and
loope
loop
rol
adcb
dec
push
loopne
cwtl
adc
andb
or
icebp
shl
sbbb
ss
pushf
adc
add
scas
adc
mov
cmpsl
lock
cmp
scas
lock
orb
fiadds
jo
sbbl
mov
pop
andl
sub
fildl
dec
push
push
ret
adcb
fidivrs
sub
repnz
call
inc
sti
and
aaa
dec
out
push
int3
jbe
mov
push
sub
lahf
xor
je
call
push
lods
and
cmp
adc
aaa
fistpl
sahf
jmp
or
ja
xchg
addr16
lret
push
push
dec
or
jo
sub
pop
pop
sbb
rol
or
cld
rol
addb
dec
std
cmp
jbe
mov
add
scas
push
sub
mov
adc
inc
mov
imull
or
jmp
push
jmp
push
push
mov
adc
lods
bnd
or
add
aaa
mov
xchg
mov
sahf
xor
js
sahf
or
jecxz
insb
and
or
add
or
insb
add
inc
add
adc
dec
nop
aaa
xchg
or
loope
adc
scas
gs
rcrb
ffree
or
in
xchg
pop
mov
dec
cmp
sbb
mov
gs
xor
icebp
push
aam
xchg
push
push
notb
mov
std
and
roll
sbb
push
mov
xchg
cmp
xor
test
cld
sbb
pop
push
sbb
fmuls
mov
dec
xlat
mov
enter
or
mov
movb
add
mov
add
fildl
mov
ret
lods
adc
ljmp
adc
and
mov
xor
cmp
inc
sbb
mov
sbbb
clc
push
pop
lcall
cld
add
pop
pop
and
lock
add
int3
add
xchg
and
cmpsb
mov
mov
addl
sub
xor
stos
lods
fadds
int
cs
mov
mov
pop
insb
rolb
mov
mov
sub
mov
add
and
xchg
adc
adc
mov
and
or
enter
add
gs
fs
into
xor
insl
and
cwtl
push
jb
scas
jmp
push
pop
shll
setae
lds
rcrl
inc
sub
in
je
pusha
addr16
shlb
push
add
cmp
or
mov
cmp
adc
mov
lock
and
adc
inc
mov
movsb
bndstx
pop
jp
std
jp
mov
push
push
call
pop
mov
imul
or
xorl
push
in
loope
andb
pop
mov
inc
rorb
inc
dec
lret
lcall
mov
insb
lds
push
call
inc
nop
add
dec
clc
cld
cs
xchg
add
cmpsb
ja
cmp
ja
es
push
daa
lods
add
inc
add
dec
lock
push
xchg
push
push
test
sar
xchg
cmp
icebp
loopne
insb
fldl
push
iret
lcall
jg
pop
lock
push
pop
or
pop
push
or
in
call
adcb
xor
aaa
xor
call
in
roll
cmp
jl
jnp
fiaddl
cmp
fxch
mov
pop
lods
push
mov
scas
fwait
push
mov
out
inc
leave
lock
int3
xor
or
in
int3
or
lds
out
mov
in
fmuls
mov
add
lods
lds
mov
fwait
adc
in
lea
incl
es
testl
arpl
lock
daa
adc
pop
sbb
mov
call
inc
lea
sbb
negb
movsl
mov
shlb
sub
lds
mov
add
add
nop
xchg
adc
add
test
xchg
jge
mov
sbbl
adc
push
lock
pop
loopne
ds
pop
dec
push
push
push
dec
xor
add
jmp
jns
mov
movb
xchg
sub
push
mov
fsubr
inc
add
push
inc
pop
add
push
ret
in
imul
jo
xchg
and
xlat
adc
fucomip
gs
push
leave
mov
push
lea
repnz
rorl
xchg
inc
push
popf
xchg
sub
sub
jle
jg
repnz
mov
sub
xchg
xor
adc
push
sbb
call
jl
xor
pop
mov
call
call
out
dec
push
add
push
mov
call
adc
clc
cmp
or
cwtl
push
mov
movsl
inc
mov
js
test
test
or
xor
mov
shlb
sahf
mov
sbb
mov
das
cmpsb
mov
pushf
cmp
ja
ja
leave
inc
daa
orb
adc
lock
or
mov
and
orb
add
rorb
dec
push
push
jmp
pushf
mov
mov
loope
pop
stc
mov
cmp
sbb
sub
pusha
or
orl
call
xor
mov
push
mov
add
push
stc
jnp
cmp
ret
lds
pop
nop
stos
fwait
adc
lods
sbb
aad
enter
insl
xchg
sub
xchg
push
das
xchg
xor
mov
inc
push
std
orb
or
push
or
clc
lea
fdivrl
xor
xchg
add
dec
sub
xor
adc
xor
paddb
push
sbb
dec
jne
adcl
mov
sub
jge
sub
test
mov
jne
lods
ret
push
fcmovnu
push
jmp
idivb
lods
pmulhuw
mov
add
fs
adc
das
ss
cmp
bound
scas
dec
push
inc
xchg
scas
sub
push
mov
lahf
sub
lea
roll
ret
mov
mov
sub
leave
jne
cmp
pusha
getsec
aam
mov
test
test
pop
pop
add
js
xchg
push
outsb
jl
shrb
lea
jmp
cmp
xor
or
loope
test
mov
sbb
pop
cmp
icebp
add
push
outsl
and
dec
push
and
rorl
mov
push
pushl
out
call
jmp
cmp
stc
shlb
jo
push
mov
pushf
add
pop
or
cli
add
inc
pushf
dec
xor
pusha
pop
shl
or
clc
add
popa
fnstcw
mov
ja
push
shlb
cld
or
fs
jo
ja
inc
xlat
and
xchg
aas
pop
pop
push
ljmp
pop
sbb
jne
push
inc
jge
repz
push
fs
stos
into
sbb
pop
pop
dec
pop
clc
bound
push
add
clc
pusha
lock
inc
mov
stc
stc
pusha
cmp
xor
pushf
cmc
mov
js
jl
ss
cmp
pop
in
cmc
loopne
mov
leave
xor
cmp
jge
add
pushf
add
jmp
xchg
pop
cmp
sti
or
push
push
push
cwtl
add
push
js
xchg
sub
add
or
xor
add
mov
adc
or
inc
ljmp
lods
lcall
jns
xor
push
xchg
les
insl
xor
lret
push
iret
out
sub
push
pop
cmp
jmp
mov
loopne
pusha
mov
cmp
fildll
pusha
addr16
data16
sar
jge
int3
les
cli
out
jmp
mov
subb
mov
dec
mov
scas
mov
xor
lea
pusha
pop
rcr
sub
jbe
add
cmp
in
stos
xlat
xchg
or
test
adc
jns
and
inc
sub
xor
push
out
popf
aas
popa
cmp
and
lcall
sahf
adc
xchg
jmp
movsb
xchg
adc
cmpsb
jmp
stos
lods
lods
scas
jmp
cmpsb
jmp
scas
pop
mov
mov
mov
lcall
mov
insl
stos
imul
mov
sti
push
stos
out
mov
sub
mov
and
ljmp
jmp
test
lret
pop
scas
imul
sub
inc
mov
pop
rcl
test
pop
aad
imul
fmuls
fstps
fcmovu
aaa
mov
es
imul
imul
jecxz
in
out
jmp
call
js
cwtl
jmp
je
daa
mov
lcall
repnz
push
sarl
negb
idiv
pop
add
cli
or
pop
std
jae
pop
call
aad
das
sub
lea
imul
lea
enter
rolb
add
mov
insl
mov
or
or
adc
add
push
jo
ja
lahf
push
dec
test
cmp
and
pop
xchg
push
push
pushf
data16
mov
mov
int3
or
rolb
or
mov
pop
mov
or
push
xchg
add
xor
inc
mov
sti
and
sub
pop
je
mov
jmp
adc
sbb
or
add
rolb
call
mov
aaa
mov
jmp
add
mov
shrb
cltd
pop
inc
pop
sarb
add
inc
inc
jne
addb
sahf
mov
jmp
mov
xor
mov
mov
rolb
or
or
push
ltr
loope
shll
mov
ret
insl
add
xorl
add
cwtl
adc
icebp
lods
test
adc
add
sub
in
std
sub
inc
pop
das
js
hlt
push
mov
jmp
fwait
test
stos
mov
or
shll
bound
test
mov
call
cmp
and
push
lahf
cmp
enter
test
ljmp
popa
data16
insb
scas
ret
insb
mov
mov
lahf
jne
add
scas
mov
adc
xor
xchg
pop
pusha
cmp
add
sub
mov
lcall
inc
mov
pushf
and
pusha
push
cld
ljmp
sbb
scas
pop
pop
add
or
mov
jo
and
mov
nop
or
and
mov
adc
insb
adc
jo
mov
add
inc
in
push
add
push
and
add
and
push
mov
dec
mov
push
xchg
adc
add
xchg
dec
push
filds
inc
testl
fadd
mov
add
or
loope
lds
adc
add
cmpw
sbb
cmp
lret
js
insl
pop
pop
jne
inc
aad
fildl
sbb
or
push
scas
das
mov
push
stos
sbb
mov
ror
arpl
jae
dec
dec
ds
push
pop
jmp
nop
pusha
or
mov
sub
fdivrs
outsb
mov
cmp
je
data16
fistpll
adc
pop
cmp
mov
xor
jae
jg
imulb
mov
adc
adc
pushf
inc
jmp
cmp
jb
clc
adc
decl
pop
test
mov
int
add
add
xor
push
addb
call
mov
cmp
cli
add
outsl
in
or
mov
loopne
shll
adc
mov
and
lahf
cmp
cmpl
sub
inc
js
xor
mov
out
rcrl
xor
sbb
mov
xor
xchg
xchg
xchg
xchg
sahf
mov
jp
outsl
mov
mov
sub
imul
andl
cltd
jae
lcall
mov
stos
mov
push
les
lds
cmpsb
imul
mov
xlat
dec
shll
mov
call
pop
faddl
jmp
outsb
add
pop
loope
lcall
mov
imul
xchg
inc
aam
jge
mov
cwtl
pop
mov
sbb
push
stos
lcall
aas
pushf
popf
sbb
je
xchg
sahf
push
lahf
mov
lcall
mov
outsb
lcall
repnz
sbb
adcb
lahf
out
shlb
fmull
aam
push
roll
fdivs
lods
adc
adc
add
in
adc
cwtl
cltd
insb
fs
aad
push
dec
pop
rorb
fs
aam
lods
mov
cwtl
pop
mov
inc
adc
call
push
or
dec
pop
and
lea
je
push
std
push
and
shrl
pop
jge
cltd
enter
push
push
pop
xor
cmp
xchg
aam
data16
push
xor
mov
add
push
pop
inc
add
daa
mov
jne
push
pop
adc
pop
inc
je
mov
push
push
or
addb
cmp
ficompl
mov
cmp
mov
ficompl
dec
clc
cmp
mov
mov
or
inc
in
jnp
add
mov
sub
add
and
in
and
push
or
sarl
push
fiaddl
ret
negb
pop
sbb
flds
pop
or
sbb
popa
jmp
inc
scas
xor
sub
xor
xchg
fistl
call
aaa
sub
sbb
mov
pop
call
lds
push
arpl
mov
call
add
cmp
mov
or
jle
push
cmpsb
lret
lock
lods
daa
inc
pop
sbb
mov
jg
and
and
jne
inc
inc
inc
push
inc
mov
call
cs
cmp
pop
jb
mov
fdivl
cs
pop
cld
jle
add
jnp
push
jnp
shll
xchg
hlt
or
push
pop
xchg
fstpl
sbb
add
andl
add
imul
push
lods
subl
pop
fbld
pop
jb
in
mov
xor
push
daa
xchg
xor
add
jbe
bound
adc
movsl
jb
cltd
in
scas
imul
xchg
jmp
pusha
andb
aaa
mov
cmp
jne
cmp
push
loop
sub
mov
pop
shr
add
xchg
clc
out
icebp
into
data16
call
or
push
cmp
jne
jmp
add
jne
sbb
test
testb
loop
or
movl
sbb
xor
cmp
jecxz
add
fsubr
mov
inc
inc
jb
mov
cltd
fldenv
pushf
stos
stos
lock
mov
cmp
jne
inc
jbe
loopne
insl
mov
push
cwtl
jmp
lods
sbb
or
rolb
sbb
mov
cmc
sbb
push
call
add
jle
mov
ss
add
jl
lgdtl
jnp
and
or
jnp
je
push
sub
test
pop
lahf
jp
ud1
mov
or
hlt
lods
fistl
ficomps
lods
mov
rclb
pop
add
insb
cli
xchg
pop
mov
enter
xchg
lods
push
mov
int3
inc
add
sub
fsubrl
inc
add
leave
call
dec
adc
shll
call
aam
test
jo
in
adc
dec
in
out
inc
aas
push
clc
xchg
push
mov
andb
push
cmp
add
aad
rclb
pop
movsb
adc
or
add
in
sub
adc
pop
or
into
aas
push
or
xlat
mov
mov
inc
imul
into
idiv
cmp
pop
jge
mov
and
fcomps
mov
sub
adc
inc
outsl
add
fldl
and
push
negb
cld
sub
jge
dec
hlt
push
push
push
mov
xchg
adc
or
push
repz
sbb
xor
js
dec
sub
int
pop
call
stos
dec
sub
fsubr
pop
in
mov
cmpsb
mov
cs
stos
dec
jo
pop
bnd
or
addr16
and
mov
hlt
cmp
pop
dec
shll
gs
dec
shll
gs
jb
scas
fwait
push
and
test
test
scas
stos
bts
gs
mov
inc
sbbl
sub
arpl
adc
pop
dec
adc
mov
int3
push
add
rol
jno
jne
das
adc
shlb
dec
rolb
cmpsb
bound
sbb
adc
push
adc
add
mov
shll
push
dec
xchg
or
and
aad
sub
dec
scas
jmp
scas
fcomps
fisttpl
push
mov
inc
loopne
loope
loop
add
in
inc
xlat
mov
mov
mov
xlat
int
pop
mov
mov
inc
movzbl
or
mov
lods
xlat
jne
mov
arpl
and
or
inc
shlb
fs
jmp
push
or
fcomps
and
pusha
mov
pop
dec
outsl
mov
mov
call
lcall
add
lcall
push
jnp
push
add
jo
fisubrl
outsl
fists
add
or
xchg
enter
mov
loopne
dec
popa
jecxz
push
pop
mov
adc
mov
icebp
jne
add
add
cmp
push
das
and
scas
push
je
pop
scas
xchg
mov
loop
jne
mov
adc
adc
add
lcall
push
lcall
add
mov
xor
or
mov
sub
push
inc
pop
test
ret
inc
add
sub
or
xchg
sbb
push
stc
dec
scas
push
movnti
jno
and
dec
bound
in
adc
xchg
mov
inc
icebp
int3
adc
push
pop
pusha
sbb
in
in
push
pop
push
cmp
or
jo
sub
add
shrl
lock
sbb
inc
call
sbbb
mov
adc
cmovle
imul
mov
pushf
adc
outsb
pop
push
push
sub
fnstsw
rorb
pop
or
insb
lret
mov
push
add
adc
pop
pop
insl
fwait
stos
push
ret
or
imul
pop
pop
pop
test
jne
adc
inc
pusha
push
inc
jne
add
js
mov
inc
cmp
sbbb
jle
jbe
mov
jae
test
add
jnp
push
sub
xchg
dec
adc
add
inc
mov
or
push
xor
loopne
jecxz
leave
lahf
dec
leave
and
pop
je
sbb
add
fstps
aaa
push
addl
sbbb
test
sbb
or
popf
inc
or
jne
shll
push
and
push
jmp
mov
in
mov
push
shr
in
cmc
inc
mov
mov
in
fst
adc
or
imul
lret
mov
sub
shl
and
sub
inc
clc
xchg
cmp
add
shrb
setbe
jmp
outsl
fisttps
mov
xor
neg
not
and
xor
xor
sar
adc
add
mov
add
mov
ss
jbe
dec
movsl
pop
ror
das
inc
notl
or
xchg
call
pop
mov
out
cmp
lea
and
ja
mov
mov
add
inc
mov
stos
mov
mov
or
cld
loope
rcrb
and
je
push
or
ret
cld
push
insb
add
xlat
adc
ret
orb
lods
jmp
add
push
stos
xchg
add
dec
jo
pop
cmp
jle
roll
movsb
or
add
hlt
pop
or
adc
cmp
jae
and
jb
sub
and
and
outsb
into
sub
das
jne
ss
push
ds
imul
inc
push
cmp
sub
fisttps
inc
jle
mov
fnstsw
aas
cmp
imulb
cs
mov
sbb
mov
and
std
into
call
sbb
imul
insl
fisttps
inc
jb
or
ss
mov
shr
adc
or
adc
data16
repz
rcll
stc
adc
sbb
mov
das
jmp
jae
int
jno
test
arpl
imul
cmp
rorl
jno
popa
jb
mov
es
xor
and
rclb
outsb
push
jne
sbb
imul
lcall
hlt
loope
fstps
out
dec
shll
jmp
popf
sub
lock
icebp
repnz
push
jge
push
adc
cmp
add
aad
sbbl
jne
and
xor
or
push
mov
rorb
rcrb
mov
pop
pop
or
cmp
push
dec
orl
sub
arpl
psubsb
adc
push
push
lock
mov
addr16
sbb
add
sub
dec
nop
lret
inc
sub
gs
cltd
push
add
stos
call
sub
add
sub
pop
in
and
and
int3
or
popa
icebp
or
adc
iret
xor
pusha
and
or
ljmp
dec
out
or
imul
repnz
cmpsb
jo
jae
jne
adc
and
sub
jbe
in
popf
icebp
popa
pop
jno
insl
call
add
mov
push
insb
filds
xor
add
push
dec
sub
xchg
cmp
cmp
mov
enter
pushf
pop
cmp
sbb
insb
icebp
inc
cmp
and
std
inc
mov
and
movsl
or
ret
fs
sbb
les
xor
inc
cmp
cld
inc
je
int
lcall
loope
daa
imul
adc
rcl
dec
mov
cli
rolb
sbb
jne
push
pop
sbb
xorb
loopne
mov
out
cmp
jo
xor
loopne
mov
out
sbb
inc
mov
addl
add
cmp
inc
testb
test
push
jmp
inc
test
or
mov
xchg
dec
sub
in
dec
or
and
cld
pop
sti
push
fisubrl
dec
iret
mov
cmpsb
imul
lcall
xor
imul
in
lahf
pop
mov
aaa
stos
mov
insl
mov
subl
popa
jl
out
aad
mov
pop
xor
div
gs
dec
hlt
and
or
adc
and
mov
xchg
adc
test
mov
sbb
leave
cld
push
sbb
jmp
pop
insb
scas
lret
xor
xchg
add
pop
and
scas
jmp
fwait
pushf
pushf
mov
cwtl
pop
orb
mov
in
data16
daa
cmpsb
imul
fwait
sub
test
cmp
scas
inc
scas
fdivs
sub
popa
rcll
sbbb
sub
xor
outsl
outsb
cmp
add
in
add
les
scas
enter
add
call
xor
xor
aaa
orl
fdivs
or
mov
pop
push
sbb
jg
loopne
or
nop
movsb
xchg
ljmp
cmp
or
ficoml
insb
fildll
jae
ja
jl
add
and
andb
outsl
ret
test
and
outsl
adc
jno
jp
xlat
repz
adc
aam
jg
mov
dec
je
add
icebp
jne
add
scas
push
jmp
or
sbb
aas
push
inc
cwtl
dec
cld
incl
mov
lahf
psubsb
ljmp
push
add
rorb
adc
daa
test
jmp
call
mov
jg
mov
mov
pop
inc
mov
jmp
mov
nop
mov
push
xor
mov
pop
mov
mov
loopne
test
add
adc
orl
adc
mov
mov
adc
push
or
mov
mul
ljmp
rcl
shlb
cli
cmp
cltd
addr16
sbb
and
lods
push
andb
xor
imul
test
sbb
sahf
jae
jbe
psubsb
cld
jmp
xlat
insl
push
fiadds
mov
push
ja
lock
xchg
ljmp
sbb
popa
je
and
fs
adc
add
mov
cli
jns
or
not
xchg
insb
adc
clc
cmp
and
xchg
mov
xor
insl
int3
jle
popf
mov
push
jmp
mov
xorl
ficoms
add
mov
jl
sub
add
scas
psllq
repz
push
cmp
jne
sub
loopne
add
lock
push
jmp
jae
sahf
loop
jmp
xchg
pop
icebp
add
fs
and
or
cmp
adc
sarb
cmpl
jle
scas
adc
js
or
sbb
incl
push
ffree
add
push
loop
mov
clc
subl
and
add
sti
out
sbb
dec
add
out
or
rclb
out
mov
or
js
push
aaa
shlb
sti
pop
cld
inc
std
inc
lds
rclb
pushf
incl
rorb
dec
pusha
mov
loopne
push
mov
push
js
mov
dec
je
mov
dec
rclb
test
add
dec
dec
inc
and
je
mov
push
xchg
inc
inc
inc
shll
push
push
fstps
mov
sbb
inc
sbb
xor
sub
jne
push
push
lahf
jp
xor
rcr
fs
cltd
and
lds
xor
fwait
loopne
loope
popa
push
jo
lcall
mov
xor
mov
cltd
in
mov
add
fldenv
add
mov
push
xlat
psubd
sti
fs
loope
shrb
cmp
gs
sub
rol
add
inc
add
xchg
stc
xor
adc
mov
sub
sbb
add
push
iret
or
mov
hlt
inc
jl
add
xor
cmp
and
jge
cs
test
push
mov
lea
fldl
icebp
push
sub
or
cmp
imul
jo
call
add
add
clc
testl
jl
pop
clc
call
jb
xor
or
outsb
incl
mov
add
or
pop
pop
jmp
sbb
int
dec
and
nop
add
repnz
dec
add
add
in
popl
xchg
push
fwait
xlat
iret
int3
lret
add
xchg
adc
dec
push
and
daa
mov
jo
add
in
pop
add
movsb
cmp
add
push
xchg
mov
shll
rorb
sti
lret
jb
mov
and
add
dec
pop
mov
sbb
add
idivb
push
cmc
adc
movsl
sbb
or
xorb
or
insl
push
les
cmp
js
jno
jne
lret
push
insl
push
mov
jg
mov
dec
into
add
test
adc
push
dec
add
or
cmp
mov
lret
daa
test
inc
cmpsl
pop
adc
pmaxsw
push
xchg
and
movsb
inc
push
shll
ljmp
cmp
ret
mov
and
les
sbbl
adc
test
pop
xchg
sub
add
lock
mov
testl
cmp
add
add
jl
add
push
xchg
out
jmp
sub
mov
adc
and
add
movsb
dec
outsb
add
inc
xor
xor
stc
jmp
add
xor
xor
sub
xor
xor
and
int3
add
test
push
xor
or
movsl
and
xor
push
and
fcmovnb
int3
sub
adc
inc
inc
sahf
and
inc
inc
inc
int3
rcl
fcomps
insb
cld
ret
adc
add
inc
popf
pop
adc
sbb
dec
add
jbe
sub
inc
push
popf
lahf
arpl
sub
in
and
and
in
lock
push
and
clc
cld
mov
mov
xor
mov
clc
pop
or
mov
sub
sti
scas
jp
js
andl
mov
pop
xlat
inc
add
in
call
mov
jmp
arpl
es
xor
ljmp
jno
cmp
jb
mov
test
je
call
push
sub
add
out
add
ljmp
push
pavgb
push
mov
pop
pop
daa
pop
mov
add
es
je
xchg
mov
jne
mov
pop
mov
leave
adc
ljmp
xlat
sbb
xor
pop
aaa
jbe
lods
rclb
test
inc
add
enter
and
sbb
and
pop
cmp
cmp
xor
cs
pushf
dec
xor
movb
or
xor
movsb
pushf
mov
insb
roll
outsb
mov
inc
pop
mov
dec
push
call
jmp
pop
mov
or
add
dec
and
ficomps
xchg
inc
jecxz
pop
aad
sbbl
cmp
mov
addl
push
loopne
in
cmp
aad
mov
sub
mov
add
mov
mov
jne
lret
inc
adc
pop
xchg
push
mov
dec
xor
pop
ret
lock
jl
jne
cmpl
scas
jmp
mov
cwtl
adc
popf
jge
pusha
int3
int3
xor
mov
mov
add
sub
stc
pop
xor
mov
lcall
add
addr16
add
je
call
jl
dec
shll
loopne
mov
xchg
sub
cmp
shll
mov
dec
ret
sub
sbb
or
sub
ja
enter
shll
das
out
in
fcompl
xchg
stos
cwtl
addl
shll
lock
lcall
add
add
and
imul
insb
lcall
lcall
add
imul
imul
shll
add
mov
test
mov
incl
xor
mov
ret
jecxz
scas
mov
add
call
pop
in
lahf
insl
mov
cltd
aaa
insl
popa
imul
jl
arpl
outsb
xor
jo
mov
mov
jae
mov
add
sub
sub
inc
out
xor
outsb
jnp
in
rorb
aam
dec
or
jbe
cltd
insb
movaps
sub
imul
mov
imul
in
flds
test
pop
mov
in
mov
xchg
sbb
sub
pop
sub
xacquire
add
ret
nop
and
fs
xchg
jb
and
test
xor
xchg
or
andl
xchg
mov
mov
popa
dec
push
pop
mov
cmpsl
add
mov
sarb
dec
daa
push
pusha
pop
movl
imul
rcrb
add
jp
mov
outsl
add
gs
outsl
sub
push
insb
gs
jg
inc
gs
lods
xor
outsl
fs
dec
popa
outsb
fs
incl
je
popa
insb
pop
xor
and
je
and
mov
inc
sarb
sbb
dec
outsl
inc
dec
imul
popa
jb
xor
mov
imul
jnp
sbb
push
or
jae
pop
push
cmp
fistpl
xor
insb
outsl
jae
add
or
insb
decl
je
jb
jb
mov
dec
jne
sub
pop
inc
gs
movsb
test
gs
fdivs
jge
cs
popa
mov
xlat
add
popa
sti
inc
sbb
add
inc
ret
pusha
mov
outsl
movsb
push
das
add
insb
imul
jne
cmp
cmp
dec
inc
nop
das
popa
inc
stos
push
fcomi
lock
es
bound
and
adc
or
imul
or
imul
push
xor
gs
sub
or
gs
ret
ss
popa
imul
mov
inc
jns
flds
mov
mov
gs
dec
add
mov
mov
ret
push
je
and
pop
and
push
lcall
inc
in
add
push
dec
adc
insb
mov
fistps
imul
push
ret
shlb
cmp
adc
rcrl
add
pop
add
pop
adc
clc
inc
push
dec
inc
dec
stc
aaa
pop
jnp
ja
xor
add
dec
mov
push
insb
or
add
xor
pushf
add
mov
xlat
jns
adc
mov
popa
adc
fdivr
or
aas
xor
inc
pop
push
add
iret
aaa
js
xor
dec
pop
pop
pop
or
in
inc
js
stos
popa
insl
push
or
out
std
mov
mov
mov
lea
mov
mov
stos
daa
outsb
js
mov
js
add
imulb
jae
lret
fnstsw
je
push
gs
cmpsl
cmp
add
sub
fsub
mov
inc
outsl
push
or
adc
out
sti
or
in
or
outsb
pop
lods
adc
jo
addr16
or
jne
mov
cmovge
imul
inc
arpl
or
xor
xchg
punpckhwd
cmp
addr16
mov
dec
aas
iret
pop
jo
sbb
sbb
dec
mov
xchg
mov
xorl
test
xchg
cmp
pop
push
das
push
popa
jbe
rcrl
sub
ret
pop
inc
sbbl
dec
inc
dec
push
dec
push
sti
xchg
or
mov
arpl
and
into
mov
cmp
inc
inc
pop
or
add
add
insb
or
add
mov
cmp
or
bound
fninit
sbb
pop
jbe
mov
sbb
and
sbb
inc
inc
dec
mov
xchg
sar
incl
call
in
lahf
enter
rcrb
frstor
mov
std
dec
pop
arpl
data16
decl
inc
push
fwait
lds
push
xchg
fldl
jnp
inc
xor
dec
mov
int3
xor
xchg
loopne
xchg
mov
pushl
out
adc
jno
or
push
adc
sti
xor
cmp
lahf
icebp
sub
scas
ss
add
orl
and
sarb
in
imul
pop
arpl
ja
ficompl
cmpb
mov
in
sub
jae
add
sbb
add
bound
push
sub
int3
addr16
xor
dec
fmul
pop
add
mov
push
sbb
push
sub
cmpsl
sub
fwait
leave
imul
adc
adc
mov
sub
mov
xor
mov
popa
add
sub
and
push
adc
dec
pop
xor
sbbb
filds
jae
mov
xchg
xchg
push
js
fmuls
imul
mov
xchg
mov
inc
mov
das
mov
mov
mov
jns
fstl
stos
jg
mov
outsb
fidivs
fsubr
xor
out
xchg
cltd
dec
aas
mov
jnp
sub
into
addb
push
pushl
int
hlt
lea
roll
or
mov
shrl
pop
into
dec
fwait
or
pushl
loope
mov
cli
cltd
mov
iret
fwait
push
imulb
jge
adc
mov
imul
jnp
incl
stos
shrl
mov
jns
push
sbb
push
je
mov
test
lock
mov
jae
dec
inc
add
inc
mov
incl
sbb
call
mov
aas
cmc
jl
fldcw
out
push
jnp
xlat
xchg
xchg
inc
repnz
and
enter
sbb
mov
xor
test
xchg
inc
call
out
movsl
dec
pushl
pop
mov
mov
dec
jl
data16
push
add
lds
std
incl
sarl
scas
sbb
ss
pusha
or
pop
mov
pop
mov
dec
pop
pop
mov
call
push
xchg
or
or
jae
fimuls
add
mov
mov
scas
into
dec
test
sbb
xchg
repz
push
rcrb
and
mov
xlat
bnd
push
push
sub
or
rorl
incl
std
les
lcall
decl
add
sbb
sbb
rolb
fsubl
pushl
decl
and
les
hlt
int
inc
inc
leave
movsl
xor
cli
push
pop
jmp
dec
je
pop
shlb
xchg
lret
add
jmp
inc
jns
sti
test
xor
lds
sbb
jmp
xchg
lea
jne
lahf
mov
test
pop
loop
outsl
invd
mov
mov
push
pop
lret
sub
mov
inc
pop
pop
dec
xchg
std
jmp
cmpsl
movsl
inc
jge
pop
jmp
mov
dec
je
mov
xchg
push
shr
and
cmp
dec
dec
fadds
xor
xor
sbb
out
psubq
sti
push
dec
daa
mov
les
lds
in
dec
mov
sub
and
bound
fistpll
pop
jl
jnp
mov
pop
sub
add
add
outsl
fs
fists
pushf
push
shlb
and
sbb
add
ss
mov
add
jbe
mov
push
hlt
add
fsubrs
nop
adc
dec
fs
cmp
sti
sub
scas
mov
hlt
xor
sbb
sarl
or
pop
sbb
daa
call
add
adc
gs
and
insb
test
and
xor
add
xchg
mov
xchg
add
dec
and
xor
add
out
xchg
test
xor
mov
nop
add
sbb
sub
sbb
sub
sub
dec
pop
jmp
adc
inc
add
or
movsl
shll
jbe
push
push
pop
sbb
push
cltd
adc
lods
adc
push
or
cmpsb
push
hlt
or
inc
mov
call
add
adc
adc
mov
lds
push
enter
inc
cmpb
data16
lea
push
sbb
inc
or
pop
or
push
rorb
subl
sbb
adc
adc
mov
scas
insb
and
clc
xor
sub
pop
pop
je
inc
testb
jg
mov
popaw
int3
adc
and
mov
call
inc
int
popa
es
or
outsb
fucomip
pusha
xor
notrack
push
mov
je
jb
fmul
push
lds
addb
or
sub
addl
mov
ret
push
xor
jp
arpl
scas
or
jbe
mov
push
and
dec
mov
mov
add
fmuls
mov
fsubl
pushf
jne
sbb
xchg
cmp
decl
jne
outsl
add
test
jge
not
inc
mov
push
xchg
push
adc
popa
out
je
inc
jbe
fmuls
ret
add
jp
or
add
pop
mov
test
sete
cli
js
jp
and
js
sub
dec
mov
or
mov
pop
push
bound
and
adc
or
inc
mov
aas
jg
mov
ja
mov
dec
dec
mov
cmp
pop
ljmp
or
adc
out
mov
xchg
lock
rol
sub
xchg
push
inc
pop
sub
aas
push
xor
jne
lcall
fs
or
ret
jmp
adc
pcmpeqw
sub
push
push
xor
loopne
mov
fdivl
adc
nop
and
int3
xor
pop
pop
ret
push
aad
mov
and
or
hlt
mov
xchg
xchg
xchg
cmpsb
imul
jo
fisubrl
icebp
imul
mov
lret
cltd
mov
pop
cmc
adc
mov
and
adc
pop
fsubr
pop
pop
and
mov
or
jo
in
xor
aaa
or
and
arpl
mov
adc
mov
test
cwtl
add
push
pop
sbb
mov
and
or
subl
sub
mov
cmpsl
push
call
add
and
pop
add
rcrl
jge
cmp
ja
add
das
inc
mov
ss
inc
mov
dec
or
addb
decl
or
iret
int
inc
ss
into
cld
into
sti
call
stc
cmp
shrb
ret
mov
push
pop
mov
daa
sti
cmp
push
adc
jnp
mov
add
and
imul
lcall
aas
jnp
outsl
pop
fwait
roll
mov
jmp
mov
or
movsb
jecxz
enter
jbe
sbb
pop
nop
xchg
adc
push
push
jmp
sbb
push
cmpsb
dec
push
mov
push
push
xor
call
or
and
incb
mov
mov
lds
cmp
mov
out
xor
andl
sbb
adc
mov
adc
xchg
cld
scas
and
lods
fsts
test
cmp
push
faddl
mov
push
ljmp
mov
ret
mov
push
mov
push
mov
add
out
in
int3
xlat
push
cwtl
or
cmp
sbb
je
outsb
adc
jp
shl
inc
fstp
out
adc
cmp
sub
adc
and
sbb
aaa
sub
or
jle
xor
and
xorb
mov
push
pop
fiaddl
push
pop
dec
sub
fstpl
je
mov
ficompl
xchg
mov
rorb
shll
int3
clc
mov
popf
lods
in
mov
popa
mov
mov
movsb
inc
inc
cmpsl
arpl
mov
push
in
push
sbb
jmp
sbb
and
and
pop
int3
syscall
xchg
adc
mov
push
adc
lods
mov
adc
push
scas
sub
mov
out
dec
xchg
dec
clc
jle
xchg
xchg
or
cld
jge
xor
mov
ds
cs
inc
shlb
fidivrs
xrelease
fcoms
mov
call
sub
add
cmp
inc
out
pop
and
icebp
jmp
cltd
jns
test
mov
add
jne
mov
cmpsb
mov
xchg
cltd
cmp
lea
cmc
inc
sub
bnd
push
rcrl
mov
mov
mov
push
push
imul
lods
imul
sub
call
adc
or
add
inc
in
shlb
inc
mov
mov
aas
dec
mov
ret
mov
pop
add
mov
and
push
nop
das
mov
mov
lods
mov
add
sub
sbb
dec
cmp
xchg
inc
in
mov
sbb
mov
outsl
add
js
rolb
sbb
daa
into
jno
cld
daa
add
clc
call
sbb
sub
and
mov
ror
dec
hlt
sub
push
add
mov
sahf
or
imul
push
mov
push
fsubs
mov
mov
xor
push
cwtl
push
jb
push
mov
push
mov
add
popf
in
inc
fildl
cmpsb
push
sbb
push
mov
push
pop
adc
enter
or
sub
mov
call
or
mov
inc
loopne
push
jmp
dec
and
adc
mov
inc
sbb
or
dec
ficomps
or
ds
cmp
jnp
shl
movsb
insb
xor
ja
jne
push
push
push
insb
push
or
jnp
mov
cmp
add
pop
xchg
xchg
cmp
repz
stos
sahf
rclb
mov
int3
test
add
add
jecxz
pop
mov
mov
fnsave
and
scas
mov
and
push
push
shr
cmp
jmp
and
or
lods
cmp
lods
sbb
inc
push
scas
and
mov
int3
and
inc
insb
pop
sbb
push
mov
mov
push
xchg
add
cld
cmp
pop
ss
lret
or
and
or
pop
xchg
stos
movsb
add
shl
add
mov
xlat
je
push
xchg
jbe
and
fldenv
pop
add
cmp
pop
dec
shll
pop
movsb
add
or
xor
cli
adc
add
cmp
lcall
mov
aam
mov
push
scas
sbb
sub
imul
movl
nop
xor
cld
jmp
xor
out
jnp
and
jo
shlb
rcr
jbe
insb
adc
ret
mov
xor
cmp
jne
add
mov
xchg
adc
test
add
add
outsl
rorl
out
add
or
add
add
add
imul
xchg
addb
inc
adc
and
and
dec
imul
cwtl
inc
stos
popf
jecxz
imul
jbe
sub
fldt
test
and
loopne
clc
mov
imul
push
dec
pop
or
pop
add
push
add
jo
add
les
and
in
popa
bound
addl
xchg
add
mov
outsb
inc
fisubrs
addb
cmp
arpl
push
mov
imul
xor
xchg
push
push
int
mov
or
jae
gs
pop
push
outsl
dec
andl
mov
or
dec
inc
roll
les
icebp
cmp
arpl
stos
add
mov
ljmp
mov
mov
popa
je
sub
fwait
addb
repnz
inc
add
int
sub
and
rolb
jns
jl
cmpsl
rcll
incl
push
xchg
lods
fdivrl
adc
push
aad
out
add
xor
pop
adc
mov
inc
lret
mov
inc
push
xlat
rclb
sbb
jne
daa
cmp
jle
dec
xchg
cmovb
fs
or
sub
cmp
pusha
add
je
add
mov
aas
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
idivb
outsb
mov
jg
cmp
movsl
xlat
ja
mov
mov
dec
jecxz
fdivs
add
pushl
add
mov
in
je
in
sbb
mov
ljmp
jbe
cmpsb
in
ljmp
mov
mov
or
int3
lahf
pusha
into
push
into
pop
xor
cmp
clc
jmp
loope
inc
cwtl
inc
cmc
mov
jno
xor
movsb
out
add
js
add
lcall
or
enter
cmp
mov
shll
push
stos
add
mov
mov
inc
loopne
out
and
push
outsb
test
stos
mov
and
xchg
pushf
or
mov
imul
pop
lret
into
int3
in
in
decl
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
cmova
scas
pop
sbb
clc
idivl
mov
xor
xchg
pop
push
jnp
call
dec
mov
dec
cld
mov
fistl
ss
jmp
movsl
or
loopne
pop
jmp
add
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
jg
fistl
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
cmp
cld
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
and
jnp
cmp
repz
adcl
faddp
in
shrl
bound
jle
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
repz
stos
incl
cltd
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
add
lret
ud0
jg
int
imul
xlat
pop
gs
repnz
sbb
jge
dec
in
lock
inc
cli
and
aam
pop
enter
shlb
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
xbegin
js
enter
jl
faddl
pop
and
push
or
inc
xchg
pushf
insb
or
push
or
add
sbb
sub
jmp
push
push
pop
inc
mov
adc
pushf
shlb
jb
cmove
int
xlat
push
add
mov
mov
add
add
stos
mov
xchg
leave
lods
int
rcl
jne
mov
aaa
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
test
sub
or
cld
jg
cmp
inc
add
mov
lock
repz
sbb
insb
and
loopne
jmp
xor
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
stc
movsb
jmp
repnz
push
in
aaa
xchg
pop
cmp
cs
outsl
dec
sub
das
lret
lcall
push
aad
add
mov
mov
mov
movsl
mov
mov
sub
stc
insl
cmpl
into
xchg
into
adc
jle
fisubrs
mov
mov
leave
mov
pop
fnstsw
decl
or
jecxz
pushf
adc
scas
jb
adc
mov
add
repnz
dec
inc
mov
inc
or
xchg
and
iret
into
add
sti
clc
lcall
and
sub
cmp
push
hlt
adc
sbb
ficompl
pushl
adc
ret
cwtl
jne
stos
sub
mov
jecxz
sahf
lcall
add
xor
jg
insb
lods
arpl
mov
cld
mov
jle
aad
clc
test
inc
mov
mov
sbb
dec
pop
pop
stos
jecxz
mov
mov
xchg
cmc
into
lock
incl
mov
ret
jno
dec
les
lea
cld
mov
pop
mov
fmul
jge
cltd
in
jmp
mov
aam
push
shr
das
adc
test
popa
jg
repnz
add
or
mov
xchg
cs
enter
jo
pushl
inc
insl
mov
ja
xchg
enter
gs
dec
jge
insl
xor
jmp
lods
jge
sbb
dec
inc
jnp
aam
call
stos
mov
and
inc
add
xchg
icebp
and
pushl
cli
add
xor
push
bound
test
add
sarl
insl
mov
sub
inc
stos
enter
xchg
jmp
out
and
jl
cmp
clc
inc
mov
xlat
jge
lcall
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
pop
call
inc
test
jg
subb
jne
mov
addl
cld
ss
jmp
in
insl
pop
stos
insb
mov
adc
sbb
insb
das
ss
jg
aas
xor
mov
out
jns
pop
leave
aas
aad
jg
call
in
mov
lret
push
mov
fisubrs
add
jae
scas
pop
jo
dec
rcll
adcb
loop
sub
bound
adc
mov
rorb
mov
jl
pop
out
sar
or
scas
loope
and
sarl
test
aaa
mov
push
js
insb
or
dec
mov
or
push
cltd
and
loope
mov
adc
push
sub
into
fcomip
jg
sub
dec
test
mov
dec
add
and
push
cmc
add
outsl
into
imul
pop
pop
dec
incl
cmp
icebp
xor
dec
ja
into
jb
xor
pop
jo
jecxz
mov
push
ror
mov
cli
sub
sti
lret
and
push
ret
mov
mov
call
das
inc
sub
or
adc
scas
out
or
das
stc
mov
mov
mov
or
jl
loope
aam
into
ret
mov
mov
ret
xchg
cli
mov
dec
and
decl
mov
test
iret
pop
xor
pusha
hlt
pop
mov
xchg
or
push
and
aam
jg
pop
pop
ret
or
adc
test
xchg
into
movsl
add
shl
inc
pop
jmp
out
repz
mov
scas
lret
xchg
cmp
loop
sar
sbb
dec
ljmp
arpl
outsl
mov
sarb
loope
enter
and
lea
sti
pop
vmwrite
int3
cmp
stc
out
mov
and
aam
push
lret
insl
out
outsl
ljmp
test
push
or
dec
add
sub
inc
push
jo
scas
adc
loope
movsl
jb
into
jp
ret
push
adc
sbb
dec
stos
in
jg
dec
int3
inc
ljmp
stos
lock
decl
xlat
jo
sub
sbb
push
daa
or
sub
xchg
adc
clc
or
aas
add
test
jecxz
jne
mov
adc
clc
pop
push
and
xchg
xchg
stos
jle
mov
adc
fucomip
call
sbb
hlt
and
pop
add
iret
cld
ret
arpl
das
cmpb
call
dec
and
gs
adc
mov
cs
inc
mov
cmp
mov
xrelease
xor
stos
das
push
lret
ds
jmp
sbbb
jae
mov
sarb
push
mov
ret
jns
lcall
jmp
iret
cmp
dec
mov
repz
addr16
jmp
add
add
out
xchg
adc
iret
daa
ret
dec
das
jge
jg
mov
pop
jne
mov
add
mov
dec
cmp
int
scas
repnz
into
fidivrs
call
in
jg
insb
and
xor
push
stc
add
push
mov
or
test
repnz
jg
jg
rcll
into
and
iret
push
sub
push
inc
xchg
test
push
xchg
popf
xchg
stos
push
sub
fstps
lret
fwait
in
add
or
lcall
jecxz
outsb
cmp
movsl
and
mov
push
enter
rolb
mov
into
sbb
mov
mov
xlat
jb
pop
mov
cmp
lods
outsl
xchg
sub
xor
cs
es
lods
inc
test
or
or
incl
add
call
movsl
popf
popa
ret
fistpll
sbb
and
outsb
mov
mov
mov
popf
pop
adc
cmpsb
jne
lahf
rcl
push
mov
adc
js
fadd
imul
rcll
popa
imul
xchg
in
xor
mov
push
sbb
popf
in
jle
fisubs
sbb
imul
addl
mov
add
fiaddl
jg
adc
inc
arpl
jg
and
ret
aas
push
jb
cmpsl
loopne
mov
jns
in
add
call
insl
aam
push
int3
fisubrs
adc
cmpsl
xchg
sbb
xchg
cltd
popa
or
loop
dec
ljmp
loop
aam
mov
js
add
dec
pusha
mov
cmp
data16
or
scas
pop
std
jno
jnp
and
xchg
movsl
inc
jmp
mov
mov
cmp
rorl
push
sbb
mov
out
pop
and
or
and
mulb
fadd
adc
stos
and
sub
out
jne
or
add
jbe
adc
pop
imul
cs
push
or
adc
and
das
lock
das
and
add
into
pop
jne
jne
rorb
call
ror
test
pop
mov
xor
das
notl
inc
out
mov
aad
mov
outsl
sub
incl
mov
fcompl
outsl
xchg
xor
icebp
mov
ret
ret
lcall
sbb
icebp
mov
mov
mov
ret
ja
mov
push
add
sbb
rcrb
sub
xor
and
in
pop
in
jne
in
sub
shlb
loop
sub
mov
les
cmp
out
add
push
loope
outsl
and
push
mov
stos
lods
test
sbb
and
pop
pop
sbb
rorb
aaa
jg
inc
lock
xlat
xchg
addr16
sarb
rolb
stc
out
dec
lret
and
push
mov
pushf
mov
mov
dec
dec
cltd
and
aam
push
leave
popf
shrl
pop
loop
jg
pushf
mov
test
int
and
dec
clc
add
add
sar
aaa
inc
movsl
hlt
jne
mov
call
adc
inc
pushf
test
cmc
fdivr
call
or
stc
sub
push
mov
pusha
jmp
decl
xchg
pop
ret
jne
or
cmp
mov
mov
lods
shl
fsubrl
clc
pusha
push
arpl
dec
out
mov
and
mov
cld
ffreep
fwait
xchg
lods
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
shlb
mov
inc
nop
add
pushf
xchg
sub
inc
sbb
rorb
xchg
pop
jp
sbb
cmp
cmp
xchg
fnstcw
cltd
cld
mov
sub
std
mov
outsb
add
dec
mov
loopne
call
lea
iret
mov
inc
in
xchg
mov
inc
loop
mov
dec
push
adc
xor
lcall
push
xor
pop
clc
shll
popa
mov
mov
pop
nop
pop
jo
out
in
mov
sbb
jmp
mov
lcall
add
mov
push
xchg
scas
xor
clc
decl
pop
sub
bound
jle
aad
test
popa
sbb
sbb
cmpsl
pusha
xchg
je
push
cmp
pop
into
clc
mov
mov
mov
ret
jbe
outsl
ffree
clc
or
and
push
pop
pop
ret
loop
pop
pop
push
jo
jno
add
and
aam
das
mov
mov
ss
test
add
cli
pop
xchg
clc
add
dec
je
aam
xchg
stos
push
in
aad
lock
inc
jno
sarl
inc
push
add
add
or
sub
xor
xor
xor
add
xchg
pushl
aam
sahf
xor
xor
fdivs
sbb
xor
xor
dec
cld
testb
xor
add
xor
lcall
ja
push
imul
push
ss
imul
jge
test
mov
fstpt
mov
into
ss
add
aaa
push
aaa
pop
pushl
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
shll
fdivl
add
or
sbb
inc
cmp
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
sbb
aas
cmp
incl
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
cmp
adc
cmp
xor
cmp
pop
cmp
call
cmp
mov
mov
mov
fists
cmp
cld
cmp
pop
ds
gs
mov
ds
or
test
push
xor
add
add
add
call
mov
dec
gs
sti
enter
je
insb
insb
filds
or
push
sbbb
or
inc
nop
add
or
add
notl
and
pusha
add
or
add
inc
rolb
add
nop
pop
pusha
xchg
and
and
push
enter
and
ret
inc
fsts
add
fsubs
test
cmp
and
add
add
and
insb
mov
rorb
adc
pop
or
inc
push
and
incl
dec
pop
add
and
out
dec
ds
add
and
add
test
inc
xchg
lea
pop
shlb
sbbb
daa
mov
add
dec
push
or
ret
mov
pop
and
out
add
xchg
std
adc
xor
push
push
inc
mov
add
add
pushl
inc
and
add
jae
push
inc
jb
push
and
ja
clc
imul
sti
or
push
addr16
xor
push
or
jae
and
nop
dec
dec
inc
inc
nop
jl
xor
jae
mov
push
xor
lret
incl
lods
cmp
movsb
mov
fidivl
in
lods
mov
mov
adc
mov
mov
jbe
aas
movsb
mov
or
decl
push
popa
imul
lds
mov
mov
stos
insb
repnz
jb
adc
and
subb
xor
pop
pop
push
dec
push
push
pop
inc
decb
dec
inc
pop
inc
inc
jecxz
mov
mov
lcall
decl
rcl
int
orl
lock
mov
fisttpll
pushl
int
cld
ss
add
xor
xor
inc
dec
add
inc
push
pop
clc
or
jb
adc
mov
insl
lahf
add
sbb
cli
jg
push
inc
add
mov
daa
pop
fists
mov
decl
mov
xlat
out
fldl
addr16
in
shlb
cmpxchg
pop
sbb
add
mov
ljmp
pop
sbb
in
lret
roll
xor
cltd
stos
pop
xchg
or
faddl
add
inc
and
incb
fldcw
sub
incb
daa
xlat
or
aaa
cmp
inc
sbb
aam
aas
adc
jae
out
in
notb
fwait
mov
mov
mov
arpl
loope
std
fidivrs
pop
jnp
or
sarl
jnp
mov
fcom
outsl
mov
pop
fistps
sbb
imul
mov
jnp
stos
stos
jmp
fidivrs
roll
mov
xchg
jnp
inc
push
popa
int
ret
fsubp
mov
sub
cmp
lahf
maskmovq
or
pop
mov
dec
ret
iret
setnp
fsubrp
sbb
mov
mov
aaa
jnp
ret
ja
aam
daa
sti
lock
fstl
mov
ljmp
rcll
das
or
setp
sbb
dec
mov
mov
sub
pop
movsbl
fidivrs
fwait
add
xchg
pop
jo
idivb
pop
jnp
daa
xlat
psubb
mov
roll
lret
fbstp
vmptrld
iret
ret
outsl
push
sub
push
fdivr
xchg
lret
cmp
fcomip
fildll
ficoml
mov
sarl
mov
lret
das
adc
movq
ret
xchg
scas
psadbw
ljmp
fsubrp
xorb
ficompl
mov
mov
daa
xlat
inc
paddsb
cmp
sub
gs
lret
adc
cli
sbb
ja
mov
mov
sub
lock
mov
outsl
mov
add
add
mov
push
sti
test
sub
aad
shr
mov
fcomps
lcall
call
sti
cmp
sub
shl
and
or
sub
sub
incl
pop
rcl
pop
mov
mov
incl
cmc
dec
pusha
pop
shlb
insb
mov
rorb
ljmp
testl
dec
fdivp
fsubrp
arpl
inc
std
in
mov
stc
jnp
add
cmc
shlb
icebp
add
mov
add
insb
push
jmp
pop
or
push
mov
add
pop
add
pop
cmp
xor
mov
and
adcl
mov
add
stc
ss
out
cmp
xchg
add
hlt
xchg
faddp
inc
les
iret
mov
xchg
add
fdivl
and
mov
int
adc
xor
jle
cli
and
push
or
rcll
jne
fmul
cmpsb
ja
aam
aas
fdivrs
cli
pushf
dec
es
sbb
stc
xor
push
testl
sbb
imul
imul
clc
add
and
xlat
pop
push
push
shr
jnp
mov
add
pop
adc
call
mov
outsl
mov
jae
ja
fimuls
jmp
inc
add
mov
divl
call
or
or
sbb
push
inc
aas
push
adc
popf
clc
pushl
repnz
arpl
sahf
and
jle
sbb
arpl
shrl
jge
inc
adc
lods
in
xchg
movsl
outsl
pop
fnstsw
ljmp
xor
xchg
add
loopne
mov
push
mov
insw
xchg
ds
cmp
and
dec
mov
sbb
fildll
pushl
sbb
int
sbb
sti
push
movb
sub
fbld
sub
adc
jg
call
into
push
mov
mov
out
sub
jmp
fsubrs
incl
jge
jbe
add
jno
mov
jge
inc
mov
and
add
jmp
xor
mov
frndint
or
mov
scas
dec
mov
divb
in
pop
lods
stc
pop
jmp
sub
mov
cli
xchg
lret
mov
jbe
xchg
push
in
add
jb
xchg
decl
pop
repz
popa
add
lcall
push
mov
mov
subl
adc
mov
adc
push
je
adc
not
xchg
adc
push
rol
loop
ljmp
shlb
or
lock
insb
xchg
pop
push
jbe
sbb
iret
decb
sbb
add
lcall
or
inc
call
cli
or
mov
lret
dec
and
neg
jmp
pop
pop
fsubrs
lret
pop
lods
ljmp
sub
add
push
out
mov
push
outsb
loop
jb
andb
insb
pop
out
ret
mov
in
ja
adc
add
fisttps
lds
aaa
or
mov
stos
stos
pop
xchg
ja
xchg
test
bts
pushf
xor
daa
cld
arpl
pop
or
mov
movl
jmp
inc
scas
xor
pop
call
out
sub
xor
imul
mov
idiv
dec
shr
add
rcr
rol
or
cmp
ljmp
push
dec
les
add
jge
push
cmp
jmp
fildl
push
xor
push
mov
sub
addr16
push
adc
insb
sub
into
clc
das
sbb
sbb
mov
je
xlat
mov
pop
sub
ret
in
add
insl
mov
fisubrs
pop
or
pop
pushf
call
ljmp
xchg
mov
filds
push
push
push
les
and
les
mov
test
mov
sbb
popa
xchg
pop
cmc
pushf
pop
push
inc
test
sbb
mov
inc
jnp
cmc
add
repz
clc
adc
jg
stc
in
pop
xor
insl
call
adc
push
xchg
pushf
xchg
mov
outsl
mov
sub
adc
cmc
or
ret
ret
xchg
adc
shl
decl
xchg
inc
lcall
jo
pusha
pop
push
push
mov
test
cmp
or
push
xor
pop
jne
mov
adc
jbe
test
sbb
jbe
bound
mov
or
push
and
sub
lock
cs
dec
push
pushf
sub
mov
jo
icebp
ss
sub
out
push
jo
divl
mov
loope
xchg
mov
mov
sub
out
sbb
cmpsb
mov
push
jmp
fldl
jb
cmp
mov
jmp
jo
xorb
jmp
cli
ja
inc
cmpsb
pop
or
pop
rcl
sti
sti
push
test
pop
repnz
stc
sbb
pop
jecxz
pushf
addr16
leave
lock
incl
ja
std
dec
push
cld
cltd
push
sbb
cmpsb
clc
in
aam
clc
add
daa
mov
add
loopne
mov
mov
adc
pop
mov
pop
inc
push
push
inc
mov
sub
xorl
nop
xor
ss
xchg
add
lcall
in
lret
dec
das
shrb
cmp
aas
out
in
and
loopne
or
xor
lods
mov
pusha
lret
std
rcll
xchg
into
ret
xor
sbb
dec
aas
jge
jmp
enter
rorl
mov
xor
add
mov
sbb
or
cli
add
sbb
fisubrl
out
sub
fistpl
sub
inc
xor
clc
pusha
push
movups
cmpsb
mov
jmp
jo
push
and
lret
setl
lods
hlt
pop
push
xor
sti
je
push
loope
push
outsb
mov
and
fsubr
pop
popf
leave
loop
scas
dec
int
jecxz
cmp
inc
je
aad
inc
push
call
mov
lds
or
js
sbb
or
adc
push
inc
call
mov
mov
add
pop
out
ror
fwait
leave
pop
filds
inc
rcl
imul
xchg
popa
adcb
sbb
outsl
aaa
mov
ret
insb
and
xchg
lods
jmp
sub
xchg
mov
add
cwtl
shll
ljmp
jne
or
outsb
stos
push
jns
cs
adc
insl
cmp
jmp
out
add
ds
mov
inc
push
fistpl
in
xchg
push
xchg
pop
lock
and
ret
pop
popa
xor
or
cwtl
scas
es
cmp
adc
add
ljmp
push
sbb
xchg
mov
jg
push
and
jl
mov
add
inc
sbbl
arpl
xlat
sbb
cmp
shlb
lcall
test
mov
test
pushf
rclb
pop
mov
mov
daa
push
aaa
das
pop
mov
jecxz
lea
rcrb
mov
call
jbe
stc
clc
psubb
movsb
inc
shr
add
repnz
push
ja
or
cmc
mov
outsl
inc
test
push
and
push
pusha
aaa
sahf
add
sub
xchg
cmp
pop
add
pop
call
adc
ret
mov
clc
pop
push
sbb
adc
std
and
mov
pusha
dec
sub
aam
int3
mov
in
mov
pushw
push
mov
int
ds
adc
call
loopne
sub
adc
imul
push
dec
sbb
in
sub
jno
popf
push
adc
add
dec
add
push
loopne
ja
jbe
pop
sti
add
call
sub
hlt
sbb
cmpsb
pusha
rep
adc
pop
stc
cmc
mov
push
fsubrp
mov
sets
lcall
jmp
in
fcoml
jbe
add
add
decl
loopne
scas
jmp
or
ja
cwtl
cmp
call
out
insb
jo
mov
pop
in
or
cmc
ja
fidivs
xor
ret
jmp
lret
out
mov
dec
lahf
mov
shl
sub
push
add
mov
adc
into
push
fsubr
test
push
sbb
cmp
cmc
test
add
lahf
jo
and
push
shrl
mov
movsl
xor
push
jbe
cmp
sbb
test
and
bound
or
cmp
inc
cmp
add
movl
adc
push
cs
mov
ret
int
sub
insl
repnz
scas
cmc
mov
popf
mov
push
and
aaa
pop
ljmp
ret
nop
icebp
das
push
hlt
cmp
push
js
loope
jl
clc
test
es
clc
and
call
loope
aam
test
jle
and
jns
xor
add
seta
imulb
add
cld
movb
adc
dec
enter
test
push
mov
in
jo
adc
jecxz
and
push
sbb
cmp
mov
dec
and
mov
adc
sbb
jb
push
and
ret
cld
cmp
mov
adc
call
pusha
cmp
movd
jg
mov
push
adc
dec
frstor
add
adc
rolb
pushf
jmp
call
call
mov
lods
and
jmp
imulb
ficoms
push
pop
pop
adc
hlt
aaa
push
not
xor
rcl
push
mov
push
pop
hlt
cmp
shr
jmp
dec
push
ds
js
jle
push
push
stos
dec
addr16
adc
xor
scas
imul
mov
insb
dec
shl
pop
cmp
sub
movb
outsl
push
adc
push
int
jmp
and
shl
mov
xor
data16
push
cli
cmp
loope
xlat
inc
xor
shrl
addb
and
and
sub
add
or
divb
fucomp
mov
test
mov
cwtl
pusha
std
enter
or
push
outsb
and
out
fcoml
xor
and
lds
sbb
jecxz
aas
mov
pusha
and
add
ja
or
test
leave
xor
rorl
jecxz
ja
fisttpl
and
lods
je
fsubr
insl
out
jg
aad
push
dec
add
pop
jnp
cli
test
push
cmp
and
jge
orb
pop
inc
ret
shrb
xchg
xor
fisubrs
fdivr
shl
arpl
repz
xor
cmp
jo
sbb
pop
neg
sbb
cmc
sahf
ret
mov
and
data16
adc
aam
je
and
cld
xchg
test
jmp
mov
arpl
arpl
rcrl
outsl
add
in
xchg
scas
int3
scas
addb
jle
ret
rolb
xadd
cmc
test
dec
xor
adc
aad
clc
pop
lret
cmp
shr
lods
adc
bound
shr
sub
adc
xchg
jmp
and
popf
mov
mov
xchg
mov
fisubl
daa
sub
scas
call
in
xchg
fidivl
out
testb
jo
push
mov
repz
xchg
aam
call
loope
pusha
sti
cmp
mov
inc
cld
fiadds
lret
test
data16
inc
push
out
iret
or
mov
xor
rorl
test
pop
jg
lods
fimull
ret
hlt
pop
xor
clc
mov
sub
or
push
add
or
dec
decb
fwait
lds
cmp
mov
push
inc
mov
into
test
pop
test
inc
popa
cmp
inc
imul
jbe
cmc
clc
jae
inc
mov
xor
popf
loopne
std
or
or
jno
lret
mov
xor
xchg
cmp
dec
mov
outsl
out
fstpl
lcall
leave
push
test
mov
fadds
cmpsl
cmc
push
dec
mov
out
enter
cmp
clc
stos
test
push
xchg
test
jno
test
popf
mov
cmpb
push
and
dec
out
out
jl
pusha
push
and
in
insb
adc
adc
push
jnp
add
jo
jo
mov
inc
jp
out
xor
push
or
ljmp
mov
shr
adc
cmp
pop
jmp
in
xchg
xor
xchg
out
push
stc
fdiv
mov
pop
scas
and
dec
and
jbe
xchg
imul
lcall
or
mov
push
lods
arpl
fadds
aad
xchg
jne
shlb
push
fwait
loope
xchg
orb
iret
inc
daa
pop
or
inc
clc
bound
clc
cmp
cmc
es
xchg
and
fptan
dec
lea
adc
popa
subb
and
cmp
adc
inc
inc
add
push
or
jle
xlat
leave
jmp
adc
js
cmp
mov
jg
hlt
cmc
jbe
push
das
out
lea
inc
mov
insb
push
in
nop
les
movl
push
loopne
ret
imul
xor
inc
add
cltd
daa
or
push
mov
pop
inc
rcl
out
aaa
cld
inc
es
test
aaa
call
ja
mov
sbb
push
ljmp
aam
cmp
out
call
add
lods
les
inc
sbb
add
push
insl
dec
into
adc
adc
push
imul
fldenv
cwtl
loope
movsl
jnp
ds
loopne
cmp
mov
add
push
pop
xchg
notl
adcb
mov
lahf
dec
in
add
ja
or
scas
lock
pop
ljmp
in
cmp
sti
das
mov
pop
test
popf
rdtsc
sets
call
adc
inc
clc
dec
stc
xchg
clc
push
ja
testl
pop
int3
pop
xor
push
jbe
sahf
ror
cwtl
pusha
cmc
sub
add
pop
cmp
or
shl
xchg
pushl
or
ja
xchg
push
ss
mov
push
mov
test
loop
jecxz
mov
jmp
mov
pop
push
dec
enter
fsubrl
pop
mov
repnz
or
ja
pop
mov
push
add
fstpt
inc
shr
loop
jmp
add
xchg
jmp
rcr
scas
jmp
clc
sbb
add
cmp
mov
pop
sbb
inc
and
jo
rol
add
popf
iret
std
or
xlat
hlt
mov
pop
inc
xchg
loope
push
xor
insl
jg
je
lock
adc
pop
mov
ret
xor
mov
xchg
das
movsb
pop
add
cmp
loop
stos
gs
sub
jb
aam
fiadds
shlb
hlt
lock
lea
mov
xor
push
sbb
xor
out
mov
or
fisubs
adc
in
icebp
fildl
and
in
mov
push
fucomip
mov
ret
in
jbe
push
mov
out
mov
ret
jmp
push
add
rolb
adc
jo
out
and
loop
scas
pop
pop
pop
cmp
mov
mov
pop
fists
aaa
cmp
cwtl
xor
xchg
ret
or
fstpl
lods
sbb
stc
dec
ljmp
addb
cs
jmp
or
push
or
push
sbb
jo
js
popf
xchg
lret
and
sub
imul
pushf
xchg
pop
xor
inc
addr16
cwtl
ficompl
inc
inc
sti
inc
and
xchg
ja
cmp
pusha
call
jnp
push
arpl
mov
push
cld
mov
push
sbb
iret
test
ja
addr16
inc
stc
fists
pop
loopne
in
in
std
out
adc
mov
stc
shl
cmp
and
push
mov
fstpl
sub
inc
dec
sahf
clc
lds
cmpsb
pop
outsb
jmp
cs
add
sbb
mov
movsl
pop
or
inc
jp
mov
add
sbb
rcr
std
das
shrb
in
adc
movsl
jmp
sbb
push
test
bound
cld
cmp
sbb
jno
mov
addr16
mov
jmp
push
jle
stos
call
sub
les
rorl
pop
sbb
jmp
jl
sbb
cmp
cmp
cmp
sbb
sbb
or
jae
push
pop
jl
ljmp
cld
das
pushf
jg
dec
pop
pushf
loope
xchg
push
adc
mov
push
into
sub
fistpl
cwtl
ficomps
push
jecxz
dec
ds
cwtl
in
pop
pop
xor
decl
mov
push
jg
cmp
fstl
iret
sub
push
cmpsb
aaa
andb
sub
dec
lock
cmp
mov
lods
es
hlt
mov
pop
in
inc
add
push
stos
xchg
ret
push
add
std
lock
pop
sub
lock
xlat
enter
cmp
jmp
frstor
stc
rcrl
fcmovbe
sub
push
sub
dec
rorl
adc
bound
loopne
adc
add
fucomi
sub
nop
mov
enter
rol
pop
pusha
cmp
mov
push
push
jp
sbb
nop
test
or
movsl
pop
jp
into
xchg
or
rolb
sbb
rcll
and
mov
shr
stos
push
decb
xchg
push
cmc
fucomip
and
push
sbb
mov
pusha
call
xchg
mov
pusha
add
mov
ja
jge
loope
dec
mov
push
aam
mov
jl
sbb
xchg
frstor
pop
xchg
ss
and
push
scas
push
mov
call
sti
and
punpckhwd
push
sub
loope
inc
test
lea
icebp
in
imul
dec
dec
stc
mov
push
cmp
pop
shl
or
idivl
or
stc
jmp
out
add
add
in
dec
lret
es
jae
add
push
sub
test
dec
icebp
or
cmc
fs
call
cmp
sbb
sub
call
mov
cmp
mov
jle
inc
orl
cmp
cltd
jmp
das
orb
into
call
and
jg
loop
add
cmp
pop
mov
andl
mov
test
incl
je
push
mov
mov
outsb
adc
pop
es
mov
in
mov
jmp
cs
push
mull
add
sub
jmp
jmp
jmp
fdivp
repnz
orb
add
out
inc
or
xchg
sti
mov
addr16
jl
and
pop
pop
sbb
pop
pop
outsb
mov
pop
paddsb
jge
and
adc
inc
pop
pop
dec
mov
cmpsb
jno
gs
call
call
aam
fisttps
test
mov
adc
sub
out
adc
jbe
xor
mov
mov
sub
or
xchg
ret
call
pop
insl
sbb
or
call
addb
jg
mov
dec
sub
or
stc
push
push
pusha
mov
clc
divl
jne
cli
sbb
pop
out
lock
sbb
cmp
daa
loop
in
sbb
sbb
xor
pop
mov
outsb
lret
outsb
mov
ss
adc
adc
xor
aas
jmp
add
push
or
mov
inc
or
mov
jge
push
jns
inc
jecxz
jo
jns
push
inc
mov
lcall
add
pushf
xor
or
shll
sbb
call
push
jl
popa
pop
sub
lret
sub
cmp
pop
inc
das
test
fstpl
xchg
xchg
adc
sbb
mov
jl
rorl
ffreep
pusha
mov
decl
outsl
inc
dec
ret
pop
xor
aam
jne
shlb
adc
lods
int
and
cmpsb
out
xchg
cltd
add
mov
aaa
aaa
mov
mov
call
repz
pop
int3
sub
fisttpl
loopne
scas
sbb
xchg
out
arpl
and
add
or
sbb
lods
mov
push
and
xchg
out
andl
insl
inc
adc
pop
ljmp
clc
add
xor
xor
push
imul
pushf
pushf
inc
fistps
negl
adc
push
setb
cli
pushf
mov
push
push
or
jmp
inc
push
pop
inc
test
sbb
aas
add
call
jnp
or
sub
movsl
mov
mov
std
daa
push
call
out
or
pop
mov
insb
push
jnp
or
daa
jmp
mov
adc
imul
pushf
push
xor
add
cmp
sbb
mov
dec
mov
jp
andb
jle
push
clc
loop
jno
add
lahf
sti
fwait
gs
call
pop
addl
pop
inc
loop
dec
outsb
fprem
push
push
jmp
xlat
adc
xchg
pushl
adc
pop
mov
mov
lock
cli
push
lcall
arpl
hlt
jmp
xchg
dec
sub
sbb
insb
aad
test
out
adc
dec
aas
fs
sti
cmp
orl
insb
pop
ljmp
mov
and
pop
leave
xor
adc
aam
daa
or
and
push
call
ret
lods
fwait
testb
dec
or
xor
xor
sub
lea
adc
fisubrl
loop
mov
pop
or
loop
lea
pushf
push
test
and
push
push
push
mov
jmp
pusha
sub
pop
das
popf
sub
xor
mov
jns
hlt
test
fstps
cmp
cli
test
dec
loope
dec
xor
jnp
fildll
loopne
xor
decl
int
jbe
mov
scas
push
lock
add
mov
dec
aad
add
xor
jne
movsb
inc
or
sahf
xchg
lods
icebp
push
pop
push
addl
aad
add
cmp
sbb
scas
lock
lcall
rorb
fisubrl
pop
cli
add
xchg
sbb
call
cmp
push
adc
call
jmp
fs
and
lods
enter
insb
into
ljmp
lea
xchg
out
gs
mov
mov
mov
cmc
push
or
cld
push
xadd
push
add
mov
rcrl
loop
mov
mov
lock
cmc
jo
sub
jo
inc
subb
stos
fdivp
add
in
loope
jno
aad
aam
mov
fstl
sub
stc
cmp
lcall
xchg
push
fnstsw
ficomps
pop
cmpl
cmc
add
jmp
aas
fists
out
lds
frstor
ljmp
cmp
cli
sbbl
or
popa
outsb
ret
add
or
add
add
cwtl
loopne
dec
or
and
and
mov
inc
shr
mov
hlt
sbb
out
pop
in
std
inc
jmp
xchg
repz
cwtl
cmp
mov
xchg
adcb
mov
fmuls
loop
push
jne
cmp
negb
icebp
pop
xor
test
shll
mov
sub
call
xlat
std
call
pop
cwtl
scas
fsubr
outsb
mov
xchg
add
mov
into
or
or
pusha
jecxz
into
lahf
movb
mov
lahf
inc
paddusw
cmc
das
sbb
aaa
sub
sbb
cmc
pop
xor
add
lods
leave
cs
cli
les
push
cmp
inc
test
out
inc
dec
call
cmpsl
es
sarl
dec
cmp
addb
push
push
add
ja
call
les
cmp
call
pushf
xor
divl
mov
jno
insb
stos
adc
sbb
push
lods
ljmp
adc
ljmp
inc
mov
xor
push
mov
pop
sbb
push
xchg
xor
bswap
push
fidivs
jns
cs
in
cmp
mov
loopne
mov
cmpsb
jmp
mov
cmpsb
imul
dec
clc
push
inc
ds
test
adc
nop
loopne
and
cmp
and
adc
pop
out
cld
sar
mov
dec
rol
pop
pusha
test
pop
or
or
test
pop
icebp
aaa
adc
les
pop
jbe
je,pt
fcoms
std
adc
jmp
rorl
jmp
jns
dec
dec
pop
xchg
xchg
jo
xchg
pusha
ret
or
add
stc
lods
push
ljmp
jae
jecxz
push
mov
xchg
xchg
popa
jmp
mov
jmp
cmc
ret
jmp
add
lds
add
pushf
nop
dec
mull
mov
ds
cltd
gs
xlat
jno
clc
xor
dec
push
mov
and
jbe
lock
mov
jle
or
inc
adc
mov
andb
jo
fmuls
outsl
xchg
push
cmpsb
das
ret
test
fistl
in
pushf
sub
push
test
add
ljmp
call
shlb
loope
shl
inc
not
push
mov
pop
pop
inc
dec
in
faddl
test
inc
mov
sub
clc
outsb
jge
push
push
or
movsb
push
inc
roll
test
dec
stc
sbb
jge
les
cs
decl
sub
cmp
cmp
andb
cmp
xchg
test
loopne
data16
add
outsb
gs
or
stos
cmc
test
ljmp
adc
or
cmp
test
cmc
movb
mov
sub
stc
cmp
lds
lret
sub
imul
std
cld
sub
cmp
pop
nop
js
xor
mov
sub
jnp
adc
popl
cmpsl
nop
arpl
fdivr
jb
and
pop
dec
push
mov
inc
add
je
mov
clc
scas
push
movsb
pop
orb
or
movsb
aam
stos
pop
subb
xchg
xchg
or
jecxz
cli
cmp
jns
push
jmp
jbe
add
xor
nop
and
cli
push
mov
add
fsubr
test
gs
fwait
mov
xor
pop
adc
jno
add
dec
xor
add
dec
push
stos
les
out
pop
mov
and
std
push
pusha
push
jmp
jb
pop
stos
sub
stos
pushf
stos
test
push
adc
loop
mov
xchg
mov
push
push
cmp
lods
pusha
dec
pop
test
push
pop
jmp
inc
adc
loopne
test
out
sub
dec
fidivrs
adc
adc
inc
jmp
lock
dec
push
adc
xor
and
mov
cmp
mov
cmp
mov
or
call
or
insl
mov
sub
jmp
cmp
pop
mov
fiadds
or
mov
xor
pop
or
mov
pop
xchg
sub
pushf
addr16
call
push
add
repnz
pushf
pushf
orb
pop
mov
insl
inc
xchg
jne
lcall
mov
mov
mov
dec
mov
jmp
or
enter
or
fstps
stos
xor
xor
jge
sti
cmpsb
cmp
sub
stc
rolb
mov
movsl
sub
mov
inc
ret
imul
pushf
faddl
data16
xor
ret
cmp
ret
nop
cmp
xchg
in
sub
add
pop
and
sub
icebp
aad
dec
popf
in
ljmp
mov
cli
and
test
pop
mov
mov
hlt
loop
out
out
pop
test
mov
and
jl
cmp
int3
dec
mov
shlb
lock
dec
sbb
loop
push
std
bound
mov
fs
icebp
iret
sbb
dec
nop
inc
jbe
hlt
pop
pop
cmp
jmp
add
adc
or
sbb
sahf
inc
push
leave
or
bnd
mov
jnp
fisubs
cmc
std
sub
into
and
jl
lea
icebp
js
or
dec
cmp
imul
fiaddl
fwait
mov
push
xor
xor
pop
pop
or
jns
add
fcmovnu
test
dec
dec
sarl
lds
dec
add
lods
mov
lea
popf
jne
test
pop
add
movsl
enter
das
cmc
call
ss
xchg
pushf
jno
mov
cmp
mov
divl
mov
jle
sub
dec
test
push
sbb
xchg
jnp
cmp
jmp
jo
jbe
xchg
inc
mov
inc
sub
sti
mov
aad
push
outsl
fistpll
into
aas
imul
push
cmpsb
mov
dec
lock
jo
mov
lods
test
stos
xor
shrl
push
pop
out
jo
adc
hlt
fcoml
push
push
push
sub
xchg
inc
add
in
clc
call
jmp
mov
dec
mov
pop
mov
outsl
loopne
xchg
xchg
je
call
mov
nop
mov
xchg
xlat
cwtl
fcmovbe
mov
fmul
adc
adc
mov
repnz
out
jmp
ljmp
sbb
scas
pop
mov
mov
stc
subb
pop
dec
mov
inc
jmp
das
mov
adc
mov
ja
add
sub
nop
fdivr
jmp
pop
jno
push
mov
jne
sti
pop
shll
aam
xchg
js
cmp
decb
jl
mov
pushl
sub
pop
jl
cmpb
imul
rcrl
mov
push
push
add
dec
mov
adc
cmp
jg
xchg
adc
jecxz
lock
jo
mov
and
mov
mov
add
sti
gs
cmp
inc
mov
movsl
jmp
pop
cwtl
sti
ret
add
sbb
add
into
testl
pop
mov
call
pop
inc
xor
test
call
cli
push
aad
call
jo
aaa
jo
into
inc
or
es
les
sub
add
sbb
inc
movsl
dec
push
lods
clc
adc
sub
jmp
stos
scas
and
ljmp
jle
push
sub
sahf
dec
push
hlt
arpl
fsubs
lea
pop
or
loopne
jmp
lock
mov
add
movsb
push
sub
call
cmpsl
cmp
aas
pusha
pusha
lods
push
push
xchg
adc
and
sub
mov
loope
pushf
inc
push
inc
add
mov
xor
push
mov
push
cmp
clc
leave
ficomps
pop
ljmp
cmp
sahf
mov
cmp
test
sarb
adc
into
stos
jmp
insb
lret
cmpsb
or
add
xchg
or
cmp
or
pop
sub
hlt
jno
push
call
shlb
sti
stos
push
call
inc
fwait
xor
push
std
mov
std
std
dec
cmp
or
out
popa
mov
mov
pop
add
push
mov
mov
pop
push
inc
je,pn
add
test
xchg
jp
mov
fists
pushf
push
enter
insb
rolb
add
iret
pop
pop
mov
fildll
cmp
pushf
rclb
cmp
jmp
sti
call
pop
jg
add
pop
clc
stc
cmpl
and
ret
pop
push
push
or
mov
push
ja
mov
add
loop
sub
pop
aam
mov
add
mov
cmp
pop
push
ret
daa
sub
inc
call
adc
push
pop
addl
cld
pop
gs
push
inc
lock
ss
mov
call
cs
adc
mov
mov
cmc
mov
mov
and
sub
xchg
call
fsubrl
inc
test
add
test
mov
aam
in
mov
or
cmp
call
cmp
cmpsl
mov
call
inc
adc
mov
or
push
inc
test
shlb
shrb
mov
push
in
sar
bound
push
incb
test
test
roll
call
mov
pop
xor
pushf
nop
pushf
mov
scas
pop
xchg
add
mov
mov
inc
inc
or
jno
xor
cs
aad
mov
mov
push
movsl
out
std
and
jne
push
call
mov
jmp
sub
dec
or
outsl
and
push
pop
outsl
cmp
adcl
jg
add
lods
and
xor
mov
and
mov
call
movsb
imull
push
scas
inc
nop
pushf
pushf
shrl
daa
enter
pop
aaa
insb
cmp
cmc
in
jnp
ror
outsb
lahf
je
dec
popl
push
test
inc
sub
icebp
in
ljmp
add
adc
clc
outsl
clc
push
insb
push
out
jmp
pop
mov
add
push
test
pushf
cmp
xor
push
scas
sbb
or
add
mov
cld
das
cmp
mov
mov
cmc
pushf
cmp
cmpsb
pusha
ljmp
cli
mov
xchg
or
inc
sub
aas
mov
test
mov
jecxz
hlt
pusha
sahf
add
movsl
out
xchg
jmp
mov
pop
sahf
xchg
shrb
xor
clc
inc
mov
cmc
rolb
sti
sub
pop
call
lods
push
pop
cwtl
mov
test
and
sbb
or
roll
insb
jge
stos
loopne
cmc
pop
push
or
shr
call
mov
int
pop
test
fucomi
or
je
stos
sbb
mov
mov
jge
sti
jg
out
sub
aad
sahf
jo
adc
or
xorl
cmp
sub
push
ret
aad
jb
jle
je
mov
scas
mov
xchg
mov
xchg
xor
mov
inc
nop
imul
lret
mov
test
mov
lea
push
rorb
push
xchg
shl
add
cmp
mov
mov
and
mov
cmp
mov
lahf
xor
mov
xchg
fdivrl
jmp
mov
mov
jmp
or
cwtl
lds
pusha
or
pop
cmp
or
lds
sbb
cmp
adc
addb
js
sbb
out
mov
jno
cwtl
or
xor
shll
mov
cs
xchg
insl
jae
push
mov
sub
jge
sbb
cmpsl
adc
rol
mov
out
mov
mov
push
cmp
cli
cmp
cwtl
add
pop
pusha
popa
jb
shl
cmp
add
cmp
dec
andl
add
fiaddl
call
rolb
mov
sbb
add
and
adc
call
jmp
sub
and
xor
pop
jae
scas
dec
pop
ret
add
pop
sub
inc
loope
adc
and
repnz
les
mov
lcall
sub
push
inc
movsb
lahf
call
push
sub
js
ret
jge
lret
adc
roll
sbbl
adc
aaa
adc
testl
popa
fstpl
loope
dec
rcr
shrl
insl
jp
ds
loope
aam
push
cltd
push
push
aaa
stos
in
ret
mov
push
jae
inc
cld
dec
or
xor
sub
sbb
inc
xor
cmp
sahf
xor
and
loope
push
push
mov
inc
lea
out
mov
imull
js
fists
push
cmp
or
stc
push
or
cwtl
jo
das
call
adc
or
repnz
xorl
push
push
fisttpl
inc
mov
ret
pop
cbtw
mov
stos
add
xchg
ja
sbb
add
cmp
cmpsl
lock
add
mov
add
jnp
xor
push
ret
jecxz
out
in
lcall
repnz
mov
pop
loop
lcall
jp
aaa
nop
loope
stos
jg
data16
movb
lock
sti
test
jmp
adc
mov
andb
adcl
push
shll
xchg
sub
add
sbb
xchg
stc
movsb
push
cmp
jmp
add
sarb
add
and
xchg
cli
ret
push
mov
enter
push
nop
dec
les
repz
rorb
adc
lods
ror
fdivrp
pop
pop
nop
std
les
inc
mov
push
jb
or
rol
vmulss
cmc
test
push
in
addb
pop
xor
mov
jnp
fistps
pushf
pop
mov
shlb
leave
lods
ljmp
pop
test
rclb
loope
out
orb
sahf
inc
in
adc
aam
push
into
push
dec
js
sbb
cwtl
cmpsb
shr
push
loopne
outsl
jg
std
mov
and
test
pusha
and
adc
stos
adc
and
push
nop
push
push
push
cmp
in
sbb
int3
loopne
push
ljmp
or
insl
fistps
and
call
inc
cld
xlat
sbb
adc
std
add
fcmovnu
adc
mov
pusha
ret
fcos
add
sarb
aam
inc
mov
cmp
mov
in
push
cmp
aad
int
jmp
das
pop
scas
call
jbe
call
cmpsb
imul
mov
xor
loop,pn
js
xchg
push
xchg
jne
push
popl
or
std
jbe
hlt
mov
add
mov
pop
ja
and
xor
jg
repz
mov
adc
add
stc
test
scas
mov
int
and
icebp
jbe
scas
jmp
icebp
enter
pop
jp
daa
sbb
cli
movsl
fsts
sahf
incb
outsl
icebp
mov
and
fwait
ret
push
cld
pop
push
mov
lret
lret
es
jne
decl
cld
pop
pop
shll
lods
sbb
es
jl
fdivrp
and
data16
mov
dec
or
aaa
pop
aas
sub
es
jmp
call
pop
xor
testb
fbld
push
rcrl
adc
xor
sbb
arpl
loop
xor
lods
dec
cmp
add
sbb
sbbb
enter
fisubrs
insl
inc
mov
leave
jo
or
jmp
pop
mov
repz
jno
outsb
test
dec
dec
cmp
sbb
jmp
fadds
clc
dec
shr
out
push
jge
push
xor
iret
pop
pushf
setno
icebp
cs
js
mov
fisttps
mov
sub
fildll
out
mov
pop
sbb
imul
push
xchg
xchg
clc
insl
push
or
sbbb
jno
mov
loop
add
sahf
stos
push
jle
mov
lock
adc
add
jnp
push
incl
aas
adc
push
cs
pop
pop
add
xchg
call
inc
shll
jbe
into
mov
mov
test
jbe
add
test
and
jmp
sub
push
aas
adc
xor
int
fsubrp
pop
icebp
mov
std
out
jmp
fldl
push
iret
inc
xchg
mov
cmpsl
cmc
gs
dec
adc
add
cmpsl
push
mov
nop
popl
pop
int
mov
incb
mov
orl
ror
push
test
or
clc
lods
dec
adc
or
fsubs
in
and
lret
ja
jg
pop
call
sti
mov
cltd
and
fldl
jno
daa
decl
dec
lahf
sub
and
sbb
cmp
idivb
cli
sti
or
outsb
pop
int3
jl
xor
fdivr
nop
dec
pop
lcall
call
mov
sub
cs
push
pop
mov
movsl
stc
je
dec
and
jg
out
cmp
xchg
xlat
cmp
jne
or
mov
lcall
add
or
mov
xor
sahf
xchg
dec
jno
sbb
lock
adc
dec
data16
and
cmc
stos
repz
int
mov
ja
stos
outsl
and
rorl
cltd
shll
fiadds
or
in
push
repz
ljmp
imul
ret
insl
sub
adc
sub
add
pop
es
lahf
cld
in
jge
fidivl
and
aam
pop
into
outsl
cld
pop
sub
fildll
adc
test
lea
jmp
add
inc
fsubrl
push
cld
jmp
les
int
push
mov
fmuls
push
push
xchg
dec
mov
arpl
aam
jo
jb
enter
and
push
mov
or
pop
xchg
daa
shrb
jge
mov
icebp
test
inc
imul
cld
and
aam
push
sti
ljmp
mov
sub
inc
sarl
add
xchg
inc
xor
aaa
incl
mov
fadds
fmull
adc
sbb
inc
dec
idiv
decl
mov
ret
js
subb
lret
pop
insl
and
or
adc
dec
out
inc
fisttpl
lret
out
jmp
mov
and
aam
pop
insl
out
pop
cwtl
cmpsb
xchg
test
fstpl
or
fbstp
shrl
mov
add
xlat
arpl
int
or
outsl
aas
jnp
fiadds
xchg
ret
je
push
insl
leave
iret
lea
mov
icebp
or
pop
or
fwait
in
jg
shlb
cmp
dec
dec
dec
cmc
and
insl
pop
jecxz
pushl
fndisi(8087
popa
in
xchg
push
popa
into
or
xchg
outsl
insb
lock
test
push
cli
arpl
add
dec
jl
test
add
loopne
or
fmuls
pop
xchg
data16
lock
std
test
push
adc
out
ror
sub
add
repz
out
pop
xor
pop
mov
dec
dec
xchg
ljmp
pusha
aam
enter
adc
test
fmul
xchg
jg
call
mov
push
sbb
cmpsl
hlt
xor
xchg
call
pushl
aad
sbb
jp
mov
or
unpckhps
out
int3
pop
and
jno
pop
pop
insl
out
js
jmp
aas
int3
sub
add
mov
ret
cld
fbstp
sub
popf
fwait
xor
mov
sub
inc
jne
js
popl
test
pushf
push
rorl
inc
xbegin
mov
ret
ja
pop
or
and
xchg
aaa
pop
jecxz
das
mov
adc
mov
dec
cwtl
insl
mov
push
lret
lcall
shrb
adc
test
dec
popf
loope
and
mov
call
mov
jne
push
or
push
fstp
cld
pop
jg
rcr
dec
add
ret
jp
jnp
int3
lret
dec
test
mov
mov
dec
jno
push
cld
and
test
cld
les
in
jo
in
sbb
fistl
dec
fsubs
adc
mov
insb
sbb
les
cmpsw
xor
cmpsb
adc
pop
shl
pop
and
xor
mov
sbb
in
push
mov
ret
jno
inc
out
mov
insl
add
sti
xchg
sahf
add
outsl
addb
std
fldt
jle
call
call
push
and
and
mov
popf
sahf
xchg
mov
filds
mov
ja
call
fisubs
sarl
cmp
insl
int3
push
fildl
cmpsb
test
ja
das
fstpl
repnz
sbb
fisttpl
insl
add
pop
inc
and
sarb
jle
in
inc
pop
and
aam
lret
incl
lahf
adc
sbb
fwait
xchg
loope
push
cmp
dec
fstl
movsb
cmc
xchg
xchg
mov
hlt
pop
test
push
xchg
and
dec
lods
lock
mov
pop
push
lret
cmc
jecxz
add
jle
je
call
xor
and
push
xor
bound
into
mov
adc
imul
sar
in
jns
inc
insb
push
mov
xlat
jecxz
add
jl
add
xor
inc
pushl
sub
push
leave
popf
mov
roll
mov
cmovnp
sbb
xlat
mov
mov
xor
inc
dec
aad
in
push
fiadds
call
stc
in
movsl
repnz
mov
push
enter
cmpsb
pushf
push
mov
xor
xor
push
pop
das
push
xchg
lock
jmp
inc
pusha
adc
es
fxch
lcall
cmp
mov
xor
dec
das
lock
mov
dec
fists
sub
loope
mov
xchg
gs
pushl
push
lret
sahf
adc
jecxz
or
xor
cwtl
cmpb
pop
cmp
pushl
sub
ficoms
fsubr
adc
ljmp
add
iret
jecxz
je
gs
aas
add
fdivr
ljmp
cs
into
sub
mov
mov
xchg
dec
cvtpi2ps
inc
sar
loop
into
cmpsb
sbb
lcall
mov
or
push
and
jo
mov
test
jg
outsl
adc
ss
popa
add
jb
repnz
xor
lds
aam
push
decb
inc
jg
mov
es
cmp
lock
mov
aad
test
adc
inc
stos
inc
into
in
leave
aas
lds
aad
ja
mov
push
push
add
test
pop
cli
dec
xorl
pop
fidivs
mov
rcll
mov
nop
jl
push
jmp
dec
outsl
andb
in
pop
xor
jb
adc
jg
stc
pop
jle
dec
aaa
dec
test
and
fs
mov
mov
add
bnd
jno
add
pushf
jle
adc
dec
cmpsl
and
cld
sub
push
arpl
lret
sbb
roll
movsl
push
sti
cmpl
fbld
ja
jecxz
xor
sbb
push
mov
mov
stos
out
adc
and
into
mov
jae
lods
addr16
inc
xor
cmp
adc
pop
jmp
adc
and
inc
mov
lcall
fs
dec
rcrl
xor
push
sub
int3
sub
pop
jp
sub
adc
inc
cmpsb
das
pushf
mov
dec
dec
in
push
cmp
imul
lcall
popl
or
xlat
subb
adc
aad
test
pop
push
adc
push
out
orb
push
xchg
shrl
xchg
jnp
in
pop
aas
xchg
mov
stos
loop
add
repz
orl
hlt
mov
es
std
mov
jg
daa
mov
and
push
lret
lcall
xchg
adc
xchg
out
repz
sub
dec
and
repnz
arpl
mov
mov
pop
adc
mov
xchg
push
mov
sbb
jne
popf
and
loop
repnz
movsl
mov
sbb
or
ret
stc
cmp
add
arpl
jg
out
and
rclb
js
popl
add
adc
fucomi
int3
jecxz
into
jbe
decl
add
push
add
test
fsubrl
add
jg
or
adc
dec
mov
arpl
sub
xor
shlb
insl
fimuls
hlt
aaa
pop
call
imul
mov
sub
shl
lea
and
sbbb
and
fisttps
out
pop
xor
mov
xor
cli
js
test
decl
adc
call
mov
mov
repz
adc
push
out
sub
aam
in
inc
mov
lahf
mov
insl
out
imul
mov
jp
loope
inc
mov
sahf
xor
jns
std
in
pushl
adc
add
xchg
push
int
lods
mov
xchg
sub
ss
pusha
sbb
pushl
xor
call
jno
pop
push
lret
xor
outsl
call
inc
adc
cmp
aam
cmp
loopne
jg
xchg
inc
int
jmp
xchg
lcall
sub
or
mov
pand
adc
jne
dec
stos
lret
scas
in
pop
cmp
into
dec
inc
aad
inc
and
mov
stc
fiadds
mov
imul
out
test
jns
adcl
gs
out
jg
pop
adc
stc
cmpsb
push
shll
mov
cmp
subb
lods
ret
adc
cld
cwtl
test
and
mov
push
mov
mov
pop
out
or
xchg
adc
lret
add
xchg
lret
sbbb
pop
sub
dec
xor
xchg
or
jge
rolb
add
jnp
in
lcall
xor
out
mov
cmp
fwait
jns
and
push
je
test
xor
out
rcrl
xchg
gs
push
push
lea
or
stos
je
xchg
mov
aam
clc
lea
sub
and
ja
mov
push
das
mov
xor
rorl
mov
out
inc
fwait
inc
sbb
stos
mov
in
stc
xor
xchg
enter
pop
push
xor
dec
add
adc
and
incb
dec
stc
jns
mov
scas
in
xchg
divl
xchg
das
mov
jge
push
aam
inc
sbb
mulb
fisubrl
xchg
les
loope
pop
aas
lahf
dec
or
stc
repnz
imul
pop
inc
pop
nop
and
int
clc
fucomip
outsl
mov
shll
cmp
and
adc
add
push
adc
xchg
add
or
cmpsl
sub
loope
mov
decl
or
jl
ljmp
adc
xchg
mov
out
in
add
fadds
push
popa
mov
cvtps2pi
movb
or
or
ljmp
mov
lea
outsb
push
cmp
jb
insb
add
mov
fdivrl
mov
adc
adc
pop
cmpsl
inc
jecxz
clc
pushl
imul
popf
stos
fwait
xchg
push
and
lret
notl
ljmp
add
repz
test
and
xor
int
inc
aad
loopne
lcall
nop
push
pop
mov
popf
fyl2xp1
out
notb
lock
and
xor
clc
mov
and
and
out
insl
xorb
popa
xchg
sti
dec
in
sti
pop
xor
loop
mov
mov
jns
imul
sub
cld
mov
pop
xchg
daa
add
rcll
xchg
cld
dec
pinsrw
imul
das
dec
lds
out
mov
fwait
cs
jo
mov
adc
xor
outsl
cmc
sub
in
fwait
cmp
das
aas
es
push
or
movsl
fbld
in
sarl
ss
test
or
inc
jle
pop
fdiv
xor
out
loopne
sbb
aad
or
dec
icebp
xchg
lcall
imul
adc
mov
fadd
xor
sarb
decl
sbb
inc
scas
sbb
int3
xchg
mov
pop
mov
xchg
in
mov
decl
cmc
jle
ret
jmp
cmpsb
mov
repnz
add
mov
imul
xlat
test
ret
cli
inc
out
out
push
cmp
cmp
push
movsl
push
jle
clc
jle
inc
imul
lock
movsl
stos
mov
push
lret
sub
pop
ret
xchg
fisubrs
adc
in
adc
adc
xor
jge
jg
enter
adc
ja
push
addr16
ljmp
lret
jg
mov
outsl
mov
pushf
pushf
sub
dec
push
jb
or
dec
out
pop
jl
lcall
add
push
mov
insb
packssdw
rorb
dec
jge
aam
lret
out
inc
adc
sub
cmp
mov
sub
jp
stos
imul
adc
jg
and
sbb
nop
adc
cmp
inc
das
pop
mov
jno
lret
icebp
xor
inc
repnz
incl
filds
xor
inc
scas
ds
inc
adc
or
inc
imul
ss
call
dec
xchg
lret
enter
pop
cmp
clc
cmova
fldt
sbb
outsb
mov
outsl
mov
filds
jg
adc
cmp
js
das
cld
out
and
pop
enter
nop
jnp
je
xchg
lret
int3
sbb
jge
sub
mov
jge
adc
loope
or
adc
inc
pop
jno
jle
fidivrl
push
jmp
cmp
jg
pop
imul
mov
mov
fiadds
rolb
mov
mov
adcl
xor
insb
add
xchg
mov
add
inc
out
adc
in
hlt
mov
sub
arpl
cli
mov
xchg
or
adc
push
rcr
rol
imul
push
stos
pop
and
repnz
scas
pop
imul
pushf
lds
dec
push
incl
nop
sbb
push
fimuls
stc
loope
repnz
sbb
jg
incl
mov
mov
pusha
add
sub
jmp
push
fdivl
cld
aad
xchg
les
inc
ljmp
pop
test
test
imul
dec
xchg
dec
jl
push
mov
jge
inc
lea
out
and
push
xor
push
mov
adc
mov
adcl
adc
enter
add
fstl
xor
push
push
xor
xor
xor
das
adc
xor
xor
das
sub
insb
xor
hlt
inc
sbb
xor
xor
xor
xor
sbb
stos
popa
xor
mov
pop
xor
xor
xor
xor
xor
xor
xor
xor
clc
pushl
ret
imul
xor
inc
ds
jmp
jae
jns
jle
ss
mov
cmp
aaa
call
and
xor
cmp
lea
popf
cmp
sbb
clc
cmp
cmp
xchg
movsb
cmp
and
xor
cmp
mov
dec
in
xchg
cmp
cmp
cmp
cmpb
cmp
cld
pushl
cmp
cmp
jnp,pt
and
ds
sbb
push
daa
xor
and
jns
lds
lret
xor
pusha
xor
xorl
loopne
xor
xor
xor
xor
adc
stc
xor
aas
mov
ss
mov
xor
cmp
pop
ljmp
xchg
iret
aaa
fidivs
out
in
aaa
icebp
aaa
add
or
das
adc
pop
cmp
jp
cmp
cmp
pop
call
cmp
pop
cmp
xchg
dec
cmp
mov
cmp
outsb
cmp
jge
test
xchg
cmp
cmp
cmp
cmp
mov
insl
cmp
cmp
cmp
mov
mov
inc
mov
mov
rcll
add
or
add
cmp
inc
cmp
adc
mov
ds
ds
ds
repz
ds
aas
and
push
aas
pop
aas
jl
mov
xor
aas
lods
aas
mov
sarl
fstpt
loope
clc
aas
js
cld
outsl
jo
jmp
insl
xor
xor
xor
xor
das
jne
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
ss
out
jmp
aaa
mov
out
mov
les
icebp
cmp
cmp
mov
fidivrl
fistpll
ljmp
sub
ja
cmpb
cmp
cmp
ds
adc
addr16
sub
xor
xor
decl
js
iret
xor
xor
movsb
ss
icebp
ss
ss
and
sbb
push
ret
pop
cmp
cmp
test
adc
cmp
and
push
sti
out
in
pop
ds
les
repnz
and
mov
insb
pop
sub
ds
xor
xor
incl
adc
push
xor
into
xor
xor
xor
xor
xor
xor
js
cmp
cmp
jne
outsl
pushl
xor
cmp
das
cmp
cmp
imul
ja
clc
inc
jg
cmp
cmp
cmp
outsl
cmp
cmp
outsl
sub
popa
stos
sahf
sarb
inc
mov
mov
into
xor
xor
cmc
pushl
xor
xor
xor
ja
xchg
xor
xor
mov
sbb
push
ss
ss
jl
and
aaa
sbb
jo
inc
cmp
outsl
lcall
mov
cmp
cmp
bound
imul
icebp
aaa
aas
call
cmp
push
cmp
cmp
cmp
daa
lock
jg
out
jnp
xor
xor
jge
xor
pusha
mov
jge
mov
sbb
adc
inc
cmp
imul
loop
adc
cmp
cmp
outsl
cmp
ja
fwait
loope
cmp
jecxz
aas
xor
add
or
ds
ds
ds
ds
mov
ds
fnstcw
insl
sbb
sbb
add
cmpl
icebp
jnp
shl
jg
jnp
adc
sbb
and
xor
xor
jg
fbstp
xor
js
mov
xor
xor
ljmp
mov
daa
xor
xor
xor
lock
adc
xor
push
xor
xor
jle
mov
sahf
xor
mov
xor
xorb
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
decl
adc
sbb
and
xor
jl
lods
pushl
dec
xor
pop
xor
outsl
xor
jl
test
mov
xchg
xor
pop
jmp
out
xor
out
sbb
iret
push
aam
fdivs
in
call
mov
xor
xor
and
and
sub
xor
inc
xor
aaa
clc
dec
xor
divb
push
andl
add
in
fdivl
sbb
push
mov
and
push
xor
xor
ror
cmp
fcomps
jl
push
xorb
testb
outsl
add
adc
fnstsw
mov
inc
aaa
test
aas
cmp
cmp
xor
mov
xor
fidivl
mov
out
in
xchg
sub
mov
xchg
cmp
push
pop
ret
mov
mov
daa
xor
xor
adc
sub
inc
pop
jo
les
pop
xor
fdivs
mov
into
xor
pop
ss
cmp
xchg
sbb
cmp
cmp
cmp
cmp
cmp
inc
xchg
ds
out
xchg
out
adc
jo
push
inc
push
or
pop
xor
xor
xor
xor
rcl
outsl
clc
popf
xor
xor
test
xor
xor
scas
pushf
mov
jbe
fnsave
cld
mov
cmpl
xchg
pushf
aaa
or
dec
inc
and
and
jmp
add
in
aas
push
fwait
orl
push
push
sti
out
fldl
jmp
pop
cld
in
push
int3
psubsb
stc
out
mov
pop
sbb
mov
push
lods
pop
mov
rcll
xor
adc
das
inc
xchg
mov
mov
outsb
loope
cmp
data16
add
das
sar
mov
push
std
enter
lock
add
loop
add
das
rolb
add
inc
add
das
loope
aaa
add
cmp
push
pop
xlat
or
and
les
sbbb
mov
dec
daa
inc
fnstenv
rolb
add
dec
fxch
daa
rcr
incl
rdpmc
xor
or
or
decl
ja
push
pop
xchg
mov
es
add
push
pop
push
push
add
or
ds
roll
sti
mov
add
aam
adc
addl
insl
inc
and
push
xor
mov
jle
add
add
sub
andnps
mov
pop
imull
lret
test
add
push
add
inc
mov
pushl
or
or
inc
divb
push
cmp
add
outsb
jg
xchg
clc
test
cltd
insl
jbe
pop
adc
adc
cwtl
jae
mov
outsl
icebp
lods
test
push
iret
mov
fstpt
cwtl
jg
idiv
mov
cmp
movsb
xchg
outsb
add
push
call
push
push
into
jmp
fucomi
pop
fldt
loopne
mov
mov
dec
push
add
mov
add
cmp
popf
add
lock
push
push
xor
hlt
call
dec
sbb
sub
xchg
and
adc
addl
sub
mov
push
and
mov
incb
push
out
call
sub
xorb
call
test
aas
push
push
lea
decl
out
addr16
jge
sti
fisttpl
jmp
and
std
add
and
fbld
lret
add
inc
cmp
jl
add
cmp
vpshufhw
pop
pop
arpl
inc
pop
daa
xchg
sub
out
mov
std
cwtl
sahf
add
fildll
aaa
fimull
jmp
or
sub
test
push
fistpll
aas
cwtl
clc
pop
sbb
adc
mov
push
inc
or
repnz
lea
imulb
enter
inc
pop
test
pushl
cli
add
in
lea
or
add
mov
add
dec
mov
clc
cmpl
sub
sub
mov
pop
and
in
imulb
popf
roll
mov
mov
mov
add
jne
call
add
mov
imul
stos
push
incb
or
push
add
mov
mov
push
cmp
mov
mov
cmp
jb
mov
push
test
mov
test
je
dec
js
loopne
xor
call
in
fcmovbe
pop
sbb
dec
sbb
mov
push
test
jle
test
add
xor
subb
cmp
sub
shl
push
pop
push
aaa
sbb
mov
jg
cmpsb
cltd
idiv
imul
sbb
push
fidivs
aaa
stc
mov
mov
sub
pop
ljmp
add
roll
inc
sarb
imul
inc
imul
add
sti
cld
push
add
push
das
sub
jge
xor
ret
and
aad
decl
jne
sub
pop
mov
ret
js
test
pushl
lcall
sbb
sbb
testl
je
dec
push
mov
fimull
neg
inc
sub
cmp
icebp
jg
jne
cmp
jbe
adc
movsl
sbb
xchg
je
and
ljmp
je
ss
add
pop
sub
cs
clc
mov
push
je
icebp
jbe
push
cltd
or
inc
cmp
mov
push
pop
inc
cld
mov
sbb
loop
arpl
repz
adc
dec
testl
fiaddl
xor
mov
xor
lret
mov
xchg
lret
in
or
sar
outsl
cld
jmp
popa
enter
fldt
jae
int3
int
xlat
sub
iret
clc
xchg
cli
call
rorb
shll
mov
xchg
lret
shlb
rorl
cmp
popa
pop
xlat
pop
fdivs
fldcw
fidivl
fisttpl
loopne
add
pop
loop
jecxz
add
inc
ljmp
out
out
call
lcall
pop
in
aaa
lock
jmp
pushl
aaa
repz
cmc
sbb
add
insl
fwait
scas
divl
clc
stc
dec
add
pop
sti
js
mov
mov
mov
pop
jae
scas
insl
out
adc
inc
call
mov
adc
adc
je
or
filds
sub
push
xorl
add
pushf
movl
jmp
sbb
pushl
pop
sub
pop
je
sarl
and
and
out
or
psadbw
jo
mov
filds
loop
ret
or
jbe
jmp
pushf
dec
sbb
das
and
pushl
or
jge
in
xchg
sbb
or
push
adc
pop
mov
cli
fucomi
dec
add
add
pop
jmp
insl
push
ret
xchg
pop
add
ljmp
xchg
mov
pushf
mov
in
dec
std
fnstenv
flds
stos
mov
data16
xlat
xchg
inc
imul
shll
sbbl
jmp
push
arpl
out
in
and
hlt
jg
mov
xchg
jnp
jno
int3
and
mov
lock
movsl
insl
pop
es
pop
jne
incl
addl
sbbl
sbb
adcb
mov
sbb
mov
cli
incl
imul
jle
hlt
das
cs
int
add
jle
jg
sbbl
imul
sbb
ljmp
jl
iret
mov
lret
add
cmp
jl
cmp
jg
adc
adc
cmp
push
inc
mov
or
sub
push
sub
call
mov
or
dec
inc
sar
inc
and
jmp
stos
enter
pop
mov
pusha
nop
out
clc
pop
pushl
pop
push
cld
push
and
mov
mov
and
push
xor
mov
dec
pop
je
pushl
mov
cld
jmp
mov
aaa
add
push
cmp
mov
pop
pusha
call
jg
cmc
call
sub
dec
call
jl
adc
jmp
mov
fmull
lea
fimuls
les
sbb
mov
lret
inc
inc
mov
pusha
sbb
fsubr
mov
bound
or
jg
jmp
adc
sbb
fdivs
movsb
je
repz
add
mov
fisttpl
mov
ret
enter
frndint
mov
jg
mov
jg
jecxz
pop
xor
sti
icebp
ret
push
lcall
lods
mov
add
push
mov
incl
shr
mov
into
jmp
incl
pushl
js
movsl
xlat
or
in
xchg
ja
imul
add
fidivrl
mov
push
outsb
push
dec
cmpl
mov
sub
jne
mov
jmp
or
add
insl
lods
icebp
cwtl
and
fdivrl
movsl
movsl
fistpll
in
test
mov
xor
mov
cld
movsl
lcall
xor
imul
or
test
rolb
xor
cmc
nop
push
incl
add
jmp
mov
in
mov
std
mov
lcall
icebp
out
outsb
xchg
cmp
adc
in
idivl
les
add
or
or
sti
int3
pop
mov
jbe
jmp
or
push
rorb
sbb
inc
dec
cmp
nop
cmpsb
cwtl
mov
subl
sbb
bound
popa
addr16
in
addb
cld
lcall
sbbl
shl
pop
or
lret
test
call
decl
mov
ret
cmp
push
mov
jg
iret
jge
dec
arpl
daa
ljmp
adc
jl
lock
jmp
sub
aaa
mov
loop
push
sbb
push
pushl
push
ja
push
pushf
inc
cli
ljmp
adc
lods
sbb
sbb
mov
or
pop
and
or
incl
pop
out
and
cmc
pushf
inc
insl
sbb
movsl
fstpl
mov
arpl
pushf
jmp
inc
add
jnp
fisubl
or
xor
movsl
sbb
push
push
push
sub
ljmp
push
setg
lahf
rcrb
pop
cmp
xchg
lods
in
add
pop
jmp
rol
outsl
lcall
and
inc
mov
or
jbe
push
das
std
stc
jmp
sbb
xor
mov
or
inc
incl
out
stc
pushf
es
mov
ja
cmp
mov
or
lcall
data16
nop
push
and
btr
mov
gs
jo
jecxz
les
int3
sub
add
fnstsw
sbb
jmp
mov
pop
or
jmp
bound
mov
or
add
jle
push
push
clc
mov
hlt
lea
jb
xchg
pop
xchg
imul
mov
lcall
add
in
in
xor
inc
sarl
xor
inc
mov
pop
ret
inc
sbb
push
adc
scas
hlt
sti
fcomp
adc
maxps
clc
cmp
push
jno
pusha
sub
or
ret
adcb
call
cwtl
cmp
fs
jl
dec
ret
jle
insl
pop
dec
inc
mov
add
loopne
xchg
dec
mov
rol
jg
jg
sub
mov
cmp
pop
fs
cvttps2pi
pushl
jecxz
pop
mov
adc
mov
pop
mov
shrl
decl
cmp
call
clc
mov
and
and
adc
mov
subb
cmp
mov
addr16
aas
adc
or
outsl
adcb
and
adc
shl
xchg
mov
mov
xor
std
xchg
add
push
push
or
xor
stos
fstp
dec
adc
fildl
mov
scas
and
add
push
les
mov
pushl
jle
aam
int
cmc
cmpsl
cs
xor
cmp
pop
mov
cmp
fbstp
pop
pop
mov
push
sbb
repz
sbb
cmp
adc
subl
mov
pop
or
inc
jae
out
inc
adc
inc
incl
insl
cmp
sbb
fmuls
cmp
test
sbb
cmp
or
pushf
push
pushl
arpl
xchg
xchg
test
rorb
icebp
std
movl
cmpsb
and
call
jmp
std
or
lcall
mov
shll
out
loopne
imul
aam
cmp
or
pop
push
or
test
insb
add
dec
out
jbe
cmp
nop
cmp
shl
mov
push
add
pop
xor
fwait
shlb
push
and
adc
ret
push
sbb
fisubl
dec
cld
ja
shll
outsl
hlt
in
rolb
pushl
or
xlat
push
dec
shll
cltd
dec
hlt
xchg
in
cmp
xor
roll
in
mov
cli
lret
or
test
std
mov
cs
ficoml
xorb
pop
int
test
lock
push
lret
sti
inc
lea
into
mulb
adc
mov
negb
and
pusha
icebp
in
incl
mov
inc
pop
adc
jge
test
or
jge
jbe
xchg
aad
mov
xchg
and
cwtl
push
xchg
xchg
je
outsb
mov
mov
adc
scas
mov
fsubr
and
pop
call
ss
faddl
mov
adc
inc
outsl
pop
or
xchg
or
adc
int3
scas
dec
pop
sub
sub
ljmp
cld
mov
fstps
mov
frstor
movl
mov
aas
ret
sti
push
lods
push
stos
mov
xchg
push
mov
dec
popa
sub
adc
cmc
push
push
pop
push
push
jge
lret
xchg
decl
das
adc
adc
jae
cmp
jne
adc
or
jg
cli
jp
mov
xor
inc
daa
push
data16
loop
or
mov
movsl
lea
dec
outsl
cld
mov
rcl
imul
mov
lea
mov
cmc
mov
jno
insb
dec
addr16
inc
roll
jg
outsl
jl
cli
jmp
cli
inc
es
mov
adc
mov
jle
mov
sbb
imul
inc
scas
push
add
jle
xchg
clc
mov
mov
and
push
jg
rclb
push
cmp
or
cwtl
jg
out
sbb
push
icebp
adc
mov
mov
mov
or
pushl
jg
jge
dec
fadds
ret
pop
outsb
por
push
sarb
mov
adc
pop
pop
cmpsl
outsl
cmp
inc
xchg
or
or
ja
cmp
jmp
mov
das
push
jecxz
imull
fcoms
cmp
orb
fucomip
rol
or
jge
popf
fdivrs
test
push
pop
std
inc
push
jge
loope
adc
mov
insb
mov
mov
adc
mov
movsl
adc
or
bound
mov
push
lds
jno
add
decl
mov
jo
test
dec
icebp
in
mov
push
push
loope
push
mulps
push
sbb
or
das
add
xchg
aam
lret
and
mov
int
test
ror
leave
mov
pop
stc
mov
jno
mov
icebp
inc
xchg
adc
movsb
xor
add
xor
decl
sub
or
xchg
or
ret
stos
imul
push
rcll
lods
and
push
je
mov
inc
nop
ret
xor
sbb
mov
xor
mov
mov
and
adc
popa
mov
loope
fs
inc
xor
outsb
push
mov
call
pushl
or
jo
cmp
cmc
mov
push
jne
or
xlat
adc
ljmp
sbb
push
jge
flds
cmp
jle
inc
cmp
cmpl
out
inc
push
mov
mov
imul
or
outsl
push
sarl
push
inc
rcr
push
int3
decl
popa
andl
inc
xor
and
das
pop
mov
lret
add
mov
or
jge
or
ds
add
jmp
fwait
sbb
rcr
inc
sub
popf
jne
imul
lods
push
jecxz
push
jmp
movsl
jg
in
addr16
jge
sub
pop
adc
pop
icebp
mov
hlt
arpl
bound
dec
push
adc
imul
pop
into
pusha
lods
cli
mov
mov
sbbb
pop
cmp
aaa
leave
pop
sub
out
sub
add
mov
fnstsw
mov
pusha
inc
cmpsl
lods
sub
push
push
push
or
hlt
push
incl
sti
add
push
or
sbb
inc
inc
mov
fcmovne
pop
add
xchg
jp
push
mov
sub
faddl
jmp
push
das
cmc
sbb
pushf
sbb
insl
mov
data16
jg
cwtl
jle
push
test
pop
arpl
ds
mov
jbe
jnp
enter
jne
lret
or
sbb
pushl
test
lods
popa
or
and
and
adc
or
or
mov
mov
add
aad
lcall
add
push
push
inc
inc
call
sbbl
mov
or
out
sub
adc
ljmp
push
xor
shlb
das
add
mov
popf
push
pop
inc
cmpb
and
cwtl
xor
xchg
push
pop
sbb
mov
call
and
insl
cld
pushl
and
sbb
mov
fs
and
sarb
pop
mov
ljmp
sub
push
adc
jns
xchg
dec
je
adc
mov
scas
xor
mov
test
clc
ljmp
mov
adc
xlat
jmp
fcmove
adc
adc
mov
test
jb
daa
lret
fisttpl
call
dec
sub
mov
aam
aam
fadds
push
pop
cltd
jle
pushl
sub
repnz
fisubrl
je
push
out
mov
sub
mov
fwait
adc
cli
sbb
or
dec
adc
mov
lea
clc
pushl
push
nop
pop
mov
add
add
leave
xor
ljmp
hlt
push
loopne
lods
inc
and
mov
lods
push
call
pop
aas
cmp
add
cmp
sub
movzwl
stos
and
lock
mov
adc
mov
jg
call
inc
jle
or
xor
xor
ljmp
cld
fidivl
ja
xor
cmp
or
insl
xchg
push
clc
fistpll
mov
add
adc
enter
fcoml
mov
cwtl
adc
xchg
or
mov
repz
rcr
push
inc
test
xchg
dec
pop
adc
xor
pop
cmp
outsb
xchg
xchg
jge
ret
lods
push
sub
sub
lea
sbb
fdivs
rorb
cli
out
filds
add
enter
sbb
or
cli
test
inc
mov
pushf
xchg
push
inc
stos
and
idivb
mov
lcall
add
test
mov
pop
loopne
sbb
cs
daa
add
cmp
inc
ss
jle
inc
lret
push
lcall
jmp
loope
sarl
enter
jmp
test
sbb
decl
cmp
or
std
movsl
dec
cmp
ret
and
clc
push
ror
sbb
push
adc
sti
pushf
outsl
in
pop
in
add
or
in
sub
mov
mov
iret
dec
cmp
cli
xchg
cli
xchg
ds
xor
fcmovnb
push
mov
hlt
jae
orl
lcall
push
cmp
insb
clc
and
adc
mov
inc
ljmp
clc
clc
jg
xor
leave
das
fdivr
aaa
lret
xchg
cmpsl
sbbl
std
or
pop
jp
out
sbb
push
popa
mov
mov
lret
hlt
fwait
mov
or
test
lock
push
dec
mov
add
or
insl
testl
or
push
or
ljmp
mov
jl
push
std
inc
push
insb
cld
mov
jecxz
add
sbb
mov
lcall
inc
je
xchg
ljmp
shlb
push
ret
pop
dec
add
ljmp
jp
pushl
or
cs
mov
mov
clc
or
jg
and
pusha
or
inc
inc
or
add
mov
outsl
std
mov
jmp
test
je
imul
aad
aaa
sahf
pop
inc
decl
std
mov
mov
shr
test
jg
sub
clc
xor
lea
add
add
hlt
pop
mov
fs
cmp
cwtl
jg
ljmp
xor
popa
sub
insb
pop
stos
jl
or
icebp
fucomip
lcall
sub
sbb
add
subl
pop
jp
aaa
and
call
pop
test
outsb
roll
in
push
dec
adc
fstpl
mov
adc
cli
decl
mov
sbb
lock
mov
or
sbb
and
inc
adc
mov
ds
push
call
push
and
loop
jmp
int
rclb
std
lock
dec
scas
xchg
mov
fs
cld
fimuls
ret
cld
cmc
mov
adc
sub
mov
adc
jns
sub
lock
ss
or
fists
incl
pop
std
jne
adc
jge
loop
roll
pop
jg
jmp
inc
fnstenvs
ja
jmp
push
push
xor
push
fcomps
jp
fmuls
ret
xor
ja
js
test
push
cmp
pushl
adcl
sbb
lcall
lahf
adc
ja
test
mov
add
lret
ret
sahf
sub
push
or
lcall
jle
push
cmc
incl
dec
mov
pop
jne
add
inc
stos
sti
push
das
mov
push
sbb
add
pop
push
adc
mov
loop
outsl
cmc
ljmp
jne
cmp
add
fcmovnu
or
mov
jmp
cmp
and
push
jle
test
adc
jg
rclb
popf
adc
add
out
mov
jns
clc
pop
call
rcl
inc
outsb
mov
scas
xor
je
mov
inc
inc
jmp
adc
loopne
add
rcr
mov
jmp
lret
rorl
mov
ljmp
sbb
test
iret
aaa
add
out
imul
orl
ljmp
sub
clc
sub
mov
inc
dec
jne
mov
mov
test
lret
add
mov
sahf
or
and
pop
js
lea
sbb
rcr
loop
std
decl
adc
jbe
dec
jb
decl
movl
stc
or
rep
lcall
add
cmp
sbb
jmp
decl
loopne
add
pop
jmp
je
test
and
aaa
jmp
push
nop
pop
mov
mov
faddl
add
mov
or
inc
outsl
lcall
add
insb
fstps
pop
int3
lea
pop
xchg
sub
add
out
jg
nop
and
aam
incl
mov
out
sarb
push
insb
add
imul
mov
movsl
mov
inc
inc
pop
sbb
xchg
cli
sbb
hlt
clc
pop
or
in
out
cmp
repnz
lock
lcall
ss
sbb
or
adc
or
or
fildll
addr16
cld
jg
jecxz
mov
add
shll
ss
insb
shlb
decl
mov
sub
pop
add
insl
add
outsl
add
dec
inc
mov
lock
lock
repnz
mov
pop
mov
add
jge
sub
lock
xlat
fcoms
cwtl
jge
stos
dec
jg
testb
pop
mov
in
hlt
pop
js
sar
add
pop
aad
sbb
fnstsw
cmpsb
mov
sbb
lcall
jg
or
or
pop
inc
fdivs
add
ss
in
and
mov
xchg
mov
incl
lds
leave
push
xchg
and
mov
dec
add
clc
test
lea
jp
stos
push
test
xchg
add
cmp
jne
xlat
push
decl
pop
push
lahf
loopne
daa
ret
jbe
jle
add
add
cld
and
adc
push
mov
mov
lea
mov
jg
jecxz
jne
imul
add
fldl
pusha
xchg
pop
pop
sbb
aaa
cli
mov
inc
bound
xlat
aas
out
jmp
mov
addr16
xchg
mov
mov
mov
imul
xor
pusha
mov
sti
daa
xchg
ret
mov
fcmovb
cmp
callw
add
mov
filds
lods
pop
push
dec
push
std
sti
mull
push
hlt
mov
pop
ret
push
loop
ljmp
push
push
push
add
std
getsec
lds
add
js
sub
xchg
jnp
fcompl
xchg
mov
sbb
pop
das
jo
jg
or
pop
roll
mov
mov
or
dec
test
push
mov
mov
outsl
adc
mov
sub
push
incl
jae
jle
ret
popl
js
das
cli
mov
ljmp
bound
arpl
push
or
push
rolb
fimuls
jmp
or
mov
lret
xchg
clc
call
add
imul
les
sbb
xor
lcall
xor
xchg
or
sbbl
xchg
push
xor
mov
dec
mov
loope
mov
ljmp
and
sar
pop
jnp
popa
add
lcall
ja
jg
push
push
lea
test
pop
pop
inc
or
out
divl
js
and
outsl
cmpsb
sbb
arpl
or
test
jae
leave
mov
push
or
insl
hlt
incl
jle
mov
jmp
mov
outsl
aaa
sub
jno
insl
jns
aas
pop
push
xchg
mov
add
mov
hlt
inc
sbb
adc
push
jbe
ljmp
fadd
in
jge
add
or
cmp
leave
lcall
daa
inc
cmp
je
call
mov
sub
cmp
sbb
inc
xchg
fucomip
decl
cmp
pop
std
loopne
rolb
sbb
mov
mov
arpl
daa
pop
fcoms
push
js
jae
inc
fsubr
or
cmp
je
das
cld
jmp
pop
push
nop
xchg
into
mov
ficoms
inc
out
sub
fcoml
movsl
xchg
and
inc
xchg
sub
stos
leave
cs
decb
std
cld
nop
adc
xchg
stos
push
cmp
das
mov
jg
cmp
and
rolb
pop
outsb
in
pop
or
add
mov
movsl
test
push
jl
je
imul
push
outsl
cli
outsl
test
and
stos
add
mov
sub
xor
cld
cmp
cmp
jmp
nop
dec
or
or
adc
lfs
insb
adc
add
adc
sbb
add
or
sbb
adc
daa
cmp
jmp
add
cmp
cmp
lock
jl
push
jg
scas
inc
mov
inc
or
or
pop
fldl
pop
je
dec
cld
xor
loopne
cltd
push
push
leave
pushl
push
lcall
add
mov
leave
cmp
je
mov
mov
cmc
aam
push
imul
adc
jne
lea
mov
imull
adc
dec
mov
ljmp
add
sbb
shr
lcall
mov
xor
call
lea
shrb
decl
mov
add
cmp
jne
mov
out
aam
rol
je
mov
cmp
jl
jp
add
jmp
cmp
or
addr16
cld
mov
rclb
decl
into
push
mov
mov
mov
pop
push
mov
pop
sub
sub
push
add
sub
js
mov
xlat
je
xchg
cmp
adcl
mov
sub
aam
xchg
inc
loopne
and
inc
fcomps
xor
xor
pop
mov
pop
sub
dec
jg
dec
pop
out
mov
jo
mov
jmp
adc
xlat
add
dec
fwait
pop
test
sbb
ds
or
and
fprem
jo
add
std
mov
and
pop
ret
scas
or
shrl
and
je
inc
std
imul
pop
addr16
jo
ljmp
dec
jne
int3
jg
es
cmp
jmp
into
addl
sbb
mov
sub
cli
sub
arpl
stos
push
push
inc
fbstp
or
rcr
or
jnp
pop
stos
or
cmp
sbb
mov
into
add
add
push
mov
or
call
pop
adc
clc
inc
or
mov
call
mov
loopne
and
add
pop
mov
imul
movsl
movsl
incl
pop
push
in
sbb
adc
icebp
jg
sub
ret
jle
push
sub
jle
subb
or
inc
je
into
push
mov
cmp
add
loope
jg
sbbl
sbb
aam
inc
mov
ficoml
ljmp
clc
sbb
bound
jle
pop
ret
js
mov
push
fcoms
xor
mov
sbb
pop
stos
or
repnz
mov
mov
ljmp
adcl
jnp
orl
sub
ret
sub
cld
inc
or
stc
out
into
es
mov
out
inc
hlt
ljmp
popf
add
add
pop
add
ret
dec
cld
ljmp
sti
pop
or
es
adc
add
decl
les
mov
or
jmp
mov
pop
loop
pop
push
xlat
lcall
mov
inc
inc
dec
ljmp
pop
test
shll
mov
push
add
shlb
push
jecxz
std
sub
das
jne
mov
cmpsl
cmp
ja
inc
inc
mov
sbb
cmp
jmp
mov
call
pusha
sub
icebp
mov
mov
cmp
sar
pushl
arpl
cmp
jne
push
adc
loop
mov
pop
mov
or
fs
pop
sub
incl
vpmacsswd
cmp
mulb
mov
and
ja
adc
orb
add
shlb
loopne
sub
out
inc
movsl
sub
mov
incl
and
mov
shrb
cmp
andl
xchg
daa
mov
loopne
add
adc
xchg
out
inc
sub
in
das
in
pop
push
rcll
xor
sub
jnp
call
stc
fistpl
adc
xchg
mov
inc
xor
aaa
cmp
sbb
inc
inc
jmp
das
cmc
add
push
cmp
lea
cli
jg
scas
push
inc
ds
adc
mov
call
loope
pop
aaa
mov
cmpb
xchg
ja
pushl
push
aaa
mov
movsb
lods
lcall
outsb
mov
lods
pushf
rorb
in
decl
lock
or
add
or
iret
dec
std
jmp
pop
xor
jno
sub
jno
cld
push
imul
fmuls
add
lcall
dec
mov
enter
popa
push
lcall
icebp
das
cmc
jg
mov
in
sub
push
movsb
imul
xor
pop
push
jne
xchg
mov
pop
or
pushf
add
adc
jbe
or
or
aad
das
call
mov
pop
mov
jmp
jne
imul
ds
movsb
pop
sub
or
test
not
dec
adc
lahf
push
roll
fstps
cmp
cmpl
pop
cld
outsl
xor
mov
mov
push
push
loop
mov
inc
sbb
decl
std
decl
mov
pop
inc
rcr
pop
adc
fistl
lcall
incl
adc
insb
adc
add
and
in
mov
movsb
mov
push
mov
nop
rclb
lea
cmp
sbb
loopne
jmp
fisttps
cmp
add
fstl
cmp
jne
shrb
push
sbb
or
push
dec
pop
fs
pop
popa
jg
pushl
adc
push
loope
in
je
inc
subb
inc
pop
shrb
push
cld
loopne
xor
xchg
xchg
ljmp
jg
ja
cmpb
std
push
pop
xchg
sbb
cmp
leave
push
and
lods
push
xchg
ret
inc
adc
dec
out
ljmp
cmp
pop
dec
rorb
ljmp
mov
push
adc
je
test
push
lcall
fucomi
dec
xor
inc
mov
push
sub
pushl
insb
mov
aam
inc
mov
pop
pusha
clc
addb
jp
pop
aaa
inc
gs
add
notb
pop
mov
and
push
rorl
mov
xor
mov
add
sarb
mov
call
push
rcll
push
adc
fidivs
jb
incl
int
jmp
jbe
shlb
inc
adc
or
sub
out
jnp
std
dec
add
or
add
movsl
cmc
or
push
dec
test
or
incl
add
adc
lea
mov
sub
cs
test
call
add
sbb
jne
sar
mulb
aas
sbb
pop
mov
dec
je
lock
or
jmp
push
mov
or
das
pop
dec
add
shll
lcall
pop
mov
andl
pop
in
lea
and
pushf
mov
test
mov
sub
mov
jmp
mov
cmc
movsl
push
gs
lcall
add
dec
ss
push
fwait
xchg
test
scas
mov
push
scas
pop
sarl
mov
les
ljmp
push
mov
adc
sti
add
repnz
imul
dec
pop
cmp
cmp
inc
call
out
jle
cmp
adc
cmp
je
inc
mov
mov
inc
cmp
mov
out
mull
sti
out
and
add
pop
lea
push
in
repz
sbb
mov
push
pop
loopne
mov
lret
lret
cltd
dec
cs
sbb
outsb
in
decl
sub
jne
add
cmp
dec
xorl
inc
and
add
xchg
pop
xor
lock
int
aaa
mov
idiv
sbb
pusha
mov
push
rcrl
rorb
inc
mov
jae
cmpsl
lcall
cld
adc
fadds
sub
sbb
xor
in
inc
lods
or
jmp
sub
in
xchg
scas
lock
decl
inc
arpl
adc
push
call
xor
cmp
adc
ret
lret
fsubl
add
test
xchg
cmc
decl
decl
pop
mov
push
push
call
fadds
pop
or
in
mov
mov
inc
or
sti
mov
jg
inc
or
cmpb
ljmp
cmc
cmpsl
or
push
les
aaa
aas
imul
jo
pop
adc
loop
mov
sbb
cmc
loop
sbb
push
ds
shl
enter
cli
pop
out
hlt
movsl
ss
adc
mov
cs
inc
insb
int
das
cmp
dec
push
pushl
cmc
mov
and
movsb
mov
and
sbb
jnp
lea
sub
pop
pop
loope
mov
sbb
jge
sub
add
pop
jg
decl
adcl
hlt
jmp
inc
xchg
loopne
enter
cld
decl
test
addr16
mov
mov
sbb
mov
and
and
or
jne
mov
or
cmp
sbb
pop
jne
mov
cmp
es
add
das
lds
jae
cmp
scas
out
aas
adc
sub
lock
cmc
enter
jge
das
and
add
mov
add
ret
adc
pop
fsubrs
enter
cmp
or
in
call
push
loope
stos
insl
cli
rcrb
push
jo
mov
rorb
adc
jle
mov
push
movd
push
inc
or
or
push
sbb
dec
call
lcall
pop
and
cmc
inc
jmp
pop
lret
add
dec
dec
push
dec
cmp
out
pusha
pushw
fs
iret
jl
shl
cmpsb
pop
mov
and
or
push
jmp
ljmp
mov
cs
dec
ss
jle
jne
rclb
dec
daa
pop
sub
mov
popa
cmp
sub
iret
fwait
imul
call
in
push
test
and
mov
inc
mov
cmp
jns
sub
jmp
dec
call
pop
jmp
rcll
and
test
push
clc
mov
sbb
push
imul
ljmp
jl
mov
mov
mov
shll
incl
cmp
inc
dec
movsl
fwait
mov
xchg
or
fs
mov
into
shr
sar
jmp
outsb
mov
jmp
sub
dec
fwait
adc
ljmp
jnp
mov
lods
push
sub
lea
or
ja
hlt
push
aam
add
xor
lock
and
ljmp
xor
lahf
shl
jecxz
pop
and
sbb
sbb
addb
cmp
push
outsl
movsb
dec
xchg
call
dec
add
push
lock
insl
sbb
mov
decl
xor
outsl
cmp
shll
sbb
cwtl
sub
lds
test
enter
lcall
cld
cmpb
outsl
xor
lods
inc
xor
mov
scas
lods
stos
add
xor
push
cmp
jmp
pop
pop
mov
sbb
imul
stc
mov
jl
mov
mov
fildll
pushl
and
arpl
pop
dec
jg
fdivrl
jno
inc
or
inc
dec
loopne
jbe
rolb
call
pop
clc
xor
pop
pop
lods
inc
fwait
rorb
push
mov
out
dec
xchg
push
das
cmpb
dec
rcrb
fwait
daa
ds
cli
ja
lea
dec
out
pop
loopne
fstpl
in
pmuludq
cld
lock
fisttpll
push
out
call
sub
movsl
movl
ljmp
jbe
dec
subb
jne
or
jmp
pop
jae
cltd
ret
in
lods
cmp
lcall
jge
fs
inc
inc
mov
outsb
cld
mov
mov
or
jne
incl
or
mov
cltd
ljmp
mov
add
cs
incl
stos
adc
lea
sub
cmpsb
lahf
xchg
xchg
push
dec
cld
mov
cmp
adc
dec
pop
and
push
insl
adc
pop
sbb
add
and
jmp
add
fldl2e
mov
leave
dec
movsl
aas
sub
mov
mov
pop
shlb
clc
lahf
cmp
mov
add
nop
lock
lock
shl
mov
and
dec
fucomi
push
mov
jg
mov
lods
push
push
jl
fwait
stos
jo
fistpl
call
incl
inc
xor
ljmp
pop
stos
mov
sti
ror
aas
or
ljmp
xchg
or
sbb
das
icebp
jg
push
shl
inc
adc
and
push
jg
jmp
mov
gs
jmp
and
lea
mov
jno
test
fs
mov
std
incl
stc
pushf
inc
xor
add
test
testl
inc
pop
mov
ds
mov
cmp
dec
outsb
mov
sub
dec
ss
xor
lock
xor
jnp
jle
call
pop
lea
divl
mov
sbb
cmp
pop
cmc
fbld
mov
std
mov
and
mov
xchg
mov
jns
jno
or
mov
insl
mov
mov
mov
xchg
in
jnp
push
add
and
adc
pop
mov
fisttps
push
popa
psrad
iret
and
into
bswap
and
leave
in
jns
dec
aam
test
mov
add
cld
mov
or
das
icebp
ljmp
pop
mov
and
addb
mov
or
xchg
clc
jmp
clc
es
sub
inc
aad
mov
mov
sbb
sub
test
imul
jns
push
inc
outsl
jo
jg
bound
inc
mov
adc
inc
call
pop
or
mov
loopne
xchg
mov
sub
push
push
lret
xchg
call
cmpb
popf
ret
rorl
mov
jo
add
xchg
push
jl
or
or
push
push
mov
outsl
icebp
sbb
dec
push
addb
inc
cmp
clc
jne
pusha
fmull
jmp
testl
stos
sub
or
je
les
pop
fcmovbe
fisttpll
xorl
push
or
and
inc
inc
and
outsb
loope
push
movsl
test
add
add
aad
add
ud0
mov
pop
fbstp
jl
test
mov
lcall
sub
fsubrp
test
pop
shl
cmovbe
decl
loope
dec
or
arpl
xchg
sti
push
loopne
or
push
je
adcl
sub
loope
mov
dec
aad
icebp
test
je
cmpl
and
mov
movsl
and
inc
push
cli
out
push
xor
cmp
movsb
je
ds
mov
pop
out
outsb
pop
call
cmc
incb
mov
je
pop
test
sbb
inc
lret
and
test
jb
push
bound
add
test
mov
or
ret
clc
sbb
test
mov
mov
mov
push
enter
aam
dec
movzbl
jmp
aaa
jmp
dec
cmp
mov
add
push
push
jl
loope
gs
ret
call
mov
dec
pop
pop
pop
adc
push
mov
ret
or
dec
mov
pop
mov
decl
jp
jbe
add
stc
mov
jo
out
jae
or
decl
jo
pop
loopne
sbb
gs
push
es
mov
in
aad
lcall
add
test
jb
add
inc
xchg
cmpsl
jle
std
pop
mov
jae
dec
das
push
ret
jl
insb
push
shr
adc
dec
mov
jg
ljmp
lock
cmpl
flds
cmp
arpl
or
pop
mov
aam
jnp
lea
dec
imul
mov
js
push
add
or
lock
sbb
das
inc
rol
sub
ljmp
call
mov
ja
cmp
adc
push
xchg
je
rol
cmp
shr
aaa
add
push
push
mov
push
mov
pop
push
lahf
push
imul
mov
insl
movsb
aaa
dec
jl
xchg
inc
mov
fs
push
cld
mov
in
rcrl
mov
rcrb
shrb
jne
inc
fcomi
inc
jmp
pop
push
cmp
xlat
sbb
repnz
and
inc
and
jg
pop
pusha
or
icebp
pop
sub
adc
cmp
mov
jmp
sub
mov
pop
movsb
mov
sbb
insb
jne
sar
std
add
inc
push
and
sub
lea
arpl
js
and
lock
or
or
stos
icebp
pop
pop
cltd
sbb
lock
xor
mov
movsl
push
fcomi
jae
add
ljmp
hlt
adc
inc
jmp
popa
add
inc
mov
push
adc
ret
inc
jno
movb
cmpb
ret
sub
adc
jae
or
push
mov
fucomi
cmp
pop
cmc
add
incl
imulb
push
jae
cmp
loop
jbe
mov
mov
cmp
jb
mov
jmp
lahf
repz
fldt
aad
jmp
jb
lea
push
xor
inc
mov
sub
pop
dec
cmc
outsl
jmp
and
hlt
aad
mov
sub
mov
xchg
jmp
ret
inc
sbb
push
jb
out
jmp
popa
pusha
lock
aaa
pop
ud0
ljmp
push
mov
adc
inc
loope
leave
pxor
mov
jecxz
inc
or
xor
or
push
inc
aas
rclb
adcl
adc
loop
mov
insb
divl
decl
cld
pusha
jae
adc
div
rolb
lea
rclb
cmp
ret
or
sbb
jg
and
add
outsl
cmc
cmp
ja
and
sub
pop
outsl
shll
xor
push
gs
cmpb
mov
xor
push
stos
arpl
sub
add
pop
push
mov
push
outsb
lock
js
sahf
add
xchg
cli
rolb
lds
mov
filds
pop
adc
cld
sbb
ljmp
inc
lret
pushl
fisubl
adc
sbb
mov
push
cmc
das
xchg
clc
dec
in
sbb
inc
and
or
test
clc
ljmp
and
and
or
mov
pop
cltd
inc
mov
addr16
push
decl
cld
mov
pop
or
fwait
pop
mulw
pop
push
je
mov
mov
loopne
cld
sub
ja
aam
adc
cs
stos
test
fists
gs
scas
mov
sub
test
dec
lock
adc
clc
loope
decl
jl
pop
mov
mov
add
not
lcall
and
add
push
mov
jmp
mov
clc
decl
sub
push
cmp
pop
add
ss
cmp
cli
add
sub
or
xor
clc
jg
dec
mov
pop
adcb
push
inc
add
in
push
mov
in
rorb
push
push
call
mov
add
jmp
sub
or
out
cs
sub
push
mov
and
sub
mov
add
jg
scas
ljmp
mov
cmp
div
inc
je
fldenv
fdivp
fildl
xchg
les
outsl
fsubr
incl
test
popa
inc
xchg
gs
inc
enter
lods
cmp
outsb
shrl
dec
subb
mov
fbld
add
or
aaa
lods
pop
dec
dec
je
std
jg
decl
in
jbe,pn
or
add
in
addb
lcall
push
insb
xor
and
test
push
push
mov
add
fnstsw
daa
or
clc
das
sub
mov
jmp
pushl
pop
rolb
push
aaa
dec
sub
add
add
ja
pushl
jmp
hlt
aas
cmp
adc
and
ds
cmpb
ds
cs
ljmp
addb
push
test
mov
mulb
xchg
or
push
push
cld
incl
xorb
scas
mov
dec
ret
add
sbb
clc
addr16
clc
pop
test
xchg
add
pop
lahf
push
aam
xchg
outsl
push
sub
in
jb
pushl
insb
xor
fsubrl
or
or
mov
iret
sbb
je
inc
cld
clc
push
loop
or
mov
fisttpl
and
decl
cld
push
cmp
mov
xchg
adc
dec
scas
incl
xor
data16
js
fnstenv
push
out
rolb
push
incb
mov
and
jge
int
push
push
int
int
dec
jl
js
xor
cmpl
or
jno
aaa
mov
or
jg
jg
jge
div
adc
stos
sub
pop
je
add
cmp
or
std
jge
add
add
pop
mov
sti
mov
movl
sbb
mov
pop
aas
mov
lcall
cmp
test
pop
addps
out
pop
mov
push
loopne
ret
arpl
mov
je
mov
sub
mov
mov
ficoms
jmp
aam
mov
add
dec
ljmp
pop
leave
and
add
icebp
imulb
add
loop
loop
dec
insl
push
jmp
dec
ljmp
mov
clc
xchg
shl
decb
dec
mov
push
sbb
stos
ljmp
insl
out
stos
loopne
je
pop
scas
mov
sbb
inc
mov
test
mov
sbb
add
or
icebp
ret
lret
ljmp
hlt
fstps
lret
push
fstpl
imul
je
mov
adc
fstpl
loop
lods
int3
daa
jecxz
les
sar
inc
sbb
adc
push
or
add
ljmp
jecxz
cmc
xlat
mov
out
int3
pop
or
inc
mov
pop
mov
fidivl
add
xor
ja
or
adc
pop
call
mov
push
mov
fistpll
and
cltd
push
unpcklps
push
ljmp
dec
sbb
jno
push
jl
or
stc
pop
jmp
cmp
sti
incb
lock
fs
rcrb
pop
mov
std
call
xor
or
loopne
cmpsb
sbb
lods
or
jg
jl
sahf
js
loope
movl
jmp
or
pop
jnp
aaa
in
mov
decl
loop
sbb
cmpl
jg
call
or
sub
add
je
push
das
in
mov
jmp
sbb
shrb
mov
outsb
push
push
sbb
add
imul
lret
ss
pop
add
xor
inc
hlt
or
lock
xlat
pop
mull
call
add
xor
jne
or
ja
and
shufps
sbb
jmp
xchg
cs
in
es
or
sub
decl
xchg
lods
les
enter
or
mov
mov
pop
or
adc
sbb
xchg
imul
adc
cmp
cmpsl
mov
aaa
ret
mov
sub
insl
enter
jg
insl
or
xor
jae
stc
add
jg
pop
jne
pop
fidivrs
testl
sbb
inc
adc
jle
ljmp
push
xor
sbb
call
shrb
or
jbe
aas
mov
test
jne
ja
add
test
adc
sbb
sarb
xchg
or
pop
push
pop
ljmp
mov
pop
dec
push
and
aaa
pop
cmc
sub
fnstsw
add
loopne
pop
lods
add
aaa
add
ss
test
adc
add
fsubrp
decl
stos
dec
cmp
adc
lahf
into
loopne
iret
push
rcrl
mov
scas
mov
sbb
or
incl
adc
es
insb
jnp
ds
imul
insl
xor
mov
scas
es
ja
push
inc
mov
sbb
ss
daa
adc
pushl
loop
or
addl
xor
arpl
add
cld
sbb
sbb
aas
pop
jo
rcll
push
std
outsl
incl
stos
cli
shll
std
push
push
cmpsl
cli
aaa
cli
outsl
pop
mov
pop
jge
call
fdivrl
das
icebp
pushl
push
fisubrl
pop
and
mov
test
les
or
lds
jbe
andb
sbb
sub
pop
outsl
mov
inc
decl
add
mov
or
push
xchg
push
out
repnz
jmp
mov
inc
push
les
add
loopne
or
mov
add
inc
decl
push
fisubrl
fdivr
push
sub
push
mov
add
fnstenv
and
mov
lahf
lret
fcoms
ljmp
stos
jecxz
push
dec
or
jbe
divl
lret
pop
stc
xor
mov
push
jg
xor
leave
adcb
and
xchg
push
add
mov
sub
call
adc
jg
cld
and
pop
aam
add
cmp
je
xor
jg
fcoml
adc
sub
pop
aam
xchg
sub
sarb
std
cld
pop
add
jmp
cmp
pop
xchg
cmp
push
push
popf
pop
push
fisttpll
push
mov
push
fisubrl
mov
sbb
jo
lock
xor
xchg
cli
and
decb
loopne
add
call
fisttps
push
fcompl
xorb
ds
sbb
mov
ljmp
inc
xlat
cmp
xchg
dec
and
pop
push
dec
roll
sbb
pop
loopne
mov
mov
jae
pusha
and
xor
push
orl
sbb
pushl
xor
fsubp
sbb
orb
pushf
xchg
sbb
ficoms
loopne
mov
add
push
mov
fimuls
in
mov
scas
or
push
jp
push
xchg
outsl
cld
push
mov
pop
hlt
lcall
dec
add
push
ljmp
cmc
ds
mov
shl
aad
push
fidivl
aad
sub
in
rorb
push
fildl
ss
loopne
in
and
mov
xor
mov
mov
cld
jge
int
mov
push
push
fs
sbb
sar
mov
mov
mov
loop
and
sub
clc
incl
jno
push
cmpsl
inc
rcl
mov
pop
cmp
mov
incl
xchg
aas
clc
mov
test
mov
or
pop
lock
cli
pop
cli
push
ja
mov
imul
xor
jne
mov
jmp
pop
imul
cmp
xchg
pop
mov
std
sbbl
jg
aam
aad
mov
insl
add
scas
cld
push
or
push
and
inc
jg
fidivs
sbb
fisttps
xchg
insb
lahf
dec
outsb
inc
mov
repz
mov
mul
inc
push
add
pop
sbb
mov
rcrl
inc
add
jge
xchg
push
hlt
pop
test
in
fdivrp
pop
cli
lcall
mov
adc
push
push
test
out
stos
dec
cmpsl
cmpsl
add
mov
push
dec
test
loop
test
mov
or
ss
or
fwait
xchg
pusha
add
call
ss
push
stos
pop
mov
bound
adc
or
inc
cld
dec
jae
ds
push
imul
cs
push
dec
or
and
sbb
pusha
test
inc
iret
add
es
jne
incl
inc
dec
push
mov
inc
mov
inc
inc
cs
sbb
add
je
scas
fildl
inc
test
pop
loopne
push
test
ds
push
ret
adc
push
push
jbe
push
std
push
and
sub
mov
lock
inc
jnp
loop
pop
andl
pop
mov
shr
inc
or
pop
rclb
inc
push
call
stos
xor
adc
movsl
xchg
add
insb
inc
cmp
cmp
mov
data16
daa
inc
inc
mov
ret
adc
movsl
add
lods
sbb
adcb
and
ja
mov
std
lcall
fimuls
ds
adc
and
jg
loopne
push
push
mov
js
and
adc
push
pop
ljmp
clc
scas
mov
jbe
cld
mov
or
or
xor
jl
sub
ljmp
and
ljmp
mov
or
pop
repnz
pushf
lret
mov
jl
ret
inc
fwait
adc
andl
xchg
or
jecxz
jmp
rcrl
jae
adc
mov
add
hlt
incl
push
test
sbb
or
mov
lret
sub
jg
in
dec
sub
add
call
loop
adc
jne
cmp
lcall
cmp
rcll
sbb
out
lahf
add
jo
nop
adc
outsl
or
sbb
cmp
and
je
sbb
incl
and
ret
sub
idivl
xchg
pop
pop
jmp
cli
push
adc
push
das
lock
ljmp
aaa
fwait
and
and
mov
cmp
loopne
push
mov
lahf
out
in
ja
or
add
jl
in
pop
movsb
cmc
jmp
dec
pop
add
inc
pop
test
push
adc
pop
or
jg
test
sbb
push
mov
and
incl
fildl
leave
adc
ret
xchg
mov
sti
out
jmp
cmpb
outsl
jg
and
or
cld
jg
and
nop
sub
psubsw
inc
cmp
pop
mov
das
rol
xchg
daa
cmp
mov
push
incl
call
mov
mov
mov
pop
das
inc
inc
cmpl
or
call
push
lds
cmp
cmp
je
push
or
cli
sbb
icebp
aas
dec
sub
push
push
imul
ljmp
fistpll
std
aaa
pushl
pop
incl
sub
mov
in
xchg
test
ds
sub
incl
sbb
and
adc
ja
mov
pop
fisttps
push
add
aam
pushl
clc
es
xor
outsb
das
shll
push
push
xor
and
aaa
clc
das
hlt
pop
pushf
mov
xchg
mov
cmp
outsb
das
call
incl
insb
loope
les
inc
cmc
push
jmp
adc
fwait
sub
pop
clc
incl
incl
add
cli
mov
lds
mov
inc
clc
aam
sti
in
pop
stos
push
pushf
add
push
mov
mov
inc
and
aad
into
or
pushl
mov
fistpl
inc
adc
mov
mov
sbb
mov
call
gs
sub
je
or
or
jae
mov
xor
adc
incl
adc
js
adc
add
loop
popf
jmp
lods
xchg
decb
mov
scas
rcl
das
pop
daa
inc
sub
push
add
test
call
je
xchg
or
add
pop
andl
mov
sbb
sti
lea
sbb
mov
dec
push
sti
fisttps
jle
ja
lret
movb
inc
in
sbb
cmpsl
or
push
or
fdivrs
je
test
sbb
popa
ret
push
pop
sbb
jbe
outsb
inc
inc
add
mov
femms
cltd
movl
jge
das
hlt
sbb
adc
aas
call
push
mov
mov
lock
testb
aad
ljmp
repz
jnp
mov
in
jmp
add
cmp
out
test
pop
ljmp
add
call
jbe
rcr
ss
or
ret
mov
shlb
and
mov
stc
push
repnz
das
lea
mov
pop
xchg
and
lcall
or
leave
call
jmp
xor
je
sbb
mov
movsl
jo
and
or
push
test
add
fsubr
insb
sahf
jl
push
lea
push
dec
adc
or
je
pusha
cwtl
xor
jbe
in
je
inc
jmp
movl
into
test
clc
mov
push
jg
cli
lcall
jg
push
jno
pop
dec
in
inc
or
push
sbb
adc
mov
das
cmc
jmp
xchg
out
mov
mov
insb
add
movb
mov
mov
add
test
mov
js
cld
jmp
jne
fs
jg
std
mov
fdivrl
sbb
xor
out
movsl
jl
lock
lcall
arpl
mov
aas
sti
rolb
jg
pop
decl
add
jle
inc
mov
xor
pop
push
lods
sarl
push
and
ljmp
jl
jecxz
push
inc
mov
mov
fstpl
mov
cmpsl
jle
or
movsl
push
mov
mov
pop
push
hlt
push
fldl
fiaddl
ret
shlb
mov
jl
push
in
cmp
lcall
dec
mov
cmp
xorl
negb
mov
dec
mov
cmc
pop
insb
mov
cmp
pop
push
data16
fisttps
dec
aas
jl
mov
rolb
orb
in
mov
dec
jmp
or
add
addb
ljmp
in
dec
je
jl
mov
pusha
jo
test
orl
pop
jbe
das
sub
push
test
adc
and
add
popa
test
imul
icebp
aad
call
push
lea
push
or
leave
mov
outsl
lods
push
or
fdivp
dec
add
icebp
push
shl
out
fidivrs
xchg
sbb
sbb
insb
imul
pop
scas
call
cmp
jg
push
add
icebp
push
push
icebp
inc
sub
cltd
push
lock
fldl
xor
pop
sub
jmp
xor
outsl
loopne
lret
mov
cmp
sub
cld
outsl
aad
sbb
jns
out
fucomip
cmp
add
ljmp
das
pop
inc
stos
das
sub
dec
mull
adc
sbb
add
out
xchg
adc
adc
and
fcoml
das
outsl
sub
jmp
lea
sbbb
add
or
or
into
aad
decl
and
movsb
adc
mov
adc
push
scas
inc
dec
rolb
sahf
push
cmpsb
ja
pusha
adc
xchg
mov
sub
std
add
cmpb
sti
sub
jg
dec
adc
mov
in
loop
adc
test
pop
jl
ljmp
fs
xor
dec
and
shll
fsubrs
shl
ljmp
hlt
sub
stc
pop
movsl
dec
pop
js
cmp
adc
mov
or
sar
ljmp
add
loop
sbb
sub
pop
add
mov
sbb
cmc
add
lea
mov
loop
add
hlt
mov
sub
aaa
outsl
xor
lret
sub
jo
push
sub
clc
jg
pop
pop
sub
mov
xor
aaa
cmp
ss
in
mov
imul
cmpsb
stos
push
add
incl
push
lds
imul
xchg
adcl
add
mov
arpl
mov
push
xchg
or
add
jge
mov
aaa
mov
mov
and
into
push
shrl
push
scas
stc
jg
outsl
push
jne
xchg
push
loope
lock
lock
insl
mov
jbe
idiv
incl
insb
insl
ds
nop
out
and
xor
xor
das
inc
mov
push
fstps
leave
neg
add
mov
sub
add
inc
imul
aam
inc
inc
mov
fists
ljmp
popl
int3
mov
jecxz
out
sub
negl
repnz
dec
lret
mov
or
insb
repz
in
loopne
cmpsl
ljmp
dec
adc
fiaddl
push
cmp
inc
icebp
incl
jae
lea
int
out
rcrb
xlat
cmp
ja
sbb
pop
cmc
loope
push
inc
jno
aam
mov
mov
dec
add
scas
and
cmp
je
sbb
mov
sti
stos
or
rcrl
xor
in
aad
jg
pop
leave
push
jecxz
mov
mov
add
inc
adc
decl
mov
scas
lods
mov
clc
movsl
mov
test
sub
dec
cld
ljmp
pop
pushf
cmp
adc
shl
xchg
fsubs
test
pop
sbb
dec
cmc
incl
push
push
fsubrp
adc
xor
fldenv
pusha
js
outsl
cmp
xchg
data16
lods
incl
das
movsb
adc
in
sub
xor
jb
stc
or
clc
call
movb
mov
or
sub
mov
or
es
push
push
jno
std
lcall
sarb
inc
mov
test
jl
xchg
lret
fs
das
jb
lods
negb
inc
add
icebp
jg
add
pop
loop
jg
je
push
cmp
xchg
push
mov
xor
call
pop
pop
jmp
mov
pushf
mov
sbb
decl
shll
shlb
jmp
sub
xchg
or
add
cmp
insb
pop
pop
enter
or
das
hlt
pushl
cmp
push
inc
or
stos
add
es
inc
adc
cli
lcall
sub
lret
shlb
fdivrl
sbb
pop
add
ljmp
or
sbb
add
pop
mov
pop
icebp
mov
mov
jg
jns
fsubs
or
ja
insb
out
roll
xchg
orb
adc
pop
mov
sar
ljmp
clc
cmp
jge
mov
out
scas
lock
mov
xchg
mov
jb
rol
sbb
fistl
sbb
cmp
insb
cmp
int3
jl
adc
mov
jb
les
and
push
lock
mov
mov
jmp
or
xor
inc
jo
loopne
ja
jl
pop
ret
push
jae
add
icebp
call
push
sbb
or
mov
or
push
xchg
jl
jbe
daa
or
xor
xlat
pop
inc
call
pop
aad
out
std
cmc
xor
push
dec
xlat
xor
jo
mov
push
ds
call
pushl
mov
push
leave
or
or
mov
dec
sbb
insl
xor
mov
test
inc
ljmp
mov
adc
fucomip
fcmovnbe
ljmp
add
int
and
test
negl
call
jb
cmp
ja
jb
cmp
cs
sub
dec
push
pop
jecxz
fcomps
lods
mov
sub
outsb
or
pop
clc
jg
jmp
and
push
outsb
sbb
adc
outsb
enter
jne
lcall
or
or
fimull
pop
or
lcall
jmp
pusha
pop
inc
xchg
xchg
jecxz
add
jne
dec
cmc
nop
bound
pop
clc
ljmp
push
pop
out
pusha
filds
or
mov
mov
add
or
push
into
addl
mov
cmp
sbb
add
shlb
jle
jmp
ds
mov
ret
lea
incl
adc
xor
aam
mov
fisttps
aam
or
xchg
pop
xorb
push
jecxz
nop
decb
sar
ljmp
sub
push
cltd
add
inc
pusha
xlat
push
adc
lea
mov
call
and
sbb
fbld
mov
ljmp
mov
lcall
push
dec
pop
and
add
dec
clc
aad
push
incl
pushf
insl
xor
mov
inc
push
jmp
jo
or
or
outsl
cld
xchg
and
pop
cmp
push
xor
cwtl
daa
adc
lea
jmp
pusha
push
inc
and
add
sub
fcoms
cmpsb
aas
mov
jmp
out
std
pop
cmp
pop
jge
pop
mov
adc
or
sub
loop
aam
movb
and
aaa
xor
cmp
add
lock
add
xchg
sti
mov
je
mov
mov
cli
mov
outsl
hlt
clc
jbe
pop
and
and
nop
daa
in
ljmpw
lock
sbb
cmpsb
outsl
inc
sbb
jb
fcomip
sahf
add
pop
in
push
call
mov
sub
lods
cmp
insb
movsl
out
scas
clc
mov
scas
jns
out
ficompl
mov
mov
dec
incl
xchg
dec
push
cmp
in
sub
ret
notl
cmpl
or
push
fstpt
xor
sbb
push
sub
or
mov
xor
pop
stc
push
adc
pop
pop
pop
or
mov
aam
sbb
in
jmp
push
movsl
sub
aaa
xor
in
jle
dec
je
mov
adc
js
push
sarb
or
insb
fimuls
roll
pop
mov
call
pop
in
add
lret
fdivr
out
sti
xor
push
xor
mov
in
icebp
std
pop
lcall
add
hlt
mov
movb
sbb
push
pusha
mov
lret
push
hlt
sbb
sbb
adc
push
jb
loope
mov
lea
loope
rep
inc
inc
mov
jg
push
rcrb
xlat
lock
cli
xorl
ljmp
hlt
call
push
push
mov
dec
negb
xor
and
cld
push
cli
mov
pop
mov
pushl
jp
out
out
push
movsb
je
cli
adc
nop
pusha
inc
fsts
mov
addl
into
and
mov
adcl
jmp
adc
lock
in
stos
dec
insl
in
push
bswap
adcb
sti
ss
in
popa
jb
add
call
add
ja
dec
sbb
push
fmull
mov
adc
enter
pushf
pop
cld
rclb
add
lahf
xor
inc
push
and
inc
jg
or
sbb
insl
sbbb
jo
pushl
call
jle
mov
sub
je
daa
push
xor
mov
push
mov
repz
cld
mov
mov
cmp
push
adc
push
bound
mov
adc
jmp
neg
call
add
popa
lahf
scas
jmp
and
jp
cmpsb
push
clc
frstor
or
sti
mov
add
push
dec
jb
mov
pop
ss
jecxz
sub
push
stc
test
or
rcl
vmovdqa
sbb
add
test
lock
jb
mov
incl
pop
ficoms
push
roll
and
std
sub
adc
and
sbb
or
jg
xchg
pushf
sub
xor
lret
jne
mov
jae
jmp
push
xor
push
test
cmp
xchg
lcall
or
insb
hlt
call
xor
xchg
xor
pop
outsl
mov
sub
dec
lahf
jne
ljmp
or
jmp
push
pop
xchg
lea
ljmp
call
or
xor
je
push
lods
jge
and
testb
pop
mov
je
mov
js,pt
adc
xchg
aaa
clc
jmp
push
and
ja
push
or
inc
aas
pop
ficomps
push
lahf
stos
cmp
cld
ljmp
push
and
cmp
mov
in
pop
jp
pop
roll
je
dec
or
and
cld
das
cli
decl
std
pushl
mov
out
cs
mov
in
dec
add
add
das
add
call
hlt
sbb
mov
mov
pop
ret
test
ljmp
mov
orb
mov
pop
lds
adc
mov
sar
fidivs
mov
inc
cmp
mov
lds
stc
or
ljmp
cmc
mov
lock
imul
sahf
out
inc
rorl
fs
jge
lcall
std
inc
sub
ficoml
call
cwtl
sbbb
sub
mov
add
ljmp
lds
mov
fstl
push
cs
and
incl
decl
jmp
pop
sub
in
or
sbb
mov
call
jg
mov
pushf
mov
mov
jb
push
stc
dec
cmp
decl
test
xor
push
sti
enter
jb
sbb
jo
sub
mov
insb
sbb
or
push
cmp
je
or
and
jne
mov
fistpl
mov
and
addr16
ret
test
xor
jbe
mov
jne,pt
outsb
aaa
clc
ljmp
push
scas
jge
das
jmp
sbb
cmp
sub
mov
pop
jno
incl
fs
orb
mov
and
loopne
xchg
clc
shll
and
dec
nop
jl
or
add
adc
incl
pop
mov
and
adcb
call
loop
imul
fidivrs
ret
push
inc
decl
call
addb
adc
and
in
sbb
clc
add
data16
or
sbb
or
cld
jg
jmp
ret
push
sbb
inc
sbb
das
cmc
ljmp
call
sub
inc
add
xor
test
xor
add
dec
pop
and
dec
cmp
call
cmp
mov
leave
add
pop
push
and
mov
pop
rcr
lcall
pop
int
push
stos
adc
fisubrl
mov
xorb
xlat
das
fadds
testb
cld
fwait
inc
add
jle
aam
mov
lcall
pop
fldl
lock
add
lcall
xor
add
mov
loopne
mov
cmp
fdivl
mov
and
jmp
pop
sbb
cltd
pop
xchg
adc
pop
aaa
lcall
add
xor
lock
movzwl
add
jmp
cld
fistps
ljmp
adc
adc
or
or
stos
push
es
pusha
pop
mov
stos
ljmp
ljmp
pop
fists
inc
pop
add
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
inc
sar
fbld
push
inc
dec
inc
inc
push
inc
inc
add
fistpll
ds
loop
arpl
add
mov
or
add
add
add
popa
sub
push
pop
pop
out
fucomip
push
add
jl
jg
sbb
or
pusha
add
sub
add
loop
nop
jmp
mov
push
add
mov
jne
insb
add
iret
icebp
pop
pop
sub
push
icebp
fucomip
sub
mov
fstpt
inc
fwait
add
andb
add
imul
mov
imul
lods
cmc
mov
aad
in
fsts
inc
push
dec
dec
inc
in
das
loopne
outsl
add
dec
inc
adc
push
xor
cmp
fcmovnb
lret
sbbb
fucomp
and
stos
fidivrs
jae
imul
inc
aad
pop
or
aaa
outsb
outsl
inc
aad
clc
mov
pop
jne
push
fists
outsl
cs
cmp
adc
ss
rclb
js
sahf
inc
ret
fs
jne
ljmp
stos
xor
mov
mov
and
arpl
ljmp
xor
mov
sub
pop
das
pop
push
das
in
fs
fsub
pop
xor
imull
fdivs
mov
outsl
pcmpgtb
arpl
fcompl
or
inc
and
gs
aaa
adc
sbb
aaa
fidivl
mov
insl
lods
je
mov
pop
and
pop
fdivl
aaa
test
fdivs
mov
add
and
inc
incl
mov
das
xor
jbe
outsl
icebp
dec
sbb
rcr
inc
sub
cmpsl
nop
iret
jb
sub
jb
popa
or
addr16
jae
pusha
sub
xorb
hlt
pushl
jo
loopne
es
sub
or
adc
ljmp
sub
push
cmp
add
jb
daa
or
insl
jae
adc
cmp
pop
sbb
pop
fisttps
and
sub
insb
ja
ds
push
jnp
adc
aas
push
hlt
mov
inc
push
jbe
push
mov
in
mov
push
jno
xorps
cmc
mov
push
mov
outsl
js
jae
xor
test
mov
or
cmpsl
adc
lcall
decl
sbb
mov
pushf
dec
je
mov
out
clc
jmp
jno
push
rorl
fcoms
jp
xchg
stos
aad
shrb
scas
pusha
bound
aad
test
lcall
xor
imul
xor
repz
test
mov
scas
std
mov
sub
pushl
mov
and
add
sbb
ds
adc
xchg
rorl
frstor
mov
mov
dec
popa
in
test
test
add
and
mov
or
gs
or
jg
scas
js
lock
sbb
adc
jae
pop
dec
lret
lods
test
incl
aas
cmc
call
mov
test
dec
sub
jno
call
add
mov
ffreep
jbe
sub
mov
xchg
es
mov
aaa
and
aam
jecxz
sub
testl
sar
rorl
pop
lea
rolb
movsb
andl
and
mov
sub
push
mov
cltd
jae
push
push
sub
mov
punpckhbw
push
cmp
add
sbb
ljmp
mov
insl
xor
sub
xchg
mov
pop
and
andb
ja
cs
or
lock
call
movsl
cmp
inc
arpl
xor
fincstp
bound
aas
pop
fsubrp
pushl
clc
pop
test
push
push
jbe
lods
cltd
es
dec
inc
dec
push
test
lock
dec
dec
imul
arpl
fists
sti
lcall
add
push
pop
adc
pushf
xchg
ss
xchg
jg
test
xlat
int3
out
cltd
imul
mov
not
addr16
pop
cmc
outsl
cld
outsl
scas
or
sahf
filds
bound
inc
lods
out
mov
lock
fistpll
outsl
imul
mov
xchg
mov
push
jmp
out
insl
push
call
aaa
rol
loop
rol
jg
mov
sbb
daa
mov
into
jl
movl
pop
mov
cmp
xor
imull
mov
xchg
fucom
jg
jo
fbld
in
mov
jne
push
incl
mov
aad
sbb
lcall
adc
pushl
push
lret
xor
es
daa
or
clc
dec
mov
ret
or
pop
xchg
jmp
pop
ljmp
cmp
xchg
add
xchg
push
sub
jg
or
jle
scas
adc
in
fistpll
xchg
jl
fldenv
lret
adcb
mov
add
mov
fsubs
and
mov
jg
jg
pop
sub
dec
cmpsb
mov
movl
outsl
fnstsw
bound
adc
jge
in
jg
lcall
stos
xor
popa
in
inc
loope
xlat
iret
fwait
aam
fmul
in
inc
xchg
aas
lcall
mov
lods
xor
mov
inc
scas
lock
repz
pop
mov
mov
lret
sbb
mov
mov
mov
xorb
sahf
psubq
stos
hlt
lcall
sub
leave
hlt
mov
outsb
cmpsb
xor
and
incl
scas
arpl
ret
outsl
fcomps
pop
popa
pop
fdecstp
scas
pushw
in
mov
sahf
scas
faddl
loope
adc
xchg
pop
sti
cmp
pushl
incb
fsubr
mov
mov
add
xor
pop
and
std
decl
inc
mov
cltd
mov
push
aas
or
daa
push
int3
fimuls
xchg
aaa
push
mov
out
fwait
xchg
addl
sub
call
in
mov
movsb
fsub
add
test
daa
dec
cmpsb
int
loopne
enter
push
jmp
movsb
test
mov
push
bound
out
xchg
loope
addl
call
pop
clc
push
xor
mov
fstl
jbe,pn
pop
inc
daa
dec
dec
std
xchg
cld
push
push
ja
jle
xchg
pop
loopne
test
popa
xchg
cmp
mov
outsl
out
daa
je
mov
call
sahf
push
ret
mov
fsubrp
add
sub
testl
lcall
std
push
push
dec
sbb
fistpl
xchg
int
lods
jg
lahf
popf
jp
fbld
xchg
jle
push
or
incb
cmp
test
std
push
popa
movsl
jle
aaa
jl
xchg
inc
shlb
dec
xor
sbb
ljmp
inc
movsl
mov
mov
lahf
and
or
out
jae
push
sbb
fs
ud0
fnstcw
add
inc
mov
test
call
sbb
loopne
out
scas
xchg
mov
and
push
incl
fcmovne
inc
adc
xor
sbb
leave
push
negb
pushf
mov
sub
dec
cmpsb
imull
test
jecxz
int
pusha
mov
js
ljmp
ljmp
call
sub
in
rcll
int3
push
sbb
jne
lock
jg
imul
xchg
iret
stc
sbb
fadds
sub
pushl
in
adc
shlb
pusha
fsubrl
out
push
roll
lret
lret
cmp
inc
loop
decl
dec
push
incl
fisttps
dec
adc
mov
popa
jns
add
jg
push
xchg
inc
mov
xlat
fistl
test
mov
jae
aas
fs
jecxz
int3
hlt
insb
fucomi
clc
call
enter
or
movsl
add
movsl
pop
mov
push
mov
sbb
pop
or
and
lods
sbb
push
push
jecxz
mov
push
clc
icebp
jl
iret
jmp
aad
sbb
jno
idiv
fistpll
dec
adc
jecxz
test
pop
into
mov
fisubrs
or
std
adc
push
cmpsb
pop
test
aad
mov
call
aaa
cmp
cmp
mov
dec
std
arpl
icebp
pop
aas
dec
rclb
lcall
jno
ret
jne
outsl
jle
adc
bsr
addl
mov
das
jne
clc
insl
cmpsb
push
fcmovnbe
mov
insl
shrl
pop
call
sub
stos
imul
push
adc
push
mov
ljmp
mov
int
fwait
icebp
test
sbb
sbb
mov
test
insl
sahf
iret
popa
push
fcompl
dec
jmp
pushl
das
inc
orl
mov
inc
stos
shll
sbbb
inc
mov
pop
popl
pushl
fisttpl
pop
jb
es
xchg
cli
or
inc
mov
mov
movlps
lcall
mov
aad
inc
int3
adc
aad
sub
and
loop
fcmovnbe
fsubrs
push
jno
sar
call
xor
callw
incl
cmp
in
inc
mov
adcl
jbe
scas
test
mov
cmpsl
mov
sub
fstps
jg,pt
dec
outsl
call
pop
xchg
bnd
jmp
int3
jmp
scas
xchg
dec
jb
sbb
adc
jmp
pusha
jp
jmp
int
jecxz
mov
imul
fldenv
jb
adc
mov
add
es
fldenv
mov
out
rcl
or
loop
push
das
hlt
jg
push
or
aas
pop
xor
jmp
mov
mov
es
bnd
dec
pop
aad
cld
sbb
push
addl
add
stos
dec
cmp
mov
mov
pop
fcmovne
fdivs
and
mov
mov
aas
jge
cwtl
adc
fcmovnbe
lcall
mov
in
clc
in
xchg
fadds
and
decl
clc
ss
sarl
cli
repnz
or
lea
adc
jne
add
movsb
mov
das
hlt
in
js
movaps
mov
xor
cli
lcall
test
lahf
and
dec
je
pop
jecxz
adc
fstpt
cmc
out
push
dec
stos
stc
pop
loop
xor
dec
push
icebp
xchg
pop
rolb
fistl
inc
push
mov
dec
pushl
std
imul
dec
bound
stc
lock
fnsave
cltd
cmp
fucomip
mov
adc
les
int3
nop
ja
jp
aad
mov
sbb
call
movl
mov
pushl
inc
mov
dec
add
cmpsl
push
xchg
xchg
or
dec
cld
mov
jge
push
mov
bound
jg
cmp
inc
xchg
adc
shrb
in
test
into
mov
in
pop
jmp
adc
sti
fxam
jecxz
dec
test
xchg
cli
cmp
sbb
sahf
sub
lret
jecxz
push
repz
jmp
inc
jns
test
jbe
lret
test
adc
or
push
fwait
cld
sub
sub
sub
incl
inc
nop
movsl
pop
leave
lcall
sbb
push
xchg
imul
cli
js
xor
push
xlat
sarl
sub
fucomip
cmp
xchg
mov
push
sbb
ljmp
fisttps
mov
xchg
push
jae
sbb
addr16
aam
push
ret
ja
inc
xchg
jg
push
test
or
fwait
push
dec
scas
cltd
mov
mov
sbb
cmp
lret
inc
pop
push
jl
movsb
sub
push
ret
idiv
dec
push
dec
out
stos
jge
cmp
mov
jmp
mov
mov
mov
xor
and
fnstenv
inc
loope
add
jmp
sbb
sahf
xchg
mov
pop
cld
xor
ret
dec
or
leave
and
shlb
ss
repnz
push
fwait
push
decl
pusha
mov
js
mov
aas
scas
cmc
xchg
cli
push
or
std
cld
push
push
fsub
lcall
cmc
sub
jp
or
push
pop
out
or
gs
push
xor
pop
mov
ljmp
sti
mov
jg
popa
sbbl
or
decl
pushf
sbb
mov
or
dec
or
or
lcall
push
dec
jno
mov
and
lcall
outsl
popf
push
push
loopne
fcomip
mov
sbb
mov
cmpsb
dec
push
call
or
decl
ss
and
mov
arpl
test
decl
es
mov
jg
mov
loopne
aas
mov
jge
push
adc
std
call
jmp
movsl
or
pop
ja
std
paddusb
jmp
jmp
daa
shlb
jns
movsl
fiadds
pushl
cli
xchg
jb
push
int3
sbb
in
stos
loopne
sub
push
push
jmp
decl
add
mov
jbe
ja
aad
hlt
inc
push
dec
cmp
or
pop
xchg
sub
stos
xlat
ljmp
push
clc
repnz
jge
cmc
lea
cmpsb
mov
mov
test
or
push
imul
loope,pt
jne
inc
cli
mov
clc
pop
add
ss
dec
ljmp
jg
lahf
outsb
int
scas
push
jecxz
xor
xor
sub
sbb
pop
into
dec
imul
pop
inc
movl
adc
push
push
push
ljmp
mov
xchg
les
in
sub
push
cld
decl
aam
pop
mov
incl
rorl
hlt
adc
bndstx
call
inc
ds
adc
loop
call
cmpsl
repz
lock
leave
mov
xor
xorb
lret
addr16
xor
lods
sbb
imul
sbb
js
xor
decl
mov
sub
jbe
adc
push
inc
int
mov
sbb
mov
and
sahf
ljmp
mov
clc
xor
fstl
cmpsb
ljmp
sbb
push
imull
rcrl
lcall
scas
xor
xor
cmpsl
xor
in
lods
mov
js
jae
lcall
cli
pop
jle
mov
ja
test
out
jecxz
cmp
jmp
add
mov
mov
mov
dec
inc
ljmp
sbb
inc
mov
ljmp
aad
sbb
arpl
aas
ljmp
bound
xchg
gs
xlat
pop
std
dec
push
jnp
cmpsb
cmc
mov
repz
sub
shl
es
movsb
pop
push
dec
dec
cs
sahf
pop
dec
je
or
cmc
dec
mov
inc
cmpsb
add
out
jle
mov
push
leave
push
jg
jle
je
sbb
add
inc
lret
dec
mov
stos
fs
test
mov
into
ja
jg
loope
test
mov
out
iret
dec
outsl
cmp
inc
or
or
loop
lods
dec
jo
aas
or
add
jmp
dec
or
nop
andnps
les
leave
mov
jno
rorb
mov
mov
or
cli
mov
inc
cmpsl
pop
pop
jg
sub
xchg
jbe
dec
jp
in
mov
pop
loope
or
adc
cmp
lcall
sti
das
icebp
pop
lcall
imul
inc
incl
mov
repnz
push
xchg
jnp
mov
in
or
out
or
icebp
pushl
push
xor
xchg
pop
inc
test
shlb
lcall
xchg
jmp
fwait
push
hlt
stos
jb
lcall
ret
sub
jg
dec
pop
jae
jge
pop
movsl
in
pusha
iret
mov
add
repnz
mov
inc
add
incl
and
fmul
stc
add
sub
cld
inc
ds
inc
jnp
cmp
mov
cmpsl
std
adc
xchg
fwait
pop
in
testl
jmp
jle
inc
push
xor
in
ret
sbb
sub
mov
test
fadds
jg
jnp
xchg
xlat
pushf
ret
lds
adc
jb
mov
or
add
inc
cmpsb
cmp
popf
cmp
stos
imul
adc
sti
test
mov
jl
dec
and
adc
mov
dec
push
mov
and
cmp
sti
incl
daa
test
fidivs
mov
lret
movl
jbe
mov
mov
out
add
jns
lret
adc
test
lcall
imul
jp
nop
xor
xchg
cmc
repz
daa
mov
pushl
orl
movsb
push
insl
or
insb
andb
test
clc
ljmp
popa
in
cmp
push
sub
lods
lods
adc
fists
decb
and
cmp
mov
pop
sub
sub
sbb
fs
dec
xorl
xlat
cltd
sbb
ret
xor
sar
jg
popf
add
cmpsl
ds
mov
jg
sbb
mov
popf
lcall
dec
mov
sub
je
dec
pop
mov
mov
sbb
mov
mov
jg
pushl
shl
cmp
out
mov
mov
das
sbb
lret
jbe
sbb
pop
scas
stos
outsl
call
pop
xchg
adc
sbb
dec
cli
cmp
stos
jg
lret
xor
xor
movsb
out
jg
sbb
clc
pushl
cmc
adc
cli
sbb
or
fiaddl
xchg
push
add
jnp
int
clc
call
aad
testb
mov
and
mov
ret
andl
dec
mov
adc
int
test
out
dec
xchg
cmp
add
dec
and
mov
jne
mov
jg
adc
les
jmp
call
jmp
test
fsubrs
and
lret
push
enter
std
jmp
mov
jo
xchg
stc
cmp
pop
aaa
into
and
jo
inc
cli
popa
cmp
lock
push
sub
in
les
jl
xchg
inc
fists
stos
out
inc
dec
data16
pushl
jmp
pop
sar
std
sub
addl
jge
call
decb
jg
push
sbb
mov
sti
adc
leave
lcall
aaa
lcall
cs
push
loopne
lret
ljmp
push
xchg
fucomp
pop
sar
dec
adc
xor
out
insb
jne
mov
sbb
cltd
mov
mov
test
add
inc
jbe
clc
incl
jecxz
push
adc
pusha
ja
dec
mov
mov
jg
jge
cs
fidivrl
imul
ror
sti
or
lods
pop
rolb
outsl
push
loop
in
inc
sbb
clc
push
pusha
icebp
xchg
pop
cwtl
inc
mov
std
pushl
leave
je
dec
adc
mov
pop
mov
bound
cmp
fadd
mov
decl
fisubl
js
int
sbb
mov
cmpsb
lret
dec
mov
sbb
leave
or
rorl
lock
shrb
nop
push
adc
jecxz
cmp
aaa
insb
inc
lcall
xor
pop
cmp
sub
mov
inc
out
adc
add
movsl
xchg
push
dec
ljmp
cmp
cmp
inc
scas
outsb
data16
cltd
cmp
fnstsw
test
lret
xor
cwtl
divl
jno
mov
fxch
lcall
cli
jb
jge
gs
jge
add
push
add
mov
or
mov
dec
jg
add
dec
or
stos
ret
popa
jo
sti
fmuls
xor
xchg
jg
push
jg
outsl
aam
lret
cmp
push
add
fwait
repnz
lods
ret
inc
arpl
incl
adc
push
testb
ss
out
clc
decl
cld
xchg
clc
aaa
xchg
or
out
movsb
dec
repz
scas
in
mov
sbbb
add
and
ljmp
and
cmp
pop
push
inc
mov
sar
or
imul
cmpsb
stos
dec
lods
jmp
ja
dec
sbb
dec
sbb
jg
jmp
adc
js
push
into
cld
out
sahf
xor
loop
mov
xchg
adc
cmp
mov
or
iret
jmp
push
jb
cmp
push
xor
pop
xchg
or
mov
jbe
sahf
inc
xchg
sub
ljmp
lret
push
inc
ret
push
or
fmulp
mov
xor
add
mov
cmc
imul
lcall
fistps
outsl
push
pop
sti
in
adc
inc
inc
xchg
int
or
leave
cwtl
cmpsb
jle
xchg
xchg
mov
sub
pushl
sub
xlat
jecxz
rcll
dec
test
xor
pop
jmp
les
mov
mov
adc
pop
sbb
add
adc
pop
fnstsw
xchg
add
das
daa
cli
jl
push
lret
stos
std
scas
xchg
and
aam
mov
lcall
adc
xor
or
push
xchg
lcall
es
xchg
ja
add
xlat
sarb
adc
or
stos
scas
mul
out
clc
ljmp
fcompl
sbb
mov
repnz
inc
sub
std
pushl
inc
xor
pop
inc
cli
iret
jo
pop
jmp
pushl
jb
xchg
movsl
adc
leave
push
out
aad
test
fwait
das
pop
dec
mov
jmp
js
in
push
ror
xor
rclb
sbb
mov
push
call
addl
fs
mov
mov
mov
xor
add
mov
lcall
inc
add
dec
std
rclb
pop
xchg
filds
jg
imul
fstpl
pushl
dec
sbb
mov
imul
add
pop
movsl
mov
cmp
jmp
sbb
out
cmp
pop
or
mov
jmp
mov
sub
stc
hlt
add
jae
repnz
je
incl
xchg
out
shll
cmp
jno
xchg
add
in
jmp
pop
test
push
push
cmpsb
pop
push
stos
xor
ljmp
sbb
push
xor
aas
jmp
pop
lods
shr
cmpl
pop
jnp
pushf
inc
mov
pop
mov
outsl
lahf
popf
push
xchg
adc
add
ljmp
xor
lea
pop
sub
pop
dec
ficompl
insl
in
sar
call
imul
add
clc
neg
data16
enter
iret
mov
lds
out
pusha
xor
add
sbb
cmpsb
xor
cmp
ja
mov
into
stc
pop
insb
mov
aad
pop
mov
pop
or
xchg
incl
stos
test
jb
inc
push
jo
sub
test
call
push
xchg
sbb
std
pop
div
mov
fucomip
iret
adc
sub
push
icebp
mov
xchg
jo
outsl
icebp
add
arpl
sahf
sti
aam
scas
mov
pushl
mov
add
sub
pop
les
divl
mov
int
jg
decb
lods
push
dec
cmpsb
xchg
xor
cltd
and
pop
xor
stos
push
jmp
mov
and
outsl
icebp
or
ja
sub
pop
loopne
repnz
push
out
sub
jmp
test
popa
jns
jo
popf
and
jb
xchg
sbb
call
add
push
inc
add
jae
scas
ljmp
fists
fs
jge
xlat
nop
inc
lahf
je
loope
ja
fistpll
std
fildll
icebp
stos
jns
cltd
mov
and
mov
mov
cmp
sbb
pop
dec
xor
push
out
mov
pop
jb
orb
inc
mov
js
mov
in
xor
cmp
in
leave
aad
fidivrl
push
adc
mov
mov
mov
cmpsl
dec
lcall
ljmp
pop
imul
sti
inc
or
ret
aas
ljmp
push
lahf
call
in
out
loope
popl
bound
xor
inc
push
cmc
mov
mov
clc
add
mov
stc
decl
cmp
das
std
xor
test
xor
lret
dec
dec
mov
xor
pop
fs
bound
outsb
cs
enter
cmp
lcall
sbb
call
clc
sbb
mov
adc
fists
pop
adc
rcrl
imul
fwait
lea
ljmp
sub
add
lcall
xor
enter
xlat
fistps
addl
insb
add
fwait
push
fmull
push
out
les
ds
cmp
call
xchg
test
cld
leave
or
sti
pop
ss
aam
stos
imull
shll
cwtl
jae
fs
push
dec
jmp
jg
shl
mov
xor
or
addb
stos
sbb
push
adc
ljmp
lock
das
out
add
rolb
lret
mov
mov
ljmp
mov
jecxz
mov
decb
lock
add
inc
pop
cmc
xchg
mov
or
cmp
outsb
mov
out
push
in
je
fwait
sbb
call
testl
jecxz
pop
xor
out
xor
lcall
lret
push
lcall
sub
std
mov
add
or
push
clc
pushl
or
xor
push
cmp
cmp
aam
sarb
push
cmp
icebp
das
lcall
lret
sar
rol
dec
xchg
repnz
pusha
add
mov
mov
lock
aad
pusha
inc
cli
ljmp
loopne
add
jmp
cmp
or
repnz
jmp
jg
pop
cmp
mov
or
push
pop
sbb
mov
push
sahf
sub
sbb
or
lods
bound
arpl
repz
xor
pop
jb
sub
stc
out
sub
in
clc
or
insb
mov
push
out
subb
lret
in
jmp
movsb
orl
or
dec
pusha
ljmp
repnz
mov
adc
in
jns
push
xchg
sbb
lcall
lods
sbb
lcall
faddl
add
sub
aas
pop
movsl
cwtl
push
xchg
adc
and
or
outsb
pop
ret
ds
jl
lods
inc
or
cld
lods
loop
sub
sbb
ljmp
daa
aam
dec
aas
arpl
xor
xchg
js
and
in
in
lret
adc
xchg
mov
scas
enter
jno
fimull
lea
jg
pushl
mov
adc
bnd
dec
cld
mov
stc
lods
fcmovbe
sbb
stc
inc
mov
jbe
mov
mov
mov
outsl
xlat
and
pusha
dec
test
into
pop
ficoms
jmp
rcr
xor
mov
sbb
pop
add
aaa
cld
jmp
or
fisttpl
xor
arpl
incb
mov
cmp
mov
pushf
pop
xchg
mov
mov
mov
mov
jb
push
mov
testb
loop
divb
xchg
inc
std
mov
xor
arpl
jb
in
and
jae
adc
fcomi
loop
or
lea
je
mov
sub
orb
mov
test
push
mov
push
rcrb
lds
push
jmp
ss
cmp
push
xchg
mov
lahf
fcomi
imul
inc
out
call
int3
sbb
out
pop
scas
ss
inc
lds
int
and
shr
sar
decl
fstpl
jae
or
jbe
je
jae
dec
mov
aaa
lcall
in
std
pushl
and
sti
cmpsb
enter
aam
arpl
lahf
inc
fidivrs
jmp
mov
jne
push
pop
and
enter
xlat
adc
xor
dec
incl
mov
aas
cs
into
add
jns
jmp
cli
ljmp
pop
sbb
leave
ja
popa
or
int3
xor
mov
sub
mov
decl
cmp
lcall
xor
mov
sbb
scas
mov
mov
or
sbb
mov
les
in
add
jl
pop
incl
or
scas
adc
push
sub
mov
fnstcw
lock
fdivrl
mov
arpl
jno
or
dec
ljmp
lcall
adc
fnstsw
sbb
adcb
ficoms
inc
dec
mov
sti
inc
xlat
mov
loopne
in
or
xlat
inc
push
mov
pop
pushf
and
incl
fs
push
bnd
clc
xor
es
fldcw
push
mov
cltd
outsb
cld
jg
cmp
rcrl
loope
test
sbb
xchg
lret
mov
aas
pop
mov
jecxz
je
pushf
data16
stos
or
jge
xchg
pop
stos
imul
aas
xchg
dec
or
mov
loop
mov
rolb
jbe
jg
jmp
adc
xor
add
clc
push
movsb
mov
daa
or
adc
push
incl
push
push
ds
subl
notb
loopne
js
mov
ljmp
mov
stc
fnstsw
lods
lock
ja
fadd
xchg
jmp
sub
sahf
jmp
and
cmp
mov
sbb
adc
daa
inc
or
mov
popf
mov
sar
arpl
adc
das
adc
xor
cli
decl
clc
test
test
adc
or
incl
jmp
sub
insb
inc
in
icebp
insb
jae
adc
aas
aad
cmpl
xchg
in
in
fildll
mov
pushl
sub
vzeroupper
adc
lods
pop
pop
mov
sub
pushl
push
clc
cmp
cmpsb
loop
mov
adc
notb
sub
fwait
lcall
sbb
in
testb
clc
xor
pop
rcl
bound
subl
sub
fwait
sbb
lahf
push
mov
jae
lahf
clc
ljmp
fldt
cld
pushf
mov
add
je
lea
mov
iret
decb
adc
cli
dec
imul
fucomip
decl
fisubs
pop
mov
out
aaa
inc
dec
adc
outsl
jo
mov
outsl
mov
jmp
repz
xorb
shrb
lret
add
add
adc
add
push
cmp
lcall
xchg
push
xor
or
aad
lcall
hlt
jg
stos
sub
fildll
icebp
mov
xor
xor
mov
out
sub
inc
fidivrl
repz
frstor
call
lods
sbb
mov
ljmp
pop
or
inc
pop
cmp
push
add
mov
outsl
and
jg
bound
inc
call
adc
sar
mov
lret
inc
adc
jns
sti
outsb
push
ret
sub
jnp
sub
std
call
inc
sub
clc
rorb
push
adc
pop
push
inc
fiadds
xchg
add
lods
ljmp
inc
jne
sti
sti
bound
adc
aad
pop
movsl
ss
cld
jg
incl
inc
out
test
mov
nop
mov
add
decl
cmp
or
push
dec
push
mov
test
mov
jl
popf
cs
lahf
xor
mov
in
jb
push
call
dec
dec
icebp
pusha
jg
xchg
add
fistpl
mov
ja
or
fwait
mov
popa
out
filds
adc
cs
mov
xchg
outsb
int
inc
jmp
test
cmp
repz
das
imul
ret
ret
incl
lods
adc
pop
xor
inc
mov
pusha
mov
mov
mov
sub
adc
xchg
outsl
shlb
nop
out
and
dec
int3
movsb
in
mov
push
mov
icebp
in
aas
sub
sub
add
mov
in
out
decl
pop
inc
cli
loopne
and
aaa
xchg
jmp
cmp
outsb
lock
loop
decl
or
ficomps
mov
cld
fucomip
jbe
pop
outsl
cmc
outsl
lcall
div
clc
sub
fisubl
jg
add
mov
add
sub
push
sub
cwtl
mov
stos
loopne
jg
ljmp
add
and
out
cmpsb
icebp
cld
push
fildl
sahf
mov
mul
stos
clc
mov
fistpl
push
mov
xchg
or
cmpl
ljmp
cmp
int
lret
push
mov
push
sbb
aaa
add
lcall
inc
clc
push
insl
mov
pop
in
add
call
fistpll
sub
dec
lret
and
mov
in
jno
sar
aaa
sahf
outsl
dec
enter
into
add
test
addr16
clc
fcomip
test
aam
in
cmp
pop
cmp
call
and
fsubrs
stos
sub
ror
xor
outsb
imul
push
and
iret
sub
stos
int3
imul
inc
in
fsub
clc
jbe
ja
xchg
mov
and
mov
bound
pop
mov
pop
rcr
addr16
mov
idiv
lcall
jne
push
lock
lret
adc
scas
or
xchg
dec
jecxz
enter
sti
add
push
dec
push
outsb
popf
inc
out
ja
mov
lret
fwait
sub
pop
jge
lcall
mov
mov
inc
lock
stos
loope
es
stos
data16
out
scas
xchg
pop
mov
lock
mov
mov
push
stos
push
adc
sbb
sahf
incl
cld
ret
outsl
sbb
idivl
jnp
xchg
addb
ja
cmpsb
movsl
jae
mov
incl
outsl
popa
xor
cmc
ja
pop
sub
and
fmul
gs
mov
jge
push
xchg
pop
inc
dec
jmp
pusha
sub
ffree
dec
call
mov
sub
ret
jp
xchg
mov
jge
pushl
xor
dec
jge
xchg
dec
inc
decb
jp
cmp
incl
sbb
cmp
jbe
inc
subb
es
stc
ja
decl
cmc
repnz
test
fisttpll
add
sar
jmp
sub
test
in
loopne
in
xchg
jge
add
adcb
mov
or
mov
adc
pop
xor
fsts
sbb
sub
decl
fprem1
sbb
mov
sbb
mov
lods
or
inc
jg
movsb
mov
addr16
dec
xchg
sub
jns
xchg
jg
mov
mov
sub
aaa
xchg
testb
in
cmpsl
decl
dec
cmp
ds
test
jge
outsl
lock
sarb
mov
mov
lods
jecxz
pop
hlt
repz
sarb
leave
std
lcall
sbb
insl
mov
fisttpll
push
cmpsb
pop
fwait
push
push
fdivr
cmpsb
and
es
cli
iret
lahf
jo
loopne
push
lcall
adc
xor
push
sub
scas
mov
cmpsl
and
call
push
lods
push
mov
ds
dec
inc
enter
mov
inc
xorb
aad
mov
dec
dec
cmp
sahf
mov
jb
sbb
out
or
clc
mov
sub
arpl
or
out
test
pop
jp
adc
test
lcall
add
bound
sbb
fists
or
ds
fisttpl
shll
call
dec
pusha
popf
int3
sub
das
jle
or
inc
nop
ds
jno
sbb
jg
ficoml
ljmp
ljmp
mov
pop
mov
call
test
jbe
jmp
movsb
sbb
imul
lock
push
xor
cmp
push
incl
push
pop
mov
add
sbb
mov
orl
add
jbe
add
push
mov
jge
dec
fwait
jl
push
inc
ss
pushl
or
stc
test
jg
iret
push
cwtl
sahf
mov
fwait
cli
jae
idiv
out
jno
std
or
mov
stos
jnp
xchg
int
mov
or
scas
scas
pop
sub
incl
mov
test
xor
out
sarl
push
lret
mov
cli
mov
lea
mov
pop
jecxz
mov
and
test
pushl
pop
and
adc
jecxz
cmp
dec
jg
or
decl
jno
imul
and
push
lds
push
sbb
std
pop
cld
lcall
inc
jno
fidivrs
push
test
lea
test
cltd
ljmp
cmpsb
xchg
jnp
dec
ljmp
or
rorb
dec
xchg
scas
out
das
lods
test
fisttpl
mov
aas
sub
xchg
dec
lret
movsl
jb
and
add
sarl
adc
ljmp
scas
pushf
movsb
push
aaa
psraw
fidivrl
add
sub
into
addr16
jg
pop
add
dec
int
push
and
outsl
lcall
test
orl
dec
jp
mov
sub
idiv
decl
mov
ljmp
push
shl
push
sbb
cmp
jp
shll
and
jmp
jecxz
mov
call
jno
ret
cmp
std
daa
mov
cld
or
pop
test
cld
rclb
aas
add
int3
pop
stos
add
pop
movsl
sub
popf
push
hlt
mov
fimull
xor
lcall
call
lods
push
test
js
nop
test
sbb
xchg
mov
cmp
dec
out
push
clc
incl
out
mov
cld
mov
call
lcall
jg
test
mov
insl
push
and
cmp
int
js
jo
xchg
lcall
test
jmp
mov
addr16
leave
adc
mov
push
push
loope
sbb
dec
decl
call
push
bound
outsl
je
leave
repnz
or
std
ds
ret
loope
incl
test
rol
mov
decb
and
inc
xchg
cwtl
idiv
mov
cmp
jne
or
test
jle
adc
jne
cmp
and
or
das
ljmp
ficoml
pop
sub
iret
pop
popa
fistl
incl
cwtl
jbe
mov
or
andl
sub
mov
inc
outsb
add
ret
mov
lcall
call
pop
rolb
adc
and
inc
cmp
pop
jmp
xchg
dec
lds
ret
cmp
addr16
jge
cmp
imulb
incl
sahf
sbb
and
fistl
fidivrs
mov
test
sar
or
outsl
add
arpl
sbb
or
cmc
mov
loop
push
stos
xor
cli
dec
and
add
inc
jg
aaa
jne
push
xchg
cli
imul
scas
dec
cmp
or
xor
iret
xchg
call
outsl
jmp
decl
int3
xor
fwait
xchg
inc
cmp
rorl
arpl
popa
push
loop
ljmp
lcall
cltd
call
lea
and
movsl
mov
jmp
mov
ret
call
aam
movsl
mov
aam
mov
insl
lcall
mov
push
andb
or
mov
inc
sbb
stc
xchg
fcmovnu
push
adc
lahf
push
or
shrl
into
iret
or
call
adc
and
mov
flds
es
or
pop
fnstcw
push
add
push
inc
xor
mov
cmp
mov
ficoml
and
mov
roll
push
lcall
cwtl
mov
out
xchg
jmp
cmp
mov
xchg
mov
mov
dec
out
pop
adc
inc
pop
jbe
push
jg
push
fiadds
adc
xchg
out
cmp
ret
jecxz
add
aam
pop
pop
mov
inc
repnz
inc
outsb
xchg
das
call
jle
sbb
xchg
jecxz
mov
les
and
fdivrp
es
xor
call
test
imul
mov
adc
inc
adc
lods
adc
stc
adc
push
pushf
push
test
mov
subb
pop
out
xor
shrl
dec
mov
cmp
push
pop
div
and
pop
push
jmp
dec
cmp
mov
add
notb
int
and
mov
icebp
daa
pop
mov
mov
jg
xor
or
iret
shlb
xchg
imul
shr
loop
mov
mov
sbb
cmpsb
dec
xchg
fcoml
loop
std
pushl
push
pop
and
jb
pushf
dec
pop
pop
inc
fwait
lds
mov
call
cmp
nop
mov
cmp
jg
sar
inc
divb
inc
jecxz
lcall
std
or
or
push
cmp
push
pop
std
ret
pop
mov
inc
add
in
fwait
in
pop
pushl
test
aaa
dec
repnz
fists
jge
mov
outsl
jmp
rcrb
jecxz
mov
mov
iret
xchg
inc
pushl
pop
cmpsl
test
inc
scas
adc
outsl
pop
paddw
ljmp
ss
pop
or
and
cmc
mov
sub
mov
mov
test
add
dec
leave
xor
lods
mov
mov
icebp
jg
movsb
or
cwtl
cmp
repz
add
or
sbb
ja
shlb
shll
imul
dec
pusha
mov
and
push
das
sub
call
out
ficoml
aam
idiv
jns
mov
xchg
movsb
mov
sarb
add
ja
scas
lds
inc
push
pop
icebp
jg
loope
int3
scas
xor
sbb
shl
pushf
jmp
xor
lods
cmpsl
aam
mov
je
arpl
scas
add
mov
mov
cmc
jle
jg
sarb
es
sbb
mov
jnp
idivl
pop
sbb
lcall
decl
pushf
ljmp
bound
push
imul
out
adc
mov
mov
frndint
aas
mov
xchg
mov
lcall
decl
xchg
js
out
lea
jns
sub
fnstenv
inc
xchg
fdivrl
sar
out
loope
xchg
outsl
aaa
cmp
out
sahf
and
xchg
repz
mov
repnz
cmp
and
or
push
js
pop
inc
or
cwtl
mov
mov
mov
fnop
ror
imul
pushl
fmull
and
mov
ret
add
add
adc
push
jg
mov
lock
js
mov
push
test
int3
in
arpl
sub
jo
cmpb
test
lods
pop
lret
mov
pushl
clc
test
or
xor
imul
mov
idivl
push
push
fbld
mov
stos
push
xchg
cmc
jg
call
lods
sbb
mov
fisttps
xchg
ficoms
ljmp
daa
lret
mov
fistl
pop
sbb
es
mov
jg
cld
cltd
fldcw
cld
push
idivb
mov
mov
aam
outsl
sbb
xchg
les
shl
cli
bound
cli
or
jmp
jns
sbb
jae
pop
int3
xor
lcall
xchg
rcrl
fwait
loop
negb
sbb
movntq
bound
add
call
pop
loopne
xchg
add
mov
aam
sbb
mov
aam
scas
push
ljmp
push
push
lcall
xor
xor
add
inc
insl
mov
sub
incl
cmp
xchg
movsl
les
icebp
mov
mov
jns
les
inc
pop
sbbl
or
aam
pop
jnp
popf
jg
jns
mov
xor
fldl
or
sarl
jne
xor
fildll
scas
loopne
test
xor
sahf
decl
incl
adc
mov
pop
mov
or
andb
mov
and
mov
push
enter
add
sbb
sbb
mov
dec
cld
xchg
jnp
jo
or
pop
cmpsl
out
mov
push
shrb
adc
mov
outsl
cmp
push
adc
shll
and
dec
les
lcall
sti
in
or
xchg
dec
jl
dec
mov
lahf
or
incl
enter
dec
sar
pop
bound
imul
clc
fsubrs
pushl
sbb
test
ja
shll
pop
xchg
stos
xor
pop
push
add
or
sbb
cmp
or
sar
mulb
shlb
cld
arpl
mov
std
jge
add
pop
ret
loopne
lock
aad
ss
mov
gs
mov
loop
fstpl
xor
dec
mov
in
jl
jg
fcomip
xor
or
decl
ljmp
hlt
push
mov
xor
js
mov
incl
jmp
adc
sbb
mov
les
aam
test
popa
lea
ljmp
and
stc
negl
mov
cmp
xchg
push
jg
jl
dec
or
adc
or
sub
cmp
dec
jg
jmp
popf
xchg
cld
xchg
jge
sbb
cltd
xchg
cmp
add
xchg
xor
sbb
pop
js
in
xchg
subl
notb
incb
gs
call
inc
xor
icebp
cld
jns
call
insl
cld
lcall
flds
fimuls
loopne
mov
mov
clc
jmp
inc
notl
scas
jecxz
jae
je,pn
das
aad
mov
cld
outsl
mov
cmp
jmp
clc
dec
mov
mov
mov
push
daa
jg
push
or
scas
test
pop
inc
enter
adc
fimull
adc
int
test
fisttps
pusha
loope
js
lcall
call
add
movsb
subb
cmpsb
jg
ja
decl
or
fistpll
or
mov
fbld
mov
or
popf
out
ficoml
mov
ja
iret
mov
lods
ljmp
mov
lea
jecxz
incl
fistl
out
xor
dec
insl
jl
or
cmp
cli
jg
popa
dec
jle
in
push
dec
pop
pop
call
aas
add
dec
mov
pop
inc
push
push
arpl
cmp
mov
and
mov
jg
lods
stos
mov
push
cmp
pusha
aad
out
loop
rorl
test
pop
repnz
scas
es
test
mov
jae
xchg
mov
cwtl
js
xchg
out
shl
xchg
sbb
xchg
jge
mov
das
dec
pop
adc
rolb
lds
mov
jle
call
pusha
shll
pushf
xchg
xor
cmp
ss
pop
cld
sub
cmpsb
jb
mov
lds
rol
push
jle
incl
and
jmp
push
aam
pop
mov
inc
cld
ds
mov
fidivrl
movsl
repz
dec
in
lea
mov
lods
dec
pop
lock
or
mov
das
push
call
cmp
dec
sub
mov
addr16
outsl
lret
sub
mov
pop
aaa
xchg
shlb
insl
push
lea
mov
mov
lahf
lret
sbb
mov
clc
or
mov
inc
mov
lods
cmp
pushl
stc
and
xor
popf
or
andb
adc
pop
cld
pushl
xorb
stos
int3
cltd
les
mov
mov
inc
add
adc
or
add
jno
mov
jg
outsl
fcmovnbe
cmp
push
imul
jge
cmp
and
pop
fucomip
mov
xor
lcall
push
pop
decl
std
jmp
in
insl
popa
loopne
or
mov
jmp
pop
out
and
movsl
clc
out
mov
mov
cmp
sti
nop
std
jmp
mov
ljmp
shrb
sub
push
lret
sub
fildll
jecxz
pushl
bound
je
out
repz
cli
cmpl
dec
jl
jbe
mov
aas
pop
loope
lcall
adc
aaa
ret
incl
push
xor
sti
pop
adc
cmpsb
mov
mov
pop
cmp
xchg
fsubs
repz
incl
call
mov
cmpsl
loop
pusha
and
mov
fsubr
jge
icebp
jg
lcall
mov
sub
dec
std
es
xlat
mov
inc
js
daa
sar
pop
adc
xor
iret
fcmovu
xor
xchg
decl
ljmp
mov
je
lret
fldlg2
aam
out
rcl
pop
shlb
mov
subb
iret
jp
scas
mov
in
pop
xor
sbb
lcall
scas
imul
scas
mov
cmp
or
popf
mov
hlt
jmp
lods
sahf
test
in
frstor
enter
scas
or
outsl
std
call
xchg
imul
and
fs
scas
push
adc
pushl
js
je
sbb
push
xor
sbb
pusha
fs
add
idiv
pop
ljmp
enter
ljmp
hlt
push
mov
incl
jmp
pop
or
outsb
push
or
pop
insb
cmp
or
mov
push
enter
loop
js
or
sti
decl
enter
hlt
rcrl
mov
and
dec
hlt
clc
sbb
jmp
int
movsl
pop
xor
clc
inc
testb
enter
jp
sti
fistpll
push
mov
mov
orb
cwtl
pusha
adc
dec
jne
jg
cmp
dec
push
or
mov
arpl
in
ljmp
repz
add
jecxz
jo
lds
nop
stc
or
js
mov
adc
adc
sarl
pushl
or
imulb
push
out
js
mov
xchg
fs
xchg
jnp
js
xlat
add
jge
ss
icebp
or
rclb
xchg
scas
arpl
lods
xchg
push
cli
lds
rolb
popf
je
rorb
outsl
xchg
jmp
and
xchg
dec
jg
ljmp
lcall
dec
cld
lahf
lock
mov
adc
pop
or
push
idivl
mov
mov
scas
call
je
cmpl
mov
stc
fucomp
mov
inc
lock
adc
mov
test
inc
and
mov
outsb
ret
or
inc
addr16
push
movsl
sbb
data16
stc
data16
aaa
xchg
cmp
mov
lcall
stos
sub
int
mov
mov
jg
pop
aam
dec
andb
xor
imull
jo
lock
lcall
xor
sbb
push
insb
cwtl
mov
sbb
xor
js
pop
incl
fiaddl
das
jge
leave
dec
ret
add
fwait
je
idivl
dec
and
mov
xor
int
cld
sti
jle
xchg
ss
sub
call
pop
imul
ds
add
loopne
cli
ljmp
std
push
xlat
adc
in
inc
mov
mov
cmp
fcompl
sbbb
test
cmpsb
invd
dec
decl
inc
xor
jecxz
xorb
or
xor
ficompl
jbe
dec
je
imul
fisubrs
js
jb
fucomip
in
bound
addr16
mov
arpl
push
push
xchg
cli
aad
mov
mov
dec
rorl
icebp
stc
jnp
dec
test
mov
xchg
xchg
fs
sti
sbb
cld
sarl
jo
xor
pop
and
mov
sar
pushl
mov
pop
pop
lods
je
add
push
ret
lahf
cmp
jg
outsb
xchg
movaps
jl
test
inc
fwait
push
xlat
push
inc
mov
sub
out
add
out
jp
inc
jno
cs
test
roll
sbb
lcall
jg
imul
mov
outsb
xchg
pop
or
add
lods
add
movsl
dec
adc
sub
dec
aas
inc
xor
loope
or
int
cs
mov
xlat
cmpsl
xchg
mov
iret
pop
jge
hlt
decl
mov
les
ret
xor
or
ljmp
inc
pop
jo
in
jno
adc
das
lret
mov
clc
negb
push
mov
loopne
xor
sbb
mov
mov
jne
out
shlb
decl
xchg
mov
pop
jge
repnz
loope
scas
sbb
jmp
cmp
or
or
dec
push
outsl
push
out
sub
stos
lcall
scas
sub
incl
jno
ret
sub
dec
xor
sbb
fucomip
aas
stc
mov
mov
push
sub
pop
decl
arpl
pop
sbb
ret
das
test
stos
scas
xchg
fcomip
dec
sub
movsb
aas
inc
pop
sub
rolb
ljmp
inc
sub
jecxz
jg
decl
lods
mov
bound
xor
push
aas
xor
inc
sarb
clc
inc
and
jno
adc
fiadds
lcall
divl
add
outsl
pop
ret
mov
in
jns
push
push
inc
decl
in
add
sbb
or
mov
rcr
lret
insl
mov
jmp
cmp
ret
mov
mov
fisubs
in
push
cmpsb
pop
or
shlb
popa
ja
imul
jmp
mov
movsb
daa
insl
jl
cld
inc
push
imul
xor
ret
xor
or
call
xchg
cmp
or
push
ljmp
inc
xchg
xchg
daa
sbb
std
jg
fisubl
cmp
fwait
adc
push
mov
inc
sub
dec
mov
sub
mov
jns
xchg
cmc
lcall
add
pop
push
sub
aaa
inc
int
out
inc
and
xchg
data16
aas
adc
test
or
setl
or
fstps
addr16
jae
ljmp
mov
jae
sub
xchg
mov
mov
stos
or
push
mov
cmpb
mov
rcrl
push
mov
xchg
jp
pushl
inc
jl
outsl
adcb
lods
sbb
int3
adc
pop
lcall
inc
inc
enter
sarb
xor
lcall
adc
mov
rclb
mov
jmp
imul
xchg
insb
dec
sub
shll
cmp
repnz
incl
xlat
mov
push
mov
pusha
lret
and
fsts
or
inc
push
xchg
mov
aad
mov
ds
jnp
cmp
aas
and
seta
hlt
mov
mov
pushf
fsubl
imul
outsl
daa
test
daa
pushf
push
les
sbb
loopne
sbb
or
jg
mov
push
into
orb
pop
pop
xor
add
clc
ljmp
cmpsb
loope
inc
arpl
adc
sarb
or
mov
hlt
or
push
sbb
or
mov
ss
mov
pop
dec
mov
cmp
push
adc
adc
cmp
jle
dec
inc
call
add
mov
outsb
mov
xor
dec
test
sub
mov
decl
mov
or
ret
pop
clc
incl
dec
jl
push
fadd
xlat
lahf
fimuls
push
mov
xchg
aaa
test
sub
jge
lcall
sub
xchg
pop
jmp
push
test
pop
aas
adc
pop
cld
movsl
scas
ret
xchg
lahf
into
decl
mov
dec
mov
sbb
cli
daa
jns
jle
daa
cltd
jg
decl
dec
xchg
outsb
xchg
das
mov
inc
adc
sbb
push
mov
test
mov
leave
adc
inc
das
in
mov
dec
adc
or
out
loope
sub
test
xchg
out
fcoml
xor
pop
loopne
lock
push
into
js
int
jae
xchg
jg
ret
xchg
dec
sub
xchg
jno
dec
dec
test
ljmp
dec
dec
mov
loope
and
mov
sbb
cld
jmp
mov
movsl
test
inc
cmp
inc
outsl
fdivrl
pushl
stc
aad
push
push
loopne
stos
mov
stos
pop
adc
xor
xchg
add
dec
mov
jmp
inc
xor
cmp
mov
popa
mov
fdivr
pop
mov
call
loop
jnp
data16
mov
gs
out
idiv
call
jmp
inc
pop
cmp
mov
add
sar
ja
xor
jne
push
fildll
or
mov
mov
loope
jg
decl
scas
and
push
dec
pop
lahf
adc
ljmp
xchg
and
lock
cmc
dec
loop
adc
xchg
lcall
inc
je
hlt
jmp
test
pop
ja
or
and
adc
jo,pt
daa
in
adc
fldt
lods
xor
imul
jbe
fldcw
xorl
mov
add
sti
ljmp
fildl
pop
push
pusha
dec
mov
stos
out
mov
loopne
xor
je
mov
test
or
into
aaa
lock
test
lret
sbb
div
inc
cmpsl
adc
push
loope
cld
push
xorl
xchg
test
pop
ffreep
sub
imulb
push
pop
insl
inc
or
ret
test
push
or
ljmp
pop
push
cltd
lahf
outsb
inc
push
mov
xor
shrl
aas
icebp
mov
xchg
stc
in
mov
pop
pop
xor
push
cmp
add
mov
ljmp
lods
fbld
shrb
lea
sub
sbb
fucomi
call
mov
clc
add
or
inc
mov
xor
orl
mov
add
pushl
cld
or
sub
mov
test
lret
incb
dec
mov
cmpsb
cmp
lret
xchg
cs
mov
jae
push
enter
test
data16
adc
mov
and
imul
sbb
icebp
inc
sti
mov
mov
sub
pop
dec
into
cmpsb
xlat
pop
movsl
xor
pushl
and
mov
fildll
xchg
std
push
push
dec
out
mov
jg
xlat
jo
jnp
jmp
daa
cmp
xchg
jmp
push
andb
fdivs
sahf
and
lcall
clc
imul
iret
fisttpl
das
gs
inc
pop
xor
es
ss
in
add
dec
cmc
inc
clc
jg
xor
iret
decb
inc
cmp
jne
pop
cltd
cmpb
imul
sub
outsl
std
lcall
mov
or
mov
adc
sub
xchg
sbb
sbb
jnp
sti
ljmp
mov
shr
andb
daa
pop
xchg
call
in
sar
pushl
lods
mov
adc
lret
decb
lcall
pop
sub
jg
xor
sti
jmp
dec
repz
or
jb
add
sbb
pushl
add
cmpsb
jp
sbb
adc
mov
add
dec
das
push
lahf
ds
jno
xchg
sub
ret
cmc
fistpll
lea
cli
jnp
xor
mov
movb
cmp
jnp
lcall
std
out
or
pop
pop
push
xchg
lock
sub
ss
adc
sbb
xor
lahf
mov
mov
xchg
cmp
xchg
int
xchg
mov
jmp
int
in
inc
dec
mov
hlt
push
inc
fnsave
sahf
addr16
jne
dec
sub
mov
mov
pop
mov
shrl
or
inc
cli
cmc
cmp
pushl
std
call
test
adc
push
cmpb
mov
inc
xchg
fbld
add
dec
iret
imul
inc
jg
sbb
xchg
sub
ja
push
scas
jmp
pop
adc
push
aad
stos
adc
fucomip
mov
pushf
jo
mov
loope
loop
sbb
clc
xchg
jmp
repnz
fists
jb
jne
mov
popa
popf
mov
mov
xlat
xor
aam
sub
pushl
ljmp
dec
imul
bound
mov
outsl
cld
pop
clc
jmp
xorl
mov
mov
push
adc
sti
mov
xchg
jp
pop
mov
fildl
mov
sbb
test
sahf
dec
pop
sbb
jnp
das
mov
pushl
clc
fildl
sub
push
mov
call
xor
call
dec
inc
push
xchg
push
ret
dec
push
les
adcb
add
cld
ljmp
xorb
dec
in
sti
sub
in
popf
pop
xchg
stc
add
jg
xor
or
scas
pop
jnp
and
add
pop
pusha
inc
dec
xor
or
das
icebp
sbb
mov
sarl
xchg
lods
xor
les
lret
cld
dec
cmp
mov
lods
orb
sub
in
mov
pop
das
xchg
mov
ret
mov
dec
or
mov
pop
cli
cmpsb
dec
pop
push
add
test
icebp
ss
mov
cmpsl
sbbb
das
dec
aas
dec
hlt
jl
mov
jne
call
cs
add
call
repnz
sbb
call
xchg
dec
jp
int3
enter
xor
jg
lcall
pop
xchg
dec
inc
mov
cld
and
cmp
add
call
sub
call
popf
sbb
ret
shlb
les
adc
ljmp
push
jns
fadd
imul
and
or
jnp
cmp
addl
fstl
out
sub
push
mov
mov
jnp
lcall
ja
cltd
sub
sub
add
xchg
in
mov
mov
negl
imul
jge
inc
jp
cmpsb
jle
stos
cmp
pushf
ja
les
jnp
cs
test
push
cltd
outsl
stc
hlt
adc
in
push
add
push
repz
mov
cltd
jg
je
imul
fiaddl
cmc
dec
add
mov
xorl
sbb
pushl
jmp
lock
insl
pop
jle
mov
jle
sbb
test
or
xchg
test
pushl
inc
cmp
in
ljmp
dec
out
dec
xchg
or
jnp
xor
loope
sub
loope
test
sbb
xor
lret
mov
mov
movsb
leave
mov
pusha
cli
or
out
dec
sub
adc
icebp
cmp
mov
incl
inc
jg
jle
lds
sar
je
cmp
adc
jmp
decl
dec
xor
mov
pop
and
mov
xchg
dec
loope
adc
jg
aaa
dec
in
ss
and
inc
xchg
lock
adc
jle
mov
insl
pop
jg
loopne
in
pop
jge
lahf
dec
pop
ret
inc
jge
loopne
call
sbb
fisttpl
mov
les
out
push
mov
sbb
push
jmp
hlt
fldcw
adc
pop
icebp
addr16
clc
inc
lcall
stos
dec
mov
inc
inc
sti
shrb
sti
pushl
or
test
fwait
pusha
pop
mov
cmp
or
adc
xor
decl
out
jae
in
dec
xchg
and
push
push
or
lcall
and
push
mov
jae
pop
int3
shll
mov
push
fisttps
pusha
adc
jns
xchg
xchg
out
push
mov
incl
adc
aam
test
cmp
push
enter
pushf
arpl
cld
add
jne
gs
mov
cld
pop
inc
jbe
imul
or
mov
decb
cmpsb
pop
clc
add
fisttps
ret
ljmp
and
jp
cld
mov
fldl
mov
add
sbb
and
xor
mov
lret
jle
mov
mov
jg
mov
frstor
in
cltd
push
mov
sbb
jbe
loop
setg
xor
inc
bsr
mov
lods
dec
enter
add
cmpsb
int3
shrb
xor
das
loope
fcomip
je
and
stos
pop
or
or
cwtl
orb
inc
sbb
loope
jmp
fsub
jno
mov
add
test
int3
jbe
das
and
sbb
incl
ret
jns
fisubs
scas
add
push
xchg
mov
lcall
sbbb
sub
fisubl
cmp
push
jg
out
call
add
test
cli
fwait
pop
mov
jecxz
add
ljmp
xor
push
xor
ss
or
ljmp
ret
addl
cmp
in
das
lret
xlat
fwait
sub
lods
sar
or
and
mov
and
push
pop
mov
mov
jg
xchg
std
xchg
iret
hlt
push
push
scas
pop
roll
clc
pop
inc
pop
sub
cmpsl
sar
jmp
call
fwait
adc
mov
pop
jo
pop
cmp
idivl
mov
movsl
imul
xchg
ds
add
popa
mov
lcall
inc
lret
fwait
xor
jns
or
rcl
dec
ror
xchg
mov
mov
sub
stc
lock
and
mov
ss
sbb
or
xchg
out
jno,pt
ljmp
cmp
push
ljmp
lcall
xchg
jge
mov
and
adc
gs
lock
call
jp
iret
cmp
sub
test
mov
outsb
lock
pop
ss
cmc
cmp
shll
idivb
ljmp
mov
popa
cltd
cmp
jle
insl
test
xchg
repnz
sbb
xchg
fcom
test
push
rcrb
add
invd
pop
jmp
mov
fsubr
aad
push
jmp
and
dec
sbb
shrb
pop
or
mov
loopne
xorl
popa
fbld
xchg
sub
mov
jecxz
add
popa
lret
fidivrl
incl
clc
inc
dec
imul
mov
addl
mov
xlat
lea
push
or
dec
js
adc
and
jp
inc
cld
pushl
aaa
icebp
mov
inc
mov
adc
aad
int
mov
mov
int3
add
pop
stos
inc
mov
mov
xchg
fstpt
into
dec
aas
cmove
jmp
outsb
popf
in
aam
mov
sub
packssdw
fs
jns
scas
add
incl
mov
je
rcrb
mov
mov
push
rclb
push
ret
ljmp
mov
ret
addr16
pop
ljmp
fcomi
cwtl
lods
rolb
cli
mov
inc
icebp
fs
call
cmpsl
lds
inc
ret
nop
ds
pop
aas
aam
add
popf
out
outsb
pop
std
cmc
inc
std
push
mov
ss
xchg
loop
mov
scas
mov
inc
in
sbb
incl
jecxz
negl
lcall
jle
int3
mov
pushl
sub
jns
in
or
leave
insl
push
dec
fwait
mov
decb
out
push
or
jmp
imul
mov
das
call
sbb
icebp
rcr
adc
stos
test
stos
decl
or
adc
jmp
push
outsl
push
mov
ljmp
cmp
loop
pop
lcall
lods
mov
jns
into
dec
movsb
jae
aam
lods
add
outsb
cld
jg
pop
mov
jb
mov
lea
jg
jg
pop
lcall
lock
jo
mov
mov
hlt
call
add
test
rcrl
sub
call
in
inc
sar
ret
and
sar
test
ja
pop
lods
scas
in
pop
jmp
in
mov
xor
in
or
in
popa
push
xchg
push
and
vpsadbw
stc
jg
lock
movsl
lahf
stc
jle
inc
push
xchg
call
out
repnz
cmp
dec
outsl
aas
inc
ljmp
and
sarb
mov
cltd
out
mov
sub
cmpl
es
call
adc
adc
aaa
xchg
dec
mov
insb
pop
gs
inc
xchg
jmp
mov
and
inc
dec
xchg
dec
xor
sbb
xchg
and
js
ljmp
xor
js,pn
mov
sbb
mov
jg
popf
testl
rol
xor
loop
in
out
and
icebp
adc
jae
mov
sahf
push
movsb
ds
gs
les
iret
ljmp
lcall
cltd
push
stc
sub
fwait
mov
push
jg
add
test
aam
jg
sbb
and
inc
lods
int
lods
jl
roll
in
std
lcall
or
iret
adc
outsl
sbb
cmp
outsl
icebp
fildll
outsb
lahf
into
hlt
lds
mov
nop
mov
pop
mov
sub
mov
lahf
aad
pop
mov
and
icebp
inc
xor
pop
jg
pop
ss
adc
mov
lret
bound
out
out
mov
add
push
xchg
leave
gs
pop
mov
fnsave
jmp
xor
xchg
lret
jp
cmpsl
push
cwtl
push
push
pop
sbb
push
pop
jg
lcall
jl
sbb
sub
lcall
adc
scas
sub
out
cmp
ret
push
dec
cmp
push
lea
lret
jbe
lret
mov
adc
sub
jo
aaa
clc
test
sbb
imul
add
or
xchg
sahf
imul
push
xchg
add
jle
xchg
sub
ljmp
leave
mulps
xor
mov
mov
dec
push
aas
cld
mov
sar
ljmp
in
jae
icebp
or
mov
sub
and
loopne
sub
and
ljmp
clc
nop
jge
pop
cmpsb
mov
adc
fists
mov
jb
push
mov
loop
xor
fists
add
or
xor
mov
repz
xor
test
mov
dec
test
in
fdivrs
pop
aaa
orb
popa
xchg
outsl
enter
icebp
sub
scas
pop
mov
and
je
test
xor
mov
cld
decl
pop
push
cmpb
repz
incl
test
lret
out
xchg
fbstp
ljmp
add
test
loope
incb
mov
enter
or
dec
xor
and
dec
icebp
xchg
cli
call
jns
sub
gs
sbb
es
fwait
or
or
mov
aam
mov
cmp
dec
mov
sbb
lods
int
jnp
mov
imul
das
stos
pop
cmp
mov
outsb
outsb
out
movsl
insl
adc
ja
and
aad
sbbb
sub
xlat
movl
jg
lock
cmp
andnps
pop
push
andl
nop
lods
lret
push
jb
jecxz
mov
mov
stos
je
ljmp
inc
rorl
xor
mov
push
push
mov
lret
lahf
stos
push
lcall
pusha
push
mov
adc
push
subl
jmp
sub
and
xchg
std
pop
inc
test
imul
mov
jle
push
fdivl
xchg
and
pop
into
push
adc
mov
dec
sub
lock
call
cmpsl
test
dec
fisttpl
and
cmc
lcall
decl
push
movsl
and
out
sahf
leave
ret
incl
js
dec
adc
sbb
je
cmp
int
xchg
xchg
into
mov
in
lcall
insb
xchg
insb
out
ljmp
pop
pop
push
pushl
clc
or
dec
sub
rcrl
cmpsl
mov
pop
xchg
cmp
pop
pushl
hlt
jmp
repnz
lods
xorl
jns
loope
cmpsb
outsl
std
loopne
jmp
enter
pop
jl
ja
int3
inc
cmp
sbb
mov
aaa
push
in
jns
fdivrs
data16
fildll
push
pop
imul
jbe
cld
or
call
shll
pusha
dec
popf
imul
mov
push
fcoms
decl
add
xor
scas
push
cltd
jg
in
pop
cmp
dec
inc
in
cli
out
shl
push
jno
xchg
incb
xchg
fwait
mov
sbb
mov
cmp
lahf
imul
cmp
repnz
dec
or
sub
sti
adc
es
fistpll
jmp
fsubl
mov
mov
cmp
iret
push
cmp
xor
call
test
mov
popf
push
mov
fsubs
pushf
jmp
cld
out
sbb
jbe
mov
dec
mov
push
pop
hlt
push
out
mov
outsl
stos
call
jns
jge
xchg
sarl
mov
push
jno
add
call
pusha
mov
pop
insl
sub
into
movsl
pop
adcb
inc
and
dec
or
shl
sub
stc
mov
xorl
mov
call
arpl
nop
lods
mov
stos
shlb
inc
fwait
test
mov
call
jns
test
inc
js
mov
pop
sbb
push
add
fbld
rol
sub
pop
jp
hlt
cmp
jne
roll
or
mov
insb
in
mov
out
call
and
inc
adc
or
lock
or
rsm
sub
shl
outsb
jbe
ljmp
fiaddl
push
dec
lock
sarl
aas
xor
fcomip
test
push
daa
mov
xchg
or
adc
adc
out
loop
mov
movsb
in
or
pop
jmp
mov
sbb
lea
pushl
sbb
sti
ds
fwait
sbb
and
shrl
sahf
or
cld
inc
cmp
xchg
dec
into
and
int
xor
pop
stos
icebp
mov
mov
out
imul
push
lahf
clc
aas
sbb
fsubl
mov
dec
jno
pop
loopne
loopne
push
ret
jmp
jbe
cmp
push
add
fnsave
jmp
push
in
out
sub
or
or
inc
in
call
jae
sub
cwtl
push
imul
imul
stos
xchg
std
adc
cltd
mov
push
lea
decl
loop
cmpsl
or
or
fs
sub
mov
incl
mov
xchg
jmp
cs
jg
fstpt
stc
jno
repz
fadds
call
popa
sub
inc
cli
nop
sub
sub
add
call
pop
shrb
or
fnstenv
cli
and
addr16
ja
sub
and
decl
jge
dec
pop
xchg
inc
inc
adc
xlat
and
test
mov
jbe
or
add
jmp
cld
mov
fisubl
push
mov
ljmp
xor
push
aad
ljmp
jg,pt
or
scas
aad
imul
ljmp
jo,pt
enter
outsl
rcrl
xchg
sbb
int3
xchg
jmp
xor
pop
inc
fsubp
mov
jg
or
incb
and
ljmp
cmp
bound
xor
popf
xchg
cmc
lock
fdivrs
mov
add
cmp
daa
sub
adc
push
or
sub
mov
dec
adc
adc
mov
jmp
xor
leave
adc
shl
xor
or
or
clc
ljmp
pop
mov
pop
or
inc
and
pop
hlt
mov
arpl
sarl
cmpb
mov
jmp
xlat
or
push
and
mov
int3
and
sar
jmp
jno
inc
jle
push
jnp
mov
adc
xchg
mov
add
das
loopne
cmp
mov
cmpsl
mov
sti
push
fdivrl
call
or
lcall
movsl
push
sbb
arpl
xor
inc
adc
test
lock
popf
movsl
scas
jg
cld
adc
adc
iret
cli
mov
insl
daa
mov
cmp
jmp
cmc
jmp
jo
or
push
inc
idivb
push
adcl
dec
mov
mov
out
and
loope
add
cmp
inc
xchg
movsl
mov
sbb
add
push
dec
jb
sar
rcr
inc
stc
push
inc
cmc
cs
mov
lea
testl
movsb
mov
or
ss
fisttps
out
leave
out
or
test
mov
push
mov
nop
push
jge
loope
inc
ljmp
jle
scas
jp
fidivs
add
dec
jp
rcrb
mov
add
clc
leave
push
pop
dec
addl
daa
data16
mov
sub
bound
or
mov
pop
jp
cmpsb
decl
or
xor
cmp
add
lds
imull
xchg
shlb
fnstenv
jno
cmp
stc
mov
mov
jne
fnsave
out
pushl
push
ficompl
stos
push
cltd
xlat
nopl
sub
cmp
sar
lcall
jo
mov
adc
add
mov
xlat
inc
movsl
mov
lcall
popf
add
fstp
inc
mov
loopne
fld
dec
push
mov
mov
adc
adc
xor
xchg
inc
iret
xchg
xchg
jmp
mov
int3
aam
leave
lock
jge
mov
daa
insl
mov
mov
push
ss
inc
stc
sub
jnp
lods
cs
fnstcw
pop
lock
jg
add
xchg
xchg
xor
push
shlb
sbb
clc
mov
lret
pop
repnz
lods
in
sub
pop
loop
movsl
jl
xchg
jae
in
aaa
sub
fildll
outsl
out
je
ja
shll
xchg
das
jmp
push
sbb
mov
pop
pop
and
sub
enter
cmc
inc
cmpsb
mov
pop
inc
add
fwait
and
decl
adc
das
sti
or
mov
sbb
push
sbb
lahf
shrb
jg
incl
xchg
pop
pop
pop
mov
mov
loop
mov
mov
call
mov
add
fs
push
rclb
mov
pop
inc
lock
les
inc
fildll
push
add
push
inc
cld
incl
jp
outsl
lock
gs
jmpw
clc
decl
jae
and
andb
add
nop
clc
inc
call
subl
push
fistps
cmpsl
adc
add
mov
add
loop
clc
incl
int
push
push
add
inc
push
pop
adc
test
iret
mov
loopne
fcmovb
in
call
dec
sbb
xor
add
add
leave
xchg
add
and
xchg
cmp
ljmp
pop
test
addl
and
addb
mov
movsl
stos
mov
sbb
ljmp
cs
lea
popa
arpl
xor
sbb
and
mov
fstp
push
and
nop
xchg
xchg
je
xchg
add
pop
out
jae
rorl
mov
std
decl
cmpsb
jmp
mov
mov
or
jge
cmp
adc
fcoml
insl
or
mov
mov
mov
dec
mov
hlt
xchg
sbb
or
je
dec
or
call
cmp
mov
pop
mov
xchg
mov
add
mov
and
enter
and
mov
or
sbb
add
movsb
push
pusha
cmpb
pop
aas
jg
mov
filds
mov
cld
cld
orb
ja
test
mov
mov
testb
movsl
ja
or
iret
jmp
testb
in
call
mov
dec
jle
ficompl
pop
pop
fisubrl
sti
pushl
clc
xor
rcr
fidivrs
inc
jp
fldl
xor
addr16
push
cwtl
cmc
adc
jg
sbb
pusha
sbb
inc
imul
pusha
fisttpll
or
or
das
fdivr
pushl
cmp
mulb
mov
push
adc
ja
add
sbb
or
and
pop
test
inc
push
xor
sbb
push
push
pop
push
pop
pop
jnp
and
push
push
mov
ljmp
pushl
push
das
xorb
pop
subl
sub
movlps
mov
pop
inc
xor
prefetch
or
ret
or
in
xor
stos
push
push
and
mov
sub
pusha
outsb
lcall
add
sti
ret
mov
movl
jg
call
sbb
mov
in
cmp
andb
push
sub
fstp
jae
nopl
mov
pop
pop
outsb
fucomp
jbe
push
pop
or
adc
pop
push
pop
and
stc
pop
pushl
or
inc
pop
dec
push
pop
shll
or
sbb
adc
aas
insb
cmp
jl
or
push
div
lret
test
sbb
movups
sub
sbb
push
test
or
push
sbb
sbb
mov
add
push
aaa
sbb
or
sbb
nop
mov
lcall
dec
pusha
sbb
push
or
cmp
add
sbb
out
mov
add
add
dec
sbb
push
add
add
sub
out
and
arpl
mov
les
jp
pop
imul
scas
dec
lcall
sub
das
in
add
sbb
mov
dec
incl
and
cld
rdpmc
mov
lret
fstpt
out
jnp
icebp
scas
stc
icebp
ficompl
sarb
sub
ljmp
xchg
sbb
and
pop
and
adcb
add
into
mov
jmp
popa
les
sbb
cld
jmp
ljmp
cmp
movsb
cmpsl
jo
into
clc
decl
adc
lret
xchg
jbe
aam
inc
clc
xor
aad
jl
xchg
or
in
clc
aaa
add
in
bnd
cli
jg
push
ljmp
cwtl
nop
push
add
adcb
xchg
inc
xchg
push
repz
and
rcll
loop,pn
decl
add
dec
aaa
ret
pop
xlat
pop
insl
dec
xchg
cmpsb
dec
inc
sar
aas
push
iret
add
test
aad
adc
pusha
jmp
pushf
sub
xchg
mov
inc
sti
jle
ljmp
aam
fcompl
mov
mov
popf
not
jmp
pop
stos
ljmp
push
inc
mov
mov
call
push
inc
pop
lea
dec
call
cmc
rcl
jno
pushl
cli
icebp
add
int
adc
and
or
sub
pusha
xchg
cmc
call
clc
idivl
and
inc
cmp
rcrb
push
pop
xor
movsl
das
inc
xchg
or
fcoml
or
mov
incb
es
push
ljmp
std
out
add
mov
push
xor
mov
add
adc
mov
clc
mov
add
fcoml
aas
mov
or
pusha
fisttpl
push
xchg
mov
jmp
mov
enter
cmc
push
adc
mov
add
jmp
ljmp
pop
scas
inc
or
movb
push
sub
test
adc
sub
lret
cld
mov
fildll
clc
outsb
add
push
jbe
push
call
push
fiaddl
jmp
cmp
inc
hlt
das
dec
fidivrl
jne
cltd
aam
call
clc
push
jmp
mov
sbb
jbe
outsb
jmp
xor
mov
mov
or
pop
insl
mov
popa
popa
sbbl
push
test
pop
sbb
fs
ljmp
std
sub
aam
cmc
and
lea
cmpsb
inc
call
mov
call
add
adc
mull
lcall
jmp
push
jmp
inc
mov
sti
popa
sarl
push
lock
lcall
clc
jb
scas
fstpt
lea
pop
lcall
mov
mov
movsl
xor
xor
pop
jmp
jo
mov
mov
aaa
insl
fidivrs
repnz
cmp
sub
pop
add
or
mov
mov
js
jns
push
cmp
leave
into
xor
fdivl
mov
lods
push
mov
sub
push
das
call
loopne
lods
push
pushf
push
adc
ds
jg
cmp
in
daa
popa
faddl
cli
mov
js
out
jmp
or
jl
pop
pushl
fiadds
nop
jne
adc
out
pop
sti
pop
mov
jmp
stos
lahf
or
lcall
jmp
jno
pusha
jmp
sub
xor
jo
pop
ficomps
imul
call
sub
xchg
push
loope
mov
pop
xchg
mov
shrl
push
inc
aaa
mov
jmp
loope
cs
jne
fcoml
adc
call
call
ja
cwtl
jmp
out
mov
sub
mov
decl
movsl
xchg
in
push
es
call
es
out
stos
and
sub
stos
mov
setno
cwtl
mov
hlt
jno
dec
std
pop
cmc
and
sub
mov
insl
pusha
mov
ljmp
sahf
mov
stc
stc
push
out
call
ja
outsl
std
jle
sbb
inc
mov
mov
mov
cli
add
or
fiadds
sub
mov
in
push
ljmp
mov
insb
mov
pusha
pop
sub
or
mov
bound
pop
add
push
inc
fnstsw
push
cwtl
fbld
or
push
inc
xor
mov
decl
inc
out
jmp
ja
jecxz
repnz
lock
cmp
std
arpl
xor
sar
sub
xor
arpl
stos
outsb
and
jle
enter
mov
sbb
cmpsb
mov
jge
mov
add
xchg
shrl
cwtl
add
mov
lea
cmp
lret
fisttpll
adc
loopne
pushl
rorl
into
sub
fstpl
adc
pushf
imul
lea
lods
xcrypt-ecb
cmpsl
dec
add
pop
pop
or
out
cmpl
negb
and
xchg
jmp
ret
pop
mov
xor
enter
int
std
rcr
stc
test
std
popa
lcall
cmp
popf
lret
jo
sarl
pusha
and
mov
ljmp
pop
daa
and
lcall
loop
incl
iret
pusha
jg
aas
mov
jmp
pop
pop
push
push
test
pop
pusha
push
jg
pusha
aas
and
outsl
adc
and
push
adc
mov
ret
dec
ficoml
add
inc
jg
decl
movl
pop
daa
ds
mul
testl
fwait
jmp
cld
pop
push
std
cli
inc
mov
push
cld
pushl
lret
mov
sub
pushf
lock
fiaddl
js
jecxz
jb
rol
xchg
mov
dec
pop
push
jg
pushl
pushf
mov
mov
xor
pop
clc
jo
mov
popa
inc
pusha
or
mov
mov
jne
or
push
mov
loope
push
aas
or
filds
dec
and
insl
or
xchg
pop
call
shrb
lahf
lcall
xor
mov
push
jmp
imul
fdivrs
jo
testl
mov
push
lock
add
cmp
and
push
pop
push
cmp
push
cmp
shr
fwait
cwtl
imul
call
rcrl
lahf
xchg
inc
add
mov
mov
and
inc
jne
mov
divl
mov
int3
pusha
mov
lret
xor
xor
jmp
jno
jne
je
sbb
jg
add
add
sbb
out
push
or
push
mov
jge
pushf
les
fucomip
clc
xchg
cmp
outsb
xlat
inc
nop
call
jp
call
mul
xchg
das
adc
gs
loope
push
lahf
push
aaa
sbb
push
call
pusha
es
mov
push
and
fists
repnz
scas
bound
std
les
jge
lea
jg
mov
xchg
add
andb
mov
mov
dec
adc
ja
test
std
insl
decl
cltd
pop
xor
push
incb
sti
in
lea
clc
sbb
test
cli
stc
call
or
fisttpl
fstp
mov
pop
outsl
call
dec
imul
stos
jecxz
mov
hlt
stc
mov
aaa
pop
xchg
fisttps
jns
push
jo
jecxz
outsl
cld
loopne
std
xchg
push
and
pop
xor
in
jp
cli
or
push
pop
cmp
cmpl
inc
out
lock
std
pop
mov
push
adc
icebp
push
sub
jge
filds
pop
sahf
xor
lahf
imul
pop
scas
cs
das
dec
or
mov
mov
decl
pop
push
mov
mov
sbb
xor
cmp
and
mov
or
mov
lahf
out
shr
decl
imul
pushf
pop
mov
jo
adc
sub
test
and
jg
rcrb
scas
jmp
pop
call
sbb
shl
sbb
ret
call
mov
push
addl
mov
stos
outsb
mov
leave
pushl
cmpb
loopne
sbb
repnz
lret
jnp
jb
jmp
decl
xor
out
aas
cmpl
mov
call
mov
jg
push
lods
sbb
pushf
pushf
cmp
in
mov
sbb
outsb
mov
inc
test
cmc
call
pushl
es
and
inc
cli
sbb
adc
out
int3
enter
sub
jg
mov
pop
std
decl
inc
je
scas
test
cmp
adc
aaa
popf
nop
fiaddl
sbb
call
xchg
adc
cmp
in
hlt
mov
xchg
lea
cld
test
daa
aam
sahf
ljmp
mov
xchg
or
mov
sahf
cwtl
mov
mov
cmpsl
xor
das
hlt
jmp
add
mov
pop
xor
pushf
add
xchg
rcll
add
sbb
fcmovnb
fistps
jmp
add
fcoml
push
mov
ret
add
push
stos
sahf
call
mov
iret
cs
ret
pusha
jo
leave
mov
pop
lcall
mov
or
sar
incb
ret
jl
mov
mov
call
out
dec
jmp
shrb
insb
shrb
pusha
and
jle
pop
loop
fistps
dec
faddl
out
testl
inc
sbb
sub
adc
mov
outsb
mov
subl
hlt
test
std
pushl
lock
pop
test
mov
lret
insb
or
aaa
mov
ret
movsl
jp
sti
repnz
lcall
call
shrb
loop
testl
ljmp
or
jns
enter
sbb
hlt
jmp
dec
lret
sub
push
pop
pop
push
sti
cmp
pop
ljmp
mov
clc
and
insb
cmp
xchg
and
test
jb
fidivl
xchg
xorl
test
mov
mov
mov
push
sub
mov
sahf
rcrl
adc
push
sbb
add
ljmp
hlt
pop
lahf
loope
sarb
les
xor
es
cmp
mov
mov
cld
outsl
std
insl
cmp
or
mov
lds
stc
jg
push
add
movb
jmp
xchg
sbb
lock
dec
sbb
repz
inc
sub
pop
lods
sub
push
lcall
aad
test
out
jnp
sbb
lods
das
cld
ret
mov
mov
push
dec
sub
lds
stc
sub
cld
mov
lahf
pop
push
das
cld
mov
cwtl
push
in
fisttpll
jp
push
cmp
loope
decb
cld
pop
dec
fsubrl
inc
ret
dec
and
cmp
clc
in
out
pop
sahf
cld
pop
lret
pop
mov
mov
gs
je
dec
pop
dec
cmpsb
mov
pop
and
mov
add
pop
sbb
jmp
pop
cmp
js
ds
popf
mov
not
pop
sar
das
std
adc
and
fdivp
cmp
ret
xchg
icebp
neg
lahf
sub
add
cmp
and
cmp
push
and
lret
leave
aas
mov
in
cmp
roll
shll
pop
pop
decl
mov
mov
jmp
jbe
shl
popa
cld
sub
jg
cld
aaa
test
stos
call
ffree
xor
popf
inc
popf
mov
jno
mov
pop
cmc
push
mov
push
paddw
jg
sbb
jmp
xchg
insl
dec
fnstenv
pushf
sub
lods
loope
cmp
xchg
mov
aaa
shrb
push
out
add
sub
cmp
adc
xchg
cs
sarb
cmp
loop
cmp
pop
repz
call
sbb
call
mov
adc
aas
sti
fmulp
inc
fs
mov
mov
lcall
sar
push
jno
or
leave
mov
fcomi
inc
inc
outsl
add
and
incl
pop
scas
and
loopne
aaa
adc
call
std
mov
and
and
fmuls
dec
xor
pusha
ljmp
jmp
clc
and
cmc
shl
shlb
dec
lock
and
aam
pushf
or
orl
imul
mov
jg
dec
pushf
push
inc
jp
xor
incl
sbb
andl
sub
and
stos
je
pop
dec
mov
inc
dec
or
push
or
sbb
fistpll
testb
pushl
xchg
mov
push
mov
xor
push
sbb
cmp
dec
xchg
adc
test
add
aad
jl
mov
add
call
fsubs
lea
data16
mov
je
push
pop
push
dec
xchg
jg
pop
pop
cmp
test
stos
call
mov
imul
sub
lods
in
mov
mov
stos
mov
icebp
cld
das
xor
cld
aad
cld
mov
cmc
add
js
fbstp
jno
push
jmp
sbb
decl
push
and
xchg
push
adcb
jle
cltd
mov
ljmp
mov
adc
jg
inc
out
lods
fcompl
arpl
lods
aas
mov
fisubs
std
jmp
mov
enter
call
or
sbb
imul
rep
fs
mov
and
add
ss
push
test
daa
inc
fldt
les
call
pushl
dec
adc
orb
daa
lods
pop
ljmp
and
ret
ret
and
and
xchg
nop
pushl
in
lods
jge
cltd
in
cmp
jne
aaa
aam
hlt
or
pop
incl
out
clc
fldt
cwtl
xchg
xchg
jle
add
addr16
ljmp
sub
iret
pop
fists
cmp
xlat
inc
insl
xlat
mov
or
ret
jnp
test
lret
int3
outsl
fs
push
pop
push
decl
sbbl
in
fsubrs
hlt
in
insl
inc
and
aam
mov
xlat
sub
cmp
mov
enter
popa
scas
roll
sbb
adc
cmpsb
hlt
mov
fdivr
jg
call
stc
repnz
adc
inc
andl
addr16
jmp
inc
cli
nop
jbe
data16
leave
minps
out
inc
fdivrp
pop
clc
lret
lret
fildl
shrl
in
inc
dec
inc
in
jg
stos
jg
or
dec
mov
mov
decl
test
popf
adc
sti
out
cld
add
inc
and
insl
jbe
jmp
mov
xchg
xor
out
push
pop
xor
mov
inc
dec
push
ret
sti
jmp
inc
lcall
pushl
iret
out
in
and
fcmovnb
outsb
insl
push
loopne
mov
jg
outsl
pop
test
pushf
and
cld
and
aam
adc
negb
jecxz
mov
test
call
cmp
in
out
xorl
sub
fsub
incl
sbb
lock
inc
dec
inc
xchg
pusha
or
ret
jp
push
and
iret
lahf
or
xor
cmc
sbb
dec
pop
js
in
cwtl
lock
pop
iret
sbb
fildll
dec
ljmp
push
mov
xchg
cld
or
mov
filds
push
push
inc
mov
inc
in
decl
dec
mov
fidivl
xor
insl
in
adc
inc
outsl
jg
pop
decl
push
mov
ret
inc
pop
arpl
ret
aas
frstor
push
jbe
out
fldt
fisttpl
imul
jmp
les
jnp
adc
repnz
fistl
shlb
cmp
add
nop
mov
and
inc
cmpsb
xchg
rep
cmpsb
scas
je
or
mov
icebp
push
mov
loop
bound
fisttpl
pop
mov
or
xchg
data16
mov
test
cmp
loopne
cmc
std
mov
ret
lret
sub
jno
xlat
pop
lret
mov
cmp
decl
pop
push
enter
daa
mov
jg
jbe
insl
in
and
mov
sub
aas
cld
lcall
add
xor
xchg
add
in
and
sbb
repnz
xchg
int3
adc
mov
xchg
outsb
jg
mov
jb
adc
mov
enter
dec
das
lock
bound
push
insl
addr16
shlb
sbb
pop
insb
jg
call
push
push
ret
xchg
shrl
lcall
push
sahf
or
pushl
clc
inc
cmp
fildl
mov
test
pop
inc
cmpb
cld
ljmp
adc
js
pop
xchg
bound
dec
ret
jg
loopne
ret
leave
fistpll
daa
js
fisttpl
test
dec
ret
pusha
jmp
test
mov
sub
pop
push
lret
dec
mov
mov
mov
sbb
jg
or
lret
mov
mov
in
lcall
fistl
jmp
shrb
ret
pushf
sbb
loope
imul
leave
ret
jnp
int
int
lahf
sbb
std
jg
out
add
fcoms
xor
insb
or
fdivr
pushl
adc
dec
dec
xchg
aam
push
lds
xchg
insl
inc
sti
sub
cld
ljmp
inc
icebp
sarl
sbb
je
push
rcr
cmpsl
pop
or
out
and
dec
fdiv
bnd
sbb
xlat
inc
push
imul
mov
mov
in
xor
jg
pop
cmpsb
push
int
push
xchg
mov
and
mov
inc
aad
mov
mov
movsb
loop
test
push
jnp
jns
dec
insb
add
clc
das
add
xchg
mov
pop
sbb
adc
dec
and
add
decl
sub
xchg
xchg
mov
pop
rol
mov
mov
mov
sbb
jbe
inc
scas
test
addr16
int
dec
aad
ret
das
lock
inc
rol
fimuls
inc
hlt
mov
jge
testb
movsl
scas
pop
fistl
test
ja
punpcklbw
dec
insl
pop
inc
pop
mov
mov
adc
xchg
mov
jecxz
call
xor
push
cmp
add
idiv
jle
outsl
mov
pop
cmpsl
and
scas
or
mov
popa
fdivs
xchg
inc
hlt
and
aam
xchg
rclb
inc
filds
push
dec
sbb
dec
sbb
aas
das
repnz
inc
enter
sbb
adc
clc
int3
rcrl
out
cmp
repnz
jg
fcoms
pop
push
sbb
lods
loopne
jb
or
test
data16
pop
fistps
jg
push
xchg
jg
push
insb
push
jnp
jg
xchg
mov
dec
icebp
sub
add
out
int3
inc
push
lret
sub
pop
push
int
inc
ljmp
fldt
or
mov
dec
pop
stc
or
mov
jo
dec
cmpsb
pop
into
in
jns
imul
call
inc
xor
test
sar
jmp
pop
cmp
mov
and
loope
mov
lods
push
lods
ds
rorb
push
int
inc
insb
xor
xchg
dec
mov
lcall
in
push
cmp
aas
std
mov
incb
hlt
enter
outsb
jb
dec
or
pop
clc
mov
cli
sbb
in
out
and
adc
sub
jmp
loopne
insb
push
adc
dec
int
and
fildll
jmp
jge
pop
sbb
aad
inc
data16
lret
repz
and
sub
mov
aam
sub
imul
adc
push
outsl
movsl
xchg
dec
sbb
jge
icebp
push
loope
mov
jg
mov
jg
ljmp
stos
jno
xchg
mov
add
fs
pushf
xchg
stc
es
sub
stc
push
sbb
inc
hlt
ljmp
sahf
xchg
js
fisubrs
out
mov
sub
adc
jg
repz
movsl
push
mov
sub
and
ljmp
cmp
fbld
in
loope
lea
stc
jnp
lods
push
test
clc
jmp
das
pop
xor
adc
loope
leave
loopne
adc
push
fnstsw
fs
clc
incl
fisubrl
sahf
enter
cmp
clc
xchg
aaa
mov
jge
mov
or
and
pop
mov
clc
cwtl
sbb
sub
sahf
mov
xlat
xchg
dec
push
shr
sub
sarb
rclb
inc
push
dec
dec
aaa
and
ljmp
mov
dec
loope
inc
imul
lcall
lret
push
out
hlt
aas
dec
std
decl
insb
mov
and
dec
lds
cltd
xor
xor
decl
aaa
in
mov
pop
xchg
push
dec
mov
mov
push
cli
jnp
jnp
xchg
movsl
lahf
xor
call
pop
movsb
sub
int
je
push
insl
je
inc
in
stos
xchg
fwait
sub
fldt
frstor
mov
lcall
sbb
fwait
aaa
push
adc
dec
stos
jbe
in
sbb
mov
icebp
outsl
mov
sti
in
jo
fwait
jb
xchg
outsl
fnsave
push
jmp
cmp
or
in
or
ja
lcall
push
adc
std
jg
pusha
cmp
flds
divb
aam
popf
iret
add
jg
mov
adc
mov
dec
mov
cld
adc
test
jne
dec
pop
cwtl
sub
call
das
cmp
jae
mov
cmpsb
ljmp
lcall
mov
fdivs
xor
inc
dec
pop
aaa
sub
pop
loope
fistpll
jns
pop
cmp
ljmp
mov
jbe
call
push
cld
lcall
adc
push
jae
inc
pop
decl
and
dec
mov
jb
add
in
filds
cli
or
insl
push
ljmp
incl
jge
fsubrl
mov
fistl
cwtl
mov
add
mov
outsl
std
jo
loop
shl
inc
fisttps
or
popf
mov
lahf
mov
mov
push
cmp
js,pn
notl
pop
incl
push
imul
inc
pusha
dec
mov
inc
fimuls
movsl
shlb
test
cwtl
add
inc
mov
mov
aaa
xor
lahf
ss
xor
dec
aaa
lock
call
dec
call
aas
or
and
sbb
call
xor
pop
inc
push
bound
shrb
sahf
jecxz
jae
mov
out
cld
inc
ljmp
add
arpl
cmp
cmpsb
call
mov
pop
arpl
ljmp
repnz
adc
lods
ret
jo
jecxz
inc
addl
mov
hlt
jmp
jnp
cmp
and
cmpsb
mov
dec
ljmp
sub
inc
daa
sarb
and
sbb
shr
sub
or
call
jecxz
insb
or
lods
jbe
xchg
mov
dec
sub
decl
cmp
xor
mov
lds
mov
xchg
fwait
cmp
fldt
outsb
pusha
jmp
mov
and
sbb
inc
test
insl
xchg
ret
inc
inc
aad
into
movsl
and
das
std
or
adc
xor
decl
cmp
pop
inc
jmp
cmc
lods
scas
sub
pop
adc
cmp
mov
loop
dec
push
js
mov
out
imul
cmp
sti
add
jmp
lret
inc
adc
addl
jge
dec
mov
jg
jg
shrb
out
sub
push
iret
xchg
testl
lahf
sbb
dec
outsb
push
mov
jg
lods
pop
adc
and
shlb
push
int3
jae
stos
fidivrl
xchg
in
call
pop
push
test
xor
pop
outsl
pop
and
cs
cmpsb
inc
sahf
jb
or
or
data16
sub
pop
rcll
sub
and
call
cmp
test
push
xchg
jno
ret
mov
mov
and
lock
ljmp
and
pop
or
popf
jmp
fldt
fistpll
and
xchg
dec
dec
cmpsl
sbb
pop
incb
dec
ds
in
stc
cmp
xchg
rolb
pop
inc
adc
inc
adc
xor
fiadds
incl
jbe
movb
lock
mov
movsl
stos
leave
sub
pop
sbb
xor
incl
fcoml
add
push
sbb
es
das
push
stos
int3
xchg
inc
out
push
xor
mov
mov
scas
call
inc
cwtl
sar
pushl
cli
ret
adc
aas
mov
fstps
push
int3
xor
fucomip
cld
lret
add
sbb
ffree
and
aas
and
pushl
xor
call
inc
xchg
sar
mov
push
xchg
in
call
incl
add
imul
push
lahf
shrl
aad
xchg
sbb
jnp
pop
adc
add
int
out
xor
xchg
push
rorb
aaa
mov
jns
fsubrl
cli
jg
mov
shll
push
jge
movsl
lahf
xchg
cmp
and
lcall
jge
cli
inc
stos
popl
aaa
pusha
xchg
dec
inc
loop
test
int
jae
adc
mov
cmp
psubw
mov
lods
push
dec
pop
scas
das
mov
mov
shl
dec
outsb
mov
mov
sar
sahf
lds
out
pop
cmp
test
jg
pop
mov
dec
adc
push
jecxz
sub
and
pushl
adc
pop
lret
fwait
ds
aaa
icebp
ret
adc
sbb
jge
outsl
jg
cs
mov
jle
test
adc
inc
mov
lcall
vpaddsw
jmp
and
push
mov
es
stc
imul
pop
and
imul
mov
std
out
push
mov
inc
push
xor
xchg
sahf
insb
push
mov
pop
push
add
stos
subl
in
and
imul
mov
lcall
int3
sar
mov
cmpsl
mov
mov
xor
xchg
int
inc
pop
cs
xor
mov
pop
adc
cld
incl
out
std
jbe
in
mov
lea
jmp
stos
push
xchg
push
call
and
subb
push
lcall
xchg
dec
out
fwait
pop
xor
in
insb
ret
lcall
clc
dec
jecxz
or
jne
dec
cmp
cltd
cs
hlt
pop
mov
fnstsw
mov
aad
imul
js
jl
and
xchg
lcall
sbb
pop
and
ret
inc
inc
out
inc
or
pop
xchg
arpl
and
in
in
inc
jbe
jmp
into
cltd
add
jnp
movsl
jmp
arpl
lock
cli
xchg
iret
pusha
rclb
xor
push
pop
jb
loopne
fs
xchg
pop
mov
outsl
jp
mov
imul
mov
mov
lahf
loope
and
jl
xor
out
rcrl
push
mov
sar
pushl
inc
rclb
sbb
or
mov
dec
cmp
adc
inc
movsl
push
and
mov
xchg
rorb
push
fldenv
push
sbb
mov
subb
sahf
lea
std
adc
sbb
xlat
popa
popf
cmc
mov
xor
dec
jge
repnz
pushf
enter
lock
sbb
test
out
push
aaa
sbbl
lcall
dec
mov
xchg
outsb
xchg
dec
cmp
mov
fdivrs
jmp
xchg
and
pop
rolb
mov
aam
pop
adc
adc
mull
outsb
inc
xchg
push
fsubl
jb
in
mov
loop
add
out
add
pushl
add
add
decb
push
pop
add
mov
cld
dec
inc
sub
incb
icebp
incl
jp
outsb
je
dec
sub
pop
fisttps
pusha
xor
decb
jne
pop
or
addl
xlat
push
fsubs
push
or
and
mov
push
push
sub
xchg
bswap
inc
jns
xchg
mov
je
or
add
ja
xchg
mov
add
imul
fnstsw
and
insl
push
je
outsb
sbb
push
mov
push
movsl
enter
mov
pop
jnp
jmp
fists
movsb
sub
lcall
push
inc
cmpsl
arpl
ss
sbb
xor
dec
jge
testb
push
or
push
dec
outsb
outsw
nop
sub
push
jns
push
ud2
testb
mov
jg
push
add
or
add
pop
sbb
sahf
and
push
add
jp
test
fildl
gs
sbb
outsb
push
orb
icebp
lcall
addl
fbstp
xchg
dec
inc
imul
fucomip
dec
popa
jo
dec
mov
jne
data16
sahf
dec
fdivs
inc
aaa
push
bound
adc
or
into
test
daa
outsl
jns
push
cmp
js
xchg
daa
jmp
or
bound
insl
scas
into
mov
pop
mov
sbb
sub
jo
mov
out
js
push
je
cld
call
ja
insl
nop
test
test
decl
mov
int
nop
arpl
pop
jae
jnp
sti
insb
cmpsl
adcb
pop
inc
subb
sahf
lcall
lcall
pop
inc
pop
sbb
jae
xor
das
cmp
fs
decl
xor
inc
adc
insl
aaa
insb
shll
jl
sub
mov
sbbl
push
dec
adc
mulb
pop
push
jb
adc
push
das
cld
push
pop
rclb
mov
cld
adc
outsb
fimull
add
gs
mov
pop
or
cmp
sub
cmp
jge
adc
dec
add
push
inc
inc
and
outsl
cld
xor
and
jbe
lret
xchg
negl
jecxz
push
roll
inc
or
sti
mov
push
enter
mov
push
push
cld
test
add
sub
xchg
pop
loopne
push
in
or
mov
xchg
push
adc
icebp
ret
adc
fsts
jge
loop
popf
out
nop
jbe
mov
xchg
fcoms
aaa
fadds
or
push
add
xor
pop
pop
cs
add
mov
daa
rorb
aaa
sti
stos
aas
adc
jmp
dec
jne
pop
fsts
add
das
mov
adc
jo
lea
sbb
test
add
xchg
or
adc
and
aam
adc
add
jno
and
or
jmp
aam
sub
mov
inc
jbe
fcomi
adc
pop
push
sub
jbe
push
push
push
adc
rorb
pop
sti
jae
jne
push
jae
xor
scas
adc
dec
cmp
adc
je
lds
leave
or
sub
dec
jne
inc
sbb
add
or
std
add
add
cld
jbe
inc
and
adc
nop
mov
add
mov
xor
loop
movl
add
jmp
mov
adc
add
cmpb
jne
mov
lock
incb
mov
shr
rclb
les
call
add
cmp
pushl
and
rcl
outsl
mov
daa
lea
repz
pop
or
xchg
mov
jg
dec
or
pop
movzwl
push
inc
mov
in
repnz
push
sbb
add
adc
mov
les
orb
add
push
push
push
out
mov
andb
addb
fcomip
pusha
sub
adc
add
lcall
subb
les
sub
jmp
sub
and
mov
test
pop
add
push
and
jg
fisttpl
in
adc
pop
push
push
lock
inc
dec
fadd
add
std
psubusb
xor
mov
lret
pavgb
adc
or
shll
ds
pop
push
nop
sarl
js
test
pusha
pop
adc
jmp
add
testb
inc
push
or
loop
inc
mov
xchg
adc
icebp
test
or
rsm
or
cltd
add
inc
mov
test
or
add
popf
push
adc
outsb
pop
cmovno
or
mov
decl
dec
insb
ds
adc
mov
sub
jg
sbb
xchg
data16
call
add
movsl
cs
frstor
mov
mov
lods
inc
mov
data16
sbb
addr16
jg
cmp
aaa
sbb
xchg
fwait
sbb
cmp
sbb
addr16
jo
pop
pushl
inc
aam
sti
dec
inc
popa
clc
clc
sub
add
adc
fwait
loope
pushl
test
and
scas
and
inc
movsb
or
ja
mov
orps
stos
daa
icebp
decl
cld
pusha
cs
pop
jp
cmp
cmpsb
lds
in
fs
jecxz
inc
push
popa
leave
decl
lret
icebp
xchg
xor
mov
jbe
push
loopne
aad
ret
pop
pushl
fistl
iret
cmpl
push
lcall
arpl
pop
pop
lods
mov
fs
leave
push
push
sar
sub
jne
sbb
je
and
xor
hlt
or
and
push
add
pop
sbb
jne
jle
std
test
or
iret
leave
sub
setp
push
cmp
ror
call
stos
cli
dec
mov
push
fisttpll
test
inc
into
push
mov
or
test
add
insl
or
sbb
cmp
aam
stos
stos
scas
pusha
test
add
jecxz
jle
cmc
int
jecxz
jp
movsb
jnp
stos
dec
inc
hlt
pop
call
pusha
add
cmp
add
push
pushf
inc
dec
cmc
aad
push
add
jg
popl
add
test
scas
add
add
push
push
jl
mov
inc
test
pushf
nop
jecxz
mov
ja,pt
stos
outsb
add
jnp
pop
and
jmp
add
and
mov
add
cmp
adc
lea
mov
push
mov
cli
lock
add
mov
stos
incl
icebp
rcrl
aad
adc
mov
sbbl
popf
or
add
pop
or
repnz
test
lea
cmp
cmc
push
fldt
push
cltd
in
push
xor
test
aaa
sub
sub
jmp
push
push
pop
push
lods
pop
fdivrl
push
add
mov
loopne
or
push
call
scas
rclb
call
inc
ss
xchg
fistl
jmp
in
mov
add
sub
fldcw
call
and
scas
jnp
dec
and
insb
enter
jmp
inc
clc
add
ljmp
push
push
pop
push
add
divl
shr
sbb
add
jp
rcrb
je
jmp
push
add
or
push
mov
shlb
jo
aaa
and
test
clc
das
jl
outsb
test
mov
jmp
leave
stos
mov
shr
idivb
pop
ror
cmp
shr
test
pop
add
jo
xchg
adc
ds
and
fistl
push
leave
pushf
sahf
aas
rcrl
daa
sub
insb
add
call
inc
sbb
mov
ret
jo
push
add
cmp
inc
rol
xorb
adc
xor
in
cld
sbb
xor
or
xchg
sarl
or
jb
pushf
sub
add
mov
add
mov
mov
call
sahf
call
push
call
cmp
das
pop
mov
add
mov
sbb
mov
test
leave
add
add
subl
xor
inc
loopne
or
cltd
and
jmp
and
adc
add
std
jecxz
and
or
lret
push
push
add
dec
xor
inc
loope
jmp
lret
pop
lock
cli
xchg
js
sahf
std
call
sub
movsb
pop
add
cli
add
cmp
loop
stos
jno
jecxz
push
js
push
sub
sbb
pop
or
pop
mov
add
call
hlt
sub
loop
shll
add
jbe
pushf
or
leave
add
add
xor
sbb
addr16
jne
sub
adc
jl
sbb
jno
cwtl
jmp
xchg
inc
fsubrl
adc
push
dec
lock
push
mov
push
aas
pop
push
aad
mov
loope
or
sub
push
adcb
ret
movsl
shlb
shrb
or
cwtl
add
pop
add
push
push
xchg
loope
fxch
out
rcr
pusha
inc
rcrb
call
mov
pop
fcoms
test
jl
pop
adc
xorl
pop
or
shr
or
lds
add
sahf
jbe
call
jo
pop
sbb
lods
sti
adc
nop
jne
jmp
stos
sub
sar
jo
mov
popf
jb
mov
imul
in
xor
pop
mov
insl
pusha
mov
mov
pushf
mov
add
mov
call
popf
cmp
jle
ret
pop
mull
inc
fmuls
frstor
clc
add
jno
shr
sbb
push
lret
fwait
mov
mov
xchg
out
push
aam
and
mov
aas
push
inc
xlat
fstp
sbb
mov
adc
xchg
pop
sbb
xchg
add
inc
jb
jne
add
add
fcmove
push
push
movsb
add
or
push
jnp
push
push
jecxz
das
cmp
lcall
mov
mov
not
cmp
add
sbb
rolb
inc
or
inc
out
mull
add
jg
jge
or
and
scas
mov
add
mov
addb
inc
shlb
movsb
jmp
gs
jmp
push
mov
jne
or
fdivl
or
rcrb
rcll
sar
add
xor
fadd
pop
sbb
adc
mov
and
fneni(8087
in
fcmovnbe
sbb
rcr
mov
scas
add
call
lock
sbb
or
clc
pusha
scas
xor
test
shll
incl
mov
pop
test
cmp
imul
imul
cli
fsubr
xchg
call
out
mov
cld
pop
rcr
pop
pushf
push
addl
pusha
test
bound
xor
icebp
rolb
pushf
leave
pushf
add
call
test
adc
pushf
push
into
jle
rol
pusha
lods
sbb
stc
insl
mov
push
rol
pop
fisttps
fs
addl
jecxz
daa
test
or
sbb
xchg
jecxz
dec
xorb
add
jo
mov
pop
mov
jbe
or
decb
js
pop
push
xchg
addl
scas
scas
push
inc
lods
sbb
pop
sub
cld
jmp
mov
dec
add
call
ja
jmp
lret
sbb
shll
or
mov
push
and
add
enter
add
jmp
adc
loopne
mov
negl
and
cmp
add
sarb
sub
pop
jae
fdivr
lea
xlat
add
or
pusha
xor
jno
xor
mov
push
in
add
jl
sub
mov
inc
add
and
lods
mov
ds
stc
shl
fxch
cmp
loope
pop
push
add
fwait
push
test
xchg
push
stc
bound
outsl
idivl
mov
insb
inc
int
mov
hlt
cmpsb
fimull
sbb
mov
fmull
adc
mov
jmp
cld
ds
cmp
mov
fwait
pop
push
add
sbb
adc
push
hlt
mov
gs
arpl
xchg
out
les
mov
int3
jno
adc
imul
rcr
call
ret
push
pop
aam
add
into
mov
data16
lret
adc
push
cltd
call
sbb
andb
gs
pop
add
mov
nop
xor
into
in
mov
dec
adc
add
adc
lea
add
push
fdivrp
cld
or
mov
rclb
xor
js
or
ret
jo
jmp
lock
inc
idivl
sub
adc
testl
dec
cli
push
or
bound
icebp
push
fdivs
or
shll
iret
jno
iret
xor
pusha
sbb
call
xchg
addb
or
or
push
sub
adc
cld
mov
add
adc
xlat
testl
divb
mov
and
cmpl
lret
lods
jne
add
icebp
cmove
in
add
cld
adc
dec
inc
fwait
mov
cli
clc
clc
adc
loopne
xor
mov
xor
scas
adc
push
inc
add
push
hlt
js
add
sarl
out
call
mov
mov
pop
aad
push
xchg
adc
cmp
cwtl
mov
dec
sub
rcrb
pop
push
push
add
jns
jmp
adc
into
sbb
testb
fistpl
call
mov
ja
push
loopne
ret
pop
push
call
mov
xchg
call
add
xor
cld
nop
push
xchg
call
lret
sahf
jae
insb
xor
jb
sbb
les
pop
lcall
ljmp
dec
inc
dec
enter
daa
push
jno
addr16
insl
sbb
incl
dec
std
jge
jmp
inc
addr16
aam
das
push
les
out
daa
mov
sub
lret
popa
test
fldt
fisubrs
das
mov
inc
jbe
mov
stos
cmp
mov
jmp
jbe
ret
loop
add
pop
movsb
mov
repnz
mov
add
cld
inc
nop
jp
inc
inc
iret
lret
scas
jge
rcrl
jl
cmc
pop
pop
out
loopne
jg
sub
jp
in
pop
dec
inc
ret
aam
push
shl
pushl
and
test
sub
mov
add
out
repnz
aas
add
lods
adc
xlat
sbb
xor
xor
loopne
sub
sbb
test
idiv
pop
xor
inc
pusha
mov
and
pop
lret
mov
pop
jns
mov
je
in
dec
add
pop
push
iret
ljmp
sub
or
into
jge
mov
push
clc
add
les
push
cli
jmp
in
aad
or
ret
sbb
call
ret
dec
mov
push
pusha
jo
jbe
int3
or
jge
arpl
push
push
movsl
mov
jge
sub
loope
dec
dec
pop
mov
aam
pop
fsub
sub
in
test
cmpsb
insl
mov
or
cmp
bound
cmpsb
es
incl
add
push
adc
mov
xchg
addr16
repz
jbe
rolb
int3
jg
arpl
jg
jp
out
cmp
jge
incl
dec
inc
nop
and
aam
pop
int
es
push
adc
out
popf
fwait
mov
jle
add
cmp
imul
out
fs
fidivrs
loop
mov
pop
fdivr
inc
add
imul
jo
daa
push
decl
lret
ret
das
cmp
push
icebp
push
push
adc
sbb
loop
stc
pusha
dec
aaa
and
aam
jnp
jbe
dec
ljmp
sbb
out
aad
stos
dec
and
pop
shll
lea
outsl
mov
pushf
pop
fildl
add
pushl
inc
fmull
int3
iret
lods
and
shrl
stos
and
nop
dec
pop
jl
jge
sbb
icebp
insl
dec
push
shlb
xchg
fsubs
clc
jmp
xchg
and
cs
add
push
cmp
mov
les
or
jbe
inc
in
insb
adc
fldt
mov
ret
jb
movsb
mov
leave
aas
insl
es
adc
insl
popa
or
add
cmpsl
xor
test
insl
fcomp
push
mov
jg
in
mov
pop
testl
push
repnz
dec
adc
inc
xchg
out
mov
push
lds
scas
push
js
mov
clc
rorb
rol
sbb
lds
and
outsl
and
add
and
fs
insb
testb
pop
add
dec
push
aam
pop
lret
insl
or
push
in
sub
test
repz
lcall
movzwl
and
mov
movsb
fwait
sbb
inc
jl
mov
inc
icebp
jg
mov
xlat
ret
jl
int
enter
sub
xchg
ds
mov
push
mov
jbe
lods
push
jbe
add
sub
xor
movsl
jg
or
loopne
sub
push
jg
rorl
roll
push
nop
inc
inc
push
mov
mov
add
push
sbb
or
shll
mov
sbb
inc
pushl
adc
xchg
mov
ja
loope
xor
adc
ss
ljmp
adc
jl
mov
cwtl
cltd
movaps
jb
or
dec
test
adc
xor
xor
jo
daa
insb
add
mov
fistpll
enter
add
movsb
cld
inc
scas
cmp
loope
sub
aaa
cli
call
cltd
push
std
test
xchg
mov
push
mov
lret
mov
das
jmp
push
adc
mov
add
mov
cli
mov
fwait
dec
inc
aad
or
cs
jmp
adc
test
ljmp
xor
dec
mov
fbstp
mov
jmp
cmp
shll
lret
repz
or
enter
in
push
aaa
adcl
mov
mov
clc
push
pop
sub
testl
aad
or
mov
inc
subb
ret
mov
or
adcb
pushf
dec
lea
sub
pop
arpl
js
loop
insb
inc
stc
inc
xor
xor
adc
jp
xchg
in
cmp
repnz
sub
pop
shrb
lcall
pop
xorl
cmp
bound
mov
std
in
sub
dec
lods
cmp
push
mov
call
mov
stos
jno
xchg
mov
mov
or
loope
repz
sub
nop
lahf
pusha
fldt
fsubr
out
test
aaa
mov
daa
sbb
test
out
xchg
jle
inc
mov
xor
int
adc
push
lret
pushl
mov
out
div
addb
aaa
cld
mov
adc
subb
out
fst
jb
dec
subb
xchg
int3
decl
push
cmp
mov
xor
incl
repnz
addb
inc
sbb
jg
sahf
adc
aad
push
mov
jg
mov
add
lahf
add
dec
pop
out
insl
popf
iret
or
cmpsl
push
arpl
in
je
inc
cld
incl
xchg
in
sahf
out
stos
ja
push
out
inc
xor
push
hlt
lcall
sub
add
icebp
sbb
and
es
mov
lods
sbb
out
xchg
dec
jge
and
push
mov
jl
mov
lcall
pop
loopne
sti
scas
fists
iret
mov
mov
xchg
or
call
sub
dec
cmp
loop
mov
popf
mov
stos
and
icebp
dec
scas
cs
outsl
jne
clc
fnstenv
imul
inc
xor
jg
stc
ret
adc
mov
stos
jp
imul
push
cmpsb
jnp
add
mov
and
xchg
xlat
lret
push
scas
incl
or
dec
fwait
int3
push
inc
out
dec
pop
xor
repnz
repz
cs
and
sarb
or
icebp
inc
out
and
stos
cli
movsl
mov
nop
cmpsl
push
dec
xor
std
inc
sub
out
es
add
adc
stos
incl
push
inc
sbb
fidivrl
cmc
out
push
jl
ljmp
push
mov
add
mov
test
dec
or
dec
xor
stos
test
ljmp
popf
imul
insb
add
scas
jo
mov
fistpll
pop
and
in
sbbl
jg
push
cmpsb
cmp
je
sub
add
mov
imul
incl
dec
cmpsl
inc
adc
xchg
into
inc
inc
aad
movsw
and
mov
cli
loopne
cli
aas
jno
inc
adc
lahf
fisttps
cmpb
add
movsl
test
jg
xor
clc
ret
adc
push
rclb
mov
popf
aam
lods
test
mov
out
push
mov
cmp
xchg
or
test
mov
test
fucomip
push
adc
aaa
arpl
fistps
aad
lret
scas
mov
call
adc
adc
cmp
aas
sub
push
or
jp
loopne
rorb
clc
pop
xor
adc
mull
mov
pop
and
cli
and
fistl
push
add
cmp
jb
or
movsb
and
in
xchg
or
push
test
insb
pop
sub
ljmp
inc
sbb
movups
xor
sahf
test
xchg
push
adc
pop
xchg
popf
stos
xchg
xchg
cmp
add
mov
lahf
or
jg
sti
dec
mov
outsb
nop
les
aad
lret
inc
pusha
sbb
fimuls
pop
clc
pop
in
and
movl
and
call
loopne
xor
adc
inc
mov
ret
dec
call
addr16
xor
out
mov
loop
cmc
dec
out
movsl
out
test
pop
inc
cmp
inc
push
push
pop
and
add
xchg
jno
lret
or
inc
sbb
xchg
nop
cltd
cmp
sub
xor
sub
mov
mov
pop
xor
inc
pop
decl
sahf
xor
lcall
add
mov
mov
xchg
jmp
lret
and
xchg
incb
ret
jns
outsl
jno
aad
fstps
fwait
stos
jg
xchg
mov
mov
add
xchg
add
inc
dec
pop
out
inc
sbb
xchg
lods
incl
adc
imul
xchg
inc
adc
rclb
pop
mov
push
pop
cmp
int3
mov
aad
xlat
lds
bound
fimuls
out
out
movsb
push
outsl
clc
incl
and
stos
mov
fdivrl
orb
and
hlt
dec
aam
lcall
scas
pop
cmp
fwait
inc
mov
inc
decl
dec
mov
cmpl
inc
jae
inc
imul
jmp
lds
push
cmp
adc
lock
sub
pop
arpl
into
fnstsw
clc
incl
les
insl
cs
lret
inc
in
pop
xor
aaa
outsl
cs
repz
iret
push
sbb
arpl
xor
leave
std
imulb
shrb
sbb
out
imul
inc
decl
shlb
bound
mov
fcomps
fists
mov
je
in
in
shrl
dec
sbb
xchg
cmp
outsl
incb
fwait
mov
adc
xchg
xor
sbb
lcall
inc
adc
decl
mov
test
fwait
push
js
in
lods
jb
pop
movsl
test
arpl
and
lcall
and
enter
dec
in
push
cmp
sti
fdivp
push
mov
mov
fildll
sub
adc
fists
jp
mov
mov
add
xor
in
sahf
jl
inc
pop
sbb
adc
cld
ja
push
scas
das
out
aad
ret
jo
cmp
adc
inc
mov
xor
decl
cli
push
gs
xor
mov
sbb
sub
aad
add
ljmp
ss
jo
jb
dec
std
pop
sub
push
neg
push
sbb
test
fldt
cs
addl
stos
add
push
jmp
sub
fdivrs
js
pop
lret
inc
inc
xlat
jmp
mov
bound
push
fcmovnb
imul
ud0
adc
xchg
mov
mov
mov
mov
and
xlat
and
ffreep
rclb
sub
ret
bound
mov
xchg
enter
and
addl
xor
lods
pop
pop
repnz
and
fiadds
xchg
pop
decl
mov
jecxz
xor
pusha
out
es
pop
ret
lcall
fwait
add
loopne
pop
adc
xchg
sbb
lock
fstpl
adc
jmp
adc
sub
ljmp
mov
jge
cld
pop
into
cld
cmc
out
xchg
xchg
mov
mov
jmp
mov
pop
decl
mov
add
mov
aam
push
das
loope
jmp
std
dec
jae
clc
mov
insl
and
xchg
xchg
cwtl
int3
sarb
add
jg
cs
out
adc
mov
js
xor
pop
in
arpl
decl
jge
sbbb
stc
out
adc
push
andb
add
cmpsl
in
fists
jo
pop
fistl
sbbl
adc
or
leave
icebp
in
mov
test
mov
inc
push
movl
mov
pop
inc
enter
jg
mov
mov
and
push
pop
lret
es
mov
lahf
add
pop
dec
out
loopne
fildll
and
dec
xor
jae
jmp
cmp
add
scas
shlb
jno
aaa
hlt
xor
ffreep
adc
pop
and
lret
gs
mov
mov
out
repz
mov
add
insb
or
test
test
add
mov
and
cmpsb
je
cs
cmp
sbb
xor
sub
and
insl
add
fildll
aaa
sbb
call
ljmp
in
sbb
bound
sub
gs
jle
subb
outsl
clc
ljmp
xor
aas
pop
push
js
loope
mov
adc
lret
inc
mov
icebp
push
mov
cwtl
xchg
sbb
and
sbb
add
sti
repnz
jecxz
stc
and
add
imul
inc
testl
and
pop
les
jmp
inc
sahf
xor
in
aad
ja
sub
pop
xchg
xor
xchg
jl
add
xor
call
and
sbb
sbb
adc
add
mov
add
and
jb
sub
jb
cmp
fldcw
outsl
data16
sbb
scas
stos
pop
repnz
fs
mov
push
gs
push
outsl
imul
pop
call
mov
add
lds
push
mov
push
outsb
adc
in
outsl
cmp
imul
pusha
add
mov
or
add
ss
xor
mov
add
mov
in
lret
bound
mull
je
inc
xor
data16
add
dec
pop
divb
jo
subl
push
mov
push
cmp
fstl
adc
lds
sti
cmp
inc
mov
mov
add
cmp
pop
or
add
inc
add
pop
jb
adc
add
ret
push
daa
test
add
add
lds
add
daa
add
add
packsswb
aaa
or
sbb
adc
std
or
pop
jb
or
mov
add
repnz
leave
push
sbb
add
bound
pusha
push
pop
pusha
mov
rcll
mov
mov
dec
in
jae
outsb
out
add
sbb
mov
fs
pop
jo
arpl
outsl
fs
inc
imul
push
pop
je
jo
and
and
insb
data16
int
and
cmp
push
sbb
xchg
dec
sbb
sub
add
add
stos
mov
push
repnz
loope
and
add
jne
adc
sub
add
mov
jo
add
push
inc
lods
push
lea
psubb
lds
mov
cmpsl
cmp
push
sbb
mov
mov
pop
sti
or
and
dec
xor
dec
adc
cmp
or
test
and
gs
pop
pusha
pop
aaa
ss
or
pop
xor
and
or
in
cmp
dec
cmpsl
sub
lahf
add
push
mov
pusha
adc
arpl
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
