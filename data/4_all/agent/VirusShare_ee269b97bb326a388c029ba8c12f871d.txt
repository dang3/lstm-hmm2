mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
pop
add
cmp
add
add
add
add
add
add
add
adc
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
.byte
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
.byte
xchg
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
fisttpl
mov
lret
test
fcomp
and
and
jb
push
jmp
and
ds
sarl
fwait
adc
adc
dec
xchg
sbb
pushf
mov
cltd
jnp
pop
das
enter
mov
adc
imul
stos
pop
sbb
sbb
mov
movl
add
scas
loop
imul
push
mov
cmp
dec
cmp
sub
push
pop
inc
xchg
gs
dec
gs
adc
std
jo
mov
mov
mov
stc
into
pop
pop
mov
out
test
or
push
stos
js
test
enter
cmp
das
cld
mov
cmpl
adc
ss
flds
ret
jmp
in
jl
outsl
incl
sub
shl
std
imul
fimuls
push
dec
nop
insb
adc
push
es
stos
and
cltd
dec
adc
mov
sbb
xchg
fmul
scas
adc
js
cmp
int
push
and
icebp
in
sbb
jp
mov
js
xchg
pop
push
sbbw
pop
xchg
pop
xchg
gs
jne
popa
fbstp
xor
int3
ret
sahf
test
repnz
xor
arpl
arpl
out
jecxz
in
push
popa
stos
insl
pop
cmpsl
adc
jnp
das
push
arpl
pop
and
mov
dec
gs
sbb
lods
inc
int
push
cmpsb
or
xchg
lods
cmp
and
add
mov
inc
addr16
inc
lea
jns
mov
xor
sub
stos
push
bound
or
jb
add
pop
imul
cmp
add
mov
ret
insb
lret
add
and
aaa
addr16
jnp
mul
mov
pop
jecxz
cmc
es
cs
pop
fwait
outsb
jmp
cli
fs
mov
fcmovnb
sub
dec
mov
sub
mov
xchg
xor
in
add
add
push
add
ja
mov
lea
jns
jecxz
and
jp
pop
mov
fucomi
js
adc
lcall
pushf
das
sub
push
ret
adcl
movsl
push
pop
mov
mov
xchg
inc
jmp
sbb
lret
and
lahf
xchg
nop
push
sbb
shll
jl
fcmovnbe
outsl
mov
hlt
mov
repz
or
mov
dec
pop
stc
or
aam
test
jns
rolb
cli
xchg
dec
jmp
xchg
movsl
pop
jne
mov
not
or
repnz
jbe
xchg
ss
or
pushf
nop
stc
push
mov
fstpt
clc
sub
ds
mov
pushf
orb
mov
ljmp
add
or
aaa
mov
or
fisttpl
fdivrs
xchg
mov
jp
adc
mov
push
xchg
sbb
imull
leave
incb
or
cmp
cld
xchg
rolb
lahf
and
lahf
and
js
cmp
mov
shr
or
outsb
dec
push
es
daa
jbe
pop
addr16
pop
mov
jg
pop
fidivrs
adc
rorl
das
mov
add
xchg
mov
push
out
lret
sbb
push
inc
mov
bound
fildll
pop
pushf
mov
dec
dec
adc
mov
pop
jg
jne
cld
xchg
enter
mov
fstps
rclb
xchg
cmp
shl
xor
pop
push
jmp
fstp
jge
push
pop
xchg
aad
mov
dec
sbb
mov
sar
or
xchg
sti
sbb
and
hlt
lds
rcrl
dec
push
clc
movsl
and
jmp
push
jo
jmp
inc
les
pop
xor
push
fisttpll
mov
mov
and
sbb
cmp
shrb
pop
stc
sub
sti
sbb
xrelease
mov
int
inc
fs
cmp
jne
and
test
mov
pushf
repnz
std
leave
cmpsl
xor
loopne
test
iret
inc
xor
dec
jno
loope
mov
pop
lretw
adc
in
repnz
aam
fndisi(8087
fsubs
jbe
xchg
lret
cmp
add
sbb
loope
lods
popa
sub
test
xchg
xchg
movsb
loopne
inc
pop
adcl
mov
outsb
pop
mov
das
sub
test
jnp
insb
sarb
fistpll
pop
or
movsl
jg
mov
imul
inc
and
adc
cmpsb
cmc
gs
fucomip
int3
push
mov
push
pop
inc
add
cwtl
dec
test
mov
pushl
adc
mov
push
loope
in
je
decb
xchg
pop
adc
dec
xor
mov
mov
test
mov
or
adc
mov
imul
xor
xchg
sub
and
jnp
scas
data16
cmovae
xlat
movsb
pushf
daa
jp
jmp
pop
ret
rcrl
jecxz
scas
lods
pop
pop
xor
sarl
jle
or
cli
mov
xchg
fcomi
add
adc
mov
shrl
inc
sahf
ret
arpl
into
xor
outsb
pop
or
in
push
mov
mov
cld
fs
xor
jecxz
shrb
scas
inc
in
imul
fcoms
nop
jle
jmp
in
in
inc
outsl
cs
inc
dec
aas
add
xor
xor
xor
aaa
add
movsl
fcmovnbe
sets
dec
and
in
push
adc
pop
icebp
jns
mov
lret
pop
adcb
dec
cld
dec
add
aad
fwait
and
mov
rolb
test
push
sub
inc
jbe
cmpsb
xchg
mov
inc
aad
in
jne
push
ja
xor
or
dec
dec
xor
adc
ljmp
mov
xchg
data16
xchg
mov
mov
out
das
icebp
stc
in
xchg
xor
std
jnp
je
fwait
ljmp
ret
add
es
mov
adcl
jmp
sbb
add
mov
shl
mov
jg
aas
dec
push
xchg
sbb
inc
mov
mov
cmpsb
push
and
jb
ja
or
xchg
popf
ljmp
andl
test
inc
pop
push
cltd
pop
xor
int3
inc
addb
mov
inc
and
or
js
shll
sbb
push
mov
fsts
pop
mov
and
sbb
ret
adcb
pop
push
add
rcll
clts
inc
cli
cmpsl
mov
movsl
sbb
imul
mov
mov
push
push
cs
outsb
jecxz
add
adc
rcll
add
test
sbb
in
nop
aaa
outsb
dec
repz
sub
mov
lock
pop
jmp
stc
mov
dec
inc
loopne
sub
out
arpl
sbb
push
adc
rclb
push
mov
and
icebp
test
push
xchg
dec
jecxz
shll
dec
lods
mov
xchg
inc
popa
js
mov
jnp
into
cmc
pushf
inc
sbb
xor
jno
mov
insb
in
inc
cmpsl
mov
dec
inc
mov
leave
push
mov
lds
js
add
mov
in
mov
cs
loopne
push
xor
jge
xor
fbld
rcrl
scas
lcall
adc
pop
jno
adc
fcomps
push
ds
pushf
adc
test
jo
cmpsl
sbb
cwtl
fisubl
mov
in
push
add
lods
cmp
mov
enter
repz
lret
fildll
dec
out
enter
sbb
add
iret
loope
pop
mov
pushf
into
stc
adc
add
inc
icebp
sbb
sbb
jecxz
data16
lret
xor
andps
dec
outsl
mov
addr16
out
or
aam
lahf
jge
imul
add
ja
cld
out
test
test
mov
cmp
sub
cmpsl
loop
cwtl
sbb
movsl
sbb
das
inc
insb
js
or
adc
push
and
inc
mov
sbb
fildl
cwtl
mov
adc
cld
jge
lcall
ficoms
xlat
inc
or
sub
pop
imul
call
or
sbb
fdivs
js
nop
and
mov
push
adc
orl
mov
pop
std
lret
out
fs
adc
dec
fiadds
and
sub
adc
dec
jae
aad
pop
js
mov
negl
sub
sbb
out
pop
push
lds
pop
nop
sub
fcmovu
cmpl
movb
inc
pop
sbb
and
push
les
add
movsb
add
sub
xchg
lret
xchg
leave
mov
mov
daa
push
icebp
shlb
fdivrs
adc
jle
scas
adc
in
pop
filds
inc
dec
and
ja
je
pop
es
dec
push
xor
add
cmp
aad
int
sti
jb
aad
sub
subl
push
or
xchg
xlat
and
mov
add
mov
inc
or
call
add
in
in
push
popa
mov
rcll
outsl
fisubrs
pop
mov
xchg
or
stos
sahf
add
fsubl
enter
cmp
mov
rorb
std
psrlw
int
dec
pushf
int
mov
push
test
test
mov
adc
es
jnp
pusha
xchg
xchg
xlat
aas
imul
and
popa
mov
sti
addr16
add
std
lcall
repnz
add
das
lock
xor
nop
cs
or
push
or
fisttpl
dec
test
rcrb
add
pop
add
mov
imul
xchg
jbe
test
icebp
push
jb
fisubl
loop
sub
in
jbe
xchg
mov
lods
cmp
jns
pop
popa
dec
xor
pushf
xchg
into
aas
mov
pop
scas
in
xchg
mov
or
rorb
fcmovnbe
mov
mov
scas
or
dec
sbb
out
or
pop
shll
sub
stos
mov
arpl
sub
xchg
jmp
xor
xchg
xchg
scas
xchg
mov
jns
fistl
in
fsubs
vmovups
arpl
sbb
icebp
mov
xchg
xor
and
jmp
add
pop
pop
jne
sbb
jnp
inc
addr16
xchg
clc
and
jno
lods
mov
jns
icebp
jg
hlt
and
jne
dec
shrb
iret
ficoms
and
cmp
and
xchg
jle
or
aaa
fstps
testb
mov
add
dec
lods
xchg
add
cs
push
fisubrs
xor
in
jnp
scas
sub
add
jmp
mov
push
out
scas
jl
jmp
mov
adc
fidivs
inc
push
adc
data16
mov
shlb
faddl
leave
lret
imul
pop
mov
test
rcl
cmp
cld
les
int3
popa
inc
and
loopne
je
mov
std
xchg
testl
and
aam
popa
inc
stos
loop
notl
jno
shlb
clc
outsl
dec
jecxz
mov
repnz
add
add
cli
pop
ds
div
mov
sbb
test
mov
stos
repz
insl
xchg
leave
mov
cmp
in
mov
sub
dec
scas
add
inc
xlat
xchg
in
aad
mov
cld
movsl
add
ljmp
mov
jnp
pop
gs
loop
add
cmp
pop
push
lcall
jle
iret
lock
push
jg
mov
ror
mov
dec
jae
imul
mov
out
scas
jae
mov
sub
push
out
lret
cltd
pop
imul
xchg
aad
sahf
decl
push
sub
pop
mov
push
add
in
cld
roll
lods
out
lret
mov
jp
addr16
xor
cmc
xor
int
adc
dec
rorb
or
mov
jmp
addb
ret
inc
stos
cmp
sbb
cs
je
stc
repz
jp
lret
call
or
into
movsb
loopne
std
dec
out
mov
mov
jno
test
ds
sbb
test
inc
and
mov
cs
or
jl
push
cmp
fwait
andl
add
sbb
push
inc
mov
arpl
pop
std
out
xor
sbb
and
pop
mov
jno
jp
mov
jns
mov
mov
movntps
sahf
mov
and
jmp
fwait
repnz
or
inc
cli
repz
cmp
pop
ss
adc
jns
lock
mov
mov
xchg
int3
adc
call
sbb
mov
cmp
or
add
xor
fcomip
insb
and
xor
lret
shrb
popl
pop
test
xor
or
faddl
inc
call
repnz
sbb
fnstsw
scas
xor
xor
xor
xor
outsb
pop
mov
loope,pn
mov
push
cwtl
push
fld
fisttpll
jne
in
or
popf
push
insl
fldcw
jg
xor
test
mov
lods
pop
cmp
adc
roll
inc
cmp
stos
xor
cmpsl
dec
mov
inc
in
jb
scas
jl
inc
lock
push
pop
in
gs
adc
aas
fcomp
xchg
dec
hlt
or
mov
ret
enter
popf
fs
or
das
jnp
jne
stos
lea
ficoms
mov
mov
movl
hlt
pop
cmpsb
xchg
punpckhwd
or
add
cmp
andb
movsl
movsl
scas
cmpsb
sub
je
pop
stos
nop
sub
inc
mov
ret
in
mov
xchg
call
sub
or
fsubrl
cmp
cmp
jns
fadd
inc
sub
es
xchg
aas
stos
pushf
dec
sahf
nop
jle
xor
leave
dec
iret
mov
cmp
out
inc
fistpl
inc
div
or
cmc
jns
sub
loop
aam
push
lea
je
push
das
ljmp
mov
xor
inc
mov
notb
lds
jge
mov
lock
shlb
mov
sub
notb
mov
into
and
mull
pop
jne
je
pop
mov
dec
sub
leave
sbb
mov
and
iret
add
sub
jp
push
cs
add
lahf
outsb
jbe
mov
out
imul
insl
scas
inc
jne
imull
cs
jo
ss
rorl
mov
pop
notb
cs
loopne
xchg
lcall
nop
push
adc
mov
lret
lahf
pop
negl
call
lret
push
jge
lods
data16
jne
jns
adc
faddp
push
pushf
mov
test
dec
test
lret
dec
movsl
insb
aas
adc
ja
or
xorl
not
and
imul
shrb
xchg
mov
cltd
cmp
je
fcmovne
cltd
inc
adc
cmp
adc
sti
mov
je
rol
cmp
in
aad
pop
pop
add
jo
push
ficompl
mov
iret
sti
shrl
push
inc
jmp
and
sub
jge
fsubr
enter
es
fsubrs
dec
imul
add
stc
sbb
inc
outsb
hlt
pushf
or
add
pop
mov
adc
lret
jg
sub
inc
lds
dec
mov
xchg
xor
imul
cmp
dec
add
mov
hlt
cwtl
inc
dec
test
ltr
or
sbb
aaa
test
lds
out
stos
in
mov
sbb
xchg
mov
pop
lret
es
sbbb
out
mov
and
xchg
call
iret
sti
jo
outsb
mov
roll
in
jle
jl
nop
jo
xchg
sti
inc
jecxz
and
je
lock
or
push
dec
imul
daa
and
repz
adc
repz
dec
add
sub
mov
sarb
insb
mov
adc
pusha
lret
loop
imul
push
sub
mov
pusha
cmc
jae
sbb
xchg
test
aad
inc
xlat
jl
cmp
aad
or
mov
int
dec
loopne
lret
xchg
ret
jne
cmp
out
inc
scas
sub
ret
int
lret
xchg
xchg
add
adcb
push
inc
fildl
icebp
andl
pop
imul
ljmp
cmp
jmp
mov
das
and
dec
sahf
push
pop
fnstsw
and
inc
or
int3
daa
push
jno
push
rorb
cmp
jnp
mov
add
cmp
sub
ss
aaa
dec
inc
aam
xchg
dec
outsl
sub
jns
jb
dec
sahf
ret
lret
mov
mov
divb
dec
jae
or
or
pushf
scas
iret
xor
jp
xchg
in
adc
stos
ds
add
dec
mov
push
dec
aaa
orl
lds
mov
pop
clc
push
xchg
pop
cmp
jg
cmp
add
inc
lock
das
sbb
scas
xchg
stos
pusha
loope
fnsave
xchg
push
stos
in
or
or
in
ret
pop
mov
mov
pusha
push
int3
in
adc
cmp
inc
repnz
push
or
into
and
dec
test
movsb
xor
std
mov
out
dec
adc
leave
repz
mov
mov
outsb
mov
jne
cs
mov
mov
sub
push
mov
clc
popf
and
jp
clc
cltd
insl
ret
xchg
fildl
negb
int
ret
shrb
outsl
ficoml
mov
dec
dec
cltd
mov
lds
mov
dec
and
ret
sarb
push
push
sub
mov
mov
hlt
stos
outsl
mov
mov
out
jge
daa
movsl
fstp
mov
adcl
mov
xchg
mov
fcomps
dec
add
inc
jmp
push
js
mov
sbb
ljmp
add
or
dec
sbb
dec
sub
js
xor
inc
mov
js
call
cmpsb
pop
jecxz
arpl
hlt
add
mov
push
addr16
fwait
push
and
mov
xor
push
jo
mov
cmp
repz
repz
inc
pop
lock
scas
lods
out
xor
sub
lea
test
jb
adc
inc
pushf
hlt
nop
lock
fsts
out
or
inc
lahf
push
in
fisubl
add
out
int
popf
mov
je
and
adc
adc
sub
fmull
jnp
ret
or
add
mov
fcoms
push
mov
int
fldt
and
fldcw
rcrb
orl
inc
and
paddusb
push
mov
loop
fimuls
mov
push
pop
loope
pop
notl
or
mov
xor
jp
xchg
clc
push
adc
hlt
push
aas
mov
fisttpl
mov
cmp
adc
xchg
mov
jnp
lret
inc
lods
inc
loope
ret
in
dec
fdivp
mov
lahf
sbb
inc
cli
mov
xchg
rorb
or
stos
jmp
xchg
in
pop
cltd
sbb
dec
stc
cmp
sub
push
clc
in
and
inc
jmp
out
addl
mov
frstor
mov
mov
xchg
scas
xor
xlat
sub
stos
or
aaa
mov
fstl
cmp
sub
mov
insl
aad
outsb
or
sub
test
mov
sbb
jns
pusha
mov
fmul
fcomps
out
cltd
mov
add
cmp
mov
movl
fisubrl
sub
cmc
hlt
repz
sub
push
int3
sti
mov
cmp
or
mov
adc
fistl
mov
xchg
lahf
lcall
jge
mov
pushf
sub
and
jns
ret
shll
jecxz
xchg
repnz
outsl
jmp
fsubrl
leave
lret
jmp
popf
inc
mov
test
inc
mov
in
popf
add
fisttps
aad
sub
call
dec
loop
shl
or
pop
mov
adc
pop
mov
xor
popf
shlb
pop
lcall
and
mov
jmp
lret
ret
push
in
fst
sub
js
xlat
icebp
push
outsl
mov
jle
aas
jge
mov
lods
les
ret
test
sbb
mov
dec
dec
mov
outsl
dec
jb
jmp
repz
or
jns
mov
mov
jmp
arpl
pushf
mov
movsl
repz
mov
fisubrs
xchg
fldcw
or
xor
pushf
adc
mov
insb
xchg
xlat
mov
mov
lret
int
hlt
movsl
testl
pop
cmc
stos
jne
movsl
inc
dec
inc
xchg
wbinvd
fcoms
mov
pop
aaa
cmp
xor
jg
stc
mov
jne
lcall
bound
xchg
and
sub
sub
insb
mov
push
adc
rcrl
leave
aaa
push
xchg
test
pop
sub
adc
dec
mov
lods
psrld
aaa
jg
int3
loope
adc
add
or
pop
sbb
mov
nop
loop
mov
sub
fld
mov
aaa
push
imul
dec
dec
movsl
in
xchg
mov
sbb
fldenv
sub
xchg
jl
mov
add
dec
mov
push
stc
push
ja
xor
sti
push
cltd
test
dec
std
or
dec
iret
push
call
jge
add
clc
push
mov
xchg
ficoms
shr
icebp
ss
pop
rcr
shll
mov
inc
enter
jle
and
xadd
push
fcmovnbe
sbb
mov
or
daa
sbb
inc
cmp
add
fdiv
mov
xchg
lret
lock
mov
flds
push
push
xchg
mov
sub
cmpsl
mov
push
inc
ljmp
test
push
rcll
fiaddl
dec
loope
adc
jnp
inc
mov
ret
cmc
jmp
xor
pop
iret
les
orl
cli
in
jecxz
addb
addb
add
inc
mov
pusha
mov
fnsave
mov
sarb
leave
js
cmpl
stos
pop
xchg
push
jle
out
xchg
sahf
movsb
movsb
push
or
jae
dec
jmp
and
inc
and
cmp
push
ds
fs
dec
sub
push
cld
dec
add
cmpsb
adc
out
lret
mov
fiaddl
push
daa
mov
shll
ficoms
push
xchg
ljmp
mov
insb
xchg
insb
jle
adc
sarl
pop
pop
or
mov
roll
lock
jle
imul
mov
push
and
pop
psllq
cmc
or
xchg
bound
lcall
jl
call
subb
cmpsb
sbb
jb
mov
fs
cmp
jg
data16
add
add
int
les
jg
dec
mov
popa
inc
movsl
and
sar
lea
pop
leave
andb
aas
es
add
dec
gs
icebp
sub
lock
push
and
pusha
stos
sbb
push
or
pop
test
jle
jae
push
popf
adc
add
push
es
cmp
jae
bswap
imul
repnz
scas
inc
aad
ja
test
mov
jmp
xchg
and
xchg
pop
sbb
push
loopne
adcl
es
pop
mov
shll
cwtl
jl
mov
aas
repnz
stos
mov
pop
xchg
xchg
xlat
jmp
loopne
inc
add
jae
hlt
loope
push
inc
cmp
mov
popa
xor
xor
or
lock
mov
adc
pop
xchg
loop
jbe
sbb
mov
scas
sub
aad
adc
xor
mov
ss
fsubl
push
stos
mov
xor
pop
lret
sahf
negl
push
cmp
xor
rorl
je
dec
mov
inc
adc
insl
loop
out
lcall
cwtl
vhaddps
aaa
push
shlb
lcall
push
sub
sub
add
inc
mov
sub
xchg
mov
imul
cmp
das
dec
aad
add
sub
inc
sub
jb
push
lds
lea
hlt
cwtl
pop
shlb
rdtsc
loop
out
repz
test
and
xchg
mov
leave
adc
pop
dec
inc
loope
decl
or
jl
mov
pop
mov
out
inc
cmp
or
repnz
mov
movsl
fisubl
mov
cmp
fsubrp
rorl
lea
adc
or
imul
dec
lds
jl
shll
test
mov
and
test
sub
inc
or
pushf
mov
mov
shrb
hlt
mov
xor
sbb
loopne
fwait
inc
cmpsl
aaa
mov
mov
cmovge
pop
repz
inc
pushf
xchg
aad
fucomi
cmp
stos
repz
int
prefetchw
or
xchg
icebp
inc
nop
loopne
dec
cmpxchg
or
fwait
repnz
icebp
call
pushf
mov
rcrl
hlt
dec
call
mov
mov
dec
fld1
mov
cmpsb
mov
test
call
loope
addr16
dec
adc
jbe
push
sti
sub
cmp
inc
mov
test
cmp
cmp
fmul
pop
test
repz
and
cwtl
mov
push
add
in
popf
sahf
add
loopne
aaa
lods
push
hlt
aas
xor
xor
iret
push
mov
fsubrs
inc
sub
cmp
fidivrs
xchg
xor
add
cmpsb
jne
mov
pop
shlb
js
in
shrl
jnp
shrb
setp
or
mov
pop
out
dec
sbb
sahf
lcall
dec
adc
xchg
mov
jbe
outsb
dec
fsts
mov
xchg
scas
push
sbb
push
jno
inc
stos
int
pop
shll
add
insb
cli
jbe
xor
jno
push
cmp
jmp
addl
jecxz
pop
sbb
mov
testb
push
or
push
and
rcrl
push
in
cmpsl
push
imul
jbe
jmp
daa
jo
inc
add
mov
outsl
fldl
test
sti
jmp
push
out
test
in
pop
jb
or
lea
movsl
rclb
out
lcall
sbb
js
in
mov
loope
mov
cmpsl
icebp
pop
mov
push
aad
bound
pop
jp
loope
repz
xor
push
xchg
ja
sbbl
sarl
xor
das
adc
outsb
mov
sub
lock
ret
mov
jns
jae
leave
rcrl
shll
pushf
adc
fld
pop
xor
or
inc
cmp
add
adc
bnd
lods
push
ljmp
dec
jne
inc
jmp
inc
enter
movsl
mov
or
sub
push
push
mov
aas
mov
adc
and
sbb
xor
lds
popa
test
and
xor
adc
mov
add
and
push
push
mov
sbbl
adc
nop
arpl
jecxz
xor
iret
scas
or
sub
sysret
cmp
mov
add
xchg
push
test
iret
lds
xchg
mov
pop
jp
mov
nop
push
jae
scas
lock
xchg
test
stos
xchg
mov
testl
xchg
or
in
hlt
pop
xchg
inc
adc
sub
incb
sub
adc
sbb
cmc
add
adc
xor
dec
sbb
rcrl
jae
ss
aad
in
add
out
xchg
insl
cwtl
rorb
stc
sti
mov
sbb
mov
sub
push
outsb
mov
std
cmp
jl
mov
cmpsl
fstps
cli
ljmp
movsl
xor
xchg
pop
loope
xchg
icebp
loope
imul
movb
pushf
mov
mov
fcoms
cmp
xchg
cmp
pusha
jp
fadds
push
test
das
inc
xchg
popf
arpl
scas
test
sbb
and
or
pop
xchg
cmp
mov
loopne
fmuls
filds
mov
cmpl
or
cmpsb
pop
push
add
and
or
xor
lea
sub
loopne
or
mov
jl
jb
or
inc
sahf
shll
dec
arpl
into
jo
add
cmp
fmulp
and
into
push
xorb
push
mov
add
push
aam
mov
stos
dec
add
subl
sar
cltd
stos
subl
jp
lcall
add
iret
lahf
inc
or
fdivs
and
jb
addl
scas
sbb
inc
jbe
mov
outsl
adcl
and
mov
cli
xchg
mov
mov
dec
dec
ss
inc
mov
pusha
or
pusha
popw
pop
dec
sbb
mov
mov
sbb
push
inc
addr16
stc
sbb
bound
inc
stos
idivb
pop
insl
xchg
in
sub
outsb
lods
lahf
sub
scas
sbb
jmp
pop
lcall
add
mov
push
aad
jge
xlat
jbe
jle
and
adc
mov
mov
ret
sub
lods
fwait
ljmp
inc
xchg
shrl
dec
pop
or
sbb
data16
test
ja
nop
movl
or
out
insb
or
fistl
call
mov
sbb
sub
xchg
call
iret
xchg
add
mov
lret
add
dec
loop
movl
pop
mov
lret
rolb
xchg
fucomi
push
std
adcb
adc
mov
das
sbb
fistpll
mov
enter
xorl
and
fs
dec
loope
in
lcall
test
xchg
mov
movsl
mov
xchg
in
xchg
mov
dec
mull
mov
insb
add
int
pop
pop
sbb
fwait
sbb
pop
jbe
rcrb
sub
or
sub
jp
in
shll
lahf
or
scas
adc
popf
push
dec
mov
sbb
adc
out
popa
dec
cmp
das
add
bound
dec
stos
int3
ret
sahf
lahf
mov
leave
mov
fadds
outsb
jge
push
insl
frstor
aas
in
sbb
lods
xor
or
stos
cwtl
add
enter
sub
es
ret
lods
rcrl
sub
cs
mov
dec
mov
jnp
lds
cmp
arpl
jb
sub
int3
fucomip
sbb
xchg
ljmp
dec
nop
in
sahf
outsl
cmc
loopne
mov
scas
ss
imul
fcomi
pop
lcall
sub
lds
mov
pop
icebp
ficomps
sbb
lahf
push
repz
jbe
inc
lcall
movsl
jge
std
dec
jns
xorl
xchg
xchg
or
and
adcl
pop
jmp
scas
orl
movsb
sub
movsl
jo
sbb
repnz
pop
aas
bound
and
and
xchg
mov
jmp
cmpsl
sbb
mov
add
daa
mov
scas
ljmp
aam
dec
std
in
sbb
sti
fisttps
fsubrl
aam
sub
nop
icebp
mov
faddp
cmpsl
pop
cltd
xchg
adc
jp
cmp
push
aas
or
inc
jmp
adc
ret
nop
or
and
mov
pop
lea
shll
xchg
cmpsl
xlat
neg
sub
fisttpll
sbb
das
add
lds
mov
mov
clc
arpl
sbb
icebp
mov
xchg
sti
adc
les
jp
out
add
mov
ret
mov
inc
mov
add
sti
and
hlt
pop
pop
add
sahf
cmp
ret
cmp
push
inc
fildl
dec
xchg
cld
mov
in
test
add
jne
or
xchg
inc
jmp
push
push
in
cmp
iret
ds
enter
in
push
stc
dec
in
push
fnsave
mov
mov
adc
ljmp
leave
jp
xchg
xchg
outsl
aad
ret
adc
xor
imul
cmp
sarl
sbb
sub
std
inc
pushf
ret
cmp
negl
lds
jl
pop
aaa
lret
clts
fisttpl
std
cmpsb
sarl
rclb
test
mov
sub
xor
daa
push
testb
cli
sub
rorl
dec
inc
mov
lahf
cld
in
movsl
js
cmpb
popf
or
std
ficomps
in
repnz
dec
jmp
mov
in
das
in
push
cmc
mov
and
cltd
dec
icebp
adc
hlt
mov
out
test
hlt
dec
test
jmp
adc
stos
movsl
pop
vdivsd
icebp
cmp
jbe
sub
sub
mov
scas
mov
pop
outsl
movsl
lret
fs
or
push
pop
mov
test
xchg
add
inc
fcoml
les
xchg
in
sbb
xor
hlt
add
cltd
dec
jns
rorl
xchg
sub
mov
es
pop
aam
dec
mov
mov
cltd
out
loop
out
push
mov
sbb
xor
cmpsb
or
daa
cmp
into
test
idivl
scas
icebp
sub
mov
and
xor
dec
cli
push
icebp
xor
lds
les
mulb
sbbb
ret
mov
in
enter
addl
jns
fisubrs
lret
pushf
push
push
arpl
mov
into
movsb
sbb
out
xchg
ds
stos
dec
sbb
adc
adc
or
mov
push
mov
cmpsb
sbb
inc
adc
xchg
insb
jmp
aad
rorl
aaa
arpl
movl
push
movsl
popf
addr16
out
or
mov
adc
int
rcrb
lahf
enter
in
and
xchg
aaa
ret
mov
test
in
divb
pusha
incl
push
xlat
imul
dec
inc
mov
pop
mov
iret
push
mov
pop
xor
dec
pop
cmpl
rcrb
push
jl
cmp
jnp
mov
cli
rcrb
incl
sbb
cmp
cltd
jnp
adc
lea
jae
xchg
push
stos
mov
jno
pop
lds
mov
adc
stos
mov
fidivrl
sbb
icebp
xor
xor
sbb
mov
and
push
dec
in
mov
xchg
ljmp
rcl
and
xorb
ss
cmpsb
xlat
mov
into
jbe
sarb
or
and
mov
add
call
fmuls
and
mov
jbe
lret
mov
aaa
ficompl
outsl
push
shl
mov
pop
add
shrb
push
push
lcall
jne
lods
fdivrl
leave
ss
jns
mov
cmp
shll
leave
and
rcll
sbb
xchg
jmp
xor
dec
mov
imulb
aaa
fisubs
sbb
jmp
test
bnd
ficomps
and
notb
ja
add
imul
mov
pop
cmpl
mov
xor
xchg
stos
movsb
xor
sub
and
movsb
subb
in
outsl
sbb
bound
outsl
push
sbb
jle
sub
xchg
mov
xchg
lea
sbb
sub
add
cmp
icebp
neg
sub
mov
sbb
mov
lods
pusha
cwtl
movsl
fs
mov
xor
push
shrb
int3
or
test
leave
les
inc
cld
dec
xchg
mov
xor
les
jns
mov
add
les
adc
mov
adc
pop
incl
inc
jp
ja
cmp
subb
pop
outsl
dec
fcoml
lods
fwait
repnz
xchg
shrl
push
inc
test
mov
mov
mov
adc
outsl
fwait
add
mov
xorb
out
movsb
dec
dec
aad
mov
xor
ret
das
idivb
loop
fsubl
icebp
cltd
ljmp
sub
sub
cmpsb
pop
rorb
sub
es
cmpl
push
cmp
les
or
dec
lods
fadds
pause
and
cld
gs
cmp
aam
dec
mov
xor
rclb
or
sti
stos
inc
arpl
pop
cmpsl
add
mov
inc
xor
xchg
cmp
rep
rcl
mov
mov
xor
sub
js
pop
push
pop
adc
sub
cmc
jo
imul
ss
jne
cmp
iret
cmp
mov
xchg
sbbl
fwait
cmc
push
adc
add
xchg
stos
je
sub
inc
pop
or
mov
cld
stc
or
smsw
in
mov
xor
inc
hlt
pushf
mov
xchg
pop
ds
dec
pop
shrb
pop
xor
add
and
sub
mov
push
mov
push
or
fmuls
outsl
add
pop
dec
or
push
mov
mov
stc
stc
dec
fwait
cmp
dec
add
fwait
ret
sbb
ljmp
mov
jno
in
sbbb
push
insb
or
jbe
mov
adc
arpl
or
leave
stos
adc
jae
pop
push
jp
mov
dec
inc
out
pop
fsubrp
or
scas
fs
cli
bound
mov
int
mov
ljmp
fst
and
andb
or
orb
pop
ds
push
incb
xchg
cmp
mov
xor
pop
aas
jmp
push
cltd
into
test
andl
stos
lods
lods
pop
das
xchg
xchg
jge
pop
mov
mov
jns
inc
mov
data16
or
xchg
adc
ja
iret
xlat
mov
push
loopne
sbb
inc
push
scas
sub
mov
xchg
in
fwait
adc
out
lds
or
cmpl
push
loope
nopl
adc
pusha
push
pop
push
insb
cltd
movsl
sbb
fiadds
mov
cmp
insl
xchg
fs
inc
lods
push
ja
loop
scas
mov
ljmp
dec
pop
fisttps
mov
push
sub
xchg
sbb
mov
aad
in
in
adc
leave
jne
out
imul
or
mov
mov
subb
cld
out
test
mov
enter
rorb
pop
insl
pop
test
int
jle
xchg
ds
push
fmuls
popf
lea
sbb
push
enter
push
pop
sbb
push
stos
mov
lcall
or
sbb
add
pop
in
dec
cmpsb
mov
dec
subb
or
jl
xor
mov
or
mov
sbb
pop
xor
dec
sub
subb
into
mov
mov
push
insb
cmpb
mov
aaa
pop
and
scas
ja
roll
cld
pop
subb
jne
lret
or
pop
aaa
out
cmpsl
cs
out
aad
stos
popf
cli
cmpsl
xor
movaps
jns
sarb
rcl
mov
xchg
sbb
add
add
push
sarb
sub
pop
outsl
and
mov
xlat
sub
jo
fimuls
sarb
aam
fldenv
stc
daa
pop
xchg
sbb
inc
or
ss
xor
mov
outsl
push
call
sub
mov
adc
movb
rcl
test
sub
add
lea
and
fwait
add
lods
push
lcall
shlb
loop
or
mov
cmp
push
push
es
jge
add
notl
jb
cmpsl
pop
arpl
ret
lods
and
clc
lock
mov
mov
mov
and
mov
and
shll
lcall
divl
test
lods
xchg
aaa
sbb
adc
push
adc
xor
fistpl
ret
movsl
scas
jns
loope
add
filds
cmp
fs
movsb
sarl
add
roll
mov
fs
jecxz
mov
iret
shr
lea
sub
jg
xchg
roll
fcoml
inc
adc
inc
insl
xor
mov
jae
mov
arpl
jb
push
div
dec
push
jbe
adc
ror
lret
stos
sbb
sbb
inc
mov
push
mov
mov
dec
adc
mov
adc
push
iret
ds
insb
movsb
xchg
adc
pop
lds
mov
lcall
cs
mov
mov
mov
xchg
out
aaa
movsb
cmpsl
cmpsb
enter
bound
cwtl
adc
and
push
imul
adc
mov
jnp
aas
lds
or
in
into
ja
or
aaa
or
repz
xchg
adc
mov
pushf
pushf
mov
lods
flds
cmpb
cs
sahf
out
xchg
jmp
pop
cmpb
dec
scas
mov
cmp
pop
xor
pop
inc
add
dec
adc
pop
jnp
pop
retw
adcb
ficomps
pop
das
mov
jle
sarb
mov
or
add
arpl
cwtl
adc
sbb
and
mov
and
inc
movsl
loopne
xchg
or
xor
pop
mov
enter
daa
or
or
mov
and
mov
mov
dec
adc
cmpsb
add
push
je
cmp
outsb
mov
mov
sahf
dec
cmp
push
ficoms
xlat
mov
push
dec
sub
mov
add
pop
pop
dec
std
push
enter
dec
sahf
mov
xor
or
mov
add
rcrb
mov
mov
pop
movsl
and
push
sub
xchg
jl
test
mov
jns
add
int
sbb
mov
filds
test
push
jp
mov
sbb
frstor
lods
shl
out
cmp
sbb
mov
xor
sbb
arpl
jnp
mov
dec
cmp
jbe
decb
xchg
daa
pop
scas
jecxz
push
add
aad
and
leave
and
xor
pop
pop
popf
js
repnz
bound
nop
imul
inc
lcall
stc
shlb
cld
mov
mov
imul
or
fsubs
addr16
cmp
outsb
mov
mov
aad
adc
aas
jmp
mov
mov
add
cmpsb
cmp
and
and
push
dec
push
lods
lds
testb
repnz
mov
xorb
shll
and
mov
and
cmc
loope
inc
cli
stos
or
call
xchg
and
fwait
outsb
ja
jp
cltd
jno
add
sub
pusha
cwtl
cmp
adcb
fs
out
sub
mov
out
mov
sbb
and
popa
std
addr16
pushf
xor
outsl
sub
or
test
cmp
inc
lahf
xacquire
mov
popf
jg
cld
stos
cli
cs
aaa
xchg
outsb
in
arpl
bnd
in
repz
ss
jb
icebp
push
push
out
mov
push
add
xchg
das
repnz
test
pop
add
inc
mov
pop
mov
js
bound
and
push
fcoml
fnsave
mov
das
xor
mov
into
loop
scas
pop
jl
mov
dec
push
and
shrl
enter
dec
jb
push
test
pop
test
mov
mov
jnp
or
pusha
and
negb
imul
test
sbb
test
push
sub
mov
add
daa
in
push
sbb
jbe
mov
ljmp
repz
inc
adc
ss
adc
ja
sti
lret
mov
gs
mov
fidivl
sbb
in
lret
rcrl
insb
mov
jle
add
dec
aas
ljmp
fdivr
mov
mov
add
hlt
ja
loopne
pop
sbb
add
mov
call
xchg
cmp
es
fdivs
jns
fs
xor
jae
out
mov
cmovge
ficoml
adc
in
das
in
adc
push
and
cs
lods
aas
cmp
scas
outsb
test
mov
xchg
rcrl
push
outsb
movsb
shll
testb
sub
xor
jmp
mov
jnp
mov
pop
jp
outsb
xlat
mov
out
adc
jns
pop
mov
xchg
xor
ljmp
sub
push
push
push
push
jle
out
sbb
inc
nop
pop
ret
aam
xor
sbb
xchg
adc
or
mov
xchg
cwtl
fmull
sbb
sub
popf
mov
das
arpl
sbb
in
dec
call
and
cmp
adc
xchg
mov
and
dec
xchg
pop
fstps
or
push
repnz
ljmp
lods
jno
push
push
mov
std
test
inc
xchg
or
inc
roll
jmp
les
mov
movsl
in
test
scas
xchg
stos
jns
cmp
add
xlat
add
add
popa
rorl
fildl
xor
push
jp
jno
sbb
lods
mov
push
cli
out
xlat
outsl
dec
add
xchg
aam
xor
xlat
in
jl
lcall
sub
enter
lcall
pop
xchg
pop
stos
xor
add
les
aas
popf
hlt
or
mov
aam
pcmpgtb
ljmp
imul
adc
cld
hlt
adc
cmp
mov
lods
lcall
pop
push
xchg
xor
lods
setbe
lock
xor
dec
dec
fdiv
ss
lahf
lds
stc
push
jge
cmp
loop
xor
cwtl
mov
mov
cmp
inc
jl
inc
mov
addb
sub
dec
mov
jl
xor
icebp
dec
push
outsb
call
insl
mov
int3
lock
or
addb
or
xchg
xchg
pusha
fcoml
sub
les
mov
pop
nop
imulb
leave
popa
pop
jb
xor
cmc
adcl
push
cmpsl
mov
push
fcomip
mov
dec
inc
insb
pop
mov
in
push
or
sub
sub
push
cld
and
enter
pop
push
add
in
jns
or
and
pushf
jge
mov
mov
add
xor
cmp
jb
add
adc
inc
bsf
inc
jge
loop
fisubl
dec
stos
insl
divb
cmp
xor
fdivl
ja
sub
sbb
lcall
xchg
push
in
mov
mov
stos
jg
xchg
mov
cmc
push
jecxz
lret
dec
mov
add
cmp
sarb
mov
sub
hlt
adc
lods
inc
aaa
aas
sub
push
andl
outsb
fs
popf
test
xor
in
mov
mov
in
inc
lret
cs
roll
ss
sub
out
out
jnp
daa
mov
dec
mov
adc
mov
daa
mov
push
cmpsb
rorb
dec
int3
cs
dec
mov
cmp
addr16
mov
fwait
xor
shr
mov
aam
js
scas
cmp
mov
repnz
xlat
cli
and
aad
aas
sti
jle
sbb
xchg
fisttps
cltd
lea
nop
jbe
xchg
inc
ja
lds
icebp
mov
add
cmp
jno
cmp
in
dec
arpl
imul
lret
jo
or
les
fmull
rolb
aaa
aaa
dec
rcrb
push
dec
ret
adc
iret
sti
push
fcoms
in
add
data16
subb
aas
mov
mov
jg
cltd
fdiv
leave
pusha
in
lret
xor
nop
inc
cwtl
sub
and
pushf
fwait
cmpsl
push
push
std
js
pop
and
rorl
fdivrl
pop
std
mov
pop
fwait
and
dec
aam
xchg
ror
mov
add
mov
ror
xchg
push
sbb
dec
push
adc
pop
mov
out
or
mov
jnp
in
mov
mov
loope
mov
lahf
into
loopne
sahf
lock
icebp
inc
lds
inc
scas
std
mov
or
push
mov
push
jg
adc
jbe
pop
lock
out
sahf
mov
sbb
in
sti
sbbb
es
dec
or
rcl
xor
cmpsl
adc
cmp
ret
movsb
pushf
jb
iret
cld
pop
mov
je
mov
stos
add
es
shrd
add
cli
sarl
xor
aad
mov
cmc
push
xchg
leave
inc
xchg
push
jl
and
xchg
into
dec
mov
mov
xchg
push
scas
sbb
pusha
popl
pusha
repz
sub
push
ss
in
sub
lret
mov
test
dec
imul
mov
cmp
leave
dec
xchg
in
push
aam
push
out
rol
movsl
jl
loope
mov
das
pop
inc
mov
in
jmp
sti
iret
jns
push
push
xchg
int
nop
testb
mov
imul
repz
adc
inc
stos
leave
add
or
fidivrs
dec
fnstcw
mov
inc
and
cltd
push
push
cwtl
pop
dec
pushf
idivb
subb
mov
dec
push
xchg
iret
pop
push
inc
insb
iret
mov
jmp
mov
frstor
rorl
push
jmp
sub
adc
inc
and
fbld
jno
leave
pop
jo
xor
arpl
pop
stc
add
cmc
pop
sub
xor
and
dec
and
push
aas
mov
ficoms
or
push
or
das
aas
mov
add
loopne
test
mov
fwait
dec
int
call
add
setae
nop
les
les
add
xor
sbb
.byte
.byte
.byte
inc
add
add
sbb
add
add
add
push
add
add
add
ja
add
cmp
add
add
add
add
add
push
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
xchg
scas
dec
addr16
pusha
push
dec
cli
ja
adc
mov
or
push
mov
lea
adc
add
mov
xor
jns
jne
cmp
out
jae
daa
fldl
pop
adc
ss
sub
mov
mov
shrb
dec
sub
cli
aam
pop
push
xor
xchg
ja
mov
jne
jp
inc
ffreep
xorb
cmp
mov
xor
cwtl
add
les
xor
xor
das
push
ds
out
or
out
les
ds
xor
jo
adc
loope
mov
xor
icebp
lcall
dec
sub
fstl
dec
mov
xchg
les
push
cmp
push
mov
cld
out
xchg
mov
push
xor
int
test
lods
sbb
mov
pusha
pushf
sar
sub
push
sub
inc
sub
jne
xchg
aaa
mov
adc
dec
data16
js
out
inc
into
imul
dec
xor
or
and
push
xor
sub
sbb
imul
push
cli
ret
test
lret
cld
lret
inc
insl
xchg
mov
pop
fdivrs
add
adc
pusha
lods
mov
into
mov
mov
sbb
add
aas
mov
popf
adc
push
aas
jge
movsb
dec
pop
dec
into
js
sti
ja
cmp
jnp
sahf
mov
fs
pop
icebp
mov
dec
insl
push
in
into
xor
ljmp
lods
sbb
add
iret
aas
mov
sub
xor
cld
scas
ja
ja
out
lds
mov
aaa
xchg
rorb
mov
pop
mov
cmpsl
dec
mov
adc
addr16
jno
ret
inc
xchg
push
sub
lock
ljmp
notl
mov
dec
loope
clc
lahf
cli
lret
cmp
movsl
rcll
xchg
insl
xor
sbbb
push
or
mov
cmpsl
daa
dec
jno
push
imul
ljmp
pusha
lret
fisttpl
mov
movsl
hlt
pop
ret
and
mov
lret
inc
mov
jbe
repz
or
repz
mov
xor
push
add
insb
lcall
cmpb
stc
popa
sbb
adc
push
sub
pusha
ja
sbb
and
sbb
les
adc
lret
es
stc
sub
adc
xchg
push
shll
or
stos
lods
inc
cmp
xorb
pop
push
je
lods
fdivrl
jae
xor
mov
leave
out
int
mov
adcb
notl
hlt
xor
aam
test
xor
jb
inc
mov
adc
nop
pop
sbb
shll
fisttpl
mov
lret
test
fcomp
and
and
jb
push
jmp
and
ds
sarl
fwait
adc
adc
dec
xchg
sbb
pushf
mov
cltd
jnp
pop
das
enter
mov
adc
imul
stos
pop
sbb
sbb
mov
movl
add
scas
loop
imul
push
mov
cmp
dec
cmp
sub
push
pop
inc
xchg
gs
dec
gs
adc
std
jo
mov
mov
mov
stc
into
pop
pop
mov
out
test
or
push
stos
js
test
enter
cmp
das
cld
mov
cmpl
adc
ss
flds
ret
jmp
in
jl
outsl
incl
sub
shl
std
imul
fimuls
push
dec
nop
insb
adc
push
es
stos
and
cltd
dec
adc
mov
sbb
xchg
fmul
scas
adc
js
cmp
int
push
and
icebp
in
sbb
jp
mov
js
xchg
pop
push
sbbw
pop
xchg
pop
xchg
gs
jne
popa
fbstp
xor
int3
ret
sahf
test
repnz
xor
arpl
arpl
out
jecxz
in
push
popa
stos
insl
pop
cmpsl
adc
jnp
das
push
arpl
pop
and
mov
dec
gs
sbb
lods
inc
int
push
cmpsb
or
xchg
lods
cmp
and
add
mov
inc
addr16
inc
lea
jns
mov
xor
sub
stos
push
bound
or
jb
add
pop
imul
cmp
add
mov
ret
insb
lret
add
and
aaa
addr16
jnp
mul
mov
pop
jecxz
cmc
es
cs
pop
fwait
outsb
jmp
cli
fs
mov
fcmovnb
sub
dec
mov
sub
mov
xchg
xor
in
add
add
push
add
ja
mov
lea
jns
jecxz
and
jp
pop
mov
fucomi
js
adc
lcall
pushf
das
sub
push
ret
adcl
movsl
push
pop
mov
mov
xchg
inc
jmp
sbb
lret
and
lahf
xchg
nop
push
sbb
shll
jl
fcmovnbe
outsl
mov
hlt
mov
repz
or
mov
dec
pop
stc
or
aam
test
jns
rolb
cli
xchg
dec
jmp
xchg
movsl
pop
jne
mov
not
or
repnz
jbe
xchg
ss
or
pushf
nop
stc
push
mov
fstpt
clc
sub
ds
mov
pushf
orb
mov
ljmp
add
or
aaa
mov
or
fisttpl
fdivrs
xchg
mov
jp
adc
mov
push
xchg
sbb
imull
leave
incb
or
cmp
cld
xchg
rolb
lahf
and
lahf
and
js
cmp
mov
shr
or
outsb
dec
push
es
daa
jbe
pop
addr16
pop
mov
jg
pop
fidivrs
adc
rorl
das
mov
add
xchg
mov
push
out
lret
sbb
push
inc
mov
bound
fildll
pop
pushf
mov
dec
dec
adc
mov
pop
jg
jne
cld
xchg
enter
mov
fstps
rclb
xchg
cmp
shl
xor
pop
push
jmp
fstp
jge
push
pop
xchg
aad
mov
dec
sbb
mov
sar
or
xchg
sti
sbb
and
hlt
lds
rcrl
dec
push
clc
movsl
and
jmp
push
jo
jmp
inc
les
pop
xor
push
fisttpll
mov
mov
and
sbb
cmp
shrb
pop
stc
sub
sti
sbb
xrelease
mov
int
inc
fs
cmp
jne
and
test
mov
pushf
repnz
std
leave
cmpsl
xor
loopne
test
iret
inc
xor
dec
jno
loope
mov
pop
lretw
adc
in
repnz
aam
fndisi(8087
fsubs
jbe
xchg
lret
cmp
add
sbb
loope
lods
popa
sub
test
xchg
xchg
movsb
loopne
inc
pop
adcl
mov
outsb
pop
mov
das
sub
test
jnp
insb
sarb
fistpll
pop
or
movsl
jg
mov
imul
inc
and
adc
cmpsb
cmc
gs
fucomip
int3
push
mov
push
pop
inc
add
cwtl
dec
test
mov
pushl
adc
mov
push
loope
in
je
decb
xchg
pop
adc
dec
xor
mov
mov
test
mov
or
adc
mov
imul
xor
xchg
sub
and
jnp
scas
data16
cmovae
xlat
movsb
pushf
daa
jp
jmp
pop
ret
rcrl
jecxz
scas
lods
pop
pop
xor
sarl
jle
or
cli
mov
xchg
fcomi
add
adc
mov
shrl
inc
sahf
ret
arpl
into
xor
outsb
pop
or
in
push
mov
mov
cld
fs
xor
jecxz
shrb
scas
inc
in
imul
fcoms
nop
jle
jmp
in
in
inc
outsl
cs
inc
dec
aas
add
xor
xor
xor
aaa
add
movsl
fcmovnbe
sets
dec
and
in
push
adc
pop
icebp
jns
mov
lret
pop
adcb
dec
cld
dec
add
aad
fwait
and
mov
rolb
test
push
sub
inc
jbe
cmpsb
xchg
mov
inc
aad
in
jne
push
ja
xor
or
dec
dec
xor
adc
ljmp
mov
xchg
data16
xchg
mov
mov
out
das
icebp
stc
in
xchg
xor
std
jnp
je
fwait
ljmp
ret
add
es
mov
adcl
jmp
sbb
add
mov
shl
mov
jg
aas
dec
push
xchg
sbb
inc
mov
mov
cmpsb
push
and
jb
ja
or
xchg
popf
ljmp
andl
test
inc
pop
push
cltd
pop
xor
int3
inc
addb
mov
inc
and
or
js
shll
sbb
push
mov
fsts
pop
mov
and
sbb
ret
adcb
pop
push
add
rcll
clts
inc
cli
cmpsl
mov
movsl
sbb
imul
mov
mov
push
push
cs
outsb
jecxz
add
adc
rcll
add
test
sbb
in
nop
aaa
outsb
dec
repz
sub
mov
lock
pop
jmp
stc
mov
dec
inc
loopne
sub
out
arpl
sbb
push
adc
rclb
push
mov
and
icebp
test
push
xchg
dec
jecxz
shll
dec
lods
mov
xchg
inc
popa
js
mov
jnp
into
cmc
pushf
inc
sbb
xor
jno
mov
insb
in
inc
cmpsl
mov
dec
inc
mov
leave
push
mov
lds
js
add
mov
in
mov
cs
loopne
push
xor
jge
xor
fbld
rcrl
scas
lcall
adc
pop
jno
adc
fcomps
push
ds
pushf
adc
test
jo
cmpsl
sbb
cwtl
fisubl
mov
in
push
add
lods
cmp
mov
enter
repz
lret
fildll
dec
out
enter
sbb
add
iret
loope
pop
mov
pushf
into
stc
adc
add
inc
icebp
sbb
sbb
jecxz
data16
lret
xor
andps
dec
outsl
mov
addr16
out
or
aam
lahf
jge
imul
add
ja
cld
out
test
test
mov
cmp
sub
cmpsl
loop
cwtl
sbb
movsl
sbb
das
inc
insb
js
or
adc
push
and
inc
mov
sbb
fildl
cwtl
mov
adc
cld
jge
lcall
ficoms
xlat
inc
or
sub
pop
imul
call
or
sbb
fdivs
js
nop
and
mov
push
adc
orl
mov
pop
std
lret
out
fs
adc
dec
fiadds
and
sub
adc
dec
jae
aad
pop
js
mov
negl
sub
sbb
out
pop
push
lds
pop
nop
sub
fcmovu
cmpl
movb
inc
pop
sbb
and
push
les
add
movsb
add
sub
xchg
lret
xchg
leave
mov
mov
daa
push
icebp
shlb
fdivrs
adc
jle
scas
adc
in
pop
filds
inc
dec
and
ja
je
pop
es
dec
push
xor
add
cmp
aad
int
sti
jb
aad
sub
subl
push
or
xchg
xlat
and
mov
add
mov
inc
or
call
add
in
in
push
popa
mov
rcll
outsl
fisubrs
pop
mov
xchg
or
stos
sahf
add
fsubl
enter
cmp
mov
rorb
std
psrlw
int
dec
pushf
int
mov
push
test
test
mov
adc
es
jnp
pusha
xchg
xchg
xlat
aas
imul
and
popa
mov
sti
addr16
add
std
lcall
repnz
add
das
lock
xor
nop
cs
or
push
or
fisttpl
dec
test
rcrb
add
pop
add
mov
imul
xchg
jbe
test
icebp
push
jb
fisubl
loop
sub
in
jbe
xchg
mov
lods
cmp
jns
pop
popa
dec
xor
pushf
xchg
into
aas
mov
pop
scas
in
xchg
mov
or
rorb
fcmovnbe
mov
mov
scas
or
dec
sbb
out
or
pop
shll
sub
stos
mov
arpl
sub
xchg
jmp
xor
xchg
xchg
scas
xchg
mov
jns
fistl
in
fsubs
vmovups
arpl
sbb
icebp
mov
xchg
xor
and
jmp
add
pop
pop
jne
sbb
jnp
inc
addr16
xchg
clc
and
jno
lods
mov
jns
icebp
jg
hlt
and
jne
dec
shrb
iret
ficoms
and
cmp
and
xchg
jle
or
aaa
fstps
testb
mov
add
dec
lods
xchg
add
cs
push
fisubrs
xor
in
jnp
scas
sub
add
jmp
mov
push
out
scas
jl
jmp
mov
adc
fidivs
inc
push
adc
data16
mov
shlb
faddl
leave
lret
imul
pop
mov
test
rcl
cmp
cld
les
int3
popa
inc
and
loopne
je
mov
std
xchg
testl
and
aam
popa
inc
stos
loop
notl
jno
shlb
clc
outsl
dec
jecxz
mov
repnz
add
add
cli
pop
ds
div
mov
sbb
test
mov
stos
repz
insl
xchg
leave
mov
cmp
in
mov
sub
dec
scas
add
inc
xlat
xchg
in
aad
mov
cld
movsl
add
ljmp
mov
jnp
pop
gs
loop
add
cmp
pop
push
lcall
jle
iret
lock
push
jg
mov
ror
mov
dec
jae
imul
mov
out
scas
jae
mov
sub
push
out
lret
cltd
pop
imul
xchg
aad
sahf
decl
push
sub
pop
mov
push
add
in
cld
roll
lods
out
lret
mov
jp
addr16
xor
cmc
xor
int
adc
dec
rorb
or
mov
jmp
addb
ret
inc
stos
cmp
sbb
cs
je
stc
repz
jp
lret
call
or
into
movsb
loopne
std
dec
out
mov
mov
jno
test
ds
sbb
test
inc
and
mov
cs
or
jl
push
cmp
fwait
andl
add
sbb
push
inc
mov
arpl
pop
std
out
xor
sbb
and
pop
mov
jno
jp
mov
jns
mov
mov
movntps
sahf
mov
and
jmp
fwait
repnz
or
inc
cli
repz
cmp
pop
ss
adc
jns
lock
mov
mov
xchg
int3
adc
call
sbb
mov
cmp
or
add
xor
fcomip
insb
and
xor
lret
shrb
popl
pop
test
xor
or
faddl
inc
call
repnz
sbb
fnstsw
scas
xor
xor
xor
xor
outsb
pop
mov
loope,pn
mov
push
cwtl
push
fld
fisttpll
jne
in
or
popf
push
insl
fldcw
jg
xor
test
mov
lods
pop
cmp
adc
roll
inc
cmp
stos
xor
cmpsl
dec
mov
inc
in
jb
scas
jl
inc
lock
push
pop
in
gs
adc
aas
fcomp
xchg
dec
hlt
or
mov
ret
enter
popf
fs
or
das
jnp
jne
stos
lea
ficoms
mov
mov
movl
hlt
pop
cmpsb
xchg
punpckhwd
or
add
cmp
andb
movsl
movsl
scas
cmpsb
sub
je
pop
stos
nop
sub
inc
mov
ret
in
mov
xchg
call
sub
or
fsubrl
cmp
cmp
jns
fadd
inc
sub
es
xchg
aas
stos
pushf
dec
sahf
nop
jle
xor
leave
dec
iret
mov
cmp
out
inc
fistpl
inc
div
or
cmc
jns
sub
loop
aam
push
lea
je
push
das
ljmp
mov
xor
inc
mov
notb
lds
jge
mov
lock
shlb
mov
sub
notb
mov
into
and
mull
pop
jne
je
pop
mov
dec
sub
leave
sbb
mov
and
iret
add
sub
jp
push
cs
add
lahf
outsb
jbe
mov
out
imul
insl
scas
inc
jne
imull
cs
jo
ss
rorl
mov
pop
notb
cs
loopne
xchg
lcall
nop
push
adc
mov
lret
lahf
pop
negl
call
lret
push
jge
lods
data16
jne
jns
adc
faddp
push
pushf
mov
test
dec
test
lret
dec
movsl
insb
aas
adc
ja
or
xorl
not
and
imul
shrb
xchg
mov
cltd
cmp
je
fcmovne
cltd
inc
adc
cmp
adc
sti
mov
je
rol
cmp
in
aad
pop
pop
add
jo
push
ficompl
mov
iret
sti
shrl
push
inc
jmp
and
sub
jge
fsubr
enter
es
fsubrs
dec
imul
add
stc
sbb
inc
outsb
hlt
pushf
or
add
pop
mov
adc
lret
jg
sub
inc
lds
dec
mov
xchg
xor
imul
cmp
dec
add
mov
hlt
cwtl
inc
dec
test
ltr
or
sbb
aaa
test
lds
out
stos
in
mov
sbb
xchg
mov
pop
lret
es
sbbb
out
mov
and
xchg
call
iret
sti
jo
outsb
mov
roll
in
jle
jl
nop
jo
xchg
sti
inc
jecxz
and
je
lock
or
push
dec
imul
daa
and
repz
adc
repz
dec
add
sub
mov
sarb
insb
mov
adc
pusha
lret
loop
imul
push
sub
mov
pusha
cmc
jae
sbb
xchg
test
aad
inc
xlat
jl
cmp
aad
or
mov
int
dec
loopne
lret
xchg
ret
jne
cmp
out
inc
scas
sub
ret
int
lret
xchg
xchg
add
adcb
push
inc
fildl
icebp
andl
pop
imul
ljmp
cmp
jmp
mov
das
and
dec
sahf
push
pop
fnstsw
and
inc
or
int3
daa
push
jno
push
rorb
cmp
jnp
mov
add
cmp
sub
ss
aaa
dec
inc
aam
xchg
dec
outsl
sub
jns
jb
dec
sahf
ret
lret
mov
mov
divb
dec
jae
or
or
pushf
scas
iret
xor
jp
xchg
in
adc
stos
ds
add
dec
mov
push
dec
aaa
orl
lds
mov
pop
clc
push
xchg
pop
cmp
jg
cmp
add
inc
lock
das
sbb
scas
xchg
stos
pusha
loope
fnsave
xchg
push
stos
in
or
or
in
ret
pop
mov
mov
pusha
push
int3
in
adc
cmp
inc
repnz
push
or
into
and
dec
test
movsb
xor
std
mov
out
dec
adc
leave
repz
mov
mov
outsb
mov
jne
cs
mov
mov
sub
push
mov
clc
popf
and
jp
clc
cltd
insl
ret
xchg
fildl
negb
int
ret
shrb
outsl
ficoml
mov
dec
dec
cltd
mov
lds
mov
dec
and
ret
sarb
push
push
sub
mov
mov
hlt
stos
outsl
mov
mov
out
jge
daa
movsl
fstp
mov
adcl
mov
xchg
mov
fcomps
dec
add
inc
jmp
push
js
mov
sbb
ljmp
add
or
dec
sbb
dec
sub
js
xor
inc
mov
js
call
cmpsb
pop
jecxz
arpl
hlt
add
mov
push
addr16
fwait
push
and
mov
xor
push
jo
mov
cmp
repz
repz
inc
pop
lock
scas
lods
out
xor
sub
lea
test
jb
adc
inc
pushf
hlt
nop
lock
fsts
out
or
inc
lahf
push
in
fisubl
add
out
int
popf
mov
je
and
adc
adc
sub
fmull
jnp
ret
or
add
mov
fcoms
push
mov
int
fldt
and
fldcw
rcrb
orl
inc
and
paddusb
push
mov
loop
fimuls
mov
push
pop
loope
pop
notl
or
mov
xor
jp
xchg
clc
push
adc
hlt
push
aas
mov
fisttpl
mov
cmp
adc
xchg
mov
jnp
lret
inc
lods
inc
loope
ret
in
dec
fdivp
mov
lahf
sbb
inc
cli
mov
xchg
rorb
or
stos
jmp
xchg
in
pop
cltd
sbb
dec
stc
cmp
sub
push
clc
in
and
inc
jmp
out
addl
mov
frstor
mov
mov
xchg
scas
xor
xlat
sub
stos
or
aaa
mov
fstl
cmp
sub
mov
insl
aad
outsb
or
sub
test
mov
sbb
jns
pusha
mov
fmul
fcomps
out
cltd
mov
add
cmp
mov
movl
fisubrl
sub
cmc
hlt
repz
sub
push
int3
sti
mov
cmp
or
mov
adc
fistl
mov
xchg
lahf
lcall
jge
mov
pushf
sub
and
jns
ret
shll
jecxz
xchg
repnz
outsl
jmp
fsubrl
leave
lret
jmp
popf
inc
mov
test
inc
mov
in
popf
add
fisttps
aad
sub
call
dec
loop
shl
or
pop
mov
adc
pop
mov
xor
popf
shlb
pop
lcall
and
mov
jmp
lret
ret
push
in
fst
sub
js
xlat
icebp
push
outsl
mov
jle
aas
jge
mov
lods
les
ret
test
sbb
mov
dec
dec
mov
outsl
dec
jb
jmp
repz
or
jns
mov
mov
jmp
arpl
pushf
mov
movsl
repz
mov
fisubrs
xchg
fldcw
or
xor
pushf
adc
mov
insb
xchg
xlat
mov
mov
lret
int
hlt
movsl
testl
pop
cmc
stos
jne
movsl
inc
dec
inc
xchg
wbinvd
fcoms
mov
pop
aaa
cmp
xor
jg
stc
mov
jne
lcall
bound
xchg
and
sub
sub
insb
mov
push
adc
rcrl
leave
aaa
push
xchg
test
pop
sub
adc
dec
mov
lods
psrld
aaa
jg
int3
loope
adc
add
or
pop
sbb
mov
nop
loop
mov
sub
fld
mov
aaa
push
imul
dec
dec
movsl
in
xchg
mov
sbb
fldenv
sub
xchg
jl
mov
add
dec
mov
push
stc
push
ja
xor
sti
push
cltd
test
dec
std
or
dec
iret
push
call
jge
add
clc
push
mov
xchg
ficoms
shr
icebp
ss
pop
rcr
shll
mov
inc
enter
jle
and
xadd
push
fcmovnbe
sbb
mov
or
daa
sbb
inc
cmp
add
fdiv
mov
xchg
lret
lock
mov
flds
push
push
xchg
mov
sub
cmpsl
mov
push
inc
ljmp
test
push
rcll
fiaddl
dec
loope
adc
jnp
inc
mov
ret
cmc
jmp
xor
pop
iret
les
orl
cli
in
jecxz
addb
addb
add
inc
mov
pusha
mov
fnsave
mov
sarb
leave
js
cmpl
stos
pop
xchg
push
jle
out
xchg
sahf
movsb
movsb
push
or
jae
dec
jmp
and
inc
and
cmp
push
ds
fs
dec
sub
push
cld
dec
add
cmpsb
adc
out
lret
mov
fiaddl
push
daa
mov
shll
ficoms
push
xchg
ljmp
mov
insb
xchg
insb
jle
adc
sarl
pop
pop
or
mov
roll
lock
jle
imul
mov
push
and
pop
psllq
cmc
or
xchg
bound
lcall
jl
call
subb
cmpsb
sbb
jb
mov
fs
cmp
jg
data16
add
add
int
les
jg
dec
mov
popa
inc
movsl
and
sar
lea
pop
leave
andb
aas
es
add
dec
gs
icebp
sub
lock
push
and
pusha
stos
sbb
push
or
pop
test
jle
jae
push
popf
adc
add
push
es
cmp
jae
bswap
imul
repnz
scas
inc
aad
ja
test
mov
jmp
xchg
and
xchg
pop
sbb
push
loopne
adcl
es
pop
mov
shll
cwtl
jl
mov
aas
repnz
stos
mov
pop
xchg
xchg
xlat
jmp
loopne
inc
add
jae
hlt
loope
push
inc
cmp
mov
popa
xor
xor
or
lock
mov
adc
pop
xchg
loop
jbe
sbb
mov
scas
sub
aad
adc
xor
mov
ss
fsubl
push
stos
mov
xor
pop
lret
sahf
negl
push
cmp
xor
rorl
je
dec
mov
inc
adc
insl
loop
out
lcall
cwtl
vhaddps
aaa
push
shlb
lcall
push
sub
sub
add
inc
mov
sub
xchg
mov
imul
cmp
das
dec
aad
add
sub
inc
sub
jb
push
lds
lea
hlt
cwtl
pop
shlb
rdtsc
loop
out
repz
test
and
xchg
mov
leave
adc
pop
dec
inc
loope
decl
or
jl
mov
pop
mov
out
inc
cmp
or
repnz
mov
movsl
fisubl
mov
cmp
fsubrp
rorl
lea
adc
or
imul
dec
lds
jl
shll
test
mov
and
test
sub
inc
or
pushf
mov
mov
shrb
hlt
mov
xor
sbb
loopne
fwait
inc
cmpsl
aaa
mov
mov
cmovge
pop
repz
inc
pushf
xchg
aad
fucomi
cmp
stos
repz
int
prefetchw
or
xchg
icebp
inc
nop
loopne
dec
cmpxchg
or
fwait
repnz
icebp
call
pushf
mov
rcrl
hlt
dec
call
mov
mov
dec
fld1
mov
cmpsb
mov
test
call
loope
addr16
dec
adc
jbe
push
sti
sub
cmp
inc
mov
test
cmp
cmp
fmul
pop
test
repz
and
cwtl
mov
push
add
in
popf
sahf
add
loopne
aaa
lods
push
hlt
aas
xor
xor
iret
push
mov
fsubrs
inc
sub
cmp
fidivrs
xchg
xor
add
cmpsb
jne
mov
pop
shlb
js
in
shrl
jnp
shrb
setp
or
mov
pop
out
dec
sbb
sahf
lcall
dec
adc
xchg
mov
jbe
outsb
dec
fsts
mov
xchg
scas
push
sbb
push
jno
inc
stos
int
pop
shll
add
insb
cli
jbe
xor
jno
push
cmp
jmp
addl
jecxz
pop
sbb
mov
testb
push
or
push
and
rcrl
push
in
cmpsl
push
imul
jbe
jmp
daa
jo
inc
add
mov
outsl
fldl
test
sti
jmp
push
out
test
in
pop
jb
or
lea
movsl
rclb
out
lcall
sbb
js
in
mov
loope
mov
cmpsl
icebp
pop
mov
push
aad
bound
pop
jp
loope
repz
xor
push
xchg
ja
sbbl
sarl
xor
das
adc
outsb
mov
sub
lock
ret
mov
jns
jae
leave
rcrl
shll
pushf
adc
fld
pop
xor
or
inc
cmp
add
adc
bnd
lods
push
ljmp
dec
jne
inc
jmp
inc
enter
movsl
mov
or
sub
push
push
mov
aas
mov
adc
and
sbb
xor
lds
popa
test
and
xor
adc
mov
add
and
push
push
mov
sbbl
adc
nop
arpl
jecxz
xor
iret
scas
or
sub
sysret
cmp
mov
add
xchg
push
test
iret
lds
xchg
mov
pop
jp
mov
nop
push
jae
scas
lock
xchg
test
stos
xchg
mov
testl
xchg
or
in
hlt
pop
xchg
inc
adc
sub
incb
sub
adc
sbb
cmc
add
adc
xor
dec
sbb
rcrl
jae
ss
aad
in
add
out
xchg
insl
cwtl
rorb
stc
sti
mov
sbb
mov
sub
push
outsb
mov
std
cmp
jl
mov
cmpsl
fstps
cli
ljmp
movsl
xor
xchg
pop
loope
xchg
icebp
loope
imul
movb
pushf
mov
mov
fcoms
cmp
xchg
cmp
pusha
jp
fadds
push
test
das
inc
xchg
popf
arpl
scas
test
sbb
and
or
pop
xchg
cmp
mov
loopne
fmuls
filds
mov
cmpl
or
cmpsb
pop
push
add
and
or
xor
lea
sub
loopne
or
mov
jl
jb
or
inc
sahf
shll
dec
arpl
into
jo
add
cmp
fmulp
and
into
push
xorb
push
mov
add
push
aam
mov
stos
dec
add
subl
sar
cltd
stos
subl
jp
lcall
add
iret
lahf
inc
or
fdivs
and
jb
addl
scas
sbb
inc
jbe
mov
outsl
adcl
and
mov
cli
xchg
mov
mov
dec
dec
ss
inc
mov
pusha
or
pusha
popw
pop
dec
sbb
mov
mov
sbb
push
inc
addr16
stc
sbb
bound
inc
stos
idivb
pop
insl
xchg
in
sub
outsb
lods
lahf
sub
scas
sbb
jmp
pop
lcall
add
mov
push
aad
jge
xlat
jbe
jle
and
adc
mov
mov
ret
sub
lods
fwait
ljmp
inc
xchg
shrl
dec
pop
or
sbb
data16
test
ja
nop
movl
or
out
insb
or
fistl
call
mov
sbb
sub
xchg
call
iret
xchg
add
mov
lret
add
dec
loop
movl
pop
mov
lret
rolb
xchg
fucomi
push
std
adcb
adc
mov
das
sbb
fistpll
mov
enter
xorl
and
fs
dec
loope
in
lcall
test
xchg
mov
movsl
mov
xchg
in
xchg
mov
dec
mull
mov
insb
add
int
pop
pop
sbb
fwait
sbb
pop
jbe
rcrb
sub
or
sub
jp
in
shll
lahf
or
scas
adc
popf
push
dec
mov
sbb
adc
out
popa
dec
cmp
das
add
bound
dec
stos
int3
ret
sahf
lahf
mov
leave
mov
fadds
outsb
jge
push
insl
frstor
aas
in
sbb
lods
xor
or
stos
cwtl
add
enter
sub
es
ret
lods
rcrl
sub
cs
mov
dec
mov
jnp
lds
cmp
arpl
jb
sub
int3
fucomip
sbb
xchg
ljmp
dec
nop
in
sahf
outsl
cmc
loopne
mov
scas
ss
imul
fcomi
pop
lcall
sub
lds
mov
pop
icebp
ficomps
sbb
lahf
push
repz
jbe
inc
lcall
movsl
jge
std
dec
jns
xorl
xchg
xchg
or
and
adcl
pop
jmp
scas
orl
movsb
sub
movsl
jo
sbb
repnz
pop
aas
bound
and
and
xchg
mov
jmp
cmpsl
sbb
mov
add
daa
mov
scas
ljmp
aam
dec
std
in
sbb
sti
fisttps
fsubrl
aam
sub
nop
icebp
mov
faddp
cmpsl
pop
cltd
xchg
adc
jp
cmp
push
aas
or
inc
jmp
adc
ret
nop
or
and
mov
pop
lea
shll
xchg
cmpsl
xlat
neg
sub
fisttpll
sbb
das
add
lds
mov
mov
clc
arpl
sbb
icebp
mov
xchg
sti
adc
les
jp
out
add
mov
ret
mov
inc
mov
add
sti
and
hlt
pop
pop
add
sahf
cmp
ret
cmp
push
inc
fildl
dec
xchg
cld
mov
in
test
add
jne
or
xchg
inc
jmp
push
push
in
cmp
iret
ds
enter
in
push
stc
dec
in
push
fnsave
mov
mov
adc
ljmp
leave
jp
xchg
xchg
outsl
aad
ret
adc
xor
imul
cmp
sarl
sbb
sub
std
inc
pushf
ret
cmp
negl
lds
jl
pop
aaa
lret
clts
fisttpl
std
cmpsb
sarl
rclb
test
mov
sub
xor
daa
push
testb
cli
sub
rorl
dec
inc
mov
lahf
cld
in
movsl
js
cmpb
popf
or
std
ficomps
in
repnz
dec
jmp
mov
in
das
in
push
cmc
mov
and
cltd
dec
icebp
adc
hlt
mov
out
test
hlt
dec
test
jmp
adc
stos
movsl
pop
vdivsd
icebp
cmp
jbe
sub
sub
mov
scas
mov
pop
outsl
movsl
lret
fs
or
push
pop
mov
test
xchg
add
inc
fcoml
les
xchg
in
sbb
xor
hlt
add
cltd
dec
jns
rorl
xchg
sub
mov
es
pop
aam
dec
mov
mov
cltd
out
loop
out
push
mov
sbb
xor
cmpsb
or
daa
cmp
into
test
idivl
scas
icebp
sub
mov
and
xor
dec
cli
push
icebp
xor
lds
les
mulb
sbbb
ret
mov
in
enter
addl
jns
fisubrs
lret
pushf
push
push
arpl
mov
into
movsb
sbb
out
xchg
ds
stos
dec
sbb
adc
adc
or
mov
push
mov
cmpsb
sbb
inc
adc
xchg
insb
jmp
aad
rorl
aaa
arpl
movl
push
movsl
popf
addr16
out
or
mov
adc
int
rcrb
lahf
enter
in
and
xchg
aaa
ret
mov
test
in
divb
pusha
incl
push
xlat
imul
dec
inc
mov
pop
mov
iret
push
mov
pop
xor
dec
pop
cmpl
rcrb
push
jl
cmp
jnp
mov
cli
rcrb
incl
sbb
cmp
cltd
jnp
adc
lea
jae
xchg
push
stos
mov
jno
pop
lds
mov
adc
stos
mov
fidivrl
sbb
icebp
xor
xor
sbb
mov
and
push
dec
in
mov
xchg
ljmp
rcl
and
xorb
ss
cmpsb
xlat
mov
into
jbe
sarb
or
and
mov
add
call
fmuls
and
mov
jbe
lret
mov
aaa
ficompl
outsl
push
shl
mov
pop
add
shrb
push
push
lcall
jne
lods
fdivrl
leave
ss
jns
mov
cmp
shll
leave
and
rcll
sbb
xchg
jmp
xor
dec
mov
imulb
aaa
fisubs
sbb
jmp
test
bnd
ficomps
and
notb
ja
add
imul
mov
pop
cmpl
mov
xor
xchg
stos
movsb
xor
sub
and
movsb
subb
in
outsl
sbb
bound
outsl
push
sbb
jle
sub
xchg
mov
xchg
lea
sbb
sub
add
cmp
icebp
neg
sub
mov
sbb
mov
lods
pusha
cwtl
movsl
fs
mov
xor
push
shrb
int3
or
test
leave
les
inc
cld
dec
xchg
mov
xor
les
jns
mov
add
les
adc
mov
adc
pop
incl
inc
jp
ja
cmp
subb
pop
outsl
dec
fcoml
lods
fwait
repnz
xchg
shrl
push
inc
test
mov
mov
mov
adc
outsl
fwait
add
mov
xorb
out
movsb
dec
dec
aad
mov
xor
ret
das
idivb
loop
fsubl
icebp
cltd
ljmp
sub
sub
cmpsb
pop
rorb
sub
es
cmpl
push
cmp
les
or
dec
lods
fadds
pause
and
cld
gs
cmp
aam
dec
mov
xor
rclb
or
sti
stos
inc
arpl
pop
cmpsl
add
mov
inc
xor
xchg
cmp
rep
rcl
mov
mov
xor
sub
js
pop
push
pop
adc
sub
cmc
jo
imul
ss
jne
cmp
iret
cmp
mov
xchg
sbbl
fwait
cmc
push
adc
add
xchg
stos
je
sub
inc
pop
or
mov
cld
stc
or
smsw
in
mov
xor
inc
hlt
pushf
mov
xchg
pop
ds
dec
pop
shrb
pop
xor
add
and
sub
mov
push
mov
push
or
fmuls
outsl
add
pop
dec
or
push
mov
mov
stc
stc
dec
fwait
cmp
dec
add
fwait
ret
sbb
ljmp
mov
jno
in
sbbb
push
insb
or
jbe
mov
adc
arpl
or
leave
stos
adc
jae
pop
push
jp
mov
dec
inc
out
pop
fsubrp
or
scas
fs
cli
bound
mov
int
mov
ljmp
fst
and
andb
or
orb
pop
ds
push
incb
xchg
cmp
mov
xor
pop
aas
jmp
push
cltd
into
test
andl
stos
lods
lods
pop
das
xchg
xchg
jge
pop
mov
mov
jns
inc
mov
data16
or
xchg
adc
ja
iret
xlat
mov
push
loopne
sbb
inc
push
scas
sub
mov
xchg
in
fwait
adc
out
lds
or
cmpl
push
loope
nopl
adc
pusha
push
pop
push
insb
cltd
movsl
sbb
fiadds
mov
cmp
insl
xchg
fs
inc
lods
push
ja
loop
scas
mov
ljmp
dec
pop
fisttps
mov
push
sub
xchg
sbb
mov
aad
in
in
adc
leave
jne
out
imul
or
mov
mov
subb
cld
out
test
mov
enter
rorb
pop
insl
pop
test
int
jle
xchg
ds
push
fmuls
popf
lea
sbb
push
enter
push
pop
sbb
push
stos
mov
lcall
or
sbb
add
pop
in
dec
cmpsb
mov
dec
subb
or
jl
xor
mov
or
mov
sbb
pop
xor
dec
sub
subb
into
mov
mov
push
insb
cmpb
mov
aaa
pop
and
scas
ja
roll
cld
pop
subb
jne
lret
or
pop
aaa
out
cmpsl
cs
out
aad
stos
popf
cli
cmpsl
xor
movaps
jns
sarb
rcl
mov
xchg
sbb
add
add
push
sarb
sub
pop
outsl
and
mov
xlat
sub
jo
fimuls
sarb
aam
fldenv
stc
daa
pop
xchg
sbb
inc
or
ss
xor
mov
outsl
push
call
sub
mov
adc
movb
rcl
test
sub
add
lea
and
fwait
add
lods
push
lcall
shlb
loop
or
mov
cmp
push
push
es
jge
add
notl
jb
cmpsl
pop
arpl
ret
lods
and
clc
lock
mov
mov
mov
and
mov
and
shll
lcall
divl
test
lods
xchg
aaa
sbb
adc
push
adc
xor
fistpl
ret
movsl
scas
jns
loope
add
filds
cmp
fs
movsb
sarl
add
roll
mov
fs
jecxz
mov
iret
shr
lea
sub
jg
xchg
roll
fcoml
inc
adc
inc
insl
xor
mov
jae
mov
arpl
jb
push
div
dec
push
jbe
adc
ror
lret
stos
sbb
sbb
inc
mov
push
mov
mov
dec
adc
mov
adc
push
iret
ds
insb
movsb
xchg
adc
pop
lds
mov
lcall
cs
mov
mov
mov
xchg
out
aaa
movsb
cmpsl
cmpsb
enter
bound
cwtl
adc
and
push
imul
adc
mov
jnp
aas
lds
or
in
into
ja
or
aaa
or
repz
xchg
adc
mov
pushf
pushf
mov
lods
flds
cmpb
cs
sahf
out
xchg
jmp
pop
cmpb
dec
scas
mov
cmp
pop
xor
pop
inc
add
dec
adc
pop
jnp
pop
retw
adcb
ficomps
pop
das
mov
jle
sarb
mov
or
add
arpl
cwtl
adc
sbb
and
mov
and
inc
movsl
loopne
xchg
or
xor
pop
mov
enter
daa
or
or
mov
and
mov
mov
dec
adc
cmpsb
add
push
je
cmp
outsb
mov
mov
sahf
dec
cmp
push
ficoms
xlat
mov
push
dec
sub
mov
add
pop
pop
dec
std
push
enter
dec
sahf
mov
xor
or
mov
add
rcrb
mov
mov
pop
movsl
and
push
sub
xchg
jl
test
mov
jns
add
int
sbb
mov
filds
test
push
jp
mov
sbb
frstor
lods
shl
out
cmp
sbb
mov
xor
sbb
arpl
jnp
mov
dec
cmp
jbe
decb
xchg
daa
pop
scas
jecxz
push
add
aad
and
leave
and
xor
pop
pop
popf
js
repnz
bound
nop
imul
inc
lcall
stc
shlb
cld
mov
mov
imul
or
fsubs
addr16
cmp
outsb
mov
mov
aad
adc
aas
jmp
mov
mov
add
cmpsb
cmp
and
and
push
dec
push
lods
lds
testb
repnz
mov
xorb
shll
and
mov
and
cmc
loope
inc
cli
stos
or
call
xchg
and
fwait
outsb
ja
jp
cltd
jno
add
sub
pusha
cwtl
cmp
adcb
fs
out
sub
mov
out
mov
sbb
and
popa
std
addr16
pushf
xor
outsl
sub
or
test
cmp
inc
lahf
xacquire
mov
popf
jg
cld
stos
cli
cs
aaa
xchg
outsb
in
arpl
bnd
in
repz
ss
jb
icebp
push
push
out
mov
push
add
xchg
das
repnz
test
pop
add
inc
mov
pop
mov
js
bound
and
push
fcoml
fnsave
mov
das
xor
mov
into
loop
scas
pop
jl
mov
dec
push
and
shrl
enter
dec
jb
push
test
pop
test
mov
mov
jnp
or
pusha
and
negb
imul
test
sbb
test
push
sub
mov
add
daa
in
push
sbb
jbe
mov
ljmp
repz
inc
adc
ss
adc
ja
sti
lret
mov
gs
mov
fidivl
sbb
in
lret
rcrl
insb
mov
jle
add
dec
aas
ljmp
fdivr
mov
mov
add
hlt
ja
loopne
pop
sbb
add
mov
call
xchg
cmp
es
fdivs
jns
fs
xor
jae
out
mov
cmovge
ficoml
adc
in
das
in
adc
push
and
cs
lods
aas
cmp
scas
outsb
test
mov
xchg
rcrl
push
outsb
movsb
shll
testb
sub
xor
jmp
mov
jnp
mov
pop
jp
outsb
xlat
mov
out
adc
jns
pop
mov
xchg
xor
ljmp
sub
push
push
push
push
jle
out
sbb
inc
nop
pop
ret
aam
xor
sbb
xchg
adc
or
mov
xchg
cwtl
fmull
sbb
sub
popf
mov
das
arpl
sbb
in
dec
call
and
cmp
adc
xchg
mov
and
dec
xchg
pop
fstps
or
push
repnz
ljmp
lods
jno
push
push
mov
std
test
inc
xchg
or
inc
roll
jmp
les
mov
movsl
in
test
scas
xchg
stos
jns
cmp
add
xlat
add
add
popa
rorl
fildl
xor
push
jp
jno
sbb
lods
mov
push
cli
out
xlat
outsl
dec
add
xchg
aam
xor
xlat
in
jl
lcall
sub
enter
lcall
pop
xchg
pop
stos
xor
add
les
aas
popf
hlt
or
mov
aam
pcmpgtb
ljmp
imul
adc
cld
hlt
adc
cmp
mov
lods
lcall
pop
push
xchg
xor
lods
setbe
lock
xor
dec
dec
fdiv
ss
lahf
lds
stc
push
jge
cmp
loop
xor
cwtl
mov
mov
cmp
inc
jl
inc
mov
addb
sub
dec
mov
jl
xor
icebp
dec
push
outsb
call
insl
mov
int3
lock
or
addb
or
xchg
xchg
pusha
fcoml
sub
les
mov
pop
nop
imulb
leave
popa
pop
jb
xor
cmc
adcl
push
cmpsl
mov
push
fcomip
mov
dec
inc
insb
pop
mov
in
push
or
sub
sub
push
cld
and
enter
pop
push
add
in
jns
or
and
pushf
jge
mov
mov
add
xor
cmp
jb
add
adc
inc
bsf
inc
jge
loop
fisubl
dec
stos
insl
divb
cmp
xor
fdivl
ja
sub
sbb
lcall
xchg
push
in
mov
mov
stos
jg
xchg
mov
cmc
push
jecxz
lret
dec
mov
add
cmp
sarb
mov
sub
hlt
adc
lods
inc
aaa
aas
sub
push
andl
outsb
fs
popf
test
xor
in
mov
mov
in
inc
lret
cs
roll
ss
sub
out
out
jnp
daa
mov
dec
mov
adc
mov
daa
mov
push
cmpsb
rorb
dec
int3
cs
dec
mov
cmp
addr16
mov
fwait
xor
shr
mov
aam
js
scas
cmp
mov
repnz
xlat
cli
and
aad
aas
sti
jle
sbb
xchg
fisttps
cltd
lea
nop
jbe
xchg
inc
ja
lds
icebp
mov
add
cmp
jno
cmp
in
dec
arpl
imul
lret
jo
or
les
fmull
rolb
aaa
aaa
dec
rcrb
push
dec
ret
adc
iret
sti
push
fcoms
in
add
data16
subb
aas
mov
mov
jg
cltd
fdiv
leave
pusha
in
lret
xor
nop
inc
cwtl
sub
and
pushf
fwait
cmpsl
push
push
std
js
pop
and
rorl
fdivrl
pop
std
mov
pop
fwait
and
dec
aam
xchg
ror
mov
add
mov
ror
xchg
push
sbb
dec
push
adc
pop
mov
out
or
mov
jnp
in
mov
mov
loope
mov
lahf
into
loopne
sahf
lock
icebp
inc
lds
inc
scas
std
mov
or
push
mov
push
jg
adc
jbe
pop
lock
out
sahf
mov
sbb
in
sti
sbbb
es
dec
or
rcl
xor
cmpsl
adc
cmp
ret
movsb
pushf
jb
iret
cld
pop
mov
je
mov
stos
add
es
shrd
add
cli
sarl
xor
aad
mov
cmc
push
xchg
leave
inc
xchg
push
jl
and
xchg
into
dec
mov
mov
xchg
push
scas
sbb
pusha
popl
pusha
repz
sub
push
ss
in
sub
lret
mov
test
dec
imul
mov
cmp
leave
dec
xchg
in
push
aam
push
out
rol
movsl
jl
loope
mov
das
pop
inc
mov
in
jmp
sti
iret
jns
push
push
xchg
int
nop
testb
mov
imul
repz
adc
inc
stos
leave
add
or
fidivrs
dec
fnstcw
mov
inc
and
cltd
push
push
cwtl
pop
dec
pushf
idivb
subb
mov
dec
push
xchg
iret
pop
push
inc
insb
iret
mov
jmp
mov
frstor
rorl
push
jmp
sub
adc
inc
and
fbld
jno
leave
pop
jo
xor
arpl
pop
stc
add
cmc
pop
sub
xor
and
dec
and
push
aas
mov
ficoms
or
push
or
das
aas
mov
add
loopne
test
mov
fwait
dec
int
call
add
setae
nop
les
les
add
xor
sbb
jmp
mov
data16
sub
into
push
jae
lret
adc
in
push
xchg
das
mov
inc
sti
push
or
mov
pushl
jg
data16
cmp
rcrb
and
xchg
jmp
ljmp
adc
fstps
pusha
insb
and
push
div
adc
inc
test
push
fbstp
and
mov
leave
out
movl
cmp
sbb
cs
push
loop
jne
data16
mov
imul
sbb
mov
adc
pushf
inc
rcll
inc
pop
testb
iret
jnp
pushf
test
cmp
cmp
mov
fldcw
xor
sub
inc
je
dec
mov
jne
mov
pop
mov
push
lret
jp
xchg
loope
adc
add
xchg
xor
pop
ja
subl
cltd
lods
repz
test
sub
loope
push
aas
addr16
jp
dec
pop
dec
sbb
or
call
ja
pop
xchg
mov
enter
loop
mov
das
jnp
pop
dec
sahf
or
and
add
mov
movsl
mov
push
cmp
mov
dec
rclb
mov
outsl
mul
jne
aam
xor
lods
aas
jae
cltd
push
bnd
orb
dec
aad
cmp
pop
push
pop
call
push
das
xlat
xlat
jns
rcrl
sbb
bound
repz
shl
in
incb
cmp
xor
push
aas
add
xchg
jbe
lcall
stc
sbb
test
scas
push
daa
mov
push
ljmp
das
mov
and
scas
loopne
mov
and
adc
out
mov
jl,pn
repz
jecxz
stos
fsts
jmp
shrl
lret
popf
sub
dec
movsb
dec
and
ja
jmp
es
dec
ficoml
in
arpl
or
add
and
push
or
in
popa
lret
ret
ret
push
mov
hlt
in
into
dec
pop
sbb
stc
andb
sbb
jmp
mov
jp
dec
add
cmpsb
insb
test
das
inc
xchg
mov
dec
pmulhw
mov
jmp
hlt
jno
push
mov
mov
jecxz
in
and
push
or
adc
andb
nop
jnp
pop
out
sti
and
add
out
cltd
push
mov
gs
mov
or
jmp
dec
lock
mov
push
sbb
xchg
mov
mov
popa
mov
insb
jmp
and
inc
cmp
lahf
ss
ss
outsb
inc
imul
in
cmp
xor
scas
mov
test
dec
xchg
pop
mov
mov
andl
ret
lea
popa
aaa
popa
test
jl
jo
cli
es
lods
dec
adc
movsb
inc
xchg
cld
sbb
xchg
add
cld
jb
sarb
imul
loope
imul
test
xorb
je
cmc
cs
mov
push
mov
dec
cmp
mov
xorb
or
inc
fwait
cwtl
sti
xchg
stos
sbb
dec
jg
subl
movsb
dec
sbb
loop
loopne
pop
mov
pushf
into
mov
jecxz
mov
in
push
jmp
inc
test
fmull
dec
lds
test
dec
adc
xchg
int3
add
out
add
jne,pt
cmp
insb
ret
lret
adc
mov
xor
ss
mov
mov
cmp
imul
sbb
int
mov
dec
xchg
cwtl
in
add
je
hlt
sub
dec
jnp
sub
push
out
jle
sbb
cs
inc
es
repz
mov
aad
arpl
out
adc
test
sub
loope
adc
sub
dec
jb
push
adc
sarl
in
clc
test
pop
xchg
scas
lds
lret
outsl
lahf
into
cli
out
int
cmp
mov
stos
sub
dec
push
jne
dec
rolb
into
xor
cmc
stos
insl
leave
lret
mov
ret
xor
clc
cmp
cli
xor
repnz
jbe
lods
ret
cmp
push
cs
push
les
mov
into
lcall
xor
imul
mov
jp
aad
pop
cmpsl
push
add
and
fildl
mov
clc
xorb
xor
pop
push
mov
sub
repz
pop
mov
pop
jne
out
mov
jl
sub
sbb
sahf
jmp
mov
push
mov
decb
jns
dec
testb
int3
sahf
jne
pop
jg
stos
fwait
sti
xlat
fldcw
arpl
incb
adc
outsl
loopne
scas
xchg
lcall
das
test
mov
shrl
jo
and
ficoml
mov
cwtl
cld
ss
sahf
inc
movsl
inc
cmp
rclb
popa
gs
int3
pop
inc
mov
cmpsb
jne
inc
aas
cmc
pushf
jl
daa
cmp
outsl
in
push
rol
dec
rcrb
cli
enter
or
in
pop
jb
mov
js
popf
pop
xor
loop
push
and
mov
fsubrl
lcall
xchg
test
mov
jbe
push
iret
jmp
nop
add
loop
jp
inc
pop
aas
mov
insb
lods
jnp
in
mov
orl
mov
pushf
test
cmp
mov
dec
loop
sub
or
xchg
repz
nop
stc
cld
cmp
and
mov
mov
or
divl
sub
fmul
xchg
repz
aas
jge
inc
in
std
loopne
inc
mov
repz
fistl
fs
test
mov
sahf
in
xadd
sbb
test
cmp
xchg
and
aaa
or
pusha
inc
xchg
pop
mov
mov
lds
or
mov
jnp
ja
add
or
lock
test
jge
sbb
add
jae
or
sbb
push
scas
and
push
xor
jmp
jl
jno
xchg
aas
mov
ja
mov
jne
pop
jns
xor
dec
pusha
daa
jne
and
les
out
pop
clc
or
add
adc
sub
dec
sub
pop
cmp
aad
test
add
test
pop
add
push
iret
cli
popa
mov
insb
leave
pop
call
out
or
jmp
mov
mov
aam
xchg
bound
pushf
sar
sbb
fidivs
repz
ljmp
pusha
xor
add
or
pop
mov
bound
sti
loopne
inc
mov
iret
call
pop
push
add
vphaddbq
add
xor
mov
je
popa
mov
jmp
insl
sbb
rcl
or
ficoms
add
ret
pop
add
sub
loope
movsb
cli
xorl
sbbb
stos
mov
fiadds
cmpsl
lods
mov
jl
mov
fdivs
mov
or
and
sbb
popf
xchg
mov
push
fdivrl
lret
xor
nop
cmpsl
inc
shrb
ja
pusha
mov
shlb
test
jl
xor
mov
fstpt
xor
mov
push
data16
jmp
sub
mov
mov
xchg
mov
in
outsl
in
push
outsb
mov
cmp
lret
je
mov
cmp
push
nop
pop
cs
sarl
cmp
das
sbb
sub
dec
std
mov
insl
adc
std
sarl
and
sbb
imul
nop
xchg
arpl
xorl
mov
popl
inc
lods
mov
and
out
mov
data16
cmp
cmc
ljmp
dec
add
or
inc
insb
repz
lcall
shll
cmp
aam
or
and
aas
jle
cmp
lock
lret
clc
test
sub
rol
cmp
test
dec
cwtl
cmp
imul
enter
movsb
outsl
in
push
mov
push
cmp
fcmove
das
dec
es
lret
pop
movsb
cs
pop
xchg
mov
or
cmpsl
xor
shlb
mov
lret
dec
inc
inc
mov
lock
adc
lds
aad
jns
cld
lds
adcb
test
adc
pop
loope
sub
lock
pop
outsl
lock
pop
dec
adc
or
mov
mov
pushf
lahf
nop
ror
out
sbb
xor
mov
loop
outsb
and
adc
dec
push
xchg
jnp
xor
lret
sub
fbld
cmp
and
xor
test
scas
push
sti
inc
push
xchg
aas
loop
push
or
fsubr
mov
jecxz
das
cmpsl
mov
push
imul
and
xchg
or
cmp
rol
push
cwtl
adc
leave
push
dec
cli
fcmovbe
sbb
pop
repz
adc
addr16
xchg
stos
shrb
icebp
add
push
fstl
loop
xlat
add
sub
stos
adc
push
sub
inc
sarl
or
dec
sarb
cli
repnz
xchg
xchg
call
movsl
add
and
push
loope
mov
jecxz
add
push
cmp
jle
cmc
loop
push
or
add
in
lea
lods
xchg
sub
jle
and
ss
movsl
popf
pop
xor
inc
aas
in
adc
jle
push
cs
and
mov
fstpl
xlat
push
movsb
pusha
arpl
xor
ljmp
jp
scas
lds
xor
jb
movsb
add
cli
mov
jl
push
movsl
xchg
sub
sbb
jge
cltd
and
xor
or
mov
pop
mov
mov
mov
push
imul
cli
iret
imul
mov
subl
cli
lock
add
jge
or
sub
cmp
ret
cmp
mov
pop
into
sahf
mov
jns
mull
in
cltd
pop
ljmp
and
adc
xor
adc
outsl
aad
jmp
adc
pushf
adc
fwait
add
cltd
pop
xor
push
jb
aam
or
sub
stc
and
jp
scas
pop
jl
test
scas
xlat
roll
daa
mov
lret
cltd
aad
mov
daa
iret
addr16
int
cs
adc
test
testl
and
sbb
cmpsl
adc
cmp
and
dec
push
xchg
clc
std
fcmovne
cwtl
xlat
aad
leave
enter
scas
push
mov
push
sbb
in
mov
gs
sbbl
jmp
mov
cmc
mov
repz
jno
mov
repnz
pop
scas
fistpl
add
rorb
xchg
dec
int3
fadds
fs
lret
std
sub
mov
push
test
dec
roll
stos
lods
sub
mov
scas
les
sbb
jmp
fnstsw
jnp
pop
cmp
icebp
movsb
test
scas
ja
mov
jbe
fcoml
hlt
lret
std
jecxz
lret
dec
rorb
xor
inc
xorl
shrl
loope
inc
les
mov
shr
push
or
jno
mov
sbb
sub
std
je
dec
cmpsl
mov
xor
jle
pmovmskb
and
sbb
int
push
or
jb
lcall
sbbb
shlb
mov
dec
xor
dec
dec
mov
jnp
dec
pop
pop
and
cmp
mov
xor
imul
jp
insl
icebp
pextrw
orb
stos
dec
add
sub
imul
ret
or
mov
push
mov
xchg
fldt
adc
dec
mov
jge
push
gs
cmp
mov
xchg
xor
loope
stos
mov
and
inc
xchg
xchg
pop
push
mov
mov
in
push
mov
mov
jne
call
mov
ljmp
push
popf
jnp
mov
gs
or
and
inc
mov
xchg
cli
jae
in
aaa
push
loop
mov
or
jl
push
call
push
dec
sahf
push
lcall
or
adcb
xor
orb
push
outsb
negl
in
ds
inc
testl
and
push
in
cmpsb
fildll
out
add
into
lcall
sub
pop
out
xchg
inc
icebp
sub
je
inc
xor
jmp
mov
popf
mov
sti
movsl
test
rcrb
dec
and
out
mov
int
dec
pop
pop
insl
js
push
push
push
mov
call
jnp
imul
pop
pop
xchg
int
dec
cli
pop
mov
mov
inc
dec
popa
call
test
cmp
pop
ja
mov
dec
xlat
pop
xchg
cmc
inc
movsl
jb
cld
loopne
int3
cmpsw
nop
adc
sub
adc
movsb
cmp
dec
dec
mov
mov
and
push
jo
call
ret
mov
out
sarb
cltd
xchg
aam
add
pop
sti
lret
mov
je
aaa
nop
sbb
rcrl
dec
orb
aam
jne
dec
dec
lods
sbb
xorb
insb
lcall
stos
ja
jge
psubsb
sub
movsl
das
mov
pusha
xor
iret
loopne
scas
shlb
imul
add
lods
test
fs
or
push
fmul
push
in
movsl
inc
cmp
outsb
addr16
gs
or
dec
mov
mov
cmp
adc
or
test
sti
mov
jge
gs
mov
cmp
add
jnp
inc
jo
pop
scas
mov
lahf
push
out
xchg
xor
mov
fdivrl
test
xchg
jmp
add
jb
outsb
jnp
xor
sbbl
les
pop
cmc
jns
out
dec
popf
bound
fidivrs
ret
sub
and
push
push
mov
add
pop
push
fs
xor
jne
cld
in
js
rclb
dec
pop
push
sub
mov
insl
dec
aaa
fistps
sub
es
and
hlt
insl
sbb
pop
in
insb
add
dec
xchg
lret
pop
cmp
jne
insb
mov
cs
add
mov
mov
push
idivb
pop
lret
mov
push
and
dec
xchg
cmpsb
xor
nop
xlat
mov
pop
pop
mov
sbb
and
popa
les
test
mov
push
out
iret
xorb
scas
in
test
adc
lret
fucomip
or
mov
call
hlt
pop
cld
adcb
inc
xchg
lock
aad
cmp
and
pop
jg
ljmp
repz
stos
out
insl
test
clc
test
add
push
scas
addl
pusha
test
jg
sub
inc
cmp
dec
cmp
out
dec
aad
pop
push
dec
inc
push
cltd
xor
mov
mov
and
cltd
lret
ljmp
sub
adc
pop
lods
lock
mov
idivb
pop
mov
inc
add
int3
adc
sbb
jle
imul
js
xor
negb
mov
out
out
mov
mov
vxorpd
aad
mov
int3
pop
mov
mov
movsb
and
mov
pop
mov
out
mov
mov
and
mov
dec
mov
and
xchg
cmpsb
xchg
fwait
or
test
roll
dec
sub
in
fists
in
sub
aad
jnp
nop
subb
mov
mov
in
aam
lahf
jnp
xor
mov
out
test
mov
adc
push
xchg
jle
mov
cmp
sarl
aaa
shl
mov
int
push
inc
add
cmpsb
xchg
pop
add
sub
pop
pop
popa
fcoml
in
push
xchg
cmpsl
sub
stos
adc
fwait
cld
jae
xchg
fdiv
dec
mov
pusha
cmp
jnp
aad
pop
lea
xchg
mul
adc
xchg
pop
xor
out
lods
aad
popa
addr16
lahf
mov
xchg
lahf
pop
addr16
outsb
lock
mov
cmc
gs
rcll
xchg
mov
cmpsb
lcall
iret
cld
jl
dec
mov
jne
push
sub
or
mov
pop
dec
jg
insb
pop
jne
lods
std
sub
fimull
jbe
inc
xorl
xchg
cmp
jns
and
cld
mov
ret
fcomps
jnp
lcall
dec
inc
sbb
aaa
adc
jecxz
popa
jle
push
lret
cmp
inc
add
hlt
cmc
sahf
aam
push
xor
hlt
hlt
jno
lret
xchg
sbb
rcr
clc
ss
flds
adc
out
mov
call
xor
or
lret
insb
loope
stos
mov
rolb
ror
dec
mov
mov
and
add
std
sar
ja
push
pop
push
or
jle
push
cwtl
add
push
je
pop
jp
sar
es
imul
ret
mov
inc
leave
clc
imul
sarb
push
pop
test
add
leave
adc
mov
jae
call
or
add
imul
cmp
popa
push
cltd
or
xor
rcrb
or
rcll
jge
ljmp
imul
jmp
les
fldl
or
mov
dec
inc
arpl
movsb
out
int3
stos
xlat
iret
adc
lock
xchg
nop
jge
xchg
loop
int
push
mov
fcomps
push
cmp
or
imul
icebp
ret
sub
in
sub
call
sub
movsb
inc
xchg
test
add
ss
mov
add
and
int3
sbb
cmpl
jle
add
and
add
and
xor
sbb
mov
scas
outsb
out
insb
nop
xchg
adc
setg
lds
stos
add
jnp,pt
and
inc
sub
pop
inc
rorb
dec
or
decl
bound
dec
dec
mov
jecxz
or
xchg
xor
xor
pop
mov
es
cmp
push
hlt
addl
jl
xchg
jg
subl
data16
stos
pushl
loop
push
cmp
or
push
jecxz
fcomi
stos
pop
add
insl
pop
fisttpl
movsb
cmc
sub
dec
outsb
cwtl
shrb
stos
xor
sbbl
add
dec
xchg
jo
popf
mov
push
ss
xchg
jne
rclb
int3
sbb
dec
jle
push
mov
dec
pop
pusha
xor
std
cmp
jns
lock
cltd
add
pop
adc
jp
or
das
add
xchg
dec
test
test
push
dec
inc
lahf
test
inc
sub
pop
idiv
add
xor
hlt
ds
dec
leave
retw
cmp
clc
je
mov
and
lea
aas
sub
lahf
xorl
push
sbb
daa
cltd
fcmovne
ljmp
mov
add
in
adc
mov
push
push
mov
and
xor
inc
add
jns
ret
getsec
jbe
adc
dec
arpl
lods
cmp
jae
in
cld
flds
sahf
push
in
insb
pop
shlb
xchg
adc
xchg
test
sbb
leave
mov
add
les
lods
movsb
std
cmp
std
notl
loopne
mov
push
mov
sbb
hlt
std
mov
push
stos
and
test
subb
scas
pushf
jnp
push
adc
sbb
pop
pusha
outsb
ret
push
insb
cwtl
and
incl
aad
and
jb
sub
pop
push
sbb
add
pop
inc
and
jae
sbb
dec
mov
add
shl
xchg
xchg
out
cld
int
lock
aam
repnz
pop
or
stos
pop
mov
lds
jle
data16
adc
fwait
pop
xor
rcr
pop
cmpsb
pop
call
sarl
clc
mov
dec
xchg
jb
dec
jle
iret
jo
xorb
jge
insl
adc
jb
mov
xor
and
push
jns
sbb
fsubr
jno
orb
or
mov
adc
sub
mov
cmpsb
in
inc
stos
scas
pop
sbb
out
pusha
mov
cmp
je
test
mov
xchg
sbb
rcll
push
in
enter
popl
push
or
mov
test
add
cld
mov
gs
addr16
popa
dec
mov
and
add
cs
jg
dec
sbb
inc
hlt
mov
mov
pop
jns
mov
dec
inc
mov
test
nop
jl
popa
sub
ss
out
sub
popf
int3
movsb
xor
addl
sbb
ss
mov
inc
push
repnz
inc
jecxz
mov
fisubs
ret
insl
pop
mov
fstl
ljmp
push
dec
lret
add
fisubl
movsl
cmpsb
mov
mov
cmp
test
xchg
mov
cltd
jno
mov
or
jge
pop
ss
sti
push
inc
das
pop
and
stc
inc
insb
pop
pop
jle
pop
stc
mov
mov
sub
lock
inc
fstps
and
pop
arpl
stos
roll
push
mov
rcl
cmpsl
fcmovbe
sub
push
repz
rcrb
movb
push
push
push
push
addb
mov
or
cmp
int3
mov
pop
sbb
dec
or
in
inc
insb
cli
jae
shr
jns
or
lds
dec
movsb
loop
stc
sarl
bnd
leave
stc
loopne
xchg
ss
add
mov
scas
test
inc
push
cmp
repnz
sets
cmp
js
dec
inc
pop
xlat
cld
loope
sub
sub
test
jo
sub
adc
add
orb
ret
xchg
pop
sub
jb
dec
lds
dec
js
iret
mov
popf
mov
popa
incl
mov
jno
sbb
mulb
leave
stos
xchg
or
mov
dec
cltd
mov
dec
or
sarb
dec
pop
mov
push
xor
or
jns
push
out
fistl
mov
mov
mov
jg
sarb
outsb
jl
mov
fildll
mov
cmp
push
adc
mov
jnp
xchg
sub
sarb
scas
rorb
xchg
or
mov
fsubrs
stc
pop
orb
xor
fmul
out
lds
repz
mov
mov
mov
outsb
or
cmpsb
icebp
cwtl
fimull
testl
or
int
mov
or
inc
mov
test
aad
mov
pop
fbstp
xchg
mov
push
hlt
rcrb
lods
shrl
hlt
mov
inc
adcl
daa
daa
xor
mov
adc
lea
or
inc
imulb
addb
das
mov
push
jge
ja
lock
mov
xchg
jmp
into
sbb
push
adc
pop
jl
xchg
jb
fbld
in
sub
sbbl
sbb
sahf
push
jecxz
aad
inc
notb
cli
xlat
sbb
mov
into
inc
add
lret
shll
lret
cmpl
nop
cwtl
push
push
nop
adc
inc
cmpsb
mov
adc
fwait
mov
xchg
cmp
loopne
sbb
cmc
cwtl
loope
jp
adc
push
lret
xchg
or
jmp
cmpsl
ja
sub
loope
sbb
out
sbb
ret
pop
cmpsl
xchg
rcrb
sbb
jae
lock
mov
inc
push
mov
les
fdiv
xor
sbb
sub
cmp
pushf
outsb
dec
stos
scas
sbb
xchg
cli
lea
adc
clc
cmp
fnstsw
add
