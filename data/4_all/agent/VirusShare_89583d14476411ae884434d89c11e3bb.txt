sbb
add
test
mov
sub
mov
push
lock
sbb
aam
clc
sahf
test
xor
loopne
and
pop
add
mov
and
pop
lret
pop
mov
mov
sbb
xchg
xor
pop
ja
dec
scas
lret
enter
mov
mov
in
adc
jp
sbb
call
push
lods
add
lret
xor
fdivl
cli
push
js
mov
in
push
inc
ror
aad
sbb
and
adc
mov
repz
adc
add
sbb
or
in
add
xorb
xlat
sub
mov
stos
cli
push
insb
aad
add
in
mov
rorl
xchg
mov
dec
sub
push
popf
add
stc
jg
mov
notl
rclb
into
cs
sub
cmp
std
adc
cltd
out
sbbl
cmc
popa
ret
cmp
fidivs
xchg
push
push
jl
xor
jb
xchg
or
fistl
dec
and
scas
popf
out
fs
scas
into
lods
adc
jl
pop
mov
bound
repz
adc
adc
les
aam
adc
mov
dec
movb
dec
out
ljmp
pop
aam
push
pop
loope
and
test
inc
stos
mov
insl
aaa
mov
cmp
xchg
in
rcr
cmpl
pop
std
cmpb
icebp
xor
jl
push
add
in
xchg
mov
and
dec
mov
ljmp
mov
xor
adc
mov
in
inc
xor
xor
mov
arpl
adc
pop
push
adc
in
push
inc
out
jge
mov
cs
sub
inc
mov
outsb
pop
cs
mov
cs
add
addr16
and
decl
push
test
or
aaa
mov
jns
sub
movsl
ja
out
cmp
dec
cmp
dec
ja
mov
cwtl
mov
cli
push
aad
xchg
mov
inc
and
ja
rcrb
cli
aaa
hlt
je
cld
fstpl
jg
jo
call
in
iret
cwtl
clc
jge
add
fisttpll
cld
fstpl
add
repnz
repnz
mov
insl
xor
xorb
les
mov
adc
ss
mov
outsb
bound
ds
jp
ja
dec
or
in
pop
nop
add
pop
arpl
pop
adc
add
or
icebp
mov
ret
mov
es
hlt
xlat
test
pop
fcmovnu
push
fcompl
movsl
fldt
and
mov
push
insl
jnp
cmp
dec
pop
sbb
sar
sahf
ss
gs
add
adc
pop
and
popf
mov
in
push
ja
mov
subl
subb
jno
in
jnp
or
mov
jle
pop
lods
mov
mov
dec
cmp
imul
pop
test
jns
cmc
xor
or
pop
in
fisubl
fidivs
xchg
fsubs
aas
mov
xor
push
orb
pop
mov
inc
int3
xor
ret
cli
dec
aas
mov
inc
pushf
pop
jecxz
jp
jl
xchg
cli
mov
rcll
and
mov
les
xor
adc
hlt
data16
push
filds
push
push
add
pop
xlat
cmp
hlt
loope
pop
popa
repz
sub
cmc
jecxz
arpl
mov
lcall
sti
mov
xchg
xchg
loop
cs
push
inc
or
and
clc
xchg
das
test
mov
pop
xchg
aam
adc
sub
ror
push
mov
jb
stos
loope
and
jne
inc
adc
inc
cmp
xchg
clc
xor
stos
push
xlat
adc
mov
fisttps
mov
cmp
repz
mov
and
je
pop
mov
jecxz
out
ljmp
pop
arpl
inc
bnd
test
enter
mov
movl
sahf
xorb
sub
sbb
and
rcll
ja
mov
xchg
cmp
push
inc
and
ljmp
mov
into
jg
movsl
dec
gs
dec
stc
dec
xor
add
ljmp
cmc
popf
icebp
add
dec
out
push
inc
pop
out
sub
pop
data16
add
jecxz
call
nop/reserved
ljmp
stos
int
jns
mov
imul
jnp
mov
fcmovnb
push
cmp
ss
and
jnp
pop
mov
xchg
icebp
packsswb
orb
shlb
sbb
ljmp
dec
lret
in
pop
into
lock
push
mov
repnz
and
addr16
gs
pop
test
fnstsw
lock
je
cmc
std
cmp
sbbb
into
rcrb
pop
push
mov
ds
sbb
mov
aas
push
stos
jecxz
mov
fcoms
mov
ficoml
ds
mov
ds
adc
subb
lods
pop
mov
ss
in
sub
loop
sub
sti
in
cld
negl
mov
je
inc
add
aam
ljmp
cmp
pushf
cmc
js
xchg
cli
bound
cmp
out
loopne
dec
xchg
add
sti
dec
xchg
jb
iret
xor
push
fadds
jo
push
mov
adc
enter
mov
lahf
mov
ds
cmp
push
cwtl
mov
sti
xor
rcl
push
inc
jb
mov
xchg
adc
jae
fcmovnb
cmp
xlat
out
mov
sbb
sbb
pop
mov
push
mov
push
mov
xor
out
xchg
adc
mov
adc
icebp
mov
fadds
fadds
fs
repz
inc
sub
arpl
jge
jle
cmp
outsl
add
adc
pusha
and
jg
mov
inc
rcrl
rolb
xlat
xchg
nop
imul
add
stc
mov
mov
or
jns
sbbl
dec
in
mov
dec
in
mov
mov
xchg
ffree
dec
push
or
in
clc
fsts
jmp
test
orl
iret
loope
bound
and
pop
xlat
mov
mov
movsl
iret
nop
int3
xchg
xchg
cmp
loopne
and
dec
xchg
arpl
divb
out
mov
and
sbb
jae
jb
pop
mov
negb
adc
je
fwait
dec
sbb
push
add
fmul
and
addr16
cmpsl
inc
dec
mov
xchg
jb
subl
pop
arpl
in
adc
daa
ret
addb
imul
push
sbb
fcmovnbe
test
leave
jg
sbb
cmp
aad
xchg
sub
or
gs
movsl
and
mov
mov
int
mov
das
pop
or
push
lret
pushf
xchg
jae
gs
mov
and
lret
and
mov
push
ja
cmp
shll
and
fstps
or
inc
xor
push
out
dec
adc
cli
mov
mov
cld
push
xorl
gs
and
jp
scas
dec
ret
xchg
stos
test
aam
out
ljmp
mull
icebp
cld
xor
mov
pop
lds
std
je
push
fimuls
nop
aam
sbb
ret
inc
push
stc
shrl
jg
push
adc
cmp
into
xor
push
in
dec
leave
cmc
push
clc
cli
jmp
mov
in
push
pop
fistpl
xor
lea
out
ss
stos
fsts
xchg
in
push
mov
mov
cltd
inc
cmp
jbe
pop
mov
cld
test
lods
push
movsl
cli
fldenv
push
imul
mov
getsec
mov
adc
rorb
test
pop
dec
mov
loope
in
popa
test
xchg
mov
fmuls
pop
cmp
test
mov
cs
adc
cs
cli
xor
loope
ret
clc
ljmp
jns
cmp
xor
cwtl
mov
arpl
fsubrl
rcr
cmp
inc
rorb
xchg
sub
or
daa
push
mov
pop
inc
in
pop
mov
push
fsts
adc
imul
inc
pop
je
pop
mov
or
and
xchg
mov
mov
stos
bound
imul
add
adc
inc
dec
out
dec
mov
stos
into
xchg
lret
push
inc
jmp
dec
xlat
repz
and
leave
mov
dec
sub
lock
popl
out
and
sbb
push
lret
pusha
xor
mov
fistl
pop
jle
add
sub
enter
dec
push
jl
jl
enter
insb
imul
call
dec
push
xor
push
push
jnp
mov
adc
mov
iret
adc
iret
out
xor
shll
and
out
or
mov
rcl
mov
inc
jecxz
cltd
pop
rorl
clc
or
ret
ret
test
ret
roll
orl
pop
scas
pusha
mov
cltd
xchg
ja
inc
ret
xchg
push
add
aaa
ljmp
lcall
push
sbb
xchg
cmp
data16
stc
imull
fwait
cmc
mov
mov
add
movsb
sbb
cmpsb
mov
fdivs
sub
movsl
mov
xchg
jle
out
pop
sbb
enter
sahf
mov
or
rorl
in
and
mov
jns
clc
push
leave
adc
sti
jae
arpl
mov
push
cli
cld
mov
and
push
shr
push
dec
add
daa
loopne
je,pt
cmpsl
fisubrl
les
dec
pop
adc
mov
sahf
push
pop
jp
vpunpcklbw
std
movsb
sub
adc
pop
jl
je
icebp
cmp
sti
sbb
es
jle
inc
loopne
jp
addr16
xchg
lods
jne
or
inc
scas
push
mov
xor
pop
cmp
push
sbb
dec
xchg
add
mov
lock
dec
sbb
stos
getsec
dec
loope
or
cmp
jns
mov
and
fwait
push
bound
orb
andb
jo
pushf
dec
test
in
push
xor
mov
xor
shl
pop
or
mov
cs
push
fs
sub
cmpl
inc
insb
push
sub
adc
dec
xor
mov
mov
inc
sti
jne
push
jg
shll
pop
insl
push
jmp
sbb
inc
sbb
dec
movb
mov
dec
inc
push
pop
sbb
adc
push
arpl
mov
inc
out
push
lret
sarl
jl
mov
pop
adc
jle
cmpsl
fcomp
and
incl
in
outsl
imul
nop
adc
cmp
in
andps
inc
sub
inc
ja
in
int3
or
imul
in
push
fadd
adc
push
add
dec
pushl
fistpl
les
ds
ja
inc
leave
mov
dec
mov
mov
repnz
aas
push
fdivl
cmp
cwtl
cmpl
push
mov
or
mov
gs
lea
jle
test
repz
sub
inc
sbbb
inc
xchg
jb
jecxz
std
or
push
in
ljmp
pusha
pop
ja
hlt
imul
pop
sti
pop
pop
dec
sbb
sahf
cmp
hlt
jp
inc
mov
movsl
cltd
mov
lock
xchg
inc
mov
mov
inc
out
jmp
lret
dec
and
test
dec
loope
in
lods
outsb
imul
push
adc
jge
test
test
cmp
cld
adc
adc
cmpxchg
push
push
shll
xlat
add
jecxz
fwait
ret
subb
shlb
jmp
mov
push
in
sub
movsl
jge
inc
fcmovnbe
sbb
std
cmpb
in
cltd
rol
and
xor
push
ja
adc
cmpsl
xchg
pop
sub
xchg
dec
popa
adcb
scas
in
pusha
scas
mov
stc
loop
test
jge
adc
xchg
mov
add
sahf
add
xchg
fidivrs
push
mov
mov
in
xor
xor
mov
in
fisubrs
loopne
jnp
fwait
jmp
ds
pmaddwd
or
inc
jle
xchg
push
mov
adc
mulb
cmpsb
inc
jnp
fidivs
xor
push
cmp
jge
mov
and
cmp
data16
cmp
jo
adc
fisttps
sub
ss
push
imul
rcr
add
cmp
fs
jle
xchg
movb
fadd
sub
enter
pop
pop
lods
les
pop
addr16
add
pop
fwait
mov
in
cltd
test
xchg
push
shr
dec
loop
icebp
rcrl
jmp
jecxz
jnp
xchg
xor
addr16
mov
imul
push
xor
add
cmpsb
pop
sbb
out
lods
sub
test
xchg
xchg
jbe
fdivs
push
imul
decl
pop
test
inc
dec
ljmp
in
gs
or
jecxz
adc
or
jl
jo
movsb
out
push
pop
xor
jmp
fldl
in
adc
cli
loope
leave
cwtl
xor
inc
shrb
imul
jge
out
mull
jle
mov
xchg
dec
int
xor
rclb
mov
mov
jmp
mov
hlt
xor
idivb
orb
jo
mov
push
inc
xlat
xchg
lret
lahf
outsl
and
jp
jmp
addr16
xchg
loopne
jb
mov
cmp
xorl
inc
jge
popa
addr16
imul
outsb
sbb
xor
out
daa
psubsb
inc
scas
enter
or
and
cmp
icebp
push
stos
xchg
lret
fs
cmp
cli
cltd
ja
pop
stc
xchg
ret
filds
xchg
enter
frstor
mov
dec
jne
mov
bnd
and
fwait
inc
je
fstpt
icebp
arpl
ja
sub
neg
pusha
adc
push
pop
xchg
stos
and
and
nop
sbb
mov
or
cmp
ret
lock
cmp
fmulp
fs
xchg
push
sbb
in
data16
push
sbb
inc
mov
movsl
inc
jge
ljmp
xchg
scas
popl
push
lahf
mov
daa
subl
cmp
aaa
ret
jns
sub
jmp
sub
pushf
dec
xchg
shl
xchg
pop
in
adc
mov
outsb
call
enter
push
adc
icebp
int3
inc
sub
adc
jl
jl
fcoml
xchg
aam
les
xor
xchg
cmp
out
sub
ret
cmpsb
push
jl
lods
mov
pop
std
cs
notb
xor
push
js
dec
cmpsb
xchg
sti
push
inc
and
sbb
or
cmp
insl
mov
xor
insb
std
sbb
ds
aaa
xor
arpl
inc
pop
mov
popa
jge
push
fs
xor
pop
lock
and
aaa
mov
add
xchg
push
movsb
pop
orb
int
or
xor
jmp
lret
lret
xor
or
sub
xchg
cmp
jle
cmp
shlb
js
enter
cmpsb
gs
push
dec
data16
push
out
push
sub
dec
cmp
enter
icebp
jbe
outsl
push
mov
add
jl
cmpsl
test
packuswb
int3
and
fnstsw
rcrb
lahf
adc
push
adc
mov
rorl
fcompl
or
xor
lods
and
adc
sarl
push
in
cwtl
fmul
je
push
cmc
cltd
pop
xchg
or
sub
int
ss
mov
outsb
xor
movsl
add
cmp
add
sbb
xor
xlat
push
pop
in
cmpsb
dec
int
dec
sbb
adc
inc
test
and
aam
fmuls
sar
jmp
xchg
in
push
jb
icebp
push
cld
xlat
rclb
and
and
push
jle
call
add
fdivr
clc
push
push
fidivrs
repz
daa
leave
sbb
sub
or
add
leave
push
mov
lret
xchg
mov
jae
sbb
fldt
mov
inc
lock
outsb
sub
pop
or
jp
add
addr16
fimull
adc
imul
cmp
js
dec
stc
push
mov
mov
mov
inc
adc
ja
push
jne
mov
pop
dec
dec
shlb
in
ret
fiaddl
loopne
xor
mov
sub
and
mull
mov
xor
mov
cmpsb
movsl
jb
dec
fwait
mov
lea
jne
mov
add
xor
test
pop
ret
mov
loopne
mov
or
mov
dec
hlt
pop
pop
sbb
jle
stos
sbb
pop
lcall
leave
mov
jg
inc
cmp
xchg
xor
jp
sahf
aam
int
xchg
ret
xchg
cmp
adc
fstp
in
or
fsts
xor
xor
push
pop
jno
or
inc
fcmovnu
movl
push
gs
cmc
into
cmp
pop
dec
mov
dec
sub
mov
xchg
sti
adc
xor
imul
repnz
stos
loopne
mov
cmp
out
mov
push
pop
adc
and
add
repnz
adc
pop
cs
outsl
fcmovu
push
in
add
mov
mov
pop
cmp
lret
in
mov
jecxz
out
or
xor
add
data16
mov
sub
jae
gs
inc
aas
pop
jle
mov
ret
add
or
xor
test
shlb
push
push
jns
dec
dec
dec
mov
mov
cli
scas
xor
scas
lret
lods
push
sbbl
add
dec
testl
in
push
mov
mov
aad
sub
jne
jae
cmpsl
or
jne
shlb
insb
dec
mov
imul
lods
pop
loop
cmp
sbb
and
out
cmp
mov
jp
sub
adc
sahf
and
out
ret
mov
wrmsr
cs
popf
mov
inc
lret
cli
and
mov
mov
cmpsl
pop
ds
pop
es
jle
sbb
inc
test
jo
mov
or
leave
ljmp
sarb
int3
dec
or
or
dec
test
cmp
cmp
in
cmp
in
stc
shll
cs
fadds
adc
mov
addr16
bound
push
xchg
movsb
and
loopne
cld
sbb
push
jnp
icebp
fdivr
mov
pop
jmp
pop
adc
dec
jae
fsubp
fidivrl
sahf
mov
outsl
mov
add
fs
cld
bound
inc
sub
xlat
gs
cmp
jnp
or
ljmp
or
and
dec
rolb
repnz
cmp
push
mov
adc
pop
sbb
cld
pushf
cltd
or
mov
and
loope
aas
lock
sbb
fcomi
inc
dec
movzwl
fimull
insl
mov
pusha
les
arpl
in
pop
loopne
mov
lods
movsb
mov
test
fs
mov
dec
out
or
lret
and
push
cmpsl
push
fstpl
out
mov
fwait
andl
sub
test
pop
mov
cld
dec
pushf
dec
test
inc
in
lods
mov
gs
fsts
icebp
jge
dec
mov
xchg
test
pop
mov
iret
jbe
jns
sete
es
add
inc
cmp
or
repz
jne
js
inc
adc
bound
mov
dec
adc
xchg
pop
push
cmp
scas
loop
ret
loopne
mov
subb
enter
add
push
subl
pusha
ja
and
mov
data16
aam
bound
je
mov
call
mov
test
fisttps
cmp
adc
insb
repnz
iret
mov
sti
sbb
mov
and
stos
mov
add
inc
pop
cmpl
xchg
and
imulb
rcrl
add
push
fistpll
ss
imul
dec
and
aad
adc
js
ret
lret
mov
push
cli
adc
mull
xchg
jl
fnsave
cmp
adc
imulb
inc
inc
mov
ret
inc
push
in
mov
test
push
ficoml
add
push
enter
mov
add
cld
pop
cmp
cmp
aad
inc
test
leave
nop
gs
fsub
clc
inc
jmp
fcompl
call
mov
cmp
or
dec
inc
or
push
push
bound
jl
int3
aaa
mov
mull
hlt
leave
jecxz
shlb
mov
in
pop
int
sbbl
lret
js
stc
and
inc
cmpsb
sarb
jle
nop
dec
dec
shll
push
in
mov
adc
push
popf
or
sub
test
jmp
adc
adc
inc
rcrl
xchg
sbb
cli
dec
xchg
cli
aad
jecxz
stos
adc
test
pop
int
pop
nop
fwait
xchg
xorb
cltd
loop
divb
xor
mov
popa
cmp
cmp
sbb
das
adc
sbb
std
mov
adc
cmp
lcall
add
mov
fwait
adc
jg
outsl
ljmp
movl
xchg
adc
clc
lcall
cli
pushf
inc
xorb
xor
push
or
jp
testb
pushf
pusha
loope
adc
ret
dec
add
add
arpl
loope
mov
add
or
rclb
or
jg
addr16
xchg
into
sbb
cmc
popf
pop
stos
loopne
xlat
pop
mov
sub
outsl
filds
xor
inc
add
fists
sub
sahf
dec
add
and
and
lods
subb
mov
aam
out
negb
movsl
xchg
sbb
xchg
shll
test
mov
add
push
push
movsb
push
daa
jecxz
xchg
xchg
insl
jge
and
xlat
pop
mov
loope
pop
test
outsb
in
xor
fwait
loop
xchg
push
cmp
ret
and
cmc
frstor
lods
push
add
add
lret
imul
push
frndint
jbe
imul
dec
xlat
ja
rorl
aam
pop
es
add
xchg
mov
and
call
cmp
sarb
mov
mov
jb
cmpb
incb
insb
jmp
ja
xchg
test
sbb
gs
out
jno
hlt
and
mov
insb
repnz
jle
jne
jno
aaa
fadds
insl
push
roll
js
inc
out
sub
push
push
add
test
inc
fsubrl
nop
xor
movsb
jnp
or
push
add
mov
push
sub
sub
xorl
or
xor
inc
popf
jns
sbb
inc
mov
ja
adc
pop
in
andl
inc
out
enter
aad
outsb
cmpsb
cmp
mov
movsl
lahf
scas
add
xorl
sub
ds
icebp
popa
popf
dec
push
test
sbbl
fwait
xchg
mov
shl
data16
xor
testb
mov
sti
lods
sub
jmp
fwait
push
mov
icebp
shrl
cld
pop
cmp
mov
mov
leave
cmp
or
in
addl
test
lret
add
sbb
jnp
es
pop
push
nop
sub
xor
mov
jmp
push
mov
loope
mov
pop
dec
cli
enter
add
xchg
stc
xchg
mov
dec
sbb
add
int
hlt
shll
sub
add
or
mov
mov
xchg
js
stos
in
addl
popa
push
dec
jb
adc
pop
push
sbb
dec
and
and
imul
mov
push
idiv
mov
jno
mov
ja
cmpsl
rcll
loope
aas
outsl
daa
por
push
testb
jae
mov
jne
or
mov
aam
push
mov
cmp
popa
push
dec
out
adc
and
sbb
jb
cmc
ja
jle
loope
in
scas
xor
call
mov
xchg
scas
fstpt
dec
cld
lcall
pusha
pop
mov
mov
fsubr
cmp
aam
sub
test
inc
push
mov
dec
or
aas
pop
cld
xchg
scas
sarb
aam
mov
xor
mov
fsubr
sub
xchg
xor
rol
push
hlt
push
cwtl
push
enter
jl
cmp
pusha
mov
stos
loopne
stos
push
rolb
decb
addr16
inc
dec
cmp
addr16
ljmp
push
stos
sbb
push
test
rolb
jns
fnstenv
pop
pop
mov
push
stc
out
and
lahf
push
aaa
pop
cwtl
lds
sahf
cli
or
cltd
lahf
dec
jge
popf
stos
dec
mov
dec
faddl
sbbb
adc
sub
sbb
push
mov
shrl
or
repz
lock
jmp
mov
sbb
xchg
xor
mov
mov
push
loopne
arpl
loop
push
add
mov
xor
or
sti
inc
inc
rcrb
jo
adc
test
repnz
pop
jl
je
jne
nop
lods
sti
jmp
cmp
clc
loopne
xchg
int
addr16
cmpsl
cmp
js
inc
lock
cld
jecxz
in
int
pop
mov
mov
xor
adc
add
loopne
sub
xor
dec
push
jl
inc
fcmovnu
rorl
xorl
xchg
mov
or
movsb
dec
outsb
inc
xor
jmp
sbb
adc
mull
xchg
popa
mov
dec
mov
ficoms
outsb
ret
ret
push
mov
pop
and
shlb
push
adc
incl
or
int
mov
xchg
adc
mov
mov
mov
cwtl
hlt
cmpsb
lret
mov
bound
ss
movsl
iret
pop
sbb
data16
popf
in
jae
mov
inc
push
mov
ja
inc
push
clc
mov
push
insl
sbb
pop
jns
shll
mov
sub
insl
pop
push
test
mov
aas
cmp
xchg
mov
and
adc
mov
and
lock
data16
xchg
fdivl
stos
imul
ficoml
jmp
mov
daa
push
dec
rcr
push
fcoml
nop
adc
xor
arpl
jle
pop
mov
push
lret
bound
in
frstor
mov
das
insl
test
mov
xor
repz
adc
lock
cmp
jne
pop
aaa
orl
lock
push
mov
nop
int
jg
pop
lret
jmp
aad
add
jge
jns
aam
sbb
push
inc
mov
loop
aas
xor
sub
sbb
push
imul
fs
leave
inc
cmpsb
push
cwtl
fsts
popf
out
mov
adc
xlat
pop
out
adcb
cltd
mov
popa
fisttpl
pusha
mov
cmp
push
nop
and
mov
outsl
jno
pop
popf
fwait
jae
or
test
fisubl
push
out
stos
inc
lea
call
mov
pop
rorb
pushf
test
adc
cmp
sbb
mov
lods
clc
test
or
jbe
insl
int
adc
pop
insl
mov
out
mov
insl
shrb
xor
mov
es
std
inc
sbb
push
pop
out
pop
shlb
pop
inc
mov
sbb
pop
push
mov
lahf
inc
lcall
jne
ret
sbb
mov
cltd
ja
mov
cmp
lahf
mov
ficomps
xchg
pusha
and
out
and
aaa
xchg
aaa
push
lds
or
inc
sti
pop
dec
pop
inc
mov
dec
add
div
lret
add
loope
aas
faddp
inc
pop
sbb
stos
sub
mov
jns
bound
cmp
xchg
mov
cmpsl
jge
lcall
add
add
jbe
fwait
mov
int
adc
movsl
push
mov
lret
push
mov
or
adc
push
shll
cmpsl
pop
and
mov
out
pushf
inc
or
inc
cmp
push
shrb
sub
or
mov
mov
into
in
std
icebp
ljmp
xor
inc
and
or
jge
xlat
fcomps
mov
mov
mov
sarb
lds
ja
dec
mov
int3
enter
fistpl
mov
inc
jp
lret
inc
je
ds
or
push
icebp
adc
testb
pop
aam
xor
pop
lea
xchg
mov
dec
shrl
lods
cmp
stos
push
stos
lods
pop
xor
mov
addr16
and
xchg
leave
dec
in
pop
mov
movsl
fildll
push
cmp
jp
inc
fildll
and
pop
dec
add
dec
stc
jns
aam
inc
jg
test
mov
inc
adc
push
sti
rolb
sub
xchg
popa
inc
cmc
mov
jle
add
xorl
pushl
xor
pusha
mov
sub
mov
outsl
mov
xchg
inc
sub
je
and
push
add
fs
mov
jmp
popf
stc
fcompl
mov
inc
ds
xlat
inc
inc
push
dec
iret
mov
ja
or
ss
call
lods
xchg
mov
push
cli
scas
lods
or
fwait
adc
fnstenv
push
xchg
es
and
out
xor
mov
mov
or
pop
test
fnstcw
xlat
shlb
add
fnstcw
dec
iret
cmp
pop
cmc
mov
dec
mov
imul
gs
ds
fidivrl
dec
mov
insb
or
movsb
jg
movsl
les
es
inc
pop
and
cmp
xor
bound
inc
push
shll
cvtdq2ps
or
in
les
ds
fdivl
sahf
and
arpl
xlat
push
mov
ret
xchg
mov
dec
shlb
jne
adc
jg
cmp
ss
jle
pop
jl
scas
or
das
mov
repnz
data16
cld
xor
cmpsl
push
cmp
cmp
push
mov
stc
iret
push
das
jae
sbb
pop
test
popf
sbb
mov
daa
fxch
mov
outsb
ds
cltd
mov
inc
pop
jp
mov
mov
pop
inc
mov
dec
outsl
fstl
mov
stos
fcmovnbe
add
ds
sub
ret
bound
mov
lahf
lea
jno
andb
fisubrl
dec
push
or
sub
mov
sbb
rcrb
lret
and
pop
sahf
dec
mov
and
sti
or
sbb
cmp
out
call
fdivrl
sbbb
aas
pop
aaa
mov
mov
xchg
in
repnz
mov
jbe
std
and
call
mov
in
sbb
cmpsb
lods
xchg
xchg
sarl
sbb
sub
stos
adc
inc
aas
divl
outsl
add
push
test
aas
push
jecxz
jge
repnz
mov
fstpt
dec
ss
adc
test
mov
sub
adc
mov
adc
test
pop
sub
punpcklbw
mov
insb
scas
shlb
and
pop
pushf
lcall
pusha
xor
je
push
jmp
test
sub
scas
xchg
xchg
pop
mulb
loopne
mov
dec
int3
jae
add
cmp
out
loope
and
lods
outsb
xchg
addr16
and
inc
sbb
sbb
shlb
ret
xor
into
cmc
sbb
mov
xor
cwtl
cmp
sub
xchg
xchg
pop
sub
cmp
repnz
test
sbb
fwait
in
xchg
iret
pop
xor
int3
add
test
xchg
insl
push
call
es
push
xor
sub
pop
aaa
and
add
xchg
mov
pushf
lods
xchg
mov
aaa
push
mov
mov
ja
push
mov
sub
add
shrl
push
test
testb
scas
rcrb
pop
scas
jmp
adc
sbb
mov
xchg
sbb
xchg
xor
sub
cmp
mov
jmp
jp
adc
enter
mov
lcall
addr16
out
or
pop
shll
adc
or
mov
imulb
movsl
repz
lods
mov
jne
cmp
mov
and
and
add
je
aaa
push
mov
in
push
lcall
and
xchg
iret
xchg
repnz
lret
mov
or
insl
xchg
mov
cmp
add
xchg
adc
cmpsl
in
sti
pop
negl
into
fwait
lret
dec
jl
or
in
xor
pop
push
loop
dec
mov
stos
xchg
or
lods
xchg
lret
xchg
push
add
andl
jmp
cmp
mov
fwait
push
out
and
jne
mov
adc
js,pn
jno
add
addr16
icebp
mov
jns
call
shlb
popf
fucomip
leave
mov
inc
les
and
cld
rorb
imul
stc
jae
fidivrl
cmp
fisubrl
cwtl
pop
fildll
xchg
data16
push
xor
sub
pop
ss
outsb
and
cwtl
cmp
sti
mov
dec
outsb
or
hlt
lds
xchg
jb
fucomp
sub
sub
neg
or
mov
shll
movsl
mov
fisubrs
pcmpgtd
push
cmp
into
add
pop
sbb
jge
inc
insl
and
arpl
bound
xchg
fdivr
lahf
xchg
add
pop
sub
jmp
lret
ss
in
clc
jno
icebp
cltd
clc
adc
les
arpl
insl
shrb
and
outsb
clc
fmull
ljmp
sub
fadds
mov
pushl
cwtl
mov
loope
dec
sbb
xor
xor
lods
and
sbbb
mov
dec
insb
lods
orb
cmp
inc
leave
inc
sub
and
enter
out
iret
xor
mov
push
scas
sbb
mov
pop
push
aad
test
dec
shrl
cmp
fldt
dec
shl
cmp
test
sbbb
xchg
adc
arpl
add
adc
dec
std
sbb
and
into
out
sbb
testb
rorb
mov
jno
pop
sbb
mov
test
push
jne
test
xor
inc
mov
sti
sbb
mov
sarl
das
shlb
jg
add
adc
movsb
popf
stos
and
or
cmp
into
in
pushf
dec
sbb
sub
mov
push
shll
mov
das
ret
loope
or
mov
jmp
aas
push
ret
inc
sti
xor
sub
lds
jae
sahf
cmp
sub
xor
pop
aam
scas
dec
out
incl
dec
test
pop
mov
lahf
add
and
and
cmp
mov
negb
pop
push
dec
shlb
dec
push
lods
or
ds
mov
andb
in
fdivr
xchg
scas
sti
jecxz
xor
hlt
out
xchg
push
test
mov
mov
jge
xor
cmpsl
lds
or
into
sub
mov
dec
sbb
ljmp
stos
loop
ds
enter
jle
es
loop
cmpb
dec
xchg
pop
mov
rcrb
or
movsb
ret
or
out
push
and
je
popa
jo
scas
push
pop
fbstp
mov
pop
xchg
xchg
dec
rcrb
mov
popa
or
lret
addr16
loope
in
xchg
mov
scas
dec
iret
adc
repnz
mov
kmovw
cmp
mov
pop
into
xor
stc
inc
rolb
imul
mov
mov
stc
jno
stos
add
cmp
xchg
mov
aam
sbbb
cmp
out
lret
and
pop
xor
push
pop
jne
pop
negb
inc
loopne
hlt
xor
lods
jbe
inc
into
int3
test
xor
movsb
jbe
push
push
mov
ja
push
mov
jmp
mov
in
mov
sbb
stos
test
ret
fistpl
icebp
add
jnp
out
cmpsb
push
icebp
sub
mov
dec
or
mov
mov
and
fdivs
ss
sbb
ds
cmovb
and
push
movsb
hlt
xchg
dec
out
daa
pop
xchg
mov
mov
adc
ss
ja
xchg
and
out
out
js
pusha
push
adc
xor
test
and
or
ljmp
hlt
or
inc
mov
out
add
in
out
mov
fstps
bound
push
inc
adc
push
jns
xchg
jmp
xchg
push
es
aas
outsb
mov
sbb
add
sti
xor
pushw
pop
add
lods
rcrl
dec
movsb
and
adc
outsl
jb
pop
fs
fisttps
stc
pushf
imul
dec
fbld
inc
fstps
sbb
scas
movsl
adc
and
icebp
cmp
jge
arpl
inc
adc
and
clc
orl
outsb
lods
insl
jno
push
ss
icebp
ret
push
sbb
push
push
test
insl
cs
std
or
adcl
dec
adc
jecxz
lahf
mov
push
or
dec
xchg
sub
aaa
es
or
fcompl
xchg
shrb
mov
xchg
test
sbb
out
inc
push
mov
rcrb
cmpsb
inc
xchg
lea
or
pop
icebp
enter
pop
adc
sbb
stos
jae
call
xchg
mov
fcmovnbe
push
mov
or
push
lcall
push
adc
mov
sti
mov
jmp
jmp
dec
push
sbb
stc
push
sub
mov
jb
jecxz
rep
xchg
jbe
jge
sub
push
cs
bound
test
popa
shl
movb
mov
sub
dec
aas
push
jbe
daa
adc
imul
push
add
dec
mov
dec
mov
out
adcb
es
dec
pop
incb
rorb
sbb
push
imul
loope
in
xor
or
mov
fwait
mov
jmp
mov
ret
xchg
in
outsb
push
rclb
fistl
adc
lods
in
xchg
sub
popf
xchg
push
scas
aad
movsb
cmp
icebp
adc
and
les
leave
dec
xor
scas
or
mov
xchg
mov
mov
int
add
cmp
dec
push
cmp
fdivl
mov
sbb
cmp
adc
lods
or
xchg
and
mov
add
xchg
inc
popa
stc
add
pop
mov
inc
lret
jnp,pt
pop
inc
pop
xor
cwtl
mov
dec
cmp
jne
movsb
loope
loopne
xchg
sub
sbb
fdiv
pop
mov
dec
lock
iret
nop
xchg
sbb
mov
icebp
int3
outsl
and
in
sbb
adc
icebp
adc
jl
dec
or
or
mov
xchg
push
jmp
ss
adc
orl
mov
cltd
pop
movsl
and
xlat
subb
test
aad
sub
jl
push
mov
nop
das
sahf
pop
insb
lods
rcrb
dec
jns
leave
das
daa
fwait
aaa
dec
shr
add
aad
dec
mov
jno
jae
and
sbb
mov
sbb
shll
xor
fstpt
jmp
jno
pusha
movsl
cli
les
inc
cld
push
jo
pop
je
shll
dec
stos
pop
in
xchg
mov
aad
dec
mov
pushf
dec
test
fadds
bound
xchg
sub
fnstcw
sahf
sub
or
ljmp
add
scas
and
xor
mov
lods
fcomip
push
pop
ret
test
jmp
lcall
adc
mov
dec
push
mov
push
add
js
cmpsl
jmp
clc
mov
loopne
mov
stos
pop
jnp
mov
cli
in
mov
popa
cmpsb
adc
xchg
aad
sbb
and
filds
mov
movsb
mov
dec
dec
pushl
test
sub
jne
imull
dec
lcall
les
lods
ret
nop
cmp
ja
sub
jl
cmpsl
mov
test
mov
fwait
movsl
xchg
loop
mov
mov
cmpsb
push
lcall
fistpl
sbb
pusha
inc
mov
repnz
and
imul
cmpsb
lret
fs
cmp
call
stc
test
dec
ja
in
jbe
jl
or
fdiv
xchg
ljmp
inc
mov
mov
and
add
jmp
lods
out
shlb
lcall
hlt
mov
in
loopne
out
movsb
xor
iret
imul
and
cmp
insl
cmc
shll
sbbb
xchg
gs
mov
out
ret
mov
imul
les
xchg
sbb
in
xchg
mov
lods
call
addr16
movsl
pop
and
pusha
rolb
dec
push
stos
incb
add
aad
push
je
cmc
cli
xor
subb
repz
mov
push
mov
dec
in
fiadds
movsl
dec
lods
mov
outsb
aad
sub
mov
ljmp
xor
add
repz
cwtl
pushf
int
xchg
push
cmc
adc
ror
inc
sub
test
xor
enter
lcall
nop
adc
cmpsb
gs
inc
out
adc
aam
xchg
adc
rclb
mov
pop
xchg
add
icebp
in
sub
and
sarl
repz
outsb
imul
cwtl
mov
and
ds
rorb
scas
xchg
mov
out
repnz
dec
fcmovb
int3
out
cltd
pop
or
les
je
cmp
addr16
out
xchg
sub
lcall
in
fcom
out
sub
or
add
mov
rcl
mov
pop
jo
fldt
push
jns
rol
add
dec
sub
iret
sub
test
hlt
stc
hlt
cmp
aam
arpl
mov
lret
mov
lret
lahf
inc
xchg
ror
lods
dec
inc
outsb
xchg
sbb
cmpsb
fdivs
or
add
sti
fcmovnu
dec
jnp
add
dec
aas
lds
push
push
pop
rclb
push
loop
stos
lret
add
push
inc
mov
xchg
jbe
shll
rcrl
dec
into
cmp
lods
pop
jne
or
xchg
aad
loopne
sbb
push
dec
loop
xchg
rol
sbb
or
inc
pop
ljmp
test
lea
movsb
js
das
cmpsl
xor
dec
ss
mov
xchg
jmp
subb
adc
sbb
push
scas
test
or
mov
and
out
test
aaa
out
inc
xlat
or
movsl
adc
cmc
sti
and
fiadds
cmp
mov
loope
push
movsb
xlat
fmuls
mov
cld
test
mov
mov
adc
sbb
inc
imul
lret
pop
pop
xor
in
fdivrl
add
das
pop
pop
and
mov
dec
jne
out
adc
lds
inc
cmp
out
jo
dec
fidivrs
daa
pop
push
and
add
sub
and
outsb
xchg
xchg
sbb
test
divl
push
jbe
cmp
push
fsubl
and
cmpsl
cmc
loop
jl
iret
pusha
fidivrl
aaa
pop
add
cmpl
sub
lods
arpl
movsl
xchg
mov
cmp
xchg
movsl
add
dec
daa
jecxz
inc
rolb
sbb
xchg
inc
jmp
sbb
sbbl
xor
ss
stos
outsb
gs
leave
xor
aas
lret
xchg
mov
nop
insl
dec
inc
lods
jnp
jae
or
imul
loope
push
nop
add
out
push
iret
and
jmp
or
mov
lods
xor
shr
insb
inc
repnz
push
or
iret
insb
add
ss
mov
loopne
adc
sub
jbe
or
push
push
dec
mov
imul
inc
pop
cmp
in
dec
add
jp
in
dec
or
mov
cs
and
jae
pop
dec
add
loopne
loop
testl
test
mov
xor
dec
iret
lock
out
sti
mov
outsb
adc
mov
bound
scas
insl
outsl
outsl
pop
popa
aaa
jo
push
xchg
mov
clc
sub
lds
mull
js
rcr
mov
inc
mov
enter
cmp
data16
xor
add
stc
dec
push
pop
cld
notl
mov
cmc
and
mov
cs
inc
mov
cmpsl
and
cwtl
call
outsl
and
sbb
rol
divl
std
lea
jp
gs
sub
in
fnstcw
lods
xchg
test
scas
int3
and
div
subl
dec
sbb
ret
sti
xor
and
pusha
outsb
rcll
pop
fmull
pusha
xor
test
pop
pusha
sbb
jbe
cmp
push
push
cmp
jbe
test
sbb
cltd
dec
cwtl
xchg
jo
test
test
leave
fldenv
mov
jmp
adc
ljmp
in
pop
mov
jmp
pop
fdivs
jle
jne
shl
nop
test
and
into
loopne
cmp
cmp
fadds
iret
scas
add
cmp
fcompl
xchg
xchg
pop
rcr
xchg
leave
gs
mov
sub
sbb
fldl
stos
movsl
inc
lret
push
repz
aaa
mov
and
rcrb
lods
mov
leave
push
cmp
xchg
or
add
nop
sbb
pop
sbb
fwait
sbb
push
mov
sahf
roll
jnp
movsb
mov
pop
ficompl
jle
add
mov
into
nop
adc
and
nop
bound
jb
jmp
xchg
sbbb
sbb
inc
adc
js
jle
xchg
sbb
jge
fnstcw
outsb
ja
dec
das
imul
push
push
imul
popa
loop
push
lret
mov
icebp
and
ficomps
ror
pop
mov
inc
jne
mov
or
in
xchg
xchg
call
stos
xchg
dec
jne
movsb
fdivr
cwtl
push
adc
cltd
faddl
ljmp
adc
mov
push
add
repz
and
daa
insb
scas
mov
inc
stos
arpl
mov
mov
int
mov
xchg
hlt
inc
hlt
imul
movsb
mov
aas
mov
in
out
sarl
aad
das
jnp
ret
sub
or
fldenv
aam
sahf
fsubrs
mov
adcb
pop
and
pop
test
mov
into
test
scas
sub
ja
ja
movb
je
fsubrl
jns
into
jecxz,pn
loopne
pusha
sbb
mov
ret
cmpsl
ficoml
xor
das
inc
xor
popl
inc
dec
jno
ja
das
test
inc
or
add
aam
pop
out
je
dec
aaa
test
mov
adc
mov
jp
scas
or
movsl
jle
jns
sbb
dec
and
in
xor
repnz
fisttpll
xor
inc
aam
movsb
inc
mov
and
cmp
sbb
xor
leave
pop
outsb
ret
push
mov
mov
ja
lods
adc
in
cmc
pop
adc
push
or
stc
mov
outsl
inc
arpl
and
addb
adc
clc
sbb
iret
inc
arpl
je
fildl
andnps
cmpsb
pop
jnp
xor
and
sub
ret
movl
pushf
int3
dec
cmp
and
shl
push
gs
ljmp
out
rol
and
mov
clc
cwtl
and
cmp
sbb
xlat
cmp
mov
jg
shrl
sahf
fyl2x
repnz
jl
dec
shlb
loop
push
xchg
ficompl
cld
loop
cwtl
into
mov
outsb
pusha
sub
cmp
ss
inc
and
adc
mov
mov
xlat
sti
js
popl
cwtl
lcall
es
lea
loop
out
ds
pop
and
cmpsl
lea
cld
jge
or
bound
dec
mov
int3
jo
mov
dec
pushl
sub
mov
jmp
adc
inc
and
sahf
push
test
cmp
pushf
sbb
mov
call
pop
jo
mov
add
pop
les
sbbl
fstpl
icebp
aaa
popf
pop
bound
or
std
jmp
iret
fwait
inc
add
mov
xor
pop
insl
xchg
lods
xor
rcrb
cli
push
subb
adc
int3
mov
mov
mov
xor
fwait
pop
inc
pop
adc
insb
sub
movsl
stos
and
pop
icebp
fisubs
xor
lret
dec
mov
or
in
aad
pop
shll
gs
sub
cltd
in
mov
xlat
push
fildl
inc
loop
dec
es
mov
cmpb
insl
clc
aam
stos
or
jle
out
or
jae
adc
push
leave
popf
fcompl
sub
sbb
jp
xor
xor
fnstsw
xchg
aaa
mov
fsubs
cltd
xchg
loop
and
jo,pn
loopne
pop
dec
adc
adc
fcmovnu
jns
nop
mov
scas
out
enter
les
mov
pop
dec
rorb
dec
cmp
ljmp
and
popf
inc
rcrb
jl
icebp
lds
jno
adc
js
cmp
lods
out
mov
push
fwait
push
in
outsb
mov
das
pop
mov
mov
dec
pop
adc
insb
mov
cmpsl
jg
mov
lret
add
lahf
push
in
jecxz
mov
jo
push
mov
xchg
ret
ja
pop
push
std
mov
aaa
push
mov
cwtl
fidivrl
lds
sbb
or
pop
add
inc
popa
pop
cmpb
sti
test
pusha
jecxz
sbb
xlat
imull
sbb
or
jbe
sbb
aaa
adc
sub
push
inc
outsb
ljmp
jb
ror
push
pop
adc
xchg
mov
daa
test
adc
fisttps
bound
popl
sub
mov
icebp
add
lds
push
lea
adcb
mov
into
push
push
inc
insl
xor
cli
cmp
push
lea
dec
arpl
xchg
lods
lcall
in
pop
fcompl
loop
cmp
xchg
shll
inc
hlt
push
and
pop
xor
jge
mov
cmp
xchg
bound
add
cmpsb
sub
fildll
xor
xor
aaa
pop
adc
je
int
mov
movsb
out
pop
adc
scas
nop
nop
pop
insl
sub
add
enter
mov
setne
sub
outsb
sub
sbb
mov
cwtl
cmp
add
push
ss
rorb
mov
ret
mov
lock
or
lds
pop
lods
cmpsb
xor
xor
xor
jbe
loope
cmp
inc
xchg
out
mov
ds
cs
xorb
sub
adc
jl
or
enter
mov
jbe
xchg
mov
lea
or
push
in
into
sahf
ljmp
jl
cmp
loopne
xor
sub
mov
mov
mov
jle
je
inc
shlb
pmulhuw
jbe
mov
mov
adc
xchg
das
je
and
enter
clc
fs
cmp
in
and
dec
pop
jge
flds
adcl
cmpsl
mov
dec
cmc
mov
notl
xchg
pop
lods
xchg
popf
mov
mov
mov
pop
push
insl
aaa
jle
ja
rclb
fs
test
dec
pop
xor
dec
sbb
jg
cmp
or
sti
sar
mov
scas
insl
rcr
int
jb
call
popf
sbbl
jae
adc
call
push
fsubrl
and
jp
mov
aas
pushf
pop
in
inc
mov
cmp
jae
daa
lret
loop
sti
dec
and
pop
inc
test
mov
xchg
pop
int3
arpl
cmpsb
pop
xor
mov
dec
pop
in
add
add
arpl
hlt
and
bound
pop
jecxz
xor
and
std
mov
ffreep
out
scas
xchg
and
pusha
adc
mov
sub
popf
or
push
sub
imul
mov
jge
clc
fcomps
inc
sbb
pop
and
or
xorb
scas
xor
jecxz
popa
xchg
fs
adc
adc
repnz
mov
les
sbb
mov
stos
mov
or
fs
iret
cmp
lea
stos
ss
and
loop
cs
cld
cwtl
push
mov
xchg
test
outsb
pand
xchg
jge
inc
imul
fdivrs
jmp
xchg
push
adc
outsb
push
inc
stos
sub
mov
andb
sbb
and
inc
int3
fwait
push
jle
mov
cmpsl
push
push
ficompl
mov
les
xlat
sub
je
xlat
out
mov
cmp
pop
popa
dec
push
in
fstl
mov
enter
clc
iret
push
jnp
push
jp
clc
add
rcrl
sbb
clc
int3
jg
sbb
pop
fsubrs
mul
add
adc
jg
repnz
pop
or
dec
in
jg
hlt
dec
or
xchg
adc
mov
jo
push
jmp
lods
ficomps
test
xchg
sbb
mov
jbe
cmp
sti
mov
cltd
out
outsl
stos
jmp
call
sub
fwait
loop
dec
jne
jge
int3
jno
int3
cmc
test
leave
xchg
gs
cli
repz
dec
out
fadd
fmuls
mov
push
xor
xlat
pop
xchg
imul
lret
mov
cmp
add
popf
push
ja
cmp
outsb
loope
or
mov
pushf
aas
filds
test
pop
clc
imul
sub
jmp
mov
jecxz
add
mov
push
mov
xor
pop
hlt
iret
pop
pusha
lds
js
pop
movsl
mov
lret
into
sahf
dec
lods
aaa
pusha
cwtl
mov
jl
mov
nop
push
pop
xchg
adc
push
push
fs
stos
das
inc
xor
std
idivb
and
mov
insb
sbb
pop
dec
sbb
add
jb
pop
into
pop
jecxz
cmp
mov
inc
lahf
pop
je
scas
ret
fwait
pop
push
or
ja
lds
js
out
dec
mov
aaa
xor
faddl
iret
imul
je
dec
ljmp
fmull
scas
jle
arpl
sbb
add
sbb
adcb
xor
mov
dec
pop
mov
lret
imul
fnstsw
push
movsl
sti
mull
jle
fwait
icebp
cmpsl
lret
and
popa
iret
repz
or
pop
popl
mov
sbb
iret
inc
aaa
inc
sub
push
inc
xchg
lods
ja
outsl
sub
int3
leave
mov
jns
clc
fsubr
pusha
pop
into
mov
push
ror
clc
xchg
das
das
cmp
push
lods
push
mov
clc
shll
xlat
mov
daa
add
mov
fisubl
std
or
repz
jno
scas
push
mov
and
clc
mov
adc
es
xchg
cmpsl
ror
movsl
jge
test
jle
push
dec
cmp
or
push
lods
mov
inc
mov
mov
and
adcl
dec
dec
loop
adc
fstl
add
dec
cwtl
arpl
out
jns
push
jae
fcoms
xchg
popf
scas
aaa
mov
and
lret
loopne
cmp
jg
xchg
fcmovnbe
adc
jge
jb
lahf
mov
mov
leave
aam
lret
cltd
ret
in
jbe
jle
mov
or
int
jne
mov
cmpsb
push
shll
cwtl
rolb
rcrl
leave
push
sub
fs
adc
insb
jo
outsb
and
pop
nop
push
pop
xchg
inc
fwait
sti
js
aad
and
in
sbb
mov
sub
dec
shll
pop
addl
dec
stos
iret
mov
mov
push
loopne
cmp
jmp
inc
outsb
push
push
js
nop
mov
xchg
mov
dec
fidivrl
test
sub
cmp
stos
shll
push
push
add
xchg
in
shlb
into
in
sub
mov
popf
sbb
flds
nop
mov
push
pushf
inc
ret
mov
in
pushl
int
sbb
add
sbb
mov
clc
shll
fistpll
inc
insl
sub
popa
or
cmp
inc
jbe
imul
dec
adc
leave
jns
cmp
mov
js
lcall
div
rcrb
andl
add
xlat
ljmp
faddp
insl
aas
pop
cs
in
jle
clc
jnp
adc
fcmovb
and
mov
adc
andl
push
shlb
mov
iret
adc
jno
inc
pop
or
daa
popa
adc
popa
xchg
outsb
sub
aas
push
in
das
sub
jge
dec
hlt
adc
xor
push
add
add
mov
xor
push
sub
and
data16
push
xchg
cmpsb
dec
jnp
loope
xor
sbb
pop
mov
outsl
push
lods
pop
sub
lea
mov
push
or
jg
imul
ret
les
mov
sub
push
dec
xchg
in
adc
mov
cmpsl
pusha
fwait
imul
mov
cmp
rcll
pushf
or
jmp
je
scas
stc
test
mov
nop
jb
inc
call
sub
dec
std
movsl
aas
push
or
fnstcw
jmp
inc
mov
cmp
pusha
movl
inc
fsts
out
cs
cmp
aam
cmpsb
std
and
sub
lods
movhlps
cli
gs
jle
xor
scas
fisubrs
bswap
lods
pop
cmpsb
add
sarb
mov
stos
and
out
ret
es
pop
or
out
inc
lds
fwait
and
cmp
mov
sbb
mov
and
popa
add
sbb
call
inc
inc
cmp
push
loopne
pop
lods
pop
in
in
cmc
xchg
in
in
push
test
ljmp
scas
dec
insl
fwait
test
scas
or
push
lea
xchg
push
mov
bnd
sbb
es
push
fs
insl
pop
enter
ret
pop
cwtl
jns
mov
inc
sbb
dec
int3
push
or
fildl
sub
mov
mov
pop
dec
and
int
cwtl
xchg
push
sbbl
xchg
and
adc
xchg
pop
add
push
sti
out
xor
push
jmp
movsb
outsb
orl
xchg
cs
je
xorl
out
mov
loopne
out
inc
adc
fstpl
mov
scas
adc
adc
test
ret
mov
pop
or
int3
psadbw
in
or
es
xor
or
mov
insb
hlt
inc
inc
fisttpl
inc
int3
cmp
xchg
sbb
or
xchg
jbe
out
icebp
mov
daa
clc
popa
call
in
dec
xor
in
movsb
inc
lea
pop
cmp
jmp
and
sub
sbb
icebp
les
pop
cmp
cwtl
push
jo
lds
mov
or
and
sub
lods
mov
mov
push
push
jle
shr
sbb
ljmp
int3
movsb
mov
test
loop
into
jno
nop
in
pop
es
in
push
sub
push
add
xchg
loopne
loop
xchg
popa
aaa
enter
pop
add
xor
push
pop
pop
push
sub
push
xor
jmp
ret
rcrb
in
xor
mul
inc
dec
lret
mov
and
add
mov
jp
mov
pop
adc
push
sub
jbe
cmp
sub
xchg
out
testb
lea
cmp
aad
cmp
dec
aas
and
cltd
mov
addb
imul
addl
movsl
out
xchg
iret
inc
mov
mov
lods
out
inc
sti
dec
cmp
and
scas
mov
cmp
in
ficomps
imul
xchg
movb
lret
das
clc
add
ljmp
sub
mov
mov
icebp
fs
sbb
push
mov
and
adc
mov
insl
shrl
jl
pop
call
daa
sarl
fs
pop
jae
xchg
jbe
into
xchg
pop
std
std
rorl
mov
add
roll
add
inc
inc
sub
sbb
insl
xchg
jne
push
adc
xor
mov
push
insl
inc
or
push
mov
in
fmuls
mov
pop
inc
sbb
xor
out
xor
or
push
lcall
sub
sub
mov
xor
cld
cmp
mov
xchg
cmpsb
inc
subl
inc
mov
sarb
add
stos
sarb
cwtl
movsb
insb
pushf
add
inc
or
jg
mov
add
and
out
jne
iret
imul
js
rorl
mov
adc
testb
pushf
jecxz
pop
pop
jns
adc
lds
movsl
add
loop
test
icebp
cmpsl
mov
pop
jae
dec
pop
push
shll
outsb
es
push
inc
insb
inc
std
pop
push
int
movsb
repnz
inc
scas
jne
jb
rol
ss
xchg
inc
enter
sti
pusha
push
or
ja
dec
adc
call
out
push
clc
mov
dec
notl
fisubs
adc
insb
push
cmpl
aas
dec
add
mov
push
popf
dec
mov
popa
push
and
xchg
and
mov
cwtl
fdivs
imull
mov
push
jge
adc
adc
int
adc
js
sbb
adc
fimull
in
inc
cmc
stc
vpaddsb
repz
pop
dec
xchg
xorb
dec
jecxz
in
and
push
in
pop
mov
mov
mov
cmp
clc
and
xchg
lock
je
ss
or
cmpsl
jmp
pop
lret
fcomps
xor
push
cmpsl
int
outsl
test
repnz
add
adc
lcall
stos
pop
out
imul
out
adc
mov
addb
aam
mov
cli
jmp
mov
icebp
mov
mov
mov
xor
jnp
dec
or
dec
mov
jae
das
xchg
adc
das
pop
lret
addr16
mov
cmp
scas
cltd
lock
and
in
lret
xchg
dec
pop
iret
mov
xchg
xchg
lret
imul
addr16
pop
inc
loope
loop
pop
adc
out
out
js
mov
jns
and
sbb
jle
jge
repz
aaa
mov
xor
mov
out
scas
inc
xor
sbb
aas
pusha
test
cli
scas
jnp
out
mov
push
movsl
xor
out
loopne
push
and
mov
imul
cmp
mov
sub
in
popa
mov
popl
cltd
jno
lahf
cmpsb
dec
out
sub
fidivrs
leave
fs
add
in
mov
roll
xchg
repz
rclb
out
fwait
mov
add
sbb
test
push
adc
rcll
jp
mov
nop
dec
sub
mov
out
gs
leave
mov
or
pop
and
out
adc
jp
xchg
xor
mov
add
sub
jmp
adc
push
aam
daa
nop
shrb
idiv
mov
jl
int3
push
mov
inc
add
push
or
inc
lret
dec
les
mov
jae
out
dec
sti
cmp
cwtl
pop
jl
sbb
out
inc
je
jecxz
xchg
mov
add
pop
adc
call
xor
loop
movsl
xchg
movsb
loope
addb
mov
pop
out
sbb
fst
hlt
data16
daa
lcall
cmp
push
adc
dec
inc
jle
jle
test
ja
mov
call
loope
stos
mov
xor
mulb
iret
pushf
sbb
push
xchg
xor
pop
xchg
lock
cmpsb
pop
dec
test
dec
insl
fcmovne
xor
cmpsl
sbb
jge
aas
push
xor
mov
enter
adc
cmp
loop
rol
out
xor
jl
mov
mov
mov
push
jns
out
insb
or
nop
lret
lock
andl
imul
ljmp
pop
and
jae
lahf
mov
add
mov
ret
shrb
add
or
sarb
jo
pop
fucomp
inc
stos
pcmpgtw
jp
mov
mov
loope
les
pop
add
dec
xchg
pop
adc
es
repnz
adc
sub
xchg
pop
in
xchg
mov
popa
push
neg
xorb
inc
aad
mov
test
sub
sbb
aam
jge
shl
out
test
in
scas
fstpl
insl
lret
les
out
sbb
sbb
sti
jno
jmp
fcompl
pop
add
lret
sahf
aaa
test
pop
add
sub
dec
push
jnp
mov
xor
xchg
iret
pop
fs
repz
aas
movsb
pop
or
sub
fisubrs
dec
cmovs
xor
push
cmp
dec
or
mov
or
cld
lds
aam
mov
pop
bound
orl
ficomps
inc
into
or
mov
movsb
or
lods
cli
loop
push
dec
pop
cmp
sbb
pop
pop
popf
in
lea
mov
popf
or
out
lea
jne
stos
cli
sub
enter
aas
or
ds
orb
cmp
xbegin
in
js
bound
aad
adc
aad
lahf
cmp
cmpsl
mov
lock
push
fcmovnu
xor
call
loope
xor
pop
pop
lds
inc
push
push
hlt
fisubrs
ret
sub
jge
xchg
fldl
inc
aas
stos
inc
mov
push
inc
test
mov
pop
pop
out
pop
aad
pop
pop
lock
or
imul
mov
xchg
ja
lods
and
xlat
cmc
out
push
lods
lcall
mov
mov
cmp
mov
repnz
and
fdivrl
sbb
inc
sbb
and
in
addr16
mov
mov
mov
enter
and
insl
and
fcmovnbe
push
mov
pop
push
into
negb
cmpsb
lods
fists
jmp
gs
std
cwtl
call
mov
fdivrs
fs
mov
fisttps
pop
cld
mov
dec
adc
jge
cltd
out
jecxz
pop
das
es
xchg
out
mov
add
push
inc
push
cmp
lret
je
jl
sbb
mov
popl
push
cltd
xor
inc
xor
sub
das
daa
sbb
out
and
mov
dec
outsl
jno
mov
mov
jno
and
xlat
add
and
xchg
lcall
push
jae
scas
and
lods
stc
pop
and
pop
sbb
sbbb
add
notb
cmp
ja
bound
jl
data16
xor
or
jae
test
sti
adc
daa
xchg
out
sub
xchg
cmpsb
aas
or
adc
mov
pushf
mov
jecxz
movl
mov
out
push
mov
sub
add
dec
adc
je
and
pop
add
enter
or
aaa
gs
das
addr16
mov
aaa
push
pop
sub
cld
and
push
loopne
dec
scas
loopne
xchg
cli
xchg
fldl
sbbb
test
lds
push
mov
ret
sbb
jnp
xor
test
es
repnz
dec
cmpsl
pusha
jo
xchg
ljmp
aas
cmp
mov
xor
jg
xor
mov
xor
sti
cmp
mov
mov
and
stos
adc
ficomps
xor
out
mov
es
gs
cmpsb
mov
xor
out
push
das
stos
pop
fbld
mov
pop
sub
inc
jns
add
push
call
pushf
cli
and
xchg
fisubrs
mov
fidivl
dec
aas
mov
xchg
push
push
pop
cmp
mov
xchg
inc
cwtl
mov
cmp
int
sub
fdivrs
xor
mov
out
push
xchg
adc
hlt
cmp
and
push
mov
lea
lret
jl
xor
lret
pop
daa
cmpl
out
decb
mov
cmp
pop
sbb
daa
mov
cmp
jo
pop
imul
out
push
pushf
jb
outsl
std
stos
jmp
clc
xchg
inc
mov
xchg
sub
cmp
add
mov
data16
inc
ljmp
jo
xor
inc
inc
jle
out
xor
adc
mov
ja
pop
into
jno
in
cmp
dec
push
jb
push
cmpsl
and
xor
in
movsb
ret
in
push
orb
mov
mov
push
mov
into
and
mov
inc
data16
jl
das
jns
mov
adc
pop
ljmp
push
jbe
je
ret
in
and
rcll
jge
mov
dec
dec
sahf
sbbl
or
lods
jp
loope
adc
pusha
rcrb
sub
pop
adc
inc
mov
inc
inc
ds
xchg
cmpsb
int3
std
pop
xor
xor
dec
and
jp
mov
icebp
jge
mov
inc
mov
out
or
inc
psrlq
xor
sbb
cmp
jp
pushf
sub
dec
fcmovb
lret
jmp
mov
sbb
push
mov
sahf
cmp
repnz
pop
fisubrl
xchg
lods
push
xchg
and
lret
sub
jge
sbb
and
dec
jp
pop
test
aaa
add
decb
cmp
lds
cmp
dec
pop
test
sub
cld
arpl
mov
pop
shrl
sub
inc
mull
mov
and
pop
sub
jns
mov
or
mov
in
and
incb
jecxz
in
jecxz
cltd
lods
cmp
dec
jle
je
inc
pop
jmp
imul
sbb
inc
fcomi
call
adc
mov
adc
adc
xor
or
adc
test
fdivl
lcall
cmp
cmpsl
fdivrs
jmp
ficoms
loopne,pt
jle
and
mov
inc
mov
jmp
aaa
or
add
mov
inc
stos
push
fistl
hlt
add
xchg
push
int3
in
outsl
adc
xchg
aaa
jg
sti
insl
dec
je
test
mov
xchg
mov
and
cmc
imul
test
xor
loope
mov
mov
push
push
icebp
xchg
xor
pop
cmp
mov
outsb
dec
push
dec
mov
lret
in
ja
imul
sub
aas
xor
jb
push
cmp
fmul
xor
pop
pop
lahf
jmp
sub
outsl
jp
pushf
lock
iret
pop
dec
imul
jae
mov
inc
cltd
imul
ljmp
mov
xchg
arpl
shll
pop
test
jg
or
inc
ljmp
stc
mov
cmp
sub
or
js
inc
dec
sbb
popa
xlat
fiaddl
push
iret
sbb
imul
dec
pop
movb
pop
lcall
cmpsb
cmp
outsb
enter
ret
xor
bound
dec
and
jp
add
mov
inc
fildl
lahf
or
xchg
leave
loope,pn
mov
cmp
aas
jno
cmc
dec
jge
in
cmp
mov
push
movsl
faddl
and
push
mov
sbbl
sub
cmp
push
add
aaa
arpl
xor
mov
xor
dec
sahf
lahf
push
insb
push
push
push
mov
dec
mov
pop
or
loopne
sahf
fcoml
xchg
cmc
add
stos
adc
jg
sbb
cmpsl
repz
mov
or
ljmp
lods
and
je
xchg
jbe
or
inc
js
inc
push
stos
jno
clc
int
jbe
jno
pop
pop
lahf
icebp
and
scas
fnstsw
repnz
stos
pop
inc
lds
lods
cmp
test
rcrb
insl
pushw
stos
xor
cmc
inc
cmc
pop
and
ror
aad
jo
inc
sub
rclb
mov
sub
in
mov
dec
fcom
cmpsl
das
xchg
out
loop
jmp
jo
mov
cmpl
jne
loope
in
mov
lock
sbbl
in
xchg
out
jmp
dec
loop
push
lret
jp
imul
mov
lock
mov
add
testb
fiadds
dec
out
pushf
icebp
or
xchg
in
push
push
mov
xchg
testl
lahf
mov
ja
lcall
in
inc
in
pop
outsb
aaa
sahf
and
cltd
data16
mov
rcrl
addl
lea
or
mov
insb
das
in
jp
cmpsl
sahf
push
cmpsb
cmp
jno
mov
repnz
loopne,pn
fadds
fistl
xor
imul
adc
mov
pop
dec
jne
xor
decb
inc
and
mov
sub
mov
repz
push
xor
jae
rolb
and
inc
cwtl
jmp
lret
loopne
arpl
jg
adc
scas
out
mov
dec
xchg
mov
ljmp
insl
stos
js
push
mov
int3
sub
mov
pop
sub
mov
xchg
pop
mov
repz
test
mov
bound
add
pop
jne
mov
xchg
adc
inc
inc
mov
fsubrl
xor
iret
pushf
cmc
fsubrs
mov
inc
lcall
test
xor
mov
mov
lds
mov
mov
jl
dec
sub
in
jge
cmp
stc
push
mov
pushf
mov
repnz
in
push
jmp
lods
lock
and
push
or
and
stos
je
dec
add
fimuls
repnz
mov
jle
imul
xor
cmp
mov
sbbl
push
jl
popa
cli
ja
mov
scas
fstpt
mov
mov
xchg
fstpt
ja
add
aam
lret
arpl
pop
sub
pop
push
push
cmp
fwait
in
cmp
push
popf
cmp
sub
rolb
imulb
xor
jp
clc
mov
ja
mov
mov
xchg
dec
cmpsb
mov
ret
mov
mov
add
negl
jbe
aaa
mov
arpl
jmp
out
sub
mov
or
dec
insl
add
lcall
xchg
sub
adc
inc
cmp
cmp
push
outsl
xchg
adc
movsl
pop
mov
and
fdivs
ljmp
jo
add
inc
sbb
sbb
adc
psrlq
push
mov
sbb
add
pusha
je
lcall
pop
jmp
sti
jns
sbb
push
hlt
hlt
pusha
test
call
cmpsl
ret
jae
loopne
les
inc
popa
xor
push
inc
mov
cltd
dec
testl
mov
ds
xorl
push
decl
notb
or
ja
mov
mov
inc
xchg
add
pop
repnz
lods
data16
rolb
pop
pushf
push
sbb
push
jnp
rcl
jnp
data16
fistpl
jbe
push
daa
jle
or
daa
jle
test
xchg
in
lret
cld
outsb
xor
movsl
mov
inc
cltd
in
adc
out
xchg
cmpsb
xchg
cs
push
xchg
call
mov
pop
lods
xchg
or
xor
mov
loopw
mov
addr16
popa
inc
sbb
scas
pop
xor
mov
pop
adc
pop
fistpl
js
push
add
clc
shll
xchg
into
mov
ret
cltd
pop
jge
pop
jg
mov
add
in
cmpsb
inc
inc
inc
and
loope
push
and
sbb
push
not
rcrb
insl
fdivs
pop
aaa
das
xor
sbb
adc
addr16
ja
adc
xchg
jecxz
mov
push
inc
test
xor
mov
mov
mov
imul
cmp
ret
aas
xchg
repnz
dec
pop
mov
cmp
mov
adc
stos
les
push
sub
dec
arpl
add
adc
cmp
rol
xchg
bound
mov
ds
xchg
inc
mov
dec
js
lods
icebp
addb
adc
pop
out
jle
xchg
dec
cmp
inc
sahf
out
mov
sti
mov
negb
mov
xchg
sub
sub
push
rclb
xlat
xor
inc
sub
popf
add
and
sub
dec
cmp
neg
movsb
mov
sbbb
inc
xor
out
push
xchg
shrb
gs
mov
jl
mov
jecxz
lahf
fs
int3
in
mov
cmpb
jle
int
cmp
adc
mov
or
cmpsl
sub
xor
frstor
push
dec
sub
hlt
inc
jbe
xlat
pop
negb
adc
mov
sbb
rcrl
addb
dec
mov
mov
dec
outsb
daa
ljmp
inc
xchg
cs
adc
dec
xor
sub
jg
lahf
mov
shll
aaa
scas
xor
sub
lret
test
xchg
mov
jb
cmpsl
add
push
repz
pushf
jle
dec
add
ljmp
inc
xor
push
and
movl
mov
shrl
xor
cmp
sub
gs
out
mov
fsubp
in
sub
jno
pushl
inc
xor
nop
fldpi
data16
lods
pop
popf
test
mov
jb
lds
xchg
cli
stc
jns
inc
loope
out
test
orl
xlat
push
adc
pop
lods
je
data16
sub
sub
jmp
add
mov
push
mov
mov
mov
jnp
jp
je
mov
or
pop
mov
mov
inc
lahf
sahf
xchg
cltd
icebp
stos
scas
adc
mov
pop
ljmp
add
jle
pop
add
mov
cmp
inc
pusha
pop
sub
push
cmc
add
les
dec
mov
or
dec
push
cmp
pop
push
cmc
push
adc
add
aam
scas
and
dec
sbb
mov
pushf
and
push
mov
pop
movsl
or
push
out
pop
mov
aaa
rcrl
into
dec
mov
sbb
or
jo
cmpsb
jbe
jae
jp
add
push
push
jge
movsb
pop
adc
stc
mov
ss
dec
aam
fildl
cmp
addb
test
jg
sti
mov
jmp
loopne
fdivrs
mov
mov
in
sti
or
xlat
xchg
lret
jmp
mov
pop
xor
push
cmp
jae
scas
pop
into
adc
arpl
jbe
mov
mov
push
mov
fs
mov
rol
inc
je
jb
out
jne
gs
out
shrb
push
pop
and
adc
sbb
jg
xor
jae
inc
push
fsubl
les
lea
cmpb
sub
ss
add
sub
imul
add
dec
loope
imul
jmp
or
adc
push
lods
add
push
mov
stos
dec
ljmp
push
cmpsl
sbb
sub
pop
xchg
dec
loopne
lock
ds
decl
clc
xorl
mov
lods
inc
push
sub
inc
scas
popa
xchg
imul
shrl
pop
rcll
adc
sbb
xchg
shll
pop
adc
cmp
or
daa
cld
mov
jns
stos
mov
in
mov
cmp
xchg
insl
and
hlt
ret
insl
arpl
dec
fwait
jl
sbb
xlat
je
inc
jae
sub
fiaddl
arpl
mov
or
and
shll
mov
das
insl
adc
shlb
add
inc
adc
in
cltd
dec
pop
pop
outsl
add
je
pusha
pop
lock
pop
mov
fsubs
sub
int3
loope
adc
cmp
or
cmpsb
mov
mov
icebp
jnp
or
into
pop
mov
mov
clc
pop
ljmp
sub
xchg
sub
cmpsb
fiaddl
and
ret
mov
pop
cmp
push
jl
inc
test
jb
loop
xor
shll
and
les
jle
leave
mov
pop
test
adc
or
pop
scas
mov
in
test
ret
stos
mov
push
loopne
dec
shll
testb
into
andl
fiadds
int
lret
adc
movsl
jbe
subl
ss
lock
fwait
repnz
out
xchg
outsb
repnz
faddl
adc
rcr
push
das
dec
rorb
stc
out
jecxz
test
arpl
arpl
repz
fwait
jnp
inc
lahf
pop
insb
mov
sub
or
stos
hlt
mov
int3
pop
test
cmc
xchg
aad
clc
inc
mov
inc
jae
lret
repz
push
dec
ss
push
add
in
pop
in
cmpsb
dec
mov
loop
lcall
rcl
mov
push
adc
loope
out
sarl
push
xchg
xchg
adcl
dec
js
std
inc
shrb
outsl
push
xor
fldcw
xor
sub
mov
sbb
jb
sar
fdivp
outsl
nop
aaa
xor
mov
push
jns
in
int
adc
shld
stc
fs
jno
cld
lret
cmp
push
test
adc
push
push
repnz
sbb
push
mov
xor
test
mov
cli
mov
popa
and
cmpsb
lods
roll
popf
pop
cmpsl
mov
xchg
outsl
and
in
sub
and
icebp
cmp
andb
test
sub
pusha
movl
xor
jne
lock
es
or
rcl
mov
aam
daa
xor
daa
pop
mov
cmpsl
fs
pop
sub
jo
hlt
roll
inc
leave
xchg
push
hlt
scas
mov
dec
int
insl
addl
aas
iret
pop
and
dec
lcall
mov
rcll
mov
in
hlt
lret
fdiv
int3
jl
call
xchg
fnstcw
mov
cmp
inc
mov
xchg
xchg
aaa
cs
push
push
fimuls
inc
int3
movsl
jmp
xor
pop
test
and
and
mov
jle
pop
push
fwait
sub
cmp
push
jle
cwtl
rorl
sub
inc
ss
imul
mov
shll
scas
bswap
mov
test
and
test
pop
insl
nop
leave
ror
inc
dec
mov
add
fistpll
movsl
jae
push
lock
jg
aad
dec
ljmp
sarl
fisubrs
or
ss
roll
pop
mov
cmpsl
outsl
jecxz
fcom
sub
fnstenv
inc
es
fstpl
popa
ficompl
push
jnp
leave
pop
inc
mov
jbe
ljmp
mov
test
pushf
xchg
pop
xchg
add
add
jbe
xchg
jge
imul
inc
xor
sbb
shrb
es
pop
mov
jo
xor
cmp
dec
mov
xchg
shll
lock
cmp
hlt
and
cld
dec
mov
and
and
out
xor
cld
stc
mov
icebp
pop
jbe
cmpsl
add
jnp
outsb
cmc
movsl
out
mov
test
adcb
lea
jne
stos
mov
in
and
mov
lret
dec
stos
cwtl
aas
in
fwait
ljmp
out
sbb
xor
dec
lds
pop
mov
outsl
sub
aas
ds
out
add
jmp
stos
std
cmp
int
xchg
lahf
push
sub
loope
in
dec
mov
inc
into
and
hlt
mov
cmp
xchg
cli
sbbl
xchg
test
mov
sbb
aam
fs
outsb
xorl
mov
cmpsb
cmpsb
add
in
inc
and
sub
fisubl
and
jmp
dec
pop
test
inc
imul
repz
cmp
add
insb
push
mov
dec
xchg
je
pop
adc
lret
loopne
dec
loope
xchg
mov
lahf
call
enter
sbb
data16
and
in
mov
lahf
movsb
push
fwait
xchg
leave
xlat
lret
mov
insb
outsb
scas
hlt
in
addb
xlat
cld
push
cmp
into
add
ret
pop
rcrb
push
popf
and
fwait
pop
movsb
aas
jecxz
xor
push
dec
xor
add
jno
jo
sub
data16
jecxz
rcrl
push
es
mov
leave
shlb
pusha
mov
shll
cld
in
pop
daa
jp
adc
mov
jge
subl
adc
daa
push
ljmp
int3
bound
mov
bound
jo
mov
xchg
sbb
je
xchg
adcl
push
sbb
or
jne
push
mov
add
mov
rol
lods
jno
xchg
inc
inc
cs
push
es
call
push
and
rcr
adcb
jne
daa
test
shl
xchg
outsl
sbb
sti
pop
insb
push
push
pop
addr16
and
aad
xor
fistpll
popa
jp
inc
je
bound
gs
xor
addr16
out
or
out
out
mov
pop
into
ss
mov
imul
jne
ret
movb
push
cld
in
xchg
inc
ficoml
out
stos
push
mov
inc
push
cmp
or
push
xchg
in
arpl
push
jno
xchg
jp
jno
fists
dec
mov
inc
or
add
dec
add
sarl
pop
xor
ja
jecxz
xchg
mov
rol
repnz
shrb
adc
and
fdiv
rcrb
addr16
idivl
orb
popf
mov
rclb
scas
andl
add
cmc
mov
mov
popf
sub
mov
jl
adc
inc
iret
push
jl
and
xchg
ljmp
adc
add
jmp
test
adc
mov
lods
xor
in
inc
jne
adc
js
mov
pop
es
popf
dec
push
mov
cli
fisttps
jmp
lods
xor
mov
shlb
sti
sub
mov
sarl
hlt
mov
xorb
addl
dec
mov
scas
mov
les
push
ljmp
mov
xchg
es
nop
daa
mov
fstpt
mov
lods
pop
adc
dec
ljmp
xchg
dec
lea
inc
je
inc
xchg
mov
push
push
jne
bnd
dec
jecxz
lret
pop
das
pop
dec
mov
xchg
jecxz
jmp
sub
and
add
icebp
dec
shlb
nop
aad
add
jnp
and
inc
mov
fstpl
into
cmc
push
dec
dec
pop
js
movsl
rolb
adc
mov
cld
ja
adc
push
repnz
sti
add
in
fisubl
inc
xchg
cmp
or
out
sbb
sar
lret
popf
mov
test
loop
icebp
xor
mov
lods
ss
push
mov
dec
fucom
push
out
cmp
push
insb
pop
aam
adc
dec
cmc
ljmp
xchg
and
pop
dec
subb
xor
sti
or
sub
out
fucomi
inc
push
addr16
lock
dec
jecxz
mov
je
and
adc
pop
push
dec
push
push
mov
sti
mov
mov
jae
push
push
xor
xchg
xchg
repnz
fistpll
sbb
add
mov
fbld
jp
js
add
dec
out
sar
push
cs
enter
clc
mov
mov
orl
cs
fildll
loope
inc
daa
aam
gs
je
jb
mov
jmp
cmp
ffree
cmp
cwtl
xchg
xor
pop
les
fadds
out
out
inc
mov
xlat
mov
cmp
jnp
cld
aad
mov
or
cwtl
sar
pop
fldt
pop
das
push
push
call
push
in
jp
test
xchg
outsl
dec
mov
inc
cmc
push
cmpsb
cmp
pop
pop
cmp
mov
pop
lods
pop
fsts
cltd
pop
out
or
push
sbb
imul
add
xor
xchg
test
test
mov
sarb
cmpsl
aaa
add
lds
sbb
sbb
or
sbb
int
rorb
dec
js
sub
cmc
cmc
cltd
xchg
sub
jb
xlat
arpl
stos
mov
pop
insb
sbb
sbb
outsb
fidivrs
je
xchg
mov
jg
inc
cmpsb
sub
jmp
xchg
jne
sub
les
ss
xchg
mov
into
pushf
pusha
push
jle
mov
or
pusha
outsb
lods
rcll
add
jmp
xchg
add
mov
int3
sbb
jl
ret
ret
cmpsb
mov
mov
in
push
jecxz
dec
mov
mov
ss
mov
scas
inc
call
lret
push
sub
push
dec
fsts
sbb
jae
ljmp
scas
mov
mov
call
outsl
fs
leave
sbb
jne
jmp
jp,pn
jno
xchg
jbe
xchg
push
hlt
loope
adc
xchg
push
sub
cmp
mov
inc
outsl
sahf
ret
inc
jl
mov
ljmp
es
cmp
or
popa
stc
mov
cmp
adc
adc
inc
leave
inc
pop
dec
out
pop
scas
cli
or
stos
in
lock
nop
out
push
fdiv
cli
add
push
lret
dec
adc
sbb
or
pop
mov
push
pop
aas
outsb
dec
push
lret
fildl
and
aaa
lods
movsl
jno
xchg
je
stc
pusha
xor
dec
imul
mov
repnz
pushf
or
into
inc
jnp
pushf
push
out
dec
lds
dec
out
jns
xchg
xor
xor
jbe
test
sbb
mov
addl
sbb
arpl
add
or
lcall
fcmovne
sub
scas
addr16
hlt
je
jg
and
lods
mov
sar
arpl
out
adc
gs
adc
std
ret
mov
in
in
outsl
ljmp
xchg
cli
cmp
mov
pop
inc
and
imul
out
cmp
cmp
pop
and
pop
mov
jne
sub
fmuls
dec
mov
pop
jnp
aas
movsl
cwtl
dec
jp
hlt
push
sbb
loopne
or
pop
in
add
push
icebp
iret
mov
ds
repz
mov
inc
pop
sti
add
stc
dec
fimuls
xchg
adc
cmp
aas
xor
or
lcall
psubq
ljmp
clc
jae
dec
repnz
xchg
jne
and
push
pusha
test
and
pop
mov
fsubp
push
dec
enter
xchg
ss
mov
add
in
or
outsb
mov
cld
xchg
les
sbb
mov
lods
dec
shl
in
nop
pop
add
add
data16
and
push
dec
std
je
lahf
add
push
xor
jl
sbb
mov
shlb
push
divl
fisubl
and
or
pushf
das
push
outsb
mov
iret
push
push
add
mov
adc
adc
xor
cmp
aad
popa
test
outsb
push
push
push
mov
mov
mov
scas
xor
mov
testb
stos
xlat
jl
bound
xchg
ja
cmpsb
popa
mov
dec
jno
sub
cwtl
loopne
fldcw
xor
testl
aas
dec
sub
cltd
xor
mov
mov
mov
mov
pop
movsb
cwtl
fidivrs
sub
mov
push
out
insb
arpl
dec
pop
push
jmp
push
repnz
jo
sub
shl
or
mov
insl
xchg
and
and
adc
adc
mov
notb
cmp
and
jl
xchg
inc
sar
int
ljmp
dec
hlt
out
push
adc
clc
jp
cwtl
or
mov
and
mov
pop
jne
jle
inc
jge
add
call
rol
test
ret
adc
mov
xchg
cmp
insb
inc
hlt
lea
jae
loop
mov
push
sub
mov
addl
inc
mov
je
movsl
scas
popf
push
inc
and
pop
mov
das
in
pop
pusha
xchg
mov
testb
adc
cltd
dec
mov
ret
les
insb
sti
and
jbe
push
jae
pop
cvtps2pi
jge
pop
push
stos
adc
push
rorl
mov
xchg
inc
sbb
cwtl
std
fstps
and
sub
or
out
add
pop
jnp
mov
pop
xor
mov
call
popa
sub
cmp
gs
mov
lahf
xchg
and
inc
outsb
adc
jnp
push
dec
mov
and
in
lds
push
jnp
add
push
jmp
sti
mov
icebp
inc
fisubs
test
xchg
push
aam
mov
cmc
sbb
fidivs
sbb
test
test
ret
daa
cld
sub
stos
movsb
cmp
int3
push
lods
lds
mov
xchg
mov
inc
sub
push
jmp
mov
jg
movl
pop
jnp
dec
test
sahf
pop
push
xlat
sbb
xchg
xchg
mov
sbbb
adc
cmc
out
add
fmuls
popa
xchg
inc
movsb
in
sub
and
and
sub
xchg
in
int3
sub
mov
jno
inc
scas
rcrb
cmpsb
sub
repz
push
xchg
addr16
xchg
es
or
jle
cwtl
cmp
fs
fstp
sarl
sbbb
xcrypt-ofb
jle
sub
aad
outsl
sarl
clc
jg
cld
stos
mov
and
sbb
fiaddl
testb
call
sbb
arpl
xchg
mov
jne
jecxz
add
inc
pop
mov
scas
xchg
test
out
fcoml
stos
push
xchg
test
cs
pop
cmpsl
in
xor
jo
mov
into
adcb
mov
repnz
xor
pop
test
adc
les
mov
lcall
test
adc
adc
mov
jo
fadd
inc
push
inc
std
and
xor
fs
je
fcmovnb
push
xchg
xor
xlat
and
stos
imull
out
adc
fadd
popa
jbe
cmp
fildll
push
xchg
inc
test
setl
sbb
movl
dec
pop
sti
cmc
jbe
out
fildl
pop
pop
bound
loope
scas
xchg
cmpsl
js
add
addr16
lock
imul
andl
lods
mov
subl
or
jle
cwtl
inc
stc
sbb
inc
push
or
mov
pop
imull
xchg
sub
iret
sbb
xor
or
fmull
push
dec
sub
ret
mov
dec
cltd
pop
lods
and
lds
adc
in
imulb
in
leave
fcmovnbe
icebp
jb
mov
jnp
sub
dec
jl
mov
loope
push
orl
xchg
push
outsb
lock
and
jns
jae
or
je
xor
mov
cmp
xor
insb
dec
popa
fsubl
stos
push
movsl
mov
xor
lcall
pop
rorb
dec
mov
xlat
lods
mov
testb
pop
jne
ror
in
scas
lock
push
stos
sbb
pop
mov
popf
sbbb
or
scas
fs
push
nop
sub
cmp
mov
jns
or
scas
jne
out
int
sbb
dec
dec
inc
mov
dec
xchg
movsl
stos
inc
add
ljmp
xor
pop
mov
inc
adc
dec
sbb
pop
adc
sbb
jno
mov
mov
insb
in
cmpsb
testl
and
sbb
add
sbb
repnz
dec
push
roll
loop
stos
pop
pop
mov
jmp
outsb
pop
push
cmpsl
shr
add
dec
js
adc
jecxz
dec
push
xor
ror
sti
iret
mov
or
mov
cmp
test
pop
inc
xchg
mov
popf
jno
fwait
jno
adc
call
into
push
popa
mov
xor
mov
add
fwait
sahf
pop
xlat
ljmp
pushf
push
sahf
insl
call
gs
fisubrs
lods
add
or
lcall
bound
mulb
sbb
in
or
xchg
add
mov
leave
ljmp
leave
mov
loopne
lahf
test
jae
loop
adc
xchg
js
fstps
dec
push
push
xchg
test
xchg
and
dec
cs
xor
dec
andl
in
enter
jns
sub
or
mov
call
mov
clc
repnz
sub
cli
push
mov
jae
test
imul
cltd
movsl
jp,pt
in
dec
sbb
movsl
jno
adc
jge
sbb
inc
mov
fimull
mov
lcall
testl
dec
mov
outsl
dec
in
lods
pop
mov
fnstcw
repnz
sub
into
adc
loope
xorl
sub
xchg
xchg
test
test
mov
les
fsubrs
scas
mov
test
loope
and
mov
pushf
and
inc
ficompl
test
bound
mov
lds
mov
mov
push
aad
mov
lcall
jo
adc
mov
push
outsl
ret
xchg
add
rorb
sub
fidivrs
fldt
cmp
mov
inc
push
push
inc
loop
add
cmp
aad
mov
mov
ljmp
jl
dec
popa
adc
adc
loopne
jo
ljmp
mov
fisubs
fs
idiv
mov
xor
jmp
rolb
xchg
loop
loopne
mov
je
mov
icebp
xchg
shrb
add
lea
dec
shll
cmp
mulb
inc
sbb
js
ret
test
outsl
lret
loopne
addr16
enter
stc
into
push
test
mov
push
lcall
sbb
loope
js
sti
xlat
gs
bound
imul
jnp
xchg
inc
pushf
f2xm1
sub
sbb
or
cmp
mov
sar
xor
sbb
push
lcall
jo
mov
mov
stos
mov
cwtl
test
scas
out
or
push
or
or
xchg
addr16
sub
inc
popl
jo
jbe
imul
cmp
mov
out
mov
cli
jno
inc
xchg
insb
jmp
out
push
out
pop
enter
les
stc
cmpsb
negb
int3
jmp
fstps
push
adc
xor
push
xchg
jo
dec
push
fwait
ds
xchg
jo
movsb
push
out
pop
jo
and
dec
leave
sahf
dec
sysexit
push
movsl
cltd
nop
ja
sbb
xchg
int3
bound
xchg
lret
pusha
add
xor
xchg
sub
popf
div
pop
mov
lahf
pop
mov
repz
pushf
dec
int
jnp
out
out
mov
or
xchg
mov
mov
das
xor
ja
test
push
pusha
hlt
mov
ljmp
mov
sahf
mov
mov
aaa
xor
rcll
sbb
mov
adc
mov
shll
stc
mov
out
int
movsb
in
xchg
lahf
push
xchg
scas
dec
sbb
sub
mov
dec
cltd
into
or
aam
mov
das
push
cld
lahf
pop
cld
cmp
lret
lahf
lods
dec
dec
jge
scas
xchg
jle
push
push
dec
cltd
repz
mov
cmp
mov
add
test
sbb
adc
icebp
test
mov
xchg
popf
scas
fiaddl
push
mov
cmp
imul
xor
mov
push
dec
xor
dec
in
sub
bswap
loope
and
repz
pop
push
and
subb
xchg
cltd
incl
or
cwtl
jle
fisubl
repz
add
cmc
sub
cwtl
ror
sub
out
fmuls
pop
xchg
std
lcall
inc
roll
dec
add
mov
insl
cli
sub
mov
xlat
mov
sbb
daa
movsb
xchg
fdivp
push
fdivs
jno
xchg
xor
inc
mov
lret
jl
or
cld
sbb
push
cmc
fists
insl
cltd
ret
sbb
mov
add
adc
bswap
add
test
dec
push
xchg
outsl
lea
push
ss
repz
cmp
shlb
and
push
call
ret
dec
sub
mov
pop
dec
cli
testl
push
lods
fsub
ret
icebp
inc
mov
inc
mov
popa
xchg
outsb
mov
insl
clc
mov
push
mov
mov
or
mov
add
pop
gs
xchg
fbld
dec
add
inc
icebp
stc
iret
cmpsb
xor
out
pop
lea
push
stc
ljmp
bound
insb
sub
cld
lret
mov
test
fwait
mov
or
pop
mov
mov
ljmp
cmp
iret
adc
sub
cmp
adcl
lea
jl
les
ja
aad
jp
cmp
dec
push
sub
cmp
cmp
int3
adc
pop
inc
stos
shll
xchg
dec
lret
push
lock
lds
or
gs
push
popa
jp
test
pop
dec
dec
aaa
loope
popa
scas
clc
sub
sbb
dec
lcall
push
inc
xlat
pop
add
or
dec
jno
cwtl
sbb
xor
mov
sub
sahf
sbb
pop
sahf
iret
dec
cmp
leave
push
pop
mov
ljmp
jae
mov
mov
fldl
hlt
sub
jne
mov
aaa
outsl
mov
xchg
scas
insl
mov
nop
mov
in
pop
sub
loope
shll
aaa
adc
fdivrs
test
sbb
sti
cld
lahf
scas
sahf
cwtl
mov
jmp
adc
mov
std
push
mov
popa
ljmp
inc
xchg
in
mov
push
adc
push
mov
mov
jle
or
cmp
or
pslld
int3
jge
mov
js
mov
js
in
cld
mov
sbb
and
mov
pop
das
mov
and
mov
and
mov
fsubrp
in
scas
repnz
adc
imul
dec
inc
fstpt
jp
lahf
fwait
xchg
xor
xor
lods
adc
push
jbe
rorl
pop
fisubrl
mov
orl
leave
push
mov
sbbl
dec
dec
jecxz
jbe
mov
lret
push
arpl
hlt
stos
xchg
movsl
or
xor
mov
sbb
push
inc
or
pushf
sub
pop
mov
jnp
test
xchg
ret
shlb
ret
inc
loope
cltd
lahf
sbb
insb
adc
movsb
sub
pop
fs
movsb
outsb
call
scas
xchg
jmp
lret
test
jp
add
dec
add
and
fldt
aaa
cmp
test
and
ret
call
jb
sbb
cmp
sub
or
scas
cmp
dec
push
mov
dec
add
push
pop
push
lahf
jns
stos
or
jbe
or
adc
int
pop
dec
fnstenv
pop
or
testl
sbb
mov
xor
dec
mov
pop
adc
and
mov
loope
shlb
setl
jnp
imul
clc
das
jae
stos
xchg
push
push
les
jle
jae
mov
ds
cli
jnp
push
or
xchg
jo
jmp
scas
insl
push
and
lods
ret
int
mov
mov
push
jl
fneni(8087
imul
mov
sarl
fnsave
stc
jp
aam
xor
lcall
xchg
cltd
or
cli
fwait
icebp
sbb
bound
add
pop
shll
mov
mov
jne
aam
push
add
shll
or
jbe
inc
mov
bound
test
stos
xor
fisubrl
push
xor
lret
fwait
adc
cltd
inc
mov
push
xor
in
movsb
dec
mov
in
add
pop
mov
test
adc
mov
out
imul
jge
adc
add
push
das
pusha
lea
jne
lods
mov
out
sbb
mov
jecxz
xchg
lods
mov
mov
inc
test
test
hlt
mov
xchg
loope
jmp
sub
adc
push
jo
sub
aad
inc
xchg
mov
sbb
cmc
sahf
pop
add
clc
mov
stos
test
je
dec
das
in
divl
pusha
push
jno
inc
mov
cmp
adc
or
rcll
add
mov
repz
fs
mov
mov
rcrb
pushf
in
push
or
pop
and
sub
adc
cltd
xor
inc
xor
gs
cmp
es
sub
je
adc
mov
test
jo
shll
testb
insl
lods
jo
fldenv
inc
mov
into
jbe
in
shl
cmp
sbb
shr
mov
cld
ret
out
and
inc
mov
cmpb
inc
cmp
push
xchg
daa
mov
lahf
adc
cmp
out
lcall
int
inc
jbe
xchg
ret
push
inc
push
data16
test
mov
fildl
or
cmp
xorb
cmp
xor
jbe
mov
sahf
insb
sbb
movsb
pushl
sub
cmp
add
lret
pop
cmpsl
loopne
xchg
xor
dec
shrb
ds
pop
mov
test
sub
push
pushf
jnp
lock
mov
inc
test
cli
jmp
mov
xor
mov
or
xchg
clc
loope
fdivrp
fmulp
mov
cs
xchg
mov
push
int
les
test
popa
repnz
xchg
add
push
into
mov
pop
notb
fidivrl
fnstenv
jl
pop
repz
int3
jns
push
test
rorl
stc
clc
pop
int
adc
lods
or
sahf
in
mov
into
mov
scas
xchg
es
push
mov
inc
add
cmc
and
adc
adc
dec
ret
lahf
xchg
enter
std
out
cmp
or
add
push
adc
aaa
or
pop
subb
xchg
or
ds
lahf
inc
adc
push
in
inc
out
dec
xor
push
sbb
pushf
mov
outsb
cmc
add
fnsave
dec
dec
mov
icebp
xor
mov
sub
lahf
fwait
or
xchg
fldenv
add
lods
sub
dec
fdivs
roll
sub
mov
jecxz
adc
bound
int
sub
adc
adc
sti
imul
inc
mov
dec
jne
mov
jae
mov
in
push
sbb
fnstcw
pusha
inc
rcrl
in
or
mov
jl
lcall
jge,pt
jmp
repnz
jb
test
cmpsb
cmp
mov
or
stc
pop
cmp
sub
push
ss
or
ss
and
movsl
ss
sub
dec
or
imul
mov
pop
in
cli
bnd
push
imul
adc
mov
cmpsb
int3
push
cmc
sub
and
inc
dec
mov
push
mov
mov
das
jnp
mov
ss
inc
fistps
inc
loop
sub
imul
sub
rcrb
imul
fs
movsb
mov
in
mov
xlat
insl
popa
test
push
lret
xchg
jecxz
fiadds
mov
mov
jmp
and
xchg
sub
gs
sbb
adc
lahf
adc
mov
rorb
enter
or
dec
inc
pushf
js
das
je
sub
xchg
cmp
adc
or
mov
jmp
sub
push
outsl
je
adc
and
lret
stc
add
aaa
mov
xchg
mov
or
and
jge
xchg
sub
decb
enter
cmc
jbe
add
out
mov
adc
and
push
fs
inc
mov
cmp
shrb
adc
add
pop
rol
jae
dec
mov
mov
xlat
mov
pop
ljmp
sahf
jnp
jb
iret
push
addr16
cld
pop
pop
lret
outsl
in
mov
cmp
popf
push
call
push
jmp
clc
cmp
adc
pusha
test
popf
or
jns
jnp
shr
dec
int3
mov
add
push
jns
jne
jns
sahf
pushf
imul
in
push
push
pop
in
shrl
push
jle
test
or
push
loop
in
iret
mov
sti
jge
out
iret
mov
adc
push
add
repz
cli
ficomps
daa
sbb
sbb
clc
cli
lock
aaa
mov
loope
outsb
daa
outsb
cmc
dec
in
xchg
les
into
xlat
or
dec
pushf
mov
mov
ds
ds
inc
dec
sahf
sub
sub
sahf
fiadds
ret
mov
aam
add
iret
xlat
mov
add
std
cmovo
ja
sub
mov
scas
jb
jmp
movb
inc
mov
inc
jmp
sbb
arpl
bound
dec
mov
aaa
mov
sar
sahf
sub
push
inc
and
push
outsl
xchg
insl
out
xchg
ror
mov
ss
xor
add
jmp
inc
xchg
sti
hlt
aam
mov
xchg
bound
stos
pop
dec
rcrb
add
fldenv
xor
adcb
or
add
push
inc
jmp
jbe
stos
dec
cltd
scas
jae
mov
pop
and
add
int
outsb
ret
xchg
xchg
sarb
lods
push
stc
jae
mov
xchg
xchg
ret
pop
ds
push
pop
adc
pushf
mov
adc
or
fisttpl
fnsave
inc
xchg
mov
shll
mov
push
divl
test
popf
data16
sub
push
xchg
jbe
lret
xor
pop
lds
into
and
sbb
dec
or
jle
mov
mov
mov
cmp
js
xchg
into
mov
dec
xchg
cmc
loop
rcrl
xchg
iret
jno
rcl
mov
adc
cli
add
mov
add
sbb
mov
mov
mov
push
andl
xor
je
lret
xchg
push
jl
dec
pop
inc
jb
ljmp
sbb
mov
mov
cltd
stos
dec
shrb
rolb
out
addr16
aad
sub
out
std
jne
xlat
xor
xchg
pop
cwtl
ss
fidivs
dec
inc
or
rcll
or
out
data16
daa
jbe
scas
or
xchg
cmp
xor
pop
mov
push
in
mov
out
inc
scas
insl
xchg
xlat
push
call
dec
jo
jnp
jb
cwtl
into
inc
jg
adc
xchg
std
mov
dec
jne
bound
jg
in
pop
movsl
pop
popa
cwtl
fwait
jle
pcmpeqb
mov
addb
mov
mov
sub
ret
outsl
pop
icebp
mov
enter
jmp
dec
xchg
jns
push
stos
test
outsb
xor
mov
aad
mov
int
fsubl
fistl
cs
jne
sbb
repz
test
pushf
loopne
int
in
mov
movsl
sbb
pop
data16
xor
movsl
js
xchg
sbb
cs
xor
sarb
or
subl
cs
scas
mov
add
mov
ds
mov
repnz
test
stos
gs
fucomp
jl
inc
lahf
les
imul
icebp
pop
push
insb
popa
xorl
cli
mov
or
vshufps
hlt
test
dec
in
in
ds
cmpl
mov
dec
xchg
cmpsl
imul
and
cltd
movsl
adc
fidivs
fistl
jecxz
push
in
lock
cmp
dec
push
or
rorb
sbb
xlat
sub
and
in
test
lods
stc
push
outsb
jb
fbstp
sbb
xchg
jnp
inc
pop
sub
and
leave
mov
or
and
mov
and
lret
adc
movsl
or
mov
jp
xchg
imul
stc
pop
push
fcoms
inc
add
ja
inc
in
adc
inc
out
fidivl
aad
dec
scas
lock
sbb
ss
or
and
and
std
loop
inc
sahf
hlt
jg
stos
pop
and
mov
shlb
rcl
jmp
mov
jmp
sub
jecxz
pop
pusha
js
fsubp
in
mov
xor
mov
mov
insb
data16
clc
push
and
pop
and
cmpsb
ds
xchg
clc
pop
cmpsl
xchg
out
adc
aam
sbb
push
adc
loop
sbb
pop
mov
iret
ret
jbe
fcomps
scas
dec
jle
mov
mov
or
mov
jne
stos
mov
imul
imul
jp
divl
adc
out
adc
mov
mov
repnz
jge
mov
xchg
addr16
xchg
xchg
aad
movsb
int3
and
adc
inc
inc
ret
cmp
pop
xchg
xor
mov
andb
adc
cmp
lock
daa
aaa
and
cltd
sub
mov
lods
pop
ss
mov
mov
push
out
sbb
out
pop
fistpll
lods
push
out
pop
imul
lahf
push
adc
in
sub
arpl
cmp
or
sub
orl
stos
adc
mov
mov
rolb
repz
cmp
scas
js
cmpsb
lds
dec
inc
std
gs
pop
mov
jns
test
add
adc
add
xor
out
arpl
out
sub
xchg
fcomps
push
mov
xchg
push
sbbl
sub
lea
mov
inc
and
out
ret
int3
cmp
mov
sarl
into
mov
sub
stc
jmp
jae
mov
incb
out
pop
popa
lahf
xchg
data16
clc
lahf
cli
idivb
or
mov
icebp
out
sub
lods
or
scas
or
jnp
push
sbb
dec
mov
aad
and
jno
fmul
repnz
jnp
or
ret
inc
daa
lock
jns
jp
or
xor
mov
pop
outsl
mov
rcr
dec
int3
mov
jne
mov
inc
xor
test
ljmp
lds
push
subl
dec
push
mov
mov
ss
dec
clc
rol
shll
push
into
imul
push
insl
mov
movsl
mov
sub
cltd
dec
sti
test
jnp
mov
pop
xchg
movsb
movl
cmpsl
movsl
int3
sub
pop
call
lea
mov
push
mov
push
es
xchg
mov
fiaddl
mov
in
dec
mov
jae
imul
cli
inc
sub
dec
iret
pop
xor
pop
shl
iret
add
add
inc
adc
iret
or
ss
or
sti
push
sub
push
lds
icebp
mov
adc
pop
movsb
test
aaa
sbb
xor
inc
arpl
scas
xchg
gs
cmp
pop
pop
arpl
xor
cs
xchg
pop
pop
leave
pop
jnp
inc
shrl
jo
add
push
mov
enter
mov
sub
addr16
cld
pop
sbb
sub
out
dec
addr16
repnz
insb
scas
stos
cli
fwait
adc
scas
adc
fildl
or
lods
jg
inc
sti
scas
popa
stos
mov
mov
cmp
pop
adc
and
dec
push
int
mov
sbb
push
rorl
hlt
aam
dec
pop
cmp
mov
stos
into
xchg
mov
lea
sbb
test
inc
div
pop
test
sbb
and
push
adc
add
push
pop
xchg
sbb
xor
inc
xor
xor
jecxz
mov
push
dec
push
pop
negb
int3
jmp
or
ror
add
fadd
scas
adc
mov
or
stc
pop
movb
mov
add
mov
mov
lea
scas
pop
mov
mov
adc
mov
or
daa
cltd
jmp
test
insl
les
push
push
in
dec
jge
pop
cmp
xchg
mov
inc
inc
xchg
mov
fdivrl
jnp
cmp
cmp
ret
inc
add
sbb
aad
icebp
hlt
imul
cld
call
push
dec
pop
push
mov
add
xchg
or
jae
bound
mov
add
dec
mov
xor
lret
xchg
adc
orl
mov
addr16
in
mov
mov
iret
adc
push
mov
sbb
cmp
xchg
inc
fisttps
fs
gs
xor
adc
les
in
aad
fistl
jg
cwtl
adc
aaa
xchg
inc
subb
es
jge
mov
jbe
pop
mov
mov
cmp
pop
inc
lahf
arpl
outsl
xchg
mov
push
jo
adc
sub
jmp
js
mov
inc
pop
push
inc
mov
pop
inc
adc
jl
and
leave
leave
or
aaa
jbe
cmpsb
out
mov
fidivl
inc
jno
inc
movsb
dec
dec
dec
sbb
push
or
das
mul
or
pop
and
int3
popa
cld
or
dec
mov
lcall
push
add
dec
jb
je
sbb
xor
adc
or
dec
leave
test
xchg
out
sbb
push
jmp
mov
adc
mov
or
loop
gs
outsl
push
ret
xchg
or
repnz
leave
ja
jo
addr16
sub
in
push
pop
jo
mov
in
js
inc
rorb
xor
cld
pushf
jns
fldcw
xor
andb
xor
dec
mov
mov
xchg
outsb
dec
push
imul
in
mov
cld
out
shlb
inc
mov
loope
jmp
data16
xchg
repz
aad
gs
dec
scas
stos
inc
adc
in
sub
ljmp
jg
lock
dec
es
xchg
mov
jle
addb
xchg
imul
xchg
fcomp
pop
sub
adc
jg
scas
xchg
or
lret
jg
push
mov
cwtl
notb
out
fmul
adc
mov
adc
ja
out
repnz
push
lds
and
insl
test
inc
cltd
cs
ljmp
test
add
dec
mov
shll
push
push
lret
bound
push
je
movl
scas
rorl
dec
fsts
fwait
mov
xchg
shrl
and
pop
dec
ret
xlat
push
fldcw
xor
icebp
mov
imul
push
cmpsl
jnp
in
lock
ss
jns
outsb
int3
adc
outsl
or
aaa
pop
xor
jp
push
pop
cli
andl
xor
ja
or
xor
rclb
into
mov
mov
test
mov
mov
test
negb
xlat
xchg
cmp
cmpsb
or
xor
or
pop
dec
in
pop
inc
enter
fidivs
movsl
lcall
or
cwtl
fsubl
xor
pop
and
rcll
out
mov
lret
stos
test
daa
sub
sbb
xchg
rcrl
adc
pop
fisubs
xchg
and
cmp
movsb
test
mov
jo
sti
push
movsl
insb
dec
mov
pusha
shl
adc
pop
scas
mov
jp
arpl
push
aam
in
and
mov
xchg
pop
call
das
cwtl
mov
daa
outsl
adc
inc
ja
sub
adc
call
lock
es
mov
jg
arpl
push
out
pop
das
sub
push
test
testl
or
imul
ret
data16
sti
daa
repnz
aas
mov
sub
in
dec
pop
adc
mov
inc
jge
filds
loop
bound
rolb
jb
xor
fbld
xorl
and
out
xchg
outsb
pop
in
inc
sub
jg
std
movsb
mov
sub
sub
mov
aad
mulb
pop
imul
add
jp
cmpsb
push
cmpsb
call
cmp
lds
jmp
lods
adc
repz
sbb
push
rcr
scas
or
adc
data16
fstpt
movsl
mov
add
dec
arpl
insl
jae
ja
sub
sbb
data16
shrb
outsl
icebp
push
test
popa
call
jne
jno
in
xor
adc
das
insb
aam
cli
mov
stos
and
mov
mov
pop
or
outsb
jp
push
clc
and
add
dec
insl
xlat
dec
fdivrl
testb
add
xor
in
lahf
jl
push
inc
add
repnz
add
call
in
jb
add
cwtl
sbbb
outsb
insb
nop
aas
negl
adc
xchg
scas
in
jnp
scas
xor
in
les
movsb
lock
fs
pop
add
inc
das
cmpsl
xor
iret
and
push
aaa
rorb
cmp
mov
imul
bnd
xor
sarb
fstpt
ja
addr16
mov
xor
mov
mov
inc
jns
sbb
xor
flds
fbld
fcmove
mov
rorl
sbb
adc
inc
aas
add
test
daa
sub
pop
xlat
aas
lret
scas
std
pop
lcall
add
mov
inc
fisubrl
sbb
fisubl
mov
and
or
mov
dec
sub
dec
jbe
lret
pop
mov
stos
pop
sub
adc
es
mov
repnz
adc
and
in
xchg
movsb
xor
in
cli
incl
mov
sarl
xchg
sahf
inc
stc
push
xor
in
push
or
nopl
lods
jb
not
dec
fistl
xchg
popf
imul
leave
cmp
xor
jae
stos
mov
sti
push
pop
clc
cmp
dec
orb
lcall
jne
add
mov
sbb
pop
ds
out
pop
out
mov
fcom
into
daa
mov
dec
xor
add
pop
call
movsl
fcomps
insl
xchg
push
mov
sub
int
andb
stos
adcb
ss
sarl
outsl
inc
jbe
test
dec
les
popaw
sub
cmp
dec
jnp
mov
dec
sbb
cmc
cli
sarl
xlat
xchg
fmuls
mov
fmul
pusha
push
aaa
ds
sar
addr16
lods
ss
cs
cld
mov
sub
mov
sub
mov
nop
mov
es
inc
mov
mov
sbb
sub
xlat
arpl
imul
outsb
cltd
es
cmp
adc
lock
mov
pop
mov
cmpsl
xchg
or
cs
les
test
std
cld
nop
adc
jbe
jb
cmp
xorl
mov
add
call
push
xchg
ljmp
mov
adc
push
inc
test
arpl
push
out
popa
into
pop
or
sbb
jne
sub
icebp
cltd
or
mov
insl
jg
cmpsb
adc
sub
cmpsb
fadd
mov
xchg
push
mov
cmp
mov
sahf
les
fisttpl
or
and
or
xchg
jb
frstor
into
dec
mov
les
inc
pop
scas
lret
jle
lcall
and
fs
jle
or
cmp
sarb
shlb
in
in
mov
push
call
mov
pop
jns
jmp
repz
ljmp
ret
jecxz
dec
cmpsb
add
fstl
lret
addr16
xchg
adc
out
in
jae
lret
add
push
sub
popf
dec
lret
mov
ret
int
jbe
leave
gs
sub
push
aas
clc
movsb
adc
cmp
cmc
inc
in
fldenv
lahf
mov
lahf
inc
dec
mov
pop
popl
xchg
adc
xchg
outsb
into
sbb
adcl
stos
and
cmp
bound
jbe
cs
jmp
lret
lcall
outsb
push
mov
push
fcmovne
inc
pop
pop
mov
xchg
mov
stc
dec
sti
bound
jecxz
xor
fsub
aad
sbb
decl
ret
call
push
sub
out
mov
insl
pop
and
mov
ret
inc
inc
in
mov
or
inc
icebp
jno
ret
push
push
xchg
inc
scas
addr16
sub
or
pop
rclb
in
push
lods
pop
mov
clc
mov
jne
rorb
adc
and
or
loope
enter
pop
hlt
test
stos
cmp
loopne
inc
pop
jnp
aad
mov
pushf
adc
clc
cmp
mov
and
fcoml
cmp
or
inc
dec
aaa
clc
cmpl
cmovbe
sub
inc
and
push
adc
mov
sbb
ret
dec
mov
and
ljmp
and
sub
out
gs
mov
and
mov
jecxz
lock
and
jnp
jbe
mov
sub
xchg
ss
nop
enter
xchg
subb
or
mov
in
push
xor
mov
xchg
pusha
lret
enter
push
movsb
mov
je
jl
xor
add
mov
arpl
roll
fsubrl
xchg
or
sub
call
ss
add
andl
push
cmp
mov
dec
pcmpeqw
out
or
mov
fadd
mov
fidivrl
sub
cmp
insl
das
inc
ss
les
aas
loopne
mov
popf
pop
movsb
add
ret
jo
ja
hlt
dec
mov
sbb
adc
sub
xchg
icebp
mov
cmp
mov
mov
in
mov
xor
inc
adc
aam
das
xchg
mov
adc
mov
outsb
cmp
addb
pop
mov
and
adc
pop
sub
and
sub
scas
pop
std
ret
dec
jg
adc
dec
push
ret
sub
out
adcb
scas
add
adc
push
daa
pop
pusha
hlt
push
mov
fdivl
jge
sbb
shlb
or
lods
aad
popf
int3
loope
imulb
test
repnz
xchg
xchg
push
mov
lods
push
fsubrl
mov
pop
xchg
push
lds
insb
mov
out
frstor
xchg
in
pop
mov
aaa
mov
pop
inc
sbb
jnp
dec
rorb
decl
add
jle
and
inc
pop
rclb
test
imul
out
and
es
orl
mov
pop
xor
cmpl
mov
stc
xchg
je
sbb
loope
movsl
adc
sbb
and
cmp
fisubl
dec
dec
sar
leave
fisttps
out
shr
imul
mov
lahf
int3
and
xchg
xchg
xchg
cwtl
arpl
xor
iret
orl
sbb
movsl
push
mov
add
in
out
in
arpl
ja
push
lods
pop
bound
lock
cmp
imulb
mov
cmc
mov
pop
adc
xchg
pop
fnsave
lcall
fidivl
and
push
adc
loop
cltd
mov
cmpsl
ret
xchg
add
fs
push
mov
adc
adc
fs
adc
adc
pop
jle
loopne
test
xchg
xchg
adc
rcrl
loopne
popf
inc
lahf
aad
clc
pop
aad
dec
cs
dec
fmull
ret
add
push
push
clc
mov
push
inc
adcb
sbb
outsl
lock
add
pop
adc
lds
pop
arpl
hlt
sub
sti
xchg
shlb
jo
int
fnsave
mov
sub
pop
sbb
test
shrl
push
fdivs
adc
mov
jmp
int
cmp
push
cld
mov
es
adc
push
and
shlb
and
fdivs
pushf
sub
pop
cmp
and
mov
sub
pop
fwait
out
cmp
int3
xlat
sub
mov
add
stc
fbstp
pusha
push
shll
add
out
popa
dec
shlb
int3
push
push
pop
pop
cmp
movsb
repz
adc
rclb
mov
gs
fwait
inc
in
fs
lods
push
and
insl
cmc
pop
inc
or
mov
mov
inc
popa
push
and
aas
xchg
pop
sub
je
lds
lods
ret
push
addr16
pop
push
xchg
push
xchg
cli
adc
les
int
test
lock
in
nop
cmp
xorb
cmpsl
mov
mull
in
and
cld
sbb
dec
xchg
pop
adc
jae
ds
faddl
jae
repz
cmc
in
outsl
sub
jne
sahf
int
push
cmp
loope
xchg
outsl
into
xor
popa
imul
mov
mov
pop
scas
fwait
jl
push
mov
adc
push
dec
jle
mov
xchg
insb
arpl
mov
cmp
mov
pop
lock
sub
cmp
in
push
outsb
hlt
mov
mov
add
inc
cmp
push
xchg
xlat
shl
les
dec
divb
popa
std
ljmp
mov
inc
test
sbb
jl
xchg
xchg
int
sbb
mov
mov
pop
inc
shll
call
sub
mov
jae
aam
lea
mov
adc
ljmp
mov
add
mov
dec
mov
rolb
mov
sar
ljmp
rorl
enter
inc
sar
push
jo
out
sub
sbb
xlat
into
test
ja
icebp
test
jp
hlt
int3
inc
pop
stc
mov
ret
mov
or
iret
xchg
push
pop
insl
mov
inc
clc
lret
and
xchg
sbbl
adc
popa
sbb
xlat
fdivrp
int3
movsb
arpl
jge
fmull
imul
int
push
adc
adc
pop
nop
mov
dec
lahf
adc
arpl
mov
inc
pusha
pop
clc
pop
cmc
cmp
or
jecxz
subl
xor
lods
in
in
jge
mov
pop
nop
idiv
and
mov
cwtl
paddq
mov
xor
mov
adc
fsts
inc
xchg
faddl
cmc
sahf
cmp
idivb
and
ret
inc
and
nop
push
sub
mov
or
les
or
pusha
sti
insb
data16
adc
xlat
fimull
fstps
push
xchg
adc
sti
mov
cmpsb
mov
xor
lds
mov
popl
dec
imul
pop
ret
movsl
sub
lret
lahf
mov
cmp
hlt
or
or
lcall
mov
lods
and
xchg
pop
pop
xor
arpl
psllw
cmp
mov
fucom
jg
imul
mov
sub
inc
out
ljmp
popa
rcrl
adc
es
cs
xorl
mov
inc
cmpsb
test
mov
pushf
imul
fdivr
dec
popf
pop
inc
in
cmp
and
in
int3
xchg
pusha
in
push
push
sbb
mov
sbb
dec
mov
enter
cmp
loop
mov
cmpsl
inc
dec
push
push
pop
subb
roll
xchg
add
sub
fidivs
iret
lret
cld
into
je
popf
dec
xchg
push
add
pop
or
fs
mov
pop
xor
arpl
or
lahf
rcr
repnz
sarl
add
or
in
or
dec
jno
fiadds
ja
faddl
pop
cmp
adc
mov
jg
inc
mov
test
sahf
hlt
cli
dec
push
push
in
sarl
in
xchg
fldcw
inc
inc
ljmp
movsl
ret
sbb
loopne
aaa
test
std
aaa
pop
xor
jns
mov
ret
or
jo
lahf
xchg
es
scas
push
in
push
fwait
scas
sarl
stos
sub
push
and
push
push
test
hlt
lret
mov
cltd
sbb
clc
push
or
int3
inc
outsl
xchg
adc
movb
sub
mov
loop
out
xchg
mov
xor
or
test
and
xor
or
cmc
cmp
cmp
test
jle
movsl
sbb
je
sub
hlt
push
rcrl
push
dec
dec
xchg
aam
lods
pop
int
dec
insl
fs
test
call
loope
fdivrs
and
lcallw
lahf
add
stos
fmuls
ljmp
add
mov
mov
sbb
es
mov
push
and
popa
push
dec
shrl
cli
mov
and
dec
mov
les
fildl
iret
jae
adc
popf
fcoml
mov
inc
xorl
pop
push
or
push
pusha
sbb
mov
sbb
mov
sub
push
xor
loop
add
mov
loope
xchg
sub
inc
mov
lea
adc
push
sub
xchg
push
xor
jmp
outsb
das
or
frstor
dec
or
mov
leave
stc
mov
fwait
or
sti
mov
inc
jns
pop
das
pop
ljmp
sub
push
lds
jo
mov
fwait
jle
inc
pop
jno
and
jl
jb
mov
lea
ljmp
pop
test
dec
mov
inc
rol
push
daa
push
dec
dec
fcompl
mov
fdivl
fwait
or
cmp
and
sbb
movsb
cld
into
call
sbbb
dec
xchg
pop
pop
shll
fs
mov
gs
jns
add
push
sbb
push
subl
xchg
or
sarl
cmp
push
inc
and
pop
lods
sbb
inc
imul
out
lods
std
out
lds
cltd
mov
pop
or
fcoml
test
mov
imul
jmp
lret
shlb
imul
push
inc
lods
movsb
lock
xor
push
adc
xchg
mov
sub
xchg
pusha
xor
xor
in
cltd
mov
lret
sbb
mov
inc
or
jl
jae
es
mov
pop
movsb
push
or
lock
xchg
add
push
dec
hlt
pop
ffreep
jns
sahf
mov
ret
pop
push
aaa
dec
push
mov
jb
stos
and
rol
mov
dec
out
in
les
daa
add
push
mov
mov
icebp
jne
push
pop
jecxz
pop
lcall
and
std
cltd
xor
cmp
jmp
stc
and
movsb
dec
or
iret
inc
mov
sti
jne
js
mov
mov
lahf
jo
cld
pushl
inc
cltd
nop
in
inc
stos
mov
ret
mov
sub
dec
xor
sbb
and
xor
loope
jl
lock
push
cs
dec
scas
pop
fiaddl
add
add
inc
cltd
ss
movsb
in
fiaddl
pop
push
or
cmpsb
pop
fnsetpm(287
mov
or
cltd
jbe
add
jle
xor
test
add
sub
pop
mov
jge
xor
or
push
shrl
popa
mov
pop
aaa
inc
sbb
jmp
cli
cltd
xor
inc
push
cmpl
bound
loop
pop
scas
push
dec
into
imul
jl
dec
ret
aad
cmp
jp
ficoml
out
mov
repz
lods
clc
or
popf
ljmp
push
addr16
xorb
pop
dec
fnstenv
or
and
pop
arpl
dec
inc
or
xchg
push
cli
shrl
inc
lcall
mov
sub
and
jo
sbbl
stos
icebp
les
jge
jle
pop
cwtl
jns
mov
sbb
xlat
ss
in
xchg
cli
cmp
ja
mov
mov
pop
inc
repz
mov
mov
or
push
inc
pushf
push
dec
das
add
xor
jge
inc
push
jb
jne
pop
jle
mov
mov
xor
outsl
mov
mov
in
xlat
data16
and
fdivl
mov
clc
jb
repz
sub
std
mov
jns
sub
test
inc
ds
lcall
dec
push
test
push
cmc
jecxz
pop
jno
adc
lret
cmp
sub
add
cmpsl
push
sbb
fistps
adc
xor
jmp
lock
addb
jecxz
movb
fdivs
xor
lods
push
fidivrs
cltd
pop
cmp
pop
push
pop
mov
inc
dec
popf
in
push
add
add
insb
pusha
nop
mov
mov
out
jmp
sbb
dec
test
inc
xchg
int3
mov
loope
and
aas
xchg
xchg
xchg
stc
outsl
data16
xchg
loope
js
fildl
jno
in
clc
aam
and
xchg
cmpsb
ja
std
std
sbb
mov
pusha
mov
xor
fs
push
adc
cltd
jnp
addr16
fdivrp
in
into
ret
clc
lcall
pop
xchg
negb
jl
imul
enter
xchg
test
notb
bound
cmp
cmpsl
bound
int
mov
or
add
cmp
dec
in
xchg
test
ss
shll
out
push
repz
sub
popa
aaa
fstl
fiadds
lods
pop
sub
cld
mov
dec
das
push
mov
cmp
into
arpl
mov
clc
push
dec
xchg
pop
js
bound
mov
mov
sub
push
or
stc
mov
ljmp
test
push
pop
sub
mov
jge
shlb
pushl
inc
xor
jne
or
loope
stc
add
dec
das
add
jle
fiaddl
mov
sub
addr16
cmpsb
mov
arpl
aas
dec
xlat
sbb
jb
xchg
push
lods
xor
ds
pop
je
movsb
rcrb
mov
pushf
cs
jecxz
inc
fadds
fildll
dec
repnz
cmp
adc
lahf
lock
push
mov
dec
jle
mov
pop
imul
sahf
or
mov
sub
stc
push
push
add
sbb
or
mov
shlb
mov
fs
sub
std
popf
xor
lods
push
xor
xchg
cmpsl
inc
lock
xor
and
sub
sub
popf
cwtl
lods
out
rclb
mov
jnp
ret
cmc
repz
dec
daa
adc
popf
pop
mov
mov
out
popa
and
ficomps
test
jge
xchg
in
les
jmp
stos
aas
movsl
push
mov
and
int
inc
adc
jns
insl
arpl
out
psubb
inc
mov
adc
aas
mov
push
out
insb
jbe
lods
out
inc
in
xlat
add
call
or
mov
add
cmp
push
leave
adc
jne
pop
ret
sbb
cld
fst
add
jne
cltd
loop
jne
jne
push
mov
jmp
stc
ret
add
lret
dec
sub
ret
mov
adc
sbb
push
movl
pushf
shll
icebp
mov
pop
jle
arpl
scas
lea
xchg
aaa
fistpll
sbbb
sbb
sub
loop
je
lret
pusha
enter
jg
pop
push
cltd
mov
dec
xchg
mov
xchg
shlb
sbb
pop
mov
cmp
push
push
pushf
out
lods
mov
cs
dec
sbb
xor
jecxz
ret
rcr
lret
les
test
or
jne
bt
add
and
stos
mov
mov
pushf
mov
testl
call
xor
cmp
push
cld
out
xchg
jmp
bound
xor
xor
add
mov
incl
iret
scas
out
mov
cli
jno
cmpsb
pop
pop
lcall
inc
mov
std
xchg
sub
out
inc
cld
in
mov
pop
xchg
lret
div
jnp
lcall
push
adc
bound
push
ss
sub
ljmp
clc
mov
adc
pop
shrl
mov
lods
in
imul
jle
call
mov
cs
lds
mov
mov
dec
fdivr
adc
mov
dec
sub
pop
fldl
icebp
adc
out
mov
mov
inc
pop
sub
sbb
push
jno
and
shl
mov
pushf
fcoms
fwait
jmp
das
ret
xor
stos
fst
fadds
dec
mov
leave
icebp
or
adc
or
dec
jae
fisubrs
cmpsl
mov
mov
pop
or
clc
movsb
ds
into
pushf
inc
xchg
in
lcall
mov
lds
push
mov
sbb
and
fcmovne
xchg
mov
mov
push
cmpsl
leave
inc
mov
xor
jecxz
test
inc
sub
jle
cmp
mov
pop
add
imull
clc
test
roll
ret
or
mov
in
mov
cmp
dec
and
or
hlt
adc
stos
adc
cmp
sbb
jno
add
pop
sbb
cmp
in
inc
jmpw
je
push
sub
push
fbstp
or
xchg
decl
int3
mov
rclb
cmpsl
mov
jl
std
jle
pop
jbe
mov
insl
nop
lret
inc
fidivrl
std
sub
jb
mov
mov
cmp
sti
sarb
stos
add
pop
popa
in
or
inc
sti
fcom
xchg
add
sbb
xchg
dec
rolb
test
sbb
add
mov
xchg
mov
cs
push
aam
fsubrl
xor
sbb
jb
lret
insb
jmp
pop
add
sub
aas
push
aam
xchg
and
mov
dec
scas
loope
xor
mov
dec
cmp
repnz
push
pop
xchg
std
iret
leave
cmp
scas
cmp
in
fisttpll
push
clc
insb
insb
and
in
cmpl
and
int
je
scas
push
comiss
out
ja
das
dec
test
cmp
push
push
je
cmp
jl
xchg
adc
in
lock
ds
xor
andl
cmp
mov
mov
xor
mov
aam
dec
sbb
jge
push
lret
cmp
push
fcom
push
pop
repz
aad
pop
jge
dec
or
cmp
mov
mov
sub
fnstcw
xor
xor
iret
decl
outsb
or
mov
mov
mov
lds
mov
out
fwait
xchg
mov
js
arpl
jne
sbb
nop
out
inc
push
adc
and
push
add
stos
mov
push
int3
dec
stos
mov
mov
outsl
jmp
fcomps
iret
das
sub
cmpsb
repz
adc
inc
je
hlt
dec
outsb
and
loopne
dec
dec
inc
aad
mov
sub
mov
test
outsl
mov
fisubrl
sub
fdivs
lcall
lock
ljmp
jbe
cli
jbe
nop
cmp
inc
cwtl
mov
xchg
xchg
push
cmp
lret
xchg
fwait
int
mov
daa
mov
xchg
out
and
ja
out
cli
test
rcr
dec
sub
test
jbe
rcpps
popa
mov
scas
sbb
pop
lcall
aaa
call
int
lock
lock
add
cld
fisttpl
stc
cld
xlat
adcl
push
fwait
ret
push
cmc
pop
jnp
iret
push
or
rclb
dec
and
xor
test
push
jecxz
push
push
stos
adc
mov
sti
inc
jb
mov
add
sti
pop
out
xchg
lods
ficompl
push
mov
fistl
test
out
outsl
jp
xchg
xchg
add
xor
int3
fcmovu
sub
jl
stos
in
testl
sub
xchg
jge
pop
push
push
or
in
or
sbb
scas
int3
xchg
je
loopne
popf
inc
xchg
adc
scas
fbld
mov
inc
and
cmp
xor
ljmp
ss
clc
sbb
mov
cmp
jmp
mov
hlt
shrl
push
cltd
mov
out
das
stc
and
jg
xchg
adcl
xchg
xchg
popf
jae
jecxz
in
jo
pop
imul
ja
insb
lds
jle
xor
lret
pushf
xlat
jb
mov
iret
jg
cld
mov
rolb
call
add
std
adc
jno
lahf
push
stc
dec
pop
jbe
mov
dec
aad
std
scas
pop
adcb
push
pop
pop
dec
or
pop
mov
in
add
adc
push
icebp
fimuls
mov
xchg
xchg
sub
mov
jecxz
sbb
jmp
cmp
jp
jp
jge
sti
fcomip
ret
mov
pop
adc
lods
imul
in
imul
push
repnz
repnz
outsl
add
or
sar
push
roll
jnp
stos
push
mov
scas
andl
xor
jmp
cld
data16
push
call
sub
inc
repnz
adc
out
add
jecxz
xor
pusha
cld
movsb
dec
pop
cmpsb
mov
scas
pop
add
xor
sub
in
inc
ret
jns
jg
mov
jae
popf
mov
lret
shll
data16
sbb
inc
lret
sbb
xchg
xor
cld
push
mov
inc
cli
aam
sbb
js
cltd
xor
push
popa
cmp
dec
mov
xchg
or
rcrb
sub
push
lea
lea
cmp
mov
xor
jne
aam
inc
mov
mov
enter
adc
leave
jge
jmp
and
mov
jg
loope
sbb
test
sbb
fcmovb
iret
jne
icebp
push
cwtl
sub
xor
fdivs
mov
cmp
cltd
cmp
jnp
out
fdivl
fidivrs
inc
inc
sbb
add
fdivrl
jmp
call
repnz
filds
xchg
adc
xchg
xchg
inc
mov
cmpsl
xchg
es
sub
stos
adc
dec
call
mov
push
and
xchg
jns
push
cs
jbe
loopne
data16
lds
push
pop
hlt
push
sbb
jb
mov
mov
and
mov
xor
movsb
in
fxch
mov
pop
or
jae
lds
movsb
sbb
or
push
in
cmp
adc
clc
or
mov
lods
adc
inc
repnz
add
inc
jg
loopne
cmp
test
mov
pusha
aam
loopne
addr16
fs
push
fadd
lea
jb
repnz
push
adc
cmpsb
cmp
jne
mov
fbstp
cmp
add
loope
push
sbb
imul
sub
sbb
leave
mulb
sbb
adc
in
pop
pop
mov
test
adc
mov
scas
mov
jne
xchg
jbe
rolb
add
cmp
dec
ss
nop
xor
mov
lock
cmp
sbb
inc
pop
adc
push
xchg
jnp
pop
test
test
popf
or
test
sbb
jbe
xlat
xchg
dec
ja
mov
insb
pop
xchg
fdivs
inc
cmpl
adc
pushw
lahf
pop
enter
pop
out
cmpsb
push
stc
jbe
mov
and
cwtl
mov
dec
pop
cmp
stc
aaa
jae
jl
rorb
and
or
xchg
jno
faddl
adc
gs
jb
sub
mov
mov
adc
xchg
pop
pop
jae
push
int3
mov
jp
testl
sub
adc
adc
adc
cld
rcl
xchg
adc
mov
add
sbb
inc
xor
loope
pop
scas
adc
dec
aad
jnp
mov
xlat
xor
sbbl
int
repnz
das
adc
adc
push
add
fisttps
and
adc
dec
inc
aaa
leave
iret
xor
jns
test
pop
lret
push
shll
loop
mov
push
mov
dec
mov
es
xlat
xchg
dec
sbb
xchg
out
push
sbb
mull
xchg
ffreep
push
rcll
adc
lods
or
cld
sbb
dec
mov
dec
clc
add
test
lods
jge,pn
int
sbb
mov
filds
lds
popf
ror
push
cmc
or
sbb
and
push
xchg
sbb
dec
nop
push
scas
jg
mov
or
jb
rcrb
notl
sbb
into
ljmp
std
ljmp
mov
ljmp
mul
lcall
or
cmpsb
std
mov
aas
jmp
lock
in
jg
pushf
dec
rcrl
pop
std
and
adc
sub
push
aad
loop
push
in
cmpl
imul
dec
mov
data16
adc
loop
int
pop
outsb
loope
scas
or
dec
ret
and
dec
jae
xor
push
ljmp
rorl
or
daa
jge
rcrb
int
adcb
out
jno
aam
xlat
in
xchg
sub
pop
in
and
movsb
adc
jmp
imul
fscale
lret
cmp
mov
xchg
dec
int
pop
sub
popf
xchg
into
shl
push
fwait
xchg
add
cmp
mov
mov
mov
inc
xor
push
sub
mov
es
or
sbb
jmp
dec
inc
cmc
movsb
mov
mov
rolb
adc
bound
cmp
fists
out
xchg
mov
pop
in
dec
pop
bound
ret
pop
rcrb
int3
fistps
dec
inc
inc
push
into
or
cmp
jle
mov
out
insb
sbb
in
push
fadd
es
cld
stc
into
jb
test
jge
cmpsl
lret
insl
or
iret
mov
add
mov
ficoml
cmp
or
cmp
dec
mov
sub
test
adc
sbb
insb
je
push
lods
cwtl
xchg
sbb
or
dec
jmp
cmp
ja
jnp
mov
or
fldl
loope
mov
movsb
loopne
xor
mov
cmp
sbb
mov
push
stos
xor
mov
cmc
repnz
dec
in
int
outsl
ja
and
mov
push
jnp
pop
mov
dec
adc
mov
xchg
and
ds
repz
rcl
sub
imul
cmc
fdiv
hlt
je
and
dec
and
fwait
sbb
add
add
roll
cmp
mov
inc
subb
hlt
call
adc
inc
daa
cmc
int
xor
push
sahf
dec
mov
mov
mov
lret
mov
adc
cmpb
std
insl
and
xchg
push
push
mov
frstor
inc
imul
std
int3
push
mov
aas
daa
jecxz
adc
iret
lods
mov
push
imul
pop
mov
sbb
lods
push
aas
dec
repz
pop
bound
repnz
cmp
inc
out
or
sbb
in
clc
jmp
into
xor
stos
jle
pop
and
scas
adc
ljmp
ja
mov
xor
cwtl
stos
xchg
pop
jnp
arpl
jb
aad
fdivrl
add
xchg
insb
test
lods
test
inc
jge
mov
and
lahf
adc
int3
push
or
jns
lods
sti
lea
push
test
in
adc
add
dec
stos
aad
loopne
stos
adc
out
xchg
dec
xor
lods
xchg
call
icebp
jno
sahf
int
xorl
lods
push
pop
push
push
loope
xchg
test
jne
xor
pop
jb
mov
pop
out
inc
add
jne
insl
or
out
scas
aas
sub
shl
daa
or
adcl
and
decb
repnz
and
cmpsb
mov
outsl
jle
clc
jmp
test
ret
in
out
jns
bswap
test
cmp
mov
cwtl
out
mov
add
inc
xchg
and
add
push
jb
lahf
fs
stc
mov
mov
xchg
rolb
loope
outsb
sti
mov
mov
mov
push
xor
cmp
adc
sub
jl
cmovp
or
out
test
fsubrl
pop
xor
push
pusha
jl
ljmp
mov
cmpsb
jno
nopl
mov
jl
data16
shlb
and
pop
shl
jns
sbb
cmpsl
xlat
ds
icebp
mov
mov
mov
lods
test
xlat
xor
push
or
shlb
xor
or
movsb
popa
mov
cmpsb
fildl
inc
or
jnp
ss
adc
mov
test
jmp
ficoms
mov
loopne
push
mov
and
ret
sbb
repz
mov
loop
jmp
daa
mov
filds
mov
xchg
lods
pop
rorb
and
xor
xchg
and
jge
xor
adc
mov
js
jg
sbb
and
mov
lret
dec
adc
or
mov
jno
dec
sbb
js
push
mov
arpl
cmp
popf
rcrl
ret
scas
insb
mov
das
scas
je
hlt
push
xchg
int
mov
xchg
call
out
pushf
lea
push
pop
es
adc
adc
sbb
cmp
pop
inc
or
lods
push
sub
rcll
fsubrl
sbb
sbb
mov
mov
icebp
adc
mov
arpl
jo
out
ss
dec
or
in
lcall
not
xchg
gs
loop,pt
rol
fwait
sbb
pop
inc
scas
aaa
xor
xchg
shlb
mov
pop
js
sub
cld
mov
xor
or
add
inc
pushf
flds
pop
js
xor
sub
pop
scas
aaa
cmp
xchg
cli
mov
aam
push
outsb
data16
push
inc
rolb
or
adc
cmp
push
jg
sub
icebp
push
std
sbb
mov
icebp
lahf
mov
dec
outsb
xchg
jmp
les
fnstsw
out
jmp
push
cmp
lods
pop
bound
mov
in
dec
or
pop
ret
ds
mov
into
mov
jnp
jnp
dec
inc
cmp
mov
in
test
ret
jne
test
out
int3
inc
fldcw
shrl
mov
inc
jno
inc
dec
push
aas
or
andb
lods
sbb
dec
cmp
add
out
clc
enter
or
outsb
xchg
add
xor
ud2
cmp
sbb
in
divl
nopl
stos
mov
jne
sub
pop
cmpsb
adc
shlb
imul
gs
mov
pop
je
repz
add
push
jmp
dec
aaa
std
sti
cmp
add
int
cld
and
cmp
adc
imul
adc
xor
or
sub
sub
psubsw
sub
push
aaa
mov
int3
mov
pop
icebp
sbb
mov
xlat
callw
test
dec
cltd
xor
int
lea
xchg
cld
negb
xchg
lods
sbb
jb
out
cli
jne
bound
bound
daa
or
pop
jae
and
mov
mov
nop
icebp
dec
sub
push
fimull
sbb
mov
add
insb
stc
add
xchg
mov
stos
pop
out
ret
ds
in
pushf
into
push
lods
push
negb
fwait
mov
jne
cmc
call
popf
insb
xrelease
pop
fsubrs
das
dec
push
inc
les
lods
mov
mov
fwait
dec
dec
adc
mov
mull
pop
and
lea
mov
adc
rcll
cltd
add
xchg
push
mov
mov
jge
je
or
xchg
push
pusha
ret
fidivs
popa
cmp
mov
int3
lods
pop
pop
lods
movsb
negl
stos
fistpl
mov
lret
xchg
cmp
shl
lret
mov
jno
and
mov
fucomp
lods
movsl
jp
adc
pop
stos
call
jne
adc
dec
mov
xor
in
mov
jns
jmp
je
imul
push
push
mov
jmp
xor
bound
push
jnp
out
xchg
xchg
jmp
clc
stos
and
pop
adc
addr16
push
pop
repz
movsb
stos
mov
gs
pop
add
scas
adc
fnsave
les
clc
sbb
jp
or
xchg
xchg
xlat
dec
or
push
aas
in
data16
fnstcw
sar
xor
and
adc
cmpsb
cmpsl
rorl
arpl
cmp
test
or
pop
mov
popa
and
or
jmp
ret
arpl
cmpsb
loop
into
jae
mov
xlat
in
bound
push
stos
addl
ss
cltd
inc
xor
subl
sub
push
mov
pop
pop
dec
mov
dec
inc
movsb
cmp
decl
sbb
sbb
bound
mov
lods
lahf
jae
aaa
mov
pop
loope
out
cmp
xchg
dec
and
hlt
lods
imul
int3
mov
jo
je
add
and
aam
jo
cltd
out
mov
mov
push
rol
jne
clc
call
iretw
andb
ljmp
in
mov
out
std
mov
push
std
cmp
das
add
outsb
pop
mov
cmp
sar
xchg
and
adc
lock
lcall
outsb
pop
mov
mov
jnp
xor
add
push
push
sbbb
mov
clc
popa
and
mov
jbe
or
jb
pop
sbb
std
pop
sti
mov
les
add
lock
cld
fstl
ljmp
ss
ret
decl
imul
hlt
pop
pop
dec
pop
add
ljmp
inc
imul
jb
test
and
ficomps
sti
cmpsb
mov
or
rolb
lea
add
push
call
cli
jne
rclb
push
arpl
dec
enter
sub
leave
push
sbb
mov
adc
aam
scas
mov
inc
std
cmp
fisubrs
inc
ret
inc
jecxz
test
jp
std
sub
adc
imul
ds
push
outsb
xchg
inc
add
mov
imul
mov
jmp
cmc
jmp
xor
adc
stos
shl
pusha
inc
xor
inc
rcll
data16
add
std
sbb
nop
jl
mov
inc
sbb
sti
jl
push
push
pop
loopne
push
xchg
adc
add
or
ja
lods
shl
outsb
rcrl
pop
sbb
cmp
jmp
icebp
test
cltd
sub
cld
mov
aas
mov
mov
and
xchg
xor
pop
in
movsl
lods
or
xchg
lcall
daa
arpl
add
rol
clc
mov
roll
out
or
popa
into
data16
arpl
xor
arpl
add
mov
cmpsl
out
sbb
movsl
xchg
and
lock
pop
outsl
or
cmp
xorl
xchg
cld
out
test
pop
cmp
js
jg
arpl
das
repz
jge
and
ror
jmp
sar
in
fs
out
clc
int3
push
or
popf
xor
and
xor
inc
arpl
mov
in
mov
xchg
daa
jecxz
xor
fadds
push
sub
sbb
cmp
loopne
xchg
xor
in
jp
fistpll
fdivrl
cmp
xor
leave
jge
push
cli
loop
inc
std
inc
rcll
je
push
je
push
sahf
arpl
lret
inc
pop
sbb
cmp
ljmp
xor
push
dec
cmp
sarb
add
lahf
std
js
push
dec
clc
shl
sahf
scas
cmpsl
sub
xchg
imul
sub
adc
lock
cs
in
rolb
mov
xchg
jnp
xchg
adcb
xor
sahf
lds
fdiv
js
push
pop
test
out
sub
fsubrp
dec
fisttpl
mov
add
scas
push
loope
mov
movzwl
insb
push
jge
loope
cld
or
ret
sub
in
addr16
inc
sub
insb
sbb
bound
sbb
sub
mov
cmpsb
and
rcl
add
pop
icebp
cmp
in
xor
movsb
jo
add
adc
pop
subb
cltd
daa
mov
push
into
lods
imul
or
mov
pushf
lcall
cmp
xchg
mov
jg
outsb
hlt
sbb
mov
add
inc
xchg
call
fst
inc
mov
cmc
shll
push
leave
movsb
pop
aas
push
mov
lock
pusha
negb
xor
ficompl
mov
pop
or
mov
mov
mov
fs
pop
cld
cmp
xor
and
jge
push
pop
pusha
lea
pop
cld
xchg
in
xor
mov
jle
mov
mul
movsb
sub
inc
inc
sarl
xchg
jne
or
or
repz
push
fldenv
mov
popa
lods
push
bound
mov
push
pop
adc
pop
jne
es
mov
jo
loop
test
xor
mov
mov
cmp
pop
jae
mov
cli
les
test
movsb
mull
lcall
into
cs
enter
mov
rcrl
stos
mov
adc
repnz
movsb
lock
mov
push
adc
xchg
mov
cmc
jg
in
jo
out
adc
adc
ja
sub
pusha
ds
pop
roll
cmp
ficoml
and
xchg
cltd
mov
shll
out
outsb
inc
xchg
add
inc
mov
loope
dec
cmc
push
mov
lret
cmpsb
pop
lret
idiv
outsl
pop
lahf
mov
mov
jecxz
vmovmskps
jl
ds
xchg
pushf
repz
test
leave
aas
sbb
ss
pop
scas
xchg
movl
jle
sti
jmp
movsb
por
mov
jns
es
push
and
int3
pop
lods
mov
xchg
add
gs
add
xchg
cmp
ret
ds
popf
dec
xchg
pop
les
imull
sbbl
jmp
les
out
mov
cmp
arpl
sub
and
xor
xchg
cmpsl
loope
daa
sub
xor
scas
inc
cmp
adc
xchg
out
mov
outsl
inc
inc
pop
adc
sbb
outsb
or
xor
js
push
rcl
push
imul
push
sbb
jge
shr
cmpl
popf
pop
adc
pop
jne
push
xchg
sbb
cmp
frstor
jb
push
repnz
rolb
icebp
inc
in
and
pusha
and
mov
in
push
popf
out
inc
dec
dec
dec
hlt
pop
xor
int3
aad
pop
cmpsb
and
out
pop
filds
roll
sahf
mov
frstor
jp
popf
idivb
inc
xlat
int3
jmp
fsubl
or
dec
xor
cmpb
ds
or
xchg
push
add
outsb
fwait
sub
pop
jnp
push
outsb
mov
std
xor
int3
loop
insb
sbb
xchg
xlat
mov
lds
jg
jb
cmpsb
add
xor
rolb
scas
jmp
ljmp
or
es
enter
inc
add
jge
adc
mov
mov
lods
dec
imull
movsl
push
push
xchg
data16
push
ret
fldcw
in
scas
dec
psraw
clc
nop
push
pop
sub
mov
mov
or
xor
or
outsl
cmpsb
adc
stos
xorl
in
add
and
xor
in
and
sbb
in
loopne
xor
pop
pusha
push
push
loop
pop
fdivl
fwait
addl
sub
jne
mov
pusha
idivb
mov
sub
mov
mov
sbb
lods
sarb
rcll
mov
pop
and
add
rcrb
mov
insl
mov
cmp
inc
cmp
mov
adc
mov
and
enter
outsl
lods
or
add
xor
and
loopne
cmpsl
sbb
jo
mov
mov
cmpsb
inc
xor
sbb
mov
lods
rcll
xchg
clc
sbb
hlt
pop
add
stc
ss
mov
icebp
ljmp
clc
push
add
in
xchg
mov
scas
test
stos
dec
addb
jno
jbe
mov
inc
lahf
jge
fildl
test
aas
jg
pushw
aaa
faddp
or
mov
adc
out
test
jle
outsl
and
xchg
rcrb
hlt
xchg
repnz
push
loope
or
fisubl
inc
pop
enter
adc
jno
and
mov
ret
in
push
fsubs
aam
dec
and
sub
pop
aam
cmpb
mov
xchg
cli
cmp
push
mov
and
pusha
cmpsb
inc
dec
cwtl
inc
jne
mov
or
cld
stos
out
scas
je
pop
and
loop
repz
mov
pop
mov
sub
add
cmc
test
fwait
cmpsl
les
inc
add
mov
in
xlat
sbb
orb
test
dec
mov
jmp
xor
cmp
addr16
testl
mov
xor
mov
scas
jno
sbb
jno
pop
pop
icebp
stc
rorl
sbb
out
inc
push
mov
inc
mov
push
jb
dec
or
dec
sub
out
arpl
sub
mov
jge
jnp
mov
sahf
aas
xchg
fstl
movsb
or
and
xchg
in
repnz
call
xor
fs
popa
movsl
cmp
scas
aaa
sbb
lret
and
add
lret
dec
add
les
fildll
push
mov
ficoml
xor
pop
inc
pop
mov
inc
and
and
xor
cwtl
adc
aam
rclb
ret
loop
cmpsl
add
aaa
bndstx
adc
pop
arpl
insl
and
fwait
xor
mov
mov
fstps
daa
dec
xchg
xchg
xor
dec
std
nop
push
pop
ret
jl
add
scas
or
sbb
bound
sub
pop
lret
icebp
xchg
dec
pop
sbb
outsb
lcall
sub
sbb
test
and
aas
mov
and
sbb
stos
jnp
push
fnstenv
sub
mov
jo
ss
addb
jmp
mov
jge
cmp
inc
sub
loopne
daa
add
rorl
cmp
mov
inc
pop
pop
xlat
mov
das
lret
adc
mov
jo
popf
ror
adc
cmpsl
rclb
mov
dec
scas
roll
js
clc
push
fcmovbe
inc
xor
mov
jbe
aad
fs
clc
andb
push
cmp
adc
mov
imul
push
xor
insl
rcll
aam
mov
lock
push
ret
fsubrs
push
lret
fistpl
rol
sub
adcb
loop
xchg
jg
imul
pinsrw
test
push
adc
hlt
jecxz
sbb
xchg
testl
jge
jg
test
xchg
or
data16
scas
enter
in
pop
jecxz
jmp
loop
pop
ret
dec
or
xchg
adc
inc
mov
daa
dec
lea
dec
cmp
test
ljmp
pop
sti
fldl
stc
sahf
adc
enter
mov
fistl
int3
scas
out
insb
loop
inc
das
push
dec
sbb
adc
out
push
fstpl
shrb
int3
push
imul
scas
sarb
push
in
test
sbb
push
sub
test
mov
cmp
ljmp
ja
add
mov
dec
and
pop
popf
aad
mov
and
mov
ss
cmp
sub
scas
xor
cmp
dec
sbb
aaa
in
ror
sbb
sub
jne
bound
jb
inc
mov
jmp
jnp
xor
lock
xchg
icebp
clc
push
and
je
dec
rorl
lret
cli
cltd
pop
imul
mov
je
mov
je
and
xlat
push
orl
or
sahf
sbb
dec
movsb
sti
test
lods
pop
leave
pop
xchg
pop
sbb
loop
ds
cmpl
mov
mov
push
es
in
or
repz
test
and
push
insb
mov
je
and
les
std
or
jo
push
xchg
mov
into
movsl
out
scas
push
pop
pop
mov
xor
cmpsb
mov
stc
ret
xchg
aam
jae
cld
mov
cli
sbb
aaa
mov
pop
mov
xchg
les
adc
mov
and
int
std
mov
add
cmp
jg
addl
mov
insl
outsb
pushf
shlb
and
sub
nop
cmp
popa
pop
push
vsqrtss
incb
aaa
outsb
outsl
sub
pop
push
das
bound
pusha
mov
mov
test
pop
inc
arpl
testl
mov
test
or
mov
xchg
dec
sahf
ret
mov
stc
sub
mov
icebp
or
sub
xlat
fisubs
das
nop
loopne
roll
rcrb
data16
mov
push
mov
inc
dec
or
int3
rolb
rcll
pop
outsb
pop
mov
xor
ljmp
jecxz
rcll
cmp
mov
xor
and
test
shr
lret
or
aas
ljmp
aam
sub
pop
cltd
andl
inc
push
or
outsl
repz
push
sub
xor
es
loop
enter
imul
xor
adc
and
loop
push
insl
ljmp
ret
jg
sbb
xchg
mov
jnp
stc
pop
cmp
add
mov
cmpsl
sbb
xor
adc
mov
or
inc
in
cmp
mov
jo
push
movsb
xchg
pusha
pop
cmpsl
in
cmpl
xor
push
pop
jg
mov
insl
push
in
sbb
imul
inc
fists
adc
mov
jb
pop
int
cmc
and
rcrb
mov
pop
or
fisttps
add
cwtl
lcall
mov
enter
add
cmp
jns
insb
xchg
jbe
jp
cli
notl
decb
out
ja
icebp
imul
int
aaa
flds
inc
mov
mov
or
call
sbb
in
loope
mov
xchg
movsl
loopne
jge
clc
cmc
aaa
pop
sarl
out
lods
xchg
push
fcmovnu
mov
stc
mov
imull
dec
lahf
int
mov
sbb
cmpsb
push
cs
rclb
inc
out
xchg
push
push
int
lahf
xor
xlat
mov
test
shrl
rcll
mov
cltd
fucomi
or
mov
pop
insl
xchg
xchg
outsl
xchg
inc
jbe
mov
lea
and
in
test
mov
mov
dec
mov
cmpsl
call
sbb
and
pop
aaa
fcoml
test
add
lahf
cwtl
mov
xor
lret
fmul
mov
pop
in
rorb
mov
xchg
pop
add
fwait
jbe
imul
ret
cli
add
pushf
sub
iret
mov
sub
jno
ss
hlt
xor
mov
xchg
into
out
imul
insb
gs
jg
or
or
xchg
mov
pop
repnz
pushf
pop
insb
out
mov
popa
xchg
jne
dec
jmp
sub
sarb
inc
ffreep
mov
inc
insb
jl
ret
sbb
mov
lret
xor
mov
pop
repz
cld
pop
aad
xlat
and
fmull
sahf
ds
add
mov
mov
jle
xor
mov
jle
pusha
cs
ljmp
sbb
mov
clc
mov
movsl
out
lret
pop
rolb
add
jl
sahf
scas
inc
outsb
xor
inc
or
and
or
cmpsl
fsub
pushf
xlat
xlat
ror
dec
inc
pop
mov
pusha
pushf
lret
jne
cmpsl
xchg
stos
inc
cmpsb
jbe
int3
push
pop
notb
push
decl
xor
movsb
inc
xchg
mov
pop
data16
inc
mov
dec
aam
adc
or
sbb
and
shll
and
and
xor
daa
out
xor
aas
xchg
daa
ja
mov
in
xchg
xchg
mov
inc
push
insl
out
jge
cwtl
adc
or
outsl
and
sbb
pusha
xor
dec
xor
hlt
jns
mov
in
scas
lods
mov
out
out
std
js
insb
dec
repz
mov
test
in
xchg
pop
cmp
test
mov
shll
stc
xor
popl
gs
nop
mov
push
pop
jns
or
add
sbb
imul
das
sbb
andl
movzbl
movsl
adc
and
arpl
inc
push
aas
add
sub
cmpsl
mov
test
jge
inc
dec
or
push
jns
test
sti
push
jo
push
scas
pop
leave
add
pop
sbb
fcmovnbe
mov
jg
daa
pop
js
mov
or
int3
insb
cmc
ljmp
cmp
int3
cmc
mov
mov
dec
sub
inc
pop
jmp
dec
xchg
rorb
dec
xchg
pop
sub
lock
cmp
and
sub
fnop
dec
ja
jbe
and
push
out
jge
mov
cmp
mov
mov
test
cmp
sbb
mov
pop
cwtl
xchg
mov
lret
popa
adc
in
imul
mov
pop
popa
adc
bound
and
sbb
cmpb
pop
push
sub
insb
xchg
leave
push
xor
adc
pop
jl
scas
push
mov
inc
jae
adc
xchg
lret
jb
or
cmc
imul
outsb
cld
inc
int
sub
iret
or
cmc
jo
enter
daa
icebp
inc
or
popa
dec
pop
pop
lcall
ficompl
adc
xor
jl,pt
mov
in
pusha
inc
aaa
pushf
push
dec
rol
ret
ret
cmp
ljmp
push
pop
fsubrl
add
shr
je
or
xor
cmp
iret
xor
xorl
push
push
lods
inc
xlat
and
or
sub
nop
icebp
out
dec
bound
mov
shl
sub
push
ficompl
shll
sti
and
lea
cmp
sbb
fmulp
add
mov
lds
ret
xchg
xchg
fmuls
adc
xor
adc
push
xchg
ss
int
test
jecxz
lds
in
or
je
push
rcll
mov
jns
jno
add
inc
cmpsl
sub
loopne
shl
sbb
jns
rolb
mov
mov
outsl
stos
stos
jecxz
in
or
and
sbb
pop
adc
or
stos
pop
scas
in
repz
mov
mov
push
and
adc
cs
push
dec
cmc
sbb
lahf
xchg
add
xchg
outsb
enter
loope
inc
push
xchg
cmp
push
in
mov
out
fadd
xchg
sub
push
add
jge
adc
sub
xlat
cmc
outsb
popf
arpl
jmp
adc
and
dec
cs
and
mov
cmp
pop
iret
mov
mov
mov
clc
xchg
int
adc
cwtl
int3
add
lret
rcr
pop
mov
dec
sub
and
daa
or
jl
adc
inc
jne
or
fsubrl
bound
mov
repz
cmp
jnp
dec
cmp
sbb
mov
lret
mov
push
jl
sbb
add
arpl
enter
and
add
fcompl
push
int3
stos
in
cmp
pop
push
in
outsb
cld
mov
lock
or
bound
push
sbb
jecxz
jge
push
and
inc
cmp
jb
dec
jle
or
lret
call
and
dec
cmp
pop
mov
or
fstl
xlat
cmpsl
mov
movsb
nopl
imul
imul
aam
inc
sub
in
das
sbb
mov
popf
sbb
cs
testb
sub
pop
or
xor
push
nop
xor
fld
and
dec
loopne
sub
ret
lcall
fs
pop
jge
adc
jl
sub
pop
cmp
fisttpll
test
lret
sbb
and
inc
or
clc
push
iret
jecxz
aad
mov
ds
pop
mov
jbe
roll
test
pop
popf
or
test
lds
test
xor
sahf
xchg
pushl
cld
fnsave
adc
mov
cltd
mov
in
clc
les
push
ret
sub
in
sbb
mov
add
lea
or
loope
jae
add
jb
dec
stos
lret
xor
xor
mov
pop
cli
mov
stos
in
and
ja
inc
cmp
push
cmp
pop
adc
popf
mov
dec
jge
xor
fldl
call
sub
jb
xor
dec
dec
mov
push
arpl
xor
sbb
out
inc
call
jo
mov
movsb
xchg
sbb
ja
push
aas
shrl
jns
int
bound
dec
lcall
xor
add
add
mov
xchg
in
and
mov
jo
adc
scas
fs
movsb
push
mov
push
in
iret
or
sub
sbb
mov
jle
fstps
and
call
cmpl
outsb
es
fdivrp
nop
gs
pushf
mov
jbe
inc
pop
dec
dec
jne
andl
cmp
push
frstor
add
xchg
jmp
pop
mov
iret
sbb
mov
xor
into
xor
adc
pop
stos
jb
repnz
nop
or
call
int
jl
call
inc
dec
bound
mov
pop
mov
movlhps
dec
lcall
xor
adc
pop
jnp
mov
pusha
or
jmp
sub
inc
repz
popa
or
sub
repz
add
setge
mov
pop
cmp
mov
adc
fdivl
push
push
cltd
jne
lds
inc
je
loopne
gs
mov
ficompl
dec
cmc
outsl
jge
loope
loope
pop
jmp
pop
pop
mov
cs
leave
enter
cmpsb
sub
daa
xchg
pop
repz
jecxz
pusha
mov
mov
leave
cmpsl
bound
setl
das
arpl
push
inc
sbb
in
lret
out
sahf
repz
inc
cltd
xor
ja,pn
push
jl
loopne
xchg
das
insl
jecxz
pop
xchg
sbb
aad
lods
xchg
xor
cmc
insb
int3
add
inc
cmp
mov
sbb
and
lods
pcmpgtb
icebp
sbb
pop
movsl
add
fidivs
xchg
scas
pop
pop
imul
jno
bound
sbb
inc
mov
insl
enter
or
mov
lods
mov
push
movsb
call
or
imul
sbb
in
gs
inc
es
or
scas
adc
dec
cwtl
and
sbb
jns
xchg
jmp
jge
sti
mov
cmp
pop
insb
xor
pop
or
push
test
int
aam
sbb
jg
outsb
adc
dec
xor
insl
adc
daa
and
and
pop
mov
lret
ss
or
in
mov
jnp
xlat
inc
popa
int3
push
jecxz
xor
and
xor
fs
out
xchg
mov
jb
ja
test
inc
xchg
mulb
and
ds
jp
mov
xor
push
push
enter
xor
jge
dec
pop
clc
inc
push
lcall
pushf
ds
bound
ret
jns
stc
dec
fbld
xlat
iret
cld
test
das
roll
jecxz
movsl
mov
mov
xor
cltd
sbb
push
sti
lds
and
mov
lock
lock
sarb
je
clc
add
shll
leave
sbb
jle
das
sbb
sbb
xchg
adc
clc
loopne
nop
inc
mov
and
xlat
cmp
out
movsl
imul
xchg
aas
lock
or
push
xchg
dec
dec
inc
lock
push
repz
int3
scas
add
add
pop
jns
and
jp
push
fisubrl
call
popf
dec
pop
mov
jl
addr16
dec
aam
dec
gs
stos
xor
mov
loop
fadd
popf
mov
dec
into
loopne
add
or
cmp
mov
ja
mov
sarb
xor
out
xor
or
les
scas
fimull
xchg
sbb
clc
repz
xchg
sbb
shll
out
dec
subl
xor
int
adc
xor
mov
cmpsl
or
sub
push
adc
mov
adc
arpl
mov
pop
sbb
mov
add
ds
mov
mov
fcmovbe
sbb
pusha
pusha
push
movl
pop
mov
shll
inc
lock
lcall
xlat
and
dec
xor
mov
fdivl
popa
mov
shll
in
push
stos
pop
lahf
cmp
repz
cmp
push
cmpsb
inc
popa
stos
fcmovu
out
or
jg
lods
aam
jae
or
jae
add
mov
inc
dec
pop
lea
sub
icebp
cld
popf
stos
out
aas
js
and
xor
fucomi
stos
fnstcw
pop
cmc
push
push
cwtl
lods
fwait
cmp
cwtl
adc
push
test
sbb
push
dec
es
sti
fcoms
jmp
popa
sbb
jns
pop
jne
or
inc
test
jmp
add
and
cli
repnz
inc
test
or
push
jo
adc
sub
mov
aad
leave
lods
pop
mov
cmp
pop
lcall
xor
push
dec
imul
jb
loope
sub
fld
out
mov
and
sahf
lods
pop
xchg
pop
cld
insl
inc
movsb
xchg
bound
adcb
and
adc
inc
push
cmp
aas
add
push
ficoml
and
bound
outsl
sbb
push
ror
aad
es
pusha
cmpb
mov
lret
dec
cwtl
add
cmp
mov
xor
jmp
stos
mov
out
mov
push
pop
aam
sbb
xor
in
jno
xchg
inc
sahf
mov
mov
out
push
test
jp
fstl
xchg
aam
lahf
sahf
iret
es
stos
jns
and
ds
aas
adc
popa
daa
cld
sub
jmp
sbb
xor
add
call
inc
mov
and
pop
in
xchg
mov
dec
dec
cwtl
shlb
insb
lock
cs
push
or
xor
lret
pushf
ljmp
aam
test
insl
in
cmp
cmp
mov
loopne
inc
fdivl
push
repnz
xchg
add
push
sbb
or
mov
stos
xor
in
testb
fisubrl
out
pusha
je
in
sub
aad
push
in
cmp
inc
dec
dec
fisttpll
inc
scas
fcoml
jns
sbb
test
mov
pop
pop
std
pop
pop
dec
enter
out
jns
call
dec
inc
pop
data16
mov
int3
cld
pop
inc
add
fldenv
lahf
adc
rcrl
xor
outsl
fidivrs
loopne
mov
jo
stos
jnp
add
out
mov
jnp
dec
insb
add
push
or
cmp
pop
loope
insb
inc
push
xor
xor
pop
fisubrl
jmp
xor
cld
imul
outsl
sub
aas
idivb
aas
add
and
sub
ljmp
cmp
xchg
add
roll
push
add
mov
loopne
push
test
js
arpl
sysret
scas
sbb
xor
xchg
jl
ret
iret
xchg
out
push
enter
mov
mov
xchg
xor
pop
adc
movsb
fs
popf
iret
mov
lret
push
in
and
cmpsl
or
xchg
xchg
out
xor
sub
mov
mov
sahf
lret
xor
push
sbbb
inc
jle
inc
movsb
xchg
jb
lea
sub
and
ret
cmpsl
mov
pop
xchg
sahf
fbld
adcb
mov
scas
aas
pop
jne
insl
fcomip
lea
sbb
sarb
sub
dec
aaa
std
xor
js
add
cmp
push
jp
inc
mov
aas
mov
dec
ss
add
out
jne
and
push
mov
popa
test
mov
mov
fstpl
int3
out
iret
adcl
test
int
mov
push
loop
sub
inc
cmpsl
decl
into
add
jp
enter
insb
sti
push
push
cmp
mov
and
fwait
cmp
data16
sahf
fdivp
lahf
paddsw
xchg
xchg
int3
adc
mov
hlt
sbb
das
mov
or
mov
push
lds
lea
mov
test
and
test
mov
int
inc
add
ret
jecxz
push
out
xchg
popa
mov
push
xor
adc
pop
mov
adc
adc
scas
imul
cld
or
dec
test
loope
iret
icebp
cmp
mul
test
mov
mov
fsubl
mov
inc
data16
es
fidivs
cmc
inc
xor
test
dec
and
sbb
mov
bound
mov
jle
gs
pop
stos
jecxz
lds
sub
jle
lret
testl
std
cltd
out
loope
dec
into
or
inc
and
lahf
xor
imul
push
jg
push
fcmovu
lods
and
jbe
stos
inc
bound
rorl
sbb
xor
and
add
and
mov
call
mov
arpl
cmp
popl
sbb
and
mov
scas
pop
sub
sahf
jne
sub
lea
sbb
mov
xor
xchg
aaa
movsl
xor
lods
mov
hlt
jmp
adcb
or
stc
pushf
mov
sahf
dec
orb
popf
mov
pop
jmp
lock
push
aaa
popf
orl
add
or
push
jbe
leave
push
rorl
cmc
int3
mov
stos
inc
push
adc
jbe
outsl
inc
iret
loopne
mov
movsb
adcl
pop
mov
jg
in
data16
ljmp
xlat
push
pop
fidivs
push
and
imul
and
sub
iret
cli
jae
inc
xchg
cld
pop
mov
dec
fsin
ret
insl
int
or
xchg
inc
inc
test
repnz
int
mov
mov
ds
ljmp
xor
ret
out
jg
cmp
and
int3
ret
mov
pop
idiv
in
cmp
mov
add
sbb
insl
jmp
xchg
js
jns
scas
mov
pop
sbb
add
and
jl
mov
dec
lret
pop
ja
xchg
aaa
jecxz
fbstp
pushf
push
sbb
in
scas
nop
cmp
shrb
jns
enter
jg
stc
lret
mov
pop
loope
stos
out
outsb
cltd
out
xchg
loopne
pop
inc
dec
ret
and
adc
jns
cmp
stos
adc
add
push
mov
inc
es
shll
xor
imul
or
cmp
mov
pop
sbb
iret
fwait
cmpsb
popl
sub
jmp
in
test
jle
jp
inc
pop
and
movsl
in
and
sti
jo
pop
iret
test
jecxz
lock
jo
out
imul
and
cs
lcall
and
push
cmp
jne
inc
and
arpl
xor
xchg
fstpt
or
cli
add
push
add
bound
add
cmp
dec
sub
icebp
sub
xor
pop
shll
inc
xor
enter
jg
push
in
pop
enter
ja
cltd
and
xor
movsb
fsubrs
and
cmc
imul
sti
std
repz
adc
and
imul
loopne
loope
cld
bound
sub
or
cld
lcall
mov
pop
push
inc
or
test
dec
in
aam
enter
addl
mov
cmpsl
mov
fistpl
ret
and
inc
jae
aad
mov
out
frndint
and
fstpl
adc
dec
repz
push
pusha
dec
movsb
daa
shlb
lret
cmp
leave
mov
xor
in
hlt
test
inc
mov
stos
imul
fs
inc
dec
mov
adc
incl
sbb
mov
aaa
cmp
rclb
jl
int3
lret
out
xor
test
fs
cld
sbbb
jns
push
cmp
out
ljmp
adc
adc
cmp
or
je
or
mov
xchg
cmpsb
or
dec
push
dec
iret
add
cmp
jg
movsl
adc
dec
xor
mov
insl
adc
shll
adc
out
push
jmp
fists
shrl
add
push
sbb
out
lcall
shl
mov
in
pop
push
addl
add
inc
mov
jmp
push
call
dec
lahf
xchg
mov
mov
or
xor
jb
or
leave
cmp
fbstp
or
and
add
inc
pop
dec
imul
rcrl
mov
jmp
sti
mov
icebp
inc
sub
daa
sub
aas
data16
outsl
insl
popf
sub
inc
fisubl
sbb
xor
fsubs
pusha
loope
adc
adc
ja
imul
push
fists
ljmp
fcoml
pop
sbb
pop
xor
fsubl
cmp
xchg
adc
pop
out
jo
push
sahf
lea
jmp
mov
sbbl
or
aam
cs
in
gs
jl
pop
cld
repz
mov
dec
shrl
push
scas
add
test
ficoml
jne
es
jl
inc
add
xchg
jle
push
pop
ljmp
cld
sub
jecxz
add
sub
cmp
push
lock
enter
inc
pop
stos
es
movsl
enter
popf
xchg
push
push
lret
ret
and
sbb
pop
aaa
arpl
fsubrs
sub
stos
xchg
shrl
aam
dec
mov
adc
jg
imul
pop
or
mov
jp
or
add
rcl
jns
mov
push
dec
cld
pop
aaa
cmp
push
shrb
xor
dec
out
aas
je
arpl
das
push
or
mov
icebp
repnz
or
xchg
push
and
lods
mov
or
jno
jb
pop
ret
lret
push
arpl
push
or
loope
es
jmp
aam
adc
and
cmp
cmp
aaa
mov
pop
icebp
mov
inc
lea
sbb
push
inc
xchg
or
ret
int
and
sbb
inc
push
jno
mov
test
sbb
cmpsl
pop
cwtl
addr16
addb
sbb
lret
mov
pop
stos
sbb
inc
adc
cwtl
mov
sub
dec
sub
sbb
insb
cld
add
mov
mov
fiadds
rolb
stos
outsl
scas
enter
mov
in
pop
lock
jns
sti
popf
mov
ljmp
mov
xchg
cmp
call
in
fiadds
jp
jle
push
xchg
mov
dec
sbb
pusha
imul
add
pop
push
adc
inc
or
sarl
out
mov
dec
mov
sub
out
repnz
mov
mov
dec
adc
mov
sub
push
addl
imul
and
sbb
out
cmp
jmp
mov
dec
pop
push
mov
jns
out
jns
movsl
xlat
and
push
mov
and
idiv
mov
les
pop
xchg
fidivrs
push
push
sub
test
jl
jmp
sub
or
shl
cwtl
lcall
fsubrl
push
subb
divb
cmpsl
sahf
xchg
sub
mov
scas
cmp
mov
lahf
lret
pop
into
sub
jecxz,pn
call
mov
push
shlb
loope
inc
mov
jg
inc
test
in
mov
stos
sub
cwtd
ret
ret
push
dec
cmp
movsl
adc
mov
dec
std
and
ret
sub
sti
sbb
sahf
ljmp
push
or
sbb
fsubrs
in
mov
rol
cli
mov
push
in
sbb
jb
outsb
pop
and
jae
pop
insl
jp
ja
mov
loope
pop
stos
and
lret
roll
les
rorb
rcrl
jg
jo
js
cmp
mov
xchg
cli
stos
mov
stos
ss
pop
loop
add
divl
push
shrl
dec
jmp
adc
lahf
and
xchg
in
aas
xchg
add
roll
lret
pusha
cwtl
jno
repz
sub
cmpsb
aaa
daa
lahf
pop
bound
and
data16
inc
bound
rolb
jl
sub
xchg
jle
roll
imul
xor
mov
xor
nop
or
scas
shufps
aad
ja
pop
pushf
dec
mov
pop
stos
push
add
xor
inc
mov
sti
into
enter
adc
into
cltd
in
mov
or
in
stc
push
push
nop
cmp
rorl
sub
ss
shr
cmp
lea
mov
adc
out
shrl
icebp
inc
lret
jbe
adc
or
mov
and
adc
repnz
ja
dec
sbb
push
add
sub
xchg
stos
hlt
xchg
jmp
nop
sbb
dec
push
in
aaa
in
cmpsb
pop
and
pushf
je
idivl
std
imul
inc
fcoml
xlat
mov
test
pop
jne
jp
jb
shlb
xchg
arpl
in
stos
cmp
cwtl
aam
mov
adc
jmp
bound
sbb
shrb
pop
jae
xchg
or
stos
jne
push
push
out
mov
shl
xchg
pop
add
cmp
pushf
insb
or
aaa
and
inc
das
cmc
ret
pop
mov
jo
daa
xor
xchg
or
push
ret
std
testb
notl
fists
lock
adc
inc
out
mov
mov
mov
lods
rcr
mov
xor
sahf
into
aad
and
dec
dec
push
ljmp
lods
dec
mull
pop
jnp
xchg
mov
outsl
mov
mov
xlat
push
pop
sti
out
jno
repz
push
pusha
inc
push
sti
cmp
inc
or
sub
jmp
xchg
popf
bound
pushf
inc
mov
add
push
mov
add
or
test
test
xor
out
dec
pusha
int
or
push
shll
fiaddl
jge
jle
cmp
jae
sbb
and
inc
mov
aas
mov
sub
fimuls
pop
inc
fdivrs
mov
test
sbb
lds
into
lcall
outsb
ss
or
adc
lea
jae
je
jb
test
out
stos
cld
nop
push
addr16
js
cmp
inc
mov
je
out
dec
mov
xor
ss
mov
pop
or
pop
repz
sbb
mov
int3
sub
pop
les
icebp
cwtl
movsb
dec
mov
fwait
adc
jo
lcall
jb
out
mov
xchg
daa
mov
xchg
and
push
sub
je
jl
xor
jo
push
fsts
push
int3
and
xor
leave
pop
mov
mov
lds
push
and
dec
inc
in
pop
das
pushf
pop
inc
test
lds
mov
sub
xor
lret
gs
repz
xor
mov
pushf
xchg
sub
or
pop
pop
aam
mov
pushf
fistpl
sub
mov
or
out
add
lods
lods
mov
mov
lock
inc
inc
adc
lods
adc
lods
mov
and
fimuls
aad
mov
out
pop
push
enter
sub
inc
lds
adc
addr16
xlat
push
or
testb
or
push
pop
rolb
outsl
pop
ss
sbb
jo
or
mov
jb
pushf
or
mov
mov
push
pop
popa
outsl
sbb
jle
mov
sbb
in
xor
xchg
mov
into
pop
aad
stos
push
adc
nop
pop
jg
mov
lods
mov
pop
push
or
mov
insb
popf
cli
call
in
cmp
imul
adc
xor
gs
lret
sub
push
adc
sbbl
push
pop
mov
clc
sbb
dec
stc
lcall
inc
or
pop
fs
adc
xor
cmc
daa
rolb
fwait
movups
mov
aaa
mov
adc
shll
push
ja
lcall
stos
push
repnz
out
push
mov
jbe
movsl
jg,pt
mov
in
adc
movsb
xor
cwtl
sbb
mov
mov
add
ficompl
rcll
std
das
xchg
and
sbb
pop
fidivl
movsl
mov
js
sbb
xlat
mov
inc
and
push
pop
pop
mov
mov
int3
push
lock
mov
subb
test
popa
insl
inc
lret
dec
outsl
mov
stc
jo
ret
jp
xchg
les
cltd
lock
mov
out
dec
repz
pop
mov
outsb
xor
push
stc
cltd
jb
clc
int3
push
xchg
lods
xchg
ret
flds
cmpsb
in
sarb
outsb
sbb
cmp
loop
jle
rcr
sub
popa
inc
jg
push
je
nop
push
in
mov
repnz
shlb
pop
push
cmp
adc
ds
adc
sbb
shl
std
jno
add
aas
add
lahf
xchg
jmp
push
fwait
lock
adc
sub
jge
push
or
fs
out
inc
push
sbb
pop
bound
and
mov
or
jp
in
jl
cs
and
pusha
push
fucomip
mov
clc
push
mov
pop
imull
in
test
sub
or
jp
fimuls
cmpsl
sti
jb
inc
xchg
pop
adc
fsubrl
add
add
testl
mov
call
shr
push
cmp
xchg
inc
and
mov
mov
push
mov
push
cmp
testb
lods
clc
pusha
call
mov
pop
loop
fwait
pop
cmpsl
sub
xchg
arpl
cmp
cmp
movsl
aaa
mov
mov
popf
adc
cmpsl
sub
out
sti
cmp
jp
popa
fwait
inc
xor
jno
push
push
gs
xchg
dec
scas
or
pushf
fdivl
stos
mov
push
jle
lods
sbb
sub
xchg
adc
mov
sbb
scas
cmc
jl
inc
xor
add
ds
pop
cmpsb
into
pop
fdivl
jmp
add
cmp
xchg
loope
and
jnp
mov
movsl
push
jnp
push
cmpsl
push
in
or
push
imul
sub
xor
insl
mov
repnz
adc
add
pop
out
mov
mov
in
fcoml
jecxz
jmp
mov
repnz
icebp
mov
scas
std
pop
ljmp
sahf
or
out
xlat
roll
mov
sub
cmpsb
mov
das
outsl
or
out
aam
push
movsb
hlt
xchg
lret
sub
fnsave
mov
cwtl
sbb
cmp
mov
or
out
adc
fldl
inc
push
lods
pop
sub
xor
enter
sarb
and
add
jl
mov
pop
mov
cli
pop
xor
mov
cmp
loop
int3
sub
xchg
sti
sub
sub
lahf
adc
jbe
mov
mov
xchg
dec
imulb
and
inc
fiaddl
xor
add
and
push
pop
push
inc
cli
pop
sub
mov
les
fcmovnb
pop
fcomps
ror
rclb
scas
dec
cli
inc
jl
insb
insl
std
repnz
pop
jg
lret
pop
push
mov
dec
ret
pop
jbe
mov
push
add
jne
jnp,pt
mov
or
sbb
push
xchg
xor
push
loopne
dec
fisttpl
mov
out
or
into
pop
mov
lea
inc
cwtl
pop
adc
lods
sbb
or
inc
setle
jns
sub
ljmp
mov
sub
pushf
cmp
jecxz
ljmp
mov
mov
fdivrl
shl
push
hlt
xor
mov
filds
dec
mov
idivb
je
fwait
ret
icebp
jo
xor
outsb
mov
lcall
mov
mov
sub
dec
imulb
fisubrs
cmp
sti
lret
out
or
out
mov
dec
xlat
mov
idivb
sbb
mov
xor
popa
cmp
xor
jecxz
lret
xor
in
xor
mov
ss
ret
cmpsb
add
sti
dec
mov
subb
xor
cwtl
ja
add
es
movsl
loope
in
sti
adc
jo
push
push
and
and
xchg
push
fnsave
jno
push
mov
cld
daa
in
outsb
in
insb
adc
das
add
push
push
jo
loope
pop
into
test
xor
test
push
in
rcrl
pop
add
push
cmc
retw
hlt
lret
xor
into
add
and
movsl
nopl
adc
fnsave
jbe
sub
xor
jmp
in
mov
js
mov
xor
xor
lods
add
fs
inc
leave
orb
push
cmc
dec
or
popa
cmpsl
lahf
int3
stos
rol
push
mov
sbb
push
pop
mov
shll
lahf
cltd
and
push
cmp
add
mov
jmp
insl
sbbb
notb
sub
pop
mov
mov
cmpsb
das
loop
js
pop
sti
cwtl
add
dec
push
cmp
fists
sub
addl
fs
dec
dec
push
arpl
iret
outsl
into
in
inc
pop
out
lret
out
cmp
cmp
dec
lock
stc
in
jp
scas
das
push
nop
in
pop
inc
test
dec
movl
out
movsl
pop
add
call
adc
jno
sub
push
adc
pop
xchg
mov
adc
sub
mov
fldt
imul
pop
in
push
jl
adc
movsb
sbb
test
mov
add
iret
cmp
push
jp
mov
cvttps2pi
inc
fsts
pop
xor
sarl
adc
aam
jge
xchg
aad
ljmp
fsubrl
arpl
dec
pop
push
mov
shl
adc
icebp
sbbl
jo
flds
inc
push
loopne
fs
push
sahf
ds
mov
xchg
add
fucomp
sub
xchg
inc
sbb
push
add
test
or
in
xchg
lds
mov
bound
sahf
jl
aaa
adc
push
imul
int3
insl
sbb
xchg
mov
add
sarb
sti
jg
push
push
mov
push
test
out
ljmp
xor
leave
aas
out
or
jns
pop
mov
jno
dec
jl
dec
out
pop
test
scas
out
scas
hlt
aaa
das
mov
adc
xor
or
jne
dec
mov
cmp
jb
pushl
xchg
xor
or
out
jp
lcall
mov
jnp
mov
cmp
push
adc
xchg
popa
in
mov
pop
aad
mov
clc
mov
push
cwtl
loop
and
jnp
sti
lcall
mov
cmp
mov
fnstcw
loope
cltd
nop
divl
jle
mov
push
aad
cmp
jle
xorl
mov
mov
mov
je
pop
sub
mov
divb
push
xor
inc
movsl
jle
inc
add
icebp
sbb
mov
mov
add
mov
clc
mov
loope
movsb
pop
cli
dec
cmp
and
cli
fwait
push
cmp
test
ret
inc
xor
rorb
nop
scas
push
mov
lret
inc
loopne
inc
cs
inc
jnp
dec
mov
push
out
cld
lret
pop
out
psllw
cli
push
mov
pop
mov
xchg
adc
int
cmc
mov
stos
fcmovnbe
xchg
shlb
pop
in
fistpll
icebp
xchg
and
movsl
sub
fwait
xchg
xchg
fisubrl
in
gs
sub
cwtl
pop
inc
xor
push
lods
daa
mov
ja
sbb
mov
cmc
insl
mov
xchg
test
popf
test
pushf
cmpsb
mov
add
jnp
repnz
nop
dec
loope
popf
hlt
pop
sbb
mov
mov
xchg
sbb
cmpl
pop
out
fstpl
fs
jmp
lcall
pop
subb
mov
xchg
mov
ljmp
les
fwait
movsl
pop
push
filds
pop
jle
jb
xchg
cltd
push
sub
divb
xor
insb
fs
out
insl
mov
add
imul
hlt
addb
sbb
lds
pop
popa
insb
test
aam
cmpsl
cltd
mov
lock
dec
ss
fcoms
lock
dec
jbe
dec
or
arpl
rcll
jbe
mov
out
loopne
mov
cld
fistpll
jne
cmp
movsl
sub
call
aas
scas
mov
sub
and
test
xchg
xor
insl
lds
in
cwtl
popf
or
sub
xchg
xor
clc
pop
dec
lods
cmp
sub
or
and
mov
dec
je
xorb
scas
enter
dec
and
push
cmpsl
or
sub
add
cmp
mov
fcoms
mov
mov
fnstcw
inc
mov
pop
loopne
lods
inc
nop
leave
push
add
stos
call
cmp
cmp
aas
in
mov
movsl
out
clc
cs
push
fwait
push
dec
mov
adc
and
xor
jp
cltd
jg
scas
adc
pop
aas
int3
or
xor
movsl
jo
mov
add
sarb
ret
popf
inc
and
sbb
add
xor
test
jne
adc
lods
mov
mov
out
fisttpl
iret
xor
repnz
iret
push
push
jns
icebp
inc
add
in
stc
push
loop
dec
push
ficompl
lock
rol
loopne
cmp
mov
mov
mov
jle
data16
inc
jge
rcr
ljmp
inc
inc
movl
mov
cmp
fsub
repnz
mov
inc
sub
insb
movsl
shr
add
hlt
into
jg
je
jne
adc
jmp
int
jnp
xor
sub
data16
fiaddl
in
mov
cmp
cmp
fstp
sahf
mov
adc
mov
xlat
pop
jae
repz
sub
xor
insl
sub
mov
push
push
and
out
cmpsl
push
and
iret
pop
popa
push
sbb
aam
sbb
jnp
enter
pop
mov
lret
mov
test
vcvttpd2dqx
sti
push
movb
dec
mov
cltd
pop
out
ret
ficoml
jecxz
and
cmp
jg
sar
mov
jle
pop
int
popa
cltd
into
inc
testl
pop
pop
es
cmp
push
dec
insb
fnstcw
popa
jno
add
lea
xor
mov
jg
cmc
cwtl
movsl
mov
mov
ret
arpl
loope
in
sahf
xchg
sbb
xlat
das
add
cmpl
test
cmp
push
bound
xchg
movsb
insl
fwait
push
dec
jp
arpl
lret
pop
cli
mov
pop
sbb
jmp
mov
cmp
ret
shrl
and
jg
cmpsl
rorl
add
repnz
sbb
push
cmp
sbb
push
adc
jge
xchg
sub
or
sarl
push
xchg
sub
mov
imul
xchg
mov
xor
insl
cld
jbe
sub
into
sub
sbb
movsb
jl
add
jmp
imul
xchg
adc
adc
push
sbb
test
sbb
adc
pop
sti
out
popf
ret
push
cmpsb
iret
imul
mov
cmp
or
fs
pop
pop
or
pop
fdivl
cmp
dec
cli
in
xor
and
int3
sti
jg
es
xchg
inc
es
pop
idivb
mov
or
je
mul
test
sbb
inc
outsb
addr16
or
loopne
sub
int3
jne
insl
mov
gs
mov
pop
cmp
jnp
sub
xchg
out
mov
mov
jo
sub
sti
repnz
sahf
scas
add
popa
cli
rolb
int
mov
add
sub
lret
xor
orb
or
xchg
imul
in
sbb
aam
jp
add
ret
hlt
repz
andl
js
fsubl
hlt
inc
stos
inc
daa
loopne
sbb
add
jg
cld
pop
sub
insl
gs
add
icebp
hlt
adc
jae
and
sti
repnz
jle
add
jp
sbb
jbe
mov
push
xchg
aas
push
xchg
fildl
mov
inc
sub
jne
mov
push
xchg
cmp
popf
ja
insl
xchg
jb
mov
xor
fldl
dec
sbb
cmp
sbb
xchg
lahf
push
mov
ror
cltd
faddl
mov
xchg
imul
mov
cmpsl
mov
dec
jg
or
data16
push
and
sub
inc
fdivrs
xchg
dec
inc
xor
hlt
enter
out
or
sti
sbb
clc
cmpsb
sbb
sahf
xor
ret
fstl
push
shll
cmp
jle
xor
mov
and
test
dec
lods
in
jl
rorb
adc
into
pop
int3
bound
pop
pop
mov
mov
or
jmp
mov
push
ret
sbbl
addr16
mov
add
inc
in
pop
and
mov
jecxz
out
sbb
xlat
dec
sahf
dec
flds
movsl
mov
adc
jp
lret
scas
fcomi
addl
pop
dec
xor
daa
pop
push
inc
or
sub
mov
jecxz
cli
setnp
push
test
popa
std
iret
xchg
sbb
inc
and
rorl
and
rorl
repz
stos
mov
mov
shlb
mov
xor
scas
imul
and
out
xchg
xchg
fidivrs
std
inc
in
inc
add
arpl
push
int3
cmpsb
xor
test
lea
fidivrl
insl
mov
gs
cmovns
pop
lcall
addb
shlb
xor
dec
xchg
decl
aam
hlt
lret
mov
xor
lcall
and
pop
add
sbb
popl
aam
push
lret
scas
adc
addl
test
inc
out
in
testb
movsl
xchg
xchg
adc
xchg
or
call
mov
pusha
stc
out
popa
mov
das
xlat
add
mov
je
mov
dec
push
or
movsb
adc
jb
add
xchg
push
out
mov
aam
mov
addl
lret
mov
mov
lea
je
fcomps
aaa
scas
ljmp
loop
imul
adc
sti
adc
arpl
xchg
std
bound
rcrb
std
inc
or
sbb
xchg
arpl
and
add
sahf
out
add
pop
scas
test
mov
pop
and
add
jne
pop
inc
mov
mov
mov
and
out
mov
ffree
xchg
aad
xor
push
push
movsl
xlat
popa
fldln2
into
cwtl
xlat
mov
push
dec
or
aaa
adc
mov
mov
pop
pop
repnz
adc
xchg
ja
std
cmp
jg
das
rorl
addr16
mov
or
ficoml
xchg
mov
or
addr16
sub
or
js
sub
mov
jmp
mov
xchg
xchg
and
pop
and
add
pushf
and
inc
push
lds
dec
pop
testl
sbb
lods
mov
test
xor
mov
insb
loop
stc
call
inc
repnz
faddl
xor
sbb
int3
lock
add
insb
mov
push
inc
mov
mov
mov
adc
add
adc
sub
into
mov
pop
sar
into
pop
push
mov
adc
add
sbb
push
sti
in
dec
lds
imul
pop
adc
xor
es
flds
lret
mov
push
or
shrb
and
push
jg
ds
mov
jnp
cmpsb
and
popa
sbb
pop
sub
jnp
jge
add
aaa
mov
xor
pop
inc
cmp
in
in
ds
xchg
xor
xchg
pusha
xor
mov
pop
div
jmp
add
insb
cltd
inc
dec
decb
jge
aam
adc
data16
shll
and
test
jae
call
scas
push
in
push
or
loop
mov
sub
mov
mov
mov
mov
arpl
push
sbb
mov
inc
mov
aas
pop
add
xor
movsl
ja
adc
mov
nop
stc
sub
mov
and
sub
sub
xchg
sahf
xor
lods
sub
outsb
mov
adc
jp
inc
push
mov
imul
and
push
test
rorb
ret
cltd
and
int
js
push
mov
out
dec
inc
xor
mov
loop
movsb
add
jmp
xchg
sbb
in
sub
and
and
cmp
shlb
or
or
adc
pop
lock
imul
jo
and
nop
sub
lock
inc
dec
jns
ret
sub
in
outsl
gs
add
fimuls
popf
push
jns
rolb
gs
jle
pmaxub
xlat
cmp
fucomp
mov
test
cmovg
pop
adc
jmp
cmp
push
mov
popa
jns
or
push
stos
mov
adcl
out
xor
push
out
jle
stos
jns
int
or
icebp
sar
movsb
int
mov
dec
aam
cs
fs
mov
ja
and
jg
fiadds
lods
arpl
mov
pop
ds
mov
cltd
pop
sub
or
jno
mov
push
jge
and
lret
loope
add
loop
imul
push
mov
add
sti
push
enter
dec
pop
sub
push
outsb
sbb
xchg
jo
mulb
stos
jae
or
mov
mov
push
xor
jp
addr16
ficoms
mov
xchg
popa
aas
das
push
rol
leave
pop
add
and
pop
or
fists
outsb
xor
xchg
or
cld
adc
mov
xor
cmp
jp
divb
cli
out
mov
and
adc
sbb
cltd
andl
mov
jmp
pop
mov
mov
push
hlt
adc
cmpsl
loope,pn
lret
nop
jne
dec
jle
mov
pop
lods
mov
cld
mov
out
and
and
pcmpgtd
aaa
pop
fists
lret
add
popa
adc
ss
sbb
dec
and
mov
cmp
and
and
or
and
mov
xlat
cmpsl
cs
push
cmc
jecxz
int
repz
adc
arpl
or
xlat
jb
inc
testb
or
test
add
cli
mov
inc
mov
add
test
nop
xchg
cltd
pop
fisttpll
add
mov
fidivrs
in
shrb
shlb
ds
xchg
xchg
jmp
aaa
popf
incb
adc
sbb
sbb
push
loopne
subb
movsl
leave
push
adc
pop
cmp
cs
jge
mov
jae
adc
sub
inc
adc
rorb
xchg
jo
sbb
cli
lret
daa
or
sbb
xchg
fwait
and
stc
jae
push
cld
mov
and
cs
sbb
bswap
repnz
adcl
xor
int
push
pop
dec
out
inc
mov
lea
jmp
outsb
pop
aad
test
jne
mov
outsl
ljmp
jp
push
pusha
imul
jno
xchg
pop
les
inc
cmc
push
sub
dec
subb
pop
jmp
icebp
inc
xchg
mov
scas
add
push
mov
pusha
sbb
nop
xchg
and
sarl
outsb
mov
mov
dec
ss
jle
mov
or
ss
jae
mov
mov
xlat
xor
push
sahf
movsl
mov
cmpsb
repz
aam
xor
movsb
out
rcr
pusha
pop
sbb
icebp
mov
mov
fs
push
cld
ljmp
xor
xchg
jae
pop
aas
push
xchg
sbb
insl
inc
dec
fwait
or
cmp
or
xchg
bound
pop
sub
loope
arpl
in
pop
pop
sbb
lods
int
loopne
sub
outsb
lret
cltd
push
add
imull
hlt
xchg
xchg
jo
aas
cmp
xor
or
flds
cmpsb
sbb
out
das
jmp
pop
sub
ret
mov
sti
mov
push
popf
fidivl
mov
sbb
pop
xor
add
xchg
popl
rcrb
pop
inc
popf
popf
inc
call
jnp
mov
pop
addb
mov
sbb
lds
into
add
call
jne
sub
xchg
inc
sbb
mov
jbe
loope
imul
sub
cmp
scas
add
xor
test
lret
jge
gs
lcall
insb
cmp
loopne
pop
push
xchg
shrb
or
dec
cs
mov
sti
add
test
or
mov
jno
mov
inc
add
rclb
cwtl
sub
mov
or
or
scas
ret
ds
cwtl
cmp
sbb
and
in
mov
xlat
cmpsb
jecxz
inc
mov
sbb
sti
inc
jbe
cld
inc
pop
mov
xor
int
in
lea
add
add
imul
cmp
mov
sub
cli
xor
pop
push
aam
cmpb
xlat
outsb
out
lock
mov
pop
hlt
dec
push
ds
mov
outsl
into
loop
into
mov
aam
jo
mov
sub
inc
mov
sti
aas
push
mov
dec
test
out
xchg
jle
or
xchg
outsl
aad
shll
dec
sbb
xchg
jecxz
sbb
ja
jne
mov
xchg
dec
dec
xchg
sub
jmp
subb
adc
out
mov
addr16
mov
xchg
ss
rorb
je
jmp
add
lea
jae
ret
scas
test
cld
lret
in
jne
mov
add
and
insb
fstp
fucomi
nop
push
or
sub
mov
sbb
xlat
or
pop
cmc
in
nop
push
popf
std
adc
dec
fdivr
ljmp
scas
push
lods
inc
adc
mov
lods
lcall
mov
jl
data16
cmp
ret
mov
sub
add
fcoms
jo
mov
imul
mov
adc
sub
adc
mov
pop
xchg
jmp
hlt
aad
ds
mov
js
subb
or
push
mov
mov
sahf
std
sub
repz
sbb
push
add
push
jecxz
int3
ljmp
inc
mov
adc
out
nop
jns
xchg
adc
loopne
mov
push
lcall
in
sbb
call
sbb
fildll
push
sbb
fwait
push
mov
aas
cmp
je
cmp
cmp
lds
arpl
mov
cli
inc
cmpsb
aam
mov
das
and
xor
xor
daa
aas
cs
in
fsts
aam
jo
inc
pop
mov
mov
xor
or
lods
or
and
pop
int3
out
mov
adc
cmc
add
inc
push
xchg
into
adc
movsb
jns
sbb
inc
inc
xor
xor
mov
mov
or
mov
inc
dec
inc
sbb
cmp
orb
mov
iret
and
mov
stc
rcll
ja
and
mov
add
pop
in
ret
scas
stos
lock
rcl
push
incb
mov
and
mov
pop
fisubrl
outsb
dec
push
fdivrp
outsb
sbb
xchg
xchg
int
movsl
pop
mov
pop
jo
push
test
pushf
push
adc
cld
add
shlb
fists
cmp
add
rcll
sub
out
rol
sub
nop
insb
mov
xchg
repnz
movsb
int3
cmpsl
lds
jno
fdivl
sub
jno
xor
inc
and
push
jle
push
leave
mov
outsl
sbb
sbb
mov
jg
inc
push
dec
sub
mov
pop
inc
sub
mov
add
cmp
dec
xor
mov
pop
and
pop
out
xchg
sub
out
xchg
popf
aad
jo
icebp
jp
mov
jae
cmc
dec
pop
out
imul
cmpsb
jbe
lahf
inc
js
mov
icebp
jg
lret
stc
nop
pusha
test
adc
xchg
hlt
dec
test
test
or
mov
mov
fs
push
inc
sahf
out
sub
cmpsl
sbb
lret
aas
or
jle
inc
pop
lret
sbb
movsb
pop
nop
sti
mov
das
sub
in
fwait
mov
cmp
mov
pop
mov
jae
int
and
jno
gs
mov
fs
cmpsl
push
cmpb
add
mov
or
clc
mov
dec
push
push
decb
movsb
sbb
xor
insb
test
cli
add
lea
adc
fdivp
test
adc
sti
js
push
cmp
xchg
scas
hlt
bound
xlat
dec
pop
cmp
lock
mov
bound
out
or
addr16
adc
shrl
js
jge
pop
aas
jg
rorl
cmp
shrb
add
xor
xor
and
aad
lret
mov
fstl
loop
xchg
sub
xchg
popa
dec
push
iret
scas
xor
jns
sbb
faddp
mov
xor
loope
les
pop
in
push
dec
fistps
push
mov
xor
mov
inc
les
out
push
pop
jle
jl
adc
idiv
repnz
pop
cmpl
or
ret
jnp
aas
repnz
add
cmp
xor
aaa
popa
aaa
les
sub
je
xor
ret
mov
std
jo
std
ja
mov
sbb
cmp
fistps
fwait
ss
iret
in
dec
sbbb
sub
sub
push
sbb
push
cld
or
lea
out
aas
inc
mov
dec
pop
iret
push
pop
pop
sti
bound
adc
ja
scas
jnp
jmp
pop
js
adc
xchg
hlt
mov
inc
cmc
or
mov
lods
cmp
lahf
mov
cmc
mov
dec
add
fidivs
dec
jge
inc
inc
outsl
adc
divl
mov
cltd
add
jecxz
es
sbb
mov
test
sbb
sbb
mov
push
cmp
lods
ficomps
xchg
in
mov
das
pushf
push
push
cmc
sub
push
fdivl
nop
cmp
or
in
fcoms
push
loop
fcompl
pop
xor
aaa
inc
lock
in
dec
frstor
out
dec
fisttpl
mov
jno
orl
add
out
scas
outsb
pop
dec
popf
or
in
fmul
xchg
fbstp
push
lock
push
pop
inc
loopne
push
ds
imul
stc
sarb
mov
les
int
cmc
test
inc
fs
push
shrl
pop
push
and
aam
pushf
outsb
scas
pop
cmp
imul
adc
lds
bswap
cli
or
cmp
adc
std
clc
or
out
cmpsb
xchg
insb
adc
pop
popf
cwtl
jmp
sub
int3
xchg
cmpl
adc
pop
les
lock
mov
push
sarb
cmp
or
sbb
or
push
js
fisubs
pop
inc
adc
nop
cmp
stos
xchg
fistpl
jno
lods
outsb
dec
sbb
sbb
jle
sub
fwait
lcall
mov
and
dec
sub
addr16
out
popa
das
add
out
push
jmp
push
add
dec
cltd
sub
pop
and
add
or
mov
cmp
lods
push
cmp
xchg
loopne
push
pop
adc
cmp
andl
pop
add
inc
dec
pushf
ficomps
push
mov
push
pop
test
nop
dec
jno
push
jl
shl
stc
imul
cltd
pop
lahf
cwtl
aas
dec
push
mov
in
mov
xchg
popf
mov
pop
call
push
and
add
inc
insb
dec
cmp
xor
pop
stos
loope
cmpsb
xor
adc
push
je
inc
fnstsw
ficompl
mov
inc
fildll
push
add
cmpb
pushf
js
stc
push
lahf
and
lahf
mov
insb
stos
enter
inc
dec
sub
push
xchg
ret
or
or
popf
into
cmp
lods
sti
scas
dec
mov
add
arpl
xchg
cmp
adc
popa
hlt
jg
test
nop
std
mov
movl
jge
movsb
cltd
ja
sub
xor
cld
test
push
sbb
incl
loope
jbe
xchg
sbbb
and
push
and
mov
loopne
push
imul
pop
xlat
leave
lcall
push
xor
adc
xchg
in
rorb
or
sub
lahf
out
pop
ror
jbe
sub
shl
clc
fwait
pop
and
ja
xor
adcl
inc
fcmovu
xchg
cltd
adc
push
ss
test
jae
arpl
xor
or
jle
mov
pop
sub
aas
icebp
cltd
in
jecxz
scas
mov
mov
cmc
adcl
in
repnz
mov
and
xchg
das
js
sub
in
or
movsl
dec
sar
mov
repz
xor
aad
jno
pop
popa
addl
scas
jl
movsb
mov
test
mov
mov
mov
dec
or
inc
fsubl
pop
das
lret
mov
mov
jbe
loope
jae
in
xor
fs
movsb
bound
jecxz
jns
mov
loop
dec
lock
mov
insl
jae
jmp
mov
pop
fists
add
lock
xlat
pcmpgtw
push
jo
sar
add
frstor
jnp
imul
loope
imul
test
push
shll
cld
mov
arpl
dec
push
push
jp
cwtl
aas
dec
lock
out
pop
add
add
imul
mov
lea
adc
mull
jge
push
pop
test
inc
mov
mov
test
insl
jmp
mov
cs
jmp
and
fldcw
pop
jge
das
xor
imull
push
aaa
xlat
mov
pushf
pop
mov
push
add
cmp
and
in
jb
xchg
pop
mov
mov
in
inc
and
sub
in
or
inc
sub
and
sahf
hlt
push
test
and
out
hlt
mov
mov
cmpsb
mov
mov
mov
xor
lcall
roll
mov
ret
pop
dec
pop
adc
sub
adcl
xchg
rolb
mov
jmp
adc
jge
xchg
xor
movsl
pop
and
mov
loope
js
sbb
call
imul
cmp
sahf
push
dec
in
fldl
cmp
loope
lahf
inc
mov
xor
jge
aad
ret
xorl
mov
pop
xor
mov
movsl
cmc
incl
subb
data16
and
dec
nop
aam
arpl
sub
addr16
fildl
or
and
cmpsl
stc
hlt
add
shrb
shll
stos
inc
bound
push
inc
dec
stos
push
add
loopne
out
push
or
xor
mov
jle
loop
mov
outsl
or
cs
jae
sub
mov
mov
int
repnz
pop
into
lock
scas
push
jge
add
sar
mov
add
cmpsl
jns
hlt
repnz
xchg
push
add
mov
pop
cmpsl
sti
std
mov
fwait
mov
cmp
dec
dec
fbld
adc
gs
sub
lcall
push
mov
xchg
pop
ss
aaa
insl
push
daa
cmp
push
jb
jmp
repz
add
cltd
or
rcrb
call
lock
les
insl
ljmp
orb
js
cmp
dec
push
imul
test
xchg
sahf
xor
nop
nop
aaa
add
jg
mov
ja
mov
dec
cltd
xor
pop
pushf
xchg
jnp
adc
jnp
cmp
inc
aad
xlat
pop
fcmovb
paddsb
lods
icebp
and
inc
inc
add
mov
cmc
in
outsl
rclb
cmp
xchg
outsl
jo
enter
js
in
mov
sub
testl
push
jnp
stc
xor
mov
inc
push
xor
test
insl
push
cltd
dec
fst
rorl
jle
out
push
cmp
loop
pop
movups
je
popa
pop
jg
jp
ljmp
inc
cli
lahf
jecxz
xor
cmp
push
add
push
mov
insl
mov
inc
jle
jecxz
adc
shrb
jp
sub
and
jl
rcl
stos
add
sub
sti
out
inc
jns
dec
adc
bound
cmp
push
push
mov
sub
adc
inc
jbe
test
imul
in
jne
lods
data16
pop
xchg
xchg
adc
push
inc
mov
neg
mov
mov
inc
in
pop
sahf
fsubp
mov
dec
jno
in
jb
sub
cmpsb
je
aas
insb
int3
fistl
imul
xchg
pop
jno
xor
clc
aaa
sahf
mov
xchg
test
sub
mov
xor
lods
inc
int
mov
stos
jecxz
and
jge
mov
mov
xchg
push
xor
arpl
test
xchg
mov
jae
inc
insl
lds
orb
in
jb
mov
fnstsw
dec
mov
xor
inc
push
inc
addr16
out
int3
adc
sti
lds
js
addr16
js
aam
adc
loopne
lea
inc
push
out
test
lods
xor
popa
xor
cmc
ds
or
nop
test
lock
test
cmp
jb
sbb
mov
leave
cmp
stos
cmp
pop
and
sbb
in
mov
xor
push
cwtd
repz
fwait
daa
add
inc
push
andl
ljmp
dec
shll
andl
js
inc
sbb
lds
movsb
fstpt
mov
add
pushf
pushf
in
inc
lock
xchg
adc
sbb
xor
sarb
mov
adc
call
test
sarb
adc
lret
jno
push
sbb
aad
stc
inc
outsl
ret
sti
fdivr
push
push
lds
pushl
and
xchg
pushf
xor
and
fcomps
lea
test
rorb
xchg
push
mov
push
mov
sub
in
lods
bound
imulb
hlt
cmp
aas
inc
lret
adc
and
push
decl
jo
jno
adc
int
shlb
mov
dec
loopne
test
fwait
mov
mov
mov
mov
in
adc
test
jl
ds
aad
aas
xor
cltd
xchg
push
sub
lcall
out
setnp
lds
les
aas
cmp
ja
mov
mov
aaa
dec
cmp
mov
jg,pt
movsb
cmp
mov
add
sbb
jge
in
add
stos
adc
mov
fistpl
sbb
sub
call
sbb
pop
jae
out
and
lahf
out
xchg
or
inc
les
adc
cltd
lahf
sub
add
sub
and
pop
mov
rol
dec
insb
int3
xor
fsts
and
sahf
jl
and
ljmp
pushl
shlb
pop
fisttps
and
dec
cmp
push
sub
daa
xchg
mov
mov
push
and
pop
popl
ljmp
test
das
pop
rcrl
jne
rep
test
out
leave
aad
or
in
mov
push
data16
mov
cmpsb
mov
inc
popf
subl
mov
inc
fdivr
adc
movq
push
dec
mov
dec
frstor
testl
sbb
fsub
jbe
popf
jnp
fbld
mov
mov
and
adc
inc
jb
js
sbb
hlt
leave
cmp
jb
add
cli
test
mov
mov
inc
cmpl
ficoml
lods
jns
fsubrs
push
outsb
mul
sti
addr16
xchg
jp
imul
movsl
out
addr16
sub
dec
repnz
pop
dec
jns
and
mov
lahf
outsb
nop
cmp
sti
mov
or
mov
xor
xchg
sbb
nop
push
cmp
in
push
push
ds
push
adc
mov
leave
test
cmpsb
mov
arpl
sbb
fcmovu
mov
add
and
popa
cmp
popa
leave
jle
mov
vmovsd
pop
mov
mov
movsl
xchg
roll
fwait
jne
pop
mov
je
cs
cld
out
scas
aas
mov
ret
lcall
jne
xor
cmp
xor
ljmp
push
pushf
cli
jnp
dec
pusha
rol
jno
rorb
ds
dec
rcll
fsub
dec
or
outsb
rcll
push
xlat
xor
stos
push
jae
loopne
push
div
jmp
and
add
mov
imul
je
inc
pop
aad
popf
ret
jns
and
out
add
mov
jb
loope
xchg
xchg
add
imul
or
pop
xor
fsts
or
jmp
push
or
stc
and
movsb
fcomi
jbe
inc
mov
adc
sub
mov
call
scas
dec
test
loopne
int3
xchg
sbb
mov
mov
jns
call
mov
mov
or
jecxz
mov
push
sub
punpcklbw
sbb
or
hlt
fldt
mov
and
adc
enter
add
inc
hlt
dec
xor
out
cmpsb
pop
xchg
gs
add
push
movb
or
jne
test
mov
inc
fxch
shll
mov
mov
sbbb
hlt
mov
setnp
sbb
pop
ficomps
or
mov
jl
gs
faddl
lret
add
sti
cs
in
sub
xchg
sbb
vpunpckhqdq
and
xor
mov
enter
mov
movl
push
cmp
popf
adc
mov
sub
mov
lock
add
jb
in
pop
outsb
fcoml
jge
out
jae
mov
gs
lock
push
xchg
adc
into
dec
insl
je
stos
jns
inc
mov
push
aam
stc
and
fcoml
inc
jno
outsl
and
push
push
ss
mov
lods
adc
iret
ret
mov
jp
mov
and
insl
push
out
scas
xchg
sbb
cli
cs
in
aam
repnz
dec
push
or
orb
dec
scas
das
psubsb
mov
pop
out
and
mov
jns
test
cmp
cmp
shlb
jne
jb
das
out
dec
sbb
jne
cltd
pusha
lods
gs
pop
add
cs
jecxz
add
std
push
inc
mov
cli
cmpsl
mov
popf
xchg
shll
nop
push
sub
fbstp
inc
test
push
cmp
push
or
pop
nop
adc
test
leave
das
imul
push
pop
push
scas
lock
mov
and
and
movsb
cmp
xchg
and
movsl
and
sbb
cs
and
imull
adc
push
pop
out
aas
sarl
stc
fisubrl
dec
test
lds
pop
test
push
xchg
push
mov
ds
test
mov
ds
add
xchg
daa
clc
sub
add
in
cli
sahf
gs
pop
or
mov
mov
inc
adc
cld
fs
lods
ret
xchg
sub
xor
enter
push
pop
test
ss
push
adc
sbb
xor
pop
aam
cwtl
pop
jp
push
mov
sub
adc
cmc
lcall
cmp
inc
mov
inc
ds
dec
jle
sbb
in
pushf
add
xor
adc
xor
cmp
gs
and
decb
fstpl
lret
out
mov
int
xchg
ja
int
mov
cmpsb
ret
rcl
loopne
jp
sub
sbb
push
inc
adc
adc
or
arpl
mov
imul
mov
mov
add
and
lret
js
dec
inc
cmp
push
repz
out
js
inc
sub
mov
mov
pusha
xchg
in
mov
pop
outsb
ret
xlat
insb
rcrb
push
popa
test
out
sub
dec
inc
cmp
cmp
repz
cld
mov
jbe
imul
pop
pushf
stos
fisubrl
inc
repz
push
fnsave
xchg
loop
dec
sub
xlat
pusha
decl
mov
sbb
jmp
outsb
mov
sbb
std
cmp
fnstsw
mov
in
int3
push
xchg
shlb
andb
mov
push
xchg
pusha
push
mov
std
cmp
stos
add
push
xor
div
push
xor
mov
insl
fstp
dec
mov
out
pop
xchg
pop
jnp
jle
lahf
jo
pop
pop
push
pop
shrb
stc
sub
andl
or
jb
jg
mov
nop
or
ret
xor
cltd
loopne
xor
rorb
mov
jge
xchg
mov
sarb
movsl
xchg
xchg
mov
jnp
sbb
cmp
xor
pop
aad
xchg
movsb
jmp
out
jnp
or
mov
mov
fisttpl
push
mov
addr16
outsb
leave
push
xorb
cmpl
jb
xchg
pop
and
and
push
orl
icebp
or
test
imul
or
loope
cmp
stc
mov
jmp
outsl
movsb
scas
int3
xchg
xchg
int
adc
testb
mov
push
fistl
sti
xchg
cmpsl
test
sbb
mov
fs
cld
loopne
push
scas
mov
sbb
aam
mov
in
inc
mov
xchg
sbb
pop
repz
cmp
loopne
jg
cmp
dec
movsb
divb
xor
addl
shlb
shld
sbb
dec
push
push
lret
imul
cmp
adc
add
or
je
pop
mov
mov
ficompl
sub
clc
lds
push
push
mov
in
mov
lock
lds
stos
aam
and
mov
adc
add
ja
inc
jge
mov
xchg
pop
decl
dec
mov
xor
xor
xchg
push
rclb
fcmovnb
mov
cmc
inc
dec
ss
push
inc
dec
in
stos
inc
xor
fstpt
pop
dec
adc
sbb
jnp
pop
and
fst
xor
dec
lods
jge
mull
adc
xor
fsub
repz
sbb
add
into
pop
popf
lret
das
stos
mov
imul
mov
and
setne
xchg
push
xlat
jb
cmpl
add
dec
xchg
and
sub
mov
les
sub
xlat
or
ss
aas
in
adc
mov
fcoml
xchg
mov
cmovbe
pusha
sahf
pushf
sub
shlb
lock
jae
dec
insb
jo
aas
lcall
inc
push
add
inc
mov
fidivl
or
cwtl
test
adc
adc
lock
xchg
lods
jge
test
inc
vmread
lock
out
inc
out
push
shll
std
negl
xchg
cmp
fldl2e
push
lods
mov
mov
sbb
cwtl
cmc
int
jb
push
std
mov
xor
xchg
cmp
je
push
rol
inc
sub
ret
xchg
xor
mov
adc
adc
jg
loopne
xor
sub
into
imul
jno,pn
pop
repz
jp
add
jo
and
xchg
fistl
lods
jmp
movl
popf
adc
das
jg
test
mov
jp
mov
cmpsl
and
cs
loopnew
hlt
shl
sub
sbb
fimuls
add
scas
popf
cmc
lock
cmp
cmp
push
repnz
aaa
mov
cmp
pop
pop
fmull
insb
decl
lea
mov
and
jmp
xlat
into
mov
in
fcoms
add
or
iret
pushf
ret
and
cmp
cmpb
loope
fs
mov
shrb
movsb
mov
int3
addr16
or
imul
test
inc
sbb
sub
mov
push
push
lods
adc
add
aaa
xchg
pop
pop
adc
xchg
inc
sbb
inc
mov
shll
mov
in
out
sub
jmp
mov
aas
sbb
aas
mov
pop
imul
mov
xchg
jmp
sub
push
js
rcrb
xchg
jnp
sbb
addb
xchg
pop
lcall
push
aas
add
leave
je
aaa
sbb
xchg
jecxz
cmpsb
xlat
push
lds
sub
shll
testb
dec
inc
cmp
cmp
cmp
or
dec
xchg
jnp
push
push
pop
dec
cltd
adc
sub
mov
ja
fcmovbe
rcrl
cld
adc
pop
xchg
sub
sbb
jno
pop
leave
das
adc
je,pt
test
dec
add
lock
add
push
push
inc
push
movsl
popf
insl
jbe
and
lcall
adc
mov
mov
or
xor
or
cwtl
mov
movsl
orl
inc
clc
jbe
jg
imul
cld
and
leave
stc
push
test
in
ret
pop
in
imul
jge
leave
inc
pop
mov
jl
xchg
insl
mov
stos
pop
stos
lods
test
out
xor
xchg
std
and
cltd
gs
xor
cmp
nop
into
add
lock
jns
shlb
jl
fmull
push
pop
popf
inc
push
in
mov
popf
jno
and
adc
rorl
pop
mov
mov
or
jl
and
pusha
mov
test
xchg
fistl
jl
add
les
cltd
pop
in
jge
mov
push
jecxz
pop
mov
test
or
cmp
xchg
in
pop
es
pop
xchg
mov
sbb
or
rcll
xchg
aad
or
pop
mov
and
xchg
fcomi
and
js
fisubl
adc
loop
hlt
push
adc
sbb
add
aad
imulb
inc
daa
jge
test
lret
sbb
pushl
xor
fldcw
clc
andb
xchg
dec
push
adc
push
fiaddl
push
mov
sub
out
or
shr
fbld
fdivs
movsb
pop
mov
sbb
push
jge
mov
pop
mov
mov
imul
adc
sub
lods
mov
xor
pop
and
imul
lea
add
inc
mov
xchg
inc
dec
or
adc
imul
out
pop
fldl
lds
inc
dec
xlat
call
cmp
leave
test
cwtl
sti
cli
sub
push
pusha
push
js
and
cmp
mov
cld
jmp
div
push
fistpl
int3
lods
repnz
adc
adc
std
sub
jle
pop
inc
bound
fcmovu
fldl
and
cltd
iret
or
sub
inc
sub
outsl
jle
mov
movsl
sbb
inc
jno
xor
and
cmp
adc
cs
movsl
adc
push
lcall
insl
push
xchg
lods
jno
cmp
adc
jbe
add
sbb
or
imul
pop
xchg
cld
shll
into
test
xor
xchg
push
int3
int3
push
aaa
repz
pop
ret
sahf
push
or
dec
adc
pop
shll
mov
cmp
movsl
or
mov
cmp
je
imul
add
imull
push
sub
shr
cltd
mov
dec
repz
lret
lret
push
fs
push
idivl
cmp
rcll
pop
aas
lock
loopne
cmp
xlat
lock
cwtl
push
mov
shl
xchg
in
push
push
pop
in
push
test
mov
jno
sub
cmp
in
fcmovu
iret
dec
jb
xor
mov
push
imul
lds
mov
sbbl
mov
jle
xchg
idivl
cld
push
cmp
xor
mov
popa
subl
cli
push
mov
rclb
and
scas
cmp
mov
mov
mov
cmc
inc
stos
faddp
movsl
mov
push
jns
push
test
adc
nop
stos
adc
jo
dec
outsl
scas
imul
and
sbb
out
pop
adc
sub
fcoms
pop
lret
jb
ds
pop
cmp
mov
outsb
jo
nop
mov
popa
xchg
incb
add
int3
jmp
pop
and
dec
mov
aas
cltd
test
pop
rclb
pop
movsl
cmp
cli
lds
clc
dec
mov
call
es
mov
daa
cmp
test
lret
es
int
sti
xchg
maskmovq
mull
cmp
xor
add
lods
dec
cmp
in
jns
nop
sti
dec
rorl
inc
add
jg
mov
dec
dec
pop
insb
addr16
pop
clc
sbb
outsl
loop
insb
pop
mov
mov
pushf
adc
shl
or
mov
mov
jbe
in
sub
cmpsb
imul
inc
ror
xchg
lods
test
test
push
sbb
pop
or
pop
or
pop
lods
outsb
ret
mov
mov
ret
xchg
into
decb
test
ljmp
lret
aam
js
mov
xchg
push
xor
int3
sbb
aam
lea
pop
out
xor
mov
dec
aas
pop
in
repz
pop
inc
jb
jb
les
cmpsl
mov
lahf
inc
fwait
mov
jbe
xor
xor
cmp
and
cmp
xchg
jl
pop
xor
adc
ret
xchg
or
pop
push
int
push
lcall
scas
test
shlb
leave
cld
lds
les
int
mov
int
jp
push
push
es
in
andb
test
pushf
mov
shrb
sbb
xor
push
mov
jle
jge
mov
xor
xchg
push
sbb
in
inc
or
inc
cmp
popf
insb
mov
out
ret
push
in
mov
jmp
fcompl
xchg
cmpsb
rolb
pusha
cwtl
imul
rorb
add
pop
daa
sahf
insb
push
and
std
push
jmp
cmpsl
loope
es
in
dec
mov
mov
movsb
int3
imull
pop
mov
mov
ds
sahf
jbe
sti
push
xchg
ljmp
lahf
aas
dec
mov
add
mov
jg
in
and
cs
cs
jb
push
out
xor
push
jmp
lock
sub
shrb
repz
mov
sub
sbb
jae
and
iret
cmp
cmp
aad
pop
jp
mov
inc
mov
sahf
inc
xor
xor
aam
lahf
dec
andl
pop
ja
jg
pop
xorl
mov
es
pop
ss
pop
add
lock
cwtl
nop
stos
mov
in
mov
lock
jmp
hlt
lock
jb
push
mov
addr16
add
jne
cmp
repz
into
lret
dec
insb
lea
scas
xor
add
cmpsl
data16
fisttpl
and
stos
mov
in
push
and
pop
jmp
out
les
ss
fmull
rclb
outsl
pushf
pmuludq
push
push
movsl
stos
pop
loop
cltd
ljmp
sbb
xchg
ljmp
sub
out
pause
mov
xchg
jns
xor
adc
pop
jg
cmc
adc
and
or
adc
lea
stos
fcoml
repnz
mov
mov
jg
cltd
lcall
lea
fs
add
orb
in
lret
pop
cmc
or
leave
xchg
add
push
mov
add
lds
imul
call
mov
pop
and
xchg
jnp
stos
lahf
pop
push
mov
out
gs
fisubrl
inc
push
cwtl
xor
dec
inc
xor
in
fstl
pop
sbb
aam
or
inc
mov
icebp
pop
outsl
mull
test
jae
fists
imul
repnz
push
leave
daa
ss
inc
test
mov
stos
adc
xor
mov
jo
jmp
cmpsl
mov
push
inc
hlt
or
arpl
mov
mov
jp
addr16
mov
pop
rcrb
lods
popf
mov
mov
mov
lret
test
daa
mov
push
ficoml
inc
insl
stc
cmp
xchg
add
mov
add
ret
inc
test
push
test
ds
inc
inc
int
in
pop
mov
lret
cmpsb
adcb
pushf
stos
cltd
enter
sbb
jo
arpl
int3
ja
fdiv
inc
xorb
pop
into
inc
xchg
fidivl
fmuls
in
cmp
and
roll
aas
imul
idivl
mov
push
mov
orb
pop
mov
inc
sub
aaa
sbb
leave
mov
ret
mov
sahf
mov
sbb
xchg
mov
js
shll
inc
xor
and
jp
loop
fs
pop
sub
popf
sbb
jae
jne
sub
cmpsl
rclb
or
sub
lahf
lods
jne
push
mov
cs
jecxz
or
pushf
pop
inc
mov
inc
cwtl
jle
cltd
adc
mov
push
add
lds
push
arpl
fnstenv
ficomps
cmp
test
pop
movsb
scas
jno
mov
mov
mov
dec
hlt
cmp
clc
ret
ljmp
iret
inc
jo
inc
mov
add
pushf
xor
sub
add
stos
mov
std
hlt
jns
paddd
std
test
and
outsl
imul
lea
mov
push
mov
xchg
lds
gs
loopne
jbe
jle
rcrl
popf
jge
rcl
inc
call
mov
mov
fwait
add
and
xlat
mov
dec
test
pop
loope
dec
xchg
push
push
test
fmuls
push
pop
fbstp
roll
lock
adcb
ljmp
push
call
out
jnp
das
lock
pop
and
mov
cltd
loop
das
je
jbe
test
sbb
cwtl
ret
pop
imul
mov
setns
add
inc
cli
popf
xor
jne
imul
mov
inc
xchg
mov
sub
pop
cmpsl
mov
xor
inc
mov
fisttps
cmp
rdpmc
cmp
lods
fxch
lret
test
cltd
and
pop
jmp
aaa
in
aam
lret
fnstenv
dec
sub
das
push
jge
test
jmp
jno
rcrb
mov
movsl
push
cli
test
cld
mov
stc
inc
mov
movsb
test
cld
sub
test
inc
push
andl
and
xchg
pop
mov
xchg
cmp
and
jge
out
push
mov
or
fsubr
lcall
and
cli
mov
pop
cld
pop
into
test
call
adc
cmpl
cltd
xchg
sahf
inc
popa
jno
and
pop
inc
pop
jge
jne
xchg
fistpl
jae
jge
nop
mov
scas
jmp
hlt
gs
pop
insb
cmpsb
and
outsb
bound
inc
adc
xchg
ds
mov
lock
jg
add
sub
or
jne
xorl
cmp
aad
test
mov
aas
bound
out
cld
adc
add
push
push
outsl
sbb
inc
cmp
or
sub
pop
mov
dec
repz
push
sbb
or
stc
dec
nop
dec
aam
jmp
push
dec
inc
mov
or
jbe
mov
sbb
and
pop
xor
repnz
inc
mov
push
cmp
xchg
test
jg
dec
xor
pop
and
xlat
std
mov
sub
xor
cmp
sbb
cltd
stos
cltd
cmp
inc
rcll
cmp
mov
mov
jbe
stos
leave
les
sub
repnz
and
and
es
dec
bound
fcompl
ficomps
mov
sbb
jo
test
xchg
or
out
xor
fisttps
out
es
addr16
push
cli
xchg
xchg
movsb
icebp
jecxz
repnz
xor
push
adc
cmp
add
adc
in
mov
testl
fisubs
test
cs
push
cwtl
mov
add
ds
shl
push
sbb
fldcw
cmpsb
pop
sbb
inc
movsb
jecxz
adc
mov
add
lret
inc
dec
xor
insb
sub
xlat
push
je
fdivrl
pop
push
fnsave
adc
add
mov
add
dec
sbbb
mov
fstps
cmp
into
and
push
jg
xor
dec
xor
jmp
je
fwait
xor
jno
adc
jge
mov
lods
adc
dec
mov
jo
and
cmp
dec
adc
div
cmp
test
push
fucompp
dec
cmpsl
ja
push
mov
cmp
mov
push
in
or
xorb
or
push
adc
imul
shll
mov
addb
cmp
xorl
decl
cmpsb
jmp
xchg
mov
pop
mov
fldt
adc
in
aad
jns
cmp
out
mov
jp
mov
or
xchg
add
das
jecxz
jl
je
aad
test
leave
and
outsb
pop
push
pop
fists
movsb
jl
adc
inc
pop
jae
xchg
jge
mov
mulb
addr16
loop
add
aam
sub
jmp
sbb
loope
xchg
xor
fnstcw
jno
dec
cld
dec
sbb
js
mov
push
pop
subb
jns
sub
xor
lea
fstpt
jb
into
jae
mov
mov
ja
hlt
and
test
cmc
ffreep
adc
dec
pop
xchg
out
xchg
xor
xor
jb
pushl
int
sbb
pop
fidivrs
mov
add
pop
xor
pop
popa
dec
fwait
adc
dec
cld
push
add
adcl
shlb
mov
ret
inc
inc
mov
ds
pusha
or
dec
ret
fidivrs
into
lret
push
push
xchg
adc
sub
lds
imul
dec
sar
fstpt
mov
xlat
aaa
gs
fs
sbb
push
das
aad
adc
adc
aaa
aam
sub
xchg
or
and
xor
or
mov
dec
or
ds
out
jo
mov
pop
push
add
insl
or
loopne
insb
jno
stc
shld
sub
lahf
test
rorb
hlt
jge
movsb
sub
and
mov
pop
mov
push
in
dec
cmp
aas
fmuls
addr16
ja
xchg
in
sti
insl
jns
loopne
xor
js
out
dec
pop
add
mov
int
pop
sub
push
icebp
add
mov
out
and
sub
fbld
jno
popa
call
mov
mov
mov
xchg
pop
and
nop
add
movnti
xor
jno
data16
bound
cmp
movsl
push
movsl
movsb
and
ja
fiadds
and
jo
cli
push
jg
and
inc
xorb
fcmove
push
popf
cli
rcr
add
adcl
xchg
into
insl
xchg
cmp
or
push
dec
int
add
xor
push
jbe
push
xor
data16
lcall
jae
ds
adc
xor
clc
push
add
xor
push
or
cmp
lds
cs
dec
loopne
lahf
and
xchg
mov
clc
aas
out
loopne
mov
loopne
jg
adc
outsb
sbb
hlt
inc
cmp
lret
imul
ja
sub
fs
mov
adc
adc
jns
or
mov
out
pop
icebp
mov
sub
mov
xchg
mov
push
and
sub
add
mov
sub
leave
test
orl
push
dec
xchg
roll
loop
dec
shll
cmp
cmp
and
out
add
lahf
xchg
sbb
insb
jnp
dec
sbb
popa
lcall
and
lds
push
xor
movsl
test
js
push
push
xchg
pop
test
orb
jle
aad
outsl
fwait
lret
pop
aad
int
and
scas
jnp
fistl
fsubs
or
pop
sbb
lods
sub
cmpsl
std
jl
ds
aas
test
clc
icebp
shr
fsubs
ret
insb
rcrb
loop
add
mov
inc
inc
insl
or
jnp
sub
add
out
adc
add
jb
test
sbb
mov
loope
jbe
aas
test
push
mov
push
popa
and
out
daa
pop
int3
push
pop
xchg
loop
cmpsb
mov
and
xchg
subl
adc
loopne
xor
ja
push
mov
push
ja
push
jns
xor
mov
icebp
mov
fs
xor
lods
dec
and
js
aas
dec
fiadds
fisttps
shlb
lods
aam
popf
das
and
xorb
ss
dec
adc
ret
xchg
push
adc
push
js
push
mov
ret
pop
mov
push
and
add
and
mov
xchg
cmp
or
adc
popf
sbb
jmp
and
std
test
lds
cmp
xor
and
movsb
pop
mov
push
push
ds
cmp
mov
mov
cwtl
and
imul
or
mov
dec
inc
imul
movsl
test
in
pop
sbb
xchg
add
clc
in
jmp
insl
push
or
mov
insl
jno
xchg
push
mov
mov
gs
pop
xchg
mov
and
pop
das
cmp
xor
cmp
out
push
shll
add
pop
test
inc
mov
inc
and
roll
mov
data16
nop
dec
int
pop
popf
sub
xchg
ret
cmp
cmp
in
jae
out
push
stos
jne
fidivrs
sar
out
subb
cmpsl
sub
in
mov
sqrtps
test
mov
sub
mov
mov
and
and
push
test
das
dec
dec
push
pushf
mov
outsb
push
or
outsl
out
or
or
or
imull
inc
cmpsl
sub
and
add
sbb
inc
inc
icebp
movsb
cwtl
popa
mov
push
neg
std
xor
sbb
lahf
mov
ja
xchg
mov
mov
pop
pop
aas
mov
adc
fnstcw
fimuls
ret
xor
pop
aad
incb
xchg
mov
xor
nop
fs
scas
movsl
lahf
outsb
mov
sbb
mov
mov
sbb
mov
push
adc
sbb
push
sbb
es
dec
xor
add
push
fiaddl
fcoms
push
mov
fisubrl
in
lahf
add
add
addr16
test
inc
pop
sahf
cs
loopne
and
mov
cmp
cmp
xor
addr16
sub
add
and
dec
jl
int
add
loopne
sub
xor
cli
shlb
inc
pop
mov
addr16
sarb
lahf
clc
push
sub
das
or
mov
push
xchg
je
jge
lock
and
and
stos
test
sub
mov
lods
push
pusha
push
or
xchg
rcr
inc
pop
pop
in
imul
inc
mov
pop
icebp
int3
iret
lahf
add
jp
sub
in
mov
jbe
xchg
ret
jecxz
call
dec
and
inc
inc
call
lea
jl
fidivl
ds
insb
adc
js
lds
pop
xchg
or
andb
sbb
push
mov
shlb
jl
pop
mov
icebp
lahf
imul
arpl
pop
mov
xlat
mov
pop
and
push
test
xchg
loope
inc
pushf
mov
sub
pop
and
mov
cmp
xor
and
mov
sub
daa
lea
decl
aad
sbb
js
cs
push
in
mov
cwtl
cmpsb
pop
clc
xor
jbe
xchg
sub
test
out
std
loope
xor
fldt
ja
mov
mov
mov
cmpsl
int
js
mov
mov
test
call
sbb
xor
int3
inc
mov
mov
in
xor
roll
lea
subb
pop
popa
push
mov
mov
ficompl
mov
push
lahf
xchg
mov
pop
enter
mulb
mov
push
icebp
inc
jbe
pop
iret
jb
test
fidivrl
jl
stos
xchg
mov
test
lcall
dec
cmpsl
adc
cmp
mov
aad
std
cli
inc
push
in
sub
je
ret
repz
mov
ja
jp
inc
sbb
bound
jecxz
mov
xor
adc
ds
pop
lea
lret
sar
xor
pop
mov
sub
jle
mov
cmp
fs
sarb
lcall
cmp
fdivl
inc
mov
cmp
inc
call
lods
sbb
cltd
mov
sahf
sub
daa
dec
test
xchg
or
jmp
mov
cwtl
jnp
jecxz
lods
test
lret
adc
dec
movsl
stos
push
sub
mov
fstl
call
in
dec
fbld
add
fnstsw
mov
and
sub
iret
xchg
xchg
jae
repz
dec
xchg
in
push
in
dec
movsl
outsb
popf
aam
jg
and
add
insb
in
jecxz
dec
mov
jno
call
rcrl
push
add
test
sub
shlb
in
sub
jnp
data16
imul
fldt
mov
fistps
mov
cmp
jne
ds
xor
adc
ss
decl
push
sub
dec
ss
xchg
cld
push
clc
adc
ja
js
push
pop
imul
lods
fbld
int
movsl
cmc
decl
stc
es
add
mov
add
gs
or
push
sbb
int3
pushf
inc
mov
xor
shlb
pop
push
fiaddl
mov
jle
inc
pop
loope
nop
cld
movsl
jecxz
loop
fwait
movsl
push
cli
dec
pop
loopne
xchg
push
or
push
sbb
or
test
aad
pop
mov
push
lods
sbb
aad
int
dec
loopne
mov
ljmp
fildll
push
mov
add
xor
cmp
xchg
dec
pop
push
lods
adc
fnsave
loopne
pop
and
stos
jne
jp
iret
out
adc
lcall
jae
mov
movsl
xor
and
dec
shrb
ja
arpl
jp
xchg
ljmp
scas
stos
lods
repnz
leavew
inc
or
sysexit
daa
test
and
in
daa
mov
mov
fwait
push
iret
or
cld
add
stos
dec
cmp
test
adc
mov
sahf
int3
leave
xor
cmp
out
adc
adc
out
inc
mov
add
in
push
cld
mov
stos
fs
insl
jle
dec
imul
sti
adc
ret
subb
push
inc
xor
mov
lock
imul
out
xchg
mov
dec
jecxz
das
xor
push
push
outsb
mov
dec
lods
jp
int3
sub
fnsave
inc
add
add
mov
ljmp
ds
leave
cltd
les
dec
push
adc
ret
call
fisttpl
movl
cld
push
fisttpl
pop
ss
push
xchg
pop
lcall
sbb
xchg
cmpsb
popf
movsb
ret
adc
dec
loope
jmp
mov
sbb
es
cs
ret
jno
insb
jmp
imul
cmp
int
mov
jp
or
mov
cmp
and
mov
mov
enter
sbb
shl
and
testl
push
arpl
inc
push
jle
ja
adc
or
mov
sti
inc
scas
push
xchg
dec
mov
or
and
xchg
inc
cwtl
adc
sub
test
std
int3
lds
adc
pop
pop
xchg
jmp
jmp
jecxz
sub
mov
rcll
imul
cmp
repz
add
leave
je
mov
mov
in
xchg
pop
movsb
or
xchg
incl
mov
enter
xchg
sbb
pusha
cmpsb
xchg
jle
sbb
sub
or
mov
ss
fistpll
pop
and
popf
adc
mov
gs
jne
es
cwtl
sub
xor
je
push
lret
cmc
sahf
xor
cmp
inc
lds
loope
clc
ret
in
jnp
cltd
lcall
test
cltd
xor
pop
push
adc
hlt
test
mov
arpl
dec
and
or
test
push
fcomi
test
lods
movsl
loope
pop
pusha
ret
pop
push
insb
in
incb
or
inc
sbb
or
push
inc
aas
test
cmp
shl
fistl
clc
fidivrl
dec
push
loopne
or
cli
enter
lret
fs
inc
int3
sub
ds
dec
push
notl
test
test
sbb
ss
std
lcall
or
mov
jmp
sbb
shll
sahf
jno
and
mov
jge
xor
out
or
ret
jbe
mov
and
add
sub
pusha
xchg
sub
test
repz
fidivrs
in
mov
push
test
mov
sbb
fwait
ds
and
cmp
ret
mov
mov
es
and
push
ja
xchg
int3
pop
jo
jp
or
cmp
add
arpl
hlt
xor
or
nop
jne
cmp
sub
jno
sub
mov
adc
sbb
mov
lock
xor
sbb
pushf
xor
stos
jae
out
das
mov
push
stos
sub
iret
iret
popf
mov
aad
xchg
testl
mov
or
dec
lcall
sub
fistps
xor
mov
sbb
stos
push
arpl
iret
jb
repz
push
pop
es
lret
je
xchg
add
pop
push
or
testl
jecxz
add
add
les
xchg
jp
mov
push
mov
iret
testl
stos
xchg
pushf
sbb
or
insb
add
repnz
sub
insl
sub
icebp
sbb
in
cltd
icebp
data16
push
insb
pop
add
fnstenv
mov
mov
out
icebp
lret
mov
jnp
mov
xchg
dec
fisubrl
in
imul
sahf
subl
jmp
pop
add
sbb
js
pop
mov
ja
imul
jne
scas
push
sub
sbb
insb
insb
xchg
popf
push
imul
gs
insl
sub
je
xchg
jecxz
je
mov
leave
and
mov
in
in
pop
adcl
push
mov
xchg
pop
nop
das
dec
pop
adc
mov
cmp
push
xlat
stos
xor
or
popf
outsl
insl
or
mov
hlt
sub
scas
aad
cmovle
add
out
es
arpl
mov
leave
or
sbb
jmp
xchg
add
shll
outsl
mov
xchg
sbb
jne
inc
out
or
sbb
pop
sbb
mov
inc
sub
movsl
lock
or
cmp
leave
enter
in
pop
lret
jae
mov
xchg
cmpsl
inc
xor
in
adc
fsubp
xor
test
and
pushf
test
mov
adc
in
sbb
test
mov
jns
mov
fwait
in
mov
aas
pop
int3
dec
lods
mov
mov
or
pop
repnz
adc
xor
add
int3
out
insb
leave
mov
mov
push
ss
inc
fldt
sbb
xchg
js
sub
ret
fsts
popa
sahf
inc
push
pop
arpl
add
sub
sti
inc
jo
mov
rol
repz
insl
and
xor
in
mov
ss
dec
imul
out
hlt
in
cmpsl
ja
mov
fcoml
mov
nop
stc
xor
jmp
push
pop
ret
inc
sub
mov
sub
push
je
inc
add
pushf
pop
arpl
sub
push
dec
jmp
add
loop
in
test
lea
push
push
insl
inc
fdivrp
cmp
outsl
insb
xor
fs
out
pop
neg
cmp
out
pop
push
dec
sbb
inc
jno
inc
push
mov
mov
adcl
xor
dec
inc
pop
mov
mov
stos
enter
jb
addr16
les
mov
into
lcall
push
fcmovnu
sbb
xlat
or
add
pop
sbb
test
test
dec
popf
loope
and
inc
pop
stos
sbb
pop
mov
cltd
inc
pop
stos
icebp
mov
or
pop
inc
jnp
mov
cmpsb
cwtl
xor
adc
mov
aam
xchg
les
add
sbb
fisttps
in
pop
jbe
std
mov
sub
mov
cmp
cmp
ret
cld
xchg
pop
sar
jecxz
mov
add
push
mul
mov
fisubl
iret
xchg
adc
cmp
cs
int3
stos
dec
mov
jne
stos
outsb
test
jl
xchg
mov
scas
lea
cwtl
add
insl
sbb
ljmp
adc
or
in
xchg
mov
fnstenv
adcl
sarl
sbb
jae
jb
aas
lcall
call
cli
cmp
pop
js
shlb
jge
sub
cmp
jl
fstps
out
mov
jp
push
add
xorl
rclb
ss
emms
or
adc
fldt
add
gs
adc
stos
ret
scas
popf
mov
jne
shl
out
add
bnd
cmp
addl
nop
push
loope
das
jmp
push
pusha
hlt
push
cltd
inc
rclb
js,pn
cmp
lds
daa
xchg
push
inc
push
sqrtps
rolb
or
sub
repnz
js
fmul
rcll
xchg
dec
testb
sbb
mov
mov
popf
roll
sbbb
mov
lret
xchg
dec
pop
xor
jno
mov
pop
xchg
push
add
jns
push
lcall
pop
into
mov
sbb
mov
mov
sti
addr16
fsts
push
cmpsl
cmpsb
fadds
jnp
push
and
mov
jecxz
pop
mov
dec
xor
cltd
movsl
sti
leave
sub
mov
arpl
lret
fnsave
inc
xchg
cwtl
adc
adc
dec
out
mov
fisttps
xor
mov
inc
movsb
imul
call
fnstsw
sub
ja
les
mov
loop
out
xlat
or
xchg
dec
pop
dec
repz
jmp
and
sbb
inc
test
pop
inc
leave
pushf
daa
bound
sbb
in
shrl
out
repz
push
push
aam
and
push
mov
fs
or
nop
decb
mov
test
pop
inc
and
pop
and
or
in
fcmovu
in
data16
outsl
shrl
in
fstpl
inc
add
add
sub
dec
shlb
cmp
mov
sahf
imul
push
repnz
aaa
mov
lret
addr16
jne
nop
lret
jge
les
jnp
mov
cld
and
hlt
inc
push
adc
mov
fidivrs
and
insb
sahf
push
in
nop
push
xor
repz
xchg
test
fiaddl
fcmovu
cmp
data16
adc
scas
cli
and
sub
pop
loopne
or
mov
or
iret
loopne
xchg
add
or
into
mov
or
xchg
push
test
mov
or
xor
mov
mov
imull
lods
int3
mov
pusha
dec
dec
lcall
int3
pop
jle
aas
xchg
mov
and
jp
packssdw
jmp
adcl
add
push
pop
repz
sbb
xchg
jl
mov
jnp
lds
div
daa
cwtl
mov
mov
lahf
push
fwait
fwait
push
mov
shlb
push
xor
popa
and
mov
xor
lret
ret
jecxz
insb
push
mov
jl
or
xchg
mov
mov
rcll
inc
jo
fisubrl
inc
adc
mov
or
pop
rcll
dec
jge
sub
mov
pop
push
dec
scas
rorl
fstpt
push
repz
js
jecxz
mov
loopne
mov
gs
mov
ss
icebp
or
aam
pop
data16
xchg
adc
push
xchg
int3
or
loope
emms
mov
loop
outsb
mov
in
or
cmp
shrb
movsb
leave
inc
and
and
pop
adc
hlt
orl
pop
ja
add
add
in
imul
or
pop
int
bswap
fwait
repz
or
fcompl
inc
add
mov
icebp
ja
bound
and
adc
mov
xor
imul
xor
jecxz
jbe
mov
arpl
leave
sub
dec
add
cmp
xlat
inc
jmp
lds
dec
adc
ds
aad
cmp
daa
fidivl
push
notb
int3
test
cmp
push
dec
sahf
imul
mov
xchg
arpl
je
xchg
cmp
in
dec
cmp
in
jecxz
push
cmpsl
std
fidivrl
imul
jecxz
mov
fptan
xchg
sahf
fistps
add
pop
push
xor
mov
xchg
xor
pop
sbb
and
dec
inc
pop
sub
add
jae
mov
xor
cmp
cmpsl
jae
stc
lcall
enter
xor
sbb
ljmp
or
mov
xchg
inc
jp
xor
jae
xlat
idiv
xor
mov
int
xor
and
popf
incl
stos
adcb
incl
fnsave
addr16
mov
dec
stos
ret
sub
out
inc
fildl
sbb
adc
sbbl
add
clc
mov
cmp
xchg
sub
sub
lahf
das
hlt
adc
sub
int
js
mov
sarl
sub
jmp
adc
inc
xchg
movsb
mov
and
and
les
xchg
jecxz
fldt
jg
sub
xchg
rcrb
add
dec
or
xor
testb
mov
pop
je
std
xor
out
xchg
lcall
xor
or
sub
leave
or
fcom
jb
arpl
jnp
movsb
jae
bound
popf
jo
pop
flds
sbb
lds
jge
pop
hlt
push
jb
test
mov
mov
shl
inc
push
add
push
xor
push
shl
or
shrb
xchg
xor
mulb
mov
stos
inc
mov
xchg
jge
and
jg
ret
aad
xor
jbe
xlat
mov
movsb
in
mov
lds
add
push
mov
add
xchg
daa
cmpsl
mov
xor
adc
outsb
push
or
movl
push
pop
scas
ja
xor
jne
mov
faddl
int3
movsl
mov
lock
fcom
mov
stos
cmp
or
pop
fstpl
cmp
lcall
ds
adc
in
cltd
test
stos
xor
sbb
cmp
in
lods
lret
jae
cmpsb
not
aad
cmp
outsl
and
cmpsb
mov
jae
fs
adc
push
lods
in
sti
rcrl
mov
or
pop
xchg
fcomps
sti
dec
mov
sbb
lahf
into
sti
inc
imull
pop
sub
out
pop
mov
and
aad
push
lret
or
sahf
pusha
xchg
or
call
push
cmp
pop
cmp
dec
lea
xchg
push
fwait
or
cmp
jp
out
lahf
push
lds
jge
or
sub
push
lea
sub
xorps
das
mov
aam
adc
add
push
fidivrs
sub
rcrl
adc
dec
push
inc
lahf
lock
adc
push
nopl
js
pop
push
out
jns
sbb
icebp
cmp
pusha
aad
lret
xchg
daa
cmp
xorl
jmp
icebp
mov
or
sbb
add
fcmove
insl
sub
inc
jo
push
sub
adc
cltd
jmp
pushw
insb
inc
loopne
aas
dec
sbb
cmp
push
in
pop
pop
cld
test
das
or
mov
subl
nop
inc
stos
shl
sub
fwait
test
notb
addl
jne
pop
aad
push
or
push
pop
popf
sub
cs
test
sub
mov
ror
repnz
bound
jecxz
jbe
lods
insl
aam
popl
in
cmp
test
or
pusha
out
cwtl
jp
in
mov
inc
fcomps
pushf
jg
pop
jl
arpl
push
imul
call
repz
xchg
pop
hlt
aaa
mov
int3
mov
aaa
aam
push
in
xchg
and
mov
pop
stos
test
sub
in
aaa
lea
xchg
lret
pop
les
pop
cs
shl
test
mov
es
and
cmp
inc
scas
push
sbb
pop
popf
test
fdivrl
push
fucomi
cmp
mov
adc
mov
int3
dec
sbb
or
jmp
xlat
xchg
test
es
je
out
xor
mov
roll
lods
rep
dec
adc
push
test
jns
pop
sbbb
mov
cli
ss
xor
and
pop
push
xlat
push
ss
repz
xchg
jmp
adc
push
xlat
addr16
add
sub
jns
and
or
cmpsb
rcrb
fisubrl
scas
cld
lds
ficompl
orb
gs
in
data16
cmp
xchg
addl
sub
xor
lahf
cmp
sbb
scas
mov
cmp
inc
scas
dec
cmp
or
jnp
xchg
mov
out
inc
pop
push
fidivrl
xchg
push
push
xchg
jbe
stos
ret
into
and
pop
sbb
and
ret
adc
push
lcall
clc
rcrb
lret
jecxz
xchg
inc
push
lret
dec
fidivrl
das
pop
push
xchg
arpl
leave
mov
mov
aam
jge
mov
xor
lret
pusha
xor
sti
xor
pusha
push
fdivrl
mov
jae
movsb
ljmp
sbb
adcb
or
mov
cmpsl
icebp
xor
test
pop
lds
push
jns
popf
out
mov
hlt
pop
xchg
shrb
std
mov
push
push
call
fisubrl
mov
in
mov
ret
pop
push
stos
mov
rcll
test
int
or
sti
add
ret
sti
sub
mov
ds
ja
aas
adc
pushf
jae
int3
test
xchg
popa
sahf
xchg
ljmp
mov
cmp
inc
hlt
inc
out
mov
sub
cmpsb
inc
xor
arpl
lret
mov
mov
cmp
arpl
popf
fstps
pop
mov
insb
cmp
fcoml
inc
xchg
insb
jp
adc
and
nop
push
mov
rorb
imul
pop
sti
jo
testb
je
pcmpeqb
subb
pusha
cwtl
push
shll
pop
add
cli
popf
cli
rorb
das
push
pop
cmp
mov
jecxz
and
fidivs
xchg
stc
dec
inc
leave
aaa
iret
repz
mov
inc
mov
pop
push
shrb
dec
lods
shll
adc
out
xchg
add
or
cmpsl
mov
push
xchg
out
add
fs
mov
jmp
fbld
adc
lea
divb
mov
hlt
in
mov
test
sub
mov
adcl
inc
pop
lret
push
xchg
dec
in
ja
lods
sbb
fwait
insl
mov
jne
scas
or
hlt
daa
insl
in
jg
push
jmp
xchg
movsl
mov
xchg
mov
inc
sarl
mov
xor
enter
imul
test
lods
jle
mov
pop
pop
ljmp
xchg
push
dec
or
test
ja
pop
pop
testb
flds
into
dec
aaa
aas
xchg
pop
sbb
stc
add
out
fldcw
push
jbe
pmaxub
pop
out
ret
ss
jae
add
lret
dec
imul
mov
inc
lds
test
aam
sub
pop
test
outsb
adc
popf
in
imul
and
cmpsl
mov
xchg
adc
clc
add
pusha
xchg
pop
push
xchg
adc
cmp
insb
mov
inc
fs
repz
xlat
stos
insb
adc
addr16
pop
daa
jmp
icebp
cltd
jecxz
inc
lcall
insl
mov
xchg
and
jno
inc
push
cmp
leave
shl
loope
xor
adc
push
cmp
ja
dec
imul
push
imulb
ss
inc
jne
outsl
sarl
adc
imul
mov
lods
fwait
insl
fisubrs
jb
mov
mov
mov
jns
mov
sbb
pusha
cltd
or
insl
mov
or
bound
ds
or
iret
pop
imul
and
arpl
xorb
lods
repnz
test
nop
test
jle
jmp
push
fnsave
outsl
mov
cs
gs
ljmp
enter
mov
mov
aam
dec
cmp
sahf
jbe
popf
sbb
mov
xchg
pop
hlt
xlat
push
into
jg
add
fildl
ret
cmc
jmp
push
pusha
js
push
aaa
mov
and
add
mov
fstps
jp
das
pop
mov
push
xor
repz
mov
xchg
pop
xchg
test
in
iret
mov
xor
jbe
js
clc
arpl
fndisi(8087
dec
mov
inc
loopne
hlt
enter
decl
loope
adc
loope
lahf
cld
nop
mov
pop
mov
leave
xchg
insb
jecxz
insl
fcompl
popa
test
orl
sti
outsb
sbb
adc
negl
iret
ret
lret
mov
lds
movd
and
add
loope
js
fstps
or
mov
xchg
lret
scas
mov
fwait
dec
push
roll
insl
pushf
mov
dec
and
and
jle
mov
xchg
aas
mov
int3
mov
sbb
and
adc
and
test
movsb
mov
lods
push
mov
sti
dec
ficomps
mov
sbb
test
imulb
and
adc
not
and
and
mov
jg
cmovns
mov
fmull
jb
shll
push
and
cli
jnp
ss
mov
loop
dec
scas
mov
sbb
adc
mov
cld
inc
add
popf
mov
movsb
lret
xchg
ja
cld
and
add
push
in
and
add
das
fs
mov
dec
out
inc
sub
pop
test
xchg
lods
sub
fimull
sbb
push
mov
push
xchg
pop
push
and
jno
popf
sbb
ljmp
lahf
mov
fsubs
sti
leave
push
fadds
xchg
dec
dec
ret
lret
pop
clc
or
push
out
je
inc
in
mov
mov
in
and
jnp
into
in
xchg
xchg
add
sti
sub
insl
sub
mov
push
mov
or
in
stos
loopne
sbb
std
call
sbb
or
repnz
or
sarl
mov
int
add
out
das
subl
les
aas
mov
aaa
cs
xchg
inc
roll
cmp
xchg
sub
push
mov
jmp
test
push
pmulhuw
in
jl
call
push
hlt
inc
in
stc
test
add
rcll
or
mov
jnp
xor
int
pop
cmc
add
cmp
sahf
sub
xchg
lret
push
push
push
xchg
movsb
aam
das
pop
out
inc
jb
mov
cmp
xchg
mov
sti
bound
imul
int3
int3
lods
cmp
add
dec
stos
test
pop
mov
aad
cmp
pop
sbbb
int
push
mov
popf
outsl
pop
xchg
aas
and
adc
jns
or
mov
popa
and
cmp
ret
sbb
push
mov
jae
int3
lea
mov
loope
jmp
aad
xchg
inc
cmpsb
mov
or
sub
cmp
cwtl
xchg
or
in
fst
sarl
add
addr16
scas
stos
mov
icebp
stc
stos
test
push
mov
rsm
jnp
and
and
push
js
push
lds
es
sub
inc
mov
xchg
xchg
xorps
cmp
xlat
pop
add
push
xlat
cmp
inc
insl
add
add
movsl
inc
push
jns
imul
push
adc
mov
mov
test
aam
mov
sbb
test
push
adc
daa
pop
insb
jle
aad
xchg
inc
dec
and
inc
repz
mov
xchg
mov
jnp
inc
pusha
mov
push
mov
adc
out
dec
add
mov
add
and
adc
fmul
adc
jno
push
dec
mov
shlb
cmc
insl
sbb
imul
enter
push
ret
sbb
subl
stos
clc
mov
and
mov
loopne
hlt
mov
insl
sbb
lret
pop
test
cmp
cmp
add
mov
call
sub
fiaddl
loopne
fdivrs
mov
xor
add
inc
adcl
xchg
test
pop
pop
mov
rolb
imul
and
cli
insl
sbb
jns
icebp
push
add
out
fsub
xor
repz
push
daa
test
add
dec
push
cmp
jne
inc
sbb
push
xchg
imul
stos
inc
sub
cs
or
dec
cmp
jbe
jp
loope
fs
dec
pop
ds
scas
stos
ss
insl
stos
add
cmc
dec
pop
fsubrl
push
out
mov
mov
aas
adc
jne
loopne
je
sbb
push
adc
std
sahf
test
xchg
or
sahf
lds
in
sbb
xor
and
add
sub
test
or
add
mov
pusha
inc
insb
push
sub
call
xchg
repnz
pop
dec
sbb
das
ret
cmp
dec
pop
int
mov
notb
movmskps
sbb
outsl
pusha
jno
lds
shlb
shlb
xchg
mov
mov
bound
cmp
dec
ljmp
mov
mov
jp
loop
sbb
mov
fwait
jg
scas
or
fsubrs
addr16
mov
inc
xchg
hlt
enter
mov
xchg
fmuls
jno
mov
adc
xor
mov
pop
repz
pop
push
stos
or
dec
pop
mov
jl
sbb
and
mov
sub
sub
cld
xchg
xchg
jg
in
jno
repnz
or
ret
pop
in
xchg
leave
mov
aaa
add
stos
fst
push
bound
add
or
jle
stos
adc
mov
bound
fidivrl
sti
adc
loop
xchg
daa
mov
push
xchg
jg
stc
lret
push
fdivrs
fs
ret
mov
jecxz
jnp
aas
push
shlb
mov
in
stos
leave
adcb
mov
and
pop
xchg
jecxz
shlb
pop
rcrb
xorb
in
jge
push
xchg
mov
jae
loop
mov
mov
outsl
lahf
mov
in
cld
data16
adc
lret
mov
dec
push
xor
loopne
imul
mov
adc
xor
jne
mov
icebp
pop
push
push
loopne
cmp
je
scas
insl
push
fistl
sahf
sbb
test
add
xor
adcb
sub
jle
jbe,pn
in
sbb
in
add
mov
lea
ret
sbb
shrb
jo
mov
add
jp
jg
stc
in
movsb
imul
out
mov
and
inc
addr16
dec
and
cltd
mulb
xchg
into
pusha
add
and
push
mov
out
dec
pop
sbb
nop
jbe
dec
and
mov
loopne
in
stos
popf
call
es
pop
xchg
scas
mov
inc
gs
add
jmp
outsb
pop
sub
mov
pop
mov
dec
mov
cmp
in
cmp
jp
adc
jmp
or
cmpsl
call
and
in
bnd
mov
out
outsl
cmp
inc
and
adc
xchg
dec
mov
in
xchg
mov
mov
pop
push
cmpsl
popa
mov
dec
sub
cld
inc
dec
notl
jb
ret
push
and
das
loope
xchg
stos
pop
icebp
or
dec
loopne
loope
push
ss
cltd
jl
lcall
mov
inc
inc
push
xchg
mov
cmc
pop
insb
jae
cmp
xor
fcmovnb
pop
xor
push
or
adc
nop
pushf
inc
mov
jo
jl
movsl
adcl
ds
mov
xchg
mov
pop
jbe
or
insl
fdivs
pop
cmp
inc
out
mov
inc
push
out
add
aas
out
mov
js
mov
jg
inc
sbb
and
mov
jae
xchg
sete
pop
dec
mov
test
push
inc
orl
shll
and
pushf
out
scas
dec
mov
ret
and
cmp
clc
scas
xchg
and
sahf
in
dec
insl
ds
aad
hlt
scas
nop
rcll
jle
in
stos
inc
jne
shlb
jno
lcall
jno
mov
fdiv
clc
icebp
or
mov
dec
out
lmsw
sub
sbb
inc
stc
jae
jl
jmp
jno
add
mov
pop
pusha
cwtl
arpl
xchg
mov
sub
mov
push
int3
cmp
inc
or
jp
xchg
aam
in
push
je
aaa
enter
xor
xchg
dec
cmpsl
jae
dec
outsl
js
movsl
mov
or
jae
pop
ljmp
test
cmpsb
or
xchg
and
dec
push
fimuls
mov
test
and
mov
orb
jmp
jbe
lcall
daa
or
fbld
push
mov
enter
xchg
ljmp
xor
pushw
push
ja
xchg
out
fnstenv
or
mov
stos
pop
enter
les
or
and
sahf
dec
mov
cmp
dec
or
roll
xchg
jp
pop
imul
dec
cltd
jg
loope
push
js
ljmp
out
push
shrl
and
loopne
sub
or
imul
out
jbe
xchg
or
lea
push
repnz
repnz
stos
imul
or
cwtl
lahf
leave
nop
inc
add
daa
dec
icebp
and
dec
jg
scas
mov
xchg
imul
add
sbb
push
or
testl
idivb
movsl
ret
push
add
pop
test
cmp
hlt
cli
jns
add
inc
push
push
popf
or
scas
xor
adc
push
adc
xchg
addl
outsb
sbb
addr16
mov
test
call
and
arpl
por
and
mov
outsl
inc
pop
insb
adc
idivl
movsl
adc
dec
pusha
mov
neg
test
addr16
mov
out
fiaddl
xchg
jecxz
mov
scas
adc
out
or
push
xor
int3
mov
stos
mov
fs
push
cltd
outsl
or
test
sbb
xorl
into
dec
mov
jae
mov
popa
mov
jecxz
or
mov
dec
mov
arpl
sub
ja
cmp
out
mov
adc
mov
xchg
mov
mov
pop
out
in
xor
les
ds
sub
adc
push
fcmovnb
das
adc
cmpsl
xlat
xchg
xor
stos
leave
add
stos
sbb
inc
xchg
add
and
jmp
aam
sbb
out
add
imul
adc
bound
clc
cmp
insb
xchg
aaa
div
test
push
lods
js
ljmp
and
sub
inc
sarl
jl
lret
fnstenv
in
or
and
adc
xor
ficomps
or
cmp
outsb
lods
out
add
sbb
call
adc
cmp
pop
push
in
into
int3
rorl
sub
lahf
jmp
pop
and
jle
add
xchg
popf
mov
dec
mov
std
ja
movsl
mov
dec
xchg
in
xchg
in
xor
popf
call
inc
cmpsl
sbb
icebp
call
scas
mov
cmp
loop
mov
sub
pop
sub
dec
adc
sub
emms
sarl
sbb
inc
aad
pop
ret
jmp
mov
std
lret
sub
xchg
adc
shll
xchg
jle
pop
pop
inc
rcll
scas
insb
adc
and
loope
pop
jecxz
outsb
ret
dec
fwait
lods
imul
push
mov
cmpsl
das
sub
dec
cmp
aaa
jno
ror
or
add
xchg
mov
sbb
call
and
mov
stc
int3
and
mov
dec
cmp
fcom
into
lcall
cld
pop
sbb
cmp
xchg
leave
je
test
shl
add
ljmp
mov
ss
cmc
ror
out
mov
xchg
test
js
adc
xchg
test
cmp
jno
pop
jo
icebp
push
inc
dec
mov
imul
sub
ja
fisubl
xchg
push
scas
lret
cmp
mov
cmp
xlat
cmpsb
sbb
out
push
frstor
movsb
nop
aam
inc
cmp
daa
add
and
cld
mov
mov
sub
jle
popf
xchg
ret
pop
inc
jne
adc
mov
inc
jl
aas
pop
add
mov
shlb
stos
ja
enter
jno
shll
stc
fnstenv
lock
test
int3
sbb
fistpl
jno
inc
fstl
xchg
mov
je
out
in
jo
cmpsl
imulb
mov
andl
push
add
mov
jb
and
ljmp
fcomip
lret
cmp
inc
sub
and
loope
ja
es
adc
fs
xchg
xor
mov
lcall
push
xor
lods
or
jo
push
mov
ljmp
jo
dec
mov
pop
std
sub
mov
jmp
or
mov
lods
and
pop
cmp
fildll
jno
push
loope
mov
sub
cwtl
fiaddl
loopne
std
mov
inc
mov
xor
pushl
out
cmpsl
cmpsb
jle
test
out
scas
mov
out
lret
inc
fucom
inc
xor
pop
shlb
adc
pop
mov
dec
sub
outsl
dec
subb
pop
sbb
push
lods
add
pusha
aad
test
dec
or
repnz
cmc
push
jecxz
fisubrl
mov
mov
shr
inc
mov
imul
test
in
loope
sar
and
outsb
xchg
add
xchg
orb
shrl
lock
jp
jg
and
cld
lods
sub
xchg
push
fs
pop
les
sbb
out
push
aas
jmp
daa
mov
xchg
mov
jae
dec
xchg
xchg
bound
rcl
sub
out
mov
and
jbe
pop
int
outsl
pusha
jo
mov
xchg
clc
cmp
in
add
and
xchg
das
lods
call
dec
jl
dec
dec
push
iret
decb
daa
sub
sbb
push
or
int3
add
sbb
dec
scas
push
and
add
movsb
les
mov
mov
data16
notb
inc
sub
int
mov
jl
xchg
cs
testb
mov
mov
jge
mov
mov
adc
shlb
orb
xchg
xor
jp
enter
shl
clc
sub
xchg
lods
test
mov
add
aam
leave
and
movsl
testl
incb
popf
loope
xchg
jl
bound
mov
sbb
jg
loopne
dec
imul
jp
out
jo
hlt
stos
sub
mov
test
call
mov
mov
fs
mov
jg
out
xor
dec
inc
pop
pop
dec
push
ja
lea
jo
lret
mov
or
pushf
jmp
xchg
xor
sbb
je
cmp
and
lea
cmc
ds
movsb
lcall
dec
daa
movb
scas
adc
faddl
insl
jmp
xchg
inc
mov
aam
sbbb
fnsave
adc
je
sbb
mov
bound
mov
outsl
push
cmp
xorb
adcl
pop
js
xchg
addr16
jne
cltd
addr16
mov
xchg
stc
and
and
cld
stos
jns
fists
lcall
add
scas
mov
pop
sahf
movsb
mov
icebp
cs
shlb
xor
inc
xchg
jg
mov
out
mov
xchg
into
test
xchg
mov
sbb
or
adc
dec
aaa
mov
ss
push
aaa
int
movsl
add
insb
pop
inc
rorl
push
mov
popa
hlt
xchg
jae
push
mov
push
jmp
cmp
lcall
rol
inc
mov
sahf
dec
sbb
jno
cmp
in
add
push
popa
or
into
scas
mov
mov
jmp
and
cli
pop
mov
fcoml
sbb
mov
xor
cmpsl
or
loopne
add
int
add
and
inc
mov
mov
push
lods
or
push
push
xor
pusha
imul
scas
push
xchg
scas
cmp
movsl
xchg
add
loop
ret
cwtl
leave
leave
lret
rcrb
mov
adc
jg
inc
lret
popa
shll
insb
cwtl
shrb
scas
orb
sbb
hlt
out
rol
cmp
mov
daa
leave
xor
dec
insl
sarb
testl
lahf
and
movsb
xor
loop
xchg
cwtl
pop
xchg
bound
mov
ljmp
sub
or
ret
jno
dec
mov
mov
and
std
int3
fidivrs
std
repz
sbb
scas
rcr
out
lret
jge
xchg
lahf
lods
inc
xchg
negb
test
push
popf
push
push
stc
mov
out
cld
cmp
xchg
cmp
test
sub
cmp
adc
cmp
fidivrl
scas
mov
arpl
xchg
push
sbb
mov
jno
lock
ficompl
dec
imul
sub
mov
add
shll
sbb
sbb
or
cwtl
cltd
outsb
test
call
call
lods
xor
pop
scas
jne
neg
dec
imul
int3
out
sbb
pop
xlat
fs
sbb
adc
cld
vmwrite
and
stos
pushf
into
xor
ret
cmpsl
scas
cs
cmpsb
stos
inc
cmpsl
or
aaa
fimuls
test
ficoml
mov
into
outsb
pop
popf
leave
xchg
adc
repnz
aam
cltd
pop
adc
add
jae
sbb
ljmp
pop
mov
pop
outsl
xchg
movsb
or
adc
sbb
into
jg
jne
fsts
pop
loop
xor
je
ret
mull
xor
ret
xchg
and
adc
pop
cmp
aad
mov
fidivs
cmpsl
es
out
sub
enter
icebp
test
mov
mov
into
xchg
dec
pop
fistps
loopne
fwait
movsb
hlt
push
in
std
mov
sbb
mov
xchg
dec
push
mov
divb
outsl
ss
lcall
in
lret
aaa
shll
test
pop
inc
adc
add
jnp
mov
jae
dec
dec
pop
fcompl
es
popf
push
jnp
es
xchg
lods
sub
cmc
pop
jno
cwtl
mov
dec
jmp
pop
or
xchg
das
pop
inc
or
in
push
lahf
std
popa
sbb
jno
flds
push
or
pop
lret
push
shl
out
cld
and
repz
enter
test
pusha
cli
cmp
mov
shrb
rcr
mov
popl
addr16
cmpsl
aas
addl
inc
aam
mov
and
lock
pop
enter
insb
outsl
mov
sbb
hlt
pop
cmp
in
rcll
jg
mov
test
push
cmp
fstl
xchg
fmul
sbb
jae
mov
mov
sti
push
jns
call
add
addb
cmpsl
push
fwait
ret
out
pop
sub
mov
sbbl
out
xchg
scas
xchg
adc
sbb
adc
mov
fincstp
clc
popa
fcoms
jo
outsl
idivb
push
addb
mov
insb
fwait
mov
cmp
cmp
xchg
out
gs
int
outsl
pusha
test
loope
mov
mov
fwait
jns
inc
or
movsl
cmpsb
iret
mov
push
adc
dec
out
jns
xchg
insb
cmp
push
test
cmp
inc
int
out
mov
mov
sbb
jl
inc
inc
bnd
stos
pop
insl
and
dec
outsl
cmpsb
cmpsb
sub
jae
inc
mov
or
fmull
call
sbb
jo
out
add
push
sti
mov
popf
and
mov
es
shr
incb
xchg
mov
xor
adc
insb
stc
scas
xchg
xchg
scas
jg
xchg
aad
mov
cmp
adc
mov
dec
inc
jmp
mov
shll
push
mov
adc
pop
movsb
pop
mov
gs
jb
ficompl
jnp
sbb
popf
aas
jp
inc
inc
sbb
in
popa
add
cmpl
jle
mov
icebp
out
test
mov
cs
pushf
push
outsl
sbbl
insl
andb
xor
jl
lret
les
mov
cmp
sub
cli
xor
je
mov
jge
stos
stos
push
push
sub
push
jmp
stos
jecxz
hlt
mov
add
mov
cmp
hlt
mov
pusha
pushf
adc
xor
push
jg
sub
mull
inc
lahf
add
fldenv
xchg
jge
outsb
xchg
xchg
nop
xchg
pop
data16
adc
dec
call
dec
in
scas
xchg
jge
testl
push
call
call
mov
cmp
or
mov
jmp
sbb
mov
mov
xor
push
inc
or
or
pop
push
std
mull
xchg
aas
lea
imul
mov
and
arpl
or
aam
shrb
or
mov
hlt
mov
out
sub
dec
xchg
push
push
xchg
enter
jno
sub
pushf
or
call
arpl
push
and
fwait
sub
out
int
sbb
mov
push
hlt
sahf
fcompl
ffreep
mov
scas
push
aam
lret
xor
push
subb
daa
stos
scas
mov
add
ret
fld
lock
icebp
mov
out
insl
adc
sub
iret
push
mov
dec
sub
sbb
push
int3
jo
es
jp
add
or
or
std
adc
fisubrs
jne
popa
mov
mov
rcrb
into
lahf
sbb
pop
push
cmp
mov
xchg
mov
xchg
fprem1
cli
sti
mov
dec
in
adc
xor
ljmp
add
movsb
andl
push
xchg
lock
jle
setno
cwtl
pop
sub
inc
push
fstps
stc
mov
flds
inc
pop
push
or
push
xor
fdivs
sarl
sub
push
adc
add
loopne
xchg
pop
test
in
mov
adc
es
add
out
imul
xchg
mov
sub
mov
xchg
shl
xchg
push
dec
sub
popa
rclb
inc
or
hlt
lods
out
adc
adc
push
lea
arpl
popa
jge
ficoml
add
dec
jp
jno
xchg
faddl
fidivrl
pop
xchg
out
add
mov
leave
jb
dec
test
dec
cwtl
and
iret
push
frstor
sahf
lret
mov
adc
je,pn
mov
mov
sub
sub
jnp
cmc
adc
jb
pusha
jge
icebp
dec
xchg
ss
dec
lahf
add
in
xor
dec
int
mov
out
push
adc
clc
mulb
ficomps
push
dec
cmpsb
stc
imul
and
dec
lds
test
fwait
push
inc
ret
jl
cmp
mov
inc
push
xchg
or
dec
jne
leave
loop
mov
xor
je
cmpsb
out
sub
jnp
in
iret
je
sbb
mov
into
mov
fdivl
xor
ljmp
jp
jo
sub
ss
and
pusha
insl
xchg
inc
nop
lcall
loope
ret
insl
mov
clc
fld
xchg
mov
stos
sbb
push
into
inc
xor
sub
scas
add
loope
sub
cmp
cli
jmp
add
dec
jb
inc
imul
and
call
in
jp
out
icebp
lcall
xchg
push
mov
sub
ja
mov
and
in
mov
mov
shrb
cmc
jl
popa
adc
icebp
add
jp
jno
jb
mov
pusha
jo
ret
push
std
dec
int
repz
lods
mov
and
cmp
add
sub
mov
mov
stos
cmp
scas
aam
in
adc
aas
and
inc
fwait
push
mov
pusha
mov
dec
xchg
ljmp
mov
xor
ja
das
and
mov
addr16
jne
jne
push
scas
adc
and
test
aad
mov
ss
loope
xor
sub
inc
inc
sbb
push
mov
mov
add
sarb
sbb
push
push
cmp
test
and
pop
jns
pushw
lret
fildl
cli
cld
shll
add
xchg
sbb
jae
pop
es
stos
dec
mov
mov
std
mov
rolb
mov
addr16
push
notb
fs
js
out
cmp
lcall
cld
test
push
add
jg
int3
movsl
cmp
pop
imul
and
in
fs
imul
mov
cmpsb
clc
hlt
das
or
sub
bound
mov
mov
and
pop
leave
sar
add
stos
scas
inc
xor
xor
test
lds
lahf
je
xlat
popa
inc
pushf
jg
mov
or
pop
sub
stc
cmpsl
lods
mov
lcall
out
adc
fdivl
lods
adc
and
xchg
inc
fsubr
int
push
leave
xchg
cmc
jge
cmp
jle
xchg
mov
je
cmp
aaa
jle
mov
dec
sbb
and
push
in
fdivrp
pop
and
lds
jg
cmp
mov
jbe
and
push
jecxz
cli
cs
fwait
inc
xchg
add
in
mov
cs
lret
repnz
sub
inc
addl
je
sub
mov
pop
fwait
or
adc
pop
cmp
in
pushf
pop
lcall
icebp
xlat
mov
sub
sub
cli
inc
inc
jecxz
push
dec
pop
push
ds
cmp
aad
aam
ja
mov
out
ljmp
imul
dec
or
xchg
loopne
push
cmp
daa
adc
clc
push
mov
push
and
out
in
imul
nop
mov
cmp
mov
faddl
sbb
insb
mov
jno
je
addr16
ret
loope
adc
push
inc
pop
hlt
xchg
xor
fidivl
in
stos
dec
cld
add
call
dec
sbb
imul
sub
or
jg
test
test
mov
push
adc
xchg
es
jb
pop
je
outsl
outsb
stc
cmp
push
movsb
shlb
test
ds
jno
push
lret
roll
aaa
inc
iret
mov
pop
mov
jg
mov
sub
mov
int
in
jns
and
add
mov
add
mov
addb
sbbl
xchg
repnz
xor
xlat
pop
sti
mov
arpl
lds
inc
cmp
cs
or
xchg
aaa
nop
pop
xorb
and
mov
dec
adc
aad
jno
push
nop
fstl
lret
pop
sub
aaa
jl
test
mov
dec
call
pop
jecxz
out
cltd
dec
scas
stos
jmp
mov
inc
adc
in
dec
dec
into
sarb
push
in
nop
test
pop
mov
jl
daa
mov
fcoms
push
and
outsb
out
adc
scas
jg
fwait
inc
aaa
mov
or
std
popf
pop
out
push
in
cltd
arpl
and
aas
nop
fisubrl
sbb
sahf
addr16
js,pn
add
in
mov
into
or
sahf
enter
sbb
add
cmp
call
pop
dec
jmp
aaa
cld
scas
repz
push
pop
jb
cmp
pop
mov
dec
leave
dec
or
in
add
dec
ss
aam
arpl
stos
cmc
pop
mov
cmp
in
xchg
enter
cmpb
mov
cltd
icebp
xor
cltd
cltd
scas
stc
and
dec
lret
cld
sahf
ja
bound
fwait
mov
pushf
icebp
imul
push
orb
mov
enter
pop
xor
sbb
jno
pusha
push
lret
out
idiv
add
lret
pop
es
movsl
int
int3
pop
lret
mov
xchg
cmpsl
dec
cltd
cli
or
scas
dec
ss
sub
or
ret
dec
xor
pop
loopnew
je
popf
xchg
inc
lret
ja
movb
rolb
sahf
mov
push
dec
sbb
pop
mov
insl
xchg
lods
and
cwtl
push
iret
movsb
loopne
cmp
jo
setns
shll
add
arpl
xchg
pop
lcall
cmpsb
lret
jge
push
movsl
and
mov
pop
adc
adc
xor
jecxz
sti
mov
xor
fsubl
inc
aad
pop
subl
sub
pop
out
mov
mov
pop
mov
scas
pop
cli
lcall
jae
or
pop
pop
sub
imul
dec
xchg
lock
cmc
mov
add
jg
nop
cmp
cld
add
insl
mov
adc
lahf
dec
test
or
das
lods
insb
xor
fnstcw
mov
cli
dec
int
mov
jecxz
ficompl
sbbb
push
out
fcmovnbe
and
lock
dec
lret
popa
fmull
ret
pop
push
int3
fnstenv
or
xor
pop
inc
ss
fildl
jbe
mov
enter
dec
push
and
stc
gs
jle
mov
dec
daa
nop
in
mov
adc
inc
movsb
mov
jnp
jecxz
sbb
push
aad
dec
jge
inc
scas
add
mov
mov
in
mov
and
push
sahf
lcall
scas
icebp
outsl
shlb
fdivr
invd
xor
cltd
mov
test
stos
push
dec
arpl
stos
jecxz
scas
xor
outsb
mov
sbb
jp
ret
mov
scas
jo
je
sbb
popf
mov
pushf
dec
test
in
in
adc
clc
sti
jl
repnz
mov
xchg
or
mov
cmp
test
insb
jo
adc
mov
sarl
dec
rorl
lods
sbb
push
xchg
pushf
push
or
mov
movlps
movsl
je
mov
xchg
xor
rcr
mov
or
mov
inc
mov
rorb
fisubs
loopne
fcmovnu
das
pop
sbb
cmp
sbb
mov
mov
movsb
mov
and
testl
xor
stc
addr16
rclb
dec
xchg
insl
xchg
filds
mov
iret
ret
push
mov
adc
sar
xor
rorl
push
adc
pop
or
jl
adc
mov
and
lret
and
inc
stos
sub
jl
xchg
and
mov
lahf
lret
mov
jecxz
lcall
mov
mov
stc
inc
mov
fldt
cltd
loop
sarb
sbb
sarb
sub
xchg
mov
mov
loopne
mov
es
sub
aad
inc
mov
dec
inc
test
push
repnz
fidivrs
jns
int
mov
stos
xchg
popf
rorb
test
xor
jmp
cmpsl
cli
pop
sbb
mov
scas
or
cwtl
dec
dec
dec
mov
outsb
xchg
xlat
dec
mov
test
and
sbb
push
xchg
fdivs
mov
arpl
xchg
mov
cmp
cmp
inc
stos
js
mov
xorl
or
std
loope
xchg
clc
and
cli
test
xchg
jecxz
test
xchg
data16
aaa
lock
dec
fucomip
mov
dec
add
idivb
sub
pop
cmp
push
ret
lret
mov
out
push
repz
xchg
ficomps
aaa
les
aam
pusha
sub
insb
mov
inc
add
inc
push
fistpll
xor
mov
push
pop
cltd
lds
subl
leave
inc
or
push
inc
cmpl
jp
sarb
cmpsl
jno
jg
pushf
mov
mov
incb
mov
xchg
dec
xor
jmp
imul
mov
ja
push
xor
int
add
mov
push
adc
sub
jge
jns
inc
call
out
adcl
xlat
or
push
mov
das
lret
movsl
sbb
test
cmpsb
xor
and
in
add
leavew
sub
and
or
lret
push
xchg
sbb
popf
sbb
pushf
pop
lds
cltd
push
clc
out
insb
mov
push
js
gs
push
add
cmp
dec
xor
jg
sub
fcomi
je
mov
mov
cmp
sub
adc
clc
jecxz
lock
gs
cmp
xchg
dec
pop
divl
adc
movsl
cmc
xor
sahf
mov
xlat
xor
and
mov
outsl
test
cmc
pop
das
mov
inc
xor
lret
arpl
test
fwait
push
push
mov
rcr
xchg
jb
pushf
and
inc
dec
data16
pop
bound
addr16
mov
jecxz
add
and
push
call
xorb
mov
adc
add
cmpsl
pop
push
inc
push
push
ds
mov
cmpsl
xchg
mov
in
addr16
lods
movsl
or
cmp
inc
and
orl
mov
add
xor
aas
xor
rcll
mov
repz
decb
or
ja
jle
ss
xchg
push
mov
addl
stos
movb
cmp
mov
outsb
call
or
test
les
mov
pop
and
mov
pusha
xorb
add
stc
rol
mov
xor
push
push
add
repz
cmp
stos
mov
ret
mov
out
insb
out
pop
sbb
scas
stos
lret
enter
xor
outsl
movsb
inc
lods
cmp
fs
ret
fnclex
sahf
xchg
fwait
dec
fnstcw
hlt
mov
imul
xor
mov
out
cs
cmp
sub
loop
or
mov
cld
out
and
lods
in
adc
xor
add
sbb
pop
cvtps2pi
xor
pop
dec
mov
nop
mov
or
jge
adc
shrl
dec
hlt
mov
cwtl
xchg
push
sub
mov
out
mov
movsb
arpl
xor
orl
shrb
mov
dec
lret
sbb
inc
xchg
jle
das
pop
test
out
pop
sbb
sbb
mulb
mov
pop
in
adc
aas
lret
das
testb
insl
scas
jecxz
xchg
movsl
push
mov
dec
ljmp
std
dec
negb
xchg
call
mov
in
iret
push
dec
cmpsb
mov
pushf
insb
sbb
out
stos
or
aad
loope
sbb
mov
outsl
pop
dec
mov
nop
sti
inc
arpl
pop
idivl
mov
js
getsec
fdivrs
in
and
sbb
outsb
inc
nop
or
cmp
shl
daa
icebp
lcall
fs
lds
test
or
xchg
ficomps
and
inc
jecxz
mov
test
dec
push
sub
out
mov
add
inc
lea
call
mov
stc
loop
and
stc
rclb
cmpb
out
jg
lcall
lret
leave
out
cli
adc
mov
cmp
xor
jg
push
repz
jmp
popa
aam
add
mov
or
jno
sub
pushf
sub
jno
mov
pop
pop
sbb
pushf
repnz
push
movsb
jne
rcrb
or
push
and
xchg
mov
cld
loope
hlt
ljmp
adc
ficoms
mov
mov
jne
stos
and
and
testl
int3
mov
adc
jp
aas
adc
sub
sahf
pop
pop
mov
outsb
mov
scas
fcompl
rclb
pop
stos
xchg
test
stos
aam
jecxz
in
xor
mov
rcl
lods
insb
iret
push
loop
test
sbb
dec
inc
push
adc
jg
std
mov
add
shrb
stc
lods
xor
imul
mov
cmp
push
shll
lea
mov
hlt
fcoml
cld
sub
sbb
push
mov
push
sbb
aaa
ljmp
pop
jle
lods
mov
cmp
js
call
imul
and
je
push
adc
sub
sbb
das
lret
movsb
jbe
mov
cmp
test
push
iret
in
imul
add
and
dec
mov
out
sbb
xchg
iret
xchg
mov
subl
popa
loopne
push
mov
gs
mov
inc
ret
clc
test
mov
ret
sub
mov
inc
adc
rcrl
repz
bound
pop
ret
pop
jno
ja
push
inc
idivb
xchg
adc
push
int3
je
add
or
insb
shlb
pop
ret
mov
cmp
pusha
cmp
inc
lahf
jecxz
mov
sbb
xchg
lcall
sti
adc
pop
stc
daa
push
test
aam
cmpl
xchg
pop
fsubrp
sarl
movsl
jge
sbb
dec
int
xor
test
movsb
dec
pop
fiaddl
stc
inc
push
pop
or
aas
xorb
scas
ss
cmpsb
sub
test
sti
mov
cmp
and
inc
pop
sarl
in
jns
pop
incl
cltd
out
push
and
popa
jecxz
sbb
xchg
insl
sbb
jp
cmp
ss
ret
push
pop
fidivs
xchg
dec
jno
rorb
sbb
loopne
enter
popa
int3
jmp
movsb
insb
out
test
mov
cmp
pop
and
xchg
adc
aaa
sbb
les
mov
pushl
sub
mov
inc
dec
je
cmp
push
jno
adc
dec
ret
addb
xor
mov
adc
shl
mulb
xchg
xor
in
vcvtsd2si
loopne
sti
inc
cmp
push
and
cld
lret
mov
scas
scas
outsl
les
inc
shll
mov
ljmp
adc
fwait
add
out
push
cmp
ret
inc
lret
test
in
inc
ljmp
enter
sub
jns
stc
rcr
lods
add
xor
push
outsb
aad
mov
loop,pt
mov
ss
ret
mov
sbb
or
jmp
mov
test
add
daa
push
dec
in
shlb
and
in
stc
insl
jae
pop
push
sbb
lock
cli
mov
cmpl
ret
jae
dec
lahf
aam
mov
stos
mov
cmp
dec
mov
inc
xchg
push
les
scas
push
add
and
ret
movsb
call
icebp
mov
negb
inc
imul
fbld
cmp
inc
xchg
cmp
push
jo
pop
or
jns
fbstp
xor
aam
mov
cmp
in
lds
cmc
xchg
push
sarb
das
and
ficoml
or
or
dec
mov
test
stos
aaa
fadds
hlt
insb
add
push
jle
out
cmp
loopne
sbb
fst
shlb
rcrb
aad
fldl
jmp
cmp
inc
pop
mov
mov
fs
mov
stos
and
and
es
insl
in
cwtl
addr16
mov
adcb
cmc
pop
cld
fidivl
fnstenv
push
inc
cmp
inc
jns
xchg
aaa
mov
mov
add
scas
and
sbb
add
inc
jp
adc
fstpt
sbb
add
rcl
lea
jge
sub
xor
out
js
les
ficomps
and
jge
fidivs
sbb
mov
inc
push
pop
mov
int3
xchg
add
xorb
jmp
ret
jmp
test
adc
fcompl
in
inc
xor
enter
lret
inc
cli
xchg
sbb
sub
fidivs
mov
or
jmp
ret
xchg
fldcw
sub
in
xchg
pop
rorl
aas
or
out
scas
push
add
or
fs
sbb
inc
ja
xchg
inc
cmp
in
jmp
mov
adc
cmp
dec
enter
push
test
scas
testb
pop
jno
std
mov
xor
repnz
loopne
loopne
and
fadds
sarb
pop
xchg
stos
cmp
mov
shrb
or
hlt
jbe
roll
lret
mov
push
out
pop
xor
or
pop
mov
pop
nop
inc
ficoms
and
test
in
mov
stos
fmull
stc
xchg
dec
jbe
jbe
and
adc
aad
nop
insl
xor
repnz
xlat
pop
mov
sub
sti
add
adc
cmc
movsb
in
pop
nop
std
stos
and
test
jge
js
shlb
enter
std
mov
jbe
mov
lock
mov
cltd
or
shr
shlb
jb
mov
cmp
shll
mov
jle
les
int3
push
sub
arpl
test
cmp
int3
imul
cmp
pushf
pop
sarl
pop
xchg
lods
push
mov
cwtl
in
sub
adc
enter
xchg
rolb
adc
inc
sbb
inc
and
inc
pop
pusha
icebp
fdivrs
and
jmp
push
xchg
cltd
inc
dec
cs
push
cmp
fsub
pop
in
xchg
add
inc
loopne
test
push
jl
movsb
in
or
or
pop
and
fidivrl
std
mov
xchg
pop
xchg
jecxz
cs
cmp
jg
stos
cmp
insl
inc
or
dec
fsubrl
sbb
jle
out
aaa
add
clc
loope
jl
dec
loopne
test
out
cmpb
mov
or
addr16
cmp
fs
sub
divb
stos
bound
movsb
cmp
daa
out
ret
jmp
les
rol
pop
scas
xor
xrelease
fmuls
es
and
dec
insb
or
leave
and
scas
xchg
rcr
cmpsl
lods
sub
scas
sub
in
insb
or
popa
xor
adc
xor
fldt
lea
in
add
jnp
shl
rcrb
adcl
pop
mov
loope
loop
popa
jns
or
insb
jbe
xchg
bound
push
arpl
daa
and
mov
lahf
pop
rcll
adcl
enter
and
insl
xchg
jecxz
adc
jg
sbb
out
xor
mov
repz
pop
xchg
xor
clc
mov
sub
rol
clc
in
cmp
cmp
addr16
repz
xchg
adc
enter
mov
test
punpcklbw
xor
jo
loopne
sarb
scas
and
das
arpl
clc
leave
pusha
cwtl
add
test
gs
pop
cmpb
jae
adc
or
pop
mov
push
adcb
lds
divl
lods
inc
jg
mov
cwtl
ja
jle
clc
push
lods
fsubrs
mov
sbb
xchg
ds
stc
jl
insl
push
mov
mov
dec
cli
aad
mov
and
dec
and
pop
movsb
adc
pop
mov
xor
xchg
data16
xchg
push
lods
sub
lret
push
mov
insl
mov
icebp
jle
daa
mov
test
data16
xchg
or
pop
and
add
jmp
popa
inc
fldenv
hlt
adc
repz
mov
mov
mov
jbe
sub
dec
int
sub
xor
pop
jge
push
xchg
push
lret
push
inc
int3
adcl
fimuls
idiv
call
xor
push
mov
out
push
sbb
rcll
adc
cmpsl
mov
jns
ja
lret
incb
lds
call
outsb
lds
or
adc
jl
movsl
jp
rcrl
imul
inc
pushf
pop
add
jg
loop
out
mov
rcrb
in
lock
adc
lea
test
xchg
xchg
inc
sub
dec
in
int
ja
jno
jl
je
cmp
mov
push
rcrl
loop
fs
cmc
in
jo
push
les
clc
int
mov
xor
mov
xor
lahf
adc
aaa
pop
xchg
loop
or
cltd
sbb
or
pop
dec
mov
incl
mov
bound
cmp
icebp
lock
mov
push
mov
pop
inc
lock
loopne
push
stos
xchg
test
jmp
mov
cmp
sub
and
mov
js
popa
inc
daa
test
jmp
dec
mov
mov
repnz
sti
inc
sub
or
aaa
mov
das
fdivs
fistpl
add
arpl
shlb
dec
dec
iret
mov
sub
add
rcrb
adc
fisubrs
fs
adc
idiv
int3
clc
jo
movsb
inc
sub
jl
imul
jb
sub
cmp
pop
mov
mov
xor
mov
stc
xor
cmp
cmpsb
jne
test
aam
rol
dec
push
pop
jae
mov
adc
es
mov
dec
push
mov
aad
jns
sbb
jns
inc
stos
int
pushf
test
sbb
jecxz
mov
dec
cmp
dec
mov
into
insb
std
jmp
into
fnsave
mov
pop
or
call
jmp
push
mov
sbb
popa
into
or
out
repz
sub
xchg
sti
cmpsl
xchg
rcr
push
out
ja
pop
hlt
xchg
sub
jle
inc
mov
roll
xor
es
mov
pop
push
fisubs
fisubrl
cmp
out
push
add
xor
addr16
mov
cmp
sub
cmp
mov
fidivrl
jns
add
mov
inc
jae
jle
fwait
sbb
inc
sbb
xor
pop
stc
les
jl
sti
push
dec
adc
mov
pop
inc
lcall
mov
popf
mov
outsb
cmp
inc
mov
mov
aam
push
lds
xlat
imul
mov
sbb
test
push
out
mov
mov
mov
cmp
pop
mov
push
sbb
inc
cmpl
sti
sbb
mov
pop
fldcw
lret
fucomi
int
sub
cmp
dec
push
adc
fcoml
psrlq
xor
inc
adc
jecxz
int
fsubrl
lret
push
inc
jecxz
mov
test
scas
jl
call
shl
sti
or
adc
shll
fcomi
push
cmp
repz
in
out
xchg
out
adc
orl
cli
mov
mov
adc
test
sbb
cmc
mov
pop
xor
inc
push
int3
pop
in
cmpsb
stos
cli
push
stc
std
or
bound
sbb
xor
mov
ret
jns
imul
mov
push
ds
adc
lds
push
add
sbb
mov
mov
pop
int3
lahf
rolb
std
cmp
jl
sti
pop
cmp
insl
push
ss
jl
std
sub
push
and
jecxz
lods
daa
rcl
mov
push
pop
jecxz
movsb
stc
jne
pop
pop
jo
adc
jl
xchg
jno
test
repz
out
mov
jno
xor
xor
cli
imul
lds
inc
cld
test
ss
dec
imul
mov
fistpl
jl
psraw
xchg
fsubrl
sub
cmp
sub
cmpsb
les
inc
aaa
pop
repz
jg
inc
dec
add
insb
inc
push
stos
lods
mov
mov
lahf
push
push
outsl
js
std
xchg
push
divb
cmp
push
mov
xchg
add
sub
cmp
lock
test
ret
or
in
push
pop
mov
cmp
data16
stos
and
mov
clc
cli
pop
sbb
adc
sub
push
sub
sub
inc
clc
inc
jo
dec
mov
jae
leave
les
imul
cmpsl
in
or
fisttpl
cmp
cli
mov
out
mov
pop
mov
mov
enter
js
cmp
sub
loop
mov
iret
or
into
icebp
insb
dec
js
cmpsb
in
insl
shlb
js
xor
imul
dec
lret
sti
pop
dec
push
sarl
ss
push
bound
test
std
cli
dec
cld
xchg
mov
cld
pop
pop
aas
pop
cli
xlat
sarl
iret
xor
cwtl
inc
jo
push
sub
cmp
add
aaa
mov
lea
cmpsl
loop
aad
out
hlt
cmp
das
cmc
push
pop
add
fcmove
pop
into
inc
hlt
aad
add
fmull
mov
dec
push
add
inc
jmp
dec
add
icebp
sbb
out
jo
fld
ljmp
add
cmp
iret
sub
into
mov
cmc
inc
jl
mov
fwait
inc
stos
daa
mov
add
std
out
test
sbb
adc
bound
ljmp
ja
std
inc
jnp
dec
in
xchg
cmp
adc
test
cmp
dec
ss
cltd
mov
out
adcb
lahf
jns
pop
push
sub
push
arpl
orb
iret
insb
push
jo
push
push
in
sahf
inc
add
mov
cmp
lahf
mov
cli
daa
mov
jns
inc
out
fdiv
sbb
cld
cmp
sub
outsl
or
leave
inc
jg
call
mov
inc
lahf
ljmp
cmp
xchg
and
jb
enter
lahf
nop
xchg
cmp
dec
dec
add
xchg
cmp
shll
mov
daa
dec
add
pusha
insb
fadds
adc
fadd
pop
sbb
ror
adc
xchg
and
pusha
dec
mov
or
aas
fwait
cmp
bound
out
lahf
out
mov
stc
scas
dec
js
inc
or
xchg
lods
jae
imul
or
xor
and
insb
roll
mov
add
mov
stos
inc
pusha
inc
leave
mov
in
adc
sbb
aaa
xchg
jmp
lds
lret
xchg
aam
cmp
loop
icebp
adc
mov
in
insl
mov
push
aas
lock
fistpl
dec
push
cltd
mov
pop
sbb
es
cmc
jbe
add
add
push
gs
lds
pushl
push
test
jle
cmp
pop
pop
popa
push
int3
mov
out
or
pop
rep
cmp
jne
out
call
andl
gs
adcl
sub
xchg
ss
insl
adcb
je
ljmp
repnz
mov
cmpsl
call
inc
dec
scas
sub
add
in
or
push
scas
imul
add
or
rol
stc
into
gs
sbb
rol
inc
mov
stos
push
sub
sub
xor
nop
pop
and
xchg
aaa
cli
iret
rcll
sub
dec
test
push
pop
popa
popa
nop
repnz
pop
sub
xchg
xchg
in
xor
xchg
cmc
fstl
push
shll
test
enter
aaa
dec
je
pop
fadd
das
jbe
hlt
fcoml
ss
cmp
in
push
das
les
jns
aad
lret
pop
nop
pop
test
cmp
fst
stos
inc
jle
cmp
xor
ljmp
mov
ss
push
popf
xchg
popf
jg
popa
lods
mov
cwtl
add
sbb
pop
or
testl
sbb
insb
pop
sbb
mov
mov
cli
mov
fs
ja
nop
rep
and
notl
xchg
ret
sysret
sub
roll
and
ja
adcb
mov
in
cmp
xchg
fs
je
cmp
shlb
mov
rolb
sbb
cmp
rcrl
push
stos
inc
scas
movsl
xchg
pop
ficoml
movsb
adc
outsb
mov
imul
add
cmpsb
divl
sub
sbb
pusha
hlt
fimuls
incl
es
dec
mov
faddl
cmp
popa
cmpsb
mov
or
add
cltd
cmp
in
lods
jne
mov
lret
mov
or
sub
stc
das
lcall
outsb
stos
mov
or
or
les
add
sbb
sarb
in
cs
mov
adc
movhlps
jns
jns
pusha
ljmp
adc
test
mov
pop
mov
addl
dec
cmp
mov
dec
daa
dec
adc
pusha
dec
jmp
inc
xchg
xchg
pop
jl
xchg
dec
std
in
jnp
scas
cwtl
test
mov
cwtl
and
stos
jne
stos
ror
lcall
pop
into
inc
ljmp
bound
sub
lds
imul
addr16
in
mov
ja
mov
aad
adc
dec
lods
daa
mov
icebp
sbb
mov
sbb
mov
cwtl
in
jo
pop
or
mov
data16
dec
or
cmp
adc
sbb
sub
add
mov
mov
lret
sarl
icebp
in
arpl
mov
lock
clc
pop
mov
cld
xchg
aad
mov
xchg
outsb
push
dec
movsb
pop
js
mov
push
cld
popa
dec
out
cmp
stos
mov
in
dec
xchg
sbb
aad
inc
icebp
or
jecxz
roll
pop
ret
or
clc
lahf
xchg
mov
popf
xchg
bound
popf
clc
lcall
repnz
adc
insb
notb
mov
push
lods
jmp
xchg
jp
rorl
pop
mov
dec
loope
jp
sbb
scas
sub
movl
enter
sbb
mov
das
inc
sbb
out
inc
push
das
dec
mov
push
mov
fidivl
lcall
in
andb
fstpt
jmp
xor
sub
outsl
mov
xchg
cwtl
jmp
in
dec
xchg
inc
xchg
pusha
stos
daa
adcl
or
sub
mov
mov
or
lret
enter
in
out
mov
icebp
mov
push
adc
jmp
xchg
lahf
daa
scas
inc
cmc
and
mov
addr16
sarl
aas
loope
ja
orb
mov
daa
pop
icebp
in
loop
dec
pop
aam
xchg
dec
insb
xrelease
dec
popa
pop
loopne
insl
lds
inc
rclb
xchg
mov
mov
gs
ret
out
std
pop
adc
adc
xlat
ljmp
xchg
outsl
dec
xchg
test
mov
dec
adc
cld
pop
mov
fwait
or
add
enter
loope
push
subl
add
pop
outsl
aad
add
cmpsb
inc
mov
andl
cmp
das
inc
bound
xchg
cli
and
sub
test
dec
push
xchg
xor
jb
pop
jecxz
pushw
iret
mov
lods
mov
sbb
mov
adc
lret
loope
push
mov
sbb
mov
mov
orb
inc
fistps
es
add
mov
mov
xor
xor
pusha
cmp
cmp
inc
inc
outsl
mov
outsb
fwait
repnz
jns
mov
pop
add
sbb
mov
mov
cwtl
mov
fiaddl
jns
mov
mov
and
push
xor
lea
int
dec
jb
add
mov
push
cmp
loop
inc
out
outsl
push
std
mov
mov
inc
jne
mov
arpl
jbe
repnz
cmp
testl
shlb
inc
aad
icebp
mov
inc
pop
insb
mov
sub
imul
addr16
cmp
mov
mov
outsl
lret
in
scas
lock
xlat
inc
add
push
imul
xchg
insb
push
mov
ja
lds
xchg
mov
loopne
jg
mov
inc
push
dec
adc
scas
push
push
lds
xchg
in
pop
cwtl
sahf
xorl
push
lds
jne
call
xlat
or
adc
jnp
cmpl
rcr
aaa
mov
pop
pop
ret
clc
pop
scas
ja
nop
insl
sbb
pusha
fldt
test
fsubrl
mov
test
xchg
adc
push
cmpb
fstpl
test
ja
das
test
data16
cld
sub
pop
mov
mov
mov
lret
mov
push
ret
dec
and
adc
jae
das
sbb
xchg
into
jmp
clc
daa
xor
pop
aad
int
push
jecxz
push
jnp
mov
push
andb
xchg
push
fwait
repz
xchg
jae
fiaddl
sbb
pop
xor
sahf
jnp
mov
fistps
subl
jbe
and
pop
cmpb
mov
cmp
daa
call
into
js
dec
test
lods
sbb
push
jo
jmp
std
xor
lock
or
and
dec
test
add
in
outsl
gs
js
pop
scas
jo
xchg
iretw
cmp
sbb
cmpsb
add
pop
test
adc
sti
push
and
push
jns
jecxz
xor
xor
sbb
jge
mov
mov
cmp
and
mov
or
pop
pop
xchg
clc
pop
mov
out
ret
mov
shlb
daa
loop
dec
insl
xor
out
sbbb
hlt
sub
imul
jae
push
iret
jae
out
pushf
add
mov
scas
lret
push
add
adcb
xchg
push
push
repnz
lcall
hlt
hlt
ror
and
scas
lds
dec
cwtl
lcall
cmpb
sbb
or
outsl
mov
iret
packsswb
or
mov
lcall
and
inc
sub
popf
push
test
inc
hlt
xchg
lret
out
or
addl
out
dec
ror
divl
pop
adc
and
push
imul
stos
sub
mov
cmc
push
mov
adc
orl
jge
push
cmp
sub
cld
adc
sub
jae
pop
pop
aad
data16
sub
add
insb
scas
mov
cmp
insl
mov
mov
dec
mov
inc
andl
fcmovne
stc
outsl
je
ret
jp
stc
ret
insb
push
gs
nop
rorb
mov
cmp
xchg
mov
pop
pop
mov
sbb
out
mov
orl
xchg
mov
cmp
cwtl
jb
mov
icebp
cld
add
fildl
cmp
loope
in
inc
jecxz
mov
jae
sbb
in
pop
mov
dec
xor
aas
pop
xchg
sahf
cs
or
je
test
cmc
push
jne
push
int3
pop
mov
pop
negl
sub
adc
mov
es
jne
rcrb
pop
pop
mov
mov
push
sbb
int
out
shll
insl
lahf
fmull
mov
pop
xchg
sub
mov
cmp
pop
jge
popa
cmp
and
in
jnp
xchg
xchg
cmp
seto
inc
clc
adc
lret
sti
and
add
inc
idiv
inc
and
cli
pop
xchg
imul
dec
scas
jb
xchg
xor
aad
xor
adc
push
in
push
cmp
inc
pop
push
sbbb
mov
pop
out
mov
inc
xor
jle
push
fs
push
sub
in
insb
test
and
sub
dec
adc
incb
int3
push
inc
testb
cld
sub
mov
xor
jbe
mov
out
cmpb
aad
inc
ljmp
aas
mov
fnsave
xchg
ret
and
decb
xorb
in
dec
mov
iret
lret
iret
jmp
scas
adc
dec
jbe
inc
pusha
adc
xchg
xchg
or
fldcw
dec
movsb
or
shl
add
andl
adc
or
addr16
push
or
sub
js
or
rol
inc
les
xchg
jns
push
js
into
mov
inc
std
in
cmp
mov
adc
rcr
adc
jmp
ret
xchg
dec
jmp
and
and
mov
stos
sub
jae
hlt
stos
rclb
repnz
add
aas
adc
stc
aaa
pop
or
sub
jnp
inc
mov
add
mov
jno
insb
fwait
icebp
andl
mov
lret
fidivs
lret
data16
adc
pop
lods
xchg
xchg
xlat
or
or
test
sub
dec
jnp
repnz
push
cmpsl
cmp
das
adc
popf
sarl
ljmp
pop
push
iret
xor
nop
fiadds
repnz
inc
jno
std
scas
cwtl
pushf
jecxz
ljmp
dec
jae
jns
mov
or
in
loop
push
pop
push
jo
addr16
jae
fdivl
ja
cmpsb
andb
stos
xchg
int
and
je
adc
shr
jne
pop
fildll
lret
movsl
test
repnz
aaa
aaa
push
jne
in
shrl
mov
adc
push
mov
pop
inc
in
into
xchg
push
cmp
in
mov
or
xor
cld
pop
mov
call
inc
les
fstpl
jl
xor
scas
xor
bound
dec
ret
lods
sub
sbb
nop
push
push
popa
mov
leave
dec
adc
movsl
outsb
sub
xor
in
popf
and
push
fwait
xlat
fwait
hlt
aas
adc
xor
mov
mov
jl
fisttps
mov
dec
dec
test
loope
cmp
enter
mov
pop
sbb
enter
adc
js
cmp
or
scas
push
pop
xor
pop
mov
mov
cld
roll
lods
movsb
push
mov
dec
mov
imul
loop
lock
sub
pop
xor
push
sub
inc
stos
mov
mov
mov
adc
std
add
pusha
sar
and
sub
sbb
popw
jl
xor
pop
dec
xchg
push
rolb
incl
rcrl
test
jb
orl
mov
in
jne
mov
in
addr16
push
adc
out
out
hlt
and
jo
push
test
adc
bound
adc
dec
and
rolb
or
pop
fisubs
dec
popa
jo
sbb
inc
call
pop
cmp
std
push
stos
movsl
pop
cmp
daa
adc
pop
pop
iret
jmp
push
jbe
and
imul
out
push
xor
les
lods
es
sub
enter
ss
loop
mov
xchg
in
jnp
push
or
or
shll
movsb
mov
int
repz
jecxz
pop
mov
xor
add
pop
mov
jmp
dec
adc
add
dec
dec
mov
mov
push
xor
hlt
xchg
iret
ljmp
icebp
xchg
sbb
gs
cmpsb
arpl
popf
ds
pop
push
push
dec
sub
sti
add
add
popf
shrb
shl
push
enter
and
jnp
xor
lods
popa
fs
mov
outsb
mov
adc
je
push
dec
push
adc
xchg
test
rcrl
jns
and
jg
lock
push
mov
push
rcrb
jg
cwtl
lret
mov
pop
mov
mov
pop
sub
mov
inc
sbb
push
mov
test
icebp
xor
es
and
scas
addr16
adc
mov
pop
or
aad
cmpl
in
or
imul
dec
and
push
add
or
daa
push
push
sbb
addr16
ja
lock
inc
int3
pop
add
xorl
scas
cmpsb
es
rol
lret
xchg
cmp
inc
xor
xchg
inc
ljmp
fs
jns
das
adc
add
repnz
repnz
fistpll
std
rcrl
in
mov
testb
sahf
mov
fildll
mov
xor
mov
or
xlat
icebp
cmc
bound
push
adc
lock
ror
pop
outsb
test
addr16
movb
hlt
outsl
pop
fistl
das
cmp
repnz
test
and
jno
out
nop
mov
dec
test
std
adc
mov
test
out
inc
andb
mov
fisubrs
iret
cld
int3
add
xchg
cmp
in
loope
es
inc
pop
ja
xchg
xor
sub
or
mov
in
mov
dec
dec
lcall
or
sbb
jno
in
push
push
push
mov
in
adc
shrb
dec
clc
sbb
pop
pushf
pop
xchg
aam
lods
stos
xchg
ret
ret
dec
clc
enter
push
push
das
out
mov
out
aad
cmpsl
and
mov
sbb
lds
dec
js
stos
xorb
mov
mulb
mov
or
flds
ror
jle
or
lret
and
inc
out
arpl
mov
test
cmp
fs
mov
dec
fidivs
dec
mov
xchg
cmp
cmpsl
cmpsb
jo
xchg
lock
int
shlb
cli
sbbl
push
mov
dec
xor
enter
adc
sbbl
sub
sbb
inc
mov
pop
dec
cltd
fdivs
jl
scas
adc
mov
out
popf
fimuls
xchg
mov
fbstp
popa
jle
cmp
xchg
test
xor
fwait
imul
push
shll
les
jecxz
insb
ds
loope
lock
filds
in
sahf
mov
es
enter
aaa
push
aad
daa
mov
push
pop
inc
sbb
rorb
test
and
nop
jmp
sub
call
and
loope
jge
push
dec
int
pop
push
pop
ret
adc
adc
fstpt
sub
out
inc
add
jo
idivl
roll
aad
pushf
mov
jbe
mov
enter
in
mov
bound
jb
or
push
xor
cmpl
cwtl
loope
xor
dec
sbb
outsb
fadd
pop
mov
or
mov
mov
or
aas
push
ds
adc
popf
inc
adc
pop
cmp
adc
lock
movsb
sbb
loope
out
dec
add
inc
jle
xchg
mov
cmp
sbb
sub
and
lock
aam
movl
cmp
xchg
outsb
jnp
mov
cwtl
ret
mov
cwtl
or
call
and
movsb
mov
es
test
pop
ljmp
sbb
and
or
sub
enter
adc
enter
sub
mov
daa
or
lret
xorl
push
xchg
movsb
or
push
je
fstpl
insl
inc
push
push
insb
add
add
sub
jns
hlt
rorl
lret
mov
test
pop
xchg
and
adc
stc
lahf
lds
mov
mov
push
jmp
jge
xor
in
nop
xchg
mov
and
jl
or
bound
dec
icebp
les
lods
xor
scas
fnstcw
loopne
pop
adc
test
cld
cwtl
xchg
mov
pushw
sub
hlt
add
ss
jmp
arpl
lret
add
fsubrs
jge
leave
dec
sahf
test
mov
dec
repnz
daa
lock
adc
push
cmp
sub
divl
inc
imul
stc
fwait
sub
and
or
xchg
test
adc
push
mov
sub
push
pop
rcrl
pop
adc
sub
sub
imul
mov
mov
mov
sbb
hlt
test
push
ret
mov
mov
aam
mov
push
outsl
and
imul
cmp
lcall
mov
inc
dec
add
leave
fwait
cmp
xor
in
dec
test
nop
rcl
jb
jns
mov
fisttpl
adc
sbb
clc
cmpsl
xor
dec
stos
push
mov
dec
push
aam
jmp
xor
or
mov
cmp
pop
mov
or
or
cmp
cmc
pop
andl
in
fs
mov
inc
or
pop
jb
adc
push
cmpb
sub
hlt
xor
stos
pushf
pop
testl
mov
mov
out
pop
pop
mov
push
and
adc
filds
hlt
mov
sub
rdmsr
lret
lods
shll
rorl
sub
scas
adc
loopne
fcompl
mov
testb
mov
dec
or
int
or
xor
sub
inc
mov
xor
pop
push
mov
mov
mov
jnp
sub
add
add
loope
pop
mov
inc
mov
push
cmp
in
rorb
pminub
int
lret
enter
or
fisubs
addb
adc
sbb
add
add
ret
add
outsb
pop
pop
inc
push
out
add
xchg
jge
or
push
add
std
or
cwtl
jns
and
add
jecxz
push
mov
push
jne
std
popa
arpl
pushf
push
push
or
push
cld
movmskps
test
jb
out
or
call
jg
das
lahf
std
inc
mov
jne
jg
js
pop
inc
mov
and
stos
cmc
xor
or
shrl
add
pop
mov
negb
cmovne
jne
into
addr16
or
das
lcall
out
fisttpl
pop
inc
sti
xchg
or
decb
xchg
iret
sub
jg
ret
xor
adc
mov
inc
icebp
aad
lcall
pop
fs
cmpsl
imul
ss
arpl
rorl
or
out
dec
sarb
cmovae
loop
movsl
push
xchg
sbb
fisubl
cld
inc
and
add
scas
pusha
and
cld
and
fnstsw
jge
xor
sub
cs
lahf
jmp
jecxz
pop
pop
sub
cmp
ficompl
arpl
nop
xchg
or
adc
push
sub
fwait
push
lds
mov
sub
and
push
testl
mov
cs
fimull
dec
bound
icebp
lds
mov
lea
lcall
lods
mov
xor
jge
roll
or
or
das
add
sub
rcr
pop
or
add
mov
pop
sbb
sub
or
push
cmp
enter
shll
xor
dec
ja
add
xor
mov
and
xor
mov
xchg
adc
pop
cmp
stc
xchg
dec
pop
fs
inc
add
inc
fisttpl
add
fwait
les
xor
push
or
mov
inc
lret
orb
lahf
sbb
xor
rclb
add
icebp
lds
icebp
movsb
mov
adc
daa
pushw
in
mov
pushf
loop
ja
stc
movsb
xchg
cld
xchg
test
inc
test
js
inc
imulb
or
hlt
aam
cmpsl
out
adc
out
cli
mov
adc
shl
jle
xor
rcr
in
sub
loope
inc
loop
lds
je
jns
fcmovu
jecxz
and
add
mov
add
pop
mov
je
mov
mov
pop
sub
popa
cmp
pop
gs
pop
ret
cs
movsl
cmc
sub
cmp
sbb
or
push
ret
inc
cmpsb
pop
les
adc
push
sbb
adc
jbe
out
addr16
out
arpl
jnp
xchg
inc
test
dec
insl
xchg
pop
push
and
pop
lds
or
nop
jns
jno
fst
mov
inc
mov
mov
pushf
jl
sbbb
lahf
or
adcl
lock
repz
lods
daa
mov
imul
std
aaa
push
and
add
fadds
mov
test
mov
int3
inc
scas
push
push
sahf
or
xchg
ror
mov
arpl
xor
fidivrs
or
xor
orl
jecxz
xor
add
aas
adc
ret
cmp
inc
outsl
bound
jle
ljmp
xchg
push
movsb
adc
repnz
mov
sub
or
ja
movsb
inc
add
jb
cmp
or
mov
push
adc
cwtl
xchg
popf
mov
rolb
int
orb
int3
sub
movsb
sub
jnp
pop
int
push
inc
adc
sub
sub
or
jno
mov
push
sbb
movsb
and
into
push
pop
test
jl
call
jp
lods
xchg
xchg
jg
es
stos
mov
sahf
pop
dec
jnp
add
inc
hlt
mov
and
in
pop
stos
cltd
dec
insl
sarl
pop
in
int
xor
adc
add
sahf
call
jb
inc
enter
jp
popf
jmp
repz
mov
xor
mov
push
aas
xlat
mov
loop
pop
dec
ret
sub
stc
mov
loope
sbb
out
dec
lds
dec
lods
dec
pop
cmp
addl
mov
ficoml
cmp
adc
pop
ss
push
gs
fs
outsb
cmc
sbb
mov
scas
jg
fisubs
mov
or
cltd
insb
sti
inc
dec
fwait
and
and
out
pop
ljmp
xor
cmpsl
cmpsl
mov
mov
mov
push
xchg
and
fidivrs
push
mov
insl
daa
sub
pop
xchg
mov
jo
arpl
lret
fsubr
adcb
fwait
pop
add
inc
lods
jecxz
data16
xchg
lahf
jnp
jecxz
hlt
pop
ja
rolb
jmp
sbb
sbb
or
rclb
dec
and
add
test
je
imul
mov
jns
or
or
add
cmp
fnstcw
call
mov
inc
fcomi
outsl
data16
sub
jle
sbb
test
sarl
xor
adc
cmp
nop
sub
movsl
test
in
pop
int3
mov
mov
insl
mov
add
mov
mov
aad
cmpsb
call
mov
xchg
inc
loope
out
jne
mov
xor
aam
cmp
stos
add
sbb
js
adc
loope
imul
pop
mov
xchg
and
jno
ret
add
jecxz
negb
in
lds
int
out
push
or
mov
shl
add
fucomi
or
jge
repz
lock
pop
push
sbb
arpl
leave
les
or
imul
xor
cmp
mov
popw
adc
jl
sbb
lods
and
aaa
int
sub
ret
stos
lods
imul
mov
push
clc
cmpl
mov
add
lret
loopne
xchg
adc
add
cmp
jns
mov
adc
fimull
mov
add
inc
shll
sbb
or
push
daa
lock
test
sar
lea
xchg
iret
lods
inc
filds
and
sub
or
jecxz
mov
fmull
sbbb
adc
mov
rclb
mov
ret
fisubs
xor
call
push
das
orb
xor
jae
jle
dec
jae
or
xchg
test
sti
xchg
pop
mov
stos
or
xlat
jns
jb
into
inc
mov
mov
cld
fnstsw
les
ret
sub
jmp
mov
ror
aas
test
icebp
dec
cmc
sbbl
test
xchg
mov
testb
pop
inc
cmp
or
dec
mov
sub
gs
sbb
cli
aas
test
bsf
cltd
adc
xchg
mov
rclb
mov
imul
mov
icebp
jle
std
push
les
movsl
adc
sbb
pop
adc
and
dec
mov
call
jle
fs
gs
and
jge
lds
and
jge
incb
jp
cmp
sbb
int
cmp
cwtl
jns
test
push
pop
aaa
lret
lods
sbb
add
lods
inc
xchg
add
fistpll
stc
icebp
pop
jnp
ret
stc
xchg
jmp
push
orb
pop
mov
les
adc
add
xor
adc
pushf
lret
jg
jns
mov
or
aas
xchg
or
mov
mov
inc
xchg
je
shrl
rorb
test
cmc
cmp
inc
xchg
stos
xor
and
jns
mov
push
out
outsb
cmp
cltd
addl
cwtl
and
push
xor
mov
sbbl
inc
mov
js
sub
mov
cmp
adc
sbb
sub
jl
mov
repnz
xor
iret
jmp
xor
lcall
into
pop
xorl
inc
ret
scas
dec
rcr
add
imul
and
lock
push
cmp
shlb
push
subl
in
push
mov
sbb
data16
pusha
push
nop
outsb
ljmp
sahf
add
or
mov
sub
push
mov
push
es
cmpsl
dec
sub
jge
pop
xchg
dec
stos
rclb
or
inc
adc
loope
ret
sbb
mov
test
pop
mov
mov
cwtl
add
push
push
mov
push
push
xor
stos
cld
out
xor
lcall
repz
into
enter
add
loope
stos
clc
xchg
sub
idivb
insb
icebp
insl
pop
or
push
jmp
int3
jne
loop
push
leave
iret
mov
adc
and
les
aas
aad
ret
sub
jne
pop
in
aad
xor
xor
popf
hlt
clc
imul
jmp
jecxz
nop
repz
call
cmpsb
lret
mov
pop
stc
jp
or
or
test
inc
aas
mov
insl
cmp
xor
pop
outsl
cs
jbe
mov
push
push
frstor
insb
pop
int3
xor
lods
adc
or
cli
cmpsl
push
push
ss
pop
ljmp
cltd
outsb
mov
adc
bound
sbb
or
popfw
out
dec
imul
xchg
or
mov
dec
in
or
lods
jnp
jmp
mov
pop
test
rcrb
adc
imul
lcall
in
mov
shlb
outsb
add
pop
lcall
adc
dec
and
out
or
pop
push
in
mov
dec
test
xchg
sub
insb
outsl
mov
lods
and
cmp
imul
pop
aas
cmpsb
and
imul
loop
daa
xchg
adcl
mov
aaa
std
shlb
je
mov
pusha
pop
shlb
sub
jp
xchg
fisubrs
lcall
movsb
jns
push
std
mov
je
push
lret
adc
add
mov
cld
mov
mov
movsl
imulw
and
clc
cwtl
or
out
sbbl
push
adc
into
iret
test
jb
xlat
call
pop
aad
loopne
sbbb
das
sbb
push
ja
sahf
sub
adc
push
add
jne
sti
cld
out
fs
pop
loopne
in
lds
pop
sbb
mov
in
test
in
gs
xor
popa
and
or
jns
lea
jge
stos
test
mov
lods
and
sahf
mov
ret
or
rcrb
ds
or
rcll
pop
fdivrl
cld
adc
fsubl
or
dec
inc
in
cld
dec
push
shrl
add
jnp
ror
sub
jmp
xchg
cmp
or
lea
mov
in
pop
push
insl
in
fstl
pop
out
push
or
fisttpl
fsubp
jns
test
lcall
in
enter
dec
jne
sbb
insb
xchg
lahf
mov
pop
add
notl
sbb
dec
inc
mov
psrld
dec
xor
fildll
pop
sub
pop
rorb
push
adc
ret
mov
add
inc
fdivrs
ljmp
lds
pop
pop
dec
insb
and
adc
sbb
fbld
ds
xor
xlat
mov
jo
sub
fwait
cld
or
and
outsl
imul
cmp
fcmovb
imul
push
lds
sahf
inc
jl
sbb
inc
roll
mov
sbb
push
rcl
out
cmpsb
xchg
idiv
imul
out
jns
mov
sahf
shl
ja
push
inc
or
mov
cld
adc
mov
cltd
adc
jnp
ss
mov
push
fidivrl
mov
lea
jmp
lods
mov
and
lods
and
or
push
push
in
rclb
shrl
and
jb
faddl
mov
jne
outsl
sub
icebp
clc
movsl
fistpll
leave
fdivrp
adc
test
jle
insl
mov
jne
bound
rclb
stos
add
and
ja
call
xor
int
arpl
sti
mov
stos
pop
popf
pop
add
inc
loope
js
iret
pop
ljmp
ror
push
cli
imul
loopne
xchg
xchg
shl
and
xor
movsl
jecxz
adc
lock
pop
adc
cmpsb
jl
push
jbe
call
out
xchg
sbb
mov
mov
fdivr
jle
mov
sbb
inc
fdivrl
fistpl
fbld
dec
movsl
pop
in
dec
stos
dec
pop
sbb
shlb
or
cmp
inc
enter
lea
xchg
movsb
notb
pshufw
imul
jne
sar
addr16
cwtl
daa
inc
cmpsb
add
sub
mov
jle
mov
xor
push
sub
pop
pushf
sbb
sbb
mov
pop
mov
imul
movsl
jno
in
fwait
jmp
mov
cld
mov
inc
sahf
negl
cld
repnz
orl
in
mov
mov
push
div
aam
movsl
sub
jmp
lds
sarb
subb
mov
dec
push
push
hlt
and
sti
mov
scas
mov
addb
adc
or
mov
cmp
subb
fmuls
pop
inc
pop
pop
inc
loopne
loope
jmp
sub
sbb
add
and
dec
outsl
mov
pusha
fnsave
dec
sbb
lods
mov
mov
test
mov
pop
stos
pop
mov
mov
dec
dec
dec
pop
sti
ss
in
sbb
out
push
fists
dec
mov
test
fbld
sbb
jecxz
dec
fsubrl
fdivrp
mov
push
add
add
jle
data16
adc
push
push
mov
push
cmpb
in
cmp
dec
cmp
pop
sub
shrl
sbb
ret
mov
sub
and
jg
lahf
call
sbb
cmp
add
dec
inc
sar
hlt
cmp
in
cmpsb
lahf
jge
sub
outsb
call
insb
mov
fidivs
push
or
shrl
scas
test
scas
das
inc
fdecstp
inc
mov
and
xchg
stc
sbb
or
rclb
add
data16
testb
sub
rcrl
xor
outsb
lods
jge
sub
push
cmp
mov
popa
mov
mov
sub
outsb
cs
dec
mov
dec
adc
sbb
jno
and
mov
cs
mov
ljmp
shrb
leave
and
jmp
jo
xor
cli
es
popa
dec
mov
cmp
stos
or
pop
jno
jp
push
xchg
outsb
les
jno
and
adc
adc
popa
cld
pop
adc
les
fisttpll
fdivr
mov
dec
xor
inc
pop
daa
testl
xlat
fldt
mov
xor
mov
aaa
test
cwtl
rcrb
or
mull
jbe
dec
inc
in
or
pop
jl
jae
outsb
cmp
add
out
outsb
into
jecxz
pop
stc
pushf
in
loop
gs
repnz
jmp
loop
fnsave
pop
and
xchg
cmpsb
and
addr16
mov
xlat
pop
call
add
lock
imul
and
dec
lret
je
nop
lahf
stos
pop
lods
pop
repnz
jecxz
jp
and
sbb
fmull
pop
iret
in
cmp
adc
push
mov
sub
in
xor
sbb
or
rcr
pop
insb
clc
xchg
mov
fwait
lock
mov
xchg
mov
mov
add
jmp
in
insb
sub
inc
hlt
roll
sub
pop
shlb
mov
push
in
ret
lcall
lret
sub
or
and
fidivl
std
fsubp
repnz
add
cmpsl
dec
mov
fnstenv
in
orl
push
popw
cmpsl
mov
and
sar
fdivrs
sahf
xchg
adc
in
cmp
out
inc
pop
arpl
ss
test
push
push
mov
dec
add
adc
cli
es
in
ja
push
lret
ss
mov
jae
aaa
fcompl
mov
inc
popf
pop
pop
ds
sub
aad
fsts
bound
or
add
mov
xchg
sarl
xchg
and
xchg
rcr
lret
cmpsl
out
mov
shlb
gs
jbe
pusha
cmp
test
cmp
scas
push
push
pusha
mov
rolb
out
inc
push
hlt
cmc
push
test
fst
mov
mov
sub
xor
cmp
repz
or
les
xlat
mov
jg
mov
dec
xchg
fisubrs
adc
iret
repnz
cmp
pop
adc
dec
hlt
or
adc
testb
mov
lret
scas
mov
push
inc
push
imul
jl
cli
mov
jecxz
adc
push
mov
mull
mov
movsl
cli
scas
out
in
test
and
rcll
ds
mov
mov
dec
imul
push
sbb
das
stc
daa
xor
fdivrs
popf
test
cmp
sar
int3
ss
fsubrl
add
jnp
xlat
dec
iret
cmp
addl
jb
mov
aam
adc
in
push
cli
cmpsl
lods
daa
js
into
out
dec
cmp
pusha
pop
repnz
push
inc
mov
sub
mov
jnp
sar
push
das
loopne
mov
pop
push
push
inc
add
dec
cmp
jg
cmp
adc
nop
arpl
rorl
fwait
lret
mov
scas
js
mov
pop
or
hlt
mov
mov
ljmp
or
sub
pop
inc
mov
jns
fisubl
add
insb
enter
lcall
mov
outsb
test
nop
clc
es
and
jge
xchg
xor
mov
ficoml
mov
dec
mov
out
push
and
sub
add
in
jg
jle
stos
cli
aas
add
arpl
inc
inc
test
insl
lahf
lcall
out
dec
push
mov
lret
in
adc
and
xchg
scas
ret
cltd
jle
mov
push
mov
fucomp
loop
les
xchg
or
icebp
cli
mov
or
aad
jb
push
fsubr
mov
fbld
dec
mov
aam
data16
pop
adcl
stos
jnp
push
pop
jns
or
je
mov
push
lds
outsb
cmpsl
popa
mov
nop
pop
xchg
ss
xchg
adc
jo
rorb
jne
rcrl
lret
jmp
mov
mov
or
in
mov
aaa
jl
gs
test
imul
pop
sbb
adc
inc
jl
aas
mov
push
insb
add
xchg
jge
fwait
or
std
inc
mov
hlt
cmp
loope
pop
ja
clc
seta
xchg
xor
dec
mov
mov
mov
jae
push
pusha
pop
movsb
aaa
mov
push
cmp
add
mov
xor
push
pop
dec
push
dec
xor
setae
push
sbb
shr
imul
mov
mov
sub
xchg
sahf
inc
and
xchg
xchg
cld
jp
xlat
push
sahf
xchg
orb
popf
fdivr
mov
je
das
cmpsb
jmp
shll
xlat
push
mov
or
insb
dec
push
inc
cmpsl
call
sbb
stos
ss
mov
andl
test
mov
pop
jle
loope
add
adc
sbb
ss
or
xchg
xor
pushf
jmp
pusha
shrl
push
dec
call
jle
xorb
or
iret
lret
outsl
cmp
or
sbb
mov
sbb
repz
js
stc
fcmovnb
xor
sar
cmp
push
pushf
mov
push
sahf
add
enter
lret
test
cmpsb
adc
orl
lds
ficoms
sub
cmpsb
frstpm(287
arpl
bound
sub
push
push
sbb
nop
xlat
dec
xlat
popa
mov
mov
mov
mov
outsb
add
push
dec
test
add
and
orb
lea
cwtl
cmp
add
push
sub
mov
lods
ljmp
or
fcompl
dec
sub
fidivrl
jns
aaa
in
cmp
xchg
xchg
dec
lock
push
and
dec
inc
inc
rcl
es
xor
cli
xor
cmp
mov
or
aam
sub
outsl
sbb
mov
ret
dec
jns
jae
in
xchg
xchg
inc
push
cmpsl
push
jmp
shl
gs
pop
pop
inc
sarl
jle
ljmp
xchg
cmc
stos
rclb
sbbb
xchg
out
pop
jbe
sub
popl
data16
aas
xchg
push
mov
jle
fadd
scas
test
out
adcb
loop
cld
das
cmp
and
sbb
xchg
push
push
mov
and
call
loope,pt
push
inc
shl
push
movsb
pop
pop
cwtl
add
int
mov
out
mov
push
push
push
cltd
insb
pushf
in
test
cmpsl
jecxz
shl
mov
xchg
mov
or
xor
push
data16
loope
and
stos
push
inc
ja
aad
das
mov
mov
mov
xor
roll
push
ret
lret
ljmp
or
fiaddl
pop
ret
roll
dec
mov
fsts
maxps
.byte
sbb
add
test
mov
sub
mov
push
lock
sbb
aam
clc
sahf
test
xor
loopne
and
pop
add
mov
and
pop
lret
pop
mov
mov
sbb
xchg
xor
pop
ja
dec
scas
lret
enter
mov
mov
in
adc
jp
sbb
call
push
lods
add
lret
xor
fdivl
cli
push
js
mov
in
push
inc
ror
aad
sbb
and
adc
mov
repz
adc
add
sbb
or
in
add
xorb
xlat
sub
mov
stos
cli
push
insb
aad
add
in
mov
rorl
xchg
mov
dec
sub
push
popf
add
stc
jg
mov
notl
rclb
into
cs
sub
cmp
std
adc
cltd
out
sbbl
cmc
popa
ret
cmp
fidivs
xchg
push
push
jl
xor
jb
xchg
or
fistl
dec
and
scas
popf
out
fs
scas
into
lods
adc
jl
pop
mov
bound
repz
adc
adc
les
aam
adc
mov
dec
movb
dec
out
ljmp
pop
aam
push
pop
loope
and
test
inc
stos
mov
insl
aaa
mov
cmp
xchg
in
rcr
cmpl
pop
std
cmpb
icebp
xor
jl
push
add
in
xchg
mov
and
dec
mov
ljmp
mov
xor
adc
mov
in
inc
xor
xor
mov
arpl
adc
pop
push
adc
in
push
inc
out
jge
mov
cs
sub
inc
mov
outsb
pop
cs
mov
cs
add
addr16
and
decl
push
test
or
aaa
mov
jns
sub
movsl
ja
out
cmp
dec
cmp
dec
ja
mov
cwtl
mov
cli
push
aad
xchg
mov
inc
and
ja
rcrb
cli
aaa
hlt
je
cld
fstpl
jg
jo
call
in
iret
cwtl
clc
jge
add
fisttpll
cld
fstpl
add
repnz
repnz
mov
insl
xor
xorb
les
mov
adc
ss
mov
outsb
bound
ds
jp
ja
dec
or
in
pop
nop
add
pop
arpl
pop
adc
add
or
icebp
mov
ret
mov
es
hlt
xlat
test
pop
fcmovnu
push
fcompl
movsl
fldt
and
mov
push
insl
jnp
cmp
dec
pop
sbb
sar
sahf
ss
gs
add
adc
pop
and
popf
mov
in
push
ja
mov
subl
subb
jno
in
jnp
or
mov
jle
pop
lods
mov
mov
dec
cmp
imul
pop
test
jns
cmc
xor
or
pop
in
fisubl
fidivs
xchg
fsubs
aas
mov
xor
push
orb
pop
mov
inc
int3
xor
ret
cli
dec
aas
mov
inc
pushf
pop
jecxz
jp
jl
xchg
cli
mov
rcll
and
mov
les
xor
adc
hlt
data16
push
filds
push
push
add
pop
xlat
cmp
hlt
loope
pop
popa
repz
sub
cmc
jecxz
arpl
mov
lcall
sti
mov
xchg
xchg
loop
cs
push
inc
or
and
clc
xchg
das
test
mov
pop
xchg
aam
adc
sub
ror
push
mov
jb
stos
loope
and
jne
inc
adc
inc
cmp
xchg
clc
xor
stos
push
xlat
adc
mov
fisttps
mov
cmp
repz
mov
and
je
pop
mov
jecxz
out
ljmp
pop
arpl
inc
bnd
test
enter
mov
movl
sahf
xorb
sub
sbb
and
rcll
ja
mov
xchg
cmp
push
inc
and
ljmp
mov
into
jg
movsl
dec
gs
dec
stc
dec
xor
add
ljmp
cmc
popf
icebp
add
dec
out
push
inc
pop
out
sub
pop
data16
add
jecxz
call
nop/reserved
ljmp
stos
int
jns
mov
imul
jnp
mov
fcmovnb
push
cmp
ss
and
jnp
pop
mov
xchg
icebp
packsswb
orb
shlb
sbb
ljmp
dec
lret
in
pop
into
lock
push
mov
repnz
and
addr16
gs
pop
test
fnstsw
lock
je
cmc
std
cmp
sbbb
into
rcrb
pop
push
mov
ds
sbb
mov
aas
push
stos
jecxz
mov
fcoms
mov
ficoml
ds
mov
ds
adc
subb
lods
pop
mov
ss
in
sub
loop
sub
sti
in
cld
negl
mov
je
inc
add
aam
ljmp
cmp
pushf
cmc
js
xchg
cli
bound
cmp
out
loopne
dec
xchg
add
sti
dec
xchg
jb
iret
xor
push
fadds
jo
push
mov
adc
enter
mov
lahf
mov
ds
cmp
push
cwtl
mov
sti
xor
rcl
push
inc
jb
mov
xchg
adc
jae
fcmovnb
cmp
xlat
out
mov
sbb
sbb
pop
mov
push
mov
push
mov
xor
out
xchg
adc
mov
adc
icebp
mov
fadds
fadds
fs
repz
inc
sub
arpl
jge
jle
cmp
outsl
add
adc
pusha
and
jg
mov
inc
rcrl
rolb
xlat
xchg
nop
imul
add
stc
mov
mov
or
jns
sbbl
dec
in
mov
dec
in
mov
mov
xchg
ffree
dec
push
or
in
clc
fsts
jmp
test
orl
iret
loope
bound
and
pop
xlat
mov
mov
movsl
iret
nop
int3
xchg
xchg
cmp
loopne
and
dec
xchg
arpl
divb
out
mov
and
sbb
jae
jb
pop
mov
negb
adc
je
fwait
dec
sbb
push
add
fmul
and
addr16
cmpsl
inc
dec
mov
xchg
jb
subl
pop
arpl
in
adc
daa
ret
addb
imul
push
sbb
fcmovnbe
test
leave
jg
sbb
cmp
aad
xchg
sub
or
gs
movsl
and
mov
mov
int
mov
das
pop
or
push
lret
pushf
xchg
jae
gs
mov
and
lret
and
mov
push
ja
cmp
shll
and
fstps
or
inc
xor
push
out
dec
adc
cli
mov
mov
cld
push
xorl
gs
and
jp
scas
dec
ret
xchg
stos
test
aam
out
ljmp
mull
icebp
cld
xor
mov
pop
lds
std
je
push
fimuls
nop
aam
sbb
ret
inc
push
stc
shrl
jg
push
adc
cmp
into
xor
push
in
dec
leave
cmc
push
clc
cli
jmp
mov
in
push
pop
fistpl
xor
lea
out
ss
stos
fsts
xchg
in
push
mov
mov
cltd
inc
cmp
jbe
pop
mov
cld
test
lods
push
movsl
cli
fldenv
push
imul
mov
getsec
mov
adc
rorb
test
pop
dec
mov
loope
in
popa
test
xchg
mov
fmuls
pop
cmp
test
mov
cs
adc
cs
cli
xor
loope
ret
clc
ljmp
jns
cmp
xor
cwtl
mov
arpl
fsubrl
rcr
cmp
inc
rorb
xchg
sub
or
daa
push
mov
pop
inc
in
pop
mov
push
fsts
adc
imul
inc
pop
je
pop
mov
or
and
xchg
mov
mov
stos
bound
imul
add
adc
inc
dec
out
dec
mov
stos
into
xchg
lret
push
inc
jmp
dec
xlat
repz
and
leave
mov
dec
sub
lock
popl
out
and
sbb
push
lret
pusha
xor
mov
fistl
pop
jle
add
sub
enter
dec
push
jl
jl
enter
insb
imul
call
dec
push
xor
push
push
jnp
mov
adc
mov
iret
adc
iret
out
xor
shll
and
out
or
mov
rcl
mov
inc
jecxz
cltd
pop
rorl
clc
or
ret
ret
test
ret
roll
orl
pop
scas
pusha
mov
cltd
xchg
ja
inc
ret
xchg
push
add
aaa
ljmp
lcall
push
sbb
xchg
cmp
data16
stc
imull
fwait
cmc
mov
mov
add
movsb
sbb
cmpsb
mov
fdivs
sub
movsl
mov
xchg
jle
out
pop
sbb
enter
sahf
mov
or
rorl
in
and
mov
jns
clc
push
leave
adc
sti
jae
arpl
mov
push
cli
cld
mov
and
push
shr
push
dec
add
daa
loopne
je,pt
cmpsl
fisubrl
les
dec
pop
adc
mov
sahf
push
pop
jp
vpunpcklbw
std
movsb
sub
adc
pop
jl
je
icebp
cmp
sti
sbb
es
jle
inc
loopne
jp
addr16
xchg
lods
jne
or
inc
scas
push
mov
xor
pop
cmp
push
sbb
dec
xchg
add
mov
lock
dec
sbb
stos
getsec
dec
loope
or
cmp
jns
mov
and
fwait
push
bound
orb
andb
jo
pushf
dec
test
in
push
xor
mov
xor
shl
pop
or
mov
cs
push
fs
sub
cmpl
inc
insb
push
sub
adc
dec
xor
mov
mov
inc
sti
jne
push
jg
shll
pop
insl
push
jmp
sbb
inc
sbb
dec
movb
mov
dec
inc
push
pop
sbb
adc
push
arpl
mov
inc
out
push
lret
sarl
jl
mov
pop
adc
jle
cmpsl
fcomp
and
incl
in
outsl
imul
nop
adc
cmp
in
andps
inc
sub
inc
ja
in
int3
or
imul
in
push
fadd
adc
push
add
dec
pushl
fistpl
les
ds
ja
inc
leave
mov
dec
mov
mov
repnz
aas
push
fdivl
cmp
cwtl
cmpl
push
mov
or
mov
gs
lea
jle
test
repz
sub
inc
sbbb
inc
xchg
jb
jecxz
std
or
push
in
ljmp
pusha
pop
ja
hlt
imul
pop
sti
pop
pop
dec
sbb
sahf
cmp
hlt
jp
inc
mov
movsl
cltd
mov
lock
xchg
inc
mov
mov
inc
out
jmp
lret
dec
and
test
dec
loope
in
lods
outsb
imul
push
adc
jge
test
test
cmp
cld
adc
adc
cmpxchg
push
push
shll
xlat
add
jecxz
fwait
ret
subb
shlb
jmp
mov
push
in
sub
movsl
jge
inc
fcmovnbe
sbb
std
cmpb
in
cltd
rol
and
xor
push
ja
adc
cmpsl
xchg
pop
sub
xchg
dec
popa
adcb
scas
in
pusha
scas
mov
stc
loop
test
jge
adc
xchg
mov
add
sahf
add
xchg
fidivrs
push
mov
mov
in
xor
xor
mov
in
fisubrs
loopne
jnp
fwait
jmp
ds
pmaddwd
or
inc
jle
xchg
push
mov
adc
mulb
cmpsb
inc
jnp
fidivs
xor
push
cmp
jge
mov
and
cmp
data16
cmp
jo
adc
fisttps
sub
ss
push
imul
rcr
add
cmp
fs
jle
xchg
movb
fadd
sub
enter
pop
pop
lods
les
pop
addr16
add
pop
fwait
mov
in
cltd
test
xchg
push
shr
dec
loop
icebp
rcrl
jmp
jecxz
jnp
xchg
xor
addr16
mov
imul
push
xor
add
cmpsb
pop
sbb
out
lods
sub
test
xchg
xchg
jbe
fdivs
push
imul
decl
pop
test
inc
dec
ljmp
in
gs
or
jecxz
adc
or
jl
jo
movsb
out
push
pop
xor
jmp
fldl
in
adc
cli
loope
leave
cwtl
xor
inc
shrb
imul
jge
out
mull
jle
mov
xchg
dec
int
xor
rclb
mov
mov
jmp
mov
hlt
xor
idivb
orb
jo
mov
push
inc
xlat
xchg
lret
lahf
outsl
and
jp
jmp
addr16
xchg
loopne
jb
mov
cmp
xorl
inc
jge
popa
addr16
imul
outsb
sbb
xor
out
daa
psubsb
inc
scas
enter
or
and
cmp
icebp
push
stos
xchg
lret
fs
cmp
cli
cltd
ja
pop
stc
xchg
ret
filds
xchg
enter
frstor
mov
dec
jne
mov
bnd
and
fwait
inc
je
fstpt
icebp
arpl
ja
sub
neg
pusha
adc
push
pop
xchg
stos
and
and
nop
sbb
mov
or
cmp
ret
lock
cmp
fmulp
fs
xchg
push
sbb
in
data16
push
sbb
inc
mov
movsl
inc
jge
ljmp
xchg
scas
popl
push
lahf
mov
daa
subl
cmp
aaa
ret
jns
sub
jmp
sub
pushf
dec
xchg
shl
xchg
pop
in
adc
mov
outsb
call
enter
push
adc
icebp
int3
inc
sub
adc
jl
jl
fcoml
xchg
aam
les
xor
xchg
cmp
out
sub
ret
cmpsb
push
jl
lods
mov
pop
std
cs
notb
xor
push
js
dec
cmpsb
xchg
sti
push
inc
and
sbb
or
cmp
insl
mov
xor
insb
std
sbb
ds
aaa
xor
arpl
inc
pop
mov
popa
jge
push
fs
xor
pop
lock
and
aaa
mov
add
xchg
push
movsb
pop
orb
int
or
xor
jmp
lret
lret
xor
or
sub
xchg
cmp
jle
cmp
shlb
js
enter
cmpsb
gs
push
dec
data16
push
out
push
sub
dec
cmp
enter
icebp
jbe
outsl
push
mov
add
jl
cmpsl
test
packuswb
int3
and
fnstsw
rcrb
lahf
adc
push
adc
mov
rorl
fcompl
or
xor
lods
and
adc
sarl
push
in
cwtl
fmul
je
push
cmc
cltd
pop
xchg
or
sub
int
ss
mov
outsb
xor
movsl
add
cmp
add
sbb
xor
xlat
push
pop
in
cmpsb
dec
int
dec
sbb
adc
inc
test
and
aam
fmuls
sar
jmp
xchg
in
push
jb
icebp
push
cld
xlat
rclb
and
and
push
jle
call
add
fdivr
clc
push
push
fidivrs
repz
daa
leave
sbb
sub
or
add
leave
push
mov
lret
xchg
mov
jae
sbb
fldt
mov
inc
lock
outsb
sub
pop
or
jp
add
addr16
fimull
adc
imul
cmp
js
dec
stc
push
mov
mov
mov
inc
adc
ja
push
jne
mov
pop
dec
dec
shlb
in
ret
fiaddl
loopne
xor
mov
sub
and
mull
mov
xor
mov
cmpsb
movsl
jb
dec
fwait
mov
lea
jne
mov
add
xor
test
pop
ret
mov
loopne
mov
or
mov
dec
hlt
pop
pop
sbb
jle
stos
sbb
pop
lcall
leave
mov
jg
inc
cmp
xchg
xor
jp
sahf
aam
int
xchg
ret
xchg
cmp
adc
fstp
in
or
fsts
xor
xor
push
pop
jno
or
inc
fcmovnu
movl
push
gs
cmc
into
cmp
pop
dec
mov
dec
sub
mov
xchg
sti
adc
xor
imul
repnz
stos
loopne
mov
cmp
out
mov
push
pop
adc
and
add
repnz
adc
pop
cs
outsl
fcmovu
push
in
add
mov
mov
pop
cmp
lret
in
mov
jecxz
out
or
xor
add
data16
mov
sub
jae
gs
inc
aas
pop
jle
mov
ret
add
or
xor
test
shlb
push
push
jns
dec
dec
dec
mov
mov
cli
scas
xor
scas
lret
lods
push
sbbl
add
dec
testl
in
push
mov
mov
aad
sub
jne
jae
cmpsl
or
jne
shlb
insb
dec
mov
imul
lods
pop
loop
cmp
sbb
and
out
cmp
mov
jp
sub
adc
sahf
and
out
ret
mov
wrmsr
cs
popf
mov
inc
lret
cli
and
mov
mov
cmpsl
pop
ds
pop
es
jle
sbb
inc
test
jo
mov
or
leave
ljmp
sarb
int3
dec
or
or
dec
test
cmp
cmp
in
cmp
in
stc
shll
cs
fadds
adc
mov
addr16
bound
push
xchg
movsb
and
loopne
cld
sbb
push
jnp
icebp
fdivr
mov
pop
jmp
pop
adc
dec
jae
fsubp
fidivrl
sahf
mov
outsl
mov
add
fs
cld
bound
inc
sub
xlat
gs
cmp
jnp
or
ljmp
or
and
dec
rolb
repnz
cmp
push
mov
adc
pop
sbb
cld
pushf
cltd
or
mov
and
loope
aas
lock
sbb
fcomi
inc
dec
movzwl
fimull
insl
mov
pusha
les
arpl
in
pop
loopne
mov
lods
movsb
mov
test
fs
mov
dec
out
or
lret
and
push
cmpsl
push
fstpl
out
mov
fwait
andl
sub
test
pop
mov
cld
dec
pushf
dec
test
inc
in
lods
mov
gs
fsts
icebp
jge
dec
mov
xchg
test
pop
mov
iret
jbe
jns
sete
es
add
inc
cmp
or
repz
jne
js
inc
adc
bound
mov
dec
adc
xchg
pop
push
cmp
scas
loop
ret
loopne
mov
subb
enter
add
push
subl
pusha
ja
and
mov
data16
aam
bound
je
mov
call
mov
test
fisttps
cmp
adc
insb
repnz
iret
mov
sti
sbb
mov
and
stos
mov
add
inc
pop
cmpl
xchg
and
imulb
rcrl
add
push
fistpll
ss
imul
dec
and
aad
adc
js
ret
lret
mov
push
cli
adc
mull
xchg
jl
fnsave
cmp
adc
imulb
inc
inc
mov
ret
inc
push
in
mov
test
push
ficoml
add
push
enter
mov
add
cld
pop
cmp
cmp
aad
inc
test
leave
nop
gs
fsub
clc
inc
jmp
fcompl
call
mov
cmp
or
dec
inc
or
push
push
bound
jl
int3
aaa
mov
mull
hlt
leave
jecxz
shlb
mov
in
pop
int
sbbl
lret
js
stc
and
inc
cmpsb
sarb
jle
nop
dec
dec
shll
push
in
mov
adc
push
popf
or
sub
test
jmp
adc
adc
inc
rcrl
xchg
sbb
cli
dec
xchg
cli
aad
jecxz
stos
adc
test
pop
int
pop
nop
fwait
xchg
xorb
cltd
loop
divb
xor
mov
popa
cmp
cmp
sbb
das
adc
sbb
std
mov
adc
cmp
lcall
add
mov
fwait
adc
jg
outsl
ljmp
movl
xchg
adc
clc
lcall
cli
pushf
inc
xorb
xor
push
or
jp
testb
pushf
pusha
loope
adc
ret
dec
add
add
arpl
loope
mov
add
or
rclb
or
jg
addr16
xchg
into
sbb
cmc
popf
pop
stos
loopne
xlat
pop
mov
sub
outsl
filds
xor
inc
add
fists
sub
sahf
dec
add
and
and
lods
subb
mov
aam
out
negb
movsl
xchg
sbb
xchg
shll
test
mov
add
push
push
movsb
push
daa
jecxz
xchg
xchg
insl
jge
and
xlat
pop
mov
loope
pop
test
outsb
in
xor
fwait
loop
xchg
push
cmp
ret
and
cmc
frstor
lods
push
add
add
lret
imul
push
frndint
jbe
imul
dec
xlat
ja
rorl
aam
pop
es
add
xchg
mov
and
call
cmp
sarb
mov
mov
jb
cmpb
incb
insb
jmp
ja
xchg
test
sbb
gs
out
jno
hlt
and
mov
insb
repnz
jle
jne
jno
aaa
fadds
insl
push
roll
js
inc
out
sub
push
push
add
test
inc
fsubrl
nop
xor
movsb
jnp
or
push
add
mov
push
sub
sub
xorl
or
xor
inc
popf
jns
sbb
inc
mov
ja
adc
pop
in
andl
inc
out
enter
aad
outsb
cmpsb
cmp
mov
movsl
lahf
scas
add
xorl
sub
ds
icebp
popa
popf
dec
push
test
sbbl
fwait
xchg
mov
shl
data16
xor
testb
mov
sti
lods
sub
jmp
fwait
push
mov
icebp
shrl
cld
pop
cmp
mov
mov
leave
cmp
or
in
addl
test
lret
add
sbb
jnp
es
pop
push
nop
sub
xor
mov
jmp
push
mov
loope
mov
pop
dec
cli
enter
add
xchg
stc
xchg
mov
dec
sbb
add
int
hlt
shll
sub
add
or
mov
mov
xchg
js
stos
in
addl
popa
push
dec
jb
adc
pop
push
sbb
dec
and
and
imul
mov
push
idiv
mov
jno
mov
ja
cmpsl
rcll
loope
aas
outsl
daa
por
push
testb
jae
mov
jne
or
mov
aam
push
mov
cmp
popa
push
dec
out
adc
and
sbb
jb
cmc
ja
jle
loope
in
scas
xor
call
mov
xchg
scas
fstpt
dec
cld
lcall
pusha
pop
mov
mov
fsubr
cmp
aam
sub
test
inc
push
mov
dec
or
aas
pop
cld
xchg
scas
sarb
aam
mov
xor
mov
fsubr
sub
xchg
xor
rol
push
hlt
push
cwtl
push
enter
jl
cmp
pusha
mov
stos
loopne
stos
push
rolb
decb
addr16
inc
dec
cmp
addr16
ljmp
push
stos
sbb
push
test
rolb
jns
fnstenv
pop
pop
mov
push
stc
out
and
lahf
push
aaa
pop
cwtl
lds
sahf
cli
or
cltd
lahf
dec
jge
popf
stos
dec
mov
dec
faddl
sbbb
adc
sub
sbb
push
mov
shrl
or
repz
lock
jmp
mov
sbb
xchg
xor
mov
mov
push
loopne
arpl
loop
push
add
mov
xor
or
sti
inc
inc
rcrb
jo
adc
test
repnz
pop
jl
je
jne
nop
lods
sti
jmp
cmp
clc
loopne
xchg
int
addr16
cmpsl
cmp
js
inc
lock
cld
jecxz
in
int
pop
mov
mov
xor
adc
add
loopne
sub
xor
dec
push
jl
inc
fcmovnu
rorl
xorl
xchg
mov
or
movsb
dec
outsb
inc
xor
jmp
sbb
adc
mull
xchg
popa
mov
dec
mov
ficoms
outsb
ret
ret
push
mov
pop
and
shlb
push
adc
incl
or
int
mov
xchg
adc
mov
mov
mov
cwtl
hlt
cmpsb
lret
mov
bound
ss
movsl
iret
pop
sbb
data16
popf
in
jae
mov
inc
push
mov
ja
inc
push
clc
mov
push
insl
sbb
pop
jns
shll
mov
sub
insl
pop
push
test
mov
aas
cmp
xchg
mov
and
adc
mov
and
lock
data16
xchg
fdivl
stos
imul
ficoml
jmp
mov
daa
push
dec
rcr
push
fcoml
nop
adc
xor
arpl
jle
pop
mov
push
lret
bound
in
frstor
mov
das
insl
test
mov
xor
repz
adc
lock
cmp
jne
pop
aaa
orl
lock
push
mov
nop
int
jg
pop
lret
jmp
aad
add
jge
jns
aam
sbb
push
inc
mov
loop
aas
xor
sub
sbb
push
imul
fs
leave
inc
cmpsb
push
cwtl
fsts
popf
out
mov
adc
xlat
pop
out
adcb
cltd
mov
popa
fisttpl
pusha
mov
cmp
push
nop
and
mov
outsl
jno
pop
popf
fwait
jae
or
test
fisubl
push
out
stos
inc
lea
call
mov
pop
rorb
pushf
test
adc
cmp
sbb
mov
lods
clc
test
or
jbe
insl
int
adc
pop
insl
mov
out
mov
insl
shrb
xor
mov
es
std
inc
sbb
push
pop
out
pop
shlb
pop
inc
mov
sbb
pop
push
mov
lahf
inc
lcall
jne
ret
sbb
mov
cltd
ja
mov
cmp
lahf
mov
ficomps
xchg
pusha
and
out
and
aaa
xchg
aaa
push
lds
or
inc
sti
pop
dec
pop
inc
mov
dec
add
div
lret
add
loope
aas
faddp
inc
pop
sbb
stos
sub
mov
jns
bound
cmp
xchg
mov
cmpsl
jge
lcall
add
add
jbe
fwait
mov
int
adc
movsl
push
mov
lret
push
mov
or
adc
push
shll
cmpsl
pop
and
mov
out
pushf
inc
or
inc
cmp
push
shrb
sub
or
mov
mov
into
in
std
icebp
ljmp
xor
inc
and
or
jge
xlat
fcomps
mov
mov
mov
sarb
lds
ja
dec
mov
int3
enter
fistpl
mov
inc
jp
lret
inc
je
ds
or
push
icebp
adc
testb
pop
aam
xor
pop
lea
xchg
mov
dec
shrl
lods
cmp
stos
push
stos
lods
pop
xor
mov
addr16
and
xchg
leave
dec
in
pop
mov
movsl
fildll
push
cmp
jp
inc
fildll
and
pop
dec
add
dec
stc
jns
aam
inc
jg
test
mov
inc
adc
push
sti
rolb
sub
xchg
popa
inc
cmc
mov
jle
add
xorl
pushl
xor
pusha
mov
sub
mov
outsl
mov
xchg
inc
sub
je
and
push
add
fs
mov
jmp
popf
stc
fcompl
mov
inc
ds
xlat
inc
inc
push
dec
iret
mov
ja
or
ss
call
lods
xchg
mov
push
cli
scas
lods
or
fwait
adc
fnstenv
push
xchg
es
and
out
xor
mov
mov
or
pop
test
fnstcw
xlat
shlb
add
fnstcw
dec
iret
cmp
pop
cmc
mov
dec
mov
imul
gs
ds
fidivrl
dec
mov
insb
or
movsb
jg
movsl
les
es
inc
pop
and
cmp
xor
bound
inc
push
shll
cvtdq2ps
or
in
les
ds
fdivl
sahf
and
arpl
xlat
push
mov
ret
xchg
mov
dec
shlb
jne
adc
jg
cmp
ss
jle
pop
jl
scas
or
das
mov
repnz
data16
cld
xor
cmpsl
push
cmp
cmp
push
mov
stc
iret
push
das
jae
sbb
pop
test
popf
sbb
mov
daa
fxch
mov
outsb
ds
cltd
mov
inc
pop
jp
mov
mov
pop
inc
mov
dec
outsl
fstl
mov
stos
fcmovnbe
add
ds
sub
ret
bound
mov
lahf
lea
jno
andb
fisubrl
dec
push
or
sub
mov
sbb
rcrb
lret
and
pop
sahf
dec
mov
and
sti
or
sbb
cmp
out
call
fdivrl
sbbb
aas
pop
aaa
mov
mov
xchg
in
repnz
mov
jbe
std
and
call
mov
in
sbb
cmpsb
lods
xchg
xchg
sarl
sbb
sub
stos
adc
inc
aas
divl
outsl
add
push
test
aas
push
jecxz
jge
repnz
mov
fstpt
dec
ss
adc
test
mov
sub
adc
mov
adc
test
pop
sub
punpcklbw
mov
insb
scas
shlb
and
pop
pushf
lcall
pusha
xor
je
push
jmp
test
sub
scas
xchg
xchg
pop
mulb
loopne
mov
dec
int3
jae
add
cmp
out
loope
and
lods
outsb
xchg
addr16
and
inc
sbb
sbb
shlb
ret
xor
into
cmc
sbb
mov
xor
cwtl
cmp
sub
xchg
xchg
pop
sub
cmp
repnz
test
sbb
fwait
in
xchg
iret
pop
xor
int3
add
test
xchg
insl
push
call
es
push
xor
sub
pop
aaa
and
add
xchg
mov
pushf
lods
xchg
mov
aaa
push
mov
mov
ja
push
mov
sub
add
shrl
push
test
testb
scas
rcrb
pop
scas
jmp
adc
sbb
mov
xchg
sbb
xchg
xor
sub
cmp
mov
jmp
jp
adc
enter
mov
lcall
addr16
out
or
pop
shll
adc
or
mov
imulb
movsl
repz
lods
mov
jne
cmp
mov
and
and
add
je
aaa
push
mov
in
push
lcall
and
xchg
iret
xchg
repnz
lret
mov
or
insl
xchg
mov
cmp
add
xchg
adc
cmpsl
in
sti
pop
negl
into
fwait
lret
dec
jl
or
in
xor
pop
push
loop
dec
mov
stos
xchg
or
lods
xchg
lret
xchg
push
add
andl
jmp
cmp
mov
fwait
push
out
and
jne
mov
adc
js,pn
jno
add
addr16
icebp
mov
jns
call
shlb
popf
fucomip
leave
mov
inc
les
and
cld
rorb
imul
stc
jae
fidivrl
cmp
fisubrl
cwtl
pop
fildll
xchg
data16
push
xor
sub
pop
ss
outsb
and
cwtl
cmp
sti
mov
dec
outsb
or
hlt
lds
xchg
jb
fucomp
sub
sub
neg
or
mov
shll
movsl
mov
fisubrs
pcmpgtd
push
cmp
into
add
pop
sbb
jge
inc
insl
and
arpl
bound
xchg
fdivr
lahf
xchg
add
pop
sub
jmp
lret
ss
in
clc
jno
icebp
cltd
clc
adc
les
arpl
insl
shrb
and
outsb
clc
fmull
ljmp
sub
fadds
mov
pushl
cwtl
mov
loope
dec
sbb
xor
xor
lods
and
sbbb
mov
dec
insb
lods
orb
cmp
inc
leave
inc
sub
and
enter
out
iret
xor
mov
push
scas
sbb
mov
pop
push
aad
test
dec
shrl
cmp
fldt
dec
shl
cmp
test
sbbb
xchg
adc
arpl
add
adc
dec
std
sbb
and
into
out
sbb
testb
rorb
mov
jno
pop
sbb
mov
test
push
jne
test
xor
inc
mov
sti
sbb
mov
sarl
das
shlb
jg
add
adc
movsb
popf
stos
and
or
cmp
into
in
pushf
dec
sbb
sub
mov
push
shll
mov
das
ret
loope
or
mov
jmp
aas
push
ret
inc
sti
xor
sub
lds
jae
sahf
cmp
sub
xor
pop
aam
scas
dec
out
incl
dec
test
pop
mov
lahf
add
and
and
cmp
mov
negb
pop
push
dec
shlb
dec
push
lods
or
ds
mov
andb
in
fdivr
xchg
scas
sti
jecxz
xor
hlt
out
xchg
push
test
mov
mov
jge
xor
cmpsl
lds
or
into
sub
mov
dec
sbb
ljmp
stos
loop
ds
enter
jle
es
loop
cmpb
dec
xchg
pop
mov
rcrb
or
movsb
ret
or
out
push
and
je
popa
jo
scas
push
pop
fbstp
mov
pop
xchg
xchg
dec
rcrb
mov
popa
or
lret
addr16
loope
in
xchg
mov
scas
dec
iret
adc
repnz
mov
kmovw
cmp
mov
pop
into
xor
stc
inc
rolb
imul
mov
mov
stc
jno
stos
add
cmp
xchg
mov
aam
sbbb
cmp
out
lret
and
pop
xor
push
pop
jne
pop
negb
inc
loopne
hlt
xor
lods
jbe
inc
into
int3
test
xor
movsb
jbe
push
push
mov
ja
push
mov
jmp
mov
in
mov
sbb
stos
test
ret
fistpl
icebp
add
jnp
out
cmpsb
push
icebp
sub
mov
dec
or
mov
mov
and
fdivs
ss
sbb
ds
cmovb
and
push
movsb
hlt
xchg
dec
out
daa
pop
xchg
mov
mov
adc
ss
ja
xchg
and
out
out
js
pusha
push
adc
xor
test
and
or
ljmp
hlt
or
inc
mov
out
add
in
out
mov
fstps
bound
push
inc
adc
push
jns
xchg
jmp
xchg
push
es
aas
outsb
mov
sbb
add
sti
xor
pushw
pop
add
lods
rcrl
dec
movsb
and
adc
outsl
jb
pop
fs
fisttps
stc
pushf
imul
dec
fbld
inc
fstps
sbb
scas
movsl
adc
and
icebp
cmp
jge
arpl
inc
adc
and
clc
orl
outsb
lods
insl
jno
push
ss
icebp
ret
push
sbb
push
push
test
insl
cs
std
or
adcl
dec
adc
jecxz
lahf
mov
push
or
dec
xchg
sub
aaa
es
or
fcompl
xchg
shrb
mov
xchg
test
sbb
out
inc
push
mov
rcrb
cmpsb
inc
xchg
lea
or
pop
icebp
enter
pop
adc
sbb
stos
jae
call
xchg
mov
fcmovnbe
push
mov
or
push
lcall
push
adc
mov
sti
mov
jmp
jmp
dec
push
sbb
stc
push
sub
mov
jb
jecxz
rep
xchg
jbe
jge
sub
push
cs
bound
test
popa
shl
movb
mov
sub
dec
aas
push
jbe
daa
adc
imul
push
add
dec
mov
dec
mov
out
adcb
es
dec
pop
incb
rorb
sbb
push
imul
loope
in
xor
or
mov
fwait
mov
jmp
mov
ret
xchg
in
outsb
push
rclb
fistl
adc
lods
in
xchg
sub
popf
xchg
push
scas
aad
movsb
cmp
icebp
adc
and
les
leave
dec
xor
scas
or
mov
xchg
mov
mov
int
add
cmp
dec
push
cmp
fdivl
mov
sbb
cmp
adc
lods
or
xchg
and
mov
add
xchg
inc
popa
stc
add
pop
mov
inc
lret
jnp,pt
pop
inc
pop
xor
cwtl
mov
dec
cmp
jne
movsb
loope
loopne
xchg
sub
sbb
fdiv
pop
mov
dec
lock
iret
nop
xchg
sbb
mov
icebp
int3
outsl
and
in
sbb
adc
icebp
adc
jl
dec
or
or
mov
xchg
push
jmp
ss
adc
orl
mov
cltd
pop
movsl
and
xlat
subb
test
aad
sub
jl
push
mov
nop
das
sahf
pop
insb
lods
rcrb
dec
jns
leave
das
daa
fwait
aaa
dec
shr
add
aad
dec
mov
jno
jae
and
sbb
mov
sbb
shll
xor
fstpt
jmp
jno
pusha
movsl
cli
les
inc
cld
push
jo
pop
je
shll
dec
stos
pop
in
xchg
mov
aad
dec
mov
pushf
dec
test
fadds
bound
xchg
sub
fnstcw
sahf
sub
or
ljmp
add
scas
and
xor
mov
lods
fcomip
push
pop
ret
test
jmp
lcall
adc
mov
dec
push
mov
push
add
js
cmpsl
jmp
clc
mov
loopne
mov
stos
pop
jnp
mov
cli
in
mov
popa
cmpsb
adc
xchg
aad
sbb
and
filds
mov
movsb
mov
dec
dec
pushl
test
sub
jne
imull
dec
lcall
les
lods
ret
nop
cmp
ja
sub
jl
cmpsl
mov
test
mov
fwait
movsl
xchg
loop
mov
mov
cmpsb
push
lcall
fistpl
sbb
pusha
inc
mov
repnz
and
imul
cmpsb
lret
fs
cmp
call
stc
test
dec
ja
in
jbe
jl
or
fdiv
xchg
ljmp
inc
mov
mov
and
add
jmp
lods
out
shlb
lcall
hlt
mov
in
loopne
out
movsb
xor
iret
imul
and
cmp
insl
cmc
shll
sbbb
xchg
gs
mov
out
ret
mov
imul
les
xchg
sbb
in
xchg
mov
lods
call
addr16
movsl
pop
and
pusha
rolb
dec
push
stos
incb
add
aad
push
je
cmc
cli
xor
subb
repz
mov
push
mov
dec
in
fiadds
movsl
dec
lods
mov
outsb
aad
sub
mov
ljmp
xor
add
repz
cwtl
pushf
int
xchg
push
cmc
adc
ror
inc
sub
test
xor
enter
lcall
nop
adc
cmpsb
gs
inc
out
adc
aam
xchg
adc
rclb
mov
pop
xchg
add
icebp
in
sub
and
sarl
repz
outsb
imul
cwtl
mov
and
ds
rorb
scas
xchg
mov
out
repnz
dec
fcmovb
int3
out
cltd
pop
or
les
je
cmp
addr16
out
xchg
sub
lcall
in
fcom
out
sub
or
add
mov
rcl
mov
pop
jo
fldt
push
jns
rol
add
dec
sub
iret
sub
test
hlt
stc
hlt
cmp
aam
arpl
mov
lret
mov
lret
lahf
inc
xchg
ror
lods
dec
inc
outsb
xchg
sbb
cmpsb
fdivs
or
add
sti
fcmovnu
dec
jnp
add
dec
aas
lds
push
push
pop
rclb
push
loop
stos
lret
add
push
inc
mov
xchg
jbe
shll
rcrl
dec
into
cmp
lods
pop
jne
or
xchg
aad
loopne
sbb
push
dec
loop
xchg
rol
sbb
or
inc
pop
ljmp
test
lea
movsb
js
das
cmpsl
xor
dec
ss
mov
xchg
jmp
subb
adc
sbb
push
scas
test
or
mov
and
out
test
aaa
out
inc
xlat
or
movsl
adc
cmc
sti
and
fiadds
cmp
mov
loope
push
movsb
xlat
fmuls
mov
cld
test
mov
mov
adc
sbb
inc
imul
lret
pop
pop
xor
in
fdivrl
add
das
pop
pop
and
mov
dec
jne
out
adc
lds
inc
cmp
out
jo
dec
fidivrs
daa
pop
push
and
add
sub
and
outsb
xchg
xchg
sbb
test
divl
push
jbe
cmp
push
fsubl
and
cmpsl
cmc
loop
jl
iret
pusha
fidivrl
aaa
pop
add
cmpl
sub
lods
arpl
movsl
xchg
mov
cmp
xchg
movsl
add
dec
daa
jecxz
inc
rolb
sbb
xchg
inc
jmp
sbb
sbbl
xor
ss
stos
outsb
gs
leave
xor
aas
lret
xchg
mov
nop
insl
dec
inc
lods
jnp
jae
or
imul
loope
push
nop
add
out
push
iret
and
jmp
or
mov
lods
xor
shr
insb
inc
repnz
push
or
iret
insb
add
ss
mov
loopne
adc
sub
jbe
or
push
push
dec
mov
imul
inc
pop
cmp
in
dec
add
jp
in
dec
or
mov
cs
and
jae
pop
dec
add
loopne
loop
testl
test
mov
xor
dec
iret
lock
out
sti
mov
outsb
adc
mov
bound
scas
insl
outsl
outsl
pop
popa
aaa
jo
push
xchg
mov
clc
sub
lds
mull
js
rcr
mov
inc
mov
enter
cmp
data16
xor
add
stc
dec
push
pop
cld
notl
mov
cmc
and
mov
cs
inc
mov
cmpsl
and
cwtl
call
outsl
and
sbb
rol
divl
std
lea
jp
gs
sub
in
fnstcw
lods
xchg
test
scas
int3
and
div
subl
dec
sbb
ret
sti
xor
and
pusha
outsb
rcll
pop
fmull
pusha
xor
test
pop
pusha
sbb
jbe
cmp
push
push
cmp
jbe
test
sbb
cltd
dec
cwtl
xchg
jo
test
test
leave
fldenv
mov
jmp
adc
ljmp
in
pop
mov
jmp
pop
fdivs
jle
jne
shl
nop
test
and
into
loopne
cmp
cmp
fadds
iret
scas
add
cmp
fcompl
xchg
xchg
pop
rcr
xchg
leave
gs
mov
sub
sbb
fldl
stos
movsl
inc
lret
push
repz
aaa
mov
and
rcrb
lods
mov
leave
push
cmp
xchg
or
add
nop
sbb
pop
sbb
fwait
sbb
push
mov
sahf
roll
jnp
movsb
mov
pop
ficompl
jle
add
mov
into
nop
adc
and
nop
bound
jb
jmp
xchg
sbbb
sbb
inc
adc
js
jle
xchg
sbb
jge
fnstcw
outsb
ja
dec
das
imul
push
push
imul
popa
loop
push
lret
mov
icebp
and
ficomps
ror
pop
mov
inc
jne
mov
or
in
xchg
xchg
call
stos
xchg
dec
jne
movsb
fdivr
cwtl
push
adc
cltd
faddl
ljmp
adc
mov
push
add
repz
and
daa
insb
scas
mov
inc
stos
arpl
mov
mov
int
mov
xchg
hlt
inc
hlt
imul
movsb
mov
aas
mov
in
out
sarl
aad
das
jnp
ret
sub
or
fldenv
aam
sahf
fsubrs
mov
adcb
pop
and
pop
test
mov
into
test
scas
sub
ja
ja
movb
je
fsubrl
jns
into
jecxz,pn
loopne
pusha
sbb
mov
ret
cmpsl
ficoml
xor
das
inc
xor
popl
inc
dec
jno
ja
das
test
inc
or
add
aam
pop
out
je
dec
aaa
test
mov
adc
mov
jp
scas
or
movsl
jle
jns
sbb
dec
and
in
xor
repnz
fisttpll
xor
inc
aam
movsb
inc
mov
and
cmp
sbb
xor
leave
pop
outsb
ret
push
mov
mov
ja
lods
adc
in
cmc
pop
adc
push
or
stc
mov
outsl
inc
arpl
and
addb
adc
clc
sbb
iret
inc
arpl
je
fildl
andnps
cmpsb
pop
jnp
xor
and
sub
ret
movl
pushf
int3
dec
cmp
and
shl
push
gs
ljmp
out
rol
and
mov
clc
cwtl
and
cmp
sbb
xlat
cmp
mov
jg
shrl
sahf
fyl2x
repnz
jl
dec
shlb
loop
push
xchg
ficompl
cld
loop
cwtl
into
mov
outsb
pusha
sub
cmp
ss
inc
and
adc
mov
mov
xlat
sti
js
popl
cwtl
lcall
es
lea
loop
out
ds
pop
and
cmpsl
lea
cld
jge
or
bound
dec
mov
int3
jo
mov
dec
pushl
sub
mov
jmp
adc
inc
and
sahf
push
test
cmp
pushf
sbb
mov
call
pop
jo
mov
add
pop
les
sbbl
fstpl
icebp
aaa
popf
pop
bound
or
std
jmp
iret
fwait
inc
add
mov
xor
pop
insl
xchg
lods
xor
rcrb
cli
push
subb
adc
int3
mov
mov
mov
xor
fwait
pop
inc
pop
adc
insb
sub
movsl
stos
and
pop
icebp
fisubs
xor
lret
dec
mov
or
in
aad
pop
shll
gs
sub
cltd
in
mov
xlat
push
fildl
inc
loop
dec
es
mov
cmpb
insl
clc
aam
stos
or
jle
out
or
jae
adc
push
leave
popf
fcompl
sub
sbb
jp
xor
xor
fnstsw
xchg
aaa
mov
fsubs
cltd
xchg
loop
and
jo,pn
loopne
pop
dec
adc
adc
fcmovnu
jns
nop
mov
scas
out
enter
les
mov
pop
dec
rorb
dec
cmp
ljmp
and
popf
inc
rcrb
jl
icebp
lds
jno
adc
js
cmp
lods
out
mov
push
fwait
push
in
outsb
mov
das
pop
mov
mov
dec
pop
adc
insb
mov
cmpsl
jg
mov
lret
add
lahf
push
in
jecxz
mov
jo
push
mov
xchg
ret
ja
pop
push
std
mov
aaa
push
mov
cwtl
fidivrl
lds
sbb
or
pop
add
inc
popa
pop
cmpb
sti
test
pusha
jecxz
sbb
xlat
imull
sbb
or
jbe
sbb
aaa
adc
sub
push
inc
outsb
ljmp
jb
ror
push
pop
adc
xchg
mov
daa
test
adc
fisttps
bound
popl
sub
mov
icebp
add
lds
push
lea
adcb
mov
into
push
push
inc
insl
xor
cli
cmp
push
lea
dec
arpl
xchg
lods
lcall
in
pop
fcompl
loop
cmp
xchg
shll
inc
hlt
push
and
pop
xor
jge
mov
cmp
xchg
bound
add
cmpsb
sub
fildll
xor
xor
aaa
pop
adc
je
int
mov
movsb
out
pop
adc
scas
nop
nop
pop
insl
sub
add
enter
mov
setne
sub
outsb
sub
sbb
mov
cwtl
cmp
add
push
ss
rorb
mov
ret
mov
lock
or
lds
pop
lods
cmpsb
xor
xor
xor
jbe
loope
cmp
inc
xchg
out
mov
ds
cs
xorb
sub
adc
jl
or
enter
mov
jbe
xchg
mov
lea
or
push
in
into
sahf
ljmp
jl
cmp
loopne
xor
sub
mov
mov
mov
jle
je
inc
shlb
pmulhuw
jbe
mov
mov
adc
xchg
das
je
and
enter
clc
fs
cmp
in
and
dec
pop
jge
flds
adcl
cmpsl
mov
dec
cmc
mov
notl
xchg
pop
lods
xchg
popf
mov
mov
mov
pop
push
insl
aaa
jle
ja
rclb
fs
test
dec
pop
xor
dec
sbb
jg
cmp
or
sti
sar
mov
scas
insl
rcr
int
jb
call
popf
sbbl
jae
adc
call
push
fsubrl
and
jp
mov
aas
pushf
pop
in
inc
mov
cmp
jae
daa
lret
loop
sti
dec
and
pop
inc
test
mov
xchg
pop
int3
arpl
cmpsb
pop
xor
mov
dec
pop
in
add
add
arpl
hlt
and
bound
pop
jecxz
xor
and
std
mov
ffreep
out
scas
xchg
and
pusha
adc
mov
sub
popf
or
push
sub
imul
mov
jge
clc
fcomps
inc
sbb
pop
and
or
xorb
scas
xor
jecxz
popa
xchg
fs
adc
adc
repnz
mov
les
sbb
mov
stos
mov
or
fs
iret
cmp
lea
stos
ss
and
loop
cs
cld
cwtl
push
mov
xchg
test
outsb
pand
xchg
jge
inc
imul
fdivrs
jmp
xchg
push
adc
outsb
push
inc
stos
sub
mov
andb
sbb
and
inc
int3
fwait
push
jle
mov
cmpsl
push
push
ficompl
mov
les
xlat
sub
je
xlat
out
mov
cmp
pop
popa
dec
push
in
fstl
mov
enter
clc
iret
push
jnp
push
jp
clc
add
rcrl
sbb
clc
int3
jg
sbb
pop
fsubrs
mul
add
adc
jg
repnz
pop
or
dec
in
jg
hlt
dec
or
xchg
adc
mov
jo
push
jmp
lods
ficomps
test
xchg
sbb
mov
jbe
cmp
sti
mov
cltd
out
outsl
stos
jmp
call
sub
fwait
loop
dec
jne
jge
int3
jno
int3
cmc
test
leave
xchg
gs
cli
repz
dec
out
fadd
fmuls
mov
push
xor
xlat
pop
xchg
imul
lret
mov
cmp
add
popf
push
ja
cmp
outsb
loope
or
mov
pushf
aas
filds
test
pop
clc
imul
sub
jmp
mov
jecxz
add
mov
push
mov
xor
pop
hlt
iret
pop
pusha
lds
js
pop
movsl
mov
lret
into
sahf
dec
lods
aaa
pusha
cwtl
mov
jl
mov
nop
push
pop
xchg
adc
push
push
fs
stos
das
inc
xor
std
idivb
and
mov
insb
sbb
pop
dec
sbb
add
jb
pop
into
pop
jecxz
cmp
mov
inc
lahf
pop
je
scas
ret
fwait
pop
push
or
ja
lds
js
out
dec
mov
aaa
xor
faddl
iret
imul
je
dec
ljmp
fmull
scas
jle
arpl
sbb
add
sbb
adcb
xor
mov
dec
pop
mov
lret
imul
fnstsw
push
movsl
sti
mull
jle
fwait
icebp
cmpsl
lret
and
popa
iret
repz
or
pop
popl
mov
sbb
iret
inc
aaa
inc
sub
push
inc
xchg
lods
ja
outsl
sub
int3
leave
mov
jns
clc
fsubr
pusha
pop
into
mov
push
ror
clc
xchg
das
das
cmp
push
lods
push
mov
clc
shll
xlat
mov
daa
add
mov
fisubl
std
or
repz
jno
scas
push
mov
and
clc
mov
adc
es
xchg
cmpsl
ror
movsl
jge
test
jle
push
dec
cmp
or
push
lods
mov
inc
mov
mov
and
adcl
dec
dec
loop
adc
fstl
add
dec
cwtl
arpl
out
jns
push
jae
fcoms
xchg
popf
scas
aaa
mov
and
lret
loopne
cmp
jg
xchg
fcmovnbe
adc
jge
jb
lahf
mov
mov
leave
aam
lret
cltd
ret
in
jbe
jle
mov
or
int
jne
mov
cmpsb
push
shll
cwtl
rolb
rcrl
leave
push
sub
fs
adc
insb
jo
outsb
and
pop
nop
push
pop
xchg
inc
fwait
sti
js
aad
and
in
sbb
mov
sub
dec
shll
pop
addl
dec
stos
iret
mov
mov
push
loopne
cmp
jmp
inc
outsb
push
push
js
nop
mov
xchg
mov
dec
fidivrl
test
sub
cmp
stos
shll
push
push
add
xchg
in
shlb
into
in
sub
mov
popf
sbb
flds
nop
mov
push
pushf
inc
ret
mov
in
pushl
int
sbb
add
sbb
mov
clc
shll
fistpll
inc
insl
sub
popa
or
cmp
inc
jbe
imul
dec
adc
leave
jns
cmp
mov
js
lcall
div
rcrb
andl
add
xlat
ljmp
faddp
insl
aas
pop
cs
in
jle
clc
jnp
adc
fcmovb
and
mov
adc
andl
push
shlb
mov
iret
adc
jno
inc
pop
or
daa
popa
adc
popa
xchg
outsb
sub
aas
push
in
das
sub
jge
dec
hlt
adc
xor
push
add
add
mov
xor
push
sub
and
data16
push
xchg
cmpsb
dec
jnp
loope
xor
sbb
pop
mov
outsl
push
lods
pop
sub
lea
mov
push
or
jg
imul
ret
les
mov
sub
push
dec
xchg
in
adc
mov
cmpsl
pusha
fwait
imul
mov
cmp
rcll
pushf
or
jmp
je
scas
stc
test
mov
nop
jb
inc
call
sub
dec
std
movsl
aas
push
or
fnstcw
jmp
inc
mov
cmp
pusha
movl
inc
fsts
out
cs
cmp
aam
cmpsb
std
and
sub
lods
movhlps
cli
gs
jle
xor
scas
fisubrs
bswap
lods
pop
cmpsb
add
sarb
mov
stos
and
out
ret
es
pop
or
out
inc
lds
fwait
and
cmp
mov
sbb
mov
and
popa
add
sbb
call
inc
inc
cmp
push
loopne
pop
lods
pop
in
in
cmc
xchg
in
in
push
test
ljmp
scas
dec
insl
fwait
test
scas
or
push
lea
xchg
push
mov
bnd
sbb
es
push
fs
insl
pop
enter
ret
pop
cwtl
jns
mov
inc
sbb
dec
int3
push
or
fildl
sub
mov
mov
pop
dec
and
int
cwtl
xchg
push
sbbl
xchg
and
adc
xchg
pop
add
push
sti
out
xor
push
jmp
movsb
outsb
orl
xchg
cs
je
xorl
out
mov
loopne
out
inc
adc
fstpl
mov
scas
adc
adc
test
ret
mov
pop
or
int3
psadbw
in
or
es
xor
or
mov
insb
hlt
inc
inc
fisttpl
inc
int3
cmp
xchg
sbb
or
xchg
jbe
out
icebp
mov
daa
clc
popa
call
in
dec
xor
in
movsb
inc
lea
pop
cmp
jmp
and
sub
sbb
icebp
les
pop
cmp
cwtl
push
jo
lds
mov
or
and
sub
lods
mov
mov
push
push
jle
shr
sbb
ljmp
int3
movsb
mov
test
loop
into
jno
nop
in
pop
es
in
push
sub
push
add
xchg
loopne
loop
xchg
popa
aaa
enter
pop
add
xor
push
pop
pop
push
sub
push
xor
jmp
ret
rcrb
in
xor
mul
inc
dec
lret
mov
and
add
mov
jp
mov
pop
adc
push
sub
jbe
cmp
sub
xchg
out
testb
lea
cmp
aad
cmp
dec
aas
and
cltd
mov
addb
imul
addl
movsl
out
xchg
iret
inc
mov
mov
lods
out
inc
sti
dec
cmp
and
scas
mov
cmp
in
ficomps
imul
xchg
movb
lret
das
clc
add
ljmp
sub
mov
mov
icebp
fs
sbb
push
mov
and
adc
mov
insl
shrl
jl
pop
call
daa
sarl
fs
pop
jae
xchg
jbe
into
xchg
pop
std
std
rorl
mov
add
roll
add
inc
inc
sub
sbb
insl
xchg
jne
push
adc
xor
mov
push
insl
inc
or
push
mov
in
fmuls
mov
pop
inc
sbb
xor
out
xor
or
push
lcall
sub
sub
mov
xor
cld
cmp
mov
xchg
cmpsb
inc
subl
inc
mov
sarb
add
stos
sarb
cwtl
movsb
insb
pushf
add
inc
or
jg
mov
add
and
out
jne
iret
imul
js
rorl
mov
adc
testb
pushf
jecxz
pop
pop
jns
adc
lds
movsl
add
loop
test
icebp
cmpsl
mov
pop
jae
dec
pop
push
shll
outsb
es
push
inc
insb
inc
std
pop
push
int
movsb
repnz
inc
scas
jne
jb
rol
ss
xchg
inc
enter
sti
pusha
push
or
ja
dec
adc
call
out
push
clc
mov
dec
notl
fisubs
adc
insb
push
cmpl
aas
dec
add
mov
push
popf
dec
mov
popa
push
and
xchg
and
mov
cwtl
fdivs
imull
mov
push
jge
adc
adc
int
adc
js
sbb
adc
fimull
in
inc
cmc
stc
vpaddsb
repz
pop
dec
xchg
xorb
dec
jecxz
in
and
push
in
pop
mov
mov
mov
cmp
clc
and
xchg
lock
je
ss
or
cmpsl
jmp
pop
lret
fcomps
xor
push
cmpsl
int
outsl
test
repnz
add
adc
lcall
stos
pop
out
imul
out
adc
mov
addb
aam
mov
cli
jmp
mov
icebp
mov
mov
mov
xor
jnp
dec
or
dec
mov
jae
das
xchg
adc
das
pop
lret
addr16
mov
cmp
scas
cltd
lock
and
in
lret
xchg
dec
pop
iret
mov
xchg
xchg
lret
imul
addr16
pop
inc
loope
loop
pop
adc
out
out
js
mov
jns
and
sbb
jle
jge
repz
aaa
mov
xor
mov
out
scas
inc
xor
sbb
aas
pusha
test
cli
scas
jnp
out
mov
push
movsl
xor
out
loopne
push
and
mov
imul
cmp
mov
sub
in
popa
mov
popl
cltd
jno
lahf
cmpsb
dec
out
sub
fidivrs
leave
fs
add
in
mov
roll
xchg
repz
rclb
out
fwait
mov
add
sbb
test
push
adc
rcll
jp
mov
nop
dec
sub
mov
out
gs
leave
mov
or
pop
and
out
adc
jp
xchg
xor
mov
add
sub
jmp
adc
push
aam
daa
nop
shrb
idiv
mov
jl
int3
push
mov
inc
add
push
or
inc
lret
dec
les
mov
jae
out
dec
sti
cmp
cwtl
pop
jl
sbb
out
inc
je
jecxz
xchg
mov
add
pop
adc
call
xor
loop
movsl
xchg
movsb
loope
addb
mov
pop
out
sbb
fst
hlt
data16
daa
lcall
cmp
push
adc
dec
inc
jle
jle
test
ja
mov
call
loope
stos
mov
xor
mulb
iret
pushf
sbb
push
xchg
xor
pop
xchg
lock
cmpsb
pop
dec
test
dec
insl
fcmovne
xor
cmpsl
sbb
jge
aas
push
xor
mov
enter
adc
cmp
loop
rol
out
xor
jl
mov
mov
mov
push
jns
out
insb
or
nop
lret
lock
andl
imul
ljmp
pop
and
jae
lahf
mov
add
mov
ret
shrb
add
or
sarb
jo
pop
fucomp
inc
stos
pcmpgtw
jp
mov
mov
loope
les
pop
add
dec
xchg
pop
adc
es
repnz
adc
sub
xchg
pop
in
xchg
mov
popa
push
neg
xorb
inc
aad
mov
test
sub
sbb
aam
jge
shl
out
test
in
scas
fstpl
insl
lret
les
out
sbb
sbb
sti
jno
jmp
fcompl
pop
add
lret
sahf
aaa
test
pop
add
sub
dec
push
jnp
mov
xor
xchg
iret
pop
fs
repz
aas
movsb
pop
or
sub
fisubrs
dec
cmovs
xor
push
cmp
dec
or
mov
or
cld
lds
aam
mov
pop
bound
orl
ficomps
inc
into
or
mov
movsb
or
lods
cli
loop
push
dec
pop
cmp
sbb
pop
pop
popf
in
lea
mov
popf
or
out
lea
jne
stos
cli
sub
enter
aas
or
ds
orb
cmp
xbegin
in
js
bound
aad
adc
aad
lahf
cmp
cmpsl
mov
lock
push
fcmovnu
xor
call
loope
xor
pop
pop
lds
inc
push
push
hlt
fisubrs
ret
sub
jge
xchg
fldl
inc
aas
stos
inc
mov
push
inc
test
mov
pop
pop
out
pop
aad
pop
pop
lock
or
imul
mov
xchg
ja
lods
and
xlat
cmc
out
push
lods
lcall
mov
mov
cmp
mov
repnz
and
fdivrl
sbb
inc
sbb
and
in
addr16
mov
mov
mov
enter
and
insl
and
fcmovnbe
push
mov
pop
push
into
negb
cmpsb
lods
fists
jmp
gs
std
cwtl
call
mov
fdivrs
fs
mov
fisttps
pop
cld
mov
dec
adc
jge
cltd
out
jecxz
pop
das
es
xchg
out
mov
add
push
inc
push
cmp
lret
je
jl
sbb
mov
popl
push
cltd
xor
inc
xor
sub
das
daa
sbb
out
and
mov
dec
outsl
jno
mov
mov
jno
and
xlat
add
and
xchg
lcall
push
jae
scas
and
lods
stc
pop
and
pop
sbb
sbbb
add
notb
cmp
ja
bound
jl
data16
xor
or
jae
test
sti
adc
daa
xchg
out
sub
xchg
cmpsb
aas
or
adc
mov
pushf
mov
jecxz
movl
mov
out
push
mov
sub
add
dec
adc
je
and
pop
add
enter
or
aaa
gs
das
addr16
mov
aaa
push
pop
sub
cld
and
push
loopne
dec
scas
loopne
xchg
cli
xchg
fldl
sbbb
test
lds
push
mov
ret
sbb
jnp
xor
test
es
repnz
dec
cmpsl
pusha
jo
xchg
ljmp
aas
cmp
mov
xor
jg
xor
mov
xor
sti
cmp
mov
mov
and
stos
adc
ficomps
xor
out
mov
es
gs
cmpsb
mov
xor
out
push
das
stos
pop
fbld
mov
pop
sub
inc
jns
add
push
call
pushf
cli
and
xchg
fisubrs
mov
fidivl
dec
aas
mov
xchg
push
push
pop
cmp
mov
xchg
inc
cwtl
mov
cmp
int
sub
fdivrs
xor
mov
out
push
xchg
adc
hlt
cmp
and
push
mov
lea
lret
jl
xor
lret
pop
daa
cmpl
out
decb
mov
cmp
pop
sbb
daa
mov
cmp
jo
pop
imul
out
push
pushf
jb
outsl
std
stos
jmp
clc
xchg
inc
mov
xchg
sub
cmp
add
mov
data16
inc
ljmp
jo
xor
inc
inc
jle
out
xor
adc
mov
ja
pop
into
jno
in
cmp
dec
push
jb
push
cmpsl
and
xor
in
movsb
ret
in
push
orb
mov
mov
push
mov
into
and
mov
inc
data16
jl
das
jns
mov
adc
pop
ljmp
push
jbe
je
ret
in
and
rcll
jge
mov
dec
dec
sahf
sbbl
or
lods
jp
loope
adc
pusha
rcrb
sub
pop
adc
inc
mov
inc
inc
ds
xchg
cmpsb
int3
std
pop
xor
xor
dec
and
jp
mov
icebp
jge
mov
inc
mov
out
or
inc
psrlq
xor
sbb
cmp
jp
pushf
sub
dec
fcmovb
lret
jmp
mov
sbb
push
mov
sahf
cmp
repnz
pop
fisubrl
xchg
lods
push
xchg
and
lret
sub
jge
sbb
and
dec
jp
pop
test
aaa
add
decb
cmp
lds
cmp
dec
pop
test
sub
cld
arpl
mov
pop
shrl
sub
inc
mull
mov
and
pop
sub
jns
mov
or
mov
in
and
incb
jecxz
in
jecxz
cltd
lods
cmp
dec
jle
je
inc
pop
jmp
imul
sbb
inc
fcomi
call
adc
mov
adc
adc
xor
or
adc
test
fdivl
lcall
cmp
cmpsl
fdivrs
jmp
ficoms
loopne,pt
jle
and
mov
inc
mov
jmp
aaa
or
add
mov
inc
stos
push
fistl
hlt
add
xchg
push
int3
in
outsl
adc
xchg
aaa
jg
sti
insl
dec
je
test
mov
xchg
mov
and
cmc
imul
test
xor
loope
mov
mov
push
push
icebp
xchg
xor
pop
cmp
mov
outsb
dec
push
dec
mov
lret
in
ja
imul
sub
aas
xor
jb
push
cmp
fmul
xor
pop
pop
lahf
jmp
sub
outsl
jp
pushf
lock
iret
pop
dec
imul
jae
mov
inc
cltd
imul
ljmp
mov
xchg
arpl
shll
pop
test
jg
or
inc
ljmp
stc
mov
cmp
sub
or
js
inc
dec
sbb
popa
xlat
fiaddl
push
iret
sbb
imul
dec
pop
movb
pop
lcall
cmpsb
cmp
outsb
enter
ret
xor
bound
dec
and
jp
add
mov
inc
fildl
lahf
or
xchg
leave
loope,pn
mov
cmp
aas
jno
cmc
dec
jge
in
cmp
mov
push
movsl
faddl
and
push
mov
sbbl
sub
cmp
push
add
aaa
arpl
xor
mov
xor
dec
sahf
lahf
push
insb
push
push
push
mov
dec
mov
pop
or
loopne
sahf
fcoml
xchg
cmc
add
stos
adc
jg
sbb
cmpsl
repz
mov
or
ljmp
lods
and
je
xchg
jbe
or
inc
js
inc
push
stos
jno
clc
int
jbe
jno
pop
pop
lahf
icebp
and
scas
fnstsw
repnz
stos
pop
inc
lds
lods
cmp
test
rcrb
insl
pushw
stos
xor
cmc
inc
cmc
pop
and
ror
aad
jo
inc
sub
rclb
mov
sub
in
mov
dec
fcom
cmpsl
das
xchg
out
loop
jmp
jo
mov
cmpl
jne
loope
in
mov
lock
sbbl
in
xchg
out
jmp
dec
loop
push
lret
jp
imul
mov
lock
mov
add
testb
fiadds
dec
out
pushf
icebp
or
xchg
in
push
push
mov
xchg
testl
lahf
mov
ja
lcall
in
inc
in
pop
outsb
aaa
sahf
and
cltd
data16
mov
rcrl
addl
lea
or
mov
insb
das
in
jp
cmpsl
sahf
push
cmpsb
cmp
jno
mov
repnz
loopne,pn
fadds
fistl
xor
imul
adc
mov
pop
dec
jne
xor
decb
inc
and
mov
sub
mov
repz
push
xor
jae
rolb
and
inc
cwtl
jmp
lret
loopne
arpl
jg
adc
scas
out
mov
dec
xchg
mov
ljmp
insl
stos
js
push
mov
int3
sub
mov
pop
sub
mov
xchg
pop
mov
repz
test
mov
bound
add
pop
jne
mov
xchg
adc
inc
inc
mov
fsubrl
xor
iret
pushf
cmc
fsubrs
mov
inc
lcall
test
xor
mov
mov
lds
mov
mov
jl
dec
sub
in
jge
cmp
stc
push
mov
pushf
mov
repnz
in
push
jmp
lods
lock
and
push
or
and
stos
je
dec
add
fimuls
repnz
mov
jle
imul
xor
cmp
mov
sbbl
push
jl
popa
cli
ja
mov
scas
fstpt
mov
mov
xchg
fstpt
ja
add
aam
lret
arpl
pop
sub
pop
push
push
cmp
fwait
in
cmp
push
popf
cmp
sub
rolb
imulb
xor
jp
clc
mov
ja
mov
mov
xchg
dec
cmpsb
mov
ret
mov
mov
add
negl
jbe
aaa
mov
arpl
jmp
out
sub
mov
or
dec
insl
add
lcall
xchg
sub
adc
inc
cmp
cmp
push
outsl
xchg
adc
movsl
pop
mov
and
fdivs
ljmp
jo
add
inc
sbb
sbb
adc
psrlq
push
mov
sbb
add
pusha
je
lcall
pop
jmp
sti
jns
sbb
push
hlt
hlt
pusha
test
call
cmpsl
ret
jae
loopne
les
inc
popa
xor
push
inc
mov
cltd
dec
testl
mov
ds
xorl
push
decl
notb
or
ja
mov
mov
inc
xchg
add
pop
repnz
lods
data16
rolb
pop
pushf
push
sbb
push
jnp
rcl
jnp
data16
fistpl
jbe
push
daa
jle
or
daa
jle
test
xchg
in
lret
cld
outsb
xor
movsl
mov
inc
cltd
in
adc
out
xchg
cmpsb
xchg
cs
push
xchg
call
mov
pop
lods
xchg
or
xor
mov
loopw
mov
addr16
popa
inc
sbb
scas
pop
xor
mov
pop
adc
pop
fistpl
js
push
add
clc
shll
xchg
into
mov
ret
cltd
pop
jge
pop
jg
mov
add
in
cmpsb
inc
inc
inc
and
loope
push
and
sbb
push
not
rcrb
insl
fdivs
pop
aaa
das
xor
sbb
adc
addr16
ja
adc
xchg
jecxz
mov
push
inc
test
xor
mov
mov
mov
imul
cmp
ret
aas
xchg
repnz
dec
pop
mov
cmp
mov
adc
stos
les
push
sub
dec
arpl
add
adc
cmp
rol
xchg
bound
mov
ds
xchg
inc
mov
dec
js
lods
icebp
addb
adc
pop
out
jle
xchg
dec
cmp
inc
sahf
out
mov
sti
mov
negb
mov
xchg
sub
sub
push
rclb
xlat
xor
inc
sub
popf
add
and
sub
dec
cmp
neg
movsb
mov
sbbb
inc
xor
out
push
xchg
shrb
gs
mov
jl
mov
jecxz
lahf
fs
int3
in
mov
cmpb
jle
int
cmp
adc
mov
or
cmpsl
sub
xor
frstor
push
dec
sub
hlt
inc
jbe
xlat
pop
negb
adc
mov
sbb
rcrl
addb
dec
mov
mov
dec
outsb
daa
ljmp
inc
xchg
cs
adc
dec
xor
sub
jg
lahf
mov
shll
aaa
scas
xor
sub
lret
test
xchg
mov
jb
cmpsl
add
push
repz
pushf
jle
dec
add
ljmp
inc
xor
push
and
movl
mov
shrl
xor
cmp
sub
gs
out
mov
fsubp
in
sub
jno
pushl
inc
xor
nop
fldpi
data16
lods
pop
popf
test
mov
jb
lds
xchg
cli
stc
jns
inc
loope
out
test
orl
xlat
push
adc
pop
lods
je
data16
sub
sub
jmp
add
mov
push
mov
mov
mov
jnp
jp
je
mov
or
pop
mov
mov
inc
lahf
sahf
xchg
cltd
icebp
stos
scas
adc
mov
pop
ljmp
add
jle
pop
add
mov
cmp
inc
pusha
pop
sub
push
cmc
add
les
dec
mov
or
dec
push
cmp
pop
push
cmc
push
adc
add
aam
scas
and
dec
sbb
mov
pushf
and
push
mov
pop
movsl
or
push
out
pop
mov
aaa
rcrl
into
dec
mov
sbb
or
jo
cmpsb
jbe
jae
jp
add
push
push
jge
movsb
pop
adc
stc
mov
ss
dec
aam
fildl
cmp
addb
test
jg
sti
mov
jmp
loopne
fdivrs
mov
mov
in
sti
or
xlat
xchg
lret
jmp
mov
pop
xor
push
cmp
jae
scas
pop
into
adc
arpl
jbe
mov
mov
push
mov
fs
mov
rol
inc
je
jb
out
jne
gs
out
shrb
push
pop
and
adc
sbb
jg
xor
jae
inc
push
fsubl
les
lea
cmpb
sub
ss
add
sub
imul
add
dec
loope
imul
jmp
or
adc
push
lods
add
push
mov
stos
dec
ljmp
push
cmpsl
sbb
sub
pop
xchg
dec
loopne
lock
ds
decl
clc
xorl
mov
lods
inc
push
sub
inc
scas
popa
xchg
imul
shrl
pop
rcll
adc
sbb
xchg
shll
pop
adc
cmp
or
daa
cld
mov
jns
stos
mov
in
mov
cmp
xchg
insl
and
hlt
ret
insl
arpl
dec
fwait
jl
sbb
xlat
je
inc
jae
sub
fiaddl
arpl
mov
or
and
shll
mov
das
insl
adc
shlb
add
inc
adc
in
cltd
dec
pop
pop
outsl
add
je
pusha
pop
lock
pop
mov
fsubs
sub
int3
loope
adc
cmp
or
cmpsb
mov
mov
icebp
jnp
or
into
pop
mov
mov
clc
pop
ljmp
sub
xchg
sub
cmpsb
fiaddl
and
ret
mov
pop
cmp
push
jl
inc
test
jb
loop
xor
shll
and
les
jle
leave
mov
pop
test
adc
or
pop
scas
mov
in
test
ret
stos
mov
push
loopne
dec
shll
testb
into
andl
fiadds
int
lret
adc
movsl
jbe
subl
ss
lock
fwait
repnz
out
xchg
outsb
repnz
faddl
adc
rcr
push
das
dec
rorb
stc
out
jecxz
test
arpl
arpl
repz
fwait
jnp
inc
lahf
pop
insb
mov
sub
or
stos
hlt
mov
int3
pop
test
cmc
xchg
aad
clc
inc
mov
inc
jae
lret
repz
push
dec
ss
push
add
in
pop
in
cmpsb
dec
mov
loop
lcall
rcl
mov
push
adc
loope
out
sarl
push
xchg
xchg
adcl
dec
js
std
inc
shrb
outsl
push
xor
fldcw
xor
sub
mov
sbb
jb
sar
fdivp
outsl
nop
aaa
xor
mov
push
jns
in
int
adc
shld
stc
fs
jno
cld
lret
cmp
push
test
adc
push
push
repnz
sbb
push
mov
xor
test
mov
cli
mov
popa
and
cmpsb
lods
roll
popf
pop
cmpsl
mov
xchg
outsl
and
in
sub
and
icebp
cmp
andb
test
sub
pusha
movl
xor
jne
lock
es
or
rcl
mov
aam
daa
xor
daa
pop
mov
cmpsl
fs
pop
sub
jo
hlt
roll
inc
leave
xchg
push
hlt
scas
mov
dec
int
insl
addl
aas
iret
pop
and
dec
lcall
mov
rcll
mov
in
hlt
lret
fdiv
int3
jl
call
xchg
fnstcw
mov
cmp
inc
mov
xchg
xchg
aaa
cs
push
push
fimuls
inc
int3
movsl
jmp
xor
pop
test
and
and
mov
jle
pop
push
fwait
sub
cmp
push
jle
cwtl
rorl
sub
inc
ss
imul
mov
shll
scas
bswap
mov
test
and
test
pop
insl
nop
leave
ror
inc
dec
mov
add
fistpll
movsl
jae
push
lock
jg
aad
dec
ljmp
sarl
fisubrs
or
ss
roll
pop
mov
cmpsl
outsl
jecxz
fcom
sub
fnstenv
inc
es
fstpl
popa
ficompl
push
jnp
leave
pop
inc
mov
jbe
ljmp
mov
test
pushf
xchg
pop
xchg
add
add
jbe
xchg
jge
imul
inc
xor
sbb
shrb
es
pop
mov
jo
xor
cmp
dec
mov
xchg
shll
lock
cmp
hlt
and
cld
dec
mov
and
and
out
xor
cld
stc
mov
icebp
pop
jbe
cmpsl
add
jnp
outsb
cmc
movsl
out
mov
test
adcb
lea
jne
stos
mov
in
and
mov
lret
dec
stos
cwtl
aas
in
fwait
ljmp
out
sbb
xor
dec
lds
pop
mov
outsl
sub
aas
ds
out
add
jmp
stos
std
cmp
int
xchg
lahf
push
sub
loope
in
dec
mov
inc
into
and
hlt
mov
cmp
xchg
cli
sbbl
xchg
test
mov
sbb
aam
fs
outsb
xorl
mov
cmpsb
cmpsb
add
in
inc
and
sub
fisubl
and
jmp
dec
pop
test
inc
imul
repz
cmp
add
insb
push
mov
dec
xchg
je
pop
adc
lret
loopne
dec
loope
xchg
mov
lahf
call
enter
sbb
data16
and
in
mov
lahf
movsb
push
fwait
xchg
leave
xlat
lret
mov
insb
outsb
scas
hlt
in
addb
xlat
cld
push
cmp
into
add
ret
pop
rcrb
push
popf
and
fwait
pop
movsb
aas
jecxz
xor
push
dec
xor
add
jno
jo
sub
data16
jecxz
rcrl
push
es
mov
leave
shlb
pusha
mov
shll
cld
in
pop
daa
jp
adc
mov
jge
subl
adc
daa
push
ljmp
int3
bound
mov
bound
jo
mov
xchg
sbb
je
xchg
adcl
push
sbb
or
jne
push
mov
add
mov
rol
lods
jno
xchg
inc
inc
cs
push
es
call
push
and
rcr
adcb
jne
daa
test
shl
xchg
outsl
sbb
sti
pop
insb
push
push
pop
addr16
and
aad
xor
fistpll
popa
jp
inc
je
bound
gs
xor
addr16
out
or
out
out
mov
pop
into
ss
mov
imul
jne
ret
movb
push
cld
in
xchg
inc
ficoml
out
stos
push
mov
inc
push
cmp
or
push
xchg
in
arpl
push
jno
xchg
jp
jno
fists
dec
mov
inc
or
add
dec
add
sarl
pop
xor
ja
jecxz
xchg
mov
rol
repnz
shrb
adc
and
fdiv
rcrb
addr16
idivl
orb
popf
mov
rclb
scas
andl
add
cmc
mov
mov
popf
sub
mov
jl
adc
inc
iret
push
jl
and
xchg
ljmp
adc
add
jmp
test
adc
mov
lods
xor
in
inc
jne
adc
js
mov
pop
es
popf
dec
push
mov
cli
fisttps
jmp
lods
xor
mov
shlb
sti
sub
mov
sarl
hlt
mov
xorb
addl
dec
mov
scas
mov
les
push
ljmp
mov
xchg
es
nop
daa
mov
fstpt
mov
lods
pop
adc
dec
ljmp
xchg
dec
lea
inc
je
inc
xchg
mov
push
push
jne
bnd
dec
jecxz
lret
pop
das
pop
dec
mov
xchg
jecxz
jmp
sub
and
add
icebp
dec
shlb
nop
aad
add
jnp
and
inc
mov
fstpl
into
cmc
push
dec
dec
pop
js
movsl
rolb
adc
mov
cld
ja
adc
push
repnz
sti
add
in
fisubl
inc
xchg
cmp
or
out
sbb
sar
lret
popf
mov
test
loop
icebp
xor
mov
lods
ss
push
mov
dec
fucom
push
out
cmp
push
insb
pop
aam
adc
dec
cmc
ljmp
xchg
and
pop
dec
subb
xor
sti
or
sub
out
fucomi
inc
push
addr16
lock
dec
jecxz
mov
je
and
adc
pop
push
dec
push
push
mov
sti
mov
mov
jae
push
push
xor
xchg
xchg
repnz
fistpll
sbb
add
mov
fbld
jp
js
add
dec
out
sar
push
cs
enter
clc
mov
mov
orl
cs
fildll
loope
inc
daa
aam
gs
je
jb
mov
jmp
cmp
ffree
cmp
cwtl
xchg
xor
pop
les
fadds
out
out
inc
mov
xlat
mov
cmp
jnp
cld
aad
mov
or
cwtl
sar
pop
fldt
pop
das
push
push
call
push
in
jp
test
xchg
outsl
dec
mov
inc
cmc
push
cmpsb
cmp
pop
pop
cmp
mov
pop
lods
pop
fsts
cltd
pop
out
or
push
sbb
imul
add
xor
xchg
test
test
mov
sarb
cmpsl
aaa
add
lds
sbb
sbb
or
sbb
int
rorb
dec
js
sub
cmc
cmc
cltd
xchg
sub
jb
xlat
arpl
stos
mov
pop
insb
sbb
sbb
outsb
fidivrs
je
xchg
mov
jg
inc
cmpsb
sub
jmp
xchg
jne
sub
les
ss
xchg
mov
into
pushf
pusha
push
jle
mov
or
pusha
outsb
lods
rcll
add
jmp
xchg
add
mov
int3
sbb
jl
ret
ret
cmpsb
mov
mov
in
push
jecxz
dec
mov
mov
ss
mov
scas
inc
call
lret
push
sub
push
dec
fsts
sbb
jae
ljmp
scas
mov
mov
call
outsl
fs
leave
sbb
jne
jmp
jp,pn
jno
xchg
jbe
xchg
push
hlt
loope
adc
xchg
push
sub
cmp
mov
inc
outsl
sahf
ret
inc
jl
mov
ljmp
es
cmp
or
popa
stc
mov
cmp
adc
adc
inc
leave
inc
pop
dec
out
pop
scas
cli
or
stos
in
lock
nop
out
push
fdiv
cli
add
push
lret
dec
adc
sbb
or
pop
mov
push
pop
aas
outsb
dec
push
lret
fildl
and
aaa
lods
movsl
jno
xchg
je
stc
pusha
xor
dec
imul
mov
repnz
pushf
or
into
inc
jnp
pushf
push
out
dec
lds
dec
out
jns
xchg
xor
xor
jbe
test
sbb
mov
addl
sbb
arpl
add
or
lcall
fcmovne
sub
scas
addr16
hlt
je
jg
and
lods
mov
sar
arpl
out
adc
gs
adc
std
ret
mov
in
in
outsl
ljmp
xchg
cli
cmp
mov
pop
inc
and
imul
out
cmp
cmp
pop
and
pop
mov
jne
sub
fmuls
dec
mov
pop
jnp
aas
movsl
cwtl
dec
jp
hlt
push
sbb
loopne
or
pop
in
add
push
icebp
iret
mov
ds
repz
mov
inc
pop
sti
add
stc
dec
fimuls
xchg
adc
cmp
aas
xor
or
lcall
psubq
ljmp
clc
jae
dec
repnz
xchg
jne
and
push
pusha
test
and
pop
mov
fsubp
push
dec
enter
xchg
ss
mov
add
in
or
outsb
mov
cld
xchg
les
sbb
mov
lods
dec
shl
in
nop
pop
add
add
data16
and
push
dec
std
je
lahf
add
push
xor
jl
sbb
mov
shlb
push
divl
fisubl
and
or
pushf
das
push
outsb
mov
iret
push
push
add
mov
adc
adc
xor
cmp
aad
popa
test
outsb
push
push
push
mov
mov
mov
scas
xor
mov
testb
stos
xlat
jl
bound
xchg
ja
cmpsb
popa
mov
dec
jno
sub
cwtl
loopne
fldcw
xor
testl
aas
dec
sub
cltd
xor
mov
mov
mov
mov
pop
movsb
cwtl
fidivrs
sub
mov
push
out
insb
arpl
dec
pop
push
jmp
push
repnz
jo
sub
shl
or
mov
insl
xchg
and
and
adc
adc
mov
notb
cmp
and
jl
xchg
inc
sar
int
ljmp
dec
hlt
out
push
adc
clc
jp
cwtl
or
mov
and
mov
pop
jne
jle
inc
jge
add
call
rol
test
ret
adc
mov
xchg
cmp
insb
inc
hlt
lea
jae
loop
mov
push
sub
mov
addl
inc
mov
je
movsl
scas
popf
push
inc
and
pop
mov
das
in
pop
pusha
xchg
mov
testb
adc
cltd
dec
mov
ret
les
insb
sti
and
jbe
push
jae
pop
cvtps2pi
jge
pop
push
stos
adc
push
rorl
mov
xchg
inc
sbb
cwtl
std
fstps
and
sub
or
out
add
pop
jnp
mov
pop
xor
mov
call
popa
sub
cmp
gs
mov
lahf
xchg
and
inc
outsb
adc
jnp
push
dec
mov
and
in
lds
push
jnp
add
push
jmp
sti
mov
icebp
inc
fisubs
test
xchg
push
aam
mov
cmc
sbb
fidivs
sbb
test
test
ret
daa
cld
sub
stos
movsb
cmp
int3
push
lods
lds
mov
xchg
mov
inc
sub
push
jmp
mov
jg
movl
pop
jnp
dec
test
sahf
pop
push
xlat
sbb
xchg
xchg
mov
sbbb
adc
cmc
out
add
fmuls
popa
xchg
inc
movsb
in
sub
and
and
sub
xchg
in
int3
sub
mov
jno
inc
scas
rcrb
cmpsb
sub
repz
push
xchg
addr16
xchg
es
or
jle
cwtl
cmp
fs
fstp
sarl
sbbb
xcrypt-ofb
jle
sub
aad
outsl
sarl
clc
jg
cld
stos
mov
and
sbb
fiaddl
testb
call
sbb
arpl
xchg
mov
jne
jecxz
add
inc
pop
mov
scas
xchg
test
out
fcoml
stos
push
xchg
test
cs
pop
cmpsl
in
xor
jo
mov
into
adcb
mov
repnz
xor
pop
test
adc
les
mov
lcall
test
adc
adc
mov
jo
fadd
inc
push
inc
std
and
xor
fs
je
fcmovnb
push
xchg
xor
xlat
and
stos
imull
out
adc
fadd
popa
jbe
cmp
fildll
push
xchg
inc
test
setl
sbb
movl
dec
pop
sti
cmc
jbe
out
fildl
pop
pop
bound
loope
scas
xchg
cmpsl
js
add
addr16
lock
imul
andl
lods
mov
subl
or
jle
cwtl
inc
stc
sbb
inc
push
or
mov
pop
imull
xchg
sub
iret
sbb
xor
or
fmull
push
dec
sub
ret
mov
dec
cltd
pop
lods
and
lds
adc
in
imulb
in
leave
fcmovnbe
icebp
jb
mov
jnp
sub
dec
jl
mov
loope
push
orl
xchg
push
outsb
lock
and
jns
jae
or
je
xor
mov
cmp
xor
insb
dec
popa
fsubl
stos
push
movsl
mov
xor
lcall
pop
rorb
dec
mov
xlat
lods
mov
testb
pop
jne
ror
in
scas
lock
push
stos
sbb
pop
mov
popf
sbbb
or
scas
fs
push
nop
sub
cmp
mov
jns
or
scas
jne
out
int
sbb
dec
dec
inc
mov
dec
xchg
movsl
stos
inc
add
ljmp
xor
pop
mov
inc
adc
dec
sbb
pop
adc
sbb
jno
mov
mov
insb
in
cmpsb
testl
and
sbb
add
sbb
repnz
dec
push
roll
loop
stos
pop
pop
mov
jmp
outsb
pop
push
cmpsl
shr
add
dec
js
adc
jecxz
dec
push
xor
ror
sti
iret
mov
or
mov
cmp
test
pop
inc
xchg
mov
popf
jno
fwait
jno
adc
call
into
push
popa
mov
xor
mov
add
fwait
sahf
pop
xlat
ljmp
pushf
push
sahf
insl
call
gs
fisubrs
lods
add
or
lcall
bound
mulb
sbb
in
or
xchg
add
mov
leave
ljmp
leave
mov
loopne
lahf
test
jae
loop
adc
xchg
js
fstps
dec
push
push
xchg
test
xchg
and
dec
cs
xor
dec
andl
in
enter
jns
sub
or
mov
call
mov
clc
repnz
sub
cli
push
mov
jae
test
imul
cltd
movsl
jp,pt
in
dec
sbb
movsl
jno
adc
jge
sbb
inc
mov
fimull
mov
lcall
testl
dec
mov
outsl
dec
in
lods
pop
mov
fnstcw
repnz
sub
into
adc
loope
xorl
sub
xchg
xchg
test
test
mov
les
fsubrs
scas
mov
test
loope
and
mov
pushf
and
inc
ficompl
test
bound
mov
lds
mov
mov
push
aad
mov
lcall
jo
adc
mov
push
outsl
ret
xchg
add
rorb
sub
fidivrs
fldt
cmp
mov
inc
push
push
inc
loop
add
cmp
aad
mov
mov
ljmp
jl
dec
popa
adc
adc
loopne
jo
ljmp
mov
fisubs
fs
idiv
mov
xor
jmp
rolb
xchg
loop
loopne
mov
je
mov
icebp
xchg
shrb
add
lea
dec
shll
cmp
mulb
inc
sbb
js
ret
test
outsl
lret
loopne
addr16
enter
stc
into
push
test
mov
push
lcall
sbb
loope
js
sti
xlat
gs
bound
imul
jnp
xchg
inc
pushf
f2xm1
sub
sbb
or
cmp
mov
sar
xor
sbb
push
lcall
jo
mov
mov
stos
mov
cwtl
test
scas
out
or
push
or
or
xchg
addr16
sub
inc
popl
jo
jbe
imul
cmp
mov
out
mov
cli
jno
inc
xchg
insb
jmp
out
push
out
pop
enter
les
stc
cmpsb
negb
int3
jmp
fstps
push
adc
xor
push
xchg
jo
dec
push
fwait
ds
xchg
jo
movsb
push
out
pop
jo
and
dec
leave
sahf
dec
sysexit
push
movsl
cltd
nop
ja
sbb
xchg
int3
bound
xchg
lret
pusha
add
xor
xchg
sub
popf
div
pop
mov
lahf
pop
mov
repz
pushf
dec
int
jnp
out
out
mov
or
xchg
mov
mov
das
xor
ja
test
push
pusha
hlt
mov
ljmp
mov
sahf
mov
mov
aaa
xor
rcll
sbb
mov
adc
mov
shll
stc
mov
out
int
movsb
in
xchg
lahf
push
xchg
scas
dec
sbb
sub
mov
dec
cltd
into
or
aam
mov
das
push
cld
lahf
pop
cld
cmp
lret
lahf
lods
dec
dec
jge
scas
xchg
jle
push
push
dec
cltd
repz
mov
cmp
mov
add
test
sbb
adc
icebp
test
mov
xchg
popf
scas
fiaddl
push
mov
cmp
imul
xor
mov
push
dec
xor
dec
in
sub
bswap
loope
and
repz
pop
push
and
subb
xchg
cltd
incl
or
cwtl
jle
fisubl
repz
add
cmc
sub
cwtl
ror
sub
out
fmuls
pop
xchg
std
lcall
inc
roll
dec
add
mov
insl
cli
sub
mov
xlat
mov
sbb
daa
movsb
xchg
fdivp
push
fdivs
jno
xchg
xor
inc
mov
lret
jl
or
cld
sbb
push
cmc
fists
insl
cltd
ret
sbb
mov
add
adc
bswap
add
test
dec
push
xchg
outsl
lea
push
ss
repz
cmp
shlb
and
push
call
ret
dec
sub
mov
pop
dec
cli
testl
push
lods
fsub
ret
icebp
inc
mov
inc
mov
popa
xchg
outsb
mov
insl
clc
mov
push
mov
mov
or
mov
add
pop
gs
xchg
fbld
dec
add
inc
icebp
stc
iret
cmpsb
xor
out
pop
lea
push
stc
ljmp
bound
insb
sub
cld
lret
mov
test
fwait
mov
or
pop
mov
mov
ljmp
cmp
iret
adc
sub
cmp
adcl
lea
jl
les
ja
aad
jp
cmp
dec
push
sub
cmp
cmp
int3
adc
pop
inc
stos
shll
xchg
dec
lret
push
lock
lds
or
gs
push
popa
jp
test
pop
dec
dec
aaa
loope
popa
scas
clc
sub
sbb
dec
lcall
push
inc
xlat
pop
add
or
dec
jno
cwtl
sbb
xor
mov
sub
sahf
sbb
pop
sahf
iret
dec
cmp
leave
push
pop
mov
ljmp
jae
mov
mov
fldl
hlt
sub
jne
mov
aaa
outsl
mov
xchg
scas
insl
mov
nop
mov
in
pop
sub
loope
shll
aaa
adc
fdivrs
test
sbb
sti
cld
lahf
scas
sahf
cwtl
mov
jmp
adc
mov
std
push
mov
popa
ljmp
inc
xchg
in
mov
push
adc
push
mov
mov
jle
or
cmp
or
pslld
int3
jge
mov
js
mov
js
in
cld
mov
sbb
and
mov
pop
das
mov
and
mov
and
mov
fsubrp
in
scas
repnz
adc
imul
dec
inc
fstpt
jp
lahf
fwait
xchg
xor
xor
lods
adc
push
jbe
rorl
pop
fisubrl
mov
orl
leave
push
mov
sbbl
dec
dec
jecxz
jbe
mov
lret
push
arpl
hlt
stos
xchg
movsl
or
xor
mov
sbb
push
inc
or
pushf
sub
pop
mov
jnp
test
xchg
ret
shlb
ret
inc
loope
cltd
lahf
sbb
insb
adc
movsb
sub
pop
fs
movsb
outsb
call
scas
xchg
jmp
lret
test
jp
add
dec
add
and
fldt
aaa
cmp
test
and
ret
call
jb
sbb
cmp
sub
or
scas
cmp
dec
push
mov
dec
add
push
pop
push
lahf
jns
stos
or
jbe
or
adc
int
pop
dec
fnstenv
pop
or
testl
sbb
mov
xor
dec
mov
pop
adc
and
mov
loope
shlb
setl
jnp
imul
clc
das
jae
stos
xchg
push
push
les
jle
jae
mov
ds
cli
jnp
push
or
xchg
jo
jmp
scas
insl
push
and
lods
ret
int
mov
mov
push
jl
fneni(8087
imul
mov
sarl
fnsave
stc
jp
aam
xor
lcall
xchg
cltd
or
cli
fwait
icebp
sbb
bound
add
pop
shll
mov
mov
jne
aam
push
add
shll
or
jbe
inc
mov
bound
test
stos
xor
fisubrl
push
xor
lret
fwait
adc
cltd
inc
mov
push
xor
in
movsb
dec
mov
in
add
pop
mov
test
adc
mov
out
imul
jge
adc
add
push
das
pusha
lea
jne
lods
mov
out
sbb
mov
jecxz
xchg
lods
mov
mov
inc
test
test
hlt
mov
xchg
loope
jmp
sub
adc
push
jo
sub
aad
inc
xchg
mov
sbb
cmc
sahf
pop
add
clc
mov
stos
test
je
dec
das
in
divl
pusha
push
jno
inc
mov
cmp
adc
or
rcll
add
mov
repz
fs
mov
mov
rcrb
pushf
in
push
or
pop
and
sub
adc
cltd
xor
inc
xor
gs
cmp
es
sub
je
adc
mov
test
jo
shll
testb
insl
lods
jo
fldenv
inc
mov
into
jbe
in
shl
cmp
sbb
shr
mov
cld
ret
out
and
inc
mov
cmpb
inc
cmp
push
xchg
daa
mov
lahf
adc
cmp
out
lcall
int
inc
jbe
xchg
ret
push
inc
push
data16
test
mov
fildl
or
cmp
xorb
cmp
xor
jbe
mov
sahf
insb
sbb
movsb
pushl
sub
cmp
add
lret
pop
cmpsl
loopne
xchg
xor
dec
shrb
ds
pop
mov
test
sub
push
pushf
jnp
lock
mov
inc
test
cli
jmp
mov
xor
mov
or
xchg
clc
loope
fdivrp
fmulp
mov
cs
xchg
mov
push
int
les
test
popa
repnz
xchg
add
push
into
mov
pop
notb
fidivrl
fnstenv
jl
pop
repz
int3
jns
push
test
rorl
stc
clc
pop
int
adc
lods
or
sahf
in
mov
into
mov
scas
xchg
es
push
mov
inc
add
cmc
and
adc
adc
dec
ret
lahf
xchg
enter
std
out
cmp
or
add
push
adc
aaa
or
pop
subb
xchg
or
ds
lahf
inc
adc
push
in
inc
out
dec
xor
push
sbb
pushf
mov
outsb
cmc
add
fnsave
dec
dec
mov
icebp
xor
mov
sub
lahf
fwait
or
xchg
fldenv
add
lods
sub
dec
fdivs
roll
sub
mov
jecxz
adc
bound
int
sub
adc
adc
sti
imul
inc
mov
dec
jne
mov
jae
mov
in
push
sbb
fnstcw
pusha
inc
rcrl
in
or
mov
jl
lcall
jge,pt
jmp
repnz
jb
test
cmpsb
cmp
mov
or
stc
pop
cmp
sub
push
ss
or
ss
and
movsl
ss
sub
dec
or
imul
mov
pop
in
cli
bnd
push
imul
adc
mov
cmpsb
int3
push
cmc
sub
and
inc
dec
mov
push
mov
mov
das
jnp
mov
ss
inc
fistps
inc
loop
sub
imul
sub
rcrb
imul
fs
movsb
mov
in
mov
xlat
insl
popa
test
push
lret
xchg
jecxz
fiadds
mov
mov
jmp
and
xchg
sub
gs
sbb
adc
lahf
adc
mov
rorb
enter
or
dec
inc
pushf
js
das
je
sub
xchg
cmp
adc
or
mov
jmp
sub
push
outsl
je
adc
and
lret
stc
add
aaa
mov
xchg
mov
or
and
jge
xchg
sub
decb
enter
cmc
jbe
add
out
mov
adc
and
push
fs
inc
mov
cmp
shrb
adc
add
pop
rol
jae
dec
mov
mov
xlat
mov
pop
ljmp
sahf
jnp
jb
iret
push
addr16
cld
pop
pop
lret
outsl
in
mov
cmp
popf
push
call
push
jmp
clc
cmp
adc
pusha
test
popf
or
jns
jnp
shr
dec
int3
mov
add
push
jns
jne
jns
sahf
pushf
imul
in
push
push
pop
in
shrl
push
jle
test
or
push
loop
in
iret
mov
sti
jge
out
iret
mov
adc
push
add
repz
cli
ficomps
daa
sbb
sbb
clc
cli
lock
aaa
mov
loope
outsb
daa
outsb
cmc
dec
in
xchg
les
into
xlat
or
dec
pushf
mov
mov
ds
ds
inc
dec
sahf
sub
sub
sahf
fiadds
ret
mov
aam
add
iret
xlat
mov
add
std
cmovo
ja
sub
mov
scas
jb
jmp
movb
inc
mov
inc
jmp
sbb
arpl
bound
dec
mov
aaa
mov
sar
sahf
sub
push
inc
and
push
outsl
xchg
insl
out
xchg
ror
mov
ss
xor
add
jmp
inc
xchg
sti
hlt
aam
mov
xchg
bound
stos
pop
dec
rcrb
add
fldenv
xor
adcb
or
add
push
inc
jmp
jbe
stos
dec
cltd
scas
jae
mov
pop
and
add
int
outsb
ret
xchg
xchg
sarb
lods
push
stc
jae
mov
xchg
xchg
ret
pop
ds
push
pop
adc
pushf
mov
adc
or
fisttpl
fnsave
inc
xchg
mov
shll
mov
push
divl
test
popf
data16
sub
push
xchg
jbe
lret
xor
pop
lds
into
and
sbb
dec
or
jle
mov
mov
mov
cmp
js
xchg
into
mov
dec
xchg
cmc
loop
rcrl
xchg
iret
jno
rcl
mov
adc
cli
add
mov
add
sbb
mov
mov
mov
push
andl
xor
je
lret
xchg
push
jl
dec
pop
inc
jb
ljmp
sbb
mov
mov
cltd
stos
dec
shrb
rolb
out
addr16
aad
sub
out
std
jne
xlat
xor
xchg
pop
cwtl
ss
fidivs
dec
inc
or
rcll
or
out
data16
daa
jbe
scas
or
xchg
cmp
xor
pop
mov
push
in
mov
out
inc
scas
insl
xchg
xlat
push
call
dec
jo
jnp
jb
cwtl
into
inc
jg
adc
xchg
std
mov
dec
jne
bound
jg
in
pop
movsl
pop
popa
cwtl
fwait
jle
pcmpeqb
mov
addb
mov
mov
sub
ret
outsl
pop
icebp
mov
enter
jmp
dec
xchg
jns
push
stos
test
outsb
xor
mov
aad
mov
int
fsubl
fistl
cs
jne
sbb
repz
test
pushf
loopne
int
in
mov
movsl
sbb
pop
data16
xor
movsl
js
xchg
sbb
cs
xor
sarb
or
subl
cs
scas
mov
add
mov
ds
mov
repnz
test
stos
gs
fucomp
jl
inc
lahf
les
imul
icebp
pop
push
insb
popa
xorl
cli
mov
or
vshufps
hlt
test
dec
in
in
ds
cmpl
mov
dec
xchg
cmpsl
imul
and
cltd
movsl
adc
fidivs
fistl
jecxz
push
in
lock
cmp
dec
push
or
rorb
sbb
xlat
sub
and
in
test
lods
stc
push
outsb
jb
fbstp
sbb
xchg
jnp
inc
pop
sub
and
leave
mov
or
and
mov
and
lret
adc
movsl
or
mov
jp
xchg
imul
stc
pop
push
fcoms
inc
add
ja
inc
in
adc
inc
out
fidivl
aad
dec
scas
lock
sbb
ss
or
and
and
std
loop
inc
sahf
hlt
jg
stos
pop
and
mov
shlb
rcl
jmp
mov
jmp
sub
jecxz
pop
pusha
js
fsubp
in
mov
xor
mov
mov
insb
data16
clc
push
and
pop
and
cmpsb
ds
xchg
clc
pop
cmpsl
xchg
out
adc
aam
sbb
push
adc
loop
sbb
pop
mov
iret
ret
jbe
fcomps
scas
dec
jle
mov
mov
or
mov
jne
stos
mov
imul
imul
jp
divl
adc
out
adc
mov
mov
repnz
jge
mov
xchg
addr16
xchg
xchg
aad
movsb
int3
and
adc
inc
inc
ret
cmp
pop
xchg
xor
mov
andb
adc
cmp
lock
daa
aaa
and
cltd
sub
mov
lods
pop
ss
mov
mov
push
out
sbb
out
pop
fistpll
lods
push
out
pop
imul
lahf
push
adc
in
sub
arpl
cmp
or
sub
orl
stos
adc
mov
mov
rolb
repz
cmp
scas
js
cmpsb
lds
dec
inc
std
gs
pop
mov
jns
test
add
adc
add
xor
out
arpl
out
sub
xchg
fcomps
push
mov
xchg
push
sbbl
sub
lea
mov
inc
and
out
ret
int3
cmp
mov
sarl
into
mov
sub
stc
jmp
jae
mov
incb
out
pop
popa
lahf
xchg
data16
clc
lahf
cli
idivb
or
mov
icebp
out
sub
lods
or
scas
or
jnp
push
sbb
dec
mov
aad
and
jno
fmul
repnz
jnp
or
ret
inc
daa
lock
jns
jp
or
xor
mov
pop
outsl
mov
rcr
dec
int3
mov
jne
mov
inc
xor
test
ljmp
lds
push
subl
dec
push
mov
mov
ss
dec
clc
rol
shll
push
into
imul
push
insl
mov
movsl
mov
sub
cltd
dec
sti
test
jnp
mov
pop
xchg
movsb
movl
cmpsl
movsl
int3
sub
pop
call
lea
mov
push
mov
push
es
xchg
mov
fiaddl
mov
in
dec
mov
jae
imul
cli
inc
sub
dec
iret
pop
xor
pop
shl
iret
add
add
inc
adc
iret
or
ss
or
sti
push
sub
push
lds
icebp
mov
adc
pop
movsb
test
aaa
sbb
xor
inc
arpl
scas
xchg
gs
cmp
pop
pop
arpl
xor
cs
xchg
pop
pop
leave
pop
jnp
inc
shrl
jo
add
push
mov
enter
mov
sub
addr16
cld
pop
sbb
sub
out
dec
addr16
repnz
insb
scas
stos
cli
fwait
adc
scas
adc
fildl
or
lods
jg
inc
sti
scas
popa
stos
mov
mov
cmp
pop
adc
and
dec
push
int
mov
sbb
push
rorl
hlt
aam
dec
pop
cmp
mov
stos
into
xchg
mov
lea
sbb
test
inc
div
pop
test
sbb
and
push
adc
add
push
pop
xchg
sbb
xor
inc
xor
xor
jecxz
mov
push
dec
push
pop
negb
int3
jmp
or
ror
add
fadd
scas
adc
mov
or
stc
pop
movb
mov
add
mov
mov
lea
scas
pop
mov
mov
adc
mov
or
daa
cltd
jmp
test
insl
les
push
push
in
dec
jge
pop
cmp
xchg
mov
inc
inc
xchg
mov
fdivrl
jnp
cmp
cmp
ret
inc
add
sbb
aad
icebp
hlt
imul
cld
call
push
dec
pop
push
mov
add
xchg
or
jae
bound
mov
add
dec
mov
xor
lret
xchg
adc
orl
mov
addr16
in
mov
mov
iret
adc
push
mov
sbb
cmp
xchg
inc
fisttps
fs
gs
xor
adc
les
in
aad
fistl
jg
cwtl
adc
aaa
xchg
inc
subb
es
jge
mov
jbe
pop
mov
mov
cmp
pop
inc
lahf
arpl
outsl
xchg
mov
push
jo
adc
sub
jmp
js
mov
inc
pop
push
inc
mov
pop
inc
adc
jl
and
leave
leave
or
aaa
jbe
cmpsb
out
mov
fidivl
inc
jno
inc
movsb
dec
dec
dec
sbb
push
or
das
mul
or
pop
and
int3
popa
cld
or
dec
mov
lcall
push
add
dec
jb
je
sbb
xor
adc
or
dec
leave
test
xchg
out
sbb
push
jmp
mov
adc
mov
or
loop
gs
outsl
push
ret
xchg
or
repnz
leave
ja
jo
addr16
sub
in
push
pop
jo
mov
in
js
inc
rorb
xor
cld
pushf
jns
fldcw
xor
andb
xor
dec
mov
mov
xchg
outsb
dec
push
imul
in
mov
cld
out
shlb
inc
mov
loope
jmp
data16
xchg
repz
aad
gs
dec
scas
stos
inc
adc
in
sub
ljmp
jg
lock
dec
es
xchg
mov
jle
addb
xchg
imul
xchg
fcomp
pop
sub
adc
jg
scas
xchg
or
lret
jg
push
mov
cwtl
notb
out
fmul
adc
mov
adc
ja
out
repnz
push
lds
and
insl
test
inc
cltd
cs
ljmp
test
add
dec
mov
shll
push
push
lret
bound
push
je
movl
scas
rorl
dec
fsts
fwait
mov
xchg
shrl
and
pop
dec
ret
xlat
push
fldcw
xor
icebp
mov
imul
push
cmpsl
jnp
in
lock
ss
jns
outsb
int3
adc
outsl
or
aaa
pop
xor
jp
push
pop
cli
andl
xor
ja
or
xor
rclb
into
mov
mov
test
mov
mov
test
negb
xlat
xchg
cmp
cmpsb
or
xor
or
pop
dec
in
pop
inc
enter
fidivs
movsl
lcall
or
cwtl
fsubl
xor
pop
and
rcll
out
mov
lret
stos
test
daa
sub
sbb
xchg
rcrl
adc
pop
fisubs
xchg
and
cmp
movsb
test
mov
jo
sti
push
movsl
insb
dec
mov
pusha
shl
adc
pop
scas
mov
jp
arpl
push
aam
in
and
mov
xchg
pop
call
das
cwtl
mov
daa
outsl
adc
inc
ja
sub
adc
call
lock
es
mov
jg
arpl
push
out
pop
das
sub
push
test
testl
or
imul
ret
data16
sti
daa
repnz
aas
mov
sub
in
dec
pop
adc
mov
inc
jge
filds
loop
bound
rolb
jb
xor
fbld
xorl
and
out
xchg
outsb
pop
in
inc
sub
jg
std
movsb
mov
sub
sub
mov
aad
mulb
pop
imul
add
jp
cmpsb
push
cmpsb
call
cmp
lds
jmp
lods
adc
repz
sbb
push
rcr
scas
or
adc
data16
fstpt
movsl
mov
add
dec
arpl
insl
jae
ja
sub
sbb
data16
shrb
outsl
icebp
push
test
popa
call
jne
jno
in
xor
adc
das
insb
aam
cli
mov
stos
and
mov
mov
pop
or
outsb
jp
push
clc
and
add
dec
insl
xlat
dec
fdivrl
testb
add
xor
in
lahf
jl
push
inc
add
repnz
add
call
in
jb
add
cwtl
sbbb
outsb
insb
nop
aas
negl
adc
xchg
scas
in
jnp
scas
xor
in
les
movsb
lock
fs
pop
add
inc
das
cmpsl
xor
iret
and
push
aaa
rorb
cmp
mov
imul
bnd
xor
sarb
fstpt
ja
addr16
mov
xor
mov
mov
inc
jns
sbb
xor
flds
fbld
fcmove
mov
rorl
sbb
adc
inc
aas
add
test
daa
sub
pop
xlat
aas
lret
scas
std
pop
lcall
add
mov
inc
fisubrl
sbb
fisubl
mov
and
or
mov
dec
sub
dec
jbe
lret
pop
mov
stos
pop
sub
adc
es
mov
repnz
adc
and
in
xchg
movsb
xor
in
cli
incl
mov
sarl
xchg
sahf
inc
stc
push
xor
in
push
or
nopl
lods
jb
not
dec
fistl
xchg
popf
imul
leave
cmp
xor
jae
stos
mov
sti
push
pop
clc
cmp
dec
orb
lcall
jne
add
mov
sbb
pop
ds
out
pop
out
mov
fcom
into
daa
mov
dec
xor
add
pop
call
movsl
fcomps
insl
xchg
push
mov
sub
int
andb
stos
adcb
ss
sarl
outsl
inc
jbe
test
dec
les
popaw
sub
cmp
dec
jnp
mov
dec
sbb
cmc
cli
sarl
xlat
xchg
fmuls
mov
fmul
pusha
push
aaa
ds
sar
addr16
lods
ss
cs
cld
mov
sub
mov
sub
mov
nop
mov
es
inc
mov
mov
sbb
sub
xlat
arpl
imul
outsb
cltd
es
cmp
adc
lock
mov
pop
mov
cmpsl
xchg
or
cs
les
test
std
cld
nop
adc
jbe
jb
cmp
xorl
mov
add
call
push
xchg
ljmp
mov
adc
push
inc
test
arpl
push
out
popa
into
pop
or
sbb
jne
sub
icebp
cltd
or
mov
insl
jg
cmpsb
adc
sub
cmpsb
fadd
mov
xchg
push
mov
cmp
mov
sahf
les
fisttpl
or
and
or
xchg
jb
frstor
into
dec
mov
les
inc
pop
scas
lret
jle
lcall
and
fs
jle
or
cmp
sarb
shlb
in
in
mov
push
call
mov
pop
jns
jmp
repz
ljmp
ret
jecxz
dec
cmpsb
add
fstl
lret
addr16
xchg
adc
out
in
jae
lret
add
push
sub
popf
dec
lret
mov
ret
int
jbe
leave
gs
sub
push
aas
clc
movsb
adc
cmp
cmc
inc
in
fldenv
lahf
mov
lahf
inc
dec
mov
pop
popl
xchg
adc
xchg
outsb
into
sbb
adcl
stos
and
cmp
bound
jbe
cs
jmp
lret
lcall
outsb
push
mov
push
fcmovne
inc
pop
pop
mov
xchg
mov
stc
dec
sti
bound
jecxz
xor
fsub
aad
sbb
decl
ret
call
push
sub
out
mov
insl
pop
and
mov
ret
inc
inc
in
mov
or
inc
icebp
jno
ret
push
push
xchg
inc
scas
addr16
sub
or
pop
rclb
in
push
lods
pop
mov
clc
mov
jne
rorb
adc
and
or
loope
enter
pop
hlt
test
stos
cmp
loopne
inc
pop
jnp
aad
mov
pushf
adc
clc
cmp
mov
and
fcoml
cmp
or
inc
dec
aaa
clc
cmpl
cmovbe
sub
inc
and
push
adc
mov
sbb
ret
dec
mov
and
ljmp
and
sub
out
gs
mov
and
mov
jecxz
lock
and
jnp
jbe
mov
sub
xchg
ss
nop
enter
xchg
subb
or
mov
in
push
xor
mov
xchg
pusha
lret
enter
push
movsb
mov
je
jl
xor
add
mov
arpl
roll
fsubrl
xchg
or
sub
call
ss
add
andl
push
cmp
mov
dec
pcmpeqw
out
or
mov
fadd
mov
fidivrl
sub
cmp
insl
das
inc
ss
les
aas
loopne
mov
popf
pop
movsb
add
ret
jo
ja
hlt
dec
mov
sbb
adc
sub
xchg
icebp
mov
cmp
mov
mov
in
mov
xor
inc
adc
aam
das
xchg
mov
adc
mov
outsb
cmp
addb
pop
mov
and
adc
pop
sub
and
sub
scas
pop
std
ret
dec
jg
adc
dec
push
ret
sub
out
adcb
scas
add
adc
push
daa
pop
pusha
hlt
push
mov
fdivl
jge
sbb
shlb
or
lods
aad
popf
int3
loope
imulb
test
repnz
xchg
xchg
push
mov
lods
push
fsubrl
mov
pop
xchg
push
lds
insb
mov
out
frstor
xchg
in
pop
mov
aaa
mov
pop
inc
sbb
jnp
dec
rorb
decl
add
jle
and
inc
pop
rclb
test
imul
out
and
es
orl
mov
pop
xor
cmpl
mov
stc
xchg
je
sbb
loope
movsl
adc
sbb
and
cmp
fisubl
dec
dec
sar
leave
fisttps
out
shr
imul
mov
lahf
int3
and
xchg
xchg
xchg
cwtl
arpl
xor
iret
orl
sbb
movsl
push
mov
add
in
out
in
arpl
ja
push
lods
pop
bound
lock
cmp
imulb
mov
cmc
mov
pop
adc
xchg
pop
fnsave
lcall
fidivl
and
push
adc
loop
cltd
mov
cmpsl
ret
xchg
add
fs
push
mov
adc
adc
fs
adc
adc
pop
jle
loopne
test
xchg
xchg
adc
rcrl
loopne
popf
inc
lahf
aad
clc
pop
aad
dec
cs
dec
fmull
ret
add
push
push
clc
mov
push
inc
adcb
sbb
outsl
lock
add
pop
adc
lds
pop
arpl
hlt
sub
sti
xchg
shlb
jo
int
fnsave
mov
sub
pop
sbb
test
shrl
push
fdivs
adc
mov
jmp
int
cmp
push
cld
mov
es
adc
push
and
shlb
and
fdivs
pushf
sub
pop
cmp
and
mov
sub
pop
fwait
out
cmp
int3
xlat
sub
mov
add
stc
fbstp
pusha
push
shll
add
out
popa
dec
shlb
int3
push
push
pop
pop
cmp
movsb
repz
adc
rclb
mov
gs
fwait
inc
in
fs
lods
push
and
insl
cmc
pop
inc
or
mov
mov
inc
popa
push
and
aas
xchg
pop
sub
je
lds
lods
ret
push
addr16
pop
push
xchg
push
xchg
cli
adc
les
int
test
lock
in
nop
cmp
xorb
cmpsl
mov
mull
in
and
cld
sbb
dec
xchg
pop
adc
jae
ds
faddl
jae
repz
cmc
in
outsl
sub
jne
sahf
int
push
cmp
loope
xchg
outsl
into
xor
popa
imul
mov
mov
pop
scas
fwait
jl
push
mov
adc
push
dec
jle
mov
xchg
insb
arpl
mov
cmp
mov
pop
lock
sub
cmp
in
push
outsb
hlt
mov
mov
add
inc
cmp
push
xchg
xlat
shl
les
dec
divb
popa
std
ljmp
mov
inc
test
sbb
jl
xchg
xchg
int
sbb
mov
mov
pop
inc
shll
call
sub
mov
jae
aam
lea
mov
adc
ljmp
mov
add
mov
dec
mov
rolb
mov
sar
ljmp
rorl
enter
inc
sar
push
jo
out
sub
sbb
xlat
into
test
ja
icebp
test
jp
hlt
int3
inc
pop
stc
mov
ret
mov
or
iret
xchg
push
pop
insl
mov
inc
clc
lret
and
xchg
sbbl
adc
popa
sbb
xlat
fdivrp
int3
movsb
arpl
jge
fmull
imul
int
push
adc
adc
pop
nop
mov
dec
lahf
adc
arpl
mov
inc
pusha
pop
clc
pop
cmc
cmp
or
jecxz
subl
xor
lods
in
in
jge
mov
pop
nop
idiv
and
mov
cwtl
paddq
mov
xor
mov
adc
fsts
inc
xchg
faddl
cmc
sahf
cmp
idivb
and
ret
inc
and
nop
push
sub
mov
or
les
or
pusha
sti
insb
data16
adc
xlat
fimull
fstps
push
xchg
adc
sti
mov
cmpsb
mov
xor
lds
mov
popl
dec
imul
pop
ret
movsl
sub
lret
lahf
mov
cmp
hlt
or
or
lcall
mov
lods
and
xchg
pop
pop
xor
arpl
psllw
cmp
mov
fucom
jg
imul
mov
sub
inc
out
ljmp
popa
rcrl
adc
es
cs
xorl
mov
inc
cmpsb
test
mov
pushf
imul
fdivr
dec
popf
pop
inc
in
cmp
and
in
int3
xchg
pusha
in
push
push
sbb
mov
sbb
dec
mov
enter
cmp
loop
mov
cmpsl
inc
dec
push
push
pop
subb
roll
xchg
add
sub
fidivs
iret
lret
cld
into
je
popf
dec
xchg
push
add
pop
or
fs
mov
pop
xor
arpl
or
lahf
rcr
repnz
sarl
add
or
in
or
dec
jno
fiadds
ja
faddl
pop
cmp
adc
mov
jg
inc
mov
test
sahf
hlt
cli
dec
push
push
in
sarl
in
xchg
fldcw
inc
inc
ljmp
movsl
ret
sbb
loopne
aaa
test
std
aaa
pop
xor
jns
mov
ret
or
jo
lahf
xchg
es
scas
push
in
push
fwait
scas
sarl
stos
sub
push
and
push
push
test
hlt
lret
mov
cltd
sbb
clc
push
or
int3
inc
outsl
xchg
adc
movb
sub
mov
loop
out
xchg
mov
xor
or
test
and
xor
or
cmc
cmp
cmp
test
jle
movsl
sbb
je
sub
hlt
push
rcrl
push
dec
dec
xchg
aam
lods
pop
int
dec
insl
fs
test
call
loope
fdivrs
and
lcallw
lahf
add
stos
fmuls
ljmp
add
mov
mov
sbb
es
mov
push
and
popa
push
dec
shrl
cli
mov
and
dec
mov
les
fildl
iret
jae
adc
popf
fcoml
mov
inc
xorl
pop
push
or
push
pusha
sbb
mov
sbb
mov
sub
push
xor
loop
add
mov
loope
xchg
sub
inc
mov
lea
adc
push
sub
xchg
push
xor
jmp
outsb
das
or
frstor
dec
or
mov
leave
stc
mov
fwait
or
sti
mov
inc
jns
pop
das
pop
ljmp
sub
push
lds
jo
mov
fwait
jle
inc
pop
jno
and
jl
jb
mov
lea
ljmp
pop
test
dec
mov
inc
rol
push
daa
push
dec
dec
fcompl
mov
fdivl
fwait
or
cmp
and
sbb
movsb
cld
into
call
sbbb
dec
xchg
pop
pop
shll
fs
mov
gs
jns
add
push
sbb
push
subl
xchg
or
sarl
cmp
push
inc
and
pop
lods
sbb
inc
imul
out
lods
std
out
lds
cltd
mov
pop
or
fcoml
test
mov
imul
jmp
lret
shlb
imul
push
inc
lods
movsb
lock
xor
push
adc
xchg
mov
sub
xchg
pusha
xor
xor
in
cltd
mov
lret
sbb
mov
inc
or
jl
jae
es
mov
pop
movsb
push
or
lock
xchg
add
push
dec
hlt
pop
ffreep
jns
sahf
mov
ret
pop
push
aaa
dec
push
mov
jb
stos
and
rol
mov
dec
out
in
les
daa
add
push
mov
mov
icebp
jne
push
pop
jecxz
pop
lcall
and
std
cltd
xor
cmp
jmp
stc
and
movsb
dec
or
iret
inc
mov
sti
jne
js
mov
mov
lahf
jo
cld
pushl
inc
cltd
nop
in
inc
stos
mov
ret
mov
sub
dec
xor
sbb
and
xor
loope
jl
lock
push
cs
dec
scas
pop
fiaddl
add
add
inc
cltd
ss
movsb
in
fiaddl
pop
push
or
cmpsb
pop
fnsetpm(287
mov
or
cltd
jbe
add
jle
xor
test
add
sub
pop
mov
jge
xor
or
push
shrl
popa
mov
pop
aaa
inc
sbb
jmp
cli
cltd
xor
inc
push
cmpl
bound
loop
pop
scas
push
dec
into
imul
jl
dec
ret
aad
cmp
jp
ficoml
out
mov
repz
lods
clc
or
popf
ljmp
push
addr16
xorb
pop
dec
fnstenv
or
and
pop
arpl
dec
inc
or
xchg
push
cli
shrl
inc
lcall
mov
sub
and
jo
sbbl
stos
icebp
les
jge
jle
pop
cwtl
jns
mov
sbb
xlat
ss
in
xchg
cli
cmp
ja
mov
mov
pop
inc
repz
mov
mov
or
push
inc
pushf
push
dec
das
add
xor
jge
inc
push
jb
jne
pop
jle
mov
mov
xor
outsl
mov
mov
in
xlat
data16
and
fdivl
mov
clc
jb
repz
sub
std
mov
jns
sub
test
inc
ds
lcall
dec
push
test
push
cmc
jecxz
pop
jno
adc
lret
cmp
sub
add
cmpsl
push
sbb
fistps
adc
xor
jmp
lock
addb
jecxz
movb
fdivs
xor
lods
push
fidivrs
cltd
pop
cmp
pop
push
pop
mov
inc
dec
popf
in
push
add
add
insb
pusha
nop
mov
mov
out
jmp
sbb
dec
test
inc
xchg
int3
mov
loope
and
aas
xchg
xchg
xchg
stc
outsl
data16
xchg
loope
js
fildl
jno
in
clc
aam
and
xchg
cmpsb
ja
std
std
sbb
mov
pusha
mov
xor
fs
push
adc
cltd
jnp
addr16
fdivrp
in
into
ret
clc
lcall
pop
xchg
negb
jl
imul
enter
xchg
test
notb
bound
cmp
cmpsl
bound
int
mov
or
add
cmp
dec
in
xchg
test
ss
shll
out
push
repz
sub
popa
aaa
fstl
fiadds
lods
pop
sub
cld
mov
dec
das
push
mov
cmp
into
arpl
mov
clc
push
dec
xchg
pop
js
bound
mov
mov
sub
push
or
stc
mov
ljmp
test
push
pop
sub
mov
jge
shlb
pushl
inc
xor
jne
or
loope
stc
add
dec
das
add
jle
fiaddl
mov
sub
addr16
cmpsb
mov
arpl
aas
dec
xlat
sbb
jb
xchg
push
lods
xor
ds
pop
je
movsb
rcrb
mov
pushf
cs
jecxz
inc
fadds
fildll
dec
repnz
cmp
adc
lahf
lock
push
mov
dec
jle
mov
pop
imul
sahf
or
mov
sub
stc
push
push
add
sbb
or
mov
shlb
mov
fs
sub
std
popf
xor
lods
push
xor
xchg
cmpsl
inc
lock
xor
and
sub
sub
popf
cwtl
lods
out
rclb
mov
jnp
ret
cmc
repz
dec
daa
adc
popf
pop
mov
mov
out
popa
and
ficomps
test
jge
xchg
in
les
jmp
stos
aas
movsl
push
mov
and
int
inc
adc
jns
insl
arpl
out
psubb
inc
mov
adc
aas
mov
push
out
insb
jbe
lods
out
inc
in
xlat
add
call
or
mov
add
cmp
push
leave
adc
jne
pop
ret
sbb
cld
fst
add
jne
cltd
loop
jne
jne
push
mov
jmp
stc
ret
add
lret
dec
sub
ret
mov
adc
sbb
push
movl
pushf
shll
icebp
mov
pop
jle
arpl
scas
lea
xchg
aaa
fistpll
sbbb
sbb
sub
loop
je
lret
pusha
enter
jg
pop
push
cltd
mov
dec
xchg
mov
xchg
shlb
sbb
pop
mov
cmp
push
push
pushf
out
lods
mov
cs
dec
sbb
xor
jecxz
ret
rcr
lret
les
test
or
jne
bt
add
and
stos
mov
mov
pushf
mov
testl
call
xor
cmp
push
cld
out
xchg
jmp
bound
xor
xor
add
mov
incl
iret
scas
out
mov
cli
jno
cmpsb
pop
pop
lcall
inc
mov
std
xchg
sub
out
inc
cld
in
mov
pop
xchg
lret
div
jnp
lcall
push
adc
bound
push
ss
sub
ljmp
clc
mov
adc
pop
shrl
mov
lods
in
imul
jle
call
mov
cs
lds
mov
mov
dec
fdivr
adc
mov
dec
sub
pop
fldl
icebp
adc
out
mov
mov
inc
pop
sub
sbb
push
jno
and
shl
mov
pushf
fcoms
fwait
jmp
das
ret
xor
stos
fst
fadds
dec
mov
leave
icebp
or
adc
or
dec
jae
fisubrs
cmpsl
mov
mov
pop
or
clc
movsb
ds
into
pushf
inc
xchg
in
lcall
mov
lds
push
mov
sbb
and
fcmovne
xchg
mov
mov
push
cmpsl
leave
inc
mov
xor
jecxz
test
inc
sub
jle
cmp
mov
pop
add
imull
clc
test
roll
ret
or
mov
in
mov
cmp
dec
and
or
hlt
adc
stos
adc
cmp
sbb
jno
add
pop
sbb
cmp
in
inc
jmpw
je
push
sub
push
fbstp
or
xchg
decl
int3
mov
rclb
cmpsl
mov
jl
std
jle
pop
jbe
mov
insl
nop
lret
inc
fidivrl
std
sub
jb
mov
mov
cmp
sti
sarb
stos
add
pop
popa
in
or
inc
sti
fcom
xchg
add
sbb
xchg
dec
rolb
test
sbb
add
mov
xchg
mov
cs
push
aam
fsubrl
xor
sbb
jb
lret
insb
jmp
pop
add
sub
aas
push
aam
xchg
and
mov
dec
scas
loope
xor
mov
dec
cmp
repnz
push
pop
xchg
std
iret
leave
cmp
scas
cmp
in
fisttpll
push
clc
insb
insb
and
in
cmpl
and
int
je
scas
push
comiss
out
ja
das
dec
test
cmp
push
push
je
cmp
jl
xchg
adc
in
lock
ds
xor
andl
cmp
mov
mov
xor
mov
aam
dec
sbb
jge
push
lret
cmp
push
fcom
push
pop
repz
aad
pop
jge
dec
or
cmp
mov
mov
sub
fnstcw
xor
xor
iret
decl
outsb
or
mov
mov
mov
lds
mov
out
fwait
xchg
mov
js
arpl
jne
sbb
nop
out
inc
push
adc
and
push
add
stos
mov
push
int3
dec
stos
mov
mov
outsl
jmp
fcomps
iret
das
sub
cmpsb
repz
adc
inc
je
hlt
dec
outsb
and
loopne
dec
dec
inc
aad
mov
sub
mov
test
outsl
mov
fisubrl
sub
fdivs
lcall
lock
ljmp
jbe
cli
jbe
nop
cmp
inc
cwtl
mov
xchg
xchg
push
cmp
lret
xchg
fwait
int
mov
daa
mov
xchg
out
and
ja
out
cli
test
rcr
dec
sub
test
jbe
rcpps
popa
mov
scas
sbb
pop
lcall
aaa
call
int
lock
lock
add
cld
fisttpl
stc
cld
xlat
adcl
push
fwait
ret
push
cmc
pop
jnp
iret
push
or
rclb
dec
and
xor
test
push
jecxz
push
push
stos
adc
mov
sti
inc
jb
mov
add
sti
pop
out
xchg
lods
ficompl
push
mov
fistl
test
out
outsl
jp
xchg
xchg
add
xor
int3
fcmovu
sub
jl
stos
in
testl
sub
xchg
jge
pop
push
push
or
in
or
sbb
scas
int3
xchg
je
loopne
popf
inc
xchg
adc
scas
fbld
mov
inc
and
cmp
xor
ljmp
ss
clc
sbb
mov
cmp
jmp
mov
hlt
shrl
push
cltd
mov
out
das
stc
and
jg
xchg
adcl
xchg
xchg
popf
jae
jecxz
in
jo
pop
imul
ja
insb
lds
jle
xor
lret
pushf
xlat
jb
mov
iret
jg
cld
mov
rolb
call
add
std
adc
jno
lahf
push
stc
dec
pop
jbe
mov
dec
aad
std
scas
pop
adcb
push
pop
pop
dec
or
pop
mov
in
add
adc
push
icebp
fimuls
mov
xchg
xchg
sub
mov
jecxz
sbb
jmp
cmp
jp
jp
jge
sti
fcomip
ret
mov
pop
adc
lods
imul
in
imul
push
repnz
repnz
outsl
add
or
sar
push
roll
jnp
stos
push
mov
scas
andl
xor
jmp
cld
data16
push
call
sub
inc
repnz
adc
out
add
jecxz
xor
pusha
cld
movsb
dec
pop
cmpsb
mov
scas
pop
add
xor
sub
in
inc
ret
jns
jg
mov
jae
popf
mov
lret
shll
data16
sbb
inc
lret
sbb
xchg
xor
cld
push
mov
inc
cli
aam
sbb
js
cltd
xor
push
popa
cmp
dec
mov
xchg
or
rcrb
sub
push
lea
lea
cmp
mov
xor
jne
aam
inc
mov
mov
enter
adc
leave
jge
jmp
and
mov
jg
loope
sbb
test
sbb
fcmovb
iret
jne
icebp
push
cwtl
sub
xor
fdivs
mov
cmp
cltd
cmp
jnp
out
fdivl
fidivrs
inc
inc
sbb
add
fdivrl
jmp
call
repnz
filds
xchg
adc
xchg
xchg
inc
mov
cmpsl
xchg
es
sub
stos
adc
dec
call
mov
push
and
xchg
jns
push
cs
jbe
loopne
data16
lds
push
pop
hlt
push
sbb
jb
mov
mov
and
mov
xor
movsb
in
fxch
mov
pop
or
jae
lds
movsb
sbb
or
push
in
cmp
adc
clc
or
mov
lods
adc
inc
repnz
add
inc
jg
loopne
cmp
test
mov
pusha
aam
loopne
addr16
fs
push
fadd
lea
jb
repnz
push
adc
cmpsb
cmp
jne
mov
fbstp
cmp
add
loope
push
sbb
imul
sub
sbb
leave
mulb
sbb
adc
in
pop
pop
mov
test
adc
mov
scas
mov
jne
xchg
jbe
rolb
add
cmp
dec
ss
nop
xor
mov
lock
cmp
sbb
inc
pop
adc
push
xchg
jnp
pop
test
test
popf
or
test
sbb
jbe
xlat
xchg
dec
ja
mov
insb
pop
xchg
fdivs
inc
cmpl
adc
pushw
lahf
pop
enter
pop
out
cmpsb
push
stc
jbe
mov
and
cwtl
mov
dec
pop
cmp
stc
aaa
jae
jl
rorb
and
or
xchg
jno
faddl
adc
gs
jb
sub
mov
mov
adc
xchg
pop
pop
jae
push
int3
mov
jp
testl
sub
adc
adc
adc
cld
rcl
xchg
adc
mov
add
sbb
inc
xor
loope
pop
scas
adc
dec
aad
jnp
mov
xlat
xor
sbbl
int
repnz
das
adc
adc
push
add
fisttps
and
adc
dec
inc
aaa
leave
iret
xor
jns
test
pop
lret
push
shll
loop
mov
push
mov
dec
mov
es
xlat
xchg
dec
sbb
xchg
out
push
sbb
mull
xchg
ffreep
push
rcll
adc
lods
or
cld
sbb
dec
mov
dec
clc
add
test
lods
jge,pn
int
sbb
mov
filds
lds
popf
ror
push
cmc
or
sbb
and
push
xchg
sbb
dec
nop
push
scas
jg
mov
or
jb
rcrb
notl
sbb
into
ljmp
std
ljmp
mov
ljmp
mul
lcall
or
cmpsb
std
mov
aas
jmp
lock
in
jg
pushf
dec
rcrl
pop
std
and
adc
sub
push
aad
loop
push
in
cmpl
imul
dec
mov
data16
adc
loop
int
pop
outsb
loope
scas
or
dec
ret
and
dec
jae
xor
push
ljmp
rorl
or
daa
jge
rcrb
int
adcb
out
jno
aam
xlat
in
xchg
sub
pop
in
and
movsb
adc
jmp
imul
fscale
lret
cmp
mov
xchg
dec
int
pop
sub
popf
xchg
into
shl
push
fwait
xchg
add
cmp
mov
mov
mov
inc
xor
push
sub
mov
es
or
sbb
jmp
dec
inc
cmc
movsb
mov
mov
rolb
adc
bound
cmp
fists
out
xchg
mov
pop
in
dec
pop
bound
ret
pop
rcrb
int3
fistps
dec
inc
inc
push
into
or
cmp
jle
mov
out
insb
sbb
in
push
fadd
es
cld
stc
into
jb
test
jge
cmpsl
lret
insl
or
iret
mov
add
mov
ficoml
cmp
or
cmp
dec
mov
sub
test
adc
sbb
insb
je
push
lods
cwtl
xchg
sbb
or
dec
jmp
cmp
ja
jnp
mov
or
fldl
loope
mov
movsb
loopne
xor
mov
cmp
sbb
mov
push
stos
xor
mov
cmc
repnz
dec
in
int
outsl
ja
and
mov
push
jnp
pop
mov
dec
adc
mov
xchg
and
ds
repz
rcl
sub
imul
cmc
fdiv
hlt
je
and
dec
and
fwait
sbb
add
add
roll
cmp
mov
inc
subb
hlt
call
adc
inc
daa
cmc
int
xor
push
sahf
dec
mov
mov
mov
lret
mov
adc
cmpb
std
insl
and
xchg
push
push
mov
frstor
inc
imul
std
int3
push
mov
aas
daa
jecxz
adc
iret
lods
mov
push
imul
pop
mov
sbb
lods
push
aas
dec
repz
pop
bound
repnz
cmp
inc
out
or
sbb
in
clc
jmp
into
xor
stos
jle
pop
and
scas
adc
ljmp
ja
mov
xor
cwtl
stos
xchg
pop
jnp
arpl
jb
aad
fdivrl
add
xchg
insb
test
lods
test
inc
jge
mov
and
lahf
adc
int3
push
or
jns
lods
sti
lea
push
test
in
adc
add
dec
stos
aad
loopne
stos
adc
out
xchg
dec
xor
lods
xchg
call
icebp
jno
sahf
int
xorl
lods
push
pop
push
push
loope
xchg
test
jne
xor
pop
jb
mov
pop
out
inc
add
jne
insl
or
out
scas
aas
sub
shl
daa
or
adcl
and
decb
repnz
and
cmpsb
mov
outsl
jle
clc
jmp
test
ret
in
out
jns
bswap
test
cmp
mov
cwtl
out
mov
add
inc
xchg
and
add
push
jb
lahf
fs
stc
mov
mov
xchg
rolb
loope
outsb
sti
mov
mov
mov
push
xor
cmp
adc
sub
jl
cmovp
or
out
test
fsubrl
pop
xor
push
pusha
jl
ljmp
mov
cmpsb
jno
nopl
mov
jl
data16
shlb
and
pop
shl
jns
sbb
cmpsl
xlat
ds
icebp
mov
mov
mov
lods
test
xlat
xor
push
or
shlb
xor
or
movsb
popa
mov
cmpsb
fildl
inc
or
jnp
ss
adc
mov
test
jmp
ficoms
mov
loopne
push
mov
and
ret
sbb
repz
mov
loop
jmp
daa
mov
filds
mov
xchg
lods
pop
rorb
and
xor
xchg
and
jge
xor
adc
mov
js
jg
sbb
and
mov
lret
dec
adc
or
mov
jno
dec
sbb
js
push
mov
arpl
cmp
popf
rcrl
ret
scas
insb
mov
das
scas
je
hlt
push
xchg
int
mov
xchg
call
out
pushf
lea
push
pop
es
adc
adc
sbb
cmp
pop
inc
or
lods
push
sub
rcll
fsubrl
sbb
sbb
mov
mov
icebp
adc
mov
arpl
jo
out
ss
dec
or
in
lcall
not
xchg
gs
loop,pt
rol
fwait
sbb
pop
inc
scas
aaa
xor
xchg
shlb
mov
pop
js
sub
cld
mov
xor
or
add
inc
pushf
flds
pop
js
xor
sub
pop
scas
aaa
cmp
xchg
cli
mov
aam
push
outsb
data16
push
inc
rolb
or
adc
cmp
push
jg
sub
icebp
push
std
sbb
mov
icebp
lahf
mov
dec
outsb
xchg
jmp
les
fnstsw
out
jmp
push
cmp
lods
pop
bound
mov
in
dec
or
pop
ret
ds
mov
into
mov
jnp
jnp
dec
inc
cmp
mov
in
test
ret
jne
test
out
int3
inc
fldcw
shrl
mov
inc
jno
inc
dec
push
aas
or
andb
lods
sbb
dec
cmp
add
out
clc
enter
or
outsb
xchg
add
xor
ud2
cmp
sbb
in
divl
nopl
stos
mov
jne
sub
pop
cmpsb
adc
shlb
imul
gs
mov
pop
je
repz
add
push
jmp
dec
aaa
std
sti
cmp
add
int
cld
and
cmp
adc
imul
adc
xor
or
sub
sub
psubsw
sub
push
aaa
mov
int3
mov
pop
icebp
sbb
mov
xlat
callw
test
dec
cltd
xor
int
lea
xchg
cld
negb
xchg
lods
sbb
jb
out
cli
jne
bound
bound
daa
or
pop
jae
and
mov
mov
nop
icebp
dec
sub
push
fimull
sbb
mov
add
insb
stc
add
xchg
mov
stos
pop
out
ret
ds
in
pushf
into
push
lods
push
negb
fwait
mov
jne
cmc
call
popf
insb
xrelease
pop
fsubrs
das
dec
push
inc
les
lods
mov
mov
fwait
dec
dec
adc
mov
mull
pop
and
lea
mov
adc
rcll
cltd
add
xchg
push
mov
mov
jge
je
or
xchg
push
pusha
ret
fidivs
popa
cmp
mov
int3
lods
pop
pop
lods
movsb
negl
stos
fistpl
mov
lret
xchg
cmp
shl
lret
mov
jno
and
mov
fucomp
lods
movsl
jp
adc
pop
stos
call
jne
adc
dec
mov
xor
in
mov
jns
jmp
je
imul
push
push
mov
jmp
xor
bound
push
jnp
out
xchg
xchg
jmp
clc
stos
and
pop
adc
addr16
push
pop
repz
movsb
stos
mov
gs
pop
add
scas
adc
fnsave
les
clc
sbb
jp
or
xchg
xchg
xlat
dec
or
push
aas
in
data16
fnstcw
sar
xor
and
adc
cmpsb
cmpsl
rorl
arpl
cmp
test
or
pop
mov
popa
and
or
jmp
ret
arpl
cmpsb
loop
into
jae
mov
xlat
in
bound
push
stos
addl
ss
cltd
inc
xor
subl
sub
push
mov
pop
pop
dec
mov
dec
inc
movsb
cmp
decl
sbb
sbb
bound
mov
lods
lahf
jae
aaa
mov
pop
loope
out
cmp
xchg
dec
and
hlt
lods
imul
int3
mov
jo
je
add
and
aam
jo
cltd
out
mov
mov
push
rol
jne
clc
call
iretw
andb
ljmp
in
mov
out
std
mov
push
std
cmp
das
add
outsb
pop
mov
cmp
sar
xchg
and
adc
lock
lcall
outsb
pop
mov
mov
jnp
xor
add
push
push
sbbb
mov
clc
popa
and
mov
jbe
or
jb
pop
sbb
std
pop
sti
mov
les
add
lock
cld
fstl
ljmp
ss
ret
decl
imul
hlt
pop
pop
dec
pop
add
ljmp
inc
imul
jb
test
and
ficomps
sti
cmpsb
mov
or
rolb
lea
add
push
call
cli
jne
rclb
push
arpl
dec
enter
sub
leave
push
sbb
mov
adc
aam
scas
mov
inc
std
cmp
fisubrs
inc
ret
inc
jecxz
test
jp
std
sub
adc
imul
ds
push
outsb
xchg
inc
add
mov
imul
mov
jmp
cmc
jmp
xor
adc
stos
shl
pusha
inc
xor
inc
rcll
data16
add
std
sbb
nop
jl
mov
inc
sbb
sti
jl
push
push
pop
loopne
push
xchg
adc
add
or
ja
lods
shl
outsb
rcrl
pop
sbb
cmp
jmp
icebp
test
cltd
sub
cld
mov
aas
mov
mov
and
xchg
xor
pop
in
movsl
lods
or
xchg
lcall
daa
arpl
add
rol
clc
mov
roll
out
or
popa
into
data16
arpl
xor
arpl
add
mov
cmpsl
out
sbb
movsl
xchg
and
lock
pop
outsl
or
cmp
xorl
xchg
cld
out
test
pop
cmp
js
jg
arpl
das
repz
jge
and
ror
jmp
sar
in
fs
out
clc
int3
push
or
popf
xor
and
xor
inc
arpl
mov
in
mov
xchg
daa
jecxz
xor
fadds
push
sub
sbb
cmp
loopne
xchg
xor
in
jp
fistpll
fdivrl
cmp
xor
leave
jge
push
cli
loop
inc
std
inc
rcll
je
push
je
push
sahf
arpl
lret
inc
pop
sbb
cmp
ljmp
xor
push
dec
cmp
sarb
add
lahf
std
js
push
dec
clc
shl
sahf
scas
cmpsl
sub
xchg
imul
sub
adc
lock
cs
in
rolb
mov
xchg
jnp
xchg
adcb
xor
sahf
lds
fdiv
js
push
pop
test
out
sub
fsubrp
dec
fisttpl
mov
add
scas
push
loope
mov
movzwl
insb
push
jge
loope
cld
or
ret
sub
in
addr16
inc
sub
insb
sbb
bound
sbb
sub
mov
cmpsb
and
rcl
add
pop
icebp
cmp
in
xor
movsb
jo
add
adc
pop
subb
cltd
daa
mov
push
into
lods
imul
or
mov
pushf
lcall
cmp
xchg
mov
jg
outsb
hlt
sbb
mov
add
inc
xchg
call
fst
inc
mov
cmc
shll
push
leave
movsb
pop
aas
push
mov
lock
pusha
negb
xor
ficompl
mov
pop
or
mov
mov
mov
fs
pop
cld
cmp
xor
and
jge
push
pop
pusha
lea
pop
cld
xchg
in
xor
mov
jle
mov
mul
movsb
sub
inc
inc
sarl
xchg
jne
or
or
repz
push
fldenv
mov
popa
lods
push
bound
mov
push
pop
adc
pop
jne
es
mov
jo
loop
test
xor
mov
mov
cmp
pop
jae
mov
cli
les
test
movsb
mull
lcall
into
cs
enter
mov
rcrl
stos
mov
adc
repnz
movsb
lock
mov
push
adc
xchg
mov
cmc
jg
in
jo
out
adc
adc
ja
sub
pusha
ds
pop
roll
cmp
ficoml
and
xchg
cltd
mov
shll
out
outsb
inc
xchg
add
inc
mov
loope
dec
cmc
push
mov
lret
cmpsb
pop
lret
idiv
outsl
pop
lahf
mov
mov
jecxz
vmovmskps
jl
ds
xchg
pushf
repz
test
leave
aas
sbb
ss
pop
scas
xchg
movl
jle
sti
jmp
movsb
por
mov
jns
es
push
and
int3
pop
lods
mov
xchg
add
gs
add
xchg
cmp
ret
ds
popf
dec
xchg
pop
les
imull
sbbl
jmp
les
out
mov
cmp
arpl
sub
and
xor
xchg
cmpsl
loope
daa
sub
xor
scas
inc
cmp
adc
xchg
out
mov
outsl
inc
inc
pop
adc
sbb
outsb
or
xor
js
push
rcl
push
imul
push
sbb
jge
shr
cmpl
popf
pop
adc
pop
jne
push
xchg
sbb
cmp
frstor
jb
push
repnz
rolb
icebp
inc
in
and
pusha
and
mov
in
push
popf
out
inc
dec
dec
dec
hlt
pop
xor
int3
aad
pop
cmpsb
and
out
pop
filds
roll
sahf
mov
frstor
jp
popf
idivb
inc
xlat
int3
jmp
fsubl
or
dec
xor
cmpb
ds
or
xchg
push
add
outsb
fwait
sub
pop
jnp
push
outsb
mov
std
xor
int3
loop
insb
sbb
xchg
xlat
mov
lds
jg
jb
cmpsb
add
xor
rolb
scas
jmp
ljmp
or
es
enter
inc
add
jge
adc
mov
mov
lods
dec
imull
movsl
push
push
xchg
data16
push
ret
fldcw
in
scas
dec
psraw
clc
nop
push
pop
sub
mov
mov
or
xor
or
outsl
cmpsb
adc
stos
xorl
in
add
and
xor
in
and
sbb
in
loopne
xor
pop
pusha
push
push
loop
pop
fdivl
fwait
addl
sub
jne
mov
pusha
idivb
mov
sub
mov
mov
sbb
lods
sarb
rcll
mov
pop
and
add
rcrb
mov
insl
mov
cmp
inc
cmp
mov
adc
mov
and
enter
outsl
lods
or
add
xor
and
loopne
cmpsl
sbb
jo
mov
mov
cmpsb
inc
xor
sbb
mov
lods
rcll
xchg
clc
sbb
hlt
pop
add
stc
ss
mov
icebp
ljmp
clc
push
add
in
xchg
mov
scas
test
stos
dec
addb
jno
jbe
mov
inc
lahf
jge
fildl
test
aas
jg
pushw
aaa
faddp
or
mov
adc
out
test
jle
outsl
and
xchg
rcrb
hlt
xchg
repnz
push
loope
or
fisubl
inc
pop
enter
adc
jno
and
mov
ret
in
push
fsubs
aam
dec
and
sub
pop
aam
cmpb
mov
xchg
cli
cmp
push
mov
and
pusha
cmpsb
inc
dec
cwtl
inc
jne
mov
or
cld
stos
out
scas
je
pop
and
loop
repz
mov
pop
mov
sub
add
cmc
test
fwait
cmpsl
les
inc
add
mov
in
xlat
sbb
orb
test
dec
mov
jmp
xor
cmp
addr16
testl
mov
xor
mov
scas
jno
sbb
jno
pop
pop
icebp
stc
rorl
sbb
out
inc
push
mov
inc
mov
push
jb
dec
or
dec
sub
out
arpl
sub
mov
jge
jnp
mov
sahf
aas
xchg
fstl
movsb
or
and
xchg
in
repnz
call
xor
fs
popa
movsl
cmp
scas
aaa
sbb
lret
and
add
lret
dec
add
les
fildll
push
mov
ficoml
xor
pop
inc
pop
mov
inc
and
and
xor
cwtl
adc
aam
rclb
ret
loop
cmpsl
add
aaa
bndstx
adc
pop
arpl
insl
and
fwait
xor
mov
mov
fstps
daa
dec
xchg
xchg
xor
dec
std
nop
push
pop
ret
jl
add
scas
or
sbb
bound
sub
pop
lret
icebp
xchg
dec
pop
sbb
outsb
lcall
sub
sbb
test
and
aas
mov
and
sbb
stos
jnp
push
fnstenv
sub
mov
jo
ss
addb
jmp
mov
jge
cmp
inc
sub
loopne
daa
add
rorl
cmp
mov
inc
pop
pop
xlat
mov
das
lret
adc
mov
jo
popf
ror
adc
cmpsl
rclb
mov
dec
scas
roll
js
clc
push
fcmovbe
inc
xor
mov
jbe
aad
fs
clc
andb
push
cmp
adc
mov
imul
push
xor
insl
rcll
aam
mov
lock
push
ret
fsubrs
push
lret
fistpl
rol
sub
adcb
loop
xchg
jg
imul
pinsrw
test
push
adc
hlt
jecxz
sbb
xchg
testl
jge
jg
test
xchg
or
data16
scas
enter
in
pop
jecxz
jmp
loop
pop
ret
dec
or
xchg
adc
inc
mov
daa
dec
lea
dec
cmp
test
ljmp
pop
sti
fldl
stc
sahf
adc
enter
mov
fistl
int3
scas
out
insb
loop
inc
das
push
dec
sbb
adc
out
push
fstpl
shrb
int3
push
imul
scas
sarb
push
in
test
sbb
push
sub
test
mov
cmp
ljmp
ja
add
mov
dec
and
pop
popf
aad
mov
and
mov
ss
cmp
sub
scas
xor
cmp
dec
sbb
aaa
in
ror
sbb
sub
jne
bound
jb
inc
mov
jmp
jnp
xor
lock
xchg
icebp
clc
push
and
je
dec
rorl
lret
cli
cltd
pop
imul
mov
je
mov
je
and
xlat
push
orl
or
sahf
sbb
dec
movsb
sti
test
lods
pop
leave
pop
xchg
pop
sbb
loop
ds
cmpl
mov
mov
push
es
in
or
repz
test
and
push
insb
mov
je
and
les
std
or
jo
push
xchg
mov
into
movsl
out
scas
push
pop
pop
mov
xor
cmpsb
mov
stc
ret
xchg
aam
jae
cld
mov
cli
sbb
aaa
mov
pop
mov
xchg
les
adc
mov
and
int
std
mov
add
cmp
jg
addl
mov
insl
outsb
pushf
shlb
and
sub
nop
cmp
popa
pop
push
vsqrtss
incb
aaa
outsb
outsl
sub
pop
push
das
bound
pusha
mov
mov
test
pop
inc
arpl
testl
mov
test
or
mov
xchg
dec
sahf
ret
mov
stc
sub
mov
icebp
or
sub
xlat
fisubs
das
nop
loopne
roll
rcrb
data16
mov
push
mov
inc
dec
or
int3
rolb
rcll
pop
outsb
pop
mov
xor
ljmp
jecxz
rcll
cmp
mov
xor
and
test
shr
lret
or
aas
ljmp
aam
sub
pop
cltd
andl
inc
push
or
outsl
repz
push
sub
xor
es
loop
enter
imul
xor
adc
and
loop
push
insl
ljmp
ret
jg
sbb
xchg
mov
jnp
stc
pop
cmp
add
mov
cmpsl
sbb
xor
adc
mov
or
inc
in
cmp
mov
jo
push
movsb
xchg
pusha
pop
cmpsl
in
cmpl
xor
push
pop
jg
mov
insl
push
in
sbb
imul
inc
fists
adc
mov
jb
pop
int
cmc
and
rcrb
mov
pop
or
fisttps
add
cwtl
lcall
mov
enter
add
cmp
jns
insb
xchg
jbe
jp
cli
notl
decb
out
ja
icebp
imul
int
aaa
flds
inc
mov
mov
or
call
sbb
in
loope
mov
xchg
movsl
loopne
jge
clc
cmc
aaa
pop
sarl
out
lods
xchg
push
fcmovnu
mov
stc
mov
imull
dec
lahf
int
mov
sbb
cmpsb
push
cs
rclb
inc
out
xchg
push
push
int
lahf
xor
xlat
mov
test
shrl
rcll
mov
cltd
fucomi
or
mov
pop
insl
xchg
xchg
outsl
xchg
inc
jbe
mov
lea
and
in
test
mov
mov
dec
mov
cmpsl
call
sbb
and
pop
aaa
fcoml
test
add
lahf
cwtl
mov
xor
lret
fmul
mov
pop
in
rorb
mov
xchg
pop
add
fwait
jbe
imul
ret
cli
add
pushf
sub
iret
mov
sub
jno
ss
hlt
xor
mov
xchg
into
out
imul
insb
gs
jg
or
or
xchg
mov
pop
repnz
pushf
pop
insb
out
mov
popa
xchg
jne
dec
jmp
sub
sarb
inc
ffreep
mov
inc
insb
jl
ret
sbb
mov
lret
xor
mov
pop
repz
cld
pop
aad
xlat
and
fmull
sahf
ds
add
mov
mov
jle
xor
mov
jle
pusha
cs
ljmp
sbb
mov
clc
mov
movsl
out
lret
pop
rolb
add
jl
sahf
scas
inc
outsb
xor
inc
or
and
or
cmpsl
fsub
pushf
xlat
xlat
ror
dec
inc
pop
mov
pusha
pushf
lret
jne
cmpsl
xchg
stos
inc
cmpsb
jbe
int3
push
pop
notb
push
decl
xor
movsb
inc
xchg
mov
pop
data16
inc
mov
dec
aam
adc
or
sbb
and
shll
and
and
xor
daa
out
xor
aas
xchg
daa
ja
mov
in
xchg
xchg
mov
inc
push
insl
out
jge
cwtl
adc
or
outsl
and
sbb
pusha
xor
dec
xor
hlt
jns
mov
in
scas
lods
mov
out
out
std
js
insb
dec
repz
mov
test
in
xchg
pop
cmp
test
mov
shll
stc
xor
popl
gs
nop
mov
push
pop
jns
or
add
sbb
imul
das
sbb
andl
movzbl
movsl
adc
and
arpl
inc
push
aas
add
sub
cmpsl
mov
test
jge
inc
dec
or
push
jns
test
sti
push
jo
push
scas
pop
leave
add
pop
sbb
fcmovnbe
mov
jg
daa
pop
js
mov
or
int3
insb
cmc
ljmp
cmp
int3
cmc
mov
mov
dec
sub
inc
pop
jmp
dec
xchg
rorb
dec
xchg
pop
sub
lock
cmp
and
sub
fnop
dec
ja
jbe
and
push
out
jge
mov
cmp
mov
mov
test
cmp
sbb
mov
pop
cwtl
xchg
mov
lret
popa
adc
in
imul
mov
pop
popa
adc
bound
and
sbb
cmpb
pop
push
sub
insb
xchg
leave
push
xor
adc
pop
jl
scas
push
mov
inc
jae
adc
xchg
lret
jb
or
cmc
imul
outsb
cld
inc
int
sub
iret
or
cmc
jo
enter
daa
icebp
inc
or
popa
dec
pop
pop
lcall
ficompl
adc
xor
jl,pt
mov
in
pusha
inc
aaa
pushf
push
dec
rol
ret
ret
cmp
ljmp
push
pop
fsubrl
add
shr
je
or
xor
cmp
iret
xor
xorl
push
push
lods
inc
xlat
and
or
sub
nop
icebp
out
dec
bound
mov
shl
sub
push
ficompl
shll
sti
and
lea
cmp
sbb
fmulp
add
mov
lds
ret
xchg
xchg
fmuls
adc
xor
adc
push
xchg
ss
int
test
jecxz
lds
in
or
je
push
rcll
mov
jns
jno
add
inc
cmpsl
sub
loopne
shl
sbb
jns
rolb
mov
mov
outsl
stos
stos
jecxz
in
or
and
sbb
pop
adc
or
stos
pop
scas
in
repz
mov
mov
push
and
adc
cs
push
dec
cmc
sbb
lahf
xchg
add
xchg
outsb
enter
loope
inc
push
xchg
cmp
push
in
mov
out
fadd
xchg
sub
push
add
jge
adc
sub
xlat
cmc
outsb
popf
arpl
jmp
adc
and
dec
cs
and
mov
cmp
pop
iret
mov
mov
mov
clc
xchg
int
adc
cwtl
int3
add
lret
rcr
pop
mov
dec
sub
and
daa
or
jl
adc
inc
jne
or
fsubrl
bound
mov
repz
cmp
jnp
dec
cmp
sbb
mov
lret
mov
push
jl
sbb
add
arpl
enter
and
add
fcompl
push
int3
stos
in
cmp
pop
push
in
outsb
cld
mov
lock
or
bound
push
sbb
jecxz
jge
push
and
inc
cmp
jb
dec
jle
or
lret
call
and
dec
cmp
pop
mov
or
fstl
xlat
cmpsl
mov
movsb
nopl
imul
imul
aam
inc
sub
in
das
sbb
mov
popf
sbb
cs
testb
sub
pop
or
xor
push
nop
xor
fld
and
dec
loopne
sub
ret
lcall
fs
pop
jge
adc
jl
sub
pop
cmp
fisttpll
test
lret
sbb
and
inc
or
clc
push
iret
jecxz
aad
mov
ds
pop
mov
jbe
roll
test
pop
popf
or
test
lds
test
xor
sahf
xchg
pushl
cld
fnsave
adc
mov
cltd
mov
in
clc
les
push
ret
sub
in
sbb
mov
add
lea
or
loope
jae
add
jb
dec
stos
lret
xor
xor
mov
pop
cli
mov
stos
in
and
ja
inc
cmp
push
cmp
pop
adc
popf
mov
dec
jge
xor
fldl
call
sub
jb
xor
dec
dec
mov
push
arpl
xor
sbb
out
inc
call
jo
mov
movsb
xchg
sbb
ja
push
aas
shrl
jns
int
bound
dec
lcall
xor
add
add
mov
xchg
in
and
mov
jo
adc
scas
fs
movsb
push
mov
push
in
iret
or
sub
sbb
mov
jle
fstps
and
call
cmpl
outsb
es
fdivrp
nop
gs
pushf
mov
jbe
inc
pop
dec
dec
jne
andl
cmp
push
frstor
add
xchg
jmp
pop
mov
iret
sbb
mov
xor
into
xor
adc
pop
stos
jb
repnz
nop
or
call
int
jl
call
inc
dec
bound
mov
pop
mov
movlhps
dec
lcall
xor
adc
pop
jnp
mov
pusha
or
jmp
sub
inc
repz
popa
or
sub
repz
add
setge
mov
pop
cmp
mov
adc
fdivl
push
push
cltd
jne
lds
inc
je
loopne
gs
mov
ficompl
dec
cmc
outsl
jge
loope
loope
pop
jmp
pop
pop
mov
cs
leave
enter
cmpsb
sub
daa
xchg
pop
repz
jecxz
pusha
mov
mov
leave
cmpsl
bound
setl
das
arpl
push
inc
sbb
in
lret
out
sahf
repz
inc
cltd
xor
ja,pn
push
jl
loopne
xchg
das
insl
jecxz
pop
xchg
sbb
aad
lods
xchg
xor
cmc
insb
int3
add
inc
cmp
mov
sbb
and
lods
pcmpgtb
icebp
sbb
pop
movsl
add
fidivs
xchg
scas
pop
pop
imul
jno
bound
sbb
inc
mov
insl
enter
or
mov
lods
mov
push
movsb
call
or
imul
sbb
in
gs
inc
es
or
scas
adc
dec
cwtl
and
sbb
jns
xchg
jmp
jge
sti
mov
cmp
pop
insb
xor
pop
or
push
test
int
aam
sbb
jg
outsb
adc
dec
xor
insl
adc
daa
and
and
pop
mov
lret
ss
or
in
mov
jnp
xlat
inc
popa
int3
push
jecxz
xor
and
xor
fs
out
xchg
mov
jb
ja
test
inc
xchg
mulb
and
ds
jp
mov
xor
push
push
enter
xor
jge
dec
pop
clc
inc
push
lcall
pushf
ds
bound
ret
jns
stc
dec
fbld
xlat
iret
cld
test
das
roll
jecxz
movsl
mov
mov
xor
cltd
sbb
push
sti
lds
and
mov
lock
lock
sarb
je
clc
add
shll
leave
sbb
jle
das
sbb
sbb
xchg
adc
clc
loopne
nop
inc
mov
and
xlat
cmp
out
movsl
imul
xchg
aas
lock
or
push
xchg
dec
dec
inc
lock
push
repz
int3
scas
add
add
pop
jns
and
jp
push
fisubrl
call
popf
dec
pop
mov
jl
addr16
dec
aam
dec
gs
stos
xor
mov
loop
fadd
popf
mov
dec
into
loopne
add
or
cmp
mov
ja
mov
sarb
xor
out
xor
or
les
scas
fimull
xchg
sbb
clc
repz
xchg
sbb
shll
out
dec
subl
xor
int
adc
xor
mov
cmpsl
or
sub
push
adc
mov
adc
arpl
mov
pop
sbb
mov
add
ds
mov
mov
fcmovbe
sbb
pusha
pusha
push
movl
pop
mov
shll
inc
lock
lcall
xlat
and
dec
xor
mov
fdivl
popa
mov
shll
in
push
stos
pop
lahf
cmp
repz
cmp
push
cmpsb
inc
popa
stos
fcmovu
out
or
jg
lods
aam
jae
or
jae
add
mov
inc
dec
pop
lea
sub
icebp
cld
popf
stos
out
aas
js
and
xor
fucomi
stos
fnstcw
pop
cmc
push
push
cwtl
lods
fwait
cmp
cwtl
adc
push
test
sbb
push
dec
es
sti
fcoms
jmp
popa
sbb
jns
pop
jne
or
inc
test
jmp
add
and
cli
repnz
inc
test
or
push
jo
adc
sub
mov
aad
leave
lods
pop
mov
cmp
pop
lcall
xor
push
dec
imul
jb
loope
sub
fld
out
mov
and
sahf
lods
pop
xchg
pop
cld
insl
inc
movsb
xchg
bound
adcb
and
adc
inc
push
cmp
aas
add
push
ficoml
and
bound
outsl
sbb
push
ror
aad
es
pusha
cmpb
mov
lret
dec
cwtl
add
cmp
mov
xor
jmp
stos
mov
out
mov
push
pop
aam
sbb
xor
in
jno
xchg
inc
sahf
mov
mov
out
push
test
jp
fstl
xchg
aam
lahf
sahf
iret
es
stos
jns
and
ds
aas
adc
popa
daa
cld
sub
jmp
sbb
xor
add
call
inc
mov
and
pop
in
xchg
mov
dec
dec
cwtl
shlb
insb
lock
cs
push
or
xor
lret
pushf
ljmp
aam
test
insl
in
cmp
cmp
mov
loopne
inc
fdivl
push
repnz
xchg
add
push
sbb
or
mov
stos
xor
in
testb
fisubrl
out
pusha
je
in
sub
aad
push
in
cmp
inc
dec
dec
fisttpll
inc
scas
fcoml
jns
sbb
test
mov
pop
pop
std
pop
pop
dec
enter
out
jns
call
dec
inc
pop
data16
mov
int3
cld
pop
inc
add
fldenv
lahf
adc
rcrl
xor
outsl
fidivrs
loopne
mov
jo
stos
jnp
add
out
mov
jnp
dec
insb
add
push
or
cmp
pop
loope
insb
inc
push
xor
xor
pop
fisubrl
jmp
xor
cld
imul
outsl
sub
aas
idivb
aas
add
and
sub
ljmp
cmp
xchg
add
roll
push
add
mov
loopne
push
test
js
arpl
sysret
scas
sbb
xor
xchg
jl
ret
iret
xchg
out
push
enter
mov
mov
xchg
xor
pop
adc
movsb
fs
popf
iret
mov
lret
push
in
and
cmpsl
or
xchg
xchg
out
xor
sub
mov
mov
sahf
lret
xor
push
sbbb
inc
jle
inc
movsb
xchg
jb
lea
sub
and
ret
cmpsl
mov
pop
xchg
sahf
fbld
adcb
mov
scas
aas
pop
jne
insl
fcomip
lea
sbb
sarb
sub
dec
aaa
std
xor
js
add
cmp
push
jp
inc
mov
aas
mov
dec
ss
add
out
jne
and
push
mov
popa
test
mov
mov
fstpl
int3
out
iret
adcl
test
int
mov
push
loop
sub
inc
cmpsl
decl
into
add
jp
enter
insb
sti
push
push
cmp
mov
and
fwait
cmp
data16
sahf
fdivp
lahf
paddsw
xchg
xchg
int3
adc
mov
hlt
sbb
das
mov
or
mov
push
lds
lea
mov
test
and
test
mov
int
inc
add
ret
jecxz
push
out
xchg
popa
mov
push
xor
adc
pop
mov
adc
adc
scas
imul
cld
or
dec
test
loope
iret
icebp
cmp
mul
test
mov
mov
fsubl
mov
inc
data16
es
fidivs
cmc
inc
xor
test
dec
and
sbb
mov
bound
mov
jle
gs
pop
stos
jecxz
lds
sub
jle
lret
testl
std
cltd
out
loope
dec
into
or
inc
and
lahf
xor
imul
push
jg
push
fcmovu
lods
and
jbe
stos
inc
bound
rorl
sbb
xor
and
add
and
mov
call
mov
arpl
cmp
popl
sbb
and
mov
scas
pop
sub
sahf
jne
sub
lea
sbb
mov
xor
xchg
aaa
movsl
xor
lods
mov
hlt
jmp
adcb
or
stc
pushf
mov
sahf
dec
orb
popf
mov
pop
jmp
lock
push
aaa
popf
orl
add
or
push
jbe
leave
push
rorl
cmc
int3
mov
stos
inc
push
adc
jbe
outsl
inc
iret
loopne
mov
movsb
adcl
pop
mov
jg
in
data16
ljmp
xlat
push
pop
fidivs
push
and
imul
and
sub
iret
cli
jae
inc
xchg
cld
pop
mov
dec
fsin
ret
insl
int
or
xchg
inc
inc
test
repnz
int
mov
mov
ds
ljmp
xor
ret
out
jg
cmp
and
int3
ret
mov
pop
idiv
in
cmp
mov
add
sbb
insl
jmp
xchg
js
jns
scas
mov
pop
sbb
add
and
jl
mov
dec
lret
pop
ja
xchg
aaa
jecxz
fbstp
pushf
push
sbb
in
scas
nop
cmp
shrb
jns
enter
jg
stc
lret
mov
pop
loope
stos
out
outsb
cltd
out
xchg
loopne
pop
inc
dec
ret
and
adc
jns
cmp
stos
adc
add
push
mov
inc
es
shll
xor
imul
or
cmp
mov
pop
sbb
iret
fwait
cmpsb
popl
sub
jmp
in
test
jle
jp
inc
pop
and
movsl
in
and
sti
jo
pop
iret
test
jecxz
lock
jo
out
imul
and
cs
lcall
and
push
cmp
jne
inc
and
arpl
xor
xchg
fstpt
or
cli
add
push
add
bound
add
cmp
dec
sub
icebp
sub
xor
pop
shll
inc
xor
enter
jg
push
in
pop
enter
ja
cltd
and
xor
movsb
fsubrs
and
cmc
imul
sti
std
repz
adc
and
imul
loopne
loope
cld
bound
sub
or
cld
lcall
mov
pop
push
inc
or
test
dec
in
aam
enter
addl
mov
cmpsl
mov
fistpl
ret
and
inc
jae
aad
mov
out
frndint
and
fstpl
adc
dec
repz
push
pusha
dec
movsb
daa
shlb
lret
cmp
leave
mov
xor
in
hlt
test
inc
mov
stos
imul
fs
inc
dec
mov
adc
incl
sbb
mov
aaa
cmp
rclb
jl
int3
lret
out
xor
test
fs
cld
sbbb
jns
push
cmp
out
ljmp
adc
adc
cmp
or
je
or
mov
xchg
cmpsb
or
dec
push
dec
iret
add
cmp
jg
movsl
adc
dec
xor
mov
insl
adc
shll
adc
out
push
jmp
fists
shrl
add
push
sbb
out
lcall
shl
mov
in
pop
push
addl
add
inc
mov
jmp
push
call
dec
lahf
xchg
mov
mov
or
xor
jb
or
leave
cmp
fbstp
or
and
add
inc
pop
dec
imul
rcrl
mov
jmp
sti
mov
icebp
inc
sub
daa
sub
aas
data16
outsl
insl
popf
sub
inc
fisubl
sbb
xor
fsubs
pusha
loope
adc
adc
ja
imul
push
fists
ljmp
fcoml
pop
sbb
pop
xor
fsubl
cmp
xchg
adc
pop
out
jo
push
sahf
lea
jmp
mov
sbbl
or
aam
cs
in
gs
jl
pop
cld
repz
mov
dec
shrl
push
scas
add
test
ficoml
jne
es
jl
inc
add
xchg
jle
push
pop
ljmp
cld
sub
jecxz
add
sub
cmp
push
lock
enter
inc
pop
stos
es
movsl
enter
popf
xchg
push
push
lret
ret
and
sbb
pop
aaa
arpl
fsubrs
sub
stos
xchg
shrl
aam
dec
mov
adc
jg
imul
pop
or
mov
jp
or
add
rcl
jns
mov
push
dec
cld
pop
aaa
cmp
push
shrb
xor
dec
out
aas
je
arpl
das
push
or
mov
icebp
repnz
or
xchg
push
and
lods
mov
or
jno
jb
pop
ret
lret
push
arpl
push
or
loope
es
jmp
aam
adc
and
cmp
cmp
aaa
mov
pop
icebp
mov
inc
lea
sbb
push
inc
xchg
or
ret
int
and
sbb
inc
push
jno
mov
test
sbb
cmpsl
pop
cwtl
addr16
addb
sbb
lret
mov
pop
stos
sbb
inc
adc
cwtl
mov
sub
dec
sub
sbb
insb
cld
add
mov
mov
fiadds
rolb
stos
outsl
scas
enter
mov
in
pop
lock
jns
sti
popf
mov
ljmp
mov
xchg
cmp
call
in
fiadds
jp
jle
push
xchg
mov
dec
sbb
pusha
imul
add
pop
push
adc
inc
or
sarl
out
mov
dec
mov
sub
out
repnz
mov
mov
dec
adc
mov
sub
push
addl
imul
and
sbb
out
cmp
jmp
mov
dec
pop
push
mov
jns
out
jns
movsl
xlat
and
push
mov
and
idiv
mov
les
pop
xchg
fidivrs
push
push
sub
test
jl
jmp
sub
or
shl
cwtl
lcall
fsubrl
push
subb
divb
cmpsl
sahf
xchg
sub
mov
scas
cmp
mov
lahf
lret
pop
into
sub
jecxz,pn
call
mov
push
shlb
loope
inc
mov
jg
inc
test
in
mov
stos
sub
cwtd
ret
ret
push
dec
cmp
movsl
adc
mov
dec
std
and
ret
sub
sti
sbb
sahf
ljmp
push
or
sbb
fsubrs
in
mov
rol
cli
mov
push
in
sbb
jb
outsb
pop
and
jae
pop
insl
jp
ja
mov
loope
pop
stos
and
lret
roll
les
rorb
rcrl
jg
jo
js
cmp
mov
xchg
cli
stos
mov
stos
ss
pop
loop
add
divl
push
shrl
dec
jmp
adc
lahf
and
xchg
in
aas
xchg
add
roll
lret
pusha
cwtl
jno
repz
sub
cmpsb
aaa
daa
lahf
pop
bound
and
data16
inc
bound
rolb
jl
sub
xchg
jle
roll
imul
xor
mov
xor
nop
or
scas
shufps
aad
ja
pop
pushf
dec
mov
pop
stos
push
add
xor
inc
mov
sti
into
enter
adc
into
cltd
in
mov
or
in
stc
push
push
nop
cmp
rorl
sub
ss
shr
cmp
lea
mov
adc
out
shrl
icebp
inc
lret
jbe
adc
or
mov
and
adc
repnz
ja
dec
sbb
push
add
sub
xchg
stos
hlt
xchg
jmp
nop
sbb
dec
push
in
aaa
in
cmpsb
pop
and
pushf
je
idivl
std
imul
inc
fcoml
xlat
mov
test
pop
jne
jp
jb
shlb
xchg
arpl
in
stos
cmp
cwtl
aam
mov
adc
jmp
bound
sbb
shrb
pop
jae
xchg
or
stos
jne
push
push
out
mov
shl
xchg
pop
add
cmp
pushf
insb
or
aaa
and
inc
das
cmc
ret
pop
mov
jo
daa
xor
xchg
or
push
ret
std
testb
notl
fists
lock
adc
inc
out
mov
mov
mov
lods
rcr
mov
xor
sahf
into
aad
and
dec
dec
push
ljmp
lods
dec
mull
pop
jnp
xchg
mov
outsl
mov
mov
xlat
push
pop
sti
out
jno
repz
push
pusha
inc
push
sti
cmp
inc
or
sub
jmp
xchg
popf
bound
pushf
inc
mov
add
push
mov
add
or
test
test
xor
out
dec
pusha
int
or
push
shll
fiaddl
jge
jle
cmp
jae
sbb
and
inc
mov
aas
mov
sub
fimuls
pop
inc
fdivrs
mov
test
sbb
lds
into
lcall
outsb
ss
or
adc
lea
jae
je
jb
test
out
stos
cld
nop
push
addr16
js
cmp
inc
mov
je
out
dec
mov
xor
ss
mov
pop
or
pop
repz
sbb
mov
int3
sub
pop
les
icebp
cwtl
movsb
dec
mov
fwait
adc
jo
lcall
jb
out
mov
xchg
daa
mov
xchg
and
push
sub
je
jl
xor
jo
push
fsts
push
int3
and
xor
leave
pop
mov
mov
lds
push
and
dec
inc
in
pop
das
pushf
pop
inc
test
lds
mov
sub
xor
lret
gs
repz
xor
mov
pushf
xchg
sub
or
pop
pop
aam
mov
pushf
fistpl
sub
mov
or
out
add
lods
lods
mov
mov
lock
inc
inc
adc
lods
adc
lods
mov
and
fimuls
aad
mov
out
pop
push
enter
sub
inc
lds
adc
addr16
xlat
push
or
testb
or
push
pop
rolb
outsl
pop
ss
sbb
jo
or
mov
jb
pushf
or
mov
mov
push
pop
popa
outsl
sbb
jle
mov
sbb
in
xor
xchg
mov
into
pop
aad
stos
push
adc
nop
pop
jg
mov
lods
mov
pop
push
or
mov
insb
popf
cli
call
in
cmp
imul
adc
xor
gs
lret
sub
push
adc
sbbl
push
pop
mov
clc
sbb
dec
stc
lcall
inc
or
pop
fs
adc
xor
cmc
daa
rolb
fwait
movups
mov
aaa
mov
adc
shll
push
ja
lcall
stos
push
repnz
out
push
mov
jbe
movsl
jg,pt
mov
in
adc
movsb
xor
cwtl
sbb
mov
mov
add
ficompl
rcll
std
das
xchg
and
sbb
pop
fidivl
movsl
mov
js
sbb
xlat
mov
inc
and
push
pop
pop
mov
mov
int3
push
lock
mov
subb
test
popa
insl
inc
lret
dec
outsl
mov
stc
jo
ret
jp
xchg
les
cltd
lock
mov
out
dec
repz
pop
mov
outsb
xor
push
stc
cltd
jb
clc
int3
push
xchg
lods
xchg
ret
flds
cmpsb
in
sarb
outsb
sbb
cmp
loop
jle
rcr
sub
popa
inc
jg
push
je
nop
push
in
mov
repnz
shlb
pop
push
cmp
adc
ds
adc
sbb
shl
std
jno
add
aas
add
lahf
xchg
jmp
push
fwait
lock
adc
sub
jge
push
or
fs
out
inc
push
sbb
pop
bound
and
mov
or
jp
in
jl
cs
and
pusha
push
fucomip
mov
clc
push
mov
pop
imull
in
test
sub
or
jp
fimuls
cmpsl
sti
jb
inc
xchg
pop
adc
fsubrl
add
add
testl
mov
call
shr
push
cmp
xchg
inc
and
mov
mov
push
mov
push
cmp
testb
lods
clc
pusha
call
mov
pop
loop
fwait
pop
cmpsl
sub
xchg
arpl
cmp
cmp
movsl
aaa
mov
mov
popf
adc
cmpsl
sub
out
sti
cmp
jp
popa
fwait
inc
xor
jno
push
push
gs
xchg
dec
scas
or
pushf
fdivl
stos
mov
push
jle
lods
sbb
sub
xchg
adc
mov
sbb
scas
cmc
jl
inc
xor
add
ds
pop
cmpsb
into
pop
fdivl
jmp
add
cmp
xchg
loope
and
jnp
mov
movsl
push
jnp
push
cmpsl
push
in
or
push
imul
sub
xor
insl
mov
repnz
adc
add
pop
out
mov
mov
in
fcoml
jecxz
jmp
mov
repnz
icebp
mov
scas
std
pop
ljmp
sahf
or
out
xlat
roll
mov
sub
cmpsb
mov
das
outsl
or
out
aam
push
movsb
hlt
xchg
lret
sub
fnsave
mov
cwtl
sbb
cmp
mov
or
out
adc
fldl
inc
push
lods
pop
sub
xor
enter
sarb
and
add
jl
mov
pop
mov
cli
pop
xor
mov
cmp
loop
int3
sub
xchg
sti
sub
sub
lahf
adc
jbe
mov
mov
xchg
dec
imulb
and
inc
fiaddl
xor
add
and
push
pop
push
inc
cli
pop
sub
mov
les
fcmovnb
pop
fcomps
ror
rclb
scas
dec
cli
inc
jl
insb
insl
std
repnz
pop
jg
lret
pop
push
mov
dec
ret
pop
jbe
mov
push
add
jne
jnp,pt
mov
or
sbb
push
xchg
xor
push
loopne
dec
fisttpl
mov
out
or
into
pop
mov
lea
inc
cwtl
pop
adc
lods
sbb
or
inc
setle
jns
sub
ljmp
mov
sub
pushf
cmp
jecxz
ljmp
mov
mov
fdivrl
shl
push
hlt
xor
mov
filds
dec
mov
idivb
je
fwait
ret
icebp
jo
xor
outsb
mov
lcall
mov
mov
sub
dec
imulb
fisubrs
cmp
sti
lret
out
or
out
mov
dec
xlat
mov
idivb
sbb
mov
xor
popa
cmp
xor
jecxz
lret
xor
in
xor
mov
ss
ret
cmpsb
add
sti
dec
mov
subb
xor
cwtl
ja
add
es
movsl
loope
in
sti
adc
jo
push
push
and
and
xchg
push
fnsave
jno
push
mov
cld
daa
in
outsb
in
insb
adc
das
add
push
push
jo
loope
pop
into
test
xor
test
push
in
rcrl
pop
add
push
cmc
retw
hlt
lret
xor
into
add
and
movsl
nopl
adc
fnsave
jbe
sub
xor
jmp
in
mov
js
mov
xor
xor
lods
add
fs
inc
leave
orb
push
cmc
dec
or
popa
cmpsl
lahf
int3
stos
rol
push
mov
sbb
push
pop
mov
shll
lahf
cltd
and
push
cmp
add
mov
jmp
insl
sbbb
notb
sub
pop
mov
mov
cmpsb
das
loop
js
pop
sti
cwtl
add
dec
push
cmp
fists
sub
addl
fs
dec
dec
push
arpl
iret
outsl
into
in
inc
pop
out
lret
out
cmp
cmp
dec
lock
stc
in
jp
scas
das
push
nop
in
pop
inc
test
dec
movl
out
movsl
pop
add
call
adc
jno
sub
push
adc
pop
xchg
mov
adc
sub
mov
fldt
imul
pop
in
push
jl
adc
movsb
sbb
test
mov
add
iret
cmp
push
jp
mov
cvttps2pi
inc
fsts
pop
xor
sarl
adc
aam
jge
xchg
aad
ljmp
fsubrl
arpl
dec
pop
push
mov
shl
adc
icebp
sbbl
jo
flds
inc
push
loopne
fs
push
sahf
ds
mov
xchg
add
fucomp
sub
xchg
inc
sbb
push
add
test
or
in
xchg
lds
mov
bound
sahf
jl
aaa
adc
push
imul
int3
insl
sbb
xchg
mov
add
sarb
sti
jg
push
push
mov
push
test
out
ljmp
xor
leave
aas
out
or
jns
pop
mov
jno
dec
jl
dec
out
pop
test
scas
out
scas
hlt
aaa
das
mov
adc
xor
or
jne
dec
mov
cmp
jb
pushl
xchg
xor
or
out
jp
lcall
mov
jnp
mov
cmp
push
adc
xchg
popa
in
mov
pop
aad
mov
clc
mov
push
cwtl
loop
and
jnp
sti
lcall
mov
cmp
mov
fnstcw
loope
cltd
nop
divl
jle
mov
push
aad
cmp
jle
xorl
mov
mov
mov
je
pop
sub
mov
divb
push
xor
inc
movsl
jle
inc
add
icebp
sbb
mov
mov
add
mov
clc
mov
loope
movsb
pop
cli
dec
cmp
and
cli
fwait
push
cmp
test
ret
inc
xor
rorb
nop
scas
push
mov
lret
inc
loopne
inc
cs
inc
jnp
dec
mov
push
out
cld
lret
pop
out
psllw
cli
push
mov
pop
mov
xchg
adc
int
cmc
mov
stos
fcmovnbe
xchg
shlb
pop
in
fistpll
icebp
xchg
and
movsl
sub
fwait
xchg
xchg
fisubrl
in
gs
sub
cwtl
pop
inc
xor
push
lods
daa
mov
ja
sbb
mov
cmc
insl
mov
xchg
test
popf
test
pushf
cmpsb
mov
add
jnp
repnz
nop
dec
loope
popf
hlt
pop
sbb
mov
mov
xchg
sbb
cmpl
pop
out
fstpl
fs
jmp
lcall
pop
subb
mov
xchg
mov
ljmp
les
fwait
movsl
pop
push
filds
pop
jle
jb
xchg
cltd
push
sub
divb
xor
insb
fs
out
insl
mov
add
imul
hlt
addb
sbb
lds
pop
popa
insb
test
aam
cmpsl
cltd
mov
lock
dec
ss
fcoms
lock
dec
jbe
dec
or
arpl
rcll
jbe
mov
out
loopne
mov
cld
fistpll
jne
cmp
movsl
sub
call
aas
scas
mov
sub
and
test
xchg
xor
insl
lds
in
cwtl
popf
or
sub
xchg
xor
clc
pop
dec
lods
cmp
sub
or
and
mov
dec
je
xorb
scas
enter
dec
and
push
cmpsl
or
sub
add
cmp
mov
fcoms
mov
mov
fnstcw
inc
mov
pop
loopne
lods
inc
nop
leave
push
add
stos
call
cmp
cmp
aas
in
mov
movsl
out
clc
cs
push
fwait
push
dec
mov
adc
and
xor
jp
cltd
jg
scas
adc
pop
aas
int3
or
xor
movsl
jo
mov
add
sarb
ret
popf
inc
and
sbb
add
xor
test
jne
adc
lods
mov
mov
out
fisttpl
iret
xor
repnz
iret
push
push
jns
icebp
inc
add
in
stc
push
loop
dec
push
ficompl
lock
rol
loopne
cmp
mov
mov
mov
jle
data16
inc
jge
rcr
ljmp
inc
inc
movl
mov
cmp
fsub
repnz
mov
inc
sub
insb
movsl
shr
add
hlt
into
jg
je
jne
adc
jmp
int
jnp
xor
sub
data16
fiaddl
in
mov
cmp
cmp
fstp
sahf
mov
adc
mov
xlat
pop
jae
repz
sub
xor
insl
sub
mov
push
push
and
out
cmpsl
push
and
iret
pop
popa
push
sbb
aam
sbb
jnp
enter
pop
mov
lret
mov
test
vcvttpd2dqx
sti
push
movb
dec
mov
cltd
pop
out
ret
ficoml
jecxz
and
cmp
jg
sar
mov
jle
pop
int
popa
cltd
into
inc
testl
pop
pop
es
cmp
push
dec
insb
fnstcw
popa
jno
add
lea
xor
mov
jg
cmc
cwtl
movsl
mov
mov
ret
arpl
loope
in
sahf
xchg
sbb
xlat
das
add
cmpl
test
cmp
push
bound
xchg
movsb
insl
fwait
push
dec
jp
arpl
lret
pop
cli
mov
pop
sbb
jmp
mov
cmp
ret
shrl
and
jg
cmpsl
rorl
add
repnz
sbb
push
cmp
sbb
push
adc
jge
xchg
sub
or
sarl
push
xchg
sub
mov
imul
xchg
mov
xor
insl
cld
jbe
sub
into
sub
sbb
movsb
jl
add
jmp
imul
xchg
adc
adc
push
sbb
test
sbb
adc
pop
sti
out
popf
ret
push
cmpsb
iret
imul
mov
cmp
or
fs
pop
pop
or
pop
fdivl
cmp
dec
cli
in
xor
and
int3
sti
jg
es
xchg
inc
es
pop
idivb
mov
or
je
mul
test
sbb
inc
outsb
addr16
or
loopne
sub
int3
jne
insl
mov
gs
mov
pop
cmp
jnp
sub
xchg
out
mov
mov
jo
sub
sti
repnz
sahf
scas
add
popa
cli
rolb
int
mov
add
sub
lret
xor
orb
or
xchg
imul
in
sbb
aam
jp
add
ret
hlt
repz
andl
js
fsubl
hlt
inc
stos
inc
daa
loopne
sbb
add
jg
cld
pop
sub
insl
gs
add
icebp
hlt
adc
jae
and
sti
repnz
jle
add
jp
sbb
jbe
mov
push
xchg
aas
push
xchg
fildl
mov
inc
sub
jne
mov
push
xchg
cmp
popf
ja
insl
xchg
jb
mov
xor
fldl
dec
sbb
cmp
sbb
xchg
lahf
push
mov
ror
cltd
faddl
mov
xchg
imul
mov
cmpsl
mov
dec
jg
or
data16
push
and
sub
inc
fdivrs
xchg
dec
inc
xor
hlt
enter
out
or
sti
sbb
clc
cmpsb
sbb
sahf
xor
ret
fstl
push
shll
cmp
jle
xor
mov
and
test
dec
lods
in
jl
rorb
adc
into
pop
int3
bound
pop
pop
mov
mov
or
jmp
mov
push
ret
sbbl
addr16
mov
add
inc
in
pop
and
mov
jecxz
out
sbb
xlat
dec
sahf
dec
flds
movsl
mov
adc
jp
lret
scas
fcomi
addl
pop
dec
xor
daa
pop
push
inc
or
sub
mov
jecxz
cli
setnp
push
test
popa
std
iret
xchg
sbb
inc
and
rorl
and
rorl
repz
stos
mov
mov
shlb
mov
xor
scas
imul
and
out
xchg
xchg
fidivrs
std
inc
in
inc
add
arpl
push
int3
cmpsb
xor
test
lea
fidivrl
insl
mov
gs
cmovns
pop
lcall
addb
shlb
xor
dec
xchg
decl
aam
hlt
lret
mov
xor
lcall
and
pop
add
sbb
popl
aam
push
lret
scas
adc
addl
test
inc
out
in
testb
movsl
xchg
xchg
adc
xchg
or
call
mov
pusha
stc
out
popa
mov
das
xlat
add
mov
je
mov
dec
push
or
movsb
adc
jb
add
xchg
push
out
mov
aam
mov
addl
lret
mov
mov
lea
je
fcomps
aaa
scas
ljmp
loop
imul
adc
sti
adc
arpl
xchg
std
bound
rcrb
std
inc
or
sbb
xchg
arpl
and
add
sahf
out
add
pop
scas
test
mov
pop
and
add
jne
pop
inc
mov
mov
mov
and
out
mov
ffree
xchg
aad
xor
push
push
movsl
xlat
popa
fldln2
into
cwtl
xlat
mov
push
dec
or
aaa
adc
mov
mov
pop
pop
repnz
adc
xchg
ja
std
cmp
jg
das
rorl
addr16
mov
or
ficoml
xchg
mov
or
addr16
sub
or
js
sub
mov
jmp
mov
xchg
xchg
and
pop
and
add
pushf
and
inc
push
lds
dec
pop
testl
sbb
lods
mov
test
xor
mov
insb
loop
stc
call
inc
repnz
faddl
xor
sbb
int3
lock
add
insb
mov
push
inc
mov
mov
mov
adc
add
adc
sub
into
mov
pop
sar
into
pop
push
mov
adc
add
sbb
push
sti
in
dec
lds
imul
pop
adc
xor
es
flds
lret
mov
push
or
shrb
and
push
jg
ds
mov
jnp
cmpsb
and
popa
sbb
pop
sub
jnp
jge
add
aaa
mov
xor
pop
inc
cmp
in
in
ds
xchg
xor
xchg
pusha
xor
mov
pop
div
jmp
add
insb
cltd
inc
dec
decb
jge
aam
adc
data16
shll
and
test
jae
call
scas
push
in
push
or
loop
mov
sub
mov
mov
mov
mov
arpl
push
sbb
mov
inc
mov
aas
pop
add
xor
movsl
ja
adc
mov
nop
stc
sub
mov
and
sub
sub
xchg
sahf
xor
lods
sub
outsb
mov
adc
jp
inc
push
mov
imul
and
push
test
rorb
ret
cltd
and
int
js
push
mov
out
dec
inc
xor
mov
loop
movsb
add
jmp
xchg
sbb
in
sub
and
and
cmp
shlb
or
or
adc
pop
lock
imul
jo
and
nop
sub
lock
inc
dec
jns
ret
sub
in
outsl
gs
add
fimuls
popf
push
jns
rolb
gs
jle
pmaxub
xlat
cmp
fucomp
mov
test
cmovg
pop
adc
jmp
cmp
push
mov
popa
jns
or
push
stos
mov
adcl
out
xor
push
out
jle
stos
jns
int
or
icebp
sar
movsb
int
mov
dec
aam
cs
fs
mov
ja
and
jg
fiadds
lods
arpl
mov
pop
ds
mov
cltd
pop
sub
or
jno
mov
push
jge
and
lret
loope
add
loop
imul
push
mov
add
sti
push
enter
dec
pop
sub
push
outsb
sbb
xchg
jo
mulb
stos
jae
or
mov
mov
push
xor
jp
addr16
ficoms
mov
xchg
popa
aas
das
push
rol
leave
pop
add
and
pop
or
fists
outsb
xor
xchg
or
cld
adc
mov
xor
cmp
jp
divb
cli
out
mov
and
adc
sbb
cltd
andl
mov
jmp
pop
mov
mov
push
hlt
adc
cmpsl
loope,pn
lret
nop
jne
dec
jle
mov
pop
lods
mov
cld
mov
out
and
and
pcmpgtd
aaa
pop
fists
lret
add
popa
adc
ss
sbb
dec
and
mov
cmp
and
and
or
and
mov
xlat
cmpsl
cs
push
cmc
jecxz
int
repz
adc
arpl
or
xlat
jb
inc
testb
or
test
add
cli
mov
inc
mov
add
test
nop
xchg
cltd
pop
fisttpll
add
mov
fidivrs
in
shrb
shlb
ds
xchg
xchg
jmp
aaa
popf
incb
adc
sbb
sbb
push
loopne
subb
movsl
leave
push
adc
pop
cmp
cs
jge
mov
jae
adc
sub
inc
adc
rorb
xchg
jo
sbb
cli
lret
daa
or
sbb
xchg
fwait
and
stc
jae
push
cld
mov
and
cs
sbb
bswap
repnz
adcl
xor
int
push
pop
dec
out
inc
mov
lea
jmp
outsb
pop
aad
test
jne
mov
outsl
ljmp
jp
push
pusha
imul
jno
xchg
pop
les
inc
cmc
push
sub
dec
subb
pop
jmp
icebp
inc
xchg
mov
scas
add
push
mov
pusha
sbb
nop
xchg
and
sarl
outsb
mov
mov
dec
ss
jle
mov
or
ss
jae
mov
mov
xlat
xor
push
sahf
movsl
mov
cmpsb
repz
aam
xor
movsb
out
rcr
pusha
pop
sbb
icebp
mov
mov
fs
push
cld
ljmp
xor
xchg
jae
pop
aas
push
xchg
sbb
insl
inc
dec
fwait
or
cmp
or
xchg
bound
pop
sub
loope
arpl
in
pop
pop
sbb
lods
int
loopne
sub
outsb
lret
cltd
push
add
imull
hlt
xchg
xchg
jo
aas
cmp
xor
or
flds
cmpsb
sbb
out
das
jmp
pop
sub
ret
mov
sti
mov
push
popf
fidivl
mov
sbb
pop
xor
add
xchg
popl
rcrb
pop
inc
popf
popf
inc
call
jnp
mov
pop
addb
mov
sbb
lds
into
add
call
jne
sub
xchg
inc
sbb
mov
jbe
loope
imul
sub
cmp
scas
add
xor
test
lret
jge
gs
lcall
insb
cmp
loopne
pop
push
xchg
shrb
or
dec
cs
mov
sti
add
test
or
mov
jno
mov
inc
add
rclb
cwtl
sub
mov
or
or
scas
ret
ds
cwtl
cmp
sbb
and
in
mov
xlat
cmpsb
jecxz
inc
mov
sbb
sti
inc
jbe
cld
inc
pop
mov
xor
int
in
lea
add
add
imul
cmp
mov
sub
cli
xor
pop
push
aam
cmpb
xlat
outsb
out
lock
mov
pop
hlt
dec
push
ds
mov
outsl
into
loop
into
mov
aam
jo
mov
sub
inc
mov
sti
aas
push
mov
dec
test
out
xchg
jle
or
xchg
outsl
aad
shll
dec
sbb
xchg
jecxz
sbb
ja
jne
mov
xchg
dec
dec
xchg
sub
jmp
subb
adc
out
mov
addr16
mov
xchg
ss
rorb
je
jmp
add
lea
jae
ret
scas
test
cld
lret
in
jne
mov
add
and
insb
fstp
fucomi
nop
push
or
sub
mov
sbb
xlat
or
pop
cmc
in
nop
push
popf
std
adc
dec
fdivr
ljmp
scas
push
lods
inc
adc
mov
lods
lcall
mov
jl
data16
cmp
ret
mov
sub
add
fcoms
jo
mov
imul
mov
adc
sub
adc
mov
pop
xchg
jmp
hlt
aad
ds
mov
js
subb
or
push
mov
mov
sahf
std
sub
repz
sbb
push
add
push
jecxz
int3
ljmp
inc
mov
adc
out
nop
jns
xchg
adc
loopne
mov
push
lcall
in
sbb
call
sbb
fildll
push
sbb
fwait
push
mov
aas
cmp
je
cmp
cmp
lds
arpl
mov
cli
inc
cmpsb
aam
mov
das
and
xor
xor
daa
aas
cs
in
fsts
aam
jo
inc
pop
mov
mov
xor
or
lods
or
and
pop
int3
out
mov
adc
cmc
add
inc
push
xchg
into
adc
movsb
jns
sbb
inc
inc
xor
xor
mov
mov
or
mov
inc
dec
inc
sbb
cmp
orb
mov
iret
and
mov
stc
rcll
ja
and
mov
add
pop
in
ret
scas
stos
lock
rcl
push
incb
mov
and
mov
pop
fisubrl
outsb
dec
push
fdivrp
outsb
sbb
xchg
xchg
int
movsl
pop
mov
pop
jo
push
test
pushf
push
adc
cld
add
shlb
fists
cmp
add
rcll
sub
out
rol
sub
nop
insb
mov
xchg
repnz
movsb
int3
cmpsl
lds
jno
fdivl
sub
jno
xor
inc
and
push
jle
push
leave
mov
outsl
sbb
sbb
mov
jg
inc
push
dec
sub
mov
pop
inc
sub
mov
add
cmp
dec
xor
mov
pop
and
pop
out
xchg
sub
out
xchg
popf
aad
jo
icebp
jp
mov
jae
cmc
dec
pop
out
imul
cmpsb
jbe
lahf
inc
js
mov
icebp
jg
lret
stc
nop
pusha
test
adc
xchg
hlt
dec
test
test
or
mov
mov
fs
push
inc
sahf
out
sub
cmpsl
sbb
lret
aas
or
jle
inc
pop
lret
sbb
movsb
pop
nop
sti
mov
das
sub
in
fwait
mov
cmp
mov
pop
mov
jae
int
and
jno
gs
mov
fs
cmpsl
push
cmpb
add
mov
or
clc
mov
dec
push
push
decb
movsb
sbb
xor
insb
test
cli
add
lea
adc
fdivp
test
adc
sti
js
push
cmp
xchg
scas
hlt
bound
xlat
dec
pop
cmp
lock
mov
bound
out
or
addr16
adc
shrl
js
jge
pop
aas
jg
rorl
cmp
shrb
add
xor
xor
and
aad
lret
mov
fstl
loop
xchg
sub
xchg
popa
dec
push
iret
scas
xor
jns
sbb
faddp
mov
xor
loope
les
pop
in
push
dec
fistps
push
mov
xor
mov
inc
les
out
push
pop
jle
jl
adc
idiv
repnz
pop
cmpl
or
ret
jnp
aas
repnz
add
cmp
xor
aaa
popa
aaa
les
sub
je
xor
ret
mov
std
jo
std
ja
mov
sbb
cmp
fistps
fwait
ss
iret
in
dec
sbbb
sub
sub
push
sbb
push
cld
or
lea
out
aas
inc
mov
dec
pop
iret
push
pop
pop
sti
bound
adc
ja
scas
jnp
jmp
pop
js
adc
xchg
hlt
mov
inc
cmc
or
mov
lods
cmp
lahf
mov
cmc
mov
dec
add
fidivs
dec
jge
inc
inc
outsl
adc
divl
mov
cltd
add
jecxz
es
sbb
mov
test
sbb
sbb
mov
push
cmp
lods
ficomps
xchg
in
mov
das
pushf
push
push
cmc
sub
push
fdivl
nop
cmp
or
in
fcoms
push
loop
fcompl
pop
xor
aaa
inc
lock
in
dec
frstor
out
dec
fisttpl
mov
jno
orl
add
out
scas
outsb
pop
dec
popf
or
in
fmul
xchg
fbstp
push
lock
push
pop
inc
loopne
push
ds
imul
stc
sarb
mov
les
int
cmc
test
inc
fs
push
shrl
pop
push
and
aam
pushf
outsb
scas
pop
cmp
imul
adc
lds
bswap
cli
or
cmp
adc
std
clc
or
out
cmpsb
xchg
insb
adc
pop
popf
cwtl
jmp
sub
int3
xchg
cmpl
adc
pop
les
lock
mov
push
sarb
cmp
or
sbb
or
push
js
fisubs
pop
inc
adc
nop
cmp
stos
xchg
fistpl
jno
lods
outsb
dec
sbb
sbb
jle
sub
fwait
lcall
mov
and
dec
sub
addr16
out
popa
das
add
out
push
jmp
push
add
dec
cltd
sub
pop
and
add
or
mov
cmp
lods
push
cmp
xchg
loopne
push
pop
adc
cmp
andl
pop
add
inc
dec
pushf
ficomps
push
mov
push
pop
test
nop
dec
jno
push
jl
shl
stc
imul
cltd
pop
lahf
cwtl
aas
dec
push
mov
in
mov
xchg
popf
mov
pop
call
push
and
add
inc
insb
dec
cmp
xor
pop
stos
loope
cmpsb
xor
adc
push
je
inc
fnstsw
ficompl
mov
inc
fildll
push
add
cmpb
pushf
js
stc
push
lahf
and
lahf
mov
insb
stos
enter
inc
dec
sub
push
xchg
ret
or
or
popf
into
cmp
lods
sti
scas
dec
mov
add
arpl
xchg
cmp
adc
popa
hlt
jg
test
nop
std
mov
movl
jge
movsb
cltd
ja
sub
xor
cld
test
push
sbb
incl
loope
jbe
xchg
sbbb
and
push
and
mov
loopne
push
imul
pop
xlat
leave
lcall
push
xor
adc
xchg
in
rorb
or
sub
lahf
out
pop
ror
jbe
sub
shl
clc
fwait
pop
and
ja
xor
adcl
inc
fcmovu
xchg
cltd
adc
push
ss
test
jae
arpl
xor
or
jle
mov
pop
sub
aas
icebp
cltd
in
jecxz
scas
mov
mov
cmc
adcl
in
repnz
mov
and
xchg
das
js
sub
in
or
movsl
dec
sar
mov
repz
xor
aad
jno
pop
popa
addl
scas
jl
movsb
mov
test
mov
mov
mov
dec
or
inc
fsubl
pop
das
lret
mov
mov
jbe
loope
jae
in
xor
fs
movsb
bound
jecxz
jns
mov
loop
dec
lock
mov
insl
jae
jmp
mov
pop
fists
add
lock
xlat
pcmpgtw
push
jo
sar
add
frstor
jnp
imul
loope
imul
test
push
shll
cld
mov
arpl
dec
push
push
jp
cwtl
aas
dec
lock
out
pop
add
add
imul
mov
lea
adc
mull
jge
push
pop
test
inc
mov
mov
test
insl
jmp
mov
cs
jmp
and
fldcw
pop
jge
das
xor
imull
push
aaa
xlat
mov
pushf
pop
mov
push
add
cmp
and
in
jb
xchg
pop
mov
mov
in
inc
and
sub
in
or
inc
sub
and
sahf
hlt
push
test
and
out
hlt
mov
mov
cmpsb
mov
mov
mov
xor
lcall
roll
mov
ret
pop
dec
pop
adc
sub
adcl
xchg
rolb
mov
jmp
adc
jge
xchg
xor
movsl
pop
and
mov
loope
js
sbb
call
imul
cmp
sahf
push
dec
in
fldl
cmp
loope
lahf
inc
mov
xor
jge
aad
ret
xorl
mov
pop
xor
mov
movsl
cmc
incl
subb
data16
and
dec
nop
aam
arpl
sub
addr16
fildl
or
and
cmpsl
stc
hlt
add
shrb
shll
stos
inc
bound
push
inc
dec
stos
push
add
loopne
out
push
or
xor
mov
jle
loop
mov
outsl
or
cs
jae
sub
mov
mov
int
repnz
pop
into
lock
scas
push
jge
add
sar
mov
add
cmpsl
jns
hlt
repnz
xchg
push
add
mov
pop
cmpsl
sti
std
mov
fwait
mov
cmp
dec
dec
fbld
adc
gs
sub
lcall
push
mov
xchg
pop
ss
aaa
insl
push
daa
cmp
push
jb
jmp
repz
add
cltd
or
rcrb
call
lock
les
insl
ljmp
orb
js
cmp
dec
push
imul
test
xchg
sahf
xor
nop
nop
aaa
add
jg
mov
ja
mov
dec
cltd
xor
pop
pushf
xchg
jnp
adc
jnp
cmp
inc
aad
xlat
pop
fcmovb
paddsb
lods
icebp
and
inc
inc
add
mov
cmc
in
outsl
rclb
cmp
xchg
outsl
jo
enter
js
in
mov
sub
testl
push
jnp
stc
xor
mov
inc
push
xor
test
insl
push
cltd
dec
fst
rorl
jle
out
push
cmp
loop
pop
movups
je
popa
pop
jg
jp
ljmp
inc
cli
lahf
jecxz
xor
cmp
push
add
push
mov
insl
mov
inc
jle
jecxz
adc
shrb
jp
sub
and
jl
rcl
stos
add
sub
sti
out
inc
jns
dec
adc
bound
cmp
push
push
mov
sub
adc
inc
jbe
test
imul
in
jne
lods
data16
pop
xchg
xchg
adc
push
inc
mov
neg
mov
mov
inc
in
pop
sahf
fsubp
mov
dec
jno
in
jb
sub
cmpsb
je
aas
insb
int3
fistl
imul
xchg
pop
jno
xor
clc
aaa
sahf
mov
xchg
test
sub
mov
xor
lods
inc
int
mov
stos
jecxz
and
jge
mov
mov
xchg
push
xor
arpl
test
xchg
mov
jae
inc
insl
lds
orb
in
jb
mov
fnstsw
dec
mov
xor
inc
push
inc
addr16
out
int3
adc
sti
lds
js
addr16
js
aam
adc
loopne
lea
inc
push
out
test
lods
xor
popa
xor
cmc
ds
or
nop
test
lock
test
cmp
jb
sbb
mov
leave
cmp
stos
cmp
pop
and
sbb
in
mov
xor
push
cwtd
repz
fwait
daa
add
inc
push
andl
ljmp
dec
shll
andl
js
inc
sbb
lds
movsb
fstpt
mov
add
pushf
pushf
in
inc
lock
xchg
adc
sbb
xor
sarb
mov
adc
call
test
sarb
adc
lret
jno
push
sbb
aad
stc
inc
outsl
ret
sti
fdivr
push
push
lds
pushl
and
xchg
pushf
xor
and
fcomps
lea
test
rorb
xchg
push
mov
push
mov
sub
in
lods
bound
imulb
hlt
cmp
aas
inc
lret
adc
and
push
decl
jo
jno
adc
int
shlb
mov
dec
loopne
test
fwait
mov
mov
mov
mov
in
adc
test
jl
ds
aad
aas
xor
cltd
xchg
push
sub
lcall
out
setnp
lds
les
aas
cmp
ja
mov
mov
aaa
dec
cmp
mov
jg,pt
movsb
cmp
mov
add
sbb
jge
in
add
stos
adc
mov
fistpl
sbb
sub
call
sbb
pop
jae
out
and
lahf
out
xchg
or
inc
les
adc
cltd
lahf
sub
add
sub
and
pop
mov
rol
dec
insb
int3
xor
fsts
and
sahf
jl
and
ljmp
pushl
shlb
pop
fisttps
and
dec
cmp
push
sub
daa
xchg
mov
mov
push
and
pop
popl
ljmp
test
das
pop
rcrl
jne
rep
test
out
leave
aad
or
in
mov
push
data16
mov
cmpsb
mov
inc
popf
subl
mov
inc
fdivr
adc
movq
push
dec
mov
dec
frstor
testl
sbb
fsub
jbe
popf
jnp
fbld
mov
mov
and
adc
inc
jb
js
sbb
hlt
leave
cmp
jb
add
cli
test
mov
mov
inc
cmpl
ficoml
lods
jns
fsubrs
push
outsb
mul
sti
addr16
xchg
jp
imul
movsl
out
addr16
sub
dec
repnz
pop
dec
jns
and
mov
lahf
outsb
nop
cmp
sti
mov
or
mov
xor
xchg
sbb
nop
push
cmp
in
push
push
ds
push
adc
mov
leave
test
cmpsb
mov
arpl
sbb
fcmovu
mov
add
and
popa
cmp
popa
leave
jle
mov
vmovsd
pop
mov
mov
movsl
xchg
roll
fwait
jne
pop
mov
je
cs
cld
out
scas
aas
mov
ret
lcall
jne
xor
cmp
xor
ljmp
push
pushf
cli
jnp
dec
pusha
rol
jno
rorb
ds
dec
rcll
fsub
dec
or
outsb
rcll
push
xlat
xor
stos
push
jae
loopne
push
div
jmp
and
add
mov
imul
je
inc
pop
aad
popf
ret
jns
and
out
add
mov
jb
loope
xchg
xchg
add
imul
or
pop
xor
fsts
or
jmp
push
or
stc
and
movsb
fcomi
jbe
inc
mov
adc
sub
mov
call
scas
dec
test
loopne
int3
xchg
sbb
mov
mov
jns
call
mov
mov
or
jecxz
mov
push
sub
punpcklbw
sbb
or
hlt
fldt
mov
and
adc
enter
add
inc
hlt
dec
xor
out
cmpsb
pop
xchg
gs
add
push
movb
or
jne
test
mov
inc
fxch
shll
mov
mov
sbbb
hlt
mov
setnp
sbb
pop
ficomps
or
mov
jl
gs
faddl
lret
add
sti
cs
in
sub
xchg
sbb
vpunpckhqdq
and
xor
mov
enter
mov
movl
push
cmp
popf
adc
mov
sub
mov
lock
add
jb
in
pop
outsb
fcoml
jge
out
jae
mov
gs
lock
push
xchg
adc
into
dec
insl
je
stos
jns
inc
mov
push
aam
stc
and
fcoml
inc
jno
outsl
and
push
push
ss
mov
lods
adc
iret
ret
mov
jp
mov
and
insl
push
out
scas
xchg
sbb
cli
cs
in
aam
repnz
dec
push
or
orb
dec
scas
das
psubsb
mov
pop
out
and
mov
jns
test
cmp
cmp
shlb
jne
jb
das
out
dec
sbb
jne
cltd
pusha
lods
gs
pop
add
cs
jecxz
add
std
push
inc
mov
cli
cmpsl
mov
popf
xchg
shll
nop
push
sub
fbstp
inc
test
push
cmp
push
or
pop
nop
adc
test
leave
das
imul
push
pop
push
scas
lock
mov
and
and
movsb
cmp
xchg
and
movsl
and
sbb
cs
and
imull
adc
push
pop
out
aas
sarl
stc
fisubrl
dec
test
lds
pop
test
push
xchg
push
mov
ds
test
mov
ds
add
xchg
daa
clc
sub
add
in
cli
sahf
gs
pop
or
mov
mov
inc
adc
cld
fs
lods
ret
xchg
sub
xor
enter
push
pop
test
ss
push
adc
sbb
xor
pop
aam
cwtl
pop
jp
push
mov
sub
adc
cmc
lcall
cmp
inc
mov
inc
ds
dec
jle
sbb
in
pushf
add
xor
adc
xor
cmp
gs
and
decb
fstpl
lret
out
mov
int
xchg
ja
int
mov
cmpsb
ret
rcl
loopne
jp
sub
sbb
push
inc
adc
adc
or
arpl
mov
imul
mov
mov
add
and
lret
js
dec
inc
cmp
push
repz
out
js
inc
sub
mov
mov
pusha
xchg
in
mov
pop
outsb
ret
xlat
insb
rcrb
push
popa
test
out
sub
dec
inc
cmp
cmp
repz
cld
mov
jbe
imul
pop
pushf
stos
fisubrl
inc
repz
push
fnsave
xchg
loop
dec
sub
xlat
pusha
decl
mov
sbb
jmp
outsb
mov
sbb
std
cmp
fnstsw
mov
in
int3
push
xchg
shlb
andb
mov
push
xchg
pusha
push
mov
std
cmp
stos
add
push
xor
div
push
xor
mov
insl
fstp
dec
mov
out
pop
xchg
pop
jnp
jle
lahf
jo
pop
pop
push
pop
shrb
stc
sub
andl
or
jb
jg
mov
nop
or
ret
xor
cltd
loopne
xor
rorb
mov
jge
xchg
mov
sarb
movsl
xchg
xchg
mov
jnp
sbb
cmp
xor
pop
aad
xchg
movsb
jmp
out
jnp
or
mov
mov
fisttpl
push
mov
addr16
outsb
leave
push
xorb
cmpl
jb
xchg
pop
and
and
push
orl
icebp
or
test
imul
or
loope
cmp
stc
mov
jmp
outsl
movsb
scas
int3
xchg
xchg
int
adc
testb
mov
push
fistl
sti
xchg
cmpsl
test
sbb
mov
fs
cld
loopne
push
scas
mov
sbb
aam
mov
in
inc
mov
xchg
sbb
pop
repz
cmp
loopne
jg
cmp
dec
movsb
divb
xor
addl
shlb
shld
sbb
dec
push
push
lret
imul
cmp
adc
add
or
je
pop
mov
mov
ficompl
sub
clc
lds
push
push
mov
in
mov
lock
lds
stos
aam
and
mov
adc
add
ja
inc
jge
mov
xchg
pop
decl
dec
mov
xor
xor
xchg
push
rclb
fcmovnb
mov
cmc
inc
dec
ss
push
inc
dec
in
stos
inc
xor
fstpt
pop
dec
adc
sbb
jnp
pop
and
fst
xor
dec
lods
jge
mull
adc
xor
fsub
repz
sbb
add
into
pop
popf
lret
das
stos
mov
imul
mov
and
setne
xchg
push
xlat
jb
cmpl
add
dec
xchg
and
sub
mov
les
sub
xlat
or
ss
aas
in
adc
mov
fcoml
xchg
mov
cmovbe
pusha
sahf
pushf
sub
shlb
lock
jae
dec
insb
jo
aas
lcall
inc
push
add
inc
mov
fidivl
or
cwtl
test
adc
adc
lock
xchg
lods
jge
test
inc
vmread
lock
out
inc
out
push
shll
std
negl
xchg
cmp
fldl2e
push
lods
mov
mov
sbb
cwtl
cmc
int
jb
push
std
mov
xor
xchg
cmp
je
push
rol
inc
sub
ret
xchg
xor
mov
adc
adc
jg
loopne
xor
sub
into
imul
jno,pn
pop
repz
jp
add
jo
and
xchg
fistl
lods
jmp
movl
popf
adc
das
jg
test
mov
jp
mov
cmpsl
and
cs
loopnew
hlt
shl
sub
sbb
fimuls
add
scas
popf
cmc
lock
cmp
cmp
push
repnz
aaa
mov
cmp
pop
pop
fmull
insb
decl
lea
mov
and
jmp
xlat
into
mov
in
fcoms
add
or
iret
pushf
ret
and
cmp
cmpb
loope
fs
mov
shrb
movsb
mov
int3
addr16
or
imul
test
inc
sbb
sub
mov
push
push
lods
adc
add
aaa
xchg
pop
pop
adc
xchg
inc
sbb
inc
mov
shll
mov
in
out
sub
jmp
mov
aas
sbb
aas
mov
pop
imul
mov
xchg
jmp
sub
push
js
rcrb
xchg
jnp
sbb
addb
xchg
pop
lcall
push
aas
add
leave
je
aaa
sbb
xchg
jecxz
cmpsb
xlat
push
lds
sub
shll
testb
dec
inc
cmp
cmp
cmp
or
dec
xchg
jnp
push
push
pop
dec
cltd
adc
sub
mov
ja
fcmovbe
rcrl
cld
adc
pop
xchg
sub
sbb
jno
pop
leave
das
adc
je,pt
test
dec
add
lock
add
push
push
inc
push
movsl
popf
insl
jbe
and
lcall
adc
mov
mov
or
xor
or
cwtl
mov
movsl
orl
inc
clc
jbe
jg
imul
cld
and
leave
stc
push
test
in
ret
pop
in
imul
jge
leave
inc
pop
mov
jl
xchg
insl
mov
stos
pop
stos
lods
test
out
xor
xchg
std
and
cltd
gs
xor
cmp
nop
into
add
lock
jns
shlb
jl
fmull
push
pop
popf
inc
push
in
mov
popf
jno
and
adc
rorl
pop
mov
mov
or
jl
and
pusha
mov
test
xchg
fistl
jl
add
les
cltd
pop
in
jge
mov
push
jecxz
pop
mov
test
or
cmp
xchg
in
pop
es
pop
xchg
mov
sbb
or
rcll
xchg
aad
or
pop
mov
and
xchg
fcomi
and
js
fisubl
adc
loop
hlt
push
adc
sbb
add
aad
imulb
inc
daa
jge
test
lret
sbb
pushl
xor
fldcw
clc
andb
xchg
dec
push
adc
push
fiaddl
push
mov
sub
out
or
shr
fbld
fdivs
movsb
pop
mov
sbb
push
jge
mov
pop
mov
mov
imul
adc
sub
lods
mov
xor
pop
and
imul
lea
add
inc
mov
xchg
inc
dec
or
adc
imul
out
pop
fldl
lds
inc
dec
xlat
call
cmp
leave
test
cwtl
sti
cli
sub
push
pusha
push
js
and
cmp
mov
cld
jmp
div
push
fistpl
int3
lods
repnz
adc
adc
std
sub
jle
pop
inc
bound
fcmovu
fldl
and
cltd
iret
or
sub
inc
sub
outsl
jle
mov
movsl
sbb
inc
jno
xor
and
cmp
adc
cs
movsl
adc
push
lcall
insl
push
xchg
lods
jno
cmp
adc
jbe
add
sbb
or
imul
pop
xchg
cld
shll
into
test
xor
xchg
push
int3
int3
push
aaa
repz
pop
ret
sahf
push
or
dec
adc
pop
shll
mov
cmp
movsl
or
mov
cmp
je
imul
add
imull
push
sub
shr
cltd
mov
dec
repz
lret
lret
push
fs
push
idivl
cmp
rcll
pop
aas
lock
loopne
cmp
xlat
lock
cwtl
push
mov
shl
xchg
in
push
push
pop
in
push
test
mov
jno
sub
cmp
in
fcmovu
iret
dec
jb
xor
mov
push
imul
lds
mov
sbbl
mov
jle
xchg
idivl
cld
push
cmp
xor
mov
popa
subl
cli
push
mov
rclb
and
scas
cmp
mov
mov
mov
cmc
inc
stos
faddp
movsl
mov
push
jns
push
test
adc
nop
stos
adc
jo
dec
outsl
scas
imul
and
sbb
out
pop
adc
sub
fcoms
pop
lret
jb
ds
pop
cmp
mov
outsb
jo
nop
mov
popa
xchg
incb
add
int3
jmp
pop
and
dec
mov
aas
cltd
test
pop
rclb
pop
movsl
cmp
cli
lds
clc
dec
mov
call
es
mov
daa
cmp
test
lret
es
int
sti
xchg
maskmovq
mull
cmp
xor
add
lods
dec
cmp
in
jns
nop
sti
dec
rorl
inc
add
jg
mov
dec
dec
pop
insb
addr16
pop
clc
sbb
outsl
loop
insb
pop
mov
mov
pushf
adc
shl
or
mov
mov
jbe
in
sub
cmpsb
imul
inc
ror
xchg
lods
test
test
push
sbb
pop
or
pop
or
pop
lods
outsb
ret
mov
mov
ret
xchg
into
decb
test
ljmp
lret
aam
js
mov
xchg
push
xor
int3
sbb
aam
lea
pop
out
xor
mov
dec
aas
pop
in
repz
pop
inc
jb
jb
les
cmpsl
mov
lahf
inc
fwait
mov
jbe
xor
xor
cmp
and
cmp
xchg
jl
pop
xor
adc
ret
xchg
or
pop
push
int
push
lcall
scas
test
shlb
leave
cld
lds
les
int
mov
int
jp
push
push
es
in
andb
test
pushf
mov
shrb
sbb
xor
push
mov
jle
jge
mov
xor
xchg
push
sbb
in
inc
or
inc
cmp
popf
insb
mov
out
ret
push
in
mov
jmp
fcompl
xchg
cmpsb
rolb
pusha
cwtl
imul
rorb
add
pop
daa
sahf
insb
push
and
std
push
jmp
cmpsl
loope
es
in
dec
mov
mov
movsb
int3
imull
pop
mov
mov
ds
sahf
jbe
sti
push
xchg
ljmp
lahf
aas
dec
mov
add
mov
jg
in
and
cs
cs
jb
push
out
xor
push
jmp
lock
sub
shrb
repz
mov
sub
sbb
jae
and
iret
cmp
cmp
aad
pop
jp
mov
inc
mov
sahf
inc
xor
xor
aam
lahf
dec
andl
pop
ja
jg
pop
xorl
mov
es
pop
ss
pop
add
lock
cwtl
nop
stos
mov
in
mov
lock
jmp
hlt
lock
jb
push
mov
addr16
add
jne
cmp
repz
into
lret
dec
insb
lea
scas
xor
add
cmpsl
data16
fisttpl
and
stos
mov
in
push
and
pop
jmp
out
les
ss
fmull
rclb
outsl
pushf
pmuludq
push
push
movsl
stos
pop
loop
cltd
ljmp
sbb
xchg
ljmp
sub
out
pause
mov
xchg
jns
xor
adc
pop
jg
cmc
adc
and
or
adc
lea
stos
fcoml
repnz
mov
mov
jg
cltd
lcall
lea
fs
add
orb
in
lret
pop
cmc
or
leave
xchg
add
push
mov
add
lds
imul
call
mov
pop
and
xchg
jnp
stos
lahf
pop
push
mov
out
gs
fisubrl
inc
push
cwtl
xor
dec
inc
xor
in
fstl
pop
sbb
aam
or
inc
mov
icebp
pop
outsl
mull
test
jae
fists
imul
repnz
push
leave
daa
ss
inc
test
mov
stos
adc
xor
mov
jo
jmp
cmpsl
mov
push
inc
hlt
or
arpl
mov
mov
jp
addr16
mov
pop
rcrb
lods
popf
mov
mov
mov
lret
test
daa
mov
push
ficoml
inc
insl
stc
cmp
xchg
add
mov
add
ret
inc
test
push
test
ds
inc
inc
int
in
pop
mov
lret
cmpsb
adcb
pushf
stos
cltd
enter
sbb
jo
arpl
int3
ja
fdiv
inc
xorb
pop
into
inc
xchg
fidivl
fmuls
in
cmp
and
roll
aas
imul
idivl
mov
push
mov
orb
pop
mov
inc
sub
aaa
sbb
leave
mov
ret
mov
sahf
mov
sbb
xchg
mov
js
shll
inc
xor
and
jp
loop
fs
pop
sub
popf
sbb
jae
jne
sub
cmpsl
rclb
or
sub
lahf
lods
jne
push
mov
cs
jecxz
or
pushf
pop
inc
mov
inc
cwtl
jle
cltd
adc
mov
push
add
lds
push
arpl
fnstenv
ficomps
cmp
test
pop
movsb
scas
jno
mov
mov
mov
dec
hlt
cmp
clc
ret
ljmp
iret
inc
jo
inc
mov
add
pushf
xor
sub
add
stos
mov
std
hlt
jns
paddd
std
test
and
outsl
imul
lea
mov
push
mov
xchg
lds
gs
loopne
jbe
jle
rcrl
popf
jge
rcl
inc
call
mov
mov
fwait
add
and
xlat
mov
dec
test
pop
loope
dec
xchg
push
push
test
fmuls
push
pop
fbstp
roll
lock
adcb
ljmp
push
call
out
jnp
das
lock
pop
and
mov
cltd
loop
das
je
jbe
test
sbb
cwtl
ret
pop
imul
mov
setns
add
inc
cli
popf
xor
jne
imul
mov
inc
xchg
mov
sub
pop
cmpsl
mov
xor
inc
mov
fisttps
cmp
rdpmc
cmp
lods
fxch
lret
test
cltd
and
pop
jmp
aaa
in
aam
lret
fnstenv
dec
sub
das
push
jge
test
jmp
jno
rcrb
mov
movsl
push
cli
test
cld
mov
stc
inc
mov
movsb
test
cld
sub
test
inc
push
andl
and
xchg
pop
mov
xchg
cmp
and
jge
out
push
mov
or
fsubr
lcall
and
cli
mov
pop
cld
pop
into
test
call
adc
cmpl
cltd
xchg
sahf
inc
popa
jno
and
pop
inc
pop
jge
jne
xchg
fistpl
jae
jge
nop
mov
scas
jmp
hlt
gs
pop
insb
cmpsb
and
outsb
bound
inc
adc
xchg
ds
mov
lock
jg
add
sub
or
jne
xorl
cmp
aad
test
mov
aas
bound
out
cld
adc
add
push
push
outsl
sbb
inc
cmp
or
sub
pop
mov
dec
repz
push
sbb
or
stc
dec
nop
dec
aam
jmp
push
dec
inc
mov
or
jbe
mov
sbb
and
pop
xor
repnz
inc
mov
push
cmp
xchg
test
jg
dec
xor
pop
and
xlat
std
mov
sub
xor
cmp
sbb
cltd
stos
cltd
cmp
inc
rcll
cmp
mov
mov
jbe
stos
leave
les
sub
repnz
and
and
es
dec
bound
fcompl
ficomps
mov
sbb
jo
test
xchg
or
out
xor
fisttps
out
es
addr16
push
cli
xchg
xchg
movsb
icebp
jecxz
repnz
xor
push
adc
cmp
add
adc
in
mov
testl
fisubs
test
cs
push
cwtl
mov
add
ds
shl
push
sbb
fldcw
cmpsb
pop
sbb
inc
movsb
jecxz
adc
mov
add
lret
inc
dec
xor
insb
sub
xlat
push
je
fdivrl
pop
push
fnsave
adc
add
mov
add
dec
sbbb
mov
fstps
cmp
into
and
push
jg
xor
dec
xor
jmp
je
fwait
xor
jno
adc
jge
mov
lods
adc
dec
mov
jo
and
cmp
dec
adc
div
cmp
test
push
fucompp
dec
cmpsl
ja
push
mov
cmp
mov
push
in
or
xorb
or
push
adc
imul
shll
mov
addb
cmp
xorl
decl
cmpsb
jmp
xchg
mov
pop
mov
fldt
adc
in
aad
jns
cmp
out
mov
jp
mov
or
xchg
add
das
jecxz
jl
je
aad
test
leave
and
outsb
pop
push
pop
fists
movsb
jl
adc
inc
pop
jae
xchg
jge
mov
mulb
addr16
loop
add
aam
sub
jmp
sbb
loope
xchg
xor
fnstcw
jno
dec
cld
dec
sbb
js
mov
push
pop
subb
jns
sub
xor
lea
fstpt
jb
into
jae
mov
mov
ja
hlt
and
test
cmc
ffreep
adc
dec
pop
xchg
out
xchg
xor
xor
jb
pushl
int
sbb
pop
fidivrs
mov
add
pop
xor
pop
popa
dec
fwait
adc
dec
cld
push
add
adcl
shlb
mov
ret
inc
inc
mov
ds
pusha
or
dec
ret
fidivrs
into
lret
push
push
xchg
adc
sub
lds
imul
dec
sar
fstpt
mov
xlat
aaa
gs
fs
sbb
push
das
aad
adc
adc
aaa
aam
sub
xchg
or
and
xor
or
mov
dec
or
ds
out
jo
mov
pop
push
add
insl
or
loopne
insb
jno
stc
shld
sub
lahf
test
rorb
hlt
jge
movsb
sub
and
mov
pop
mov
push
in
dec
cmp
aas
fmuls
addr16
ja
xchg
in
sti
insl
jns
loopne
xor
js
out
dec
pop
add
mov
int
pop
sub
push
icebp
add
mov
out
and
sub
fbld
jno
popa
call
mov
mov
mov
xchg
pop
and
nop
add
movnti
xor
jno
data16
bound
cmp
movsl
push
movsl
movsb
and
ja
fiadds
and
jo
cli
push
jg
and
inc
xorb
fcmove
push
popf
cli
rcr
add
adcl
xchg
into
insl
xchg
cmp
or
push
dec
int
add
xor
push
jbe
push
xor
data16
lcall
jae
ds
adc
xor
clc
push
add
xor
push
or
cmp
lds
cs
dec
loopne
lahf
and
xchg
mov
clc
aas
out
loopne
mov
loopne
jg
adc
outsb
sbb
hlt
inc
cmp
lret
imul
ja
sub
fs
mov
adc
adc
jns
or
mov
out
pop
icebp
mov
sub
mov
xchg
mov
push
and
sub
add
mov
sub
leave
test
orl
push
dec
xchg
roll
loop
dec
shll
cmp
cmp
and
out
add
lahf
xchg
sbb
insb
jnp
dec
sbb
popa
lcall
and
lds
push
xor
movsl
test
js
push
push
xchg
pop
test
orb
jle
aad
outsl
fwait
lret
pop
aad
int
and
scas
jnp
fistl
fsubs
or
pop
sbb
lods
sub
cmpsl
std
jl
ds
aas
test
clc
icebp
shr
fsubs
ret
insb
rcrb
loop
add
mov
inc
inc
insl
or
jnp
sub
add
out
adc
add
jb
test
sbb
mov
loope
jbe
aas
test
push
mov
push
popa
and
out
daa
pop
int3
push
pop
xchg
loop
cmpsb
mov
and
xchg
subl
adc
loopne
xor
ja
push
mov
push
ja
push
jns
xor
mov
icebp
mov
fs
xor
lods
dec
and
js
aas
dec
fiadds
fisttps
shlb
lods
aam
popf
das
and
xorb
ss
dec
adc
ret
xchg
push
adc
push
js
push
mov
ret
pop
mov
push
and
add
and
mov
xchg
cmp
or
adc
popf
sbb
jmp
and
std
test
lds
cmp
xor
and
movsb
pop
mov
push
push
ds
cmp
mov
mov
cwtl
and
imul
or
mov
dec
inc
imul
movsl
test
in
pop
sbb
xchg
add
clc
in
jmp
insl
push
or
mov
insl
jno
xchg
push
mov
mov
gs
pop
xchg
mov
and
pop
das
cmp
xor
cmp
out
push
shll
add
pop
test
inc
mov
inc
and
roll
mov
data16
nop
dec
int
pop
popf
sub
xchg
ret
cmp
cmp
in
jae
out
push
stos
jne
fidivrs
sar
out
subb
cmpsl
sub
in
mov
sqrtps
test
mov
sub
mov
mov
and
and
push
test
das
dec
dec
push
pushf
mov
outsb
push
or
outsl
out
or
or
or
imull
inc
cmpsl
sub
and
add
sbb
inc
inc
icebp
movsb
cwtl
popa
mov
push
neg
std
xor
sbb
lahf
mov
ja
xchg
mov
mov
pop
pop
aas
mov
adc
fnstcw
fimuls
ret
xor
pop
aad
incb
xchg
mov
xor
nop
fs
scas
movsl
lahf
outsb
mov
sbb
mov
mov
sbb
mov
push
adc
sbb
push
sbb
es
dec
xor
add
push
fiaddl
fcoms
push
mov
fisubrl
in
lahf
add
add
addr16
test
inc
pop
sahf
cs
loopne
and
mov
cmp
cmp
xor
addr16
sub
add
and
dec
jl
int
add
loopne
sub
xor
cli
shlb
inc
pop
mov
addr16
sarb
lahf
clc
push
sub
das
or
mov
push
xchg
je
jge
lock
and
and
stos
test
sub
mov
lods
push
pusha
push
or
xchg
rcr
inc
pop
pop
in
imul
inc
mov
pop
icebp
int3
iret
lahf
add
jp
sub
in
mov
jbe
xchg
ret
jecxz
call
dec
and
inc
inc
call
lea
jl
fidivl
ds
insb
adc
js
lds
pop
xchg
or
andb
sbb
push
mov
shlb
jl
pop
mov
icebp
lahf
imul
arpl
pop
mov
xlat
mov
pop
and
push
test
xchg
loope
inc
pushf
mov
sub
pop
and
mov
cmp
xor
and
mov
sub
daa
lea
decl
aad
sbb
js
cs
push
in
mov
cwtl
cmpsb
pop
clc
xor
jbe
xchg
sub
test
out
std
loope
xor
fldt
ja
mov
mov
mov
cmpsl
int
js
mov
mov
test
call
sbb
xor
int3
inc
mov
mov
in
xor
roll
lea
subb
pop
popa
push
mov
mov
ficompl
mov
push
lahf
xchg
mov
pop
enter
mulb
mov
push
icebp
inc
jbe
pop
iret
jb
test
fidivrl
jl
stos
xchg
mov
test
lcall
dec
cmpsl
adc
cmp
mov
aad
std
cli
inc
push
in
sub
je
ret
repz
mov
ja
jp
inc
sbb
bound
jecxz
mov
xor
adc
ds
pop
lea
lret
sar
xor
pop
mov
sub
jle
mov
cmp
fs
sarb
lcall
cmp
fdivl
inc
mov
cmp
inc
call
lods
sbb
cltd
mov
sahf
sub
daa
dec
test
xchg
or
jmp
mov
cwtl
jnp
jecxz
lods
test
lret
adc
dec
movsl
stos
push
sub
mov
fstl
call
in
dec
fbld
add
fnstsw
mov
and
sub
iret
xchg
xchg
jae
repz
dec
xchg
in
push
in
dec
movsl
outsb
popf
aam
jg
and
add
insb
in
jecxz
dec
mov
jno
call
rcrl
push
add
test
sub
shlb
in
sub
jnp
data16
imul
fldt
mov
fistps
mov
cmp
jne
ds
xor
adc
ss
decl
push
sub
dec
ss
xchg
cld
push
clc
adc
ja
js
push
pop
imul
lods
fbld
int
movsl
cmc
decl
stc
es
add
mov
add
gs
or
push
sbb
int3
pushf
inc
mov
xor
shlb
pop
push
fiaddl
mov
jle
inc
pop
loope
nop
cld
movsl
jecxz
loop
fwait
movsl
push
cli
dec
pop
loopne
xchg
push
or
push
sbb
or
test
aad
pop
mov
push
lods
sbb
aad
int
dec
loopne
mov
ljmp
fildll
push
mov
add
xor
cmp
xchg
dec
pop
push
lods
adc
fnsave
loopne
pop
and
stos
jne
jp
iret
out
adc
lcall
jae
mov
movsl
xor
and
dec
shrb
ja
arpl
jp
xchg
ljmp
scas
stos
lods
repnz
leavew
inc
or
sysexit
daa
test
and
in
daa
mov
mov
fwait
push
iret
or
cld
add
stos
dec
cmp
test
adc
mov
sahf
int3
leave
xor
cmp
out
adc
adc
out
inc
mov
add
in
push
cld
mov
stos
fs
insl
jle
dec
imul
sti
adc
ret
subb
push
inc
xor
mov
lock
imul
out
xchg
mov
dec
jecxz
das
xor
push
push
outsb
mov
dec
lods
jp
int3
sub
fnsave
inc
add
add
mov
ljmp
ds
leave
cltd
les
dec
push
adc
ret
call
fisttpl
movl
cld
push
fisttpl
pop
ss
push
xchg
pop
lcall
sbb
xchg
cmpsb
popf
movsb
ret
adc
dec
loope
jmp
mov
sbb
es
cs
ret
jno
insb
jmp
imul
cmp
int
mov
jp
or
mov
cmp
and
mov
mov
enter
sbb
shl
and
testl
push
arpl
inc
push
jle
ja
adc
or
mov
sti
inc
scas
push
xchg
dec
mov
or
and
xchg
inc
cwtl
adc
sub
test
std
int3
lds
adc
pop
pop
xchg
jmp
jmp
jecxz
sub
mov
rcll
imul
cmp
repz
add
leave
je
mov
mov
in
xchg
pop
movsb
or
xchg
incl
mov
enter
xchg
sbb
pusha
cmpsb
xchg
jle
sbb
sub
or
mov
ss
fistpll
pop
and
popf
adc
mov
gs
jne
es
cwtl
sub
xor
je
push
lret
cmc
sahf
xor
cmp
inc
lds
loope
clc
ret
in
jnp
cltd
lcall
test
cltd
xor
pop
push
adc
hlt
test
mov
arpl
dec
and
or
test
push
fcomi
test
lods
movsl
loope
pop
pusha
ret
pop
push
insb
in
incb
or
inc
sbb
or
push
inc
aas
test
cmp
shl
fistl
clc
fidivrl
dec
push
loopne
or
cli
enter
lret
fs
inc
int3
sub
ds
dec
push
notl
test
test
sbb
ss
std
lcall
or
mov
jmp
sbb
shll
sahf
jno
and
mov
jge
xor
out
or
ret
jbe
mov
and
add
sub
pusha
xchg
sub
test
repz
fidivrs
in
mov
push
test
mov
sbb
fwait
ds
and
cmp
ret
mov
mov
es
and
push
ja
xchg
int3
pop
jo
jp
or
cmp
add
arpl
hlt
xor
or
nop
jne
cmp
sub
jno
sub
mov
adc
sbb
mov
lock
xor
sbb
pushf
xor
stos
jae
out
das
mov
push
stos
sub
iret
iret
popf
mov
aad
xchg
testl
mov
or
dec
lcall
sub
fistps
xor
mov
sbb
stos
push
arpl
iret
jb
repz
push
pop
es
lret
je
xchg
add
pop
push
or
testl
jecxz
add
add
les
xchg
jp
mov
push
mov
iret
testl
stos
xchg
pushf
sbb
or
insb
add
repnz
sub
insl
sub
icebp
sbb
in
cltd
icebp
data16
push
insb
pop
add
fnstenv
mov
mov
out
icebp
lret
mov
jnp
mov
xchg
dec
fisubrl
in
imul
sahf
subl
jmp
pop
add
sbb
js
pop
mov
ja
imul
jne
scas
push
sub
sbb
insb
insb
xchg
popf
push
imul
gs
insl
sub
je
xchg
jecxz
je
mov
leave
and
mov
in
in
pop
adcl
push
mov
xchg
pop
nop
das
dec
pop
adc
mov
cmp
push
xlat
stos
xor
or
popf
outsl
insl
or
mov
hlt
sub
scas
aad
cmovle
add
out
es
arpl
mov
leave
or
sbb
jmp
xchg
add
shll
outsl
mov
xchg
sbb
jne
inc
out
or
sbb
pop
sbb
mov
inc
sub
movsl
lock
or
cmp
leave
enter
in
pop
lret
jae
mov
xchg
cmpsl
inc
xor
in
adc
fsubp
xor
test
and
pushf
test
mov
adc
in
sbb
test
mov
jns
mov
fwait
in
mov
aas
pop
int3
dec
lods
mov
mov
or
pop
repnz
adc
xor
add
int3
out
insb
leave
mov
mov
push
ss
inc
fldt
sbb
xchg
js
sub
ret
fsts
popa
sahf
inc
push
pop
arpl
add
sub
sti
inc
jo
mov
rol
repz
insl
and
xor
in
mov
ss
dec
imul
out
hlt
in
cmpsl
ja
mov
fcoml
mov
nop
stc
xor
jmp
push
pop
ret
inc
sub
mov
sub
push
je
inc
add
pushf
pop
arpl
sub
push
dec
jmp
add
loop
in
test
lea
push
push
insl
inc
fdivrp
cmp
outsl
insb
xor
fs
out
pop
neg
cmp
out
pop
push
dec
sbb
inc
jno
inc
push
mov
mov
adcl
xor
dec
inc
pop
mov
mov
stos
enter
jb
addr16
les
mov
into
lcall
push
fcmovnu
sbb
xlat
or
add
pop
sbb
test
test
dec
popf
loope
and
inc
pop
stos
sbb
pop
mov
cltd
inc
pop
stos
icebp
mov
or
pop
inc
jnp
mov
cmpsb
cwtl
xor
adc
mov
aam
xchg
les
add
sbb
fisttps
in
pop
jbe
std
mov
sub
mov
cmp
cmp
ret
cld
xchg
pop
sar
jecxz
mov
add
push
mul
mov
fisubl
iret
xchg
adc
cmp
cs
int3
stos
dec
mov
jne
stos
outsb
test
jl
xchg
mov
scas
lea
cwtl
add
insl
sbb
ljmp
adc
or
in
xchg
mov
fnstenv
adcl
sarl
sbb
jae
jb
aas
lcall
call
cli
cmp
pop
js
shlb
jge
sub
cmp
jl
fstps
out
mov
jp
push
add
xorl
rclb
ss
emms
or
adc
fldt
add
gs
adc
stos
ret
scas
popf
mov
jne
shl
out
add
bnd
cmp
addl
nop
push
loope
das
jmp
push
pusha
hlt
push
cltd
inc
rclb
js,pn
cmp
lds
daa
xchg
push
inc
push
sqrtps
rolb
or
sub
repnz
js
fmul
rcll
xchg
dec
testb
sbb
mov
mov
popf
roll
sbbb
mov
lret
xchg
dec
pop
xor
jno
mov
pop
xchg
push
add
jns
push
lcall
pop
into
mov
sbb
mov
mov
sti
addr16
fsts
push
cmpsl
cmpsb
fadds
jnp
push
and
mov
jecxz
pop
mov
dec
xor
cltd
movsl
sti
leave
sub
mov
arpl
lret
fnsave
inc
xchg
cwtl
adc
adc
dec
out
mov
fisttps
xor
mov
inc
movsb
imul
call
fnstsw
sub
ja
les
mov
loop
out
xlat
or
xchg
dec
pop
dec
repz
jmp
and
sbb
inc
test
pop
inc
leave
pushf
daa
bound
sbb
in
shrl
out
repz
push
push
aam
and
push
mov
fs
or
nop
decb
mov
test
pop
inc
and
pop
and
or
in
fcmovu
in
data16
outsl
shrl
in
fstpl
inc
add
add
sub
dec
shlb
cmp
mov
sahf
imul
push
repnz
aaa
mov
lret
addr16
jne
nop
lret
jge
les
jnp
mov
cld
and
hlt
inc
push
adc
mov
fidivrs
and
insb
sahf
push
in
nop
push
xor
repz
xchg
test
fiaddl
fcmovu
cmp
data16
adc
scas
cli
and
sub
pop
loopne
or
mov
or
iret
loopne
xchg
add
or
into
mov
or
xchg
push
test
mov
or
xor
mov
mov
imull
lods
int3
mov
pusha
dec
dec
lcall
int3
pop
jle
aas
xchg
mov
and
jp
packssdw
jmp
adcl
add
push
pop
repz
sbb
xchg
jl
mov
jnp
lds
div
daa
cwtl
mov
mov
lahf
push
fwait
fwait
push
mov
shlb
push
xor
popa
and
mov
xor
lret
ret
jecxz
insb
push
mov
jl
or
xchg
mov
mov
rcll
inc
jo
fisubrl
inc
adc
mov
or
pop
rcll
dec
jge
sub
mov
pop
push
dec
scas
rorl
fstpt
push
repz
js
jecxz
mov
loopne
mov
gs
mov
ss
icebp
or
aam
pop
data16
xchg
adc
push
xchg
int3
or
loope
emms
mov
loop
outsb
mov
in
or
cmp
shrb
movsb
leave
inc
and
and
pop
adc
hlt
orl
pop
ja
add
add
in
imul
or
pop
int
bswap
fwait
repz
or
fcompl
inc
add
mov
icebp
ja
bound
and
adc
mov
xor
imul
xor
jecxz
jbe
mov
arpl
leave
sub
dec
add
cmp
xlat
inc
jmp
lds
dec
adc
ds
aad
cmp
daa
fidivl
push
notb
int3
test
cmp
push
dec
sahf
imul
mov
xchg
arpl
je
xchg
cmp
in
dec
cmp
in
jecxz
push
cmpsl
std
fidivrl
imul
jecxz
mov
fptan
xchg
sahf
fistps
add
pop
push
xor
mov
xchg
xor
pop
sbb
and
dec
inc
pop
sub
add
jae
mov
xor
cmp
cmpsl
jae
stc
lcall
enter
xor
sbb
ljmp
or
mov
xchg
inc
jp
xor
jae
xlat
idiv
xor
mov
int
xor
and
popf
incl
stos
adcb
incl
fnsave
addr16
mov
dec
stos
ret
sub
out
inc
fildl
sbb
adc
sbbl
add
clc
mov
cmp
xchg
sub
sub
lahf
das
hlt
adc
sub
int
js
mov
sarl
sub
jmp
adc
inc
xchg
movsb
mov
and
and
les
xchg
jecxz
fldt
jg
sub
xchg
rcrb
add
dec
or
xor
testb
mov
pop
je
std
xor
out
xchg
lcall
xor
or
sub
leave
or
fcom
jb
arpl
jnp
movsb
jae
bound
popf
jo
pop
flds
sbb
lds
jge
pop
hlt
push
jb
test
mov
mov
shl
inc
push
add
push
xor
push
shl
or
shrb
xchg
xor
mulb
mov
stos
inc
mov
xchg
jge
and
jg
ret
aad
xor
jbe
xlat
mov
movsb
in
mov
lds
add
push
mov
add
xchg
daa
cmpsl
mov
xor
adc
outsb
push
or
movl
push
pop
scas
ja
xor
jne
mov
faddl
int3
movsl
mov
lock
fcom
mov
stos
cmp
or
pop
fstpl
cmp
lcall
ds
adc
in
cltd
test
stos
xor
sbb
cmp
in
lods
lret
jae
cmpsb
not
aad
cmp
outsl
and
cmpsb
mov
jae
fs
adc
push
lods
in
sti
rcrl
mov
or
pop
xchg
fcomps
sti
dec
mov
sbb
lahf
into
sti
inc
imull
pop
sub
out
pop
mov
and
aad
push
lret
or
sahf
pusha
xchg
or
call
push
cmp
pop
cmp
dec
lea
xchg
push
fwait
or
cmp
jp
out
lahf
push
lds
jge
or
sub
push
lea
sub
xorps
das
mov
aam
adc
add
push
fidivrs
sub
rcrl
adc
dec
push
inc
lahf
lock
adc
push
nopl
js
pop
push
out
jns
sbb
icebp
cmp
pusha
aad
lret
xchg
daa
cmp
xorl
jmp
icebp
mov
or
sbb
add
fcmove
insl
sub
inc
jo
push
sub
adc
cltd
jmp
pushw
insb
inc
loopne
aas
dec
sbb
cmp
push
in
pop
pop
cld
test
das
or
mov
subl
nop
inc
stos
shl
sub
fwait
test
notb
addl
jne
pop
aad
push
or
push
pop
popf
sub
cs
test
sub
mov
ror
repnz
bound
jecxz
jbe
lods
insl
aam
popl
in
cmp
test
or
pusha
out
cwtl
jp
in
mov
inc
fcomps
pushf
jg
pop
jl
arpl
push
imul
call
repz
xchg
pop
hlt
aaa
mov
int3
mov
aaa
aam
push
in
xchg
and
mov
pop
stos
test
sub
in
aaa
lea
xchg
lret
pop
les
pop
cs
shl
test
mov
es
and
cmp
inc
scas
push
sbb
pop
popf
test
fdivrl
push
fucomi
cmp
mov
adc
mov
int3
dec
sbb
or
jmp
xlat
xchg
test
es
je
out
xor
mov
roll
lods
rep
dec
adc
push
test
jns
pop
sbbb
mov
cli
ss
xor
and
pop
push
xlat
push
ss
repz
xchg
jmp
adc
push
xlat
addr16
add
sub
jns
and
or
cmpsb
rcrb
fisubrl
scas
cld
lds
ficompl
orb
gs
in
data16
cmp
xchg
addl
sub
xor
lahf
cmp
sbb
scas
mov
cmp
inc
scas
dec
cmp
or
jnp
xchg
mov
out
inc
pop
push
fidivrl
xchg
push
push
xchg
jbe
stos
ret
into
and
pop
sbb
and
ret
adc
push
lcall
clc
rcrb
lret
jecxz
xchg
inc
push
lret
dec
fidivrl
das
pop
push
xchg
arpl
leave
mov
mov
aam
jge
mov
xor
lret
pusha
xor
sti
xor
pusha
push
fdivrl
mov
jae
movsb
ljmp
sbb
adcb
or
mov
cmpsl
icebp
xor
test
pop
lds
push
jns
popf
out
mov
hlt
pop
xchg
shrb
std
mov
push
push
call
fisubrl
mov
in
mov
ret
pop
push
stos
mov
rcll
test
int
or
sti
add
ret
sti
sub
mov
ds
ja
aas
adc
pushf
jae
int3
test
xchg
popa
sahf
xchg
ljmp
mov
cmp
inc
hlt
inc
out
mov
sub
cmpsb
inc
xor
arpl
lret
mov
mov
cmp
arpl
popf
fstps
pop
mov
insb
cmp
fcoml
inc
xchg
insb
jp
adc
and
nop
push
mov
rorb
imul
pop
sti
jo
testb
je
pcmpeqb
subb
pusha
cwtl
push
shll
pop
add
cli
popf
cli
rorb
das
push
pop
cmp
mov
jecxz
and
fidivs
xchg
stc
dec
inc
leave
aaa
iret
repz
mov
inc
mov
pop
push
shrb
dec
lods
shll
adc
out
xchg
add
or
cmpsl
mov
push
xchg
out
add
fs
mov
jmp
fbld
adc
lea
divb
mov
hlt
in
mov
test
sub
mov
adcl
inc
pop
lret
push
xchg
dec
in
ja
lods
sbb
fwait
insl
mov
jne
scas
or
hlt
daa
insl
in
jg
push
jmp
xchg
movsl
mov
xchg
mov
inc
sarl
mov
xor
enter
imul
test
lods
jle
mov
pop
pop
ljmp
xchg
push
dec
or
test
ja
pop
pop
testb
flds
into
dec
aaa
aas
xchg
pop
sbb
stc
add
out
fldcw
push
jbe
pmaxub
pop
out
ret
ss
jae
add
lret
dec
imul
mov
inc
lds
test
aam
sub
pop
test
outsb
adc
popf
in
imul
and
cmpsl
mov
xchg
adc
clc
add
pusha
xchg
pop
push
xchg
adc
cmp
insb
mov
inc
fs
repz
xlat
stos
insb
adc
addr16
pop
daa
jmp
icebp
cltd
jecxz
inc
lcall
insl
mov
xchg
and
jno
inc
push
cmp
leave
shl
loope
xor
adc
push
cmp
ja
dec
imul
push
imulb
ss
inc
jne
outsl
sarl
adc
imul
mov
lods
fwait
insl
fisubrs
jb
mov
mov
mov
jns
mov
sbb
pusha
cltd
or
insl
mov
or
bound
ds
or
iret
pop
imul
and
arpl
xorb
lods
repnz
test
nop
test
jle
jmp
push
fnsave
outsl
mov
cs
gs
ljmp
enter
mov
mov
aam
dec
cmp
sahf
jbe
popf
sbb
mov
xchg
pop
hlt
xlat
push
into
jg
add
fildl
ret
cmc
jmp
push
pusha
js
push
aaa
mov
and
add
mov
fstps
jp
das
pop
mov
push
xor
repz
mov
xchg
pop
xchg
test
in
iret
mov
xor
jbe
js
clc
arpl
fndisi(8087
dec
mov
inc
loopne
hlt
enter
decl
loope
adc
loope
lahf
cld
nop
mov
pop
mov
leave
xchg
insb
jecxz
insl
fcompl
popa
test
orl
sti
outsb
sbb
adc
negl
iret
ret
lret
mov
lds
movd
and
add
loope
js
fstps
or
mov
xchg
lret
scas
mov
fwait
dec
push
roll
insl
pushf
mov
dec
and
and
jle
mov
xchg
aas
mov
int3
mov
sbb
and
adc
and
test
movsb
mov
lods
push
mov
sti
dec
ficomps
mov
sbb
test
imulb
and
adc
not
and
and
mov
jg
cmovns
mov
fmull
jb
shll
push
and
cli
jnp
ss
mov
loop
dec
scas
mov
sbb
adc
mov
cld
inc
add
popf
mov
movsb
lret
xchg
ja
cld
and
add
push
in
and
add
das
fs
mov
dec
out
inc
sub
pop
test
xchg
lods
sub
fimull
sbb
push
mov
push
xchg
pop
push
and
jno
popf
sbb
ljmp
lahf
mov
fsubs
sti
leave
push
fadds
xchg
dec
dec
ret
lret
pop
clc
or
push
out
je
inc
in
mov
mov
in
and
jnp
into
in
xchg
xchg
add
sti
sub
insl
sub
mov
push
mov
or
in
stos
loopne
sbb
std
call
sbb
or
repnz
or
sarl
mov
int
add
out
das
subl
les
aas
mov
aaa
cs
xchg
inc
roll
cmp
xchg
sub
push
mov
jmp
test
push
pmulhuw
in
jl
call
push
hlt
inc
in
stc
test
add
rcll
or
mov
jnp
xor
int
pop
cmc
add
cmp
sahf
sub
xchg
lret
push
push
push
xchg
movsb
aam
das
pop
out
inc
jb
mov
cmp
xchg
mov
sti
bound
imul
int3
int3
lods
cmp
add
dec
stos
test
pop
mov
aad
cmp
pop
sbbb
int
push
mov
popf
outsl
pop
xchg
aas
and
adc
jns
or
mov
popa
and
cmp
ret
sbb
push
mov
jae
int3
lea
mov
loope
jmp
aad
xchg
inc
cmpsb
mov
or
sub
cmp
cwtl
xchg
or
in
fst
sarl
add
addr16
scas
stos
mov
icebp
stc
stos
test
push
mov
rsm
jnp
and
and
push
js
push
lds
es
sub
inc
mov
xchg
xchg
xorps
cmp
xlat
pop
add
push
xlat
cmp
inc
insl
add
add
movsl
inc
push
jns
imul
push
adc
mov
mov
test
aam
mov
sbb
test
push
adc
daa
pop
insb
jle
aad
xchg
inc
dec
and
inc
repz
mov
xchg
mov
jnp
inc
pusha
mov
push
mov
adc
out
dec
add
mov
add
and
adc
fmul
adc
jno
push
dec
mov
shlb
cmc
insl
sbb
imul
enter
push
ret
sbb
subl
stos
clc
mov
and
mov
loopne
hlt
mov
insl
sbb
lret
pop
test
cmp
cmp
add
mov
call
sub
fiaddl
loopne
fdivrs
mov
xor
add
inc
adcl
xchg
test
pop
pop
mov
rolb
imul
and
cli
insl
sbb
jns
icebp
push
add
out
fsub
xor
repz
push
daa
test
add
dec
push
cmp
jne
inc
sbb
push
xchg
imul
stos
inc
sub
cs
or
dec
cmp
jbe
jp
loope
fs
dec
pop
ds
scas
stos
ss
insl
stos
add
cmc
dec
pop
fsubrl
push
out
mov
mov
aas
adc
jne
loopne
je
sbb
push
adc
std
sahf
test
xchg
or
sahf
lds
in
sbb
xor
and
add
sub
test
or
add
mov
pusha
inc
insb
push
sub
call
xchg
repnz
pop
dec
sbb
das
ret
cmp
dec
pop
int
mov
notb
movmskps
sbb
outsl
pusha
jno
lds
shlb
shlb
xchg
mov
mov
bound
cmp
dec
ljmp
mov
mov
jp
loop
sbb
mov
fwait
jg
scas
or
fsubrs
addr16
mov
inc
xchg
hlt
enter
mov
xchg
fmuls
jno
mov
adc
xor
mov
pop
repz
pop
push
stos
or
dec
pop
mov
jl
sbb
and
mov
sub
sub
cld
xchg
xchg
jg
in
jno
repnz
or
ret
pop
in
xchg
leave
mov
aaa
add
stos
fst
push
bound
add
or
jle
stos
adc
mov
bound
fidivrl
sti
adc
loop
xchg
daa
mov
push
xchg
jg
stc
lret
push
fdivrs
fs
ret
mov
jecxz
jnp
aas
push
shlb
mov
in
stos
leave
adcb
mov
and
pop
xchg
jecxz
shlb
pop
rcrb
xorb
in
jge
push
xchg
mov
jae
loop
mov
mov
outsl
lahf
mov
in
cld
data16
adc
lret
mov
dec
push
xor
loopne
imul
mov
adc
xor
jne
mov
icebp
pop
push
push
loopne
cmp
je
scas
insl
push
fistl
sahf
sbb
test
add
xor
adcb
sub
jle
jbe,pn
in
sbb
in
add
mov
lea
ret
sbb
shrb
jo
mov
add
jp
jg
stc
in
movsb
imul
out
mov
and
inc
addr16
dec
and
cltd
mulb
xchg
into
pusha
add
and
push
mov
out
dec
pop
sbb
nop
jbe
dec
and
mov
loopne
in
stos
popf
call
es
pop
xchg
scas
mov
inc
gs
add
jmp
outsb
pop
sub
mov
pop
mov
dec
mov
cmp
in
cmp
jp
adc
jmp
or
cmpsl
call
and
in
bnd
mov
out
outsl
cmp
inc
and
adc
xchg
dec
mov
in
xchg
mov
mov
pop
push
cmpsl
popa
mov
dec
sub
cld
inc
dec
notl
jb
ret
push
and
das
loope
xchg
stos
pop
icebp
or
dec
loopne
loope
push
ss
cltd
jl
lcall
mov
inc
inc
push
xchg
mov
cmc
pop
insb
jae
cmp
xor
fcmovnb
pop
xor
push
or
adc
nop
pushf
inc
mov
jo
jl
movsl
adcl
ds
mov
xchg
mov
pop
jbe
or
insl
fdivs
pop
cmp
inc
out
mov
inc
push
out
add
aas
out
mov
js
mov
jg
inc
sbb
and
mov
jae
xchg
sete
pop
dec
mov
test
push
inc
orl
shll
and
pushf
out
scas
dec
mov
ret
and
cmp
clc
scas
xchg
and
sahf
in
dec
insl
ds
aad
hlt
scas
nop
rcll
jle
in
stos
inc
jne
shlb
jno
lcall
jno
mov
fdiv
clc
icebp
or
mov
dec
out
lmsw
sub
sbb
inc
stc
jae
jl
jmp
jno
add
mov
pop
pusha
cwtl
arpl
xchg
mov
sub
mov
push
int3
cmp
inc
or
jp
xchg
aam
in
push
je
aaa
enter
xor
xchg
dec
cmpsl
jae
dec
outsl
js
movsl
mov
or
jae
pop
ljmp
test
cmpsb
or
xchg
and
dec
push
fimuls
mov
test
and
mov
orb
jmp
jbe
lcall
daa
or
fbld
push
mov
enter
xchg
ljmp
xor
pushw
push
ja
xchg
out
fnstenv
or
mov
stos
pop
enter
les
or
and
sahf
dec
mov
cmp
dec
or
roll
xchg
jp
pop
imul
dec
cltd
jg
loope
push
js
ljmp
out
push
shrl
and
loopne
sub
or
imul
out
jbe
xchg
or
lea
push
repnz
repnz
stos
imul
or
cwtl
lahf
leave
nop
inc
add
daa
dec
icebp
and
dec
jg
scas
mov
xchg
imul
add
sbb
push
or
testl
idivb
movsl
ret
push
add
pop
test
cmp
hlt
cli
jns
add
inc
push
push
popf
or
scas
xor
adc
push
adc
xchg
addl
outsb
sbb
addr16
mov
test
call
and
arpl
por
and
mov
outsl
inc
pop
insb
adc
idivl
movsl
adc
dec
pusha
mov
neg
test
addr16
mov
out
fiaddl
xchg
jecxz
mov
scas
adc
out
or
push
xor
int3
mov
stos
mov
fs
push
cltd
outsl
or
test
sbb
xorl
into
dec
mov
jae
mov
popa
mov
jecxz
or
mov
dec
mov
arpl
sub
ja
cmp
out
mov
adc
mov
xchg
mov
mov
pop
out
in
xor
les
ds
sub
adc
push
fcmovnb
das
adc
cmpsl
xlat
xchg
xor
stos
leave
add
stos
sbb
inc
xchg
add
and
jmp
aam
sbb
out
add
imul
adc
bound
clc
cmp
insb
xchg
aaa
div
test
push
lods
js
ljmp
and
sub
inc
sarl
jl
lret
fnstenv
in
or
and
adc
xor
ficomps
or
cmp
outsb
lods
out
add
sbb
call
adc
cmp
pop
push
in
into
int3
rorl
sub
lahf
jmp
pop
and
jle
add
xchg
popf
mov
dec
mov
std
ja
movsl
mov
dec
xchg
in
xchg
in
xor
popf
call
inc
cmpsl
sbb
icebp
call
scas
mov
cmp
loop
mov
sub
pop
sub
dec
adc
sub
emms
sarl
sbb
inc
aad
pop
ret
jmp
mov
std
lret
sub
xchg
adc
shll
xchg
jle
pop
pop
inc
rcll
scas
insb
adc
and
loope
pop
jecxz
outsb
ret
dec
fwait
lods
imul
push
mov
cmpsl
das
sub
dec
cmp
aaa
jno
ror
or
add
xchg
mov
sbb
call
and
mov
stc
int3
and
mov
dec
cmp
fcom
into
lcall
cld
pop
sbb
cmp
xchg
leave
je
test
shl
add
ljmp
mov
ss
cmc
ror
out
mov
xchg
test
js
adc
xchg
test
cmp
jno
pop
jo
icebp
push
inc
dec
mov
imul
sub
ja
fisubl
xchg
push
scas
lret
cmp
mov
cmp
xlat
cmpsb
sbb
out
push
frstor
movsb
nop
aam
inc
cmp
daa
add
and
cld
mov
mov
sub
jle
popf
xchg
ret
pop
inc
jne
adc
mov
inc
jl
aas
pop
add
mov
shlb
stos
ja
enter
jno
shll
stc
fnstenv
lock
test
int3
sbb
fistpl
jno
inc
fstl
xchg
mov
je
out
in
jo
cmpsl
imulb
mov
andl
push
add
mov
jb
and
ljmp
fcomip
lret
cmp
inc
sub
and
loope
ja
es
adc
fs
xchg
xor
mov
lcall
push
xor
lods
or
jo
push
mov
ljmp
jo
dec
mov
pop
std
sub
mov
jmp
or
mov
lods
and
pop
cmp
fildll
jno
push
loope
mov
sub
cwtl
fiaddl
loopne
std
mov
inc
mov
xor
pushl
out
cmpsl
cmpsb
jle
test
out
scas
mov
out
lret
inc
fucom
inc
xor
pop
shlb
adc
pop
mov
dec
sub
outsl
dec
subb
pop
sbb
push
lods
add
pusha
aad
test
dec
or
repnz
cmc
push
jecxz
fisubrl
mov
mov
shr
inc
mov
imul
test
in
loope
sar
and
outsb
xchg
add
xchg
orb
shrl
lock
jp
jg
and
cld
lods
sub
xchg
push
fs
pop
les
sbb
out
push
aas
jmp
daa
mov
xchg
mov
jae
dec
xchg
xchg
bound
rcl
sub
out
mov
and
jbe
pop
int
outsl
pusha
jo
mov
xchg
clc
cmp
in
add
and
xchg
das
lods
call
dec
jl
dec
dec
push
iret
decb
daa
sub
sbb
push
or
int3
add
sbb
dec
scas
push
and
add
movsb
les
mov
mov
data16
notb
inc
sub
int
mov
jl
xchg
cs
testb
mov
mov
jge
mov
mov
adc
shlb
orb
xchg
xor
jp
enter
shl
clc
sub
xchg
lods
test
mov
add
aam
leave
and
movsl
testl
incb
popf
loope
xchg
jl
bound
mov
sbb
jg
loopne
dec
imul
jp
out
jo
hlt
stos
sub
mov
test
call
mov
mov
fs
mov
jg
out
xor
dec
inc
pop
pop
dec
push
ja
lea
jo
lret
mov
or
pushf
jmp
xchg
xor
sbb
je
cmp
and
lea
cmc
ds
movsb
lcall
dec
daa
movb
scas
adc
faddl
insl
jmp
xchg
inc
mov
aam
sbbb
fnsave
adc
je
sbb
mov
bound
mov
outsl
push
cmp
xorb
adcl
pop
js
xchg
addr16
jne
cltd
addr16
mov
xchg
stc
and
and
cld
stos
jns
fists
lcall
add
scas
mov
pop
sahf
movsb
mov
icebp
cs
shlb
xor
inc
xchg
jg
mov
out
mov
xchg
into
test
xchg
mov
sbb
or
adc
dec
aaa
mov
ss
push
aaa
int
movsl
add
insb
pop
inc
rorl
push
mov
popa
hlt
xchg
jae
push
mov
push
jmp
cmp
lcall
rol
inc
mov
sahf
dec
sbb
jno
cmp
in
add
push
popa
or
into
scas
mov
mov
jmp
and
cli
pop
mov
fcoml
sbb
mov
xor
cmpsl
or
loopne
add
int
add
and
inc
mov
mov
push
lods
or
push
push
xor
pusha
imul
scas
push
xchg
scas
cmp
movsl
xchg
add
loop
ret
cwtl
leave
leave
lret
rcrb
mov
adc
jg
inc
lret
popa
shll
insb
cwtl
shrb
scas
orb
sbb
hlt
out
rol
cmp
mov
daa
leave
xor
dec
insl
sarb
testl
lahf
and
movsb
xor
loop
xchg
cwtl
pop
xchg
bound
mov
ljmp
sub
or
ret
jno
dec
mov
mov
and
std
int3
fidivrs
std
repz
sbb
scas
rcr
out
lret
jge
xchg
lahf
lods
inc
xchg
negb
test
push
popf
push
push
stc
mov
out
cld
cmp
xchg
cmp
test
sub
cmp
adc
cmp
fidivrl
scas
mov
arpl
xchg
push
sbb
mov
jno
lock
ficompl
dec
imul
sub
mov
add
shll
sbb
sbb
or
cwtl
cltd
outsb
test
call
call
lods
xor
pop
scas
jne
neg
dec
imul
int3
out
sbb
pop
xlat
fs
sbb
adc
cld
vmwrite
and
stos
pushf
into
xor
ret
cmpsl
scas
cs
cmpsb
stos
inc
cmpsl
or
aaa
fimuls
test
ficoml
mov
into
outsb
pop
popf
leave
xchg
adc
repnz
aam
cltd
pop
adc
add
jae
sbb
ljmp
pop
mov
pop
outsl
xchg
movsb
or
adc
sbb
into
jg
jne
fsts
pop
loop
xor
je
ret
mull
xor
ret
xchg
and
adc
pop
cmp
aad
mov
fidivs
cmpsl
es
out
sub
enter
icebp
test
mov
mov
into
xchg
dec
pop
fistps
loopne
fwait
movsb
hlt
push
in
std
mov
sbb
mov
xchg
dec
push
mov
divb
outsl
ss
lcall
in
lret
aaa
shll
test
pop
inc
adc
add
jnp
mov
jae
dec
dec
pop
fcompl
es
popf
push
jnp
es
xchg
lods
sub
cmc
pop
jno
cwtl
mov
dec
jmp
pop
or
xchg
das
pop
inc
or
in
push
lahf
std
popa
sbb
jno
flds
push
or
pop
lret
push
shl
out
cld
and
repz
enter
test
pusha
cli
cmp
mov
shrb
rcr
mov
popl
addr16
cmpsl
aas
addl
inc
aam
mov
and
lock
pop
enter
insb
outsl
mov
sbb
hlt
pop
cmp
in
rcll
jg
mov
test
push
cmp
fstl
xchg
fmul
sbb
jae
mov
mov
sti
push
jns
call
add
addb
cmpsl
push
fwait
ret
out
pop
sub
mov
sbbl
out
xchg
scas
xchg
adc
sbb
adc
mov
fincstp
clc
popa
fcoms
jo
outsl
idivb
push
addb
mov
insb
fwait
mov
cmp
cmp
xchg
out
gs
int
outsl
pusha
test
loope
mov
mov
fwait
jns
inc
or
movsl
cmpsb
iret
mov
push
adc
dec
out
jns
xchg
insb
cmp
push
test
cmp
inc
int
out
mov
mov
sbb
jl
inc
inc
bnd
stos
pop
insl
and
dec
outsl
cmpsb
cmpsb
sub
jae
inc
mov
or
fmull
call
sbb
jo
out
add
push
sti
mov
popf
and
mov
es
shr
incb
xchg
mov
xor
adc
insb
stc
scas
xchg
xchg
scas
jg
xchg
aad
mov
cmp
adc
mov
dec
inc
jmp
mov
shll
push
mov
adc
pop
movsb
pop
mov
gs
jb
ficompl
jnp
sbb
popf
aas
jp
inc
inc
sbb
in
popa
add
cmpl
jle
mov
icebp
out
test
mov
cs
pushf
push
outsl
sbbl
insl
andb
xor
jl
lret
les
mov
cmp
sub
cli
xor
je
mov
jge
stos
stos
push
push
sub
push
jmp
stos
jecxz
hlt
mov
add
mov
cmp
hlt
mov
pusha
pushf
adc
xor
push
jg
sub
mull
inc
lahf
add
fldenv
xchg
jge
outsb
xchg
xchg
nop
xchg
pop
data16
adc
dec
call
dec
in
scas
xchg
jge
testl
push
call
call
mov
cmp
or
mov
jmp
sbb
mov
mov
xor
push
inc
or
or
pop
push
std
mull
xchg
aas
lea
imul
mov
and
arpl
or
aam
shrb
or
mov
hlt
mov
out
sub
dec
xchg
push
push
xchg
enter
jno
sub
pushf
or
call
arpl
push
and
fwait
sub
out
int
sbb
mov
push
hlt
sahf
fcompl
ffreep
mov
scas
push
aam
lret
xor
push
subb
daa
stos
scas
mov
add
ret
fld
lock
icebp
mov
out
insl
adc
sub
iret
push
mov
dec
sub
sbb
push
int3
jo
es
jp
add
or
or
std
adc
fisubrs
jne
popa
mov
mov
rcrb
into
lahf
sbb
pop
push
cmp
mov
xchg
mov
xchg
fprem1
cli
sti
mov
dec
in
adc
xor
ljmp
add
movsb
andl
push
xchg
lock
jle
setno
cwtl
pop
sub
inc
push
fstps
stc
mov
flds
inc
pop
push
or
push
xor
fdivs
sarl
sub
push
adc
add
loopne
xchg
pop
test
in
mov
adc
es
add
out
imul
xchg
mov
sub
mov
xchg
shl
xchg
push
dec
sub
popa
rclb
inc
or
hlt
lods
out
adc
adc
push
lea
arpl
popa
jge
ficoml
add
dec
jp
jno
xchg
faddl
fidivrl
pop
xchg
out
add
mov
leave
jb
dec
test
dec
cwtl
and
iret
push
frstor
sahf
lret
mov
adc
je,pn
mov
mov
sub
sub
jnp
cmc
adc
jb
pusha
jge
icebp
dec
xchg
ss
dec
lahf
add
in
xor
dec
int
mov
out
push
adc
clc
mulb
ficomps
push
dec
cmpsb
stc
imul
and
dec
lds
test
fwait
push
inc
ret
jl
cmp
mov
inc
push
xchg
or
dec
jne
leave
loop
mov
xor
je
cmpsb
out
sub
jnp
in
iret
je
sbb
mov
into
mov
fdivl
xor
ljmp
jp
jo
sub
ss
and
pusha
insl
xchg
inc
nop
lcall
loope
ret
insl
mov
clc
fld
xchg
mov
stos
sbb
push
into
inc
xor
sub
scas
add
loope
sub
cmp
cli
jmp
add
dec
jb
inc
imul
and
call
in
jp
out
icebp
lcall
xchg
push
mov
sub
ja
mov
and
in
mov
mov
shrb
cmc
jl
popa
adc
icebp
add
jp
jno
jb
mov
pusha
jo
ret
push
std
dec
int
repz
lods
mov
and
cmp
add
sub
mov
mov
stos
cmp
scas
aam
in
adc
aas
and
inc
fwait
push
mov
pusha
mov
dec
xchg
ljmp
mov
xor
ja
das
and
mov
addr16
jne
jne
push
scas
adc
and
test
aad
mov
ss
loope
xor
sub
inc
inc
sbb
push
mov
mov
add
sarb
sbb
push
push
cmp
test
and
pop
jns
pushw
lret
fildl
cli
cld
shll
add
xchg
sbb
jae
pop
es
stos
dec
mov
mov
std
mov
rolb
mov
addr16
push
notb
fs
js
out
cmp
lcall
cld
test
push
add
jg
int3
movsl
cmp
pop
imul
and
in
fs
imul
mov
cmpsb
clc
hlt
das
or
sub
bound
mov
mov
and
pop
leave
sar
add
stos
scas
inc
xor
xor
test
lds
lahf
je
xlat
popa
inc
pushf
jg
mov
or
pop
sub
stc
cmpsl
lods
mov
lcall
out
adc
fdivl
lods
adc
and
xchg
inc
fsubr
int
push
leave
xchg
cmc
jge
cmp
jle
xchg
mov
je
cmp
aaa
jle
mov
dec
sbb
and
push
in
fdivrp
pop
and
lds
jg
cmp
mov
jbe
and
push
jecxz
cli
cs
fwait
inc
xchg
add
in
mov
cs
lret
repnz
sub
inc
addl
je
sub
mov
pop
fwait
or
adc
pop
cmp
in
pushf
pop
lcall
icebp
xlat
mov
sub
sub
cli
inc
inc
jecxz
push
dec
pop
push
ds
cmp
aad
aam
ja
mov
out
ljmp
imul
dec
or
xchg
loopne
push
cmp
daa
adc
clc
push
mov
push
and
out
in
imul
nop
mov
cmp
mov
faddl
sbb
insb
mov
jno
je
addr16
ret
loope
adc
push
inc
pop
hlt
xchg
xor
fidivl
in
stos
dec
cld
add
call
dec
sbb
imul
sub
or
jg
test
test
mov
push
adc
xchg
es
jb
pop
je
outsl
outsb
stc
cmp
push
movsb
shlb
test
ds
jno
push
lret
roll
aaa
inc
iret
mov
pop
mov
jg
mov
sub
mov
int
in
jns
and
add
mov
add
mov
addb
sbbl
xchg
repnz
xor
xlat
pop
sti
mov
arpl
lds
inc
cmp
cs
or
xchg
aaa
nop
pop
xorb
and
mov
dec
adc
aad
jno
push
nop
fstl
lret
pop
sub
aaa
jl
test
mov
dec
call
pop
jecxz
out
cltd
dec
scas
stos
jmp
mov
inc
adc
in
dec
dec
into
sarb
push
in
nop
test
pop
mov
jl
daa
mov
fcoms
push
and
outsb
out
adc
scas
jg
fwait
inc
aaa
mov
or
std
popf
pop
out
push
in
cltd
arpl
and
aas
nop
fisubrl
sbb
sahf
addr16
js,pn
add
in
mov
into
or
sahf
enter
sbb
add
cmp
call
pop
dec
jmp
aaa
cld
scas
repz
push
pop
jb
cmp
pop
mov
dec
leave
dec
or
in
add
dec
ss
aam
arpl
stos
cmc
pop
mov
cmp
in
xchg
enter
cmpb
mov
cltd
icebp
xor
cltd
cltd
scas
stc
and
dec
lret
cld
sahf
ja
bound
fwait
mov
pushf
icebp
imul
push
orb
mov
enter
pop
xor
sbb
jno
pusha
push
lret
out
idiv
add
lret
pop
es
movsl
int
int3
pop
lret
mov
xchg
cmpsl
dec
cltd
cli
or
scas
dec
ss
sub
or
ret
dec
xor
pop
loopnew
je
popf
xchg
inc
lret
ja
movb
rolb
sahf
mov
push
dec
sbb
pop
mov
insl
xchg
lods
and
cwtl
push
iret
movsb
loopne
cmp
jo
setns
shll
add
arpl
xchg
pop
lcall
cmpsb
lret
jge
push
movsl
and
mov
pop
adc
adc
xor
jecxz
sti
mov
xor
fsubl
inc
aad
pop
subl
sub
pop
out
mov
mov
pop
mov
scas
pop
cli
lcall
jae
or
pop
pop
sub
imul
dec
xchg
lock
cmc
mov
add
jg
nop
cmp
cld
add
insl
mov
adc
lahf
dec
test
or
das
lods
insb
xor
fnstcw
mov
cli
dec
int
mov
jecxz
ficompl
sbbb
push
out
fcmovnbe
and
lock
dec
lret
popa
fmull
ret
pop
push
int3
fnstenv
or
xor
pop
inc
ss
fildl
jbe
mov
enter
dec
push
and
stc
gs
jle
mov
dec
daa
nop
in
mov
adc
inc
movsb
mov
jnp
jecxz
sbb
push
aad
dec
jge
inc
scas
add
mov
mov
in
mov
and
push
sahf
lcall
scas
icebp
outsl
shlb
fdivr
invd
xor
cltd
mov
test
stos
push
dec
arpl
stos
jecxz
scas
xor
outsb
mov
sbb
jp
ret
mov
scas
jo
je
sbb
popf
mov
pushf
dec
test
in
in
adc
clc
sti
jl
repnz
mov
xchg
or
mov
cmp
test
insb
jo
adc
mov
sarl
dec
rorl
lods
sbb
push
xchg
pushf
push
or
mov
movlps
movsl
je
mov
xchg
xor
rcr
mov
or
mov
inc
mov
rorb
fisubs
loopne
fcmovnu
das
pop
sbb
cmp
sbb
mov
mov
movsb
mov
and
testl
xor
stc
addr16
rclb
dec
xchg
insl
xchg
filds
mov
iret
ret
push
mov
adc
sar
xor
rorl
push
adc
pop
or
jl
adc
mov
and
lret
and
inc
stos
sub
jl
xchg
and
mov
lahf
lret
mov
jecxz
lcall
mov
mov
stc
inc
mov
fldt
cltd
loop
sarb
sbb
sarb
sub
xchg
mov
mov
loopne
mov
es
sub
aad
inc
mov
dec
inc
test
push
repnz
fidivrs
jns
int
mov
stos
xchg
popf
rorb
test
xor
jmp
cmpsl
cli
pop
sbb
mov
scas
or
cwtl
dec
dec
dec
mov
outsb
xchg
xlat
dec
mov
test
and
sbb
push
xchg
fdivs
mov
arpl
xchg
mov
cmp
cmp
inc
stos
js
mov
xorl
or
std
loope
xchg
clc
and
cli
test
xchg
jecxz
test
xchg
data16
aaa
lock
dec
fucomip
mov
dec
add
idivb
sub
pop
cmp
push
ret
lret
mov
out
push
repz
xchg
ficomps
aaa
les
aam
pusha
sub
insb
mov
inc
add
inc
push
fistpll
xor
mov
push
pop
cltd
lds
subl
leave
inc
or
push
inc
cmpl
jp
sarb
cmpsl
jno
jg
pushf
mov
mov
incb
mov
xchg
dec
xor
jmp
imul
mov
ja
push
xor
int
add
mov
push
adc
sub
jge
jns
inc
call
out
adcl
xlat
or
push
mov
das
lret
movsl
sbb
test
cmpsb
xor
and
in
add
leavew
sub
and
or
lret
push
xchg
sbb
popf
sbb
pushf
pop
lds
cltd
push
clc
out
insb
mov
push
js
gs
push
add
cmp
dec
xor
jg
sub
fcomi
je
mov
mov
cmp
sub
adc
clc
jecxz
lock
gs
cmp
xchg
dec
pop
divl
adc
movsl
cmc
xor
sahf
mov
xlat
xor
and
mov
outsl
test
cmc
pop
das
mov
inc
xor
lret
arpl
test
fwait
push
push
mov
rcr
xchg
jb
pushf
and
inc
dec
data16
pop
bound
addr16
mov
jecxz
add
and
push
call
xorb
mov
adc
add
cmpsl
pop
push
inc
push
push
ds
mov
cmpsl
xchg
mov
in
addr16
lods
movsl
or
cmp
inc
and
orl
mov
add
xor
aas
xor
rcll
mov
repz
decb
or
ja
jle
ss
xchg
push
mov
addl
stos
movb
cmp
mov
outsb
call
or
test
les
mov
pop
and
mov
pusha
xorb
add
stc
rol
mov
xor
push
push
add
repz
cmp
stos
mov
ret
mov
out
insb
out
pop
sbb
scas
stos
lret
enter
xor
outsl
movsb
inc
lods
cmp
fs
ret
fnclex
sahf
xchg
fwait
dec
fnstcw
hlt
mov
imul
xor
mov
out
cs
cmp
sub
loop
or
mov
cld
out
and
lods
in
adc
xor
add
sbb
pop
cvtps2pi
xor
pop
dec
mov
nop
mov
or
jge
adc
shrl
dec
hlt
mov
cwtl
xchg
push
sub
mov
out
mov
movsb
arpl
xor
orl
shrb
mov
dec
lret
sbb
inc
xchg
jle
das
pop
test
out
pop
sbb
sbb
mulb
mov
pop
in
adc
aas
lret
das
testb
insl
scas
jecxz
xchg
movsl
push
mov
dec
ljmp
std
dec
negb
xchg
call
mov
in
iret
push
dec
cmpsb
mov
pushf
insb
sbb
out
stos
or
aad
loope
sbb
mov
outsl
pop
dec
mov
nop
sti
inc
arpl
pop
idivl
mov
js
getsec
fdivrs
in
and
sbb
outsb
inc
nop
or
cmp
shl
daa
icebp
lcall
fs
lds
test
or
xchg
ficomps
and
inc
jecxz
mov
test
dec
push
sub
out
mov
add
inc
lea
call
mov
stc
loop
and
stc
rclb
cmpb
out
jg
lcall
lret
leave
out
cli
adc
mov
cmp
xor
jg
push
repz
jmp
popa
aam
add
mov
or
jno
sub
pushf
sub
jno
mov
pop
pop
sbb
pushf
repnz
push
movsb
jne
rcrb
or
push
and
xchg
mov
cld
loope
hlt
ljmp
adc
ficoms
mov
mov
jne
stos
and
and
testl
int3
mov
adc
jp
aas
adc
sub
sahf
pop
pop
mov
outsb
mov
scas
fcompl
rclb
pop
stos
xchg
test
stos
aam
jecxz
in
xor
mov
rcl
lods
insb
iret
push
loop
test
sbb
dec
inc
push
adc
jg
std
mov
add
shrb
stc
lods
xor
imul
mov
cmp
push
shll
lea
mov
hlt
fcoml
cld
sub
sbb
push
mov
push
sbb
aaa
ljmp
pop
jle
lods
mov
cmp
js
call
imul
and
je
push
adc
sub
sbb
das
lret
movsb
jbe
mov
cmp
test
push
iret
in
imul
add
and
dec
mov
out
sbb
xchg
iret
xchg
mov
subl
popa
loopne
push
mov
gs
mov
inc
ret
clc
test
mov
ret
sub
mov
inc
adc
rcrl
repz
bound
pop
ret
pop
jno
ja
push
inc
idivb
xchg
adc
push
int3
je
add
or
insb
shlb
pop
ret
mov
cmp
pusha
cmp
inc
lahf
jecxz
mov
sbb
xchg
lcall
sti
adc
pop
stc
daa
push
test
aam
cmpl
xchg
pop
fsubrp
sarl
movsl
jge
sbb
dec
int
xor
test
movsb
dec
pop
fiaddl
stc
inc
push
pop
or
aas
xorb
scas
ss
cmpsb
sub
test
sti
mov
cmp
and
inc
pop
sarl
in
jns
pop
incl
cltd
out
push
and
popa
jecxz
sbb
xchg
insl
sbb
jp
cmp
ss
ret
push
pop
fidivs
xchg
dec
jno
rorb
sbb
loopne
enter
popa
int3
jmp
movsb
insb
out
test
mov
cmp
pop
and
xchg
adc
aaa
sbb
les
mov
pushl
sub
mov
inc
dec
je
cmp
push
jno
adc
dec
ret
addb
xor
mov
adc
shl
mulb
xchg
xor
in
vcvtsd2si
loopne
sti
inc
cmp
push
and
cld
lret
mov
scas
scas
outsl
les
inc
shll
mov
ljmp
adc
fwait
add
out
push
cmp
ret
inc
lret
test
in
inc
ljmp
enter
sub
jns
stc
rcr
lods
add
xor
push
outsb
aad
mov
loop,pt
mov
ss
ret
mov
sbb
or
jmp
mov
test
add
daa
push
dec
in
shlb
and
in
stc
insl
jae
pop
push
sbb
lock
cli
mov
cmpl
ret
jae
dec
lahf
aam
mov
stos
mov
cmp
dec
mov
inc
xchg
push
les
scas
push
add
and
ret
movsb
call
icebp
mov
negb
inc
imul
fbld
cmp
inc
xchg
cmp
push
jo
pop
or
jns
fbstp
xor
aam
mov
cmp
in
lds
cmc
xchg
push
sarb
das
and
ficoml
or
or
dec
mov
test
stos
aaa
fadds
hlt
insb
add
push
jle
out
cmp
loopne
sbb
fst
shlb
rcrb
aad
fldl
jmp
cmp
inc
pop
mov
mov
fs
mov
stos
and
and
es
insl
in
cwtl
addr16
mov
adcb
cmc
pop
cld
fidivl
fnstenv
push
inc
cmp
inc
jns
xchg
aaa
mov
mov
add
scas
and
sbb
add
inc
jp
adc
fstpt
sbb
add
rcl
lea
jge
sub
xor
out
js
les
ficomps
and
jge
fidivs
sbb
mov
inc
push
pop
mov
int3
xchg
add
xorb
jmp
ret
jmp
test
adc
fcompl
in
inc
xor
enter
lret
inc
cli
xchg
sbb
sub
fidivs
mov
or
jmp
ret
xchg
fldcw
sub
in
xchg
pop
rorl
aas
or
out
scas
push
add
or
fs
sbb
inc
ja
xchg
inc
cmp
in
jmp
mov
adc
cmp
dec
enter
push
test
scas
testb
pop
jno
std
mov
xor
repnz
loopne
loopne
and
fadds
sarb
pop
xchg
stos
cmp
mov
shrb
or
hlt
jbe
roll
lret
mov
push
out
pop
xor
or
pop
mov
pop
nop
inc
ficoms
and
test
in
mov
stos
fmull
stc
xchg
dec
jbe
jbe
and
adc
aad
nop
insl
xor
repnz
xlat
pop
mov
sub
sti
add
adc
cmc
movsb
in
pop
nop
std
stos
and
test
jge
js
shlb
enter
std
mov
jbe
mov
lock
mov
cltd
or
shr
shlb
jb
mov
cmp
shll
mov
jle
les
int3
push
sub
arpl
test
cmp
int3
imul
cmp
pushf
pop
sarl
pop
xchg
lods
push
mov
cwtl
in
sub
adc
enter
xchg
rolb
adc
inc
sbb
inc
and
inc
pop
pusha
icebp
fdivrs
and
jmp
push
xchg
cltd
inc
dec
cs
push
cmp
fsub
pop
in
xchg
add
inc
loopne
test
push
jl
movsb
in
or
or
pop
and
fidivrl
std
mov
xchg
pop
xchg
jecxz
cs
cmp
jg
stos
cmp
insl
inc
or
dec
fsubrl
sbb
jle
out
aaa
add
clc
loope
jl
dec
loopne
test
out
cmpb
mov
or
addr16
cmp
fs
sub
divb
stos
bound
movsb
cmp
daa
out
ret
jmp
les
rol
pop
scas
xor
xrelease
fmuls
es
and
dec
insb
or
leave
and
scas
xchg
rcr
cmpsl
lods
sub
scas
sub
in
insb
or
popa
xor
adc
xor
fldt
lea
in
add
jnp
shl
rcrb
adcl
pop
mov
loope
loop
popa
jns
or
insb
jbe
xchg
bound
push
arpl
daa
and
mov
lahf
pop
rcll
adcl
enter
and
insl
xchg
jecxz
adc
jg
sbb
out
xor
mov
repz
pop
xchg
xor
clc
mov
sub
rol
clc
in
cmp
cmp
addr16
repz
xchg
adc
enter
mov
test
punpcklbw
xor
jo
loopne
sarb
scas
and
das
arpl
clc
leave
pusha
cwtl
add
test
gs
pop
cmpb
jae
adc
or
pop
mov
push
adcb
lds
divl
lods
inc
jg
mov
cwtl
ja
jle
clc
push
lods
fsubrs
mov
sbb
xchg
ds
stc
jl
insl
push
mov
mov
dec
cli
aad
mov
and
dec
and
pop
movsb
adc
pop
mov
xor
xchg
data16
xchg
push
lods
sub
lret
push
mov
insl
mov
icebp
jle
daa
mov
test
data16
xchg
or
pop
and
add
jmp
popa
inc
fldenv
hlt
adc
repz
mov
mov
mov
jbe
sub
dec
int
sub
xor
pop
jge
push
xchg
push
lret
push
inc
int3
adcl
fimuls
idiv
call
xor
push
mov
out
push
sbb
rcll
adc
cmpsl
mov
jns
ja
lret
incb
lds
call
outsb
lds
or
adc
jl
movsl
jp
rcrl
imul
inc
pushf
pop
add
jg
loop
out
mov
rcrb
in
lock
adc
lea
test
xchg
xchg
inc
sub
dec
in
int
ja
jno
jl
je
cmp
mov
push
rcrl
loop
fs
cmc
in
jo
push
les
clc
int
mov
xor
mov
xor
lahf
adc
aaa
pop
xchg
loop
or
cltd
sbb
or
pop
dec
mov
incl
mov
bound
cmp
icebp
lock
mov
push
mov
pop
inc
lock
loopne
push
stos
xchg
test
jmp
mov
cmp
sub
and
mov
js
popa
inc
daa
test
jmp
dec
mov
mov
repnz
sti
inc
sub
or
aaa
mov
das
fdivs
fistpl
add
arpl
shlb
dec
dec
iret
mov
sub
add
rcrb
adc
fisubrs
fs
adc
idiv
int3
clc
jo
movsb
inc
sub
jl
imul
jb
sub
cmp
pop
mov
mov
xor
mov
stc
xor
cmp
cmpsb
jne
test
aam
rol
dec
push
pop
jae
mov
adc
es
mov
dec
push
mov
aad
jns
sbb
jns
inc
stos
int
pushf
test
sbb
jecxz
mov
dec
cmp
dec
mov
into
insb
std
jmp
into
fnsave
mov
pop
or
call
jmp
push
mov
sbb
popa
into
or
out
repz
sub
xchg
sti
cmpsl
xchg
rcr
push
out
ja
pop
hlt
xchg
sub
jle
inc
mov
roll
xor
es
mov
pop
push
fisubs
fisubrl
cmp
out
push
add
xor
addr16
mov
cmp
sub
cmp
mov
fidivrl
jns
add
mov
inc
jae
jle
fwait
sbb
inc
sbb
xor
pop
stc
les
jl
sti
push
dec
adc
mov
pop
inc
lcall
mov
popf
mov
outsb
cmp
inc
mov
mov
aam
push
lds
xlat
imul
mov
sbb
test
push
out
mov
mov
mov
cmp
pop
mov
push
sbb
inc
cmpl
sti
sbb
mov
pop
fldcw
lret
fucomi
int
sub
cmp
dec
push
adc
fcoml
psrlq
xor
inc
adc
jecxz
int
fsubrl
lret
push
inc
jecxz
mov
test
scas
jl
call
shl
sti
or
adc
shll
fcomi
push
cmp
repz
in
out
xchg
out
adc
orl
cli
mov
mov
adc
test
sbb
cmc
mov
pop
xor
inc
push
int3
pop
in
cmpsb
stos
cli
push
stc
std
or
bound
sbb
xor
mov
ret
jns
imul
mov
push
ds
adc
lds
push
add
sbb
mov
mov
pop
int3
lahf
rolb
std
cmp
jl
sti
pop
cmp
insl
push
ss
jl
std
sub
push
and
jecxz
lods
daa
rcl
mov
push
pop
jecxz
movsb
stc
jne
pop
pop
jo
adc
jl
xchg
jno
test
repz
out
mov
jno
xor
xor
cli
imul
lds
inc
cld
test
ss
dec
imul
mov
fistpl
jl
psraw
xchg
fsubrl
sub
cmp
sub
cmpsb
les
inc
aaa
pop
repz
jg
inc
dec
add
insb
inc
push
stos
lods
mov
mov
lahf
push
push
outsl
js
std
xchg
push
divb
cmp
push
mov
xchg
add
sub
cmp
lock
test
ret
or
in
push
pop
mov
cmp
data16
stos
and
mov
clc
cli
pop
sbb
adc
sub
push
sub
sub
inc
clc
inc
jo
dec
mov
jae
leave
les
imul
cmpsl
in
or
fisttpl
cmp
cli
mov
out
mov
pop
mov
mov
enter
js
cmp
sub
loop
mov
iret
or
into
icebp
insb
dec
js
cmpsb
in
insl
shlb
js
xor
imul
dec
lret
sti
pop
dec
push
sarl
ss
push
bound
test
std
cli
dec
cld
xchg
mov
cld
pop
pop
aas
pop
cli
xlat
sarl
iret
xor
cwtl
inc
jo
push
sub
cmp
add
aaa
mov
lea
cmpsl
loop
aad
out
hlt
cmp
das
cmc
push
pop
add
fcmove
pop
into
inc
hlt
aad
add
fmull
mov
dec
push
add
inc
jmp
dec
add
icebp
sbb
out
jo
fld
ljmp
add
cmp
iret
sub
into
mov
cmc
inc
jl
mov
fwait
inc
stos
daa
mov
add
std
out
test
sbb
adc
bound
ljmp
ja
std
inc
jnp
dec
in
xchg
cmp
adc
test
cmp
dec
ss
cltd
mov
out
adcb
lahf
jns
pop
push
sub
push
arpl
orb
iret
insb
push
jo
push
push
in
sahf
inc
add
mov
cmp
lahf
mov
cli
daa
mov
jns
inc
out
fdiv
sbb
cld
cmp
sub
outsl
or
leave
inc
jg
call
mov
inc
lahf
ljmp
cmp
xchg
and
jb
enter
lahf
nop
xchg
cmp
dec
dec
add
xchg
cmp
shll
mov
daa
dec
add
pusha
insb
fadds
adc
fadd
pop
sbb
ror
adc
xchg
and
pusha
dec
mov
or
aas
fwait
cmp
bound
out
lahf
out
mov
stc
scas
dec
js
inc
or
xchg
lods
jae
imul
or
xor
and
insb
roll
mov
add
mov
stos
inc
pusha
inc
leave
mov
in
adc
sbb
aaa
xchg
jmp
lds
lret
xchg
aam
cmp
loop
icebp
adc
mov
in
insl
mov
push
aas
lock
fistpl
dec
push
cltd
mov
pop
sbb
es
cmc
jbe
add
add
push
gs
lds
pushl
push
test
jle
cmp
pop
pop
popa
push
int3
mov
out
or
pop
rep
cmp
jne
out
call
andl
gs
adcl
sub
xchg
ss
insl
adcb
je
ljmp
repnz
mov
cmpsl
call
inc
dec
scas
sub
add
in
or
push
scas
imul
add
or
rol
stc
into
gs
sbb
rol
inc
mov
stos
push
sub
sub
xor
nop
pop
and
xchg
aaa
cli
iret
rcll
sub
dec
test
push
pop
popa
popa
nop
repnz
pop
sub
xchg
xchg
in
xor
xchg
cmc
fstl
push
shll
test
enter
aaa
dec
je
pop
fadd
das
jbe
hlt
fcoml
ss
cmp
in
push
das
les
jns
aad
lret
pop
nop
pop
test
cmp
fst
stos
inc
jle
cmp
xor
ljmp
mov
ss
push
popf
xchg
popf
jg
popa
lods
mov
cwtl
add
sbb
pop
or
testl
sbb
insb
pop
sbb
mov
mov
cli
mov
fs
ja
nop
rep
and
notl
xchg
ret
sysret
sub
roll
and
ja
adcb
mov
in
cmp
xchg
fs
je
cmp
shlb
mov
rolb
sbb
cmp
rcrl
push
stos
inc
scas
movsl
xchg
pop
ficoml
movsb
adc
outsb
mov
imul
add
cmpsb
divl
sub
sbb
pusha
hlt
fimuls
incl
es
dec
mov
faddl
cmp
popa
cmpsb
mov
or
add
cltd
cmp
in
lods
jne
mov
lret
mov
or
sub
stc
das
lcall
outsb
stos
mov
or
or
les
add
sbb
sarb
in
cs
mov
adc
movhlps
jns
jns
pusha
ljmp
adc
test
mov
pop
mov
addl
dec
cmp
mov
dec
daa
dec
adc
pusha
dec
jmp
inc
xchg
xchg
pop
jl
xchg
dec
std
in
jnp
scas
cwtl
test
mov
cwtl
and
stos
jne
stos
ror
lcall
pop
into
inc
ljmp
bound
sub
lds
imul
addr16
in
mov
ja
mov
aad
adc
dec
lods
daa
mov
icebp
sbb
mov
sbb
mov
cwtl
in
jo
pop
or
mov
data16
dec
or
cmp
adc
sbb
sub
add
mov
mov
lret
sarl
icebp
in
arpl
mov
lock
clc
pop
mov
cld
xchg
aad
mov
xchg
outsb
push
dec
movsb
pop
js
mov
push
cld
popa
dec
out
cmp
stos
mov
in
dec
xchg
sbb
aad
inc
icebp
or
jecxz
roll
pop
ret
or
clc
lahf
xchg
mov
popf
xchg
bound
popf
clc
lcall
repnz
adc
insb
notb
mov
push
lods
jmp
xchg
jp
rorl
pop
mov
dec
loope
jp
sbb
scas
sub
movl
enter
sbb
mov
das
inc
sbb
out
inc
push
das
dec
mov
push
mov
fidivl
lcall
in
andb
fstpt
jmp
xor
sub
outsl
mov
xchg
cwtl
jmp
in
dec
xchg
inc
xchg
pusha
stos
daa
adcl
or
sub
mov
mov
or
lret
enter
in
out
mov
icebp
mov
push
adc
jmp
xchg
lahf
daa
scas
inc
cmc
and
mov
addr16
sarl
aas
loope
ja
orb
mov
daa
pop
icebp
in
loop
dec
pop
aam
xchg
dec
insb
xrelease
dec
popa
pop
loopne
insl
lds
inc
rclb
xchg
mov
mov
gs
ret
out
std
pop
adc
adc
xlat
ljmp
xchg
outsl
dec
xchg
test
mov
dec
adc
cld
pop
mov
fwait
or
add
enter
loope
push
subl
add
pop
outsl
aad
add
cmpsb
inc
mov
andl
cmp
das
inc
bound
xchg
cli
and
sub
test
dec
push
xchg
xor
jb
pop
jecxz
pushw
iret
mov
lods
mov
sbb
mov
adc
lret
loope
push
mov
sbb
mov
mov
orb
inc
fistps
es
add
mov
mov
xor
xor
pusha
cmp
cmp
inc
inc
outsl
mov
outsb
fwait
repnz
jns
mov
pop
add
sbb
mov
mov
cwtl
mov
fiaddl
jns
mov
mov
and
push
xor
lea
int
dec
jb
add
mov
push
cmp
loop
inc
out
outsl
push
std
mov
mov
inc
jne
mov
arpl
jbe
repnz
cmp
testl
shlb
inc
aad
icebp
mov
inc
pop
insb
mov
sub
imul
addr16
cmp
mov
mov
outsl
lret
in
scas
lock
xlat
inc
add
push
imul
xchg
insb
push
mov
ja
lds
xchg
mov
loopne
jg
mov
inc
push
dec
adc
scas
push
push
lds
xchg
in
pop
cwtl
sahf
xorl
push
lds
jne
call
xlat
or
adc
jnp
cmpl
rcr
aaa
mov
pop
pop
ret
clc
pop
scas
ja
nop
insl
sbb
pusha
fldt
test
fsubrl
mov
test
xchg
adc
push
cmpb
fstpl
test
ja
das
test
data16
cld
sub
pop
mov
mov
mov
lret
mov
push
ret
dec
and
adc
jae
das
sbb
xchg
into
jmp
clc
daa
xor
pop
aad
int
push
jecxz
push
jnp
mov
push
andb
xchg
push
fwait
repz
xchg
jae
fiaddl
sbb
pop
xor
sahf
jnp
mov
fistps
subl
jbe
and
pop
cmpb
mov
cmp
daa
call
into
js
dec
test
lods
sbb
push
jo
jmp
std
xor
lock
or
and
dec
test
add
in
outsl
gs
js
pop
scas
jo
xchg
iretw
cmp
sbb
cmpsb
add
pop
test
adc
sti
push
and
push
jns
jecxz
xor
xor
sbb
jge
mov
mov
cmp
and
mov
or
pop
pop
xchg
clc
pop
mov
out
ret
mov
shlb
daa
loop
dec
insl
xor
out
sbbb
hlt
sub
imul
jae
push
iret
jae
out
pushf
add
mov
scas
lret
push
add
adcb
xchg
push
push
repnz
lcall
hlt
hlt
ror
and
scas
lds
dec
cwtl
lcall
cmpb
sbb
or
outsl
mov
iret
packsswb
or
mov
lcall
and
inc
sub
popf
push
test
inc
hlt
xchg
lret
out
or
addl
out
dec
ror
divl
pop
adc
and
push
imul
stos
sub
mov
cmc
push
mov
adc
orl
jge
push
cmp
sub
cld
adc
sub
jae
pop
pop
aad
data16
sub
add
insb
scas
mov
cmp
insl
mov
mov
dec
mov
inc
andl
fcmovne
stc
outsl
je
ret
jp
stc
ret
insb
push
gs
nop
rorb
mov
cmp
xchg
mov
pop
pop
mov
sbb
out
mov
orl
xchg
mov
cmp
cwtl
jb
mov
icebp
cld
add
fildl
cmp
loope
in
inc
jecxz
mov
jae
sbb
in
pop
mov
dec
xor
aas
pop
xchg
sahf
cs
or
je
test
cmc
push
jne
push
int3
pop
mov
pop
negl
sub
adc
mov
es
jne
rcrb
pop
pop
mov
mov
push
sbb
int
out
shll
insl
lahf
fmull
mov
pop
xchg
sub
mov
cmp
pop
jge
popa
cmp
and
in
jnp
xchg
xchg
cmp
seto
inc
clc
adc
lret
sti
and
add
inc
idiv
inc
and
cli
pop
xchg
imul
dec
scas
jb
xchg
xor
aad
xor
adc
push
in
push
cmp
inc
pop
push
sbbb
mov
pop
out
mov
inc
xor
jle
push
fs
push
sub
in
insb
test
and
sub
dec
adc
incb
int3
push
inc
testb
cld
sub
mov
xor
jbe
mov
out
cmpb
aad
inc
ljmp
aas
mov
fnsave
xchg
ret
and
decb
xorb
in
dec
mov
iret
lret
iret
jmp
scas
adc
dec
jbe
inc
pusha
adc
xchg
xchg
or
fldcw
dec
movsb
or
shl
add
andl
adc
or
addr16
push
or
sub
js
or
rol
inc
les
xchg
jns
push
js
into
mov
inc
std
in
cmp
mov
adc
rcr
adc
jmp
ret
xchg
dec
jmp
and
and
mov
stos
sub
jae
hlt
stos
rclb
repnz
add
aas
adc
stc
aaa
pop
or
sub
jnp
inc
mov
add
mov
jno
insb
fwait
icebp
andl
mov
lret
fidivs
lret
data16
adc
pop
lods
xchg
xchg
xlat
or
or
test
sub
dec
jnp
repnz
push
cmpsl
cmp
das
adc
popf
sarl
ljmp
pop
push
iret
xor
nop
fiadds
repnz
inc
jno
std
scas
cwtl
pushf
jecxz
ljmp
dec
jae
jns
mov
or
in
loop
push
pop
push
jo
addr16
jae
fdivl
ja
cmpsb
andb
stos
xchg
int
and
je
adc
shr
jne
pop
fildll
lret
movsl
test
repnz
aaa
aaa
push
jne
in
shrl
mov
adc
push
mov
pop
inc
in
into
xchg
push
cmp
in
mov
or
xor
cld
pop
mov
call
inc
les
fstpl
jl
xor
scas
xor
bound
dec
ret
lods
sub
sbb
nop
push
push
popa
mov
leave
dec
adc
movsl
outsb
sub
xor
in
popf
and
push
fwait
xlat
fwait
hlt
aas
adc
xor
mov
mov
jl
fisttps
mov
dec
dec
test
loope
cmp
enter
mov
pop
sbb
enter
adc
js
cmp
or
scas
push
pop
xor
pop
mov
mov
cld
roll
lods
movsb
push
mov
dec
mov
imul
loop
lock
sub
pop
xor
push
sub
inc
stos
mov
mov
mov
adc
std
add
pusha
sar
and
sub
sbb
popw
jl
xor
pop
dec
xchg
push
rolb
incl
rcrl
test
jb
orl
mov
in
jne
mov
in
addr16
push
adc
out
out
hlt
and
jo
push
test
adc
bound
adc
dec
and
rolb
or
pop
fisubs
dec
popa
jo
sbb
inc
call
pop
cmp
std
push
stos
movsl
pop
cmp
daa
adc
pop
pop
iret
jmp
push
jbe
and
imul
out
push
xor
les
lods
es
sub
enter
ss
loop
mov
xchg
in
jnp
push
or
or
shll
movsb
mov
int
repz
jecxz
pop
mov
xor
add
pop
mov
jmp
dec
adc
add
dec
dec
mov
mov
push
xor
hlt
xchg
iret
ljmp
icebp
xchg
sbb
gs
cmpsb
arpl
popf
ds
pop
push
push
dec
sub
sti
add
add
popf
shrb
shl
push
enter
and
jnp
xor
lods
popa
fs
mov
outsb
mov
adc
je
push
dec
push
adc
xchg
test
rcrl
jns
and
jg
lock
push
mov
push
rcrb
jg
cwtl
lret
mov
pop
mov
mov
pop
sub
mov
inc
sbb
push
mov
test
icebp
xor
es
and
scas
addr16
adc
mov
pop
or
aad
cmpl
in
or
imul
dec
and
push
add
or
daa
push
push
sbb
addr16
ja
lock
inc
int3
pop
add
xorl
scas
cmpsb
es
rol
lret
xchg
cmp
inc
xor
xchg
inc
ljmp
fs
jns
das
adc
add
repnz
repnz
fistpll
std
rcrl
in
mov
testb
sahf
mov
fildll
mov
xor
mov
or
xlat
icebp
cmc
bound
push
adc
lock
ror
pop
outsb
test
addr16
movb
hlt
outsl
pop
fistl
das
cmp
repnz
test
and
jno
out
nop
mov
dec
test
std
adc
mov
test
out
inc
andb
mov
fisubrs
iret
cld
int3
add
xchg
cmp
in
loope
es
inc
pop
ja
xchg
xor
sub
or
mov
in
mov
dec
dec
lcall
or
sbb
jno
in
push
push
push
mov
in
adc
shrb
dec
clc
sbb
pop
pushf
pop
xchg
aam
lods
stos
xchg
ret
ret
dec
clc
enter
push
push
das
out
mov
out
aad
cmpsl
and
mov
sbb
lds
dec
js
stos
xorb
mov
mulb
mov
or
flds
ror
jle
or
lret
and
inc
out
arpl
mov
test
cmp
fs
mov
dec
fidivs
dec
mov
xchg
cmp
cmpsl
cmpsb
jo
xchg
lock
int
shlb
cli
sbbl
push
mov
dec
xor
enter
adc
sbbl
sub
sbb
inc
mov
pop
dec
cltd
fdivs
jl
scas
adc
mov
out
popf
fimuls
xchg
mov
fbstp
popa
jle
cmp
xchg
test
xor
fwait
imul
push
shll
les
jecxz
insb
ds
loope
lock
filds
in
sahf
mov
es
enter
aaa
push
aad
daa
mov
push
pop
inc
sbb
rorb
test
and
nop
jmp
sub
call
and
loope
jge
push
dec
int
pop
push
pop
ret
adc
adc
fstpt
sub
out
inc
add
jo
idivl
roll
aad
pushf
mov
jbe
mov
enter
in
mov
bound
jb
or
push
xor
cmpl
cwtl
loope
xor
dec
sbb
outsb
fadd
pop
mov
or
mov
mov
or
aas
push
ds
adc
popf
inc
adc
pop
cmp
adc
lock
movsb
sbb
loope
out
dec
add
inc
jle
xchg
mov
cmp
sbb
sub
and
lock
aam
movl
cmp
xchg
outsb
jnp
mov
cwtl
ret
mov
cwtl
or
call
and
movsb
mov
es
test
pop
ljmp
sbb
and
or
sub
enter
adc
enter
sub
mov
daa
or
lret
xorl
push
xchg
movsb
or
push
je
fstpl
insl
inc
push
push
insb
add
add
sub
jns
hlt
rorl
lret
mov
test
pop
xchg
and
adc
stc
lahf
lds
mov
mov
push
jmp
jge
xor
in
nop
xchg
mov
and
jl
or
bound
dec
icebp
les
lods
xor
scas
fnstcw
loopne
pop
adc
test
cld
cwtl
xchg
mov
pushw
sub
hlt
add
ss
jmp
arpl
lret
add
fsubrs
jge
leave
dec
sahf
test
mov
dec
repnz
daa
lock
adc
push
cmp
sub
divl
inc
imul
stc
fwait
sub
and
or
xchg
test
adc
push
mov
sub
push
pop
rcrl
pop
adc
sub
sub
imul
mov
mov
mov
sbb
hlt
test
push
ret
mov
mov
aam
mov
push
outsl
and
imul
cmp
lcall
mov
inc
dec
add
leave
fwait
cmp
xor
in
dec
test
nop
rcl
jb
jns
mov
fisttpl
adc
sbb
clc
cmpsl
xor
dec
stos
push
mov
dec
push
aam
jmp
xor
or
mov
cmp
pop
mov
or
or
cmp
cmc
pop
andl
in
fs
mov
inc
or
pop
jb
adc
push
cmpb
sub
hlt
xor
stos
pushf
pop
testl
mov
mov
out
pop
pop
mov
push
and
adc
filds
hlt
mov
sub
rdmsr
lret
lods
shll
rorl
sub
scas
adc
loopne
fcompl
mov
testb
mov
dec
or
int
or
xor
sub
inc
mov
xor
pop
push
mov
mov
mov
jnp
sub
add
add
loope
pop
mov
inc
mov
push
cmp
in
rorb
pminub
int
lret
enter
or
fisubs
addb
adc
sbb
add
add
ret
add
outsb
pop
pop
inc
push
out
add
xchg
jge
or
push
add
std
or
cwtl
jns
and
add
jecxz
push
mov
push
jne
std
popa
arpl
pushf
push
push
or
push
cld
movmskps
test
jb
out
or
call
jg
das
lahf
std
inc
mov
jne
jg
js
pop
inc
mov
and
stos
cmc
xor
or
shrl
add
pop
mov
negb
cmovne
jne
into
addr16
or
das
lcall
out
fisttpl
pop
inc
sti
xchg
or
decb
xchg
iret
sub
jg
ret
xor
adc
mov
inc
icebp
aad
lcall
pop
fs
cmpsl
imul
ss
arpl
rorl
or
out
dec
sarb
cmovae
loop
movsl
push
xchg
sbb
fisubl
cld
inc
and
add
scas
pusha
and
cld
and
fnstsw
jge
xor
sub
cs
lahf
jmp
jecxz
pop
pop
sub
cmp
ficompl
arpl
nop
xchg
or
adc
push
sub
fwait
push
lds
mov
sub
and
push
testl
mov
cs
fimull
dec
bound
icebp
lds
mov
lea
lcall
lods
mov
xor
jge
roll
or
or
das
add
sub
rcr
pop
or
add
mov
pop
sbb
sub
or
push
cmp
enter
shll
xor
dec
ja
add
xor
mov
and
xor
mov
xchg
adc
pop
cmp
stc
xchg
dec
pop
fs
inc
add
inc
fisttpl
add
fwait
les
xor
push
or
mov
inc
lret
orb
lahf
sbb
xor
rclb
add
icebp
lds
icebp
movsb
mov
adc
daa
pushw
in
mov
pushf
loop
ja
stc
movsb
xchg
cld
xchg
test
inc
test
js
inc
imulb
or
hlt
aam
cmpsl
out
adc
out
cli
mov
adc
shl
jle
xor
rcr
in
sub
loope
inc
loop
lds
je
jns
fcmovu
jecxz
and
add
mov
add
pop
mov
je
mov
mov
pop
sub
popa
cmp
pop
gs
pop
ret
cs
movsl
cmc
sub
cmp
sbb
or
push
ret
inc
cmpsb
pop
les
adc
push
sbb
adc
jbe
out
addr16
out
arpl
jnp
xchg
inc
test
dec
insl
xchg
pop
push
and
pop
lds
or
nop
jns
jno
fst
mov
inc
mov
mov
pushf
jl
sbbb
lahf
or
adcl
lock
repz
lods
daa
mov
imul
std
aaa
push
and
add
fadds
mov
test
mov
int3
inc
scas
push
push
sahf
or
xchg
ror
mov
arpl
xor
fidivrs
or
xor
orl
jecxz
xor
add
aas
adc
ret
cmp
inc
outsl
bound
jle
ljmp
xchg
push
movsb
adc
repnz
mov
sub
or
ja
movsb
inc
add
jb
cmp
or
mov
push
adc
cwtl
xchg
popf
mov
rolb
int
orb
int3
sub
movsb
sub
jnp
pop
int
push
inc
adc
sub
sub
or
jno
mov
push
sbb
movsb
and
into
push
pop
test
jl
call
jp
lods
xchg
xchg
jg
es
stos
mov
sahf
pop
dec
jnp
add
inc
hlt
mov
and
in
pop
stos
cltd
dec
insl
sarl
pop
in
int
xor
adc
add
sahf
call
jb
inc
enter
jp
popf
jmp
repz
mov
xor
mov
push
aas
xlat
mov
loop
pop
dec
ret
sub
stc
mov
loope
sbb
out
dec
lds
dec
lods
dec
pop
cmp
addl
mov
ficoml
cmp
adc
pop
ss
push
gs
fs
outsb
cmc
sbb
mov
scas
jg
fisubs
mov
or
cltd
insb
sti
inc
dec
fwait
and
and
out
pop
ljmp
xor
cmpsl
cmpsl
mov
mov
mov
push
xchg
and
fidivrs
push
mov
insl
daa
sub
pop
xchg
mov
jo
arpl
lret
fsubr
adcb
fwait
pop
add
inc
lods
jecxz
data16
xchg
lahf
jnp
jecxz
hlt
pop
ja
rolb
jmp
sbb
sbb
or
rclb
dec
and
add
test
je
imul
mov
jns
or
or
add
cmp
fnstcw
call
mov
inc
fcomi
outsl
data16
sub
jle
sbb
test
sarl
xor
adc
cmp
nop
sub
movsl
test
in
pop
int3
mov
mov
insl
mov
add
mov
mov
aad
cmpsb
call
mov
xchg
inc
loope
out
jne
mov
xor
aam
cmp
stos
add
sbb
js
adc
loope
imul
pop
mov
xchg
and
jno
ret
add
jecxz
negb
in
lds
int
out
push
or
mov
shl
add
fucomi
or
jge
repz
lock
pop
push
sbb
arpl
leave
les
or
imul
xor
cmp
mov
popw
adc
jl
sbb
lods
and
aaa
int
sub
ret
stos
lods
imul
mov
push
clc
cmpl
mov
add
lret
loopne
xchg
adc
add
cmp
jns
mov
adc
fimull
mov
add
inc
shll
sbb
or
push
daa
lock
test
sar
lea
xchg
iret
lods
inc
filds
and
sub
or
jecxz
mov
fmull
sbbb
adc
mov
rclb
mov
ret
fisubs
xor
call
push
das
orb
xor
jae
jle
dec
jae
or
xchg
test
sti
xchg
pop
mov
stos
or
xlat
jns
jb
into
inc
mov
mov
cld
fnstsw
les
ret
sub
jmp
mov
ror
aas
test
icebp
dec
cmc
sbbl
test
xchg
mov
testb
pop
inc
cmp
or
dec
mov
sub
gs
sbb
cli
aas
test
bsf
cltd
adc
xchg
mov
rclb
mov
imul
mov
icebp
jle
std
push
les
movsl
adc
sbb
pop
adc
and
dec
mov
call
jle
fs
gs
and
jge
lds
and
jge
incb
jp
cmp
sbb
int
cmp
cwtl
jns
test
push
pop
aaa
lret
lods
sbb
add
lods
inc
xchg
add
fistpll
stc
icebp
pop
jnp
ret
stc
xchg
jmp
push
orb
pop
mov
les
adc
add
xor
adc
pushf
lret
jg
jns
mov
or
aas
xchg
or
mov
mov
inc
xchg
je
shrl
rorb
test
cmc
cmp
inc
xchg
stos
xor
and
jns
mov
push
out
outsb
cmp
cltd
addl
cwtl
and
push
xor
mov
sbbl
inc
mov
js
sub
mov
cmp
adc
sbb
sub
jl
mov
repnz
xor
iret
jmp
xor
lcall
into
pop
xorl
inc
ret
scas
dec
rcr
add
imul
and
lock
push
cmp
shlb
push
subl
in
push
mov
sbb
data16
pusha
push
nop
outsb
ljmp
sahf
add
or
mov
sub
push
mov
push
es
cmpsl
dec
sub
jge
pop
xchg
dec
stos
rclb
or
inc
adc
loope
ret
sbb
mov
test
pop
mov
mov
cwtl
add
push
push
mov
push
push
xor
stos
cld
out
xor
lcall
repz
into
enter
add
loope
stos
clc
xchg
sub
idivb
insb
icebp
insl
pop
or
push
jmp
int3
jne
loop
push
leave
iret
mov
adc
and
les
aas
aad
ret
sub
jne
pop
in
aad
xor
xor
popf
hlt
clc
imul
jmp
jecxz
nop
repz
call
cmpsb
lret
mov
pop
stc
jp
or
or
test
inc
aas
mov
insl
cmp
xor
pop
outsl
cs
jbe
mov
push
push
frstor
insb
pop
int3
xor
lods
adc
or
cli
cmpsl
push
push
ss
pop
ljmp
cltd
outsb
mov
adc
bound
sbb
or
popfw
out
dec
imul
xchg
or
mov
dec
in
or
lods
jnp
jmp
mov
pop
test
rcrb
adc
imul
lcall
in
mov
shlb
outsb
add
pop
lcall
adc
dec
and
out
or
pop
push
in
mov
dec
test
xchg
sub
insb
outsl
mov
lods
and
cmp
imul
pop
aas
cmpsb
and
imul
loop
daa
xchg
adcl
mov
aaa
std
shlb
je
mov
pusha
pop
shlb
sub
jp
xchg
fisubrs
lcall
movsb
jns
push
std
mov
je
push
lret
adc
add
mov
cld
mov
mov
movsl
imulw
and
clc
cwtl
or
out
sbbl
push
adc
into
iret
test
jb
xlat
call
pop
aad
loopne
sbbb
das
sbb
push
ja
sahf
sub
adc
push
add
jne
sti
cld
out
fs
pop
loopne
in
lds
pop
sbb
mov
in
test
in
gs
xor
popa
and
or
jns
lea
jge
stos
test
mov
lods
and
sahf
mov
ret
or
rcrb
ds
or
rcll
pop
fdivrl
cld
adc
fsubl
or
dec
inc
in
cld
dec
push
shrl
add
jnp
ror
sub
jmp
xchg
cmp
or
lea
mov
in
pop
push
insl
in
fstl
pop
out
push
or
fisttpl
fsubp
jns
test
lcall
in
enter
dec
jne
sbb
insb
xchg
lahf
mov
pop
add
notl
sbb
dec
inc
mov
psrld
dec
xor
fildll
pop
sub
pop
rorb
push
adc
ret
mov
add
inc
fdivrs
ljmp
lds
pop
pop
dec
insb
and
adc
sbb
fbld
ds
xor
xlat
mov
jo
sub
fwait
cld
or
and
outsl
imul
cmp
fcmovb
imul
push
lds
sahf
inc
jl
sbb
inc
roll
mov
sbb
push
rcl
out
cmpsb
xchg
idiv
imul
out
jns
mov
sahf
shl
ja
push
inc
or
mov
cld
adc
mov
cltd
adc
jnp
ss
mov
push
fidivrl
mov
lea
jmp
lods
mov
and
lods
and
or
push
push
in
rclb
shrl
and
jb
faddl
mov
jne
outsl
sub
icebp
clc
movsl
fistpll
leave
fdivrp
adc
test
jle
insl
mov
jne
bound
rclb
stos
add
and
ja
call
xor
int
arpl
sti
mov
stos
pop
popf
pop
add
inc
loope
js
iret
pop
ljmp
ror
push
cli
imul
loopne
xchg
xchg
shl
and
xor
movsl
jecxz
adc
lock
pop
adc
cmpsb
jl
push
jbe
call
out
xchg
sbb
mov
mov
fdivr
jle
mov
sbb
inc
fdivrl
fistpl
fbld
dec
movsl
pop
in
dec
stos
dec
pop
sbb
shlb
or
cmp
inc
enter
lea
xchg
movsb
notb
pshufw
imul
jne
sar
addr16
cwtl
daa
inc
cmpsb
add
sub
mov
jle
mov
xor
push
sub
pop
pushf
sbb
sbb
mov
pop
mov
imul
movsl
jno
in
fwait
jmp
mov
cld
mov
inc
sahf
negl
cld
repnz
orl
in
mov
mov
push
div
aam
movsl
sub
jmp
lds
sarb
subb
mov
dec
push
push
hlt
and
sti
mov
scas
mov
addb
adc
or
mov
cmp
subb
fmuls
pop
inc
pop
pop
inc
loopne
loope
jmp
sub
sbb
add
and
dec
outsl
mov
pusha
fnsave
dec
sbb
lods
mov
mov
test
mov
pop
stos
pop
mov
mov
dec
dec
dec
pop
sti
ss
in
sbb
out
push
fists
dec
mov
test
fbld
sbb
jecxz
dec
fsubrl
fdivrp
mov
push
add
add
jle
data16
adc
push
push
mov
push
cmpb
in
cmp
dec
cmp
pop
sub
shrl
sbb
ret
mov
sub
and
jg
lahf
call
sbb
cmp
add
dec
inc
sar
hlt
cmp
in
cmpsb
lahf
jge
sub
outsb
call
insb
mov
fidivs
push
or
shrl
scas
test
scas
das
inc
fdecstp
inc
mov
and
xchg
stc
sbb
or
rclb
add
data16
testb
sub
rcrl
xor
outsb
lods
jge
sub
push
cmp
mov
popa
mov
mov
sub
outsb
cs
dec
mov
dec
adc
sbb
jno
and
mov
cs
mov
ljmp
shrb
leave
and
jmp
jo
xor
cli
es
popa
dec
mov
cmp
stos
or
pop
jno
jp
push
xchg
outsb
les
jno
and
adc
adc
popa
cld
pop
adc
les
fisttpll
fdivr
mov
dec
xor
inc
pop
daa
testl
xlat
fldt
mov
xor
mov
aaa
test
cwtl
rcrb
or
mull
jbe
dec
inc
in
or
pop
jl
jae
outsb
cmp
add
out
outsb
into
jecxz
pop
stc
pushf
in
loop
gs
repnz
jmp
loop
fnsave
pop
and
xchg
cmpsb
and
addr16
mov
xlat
pop
call
add
lock
imul
and
dec
lret
je
nop
lahf
stos
pop
lods
pop
repnz
jecxz
jp
and
sbb
fmull
pop
iret
in
cmp
adc
push
mov
sub
in
xor
sbb
or
rcr
pop
insb
clc
xchg
mov
fwait
lock
mov
xchg
mov
mov
add
jmp
in
insb
sub
inc
hlt
roll
sub
pop
shlb
mov
push
in
ret
lcall
lret
sub
or
and
fidivl
std
fsubp
repnz
add
cmpsl
dec
mov
fnstenv
in
orl
push
popw
cmpsl
mov
and
sar
fdivrs
sahf
xchg
adc
in
cmp
out
inc
pop
arpl
ss
test
push
push
mov
dec
add
adc
cli
es
in
ja
push
lret
ss
mov
jae
aaa
fcompl
mov
inc
popf
pop
pop
ds
sub
aad
fsts
bound
or
add
mov
xchg
sarl
xchg
and
xchg
rcr
lret
cmpsl
out
mov
shlb
gs
jbe
pusha
cmp
test
cmp
scas
push
push
pusha
mov
rolb
out
inc
push
hlt
cmc
push
test
fst
mov
mov
sub
xor
cmp
repz
or
les
xlat
mov
jg
mov
dec
xchg
fisubrs
adc
iret
repnz
cmp
pop
adc
dec
hlt
or
adc
testb
mov
lret
scas
mov
push
inc
push
imul
jl
cli
mov
jecxz
adc
push
mov
mull
mov
movsl
cli
scas
out
in
test
and
rcll
ds
mov
mov
dec
imul
push
sbb
das
stc
daa
xor
fdivrs
popf
test
cmp
sar
int3
ss
fsubrl
add
jnp
xlat
dec
iret
cmp
addl
jb
mov
aam
adc
in
push
cli
cmpsl
lods
daa
js
into
out
dec
cmp
pusha
pop
repnz
push
inc
mov
sub
mov
jnp
sar
push
das
loopne
mov
pop
push
push
inc
add
dec
cmp
jg
cmp
adc
nop
arpl
rorl
fwait
lret
mov
scas
js
mov
pop
or
hlt
mov
mov
ljmp
or
sub
pop
inc
mov
jns
fisubl
add
insb
enter
lcall
mov
outsb
test
nop
clc
es
and
jge
xchg
xor
mov
ficoml
mov
dec
mov
out
push
and
sub
add
in
jg
jle
stos
cli
aas
add
arpl
inc
inc
test
insl
lahf
lcall
out
dec
push
mov
lret
in
adc
and
xchg
scas
ret
cltd
jle
mov
push
mov
fucomp
loop
les
xchg
or
icebp
cli
mov
or
aad
jb
push
fsubr
mov
fbld
dec
mov
aam
data16
pop
adcl
stos
jnp
push
pop
jns
or
je
mov
push
lds
outsb
cmpsl
popa
mov
nop
pop
xchg
ss
xchg
adc
jo
rorb
jne
rcrl
lret
jmp
mov
mov
or
in
mov
aaa
jl
gs
test
imul
pop
sbb
adc
inc
jl
aas
mov
push
insb
add
xchg
jge
fwait
or
std
inc
mov
hlt
cmp
loope
pop
ja
clc
seta
xchg
xor
dec
mov
mov
mov
jae
push
pusha
pop
movsb
aaa
mov
push
cmp
add
mov
xor
push
pop
dec
push
dec
xor
setae
push
sbb
shr
imul
mov
mov
sub
xchg
sahf
inc
and
xchg
xchg
cld
jp
xlat
push
sahf
xchg
orb
popf
fdivr
mov
je
das
cmpsb
jmp
shll
xlat
push
mov
or
insb
dec
push
inc
cmpsl
call
sbb
stos
ss
mov
andl
test
mov
pop
jle
loope
add
adc
sbb
ss
or
xchg
xor
pushf
jmp
pusha
shrl
push
dec
call
jle
xorb
or
iret
lret
outsl
cmp
or
sbb
mov
sbb
repz
js
stc
fcmovnb
xor
sar
cmp
push
pushf
mov
push
sahf
add
enter
lret
test
cmpsb
adc
orl
lds
ficoms
sub
cmpsb
frstpm(287
arpl
bound
sub
push
push
sbb
nop
xlat
dec
xlat
popa
mov
mov
mov
mov
outsb
add
push
dec
test
add
and
orb
lea
cwtl
cmp
add
push
sub
mov
lods
ljmp
or
fcompl
dec
sub
fidivrl
jns
aaa
in
cmp
xchg
xchg
dec
lock
push
and
dec
inc
inc
rcl
es
xor
cli
xor
cmp
mov
or
aam
sub
outsl
sbb
mov
ret
dec
jns
jae
in
xchg
xchg
inc
push
cmpsl
push
jmp
shl
gs
pop
pop
inc
sarl
jle
ljmp
xchg
cmc
stos
rclb
sbbb
xchg
out
pop
jbe
sub
popl
data16
aas
xchg
push
mov
jle
fadd
scas
test
out
adcb
loop
cld
das
cmp
and
sbb
xchg
push
push
mov
and
call
loope,pt
push
inc
shl
push
movsb
pop
pop
cwtl
add
int
mov
out
mov
push
push
push
cltd
insb
pushf
in
test
cmpsl
jecxz
shl
mov
xchg
mov
or
xor
push
data16
loope
and
stos
push
inc
ja
aad
das
mov
mov
mov
xor
roll
push
ret
lret
ljmp
or
fiaddl
pop
ret
roll
dec
mov
fsts
maxps
adc
mov
clc
adc
xchg
pop
xchg
das
or
xchg
pop
or
les
push
inc
in
aas
dec
or
dec
cmp
and
mov
jl
xchg
mov
mov
cmp
ja
mov
dec
jl
adc
dec
test
xor
inc
pop
nop
lds
lcall
mov
in
lea
or
adc
push
fs
in
shll
xor
fs
lret
cmp
add
daa
xor
jmp
dec
push
scas
ss
jle
push
pop
fbld
in
test
jne
enter
rclb
sbbl
push
xchg
jmp
jb
xor
or
insb
sub
xor
mov
fnclex
or
cld
fcompl
hlt
cwtl
mov
addb
sbb
in
sbb
add
mov
cmc
and
xchg
sbb
push
rcrl
outsl
inc
sbb
cwtl
xchg
fisubrl
mov
or
mov
pop
jae
mov
gs
jns
lret
sbb
adc
cwtl
nop
fsubp
in
or
gs
call
movsl
mov
pop
xor
mov
and
out
sahf
jns
in
rclb
mov
les
std
insl
xchg
iret
push
pop
lea
pop
fadds
xchg
daa
mov
lods
data16
stc
push
iret
push
mov
or
icebp
jl
sbb
repnz
jmp
insl
cmc
cmc
push
sti
xchg
into
loope
xchg
div
adc
cmp
adc
sub
push
adc
iret
xor
out
cmp
dec
mov
andl
mov
sub
stc
mov
sub
push
and
adc
lahf
shl
test
movsl
iret
ja
inc
xor
in
in
pusha
cmpsb
cmpsl
in
sti
cwtl
ret
inc
mov
push
stos
shlb
out
mov
lods
sahf
outsb
inc
jecxz
test
aad
in
loop
fdivs
int3
pop
inc
jno
or
mov
insl
cmp
enter
lds
xor
or
mov
sub
cmc
or
insl
mov
in
icebp
enter
xchg
jge
add
es
xor
inc
mov
adc
mov
ror
rol
inc
test
jb
inc
in
mov
inc
fs
pop
sub
jne
andb
test
cltd
mov
sub
xlat
jnp
sub
hlt
mov
in
jns
lret
movsb
xor
fcompl
clc
mov
inc
das
dec
out
std
mov
xchg
sub
pop
lods
jl
mov
dec
cli
push
mov
fdivp
and
fbld
jne
in
mov
or
insl
add
mov
xor
inc
loope
jns
sti
add
lret
aam
mov
cld
jmp
pop
addb
in
mov
imul
outsb
xor
push
xor
mov
or
inc
imul
scas
outsb
jl
mov
jnp
xor
scas
jecxz
and
or
xchg
and
xchg
pushf
sub
cmpsl
mov
xchg
stc
pop
ds
inc
mov
sub
adcb
dec
setge
mov
fwait
in
out
adc
dec
lds
xchg
incb
sarl
pop
test
ds
enter
test
jg
and
outsb
and
jle
out
shrb
pop
lds
mov
mov
xchg
cmp
arpl
aaa
jo
in
and
mov
out
mov
adc
clc
fisttpl
pop
xchg
rcrl
aaa
xorb
call
ja
pop
xor
jle
push
jmp
mov
lcall
sub
fwait
cld
fsub
roll
loop
jne
push
mov
mov
mov
fstps
js
aas
and
in
insb
lock
sub
jle
aad
mov
push
scas
adc
stos
pusha
push
xorb
jbe
mov
adc
adc
das
lcall
cmp
jl
pop
dec
out
pop
mov
jg
dec
rorb
cmp
pop
jno
adc
daa
aam
fdivrp
or
push
mov
or
add
test
subb
dec
das
pop
insb
dec
je
cmp
push
mov
mov
out
sbb
mov
inc
ret
jle
jg
sub
and
dec
imul
mov
inc
or
shrb
fstps
sbb
mov
out
pop
leave
lds
inc
sub
add
ficoms
xchg
adc
mov
mov
fistpll
movsl
aaa
and
lcall
xor
lahf
fisubl
aas
bound
and
pop
imul
push
xchg
sub
mov
jg
cmpsb
mov
add
xchg
aaa
out
es
cmc
sbb
in
xchg
int3
mov
pop
inc
add
push
inc
lea
sub
insb
dec
sbb
aas
inc
outsl
mov
xor
dec
adc
fldt
iret
push
scas
call
fisttps
mulb
add
stc
pusha
jmp
inc
nop
repnz
push
cmp
xchg
cli
pop
popa
sub
into
insb
mov
aam
roll
xlat
inc
rcrb
in
fwait
xchg
mov
dec
dec
mov
pop
jo
jg
adc
xor
ljmp
sub
daa
jmp
add
mov
loope
jmp
test
jns
sbb
adc
pop
stos
movsb
hlt
pop
mov
cmpl
sbb
mov
xor
cmp
xor
in
push
pop
xchg
adc
inc
stc
dec
addl
mov
cwtl
sbb
enter
out
xchg
jae
and
mov
icebp
push
or
cmp
pop
fldcw
mul
inc
into
out
int3
pop
test
add
lcall
in
out
outsl
fwait
cmp
jle
ds
shll
mov
dec
mov
dec
xchg
mov
and
pop
dec
sbb
jp
imul
vdivsd
push
pop
or
dec
lcall
and
jg
cmp
jae
adc
idivb
jne
movsb
pusha
pushf
lret
mov
iret
insl
xor
ret
adc
lods
cmp
push
fcoml
and
add
jne
mov
cli
adc
fsubrl
mov
mov
adc
jle
out
adc
popa
hlt
outsb
xor
cmp
sbb
daa
lock
adc
sub
pop
jo
lret
mov
xchg
mov
dec
incb
mov
or
lcall
icebp
mov
mov
mov
mov
call
mov
pop
rorb
int
sbb
dec
int3
dec
loop
push
inc
cltd
imul
jae
mov
cmp
pop
shlb
add
pop
dec
ss
cli
fstps
sub
out
out
mov
out
push
ljmp
jne
pop
pushf
shll
jle
mov
sahf
or
jno
xchg
sbb
into
ss
outsl
bound
jb
sub
jno
test
dec
adc
mov
mov
fidivl
pusha
add
mov
push
xor
xchg
jae
pop
mov
cwtl
dec
out
or
mov
pop
jnp
data16
icebp
int3
cs
out
fiaddl
inc
cmpsb
mov
sbb
lcall
add
fmull
mov
adc
lcall
mov
fidivrl
push
insl
stos
and
enter
enter
cmpsl
mov
pop
outsl
add
test
dec
mov
adc
push
sbb
fwait
xorl
mov
mov
cmp
inc
call
mov
out
jge
out
jno
push
fldln2
popa
and
sub
inc
mov
xchg
cwtl
mov
xchg
mov
inc
test
js
or
sub
or
les
aas
fwait
movsl
xlat
or
mov
lock
or
aas
lds
jp
cmp
jno
jnp
push
shrb
movsb
jge
dec
pop
repnz
mov
cmpl
jge
daa
pop
xchg
inc
push
mov
ret
jns
adc
lahf
mov
xchg
sub
aam
and
sarb
clc
mov
rcl
mov
pop
sbb
sub
inc
push
add
sbb
mov
popf
dec
lods
mov
add
rcrl
in
into
mov
xor
mov
inc
xor
jne
and
push
xchg
or
pop
out
adc
addr16
sarl
sbb
cmp
pop
dec
gs
fwait
cmp
fcomps
lret
or
fdivrl
pop
add
xor
xchg
inc
mov
sahf
lcall
or
push
adcl
lahf
mov
pusha
sti
mov
dec
jge
xor
xor
pop
inc
fsubrl
mov
or
jge
xchg
adc
das
sub
and
add
dec
subb
lahf
mov
pop
outsb
sti
repz
adc
push
or
outsb
mov
inc
in
jl
push
or
push
sahf
mov
inc
pushf
xchg
cmp
pop
mov
mov
mov
xchg
mov
pop
push
sahf
mov
movsl
hlt
pop
out
scas
loope
cwtl
mov
movsl
sub
es
push
mov
addl
sbb
adc
rcrl
gs
inc
in
mov
lcall
out
jge
roll
mov
mulb
mov
test
mov
hlt
sbb
cmp
or
xor
sbb
inc
inc
mov
mov
dec
push
jno
aas
das
scas
lret
sbb
sub
pop
in
repnz
pop
mov
sub
dec
jl
mov
pop
fsubs
pop
sub
mov
in
and
mov
jmp
nop
cmpb
mov
dec
adcb
lds
or
pop
pushf
pop
inc
adc
dec
or
mov
lods
into
mov
lods
pusha
jae
cmpsl
lods
mov
sbb
cmpsb
repz
and
and
ja
mov
addr16
and
add
push
sbb
pop
fldl
cmpsl
jmp
cmpsb
push
mov
mov
in
jnp
jmp
movsl
out
or
xor
fs
mov
cmc
iret
jae
subl
push
lock
push
addr16
inc
push
mov
push
cmp
mov
pop
mov
enter
add
popf
or
jecxz
das
or
out
jnp
in
push
aas
repz
js
jno
loopne
xlat
std
stc
mov
sub
jecxz
mov
inc
push
push
push
test
decb
push
aas
test
dec
add
sbb
xor
pop
cltd
daa
jl
pop
push
cld
or
stos
ljmp
out
sbb
icebp
jl
inc
sub
mov
xchg
mov
ficoml
repnz
or
adc
das
xchg
mov
add
cmpsb
orb
dec
xor
and
and
pop
sub
andb
mov
push
mov
lods
add
lcall
mov
cs
xchg
idivl
scas
cmpsb
mov
cmp
mov
mov
sbb
adc
aas
mov
lods
sbb
daa
imul
and
decb
jecxz
shrb
loop
pop
ficoms
loopne
dec
jno
hlt
das
inc
lret
arpl
shlb
pushf
and
inc
in
pop
sbb
ja
jae
das
pusha
in
fcomip
js
stos
pushf
xchg
xchg
bound
inc
shll
or
push
scas
jg,pn
jb
cmpsl
lret
pop
enter
rclb
shl
push
aam
pop
xchg
cs
and
push
cmpsb
or
xchg
cmpsl
scas
mov
adc
shr
imul
jnp
push
inc
test
inc
xlat
xchg
push
mov
adc
rcpps
outsb
adc
fcmovnb
mov
enter
sub
push
dec
jb
repz
ds
lret
jge
sub
movsl
xchg
xchg
icebp
add
je
mov
jno
cmpsb
sahf
xchg
pop
xchg
jnp
sbb
push
repz
inc
cmp
fstl
sub
adc
mov
xor
and
sbb
call
shlb
and
imul
pop
ror
dec
pop
pop
mov
insb
fistl
scas
in
mov
inc
lock
xor
xor
cmc
xchg
ret
cmp
mov
inc
loop
jl
xor
jmp
sahf
repnz
pop
fidivrl
stc
cli
sub
adc
and
mov
pop
in
outsb
push
mov
pusha
ja
jbe
add
lret
mov
push
mov
fldenv
dec
cmc
icebp
scas
ds
daa
iret
and
leave
push
fs
in
lods
pop
sbb
mov
fdiv
mov
fwait
push
in
shl
bound
clc
xchg
out
cmp
lock
jp
dec
loop
call
sbb
ret
cmc
ficompl
mov
fsubrl
xor
into
orb
aas
iret
addb
add
mov
cwtl
mov
loop
add
movb
mov
leave
mov
pop
xlat
mov
and
ret
xor
pushf
ret
mov
imul
jge
fidivl
xchg
push
rcll
push
mov
pop
dec
xchg
cmp
jecxz
fwait
rcrl
jp
jge
js
fistl
inc
dec
xchg
push
add
pushf
jmp
shlb
inc
mov
ret
sar
cmpsl
cmpsb
lock
je
xlat
test
imul
les
dec
icebp
mov
cmpsb
push
fbstp
into
cmp
out
jle
pop
and
movsb
imul
imul
mov
fmulp
dec
adc
int
jp
mov
cli
pop
dec
outsb
loop
mov
sarb
xchg
pop
nop
dec
pop
mov
cmpsl
ljmp
jno
inc
xchg
outsb
xor
pop
hlt
or
les
push
neg
mov
nop
push
jae
add
xchg
pop
inc
jge
imul
mov
push
mov
cmpb
mov
push
and
or
xchg
insb
cld
xchg
loopne
and
daa
stos
push
fcomps
fldenv
push
sbb
test
xor
test
aas
aas
aad
cmpsl
mov
push
xlat
gs
add
push
xchg
shrb
inc
test
adc
jbe
mov
into
shrl
cmpsb
test
jb
ret
dec
nop
out
rcrl
adc
xor
out
xlat
and
push
iret
cmp
rcrb
fildll
cld
sbb
or
les
mov
push
sahf
sbb
hlt
rorl
add
nop
mov
mov
mov
push
movsb
adc
push
fbstp
lea
xchg
jg
xor
out
fsqrt
add
sbb
rclb
fs
outsl
ja
jbe
popa
lods
sbb
push
imul
jge
lods
cmp
and
scas
sbb
enter
fs
mov
inc
pop
xlat
push
popf
scas
fimuls
dec
add
hlt
hlt
pop
daa
shlb
mov
orb
mov
cmp
push
jne
mov
movsb
out
sbb
mov
jo
lret
or
xchg
les
xchg
loop
mov
or
mov
jecxz
lds
xchg
ret
pushl
mov
inc
or
enter
mov
data16
cli
aam
sub
in
into
addb
lahf
fnstsw
das
push
lods
inc
mov
push
mov
add
int3
fwait
daa
hlt
fs
cltd
pop
inc
sbb
les
test
insb
or
pop
fnstcw
xor
arpl
hlt
sbb
negl
ja
lods
add
jg
mov
adc
cmp
jl
mov
shrb
cmpsb
mov
in
lret
rol
bnd
add
or
and
popa
outsl
repnz
pop
and
mov
xchg
jl
mov
cli
cmp
pop
adc
jg
mov
cs
mov
inc
dec
mov
clc
loope
push
mov
mov
mov
dec
test
jecxz
or
sbb
arpl
sub
fildl
sbb
jp
leave
xchg
mov
dec
leave
sbb
add
adc
xchg
add
mov
fmull
test
xchg
cmp
dec
leave
pop
lahf
mov
push
adc
imul
out
shl
outsl
xchg
push
mov
call
mov
jnp
jb
xchg
mov
dec
int
xor
pushl
add
outsl
xor
test
or
icebp
push
fmull
cmc
mov
test
dec
fsts
into
xor
popl
movsl
fidivrs
add
popa
and
in
ret
je
mov
andl
test
adc
shrl
dec
xlat
ficoms
sbb
push
dec
mov
lock
outsb
call
scas
fcomip
xchg
adc
inc
sub
xor
out
adc
add
adc
adc
repz
sti
in
mov
xor
jne
mov
sub
lret
adc
in
leave
push
and
call
test
idiv
fldcw
add
aaa
pop
loop
add
scas
mov
xchg
xchg
sub
xchg
mov
adc
xchg
mov
push
nop
jg
xor
les
push
fiadds
jg
add
leave
add
dec
inc
adc
dec
push
scas
or
push
fldl
ljmp
das
stos
cmp
jg
adc
inc
jo
push
jl
sbb
jg
loop
repnz
movsl
loop
mov
xchg
gs
mov
arpl
pushf
xchg
jmp
xchg
pop
xor
xchg
adc
int3
pushf
push
sbb
cwtl
test
and
or
shl
lcall
push
fwait
imul
sub
sub
popl
sbbb
rolb
push
sbb
stc
xchg
xchg
shll
jecxz
xchg
and
mov
mov
pop
ficompl
and
stos
adc
lret
inc
cwtl
fs
and
in
icebp
mov
in
push
mov
fld
lea
xlat
sub
jle
push
add
xchg
fcomps
xor
call
dec
cmp
in
outsb
and
popf
adc
jbe
cmp
add
mov
sbb
inc
test
scas
xlat
sbb
xchg
iret
push
std
inc
popa
push
pop
in
daa
pop
dec
sbb
stos
dec
or
inc
sahf
jns
jbe
xor
jo
pop
jne
inc
dec
cmp
add
orl
lahf
xor
ja
rol
pop
pop
dec
clc
pop
pop
dec
cmp
testb
add
inc
push
xchg
inc
cmp
cmp
mov
push
and
ss
push
ficoms
fstpl
cmp
cmpb
cmp
js
and
je
jmp
pop
fistpl
daa
shlb
les
mov
dec
dec
in
cmp
ret
test
mov
mov
insl
icebp
dec
push
cltd
push
xorl
hlt
int3
or
data16
mov
xchg
add
pop
enter
insl
jbe
popa
pop
rcrl
in
jae
xor
xchg
ficomps
ds
loopne
add
push
and
sti
fstpt
movsb
gs
fs
mov
push
fldenv
cmpsb
mov
negb
adc
aad
dec
jg
or
cmpsl
sub
in
stos
dec
push
icebp
xor
jl
sbb
lret
dec
pop
mov
mov
dec
or
stc
aad
aaa
or
and
dec
and
push
in
push
mov
pop
fs
repnz
jle
and
jl
cwtl
dec
jg
mov
and
inc
sarl
jno
push
mov
jne
xor
adc
dec
lcall
movsl
inc
popf
push
mov
sbb
push
mov
sbb
ljmp
lahf
jno
cmc
inc
icebp
daa
fsubr
pop
jmp
lret
sarb
shll
cmp
xchg
das
rorb
inc
lret
call
xor
rcrl
push
dec
and
scas
std
jbe
enter
imulb
dec
adc
in
jbe
fnstenv
xchg
test
and
fstpl
idivl
loop
adc
iret
imul
jl
int
mov
lea
out
test
je
jne
into
movb
movsb
ljmp
mov
xor
test
xlat
push
repz
mov
or
sbb
mov
loopne
out
sbb
call
insb
rol
mov
xchg
push
sahf
addps
lret
out
xor
xchg
add
pop
scas
push
jp
add
adcl
cmp
fdiv
orl
mov
int
or
sub
inc
add
adc
loop
sbb
cwtl
jo
xchg
iret
sbb
mov
xchg
data16
xchg
imul
stc
jmp
movsl
testl
jg
pop
gs
add
clc
and
mov
jle
cmp
insl
out
sbb
or
or
rcll
aam
hlt
lods
sbb
cmp
andl
test
add
fimull
sub
xor
cltd
mov
scas
fwait
jle
nop
jns
cmpsl
mov
adcl
jb
ljmp
aam
inc
mov
sbb
mov
mov
mov
and
cmp
leave
shrl
aas
mov
dec
pop
cwtl
in
jge
cli
add
loopne
and
and
inc
push
sub
js
js
push
fstp
out
dec
lret
mov
sub
push
add
lcall
mov
inc
imul
loopne
js
lret
inc
insb
or
mov
push
notb
aaa
mov
cwtl
mov
push
ja
subb
jno
cltd
out
lret
out
shll
add
dec
movsl
fidivrs
mov
clc
cmp
or
and
je
xchg
stc
pop
push
jp
insb
cmp
andb
rcrb
imul
leave
test
push
inc
or
test
lock
loop
fisttpl
loope
stos
mov
push
out
mov
mov
mov
jae
lds
push
sub
int
cmc
inc
popf
xor
popf
pushf
xor
fisttpl
and
push
dec
mov
test
adc
add
imul
lds
sub
lea
push
shrl
lods
xchg
test
push
scas
negl
rolb
aas
les
sbbl
movsl
xchg
pushf
scas
lret
les
ficoms
dec
stos
out
std
gs
ljmp
divl
and
enter
sbb
mov
mov
das
or
je
push
not
xor
mov
ret
push
pop
in
adc
inc
jge
sbb
ljmp
fwait
imul
xchg
inc
testb
iret
mov
mov
cmc
fisubl
fdivs
xor
ss
mov
mov
aaa
xchg
dec
in
xchg
fs
sarb
or
cmc
lea
mov
push
fwait
addl
pop
dec
cmpsl
mov
fstps
in
out
mov
jecxz
fwait
add
cmp
fnstenv
shrb
rcrl
xor
enter
and
lcall
adc
mov
adc
dec
addr16
push
add
fs
push
dec
jl
testl
or
adc
into
fisubs
push
mov
mov
mov
aaa
push
push
imul
ds
xor
divb
push
addr16
popf
addr16
repz
xor
mov
adc
mov
mull
fistl
dec
rcrb
daa
movsl
repz
mov
idivl
mov
jmp
out
cmp
mov
sub
idivb
mov
mov
rcr
sub
mov
pop
sarb
mov
xchg
jbe
xor
add
mov
in
pop
pop
lods
cmp
push
xchg
nop
xchg
jg
lahf
jbe
pop
loope
mov
test
add
dec
sub
xor
lcall
adc
mov
js
xor
lret
sti
int
in
ss
aad
xchg
push
loop
addr16
push
scas
test
les
fldl
mov
mov
or
jge
inc
and
cmc
or
fs
jb
xor
in
mov
jge
cmc
mov
xchg
cltd
or
or
repz
into
fimull
pushf
aaa
lret
movsl
xchg
stos
mov
adc
hlt
cmp
stos
jg
sbb
adc
pop
xchg
cmc
jmp
pop
mov
out
lds
fidivl
fstpt
arpl
jnp
cmpsl
icebp
jns
test
adc
push
out
std
add
xchg
jmp
out
into
jo
mov
mov
or
sbb
test
loope
outsb
lcall
fdivrs
or
aad
mov
dec
sti
cld
xor
xchg
lcall
xrelease
mov
dec
pop
inc
int
in
fisttps
sti
sub
jg
scas
and
add
cmp
sbb
sub
and
icebp
les
les
lcall
fs
jle
fistpl
xor
and
and
sbb
ja
iret
inc
rcrl
rcll
or
lock
std
sbb
lods
xchg
and
xor
cld
jmp
xor
sbb
sbb
mov
mov
enter
mov
addr16
test
fldcw
les
cmpsb
sub
mov
jbe
xchg
int
inc
dec
fcomip
scas
push
fwait
lods
xor
push
mov
movsb
loop
adc
outsl
imul
pop
mov
lcall
sub
test
adcb
imulb
stos
cmp
lea
js
adc
mov
lahf
cmp
jp
out
adc
movsl
and
fldenv
xor
cld
fmull
popf
mov
cmc
sbb
adc
adc
cmp
repz
loopne
cmp
cs
inc
ret
cmp
inc
je
imul
loop
push
jns
int
pop
outsl
rorl
test
mov
jne
jo
lret
and
push
xor
push
lds
ret
pop
imul
in
test
insb
dec
scas
ret
sbb
movb
pop
push
or
out
jo
ja
pop
sbb
call
sub
xchg
xor
scas
push
fucom
testb
jbe
outsb
inc
mov
dec
lods
int
test
sti
inc
mov
call
dec
cli
mov
jecxz
mov
sbb
pop
sbb
xchg
aad
shll
lcall
and
sbb
ds
orb
ds
cmp
test
push
sub
dec
sbb
int
gs
push
dec
rol
test
inc
in
je
xchg
and
xor
movsl
test
ja
pop
fsts
movsb
fucom
enter
mov
dec
nop
or
outsl
cmpsb
cmpb
add
sub
mov
lock
lret
int3
fmuls
cmpl
icebp
in
cltd
in
shl
cli
rolb
mov
add
inc
mov
xchg
xchg
mov
enter
sarb
stos
rclb
les
adc
popa
adc
mov
adc
fstl
jbe
xor
cwtl
jmp
cmpsl
out
pusha
out
out
iret
inc
adc
ret
inc
addl
jl
xlat
mov
test
scas
xor
pushl
dec
pop
mov
sub
inc
daa
hlt
faddl
mov
jecxz
adc
sbb
lock
xor
xchg
insl
filds
jae
sbb
sbb
bound
mov
cmp
sub
or
mov
xchg
lcall
push
mov
shlb
in
sub
lcall
sub
popf
push
mov
in
repnz
arpl
or
arpl
fadd
xchg
push
into
jb
sahf
lock
adc
enter
das
mov
mov
mov
xchg
stos
xchg
and
xor
xor
das
in
stos
xchg
inc
pop
add
scas
or
mov
jb
or
fcmovbe
in
ds
sti
mov
lods
repnz
adc
fs
sub
xor
int
les
push
hlt
test
addb
sti
push
or
ret
rclb
xchg
adc
cmpsl
mov
mov
aad
lods
cmp
jecxz
push
rcr
mov
cltd
mov
iret
sbbl
dec
fldlg2
add
daa
das
andnps
mull
pop
push
pop
mov
or
loope
xor
jmp
xchg
pushf
pop
iret
mov
cli
sbb
std
jb
into
cmp
jae
mov
cltd
fnstcw
andl
pop
cmc
lahf
push
cmpsb
out
pop
ficomps
sar
xchg
mov
adc
loope
cld
push
mov
push
sub
xchg
lods
enter
cmp
and
lahf
lcall
addr16
and
cmc
out
scas
rcrb
adc
jecxz
das
or
and
movsb
sbb
in
pop
je
inc
sub
rolb
cmp
mov
stc
mov
xchg
mov
jne
jl
jo
out
ljmp
cmpsl
pop
add
mov
mov
cmpsl
push
loope
pop
lcall
dec
or
leave
jge
in
and
inc
jmp
pusha
or
nop
arpl
and
scas
cmp
jge
sbb
pop
inc
popf
nop
sub
outsl
mov
lret
cltd
iret
and
mov
mov
adc
mov
sub
test
and
ja
adc
ret
xor
aaa
jp
inc
test
mov
inc
add
add
fdivrl
adc
test
fildll
lret
icebp
pop
ds
add
int3
pop
sub
mov
dec
shlb
xorl
lock
es
mov
incl
sahf
xchg
icebp
sub
lds
dec
insb
lea
or
filds
call
jo
les
xchg
dec
sub
insl
fs
int3
dec
push
lcall
sbb
xor
popf
lock
js
icebp
or
push
rcpps
aaa
and
mov
or
dec
movsl
imul
in
scas
xlat
cs
xor
or
push
outsb
rclb
dec
in
pop
jl
shrl
add
ja
pop
xchg
cmp
push
lcall
int
xchg
lahf
mov
jge
std
or
sbb
xchg
pop
mov
adc
or
shrl
lcall
daa
jnp
and
mov
mov
and
mov
mov
addb
outsl
lcall
pop
popf
fidivrs
sub
aaa
pop
insl
add
stos
pop
std
adc
lret
movsb
dec
jl
mov
lret
push
out
push
push
rolb
fdivl
in
push
in
sbb
mov
lods
fs
adc
mov
jne
add
or
pop
repnz
mov
cmp
test
ds
popf
pop
out
mov
add
rcrl
fwait
dec
xchg
adc
mov
xchg
add
dec
mov
in
push
and
lods
stc
xchg
jg
popa
mov
adcl
inc
sub
push
pop
inc
mov
sub
lahf
adc
and
and
dec
insb
cs
dec
lret
sbb
push
push
icebp
in
aad
mov
sbb
clc
test
adc
es
gs
add
mov
mov
mov
inc
das
xchg
loop
sub
jb
push
jl
jbe
lea
add
in
dec
cmp
sub
cmp
into
pop
fcoml
cmp
cmp
inc
pop
fadds
test
xor
xor
inc
xchg
cmp
test
or
adc
pop
or
sbb
rorl
mov
leave
jnp
xchg
or
test
jmp
or
sbb
xor
adc
in
pop
lock
push
sbb
movsb
and
in
shll
xchg
adc
xchg
pop
leave
hlt
cmp
iret
ljmp
pop
fldenv
imul
adc
sub
insb
jmp
mov
xchg
jmp
pushf
mov
cmp
outsl
adc
lods
inc
bnd
or
sarl
test
inc
push
xchg
ja
or
int
sub
insb
adc
jge
ficoms
push
push
or
or
sbb
xor
xchg
sbb
dec
mov
int3
sahf
int3
outsb
pop
or
mov
outsl
pop
xchg
dec
sub
pop
push
or
push
xorb
insl
test
xorb
icebp
pop
push
leave
mov
dec
negl
pop
std
mov
sbb
in
xchg
out
hlt
cmp
repnz
nop
push
cld
xor
or
ja
orb
ljmp
cmp
stos
stos
pop
jae
sti
mov
pop
repz
lret
pop
mul
dec
mov
test
jmp
out
stos
dec
mov
xchg
outsb
iret
cmp
push
loop
into
fbstp
xlat
pop
mov
inc
add
and
rcr
sub
inc
test
sbb
jecxz
inc
stos
dec
jmp
cmp
data16
xchg
xchg
mov
js
inc
pop
cld
outsl
je
jmp
lds
mov
push
and
or
push
mov
add
or
fldt
in
cmp
call
jle
mov
out
jp
clc
ss
cld
mov
inc
daa
mov
push
xor
lahf
pop
push
xor
adc
sbb
jo
arpl
andl
imul
or
adc
mov
mov
popf
push
sti
pop
jne
dec
repz
pushf
adc
clc
je
xor
xchg
adc
push
shrb
cmp
repnz
sbb
neg
mov
mov
pop
es
push
divb
mov
lds
lods
pop
mov
sbb
xchg
or
cmpsb
ret
pop
cmp
or
cmp
jno
ds
mov
pop
js
adc
adc
adc
popf
inc
inc
stos
enter
stos
aad
sbb
loope
in
mov
pop
ret
mov
mov
jbe
ret
orb
cld
fwait
push
mov
pusha
add
pop
leave
loopne
adc
jns
shl
xchg
daa
std
pop
popa
push
inc
cmovo
test
lret
pusha
imul
mov
dec
stc
mov
sub
jns
lret
enter
push
ficomps
mov
sub
faddl
dec
add
nop
push
add
lret
mov
sub
mov
mov
sub
sub
test
scas
repz
imul
es
test
mov
mov
int
jo
ret
xchg
pop
jge
rsm
xorl
mov
xchg
test
sub
fmuls
enter
std
push
ja
mov
js
xchg
fidivs
sbb
lahf
inc
add
rol
mov
stos
inc
dec
sub
sub
dec
out
sbb
mov
cmp
cs
leave
xlat
jmp
jg
lahf
mov
push
pushf
dec
dec
jmp
cmp
mov
mov
outsb
repnz
push
movsb
xor
pop
aaa
pop
mov
mov
xor
jns
jae
in
fwait
enter
mov
std
inc
fcom
jl
and
dec
stos
push
lock
es
pop
mov
and
out
jp
jmp
mov
jp
mov
xchg
insl
in
cmp
out
orb
lret
fwait
ret
and
jl
or
sbb
pop
pop
mov
adc
cwtl
or
sti
cld
inc
xor
and
gs
jge
sbbb
pop
pop
out
dec
fstl
scas
push
or
pushf
sub
lods
clc
into
push
pop
push
fdivl
jo
pop
cs
jae
and
rcrl
push
incb
xor
ror
adc
leave
adc
push
fwait
push
fildll
sbb
mov
and
ljmp
pop
adc
inc
sub
mov
cmp
js
pusha
movl
icebp
push
inc
adc
rcrb
mov
shrl
adc
popa
and
iret
pop
aam
lahf
lret
jp
loopne
inc
lret
cmp
dec
add
jmp
xlat
adcb
repz
es
mov
ret
mov
out
insb
repz
pop
mov
mov
jp
mov
test
outsb
fincstp
out
lret
rcr
mov
mov
jp
xchg
sub
add
decl
sti
iret
xor
dec
cld
lock
push
enter
pop
or
inc
into
jp
aad
popf
push
mov
ljmp
jb
push
push
mov
cwtl
test
lret
pusha
aam
insb
push
ja
adc
insl
in
daa
xchg
pushf
insb
lock
jne
aaa
jo
inc
xchg
leave
sarb
popa
push
addr16
iret
test
pop
xor
inc
pop
and
aas
ret
cli
ja
dec
push
adc
inc
fwait
cs
int
mov
test
jno
cmp
outsl
add
sbb
push
dec
flds
pusha
pusha
lods
lods
sbb
xor
jmp
lods
sbb
and
sbb
dec
in
xchg
and
sub
inc
repz
mov
xchg
dec
dec
stos
or
movsb
sahf
inc
movsl
xor
repnz
outsl
push
lcall
mov
repnz
cmpb
movsb
or
fcmovnb
jle
out
scas
icebp
mov
sbb
dec
hlt
cli
out
call
sahf
divb
cmp
bnd
xchg
mov
mov
arpl
pop
dec
pop
aad
fiaddl
pop
mov
xchg
scas
sbb
clc
and
daa
jne
je
sbb
inc
movsb
pushf
or
mov
movsb
ffreep
nop
sbb
sahf
cwtl
add
es
add
inc
jb
dec
sahf
push
cmp
sub
roll
mov
hlt
call
loop
test
and
out
pop
and
loopne
mov
or
or
or
or
jne
push
fstl
loope
pushf
lret
js
call
xor
arpl
jmp
and
cwtl
add
adc
xor
pop
xchg
into
cmc
leave
insl
and
lods
mov
xchg
fistps
bound
add
inc
lods
popf
mov
fwait
adc
bound
cmp
mov
and
shrl
fstps
leave
and
mov
addr16
pop
push
jge
jmp
mov
cmp
insb
pop
push
jge
pop
jge
pushf
and
xor
addr16
add
mov
push
pop
cwtl
xor
xchg
leave
sahf
or
jle
pop
and
inc
imul
in
or
popf
repnz
add
cmc
xor
jge
imul
pop
inc
mov
mov
jg
and
jg
addr16
or
jnp
je
shl
sbb
xchg
pop
xlat
das
fldcw
sub
mov
jecxz
mov
xor
pop
push
pop
xchg
and
add
mov
cs
lods
sub
mov
sbb
inc
jle
and
lods
cltd
mov
jge
repnz
jo
test
pusha
sub
mov
and
pop
inc
or
jo
out
jo
mov
leave
mov
rcrb
push
cli
std
xchg
mov
sub
loop
scas
iret
test
imul
adc
cmp
mov
mov
imul
pop
inc
mov
sarb
xchg
bound
adc
in
mov
test
mov
jmp
mov
cmp
sti
mov
aaa
mov
jmp
pop
icebp
insl
shlb
push
dec
adc
jp
pusha
mov
imul
inc
adc
out
mov
out
arpl
jo
out
imul
add
js
sbb
mov
adc
sti
pop
cltd
in
xchg
test
pop
mov
add
test
pop
and
cmp
xor
out
jno
sub
xor
jecxz
cwtl
cmp
fsubrl
shlb
inc
push
pop
cmp
fcoms
add
int
cmp
jg
pop
or
push
dec
xchg
popf
mov
jno
rcll
ret
or
mov
rcll
fidivrs
adc
mov
jbe
sti
dec
mov
test
push
jnp
outsb
test
jno
mov
jo
andl
xchg
push
mov
aam
imul
sbbb
add
lock
int
mov
sub
xchg
mov
xchg
imul
jno
cmp
adc
sub
and
cltd
sahf
mov
fwait
sub
sbb
sti
mull
jl
mov
mov
les
fidivs
or
mov
pop
inc
and
outsl
out
mov
imul
mov
std
iret
pop
inc
lock
aad
loop
add
sub
stc
mov
les
xchg
in
sbb
in
outsb
mov
pop
jl
loope
lret
rcll
cmp
cmpsb
test
or
sub
pop
mov
sbb
xor
or
inc
les
popf
jo
testb
movsl
repz
pusha
test
push
dec
outsl
and
stos
mov
movsb
sub
js
sub
cmpsb
sahf
outsl
push
jmp
mov
js
lcall
or
xor
cltd
cld
cmp
scas
mov
mov
inc
inc
pop
sahf
sub
aaa
xchg
cli
add
pop
xlat
popa
scas
dec
aad
rcll
ljmp
push
xchg
mov
ja
xchg
adc
pop
add
sti
xchg
push
push
in
int
sub
cwtl
lret
ds
pop
mov
push
pop
lock
dec
jae
cmp
shrb
ficomps
jle
push
cmovnp
jg
js
mov
mov
icebp
lcall
sbb
push
fcom
mov
adc
lcall
scas
test
outsl
pop
repnz
cmpl
shrl
mov
out
mov
rcrl
push
orb
adc
jg
insl
xchg
jne
add
test
out
daa
sub
pop
push
dec
lret
mov
repnz
xchg
lea
loope
out
jmp
aas
test
dec
hlt
gs
sub
pop
mov
hlt
fwait
int
mov
sbb
cltd
inc
test
test
cli
call
aaa
out
xchg
aad
mov
push
mov
jnp
ja
jmp
jb
lahf
jge
or
test
addb
mov
dec
adc
loopne
mov
cmc
mov
test
mov
fs
movntq
inc
push
cld
ja
subb
test
mov
sub
xor
xor
mov
mov
loop
xor
adc
cmpsb
cmp
push
mov
sahf
das
and
jno
aad
daa
stc
ret
in
stc
xchg
popa
lods
or
xchg
jnp
jle
jne
push
push
xlat
imul
mov
lds
sarl
xorb
xor
icebp
ljmp
data16
pop
add
stc
insb
jge
pop
xor
xchg
sub
lods
into
add
lods
paddsw
and
xchg
or
cltd
fstpt
test
xchg
pop
push
jle
pop
dec
jp
add
cs
test
sub
xchg
push
ljmp
addr16
lods
cwtl
jnp
lock
cs
pop
mov
xchg
vmovapd
test
je
jb
xchg
mulb
sarb
sbb
mov
out
add
rcr
lods
ds
xchg
mov
jo
mov
movl
ss
cltd
cmc
pop
ds
jle
fsubp
testl
adc
cmc
ret
add
lcall
mov
mov
sub
insb
jo
les
push
push
cmp
pop
sbb
mov
cmpb
in
inc
ficomps
nop
inc
call
adc
jecxz
sub
sbb
xchg
or
jb
xchg
movsl
arpl
incb
aad
lds
add
lret
or
and
lret
movsl
and
jmp
cld
mov
arpl
push
jg
jmp
int3
popf
scas
movsb
ret
fcmovbe
mov
mov
sub
repz
test
out
jle
call
xor
jp
shr
fadd
out
cld
xor
loopne
and
inc
sub
sbb
aam
dec
add
push
xor
dec
das
dec
hlt
dec
and
push
or
test
mov
pop
fwait
jmp
dec
dec
or
mov
cmp
dec
and
scas
mov
push
lret
lret
jmp
cwtl
ja
clc
cmp
mov
pop
mov
clc
mov
mov
push
adc
pop
and
popa
sbb
xchg
mov
daa
mov
flds
push
push
fsubs
or
mov
lock
test
pushf
add
and
jne
rolb
sti
jb
xor
idivl
sub
add
cmpsb
adc
push
push
mov
lret
mov
pop
and
push
iret
je
jp
push
in
lea
shlb
clc
lcall
add
test
scas
popf
mov
cmpsb
stos
inc
mov
pop
inc
mov
jno
push
push
leave
test
inc
test
bound
push
mov
stc
jbe
mov
lret
fildll
loope
sbb
iret
sbb
adc
xor
cld
mov
inc
test
clc
arpl
mov
pop
out
dec
add
lret
add
aas
lcall
xchg
loopne
xlat
cmp
inc
outsl
add
xchg
fwait
pop
das
out
xchg
inc
dec
std
enter
push
mov
pop
xor
or
xor
and
mov
orb
out
xlat
mov
js
push
out
mov
jg
lock
das
aaa
mov
int3
gs
daa
push
fsts
aam
xchg
aas
lea
pop
jle
push
sbb
leave
lods
or
pop
add
sub
adc
xchg
fildl
sbb
bound
lock
xor
scas
and
and
inc
sbb
xor
sti
dec
stos
add
xchg
xlat
mov
and
xorb
rorl
or
ret
aad
push
push
cmp
shlb
jno
sub
sti
and
mov
repz
stc
adc
or
push
dec
stos
stc
lret
xchg
cmp
shll
and
inc
repnz
mov
mov
scas
mov
xor
inc
lods
in
pop
out
pop
xchg
jb
cwtl
push
and
clc
mov
adc
sbb
mov
in
out
cmp
sbb
cmp
fimull
scas
je
hlt
out
xchg
lds
ljmp
xor
xchg
jp
in
shrl
mov
mov
cmpsb
rcrl
add
ljmp
lods
ds
xchg
or
xor
mov
jle
shrb
adc
jns
lcall
stos
int
lods
inc
pop
in
push
cli
orb
jge
rclb
mov
xchg
sub
out
rcrl
aaa
nop
hlt
pop
mov
sbb
movsb
in
aas
pop
mov
insl
xchg
xchg
pusha
jne
xchg
adc
leave
cld
jmp
cmp
test
sbb
aas
pop
dec
insb
scas
ficompl
loopne
out
jmp
lahf
mov
cwtl
test
dec
gs
sti
xor
mov
adc
lock
andb
xor
sub
cmp
repnz
fisubrl
sub
mov
sub
loope
pop
in
lret
fwait
bound
aaa
ficoms
arpl
cwtl
adc
add
loop
lock
sbb
in
inc
hlt
jb
insl
inc
xor
std
mov
sub
icebp
fildll
sub
jb
inc
inc
push
adc
jo
movsb
jge
je
dec
movsl
std
mov
pop
outsb
jmp
jg
add
scas
repz
mov
mov
leave
fnstcw
gs
mov
lea
xchg
pop
mov
inc
or
lods
sbb
jnp
mov
cmp
mov
ja
out
mov
fwait
cwtl
in
aad
pop
icebp
xchg
jmp
mov
xchg
pop
jb
filds
jns
stc
jp
mov
jno
ficompl
mov
xchg
data16
push
jb
mov
mov
or
xchg
loopne
lods
and
inc
xchg
adc
lea
pop
js
fistps
and
ds
inc
mov
and
movsb
fnsave
jp
mov
jecxz
dec
sbb
mov
push
jns
sti
mov
js
jle
sbb
dec
add
mov
cmp
rcrb
pop
lea
mov
push
pop
cmp
fs
lahf
cmp
loopne
in
lods
mov
adc
push
push
xchg
dec
je
sub
cmp
fnsave
adc
jbe
inc
pop
sbbb
pop
frstor
lods
lret
or
push
mov
jnp
xor
or
inc
js
pop
cmp
dec
inc
inc
jl
sbb
test
movl
inc
adc
mov
js
sub
push
pop
insl
mov
int
mov
pop
pop
enter
push
scas
xchg
adc
jmp
sub
out
cmp
mov
sbb
xor
add
mov
or
mov
arpl
shll
pop
lret
jae
xchg
inc
sbb
scas
sub
loope
push
mov
pop
fcomip
stc
in
rcrb
sub
or
insl
repnz
mov
add
jne
dec
fisubrs
stos
jne
dec
shll
inc
mov
sub
add
and
not
ss
cmpsb
les
test
inc
cmp
clc
push
xchg
xchg
inc
xor
lds
scas
repz
sbb
add
adc
xchg
cmp
pop
cwtl
ja
popf
cmpsl
js
xor
mov
dec
iret
push
xor
fiadds
loopne
pop
fsubrl
xor
arpl
cmp
insl
pop
dec
push
mov
addl
mov
ss
nop
jp
ja
xor
shll
mov
leave
test
aam
and
fisubs
das
jns
xor
mov
rep
mov
mov
sbb
jp
data16
and
pop
into
test
dec
js
xchg
out
adc
and
jmp
enter
push
cmp
fwait
push
sub
xchg
push
pop
mov
test
cmp
sub
int
sub
into
out
lods
fcomps
mov
ja
or
dec
shlb
out
dec
dec
negl
pop
aam
jp
rcr
cmp
popa
pop
push
ffreep
lret
into
mov
add
jle
nop
int
mov
loopne
pop
leave
out
rclb
mov
mov
cmp
xor
mov
fldl
dec
dec
ja
cli
inc
mov
ljmp
sbb
jmp
data16
push
mov
scas
jmp
ror
push
adc
jmp
mov
fisttps
jg
jle
mov
jno
mov
daa
adc
aam
orb
popa
and
mov
inc
enter
sub
xor
mov
out
out
mov
cmpsl
mov
cmp
dec
dec
lds
leave
jnp
pop
leave
ret
jns
cmp
and
xorl
mov
push
push
jb
pop
rcrb
test
lock
xor
mov
inc
cmpsb
or
sub
lods
jle
and
sub
mov
les
inc
jg,pt
sarl
lds
lds
pop
cmp
repnz
test
add
add
xor
cmpsb
add
fimuls
sub
outsl
mov
dec
aas
dec
push
mov
mov
jge
lahf
jl
adc
mov
adc
push
push
push
mov
ljmp
jle
adcb
inc
and
inc
xchg
imul
out
out
mov
sbb
cli
jecxz
xlat
sub
mov
jge
movsl
inc
mov
or
mov
mov
add
push
mov
jge
lahf
mov
push
mov
pop
repz
mov
xchg
fdivl
shrb
xchg
fdivp
aaa
adc
xchg
ljmp
dec
jmp
xchg
clc
cld
and
sbb
clc
and
cltd
notb
loop
xorb
popf
fucomp
xchg
inc
mov
dec
xor
mov
xor
adc
jbe
sti
mov
sub
jo
pop
sti
pop
push
mov
out
and
out
mov
test
pop
xor
jmp
mov
cmp
add
sbb
daa
loop
in
sbb
or
push
sbb
ret
jne
mov
testb
jecxz
shll
neg
sbb
subl
jb
dec
loop
push
shrl
lcall
out
fisubrl
jo
xchg
pop
test
xchg
or
adc
pop
adc
int3
ljmp
push
mov
fcomps
cmp
out
insb
or
xor
mov
rolb
int3
je
push
xchg
jge
jo
or
outsb
pop
les
in
inc
das
mov
sub
addr16
sub
in
pop
stc
sbb
movsb
push
hlt
loope
cmp
adc
pop
popf
sub
subl
cmpsl
jb
jmp
fs
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
mov
push
mov
mov
lea
sub
push
push
push
mov
push
mov
mov
jmp
nop
nop
nop
nop
ret
