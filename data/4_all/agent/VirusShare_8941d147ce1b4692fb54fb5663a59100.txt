mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
jg
add
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
fld
xor
xchg
leave
arpl
mov
adc
lock
imul
push
add
sti
inc
mov
mov
ficoml
jbe
mov
movsl
cmpsb
enter
cmpsl
movsb
xchg
xchg
jnp
jecxz
mov
ret
mov
xchg
mov
in
or
pop
loope
cmpsl
adc
mov
xchg
pop
mov
pop
push
shll
inc
jb
fildll
inc
mov
pop
andb
push
pop
push
mov
cld
bound
fucomp
and
dec
sbb
add
hlt
outsl
scas
xchg
inc
mov
jne
in
push
jmp
mov
out
add
call
insb
inc
or
lcall
mov
stos
sbb
push
sbb
fbstp
pop
cmp
mov
inc
repz
xchg
cs
or
or
in
xor
aad
and
jbe
hlt
lcall
jb
loopne
mov
or
pop
test
stos
int3
dec
jmp
xchg
cmp
in
sub
sub
mov
ror
loope
aad
adc
fnsave
out
sbb
add
out
mov
stos
sbb
mov
dec
mov
push
cmpsl
mov
int
xlat
adc
push
das
lea
mov
jbe
into
cld
bnd
xchg
adc
mov
mov
or
cltd
jae
aad
dec
and
pop
mov
test
mov
divb
or
dec
dec
enter
test
push
mov
popa
cmc
sbb
push
lea
popf
xor
pop
icebp
pop
sub
inc
dec
push
adc
lret
ja
inc
pop
inc
dec
cmp
test
fs
ja
int
add
int
cmp
jle
mov
fwait
push
mov
mov
dec
inc
int3
in
hlt
testb
mov
pop
je
push
adc
cmp
sub
add
pushf
ret
aas
sarl
push
daa
mov
add
or
jp
sti
.byte
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
fld
xor
xchg
leave
arpl
mov
adc
lock
imul
push
add
sti
inc
mov
mov
ficoml
jbe
mov
movsl
cmpsb
enter
cmpsl
movsb
xchg
xchg
jnp
jecxz
mov
ret
mov
xchg
mov
in
or
pop
loope
cmpsl
adc
mov
xchg
pop
mov
pop
push
shll
inc
jb
fildll
inc
mov
pop
andb
push
pop
push
mov
cld
bound
fucomp
and
dec
sbb
add
hlt
outsl
scas
xchg
inc
mov
jne
in
push
jmp
mov
out
add
call
insb
inc
or
lcall
mov
stos
sbb
push
sbb
fbstp
pop
cmp
.byte
push
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
fld
xor
xchg
leave
arpl
mov
adc
lock
imul
push
add
sti
inc
mov
mov
ficoml
jbe
mov
movsl
cmpsb
enter
cmpsl
movsb
xchg
xchg
jnp
jecxz
mov
ret
mov
xchg
mov
in
or
pop
loope
cmpsl
adc
mov
xchg
pop
mov
pop
push
shll
inc
jb
fildll
inc
mov
pop
andb
push
pop
push
mov
cld
bound
fucomp
and
dec
sbb
add
hlt
outsl
scas
xchg
inc
mov
jne
in
push
jmp
mov
out
add
call
insb
inc
or
lcall
mov
stos
sbb
push
sbb
fbstp
pop
cmp
mov
inc
repz
xchg
cs
or
or
in
xor
aad
and
jbe
hlt
lcall
jb
loopne
mov
or
pop
test
stos
int3
dec
jmp
xchg
cmp
in
sub
sub
mov
ror
loope
aad
adc
fnsave
out
sbb
add
out
mov
stos
sbb
mov
dec
mov
push
cmpsl
mov
int
xlat
adc
push
das
lea
mov
jbe
into
cld
bnd
xchg
adc
mov
mov
or
cltd
jae
aad
dec
and
pop
mov
test
mov
divb
or
dec
dec
enter
test
push
mov
popa
cmc
sbb
push
lea
popf
xor
pop
icebp
pop
sub
inc
dec
push
adc
lret
ja
inc
pop
inc
dec
cmp
test
fs
ja
int
add
int
cmp
jle
mov
fwait
push
mov
mov
dec
inc
int3
in
hlt
testb
mov
pop
je
push
adc
cmp
sub
add
pushf
ret
aas
sarl
push
daa
mov
add
or
jp
sti
sbb
rorl
cli
les
or
or
mov
imul
dec
test
mov
mov
js
or
xor
sub
popa
adc
js
fists
mov
je
dec
or
adc
out
and
and
xchg
cmc
mov
iret
cmp
push
stc
in
cltd
cmc
jns
lahf
clc
mov
dec
fnstsw
lahf
dec
daa
xchg
test
outsb
sbb
add
std
jae
lcall
mov
jnp
int3
mov
jb
imul
mov
mov
movsl
mov
fs
add
add
mov
pop
xchg
and
fiaddl
popf
mov
cmpsb
mov
inc
loop
sub
push
mov
push
and
les
rcr
sub
xchg
stc
movsl
and
popa
inc
mov
and
xor
xchg
ljmp
sbb
pusha
mov
ror
or
test
int
mov
in
xchg
cwtl
sub
ret
fs
push
cmpsl
cld
and
mov
lods
pop
xor
movsl
mov
cs
popa
ss
outsb
mov
dec
lods
in
orl
pushf
out
out
xor
mov
xor
jecxz
dec
repz
mov
into
leave
movsl
and
jns
pushf
mov
xchg
filds
outsb
inc
cld
cmp
add
jge
in
push
pop
sahf
ds
mov
push
xor
test
mov
movl
pushf
cmp
jg
mov
out
ret
ljmp
mov
into
idiv
and
jb
jne
and
mov
cmc
subb
std
xchg
jmp
sub
jnp
cld
pop
pop
mov
lcall
inc
or
jo
das
jmp
xchg
sub
inc
aad
cmp
sbb
insl
lret
mov
out
out
lods
ss
add
stos
inc
jge
push
and
and
add
sub
mull
dec
sub
xchg
dec
sub
jg
call
fbstp
outsb
test
aas
xchg
out
fstl
push
lret
add
mov
mov
dec
in
stos
out
fadds
mov
push
adc
push
test
mov
in
test
cmp
jae
xchg
mov
fcomps
test
lcall
mov
pop
imul
inc
ficoms
inc
scas
in
shll
dec
and
push
mov
pop
and
mov
push
mov
dec
or
cmp
adc
xor
and
test
xchg
push
dec
mov
dec
and
sub
imul
cmp
arpl
xor
dec
les
jnp
xorl
add
mov
push
mov
popf
sub
mov
adc
jae
mov
push
js
dec
and
push
call
mov
or
divl
xor
ss
cmp
cmp
cwtl
mov
xchg
mov
cli
icebp
pop
cs
dec
imul
jp
cmp
jnp
mov
dec
or
pop
and
stos
inc
sbb
mov
insl
and
repnz
jne
push
popa
int
or
inc
les
popa
js
xor
imul
in
add
lods
std
cmp
jne
insl
orl
sbb
adc
jo
sub
sbb
xor
insb
stc
call
sbb
xor
mov
mov
popf
bnd
adc
icebp
in
mov
pop
mov
ret
popf
mov
push
mov
std
pop
iret
pop
ret
dec
popa
inc
adc
push
xchg
xlat
inc
add
mov
outsl
and
mov
fs
xchg
add
push
mov
fdivs
jb
rcrb
cmp
sarb
movsl
jnp
stc
or
loopne
push
adc
push
jbe
ss
enter
shll
into
test
call
sub
repz
mov
jg
sbb
mov
arpl
mov
cltd
sub
in
test
add
sub
push
mov
iret
xchg
dec
push
dec
shll
rol
movntps
in
aas
jne
xchg
xor
clc
jnp
or
jmp
xchg
leave
push
adc
jne
xor
in
cwtl
iret
xchg
sbb
jae
jo
pop
imul
push
cmp
outsl
mov
xchg
js
xor
cld
test
jmp
adc
sub
mov
lret
mov
out
mov
mov
dec
iret
mov
xchg
ret
xchg
adc
gs
loopne
addr16
cmc
mov
enter
push
adc
jmp
xlat
mov
incb
mov
jmp
mov
mov
push
lahf
mov
fadds
cmpb
int3
std
or
dec
cltd
lock
repnz
xchg
sbb
out
inc
sub
pop
xor
dec
icebp
lret
sahf
pop
icebp
dec
mov
outsl
pop
fnsave
sbb
fs
xor
in
lret
mov
stc
idivl
push
jns
xor
mov
xchg
jno
mov
fbstp
jp
es
dec
xchg
icebp
rol
inc
cwtl
js
push
push
or
ret
in
ja
adc
fsubrs
and
ja
dec
cmp
lods
or
mov
xor
in
in
jl
lcall
sub
lcall
test
addr16
and
dec
out
test
sub
pop
lods
loopne
out
jb
or
push
mov
mov
inc
pop
jp
stos
pusha
or
or
push
sbb
add
sbb
jno
int3
push
jecxz
movsl
mov
out
pop
mov
fwait
and
or
imul
push
stos
add
add
push
jae
sbb
ret
add
cmp
inc
lods
jge
test
and
add
or
inc
das
mov
cmp
jg
and
aad
pop
cli
scas
pop
sbb
jle
test
divb
jle
clc
pop
int3
cltd
mov
daa
out
push
ljmp
pcmpgtd
jns
pop
cmp
jmp
xchg
cmp
lret
dec
shrl
fnstcw
push
jmp
mov
std
out
jnp
lret
mov
xchg
xor
js
sbb
cltd
ficomps
daa
add
pop
cmp
sbb
cltd
xor
and
or
pop
push
mov
and
and
adc
or
movsl
rcrl
xchg
adc
jb
push
xlat
ret
adc
stc
dec
cmpsl
mov
les
das
scas
sub
in
sbb
and
iret
dec
xchg
jb
jge
xchg
xor
bound
paddusb
icebp
gs
sub
sti
push
cs
and
adc
push
loope
cs
out
mov
divb
cmpsl
or
adc
xchg
arpl
lds
je
nop
jl
std
sbb
leave
cmp
test
and
test
fcoml
test
jbe
xor
push
add
aad
and
push
cmp
clc
or
jg
subl
mov
jcxz
jae
cmpsl
mov
dec
xor
movb
arpl
movsb
aas
xor
in
fists
or
fwait
sti
rol
sub
xlat
sbb
mov
mov
add
insb
mov
or
test
insl
mov
repz
fsub
push
addl
out
clc
ret
xor
cli
icebp
mov
int3
shl
ljmp
icebp
and
imul
mov
lahf
sahf
jp
inc
xchg
mov
stos
mov
or
push
ja
sub
adc
jecxz
int3
xchg
arpl
cmp
sahf
sahf
mov
xor
xor
add
hlt
clc
push
outsl
pop
push
in
sbb
sub
jno
lock
stos
inc
loop
sahf
clc
aad
aas
roll
outsb
fsubl
sti
mov
pop
fadd
and
movsl
xchg
pop
pop
jp
int3
adcb
lock
ljmp
push
mov
and
push
cmp
jl
ja
adc
mov
and
xchg
mov
in
stc
cs
cmp
dec
or
mov
ss
xor
mov
fwait
out
xchg
xchg
xorl
pop
mov
pop
lea
mov
jmp
cmp
pop
test
jne
stos
out
adc
xor
fwait
stos
inc
xchg
add
shl
aam
call
jbe
mov
icebp
inc
scas
ret
nop
jno
pop
out
repnz
cmp
sbb
lock
dec
call
xor
add
cltd
mov
mov
push
adc
xchg
mov
sbb
gs
inc
lock
xchg
sbb
icebp
test
cmc
add
cmp
xchg
jmp
dec
jge
sub
sub
sub
adc
push
add
icebp
cwtl
mov
mov
cmp
repnz
sbb
add
dec
ficoml
aam
xor
inc
and
xor
lahf
imul
cmp
xchg
clc
inc
cmp
mov
sub
dec
mov
fsubs
cmp
mov
push
clc
mull
lods
adc
js
out
adc
test
in
cmp
pop
cmc
push
flds
in
pop
stos
mov
add
vmovq
jecxz
stc
sub
inc
mov
push
imul
ljmp
test
inc
xchg
pop
sbb
jle
cwtl
xchg
mov
out
add
jecxz
arpl
jbe
cmp
add
repz
or
out
fwait
rcr
mov
add
fisttps
xor
mov
fnsave
testb
fwait
divb
je
pop
inc
pop
or
push
cs
ss
jns
or
add
push
repz
loop
pop
mov
mov
mov
push
push
in
jne
pop
xchg
cmp
sahf
sub
push
inc
and
sbb
add
xor
push
cld
mov
sbb
mov
adc
scas
movsb
adc
pop
scas
and
out
cmp
cmpl
test
das
bound
dec
lret
push
inc
stos
fildll
jmp
push
das
movsb
fisubs
mov
push
sub
sbb
push
adc
rorb
and
jnp
adc
mov
mov
cmp
enter
out
lock
sub
jp
insb
pop
jo
and
dec
jp
movl
pop
inc
xlat
add
pushfw
filds
cwtl
outsb
cwtl
cmpsb
push
xchg
test
test
cmp
push
xlat
add
adc
insb
into
cli
in
movsb
inc
mov
inc
jmp
push
pop
ficoms
loope
stc
adc
sbb
bound
loopne
out
or
aas
orps
sbb
movsb
aas
cmp
rolb
insb
dec
inc
mov
jb
lods
xchg
mov
sbb
cld
xor
bound
jae
lcall
pop
loop
push
sbbb
cmp
mov
arpl
xor
cmp
jae
mov
mov
repnz
jno
out
call
cmp
pop
xor
das
mov
pop
push
jb,pn
test
and
jp
sbb
jl
jg
push
pop
mov
ljmp
popf
lods
insl
icebp
sysenter
sub
ja
cmp
push
out
pushf
clc
rcr
jns
in
sbb
lret
jae
jo
out
mov
jnp
loop
ljmp
mov
repnz
jns
rol
lock
cld
add
out
cmp
adc
lods
mov
or
push
std
add
mov
mov
loop
xlat
dec
lock
hlt
fimull
clc
into
lds
je
vcvtss2sd
loopne
aas
push
jb
popa
and
popa
cmp
addr16
popa
fstpt
pop
in
dec
out
push
ljmp
fildl
dec
lods
xchg
jp
sub
je
pusha
out
leave
fistl
jp
iret
jmp
out
lea
sub
pop
test
and
in
pushf
loopne
mov
mov
repz
int3
adc
mov
jnp
int
and
outsb
nop
cs
mov
arpl
and
xchg
inc
sti
and
fstpl
in
cmp
mov
dec
popa
cld
shr
test
jae
cmpsb
cmp
jmp
mov
ds
and
adc
fwait
ljmp
jl
xor
push
into
cmp
mov
mov
sbb
addr16
xchg
out
inc
test
icebp
cwtl
cmp
stos
iret
cmp
out
cli
jmp
rcr
pop
js
add
inc
dec
add
mov
rclb
add
stos
outsl
jbe
push
dec
mov
jnp
test
pop
xor
imul
xchg
mov
sub
sbb
loop
aas
into
add
addr16
loop,pt
sbb
push
mov
pop
daa
ljmp
iret
and
push
popa
jnp
push
and
cmpsl
out
mov
ret
push
mov
mov
fsubs
loopne
dec
mov
push
jl
mov
mov
ja
enter
push
pusha
aas
jno
mov
aam
jns
add
sub
mov
and
mov
jbe
sbb
fs
outsb
jecxz
jmp
mov
stos
add
jecxz
add
shr
push
inc
test
xchg
mov
pop
lahf
fistl
and
dec
xchg
lods
stos
xchg
cmp
lods
rcll
mov
fucomi
sub
sub
sub
frstor
pop
stc
jnp
sar
in
lock
mov
pop
test
pop
cmpsl
cmp
and
adcb
cmpsb
and
cmp
sbb
xchg
and
add
mov
mov
dec
inc
adc
jns
pop
pop
or
lahf
in
adcl
cs
pop
cmp
cli
or
xor
adc
inc
decb
mov
insb
jnp
pop
jbe
push
mov
pop
dec
xchg
sbb
xchg
scas
or
loope
and
fidivs
sub
mov
cmc
xchg
jl
fimull
jecxz
add
adc
fcoml
call
jge
push
ret
lret
hlt
add
mov
push
cmp
push
test
or
inc
das
xchg
mov
js
mov
mov
aaa
and
ficoml
lahf
add
and
mov
rorl
sub
dec
pop
jne
pop
sbb
repz
sbb
mov
push
push
arpl
rcr
jns
mov
xor
lods
xchg
das
or
push
les
hlt
insl
and
jne
test
scas
mov
pop
dec
lahf
jne
dec
and
lea
xchg
push
or
xor
mov
incb
out
lret
xlat
iret
cwtl
mov
xor
sti
fmulp
cmp
mov
in
fcmovu
clc
daa
add
inc
hlt
jne
adc
pop
xchg
push
cmp
adc
adc
lea
mov
pop
jb
pop
in
push
push
addr16
mov
movsl
loop
popa
or
mov
adc
fxch
fisubl
test
add
push
scas
jnp
mov
mov
icebp
sahf
bound
fsts
fs
adc
sub
mov
in
out
cmc
shll
aas
inc
into
stos
push
pop
dec
mov
ljmp
jnp
mov
jnp
movsl
bound
or
popf
add
inc
xchg
jg
pop
sbb
jb
or
jp
xor
sub
fidivrs
pop
mov
mov
sub
les
and
pop
xlat
clc
frstor
lret
clc
js
scas
outsb
push
icebp
outsb
sti
lret
adc
je
je
jno
jge
xor
jne
and
leave
es
pop
rclb
adcl
ret
filds
lea
fldl
inc
js
jg
divb
arpl
inc
push
mov
in
push
pop
lret
push
lea
adc
mov
or
in
int3
push
mov
adc
aaa
and
xchg
aam
outsl
mov
cmovge
je
es
xor
loope
hlt
adc
test
dec
sahf
sub
fdivrs
dec
push
push
ja
push
rol
mov
pop
mov
xchg
push
sti
jge
cli
sbb
xchg
sub
dec
or
push
mov
fsubr
aas
test
mov
in
lahf
rcrl
pushf
mov
lret
mov
sbbl
movsb
test
adc
cmp
test
scas
sub
adcl
mov
subl
dec
rcrb
cmp
inc
pop
cmc
es
bound
inc
sahf
mov
into
lret
xchg
xchg
jp
push
into
roll
repnz
xchg
cltd
aam
js
or
test
mov
je
dec
lds
mov
cmp
int
mov
repz
shrb
mov
cli
cmpb
push
orl
es
addr16
mov
add
hlt
jne,pt
lock
mov
xchg
mov
hlt
xchg
add
stos
ljmp
mov
pop
cmp
mov
pop
fbld
pop
xor
pop
jle
inc
add
adc
mov
ljmp
cwtl
stos
test
cmp
dec
mov
sbb
lds
leave
loopew
push
adc
in
jge
fldl
push
icebp
pushf
in
dec
negl
ljmp
cmp
movsl
mov
adc
xchg
dec
cmpsl
jg
lcall
push
cmpsb
mov
xor
cli
inc
sbb
mov
popa
add
test
lcall
pushf
jge
sarb
lods
adc
repz
mov
in
mov
es
in
cltd
adc
into
mov
orb
out
inc
inc
push
cmp
shrl
sahf
xor
mov
push
out
ffreep
mov
insl
leave
dec
push
sahf
mov
inc
mov
das
push
add
loopne
xor
add
scas
sbb
push
out
push
push
jnp
out
inc
ds
adc
sbb
cwtl
dec
enter
jg
fiaddl
iret
or
cld
adc
jge
fwait
and
mov
das
inc
pop
in
cmp
mov
xchg
add
pinsrw
or
movsb
ja
mov
mov
movsb
dec
jb
xchg
icebp
movsb
shrb
dec
ficoms
iret
rcrb
shll
test
stos
test
sub
into
xlat
cmp
in
push
jae
pop
xchg
or
adc
jbe
ret
xchg
aas
pop
adc
mov
divl
adc
push
mov
inc
out
nop
xor
xor
das
mov
mov
mov
lahf
inc
xor
repnz
adc
ret
aad
stos
mov
out
mov
mov
fwait
xlat
cmp
lods
lods
sub
addr16
xchg
roll
inc
cltd
out
rorb
cmc
dec
repnz
xor
out
and
int
icebp
insl
mov
add
daa
rcrb
ret
inc
addr16
sarl
jnp
movsb
cmc
dec
and
test
xor
push
popa
add
ret
jae
adc
loope
pop
jbe
mov
ljmp
add
fld
sub
lods
pop
mov
xchg
mov
ljmp
xor
pop
push
add
or
es
adc
movsl
push
xchg
inc
jmp
lahf
add
les
sub
inc
sub
sub
pusha
add
mov
jp
push
jo
bound
mov
inc
dec
inc
test
rolb
add
fcomps
les
or
ss
cmp
push
scas
pop
outsl
loope
in
cmp
adc
push
lret
push
icebp
lods
sub
and
rcl
sahf
push
sub
dec
es
dec
jmp
push
fbstp
xorb
popa
mov
cmpsl
repnz
popa
ss
enterw
xchg
jae
lret
dec
mov
hlt
xchg
loope
lds
ret
arpl
mov
dec
repz
dec
xchg
push
and
mov
pop
xchg
add
lret
mov
mov
and
lea
mov
outsl
mov
shrl
test
mov
sub
test
les
sbb
lods
popa
pop
movsl
mov
inc
test
xchg
adc
and
enter
test
sub
int3
sbbl
sbb
xor
lods
push
pop
in
les
test
mov
lret
imul
push
jl
sub
cmpsb
inc
int3
std
push
or
es
scas
outsb
dec
pop
movsl
movsl
insb
aas
stos
mov
int3
shrb
insb
push
or
mov
testl
outsl
xor
dec
aas
in
test
jnp
mov
stos
jo
sub
cmpsb
push
jo
or
mov
sbb
mov
gs
mov
sbb
inc
push
mov
sbb
cli
out
inc
test
cmp
sub
stos
push
xor
popa
popa
jge
jne
gs
les
adc
arpl
int
loope
or
pop
xchg
shl
stos
mov
movsb
js
aaa
jl
and
hlt
dec
mov
in
insb
sbb
clc
mov
lcall
out
add
test
shlb
mov
cwtl
aas
jp
loop
or
mov
aaa
pop
imul
push
cmp
cli
dec
jp,pn
and
or
loope
mov
mov
notb
shll
jecxz
out
xor
inc
cs
sbbl
push
cmp
xchg
or
cmc
pop
loope
inc
dec
outsb
xor
inc
lds
lcall
xchg
mov
pusha
jg
jp
add
lds
sbb
icebp
mov
out
pop
sbb
mov
test
sahf
and
addr16
pop
shll
mov
stos
sbb
xcrypt-ecb
cmpsl
lret
aad
pop
aad
or
cmp
push
push
or
lcall
hlt
cltd
aam
xchg
addr16
rolb
xchg
insl
mov
in
or
xchg
jecxz
mov
sarl
push
in
mov
mov
inc
jp
cld
pop
sbb
add
cmp
repnz
cmpsl
negl
jp
sub
mov
test
mov
xor
jae
xchg
inc
jl
loope
arpl
pusha
addr16
mov
in
and
loope
jae
mov
cltd
insb
sarl
mov
inc
loopne
ja
lods
push
dec
xchg
rcr
mov
stc
xchg
mov
or
loope
push
inc
pop
and
xchg
fcompl
fmulp
inc
enter
fildll
decl
adc
ja
cmp
adc
shlb
nop
imul
aaa
pop
mov
adc
cmc
mov
xchg
adc
mov
pushf
xchg
neg
mov
sbb
and
test
clc
xor
ret
sub
out
push
stos
adc
ja
cli
xchg
lret
leave
sbb
sbb
sub
sub
mov
push
jl
add
mov
mov
mov
lock
inc
out
xor
aaa
push
aad
inc
pop
lea
push
and
loope
clc
and
fcmovnb
in
or
outsl
popf
adc
add
clc
pushf
or
out
dec
sbb
ds
sub
mov
faddp
adc
sub
push
adcb
or
and
mov
sbb
mov
mov
subb
popa
daa
movsb
stos
ret
imul
mov
jecxz
lods
jmp
andb
jg
ss
mov
popa
cmc
testl
cmp
push
jle
cmp
jnp
pop
cmpb
hlt
mov
test
pop
and
dec
xchg
xor
arpl
arpl
pop
xor
push
loop
adcb
out
push
nop
mov
addr16
push
push
and
xchg
lods
test
or
dec
or
add
or
inc
inc
jo
mov
jb
mov
leave
aas
cmp
insb
adc
test
repnz
ja
repz
or
cld
mov
mov
dec
cmp
rclb
mov
lcall
mov
pop
sahf
fstps
xchg
jne
aas
cmp
dec
or
decb
roll
jnp
jnp
dec
inc
dec
cmp
and
stc
call
stos
fnsave
mov
fiadds
add
fnstcw
sbb
jecxz
and
mov
js
lcall
add
inc
xor
mov
stos
fs
mov
xchg
xchg
shlb
adc
hlt
xchg
bound
cmp
mov
popa
lret
adc
pushf
pop
daa
and
stos
fstl
jle
aam
jno
and
mov
push
js
mov
rolb
xchg
sbb
or
gs
divl
repz
inc
sub
adc
scas
dec
push
lea
out
mov
mov
mov
in
pop
fstpl
int3
stc
mov
mov
xor
mov
nop
cli
cmp
adc
cmpsb
jge
pop
lock
daa
outsl
ret
rcr
push
dec
std
ficomps
rolb
outsb
nop
rorl
dec
lea
insb
loope
pop
cmp
out
dec
mov
movsb
and
int3
pop
aam
push
orb
roll
mov
mov
fsubp
sahf
push
loope
shl
mov
inc
sar
xchg
mov
pop
push
insb
movsb
xchg
xor
sub
mov
repnz
insb
lods
fdivrs
jg,pn
cmpsb
sbb
adc
mov
sub
push
mov
mov
jle
into
inc
add
sbb
jae
nop
pop
pop
or
pop
push
ficomps
xchg
pop
add
sbb
and
cmp
stc
mov
or
mov
inc
je
push
loope
adc
cmp
mov
mov
outsb
mov
pop
push
sahf
js
pushf
mov
pusha
outsb
lahf
icebp
aam
sti
pop
sbb
pop
add
loopne
jb
pop
add
inc
fwait
ds
out
mov
dec
cmpsb
pushf
rorl
push
repnz
xlat
sbb
jne
fiadds
ljmp
out
ret
cmp
rcll
mov
rcl
mov
sti
push
jge
mov
xor
in
incl
mov
rorl
cmpsb
push
rcr
add
dec
loop
mul
cmpb
enter
pop
or
mov
and
scas
test
loope
cmp
pop
addr16
ja
inc
sub
scas
repnz
mov
insb
fiadds
aam
nop
insl
movaps
mov
cs
call
out
movb
shrl
jge
lcall
jb
scas
out
jb
xchg
sub
or
jb
outsl
insl
xlat
test
shll
xlat
aad
push
pop
lahf
inc
or
push
cltd
es
and
push
sub
outsb
sbb
int
and
lock
and
dec
mov
inc
lahf
add
mov
cmp
movsl
insl
stos
sub
adc
mov
fistl
imul
sbb
lds
push
cwtl
fmulp
fsts
xchg
mov
frstor
push
push
lahf
testl
ss
pop
das
push
dec
lcall
repz
xor
arpl
mov
aas
lea
xchg
test
lret
xchg
cmp
mov
pusha
fists
into
cmpsl
dec
xchg
lock
sbb
mov
push
mov
and
add
divl
mov
fdivrs
mov
je
pop
xor
outsl
xchg
lahf
adc
lret
mov
call
ss
xchg
daa
fcoms
das
xchg
cmp
xor
cmp
sub
test
or
insl
cmpsb
mov
cmpsl
sub
mov
inc
cmp
dec
cmp
test
add
ljmp
loop
sbb
inc
push
pop
xchg
adc
push
sbb
push
jo
pop
insb
mov
sahf
xchg
fistps
lds
loope
pop
cmpsb
mov
jge
adc
mov
cmp
sub
jg
icebp
dec
fdivrs
or
ljmp
cmp
call
mov
enter
test
aas
add
adc
addr16
negl
jl
fs
icebp
lahf
pop
add
scas
ja
xor
and
sahf
xchg
test
lret
sub
dec
add
cmpsb
setg
ljmp
in
and
jge
jl
xchg
mov
fxch
push
loopne
shr
adc
mov
jmp
addr16
push
cmpsl
cmp
mov
sub
jno
mov
xor
test
scas
dec
out
or
ja
orl
fcomps
lahf
dec
mov
xchg
loop
and
push
xor
and
jmp
imul
icebp
andb
int3
or
cmpsb
call
push
and
in
mov
pop
movsl
push
movsl
inc
and
lea
cli
rcll
loope
add
cmp
cltd
inc
push
mov
dec
pushf
mov
cli
std
test
cltd
push
push
jb
and
sbb
aam
je
sub
dec
lods
out
jo
es
and
popa
lods
movsb
scas
sub
ret
fdivrs
out
imul
cmp
lret
sub
aad
xchg
sub
pop
outsl
pop
xchg
adc
aam
push
gs
test
shlb
mov
sbb
pop
xlat
es
jno
push
movsb
scas
jno
xchg
lods
pop
add
fsubrp
push
cmp
push
flds
lea
lds
out
add
lcall
cmp
mov
out
pop
clc
cmp
jns
int
pop
fadds
jb
mov
pushf
xchg
dec
sahf
lahf
mov
in
add
cmpsl
xchg
test
lret
jb
sub
mov
xor
seta
rclb
js
and
lret
jo
leave
pushf
cmp
mov
loopne
or
xchg
aad
decl
ret
orl
sarb
sti
scas
aas
or
icebp
mov
cmp
dec
sub
call
jo
adc
std
in
cmp
xchg
dec
or
sti
stc
sbb
or
es
inc
shrl
in
xor
aad
or
mov
out
aaa
xor
push
xchg
pop
inc
imul
xlat
aad
cld
lcall
imul
xor
and
pop
jno
xchg
cmp
sbb
leave
push
in
inc
dec
cli
mov
loope
nop
or
std
unpckhps
dec
dec
inc
or
test
or
loope
into
test
sbb
pop
sti
ret
mov
loop
inc
mov
mov
lock
add
repnz
fisubs
test
in
jl
lods
add
lahf
cmp
int
insb
xor
test
es
add
out
jmp
pusha
out
jno
jmp
pop
sub
ja
adc
dec
mov
jbe
xorl
xchg
mov
xchg
fstpl
inc
in
movsb
lods
popa
push
loopne
add
movsl
and
in
mov
and
lahf
pusha
xchg
daa
mov
test
ret
call
fmul
push
xor
aam
xchg
sub
inc
ja
inc
lcall
lret
cld
je
lcall
loope
push
mov
jno
call
into
cmpl
outsb
mov
bound
fmuls
lret
sar
inc
sbb
add
stos
jb
adc
pop
aaa
mov
call
leave
mov
shlb
jle
inc
lods
and
xchg
pop
sub
int
movsl
and
ljmp
push
xchg
popf
push
in
mov
or
lret
scas
xchg
out
jo
test
and
adc
sub
jb
push
adc
mov
dec
mov
inc
mov
stos
nop
shl
je
dec
aam
add
mov
mov
aam
out
mov
xchg
ja
push
mov
cmp
jae
cmpb
leave
in
dec
sbb
out
inc
push
lods
addr16
jno
das
cmp
push
std
add
xor
cmp
dec
pop
mov
pop
aad
fistpll
jb
mov
jns
mov
pusha
xchg
and
mov
push
arpl
mov
jns
movsb
int3
or
shl
push
cmp
pop
mov
inc
jl
jnp
leave
jp
loop
mov
je
sahf
cmp
mov
xor
mov
push
lods
mov
enter
mov
jl
dec
jg
or
inc
xlat
arpl
stos
dec
and
adc
mov
movsb
mov
stc
or
push
adc
cmpsl
jmp
shlb
pop
mov
sarb
fistl
rcl
and
sbb
movsl
sub
push
lret
push
jnp
std
xor
inc
xchg
pop
popf
dec
test
inc
icebp
leave
imul
mov
and
and
shrw
pop
cs
cld
cmp
inc
shll
rorl
popl
ror
mov
ss
xchg
enter
dec
mov
xor
push
imull
mov
xor
cmp
sahf
push
in
cmp
xor
adcb
sub
jae
aam
sbb
push
nop
imul
inc
mov
loope
sub
xchg
fmuls
rorb
push
ret
jbe
adc
inc
pop
daa
mov
mov
outsl
lret
mov
and
ljmp
add
js
cmpsb
jbe
out
aaa
xchg
and
cmc
mov
js
lods
sbb
mov
adc
pop
mov
call
mov
jecxz
pop
imul
mov
dec
dec
arpl
or
mov
mov
push
ds
aaa
repz
xchg
sub
mov
adc
push
outsl
and
adc
xorl
icebp
jmp
sub
mov
addr16
or
popf
js
push
ret
into
das
lea
cmp
jbe
xchg
sahf
test
rolb
cmp
push
xchg
lods
stos
test
mov
das
and
stos
nop
in
lea
lret
lea
mov
sub
mov
push
adc
cli
mov
ljmp
andb
add
cltd
inc
adc
imul
arpl
mov
mov
popf
and
nop
jo
lcall
sub
in
push
negb
mov
cmpsb
mov
mov
outsl
stos
cwtl
jl
ja
data16
cmp
and
jo
pusha
mov
es
test
or
pop
loop
imul
pop
add
and
jbe
ds
or
mov
xchg
in
out
xor
sub
subb
adc
inc
jp
inc
sub
rolb
sbb
sbb
add
jmp
cld
and
call
loopne
int3
inc
outsl
out
pop
or
inc
xchg
dec
fbstp
in
repnz
push
add
test
push
xor
add
arpl
cmpsl
and
shrl
add
fs
mov
cs
das
je
mov
add
push
and
pop
mov
push
and
xchg
adc
leave
dec
inc
repnz
aam
adc
jnp
out
cli
rcll
imul
out
aad
pusha
sbb
ss
or
testb
ret
lock
jl
mov
jnp
xchg
adc
pushf
in
xor
cwtl
sub
sub
mov
cwtd
aam
sub
sbb
mov
ret
sbb
xor
lods
sbb
mov
push
cld
dec
in
mov
orb
ret
or
sbb
push
xchg
push
adc
int3
push
sub
xor
or
nop
icebp
sub
cli
ficomps
popa
pushf
lods
xchg
xchg
and
imul
test
ret
cmp
into
inc
lea
push
mov
jg
aam
sub
xchg
pop
sahf
adc
sub
push
or
test
inc
add
mov
mov
lret
sbb
jecxz
js
mov
xor
insb
or
lods
outsb
dec
fcom
and
int3
dec
lahf
lret
ret
lods
popa
push
mov
in
imul
pop
xor
jl
lea
wbinvd
fsubl
in
mov
xchg
add
sub
adc
adc
mov
and
in
inc
sbb
mov
leave
and
js
inc
pop
pop
inc
pop
mov
add
insl
fsubp
mov
dec
or
data16
or
out
jle
mov
xor
add
mov
cmp
outsl
popa
add
test
das
xor
fs
xchg
mov
cmpl
cmp
popa
dec
inc
xor
daa
sbb
push
mov
int3
adc
pop
push
hlt
lcall
xchg
sbb
shrl
cltd
gs
jno
or
xor
in
insb
insb
stc
cmp
fwait
js
bswap
ds
roll
add
mov
out
mov
ficompl
outsb
negb
fstpt
loope
mov
mov
xor
sub
jns
sub
pop
jmp
add
xor
pop
mov
ret
jmp
out
stc
subb
dec
fists
lahf
mov
pop
sub
fisttpl
cmp
sarl
fcoml
mov
out
jae
pusha
sbb
cmc
clc
cmp
clc
xchg
out
in
fdivp
push
add
imul
xchg
scas
xrelease
mov
bound
jle
dec
ds
mov
pop
inc
mov
sub
ljmp
xchg
dec
lock
push
fdivrs
lods
push
scas
lods
imul
js
shlb
pop
and
and
push
leave
inc
lock
mov
aad
sub
fstp
inc
and
cmp
mov
lods
mov
jl
popf
inc
sahf
add
jecxz
dec
pop
xchg
sub
repnz
cmpsl
inc
or
sti
sbb
pop
fimuls
xor
push
mov
ljmp
xchg
fcmovne
jg
mov
loopne
push
cmp
ljmp
xchg
lock
pop
sbbl
jp
xchg
xor
cwtl
cmpsb
pop
mov
mov
dec
pushf
decl
inc
imul
or
enter
mov
dec
notb
mov
lcall
dec
pushf
jns
inc
mov
fildl
dec
rolb
add
or
popf
cmova
popf
xor
out
add
or
in
lock
jbe
cmp
jns,pt
dec
mov
inc
fadds
out
dec
dec
inc
mov
fwait
sub
adc
mov
fidivrs
xchg
and
add
mov
jp
dec
and
loop
div
jbe
dec
in
in
aam
add
xor
das
cwtl
add
pop
push
lods
xchg
insb
mov
sub
push
stc
fdivs
enter
mov
mov
pop
push
sbb
cs
in
outsb
in
out
or
test
pop
fldpi
mov
adc
jecxz
pop
xor
sbb
sahf
xchg
imul
pop
stos
or
test
jle
orl
xor
inc
sahf
mov
xchg
mov
xlat
fcoms
add
and
outsb
loopne
hlt
stos
xchg
daa
sbb
insl
and
pop
lahf
movsb
loop
mov
lahf
jo
loopne
in
lret
mov
push
dec
adc
cwtl
xor
pop
insl
testb
inc
scas
lret
mov
and
aas
pop
inc
movsb
rolb
popa
mov
ret
inc
aad
pop
out
loop
data16
ret
rorl
jecxz
out
sub
std
subb
pusha
cmp
jne
dec
mov
push
idivb
cmp
imul
test
pop
jne
test
inc
repz
xor
inc
aas
mov
addr16
loopne
lret
pop
cld
mov
cmp
add
add
adc
pop
ljmp
movl
xlat
adc
pop
cmp
cmp
jl
push
inc
aaa
xchg
pop
sbbl
mov
mov
ja
stos
sbb
loop
js
imul
cmp
mov
or
insb
adcb
inc
or
lods
push
popf
add
loopne
pop
aaa
sbb
push
push
push
enter
add
test
or
inc
inc
fnstcw
inc
test
push
rclb
stos
ljmp
andnps
push
xlat
shll
mov
pusha
jg
ds
adc
mov
xchg
and
mov
xchg
pop
movsb
aam
adc
mov
fbld
add
adc
out
into
cmpsl
movsb
or
aam
lahf
fdivrl
cli
into
arpl
push
jae
push
dec
imul
jno
sbb
out
xor
cmp
and
test
sub
add
pop
adc
lods
xor
jle
cmpsl
pop
mov
mov
mov
sub
mov
or
adc
scas
jl
cmp
dec
push
mov
xor
dec
rcr
pop
std
mov
in
xlat
std
addr16
pushf
mov
jp
mov
mov
aas
cli
sub
daa
and
popa
sarb
and
cmp
xchg
mov
add
xor
adc
lret
popf
jl
jg
cli
outsl
adc
push
mov
mov
sbbb
nop
fcmovbe
sub
push
jmp
add
xchg
xchg
popf
dec
xchg
call
mov
cmp
outsb
pop
shrl
dec
inc
mov
mov
push
jo
rcr
cmp
loop
jg
scas
stc
nop
div
loop
pop
fisubl
sub
dec
fstpt
mov
mov
outsl
inc
testb
adc
dec
ret
lahf
ds
fdivr
pop
xchg
xchg
imull
mov
out
mov
cwtl
dec
jne
fwait
adc
or
aad
mulb
cmp
mov
nop
fnstenv
pop
xlat
dec
pop
mov
push
mov
pop
add
mov
sbb
or
cmp
fadds
mov
add
mov
xchg
rcll
add
ret
das
sahf
mov
or
shll
and
mov
incb
es
sub
in
in
push
push
ret
movsb
shlb
gs
outsl
inc
movsb
mov
jp
add
nop
enter
int3
data16
inc
fs
daa
aad
mov
or
xor
repz
sbb
cmp
sbb
dec
cmp
fwait
repnz
aaa
and
push
push
mov
push
movsl
or
dec
pushl
insl
test
xor
push
data16
cmp
or
and
shll
xchg
scas
xor
es
sub
mov
push
mov
mov
outsl
adc
inc
sub
gs
in
outsl
xchg
ds
scas
movsb
push
and
push
pop
xor
jmp
jno
cmp
push
fmulp
leave
xchg
push
das
dec
push
xor
sub
add
adc
mov
or
pop
or
test
mov
sbb
enter
sub
pusha
js
pop
inc
inc
cmp
popa
je
dec
jb
test
pop
pop
push
and
sub
mov
adc
cmpsl
pop
inc
shl
or
lcall
xchg
test
inc
push
jmp
pusha
mov
and
call
push
call
outsb
outsl
and
pushf
dec
sub
mov
dec
adc
mov
sub
push
push
dec
movsb
jnp
in
push
cwtl
scas
inc
push
sbb
cmp
fsubrs
insl
ds
mov
popf
in
fmulp
outsl
and
or
das
outsl
inc
cmp
mov
cmp
inc
sarl
loop
jmp
mov
push
outsl
jecxz
mov
daa
testl
xchg
fimull
popa
cmpsl
xor
push
xchg
jbe
or
push
fimull
mov
enter
push
hlt
mov
xchg
negb
xchg
sbb
mov
xchg
aaa
mov
mov
repz
mov
addr16
js
loop
jg
int3
adc
mov
xor
xchg
fdivrl
and
sub
push
cmpl
dec
mov
xlat
push
enter
and
subb
sbb
adc
in
cmp
outsb
test
cmp
inc
out
pushf
mov
cmp
and
jge
push
lock
jno
adc
adc
std
cmpsl
jns
sub
out
add
add
lret
sbb
push
pop
add
mov
adc
xchg
inc
cltd
push
mov
inc
push
mov
or
imul
pop
popf
pusha
sub
lret
sub
xor
syscall
mov
mov
ljmp
sub
pop
xor
mov
sbb
dec
inc
lds
cmp
mov
xchg
icebp
mov
mov
out
stc
inc
lret
fidivl
mov
lds
sbb
pminsw
out
ret
fstpt
mov
shll
jb
mov
fnstcw
stc
sarl
cmp
mov
jae
mov
daa
not
scas
aaa
mov
inc
or
push
sub
fidivrl
pop
es
or
mov
xchg
add
fimuls
pop
jle
jmp
cmp
cmpsl
fbstp
dec
mov
sbb
push
sahf
andb
addl
enter
test
in
subl
and
stos
dec
test
cmp
adc
jmp
or
sbb
arpl
mov
dec
in
sub
leave
dec
cmc
cmp
jnp
mov
aas
mov
mov
iret
sbb
cmpsb
or
leave
cs
addr16
test
insl
movsl
popf
mov
sahf
or
cmp
mov
mov
pop
mov
jecxz
mov
cmp
xchg
adc
daa
add
stc
in
lcall
mov
popf
push
cs
cmpsb
decl
mov
xor
mov
arpl
rorb
cltd
cld
ljmp
mov
and
aad
rep
out
xor
dec
sbb
cmc
popf
popa
ljmp
sahf
fimull
stc
jno
lret
in
rcrl
ret
push
xchg
xor
outsb
sub
push
movq
dec
mov
cmp
mov
or
sub
xor
rcrb
push
add
fsts
add
fucomp
icebp
mov
jl
into
lret
adc
jg
inc
xchg
mov
inc
sbb
test
or
inc
mov
jns
sbb
pop
arpl
jp
je
mov
outsl
cli
sbb
jo
sti
pop
repz
sbb
imul
clc
movsl
mov
push
and
mov
jnp
and
inc
sub
xor
xor
mov
pop
xchg
enter
pop
pop
es
pushf
mov
mov
lea
add
lods
iret
pop
mov
push
into
adc
dec
inc
js
scas
push
push
pop
xchg
inc
jecxz
and
inc
in
jmp
mov
sbb
mov
sbbb
mov
mull
lret
jg
push
sub
iret
movsl
in
mov
call
push
push
adc
xchg
cmp
mov
cmp
jg
rclb
jmp
pop
jb
push
add
aad
and
or
xchg
xorl
daa
movsl
sti
insl
mov
lret
lret
sahf
xchg
rcrb
lahf
cmp
cli
into
pop
loop
pop
flds
jp
add
jbe
aaa
adc
pop
mov
out
pop
xlat
scas
add
movsb
outsl
and
mov
call
add
mov
aad
test
enter
bound
add
dec
in
push
or
push
clc
nop
movsl
push
lds
mov
test
pop
inc
lods
cmp
jecxz
arpl
push
xor
mov
jle
xchg
stos
shl
bound
mov
and
in
jmp
out
call
leave
cmp
lret
sub
test
test
je
shlb
or
scas
sbb
pusha
imul
rol
xchg
mov
add
lret
fwait
lahf
sbb
mov
sahf
lods
ret
stc
hlt
cli
loop
pop
adc
push
dec
mov
shll
mov
addr16
pop
push
pop
insb
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
add
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
test
in
cli
mov
inc
inc
ja
lods
aas
dec
leave
dec
adc
dec
inc
loope
sbb
mov
fld
xor
xchg
leave
arpl
mov
adc
lock
imul
push
add
sti
inc
mov
mov
ficoml
jbe
mov
movsl
cmpsb
enter
cmpsl
movsb
xchg
xchg
jnp
jecxz
mov
ret
mov
xchg
mov
in
or
pop
loope
cmpsl
adc
mov
xchg
pop
mov
pop
push
shll
inc
jb
fildll
inc
mov
pop
andb
push
pop
push
mov
cld
bound
fucomp
and
dec
sbb
add
hlt
outsl
scas
xchg
inc
mov
jne
in
push
jmp
mov
out
add
call
insb
inc
or
lcall
mov
stos
sbb
push
sbb
fbstp
pop
cmp
mov
inc
repz
xchg
cs
or
or
in
xor
aad
and
jbe
hlt
lcall
jb
loopne
mov
or
pop
test
stos
int3
dec
jmp
xchg
cmp
in
sub
sub
mov
ror
loope
aad
adc
fnsave
out
sbb
add
out
mov
stos
sbb
mov
dec
mov
push
cmpsl
mov
int
xlat
adc
push
das
lea
mov
jbe
into
cld
bnd
xchg
adc
mov
mov
or
cltd
jae
aad
dec
and
pop
mov
test
mov
divb
or
dec
dec
enter
test
push
mov
popa
cmc
sbb
push
lea
popf
xor
pop
icebp
pop
sub
inc
dec
push
adc
lret
ja
inc
pop
inc
dec
cmp
test
fs
ja
int
add
int
cmp
jle
mov
fwait
push
mov
mov
dec
inc
int3
in
hlt
testb
mov
pop
je
push
adc
cmp
sub
add
pushf
ret
aas
sarl
push
daa
mov
add
or
jp
sti
sbb
rorl
cli
les
or
or
mov
imul
dec
test
mov
mov
js
or
xor
sub
popa
adc
js
fists
mov
je
dec
or
adc
out
and
and
xchg
cmc
mov
iret
cmp
push
stc
in
cltd
cmc
jns
lahf
clc
mov
dec
fnstsw
lahf
dec
daa
xchg
test
outsb
sbb
add
std
jae
lcall
mov
jnp
int3
mov
jb
imul
mov
mov
movsl
mov
fs
add
add
mov
pop
xchg
and
fiaddl
popf
mov
cmpsb
mov
inc
loop
sub
push
mov
push
and
les
rcr
sub
xchg
stc
movsl
and
popa
inc
mov
and
xor
xchg
ljmp
sbb
pusha
mov
ror
or
test
int
mov
in
xchg
cwtl
sub
ret
fs
push
cmpsl
cld
and
mov
lods
pop
xor
movsl
mov
cs
popa
ss
outsb
mov
dec
lods
in
orl
pushf
out
out
xor
mov
xor
jecxz
dec
repz
mov
into
leave
movsl
and
jns
pushf
mov
xchg
filds
outsb
inc
cld
cmp
add
jge
in
push
pop
sahf
ds
mov
push
xor
test
mov
movl
pushf
cmp
jg
mov
out
ret
ljmp
mov
into
idiv
and
jb
jne
and
mov
cmc
subb
std
xchg
jmp
sub
jnp
cld
pop
pop
mov
lcall
inc
or
jo
das
jmp
xchg
sub
inc
aad
cmp
sbb
insl
lret
mov
out
out
lods
ss
add
stos
inc
jge
push
and
and
add
sub
mull
dec
sub
xchg
dec
sub
jg
call
fbstp
outsb
test
aas
xchg
out
fstl
push
lret
add
mov
mov
dec
in
stos
out
fadds
mov
push
adc
push
test
mov
in
test
cmp
jae
xchg
mov
fcomps
test
lcall
mov
pop
imul
inc
ficoms
inc
scas
in
shll
dec
and
push
mov
pop
and
mov
push
mov
dec
or
cmp
adc
xor
and
test
xchg
push
dec
mov
dec
and
sub
imul
cmp
arpl
xor
dec
les
jnp
xorl
add
mov
push
mov
popf
sub
mov
adc
jae
mov
push
js
dec
and
push
call
mov
or
divl
xor
ss
cmp
cmp
cwtl
mov
xchg
mov
cli
icebp
pop
cs
dec
imul
jp
cmp
jnp
mov
dec
or
pop
and
stos
inc
sbb
mov
insl
and
repnz
jne
push
popa
int
or
inc
les
popa
js
xor
imul
in
add
lods
std
cmp
jne
insl
orl
sbb
adc
jo
sub
sbb
xor
insb
stc
call
sbb
xor
mov
mov
popf
bnd
adc
icebp
in
mov
pop
mov
ret
popf
mov
push
mov
std
pop
iret
pop
ret
dec
popa
inc
adc
push
xchg
xlat
inc
add
mov
outsl
and
mov
fs
xchg
add
push
mov
fdivs
jb
rcrb
cmp
sarb
movsl
jnp
stc
or
loopne
push
adc
push
jbe
ss
enter
shll
into
test
call
sub
repz
mov
jg
sbb
mov
arpl
mov
cltd
sub
in
test
add
sub
push
mov
iret
xchg
dec
push
dec
shll
rol
movntps
in
aas
jne
xchg
xor
clc
jnp
or
jmp
xchg
leave
push
adc
jne
xor
in
cwtl
iret
xchg
sbb
jae
jo
pop
imul
push
cmp
outsl
mov
xchg
js
xor
cld
test
jmp
adc
sub
mov
lret
mov
out
mov
mov
dec
iret
mov
xchg
ret
xchg
adc
gs
loopne
addr16
cmc
mov
enter
push
adc
jmp
xlat
mov
incb
mov
jmp
mov
mov
push
lahf
mov
fadds
cmpb
int3
std
or
dec
cltd
lock
repnz
xchg
sbb
out
inc
sub
pop
xor
dec
icebp
lret
sahf
pop
icebp
dec
mov
outsl
pop
fnsave
sbb
fs
xor
in
lret
mov
stc
idivl
push
jns
xor
mov
xchg
jno
mov
fbstp
jp
es
dec
xchg
icebp
rol
inc
cwtl
js
push
push
or
ret
in
ja
adc
fsubrs
and
ja
dec
cmp
lods
or
mov
xor
in
in
jl
lcall
sub
lcall
test
addr16
and
dec
out
test
sub
pop
lods
loopne
out
jb
or
push
mov
mov
inc
pop
jp
stos
pusha
or
or
push
sbb
add
sbb
jno
int3
push
jecxz
movsl
mov
out
pop
mov
fwait
and
or
imul
push
stos
add
add
push
jae
sbb
ret
add
cmp
inc
lods
jge
test
and
add
or
inc
das
mov
cmp
jg
and
aad
pop
cli
scas
pop
sbb
jle
test
divb
jle
clc
pop
int3
cltd
mov
daa
out
push
ljmp
pcmpgtd
jns
pop
cmp
jmp
xchg
cmp
lret
dec
shrl
fnstcw
push
jmp
mov
std
out
jnp
lret
mov
xchg
xor
js
sbb
cltd
ficomps
daa
add
pop
cmp
sbb
cltd
xor
and
or
pop
push
mov
and
and
adc
or
movsl
rcrl
xchg
adc
jb
push
xlat
ret
adc
stc
dec
cmpsl
mov
les
das
scas
sub
in
sbb
and
iret
dec
xchg
jb
jge
xchg
xor
bound
paddusb
icebp
gs
sub
sti
push
cs
and
adc
push
loope
cs
out
mov
divb
cmpsl
or
adc
xchg
arpl
lds
je
nop
jl
std
sbb
leave
cmp
test
and
test
fcoml
test
jbe
xor
push
add
aad
and
push
cmp
clc
or
jg
subl
mov
jcxz
jae
cmpsl
mov
dec
xor
movb
arpl
movsb
aas
xor
in
fists
or
fwait
sti
rol
sub
xlat
sbb
mov
mov
add
insb
mov
or
test
insl
mov
repz
fsub
push
addl
out
clc
ret
xor
cli
icebp
mov
int3
shl
ljmp
icebp
and
imul
mov
lahf
sahf
jp
inc
xchg
mov
stos
mov
or
push
ja
sub
adc
jecxz
int3
xchg
arpl
cmp
sahf
sahf
mov
xor
xor
add
hlt
clc
push
outsl
pop
push
in
sbb
sub
jno
lock
stos
inc
loop
sahf
clc
aad
aas
roll
outsb
fsubl
sti
mov
pop
fadd
and
movsl
xchg
pop
pop
jp
int3
adcb
lock
ljmp
push
mov
and
push
cmp
jl
ja
adc
mov
and
xchg
mov
in
stc
cs
cmp
dec
or
mov
ss
xor
mov
fwait
out
xchg
xchg
xorl
pop
mov
pop
lea
mov
jmp
cmp
pop
test
jne
stos
out
adc
xor
fwait
stos
inc
xchg
add
shl
aam
call
jbe
mov
icebp
inc
scas
ret
nop
jno
pop
out
repnz
cmp
sbb
lock
dec
call
xor
add
cltd
mov
mov
push
adc
xchg
mov
sbb
gs
inc
lock
xchg
sbb
icebp
test
cmc
add
cmp
xchg
jmp
dec
jge
sub
sub
sub
adc
push
add
icebp
cwtl
mov
mov
cmp
repnz
sbb
add
dec
ficoml
aam
xor
inc
and
xor
lahf
imul
cmp
xchg
clc
inc
cmp
mov
sub
dec
mov
fsubs
cmp
mov
push
clc
mull
lods
adc
js
out
adc
test
in
cmp
pop
cmc
push
flds
in
pop
stos
mov
add
vmovq
jecxz
stc
sub
inc
mov
push
imul
ljmp
test
inc
xchg
pop
sbb
jle
cwtl
xchg
mov
out
add
jecxz
arpl
jbe
cmp
add
repz
or
out
fwait
rcr
mov
add
fisttps
xor
mov
fnsave
testb
fwait
divb
je
pop
inc
pop
or
push
cs
ss
jns
or
add
push
repz
loop
pop
mov
mov
mov
push
push
in
jne
pop
xchg
cmp
sahf
sub
push
inc
and
sbb
add
xor
push
cld
mov
sbb
mov
adc
scas
movsb
adc
pop
scas
and
out
cmp
cmpl
test
das
bound
dec
lret
push
inc
stos
fildll
jmp
push
das
movsb
fisubs
mov
push
sub
sbb
push
adc
rorb
and
jnp
adc
mov
mov
cmp
enter
out
lock
sub
jp
insb
pop
jo
and
dec
jp
movl
pop
inc
xlat
add
pushfw
filds
cwtl
outsb
cwtl
cmpsb
push
xchg
test
test
cmp
push
xlat
add
adc
insb
into
cli
in
movsb
inc
mov
inc
jmp
push
pop
ficoms
loope
stc
adc
sbb
bound
loopne
out
or
aas
orps
sbb
movsb
aas
cmp
rolb
insb
dec
inc
mov
jb
lods
xchg
mov
sbb
cld
xor
bound
jae
lcall
pop
loop
push
sbbb
cmp
mov
arpl
xor
cmp
jae
mov
mov
repnz
jno
out
call
cmp
pop
xor
das
mov
pop
push
jb,pn
test
and
jp
sbb
jl
jg
push
pop
mov
ljmp
popf
lods
insl
icebp
sysenter
sub
ja
cmp
push
out
pushf
clc
rcr
jns
in
sbb
lret
jae
jo
out
mov
jnp
loop
ljmp
mov
repnz
jns
rol
lock
cld
add
out
cmp
adc
lods
mov
or
push
std
add
mov
mov
loop
xlat
dec
lock
hlt
fimull
clc
into
lds
je
vcvtss2sd
loopne
aas
push
jb
popa
and
popa
cmp
addr16
popa
fstpt
pop
in
dec
out
push
ljmp
fildl
dec
lods
xchg
jp
sub
je
pusha
out
leave
fistl
jp
iret
jmp
out
lea
sub
pop
test
and
in
pushf
loopne
mov
mov
repz
int3
adc
mov
jnp
int
and
outsb
nop
cs
mov
arpl
and
xchg
inc
sti
and
fstpl
in
cmp
mov
dec
popa
cld
shr
test
jae
cmpsb
cmp
jmp
mov
ds
and
adc
fwait
ljmp
jl
xor
push
into
cmp
mov
mov
sbb
addr16
xchg
out
inc
test
icebp
cwtl
cmp
stos
iret
cmp
out
cli
jmp
rcr
pop
js
add
inc
dec
add
mov
rclb
add
stos
outsl
jbe
push
dec
mov
jnp
test
pop
xor
imul
xchg
mov
sub
sbb
loop
aas
into
add
addr16
loop,pt
sbb
push
mov
pop
daa
ljmp
iret
and
push
popa
jnp
push
and
cmpsl
out
mov
ret
push
mov
mov
fsubs
loopne
dec
mov
push
jl
mov
mov
ja
enter
push
pusha
aas
jno
mov
aam
jns
add
sub
mov
and
mov
jbe
sbb
fs
outsb
jecxz
jmp
mov
stos
add
jecxz
add
shr
push
inc
test
xchg
mov
pop
lahf
fistl
and
dec
xchg
lods
stos
xchg
cmp
lods
rcll
mov
fucomi
sub
sub
sub
frstor
pop
stc
jnp
sar
in
lock
mov
pop
test
pop
cmpsl
cmp
and
adcb
cmpsb
and
cmp
sbb
xchg
and
add
mov
mov
dec
inc
adc
jns
pop
pop
or
lahf
in
adcl
cs
pop
cmp
cli
or
xor
adc
inc
decb
mov
insb
jnp
pop
jbe
push
mov
pop
dec
xchg
sbb
xchg
scas
or
loope
and
fidivs
sub
mov
cmc
xchg
jl
fimull
jecxz
add
adc
fcoml
call
jge
push
ret
lret
hlt
add
mov
push
cmp
push
test
or
inc
das
xchg
mov
js
mov
mov
aaa
and
ficoml
lahf
add
and
mov
rorl
sub
dec
pop
jne
pop
sbb
repz
sbb
mov
push
push
arpl
rcr
jns
mov
xor
lods
xchg
das
or
push
les
hlt
insl
and
jne
test
scas
mov
pop
dec
lahf
jne
dec
and
lea
xchg
push
or
xor
mov
incb
out
lret
xlat
iret
cwtl
mov
xor
sti
fmulp
cmp
mov
in
fcmovu
clc
daa
add
inc
hlt
jne
adc
pop
xchg
push
cmp
adc
adc
lea
mov
pop
jb
pop
in
push
push
addr16
mov
movsl
loop
popa
or
mov
adc
fxch
fisubl
test
add
push
scas
jnp
mov
mov
icebp
sahf
bound
fsts
fs
adc
sub
mov
in
out
cmc
shll
aas
inc
into
stos
push
pop
dec
mov
ljmp
jnp
mov
jnp
movsl
bound
or
popf
add
inc
xchg
jg
pop
sbb
jb
or
jp
xor
sub
fidivrs
pop
mov
mov
sub
les
and
pop
xlat
clc
frstor
lret
clc
js
scas
outsb
push
icebp
outsb
sti
lret
adc
je
je
jno
jge
xor
jne
and
leave
es
pop
rclb
adcl
ret
filds
lea
fldl
inc
js
jg
divb
arpl
inc
push
mov
in
push
pop
lret
push
lea
adc
mov
or
in
int3
push
mov
adc
aaa
and
xchg
aam
outsl
mov
cmovge
je
es
xor
loope
hlt
adc
test
dec
sahf
sub
fdivrs
dec
push
push
ja
push
rol
mov
pop
mov
xchg
push
sti
jge
cli
sbb
xchg
sub
dec
or
push
mov
fsubr
aas
test
mov
in
lahf
rcrl
pushf
mov
lret
mov
sbbl
movsb
test
adc
cmp
test
scas
sub
adcl
mov
subl
dec
rcrb
cmp
inc
pop
cmc
es
bound
inc
sahf
mov
into
lret
xchg
xchg
jp
push
into
roll
repnz
xchg
cltd
aam
js
or
test
mov
je
dec
lds
mov
cmp
int
mov
repz
shrb
mov
cli
cmpb
push
orl
es
addr16
mov
add
hlt
jne,pt
lock
mov
xchg
mov
hlt
xchg
add
stos
ljmp
mov
pop
cmp
mov
pop
fbld
pop
xor
pop
jle
inc
add
adc
mov
ljmp
cwtl
stos
test
cmp
dec
mov
sbb
lds
leave
loopew
push
adc
in
jge
fldl
push
icebp
pushf
in
dec
negl
ljmp
cmp
movsl
mov
adc
xchg
dec
cmpsl
jg
lcall
push
cmpsb
mov
xor
cli
inc
sbb
mov
popa
add
test
lcall
pushf
jge
sarb
lods
adc
repz
mov
in
mov
es
in
cltd
adc
into
mov
orb
out
inc
inc
push
cmp
shrl
sahf
xor
mov
push
out
ffreep
mov
insl
leave
dec
push
sahf
mov
inc
mov
das
push
add
loopne
xor
add
scas
sbb
push
out
push
push
jnp
out
inc
ds
adc
sbb
cwtl
dec
enter
jg
fiaddl
iret
or
cld
adc
jge
fwait
and
mov
das
inc
pop
in
cmp
mov
xchg
add
pinsrw
or
movsb
ja
mov
mov
movsb
dec
jb
xchg
icebp
movsb
shrb
dec
ficoms
iret
rcrb
shll
test
stos
test
sub
into
xlat
cmp
in
push
jae
pop
xchg
or
adc
jbe
ret
xchg
aas
pop
adc
mov
divl
adc
push
mov
inc
out
nop
xor
xor
das
mov
mov
mov
lahf
inc
xor
repnz
adc
ret
aad
stos
mov
out
mov
mov
fwait
xlat
cmp
lods
lods
sub
addr16
xchg
roll
inc
cltd
out
rorb
cmc
dec
repnz
xor
out
and
int
icebp
insl
mov
add
daa
rcrb
ret
inc
addr16
sarl
jnp
movsb
cmc
dec
and
test
xor
push
popa
add
ret
jae
adc
loope
pop
jbe
mov
ljmp
add
fld
sub
lods
pop
mov
xchg
mov
ljmp
xor
pop
push
add
or
es
adc
movsl
push
xchg
inc
jmp
lahf
add
les
sub
inc
sub
sub
pusha
add
mov
jp
push
jo
bound
mov
inc
dec
inc
test
rolb
add
fcomps
les
or
ss
cmp
push
scas
pop
outsl
loope
in
cmp
adc
push
lret
push
icebp
lods
sub
and
rcl
sahf
push
sub
dec
es
dec
jmp
push
fbstp
xorb
popa
mov
cmpsl
repnz
popa
ss
enterw
xchg
jae
lret
dec
mov
hlt
xchg
loope
lds
ret
arpl
mov
dec
repz
dec
xchg
push
and
mov
pop
xchg
add
lret
mov
mov
and
lea
mov
outsl
mov
shrl
test
mov
sub
test
les
sbb
lods
popa
pop
movsl
mov
inc
test
xchg
adc
and
enter
test
sub
int3
sbbl
sbb
xor
lods
push
pop
in
les
test
mov
lret
imul
push
jl
sub
cmpsb
inc
int3
std
push
or
es
scas
outsb
dec
pop
movsl
movsl
insb
aas
stos
mov
int3
shrb
insb
push
or
mov
testl
outsl
xor
dec
aas
in
test
jnp
mov
stos
jo
sub
cmpsb
push
jo
or
mov
sbb
mov
gs
mov
sbb
inc
push
mov
sbb
cli
out
inc
test
cmp
sub
stos
push
xor
popa
popa
jge
jne
gs
les
adc
arpl
int
loope
or
pop
xchg
shl
stos
mov
movsb
js
aaa
jl
and
hlt
dec
mov
in
insb
sbb
clc
mov
lcall
out
add
test
shlb
mov
cwtl
aas
jp
loop
or
mov
aaa
pop
imul
push
cmp
cli
dec
jp,pn
and
or
loope
mov
mov
notb
shll
jecxz
out
xor
inc
cs
sbbl
push
cmp
xchg
or
cmc
pop
loope
inc
dec
outsb
xor
inc
lds
lcall
xchg
mov
pusha
jg
jp
add
lds
sbb
icebp
mov
out
pop
sbb
mov
test
sahf
and
addr16
pop
shll
mov
stos
sbb
xcrypt-ecb
cmpsl
lret
aad
pop
aad
or
cmp
push
push
or
lcall
hlt
cltd
aam
xchg
addr16
rolb
xchg
insl
mov
in
or
xchg
jecxz
mov
sarl
push
in
mov
mov
inc
jp
cld
pop
sbb
add
cmp
repnz
cmpsl
negl
jp
sub
mov
test
mov
xor
jae
xchg
inc
jl
loope
arpl
pusha
addr16
mov
in
and
loope
jae
mov
cltd
insb
sarl
mov
inc
loopne
ja
lods
push
dec
xchg
rcr
mov
stc
xchg
mov
or
loope
push
inc
pop
and
xchg
fcompl
fmulp
inc
enter
fildll
decl
adc
ja
cmp
adc
shlb
nop
imul
aaa
pop
mov
adc
cmc
mov
xchg
adc
mov
pushf
xchg
neg
mov
sbb
and
test
clc
xor
ret
sub
out
push
stos
adc
ja
cli
xchg
lret
leave
sbb
sbb
sub
sub
mov
push
jl
add
mov
mov
mov
lock
inc
out
xor
aaa
push
aad
inc
pop
lea
push
and
loope
clc
and
fcmovnb
in
or
outsl
popf
adc
add
clc
pushf
or
out
dec
sbb
ds
sub
mov
faddp
adc
sub
push
adcb
or
and
mov
sbb
mov
mov
subb
popa
daa
movsb
stos
ret
imul
mov
jecxz
lods
jmp
andb
jg
ss
mov
popa
cmc
testl
cmp
push
jle
cmp
jnp
pop
cmpb
hlt
mov
test
pop
and
dec
xchg
xor
arpl
arpl
pop
xor
push
loop
adcb
out
push
nop
mov
addr16
push
push
and
xchg
lods
test
or
dec
or
add
or
inc
inc
jo
mov
jb
mov
leave
aas
cmp
insb
adc
test
repnz
ja
repz
or
cld
mov
mov
dec
cmp
rclb
mov
lcall
mov
pop
sahf
fstps
xchg
jne
aas
cmp
dec
or
decb
roll
jnp
jnp
dec
inc
dec
cmp
and
stc
call
stos
fnsave
mov
fiadds
add
fnstcw
sbb
jecxz
and
mov
js
lcall
add
inc
xor
mov
stos
fs
mov
xchg
xchg
shlb
adc
hlt
xchg
bound
cmp
mov
popa
lret
adc
pushf
pop
daa
and
stos
fstl
jle
aam
jno
and
mov
push
js
mov
rolb
xchg
sbb
or
gs
divl
repz
inc
sub
adc
scas
dec
push
lea
out
mov
mov
mov
in
pop
fstpl
int3
stc
mov
mov
xor
mov
nop
cli
cmp
adc
cmpsb
jge
pop
lock
daa
outsl
ret
rcr
push
dec
std
ficomps
rolb
outsb
nop
rorl
dec
lea
insb
loope
pop
cmp
out
dec
mov
movsb
and
int3
pop
aam
push
orb
roll
mov
mov
fsubp
sahf
push
loope
shl
mov
inc
sar
xchg
mov
pop
push
insb
movsb
xchg
xor
sub
mov
repnz
insb
lods
fdivrs
jg,pn
cmpsb
sbb
adc
mov
sub
push
mov
mov
jle
into
inc
add
sbb
jae
nop
pop
pop
or
pop
push
ficomps
xchg
pop
add
sbb
and
cmp
stc
mov
or
mov
inc
je
push
loope
adc
cmp
mov
mov
outsb
mov
pop
push
sahf
js
pushf
mov
pusha
outsb
lahf
icebp
aam
sti
pop
sbb
pop
add
loopne
jb
pop
add
inc
fwait
ds
out
mov
dec
cmpsb
pushf
rorl
push
repnz
xlat
sbb
jne
fiadds
ljmp
out
ret
cmp
rcll
mov
rcl
mov
sti
push
jge
mov
xor
in
incl
mov
rorl
cmpsb
push
rcr
add
dec
loop
mul
cmpb
enter
pop
or
mov
and
scas
test
loope
cmp
pop
addr16
ja
inc
sub
scas
repnz
mov
insb
fiadds
aam
nop
insl
movaps
mov
cs
call
out
movb
shrl
jge
lcall
jb
scas
out
jb
xchg
sub
or
jb
outsl
insl
xlat
test
shll
xlat
aad
push
pop
lahf
inc
or
push
cltd
es
and
push
sub
outsb
sbb
int
and
lock
and
dec
mov
inc
lahf
add
mov
cmp
movsl
insl
stos
sub
adc
mov
fistl
imul
sbb
lds
push
cwtl
fmulp
fsts
xchg
mov
frstor
push
push
lahf
testl
ss
pop
das
push
dec
lcall
repz
xor
arpl
mov
aas
lea
xchg
test
lret
xchg
cmp
mov
pusha
fists
into
cmpsl
dec
xchg
lock
sbb
mov
push
mov
and
add
divl
mov
fdivrs
mov
je
pop
xor
outsl
xchg
lahf
adc
lret
mov
call
ss
xchg
daa
fcoms
das
xchg
cmp
xor
cmp
sub
test
or
insl
cmpsb
mov
cmpsl
sub
mov
inc
cmp
dec
cmp
test
add
ljmp
loop
sbb
inc
push
pop
xchg
adc
push
sbb
push
jo
pop
insb
mov
sahf
xchg
fistps
lds
loope
pop
cmpsb
mov
jge
adc
mov
cmp
sub
jg
icebp
dec
fdivrs
or
ljmp
cmp
call
mov
enter
test
aas
add
adc
addr16
negl
jl
fs
icebp
lahf
pop
add
scas
ja
xor
and
sahf
xchg
test
lret
sub
dec
add
cmpsb
setg
ljmp
in
and
jge
jl
xchg
mov
fxch
push
loopne
shr
adc
mov
jmp
addr16
push
cmpsl
cmp
mov
sub
jno
mov
xor
test
scas
dec
out
or
ja
orl
fcomps
lahf
dec
mov
xchg
loop
and
push
xor
and
jmp
imul
icebp
andb
int3
or
cmpsb
call
push
and
in
mov
pop
movsl
push
movsl
inc
and
lea
cli
rcll
loope
add
cmp
cltd
inc
push
mov
dec
pushf
mov
cli
std
test
cltd
push
push
jb
and
sbb
aam
je
sub
dec
lods
out
jo
es
and
popa
lods
movsb
scas
sub
ret
fdivrs
out
imul
cmp
lret
sub
aad
xchg
sub
pop
outsl
pop
xchg
adc
aam
push
gs
test
shlb
mov
sbb
pop
xlat
es
jno
push
movsb
scas
jno
xchg
lods
pop
add
fsubrp
push
cmp
push
flds
lea
lds
out
add
lcall
cmp
mov
out
pop
clc
cmp
jns
int
pop
fadds
jb
mov
pushf
xchg
dec
sahf
lahf
mov
in
add
cmpsl
xchg
test
lret
jb
sub
mov
xor
seta
rclb
js
and
lret
jo
leave
pushf
cmp
mov
loopne
or
xchg
aad
decl
ret
orl
sarb
sti
scas
aas
or
icebp
mov
cmp
dec
sub
call
jo
adc
std
in
cmp
xchg
dec
or
sti
stc
sbb
or
es
inc
shrl
in
xor
aad
or
mov
out
aaa
xor
push
xchg
pop
inc
imul
xlat
aad
cld
lcall
imul
xor
and
pop
jno
xchg
cmp
sbb
leave
push
in
inc
dec
cli
mov
loope
nop
or
std
unpckhps
dec
dec
inc
or
test
or
loope
into
test
sbb
pop
sti
ret
mov
loop
inc
mov
mov
lock
add
repnz
fisubs
test
in
jl
lods
add
lahf
cmp
int
insb
xor
test
es
add
out
jmp
pusha
out
jno
jmp
pop
sub
ja
adc
dec
mov
jbe
xorl
xchg
mov
xchg
fstpl
inc
in
movsb
lods
popa
push
loopne
add
movsl
and
in
mov
and
lahf
pusha
xchg
daa
mov
test
ret
call
fmul
push
xor
aam
xchg
sub
inc
ja
inc
lcall
lret
cld
je
lcall
loope
push
mov
jno
call
into
cmpl
outsb
mov
bound
fmuls
lret
sar
inc
sbb
add
stos
jb
adc
pop
aaa
mov
call
leave
mov
shlb
jle
inc
lods
and
xchg
pop
sub
int
movsl
and
ljmp
push
xchg
popf
push
in
mov
or
lret
scas
xchg
out
jo
test
and
adc
sub
jb
push
adc
mov
dec
mov
inc
mov
stos
nop
shl
je
dec
aam
add
mov
mov
aam
out
mov
xchg
ja
push
mov
cmp
jae
cmpb
leave
in
dec
sbb
out
inc
push
lods
addr16
jno
das
cmp
push
std
add
xor
cmp
dec
pop
mov
pop
aad
fistpll
jb
mov
jns
mov
pusha
xchg
and
mov
push
arpl
mov
jns
movsb
int3
or
shl
push
cmp
pop
mov
inc
jl
jnp
leave
jp
loop
mov
je
sahf
cmp
mov
xor
mov
push
lods
mov
enter
mov
jl
dec
jg
or
inc
xlat
arpl
stos
dec
and
adc
mov
movsb
mov
stc
or
push
adc
cmpsl
jmp
shlb
pop
mov
sarb
fistl
rcl
and
sbb
movsl
sub
push
lret
push
jnp
std
xor
inc
xchg
pop
popf
dec
test
inc
icebp
leave
imul
mov
and
and
shrw
pop
cs
cld
cmp
inc
shll
rorl
popl
ror
mov
ss
xchg
enter
dec
mov
xor
push
imull
mov
xor
cmp
sahf
push
in
cmp
xor
adcb
sub
jae
aam
sbb
push
nop
imul
inc
mov
loope
sub
xchg
fmuls
rorb
push
ret
jbe
adc
inc
pop
daa
mov
mov
outsl
lret
mov
and
ljmp
add
js
cmpsb
jbe
out
aaa
xchg
and
cmc
mov
js
lods
sbb
mov
adc
pop
mov
call
mov
jecxz
pop
imul
mov
dec
dec
arpl
or
mov
mov
push
ds
aaa
repz
xchg
sub
mov
adc
push
outsl
and
adc
xorl
icebp
jmp
sub
mov
addr16
or
popf
js
push
ret
into
das
lea
cmp
jbe
xchg
sahf
test
rolb
cmp
push
xchg
lods
stos
test
mov
das
and
stos
nop
in
lea
lret
lea
mov
sub
mov
push
adc
cli
mov
ljmp
andb
add
cltd
inc
adc
imul
arpl
mov
mov
popf
and
nop
jo
lcall
sub
in
push
negb
mov
cmpsb
mov
mov
outsl
stos
cwtl
jl
ja
data16
cmp
and
jo
pusha
mov
es
test
or
pop
loop
imul
pop
add
and
jbe
ds
or
mov
xchg
in
out
xor
sub
subb
adc
inc
jp
inc
sub
rolb
sbb
sbb
add
jmp
cld
and
call
loopne
int3
inc
outsl
out
pop
or
inc
xchg
dec
fbstp
in
repnz
push
add
test
push
xor
add
arpl
cmpsl
and
shrl
add
fs
mov
cs
das
je
mov
add
push
and
pop
mov
push
and
xchg
adc
leave
dec
inc
repnz
aam
adc
jnp
out
cli
rcll
imul
out
aad
pusha
sbb
ss
or
testb
ret
lock
jl
mov
jnp
xchg
adc
pushf
in
xor
cwtl
sub
sub
mov
cwtd
aam
sub
sbb
mov
ret
sbb
xor
lods
sbb
mov
push
cld
dec
in
mov
orb
ret
or
sbb
push
xchg
push
adc
int3
push
sub
xor
or
nop
icebp
sub
cli
ficomps
popa
pushf
lods
xchg
xchg
and
imul
test
ret
cmp
into
inc
lea
push
mov
jg
aam
sub
xchg
pop
sahf
adc
sub
push
or
test
inc
add
mov
mov
lret
sbb
jecxz
js
mov
xor
insb
or
lods
outsb
dec
fcom
and
int3
dec
lahf
lret
ret
lods
popa
push
mov
in
imul
pop
xor
jl
lea
wbinvd
fsubl
in
mov
xchg
add
sub
adc
adc
mov
and
in
inc
sbb
mov
leave
and
js
inc
pop
pop
inc
pop
mov
add
insl
fsubp
mov
dec
or
data16
or
out
jle
mov
xor
add
mov
cmp
outsl
popa
add
test
das
xor
fs
xchg
mov
cmpl
cmp
popa
dec
inc
xor
daa
sbb
push
mov
int3
adc
pop
push
hlt
lcall
xchg
sbb
shrl
cltd
gs
jno
or
xor
in
insb
insb
stc
cmp
fwait
js
bswap
ds
roll
add
mov
out
mov
ficompl
outsb
negb
fstpt
loope
mov
mov
xor
sub
jns
sub
pop
jmp
add
xor
pop
mov
ret
jmp
out
stc
subb
dec
fists
lahf
mov
pop
sub
fisttpl
cmp
sarl
fcoml
mov
out
jae
pusha
sbb
cmc
clc
cmp
clc
xchg
out
in
fdivp
push
add
imul
xchg
scas
xrelease
mov
bound
jle
dec
ds
mov
pop
inc
mov
sub
ljmp
xchg
dec
lock
push
fdivrs
lods
push
scas
lods
imul
js
shlb
pop
and
and
push
leave
inc
lock
mov
aad
sub
fstp
inc
and
cmp
mov
lods
mov
jl
popf
inc
sahf
add
jecxz
dec
pop
xchg
sub
repnz
cmpsl
inc
or
sti
sbb
pop
fimuls
xor
push
mov
ljmp
xchg
fcmovne
jg
mov
loopne
push
cmp
ljmp
xchg
lock
pop
sbbl
jp
xchg
xor
cwtl
cmpsb
pop
mov
mov
dec
pushf
decl
inc
imul
or
enter
mov
dec
notb
mov
lcall
dec
pushf
jns
inc
mov
fildl
dec
rolb
add
or
popf
cmova
popf
xor
out
add
or
in
lock
jbe
cmp
jns,pt
dec
mov
inc
fadds
out
dec
dec
inc
mov
fwait
sub
adc
mov
fidivrs
xchg
and
add
mov
jp
dec
and
loop
div
jbe
dec
in
in
aam
add
xor
das
cwtl
add
pop
push
lods
xchg
insb
mov
sub
push
stc
fdivs
enter
mov
mov
pop
push
sbb
cs
in
outsb
in
out
or
test
pop
fldpi
mov
adc
jecxz
pop
xor
sbb
sahf
xchg
imul
pop
stos
or
test
jle
orl
xor
inc
sahf
mov
xchg
mov
xlat
fcoms
add
and
outsb
loopne
hlt
stos
xchg
daa
sbb
insl
and
pop
lahf
movsb
loop
mov
lahf
jo
loopne
in
lret
mov
push
dec
adc
cwtl
xor
pop
insl
testb
inc
scas
lret
mov
and
aas
pop
inc
movsb
rolb
popa
mov
ret
inc
aad
pop
out
loop
data16
ret
rorl
jecxz
out
sub
std
subb
pusha
cmp
jne
dec
mov
push
idivb
cmp
imul
test
pop
jne
test
inc
repz
xor
inc
aas
mov
addr16
loopne
lret
pop
cld
mov
cmp
add
add
adc
pop
ljmp
movl
xlat
adc
pop
cmp
cmp
jl
push
inc
aaa
xchg
pop
sbbl
mov
mov
ja
stos
sbb
loop
js
imul
cmp
mov
or
insb
adcb
inc
or
lods
push
popf
add
loopne
pop
aaa
sbb
push
push
push
enter
add
test
or
inc
inc
fnstcw
inc
test
push
rclb
stos
ljmp
andnps
push
xlat
shll
mov
pusha
jg
ds
adc
mov
xchg
and
mov
xchg
pop
movsb
aam
adc
mov
fbld
add
adc
out
into
cmpsl
movsb
or
aam
lahf
fdivrl
cli
into
arpl
push
jae
push
dec
imul
jno
sbb
out
xor
cmp
and
test
sub
add
pop
adc
lods
xor
jle
cmpsl
pop
mov
mov
mov
sub
mov
or
adc
scas
jl
cmp
dec
push
mov
xor
dec
rcr
pop
std
mov
in
xlat
std
addr16
pushf
mov
jp
mov
mov
aas
cli
sub
daa
and
popa
sarb
and
cmp
xchg
mov
add
xor
adc
lret
popf
jl
jg
cli
outsl
adc
push
mov
mov
sbbb
nop
fcmovbe
sub
push
jmp
add
xchg
xchg
popf
dec
xchg
call
mov
cmp
outsb
pop
shrl
dec
inc
mov
mov
push
jo
rcr
cmp
loop
jg
scas
stc
nop
div
loop
pop
fisubl
sub
dec
fstpt
mov
mov
outsl
inc
testb
adc
dec
ret
lahf
ds
fdivr
pop
xchg
xchg
imull
mov
out
mov
cwtl
dec
jne
fwait
adc
or
aad
mulb
cmp
mov
nop
fnstenv
pop
xlat
dec
pop
mov
push
mov
pop
add
mov
sbb
or
cmp
fadds
mov
add
mov
xchg
rcll
add
ret
das
sahf
mov
or
shll
and
mov
incb
es
sub
in
in
push
push
ret
movsb
shlb
gs
outsl
inc
movsb
mov
jp
add
nop
enter
int3
data16
inc
fs
daa
aad
mov
or
xor
repz
sbb
cmp
sbb
dec
cmp
fwait
repnz
aaa
and
push
push
mov
push
movsl
or
dec
pushl
insl
test
xor
push
data16
cmp
or
and
shll
xchg
scas
xor
es
sub
mov
push
mov
mov
outsl
adc
inc
sub
gs
in
outsl
xchg
ds
scas
movsb
push
and
push
pop
xor
jmp
jno
cmp
push
fmulp
leave
xchg
push
das
dec
push
xor
sub
add
adc
mov
or
pop
or
test
mov
sbb
enter
sub
pusha
js
pop
inc
inc
cmp
popa
je
dec
jb
test
pop
pop
push
and
sub
mov
adc
cmpsl
pop
inc
shl
or
lcall
xchg
test
inc
push
jmp
pusha
mov
and
call
push
call
outsb
outsl
and
pushf
dec
sub
mov
dec
adc
mov
sub
push
push
dec
movsb
jnp
in
push
cwtl
scas
inc
push
sbb
cmp
fsubrs
insl
ds
mov
popf
in
fmulp
outsl
and
or
das
outsl
inc
cmp
mov
cmp
inc
sarl
loop
jmp
mov
push
outsl
jecxz
mov
daa
testl
xchg
fimull
popa
cmpsl
xor
push
xchg
jbe
or
push
fimull
mov
enter
push
hlt
mov
xchg
negb
xchg
sbb
mov
xchg
aaa
mov
mov
repz
mov
addr16
js
loop
jg
int3
adc
mov
xor
xchg
fdivrl
and
sub
push
cmpl
dec
mov
xlat
push
enter
and
subb
sbb
adc
in
cmp
outsb
test
cmp
inc
out
pushf
mov
cmp
and
jge
push
lock
jno
adc
adc
std
cmpsl
jns
sub
out
add
add
lret
sbb
push
pop
add
mov
adc
xchg
inc
cltd
push
mov
inc
push
mov
or
imul
pop
popf
pusha
sub
lret
sub
xor
syscall
mov
mov
ljmp
sub
pop
xor
mov
sbb
dec
inc
lds
cmp
mov
xchg
icebp
mov
mov
out
stc
inc
lret
fidivl
mov
lds
sbb
pminsw
out
ret
fstpt
mov
shll
jb
mov
fnstcw
stc
sarl
cmp
mov
jae
mov
daa
not
scas
aaa
mov
inc
or
push
sub
fidivrl
pop
es
or
mov
xchg
add
fimuls
pop
jle
jmp
cmp
cmpsl
fbstp
dec
mov
sbb
push
sahf
andb
addl
enter
test
in
subl
and
stos
dec
test
cmp
adc
jmp
or
sbb
arpl
mov
dec
in
sub
leave
dec
cmc
cmp
jnp
mov
aas
mov
mov
iret
sbb
cmpsb
or
leave
cs
addr16
test
insl
movsl
popf
mov
sahf
or
cmp
mov
mov
pop
mov
jecxz
mov
cmp
xchg
adc
daa
add
stc
in
lcall
mov
popf
push
cs
cmpsb
decl
mov
xor
mov
arpl
rorb
cltd
cld
ljmp
mov
and
aad
rep
out
xor
dec
sbb
cmc
popf
popa
ljmp
sahf
fimull
stc
jno
lret
in
rcrl
ret
push
xchg
xor
outsb
sub
push
movq
dec
mov
cmp
mov
or
sub
xor
rcrb
push
add
fsts
add
fucomp
icebp
mov
jl
into
lret
adc
jg
inc
xchg
mov
inc
sbb
test
or
inc
mov
jns
sbb
pop
arpl
jp
je
mov
outsl
cli
sbb
jo
sti
pop
repz
sbb
imul
clc
movsl
mov
push
and
mov
jnp
and
inc
sub
xor
xor
mov
pop
xchg
enter
pop
pop
es
pushf
mov
mov
lea
add
lods
iret
pop
mov
push
into
adc
dec
inc
js
scas
push
push
pop
xchg
inc
jecxz
and
inc
in
jmp
mov
sbb
mov
sbbb
mov
mull
lret
jg
push
sub
iret
movsl
in
mov
call
push
push
adc
xchg
cmp
mov
cmp
jg
rclb
jmp
pop
jb
push
add
aad
and
or
xchg
xorl
daa
movsl
sti
insl
mov
lret
lret
sahf
xchg
rcrb
lahf
cmp
cli
into
pop
loop
pop
flds
jp
add
jbe
aaa
adc
pop
mov
out
pop
xlat
scas
add
movsb
outsl
and
mov
call
add
mov
aad
test
enter
bound
add
dec
in
push
or
push
clc
nop
movsl
push
lds
mov
test
pop
inc
lods
cmp
jecxz
arpl
push
xor
mov
jle
xchg
stos
shl
bound
mov
and
in
jmp
out
call
leave
cmp
lret
sub
test
test
je
shlb
or
scas
sbb
pusha
imul
rol
xchg
mov
add
lret
fwait
lahf
sbb
mov
sahf
lods
ret
stc
hlt
cli
loop
pop
adc
push
dec
mov
shll
mov
addr16
pop
push
pop
insb
cmp
int3
es
pop
xor
sbb
add
test
enter
stc
add
call
andl
loop
out
out
std
or
jmp
push
adc
lret
push
inc
loop
jg
outsb
cvttps2dq
ljmp
stos
sbb
add
adc
dec
lret
hlt
fwait
mov
inc
sbb
ret
push
fdiv
or
add
roll
lods
hlt
bound
repz
mov
xchg
push
movsb
xchg
dec
loope
push
fidivs
dec
jne
mov
lahf
mov
push
mov
dec
or
cs
and
dec
add
sub
sub
in
pop
mov
mov
jmp
and
fisubl
in
lock
rol
cmp
in
jbe
mov
in
std
iret
rcrb
aad
cmc
arpl
sub
or
adc
inc
sub
aas
jle
push
fstpl
inc
pop
scas
dec
aas
clc
in
shll
cwtl
js
cs
add
leave
adc
or
dec
dec
push
pop
xlat
push
insb
nop
pusha
outsl
movsl
jne
sbb
dec
jge
insb
ds
xor
shll
adcl
push
pop
xchg
sti
pop
mov
cmp
push
lret
mov
lea
in
nop
cld
shll
rol
mov
and
call
fcoms
call
sbb
pop
in
dec
mov
and
ljmp
dec
aas
pop
je
mov
adc
and
and
pop
fsubrs
pushf
sarb
push
dec
cli
mov
test
je
pop
pop
mov
sbb
nop
loopne
xor
out
adc
std
dec
sbb
aad
push
push
jb
sti
int3
and
adc
mov
xchg
out
push
xor
cmpsb
mov
iret
rolb
popf
or
mov
pop
call
insb
fsubp
rcll
aad
int3
xor
cmp
mov
xchg
jbe
cmc
cld
sarl
mul
jne
pop
lds
or
jge
fistpl
xchg
dec
lcall
leave
sub
sahf
jge
test
jbe
or
sahf
inc
xchg
mov
and
push
inc
pushf
stos
xorl
jo
and
adc
mov
das
sbb
das
pop
js
clc
stc
add
jnp
jmp
out
fadds
add
cmpsl
test
jmp
xor
add
sti
sub
xchg
lock
cmp
fcomps
fldl
aas
pop
lods
movsl
cli
pop
mov
and
sbb
xor
aam
ds
imull
fsubs
jbe
sub
xor
negl
shrb
push
sub
pop
testb
bound
mov
jle
ret
mov
jno
push
inc
rcll
scas
push
inc
inc
lahf
lret
cmp
faddl
imul
pop
popf
push
sub
mov
jge
cmp
shrb
ja
test
scas
lcall
mov
fsubl
shlb
pop
xchg
mov
mov
push
outsl
loopne
xchg
loopne
sbbl
imul
out
popf
rclb
jg
cmovne
or
push
nop
repz
movsb
mov
negb
and
jne
stos
lret
cmp
sbb
dec
pushf
jecxz
mov
lock
fidivrs
outsb
sbb
jp
in
push
push
jo
inc
inc
cmp
ss
popf
pop
inc
mov
out
popf
dec
sahf
xor
std
sbb
js
jmp
and
or
notb
insb
fistps
mov
and
imul
push
jb
add
outsb
pop
sub
in
jl
lea
dec
out
push
mov
inc
loopne
xchg
or
leave
stos
push
push
xor
cmpsl
lock
sub
insb
sbb
ficompl
mov
ret
lods
add
fmull
pushf
and
jle
lea
inc
fwait
bound
xor
repnz
sbb
cmpsl
pop
cmpsl
test
loope
push
xchg
push
call
hlt
ja
jno
aaa
insb
mov
mov
push
ljmp
out
mov
sub
cmp
sbb
addr16
notl
dec
jmp
xchg
xor
or
mov
outsb
in
xchg
movsl
ja
pusha
rclb
jg
inc
cld
stos
arpl
icebp
mov
femms
xor
and
mov
pop
addl
sub
ficoms
mov
inc
and
jmp
push
rcll
call
jbe
pop
xor
sbb
mov
inc
add
shl
and
dec
and
xor
test
pop
icebp
dec
out
mov
or
or
xchg
sub
test
andl
cmp
stos
sbb
enter
and
xor
stos
mov
test
jmp
xchg
add
pop
cmc
add
sbbb
repnz
mov
in
mov
and
push
lret
andl
cli
pop
bound
div
mov
into
or
dec
cmp
xchg
addr16
inc
test
jo
mov
pushf
mov
mov
push
add
inc
xchg
icebp
movsl
int
dec
inc
jg
lods
jns
clc
jae
sbb
xor
das
fsubrl
scas
insb
mov
pop
sub
sbb
fs
mov
shlb
scas
jle
xor
cmp
cmc
xor
xchg
xchg
and
jg
aad
scas
mov
testl
dec
jmp
loopne
push
lds
insb
mov
lret
pop
cmc
add
mov
insb
incb
rcrb
out
clc
es
icebp
loope
int3
mov
sub
fs
clc
xchg
xor
mov
fildl
out
in
mov
fdivl
inc
dec
popf
pop
sub
cmpsb
adc
rcr
aam
and
push
popa
cmp
mov
cmp
jne
mov
mov
fisubl
sub
jo
andb
dec
mov
xchg
mov
lods
es
jg
dec
jl
xchg
xorl
mov
cld
aad
mov
popa
pop
imul
and
scas
clc
in
mov
aam
sbb
push
sub
jp
mov
fldt
jl
adc
mov
cmp
je
cmc
out
sahf
add
pop
div
sbb
add
ror
inc
incl
adcl
jnp
leave
mov
lock
mov
lcall
pop
nop
test
arpl
push
sub
cmpsl
cmc
andl
inc
push
cmp
stc
push
ret
cmpsl
and
lcall
mov
ja
insl
xor
repnz
cmp
aam
data16
int
mov
rol
pop
ljmp
jae
fcmove
mov
aad
test
and
dec
mov
clc
dec
addr16
and
lcall
les
mov
push
test
xchg
cmp
repz
dec
pop
dec
inc
dec
rcr
adc
xchg
inc
mov
mov
loop
enter
sub
into
mov
jbe
stos
inc
adc
popa
shl
jno
popf
fs
in
push
xor
mov
push
movsl
or
mov
push
dec
cli
pop
mov
add
repz
sub
pop
daa
icebp
cli
dec
sbbl
sbb
mov
es
inc
insb
lods
test
arpl
xchg
packsswb
aaa
je
push
cmpsl
frstor
movsb
jnp
mov
pop
icebp
es
bound
sbb
pop
inc
loope
push
ficoml
es
insl
xchg
mov
inc
sbb
push
mov
enter
adc
and
mov
icebp
xchg
pop
dec
or
out
and
cmpsb
mov
ja
add
sub
inc
and
test
xchg
lea
lea
fnstenv
and
push
lcall
arpl
cs
out
and
dec
or
cmp
and
sub
xchg
pop
lcall
or
add
addb
mov
or
cs
test
mov
mov
insb
xchg
sarl
jo
mov
sub
fwait
push
or
insb
mov
shr
xor
ja
incl
xlat
jns
arpl
push
push
loopne
sbb
stos
loop
mov
xlat
jnp
ss
and
adc
test
add
stc
int3
repz
dec
icebp
test
jne
mov
movsl
push
cmp
adc
inc
loope
mov
xchg
fabs
stos
or
inc
sub
or
push
jno
loope
pop
gs
or
mov
jecxz
or
xchg
dec
adc
sbb
bound
in
xchg
or
bound
or
jo
enter
sub
inc
inc
movsb
movsb
stc
pusha
dec
mov
sbb
or
mov
aad
out
ret
out
pop
sub
lods
push
mov
enter
and
gs
pop
or
jle
orb
and
xor
push
cli
lock
sub
cmc
popa
pop
inc
mov
jmp
add
cli
cmp
imulb
icebp
xchg
xchg
adc
lea
test
pop
test
add
test
mov
mov
push
icebp
fstpl
inc
hlt
or
jmp
pop
mov
iret
test
cwtl
cmp
addr16
inc
pusha
or
jg,pn
loopne
push
std
xchg
pop
mov
inc
data16
adc
stos
fisttpl
repnz
or
or
test
mov
shlb
fadds
loopne
test
xor
push
pop
sbb
daa
mov
aam
imul
sbb
jbe
inc
jno
aas
in
cwtl
cmp
push
jo
popf
jae
push
mov
fldcw
xchg
ds
push
dec
jae
mov
pusha
cmp
dec
push
ret
xchg
inc
mov
stos
lea
pop
jg
sti
inc
mov
loop
les
fldt
ret
cmp
push
push
lahf
jmp
out
cmp
pop
loop
test
sbb
dec
xchg
fs
push
outsl
cmp
inc
gs
jns
sti
push
dec
and
xor
test
pop
imul
imul
out
xor
mov
je
xorl
adc
or
or
and
dec
cmp
popf
aam
jecxz
xchg
iret
xchg
imul
je
dec
loopne
sbb
incl
cmp
jge
data16
push
pop
sub
pop
fsubrs
xchg
addr16
pop
dec
ret
loop
jp
jbe
sub
cmp
xor
bound
adc
sbbb
out
pop
mov
xor
fstpt
stos
push
adc
cmp
jno
jae
jb
in
xchg
pop
xor
push
or
push
aas
mov
iret
shrb
scas
icebp
inc
adc
push
push
xor
xchg
push
rol
adc
das
mov
mov
mov
cld
jns
pop
xchg
leave
adc
pop
dec
shl
cmp
dec
jnp
xlat
pop
lret
pop
ja
iret
es
sti
mov
out
or
aad
mov
or
es
testb
or
das
pusha
pop
mov
nop
or
or
stc
pop
pop
movsl
push
scas
loope
fbstp
dec
sub
xor
cwtl
sbb
mov
pop
mov
test
in
fucomi
stos
add
ss
inc
or
in
jb
jne
movsl
cmc
push
divb
imul
sub
jns
inc
imul
in
pusha
add
gs
or
xsavec
push
mov
cltd
movsl
mov
inc
mov
pop
xchg
pushf
inc
in
test
or
and
shrb
int
das
xchg
cld
pop
popf
push
mov
cltd
ja
adc
xchg
xlat
xchg
or
lods
jmp
inc
addr16
mov
pop
adc
imul
shlb
notb
inc
push
addr16
jnp
xlat
pop
lret
lret
pop
xor
mov
ret
pop
hlt
icebp
les
bound
cmpsb
mov
jbe,pt
out
les
add
xchg
jae
icebp
dec
mov
pop
fs
pusha
cs
lds
sub
mov
sbb
xor
xor
push
cmp
xor
xor
daa
stos
imul
dec
push
addl
pop
aad
push
les
sbb
pop
loope
inc
cli
lahf
xchg
pop
dec
lcall
adc
mov
popf
jne
push
cmpsl
jle
decb
lcall
movsb
scas
add
cs
mov
xchg
and
xorl
xchg
loopne
fs
pop
inc
pop
cmp
shll
push
push
pop
and
movsl
paddb
and
pop
dec
hlt
jl
and
mov
scas
fs
xchg
orl
xor
pop
pop
jp
xchg
jno
movsl
mov
leave
push
sbb
movsl
jmp
dec
out
cmc
push
pop
mov
mov
popf
xlat
popf
out
xchg
inc
jecxz
stos
xor
cld
test
xchg
fcmovne
adcb
icebp
ja
adc
and
xor
ficompl
sub
sbb
jae
xchg
mov
dec
ljmp
into
out
mov
jecxz
xchg
mov
rclb
sub
stos
fs
out
or
add
int
and
push
cmp
add
xchg
int
or
jg
movsl
scas
inc
outsl
mov
sub
add
xchg
jl
loope
cmp
mov
test
jo
insl
in
mov
cmp
incl
cmp
out
mov
lock
dec
cmp
lds
push
ret
lock
dec
inc
imul
loopne
test
mov
push
pop
rolb
cltd
icebp
or
mov
inc
lds
ret
fs
int3
movsb
loop
add
imul
icebp
jno
inc
loope
pop
pop
add
pop
or
ss
jo
test
dec
pop
add
xor
scas
lahf
pop
push
movsb
sub
subb
in
cmp
fstpt
fistps
mov
stos
ret
or
popf
mov
ss
dec
mov
sub
pop
adc
push
and
mov
popa
nop
xor
out
mov
loop
add
lahf
push
and
fs
cmp
xor
adc
xchg
lahf
and
popa
dec
fcoml
scas
push
add
stc
or
jecxz
ffree
js
fstp
mov
int
pushf
inc
sti
loope
add
je
sub
push
pushf
notb
repz
repnz
pusha
fiadds
dec
sarl
fsubr
mov
and
sbb
jo
or
loope
inc
das
pop
mov
push
xchg
shrd
and
xorl
or
ret
test
cmc
cmp
jb
movsb
mov
sub
fcom
stc
sbb
iret
mov
sbb
push
push
movsl
lds
stc
pop
iret
pusha
cld
inc
rorb
insl
mov
push
push
cwtl
inc
ficoml
pop
inc
int
testl
add
adc
ret
pop
xlat
ds
and
mov
int3
mov
mov
out
subb
jbe
adcb
inc
mov
cwtl
fldl2e
aas
sbb
jae
scas
cld
mov
push
and
or
mov
and
sbb
out
or
adc
xchg
int
dec
iret
bound
outsl
mov
icebp
neg
inc
stos
jns
mov
movsb
stos
cmp
mov
mov
daa
add
inc
sti
sahf
aad
or
int
adc
and
mov
loopne
mov
sub
fldenv
sub
mov
sub
and
or
in
aas
fwait
ja
xchg
push
or
outsb
inc
loop
push
arpl
aaa
dec
icebp
daa
popa
inc
icebp
xchg
shr
xchg
xchg
cmp
lahf
mov
arpl
add
movsb
in
xchg
dec
aad
dec
fnsave
pop
xchg
loopne
sahf
inc
sbb
fisttps
mov
mov
rclb
mov
lea
sub
in
and
lock
pop
leave
push
mov
jbe
cwtl
movsl
jnp
and
and
insb
push
and
lahf
sti
cmpsl
push
add
pop
out
repz
mov
mov
and
sub
sahf
push
cltd
lret
mov
rcll
pusha
test
outsl
sbb
jecxz
into
cwtl
mov
out
dec
out
mov
test
jns
cmp
mov
add
in
dec
fcomi
xlat
sbbb
scas
cmp
mov
bound
loop
emms
mov
lods
or
add
shll
ret
cld
adc
std
clc
push
pop
jbe
lret
ss
xchg
insl
or
movsb
outsl
add
or
fwait
or
xor
mov
inc
loop
test
enter
cwtl
add
addb
push
mulb
dec
cmpsb
push
subb
push
xorb
add
add
pop
mov
lcall
mov
add
loop
dec
dec
ret
cmp
dec
andl
fnstcw
xor
test
inc
mov
sbb
cmpl
mov
sub
int
fldt
xchg
dec
pusha
int
lret
mulb
mov
cld
jecxz
divb
rorb
cmp
dec
dec
stos
test
adc
jne
lods
mov
push
orb
pop
and
mov
inc
pop
icebp
imul
fbstp
lcall
jg
mov
pop
int3
hlt
mov
out
pop
shr
inc
sbb
rolb
xchg
lea
xlat
shrl
and
iret
jge
cmp
fisttpll
ret
in
clc
mov
jb
hlt
dec
sub
out
cld
jb
pop
repnz
cli
adc
ror
cmc
xor
mov
roll
pop
clc
push
and
jecxz
scas
in
fs
test
push
loope
aad
inc
xor
jecxz
outsb
out
cmp
xor
jl
pop
les
pushf
pop
mov
jp
sti
in
rcr
aad
sarb
in
cmp
sbbb
xchg
lods
inc
bound
dec
or
rorl
shll
cs
push
and
cmpsl
push
mov
mov
mov
test
fists
bound
add
hlt
std
in
notl
sbbb
decb
scas
inc
ss
cmc
mov
loope
idiv
push
sbb
cmpsb
dec
nop
adc
dec
loop
pusha
stc
inc
inc
notl
sahf
push
xchg
push
out
pop
jb
mov
ret
sub
shlb
cs
pop
and
pop
sub
and
inc
adc
data16
rcrl
in
mov
cmp
mov
int
cmpb
cmp
dec
sti
sbb
ljmp
mov
mov
pop
mov
les
lret
adc
push
stos
ljmp
fnstcw
inc
lods
push
push
notb
cld
mov
inc
or
andb
sbb
mov
jbe
push
fidivs
scas
out
fisttpll
shr
in
punpckhdq
movsl
mov
aas
fs
lret
mov
push
or
divb
or
jmp
test
fsts
neg
hlt
inc
or
shll
inc
scas
ret
adc
mov
and
dec
dec
push
std
jle
mov
add
mov
ja
xchg
pop
pop
dec
xor
add
frstor
sahf
mov
stc
sti
jbe
adc
inc
push
notb
movsl
sbb
ret
lcall
sub
cmp
int
icebp
adc
and
mov
xchg
mov
pop
popf
outsl
popf
out
mov
aaa
dec
insl
inc
loopne
fs
mov
daa
test
fistps
mov
xchg
loope
jns
mov
and
jg
call
pop
push
push
mov
mov
cmp
or
cltd
shll
inc
cmp
movb
mov
sbb
movsl
das
xor
das
cmp
movsl
push
jae
mov
js,pt
xor
loope
mov
cltd
rcrw
testl
add
xchg
fsts
xlat
insl
pop
adc
iret
add
out
push
test
bound
or
xor
cwtl
outsl
inc
sbb
shrb
pop
mov
jnp
push
xor
fists
pop
or
mov
dec
xor
push
cmpsb
add
pop
shl
mov
sahf
test
lret
xchg
jnp
add
jmp
mov
bound
lock
fidivrs
rclb
shll
mov
nop
xchg
xchg
clc
sar
xor
ja
rol
push
push
inc
inc
xor
cmp
inc
test
in
ja
and
mov
xchg
sbb
sub
popa
adc
mov
imul
sbb
or
inc
adc
sub
rcll
cmp
push
inc
nop
mov
and
xchg
jle
lods
push
push
mov
xchg
shr
pop
insb
mov
dec
lret
push
fdivs
das
add
test
jp
in
sbb
push
in
push
inc
popf
lea
adc
in
pop
fcomi
push
popf
or
popa
pop
jne
jp
push
fsubrs
pop
test
and
stos
fistps
into
mov
fldln2
sbb
add
sbb
jae
jecxz
cmp
mov
and
aam
int3
sbb
dec
add
mov
or
push
or
insb
faddl
out
sbb
mov
xor
popa
inc
mov
rcr
leave
push
cmp
mov
mov
fldt
pushf
dec
pop
mov
shll
out
mov
jmp
cmp
mov
sub
xor
jmp
add
enter
xchg
notb
mov
push
bound
mov
fisubrs
adc
mov
or
nop
cmpsb
mov
pushf
cwtl
sahf
pop
dec
sbb
divl
sub
jno
pop
dec
test
aad
mov
inc
addb
push
js
xchg
loope
mov
adc
push
cmp
nop
jmp
or
int
add
fwait
pop
das
loop
add
or
stos
loopne
divb
cmp
mov
enter
mov
or
lea
and
insl
sbb
mov
and
movsb
mov
push
test
lods
sarb
cs
xchg
movsl
shrl
mov
mov
pop
xchg
or
xchg
cli
mov
int
or
mov
and
pop
pop
adcb
or
cmp
les
sub
xor
rolb
daa
xchg
lea
dec
push
fwait
hlt
roll
ljmp
test
jnp
xor
in
and
enter
aad
lea
insb
add
dec
pmuludq
jne
lea
inc
shl
aas
sbb
mov
jp
adc
mov
rcrl
xchg
adc
rcrl
inc
cmpsl
outsl
sbb
mov
lahf
mov
and
adc
sbb
push
push
mov
and
dec
mov
and
aam
pop
pop
cmpsb
cwtl
in
xorl
cmp
stc
mov
adc
push
dec
stc
push
sub
notl
sub
add
mov
jnp
bound
adc
cmp
or
out
pop
and
pop
pop
and
pop
lahf
adc
or
mov
adc
sbb
sbb
loop
jb
xchg
jmp
loop
and
mov
adc
mov
scas
jmp
sbb
fcomp
pop
ror
xchg
pop
negb
test
jno
sbb
mov
jno
inc
lret
sub
inc
push
popa
mov
in
subl
xor
cmp
mov
jmp
stc
jmp
aad
sub
ds
cmp
push
pop
insb
xor
inc
cli
pop
mov
sub
cwtl
fnstenv
stos
out
addr16
push
push
lods
movl
jb
lahf
lods
dec
xchg
hlt
mov
mov
sbb
popf
adc
push
cs
push
or
pop
test
ss
in
lock
arpl
mov
dec
push
and
lods
jmp
idiv
push
mov
inc
mov
xor
xlat
movsb
fidivl
fwait
imul
jg
xchg
adc
push
or
or
mull
add
mov
sub
mov
ret
popf
insl
jmp
push
mov
sti
or
mov
cld
pop
cmp
out
mov
mov
icebp
and
add
mov
pop
loop
fisttps
cmp
jl
inc
in
xchg
pop
lea
ljmp
mov
mov
mov
or
adc
fcoms
bound
mov
