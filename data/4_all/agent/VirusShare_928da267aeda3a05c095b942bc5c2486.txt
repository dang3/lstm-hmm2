in
pop
add
pop
add
add
in
pop
add
add
add
add
add
jne
cmp
test
mov
mov
stc
std
mov
inc
pop
lret
xorl
sub
sti
jmp
in
pusha
icebp
dec
mov
jl
add
inc
or
js
adc
cld
mov
icebp
jl
jbe
cmc
mov
cli
stc
fs
cmpsl
test
ja
sbb
dec
adcl
jne
jno
jecxz
pop
adc
sti
addr16
imul
in
jae
pusha
pop
jbe
test
pop
mov
xor
fxch
pop
fucom
fdivr
fidivrl
cltd
sbb
repnz
push
sti
pusha
je
jmp
mov
ret
or
insl
cmp
sbb
cmpsl
das
sub
lret
test
rorl
xchg
enter
add
in
pop
jl
cmp
das
test
loop
test
sub
and
in
pop
in
repnz
xchg
aaa
xchg
icebp
popf
insb
in
jg
sahf
and
imul
sub
xorb
insb
mov
repz
div
arpl
aam
xor
jp
mov
imul
lock
aam
xchg
ja
push
lret
les
enter
lcall
jg
jmp
adc
loope
mov
sbb
pop
inc
test
ljmp
addr16
loope
xchg
shll
mov
shr
push
loope
orl
mov
mov
lds
pusha
and
shll
mov
sub
aas
sub
lcall
or
mov
loopne
sti
in
adcl
nop
mov
sti
adc
jbe
adc
add
shl
inc
jl
in
and
cmp
add
iret
insl
orb
sbbb
adc
daa
nop
lea
pop
inc
cmp
mov
xchg
sbb
sbb
mov
and
pusha
jno
jb
bound
mov
rcll
pop
clc
inc
and
jmp
or
adc
fistpll
adc
mov
shr
cmpsb
or
rorb
mov
jno
mov
mov
loop
repz
inc
fiaddl
aas
mov
mov
adc
icebp
insl
add
jg
je
repnz
inc
add
push
pop
dec
push
pop
pop
mov
lods
sub
cltd
sbb
adc
adc
push
sbb
push
js
mov
aam
clc
icebp
adc
mov
ss
ds
movsl
mov
mov
mov
inc
xorps
sbbb
xor
shrb
mov
mov
jle
add
shrl
ja
popa
aas
add
and
iret
xchg
fstl
adc
fs
sahf
push
mov
mov
cld
dec
jge,pn
push
or
adc
inc
add
pusha
repz
iret
mov
lods
test
add
sub
pop
mov
jl
or
cwtl
ret
repz
xor
leave
inc
jecxz
lock
aaa
fst
in
mov
dec
test
mov
mov
stos
int
sahf
jns
xor
inc
push
jno
gs
int3
sti
adc
dec
add
adc
sbb
sahf
dec
gs
clc
mov
dec
jle
leave
adc
enter
aaa
pop
and
mov
sub
xchg
loopne
dec
xchg
or
hlt
ds
addr16
fadds
xor
sbb
roll
dec
imul
lahf
bnd
es
sbb
fimull
mov
jge
movsb
jne
pusha
addr16
cmp
cmpsb
jnp
sub
dec
xchg
mov
cs
mov
sbb
addr16
into
pusha
pop
out
aad
bound
les
sbb
rcrb
sub
rcr
jo
pop
leave
inc
xchg
xchg
pop
jl
outsb
sbb
dec
cmp
fs
jge
out
sub
inc
pop
jp
mov
les
or
out
jno
outsb
call
mov
mov
sub
jmp
or
fwait
xor
mov
ss
mov
push
pop
adc
mov
or
jb
icebp
nop
lock
xor
adc
das
pop
js
pop
outsb
sarl
and
lret
ljmp
jg
jl
inc
jl
cmp
mov
call
into
mov
popa
in
outsl
cltd
test
cmp
sbb
push
in
out
or
lret
subl
fdivl
lods
add
jmp
dec
cmp
and
sbb
mov
lea
inc
xchg
xor
mov
dec
ss
dec
pop
out
push
add
clc
or
push
sub
into
push
add
out
pop
inc
xor
mov
xor
loop
mov
insb
xchg
adc
xchg
fadds
fadds
mov
rolb
mov
test
xchg
sbb
enter
ja
aad
xchg
icebp
stos
mov
cld
sub
lret
test
push
mov
int
cmp
or
imul
xchg
jg
mov
pop
out
test
cltd
aaa
push
je
dec
daa
and
sbb
mov
icebp
cwtl
add
jb
mov
negl
push
cmpsl
pop
sbb
jnp
sbb
lret
std
cmp
lods
popl
inc
jbe
or
cmp
dec
ja
or
push
call
das
cmpsl
sbb
rcrb
test
cmp
stos
mov
movsb
stos
cmp
dec
mov
ret
rcrl
or
data16
das
xchg
pusha
jo
xchg
pop
addr16
mov
ja
sarb
xchg
and
inc
outsl
adc
cmp
sarb
repz
outsb
or
add
jno
mov
fists
idiv
add
cmpsb
ss
xchg
dec
adc
daa
std
rcrl
aaa
push
inc
clc
fucomip
jl
iret
mov
pusha
jbe
call
inc
dec
push
mov
push
rcrl
add
fidivrl
andb
sub
es
rcr
dec
nop
xchg
cmp
xchg
push
or
inc
xchg
lea
scas
rcrb
sbb
js
jbe
movsl
mov
pusha
dec
sarl
sbb
push
xchg
lds
and
mov
jnp
fidivrs
add
lret
push
sbbb
test
jl
stos
dec
divl
mov
fimull
sub
sahf
adc
push
inc
mov
push
cmp
dec
pop
rorb
mov
in
jge
mov
rorl
rclb
mov
and
fists
jl
jle
pop
repz
mov
in
mov
out
xchg
ret
mulb
jne
cmp
fidivrl
mov
bound
pushf
pushf
ljmp
jns
iret
dec
jne
jmp
mov
ljmp
lahf
mov
xchg
sbb
sti
andb
cmpsl
or
das
in
pop
adc
add
jno
pop
in
or
insl
out
scas
fcomps
pop
pop
pop
cld
mov
inc
xor
dec
jns
and
loopne
pushf
and
jl
pop
or
inc
and
fcmovnb
hlt
negb
aaa
or
mov
iret
mov
scas
or
mov
push
cs
ljmp
push
out
cmpsl
popf
lods
loope
or
mov
push
inc
mulb
in
js
mov
cld
pop
mov
or
jecxz
sub
popa
inc
xchg
cmp
lods
pop
pop
lods
sti
aaa
xor
cld
cld
arpl
inc
ret
divl
rolb
rcrb
xor
loopne
or
xor
cmp
test
push
sarb
lret
sub
arpl
aad
mov
or
jmp
mov
cltd
adc
pop
adc
in
out
jecxz
mov
jmp
mov
je
xchg
enter
cmp
sub
in
pop
jno
inc
loop
jmp
leave
pop
xlat
sbb
pop
xchg
cmp
or
mov
test
jge
sarb
ret
insb
es
jns
mull
adc
lods
pushf
stos
sti
lret
into
mov
mov
or
imul
imul
les
jae
das
cmp
ds
inc
shr
mov
add
pop
mov
testl
mov
or
shrb
cs
loopne
out
in
fs
jnp
test
lret
into
dec
les
adc
outsl
inc
mov
mov
aam
fnstcw
popl
push
cld
adc
in
dec
mov
jp
push
mov
hlt
in
jecxz
push
cltd
push
ret
xor
mov
fsubr
insl
pop
jge
lods
xchg
dec
mov
pop
mov
push
cmp
inc
aad
mov
xchg
sti
adc
cmpsb
mov
add
ss
outsl
xor
add
push
pop
and
sbb
ret
pop
lret
xchg
std
lret
jb
xchg
jb
jle
shlb
fisttps
pop
imul
mov
fs
cmp
daa
movl
mov
jl
loop
adc
jbe
sub
insl
add
aaa
stos
sub
mov
jmp
in
cmc
inc
pop
rcl
fld
stos
outsb
pushf
inc
pushf
shl
pusha
aam
add
lods
mov
insl
lea
or
lcall
xorb
mov
cmc
arpl
std
pop
je
jmp
xor
or
rep
inc
pop
xchg
sub
dec
pop
stos
adc
mov
ror
test
jg
add
mov
and
adc
outsl
cli
out
mov
mov
imul
xchg
cltd
fisubl
loop
jmp
jmp
fidivrl
leave
and
or
dec
jg
std
push
je
pop
inc
jae
pop
xchg
add
pusha
mov
push
pop
aas
mov
or
cld
iret
push
fstl
or
pop
or
test
sub
xchg
scas
rep
sbb
cmp
aaa
dec
sbb
push
lcall
cmp
in
mov
arpl
add
dec
adc
arpl
cwtl
repz
pop
dec
cmp
adc
mov
dec
pusha
out
push
mov
dec
aas
int
out
adc
fs
inc
or
lcall
cmp
lods
push
cmpl
movl
lahf
ss
jmp
inc
inc
add
mov
jnp
loope
iret
pop
fsubrs
push
imul
add
mov
stc
loopne
mov
pop
mov
lret
mov
mov
mov
and
aaa
fldln2
cmp
sahf
shlb
jge
dec
js
mov
lret
insl
or
in
and
addb
dec
xchg
cmp
push
es
mov
cmp
lret
loopne
sub
xchg
pusha
xor
cmp
mov
jne
stos
jecxz
test
and
aaa
arpl
and
aad
pushf
jnp
xchg
mov
mov
cmp
rolb
testl
cmpsl
sub
lea
cwtl
push
pop
test
dec
les
xor
and
dec
lds
test
or
lock
mov
mov
mov
xlat
sbb
push
mov
insl
out
jecxz
xchg
push
push
mov
lods
push
xchg
fsts
cmp
push
or
push
hlt
mov
jbe,pn
lods
mov
popa
ljmp
xchg
rclb
bound
stos
je
sbb
xchg
pop
pop
cmc
out
sbb
pusha
sub
cli
ljmp
les
adc
sbb
or
cmpsb
pusha
pop
xor
jnp
cmp
xchg
scas
int
dec
jne
divb
and
jo
std
xlat
lret
in
std
iret
shrb
xchg
sbb
jae
cmp
cli
inc
xchg
cmp
les
and
es
push
dec
jl
sub
jecxz
fnstsw
mov
or
in
xchg
and
mov
or
fstpl
in
lret
pop
je
jae
xor
loop
lahf
rolb
out
test
pop
shlb
cwtl
cmc
pop
xchg
dec
leave
test
pop
pop
fdivrl
jns
adc
rorl
xor
dec
sti
pop
push
jno
andb
popf
cwtl
cld
lret
js
inc
aas
xchg
ljmp
pop
push
mov
mov
pop
fld
int
aaa
pop
mov
inc
xchg
outsl
cmp
out
mov
scas
ret
xor
mov
leave
push
imul
cld
ret
lea
insb
push
sub
cld
push
and
decb
icebp
jnp
xor
cvtdq2ps
xor
pop
mov
scas
mov
hlt
pop
ss
cmpsl
pusha
jge
add
add
insl
into
cmpsl
in
fsubrs
push
movsb
iret
cmp
adc
or
sub
pop
andl
sub
and
dec
cmp
dec
aad
iret
repz
test
aas
in
fdivrl
aas
jns
stos
cmp
int3
sbb
add
pop
and
insl
loop
int
mov
mov
out
icebp
addb
jmp
shll
sar
jl
jae
jge
pop
movsw
lret
add
in
icebp
or
ficoms
or
push
clc
addr16
sti
adc
mov
sti
insb
pop
mov
daa
repnz
ds
cmp
movsb
test
scas
mov
add
jns
sub
sbb
in
fsubl
xlat
mov
add
cmpsb
adc
cwtl
cmpsl
jo
adc
mov
rorb
call
outsl
push
mov
jg
into
push
dec
jg
ss
mov
ret
pop
mov
aam
in
mov
mov
jb
mov
xlat
push
jno
jl
negb
sub
fbstp
sub
test
stos
dec
sub
scas
mov
outsl
popf
sub
test
rorl
out
add
insb
inc
imul
xchg
scas
rcrl
sub
or
jmp
jae
xor
push
das
mov
dec
cmp
lods
negl
jbe
sbb
fcoml
decl
ret
cmp
dec
mov
inc
and
ficoml
test
data16
ret
mov
out
insl
bound
cmp
lret
cld
or
pop
ljmp
add
or
nop
and
add
and
add
imul
and
xorb
int3
mov
lahf
mov
jb
cmp
add
or
sub
aaa
add
pop
or
xor
adc
mov
adc
cmpsb
fidivrl
add
push
out
sbb
dec
add
outsl
or
adc
jne
pop
dec
mov
or
lock
add
neg
jbe
and
lods
sub
xchg
or
sub
daa
mov
xchg
jp
filds
adc
pop
jno
jmp
push
cwtl
jmp
das
mov
and
cmpsl
jp
sbb
mov
sbb
cmc
imul
ss
shrl
aaa
push
aas
loope
push
xchg
add
adc
sbb
cmpb
mov
sti
jbe
jbe
cmc
rcrb
dec
in
lret
in
cmpsb
mov
dec
jp
shll
xor
mov
test
dec
adc
mov
mov
sub
sub
test
popf
stos
leave
shrb
mov
jecxz
sub
pop
mov
jne
inc
loopne
adc
push
ret
nop
mov
pop
das
jb
daa
mov
lods
cmp
loope
and
pop
push
fiaddl
push
and
dec
mov
fwait
sub
adc
negb
pop
mov
and
sbb
test
call
add
js
cli
andl
lahf
mov
test
jmp
into
mov
enter
mov
and
loopne
xor
mov
xorb
and
cwtl
in
in
iret
sarb
outsl
xchg
adc
scas
sub
mov
xchg
ss
outsl
mov
adc
mulb
pop
leave
movsb
movsb
xor
or
mov
test
mov
ss
sarl
add
push
lods
popa
js
mov
adc
mov
dec
cmp
cmp
mov
push
pop
and
insl
std
xchg
and
test
les
mov
inc
cld
movl
mov
mov
mov
push
xlat
data16
xor
and
add
dec
push
sub
mov
icebp
scas
leave
jp
adc
push
stos
and
push
int3
nop
data16
push
pop
filds
adc
aas
cwtl
roll
outsl
xchg
loop
push
arpl
daa
jecxz
in
or
inc
jl
mov
or
pusha
je
popf
and
xchg
sub
pop
cmp
scas
sti
lahf
pop
lahf
lods
jg
cmp
push
pushf
jmp
fwait
push
inc
mov
adc
cmc
inc
dec
jae
sti
in
mov
or
or
mov
sub
int
movsl
daa
test
pop
inc
push
fcmovne
cmp
cltd
outsl
aad
push
jecxz
es
in
jle
cmp
movsb
sahf
push
sbb
mov
pop
mov
add
pop
add
aaa
popf
outsl
inc
add
mov
push
mov
aam
inc
into
cmpsl
add
dec
outsb
jg
add
cmp
pop
out
push
testb
xor
jle
pop
pop
inc
pop
push
pop
lahf
popa
inc
fisubl
ret
mov
mov
shlb
cmp
or
jp
imul
rcr
sub
aaa
jge
bound
mov
adc
push
mov
sti
call
mov
push
push
sub
cmpsl
lock
xchg
bound
xchg
loope
lods
jl
inc
sub
es
hlt
lahf
cs
or
movsl
mov
sbb
add
or
mov
xchg
decl
jo
jae
fld
push
fcmovnu
mov
jb
scas
lds
cli
lcall
cmpsl
jnp
js
sbbl
cmp
sahf
jnp
aas
ret
frstor
mov
imulb
nop
mov
cmpsl
inc
add
pushf
or
pop
jmp
rorb
int3
outsb
cld
negb
mov
sub
xlat
out
and
jge
mov
rol
popa
and
mov
cmpsl
mov
loop
addr16
mov
pusha
mov
das
ficompl
push
cmp
jle
add
inc
mov
test
ja
imul
stos
pxor
or
cmp
out
add
lods
sbb
pop
xor
test
pop
stc
mov
movsl
xor
pop
es
leave
lahf
adc
xor
jno
sbb
push
mov
jl
dec
add
mov
loop
push
lock
add
or
pop
cwtl
ret
xorl
loop
xlat
div
rcll
mov
mov
cmpb
adc
mov
rorb
push
std
and
jns
mov
push
dec
mov
sub
mov
popf
repnz
fistps
repz
mulb
gs
jmp
mov
hlt
lea
mov
adc
push
xchg
adc
rcrl
nop
cmpsb
lret
inc
and
pop
mov
test
call
or
lea
pop
dec
je
loop
ja
fdivrp
add
stos
mov
mov
repz
add
push
inc
in
inc
pop
adc
cmp
push
pusha
adcb
mov
inc
mov
aad
jb
sbb
add
push
push
mov
nop
jne
outsb
or
std
sub
vpsrad
push
pop
rcll
xchg
lods
adc
testl
pushf
push
das
insb
bnd
xchg
test
jmp
ds
loope
fisttpll
sahf
aaa
add
fbstp
xor
pop
xorb
xor
stos
shl
lock
int3
sbb
lret
push
dec
mov
push
jbe
adc
or
loope
lret
repnz
ljmp
xor
int3
sarb
addr16
in
xchg
bound
imulb
pop
push
sbb
rcl
out
cmp
dec
mov
cmp
sub
data16
xchg
aam
inc
orl
and
lahf
cmp
shr
sbb
sahf
cli
lods
in
mov
jbe
xchg
sub
sbb
jbe
mov
cmc
mov
lret
push
test
insl
sbb
mov
in
mov
or
xlat
ljmp
hlt
xchg
fidivrs
imul
gs
mov
cmp
push
daa
testl
sub
mov
xor
and
inc
jge
adc
dec
iret
cli
cmp
sub
ds
or
cs
add
jo
ret
pop
pop
mov
xchg
jnp
mov
es
leave
mov
faddl
out
mov
inc
mov
aas
adc
sbb
pop
loopne
mov
imul
movsb
inc
outsl
sbb
in
in
fs
sub
bound
loope
xorl
adc
test
pop
jmp
pushf
jns
pop
mov
push
pop
inc
jge
dec
mov
and
jg
xor
adc
mov
popl
and
pop
dec
sbb
addr16
cmpb
in
repz
cltd
imul
jmp
xchg
loope
mov
rclb
mov
xchg
and
or
pop
lds
pop
push
insl
mov
int
mov
and
scas
ljmp
mov
or
pop
jo
lods
or
or
ret
pop
pop
lock
scas
mov
pusha
xchg
sub
push
mov
add
xchg
lret
cwtl
mov
xchg
sub
testb
das
jge
insl
mov
jno
cmp
repnz
pop
test
js
dec
stos
jl
and
lea
push
jge
pop
mov
xor
pop
scas
xchg
sbb
movsl
stc
stos
pushf
ds
inc
loop
fistpll
out
idiv
xchg
pop
jns
cltd
push
or
adc
shll
push
dec
sbb
mov
es
ss
cli
cmp
hlt
add
push
int
inc
adc
sbb
xor
in
sub
jb
dec
sbb
addr16
xchg
pop
ss
mov
lahf
insb
inc
sub
lahf
pop
xlat
xchg
iret
ljmp
push
dec
add
or
dec
mov
push
xor
int3
fldlg2
enter
outsb
xchg
add
mov
in
pop
pop
pop
cmc
scas
add
mov
push
cmovne
cld
lret
lea
ret
xchg
pushf
push
jb
movsb
scas
out
std
push
cmp
xchg
hlt
cmp
mov
test
push
inc
pusha
loopne
lahf
in
jmp
sbb
iret
and
xor
fsubs
mov
lock
pop
call
insl
xchg
mov
xchg
sbb
in
test
clc
and
aas
lcall
mov
or
xor
push
jp
sbb
adc
imul
inc
push
inc
lods
notl
pop
adc
lods
push
inc
mov
cmc
movsl
jbe
mov
jg
fs
push
pop
push
inc
jbe
adc
pop
add
sbb
fidivrs
inc
pop
imul
in
xor
imul
add
aad
cmp
cmp
mov
data16
inc
rcrb
les
push
adc
mov
xchg
aam
adc
mov
outsl
enter
mov
adc
cli
shll
ficoml
je
icebp
inc
sub
out
scas
repz
loopne
fsts
adc
scas
js
add
jle
or
ret
push
pop
jecxz
adc
sbb
addl
loop
in
andb
jns
add
pop
imul
cmpsb
mov
mov
add
mov
mov
xchg
or
xlat
xor
ds
pop
pop
fistps
xor
in
cmp
pop
lret
jo
push
pushf
xchg
xor
dec
pop
faddl
push
fiadds
in
fistl
pop
scas
jnp
push
outsl
inc
arpl
cmc
push
loope
xchg
cmpsb
pop
mov
mov
and
pusha
mov
lcall
pop
popf
scas
rol
cld
or
dec
arpl
les
mov
and
sbb
mov
add
mov
mov
scas
add
std
adc
rol
cmp
mov
imul
adc
loopne
imul
push
fcomps
push
arpl
xchg
push
push
aas
sub
sub
mov
rorl
js
pop
cld
push
inc
iret
add
pop
movsl
aas
xchg
cmpsb
fbld
popa
inc
pop
shrl
jnp
nop
sub
xchg
mov
out
rcrb
lret
and
test
testl
xchg
ficompl
sbb
push
and
fcomps
mov
mov
popf
jmp
adc
xchg
push
push
mov
mov
xchg
xor
adc
dec
out
pop
loope
dec
repz
sbb
cwtl
int
repz
xor
rol
push
jno
mov
mov
dec
loope
pop
push
push
push
je
rcl
dec
sarb
mov
jne
cmp
inc
aaa
xor
negl
or
aas
lods
push
mov
testl
jge
lds
xchg
push
adc
pop
adc
mov
xchg
or
stos
cmp
testb
ret
lahf
cmc
loopne
je
sets
les
mov
jb
xchg
int
adc
mov
add
daa
shlb
les
dec
in
xchg
cmpsb
movsb
int
je
outsl
mov
fisubrl
adc
imul
dec
shll
ja
enter
scas
fildl
fldl
mov
jp
jl
jmp
shll
mov
inc
enter
mov
aad
js
mov
and
xchg
and
stos
add
push
dec
rcr
or
xchg
scas
adc
cmp
into
inc
decl
fsubr
push
mov
jg
sahf
push
jge
mov
pop
and
add
push
imulb
inc
inc
in
adc
pop
dec
or
xchg
mov
or
inc
fs
cmc
or
xchg
or
ss
clc
mov
push
test
adc
clc
rorb
cmpsb
in
mov
int
out
out
mov
stos
repnz
jmp
movsb
mov
mov
mov
stc
out
pop
loop
mov
or
mov
idivb
add
iret
dec
sbb
pop
push
push
mov
cmpsb
sahf
fs
mov
mov
outsl
push
mov
or
jg
mov
fiadds
ja
stos
jae
fdivrs
sub
lods
or
enter
subl
xchg
pop
sbb
xor
ss
sbb
mov
enter
mov
sbb
and
lcall
outsb
data16
xchg
add
or
dec
js
push
add
xchg
or
add
xchg
add
mov
inc
rcrb
adc
test
daa
inc
jmp
repnz
push
nop
lods
flds
sti
jg
push
outsl
test
mov
fldz
int3
divb
aas
mov
fucom
and
pop
or
xchg
pop
lahf
leave
xchg
out
dec
mov
push
call
stos
into
add
cmp
cwtl
or
and
sub
add
xchg
or
rclb
outsl
sahf
mov
sbb
cmp
push
mov
scas
mov
psrlq
sbb
push
fistps
sti
test
dec
sbb
mov
jecxz
mov
out
cmpsb
push
sbb
sbb
or
xchg
push
je
push
or
ss
lcall
lcall
es
pop
pop
dec
jecxz
mov
movsb
cli
dec
gs
inc
enter
repnz
sub
add
inc
out
adc
rolb
aam
xchg
mov
sbb
pusha
in
mov
or
iret
scas
lcall
gs
stos
xchg
push
jbe
outsl
out
sti
xchg
sub
pop
jle
mov
rorl
adc
data16
lcall
mov
enter
faddl
loopne
fdivrl
mov
or
js
jecxz
inc
mov
or
shl
push
adc
sub
inc
pop
cli
pop
mov
mov
inc
into
xchg
mov
loop
pop
ret
repz
leave
push
lcall
and
test
ja
mov
inc
leave
jns
and
cmp
jle
xor
cmp
dec
imul
lret
or
inc
push
aad
fisttps
cltd
sbb
cmp
out
push
xor
iret
das
mov
mov
outsb
out
sarl
lret
bound
mov
int3
jno
push
pop
addr16
xchg
enter
loop
call
stos
xchg
pop
mov
pop
lock
loope
or
mov
sub
cwtl
rcrb
and
cltd
push
loop
inc
xchg
pop
fadds
add
mov
daa
leave
mov
imul
dec
jbe
cwtl
mov
lret
mov
bound
lret
lods
jp
jno
jle
popa
xor
push
mov
rol
bound
push
fsts
or
out
leave
pop
cmp
or
loope
lock
outsb
push
mov
xor
cwtl
data16
sbb
jne
pop
pusha
inc
shl
add
push
pop
mov
xor
inc
rcr
fstpl
pop
and
xorl
xchg
xor
or
fs
hlt
jno
sbb
imul
mov
or
dec
cld
cmp
mov
sub
fiadds
fnstsw
xchg
push
xorl
mov
aaa
mov
jl
xchg
push
mov
push
jmp
add
mov
js
ja
inc
jno
mov
adc
cmpsl
push
adc
gs
loop
rcrb
inc
popa
adc
cmp
xor
sbb
mov
cmp
pusha
xor
icebp
sbbb
shr
jnp
ja
mov
in
inc
lods
add
cltd
push
xor
inc
setle
mov
daa
inc
and
test
bound
mov
pop
mov
sbb
dec
xor
sbb
sbb
lods
lret
xchg
mov
arpl
add
outsb
mov
cld
and
ficompl
jae
jb
adc
fwait
pop
jecxz
fsubr
push
inc
mov
into
rclb
pop
mov
add
mov
in
pop
dec
cmp
cmp
dec
add
popw
pop
xchg
arpl
rcrl
lret
addr16
xchg
jmp
enter
dec
ljmp
push
aaa
testb
pop
jp
pop
add
cli
sbb
cmpsb
in
cwtl
mov
enter
cmp
cpuid
pusha
fistpll
jmp
cmp
dec
fidivrl
scas
movsl
aad
dec
xchg
pusha
arpl
mov
fildl
push
push
outsl
daa
or
jle
or
shlb
aad
cmp
xchg
xchg
mov
mov
inc
mov
out
adc
jbe
mov
mov
adc
xchg
inc
fsin
popf
je
bound
jp
loop
jmp
pop
sub
lcall
test
push
mov
cmpsb
xor
inc
jp
in
xor
mov
push
xchg
lahf
and
pop
add
mov
sahf
jl
push
dec
sub
xchg
imul
cld
es
inc
sahf
das
jle
jns
xor
lods
cmp
aam
loop
pop
lods
rcll
push
mov
jbe
inc
les
jbe
lcall
mov
outsl
loope
xchg
into
inc
imul
xchg
and
cmp
scas
scas
adc
push
aaa
shrb
outsb
push
adc
jnp
mov
inc
or
adc
cmp
pop
mov
ja
mov
test
sub
push
push
leave
fistpll
mov
push
ficomps
ja
mov
popa
cwtl
sub
and
outsl
xor
or
ret
je
and
mov
pop
push
loop
xchg
mov
lods
xor
iret
test
sub
popa
ljmp
lcall
jne
jae
inc
lahf
jne
js
xchg
mov
push
das
or
jl
jae
roll
dec
shl
sub
push
test
xchg
loope
add
cmp
jb
fstl
jecxz
xchg
push
cs
inc
pop
jb
push
ljmp
aas
fildl
fs
sbb
je
pop
xor
jno
mov
sbb
sti
push
and
lahf
cmp
out
mov
mov
fsubr
mov
bound
je
pop
dec
mov
pop
inc
sbb
cmp
push
xlat
outsl
cmp
jbe
imul
dec
pop
cmc
and
pop
sbb
sbb
sbb
iret
je
mov
jecxz
pop
lcall
push
jge
sbb
jb
scas
lcall
cmp
mov
push
push
add
mov
add
sub
add
nop
scas
and
xchg
leave
cmc
mov
xchg
xor
enter
pop
mov
mov
repnz
push
out
lock
mov
loop
or
add
mov
cmp
mov
sbb
nop
pop
jbe
add
jno
sarb
clc
pop
xor
das
fs
xchg
mov
mov
test
adc
ret
ds
jnp
mov
jg
pop
dec
xor
lods
fucom
mov
cmpsb
stos
lret
arpl
hlt
lret
jb
ret
gs
dec
mov
xor
add
ss
mov
add
xchg
icebp
push
test
lret
movsb
pop
inc
cmp
sbb
sub
cltd
xchg
pop
xchg
and
pop
int3
cmp
add
push
cli
xchg
out
in
sahf
fidivl
xlat
mov
lea
mov
dec
sti
push
push
dec
seto
cwtl
mov
inc
jle
cmp
imul
mov
pop
sub
cli
xchg
pop
adc
xchg
mov
rclb
adc
mov
pop
pop
dec
cmp
jp
jmp
jle
call
push
inc
iret
cmp
in
mov
push
mov
inc
push
cmpsl
into
push
pop
add
dec
fst
lds
mov
mov
lods
xor
shll
pop
xchg
pusha
iret
ljmp
insl
cld
xchg
rorl
imul
rolb
outsb
loope
ret
adc
aas
in
inc
adc
fpatan
aad
mov
or
mov
push
in
outsb
add
mov
jg
fiadds
inc
xchg
insb
cli
xchg
in
jmp
xor
fisubrs
mov
int3
adc
inc
and
jp
fwait
sbb
xchg
pusha
push
bound
hlt
and
and
pushf
xchg
mov
sar
jb
cmp
repnz
adc
or
mov
dec
mov
mov
sarb
mov
stc
push
aaa
inc
push
or
xchg
jnp
pop
repz
loope
and
or
jbe
jo
mov
mov
mov
cmp
les
orl
dec
sub
jg
sub
imul
leave
inc
inc
lret
add
es
and
adc
mov
adc
dec
dec
and
ds
fwait
lret
idiv
push
ss
jns
addb
and
rcrb
and
dec
lcall
cli
cmp
push
jmp
push
js
js
in
data16
inc
ret
mov
dec
inc
bound
popf
ljmp
inc
cld
lds
or
repz
lahf
fldl
lret
in
push
and
mov
inc
xchg
ljmp
loopne
iret
std
adc
adc
add
imul
loopne
or
jae
mov
xchg
jno
movsl
mov
pop
jnp
leave
mov
daa
popa
outsb
push
jb
pop
push
pop
cmp
insl
sbb
mov
and
test
inc
lods
dec
notl
inc
std
pop
jl
sub
std
aas
jecxz
dec
cmp
xor
mov
push
adc
sub
cwtl
jb
pusha
mov
jns
sbb
lcall
sbb
aam
push
repnz
pusha
aaa
cmp
mov
and
xchg
cld
call
add
cwtl
aaa
mov
dec
push
mov
cmp
push
and
xor
imul
ljmp
sti
xchg
xor
inc
pop
jo
pop
pop
scas
imul
add
andl
xor
or
int3
fstpl
cltd
sahf
call
lods
adc
ret
adc
pop
jo
loopne
cmpsl
repnz
mov
test
nop
push
int
movsl
dec
pop
pop
mov
enter
mov
inc
push
popl
adc
add
xchg
cmpsl
fucomi
mov
cmp
xchg
sahf
stc
std
xor
leave
xchg
ficompl
inc
mov
data16
ret
imul
pop
rcl
popa
int
aad
repnz
leave
inc
rcll
adc
pop
adcb
rol
aaa
daa
xchg
lods
ljmp
jg
mov
inc
out
xor
sub
int
xchg
add
lods
mov
jp
sbb
pop
sub
ret
jmp
aaa
xor
dec
lds
je
aam
je
jmp
negb
sub
ret
or
add
icebp
xor
icebp
mov
jecxz
xchg
out
push
fildl
push
hlt
ljmp
pop
subl
rclb
aam
movsl
fs
loope
push
mov
push
push
inc
sbb
adc
flds
arpl
fisubs
jbe
aaa
fs
scas
ret
and
mov
lock
sub
aaa
in
mov
mov
xchg
mov
xor
or
mov
push
je
loop
xchg
lods
ljmp
mov
push
add
push
lahf
pop
and
orl
nop
gs
in
in
leave
mov
sbb
sbbl
fdivp
faddl
xor
push
add
push
pop
jmp
leave
and
jge
out
fmuls
or
push
jle
gs
imul
ja
push
pop
or
sbb
imul
addl
jns
fs
and
jns
mov
leave
lock
add
sbb
cltd
mov
jne
xor
pusha
and
inc
pop
aas
mov
push
push
sbb
adc
adc
popa
mov
mov
sbb
push
mov
dec
mov
jg
push
dec
cmpsb
push
cmp
ljmp
cwtl
dec
jge
jb
sbb
je
leave
or
push
add
stos
cld
xchg
add
adc
mov
dec
ss
hlt
jl
mov
push
popf
lcall
adc
movsl
and
mov
mull
cmpsb
sbb
cmp
dec
add
cs
cs
add
jmp
dec
int3
leave
popf
push
fnstenv
in
jne
test
mov
ret
add
inc
lahf
cli
add
mov
fsubrp
cli
xor
repz
mov
and
popf
jbe
or
cmp
mov
nop
incb
imul
xchg
ds
dec
rorl
push
sub
mov
daa
lods
leave
in
jno
repz
cltd
xchg
int
cmp
gs
rcr
mov
push
js
fiaddl
or
rcr
ds
dec
and
mov
pop
scas
arpl
sbb
inc
notb
outsb
sub
repnz
push
push
xor
in
add
xor
mov
call
stc
pusha
addr16
cmpl
add
push
xchg
mov
push
mov
inc
enter
test
jns
mov
sub
ss
movsl
push
sub
cs
test
ja
pushf
jnp
cmp
adc
test
lret
dec
jl
hlt
xlat
test
jbe
add
cltd
push
push
daa
and
xchg
rcll
sbb
xor
or
rol
stos
cld
mov
rcll
sbbl
outsb
pop
pop
push
std
and
xchg
gs
and
xlat
das
insb
std
dec
inc
sbb
xchg
jbe
lock
pop
adc
dec
xor
or
xchg
stos
push
pop
xor
xor
dec
popf
jg
aas
push
add
pop
adc
nopl
jecxz
dec
into
push
scas
movsl
enter
mov
pop
aaa
dec
mov
pop
rcll
enter
decb
jp
mov
in
add
das
in
adc
aas
sbb
jp
sbb
jmp
lea
pop
and
in
sbbb
cmp
pop
cmp
xor
cli
decb
inc
or
out
jo
adc
xchg
sarb
sbb
mov
jbe
xchg
insb
push
fcmovnu
or
inc
and
repz
mov
loop
pop
push
inc
xor
lock
mov
jmp
je
xor
jmp
std
push
dec
scas
roll
dec
leave
add
sbb
push
call
das
push
fcompl
loopne
pusha
leave
jnp
mov
popf
mov
iret
fwait
test
lods
shl
outsb
lods
xchg
pushf
jl
inc
add
xor
mov
inc
push
jb
outsl
push
pushf
jnp
mov
dec
ds
inc
test
xchg
xchg
xor
inc
jne
in
sbb
mov
ret
sbb
orb
pop
loopne
jnp
cmp
test
es
mov
sub
sub
mov
xor
mov
xor
inc
test
out
mov
adc
mov
push
jns
adc
add
xor
push
cmp
jns
adc
iret
jno
mov
xor
mov
scas
sarl
cmpsw
enter
mov
sbbb
sahf
popa
cmp
pop
sahf
ljmp
lahf
cltd
arpl
cmpsl
dec
xchg
jmp
or
lds
lahf
popf
ret
dec
jg
lret
ss
mov
sub
add
in
xor
ret
ja
cli
pusha
pop
scas
xor
adcl
mov
or
mov
enter
shlb
stc
stos
sbb
or
mov
je
rcll
adcb
in
arpl
cmp
std
mov
push
jnp
pop
mov
dec
mov
test
cmp
jg
outsl
movsl
jb
scas
dec
mov
push
pop
xchg
mov
test
push
cmp
jb
dec
scas
in
pushw
bnd
pop
sbb
or
adcl
inc
xchg
sbbb
xchg
scas
dec
in
pop
sub
ja
ss
push
add
xor
jg
movsb
jge
or
push
jno
jg
data16
mov
enter
test
lock
test
fldcw
mov
and
cmpl
add
mov
mov
xlat
mov
jmpw
clc
ret
sbb
cmp
pop
xchg
sbb
inc
pop
testl
pop
sti
xchg
aas
and
and
flds
inc
xchg
and
mov
iret
push
cmp
enter
adc
sbb
push
jb
xor
in
cmpsb
sarb
push
iret
cmp
dec
mov
les
and
decb
fsub
inc
mov
xor
fistl
mov
add
xor
fmull
loop
or
pop
inc
jns
mov
sbb
data16
ljmp
imul
adc
add
and
gs
mov
mov
push
clc
daa
mull
cmp
test
and
cs
pop
lcall
leave
or
shll
imul
xor
sub
pop
in
and
bound
call
cmp
jmp
mov
into
cmovbe
jmp
cmp
mov
adc
lock
imul
loopne
jmp
xlat
inc
out
mov
cmp
mov
scas
rclb
lret
rcrb
test
cld
adc
test
pop
arpl
out
push
sbb
push
add
push
jae
stos
adc
in
push
repnz
jae
sub
rcrl
js
jno
pop
lret
vpcmpeqd
or
cwtl
xor
out
mov
inc
sahf
jns
xchg
push
xor
pop
add
dec
lahf
pop
add
add
fcomps
sub
push
fucomip
addl
mov
popa
fidivrl
inc
mov
cmpsb
cld
xchg
icebp
inc
push
cs
cmp
pop
cmp
jae
xchg
repnz
dec
cmp
cmp
push
das
dec
fcomps
inc
adc
movntq
or
out
cmpsb
lock
loope
and
add
mov
cmc
inc
push
inc
mov
inc
popa
xchg
sahf
test
add
dec
xchg
mov
mov
pop
pushf
push
pop
ljmp
ss
fmull
popf
into
jl
add
fwait
adc
dec
mull
jp
sub
jb
pop
pop
sub
push
fs
xchg
add
push
mov
sbb
jb
push
mov
push
lock
lret
lret
test
outsl
cmp
inc
add
lods
push
add
adc
in
and
ret
ret
sub
data16
or
cmpl
imul
xor
roll
or
stos
sbb
jne
out
dec
adc
imul
adc
or
shrb
jp
aaa
jne
lea
mov
xchg
int
fnclex
mov
bnd
mov
ret
sahf
mulb
pop
arpl
push
outsl
mov
cmp
nop
call
ret
and
inc
push
aaa
mov
jecxz
les
pop
stos
push
mov
fmull
push
aad
xor
or
loope
stc
sub
mov
jge
pop
cli
xchg
mov
jmp
or
push
insb
loope
ds
adcb
int
in
test
not
cmp
aad
popa
xchg
dec
mov
jne
popf
mov
xchg
ss
adc
jecxz
mov
mov
lret
and
xor
addl
mov
jmp
pop
pop
jg
mull
adc
test
daa
mov
push
mov
jo
test
cs
rcl
lcall
add
sub
cmpsb
lcall
icebp
xchg
pusha
pop
push
mov
pop
xor
adc
sub
int3
cltd
mov
lahf
push
les
clc
inc
mov
mov
sub
dec
mov
lods
das
add
jp
pushf
repz
jg
add
cmp
pop
orb
cmc
rclb
add
mov
test
shr
mov
push
xor
push
test
sbb
sub
xchg
push
daa
dec
cld
mov
inc
insl
arpl
aaa
jnp
cmp
daa
mov
stc
lods
sub
shrl
sub
stos
clc
stc
pop
or
pop
movsl
dec
dec
mov
int
inc
dec
jge
out
pop
movsl
rolb
mov
cltd
or
pop
adc
mov
dec
sbb
and
dec
movl
jne
jno
outsl
sbb
push
stos
out
js
cmp
sub
and
adc
and
andl
xchg
mov
adc
js
insb
outsl
test
aad
pop
dec
movsl
je
and
pop
enter
in
fwait
inc
mov
sub
push
pop
out
inc
iret
lcall
and
mov
shr
icebp
gs
cmp
es
dec
mov
movsb
cmp
addl
jno
push
mov
inc
push
adc
rcrb
mov
insl
dec
cmp
pop
inc
mov
xor
pop
rorb
cmpsb
and
push
or
xchg
mov
jo
xchg
aas
jle
xor
in
sbb
repnz
xchg
mov
push
or
popf
test
mov
imull
stos
push
adc
mov
es
stc
das
adc
rolb
jae
xchg
sarb
inc
movsl
loopne
push
or
movd
daa
jge
sub
or
jle
and
outsb
nop
lret
push
mov
and
nop
sbb
jl
inc
out
std
mov
jg
jne
xor
insb
xchg
cltd
and
mov
and
add
push
xchg
or
aaa
push
in
or
out
std
rcll
or
movsl
lahf
jecxz
push
adc
sarb
out
pusha
scas
stc
push
aam
mov
mov
push
cmpsb
fdiv
adc
arpl
add
fs
lret
jnp
jmp
outsb
jnp
into
cmp
sbb
mov
pop
add
push
lods
add
sbb
repz
sbb
aas
in
cli
push
icebp
sbb
xchg
cmpsl
add
jne
adc
mov
pop
and
sub
fs
cmpl
pusha
pushf
ficoml
test
adcb
leave
nop
test
ds
push
mov
outsl
xchg
pop
pop
stos
jl
sub
lcall
fstpt
mov
mov
sbb
cmp
stc
rorb
stos
xor
sub
pop
jo
lea
in
loop
mov
xlat
cs
jge
into
or
push
cmc
cmp
mov
arpl
iret
mov
jecxz
cmpsl
fwait
es
sub
in
mov
aas
mov
sbb
movsb
fmul
push
cmp
mov
xchg
add
or
aam
xlat
or
data16
jecxz
lock
and
stos
movsl
inc
pop
sub
push
insb
hlt
inc
sbb
or
dec
mov
out
nop
mov
imul
adc
scas
lds
aad
push
jnp
cmp
xorb
sub
pop
cmp
pminub
and
out
and
enter
push
insb
dec
int3
pop
sub
xor
xor
addl
shl
mov
enter
cmp
mov
xor
std
mov
pop
jae
movsl
hlt
xchg
je
cmp
cmp
inc
das
mov
scas
mov
add
push
shll
loop
data16
or
mov
aas
test
scas
cmp
test
insl
andl
fldcw
pop
mov
dec
adc
mov
xor
test
fidivrl
mov
popf
push
cmp
xchg
or
adc
push
push
sbb
iret
aam
sbb
inc
add
fsubl
iret
mov
push
mov
out
jae
loopne,pn
ret
leave
xchg
lret
adc
lret
add
mov
in
call
adcl
xchg
rorb
pop
popa
sbb
add
cli
outsb
mov
xor
out
lods
mov
jb
mov
mov
adc
xchg
adc
ljmp
mov
fucomp
or
aas
popa
ret
jns
int3
cmpsl
repz
or
pushf
movsb
mov
movsl
std
jae
mov
and
cld
shll
push
add
call
jl
sbb
pushf
jecxz
mov
ret
add
cmp
stos
and
cmp
fldenv
adc
jns
mov
xor
jecxz
stc
arpl
jbe
aas
push
push
push
js
test
or
outsl
and
push
fnsave
push
ja
enter
mov
dec
mov
adc
xchg
pop
ficomps
sbb
and
aas
adc
aad
fwait
testb
mov
or
aaa
sbb
icebp
aaa
fdivs
bound
cmovge
enter
mov
pop
sbb
xor
fcomps
aam
and
fisubrl
ljmp
clc
flds
ljmp
loopne
sbb
data16
rolb
mov
sub
fnstenv
bound
dec
mov
loope
andl
cmp
sar
mov
sub
pop
cmpsl
mov
xor
push
das
insl
dec
sub
pop
das
pop
push
inc
add
lahf
push
push
xor
test
jecxz
nop
pop
js
xchg
js
mov
pcmpeqw
add
lret
int
popa
insb
sub
dec
addl
sbb
iret
pushf
mov
fs
jle
dec
lret
xchg
push
inc
mov
jp
icebp
mov
cld
mov
int3
dec
and
stc
mov
lods
je
jae
jno
cmp
and
mov
movsb
inc
psubusb
inc
push
lret
popf
mov
lahf
test
imul
add
inc
inc
das
mov
lea
test
pop
shl
rcll
scas
outsb
xor
mov
pushf
imul
insb
test
out
insb
int3
idivl
gs
clc
std
and
mov
mov
les
jg
std
lea
sbb
pop
or
pop
jge
sub
ret
sahf
leave
cmp
inc
je
das
lea
sub
shrb
add
dec
xor
mov
cwtl
enter
notl
lret
xchg
std
jp
or
stos
rclb
arpl
cmp
insb
xchg
inc
rep
aas
mov
aam
push
cwtl
fsubl
xchg
push
adc
movsb
in
mulb
dec
loop
xlat
xorb
push
or
push
lods
inc
xor
lea
ljmp
cld
test
cmp
enter
push
out
mov
xchg
or
rep
mov
clc
int
add
pop
xchg
inc
adcb
popa
mov
test
vcmpss
pop
nop
mov
mov
sub
ljmp
and
push
cmp
xchg
lea
daa
imul
add
mov
jle
das
cs
gs
sub
lods
or
and
pop
in
xchg
cmpsl
into
mov
adc
aad
jmp
dec
rorb
jno
jae
stos
pop
lret
sub
mov
loopne
adc
into
inc
out
nop
xor
or
fstpt
mov
pop
inc
inc
mov
ss
fldcw
cmp
cwtl
dec
pop
mov
jle
imul
stos
ljmp
sbb
sbb
movsl
mov
mov
fs
sbb
data16
inc
faddp
xchg
outsb
mov
repz
into
mov
and
jmp
scas
push
jle
mov
aaa
mov
subl
int
add
mov
shll
loope
aam
out
dec
sbb
sbb
pop
stc
push
testb
stos
push
cltd
mov
xchg
adc
jb
pop
imull
jge
sbb
jge
adc
insb
inc
fwait
rcrb
sub
out
adc
or
xchg
scas
or
inc
inc
out
xchg
into
xchg
or
mov
pop
leave
data16
jg
nop
fwait
mov
rcrl
sub
loop
inc
dec
mov
test
adc
lret
add
aam
les
mov
xchg
jns
hlt
shrl
cmpsb
mov
ja
cmpsb
and
pusha
in
cli
dec
pop
test
adcl
cltd
dec
fstl
inc
jge
push
dec
clc
pushf
popf
pushf
add
jge
pop
out
inc
inc
mov
mov
mov
mov
arpl
leave
nop
jns
sbb
sub
xchg
aam
and
inc
jbe
sarb
cs
fs
cmp
push
nop
js
xchg
movsl
cmpsb
stc
popf
aas
xchg
mov
mov
xor
icebp
mov
pop
jo
fistps
mov
fdivl
pop
pop
into
sub
outsb
fcmovnbe
jb
or
call
test
inc
shrb
push
xorb
inc
arpl
mov
mov
jbe
cmpsl
in
push
aas
adc
xchg
inc
pop
mov
mov
aaa
mov
push
stos
push
ja
inc
stos
loop
push
gs
mov
icebp
fadds
cmpsb
adc
jnp
roll
mov
push
fldz
cmpb
je
jbe
sti
mov
xor
push
mov
xchg
sub
pop
push
aad
cltd
clc
lea
dec
outsb
xlat
xchg
subl
dec
xchg
aas
adc
jle
imul
pop
pop
mov
jae
sub
lock
mov
or
inc
and
add
shl
jmp
lods
pusha
sbb
js
fadd
adc
xchg
lahf
sbb
in
cmp
jnp
aaa
push
xor
pop
shlb
scas
jbe
mov
xor
sbb
add
sti
pop
lock
sbb
cmpl
add
test
pop
mov
mov
inc
insl
aas
push
inc
add
pop
lock
lcall
lock
shlb
mov
sti
pop
shlb
out
pop
movsb
stos
inc
jle
mov
sub
movsl
or
sbb
and
adc
xor
xchg
xchg
xor
out
cmpsb
cmp
jb
test
jg
dec
mov
lret
fnsave
into
fxtract
mov
ljmp
sbb
cmp
mov
add
mov
mov
nop
xor
xchg
or
stos
pop
mov
mov
jne
jbe
shrb
imul
push
jp
aas
cmpb
ljmp
mov
inc
test
dec
int
shr
inc
loop
rclb
imul
inc
xchg
sbb
cmp
push
fs
hlt
lock
notl
sar
xchg
aas
add
xchg
roll
in
and
imul
cli
outsl
fdivrs
out
mov
test
and
xor
mov
xor
clc
outsb
push
push
dec
add
shll
add
int3
dec
jg
out
loope
inc
jg
mov
mov
cltd
iret
adcb
pop
jns
popa
rcr
iret
fwait
lock
add
hlt
xor
outsl
lods
aad
cmpsl
cltd
fndisi(8087
sub
adc
stc
xchg
mov
sub
test
pop
bound
lret
sbb
rcll
cmp
cs
test
cmc
ljmp
sub
push
in
in
mov
mov
sbb
dec
mov
xor
loop
push
aas
psubsw
ljmp
lods
ljmp
movsb
std
adc
mov
mov
dec
test
ss
lea
std
xchg
imul
lcall
xor
fimull
push
xor
scas
mov
addr16
lds
xor
in
jmp
fldl
mov
jns
sbb
pop
daa
lret
mov
ret
inc
pop
out
pop
cmp
js
shlb
sub
sbb
jb
mov
jg
imul
xchg
mov
add
enter
sub
insl
jns
or
cwtl
dec
mov
mov
psubd
lea
gs
or
mov
mov
scas
aam
push
stos
cmpsb
aad
cmc
scas
push
xchg
shlb
inc
cmp
sub
int3
test
repnz
scas
jp
pop
pop
fxtract
jbe
xor
ljmp
jp
addr16
mov
pop
cmpsb
dec
stos
int3
stos
cmp
mov
int3
push
iret
add
jb
cmp
popa
cwtl
fbld
pop
inc
pop
dec
xchg
sbb
imul
pusha
out
les
and
xchg
sbbl
xor
shrb
xor
jno
xor
cwtl
aam
lds
cmp
sti
bound
push
imul
aam
cmp
adc
push
test
push
mov
movsb
cmp
xchg
subl
mov
push
xor
jle
sub
inc
aam
mov
loope
mov
push
push
cmp
or
out
or
bsf
out
popf
jnp
jns
sbb
cli
adc
pop
mov
pop
adc
jcxz
xlat
pop
decl
jmp
mov
xlat
les
or
sub
jp
scas
mov
out
cli
jge
mov
add
jbe
and
mov
test
add
test
jno
jae
mov
adc
sbb
sbb
sbb
xor
sub
xor
andb
jp
loop
add
dec
ljmp
xchg
pusha
into
sub
int3
cwtl
test
jl
leave
cwtl
add
pop
mov
in
pop
js
leave
mov
mov
pop
mov
leave
fiaddl
imul
and
sub
pushf
push
icebp
adc
fmuls
mov
jnp
and
adc
aam
js
shrl
fbstp
ja
insb
mov
gs
jno
jecxz
stc
sbb
lcall
into
repz
ds
inc
stos
dec
xchg
and
push
sbb
iret
dec
enter
xor
mov
mov
inc
add
cmp
jb
nop
mov
call
pop
ficoms
call
aaa
js
mov
or
sbb
clc
push
lcall
addb
mov
mov
cs
push
sub
enter
pop
test
mov
int3
loopne
add
rclb
movsl
xchg
pop
cmp
add
rclb
aad
sub
jne
jge
inc
mov
pop
out
push
cld
add
pop
jp
insl
jno
mov
jle
push
mov
push
add
ljmp
mov
iret
inc
xchg
lds
out
stos
dec
loope
add
data16
cmc
mov
mov
xor
inc
xchg
xor
mov
cmpsb
cmpsb
xor
ret
and
inc
jne
dec
pop
pop
push
scas
or
inc
shlb
xchg
shlb
in
nop
xor
push
xchg
icebp
or
inc
imul
xlat
jl
mov
mov
mov
xchg
push
xor
jne
js
lock
cmc
pop
cmp
das
sahf
jo
adc
xchg
inc
jnp
sbbb
cltd
std
mov
mov
xor
add
std
cmp
cwtl
dec
daa
sub
sahf
jo
shll
roll
and
repz
addr16
sti
jl
pop
mov
mov
stos
pop
addr16
sub
sti
and
pop
shl
or
insl
fdivrp
and
push
out
aas
mov
pop
jge
and
outsl
frstor
or
bound
and
inc
cmpsb
mov
push
jbe
stc
or
mov
sbb
pop
push
shll
cmc
es
fisttpll
sub
shll
pop
scas
fsub
stos
push
pop
rol
loop
mov
or
fimuls
mov
test
out
clc
shlb
or
loop
loopne
movsb
push
pop
xor
in
popa
dec
lods
pop
mov
xor
mov
pop
sub
sarb
shlb
mov
jg
inc
push
mov
cs
stos
cmp
xor
test
or
cmp
mov
jg
imul
imull
inc
add
inc
sub
adc
push
xor
cmp
mov
rcr
cmp
testb
mov
out
dec
xchg
ja
das
cmp
loop
lods
inc
add
xor
aas
xchg
cmp
add
mov
aaa
vpsrlw
and
imul
sub
pop
mov
adc
cltd
jbe
mov
outsl
jb
mov
dec
lret
das
xor
lea
fisubrl
lods
push
pop
shlb
push
sub
jbe
shll
aam
inc
xchg
xor
jae
mov
std
fimuls
inc
nop
int3
imul
adc
fnstcw
jecxz
in
xor
test
xchg
leave
sub
cltd
add
lea
test
mov
in
xchg
iret
mov
popf
pop
ljmp
shll
lret
test
xor
imul
mov
cmp
mov
sbb
xchg
cmp
clc
js
loope
out
out
mov
in
dec
sbb
jp
stc
icebp
add
outsb
lret
test
pushf
sbb
and
xor
mov
std
test
movsl
push
clc
mov
loope
push
xor
ret
dec
popf
lock
dec
pop
or
repnz
cmp
stos
iret
mov
xchg
movzwl
in
adc
movsb
dec
fidivrs
push
inc
aas
fcmovnu
out
dec
pop
cmp
dec
lock
or
cmp
inc
sbb
icebp
dec
out
repz
outsw
mov
ror
cltd
mov
call
je
mov
negb
dec
mov
pop
pop
movsb
push
in
pop
test
into
rcl
mov
cmp
jae
or
out
idiv
nop
fmuls
jle
adc
inc
and
test
jp
and
dec
mov
lret
mov
rol
push
push
jne
out
in
mov
xor
sarb
repnz
sbb
imul
lahf
imul
push
outsl
mov
sub
sbb
or
int
pmulhuw
adc
shlb
dec
fbstp
into
std
jp
fldcw
cmp
cwtl
ror
cmp
and
jnp
dec
outsb
mov
mov
adc
loop
repz
pop
lods
fucomip
es
addl
arpl
mov
rolb
fst
lock
adc
sahf
test
jmp
mov
ds
jecxz
mov
and
jg
out
icebp
fwait
jo
sub
incb
jns
mov
dec
daa
sahf
jno
orl
pushf
cmp
inc
rol
stos
jp
dec
test
out
pop
leave
jge
mov
inc
fbld
cmp
jne
aas
ret
jno
fisubs
sbbb
push
cmp
add
xchg
adc
mov
cmp
jg
add
xchg
xor
xchg
add
lahf
cmp
push
push
lds
xchg
mov
xchg
bound
adc
iret
xchg
cltd
mov
popfw
in
rcrb
aam
push
sbb
xor
les
das
jbe
sbb
dec
sbb
jmp
iret
and
xchg
ss
mov
inc
mov
push
fldenv
inc
shl
in
cmp
outsb
mov
xor
rep
fwait
cld
test
lods
outsl
push
lds
arpl
shll
aam
aas
xchg
adcl
sub
vmovups
sahf
sbb
pop
lds
lods
out
sbb
test
push
dec
xor
pop
push
mov
dec
inc
aas
popa
test
ret
loope
mov
mov
add
xor
cmp
cmp
leave
add
sbb
test
je
cs
pop
adc
lds
and
lahf
movsl
pop
aas
and
xchg
push
insb
xchg
adc
jmp
sbb
add
aaa
aam
lds
dec
ret
jns
fsubs
cmp
fldl
mov
inc
aaa
fcmovu
aas
jnp
adc
data16
addr16
pop
dec
cli
les
in
es
or
cmp
or
inc
jnp
adc
or
cmp
mov
enter
sbb
jp
popa
or
or
xor
cmp
mov
aas
loope
sbb
test
jo
aad
mov
int3
cmp
xchg
jp
jno
rcll
push
movsl
mov
push
cs
adc
jae
add
bound
sbb
je
in
movsb
fcoms
jno
dec
push
and
mov
dec
cmp
dec
iret
jo
xchg
addl
dec
in
pop
and
pushf
lods
or
das
pop
mov
les
sub
inc
in
dec
mov
scas
or
mov
frstor
enter
cltd
mov
lods
or
pop
out
insb
jb
pusha
jmp
test
or
cmp
mov
and
jo
cmp
scas
imul
xor
pop
ror
dec
mov
and
fisubrs
dec
jp
orb
jno
mov
out
push
push
inc
sbb
cwtl
sbb
adc
in
add
es
mov
sub
xchg
test
sbb
enter
mov
hlt
sbb
rolb
or
pop
fisubrl
lret
push
iret
mov
dec
ja
fstpt
sti
out
push
lds
add
gs
dec
hlt
lret
pop
push
mov
mov
popf
fdivrp
sbbl
lods
xor
sbb
leave
jmp
outsl
sub
mov
dec
mov
add
cltd
mov
pop
cmp
adc
adc
mov
daa
sbb
cmp
aaa
mov
cmp
cwtl
icebp
das
or
mov
and
rorl
cli
lahf
sbbb
inc
adc
in
test
mov
iret
adc
jbe
and
push
mov
mov
fiaddl
es
bound
or
adc
adc
mov
movsb
mov
stc
out
jl
loop
mov
mov
mov
push
stc
loopne
sub
push
outsl
aam
fs
outsb
mov
or
stos
push
lret
jp
mov
test
cmp
push
lods
fbld
testb
ljmp
repnz
dec
addr16
rolb
push
mov
fsubrl
sar
cmp
mov
in
and
movsl
xor
lcall
push
jb
aam
pop
and
pop
sub
lahf
mov
int
mov
mov
les
pop
add
dec
push
divb
mov
add
push
or
test
push
pop
popf
pop
fucomip
sub
cwtl
lods
mov
jle
adc
jnp
mov
sub
outsl
mov
dec
nop
jge
cwtl
fdiv
inc
cmp
jecxz
push
ret
outsb
stos
mov
stc
inc
push
pop
insl
mov
adc
cwtl
sbb
cwtl
sar
push
cmpsl
lods
inc
out
adc
and
ljmp
push
mov
outsb
adc
add
pop
push
mov
sub
jl
in
ljmp
fcompl
lods
arpl
dec
mov
mov
test
pop
rcrb
push
jbe
push
pop
pop
data16
arpl
or
mov
mov
mov
data16
xor
aas
xor
enter
adc
mov
fistps
sub
dec
pop
out
and
lret
mov
decl
sbb
mov
test
sarl
pop
mov
addr16
cli
add
fdiv
shlb
lret
pusha
test
mov
xor
xlat
fcomi
dec
cmp
shl
popf
jb
sbb
and
test
mov
sub
sub
sbb
lret
fcomip
dec
ja
test
push
shll
jecxz
jg
sbb
sub
jno
lods
adc
arpl
aad
fidivrs
jnp
incb
out
dec
xor
les
or
sbb
sahf
jg
mov
stos
mov
pop
stos
push
mov
clc
pop
int
or
inc
shlb
pusha
ret
jp
inc
sub
pop
rcrl
sbb
xor
add
adc
fnop
ss
scas
scas
inc
fisttpl
mov
loope
inc
xchg
das
mov
leave
fsubs
inc
xor
sub
fisttps
pop
repnz
mov
xor
xor
test
std
pushf
in
sub
imul
in
rolb
daa
mov
cmp
leave
out
mov
fdivr
pop
es
repz
sbb
enter
std
lock
lods
in
sub
iret
jle
hlt
pop
dec
sub
sbb
mov
push
mov
mov
std
mov
inc
push
inc
mov
cmp
loop
stos
addr16
jmp
add
testb
push
js
clc
movsb
fsts
lods
mov
sbb
sbb
add
adc
inc
cwtl
pushf
addr16
jns
pop
mov
test
cltd
aas
pusha
nop
ret
jmp
fimuls
adc
mov
mov
flds
stc
pusha
imul
in
addl
and
and
ljmp
jp
mov
stc
jnp
in
add
cmpb
jo
mov
mov
xor
pop
push
or
addr16
or
xlat
popf
pop
in
ret
cmpl
mov
imul
xor
pop
shlb
sarl
or
roll
lea
lret
icebp
andb
stos
xor
lods
and
cmp
cmpb
in
mov
je
dec
dec
cli
xchg
aaa
and
stos
inc
mov
orb
andl
shlb
loopne
add
pop
cmp
mov
mov
push
add
lock
stos
push
divl
scas
push
leave
in
jne
xor
cmpsl
in
shrl
lods
inc
mov
pushf
adc
mov
sar
xor
sub
inc
ret
outsb
outsb
push
add
jecxz
jle
cmp
jnp
mov
sub
pop
and
ret
mov
out
sbb
inc
or
mov
mov
jg
mov
pushf
push
out
xorl
xchg
flds
adc
inc
dec
sub
cmp
add
bound
sub
enter
sub
mov
lcall
cmpsl
mov
xchg
push
sbb
dec
popa
adcl
fcoms
jno
push
mov
notl
mov
pop
push
stos
stos
xlat
imul
dec
popa
adc
ja
addr16
hlt
and
mov
es
daa
xor
lcall
push
bound
out
push
jno
fcmovne
popa
push
push
xchg
pop
push
out
sub
push
push
fwait
lcall
sbb
aaa
mov
adc
je
mov
jecxz
stos
cmp
js
mov
xor
repz
dec
push
insb
data16
mov
ljmp
insb
outsl
iret
cli
xor
sti
adc
xchg
out
imulb
add
pop
lods
dec
loope
cmp
dec
mov
dec
dec
add
movsl
shr
inc
mov
mov
cmpsb
mov
imull
sub
sub
inc
mov
mov
test
ret
jl
mov
xor
xchg
test
cmp
cmp
fisubrl
xchg
cltd
mov
mov
mov
stos
push
or
shrl
and
xor
xor
scas
fldenv
pop
push
adc
lret
iret
jp
out
lcall
and
cld
leave
in
loop
dec
jns
xor
mov
ja
sub
jmp
adc
subl
cmpsl
mov
lret
sarl
or
es
xlat
xchg
aaa
mov
jb
popa
das
int
int3
push
jb
cmpsl
aaa
insb
lcall
incb
lods
dec
push
insb
xor
xchg
cmpsb
lret
adc
testb
movsb
sub
mov
mov
sbb
lret
loop
or
out
add
xor
shrb
and
test
ret
jle
jg
test
inc
data16
into
jp
loopne
xchg
test
jnp
inc
xlat
adc
sub
add
pop
mov
add
pop
mov
push
cli
pop
jnp
xor
scas
clc
pushf
out
fstps
aaa
shrl
mov
les
and
mov
sub
mov
lock
inc
or
loop
mov
cmp
and
das
out
pop
xchg
repnz
sbb
push
or
push
mov
pusha
sub
and
pop
sbb
nop
cmp
sbb
adc
aam
lods
std
cmpsb
into
cmp
hlt
iret
jno
add
insb
pop
cmp
cmp
push
lret
out
roll
pop
pop
icebp
out
shrd
pop
cmp
mov
shlb
pop
cld
in
dec
int
pop
sub
push
or
loopne
jp
out
inc
add
mov
push
pop
add
and
int3
fs
ret
lock
fcmovu
fldt
aas
inc
jo
xchg
sub
cmpsl
pusha
ja
xchg
inc
fldl
cli
mov
xor
add
jge
jnp
into
mov
jnp
inc
out
pop
pop
xor
je
sub
adc
sub
rorb
cmp
popf
daa
jmp
bound
psrld
cmpsl
mov
fs
iret
movsl
jno
testb
clc
popf
or
lcall
xchg
mov
imul
into
es
aam
mov
ret
test
inc
fidivrl
and
or
hlt
mov
xchg
test
mov
dec
test
mov
dec
push
cmp
and
pop
mov
mov
push
div
pop
popf
imul
sub
adc
loopne
cmp
push
loope
in
sbb
insb
add
mov
int
cmp
bound
push
and
jo
enter
rcrl
sbb
jge
mov
push
pop
push
adc
cwtl
pop
mov
shll
test
pop
loope
jns
inc
adc
mov
sbb
out
jae
imul
cwtl
pop
mov
int3
sub
sahf
add
clc
add
fidivs
loopne
cmc
or
lahf
push
in
imul
xor
and
pop
ss
clc
orl
test
daa
je
sbb
pushf
lret
inc
iret
pop
push
psubw
mov
fisubs
cltd
push
sbbl
loope
scas
add
mov
mov
pop
jecxz
jae
and
out
xchg
mov
leave
sub
cs
fcompl
out
mov
cwtl
xchg
in
mov
data16
or
push
fmull
imul
clc
pop
sti
test
xchg
ss
lock
push
push
ret
sub
mov
pop
lock
adc
cs
mov
push
fsincos
dec
lahf
test
lret
cmpb
in
sar
inc
lea
jecxz
xchg
xchg
aas
int3
out
mov
mov
inc
stos
inc
call
adc
xchg
adc
inc
icebp
inc
or
jge
stc
adc
repnz
cmpsb
movsl
js
lods
and
dec
lds
sub
mov
lea
jae
xchg
popa
iret
leave
fildll
and
scas
addr16
int3
mov
xor
sub
pop
push
inc
ljmp
mov
add
cld
cmp
js
cmpl
std
cmpsb
loop
mov
lds
jge
rcrl
mov
cmp
lock
test
pushf
xchg
xor
or
sbb
cs
lahf
sub
and
and
cmp
jg
xchg
xchg
jbe
adc
rcrb
out
mov
sbb
xchg
lahf
stc
shrl
daa
mov
insl
in
jbe
sub
aam
sub
jge
fs
push
inc
mov
jbe
jl
mov
jp
jnp
dec
jb
mov
lock
push
in
adc
hlt
mov
inc
cwtl
scas
pop
or
imul
shlb
inc
fadd
repz
and
popf
jb,pn
lcall
sbb
ret
fisubl
push
shr
jae
push
imulb
popf
xabort
aaa
lods
xor
inc
popf
mov
in
adc
push
lods
jle
imul
fcmovnbe
xchg
outsl
inc
sti
jg
hlt
das
cmc
cmp
int3
and
in
sbb
xchg
call
outsb
pop
xchg
mov
ret
enter
lods
pop
shlb
xchg
ljmp
or
shll
pop
ret
outsb
sbb
loop
fcoml
andb
add
cmp
push
cmc
jp
and
jns
loope
jbe
cmp
dec
mov
mov
leave
roll
rol
mov
jg
jb
adc
mov
insl
mov
xor
xor
cmp
inc
lcall
outsb
mov
sti
in
xor
adc
xor
out
mov
add
lods
pushf
add
lods
sub
enter
push
xor
out
pop
stc
outsb
dec
ljmp
test
and
cmp
call
test
lcall
sub
loop
mov
jge
cld
pop
aaa
cmpsb
mov
imul
push
dec
sub
dec
xor
sub
xchg
push
cs
imul
mov
dec
jb
or
adc
dec
sbb
or
enter
sbb
lret
bound
jp
lods
icebp
ss
cmc
inc
in
rorb
mov
lcall
cltd
iret
adc
fmuls
in
mov
cmpsb
ljmp
popl
int
push
call
fstps
fistps
inc
js
cmp
ja
ret
push
fs
cs
mov
xor
loopne
ljmp
inc
pop
xchg
lcall
js
adc
inc
dec
arpl
sub
out
push
popa
mov
imull
cmp
push
dec
cmpsb
jmp
fs
inc
outsl
inc
lods
inc
mov
cmpb
cmpsb
jmp
std
aaa
lock
mov
and
and
mov
ja
ror
shrb
lods
and
cmpsl
das
dec
cmpsl
jg
mov
imul
fiadds
aad
inc
shlb
sbb
sbb
dec
xchg
jg
push
ret
sti
outsb
sti
out
and
xor
cmp
fildl
sbb
insb
push
xchg
ljmp
sbb
test
dec
inc
push
in
mov
ja
sub
cmp
loope
icebp
inc
pop
lahf
in
fidivrl
xchg
and
gs
scas
pushf
cmp
arpl
bt
xlat
xchg
loop
cmp
cmpb
popa
inc
test
sti
clc
add
ficompl
or
mov
cmp
int3
into
test
imul
pop
mov
mov
cmp
xchg
popf
and
imul
incb
stos
icebp
jb
add
in
dec
jecxz
mov
daa
pop
in
lock
xchg
js
mov
adc
out
dec
imul
mov
xchg
lret
xor
aaa
xor
and
mov
add
inc
jo
mov
jmp
fs
imul
stos
popf
cmp
mov
xchg
xchg
lods
outsb
push
mov
adcl
pop
cmpsb
xor
fisubl
movsl
jns
or
sub
in
mov
cs
cli
sub
ret
pop
test
out
subl
push
push
into
lret
adcb
push
mov
xchg
dec
add
rolb
pusha
je
jne
orb
xchg
movsb
cld
mov
add
jecxz
jecxz
and
clc
sti
or
cmpsb
stc
addb
sbb
push
nop
outsb
pop
xchg
adc
sti
arpl
test
sbb
add
rcrl
cmp
std
mov
xchg
orl
test
sahf
pop
mov
pop
dec
hlt
cmp
cmp
nop
or
cmp
push
dec
inc
test
inc
fidivrl
repnz
cmp
and
loop
or
lock
test
lods
test
or
loop
pop
add
pop
pcmpgtw
push
stos
sbb
scas
insb
scas
adc
cmp
adc
js
pop
aam
mov
mov
out
rcrl
je
loop
scas
lret
fisubs
cld
mov
inc
xor
out
sub
sub
sbb
sub
adc
xchg
enter
push
inc
les
ja
xchg
and
call
ds
addr16
addr16
mov
clc
mov
and
dec
iret
and
inc
xor
or
popf
cld
loop
adc
cmp
cmp
test
rol
cmpsb
add
int3
jge
dec
xchg
and
lods
nop
daa
jl
cld
in
dec
mov
insl
movsb
pop
jb
or
pop
int
add
aam
mov
push
mov
cmp
inc
mov
sub
stos
sub
addr16
and
add
mov
inc
push
fdivrl
rol
jge
jo
sbb
in
sub
cmp
lods
jg
jnp
dec
mov
inc
lea
cmp
mov
jnp
fnstcw
xchg
out
cmp
stos
adc
ss
xlat
or
stc
sub
mov
pop
xor
insl
mov
imul
cmpsb
lods
xchg
movsl
xchg
xchg
push
test
xor
mov
shrl
lahf
sub
sahf
cltd
or
push
dec
imul
ds
in
sub
xchg
mov
sub
aam
enter
pop
test
add
fs
mov
test
mov
repz
mov
insb
ret
pop
push
or
cmc
xchg
cmpsl
lods
hlt
nop
outsl
dec
mov
push
bound
and
pop
arpl
pop
and
sub
mov
inc
cmc
loop
insb
lds
in
adc
inc
sub
jno
mov
adc
dec
and
sub
gs
pop
fwait
adc
inc
lahf
jle
fmuls
addr16
push
das
mull
imul
test
adc
xor
cmp
xchg
push
pop
pop
in
sub
adc
cmp
mov
dec
inc
iret
imul
jnp
adc
and
mov
loop
out
ror
mov
jno
mov
mov
xchg
jne
andb
aad
xchg
scas
push
cmp
sbb
repnz
dec
mov
mov
xor
iret
xchg
call
pop
xor
add
dec
pop
je
sti
js
xor
sbbb
data16
dec
mov
dec
pop
dec
pop
push
jbe
xchg
sub
xor
add
mov
vdivpd
pop
decl
mov
popa
sbb
jle
lcall
clc
dec
inc
cli
sbb
pop
aam
inc
mov
push
cmovle
dec
mov
mov
sbb
lcall
sbb
imul
out
cld
pop
rcll
aas
out
mov
stc
aaa
test
dec
test
mov
pop
mov
mov
inc
inc
mov
cmpsl
mov
mov
sbbb
sbb
add
inc
repnz
mov
out
push
add
nop
sbb
mov
xor
movhps
push
push
xor
js
sbb
aad
push
or
testl
inc
test
and
mov
ljmp
fnsave
arpl
jbe
fsts
mov
pop
xlat
shl
dec
sub
je
add
leave
push
test
rorb
or
leave
lret
test
movsl
mov
in
push
nop
in
sub
push
loopne
imul
add
test
dec
mov
out
adc
das
dec
jecxz,pt
jo
pop
leave
jle
incl
add
sbb
adc
insl
ss
test
gs
jne
inc
xchg
roll
push
sub
outsl
inc
ds
mov
mov
aad
mov
dec
aaa
and
lcall
sub
nop
jno
enter
divl
sarl
stos
mov
jp
stc
pminsw
cmpsl
fstps
dec
dec
pop
push
adc
adc
pop
daa
sbb
jns
fst
xchg
arpl
mov
in
sub
scas
push
or
push
adc
or
ja
sbb
mov
repnz
and
or
aad
lret
clc
insb
les
push
loop
mov
inc
imul
push
adc
push
dec
or
test
dec
js
cmp
and
sahf
pop
cld
icebp
out
int3
adc
mov
jmp
clc
insb
sbb
enter
sub
fwait
outsl
fimull
stc
orb
aas
arpl
inc
and
push
mov
push
or
jg
sub
xchg
jno
push
stc
push
xchg
fidivl
or
hlt
or
push
xchg
inc
js,pt
dec
adc
inc
dec
jle
popa
mov
cmp
and
enter
jns
dec
rcl
push
aad
filds
cltd
push
aad
lret
les
jg
mov
adc
mov
repnz
sbb
mov
subl
mov
addr16
loope
add
sbb
mov
mov
add
mov
fdivl
fcoms
mov
insl
mov
popa
mov
xor
hlt
mov
sarl
stos
scas
adc
push
mov
fisubrs
ret
test
mull
cmpsb
aam
cwtl
cltd
dec
and
in
or
cli
fdiv
lea
bound
and
mov
pop
pop
push
lret
dec
push
stos
testb
mov
dec
jae
dec
adc
cmp
sbb
push
xchg
cmc
in
add
jmp
jb
sbb
clc
loope
iret
xor
mov
and
ficoms
mov
adcb
mov
mov
jmp
push
push
int
fwait
sbb
icebp
test
cmp
in
in
hlt
es
mov
jb
xor
cli
std
outsl
inc
add
push
mov
xchg
mov
mov
jnp
mov
aam
xchg
dec
ja
lret
jae
mov
jno
mov
pop
pop
in
movsb
jl
dec
fnstenv
insb
sarl
lret
lret
dec
shlb
xor
adc
dec
test
jle
cmp
decb
into
pop
loopne
rolb
pop
rep
adc
xchg
dec
inc
mov
adc
xor
repnz
cmc
rolb
add
mov
leave
push
dec
push
pop
cs
inc
js
xchg
out
adc
daa
int3
pop
and
testl
lea
push
pop
cmp
insl
fcmovnbe
aaa
into
fs
out
mov
rcll
test
push
ret
pop
cmc
ret
xchg
jecxz
xchg
push
cltd
mov
inc
outsb
sbb
push
pop
bound
cmp
js
jmp
xchg
outsb
mov
daa
lret
sarb
repnz
jmp
leave
and
cmp
sbb
stos
jp
aad
test
mov
xchg
cs
and
lds
cld
jb
test
mov
mov
jbe
mov
subl
nop
xor
push
push
es
arpl
xchg
mov
ljmp
mov
mov
in
adc
dec
push
add
ljmp
cli
xor
pop
lcall
mov
mov
cmc
dec
push
or
xchg
mov
mov
ret
push
roll
aam
lret
psrlq
xchg
xrelease
js
xchg
and
sbb
add
sub
cwtl
pop
adc
mov
inc
add
fcomps
sub
sub
xor
adc
mov
lahf
or
mov
gs
mov
int
xor
and
cmpsb
dec
jle
jo
rcll
shrb
imul
xor
push
inc
push
mov
lahf
sub
add
push
mov
mov
sub
cmpps
arpl
test
xlat
daa
sbb
cmpsl
rol
mov
xor
dec
inc
divb
mov
fs
dec
dec
lahf
movsl
lods
jne
dec
negl
sbb
push
sbb
arpl
jmp
shll
maxps
add
mov
test
pop
out
xchg
movsl
xchg
mov
jb
test
adc
jo
dec
add
mov
shl
xor
push
idivl
or
push
push
and
mov
jmp
ror
sbb
icebp
and
test
mov
push
add
xchg
or
push
pop
aaa
mov
pop
fistps
mov
out
sahf
jnp
add
jle
cmpsb
xor
mov
jne
mov
xchg
hlt
les
cs
jne
mov
xor
filds
pop
dec
shrl
xlat
ljmp
dec
push
jp
repz
es
jne
or
shlb
sub
cwtl
push
aas
sbb
mov
pop
aas
insl
mov
in
push
sbb
mov
sbb
jg
pop
mov
jno
idivl
and
nop
out
es
sub
test
cli
ja
xchg
arpl
or
sub
jne
test
ret
in
xchg
inc
sub
cmp
adc
and
push
push
aaa
jge
fs
fdiv
iret
fidivrl
fnsave
popa
push
icebp
insl
testb
int
fildl
xor
mov
jbe
push
mov
dec
cmpsb
mov
gs
arpl
push
cmc
mov
mov
mov
xor
cmp
mov
xor
stos
jno
stos
pop
imull
xchg
mov
scas
mov
mov
adc
sahf
push
pop
mov
mov
push
jo
dec
pop
iret
sub
or
and
ret
lcall
cmp
sub
vmwrite
mov
and
aaa
daa
or
sarl
in
dec
push
push
shlb
sti
inc
sbb
jno
mov
fistpll
mov
jnp
add
jecxz
in
aad
mov
add
jmp
cmpsb
add
jl
sub
jo
leave
cld
mov
ljmp
pop
in
pop
sbb
lods
xchg
sbb
push
dec
lock
dec
dec
xor
mov
mov
lahf
lret
dec
adc
movsb
not
mov
lret
lods
out
enter
pop
bound
loop
leave
mov
mov
mov
jnp
inc
sbb
leave
jae
out
mov
adc
pushf
jne
and
mov
sub
loop
jb
aam
subb
test
pushf
lock
popf
cmp
mov
xchg
jnp
xor
fstpl
mov
inc
jge
imul
stos
int
xor
pop
rcrl
scas
xor
nop
or
add
in
xchg
int
xchg
inc
lret
aaa
frstor
xor
es
scas
mov
addr16
mov
in
loope
repz
or
cli
cmp
or
dec
test
xorl
leave
adc
out
js
fildl
cmp
jg
cli
in
test
jne
jge
xor
inc
adc
daa
dec
mov
std
mov
pusha
mov
or
in
aam
dec
rolb
mov
jle
dec
mov
in
mov
sbb
xlat
pop
jg
mov
pop
jno
js
or
mov
pop
jnp
cmc
xchg
cltd
ret
fcos
mov
loopne
jne
inc
loop
inc
xor
insb
jp
mov
frndint
add
mov
push
std
les
hlt
ja
add
push
xchg
mov
push
movsb
and
jno
imul
out
inc
inc
xchg
push
bound
mov
xchg
cli
ror
les
fwait
lret
ret
adc
aaa
inc
mov
or
cmpsl
mov
popf
test
mov
lahf
dec
cmp
paddd
mov
mov
add
test
cli
iret
xchg
out
push
mov
mov
movsl
xchg
cmovp
mov
sarl
fsubrl
push
ret
mov
push
dec
enter
jae
adc
sub
push
or
or
adc
sbb
je
in
sub
pusha
push
mov
mov
jne
pop
mov
xor
push
sbb
popf
enter
popa
rcrl
fcoms
inc
addr16
xchg
lock
in
jae
push
ja
jg
push
fcoms
cmp
xchg
sbb
das
pop
xchg
and
ljmp
and
cmp
sub
jnp
pop
cmc
sub
xchg
dec
mov
pmulhw
push
shlb
mov
repz
imul
mov
lcall
and
popa
cwtl
je
gs
dec
ret
and
add
outsb
sub
xchg
out
lea
mov
jb
xlat
mov
cld
loope
push
cmp
adc
rcr
fdivrl
ja
adc
shll
lahf
clc
mov
push
jbe
xor
bound
sub
pop
sti
ds
add
popf
jno
repz
aam
cmp
pop
fldcw
lods
mov
pushf
lods
stc
xchg
jg
out
mov
out
adc
mov
cmpsl
das
or
pop
fwait
xchg
aam
inc
movsb
inc
out
or
dec
iretw
stos
mov
cwtl
mov
sbb
int
jo
push
xchg
cli
fstpt
add
fcompl
scas
fnstenv
out
sub
aad
sbb
cmpsl
jno
rorb
insl
lods
add
lret
push
js
gs
push
rclb
and
sub
xlat
jbe
or
nop
sbb
pop
stos
insb
test
dec
mov
popf
loop
sub
outsb
mov
jl
jmp
add
cld
push
icebp
push
xchg
cltd
jno
xor
cmp
cmp
dec
push
shlb
and
and
pop
test
leave
fwait
sub
into
cs
call
mov
test
sbbb
fs
fwait
ljmp
xchg
sbb
pushf
iret
inc
ljmp
mov
arpl
sub
mulb
aam
and
in
jne
mov
or
or
mov
ja
inc
call
xchg
mov
push
adc
divb
xchg
or
test
fdivrs
push
out
bound
enter
push
xchg
push
sbb
or
shl
pop
sub
cmp
mov
pop
xor
popf
and
roll
add
ljmp
imul
dec
sbb
nop
cmpsb
in
dec
cwtl
cwtl
xchg
pop
das
shll
pusha
dec
xchg
push
mulb
sbb
pop
dec
insb
sbb
sarl
sub
ljmp
movsl
faddp
xor
sarl
jnp
push
outsb
lcall
lods
loope
inc
jecxz
xor
adc
add
jns
and
dec
sbb
ja
dec
adcb
aad
jnp
das
adc
lret
rclb
xor
gs
stc
ret
adc
jge
and
adc
fs
jb
dec
jg
pop
mov
aas
scas
adc
fstpl
mov
mov
insb
xchg
pop
sbbb
aad
xchg
fisubs
push
mov
lods
or
pushf
sbb
std
mov
push
out
jns
mov
iret
jb
mov
jno
testl
pushf
xlat
push
shrb
or
and
pop
fstpt
mov
mov
sbb
mov
leave
adc
pusha
jmp
lods
in
aas
xor
int3
lea
fildll
fucomi
fdivrl
adc
jmp
sub
dec
inc
mov
mov
test
jbe
clc
inc
in
cmp
lahf
cmp
cld
mov
mov
shlb
icebp
lods
mov
clc
and
mov
inc
call
in
in
mov
cmpsl
fmull
xchg
push
or
aas
popa
setp
fwait
mov
sbb
sub
ja
daa
add
in
mov
mov
xor
and
xchg
scas
jge
mov
imul
aam
dec
inc
or
aas
sbb
jmp
xchg
data16
nop
dec
and
or
mov
addr16
cld
jae
inc
rcrb
daa
test
xchg
rcrb
es
mov
fld
adc
inc
std
nop
jnp
cwtl
and
sbb
sarl
or
arpl
stc
mov
adcl
push
lods
mov
mov
xchg
pop
lcall
aas
cltd
pop
aaa
std
xor
lcall
mov
push
sbb
subb
out
mov
out
movsl
pusha
push
mov
out
inc
std
or
push
jae
lahf
push
fdivp
pop
cmp
test
int3
imul
jno
adc
inc
iret
xor
sbb
pop
lea
mov
sub
jmp
fucomi
lock
push
out
and
dec
ret
push
scas
les
jns
sti
pop
mov
lret
and
out
pop
in
inc
ficoms
inc
lods
adc
mov
or
xchg
fwait
mov
je
rcrl
add
ss
dec
jmp
in
mov
nop
mov
cmpsl
arpl
ret
shll
hlt
es
and
sub
test
sbb
xchg
mov
inc
orb
xchg
fnstenv
in
xchg
out
sarl
add
pop
cmpsb
push
dec
lret
leave
in
out
ffreep
loopne
push
xlat
xchg
sub
jmp
add
test
test
push
push
imul
in
and
sarl
lahf
out
in
jnp
sub
mov
and
xor
test
xlat
stos
inc
insb
in
inc
out
leave
mov
or
adc
pop
pop
mov
xchg
in
fnstenv
mov
xor
inc
test
dec
push
mov
sbb
pop
pop
and
mov
int
sub
sbb
frstor
xchg
aad
stos
cwtl
je
lret
ret
mov
insb
cmpsl
shrl
push
movsl
mov
loop
ret
stos
adc
movsl
aas
in
or
lcall
or
inc
pop
aas
bound
sub
ret
and
dec
inc
cmp
in
sbb
jns
mov
lea
aam
mov
call
pop
jae
dec
mov
xchg
mov
mov
ret
stos
or
mov
cli
sub
mov
xor
fsubl
in
mov
jae
mov
repz
add
ret
rcrb
bound
outsl
call
inc
std
pop
or
data16
mov
out
pop
jns
jle
push
mov
push
sbb
das
movsb
mov
bound
sub
jp
jle
push
daa
mov
notb
xchg
cmp
jge
clc
cmp
mov
xchg
dec
sub
dec
sub
sub
out
jmp
scas
arpl
in
xchg
clc
xchg
pop
mov
dec
or
cltd
xchg
pop
nop
in
push
push
leave
inc
aas
testb
jo
mov
adc
lcall
imul
lret
sub
jns
hlt
push
mov
mov
mov
lret
hlt
fmuls
addl
inc
mov
push
js
aad
clc
loope
jbe
dec
test
jmp
xchg
repz
sub
in
or
mov
out
inc
sub
mov
xchg
cwtl
fiadds
xchg
xor
sub
sub
bnd
cwtl
int
adc
mov
cld
loopne
mov
pop
dec
push
roll
aas
mov
popf
lahf
push
nop
sbb
popf
dec
mov
and
scas
push
or
pop
lea
mov
push
cmp
or
pop
mov
sbb
arpl
add
xor
mov
dec
cld
pop
lods
sbb
scas
adc
int
pop
aaa
mov
stc
repz
add
mov
pop
or
sub
and
xchg
mov
outsb
outsb
cmpsl
test
test
xchg
cmpsb
mov
lea
dec
inc
pusha
xchg
leave
aad
xor
repz
std
dec
push
nop
lret
popa
push
sbb
and
js
mov
inc
inc
mov
sub
std
adc
jb
mov
test
pop
hlt
loop
sbb
jecxz
jo
movsb
insl
shl
add
call
add
adc
sbb
das
jno
das
push
push
mov
orb
je
dec
repz
pop
cmp
pop
xchg
xchg
sub
popf
xor
pop
cld
hlt
xchg
cmp
imul
notl
in
sub
dec
push
movl
mov
ss
sub
xchg
out
inc
js
js
adc
iret
inc
addr16
adc
mov
mov
lcall
iret
xor
into
inc
pmaddwd
push
fsts
push
and
test
push
loop
and
and
pop
push
fs
push
out
fidivl
mov
call
jnp
push
xor
pop
inc
or
dec
sub
aad
lret
jmp
rorb
pushf
xor
jnp
dec
into
shrb
sti
lea
add
cwtl
ss
scas
fimuls
xor
addr16
cmp
xor
fcompl
add
and
adc
test
mov
xor
cmc
jmp
inc
es
aas
stos
inc
sbb
mov
dec
jge
mov
pop
aad
roll
adc
jl
aaa
mov
sbb
rolb
loop
rclb
imul
test
push
mov
mov
mov
xchg
cli
adc
mov
out
fbstp
leave
mov
scas
orb
addb
fimuls
loope
sbb
sub
lods
push
mov
xlat
inc
daa
and
sub
mov
out
cmpsl
je
inc
out
aas
jl
xor
stos
ss
ljmp
jnp
fistpl
jns
lea
jb
dec
jae
sub
xor
test
pop
mov
pushf
popf
lea
pop
dec
loopne
xchg
fwait
lods
mov
mov
nop
cmp
mov
in
mov
pop
hlt
cmp
inc
mov
popf
xchg
add
pop
dec
ja
cmp
sti
incl
xchg
repnz
or
dec
jns
push
sub
xor
ds
cmp
cmp
mov
mov
jmp
mov
cltd
xchg
stos
xor
sbb
repz
mov
jne
fwait
arpl
adc
mov
aad
add
fldt
lods
out
setns
push
les
sbb
mov
xchg
notl
sbb
ret
mov
in
xchg
push
ret
sbb
xor
int3
inc
dec
add
xor
push
add
add
repz
pop
xor
or
aam
divb
pop
inc
sahf
sbb
lea
mov
ss
fldcw
mov
pop
out
into
dec
into
jecxz
inc
xchg
inc
mov
mov
xlat
jae
and
mov
lods
adc
dec
cmp
push
mov
daa
jae
addr16
or
xchg
xor
mov
pop
repnz
sti
cmp
sbb
fcompl
adc
hlt
inc
jne
das
in
sbb
sbb
rorb
pop
lret
push
jb
ret
outsl
pop
cs
out
cmp
out
jg
xchg
faddl
lods
leave
movsb
mov
jne
mov
sbb
notb
in
dec
fwait
out
mov
push
rol
lea
mov
mov
sub
inc
or
inc
push
std
xchg
movaps
cltd
mov
insl
or
ret
rep
inc
cwtl
das
dec
sbb
ret
adc
fmull
je
aas
inc
lock
icebp
xchg
fistpl
push
jo
add
mov
push
mov
aam
lock
dec
push
mov
jne
jne
mov
jb
inc
xchg
es
jecxz
mov
add
cmp
aam
lcall
mov
push
or
ret
loope
data16
icebp
inc
inc
cld
xchg
cmpsb
cmpsb
std
sub
adc
lea
adc
out
fnsave
push
lock
lahf
arpl
in
ret
jecxz
push
enter
adcb
loop
push
das
iret
cld
ja
sbb
aas
call
inc
popf
popf
sub
or
add
test
shlb
dec
ljmp
outsb
or
enter
inc
jecxz
clc
jp
xchg
ret
test
adc
dec
inc
je
jmp
rcrl
push
xchg
test
xor
int3
mov
xchg
dec
iret
gs
push
mov
nop
in
jge
mov
js
sbb
aas
sbb
fildll
lahf
dec
addr16
cmp
and
sarb
mov
xchg
mov
inc
popf
sub
loop
xor
push
cmp
orl
jns
sbb
mov
cmp
jp
sub
int
xor
cmp
inc
mov
or
mov
xor
adc
inc
mov
sbb
push
adc
in
scas
sbb
dec
pushf
or
mov
pop
out
sbb
jp
xchg
or
xchg
repnz
dec
call
sub
aaa
aam
in
xchg
fs
ja
mov
fwait
sti
jp
cli
adc
mov
int
jns
lds
in
xor
int
insl
dec
jno
mov
mov
cli
std
push
xchg
scas
mov
dec
push
xchg
hlt
pop
xchg
bound
mov
cmp
jnp
inc
flds
dec
jnp
xchg
clc
mov
icebp
insl
adcb
mov
shlb
lahf
jbe
push
xchg
xor
sbbb
movsl
pop
jne
call
sbbb
ret
or
stc
and
mov
and
jb
add
pushf
adc
movsl
xchg
cmp
sbbb
push
jns
xchg
mov
xor
fs
aas
sarb
lret
rorb
or
push
pop
sbb
adc
outsl
dec
out
es
xchg
adc
cmp
jg
xor
out
mov
pop
rcrb
mov
xor
add
imul
mov
in
ja
sub
push
ja
mov
icebp
mov
rcrl
or
jae
inc
lcall
jg
dec
mov
aad
sbb
movsl
fidivl
stc
jns
adc
lcall
outsb
lods
jle
out
cmp
mov
int3
in
pop
dec
push
sbb
dec
xlat
push
aaa
jmp
xor
jp,pn
sub
das
std
jae
pop
shrb
std
mov
or
vpmacsww
fsubr
bound
cmp
pop
sbb
cltd
in
add
iret
mov
or
mov
add
mov
dec
in
push
mov
mov
sub
fmul
mov
rol
arpl
test
sub
mov
sub
push
mov
out
lret
outsl
pusha
lds
daa
push
sub
adc
imul
add
in
cmp
test
cmpsl
lretw
mov
mov
and
xchg
or
inc
iret
out
and
clc
cmp
lock
adc
sub
icebp
aam
push
xor
jp
out
mov
and
enter
jmp
mov
cmp
movsb
iret
pop
jno
imul
cltd
lods
push
jmp
pop
mov
mov
into
jb
mov
stos
sub
outsl
inc
popa
daa
xchg
sub
push
dec
fsubl
adcl
lds
adc
je
flds
mov
call
cmp
in
push
dec
leave
mov
int
clc
hlt
xchg
mov
add
pop
pop
push
pushf
das
fs
dec
fdivl
sbb
out
cmp
mov
lcall
mov
sub
add
into
dec
andb
xchg
scas
jns
jg
sbb
xor
fsubl
leave
in
stos
fs
pop
aaa
push
xor
stos
xor
add
jp
out
pop
inc
add
jo
or
aaa
xor
dec
add
fsub
js
js
push
scas
jmp
sti
xchg
fwait
repz
xchg
adc
push
jne
ficoml
mov
pop
addr16
inc
fstl
imul
mov
rolb
push
and
sub
mov
popf
jne
sub
adc
xor
push
cmpsb
cmp
or
mov
inc
or
clc
ret
pop
leave
js
pop
mov
cmp
mov
xchg
test
xor
in
jp
loopne
mov
mov
filds
or
test
popf
mov
lret
clc
movsb
mov
test
push
fs
xor
jne
push
nop
mov
addr16
mov
inc
into
pop
fldl
addr16
daa
cwtl
insl
mov
add
inc
or
xor
popa
mov
adcb
inc
push
dec
xchg
sbb
and
sarl
push
mov
icebp
jne
mov
into
pop
xor
inc
test
push
cmc
mov
rolb
or
mov
insb
negb
xlat
or
lds
sub
rorb
add
inc
and
mov
std
push
mov
iret
stc
cmc
fmuls
adc
ljmp
lahf
xor
adc
cmp
and
into
pop
jae
and
ja
mov
cs
xchg
mov
inc
jne
ljmp
in
inc
out
sti
pop
in
sbbb
and
push
ljmp
in
rcrb
lods
sti
cmp
mov
fcompp
test
divb
mov
or
das
std
push
insb
pop
in
cmp
cltd
std
dec
sub
and
leave
mov
sbb
and
fisubs
mov
mov
lods
mov
arpl
js
cs
mov
xchg
cli
ret
mov
push
cmpsb
iret
jns
ret
push
call
push
out
sbb
inc
test
and
mov
xor
loop
pop
in
outsb
pop
xchg
imul
add
stc
and
or
adc
inc
pop
sti
push
xor
push
fs
mov
adc
dec
fcmovb
cmp
loop
cmpsl
in
stos
sbb
jne
lcall
lahf
in
mov
inc
and
data16
bnd
cmpsb
jmp
in
scas
cmp
rorb
sbb
popf
sahf
jp
add
push
push
int
idivb
xlat
std
sbb
sti
lods
mov
xchg
xchg
xor
xor
sar
sub
inc
sub
test
stos
rorb
xor
pop
mov
fnstcw
fildl
repnz
push
das
mov
into
or
mov
cmpsb
mov
rclb
xchg
jne
idivb
popf
scas
mull
insb
pop
fisttpll
fcmovne
aam
mov
loop
xchg
mov
cli
pop
jmp
es
mov
sbb
dec
mov
mov
popa
js
inc
push
mov
sub
cmp
pusha
scas
outsl
cwtl
out
out
jae
test
and
push
call
sub
fwait
rcrl
stos
in
dec
in
mov
test
fldcw
pop
xor
sub
test
inc
std
fucomip
test
hlt
nop
addr16
mov
insb
sarb
xor
and
push
lock
bound
mov
add
jge
fildll
xchg
cs
imul
cmp
test
cmp
shlb
or
sub
imul
cmp
adc
jo
pushf
sub
std
out
xor
repz
or
lret
inc
mov
js
fbld
idivl
shrb
data16
inc
enter
iret
dec
test
in
xchg
pusha
mov
sahf
aad
add
loopne
mov
sbb
sbbb
rolb
jnp
xchg
pop
das
mov
xlat
and
jo
out
push
pop
jmp
fiaddl
dec
loopne
seta
movsb
mov
lret
inc
jecxz
leave
cwtl
pop
rcll
and
lahf
xchg
les
pop
aam
cltd
cmp
and
pop
pop
jge
xchg
mov
aaa
pop
orb
cmpsb
daa
scas
mov
push
jg
sub
lret
test
or
mov
repz
rclb
loopne
mull
jbe
sub
inc
fs
cltd
in
jno
mov
xlat
inc
dec
inc
dec
add
jg
iret
enter
sahf
rclb
loop
sbb
mov
pusha
mov
push
enter
pop
daa
cld
cmp
ret
mov
popf
cmp
repz
mov
mov
sbb
lea
es
inc
aas
inc
adc
sub
cmp
sbb
ficompl
int3
es
cmpsb
lcall
cmp
and
sub
mov
pushf
push
pop
mov
dec
sub
xchg
or
pop
adc
enter
fimull
imul
jl
wbinvd
jge
inc
push
push
or
fwait
shlb
inc
arpl
mov
mov
subb
orb
xchg
mov
mov
dec
mov
cmp
cwtl
sub
clc
add
push
cmp
jp
loope
aaa
inc
hlt
cmpsb
shlb
xor
push
push
es
rol
and
mov
shl
inc
sti
rorb
mov
shrb
push
movsb
pop
cmp
mov
mov
sub
jmp
outsb
outsl
lock
jbe
out
push
mov
es
dec
int3
cltd
cld
mov
fcomps
leave
sub
sub
pop
cli
dec
push
lock
jne
repnz
orl
pop
fildl
and
divb
and
arpl
dec
jle
adc
or
adc
jg
jb
mov
adc
mov
pop
std
inc
mov
cmpsl
add
data16
rcll
std
ja
jb
rorb
push
cwtl
or
loopne
icebp
jp
outsl
rcrl
add
jg
or
mov
pop
cld
mov
push
or
hlt
imul
xchg
mov
adc
fdiv
xchg
jl
mov
add
xor
sbb
inc
aad
loopne
inc
pushf
xchg
rcrl
sbbl
and
cli
cmp
xor
in
dec
mov
cli
js
pop
movsb
ret
ret
inc
movb
push
pmaxub
rolb
xchg
sarb
lods
xchg
ret
pusha
test
loopne
sbb
push
add
xchg
loopne
inc
jae
fbld
mov
in
lahf
jge
pop
mov
add
push
mov
sub
xor
sbb
jecxz
inc
popa
mov
iret
mov
fnsave
mov
sbb
or
cli
inc
push
xlat
out
or
and
push
insl
adc
or
mov
pop
rolb
cmp
mov
xadd
dec
lret
dec
lahf
repnz
ljmpw
cmc
dec
call
xor
cld
mov
sarb
loope
xor
push
and
incl
scas
inc
testl
xor
stos
adc
ret
stos
sbb
das
loop
dec
rol
dec
fildl
xchg
xchg
push
les
adc
enter
sbb
lea
arpl
sbb
call
inc
dec
ss
sbbb
mov
test
cwtl
sbb
cmpb
out
push
mov
jge
dec
cmp
fiaddl
jne
push
jg
ret
mov
pusha
dec
mov
fldenv
add
insl
loope
aam
add
out
sub
inc
adc
fdivrs
push
lods
or
jg
adc
sbb
test
inc
jecxz
and
jb
xor
xchg
push
popa
lahf
movsb
jle
add
test
sbbl
shlb
and
test
push
repnz
test
fsubrl
xchg
jbe
push
ds
lret
daa
hlt
aam
mov
iret
dec
or
fwait
fs
push
and
cmpsb
sub
out
push
scas
add
arpl
inc
pop
mov
lret
push
js
push
and
jb
ss
stos
mov
cmp
ljmp
pushf
mov
aaa
mov
mov
adc
repnz
sub
shl
xchg
add
mov
and
gs
xor
data16
cmp
insl
in
bound
dec
jp
sub
lcall
loopne
add
call
xor
stc
test
insb
lcall
sub
inc
sub
les
mov
sahf
inc
xchg
sub
lret
out
in
ljmp
fwait
pop
sub
fwait
xor
sti
mov
add
xor
js
adc
cs
inc
mov
insb
add
mov
and
sahf
pop
sub
inc
add
fnstenv
outsl
andw
clc
je
or
shll
idivl
cmpsl
stos
ss
inc
popf
add
loop
sbb
jae
add
mov
jmp
orb
dec
or
mov
das
out
and
shlb
lds
xor
inc
lods
rcl
mov
lret
cmpsl
aam
orl
xchg
ljmp
inc
aas
cmc
dec
xchg
xor
cltd
into
loop
sarl
sub
dec
cmp
or
out
js
daa
lods
lock
xor
fcmovu
sub
jmp
cmpsb
push
repnz
dec
lahf
sub
aad
je
lret
sarl
call
hlt
pushf
sahf
and
test
movl
clc
jb
popf
insl
sub
not
push
dec
mov
mov
in
cmp
rep
arpl
pop
push
sbb
xchg
dec
test
adc
insb
inc
sahf
incb
cld
test
rcrl
xor
xchg
xlat
test
mov
repz
insl
pop
push
add
jecxz
lret
dec
lods
loopne
fidivl
jo
cmpsl
cmp
xchg
dec
lods
les
mov
sbb
mov
outsl
cmp
xor
movsl
jl
movsl
ljmp
nop
scas
xchg
call
jl
jle
into
inc
sbbl
movsl
hlt
xchg
jns
daa
andb
sub
int
inc
xchg
mov
dec
lods
push
xchg
dec
pop
xor
rcrb
enter
jbe
pushf
pop
or
leave
adc
jl
addr16
cld
cmp
xchg
push
inc
mov
dec
addr16
shll
cmpsl
addr16
mov
sbb
mov
test
int3
mov
es
test
fbld
subb
cmp
insb
xchg
pop
jle
push
dec
fisttpll
sti
adc
xchg
jl
push
adc
xchg
or
adc
mov
sahf
and
push
add
mov
insl
jae
daa
sarb
out
xor
lds
or
repnz
or
ret
pop
jo
pop
fistpl
shrl
cmp
test
adc
js
dec
loop
scas
dec
les
rcrl
pop
sahf
or
imul
les
dec
sbb
jne
pop
mov
das
push
mov
cs
inc
add
aam
inc
sbb
sarb
push
rcrl
inc
lock
or
addr16
movl
xlat
cli
fldl
int3
ss
sahf
ja
imul
gs
xor
dec
loop
sar
mull
mov
or
sbb
sbb
mov
mov
leave
mov
sbb
adc
jne
adc
or
xor
inc
nop
pop
lcall
cmp
in
divb
xor
loop
fdivl
mov
lods
push
imul
ficomps
incl
loopne
pop
dec
fmul
popf
rorl
repnz
jecxz
out
cmp
rep
mov
cmpb
daa
dec
inc
or
push
popa
push
pushf
icebp
adc
adc
xor
shlb
fldl
aas
mov
mov
sbb
aam
xchg
xor
data16
mov
in
scas
sbb
add
sbb
test
adc
jg
dec
arpl
pop
inc
or
rorb
arpl
pushf
ja
xlat
cmp
inc
push
mov
flds
test
jecxz
mov
nop
into
in
dec
dec
fsubrl
adc
pop
xchg
nop
or
repz
scas
ret
ja
sbb
jmp
jle
cmp
in
lret
daa
add
out
xchg
icebp
sub
test
mov
shrl
or
push
fwait
icebp
cmpsb
push
inc
jl
rol
imul
aaa
xor
mov
es
adc
outsb
xorb
in
adc
sbb
daa
iret
pop
sti
lods
outsb
mov
scas
xlat
push
inc
outsl
das
jne
mov
icebp
test
jmp
fldcw
test
testb
xor
cmp
xor
dec
mov
pop
scas
lods
cwtl
add
les
flds
inc
sbb
inc
data16
cld
adcl
cli
insb
or
jno
andl
push
insl
xor
subl
and
push
and
jl
jo
inc
jmp
xor
xchg
in
inc
inc
fnstcw
pop
bts
xlat
jae
repnz
sub
mov
das
adc
xor
fdivp
in
jmp
repnz
jg
movsl
stos
xchg
pop
in
pop
jns
daa
arpl
or
das
nop
aas
inc
sub
dec
dec
es
sub
sub
inc
or
scas
stos
or
pushf
jp
outsl
push
sbb
pop
mov
je
fimuls
mov
outsb
repz
xor
lods
inc
ror
loop
in
add
push
mov
scas
or
cmc
lods
cmpsl
call
sub
dec
or
in
jmp
mov
aad
sub
cli
pushf
ret
lods
loopne
or
ljmp
inc
subb
mov
add
add
mov
sbb
fucomi
and
inc
pop
mov
pop
ja
xor
inc
mov
inc
dec
jne
movsb
insb
pop
inc
arpl
jno
xor
fistpll
out
lods
or
movsb
mov
adc
fbstp
cmp
sub
sub
les
jmp
mov
mov
push
jp
out
jmp
adc
xchg
fisubs
xor
sbb
cld
loop
mov
popf
push
xchg
add
les
jge
rol
and
xchg
push
int
xchg
sub
daa
sbb
xchg
jl
adc
xchg
sbb
mov
lods
out
ret
lret
cmp
outsb
sub
mov
xchg
add
pop
aaa
sti
mov
les
push
gs
jle,pn
xor
dec
in
insb
stos
cmp
test
xchg
insl
insb
hlt
sbb
ret
pusha
jge
mov
ret
xchg
pop
data16
add
dec
mov
pop
sbb
mov
xor
xor
ljmp
arpl
divl
sub
add
mov
push
mov
daa
sub
imul
popf
faddl
sub
push
repnz
xor
shrb
mov
stc
sbb
cmp
and
das
ljmp
mov
sub
shr
dec
ret
int
cli
push
jno
and
mov
xchg
clc
xchg
and
inc
mov
repz
or
ja
add
pop
fcomps
xchg
dec
fs
mov
dec
imul
mov
mov
adc
subl
into
outsb
adc
daa
daa
mov
fdivs
inc
xor
repnz
or
and
lds
jp
jb
sbb
jg
fdivr
xchg
adc
xchg
jmp
mov
jge
pusha
cltd
inc
ja
xor
mov
cli
xchg
lods
and
dec
inc
sar
jbe
popf
cmp
mov
inc
add
add
lea
sub
cs
and
fmuls
sub
int3
ljmp
adc
icebp
stos
jns
addr16
repnz
add
dec
fldt
bound
inc
mov
sub
insb
enter
clc
cmpsl
bound
das
popf
nop
push
out
mov
fcoms
imul
clc
push
inc
pop
jmp
xchg
lock
xchg
into
dec
roll
repnz
adc
pop
out
in
dec
mov
mov
cmp
cmp
xor
xchg
or
mov
out
insl
jl
mov
ds
mov
xor
leave
fstps
inc
jl
jmp
ss
pop
cmp
pop
inc
or
fsts
xor
test
or
jb
sub
shl
and
jmp
or
outsb
lods
ret
ljmp
xlat
rcrl
test
adc
sub
or
xor
out
adc
rcrl
mov
push
adc
mov
rorb
in
jne
pop
orb
xlat
xor
lret
sti
push
push
incl
test
clc
shll
push
xchg
cmc
ret
mov
sub
jns
test
sbb
sub
xchg
jnp
jne
fwait
arpl
in
test
sub
jle
daa
ds
into
test
sub
into
cmc
push
jns
out
iret
xor
or
test
fs
aas
fwait
int
in
lahf
nop
xlat
push
mov
pusha
and
xchg
fsub
jae
xchg
push
jp
inc
ret
lods
rorb
int
xchg
cmpsb
jge
push
xchg
add
mov
cwtl
out
xor
mov
repnz
adc
xchg
sub
mov
frstor
xorl
addr16
mov
loop
dec
and
mov
mov
shrl
test
mov
lods
cld
aaa
gs
lret
je
cmpsl
cmp
ja
mov
out
sti
jl
jmp
sub
cmp
add
lods
push
pop
mov
xorb
dec
imul
sahf
jmp
int3
ljmp
mov
pop
jp
fsubrs
cmp
pusha
shrb
bound
xchg
mov
cmp
and
movsb
mov
imul
test
push
inc
int3
stos
arpl
cli
inc
mov
test
fimuls
mov
inc
cmc
insb
popa
cwtl
adc
cmc
add
xchg
cli
fistpl
pusha
jns
sub
pop
and
add
add
jle
fs
adc
mov
jmp
std
xor
push
push
in
cmpsl
jae
or
sbb
fdivp
jb,pt
add
stc
je
mov
lahf
push
stos
clc
ds
push
adc
cmovno
scas
push
jns
mov
stos
testl
roll
xchg
clc
aam
pushf
int
jmp
mov
sbb
jne
sbb
sbb
movzwl
mov
lret
cmc
cmp
mov
adc
jae
loop
jmp
orb
adc
inc
and
scas
fisubrl
repnz
and
jo
fsubp
add
popa
mov
add
subb
icebp
xchg
ljmp
push
jae
in
add
push
or
jae
aaa
out
xchg
test
bound
adc
in
jl
imul
outsb
rorb
push
jge
xor
inc
jne
adc
cmp
movsl
mov
pop
mov
push
inc
sub
jae
mov
dec
dec
mov
std
mov
lock
pop
dec
mov
mov
vpaddq
jns
hlt
adcl
dec
or
ljmp
sub
rol
arpl
fcoml
cs
subl
cmp
cmp
dec
out
pop
inc
add
outsl
les
int
or
pop
adc
mov
out
movsl
xor
adc
fbstp
call
inc
jg
std
std
and
cwtl
outsl
pop
add
js
rcrb
lahf
loopne
fistpl
xchg
imul
ret
pop
mov
aas
cmp
cltd
decl
cmpsl
jl
mov
imul
inc
or
mov
out
ret
jecxz
mov
aaa
pop
push
imul
dec
and
dec
inc
adc
and
sub
mov
into
sbb
xchg
push
test
outsb
in
out
scas
jnp
mov
lods
loope
pop
stc
shrl
xor
insb
sbb
dec
ljmp
add
cmp
add
xchg
push
decl
call
pop
lcall
dec
lods
lahf
fildll
addr16
das
xchg
mov
mov
add
sbb
das
or
push
mov
imul
lcall
mov
jle
xchg
sub
xor
les
shl
inc
jo
cmp
dec
gs
imul
sub
mov
push
mov
and
jmp
aaa
jae
push
adc
imul
aad
aas
cmpsl
xchg
outsl
cwtl
adc
pop
dec
push
mov
hlt
test
jmp
and
stos
insb
and
aad
sahf
es
fidivrl
test
dec
inc
jb
jae
lods
fldl
cmp
and
lods
jns
inc
repz
aaa
repnz
sub
inc
aam
cmpxchg
and
xchg
jnp
sahf
loope
fidivs
popf
jne
xlat
clc
shlb
js
add
or
mov
mov
mov
jae
push
pop
jb
std
dec
dec
popa
call
into
cmpl
lods
adc
test
and
call
movsb
inc
aam
and
jecxz
inc
lock
mov
pop
mov
fiadds
jo
nop
mov
sarb
xchg
dec
jne
daa
xchg
pop
rcrl
mov
popf
adc
enter
repnz
push
lahf
jb
sbb
cltd
pop
add
and
fdiv
scas
or
adc
stc
or
add
aam
sub
mulb
mov
lret
sbb
fimull
sub
stos
int3
data16
out
cmp
and
or
or
inc
add
adc
mov
dec
jno
add
push
ljmp
pop
mov
xchg
hlt
sbb
sbb
dec
out
xorl
mov
mov
adcb
popf
fwait
in
mov
insl
in
sub
daa
xchg
cltd
insb
movsl
push
push
test
rcl
push
cld
iret
mov
adc
xchg
shll
adc
hlt
stos
test
mov
pop
in
add
jmp
jbe
dec
jo
dec
push
lods
decl
into
mov
jno
lds
cmp
dec
movsb
and
push
std
sub
mov
sbb
push
test
aas
in
int
lcall
call
pop
mov
mov
xchg
je
mov
cmc
clc
int
inc
subb
sub
insb
popf
push
push
addl
enter
in
adcl
pop
sahf
test
ja,pn
xlat
push
jne
or
ljmp
jb
lret
pop
insb
daa
fidivrl
arpl
mov
inc
fwait
xchg
out
mov
shl
enter
and
mov
out
mov
mov
stc
je
dec
aad
enter
fimull
out
jae
cmpsb
xchg
pop
dec
dec
dec
test
inc
out
adc
jmp
fsubs
and
js
and
idivb
pushf
pop
loop
cmp
dec
lods
nop
sbb
lea
cwtl
sub
or
xchg
jmp
daa
ficoml
sbb
and
xchg
sub
cmp
ficompl
jne
int
cli
jo
xchg
inc
test
mov
push
xchg
or
pop
int3
sahf
leave
inc
icebp
or
sub
rcl
dec
lods
ja
pop
fwait
aas
add
cmp
inc
ds
xor
cmpb
pop
mov
mov
cmp
out
adc
std
dec
or
out
loope
popa
jo
rol
movsb
out
int3
mov
lret
or
pop
inc
sbb
in
sub
jmp
lahf
rclb
out
push
mov
ds
xchg
adc
push
dec
inc
mov
cmp
inc
inc
jg
das
test
pop
andb
outsb
cmp
inc
xchg
xor
sbb
dec
les
xor
fsubrs
es
adc
movsb
ds
mov
dec
imul
call
out
jle
mov
stos
jnp
cmpsl
inc
fucomi
call
lret
sbb
addr16
add
pop
mov
xchg
xchg
xor
xor
pop
pop
xor
popa
xor
adc
insl
mov
jp
outsl
jl
lret
test
shl
xchg
jp
jno
mov
ss
rclb
cld
push
fidivrl
sub
push
lahf
mov
nop
adc
daa
inc
mov
in
or
mov
xchg
mov
jbe
test
fsub
xchg
repz
fcompl
je
sahf
pop
imul
or
xor
in
rcrb
sbb
fcomip
sub
mov
addr16
xchg
jp
adc
pusha
andb
daa
mov
mov
imulb
mov
inc
outsb
mov
dec
pusha
xchg
adc
cwtl
scas
push
jge
or
push
imul
imul
lahf
lahf
xor
push
mov
repnz
stos
shrb
pop
jbe
cmpsl
or
fildl
mov
out
sbb
out
idiv
jbe
dec
cmpb
aad
lods
shll
mov
mov
aad
cltd
jmp
stc
mov
sub
xchg
adc
lret
sahf
sub
inc
cld
dec
inc
mov
dec
aaa
imul
dec
mov
mov
pop
push
hlt
and
icebp
orb
dec
test
jns
gs
mov
lods
out
pop
sbb
adc
test
sahf
xorl
je
sbb
lahf
and
add
pop
ja
daa
lods
jge
or
lods
mov
fldenv
adc
add
enter
fsubp
fsubrs
add
sbb
mul
push
fld
mov
scas
lods
mov
or
mov
mov
jl
jg
adc
andl
inc
mov
test
enter
loop
mov
or
xchg
and
mov
inc
jne
inc
stc
mov
push
pushf
inc
mov
dec
outsl
orb
lret
nop
adcb
imul
mov
add
dec
insb
mov
aaa
jecxz
or
ret
cmp
and
es
pop
cmp
out
in
jl
rclb
lret
cmp
lea
xchg
ret
rorb
out
das
lahf
arpl
cmpsl
and
int
inc
cmpsb
sub
imul
jb
and
jo
or
les
rolb
push
lcall
jge
jge
cmpl
pop
dec
cld
cmp
leave
daa
int3
xlat
push
adc
out
jecxz
cltd
push
sub
mov
icebp
pop
arpl
std
mov
pusha
xchg
xchg
inc
je
call
mov
push
adc
push
scas
mov
mov
inc
or
lret
fcoms
cmpsb
push
lds
enter
fdivl
jmp
fisubs
mov
pop
fimull
lods
aaa
fwait
push
lcall
add
push
add
loope
popf
daa
lret
and
mov
scas
std
dec
and
mov
push
int3
out
xchg
int3
cmpl
daa
push
lcall
pop
into
rorb
jp
mov
fdivrl
sbb
adc
pushf
sbb
xor
bound
mov
lcall
dec
push
mov
dec
cmp
or
jle
cmp
push
ss
call
xor
mov
dec
mov
sbb
pop
mov
in
or
insl
sbb
sub
mov
cmp
data16
lock
mov
pop
jge
dec
cmp
push
and
dec
adc
pop
mov
xchg
jb
push
ret
cmp
fisubrl
fnstcw
pop
adc
xor
sub
cmp
lods
ret
cmpb
add
imulb
insl
add
add
call
add
addb
add
push
add
add
add
add
add
inc
add
addb
add
add
add
pop
add
add
mov
add
add
add
addb
addb
add
or
add
roll
add
add
add
add
add
add
addb
add
add
add
fadds
add
mov
add
or
push
add
inc
add
push
add
add
add
add
add
pop
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
add
add
add
decl
add
add
add
addb
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
push
add
push
add
add
decl
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
push
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
pushl
add
mov
add
add
add
test
add
inc
adc
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
call
ljmp
js
add
decl
add
sbb
add
pushl
add
add
sub
dec
sbbb
xchg
jmp
ja
jl
rcll
mov
ja
jmp
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
incl
cmpsl
cmp
stos
sbb
cmpsl
icebp
push
add
add
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
pusha
add
add
lock
xchg
add
es
mov
or
jmp
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
call
add
add
ljmp
add
add
incl
add
add
incl
add
js
dec
dec
push
add
add
decl
cmp
cmp
push
je
push
insb
popa
jns
jb
push
add
add
decl
cmp
dec
push
je
push
insb
popa
jns
jb
push
adc
inc
dec
dec
and
xor
push
jns
and
jb
jb
push
push
lldt
push
insb
popa
jns
jb
inc
insb
popa
jae
push
push
push
adc
dec
push
je
push
insb
popa
jns
jb
dec
outsb
je
jb
popa
arpl
push
or
add
add
gs
je
and
and
inc
dec
and
jb
imul
xor
xor
xor
popa
je
inc
jb
and
outsb
and
xor
xor
cmp
and
xor
xor
adc
popf
and
dec
push
push
adc
imul
sbb
add
add
add
pushl
add
add
add
add
add
add
dec
add
add
add
xchg
and
dec
add
add
or
add
add
add
add
add
xlat
add
fcmovbe
add
rcl
add
add
add
add
add
add
add
add
adc
add
and
add
sub
add
fadds
add
adc
add
and
add
add
adc
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
dec
popa
imul
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
add
movsb
add
add
add
add
push
flds
add
add
add
mov
add
add
add
movsb
flds
add
add
add
flds
add
add
add
flds
add
add
add
add
add
add
push
add
addb
add
xor
add
add
add
pusha
fadds
add
add
add
incl
add
add
je
add
add
add
lcall
fadds
add
add
add
add
pushl
add
test
add
add
add
fcomp
add
test
add
mov
add
add
add
clc
flds
add
add
add
add
lcall
fiaddl
add
add
add
add
ljmp
fiaddl
add
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
inc
push
xor
cs
insb
add
add
inc
push
js
inc
add
add
add
push
inc
push
dec
xor
cs
insb
add
add
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
add
inc
dec
dec
xor
cs
insb
add
add
inc
gs
imul
add
add
outsl
insb
xor
cs
insb
add
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
ret
or
or
push
pusha
fmul
cmp
adc
inc
insl
insb
xchg
xor
sub
dec
fisubl
jbe
xor
loope
or
dec
lar
or
addl
xchg
test
pusha
add
dec
add
push
das
and
and
pop
and
aaa
jns
pop
mov
pop
cmp
rcrb
fstl
sahf
inc
mov
sub
xchg
xchg
call
aaa
pop
push
push
push
adc
or
pop
adc
mov
add
add
lock
in
in
push
pusha
cld
jbe
sbb
push
lea
lods
stos
add
nop
cmpl
je
push
push
jae
test
jecxz
mov
sbb
rep
jle
pop
or
outsl
add
push
pop
xchg
int3
js
sbb
xor
cmp
nop
cwtl
add
lea
add
push
and
mov
call
enter
rorb
xchg
shrl
pop
or
add
test
je
xor
mov
cmp
xor
jnp
adc
sbb
jne
inc
inc
jmp
sub
je
push
push
and
sbb
mov
xor
mov
rolb
or
addl
les
fstpl
push
adc
rclb
or
inc
or
aaa
ficoms
and
mov
mov
movb
add
outsl
int3
mov
add
push
call
mov
cmp
or
pop
pop
pop
pop
ret
mov
or
cld
daa
scas
call
jmp
adc
aas
aam
push
add
lret
push
call
cs
adc
mov
shrl
jp
pop
add
out
mov
push
xchg
and
add
sub
in
xor
leave
push
ret
clc
push
sbb
inc
popf
sbbb
ret
je
jmp
push
cmp
repz
sub
orl
lods
outsl
mov
mov
push
aas
sub
test
or
loope
and
fldcw
adc
outsl
add
mov
jnp
mov
and
sti
loope
call
sub
add
pop
dec
ds
shr
mov
jbe
jae
shll
adc
ret
add
add
or
pushf
or
nop
add
nop
cli
leave
call
push
test
in
cwtl
dec
adc
or
std
incb
push
jmp
pop
mov
add
inc
adc
jge
cmp
dec
jns
adc
lret
loop
lds
add
clc
cmp
jge
mov
add
add
sub
and
cli
incb
enter
sbb
cmp
ret
sbb
adc
add
jle
addb
pop
pop
dec
mov
xor
lds
adc
xchg
js
sbb
push
mov
sub
data16
jbe
or
call
mov
dec
xor
push
push
fcomp
movsb
push
not
sbb
dec
fisubs
mov
jae
sbb
push
sub
dec
ljmp
pusha
pop
cmpl
icebp
sub
push
addr16
movsb
push
mov
nopl
pop
pop
sahf
insl
cmp
cmp
ret
xorb
mov
mov
or
lock
push
push
lea
inc
mov
mov
push
sub
adc
mov
pop
cltd
and
add
mov
inc
mov
hlt
push
leave
dec
or
dec
jb
sbb
push
addr16
in
rolb
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
fstpl
in
in
pop
inc
mov
sub
xchg
nop
add
mov
cltd
xchg
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
cwtl
sbb
mov
clc
dec
test
into
gs
insl
jae
bound
in
and
inc
or
subl
rclb
pop
and
inc
les
inc
xchg
xor
jb
aas
test
divl
push
adc
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
adc
push
pusha
pop
add
jns
lock
jno
xchg
inc
adc
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
pop
ss
imul
jmp
sbb
rcr
cmp
mov
jl
sbb
iret
shr
pusha
loope
push
lea
push
fs
cmp
mov
add
sub
mov
sbb
sub
sbb
mov
and
sub
aam
inc
jno
pop
insb
imul
and
jb
iret
test
adc
jno
jg
imulb
loopne
ds
arpl
fs
mov
and
insb
jns
outsb
jge
inc
jmp
popa
fbstp
fldt
mov
call
fs
sub
insb
and
dec
xor
sub
rcr
cwtl
bound
sbbl
daa
popa
addr16
outsl
js
loopne
testl
adc
xor
or
and
dec
inc
xchg
push
inc
int3
imul
insb
shlb
imul
inc
clc
pop
mov
fmull
dec
jo
sub
pop
inc
iret
je
push
loopne
insb
sbb
mov
imul
inc
stos
arpl
rcrl
adc
push
add
mov
dec
or
rorb
scas
stc
addb
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
or
add
add
insb
fadds
add
add
adc
add
fadds
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
