pop
jne
add
add
lea
call
movl
mov
pop
ret
nop
inc
out
jle
add
testb
rolb
push
daa
add
sub
add
add
cmp
insb
sub
cmp
add
mov
mov
addb
push
adc
and
push
pop
and
add
and
add
shrb
popf
add
sbb
add
mov
into
sbb
xor
or
add
push
mov
push
inc
xchg
jmp
cmpsl
mov
push
movb
mov
mov
testb
mov
mov
push
push
jp
sub
or
rorb
mov
stos
stos
stos
push
in
in
add
stc
jns
cwtl
add
cltd
lcall
add
sahf
lahf
mov
mov
gs
pop
add
add
add
je
jno
sbb
mov
decl
pop
mov
adc
pop
clc
mov
lret
push
inc
into
xor
lret
mov
mov
lock
mov
movsl
mov
cmp
xchg
or
add
movsb
arpl
mov
sbbb
cmp
je
mov
sub
and
fsubrl
dec
push
sbb
sahf
xor
and
cs
push
pop
adc
jmp
dec
mov
push
adc
push
xchg
imul
imul
dec
add
or
push
cwtl
inc
push
xchg
xor
es
cmpsb
movsb
or
inc
add
push
add
addr16
and
mov
cmp
push
xchg
push
cmp
in
scas
inc
cld
add
lret
mov
mov
and
mov
jne
cmpb
cli
std
or
and
xchg
mov
and
aam
shl
or
jne
pop
fmul
cmp
lahf
rorb
and
loopne
popf
add
lock
in
pop
lea
jmp
out
mov
es
loop
cmc
arpl
out
mov
pop
jle
mov
sbb
push
dec
fsub
test
je
lea
out
rcrb
dec
jne
mov
lock
adc
push
scas
dec
clc
cld
push
add
rolb
push
lea
xchg
push
push
icebp
daa
popf
test
fisttps
je
push
or
sbb
sbb
add
add
jl
adc
sub
and
insb
push
mov
xor
add
faddl
sbb
push
xlat
aaa
or
sub
cmp
pop
mov
js
xor
mov
or
add
in
lock
adc
mov
push
lea
icebp
imul
frstor
mov
jbe
cmp
xchg
mov
int
mov
dec
pusha
or
movb
pop
lea
or
test
sub
inc
xchg
add
mov
jg
in
sbb
pop
jne
xor
insl
sbb
push
pop
adc
lcall
mov
cmpsb
mov
cwtl
sbb
inc
cmp
ljmp
inc
pop
mov
movsb
sbb
sbb
outsl
stc
cmpb
sti
add
leave
jp
mov
mov
int
mov
mov
inc
lods
add
loope
pop
insb
or
popf
pop
sbb
or
mov
loope
jne
sbb
dec
adc
add
adc
jle
loop
xor
aas
ljmp
iret
stos
mov
popa
fwait
fwait
jae
adc
stc
mov
aas
out
mov
ljmp
jecxz
cmp
sbb
and
push
leave
xor
aam
adc
lea
test
adc
cmp
leave
ret
adc
stos
inc
out
imul
notb
loope
lcall
dec
clc
inc
mov
or
xor
push
xlat
jb
orb
pop
xor
push
or
out
addb
pop
test
movsb
push
cld
inc
pop
int3
orb
jle
xor
fs
adcl
pop
add
cmp
jge
mov
inc
add
je
lock
jl
fs
setp
inc
in
push
mov
inc
add
sbb
ja
scas
cmp
fs
pusha
sub
adc
dec
in
jns
adc
dec
insl
pop
mov
adc
mov
jl
push
add
movl
outsb
sub
jns
add
mov
addr16
fcoms
lods
mov
sbb
jne
adc
adc
lods
xor
sub
dec
sub
aas
clc
mov
in
int3
into
lcall
xlat
inc
out
sbb
cmp
dec
push
call
mov
xchg
mov
push
add
outsl
jne
push
incl
lcall
into
rcll
dec
jle
sbb
xor
punpcklwd
or
stos
pop
mov
cmp
xchg
lea
push
xorb
push
add
push
das
push
mov
ss
negl
or
popf
mov
push
xor
adc
and
pop
pop
pop
mov
pushf
mov
pop
lea
es
aad
rcll
lsl
pop
clc
push
les
add
push
adc
lea
mov
cmp
pushf
and
add
popf
or
adc
mov
push
push
sbb
fsubrp
and
cmpsl
xor
lock
xor
cmp
lods
stos
jns
js
and
or
cmp
jne
push
sub
pushf
sahf
mov
sbbl
call
add
cmp
mov
mov
les
xchg
xchg
adc
leave
cmp
sbb
mov
xor
sub
sub
shlb
push
stos
push
sar
or
adc
pop
and
push
and
imul
addr16
sbb
in
stc
push
push
push
sbb
cld
movsl
pop
cmp
dec
repnz
lret
out
iret
push
ret
push
push
push
jge
add
pop
cwtl
or
adc
dec
rcll
repz
push
inc
push
xlat
sarl
inc
decb
jo
cmp
push
jne
push
push
aad
std
loopne
sahf
in
hlt
mov
loop
cmpsb
or
cmp
jns
movsl
arpl
jo
cmp
mov
dec
and
jbe
mov
pop
sub
push
jp
cmp
pop
sbb
dec
jns
add
push
jge
ds
xor
aas
enter
idivb
inc
mov
fs
arpl
add
mov
sar
js
xor
pop
jb
and
out
push
push
cltd
mov
jmp
sub
insl
and
cmp
test
inc
add
cmp
jle
test
into
xchg
lahf
add
je
inc
jle
pop
lahf
inc
shl
mov
jl
mov
and
mov
dec
ficompl
mov
je
sub
jmp
sbb
mov
mov
aaa
cwtl
movsb
jne
push
pop
pop
jno
push
sbb
or
mov
subl
or
sbb
push
dec
push
or
bound
mov
pop
xchg
or
mov
ret
push
inc
push
mov
dec
adc
push
mov
adc
es
mov
lret
xchg
fldcw
pop
cmp
sbb
sub
pop
ret
std
xchg
stc
in
fwait
xchg
loopne
scas
mov
sbb
inc
je
cmp
test
cmp
das
mov
test
lea
insl
dec
sub
push
mov
add
imul
or
or
adc
xor
add
scas
not
sub
mov
mov
mov
icebp
lods
sub
das
test
adc
jo
lcall
sub
rorl
jle
lret
mov
ret
push
fisubrl
or
test
inc
and
mov
cmp
jne
and
je
mov
push
add
add
add
jo
shll
add
loopne
pushl
fstpt
add
repnz
mov
push
jmp
int
add
jns
xchg
jae
les
int
dec
inc
je
inc
imul
push
sbb
add
in
rorl
inc
mov
push
enter
pop
adc
add
xchg
xchg
jmp
mov
jecxz
je
dec
or
out
movsl
imul
adc
xchg
sbbl
popf
adc
xor
fcomps
push
cmp
and
push
jmp
and
enter
dec
mov
mov
mov
mov
or
cmpsb
mov
inc
add
pop
test
push
das
es
jne
xchg
jecxz
and
jne
in
aam
call
cmp
es
mov
repnz
je
out
dec
enter
or
pop
clc
cmp
mov
or
xchg
out
cmp
lods
add
mov
xor
or
fbstp
mov
hlt
cmpsb
hlt
lcall
add
je
push
addr16
lahf
dec
jo
cmp
bound
insb
add
imul
lods
add
stos
mov
adc
pop
incb
call
ret
push
sarl
cmp
inc
jecxz
push
lods
pushf
sbb
daa
addr16
data16
pop
aad
inc
ds
adc
xor
int
insl
ficompl
js
adc
insb
and
xor
cmp
movb
xchg
add
adc
aaa
arpl
push
dec
mov
inc
push
xchg
inc
pusha
sub
fwait
cli
aaa
cmc
loope
jnp
call
mov
inc
pop
mov
not
pusha
mov
sub
push
leave
sub
sub
imul
mov
and
ljmp
leave
push
stos
adc
push
call
pop
adc
pop
xor
sbb
inc
jl
xor
mov
mov
and
and
loop
add
stos
mov
lcall
xchg
sub
lea
cmp
add
add
cmp
mov
call
mov
sbb
rcrl
push
push
xor
dec
inc
fs
xor
lods
xor
enter
js
push
cmp
insb
mov
xchg
jae
lods
loopne
add
pop
mov
add
jg
adc
icebp
dec
pop
ret
sub
inc
jmp
jae
cmp
add
sub
jp
daa
test
cmp
xlat
xchg
jo
jmp
adc
xchg
ljmp
sbb
push
mov
clc
testl
push
or
js
sub
sub
inc
cltd
sub
pop
pop
or
sar
push
sbb
jae
subl
jg
inc
adc
adc
daa
jg
pop
pop
fs
jns
xor
mov
push
in
push
mov
jg
je
loop
xor
pop
dec
adc
fdivrl
std
ret
pop
or
add
or
dec
je
dec
jne
xchg
shlb
fnstcw
inc
dec
mov
dec
iret
cmpsb
cmp
aaa
pusha
sbb
sbb
xchg
inc
push
and
and
adc
in
push
push
sbb
xor
shlb
jo,pn
mov
jg
inc
push
push
push
or
cmp
hlt
hlt
pop
cmp
ror
and
or
repz
mov
stos
sbb
sbb
push
push
enter
sub
jl
push
mov
mov
into
pop
lret
fldenv
imul
aam
mov
pop
mov
cltd
pusha
push
iret
dec
fs
enter
sbb
adc
mov
in
push
inc
push
test
inc
add
push
insb
pushf
mov
mov
mov
stos
imul
mov
push
push
rep
mov
mov
adc
push
clc
inc
jo
adcb
rorb
test
call
test
or
arpl
aam
pop
ffreep
adc
sbb
sarl
pop
mov
cmp
sbb
mulb
lcall
push
fidivrl
mov
pusha
dec
ds
sub
push
popf
and
push
sub
cmp
push
dec
sahf
xor
aaa
inc
adc
imul
dec
fisubrs
xchg
notl
mov
push
lods
push
test
enter
daa
mov
xchg
icebp
loope
sub
fbld
mov
cs
and
add
add
or
cmp
jne
push
jmp
xor
adc
inc
cmpsl
sbb
mov
add
mov
inc
ficoml
dec
ficompl
inc
rol
fsubl
jno
add
je
lcall
repnz
movsb
adc
inc
push
push
push
push
xchg
push
hlt
push
sahf
or
call
xor
scas
cmp
test
int3
xor
jbe
or
jae
mov
in
insl
inc
ret
or
adc
imulb
push
and
sub
les
xor
cs
and
mov
lcall
repz
lea
test
into
nop
pcmpgtw
aas
mov
cld
fistl
dec
and
rcll
jbe
mov
nop
push
push
push
dec
push
jo
das
mov
xor
cld
test
adc
lret
lret
clc
add
jle
gs
dec
inc
aam
jo
push
mov
rclb
dec
nop
mov
mov
mov
jle
mov
popa
iret
push
or
stos
fbstp
repnz
test
or
sbb
cmpsl
jecxz
sbb
sub
sarb
daa
int
xlat
aas
ret
push
aas
test
pusha
xchg
cmpsl
test
jge
outsl
add
xchg
xchg
mov
pop
movsl
jo
hlt
fists
subl
jo
shlb
or
mov
xor
lcall
nop
shll
js
bound
mov
push
loop
int3
sbb
fwait
or
pop
fisubs
adc
inc
fists
push
push
rorl
scas
int
inc
das
arpl
mov
inc
push
or
pop
test
std
xor
push
push
cmp
jecxz
daa
dec
dec
jo
test
test
inc
je
sub
inc
mov
mov
push
jl
xchg
xchg
cld
pop
stc
stc
mov
lods
gs
sub
andb
fisttps
inc
or
scas
fsqrt
nop
pop
adc
push
movsb
jne
dec
cli
inc
lds
add
mov
xor
dec
dec
add
ret
jl
das
loope
dec
push
push
loope
add
mov
fs
sub
sbb
pop
xor
addr16
mov
ret
cmp
inc
push
or
pop
loop
cld
outsl
mov
push
fstps
js
add
lock
inc
xor
sub
icebp
outsl
jno
inc
nop
and
jge
movsl
fidivl
in
sarb
icebp
push
mov
or
xor
mov
jg
mov
inc
scas
mov
jne
js
sub
les
ret
push
and
mov
and
daa
push
sbb
cmp
decb
or
jo
mov
repz
adc
or
xchg
fisubs
mov
pushf
push
push
push
sbb
test
sti
pop
cli
adc
mov
pop
or
out
mov
rol
in
sbb
insl
mov
test
or
mov
aam
cmp
or
dec
dec
std
cwtl
ja
pop
adc
xor
mov
jne
xchg
pop
js
and
sbb
inc
jbe
hlt
sub
jmp
push
aas
pop
cwtl
cli
dec
ljmp
pop
rclb
cltd
push
hlt
adc
and
push
fistl
xor
push
push
mov
or
std
jmp
shrl
mov
mov
mov
mov
mov
mov
jl
je
mov
mov
insb
push
mov
pop
pop
push
mov
mov
push
dec
dec
inc
mov
mov
cmp
xor
in
call
mov
nop
in
in
in
in
xchg
cwtl
pushf
mov
movsb
test
mov
in
in
in
mov
mov
in
enter
in
in
in
aam
fsub
in
in
in
in
in
in
lock
in
in
in
hlt
clc
cld
add
jbe
inc
add
or
jbe
jbe
adc
sbb
jbe
jbe
and
sub
jbe
jbe
xor
cmp
jbe
jbe
inc
dec
dec
pop
inc
jbe
push
push
lods
jbe
insb
cmp
fs
jbe
push
jbe
jbe
jl
test
jbe
mov
jbe
mov
cmp
mov
mov
inc
popf
popf
popf
sbb
popf
popf
popf
popf
int3
rcl
fcomps
in
in
popf
popf
popf
popf
lock
clc
cld
addr16
xchg
or
addr16
sbb
addr16
sub
adc
xchg
in
lock
push
inc
cmp
mov
andl
mov
cld
sub
scas
inc
adc
inc
or
add
adc
sub
mov
call
jmp
mov
mov
movl
pop
or
ss
mov
adc
test
adc
or
inc
out
or
ret
std
mov
loope
inc
push
push
cmp
xor
mov
mov
mov
dec
or
les
sub
pop
mov
dec
pop
push
pusha
ret
add
loopne
add
daa
inc
ret
sub
int
cmp
test
inc
loopne
push
jno
cld
in
cmp
mov
cmp
mov
jmp
icebp
ljmp
jns
adc
sbb
push
addr16
lret
adc
cmp
dec
je
mov
xor
inc
push
shrl
mov
xchg
jb
sub
pop
leave
enter
and
mulb
push
cld
push
shll
or
arpl
inc
data16
or
push
cmp
les
enter
or
mov
sbb
sbb
or
int3
ret
xchg
pop
test
pusha
incb
jg
cmp
and
addb
inc
jb
add
and
ret
nop
mov
and
push
shll
or
and
inc
dec
mov
mov
cmp
je
cmp
sbbb
sbb
rolb
sbb
movsb
jo
testb
je
movzwl
aam
push
fdivs
cmc
push
pop
push
push
push
test
mov
jno
lods
cwtl
fsubl
adc
in
mov
nop
mov
pop
mov
jns
pusha
push
dec
xchg
mov
mov
mov
in
in
lods
mov
push
imul
rolb
or
adc
ljmp
inc
ljmp
sub
sub
fcoml
daa
leave
mov
leave
mov
mov
mov
std
xchg
cmp
cld
pop
push
pop
ret
or
in
repz
cmp
mov
je
inc
lea
and
fs
pusha
push
xchg
lea
out
mov
and
lods
mov
or
or
stos
sub
test
cs
jmp
push
aaa
sub
out
mov
icebp
test
sub
cmovb
shl
test
out
or
inc
stc
adc
dec
xorb
pop
ljmp
cwtl
jl
push
lret
sub
loopne
imul
jl
dec
pop
jnp
fwait
shlb
inc
enter
fmul
jge
add
push
sti
push
cmp
mov
mov
xor
mov
je
sti
aas
inc
dec
rcrb
and
cmpsl
add
sbb
inc
cmp
jmp
add
mov
ret
loopne
ja
mov
ss
mov
mov
push
mov
imul
rorb
inc
mov
in
inc
sbb
dec
jno
les
dec
loop
scas
aam
mov
out
push
push
into
add
push
cld
and
or
adc
sti
sub
ret
addb
or
mov
or
jno
insb
xorb
push
es
xchg
movl
jo
fs
push
and
sahf
icebp
push
ss
inc
inc
cmp
js
out
cs
and
sarl
sbb
push
adc
es
mov
add
xor
out
sahf
out
loopne
aam
daa
mov
inc
daa
mov
psubw
mov
or
sub
and
icebp
xchg
jo
adc
or
mov
lahf
cltd
daa
pop
aaa
push
aaa
jo
cmp
aaa
push
xchg
loope
das
inc
aaa
cmp
ss
loope
cmp
aaa
sub
and
push
aaa
sbb
aaa
insl
mov
adc
or
mov
lcall
sbb
add
ss
out
call
loop
ror
sahf
out
cmp
les
mov
or
dec
bound
cmp
inc
inc
xorb
cmp
xor
and
sbb
adc
push
cmp
cmp
xchg
add
cld
aaa
divb
lock
lret
loope
cmp
aaa
in
and
aaa
fwait
jo
jl
cmp
cmp
jns
cmp
arpl
aas
lret
cmp
add
fistpll
les
mov
pop
call
jns
out
add
add
jns
lahf
cmp
add
lahf
out
push
lahf
lahf
mov
dec
mov
roll
clc
div
into
in
and
jge
pop
lock
dec
adc
sbb
jl
cs
cmp
pop
cwtl
lahf
mov
iret
iret
iret
jbe
mov
mov
jge
ror
in
out
fsubrp
sub
out
cmp
ret
movl
insl
clc
lock
sub
sti
cmp
es
add
push
pop
add
in
jge
jo
idivl
in
lock
mov
pop
out
jae
dec
stc
jno
out
dec
dec
lock
loope
in
pusha
dec
jl
push
inc
jecxz
rol
xchg
dec
mov
xchg
dec
out
mov
dec
in
xchg
push
cmp
testl
js
out
jle
add
pushf
push
adc
dec
test
push
fbstp
adc
inc
insb
jns
jo
dec
push
pop
push
push
dec
dec
sbb
xchg
hlt
dec
in
aam
dec
push
repz
dec
xchg
dec
out
cmp
dec
and
mov
jo
sahf
testb
sbb
push
cmp
push
xchg
dec
push
pop
push
outsb
push
xorb
ret
dec
mov
push
dec
ds
sub
add
push
cmovno
ret
loope
dec
adc
or
or
cmp
mov
cvtps2pd
mov
push
push
push
cmpsb
or
mov
loope
or
test
out
cmp
icebp
pop
or
jo
sbb
femms
adc
lcall
ret
das
add
or
loope
cmp
adc
adc
xchg
or
aaa
xchg
loope
adc
push
or
adc
sbb
sbb
add
mov
adc
push
xchg
loope
or
or
sbb
sbb
adc
or
ret
adc
dec
adc
ret
loope
nop
inc
add
or
sbb
repz
add
sbb
xchg
loope
push
push
adc
divb
mov
push
xchg
loope
add
pop
loope
cmp
adc
push
push
lock
cmp
sbb
xchg
pop
adc
adc
adc
ret
loope
cmp
adc
add
add
sbb
xchg
add
adc
xchg
loope
push
rorb
cli
or
cmp
mov
inc
adc
pop
add
jecxz
push
xchg
loope
or
push
popa
jno
sbb
or
or
push
lret
or
les
sahf
out
add
stos
lods
and
lret
sbb
jecxz
pop
and
and
sbb
call
adc
jl
cwtl
dec
mov
ret
loope
pop
dec
push
dec
dec
dec
cmp
xchg
dec
xor
dec
sbb
xchg
loope
dec
or
dec
fimull
dec
jno
sbb
mov
dec
test
mov
xor
mov
xchg
hlt
push
or
push
and
ret
loope
cmp
push
enter
mov
mov
xchg
fcoms
add
fidivs
iret
add
shlb
gs
add
add
push
popa
jb
insl
jae
jo
insb
jo
and
int
jo
cs
insb
dec
inc
inc
xor
cs
dec
pop
cs
dec
add
inc
js
inc
gs
or
shrb
add
pop
insl
bound
insl
jo
lret
push
cmpsb
add
jne
lds
bound
cs
gs
gs
pop
push
xor
add
je
imul
inc
inc
pop
inc
pop
pop
pop
jb
ja
push
push
inc
push
push
push
inc
mov
imul
cltd
cmp
mov
pushf
dec
pop
arpl
insb
test
xor
add
ss
lds
popa
dec
cmp
imull
add
pusha
ret
jb
divps
xchg
pushf
test
push
jae
ret
push
popf
popa
fs
push
mov
imul
mov
insl
insl
outsl
fs
ds
adc
andl
adc
cmp
push
outsl
insb
data16
inc
jbe
into
inc
bound
gs
xchg
aaa
cmpsl
inc
dec
jae
xor
xchg
dec
enter
lret
les
add
pop
sub
dec
jne
inc
or
jns
pusha
xchg
fsubs
add
rcll
jb
bound
or
scas
inc
jae
filds
push
push
push
in
push
push
movsl
adc
pop
push
jns
adc
imul
jns
dec
xor
xorb
push
dec
dec
stos
shrl
in
aaa
inc
js
call
sbbb
inc
fs
loopne
xor
add
add
jl
add
inc
gs
or
sbb
push
fs
out
add
clc
inc
adc
addb
outsb
stc
es
add
or
insb
in
mov
stos
mov
arpl
outsl
xor
ss
inc
imul
fdivl
mov
xor
lods
dec
mov
mov
ja
data16
xlat
int3
xor
jo
jno
daa
sub
es
mov
jecxz
je
fdivl
into
jo
outsb
outsw
iret
xor
push
dec
inc
dec
xor
imul
xchg
dec
cmpsb
in
fimull
jne
lret
push
push
imul
push
push
mov
in
cs
arpl
mov
insb
imul
pusha
xor
mov
dec
jae
cwtl
push
mov
inc
bound
push
mov
nop
push
lock
push
imul
or
add
dec
fmuls
mov
lds
dec
xchg
xchg
lcall
gs
pop
fmulp
sarl
inc
inc
push
inc
push
dec
push
mov
arpl
sub
mov
push
dec
fidivl
mov
add
mov
dec
test
dec
repz
sbb
mov
push
das
dec
lret
xor
cmp
std
sub
pop
cmp
xor
xor
add
or
inc
jae
and
mov
push
outsl
outsb
mov
pop
push
jne
push
lock
sub
jb
xchg
out
xor
add
xor
sub
addr16
sub
jns
dec
popa
push
push
and
and
pop
dec
cmp
lds
arpl
dec
push
xor
addb
push
inc
push
push
and
popa
dec
push
cmp
outsb
inc
or
inc
dec
dec
and
dec
dec
add
add
mov
push
sub
outsb
sarl
add
add
stos
int
mov
mov
mov
push
push
cmp
fldenv
cs
dec
xor
popf
imul
pop
inc
aad
test
add
jb
dec
adc
or
pop
xor
popf
add
xchg
mov
xor
popa
and
fidivl
and
pop
pop
dec
push
inc
dec
mov
inc
dec
inc
pop
mov
jecxz
inc
sub
and
or
fwait
lds
andl
pop
jae
mov
jae
mov
pop
push
jne
into
adc
add
lahf
in
xchg
popa
mov
outsb
cmp
push
inc
inc
cwtl
inc
movsl
inc
push
pop
jge
ss
and
add
mov
sbb
xchg
int3
stos
shlb
into
cmp
mov
jae
jo
inc
cmp
and
outsl
aaa
or
jb
rorl
inc
add
inc
and
xchg
clc
add
dec
mov
dec
pop
ret
ja
imul
je
pop
push
lret
jae
jno
mov
shl
addr16
jne
aaa
arpl
imulb
insl
outsb
test
inc
push
insl
jecxz
cmp
bound
sub
push
adc
pusha
popf
dec
add
cs
inc
loopne
ret
and
add
sbb
add
das
add
jl
push
sbb
add
add
cmpsl
and
das
or
add
add
sbb
jnp
imul
in
xor
loopne
jno
loop
add
jl
in
and
bnd
lahf
fwait
xor
mov
andb
cld
jns
rcrb
lods
pop
xor
sbbl
add
sbb
sbb
mov
mov
xor
add
push
sub
sub
loop
add
inc
fists
inc
es
add
mov
and
and
in
nopl
or
or
adc
push
add
add
sub
loopne
sbb
sbb
add
cld
pop
pushf
xchg
in
dec
xchg
add
nop
push
enter
subb
xor
jmp
or
mov
mov
cmp
add
add
xor
sbbb
adc
sbb
pushf
push
push
les
add
out
adc
add
add
push
cmp
pop
ret
push
add
add
push
aaa
mov
add
jno
ljmp
push
lahf
lock
mov
sub
out
das
push
js
cmp
mov
mov
add
mov
sbb
sub
push
push
sbb
adc
and
add
test
jno
mov
loope
push
aam
nop
mov
pop
adc
add
ficomps
mov
cltd
call
sub
dec
test
pop
mov
add
lods
mov
lahf
or
cli
es
xor
jo
push
adc
or
pop
popf
es
push
add
jg
push
adc
jb
ljmp
aam
dec
nop
mov
ss
enter
adc
loopne
aaa
pusha
sub
add
push
or
imul
mov
add
push
sbb
addr16
jl
push
mov
cmp
xor
add
push
xor
mov
jnp
iret
mov
xor
push
loopne
or
add
pushf
jne
lcall
lret
insb
mov
mov
and
pop
icebp
sub
es
rep
stos
mov
out
xor
push
nop
pop
icebp
ds
add
cld
clc
lret
mov
or
add
add
lea
insb
mov
push
xor
ss
dec
mov
add
add
je
into
sbb
xorl
ret
xor
jmp
sbb
and
roll
add
and
addl
sbb
sub
cmp
hlt
pop
push
push
push
cwtl
inc
imul
dec
push
lods
mov
push
add
das
and
mov
mov
test
cltd
or
push
notb
add
mov
test
pop
add
mov
push
scas
push
and
jns
and
sub
add
sbb
rcr
xor
insb
into
dec
dec
sbb
sub
movsl
adc
inc
add
add
cmp
jne
mov
add
add
ffreep
ss
mov
and
sbb
lret
adc
push
push
add
add
fstl
push
pop
adc
add
mov
or
mov
imul
pop
rorb
add
cltd
js
or
or
loope
clc
push
test
add
cmp
add
jne
jb
sub
or
add
or
push
arpl
daa
mov
push
jp
shrl
pop
sbb
or
mov
je
faddl
sbb
add
test
push
adc
pop
push
mov
add
add
ljmp
xchg
jecxz
push
scas
push
into
test
push
clc
pop
push
arpl
or
cwtl
push
ja
cmp
adc
mov
push
jne
je
movl
pop
js
ds
pop
jne
insb
cmp
mov
iret
fs
adc
push
out
in
push
je
or
xchg
repz
add
test
mov
xor
nopl
mov
sbb
or
adc
jnp
testl
mov
in
dec
imul
cmp
mov
repnz
jo
test
push
add
add
lcall
cmp
adc
inc
mov
sbb
add
cld
inc
dec
call
add
and
shrb
cmp
loopne
bound
test
mov
push
xchg
dec
sar
movl
shll
enter
shlb
pop
fsubrl
leave
add
push
or
cltd
push
add
jbe
subb
jne
outsl
ljmp
cli
sbb
adc
or
add
push
jne
mov
dec
or
add
ss
fsts
lea
lea
std
adc
repz
adc
lea
add
mov
pop
cmp
jo
sub
int3
push
leavew
adc
add
add
sbb
cmp
pop
push
cmp
jbe
pop
inc
mov
add
cmpb
xor
movsb
cmp
mov
jns
inc
cmpsb
add
xor
out
sbb
and
testl
add
add
sbb
or
jg
and
xor
je
or
mov
adc
add
je
xchg
cwtl
and
lds
xor
push
bswap
into
xlat
add
dec
jmp
sbb
mov
and
adc
jle
cmp
add
mov
add
push
ss
push
fcoml
add
sbb
out
mov
jnp
jns
loop
adc
add
adc
xor
push
mov
add
ret
push
jl
add
xorb
cmp
fwait
gs
adc
in
dec
jns
add
add
mov
pushf
incb
mov
adc
js
sub
and
mov
add
add
pop
sbb
cmp
faddl
jne
dec
fbstp
scas
dec
pop
mov
push
adc
add
add
add
and
or
mov
int3
mov
rcrl
rclb
add
jns
mov
in
pop
lds
and
lret
daa
dec
cltd
into
jge
xchg
mov
dec
cmp
adc
add
adc
in
or
mov
fistps
add
add
sbb
and
cmpl
inc
cmp
sbb
add
insl
dec
cmp
add
roll
or
out
notb
jb
mov
push
add
jecxz
aam
int3
shl
and
lret
iret
and
add
fld
lahf
xchg
out
in
adc
jo
push
in
mov
and
lods
sbb
cld
repz
add
lds
sahf
cltd
scas
xchg
cmp
add
sbb
lahf
push
add
add
cmp
xor
lret
adc
daa
and
add
xchg
and
add
mov
out
mov
in
sbb
add
add
add
and
sub
push
mov
sub
call
pusha
and
add
loopne
loope
hlt
push
push
sub
cs
aad
xchg
mov
fcomps
cmp
sub
add
add
or
stos
cmpsl
cmp
aas
dec
jmp
pushf
push
mov
call
or
addr16
int3
je
inc
rorl
sub
add
adc
aad
adc
push
mov
js
add
add
cld
mov
call
jbe
cmp
mov
and
in
push
or
jecxz
pop
sbb
loopne
enter
cmpsb
jb
test
add
out
jnp
sub
pop
pop
pop
test
inc
add
sbb
mulb
jmp
loope
or
sub
insb
pop
and
rclb
and
add
adc
add
cmp
add
stos
add
in
mov
add
push
inc
jb
cmc
pusha
cld
add
call
dec
aaa
call
pop
mov
inc
add
add
mov
mov
mov
icebp
loop
mov
fdivrl
stos
add
mov
lea
nop
pop
cmp
add
xchg
mov
sub
add
int3
push
rolb
xlat
mov
push
enter
inc
mov
or
add
cld
lret
negb
add
ror
and
jns
pop
jge
add
add
testb
mov
in
and
push
push
call
cmp
jge
add
add
ljmp
mov
cmp
add
in
mov
jbe
mov
sbb
and
xchg
add
rcrl
add
jecxz
jecxz
add
shl
jne
push
mov
push
test
add
pop
or
add
add
shlb
test
add
inc
jl
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
inc
fisttpll
add
cmp
inc
iret
loope
mov
movl
add
add
xor
jae
jbe
xchg
rclb
dec
xchg
inc
lahf
adc
test
fiaddl
shlb
sbb
jl
btcl
sti
add
pop
jl
pop
pusha
jl
add
add
ds
add
adc
call
mov
add
je
les
es
cmp
adc
add
lea
mov
pop
fwait
cmp
xchg
outsb
adc
pop
pushf
mov
loopne
add
add
aam
push
mov
insb
rclb
aam
or
popa
mov
jo
rorb
dec
inc
dec
fsub
pop
add
and
pcmpeqw
inc
mov
add
add
rclb
cwtl
lea
sbb
cwtl
mov
push
sar
lss
dec
rcrb
add
add
jge
mov
cmp
andl
mov
nop
dec
add
mov
mov
fsub
push
adc
mov
and
xchg
loopne
stos
push
dec
sbb
insl
inc
cwtl
inc
rorb
sbb
xor
sbb
jmp
mov
add
add
andl
shrb
test
cmp
push
push
push
cmp
lods
daa
rcl
mov
ret
inc
adc
add
stos
xor
jb
pop
adc
add
pusha
push
mov
decb
mov
add
or
adc
add
add
arpl
sbb
insb
cltd
xor
pop
mov
sarl
lds
mov
xor
add
jo
add
add
add
lods
xor
sbb
adc
lcall
jno
or
je
lds
cs
fxch
add
xlat
inc
int3
fs
add
incl
fdivrl
mov
jb
pusha
cmp
scas
mov
je
adcl
inc
fisttps
addb
hlt
leave
dec
clc
nop
mov
dec
mov
jo
ret
add
add
sub
lcall
mov
pop
mov
adc
mov
jb
lcall
mov
add
add
jmp
add
pop
dec
hlt
lea
push
rol
pop
pop
inc
push
cmpb
inc
cmp
add
add
mov
ret
inc
xor
push
push
or
xchg
add
mov
je
push
test
add
add
lret
pop
pop
mov
mov
or
cmpl
add
nop
add
mov
adc
fsubr
add
je
adc
cmp
and
lds
adc
xorb
push
mov
pop
sbb
add
cmpl
jae
sbb
stc
jne
cmpl
jne
push
dec
xor
xchg
xchg
add
fimull
cmp
je
add
add
sti
les
mov
je
sbb
loopne
cmp
jb
jle
sub
rolb
jmp
push
sbb
add
jmp
push
xchg
dec
dec
mov
pop
inc
push
add
add
adc
push
add
pop
faddp
mov
push
sti
xor
xlat
pusha
push
and
add
adc
mov
add
popf
sub
add
add
mov
push
and
add
mov
jmp
sub
loopne
popf
add
add
js
jne
lcall
mov
push
add
add
jne
mov
mov
inc
mov
and
mov
cmp
loope
add
js
ds
sar
ja
lods
mov
add
in
lea
push
sbb
icebp
pop
sbb
jecxz
xor
aas
add
or
aaa
cmp
cmp
add
scas
sbb
mov
mov
push
push
fstpl
sbb
xchg
push
cmpsb
add
and
aaa
je
dec
pop
rcl
pop
pop
push
add
xorb
in
mov
pop
fisubl
jns
add
adc
mov
imul
pop
aam
test
or
leave
imul
data16
add
aad
cmp
test
jnp
and
push
cwtl
or
add
add
cmp
movsl
add
outsl
inc
in
add
out
xor
jle
in
or
in
test
or
add
int
lock
cmp
sahf
dec
add
sbb
and
add
add
sub
sbb
xlat
insl
int
in
jno
and
pop
mov
or
lock
cmp
in
push
jl
mov
dec
add
inc
pop
nop
cltd
mov
loope
add
add
push
loopne
mov
add
add
mov
push
repz
sub
sahf
out
std
sbb
cmp
sub
iret
jns
sub
add
add
push
add
in
sub
add
xchg
pop
fdivrs
add
sbb
or
or
shlb
imul
and
js
andl
test
loopne
pop
pop
inc
inc
dec
into
dec
push
push
pop
into
mov
fs
add
jo
xchg
add
rolb
inc
xor
out
cmp
sbb
add
aad
pop
push
into
pop
mov
or
dec
push
add
js
pop
adc
in
lea
dec
add
mov
push
jb
push
add
add
test
pusha
push
mov
jae
sub
mov
mov
mov
mov
push
ret
or
cli
push
cmp
xor
mov
or
mov
cmp
cmp
jle
and
push
push
popl
mov
andl
add
add
push
jae
push
add
rcrb
mov
mov
cmp
fs
xor
sub
jno
sbb
add
fiadds
add
push
jae
out
add
ljmp
add
mov
adc
pop
pop
rclb
cmp
in
push
rcrb
add
push
mov
int3
jge
add
or
add
sub
es
je
add
mov
add
enter
push
call
or
jae
fsubrs
inc
add
mov
popa
es
pop
add
add
test
push
push
idivb
orb
and
je
stc
fistl
push
add
add
sbb
jle
bound
and
xor
rol
mov
aas
xchg
mov
jne
aam
add
push
loope
test
xchg
and
stos
push
add
imul
push
loopne
or
sbb
lock
test
aas
jmp
cld
cmp
shl
add
jo
pop
in
mov
loope
std
or
out
std
in
push
movl
cmpsl
lock
sbb
in
faddl
scas
sbb
mov
lock
and
iret
aam
ss
lods
or
cmp
pusha
ret
scas
adc
add
add
sub
sarb
or
cmp
arpl
fbld
add
lock
iret
lahf
in
rcr
mov
adc
test
mov
add
loopne
jbe
mov
dec
ss
gs
ljmp
xchg
add
cmp
adc
push
ljmp
push
add
iret
and
outsl
bound
movsb
iret
adc
add
add
or
aaa
cmpsb
repnz
xor
add
mov
and
add
cmp
xchg
sbb
push
outsl
mov
fsubrs
rcrb
add
out
mov
lock
iret
mov
xchg
rolb
out
jecxz
cmp
xor
ss
jno
push
cmp
add
add
jle
mov
jle
ror
fcmovbe
lahf
leave
xlat
repz
shl
clc
jecxz
icebp
imul
adc
movsl
add
add
fadd
or
xor
xor
cwtl
push
aas
inc
xor
pop
sbb
xor
inc
add
pop
cmp
or
jg
push
test
or
xchg
or
iret
add
add
out
sub
out
or
loopne
add
add
jp
stc
jmp
push
mov
inc
xor
fists
and
push
fst
repz
sub
add
inc
enter
inc
sbb
fdiv
cmp
int3
mov
xchg
inc
je
roll
orb
cmp
mov
repz
stos
in
inc
sbb
mov
add
jo
bound
inc
loope
add
inc
rolb
inc
cmp
ret
hlt
inc
or
inc
xor
retw
insb
and
push
xor
loop
dec
popa
sub
add
xchg
icebp
cmp
stos
push
adc
or
add
sbb
lods
add
ret
loope
add
and
sbb
add
lods
add
add
and
sbb
popa
and
addb
add
add
mul
jo
nop
add
xchg
cmp
iret
push
adc
cli
inc
lock
les
rolb
push
lods
inc
enter
ljmp
add
add
dec
dec
dec
dec
or
mov
inc
jle
dec
scas
xor
repnz
lahf
push
add
daa
xchg
icebp
pop
sbbb
hlt
sub
add
xor
gs
mov
push
add
jae
add
fistpll
popf
inc
pop
sahf
pushf
jno
add
add
xor
pop
add
mov
sub
and
insl
or
add
popa
adc
arpl
sub
push
inc
add
pop
fnstcw
cld
jae
pop
add
cmp
divb
add
add
outsb
pushf
mov
xor
add
inc
shlb
rolb
nop
jae
push
jns
mov
add
dec
pop
fcmovb
pop
jns
add
adc
mov
pop
fsubl
dec
out
out
inc
and
test
cmp
mov
inc
xlat
loop
js
xor
and
mov
in
jae
dec
cmp
dec
cmp
add
and
inc
lret
dec
and
sbbl
out
add
je
inc
jns
aas
push
xchg
add
gs
push
add
jnp
ror
pusha
pop
add
push
inc
add
outsl
imul
push
mov
insl
fldl
add
add
push
insl
call
imull
adc
jne
mov
ret
mov
mov
add
bound
outsb
int3
js
inc
sahf
shll
addb
loopne
jne
xor
icebp
mov
popf
sub
outsl
shrl
jne
movsl
add
outsb
test
fs
imul
and
inc
xor
add
imul
push
push
sbb
dec
inc
or
xchg
mov
lods
add
inc
imul
dec
addr16
cmp
outsl
shrl
dec
inc
inc
push
push
fmuls
cmc
or
push
dec
cmp
and
int
sub
cmp
adc
rcrb
add
jp
rol
int3
dec
fs
imul
cld
mov
inc
cmp
mov
add
lock
add
add
sarb
mov
imul
mov
leave
mov
add
add
andl
shlb
clc
mov
mov
shll
shll
roll
mov
lds
inc
jmp
fcompl
add
jecxz
jbe
jge
inc
loopne
pop
inc
inc
outsb
repz
add
int3
or
xchg
mov
jns
pop
push
pop
inc
pop
mov
add
push
push
add
xorb
sub
lret
or
add
adc
dec
flds
sbb
push
mov
aad
insl
dec
mov
push
add
sbb
push
dec
pop
dec
push
dec
dec
pop
inc
inc
push
add
add
dec
inc
inc
push
mov
mov
mov
les
xchg
add
add
jo
sub
and
test
xchg
nop
bound
enter
mov
add
outsb
and
insb
jb
push
cmp
sub
jbe
push
cmp
js
mov
inc
cmp
pop
inc
dec
push
inc
jb
pop
addr16
inc
add
add
inc
lret
add
sbb
adc
addb
add
cli
add
in
adc
adc
add
xorb
add
adc
push
mov
dec
insb
rcrl
sub
add
sbb
mov
mov
or
sbb
adc
cmp
out
add
add
jns
pop
push
lds
gs
push
into
inc
ret
and
add
cmp
mov
into
sbb
add
add
dec
xchg
jmp
int3
daa
sbb
test
sub
add
adc
pop
fwait
in
mov
frstor
add
add
sbb
inc
jecxz
sbb
roll
mov
in
fcoml
cltd
sub
push
pop
ror
push
add
jle
jp
and
test
rolb
xchg
ffree
mov
xor
or
xchg
and
ret
add
add
push
mov
outsb
pop
scas
lret
loop
and
ljmp
add
xlat
jae
mov
hlt
sbb
insl
or
ret
mov
xchg
shll
sbb
test
xor
add
sub
jg
imul
sahf
adc
inc
mov
dec
cmp
or
push
jno
pop
out
jae
jns
mov
mov
mov
push
add
inc
jmp
mov
or
push
jae
xchg
add
cltd
add
add
xchg
in
cwtl
negl
rcrb
lmsw
or
xor
add
mov
int
idivl
sbb
sub
or
in
shll
stc
ljmp
mov
test
or
pusha
mov
push
pushl
jecxz
adc
and
popa
arpl
idivl
lods
cld
dec
add
jo
mov
push
inc
cmp
jno
push
pop
and
movsb
mov
pop
outsw
jo
mov
sbb
sarb
jno
xor
inc
testb
icebp
repz
shr
add
loope
jo
jmp
test
test
mov
xchg
pushf
fcompl
cld
push
push
shlb
gs
mov
push
mov
test
imul
mov
xor
stos
jno
xor
xlat
xchg
xchg
es
bound
xor
xor
mov
insb
gs
push
outsb
ja
cmp
imul
add
das
dec
jl
into
lock
enter
adc
cmp
push
subb
cld
add
lods
xor
xor
adcl
rcrb
mov
call
cmp
jae
rclb
xor
inc
xor
mov
lea
mov
mov
call
add
inc
icebp
lea
add
mov
call
sbb
add
sub
jae
mov
call
jmp
mov
call
inc
adc
dec
jne
inc
mov
addb
add
add
fcoms
imull
lock
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
add
ret
inc
call
adc
call
push
add
ret
sub
sbb
ret
aaa
push
push
or
lods
xchg
cld
sub
push
jecxz
add
adc
aas
rorb
mov
inc
mov
shr
and
add
jae
xor
dec
jne
add
or
not
sub
pop
je
adc
push
xorl
jecxz
js
jecxz
sub
call
call
clc
xchg
rclb
rorb
add
ret
push
bound
add
mov
push
imul
and
and
or
das
imul
lock
dec
add
add
dec
pop
add
mov
pop
inc
movb
addb
sbb
iret
ret
jo
inc
sbb
ret
loope
add
inc
pusha
add
fsubl
rol
mov
add
add
out
pop
cmp
aad
mov
dec
xor
or
cmpsb
add
add
xlat
nop
xor
pushf
inc
pop
loopne
pop
and
add
pop
movsb
and
add
push
and
add
push
push
call
pop
sub
daa
andb
mov
add
mov
adc
push
or
add
lea
mov
shlw
dec
and
jecxz
jecxz
sub
cmpl
sidtl
add
shlb
push
mov
sarb
mov
lea
cmp
add
add
lea
sbb
test
lret
jns
mov
xor
pusha
add
add
test
push
push
sbb
mov
rcrb
jne
xchg
call
jge
mov
filds
inc
xor
leave
mov
test
add
pop
cmp
lcall
sahf
jne
pop
test
jmp
test
add
mov
jg
lea
xchg
push
pop
sbb
xchg
xlat
inc
mov
test
add
mov
sub
jae
test
stos
xchg
ror
and
add
or
lea
add
xor
add
jnp
pop
add
push
jmp
inc
add
add
clc
and
iret
xor
add
or
cmpsb
sahf
rol
add
outsb
test
cld
inc
sbb
mov
adc
enter
mov
push
call
sub
sub
add
add
roll
sti
cmp
add
je
push
mov
add
lock
les
dec
stos
pop
add
add
inc
add
add
in
or
jne
jle
cmp
jno
pop
leave
add
and
les
sbbb
inc
aaa
xor
cmp
je
mov
push
add
sub
cmpb
mov
lods
mov
add
lods
sbb
pop
add
sub
je
lock
sbb
movw
add
lods
data16
add
into
data16
shrd
sti
cmp
xor
add
add
add
add
dec
das
push
dec
xor
jmp
lea
fldenv
mov
dec
fwait
rcr
or
loop
pusha
mov
add
add
data16
loop,pn
and
mov
and
and
push
jmp
sbb
push
clc
xchg
push
addl
xor
arpl
test
lea
clc
xchg
sbb
jb
add
insb
mov
ss
cmp
iret
jge
fmuls
inc
xor
add
sub
je
outsl
loopne
inc
sbb
add
mov
jmp
mov
cmp
add
adc
icebp
fildl
lds
add
add
or
add
cmp
jo
imul
mov
adc
add
pop
push
sbb
aaa
int3
addr16
ret
add
jbe
push
push
call
rcrl
add
add
sub
aad
pop
cmpsb
loopne
mov
fiadds
inc
jmp
je
push
mov
inc
add
inc
or
dec
sar
loopne
push
mov
and
jnp
mov
push
cli
call
lock
lret
dec
pop
cmp
add
and
jecxz
ret
jne
cmc
aas
fiadds
add
cmpb
arpl
outsb
inc
add
negb
push
in
sbb
cmp
add
cmpb
add
sub
je
lret
xor
xor
xor
xor
add
xchg
int
test
enter
test
nop
jg
push
outsl
sbb
add
push
ret
mov
jmp
or
pop
cmp
add
pop
call
lods
inc
popf
rolb
icebp
je
ret
inc
popl
mov
pop
add
jmp
pop
fiaddl
movb
cmp
jne
jmp
mov
add
add
loop
xor
add
shl
sub
loopne
addr16
movl
lret
fwait
test
add
gs
nop
aaa
lret
arpl
lret
xchg
pop
fisubrs
cmp
inc
inc
cmp
add
adc
push
inc
dec
lret
mov
sbb
jnp
add
add
push
push
push
push
fs
and
sbb
xor
insb
sub
aaa
adc
ret
arpl
and
and
jbe
add
inc
or
add
sahf
testb
add
inc
mov
sar
mov
xchg
jp
scas
and
orb
add
jmp
adc
xchg
andb
mov
mul
cmpsb
add
dec
out
push
mov
and
test
or
gs
push
add
inc
rcl
push
in
cmp
pop
or
xor
adc
add
xchg
popf
adc
jmp
or
ljmp
add
xchg
add
sub
mov
cmpb
cmp
sbbb
or
mov
add
cmp
inc
xor
sbb
fimuls
push
xor
xchg
sbb
cmp
cmpb
clc
mov
repnz
push
sbb
fcmovnb
sbb
mov
jle
mov
inc
and
jb
mov
jb
and
imul
inc
outsl
jne
lds
mov
dec
push
add
fs
and
add
add
lret
bound
or
and
pop
mov
mov
loopne
mov
jbe
mov
add
popa
outsb
jns
add
out
sbb
mov
fcmovbe
test
push
or
ja
dec
xchg
out
imul
mov
xchg
cmpb
add
jmp
ljmp
mov
enter
add
lcall
mov
scas
subb
xor
shrb
outsl
xor
repz
adc
ficoms
loop
push
mov
cld
sub
fnstenv
leave
lret
xchg
jno
add
pop
lcall
xchg
out
mov
lcall
xlat
aad
and
ret
add
out
fnstenv
adc
mov
jns
ret
adc
and
add
push
or
xor
jl
add
cld
push
mov
adc
push
xor
add
push
push
xor
out
push
lea
push
push
sbb
or
jae
jnp
out
dec
adc
mov
out
push
xor
cmp
leave
bound
sbb
sbb
ret
lea
test
call
fiaddl
enter
add
lock
sub
adc
sub
sub
or
call
cli
test
test
adc
pop
pop
mov
cwtl
or
and
inc
pop
pop
mov
sbbb
jmp
es
push
fisubs
sub
mov
sbb
jo
cmp
int3
scas
lcall
inc
push
rclb
xchg
cmp
jmp
add
clc
inc
pop
push
dec
add
add
xor
add
add
add
jo
add
mov
add
lock
addb
add
mov
add
dec
add
addb
add
add
add
pusha
add
add
jo
add
xor
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
enter
add
add
add
add
loopne
add
add
add
addb
add
add
addb
add
add
add
and
add
xor
add
add
dec
add
inc
add
push
add
sub
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
ja
ja
ja
ja
ja
ja
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
incl
add
add
maskmovq
testl
xchg
ja
ja
ja
maskmovq
testl
xchg
push
maskmovq
testl
xchg
push
maskmovq
testl
xchg
push
maskmovq
testl
xchg
mov
testl
or
xchg
push
maskmovq
testl
xchg
jno
jne
and
testl
or
xchg
sbb
int3
jg
iret
testl
or
xchg
fwait
pop
in
iret
repnz
testl
or
xchg
stc
pop
iret
push
push
maskmovq
testl
xchg
push
maskmovq
testl
xchg
push
maskmovq
testl
xchg
ja
ja
ja
maskmovq
testl
test
inc
inc
inc
inc
inc
inc
maskmovq
testl
test
hlt
hlt
maskmovq
testl
mov
mov
add
or
push
add
add
incl
add
decl
add
decl
add
incl
add
decl
add
incl
add
mov
mov
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
incl
add
add
add
and
add
add
call
add
add
shlb
add
add
push
mov
add
add
add
decl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
adc
mov
or
or
pop
add
jmp
push
xorl
lea
xchg
add
or
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
pop
fdivs
add
push
sbb
push
mov
cmp
pop
test
add
mov
add
mov
insb
icebp
loope
jo
push
sub
add
xchg
jle
mov
inc
jb
push
popa
add
adc
mov
cmp
cmp
pop
jne
dec
dec
xchg
pop
cmp
or
out
jmp
pusha
add
adc
sub
push
push
push
call
pop
sub
pop
push
shlb
mov
add
mov
shll
ret
mov
mov
data16
addl
jecxz
sub
jnp
add
jae
test
loopne
divb
and
repnz
add
add
add
mov
outsl
add
lea
mov
call
cmp
ss
push
ja
inc
enter
push
inc
or
mov
add
es
cmpsb
jne
int
push
add
jb
xor
loop
cli
or
je
fiadds
xchg
add
sub
adc
bound
xor
rol
fmuls
add
int
push
and
pop
cs
lret
push
mov
xchg
lods
and
or
enter
nop
push
and
push
mov
sbb
adc
test
dec
or
push
mov
mov
mov
add
movb
add
fldenv
mov
sub
or
jbe
call
or
mov
pop
jb
xorb
decl
movb
ret
push
mov
add
dec
or
inc
pop
adcl
push
add
push
call
mov
add
add
roll
sti
xor
add
je
push
mov
add
shlb
xorb
stos
pop
add
adc
mov
or
jne
in
xor
add
rcrb
divl
fs
mov
jns
add
lods
pop
lahf
popa
sbb
mov
jmp
or
jns
pop
clc
roll
xor
cmpsb
mov
je
add
aad
push
jmp
xchg
cmp
push
jae
adc
jne
test
inc
xchg
add
loopne
mov
adc
cmp
jge
mov
inc
movzbl
add
aam
add
sub
mov
je
dec
mov
jne
cmp
jne
rcrw
rol
xchg
push
add
aaa
add
sub
pop
pop
mov
je
cmp
push
push
cmc
sbb
dec
mov
pop
push
adc
clc
sub
data16
add
push
push
call
les
or
dec
push
mov
hlt
aam
mov
push
pop
sbb
mov
adc
xchg
cmp
dec
pop
js
les
push
sbb
mov
stc
add
movsl
stos
shl
sbb
push
sub
mov
cmp
stos
add
js
cmp
in
push
mov
mov
ret
jne
js
mov
mov
inc
add
sub
arpl
or
mov
jecxz
js
push
push
push
cmp
xchg
inc
adc
push
das
inc
inc
mov
jge
inc
or
mov
mov
jne
inc
incb
pop
dec
xor
dec
lret
ret
ret
push
call
in
call
mov
inc
je
mov
adc
popa
xorl
lret
dec
dec
cli
cmp
jne
insl
add
jmp
mov
lock
add
sbbb
pop
xor
inc
mov
push
pop
fidivrl
int
movsl
dec
insb
or
and
sbb
cmp
xor
cmp
je
sbb
imul
and
ljmp
lods
add
jnp
push
push
push
push
call
xorb
adc
ret
xor
push
adc
mov
xorl
xchg
je
inc
inc
mov
pop
call
ljmp
fiaddl
jne
dec
je
jmp
push
add
jge
adc
shlb
mov
in
mov
dec
repnz
push
test
or
push
test
fs
imul
mov
adc
inc
inc
outsl
fidivl
xchg
push
or
xchg
jmp
and
or
jns
add
inc
cmp
imul
lea
push
adcb
dec
adc
jl
sbb
scas
fsubr
pop
shlb
outsl
daa
addb
cld
or
inc
push
mov
in
mov
fiaddl
cmp
sbb
dec
or
jmp
pop
stc
daa
sub
fmuls
stos
xlat
pop
sahf
jnp
cmp
xchg
sbb
sarb
imul
and
inc
push
add
jb
jb
push
push
gs
iret
add
and
jae
arpl
insb
and
je
bound
outsl
and
mov
fdivl
dec
fsubrs
push
cs
iret
inc
mov
insb
fs
in
xchg
sub
inc
imul
jo
mov
les
add
fdivs
xor
add
jae
popa
addr16
dec
push
outsb
add
inc
add
je
in
and
ljmp
cmp
jno
popf
sbb
jnp
gs
inc
js
je
xchg
sbb
inc
daa
lock
dec
popa
outsb
fs
pop
or
outsb
inc
rorl
add
jb
jne
std
dec
xor
je
repz
sub
jecxz
or
sub
cmp
int3
shlb
out
add
cmpb
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
rorb
add
add
pop
mov
add
add
add
push
mov
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
mov
push
mov
mov
mov
call
mov
mov
pop
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
je
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
inc
add
add
push
cmp
add
add
push
mov
add
add
les
add
pop
dec
add
add
add
add
cmp
add
mov
add
jo
add
push
add
sub
add
add
add
add
incl
pusha
add
into
push
add
popa
add
add
add
add
add
incl
inc
add
adc
add
mov
add
add
add
incl
adc
add
adc
add
add
pop
jne
add
adc
add
adc
add
das
add
add
add
or
add
adc
faddl
add
push
push
push
push
call
pop
sub
lea
mov
add
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
cld
mov
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
push
push
push
push
call
mov
push
call
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
pushl
call
mov
mov
add
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
xor
add
jne
xor
jmp
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
xor
mov
mov
test
jne
test
je
push
push
mov
xor
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
xor
mov
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
lea
mov
mov
mov
mov
push
push
push
xor
mov
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
mov
test
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
push
mov
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
je
jmp
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
xor
dec
pop
pop
pop
leave
ret
push
mov
mov
add
leave
ret
push
mov
add
push
push
push
call
pop
sub
pushl
call
xor
mov
lea
lea
push
push
push
pushl
call
subb
lea
push
pushl
push
pushl
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
inc
jo
insb
imul
and
jb
jb
push
push
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
insb
and
jb
jne
je
add
sbb
adc
add
add
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
sbb
adc
sbb
adc
add
mov
add
popf
sbb
adc
add
add
jb
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
add
add
sbb
adc
sbb
adc
