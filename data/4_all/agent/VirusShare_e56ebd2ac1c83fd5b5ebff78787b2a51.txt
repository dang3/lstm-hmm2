add
or
or
add
add
add
clc
add
addb
add
enter
add
add
js
add
dec
add
add
mov
add
add
add
add
or
orb
add
push
add
add
add
add
add
add
add
add
add
addb
add
add
add
cwtl
add
add
add
add
add
rolb
add
add
add
add
call
insl
push
add
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
inc
add
add
outsb
push
add
add
add
add
push
jo
add
add
add
add
nop
add
add
push
add
add
add
add
mov
jb
add
push
add
add
add
add
jo
add
cwtl
add
xorb
add
add
xorb
call
add
add
add
xorb
add
add
xorb
add
add
mov
add
mov
add
fadds
add
add
adcb
add
sub
adcb
add
add
add
add
add
add
pusha
add
add
push
add
add
add
add
mov
add
nop
jne
add
add
add
add
add
mov
add
aam
push
add
add
add
add
fadds
add
sub
push
add
add
add
add
add
add
test
add
add
add
add
sub
add
fdivrl
add
add
add
add
push
add
add
push
add
add
add
add
js
add
mov
add
add
add
add
mov
jle
add
add
add
add
enter
cmp
push
add
add
add
add
lock
add
add
add
add
sbb
add
push
add
add
add
add
inc
add
add
mov
add
add
add
add
add
push
mov
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
rolb
jo
push
add
add
add
add
add
add
call
insb
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
jg
add
push
add
add
add
add
add
addb
add
add
add
add
test
add
in
mov
add
or
xchg
add
add
push
add
inc
push
add
push
add
add
add
add
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
add
add
xor
add
jo
push
add
add
add
add
pop
push
add
or
add
add
add
addb
add
add
add
add
test
add
adcb
add
add
add
add
rolb
add
insb
xchg
push
add
add
add
add
clc
push
add
sbb
push
add
add
add
add
and
add
rcrb
add
add
add
dec
pop
add
pushf
fwait
push
add
add
add
add
jo
add
push
pushf
push
add
add
add
add
cwtl
pop
add
xor
push
add
or
add
add
adc
add
cmp
add
pusha
or
adcb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
add
mov
add
add
add
sub
add
rcrb
add
add
add
add
push
or
add
lahf
push
add
add
add
add
js
add
cmp
push
add
add
add
add
mov
lahf
push
add
add
add
add
add
add
enter
js
push
add
add
add
add
add
add
lock
add
add
add
add
sbb
add
in
mov
add
add
add
inc
or
add
push
add
add
add
add
add
push
movsb
push
add
add
add
add
add
add
nop
or
add
push
add
add
add
add
mov
cmpsl
push
add
add
or
add
or
orb
add
sbb
add
inc
or
addb
add
add
add
or
add
mov
add
add
add
xor
add
mov
push
add
add
add
add
pop
or
add
cmpsl
push
add
add
add
add
add
or
adcb
add
mov
add
add
or
addb
add
add
add
test
add
cmp
push
add
add
add
add
rorb
add
in
cmpsl
push
add
add
add
add
clc
or
add
test
add
add
or
push
add
pop
add
add
inc
add
add
add
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
or
add
add
addb
orl
add
adc
mov
add
push
push
add
pop
pop
add
pop
sbb
mov
popa
adc
xchg
bound
add
imul
add
addr16
mov
push
add
jbe
add
imul
stos
insl
push
add
sbb
stos
push
add
jae
add
sbb
mov
adc
mov
adc
test
add
js
add
jnp
add
jp
add
jle
add
jnp
add
pop
add
adcl
add
mov
add
xchg
add
xchg
mov
xor
mov
cmp
add
nop
cmp
lret
add
or
int
or
add
mov
add
xchg
sbb
rclb
es
cltd
sub
les
xor
leave
popf
cmp
add
mov
add
mov
movsl
xchg
stos
xchg
test
mov
mov
xchg
inc
add
cltd
dec
add
mov
scas
mov
movsl
test
stos
xchg
stos
mov
mov
xchg
push
add
xchg
pop
add
lahf
pop
add
mov
js
lods
mov
movsl
mov
scas
data16
cwtl
add
xchg
push
mov
imul
fwait
insb
add
jno
mov
mov
inc
add
fwait
dec
add
lahf
push
add
cmpsb
dec
add
stos
dec
add
mov
inc
add
movsb
dec
add
stos
dec
add
lods
dec
add
mov
pop
add
mov
push
add
scas
push
add
stos
push
add
movsb
pop
add
scas
pop
add
scas
pop
add
mov
add
sahf
bound
rcrb
add
mov
fs
stos
push
xlat
scas
bound
shrb
imul
shll
add
mov
jge
shrl
jp
fnstsw
add
mov
add
mov
jns
loopne
imul
loope
jl
out
ja
jecxz
jnp
cmp
add
mov
add
data16
add
push
incl
push
lahf
add
xchg
add
add
mov
add
cmp
adc
incl
push
xchg
incl
sub
incl
cs
incl
xor
incl
xor
add
add
add
incl
push
scas
incb
push
mov
add
incb
push
cmc
add
stc
add
incl
addr16
incl
jae
incl
jp
incl
popf
cwtl
addl
mov
add
movsl
test
lods
cmpsl
xchg
add
addb
mov
mov
loop
mov
fadd
popl
in
addl
jmp
ret
mov
jmp
enter
lds
add
rcll
in
mov
add
lods
add
fisubl
add
fldt
add
fidivl
add
jecxz
add
loopne
add
in
add
loop
add
in
add
ljmp
mov
incl
fwait
incl
scas
add
call
lds
stc
out
add
in
lds
in
lret
add
lock
add
out
rolb
icebp
rolb
repz
push
jecxz
clc
out
push
call
add
sti
repz
std
add
incl
add
arpl
adc
cmp
mov
jbe
push
cmp
es
add
adc
sub
push
and
and
xor
xor
xor
and
push
sbb
pop
add
adc
aaa
add
in
hlt
out
push
and
xor
xor
xor
xor
xor
and
push
sbb
pop
pop
or
add
repz
hlt
hlt
mov
xor
addb
and
push
sbb
sbb
or
push
add
cmc
hlt
fistps
pop
je
in
repz
test
push
push
push
sbb
or
add
add
hlt
cmc
cmc
cmc
repz
repz
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
hlt
repz
and
sbb
sbb
add
add
cmc
div
div
div
div
div
div
div
div
div
div
fisubl
sbb
sbb
add
div
div
div
div
div
div
div
div
div
div
hlt
loop
sbb
sbb
add
div
div
div
div
div
hlt
hlt
hlt
hlt
div
div
div
div
fbld
sbb
or
add
div
div
div
hlt
fsubrs
pusha
insb
xchg
div
div
div
or
add
clc
clc
clc
clc
imul
pusha
sub
jae
outsl
xchg
out
clc
clc
clc
clc
hlt
push
or
add
clc
clc
clc
clc
repnz
sub
outsl
outsl
xchg
xchg
xchg
outsl
in
clc
clc
clc
clc
fisttpl
or
add
into
clc
clc
clc
clc
clc
imull
push
push
push
lods
lods
outsl
xchg
xchg
xchg
outsl
repz
clc
clc
clc
hlt
sub
add
add
clc
clc
clc
clc
clc
fsubrl
push
push
mov
mov
iret
clc
clc
clc
clc
clc
mov
add
add
clc
stc
stc
stc
clc
jno
pop
pop
movsb
cmpsb
cmpsl
mov
ret
outsl
jno
insl
hlt
stc
stc
stc
clc
add
add
int
stc
stc
stc
notl
outsl
jo
test
mov
mov
outsl
push
stc
loopne
add
or
hlt
push
jno
mov
mov
mov
fdivr
stc
stc
stc
out
add
sti
cli
hlt
das
xchg
xchg
enter
mov
stos
imul
stc
out
add
sti
sti
mull
xchg
lret
in
les
pop
sub
sti
sti
sti
sti
loopne
add
sti
sti
sti
clc
outsb
cltd
lahf
pushf
int3
out
lock
mov
push
push
sub
sti
fmuls
add
sti
sti
sti
sti
rorl
mov
push
push
push
push
jae
sti
sti
sti
stc
xchg
or
sti
std
std
sti
hlt
pop
pushf
aam
mov
jg
push
push
dec
fdivrp
std
std
std
clc
push
or
sti
std
std
std
sti
fstpl
aam
mov
push
push
push
cltd
stc
std
std
std
std
call
nopl
std
std
std
std
sti
fstpl
mov
push
push
dec
cltd
clc
std
std
std
std
stc
xchg
syscall
add
sti
std
std
std
std
sti
hlt
xchg
popa
bound
push
push
jb
stc
std
std
std
std
std
in
inc
syscall
or
std
std
std
std
std
sti
clc
icebp
jecxz
call
std
std
std
std
testl
sub
inc
inc
inc
in
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
clc
jl
inc
inc
push
push
sbb
ds
inc
inc
inc
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
idivl
inc
inc
ds
adc
inc
inc
inc
mov
std
std
std
std
std
std
std
std
std
sti
fisttps
inc
inc
sub
inc
inc
inc
inc
inc
dec
aam
sti
std
std
std
std
std
std
std
clc
fstpt
inc
inc
inc
sub
adc
adc
sub
inc
inc
inc
inc
ds
jns
fnsetpm(287
in
mov
inc
aas
ds
adc
add
add
inc
inc
inc
inc
dec
dec
jns
addl
dec
inc
inc
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
adc
lea
add
pop
push
add
sbb
lcall
add
popw
add
imul
lods
outsl
push
add
sbb
test
jb
add
adc
stos
jbe
add
jp
add
jg
add
push
add
jbe
add
jg
add
jg
add
jl
add
mov
add
test
add
xchg
cmp
movb
rclb
lldt
cltd
or
add
test
add
mov
add
lea
add
xchg
sbb
rcrb
adc
rcll
add
cltd
das
add
xchg
and
aam
and
rcrb
xor
lds
cmp
sahf
orb
xchg
mov
dec
add
cwtl
dec
add
lea
test
pop
add
lea
scas
lea
lods
mov
movsb
xchg
add
xchg
insb
add
outsl
add
lahf
jno
mov
mov
push
add
mov
pop
add
stos
pop
add
lods
pop
add
mov
add
mov
jo
shrl
jbe
shlb
popa
add
les
loope
jns
in
jg
in
jg
sbb
add
imul
push
jl
add
lds
push
mov
add
mov
add
cwtl
incl
insl
mov
incl
dec
stos
incl
pop
mov
add
lock
xchg
mov
iret
mov
add
mov
add
mov
addb
mov
addb
mov
mov
aad
mov
fidivrs
mov
fadd
xchg
add
cltd
add
rorb
jmp
iret
xchg
add
popf
add
rcll
add
shrb
add
shrl
add
fsubs
add
fisubrl
add
xlat
mov
out
fdivs
add
loop
add
ret
xchg
aam
add
loope
add
jecxz
add
ljmp
repz
add
out
lret
in
int
push
into
add
in
rolb
std
out
roll
icebp
roll
push
aam
push
flds
push
fildl
cli
lock
push
fldl
push
loope
push
out
std
imul
add
clc
ljmp
sti
repz
sti
cmc
add
cld
testb
std
stc
add
incl
add
inc
and
sub
aas
aas
sub
es
or
adcl
sbb
push
sbb
lea
pushf
pushf
cltd
mov
movups
add
mov
sahf
adcb
add
lea
jl
xchg
mov
add
xchg
mov
dec
push
push
je
mov
xchg
mov
push
mov
nop
cmpsl
mov
outsl
jno
dec
pushf
cmpsl
xchg
add
mov
outsl
push
dec
dec
xchg
cmpsl
pushf
add
test
xchg
imul
mov
pop
stos
stos
js
jbe
imul
push
daa
test
pop
pop
inc
dec
fwait
lods
stos
push
push
or
lods
lods
test
mov
or
scas
scas
scas
scas
scas
scas
scas
xchg
cmp
unpckhps
das
das
pusha
mov
mov
push
add
xor
cmp
jp
pop
cmp
xor
sbb
addb
add
or
add
add
add
push
push
add
add
add
adc
add
add
add
add
add
add
adc
add
add
add
mov
push
push
add
adc
add
add
add
add
jo
add
jae
push
add
int3
push
add
push
add
int3
push
add
add
add
int3
push
add
add
add
int3
push
add
add
add
add
addb
add
repz
push
add
add
add
add
or
add
add
add
sub
add
add
push
add
add
add
add
addb
add
push
int
add
add
add
push
add
add
add
push
add
lret
push
add
push
add
lret
push
add
lret
out
push
add
push
add
lret
push
add
push
add
lret
push
add
push
add
int3
push
add
push
add
int3
push
add
push
add
lret
sub
push
add
push
add
int3
push
add
push
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
popa
jae
popa
outsb
addr16
jo
add
add
imul
jo
jb
dec
gs
fs
add
inc
insb
outsl
jae
inc
insb
imul
add
add
arpl
add
add
outsl
jae
push
jb
outsb
je
jb
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
popa
addr16
imul
je
outsl
jns
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
popa
jbe
inc
imul
add
add
and
add
add
add
adc
add
add
add
add
add
add
fs
pop
insl
sbb
mov
add
add
in
pop
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
dec
push
add
add
mov
push
pop
mov
imul
sub
xor
fwait
xchg
mov
dec
lret
pop
or
inc
popa
mov
xchg
push
sbb
sub
movsl
sub
mov
mov
sub
fimuls
sbb
pop
and
cmp
xchg
in
cmp
lea
adc
ret
mov
out
jp
xor
fs
pop
xor
imul
jnp
lret
dec
push
insl
xchg
bound
sbb
inc
lcall
int3
cwtl
in
pushf
or
lahf
dec
ds
and
jp
call
test
fcmove
jbe
into
mov
xchg
xor
xor
adc
xor
cmpsl
ja
sbb
iret
cmc
mov
or
push
shrb
lea
xchg
xor
add
aam
nop
push
das
leave
xor
push
adc
dec
fwait
addr16
stc
pop
shrb
sbb
mov
mov
sti
jb
mov
pop
pop
fnstcw
lcall
mov
scas
or
xor
xchg
push
sbb
fs
pushf
mov
jge
push
jmp
jno
pushf
push
imul
or
mov
cmp
inc
xchg
mov
fsubl
out
jle
sbb
lods
pushf
out
or
sahf
fists
mov
addb
and
jp
rcl
push
jb
add
sbb
or
jae
mov
sti
popfw
inc
xor
adc
cs
cmpsl
andl
fiaddl
ja
pop
mov
sub
mov
ud0
mov
mov
xchg
aaa
adc
aad
jecxz
out
mov
and
sbb
dec
packssdw
mov
dec
mov
repz
push
lea
bound
mov
or
movsb
and
fisubrl
push
adc
sbb
jae
repz
or
js
test
mov
and
bound
mov
mov
lods
cbtw
pop
dec
jb
cmpsl
mov
jp
cmpsb
div
pop
xchg
inc
xchg
pop
pop
pushf
clc
jae
dec
mov
xchg
test
ficompl
mov
cmp
mov
push
hlt
lret
adc
cmc
sub
mov
insl
xchg
mov
popf
pusha
jnp
xor
ja
ret
shrb
in
sbbl
mov
sbb
push
shl
xchg
mov
ret
test
in
aas
jae
aas
push
int
nop
sbb
into
imul
mov
pop
mov
stos
hlt
out
inc
adc
cwtl
cmp
jmp
xor
loopne
adc
xor
inc
pop
fistpl
inc
push
shrl
adc
out
shrl
mov
cld
jno
lock
pop
sub
or
xchg
push
es
lahf
pop
inc
les
xchg
push
clc
testl
or
adc
push
sti
decl
je
dec
loopne
aad
cmp
les
inc
repnz
in
fwait
sub
pop
jl
jle,pn
jecxz
xor
mov
push
icebp
sbb
out
and
adc
mov
xchg
sub
call
sti
cmp
sub
insb
mov
pop
out
cmp
mov
arpl
aad
push
mov
add
imul
jae
daa
sbb
mov
mov
jg
sub
sub
fldcw
inc
jae
outsb
xor
lods
xchg
and
mov
pop
bound
mov
push
xchg
icebp
inc
je
pop
leave
push
cmpsb
jmp
mov
aas
frstor
imul
data16
scas
jp
fldcw
push
shll
gs
sbb
fists
aaa
jecxz
xor
jo
push
pop
int3
pop
xchg
pusha
inc
push
loopne
sub
mov
sbb
fidivs
lret
push
pop
jmp
xchg
pusha
movsl
cmp
and
sub
popa
imul
cmp
movsl
push
and
lods
mov
cli
stos
rclb
scas
or
dec
push
sbb
fistpl
xchg
jae
aaa
fsts
jg
xchg
jmp
aaa
jp
daa
or
loopne
mov
mov
bound
loope
arpl
das
fadds
mov
enter
mov
cmpsl
cmpsl
jge
xchg
xor
je
lret
data16
leave
inc
outsl
sbb
sub
scas
adcl
ljmp
pop
mov
push
sbb
jnp
and
sahf
cmp
pop
imul
repz
sub
lods
and
es
test
xchg
imul
sbb
adc
sti
dec
sbb
test
repnz
sub
push
inc
icebp
pop
outsb
cmp
jbe
pop
pop
int3
jmp
jns
scas
or
xor
pop
out
xchg
les
pushf
mov
outsb
rcl
cld
mov
imul
addr16
cmp
loopne
pop
notl
pop
jle
sub
push
aaa
pushf
xchg
or
adc
mov
or
cmp
lahf
pop
movsl
mov
pop
add
data16
adc
adc
inc
jbe
mov
lcall
loop
and
out
mov
push
jle
xor
subb
subb
adc
sahf
mov
out
inc
pop
pop
lea
inc
les
sub
hlt
jle
lds
enter
insl
shr
mov
jl
bound
inc
inc
mov
mov
leave
mov
cmp
sub
fs
push
fwait
pop
mov
jle
xchg
addr16
pusha
adc
lods
es
pop
rep
push
pmaxsw
ja
leave
pop
outsl
lret
loop
rol
dec
int3
stos
das
cltd
push
sub
inc
jo
lahf
imul
cmp
push
mov
mov
aaa
repnz
lcall
or
dec
loop
fadd
sbb
mov
push
out
cmp
or
push
sarl
in
xor
push
xor
mov
aad
push
imul
sahf
das
jl
rcrb
icebp
pop
ret
insb
push
lods
cli
sbb
mov
aas
fcmovu
sti
pop
repz
lcall
lahf
jmp
repz
into
fsubs
lcall
sti
pushfw
les
test
repnz
pusha
aam
fnstenv
cltd
sub
and
push
dec
mov
mov
lea
jg
out
out
push
loopne
mov
cmp
loope
jbe
push
xor
cld
jmp
xchg
jno
sub
mov
pop
pusha
sbb
lcall
es
push
adc
xchg
cli
cmp
jmp
scas
scas
adcb
pop
cmp
adc
dec
sub
sbb
pop
loop
mov
fwait
or
push
inc
cli
sbb
push
in
in
divl
cmpsl
dec
aad
adc
scas
out
push
out
sbb
sbb
pop
sti
jg
mov
xchg
movhps
or
leave
in
mov
cltd
xor
add
jae
push
sub
xor
aaa
stc
dec
rcll
jne
stos
jns
test
bound
lock
jecxz
cmpsb
js
mov
andb
hlt
and
or
xchg
mov
mov
out
int3
mov
jge
push
lret
xchg
mov
push
call
add
loopne
jecxz
mov
mov
xchg
xchg
out
loop
mov
push
jp
aad
ret
sarb
pop
push
push
inc
inc
sub
adc
add
and
out
addl
les
in
daa
test
clc
int
push
xchg
je
add
jge
sbb
inc
in
mov
dec
sarb
add
lcall
push
bound
sub
lcall
movsl
adc
cli
cmp
xlat
mov
pop
jb
sbb
adc
mov
cmc
inc
in
and
sub
mov
or
fisubrs
fstps
nop
stos
jle
dec
inc
xchg
mov
xchg
or
inc
pop
add
addr16
sub
or
fdivrl
nop
shrl
enter
dec
xchg
sbb
loopne
stos
mov
push
test
fcoml
std
iret
icebp
popa
adc
sti
orl
cltd
mov
pop
idivb
movsl
sub
adc
push
stc
pop
enter
daa
aaa
insl
mov
insl
movsl
lods
sub
pop
jp
cmp
push
mov
push
push
bound
test
popa
add
dec
fcoms
adc
push
pusha
arpl
out
jne
sub
and
jb
jl
lret
mov
mov
and
xor
add
xlat
sub
in
cmp
mov
jg
imul
mov
cmp
outsl
std
lods
jl
and
add
sahf
mov
pop
loopne
xchg
pusha
popf
push
imul
cmc
pop
inc
lock
lret
movsb
or
mull
lock
sbb
and
mov
dec
adcl
sub
cli
xor
mov
mov
in
and
ss
test
push
push
addr16
dec
sbb
push
shrb
movsl
clc
ljmp
fisubrs
and
adc
pop
push
xor
inc
xchg
sbb
jmp
pusha
add
in
arpl
icebp
rcr
and
jno
sub
xor
pushf
sbb
fcoml
int3
cmp
int3
dec
bound
and
stos
push
stos
inc
add
shlb
add
fstps
cmc
aas
add
mov
mov
cmp
fimuls
push
or
mov
fwait
lea
pusha
jmp
lahf
mull
pop
addr16
lcall
std
pusha
or
mov
jae
out
dec
imul
adc
push
mov
xor
in
clc
push
cmp
in
dec
jg
ror
push
gs
aaa
lret
pusha
sahf
add
push
daa
or
pop
test
cmp
jno
es
lret
inc
scas
push
and
xor
cmp
pushw
jae
jae
push
cli
jg
popf
jecxz
sbb
sti
lret
mov
jmp
push
inc
shrb
pop
adc
popf
xor
cwtl
mov
lock
push
divl
xor
rcrb
or
or
movsl
and
or
sbb
jp
lds
in
cmpsb
mov
inc
xchg
outsl
mov
mov
aas
adc
popa
mov
hlt
xlat
std
or
cmp
or
lret
popf
shll
pop
jg
jb
inc
mov
out
pop
sahf
push
ss
cwtl
fadds
fcomip
pop
js
lea
inc
testl
jae
xlat
popf
pop
aas
adc
insb
jae
int
pusha
outsb
sets
sbb
cwtl
ss
or
fsubs
adc
flds
inc
mov
aad
push
fwait
add
lds
das
jbe
fisubrs
mov
das
dec
ret
xor
mov
jecxz
inc
rcl
jno
and
aam
push
cmp
pushf
inc
aas
rol
aas
nop
repz
mov
or
icebp
sbb
sub
outsl
push
ficompl
scas
stc
xor
or
xchg
sub
shrb
fsubr
ds
jb
fistpl
jns
mov
and
rcl
xchg
dec
lea
fs
add
dec
fcoms
adcl
das
out
inc
push
lcall
in
dec
bswap
inc
dec
dec
xor
pop
addl
out
sbb
jb
pop
imul
push
dec
js
clc
negl
sbb
xchg
and
ss
int3
loope,pn
inc
mov
jecxz
sub
popa
rorl
xchg
sbb
out
insb
jno
movsb
test
or
adc
sbb
xor
xchg
inc
adcl
lea
mov
outsb
xor
les
jge
inc
dec
test
outsl
bound
repz
stos
or
arpl
int
push
add
cmp
or
addb
jge
aam
sbb
insl
or
sub
test
xor
aam
dec
cmc
xchg
imul
cmp
in
pop
cwtl
insl
mov
mov
jae
das
stos
idivb
mul
mov
mov
xchg
add
mov
fstp
pop
into
loopne
inc
fcoml
push
jnp
cwtl
xchg
sbbb
lahf
jl
bound
adc
pusha
push
adc
jnp
mov
inc
popf
aam
or
mov
repz
daa
in
insl
ljmp
cmpsb
sar
push
fistps
mov
mov
inc
xorl
ljmp
scas
cltd
scas
es
mov
addr16
fsubs
add
mov
ss
and
and
push
mov
inc
mov
xchg
les
aaa
mov
shlb
and
jl
lret
push
add
jmp
dec
or
es
sub
std
dec
test
push
hlt
xchg
xlat
dec
clc
add
enter
sbb
iret
sub
xchg
out
insl
in
push
mov
outsb
addr16
push
pop
scas
inc
mov
add
imul
inc
or
outsl
xor
cmpsb
add
mov
test
adc
stos
sti
or
test
add
lret
lahf
cmp
adc
movaps
cs
adc
stos
cmp
daa
out
sbb
or
sti
das
fiaddl
xor
lret
dec
dec
mov
adc
sbb
xchg
add
pusha
or
imul
in
or
cltd
lret
sub
pop
jne
adc
or
vmwrite
add
enter
xor
cmc
insb
es
aad
das
popf
ret
roll
xchg
and
stos
jecxz
std
fisubrs
xchg
shlb
mov
cld
jmp
mov
adc
clc
and
test
testl
shr
fnstsw
fsub
adc
mov
sbb
xor
push
test
ds
ret
lret
lret
ffree
arpl
hlt
enter
cmp
test
xor
subl
js
test
std
ss
pop
xlat
jmp
and
shlb
addr16
shlb
and
inc
testl
inc
cmp
mov
outsb
movsl
xchg
or
lods
cmpsb
sbb
std
xchg
and
fs
sub
cmp
or
fistl
das
xchg
or
pop
pop
lods
cmp
and
in
stos
in
sbb
mov
hlt
aad
daa
popf
and
jo
daa
decl
insl
dec
mov
mov
lods
inc
lock
inc
rorb
ret
jge
ja
push
push
dec
mov
mov
xor
aas
arpl
lahf
inc
jl
add
test
sub
push
lcall
push
jno
pop
mov
mov
les
or
jecxz
jno
push
lcall
outsl
pop
cli
jl
pop
sub
pushf
add
data16
mov
call
pop
leave
xchg
loop
pop
xor
push
or
mov
jae
das
jae
cmpb
pushf
mov
xor
and
sub
add
mov
push
insl
push
or
ret
test
cmp
mov
fs
xor
aad
pusha
mov
push
mov
inc
xchg
rcrb
js
pop
lock
jle
xorl
mov
push
push
sub
inc
mov
stos
test
dec
jge
fnsave
add
pop
mov
jle
scas
andb
push
add
mov
mov
imul
stc
jp
and
popa
jo
out
push
xor
push
mov
aas
imul
mov
outsl
add
loopne
into
jns
out
stc
mov
mov
adc
mov
int3
inc
sahf
dec
imul
fs
xor
sbb
sub
xor
ljmp
fidivrs
repnz
es
out
lcall
js
sub
adc
xchg
movsb
nop
jecxz
clc
int
fsubrs
push
pop
sub
bound
or
cmp
test
das
out
les
or
loop,pt
loope
cli
ja
es
fisubl
iret
adc
jg
dec
icebp
scas
out
pop
push
cmc
clc
lcall
mov
packsswb
repz
sti
sbb
bound
addl
jle
adc
cmp
xor
dec
sbb
sti
mov
out
stc
push
pop
orl
jnp
or
mov
mov
cmpsl
jo
jmp
test
add
push
fs
jae
stos
or
or
mov
jle
jp
shl
cmp
mov
out
lock
ja
popf
sti
das
jmp
dec
dec
test
lock
bnd
xchg
adc
pushfw
stos
in
xchg
and
aaa
imul
push
add
mov
sbbb
cmp
into
aam
jge
xor
sbb
pop
movsb
push
ret
xor
sti
in
test
sub
shrl
cmp
inc
shl
push
popf
push
mov
pushf
add
mov
push
jp
pop
jl
xor
pop
mov
push
cmp
cmp
aam
int3
jno
mov
or
lods
fisttps
pop
pop
dec
pusha
daa
adc
sub
cld
mov
jge
lock
pop
jno
cmp
cmp
cmc
and
sahf
mov
push
mov
jmp
jns
clc
dec
not
stos
addr16
jnp
dec
das
cltd
push
mov
mov
arpl
xor
push
faddl
cmpsl
mov
or
ss
adc
mov
divl
inc
mov
out
loopne
mov
hlt
cmp
mov
lds
add
adc
repz
test
in
mov
mov
lsl
imul
lret
cmp
cmp
hlt
dec
test
bound
xchg
add
imul
mov
and
mov
lcall
cmpsl
pop
call
pop
jno
push
arpl
in
xlat
popa
ja
sub
pop
and
insb
stos
pop
rolb
inc
xchg
pop
out
andb
or
lds
test
jns
inc
mov
pushf
cmp
outsl
dec
popf
iret
push
out
jecxz
xchg
enter
mov
cli
stc
sbb
fs
mov
mov
jb
inc
lods
jno
mov
into
add
mov
data16
and
mov
lcall
outsb
adc
loope
loop
sarb
jns
repz
dec
sbb
sub
push
jmp
dec
ljmp
sbb
pusha
aas
clc
mov
push
xchg
lods
jns
xor
mov
outsb
mov
mov
fbstp
xchg
cmc
frstor
jle
rcll
fucom
fildl
adc
push
pop
inc
rol
out
test
pop
loopne
pop
fwait
jo
sub
ret
or
icebp
push
les
rcrb
jle
shr
test
lds
repz
pop
stos
js
shl
mov
jecxz
xor
out
inc
xchg
sarb
jne
inc
push
stos
adcl
push
inc
jge
lret
in
push
jae
aaa
cmc
mov
jo
mov
pushf
mov
pop
test
push
jns
sarl
cmp
aam
fdivl
ret
xor
cmp
or
rcr
push
cmp
jle
nop
sbb
jns
and
sub
mov
outsb
and
bound
lds
daa
add
shll
ss
sub
or
inc
call
mov
cli
add
dec
je
fiadds
cpuid
es
sti
movsl
imul
mov
rcl
dec
outsb
jmp
mov
jp
adcb
or
cmp
pop
cmpsb
fisubrs
pop
loopne
das
repz
mov
cmc
jge
lret
adcl
loopne
scas
adc
mov
lret
gs
enter
movsl
lods
outsl
pop
fimuls
lock
dec
repz
push
mov
push
mov
or
cmpsb
cmpsb
adc
loope
pop
add
lret
xor
aas
fs
incl
mov
sbb
xchg
or
das
dec
mov
mov
movsb
test
sub
mov
mov
in
cs
lock
dec
int3
mov
lcall
xlat
inc
clc
sti
jbe
cmp
data16
test
aam
imul
xchg
xchg
ret
xchg
aam
je
xor
cmc
cld
mov
lods
cwtl
fldcw
and
add
cmp
xor
das
and
imul
push
jns
fucomi
rcll
nop
jl
fsubl
ja
lods
sub
ficoml
mov
dec
call
lds
iret
stc
mov
sbb
aas
xchg
test
roll
mov
jmp
mov
jb
inc
jnp
gs
lods
xor
addb
cmp
imul
cmp
repz
shrl
test
cmc
mov
lahf
inc
inc
addb
fbstp
das
mov
or
jl
mov
mov
pop
popa
daa
scas
sbb
pop
int3
fs
mov
push
push
lret
dec
addb
sarl
push
cs
icebp
pop
ja
out
and
movsl
ja
sbb
jnp
or
and
stos
dec
add
and
cmp
mov
fisttps
xchg
xlat
mov
sbb
mov
ret
enter
lea
rol
add
hlt
mov
mov
iret
or
faddp
sub
xchg
fwait
pop
add
std
jmp
data16
cmp
mov
lret
jp
push
int3
mov
cld
lock
xor
xchg
adc
movsb
mov
inc
sub
mov
add
test
cmpsl
lsl
jl
xlat
sbb
shrb
mov
pop
test
popa
mov
sub
and
mov
fcompp
push
push
dec
sub
inc
movsl
sbb
pop
lods
cmc
stc
push
lcall
jp
daa
mov
cmpsl
sub
pusha
jg
push
test
cmp
in
mov
aam
add
mov
inc
mov
lods
mov
and
jl
mov
or
xchg
mov
fwait
adc
js
sbb
out
sub
and
nop
std
shrl
cmpsl
xchg
mov
jbe
lcall
hlt
jnp
sbbl
fildl
jnp
popa
bound
add
mov
mov
stc
js
imul
mov
and
ror
ja
lods
push
stc
inc
pop
push
jb
or
arpl
sub
out
rcrb
in
faddl
and
dec
stc
or
je
test
in
loope
pop
cs
pop
xor
nop
aad
mov
push
rcll
aaa
cmpl
push
out
in
addr16
mov
push
ds
cmc
std
aaa
xor
jne
sbb
push
std
mov
jno
push
cmp
shlb
jecxz
adc
jbe
mov
and
out
mov
push
int3
xchg
lock
testb
adc
cwtl
xor
or
add
imulb
cwtl
mov
xchg
sub
bound
pop
mov
test
sbb
push
popf
and
inc
jmp
sbb
mov
mov
daa
cmp
clc
jmp
mov
fimuls
xchg
mov
push
fcomps
out
sarl
mov
or
sub
sahf
mov
sarb
sub
cli
dec
sbb
shll
and
push
jb
add
outsl
sbb
into
mov
or
cmp
fbstp
int
addr16
or
mov
sub
loopne
push
cmpsl
outsb
cmp
mov
push
xorb
pop
dec
shl
mov
subb
aas
dec
popf
inc
lret
mov
sub
rclb
lcall
or
movsl
je
cmp
jge
sbb
dec
jbe
test
inc
xchg
stos
ficompl
sub
xchg
adc
popf
stc
ja
sbb
or
dec
cmp
ret
mov
sub
test
stos
aad
inc
xlat
pop
jo
shlb
jl
mov
sbb
jno
sbb
fwait
js
jnp
mov
shlb
je
xor
fdivrl
xchg
adc
loope
mov
lcall
dec
scas
xchg
pop
icebp
add
movsb
jmp
sub
push
imul
ljmp
inc
mov
es
adc
cmp
mov
cmp
insl
outsb
cmp
inc
subb
fldcw
cwtl
jle
cmp
cs
mov
test
lds
ret
mov
movsb
sarl
sub
outsb
lret
lret
imul
push
test
scas
push
jge
or
setg
adcl
out
pusha
lock
rorl
loopne
pushf
mov
push
outsl
pushf
jbe
or
push
cltd
fbstp
and
repnz
and
xchg
sub
add
out
jmp
pushf
push
fnstenv
push
cmc
aas
cltd
fdivrs
and
mov
in
clc
or
xor
pop
pop
adc
in
ss
pop
mov
and
push
pop
xor
sbb
dec
cmp
movsb
test
outsb
mov
out
adc
lret
adc
cmpsb
cld
fnstenv
dec
sub
xor
addr16
xor
ret
jbe
mov
test
mov
insl
jno
daa
and
pop
cmp
push
ja
les
out
test
xor
dec
lods
ja
out
inc
mov
movlps
ret
iret
lods
pop
cmpsb
pop
test
sbb
and
jge
mov
jns
popf
orl
xor
mov
mov
add
mov
pop
xor
mov
lret
inc
cmpsl
adc
aas
cli
dec
sub
mov
push
xor
inc
fst
xchg
mov
xchg
hlt
adc
dec
out
loopne
cld
inc
clc
fidivs
or
adc
jne
stos
adc
shl
in
xchg
lods
in
packssdw
ljmp
sub
and
sub
xchg
std
jge
lods
and
inc
js
dec
mov
inc
jp
xlat
lahf
fs
iret
mov
cs
out
pand
mov
push
cmpsl
mov
stos
sarl
mov
adc
dec
jp
cmpsb
and
test
mov
push
mov
notb
sub
lea
inc
pop
xor
jge
cmp
inc
and
xchg
adc
xor
pop
inc
and
push
shlb
test
adc
pushf
gs
jns
cmpsl
cltd
rcr
imul
ret
dec
shl
popf
push
xor
pusha
mov
imul
inc
insl
mov
enter
jne
add
xor
into
cmp
push
mov
inc
push
xor
int
lods
les
lcall
lcall
mov
icebp
cmp
decb
xor
sti
pop
mov
pop
iret
adcl
daa
cli
lods
fidivrl
mov
push
insb
jnp
cmp
sbb
popf
pushf
aam
nop
sbb
cmpsb
vmovaps
addr16
jo
aad
fbstp
das
jb
das
push
imul
mov
mov
sub
push
lods
cltd
test
cltd
repz
hlt
jmp
push
mov
or
cmp
into
push
cmp
test
push
add
jmp
in
dec
jae
stos
stos
sarl
shrl
cmp
into
mov
xor
mov
mov
rcll
rorb
add
mov
add
xchg
sti
jl
xchg
sbb
xchg
jmp
stos
std
fdivs
mov
inc
add
pmaxsw
mov
jne
stos
pop
bswap
sbb
dec
test
pop
or
popf
shll
loop
ss
into
add
hlt
lahf
add
pop
and
out
int3
add
in
mov
iret
xchg
xchg
inc
lods
ja
out
sub
sub
mov
jg
shl
fsts
enter
in
lods
mov
imul
jge
cmpsb
adc
sahf
aad
aaa
dec
push
out
sbb
pop
dec
movsl
call
arpl
dec
lret
cmp
ja
or
lret
movsb
mov
adc
cmp
sub
cmpb
test
xchg
mov
pop
lret
sub
cs
test
adc
in
pushf
and
jle
movsb
jp
xor
sub
sahf
inc
pop
and
fisubrs
xchg
data16
jp
subb
data16
jne
mov
sub
push
movl
movb
or
iret
inc
dec
xor
outsb
pop
mov
insl
fucom
push
fidivl
xchg
fdivr
insb
fsts
and
test
movsb
inc
sub
popa
andl
dec
cli
test
adc
lock
or
das
xchg
mov
adc
call
fnstenv
scas
iret
in
aam
test
repz
mov
xor
xlat
sbb
bsr
jecxz
push
mov
cmp
cmp
cmpsb
push
push
mov
in
jbe
and
loop
push
subb
aaa
mov
orb
cmpsl
or
leave
sub
dec
mov
push
je
scas
pop
es
and
or
lahf
cmp
and
push
test
inc
out
scas
add
mov
push
or
mov
or
es
lds
faddl
xchg
sbb
cmpsl
int3
clc
outsl
andl
push
call
mov
scas
jno
aas
fincstp
jge
sbb
test
jecxz
jnp
push
jnp
push
pop
lds
fisubrs
push
xchg
and
ljmp
fbstp
mov
iret
cwtl
jnp
cmp
outsb
test
cli
cmp
fiadds
xchg
lcall
inc
mov
in
sub
ffree
add
adc
imul
loopne
orb
jmp
sbb
push
cmp
clc
xchg
cmp
mov
lock
insb
popa
mov
fisubl
add
fsubs
mov
add
lcall
inc
insb
push
out
and
jle
jnp
adc
pop
dec
add
test
les
or
or
mov
or
or
or
imul
xor
cmp
pop
jle
mov
xchg
pop
mov
xchg
cmp
mov
dec
cmpsb
cwtl
iret
mov
iret
hlt
xchg
cmp
xchg
xor
mov
mov
je
into
inc
lahf
push
pop
bound
push
insb
or
nop
push
pop
lahf
xorl
clc
cltd
fidivs
and
xlat
xchg
pop
xlat
push
mov
sbb
jbe
test
or
sbb
add
mov
xchg
aam
aas
sbb
mov
mov
push
lret
jb
cmpb
cltd
mov
iret
cli
stos
dec
dec
xchg
sbbb
jle
das
inc
fbstp
cmp
aad
popf
lret
xchg
mov
stos
dec
lret
xchg
ficoml
or
scas
jmp
fwait
mov
push
leave
adc
scas
push
xorl
test
jns
scas
jo
mov
pop
jmp
mov
or
lock
dec
out
or
ret
popa
inc
fs
lahf
subl
push
hlt
push
pop
imul
dec
sbb
push
jnp
jmp
sub
out
pusha
ret
or
outsl
test
bswap
push
in
out
sub
cmc
clc
icebp
mov
fidivrl
cmc
jp
sbb
lods
ret
jl
jb
mov
dec
push
add
mov
pop
sub
sub
lods
out
mov
push
jge
aas
imul
cli
scas
jmp
dec
ret
int
lea
or
push
pop
and
or
retw
ss
mov
pop
and
not
mov
aam
add
insb
push
fildl
dec
shlb
sbb
inc
jmp
clc
push
and
lcall
adc
add
and
insb
insb
cmp
pop
loopne
fwait
xor
mov
fstpt
mov
dec
or
insl
add
adc
mov
cwtl
sub
lcall
mov
pop
xchg
adc
cmp
out
imul
rcr
test
dec
sub
jmp
std
xchg
mov
popa
lock
add
xchg
hlt
mov
pushl
lcall
jmp
std
inc
cli
add
add
and
mov
mov
jge
pop
push
call
shll
mov
and
push
sub
push
mov
daa
stos
loop
xor
std
and
inc
inc
jp
lahf
lcall
clc
sbb
sbb
in
out
lret
lods
sbb
cmp
mov
imul
addr16
mov
dec
ds
call
jno
cmp
adc
aad
dec
popl
jecxz
ja
pop
sbbl
sbb
pop
sarl
cli
pop
sti
dec
inc
clc
pop
jne
add
test
push
push
loop
cmp
mov
sbb
js
sbb
adc
nop
cli
sub
push
imul
ret
or
sub
mov
jb
shll
add
ret
out
dec
cmc
or
or
adcl
lcall
and
inc
mov
jmp
call
rcll
aaa
mov
adc
xchg
out
mov
les
adc
lahf
test
dec
ds
aas
inc
jno
pusha
lock
xchg
loopne
js
xor
aam
nop
push
push
gs
or
test
test
sti
dec
jecxz
mov
repz
xchg
or
rol
nop
mov
shrb
iret
and
xchg
ficompl
leave
adc
sub
insl
adc
insb
lahf
xor
dec
fadds
cwtl
or
pop
sub
ret
jge
and
arpl
pushf
jne
dec
aad
icebp
and
out
movsb
or
mov
jmp
xor
and
arpl
pop
pop
sub
sbb
movl
in
test
push
dec
mov
and
jmp
cmp
fucom
pop
cs
test
or
testb
push
in
mov
hlt
push
das
xchg
and
pop
sahf
stc
xchg
jo
lods
dec
dec
and
sub
push
ljmp
rclb
cmp
call
aam
stos
jae
cwtl
push
mov
enter
mov
les
sub
les
cmp
test
and
adc
mov
or
sbb
add
fcmovnbe
lods
and
stc
mov
int3
in
pop
mov
or
popf
aas
outsl
push
int3
fnstcw
fidivrs
mov
push
cmp
cs
mov
mov
jle
imul
cmpsb
cmp
add
xor
je
movsl
push
sbb
mov
push
test
jl
jge
pushf
mov
push
add
inc
mov
jge
out
xchg
add
lea
or
and
mov
jb
data16
rcrl
jecxz
movsl
inc
push
dec
push
jae
sbb
pop
lods
mull
aad
xchg
mov
add
cmpsb
ret
andb
cmpsb
mov
pop
cmp
cmp
daa
pop
stos
in
aad
jae
lret
fidivrl
sbb
insb
lcall
mov
std
add
lret
xor
inc
mulb
xor
pop
mov
cmp
and
scas
jo
mov
bound
out
test
sbb
icebp
out
xchg
sub
push
in
outsb
in
sub
inc
cmp
data16
pop
test
adc
push
sahf
mov
out
jecxz
rorl
push
xor
push
jbe
test
jmp
sub
jmp
mov
pop
shll
paddb
movsl
outsl
mov
out
jle
and
ja
mov
je
xorb
inc
or
jge
cmc
pop
inc
je
jne
fiaddl
jmp
cs
jmp
inc
iret
sbb
dec
lret
and
repz
fucomi
psubq
push
sub
xchg
mov
sar
xor
mov
andl
cltd
fsubl
cmp
gs
cmp
xchg
cmp
decl
push
aad
hlt
cmp
inc
xchg
jae
add
push
rorl
xchg
xor
mov
cmp
sbb
arpl
cltd
mov
loope
cmp
jmp
mov
and
or
xor
sub
loopne
cli
shl
xchg
pop
mov
and
out
adc
aaa
repz
dec
rorl
loope
xchg
movsb
cmpsb
pop
fbstp
mov
pop
mov
cmp
pop
jnp
pop
jecxz
mov
in
and
xchg
mov
pushf
jnp
pop
xor
add
jb
and
cmp
push
arpl
lods
out
dec
dec
push
inc
stos
aam
sub
es
addl
mov
cmp
xchg
xor
lahf
sub
divl
and
repnz
dec
cmp
loop
test
cmpsl
jae
pop
ja
cmp
xor
movsb
cmpsl
mov
push
scas
xchg
xchg
outsb
negl
imul
clc
xlat
rcl
sub
push
mov
add
sbb
adc
daa
jb
adcb
ss
lcall
test
xchg
dec
ljmp
lcall
ds
add
and
aas
pop
in
mov
call
mov
push
jecxz
test
push
cmp
orl
in
rorb
lret
sub
shlb
xchg
std
loope
xchg
push
ret
scas
pop
push
mov
push
in
pushl
sbb
adc
das
jo
jmp
dec
mov
daa
adc
mov
arpl
and
testb
jl
repz
mov
push
inc
outsl
fsubrp
scas
xchg
int
push
xchg
pop
pop
arpl
cmp
fsubr
cmp
jle
or
jg
dec
cmp
xchg
add
ja
add
lods
out
clc
pop
adc
cmp
sub
adc
sub
mov
mov
push
adc
dec
jg
add
cmp
repz
rcll
jle
mov
xchg
inc
lcall
mov
sub
push
mov
fimuls
mov
mov
xchg
fildll
jl
adc
add
ds
inc
gs
fdivr
outsl
push
mov
or
pop
les
les
jge
add
pop
js
cmp
movsl
aad
es
cmp
loopnew
jecxz
fwait
push
sbb
adc
and
dec
daa
pop
imull
test
xchg
mov
movl
mov
sti
mov
ret
decl
mov
ja
stos
dec
mov
jp
adc
pushf
mov
icebp
push
adc
inc
dec
mov
jge
jg
pop
jmp
mov
add
jae
sub
cmp
cli
pusha
push
sbb
stos
jmp
divl
fdivs
cmc
add
inc
adc
cmpsb
jne
or
ret
jp
inc
mov
ds
mov
cmpsl
arpl
inc
pop
jb
pop
mov
jecxz
mov
inc
jp
lahf
jl
mov
mov
js
or
mov
mov
pop
mov
adc
and
xchg
mov
cwtl
lds
cli
or
ss
fcos
call
mov
addr16
adc
mov
addb
jne
xchg
mov
fsts
lret
pop
stos
dec
jo
inc
sub
mov
xchg
or
repnz
rcl
cltd
test
lods
sbb
nop
es
sbb
sbb
add
aaa
test
ss
nop
mov
mov
dec
sbb
enter
pop
or
out
gs
push
leave
cmovns
push
in
jae
sbb
shrb
loop
das
or
popf
hlt
lcall
ret
push
mov
js
mov
mov
ds
divb
or
push
ret
cld
int
or
pop
xchg
sub
push
fcomi
and
xor
add
lret
cli
mov
pushf
outsb
or
adc
icebp
xor
xchg
add
add
loop
add
decl
mov
in
testb
in
aad
aaa
cltd
adc
or
icebp
push
shlb
lret
pop
jno
inc
pop
insb
insb
je
fs
orb
lgs
pop
mov
ljmp
sbb
sub
inc
outsl
data16
jg
adc
push
mov
mov
xor
ffreep
mov
add
or
add
sub
and
dec
sub
jo
cs
jg
sub
inc
lods
pop
insb
mov
sub
add
dec
mov
movsl
arpl
xchg
mov
mov
lods
push
or
out
int
inc
sbb
and
lcall
xor
mov
jbe
daa
push
xor
movsl
insl
aas
sub
inc
ret
nopl
mov
mov
jns
sub
pop
xchg
jl
cwtl
push
jmp
xor
lret
or
int
mov
adc
or
jne
or
push
xchg
sub
into
jae
sbb
pop
stc
aaa
cwtl
and
jecxz
call
fs
aad
leave
test
xor
mov
cmp
add
xor
push
cli
cmp
and
jg
fbld
adc
push
push
fistl
jl
xchg
fsubrp
push
jne
lcall
aas
aas
and
sbb
ret
outsb
xchg
scas
add
js
mov
pop
sti
lahf
xlat
xor
cmp
mov
ss
xor
pop
inc
mov
sbb
add
sbb
xchg
xor
pop
or
xor
xor
hlt
sbb
jle
push
das
ds
movsb
int3
shrb
adc
aaa
cli
std
push
sbb
cld
shrl
mov
mov
sahf
push
add
xor
int
jb
adc
pushf
sti
arpl
clc
shlb
std
into
adc
add
lea
or
sub
cli
mov
loop
and
xchg
cmp
mov
sub
xchg
inc
subl
addr16
xor
and
test
jne
or
lea
sub
lods
hlt
adc
ljmp
imul
inc
mov
fs
or
mov
mov
mov
inc
stos
mov
mov
sbb
lret
sub
jle
mov
popf
mov
adc
pop
into
call
lea
jae
lods
mov
jbe
adc
cmp
dec
stos
cmpsb
mov
ret
push
mov
jno
pop
mov
mov
scas
xchg
inc
xchg
mov
cmp
imul
add
sbb
pop
test
mov
add
popa
or
mov
mov
push
and
mov
cld
adc
ret
mov
out
pusha
mov
mov
in
push
mov
scas
push
sbb
in
or
dec
jmp
stc
dec
xor
es
xchg
outsb
ffree
negb
push
mov
mov
imul
mov
mov
pop
sbb
sti
pusha
in
mov
sbb
cmpsb
push
inc
popf
iret
pop
ret
aas
cmpsl
pop
pop
mov
subl
test
cmp
stc
rcl
rorl
cmc
test
lods
and
sub
push
xchg
cmp
cwtl
lods
pop
xchg
xor
imul
pop
xchg
cltd
mov
aad
push
inc
mov
lret
fnsave
cmpsl
dec
rcr
std
add
sub
adc
mov
pop
cmp
int
mov
mov
fdivrs
jg
inc
std
pushf
loop
mov
nop
add
mov
jbe
inc
sub
mov
or
mov
mov
jne
push
cs
jecxz
dec
or
in
add
daa
fsubrp
jmp
cmp
mov
cld
test
sub
jl
or
mov
lods
bound
xor
mov
jne
mov
push
pop
pop
push
sbb
lods
sub
mov
xor
jo
sbb
push
or
test
sub
popf
mov
cmp
js
stc
sub
xor
xchg
mov
daa
out
or
pop
xor
cmp
mov
jle
mov
orb
xor
aad
rorl
push
cmpsb
add
push
sub
add
adc
test
pop
cmpsb
adc
loope
xchg
addr16
or
and
aam
push
jbe
mov
pop
xor
shr
mov
pop
xchg
mov
mov
ljmp
push
sub
filds
xor
into
cmp
je
popf
aam
sub
sub
decl
cmp
cmp
call
stc
out
notl
push
in
cld
and
or
mov
pop
addr16
sti
and
cmp
xchg
add
stos
rol
xchg
xchg
popf
insl
push
lea
mov
pushf
mov
stos
out
fwait
inc
mov
dec
pop
sub
sbb
fimuls
enter
sarl
arpl
jle
fstpt
leave
push
movsl
or
cmp
sbb
inc
orl
inc
mov
push
sbb
int
xchg
popa
lock
add
movsb
jmp
jo
pushf
in
lock
mov
fidivrl
cmp
inc
pop
and
and
loopne
movsl
jecxz
fxch
sub
cmp
jne
leave
rorl
add
mov
and
push
jmp
jl
push
add
jl
gs
lock
jo
adc
mov
and
pop
je
lea
cmp
mov
push
ss
cmpl
xchg
push
adc
pushf
lods
mov
iret
and
out
test
lcall
das
pop
inc
mov
dec
sbb
in
iret
mov
dec
add
insb
std
outsb
lret
stc
imul
xchg
fwait
adc
stc
and
mov
fildl
xchg
or
mov
in
cmp
adc
popa
or
jg
add
nop
cs
xor
xchg
std
fmul
xlat
iret
lahf
adc
lea
dec
inc
aas
cmp
dec
stos
lcall
fstpl
mov
es
testb
mov
stos
scas
fcomip
dec
ss
pop
jns
mov
and
jns
xchg
imul
jecxz
icebp
fwait
jno
negl
je
xor
into
movsl
adc
xchg
les
dec
in
das
jl
mov
arpl
test
add
aad
push
addb
lret
stos
movsl
sti
and
adc
jl
xor
gs
ljmp
mov
ss
and
mov
fisubl
imul
shlb
dec
jns
sbbl
jle
shlb
das
jmp
and
loop
xlat
clc
arpl
out
iret
ficompl
notb
andl
nop
fldt
sbb
movsb
clc
mov
mov
sub
lcall
cli
adc
frstor
ds
cmp
push
ficoml
mov
xchg
outsl
lea
sub
or
cmc
add
sub
imul
movsb
test
mov
popa
sar
mov
out
fldl
pop
sub
movsl
and
fdivl
xor
ljmp
in
shrb
dec
out
pop
and
std
ror
xchg
fldl
or
cltd
test
popf
dec
xchg
notl
cmc
js
push
push
mov
pop
dec
cwtl
dec
and
out
fcmove
adc
scas
mov
lock
and
mov
cld
cmp
pop
cmp
inc
pop
inc
into
xchg
sub
push
lds
stc
xchg
lret
sub
mov
and
push
sub
das
jl
jo
jns
adc
arpl
cmpsb
outsb
add
out
cmpsb
mov
es
lods
jb
and
xor
add
lcall
daa
aas
int3
dec
call
subl
mov
out
push
mov
mov
pop
mov
inc
jno
shrb
stos
fldcw
xor
inc
aad
sbb
mov
sub
ja
ljmp
push
sub
rorl
ds
jo
scas
xchg
popf
and
cmpsb
mov
scas
mov
cwtl
pop
fwait
ret
cmpsb
fcmovnbe
inc
sbb
mov
and
xchg
aaa
out
mov
or
pop
adc
inc
sub
dec
fs
jnp
xlat
add
inc
dec
mov
push
hlt
xchg
inc
stos
or
aad
pop
sbb
testl
icebp
incb
rcrl
dec
aam
jge
pusha
mov
in
jg
xchg
sarb
bound
or
mov
cmpsl
into
loop
daa
in
dec
loop
and
adc
add
icebp
and
xlat
inc
fidivrs
shll
pop
inc
in
faddl
cmp
or
hlt
dec
pop
xchg
ds
pop
test
les
sbb
out
lock
sbb
sub
pop
sub
mov
notb
jae
or
in
xor
cmp
fisttpll
sbb
pop
xor
adc
fldt
incl
fs
cltd
mov
mov
lahf
pusha
gs
out
sbb
sub
sub
mov
lods
test
in
sti
adc
movsb
jns
fwait
adc
sahf
enter
or
adc
mov
jg
out
push
mov
dec
popa
dec
psllw
outsb
fldenv
and
daa
xchg
iret
and
adcb
push
sub
mov
leave
outsl
aas
jae
sbb
test
push
adcl
sbb
arpl
inc
lcall
imul
je
int
enter
cmc
insl
mov
pop
add
in
add
xor
or
or
js
adc
xor
adc
out
das
aas
and
sub
sbb
mov
mov
jmp
mov
sub
aas
push
push
lret
pop
subl
cmp
loopne
lock
inc
add
out
mov
push
mov
cmp
pop
mov
cmc
into
sbb
cs
sbb
stos
pop
es
mov
cs
add
xor
fmull
jp
pop
xor
push
gs
in
adc
sbb
mov
xor
sti
push
aaa
fldl
xchg
das
jnp
data16
or
insl
jae
adc
mov
out
mov
add
cmpsl
in
xchg
pop
int3
in
and
inc
pop
sub
push
or
sbb
cmp
out
fidivrs
stc
push
cmp
xor
sti
mov
and
add
pusha
ss
inc
insb
adc
dec
and
xchg
pusha
out
sti
lcall
bound
inc
shlb
scas
pop
push
daa
fbld
pusha
jb
xor
sub
in
addb
fildl
sbb
or
dec
jo
loope
fiadds
mov
mov
jb
es
inc
es
shlb
dec
xchg
enter
orb
inc
das
adc
out
call
pop
mov
pop
iret
mov
jo
mov
xchg
mov
and
stc
stc
cmp
or
mov
rol
adc
xor
jno
xchg
adc
adcb
lret
xchg
and
push
cmp
push
es
out
adc
mov
pop
imul
stc
subl
xchg
xor
xchg
std
inc
std
and
aaa
shrb
test
aam
movb
fwait
lock
mov
outsl
add
repnz
hlt
mov
sub
xchg
clc
mov
outsl
add
sti
inc
push
jmp
pop
mov
fcmovb
add
shlb
sbb
test
ret
call
mov
inc
mov
push
xchg
sub
and
sahf
jecxz
or
aas
int3
aas
fisubl
jne
jmp
cmp
xchg
test
push
cmpsl
dec
mov
mov
mov
std
pop
scas
je
aam
sbb
mov
icebp
arpl
mov
sahf
mov
or
out
ss
mov
lock
mov
xchg
popa
icebp
pop
lods
mov
mov
or
adc
and
inc
pop
cmp
ljmp
movsb
out
orb
sub
push
into
xchg
adc
movsb
popf
mov
je
adc
jbe
aad
pop
cmp
out
pop
inc
pop
mov
inc
jl
dec
into
push
add
mov
lock
repnz
lcall
dec
sub
pop
leave
test
push
inc
mov
out
fadds
jne
push
fcoml
jge
xor
scas
dec
mov
adc
mov
shlb
pushf
or
pop
orb
push
fsubr
mov
mov
out
inc
and
fildll
es
or
lahf
negl
ja
mov
jge
push
add
aad
jecxz
iret
pushf
pop
add
iret
mov
fsubrs
loope
or
mov
xchg
fisttps
adc
lahf
adc
push
ucomiss
xor
xchg
fistps
cwtl
sbb
mov
cmp
add
notl
mov
mov
sub
xchg
call
subl
out
cmp
das
push
stos
mov
jnp
mov
arpl
in
pop
cmpsb
fdivs
and
cld
shll
pop
fwait
inc
push
dec
bound
notb
add
loopne
xchg
out
shrl
push
outsl
aas
mov
and
and
mov
fsubr
aaa
jmp
aas
and
subb
lods
xor
scas
cld
jecxz
addr16
xchg
movsb
out
scas
or
dec
push
cmp
jg
jne
xor
adc
decl
test
mov
or
lahf
sbb
push
adc
mov
fs
outsb
or
pop
cmc
stc
or
push
xchg
test
jmp
mov
jmp
xchg
dec
or
jge
add
jno
sub
les
cld
nop
cwtl
mov
shlb
movsb
or
jg
xor
xor
mov
imul
jne
lcall
cmp
cli
mov
leave
mov
inc
or
inc
cwtl
mov
call
icebp
sarb
test
stos
mov
xchg
sub
orl
inc
rcll
xor
cmpsl
inc
mov
mov
pop
ljmp
stos
sbb
jle
inc
xchg
xchg
pop
mov
sbb
mov
rcll
outsb
mov
into
daa
lods
inc
lret
mov
outsb
mov
mov
xchg
dec
or
pusha
rep
add
es
dec
incb
fwait
inc
mov
fnstenv
in
sbb
jb
dec
inc
cmp
xchg
sub
fwait
jo
sarl
adc
sub
jecxz
out
loop
int3
push
sub
xor
push
cs
enter
in
sahf
shrd
in
jl
xchg
dec
sbb
mov
fcmovu
data16
movsb
dec
stos
or
cs
gs
fisubl
lret
ret
jecxz
push
sti
inc
dec
inc
push
inc
cmp
jb
mov
xor
sbb
cltd
negl
test
shl
mov
jp
xchg
cmp
cmp
adc
fidivl
cli
loop
sti
nop
fildl
mov
inc
or
mov
stos
je
jnp
popa
push
pop
clc
xor
out
pop
cs
add
mov
mov
adc
cltd
mov
mov
pop
xchg
gs
jae
jae
leave
dec
xchg
ret
test
outsb
mov
lods
push
inc
icebp
push
and
mov
test
or
aas
push
jo
push
lods
and
mov
test
flds
hlt
in
in
jae
repnz
dec
push
ret
in
mov
sbb
cld
push
sub
shll
sub
insb
fidivrl
ja
std
jecxz
int
pushf
enter
js
inc
out
stos
pop
dec
cmp
mov
mov
rcll
jnp,pt
int3
sub
add
push
pop
ljmp
lret
mov
mov
roll
xor
cltd
mov
je
or
rep
pop
inc
sub
push
dec
in
shrb
fmul
call
pop
hlt
hlt
in
inc
pushl
shl
pop
mov
je
xchg
lods
outsl
push
sarl
add
pusha
es
popf
gs
sbb
cmp
cltd
inc
xor
dec
cmp
loop
data16
inc
dec
sub
popa
inc
and
inc
pop
push
pop
into
mov
mov
xlat
subl
imul
mov
pop
mov
sbb
jmp
hlt
push
jns
push
mov
int
fsubl
test
mov
jmp
fdivs
nop
or
cmc
loope
repnz
mov
sbb
sub
sbb
stc
xor
rorl
or
out
mov
ret
fnsave
dec
xor
jae
add
gs
fsubrs
cltd
cmp
xchg
enter
arpl
insb
inc
cmp
lahf
and
push
addr16
testl
test
pop
hlt
inc
pop
xchg
pushf
mov
mov
xorl
cmp
jecxz
insl
dec
int
pop
mov
and
or
cmpsl
push
adc
aad
xchg
mov
and
adc
das
inc
pusha
ret
inc
xchg
mov
loope
add
popl
aaa
xchg
inc
cmc
add
pop
mov
scas
repnz
test
mov
sub
jmp
mov
movl
push
pop
inc
pop
sub
insb
les
adc
loopne
xor
bound
mov
pushf
adc
sbb
pop
imul
ljmp
inc
arpl
pop
arpl
add
jge
pop
adc
loop
ret
mov
cmpsb
lret
ret
ja
out
jmp
mov
jno
mov
call
enter
jmp
inc
cld
push
push
enter
mov
fistpll
add
and
shlb
adc
xchg
xchg
fists
lds
inc
mov
sbb
mov
insb
stos
imul
sub
xchg
push
cmp
inc
adc
andb
mov
mov
sub
sahf
push
xchg
lock
push
mov
das
adc
push
in
pop
aad
pop
es
push
xor
xor
xchg
test
outsb
in
push
xor
and
adc
scas
mov
fdivrs
jg
sub
sub
fisttpll
shrl
dec
xchg
jmp
inc
into
cmp
jl
aam
in
lods
or
aaa
cmp
fnstcw
mov
add
aaa
pusha
test
shll
js
lods
cli
sbb
inc
test
jecxz
pop
in
hlt
int3
add
repz
dec
jo
pop
fdivl
jecxz
in
sbb
imul
enter
pop
cs
fistpl
mov
xchg
or
movsl
sahf
mov
dec
mov
xchg
mov
push
clc
lods
sub
mov
push
dec
insl
fs
aaa
pmulhuw
sub
sub
fs
and
inc
mov
mull
jl
jmp
test
mov
xchg
pop
cmp
subl
or
movl
or
cmp
in
icebp
iret
lods
popf
pusha
jno
gs
and
cmp
hlt
push
or
jmp
loop
or
sub
pop
xchg
test
add
aas
and
cmpsb
cld
and
test
or
mov
xlat
jle
xchg
into
les
scas
mov
jne
sahf
mov
jae
push
popf
mov
cmpsl
cmp
aam
sbb
rol
adc
sti
dec
xor
pop
popa
mov
stos
gs
hlt
js
inc
adc
pop
rclb
jb
subb
cmpsl
out
in
imul
jne
test
add
jl
jge
xor
clc
xor
add
in
jp
arpl
jle
jbe
and
sub
pop
mov
and
jmp
mov
mov
or
mov
push
aas
jo
xchg
xchg
or
stos
pushf
pop
dec
stos
lock
adc
mov
mov
push
es
inc
jmp
xchg
in
push
jmp
dec
xlat
mov
test
out
sub
sbb
mov
stos
mov
sbb
push
sahf
xor
cld
sub
pop
lahf
arpl
imul
or
nop
dec
out
cmp
fistl
push
sbb
xchg
cmc
jg
pop
xchg
pop
fdivl
pop
push
mov
fmuls
icebp
fcmovnbe
negl
xchg
popa
lcall
xchg
outsl
mov
inc
push
leave
cld
jp
mov
inc
fldcw
stc
xor
mov
mov
adc
inc
pop
xor
or
mov
jae
into
push
dec
push
xchg
xor
cld
cwtl
add
ljmp
or
dec
dec
sbb
pop
add
and
inc
and
inc
shr
lods
push
cmpsb
pop
mov
lea
push
push
mov
into
in
dec
es
xor
pop
mul
shlb
sub
cmc
inc
push
int
xor
mov
xor
outsl
sub
mov
mov
xor
push
adc
idivl
mov
rolb
in
lds
out
pop
ret
dec
movl
jge
push
xor
testb
mov
insl
dec
fildl
pop
push
divb
xor
and
cmc
fcoml
mov
fcoms
ljmp
lret
jg
xchg
nop
loope
ja
xor
xchg
mov
xchg
xlat
or
mov
push
mov
adcl
notl
xchg
lock
inc
popa
xchg
fsubp
call
hlt
cli
cmp
test
bound
incl
adc
inc
dec
leave
mov
mov
push
cmp
xchg
test
mov
nop
jbe
dec
dec
mov
jno
stc
xchg
andl
or
add
and
push
fdivr
js
pushfw
pop
ret
pop
loop
lods
out
roll
popa
outsb
mov
ljmp
mov
xchg
daa
in
stos
rolb
cmpsl
lods
stos
mov
xchg
popa
push
push
add
imul
in
arpl
mov
push
sub
cmpl
mov
pop
fwait
xor
or
rcr
or
sbb
cli
movsb
cmp
cmp
mov
or
dec
xchg
xchg
or
enter
int3
in
in
les
xor
mov
nop
popf
or
clc
pop
adcl
out
call
bound
pusha
jg
mov
divl
iret
arpl
xor
lahf
outsl
mov
adc
jo
mov
xor
inc
in
int3
adc
cld
and
dec
out
push
mov
pop
push
rclb
fdiv
and
cli
xchg
bound
mov
or
jg
into
clc
push
aad
pop
fs
mov
aad
jp
std
test
aad
cmpsl
xchg
add
sbb
cmc
in
movsb
xchg
sarl
adc
jno
or
mov
dec
push
adc
and
jne
sub
push
xlat
ja
in
sub
addr16
jecxz
adc
bound
mov
dec
mov
add
jno
xchg
js
mov
pop
loope
adc
bound
jmp
mov
fs
jne
xor
punpckhdq
pop
sbb
ret
xchg
sub
aas
jg
loopne
dec
xor
cs
in
sahf
push
jge
sti
jle
inc
clc
lret
scas
or
inc
roll
sub
pusha
adc
insb
imul
es
pop
pop
in
fnstsw
fisubs
leave
adc
mov
push
push
fs
aas
stos
add
in
das
gs
ds
inc
popa
sub
aas
data16
movsl
scas
dec
popf
mov
dec
cltd
mov
mov
subl
lcall
xchg
cwtl
lods
push
fdivs
pop
mov
xchg
bound
inc
cmc
push
sbb
cmp
jmp
jbe
xchg
bound
jp
popf
bound
and
in
out
sub
imul
jb
push
xlat
ljmp
sub
loope
sub
sbb
lea
cmp
cmp
movsb
fidivrl
inc
add
pop
cmp
test
ss
clc
mov
xorb
je
cmc
dec
sti
bound
xor
in
cmpsb
jmp
aam
lods
mov
push
jle
mov
popa
cmc
dec
daa
je
stos
push
js
ds
adc
and
xor
bound
shlb
jb
adc
lcall
ret
cmc
adc
js
sbb
repnz
xor
pop
push
daa
arpl
and
dec
repz
ret
ss
and
push
sahf
aaa
push
sahf
sbb
xchg
les
or
xor
mov
int
mov
pop
decl
insb
out
mov
lahf
sbbb
mov
imul
mov
adc
mov
aaa
jnp
add
stos
sub
push
dec
scas
iret
lahf
sbb
sbb
je
repnz
mov
jno
add
imul
and
in
mov
or
sbb
sbb
mov
xorl
gs
shl
inc
stc
pop
es
mov
dec
ret
ja
iret
dec
lret
ss
xchg
or
sbb
xchg
stos
popa
jge
shrl
pop
jb
sbb
ret
in
push
pop
cmp
inc
daa
movsb
loope
jb
stos
cmpsl
in
rolb
push
sbb
mov
ljmp
mov
bound
mov
stc
fcmovnb
xor
jae
sub
fwait
mov
inc
xchg
xchg
faddp
jbe
xor
cwtl
mov
mov
pop
out
out
dec
ret
dec
add
inc
or
xchg
rcl
enter
cmc
push
mov
mov
arpl
hlt
jno
sub
mov
fstps
xor
shlb
pop
in
stos
push
jmp
out
cld
lea
pop
mov
sbb
clc
push
inc
mov
cmp
jae
jae
jo
std
int
call
mov
pushl
cltd
nop
and
xchg
mov
test
push
hlt
cmp
jecxz
inc
mov
sbb
add
aad
dec
test
insl
mov
mov
test
popa
repz
xchg
and
aad
lods
int3
inc
loop
jl
pop
mov
add
or
adc
inc
rorl
mov
mov
sahf
xor
dec
sti
test
loope
push
insb
clc
iret
addr16
shrl
arpl
xchg
jl
mov
pop
xor
inc
fistpll
mov
cmc
cmp
int3
gs
pop
jo
sub
pushf
imul
or
mov
mov
cmp
cmc
jle
test
mov
push
leave
add
fs
test
and
mov
adc
rcrb
xchg
pop
add
mov
ljmp
sbb
lds
pop
lret
call
pop
sub
inc
imul
push
pop
leave
out
xor
jp
mov
aam
andb
fs
mov
jecxz
dec
jecxz
inc
stc
adc
enter
mov
aam
push
iret
out
cmpsb
cmp
lock
sbb
ljmp
mov
outsb
or
xor
xor
sbb
into
and
call
jecxz
mov
push
nop
pushf
mov
mov
pop
sti
shrl
mov
lods
cmp
in
mov
jl
movsb
shl
cmpsl
push
sub
out
cmpsl
and
cmc
cwtl
push
jo
or
gs
and
cmp
pop
imul
addr16
imul
inc
ret
or
mov
fs
out
push
es
xchg
imul
mov
mov
add
pop
add
adc
es
ja
mov
loope
leave
sarb
aas
sbb
mov
xor
adcb
testb
repz
insl
test
notl
jb,pn
call
ficoml
xor
xchg
inc
jge
int
cmc
pop
pop
or
xchg
mov
push
xor
sbb
mov
inc
push
leave
test
ret
xchg
cmc
push
mov
filds
int3
add
rolb
or
rcrb
daa
sub
sbb
xor
insb
push
fldenv
dec
xor
or
mov
fimuls
test
fwait
jb
cmpsb
test
shrl
dec
subb
and
sub
add
imul
adc
subl
mov
movsl
jne
test
add
jmp
mov
insb
adc
mov
pop
xor
maxps
sub
repz
test
push
and
sbbl
inc
ja
test
push
push
sub
sbb
out
je
dec
adc
fwait
cmp
mov
cmpsb
sub
bound
subb
stos
pop
movsb
sub
adc
ljmp
or
imul
xchg
in
jae
fwait
push
repnz
add
and
jle
jns
push
sub
xchg
fnstsw
out
jns
and
or
xchg
sub
pop
or
mov
aam
pop
cmpb
sbb
mov
pop
jle
push
bound
test
in
inc
mov
dec
adc
mov
ja
add
lods
mov
sbb
mov
cmp
sahf
mov
clc
mov
mov
dec
outsb
lret
popf
add
sbb
ret
mov
mov
add
popf
and
lcall
popf
rcl
push
dec
xor
sbb
in
sbb
lcall
imul
lds
cwtl
sbb
es
adc
in
ljmp
xor
daa
stos
enter
cmp
out
sbb
inc
sub
pop
arpl
subb
inc
lret
int
leave
xchg
and
and
out
xchg
ds
push
xchg
adcl
outsl
test
stos
and
cwtl
inc
cmp
and
mov
jmp
dec
test
clc
mov
xchg
pushf
jmp
sarb
xchg
sar
mov
in
add
lret
mov
sbb
out
fldcw
jae
loopne
cltd
jno
jecxz
pop
inc
mov
test
fldenv
pop
in
mov
and
insb
jb
mov
and
scas
mov
sbb
jg
mov
and
je
jge
sbb
xchg
or
fs
rcrl
inc
mov
inc
mul
out
add
std
cmpsl
xchg
adcl
sarl
int
inc
pusha
sbb
out
pop
pop
out
loopne
inc
arpl
jmp
mov
xlat
cmpsb
lods
sbb
mulb
popa
sbb
mov
fwait
icebp
mov
jecxz
in
stos
aaa
or
iret
push
mov
dec
and
fidivl
ja
daa
dec
clc
jmp
int3
std
mov
aad
push
leave
in
push
pop
out
pop
je
adc
adc
cwtl
loop
push
pop
push
ja
push
fiadds
bound
test
dec
int3
inc
fldt
sbb
pop
jne
lret
addr16
or
stc
fs
imul
jge
daa
push
adc
mov
xchg
scas
leave
sbb
mov
jae
and
lea
js
insb
aas
xchg
sar
test
mov
pop
mov
jmp
mov
movsb
add
push
adc
sysenter
scas
mov
jmp
out
out
and
lods
sbb
lret
out
std
pop
mov
repnz
push
mov
pop
sbb
pop
fmull
sbb
jmp
sbbl
arpl
popf
mov
push
pop
mov
lods
lcall
jnp
add
rclb
adc
test
fsubl
cmp
out
out
xlat
mov
pushf
enter
icebp
jbe
inc
ret
movsb
in
or
out
sbb
ficoml
dec
testl
adc
sbb
xor
add
push
in
jmp
mov
into
rcrb
stos
dec
inc
ret
cmp
cmp
sub
ds
sub
push
mov
jb
sub
push
pop
push
adc
jle
daa
push
out
shrb
mov
out
sbb
mov
pusha
movsb
mov
dec
push
pop
mov
lret
popf
push
cmp
cmp
repz
cmpsl
nop
inc
jno
mov
sbb
cli
cmp
lret
inc
clc
pop
test
xor
xchg
sub
mov
sub
fstl
pop
rclb
js
popl
sbb
test
sub
lds
cmp
pop
gs
push
mov
push
shlb
fsubrs
in
inc
cmp
arpl
inc
iret
xchg
cltd
sub
adc
rcrl
sbb
add
out
xor
and
or
mov
jbe
into
out
xchg
ss
arpl
sbb
sti
lock
lock
nop
push
rcrl
divl
add
xor
cmp
rorl
push
dec
test
sub
dec
or
lahf
popf
enter
xlat
or
movsl
ljmp
int
inc
mov
jg
adc
pop
loope
leave
push
mov
mov
jl
inc
nop
add
jmp
jmp
xchg
addr16
je
and
jae
or
inc
adc
mov
shrd
mov
jl
in
movsl
pop
adcb
cmp
mov
sahf
jno
pop
fstpt
jmp
div
jb
movl
add
aaa
lods
pop
mov
dec
mov
arpl
sub
and
out
or
cmpsl
iret
sbb
push
xor
cmp
dec
cld
loop
dec
daa
fsubr
scas
adc
pop
idivb
cmpsb
shlb
or
sbb
lods
out
mov
lods
outsl
stos
mov
pop
jp
popf
testb
mov
movsb
jl
jmp
imul
imul
inc
and
sbb
xor
cmp
adc
xor
cs
mov
mov
xorl
ja
outsb
loop
and
testb
jbe
out
inc
orl
jo
daa
pop
test
insb
jmp
into
daa
xor
rorb
scas
enter
sbb
jmp
jp
sarl
jnp
inc
push
adc
es
insl
rolb
jmp
xlat
or
jno
stc
adc
movsb
dec
push
mov
sbbl
iret
sbb
xor
movsb
push
notb
jmp
mov
cmc
repnz
lcallw
xchg
jo
pop
cmpb
shll
jbe
xlat
add
mov
cmp
inc
fdivs
je
aaa
mov
push
mov
dec
imull
xlat
inc
popa
loopne
movsl
add
push
sbb
sbb
push
mov
jno
mov
pusha
jmp
cltd
jns
or
fcomi
movsb
pop
test
popa
rorl
fmull
popa
ret
fmull
add
in
jbe
imul
inc
shl
out
sti
mov
xchg
mov
xchg
adcl
jmp
adc
mov
sub
clc
lods
ret
add
pop
push
mov
hlt
test
popa
cmp
add
sbb
pop
jle
adcb
jp
xor
cmp
sub
cmp
adc
pushl
sbb
xchg
aad
in
fsubl
dec
pop
fstpt
jecxz
repz
test
dec
xchg
rcrl
mov
shl
dec
arpl
mov
dec
ds
jp
cmpsl
lret
xchg
das
movsl
enter
xor
sub
jbe
pushf
jg
inc
dec
popa
imul
ja
push
lret
adc
cld
lods
jnp
loope
or
insb
lock
jl
sub
pop
jle
push
sub
mov
insl
and
repnz
dec
mov
stc
xor
xor
call
pop
xchg
test
out
mov
xor
mov
enter
pop
stc
xchg
add
aas
mov
aaa
les
rcrb
mov
rep
push
push
lock
inc
test
out
jge
pop
jge
lcall
sub
std
push
inc
or
fidivl
and
jns
xchg
push
jns
jmp
ret
in
addr16
jmp
cltd
sub
gs
mov
out
add
mov
sub
adc
adc
lret
and
jb
cld
xchg
popf
loop
xchg
cmp
jp
lcall
test
mov
rcr
shll
fidivs
adc
mov
jnp
fstp
pop
repnz
arpl
test
rclb
jns
pop
push
in
xchg
leave
xchg
fists
adc
outsb
dec
pushf
cmp
sti
aam
adc
cmp
mov
mov
mov
int
mov
mov
mov
add
adc
mov
popf
xchg
fnstenv
gs
mov
dec
into
xor
sub
xor
push
stc
push
pop
mov
mov
aad
loopne
insl
or
push
mov
ljmp
out
sub
xchg
aad
lcall
outsb
push
dec
xor
mov
pop
adc
lock
mov
data16
adc
cltd
dec
jge
dec
jae
push
jmp
push
sbb
sub
or
jb
pop
cmp
lds
push
fbstp
sbb
sub
cwtl
lods
or
mov
xchg
adc
nop
shlb
jne
call
pop
mov
mov
mov
pop
pop
cmp
enter
xchg
lods
loopne
xor
loopne
dec
push
loop
add
lcall
test
pop
jb
inc
scas
inc
leave
xchg
ficoms
sti
fcmovnu
jbe
xchg
ljmp
aam
xor
adc
mov
int3
xor
addl
sub
shl
out
scas
mov
and
lods
into
push
jge
sti
jb
push
or
mov
mov
mov
inc
lret
orl
push
fcomps
sub
ja
dec
rcrb
mov
test
lcall
mov
shll
pop
xor
cli
loopne
xor
in
jbe,pt
out
or
push
lret
add
inc
jno
rol
and
popf
sub
sarl
or
lea
lods
fdivs
xchg
jecxz
mov
sarb
cmp
mov
insl
jnp
xlat
add
mov
and
test
inc
mov
mov
test
call
pop
test
ja
mov
popf
aaa
and
jb
leave
sub
mov
outsb
xor
lret
test
mov
mov
lret
cmp
mov
add
push
ds
push
push
fisubs
mov
inc
sub
lods
pop
pop
sbb
add
mov
inc
mov
inc
cmp
ret
mov
das
in
ja
sahf
nop
xchg
adc
push
imul
repz
xor
lods
cmp
mov
cmc
mov
aas
popa
nop
add
loope
jb
jo
rolb
dec
aad
gs
push
imul
rol
mov
es
sub
stos
test
test
test
mov
inc
nop
jne
movsl
push
lahf
cmp
push
les
int
mull
xorl
push
pop
mov
mulb
jo
repnz
fcoml
pop
lret
daa
sbb
pop
imul
fidivrl
jae
xchg
xchg
add
xchg
jmp
push
xchg
push
aad
mov
sub
daa
xorb
pop
sbb
mov
sahf
in
or
in
cmp
sbb
sbb
imul
or
loopne
fcompl
mov
rorb
stos
and
mov
cltd
sub
ret
loop
lret
inc
add
shl
mov
insl
mov
cli
mov
cmp
mov
dec
push
testb
aaa
push
popf
sub
adc
stos
test
push
gs
pop
jle
mov
sbbl
jb
add
test
shrl
mov
adc
mov
enter
enter
loopne
leave
xchg
mov
notl
mov
mov
mov
push
cmpb
jnp
cs
stos
lret
lret
sbb
js
jecxz
cmp
ret
lea
xchg
cmp
lock
loopne
mov
ror
cmpl
and
sub
jl
push
addr16
repnz
lret
jge
cmp
clc
or
enter
push
xchg
jecxz
inc
adc
push
negb
cmpsb
sbb
bound
popf
cmp
jns
int3
fdivr
rorl
mov
dec
sub
mov
xor
ljmp
xchg
inc
les
add
sahf
jge
stos
push
rcl
push
ret
ror
std
ja
fcomps
lret
jmp
mov
and
inc
rorl
scas
iret
iret
jb
cmp
mov
out
and
mov
sarl
out
cmp
in
mov
mov
xor
mov
dec
add
pop
lret
xchg
scas
xlat
inc
mov
mov
outsb
mov
and
cmp
adc
in
mov
mov
bound
lock
or
or
add
stc
xlat
sbb
enter
inc
and
sbb
or
jne
mov
push
push
js
and
xchg
inc
popa
fs
and
rcrl
add
stos
mov
fdivrs
pop
pop
in
insb
mov
mov
adc
push
stc
test
add
ljmp
mov
dec
repz
nop
pop
cwtl
push
das
lretw
scas
jmp
aas
sub
leave
pop
and
repnz
xchg
cmc
cmc
push
lods
and
ja
and
cmp
xchg
mov
or
adc
xchg
nop
fwait
push
divl
or
push
dec
adc
les
lret
bound
imul
push
inc
ds
inc
shr
xchg
andb
fs
mov
test
mov
shl
mov
sub
int3
and
adc
push
dec
mov
fmuls
inc
ss
xchg
in
mov
notl
push
jge
stos
dec
mov
mov
jbe
stos
mov
stos
aad
mov
ds
test
mov
and
jb
mov
mov
jo
les
aam
jo
pop
icebp
loop
pop
sub
rorb
inc
sub
lea
aaa
adc
inc
mov
lret
xchg
fmuls
pop
mov
and
jne
movsb
lahf
pop
push
ficomps
dec
jo
mov
adc
xchg
jo
fucomip
pop
in
or
cltd
jne
mov
mov
loope
mov
dec
or
xor
add
les
mov
sbb
pop
jge
or
jle
mov
ss
add
mov
xchg
dec
push
add
pop
int
fadd
adc
add
mov
fldcw
test
cltd
out
mov
jp
es
fcoml
test
out
mov
scas
outsl
add
mov
je
pusha
ja
mov
push
loope
mov
mov
or
cld
and
leave
add
pop
mov
lods
js
xchg
jmp
or
and
jge
add
jne
nop
pop
lcall
cs
mov
inc
xor
stos
imulb
js
rcr
inc
sub
and
push
loopne
sti
es
sbb
mov
ret
dec
cmpsb
movsl
pop
sti
cmp
xor
xor
jae
clc
jecxz
cmp
add
arpl
pop
in
fnstsw
or
cmp
andnps
dec
dec
lock
jne
mov
insl
adcl
sti
pop
jg
adc
jnp
xlat
cmp
aaa
mov
arpl
jo
sbb
xchg
mov
mov
dec
enter
rorl
mov
jo
add
mov
lds
jnp
sbb
or
push
mov
imul
testl
inc
push
arpl
mov
adc
fwait
out
shr
sbb
es
jmp
and
inc
sbb
test
pusha
push
or
fwait
data16
data16
dec
mov
leave
rclb
mov
sarl
pushf
mov
push
stos
pop
popf
pop
or
pushf
jecxz
inc
mov
aaa
jl
pop
push
bswap
or
dec
cld
shr
lea
mov
jbe
xchg
and
ds
outsb
add
inc
jle
adc
mov
ljmp
lret
lret
inc
lret
add
lods
lea
imul
or
ds
test
xor
mov
xor
xor
dec
and
mov
mov
lahf
push
push
sub
xchg
sub
or
inc
outsl
jae
pop
or
negb
sbb
ds
xchg
stc
add
les
fcmovnb
mov
not
dec
sbb
cmp
mov
mov
jns,pt
roll
add
xchg
adc
in
jb
xorl
lds
rorl
in
outsb
sbb
sub
push
add
mov
lea
pop
test
lret
lods
test
mov
sub
cmp
addr16
pop
cmpsl
icebp
xor
jns
adc
rclb
mov
push
mov
test
repnz
enter
push
pop
mov
pop
ds
sub
mov
dec
dec
testl
jp
xchg
fs
adc
test
enter
jp
pop
jp
push
mov
jge
jecxz
out
pop
jnp
outsl
leave
lret
test
sbb
mov
gs
jmp
xor
ret
jmp
sub
and
jge
fwait
add
xchg
repz
fdivrs
lcall
in
sub
test
loop
subl
cld
sbb
sbb
mov
dec
pop
aas
pusha
in
les
jo
and
xchg
sbb
jecxz
cmpsb
iret
scas
clc
rorl
sub
xchg
andl
inc
cmc
mov
arpl
aaa
mov
decl
mov
mov
add
in
push
testb
jne
mov
pop
mov
dec
jmp
mov
aad
movsl
test
arpl
aaa
push
lcall
adc
hlt
cli
cmp
imul
cli
mov
push
xlat
cmp
je
inc
iret
ret
dec
sbb
das
add
mulb
jp
mov
xchg
sar
xchg
in
adc
pushf
add
sub
decb
sbb
les
ret
jge
add
inc
xchg
jbe
jo
mov
pop
shr
xlat
mov
cmp
sbb
lods
lods
ja
outsb
adcb
fildll
fsubl
xor
sbb
decl
rcrl
pop
push
out
sub
out
out
cmp
xchg
sbb
push
xchg
ljmp
cmp
inc
and
hlt
push
or
shr
loop
xor
cmp
les
lret
es
xchg
imul
xchg
outsl
and
jl
cmp
ds
jmp
jl
bound
add
dec
rcl
cwtl
loop
cltd
pop
outsb
cmp
cmp
jnp
mov
lods
sbb
pop
and
inc
jmp
and
sub
sbb
add
pop
inc
xchg
inc
xchg
in
cmpsb
loopne
ret
imul
ret
xchg
add
mov
jb
ja
test
movsl
icebp
stc
pop
imul
andl
xor
mov
xchg
pusha
mov
inc
xchg
outsb
pop
movsl
mov
or
ja
jbe
and
fisttpl
bnd
test
es
mov
popa
or
std
inc
jp
sub
add
aas
enter
dec
call
hlt
push
pop
repz
sub
push
xchg
xchg
sbb
das
rsqrtps
fcmove
mov
shrb
sub
jo
in
and
xchg
fcmove
add
adc
push
xchg
mov
xor
adc
add
iret
call
pop
lret
lret
mov
jne
out
cmp
pop
mov
mov
jmp
iret
std
lahf
rol
movb
mov
sbb
adc
mov
inc
addb
cli
xor
test
push
sub
mov
dec
push
addl
and
xor
sti
jbe
mov
add
stos
xchg
dec
mov
sub
inc
repnz
push
adc
mov
js
xchg
inc
cmp
and
fs
icebp
sub
push
fidivrs
js
xchg
lods
pop
divb
xor
mov
sahf
stos
mov
mov
or
fcmove
cs
push
inc
mov
jne
sub
xchg
inc
and
sub
add
sub
push
xor
xchg
cltd
bswap
dec
cltd
sub
mov
jo
lret
inc
notb
cmc
xlat
or
or
sub
xor
or
cltd
fcoms
mov
rcr
xor
adc
xor
push
lds
pushl
xor
sub
test
mov
sub
jbe
sarb
lods
dec
insb
mov
cli
sub
xchg
out
fldenv
imulb
mov
dec
xor
fsubrl
loopne
ret
test
lds
mov
pop
pop
mov
imul
and
mov
xchg
jne
fwait
jecxz
cmp
xchg
xor
sbb
jle
std
rcll
std
mov
sbb
ljmp
lods
lcall
lret
add
fisubs
fs
push
insl
sbb
dec
or
push
orb
cmpsl
xor
fldl
daa
jno
jnp
mov
push
jnp
cmpsb
in
add
ficomps
dec
push
int
int3
lret
gs
data16
xchg
cltd
inc
adc
sahf
out
xchg
pop
sbb
inc
mov
xchg
sub
push
cmp
inc
addr16
and
cmpsb
dec
sbb
xchg
xor
ror
add
inc
out
xor
movsb
and
mov
and
shlb
mov
xchg
pop
pop
fiaddl
pop
lret
pop
gs
or
shll
mov
and
scas
shlb
fwait
mov
mov
mov
icebp
dec
push
jne
loopne
xchg
inc
mov
popf
push
les
je
cwtl
add
push
add
inc
push
out
imul
scas
lock
out
xchg
add
and
mov
int3
in
daa
inc
lods
sub
inc
inc
andb
or
jb
cld
xorb
das
ret
repnz
jne
scas
into
les
jge
loop
inc
stos
ret
orb
or
cmc
mov
jb
mov
push
test
sub
add
fsubs
or
out
mov
mov
sub
jge
cwtl
ljmp
jns
push
push
adc
daa
and
aaa
rol
scas
call
addl
jno
stc
subl
sarl
es
popa
or
and
sahf
inc
lret
popf
adc
rcll
outsl
adc
fimuls
xor
insl
loope
mov
shlb
insb
les
xlat
sahf
test
jno
std
pop
adc
loop
push
js
lret
jno
mov
in
test
neg
adc
lods
add
pusha
cld
add
cmpsb
sub
pop
mov
ret
xchg
daa
mov
cmp
dec
dec
in
adc
test
and
sbb
jmp
jb
inc
jns
dec
fdivs
das
lret
lods
and
sub
xor
popa
loope
cwtl
outsb
roll
test
dec
pusha
jns
stc
in
loop
pop
fs
mulb
push
dec
jb
pusha
sbb
mov
and
jnp
nop
sbb
sti
out
mov
dec
mov
mov
dec
sbbl
add
add
jns
push
push
enter
add
jmp
shl
hlt
or
mov
sub
push
out
out
mull
pop
inc
cmp
insl
aaa
fnstenv
mov
xor
cmp
pop
push
es
data16
lahf
adc
xchg
mov
sbb
xor
cmpsb
mov
fsubrp
push
dec
xchg
jnp
pop
movsb
mov
ss
mov
push
dec
push
xchg
mov
out
inc
into
xor
data16
movsl
sti
inc
scas
jge
lahf
cmc
in
int3
dec
addl
mov
mov
mov
addr16
pop
testl
enter
xor
cltd
inc
sub
shll
inc
pop
sub
fcmovb
or
clc
in
roll
test
jmp
mov
mov
cmp
test
test
pop
sub
mov
arpl
xchg
dec
mov
insl
adc
mov
inc
mov
sbb
bound
jmp
mov
fcomps
popf
mov
cmp
repz
mov
push
add
lahf
add
xor
pop
stos
cltd
xchg
shll
push
cwtl
xor
aad
push
sub
fwait
sub
sarb
imul
xchg
repz
pop
das
lea
xchg
outsl
jne
cmpsb
xor
sub
sbb
in
add
or
ljmp
jns
outsb
cmp
ss
scas
stos
or
jl
push
into
outsl
jns
dec
sbb
mov
call
push
dec
xchg
jae
dec
mov
scas
mov
loop
mov
pop
in
xchg
lock
jmp
mov
jno
mov
dec
jo
ss
out
jno
ds
mulb
lds
in
xchg
inc
xchg
ljmp
adc
cmp
inc
testb
sub
ret
fisubrs
daa
das
pushl
mov
shlb
loopne
jo
pop
out
sub
pop
adc
mov
and
mov
divb
or
mov
xchg
push
xor
adc
sub
xor
aam
nop
cltd
test
addr16
xchg
cwtl
nop
rorl
mov
ljmp
mov
and
imul
mov
call
xchg
and
or
jbe
xchg
pushf
ljmp
xchg
jp
cmc
adc
jl
lods
outsl
test
or
stc
mul
gs
mov
stc
shll
cmpsb
lods
in
out
mov
jno
xchg
jecxz
pop
notl
push
inc
lds
jne
add
mov
aaa
gs
mov
push
jne
in
lea
adc
inc
mov
into
sbb
lock
adc
mov
jecxz
or
sub
cmpsb
in
sbb
adc
js
fmul
jno
mov
loop
cmp
in
cli
cltd
jle
leave
xlat
repz
add
jbe
out
adc
pushl
aam
xchg
inc
loopne
pop
pop
jb
incl
mov
add
stos
push
enter
inc
ljmp
mov
dec
je
faddp
shll
mov
and
jl
cs
enter
sbb
xchg
inc
and
es
push
dec
lds
sub
incb
push
arpl
cwtl
xor
pop
test
mov
lret
jne
inc
pop
cmp
add
into
sbb
mov
dec
adc
loop
jecxz
dec
sbb
aad
cmp
cmpb
fcmovnu
fmull
xor
sub
or
shlb
inc
dec
rorb
push
pop
into
jp
xlat
jle
pop
mov
fcomps
jg
mov
push
pop
test
pop
sub
jmp
subl
mov
sbbl
cli
sbb
pextrw
pop
lods
push
gs
push
pop
sub
gs
jp
sahf
ss
sti
push
jne
or
pop
xchg
cmpsl
out
dec
mov
mov
inc
sub
xchg
cmpsl
push
movsl
mov
add
sub
pop
adc
pop
rclb
sub
je
jge
xor
cs
in
incl
scas
mov
jb
in
mov
sar
test
repnz
movl
pop
popf
jg
add
jno
es
loop
fisttpl
jecxz
outsb
arpl
adc
push
dec
rol
fwait
add
ja
mov
xchg
mov
pusha
loop
das
cmp
mov
mov
xchg
mov
test
fwait
testl
jne
ss
pop
sub
xchg
out
clc
les
clc
cmc
imul
movl
popa
fildl
test
pop
loope
cmpsl
scas
mov
sbb
arpl
push
je
or
mov
inc
or
jl
jge
xor
aam
cwtl
pop
mov
jl
lret
xchg
cs
cmp
lret
pop
icebp
push
push
aam
sbb
adc
push
cltd
lcall
imul
pop
mulb
xor
inc
cwtl
xchg
pop
pop
mov
xchg
rcll
jp
push
sub
popa
test
pop
int3
lea
ljmp
cwtl
or
nop
dec
mov
xchg
inc
ss
sub
xchg
mov
push
or
mov
mov
and
add
mov
mov
pop
jae
dec
cmp
fistl
in
stc
shll
fistpll
ljmp
movsb
jo
movsb
xchg
pop
mov
and
push
out
push
sbb
xchg
stos
adc
add
sahf
dec
lcall
jl
lods
or
jno
xor
dec
sub
sbb
add
jnp
in
lcall
icebp
push
call
push
sti
sbb
add
sbb
fstpt
cmp
adc
add
xchg
push
mov
cmp
test
xor
imul
mov
push
push
mov
out
and
test
fwait
pop
add
data16
cmp
adc
xchg
mov
std
pop
insl
mov
push
xor
inc
jle
sub
inc
or
mov
xchg
push
imul
sbb
xchg
inc
sbb
js
push
ds
or
std
andl
gs
lahf
add
and
in
pop
leave
cli
mov
jnp
fisttpl
cmp
xchg
in
mov
jge
lret
insb
sub
add
jne
xorb
push
lret
sbb
dec
xor
cmpl
add
sbb
xchg
pop
arpl
std
sbb
inc
sub
push
icebp
repz
mov
xor
mov
add
lret
or
mov
outsl
sub
and
or
cmpl
fwait
push
cld
imul
in
imul
jg
pop
shrl
mov
pop
add
stc
lea
pop
add
pop
movsb
cmpsb
fs
mov
mov
mov
sti
call
std
jbe
push
mov
aad
and
fimull
ret
dec
je
xchg
inc
mov
lock
loopne
les
add
scas
xchg
inc
int
mov
int3
sub
fsubr
xchg
in
cmpsb
jle
xor
jge
xor
subb
aas
dec
inc
sbb
adc
jne
cmp
fsubrl
dec
mov
mov
andb
mov
mov
into
out
push
imul
test
xchg
cmp
jmp
xorl
push
ret
sahf
jae
pop
outsb
into
daa
xchg
dec
push
insl
add
lds
insl
ret
add
mov
icebp
adc
test
adc
or
sbb
add
popf
or
fdivl
int
xchg
mov
clc
push
mov
test
stos
pop
test
adc
cmpsl
mov
test
test
repnz
pop
mov
addr16
adc
movsl
idiv
pop
fisttpll
mov
mov
dec
cli
push
pop
and
arpl
mov
lret
or
scas
mov
or
push
adc
repz
scas
repnz
inc
bound
jecxz
in
jo
fsubrl
sub
sub
pop
xor
pop
cmpb
push
mov
and
rolb
push
mov
outsl
ret
or
jnp
das
or
push
add
sbb
outsb
hlt
lret
into
insl
xchg
push
dec
loop
and
dec
sti
mov
rolb
mov
icebp
daa
xor
les
movsl
sahf
sub
pop
jo
out
push
jno
adc
adc
add
std
cmpsb
dec
nop
out
loop
and
inc
sub
xorb
dec
mov
push
push
rolb
loope
rcll
into
cli
push
in
jns
pushf
and
xchg
ret
data16
inc
ffreep
adc
cmpb
sti
ret
pop
rclb
mov
mov
lret
fisubs
sti
add
lret
ficoml
sahf
jp,pt
sbb
dec
imul
push
mov
lcall
cmp
mov
insb
xor
enter
ljmp
mov
mov
cmc
xchg
mov
iret
out
in
sub
lea
outsb
ss
pop
call
ds
out
testb
add
rcrb
out
fs
pop
lds
loope
add
sbb
dec
xor
fidivs
xor
pushf
repnz
int
cld
mov
add
negb
adc
sbb
rcr
dec
sub
adc
lret
inc
cli
xchg
xor
mov
cmpsb
je
lods
mov
adc
cltd
push
pushf
inc
aad
pop
push
push
pop
leave
xor
xorl
out
xor
adc
cmp
lret
adc
adc
shlb
or
pusha
loop
iret
fadds
xchg
sbb
add
ret
jp
sahf
cmpsl
pop
sbb
stc
dec
xor
fsubl
sbb
sbb
aas
leave
mov
clc
call
rorb
mov
and
mov
sbb
shll
dec
lret
push
pop
mov
xor
dec
sbbl
mov
stos
cmc
jo
ja
stos
mov
in
pop
js
roll
add
insb
inc
xchg
ffree
aam
cmp
jl
mov
or
adc
mov
in
lret
jmp
xchg
mov
movsb
pop
imulb
mov
fucomi
sub
out
push
push
cmp
cltd
dec
lahf
and
lret
dec
incb
ljmp
dec
lret
aad
adc
or
xor
and
cmp
call
insl
fisubl
aam
lds
std
loopne
inc
cli
inc
xchg
inc
and
cmpsb
stos
movsl
mov
imul
pop
pop
pop
sbb
xor
cmc
pop
int3
sar
jb
or
xchg
fs
fsubr
aaa
sub
jns
adc
add
jb
sbb
aaa
jmp
into
pop
ret
scas
push
inc
adc
and
shl
rcpps
mov
lret
mov
push
or
ds
ret
iret
sbb
pop
mov
out
jmp
sbb
and
jb
cmp
shll
nop
pop
nop
fnstenv
inc
sub
jle
rorb
test
das
mov
aas
cmp
mov
push
xor
sub
cmp
add
and
xor
or
xchg
adc
subb
xchg
outsb
xchg
inc
cmp
jns
inc
outsl
gs
adc
rclb
outsb
inc
cmpsl
repnz
adc
dec
xchg
shrb
test
std
sahf
fildll
pop
inc
icebp
dec
loopne
push
jne
cli
ljmp
mov
in
addr16
and
mov
out
fsubs
pop
pusha
es
xor
div
pop
les
sub
lcall
cltd
and
nop
icebp
lock
insl
adcl
adc
push
aaa
mov
push
mov
pop
push
sbbb
sbb
adc
aad
inc
sbb
loop
in
sbb
int3
sbb
repz
xchg
out
add
ja
fildll
dec
fstps
mov
je
hlt
inc
pop
mov
add
mov
push
lods
pop
shrl
stc
lea
jmp
int3
fisubrs
ds
lcall
mov
popf
pop
or
inc
clc
cmc
cs
das
enter
lods
mov
xor
or
and
push
mov
adc
sub
ja
pop
sub
test
js
cmp
loop
ljmp
push
cli
inc
xchg
dec
sbb
mov
test
or
pop
mov
ret
cmp
inc
adc
aaa
pop
sbb
fimuls
mov
and
add
out
pop
mov
pop
add
aas
fisttpll
jp
cwtl
bswap
xor
mov
gs
ljmp
and
rorb
arpl
hlt
sub
add
lahf
or
divl
push
ss
sbb
adc
xchg
push
lock
test
jne
popa
jle
cmpsb
inc
add
mov
xor
cltd
lahf
mov
data16
jg
popf
cmp
pop
inc
lret
scas
jno
push
jle
adc
push
and
inc
pusha
aad
ret
pop
mull
enter
icebp
dec
sbb
inc
sarb
xor
pop
jae
pop
sbb
outsb
nop
rol
into
pop
mov
stc
jbe
add
aaa
jecxz
jb
outsl
lret
sub
sub
fwait
nop
test
cli
fistpll
dec
xor
dec
popf
es
and
test
inc
loopne
insl
rorb
push
push
bound
and
in
mov
sub
jge
pop
lahf
dec
cmp
or
lahf
fs
jge
jge
and
leave
fimuls
mov
jle
xchg
xlat
mov
adc
lods
mov
push
or
mov
sti
and
or
pop
xchg
dec
dec
imul
pusha
daa
cwtl
sbb
stc
lret
or
push
ret
fimuls
lods
lcall
stos
mov
jl
pop
lahf
mov
aad
xchg
cli
jle
movsl
inc
insl
adc
mov
leave
imul
add
xor
ret
push
int
inc
mov
scas
xor
loop
in
pop
sub
fistl
stos
sbb
jmp
lods
addb
mov
stos
in
insl
dec
lahf
adc
fsub
adc
xchg
xor
mov
jno
pop
rorl
test
mov
shll
mov
adc
arpl
in
ss
push
jp
aas
out
inc
cmp
int3
xchg
mov
test
dec
sarb
add
jl
mov
mov
out
stos
or
in
adc
popa
cmp
int3
sti
fimull
cmp
lock
pusha
les
sti
cli
psrlw
idivb
iret
and
adc
cmpsl
arpl
imull
dec
dec
mov
pop
test
nop
mov
xchg
lods
inc
xchg
mov
inc
sahf
or
addr16
scas
leave
mov
faddp
je
push
mov
jo
jbe
pop
shlb
inc
sub
pop
mov
lret
and
mov
scas
jl
ficompl
cmp
popf
sti
adc
inc
add
cmp
test
mov
cltd
imul
pop
push
fsubrs
and
adc
call
push
pushf
jo
mov
or
cltd
int
and
outsb
movsb
pushf
mov
cli
repnz
jb
les
jmp
sarb
mov
sbb
fwait
gs
push
fldt
inc
mov
dec
rcrl
movsl
add
push
adcl
xlat
or
mov
in
pop
inc
mov
sbb
pop
mov
sbb
fistps
add
pop
fmulp
bound
pop
xor
pop
dec
lds
jle
cwtl
jmp
notl
and
xor
outsl
outsb
in
sbb
out
test
xchg
cmp
movsl
out
lods
sub
out
mov
mov
and
xchg
sbb
negl
or
ficoml
bound
push
push
jmp
xchg
fsubr
mov
jmp
fisttps
in
push
push
aad
mov
push
cwtl
inc
pop
sub
or
das
adc
sub
std
sub
decb
mov
xchg
cmp
fsubrl
scas
inc
lahf
fwait
xchg
dec
out
call
add
in
or
xor
mov
cwtl
jo
repz
sub
aas
mov
pop
lock
sub
out
lahf
out
dec
js
fcoms
adc
jo
sub
fcoms
push
jae
mov
xchg
outsl
scas
enter
cmpsl
xor
repnz
xchg
mov
inc
icebp
xor
mov
pop
daa
rcl
inc
and
sbb
enter
cltd
xchg
add
cs
loope
mov
xchg
sub
sub
stos
pop
loopne
imul
lea
dec
lcall
call
mov
inc
mov
mov
addr16
sbb
daa
mov
in
sbb
sbb
dec
lahf
insl
add
scas
lods
mov
idivl
jbe
enter
xor
in
xchg
mov
mov
movsl
aas
insb
cmp
sarb
or
mov
and
dec
imul
lcall
cs
mov
imul
fs
outsl
arpl
xchg
mov
mov
repnz
into
xor
test
in
dec
out
inc
icebp
stos
mov
in
stos
adc
arpl
push
je
js
pop
pusha
adc
lahf
sub
test
push
pop
adc
test
cli
rcl
inc
mov
aaa
out
ret
add
sub
in
xchg
lock
lods
xchg
pop
push
fwait
enter
sbb
cmpsb
mov
ret
mov
int3
movb
mov
cmpb
cs
sub
push
inc
dec
stos
push
and
outsb
mov
les
adc
dec
xchg
xor
das
push
jge
inc
or
jl
popa
mov
out
in
pop
adc
test
fmuls
je
cmp
cmp
or
dec
adc
std
mov
jmp
pop
into
repnz
pop
leave
mov
or
dec
shrb
popf
jmp
insl
ds
jno
insl
push
fsubl
add
stos
das
jl
pop
mov
insl
mov
mov
daa
add
jo
clc
xchg
mov
dec
in
rolb
and
clc
cmp
and
jge
in
jle
dec
repz
orl
lahf
mov
mov
lcall
rcr
lods
inc
push
or
mov
adc
inc
cmpsb
leave
adc
gs
cli
int
jle
aam
cmp
je
mov
ret
push
lret
sahf
mov
inc
int3
out
clc
adc
dec
inc
outsb
push
cmp
sub
ret
int3
ds
push
jp
inc
adc
ss
movsb
jb
int
fbstp
add
ljmp
lea
cmp
out
xchg
daa
dec
mov
xchg
jmp
invd
dec
adc
fiaddl
adcb
cmp
mov
outsb
xchg
mov
hlt
jge
ficompl
icebp
or
add
mov
dec
lret
repnz
or
push
adc
mov
addr16
jno
sub
push
mov
hlt
sarl
aaa
and
jmp
mov
jle
cmp
and
shll
dec
jb
mul
out
faddl
pop
mov
xor
push
in
xor
test
or
rcl
fidivs
xor
mov
sub
cmp
test
xchg
inc
cmp
xchg
pop
arpl
test
mov
aam
sbb
int3
subb
jnp
mov
sti
xor
push
sbb
or
insb
jne
sub
aad
pop
lcall
movsb
dec
sbb
pop
ss
or
in
scas
cmpsb
mov
dec
dec
js
inc
mov
ret
mov
jmp
arpl
mov
push
sub
mov
dec
push
mov
rclb
lcall
adc
in
loopne
jne
mov
inc
sub
xor
jecxz
and
pop
out
mov
jge
out
test
jmp
push
aas
pop
stos
sbb
ret
stc
push
in
lret
out
or
mov
fidivrl
movsb
loop
mov
xchg
mov
sarb
sub
fistl
jnp
mov
xor
sbb
push
mulb
scas
data16
aam
push
repnz
mov
mov
and
mov
mov
xlat
test
cwtl
xor
stos
out
jnp
fidivrl
cmp
dec
psraw
push
stos
inc
mov
clc
mov
mov
mov
pop
xor
stc
mov
adc
lcall
fcmovnbe
jg
outsl
and
push
test
push
adc
xorl
pop
mov
adc
mov
sar
mov
lret
insb
pop
or
inc
repz
add
loop
std
cld
roll
outsb
mov
or
pop
xor
cmp
push
sbb
sbb
mov
je
jle
and
or
enter
js
jl
xor
imul
ja
push
iret
xchg
aas
inc
inc
push
adc
les
mov
aas
cwtl
cmp
mov
push
pusha
mov
add
enter
lahf
inc
cmp
loope
lock
mov
ret
out
rorb
cmp
movsl
push
ret
imul
sbb
test
jne
js
inc
and
dec
cli
dec
shl
mov
mov
and
cmp
mov
data16
jl
mov
inc
addb
les
sub
stos
mov
pushf
xchg
dec
popf
jo
ss
sbb
ret
jo
pushf
inc
enter
adc
mov
cmpsl
cld
cli
or
mov
or
xor
sub
sahf
ret
dec
sbb
lahf
cmp
cli
dec
mov
repz
mov
mov
jl
mov
cwtl
sub
in
int
lcall
push
mov
stos
les
cmp
push
dec
iret
dec
or
mov
mov
fldenv
xor
es
rclb
jle
cld
adc
lods
sbb
adc
jae
loope
mov
bound
mov
adc
gs
iret
inc
dec
adc
mov
or
jno
dec
test
jb
andl
sahf
aaa
jns
or
dec
lods
adc
cmp
imul
and
in
sbb
mov
rcrb
push
pop
sbb
ficoms
inc
xchg
cmp
ficompl
shrb
icebp
dec
enter
shl
push
fst
sub
js
sub
push
stos
int
out
loope
mov
insb
insb
ror
daa
aas
je
sarb
cmp
ljmp
jg
stc
adc
ds
inc
cmpsl
cmc
lea
loop
xchg
add
pop
scas
in
cmp
addr16
xchg
xor
sbbb
pop
adc
ror
inc
add
fistpll
jp
inc
addr16
pop
jae
mov
xor
pop
xlat
imul
in
mov
jge
adc
push
mov
sbbl
push
je
jne
and
insb
xchg
hlt
hlt
lret
xchg
xlat
mov
rcpps
leave
icebp
into
shll
pop
mov
testl
jle
pop
cmp
aas
ljmp
adc
fstps
je
dec
adc
mov
mov
dec
mov
add
push
push
push
sahf
int
fsubrs
jmp
cmp
and
add
mov
loope
fstl
pop
mov
insb
cmp
ljmp
xor
addr16
sbb
cmpsb
jne
fldl
pop
sahf
outsb
mov
ja
je
pop
dec
fs
add
jge
cmpl
jg
std
or
movsb
jbe
push
test
mov
aaa
mov
cmpsb
out
cld
xor
ljmp
xchg
jns
repz
aad
cmp
xchg
push
idiv
mov
movb
pusha
in
movsb
int3
jg
mov
popa
push
mov
test
mov
and
stc
jmp
call
in
sysexit
pop
sub
dec
out
dec
mov
dec
icebp
pop
out
jb
dec
push
andb
shrl
test
adc
cmp
xchg
push
adc
dec
out
stos
add
scas
ja
xchg
call
scas
pop
test
push
mov
test
test
adc
rorl
popf
test
mov
mov
negl
ret
lea
shll
pusha
sbb
pop
mov
cs
mov
mov
out
cwtl
out
push
push
arpl
dec
mov
out
fs
pop
dec
inc
cmp
sbbb
into
cs
cltd
aaa
ret
notl
xlat
js
jnp
mov
cmp
into
jo
jns
movsb
xor
sbb
sbb
xor
sub
les
mov
stc
push
jle
ss
sub
out
dec
cmp
fwait
push
and
push
push
ret
cmp
fimull
pop
sub
mov
aas
and
add
insb
in
repz
mov
push
jae
push
pop
incl
mov
nop/reserved
mov
jl
cmpsb
lret
pop
or
pop
add
and
sbb
fcompl
xchg
and
into
inc
push
stos
lock
cmp
arpl
lret
aam
rcrl
lds
mov
shll
push
mov
push
push
sbb
sub
pop
test
dec
add
pop
mov
comiss
jmp
mov
pop
aam
sti
ret
push
mov
and
test
jmp
mov
dec
mov
and
mov
inc
loope
push
outsb
dec
bnd
cmp
lret
jo
push
cmp
cld
lret
movsl
inc
xchg
or
xchg
xchg
push
jmp
inc
push
mov
xchg
in
sbb
aam
pop
std
rcrl
movsb
fidivrl
inc
cmp
push
sbb
jg
fwait
rorb
jnp
lret
or
xor
fisubrs
movb
mov
lret
cs
push
or
cmp
mov
imul
sub
jle
jle
sbb
outsb
push
in
push
push
dec
jns
push
ror
mov
add
aam
sub
pop
jle
mov
lret
mov
dec
inc
sahf
cmp
and
stos
fcomps
outsb
aad
xchg
push
cmp
faddl
push
mov
lret
loopne
inc
lods
adc
cmp
mov
fs
das
pop
and
jbe
push
div
std
test
lcall
andb
popa
pop
lods
pushf
dec
outsl
pop
clc
jg
arpl
enter
mov
mov
pushf
adc
jo
xor
adc
mov
jle
movsb
cmc
fisubs
jb
stos
in
int
pushf
es
ss
inc
je
push
rcl
sbb
dec
popf
sbb
xchg
mov
mov
call
sub
fdivs
rclb
andl
js
fsubs
loope
sti
sahf
rolb
xchg
aad
loopne
int3
xor
mov
inc
dec
xchg
aaa
sahf
loope
adc
sub
mov
popa
push
sub
cld
fsubs
inc
or
pop
fnstenv
jne
sbb
repnz
jmp
lock
cmc
negb
xchg
xor
mov
push
adc
scas
shrb
out
sub
push
je
pop
in
jg
jg
add
sub
lcall
testl
or
xchg
outsb
or
imul
idivb
sbb
cmp
test
xchg
mov
test
push
jbe
repnz
xorb
loopne
cltd
push
dec
push
shlb
adc
add
push
shll
js
push
out
jecxz
xchg
out
push
cmp
fldl
mulb
push
gs
xchg
loop
lret
adc
mov
cmp
push
lret
inc
testb
mov
movsl
loop
leave
push
stos
pop
sub
cld
jns
jecxz
mov
out
mov
ljmp
pop
dec
mov
or
xchg
mov
and
sbb
push
or
mov
pop
outsl
cmp
in
out
inc
daa
cs
mov
mov
push
test
mov
fdivs
stos
jae
and
jl
repnz
stos
shr
pop
sub
ficomps
cmpl
sub
in
sub
stos
pop
stc
or
cvtpi2ps
ljmp
sub
cmp
sahf
cltd
mov
xor
add
sarb
adc
scas
push
dec
xchg
pop
and
pop
fistl
mov
fs
imul
fisubs
mov
shlb
or
adc
insb
add
shrl
mov
inc
pop
repz
rcl
mov
mov
xor
leave
pop
mov
insl
xchg
pop
icebp
cli
push
jne
ret
loopne
mov
test
decl
insb
xor
mov
cld
sub
sub
mov
fldenv
xor
push
int
cmpsb
loope
out
sub
jp
imul
lods
mov
bnd
pushf
cmpsl
sub
add
push
icebp
cmc
pop
or
loop
adc
ja
je
push
mov
xchg
jno
sub
jmp
fcoms
repz
popf
sbb
cld
ficompl
in
inc
clc
pop
popf
xorl
mov
lods
cmp
je
push
push
scas
stos
add
cmp
nop
push
cmp
loope
nop
push
and
gs
pop
jae
fimull
mov
or
in
mov
enter
xchg
mov
jo
call
mov
clc
nop
in
aad
fisubrl
sarb
xchg
shlb
aaa
aas
xchg
mov
mov
dec
arpl
sahf
insb
cmp
dec
mov
pop
in
adc
decb
adc
or
pop
ja
roll
push
icebp
iret
jg
mov
das
ret
dec
xor
xchg
divb
and
add
shlb
ja
sub
inc
lods
push
es
and
add
in
ret
stos
pop
mov
sub
mov
lea
push
pop
jg
pop
inc
pop
push
daa
jne
xlat
in
stos
repnz
hlt
loopne
cmp
xor
and
or
std
jmp
mov
or
pop
adc
xchg
dec
repnz
mull
aad
lcall
mov
or
push
and
push
fidivrs
mov
jmp
pop
mov
stos
cmp
std
lea
or
sub
or
pop
cmp
inc
adc
faddp
mov
aas
pop
push
xchg
or
mov
mov
ja
loopne
repz
enter
out
inc
setb
xor
inc
imul
pop
adc
repz
and
push
pop
out
es
outsb
int3
test
add
add
div
dec
jne
ja
sahf
or
pop
popf
xor
lods
pop
insl
jo
xor
jg
call
in
and
xor
out
sbb
lret
pop
mov
pushf
cmp
cmp
sub
jmp
cld
fwait
call
inc
arpl
imul
lahf
ljmp
pop
stos
imul
and
mov
mov
mov
xor
dec
adc
cmp
repnz
in
push
or
sbb
movsl
popf
fnstcw
stos
lods
push
out
cld
lock
andb
and
jne
es
and
xchg
mov
mov
divb
mov
adc
jmp
bound
inc
lods
fstpt
fpatan
sbb
mov
sbb
int3
cmp
push
lds
cmp
mov
add
std
inc
sub
xchg
std
test
xchg
xchg
xor
test
fnstsw
xor
out
call
mov
ret
mov
inc
lods
lods
add
mov
add
inc
test
and
mov
jne
test
push
stos
cwtl
scas
scas
ss
xchg
or
push
outsl
jnp
fisubl
dec
insb
jp
mov
or
push
mov
lea
jno
lcall
outsl
or
dec
inc
sub
pusha
mov
inc
sub
popa
dec
sahf
cltd
rclb
shlb
xchg
and
leave
xchg
add
push
pop
mov
push
subb
cmc
fimull
push
adc
pop
das
adc
mov
xor
mov
call
les
int3
dec
andl
jl
shr
hlt
add
jnp
je
add
lds
cmp
aas
pusha
lret
xchg
mov
mov
out
xor
jno
stc
mov
jne
mov
sub
mov
and
pop
pop
clc
jge
rorl
mov
xchg
push
mov
jmp
xchg
movsb
inc
mov
loopne
mov
enter
shl
adc
ss
or
inc
dec
lock
pop
add
lock
jmp
inc
aad
cmp
js
cmpsb
cli
mul
sarb
mov
scas
xor
aaa
into
push
push
sbb
or
repnz
iret
in
mov
popa
mov
roll
faddl
rcr
pop
or
and
movsb
pushf
and
in
push
ss
xor
or
imul
cwtl
test
xor
mov
sahf
sbb
repz
mov
insb
ret
xchg
rcl
add
vpaddd
sub
cmc
ljmp
adc
out
imul
push
push
bound
sbb
sub
add
mov
in
push
add
cmp
add
icebp
adc
insl
add
push
fistpl
ja
add
repnz
fbld
cmp
repnz
test
pop
scas
push
cli
shl
fdivrp
ret
mov
push
jp
mov
jle
xchg
outsl
push
xlat
pop
push
out
pop
mov
shll
mov
mov
imulb
jmp
jl
push
pop
push
xchg
gs
pop
je
mov
mov
in
lret
les
push
mov
mov
add
outsb
adc
pop
fsubrl
dec
add
jp
out
jno
lods
sbb
clc
cli
jne
push
ffree
cmpsl
inc
xor
pop
fadds
mov
mov
mov
push
push
imul
mov
arpl
ror
or
jbe
mov
pop
negl
out
inc
sahf
mov
or
cld
jae
shlb
cltd
add
sbb
mov
fsubrs
cmpsl
mov
inc
fidivs
stos
lods
loope
and
push
cmpl
sub
out
mov
pop
push
push
je
add
lock
rcrb
and
popf
jnp
push
mov
arpl
in
into
add
ret
jl
mov
jno
cmp
test
pop
pop
addl
dec
xchg
push
push
push
jnp
sbb
lcall
cmp
sbbb
shr
jae
cmpsl
sarb
mov
imul
sbb
push
outsb
and
adc
mov
add
cmpsl
and
push
jle
or
dec
movsl
scas
add
jmp
in
pop
leave
xor
outsl
aaa
adc
jmp
movsb
pop
hlt
jle
dec
test
mov
push
leave
mov
xor
sahf
sbb
jecxz
es
sub
xorl
inc
sbb
fsubs
jmp
add
pop
stc
mov
pop
out
popf
out
mov
sub
xchg
sub
jbe
lods
ret
rcrb
sbb
int
jmp
mov
add
ljmp
std
pop
loopne
bound
data16
jge
xor
add
sub
or
pop
pushf
jp
fwait
or
push
mov
and
cmpsb
pop
out
pop
dec
mov
lods
out
addr16
mov
or
sub
in
cmpsb
push
cmp
mov
test
ja
mov
sub
jge
sbb
in
mov
outsb
sbb
test
fucomip
rolb
cwtl
jo
icebp
xchg
sar
push
lcall
cmp
mov
xor
inc
out
pop
ret
cwtl
mov
das
cli
test
icebp
test
and
out
int3
test
mov
fst
adc
xchg
fimull
sbb
stos
inc
pop
push
push
rcl
unpckhps
hlt
push
or
popf
inc
xchg
psrlq
xchg
jne
cli
insl
ds
test
push
scas
sub
xor
or
shrl
sub
gs
sbb
out
push
ss
out
fsubrs
jne
pop
cmp
add
mov
sbb
std
lods
leave
popa
insb
xor
das
ja
dec
cmp
lock
imul
mov
or
xor
mov
mov
call
add
cmpsb
aas
dec
andb
mov
or
lcall
push
mov
arpl
jl
in
jae
shrl
in
push
leave
testl
call
xor
xchg
icebp
aad
pop
pop
ficoms
sbb
adc
iret
testl
in
inc
in
jns
inc
mov
fisubs
loop
bound
pushf
and
jl
rcrb
sub
loope
and
xchg
hlt
test
shr
mov
fsubp
icebp
rorb
adc
mov
pushf
int
dec
or
lret
mov
test
jmp
iret
dec
icebp
mov
aaa
jns
sub
ret
sub
pop
imul
arpl
rorb
xchg
xor
pushf
push
stc
les
mov
add
cld
add
lcall
push
xchg
inc
stos
mov
lds
scas
mov
aas
cld
mov
ret
sub
cli
repnz
repnz
mov
jae
mov
mov
add
inc
inc
pop
stc
lahf
adc
scas
icebp
mov
out
mov
mov
js
lea
xorl
aam
or
dec
iret
jmp
in
mov
jae
pushf
jbe
cmp
and
adc
add
pop
jg
dec
repnz
mov
jl
and
iret
and
insb
mov
jbe
dec
es
sarb
insb
in
pop
jmp
call
aad
imul
out
mov
cmp
repz
or
daa
aaa
sub
int3
add
clc
clc
mov
jae
lret
push
fbstp
roll
push
scas
js
xchg
out
cmpsl
out
movsb
cmp
into
adc
scas
jl
cli
out
outsb
pop
dec
sti
nop
inc
sbb
push
ret
leave
mov
aaa
adcl
cmp
div
push
mov
sarl
pusha
loop
adc
rcrl
out
xorb
or
das
cld
cmp
mov
and
lods
fdivl
lods
cwtl
addb
and
jp
gs
xor
inc
popa
hlt
fisubs
jecxz,pn
cmp
adc
aas
jmp
mov
cmc
mov
gs
sti
fdivl
mov
cld
dec
push
fsubs
xor
dec
cli
push
and
cmp
xchg
inc
pushf
xchg
mov
imul
inc
add
pusha
add
roll
sbb
ret
mov
push
stos
jo
and
fs
push
cmpsb
xchg
cli
repz
add
and
xchg
add
sarb
xchg
or
outsb
cmp
enter
jo
aam
xrelease
loop
lret
xorl
mov
sub
and
call
add
popf
pop
icebp
pusha
mov
or
push
repz
or
aas
or
lock
push
movsb
aas
psubq
add
test
and
xchg
inc
arpl
bound
sbb
lahf
loop
adc
mov
adc
sbb
jg
pop
das
fnop
in
adcl
in
mov
sub
pop
cmpsl
scas
push
popf
fstpt
jns
das
cmpl
jo
mov
xlat
sbb
sub
stc
pop
stos
hlt
add
pop
adc
popf
in
push
out
test
dec
cmp
insb
sbb
insl
movsb
inc
jbe
mov
xchg
nop
push
or
negl
adc
movsb
ret
dec
dec
push
pusha
cs
fisttps
in
ficomps
push
stc
ja
into
dec
dec
imul
cmp
dec
cmpsl
jb
call
imul
loope
das
cmp
shrl
jp
add
cmp
adc
jb
sbb
fisttps
dec
cmp
lock
ret
clc
or
inc
mov
xchg
dec
bound
movsb
fwait
hlt
pop
adc
cmc
ret
daa
ds
sti
orl
xlat
dec
lods
mov
inc
cmp
jae
js
push
mov
dec
cmpl
jns
stc
fistps
push
jo
or
insl
adc
mov
adc
pop
imul
ret
insb
jge
lahf
cmpb
jmp
jbe
add
orb
jp
lahf
je
out
in
push
lahf
loopne
jl
xor
push
dec
imull
sbb
push
rep
jmp
inc
int3
outsb
outsl
loopne
je
imul
or
divb
jecxz
sbb
jp
jmp
int
xchg
and
mov
push
push
ljmp
fdivl
pop
sub
inc
push
add
cmp
test
mov
sub
repnz
aad
mov
in
add
in
adc
adc
insb
fidivrl
lcall
dec
inc
movsb
adc
ficoms
push
add
sub
mov
and
das
xchg
lcall
imul
push
rdtsc
repz
inc
mov
mov
mov
xor
mov
mov
cwtl
add
cmpsb
adc
in
test
cmp
pop
mov
lock
sub
in
popf
stos
pop
popa
imul
pusha
call
inc
cmpsb
mov
jmp
in
sub
mov
dec
cld
or
jg
push
outsb
mov
dec
in
pop
ret
push
jo
lods
mov
shll
mov
shll
call
lcall
sti
sti
cbtw
jecxz
in
mov
in
mov
or
popf
mov
shll
cmp
or
stos
adc
jge
enter
dec
xchg
add
movsb
add
jmp
and
movsb
dec
repnz
lea
inc
push
xchg
addr16
mov
dec
jne
mov
fstpt
and
lea
pop
pop
adc
jmp
jmp
add
iret
pop
jb
mov
shll
out
fsubrl
out
mov
jbe
lahf
xchg
cmp
xor
callw
sub
push
insl
pop
out
movsl
adc
push
sub
mov
sbb
pop
and
insb
les
mov
stos
movb
stos
dec
sbb
arpl
movsb
gs
xor
and
pop
pop
insb
lock
mov
push
xchg
xor
cli
or
stos
rcl
out
mov
cmpsl
pop
imull
xor
out
xor
push
xor
hlt
cld
pop
repz
cmp
popf
cmp
imul
add
or
jecxz
rcl
sub
xchg
out
mov
shrb
shlb
shlb
push
sarb
movsb
dec
cltd
pop
ljmp
add
sbb
adcl
repz
cld
fcmove
add
pushf
movl
xlat
fldenv
pusha
or
rorb
out
add
xchg
inc
jns
enter
cld
in
jae
or
lods
dec
adc
and
and
out
insb
cmp
add
cmp
lcall
mulb
out
lcall
test
dec
std
pop
call
movsb
ss
shl
orl
sti
aad
xor
test
ret
hlt
and
inc
shrl
dec
dec
iret
fnstsw
xlat
insb
mov
insb
in
push
mulb
insl
popa
aad
xchg
ret
adc
cld
rclb
cltd
fnstenv
inc
inc
pusha
jnp
arpl
scas
int
call
adc
or
fldenv
xchg
jae
je
sub
lods
pusha
dec
sbb
cli
push
test
sub
fisubl
xchg
movsl
cmp
stos
inc
movl
cltd
xchg
xchg
mov
sub
dec
cmp
cmp
mov
and
jnp
jmp
add
testl
inc
lea
mov
sbb
addr16
mov
loope
cmpsb
cmp
inc
sbb
sbbl
jp
testb
xchg
ja
sbb
imul
xlat
nop
inc
sahf
rcrb
in
push
jmp
sbb
pop
mov
mov
dec
gs
int3
adc
push
mov
sbb
je
cltd
cltd
mov
pushf
jns
ss
les
outsb
int3
inc
gs
iret
fldenv
add
imul
adc
les
lcall
inc
sbb
mov
jb
pop
hlt
jne
mov
incl
lea
pop
add
fdivp
movups
insl
sub
mov
pop
pop
gs
lahf
sar
lret
into
adcb
cmp
mov
sti
lods
push
insl
loope
add
pop
pusha
loopne
mov
jae
push
mov
mov
adc
adc
cmp
leave
or
in
fisubl
push
fwait
in
fbld
cmp
jmp
mov
dec
loopne
scas
and
sub
xor
push
pop
sbb
xchg
rcrb
out
jecxz
sbb
repz
mov
cld
insl
stc
xorl
jb
xchg
mov
mov
outsl
fmulp
pop
subb
scas
cs
dec
cmpsl
sbb
cmc
cmpsb
mov
decl
sub
cld
inc
mov
mov
pop
xchg
or
xchg
cmp
xchg
or
mov
push
test
dec
fwait
dec
jne
xchg
or
jge
pop
mov
scas
mov
in
cmp
ss
mov
fistpl
or
push
fs
add
mov
repnz
mov
leave
xor
cmp
call
aaa
das
fdivrs
mov
sbb
or
test
addr16
sbb
sub
and
push
pop
in
pop
xchg
clc
bound
add
mov
mov
mov
out
imul
add
pop
sub
cmp
xchg
test
sti
das
std
and
xor
cld
lock
mov
repz
cli
jle
pop
int3
adc
mov
cmp
idivb
add
test
in
adc
repnz
pop
out
mov
gs
ja
sti
aas
cmp
int3
les
jmp
mov
dec
fsubrl
adc
sahf
sbb
and
inc
aam
inc
mov
js
mov
lcall
jbe
xor
addr16
sub
fstp
int3
adc
cmp
shlb
xor
sub
xchg
sub
jne
xchg
lea
stc
popa
and
xchg
cli
imul
mov
xlat
cmpsl
push
pop
lcall
push
xor
out
xor
test
jns
or
dec
mov
jae
mov
or
out
mov
cmp
sbb
cmp
pop
sub
mov
adc
xchg
push
jmp
cmp
aaa
mov
rcll
ja
inc
pop
add
mov
jb
cmpsb
jnp
xchg
jl
cwtl
xchg
or
out
daa
and
cmp
jb
call
inc
adc
mov
cmp
arpl
jl
inc
and
cmp
pop
sbb
mov
outsl
or
mov
push
int
cmpsl
sbb
ljmp
sti
push
lcall
std
mov
pop
sub
push
imul
dec
dec
ds
cltd
lret
fs
cld
std
outsl
in
pop
ret
jg
mov
testb
ret
pop
mov
and
pusha
dec
movsb
mov
pop
test
push
sub
cmp
mov
scas
xor
fldcw
in
std
gs
out
test
and
js
inc
das
and
mov
mov
push
jno
fcomps
insl
popf
rcrb
jl
xlat
adc
insl
or
cs
mov
int
xor
leave
out
fmull
dec
mov
pop
mov
jne
add
pop
jnp
push
out
movsl
bound
icebp
mov
sub
lret
outsl
add
int3
push
mov
push
inc
fwait
push
arpl
mov
inc
add
dec
outsb
cmp
sbb
gs
add
insb
loope
mov
shl
in
or
shl
adc
inc
push
dec
fwait
int
cmpsb
mov
fsubrl
movsl
push
sub
cmpsb
xchg
and
xchg
test
dec
and
cs
sahf
cltd
adc
jne
push
inc
sti
mov
sbb
jecxz
push
jnp
fs
divl
sub
pop
jae
push
ja
push
aam
xor
into
popf
adc
and
fmull
imul
ret
outsl
loopne
cmp
or
mov
cli
je
cmp
scas
xchg
stos
sarl
xchg
adc
out
lea
ss
cli
in
push
gs
aas
popa
arpl
adc
jnp
iret
psrld
ss
out
dec
dec
int
loop
adc
pushf
in
xor
in
sub
or
ja
mov
fbld
movsb
xlat
inc
pushf
pop
jp
cmp
adc
adc
dec
cwtl
iret
push
fistps
inc
sbbb
popf
xchg
sbb
ret
stos
insl
sbb
sti
mov
shrb
pushf
sbb
test
in
outsl
loop
stc
loopne
dec
mov
popa
outsb
add
aam
cmpsl
fiadds
pop
mov
or
sub
push
cmp
bnd
ja
adc
xchg
push
push
test
cmpsl
sbb
add
lock
lods
ja
and
mov
stos
fdivs
pop
or
pop
cmp
insl
push
xchg
mov
dec
mov
lcall
xchg
and
roll
orl
ret
les
adc
dec
jl
dec
sbb
das
push
lahf
or
je
insb
adc
cltd
sarl
pop
imul
das
fildll
cs
out
ljmp
jge
sbb
pushf
imul
stos
cmp
push
test
int3
mov
fdivrs
sub
mov
dec
cmp
cmp
cli
jp
push
sub
dec
inc
cmp
loopne
mov
add
imul
lahf
mov
cmp
pop
xchg
push
insb
testb
cmc
mov
pusha
icebp
and
into
ss
cmpsb
mov
push
out
add
cmp
jp
repnz
in
stc
leave
jae
adc
dec
push
insb
lea
dec
sbb
mov
lret
aam
push
fdiv
in
sti
rcrl
cmp
adc
xlat
push
or
out
mov
movsl
repz
incb
je
inc
scas
sbb
addr16
scas
aas
xchg
inc
add
je
lret
aas
dec
cmp
stos
xor
mov
pusha
push
pushl
sub
addr16
out
add
sub
xchg
hlt
or
out
sub
add
pushf
mov
ficompl
inc
movsb
or
xor
inc
inc
es
cmpb
call
aad
popf
mov
push
std
scas
fnsave
sub
mov
xorb
mov
or
or
jl
negb
xchg
jl
loop
xor
les
shrb
imul
xor
pop
or
jecxz
dec
in
into
insb
lcall
adcb
inc
jmp
out
mov
jp
mov
mov
imul
mov
cld
mov
fldt
or
in
movsb
sub
fabs
push
mov
sub
je
popl
mov
mov
sub
mov
cmp
pushf
test
not
xor
in
push
shrl
fisttpl
push
insb
dec
xchg
jle
mov
sti
sbb
ljmp
cli
push
or
out
push
mov
mov
xor
xchg
sahf
test
and
sbb
sub
pop
out
push
push
mov
lods
movsb
insl
xorb
dec
cli
adc
push
loop
lods
or
mov
cmpsb
fsub
cmp
mov
inc
cwtl
fistl
sub
ds
xor
xchg
push
push
xor
sub
repz
cmpsl
xchg
cli
pushf
push
mov
xor
cmpsb
popa
icebp
dec
es
jle
adc
xchg
inc
inc
cld
nop
inc
stc
call
inc
icebp
inc
stc
test
mov
leave
mov
inc
jecxz
mov
int
sbb
test
stos
cmp
pop
mov
xor
pop
mov
pushaw
mov
sbb
loop
dec
add
pop
stos
test
or
aaa
sub
shrl
xlat
call
mov
mov
out
in
es
cmpsb
add
sbb
orb
add
mov
lods
inc
scas
incl
sub
mov
iret
jno
aaa
xor
dec
jge
imul
andl
dec
pop
daa
sub
or
rorl
movsl
push
mov
mov
xor
push
mov
or
clc
jns
cmpsl
outsl
cmpl
jp
cli
pop
or
cs
std
xor
cli
addr16
popf
jbe
or
das
mov
sarb
mov
mov
mov
test
outsb
fs
mov
fmuls
rcl
andb
ljmp
lock
mov
add
jo
lea
out
jo
std
add
or
push
pop
shlb
popf
data16
mov
xorb
daa
xchg
lods
cltd
or
jp
pop
mov
iret
pop
xchg
sub
std
jg
mov
pop
push
cmp
lret
cmp
aaa
inc
sub
inc
ret
sub
call
std
inc
jmp
leave
loop
pop
rclb
push
test
mov
add
push
inc
ret
fxch
add
cmpsb
insb
ds
in
in
mov
add
xor
adc
insl
aaa
xor
xchg
mov
xchg
add
fcoms
int3
mov
rorl
int
mov
rclb
xchg
sbb
mov
cmp
xchg
and
mov
cmc
sbb
ret
xchg
inc
leave
or
fwait
pop
mov
ds
jle
outsb
addr16
in
cmpsb
push
cltd
jl
ja
fistpll
jns
and
sub
mov
out
das
dec
dec
jge
inc
cwtl
cmp
or
aad
stos
sbb
in
push
icebp
sahf
push
js
pop
pop
lcall
cmpsb
stc
inc
mov
adc
adc
xchg
mov
faddl
xchg
ds
mov
aam
leave
adc
push
sbb
pop
call
jo
push
ds
xchg
int
dec
xlat
movl
pop
inc
hlt
nop
insb
dec
xchg
add
jnp
sbb
scas
fidivl
xorl
popf
pop
rcrl
clc
jne
out
in
pop
arpl
arpl
ja
sub
push
out
scas
inc
jno
or
xchg
mov
enter
cs
pop
jo
mov
pop
js
lods
iret
adc
xlat
in
xlat
adcb
lret
mov
in
fidivrs
inc
movsb
inc
icebp
data16
ret
xchg
pop
sub
and
cmp
out
ljmp
shrl
dec
or
cmp
nop
inc
mov
mov
mov
push
jns
out
fwait
test
mov
ja
faddl
mov
dec
shrb
aaa
push
outsb
les
test
aas
stos
xorb
in
mov
sub
jne
push
mov
cli
push
inc
fiaddl
push
jmp
dec
shlb
icebp
cmpsl
jl
sahf
and
aaa
pop
testb
jb
xor
and
lock
xchg
mov
mov
dec
mov
pop
xchg
inc
jg
jae
dec
fildll
jp
adc
xor
in
sysenter
xchg
pusha
sub
sub
mov
jp
leave
in
jmp
out
subl
sar
ror
out
pop
in
clc
jnp
loopne
dec
aad
push
mov
xchg
inc
inc
enter
mov
aam
pop
cwtl
out
and
jns
or
pop
inc
push
mov
xchg
pop
es
sub
pop
mov
in
jle
xchg
xorl
push
sub
dec
xor
pop
movb
mov
ret
int
mov
xlat
dec
loopne
mov
jae
and
adc
repz
add
mov
xor
idivl
cmp
inc
jp
add
data16
xchg
jp
jmp
jp
push
jmp
add
jp
lods
negb
mov
jne
scas
push
jge
xchg
sbb
dec
push
dec
fbld
mov
mov
lock
push
mov
movsl
jl
fisubs
imul
sahf
xor
push
in
test
xor
cli
movb
dec
fnstcw
push
mov
xor
push
pop
call
repnz
outsb
aaa
mov
stos
stc
sub
loopne
test
xchg
insb
add
scas
leave
sarb
leave
pop
shl
sbb
aam
sub
xchg
push
dec
cmp
cmp
sbb
and
add
pop
les
das
add
out
add
xorb
test
xchg
cmp
fdiv
mov
or
shll
pop
or
adcl
jmp
xor
lret
and
mov
rcll
das
jnp
roll
repz
jle
push
pop
aad
adcl
push
leave
ja
push
gs
addr16
sbb
xor
call
test
imul
scas
int
push
lcall
out
call
movsb
ljmp
cli
pop
outsb
cmp
pop
mov
mov
jl
pop
xor
pop
imul
sbb
imul
out
cmpsl
mov
lods
jle
lock
adc
out
inc
sahf
rolb
mov
xor
xor
pop
push
imul
lock
fadd
mov
inc
xchg
mov
rorl
mov
hlt
xchg
push
test
and
mov
dec
loope
jbe
mov
pop
pop
xor
push
mov
cmpsl
adc
add
divl
mov
es
jno
inc
xchg
or
shll
add
xchg
cmp
cmp
or
mov
jle
sbb
pop
stos
adc
cltd
call
inc
adc
mov
mov
push
xchg
aam
xchg
and
lret
mov
sub
ficomps
lcall
push
and
push
mov
xor
loop
dec
xorl
insb
sbb
adc
adc
out
mov
sahf
mov
mov
push
negl
or
mov
fmulp
cmp
jle
dec
inc
jbe
jnp
aaa
lea
push
and
lods
inc
xchg
xchg
adc
jo
or
mov
mov
icebp
shll
cmpb
xchg
dec
cmp
cmp
sub
push
cltd
sti
notb
push
out
incl
jb
call
ror
fwait
sub
cmp
pop
mov
sub
mov
xorb
xchg
xchg
xor
outsb
popa
shrl
lods
mov
inc
xchg
ja
cmp
js
push
adc
mov
repnz
aas
cltd
cmp
lds
aam
mov
sub
fst
leave
jge
cmp
ror
arpl
jl
jb
adc
jno
ss
ljmp
daa
push
adc
dec
sbbl
aad
sub
lret
int
fisubl
sahf
aam
adc
sub
mov
ficomps
mov
lods
mov
cmp
mov
pop
js
jp
pusha
jnp
scas
loope
into
movsb
sbb
aaa
dec
cmpsl
xor
push
sbb
imul
data16
outsl
out
pop
and
inc
ror
sti
dec
leave
insl
cmpl
in
adc
add
outsl
call
lcall
xchg
xor
mov
in
push
xchg
cmp
sbb
xchg
pop
sbb
jno
std
mov
cmp
test
push
inc
addr16
iret
loop
ret
add
dec
rolb
xor
add
jl
mov
pusha
repnz
cmp
mov
into
jb
mov
insb
cli
cmp
cmpsl
insb
push
stos
or
and
pop
into
jne
pop
sarb
cld
cwtl
and
cmp
mov
es
and
outsl
sbb
sbb
stos
inc
pop
in
fcoms
add
adc
dec
popf
js
call
sar
in
adc
and
xor
mov
or
fsubrs
inc
ljmp
push
push
pop
adc
xchg
sbb
test
xchg
or
cmpsl
sti
pushf
test
inc
sub
adc
mov
fcom
cltd
dec
push
sub
sti
in
adc
daa
jge
cmp
inc
or
cmp
loop
sbb
and
imul
pusha
lret
mov
fdivr
test
js
jge
sbb
lcall
subl
repz
push
push
mov
add
lock
push
sub
add
or
in
leave
scas
dec
aas
je
xor
and
hlt
push
testl
ret
xorl
cltd
into
sbb
dec
movd
jb
inc
sbb
filds
or
dec
lret
fisubrs
orb
arpl
or
and
aaa
add
add
jb
lods
lods
jns
cltd
mov
fists
and
decl
jmp
sbb
outsb
pusha
cs
adc
popf
push
cmp
or
inc
mov
adc
leave
or
jns
ficoms
or
sub
inc
adc
xlat
sub
sbb
adc
mov
scas
sub
lret
and
popf
push
insb
push
fnsave
in
mov
jo
out
mov
sbb
or
fidivrl
insl
push
pop
add
dec
pushf
push
imull
jle
cmp
mov
cmp
lods
ret
mov
or
push
jns
out
mov
lret
cmp
test
push
inc
mov
xor
cli
mov
imul
xchg
mov
stc
int
popa
add
inc
pop
pusha
adc
popa
push
add
cs
int3
pusha
out
mov
test
or
sbb
xchg
mov
sbb
shr
cld
jae
cmp
xor
jo
dec
icebp
sbb
arpl
cli
xor
fcomps
or
jl
mov
stc
mov
adc
in
xchg
jecxz
add
rorl
and
lcall
add
xor
and
ret
cmpsl
mov
mov
cmpsl
dec
sbb
xchg
imul
sahf
cs
add
sub
mov
lea
lcall
pop
push
gs
rclb
mov
out
into
jle
mov
xchg
outsb
cli
add
mov
push
fcmovnb
mov
popf
xchg
mov
and
pop
mov
dec
mov
loop
xchg
and
push
push
sahf
pop
xchg
cli
pushf
mov
sbb
inc
sub
scas
rclb
or
xor
std
xchg
adc
fimull
push
cs
sub
jmp
scas
mov
xlat
jecxz
stos
jo
sub
sti
push
icebp
std
test
sarl
cwtl
dec
inc
cltd
pop
leave
xchg
fmuls
xchg
adc
push
fisubl
jnp
aas
push
std
jns,pn
sarb
sub
adc
mov
orl
out
hlt
subb
push
cwtl
inc
ljmp
xor
rolb
into
xchg
shl
adc
or
lahf
sbb
push
js
dec
ja
cmp
cmpsl
arpl
mov
xor
das
sahf
addl
testl
mov
insl
xchg
aad
push
cld
rol
fldt
jbe
mov
imul
enter
inc
les
stos
decl
xchg
loopnew
pop
add
aaa
mov
shrb
sub
pushf
cli
push
ljmp
mov
inc
gs
jo
mov
repnz
mov
shll
es
ljmp
jecxz
fdivs
je
pop
jge
sahf
fimuls
and
in
cmpsb
ret
addr16
outsb
stc
in
xor
and
pop
jnp
push
xchg
mov
xchg
lcall
cmp
or
imul
adc
cs
push
mov
mov
add
cwtl
cwtl
push
push
pop
xor
mov
adc
cmp
nop
mov
push
dec
ret
push
idivl
sbb
xor
aaa
xor
enter
rorl
out
mov
and
lahf
push
sub
jg
popa
fnstenv
movsb
repz
push
add
sub
lock
sub
lods
je
push
cmove
xlat
and
xlat
push
call
adc
filds
aas
inc
inc
mov
or
lods
dec
aas
dec
test
outsb
sti
adc
iret
fdivrs
jmp
test
out
pop
inc
push
mov
mov
jmp
jns
jo
jl
fstp
or
jl
jl
sub
es
adc
popf
mov
ret
daa
ret
sub
cmpb
in
lret
jl
mov
pop
push
pushf
outsl
mov
and
xchg
das
lea
cmp
sahf
push
mov
fmuls
jp
cmp
mov
xor
xchg
xchg
stos
dec
adc
mov
xor
jmp
mov
out
test
or
arpl
cmp
cmp
test
stc
ret
push
sbb
or
dec
es
cmp
sbb
testl
loopne
negl
push
xor
xchg
dec
xor
sub
dec
das
jne
xchg
mov
sub
jo
ret
enter
pop
adc
mov
pop
lds
mov
adc
cmp
loopne
lahf
mov
orl
cmp
pop
or
dec
sarb
sub
dec
jg
jb
in
stos
xor
xor
xor
adc
mov
fistps
sbb
add
out
fsubrp
loopne
mov
nop
dec
sbb
jno
mov
fmulp
lods
leave
sub
xchg
scas
dec
je
xchg
movsb
push
push
xchg
ffreep
nop
enter
sbb
adc
sarb
jns
pop
cmpsb
sbb
and
xor
out
js
nop
pop
movsl
jle
jl
push
adc
pop
dec
jae
xchg
les
cmp
mov
std
push
pop
or
jo
hlt
cmp
sbb
outsb
jns
out
mov
ljmp
clc
pop
in
in
adc
push
push
jbe
lods
lret
aaa
dec
pop
mov
add
cs
test
xor
adc
hlt
pop
lret
sbb
mov
addr16
ret
jp
movsl
cmp
push
mov
ds
and
insb
loope
jno
subb
scas
imul
lods
dec
lret
mov
push
cwtl
ss
inc
pusha
xor
mov
out
lods
push
bound
lret
add
jecxz
inc
push
and
inc
fcoms
push
adc
mov
dec
push
adc
add
push
test
dec
push
xchg
mov
ljmp
dec
or
lds
mov
mov
xor
mov
dec
roll
add
add
push
fwait
jge
insb
imul
inc
adc
shlb
sti
xchg
dec
xlat
sbb
mov
popf
cmp
add
jno
xchg
mov
pushf
sar
jns
pop
mov
adc
lods
push
movsb
add
sub
xchg
sbb
sti
out
cmpsb
popf
popf
enter
mov
dec
ja
lret
add
test
lcall
adc
and
lcall
in
jb
cs
pop
add
push
jp
rclb
jnp
aam
shlb
out
pop
jge
pushf
lret
mov
mov
add
mov
loope
js
fadd
rcl
mov
adc
mov
xor
pushf
repnz
out
lods
pushf
int
mul
inc
packuswb
arpl
cmp
or
ja
jo
pop
loope
xor
sub
jnp
imul
mov
fmuls
mov
scas
out
fildl
subl
fcompl
sbb
popa
cltd
roll
xchg
mov
cmp
mov
ret
into
ja
sub
push
imul
xor
adc
mov
xchg
xor
mov
test
push
or
xchg
clc
shll
das
bnd
and
pop
repnz
sub
outsl
pop
lahf
loop
sub
mov
in
add
add
sub
cmp
push
xor
fisubrs
push
inc
cmc
dec
cwtl
dec
cwtl
notb
fwait
xchg
bound
hlt
movsl
mov
sbb
pop
mov
inc
push
mov
inc
jmp
and
pushl
mov
test
scas
sbb
out
mov
lods
or
popa
call
in
push
ret
mov
imul
rolb
sbb
cwtl
leave
mov
imul
pop
adc
cld
in
fnstsw
cli
bswap
test
push
test
mov
pop
iret
mov
jo
dec
add
cmp
mov
cmpb
adc
mov
cmp
fmulp
or
push
mov
das
repz
jbe
mov
fwait
sub
pop
xor
jae
inc
sbb
xchg
in
or
mov
scas
pop
je
std
dec
not
pop
fnstsw
sbbl
test
push
xchg
jbe
sti
loopne
xlat
negl
daa
xor
jmp
xchg
push
push
fisubrs
rolb
mov
fisubrs
lahf
push
movsl
bound
add
test
mov
xor
lods
inc
out
pop
scas
hlt
cli
xor
lcall
pop
fistpll
pop
cmp
out
jmp
pop
fdivs
xchg
dec
fs
mov
stos
xchg
ja
mov
mov
pop
or
stos
dec
test
adc
mov
cltd
sbb
sbb
jmp
ret
dec
scas
cmp
insl
inc
adc
in
popa
and
and
addb
push
push
cmp
xor
mov
dec
fistpll
sbb
aam
stos
jo
outsl
and
mov
aad
adc
sub
ret
push
or
pop
inc
jmp
pop
jg
fcompl
push
addr16
dec
nop
mov
int3
fisttpll
iret
push
cmpsb
ficompl
push
cmpsl
int3
je
adcb
imulb
js
sub
mov
pop
add
sub
push
test
mov
sahf
bound
mov
jno
fidivs
xor
mov
mov
sbb
add
lods
mov
push
enter
sbb
dec
cmp
or
outsl
cld
lret
fstl
add
inc
cs
fucomip
jl
aas
adc
xor
sbb
insb
push
jne
ss
popf
push
pop
xlat
into
lcall
sbb
pop
shrb
stos
add
pusha
xchg
in
dec
fcmovnu
and
ds
cmpsl
outsb
sub
imul
sub
outsb
or
addr16
push
cmpb
xchg
push
pop
test
mov
hlt
js,pn
lret
aam
mov
adc
inc
cltd
cmp
shrl
cld
mov
mov
mov
out
into
pop
inc
ret
jecxz
iret
scas
add
mov
ja
loop
xor
pusha
les
movsb
pop
aas
push
cld
jl
inc
jo
sub
popl
insb
pop
clc
and
hlt
mov
or
mov
mov
stos
push
mov
add
push
fs
dec
das
push
fiaddl
jo
in
in
xor
mov
jle
adc
or
pop
mov
push
movsb
clc
das
push
lods
dec
jle
movsl
and
stos
inc
divl
gs
lahf
adc
sub
xchg
nop
cmpl
mov
fnstcw
cmp
mov
jo
dec
lea
ror
xchg
cltd
mov
inc
mov
xor
popf
mov
out
hlt
sbb
push
push
push
scas
sahf
xor
test
or
fwait
outsb
addr16
gs
rolb
jb
dec
mov
int
mov
aad
js
enter
jmp
lods
cmp
mov
jle
aam
ficoms
nop
jno
sub
pop
lret
fwait
add
inc
xchg
sub
adc
cmpsb
int
scas
pop
xor
popf
fisttps
nop
mov
popf
mov
xchg
pop
dec
es
addb
mov
out
xchg
and
mov
sbb
in
fnop
push
mov
leave
adc
ficomps
add
push
inc
dec
jns
insl
cltd
dec
fists
les
dec
lods
push
fld
dec
lcall
mov
and
push
lahf
cli
jl
mov
hlt
in
mov
add
xor
sti
inc
cmp
cwtl
push
addb
mov
outsl
stos
jg
push
adc
shll
mov
mov
mov
xchg
sub
rcl
jbe,pt
outsb
adc
xor
std
jp
inc
cltd
push
mov
jmp
cwtl
cs
mov
push
scas
aas
xor
je
scas
insb
sub
pop
lret
scas
cs
shrl
xchg
dec
imul
inc
cmpsb
test
sbb
xchg
cltd
shrl
pop
jg
pop
fldl
mov
xchg
ja
scas
popa
push
and
arpl
movsl
pop
jg
and
test
addl
in
push
insb
xchg
sahf
leave
jbe
and
cmp
ret
push
mov
call
out
test
sti
shlb
mov
ljmp
cmc
push
pop
les
jmp
or
push
cli
adc
add
leave
loop
mov
mov
fbld
sub
cmp
aad
into
inc
sub
fisubs
xchg
clc
sbb
fldl
xchg
sub
mov
shlb
popf
iret
enter
and
pop
push
jne
call
mov
mov
popa
aas
outsl
xchg
mov
or
mov
jecxz
add
pushf
je
cwtl
pop
mul
xchg
iret
and
inc
push
ret
push
test
shll
js
cmp
ret
cmp
mov
arpl
xchg
cmc
inc
incl
std
dec
add
xchg
adc
gs
out
and
and
insb
mov
pop
lret
adc
insl
jp
xchg
xchg
mov
adc
aam
and
sbb
in
lcall
inc
in
data16
xchg
pop
leave
rorl
inc
hlt
negl
adc
jnp,pn
jns
std
or
or
push
ret
mov
and
jno
sbb
xchg
mov
xlat
cld
std
in
fnstenv
dec
fidivrs
sbb
push
popf
xchg
push
scas
ds
and
and
push
push
fxch
cmp
cwtl
pop
adc
fdivrs
lods
mov
jnp
xorb
pop
pop
sub
sub
les
dec
inc
push
shlb
cld
dec
aad
xor
iret
out
cmp
mov
adc
loopne
jg
mov
fsubl
nop
xchg
mov
insb
aam
ret
test
jno
and
add
sbb
ja
xchg
int3
cs
cmp
jo
sbb
rorl
lahf
jecxz
inc
push
mov
lods
adc
lcall
or
cmp
adc
lret
pop
mov
scas
push
jg
dec
int
inc
dec
repnz
fcompl
xchg
jmp
nop
dec
ret
in
push
sahf
test
mov
sbb
xor
jecxz
ss
sub
or
scas
call
jle
dec
lcall
push
leave
jge
popf
xor
mov
popf
or
fisubs
shrl
add
leave
je
sub
xlat
repnz
aas
popa
mov
std
fisttpl
xchg
fbstp
lahf
jns
push
and
push
mov
outsl
je
bound
jae
or
loope
add
jno
out
push
fistps
lds
fwait
repnz
push
xchg
jge,pn
cmp
jno
push
and
adc
repz
xor
xor
jae
loope
daa
insl
orb
sbb
imul
add
test
test
xor
or
xchg
xor
stos
add
cmp
jl
cmp
bnd
loope
pop
andl
pop
test
xchg
or
mov
and
inc
mov
jae
pop
xchg
and
push
fnstcw
ret
std
imul
stos
inc
pusha
pop
sbb
and
clc
movsl
fs
sub
adc
call
lds
fwait
das
xor
lock
enter
pushf
outsl
ficoml
dec
jmp
loope
xor
fwait
add
repnz
aad
sahf
icebp
mov
and
cmc
or
pop
shrl
jp
inc
xchg
mov
inc
mov
stos
xlat
lcall
popf
popa
sub
ret
pop
lds
jb
mov
pop
ret
inc
gs
adc
fs
jno
xchg
lret
pop
js,pn
add
push
aam
xchg
popf
out
cltd
mov
pop
std
out
cmp
aad
push
lods
repz
stos
popa
psubusw
add
and
add
cld
xchg
mov
cmp
pusha
call
inc
test
mov
mov
or
out
ret
idivl
sahf
sbb
mov
arpl
or
inc
cmp
enter
shl
clc
cmp
mov
mov
enter
rolb
es
and
popa
sub
int
add
bound
jg
mov
adc
adc
cs
ljmp
and
cmc
jnp
lret
repz
cmp
mov
je
insb
or
push
jbe,pn
aam
pop
insl
jne
sbb
sahf
imul
daa
mov
jns
ja
int
cli
push
xchg
in
in
pop
subl
cmc
call
and
test
nop
repnz
sbb
stos
adc
mov
popa
jecxz
out
jae
movsl
popf
daa
cmpsl
daa
xor
sbb
mov
inc
and
adc
mov
push
out
mov
jo
pop
push
fcmovnb
pop
mov
pushf
not
cltd
aam
jmp
xchg
daa
add
adcl
loope
outsb
sahf
sahf
adc
sub
stos
popa
scas
cmp
fmulp
push
pusha
sub
push
mov
mov
inc
lret
cld
sbb
sbb
scas
das
in
xchg
or
pushf
mov
loop
xor
or
xchg
or
aaa
rcr
inc
gs
add
mov
jb
imul
repnz
xchg
push
cmpsb
push
cs
cs
lcall
arpl
mov
je
mov
xor
pop
fcomps
fs
cwtl
dec
pushf
push
ljmp
inc
pop
fcmovnu
mov
rcl
push
mov
jb
cltd
mov
hlt
adc
mov
rep
pop
inc
stos
jne
sbb
push
adc
andb
and
dec
stc
mov
xchg
fcmove
or
ds
push
push
pop
xor
stc
std
rorl
mov
xchg
push
add
into
or
ja
rcrb
mov
lcall
adc
jecxz
mov
mov
nop
out
js
sahf
xchg
dec
mulb
pop
and
cmp
jnp
call
adc
mov
incb
mov
xchg
daa
sub
out
je
mov
sub
sbb
cmp
jp
cmpsl
mulb
pop
or
jb
add
lret
dec
xchg
cmp
sbb
into
scas
outsb
pop
adc
ret
imull
ja
sbb
push
es
in
add
jae
dec
mov
mov
in
or
jo
mov
xchg
bound
js
jns
dec
mov
sub
mov
aas
mov
outsl
inc
mov
shrb
sbb
pop
mov
stos
fadds
test
cmpl
icebp
in
cmp
dec
mov
into
add
repnz
out
lea
cs
jne
xchg
movsb
xlat
insl
xchg
xor
add
jmp
mov
std
sbb
or
mov
bound
cmp
mov
mov
orl
aaa
sarl
ret
pop
daa
out
imul
sub
mov
std
sbb
jne
dec
jecxz
jg
and
es
ss
repz
inc
pop
mov
or
mov
jne
sub
or
stos
nop
pop
push
adc
out
cmp
sub
jns
cmp
pop
pusha
mov
int3
pop
aad
imul
and
loopne
or
and
cmp
test
fdivrs
aas
mov
cmpsb
jne
lods
imul
lret
jb
sbb
mov
stc
add
xor
sbb
cltd
cvtps2pi
push
imul
in
add
xlat
cmp
popf
hlt
lds
sub
sub
fstpl
aaa
int
stc
pop
fistps
imul
notb
mov
lds
call
popa
fsubl
pusha
inc
and
dec
xchg
xor
inc
adc
bndstx
adc
adc
outsb
cli
insl
les
pop
fidivrl
mov
daa
pop
vpackuswb
mov
leave
cmp
xchg
pop
xchg
ja
add
fldl
sti
cli
outsl
fldenv
stc
insb
cmp
mov
imul
inc
fldenv
outsl
mov
push
add
cmp
data16
add
mov
call
mov
into
or
mov
cmp
test
arpl
sbb
xchg
lahf
mov
lcall
aaa
and
add
rcr
pop
fdivl
or
mov
and
fcmovu
xor
shrb
dec
adc
cmp
cwtl
es
loopne
mov
imul
fwait
cmpsb
imul
mov
adc
sbb
jb
adc
adc
jp
dec
jg
push
mov
sarb
out
out
test
subl
repnz
cmpsl
mov
loopne
mov
stos
xchg
pushf
or
jbe
pop
xor
push
mov
imul
jne
mov
rcrl
xchg
mov
mov
inc
mov
add
xor
test
mov
and
lret
push
and
mov
pop
inc
jo
aam
sub
push
lds
or
mov
mov
push
inc
adcb
cli
imul
inc
adc
fildl
add
mov
imul
movsb
enter
mov
roll
aam
and
outsb
mov
stos
push
push
lods
and
mov
and
lods
into
and
js
xchg
leave
cmpsb
push
out
cmpsb
popa
gs
mov
pop
mov
in
imul
xlat
outsl
jae
dec
repz
cld
out
fnstsw
mov
xchg
les
mov
test
and
xchg
sub
mov
jns
mov
cmp
shlb
xchg
jnp
xchg
mov
mov
sarb
mov
ret
in
mov
xor
and
std
mov
sbb
outsb
popf
mov
mov
xchg
rcrb
lods
ret
icebp
outsl
pusha
fstpt
int
aad
stos
xchg
in
ds
dec
pop
sub
xor
add
or
je
jae
sub
jne
mov
inc
xor
out
sbb
push
mov
jecxz
add
jo
ret
icebp
je
pop
nop
jge
cld
sub
push
or
not
call
mov
xlat
ror
jecxz
test
adcb
popf
jp
cli
mov
push
adc
jns
mov
sub
in
lds
bound
push
pop
loope
fsubrs
mov
sbb
xor
testb
shl
in
or
cs
popa
mov
ret
js
jb
nopl
call
enter
mov
and
add
xor
and
les
call
ret
mov
push
push
pop
int3
push
shl
mov
out
in
mov
add
push
inc
mov
pop
push
mov
popa
cwtl
inc
mov
pop
jecxz
into
inc
shrl
lret
inc
inc
fcomps
push
test
cmp
pop
ss
pop
jge
or
loopne
dec
pop
jmp
pop
ljmp
stos
push
cltd
mov
push
stos
sub
cmp
push
jmp
cmp
mov
jge
outsl
aad
inc
scas
data16
popa
enter
mov
or
daa
xchg
cmp
adc
inc
addr16
sub
cld
cmp
jg,pt
int
jo
ficomps
pop
call
jbe
dec
xchg
jmp
cmpsl
in
scas
ret
sarb
lods
cli
dec
mov
mov
int3
in
outsl
xor
push
movups
cmc
movsl
xor
je
fld
mov
addb
mov
std
adc
adc
rcrl
or
loop
lods
mov
push
lret
clc
fs
adc
xchg
call
push
mov
jge
inc
jbe
icebp
adc
es
xchg
js
jns
pop
push
xor
testl
icebp
cli
call
and
pcmpgtd
jbe
mov
mov
sbb
les
repz
dec
xchg
ds
aas
push
mov
es
adc
mov
push
ret
sahf
cmp
jae
insl
cmpsl
jbe
mov
frstor
xchg
out
rcll
imulb
xor
and
dec
div
xchg
lds
gs
jbe
jnp
adc
stc
sbb
leave
mov
mov
sub
aaa
xlat
arpl
xchg
cwtl
hlt
mov
cli
negl
mov
push
ds
mov
jbe
jnp
pop
push
idivb
jo
xchg
mov
add
nop
sti
push
inc
dec
mov
test
xor
add
adc
pop
outsb
movsl
ret
data16
and
or
std
cmp
movsl
lcall
mov
mov
cmpsl
xor
push
rclb
cltd
add
mov
jb
repz
fisttps
sub
push
add
adc
addb
ja
imul
insl
xor
jge
pop
in
dec
jmp
cli
xchg
xor
lcall
ss
mov
mov
subb
add
loope
jo
mov
cmp
pop
imul
sub
jno
push
mov
fdivs
xchg
inc
cwtl
xor
push
xchg
cmpsb
mov
jp
or
jmp
test
shrl
test
imul
ret
xchg
les
ja
xchg
adc
pop
mov
fmull
xchg
js
xchg
adc
ss
mov
ja
loopne
mov
mov
xor
mov
outsb
mov
adc
pop
popa
sub
mov
mov
or
sbb
mov
mov
mov
fbstp
pop
fildll
cld
jno
dec
pushf
jnp
xchg
subl
xchg
pop
lock
aas
mov
aad
push
insb
aaa
das
cli
xchg
lods
fcmovnbe
dec
jbe
pop
aam
fistl
pop
push
movb
test
push
adc
jb
adc
lods
aaa
or
cli
dec
mov
mov
jecxz
pop
call
sbbl
push
inc
shll
mov
push
repnz
mov
or
xor
leave
pop
iret
dec
jns
popa
mov
xor
inc
ficoms
push
jle
movsb
in
push
stos
stos
or
int3
daa
in
jg
mov
outsl
pushf
mov
add
aas
decl
cmovb
dec
pushf
rcl
aad
sub
mov
ja
xchg
push
xchg
push
pop
xchg
sub
mov
popa
dec
aad
roll
push
gs
mov
mov
mov
shr
mov
lahf
dec
test
xor
cs
enter
mov
lret
jp
add
mov
dec
fidivs
test
cmp
popf
jp
imul
lea
daa
push
cmpsb
fdivrl
sub
push
mov
ja
xor
mov
mov
popf
push
bound
mov
cmpsb
aaa
add
cld
xor
fildl
pusha
cld
pop
push
js
add
pop
jp
and
adc
ret
cmp
jbe
js
stos
btr
je
lret
jbe
jecxz
cmp
lahf
adc
mov
ret
insb
pop
push
jge
jbe
leave
add
push
mov
add
rcrl
add
loopne
int
cmp
cmc
xor
fistpll
nop
test
lods
lcall
in
jnp
adc
jns
mov
mov
loope
test
xchg
test
in
sub
lahf
jno
mov
repnz
stos
in
es
aas
cli
push
imul
out
dec
sub
and
ja
mov
push
les
fs
pusha
sub
test
or
adc
sbb
add
je
cmpsl
mov
sar
lahf
jne
mov
jo
pop
mov
xor
pop
scas
sahf
pop
ja
ljmp
int
and
pushf
push
data16
push
jecxz
test
push
fdivr
mov
out
mov
dec
inc
cmp
xchg
loope
xor
push
mov
dec
mov
add
dec
rorl
jb
jle
adc
pop
mov
scas
mov
xor
mov
inc
leave
aad
adc
cli
adc
dec
filds
psubusb
and
repnz
or
pop
lret
push
inc
cltd
ja
testb
and
imul
add
lea
xchg
dec
rcll
movsb
add
and
out
or
inc
mov
pop
inc
stos
pop
fisubrs
data16
inc
inc
ds
adc
lahf
cmp
dec
lret
jmp
push
cmp
imul
leave
scas
arpl
jmp
jmp
imul
add
pop
or
in
jbe
mov
push
xor
lds
int3
stos
lock
or
rorb
xor
or
incl
outsb
jbe
fbld
punpcklwd
mov
xchg
test
inc
fisttpll
repnz
mov
orb
nop
sbb
pop
out
repnz
iret
scas
add
dec
ljmp
lcall
or
mov
psubsb
addr16
daa
aaa
leave
call
xlat
push
movswl
add
pop
out
inc
dec
movsl
jle
or
pop
movsl
fsub
scas
sub
jns
ds
mov
pop
aad
gs
mov
mov
cmp
ret
aad
xchg
repnz
movsb
mov
mov
out
add
clc
push
test
cwtl
dec
ret
jge,pt
cmp
inc
add
aaa
in
ret
inc
cltd
out
sarl
jmp
lret
int3
mov
push
xor
in
scas
xchg
pop
inc
add
iret
scas
cmp
scas
inc
out
pop
push
pop
ja
mov
scas
push
mov
sbb
rdmsr
repnz
add
sub
popa
cmp
rolb
cmc
mov
lahf
adc
mov
add
sub
xchg
cmp
mov
mov
push
pop
mov
lods
add
adc
call
fcmovu
dec
fadds
mov
scas
pop
shr
jb
mov
jae
sbb
mov
fists
outsl
xchg
inc
adc
sti
pop
out
sub
jnp
js
sti
clc
push
mov
in
add
jne
pop
xor
push
cmp
jbe
xor
in
jle
mov
lds
jae
into
mov
cmp
dec
add
cwtl
dec
push
les
incb
loope
adc
sbb
gs
out
xchg
dec
xor
insl
cmp
dec
xor
movsl
add
cld
scas
dec
sub
lret
data16
lret
or
sbb
and
jmp
inc
dec
sbb
vphaddbq
dec
xor
add
pop
and
movsb
jo
rolb
loope
mov
out
add
mov
jle
or
gs
imul
rcr
jne
add
jno
inc
jae
mov
add
pop
hlt
dec
imul
psubb
mov
dec
pop
int3
and
mov
push
in
ss
dec
or
pop
int
cwtl
xor
mov
rcrb
inc
adc
fcomip
movsl
push
jmp
lret
sbb
jmp
popf
jp
jno
inc
jmp
push
push
je
add
cmp
andl
out
mov
sahf
negl
sub
mov
push
sahf
fisubrs
cwtl
jmp
loopne
std
add
scas
clc
push
cmp
push
std
in
jns
push
pop
clc
mov
pop
jo
mov
push
ret
jp
cmp
inc
mov
test
push
sti
or
stc
dec
mov
mov
cltd
insb
fdivl
adc
cs
rcl
ja
ret
mov
cvtps2pi
lret
xlat
pop
adc
mov
add
mov
mov
and
pop
or
in
push
sti
add
mov
jb
sub
sbb
dec
sub
sbb
sub
leave
inc
push
das
outsb
sub
roll
cli
and
dec
jecxz
sbb
aaa
fidivs
jns
mov
mov
xor
dec
mov
xchg
inc
xor
leave
push
int3
js
arpl
add
push
cli
fsubrl
repz
dec
pop
pop
lea
fcompl
inc
pop
jge
daa
les
stc
or
pop
xor
cmpsl
mov
mov
adc
or
sarl
out
jle
sar
mov
sub
ficompl
loopne,pt
xor
into
in
pop
or
dec
out
lret
sahf
and
jmp
pop
shrb
and
int
fbld
push
push
push
mov
insb
xor
jnp
or
fcmovne
shlb
sbb
push
push
enter
repz
idivb
sti
mov
fnstsw
repnz
addr16
scas
xchg
popf
clc
out
lea
xchg
adc
insl
subb
je
or
les
rcll
sbb
xor
and
cwtl
cmp
sahf
adc
lods
pop
movb
jle
rcrb
fs
movsl
dec
pop
fs
dec
xchg
call
outsb
adcl
int3
aam
add
pop
push
stos
in
push
xor
pop
sti
and
sbb
xchg
xor
loope
jb
and
xchg
mov
cli
sti
push
mov
lret
js
mov
xchg
mov
pop
lea
aad
mov
push
jb
aad
mov
mov
es
aaa
adc
cmpsl
push
mov
in
and
sub
test
cmp
ja
cmp
lcall
cmpsb
cmpsl
or
jg
rcl
push
test
fidivrs
scas
sbb
add
mov
cmp
push
push
icebp
movsb
aad
mov
das
icebp
stos
lahf
mov
adc
and
lock
fs
leave
sub
int3
inc
push
lret
add
and
sub
inc
jnp
or
push
mov
pushf
push
in
adc
pop
xchg
cld
add
into
add
or
pushf
and
xor
ret
add
stc
negb
loopne
in
das
enter
jb
es
mov
cmp
xchg
or
pushf
sub
repz
hlt
icebp
dec
push
insl
xor
push
les
mov
pop
dec
cmpsb
inc
mov
imul
scas
or
inc
cmp
xchg
or
mov
cli
sub
lds
mov
sub
rcll
out
push
sub
inc
xlat
addr16
fcomip
in
sti
mov
mov
addr16
sbb
pop
in
fimuls
inc
addl
dec
mov
mov
adc
fwait
dec
push
lock
int
addr16
push
xor
push
xor
pop
lret
dec
add
inc
subl
stos
cmp
jne
inc
icebp
sbb
dec
je
daa
inc
insl
mov
push
je
cmpsl
xor
xchg
ds
dec
aas
in
mov
lahf
addr16
ljmp
mov
sarl
int3
dec
push
popa
xor
cmp
and
lods
out
xor
or
xchg
mov
or
adc
out
jge
jae
sub
ficompl
lods
pop
fwait
xchg
insb
sbbl
movsl
xchg
test
or
mov
loopne
add
mov
fsubrs
dec
fildl
loopne
cmp
xchg
movsl
fidivrs
in
sbb
cld
hlt
outsb
adc
sar
imull
enter
push
push
aad
and
pop
addb
sahf
cmp
jnp
inc
sbb
mov
mov
jecxz
lcall
mov
jg
fcoms
fmuls
pop
ja
add
fistps
sbb
mov
add
lahf
popf
aam
imul
push
repz
das
inc
xor
lods
push
push
pop
inc
sbb
or
mov
mov
push
add
pop
les
push
stc
push
inc
es
fucomi
jnp
flds
cmc
cltd
hlt
iret
cmp
push
stos
or
sub
xchg
idiv
xor
lret
adc
into
data16
jae
xchg
in
pop
das
cmpsb
mov
enter
outsl
sub
idivl
loopne
cmp
lds
pop
outsl
sbb
lock
or
int
xchg
sti
out
jns
lret
dec
arpl
push
pusha
mov
int
mov
add
and
fdivrl
outsb
sbb
cmp
adc
push
out
or
sbb
sub
mulb
mov
faddp
fwait
mov
pop
faddp
mov
shrb
out
xor
imul
xorl
popf
rcl
fucomip
adcl
push
std
cmp
xchg
aaa
scas
xor
std
out
pop
popf
test
imul
negl
lret
in
add
xchg
sti
xlat
push
dec
mov
push
adc
inc
xchg
lcall
jno
xor
nop
stos
or
rorl
sbb
sti
roll
xchg
adc
roll
pop
inc
addr16
fmull
aaa
mov
dec
mov
mov
xchg
push
cmp
push
imul
adc
fidivl
std
and
addl
mov
into
pop
pop
push
les
push
mov
fs
shll
das
cmp
cltd
push
repz
stc
xchg
int3
test
repnz
dec
pop
aad
pop
fiaddl
test
sub
fidivs
inc
int3
aad
lds
das
insb
insl
push
push
cltd
popf
add
xor
cltd
insl
pop
xor
in
mov
dec
test
lea
ss
and
jns
and
rcrb
into
insl
scas
lcall
sub
xchg
dec
push
movl
push
jnp
xor
xor
xlat
f2xm1
repz
icebp
icebp
js
inc
sub
jnp
push
inc
test
xchg
jmpw
subb
inc
or
stc
and
jae
fiaddl
js
or
cmp
cmc
adc
hlt
ja
pop
pop
outsb
lds
sbb
out
push
out
add
ss
xchg
loopne
jnp
aam
cli
adc
lods
std
mov
fisubl
jl
adc
test
imul
dec
jne,pn
jne
cs
popf
test
cwtl
scas
lods
inc
jge
int
stos
das
cmpsl
insl
icebp
int
adc
call
or
mov
mov
aam
sub
andl
aas
fistl
into
jb
sbbb
xor
mov
ds
adc
lods
lea
xchg
ret
jne
in
pop
lds
or
outsl
lods
int3
mov
scas
pop
pop
outsb
aam
ds
push
loope
scas
popf
sub
add
fs
js
lea
sub
inc
mov
addl
pop
pop
xchg
mov
hlt
pop
cmp
lods
or
cs
xor
push
cld
xor
pop
push
leave
and
ja
psubd
xor
sbb
not
aaa
insl
add
push
push
iret
lods
mov
mov
loope
in
js
lret
adc
add
adc
push
cli
sbb
mov
mov
pop
lds
mov
dec
js
das
sti
xor
cmp
pop
mov
pop
repz
outsl
jmp
test
dec
sub
add
popf
repz
test
das
pop
or
inc
jp
addr16
sub
int
cmp
hlt
addb
out
stos
je
xchg
daa
pushf
cli
out
cmp
arpl
ret
push
lret
sbb
push
scas
rorb
xorb
out
mov
fdivl
jne
in
jle
cmc
sahf
xchg
mov
cmp
jge
bound
adc
inc
jb
call
or
movsl
jb
repz
int
test
mov
fcmovu
dec
hlt
or
or
mov
jb
sbb
mov
fcomi
jae
mov
popa
les
xor
push
jl
sbb
loop
add
ds
inc
popa
fwait
mov
sahf
jnp
push
inc
clc
pop
mov
xlat
push
mov
cmp
inc
js
fwait
mov
js
jbe
imul
mov
push
pop
adcb
cwtl
cmp
stos
jb
icebp
jnp
adc
pop
scas
jl
dec
sbb
sub
or
cs
iret
popf
sbb
xor
cmp
mov
negb
xor
cmpsl
push
mov
cwtl
loope
testl
loop
inc
aas
test
jno
sti
outsb
in
jmp
iret
xchg
lahf
mov
jle
cmp
dec
mov
lods
dec
pop
data16
cwtl
arpl
mov
or
inc
add
ret
mov
pop
mov
or
push
adc
clc
je
bound
sub
cld
push
aad
add
jg
div
into
sub
outsl
push
andl
mov
bnd
ljmp
addr16
rcll
iret
imul
sbbl
add
pop
jmp
push
movsl
jnp
outsl
push
sbb
shll
inc
hlt
shll
outsb
xor
mov
outsb
xchg
cltd
add
add
shlb
xorb
popf
jle
lds
sbb
repz
jge
add
fdivs
and
ja
dec
cmp
sub
mov
nop
aaa
cwtl
xchg
loope
ss
ret
jne
cmp
divl
in
adc
punpckhwd
aam
gs
shll
add
addl
icebp
es
sbb
int
and
into
push
dec
outsb
mov
xchg
and
adc
pushf
ss
gs
dec
inc
and
inc
adc
pop
cmc
fbstp
inc
sarl
xor
sub
pushf
jne
sub
cmp
push
xchg
loopne
in
mov
call
jae,pn
iret
add
pushl
adc
std
shr
fucomip
add
inc
mov
jns
and
les
int3
pop
or
xchg
lret
fldcw
mov
dec
cld
adc
scas
adc
lea
sarl
repnz
sbb
push
dec
cmpl
mov
add
data16
mov
out
cmc
mov
xchg
and
mov
push
xor
mov
fwait
cmpl
cmp
lods
pop
pop
jb
shrl
and
mov
cmp
or
jecxz
test
cmpsb
lea
lods
adcl
sbb
and
add
add
pop
shlb
and
add
leave
mov
mov
pop
call
inc
outsl
cs
add
negl
cli
or
repz
sub
ss
dec
dec
pop
jbe
add
xchg
nop
xchg
loop
and
jp
add
or
test
jo
std
jmp
xchg
xchg
fisubl
les
pop
push
fdivs
and
int3
outsb
aaa
inc
call
inc
fisttps
loopne
mov
or
sub
ficomps
sub
rclb
pop
mov
pop
rol
sub
adc
pop
push
xchg
rolb
mov
dec
pop
jae
bound
push
js
sahf
call
ret
jmp
ficomps
rcrl
repnz
inc
pop
adc
dec
outsb
mov
mov
aam
fcmovnu
js
and
cmp
inc
sbb
mov
adc
inc
outsb
pop
cmpsl
popf
repnz
push
push
lret
xchg
scas
inc
inc
dec
mov
add
lock
mov
mov
mov
jg
and
xchg
and
loop
fs
fwait
cmp
and
sbb
inc
lahf
push
ljmp
fists
adc
mov
insl
in
mov
stos
aad
cmovge
jnp
mov
mov
push
mov
sub
pop
or
dec
out
pop
jo
daa
or
add
dec
pop
loope
scas
in
dec
mov
xchg
das
sub
outsb
popf
fistl
punpckhwd
jmp
sub
jnp
fwait
sub
hlt
lea
lock
daa
jg
pusha
test
imul
cs
addr16
fcomip
lods
repnz
aam
fs
popa
icebp
fdivs
test
inc
push
inc
mov
movsb
or
in
out
scas
std
pushf
sbb
jp
sar
inc
mov
xchg
mov
mov
mov
flds
xor
adc
mov
rcrl
sbb
pop
fidivrl
out
cmp
push
jne
ret
adc
lret
push
push
mov
xchg
lods
add
fs
in
movsl
in
lds
mov
fsubs
jb
fsubr
out
call
mov
cmp
sarb
mov
fs
mov
loopne
sub
rorb
xchg
sbb
dec
lods
test
icebp
adc
cltd
adc
mov
cli
or
sbb
mov
dec
jns
loopne
pop
fiaddl
xor
push
push
jo
aam
sbb
sbbl
push
and
push
stos
dec
pop
icebp
shr
lahf
cmp
jl
addr16
std
cmc
and
mov
adc
mov
stos
dec
pop
sub
sub
dec
fadds
or
les
insb
test
inc
push
cmp
leave
pop
xchg
iret
pop
add
fmull
push
dec
cmpsb
xor
ds
xor
lea
xchg
sbb
xchg
push
test
pop
jg
xchg
cmpsb
repnz
fsubrs
icebp
push
jp
filds
ss
icebp
sbb
cmp
pcmpgtw
ja
or
lahf
loop
es
mov
sbb
popf
xchg
sbb
cltd
and
fisubrs
cs
adc
and
mulb
rcl
mov
ss
pop
add
cmpsl
aaa
sbb
cmp
or
in
pop
or
test
mov
sarl
mov
int3
test
or
je
and
adc
jbe
incb
int
out
stc
test
pop
push
cmc
inc
ds
sbb
adc
dec
stc
mov
push
mov
push
lock
push
inc
push
inc
rorb
cmp
sub
adc
mov
pop
std
xor
imul
mov
push
es
std
int3
push
outsl
inc
cmp
fwait
aad
lods
fisubl
out
jb
incl
push
aaa
pop
movsl
divl
fs
pop
movsl
fdivrp
mov
fs
and
call
add
call
inc
adc
roll
imul
sub
hlt
test
sbb
je
mov
cmp
ja
push
mov
mov
in
arpl
or
mov
sbb
dec
xchg
out
jns
data16
into
add
stos
mov
dec
xchg
sahf
add
sbb
jo
repz
push
or
aad
stos
dec
mov
fisubrs
pop
je
pop
push
pushf
clc
mov
pop
dec
xor
sbb
jle
push
sub
push
dec
mov
push
and
bts
mov
sbb
insb
pop
es
ja
in
lret
pop
mov
test
cmc
add
xor
notl
mov
jnp
out
push
hlt
test
das
ror
xchg
mov
out
sbb
call
push
xor
mov
andl
incl
xor
cli
cmp
pop
ret
push
and
cmp
ror
jnp
les
jl
sahf
inc
add
mov
add
mov
in
imul
in
ficoms
jg
fistps
xchg
in
cmp
cld
dec
xchg
xor
dec
xchg
out
rorl
or
lar
aaa
outsb
stos
jmp
rep
sbb
incl
push
outsl
aam
inc
cmp
adc
scas
mov
call
sub
and
add
cmpsb
aam
test
into
jecxz
mov
fisttpl
push
sbb
xor
inc
inc
lds
sti
xchg
bound
mov
push
lods
lahf
inc
add
inc
lds
not
or
cmp
jl
pop
mov
loope
pop
lea
jb
xchg
add
arpl
push
jge
adc
pop
xchg
cmpsl
roll
xchg
push
cmp
push
adc
stos
mov
jo
pop
popf
inc
mov
and
push
test
inc
pop
mov
lea
orl
ret
xchg
insl
outsl
mov
push
ljmp
mov
gs
mov
cwtl
mov
dec
xchg
les
push
std
outsb
in
jl
xchg
mov
ljmp
mov
jne
add
jmp
cmp
mov
sarb
xor
xchg
dec
out
rcll
out
mov
lret
cmpsb
mov
xchg
rorb
pop
sbb
dec
cmp
movsb
cli
push
xorb
lds
es
js
jne
cmpsl
lock
iret
cltd
mov
or
inc
dec
out
jo
movsb
push
adc
jl
jl
iret
rcr
push
pop
mov
insb
outsb
fldl
leave
mov
jle
test
push
faddl
rcrl
das
mov
mov
inc
push
or
loope
in
lea
lock
sbb
loop
push
sub
mov
xchg
in
ljmp
fistpl
ja
ret
fidivl
ret
adc
push
sahf
je
sub
xchg
sbb
loope
int3
jg
adc
dec
pop
and
pop
addr16
int3
pop
add
lahf
popa
jo
fwait
clc
sub
mov
stos
iret
mov
push
out
or
jl
inc
mov
nop
pop
les
dec
ret
call
stc
inc
adcl
inc
inc
sarb
int3
in
adc
fsubr
into
dec
aad
lds
inc
cs
cmpb
sub
dec
int
push
xchg
sbb
int3
mov
jp
jno
mov
in
cmpl
push
adc
es
xor
out
fs
cwtl
add
lret
and
and
leave
sub
xchg
xchg
aaa
scas
and
cmp
add
xor
xchg
sbb
cs
add
mov
leave
pop
dec
mov
mov
sbb
movsb
jl
jae
add
push
and
jmp
stc
stc
ds
dec
fadd
add
out
stos
lahf
sub
lcall
mov
mov
add
inc
dec
adc
xlat
shl
cmpsl
pop
push
xchg
cwtl
leave
jge
sub
ret
pop
or
push
mov
aas
icebp
xor
aaa
mov
gs
push
xchg
cmp
fsubr
jnp
push
or
lret
int
sbb
data16
dec
call
and
xlat
fldcw
mov
cltd
dec
out
xorb
popa
add
jnp
jl
mov
fsts
test
or
out
imul
aad
sub
idiv
xchg
mov
dec
lds
push
test
lret
push
hlt
cs
inc
fisttps
and
sbb
mov
scas
cmp
hlt
cmp
xchg
sub
fs
mov
push
divl
out
iret
push
pop
or
pop
sub
xchg
pop
mov
add
jg
test
insl
cmpsb
and
mov
negl
mov
sbb
mov
imul
loope
std
sahf
add
out
mov
push
sub
sbb
cmp
mov
out
mov
add
pop
dec
mov
jns
cli
xor
test
adc
call
xchg
jo
add
pop
sbb
dec
repnz
pop
bound
ret
sub
pusha
shll
aad
nop
mov
adc
pop
scas
mov
fistpll
negl
sbbb
mov
and
mov
call
mov
cli
mov
cmp
dec
stos
adc
inc
xchg
outsb
js
not
push
push
dec
icebp
lods
sbb
cwtl
mov
test
cmp
jle
sbb
xchg
push
jo
pop
sbb
lods
jo
fnstcw
push
sbb
in
aaa
outsl
cs
aad
mov
in
or
fldl
sbb
mov
sti
adc
mov
in
andb
jg
jne
push
pusha
cmpsb
cmp
dec
sub
and
and
dec
dec
push
xchg
push
aam
xor
add
and
popf
mov
pop
je
jl
fisubrl
les
imul
pop
mov
sti
dec
or
pop
jne
pop
dec
dec
and
leave
jne
insb
sbb
pop
push
repz
lea
cld
mov
ds
shl
xchg
lret
jae
js
and
iret
xor
shrl
pusha
sbb
jb
ja
jnp
xchg
lahf
inc
sub
and
repnz
movsl
aam
adc
jl
testl
cmpb
ret
adc
dec
sub
pop
dec
push
push
cmp
pop
cmp
and
pop
das
dec
jae
sti
daa
lahf
movsb
or
test
ret
in
lods
out
jle
stos
stc
test
mov
stos
pop
pop
sbb
ja
imul
out
jp
jns
decl
adc
dec
jno
adc
ror
shlb
loopne
jp
pop
scas
aad
mov
jmp
cmp
enter
pop
inc
sbb
adc
lret
cmpsb
sub
cmp
cmpsl
push
push
push
jmp
lcall
mov
out
cld
push
mov
fwait
rcrb
arpl
dec
mov
clc
jg
fnstcw
imul
jl
daa
inc
sbb
std
out
adc
dec
sbb
mov
iret
insb
inc
test
dec
xchg
ret
xchg
xor
aad
clc
cmp
int3
add
xor
mov
lret
dec
jmp
xchg
std
je
inc
bound
ljmp
imul
pop
jb
pushf
xor
and
dec
test
mov
fidivrl
add
test
imul
cld
mov
dec
ficomps
aaa
ror
pop
outsl
addl
xchg
stos
xchg
leave
add
lahf
test
aam
jno
loop
push
shll
pextrw
jnp
jae
cli
push
lcall
adc
insb
repnz
mov
fisubl
cltd
dec
stc
mov
ljmp
out
mov
daa
sahf
fwait
rcrb
pop
out
ret
enter
xchg
dec
lods
outsl
int3
jmp
ret
repz
ja
dec
mov
mov
cs
popa
and
das
pop
shlb
fwait
mov
loopne
jbe
push
and
mov
mov
jge
pop
nop
pop
and
mov
push
loop
js
pop
pop
sti
jnp
stc
iret
cmp
push
mov
loop
push
adc
bnd
je
pop
push
js
fsubrl
push
pshufw
xchg
xor
cmp
icebp
icebp
repz
xchg
push
xor
xor
jg
loope
shrb
or
ljmp
mov
and
sbb
gs
pop
sub
xor
bound
ljmp
jge
loope
jno
insl
rorb
ja
clc
and
fadds
and
cmpsl
es
fcompl
popa
jle
ja
mov
das
aas
stc
xor
out
iret
xchg
xor
or
call
lahf
inc
imul
jno
shll
sub
scas
popf
mov
inc
push
aas
gs
mov
cmp
xor
imul
jle
sub
movl
cli
js
or
icebp
mov
repnz
inc
pop
mov
mov
xor
jl
inc
adcw
jb
jle
out
sub
lds
mov
jns
inc
pop
add
lcall
mov
jne
jmp
inc
adcb
and
dec
js
aad
push
gs
out
mov
subb
pop
fnsave
repnz
push
mov
xchg
pop
inc
push
jne
sub
and
lods
in
mov
test
jg
imul
bnd
sbb
xor
fs
sub
enter
jle
and
outsl
loopne
push
pop
enter
js,pn
push
out
roll
adc
ret
icebp
insl
lcall
ds
pop
cwtl
dec
mov
std
xorl
sbb
icebp
xchg
lret
filds
in
xor
rep
mov
fisubl
shl
dec
dec
xchg
loope
das
ss
shlb
pop
inc
test
pop
rcrl
mov
jg
pop
lcall
pop
cmp
dec
inc
push
shrb
pop
inc
inc
repz
stos
mov
push
out
mov
mov
repz
add
xor
mov
aas
shlb
arpl
or
cmpsb
cs
jae
shrl
js
stc
int
cmpsb
jns
out
and
mov
fs
sbb
mov
out
sub
stos
mov
push
or
insl
dec
mov
push
ds
push
pop
gs
mov
call
sub
lods
lret
mov
mov
test
mov
add
mov
add
lcall
sub
ficompl
dec
icebp
add
pop
js
fldcw
add
adc
sarb
push
adc
xchg
jle
pop
sbb
int
les
sbb
inc
jb
lahf
adc
mov
add
pop
nop
xlat
fwait
out
fnstsw
push
stc
imul
cli
and
or
pop
mov
xchg
mov
pop
aad
pop
xchg
iret
push
sub
faddp
cmp
inc
lock
or
sti
int
and
fwait
lods
out
mov
sarl
fwait
les
xor
into
iret
push
lcall
mov
loop
das
push
push
fs
insb
ja
pop
leave
xor
xchg
xchg
dec
cmp
pusha
test
in
addr16
int3
fdivp
xchg
sti
or
arpl
pop
sub
aad
pop
js
adc
or
loop
inc
aas
aad
jo
ret
les
aas
mov
in
mov
stos
push
sahf
add
pop
mov
lcall
jecxz
adcb
int3
jl
aam
fstpl
fisubrl
adc
cmpsl
mov
cmp
sbb
test
cs
inc
xor
not
dec
addl
pop
sub
mov
jg
negb
shrb
adc
sub
or
pop
ffreep
pushf
rcrb
mov
jge
scas
xor
add
lds
mov
std
dec
inc
pop
push
sub
cmp
out
inc
mov
or
test
or
scas
addl
xor
cmp
adc
inc
icebp
cld
push
adc
add
lods
int3
int
adc
add
jae
sbb
repnz
mov
ds
fsts
lea
popa
lods
sbb
push
push
jnp
dec
in
jge
daa
dec
inc
add
popf
ja
loopne
out
mov
pop
xchg
hlt
cmp
xchg
sbb
clc
or
push
mov
push
mov
shlb
push
aas
rcrb
dec
mov
pop
jo
and
cmpsb
js
xor
fmuls
add
fbstp
testl
adc
sbb
sub
mov
xchg
mov
xchg
movsl
lods
inc
fsubrs
shlb
adc
call
int3
inc
mov
jbe
pushf
mov
inc
outsb
call
in
sub
push
mov
cld
int3
ljmp
outsb
push
adc
jo
jg
bound
cwtl
push
int
push
xlat
lret
adc
jb
lret
outsb
enter
out
shld
jle
xchg
daa
push
lods
xor
dec
pop
mov
outsl
or
movl
sub
std
loopne
arpl
ss
cmp
pop
sbb
inc
iret
mov
push
pusha
cwtl
lret
cltd
push
dec
sbb
sbb
in
add
popf
in
mov
cmc
loopne
in
das
sub
hlt
cmp
sbb
mov
cltd
push
jno
fwait
jb
cmc
mov
push
pop
lea
push
std
xchg
movl
jg
lods
out
cmp
ds
sti
adc
outsl
cmp
inc
inc
adc
push
fwait
lds
push
pop
xor
pop
mov
xchg
iret
sub
aam
jge
loopne
scas
and
lret
aaa
mov
cs
sbb
sbb
std
cmpsl
daa
lods
pushf
mov
cmp
fildll
push
mov
je
pop
lods
dec
gs
adc
leave
add
es
add
ror
cmp
in
cmp
dec
std
sbb
stos
mov
je
cli
pop
ret
ljmp
lret
mov
ljmp
stos
lods
and
mov
mov
test
sub
dec
fs
xchg
pop
orb
mov
movsb
jge
leave
pushf
jg
sbb
add
mov
jae
cltd
mov
repz
sub
lock
adc
gs
mov
xchg
mov
xor
int
ss
enter
lock
adc
cmp
outsl
mov
pop
xchg
imul
inc
out
pop
mov
sahf
cwtd
sub
cmpsb
popa
pop
pushf
xor
sbb
add
cwtl
push
push
mov
ljmp
or
pusha
and
dec
pop
pop
sahf
fwait
in
fbstp
xchg
inc
cmp
pushf
rorl
adc
push
xchg
ficompl
jge
fwait
mov
imull
scas
rcrb
push
add
cltd
ret
popa
pop
sbb
or
clc
mov
cmc
or
mov
dec
test
ret
lock
sti
je
ja
addb
push
scas
subb
mov
std
test
lods
mov
sbbb
popf
out
lock
loopne
ds
es
inc
push
push
add
push
shlb
test
inc
cltd
cmp
xlat
pop
xchg
add
mov
arpl
push
cmp
int3
popa
jmp
push
call
xchg
mov
xor
call
mov
and
mov
xchg
mov
mov
dec
inc
stc
sub
bound
hlt
pop
rcrl
mov
out
jg
popf
sbb
sub
clc
add
jno
pop
inc
xor
mov
push
mov
jle
and
dec
jmp
mov
pusha
xchg
sub
andb
imul
daa
jne
mov
fiadds
sbb
dec
fldenv
mov
dec
cwtl
lds
cmp
cmp
push
je
xchg
movsb
sahf
mov
xchg
rolb
out
cmp
mov
mov
testl
sub
dec
inc
fstps
das
in
sbb
and
ret
outsb
push
inc
dec
push
adc
cltd
cmpsb
arpl
mov
cli
jb
test
pop
je
bound
loope
stos
dec
fistpll
cmp
mov
out
enter
dec
mov
mov
pop
and
sbb
in
jns
in
int
push
in
sbb
imul
pop
adc
addr16
adc
in
fstpl
push
fsub
mov
dec
daa
repnz
push
xor
inc
jbe
jnp
ss
sub
mov
xchg
inc
int
clc
xchg
or
cmp
inc
fidivl
sbb
dec
in
xchg
fistps
ds
inc
hlt
sbb
push
xor
mov
dec
mov
inc
lods
mov
repnz
imul
push
dec
int
movsl
lods
add
popf
mov
popf
adc
sbb
add
adc
cmp
add
or
fistpl
lret
jnp
jns
xor
jl
nop
fiaddl
je
and
test
in
push
or
jae
sbb
in
test
and
or
push
stc
cwtl
pop
sbb
or
enter
callw
sarb
popl
xor
cmpps
cmp
repz
add
insb
xlat
add
lahf
sub
scas
and
call
into
sub
arpl
rcr
in
jno
push
ss
mov
insl
std
rolb
jmp
je
xor
push
pop
popl
push
mov
scas
mov
jns
sbb
into
sti
stc
aas
out
ret
imul
dec
jne
icebp
sbbl
and
fbld
in
push
je
and
aam
shrd
or
sti
sbb
xor
xchg
aaa
loop
lods
sub
push
aas
es
jmp
pop
xchg
push
mov
mov
negb
inc
mov
xchg
nop
in
adc
inc
jnp
cmp
add
sbb
jae
dec
add
fwait
sbb
lods
mov
xor
repnz
or
out
arpl
pusha
cmp
add
popf
loop
mov
or
mov
cmp
fcoml
sarb
dec
pop
adc
test
cwtl
hlt
dec
test
outsb
div
inc
push
jns
mov
lods
dec
cs
push
push
mov
push
sub
fsubrl
imul
out
sub
pop
sbb
jbe
movsb
cmpsl
adc
jns
and
mov
push
mov
xor
jecxz
pop
and
dec
dec
lret
push
mov
cltd
loope
out
xchg
cmp
push
mov
sub
xor
pusha
addr16
stos
sub
lods
xchg
adcl
and
push
fisubl
jecxz
add
mov
aad
nop
sbbl
outsb
in
test
xchg
xchg
test
mov
inc
push
testb
pop
add
fstpl
movb
pop
lahf
cld
cmp
mov
cli
push
adc
or
lret
outsl
leave
mov
add
xchg
or
dec
mov
cmp
push
scas
ja
fisttpl
icebp
outsl
or
ss
pop
and
test
add
pmulhuw
in
int
jp
fwait
sti
pop
jns
dec
int3
xchg
dec
js,pn
in
jp
sbb
mov
and
lods
xchg
subb
rol
aam
daa
lret
inc
mov
nop
adc
xchg
mov
fildl
sbb
or
mov
cmpsl
shll
mov
orb
jmp
inc
pop
mov
lahf
mov
inc
pop
mov
jnp
js
mov
pushf
adc
push
fcoml
push
js
notb
xor
inc
push
or
pop
je
lds
out
lcall
stc
cmpsl
jl
rcrb
cwtl
aad
insl
lods
je
dec
in
dec
bound
les
push
push
jne
cltd
dec
sub
sbb
adc
movsb
cmpsb
push
xchg
loop
pop
das
mov
or
jecxz
inc
mov
and
insb
xchg
stc
mov
xor
mov
inc
hlt
jp
jecxz
pop
repz
sub
cmpsb
lcall
pop
mov
outsb
adc
jg
mov
mov
sub
lret
mov
cmpsl
xchg
mov
xchg
and
aaa
pop
insl
jo
add
stc
push
in
jo
xor
lods
stos
movsl
mov
ss
xor
data16
jle
xchg
aaa
sbb
and
aad
ret
xor
in
push
je
out
jg
cmpsb
mov
dec
mov
pop
arpl
jo
mov
mov
sub
sub
repz
into
inc
mov
mov
dec
ss
mov
stos
cwtl
or
iret
pop
int
hlt
sub
fdivl
pop
call
subb
push
gs
dec
insl
fstpt
xlat
adc
pushf
push
sbb
cmp
idiv
push
push
aaa
inc
push
add
inc
push
xchg
incb
lods
xor
out
fcoms
mov
testl
cmp
daa
fbstp
loopw
iret
ljmp
pop
jmp
mov
ljmp
push
add
cmp
mov
inc
xor
outsl
enter
outsb
jne
rcll
jb
test
inc
out
sub
je
outsb
stc
shrb
or
and
stc
or
sub
cmp
punpckhwd
dec
and
sub
add
cmp
cmp
jl
dec
sbb
sub
xor
inc
jle
call
cmpl
jae
das
cli
pop
repz
sub
sarl
sbb
inc
movsl
jge
mov
insl
out
xchg
lret
jl
into
stos
int3
mov
sbbl
dec
push
jle
into
js
andb
scas
dec
test
jbe
and
dec
lret
jae
mov
mov
mov
dec
out
mov
or
mov
inc
mov
sub
cld
push
sbb
fiadds
jae
pop
into
sub
cmpsb
addb
jae
lcall
das
push
inc
sahf
je
test
xchg
sub
jmp
dec
es
lods
fmuls
cmpsb
std
jl
cmpsb
xor
insb
mov
cli
loopne
adc
stc
mov
pop
mov
fldenv
cmc
push
insl
push
xor
sahf
scas
cmc
xor
in
xor
add
adc
insb
sub
shlb
imulb
arpl
mov
shl
sub
sti
jmp
addb
adc
push
jo
sub
or
aas
idiv
sbb
add
pop
xchg
insl
cmp
data16
xor
fnstsw
push
fmul
inc
int3
xchg
jns
sahf
push
jb
scas
xlat
popa
int3
test
xor
push
addl
andl
fisubrs
roll
into
stos
cltd
xchg
lods
push
cmp
add
shr
mov
pop
mov
sti
ss
adc
fdivr
push
push
cmp
leave
and
xchg
mov
and
adc
mov
jbe
jne
jbe
lahf
in
mov
dec
lahf
and
leave
stc
dec
fsubr
add
sub
mov
sub
mov
cmc
das
bound
jns
cmpsl
in
sbb
mov
inc
mov
sbb
and
mov
test
mov
sub
out
dec
inc
sub
add
out
rol
sbb
xlat
cmp
hlt
xchg
fwait
sub
je
je
mov
xor
scas
cld
loope
jecxz
mov
xor
es
adc
sub
dec
dec
ljmp
scas
mov
mov
imul
jns
stos
jnp
pusha
sbb
fcom
fsubs
mov
dec
sbb
fsubs
dec
xchg
cwtl
roll
scas
mov
jge
xchg
mov
outsl
pop
dec
pushf
jle
lods
fcom
mov
and
popf
fstl
or
xor
and
mov
movsl
inc
cmc
dec
pushf
mov
iret
xchg
push
and
jmp
mov
lcall
mov
mov
sub
cmp
mov
ret
jmp
adc
aam
test
in
in
push
mov
mov
in
jne
dec
mov
dec
xor
pop
push
enter
shll
dec
or
inc
jecxz
push
pusha
popa
fdivrl
adc
pop
xchg
in
jno
lock
repz
in
jl
push
inc
jmp
xchg
adc
mov
mov
mov
xlat
xchg
out
test
das
lds
lods
pop
inc
ds
pushf
sarb
cli
dec
and
or
mov
sbb
and
enter
adc
nop
repz
dec
adc
shrl
pop
xor
std
insb
xor
cwtl
inc
loope
repz
rolb
jnp
or
lods
lret
xchg
mov
push
dec
cmp
stos
push
fmul
push
out
mov
fs
dec
fadd
std
outsl
push
test
movsb
mov
lods
ds
fistps
loope
pop
loop
mov
or
subb
cltd
mov
mov
cmp
xor
pop
insb
add
mov
test
enter
cld
shl
in
push
cld
adc
jns
ss
fs
jb
nop
cmp
or
sub
inc
or
push
mov
pushf
dec
scas
in
movsl
mov
ds
pop
pop
jge
or
inc
fistl
xor
mov
jecxz
sub
scas
jg
jle
or
das
dec
xchg
cltd
dec
int
xlat
das
inc
lds
add
imul
lock
xor
call
jb
out
or
movl
int3
vplzcntd
mov
push
dec
dec
jp
pop
dec
mov
imul
mov
mov
sbb
loopne
mov
pop
iret
push
shr
jo
fsubrs
pop
mov
and
shll
outsb
xchg
push
mov
ja
fimuls
or
and
push
fistps
shrl
inc
jmp
icebp
jne
bound
stos
sbb
push
data16
idivl
mov
cmc
es
incb
push
das
cwtl
in
dec
push
sbb
inc
loop
test
jge
data16
mov
sbbl
jmp
je
cmpb
mov
dec
jecxz
jmp
inc
stc
test
jecxz
and
sti
int
cli
cli
int3
in
ljmp
cmpsb
cmove
enter
mov
jmp
and
adc
clc
mov
push
in
mov
mov
sbb
addb
lock
mov
sbb
or
xor
je
jb
xchg
aaa
mov
inc
fwait
sbb
orb
inc
xchg
push
pop
lods
add
inc
pusha
push
jl
inc
adc
cmp
sarb
or
ja
shrb
hlt
add
ljmp
xchg
jp
out
js
pusha
movsb
test
sbb
dec
ja
popa
cmp
ja,pt
add
jmp
push
push
movsb
hlt
cmc
aam
adc
shrl
pop
dec
aaa
or
shlb
in
adc
xor
daa
and
push
lds
xchg
and
mov
mov
or
push
aad
pop
mov
or
inc
mov
jmp
rclb
mov
pushaw
push
xlat
jno
inc
and
xchg
xchg
cmp
cmp
rorl
sub
jo
adc
dec
jne
lock
cmp
sbb
dec
inc
xor
out
or
leave
xchg
dec
aaa
or
lods
mov
jl
sub
js
push
sub
pop
je
ds
or
add
sbbb
fisttps
aas
cmpsb
test
roll
pop
iret
cmp
dec
mov
mov
cmc
mov
mov
sbb
pop
or
push
xchg
xchg
in
mov
sti
mov
sbb
jne
inc
inc
stos
int
lret
sbb
push
sbb
push
pusha
xor
push
js
xchg
addl
push
lods
loopne
sbb
pushf
outsb
ja
test
add
add
pop
imul
pusha
jae
out
adc
mov
mov
jae
mov
sti
loop
xlat
rcll
icebp
stos
loop
ljmp
aam
jae
push
jne
test
int
int3
add
jne
lahf
rclb
push
cltd
or
mov
cld
iret
jns
lea
jp
and
mov
shll
pushf
rcl
jo
xchg
movsb
mov
insb
adc
fdivrl
sbb
xlat
push
or
dec
popf
cs
btc
nop
mov
lret
push
cmp
jmp
stos
xchg
dec
iret
cmp
xchg
xchg
xchg
nop
lret
std
dec
cmp
pop
in
dec
aaa
scas
test
adc
in
rolb
mov
and
pop
xor
mov
jae
call
test
sub
adc
ret
mov
ret
in
cmpsb
fisttpl
loope
xchg
xorb
xchg
push
dec
fsts
adc
shlb
xchg
pop
dec
jle
jo
sub
pop
xchg
imul
cwtl
sbb
inc
adc
repnz
shlb
stos
push
push
out
pop
mov
insb
push
inc
and
fucomp
test
lods
scas
dec
cld
or
sub
sti
pop
aad
jg
cwtl
mov
pop
lret
and
adc
or
ret
pop
shrb
mov
sbb
xchg
lock
jb
ljmp
jmp
test
and
movsb
pop
lahf
addr16
arpl
jge
aas
sbb
arpl
es
and
lds
xorl
jle
negb
push
lods
mov
cld
push
jns
jne
repz
xchg
rclb
sbbb
lods
jne
pop
or
mov
adc
dec
lock
aad
dec
sub
cmp
dec
mov
mov
lods
cmp
fbstp
out
cwtl
mov
add
popa
dec
lods
xor
jp
jb
je
mov
outsl
call
fdivrl
or
inc
inc
jbe
flds
popf
aaa
xor
movsb
inc
sub
bound
test
sub
ds
pop
adc
add
mov
es
push
push
ljmp
outsb
scas
xchg
fwait
xchg
xchg
sub
adc
aam
xchg
test
ret
stos
dec
sbb
sub
inc
ret
fucom
xchg
mov
cmp
mov
clc
or
imul
fs
push
das
or
sub
fdivs
or
scas
lock
and
jnp
mov
cli
lods
and
call
push
jnp
add
sbb
ljmp
and
mov
test
sbb
sub
cmpsb
insl
mov
pop
xor
lods
sbb
sbb
adc
push
and
int
enter
mov
mov
neg
insb
jl
dec
xor
xchg
clc
mov
daa
pushf
scas
inc
jns
push
pop
cld
loope
mov
xor
push
dec
nop
cs
cmp
data16
add
jge
sbb
sbb
into
cmp
loop
jbe
and
push
adc
push
pop
push
xor
and
aaa
popl
jb
dec
dec
mov
out
sub
scas
lret
pop
or
test
cs
xchg
add
gs
lock
lret
lahf
mov
pop
push
movsb
xchg
mov
and
shll
shrl
inc
std
dec
in
sti
pop
mov
cli
dec
dec
push
jne
dec
mov
fcmovnbe
sahf
mov
popf
data16
fidivrl
add
call
pusha
das
loopne
sarb
and
mov
mov
and
test
xor
sub
rep
aas
adcl
cmp
stc
dec
pushf
push
mov
push
jb
jg
xchg
adc
mov
dec
roll
add
jmp
lret
loopne
sub
mov
cmp
cmp
xchg
adc
cmpsb
xchg
aad
inc
xor
fwait
xor
add
loopne
inc
movsb
xchg
into
push
push
cmp
popf
sbb
addr16
enter
in
andl
repz
out
sbb
push
nopl
pop
jne
sbb
stos
ret
mov
pop
sub
mov
sti
fldcw
popa
out
jg
aas
testl
jnp
push
push
jae
into
dec
fmull
mulb
mov
sarb
fsub
sbb
xchg
pop
mov
js
fcomi
mov
push
dec
sub
cli
adc
mov
les
andl
dec
xor
inc
xchg
jb
mov
fbstp
mov
xor
pop
inc
pop
or
daa
or
adc
mov
dec
xchg
inc
sub
pop
mov
push
push
inc
mov
lcall
push
xor
popa
cmp
mov
ret
fnsave
push
fsubr
jle
xor
push
les
mov
shll
adc
inc
test
mov
leave
push
sahf
lahf
lods
imul
xchg
dec
jns
mov
neg
test
xor
addb
inc
gs
out
mov
or
sub
scas
dec
jno
nop
movsl
arpl
adc
push
gs
pop
pushf
mov
cmp
aam
xchg
adc
fsin
push
addb
movl
adc
sbb
push
xchg
lea
mov
cmpl
dec
sahf
loopne
add
mov
pop
or
pushf
and
mov
fidivrs
cs
xchg
imul
loop
jo
lret
movsl
dec
and
test
dec
sbbb
or
insb
testl
pop
imulb
sub
xchg
test
int
sub
pushf
lds
cltd
cmp
mov
xchg
lcall
sbb
mov
loope
dec
call
add
xor
or
push
nop
repnz
push
ljmp
outsb
sbb
mov
dec
xchg
enter
fimuls
imul
xor
ja
mov
adc
cltd
or
gs
inc
sub
stos
pop
int
das
mov
pusha
mov
fwait
mov
fwait
testb
pop
daa
stc
sbb
cmpl
imulb
dec
and
call
daa
imul
arpl
lcall
in
stc
test
fucomi
leave
test
push
mov
or
cmp
mov
sub
sub
adc
adc
lods
out
cli
dec
jns
sub
adc
jo
mov
gs
cmp
pop
inc
inc
mov
ss
in
mov
mov
pop
and
pop
imul
jecxz
outsb
shll
push
sahf
repnz
jp
out
repnz
mov
das
mov
push
movsl
xor
pusha
mov
jno
add
out
rol
shrl
adc
xor
lea
and
xchg
dec
cmp
scas
cmc
xchg
jmp
xor
addb
es
not
cmp
dec
push
xor
dec
add
pop
test
repz
sub
xchg
rolb
mov
pop
and
xchg
mov
push
jo
mov
dec
ljmp
push
jb
add
sub
sub
call
xchg
out
push
mov
jle
sbb
xor
mov
lcall
and
jle
jb
or
insl
inc
fwait
sbb
pop
dec
repnz
dec
jo
xchg
jbe
push
sbb
arpl
std
sbb
xchg
dec
in
pop
mov
mov
outsl
and
dec
mov
jp
cmp
cltd
cmpsb
xchg
push
add
xchg
scas
dec
adc
inc
adc
or
pop
cs
ret
mov
mov
clc
dec
cmc
shll
ja
icebp
aas
pushf
and
insb
loopne
adc
dec
lret
test
shr
cli
pop
push
pop
mov
fnstsw
add
jg
jge
inc
popf
out
aam
stos
mov
dec
sub
pop
sbb
and
jge
add
xor
sbb
and
scas
mov
mov
or
jo
out
call
sti
cmp
pop
inc
xor
pop
scas
test
dec
je
test
push
aas
lods
xchg
mov
repnz
or
jg
sbb
add
js
fstl
rclb
add
cld
mov
arpl
mov
inc
sbb
stc
lret
rclb
xchg
cmp
enter
mov
fisubrl
aad
dec
add
sub
je
or
xlat
inc
fmuls
jecxz
dec
js
mov
fldt
into
enter
lock
push
dec
mov
mov
daa
or
ljmp
aaa
mov
cs
push
push
lock
sub
int3
in
fldt
adc
mov
out
adc
pop
gs
call
ss
mov
sub
mov
aam
scas
cmc
shrl
pop
jnp
and
xchg
ds
into
dec
frstor
pop
dec
mov
leave
dec
mov
mov
cmp
out
jns
int3
fnstenv
rclb
push
jae
xchg
sahf
insl
pop
repnz
xor
pop
add
jb
xchg
arpl
test
in
outsl
sbb
imul
insl
scas
test
lods
cmp
xor
jg
aaa
int3
push
out
lods
sbb
mov
push
inc
adc
push
das
test
cmc
repz
or
adc
popf
inc
mov
sbb
sub
je
sub
popf
adc
insl
lcall
movsb
push
mov
inc
insl
mov
js
mov
sbb
stos
les
mov
dec
aas
es
sarl
fs
insl
pop
mov
add
bound
lds
jecxz
mov
je
bound
sbb
pop
push
aad
loopne
test
adcb
call
fs
jno
sbbl
pop
sti
xchg
and
sbb
out
dec
push
xor
test
mov
mov
enter
xchg
sbbl
jno
imul
in
cld
fwait
cmpsl
adc
xchg
stos
adc
xchg
adc
in
jp
and
mov
inc
sahf
cld
les
push
adc
and
ja
scas
mov
repnz
mov
xchg
add
inc
and
push
or
or
mov
ds
shlb
loopne
fstl
bound
shrb
jg
mov
mov
stos
sbb
lock
addb
push
sahf
test
mov
cmp
mov
shll
movsb
pop
inc
je
xlat
cmp
shll
inc
outsb
ljmp
xor
and
shll
lods
xchg
push
nop
cwtl
xor
in
arpl
cmp
and
jbe
jle
mov
mov
lea
repz
cmpsb
jb
push
dec
lret
sub
sub
sbb
lods
addr16
xor
mov
jmp
xchg
mov
jmp
jp
stos
aam
push
add
and
xor
or
cmp
adc
mov
lods
mov
mov
xchg
outsb
lret
fst
adc
outsl
mov
cli
aam
add
stos
and
in
dec
enter
dec
icebp
sbb
test
or
mov
jl
or
fdivr
dec
or
adc
xchg
lret
inc
addr16
ss
lea
sbb
mov
xchg
out
mov
rcrb
mov
pop
hlt
mov
les
adc
mov
add
adc
imul
in
cwtl
mov
lahf
xor
lret
in
in
xchg
mov
ret
or
lret
adc
adc
xchg
in
mov
movsb
jge
push
js
push
sbb
dec
xchg
jno
sub
mov
push
mov
jle
aas
or
xor
or
movsl
jl
aaa
jge
test
add
sarl
adc
vmovss
mov
ror
imul
shll
mov
int
mov
jo
xor
or
mov
push
fwait
mov
hlt
push
nop
inc
mov
mov
pop
subl
std
shl
ds
sbb
add
or
xor
pop
and
mov
mov
cmp
mov
pop
lods
cmp
pop
push
push
iret
insb
or
jg
pop
inc
add
cmp
xchg
loopne
ljmp
out
add
addr16
lahf
fistpl
adc
mov
popa
inc
dec
sub
mov
add
xchg
in
subl
rcr
rolb
jns
inc
jg
stos
xor
adc
mov
jmp
subl
adc
mov
mov
sti
movsl
loopne
pop
jmp
pop
test
dec
fildl
inc
pop
sub
out
jle
mov
or
dec
lret
int3
jnp
cmp
xchg
pop
testl
popf
xchg
mov
outsb
incb
mov
daa
push
xchg
hlt
and
cmpl
lcall
mov
adc
into
and
xchg
fsubr
adc
pop
in
jno
loopne
xchg
and
pop
cltd
shr
or
pop
pop
jl
aaa
mov
sbb
add
cltd
push
cwtl
cmpsl
ljmp
in
push
cmpb
sbb
pop
pop
push
xchg
fistpll
roll
or
mov
cmpsl
sbb
fxtract
out
push
jbe
negw
adc
push
xchg
cmp
incl
jnp
test
xchg
inc
pop
add
test
in
adc
push
xchg
push
lods
stc
vfrczsd
push
stos
xchg
jbe
jbe
cmp
cs
lock
add
je
test
fs
shl
cwtl
cmp
jae
cmp
mov
repz
btc
das
push
inc
cmpsl
fildl
inc
popl
fnstenv
mov
popf
adc
aas
subl
jnp
xchg
arpl
mov
std
mov
lahf
cmpsb
scas
sarl
add
stos
enter
imul
cmp
call
aam
rcr
into
xor
or
loope
popa
std
sbb
xchg
xchg
or
js
sub
add
or
mov
ss
jg
out
sarl
xor
in
leave
sub
mov
loop
jns
or
loopne
fnstenv
push
ss
lods
mov
out
lock
das
fists
das
mov
mov
push
nop
jbe
fcoms
pusha
jl
pushf
jno
mov
dec
xlat
fbstp
cmp
dec
pop
arpl
cmp
pushf
repz
or
or
outsb
test
test
jp
or
and
das
ret
out
sbb
sub
xchg
lret
lcall
sbb
xor
adc
lret
leave
and
cmp
pop
jae
cli
cmp
inc
shl
movsl
mov
insl
addr16
xor
fsubl
mov
cmpl
pushf
addr16
outsl
popf
rcrl
add
lret
popa
repnz
mov
insl
outsl
call
popa
repnz
sub
out
jecxz
insb
inc
je
rolb
or
and
je
cmp
mov
fcoms
pop
jecxz
xchg
jmp
insl
mov
ds
cmp
stos
or
out
int
mov
clc
cmpb
jg
mov
cmp
jbe
ds
stos
pop
cmp
fsts
sbb
sub
jmp
ffree
mov
lods
lods
je
xor
pushf
cli
lret
outsb
xchg
pop
scas
fcoml
sahf
lods
mov
dec
mov
adc
inc
pushf
decl
mov
leave
out
xlat
mov
lret
or
sbb
jbe
add
lock
and
mov
ljmp
addr16
popa
dec
das
nop
loope
hlt
xchg
fsubrs
in
jle
inc
lcall
bound
insb
xor
and
rol
shlb
loopne
fprem1
fiadds
sbb
lret
xor
sbb
dec
pop
mov
loop
xor
push
adc
mov
popa
iret
andl
inc
sar
fldz
mov
cmp
mov
bound
outsb
imul
sti
add
fwait
and
mov
js
sbb
sbbl
cmpsb
pop
scas
mov
aas
sub
nop
push
inc
mov
dec
dec
call
shl
rol
fwait
sub
xlat
icebp
cs
cmp
out
cli
popf
jne
test
scas
xor
lods
inc
ja
adc
int
in
and
mov
jns
sbb
cmpsb
das
inc
js
cmpsb
lahf
je
lret
clc
es
adc
fildl
cld
ja
adc
ljmp
push
jbe
icebp
aam
mov
dec
jecxz
cmovp
mov
pop
cld
xchg
fistpl
or
out
lcall
mov
ja
int3
clc
pusha
mov
push
nop
jo
dec
pushf
sbb
lret
loope
jno
add
or
add
in
es
icebp
into
sbb
jno
fdivrl
and
out
mov
cld
cltd
ret
add
test
insl
mov
xchg
bound
and
je
mov
cli
cmpb
jge
scas
xor
or
xor
pop
inc
mov
or
adc
lods
mov
or
hlt
dec
and
std
mov
push
mov
mov
and
iret
jns
jecxz
xor
xchg
into
bound
aad
and
push
jne
mov
push
imul
push
hlt
andl
pop
lds
lods
dec
repnz
fldcw
jb
ret
out
leave
fdivl
into
cmp
adc
shlb
loopne
jge
out
popa
in
sarb
cmpsb
push
pushf
mov
arpl
out
es
mov
shrb
push
cmp
add
or
mov
xlat
aad
xor
inc
mov
xor
aam
mov
adc
lds
lret
out
jno
cmp
fstpl
or
pop
ret
sub
pop
fidivrs
push
adc
movsb
insb
aas
loope
addb
scas
out
decl
and
in
test
add
mov
sub
pop
shl
dec
in
les
or
loope
cs
xchg
dec
cltd
mov
sub
mov
cmp
fwait
andl
pop
cmp
xor
dec
push
mov
mov
xor
add
rorb
cmpsl
lcall
sub
fadds
adcl
xchg
or
pusha
or
imul
push
jecxz
mov
inc
xlat
jae
dec
and
test
js
inc
push
inc
dec
test
fistps
mov
mov
and
xchg
pop
or
out
cmp
and
and
ss
or
or
pop
arpl
ja
xor
outsb
jnp
fucomip
ds
pop
cwtl
movsb
das
adc
divl
pop
movsl
add
fadd
xor
ja
cmpsb
pop
mov
rorl
add
sub
mov
jle
outsl
cmp
outsl
jmp
push
pusha
stos
test
mov
xor
roll
jge
jne
ret
movsl
xor
jno
idivl
lods
icebp
or
inc
sarb
mov
pop
pop
jl
in
inc
cmp
cmp
push
daa
adc
adc
repz
jg
jo
gs
inc
icebp
sarb
repnz
mov
and
jp
pushl
sub
nop
jns
pop
imul
and
bound
jne
xor
sbb
dec
xchg
in
inc
cmc
mov
icebp
lret
aaa
add
test
hlt
and
movsb
pop
mov
imull
mov
and
add
mov
dec
fwait
cmp
mov
in
cmp
sbb
mov
xchg
and
test
aam
inc
push
and
sbb
cmp
aam
mov
mov
gs
ret
inc
cmp
faddp
push
hlt
in
pushf
mov
mov
fwait
popa
loop
mov
push
inc
in
movsl
and
dec
and
or
or
addr16
stos
addr16
pushw
daa
dec
pop
aad
in
outsb
arpl
xorl
pop
jmp
aas
ret
sbb
push
push
jnp
mov
iret
pop
out
inc
mul
push
movsl
mov
fwait
mov
and
in
mov
xchg
addl
ja
popa
orl
inc
je
xor
lock
inc
cmp
bound
sbb
je
shl
imul
int3
mov
addb
mov
push
rcl
shlw
push
adc
jmp
lds
xchg
fildll
add
dec
lret
pop
push
sub
dec
mov
dec
insl
stos
movsl
repnz
dec
imul
pop
enter
lret
neg
mov
int3
inc
push
jg
addr16
daa
pushf
out
add
clc
cs
sahf
jbe
xchg
outsl
push
lock
scas
xchg
out
xchg
mov
mov
mov
jecxz
aas
fimuls
pop
mov
xor
lods
sub
or
and
gs
dec
into
out
addb
add
jnp
lods
repnz
mov
fcoml
jae
aas
jp
cmp
std
das
push
lock
aaa
arpl
lret
pop
daa
sbb
cmove
pop
js
inc
inc
cmp
cmp
fcmovne
dec
push
jg
push
rorl
push
dec
cmp
fcomip
fisubrs
sbb
jo
xlat
in
xor
ret
sub
mov
incl
lgs
sbb
stos
nop
mov
jnp
aas
lods
xchg
xor
xor
loope
pop
jmp
add
loopne
mov
sti
rclb
pop
xor
test
or
mov
and
adc
sbb
pusha
and
cwtl
sarb
adc
ljmp
jle
sub
add
xchg
aas
inc
xor
dec
into
fimuls
sbb
adc
add
js
out
sub
shl
ja
in
or
xchg
lods
in
int
ret
popf
mov
add
xor
cmp
ds
lds
iret
add
and
lcall
mov
mov
mov
in
int3
into
sub
arpl
test
in
std
and
insb
popa
in
in
addl
add
pop
mov
inc
fidivrl
adc
push
addr16
mov
movsb
dec
lret
mov
loopne
inc
std
jmp
add
push
mov
cltd
xor
push
fcmove
int3
das
jae
rclb
xor
lock
into
mov
in
std
mov
rorl
mov
dec
icebp
adc
jo
jle
push
fisttpl
or
xchg
jmp
sub
into
xchg
mov
insl
imul
aam
and
xchg
jo
or
fidivl
and
and
loopne
stos
mov
sti
outsl
cmp
lcall
pop
popf
inc
mov
adc
push
sub
pop
xchg
fwait
adc
mov
das
in
jo
mov
addr16
push
fisubs
int
sbb
scas
das
nop
cld
xchg
stos
push
cmp
adc
mov
or
push
cmp
jne
pop
add
push
or
in
rcll
lcall
ja
outsb
scas
call
mov
dec
lods
insb
or
fsubrl
adc
cmpsb
cltd
mov
inc
lahf
sbb
cmp
movsl
xchg
mov
sbb
gs
pop
in
movsl
enter
popf
lea
mov
cmp
rcll
ss
shl
rorb
mov
xor
test
imul
pop
int3
repz
xchg
lock
js
ja
jne
push
sub
xchg
mov
insl
mov
out
lahf
inc
xchg
cmp
movsb
imul
and
fildll
call
and
push
and
cltd
and
cmp
xchg
add
ret
dec
or
push
adc
fmull
mov
xchg
ss
sub
stos
call
ret
aam
in
icebp
lds
mov
inc
lcall
add
scas
inc
mov
js
iret
add
ret
add
mov
test
or
clc
mov
leave
push
cmpsl
nop
mov
inc
push
dec
mov
ret
mov
es
inc
daa
and
testl
mov
xchg
sar
push
lea
in
cmpsl
push
jge
cmp
call
xorb
addr16
pop
dec
adc
stos
cmp
jp
stc
ret
int3
xor
ljmp
mov
mov
cmpsb
add
dec
stc
cs
lods
sahf
cmp
ds
push
cmp
mov
pushf
pop
sbb
inc
sub
sub
mov
sub
stos
into
cmpsl
sub
xchg
orl
bound
ds
cmc
xchg
mov
test
mov
push
pop
mov
push
xor
outsb
pop
movsl
xchg
in
ljmp
fcomps
in
lock
xchg
out
dec
popa
add
jne
icebp
jnp
bound
dec
dec
push
pop
mov
ret
sbb
xlat
xchg
xchg
mov
mov
mov
shrl
mov
jl
dec
pusha
in
idiv
insl
jae
mov
xchg
ret
addb
ds
mov
mov
mov
outsl
xchg
ficoms
pop
dec
incl
stc
and
rorb
test
sbb
test
and
push
movsl
mov
inc
ss
push
leave
inc
fnstenv
arpl
sbb
inc
cwtl
aad
push
jmp
pop
test
loope
pop
cs
jmp
jo
repz
push
bound
int3
adc
dec
push
cmp
xchg
sbb
and
mov
cmp
lods
adc
push
inc
xchg
pop
add
cmp
int3
lea
decl
pavgw
imul
sbb
sahf
roll
mov
push
addr16
jne
mov
inc
sub
ret
push
add
fdivr
dec
cs
mov
xor
addb
test
pop
jle
mov
mov
lock
in
out
pop
sbb
dec
leave
jne
jmp
mov
lcall
sbb
sbb
aas
cld
sbb
pop
lahf
jb
lods
std
jmp
xor
mov
mov
sahf
lcall
call
ja
int3
cmc
pop
ret
cmpsl
xor
cmp
pop
sub
mov
imul
adc
or
adc
sbb
sub
stos
arpl
sarl
pop
xor
or
test
imul
stos
mov
sbb
stos
test
loope
xchg
mov
pusha
lds
addr16
faddp
popf
xlat
icebp
mov
int3
in
bnd
fwait
sbb
adc
push
test
sub
add
stc
add
xchg
cmp
inc
leave
ret
outsb
scas
das
and
add
stos
or
pushf
shll
fs
cmp
shlb
jns
cmp
ds
nop
adc
aam
add
mov
adc
les
xor
cld
mov
nop
push
sbbl
ret
dec
jg
decb
cmpsb
and
add
loope
pop
xchg
aam
or
pop
and
cmp
xchg
in
cmp
frstor
xchg
pop
outsb
sub
adc
mov
mov
int3
push
sub
lea
pop
pusha
xchg
arpl
aaa
inc
sbb
aas
lret
mov
cltd
xor
leave
pop
shlb
sahf
lock
js
mov
lahf
in
cmp
sbb
js
fistpl
jmp
and
fstpl
cmp
cmp
hlt
pop
rolb
into
pop
mov
lahf
std
addr16
mov
mov
in
pusha
mov
sub
xor
push
cltd
icebp
push
adc
test
daa
call
jno
or
sbb
xor
xchg
mull
xor
mov
sarb
dec
lret
stc
mov
dec
xlat
jl
mov
lds
sub
push
push
lcall
push
decl
mov
loop
arpl
xlat
sbb
push
pop
jns
ljmp
sub
popa
lock
push
push
mov
cmp
dec
sub
subb
ffreep
inc
movq
or
push
add
sbbl
xchg
pop
inc
cmp
rcrb
mov
or
add
and
pop
sar
ja
push
notl
lea
adcl
hlt
cmp
inc
jl
mov
cmp
ljmp
test
cld
xor
add
push
into
loope
cmp
mov
mov
push
or
out
sub
sarl
pop
cmp
mov
lock
mov
les
ljmp
pop
and
xchg
dec
js
xchg
lea
imul
xchg
jb
xor
test
pushf
cmc
lret
pushf
cmpsb
add
mov
out
decl
cwtl
push
ljmp
aad
addr16
sbb
sub
pop
pop
loopne
int3
daa
sbb
pop
jmp
xor
loop
int3
dec
dec
cs
fst
sbb
cmpsl
testl
outsb
loope
fs
pop
inc
add
fdivrl
sub
mov
je
jne
push
cmp
push
cmpsb
out
push
cmp
push
enter
imul
js
push
paddusb
mov
mov
scas
pop
push
xchg
ja
sti
mov
and
pop
jmp
clc
in
jae
decl
movsl
push
out
jns
mov
cmp
bnd
dec
jne
addl
cmpsl
shll
es
fdivr
sbb
adc
arpl
cwtl
xchg
lods
es
pop
mov
dec
pop
imul
stos
cmpsb
popf
mov
xor
stos
cwtl
test
loopne
cmp
pusha
aam
imul
add
jb
inc
push
cmc
and
xor
dec
fwait
loopne
xchg
xor
push
push
je
mov
jns
les
mov
fisubs
and
outsb
nop
and
sbb
or
pop
sub
cmpsb
dec
insb
xlat
gs
dec
and
lock
xchg
xchg
xor
js
out
sbb
aaa
lock
lret
js
cli
mov
faddp
ds
je
pop
js
outsl
push
lahf
cmp
inc
and
lahf
sbb
imul
xor
pop
xor
and
cmp
sub
xchg
cmpsl
adcb
and
ficomps
adc
notl
push
xchg
loopne
clc
sub
mov
mov
or
stc
adc
mov
push
lret
push
pop
add
xchg
lcall
test
jnp
fs
adc
add
std
sbb
jb
adc
mov
imul
mov
xor
and
punpcklbw
adc
loopne
fistps
andl
stos
shl
mov
cmp
xchg
jmp
push
mov
mov
and
push
mov
out
pop
push
pusha
xchg
and
push
sahf
push
cli
ret
jg
mov
arpl
mov
cmp
sub
adc
or
add
mov
pop
icebp
addr16
inc
mov
xor
nop
pusha
in
icebp
hlt
fdivrs
sub
cmp
jg
dec
mov
or
dec
inc
jl
push
fnstsw
or
inc
mov
popf
nop
inc
mov
shll
adc
sub
testb
adc
pop
out
dec
movsb
or
pop
call
mov
js
mov
popl
stos
xchg
stos
jbe
cmp
lret
xor
int3
mov
jns,pn
push
jp
mov
pop
lods
neg
repnz
pop
hlt
dec
bnd
jecxz
sti
xchg
shl
inc
adc
push
cwtl
push
mov
and
je
xadd
dec
mov
jmp
dec
std
dec
xor
pop
bnd
push
cmp
test
insl
and
push
mov
inc
or
std
es
stos
sbbl
out
add
or
sbb
add
xchg
sbb
mov
jmp
fucom
cmc
sbb
cld
mov
jg
fsub
and
mov
leave
mov
adc
xor
movsb
nop
or
sbb
jg
pop
or
ja
jns
mov
in
inc
fistpll
in
jnp
mov
jmp
and
jg
ss
cli
insb
int
fstps
push
jo
aas
push
jge
and
mov
mov
cltd
cs
xor
mov
clc
inc
adc
xor
cmp
bnd
mov
outsl
ljmp
jg
push
lea
pop
or
sti
push
outsl
mov
adc
mov
xchg
jp
dec
or
rol
dec
jne
data16
mov
test
sub
cmp
addr16
movsl
imul
bound
mov
mov
xor
outsl
aaa
pusha
in
adc
push
dec
subb
aam
or
jne
lcall
add
sub
jle
rcll
ficompl
pop
test
sbb
pop
lea
aaa
jecxz
push
push
fnstcw
ret
data16
leave
sub
je
jg
mov
jbe
mov
pop
icebp
cmp
loop
stos
push
mov
inc
fimuls
int3
hlt
mov
ja
push
push
pop
push
je
inc
insb
pop
add
sahf
pusha
cmp
shl
dec
xchg
adc
jl
dec
mov
subb
daa
sbb
scas
lock
arpl
xchg
xchg
mov
addr16
aad
and
icebp
arpl
mov
cmp
inc
mov
das
mov
jne
aam
mov
adc
ret
insb
shl
add
out
mov
push
gs
mov
sub
sbb
push
inc
mov
testl
daa
mov
rcrl
imul
int3
mov
xor
in
inc
popf
xchg
add
mov
movsb
fcomps
mov
aas
or
pop
nop
xchg
test
pop
xchg
movsl
loope
enter
push
mov
adcb
cwtl
aaa
mov
ja
dec
lods
inc
idivb
sub
js
mov
jns
daa
sub
iret
lods
faddl
inc
mov
jg
andl
mov
ret
push
movsb
mov
cltd
jmp
jns
and
fdivs
inc
xchg
lret
imul
cmp
ljmp
fs
adc
push
jae
pop
out
push
jecxz
sbb
adc
stos
ss
adc
adc
mov
addr16
pop
and
nop
int3
rorl
mov
sub
js
icebp
and
bound
adc
enter
faddl
or
dec
xchg
iret
pusha
out
ficompl
and
ds
popf
push
and
mov
add
dec
cmp
das
xchg
loopne
mov
ss
cltd
xchg
hlt
imul
sbb
in
sbb
ss
outsl
out
dec
repnz
mov
xchg
leave
xchg
fcmovb
sub
cmp
aaa
in
mov
xor
filds
pop
addr16
sahf
aaa
mov
idivb
and
mov
mov
jge
movsb
stos
dec
mov
and
xor
inc
mov
add
je
adc
push
test
adc
and
in
xor
jae
sar
jno
inc
fcompl
sub
shll
imull
sbb
and
loopne
cmp
addr16
fildl
and
and
imul
or
jo
fwait
lcall
mov
adc
daa
mov
xchg
fwait
sti
dec
fwait
imul
mov
movsl
add
mov
add
daa
dec
fcoms
pop
mov
or
subb
pop
dec
and
xchg
mov
inc
std
sub
ljmp
sub
push
jns
punpckldq
push
xchg
aad
adc
mov
movsl
add
movsl
push
or
inc
testl
cmpsb
sbb
movsb
jbe
xlat
cli
xchg
jp
aad
push
mov
fdivrl
cli
pop
inc
jae
stos
pusha
sti
dec
sub
sbb
lock
sbb
bound
iret
je
mov
out
or
nop
pop
sub
inc
pshufw
shr
mov
xchg
bound
in
fs
jae
push
cmp
and
mov
out
ljmp
out
jecxz
mov
adc
out
lcall
andl
inc
and
and
jbe
mov
divl
icebp
pop
push
mov
idivb
jmp
dec
pop
xchg
mov
xchg
jge
xchg
mov
fcomip
pop
fs
ja
xor
repz
inc
stc
sub
inc
scas
xchg
push
jb
mov
mov
xor
pop
cmpsl
aam
or
sbb
bound
imul
leave
push
push
and
adc
jg
aas
test
inc
outsb
cmp
and
dec
push
fldcw
stos
pop
in
cli
sbb
push
daa
leave
je
out
xor
out
fdivrl
and
mov
shlb
cld
lahf
push
stc
sysret
mov
mov
pop
jbe
aas
pushf
pop
scas
pop
adc
stc
sbb
sbb
mov
dec
mov
jae
xchg
repnz
std
dec
outsl
pop
mov
mov
sub
add
clc
or
adc
sbb
push
inc
sbb
dec
out
out
leave
lods
jno
sbb
mov
mov
push
pop
andb
pop
xchg
mov
cli
lcall
dec
and
dec
mov
mov
aam
clc
sbb
inc
xlat
sbb
or
mulb
cmp
add
sbb
mov
mov
insb
stc
mov
in
das
js
in
stos
jmp
in
dec
mov
loop
mov
aas
xlat
cs
sbb
and
mov
out
scas
aad
mov
mov
loope
mov
in
mov
cmpsb
xor
mov
das
mov
in
sbb
xor
mov
popf
scas
xchg
jmp
nop
jle
xor
xor
loop
or
xchg
mov
testb
mov
outsb
iret
out
daa
lock
pop
xchg
and
xlat
sub
shll
outsb
popa
adc
inc
ja
push
fcomp
jl
mov
or
mov
mov
mov
pop
push
or
add
stos
mov
sbb
mov
mov
sub
test
jmp
mov
in
inc
inc
sarb
mov
aas
mov
enter
xchg
lods
jns
dec
cltd
divps
out
aad
and
xor
add
es
mov
add
inc
add
fnstcw
push
leave
and
std
hlt
inc
mov
sbb
dec
cs
movsl
gs
into
in
xchg
add
loope
mov
lahf
adc
cld
lret
inc
movsl
sub
jb
jnp
jae
sarl
sbb
out
addr16
add
popf
inc
fcom
mov
xor
push
test
or
mov
movsb
jae
pop
inc
mov
rcrb
loop
adc
cmp
cmc
push
jp
xorl
insl
bound
lea
shll
shr
idiv
adc
dec
jge
inc
shrl
sub
and
in
jb
repnz
add
dec
inc
push
pop
mov
add
adc
nop
cmp
enter
in
dec
ja
jb
lret
rclb
sub
outsb
jmp
xor
loop
inc
push
inc
rep
sti
sti
jle
xchg
add
or
test
mov
jns
fmull
xchg
mov
dec
or
scas
dec
xor
mov
pushf
movsl
add
push
inc
push
movsl
dec
pop
loop
cltd
iret
inc
xor
or
ds
bound
pop
movsb
jge
icebp
mov
pop
jbe
out
stos
sar
adc
jge
xchg
mov
fucomp
test
js
stos
paddw
lock
mov
add
sbb
fldt
test
je
cmp
mov
lret
outsb
cmp
xchg
sub
das
dec
mov
adc
dec
leave
xchg
cwtl
push
mov
mov
cs
int
dec
dec
xchg
mov
pop
xor
push
out
enter
addl
pop
pop
inc
or
jnp
mov
inc
push
dec
jb
xor
insl
inc
stc
jno
movsb
lock
aad
lds
and
pushf
mov
pop
in
leave
xchg
loope
ljmp
and
mov
jl
lea
jmp
mov
test
loope
sbb
sub
xchg
or
xchg
mov
lock
rol
jl
xor
lret
xlat
lret
jp
fnstcw
test
cltd
mov
mov
jne
jbe
xor
aaa
sbbl
mov
sub
cmp
adc
cs
cmpsl
jns
ret
adc
aam
mov
les
push
enter
int
dec
fcmove
mov
mov
ret
pop
sarb
shlb
jbe
sub
dec
mov
push
in
loopne
movsl
adc
loopne
lds
mov
stos
or
and
mov
into
dec
imul
bound
xchg
dec
testb
scas
and
jns
sahf
fisubrl
xor
jo
ds
test
testl
push
mov
mov
xchg
int
adc
lret
sti
aam
mov
hlt
stos
lcall
idivb
lahf
pop
add
mov
xor
rcr
push
xchg
sub
mov
call
sub
insl
clc
pop
jg
call
dec
movsb
mov
pop
loope
xchg
cmp
dec
dec
stc
lcall
mov
jo
subl
mov
iret
or
push
push
test
lods
fidivl
pop
mov
mov
jg
xor
adc
ja
mov
add
in
jmp
ja
sbb
mov
popa
in
pop
xchg
xchg
cs
out
xor
fs
cmc
in
jae
mov
jne
int
fnstenv
pop
adc
mov
sbb
adc
pop
rorl
push
pop
movsb
lods
and
push
enter
mov
int3
jns
jno
dec
cltd
xor
adc
sbb
sub
cmc
rcll
push
dec
aam
inc
scas
and
push
push
push
sbb
pop
sti
mov
loope
fwait
lds
sbb
push
ret
pusha
sub
mov
ja
gs
mov
test
add
movsl
lret
aam
dec
inc
inc
and
mov
daa
ss
cmp
sti
out
cmpsl
fs
in
and
aam
cmp
cmp
test
or
xor
nop
outsl
ja
mov
or
push
imul
subb
sub
sbb
out
aad
fldcw
pusha
ret
or
push
jg
cs
xchg
pop
lcall
jle
dec
stc
outsl
ficomps
aam
mov
std
addl
inc
mov
mov
dec
sub
je
das
out
in
scas
ret
jge
test
push
loopne
pop
jnp
aam
and
rorl
mov
lahf
hlt
xchg
mov
sbb
sbb
dec
xchg
push
ret
fucom
mov
cmp
cltd
jbe
sbb
icebp
sbb
lea
dec
push
mov
repz
jae
sbb
test
add
cmp
mov
loope
push
and
sbb
and
xchg
mov
inc
mov
sub
xor
loope
test
int
inc
adc
mov
scas
lods
sub
cmp
cltd
inc
xchg
and
test
mov
or
dec
test
jnp
lcall
repz
sub
mov
imul
push
arpl
mov
pop
jbe
in
add
push
fldln2
xor
xor
dec
shrb
push
fbld
pop
adc
jge
call
clc
out
mov
int3
jae
and
mov
xor
scas
imul
mov
inc
iret
repz
out
sbb
sbb
into
pop
adc
mov
pop
popf
roll
pusha
or
push
sbb
sbb
dec
rcl
in
jge
ja
or
jge
mov
xlat
shll
fldcw
lcall
fwait
sti
mov
cs
inc
cmpl
shrb
pop
es
cmp
or
movsb
movsb
or
push
lcall
bound
xor
aam
mov
pushf
ret
movsl
hlt
jmp
adc
stos
pop
movsl
pop
loop
sub
mov
pop
mov
aam
lahf
cld
mov
fcomps
shrl
push
cltd
imul
mov
fists
cs
insl
rcrb
sbb
push
dec
mov
and
push
mov
jno
insb
repz
lods
pop
out
clc
ret
data16
sbb
test
ret
shrb
pop
pop
movsb
shl
sbb
ja
call
test
aam
mov
test
mov
push
mov
sbb
xchg
jge
test
sbb
mov
lock
xchg
sbb
aam
aam
fldln2
inc
subl
sub
jns
mov
fcomps
push
add
loop
xchg
mov
xor
testl
and
lret
lcall
dec
rclb
imul
inc
jge
mov
out
add
jecxz
xlat
shrl
pop
jp
andb
and
and
or
xor
mov
jbe
into
mov
outsl
imul
cvtpi2ps
test
mov
int
add
ljmp
xor
mov
push
imull
dec
mov
shl
cmp
stc
testb
mov
push
rcrl
mov
ja
pushl
sub
dec
pop
jg
mov
mov
sbb
fadds
iret
add
insb
ret
in
push
and
imull
cld
mov
cmp
and
inc
jg
jno
mov
mov
test
jb
cmp
repnz
out
cs
es
dec
dec
jl
lret
shlb
cwtd
icebp
fldcw
arpl
ret
xchg
faddp
add
pushf
ljmp
ss
sti
jb
mov
or
push
cmpsl
stc
pop
dec
in
mov
jle
js
xchg
test
pop
daa
mov
xchg
dec
dec
loopne
lcall
lods
rolb
sbb
adc
ret
mov
sub
sbb
push
arpl
xchg
mov
mov
xchg
jno
cmpsb
add
scas
mov
in
icebp
dec
enter
insb
sub
push
jecxz
arpl
inc
mov
lcall
out
push
mov
xchg
nop
jle
jle
jge
cmp
fcoml
shrb
sahf
call
cwtl
xchg
xchg
xor
movb
push
cmp
lea
lcall
push
sub
lret
mov
mov
dec
mov
mov
mov
adc
pop
mov
js
xlat
std
mov
mov
sahf
in
push
jbe
adc
sub
cmpsb
and
pop
xchg
daa
cmp
xchg
dec
cs
or
pop
lods
insb
int
imul
sti
or
sub
pop
ffree
push
mov
jb
adc
sarb
xor
fdivrl
pop
lcall
inc
out
ret
sbb
and
lret
stc
mov
in
cmp
addr16
xchg
push
cmc
ret
mov
je
pop
fimuls
fs
aad
mov
test
pusha
mov
mov
push
lods
test
mov
in
mov
fsubrl
in
and
or
fwait
xor
aad
add
sub
notb
mov
jnp
xor
xor
jl
adc
sti
insb
inc
mov
lahf
pop
jno
ljmp
pop
sqrtps
and
push
fisttpll
clc
movsl
in
sub
cmp
js
xlat
push
lahf
jns
jmp
test
loopne
mov
mov
and
lret
jae
mov
popa
mov
addr16
push
cmpsl
xchg
sbb
mov
mov
movsb
jge
rcll
nop
dec
adc
or
pop
fldl
mov
mov
cltd
push
and
cmp
dec
into
adc
inc
dec
aam
mov
sub
mov
cs
lea
cwtl
jl
std
xor
call
inc
inc
gs
push
fld
loopew
xor
dec
sti
pop
pushl
or
push
pusha
out
cmp
js
sub
xchg
xchg
dec
shrl
shrl
xchg
imul
mov
ljmp
pop
cwtl
push
mov
outsl
xor
sbb
clc
out
out
icebp
push
push
pop
xchg
mov
mov
jle
xor
mov
repz
lahf
xor
sbb
sub
out
pop
xchg
lods
and
test
clc
mov
cmpsl
and
ja
mov
and
lods
lret
arpl
ror
inc
lea
and
inc
popa
pop
push
and
sub
jmp
mov
xchg
outsl
mov
push
jmp
jns
fwait
sub
push
cmpb
movsb
xchg
sti
sub
leave
shll
push
sbb
fcompl
pusha
into
pop
pop
and
repnz
out
not
lahf
jmp
mov
pusha
push
into
mov
inc
inc
mov
add
aas
pop
mov
pusha
lcall
jne
arpl
mov
decb
ja
adc
or
cmp
or
stos
fidivl
outsl
aaa
xor
clc
les
ficomps
ja
cmpsb
loopne
loope
jecxz
filds
daa
jge
outsb
data16
out
xchg
mov
push
push
data16
add
fnsave
dec
sti
pop
lds
dec
dec
mov
pushl
adc
adc
lds
lahf
nop
aad
mov
cld
dec
sbb
movsb
mov
xchg
push
std
pop
add
movsb
lcall
push
js
dec
outsl
mov
jns
mov
and
jmp
or
stc
das
not
xchg
mov
jnp
inc
xlat
sti
mov
fsubrs
test
cmp
ljmp
shl
pop
xchg
push
cli
lcall
aas
mov
add
jo
fsubl
cmp
and
mov
xor
xchg
cmp
pop
outsl
cli
out
daa
mov
ss
lcall
cmpsb
mov
mov
add
inc
xchg
insb
imul
fists
arpl
and
push
enter
ret
pop
fldt
clc
sarl
pop
dec
xor
jbe
adc
dec
sub
daa
push
mov
dec
jo
dec
cmp
pop
mov
ss
hlt
jle
xor
dec
xor
addl
pop
jb
cmp
nop
or
scas
iret
pop
test
dec
insl
push
push
scas
mov
pop
out
jle
stos
test
pop
mov
and
jnp
pop
pop
lods
cmpsl
lock
movsl
outsb
sti
xor
and
push
in
rorb
lods
cs
inc
out
sub
xor
lea
xor
push
pop
mov
outsb
xor
js
xor
push
mov
and
sbb
shrd
sbb
fneni(8087
int
xor
and
int3
inc
push
xchg
jl
adc
mov
mov
jns
enter
inc
dec
mov
push
shrb
popa
pop
inc
jmp
mov
push
out
cmp
mov
shl
mov
jl
incl
mov
daa
std
dec
dec
lods
in
pop
sbb
cwtl
pop
xchg
les
inc
repz
push
jbe
ljmp
mov
mov
mov
mov
adc
test
push
ja
pop
ds
in
mov
pop
aas
pop
pop
adc
movsl
sub
sahf
jmp
jnp
fxch
xrelease
outsb
aaa
xor
jp
push
insb
dec
clc
rcrl
cwtl
aas
in
fadds
cli
stc
js
repnz
push
outsl
inc
les
or
daa
arpl
popa
fnsave
dec
push
push
test
jnp
loop
lret
lea
dec
js
cmp
pushf
jo
ds
lods
test
aaa
and
mov
adc
lahf
jecxz
outsb
xchg
jmp
addr16
daa
push
sub
pop
dec
pop
and
fadd
jge
mov
jo
test
test
imul
xchg
adc
mov
jnp
add
ss
or
cs
pushf
fldt
jo
bound
jo
dec
dec
mov
add
cli
sub
jnp
add
push
es
mov
add
sti
rorl
ss
and
mov
ds
cmc
and
jmp
xchg
mov
mov
sbb
dec
dec
add
mov
and
push
lcall
daa
les
fdivp
cwtl
fcmovnb
pop
in
sarb
std
jg
fcomps
cmp
out
test
enter
int3
sbbb
inc
loopne
sbb
or
or
xlat
repz
imul
adc
js
ficoml
mov
and
std
loop
lcall
add
lret
scas
push
nop
lock
push
sub
loope
mov
lcall
push
and
push
mov
arpl
mov
lret
daa
fs
test
mov
cmp
xchg
mov
shr
in
push
push
icebp
dec
push
sub
mov
js
push
adc
dec
cmp
adc
out
sbb
out
mov
push
fnstcw
cwtl
push
insb
xchg
lret
aas
aas
fisttpll
fucomp
mov
push
shl
push
ss
or
iret
xchg
nop
in
mov
sub
xchg
adc
movsl
stos
fidivrl
cmp
pop
and
test
punpckhbw
or
inc
pop
xlat
xor
fsubrl
bswap
and
jg
jmp
insl
aad
ja
mov
mov
daa
mov
sub
xchg
cmp
mov
push
mov
not
mov
mov
pop
test
jb
adc
mov
adc
xchg
push
xchg
in
clc
add
inc
mov
scas
aad
dec
cmpsl
popa
imul
sub
mov
shr
fdivrl
fsubs
or
insl
xchg
xchg
gs
fadd
pop
mov
dec
arpl
js
fisubl
cmp
pop
test
jecxz
arpl
popf
ret
movsb
or
dec
insb
in
dec
jmp
out
push
add
jl
ret
stos
divl
rorl
lea
imull
mov
mov
and
xchg
jmp
push
mov
fsubrs
stc
sbb
aam
int
lds
add
push
and
mov
xchg
inc
es
cmp
mov
nop
in
sub
int
pop
mov
mov
inc
das
aam
mov
cmp
test
push
flds
js
shrl
roll
ret
sahf
adc
jge
jnp
test
into
repnz
sub
lret
arpl
lods
cmpsb
dec
push
and
push
sbb
mov
add
pop
inc
shlb
and
ffree
out
mov
cltd
xchg
xor
add
mov
arpl
daa
das
dec
fidivrl
mov
cltd
adc
call
cmpsb
mov
inc
push
xor
int3
mov
out
dec
mov
clc
out
outsb
addr16
mov
imul
xchg
push
mov
subb
insb
hlt
or
in
pop
cwtl
psubusw
push
mov
push
cmp
lds
xchg
imulb
in
jne
jb
xchg
ret
test
clc
add
ret
cmp
xor
stos
xlat
cmc
mov
xor
adc
dec
aaa
push
mov
outsl
mov
fadd
out
xor
mov
int3
pop
or
inc
add
scas
scas
cmp
movsl
jo
imul
cmpsb
cmp
ja
mov
or
addr16
inc
shll
cmpsl
push
cli
xchg
sbb
mov
mov
lock
dec
sub
out
fidivs
in
int
push
js
lahf
cmp
pop
sub
nop
inc
or
sbb
sahf
dec
lret
xlat
or
adc
dec
xchg
ljmp
movsb
aas
mov
repnz
lods
enter
xor
dec
out
dec
add
mov
int
xchg
dec
faddl
test
push
sahf
cwtl
or
jns
iret
and
icebp
sahf
shll
mull
cmp
sbb
dec
dec
pop
inc
sbbb
lea
jo
popf
xchg
fwait
jb
adc
cld
movsl
repz
daa
inc
jecxz
arpl
repnz
inc
sbb
cmc
mov
push
stos
mov
arpl
inc
or
paddsw
jl
jbe
mov
lds
xor
nop
inc
mov
pop
aam
int
adc
lahf
out
divb
xchg
in
mov
mul
lods
jp
in
sub
std
jle
and
pop
test
mov
stos
imul
sarb
push
mov
push
ret
xor
jg
dec
or
test
push
stos
inc
mov
roll
mov
cmp
dec
jns
in
pop
jno
pusha
xlat
popa
fidivrs
mov
add
and
jns
mov
pop
bound
push
or
sub
push
xchg
push
daa
pop
ficoms
sub
dec
add
ficoms
test
sub
lea
sarb
sti
pop
lahf
and
in
out
out
out
cmp
pop
stos
jmp
push
cmp
jge
js
in
inc
sub
cli
sub
xor
imul
mov
pop
inc
repz
jno
mov
mov
add
adc
hlt
mull
lock
daa
lds
pop
pop
push
sbb
popa
push
lcall
enter
pop
lock
in
jmp
aaa
pop
rcll
add
inc
ret
adc
push
into
sub
xor
jo
je
test
es
pop
dec
dec
cld
es
cmp
call
pop
mov
and
dec
mov
mov
bound
push
mov
mov
aas
sub
sahf
addl
cmp
cs
mov
mov
leave
xchg
lock
xchg
sti
jbe
xchg
adc
dec
iret
out
jno
sub
movsb
pusha
rolb
push
js
repz
dec
sbb
cli
xchg
std
icebp
sub
pushf
lds
mov
pop
adc
incl
lret
push
mov
out
xor
push
loope
fsubrl
inc
and
push
sbb
adc
dec
enter
push
test
cmp
jnp
scas
fwait
xor
mov
pusha
ficompl
mov
sti
stos
out
mov
xor
fdivp
in
or
dec
inc
loope
or
int3
lods
mov
xchg
out
pusha
hlt
adcl
inc
sbb
adc
lods
sbb
hlt
cltd
mov
push
imul
push
enter
ds
pop
sbb
push
pushf
push
push
sti
cltd
dec
and
arpl
into
pop
sbb
cmp
adc
rol
cwtl
test
xchg
out
rcll
xchg
cmpsb
jno
stc
add
and
test
inc
or
xor
xlat
cmpsb
cld
mov
dec
cmp
mov
call
rcll
dec
sti
fwait
dec
fs
scas
lcall
fs
loopne
or
shr
stc
pop
cmpl
push
push
mov
popf
or
sbb
sbb
ds
push
fmull
push
pushf
pushl
popa
sti
pop
sub
clc
in
add
dec
add
ficomps
ljmp
mov
aas
aam
add
cmpsb
add
add
in
jp
ffreep
inc
test
cli
fmul
jae
jecxz
sbb
adc
mov
jbe
xchg
push
dec
scas
dec
mov
xchg
and
xor
xchg
mov
and
sbb
fwait
out
les
out
xor
jne
or
add
push
scas
add
scas
lahf
and
or
cmp
inc
repz
jge
sti
fnsave
into
jmp
arpl
xor
aam
daa
mov
inc
rclb
dec
jns
daa
rcl
mov
cwtl
and
int3
aas
and
aaa
shr
xor
outsb
scas
jae
shll
mov
mov
or
cmp
adc
xor
push
jg
xchg
in
sub
ficomps
fidivs
repz
pop
sub
dec
insb
insb
xor
in
jg
inc
mov
arpl
pusha
xlat
aad
roll
inc
sahf
or
sub
repz
das
mov
sbb
sbb
lahf
push
loope
push
dec
arpl
cmpsb
jp
jns
xor
jno
jmp
ljmp
fs
dec
pop
test
sbb
fwait
outsl
mov
dec
mov
lea
int3
mov
bound
add
mov
loope
shlb
enter
pop
rorl
dec
mov
gs
and
not
sbb
mov
mov
jb
sahf
mov
push
stc
sbb
sbb
mov
jl
jo
mov
pop
data16
cli
push
mov
jmp
xchg
sub
xchg
data16
out
leave
dec
sarl
jp
jbe
test
insb
xor
call
cs
adc
mov
lods
adc
mulb
addl
cmp
insl
cmc
notb
cs
xor
dec
pop
scas
mov
roll
aad
mov
and
ljmp
cli
roll
cmpxchg
rolb
pop
ljmp
fstps
adc
aas
fiaddl
ljmp
add
test
sbb
fcmovne
filds
inc
mov
mov
aaa
outsb
xchg
pop
iret
in
jnp
xor
mov
psllq
sbb
std
xlat
or
insb
push
ficompl
cmp
mov
push
shl
fsubrl
test
mov
sbb
sub
push
jno
outsl
xchg
adc
pop
cs
add
andl
and
clc
jmp
imull
dec
xor
inc
imul
cmp
sti
into
jl
daa
pop
mov
xor
cs
pop
add
mov
mov
dec
push
xor
jo
mov
mov
shl
mov
insb
daa
or
push
pop
mov
sarb
jg
jmp
xchg
sub
aad
js
sub
outsl
fcoms
popf
lea
adc
sahf
push
call
bound
mov
inc
push
int
mov
jbe
push
arpl
mov
jbe
sub
repnz
ss
fidivs
mov
mov
dec
add
addr16
inc
loope
lret
pop
and
cmpsl
mov
jp
cmpl
popf
sub
push
popa
orb
les
and
out
mov
mov
cmpsb
add
sbb
mov
call
cwtl
mov
adc
sub
jg
fisubrl
sub
std
in
jmp
mov
mov
iret
loop
lds
insb
pop
adc
cmpsl
dec
and
jae
pop
fisubrl
jne
lods
lcall
sbb
and
xorb
in
insb
int
shll
add
cmp
test
hlt
adc
pusha
mov
pop
outsl
inc
adc
in
cmp
adc
mov
es
sbb
pop
inc
sub
xchg
test
sub
aas
lret
into
bsf
cli
pop
fstpt
inc
arpl
lods
adc
in
dec
dec
sbb
lds
xchg
add
jecxz
inc
dec
pop
es
push
dec
js
in
jecxz
sbb
jbe
jge
xchg
push
imull
fists
or
outsb
mov
int3
inc
pop
shl
cmp
mov
into
iret
subb
adcb
mov
sub
jbe
out
push
mov
mov
dec
lods
mov
jnp
and
jg
daa
cld
push
sub
pop
inc
jg
pushf
shlb
adc
mov
stos
out
push
xor
arpl
sbb
loop
pop
test
rorb
inc
addr16
out
sub
sub
fstpt
pop
xor
call
pushf
das
stos
fbstp
movsb
xorl
rolb
fsubrp
mov
pop
outsb
jnp
jns
fcompl
xchg
lcall
fs
gs
enter
imul
adc
mov
vcvttps2dq
dec
lods
xor
iret
push
mov
inc
inc
outsl
or
cli
cmpsl
or
int
and
xor
jg
pop
call
iret
fisubrl
jmp
notb
out
push
adc
mov
xchg
inc
adc
mov
lret
sbb
ja
ja
call
add
jno
fsubrl
repz
mov
ret
inc
js
cmp
push
arpl
rclb
aam
gs
cwtl
sbb
fsubrl
xor
and
push
cmp
ss
push
aam
in
add
scas
in
hlt
mov
mov
adc
pop
sub
arpl
movsl
xchg
test
inc
pop
adc
push
nop
leave
jg
jle
adc
xor
push
jg
xchg
in
sbbl
loopne
mov
lret
iret
imul
mov
pop
inc
sub
out
les
call
adc
enter
lret
rcr
outsb
push
push
xlat
adc
nop
mov
sbb
cld
mov
mov
in
lret
jnp
inc
mov
push
xor
popa
xchg
dec
lea
lock
mov
mov
inc
mov
cmpsl
dec
xor
fnstsw
ljmp
lea
add
incl
add
sbb
fcom
sub
out
repz
dec
mov
push
movhps
test
push
repnz
movsl
mov
dec
mov
test
out
pop
clc
pop
clc
inc
aam
in
dec
aad
cmp
out
std
aaa
pop
mov
mov
testl
shrb
adc
jp
movsl
mov
or
adcb
outsl
insb
aad
xor
cmp
out
mov
fwait
xchg
jnp
js
out
lock
out
jnp
fdivrl
sub
fsqrt
ljmp
sub
out
pusha
xor
cli
xchg
jo
dec
pop
ret
add
rcll
and
rcrb
stc
pop
fdivp
xchg
cltd
int3
mov
dec
mov
mov
js
out
xchg
mov
cmp
fistps
rcrl
mov
div
cmp
pop
push
fistpl
pop
jno
fmulp
insb
inc
mov
jp
jmp
xchg
lret
fnstenv
pop
dec
scas
mov
nop
add
or
cwtl
push
or
setne
mov
dec
push
pop
sti
sub
cmp
aas
fsubrs
cmp
mov
mov
ja
xlat
xchg
jbe
gs
jecxz
or
pop
repnz
adc
cmp
into
mov
test
jl
add
cmc
lret
inc
int
fisubrl
cmp
pop
sarl
sti
pop
and
in
pop
outsb
daa
test
clc
add
ret
mov
dec
enter
test
inc
cmc
sbb
cmp
gs
std
iret
cltd
xchg
mov
adc
or
gs
pop
xchg
rorl
pop
mov
sub
orb
push
push
pop
or
mov
loopne
negl
popa
lods
xchg
sarb
shrl
out
inc
cmpsl
mov
testb
pop
mov
enter
sarl
dec
pop
mov
push
clc
push
dec
roll
push
imul
mov
xor
mov
int
mov
add
mov
fldcw
icebp
arpl
cmp
mov
out
daa
sbb
out
nop
push
loop
pop
fstl
pop
pop
pop
or
and
mov
pop
mov
dec
mov
daa
push
loope
data16
ret
xchg
push
stos
lock
add
in
pop
cmp
cmp
xor
les
or
dec
lcall
flds
into
mov
hlt
lock
hlt
sbb
lcall
cltd
dec
out
leave
adc
stos
sub
lods
xchg
in
adcb
aad
popa
and
or
dec
ret
or
jg
in
shll
push
xchg
pop
outsl
movsl
jmp
and
mov
xor
sbb
repz
mov
sbb
cmp
lcall
jp
into
pop
jmp
in
jno
nop
sub
loopne
ja
loopne
sub
ficompl
push
xchg
ljmp
out
xchg
cmpb
cltd
cmc
push
dec
xchg
or
jmp
fbstp
fsubrl
cmpsb
in
add
push
out
ret
inc
pop
gs
add
xchg
sub
cmp
cli
or
ss
repnz
shr
cmpsl
in
js
enter
cwtl
cmp
in
pusha
loopne
pop
and
add
in
icebp
adc
inc
xchg
sbb
roll
xor
shlb
pushf
ljmp
fcom
xlat
std
cmp
daa
pop
rclb
das
out
lcall
int3
dec
outsb
sub
pop
and
in
fcomi
sub
cmc
push
leave
add
pop
add
data16
outsb
sbb
mov
push
adc
jno
ffreep
ret
testb
and
mov
or
fsubs
and
js
cmp
mov
sbb
mov
iret
mov
leave
xchg
add
test
in
enter
xor
adc
sarl
not
jno
iret
or
inc
out
dec
jb
mov
test
sub
jno
cli
outsl
test
cmp
jge
fadds
adcb
stc
dec
adc
lret
testb
cmp
stos
sbb
mov
and
sbb
mov
cmp
sbb
loop
test
or
in
loopne
sub
mov
lods
add
shll
mov
push
cmp
stos
sub
xor
test
test
mov
arpl
push
arpl
les
jae
inc
ficomps
insw
cmp
mov
int3
subb
push
repnz
xor
scas
pop
movsb
rol
xor
out
pop
aam
push
aaa
mov
and
cmc
sahf
out
mov
push
cwtl
into
adc
adc
stc
dec
push
bound
push
xchg
inc
or
fdivrl
movsl
add
insl
sarb
jmp
dec
jo
adc
adc
push
push
mov
js
push
and
add
dec
dec
ss
mulb
xlat
mov
adc
inc
jl
ja
pop
les
es
sub
rsm
loopne
pop
xchg
mov
sbb
sbb
push
dec
mov
sbb
dec
cmp
loopne
ljmp
dec
cmp
mov
or
jne
mov
cltd
mov
aas
or
push
and
stc
icebp
jns
add
add
aam
cwtl
and
cmpsb
iret
imull
ss
hlt
int
in
jne
mov
bound
add
ds
loop
sub
cmc
sub
pop
adc
ljmp
fisubrs
and
iret
sarl
js
ret
jge
test
mov
mov
les
adc
mov
xor
inc
jg
out
push
mov
adc
cltd
cmp
jp
call
cmp
cmpsl
mov
xchg
cmc
gs
add
mov
scas
push
jl
les
push
incb
push
mull
push
pop
cmc
int3
inc
add
pop
dec
add
aaa
ds
inc
mov
cltd
bound
dec
decl
mov
inc
jge
xor
rcrl
fbstp
les
sub
sub
sbb
xchg
mov
fildl
jmp
in
jnp
hlt
push
enter
xchg
shll
or
insb
sub
cld
arpl
cli
ss
roll
inc
mov
mov
sbb
and
jb
into
and
jo
sbb
xor
jo
iret
jb
pop
pop
push
xchg
sub
sti
pop
scas
pusha
sbb
mov
adc
or
dec
mov
or
jl
lea
lret
mov
arpl
gs
cmpl
xlat
daa
adc
push
pop
outsl
ja
xor
ss
aam
push
and
leave
add
lds
push
inc
sub
cwtl
xchg
dec
fnsave
or
xor
and
pop
push
mov
fs
mov
out
and
jge
mov
push
mov
dec
rorb
or
or
sbb
mov
mov
inc
and
mov
sarb
ja
add
mov
jns
incl
notl
outsl
jp
inc
push
into
dec
push
mov
cmpsb
adc
or
cwtl
fs
sbb
fcoms
loopne
inc
jno
pop
dec
sbb
stc
jne
xor
push
bswap
sub
push
addb
repnz
add
fs
scas
sub
push
outsl
lahf
clc
sbb
xchg
sub
fstpl
ja
sub
mov
push
cmp
pusha
rorb
push
push
add
loope
bound
jb
sub
pop
int
loope
lret
inc
sub
and
addr16
dec
fldenv
pop
out
cs
lahf
and
xor
dec
in
rclb
movsl
xchg
dec
cmc
fcomip
sahf
mov
sub
out
jne
std
and
sbb
add
pop
lods
mov
add
adc
jo
xchg
xchg
add
or
stos
inc
loop
jmp
dec
or
gs
sbb
out
mov
fwait
ret
popf
adc
push
das
or
mov
out
insl
sub
xchg
iret
sub
pop
imulb
dec
dec
add
sub
stos
ljmp
push
cmc
or
xchg
roll
sub
fdivl
cmp
out
jo
cmp
lock
ds
add
add
test
push
in
in
out
and
call
push
cs
repnz
add
or
sbb
scas
aam
mov
loopne
popa
scas
loopne
sbb
add
movb
mov
sub
adc
bound
bswap
aas
pop
or
cmp
idiv
add
sbb
nop
mov
or
int
insl
fwait
jmp
popf
test
dec
test
inc
ret
mov
add
int
add
push
test
in
mov
push
in
mov
shlb
sbb
inc
xchg
dec
xor
rorb
cli
cmp
dec
stc
xchg
lock
das
sub
jmp
add
scas
enter
dec
jnp
mov
jae
or
dec
fistpl
pop
fidivrs
rol
add
clc
sti
pop
lods
std
insb
push
mov
in
dec
xor
addr16
sub
mov
fcomi
mov
loop
mov
pop
out
xor
sbbl
xor
jne
jp
jg
mov
aad
mov
sti
clc
clc
xchg
mov
movsl
inc
jecxz
cmc
repnz
fsts
sub
data16
dec
and
ret
lea
mov
test
test
ljmp
mov
dec
orb
mov
dec
aam
jge
leave
inc
xor
int3
cmp
imul
push
fucomip
aas
test
lock
or
mov
mov
fcoms
xchg
sbb
in
movsl
add
insl
cltd
xor
adc
xor
repnz
xchg
incl
and
cmpsl
cld
dec
jae
pop
rcrl
pop
dec
mov
xor
sub
es
sarl
mov
cmp
movsb
ret
pop
cmp
cmp
lret
movl
or
roll
out
jne
bound
mov
shrl
add
xchg
sub
out
cwtl
scas
jb
icebp
jbe
cmp
in
xchg
cmpsb
sub
and
push
xchg
testb
mov
jg
stc
add
inc
sbb
sti
insl
jl
ss
pusha
pop
mov
and
rolb
aad
or
mov
fsubr
xchg
out
out
xor
icebp
cmp
adc
mov
and
jecxz
add
leave
js
mov
push
push
adc
mov
nop
adc
or
push
in
popa
test
mov
cmp
stos
into
jno
mov
movsb
adc
xor
or
into
arpl
lods
inc
ret
rorb
sub
movsl
in
xor
xchg
mov
repz
sarl
pop
jo
ja
pop
xor
idivl
dec
add
push
mov
rolb
inc
out
daa
iret
inc
in
in
add
mov
int3
loop
xchg
loopne
sti
cwtl
test
pop
xchg
xlat
lods
mov
xchg
or
mov
and
push
mov
sahf
sbb
mov
icebp
aas
sub
dec
inc
add
dec
in
mov
idiv
test
xchg
sbb
clc
cmp
pop
mov
add
aaa
xor
xchg
push
sarb
jb
and
and
lods
int3
ret
push
adc
hlt
mov
mov
cli
or
adc
sbb
iret
adc
xchg
imul
repnz
sbbl
out
std
in
insl
das
push
sub
push
das
sarl
sbb
add
dec
in
decl
add
cmp
cmp
jo
rcrl
xchg
mov
int
pop
shlb
inc
xchg
in
outsl
jbe
leave
add
pop
mov
sub
cmp
mov
dec
xchg
add
push
and
push
stc
scas
cld
mov
xchg
js
sbb
push
ss
dec
roll
sub
std
mov
fs
cmp
and
aam
lret
outsl
push
mov
cmc
inc
cld
fidivrs
and
stos
xchg
jp
dec
arpl
mov
jge
xchg
sub
dec
sub
push
int3
aaa
xchg
dec
out
mov
out
and
loop
mov
pop
dec
out
test
sbb
sub
or
jl
fiaddl
push
lret
dec
sub
lock
dec
insb
insl
inc
sbb
mov
inc
and
add
mov
or
ret
loop
cmpl
or
lock
sub
push
ret
add
pop
sbb
dec
test
pop
or
inc
push
pop
sbb
mov
and
mov
cmp
inc
pop
repz
push
mov
xchg
push
xchg
sbb
push
inc
or
rorl
mov
sub
lcall
or
rdpmc
mov
and
add
push
test
testb
lret
mov
out
mov
xchg
jbe
pmovmskb
mov
dec
insb
into
push
shl
jle
fsubrs
inc
xchg
pop
sub
mov
fisttps
sub
lret
push
movsb
fldcw
add
imul
leave
dec
mov
fxch
ret
fs
adc
mov
fisttps
pusha
pop
push
movsb
lret
mov
push
ljmp
mov
and
daa
lret
inc
jno
or
fmuls
insb
push
nop
popf
or
pushf
push
sub
add
mov
call
pop
pop
xor
lahf
repnz
sub
adc
fs
out
sbb
mov
shrl
cmp
jbe
fcoms
pop
sar
test
adc
scas
pop
movsl
xchg
int
fwait
int
mov
mov
mov
add
ret
stos
pop
sbb
xor
jo
xchg
notb
sub
or
je
sar
inc
jecxz
pop
jns
rcrb
mov
or
orl
xlat
icebp
test
test
jo
lods
rclb
loopne
pop
sbb
scas
jo
stos
mov
add
push
mov
pop
mov
jbe
test
xor
les
pop
scas
sti
ds
jge
jae
aad
xor
cmp
and
cmp
inc
gs
mov
fs
outsb
xor
xlat
xchg
stos
mov
iret
mov
scas
neg
mov
push
outsb
jne
inc
idivb
js
pop
pushf
push
mov
cltd
jg
lea
xchg
jle
push
push
sbb
jmp
jbe
out
aam
lea
mov
push
mov
jge
sbbb
jb
cmp
sbb
lds
sub
testl
cli
xor
fs
sub
pop
and
pop
mov
and
pop
cmc
push
pop
bound
notb
call
adc
jg
sub
cltd
push
sub
cli
jbe
sub
nop
xor
cmp
inc
daa
mov
pextrw
sub
stc
addl
dec
jmp
cs
int
mov
push
fstl
cwtl
out
and
mov
pop
sub
pop
sub
aad
inc
cmp
mov
inc
pop
sub
xchg
pop
std
fmul
jb
cmpsb
jp
lock
cli
loop
bound
pushf
ret
add
and
jp
inc
and
mov
mov
scas
imul
bound
js
je
sbb
mov
sbb
repz
dec
je
hlt
mov
js
inc
aaa
enter
sbb
aam
mov
jne
jns
inc
or
xor
orl
cmp
push
leave
cld
inc
cmp
mov
ja
mov
mov
adc
aam
mov
push
lock
in
adc
cwtl
scas
gs
mov
xchg
fstpl
cli
sahf
in
sbb
xchg
cmpsb
inc
sbb
mov
dec
or
sub
sbb
mov
push
lret
pop
aaa
in
cltd
or
sahf
iret
lea
rsqrtps
xor
adc
nop
out
xchg
lods
jle
loopne
xchg
fldl
subb
push
sub
sub
pop
cmp
jo
mov
cmp
cmp
lcall
fldl
test
aad
dec
outsb
sub
aad
pop
jmp
cmp
or
jo
pop
xchg
lahf
loopne
lret
out
jg
cwtl
fldl
icebp
clc
dec
outsl
cmc
aaa
in
mov
pusha
lock
pop
pusha
mov
in
shrb
sub
push
pop
mov
addb
mov
roll
push
lea
dec
lods
pop
fwait
sub
test
bound
out
and
xchg
mov
mov
push
cli
sub
mov
sbb
stos
cltd
in
sub
std
push
or
lods
int3
out
xchg
cwtl
adcl
mov
mov
loopne
xchg
aam
add
test
or
pop
jmp
lahf
insb
pop
js
sub
cs
cmp
sarl
int
in
stos
mov
sbb
pushl
pop
mov
addr16
pop
push
mov
mov
ds
sbb
mov
xor
or
mov
pop
test
adc
pop
ja
or
jno
and
sbb
sbb
fldenv
lahf
repz
pusha
aad
push
and
mov
push
in
mov
jecxz
pop
pop
xchg
out
movsl
xchg
and
xor
xor
xlat
sahf
das
inc
pop
dec
pushf
les
xor
jns
scas
shll
mov
lret
push
jnp
icebp
leave
sbb
movsl
jb
xor
cltd
mov
fs
sti
and
neg
in
xchg
fisttpl
adc
sahf
int
mov
lret
popf
rcrl
stc
cli
mov
imulb
movsl
and
std
jno
push
pop
loop
jae
arpl
xchg
shll
addr16
sub
mov
sub
xor
mov
add
mov
nop
sub
pop
push
sub
cwtl
pusha
sbbl
into
pop
push
dec
adc
std
and
shrl
subb
xchg
lea
shl
or
test
and
cmp
in
inc
xlat
mov
xor
out
int
ss
lock
dec
lds
pop
sarl
lcall
push
mov
movsb
xchg
divl
icebp
and
push
mov
fbld
dec
jb
int3
sbbl
jle
ss
push
jnp
dec
push
sub
ljmp
call
lahf
dec
push
in
xor
or
adc
cmpsl
aad
add
lret
jge
mov
les
add
mov
sub
loopne
mov
es
mov
ud2
bound
sbb
fisubrs
pop
sub
pop
push
push
cltd
mov
test
jge
xor
lea
inc
arpl
nop
adc
push
sub
stc
in
pop
sti
xchg
cwtl
aad
jle
mov
pop
xlat
fmuls
movd
aam
out
ffreep
pushf
fs
add
bound
and
out
fnstenv
jmp
xchg
inc
nop
rcl
lahf
rcrb
add
mov
mov
in
cld
insb
dec
dec
aad
popf
in
cmpl
sbb
xor
cmp
or
or
mov
mov
mov
inc
nop
adc
aad
ret
bound
in
xchg
fisttpll
addr16
fisubs
rcll
js
fld
ret
int3
popf
pusha
imul
cmp
mov
popa
pop
xchg
inc
aaa
pop
jbe
faddl
out
out
lock
daa
daa
bound
jg
cmp
inc
fisubrl
xchg
push
adc
or
mov
insl
mov
sub
cmpsl
popf
mov
movsl
out
push
mov
cmp
popa
dec
ljmp
stc
loopne
fwait
dec
inc
stos
leave
push
loop
in
mov
jae
xor
dec
sbb
fdivl
mov
sbb
addr16
icebp
loopne
inc
dec
leave
push
aad
imul
cmp
jnp
lret
and
mov
cmp
lds
inc
dec
pusha
jb
push
out
lcall
xchg
out
sbb
repnz
mov
idivl
int
sub
mov
fildl
add
mov
imulb
dec
mov
mov
insl
inc
dec
inc
xor
xor
xor
shlb
pop
or
jmp
and
mov
jno
add
mov
dec
xchg
push
cmp
jb
xchg
xchg
out
jae
aam
call
adc
jbe
loope
push
cmpsb
cmpsb
adc
jne
sub
mov
les
jle
dec
into
mov
sahf
sbb
clc
inc
fidivs
insb
cwtl
outsl
and
inc
cs
ss
call
icebp
or
cmp
push
movsl
push
dec
ljmp
or
data16
movsl
jmp
dec
fisubl
into
lods
sbb
mov
jno
or
push
xchg
fcomps
int3
xchg
or
mov
pop
dec
add
ret
xor
or
gs
inc
rcl
shrl
movsl
xor
pushf
adc
inc
cmc
mov
sbb
ljmp
jl
add
sbb
icebp
xor
daa
mov
xchg
mov
adc
mov
aad
xchg
insb
xor
outsl
lcall
sub
pop
mov
dec
jae
dec
nop
sbb
roll
out
mov
add
in
sub
or
inc
scas
jb
pop
xchg
inc
fsubs
lea
out
mov
std
cmp
or
imul
pop
adc
cmpsl
xor
mov
dec
into
add
mov
lret
ja
inc
dec
add
cmp
jns
iret
mov
pop
ljmp
addr16
mov
std
lods
movsb
fwait
and
sbb
sarl
pop
mov
pop
adc
push
jnp
adc
adc
data16
aam
lock
cwtl
sub
and
addl
cli
idivl
test
std
scas
xchg
dec
rcr
inc
dec
imul
jnp
mov
sub
mov
fmul
mov
push
adcl
pop
sub
movsl
adc
mov
sub
xchg
mov
in
push
add
addl
add
sub
jno
ljmp
add
pop
cmp
xchg
sbb
xorl
js
test
mov
add
loope
movsl
test
sbb
test
loope
mov
xor
dec
sub
jmp
inc
insb
fdivl
pop
pop
xchg
mov
mov
adc
imul
pop
ret
inc
ds
cmp
sbb
push
mov
rcll
pop
inc
mov
fisubs
push
push
imul
mov
cmp
jbe
push
std
xchg
addl
lds
adc
fs
js
xchg
pop
xor
push
cmp
cmp
push
jbe
mov
jl
pop
or
dec
push
inc
mov
aam
dec
aas
clc
inc
xchg
addr16
popf
mov
add
adc
test
pop
fprem
jb
add
mov
push
aam
and
mov
sbb
pop
inc
inc
int3
sbb
movsb
jg
sub
sub
xor
into
stos
jne
in
xchg
rcll
or
push
jle
stos
sbb
cmp
lds
push
jmp
adc
jns
jmp
inc
push
cmp
and
bound
add
jle
inc
fadds
xor
idiv
fs
mov
xor
in
fisubrs
jne
push
xchg
dec
jbe
and
mov
adc
cli
scas
add
push
xorb
sahf
mov
mov
push
sahf
sub
mov
cmp
push
fistl
dec
mov
out
aaa
test
aaa
jbe
es
ja
xchg
sbb
aas
and
frstor
out
clc
mov
outsb
push
pushl
icebp
and
mov
cmp
push
mov
sbb
xchg
in
or
test
add
cmp
or
sub
ljmp
das
mov
test
std
inc
popa
lahf
fsts
stc
pop
dec
fstpl
sub
pop
pop
lcall
xchg
popf
test
mov
xor
adc
pop
pop
pop
pop
movzbl
pop
shlb
cmp
aaa
cmp
fists
push
inc
stos
stos
sub
cld
into
pop
xchg
rorl
jne
fsubrp
xor
fiadds
rcrb
movb
sti
das
call
cmpb
rcr
add
js
push
adc
pop
cmpsl
push
cmp
out
dec
mov
cmp
jns
cmpsb
cld
std
in
fs
sbb
mov
div
and
mov
ljmp
fld
lock
cmp
mov
mov
push
mov
lds
rorl
and
iret
imul
fwait
std
cli
mov
dec
push
pop
insb
pop
inc
jno,pt
adc
sub
or
mov
sahf
fwait
or
xchg
shrl
dec
mull
pop
xchg
movsb
xor
je
mov
insl
outsb
mov
popa
sbb
sbb
pushf
daa
or
aas
out
mov
int3
cmpsb
jecxz
sub
pop
outsl
sub
sbb
ret
fucomp
cmp
loop
shll
add
push
ja
idivb
adc
ret
sti
in
mov
sub
push
ret
mov
insb
out
rcrb
dec
push
jo
or
push
sub
fidivl
inc
xchg
mov
sub
xorl
jo
test
in
xchg
iret
or
inc
mov
and
es
cmp
or
je
cld
and
adc
adc
es
in
sub
adc
mov
add
enter
and
cmc
aas
rcrl
sbb
xchg
mov
je
lcall
pause
js
testb
inc
out
jnp
frstor
and
fcmovnbe
les
pop
test
ja
js
jmp
es
pop
addb
in
inc
push
mov
xor
int
pusha
xchg
mov
inc
inc
xchg
adcl
nop
dec
ljmp
andl
sub
ror
ss
shl
lods
xor
cli
mov
dec
fsubp
decl
ljmp
xor
sti
bound
dec
cmp
insl
or
add
add
out
mov
xor
cmpsb
sub
sub
adc
in
out
dec
sbb
das
mov
pop
sahf
sub
sti
test
mov
mov
cmp
mov
add
jmp
mov
imul
inc
gs
orl
and
cmpsl
jbe
dec
mov
jo
cmp
push
out
cs
and
dec
imul
add
or
outsl
inc
push
pushf
arpl
js
add
addl
ror
aad
and
add
cmpsb
imull
adc
or
lret
decb
xchg
movzbl
jne
subl
jns
and
adc
test
pusha
lahf
xchg
inc
mov
lds
push
jbe
or
daa
shlb
sbb
hlt
adc
addr16
jb
inc
ficoms
mov
sub
hlt
cmp
ljmp
fcoml
mov
adc
xchg
jle
test
rol
inc
push
int3
pop
outsl
lods
movsb
call
xchg
out
mov
mov
test
testl
mov
xor
mov
icebp
xor
out
xor
push
dec
sbbb
push
adc
jne
push
push
roll
mov
sbb
das
mov
mov
cmp
jecxz
loop
cmp
and
push
arpl
mov
lods
jb
and
repz
pop
sub
push
pop
cmp
jne
ret
and
clc
cs
outsb
lea
shll
out
mov
aam
into
pop
cmp
lods
dec
jp
xor
xchg
popf
shlb
cmp
call
push
push
ret
cmpsb
in
jae
outsb
subl
add
outsb
cmp
or
mov
mov
inc
dec
push
data16
pop
rcll
xor
jae
in
lcall
insl
psubq
push
jge
pop
sbb
jmp
les
jns
inc
repz
inc
int
inc
adc
jle
and
fsubrs
mov
cmpsl
push
je
stos
imull
pop
dec
cmp
ljmp
pop
push
mov
andb
xchg
add
nop
dec
lret
lahf
mov
test
mov
push
decl
dec
mov
or
pop
ja
jae
xchg
fldcw
xchg
xchg
bound
inc
in
and
sbb
add
loope
or
rcll
loopne
out
test
pop
mov
fbld
int3
lret
xor
shlb
cmp
mov
mov
mov
xor
inc
xor
pop
lea
add
push
jno
sbb
insl
insb
repz
xchg
mov
fs
xchg
xchg
lahf
jo
int
rolb
xchg
outsb
sub
mov
mov
mov
or
cwtl
dec
add
jno
jle
std
pop
push
jmp
stos
mov
in
adc
loop
les
jb
out
testl
push
fsts
test
std
or
out
cmc
ror
push
shrb
push
mov
stc
jbe
cmpl
stos
shrl
xchg
pop
push
arpl
mov
popf
addr16
mov
mov
mov
mov
leave
lock
fwait
sbb
pop
ret
xor
aad
leave
rclb
out
dec
inc
cltd
mov
popa
int3
jnp
mov
jo
fdivr
scas
into
data16
lea
in
or
add
inc
sbb
cltd
mov
and
cmp
pop
mov
les
xorb
hlt
repz
stos
clc
andb
adc
push
addr16
iret
add
leave
je
scas
push
xchg
repnz
mov
mov
jle
shl
sbb
mov
lahf
or
movsb
inc
int
sub
mov
inc
into
xchg
stos
xchg
cmpsl
stos
call
je
pop
js
cld
pop
inc
lret
outsb
xchg
lret
jmp
js
outsl
jmp
mov
cmp
jns
pop
sbb
fucomp
mov
sub
cmpsl
mov
and
push
sahf
sti
out
fdivrl
push
push
fcomp
mov
sbb
cli
jp
jbe
sub
stc
cmp
xor
sbb
jns
adc
cmp
add
pusha
jecxz
cmp
pop
test
xor
xchg
fildl
popa
jnp
out
insb
in
fdiv
xor
fwait
push
lret
stos
out
cs
es
jo
mov
roll
ljmp
xchg
jae
sbb
mov
negl
dec
arpl
xor
mov
rolb
pop
add
fdiv
nop
mov
stos
dec
pushl
xor
in
lret
test
fisttpl
jbe
mov
enter
mov
xor
shlb
and
stos
pop
pop
sub
test
adc
cmp
cmp
dec
aaa
mov
jle
outsl
inc
aad
mov
out
dec
mov
mulb
mov
adc
mov
pmaxsw
mov
lock
xchg
push
push
sub
aaa
sti
push
cs
mov
sti
cmp
dec
mov
inc
inc
jbe
pop
test
pushf
repz
inc
push
push
push
push
xor
lea
sub
outsl
leave
cmp
lcall
arpl
dec
and
push
adc
ret
scas
add
std
xor
xorl
adc
int
jge
dec
cmp
add
adc
push
into
adc
jno
or
or
or
jbe
jbe
jae
add
and
jns
sbb
push
loope
fs
pop
cmp
imul
rcr
shlb
or
movsl
arpl
cltd
mov
jns
lret
fucomip
out
push
ss
mov
xchg
mov
adc
scas
or
pop
jno
jge
jl
add
pusha
or
xchg
loope
sub
pop
js
pop
js
jbe
icebp
adc
mov
pop
int3
pop
sub
cltd
flds
ret
pop
pop
mov
cmp
push
push
lret
sti
add
or
pop
cmc
lcall
jb
ljmp
bound
ljmp
adc
fs
mov
sbb
pop
mov
sti
roll
shrl
mov
push
loop
pop
xchg
jo
je
movsl
jg
shl
push
xchg
cltd
in
mov
enter
or
mov
repnz
adc
pop
mov
insb
outsb
adc
and
dec
mov
ljmp
add
push
outsb
sub
dec
jmp
sti
popf
xor
push
cwtl
pop
sub
add
call
pusha
ds
mov
out
jle
loop
mov
pop
clc
mov
popa
mov
jns
inc
xchg
hlt
je
sahf
mov
in
dec
sub
ss
xor
fs
mov
mov
mov
mov
int3
sub
adc
and
loopne
loop
mov
push
leave
cmpsb
pop
lods
add
repnz
mov
test
and
sbbl
test
mov
dec
jae
inc
push
pop
orb
rol
lods
cwtl
ljmp
bound
ds
push
lret
andl
xchg
mov
mov
fbstp
xchg
jb
jecxz
iret
insb
push
cmc
mov
lcall
mov
mov
xchg
jo
push
push
pop
fsubr
test
testb
cs
cmpb
test
in
ja
xor
test
inc
xchg
stos
into
jb
and
cmpsb
aad
jno
lods
push
out
or
mov
scas
or
in
xchg
dec
jmp
imul
push
mov
pop
negb
cmp
mov
mov
les
sbb
ds
jbe
clc
adc
gs
mov
repz
xor
notl
mov
fdivp
call
imul
jle
dec
js
lahf
adc
inc
stos
and
gs
jle
jo
inc
xlat
mov
push
ja
mov
mov
das
jnp
mov
out
insb
mov
sahf
fs
ds
iret
mov
push
and
xchg
mov
mov
dec
jp
sbb
and
mov
cltd
cmpsb
xor
jg
dec
mov
sbb
ss
cmpsb
movsb
inc
cmp
loopne
mov
dec
or
mov
jecxz
cld
jecxz
lods
xlat
or
mov
and
or
nop
gs
mov
mov
mov
jp
int
jp
cs
test
inc
xchg
push
sti
sub
mov
cmp
stc
mov
insb
sbb
rclb
repnz
in
jecxz
out
push
add
dec
out
mov
xor
cli
rolb
mov
bnd
stos
scas
dec
and
jmp
sub
sbb
push
pop
lds
or
and
jnp
push
neg
arpl
add
outsl
inc
imul
sub
jb
pop
mov
loop
inc
push
ret
sbb
adc
push
adc
or
xor
popf
mov
faddl
fiaddl
pop
or
adc
xor
lret
lret
dec
and
xor
pop
cmp
ror
sti
outsb
scas
sub
jbe
push
pop
mov
pop
arpl
icebp
test
data16
nop
xchg
adc
dec
out
ja
push
or
pop
xlat
loop
and
and
xchg
shl
stos
pop
je
ficompl
adc
mov
jmp
lds
inc
mov
mov
sbb
pop
xor
pop
jle
xorl
adc
bound
adc
leave
or
cli
imul
mov
push
push
std
mov
and
cwtl
out
sahf
mov
das
add
repnz
pushf
and
fnstenv
orb
mov
mov
ss
xchg
sbb
lds
jmp
cmp
pop
fnstsw
addb
imul
pop
mov
inc
repz
clc
rcr
or
inc
xor
pusha
pusha
mov
xor
jbe
xor
push
mov
and
xchg
loope
push
cmc
push
cld
xchg
lock
push
pop
pop
adc
pop
mov
mov
adcb
scas
in
mov
inc
test
andl
adc
sub
cmc
divb
xchg
and
lahf
popa
jo
or
shll
mov
inc
loopne
pop
aaa
pop
sbbl
clc
dec
cs
mov
dec
push
adc
ficoml
mov
in
lea
ljmp
shl
or
jb
cmc
incl
scas
iret
and
add
leave
push
je
lret
enter
xor
push
xor
cmp
mov
test
jbe
test
pusha
in
lods
push
pop
filds
out
inc
mov
leave
sti
pop
adc
adc
aas
or
stos
xchg
lcall
and
cs
popf
push
daa
dec
fwait
mov
mov
jb
mov
add
push
int
lret
shl
subb
test
jle
popa
jp
xchg
mov
jnp
xchg
jl
daa
mov
and
hlt
cmp
out
outsl
sub
lds
cmp
mov
mov
into
mov
xor
das
rorb
lock
cmp
push
mov
and
rol
adc
repz
hlt
and
mov
jbe
sub
sahf
lret
lock
rcll
les
push
push
mov
movsb
aas
bound
repz
leave
push
mov
test
lcall
insb
mov
lret
pop
outsl
add
ljmp
xchg
scas
jae
cwtl
pop
fistpl
bound
sti
mov
mov
insl
sarl
sub
into
fisubs
in
fcomp
sbbl
mov
mov
std
movsl
aas
data16
xor
fsubrp
sub
sub
xor
mov
pop
movb
fsqrt
leave
shll
mov
jecxz
lods
mov
fiaddl
push
stos
xor
push
or
repnz
mov
rolb
stos
sarb
mov
push
rorl
lea
test
outsl
pop
dec
mov
or
imul
push
inc
orl
xor
sub
jmp
inc
push
lahf
xor
popa
pop
xor
add
movsl
adc
icebp
push
xchg
cmp
repz
dec
jns
mov
xchg
push
lea
sub
xorl
std
aas
andl
inc
xchg
sub
push
adc
shl
add
sbb
lret
add
jge
and
lods
loopne
push
scas
ljmp
jns
xchg
sub
outsb
mov
stc
jmp
push
mov
inc
xor
out
add
dec
loop
ljmp
fcoml
mov
rcrl
add
push
in
cmpsb
xchg
out
adc
jne
rclb
push
and
iret
jb
cmp
jp
rclb
rolb
nop
jns
lret
add
fcoms
ss
inc
test
cmp
mov
rcll
popa
je
xor
jle
rcrb
enter
mov
xchg
mov
int3
repz
and
out
lahf
call
sbb
loopne
mov
mov
cmp
inc
cli
orl
jo
pop
dec
adc
push
leave
test
out
std
mov
and
fwait
out
push
mov
lds
pop
mov
dec
and
das
xchg
int
xchg
pushf
stos
mov
ret
test
mov
out
stos
jle
js
hlt
dec
push
out
add
pop
inc
jge
rclb
sbb
dec
movsl
and
pop
scas
sub
xchg
xor
cmp
lret
insl
pop
xor
shrb
lcall
xchg
lahf
cwtl
lcall
cmp
adc
dec
mov
mov
push
sub
outsb
pop
xor
shrl
xor
sahf
lods
lret
pushf
shll
outsb
gs
and
scas
stos
inc
xchg
sahf
fistl
js
lahf
xchg
inc
pushf
in
pushf
call
loope
je
and
mov
sbb
mov
dec
test
pusha
inc
out
xchg
add
sub
push
cli
test
sahf
cmc
shll
mov
test
add
push
insb
cmp
jmp
int3
fcmovu
mov
loope
out
pop
xchg
sbb
jmp
and
mov
in
mov
lock
cld
and
jmp
iret
ja
mov
inc
push
ret
repz
sbb
mov
push
mov
dec
in
jae
push
in
cmp
mov
dec
fdivrl
jecxz
jge
mov
repnz
stc
mov
sub
mov
sbb
xchg
pop
addl
inc
in
lock
mov
enter
lahf
rorl
stos
or
jle
addr16
push
shrl
sub
cltd
mov
mov
push
jne
outsl
call
cmp
pop
and
and
imul
mov
mov
and
out
push
push
mov
inc
iret
insb
arpl
lret
ret
aaa
dec
jl
xor
pop
or
movsb
aaa
inc
mov
bound
and
stos
subl
mov
je
push
sub
arpl
test
mov
cmc
push
push
sbb
mov
add
in
cwtl
and
jb
xchg
out
into
push
inc
lret
pop
inc
pop
insb
ror
inc
fsubrl
jle
test
sbb
ljmp
clc
cmc
sub
pop
sarl
ret
mov
add
mov
push
cmp
fistl
ds
sub
or
fcompl
jge
lds
popf
jnp
fnstcw
dec
xlat
add
or
mov
cmp
sub
fiaddl
xor
add
dec
xor
int
leave
jge
ret
add
mov
sbb
jp
sbb
in
xchg
fistpl
fstl
insl
lahf
jne
xchg
pushf
lea
fisubs
pop
dec
xchg
out
clc
repnz
add
insb
mov
rorl
dec
mov
cwtl
into
mov
jle
insb
mov
inc
lods
mov
lods
nop
sub
mov
inc
push
adc
mov
movb
out
popa
xor
mov
in
lret
orb
dec
fs
pop
dec
cli
lret
iret
jmp
pusha
sub
frstor
xchg
mov
push
test
test
push
xchg
mov
mov
fnsave
pop
nop
lret
out
mov
aad
push
xchg
inc
loop
into
ret
dec
cmp
in
pop
imulb
pop
inc
cld
mov
xchg
xor
lds
adc
testb
mov
adc
xor
int
les
aad
pop
ret
xchg
js
and
shl
sub
mov
push
and
adc
cmp
cli
jb
into
cmpsl
rcrl
xchg
xor
cltd
cmpsb
xchg
jns
call
jae
mov
aaa
sbb
adc
and
sub
test
scas
mov
inc
cmp
cwtl
std
xchg
insb
ret
pop
fsubl
sub
inc
sub
int
test
sub
add
jmp
sbb
dec
fwait
or
addr16
inc
mov
in
lea
adc
xor
in
fcoml
add
xlat
dec
xor
mov
mov
lea
pop
inc
cmp
test
push
and
gs
push
in
fwait
sahf
xchg
push
movsb
cmp
test
jo
sbb
popa
dec
data16
stc
inc
inc
xor
cmp
fstps
ljmp
ds
aad
stc
loop
insl
pop
mov
push
xor
cmp
and
mov
mov
cmp
mov
jecxz
enter
or
test
add
or
sbbl
bnd
lahf
mov
mov
lods
loop
mov
lods
out
loope
dec
jge
jo
sub
in
sub
xor
lea
or
lods
xchg
das
or
xchg
add
or
ja
rolb
dec
sbb
flds
cltd
imul
repz
test
ret
xchg
jno
mov
adc
outsb
or
fs
jmp
and
test
out
add
sbb
repz
sahf
sub
pop
adc
adc
jecxz
punpckhwd
sysret
adc
popa
jle
fcmovb
or
aaa
mov
pop
fisubrl
dec
jp
bound
mov
inc
pop
pop
add
mov
push
in
jge
cmp
mov
aam
scas
incb
cwtl
lock
pop
mov
sub
mov
xor
jae
in
ss
cli
push
cmp
mov
std
lds
lret
fisubl
fcmovbe
inc
les
or
xchg
mov
gs
xor
out
mov
push
ret
ss
fiaddl
push
add
lret
iret
mov
lcall
fmul
mov
add
sub
inc
sbb
push
sub
jg
out
mov
jmp
inc
sbb
dec
pop
hlt
xchg
test
inc
int3
movsb
mov
push
aad
xchg
popf
out
in
fsubrl
push
mov
xchg
loopne
nop
pop
test
mov
cwtl
or
mov
or
sub
sbb
jle
pop
lret
or
orb
push
mov
ret
pop
xor
xorl
inc
sbb
mov
fs
dec
inc
push
ret
lock
jns
xchg
aaa
in
jo
stos
popl
ret
adc
mov
sbb
xchg
adc
inc
pop
mov
mov
or
cmp
mov
push
sbb
mov
clc
fs
sbb
out
and
mov
out
inc
or
mov
or
mov
les
push
xor
out
cmp
xchg
fsubs
mov
pop
inc
pop
pop
mov
sarl
pop
loope
pusha
or
shll
xorl
faddl
push
xor
test
lahf
lock
and
pop
mov
adcb
ds
cli
in
jns
jecxz
test
and
sub
fcmovb
mov
lds
xor
push
ss
std
repnz
fwait
xor
sub
mov
sbb
jl
push
xchg
jb
cs
insl
inc
pop
jbe
in
aas
int3
push
push
sahf
test
dec
cmpsl
cmc
xchg
lods
fsubr
popf
sbb
jmp
testb
stc
xor
mov
add
ret
lret
imul
lods
in
dec
stc
sti
pop
mov
cmc
lock
adc
push
push
in
and
add
aam
test
repz
mov
in
xchg
data16
inc
mov
std
pusha
xchg
mov
in
jmp
mov
shlb
jb
icebp
dec
ds
add
gs
xchg
cmpsb
adc
inc
jae
inc
dec
adc
push
lcall
std
sbb
adc
cli
lods
outsl
push
push
sbb
xlat
lahf
xchg
repz
loopne
lret
sarl
mov
ficoms
jle
cmp
adc
add
jg
les
ret
xchg
pushl
cmpsl
pop
subb
mov
mov
push
mov
in
xor
imul
xchg
out
xor
xchg
stos
leave
cmp
jb
add
pop
pop
pop
jp
in
mov
or
insl
pop
pop
pop
loope
fs
clc
pushf
adc
repnz
lea
adc
popa
imul
or
out
xchg
jnp
data16
mov
iret
push
aaa
test
dec
mov
add
les
popa
inc
jne
lods
aam
push
and
ljmp
sub
cmp
into
push
and
and
xor
cltd
jbe
push
and
xor
leave
test
and
cmpsl
dec
in
jb
adc
call
rcll
and
fwait
adc
fisttpll
insb
andb
pop
adc
and
jb
popf
sub
in
inc
shll
mov
cmp
pop
push
xchg
adc
pop
outsl
add
sbb
loop
das
jmp
movsl
xchg
lds
sub
or
sub
mov
pop
call
imul
mov
roll
insl
push
cmp
aas
push
fwait
cmp
lret
push
cmp
sti
mov
mov
pushf
xor
sub
push
mov
aaa
rcl
lahf
roll
popa
jnp
sbb
xor
mov
lea
imulb
imul
and
jmp
add
sbb
sub
xor
push
not
ja
xchg
mov
sbb
enter
out
dec
jae
ret
ja
inc
jg
mov
add
dec
fcomps
jmp
cmp
inc
add
xor
test
jae
and
cmp
insb
fidivrl
jmp
jp
pushl
in
fnstcw
sbb
bound
add
jne
shrl
das
pop
pop
jb
mov
pop
flds
xor
inc
pop
cwtl
out
cmp
loope
dec
lods
cmpsb
ds
mov
pop
in
inc
js
or
push
jg
leave
hlt
sub
cmpsl
dec
leave
ja
fdivs
jg
pop
sub
in
loop
pop
ja
sub
inc
fs
push
mov
outsl
repnz
imul
std
cmc
xlat
test
dec
orb
xor
jne
js
fwait
add
scas
bound
stc
cmpsl
in
mov
pop
lods
nop
inc
xchg
fldenv
push
push
mov
push
fldl
sbb
pop
addl
insb
andl
int
or
adc
jae
popa
adcl
push
cmpsl
dec
in
lea
adc
bound
popa
ss
add
push
and
push
jnp
ret
popf
pop
ja
loopne
inc
out
outsb
fs
xor
pop
insb
in
popf
enter
out
pop
mov
mov
fcompl
das
cs
sarl
fistl
sti
fisttpll
jne
cmp
out
add
enter
or
scas
mov
cld
sbb
pop
jnp
out
sub
add
inc
inc
lret
rorl
notl
jl
mov
jb
test
add
jo
cs
js
xchg
cs
pushf
push
test
jmp
daa
cmp
xchg
hlt
pop
cmp
mov
imul
shl
loop
outsb
cmp
add
fcomps
loop
inc
jo
in
lock
push
ljmp
dec
lods
in
inc
push
jge
or
xor
lret
ficoms
add
and
dec
push
cmpsb
mov
cmpl
jns
dec
mov
xchg
out
rol
mov
setbe
ret
dec
add
dec
and
sub
mov
cmc
jmp
fsubs
sub
fwait
sub
imul
xrelease
out
shl
jmp
enter
stos
insb
arpl
aad
sahf
xchg
sub
jo
cmpb
push
dec
mov
aam
loope
fmul
lret
loope
das
arpl
add
xlat
call
jne
stos
mov
inc
fidivl
cli
fdivr
test
outsb
test
in
fiadds
xchg
add
pushl
nop
adc
jl
insl
push
ds
add
test
and
lret
inc
sbb
jb
push
aaa
mov
lret
cmp
jge
sti
iret
ds
mov
fldt
lods
in
xchg
mov
add
xor
enter
add
int
jns
flds
rorb
jg
xor
addr16
scas
add
push
cmp
push
push
es
mov
push
pop
dec
fs
jo
xchg
hlt
add
mov
pop
push
jg
ja
sbb
xchg
or
pop
adc
and
add
cmp
out
adc
lock
repnz
popa
mov
test
shrl
stc
pop
or
ret
pop
pop
roll
repz
mov
mov
out
std
icebp
cmpsb
test
sbbb
pop
rorl
pop
lcall
arpl
movsl
dec
xor
addr16
pop
push
pop
xor
sahf
dec
dec
xchg
push
inc
shll
aaa
sub
mov
addb
and
dec
jne
mov
xchg
jp
das
pavgb
popf
push
jge
fstpl
dec
mov
sbb
stos
ljmp
mov
in
push
mov
stos
icebp
cmpsb
or
inc
jge
movsl
aam
xor
pop
insl
inc
stc
cmp
or
push
push
call
insl
imul
xor
adc
jbe
inc
push
mov
push
sti
mov
cmp
jb
sub
iret
je
aad
ss
outsb
mov
mov
sub
movsl
jmp
inc
or
mov
xchg
sub
lahf
insb
mov
test
mov
cmp
into
dec
xor
out
jno
xor
loope
popf
arpl
dec
add
test
jne
lock
dec
addr16
sbbl
xor
xchg
aas
cmpsb
mov
sub
das
in
mov
add
decl
push
xchg
cwtl
cmp
fdivs
sub
push
mov
mov
aas
out
jb
mov
mov
fsts
fisttpl
jmp
jmp
dec
push
or
aad
push
jae
subl
mov
mov
sahf
aad
pop
ss
lea
jl
sub
mov
pop
lcall
insl
or
hlt
push
mov
sti
adc
dec
push
xchg
stos
cmp
out
imul
jmp
pushf
inc
lret
xchg
and
sub
stc
dec
in
mov
mov
sahf
or
iret
ljmp
pusha
lock
lea
xor
pop
shrl
gs
pushf
testb
pushf
inc
mov
sub
loope
scas
iret
js
xchg
adc
pop
dec
mov
jo
popa
lcall
add
pop
sbb
mov
scas
xchg
aaa
stc
daa
cmp
ret
push
add
jle
subl
inc
testl
jecxz
inc
jb
jae
cmc
sbb
fucomip
and
cli
mov
hlt
sbb
mov
popa
test
pop
or
scas
and
cmp
leave
repnz
popa
ds
jo
leave
std
jne
add
out
inc
in
xor
filds
inc
in
nop
int3
cmp
xor
mov
cmp
push
and
jle
add
shll
and
or
xor
push
dec
aaa
das
das
or
std
sub
xchg
pop
outsl
xchg
pop
in
mov
mov
mov
xor
js
mov
inc
lahf
test
nop
jle
les
fnstenv
push
mov
sub
cmp
mov
xlat
push
ljmp
gs
je,pt
xor
xchg
sub
mov
xchg
xchg
jmp
ror
pop
ss
aam
sub
mov
xchg
sub
ret
rcl
repz
add
shll
loope
addr16
cmpl
jns
mov
xor
lds
incl
dec
lahf
inc
hlt
clc
push
xor
mov
frstor
pusha
insl
xor
into
jbe
xor
cmc
repnz
mov
xor
push
sub
push
jb
repz
pop
sub
cmp
sbb
es
mov
push
jp
cmc
repz
mov
fs
inc
pop
fistps
inc
sbb
lret
arpl
jp
and
out
movsl
cmp
mov
mov
mov
sahf
ss
jbe
jmp
cltd
add
mov
sbb
pop
jns
inc
sub
pushf
jl
aad
daa
shlb
dec
mov
fiadds
idivl
push
jge
and
jnp
roll
push
jae
inc
daa
ffreep
pusha
ljmp
cmovle
movl
addl
cmpl
jae
scas
ja
pop
das
es
lods
clc
dec
ss
loopne
pop
cli
int3
out
pop
rorl
mov
dec
cmpsl
sbb
pop
pop
sub
sub
dec
in
in
and
mov
sub
xchg
repz
movsl
or
xchg
or
jne
test
stc
jg
push
xchg
fsubl
push
es
xlat
cmp
inc
mov
dec
sub
mov
repnz
aas
push
jbe
mov
inc
xor
xchg
outsb
pop
fbld
jle
mov
xchg
test
push
rcr
leave
jb
in
add
dec
mov
daa
xchg
cmp
fxch
pop
mov
das
xchg
or
sub
pop
mov
sub
into
iret
lea
cld
jg
xchg
xor
sbb
fcompl
cmp
insl
push
push
xchg
dec
or
cwtl
sub
ret
stc
movsb
xlat
mov
jge
mov
jb
jmp
pop
dec
mov
jmp
adc
mov
or
lds
jbe
xor
loopne
je
dec
scas
in
fildll
dec
into
hlt
insb
adc
cmp
mov
js
sbb
std
mov
div
movsb
pop
mov
adc
fcoms
push
call
xchg
pop
xchg
mov
xor
lock
sar
mov
mov
pop
rorl
push
nop
in
es
xchg
inc
dec
mov
cli
add
mov
lods
test
sarb
push
call
xchg
shll
xchg
fidivl
sub
dec
sbb
das
out
jle
or
sbb
mov
sbb
loop
mov
push
mov
mov
jae
arpl
sbb
or
stos
and
psubq
xorl
ljmp
add
dec
jmp
in
aad
ret
or
dec
push
push
into
adc
out
mov
ret
popa
mov
cmp
xor
jg
push
test
adc
ljmp
cli
xchg
pop
push
mov
jg
fdivrl
out
fdivr
inc
out
xchg
movl
arpl
clc
and
cmc
mov
jmp
ja
push
hlt
dec
push
add
xchg
dec
insl
mov
xor
dec
es
in
or
cltd
imul
pop
fmuls
cli
push
or
cmpsl
adc
negb
sub
pop
xchg
out
mov
insl
adc
loope
cltd
pop
xor
movsl
negb
int3
xchg
inc
xchg
in
addr16
ss
into
jns
int3
adc
and
inc
add
jl
in
movsb
dec
ss
movsl
ljmp
movsb
or
clc
inc
inc
outsb
lea
and
xchg
pop
outsb
push
xchg
movsb
xor
cltd
mov
hlt
cltd
push
into
lret
aas
out
push
inc
dec
mov
cmp
sub
addr16
mov
stc
lods
mov
pop
mov
jp
and
rorb
pushf
push
dec
or
add
mov
xchg
jecxz
sbbl
mov
daa
add
shll
dec
add
sub
dec
mov
scas
out
sbb
xchg
fstp
je
scas
push
add
out
jmp
sti
mov
dec
insb
sbb
jnp
adc
pop
adc
cmc
adc
incb
dec
out
or
insb
inc
pop
push
les
adc
rcrb
cmp
jmp
fwait
dec
in
fs
jl
les
add
sbb
lock
jp
jae
mov
jnp
jmp
lret
shr
mov
enter
stos
icebp
sub
cs
data16
cmp
xchg
mov
in
cs
mov
loop
leave
mov
test
xor
orb
and
dec
arpl
mov
sti
inc
mov
inc
or
scas
push
lock
dec
xor
in
ljmp
push
rclb
in
jp
test
inc
jae
rcrl
sub
jne
in
sbb
xorb
xchg
subb
cmp
mov
or
add
inc
cmp
sets
faddl
inc
xchg
jge
lret
xchg
xor
xchg
test
jns
adc
fdivl
cli
insl
push
pop
scas
fs
sub
scas
cld
in
sbb
pop
mov
insb
or
mov
xchg
xor
cld
sbb
mov
decb
imul
daa
cli
bound
cmp
shrb
push
fimuls
lock
mov
mov
into
icebp
add
scas
xor
mov
inc
adc
mov
jo
ficoms
pop
lret
adc
xlat
jnp
push
lahf
mov
aaa
lret
mov
sub
pop
scas
and
lods
sbbb
in
lods
cli
push
sub
jge
push
pop
pop
lcall
negb
push
and
popf
add
xchg
sub
addl
mov
mov
add
hlt
pop
cli
push
nop
dec
das
xchg
out
repz
jne
shrb
mov
clc
mov
mov
pop
adc
mov
adc
in
stc
and
inc
ljmp
shrl
or
jmp
fisubrs
lahf
sbb
lea
or
inc
and
sbb
push
iret
test
push
dec
shll
add
pushf
inc
adc
mov
xlat
outsl
scas
bound
pop
icebp
mov
or
cld
fcomi
add
mov
jae
push
ja
stos
fwait
in
push
shll
pushf
cmpl
aaa
adc
xchg
ffreep
ja
scas
fbstp
pop
inc
decl
test
test
outsl
ds
pop
loope
jnp
jmp
fdivrl
jmp
gs
leave
imul
aas
test
imul
jb
fbstp
hlt
aam
and
dec
mov
add
fxch
popf
xchg
insl
dec
mov
or
out
int3
icebp
dec
mov
and
xor
imul
dec
dec
pop
sbb
jae
mov
cld
mov
pop
pop
mov
lock
cli
outsl
lcall
sub
lods
or
pop
mov
sbb
add
or
jmp
fildll
les
mov
out
add
jbe
mov
xchg
test
jo
addl
sub
sarl
adc
test
sub
adcl
inc
jp
aad
rcl
loopne,pn
js
lret
mov
inc
sub
push
scas
imul
je
nop
sti
lahf
aaa
dec
je
or
pop
addb
movsl
xchg
jae
ss
mov
mov
cmp
lock
push
out
cwtl
lret
add
sbb
test
jecxz
das
inc
cld
lret
arpl
push
push
test
inc
fdivs
je
jl
push
mov
loopne
rorb
clc
mov
loope
cmp
pop
fdivrl
scas
push
mov
add
scas
mov
pop
movsb
rcll
sub
stc
xor
gs
das
xlat
jge
mov
jb
mov
mov
or
les
out
sbb
cmp
inc
pop
pop
imul
rcll
push
sub
into
faddp
lret
sbb
push
or
imulb
fidivrl
mov
jnp
scas
sub
loop
xor
cmp
inc
jbe
lods
in
xlat
cmp
test
out
cld
jo
sub
mov
cmp
sub
loope
mov
and
push
pop
jmp
repz
aaa
xlat
arpl
adc
outsb
and
and
out
xor
mov
pop
xchg
subb
icebp
out
out
cmc
jbe
sbb
dec
loopne
mov
imul
xor
mov
sbb
rcrb
add
inc
lcall
xor
les
sbb
cmp
das
push
mov
insl
inc
fcoms
stos
lock
jmp
fiadds
iret
dec
js
repnz
lret
push
jp
sbb
jno
pop
lods
inc
jl
orl
in
jl
adc
inc
push
jmp
ljmp
inc
in
mov
pop
lea
lds
add
adc
aas
push
pop
push
adc
add
mov
sub
adc
xor
aas
add
lods
xchg
add
rorb
std
loop
or
in
and
sbb
jp
sbb
outsl
sbb
xor
mov
pop
mov
out
push
xor
gs
xchg
sub
mov
adc
push
dec
inc
in
das
pop
jns
mov
adc
stc
inc
das
call
sti
repz
xor
xor
push
dec
jnp
jns
fnsave
jmp
int3
inc
mov
frstor
scas
cld
cmp
stos
adc
mov
or
test
lret
jo
scas
data16
test
xor
push
pusha
insb
lret
orb
scas
rcrb
fdivrl
in
ret
jecxz
inc
jmp
cwtl
and
mov
xorl
xlat
nop
push
stos
cmp
sbb
pop
add
lock
aas
jae
icebp
popf
cmpsl
lahf
sub
jae
jb
sbb
adc
imul
pop
ljmp
ror
mov
loop
mov
fisubrl
cmp
fwait
sti
mov
inc
lahf
adc
mov
std
adc
icebp
sarl
enter
lods
out
mov
inc
push
cmp
test
daa
mov
sub
inc
cmp
mov
push
arpl
or
push
sub
jno
push
inc
add
clc
add
or
mov
jne
and
or
mov
ljmp
insl
push
dec
cltd
aad
sbb
out
mov
or
fstl
and
fwait
xlat
jmp
push
movsb
sarb
fstpt
pop
pop
sub
cmc
insl
mov
aam
dec
jge
add
cld
sub
sbb
scas
push
repnz
rorl
cmp
loopne
testl
fsubrp
xor
test
pop
iret
pop
mov
out
fsubs
outsb
into
xor
call
aam
insl
dec
xchg
add
pop
clc
repz
add
mov
pop
dec
sub
mov
in
imul
xor
lahf
mov
add
dec
adc
int
fdivs
push
js
sbb
fldl
mov
out
lret
sub
inc
push
mov
mov
dec
rcl
mov
xchg
in
xchg
in
mov
aaa
test
jge
arpl
jle
aaa
fistpll
mov
js
es
rcrb
mov
jo
and
iret
cmp
push
popa
lods
or
mul
in
mov
ret
sub
int
pop
fs
sti
lods
packssdw
add
jnp
test
xor
mov
repnz
imul
ss
jnp
movsl
push
adc
pop
push
inc
in
mov
xchg
outsl
jno
lea
hlt
cmp
xor
and
es
adc
mov
fistl
jge
bound
fistl
sbb
and
lea
test
or
test
xchg
mov
shl
jmp
rolb
paddq
popa
dec
call
repnz
xchg
cmc
sub
outsb
add
dec
pop
mov
out
and
push
xor
mov
jo
push
bound
mov
loope
mov
xchg
mov
add
mov
or
ret
rcr
xchg
data16
fcompl
in
adc
cmp
insl
cmp
test
pop
sub
cmp
mov
mov
inc
add
and
or
mov
cwtl
cs
jns
mov
filds
data16
sub
in
add
mov
cs
jo
jb
push
mov
enter
cmp
add
ret
ds
faddl
aam
adc
dec
ret
mov
lods
pop
xchg
test
daa
imul
sub
filds
imull
scas
mov
gs
mov
sbb
in
mov
sub
pop
xor
jnp
imul
aaa
and
cld
mov
mov
or
inc
mov
movsb
stos
mov
jmp
insb
clc
aaa
test
loopne
lret
mov
nop
lds
out
pop
mov
in
lds
aaa
xor
xor
jo
or
jl
add
cmp
out
ja
mov
adc
xorb
or
and
jo
jp
pop
xchg
xchg
xor
movsl
mov
sbbb
mov
mov
popa
push
sbb
pop
pop
mov
push
test
stc
and
adc
mov
xchg
cmp
pop
imul
lods
mov
ljmp
dec
or
dec
push
int3
adc
and
shr
mov
jno
lea
das
mov
neg
sub
pop
xchg
js
push
or
pop
insl
insb
out
loopne
int3
sbb
sbb
push
push
dec
xchg
addr16
ja
or
adc
xchg
xchg
faddl
dec
xchg
jae
mov
jb
xor
add
outsl
cmpsl
jecxz
jp
shr
xor
xchg
sti
push
je
dec
jne
shll
lock
shl
lea
sub
cmpsl
xchg
pop
arpl
das
in
xor
aas
movsl
inc
cltd
xor
subb
mov
push
mov
mov
enter
pop
add
shr
cmp
push
pusha
push
aad
je
and
mov
loope
gs
aad
cmc
sbb
lahf
jmp
jae
ret
rcrl
sub
inc
pusha
pop
cmpsl
repz
pop
pop
jae
nop
cmpsb
cld
sub
mov
or
fbld
xor
scas
mov
add
into
cltd
push
lret
and
jne
mov
scas
jnp
sbb
insl
jno
js
push
pop
ret
repnz
inc
shlb
dec
add
psadbw
scas
jmp
ljmp
gs
insl
mov
cmp
clc
push
daa
cmpl
aaa
or
cmc
mov
mov
ljmp
xor
outsl
or
and
sti
push
mov
test
cmp
mov
leave
dec
daa
fcompl
in
mov
rcr
lret
pop
dec
data16
out
aam
movsl
es
mov
das
jnp
adc
mov
mov
cwtl
and
and
jo
xchg
sub
mov
mov
je
adc
dec
inc
dec
xchg
cmp
push
and
je
dec
and
stc
test
cmp
iret
out
add
dec
ss
jbe
movsb
add
testb
cmc
roll
lods
ret
ss
fstpl
fbld
daa
stos
adc
cltd
cmpsl
mov
mov
ds
mov
push
stos
cwtl
cmc
enter
das
sbb
xchg
imul
xchg
lds
fdivrs
ja
xchg
push
pop
inc
sub
adc
dec
cwtl
dec
repnz
cli
ficompl
xor
push
push
scas
jle
das
pop
pop
cwtl
jl
lret
or
push
sbb
xchg
pushf
repnz
add
xchg
xlat
loope
or
mov
mov
sub
sbb
lea
mov
jb
fstl
mov
stc
push
and
es
pusha
sbbb
mov
or
cmc
and
int
popa
fistpll
or
xchg
inc
data16
fistps
and
sub
cmp
pusha
and
test
pminsw
in
jnp
lds
outsb
xorb
jnp
movsb
mov
cmp
int3
shr
in
loope
jl
cmp
adc
xchg
rorb
push
cmp
gs
mov
sysenter
pop
popf
mov
mov
push
into
mov
or
or
movsb
lret
out
popf
xor
jge
jae
repz
negb
mov
sub
test
sbb
adc
popf
push
cmp
ret
daa
xchg
loop
inc
repnz
mov
rorb
mov
popf
mov
lods
fld
lock
xchg
dec
push
cmpsl
add
js
xor
repz
xor
gs
push
adc
out
loop
aad
stc
jmp
mov
mov
out
push
jecxz
and
pop
repnz
out
inc
or
in
pop
scas
dec
pop
into
push
jnp
cmpsb
xlat
push
daa
pop
in
leave
popa
and
adc
or
and
mov
or
hlt
or
lahf
mov
je
xlat
and
ja
lret
scas
movsl
les
mov
mov
inc
push
jnp
das
mov
xchg
fldcw
iret
jge
shll
jbe
leave
dec
in
sub
jp
sti
add
push
incl
imul
insb
mov
inc
adc
push
mov
xchg
fbld
inc
std
mov
jge
xchg
push
mov
push
adc
mov
ja
mov
scas
loop
stc
mov
into
dec
xor
mov
mov
into
add
dec
fs
cmp
repnz
stc
rol
stos
gs
sbb
stc
sub
test
mov
mov
mov
aaa
enter
ror
imul
mov
cld
out
mov
loope
aad
lds
mov
ljmp
mov
sbb
mov
adc
insb
mov
add
cmpl
pop
or
mov
mov
or
in
loopne
notb
and
mov
repnz
jge
aaa
ret
jae
lret
loope
xor
dec
pop
pop
and
mov
cltd
and
sarb
mov
sub
cmp
mov
setp
in
aas
adc
rcr
sub
enter
or
subb
nop
mov
push
adc
adc
adc
jg
jle
add
inc
jp
repnz
push
fistpl
repz
inc
out
push
pop
inc
push
into
push
ds
into
mov
dec
xchg
nop
sub
cmp
jbe
mov
inc
xchg
int
inc
int
cmpsb
clc
les
mov
lds
xor
loop
jg
dec
cmpsl
jnp
push
imul
jge
mov
jmp
or
bound
popa
enter
and
lcall
pop
dec
out
sbb
out
sbb
jnp
fstpl
adc
fnstenv
adc
inc
xor
out
dec
add
shll
rorb
ficoms
das
push
xchg
dec
push
popf
inc
mov
cmpsl
rcrb
jecxz
fadds
pusha
imul
gs
jns
jne
js
in
push
cmpsl
in
add
dec
pop
mov
sub
sub
mov
xlat
dec
xor
sub
xchg
xor
dec
jg
mov
test
cmp
les
and
push
test
cmp
inc
icebp
xor
and
xor
test
cli
cmp
pop
mov
jns
ja
shrb
test
mov
jle
pop
jnp
push
mov
aad
scas
andb
repz
adc
enter
roll
js
add
pop
mov
jo
add
mov
int
fcoms
les
loopne
mov
sbbb
in
mov
lcall
xchg
jle
sti
inc
or
pushf
sbb
pop
aad
adc
cmp
shll
cmp
inc
xchg
mov
dec
out
int3
pop
daa
call
mov
lret
int
or
fcoml
lcall
mov
jle
mov
xlat
and
cltd
push
in
cwtl
lret
push
add
repnz
lods
lds
aam
stos
push
inc
fiaddl
fsts
sbb
dec
inc
adc
inc
xchg
cs
dec
sbb
loop
jecxz
inc
mov
mov
cwtl
stos
inc
lods
dec
stos
pop
lcall
xchg
jge
std
mov
fucomp
movsl
inc
aas
mov
pusha
aam
inc
and
mov
mov
neg
or
fisubl
push
dec
add
lods
loop
and
lock
fs
out
shl
push
imul
rcl
icebp
aam
push
and
cwtl
pop
imulb
pop
insb
pop
popa
adc
mov
sbb
sub
jbe
push
sub
add
sbb
and
lods
cli
stc
or
std
cwtl
fsubrs
sbb
jmp
push
int3
lret
push
insl
pop
pop
shlb
jecxz
gs
out
mov
inc
cwtl
scas
mov
aas
adc
dec
pop
mov
xor
or
aam
mov
pop
ja
fwait
aam
xchg
enter
pop
push
aas
xchg
mov
mov
ljmp
mov
jnp
xchg
outsb
aam
cmp
xchg
sub
es
insl
call
lret
scas
xchg
sbb
jmp
cld
lea
cmc
mov
inc
cmp
mov
mov
pop
mov
popf
xchg
xchg
ficoms
out
add
and
in
mov
cmp
aaa
popa
or
dec
xchg
sbbb
fistpl
mov
fs
mov
std
cmp
mov
jmp
jp
mov
faddp
pushf
movsb
inc
repz
in
add
fisubs
lret
cmpsb
lret
mov
push
enter
out
int3
mov
cmc
orb
cs
in
in
call
or
sub
sub
mov
nop
add
mov
fmull
inc
or
dec
leave
je
add
es
loop
test
mov
mov
aad
push
cmp
mov
mov
scas
add
jmp
stc
out
add
mov
and
ret
cs
pop
pop
out
sahf
rcr
dec
hlt
mov
insb
push
push
orb
xchg
fisubl
in
fimuls
cwtl
add
cmpb
fwait
sub
insb
mov
inc
xor
fcompl
mov
mov
enter
mov
gs
mov
or
inc
fst
scas
stos
pusha
es
stos
push
inc
je
test
movsl
fdivs
out
and
mov
xchg
pop
ret
xchg
inc
mov
xchg
std
std
inc
inc
sbb
in
adc
cltd
int
mov
push
movsl
aas
mov
filds
outsl
lds
mov
xchg
movsb
mov
ljmp
xchg
pop
rorl
iret
push
dec
xor
add
inc
dec
rclb
pop
inc
das
mov
push
cmpsl
jmp
cmp
pushl
je
push
inc
mov
sub
xlat
jne
imul
sub
xchg
push
mov
pop
sub
rol
sarl
sbb
pop
pop
clc
push
mov
dec
dec
stos
inc
cmp
xchg
stos
xor
fdivrl
mov
adc
in
stc
das
or
inc
push
movsb
movl
push
rcrl
mov
or
sbb
test
cld
in
lahf
insb
adc
addr16
cwtl
lods
mov
mov
and
inc
subl
mov
jno
sarb
cmp
pop
leave
ret
sbb
hlt
dec
adc
mov
jbe
stos
ficoml
mov
push
popa
push
std
push
sahf
mov
out
out
sub
movsl
mov
out
sub
push
lds
push
sbb
mov
jns
test
inc
push
mov
add
int3
pop
stc
into
push
icebp
hlt
outsl
mov
sbb
xchg
mov
and
mov
int
je
xchg
aaa
lds
xchg
sarb
mov
xchg
add
jnp
mov
xchg
pusha
fildl
cli
and
pop
adc
ret
mov
xchg
movsb
jp
or
stos
ds
xlat
inc
rolb
xchg
dec
insl
push
push
cmp
xchg
add
pop
push
pop
mov
loop
jae
mov
out
or
pop
xor
xor
and
leave
mov
das
cs
push
pushf
sub
jg
mov
jb
ret
aad
sarl
pop
sti
adc
mov
xlat
jne
sub
sbbl
adcb
or
xchg
outsl
dec
and
out
out
mov
sahf
add
mov
test
scas
lds
xchg
inc
rcr
iret
stos
dec
insb
aas
fdivl
sub
es
push
and
loop
cmp
in
xor
pop
movhps
push
lock
pop
xor
ds
fldt
loopne
or
push
int3
pop
mov
cmp
sbb
add
jb
fcmove
mov
or
xor
and
sub
cltd
lods
jae
cli
or
xchg
push
lods
jmp
or
mov
fimuls
imul
std
adc
and
jmp
lods
into
gs
sub
xchg
mov
loope
mov
out
cld
lret
es
sarb
outsb
rorb
mov
cmp
add
jnp
jb
mov
fidivrs
in
aam
aad
jne
push
xor
mov
arpl
adc
adc
sub
lret
dec
imul
adc
and
xor
pushf
pop
mov
call
inc
pop
dec
xor
nop
pop
mov
xchg
sub
push
call
xchg
insl
out
sub
icebp
pop
or
cmp
pop
or
pop
data16
sbb
push
out
in
fidivrs
mov
sahf
loop
or
mov
sbb
mov
lods
sbb
sbb
inc
mov
pop
ror
insb
pop
je
mov
xlat
ss
data16
adc
push
cli
dec
inc
divb
mov
stos
inc
outsl
adc
jbe
pop
sbb
push
push
jle
std
xchg
mov
rorl
lods
int
add
or
aas
xor
xchg
sbb
and
pop
stos
imul
loop
mov
cmp
and
add
dec
orb
or
leave
mov
jb
push
sub
int
add
xchg
lock
popf
int
repz
xchg
cmpsl
inc
scas
fcoms
jp
clc
lds
xchg
pop
lcall
jl
push
cmpsb
mov
aas
sbb
addb
inc
pop
jle
hlt
inc
xchg
add
mov
mov
pop
test
sub
inc
pop
sbb
ljmp
push
pop
nop
fnstcw
jns
and
push
mov
adc
jg
rcl
fnstsw
inc
push
pop
jmp
mov
push
and
pusha
fld
push
daa
pop
out
and
pop
push
push
call
cmc
outsl
daa
cmp
or
je
stos
mov
and
mov
push
push
mov
mov
jl
cmp
xor
cld
lock
mov
inc
inc
xor
mov
ficomps
or
cltd
lret
adc
js
and
js
push
lods
sub
test
mov
inc
aad
jge
ret
pop
pop
adc
sahf
scas
out
addr16
stos
outsb
lea
jl
adc
dec
mov
je
fucomi
mov
xchg
add
test
pop
or
idivl
jle
xor
sbb
adc
in
outsb
mov
and
jge
out
pop
inc
push
inc
mov
leave
nop
xor
loopne
push
fldl
dec
dec
popa
mov
mov
fst
xor
in
adc
lods
mov
push
enter
or
mov
sbb
pusha
iret
push
mov
and
mov
mov
mov
fldl
jle
insl
clc
sub
aad
lcall
outsl
mov
mov
jae
xchg
dec
push
adc
mov
push
push
scas
adc
push
pop
cltd
lock
andb
call
pop
pop
dec
jle
dec
leave
sbb
mov
dec
sahf
dec
jp
mov
xchg
add
pop
sahf
inc
add
jbe
imul
mov
inc
dec
mov
mov
scas
ss
and
jg,pn
sbb
add
outsl
aas
sbb
push
push
sbb
fs
add
enter
push
push
nop
scas
inc
call
mov
xchg
scas
je
je
mov
arpl
jmp
nop
add
bound
int3
xorl
cmp
in
jne
and
jmp
loope
xchg
cltd
lods
adc
dec
pop
dec
dec
or
xchg
les
enter
pop
or
pop
cmp
nop
sahf
jbe
xor
aam
push
mov
add
ja
and
or
in
xchg
or
mov
inc
push
jp
lret
add
ja
jno
js
and
incb
lret
sub
sub
dec
and
rolb
pop
and
and
inc
jp
xchg
xchg
cwtl
and
out
ja
inc
add
jge
cltd
clc
iret
popf
and
andb
inc
arpl
jmp
inc
cmc
stos
imul
lahf
mov
or
pop
mov
sub
jl
insl
aaa
lret
or
inc
enter
mov
inc
out
or
es
sub
inc
subb
adcb
mov
lock
jle
inc
cmp
xor
pop
push
lods
mov
or
subl
shll
mov
lret
mov
add
mov
or
cmc
inc
out
sbbl
out
lahf
xchg
push
adc
lcall
pop
add
pop
outsl
pop
mov
and
mov
test
leave
jo
test
pop
aad
add
adc
push
push
dec
jecxz
popf
cmp
fcom
rcr
fwait
adc
loop
push
dec
mov
sarl
sub
pop
and
jb
mov
cmpsl
inc
xchg
int3
int3
jnp
push
add
faddl
jne
repz
mov
cmp
insl
sbb
fnsave
ret
sub
ror
pop
cmp
std
insb
add
repz
mov
mov
outsb
stc
cwtl
iret
inc
sbb
jp
imul
imul
xchg
mov
push
das
add
into
movsb
jns
loop
dec
mov
sbb
inc
mov
aas
test
cmp
loopne
mov
popa
aas
and
mov
test
cmp
fisubl
loop
in
push
dec
pop
jbe
jl
icebp
and
add
fsubl
jbe
pop
xchg
pop
jae
repz
outsb
lcall
xchg
or
mov
shrb
push
mov
mov
sub
mov
xchg
outsl
lock
fildl
lock
loope
into
add
sub
adc
mov
cs
nop
adc
pop
jmp
sub
push
xchg
xchg
std
in
daa
add
pop
pop
popa
cmp
sub
aam
xchg
inc
scas
aas
sbb
imul
jnp
sbb
mov
out
hlt
pop
add
ret
xchg
lahf
and
mov
adc
repnz
dec
jbe
cli
jns
mov
pop
push
imul
xor
sti
inc
addr16
xchg
mov
imul
xor
repz
dec
and
stos
int3
mov
push
mov
mov
cli
divb
jl
cld
and
rcll
lahf
loop
jae
jnp
mov
popa
ficoml
loopne
inc
and
out
out
enter
ja
mov
mov
popf
mov
test
in
push
push
sbb
ror
in
out
dec
mov
pop
in
addr16
or
das
add
dec
fmul
aad
je
sub
pop
pop
jo
push
imul
cmc
nop
sbb
cwtl
mov
or
movsl
aas
pop
and
xchg
push
push
lds
sbb
shr
je
in
jecxz
out
mov
jns
fisttpl
sbb
xchg
mov
push
scas
inc
sub
push
stos
ljmp
sub
jae
push
lahf
xchg
pop
sti
popa
rcrl
push
loop
and
inc
pushf
jl
fldenv
fs
inc
mov
jb
adc
cmc
add
lea
hlt
mov
and
xor
bound
pop
loopne
or
and
jnp
enter
ret
sbb
adcl
aas
out
rclb
je
sub
lock
fbld
insl
mov
or
arpl
xor
cmp
and
xor
lods
xchg
pop
pop
and
or
or
add
xchg
xchg
inc
mov
sbb
das
or
bound
sub
stc
push
mov
js
test
jb
xchg
movsl
dec
call
push
jbe
iret
mov
cmp
or
xor
mov
addr16
push
in
sti
or
xlat
xchg
mov
fisubl
imul
cmp
pop
movsl
cmp
dec
xchg
imul
jecxz
jg
sub
pop
mov
dec
push
inc
jge
cmp
mov
movsb
int
push
jge
es
dec
cmp
jne
xor
cmp
sbb
add
movsl
jge
pop
cmp
daa
mov
int
cmp
in
push
xor
fsts
pop
cmc
jns
push
and
jecxz
leave
mov
and
jnp
cmp
jae
mov
xor
adc
cld
mov
mov
cmp
push
sub
addl
test
dec
mov
repz
sub
clc
pop
push
inc
stc
mov
imulb
xchg
dec
test
or
sbb
ret
mov
xchg
sbb
add
xchg
add
sbb
sub
xabort
outsb
fwait
lcall
fwait
subl
add
std
jns
insb
imul
test
mov
inc
gs
aam
cmpl
fdivl
jg
loop
sub
das
imul
fsubrl
in
cld
and
les
outsb
pop
push
leave
lods
or
add
clc
fdivs
int
loope
jae
je
cwtl
ror
test
int
mov
int3
pop
iret
push
aas
shll
rclb
fistpl
cmp
mov
inc
mov
sbb
adc
js
xchg
js
xor
leave
in
xor
int
movsl
or
mov
xorl
paddsb
push
dec
inc
dec
jg
push
aas
xorl
mov
push
stc
xchg
je
fsub
jae
loopne
out
js
dec
lret
sbb
jge
out
lds
imul
pop
inc
sub
mov
and
pop
xor
adc
call
push
mov
dec
mov
sub
push
push
sbbl
jg
mov
pop
or
push
pop
cwtl
out
mov
inc
out
pop
inc
roll
inc
jle
jns
mov
jp
lret
idiv
sbb
scas
lock
popf
or
cli
or
pusha
subl
mov
pop
adc
out
scas
add
and
addr16
xchg
lcall
lock
cmp
adc
cmp
iret
pop
pop
cmp
out
push
pushf
mov
ljmp
sahf
pusha
mov
rcrb
test
or
lcall
lea
adc
aas
mov
test
jg
aaa
mov
push
movsb
fiadds
mov
aas
push
or
popa
adc
in
cmp
cs
int3
add
daa
aam
sub
stos
inc
das
xchg
fldcw
and
sbb
jo
jnp
push
fsts
adc
xor
and
sarb
dec
and
sbb
xlat
sbb
xchg
mov
mov
loop
data16
js
lahf
ror
iret
jo
xor
mov
pop
iret
rclb
rclb
shll
mov
adcl
jae
pop
mov
js
mov
fxch
mov
cmp
push
pop
cmpl
or
cs
cmpsl
hlt
jns
pop
flds
push
rclb
jmp
cmp
push
and
je
sub
xchg
inc
dec
or
jae
jne
dec
jno
stos
scas
add
jb
jp
push
lods
sub
sti
or
or
mov
into
sbb
gs
das
mov
jno
mov
dec
nop
sub
fmull
movsl
dec
push
and
add
lods
fmulp
repz
sahf
aad
dec
mov
pusha
mov
xchg
insb
fsubl
mov
mov
inc
push
loop
mov
xchg
pushf
inc
stos
lds
fadd
rcrb
fnstcw
jp
fs
out
jmp
fsts
mov
ljmp
cmp
fsub
imul
cli
push
xchg
cld
lock
aas
sub
jb
xorb
xchg
cmp
add
and
nop
enter
ds
daa
fwait
jmp
lock
jnp
mov
cmp
xor
xor
cld
or
stos
xchg
sub
sahf
sub
push
cld
fwait
jbe
movsl
les
pop
pop
pop
cmp
xor
push
test
push
push
inc
mov
push
mov
test
decl
push
mov
sub
push
sub
test
lods
and
and
cmp
bound
adc
and
add
add
mov
adc
pop
add
pop
jl
mov
int
sub
test
ljmp
in
jecxz
mov
sarb
pminsw
mov
sti
lock
xchg
in
push
lret
mov
cltd
dec
sub
mov
push
std
loope
leave
outsl
xchg
cmp
into
and
and
shll
out
and
popf
dec
pavgb
jl
out
or
pop
into
mov
mov
mov
shll
inc
dec
int3
ret
push
xorl
inc
lods
fwait
add
aam
rolb
push
add
sbb
mov
cwtl
and
fs
sbb
cwtl
xor
jo
sbb
fcoms
jp
ja
sub
xor
shrb
ja
or
pop
inc
dec
and
and
in
add
inc
gs
adc
add
iret
test
mov
test
pop
jp
ja
loope
mov
and
test
leave
mov
mulb
mov
mov
and
pop
mov
dec
lods
imul
loop
test
sti
ret
insl
mov
adc
xor
pop
ljmp
jns
call
jns
sub
test
sub
loope
mov
pusha
xor
pop
je
leave
int
mov
jo
cltd
push
mov
push
rcll
dec
loopne
test
aam
mov
mov
xor
mov
dec
or
jno
adc
cmpsb
mov
pop
ljmp
mov
aas
iret
jmp
jo
adc
mov
jmp
outsb
into
jl
xor
mov
xchg
loope
push
sub
lahf
push
mov
lret
cmp
aam
add
aad
shrl
xor
sbb
jnp
jl
xchg
movb
adc
xorl
xchg
cmpsl
sub
pop
cmpsb
pushf
fldt
data16
and
into
icebp
push
mov
loop
ja
pop
rcrl
xchg
jnp
ficoml
push
fcomps
mov
cmpsb
xor
inc
mov
cli
loope
stc
rclb
sub
cmp
adc
js
fmul
mov
push
xor
sbb
sub
dec
int
rcrl
inc
mov
movsl
push
inc
pop
icebp
aad
ficoml
test
mov
fmull
insl
mov
and
nop
mov
shrb
or
sub
es
push
popf
sarb
lcall
adc
cmp
jmp
xor
mov
and
cmp
mov
rcrl
test
pop
xchg
add
ljmp
push
fisubs
xorl
filds
subl
or
xchg
xchg
jle
sbb
sysexit
add
jb
lea
push
mov
push
clc
test
int3
fs
jnp
lret
nop
fidivs
inc
pop
xchg
rcll
daa
and
add
xor
xchg
inc
mov
pop
lcall
mov
insl
and
or
out
imul
shr
push
repz
add
and
das
sbb
and
jns
or
stos
adc
paddq
sub
xor
cs
imul
push
shlb
or
cmp
jbe
mov
lret
cmp
pop
push
cmpsl
loop
aam
xchg
insl
mov
popf
inc
loop
fstpl
ret
fcomps
nop
xor
fs
sahf
aas
scas
fs
adcb
push
aam
xchg
movhps
dec
mov
mov
out
sbb
bnd
outsb
outsl
jmp
movsl
mov
fwait
and
mov
mov
mov
pop
mov
sub
pop
lcall
orb
jnp
out
dec
data16
mov
mov
leave
push
push
sub
xchg
in
push
pop
loope
cmp
call
push
into
and
cmpsl
push
dec
test
in
lret
dec
hlt
call
sbb
and
fcompl
stos
es
xor
cwtl
bound
nop
in
inc
iret
stos
lock
xor
cmp
or
movsl
bound
imul
loop
clc
popa
add
int3
xor
leave
leave
jno
xchg
loopne
add
lock
orb
push
in
mov
lods
lret
cmp
dec
xor
mov
imul
mov
jmp
test
adc
rclb
jae
test
cmp
into
mov
dec
test
dec
push
icebp
xor
daa
mov
dec
push
cwtl
and
dec
cmp
or
cltd
mov
gs
mov
sbb
inc
hlt
xor
inc
shll
pop
mov
movsl
xchg
cmp
mov
or
fnstcw
jns
outsl
xchg
xor
cmc
in
ss
in
dec
das
add
jnp
stos
inc
icebp
jle
test
xor
cmp
inc
pop
rorb
jle
mov
inc
mov
out
xchg
cmp
std
pop
mov
jnp
and
test
in
aas
cmc
pop
push
xchg
outsb
push
push
mov
loope
mov
in
and
das
fstpt
push
andb
fsqrt
pop
jp
fwait
add
adc
cltd
outsl
adc
xor
int3
pop
inc
mov
xor
lret
out
xor
out
or
fidivs
ret
push
cmp
xchg
dec
pop
cli
cmp
movsl
lods
mov
mov
xchg
cld
pop
imul
xchg
mov
js
sahf
jnp
add
es
repnz
leave
aas
mov
mov
mov
add
mov
push
push
mov
inc
mov
fcomps
lret
sub
jbe
xchg
mov
stc
mov
dec
fisttpll
aam
lahf
test
shl
outsb
push
daa
mov
jns
xchg
adc
xchg
in
clc
xor
xchg
out
xchg
push
xchg
sbb
or
aas
sbb
sub
inc
cmpsl
jge
cltd
lret
in
inc
fisubrl
mov
mov
jg
lds
aas
into
xchg
push
jmp
cli
xlat
mov
inc
fmuls
sub
sbb
mov
and
push
pop
test
call
int3
jge
cmpsb
movsb
insb
iret
xchg
out
mov
and
in
jle
adc
out
dec
xchg
std
cmp
enter
insb
adc
fcomps
pop
xchg
xchg
mov
mov
inc
and
and
loope
cli
icebp
mov
outsl
mov
xor
aad
fsub
je
xchg
or
pusha
fwait
sub
sbb
mov
repnz
pushf
jne
add
arpl
jbe
pop
jg
mov
push
xchg
arpl
mov
sar
adc
stc
insb
dec
inc
pop
mov
lahf
pop
in
or
aas
mov
mov
pop
fistps
jle
adc
jmp
pop
lret
xchg
and
das
push
add
sbb
repnz
mov
fcompl
xchg
inc
mov
cmp
mov
sarl
push
pop
inc
pop
hlt
aas
ljmp
gs
js
fcmovnbe
lds
and
dec
sbb
mov
dec
cltd
add
pop
aad
out
loop
cmp
out
mov
sbb
ret
ss
mov
add
pusha
xlat
xchg
fnsave
lea
rcrl
sub
pop
rcrb
xor
cli
push
pop
test
pop
movsb
jg
xchg
in
cmp
sbb
imul
ja
push
ret
data16
in
pop
mov
in
push
mov
xchg
and
push
movsl
pushf
xchg
add
sub
lock
stos
xchg
jmp
push
les
push
inc
mov
push
sub
add
inc
call
push
xchg
call
inc
mov
fwait
jne
push
arpl
jae
fisttpll
dec
bound
cs
mov
fsubrp
rorl
and
dec
lock
sbb
psrld
push
xchg
out
dec
push
pop
add
inc
stos
xor
out
add
stos
inc
sbb
jb
mov
icebp
pop
sti
mov
mov
js
imul
ret
popf
sub
iret
jb
fildll
in
jmp
pusha
adc
loop
popa
and
sbb
pop
mov
jg
daa
mov
mov
sbb
dec
or
mov
xchg
dec
add
out
add
push
fdiv
xor
imul
int
pop
cmp
imul
xor
sbb
cvtdq2ps
sbb
shlb
call
xchg
ss
repz
mov
inc
push
sub
push
inc
bound
addr16
mov
mov
insl
cs
mov
jb
ret
repnz
lds
sbb
rolb
pop
dec
jle
sub
imul
cmc
cmp
xchg
adc
mov
mov
bound
subl
cmp
idiv
sti
xor
movsb
test
fwait
xchg
ret
sbb
push
dec
mov
and
xor
in
stos
shll
loop
adc
lds
xchg
pop
push
shlb
pop
mov
rol
xor
xchg
cmp
mull
push
jns
pop
mov
rcrb
cmp
lret
add
adc
pop
clc
fsts
xchg
loop
or
in
jle
and
rcr
orb
ret
push
and
arpl
lahf
ret
jnp
push
ret
mov
or
mov
inc
roll
movsl
cmpsl
xor
mov
mov
and
sbb
outsl
cmpsb
stc
imul
sti
enter
cmp
xchg
mov
mov
lods
imul
mov
jno
pop
lods
sub
lret
push
aas
inc
lahf
ret
adc
cmp
stos
loopne
push
and
cwtl
scas
test
call
aaa
sbb
adc
imul
dec
fcmovb
pop
stos
dec
aaa
stos
scas
and
cmc
and
popf
call
daa
and
js
repz
push
push
les
rolb
adc
popf
rcll
jmp
xchg
add
pushf
clc
xor
sti
iret
addb
cmc
or
repnz
mov
mov
cmc
cmp
enter
cmpsl
lds
imul
outsl
mov
mov
roll
push
add
fsubrp
inc
xor
movsb
add
lea
or
dec
cmpsb
outsb
jge
mov
dec
mov
mov
sub
jnp
rorl
in
jb
jecxz
mov
xchg
xorb
ret
shlb
sbb
call
ss
gs
mov
add
sub
dec
test
xor
adc
xchg
std
sarb
add
cli
jle
sbb
shlb
mov
pop
jle
das
rclb
popf
inc
jnp
sub
popa
sbb
mov
jge
js
or
pop
xlat
outsl
jnp
das
or
mov
jge
insl
out
jo
bound
cli
push
add
push
pop
sbb
mov
cmp
stos
ret
hlt
ret
js,pn
icebp
mov
add
xchg
fcompl
ret
fwait
out
add
mov
fsubrs
sahf
inc
mov
push
cmp
cmp
ficomps
jecxz
and
cmp
loopne
jae
popa
gs
inc
in
mov
in
test
lcall
push
mov
adc
movsl
lock
xchg
cmp
shl
fdivrp
xchg
and
sarl
adc
aas
mov
call
arpl
dec
scas
sub
cmpl
aaa
or
adc
std
xchg
je
mov
mov
sahf
scas
cld
imull
inc
xchg
data16
cmpsl
mov
loope
fcoml
fmul
fmul
mov
jmp
inc
cmp
add
push
enter
mov
and
test
cmp
add
andl
push
pusha
mov
ds
xchg
mov
mov
inc
loope
mov
aam
jae
inc
out
cltd
idiv
and
or
dec
fdiv
or
add
jno
inc
call
and
xor
cltd
sbb
xor
cmp
cmp
adc
int3
lret
add
lods
sub
ret
add
sarl
mov
push
lock
add
mov
push
cwtl
loopne
xorl
jo
call
mov
xchg
or
xchg
inc
hlt
jge
pop
hlt
ljmp
int3
lret
pop
or
inc
xor
mov
push
out
mov
mov
pop
and
add
shl
cmc
ret
aaa
adc
js
dec
notb
push
push
stc
fs
adc
lock
data16
and
cltd
insb
jo
mov
and
push
lods
push
inc
rolb
insl
xchg
or
orb
loopne
jmp
push
scas
jle
iret
jne
dec
cmpsl
dec
xchg
jp
pop
mov
ja
xorl
jb
fldl
sub
iret
rdpmc
scas
push
out
lahf
jp
add
xor
psubw
inc
flds
jmp
daa
enter
xchg
fwait
jl
sahf
lock
addb
dec
xor
dec
sbb
adc
xchg
loop
out
movsb
insb
xchg
aaa
sbb
clc
sahf
inc
popa
addl
jecxz
push
or
adc
mov
cmc
pop
jl
lahf
jo
std
popf
mov
jp
add
outsl
push
adc
cli
mov
lock
jmp
and
xchg
in
sub
das
or
xor
jne
xor
movsl
in
negl
inc
fwait
xchg
call
in
dec
lods
in
call
mov
jp
pop
jne
and
cmp
ret
jp
xchg
or
insb
mov
enter
outsb
push
aaa
stc
mov
xchg
shlb
test
enter
rcrl
sub
adc
fimull
and
mov
inc
jae
mov
sub
aad
movsl
push
lds
es
cmp
mov
inc
mov
sarb
imul
scas
repnz
lcall
movsb
push
cmpb
mov
cli
test
shrl
mov
movsb
enter
dec
jg
add
push
inc
mov
xor
into
arpl
fildl
cmp
adc
pop
das
loopne
cmp
fcoms
push
out
cmpb
orl
dec
std
sbb
xchg
pmuludq
jecxz
xchg
arpl
jae
push
ret
jb
or
popa
js
movsl
push
inc
sub
push
das
leave
mov
leave
cmp
sahf
int
push
addr16
stos
test
sub
loope
testl
inc
add
push
dec
pop
pop
sub
mov
pop
ret
clc
push
push
mov
cmp
push
fld
inc
fs
in
in
jns
loope
inc
in
jecxz
rorb
in
push
hlt
add
hlt
or
adc
adc
sub
in
leave
fs
sbb
mov
inc
mov
rcll
aad
xchg
daa
pop
arpl
sarl
or
mov
ja
jmp
xor
cmp
mov
insl
push
jbe
insb
mov
stc
mov
push
inc
xor
and
ljmp
mov
push
cmp
push
repnz
jns
jae
fnstcw
neg
ja
mov
dec
test
roll
loopne,pn
inc
aaa
cmp
mov
nop
popf
or
sub
daa
jecxz
mov
xor
loop
mov
or
pop
jnp
xchg
add
les
cli
lret
bound
jge
xchg
insl
mov
push
xchg
and
incl
lods
add
stos
ja
test
cmp
add
jb
cld
sbb
je
and
in
dec
mov
sub
fwait
mov
aas
mov
or
pop
loope
test
sti
sub
sahf
insb
push
mov
and
inc
dec
mov
movl
das
ds
ret
leave
mov
js
shll
add
mov
cwtl
xor
rcll
push
rorb
xor
adcl
adc
enter
lret
fs
lods
mov
jg
or
cmpsl
xchg
mov
daa
clc
sbb
lea
cmp
sbb
test
xor
lret
jle
adc
movhps
mov
cmp
addr16
stos
ficomps
outsl
out
jg
xchg
mov
jle
jns
data16
mov
push
in
jnp
mov
jp
jns
add
inc
int
rcrb
outsl
mov
in
cs
xchg
add
jg
in
adc
dec
xor
jb
sub
push
jl
sti
push
dec
ss
jb
dec
into
push
loop
sahf
in
jmp
in
gs
mov
jge
pop
sarl
mov
daa
lret
test
jle
test
addr16
lds
jo
out
adc
sub
push
push
xor
ret
mov
mov
je
or
sahf
mov
ret
ficomps
cmpsb
mov
enter
jo
push
call
sbb
dec
outsl
add
xchg
roll
lret
sbb
into
xchg
fidivs
stos
ja
mov
mov
add
loop
in
and
mov
iret
push
cmp
cmp
mov
jg
ss
ss
inc
dec
and
out
mov
dec
add
rcrb
clc
mov
inc
daa
sub
loopne
sti
add
sub
fwait
addr16
fneni(8087
sar
std
inc
inc
add
in
adc
jo
call
mov
dec
lea
outsb
push
push
mov
mov
jnp
mov
fcmovne
sub
addr16
xor
aam
sub
jo
fstps
es
ss
add
adc
in
stc
cwtl
cmpsb
add
lea
dec
xchg
xor
fbld
push
add
or
push
pop
clc
push
or
add
addr16
stos
pop
ds
cld
out
aas
sbb
or
xchg
xchg
mov
dec
dec
lods
add
push
jo
push
xchg
pusha
aaa
push
fs
mov
inc
cwtl
ficomps
ds
imul
dec
mov
mov
mov
rorb
roll
ljmp
xchg
mov
jmp
add
xor
bound
push
sbb
nop
fs
fisubl
lcall
inc
bound
aaa
xor
aam
pop
add
cmc
fucomip
push
rolb
sub
and
daa
xchg
cs
insl
dec
cmpsl
xor
add
mov
daa
push
mov
test
dec
add
add
test
mov
popa
imul
push
inc
inc
push
ret
insl
cwtl
popl
add
push
stos
cmp
icebp
popf
rorb
popa
cmp
xchg
aam
xchg
stos
insl
jl
es
push
sub
out
rclb
dec
mov
cmp
pop
outsb
or
jge
sub
add
fsubrs
arpl
ret
mov
mov
lock
jecxz
out
jle
mov
fdivl
or
mov
sbb
add
add
adc
mov
bound
and
test
add
imulb
rcr
dec
push
aaa
stos
stos
mov
mov
int
mov
inc
inc
aaa
push
jns
dec
adc
sbb
mov
gs
imul
inc
pushl
push
jne
xchg
dec
call
push
in
mov
std
push
mov
jb
fs
int
cwtl
aaa
div
mov
xchg
loop
jno
push
inc
mov
ss
std
push
jbe
adc
shlb
cmp
mov
mov
push
ss
iret
sub
cmp
fchs
jg
jmp
sti
adc
lds
push
aad
or
shl
fistpll
pop
das
pop
and
inc
in
add
test
ds
xor
dec
cli
fdivr
into
jno
sti
je
xlat
jl
lret
jecxz
nop
jmp
cmp
push
flds
jecxz
pop
std
test
mov
mov
pop
mov
sbb
inc
data16
in
push
fcomi
dec
push
sub
add
pop
imul
loope
aas
es
mov
add
and
adc
dec
xor
push
sti
or
xor
ja
fisttpl
fs
cmpsl
or
xchg
jae
mov
scas
push
push
aas
jnp
push
clc
loope
cmp
pop
inc
shl
pop
jb
sarl
or
or
inc
jmp
ret
mov
iret
jbe,pn
lea
dec
lds
jne
cmc
imul
testb
mov
lcall
imulb
push
cmp
sbb
xor
test
sahf
mov
imul
ljmp
push
aam
mov
cmp
lock
push
js
cmp
mov
adc
pop
xchg
lds
pop
add
sbb
cs
jp
jae
pusha
lret
jo
loope
js
add
test
imull
cld
mov
fistpll
jo
push
xchg
mov
out
aam
shrb
mov
mov
js
inc
in
xchg
inc
lret
jo
sub
adc
ficompl
sub
je
add
jl
and
sti
xor
jnp
mov
xor
enter
sbb
das
or
std
outsl
mov
mov
lods
xchg
pop
ret
arpl
mov
jnp
pop
add
hlt
xlat
dec
mov
aaa
int3
ret
dec
push
movsl
jne
add
add
and
scas
pusha
mov
adc
or
icebp
or
push
pop
fs
xchg
ficoms
in
push
mov
enter
stc
cmc
in
push
cltd
lods
jmp
fs
loop
dec
adc
lock
mov
clc
xchg
add
stos
icebp
fwait
stos
xor
shl
mov
adc
stos
clc
jl
xor
add
push
daa
xor
hlt
mov
push
enter
fisttpll
xor
sbb
add
push
jp
cli
adc
cmp
inc
subl
and
fbstp
idivl
dec
call
stos
les
adc
aad
fiaddl
xchg
repnz
cmp
xchg
xor
aad
sarb
push
xor
lods
cmp
add
out
mov
cmp
data16
imul
movsl
xor
xor
and
cmp
in
mov
xchg
shrl
xor
dec
cli
mov
std
not
call
pop
mov
xor
push
sbb
xchg
inc
aaa
icebp
mov
xchg
jo
cmc
cmc
mov
pop
and
aad
cli
ds
dec
pop
push
pop
mov
pop
mov
mov
push
jge
mov
daa
cmpsb
pop
mov
test
js
inc
inc
cmp
mov
adc
jne
inc
stos
mov
shl
mov
xor
in
lock
xchg
ret
xchg
dec
iret
daa
cmp
nop
mov
mov
adc
jecxz
or
mov
push
popf
xchg
sub
pop
out
das
sbbl
jecxz
cmp
mov
out
lds
mov
cmpl
push
push
cmpl
scas
sbb
dec
push
imul
sub
pop
mov
sbb
jno
outsb
xor
in
rcrl
and
jns
enter
xor
jns
scas
in
sbb
mov
cmp
stos
clc
add
and
cmp
xchg
jnp
lods
adc
ret
add
or
mov
push
sbb
push
xchg
lods
mov
sbb
repz
dec
faddl
mov
mov
jmp
outsl
dec
add
mov
mov
fsubrl
fildl
sbb
mov
jb
lds
pop
add
gs
xchg
dec
add
pop
aam
dec
push
add
popl
mov
insb
lea
out
popf
fildl
stos
aad
movl
bound
aad
dec
jl
or
cmp
test
inc
adc
xlat
push
push
enter
mov
inc
mov
out
call
jp
sbb
out
test
xlat
inc
aad
pop
popf
jnp
mov
scas
mov
imul
push
mov
jb
push
pop
lods
je
jae
xchg
push
dec
cmp
cmp
nop
add
mov
cmc
shll
es
mov
push
aas
test
inc
das
inc
nop
fcomps
push
lods
ja
sbb
mov
testb
data16
inc
int
ficoml
hlt
sahf
xor
outsb
fwait
insl
mov
inc
push
mov
sub
inc
test
xor
pop
fs
mov
stos
cmc
pop
or
orl
mov
in
scas
pop
xchg
and
fldenv
test
cwtl
cmp
sbb
mov
xor
inc
push
jns
and
ss
mov
adc
repnz
pusha
repnz
fwait
cld
mov
xor
mov
sti
mov
push
test
loopne
out
out
pop
in
mov
sub
or
ret
xchg
push
mov
xor
pop
dec
inc
add
mov
mov
in
out
in
mov
mov
das
cltd
in
inc
add
das
lea
pushf
push
int
test
outsl
mov
ret
mov
pop
adc
xchg
cli
mov
lock
mov
sub
cmpsb
cmc
adc
leave
aaa
mov
pop
sbb
xchg
rolb
sub
insb
out
out
add
loope
mov
scas
add
jg
test
call
popf
loope
stos
cmpb
push
lret
sbbb
mov
cmp
das
imul
cltd
pop
dec
adc
fldt
mov
adc
jo
cmc
mov
push
or
pop
lret
in
shlb
mov
dec
mov
stos
lret
dec
pop
je
cli
cmp
pop
mov
outsb
mov
out
enter
mov
push
jle
push
repz
inc
sbb
mov
mov
pop
negl
mov
adc
arpl
inc
adc
sbb
xchg
sbb
pop
subb
and
add
out
dec
xchg
scas
aam
leave
mov
xor
inc
mov
inc
inc
jns
jecxz
adc
sbb
and
xchg
mov
enter
sub
aad
add
add
sbb
aam
fs
jp
lods
pop
rcl
stos
mov
jp
and
test
push
out
pop
div
dec
mov
pushf
sub
adc
int3
iret
jmp
fbstp
inc
fisubl
cli
mov
lret
js
outsb
or
out
sub
iret
in
cmp
sbb
adc
xor
and
aam
sub
adc
test
and
adc
pop
mov
stc
fmuls
mov
jp
stc
in
fdiv
mov
daa
mov
mov
sbb
add
je
pop
pop
and
adc
pop
xchg
enter
or
and
sbb
in
cwtl
push
adc
hlt
repnz
sahf
js
jno
dec
and
inc
sub
lea
sbbl
push
jg
cwtl
test
or
jge
mov
mov
dec
sub
popa
xchg
cmp
dec
ss
sbb
scas
xchg
sahf
fwait
or
dec
je
clc
pop
enter
sub
sbb
or
sub
adc
xchg
jb
in
in
movsb
xlat
xor
or
add
lds
xchg
sbb
arpl
mov
jmp
mov
ja
add
pop
cmp
inc
and
fnstenv
sub
cmc
fmul
cmp
mov
pop
lods
inc
or
cmp
dec
iret
in
sarl
cmp
out
loope
pushf
incl
shrb
add
pop
std
sarl
and
popf
lret
cmp
dec
notl
xor
add
dec
push
ss
xchg
sub
mov
xchg
sub
clc
sahf
icebp
and
xchg
dec
mov
cmpl
jno
in
fisubrs
or
mov
fimuls
lock
repz
inc
pop
add
sarl
inc
fdivr
popa
aam
jo
pop
mov
xchg
std
mov
stos
add
mov
and
ja
test
jnp
or
push
mov
mov
movsb
outsb
inc
cmp
mov
mov
jg
sbbl
cmp
inc
jecxz
dec
lret
push
aad
cmc
xorb
push
mov
jp
pusha
out
and
lods
iret
int
idivl
arpl
mov
aad
shlb
push
filds
inc
add
sub
movswl
mov
push
sahf
dec
pushf
sub
and
jbe
xor
add
jns
ja
push
or
push
mov
sar
sbb
cmc
addr16
sbb
add
and
cmp
ss
nop
sbb
test
ror
jb
int
imul
sub
ds
cld
pop
sbb
nop
adc
inc
sub
sbb
adc
leave
dec
xor
cwtl
lret
dec
aas
sti
pushf
fs
loopne
cltd
fcmovnb
shrl
outsb
cld
lods
xchg
sahf
insl
inc
pop
xor
xor
mov
lret
into
mov
pop
push
mov
popf
out
push
mov
xchg
in
sub
movb
push
jmp
loope
xor
les
out
imul
shrb
xorps
mov
sbb
mov
je
ja
repz
cmp
in
pop
xor
adc
js
add
push
mov
cmp
mov
aas
xlat
push
cmpsb
ljmp
mov
jne
and
push
cmc
gs
fildl
xor
mov
shll
or
inc
imul
mov
add
mov
in
jecxz
mov
call
test
aam
int
lea
mov
insl
in
cld
not
add
repz
and
push
cwtl
mov
dec
sub
add
iret
push
outsb
push
inc
dec
adc
rcrl
gs
call
enter
mov
push
cmp
enter
jnp
stc
sub
push
xorb
inc
sbb
push
ret
outsb
pop
dec
in
add
dec
cmp
xor
sbb
aas
add
cld
test
pusha
add
sarb
pop
int3
mov
sar
cmp
mov
dec
sub
mov
inc
adc
mov
sbb
into
inc
xorl
mov
inc
and
daa
push
ja
sahf
or
in
negb
lock
sub
push
xlat
cmpsb
xor
push
sbb
xchg
mov
sbb
cs
cmp
pop
or
jb
setns
push
pop
sbbl
test
aaa
imul
repz
mov
int
cmp
cmp
mov
mov
cmp
mov
frstor
int3
dec
and
bound
pop
popa
adc
shl
add
sbb
pop
mov
add
iret
dec
cmp
xlat
lock
inc
inc
sub
sbb
xor
rcr
aam
push
inc
dec
jnp
hlt
pop
pop
mov
xchg
pushf
lcall
fisubrl
push
popa
mov
sub
in
das
pop
sti
clc
dec
outsl
arpl
test
xchg
mov
pusha
out
sub
inc
imul
hlt
arpl
or
mov
or
icebp
popf
or
lock
xor
addr16
test
sbb
cmp
adc
push
es
push
adc
sub
mov
sarl
daa
xchg
jge
xchg
mov
ds
and
test
lock
push
mov
mov
das
pushfw
loope
fdivl
jnp
jl
stc
call
out
out
mov
clc
retw
mov
lea
lret
or
adc
stos
scas
add
dec
dec
aaa
bound
ret
dec
mov
das
enter
dec
pop
fs
pop
jae
jecxz
cli
push
imull
sti
call
inc
jp
popf
dec
lret
bound
stos
add
in
test
push
fimuls
andb
call
imul
hlt
jno
mov
fimull
cmc
inc
les
jl
mov
das
stc
movsb
and
pop
mov
add
or
jnp
dec
adc
mov
jne
std
nop
inc
and
lods
data16
push
daa
xchg
and
aas
dec
ljmp
jge
push
mov
cmpsb
pop
push
ss
mov
ss
jno
push
cmp
lcall
cld
pop
push
es
add
sarb
jmp
jp
sahf
pop
nop
add
icebp
fucomip
mov
imul
xchg
pop
mov
test
xor
push
push
negb
in
in
add
scas
mov
bound
and
mov
lock
mov
mov
pusha
outsb
rcrl
out
mov
dec
sarb
test
enter
sub
pop
lahf
pusha
inc
xor
and
adc
or
xor
inc
test
jbe
pop
out
mov
cmpsb
lock
dec
pop
mov
mov
pop
addr16
push
out
push
icebp
ja
mov
push
ror
test
clc
xlat
push
lds
cmpsb
imul
mov
mov
mov
in
xchg
push
lock
outsl
push
fbstp
scas
or
xchg
test
pop
sub
cmp
outsl
add
jle
dec
push
pop
gs
out
in
push
lods
gs
nop
popf
jnp
in
jle
mov
sti
lret
int3
ljmp
pop
lea
push
mov
rolb
cmpsb
mov
pop
jg
add
rorb
incl
sub
enter
int
pop
cs
int3
add
popa
outsb
and
add
mov
cmp
inc
int3
xor
inc
xchg
add
mov
fisttpll
ss
or
dec
mov
enter
push
inc
fistpll
pop
int3
insl
movhps
dec
inc
sbb
outsb
out
cmp
xchg
imul
adc
mov
shlb
fcos
popa
mov
sub
pop
inc
insl
add
push
fwait
mov
inc
ja
insl
inc
dec
push
dec
xor
add
and
outsb
inc
xorb
push
push
outsb
popf
jl
fistl
mov
sar
fnstcw
jmp
cmp
insl
inc
filds
faddp
inc
jg
xchg
in
loop
mov
mov
xchg
jbe
cltd
ret
test
rcrl
fadds
pushf
fstl
add
into
sbb
cmp
fisttpl
push
sbbl
test
pop
jecxz
insb
ret
cltd
mov
cwtl
mov
sbb
or
cs
leave
daa
bound
cld
int
jae
sete
les
scas
pop
test
or
push
scas
pop
int3
inc
shll
or
iret
sub
rcrl
loopne
add
jp
xchg
js
jl
jg
jg
aas
repnz
mov
xchg
xor
jnp
inc
cmpsb
les
xor
outsl
addb
or
fdivrp
rcll
jge
inc
xchg
xor
jns
adc
cmp
pop
cmp
mov
mov
mov
and
cli
sub
xlat
lret
adc
pop
idivb
test
add
scas
mov
bound
scas
mov
jle
scas
adc
pop
or
push
movsb
mov
lock
adc
pushf
mov
pop
jge
or
ret
sbb
mov
pushl
xchg
in
stos
adc
into
mov
je
test
xchg
cmp
or
das
push
pop
xchg
cltd
cmp
mov
xchg
pop
mov
xor
xchg
pushf
in
icebp
in
nop
iret
mov
xchg
aas
xchg
xchg
cld
daa
jno
outsl
xlat
notl
jmp
adc
nop
jmp
inc
mov
push
inc
xor
mov
fstl
jl
out
pop
in
cmp
enter
aad
adc
stc
dec
sbb
sarl
repnz
daa
movsl
in
mov
dec
adc
in
mov
adc
ds
sub
ficompl
mov
pushf
cmp
sbb
insl
pop
mov
loopne
inc
ss
pop
lock
lret
fs
cmp
jno
fistl
push
cmp
inc
jp
imul
xchg
negb
xchg
outsb
gs
xchg
leave
sbb
dec
xor
scas
movsl
cs
push
ss
or
cmp
push
in
jl
sbb
mov
ljmp
outsb
cmp
js
fstps
jnp,pn
mov
mov
xchg
call
mov
adc
mov
mov
gs
inc
pop
shlb
cs
pcmpgtd
dec
push
rolb
push
sbb
or
adc
ljmp
imul
and
es
sbb
ficomps
in
fld
pop
dec
sbb
mov
ds
xchg
cltd
jns
insl
movsb
sarb
scas
push
pop
xchg
adc
ds
ljmp
and
and
addr16
jle
jecxz
lcall
addr16
scas
mov
or
fildl
jle
sub
pop
mov
lock
xlat
ret
add
push
stos
dec
fwait
and
flds
jle
dec
enter
cmpsb
repz
ss
lea
enter
push
pop
not
cmp
int3
sbb
inc
dec
ja
dec
adcl
jb
mov
or
orl
aam
and
adc
mov
mov
unpcklps
xorb
nop
or
stc
jl
ror
adcb
jle
and
xor
mov
xchg
fcoms
fimuls
pop
xor
gs
xor
hlt
stc
inc
lods
fldcw
pop
or
es
movsb
add
fld
push
mov
testb
loopne
jns
sti
into
jmp
in
adcb
mov
sbb
mov
fldenv
xor
loopne
lcall
xor
mov
inc
pop
push
outsl
mov
int3
xor
xchg
cmpsb
inc
sbb
ljmp
inc
and
push
adc
add
cmp
mov
jge
cwtl
sub
repnz
inc
xor
test
push
jae
lea
lret
ljmp
mov
jbe
jns
ss
mov
jns
lcall
int3
loopne
cmp
sbb
ljmp
push
aaa
or
mov
pop
xchg
mov
lcall
push
aad
dec
pushfw
iret
imul
int3
outsb
sbb
push
or
sahf
aad
push
les
insl
dec
in
mov
xor
gs
in
and
aad
add
mov
scas
lds
scas
sbbl
test
inc
lock
xlat
mov
pop
push
je
out
mov
aaa
mov
or
push
arpl
out
xchg
cmpsb
adc
mov
shlb
ret
add
pop
jo
adc
out
or
es
loope
jb
pop
adc
adc
out
cs
test
outsb
xchg
in
dec
xor
cmp
cs
les
adc
add
lea
stos
xchg
sahf
cmp
push
cmpsl
out
frstor
push
iret
hlt
data16
lcall
mov
xor
push
and
mull
mov
daa
adc
divl
mov
adc
ret
or
jg
pusha
and
pop
cmc
out
mov
pop
lret
sbb
aas
into
pop
les
jge
and
ss
test
sub
negl
test
mov
or
sbb
rol
scas
js
push
xchg
testl
call
sub
push
aad
loope
ljmp
xchg
mov
sti
loop
and
data16
dec
das
push
mov
dec
lods
mov
mov
in
in
scas
add
cmc
js
mov
outsb
pop
dec
loop
out
out
xor
iret
add
lds
fs
inc
pop
xchg
sub
imul
fistl
mov
mov
popa
aaa
sbb
pop
or
js
pop
fs
adc
loop
xchg
stos
jae
push
or
fucomip
xchg
or
xor
pop
and
add
repz
xchg
xchg
fs
jl
fbstp
into
stos
es
dec
outsb
lds
dec
aaa
fildl
mov
dec
aas
cli
mov
enter
xor
imul
add
pop
add
adc
pop
mulb
rclb
lds
test
ret
rcrb
push
ret
fnstcw
movl
push
xor
xrelease
outsb
or
fstpt
ds
imul
fisttpll
jge
gs
jns
push
cmp
sbb
popf
inc
test
fldl2e
insb
xor
sub
out
mov
test
sbb
sub
std
pop
ss
aas
imull
xor
or
dec
dec
hlt
popa
add
in
ret
inc
movsb
jmp
dec
je
bound
ljmp
sub
mov
mov
cmpl
rcrl
filds
xor
xor
bound
xlat
add
rclb
pop
shr
push
jne
mov
stc
test
stos
popa
daa
lar
pop
mov
sar
scas
rcll
rcl
in
insb
mov
or
push
sarl
pop
mov
dec
sbbb
movb
inc
insb
sub
leave
mov
or
lahf
mov
jae
pushw
or
pop
mov
imul
imul
inc
in
pop
jecxz
mul
push
mov
shr
test
lea
xor
mov
jae
sbb
jne
fcmovu
sti
in
dec
and
mov
movsl
xor
push
xor
xchg
ja
push
mov
inc
and
mov
cmp
xor
lock
and
pusha
loop
add
outsl
adc
sbb
adc
or
push
sbb
je
movsb
inc
xor
inc
xchg
mov
lock
pop
adc
lock
lret
ljmp
das
je
mov
mov
xor
movl
ffreep
dec
ret
push
addl
enter
scas
sbb
int
push
add
xchg
mov
sbb
inc
cmp
jmp
cmpsb
adc
test
into
in
mov
or
cmpb
xchg
enter
inc
mov
sbb
or
clc
and
fwait
and
cmp
mov
insb
inc
sbb
jl
pop
sti
shl
sti
pop
pop
pop
cs
mov
fadd
in
clc
faddl
sti
test
adc
mov
fisubs
xor
push
push
les
pop
and
cld
adc
test
mov
xor
sub
inc
mov
jnp
int3
nop
jmp
outsl
push
insl
sbb
dec
pop
mov
mov
outsl
scas
sub
pop
out
inc
xchg
popa
mov
pushf
pop
repnz
pop
fs
xchg
enter
mov
je
lds
sub
push
cmpsb
mov
ss
out
popa
pop
pop
sbb
bound
loopne
add
pop
sar
repz
pop
ret
or
add
add
xor
mov
sbb
cli
enter
out
inc
push
in
xchg
inc
pop
jmp
and
scas
cmc
inc
or
cli
lock
jmp
in
outsl
test
les
xchg
shrb
cltd
jg
xor
shrb
push
push
arpl
jns
nop
rolb
sub
mov
push
rcrb
xlat
inc
pop
in
or
cwtl
rol
xchg
adc
js
gs
push
mov
repnz
xor
jl
out
ds
clc
mov
in
add
into
cs
and
shrl
insl
cli
ss
inc
ret
inc
xchg
mov
fmull
cmp
jle
cmpl
in
add
xchg
push
inc
outsl
push
sbb
push
cli
push
jno
leave
mov
jmp
push
inc
mov
pop
cmp
cmp
imul
mov
xchg
leave
pop
in
inc
js
jge
les
dec
pop
push
xlat
cmp
xor
cmc
aaa
pop
sbb
sub
vaddsd
nop
cmpb
xor
dec
loop
xor
xchg
mov
stos
xor
out
in
xchg
les
sub
nop
jl
push
lret
jne
in
jne
icebp
sub
das
push
cmp
mov
jbe
popf
mov
mov
aam
repnz
bound
add
push
pop
pop
xchg
dec
leave
mov
out
mov
mov
adc
mov
and
xchg
mov
jmp
xchg
push
jbe
pop
rclb
loopne
popa
ljmp
ja
inc
sub
insl
fists
out
dec
loop
add
into
rcrb
mov
js
dec
xchg
xor
test
jl
cmpsb
imul
stc
pop
cmp
cmc
imul
mov
cwtl
lahf
insl
or
lahf
pop
xacquire
push
mov
fnstcw
int3
aad
jge
sahf
pushf
js
out
repz
je
push
inc
cmp
test
pop
inc
sub
dec
and
in
xor
add
add
stos
inc
mov
in
cmpsl
adc
jbe
inc
ret
lods
sahf
mov
pop
je
xchg
cltd
jbe
cmp
int3
inc
xor
jae
jg
cmp
ror
loope
cld
cmc
adc
jmp
inc
adc
xor
icebp
daa
jp
addr16
arpl
xlat
jl
mov
xchg
int
sub
sbb
inc
add
push
loope
adc
popf
loope
sbb
inc
pop
or
inc
inc
out
into
and
push
test
cmp
cmpsl
stos
cwtl
push
fwait
mov
mov
jbe
cmpsl
ret
xchg
push
hlt
icebp
xchg
aad
add
fwait
pop
clc
cmp
mov
arpl
push
into
int
add
movsl
ss
add
cld
push
cmp
pop
dec
repz
pop
hlt
in
stos
add
push
push
stos
das
jl
cld
push
mov
lret
call
or
cmp
dec
jo
jle
std
pop
jnp
pop
push
pop
pop
jnp
sbb
jl
in
adc
cmp
and
aaa
inc
sbb
cltd
add
enter
sub
pop
bswap
fyl2x
dec
cs
fdivl
lock
mov
sbb
insb
cltd
fcmovne
std
push
add
sahf
pusha
sets
push
inc
sub
sub
push
or
fsubrl
lock
stc
push
sbb
xchg
lcall
mov
sbb
les
int
popf
lock
push
sub
pop
imul
dec
push
inc
lahf
inc
jne
jp
push
fs
cli
add
cli
or
xor
ds
mov
enter
std
jns
cmpsl
loope
sbb
jo
inc
inc
add
cmp
cmpsl
xchg
and
movsb
and
fldl
xorl
lods
jg
mov
mov
xor
out
jnp
mov
and
mov
fidivl
adc
mov
jnp
cmp
pop
ret
dec
icebp
ljmp
incb
out
sbb
mov
mov
mov
adc
data16
pop
out
dec
pop
addr16
jno
jmp
scas
sbb
cs
xchg
adc
sahf
mov
cwtl
add
notl
push
rol
sub
ja
jnp
inc
inc
mov
hlt
jb
jno
and
mov
shll
add
push
cmp
inc
pusha
mov
mov
roll
ret
and
and
sub
mov
out
imul
fisttps
mov
movsb
push
das
jo
mov
xchg
jecxz
mov
and
iret
shlb
pop
test
repnz
in
xor
sbb
mov
fwait
pop
outsb
test
xor
notb
ja
cmpl
add
pop
into
pop
jo
cmpsb
loop
mov
dec
shll
daa
mov
jb
pop
and
stc
push
xor
mov
mov
shll
insb
outsl
push
adc
pusha
jl
subb
std
mov
adc
iret
mov
cmpsb
mov
jle
pusha
or
fildl
push
xchg
out
into
xchg
cmp
cld
push
outsb
hlt
adc
push
clc
call
sbbb
dec
push
inc
xchg
xchg
icebp
icebp
stos
in
pop
sub
hlt
aam
leave
incb
outsl
sub
mov
jle
push
jbe
pushf
adc
aaa
inc
test
icebp
jo
sti
in
mov
fdivrl
lahf
push
mov
aad
jle
dec
ss
popf
jg
js
sbb
cltd
je
stc
xor
mov
scas
test
inc
adc
lret
lds
push
ret
pop
mov
pop
sub
push
fcoms
fsubr
pop
in
shll
pop
ret
xchg
fnsetpm(287
xor
push
add
lret
shlb
js
data16
out
sarb
mov
into
mov
dec
jb
xor
push
sbb
loop
lahf
mov
cli
mov
mov
mov
dec
jnp
rolb
add
mov
out
pop
aaa
sub
add
pushf
pop
jb
and
push
lret
mov
mov
push
inc
call
sarb
fdivrs
test
push
pop
cld
gs
mov
xchg
js
jmp
sub
push
out
adc
add
pop
fisubs
lods
sub
cmp
test
adc
lcall
push
mov
cmpsb
aad
in
mov
dec
sbb
xchg
and
gs
leave
shr
mov
dec
clc
mov
jmp
dec
lods
mov
shll
test
out
mov
jle
and
mov
pop
pop
mov
and
mov
mul
fucom
mov
ficompl
test
std
jmp
notl
or
testl
jae
loop
pusha
jge
fs
mov
out
testb
push
fistpl
daa
cmpsl
adc
lret
test
or
or
jmp
cmc
push
stos
jge
ljmp
and
lds
push
sbb
push
ja
clc
stc
inc
pop
dec
fs
cwtl
dec
mov
xchg
inc
loop
mov
repz
lods
aaa
inc
fcomps
inc
mov
push
adc
roll
mov
xchg
neg
push
push
cwtl
ret
cltd
notl
jecxz
mov
sbb
inc
sti
shrl
push
mov
stos
pop
adc
adc
and
mov
sub
out
push
inc
inc
test
insl
aaa
xlat
xor
das
pop
sbb
jae
mov
xchg
and
sub
in
data16
push
mov
shll
xchg
xchg
enter
inc
test
mov
sbb
inc
icebp
mov
pop
clc
dec
dec
xor
mov
test
pop
push
xchg
push
push
jg
jg
xchg
outsl
jge
xchg
dec
dec
sub
cmp
push
inc
xor
daa
mov
pop
pop
in
inc
push
mov
pushf
pop
mov
sub
jb
out
gs
fs
add
lea
mov
inc
xor
xor
pop
mov
inc
mov
adc
cmpsl
mov
shlb
pop
dec
enter
mov
jmp
or
subb
adc
clc
shll
push
shl
add
mov
and
sub
adcl
inc
jno
push
mov
sub
sbb
sub
mov
jb
inc
sbb
es
idivl
int3
and
idivl
lock
nop
fs
cmp
dec
dec
frstor
shlb
cmp
inc
mov
out
ja
adc
insb
cs
enter
xor
pushf
dec
or
loopne
adc
pop
mov
and
pop
mov
push
dec
inc
ds
jge
mov
push
jge
or
mov
sahf
inc
idivb
cld
dec
push
call
push
cmpsb
shrl
push
push
adc
lahf
ret
ljmp
sub
sbb
pop
rorl
dec
incb
stos
xlat
in
fbld
aam
adc
in
xchg
call
loope
repnz
and
in
ret
add
jp
mov
add
pushf
jge
push
mov
stos
sub
mov
and
sbb
sub
test
pop
scas
or
xchg
pop
ljmp
jnp
shll
and
mov
add
nop
mov
sahf
lret
out
pop
fnstsw
add
shl
adcb
push
sub
ss
lcall
xchg
in
jecxz
sahf
popa
pop
clc
mov
iret
adc
xchg
and
sub
cmp
xchg
sbb
js
iret
adc
pop
ret
icebp
adc
loopne
xor
sbb
mov
inc
mov
adc
xchg
test
mov
add
rcrb
or
call
cld
and
aam
push
and
cmp
mov
call
xchg
int3
das
push
aaa
lahf
lock
jnp
movsl
movsb
dec
pop
loopne
add
shll
movsb
test
jmp
incl
mov
std
jle
xchg
inc
fidivs
dec
or
push
cmp
pop
inc
cmp
dec
sbb
jge
fwait
inc
mov
shlb
cmp
xchg
aaa
call
pop
leave
sbb
lahf
push
lcall
jmp
outsl
xchg
sub
les
test
xchg
push
inc
jbe
mov
sbbb
ja
xchg
jns
sbb
int
mov
sarl
popf
mov
jae
fisttpll
jno
outsl
in
jge
test
xchg
ja
mov
push
pop
adc
mov
sbb
push
pop
es
xlat
subb
ja
mov
decl
add
cmp
sbb
sbb
cld
dec
addr16
mov
inc
in
aad
jmp
jns
or
mov
aaa
push
or
xchg
dec
jp
jmp
push
bnd
movsl
lahf
fs
pop
cmp
mov
xor
scas
js
add
bound
or
xor
pop
mov
pusha
sub
inc
outsb
jae
jecxz
cmp
and
push
mov
sbb
clc
sub
pop
fsubl
push
jnp
push
push
clc
mov
mov
cmp
xchg
sti
aam
add
push
xlat
ja
push
inc
filds
bswap
sbbl
mov
test
stos
or
lods
mov
xor
sbb
pop
push
dec
mov
stc
adc
cld
mov
pop
adc
pop
imul
jg
adc
adc
adc
ret
and
sbbb
cmp
push
ret
fucomp
cmpsb
mov
add
cmpb
into
or
sub
push
mov
out
xor
cmpsl
or
xor
cmp
aad
iret
add
mov
shl
mov
push
pop
mov
loopne
test
cmpsl
inc
hlt
int
nop
cwtl
cltd
cmpl
orl
push
and
test
add
jp
scas
xor
adc
xchg
cmc
aam
jb
int3
cs
jb
inc
jle
and
fdiv
arpl
jb
mov
mov
inc
stos
iret
sbbb
sbb
xor
ljmp
addr16
nop
xlat
scas
aas
push
adc
and
xchg
lods
mov
xchg
test
mov
push
jp
or
stos
or
sti
pop
insl
adc
iret
xchg
test
or
ficomps
jg
aam
add
push
in
sub
es
daa
jp
mov
fwait
cmp
cmpsb
stc
arpl
cmp
inc
mov
out
mov
into
jbe
ret
mov
fstpl
movsb
lods
and
dec
xrelease
adc
pop
les
rcr
sbb
fbstp
mov
stos
outsl
xor
out
mov
ss
pop
xor
pop
lods
lret
push
xor
add
sbb
or
cmpsl
mov
dec
dec
popf
cmp
cmpsb
test
leave
inc
pop
pop
mov
xchg
leave
or
orl
lahf
out
addr16
mov
jne
repz
sub
mov
pusha
and
pushf
cmp
sub
rcll
aas
sub
adc
jle
loope
xor
loope
sub
jmp
orl
xchg
repz
shlb
into
jmp
fcom
lods
gs
cmp
fcom
lods
cmp
fldz
ret
lock
push
dec
sahf
inc
jg
fndisi(8087
mov
push
pop
inc
imul
cmp
lret
jmp
mov
popa
mov
add
stos
and
aad
fisubrl
dec
in
mov
loopne
es
enter
sub
sbb
adc
lods
dec
and
ljmp
fdivp
jecxz
xor
clc
push
orb
mov
sub
xchg
dec
pop
cwtl
inc
or
jmp
out
xchg
or
arpl
sub
stos
pop
adc
dec
dec
and
dec
xchg
mov
js
lods
popa
adc
decl
cmpsl
sarl
xchg
jno
sub
adc
popf
xchg
fidivs
push
mov
sarb
xchg
xor
sub
mov
dec
cltd
jno
pop
pushf
bound
inc
dec
mov
aaa
mov
jl
xor
or
enter
xor
push
or
les
rolb
pop
mov
push
xchg
dec
pop
cld
insl
les
mov
aad
outsb
pop
imul
inc
shr
xor
in
imul
xchg
xor
andb
fsubrp
sbb
popa
jmp
ja
sahf
inc
lds
mov
int
mov
mov
repnz
movsb
jns
cld
or
cli
add
sarb
lea
adc
iret
xchg
movb
cmc
mov
cmp
add
and
jno
xor
pop
jle
xchg
pop
stos
and
aas
in
and
sar
jbe
cs
dec
sbb
or
xor
icebp
sbb
fstpl
inc
dec
stos
imulb
aam
cmp
mov
pop
jno
je
mov
lea
xor
mov
hlt
xchg
adc
jne
scas
adc
stos
mov
inc
jb
movsl
shlb
sbb
mov
add
push
bound
loope
mov
out
loope
dec
adc
iret
push
cmp
sbb
add
ss
dec
jns
jp
push
jns
mov
out
jp
in
dec
enter
out
push
popa
add
inc
sub
insl
xor
inc
in
xor
jecxz
xorb
add
movsb
pop
or
dec
js
cmp
sti
shlb
mov
adc
sub
rorl
inc
mov
cmc
mov
sbb
adc
leave
into
out
and
mov
inc
mov
in
jae
mov
stos
add
lods
sub
js
xor
mov
lcall
stos
lods
mov
shrl
sbb
add
insb
neg
add
in
jg
mov
movsl
enter
push
sub
inc
jge
sub
je
js
xor
pusha
notb
cwtl
fldcw
scas
stc
leave
repz
lods
not
mov
push
lods
jecxz
or
mov
push
jmp
pop
inc
inc
cmc
rcr
jge
mov
test
fdivl
fldcw
lock
testb
xor
aaa
sbb
out
repnz
push
imul
inc
jp
inc
insl
jle
sub
lods
xlat
pop
jb
or
out
test
sahf
fwait
shrb
cmp
popl
adc
pop
cli
jno
into
xchg
ficoml
cmp
dec
mov
lods
mov
xchg
mov
sar
les
mov
dec
inc
aad
push
sbb
jmp
loopne
jno
adc
das
push
out
fucom
xor
cwtl
push
cmp
loopne
dec
inc
dec
shr
stos
aaa
hlt
ljmp
adc
lahf
mov
mov
in
leave
pop
add
pop
mov
dec
and
xlat
jge
sbb
xor
mov
jg,pt
cmp
or
inc
add
stos
xchg
out
shlb
popa
inc
mov
and
pop
cmp
inc
movsb
jnp
enter
fisubs
fcmovbe
insl
leave
out
mov
push
aad
insl
sub
mov
mov
stos
dec
push
test
mov
lods
inc
bnd
sub
push
xchg
les
push
ret
adc
dec
stos
mov
mov
mov
jb
popf
scas
pop
adc
lock
inc
aas
aas
cmpl
pop
into
mov
pushf
movsl
xor
test
cmp
aas
jg
cmp
push
mov
adc
xchg
jb
lods
xor
jge
xchg
jle
mov
out
in
fistpl
add
xorl
xchg
mov
cmpsl
push
lods
loopne
incb
imulb
arpl
shrb
sbb
addl
lcall
popa
sub
ss
lods
test
xor
jg
push
aaa
repz
pushl
push
inc
sbb
popf
mov
je
call
rcll
push
hlt
adc
lea
inc
push
sbb
stc
popf
les
mov
popf
adc
divl
jne
jne
push
fs
pop
aaa
jb
push
xchg
pop
repz
sbb
push
loopne
inc
testl
in
pxor
jne
out
pop
icebp
roll
fstpt
ds
sbb
xchg
and
cs
sub
cld
hlt
inc
xchg
loop
nop
mov
lock
test
push
sbb
sbb
mov
leave
or
cli
mov
aad
pop
dec
push
pop
sub
mov
and
jmp
add
hlt
je
xor
lret
fadds
mov
idiv
bound
fdivs
or
popa
lret
andl
fisubs
sti
adc
cmc
cmpsl
outsl
mov
in
jns
add
or
or
popa
push
pop
dec
and
jne
jge
or
or
sub
ret
push
stos
push
sbb
rorl
jl
sub
mov
sbb
dec
push
sbb
movsb
dec
in
mov
mov
mov
test
roll
xor
inc
sbb
daa
xor
mov
mov
push
popa
into
call
pusha
fwait
sub
sbb
mov
mov
dec
repz
mov
lods
jl
insb
jbe
scas
repnz
rcrb
test
ret
xor
ss
pop
std
add
rorl
mov
lock
cli
mov
rcrb
mov
roll
stc
sbb
cmc
dec
addr16
mov
popf
out
xor
in
scas
xor
pop
in
add
xchg
mov
jb
xor
mov
xchg
mul
dec
add
ficoms
lea
pop
into
pop
sarl
adc
mov
jl
add
sub
test
fdivl
jbe
inc
push
mov
daa
inc
xchg
jecxz
pop
in
hlt
mov
nop
jb
dec
out
in
jmp
test
xor
in
int3
out
ret
adc
jb
icebp
sub
cmc
pop
push
jp
xor
push
pop
imul
jo
movsb
insl
xor
shl
loop
fcompl
jae
push
dec
xchg
outsl
popa
xor
and
mov
das
mov
xchg
cmp
or
mov
shrl
ret
dec
mov
jno,pn
imul
and
inc
shl
subl
ljmp
out
movsb
ds
movsb
popa
cmc
ja
aaa
ret
add
je
and
jne
dec
adc
xor
mov
icebp
or
xchg
push
push
vmaxss
mov
and
sbb
adcl
insb
aas
mov
mov
sub
jnp
test
into
outsl
lea
jbe
push
sbb
mov
sub
data16
andb
and
es
push
jb
iret
fxch
push
fwait
stos
jbe
xlat
and
push
test
cli
test
sub
jae
and
sbb
mov
jle
mov
pop
data16
push
enter
sbb
bound
fldenv
inc
jae
out
push
loop
add
mov
loope
stc
imul
int
in
sahf
es
mov
mov
leave
xchg
das
fcoml
mov
and
ror
jge
mov
sbb
or
pop
push
cltd
lret
push
push
push
fcomp
test
pop
add
sahf
pop
xor
pop
mov
jnp
add
lret
inc
sahf
mov
inc
sub
js
inc
xor
aam
or
outsb
stos
pop
lret
mov
ret
subb
insb
lahf
mov
pusha
xchg
lods
xchg
loop
and
jecxz
jl
push
xchg
adc
pop
cmpsb
int
orb
xor
cmovl
rorl
ret
adc
dec
sbb
std
cmpsl
inc
andb
mov
inc
add
add
add
pop
push
jns
adc
cltd
dec
outsb
lret
rclb
subb
sbb
dec
jl
or
lock
xchg
jg
mov
add
or
add
cmp
push
call
dec
sbb
call
cltd
dec
mov
mov
loope
mov
lea
aad
push
xor
dec
add
add
and
jg
movsb
sub
cmp
jg
jp
pop
cld
adc
mov
in
jno
lret
in
dec
or
call
adc
call
std
mov
sbb
pop
int
push
sbb
imul
push
aad
cmpsb
dec
inc
fucom
lods
mov
pop
xchg
xlat
scas
mov
sub
adc
popf
inc
fs
gs
push
pop
mov
fildl
adc
pop
mov
inc
repz
mov
hlt
mov
outsl
test
inc
jmp
inc
aaa
in
cmc
jae
out
dec
inc
flds
nop
xchg
adc
lds
ja
or
mov
and
rorb
push
jp
mov
notb
mov
mov
cmpsb
jae
lahf
mov
adc
sbb
ds
outsb
mov
fistl
js
gs
lcall
pusha
dec
jl
add
adc
icebp
mov
pusha
cwtl
enter
mov
stos
push
dec
jo
mov
test
push
subb
push
xchg
mov
cmc
xchg
repz
bound
dec
mov
jle
es
adc
imul
ret
pop
in
fsubr
popa
mov
sub
sbb
cmp
xchg
mov
sbb
lret
test
orb
loope
xchg
sbb
ret
daa
cwtl
mov
sbb
push
lahf
xchg
mov
xchg
xor
adc
faddl
xchg
sahf
pop
inc
aaa
in
xor
adc
outsl
out
xchg
in
xchg
jno
cmpb
xchg
sub
xchg
sbb
fsts
mov
adc
jne
lahf
movsb
outsl
and
push
fistl
jge
push
adc
sbb
aas
xlat
inc
je
stc
sbb
out
iret
mov
hlt
mov
and
cmp
arpl
sarb
adc
jo
decl
pop
std
pushf
mov
mov
cltd
fsubrl
jne
shlb
and
stc
es
add
cmpsl
mov
pop
lcall
sub
inc
sahf
sub
push
push
jae
mov
shlb
push
addr16
jp
sbb
stc
add
mov
loop
ret
fildll
ret
test
aas
fcmovnu
and
mov
sahf
pop
jo
stc
shl
cltd
add
mov
fdivrp
xor
out
adcl
cmp
sahf
jmp
lock
jae
push
xchg
mov
inc
dec
sbb
or
imul
push
adc
or
lret
mov
inc
test
mov
pop
fs
lea
shl
jg
cmp
adcb
cmp
pop
outsb
fstpl
sbb
sub
dec
int
lahf
jge
lea
push
fbld
pop
popf
sbb
and
mov
push
sbb
pop
adc
adc
inc
int3
cmp
xchg
xchg
and
and
scas
mov
xchg
pop
sub
stos
cld
roll
push
pop
cld
popf
sti
repnz
frstor
push
jge
scas
push
adc
test
or
inc
mov
push
push
aad
mov
movsl
or
out
dec
out
sub
pop
xor
mov
imul
pop
mul
loop
inc
shr
test
xchg
jne
cmp
addr16
test
xchg
inc
fisubl
xor
inc
pop
call
addr16
push
add
xlat
mov
pop
mov
push
aad
and
adc
push
push
aam
hlt
cmp
in
pushf
add
pop
cmp
js
icebp
adc
adc
xchg
test
pop
outsb
pop
mov
jecxz
jmp
push
sub
filds
push
ljmp
mov
jl
roll
ss
add
aad
and
ficoml
mov
les
sbb
addr16
add
iret
jg
scas
sahf
or
or
and
lret
sbb
fwait
sbb
iret
into
mov
je
mov
popa
movsl
lcall
xchg
outsl
test
pop
aaa
adc
pop
mov
and
push
mov
testl
mov
pop
mov
aaa
mov
aad
ret
xor
jbe
jnp
mov
test
mov
dec
fwait
aam
out
sub
pop
xlat
inc
test
jmp
push
ficompl
mov
iret
mov
sub
jne
pop
dec
out
lcall
adc
fstps
xchg
aaa
xchg
ljmp
jg
int
xchg
mov
out
add
dec
faddl
push
lds
and
testb
cmp
cli
pop
iret
sub
push
jnp
ret
xchg
pop
cmp
test
mov
sub
mov
and
lret
arpl
ret
adc
fwait
push
mov
out
test
push
cmc
fdivs
pushf
bound
and
loopne
rol
mov
add
mov
xchg
xchg
mov
xor
scas
fisubs
dec
pop
test
xorl
pushf
or
insb
mov
movsl
pop
test
mov
aaa
enter
dec
mov
outsb
mov
mov
clc
out
and
add
out
push
lock
cmp
int
mov
ss
mov
jo
lods
xchg
in
and
in
fsubrs
addr16
les
push
dec
and
push
mov
out
dec
fxch
stc
mov
push
outsl
imul
adc
pop
mov
xor
sbb
sahf
push
push
das
sbb
xor
arpl
push
sbbb
ficoml
xchg
cs
add
push
cmp
pop
mov
lcall
mov
inc
sub
test
inc
sub
or
icebp
ret
or
and
pop
hlt
add
inc
mov
outsl
test
test
fldl
push
or
lock
lods
mov
aaa
and
jmp
mov
cmp
aas
lods
xlat
sbb
jmp
insb
movsl
stc
sub
add
cs
lcall
arpl
pusha
out
mov
pop
nop
scas
shl
mov
and
imul
jge
mov
hlt
push
mov
jecxz
inc
adc
jo
pusha
push
push
ucomiss
jae
dec
sti
mov
movsb
mov
lret
shrl
mov
push
aad
inc
jo
and
jbe
int3
pop
lgs
clc
iret
lock
dec
pop
xchg
jo
aam
in
sbb
mov
fdivs
inc
push
or
enter
sbb
xchg
js
xor
pop
jmp
or
jns
adc
mov
enter
xor
ds
inc
enter
push
sbb
dec
test
pop
mov
dec
lret
ret
adc
lods
push
aam
mov
fimuls
vzeroupper
pop
mov
push
mov
push
gs
and
into
push
cltd
out
fistpl
inc
inc
sahf
inc
cmp
xchg
int3
mov
add
mov
mov
sbb
jnp
pop
aad
dec
or
ret
add
jp
fsts
outsb
xor
clc
pop
addl
mov
hlt
icebp
pop
xchg
imul
cmpsl
cmovo
jle
mov
push
test
and
out
cmpb
jl
jno
mov
and
ret
xor
inc
mov
sbb
test
or
call
mov
adc
int3
adc
mov
sub
orb
fistpll
mov
in
call
gs
cmp
push
cmp
dec
stos
mov
insl
andl
mov
pushf
adcl
add
mov
aad
dec
cmp
scas
fcomi
fisubrl
ljmp
dec
push
mov
dec
xchg
and
push
aam
inc
lods
roll
fstpl
push
dec
jl
mov
sbb
xchg
mov
mov
ljmp
daa
and
enter
leave
cmp
pop
js
mov
mov
mov
mov
mov
lods
lahf
cmpsb
and
aas
jbe
pop
cmpsl
inc
ljmp
push
call
out
rcll
pop
sti
and
sub
iret
pop
fmuls
add
pushf
sarl
nop
divb
and
sar
fistpl
mov
aad
sub
mov
xor
scas
ljmp
es
je
outsl
je
push
icebp
inc
mov
cmp
cld
popl
das
lds
test
push
jae
inc
cmp
jmp
pushf
and
fidivs
dec
lea
jno
cmp
test
sub
shr
pushl
inc
sub
stos
inc
mov
ss
movl
filds
jp
clc
cli
test
push
rcr
dec
sbb
mov
iret
adc
jge
or
arpl
mov
fs
mov
pop
mov
add
inc
sub
xchg
xchg
ljmp
stc
push
ret
ret
dec
inc
and
mov
les
xchg
ds
mov
adc
negl
push
push
inc
sbb
push
push
sub
mov
pop
cwtl
inc
mov
fisttps
jg
lods
aas
sbb
mov
jle
cld
pop
xchg
or
xorl
sub
mov
fsubl
push
pop
rorl
out
xchg
cmp
inc
mov
decb
out
daa
lea
dec
push
les
sub
and
nop
std
je
adc
mov
pop
aas
pop
das
nop
mov
xor
test
or
loope
stc
stos
add
lcall
and
fstl
test
push
dec
adcl
jmp
jg
and
imul
sub
call
push
xchg
pop
rcrl
push
mov
adc
xchg
testl
daa
fnsave
mov
xchg
xchg
jge
inc
clc
mov
icebp
loope
cwtl
and
iret
inc
test
sbb
mov
sub
sub
icebp
adc
fcoml
ficoms
inc
pop
out
stc
shll
jb
in
repnz
jmp
mov
jl
lds
insl
and
or
sarl
or
jb
push
int3
mov
cltd
lea
mov
iret
mov
in
xor
aam
push
int
dec
dec
in
shlb
outsl
push
dec
hlt
cmc
cmp
sbb
and
inc
out
dec
dec
or
pop
push
mov
and
push
add
addr16
push
ret
shlb
push
push
xor
push
cmc
pop
or
movsl
sbb
aas
adc
mov
xchg
lock
mov
inc
mov
js
and
or
stc
dec
mov
loop
out
xchg
lods
hlt
push
xchg
clc
sbb
cmp
test
fs
lret
jp
cwtl
inc
mov
inc
imul
ss
dec
xor
popf
out
pop
int
jb
cmp
dec
push
sbb
and
outsb
push
lea
mov
jg
adc
cmp
mov
in
or
push
sbb
inc
leave
loopne
add
shll
ljmpw
cs
mov
lahf
fstpl
pop
xor
push
jne
mov
push
or
fldt
inc
jne
lcall
out
mov
mov
dec
sbb
dec
cmp
inc
push
pusha
in
pop
nop
jns
xchg
cmc
push
popa
dec
pop
jno
sahf
sbb
add
xchg
mov
sub
jmp
je
and
ret
pop
shll
sub
and
ljmp
aad
sub
push
push
dec
mov
fistpll
test
pop
xchg
jb
in
sub
cs
or
xchg
fbstp
cmc
cmp
loope
xchg
je
mov
pop
pop
sub
je
xor
dec
fnstcw
or
jb
cmc
sub
ficoms
mov
mov
mov
pop
mov
stc
pop
sub
push
rcl
xor
cmp
rcrb
icebp
pop
or
int
jecxz
adc
dec
icebp
scas
ljmp
rolb
mov
sbb
xor
jae
iret
mov
or
cld
ffreep
xor
in
imul
icebp
test
sub
add
test
repnz
adc
in
add
push
xor
lretw
cld
fmul
add
add
xchg
mov
lods
sub
fidivs
push
mov
inc
push
stos
jns
es
mov
sub
lahf
fsubr
mov
dec
outsl
fprem1
mov
jae
movsb
xlat
and
and
xor
jmp
jne
pop
lahf
cmp
jg
dec
jle
bound
daa
jbe
mov
xchg
dec
push
lcall
dec
mov
push
sbb
mov
jge
cmp
cmp
mov
icebp
add
mov
std
xor
rcrl
add
test
pop
fsts
cli
xchg
lahf
movsb
mov
push
gs
xchg
repnz
push
dec
leave
xchg
ja
jno
adc
aad
add
mov
inc
jns
data16
lock
rcrl
mov
jb
adc
pushf
mov
mov
cmp
fildl
testb
shll
js
push
xchg
inc
cmp
popa
arpl
sub
jge
sub
fcoms
fisubrs
in
out
xchg
sbb
hlt
int
jbe
and
inc
movsb
sub
cmp
push
dec
bound
mov
imul
ret
cmp
orb
push
pop
cli
dec
sbb
dec
adc
mov
or
push
cld
jl
inc
and
push
bound
inc
daa
shll
fcom
jge
lods
cwtl
pop
in
out
adc
push
pusha
inc
loope
shlb
inc
mov
adc
pusha
lock
orl
mov
repnz
pop
adc
insb
push
lock
js
push
adc
bound
push
sbb
jl
ss
aas
imul
push
into
inc
mov
popl
jnp
imul
mov
ja
inc
add
sti
jmp
push
pushf
clc
out
out
mov
arpl
mov
adc
xor
adcb
mov
lods
sub
push
movsl
push
cwtl
aad
imul
andl
popl
pop
jno
js
push
mov
movsl
jle
insl
das
clc
jmp
mov
mov
inc
pop
mov
sbb
arpl
push
popa
xorb
aas
fnstcw
mov
test
jo
pop
icebp
push
mov
outsb
mov
add
jl
mov
ret
or
cmpl
or
mov
movntps
ljmp
loope
pop
inc
mov
pop
pop
xchg
fs
loopne
out
jge
inc
pushl
mov
dec
lret
jg
fwait
jmp
leave
mov
rorl
mull
sub
cli
mov
clc
cmp
out
sbb
orb
js
cmpsb
or
mov
xchg
inc
dec
and
sbbb
repz
jae
cmp
loope
xchg
fs
cltd
insb
mov
mov
aad
inc
mov
mov
inc
xor
dec
inc
cwtl
sbb
and
dec
mov
or
jg
jecxz
stos
ret
inc
into
xor
pop
std
std
imul
mov
mov
add
cmpsl
sub
data16
mov
je
stc
pop
subl
fistpll
add
subb
test
pop
xchg
icebp
add
jae
les
cmp
iret
xor
es
sahf
incb
dec
repnz
xchg
and
fadds
xorb
dec
cmp
cs
rolb
xor
popf
push
std
leave
cmc
or
dec
or
in
shl
add
xchg
fmull
in
dec
mov
inc
shrb
mov
or
repz
mov
mov
les
adc
and
mov
int3
adc
cmp
dec
sti
iret
mov
insl
sbb
lcall
in
hlt
push
rolb
lea
mov
jns
leave
aad
loope
jge
add
add
repz
cmp
aaa
jne
pusha
mov
mov
aam
pop
testl
sbb
xor
xor
lret
fists
movsb
outsl
imul
xor
lods
pop
cmp
jno
xchg
lock
das
cmp
fldl
arpl
enter
cmp
movsl
stos
mov
lahf
outsl
pop
js
negl
mov
adc
xchg
jg
aas
cmp
add
movsb
stc
mov
sub
jne
cmp
jge
mov
sub
xchg
inc
pusha
addr16
mov
ss
out
ret
lock
aaa
jo
or
jne
into
mov
aam
push
xchg
or
mov
jl
pop
mov
or
jmp
loopne
inc
mov
mov
test
dec
xchg
dec
sub
jnp
cltd
stos
out
mov
es
je
sub
mov
dec
addr16
int
bound
aas
push
cmp
scas
sub
push
test
or
repz
mov
mov
movsl
mov
mov
es
dec
cmc
imul
test
push
jmp
lds
xchg
mov
add
sbb
xchg
xchg
pop
or
fcomps
testl
pop
cmp
in
nop
push
jmp
test
mov
rcr
rol
push
ret
das
mov
jae
mov
subl
and
sbb
loope
push
cmp
arpl
sub
dec
xchg
sbb
jge
stc
mov
leave
fwait
aaa
mov
ljmp
rcl
pop
mov
xor
push
sub
xchg
cwtl
mov
clc
sbb
notl
outsb
das
xor
mov
outsl
mov
sub
ds
pop
stos
mov
les
inc
mov
mov
pop
aad
orl
xchg
push
jae
push
push
adc
movsl
cwtl
insb
popf
adc
lret
xor
xor
dec
ret
xor
mov
stos
lods
dec
bound
or
ds
aam
jae
divb
xor
adc
xor
in
sbb
out
jb
out
js
mov
hlt
pop
xor
add
push
add
and
sub
int
pop
arpl
pop
sbb
sbb
iret
xchg
mov
mov
lret
decb
push
icebp
loopne
arpl
sarb
jecxz
push
adc
or
sub
push
pop
xchg
dec
out
je
xlat
sbb
mov
or
dec
int3
cmpsb
xchg
cmp
sbb
mov
lock
cli
arpl
mov
lods
push
sahf
cmp
cwtl
sub
andl
mov
ljmp
adc
loope
xchg
ja
jbe
mov
adc
in
movsb
pop
mov
inc
push
scas
cmpl
xor
push
or
shlb
jns
dec
adc
jae
xor
aam
clc
orl
sub
push
jmp
sbb
pop
cmp
lock
fwait
sahf
das
sub
mov
fisubrl
or
cmpsl
cli
movaps
inc
test
outsb
or
hlt
jecxz
xor
and
in
mov
cwtl
adc
jg
bound
daa
jecxz
sbbb
cmp
test
mov
inc
adc
aaa
mov
outsb
mov
in
imul
insb
dec
arpl
pop
fwait
jp
lret
movsl
mov
negl
mov
jbe
outsb
xchg
inc
pop
pop
les
sysenter
xor
aaa
adc
iret
ds
xchg
xchg
jno
jnp
lahf
lret
or
aam
fnstsw
sub
and
pop
in
popa
subb
sub
cmp
call
jge
mov
sbb
cwtl
push
popf
pop
call
push
pop
and
push
sub
dec
mov
aam
stos
add
adc
outsl
imul
fidivs
daa
jne
adc
pop
mov
mov
imul
push
or
js
ljmp
pop
jg
add
ret
mov
add
jo
xchg
call
mov
push
je
ja
pop
in
pusha
dec
push
out
es
cwtl
mov
push
xor
cmp
mov
es
jnp
or
or
outsl
mov
cltd
iret
inc
shrb
mov
mov
sahf
or
mov
add
rcrl
pusha
stc
aaa
xchg
lods
add
or
and
xchg
mov
push
imul
xchg
jo
push
mov
in
push
sub
popf
adc
jnp
xchg
fmull
jecxz
dec
mov
jnp
push
pop
fs
mov
mov
leave
mov
inc
xchg
inc
xchg
add
bound
add
insl
add
xlat
lret
dec
sbb
push
aad
test
pop
lret
mov
fistps
mov
dec
mov
cmpsb
mov
mov
mov
mov
cwtl
test
je
push
shrl
aad
sub
pop
rcl
std
add
mov
sbb
cmp
cmpsb
push
notb
ret
lods
push
sahf
xchg
mov
jmp
jge
lds
int3
pop
hlt
ja
and
mov
je
jge
movsl
sarl
push
pop
cwtl
in
add
scas
jmp
pushf
xor
out
xorb
sti
push
outsl
cmpsl
mov
lret
cmp
mov
lret
push
testb
repz
mov
fs
jns
mov
lret
stc
push
push
jmp
sbb
xlat
pop
inc
leave
lock
bound
push
push
push
popf
stc
adc
icebp
cmp
loope
adc
sbbl
popf
xchg
ljmp
xor
push
in
arpl
or
shll
rcrb
fiaddl
cmpsl
inc
push
pop
adc
lcall
adc
in
push
sub
in
dec
fwait
pop
loop
cmp
sarb
pop
mov
dec
icebp
cld
dec
or
dec
adc
jne
mov
jbe
push
decb
jl
repz
lcall
test
les
fbld
mov
fbstp
sti
mov
mov
sub
repz
push
adc
cmp
frstor
lahf
mov
sub
ret
stos
cli
pop
pushf
xchg
cmp
ss
adc
shl
rcl
and
pop
std
enter
repnz
rcl
pop
sti
and
dec
jns
or
mov
add
ret
das
and
sub
movsb
xlat
dec
jg
iret
sahf
fwait
pop
cmp
aam
sub
push
inc
lods
cmc
xor
xor
stc
arpl
sub
nop
pop
int3
scas
push
jo
push
push
adc
clc
mov
dec
or
push
sub
jp
dec
in
nop
es
or
adc
xchg
cld
sub
cmp
push
orb
sbb
cs
jecxz
dec
jg
jnp
call
and
cld
les
or
push
xchg
sub
ja
cltd
imul
mov
push
xchg
dec
and
outsb
andb
repz
orl
repnz
in
push
mov
mov
enter
mov
push
xor
and
test
ret
cmp
lret
out
jne
repnz
sbb
mov
xor
xor
push
adc
or
cmc
push
adc
dec
ljmp
xor
add
dec
pushf
inc
pushf
mov
sbb
sbb
das
int3
leave
das
sbb
arpl
out
inc
adc
je
sti
gs
sbb
cmpsb
orb
xor
rol
xlat
sahf
shlb
inc
in
sbb
and
ret
jno
int3
cmpsb
jge
and
adc
add
pop
add
mov
in
imul
push
dec
mov
sub
std
mov
xor
arpl
mov
shl
and
movsl
cwtl
rol
adc
rcrb
push
insl
lods
insl
xor
mov
pop
add
shll
mov
jl
in
xchg
jle
sbb
bnd
gs
lods
xchg
fwait
mov
mov
or
mov
shrb
psubd
mov
andb
bound
pop
sbb
fdivp
sbb
iret
andl
jg
push
add
push
aam
ja
jg
mov
pop
cwtl
insl
jmp
js
and
subb
je
pushf
pop
rclb
mov
fsubr
int3
xor
xchg
pushf
pop
xchg
lea
idivb
sahf
pop
cltd
clc
nop
fiadds
cwtl
fs
fs
pop
xchg
gs
jp
adc
insb
inc
mov
out
loopne
jb
nop
sahf
out
daa
cmp
jns
test
pop
loop
mov
call
test
leave
mov
leave
out
arpl
mov
ljmp
adc
mov
dec
lods
inc
movsl
cltd
mov
xchg
call
int3
adc
pop
mov
divb
sahf
lret
stc
or
lods
dec
loop
xor
outsl
dec
in
xor
mov
in
ret
or
stos
pushf
jns
cli
pop
mov
jnp
jl
cmp
fdivrl
test
add
int3
mov
sub
cmpsl
cmp
mov
test
mov
rclb
ljmp
push
push
rolb
and
adc
insb
hlt
jae
pop
insl
inc
add
or
sub
adc
xor
fs
jg
sbb
es
and
mov
mov
scas
rcr
mov
insb
adc
ljmp
push
sub
imul
xchg
push
or
sub
lret
xlat
cwtl
stos
sbb
shll
mov
mov
cmc
notb
lcall
shlb
xor
mov
es
push
xchg
cmpsb
fstpt
dec
arpl
push
lods
push
add
jo
js
lret
repnz
loopne
shrl
scas
mov
push
mov
add
lret
fcoml
aam
cmp
enter
scas
roll
testb
jle
insl
xchg
dec
or
pop
sub
inc
xchg
pushf
stc
jg
popl
xor
or
jb
das
mov
mov
mov
jp
push
cs
pop
cli
adc
mov
testb
or
inc
fwait
test
idivb
outsl
pop
ficoms
lcall
mov
jnp
mov
cmp
mov
sub
lods
cld
addr16
aam
sbb
sbb
pop
inc
mov
mov
lcall
push
enter
mov
push
xor
lea
test
mov
xor
sbb
int3
xchg
mov
inc
sbb
dec
and
dec
sbb
or
std
and
xchg
mov
and
push
cwtl
fildll
out
push
mov
test
loop
add
sub
xchg
dec
mov
fstpt
rclb
jle
scas
rclb
jecxz
xor
and
dec
and
out
int3
mov
test
mov
jmp
cmc
pop
in
adc
cltd
mov
mov
sti
js
sbb
and
mov
clc
loope
and
mov
mov
add
cmp
lods
dec
or
mov
aad
inc
pop
das
pop
add
inc
xchg
push
push
nop
data16
cli
test
or
dec
adc
int3
out
pop
into
lods
xchg
pop
dec
imul
jecxz
mov
mov
jmp
sbb
nop
ror
call
ror
mov
cld
movsl
jl
mov
add
dec
test
jmp
push
adc
aaa
out
leave
or
repz
mov
lret
fucomi
test
subb
xor
jp
sub
jmp
bound
inc
xor
mov
or
gs
cmpsb
jnp
test
sbb
into
cltd
xchg
mov
mov
dec
xchg
push
lcall
or
lock
sbb
inc
lock
add
jns
jecxz
sub
iret
xchg
sahf
sub
mov
bound
push
add
sub
scas
sbbl
call
add
and
xchg
dec
dec
mov
popf
add
push
shrl
dec
std
or
aam
mov
pop
incl
or
push
lods
pop
xchg
sbb
pop
rcl
mov
adc
out
fldenv
lret
jne
push
insb
dec
movl
xchg
out
add
adc
mov
sahf
dec
mov
jg
cmp
and
and
ds
cld
cltd
fwait
pop
int3
icebp
dec
and
pop
pop
or
push
repz
and
push
js
lods
push
setb
inc
xchg
es
out
push
xor
mov
int
sub
fwait
and
shl
fmul
cmc
and
lods
movsb
pop
and
rolb
sub
outsl
inc
sub
test
pop
loopne
jno
dec
int
scas
stos
in
inc
shl
cs
or
jecxz
ljmp
adc
out
pop
call
xor
repz
repnz
mov
pop
addr16
ficoms
sub
insb
loope
test
nop
dec
inc
mov
add
pop
out
jecxz
ja
mov
sub
repz
jg
out
mov
ds
clc
or
mov
cld
shrb
aam
cmpsb
inc
ja
add
jmp
xor
mov
add
fwait
icebp
push
dec
out
xchg
icebp
adc
sub
jle
sub
fcmovnu
xchg
mov
cmp
xchg
cmp
and
or
and
push
icebp
das
mov
add
xor
cmpl
dec
inc
mov
lea
and
loope
inc
cmp
push
adc
inc
loop
pushf
aas
dec
jmp
sbb
ret
cmp
push
and
out
cmp
cmpb
sbb
mov
pushf
sbb
inc
mov
add
sbb
jbe
jne
inc
jns
test
mov
cmp
leave
sub
mov
and
aam
shlb
add
repz
cld
push
leave
into
or
movsl
mov
add
popa
ror
and
rolb
push
xchg
cmp
ret
addl
insl
cmc
lret
mov
ror
iret
xor
cmpsb
fs
push
in
inc
mov
outsl
jnp
rorl
mov
lahf
mov
fstpl
inc
push
shrl
repz
adc
test
and
sbb
pushf
je
inc
fs
adc
xor
nop
mov
dec
icebp
jcxz
jae
cmpsl
cmp
push
aad
xor
cwtl
das
and
xor
hlt
fisubrs
dec
xchg
add
subl
xchg
xchg
fs
cmp
and
jl
mov
idivb
mov
popa
dec
and
ja
nop
adc
xchg
mov
or
adc
pop
frstor
fisttps
inc
fs
pop
adc
in
mov
stos
mov
loope
cmp
daa
inc
xchg
cmp
cltd
pop
mov
mov
jo
out
aas
push
add
pop
xor
xchg
lods
jno
push
adc
dec
mov
addr16
shll
push
out
cmp
xchg
mov
jp
lret
gs
mov
and
mov
mov
in
fsts
mov
inc
sbb
sti
adc
inc
sbb
pop
mov
lret
pop
lock
sbb
mulb
pop
cmp
and
jg
mov
nop
add
mov
cmp
popf
pusha
xor
mov
fidivl
pop
mov
repnz
gs
mov
pop
arpl
loop
out
inc
imul
cmp
iret
or
adc
repz
cli
push
jg
mov
sbb
lret
call
and
jbe
lcall
sub
pop
aas
daa
sbb
clc
nop
loop
jge
clc
testb
hlt
adc
lods
jbe
jno
cmp
in
sti
les
pop
popa
xchg
scas
sbb
decl
or
pop
push
mov
pop
add
adc
outsl
movsl
adc
pop
je
inc
or
cwtl
inc
xchg
xchg
cs
hlt
shll
cmp
repnz
mov
sub
mov
inc
push
psubsw
mov
mov
les
add
lock
push
mov
jb
fstpt
and
in
inc
int3
daa
mov
stos
stos
pusha
je
jno
mov
jmp
adc
daa
in
jo
pop
test
or
popf
lods
mov
mov
popf
std
cli
mov
dec
imul
in
out
sbb
mov
xlat
test
jne
push
push
dec
add
dec
fsubl
inc
pushf
inc
mov
fisubs
fimull
add
or
inc
test
sub
sbb
clc
cmp
test
inc
arpl
pop
jo
xchg
addr16
outsl
adc
stc
fisttpll
test
loop
push
adc
pop
dec
adc
jge
adc
pop
faddl
adc
out
adc
or
jle
push
sub
pop
xchg
mov
test
adc
jle
jne
ret
sub
ret
cmp
and
add
mov
jb
aaa
outsl
jne
insb
mov
mov
shll
jb
xlat
mov
ficoml
ljmp
jp
xchg
sbb
inc
ljmp
stos
push
jmp
pop
jne
loopne
lea
cli
dec
mov
jl
xor
inc
imul
mov
dec
cmp
pop
sub
pop
add
ret
adc
cmp
sub
push
add
shrb
ds
fdivs
movsl
filds
dec
jl
mov
jg
mov
ds
jmp
je
cmp
cwtl
lock
push
mov
fimull
lods
mov
arpl
fisubs
ss
pop
cmp
arpl
push
sub
shl
je
mov
movsb
mov
pusha
xor
js
jp
xchg
inc
inc
scas
sbb
mov
iret
sub
xchg
aas
or
cmp
pop
sub
jg
loope
popfw
xor
sbb
jle
test
adc
xchg
mov
jge
push
push
jge
dec
mov
rcl
inc
mov
hlt
out
mov
pop
and
mov
mov
call
jecxz
pop
shll
and
aad
mov
mov
test
repz
mov
repnz
sub
sbb
adc
lods
jne
xchg
movsb
scas
dec
aaa
inc
push
xchg
popf
shlb
or
jnp
aas
sub
jne
xchg
add
fcoms
stos
loop
sbb
pop
or
push
pop
cmp
out
fbld
das
icebp
mov
inc
and
testb
outsb
cmp
repz
pushf
sarl
scas
fisttpl
dec
iret
fxam
mov
test
xlat
inc
lahf
test
lcall
addr16
or
adc
rcrb
pushf
imul
mov
or
jl
imul
es
fs
dec
fucomi
sbb
xchg
xor
fildl
xchg
out
sarb
stos
lods
adc
sub
xor
pop
mov
popf
rcl
outsl
sub
mov
xchg
in
fstps
mov
shr
scas
adc
add
adcb
sub
mov
inc
in
rcll
outsl
in
scas
lar
pop
stos
push
or
jbe
mov
xchg
mov
mov
fldt
inc
xchg
sub
mov
cmp
sbb
and
fwait
inc
push
imul
adc
sub
es
fadds
test
xor
or
popf
das
ljmp
into
or
pushf
in
xchg
push
and
mov
and
jmp
dec
repnz
and
js
jbe
aam
aad
rolb
fwait
cli
lcall
add
add
daa
repz
fsubrl
mul
xchg
and
movsl
sar
test
les
cmp
pop
jge
in
pushf
inc
and
iret
push
shll
stc
sbb
jge
push
pop
dec
push
and
lods
cld
add
xlat
push
pop
xchg
push
mov
pop
or
call
fstps
das
pop
adc
inc
sbb
jecxz
ljmp
outsb
les
add
fdivl
push
adc
scas
adc
ljmp
add
push
outsl
test
outsl
pop
data16
xor
xchg
xor
push
es
and
jmp
xchg
jo
rcll
sahf
sbb
sarb
or
dec
push
cmpsl
mov
push
xor
mov
cwtl
test
cmpsl
jg
inc
add
push
dec
nop
inc
adc
lahf
or
shlb
push
ss
and
push
ljmp
sbb
dec
das
mov
rcrb
lock
adc
leave
push
pop
aas
push
xchg
and
adc
repnz
mov
mov
jbe
add
in
sbb
sbb
jg
push
mov
es
fcom
in
pusha
sti
inc
lcall
sbb
mov
shr
add
mov
nop
inc
ljmp
or
popf
fdivrl
sub
cmp
push
gs
mov
pop
cs
rolb
jg
and
push
aas
lods
dec
nop
pop
sbb
icebp
mov
sbb
push
mov
outsb
mov
mov
test
fwait
arpl
aas
in
faddl
jp
inc
test
cs
aaa
cltd
mov
sahf
sar
imull
inc
xor
xor
xchg
mov
inc
in
push
mov
add
iret
xorl
mov
out
fcomi
enter
push
jge
xor
dec
sub
loopne
nop
mov
fs
pop
sbb
pushf
mov
popa
sub
out
jnp
xor
cmpsb
push
leave
mov
lcall
cmp
inc
mov
movsl
call
add
clc
jp
mov
xor
adc
cmpl
mov
xor
int
mov
and
shl
imul
flds
cltd
cmp
cmp
xlat
pop
addl
int
xlat
lds
push
ja
fsubrs
xchg
scas
sub
adc
icebp
repz
cs
cltd
movsb
lcall
push
inc
jl
push
jmp
push
inc
je
test
out
test
shl
ss
int
sti
leave
adc
pop
or
pop
xor
push
sub
mov
add
int3
fwait
idiv
inc
dec
imul
test
cli
dec
add
or
pop
xchg
sarl
jmp
jg
mov
xchg
cld
test
lahf
mov
dec
das
imul
ss
out
pop
out
fisubrs
push
jno
repnz
je
push
jl
les
add
mov
xor
int
push
sbb
jecxz
add
ficomps
jno
lret
popf
sub
mov
cmp
adc
mov
aaa
or
flds
out
daa
stc
push
jge
and
xchg
cmp
mov
pop
mov
imull
push
or
mov
leave
rcl
std
negb
imul
cmc
stos
sub
ss
cmpsb
ja
clc
sub
in
sub
lret
insb
jns
mov
pop
in
cmc
lods
ret
test
imul
lret
push
add
xor
stc
or
dec
test
sub
mov
ret
or
sbbb
mov
jne
jb
sub
ret
dec
add
sbb
mov
mov
das
shll
clc
dec
push
test
js
sub
add
andl
out
push
ss
sub
xchg
or
sti
mov
jmp
pop
inc
out
pop
or
jecxz
mov
testb
int
loope
or
sub
in
icebp
mov
add
pop
sub
js
mov
int
test
inc
lret
stos
sti
add
push
out
hlt
mov
inc
and
vmulpd
outsl
popl
add
mov
mov
roll
loop
mov
int
cmp
jbe
flds
loop
xor
pushf
jns
hlt
pop
xchg
adc
ret
sbb
jo
inc
mov
sarb
les
jmp
lcall
stc
sbb
push
and
sub
mov
in
fnstenv
lret
dec
cmp
jb
stos
add
insl
loope
jnp
mov
or
jno
add
clc
push
push
and
cmp
js
push
mov
inc
mov
fldcw
insb
jl
or
mov
jmp
mov
mov
push
movsb
lods
inc
inc
shlb
xor
or
std
scas
dec
inc
pop
sahf
orb
inc
cmpsb
xor
jnp
dec
pusha
jmp
repnz
out
xor
rcrl
enter
pop
jmp
and
mov
inc
jp
popa
jo
xchg
dec
aaa
xchg
movsl
stc
pop
adc
pop
incl
andb
ret
mov
mov
fcompl
stos
dec
mov
fsubrs
mov
rdpmc
jecxz
cmpsl
xchg
jne
les
xor
inc
pop
push
mov
jle
xchg
je
pop
sbb
sbb
test
scas
cmp
mov
or
and
pop
inc
sarl
mov
push
cmp
mov
aad
cmp
add
clc
jmp
rcll
push
out
xchg
pop
add
pop
mov
out
xor
in
pusha
sbb
xchg
gs
mov
push
jo
insl
xlat
jge
fs
pop
cmp
fwait
mov
push
mov
and
fimull
pusha
loope
or
jno
or
mov
jnp
repnz
call
cld
cwtl
cmpsb
xchg
sbb
popa
loopne
add
repnz
test
adc
xchg
jno
sbb
clc
movsl
popaw
push
dec
inc
aam
inc
je
inc
and
stos
mov
movsl
iret
inc
cmc
xor
adc
xlat
pop
insb
mov
or
vcvtps2dq
push
cli
mov
aam
imul
je
stos
jb
ja
xor
ret
dec
lock
and
lret
imul
sbb
lret
negl
stos
jo
fisubrl
inc
fidivl
cmp
dec
movsl
jg
cltd
mov
cmpsb
sub
fs
inc
push
jl
pusha
leave
mov
pop
xchg
push
in
pop
js
mov
cmp
mov
in
out
push
lods
sahf
cwtl
jnp
xor
push
mov
sti
xbegin
inc
iret
or
lcall
jl
pop
fadd
lret
or
lcall
jnp
iret
stc
sti
jne
sub
add
or
rorl
iret
xor
aas
aad
jae
mov
adc
mov
lock
jae
mov
aad
fmul
mov
mov
int
icebp
insl
mov
repz
movsb
gs
enter
mov
cmp
out
lds
inc
out
add
pop
decb
mov
dec
jnp
call
iret
scas
lcall
lods
cmp
sbb
js
lret
fs
lods
sbb
mov
outsb
and
push
inc
jg
pop
std
jno
or
ss
push
and
dec
sub
test
inc
xor
dec
icebp
or
fildl
aas
mov
lret
or
pop
sub
push
jno
shlb
xchg
aaa
push
pushf
es
or
mulb
imul
fucomp
test
data16
xchg
xchg
pop
sarb
or
in
cmp
jmp
mov
dec
jecxz
in
dec
push
and
sti
inc
jmp
hlt
in
enter
cmpsb
dec
insb
lods
scas
mov
cmp
sbb
sbb
pop
imul
pusha
sub
into
and
xchg
dec
mov
loope
or
dec
pop
not
lock
and
scas
dec
fnstenv
push
mov
sbbb
jo
sbb
jnp
and
lods
jb
repz
mov
xchg
shlb
or
roll
jmp
iret
movsl
clc
pop
insb
xchg
std
fisttps
push
push
cmp
inc
mov
dec
faddl
movsl
fisttpll
jb
fstpt
push
push
inc
sbbb
ror
cmc
mov
dec
adc
push
test
sub
jb
mov
and
and
shlb
rorb
adc
push
dec
dec
repnz
cmc
or
insb
dec
dec
cmp
jp
push
iret
das
frstor
inc
lret
cli
mov
shlb
ja
add
jmp
es
add
pop
fisttpll
add
fsts
pop
pop
lea
xchg
and
cmp
jmp
or
in
add
and
xstore-rng
cmpsl
les
in
stc
or
push
sub
jp
add
icebp
aaa
cwtl
lock
or
aam
pop
fimuls
ret
jle
add
loop
dec
dec
xchg
fimull
cmp
pusha
mov
dec
dec
inc
sahf
jns
or
popf
push
insl
neg
inc
pop
ljmp
dec
lahf
mov
mov
xchg
rcr
in
test
add
ret
movsb
mov
xchg
cmp
cmp
push
and
mov
pop
dec
pop
pop
mov
mov
imul
dec
lods
xor
ljmp
mov
adc
pop
cmp
repnz
mov
dec
xchg
mov
je
cmc
lods
xchg
ss
xchg
arpl
xor
mov
xlat
or
xor
lods
ds
mov
test
cmc
nop
adc
cli
cmp
imul
pop
inc
popf
data16
dec
push
dec
xor
aaa
mov
das
mov
es
in
bnd
shlb
adc
jns
insb
inc
jns
test
mov
sub
in
sbb
xchg
idivb
sbb
mov
pop
mov
mov
cs
sbb
mov
cld
lock
call
push
call
dec
mov
shrl
arpl
cmpl
pushf
jle
insl
sub
sbb
pop
imul
leave
pop
jnp
mov
cltd
push
in
mov
xchg
insl
jmp
test
clc
les
push
or
or
loop
fnstsw
inc
push
js
out
push
adc
mov
pop
dec
xor
int
sarb
nop
scas
stc
or
pusha
sub
mov
ss
out
stos
jecxz
fsubrp
jmp
add
in
lods
pop
add
test
out
pop
mov
pusha
testb
andb
lods
out
jp
mov
stc
jns
pushf
cmpsl
enter
push
jg
in
sbb
pushf
sbb
push
jb
scas
jle
addl
scas
or
rorb
sbb
mov
out
ja
xchg
int3
add
test
out
das
lahf
xor
movsb
cmp
test
push
and
push
jns
add
fldt
int
stos
or
adc
xlat
out
lds
sub
in
and
test
ficoms
sub
xlat
jae
pop
fld
pop
and
cld
and
out
popf
bound
add
loop
mov
leave
rolb
aam
mov
sbb
xlat
add
es
mov
xchg
sub
je
dec
adc
cltd
fistps
sbb
clc
fdiv
xchg
lods
adc
pushf
repnz
test
out
negl
or
push
add
jg
push
xchg
and
sub
ret
mov
cs
nop
push
xchg
mov
data16
cmp
mov
jecxz
mov
imul
sti
mov
loope
sub
dec
es
add
mov
popf
cmp
popf
lret
cmpsl
test
addr16
add
push
jnp
adc
les
cmp
cmp
jl
or
jne
xor
jnp
inc
or
bound
pop
scas
fldl2e
popf
out
add
scas
mov
sub
out
test
add
aad
or
ja
dec
imull
dec
aam
push
test
aas
cmp
and
xchg
icebp
fidivl
xor
lret
jbe
dec
push
inc
mov
loop
or
fisubl
data16
cmpsl
pop
loop
rcrb
iret
jb
or
mov
cli
pop
out
cmp
mov
jecxz
jl
xor
push
scas
xor
stos
aas
adc
jae
jae
sahf
jns
out
mov
subl
in
xchg
adc
divb
sti
xchg
xchg
mov
mov
nop
aas
pop
cmp
or
loopne
mov
mov
stos
insb
in
push
lods
lret
aad
mov
sarb
shlb
add
adc
push
fsubs
xor
mov
mov
sbb
leave
mov
fidivrs
into
mov
inc
arpl
stc
hlt
mov
jo
jae
push
add
push
test
outsb
jge
or
mov
out
ret
add
cs
adc
sbb
and
xor
aad
out
pop
repz
xchg
or
sbb
push
cmp
inc
mov
jg
std
std
jno
jo
mov
sbb
add
sbb
lods
xchg
iret
in
fstp
add
jle
fldcw
cs
jge,pn
idivl
int
dec
fcmovb
sub
pop
fwait
pop
push
bound
out
add
mov
stc
lock
stos
and
sbb
jb
pop
dec
jg
fbld
out
pop
jnp
xor
jns
mov
movsl
jo
push
xchg
adc
ljmp
aad
sti
lods
push
dec
inc
pop
gs
or
das
xchg
dec
in
adc
ret
pop
addr16
xchg
mov
jbe
sbb
mov
iret
push
push
xlat
inc
pushf
mov
in
or
insl
in
push
mov
sbb
inc
lret
xor
push
push
stos
dec
cmp
jge
cmp
pop
into
arpl
into
adc
mov
adc
sub
jo
mov
cmp
pop
icebp
mov
cmc
adc
add
xchg
jns
shlb
js
ja
cs
jmp
sbb
movsb
imul
inc
push
mov
mov
lods
mov
enter
das
sub
mov
and
movsl
ror
testl
out
cmpb
gs
jbe
sbb
jge
adc
mov
mov
test
pop
out
lea
jo
jmp
adc
adc
xchg
jbe
dec
cmpsl
ror
out
vorps
push
clc
mov
xchg
pop
add
adc
dec
hlt
clc
ss
lds
leave
outsb
das
nop
lods
pop
jbe
cmp
sbb
mov
dec
hlt
mov
push
aam
xor
push
add
sub
or
stc
fsubrl
movsl
or
xchg
ret
push
push
adc
mov
lret
js
mov
mov
cmp
lock
fidivl
inc
or
hlt
rcl
mov
rcr
in
dec
popa
in
inc
mov
mov
jecxz
push
mov
dec
mov
test
in
outsl
repnz
cmp
sbb
in
and
jno
adcb
and
and
pop
adc
sub
and
xor
shll
inc
jmp
movsb
sub
inc
adc
jg
mov
dec
jg
or
test
push
xchg
jmp
mov
jne
cltd
cltd
cmp
jae
lahf
jge
mov
mov
jmp
pop
sti
test
jge
cwtl
lcall
sub
jno
bound
dec
dec
mov
stos
mov
in
xchg
popa
ja
shl
xchg
push
test
jbe
jle
push
lret
test
mov
dec
sub
decb
jnp
adc
ret
or
out
shrl
sahf
cmp
or
pop
xchg
sub
adc
shl
mov
outsb
push
lods
inc
enter
aaa
ljmp
pop
push
mov
addr16
pop
cmp
jge
add
pushf
push
sti
pop
ret
cmp
lods
loopne
pop
rcr
testb
int
xor
push
iret
ss
pop
test
mov
rol
mov
add
dec
repnz
sub
xor
mov
loop
pushf
sbb
push
movsb
test
roll
arpl
ss
daa
push
sub
sub
arpl
lods
lock
out
nop
out
mov
addr16
adc
stos
sbb
repnz
mov
sbb
adc
push
dec
ljmp
je
dec
scas
add
jnp
push
jp
xchg
sarl
cld
lds
in
jecxz
ret
jbe
and
add
gs
mov
pop
fnsave
mov
adc
stos
push
cltd
jae
lea
push
mov
and
fbstp
push
scas
inc
out
addr16
test
xchg
into
daa
cmp
mov
insb
inc
mov
rcl
cs
adc
idivb
or
xchg
jbe
les
mov
add
push
std
pop
loopne
imul
inc
xor
pop
xor
lcall
fimull
sbb
cmpsb
xchg
push
or
dec
inc
shrl
lods
adc
mov
xchg
scas
xor
mov
incl
mov
inc
push
cltd
pop
cwtl
sub
test
or
pushf
xchg
mov
dec
jo
inc
lcall
mov
inc
leave
pop
inc
or
jp
and
add
shr
pop
mov
out
pop
mov
mov
or
cmpb
push
xor
popl
push
scas
into
movsb
jb
fnstenv
test
jne
cld
cmp
inc
adc
sbb
mov
dec
xchg
mov
pop
inc
dec
ret
stc
nop
bound
test
iret
test
inc
lret
insl
icebp
inc
cmc
or
data16
shr
adc
stos
sub
dec
mov
and
rcrl
pop
jnp
rol
dec
pop
mov
dec
inc
dec
inc
or
mov
mov
and
fsub
sbb
test
dec
adcb
mov
xor
fcmovbe
enter
hlt
add
adc
stos
inc
aam
movsl
push
xchg
into
inc
roll
mov
push
dec
cld
inc
mov
add
je
cmp
cld
push
mov
rcrb
xchg
fsts
push
mov
lcall
mov
jnp
call
mov
stos
push
jae
xlat
sub
xchg
add
adc
push
jl
cltd
xchg
jno
fldcw
xchg
xlat
cwtl
pop
jnp
sub
fcmovbe
and
sbb
sub
and
inc
lret
in
or
sti
adc
xchg
filds
mov
mov
filds
pop
jnp
fs
movsb
imul
ss
mov
in
enter
adc
mov
and
mov
dec
cwtl
insl
ss
mov
je
loope
test
aaa
sub
sub
clc
sti
fdivrl
sarl
fistl
lea
push
sub
sbbl
sbb
cld
dec
pop
adc
xor
test
lock
jnp
and
out
inc
mov
int
xor
roll
testb
jle
add
ds
loopne
push
dec
es
adc
fucomp
sar
js
fiadds
ljmp
aad
mov
lock
mov
cmp
and
pusha
mov
test
adc
push
mov
cmp
xor
dec
and
or
dec
sbb
or
sub
inc
call
push
ja
mov
jg
mov
jnp
mov
lods
jns
or
lock
inc
cmp
xor
mov
insb
in
repnz
xchg
out
sub
push
pusha
mov
pop
subb
sub
outsl
inc
push
sub
or
in
arpl
repz
sub
popf
cwtl
sub
addr16
inc
cltd
or
mov
push
jae
jg
jo
cmp
dec
mov
xor
sti
divl
lea
pop
pushf
mov
xor
mov
rcrl
mov
loop
cmp
aas
loopne
mov
insl
dec
mov
sub
je
push
lods
orb
pop
or
pop
cmp
in
rolb
push
xchg
shll
add
std
cmp
inc
pop
clc
int3
push
popa
jecxz
xor
in
xchg
lcall
adc
in
in
cld
sub
ret
loop
loop
sub
mov
fld1
jb
mov
jno
sarb
inc
out
daa
sub
cmp
lds
xchg
mov
sub
outsl
repnz
fidivrl
cmp
inc
mov
cmp
mov
inc
cmp
loop
std
mov
loopne
cmp
dec
push
lock
jle
filds
adc
pop
cwtl
arpl
xor
and
pop
mov
jp
bound
int
push
ret
fstpl
mov
adc
or
pushf
pop
cmp
cs
test
ss
mov
not
jge
js
xor
pop
js
aaa
inc
lods
mov
pop
sbb
pop
insl
jns
add
or
lret
repz
test
mov
cmp
sub
and
js
push
test
pusha
lahf
push
inc
pop
es
add
mov
xor
test
cltd
xchg
sbb
dec
xor
gs
insl
jecxz
inc
jb
repnz
sub
pop
xchg
mov
mov
movsb
cmpsl
fcomip
adc
xor
bound
dec
pop
sahf
mov
cli
sbb
jns
gs
or
mov
mov
adc
jl
sbb
cmp
mov
popf
cmp
ja
inc
sbb
addl
pop
push
aam
fildl
popf
pop
dec
aam
repz
or
cld
arpl
into
xor
xchg
movsb
fbstp
mov
inc
enter
mov
stc
xchg
fwait
push
and
mov
cwtl
sbb
jb
jge
push
rcrb
sub
rorl
cmp
mov
js
adc
cmpsb
pop
xchg
cmp
mov
sub
push
sar
lea
lret
lods
out
add
dec
adc
fdivl
mov
out
push
mov
gs
ds
mov
es
iret
push
les
and
mov
cmp
inc
push
mov
lret
cmp
repnz
push
jns
lahf
pop
pop
push
mov
sbb
in
jno
in
cld
pop
mov
pop
lahf
sub
dec
cmp
sbb
jmp
or
jb
out
pop
add
mov
popa
add
xchg
aaa
ss
mov
out
push
inc
xor
mov
rep
arpl
sub
sbbb
sub
or
add
or
cmp
test
or
cmc
sub
or
daa
fwait
cmpsb
lcall
or
rcr
add
sub
dec
and
dec
cmp
lahf
dec
cmpsl
shll
add
dec
add
inc
sahf
std
lret
into
pop
push
xchg
jg
mov
push
stos
and
push
dec
jp
es
rcr
mov
pop
cmpl
pop
mov
imul
outsb
inc
arpl
mov
shl
arpl
scas
in
inc
pop
iret
jnp
pop
jne
mov
fwait
mov
xchg
sub
mov
push
mov
clc
cmpb
loop
cmp
mov
and
gs
cmp
sbb
stos
push
sbb
mov
push
push
movsb
ret
push
lret
inc
dec
roll
icebp
std
mov
test
jae
decb
xor
lods
data16
jbe
xorl
das
lds
imul
into
jnp
cmpsl
aam
fisttps
push
lea
adc
mov
push
push
sbbl
cmpsb
mov
jo
sarl
stc
or
adc
fdiv
jge
jmp
lahf
call
repnz
xchg
and
adc
repnz
lret
xchg
xlat
lret
cmp
in
mov
mov
and
stc
jb
or
cmp
jmp
out
loop
sub
sahf
jle
and
dec
pop
lcall
lods
inc
stc
cmpsb
mov
mov
dec
ljmp
cmp
xor
aad
fbstp
fbstp
dec
arpl
pop
push
shlb
out
dec
rolb
outsl
ljmp
aam
fstps
je
pop
dec
fdivrp
lret
lret
cmpsb
movl
or
mov
cmp
mov
adc
jle
cmpl
sbb
sarl
pop
das
dec
test
in
idiv
mov
ret
jne
ds
ror
cs
fmull
unpckhps
add
gs
lret
adc
jae
cld
push
imul
pop
sbb
jbe
jg
mov
sub
jl
fdiv
cmp
int3
jle
mov
mov
push
out
push
fnstcw
lahf
add
sub
pop
lahf
pushf
insb
adc
ja
ret
adcl
jge
popf
outsl
fldenv
mov
xor
aam
pop
jg
mov
dec
jbe
movsl
in
iret
push
jmp
jle
jg
xor
loop
adc
scas
or
in
insl
dec
cmpsl
mov
dec
xchg
les
ficomps
test
jbe
dec
lahf
in
dec
sahf
cltd
popa
mov
inc
subl
push
mov
in
insl
or
dec
inc
add
sti
fwait
outsl
dec
daa
xor
mov
aam
adc
fcompl
mov
xorb
push
push
dec
imul
sbb
cltd
shll
xchg
out
mov
sub
sbb
lret
adc
lock
pop
repz
pop
and
mul
test
cmp
arpl
inc
loopne
add
mov
mov
std
cmpsb
test
xchg
mov
add
or
xor
loopne
ss
fbstp
je
jae
pop
pop
push
ret
pop
pop
cltd
mov
dec
and
imul
pop
fs
push
pop
outsl
cmpsl
xchg
or
sahf
repz
cmp
mov
push
xor
jg
mov
mov
cmp
test
mov
mov
pop
sub
push
mov
int
int3
lock
leave
add
mov
insb
repz
inc
jmp
mov
test
scas
xchg
mov
lcall
int3
mov
pop
add
or
ss
mov
sahf
jg
std
dec
push
addb
stos
sub
iret
in
xchg
mov
or
or
aam
pop
lret
pusha
cmp
xchg
popa
cld
pop
aad
mov
pop
push
iret
lods
inc
insb
cmc
xchg
mov
aad
sbb
test
cmc
add
pop
mov
aas
xor
test
aaa
testl
fiadds
inc
sub
rclb
push
aas
fwait
sbb
arpl
push
notb
repz
pop
mov
jb
test
cli
mov
scas
push
mov
inc
or
jb
xor
jo
adc
add
dec
nop
rclb
mov
lods
lret
add
frstor
enter
cmc
mov
jno
xchg
sub
sub
push
lods
jae
sti
std
or
test
lret
test
cmpsl
and
rcl
shrb
fadds
jl
shrl
ss
lock
pop
je
xchg
xlat
scas
jmp
push
add
por
gs
mov
aas
outsl
and
das
mov
jb
mov
mov
je
repz
pop
fbld
xchg
lret
clc
sbb
push
dec
stos
mov
sbb
sub
mov
xchg
ljmp
popa
sub
mov
and
and
mov
mov
shlb
popf
aad
jmp
rcrl
loop
divl
pop
cmp
xor
jl
and
add
or
pop
xlat
jecxz
mov
arpl
out
mov
push
sbb
fcoms
mov
dec
jnp
xchg
add
jg
int3
sarb
shll
sbb
leave
sub
das
inc
sub
iret
dec
mov
pop
and
mov
ds
jle
pop
xor
xor
popa
jo
test
sub
cmp
call
out
int
popf
push
add
sti
lods
ret
movsb
sbb
mov
jae
std
or
pop
xchg
mov
add
jns
negb
arpl
adc
xchg
mov
mov
mov
pushf
jb
in
dec
hlt
dec
stos
push
add
push
std
faddp
ficoms
test
inc
xchg
and
shrl
mov
pop
push
rol
in
std
mov
shll
popa
dec
cmp
imul
inc
cmp
xchg
cmp
add
gs
mov
cwtl
jb
push
sbb
pop
mov
dec
repz
jg
mov
and
xor
xchg
pop
jle
loope
cmp
mov
scas
imul
xchg
and
imul
or
rolb
pushf
mov
aam
push
pop
out
test
inc
rdmsr
mov
xor
or
pop
test
movsl
push
stc
ret
and
inc
push
outsl
cwtl
or
aam
das
cld
outsl
jecxz
gs
jl
bound
outsb
cmpsl
cmp
xchg
es
scas
fwait
dec
test
js
mov
call
add
rcll
test
jg
shlb
loope
xor
add
mov
push
cmp
ja
pop
wrmsr
add
mov
es
sub
or
mov
push
out
add
pop
imul
mov
aam
imul
out
ja
mov
daa
cmpsl
add
jg
cs
aad
js
push
test
push
push
xlat
pop
dec
xchg
and
push
adc
jns
ret
aas
or
xchg
dec
pop
xor
and
push
jb
popa
add
out
xchg
mov
out
push
mov
xor
sbb
mov
xchg
fidivrl
gs
pop
mov
jbe
xor
sub
or
mov
mov
adc
loopne
mov
out
jno
imulb
mov
int3
and
mov
popa
addr16
js
or
aaa
adc
mov
sbb
jge
jmp
add
or
cmp
test
add
adc
in
mov
xchg
push
and
data16
mov
enter
ret
push
cld
orb
es
mov
repz
sbb
adc
or
push
jnp
sub
jmp
lahf
cmpl
bound
outsl
mov
cltd
jle
pusha
xor
hlt
fbstp
jns
les
mov
scas
fistps
cld
xor
xor
mov
mov
jmp
ret
pop
mov
dec
xor
out
sbb
pop
mov
push
jge
loope
stc
inc
insl
cmp
in
dec
cmp
or
dec
or
test
lcall
adc
cld
leave
ss
inc
pop
push
pop
jae
repnz
imul
pop
mov
popf
lcall
lds
andl
iret
repnz
dec
lds
imul
es
cmp
gs
push
mov
xorb
xor
cmpsl
xor
adc
cmp
pop
out
xchg
rol
pushf
ss
xor
sbb
mov
add
mov
dec
mov
xor
inc
jb
in
mov
in
fmull
dec
push
test
inc
cltd
cmc
inc
mov
xchg
outsl
push
fstl
mov
mov
jno
inc
mov
cs
mov
mov
and
jno
jp
popa
mov
xchg
adc
pop
cmp
push
pop
pop
cmp
subb
cs
addr16
inc
push
xchg
pop
cmpsb
sub
sub
pop
add
and
xchg
mov
popa
mov
xchg
jo
adcl
sbb
int
xor
sub
mov
mov
dec
sahf
rcr
pop
icebp
lret
pop
mov
in
aaa
jle
fucomp
sahf
loopne
or
bound
dec
inc
inc
gs
int3
adc
jae
test
xor
scas
mov
popf
repnz
addb
lahf
idiv
fimull
cmpl
cmpsb
lret
pop
pop
add
hlt
out
leave
dec
jg
cmp
mov
push
aaa
mov
cld
pop
addr16
dec
pop
cmp
or
addl
or
lahf
ret
mov
testl
push
cmp
fprem1
mov
and
loopne
xor
or
popf
pop
push
mov
insb
xor
jecxz
mov
push
out
or
mov
sbbb
in
stc
push
cli
xor
je
push
gs
mov
out
lea
cmp
jmp
cwtl
lea
iret
stos
push
add
decb
sbb
mov
xor
lret
les
popf
data16
scas
stos
jl
test
cs
add
popf
lods
ret
ficompl
pop
jb
lcall
iret
mov
into
mov
sub
sti
das
cmp
sarl
scas
in
mov
dec
pop
inc
or
jno
mov
mov
mov
pop
or
shl
cmc
fsubl
push
clc
inc
add
stc
cbtw
xor
jle
data16
mov
adc
jmp
fidivrl
push
scas
jp
xchg
ljmp
xor
hlt
jo
jno
xchg
pop
insb
hlt
xchg
popa
faddl
bound
dec
sub
loopne
int
es
imul
dec
call
andl
out
pushf
mov
mov
sbbb
jnp
jle
mov
or
arpl
test
fbld
daa
inc
arpl
mov
mov
cmp
sub
mov
jne
outsb
test
mov
dec
jo
add
movsb
push
mov
fildl
leave
call
pop
pop
cmpsl
sbb
mov
pop
or
adc
mov
shr
mov
test
ret
out
adc
mov
add
fstl
push
or
jns
repz
xchg
jo
arpl
add
jmp
sbb
loopne
sbb
fwait
shlb
icebp
int
jl
fstpl
call
call
dec
sbbl
fistps
push
dec
jb
pushf
jp,pt
or
outsl
test
repz
push
popf
mov
mov
daa
mov
xchg
cmp
clc
lahf
cld
sbb
jno
icebp
push
imul
push
jbe
inc
orl
std
jle
cmpl
xor
xchg
push
imul
mov
icebp
dec
movsl
adc
push
mov
clc
lret
or
push
mov
jo
push
out
push
notl
mov
or
pop
mov
out
cmp
pop
sahf
or
and
daa
cmp
jns
imul
scas
test
enter
out
cmpsb
add
std
addr16
pop
jge
mov
mov
sub
cmp
subl
loop
cld
daa
fstl
xlat
inc
dec
fwait
loop
icebp
inc
xorb
dec
dec
jo
cmp
sbb
jae
fnstsw
cmp
in
jno
mov
cmc
xor
popl
hlt
jl
add
lds
inc
cld
mov
into
ss
push
ljmp
test
or
mov
mov
push
xchg
jnp
xor
loope
jns
aad
mov
jle
xchg
sti
arpl
clc
xchg
mov
cli
popf
xchg
fs
lret
lret
ret
fidivl
cltd
nop
jmp
mov
stos
mov
cmpsl
shlb
or
mov
jle
icebp
rcr
cmp
icebp
and
shr
xchg
loope
add
xchg
decb
test
pop
ror
push
movsl
rolb
ficoml
lret
cmp
mov
out
inc
pop
and
adc
aas
dec
xlat
jg
mov
mov
mov
mov
and
or
mov
cmpsb
jnp,pt
sub
in
es
in
mov
pop
fdivrp
sbb
jge
jecxz
cli
sbb
cmp
cwtl
repz
pop
add
call
movsb
pop
cmpsl
xorl
push
aas
and
outsl
add
popf
repz
xchg
and
jnp
cmc
lods
adc
mov
push
jno
pop
sub
lahf
jmp
xlat
ds
pop
test
sbb
pushf
mov
loop
loope
mov
dec
cmp
add
aad
loopne
sbb
cmp
mov
arpl
jl
mov
xlat
pusha
cmp
daa
ror
xchg
xor
pop
cli
push
jge
add
cld
movd
movsl
inc
repz
xchg
stos
int3
pop
rorl
or
outsb
add
test
add
ljmp
mov
aas
cld
adc
push
fwait
mov
xchg
jl
fs
mov
and
imul
cli
sbb
pop
jl
out
mov
fs
cmp
mov
out
fcoms
or
and
insb
sbb
repnz
cmpb
cmpsl
push
xchg
inc
sub
and
aas
scas
pop
out
ficoml
lret
lds
pop
aas
mov
push
bound
enter
xchg
mov
or
jle
dec
pop
dec
jp
or
sahf
popa
pusha
push
sub
das
sub
push
cmp
ret
dec
lods
mov
ret
sub
es
push
sub
imul
sbb
ss
mov
jle
push
imul
lcall
cmp
movsb
jmp
push
xlat
mov
sbb
popa
movsl
sbb
jns
popa
dec
sbb
outsb
adc
or
mov
inc
xlat
push
ds
xor
scas
dec
cmp
sub
or
rolb
les
fists
dec
xchg
sbb
or
mov
subb
shrb
pop
out
xchg
jmp
mov
outsb
mov
push
aam
je
imulb
mov
inc
outsl
mov
sbb
dec
addr16
std
lret
pusha
xchg
daa
data16
sbb
add
mov
popa
jbe
imul
and
xchg
and
pushf
or
jbe
dec
pusha
pop
addr16
int
xchg
xchg
adc
mov
xchg
inc
fidivs
cmp
sbb
fidivl
mov
jbe
sbb
jnp
leave
cmp
movsb
xor
mov
push
test
loopne
imul
aam
orl
sub
fucomp
mov
in
mov
fistps
fs
pop
inc
mov
es
leave
mov
cmp
add
clc
dec
popf
sbb
inc
cmp
sub
int
cli
or
out
mov
sub
out
sbb
sub
mov
js
lret
roll
and
inc
sahf
gs
dec
in
mov
insl
inc
jae
movb
ret
mov
pop
jg
sbb
nop
adc
mov
sub
jb
sbb
mov
inc
int3
cli
cmp
ljmp
dec
and
adcl
ja
jno
aas
jp
inc
cs
push
sub
aaa
pop
xorl
mov
xchg
mov
jae
test
xchg
xor
or
mov
leave
pop
mov
fwait
repz
inc
sbb
xchg
add
xor
movsl
inc
pop
push
jl
sub
stos
cmp
push
adc
js
push
pop
movsl
mov
ja
xor
movsb
decl
arpl
inc
repz
fsubrs
sarl
mov
jl
jp
pop
xorl
pop
xlat
mov
repnz
std
or
shl
inc
repz
in
data16
pusha
les
cmp
ret
dec
cs
jae
lods
scas
cmp
jnp
mov
int3
inc
int
mov
das
lods
cmp
sbb
xor
std
or
mov
inc
sti
xchg
fcoms
sbb
mov
cmp
or
out
jbe
sub
out
neg
xchg
mov
mov
pop
push
mov
aaa
add
loope
push
rclb
xchg
stos
mov
mov
das
rcrl
cltd
int3
mov
pop
dec
jmp
dec
pop
push
cmc
xor
js
ss
adc
jl
jno
jecxz
push
adc
lock
and
jle
test
popa
pusha
lea
dec
insb
fisubrs
cmp
cmp
cltd
fcoms
gs
xor
jmp
cltd
call
fisubl
imul
mov
jo
mov
addr16
adc
mul
adc
xchg
pop
xor
sti
cmp
add
inc
ss
and
mov
loopne
push
xor
mov
xor
jl
mov
sub
jae
sbb
jnp
std
adc
add
dec
push
subb
jmp
add
std
push
fiaddl
mov
sub
scas
push
ja
adc
lahf
sbb
fstl
jmp
enter
daa
push
add
mov
cld
adc
fistpl
scas
rcll
lds
in
push
imul
icebp
mov
pop
jl
adc
jns
lret
je
movsb
stos
xor
dec
mov
ficoml
jp
addr16
jp
cli
aam
add
addb
inc
sbbl
mov
in
les
jecxz
in
movsl
xchg
fisubrl
sbb
adc
add
lcall
ds
xchg
inc
or
je
jnp
insb
pop
mov
pop
xlat
fnsave
mov
icebp
lcall
and
mov
in
insb
mov
jmp
ret
ljmp
jmp
inc
mov
and
push
add
jmp
cltd
mov
stos
mov
sub
push
adc
cmp
mov
cwtl
xchg
popf
xchg
add
mov
mov
xor
pusha
in
xor
sub
pushf
xchg
xchg
xchg
jl
mov
jnp
scas
and
stos
sbb
xor
adc
fildll
icebp
cmp
inc
xchg
and
rcll
xchg
jl
ja
popa
fadds
and
sahf
mov
ficompl
push
shlb
pusha
push
lea
popf
mov
xchg
jo
inc
push
int3
stc
sub
ret
test
loop
mov
and
mov
fildl
and
and
ljmp
in
lahf
ljmp
cmp
xchg
or
push
adc
rorb
push
push
andb
mov
jb
push
iret
xor
xlat
push
fsubp
nop
sti
in
mov
aaa
xor
pavgw
sbbl
lret
out
jle
mov
aam
daa
test
inc
lcall
push
jmp
dec
mov
pop
push
pop
sbbb
dec
cmpsl
jp
jle
add
hlt
lods
pop
pop
mov
cmpb
xchg
pop
adc
scas
insb
xchg
ret
std
pop
stos
leave
xchg
mov
cmp
pop
adc
add
cmp
lret
push
jne
inc
ficomps
add
movsl
push
leave
test
call
xchg
movsl
dec
push
out
push
and
out
inc
jae
or
or
fcmovnbe
jecxz
lret
push
pop
test
jecxz
xchg
xorl
sub
xor
roll
fisubrl
mov
std
mov
mov
clc
add
mov
jg
dec
xchg
outsb
dec
cmp
out
icebp
mov
sbb
push
ljmp
xor
dec
xor
fucom
outsb
insb
mov
add
jo
pop
lds
mov
jb
mov
xor
dec
pop
xchg
addr16
cli
orl
dec
sbb
adc
jae
mov
push
sub
mov
pusha
and
xor
cmovnp
or
jns
sbb
popf
and
xchg
xlat
jno
enter
inc
fcmovbe
hlt
add
cmp
bnd
pop
dec
mov
ds
cmp
adc
stos
xor
loop
loopne
daa
movsb
bound
std
sti
test
xchg
ds
hlt
mov
icebp
jb
sahf
jno
push
cmp
dec
push
push
dec
or
push
dec
and
sbb
imul
pop
cltd
loop
int3
out
and
out
das
cmp
mov
into
faddp
mov
adc
clc
sub
xchg
mov
xchg
push
jecxz
fidivl
inc
jmp
add
out
fmull
rorl
jge
add
pop
mov
cmpsl
jno
jle
sbb
mov
sub
cltd
adc
enter
in
jle
sbb
arpl
cmovb
stos
in
fdiv
scas
adc
jge
mov
movsb
out
inc
out
inc
mov
movsb
icebp
or
aaa
in
sbb
fldl
sbb
lods
xchg
rcrl
movsl
aaa
cmovns
lcall
cs
add
mov
mov
push
and
lea
mov
pop
xchg
add
fistpll
ja
lret
lock
push
adc
mov
mov
inc
lea
pop
lret
outsb
xchg
xchg
cltd
idivb
sti
in
and
sahf
out
xchg
sub
addr16
mov
into
jecxz
aad
test
out
fcmove
sbb
add
mov
mov
jg
insb
imul
and
fs
imul
les
cmp
fisttpl
sub
hlt
lock
pop
cs
dec
cmp
shll
stos
lds
jl
data16
fadd
mov
test
dec
rclb
and
data16
js
sti
aas
icebp
add
pop
subl
ds
pop
mov
xor
ret
cmp
jecxz
iret
ss
int
mov
sbb
jnp
arpl
fbld
pushf
stos
pop
mov
add
fdivl
cmp
daa
mov
inc
xchg
xchg
inc
pop
pop
out
xchg
insl
jl
dec
fnstcw
jnp
sarb
lret
sbb
xchg
push
cmpsl
popa
xor
cmpsl
mov
dec
or
test
cltd
push
jp
addr16
push
inc
icebp
sbb
mov
adcl
sbb
jmp
daa
mov
subl
jno
push
push
xor
ds
sbb
push
test
rep
je
iret
sbb
stc
in
sub
adcl
pushf
mov
add
scas
pushl
or
adcb
xchg
ds
inc
dec
mov
iret
loop
insb
outsb
fmuls
mov
inc
cmp
mov
test
push
sub
adc
pop
push
fisttps
pop
mov
inc
push
dec
iret
mov
jl
mov
or
int
xor
orl
and
cld
push
loope
out
mov
lea
clc
iret
jo
pop
inc
shrl
int
and
xchg
mov
xchg
push
mov
pop
jo
stos
outsb
push
lahf
cmc
or
or
jns
loopne
dec
xchg
or
mov
dec
jno
jg
dec
sti
or
push
popf
push
add
cmpsb
mov
jno
mov
jmp
popa
fldl
add
cmpsl
jp
and
and
add
push
lds
outsb
add
cwtl
cmp
rolb
in
and
jmp
mov
fsubrl
mov
and
out
pop
out
and
jb
insb
mov
shll
movsl
scas
fldenv
in
push
je
pushf
or
enter
insb
lds
aaa
lock
mov
pusha
dec
gs
add
dec
out
add
mov
rcl
pusha
dec
add
cmp
inc
xor
outsb
lret
fwait
xchg
sub
xchg
cmp
lahf
dec
push
lods
das
push
mov
mov
mov
xchg
push
jo
jo
xor
ljmp
negl
sub
shrl
mov
dec
shll
sub
mov
cld
lret
jmp
repz
adc
xor
jg
daa
dec
dec
jmp
jne
jnp
xchg
add
std
inc
popf
xchg
xchg
fwait
sub
iret
shlb
xchg
dec
xor
xor
fwait
popf
sub
mov
push
sbb
xor
fistl
push
rclb
sbb
daa
xor
imul
stc
in
push
push
cmpb
push
aam
push
pop
gs
or
pushf
pop
sub
inc
sub
repnz
pop
divb
pop
or
cmp
cmc
xor
pop
mov
ljmp
mov
xchg
lds
sbb
mov
dec
push
jp
cmp
fdivrs
adc
mov
testl
nop
mov
adc
cmp
dec
cmp
add
mov
addr16
loope
pop
and
loopne
sub
dec
das
push
fs
and
mov
fstpl
sub
movsb
xor
vandnps
jecxz
sbb
aas
add
add
nop
sub
or
inc
pop
sub
cli
lret
jl
fcmovnb
push
pop
xchg
lret
mov
dec
pushf
fisubs
mov
pop
push
scas
pop
or
jno
mov
scas
outsl
cmp
insb
jmp
sub
test
add
xchg
leave
shll
push
add
xor
aaa
pushf
loope
or
and
ja
pop
insl
xchg
dec
or
push
push
call
and
lds
sahf
pop
inc
stos
cmp
sbb
pop
lock
and
pusha
xchg
mov
imul
bnd
mov
repz
and
pop
cmp
mov
mov
scas
mov
inc
add
push
push
jp
ja
sbb
mov
out
in
mov
imul
ja
inc
mov
mov
fildl
cmpsl
into
imull
mov
or
add
loopne
lcall
lcallw
int3
scas
cmpsl
jmp
jecxz
dec
dec
repnz
iret
push
add
movsl
sub
sub
mov
fsts
jle
sbb
mov
dec
arpl
sbb
cmp
and
fs
mov
jp
aas
movsl
and
inc
push
mov
xchg
adc
cmp
movsl
jbe
adc
inc
and
xchg
lods
and
fiaddl
lods
inc
repnz
inc
das
mov
mov
fiadds
outsl
inc
not
pop
sbb
shrl
out
fs
fstpt
sbb
bound
out
shll
out
aad
ds
pop
popf
fwait
sub
icebp
enter
ss
push
mov
bound
inc
scas
stos
test
popa
sahf
movsb
movsl
mov
xor
mov
cmp
xor
push
lahf
aad
adc
inc
sbb
pop
int
ja
aas
rcrb
stos
pop
btc
stos
or
jp
jno
lret
xorl
pop
aad
int3
popa
push
icebp
cwtl
shrl
push
xchg
fmul
cmp
addr16
push
cltd
sub
mov
add
jp
or
sub
and
jl
sbb
sbb
test
adc
xchg
jge
inc
repz
enter
js
and
mov
inc
lahf
dec
aaa
inc
fsubrl
imul
mov
lahf
js
mov
cwtl
mov
gs
add
dec
mov
push
cmp
aad
dec
xorb
jne
cmp
mov
fwait
mul
mov
pop
pop
out
jae
lret
sbb
fstpl
ja
mov
xchg
popa
fidivs
add
adc
dec
mov
lock
dec
lcall
pop
xor
inc
aam
es
sub
insl
add
imul
inc
mov
inc
stos
cmpsb
test
dec
jno
shll
mov
xchg
frstor
adc
jp
sbb
or
mov
add
enter
in
int3
add
add
div
cmp
popa
loop
mov
mov
pop
sbb
push
fildll
mov
cs
lods
push
aad
jae
pop
mov
sub
dec
popa
xor
lock
and
clc
repz
xchg
mov
cmp
mov
fsub
pushf
xchg
cld
enter
into
dec
cwtl
add
xor
and
jmp
subb
daa
jns
pop
cmp
adc
in
jecxz
and
or
jne
psrlw
jge
dec
stos
push
mov
in
jne
pop
lret
mov
ds
push
mov
cltd
hlt
in
repnz
mov
mov
cmp
xchg
push
xchg
ja
int
popa
sti
cmp
orl
cmc
xor
xor
ficomps
inc
mov
imul
sahf
dec
aas
adc
adc
cs
aad
cmp
daa
popa
hlt
mov
xchg
lahf
and
rcrl
pusha
mov
cmp
lea
sub
data16
mov
or
pop
aad
xchg
mul
lcall
push
and
adc
push
and
mov
js
cs
adc
jns
mulb
xchg
inc
jo
cmpsb
sbb
es
mov
in
mov
cltd
push
inc
pop
out
fstpl
and
and
adc
js
lret
mov
sarb
repz
and
mov
hlt
fmul
push
stos
ret
icebp
scas
xchg
cmp
sahf
sbb
pushf
clc
dec
test
out
je
push
addr16
fstl
mov
jbe
sbb
mov
frstor
cmp
pop
fwait
adc
and
push
data16
mov
fs
scas
fisubrl
push
cmp
filds
fadd
lret
out
sbb
mov
fimull
loope
pop
sub
test
das
cltd
jne
sti
lret
push
and
scas
push
jg
and
pusha
lods
jge
inc
xchg
inc
aam
inc
sbb
mov
mov
jge
jg
adc
fs
mov
gs
pop
mov
sbb
cmp
sub
jl
pop
sbb
lret
pop
movb
push
fcmovnbe
push
fmul
enter
jns
mov
out
outsb
sti
push
pop
loop
or
test
lea
in
dec
fucomp
push
adc
pop
les
add
mov
and
lods
sti
repz
jae
push
sbb
dec
ffree
and
cmp
fistl
es
xchg
push
xchg
sub
xor
push
aad
xor
je
jp
jl
dec
xor
xchg
jge
mov
popf
jb
loop
in
jne
test
and
sbb
repz
mov
or
adc
mov
xchg
movlps
and
aam
test
lahf
das
add
sarb
test
mov
clc
add
push
xlat
or
adc
cmp
in
cmc
and
cmc
loop
add
sbb
fiadds
xchg
ja
imul
sahf
ds
mov
out
add
lock
push
ds
fwait
pop
mov
push
xor
mov
in
es
sbbb
jecxz
cmp
pop
adc
add
push
aam
cmp
lea
mov
mov
ss
aam
imull
dec
enter
dec
imul
mov
mov
jl,pt
pushf
pusha
aam
nop
or
ret
add
inc
repnz
lock
stos
xor
inc
or
out
jae
ret
int
sbb
mov
and
lea
adc
push
inc
jl
fnstcw
les
les
movsb
fsubrp
mov
cld
stos
sub
add
mov
push
data16
ss
sub
jo
aam
jnp
icebp
test
and
add
sbb
jnp
mov
aas
jo
insb
push
cmp
xchg
sarb
sbb
popf
movsl
sub
push
sub
add
lcall
jne
das
sar
xchg
sbb
pop
xchg
push
sarb
into
fwait
pop
cmp
pusha
push
mov
and
xchg
movsb
imul
stos
nop
pusha
mov
adc
das
pop
dec
jl
jo
sar
ljmp
or
mov
adc
pop
pop
or
lret
jo
pop
inc
mov
mov
das
cmpsl
lods
sbb
popa
push
cld
in
sbb
inc
stos
sti
sbb
pushf
movsl
xor
sahf
test
pop
arpl
push
ret
test
dec
jnp
in
pop
stc
ret
jb
frstor
and
rol
and
popa
mov
cmpsb
push
popa
fucomp
push
xchg
sub
popa
xchg
aaa
xchg
sbb
negb
push
inc
mov
mov
dec
dec
xor
popa
cmp
dec
add
add
mov
rcrb
fsts
dec
stos
imul
pop
or
sub
fidivl
sbbl
adc
push
mov
mov
xchg
sbb
mov
sbb
jl
repz
jmp
add
mov
jno
pop
sbbb
push
lret
shrd
or
jg
jp
fmull
out
ljmp
mov
pushf
cmp
mov
inc
mov
imul
ret
mov
cmc
jle
stos
sub
cld
fucomp
test
mov
mov
dec
popf
mov
ret
cmpb
lret
mov
dec
lock
xlat
subb
pop
mov
repz
mov
fists
jle
push
mov
xchg
test
out
sub
cmp
fidivrl
or
das
pop
push
pop
stos
scas
cmpb
xchg
repnz
add
xor
ja
call
xchg
adc
xchg
add
out
pusha
pop
mov
sub
imul
loopne
loopew
in
mov
js
imul
fistpll
xor
dec
cmc
pop
iret
mov
subb
nop
ret
push
popa
add
dec
ja
loope
sbb
cwtl
stos
sbb
xchg
cmp
aad
pop
stc
xchg
arpl
xchg
insl
lods
jmp
jmp
xchg
insb
xchg
rcll
subb
fs
wrmsr
neg
loope
xchg
jbe
pop
sbbb
push
push
in
gs
pop
clts
cmp
inc
mov
cmpsl
or
pushf
imul
cmc
jl
pop
or
movsl
pop
idivl
test
or
push
and
mov
or
inc
popf
and
addl
cmpsl
jl
mov
dec
nop
adc
xorb
mov
mov
out
push
pop
push
dec
sub
lds
jg
das
or
add
cmpsl
test
dec
mov
sbb
dec
flds
out
aas
fsts
cmc
test
testb
arpl
in
les
sbb
nop
daa
roll
jbe
xchg
js
les
and
insb
in
push
dec
xchg
lods
push
xchg
shlb
pop
cmp
fcoml
pop
mov
lret
sti
mov
or
loope
push
pop
mov
adc
push
clc
mov
xchg
jp
jb
lock
pushf
movsl
xor
mov
jbe
xchg
pop
fcom
cld
xchg
ds
jns
sti
dec
lcall
pop
scas
test
aad
rolb
adc
mov
out
cmp
addr16
fimull
pop
fs
iret
adc
mov
out
xlat
cmp
sbb
int3
imull
fldl
aas
fucomi
mov
jmp
cli
adc
imul
jbe
jmp
int
out
dec
movsb
xchg
into
ss
imul
out
sub
or
mov
rorb
imul
jecxz
cli
nop/reserved
gs
xor
push
add
or
dec
pop
subl
shrb
cltd
fs
scas
mov
push
or
repnz
dec
xor
sbb
cs
arpl
aad
fs
pop
push
pop
leave
rcrb
push
inc
adc
sbb
fs
mov
xlat
mov
jge
leave
jmp
outsl
inc
mov
push
inc
scas
outsl
cmpsb
jo
jmp
push
push
dec
pop
or
dec
aam
and
sarb
js
hlt
out
push
lret
out
pop
dec
cmp
mov
stos
jno
jp
or
jl
lret
xchg
test
in
jge
psubsb
pop
push
cmp
pop
jo
sbb
adc
inc
mov
aaa
ret
push
xor
fwait
ret
pusha
or
dec
mov
in
mov
pop
cs
fnstenv
gs
push
cmp
dec
movsb
into
lahf
aaa
loopne
ficompl
mov
mov
inc
ja
test
rcll
jp
xchg
ds
sub
jbe
sahf
int
dec
cmp
or
pop
mov
mov
das
stc
dec
shrl
cmp
and
add
loop
fwait
rorl
rol
jl
pop
lahf
loope
movsl
mul
mov
sub
sbb
mov
sub
or
je
insl
repz
mov
stos
pop
scas
in
sub
xor
add
inc
sub
sahf
orl
inc
push
sbbl
or
xor
repz
mull
and
cmp
daa
mov
out
cmpsl
inc
pop
dec
jo
jne
gs
cmp
ja
cmp
sarb
popa
jnp
cmpsl
cmpl
shl
lretw
sahf
daa
mov
pop
jl
pop
mov
test
dec
sub
daa
repnz
inc
sbb
aad
adc
push
fnsave
sbb
fs
cld
mov
iretw
je
jg
adc
jbe
adc
mov
lods
push
or
and
add
push
adc
pop
and
int3
push
mov
dec
les
xor
inc
dec
jae
inc
ds
xchg
adc
adcb
xchg
dec
sahf
lods
pop
fisubs
shrb
and
filds
xor
or
xchg
mov
push
mull
push
out
lds
jnp
sahf
sub
mov
push
xor
jae
in
pop
inc
ljmp
out
inc
mov
push
sub
in
shrb
leave
pop
jb
jecxz
xor
pop
mov
sarb
mov
int
xor
inc
sbb
daa
js
movsl
insb
notb
cmp
add
jmp
lcall
sub
or
ret
push
les
sub
and
pop
xchg
mov
add
sub
sbb
xor
cmpsl
mov
pop
ret
sbb
cltd
fmuls
into
adc
push
mov
pop
add
jp
es
sub
cltd
push
test
in
add
js
cmp
or
int
insl
popf
clc
pop
cmp
mov
cmp
push
lock
sbb
sub
and
loop
test
add
jp
cs
cmp
sub
inc
mov
jno
push
out
push
inc
aaa
sub
andl
push
push
xchg
cmpl
jge
sbb
push
mov
ret
clc
cwtl
test
sbb
adc
dec
pop
loop
mov
arpl
push
adc
ljmp
cmp
lret
xorb
add
mov
jae
stos
inc
add
and
cmp
repnz
mov
dec
sahf
scas
rcrb
mov
pop
push
fwait
lock
movsb
pop
clc
ret
mov
test
cmc
push
pop
repnz
inc
fisubl
mov
aam
mov
stos
inc
lock
mov
xchg
fists
ftst
das
dec
enter
jne
push
push
arpl
or
stos
mov
adc
or
fxch
mov
gs
sbb
lock
mov
rcrl
add
std
sahf
inc
pop
inc
jp
mov
sbb
sbb
outsl
test
add
cmp
out
push
jg
sub
or
sub
mov
ret
mov
dec
fstpt
push
andb
in
icebp
inc
orb
in
sub
sbb
pop
movsb
xchg
ss
ja
cmp
adcl
imul
xchg
inc
cli
push
int3
jnp
fildll
jmp
call
rep
idivl
movsl
ljmp
dec
sub
jbe
or
fsubr
add
nop
and
xchg
cli
or
jl
sarl
std
and
sar
add
and
stos
pop
shl
dec
jbe
cmpsl
stos
out
enter
rorl
das
and
pop
push
hlt
bound
fwait
xchg
daa
testb
lcall
adc
dec
arpl
mov
icebp
add
mov
dec
rcrl
and
xchg
mov
je
xchg
cld
js
push
mov
xchg
dec
xor
push
pop
sti
mov
sub
sub
mov
or
mov
addl
pop
ja
cs
inc
imull
mov
sbb
fnstenv
add
mov
xchg
arpl
pusha
xor
ds
mov
xor
inc
add
xchg
aam
mov
pop
or
lahf
push
mov
aaa
out
fdivrs
mov
ret
outsl
pop
fwait
imul
imulb
or
mov
jne
lods
fcmove
mov
push
movsb
or
aam
dec
imulb
or
push
fstl
mov
jp
mov
jmp
push
or
mov
in
out
push
cmpsl
ret
and
mov
cltd
pop
xchg
add
xchg
aam
sub
jmp
xor
adc
stos
imul
lock
mulb
xor
sub
das
xlat
aam
jge
xchg
mov
aad
decb
lods
int3
call
dec
or
sub
mov
jg
test
dec
push
mov
sub
mov
jno
mov
jg
cmp
and
test
cmpsl
sub
mov
mov
nop
lcall
movsb
sbb
adc
stos
out
dec
nop
int3
in
fcoml
push
je
test
sbb
lea
mov
xchg
inc
sbb
or
pop
ljmp
push
pop
or
sub
hlt
int
pusha
fs
mov
fiadds
mov
jmp
jbe
adc
aas
subb
fwait
mov
xchg
stos
js
push
cmp
adc
andl
aam
push
mov
fstl
jg
idiv
ja
pop
outsb
pop
mov
scas
dec
adc
push
mov
inc
addb
xchg
jno
push
cltd
inc
sti
pop
popf
cmp
mov
stos
dec
adc
push
jg
pop
cmp
gs
add
neg
out
call
shlb
inc
js
lahf
ret
pop
add
shr
inc
dec
inc
pop
out
adc
mov
sbb
flds
mov
call
popa
imul
sbb
bound
mov
test
adc
push
fsubrl
cltd
xchg
push
pushw
adc
test
mov
and
insl
out
push
cmc
mov
in
fsubs
jg
jecxz
vmovshdup
out
cmc
and
cli
mov
in
test
fsubrs
pop
call
xchg
mov
pop
xor
jl
daa
iret
and
xchg
or
test
jmp
mull
push
popl
pop
jmp
cmp
out
jnp
mov
and
fcoms
lahf
mov
inc
fiadds
push
filds
mov
inc
inc
aaa
inc
sub
or
xchg
test
ficoml
xchg
rcrb
aas
sbb
or
push
xchg
adc
xor
xchg
xor
and
mov
sbb
imulb
xchg
in
push
xchg
inc
sbb
loopne
fidivrl
mov
cmpl
inc
xor
and
sahf
shll
pop
cli
cwtl
push
ljmp
add
call
in
add
xchg
testb
insl
inc
or
push
push
fdivrl
or
pop
andl
stos
repz
int
adc
popa
xchg
sbb
scas
daa
aas
jmp
dec
outsl
push
faddl
rorb
nop
js
fmuls
in
je
xlat
loopne
loopne
das
pop
or
repnz
xor
popa
cmp
cmpsb
hlt
pop
lods
mov
in
jb
scas
and
mov
and
cld
lock
fsubl
xor
push
shlb
stos
arpl
test
inc
push
dec
in
cld
stc
daa
jbe
shl
arpl
fbstp
ja
enter
out
adc
mov
lret
test
mov
inc
jo
in
iret
loope
dec
sub
fistpl
push
subl
mov
out
test
and
fs
mov
pop
btr
je
xchg
rorl
cmp
jmp
arpl
data16
mov
push
rclb
pop
xchg
les
jnp
xor
or
sbb
push
sbb
fisttpl
sub
sbb
loopne
sub
frstor
or
xchg
mov
add
test
mov
jae
pusha
in
xchg
or
sbb
and
push
stos
ret
stos
adc
sub
shl
repnz
clc
pop
xor
xchg
je
jmp
daa
push
andl
in
fiadds
in
push
ljmp
mov
pop
sbb
in
add
mov
lahf
pushf
imul
inc
mov
xor
lods
mov
ljmp
jae
mov
push
pop
ss
roll
into
out
pop
pop
das
loop
int3
subl
sbb
out
pop
int
js
pop
adc
mov
mov
sarl
mov
push
mov
jbe
push
and
mov
pop
xchg
fcoml
popf
add
mov
fsubs
stos
xchg
mov
fdivrl
push
lret
lods
shrb
xchg
out
cli
adc
sbb
lods
fiaddl
or
push
adc
inc
mov
arpl
aad
xlat
push
xchg
cmp
ret
push
push
mov
add
rcrb
xor
mov
out
sbb
daa
cmp
frstor
sub
sub
rorl
xchg
stos
jno
and
iret
push
adc
ja
repnz
jne
sub
xchg
in
xchg
dec
mov
jmp
cltd
xor
popf
hlt
insb
scas
and
nop
xchg
loop
or
xlat
les
pushf
mov
mov
jg
jle
pusha
loope
inc
inc
and
insb
dec
sbb
loopne
push
cmp
xor
cwtl
xchg
imul
jne
adc
adc
fs
dec
mov
mov
test
lods
stos
adc
or
push
mov
int3
push
fbstp
dec
lock
clc
es
cwtl
xchg
popa
and
mov
sub
test
mov
lods
inc
das
in
push
ds
iret
cmp
mov
inc
xor
xor
imul
fs
in
pop
push
mov
sub
jae
add
xchg
fwait
inc
lea
mov
fsubr
ret
in
ktestb
test
mov
mov
popa
mov
in
mov
scas
sbb
fnstcw
dec
mov
mov
mov
xchg
xchg
popf
dec
test
dec
call
jle
sub
mov
mov
ljmp
movsl
lahf
popa
xor
stos
push
sub
loopne
aaa
and
fiaddl
lock
sbb
sbb
cmpb
cmc
mov
mov
mov
test
fimull
pop
out
out
in
mov
sbb
decl
mov
sahf
push
xchg
out
mov
cmpsb
sub
rorl
test
sub
mov
clc
mov
popa
lret
cmpsl
mov
rcll
test
in
mov
cld
pop
push
aam
mov
pop
dec
unpcklps
out
ret
ljmp
xchg
pop
ss
pop
outsl
jbe
stc
dec
mov
mov
rolb
dec
adc
mov
add
inc
dec
test
nop
xor
les
js
test
pushf
das
jmp
mov
jo
mov
mov
xchg
popf
push
mov
mov
nop
sbb
or
test
mov
std
add
sbb
push
pop
push
add
outsl
dec
adc
bound
out
sbb
test
inc
fsubrl
dec
mov
jecxz
in
dec
cmp
sbb
out
xor
lock
mov
cmp
out
fpatan
sub
add
test
mov
push
push
inc
and
movsb
cmp
add
gs
fstpl
mov
leave
or
cmp
push
test
divl
gs
data16
int3
mov
mov
adc
pop
adc
sbb
mov
push
lds
jbe
outsl
dec
mov
pop
push
xchg
push
xchg
mov
jne
pop
pusha
and
fwait
aad
add
add
pop
or
sub
mov
push
test
scas
xchg
sbb
int3
mov
test
mov
sbb
shlb
pop
jle
mov
inc
mov
aad
rolb
int
or
sbb
aas
lea
gs
xor
repnz
mov
idiv
or
dec
add
jo
inc
sbb
jl
cmc
sti
mov
rorb
pop
cwtl
or
push
push
out
mov
adc
lret
sar
mov
rep
xchg
test
push
or
mov
mov
push
xor
mov
or
lds
sbb
mov
pop
add
sub
cltd
mov
pop
jo
fcos
jecxz
pop
in
lret
dec
dec
shrb
push
sub
mov
insb
inc
cli
sbbb
push
nop
ret
nop
xor
stc
dec
push
mov
out
inc
cmp
pop
call
adc
inc
pop
es
pusha
sbb
mov
lods
push
inc
cld
clc
inc
andb
mov
xchg
push
ja
cli
lock
jmp
xor
cmp
stc
test
xchg
jge
test
insl
mov
push
out
shlb
pop
pop
outsb
int
xor
jns
jo
pop
fcomps
push
ret
mov
xchg
pop
fs
shll
xchg
int
test
xor
sub
sahf
jge
mov
adc
ret
mov
gs
mov
and
data16
dec
loop
fisubrs
add
aad
roll
dec
inc
rcll
mov
push
es
idivl
cmc
xchg
mov
push
imul
ljmp
dec
loop
xor
inc
or
or
fnstsw
sbb
int
test
or
sub
jb
ja
mov
adcl
jecxz
inc
jp
mov
std
mov
pop
icebp
mov
test
inc
pushf
adc
out
pop
pop
std
jp
sub
rep
inc
cltd
mov
sub
and
sti
outsb
add
cmp
jne,pn
sti
mov
add
dec
loope
fs
inc
sbb
dec
lret
out
nop
enter
dec
add
pop
insb
hlt
scas
push
mov
mov
arpl
mov
out
lcall
test
jb
mov
mov
cmp
insb
push
inc
cmc
mov
into
add
jg
adc
jnp
sub
xor
jae
adc
mov
movsb
js
xor
outsb
gs
cmp
stos
push
cmp
loope
jle
xor
es
xchg
ljmp
jo
inc
mov
sub
arpl
insl
int
adc
pop
pop
pop
push
cmpsl
mov
jns
xor
insb
jo
cld
jecxz
inc
stc
pop
fmul
adc
jns
sbb
sub
xchg
sub
xchg
sub
cltd
test
test
sub
sti
sub
fiadds
scas
pop
lea
mov
test
mov
pop
add
and
cmp
push
fadds
xchg
jg
imul
push
mov
outsl
ds
scas
fs
xchg
fsubs
and
and
clc
jmp
mov
cld
and
inc
dec
lret
mov
cmp
jge
and
mov
push
fdivs
xchg
mov
lcall
imul
mov
xor
cmpsl
fcmovbe
ret
mov
push
bound
out
shr
inc
mov
sahf
mov
mov
pusha
sbb
adc
and
arpl
inc
movsb
dec
dec
fdivrs
mov
fisttpll
jbe
inc
fstpt
aam
sub
std
xchg
aam
add
dec
mov
scas
xor
arpl
aam
add
xor
or
nop
cmp
xchg
das
dec
cmp
call
dec
dec
jl
ja
xchg
dec
int3
fsubrl
add
pop
xchg
xlat
add
popf
inc
cli
xchg
ficompl
es
add
inc
pop
push
sub
fwait
pmulhw
sbb
je
jecxz
out
mov
lods
mov
sub
daa
jge
jbe
bswap
mov
xlat
pop
or
sbb
mov
adc
scas
cmc
mov
test
fucomip
push
sar
mov
jb
mov
ljmp
xor
ds
lret
inc
in
push
cmpsl
jns
mov
int
movsb
dec
sbb
push
stc
dec
mov
fidivs
jl
mov
mov
in
aad
sub
sbb
or
inc
pop
mov
jne
in
aam
xchg
movsl
imul
mov
jns
inc
dec
sar
inc
push
popl
push
shrb
sub
jb
hlt
xchg
daa
scas
push
pop
insb
and
and
jnp
mov
or
or
fistpl
or
ss
loope
push
mov
mov
dec
cmpb
cltd
jle
mov
mov
xchg
aam
bound
jno
inc
push
popf
outsl
jnp
mov
mov
mov
call
push
push
dec
pop
rol
leave
sub
lock
lods
outsb
enter
mov
sub
insb
inc
mov
int
jnp
ret
inc
aaa
dec
and
push
sti
fidivl
pop
sbb
sbb
out
dec
mov
movsb
jb
mov
int3
ret
mov
pop
gs
call
adc
cwtl
adc
inc
mov
xchg
movlps
jb
xchg
outsl
outsb
push
mov
out
adc
stos
mov
je
mov
jb
lods
mov
lcall
stc
add
push
es
add
cwtl
fdivrl
ret
ret
mov
jl
adc
stos
dec
pop
mov
mov
fisubrl
dec
sub
pop
adc
add
enter
test
jge
pop
lret
sbb
sbb
out
mov
out
jle
test
mov
nop
add
pop
xchg
pusha
inc
mov
mov
lret
dec
mov
sbb
add
dec
mov
mov
int3
pop
mov
enter
in
jae
or
or
mov
mov
lods
daa
leave
xlat
or
xor
mov
es
cmp
mov
mov
aaa
adc
sub
cmp
lret
xor
mov
fsubr
cmp
sbb
sub
lock
sub
pop
int3
arpl
xchg
data16
mov
xchg
mov
mov
mov
dec
shl
mov
rol
dec
sub
movsb
pushf
loope
inc
fldz
add
cld
adcl
mov
cmp
or
ds
mov
test
pop
mov
stc
hlt
imul
pop
jg
add
leave
dec
cs
je
cmpl
fs
mov
xor
mov
push
mov
pop
sub
dec
shll
adc
push
insl
cmp
mov
std
or
shll
dec
in
call
out
mov
dec
shlb
or
pop
lods
fsubrs
enter
addl
push
push
mov
push
clc
lods
xor
cli
lods
inc
aad
mov
ret
in
lods
jne
pusha
xchg
mov
jae
sbb
jmp
add
es
jb
repnz
mov
xor
aas
jl
test
cmp
inc
pop
mov
add
lret
scas
out
and
push
pushf
add
in
mov
aaa
fnstenv
xor
push
call
shr
loope
pop
xchg
push
icebp
fcoms
out
mov
jo
idiv
out
adc
fisttpl
mov
dec
add
inc
loope
xchg
daa
push
negl
sub
jnp
hlt
xchg
pop
jbe
pop
jo
shlb
sbb
mov
xchg
hlt
inc
sbb
dec
pop
push
into
mov
movsl
push
or
fisttpll
cmpb
adc
ljmp
aam
in
pop
cmpsl
inc
sbb
in
int
insl
movl
pop
int
sub
dec
packuswb
pop
xchg
add
lods
dec
ss
cltd
inc
insl
cmp
int
dec
pop
cmpsl
jb
loopne
push
out
xchg
call
pop
dec
xor
dec
xchg
mulb
lock
scas
cli
dec
scas
test
fstpt
incl
fstpl
sbb
mov
cmp
push
cltd
ret
dec
jmp
incl
adc
insl
sbb
xor
xor
push
loopne
mov
or
and
ret
rclb
xchg
mov
aaa
loope,pn
divl
jg
xchg
or
test
jno
jmp
xchg
fisubrs
mov
cs
test
mov
or
imul
xor
cmp
push
lret
in
add
inc
arpl
sub
xchg
xchg
lahf
or
je
mov
jae
mov
mov
orl
inc
dec
les
cmp
cmpsl
shrb
repnz
aas
insb
cmp
mov
push
fcomps
ds
xchg
dec
lods
cmp
fdivrs
filds
ljmp
in
jae
cmp
and
xlat
cmp
push
js
xchg
and
movsl
lahf
sub
sti
movl
inc
in
das
into
test
cmpsb
aad
dec
mov
dec
sbb
and
jg
xor
jae
test
nop
lahf
cmpsb
cmp
lods
mov
jne
int
shlb
loopew
arpl
xchg
lcall
jmp
in
js
mov
nop
enter
push
jl
dec
js
xchg
clc
into
outsb
test
in
add
pop
ret
sar
sub
repnz
lahf
or
lods
xor
xchg
mov
sbb
daa
mov
les
jno
adc
ret
mov
mov
je
xchg
mov
adc
adc
jmp
mov
mov
push
fisubrl
mov
aas
pop
jb
mov
je
mov
add
and
fldl
scas
mov
pop
pop
and
pushf
jbe
or
xor
xchg
ja
cmp
sub
loope
fimuls
sahf
sbb
cmc
xchg
mov
mov
stos
push
mov
and
mov
test
shll
mov
pop
or
mov
or
xor
dec
adc
xchg
xchg
pushf
pop
or
mov
loope
movswl
pop
cmpsb
dec
add
xor
push
out
fistl
add
enter
mov
sar
jae
daa
xchg
orl
movsl
lea
shlb
repz
jge
push
sub
je
push
mov
fmulp
les
pop
pushf
aas
inc
rol
mov
adc
push
lods
fildl
orl
into
push
outsl
pushf
dec
movsl
sti
pusha
mov
inc
jno
lretw
push
pop
dec
enter
mov
fsts
ss
mov
iret
and
pop
lret
jl
iret
jae
sahf
test
push
std
testl
cmp
and
xor
je
mov
push
mov
dec
in
shrl
rorb
call
sub
pop
lret
sub
sbb
mov
jle
stc
push
testb
xorl
rcr
push
xchg
hlt
jo
push
lcall
lods
insb
push
jecxz
popf
cmpsb
and
sbb
xchg
fiaddl
pop
test
add
xlat
ret
sarl
std
test
adcl
push
in
cs
jno
pop
pop
jne
test
add
outsl
loop
push
repnz
popf
inc
sub
pop
ss
fwait
sbb
xchg
into
jle
push
cld
int3
push
push
or
adcl
in
or
insb
sub
mov
mov
mov
imul
notb
xchg
les
push
mov
aam
shll
push
inc
ja
sub
push
xlat
fidivrs
call
lret
mov
xchg
xchg
insb
call
repnz
mov
ljmp
cli
and
xchg
push
into
fwait
loopne
cmc
jns
cmpsb
imull
jmp
in
lods
pop
rcrb
pusha
mov
clc
rclb
cli
loope
stos
shl
out
dec
addb
mov
jb
fldenv
add
or
inc
or
mov
and
mov
mov
loop
adc
rclb
mov
cmp
jg
mov
mov
cld
adc
adc
jle
mov
fs
push
enter
sahf
test
pushf
popa
dec
mov
mov
mov
mov
dec
mov
ljmp
xchg
cmp
call
stos
push
addb
nop
dec
pop
lret
xchg
int
xchg
dec
pop
jp
cwtl
mov
mov
pusha
dec
imul
xchg
test
cmc
xchg
imul
jle
cmp
cmpsl
in
sarl
aad
cltd
jnp
sbb
cwtl
scas
bnd
xchg
dec
or
mov
xchg
mov
xor
and
push
pmullw
shlb
movsl
inc
scas
push
int
sbb
mov
enter
pushf
mov
sub
std
xor
dec
sahf
ds
pushw
or
ds
sub
bound
or
pushf
or
imul
jae
push
inc
pop
in
sub
aaa
or
and
movsl
push
aas
pop
mov
in
leave
dec
mov
dec
xor
scas
xor
inc
mov
jp
push
pop
push
push
push
ss
jbe
lds
mov
mov
inc
int3
mov
sbb
jl
lea
scas
push
js
imul
inc
insl
loope
repz
pusha
sbb
loop
xchg
lret
add
mov
cld
loop
dec
cmp
test
lahf
in
fidivs
xchg
lcall
pop
insl
add
pushf
test
in
test
add
mov
stos
jecxz
xor
inc
stos
push
mov
cmpb
imul
aas
shrl
or
shrl
add
xor
sbb
mov
adc
fistpll
xor
stos
mov
mov
insl
dec
nop
inc
ja
and
roll
in
jb
inc
and
mov
int
or
mov
xor
pop
xchg
mov
dec
or
jmp
lret
jae
movsb
loopne
pop
push
ret
sbb
data16
lods
jmp
cmpsl
inc
xor
sarb
lahf
inc
adc
dec
rcpps
xchg
or
popa
cmp
xlat
mov
repnz
jecxz
arpl
xor
cmp
cwtl
ffreep
jmp
pop
dec
clc
sbb
in
or
std
and
and
outsl
gs
push
xchg
xor
mov
pop
pop
xchg
data16
leave
mov
imul
xlat
cli
das
inc
adc
into
js
lea
jmp
test
fdivrp
sub
mov
jle
sbb
repnz
add
popa
lcall
clc
push
testb
push
xchg
sbb
scas
jp
aad
pusha
cmp
and
mov
and
push
and
loopne
xchg
out
sbbb
push
mov
fstpl
mov
jne
hlt
pop
pop
lock
jp
insl
pop
pop
push
lret
int3
cld
leave
or
in
call
movsb
xchg
and
xchg
adc
loope
jae
sbb
dec
mov
adc
xor
mov
call
xor
push
fistps
mov
cltd
test
cmp
pusha
mov
cmp
cmpsl
aas
stos
rcr
and
inc
outsl
stos
lea
adc
lcall
pushf
jns
inc
push
inc
push
fs
imul
repz
dec
xorb
jne
mov
test
arpl
popf
addb
xlat
sbb
mov
sub
sahf
clc
lock
daa
xchg
push
pop
cs
rcrb
xchg
repz
mov
mov
frstor
inc
stc
xchg
pop
test
mov
xchg
imul
lret
mov
pop
mov
notb
cmpsl
imul
dec
sbb
loopne
dec
dec
sbb
push
xorb
jo
jns
mov
xchg
cmpsb
faddl
test
pop
fimull
std
lds
fdivrl
mov
iret
test
mov
lea
fdivs
clc
mov
dec
or
sub
in
frstor
outsb
push
sub
cmpsb
lods
sti
ljmp
and
fs
push
rolb
jl
add
shrb
loop
mov
inc
sbb
icebp
jp
daa
push
push
insl
lret
sahf
adc
add
or
adc
push
mov
jp
lret
fidivs
mov
scas
lods
ret
fld
std
mov
jbe
jge
sub
nop
popa
add
incl
xchg
sbb
sub
lret
pushl
mov
movsl
xor
mov
xorb
ja
out
aaa
jno
xor
in
push
pop
cwtl
decl
push
dec
and
mov
sahf
popa
add
cmp
cmp
adc
fisubrs
push
pop
xchg
mov
or
stos
mov
jl
daa
mov
inc
dec
das
outsb
dec
pop
jae
das
and
jmp
scas
stc
inc
or
cmp
out
aad
push
mov
mov
xchg
rorb
xchg
mov
daa
rorl
mov
xor
mov
inc
push
fbld
enter
sbb
sti
or
mov
add
nop
xchg
xchg
pop
fcomps
pop
mov
popa
out
js
mov
divl
stos
pop
ljmp
fldenv
push
test
sbb
fistl
clc
cs
aam
rorb
or
dec
cwtl
andl
dec
inc
jecxz
cmpsb
xor
sbb
add
adc
mov
fs
gs
int
dec
add
inc
stos
insl
mov
cmpsb
sbb
icebp
xchg
in
das
clc
rolb
or
cld
xchg
or
lahf
xor
cmp
popf
xlat
mov
adc
push
or
fldl
sbbb
ret
cmp
inc
cmpsl
add
jae
insb
fbld
jp
jo
fdivl
lcall
rcr
sub
jae
pop
sarl
popa
jne
cmp
out
cmp
xlat
call
mov
int
jne
and
subl
push
repz
xlat
pop
sbb
sub
pop
mov
jbe
nop
push
jb
dec
stc
aad
sub
dec
test
hlt
mov
cmp
aas
subl
xlat
imul
inc
icebp
clc
lcall
push
xchg
xor
test
sbb
push
out
push
xor
jbe
mov
sbb
adc
jecxz
xor
popa
into
jbe
pop
cmp
push
fistps
dec
push
mov
lret
mov
fstpl
xchg
sub
loope
push
and
add
dec
push
mov
mov
or
add
xchg
dec
aaa
js
mov
mov
notb
sbb
or
inc
jbe
xchg
pusha
jge
jmp
jb
cmp
sbb
imul
daa
add
or
addr16
sar
repz
in
or
fdivl
in
loop
cmpb
adc
enter
and
lahf
push
mov
mov
addr16
xlat
push
ret
or
xchg
test
lods
ja
mov
mov
xchg
pop
inc
pop
adc
jecxz
or
rcll
daa
jg
aas
xchg
adc
jle
bound
sub
out
add
dec
int
adc
push
jno
mov
pop
sbb
sti
sub
xchg
sbb
inc
xchg
mov
mov
nop
cwtl
push
fstpt
addr16
xchg
add
xor
roll
inc
icebp
loop
ljmp
push
stc
hlt
push
jecxz
push
mov
or
jmp
aam
jbe
fnstcw
cwtl
cli
outsl
sbb
or
icebp
mov
jmp
sar
pop
xchg
mov
cmp
mov
cwtl
cmpsl
mov
mov
mov
inc
lcall
or
ss
iret
gs
sbb
insb
inc
cltd
or
ficoms
xchg
cmp
push
mov
or
adc
sahf
jp
dec
movsb
mov
sbb
in
xchg
push
mov
xchg
push
dec
xchg
lcall
pop
pop
ljmp
fstpt
cmp
mov
sub
inc
pushw
sti
xor
add
sbb
jge
cs
jo
jbe
sbb
inc
stos
lds
mov
xchg
jae
fcoms
adc
stc
aaa
dec
mov
clc
jp
aam
push
pop
mov
xchg
mov
and
jbe
cli
push
movsb
jnp
cltd
sbb
mov
add
xchg
gs
jne
scas
add
scas
inc
cmc
inc
cmc
jl
loop
jge,pt
adc
mov
repnz
push
sbb
cs
adc
pusha
fcomi
in
and
test
cvtps2pd
mov
or
ret
jns
dec
adc
sbb
cmp
push
pop
and
dec
fld
add
mov
and
rcll
mov
inc
add
enter
cmp
icebp
add
mov
dec
xlat
daa
xchg
lock
xor
stos
add
mov
inc
pop
movsb
leave
imul
scas
mov
adc
pop
xor
cmpsl
jp
scas
inc
movsb
add
sub
adc
add
mov
shrb
jnp
testl
sub
fbld
mov
xchg
sub
bound
mov
and
jne
mov
mov
mov
and
stos
das
push
or
mov
dec
pop
pop
cmpsl
pop
mov
in
clc
mov
inc
inc
cmp
loop
fwait
and
out
out
call
das
xchg
add
and
das
cmpsl
cwtl
mov
sbb
jle
in
or
leave
mov
enter
test
sub
dec
or
push
jp
out
fcmovnbe
sub
mov
cmp
pop
fstl
jnp
jno
adc
and
fsts
jne
insb
or
ja
push
xchg
xor
dec
or
or
popf
andl
test
pop
mov
add
fsubs
daa
lea
xchg
iret
push
aam
pop
ret
lock
cmp
imul
ds
shll
lea
jae
out
movhps
push
sbb
scas
mov
call
int3
cmpl
out
daa
pop
in
jmp
gs
lcall
test
js
ret
xchg
cmpsl
mov
jl
jno
pushf
push
dec
outsb
insl
repnz
cmp
in
popf
imul
in
movb
lret
lret
mov
fs
add
clc
jg
stc
sbb
sub
dec
adc
loop
sbb
pusha
fwait
icebp
jge
aam
into
aad
rep
sbb
mov
add
dec
lock
xchg
popaw
jecxz
cli
adc
add
cli
dec
lock
mov
bound
pop
push
loop
fiaddl
cmp
jno,pt
iret
jp
xchg
jle
pop
jp
les
scas
push
sti
or
sbb
lret
ret
cs
cmc
leave
movntq
sub
sub
xchg
push
push
nop
fwait
insl
push
popa
inc
xor
addb
push
inc
mov
out
daa
mov
mov
push
add
jmp
push
pop
cld
cmp
push
out
pop
cmp
shlb
lret
pushf
dec
rol
daa
cmp
lock
sub
inc
cmp
aad
roll
stos
pop
mov
fisubl
call
xchg
test
push
adc
movsl
push
mov
mov
xchg
call
addl
loop
roll
mov
adc
out
lahf
testb
jae
mov
outsl
xor
loop
popa
jmp
or
loop
push
cltd
mov
orb
repnz
mov
mov
ja
push
pop
in
test
gs
xor
insb
enter
dec
inc
imul
jl
sub
pop
and
cmc
pop
xchg
aas
mov
lahf
pop
sar
cmp
sti
fiadds
imul
daa
adc
gs
mov
cmc
dec
pop
lcall
inc
imull
jo
out
sub
sbb
loop
dec
addr16
lahf
add
hlt
mov
scas
movb
in
xor
imul
fisttps
iret
inc
scas
cld
adc
fcos
push
jb
pop
stos
je
push
scas
mov
mov
push
int
iret
pop
inc
mov
bnd
mov
jbe
sub
test
cld
sbb
xchg
sbb
faddl
aam
push
and
mov
inc
jbe
sbb
sbb
cwtl
call
das
jp
push
or
lahf
inc
int
push
subl
push
add
cmp
outsl
dec
icebp
inc
mov
imul
in
xor
test
mov
dec
imul
adc
outsl
in
push
sbb
test
or
test
je
dec
xchg
and
movsl
aas
mov
ret
in
mov
insl
pushf
cmp
pusha
mov
pop
movsl
aaa
push
mov
shll
mov
dec
test
out
xchg
jle
jmp
leave
mov
movsl
jbe
push
jg
mov
jnp
nop
sub
push
loope
cmp
lret
and
sti
xor
js
pop
push
loopne
xchg
pop
jne
dec
dec
jb
lret
or
xchg
and
fsubrs
inc
push
ret
sbb
ja
pusha
mov
adc
mov
jle
mov
jae
dec
dec
inc
mov
leave
int
fsubs
pop
scas
cmp
clc
jmp
and
lea
add
mov
stc
jl
pop
gs
jae
add
sub
pop
push
xchg
adc
pop
and
fwait
clc
jno
push
mov
cli
xor
sub
mov
xor
add
cltd
je
dec
insb
sbb
push
mov
inc
inc
insl
add
iret
hlt
add
dec
into
in
xor
push
mov
jae
push
and
push
dec
pop
js
inc
enter
add
andl
pop
mov
fdivrl
push
push
pop
sub
lea
mov
lcall
cmp
xchg
mov
inc
mov
pop
cmpsb
insl
xchg
add
mov
aam
scas
jo
insl
xchg
shlb
ljmp
out
xchg
shll
mov
icebp
add
mov
sub
cmp
pusha
cmp
and
aas
iret
adc
xor
push
nop
cmpl
clc
notb
dec
push
mov
pushf
mov
xchg
xor
mov
or
and
out
inc
pushf
xor
sbb
nop
add
lret
outsb
lret
pop
ret
sbb
xor
cld
sub
bound
pop
and
mov
or
arpl
test
bound
jge
push
shr
sbb
test
in
fildll
bound
mov
sti
and
ret
ss
push
push
insl
cmpsl
dec
adc
xor
dec
insl
test
adc
mov
ja
int
data16
ja
mov
scas
shl
mov
cmpb
jge
xor
fcmovne
mov
jae
or
jns
shlb
adc
sub
jle
test
add
push
xchg
jo
lret
or
add
inc
jae
jbe
addl
or
xlat
sub
adc
mov
push
dec
jo
popf
mov
xchg
je
fistpll
jmp
int
cld
dec
pop
in
nop
jnp
pop
dec
test
mov
adc
cmp
cld
sub
ljmp
jge
loopne
aam
and
mov
mov
js
and
sbb
test
mov
dec
sub
mov
cltd
ret
pop
sahf
faddp
push
mov
xor
cmp
xchg
sbb
add
out
mulb
out
pusha
xchg
dec
adc
add
inc
test
test
cmp
adc
xor
mov
bound
insl
xchg
subb
roll
int3
mov
and
out
sub
add
test
js
insl
sub
pop
sbb
add
mov
std
pop
pop
xor
mov
pop
cs
inc
dec
pop
adc
clc
sub
push
iret
cmp
sbb
mov
pushf
cmp
pop
in
push
mov
data16
and
cmpsl
push
push
cltd
ljmp
cmp
cmp
inc
mov
add
pop
sahf
outsl
add
xor
jge
pop
insb
dec
jns
fcmovb
test
xchg
out
push
lock
leave
insb
jecxz
iret
and
in
ss
push
pop
js
in
mov
pop
add
cmp
loopne
outsb
adc
push
fs
popl
in
aam
mov
incb
js
mov
out
xor
mov
push
push
popf
test
and
mov
test
mov
cmp
into
sbb
shlb
add
push
dec
mov
fucomi
rcl
sbb
and
xchg
or
xor
fistl
iret
lods
inc
pcmpgtd
push
mov
iret
test
jge
push
lds
dec
aam
pop
lods
dec
in
push
in
dec
inc
cmc
sub
xchg
dec
xchg
cmpsl
or
add
sbb
mov
jmp
pop
sub
or
add
push
pop
outsb
pushf
nop
inc
imul
scas
or
sahf
xchg
cmp
test
loop
enter
ret
pop
loop
xchg
imul
or
dec
js
dec
int
setle
test
and
adc
jnp
loop
push
cmp
fldcw
push
mov
mov
iret
adc
sarb
stos
mov
icebp
std
push
mov
js
pop
mov
int3
loop
push
add
test
cli
mov
fsubrl
nop
xchg
out
dec
xchg
aaa
xchg
xor
inc
jmp
sbbb
dec
cld
cmp
out
cmpsl
mov
into
mov
and
movsl
movswl
mov
and
ret
out
rcl
mov
gs
gs
sub
lret
jg
push
iret
cltd
inc
dec
push
pop
fnstcw
popf
call
push
xchg
push
sub
in
adc
lret
pop
xlat
jge
add
mov
scas
jb
cli
xchg
clc
test
stc
lret
ret
push
mov
inc
sub
adc
dec
cmc
and
leave
sarl
stos
push
push
repnz
xchg
shr
out
jo
fcoms
and
pushf
lret
insl
push
test
clc
enter
loope
test
inc
std
add
aam
mov
insb
add
xlat
cmpsb
scas
or
add
test
mov
or
stos
push
jge
das
clc
mov
mov
sub
imul
shr
add
int
js
mov
adc
mov
dec
mov
std
test
cmp
aam
in
mov
lret
push
mov
mov
jmp
xchg
sbb
fsubs
sbb
out
adc
push
jb
mov
xor
mov
sahf
and
push
pop
mov
pop
cld
push
jge
xchg
xor
and
icebp
lods
mov
mov
cmp
out
xchg
dec
cmpsl
or
lahf
sbb
inc
rcrl
sub
fsubrl
fcomps
or
xchg
mov
in
into
dec
mov
sarb
imul
in
int
jno
test
add
shll
movsb
pop
in
xchg
adc
popf
sub
xor
adcl
jns
js
les
in
int
and
std
pop
xor
lods
adc
icebp
sbb
push
ret
dec
out
stc
inc
or
aas
pop
and
call
jecxz
fisubrs
inc
insl
das
pop
mov
fcomip
push
pusha
in
xorb
dec
outsb
cmp
mov
leave
andb
xchg
lods
xor
movsl
add
sbb
mov
pop
push
and
pop
cmp
xchg
xchg
sub
sbb
gs
in
stos
js
in
cld
out
adc
fnsave
mov
ficomps
inc
or
push
negl
rolb
mov
add
sub
addr16
test
mov
mov
hlt
push
lret
add
xor
mov
daa
push
mov
jbe
mov
dec
lahf
lret
nop
mul
pop
mov
stc
lahf
js
insb
fs
loop
push
shll
insl
sbb
aad
daa
push
xchg
fisubl
dec
inc
pop
cld
repnz
add
cmpsl
nop
jb
add
sub
and
inc
push
xor
notb
add
test
pop
push
and
je
push
gs
das
add
orl
and
sub
fsts
hlt
or
mov
cmpb
and
sbb
dec
ficomps
ljmp
mov
pop
cmp
inc
fs
int
dec
sbb
iret
pop
in
add
andl
pushf
xlat
sub
jbe
iret
fwait
and
cld
int3
fyl2x
add
xchg
icebp
mov
arpl
pop
int3
mov
or
insl
adc
int3
insl
cmp
outsb
pop
push
pop
pop
out
or
aas
pop
fmuls
das
test
es
shl
xchg
int
jp
jno
lcall
and
jne
fbstp
jo
mov
movl
and
out
xchg
in
mov
push
pop
cmc
adc
push
mov
and
in
cmp
xlat
and
in
pop
rcrb
stc
inc
inc
or
popf
add
aaa
pop
scas
inc
cmpsl
hlt
fcoml
sbb
sbb
scas
dec
movsl
dec
xchg
jnp
imul
mov
fs
and
jbe
jl
mov
sti
mov
add
xor
sbb
pop
fadds
pop
test
cmpsb
fsubs
int3
int3
js
ja
dec
in
cmpsl
and
xchg
push
jns
or
leave
std
es
sub
xlat
xor
xchg
cwtl
shl
pop
push
ds
xchg
add
mov
pop
sbb
shrb
stos
sti
scas
push
lahf
repnz
das
out
out
or
push
shrl
addr16
xchg
outsb
and
jmp
pop
push
pop
aam
call
lcall
mov
mov
mov
call
std
push
out
ds
mov
mov
and
mov
cltd
sbb
push
push
mov
aad
and
cmp
sub
fisubrs
mov
mov
adc
pushl
cmp
hlt
mov
pop
pop
sbb
mov
pop
aad
mov
notb
inc
pop
xchg
or
sbb
test
push
mov
push
inc
arpl
scas
ds
mov
jbe
arpl
push
sbb
jae
mov
lcall
xor
ljmp
test
cmp
mov
jns
mov
popl
sub
test
xchg
out
lahf
aam
cmp
iret
cmp
add
mov
pop
mov
jae
xchg
push
push
iret
in
rcrb
addr16
or
sbb
mov
jmp
insl
sbb
std
and
jecxz
ret
aam
sbb
mov
int3
and
mov
cwtl
sbbl
and
scas
iret
sahf
mov
in
xorl
mov
outsl
sub
fisttpl
jl
pop
in
aad
shlb
enter
sbb
adc
mov
inc
dec
lret
in
popf
mov
mov
cmp
cmpsb
cmp
imul
daa
xor
cli
pop
je
dec
aad
fidivrs
jno
mov
ds
add
and
repz
fcomps
dec
cmc
dec
rcrl
cmp
pop
add
xchg
leave
and
je
aad
lea
xor
lahf
mov
pop
adc
xor
mov
or
sub
sub
fdivl
sbb
jl
test
push
push
out
mov
je
xor
add
test
movsb
stc
scas
pop
pop
dec
mov
mov
fbld
ja
inc
dec
iret
scas
xlat
jge
in
mov
sub
das
push
and
xchg
xor
sub
cs
out
aaa
jp
xchg
test
jecxz
or
add
mov
in
dec
dec
cmc
sub
es
cmp
ljmp
sete
lcall
cmp
daa
push
inc
adc
add
cs
push
stos
sarl
divb
lcall
xchg
mov
cwtl
ljmp
cmp
cld
cmc
push
inc
adc
and
enter
sbb
xor
add
mov
inc
or
push
je
outsl
xchg
inc
outsl
cmovno
jae
mov
xchg
mov
or
add
test
jb
out
add
jmp
idivl
cmp
or
popl
inc
into
adc
loopne
pop
xor
xor
adc
test
lahf
cmpsl
cld
push
xorl
inc
pop
mov
xchg
out
push
rclb
out
negb
addr16
push
dec
xor
dec
rcr
out
inc
pop
jmp
pop
cmp
leave
mov
repz
out
push
stos
xor
clc
sbb
out
inc
imul
mov
push
sti
jmp
add
rol
mov
inc
mov
movsl
rcrl
andl
fists
pop
inc
dec
popf
pop
pop
lcall
xchg
jg
ret
pop
out
in
add
push
das
subb
mov
pop
mov
mov
test
inc
sar
pop
mov
ret
cmpb
loop
insl
outsl
xor
sbb
push
or
xchg
addr16
sbb
push
insl
xchg
mov
add
fadds
addr16
data16
xchg
outsb
adc
cwtl
test
movsb
je
fcom
jns
leave
sbb
mov
in
mov
add
mov
mov
add
scas
push
pushf
xor
jo
or
std
stos
in
das
adc
test
int
movsb
add
dec
cmp
cs
test
gs
push
sbbb
insb
xchg
xchg
dec
sti
aaa
sbb
and
and
cmp
xor
rcrl
sub
pop
and
inc
iret
lods
cmp
into
xchg
mov
dec
push
or
bound
shrl
fdiv
mov
int
mov
ficompl
pop
jp
stos
rcl
jno
mov
jmp
adc
out
stc
jp
or
imul
mov
inc
clc
in
sub
test
arpl
push
out
jns
jge
aad
sbb
cmc
jge
stos
or
sub
test
fs
inc
jle
pushf
add
rcrl
div
sub
dec
repnz
xorb
cmc
jge
jle
sbb
cs
lret
cs
sub
sbb
push
jge
xchg
pushf
movsb
jo
outsb
push
pop
mov
push
clc
mov
in
dec
push
mov
cltd
fyl2xp1
pusha
push
fdivs
int
mov
sahf
pop
push
sub
add
fbstp
shlb
mov
sub
inc
stos
xchg
dec
pusha
inc
lds
sbb
add
dec
cmp
xor
fwait
jo
mov
push
dec
js
les
loopne
test
mov
xchg
push
cmp
pop
add
cld
pop
pop
test
or
add
cmp
or
and
adc
xor
daa
insb
jge
add
adc
xor
or
aam
ljmp
gs
cmp
int
ja
ret
js
mov
loop
enter
aas
aas
jnp
cmp
inc
or
enterw
gs
sub
mov
xor
ficoms
dec
into
movsb
imul
sar
mov
add
jg
sbb
sbb
subl
rol
outsl
pop
lahf
pusha
ret
or
push
cmpsb
out
add
sar
push
push
sub
daa
rcll
jns
jns
nop
and
popa
scas
xlat
inc
aaa
sbb
pusha
mov
movsb
jl
sbb
fadds
cmp
mov
mov
cmp
addb
push
les
nop
repz
cmp
dec
repnz
mov
lret
cmp
mov
mov
js
ja
jle
sahf
pop
mov
in
mov
lds
pop
das
insl
cmpb
adc
or
sub
sbb
sbbb
xchg
or
stos
mov
mov
movsl
push
add
lret
xor
mov
out
jb
imul
repnz
push
andb
insl
rorb
int3
mov
mov
mov
sbb
or
inc
jecxz
stos
sub
out
aam
and
and
cmpsb
out
insl
nop
neg
dec
or
sbb
xchg
cmp
mov
dec
ret
jae
loope
jno
data16
mov
rorb
pop
lods
jae
inc
loop
jb
adc
cmpsl
push
mov
dec
jns
jl
out
dec
dec
adc
add
mov
popa
xlat
fidivrl
int3
stos
outsb
or
cmpsl
fsub
pop
push
cmp
push
jl
or
push
rcrl
fidivl
jbe
les
das
das
pop
into
or
pop
adc
push
or
mov
and
jmp
nop
outsb
push
mov
add
jecxz
push
pop
mov
add
jno
sarb
sub
ljmp
jb
cmc
push
orb
and
test
or
push
jecxz
daa
cmp
dec
jne
push
add
mov
in
pop
mov
hlt
xor
cltd
filds
and
cmpsl
xorl
xchg
out
mov
aad
inc
inc
add
lock
vandnps
idivb
add
xlat
outsl
scas
xor
loop
gs
mov
sub
js
mov
sbb
mov
or
decb
push
pop
mov
xchg
push
xchg
mov
mov
mov
mov
dec
mov
jnp
enter
pop
cmp
shll
test
cmovo
and
jg
stos
mov
pop
shl
xchg
out
addr16
mov
adc
mov
pushf
pop
loope,pt
jge
push
mov
stos
adc
inc
out
stc
xchg
sbb
in
adc
mov
add
js
inc
add
sbb
test
jno
or
adc
imul
jge
call
mov
sahf
aam
cld
aam
push
rolb
sti
adc
adc
out
aam
cmpsb
jnp
jg
icebp
cmc
sbb
push
jle
aad
repz
mov
shl
add
subb
xor
out
lea
outsl
lock
pop
mov
lods
mov
adc
jb
fadd
jbe
cmc
dec
add
lahf
sub
hlt
dec
mov
dec
out
mov
dec
add
ret
aam
leave
push
test
test
test
lcall
sti
and
sub
xlat
jmp
adc
aas
xor
cmpsb
je
xchg
xchg
mov
add
into
mov
ret
pop
mov
jns
cwtl
ret
pop
pop
fdivs
hlt
arpl
fwait
jbe
jmp
rcl
xor
enter
cmc
andl
and
or
out
loope
push
sbb
fcompl
xchg
aad
and
adc
stc
test
jmp
cmp
push
push
pop
sbbb
and
loopne
sahf
add
push
cmpl
jl
sub
sub
lock
test
or
lret
ja
clc
dec
sbb
mov
cs
xor
add
pop
stos
sbb
lods
idivb
adc
mov
jne
out
pop
sahf
aam
pop
cmp
fldcw
loope
stc
mov
inc
mov
fildl
lods
aam
sbb
dec
insl
ds
mov
mov
jae
sbb
or
cmpsb
and
xchg
inc
rcrb
mov
es
in
lods
jns
add
jg
jp
ret
cs
cmp
subb
xchg
push
sti
add
xchg
dec
mov
test
incb
xchg
dec
lret
js
mov
mul
ljmp
outsb
jp
int3
and
sub
js
mov
into
popf
dec
icebp
mov
xchg
sub
jb
test
cltd
bound
inc
mov
add
jns
dec
std
fdivrp
jbe,pt
mov
cmp
roll
sub
sti
push
insb
mov
mov
dec
inc
add
insb
push
sbb
cmovns
mov
pop
add
xchg
fcoml
mov
popa
adc
pop
dec
fimull
mov
sti
mov
je
xchg
xchg
out
into
cwtl
rcr
adc
into
lods
xchg
inc
xor
add
add
fwait
sub
pop
xor
jb
rcll
mov
int3
test
lret
rcrb
cs
std
ret
pop
pop
je
or
nop
movsb
leave
adc
andb
mov
imul
fnstenv
mov
fidivs
ja
lock
xchg
loop
adc
xor
and
cmpsl
mov
cmp
cmpsl
push
stos
and
xchg
add
in
lods
pop
je
jo
cmp
adc
ret
sbb
imul
jge
sbb
and
mov
stos
jnp
push
add
pop
dec
subb
out
mov
and
sbb
lahf
inc
rcl
mov
dec
cltd
lock
push
pop
sub
mov
in
adc
movsb
xchg
comiss
add
in
jae
mov
js
xchg
xchg
and
cmp
stc
cwtl
inc
adc
push
rcl
push
adc
lcall
in
ficoml
lds
ss
std
adc
cld
jo
es
loope
mov
mov
roll
adc
jns
pop
adc
mov
mov
aas
xchg
cmpsb
fwait
loopne
mov
aas
add
adcb
stos
std
xorl
es
int
mov
lret
fstpt
xchg
cmp
fimull
shll
cltd
gs
fwait
mov
arpl
stos
and
sub
xchg
pop
ret
jmp
inc
jg
sub
cmpsl
push
push
jb
mov
movl
push
mov
test
and
sub
pop
cld
es
mov
cmp
push
repnz
aas
dec
movsl
jl
movsl
cwtl
sarb
xchg
cli
sub
adc
jne
adc
push
jo
inc
or
out
clc
cmpsl
popf
mov
push
sub
sub
xrelease
cmp
push
pop
and
mov
mov
sub
scas
push
movl
lret
in
jne
out
jp
cmp
or
cmpsl
fisttpll
push
push
adc
adc
leave
dec
repz
stos
mov
pop
adc
sarl
and
in
out
or
mov
faddl
pop
in
xor
add
push
jp
addb
mov
les
jns
sub
dec
es
cwtl
test
xchg
jge
dec
movsl
xchg
out
or
adc
aaa
xchg
sahf
imulb
int3
enter
in
stos
test
pop
out
out
aam
sub
dec
shlb
push
mov
cmp
popa
popa
xor
loopne
xorl
mov
inc
aad
add
aad
and
cmp
daa
scas
pop
and
push
ror
iret
movsl
cmpsl
xor
jge
loop
rdtsc
rcrb
sbb
fisubl
in
sbb
mov
fists
mull
xlat
jle
lahf
filds
inc
or
gs
incb
lret
or
sub
jb
loope
pop
xor
insb
inc
jo
or
add
arpl
jmp
arpl
loopne
pushl
hlt
lret
cmpsb
and
cmpsb
xchg
push
shl
and
or
icebp
fs
repnz
xchg
dec
inc
xlat
sbb
testb
insb
fprem1
sbb
lcall
std
pop
notb
mov
lock
rcr
std
mov
mov
test
and
sub
cmpsb
jle
and
incb
enter
leave
out
mov
inc
pusha
ds
push
jge
sbb
push
dec
mov
jmp
jo
cmpsl
mov
test
add
sete
lahf
lods
jle
stos
xchg
call
or
xlat
fldl
mov
repz
inc
test
pop
and
xchg
jne
int
test
mov
ljmp
xor
sete
outsb
sbb
rorl
mov
fcmovu
and
inc
popf
mov
mov
mov
movups
addl
mov
ds
mov
add
ljmp
pop
sub
fidivs
dec
in
js
mov
into
mov
pusha
dec
insl
dec
data16
into
xlat
or
xor
into
das
pop
push
cmpb
mov
movsl
adc
inc
xchg
lret
mov
insl
and
icebp
adc
addr16
scas
xor
xor
imul
insb
inc
les
mov
xor
add
dec
mov
inc
fiaddl
jle
jno
roll
into
dec
testl
cmpsl
dec
iret
les
fdivr
imul
dec
data16
inc
mov
push
sbb
scas
cmp
roll
xchg
mov
jmp
pop
inc
push
push
push
pop
clc
jp
mov
dec
xchg
push
jb
pusha
mov
push
fsubp
push
pop
mov
test
jp
pop
enter
arpl
fnstcw
popa
jge
adc
inc
out
leave
fcmovb
push
stos
push
cmp
xor
pop
lds
pop
pop
rclw
sbb
pop
xor
xor
mov
push
mov
data16
adcb
dec
adc
rolb
lahf
jmp
jnp
loope
pop
cmc
test
sbb
test
leave
cmp
cmp
outsb
fs
imul
mov
mov
sar
test
push
out
mov
into
outsl
dec
jne
neg
iret
popf
push
lods
sub
jl
mov
les
inc
lcall
fistpl
movsb
pop
inc
cmpsl
cmc
mov
mov
mov
xchg
add
mov
aas
xchg
fwait
pusha
xchg
xor
adcb
loop
leave
dec
out
jl
jmp
pop
adc
xchg
jns
pop
insl
jno
aam
lds
cmc
mov
lahf
fs
sub
pop
jl
cli
sbb
orl
dec
adc
loope
fwait
sbbb
mov
jo
fs
mov
pushf
mov
test
test
mov
pusha
call
cltd
mov
lock
mov
mov
inc
sub
sbb
jmp
push
jp
mov
call
mov
and
pop
lret
sarl
sub
test
roll
sub
dec
push
mov
fcompl
xor
push
cltd
fidivrl
cli
push
sub
scas
xor
add
repz
and
pop
hlt
hlt
sub
das
subl
mov
enter
daa
fwait
push
jns
outsb
jp
shlb
pusha
xlat
jl
sub
adc
pop
jae
popa
aam
lds
outsb
sbb
pusha
lahf
cmc
pop
jb
outsb
xchg
stos
loopne,pt
sub
icebp
test
mov
int
dec
dec
mov
xchg
or
cli
pop
push
pop
cwtl
cmpsb
adc
das
pop
pop
xor
mov
inc
mov
stos
out
sub
mov
insl
js
xchg
imul
cmp
fs
out
test
push
out
cmp
xorps
xlat
and
or
xor
or
popl
pop
inc
cmc
mov
insb
in
fs
popa
mov
pop
and
or
dec
xchg
jle,pn
adc
mov
xor
mov
or
into
dec
jns
and
insl
js
loopne
cmp
mov
inc
jnp
cmp
push
aaa
mov
cmp
mov
nopl
cwtl
and
imul
test
cmp
mov
nop
fldcw
outsb
lret
jbe
push
xor
mov
mov
pop
les
xchg
lcall
pop
outsl
in
cmp
or
xor
push
jecxz
jae
inc
push
mov
adc
xchg
pop
adc
sbb
aam
addl
into
fsubl
jmp
out
rolb
loop
mov
je
cld
in
mov
sbb
cltd
stc
push
mov
fcmovnb
mov
ret
push
cmp
xor
subl
sbbb
xchg
mov
stc
pop
roll
js
shr
out
inc
fbstp
aam
in
or
lret
cmc
insl
push
add
cwtl
jecxz
pushf
inc
cli
push
fwait
ret
imul
clc
icebp
mov
loop
clc
fiadds
mov
shr
push
leave
cmpsb
aaa
rol
mov
adc
mov
add
sub
jno
in
jmp
mov
dec
test
shl
lcall
scas
fsubl
outsl
cmpsl
in
and
mov
pop
fwait
scas
fidivl
dec
or
cmp
mov
mov
pop
inc
add
cmc
adcb
sarb
or
mov
repnz
or
ret
insl
cmp
lea
dec
mov
fcom
test
inc
aaa
inc
dec
xor
out
fidivrs
out
in
push
outsl
outsl
sbb
movsb
cmpsl
lea
nop
cli
rclb
cs
sbb
jmp
dec
inc
and
xchg
cld
pop
adc
shll
add
mov
scas
mov
jnp
icebp
adc
in
loope
jo
lret
xor
add
bound
popf
sbb
adc
xchg
push
cs
mov
into
cmc
mov
and
iret
add
or
lods
sarl
enter
push
mov
js
sar
pop
outsb
jmp
ja
out
inc
or
fsubl
and
jmp
xor
add
adc
cli
ret
dec
fmull
push
cmp
outsl
push
movsb
mov
mov
shlb
test
sub
pushf
jl
mov
add
popa
out
sbb
cmp
jg
lret
jb
not
adc
movsl
data16
movsl
push
jnp
jmp
pop
or
dec
imul
cmp
roll
pop
insb
pop
mov
adc
mov
js
xor
stos
enter
and
dec
dec
sbb
rolb
push
sub
lret
xchg
cld
add
shrl
jno
daa
and
in
jnp
xchg
adc
aaa
movsb
lds
je
sti
scas
dec
jb
add
sti
outsb
fidivs
clc
out
pop
rcl
fcoms
sub
iret
jo
xchg
adc
out
hlt
xor
loop
repz
test
cs
mov
loope
xlat
mov
out
int3
sbb
cli
fmull
dec
jbe
bnd
xor
pop
mull
push
inc
ret
jb
mov
sbb
adc
gs
sbbl
mov
mov
cmp
push
sub
pop
add
int3
mov
mov
bound
pushf
jns
aas
xchg
mov
daa
mov
lea
mov
adc
lahf
jno
sub
sub
sub
sbb
test
out
or
mov
lods
ficoms
pop
roll
test
mov
mov
push
lock
jbe
out
jns
daa
mov
and
loopne
sbb
and
mov
out
fs
mov
in
rcl
add
jecxz
jp
loope
outsb
in
or
mov
xchg
scas
jne
xlat
xchg
push
sbb
test
cmc
jns
add
mov
mov
jp
and
or
aad
jle
mov
sub
pop
inc
cld
and
sub
xchg
xchg
mov
fcompl
js
cmc
into
imul
pop
mov
cmpsl
sahf
xor
cmp
movsl
cmp
lret
push
sub
shll
popf
jecxz
cli
jp
data16
push
sub
adc
inc
inc
sbb
cmpb
or
sbb
imul
dec
insl
mov
cmp
lahf
repnz
mov
xor
ds
cmpsb
out
call
sbb
cmp
xchg
popf
rcrb
bound
cmp
das
repz
js
cmp
data16
add
fcoml
cli
push
mov
nop
daa
inc
or
sar
sub
orb
adc
cmc
xchg
adc
cwtl
cltd
jbe
mov
dec
mov
nopl
pop
pop
fiadds
inc
dec
mov
in
and
movsl
daa
add
inc
xchg
daa
es
lret
stos
xor
push
pushf
mov
lcall
mov
cmp
jb
xchg
out
push
daa
jno
sbb
mov
fcmovnu
xor
pop
test
out
push
ljmp
xor
lods
fisubl
decb
daa
subl
dec
outsb
shlb
stos
fs
dec
rolb
xchg
lods
or
bound
sbb
pop
xchg
or
push
jl
mov
dec
add
cmp
cmpsl
pop
dec
divb
imul
xchg
xlat
or
cmp
xchg
xchg
mov
sahf
aad
mov
scas
jno
or
icebp
lahf
stc
sub
sbb
sbb
pop
js
js
mov
stc
xor
xchg
in
notl
add
push
popf
sbb
xchg
mov
gs
sbb
xor
loop
movsl
adc
jne
inc
fldz
xchg
das
jne
xor
movsl
push
mov
inc
xor
pop
into
add
rcrl
popa
clc
fistpl
xor
pop
dec
jnp
addr16
add
loope
mov
dec
and
jp
aas
lds
mov
mov
xchg
fwait
xchg
or
in
cli
mov
fbstp
xlat
add
faddp
clc
push
movsl
cwtl
pop
inc
add
in
in
pop
mov
xchg
and
nop
or
pop
inc
sbb
cld
mov
stos
fisubrl
xchg
inc
xchg
jae
arpl
lcall
dec
shrb
repz
jno
cmp
jne
insb
cmp
ss
jp
push
nop
xor
cltd
shll
sbb
push
mov
lret
dec
mov
and
clc
inc
repnz
xchg
jge
or
imulb
mov
mov
fisttpl
dec
mov
cmpsl
movsb
pop
loope
xchg
loop
dec
jae
cmc
test
pop
hlt
adc
sbb
in
mov
jnp
adc
popa
and
lret
add
add
lds
push
out
ss
pop
call
in
jo
roll
in
sub
push
cmp
jae
and
sub
test
sub
pop
lret
mov
movsl
or
add
out
data16
xchg
add
cli
mov
dec
cmpsl
rorl
mov
test
jp
or
mov
adc
aas
mov
add
shl
cmc
outsb
mov
cli
mov
movb
push
sbb
xchg
inc
or
xor
loopne
adc
test
and
sbb
add
out
stos
mov
test
shll
xor
mov
adc
scas
adc
xor
fimull
or
xchg
decl
jnp
and
mov
cld
cmp
stc
inc
push
xlat
and
imul
int3
mov
mov
shl
xor
pop
adc
lock
gs
xorl
push
bound
lods
pop
jmp
mov
fimull
inc
addb
int3
mov
nop
cli
stos
jmp
cwtl
xchg
cmp
outsl
insb
loopne
fcomip
push
xor
pop
mov
gs
jbe
pusha
xchg
mov
mov
add
in
push
cmp
jle
ja
in
mov
jge
gs
pop
gs
hlt
xchg
leave
xor
cltd
fwait
xlat
add
add
repnz
movsb
pop
hlt
push
xchg
lcall
mov
pusha
jno
inc
push
or
push
inc
ja
mov
mov
lea
loope
xchg
lods
int3
xor
daa
cmc
or
out
push
clc
adc
fidivrl
sub
imul
xor
xor
pop
test
addr16
je
sbb
test
push
mov
adcb
cwtl
adc
in
xchg
xchg
dec
pop
jl
enter
cltd
or
push
dec
xchg
mov
and
mov
dec
cmpb
pop
pop
leave
jne
fs
cli
inc
pop
out
add
ds
scas
push
test
loope
mov
ja
test
sbb
pop
dec
jmp
mov
mov
int3
jns
pcmpeqd
dec
mov
mull
push
sarb
cmp
das
fldenv
fs
inc
fstps
repnz
sti
scas
inc
test
out
popa
xlat
xor
repnz
push
sbb
or
test
xlat
hlt
repz
xor
xchg
out
xor
inc
or
xchg
cmpsb
add
stos
push
cmc
movsb
scas
mov
add
inc
and
xor
call
and
out
add
repnz
into
pop
mov
mov
mov
mov
xchg
inc
mov
fadd
test
pop
int3
out
sub
dec
sub
or
pushf
loope
dec
push
jg
into
out
mov
sbb
inc
inc
mov
push
out
mov
stos
stos
xchg
adc
jecxz
lods
lcall
stos
pop
stc
pop
movsl
cmpsb
dec
mov
or
mov
ljmp
iret
mov
jmp
mov
loop
sub
movsl
and
pushf
add
mov
mov
xor
aam
cmp
sub
stos
jl
iret
xor
shlb
sbb
mov
in
outsl
mov
fisubrl
fwait
xchg
sahf
lret
or
lods
pop
loope
outsl
and
jp
test
shrb
ss
push
ds
jg
sbb
mov
adc
or
in
lret
mov
push
jne
test
test
stos
xchg
es
xchg
mull
nop
xchg
cmp
leave
inc
sub
ret
loope
or
jl
fstp
push
scas
or
lods
cwtl
dec
xchg
repz
and
sbb
push
jae
push
jge
cmpsb
cmp
jecxz
pop
xchg
fcomps
cmpsl
addr16
out
xchg
mov
cmpsl
mov
ljmp
jp
fneni(8087
clc
es
xor
in
xchg
dec
add
pop
xor
lahf
idiv
jno
jl
push
insb
scas
xlat
xchg
xchg
sub
popa
mov
push
pop
mov
sbb
mov
jnp
add
into
xchg
mov
outsl
mov
movl
iret
dec
xchg
and
out
xchg
shlb
arpl
in
cmp
mov
jmp
lea
arpl
cmp
and
sub
test
xor
outsb
sub
loope
and
gs
loopne
out
xchg
incb
stos
sbb
push
xchg
xorb
push
jae
sbb
in
sub
daa
inc
repnz
aad
adc
add
ss
repnz
or
mov
push
lods
imul
rcrb
jb
pop
in
dec
aas
adc
mov
idiv
inc
cmp
adc
add
or
inc
out
or
xchg
jns
add
dec
mov
or
adc
movsl
aas
push
push
cmp
fsubr
dec
cli
inc
jp
mov
add
mov
mov
insl
mov
int
fildll
pop
xor
pop
and
mov
lock
ret
xchg
lret
sub
aas
jecxz
dec
push
gs
or
xchg
push
cmp
pop
mov
std
dec
rcr
jae
iret
pop
addr16
inc
loope
std
loopne
mov
add
and
sbb
test
in
pop
adc
push
mov
sub
xchg
insb
imul
xor
arpl
push
aam
lcall
das
sub
push
add
insl
xor
in
mov
xchg
fisubrl
mov
add
add
cmp
add
dec
cli
mov
call
mov
ja
mov
jge
loopne
xor
adc
jne
push
xor
sbb
inc
inc
sub
std
push
xor
push
xchg
mov
and
cmc
shll
inc
mov
mov
sbb
repnz
or
cmp
hlt
or
mov
in
push
mov
out
xchg
or
mov
add
addb
mov
sbb
sub
loop
adcl
iret
mov
jnp
pushf
lea
push
fisttpll
clc
inc
or
xor
int3
xchg
pop
add
mov
xchg
repnz
xchg
pop
js
cli
and
and
inc
insl
sub
inc
test
cld
stos
sbb
das
loop
aam
jl
xor
lcall
es
ficoml
out
sub
push
xor
shrb
lds
xchg
out
fnstenv
xchg
int
loop
push
js
les
or
inc
pop
xchg
xlat
sub
inc
sub
lcall
push
lods
notl
add
push
aas
cmp
cmp
mov
pop
jle
lahf
mov
mov
shll
pop
test
jns
fsts
ja
push
xchg
mov
lret
loopne
cmpsl
sbb
lods
cltd
xor
dec
fwait
icebp
mov
das
pop
shll
and
or
pusha
out
cmp
fs
out
dec
repnz
test
push
pop
stc
adc
push
icebp
test
pop
jae
jl
fwait
mov
jne
pop
ja
pop
prefetch
sbb
popf
call
jnp
movsl
out
dec
push
mov
xchg
inc
mov
hlt
enter
inc
pop
test
cmp
inc
add
jno
leave
mov
pop
orl
push
cmp
adc
in
lret
fistpl
ffree
into
xchg
pop
xor
into
pop
stos
add
mov
sub
scas
outsl
adc
mov
je
mov
add
push
popf
sarl
sbb
jnp
xchg
out
inc
sahf
cmp
gs
jo
int3
xor
sbb
inc
sbb
lcall
js
lds
sbb
cs
cltd
jl
sahf
fdivl
andb
jecxz
lret
mov
mov
inc
cli
test
test
jp
push
jnp
push
cmp
sbb
mov
or
xlat
lret
jmp
jbe
lret
rclb
inc
add
stc
xchg
jne
aad
ds
adc
mov
subb
sub
sub
imulb
mull
and
xchg
cs
imul
jbe
in
rcr
push
fstl
sbb
fmuls
or
jl
xchg
jmp
ret
pushf
mov
push
pop
rolb
lds
xchg
loop
scas
scas
popf
mov
xchg
mov
add
iret
in
mov
jmp
shlb
insl
imul
movsb
adc
xchg
lods
cmpsb
je
out
sbb
loop
sti
rol
lods
rorl
in
cld
cs
mov
int3
stc
mov
mov
fstpt
mov
inc
sbb
push
mov
mov
outsl
mov
stos
je
dec
and
fidivl
fiadds
dec
lods
xchg
sub
mov
push
nop
jo
out
movsl
xchg
incl
inc
pop
push
mov
xchg
jmp
clc
mov
out
push
mov
xor
mov
xor
or
outsb
shll
pop
and
inc
in
popf
ret
inc
arpl
stos
jmp
pop
nop
stos
mov
mov
mov
lahf
jl
inc
int
popa
movl
add
testb
pop
mov
stc
shl
inc
loopne
xor
dec
aad
out
jg
dec
xchg
ret
das
outsb
mov
pop
mov
mov
sbb
inc
outsl
dec
cmp
lahf
call
dec
pop
mov
fwait
jl
sub
inc
inc
xchg
mov
insl
shlb
jno
mov
sub
cwtl
in
mov
xchg
insl
pop
js
fldl
lock
push
and
cld
mov
jne
int
jbe
cmp
or
adc
sarb
push
adc
inc
enter
and
aaa
repnz
jbe
or
xlat
xchg
in
test
aas
dec
jae
xchg
and
in
jmp
pop
push
rclb
jl
xor
or
inc
inc
mov
mov
push
cmpsb
cmpsl
iret
push
scas
daa
mov
xor
sahf
jle
lcall
push
xorl
andb
rcll
mov
mov
sub
adc
or
add
cltd
sbb
aaa
jbe
insl
rorl
insb
fcmovnbe
das
in
bound
jg
mov
pop
pusha
cli
sub
mov
push
and
fmull
test
fimuls
iret
mulb
pop
in
mov
inc
int
lea
xor
cmp
fdivs
sbb
lret
sub
ljmp
mov
lcall
pop
sbb
pop
mov
jmp
aad
fdivs
int
mov
insl
jb
mov
mov
notl
ficompl
push
xor
and
push
int
mov
mov
fidivl
inc
fs
test
aas
enter
cli
popa
pop
mov
int3
cmpb
es
jae
gs
push
mov
sarb
pop
inc
add
les
cmp
out
sarl
scas
mov
adc
fists
or
movsb
rcr
and
std
bnd
test
movsb
sahf
imul
outsb
sbb
out
jle
popa
sub
dec
mov
cmp
fwait
inc
cmp
aad
cltd
pushf
or
fs
push
add
lods
enter
fstpt
cmp
xchg
lcall
cwtl
loope
push
lret
bound
fldl2t
into
inc
stos
sub
and
pop
pop
or
xchg
shrb
dec
jnp
addl
inc
mov
or
fcoml
xchg
jge
sub
out
cmp
adc
and
rcrb
popa
jmp
push
inc
lock
stos
or
cmpsl
xchg
pop
adc
pop
stc
ljmp
jmp
cmpsl
xor
movsb
mov
mov
push
xor
jecxz
add
mov
inc
mov
cmp
mov
insl
cmpsb
cld
pop
sarl
sahf
shll
notb
sti
cmp
cmp
cmp
push
add
pop
leave
mov
int3
adc
fldz
test
aaa
aad
movb
add
punpcklwd
icebp
shlb
xchg
add
nop
addr16
shrl
stos
mov
rcrb
outsl
fcoml
jo
jns
stos
fs
mov
stos
jg
or
ja
hlt
loop
popf
mov
gs
cmpsb
xchg
mov
fsts
push
js
fidivrs
pop
xchg
lret
jp
and
mov
insl
jne
lds
lret
test
mov
dec
sbb
or
jo
push
sbb
inc
push
loop
loopne
fiaddl
in
sbb
mov
sub
inc
cmp
mov
repnz
dec
test
mov
fstpl
sbb
xchg
test
fbstp
pop
inc
xchg
insl
sbb
push
aad
mov
xor
jo
cli
daa
ja
andl
and
mov
nop
test
movsb
lahf
sbb
xchg
mov
xchg
sbb
jo
mov
xchg
dec
dec
rclb
push
dec
mov
cli
lcall
lret
leave
xlat
ljmp
mov
mov
adc
add
adc
js
orl
scas
call
add
xchg
inc
mov
sub
dec
cmc
ljmp
sbb
adcb
xor
mov
pop
add
xchg
lahf
out
lds
jb
cli
pop
or
inc
imul
movsb
sarb
jnp
jl
and
rcrl
jecxz
mov
ret
push
or
jecxz
jge
fldt
sbb
cwtl
cmp
mov
repnz
adc
mov
mov
and
mov
cmp
jo
push
mov
mov
mov
mov
cmp
movsl
fcmovb
das
je
add
sub
cmp
or
les
cmp
cli
mov
and
stc
sti
rclb
fistl
inc
stos
jg,pt
xor
dec
inc
jecxz
mov
mov
adcl
outsl
imul
xchg
loop
push
xor
test
subb
pushf
mov
in
push
pop
lret
int3
dec
sbb
call
cmp
mov
xor
cmp
jecxz
in
adc
out
into
test
ret
and
stos
add
adc
inc
out
in
inc
adc
call
xchg
fildl
cmpsl
fistpl
fdivrl
out
sbb
dec
pop
hlt
cltd
ret
aas
sub
test
pop
or
testl
in
mov
adc
test
sbb
push
notb
movsb
loop
fwait
mov
pop
scas
adc
jp
push
frstor
fbld
push
push
in
std
xor
repnz
into
dec
push
jl
scas
repnz
pop
mov
popa
pop
iret
dec
pop
out
rcll
mov
ds
cmp
popf
mov
xlat
int
pop
xchg
push
or
mov
dec
fistpll
sbb
ds
out
in
adc
inc
push
cmp
imul
pusha
aad
jnp
sbb
xchg
je,pt
pop
dec
shrl
sbb
xchg
jl
subb
adc
push
test
jecxz
sti
xchg
dec
push
ror
popa
clc
lds
bound
sub
aas
cmpsb
das
aad
in
sbb
xor
fwait
vmread
mov
rcll
cmp
add
mov
cld
sahf
int3
jg
gs
mov
out
lcall
sub
sbb
ss
jmp
mov
mov
xchg
movsb
push
xor
movsb
sbb
inc
add
insl
mov
mov
pushl
out
popa
fistl
and
rorb
sbbl
data16
push
adc
out
mov
mov
popf
push
lret
arpl
pop
fnstcw
icebp
ficoms
jo
inc
fcmovnbe
shlb
xchg
mov
dec
inc
mov
hlt
adc
inc
push
lea
sbb
pop
paddd
mov
xor
xor
jmp
cmc
test
jp
js
mov
test
shl
and
mov
adcb
daa
jo
scas
ffree
cmp
sbb
push
mov
and
mov
shl
jo
mov
push
fsubs
repz
xor
icebp
push
test
mov
xor
inc
jmp
adc
test
jae
inc
cltd
mov
pushf
scas
mov
cld
pop
or
or
das
adc
gs
sbb
out
cmp
xchg
inc
in
push
mov
mov
sti
nop
and
cmpl
jg
iret
rclb
xlat
add
ss
test
loope
call
or
pop
scas
lahf
or
rclb
sahf
mov
jnp
push
or
ret
pusha
mov
scas
pop
jo
pop
rcr
fimuls
inc
test
aas
pop
das
mov
movsb
stos
sbb
cmp
pushw
fwait
xor
pop
sub
mov
std
sbb
push
call
daa
in
lea
sbb
push
int3
mov
clc
cld
jne
dec
pushf
cmp
hlt
and
pop
or
popa
out
ja
sub
shl
loop
cs
out
inc
xor
mov
pcmpgtb
out
sub
test
movsl
sbb
inc
icebp
cmp
dec
lods
arpl
popf
mov
push
fwait
sub
xchg
push
outsl
pop
sub
jmp
inc
sti
pusha
pop
lods
cmp
or
mov
lret
loop
nop
xor
stos
int
lock
mov
push
pop
xorb
loope
fxtract
push
push
inc
mov
test
cmp
out
xor
movsb
jle
xor
mov
jbe
data16
mov
inc
cmp
push
pop
jae
pop
in
pop
rclb
pop
add
call
push
sbb
xor
faddp
inc
and
cld
cld
fimull
dec
data16
mov
lods
inc
cmp
test
sub
adc
mov
std
pushf
sbb
addr16
push
out
int
sahf
xor
lods
push
xor
mov
push
mov
adc
into
frstor
xor
icebp
ficomps
pop
sbb
mov
xor
add
std
inc
out
inc
pushf
in
and
fs
jl
xor
in
fdivrs
adc
mov
outsl
pop
sahf
insl
cli
int3
int
push
lods
ss
jae,pn
pusha
or
add
int
rol
ret
mov
xor
adc
shll
push
pop
dec
mov
sub
cwtl
test
subl
enter
sbb
icebp
mov
push
dec
aam
in
add
or
fmulp
test
or
data16
xchg
push
mov
inc
mov
push
xchg
ret
aaa
push
sub
rcl
push
inc
jne
movsb
test
pop
sbb
mov
call
push
add
mov
clc
adc
sub
movsl
adc
xor
mov
xor
add
aam
ja
stos
pop
fwait
jge
lcall
and
adc
cmpsb
stos
insb
fistpl
pushf
jecxz
dec
xchg
or
push
pop
hlt
or
aas
insb
cmp
outsb
mov
movsl
cmp
xchg
pop
test
pop
xor
cmp
ret
shrb
in
mov
fnsave
pop
inc
mov
xchg
test
and
imul
fst
stc
lret
and
test
loopne
ljmp
neg
or
iret
add
subb
xlat
addl
pcmpgtw
push
mov
dec
cwtl
mov
xchg
sbb
add
mov
mov
in
dec
cmp
sbb
enter
movsl
ds
loopne,pn
sbb
leave
cmpsl
lahf
insb
or
dec
xchg
adc
fistpl
loopne
repz
loop
nop
sub
repz
insb
mov
imul
add
movsb
cmp
mulb
shl
pop
cmp
mov
adc
dec
ds
in
pusha
mov
inc
dec
adc
mov
loopne
cmp
mov
fldt
subl
mov
or
shll
and
dec
es
mov
dec
fld1
dec
inc
outsb
dec
cmp
push
sub
sti
mov
es
or
adc
insb
ds
fisubl
dec
insl
idivb
aaa
adc
push
add
rorl
xlat
cmp
pop
ljmp
add
frstor
mov
xor
int3
pop
inc
ds
aaa
js
xchg
inc
sbb
dec
push
inc
or
mov
add
cmp
iret
sub
jno
push
inc
out
sub
pushf
aam
add
ret
lods
sti
mov
push
ljmp
dec
cli
mov
lret
jge
jmp
rcll
or
ljmp
aas
adc
xchg
xchg
mov
xor
xchg
mov
push
in
stos
notl
add
jp
add
xchg
les
hlt
pop
rorb
inc
xchg
mov
jg
push
shlb
jbe
sbb
loopne
jne
in
imull
adcl
pop
lea
loope
push
add
test
sbb
fprem1
sbb
add
mov
fsubl
pop
movsl
jle
popf
and
les
adc
aam
push
push
nop
outsb
insl
popf
aad
ja
adc
cmpsb
add
cmp
test
leave
stos
dec
push
mov
imul
in
shlb
out
rclb
clc
clc
push
cmp
repz
fistl
outsl
mull
add
xor
arpl
inc
jmp
xor
mov
and
int
test
pop
cmp
mov
imul
sbb
iret
lods
xor
pop
fstl
pop
cli
and
cli
and
loope
jmp
aad
das
jp
push
fdivp
mov
mov
mov
pusha
lahf
xor
pushf
xchg
xchg
mov
xor
repz
jo
cmpsb
mov
mov
and
mov
jo
loopne
es
ljmp
std
es
mov
stos
scas
leave
movsb
and
jge
push
push
fisttpll
cltd
sub
test
sub
pop
imul
pop
jge
nop
sub
cmp
rorl
push
jae
jg
ja
push
xor
mov
mov
dec
outsb
sbb
rcr
dec
popf
adc
push
lcall
lods
and
mov
rolb
adc
pop
add
cmp
mulb
dec
into
cmp
add
cmp
xchg
lds
sbb
pop
mov
aam
sub
jnp
cltd
sbb
loope
xor
push
fidivrl
hlt
and
or
into
ss
jl
and
mov
mov
arpl
mov
cmpsl
outsl
leave
cmpsb
lret
in
jecxz
pushf
leave
call
add
fs
aad
icebp
pop
aad
hlt
decl
adc
mov
pushl
cmp
lods
sbb
fsub
ds
pop
pop
fmull
cmpl
std
push
add
cli
sbb
loopne
cs
mov
inc
cwtl
fs
jns
ds
fsubp
add
fisttpll
out
mov
lahf
outsl
or
push
push
push
add
repnz
add
stos
lds
dec
cmp
mov
lcall
ret
aaa
movsb
mov
cwtl
sbb
mov
dec
lea
xchg
mov
jecxz
mov
pop
pop
mov
sub
out
ss
dec
lock
mov
push
adc
sbb
push
jo
pusha
sub
xchg
lea
or
adc
xor
push
sbb
movsb
lcall
push
aaa
and
mov
cmp
fisubs
fwait
int
mov
lret
daa
adc
testb
fmuls
adc
mov
adc
out
sub
sub
cmp
inc
imulb
xor
std
lods
icebp
sbb
pushf
dec
dec
dec
dec
or
mov
jno
out
icebp
sub
mov
xchg
jo
loop
dec
outsl
sub
pop
ljmp
out
dec
int
outsl
dec
lods
mov
pop
mov
jmp
inc
adc
mov
out
insb
sub
pop
arpl
es
out
mov
lahf
cmp
imul
and
fs
xor
add
xchg
ljmp
mov
add
jmp
jno
out
icebp
jne
adc
xchg
dec
incl
addr16
negb
push
outsl
inc
bound
cwtl
fmull
mov
clc
dec
jp
adc
aam
mov
pop
fildll
cmp
pushf
insb
daa
jb
push
in
dec
push
subb
sub
jbe
mov
aaa
int
rorl
xor
test
ljmp
lock
out
rorl
xor
pop
mov
mov
pop
scas
sbb
cs
mov
pop
loopne
dec
cmp
sbb
fistpll
mov
pop
xchg
sbb
pusha
push
xchg
aam
xchg
loop
dec
dec
fbld
adc
pop
and
aaa
outsb
push
add
fisttps
test
cmp
out
lret
and
push
mov
inc
pop
push
mov
pop
pause
sbb
xchg
pushf
push
dec
and
and
jae
fcoml
jl
mov
add
int
jg
jmp
adc
jo
mov
mov
cld
cwtl
test
mov
ja
mov
pop
push
pop
scas
das
adc
arpl
gs
xchg
scas
jbe
test
rcrb
xchg
inc
mov
popa
push
sbb
fisubrs
fs
or
add
inc
jecxz
inc
cs
mov
call
xor
ret
leave
add
pop
jge
into
sub
jmp
mov
cmc
cmp
dec
push
dec
fistpl
xor
cmp
and
sbb
scas
jns
inc
rorl
nop
dec
mov
incl
xor
add
xlat
enter
test
jp
mov
xchg
mov
repnz
and
lea
test
dec
push
or
push
push
xchg
andb
testl
xor
mov
inc
xchg
fcompl
add
mov
in
outsl
xor
and
jmp
and
repnz
inc
fwait
mov
sub
inc
sbb
hlt
iret
enter
cmp
pusha
out
cmc
lods
xor
push
mov
dec
jb
in
out
stos
ds
jmp
mov
mov
push
pop
aad
and
lea
iret
dec
out
les
inc
dec
mov
ljmp
xchg
xchg
andb
iret
add
inc
fwait
mov
je
mov
xchg
pop
ret
or
mov
or
std
mov
dec
mov
movsl
mov
cltd
dec
test
push
lret
mov
or
jp
xor
ret
cmpsl
and
mov
pop
lcall
xchg
add
out
lods
iret
lcall
dec
pushfw
mov
add
adc
je
aam
mov
adc
cmpsl
adc
mov
pop
roll
cmp
inc
imul
push
xchg
bnd
int
sub
jbe
insl
xor
std
mov
mov
iret
ja
loope
std
xchg
orl
cmp
jne
fs
xchg
sarb
incb
and
repz
andb
fildll
and
int
scas
fwait
call
cmp
in
xor
int
out
cmp
aam
sahf
jae
dec
dec
jno
loop
or
inc
sbb
xchg
mov
scas
xchg
pop
imul
lret
xchg
leave
mov
sbb
xor
pop
pop
xor
mov
mov
dec
adc
jecxz
fs
das
fists
jl
cmp
addr16
sub
mov
xchg
xchg
sub
stos
jle
sbb
and
cltd
push
pop
cmp
inc
rorl
mov
mulb
pop
sub
push
sar
sub
stc
loop
mov
lock
push
mov
and
mov
push
cs
cwtl
sbb
mov
icebp
inc
push
mov
and
and
arpl
adc
in
mov
jg
cwtl
fst
shl
inc
mov
sbbl
movsl
lcall
push
shrb
jecxz
mov
insl
fdivrl
popf
dec
xchg
out
lcall
mov
je
xchg
icebp
fs
cmp
pop
pusha
jmp
add
fs
jns
iret
sbb
fsubl
push
mov
outsl
scas
lds
inc
mov
cmp
push
cld
add
lcall
jg
sti
xor
imul
daa
psrlw
stc
mov
push
outsb
clc
lods
test
aad
es
sbb
clc
and
cmovbe
cmpsl
jge
lret
mov
sbb
repnz
sub
add
add
in
push
adc
jecxz
ja
setno
pushf
and
negb
sbb
sbbb
sbb
jb
pop
or
adcb
and
cmp
xchg
insb
outsb
ja
fistpl
test
mov
sbb
sti
push
push
test
jl
jle
addl
pop
mov
out
idivl
pop
stc
mov
pushf
fidivrl
or
jl
jge
cmp
or
pop
orb
jne
mov
imul
push
mov
insl
shrb
sbb
dec
xor
pop
gs
jecxz
and
repz
mov
xor
outsl
into
push
stos
mov
jae
jo
sub
xor
mov
push
sbb
imul
imul
mov
test
mov
or
loopne
add
cmp
insw
cli
sub
sub
or
ss
push
push
xchg
arpl
ja
ficomps
pop
std
mov
aaa
iret
pop
js
lods
int3
sti
xchg
arpl
gs
and
sbb
sar
jg
push
fists
movsb
xor
cmpl
push
jp
lret
in
mov
outsb
fisubrl
sbb
bound
fst
sbbb
stos
lea
push
out
jae
in
or
loope
add
ret
xchg
in
dec
dec
in
andb
cmpsl
aaa
out
dec
ficoms
fs
inc
jmp
call
das
mov
push
dec
jo
xchg
std
call
xchg
sarl
add
ret
push
ja
movsb
repz
mov
andb
popf
jecxz
popa
ret
lods
cmp
ja
sahf
mov
mov
stc
and
adc
enter
mov
push
adc
or
and
mov
push
jbe
jne
mov
xchg
xlat
pusha
inc
vmovntdq
jae
lret
adc
mov
inc
push
sub
aas
in
inc
cld
jnp
pop
pop
push
arpl
jbe
jle
xor
mov
aaa
push
dec
dec
pop
jne
lret
enter
push
cmp
adc
insl
adc
lcall
loop
ljmp
scas
push
sbb
movsl
push
mov
aas
jnp
add
int3
jae
scas
enter
lock
mov
jmp
mov
xchg
jecxz
add
and
and
stc
int3
pushf
loopne
stos
pop
xchg
test
scas
mov
pushf
jne
mov
out
jge
inc
inc
movsl
push
lea
aam
insb
ja
fisubrl
push
mov
loope
scas
imul
jne
and
or
or
inc
add
add
popf
aad
lock
movsl
dec
push
sahf
enter
rol
movsl
push
xorb
adc
outsl
lds
dec
xchg
fsubl
sbb
pop
pop
adc
pop
mov
add
sub
fstpt
scas
jnp
insl
bound
xor
shll
cmpsl
cmp
dec
xchg
push
hlt
stos
xor
jb
mov
xchg
out
fs
movsb
mov
mov
sub
mov
lret
pop
jg
add
je
icebp
jno
cli
cltd
dec
adc
xor
outsl
in
fcompl
cmp
popl
aaa
out
jg
push
cs
out
popf
lds
in
addl
mov
int
in
lcall
push
stos
test
mov
cmp
jns
push
push
in
js
in
mov
sub
cmp
ja
push
xchg
pop
xchg
xor
sbb
dec
ja
scas
sub
out
cltd
call
xor
xchg
cld
and
pop
inc
addb
sub
pop
test
shll
fnstsw
cmpsl
sub
push
in
and
mov
in
push
jnp
lds
add
jmp
sub
push
push
xchg
push
lods
add
xor
and
in
mov
adc
ret
or
mov
jae
sub
push
xor
out
mov
in
xor
push
inc
cmp
or
mov
sbb
cwtl
mov
sbb
in
shr
sub
clc
shrl
imul
mov
xchg
jo
clc
xor
test
insb
aaa
mov
jge
lods
xchg
push
pop
loopne
dec
ret
xor
addb
lods
mov
cmp
lods
adc
iret
sub
mov
xor
sbb
push
push
adc
sbb
dec
adc
popa
stc
out
adc
out
dec
lock
lock
jecxz
push
push
dec
bound
xchg
test
mov
inc
pop
xor
pop
dec
ret
sub
outsl
and
fisttpll
sti
inc
pop
ret
pop
out
mov
add
icebp
cmpsl
pop
movsl
jmp
xchg
sbb
fcmove
stos
lods
sarb
test
stc
repnz
jb
rcr
add
negl
stc
push
into
shrl
inc
sub
ret
imul
xchg
add
inc
or
pop
pop
pop
loope
add
or
sub
out
mov
lods
xchg
sub
add
jb
jge
mov
sub
fmuls
push
mov
movsl
sbb
repz
insl
push
test
jno
inc
sub
les
pusha
xor
cli
sbb
dec
sub
mov
push
jmp
movsl
sti
inc
loopne
enter
xor
and
jb
pop
fdivs
mov
rcll
push
dec
mov
cmpsl
pop
stos
stos
mov
add
add
hlt
adc
les
dec
lcall
cmc
int3
add
ja
ret
mov
stos
icebp
repnz
test
stos
mov
mov
fbstp
dec
sub
das
lds
fnstenv
mov
in
in
or
jl
mov
add
mov
pop
xchg
mov
xor
cmpsb
xor
sbb
scas
aaa
aam
ret
jl
fisubrl
scas
iret
mov
jno
or
cld
data16
xchg
adc
sub
popf
sub
cmp
push
sub
inc
mov
nop
ret
mov
popf
mov
inc
or
mov
lods
insl
pop
repz
mov
das
or
mov
dec
xchg
push
xlat
jmp
pop
int
in
fistps
scas
mov
ljmp
sbb
into
icebp
jmp
sub
into
cmp
jns
sub
push
mov
or
aam
test
adc
mov
jmp
cmp
sarl
aas
lret
cmp
cmpsl
pop
sbb
scas
iret
jae
mov
xor
scas
mov
fnsave
pop
xor
xchg
in
int3
loope
mov
sahf
test
lds
aad
out
loope
pushf
jbe
cmp
lret
mov
push
push
xor
push
xchg
fildll
xor
ret
nop
sub
lahf
in
or
sti
mov
mov
adc
or
decl
je
out
mov
cmp
push
add
dec
nop
fincstp
ja
sbb
orl
pop
cmp
inc
and
pusha
push
fildll
jl
movsb
xor
or
insl
xchg
sbb
xchg
mov
sti
push
js
stos
cmp
mov
or
cmp
and
fmull
or
std
xchg
lods
lret
adc
jecxz
ljmp
lret
cltd
mov
je
inc
popa
mov
loope
dec
xchg
pushf
mov
push
mov
xorb
sub
sahf
jno
hlt
dec
gs
mov
mov
neg
data16
cwtl
insb
scas
shll
cmpb
xor
scas
mov
xlat
xchg
sbb
mov
xchg
add
adc
rcl
rcll
xchg
xchg
mov
ret
sar
jne
pushf
dec
imul
lods
lahf
mov
mov
cmp
jmp
pop
ret
dec
mov
sub
or
in
jne
test
lret
mov
sub
push
adc
and
movsb
rcll
mov
addr16
xor
aas
lds
loopne
sbb
mov
pop
jecxz
test
pop
mov
movsl
nop
scas
outsl
repz
sub
iret
xor
xor
popf
in
leave
push
shlb
in
xchg
xor
sbb
inc
mov
pop
loop
xor
fsubrl
dec
inc
mov
pop
in
sbb
stos
int3
dec
test
push
pop
test
lds
in
mov
jg
cmp
loope
das
fmul
and
in
stos
int3
jle
or
popf
mov
adc
std
mov
call
xor
add
rcll
sbb
mov
shrb
cmpsl
loop
and
aad
inc
int3
inc
mov
push
add
fisttpll
dec
xor
sbb
fistl
xchg
add
arpl
lcall
mov
jo
outsb
jl
and
fstl
pop
sbb
sbb
cwtl
xlat
adc
lock
pop
sbb
jno
push
repnz
xchg
pop
mov
rcrb
push
push
adc
loopne
cmp
in
pop
addr16
cmpsb
jg
cli
insl
notb
cmp
and
mov
rorl
sub
mov
rcll
mov
push
es
or
scas
arpl
rcll
adc
fnstsw
xchg
inc
popf
pusha
int3
aaa
xchg
cmp
out
enter
stos
fistps
cwtl
mov
mov
jmp
pop
push
in
add
call
and
mov
into
inc
jno
mov
adc
dec
aaa
ljmp
repz
leave
sahf
insb
xlat
mov
cli
pop
adcl
int
mov
mov
mov
cmp
mov
jae
mov
push
fnstcw
ret
pushf
adc
dec
fbld
mov
adc
mov
xor
sahf
lahf
filds
mov
insb
in
or
mov
enter
das
imul
or
push
and
add
dec
xchg
test
gs
or
popl
addr16
fldt
cmp
cmp
pop
hlt
xor
testl
add
mov
or
inc
mov
and
stos
jns
push
testl
dec
fiadds
xchg
lea
sub
and
int
or
lods
push
pop
xchg
mov
out
jno
jno
mov
jns
jp
pop
stc
cmc
lret
pop
insb
mov
ljmp
xchg
fwait
sbb
or
popa
lcall
js
popa
pushf
adc
lds
js
arpl
jo
fs
jae
mov
cmp
movsl
sub
jmp
fadds
xorb
das
jne
fcos
lods
jmp
cli
movsb
mov
add
pushf
imul
pop
inc
fistps
ja
push
outsb
sub
out
pusha
pop
add
lret
add
stos
cmp
out
push
and
xor
pop
sbb
mov
jno
mov
pop
movsb
or
test
inc
xchg
lds
push
and
mov
xchg
scas
push
cmpsb
test
pop
mov
aas
mov
pop
out
dec
jle
pusha
push
mov
adc
clc
das
int3
pop
jmp
rcll
popf
jne
lods
or
push
dec
pop
mov
mov
xor
popf
insb
adc
fldt
orb
arpl
and
imul
mov
or
les
loope
inc
sbb
push
pop
lock
mov
aas
testb
cmpsl
fisttpll
enter
dec
sysexit
fisubl
scas
dec
jae
sub
push
or
scas
imul
mov
cmpsl
les
jg
cmp
inc
mov
xor
cli
mov
cltd
cs
mov
lcall
jl
fsub
lahf
jo
cmp
lods
or
fcomp
or
cmc
call
clc
lret
fnstcw
inc
aas
or
stc
rorw
add
cmpb
leave
in
int
insb
inc
cmp
pusha
xchg
push
pop
push
push
pop
addr16
jmp
imul
wbinvd
dec
adc
ja
pop
mov
adc
clc
push
lret
jbe
scas
adc
stc
fwait
sbb
lock
dec
jbe
mov
or
pop
dec
pop
add
mov
cmpb
mov
fnstsw
adc
xchg
lea
aaa
push
xor
jle
out
cmp
pushf
mov
mov
repz
sub
rcrb
pop
hlt
rcrb
fists
add
sub
inc
sbb
dec
fnstcw
arpl
inc
and
adc
sbb
lahf
cmpsb
push
movsl
inc
and
or
ret
mov
dec
cmpl
movsl
std
sbb
int3
mov
adc
cmpb
sub
jecxz
sub
sub
mov
das
test
adc
int3
adc
jg
and
push
in
xchg
inc
or
test
jmp
and
mov
xchg
mov
cwtl
xor
mov
xlat
xlat
xor
add
fidivrs
adc
call
idiv
cmp
sub
push
lods
xchg
adc
sub
dec
xchg
add
insl
adc
fs
stos
lret
mov
sub
jo
popa
pop
jnp
cmp
fcompl
data16
jnp
xor
pop
sub
repnz
mov
andl
jbe
xchg
cld
mov
inc
pusha
inc
sub
xchg
cmpsl
push
fbstp
test
dec
adc
fldenv
mov
xchg
push
jae
dec
inc
sahf
xor
or
aas
mov
cmp
cwtl
adc
lock
and
jae
pop
pop
dec
and
and
push
idivl
mov
mov
xchg
or
mov
inc
and
mov
sub
out
jg
ss
add
jb
or
inc
sub
insl
cwtl
cmpsl
call
sti
in
cmp
mov
cli
or
push
jmp
test
test
and
bound
or
sbb
insl
sub
mov
pop
xor
aad
aaa
subb
mov
sub
iret
mov
jnp
cmc
sbb
test
cmpsb
out
xchg
cs
movsl
aaa
sub
sahf
mov
mov
sub
std
xchg
ja
flds
cmpsb
jle
jne
sub
cs
std
inc
push
pusha
dec
adc
xchg
cli
das
mov
xchg
fidivs
lahf
xchg
cld
add
xchg
out
mov
jnp
cmp
in
mov
outsb
cmp
mov
js
cmpsl
daa
xchg
pop
pop
mov
mov
jb
nop
pop
es
jb
pop
test
mov
ficoms
jb
lock
mov
in
aad
ja
xchg
xor
mov
xchg
lcall
mov
xor
into
fldt
sub
paddb
ja
inc
aaa
rolb
adc
mov
fstpt
loop
lods
dec
inc
or
jae
inc
shll
mov
xorl
hlt
xchg
and
test
mov
fisttpll
jne
fwait
ret
cmp
push
inc
inc
add
fsubr
shr
pop
mov
inc
in
movsb
jnp
leave
lock
loope
inc
bound
or
xor
or
ds
inc
push
iret
sbb
fistl
in
addl
jb
daa
sub
addr16
leave
iret
xor
mov
aad
pop
mov
out
jl
sbb
inc
mov
loope
lds
jne
mov
movsb
xor
adc
adc
sbb
pop
xchg
lods
das
mov
fsubl
cmpb
cmp
ja
or
loop
jmp
push
push
arpl
fs
cmpsb
inc
and
push
stos
push
outsl
aas
jp,pn
and
mov
stc
lds
xor
shl
add
and
imul
mov
lds
add
aad
subl
lret
pop
in
shr
clc
hlt
cmp
jecxz
fsubrs
mov
push
mov
and
sbb
jp
jbe
mov
cmp
ljmp
jle
fcmovb
sti
adc
stc
stos
movsl
push
bnd
jmp
out
insb
test
dec
testb
repnz
jmp
insb
adc
inc
fsubr
xchg
and
pop
imul
xlat
lret
int
dec
cmp
fcmovu
loope
inc
scas
data16
jae
dec
not
or
sbb
into
xchg
mov
inc
cmp
aas
push
xchg
mulb
jle
shlb
stos
add
cmc
push
sub
ds
sbb
push
cmp
rcpps
outsb
rolb
lods
repz
leave
pop
mov
paddsw
cmp
lret
aas
fcmovu
scas
jb
xor
and
lcall
or
cwtl
jp
jp
shll
dec
add
sub
sbb
xchg
imul
and
jmp
fidivs
sbbl
lea
movsb
dec
stos
ret
gs
xchg
mov
xchg
fldt
fists
pop
aas
stos
insb
in
xchg
sbb
jg
push
cmp
push
stos
push
cli
pop
push
mov
insl
invd
sti
sbb
loopne
push
mov
push
cltd
sbb
nop
pop
iret
out
test
in
or
dec
cld
leave
dec
ret
jnp
inc
inc
xor
jge
sub
into
add
bound
icebp
jb
jl
mov
sti
aaa
add
fs
xor
pop
pop
cmpsb
mov
cmpsl
jno
mov
sbb
add
repnz
cmp
xchg
lcall
or
push
ss
mov
or
add
mov
lods
daa
adcb
clc
bound
sub
rorl
push
std
pop
mov
push
xor
push
in
cmpsb
sahf
repz
jmp
add
pop
int
and
and
xchg
mulb
sbb
test
clc
inc
mov
push
shr
inc
cmp
andb
add
rcll
lods
add
mov
es
cmp
and
push
and
repnz
les
lods
and
das
sbb
sbb
inc
adc
push
lret
nop
jle
repz
ss
mov
inc
cmp
mov
movsl
adc
inc
out
sbb
out
xchg
repnz
and
cmp
jae
inc
push
ficompl
add
mov
hlt
popa
ficoms
inc
pop
xchg
cmp
outsb
xchg
or
insl
scas
test
jge
pop
outsb
stos
sbb
arpl
xchg
mov
lock
pop
rcrl
xorl
leave
fisubl
and
and
dec
mov
jecxz
fistpll
xchg
cmp
push
cltd
dec
mov
adc
pop
fldt
testb
fs
in
sahf
ret
mov
pop
test
jbe
sti
adc
call
scas
mov
ds
subl
xchg
pop
xor
mov
inc
popa
push
movsb
mov
mov
in
cmc
xorb
xor
out
das
pop
insb
int
jo
mov
sub
xor
and
xorb
jp
test
test
icebp
pop
and
fmull
inc
mov
xchg
cmc
dec
xor
pop
mov
aad
push
mov
cmp
push
cmpsb
mov
insl
movsb
xorb
ss
loop
je
dec
xor
inc
iret
push
mov
jno
xor
enterw
add
stos
push
sti
xor
xor
jge
xchg
and
mov
xchg
shl
xchg
pushf
jno
mov
cmp
pop
in
push
mov
sbb
test
push
test
scas
sbb
pop
sub
sub
aaa
inc
push
fwait
cmp
jnp
shlb
and
in
mov
paddsb
mov
scas
mov
lret
stos
cld
jns
push
mov
or
inc
xorl
xor
lea
paddsb
cwtl
fwait
push
cmp
insb
jns
cli
mov
xor
shlb
inc
adc
scas
outsl
or
shlb
pop
mull
sbb
sub
mov
lea
pop
sbb
push
adc
adc
xlat
movsb
or
testl
xchg
xor
stos
scas
or
jb
mov
and
xchg
mov
sbb
cmp
cmpsb
sbb
dec
mov
in
inc
or
fnstsw
push
fimuls
inc
and
xchg
jbe
js
push
outsb
fisttps
mov
icebp
or
xchg
and
decb
push
idivb
cmp
imul
mov
iret
loope
stos
ror
cli
dec
rcl
jnp
or
push
mov
roll
popa
jo
mov
push
adc
loop
hlt
add
fld
push
cmp
sar
sbb
dec
fimull
dec
sub
scas
jb
cs
test
jb
insl
rcrl
cmpb
jns
cmc
addr16
out
xchg
mov
pop
inc
out
sub
xor
pop
idivl
lcall
loope
sbb
out
cmp
or
cmpsb
rcrl
cmp
and
enter
lods
xchg
pop
ret
outsl
jle
mov
lods
ret
add
adc
aaa
lahf
pop
insb
xor
out
push
push
mov
punpcklwd
lret
mov
imul
mov
arpl
mov
in
jg
movsl
andb
ds
inc
shrl
adc
cmp
mov
add
rcrb
dec
jecxz
shrl
stos
inc
pop
int3
jns
out
bound
subl
jg
xor
mov
movl
fstpl
fnstenv
xchg
leave
scas
and
fisubs
dec
xchg
dec
mov
adc
lahf
mov
dec
and
mov
sub
jb
push
sub
nop
popa
mov
cmpsl
scas
jge
and
test
cmp
and
xchg
lcall
or
mov
lahf
xor
push
mov
dec
mov
enter
push
mov
fistpll
stos
fucomip
xor
inc
dec
pop
inc
mov
cmovno
fnstsw
cmp
mov
lods
dec
lahf
xor
rcl
xchg
test
sub
mov
and
mov
push
mov
sti
xchg
pop
add
es
xlat
mov
cmp
dec
into
ss
mov
sub
mov
pop
inc
inc
xchg
fwait
inc
inc
mov
popf
xor
das
outsb
add
adc
push
gs
adc
or
shll
pop
out
insb
dec
mov
sbb
push
inc
jle
sbb
cmpsb
loop
pushf
dec
aas
xchg
add
mov
cmp
inc
rorl
pushf
sarl
jae
cmp
mov
mov
loopne
aam
testb
pop
icebp
clc
lock
dec
adc
fisubs
rol
test
ss
not
inc
add
fwait
xor
cwtl
mov
push
and
data16
stos
pop
jp
and
push
inc
int
fwait
mov
and
pusha
stos
cltd
xchg
stos
int3
pop
pop
and
adc
xor
leave
les
outsl
fstps
jae
dec
sbb
jle
inc
and
mov
loopne
push
sbb
subl
scas
mov
xchg
sub
aad
lea
mov
add
adc
pop
dec
sub
sbb
andl
mov
inc
sbb
sti
jne
fdivrl
add
xchg
fs
cmp
arpl
lret
call
xor
out
js
mov
dec
shlb
out
lret
or
fdivrl
scas
xor
jo
test
repnz
or
xchg
jg
imul
or
adc
add
aad
jb
dec
sbb
int3
filds
scas
popa
pop
cmpsb
sub
lcall
mov
mov
ljmp
push
insb
mov
out
jmp
push
ljmp
cmp
cmpsb
mov
lods
dec
mov
push
dec
les
notb
fsub
adc
rcl
loopne
in
cmp
adc
dec
pop
add
ret
fs
push
dec
sti
jp
xchg
push
and
xchg
ljmp
ror
sbb
xchg
notb
faddl
pop
pusha
imul
inc
flds
pop
adc
in
or
xchg
mov
cmc
in
cwtl
push
ss
lock
mov
push
aam
cmp
stos
test
rcrl
adc
xor
fisubl
into
pop
pop
and
add
dec
ja
jnp
cmp
movsl
ja
push
sbb
iret
cmpsb
icebp
jnp
cmc
daa
cmp
cmp
lock
xor
or
addr16
mov
mov
imul
xor
dec
mov
pop
popa
cmp
pop
cmpsl
arpl
cmpsl
push
pop
push
or
adc
inc
pop
dec
mov
fsubs
mov
jne
xchg
dec
mov
sbb
ret
in
stc
adc
jl
test
mov
pop
push
roll
aas
xchg
in
out
icebp
sbb
stos
pushw
lock
xor
pop
or
push
dec
aas
es
inc
sub
fldenv
add
arpl
xchg
int3
inc
fs
jbe
sub
inc
pop
push
add
xchg
hlt
adc
xor
mov
push
aaa
fcoml
sarb
iret
xchg
repnz
stos
lahf
dec
sub
mov
adc
incb
or
loope
sti
pushf
cld
inc
stc
insb
jo
mov
inc
inc
cltd
adc
movsl
fsubrs
jno
lods
cmpsl
cmp
arpl
mov
mov
test
sub
sub
dec
or
shl
enter
movsl
mov
iret
int3
inc
push
mov
daa
mov
mov
lret
xor
icebp
sti
xorb
out
jl
xor
sbb
fisubrl
add
jbe
xchg
cmp
ljmp
jmp
sti
data16
idivb
xor
sti
sub
loopne
xchg
xchg
adc
sub
test
lods
xchg
sub
adc
pop
inc
icebp
xor
test
jne
idivb
insl
cmp
stc
xchg
repnz
in
movsb
pop
cmp
cwtl
loopne
arpl
call
loop
insb
jp,pt
cmpsl
add
and
scas
lcall
or
xchg
pop
ds
fidivl
xor
cwtl
push
mov
scas
jg
fs
in
jle
dec
push
in
pop
test
and
push
adc
rolb
aas
dec
or
loopne
jl
or
mov
fildll
iret
rcrl
into
int3
sbb
mov
das
and
je
mov
lock
lds
int3
repnz
adc
popa
lret
addr16
bound
push
push
addr16
add
scas
jae
xchg
dec
sbb
lds
cli
loope
mov
jbe
into
mov
xor
jae
out
out
pop
jb
ljmp
xor
xchg
or
jbe
xor
dec
push
jae
lods
in
imul
fcoms
jmp
gs
lods
add
push
mov
movsl
js
mov
jb
ficomps
add
enter
push
sub
pop
sub
push
mov
mov
ja
xchg
les
stos
addb
push
cmp
pop
jge
aaa
mov
xor
inc
sahf
inc
xor
call
fcomps
pop
int
sbb
fists
arpl
sub
jne
push
aam
rcrb
pop
cs
frstor
test
and
int3
les
pop
dec
es
add
cmpsl
cmp
sbb
push
in
ret
cmp
in
xor
mov
inc
addr16
mov
jbe
inc
and
sahf
mov
stc
jne
test
add
sbb
ljmp
sub
jecxz
mov
lea
mov
push
jno
das
lods
push
cmpsl
ds
rcrl
incl
xchg
daa
xchg
test
mov
push
or
lods
jmp
add
addr16
xor
xlat
repz
xchg
ret
jl
imul
rclb
mov
push
sbb
ret
aaa
push
mov
cltd
pushf
subb
push
xchg
mov
xor
xor
sbb
ds
fstpt
mov
pushf
les
andb
push
and
mov
sub
je
call
popf
jmp
ljmp
data16
inc
out
xchg
push
stc
sub
inc
mov
dec
cmpsl
dec
inc
inc
mov
mov
sti
sbb
popf
push
icebp
jecxz
mov
popf
lret
inc
xor
ja
xchg
sbb
xor
das
push
mov
xor
pop
jbe
pushf
lahf
pop
xchg
mov
pop
cmpsb
cmp
sub
jns
jmp
pop
cltd
xor
and
lret
and
push
or
xchg
mov
mov
dec
add
add
fldenv
cltd
test
fs
ljmp
dec
pop
xchg
daa
dec
lods
xchg
nop
fwait
mov
mov
mov
jae
mov
jae
push
jmp
leave
clc
ffreep
repz
addl
stos
pop
sbb
mov
inc
pop
jg
mov
arpl
and
mov
push
fs
adc
loop
imul
outsb
cltd
xchg
fstpl
inc
add
dec
ret
mov
je
mov
and
rcrl
sar
mov
sbb
cmpl
xchg
xchg
pusha
jp
rcrl
sub
ja
bound
mov
mov
rcll
loop
loopne
mov
cs
lea
xor
xchg
repnz
cwtl
jecxz
lcall
fdivs
add
adc
aaa
jl
xchg
push
mov
and
or
pushf
dec
mov
test
test
jge
rorb
add
ret
inc
push
imul
lea
mov
cli
xchg
xchg
subl
addr16
xchg
inc
xchg
icebp
jae
lds
inc
lcall
and
pop
rol
aam
hlt
out
sti
xchg
sub
adc
adc
pop
lods
fisubrs
das
cmp
mov
mov
cmp
jl
cmp
decb
jns
hlt
push
jne
scas
mov
mov
stos
test
mov
push
xlat
mov
cmpsb
push
lods
and
pop
dec
xchg
jb
xchg
xor
jbe
shrb
mov
jecxz
fnstsw
pop
mov
rcl
fs
andnps
out
cmp
dec
in
cmp
jecxz
pushf
mov
push
popa
out
hlt
jbe
dec
mov
xchg
push
mov
or
cmc
sub
or
mov
jle
and
adc
xchg
adc
stc
cs
cs
push
ljmp
mov
leave
fisubl
bound
gs
pop
clc
mov
popa
sar
sub
jb
jmp
xchg
cmp
adc
je
int3
mov
adc
jmp
sbb
std
mov
adc
jbe
pop
dec
xchg
lret
ss
rclb
clc
cmc
out
icebp
jge
and
out
jle
test
fsub
mov
dec
and
push
jae
outsl
fwait
mov
insb
cmpsb
rorb
ds
imul
jl
test
xor
cs
add
inc
insl
mov
test
in
xchg
andl
cli
xchg
and
xor
and
test
adc
addb
jmp
xchg
lcall
les
inc
jnp
sub
test
insb
out
es
mov
pcmpeqw
mov
pop
into
stos
pushf
pop
xchg
andb
ds
gs
jge
pop
fcompl
jne
pop
xor
pop
jmp
outsb
xchg
xor
dec
mov
int
icebp
pop
mov
jo
push
xchg
xor
bound
push
loop
and
mov
cwtl
xchg
inc
jnp
jns
sbb
jle
jmp
out
sbb
stos
ret
insb
in
mov
dec
xor
fs
pop
jmp
loope
aas
mov
icebp
test
lret
stos
in
test
inc
jmp
jge
int3
cmpsl
popa
hlt
mov
cltd
xchg
push
lret
xor
add
into
xlat
mov
add
dec
push
pop
jmp
push
jecxz
and
cs
push
js
mov
mov
sbb
int
sti
pop
rolb
or
jle
pushf
mov
sbb
mov
stc
and
dec
mov
int
adc
js
jge
dec
mov
or
mov
dec
jecxz
lods
cs
in
testl
inc
cmpsl
or
mov
mov
loop
mov
mov
mov
leave
incl
jo
add
lret
jl
pop
int3
cmp
push
add
dec
pop
add
dec
push
cmpsl
dec
xchg
sbb
add
or
test
out
js
cltd
fwait
sahf
inc
imulb
pop
es
test
outsl
insl
mov
or
int
add
and
xchg
das
add
test
mov
ss
ja
out
outsl
ds
aaa
jg
fdivrp
testb
or
lock
mov
dec
xchg
imul
and
mov
dec
or
sbbb
cwtl
pop
xchg
sub
aad
dec
xorb
sub
loop
xchg
cmp
mov
loopne
adc
xchg
sub
mov
xor
cltd
rolb
sbb
pop
in
pop
or
jno
mov
out
shll
pop
fistps
sub
je
xchg
xlat
dec
sbb
out
cmc
andb
mov
sbb
mov
or
pushf
arpl
xor
or
movsb
sub
and
mov
in
out
jge
jl
icebp
sub
jne
inc
mov
mov
in
int
daa
shll
push
cwtl
ret
enter
lret
xchg
cmp
addr16
lods
out
shrb
leave
inc
mov
jnp
sbb
aas
insl
jecxz
adc
inc
or
push
pop
imul
pop
es
sbb
hlt
loopne
or
sub
or
in
rcrl
into
sub
daa
cmc
pop
pop
stc
stos
jge
iret
movsb
mov
and
inc
pop
jnp
movsb
repnz
jns
mov
int3
outsb
fdivl
cmp
and
aaa
xchg
loopne
mov
or
rorb
jmp
outsb
cmp
addb
je
push
nop
push
push
rcrb
and
aam
sbb
les
lcall
cmp
fwait
ljmp
shll
sbb
sub
sahf
inc
int3
ret
loopne
in
mov
xchg
xor
ficompl
inc
dec
cli
fdivrl
pop
cmp
mov
and
imul
mov
dec
div
xchg
ret
es
or
pop
or
mov
xor
inc
push
mov
mov
incl
movsb
lods
inc
and
iret
push
push
push
cmp
xlat
push
lods
xchg
test
add
mov
lods
xchg
ret
push
shlb
dec
movsb
leave
pop
ljmp
rclb
daa
mov
in
bnd
cwtl
pop
push
inc
xor
lcall
data16
stos
lods
jbe
popa
subb
stc
mov
rcr
imul
fstps
out
int3
sti
push
mov
ds
into
xchg
adc
ret
mov
and
cmp
ds
add
icebp
mov
sbb
cmpsb
imulb
push
cmp
push
psubsb
dec
adc
inc
mov
add
xchg
push
adc
je
add
push
dec
mov
jge
adc
fstl
add
cld
mov
outsl
loopne
xchg
sbb
mov
xchg
lods
in
loop
sti
repz
cmc
es
sarb
jp
call
fwait
pop
xchg
loop
inc
jge
add
or
test
pop
mov
lock
nop
adc
adc
sbb
xchg
shl
mov
or
es
pop
lret
inc
test
adc
int
rclb
mov
xor
sbb
push
or
xchg
cmc
pop
xlat
sti
rcr
pop
fsubrl
cmp
pop
fwait
xchg
popa
dec
in
xor
mov
and
sarb
and
popf
sbb
jne
mov
insl
or
sbb
popf
push
push
mov
test
push
ficomps
and
mov
incb
push
outsb
pop
in
mov
sbb
mov
mov
inc
or
cmpsb
dec
movsb
cmpsb
mov
fs
xchg
lcall
dec
shlb
sub
and
adc
inc
imul
dec
mov
cmp
dec
jle
imul
subl
addb
mov
fs
arpl
push
dec
dec
push
sub
aam
inc
aaa
mov
arpl
sub
cmc
in
js
les
mov
daa
inc
mov
shrb
test
push
mov
pop
gs
inc
xchg
lcall
xor
adc
xor
ljmp
push
es
mov
push
jmp
es
int
dec
and
addr16
adc
orb
outsl
jecxz
xor
dec
fs
jae
mov
mov
adc
jmp
jmp
arpl
fnstcw
sub
pop
jne
inc
mov
mov
xor
jecxz
fsubrs
stos
sub
lods
pop
pop
cld
adcl
xchg
in
movsl
popa
sub
imul
mov
clc
scas
cmovl
sub
cld
iret
sarb
fnstenv
les
inc
repnz
mov
xchg
add
cmpsb
mov
dec
mov
in
push
xor
adc
push
jge
pop
aaa
cmp
fidivrs
out
inc
stc
bound
cmp
loop
lods
jle
jb
jae
lret
fdivr
xor
adc
movsl
adc
fs
pushf
lods
dec
les
mov
xchg
mov
sub
push
add
in
and
mov
mov
scas
fisubrl
dec
mov
jbe
push
pop
out
lret
arpl
mov
leave
dec
xlat
fisubl
jmp
mov
mov
psubsb
jmp
mov
xlat
adc
push
loopne
xor
aas
cmc
roll
neg
xchg
dec
das
cmpsl
rcl
out
lahf
rolb
jb
es
sub
arpl
insb
adc
adc
mov
pop
inc
push
mov
inc
lret
mov
sti
dec
stc
jge
xchg
xchg
ds
push
jno
gs
add
push
sbb
mov
imul
mov
push
lcall
repz
dec
popa
lods
pop
pop
sub
mov
xchg
adc
cmp
leave
jns
loop
addr16
imul
or
or
xchg
imul
adc
fdivl
xchg
push
and
outsl
inc
jmp
push
mov
stos
xchg
repz
hlt
cmp
call
mov
mov
stos
xor
add
aam
or
dec
xchg
mov
pop
sbb
mov
mov
xchg
add
sub
fisubl
pop
jb
cmpb
dec
inc
cmp
mov
cs
shl
cmp
mov
xchg
xchg
out
loop
inc
inc
inc
fisubrs
xchg
xor
or
cmp
or
in
push
xchg
cmpsb
aas
js
xchg
into
mov
xchg
push
shll
shlb
mov
stc
movsl
arpl
add
mov
adc
int
in
les
push
mov
xchg
xor
ja
lret
mov
lea
mov
stos
jl
les
cmp
fistl
pusha
or
arpl
movl
xor
int3
xchg
aas
in
idiv
xadd
cmpsl
mov
dec
call
fcoms
sbb
in
mov
fildl
into
into
inc
iret
scas
xor
push
imul
sahf
int
roll
ret
fbstp
out
mov
or
inc
jno
inc
sbb
jg
mov
cmc
test
shll
cmp
mov
xlat
bound
test
cmp
orb
push
mov
adc
xchg
aam
stos
lea
xlat
push
aas
fdiv
int
inc
add
jo
fnsave
jp
in
mov
inc
mov
mov
ds
fisubrs
push
xchg
xor
adc
mov
push
jno
outsl
xchg
int3
and
pusha
xor
and
inc
jl
rorb
push
mov
push
push
cmp
rorb
sub
sbb
out
add
xchg
hlt
mov
jp
pop
inc
inc
jl
xor
or
fnstcw
movsl
movsb
or
dec
rcrl
imulb
xor
jg
sbb
pop
and
xor
sbb
pop
sti
repnz
mov
stos
mov
sti
adc
sbb
push
xor
jmp
call
cld
ss
and
arpl
out
call
add
movsb
repz
pop
mov
arpl
insl
pop
push
pop
fisttpl
out
adc
dec
sub
sbb
jmp
aad
daa
repz
fisubs
pop
aaa
inc
lods
adc
in
fwait
xchg
out
sbb
movsl
jno
mov
in
xor
push
mov
shrb
out
dec
or
fisttpll
pop
sbb
fcomps
mov
repnz
scas
call
sub
int
clc
mov
mov
call
pop
mov
ret
xor
sbb
push
js
and
cmp
popf
add
movsb
mov
ds
xchg
lret
dec
ficompl
addr16
arpl
adc
insb
js
inc
rclb
in
stos
inc
mov
mov
mov
lret
mov
jle
movsb
or
es
stos
pop
leave
lea
mov
push
stc
out
jno
test
jno
xchg
mov
mov
sub
pusha
outsl
cmp
popf
loop
dec
pop
jmp
mov
dec
pusha
pusha
scas
mov
repnz
ljmp
dec
bound
and
loope
sub
popf
xor
movsb
push
add
inc
mov
add
mov
inc
sub
push
nop
adc
bound
aad
das
cmpsb
cmp
clc
mov
adc
cld
fstps
imul
outsl
pop
pop
movsl
jnp
jp
aad
jle
pushf
fldl
mov
or
fldt
mov
cmp
sub
push
push
scas
ret
jmp
add
ljmp
cmc
dec
mov
cmp
in
call
rcl
adc
sbb
stc
lds
dec
cltd
or
push
mov
fdiv
lcall
add
jo
out
cli
jp
sbb
fdiv
or
clc
dec
jno
cli
repnz
fs
pop
loopne
add
xchg
add
lods
sbb
arpl
pop
mov
outsb
shr
mov
loopne
push
push
sar
movsb
ret
mov
and
mov
jbe
or
clc
out
pop
dec
sarl
mov
scas
xchg
ja
push
sarb
enter
insb
das
jle
adc
pop
outsl
cmp
outsb
jecxz
je
int
add
jmp
xchg
dec
shl
iret
and
lret
xchg
or
or
sbb
sahf
add
popa
test
mov
jecxz
mov
test
jae
outsl
sub
sahf
sub
inc
jae
filds
pop
xor
xchg
arpl
cltd
lds
dec
jo
cmpsb
ret
dec
push
repnz
or
stc
inc
jne
push
xchg
xchg
sbb
cltd
jl
mov
inc
pop
mov
aad
stc
jnp
stos
test
lsl
sub
adc
cs
subl
out
dec
fs
xorl
out
sbb
dec
std
stc
and
dec
es
dec
dec
push
pusha
push
inc
sub
or
or
or
mov
pop
and
mull
aam
out
faddp
jbe
adc
jl
vpmaddwd
sub
mov
test
mov
push
popa
jl
mov
xchg
or
in
add
mov
fimull
clc
dec
or
pop
push
imull
lret
mov
mov
call
dec
dec
mov
iret
mov
push
xor
mov
je
out
std
push
lods
cli
mov
adc
movsb
and
inc
fistpll
add
inc
push
cwtl
popf
cld
loopne
add
or
pop
xchg
rcll
mov
movsl
test
xchg
in
sub
sbb
inc
lret
mov
push
xor
and
js
jae
xor
jl
pop
sub
sub
nop
push
ret
hlt
adc
mov
mov
cmp
and
sbb
enter
jnp
pop
xor
jno
add
mov
out
xchg
aaa
fnstenv
in
sbb
adc
fadds
das
push
aam
mov
pop
or
dec
inc
push
gs
shrb
xor
add
dec
push
push
es
enter
push
jno
rol
aaa
pop
mov
dec
inc
xchg
inc
aas
jge
int3
sub
loope
cld
xor
cli
xor
adc
or
int3
push
adc
pop
rorl
loope
sbb
sub
jl
test
out
and
ja
orb
and
xchg
or
cwtl
or
jl
lods
ficompl
and
lock
movsl
dec
xchg
xor
jg
fistl
in
adc
jmp
push
cld
xchg
call
xor
xorb
popa
imul
icebp
ljmp
scas
fucomip
lret
data16
sbb
loopne
sbb
lods
rcrb
inc
push
and
dec
aam
jecxz
mov
out
pushf
std
in
mov
inc
testl
sbb
mov
and
andl
lret
dec
adc
mov
adc
call
in
or
push
lods
sub
in
outsb
jb
add
mov
dec
in
sub
mov
mov
push
mov
cmp
cmp
js
ss
movsb
push
push
lods
lods
cs
xchg
fisttpl
jle
lret
adc
cltd
lock
test
mov
jne
adc
sarb
cwtl
addl
adc
fstps
insb
lret
mov
or
movsl
sbb
xadd
mov
xor
das
add
je
pushf
sbb
je
aam
push
daa
mov
fs
inc
rcrl
jnp
xor
dec
cmp
js
sbb
fs
add
scas
test
jmp
mov
adcb
add
les
orb
imul
call
nop
insl
mov
push
and
dec
sahf
gs
inc
aam
fsts
ret
sub
divl
dec
lcall
je
outsl
or
mov
ljmp
mov
lcall
and
push
aaa
push
scas
dec
mov
and
pop
popf
lds
jno
fcomip
and
scas
adc
mov
dec
negl
repnz
out
aad
lds
je
in
xor
cmp
lcall
adc
mov
push
int3
mov
fs
mov
lret
shl
cmp
mov
mov
mov
jge
mulb
int
in
sti
sub
pop
jle
pop
xchg
call
movsl
popf
add
sbb
push
push
dec
call
pushf
push
loop
in
stos
xchg
jge
jle
pop
repnz
xchg
mov
or
jnp
dec
sbb
xchg
ja
fldcw
cmp
mov
or
outsl
jno
js
test
movl
and
fisttps
out
jb
loopne
mov
mov
ret
dec
or
scas
cmp
mov
jecxz
in
fcmovbe
cltd
les
das
out
daa
rcr
mov
enter
xchg
test
jns
mov
cmpsl
pop
nop
gs
mov
lret
lcall
jle
int
xchg
fisttpll
jge
dec
mov
jae
mov
popa
int3
rcl
sub
inc
pushf
and
jb
test
pop
inc
movsb
cmpsb
add
sub
js
je
add
xor
int
out
inc
mov
xor
adc
sbbl
pop
add
rcr
cmp
aad
in
dec
movsb
hlt
std
mov
js
sub
pop
je
inc
daa
rcll
xlat
pop
imul
xor
mov
adc
dec
scas
pushl
out
cmc
xchg
and
cmpsb
and
stc
mov
jbe
jg
mov
fildll
pushf
pop
pop
jb
sub
fstpl
or
pop
addl
sbbl
cmp
xchg
mov
mov
inc
xor
icebp
js
fcmove
fiaddl
divb
frstor
outsl
inc
lret
push
jne
mov
xor
sub
loop
and
cmp
imul
lcall
mov
daa
adc
ljmp
daa
dec
sti
jne
inc
mov
mov
xchg
sub
addr16
cltd
jns
or
pop
clc
ljmp
and
hlt
jp
sub
mov
add
mov
pop
sub
jg
lods
mov
pop
sub
arpl
mov
ss
inc
cmpsl
arpl
flds
sub
inc
add
out
inc
enter
and
mov
repnz
lock
sbb
insb
or
in
imul
test
adc
xor
and
sbb
test
sub
sar
and
push
jns
add
mov
dec
xchg
mov
fs
jp
shrl
rcr
push
sar
dec
stos
bswap
adc
dec
incb
clc
cmp
pop
aaa
cmpsl
xchg
fwait
scas
push
xorb
test
loopne
cmp
loop
insl
outsb
push
fcmovne
dec
adc
push
pop
jns
sbb
push
pop
mov
and
sbb
xchg
test
xchg
xchg
dec
ljmp
icebp
xlat
ret
std
loop
mov
fldenv
add
pop
cmpsb
ljmp
stc
dec
mov
mov
imul
mov
rol
inc
xlat
push
mov
add
dec
sar
stc
sbb
jecxz
aam
mov
out
cli
in
shrl
mov
pop
in
rcrb
xchg
ss
pop
pop
adc
aaa
jnp
pop
inc
in
loope
jmp
xor
adc
mov
lock
jo
call
cmpb
outsb
sbb
test
aad
lods
sarl
inc
and
cmp
xor
xchg
sub
mov
rcrb
cmp
dec
ret
jmp
push
es
jno
cmc
mov
jae
aaa
add
repnz
loop,pt
imul
xor
inc
mov
xchg
add
fs
ret
insl
cvtps2pi
xor
int
daa
or
popf
or
xchg
ds
repnz
mov
pusha
inc
out
xor
mov
xor
jns
in
aas
cwtl
adc
jne
stc
jne
sbb
enter
push
xchg
pop
xchg
into
pop
leave
sub
cwtl
insl
sti
aaa
imul
dec
ja
call
repz
int
imul
xchg
inc
hlt
out
cs
lea
loopne
movsl
mov
lahf
sub
and
push
xchg
mov
std
xchg
add
mov
mov
sub
sbb
sub
repnz
arpl
rcrl
push
mov
ret
lret
and
daa
sbb
cmp
add
aas
push
imul
test
sysret
gs
xor
mov
scas
test
lods
test
adc
jmp
mov
push
popa
out
popl
xor
push
jecxz
filds
cmpsb
mov
xchg
mov
jge
xor
jmp
loope
xchg
jmp
mov
lret
ffreep
jno
lea
aaa
dec
jno
nop
ficoms
pop
js
iret
hlt
xchg
inc
dec
push
lock
dec
movsb
pushf
cwtl
stos
sti
mov
outsl
xor
xchg
punpckhwd
outsb
daa
hlt
or
lods
cmpb
bound
in
andl
push
xchg
or
cmpl
ja
in
out
sub
aad
push
sub
adc
push
rorl
jo
cld
add
dec
lret
mov
xor
inc
scas
out
pop
scas
lods
cltd
jp
ret
in
int3
dec
cmp
shll
and
pop
sbb
jle
stos
xor
mov
jmp
test
xchg
sbb
test
arpl
dec
movsb
jge
sbb
and
sbb
xchg
pop
or
inc
gs
mov
add
mov
mov
hlt
mov
fldt
jg
xchg
push
notb
addr16
mov
xchg
and
mov
mov
dec
hlt
cmp
out
imull
gs
push
inc
scas
mov
mov
sbb
mov
or
das
xchg
inc
and
inc
sbb
pushf
test
xchg
clc
outsl
mov
dec
jl
jnp
dec
jmp
cmc
add
ret
add
push
aad
sbb
mov
push
shlb
adc
outsb
adc
lods
cmc
movsb
xlat
rolb
sub
sub
sub
out
aam
rorl
jnp
pop
dec
jp
add
je
paddd
mov
adc
xchg
add
jbe
aas
cmp
xlat
and
stos
inc
out
clc
lahf
sbb
out
scas
or
leave
pushf
adc
lock
lock
dec
and
pop
fdivrs
and
push
mov
push
jne
ljmp
xor
in
fcmovu
xor
jae
cld
push
sbb
in
jne
movswl
into
or
push
jge
push
pop
das
ss
mov
das
mov
repnz
xchg
fsubrp
jne
mov
call
std
movsl
xchg
adc
ret
jg
pop
and
push
cmp
inc
lea
lods
mov
and
rcll
lods
pop
sti
nop
mov
das
jmp
cmp
incb
push
push
push
das
xor
out
inc
xchg
test
cmpsb
es
insl
shrl
push
pop
pop
sub
mov
jecxz
lret
xchg
out
hlt
push
cli
add
push
xor
cmp
cmc
add
jae
mov
jo
iret
loop
scas
popf
shr
sarl
pop
pop
mov
lea
sahf
mov
mov
sbb
test
loop
push
xchg
xchg
dec
mov
lds
lock
mov
sbb
icebp
movsl
jmp
mov
push
push
mov
mov
out
shr
data16
dec
xor
jg
sahf
mov
dec
mov
je
xchg
sarl
jecxz
pop
popf
and
cmp
inc
xchg
mov
stos
fstpl
pop
xchg
or
and
add
mov
movsl
adc
shl
addl
sub
in
jle
sub
cld
mov
xchg
icebp
dec
inc
lcall
ret
add
sub
fcoml
jbe
aas
mov
into
sahf
bound
mov
add
fdivs
lds
aam
stos
inc
push
ret
sti
insl
in
movsb
inc
or
cmp
bound
jno
mov
leave
jno
into
dec
mov
idivb
push
and
bswap
stos
je
cli
pushf
xchg
les
addr16
sbb
jge
es
jmp
ss
xchg
and
push
xor
dec
add
out
stos
cld
inc
inc
push
repnz
mov
xor
mov
inc
jp
in
sarb
or
dec
lds
lcall
xchg
js
inc
sub
dec
mov
pop
scas
jge
ret
jno
adc
cmpsl
mov
stos
push
add
faddp
cmp
push
lahf
adc
pop
dec
aaa
gs
arpl
int3
add
sbb
adc
fimull
es
cmp
mov
mov
sub
mov
sub
pop
adc
stos
inc
xchg
aad
sub
fisubl
cli
push
ficoms
xchg
lods
cwtl
imull
shll
pop
mov
ret
inc
push
dec
testl
jp
lcall
pop
es
mov
mov
leave
or
push
lret
mov
pop
js
lds
jbe
jne
out
mov
shll
ror
sub
lock
sbb
pushw
push
sbb
mov
mov
inc
mov
dec
or
enter
cmp
out
add
test
leave
adc
inc
cltd
pop
and
dec
roll
push
or
inc
test
in
ljmp
inc
cmpsb
mov
shll
or
pop
lcall
aam
mov
lods
lods
out
add
cmpsl
jbe
test
push
int3
and
in
or
insb
lds
arpl
cmp
fstl
es
xor
fcompl
sbb
int
sub
stc
loop
mov
sbb
ss
leave
push
push
xchg
mov
imul
add
cmpsl
inc
pop
jno
pushf
sbb
pop
xchg
ficoml
lret
outsb
hlt
bound
dec
push
ffreep
inc
insl
pop
loope
int
rcrb
and
and
lds
pushf
lock
in
test
mov
mov
into
pop
jmp
and
dec
mov
mov
rorb
mov
jl
int3
sarb
lcall
je
sbb
xchg
inc
inc
mov
cli
pop
push
add
call
cmp
push
pop
push
inc
dec
adc
divl
lret
inc
mov
insb
call
daa
cmp
adc
pusha
jo
push
xor
sbb
je
mull
pop
pop
sbb
outsb
shll
mov
or
mov
sub
inc
fs
cmp
mov
pop
mov
pop
add
jp
pop
out
aas
fisubs
scas
out
pop
sbb
rorb
xor
cmp
inc
inc
leave
fbstp
push
adc
fisubl
and
dec
add
pop
jne
and
dec
xchg
cmp
test
inc
loopne
fsubl
ss
rcrb
mov
jecxz
outsl
pop
mov
shlb
mov
xor
sbbl
jns
inc
inc
adc
jg
inc
inc
js
xor
xor
loop
inc
inc
jne
das
lea
adc
scas
cmpb
mov
les
sbb
ss
add
xor
mov
pop
push
mov
leave
inc
adc
pop
sahf
not
shll
xchg
lds
or
or
and
stos
ret
loope
inc
sbb
cmp
pop
pop
shlb
push
mov
cltd
xchg
or
scas
iret
xchg
in
xlat
les
or
mov
push
inc
insb
mov
mov
inc
push
adc
das
in
in
jns
adc
int3
inc
ss
xchg
loopne
movsb
cli
jno
ret
lds
push
out
xchg
test
sub
dec
cmp
cmp
xchg
in
adc
lock
adc
or
inc
rcrl
insl
pop
mov
pop
in
sub
shll
int
xchg
pusha
idiv
adc
shr
enter
int3
loopne
xchg
or
or
xchg
dec
leave
scas
pop
mov
fmuls
jmp
loope
fldt
ss
cmp
jge
or
arpl
add
mov
inc
cltd
repz
movsb
jbe
mov
cmpl
cmp
jnp
jge
jle
in
leave
inc
shrl
imul
shrl
add
imul
xchg
lods
and
sbb
xchg
das
xchg
xor
out
inc
test
cmp
pop
add
testb
jl
fcmovnb
and
add
cs
lods
dec
div
xchg
orb
in
imul
push
cmpps
popf
stc
mov
and
cmp
add
pop
xchg
jmp
or
inc
pushf
mov
sbb
std
mov
xchg
jns
add
shlb
inc
in
fmuls
cmpsb
dec
or
stc
outsl
out
dec
or
pop
mov
inc
addr16
add
test
mov
enter
scas
mov
jp
icebp
jbe
sarb
push
fs
cmp
dec
fnstsw
dec
dec
loopne
cmpsl
call
in
jle
mov
xor
ret
fs
pop
cmpl
push
add
sahf
or
cmp
add
aaa
mov
or
xchg
inc
push
xchg
cmpsl
repnz
mov
lahf
mov
push
test
jl
mov
int
cli
xor
cmc
sbb
pop
or
stos
lret
jmp
add
jg
dec
xchg
fiadds
inc
bnd
idivl
aas
dec
popa
xchg
test
pop
mov
cmpb
dec
repz
xchg
mov
mov
scas
cld
or
lds
int
push
jmp
mov
add
fnstcw
popf
jnp
xlat
imul
iret
dec
std
arpl
inc
sub
or
mov
pop
repz
int3
add
inc
sub
push
or
and
in
loopne
js
test
mov
and
outsl
pop
cli
stos
pop
rcrb
xchg
out
in
fistpl
stc
sub
mov
mov
inc
mov
push
mov
xor
dec
cmpsb
mov
in
fs
bound
add
dec
std
mov
sbb
push
cmp
cmp
xchg
movsl
jge
iret
sbb
divb
jnp
aas
or
mov
sub
popa
jno
mov
xchg
orb
mov
ret
push
sahf
pop
pop
mov
fisttps
stc
and
cltd
cmc
jne
shll
pop
xlat
in
in
and
mov
pop
lods
leave
push
pop
addr16
repnz
jnp
lahf
add
mov
sbb
adc
mov
outsb
xor
out
mov
adc
fildll
aas
dec
pusha
mov
sbb
mov
dec
mov
sub
fbld
inc
mov
cltd
inc
cli
jae
mov
test
popf
mov
adc
push
mov
jnp
lds
sub
inc
sbb
ficoms
dec
inc
sub
inc
out
cmpsb
jae
icebp
cmc
push
inc
sub
mov
lret
fdivrl
dec
loop
aaa
cmp
movsb
in
mov
data16
cmp
mov
mov
push
sub
test
inc
pop
mov
jge
stos
mov
jno
push
and
pop
les
fidivrs
adc
add
nop
int3
cmp
mov
hlt
jl
jecxz
sti
in
add
xor
add
sbb
push
shl
cli
frstor
inc
xor
and
inc
pop
mov
ja
cmp
mov
pop
mov
iret
mov
jae
movsb
and
xchg
sub
xchg
cli
icebp
loope
ljmp
push
incb
jecxz
xor
xchg
cmp
sub
dec
push
adc
sbb
xchg
mov
fistpll
clc
ret
and
jecxz
xchg
push
jecxz
mov
mov
sub
mov
rcr
and
mov
roll
push
in
in
loop
sub
mov
ljmp
pop
movsb
lahf
scas
dec
sub
jl
xchg
or
stc
cltd
adc
lret
out
cmpsl
and
push
inc
dec
stos
jmp
test
add
or
out
lret
push
test
scas
jg
or
cltd
subl
push
jnp
mov
xor
insl
add
out
ret
lods
loop
dec
add
aas
mov
xchg
call
movd
aas
push
push
pop
add
add
shlb
jge
adc
cli
mov
and
push
add
xlat
mov
pusha
xchg
mov
sub
sub
add
mov
pop
int3
cmpsl
sub
and
movsb
sub
notl
shl
ror
movsl
cwtl
pop
xor
idivl
into
xchg
loop
sbb
fs
xchg
mov
and
mov
xchg
outsl
jne
add
and
mov
int3
push
add
push
adc
iret
xor
cwtl
push
or
push
add
mov
push
mov
jmp
cmp
pop
lods
or
in
xor
push
ljmp
inc
xchg
xchg
cmc
push
jg
scas
int3
dec
ds
cmp
mov
insb
pop
mov
lret
movsb
clc
rorl
insb
shlb
mov
insb
dec
pop
or
mov
outsb
push
or
push
rolb
cwtl
decl
imul
pop
hlt
and
mov
loope
jne
jno
fcompl
cld
jmp
andb
sub
xchg
leave
push
int3
mov
adc
push
push
cmpb
seta
imul
jno
push
test
out
and
gs
sbb
lock
jecxz
or
hlt
pop
mov
xlat
mov
push
dec
les
repnz
clc
xor
insb
mov
shl
sbb
xchg
xor
addb
in
cmp
push
xchg
fadd
and
aam
into
cmpsl
ja
add
sub
add
mov
in
push
mov
dec
mov
std
movsb
popa
or
mov
popa
pushf
pop
adc
xchg
xor
mov
jp
push
mov
rcrw
dec
mov
jl
push
mov
les
mov
push
add
scas
incb
push
pop
leave
sbb
mov
pop
and
aad
decl
pop
adc
aam
or
inc
lahf
and
xchg
sub
sbb
push
cwtl
or
sub
fsubl
mov
mov
mov
loope
loop
arpl
daa
scas
inc
ljmp
cli
xor
mov
dec
mov
push
lods
pop
divb
pop
pusha
xor
in
jg
xor
push
std
dec
cmp
xor
sub
nop
shr
shr
xor
mov
test
roll
lahf
jnp
push
or
push
jp
int3
sahf
stos
jge
push
filds
pop
cli
lcall
outsl
add
outsl
int3
push
mov
mov
sub
or
das
sub
mov
mov
insl
shll
dec
in
mov
xchg
bound
cmp
cmp
nop
je
cld
mov
xchg
mov
scas
xor
pop
mov
dec
jp
shll
mov
cmp
or
cli
mov
das
sub
adc
ja
xlat
outsl
cmc
sbbl
ljmp
cmp
popa
pushf
pop
sahf
lods
or
adc
pop
stos
rcrb
xchg
ret
in
xchg
jb
loope
idivb
call
pop
out
sub
add
add
jae
mov
jo
push
mov
push
or
jnp,pt
sub
call
cli
mov
pop
ror
je
mov
fisubs
pop
ja
adcb
push
add
ljmp
add
jecxz
fildl
add
cli
hlt
shlb
add
dec
lret
clc
movsb
add
xlat
sub
cmp
sub
push
popa
ljmp
push
incb
and
or
sahf
shlb
xchg
xor
rcrl
aam
jne
and
jmp
loopne
daa
bswap
xchg
xor
jb
lods
cmp
xchg
mov
mov
lcall
bt
jae
xor
and
pop
mov
sti
fwait
push
aas
or
jb
pop
sbb
aam
jecxz
shll
fisttps
pop
mov
cmp
sarb
sbb
hlt
add
add
loop
and
aaa
call
dec
inc
cmp
outsl
or
pop
mov
int
mov
scas
aas
and
hlt
pop
int3
aaa
jns
rclb
xchg
jnp
out
push
inc
ljmp
std
cmpsl
cld
mov
arpl
repz
jge
dec
jp
jge
jbe
push
mov
das
add
fcmovnbe
rcrb
or
pop
test
call
xlat
mov
daa
sub
jp
jae
sub
jp
dec
jge
daa
sbb
rclb
repz
fidivs
cmc
shll
imul
adc
or
scas
stos
insl
dec
fisubrl
mov
mov
popf
dec
and
cmp
lea
mov
dec
fsubrl
and
dec
rcrb
dec
adc
test
adc
mov
mov
push
out
fisubs
popf
mov
pop
aam
cs
fldenv
push
inc
pop
shl
pop
cmp
inc
in
xor
push
int3
or
or
popf
xlat
mov
jmp
xor
jge
das
idivl
or
int
shll
pop
mov
lcall
and
inc
jmp
or
into
stos
ja
xchg
nop
pop
xchg
in
pop
daa
out
push
test
xor
mov
or
lds
jno
mov
pop
cmp
aaa
mov
jl
or
xor
sbb
push
push
and
lds
repz
pop
jb
xchg
adc
test
scas
ret
andl
mov
addr16
test
into
addr16
out
push
push
xchg
fists
sbb
cs
call
inc
lea
orb
adc
push
jo
sub
hlt
xchg
inc
dec
xchg
or
adc
imul
leave
int
push
test
clc
add
icebp
jmp
leave
or
sub
sbb
dec
shlb
repz
arpl
push
ja
inc
push
inc
adc
mov
lcall
addr16
and
jne
out
cmp
in
mov
adc
adc
fdivrs
sbb
add
out
fs
or
lds
mov
nop
add
mov
push
mov
adc
inc
es
stos
adcb
push
ss
or
mov
fisttpll
cwtl
lret
xchg
jl
das
sub
or
pop
sahf
sbb
movsl
mov
jecxz
mov
cs
fwait
lea
mov
addr16
sub
lods
jne
clc
lea
adc
movsb
les
sti
mov
in
fwait
test
lds
roll
mov
test
out
leave
and
jge
lcall
dec
mov
mov
clc
add
daa
adc
test
out
mov
ret
iret
in
sti
cli
cmc
dec
push
push
das
les
add
adc
mov
test
ret
lock
pop
push
test
xchg
xchg
add
mov
rcll
es
pop
mov
lock
jno
adc
mov
lods
fimuls
andl
lds
and
scas
mov
lret
lret
lods
lret
push
and
popf
jp
xchg
or
out
mov
in
in
repnz
shrb
cmpsb
or
repnz
mov
clc
push
arpl
je
loop
pop
mov
insl
pushf
xchg
scas
clc
arpl
xchg
sbb
or
ja
mov
cbtw
imul
pop
jmp
dec
test
ret
jae
je
ret
cwtl
ja
inc
dec
out
xor
pop
mov
sub
nop
daa
pop
mov
sbb
pop
pop
dec
hlt
adc
je
xor
jmp
xor
add
push
dec
mov
and
ret
xlat
vhsubps
fidivl
xchg
in
adc
ja
cmp
ss
xor
or
insb
inc
ss
pushf
mov
jg
mov
leave
hlt
dec
jnp
nop
sub
jne
xchg
xor
lea
adcb
rol
cmp
scas
cmp
cwtl
and
sub
aas
stc
aam
ds
sub
das
or
ss
es
stc
in
out
jne
push
push
gs
xor
cmp
je
ds
orl
jo
ret
dec
add
test
lahf
or
jp
mov
scas
jb
aad
xchg
loope
mov
push
mov
mov
shlb
xor
jle
jae
into
xchg
lcall
fdivrs
inc
es
cmp
out
and
mov
bound
xor
inc
push
lcall
inc
push
iret
adc
das
imul
aam
mov
das
and
or
sub
sub
mov
mov
gs
xor
cli
data16
jne
repnz
stos
rorb
in
ss
add
inc
dec
in
imul
aas
pop
and
ss
pop
outsl
add
jne
xchg
std
xor
mov
cwtl
test
fisubrl
mov
inc
sbb
inc
add
rcll
adc
jp
icebp
rcrl
xor
data16
shll
or
push
mov
and
adc
pop
fstl
add
dec
int3
aad
pushf
or
cld
pop
push
sub
enter
sbb
xchg
or
loopne
pop
jg
je
frstor
pop
cmp
ror
pop
mov
das
add
out
and
ret
lahf
fsubl
cmpsl
ror
fsub
imul
popf
mov
jae
cmp
sbb
lods
cmp
js
dec
getsec
aas
jnp
clc
dec
fsubl
pop
das
sbb
sbb
test
scas
mov
into
push
js
ljmp
xor
int3
in
out
stos
push
mov
adc
sbb
scas
mov
fists
sbb
mov
inc
mov
insl
rclb
mov
ljmp
pop
hlt
rep
cmp
aas
out
sub
cwtl
jmp
jmp
push
inc
jae
inc
mov
xor
iret
test
xor
pop
add
idivb
dec
call
xchg
pop
dec
shll
ss
add
out
sub
test
fnstenv
in
mov
mov
movsl
pop
adc
ja
xor
insl
mov
inc
mov
or
into
sbb
call
shrb
movsl
inc
mov
cmp
push
lock
test
dec
imul
sub
xchg
jmp
pop
inc
cmp
aad
ds
jmp
mov
gs
loope
xchg
sub
add
mov
into
push
sarl
sbb
movsl
jp
ret
fsub
mov
cli
pop
jb
shll
sahf
in
cs
mov
mov
popa
dec
inc
addr16
ficoml
mov
sub
mov
shrb
push
add
movsb
add
add
cmpsl
mov
nop
js
push
fists
in
lods
mov
dec
insb
dec
stc
fsub
pusha
inc
sub
int
dec
cli
pmuludq
xchg
xor
in
push
in
popa
mov
or
lcall
jns,pn
shlb
sti
pop
adc
outsl
xchg
fs
sbb
rcr
jne
xor
mov
aaa
fsts
pop
imul
stc
add
pusha
pop
imul
or
ds
adc
sarb
push
ja
add
daa
inc
mov
dec
or
cmp
cmc
pop
stos
test
stc
add
push
push
into
cwtl
or
scas
outsb
inc
dec
or
mov
imul
shll
fisttps
adcl
mov
dec
mov
xchg
pop
insb
jge
shr
mov
ljmp
push
and
xchg
push
jg
dec
mov
ss
jbe
add
in
lcall
sub
mov
lcall
pop
je
loopne
fucomip
aam
ss
sub
xchg
cmc
aas
les
and
push
dec
pop
dec
jl
daa
sahf
inc
push
push
fimuls
or
and
inc
loope
push
cmp
push
loope
push
lock
lret
xlat
test
inc
or
gs
mov
inc
test
ss
dec
mov
out
iret
mov
mov
cltd
pop
and
cmc
clc
fdivs
pop
adc
dec
xor
inc
leave
jnp
jnp
add
aam
sub
out
repz
add
push
out
aad
jecxz
aas
and
out
shrb
xlat
xchg
jl
enter
cltd
dec
in
clc
enter
out
gs
gs
aas
gs
sbb
in
into
pop
fists
loope
or
stos
dec
xor
je
xor
xor
push
lea
fdivrl
lods
xchg
fnstenv
sub
push
jl
sbb
jmp
sub
ljmp
cld
push
clc
sbb
rorb
stos
dec
pop
ljmp
mov
push
xor
add
mov
mov
pcmpgtb
mov
rolb
sbb
outsl
cmp
test
fwait
pushf
ss
mov
ljmp
lahf
stos
jl
push
adc
inc
jbe
cmp
imul
adc
jmp
aam
shlb
mov
loop
inc
loope
lods
testl
xor
adc
pop
fidivrl
test
xchg
xchg
mov
wbinvd
inc
inc
fs
inc
inc
xchg
pop
mov
sbb
xacquire
imul
lock
sbb
imul
jne
test
inc
loop
cmc
rcrb
push
es
push
and
imul
sbb
insb
enter
fsubrs
mov
mov
in
sti
mov
ljmp
fwait
jo
push
jne
ljmp
xchg
test
dec
mov
in
cmp
je
dec
lahf
aaa
sbb
pop
push
xor
or
cmp
pop
or
mov
jo
xor
imul
and
lahf
xor
xor
movsb
mov
push
popf
sub
or
pop
mov
dec
rorl
cmp
xchg
sub
and
outsb
sti
fistpll
int
sbb
int3
xchg
lods
jg
jl
push
adcb
and
pop
stc
pusha
loopne
cmp
clc
loopne
in
addb
mov
in
fdivrs
pushf
add
mov
in
fdivrs
pop
push
jbe
mov
mov
rolb
ljmp
cwtl
xorb
loopne
pop
lds
aam
pop
call
cmp
inc
sub
inc
jmp
push
push
pop
out
ds
mov
stos
xor
ficomps
sub
jnp
rcrl
pop
cwtl
fsubl
xor
fadds
ljmp
fidivl
xchg
sbb
adc
cs
push
loop
adc
and
xchg
out
in
pop
loop
mov
mov
xorb
pop
sub
es
mov
incb
dec
hlt
aam
imul
out
cmp
lret
cmpsb
mov
sbb
ljmp
js
dec
inc
mov
inc
push
lcall
out
nop
shl
mov
fildll
jmp
lds
and
into
in
cwtl
xchg
pop
aam
cmp
mov
push
in
lds
cltd
sti
ret
adc
jo
cmc
roll
add
stos
pop
fsts
imul
jae
ss
xor
jo
js
int
dec
xchg
cmp
push
into
outsb
in
cmp
in
sar
mov
cmpb
xchg
fmulp
xchg
xchg
push
xchg
push
sbb
inc
or
pop
call
cli
lods
aam
in
mov
insl
push
enter
or
or
pop
jne
dec
lret
xor
movsl
sub
jge
jnp,pn
jle
loopne
loope
shr
call
sbb
movsl
movsb
daa
aaa
sbb
dec
aad
and
ret
in
or
mov
nop
sub
or
mov
push
stos
aam
sub
hlt
scas
stc
inc
xchg
psllq
shlb
lret
cmpsl
add
xchg
clc
ljmp
cmpb
mov
and
cmp
imul
sbbb
shrl
add
xor
lods
mov
cmpb
lods
inc
mov
rcrl
push
fisubs
out
nop
cmp
dec
jmp
pop
pusha
fsubr
jp
out
push
inc
nop
lret
out
mov
movsb
mov
mov
addr16
dec
ret
sbb
lret
mov
pop
add
mov
xor
jl
mov
aad
xchg
mov
xchg
outsb
and
rclb
sahf
sbb
aam
popf
notb
sbb
mov
mull
test
push
mov
je
data16
loop,pn
xchg
jns
and
cld
adc
push
adc
lods
lret
movsb
dec
xchg
add
loop
sbb
mov
scas
f2xm1
sbb
sarl
fcmovnu
or
das
mov
aam
xchg
or
or
cs
jp
inc
fstpl
mov
sub
mov
pop
sbbl
int3
sub
dec
or
lods
inc
push
das
adc
jns
int3
aas
jo
ds
xor
xor
divl
out
pop
bnd
or
or
cmp
jmp
popf
aaa
outsl
sahf
inc
gs
push
cmp
pop
lret
cmp
outsl
add
out
ds
sbb
cmc
ljmp
mov
or
jle
fnsave
or
lods
popa
and
jecxz
mov
roll
fwait
lret
je
add
or
adcb
push
out
push
cwtl
pusha
mov
sbb
pusha
popa
cmp
stos
dec
mov
test
ficoml
and
leave
add
pop
push
repz
xchg
aam
xor
sbbl
xchg
pop
inc
flds
daa
subl
shlb
and
ret
dec
xchg
mov
enter
scas
out
mov
jl
pop
dec
aam
imul
dec
sbb
or
flds
cmpsl
div
push
addl
popf
xchg
int
subl
adc
in
sbb
dec
xchg
bound
nop
jnp
mov
and
adcb
sub
inc
jnp
mov
shl
push
mov
sbb
fisttpl
js
dec
stos
add
cld
aas
pop
xor
cmp
dec
rcll
jle
test
mov
adc
ss
and
jg
out
mov
pop
mov
mov
mov
pop
jo
inc
xchg
mov
pop
xor
mov
mov
clc
cmpsl
push
daa
mov
jmp
sub
fwait
addr16
cmp
sub
je
adc
sub
ds
dec
mov
ficoml
mov
leave
jl
out
adc
or
mov
mov
loope
in
int3
iret
adc
imul
push
std
dec
call
loop
fists
dec
dec
xchg
inc
and
fisttpl
dec
jb
jo
packsswb
mov
push
out
clc
repz
xor
movsl
fnstcw
lahf
mov
cs
loope
or
fisttpl
ret
jge
jae
js
or
addl
popa
icebp
mov
mov
arpl
add
test
idivl
in
pop
adc
add
fwait
inc
lahf
mov
aas
test
int3
loopne
inc
notl
push
fsubrl
xchg
push
jo
mov
cs
fcomps
sbb
mov
bound
cmp
mov
ljmp
dec
mov
sbb
bound
ret
pop
fimuls
mov
in
andb
cwtl
ljmp
xchg
hlt
cwtl
mov
and
jae
imul
and
hlt
add
mov
pop
push
jmp
cmpsl
mov
mov
xorb
imul
cmp
xchg
mov
pop
sbb
add
test
jg
and
mov
or
aam
mov
push
pop
imull
movsb
icebp
fdiv
xor
adc
lahf
sahf
sahf
push
xchg
fists
icebp
leave
jmp
stc
or
inc
jbe
les
nop
xchg
outsl
inc
stos
out
fistpll
repnz
inc
xchg
aad
add
scas
leave
daa
lahf
stc
mov
sbb
hlt
push
mov
pusha
sub
mov
add
js
enter
jge
sub
mov
push
jecxz
cmp
movsl
ja
mov
add
xor
dec
negb
pusha
add
jbe
push
out
xchg
adc
stc
mov
cmp
stos
mov
ds
sub
pusha
divl
lret
nop
or
inc
lcall
push
dec
mov
and
push
adcl
popa
out
faddl
nop
sub
insl
sahf
add
lds
or
inc
les
mov
push
add
popf
cwtl
outsb
mov
js
movsb
loop
rcr
lretw
lret
add
fsubl
jecxz
dec
clc
adc
push
mov
test
adc
sbb
imul
xor
outsb
hlt
pop
dec
push
sub
lds
addb
dec
inc
add
notl
sti
push
cmp
cmpxchg
sub
mov
das
sbb
jbe
popa
mov
lods
adc
pop
fistpl
sub
test
hlt
mov
pop
push
imul
sbb
mov
dec
popf
cmp
lfs
sarl
sti
lcall
add
sti
pushf
cmp
out
and
cmp
mov
cmc
dec
js
movsb
andb
pop
cli
cmp
fdivp
filds
inc
adc
xchg
insl
cmp
pop
lahf
xor
inc
pop
xlat
insb
pop
inc
adc
push
stos
add
inc
mov
cmp
scas
aas
leave
sub
dec
lahf
jmp
mov
aam
push
mov
or
test
mov
dec
pop
iret
push
jl
mov
and
sbb
or
out
leave
mov
jmp
out
cmp
test
aad
rorb
stc
or
fsubs
aas
test
add
push
movb
repz
jnp
ret
loope
jmp
lahf
ljmp
xchg
xor
daa
sarl
js
push
add
int3
iret
in
pop
iret
test
mov
sbb
stos
pop
fs
inc
rcrl
es
push
imul
xchg
or
adc
out
jb
movd
and
jecxz
fists
and
inc
imul
sarl
xchg
cmp
ret
fwait
shll
push
cld
ds
xchg
fcmovnb
pushf
push
shrl
negb
cmc
mov
repnz
out
inc
cmp
xchg
test
test
notb
mov
cs
mov
mov
dec
test
dec
outsl
dec
test
mov
nop
popf
sbb
sub
sub
lcall
xchg
sbb
mov
inc
xor
xchg
xchg
add
sub
mov
pop
cmp
mov
mov
xor
or
or
addr16
dec
xchg
mov
push
push
sbb
out
insl
popf
popa
es
inc
mov
sub
or
fisubrs
jl
cmp
mov
lcall
or
test
js
lcall
or
and
inc
fcomi
cmc
xlat
test
add
mov
scas
out
or
sbb
adc
rcrb
mov
mov
mull
aad
add
fwait
xchg
jle
daa
push
push
sub
lret
insl
stc
cmp
mov
ficomps
ds
movsl
mov
lods
mov
and
inc
jbe
pop
int
xchg
loop
mov
mov
lods
cmp
aad
std
pop
inc
lret
mov
cmpsb
cld
and
mov
push
xor
in
aas
push
fistps
rclb
or
sub
xor
cs
lret
jg
cmc
or
push
ret
insb
in
inc
inc
jmp
pushl
pop
cmpsl
cmp
xor
mov
and
fldenv
imul
popf
lcall
aad
pop
ror
incl
rclb
xor
es
inc
dec
jl
fstpl
imul
ss
adc
scas
xor
inc
or
pop
subb
adc
xor
js
mov
sar
rol
stos
sub
pop
sbb
cmp
bound
icebp
mov
and
sbb
sahf
in
and
mov
mov
dec
mov
dec
je
add
ja
iret
mov
cmp
ja
add
pop
adc
sbb
mov
insl
int
lock
cld
movsb
adc
arpl
jnp
jecxz
sbb
xor
lcall
jnp
lods
hlt
movsb
mov
xchg
push
pop
out
inc
nop
movsl
xchg
add
insl
mov
jmp
lods
inc
sarl
into
mov
hlt
cli
cmp
sub
imul
xor
inc
or
mov
nopl
xorb
scas
mov
jnp
scas
in
pop
jo
xor
popf
push
in
sbbb
sarb
ret
adc
daa
or
pop
es
pusha
jae
mov
sti
sbb
test
cmp
jg
push
ds
rorb
ret
outsb
repz
in
lods
mov
push
push
push
inc
dec
lods
hlt
in
lock
sub
sub
fisubrl
jg
xchg
stos
and
and
mov
sti
repz
lods
jae
shrb
adc
das
mov
insl
ret
lea
arpl
mov
stos
subl
push
mov
dec
aad
jne
mov
jle
push
leave
fs
add
imul
xor
sub
dec
test
imul
mov
ret
repz
out
rcrl
shlb
mov
ret
jns
fidivrl
lds
sbb
mov
push
push
lret
out
std
std
in
inc
mov
ret
xchg
sbb
add
mov
push
pop
jmp
push
mov
ds
inc
push
pop
adc
ret
ds
push
and
mov
inc
inc
pop
dec
push
in
addr16
int3
mov
mov
jp
in
cmp
out
fmul
outsl
pop
clc
mov
ds
mov
push
adc
aas
cmc
jmp
ljmp
mov
add
pop
movsb
xchg
jle
fldl
cmp
scas
jecxz
inc
or
test
xchg
aad
jmp
and
xor
popf
push
add
leave
cld
cmpsb
mov
out
ss
lock
cmp
imull
in
xchg
add
movsb
mulb
cmp
pushf
cmp
loop
jno
cmp
jp
cwtl
adc
out
xor
inc
cld
sbbl
sahf
sbb
popa
push
sub
mov
popf
xchg
push
mov
das
xor
test
add
test
jl
ret
inc
dec
push
or
xchg
mov
pop
ret
rol
rcrl
ret
int3
or
jg
fnstsw
stos
mov
sbb
ss
ja
hlt
xchg
cmovbe
xchg
cmpsb
daa
sub
push
jp
int3
or
xor
push
sarl
xchg
push
pop
jns
mov
adc
push
sbb
leave
add
push
sub
xchg
sbb
repz
add
mov
xchg
add
push
jne
pop
in
sahf
cld
stc
push
mov
sahf
std
ret
and
sahf
jle
clc
fwait
mov
push
test
gs
lea
aaa
test
scas
outsb
mov
mov
mov
insb
inc
mov
outsl
addr16
ljmp
jnp
jns
in
cs
adc
xchg
cmc
loope
ds
xor
rolb
pop
sti
mov
push
clc
bnd
inc
clc
fadds
add
adc
stos
push
shrl
xor
sahf
sub
xchg
jne
outsl
pop
bound
push
mov
jns
fsts
jb
fidivrl
mov
sub
jno
xchg
jne
cmp
jg
iret
hlt
xchg
jle
jo
xlat
mov
push
adc
push
cwtl
popf
movsb
xchg
sub
repnz
daa
ss
jne
icebp
ljmp
or
mov
xlat
mov
pop
rclb
cmpsl
cmp
clc
xor
outsb
out
mov
mov
fimuls
test
lcall
out
subl
out
in
adc
jecxz
dec
add
add
fsts
mov
pop
imul
fcomip
dec
adc
insb
mov
xor
pop
or
mov
lahf
mov
in
push
jle
cltd
xor
aad
jnp
push
sbb
icebp
add
popa
and
sub
jl
push
add
push
fadd
xchg
pop
jb
in
std
jp
aam
sarb
loopne
pop
ret
add
mov
ss
push
mov
rcrl
mov
xor
jbe
fdivs
dec
xchg
jg
inc
mov
ret
fcomip
xor
sub
jg
and
sub
inc
les
mov
xor
pop
lock
out
and
xchg
in
imul
dec
ret
push
test
cmpsl
test
pusha
jb
adc
mov
ret
sbb
xlat
imul
into
mov
inc
adc
sub
sub
and
movsb
sub
sahf
addl
jae
outsl
mov
insb
ljmp
vmwrite
or
pop
push
std
dec
push
or
jle
xorb
shl
push
xor
and
int
cmp
mov
dec
js
mov
loope
mov
pop
arpl
bts
jo
push
mov
pushf
mov
gs
into
rcrb
mov
in
sbb
cmc
dec
insb
ljmp
adc
jg
pop
out
dec
std
out
cmp
jnp
repnz
and
add
mov
stos
xchg
sub
inc
fwait
jno
lahf
push
sub
data16
sub
add
push
adc
sbb
out
ds
pusha
std
lahf
adcb
cltd
sbb
lcall
mov
cmp
xchg
xchg
scas
jge
hlt
pop
lds
jmp
mov
push
dec
scas
mov
push
ds
fsubl
daa
std
popf
pop
repz
ds
outsl
gs
shlb
test
mov
or
and
cltd
out
mov
pop
xchg
sti
sahf
clc
sub
std
mov
int3
cmp
pop
sbbl
jp
xchg
shll
popf
ljmp
roll
lods
in
xchg
cmp
or
cmp
xor
ret
es
and
aas
pop
add
aaa
repz
mov
push
push
leave
rol
call
notb
push
sub
sub
cli
movsb
sub
xor
mov
xchg
inc
jge
inc
adc
xor
outsb
lods
cmpsl
fs
addr16
aam
insb
jno
das
stos
testb
in
jo
js
scas
cs
subb
jns
jbe
or
sbb
inc
mov
aam
popl
test
cmp
jmp
in
jmp
rorb
mov
movsl
sbb
test
adc
movsb
in
inc
push
repz
push
mov
push
or
push
jge
addr16
xlat
sarb
xchg
in
lock
hlt
ret
mov
and
or
or
add
adc
pop
push
mov
outsb
sub
sbb
mov
and
stc
mov
aas
pop
xor
cmp
push
lret
cli
jmp
ljmp
sbb
xor
jae
push
fnsave
push
in
dec
mov
in
push
push
and
in
lcall
cmp
cmp
lcall
lret
push
xchg
and
fadd
dec
scas
cs
add
imul
rcrb
cmp
pop
add
inc
ror
push
jns,pt
cmc
or
inc
aaa
mov
dec
out
pop
mov
mov
lret
push
fidivrl
push
push
push
pop
jmp
in
jg
push
mov
pop
ja
add
push
mov
add
jb
jns
cli
sbb
cmp
xchg
aaa
scas
scas
xor
push
lea
aaa
cltd
sub
mov
add
push
dec
push
into
cmpsb
mov
std
and
xchg
popa
cmp
xchg
push
push
repz
std
das
mov
in
or
lret
lods
or
inc
fdivs
cltd
ljmp
or
fidivl
arpl
cmpsl
sbb
rcrb
sbb
add
fisubl
push
insl
rcr
lods
mov
mov
test
or
sbb
xor
in
outsl
enter
test
outsb
pop
fisubs
not
mov
loop
fs
in
in
in
push
mov
filds
addr16
pcmpgtb
test
lods
ret
jbe
subl
push
ljmp
shl
add
mov
aaa
xchg
iret
sub
adc
int
sbb
xchg
and
pop
sahf
insb
push
inc
cmpsb
or
xor
imul
add
mov
mov
mov
push
sbb
cmp
movb
jnp
push
dec
mov
jl
dec
shrl
insb
xlat
ja
inc
in
xchg
cld
or
jns
cwtl
adc
xchg
lret
pushf
dec
gs
ds
scas
negl
stos
lds
mov
rcrl
sub
imul
stos
int3
mov
sbb
or
rcrl
add
mov
inc
fbstp
mov
clc
mov
icebp
hlt
in
dec
jmp
es
dec
sbb
sbb
mov
popa
in
rorl
je
jmp
or
inc
aad
mov
adc
std
outsb
dec
add
sbb
push
popf
push
data16
pop
das
lret
aad
dec
addr16
pop
lcall
jbe
pop
in
cmp
and
pop
xchg
or
arpl
push
aaa
dec
in
dec
movsl
mov
lods
xor
mov
sub
cmp
jbe
add
in
xlat
mov
movsl
js
xchg
arpl
jo
bnd
and
add
lds
push
jecxz
inc
dec
bound
xor
in
popf
lock
in
pop
daa
int3
mov
loopne
inc
andl
adc
movsb
sbb
xorl
mov
add
or
daa
adc
cmp
test
je
cmc
pusha
sub
rorb
popa
and
and
popa
sbb
es
xor
cs
jge
dec
jl
loop
jno
mov
repz
pop
lcall
dec
ss
cwtl
test
adcb
nop
in
in
xchg
cmp
scas
add
adc
xor
ds
leave
aad
mov
sbb
lods
cld
inc
jg
mov
mov
adc
cmc
aad
into
mov
mov
imul
fcoml
xchg
mov
mov
scas
ljmp
inc
mov
lods
jns
mov
mov
outsl
mov
popf
cmp
hlt
inc
adc
pop
dec
jae
daa
xchg
icebp
test
out
sub
movsl
xor
pop
mov
jb
gs
mov
rolb
mov
js
mov
cmp
lret
xchg
dec
mov
aas
dec
out
or
add
cli
stos
sbb
inc
cmpsl
fsub
xchg
xchg
test
testb
flds
out
mov
popf
and
mov
inc
mov
mov
adc
aas
mov
push
pop
add
roll
sub
jne
sbb
movsb
fcos
xor
sub
mov
filds
repz
int3
fdivl
pushf
lcall
nop
mov
jne
flds
lds
jl
and
dec
mov
aam
and
and
inc
jbe
pop
mov
out
or
pushf
xchg
cltd
lock
lret
dec
aad
scas
mov
pushf
cmp
mov
aaa
std
testb
adc
cli
imul
adc
mov
bound
dec
push
mov
xchg
mov
cmp
adc
sbb
pop
call
popl
push
inc
cmp
xlat
xor
clc
out
ficoms
stos
cmp
std
lret
mov
mov
xor
or
shr
push
xchg
mov
sub
pusha
pop
add
xor
inc
clc
xchg
fbld
daa
out
add
add
xchg
sub
push
in
dec
shrl
add
mov
movsb
mov
pop
fistl
data16
fnstsw
mov
and
mov
xor
adcl
jp
inc
pop
int
fwait
xchg
inc
sbb
loopne
dec
sub
pop
and
xor
es
stos
aad
js
shll
mov
shlb
jb
stos
iret
sbb
xchg
je
dec
push
cwtl
sbb
cmpsl
push
les
jno
or
xlat
aas
and
sub
push
add
pusha
icebp
push
ja
test
pusha
adc
test
sbb
outsl
sbb
sti
repz
mov
xchg
daa
leave
pop
imul
out
lods
sahf
aas
jo
push
pop
adc
scas
xor
data16
inc
lea
flds
lahf
jbe
mov
in
rcrb
sbb
imul
popa
rorb
sub
mov
cmp
test
pop
lea
pop
adc
or
mov
iret
ret
xchg
xor
daa
pop
repz
ret
dec
test
movsb
ror
xchg
lods
adcl
push
pop
fstl
cwtl
or
icebp
jmp
mov
xchg
mov
lods
jmp
pusha
ljmp
and
xchg
test
and
addr16
sti
and
dec
dec
imul
into
call
xor
call
jo
add
les
movsl
fdivrs
push
and
das
sub
insl
mull
divb
pop
pop
cmp
movsb
mov
iret
pusha
mov
xor
or
mov
xchg
jg
or
out
and
pushf
xchg
stos
outsl
sbb
pushf
mov
dec
push
hlt
cli
aas
cmp
xor
dec
dec
xchg
popf
enter
jo
ds
xchg
ret
xorb
sub
fsubrs
xchg
fadd
xchg
rcll
jb
add
andl
inc
xchg
or
fwait
sbb
cmp
ret
sbb
or
jge
ret
push
imul
jb
mov
inc
mov
ss
out
nop
aaa
cmp
hlt
dec
adc
push
movl
cli
or
mov
pop
add
adc
adc
popf
cmovp
jne
dec
daa
sub
hlt
xchg
inc
fisttpl
mov
lods
int3
repz
pop
arpl
sti
dec
and
fdivrs
sbb
dec
sar
clc
push
xlat
lds
dec
lock
push
cmpsb
nop
aam
mov
fs
pop
mov
lret
cmp
push
mov
xchg
or
addr16
imul
mov
mov
inc
lret
dec
fstpt
mov
sub
lea
xchg
mov
jge
inc
sbb
sbb
adc
jp
ja
shrl
jg
fbld
add
lret
mov
sbb
int3
add
clc
std
sub
jmp
into
ret
push
xchg
push
cmp
xchg
sbb
pop
sarb
mov
dec
jl
sbb
sahf
push
push
imul
dec
arpl
int
js
add
shrl
lcall
sbb
stc
cmp
fld
fisubl
xchg
popa
cltd
lahf
xor
or
mov
sub
mov
cwtl
or
std
icebp
inc
scas
mov
add
cltd
push
cmp
xchg
repz
cli
and
adc
test
loope
sbb
push
addr16
pop
sub
int
es
dec
test
mov
push
xchg
or
int3
pop
mov
addr16
imul
adc
add
adc
aas
xchg
adc
mov
test
xchg
in
shll
xor
jno
fsubrl
lahf
arpl
loope
xor
mov
dec
inc
aam
and
and
jo
or
shl
std
ret
in
adc
arpl
loop
push
daa
mov
jle
xchg
stos
jnp
xlat
inc
lock
jno
mov
pop
or
stos
loopne
stos
sti
pop
mov
ss
decl
ljmp
push
icebp
inc
aas
scas
shl
test
and
push
mov
inc
shl
xor
int3
insb
cmp
rclb
pop
sub
xorl
sbb
popf
jno
sbb
mov
cli
decb
ret
imul
fsub
out
mov
dec
fcomps
cmp
jl
pushf
sbb
mov
sub
lret
sub
xchg
fnstcw
push
push
cs
push
mov
xchg
roll
hlt
outsb
cwtl
lahf
scas
jo
jp
mov
push
adc
int
out
adc
xchg
jmp
jae
cs
aad
test
lahf
push
inc
and
data16
into
add
sbb
jae
inc
inc
or
syscall
mov
xchg
loopne
mov
xchg
jge
in
hlt
fucomi
adc
addr16
out
xchg
pop
cmp
repnz
nop
push
push
out
js
push
rcrl
xor
mov
xchg
pop
stc
test
or
xchg
std
ret
lods
ljmp
popf
pop
jns
insb
mov
mov
sub
cli
and
and
jo
nop
pop
cli
into
mov
dec
pop
repz
xchg
push
mov
or
push
inc
mov
test
sti
in
stos
icebp
or
ss
iret
aad
imulb
outsb
je
mov
cmpb
shrl
loop
xchg
mov
mov
ss
cmp
or
scas
or
add
sti
je
mov
loop
adc
out
js
mov
xchg
pop
pmulhw
ror
sahf
icebp
mov
lea
bound
xor
xor
sbb
cmpsl
cmc
repnz
ret
jmp
mov
adc
adc
pop
sbb
jb
pop
repnz
popf
fidivrl
cmp
or
sbb
and
push
imull
mov
aaa
adc
jbe
aad
mov
jp
fs
adc
loopne
sbb
in
ret
lcall
pop
or
mov
lret
mov
icebp
rolb
enter
es
sti
in
mov
cmp
sbb
es
push
out
mov
cltd
mov
ljmp
cld
leave
dec
data16
repz
push
imul
lret
divl
add
push
pusha
or
ret
sub
sbb
stc
and
gs
cmp
sbb
movsl
push
jmp
cmp
lahf
mov
das
scas
cmpsb
cmp
cmp
lcall
cltd
shll
insl
lahf
iret
out
jp
insb
inc
push
and
pop
xor
cmp
into
push
mov
in
jne
jmp
sub
and
and
lods
je
sar
popf
jo
lods
inc
stos
setnp
dec
jnp
mov
xor
stc
sbb
je
sbb
js
jmp
inc
loop
sahf
cmp
push
cwtl
mov
stos
hlt
mov
cli
xlat
jl
scas
xor
sbb
repz
stos
add
push
sbb
mov
sbb
ficomps
test
jmp
jo
fidivs
sub
shrl
mov
in
pop
mov
stos
int
mov
movsb
sbb
cmpsb
out
in
cmp
cld
push
popf
cmp
outsl
adc
mov
into
xor
les
sarb
nopl
push
mov
inc
inc
cmp
add
mov
movsb
lcall
jmp
test
cld
hlt
add
inc
das
fmul
idivl
xor
lds
pop
fisubs
mov
mov
sub
and
fcmovnb
movb
sar
fdivs
rorl
or
cmpsb
pushf
mov
inc
shl
movhps
jg
mov
fwait
jle
popf
lea
int
call
pop
test
hlt
inc
sbb
aaa
scas
xchg
and
dec
loope
mov
pop
loope
int3
pop
loop
mov
sbb
ss
fs
cmpsb
mov
cli
and
inc
lahf
adcb
imulb
adc
stc
ret
fbstp
sbb
test
mov
ljmp
lahf
fstps
pop
enter
dec
xor
imul
pusha
dec
dec
fnsave
in
nop
loope
push
dec
mov
cmp
mov
jns
xor
add
iret
lret
mov
insl
jg
or
pusha
mov
push
popf
fsts
push
fiadds
add
cmp
dec
ficomps
std
ss
push
dec
adc
das
cld
in
mov
aam
cmpl
jp
add
cli
jnp
jno
call
push
sbb
dec
ja
cmp
xor
xchg
jmp
lds
filds
fmull
xor
cwtl
cld
call
sbb
mov
sar
dec
arpl
push
mov
ja
sbb
mov
cltd
shlb
xchg
lods
xchg
dec
cs
in
and
xchg
sbbl
and
repnz
mov
sub
outsl
ret
jl
rclb
movb
cmp
pop
lret
jl
movsb
cmp
loop
adc
push
mov
insb
je
xor
sarl
lock
dec
mov
xor
adcl
sub
into
push
jae
inc
loope
dec
add
aam
jb
popf
mov
ljmp
push
outsl
push
pop
std
jl
loopne
stos
ds
fists
mov
push
ljmp
js
int3
lea
xor
sbb
jnp
jl
rcr
leave
and
xchg
clc
push
adc
push
pop
pusha
std
jle
mov
lret
adc
adcb
jae
xor
cmc
inc
xchg
lret
mov
xor
add
bswap
pop
mov
iret
jge
popa
int3
into
inc
jb
hlt
pushf
add
mov
cmp
jbe
test
ret
mov
push
xchg
sub
push
pop
jge
ss
lds
sbb
adc
nop
aam
mov
or
mov
mov
cmpsb
movsb
shrb
mov
mov
bound
add
mov
cmp
lea
cmc
ret
movsb
add
push
or
jmp
fsts
jl
lock
xchg
push
inc
in
push
dec
dec
xor
nop
push
xor
sub
jns
adc
cmp
adc
in
mov
mov
adc
aam
add
pop
daa
fisttpll
dec
insl
jg
outsl
sarl
loop
gs
stc
push
pop
dec
xor
xlat
cmp
movsl
xlat
test
adc
sbb
fisttps
int3
push
xor
jmp
mov
scas
adcl
dec
pop
add
mov
rorl
and
enter
mov
mov
out
call
mov
hlt
cli
ja
sub
jl
add
jae
mov
in
ret
mov
mov
push
sub
es
aam
popf
je
cs
idiv
adc
lcall
test
cs
std
push
add
jb
pop
loop
mov
jno
jp
les
cmp
shl
mov
xchg
mov
lret
cmp
out
jg
enter
mov
jmp
mov
bound
lods
mov
lret
outsb
rcrl
test
fists
ficompl
adcl
lods
mov
and
sbb
pop
cmp
hlt
xchg
xor
xchg
sbb
mov
mov
or
jae
jge
jo
jmp
divl
cli
cmp
jmp
outsb
add
xchg
add
push
jb
clc
aas
loope
sbb
mov
xor
test
cmp
fisubl
cmpsl
inc
and
push
mulb
mov
inc
lods
inc
cmp
and
add
xor
or
bound
jns
inc
adc
lret
fs
sub
add
mov
mov
int3
mov
adc
mov
jg
lods
repnz
pop
pop
mov
es
xchg
popa
repz
jbe
mov
fsubrs
test
and
push
inc
call
pop
xchg
push
arpl
inc
aad
pop
pusha
cmp
mov
cmpl
jp
xor
adcb
pusha
lcall
jge
out
dec
sub
and
xlat
jnp
test
sub
ficoms
xchg
sbb
das
in
or
cmpsb
rcrb
data16
dec
sbb
add
pop
push
mov
dec
xor
push
gs
inc
loop
popa
cmpsl
mov
adc
dec
inc
mov
mov
lret
mov
fdivp
xchg
xor
cwtl
sahf
outsl
and
leavew
ljmp
idivl
sbb
or
inc
frstor
push
fldl
mov
jp
and
xchg
mov
fdivs
push
cmp
fdivp
xchg
fiadds
mov
adc
and
cs
clc
mov
adc
je
repz
ja
lock
sub
adc
sub
out
gs
int3
mov
ds
dec
test
dec
pop
push
inc
clc
dec
cltd
daa
jo
daa
pop
call
fadds
into
test
mov
addr16
push
push
push
mov
and
push
mov
push
test
enter
cmp
ret
pop
sbb
inc
jl
fcmovne
icebp
inc
adc
stos
les
imul
push
sbb
shrb
int3
ss
pop
es
xor
xchg
sbb
popa
aas
xchg
inc
hlt
mov
mov
push
aas
inc
shrb
mov
cmp
mov
cmpsb
inc
insl
mov
jno
jno
testl
scas
adc
jae
loop
sbb
cmp
mov
std
sbb
xchg
es
insb
jle
rcr
cli
mov
or
push
pop
lock
ja
arpl
fimull
push
jb
sbbb
pushf
or
push
lea
xlat
jmp
jge
fbld
imul
xchg
cmp
cmc
sub
insb
in
cmp
sub
inc
inc
pop
nop
and
mov
pushf
pop
xor
nop
cmpsb
cmp
stos
je
fldt
jbe
mov
scas
sbb
inc
xor
mov
fwait
dec
mov
add
aad
jno
jns
adc
xchg
sbb
mov
xchg
jge
arpl
mov
mov
mov
or
cmp
pop
adc
outsb
popa
sub
mulb
in
adc
pop
jne
loopne
pop
dec
or
popa
xchg
jbe
incl
ficoms
jbe
clc
mov
adc
add
fadd
inc
daa
in
pop
cmp
test
xor
adc
and
mov
mov
fistpl
aam
fs
lahf
or
int
lahf
add
adc
out
or
lods
hlt
mov
sbb
fstl
or
cmc
adc
call
in
pushf
dec
test
pop
jne
ja
das
aam
inc
adc
out
mov
mov
cs
pop
pop
fwait
pusha
sub
movsl
insl
pop
cli
mov
xlat
cmp
cmp
fidivrl
mov
fdivs
inc
lret
loop
mov
popa
popa
popf
jmp
mov
lret
mov
mov
movsb
stos
mov
mov
add
jne
and
hlt
das
dec
mov
movsl
insb
inc
arpl
xor
fldenv
cmp
out
enter
or
test
mov
dec
mov
out
adc
dec
pushf
ret
out
lds
jmp
ss
jmp
adc
test
jecxz
jno
adc
aad
mov
inc
insl
dec
jg
dec
daa
xor
out
push
fisubl
cmpsb
adc
das
xor
pop
add
sti
leave
jp
movsb
addb
cmp
push
jmp
mov
icebp
and
xor
arpl
cmp
aas
outsb
into
jne
sub
mov
fbld
icebp
mov
pop
leave
cmp
cli
addb
lret
or
mov
mov
mov
cmpsb
xor
into
inc
loop
sub
sbb
lds
nop
jp
fisubrs
in
cltd
pop
pop
ja
sbb
mov
mov
jp
cmp
cmc
cmp
mov
jge
mulb
movsl
addr16
sub
ljmp
jnp
or
dec
stos
jae
xor
fisttps
loopne
add
jg
pop
add
sarb
inc
mov
lcall
and
inc
pop
fnstcw
je
arpl
push
mov
fiadds
aaa
adc
out
cmp
out
jp
dec
sub
cltd
adc
mov
sub
sub
std
pop
cmp
add
lret
pop
imul
jne
scas
dec
aaa
inc
lock
imul
jg
mov
dec
in
insb
fistpll
pop
and
es
call
jo
das
enter
mov
inc
ss
imul
xchg
jno
adc
ds
fdivs
add
xor
fldl
and
jne
mov
or
std
fwait
mov
mov
bound
mov
pcmpgtd
bound
imul
out
cmpsb
inc
out
movsl
pop
or
sbb
fisttpll
and
jbe
arpl
sbb
cmpsl
and
psrlq
xor
pop
sub
test
inc
pushf
pushf
cmp
test
sbb
pusha
ds
or
cmp
cmp
xchg
mov
jl
xor
cltd
repnz
cmc
arpl
stc
loope
cld
xchg
mul
or
cmp
sbbl
outsl
adc
mov
fsts
sub
fcomps
scas
gs
addr16
jb
pop
cmp
jp
das
push
shrl
stc
mov
clc
push
pop
mov
shrb
mov
jle
stos
lea
cmp
imul
push
jle
push
cmp
xchg
jnp
les
cmp
mov
mul
mov
xor
sub
movsl
xchg
sbb
andb
jp
cwtl
clc
rclb
popf
jl
dec
lret
mov
jns
push
cltd
mov
shlw
mov
xchg
push
call
aas
out
je
and
rep
cmp
hlt
add
inc
pop
call
xor
mov
xchg
mov
ja
in
inc
outsl
mov
andl
lea
cwtl
pop
mov
fdiv
ret
movsb
out
push
aas
mov
outsb
push
push
adc
xadd
cmp
or
inc
ja
jp
pop
aaa
and
in
pop
or
xor
mov
fucomip
aam
out
mov
xor
dec
push
push
lock
xchg
or
mov
sbb
scas
mov
dec
adc
pop
icebp
add
std
std
sbb
jle
add
scas
repnz
negb
gs
ss
rolb
fcomps
push
adc
cltd
inc
lret
aad
scas
loop
lods
or
xlat
dec
sahf
enter
dec
dec
adc
out
adc
xchg
mov
jmp
mov
or
adcl
dec
ja
sbb
jl
out
xor
xor
ficomps
sub
push
inc
mov
and
mov
push
cwtl
imul
lcall
jne
mov
daa
loope
outsl
xchg
cmp
cmpsb
fidivl
and
push
sub
loop
jmp
nop
insl
xlat
push
movsb
mov
xchg
icebp
in
jb
fisubl
rorl
jmp
xchg
inc
addr16
cld
lds
mov
xchg
or
adc
mov
or
fs
mov
movsl
stos
stos
in
lea
push
rcrb
rcrl
mov
cmc
jne
and
outsb
or
dec
add
stos
pop
dec
or
aad
jae
or
clc
mov
jnp
sahf
xor
mov
push
or
mov
mov
adc
inc
sbb
in
jns
cmp
leave
sub
pop
arpl
pop
jecxz
aam
cmp
sub
imul
xor
das
les
js
adc
cltd
mov
js
dec
pop
test
fdivr
and
xchg
inc
mov
push
push
cmp
push
jecxz
mov
andl
testb
outsb
sub
in
push
jo
xchg
sub
cmp
test
cmp
xchg
int
sub
dec
jbe
sbb
sub
insl
push
cli
and
dec
sub
and
loop
xor
fdivs
scas
inc
mov
pop
pusha
pop
pop
mov
movb
rcrl
jle
or
mov
push
filds
pop
add
imul
cli
sub
cmpsb
mov
mov
or
fs
lods
loop
insb
jle
faddl
hlt
push
pop
xlat
jle
loope
mov
daa
mov
push
inc
mov
dec
mov
leave
out
inc
xchg
fst
imul
movsb
fwait
gs
jo
ret
ja
xchg
or
out
or
push
xchg
pushf
pop
scas
lea
pop
imul
out
jecxz
and
gs
lods
cmp
mov
sarb
out
mov
push
lret
repnz
mov
cmp
out
in
sarb
sbb
jg
adc
std
hlt
xor
fimull
mov
adc
jge
mov
sub
or
mov
or
inc
and
daa
lods
cmpsl
mov
fistpl
int3
into
imul
inc
lahf
jle
fs
xchg
aas
das
dec
xor
cld
dec
pop
pop
sti
sub
xchg
rcr
mov
push
aam
adc
loope,pt
push
push
mov
pop
outsb
cli
iret
mov
push
jle
push
pop
js
testb
push
push
scas
mov
fwait
cli
out
dec
xchg
push
pop
enter
stos
dec
dec
pop
daa
add
iret
jae
mov
je
scas
sar
notb
jg
int3
jp
cmpsb
pop
push
dec
add
xor
xlat
repnz
daa
je
test
loopne
or
and
sub
es
rorb
inc
adc
dec
aas
mov
add
popf
jae
std
and
enter
sbb
adc
adc
out
insb
sub
mov
popa
popl
imull
leave
pusha
mov
movsl
icebp
jl
jp
cltd
movsb
cmpsl
outsb
sub
xlat
leave
adc
loop
stc
pop
jmp
arpl
inc
aaa
add
xchg
sbb
mov
orl
mov
push
cmpb
adc
sbb
sub
mov
mov
inc
addr16
ds
inc
xchg
push
shrl
pop
inc
pop
push
mov
and
es
push
push
xor
movsb
mov
loope
push
sbb
adc
sarb
push
orb
lahf
insl
test
js
jge
imul
xchg
xchg
out
decl
push
mov
pop
mov
push
lret
mov
fstl
outsb
std
sbb
les
nop
pusha
cmp
addr16
cs
daa
xchg
in
jb
pop
cmp
fiadds
jno
jecxz
insb
pop
push
das
sbb
clc
add
or
into
dec
fistpll
jne
fdivrs
scas
lea
aam
push
movsb
or
lcall
daa
aam
cmpsb
mov
cmpsb
scas
leave
fsubl
sbb
out
pop
sub
mov
jle
sti
lods
insb
arpl
push
lcall
sbb
lcall
mov
iret
and
loop
add
sbb
xchg
and
cld
pusha
idivl
pushf
pusha
mov
dec
test
xor
fstp
xchg
test
and
adc
pop
movsl
inc
cli
add
je
cwtl
lods
pop
adc
mov
add
mov
cmp
add
push
jmp
push
adc
jns
push
push
adc
mov
push
mov
sbb
inc
fnstenv
es
jl
wbinvd
jb
xchg
subb
andb
ss
fcoml
je
and
push
lahf
mov
cmp
icebp
sahf
add
out
inc
pop
inc
adc
mov
push
loope
mov
fldl
fnstsw
adc
xlat
in
cli
insb
cmpsb
sub
out
mov
inc
enter
pop
addr16
fs
sub
dec
into
call
ljmp
lcall
mov
mov
aas
popa
mov
inc
enter
es
fwait
std
fdivr
daa
mov
push
sbb
repnz
dec
incb
pushl
xchg
fsub
insb
pop
fwait
xor
mov
or
add
mov
decl
jnp
adc
mov
arpl
test
mov
cmp
pop
pause
dec
or
sahf
sbb
adc
mov
dec
inc
and
cmpsl
dec
lods
mov
rclb
inc
or
add
test
pop
data16
pop
adc
sub
push
addr16
add
jecxz
xchg
ja
sub
aam
xchg
loopne
dec
insl
jno
outsl
cld
xor
inc
lret
bound
gs
shl
and
inc
add
fstpt
sbb
cmpl
cwtl
aas
roll
arpl
cs
leave
adc
imul
ja
or
lods
inc
ja
or
mov
fisttpl
outsl
gs
fdivs
cmpsb
sub
pop
inc
dec
sbb
mov
xor
dec
push
xor
lret
fdivrs
mov
repz
xchg
xchg
jo
inc
jae
sub
dec
or
int3
adcl
cli
ja
sub
add
subb
movsb
cld
push
gs
into
pop
or
jl
das
sbb
pusha
dec
pushf
lcall
cwtl
pushf
pop
mov
notl
sbb
jg
sbb
sub
mov
jge
push
pop
sub
jge
xor
outsl
inc
rcll
or
call
push
je
out
push
pusha
add
imul
cmpsl
xor
xchg
or
fmull
or
jg
dec
sbbb
sub
push
into
sub
jae
adc
orb
je
cmp
addr16
sub
lcall
movsb
xchg
cmp
dec
test
inc
mov
sbb
inc
sar
aas
lcall
std
dec
fwait
test
cld
enter
lret
imul
mov
jb
mov
inc
inc
push
cmp
lods
lahf
cmc
into
push
mov
outsb
inc
mov
movsb
xchg
sar
dec
loopne
lret
nop
nop
stos
dec
jl
jae
nop
mulb
pusha
pop
sbb
adc
sbbl
sbbb
fsubp
and
in
jmp
pop
push
xor
xchg
mov
lret
in
pop
aad
push
subb
fistl
add
mov
insb
insl
iret
mov
and
arpl
test
pop
rcrb
jmp
ror
filds
out
or
shll
imul
movsl
scas
insl
popa
push
je
loop
or
leave
xchg
xchg
cmp
stc
popf
mov
loopne
outsl
jae
or
mov
int
jo
mov
mov
mov
inc
fsubrl
shrl
mov
pop
inc
ret
mov
je
mov
outsl
jnp
jmp
fdivrs
lcall
fcmovnb
pusha
mov
rorl
push
fwait
xchg
in
repz
sbb
push
in
lods
lds
daa
mov
pop
xchg
sbb
les
adc
cmp
jae
into
in
or
enter
out
mov
jecxz
mov
cmpsl
loope
xchg
push
pop
sbbb
mov
xchg
adc
mov
or
dec
sar
and
aam
out
out
jg
cmpsb
in
sbb
mov
icebp
shl
inc
xlat
loope
dec
mov
insl
adc
push
pop
jb
mov
push
push
cmp
clc
loopne
es
mov
and
jo
test
or
nop
js
mov
cwtl
inc
in
adc
sbb
rorb
lods
lea
cmpsl
cwtl
addr16
xchg
mov
or
enter
mov
sahf
sbb
adc
mov
cmp
cmpsl
xchg
js
dec
das
pop
jns
mov
stc
aad
jnp
sar
or
mov
add
push
addl
pop
add
cmpsb
sbb
sub
jnp
and
or
mov
pushw
pop
dec
mov
ljmp
jo
jge
mov
push
leave
push
std
xchg
test
ds
adc
adc
xchg
imul
mov
cmpsl
mov
pop
inc
test
mov
cmp
cli
fimuls
mov
loopne
xor
scas
cltd
or
lea
fs
dec
adc
cmp
jae
cmp
lods
roll
pop
mov
inc
shl
mov
fisubrs
imul
or
cwtl
add
aaa
rcrb
jge
mov
sub
xor
cmpsb
call
leave
je
pop
lea
hlt
fisttpl
lea
mov
test
push
mov
fnstsw
sti
pop
fdivrs
push
sub
lret
jle
scas
jge
lods
mov
pushf
mov
jp
jns
push
add
std
xchg
aad
add
xchg
aaa
pop
int3
xor
xchg
pop
mov
jbe
add
in
xchg
pop
sbb
pop
and
lods
in
mov
inc
and
push
cmp
sbb
mov
or
sbb
dec
div
mov
sub
stos
jg
and
mov
es
hlt
lea
movsb
and
mov
inc
leave
jne
out
fcoml
ljmp
sub
mov
jmp
cld
push
daa
inc
push
in
mov
ja
push
pushf
enter
or
adc
adc
mov
icebp
fdivr
or
and
jle
pop
xchg
subb
test
pushf
jecxz
sbb
mov
fdivp
xchg
sbb
pop
rorl
xchg
insl
les
pop
xlat
add
cld
xchg
loop
and
into
mov
or
jl
add
movsb
inc
in
xchg
jecxz
dec
pop
shll
inc
pop
push
or
dec
inc
je
fdivl
icebp
dec
pop
rcll
hlt
ret
xchg
dec
test
jge
push
mov
lock
inc
fstpt
bound
lds
daa
xchg
dec
or
shll
in
xchg
lea
out
add
cli
push
loopne
test
mov
add
js
iret
sbb
and
insb
pop
js
sub
push
rcr
sub
push
test
fxam
cmp
xchg
pop
into
mov
dec
cmp
xor
mov
lahf
test
adc
mov
xchg
inc
ss
ret
outsl
cmpsl
cmp
xchg
mov
push
xchg
popa
or
jne
add
mov
xchg
call
xchg
jae
push
add
mov
pop
js
cmp
adc
jb
push
cltd
adc
dec
jmp
insb
cs
jo
rorb
xchg
or
icebp
pushf
sub
cwtl
stos
neg
jno
repnz
and
stos
push
mov
lock
mov
adc
mov
shlb
imul
dec
leave
jle
jg
out
lea
pop
outsl
dec
add
arpl
mov
mov
in
aaa
sub
add
and
dec
pop
int
imul
lret
stos
pop
inc
fptan
lahf
inc
leave
out
jbe
pop
fld1
cli
mov
aad
adc
aas
pop
and
xor
cltd
add
cli
add
jmp
push
test
xchg
lock
add
lahf
lahf
sarl
test
jp
and
mov
jg
jmp
adc
add
cmpsl
jp
fistpll
and
xor
outsl
out
movsl
sub
pop
daa
cmp
adc
nop
adc
cmp
out
das
or
lods
ja
xor
jne
popw
call
test
inc
and
fidivrs
sbbl
pop
sbb
lret
dec
test
xchg
cmpsl
cli
imul
jae
sbb
push
mov
ss
jo
icebp
pop
mov
fs
or
ds
sti
dec
pop
arpl
adc
and
adc
pop
aam
xchg
sub
mov
cld
mov
xor
mov
scas
mov
cmpsb
pop
iret
xchg
jg
loopne
fnstenv
mul
inc
loopne
movb
je
mov
lahf
incb
mov
imulb
add
divl
andb
or
mov
test
in
cmp
lock
out
arpl
pop
out
fiaddl
adc
dec
aam
call
adc
mov
addr16
pop
inc
dec
xor
and
push
movsb
jb
xor
jl
lods
add
lahf
pop
das
mov
loope
jge
insl
ds
rorb
push
or
std
sub
sub
add
mov
jns
popf
jno
rcll
fnstsw
in
pop
test
std
dec
popf
andl
test
sti
fisubs
fbld
movsl
mov
dec
lods
jne
dec
dec
xchg
push
pusha
icebp
pop
sbb
popl
xor
leave
sub
pop
fidivl
sarl
push
push
inc
cld
or
jo
fdivs
pop
repnz
jle
ret
sub
mov
jp
xchg
sbb
xchg
int3
dec
fsubs
push
xchg
ds
std
lahf
imul
dec
out
lock
jecxz
loopne
dec
inc
jns
sbb
repz
adc
out
in
ja
sbb
mov
outsb
xchg
enter
inc
xchg
test
ret
arpl
push
cmp
or
sbb
pushf
nop
dec
ljmp
pushf
gs
mov
pop
test
ss
inc
pop
mov
jecxz
mov
cmp
stos
fimull
cmpsl
sub
fs
xor
cmp
adc
mov
stos
out
cld
adc
adc
addl
movsb
push
lcall
pop
inc
hlt
push
into
push
bound
sbb
mov
sbb
fs
pop
xor
test
sahf
jg
stc
sbb
inc
push
mov
rolb
icebp
out
inc
sub
stos
cmp
push
adc
arpl
lods
rcrb
xor
lea
mov
test
jg
ss
dec
fwait
out
xor
cmp
fsts
sbbl
cmp
cmp
inc
jno
adc
mov
or
es
inc
mov
icebp
rcrb
cmp
mov
xchg
push
iret
hlt
stos
push
out
dec
fwait
jnp
push
push
pop
sub
cli
pushf
mov
in
xlat
cmp
adc
mov
das
jle
sahf
lea
add
adc
hlt
sub
pusha
mov
imul
push
ret
jmp
enter
in
inc
pop
sarl
push
push
jne
or
fcoms
cs
xchg
xlat
ffree
sbb
or
adc
pop
pop
xchg
xor
imulb
xor
rorl
sbb
out
imul
sbbb
outsl
mov
repz
testb
inc
sti
sub
addl
pop
fwait
call
cmp
fcmovnb
jno
insl
adc
dec
mov
inc
pushf
jo
jp
mov
std
jnp
mov
jge
lcall
out
cmpsl
dec
cmp
aas
lds
movsl
cmp
push
jp
xor
and
add
mov
xor
fwait
rolb
cmp
or
sbbb
dec
and
pop
popa
icebp
sbb
or
mov
les
les
and
jge
mov
cmp
mov
aam
lret
xchg
pop
nopl
jl
mov
xor
jnp
addr16
call
into
mov
xchg
push
jnp
jmp
sbbb
or
fcmovne
xchg
cmpl
sub
xor
push
aad
andl
hlt
lcall
dec
xchg
jle
xchg
xor
push
mov
fiaddl
inc
adc
pop
dec
lret
iret
aad
test
outsl
repnz
xor
subl
push
es
in
or
lcall
sub
sub
loopne
add
call
outsb
xchg
or
and
repz
fs
xor
out
es
xchg
cmpsb
cli
pop
fsubrl
ja
ja
jecxz
imul
imul
cmp
jp
ja
and
sub
ret
in
push
mov
push
in
push
push
incl
mov
int
shlb
stos
pop
push
and
pop
or
dec
adc
out
pop
sub
inc
xor
add
sbb
aaa
mov
stos
mov
scas
insl
push
das
push
dec
mov
jb
in
aad
mov
iret
mov
loope
xchg
es
cld
ret
sub
push
xor
jp
cmp
xor
inc
pop
mov
cmp
int3
shrb
pop
orps
mov
jmp
xchg
or
or
loop
dec
adc
fs
dec
and
ljmp
mov
psubb
sbb
iretw
das
mov
fs
rorb
add
xor
test
icebp
movsl
lods
jns
cmp
xor
xlat
cli
rcpps
push
imul
or
test
mov
cs
pop
stos
shll
jl
dec
in
arpl
ret
stos
jmp
lods
sub
push
lods
mov
loope
nop
xchg
mov
dec
jo
push
xor
imul
adc
mov
popf
mov
rclb
xor
fmuls
sar
pop
frstor
std
cltd
in
jo
in
lea
int
lahf
mov
xchg
inc
repz
loop
dec
and
mov
adc
jl
rcl
lds
adc
cmp
push
xor
jb
mov
test
das
xlat
or
jbe
fimull
ficompl
loopne
mov
movsl
cmp
mov
jmp
daa
in
popa
cli
push
mov
xor
jge
fdivrp
fcomps
mov
repnz
es
movsb
das
dec
cli
sub
int
or
loop
cltd
add
xlat
xor
mov
loopne
mov
ror
push
and
mov
mov
inc
adc
sahf
and
mov
push
add
dec
ds
or
xchg
xchg
push
int
pusha
out
test
jecxz
push
loop
adc
into
scas
sbb
mov
push
loopne
pop
jnp
rclb
dec
call
sbb
fadds
mov
iret
mov
push
int3
dec
xchg
push
aaa
cmp
cli
sahf
fstpt
cmp
xor
xor
iret
inc
inc
push
test
sbb
out
movsl
cwtl
loopne
jno
pop
or
popf
shlb
dec
jae
addb
fbstp
lods
mov
mov
ffreep
lahf
jo
dec
inc
or
pop
out
push
jmp
push
mov
negb
hlt
es
push
and
jno
gs
add
rcrl
mov
sub
shrl
add
fidivrl
mov
xchg
inc
mov
add
mov
cs
sbb
push
pop
xchg
les
repz
movsb
jbe
les
nop
pushf
rclb
cli
inc
andb
repnz
xchg
mov
push
test
inc
int
sub
or
pop
mov
out
repnz
js
sti
sarl
push
jne
pop
push
or
ja
and
cld
mov
inc
jp
int3
mov
cmpsb
mov
mov
cmp
cmp
mov
leave
mov
js
mov
clc
push
pop
xor
jae
dec
adc
fdivs
lods
loope
stc
adc
push
icebp
loop
out
sbb
int
fcmovnb
sub
cmp
sti
add
mov
fcom
xchg
sbb
nop
stc
mov
mov
idivl
insl
pop
test
and
xor
mov
loop
and
paddd
pushw
mov
cmp
stc
aad
xchg
mov
cmpsl
sbb
jp
ljmp
cmpsl
enter
push
sti
lea
mov
jno
fstl
inc
int3
cmp
xlat
rorb
lods
in
xor
sub
push
roll
int3
jp
stos
push
hlt
mov
push
or
push
pop
ret
sarl
and
push
push
inc
shlb
jae
stc
mov
xchg
test
addb
in
adc
adc
imul
adc
dec
out
ljmp
ljmp
dec
mov
loopew
fistpll
jns
insb
jae
push
jb
mov
cmp
call
sahf
call
sub
adc
mov
ja
in
push
xchg
and
xor
xchg
in
mov
or
fcoml
in
out
outsb
inc
es
in
pop
ds
mov
cmp
or
pop
xchg
decl
cmp
aas
mov
add
mov
push
addr16
sub
sub
mov
mov
xchg
or
sbbb
mov
lds
inc
jmp
and
mov
mov
out
ljmp
loopne
mov
xor
cs
dec
sub
sub
ffreep
xor
std
cmp
mov
mov
jno
xchg
or
sahf
inc
scas
test
cmp
mov
jp
xlat
out
mov
sbb
jnp
fsubrl
cmc
scas
and
cmp
push
or
push
mov
mov
push
movsb
pop
leave
lret
jp
in
jno
add
jg
setg
out
add
pop
stc
call
add
jecxz
add
lods
test
cmp
addl
sub
dec
pop
cmc
stc
xchg
stos
xor
enter
lods
dec
cmp
mov
scas
stos
xchg
insl
xchg
aad
push
std
pop
divb
pop
std
mov
push
jbe
test
aam
and
scas
pop
push
xor
xlat
pop
fucom
xchg
xor
mov
ret
ficomps
shll
shr
xor
pushf
push
imul
adc
aaa
sti
scas
xor
xchg
das
popa
add
testb
mov
dec
fildl
adc
mov
into
inc
mov
popf
and
in
inc
mov
or
jmp
dec
mov
test
pop
push
popl
lods
adc
add
or
jp
sbb
add
outsl
into
sub
jle
mov
adc
jl
test
push
mov
adc
popa
mov
ffreep
repz
cmpsb
dec
cli
lea
sub
xchg
xor
inc
push
xor
cltd
cwtl
mov
mov
xlat
add
jmp
mov
inc
sbb
pop
sub
cmp
push
and
adc
pop
push
mov
dec
cltd
push
adc
mov
nop
xlat
dec
lcall
mov
jo
test
pop
in
int
mov
rorl
cli
loope
ljmp
sarl
xor
xchg
sbb
cli
ljmp
imul
daa
shll
xor
popa
push
pop
adc
push
je
jnp
adc
in
cs
fwait
test
cmc
ljmp
pop
andb
not
rcll
outsl
xlat
jnp
inc
pop
nop
lret
cmp
ja
clc
rorb
pop
jno
into
in
jge
and
lods
inc
data16
xor
inc
push
es
and
push
ret
or
inc
mov
inc
xor
xchg
pop
das
cltd
scas
inc
mov
mov
jb
or
lods
xor
in
pop
cmp
pushf
cltd
jg
push
lds
inc
lcall
jge
adc
fwait
or
pop
pop
out
xor
subl
and
jp
orl
sbb
mov
fistps
adc
xchg
je
jl
iret
cmpsb
out
setge
jb
jg
jbe
lahf
and
jle
aaa
cmp
adc
push
fists
and
cmp
out
outsl
xor
loopne
mov
popa
popf
jo
or
gs
mov
add
adc
cmp
adc
movsb
xor
dec
jnp
jns
aas
cwtl
push
dec
in
xor
add
roll
fs
inc
or
popa
fsubl
cmp
lretw
test
movsb
push
sub
jge
repnz
std
add
and
dec
aaa
hlt
inc
and
ror
addr16
das
xor
ret
pop
mov
jl
jae
mov
cmp
adc
and
sbb
imul
jb
lahf
daa
sar
cmp
fnstcw
scas
fstpl
jae
cmpsl
mov
stc
jmp
sub
stos
cmpsl
mov
xchg
data16
sub
ds
sub
inc
stc
sbbb
enter
or
cmp
jnp
ss
cmc
mov
xchg
add
or
push
mov
and
lret
pushf
pop
jnp
mov
inc
icebp
cmp
push
fcompl
mov
dec
dec
or
je
or
aad
testl
mov
pop
scas
cltd
cmpb
test
in
int3
inc
lcall
adc
pop
cmp
mov
inc
in
inc
fsts
sub
add
incb
test
rorl
sbb
mov
xchg
mov
xchg
popa
cltd
cli
inc
hlt
in
mov
jne
fwait
shll
mov
jno
push
inc
mov
dec
inc
idivl
aas
sub
aas
mov
out
pop
adc
mov
in
sbb
mov
add
in
cmp
fcmove
push
test
in
inc
imul
mov
loop
in
pusha
ret
sbb
lock
clc
aad
jmp
and
decb
cmc
xchg
cmc
mov
inc
or
push
lods
loopne
out
in
daa
lods
add
into
add
xchg
mov
pop
call
jnp
sbb
lret
sarl
pop
adc
imul
jmp
fdiv
add
sub
roll
pop
xor
xchg
push
js
in
es
clc
sbb
pop
sub
cmp
xchg
aad
xchg
faddl
hlt
xchg
aam
test
and
push
pop
pop
out
in
xor
push
mull
push
inc
data16
js
pop
lahf
jle
in
lea
outsl
imul
sub
icebp
sbbb
xlat
mov
jg
inc
inc
out
push
insb
push
dec
sarl
mov
add
mov
push
xchg
jmp
push
sub
cmpsb
or
mov
cmpb
testb
sahf
mov
push
add
mov
push
das
or
mov
sbb
push
jle
or
and
sarl
inc
fwait
scas
dec
test
or
test
out
adc
shrb
in
out
pop
rolb
xor
xchg
sbb
lret
mov
push
pop
mov
inc
jecxz
cld
mov
xor
imul
das
mov
lcall
mov
inc
ja
andb
fistpll
pop
mov
js,pt
adc
mov
adc
lods
out
inc
and
add
mov
xchg
mov
xchg
adc
stos
inc
mov
enter
mov
mov
outsl
sub
sbb
cmpsb
test
nop
imul
lcall
aaa
out
and
lock
test
mov
in
enter
push
or
repnz
adc
arpl
inc
mov
js
pop
xor
push
aam
aad
dec
and
mov
js
push
gs
sti
neg
repz
in
and
xchg
inc
ret
inc
das
jne
imul
and
or
xchg
nop
ljmp
dec
imul
pop
or
out
jle
jno
dec
add
dec
push
or
mov
inc
pop
lods
jb
cmpsl
dec
std
mov
mov
in
lea
repnz
push
sub
ficompl
sub
notl
sti
lods
adc
call
movsl
inc
push
or
push
mov
je
in
xor
lret
add
jo
inc
out
mov
push
sahf
pop
mov
aad
sbb
daa
mov
push
arpl
divl
pop
cmp
mov
popf
arpl
sti
loope
imull
mov
push
clc
loope
andl
jmp
clc
insl
shl
sub
add
test
cltd
push
testb
xor
or
lock
adc
adc
pop
fnstenv
xchg
test
xlat
ds
fcompl
repz
sbbl
sbb
add
mov
mov
adc
push
pop
xchg
aad
hlt
xlat
cmp
hlt
movsb
dec
push
cmp
inc
xchg
pop
pop
jl
add
stc
sub
lods
pop
int
mov
decl
jge
in
mov
ret
sbb
jmp
pop
repz
lock
inc
sti
pop
xchg
movl
cli
inc
pop
sarb
popf
adc
inc
and
xchg
sub
dec
push
jle
mov
in
push
stos
popa
pop
cmc
in
lods
jno
aam
repnz
mov
jbe
jne
jp
in
pushl
nop
mov
mov
sub
mov
fdivrp
fucomi
mov
xchg
popf
addr16
loopne
mov
cmp
xchg
xchg
dec
std
xor
imul
notb
sub
lods
adc
sub
pop
call
jb
cmp
out
roll
mov
jb
push
lahf
aaa
inc
mov
test
sahf
rol
mov
mov
mov
dec
iret
fstps
jne
iret
fs
fadds
and
insl
push
mov
xchg
cmpsb
sbb
int
les
dec
xchg
or
xor
fs
sarl
push
int3
or
add
push
pop
out
adcb
nop
loope
xchg
jbe
mov
dec
lret
mov
arpl
inc
fsubl
es
sbb
pop
xor
std
dec
sbb
adc
push
dec
jne
xchg
sub
add
mov
ss
xchg
pop
pop
lods
testb
test
in
jne
rolb
shlb
sti
pop
cltd
je
lcall
add
sub
xor
or
aam
pop
jle
lods
cmp
lock
cmp
adc
push
add
mov
hlt
add
cld
fsubrs
pop
cli
fstl
cmpsb
pop
clc
pusha
sbb
push
insl
int3
add
adc
cmp
stos
jmp
aas
scas
sarl
and
in
mov
xchg
jmp
push
jno
lock
ffree
cmc
and
jp
mov
dec
dec
into
push
lods
xlat
xor
jg
stos
loopne
sub
std
mov
mov
or
stos
xchg
xchg
mov
pop
ficoml
cmp
mov
lock
cli
sbb
fadd
dec
sbb
leave
and
inc
push
test
rorb
mov
pop
lcall
jo
jnp
or
adc
xor
movsb
fbstp
mov
les
push
imul
or
push
aaa
mov
xor
pushf
fwait
and
jne
int
mov
add
sahf
lds
or
add
cwtl
aaa
sub
movl
jns
pop
mov
add
popf
clc
inc
sub
cmpl
adcb
ja
add
sub
inc
ss
mov
mov
push
incl
mov
sbb
es
mov
sbb
sarb
jle
pop
jne
or
jmp
enter
mov
ud1
stc
and
mov
leave
inc
jnp
test
lea
and
jno
mov
mov
sahf
loopne
or
cmpsb
push
scas
clc
xlat
xor
das
jnp
shrl
aad
dec
mov
dec
popa
ss
vpcomq
int3
pushl
cmc
je
les
call
adc
push
into
icebp
lret
add
in
mov
push
pop
push
cmc
jmp
inc
inc
jo
daa
pop
out
dec
and
outsl
dec
or
lods
into
shll
sbb
adc
fimuls
mov
sub
or
mov
jecxz
or
adc
xlat
xchg
das
cli
jno
ljmp
mov
pushl
mov
cmp
es
sub
mov
out
jo
bound
jmp
hlt
pop
xor
sub
cs
fcoml
rol
pop
mov
iret
loope
movsb
jae
jge
test
xor
jmp
mov
jae
mov
das
cmp
cli
adc
mov
jg
mov
pop
lea
inc
shrb
and
adc
je
jno
push
pushl
andb
int
scas
sbb
mov
mov
je
dec
movsb
lret
int
mov
ss
mov
sub
outsb
andl
in
mov
xchg
mov
rorw
xlat
inc
punpcklbw
adc
sbb
or
cmc
mov
popf
lret
xchg
pop
jge
out
std
or
pusha
fcmovb
adcb
jo
lcall
notl
cli
sub
sbb
pop
addr16
jp
cld
sbb
mov
sbb
push
push
fidivrs
sahf
pop
inc
xchg
jbe
jbe
pop
adc
repnz
inc
and
daa
add
out
nop
dec
adc
mov
cs
and
cmp
mov
adc
xchg
dec
adc
dec
add
cmp
mov
rcrb
xchg
or
add
or
cmp
xor
es
dec
pop
cmp
cmp
mov
cmpsb
jp
jp
shll
test
pop
std
cmp
xchg
mov
push
sub
sub
rorl
xchg
test
popa
cmp
lods
fldl
sarl
stos
dec
in
in
jae
xchg
push
xchg
xchg
push
incb
mov
repnz
cli
repnz
mov
push
mov
push
or
inc
out
mov
ffreep
stc
movsl
add
push
repz
ss
or
cmp
addr16
xor
mov
push
sbbb
mov
cmp
sbb
js
std
or
outsl
repnz
repz
testb
lds
xor
sub
and
in
lods
sbb
sub
push
sub
sbb
mov
adc
pop
xor
add
sbbl
adc
popf
xor
sbb
es
imul
push
pop
add
jp
int
cmp
push
pop
out
addr16
leave
mov
or
push
fwait
inc
sbb
psllq
insl
jno
push
mov
js
enter
popf
rcl
push
popa
mov
popa
xchg
and
jo
nop
push
shl
sub
pop
sub
or
dec
and
ret
pushf
cmp
lcall
push
in
mov
out
lea
dec
adc
sahf
lret
push
call
fadds
sbb
stos
clc
xchg
pop
add
dec
into
mov
cmp
dec
in
out
scas
xor
cmc
dec
xchg
push
hlt
xchg
je
mov
int
fwait
bound
and
enter
jge
hlt
inc
pusha
dec
dec
pusha
mov
jge
sub
mov
in
cwtl
adc
fldenv
stos
xchg
testl
mov
dec
fistl
lods
jmp
orb
add
jmp
jle
push
mov
cld
pop
xchg
int
mov
sub
push
jmp
mov
jb
xor
push
dec
pushf
cmp
inc
movsl
sahf
out
loope
lods
pop
fbstp
mov
dec
out
fs
pop
shlb
adc
dec
aaa
gs
add
and
adc
push
lods
push
insb
inc
sbb
iret
add
mov
mov
test
mov
sahf
pop
adc
push
mov
dec
inc
arpl
sbb
inc
mov
xchg
inc
push
dec
xor
cs
jne
test
push
outsl
adc
cltd
and
movsb
sbb
lcall
je
dec
mov
xorl
inc
inc
pop
lcall
test
jle
repnz
outsb
aad
iret
call
in
push
jnp
subb
aaa
and
and
cmp
sti
lods
adc
jno
aad
shl
xchg
xchg
ss
cwtl
inc
data16
loopne
testl
push
ja
arpl
pop
xchg
xchg
add
pop
sysret
outsb
lock
push
daa
imul
mov
push
lock
insb
sbb
mov
stos
in
add
sub
clc
and
jbe
and
xor
cmpsl
subb
les
dec
pop
jb
daa
mov
arpl
push
out
jecxz
fiadds
dec
and
pop
mov
insb
outsl
int
aad
pop
fistps
push
outsl
xchg
ficoml
pop
ror
dec
xchg
loop
or
xorb
push
imul
js
push
sbb
notb
stc
out
xor
test
adc
rolb
rorl
addb
ret
dec
cmpsl
std
mov
xchg
fmuls
mov
ja
cmp
lock
sub
enter
out
fs
call
and
pop
lods
cmp
cltd
push
inc
lock
cmp
sbb
in
rorb
sbb
push
cmp
mov
lcall
add
fldcw
cmp
inc
daa
xchg
pop
mov
bndstx
inc
jae
mov
sbb
and
mov
mov
or
lods
fucom
xchg
sbb
mov
movsb
push
adc
mov
mov
push
push
xlat
add
adc
and
or
push
mov
dec
aaa
mov
outsl
inc
jnp
dec
adc
stos
push
add
push
in
nop
leave
jg
xchg
xor
and
lea
mov
xchg
add
mov
shr
lcall
les
xchg
jle
fs
jecxz
push
dec
ret
xor
and
mov
test
xor
and
lret
sub
mov
mov
test
call
inc
or
cs
jmp
out
lods
push
fisubs
xchg
pop
xchg
out
sbb
imul
lock
jmp
sbb
inc
cmpsb
outsl
pop
mov
mov
cmp
push
add
adc
int3
jmp
sub
stos
jg
or
stc
outsb
mov
imul
and
pop
clc
int
jo
test
outsb
inc
shrb
xchg
pop
jbe
mov
or
cli
jl
or
cmpsb
or
push
pop
ss
pushf
mov
loopne
imul
mov
sub
ret
mov
mov
mov
xchg
cmc
inc
add
mov
sar
orl
es
jnp
data16
xor
vmwrite
sbb
pusha
lods
sub
pop
xchg
push
and
xor
sti
cmp
lods
imul
in
inc
lock
roll
sbb
add
and
pop
stos
js
rorl
pusha
mov
xor
xchg
lea
and
adc
out
xor
xchg
mov
push
inc
and
scas
push
push
and
lds
daa
fiadds
mov
pop
add
mov
aas
pop
mov
stos
pop
cwtl
lret
xchg
fdivrp
and
daa
cmpl
roll
in
stc
or
cmp
or
iret
pmulhuw
push
mov
out
das
push
fbld
test
add
adc
cmp
inc
jb
sbb
add
adc
in
adc
dec
ss
test
or
andb
rcrl
insl
test
cmp
fisubrl
xor
mov
fwait
testb
xchg
xor
dec
cmpsl
out
inc
inc
pop
icebp
popa
pushl
enter
aad
dec
inc
outsb
mov
shll
push
adcl
in
insb
xchg
movsl
pop
inc
loop
js
fwait
mov
inc
ja
xor
push
lock
sbb
jg
imul
fcmovnbe
sbb
sbb
movsb
ds
sbb
xchg
adc
imul
push
or
int
addr16
add
jle
and
ja
pop
subb
mov
push
xchg
inc
andb
mov
cwtl
mov
adc
xchg
icebp
int
mov
cmp
cs
sbb
lret
lahf
ds
xchg
xchg
insl
filds
std
js
push
adc
cmpsl
add
shlb
mov
jns
mov
sub
add
enter
pop
mov
and
pop
add
jl
in
sbb
add
add
push
mov
xchg
cmp
xor
mov
add
jnp
jno
int
xchg
adc
push
ret
push
sbb
jmp
sbb
arpl
mov
mov
sub
aam
push
imul
enter
cmp
xchg
or
adc
idivb
adc
popa
mov
push
aaa
out
jno
mov
jnp
xchg
movsl
push
ret
adc
jecxz
insb
jns
cwtl
dec
jl
cmc
jp
xlat
jle
mov
ja
ljmp
out
leave
jle
adc
pushf
gs
sbb
jle
loopne
xchg
pop
jle
dec
dec
and
leave
xchg
inc
dec
cmp
repz
stc
out
lock
mov
enter
cmp
mov
das
fdivs
lret
enter
aam
mov
mov
sbb
mov
xchg
pop
dec
jns
cmp
push
fistps
lods
mov
xor
in
outsb
cs
lahf
arpl
dec
mov
into
sub
xchg
mov
cmpsl
ror
mov
dec
call
adc
mov
mov
sub
sbb
push
movl
int3
pop
in
out
mov
aaa
xor
cmp
cmpsl
cmpb
jp
push
pop
aam
sub
aam
or
dec
pop
inc
xchg
bound
adc
enter
mov
sahf
cs
push
pop
aas
xor
cmp
dec
movsb
jl
inc
sub
dec
rorb
cmp
add
into
lret
cmp
xor
jno
stos
mov
push
push
jp
xchg
jnp
out
sub
leave
aad
sub
movsb
xchg
push
icebp
cmp
inc
add
enter
xor
test
xor
inc
ljmp
lcall
sbb
adc
adcl
inc
repz
pop
sub
sub
adc
jmp
sbb
add
outsb
enter
arpl
mov
in
fsubrs
int
sub
jns
mov
arpl
jg
xchg
sub
bound
xchg
hlt
pop
repz
fistl
and
cmpsb
mov
or
xor
loop
lods
pop
and
mov
and
les
fs
stos
add
ret
inc
mov
lret
xchg
mov
xor
jne
add
dec
xor
lock
clc
jne
nop
inc
addl
es
mov
adc
imul
xor
aaa
and
sbb
je
insl
add
or
sub
xor
popf
or
dec
xor
fs
in
add
mov
dec
xchg
inc
mov
add
jb
pop
dec
lds
shl
sti
sub
fbld
inc
ret
pop
push
mov
test
sub
mov
aam
dec
addr16
push
popf
lock
into
repnz
push
cmp
jmp
lret
mov
lods
bound
pop
sahf
adc
subb
es
push
idivb
outsl
inc
js
negl
add
xor
sub
dec
dec
mov
test
movsb
pop
lods
inc
fisubrl
movsl
ja
dec
pop
pop
jecxz
fs
inc
xor
pop
push
xor
adc
je
in
xchg
cltd
fistps
add
push
cmp
mov
cmc
xor
test
aam
cmp
lret
inc
in
push
mov
push
mov
aas
xor
jl
xlat
cli
dec
add
stc
dec
lds
ja
sahf
mov
or
xlat
push
add
cmp
push
pop
and
mov
jae
cli
xor
fs
adc
stos
imul
jne
fistps
fnstenv
cld
in
xchg
mov
jmp
aaa
call
xchg
gs
hlt
aad
inc
fwait
pop
cli
mov
adc
daa
adc
sub
cld
lods
jno
adc
ja
scas
sub
sti
icebp
das
xor
adc
inc
sbb
scas
sahf
add
sbb
sahf
dec
dec
shll
xchg
aaa
out
add
stc
hlt
xor
jns
jnp
gs
scas
push
xchg
in
cltd
loope
rorb
mov
rcr
jb
push
jae
or
cmpsb
xor
les
sub
mov
in
fisubrs
fs
dec
movsl
mov
mov
mov
lret
popa
popa
cmp
xchg
bound
movsl
sbb
xchg
out
aaa
adc
fsts
mov
push
sbb
jl
lea
movsl
mov
fidivl
push
stc
add
outsb
mov
popf
jae
lods
xchg
pushf
cmp
adc
cmpsb
push
mov
mov
cmp
ja
ret
aam
clc
xor
adc
sbb
inc
dec
call
lods
nop
add
jle
push
fistpl
sbb
sbb
shll
jge
sti
ds
adc
xchg
jmp
adc
pop
or
test
movsb
adc
sbb
jl
int3
xlat
add
pusha
nop
add
xlat
mov
enter
and
mov
out
adc
out
cmp
fisubl
jmp
cmpsl
sub
pop
adc
sbb
xor
les
pop
movsb
popf
mov
sbb
daa
sahf
cmpsb
push
sar
cmp
outsb
ret
mov
es
outsl
mov
pop
add
sbb
hlt
inc
mov
cmc
pop
aas
insl
popf
push
out
ror
mov
and
stc
in
rcrb
and
iret
xchg
mov
xor
nopl
arpl
mov
xchg
lods
sub
push
cmpsb
sbb
jp
data16
add
mov
or
jno
pop
adc
and
je
xor
mov
daa
cld
inc
pop
test
pop
pop
movsb
fimull
sahf
push
aas
cld
clc
push
cmp
scas
cltd
bound
sbb
pushf
lret
mov
add
mov
rclb
jl
jl
ret
test
fisubs
lods
or
pop
sbb
add
testb
adc
pop
jb
adcl
push
adc
mov
das
xchg
les
push
fadds
mov
sbb
loope
mov
loope
arpl
movsl
adc
movsb
movsb
or
cmc
popa
adc
andb
cmp
push
or
dec
jne
mov
enter
xlat
jno
outsl
dec
dec
out
add
and
xorb
jmp
inc
sbb
mov
mov
lods
fildl
in
notl
lods
jp
dec
adc
les
test
mov
jl
cmp
fcoms
add
adc
out
pop
inc
outsl
in
out
jge
data16
adc
outsb
jnp
pop
pop
test
hlt
popf
jg
inc
iret
jb
or
out
cmpsl
and
dec
out
jnp
or
mov
jge
dec
pop
es
mov
add
add
sbb
addr16
mov
sti
dec
fsubs
cmpb
push
popf
lods
adc
aaa
movsb
xor
cmpsb
shll
pop
in
clc
cmc
stos
lock
dec
dec
loop
arpl
cwtl
adc
dec
push
mov
push
jae
outsl
sahf
add
cs
mov
es
testl
or
ret
cmpb
xor
push
decl
in
add
xchg
outsl
arpl
mov
mov
mov
movsb
dec
cmc
rorl
mov
adc
pop
mov
ja
sbb
sub
enter
scas
mov
cmp
dec
call
scas
int3
jo
push
jecxz
inc
cli
ret
or
mov
jg
pop
cmp
into
inc
mov
movsb
mov
or
mov
inc
jnp
js
lahf
hlt
mov
adc
call
cmpsb
adc
jmp
ljmp
shll
dec
pop
cli
packsswb
bound
cmpsb
xor
out
lcall
popa
rcll
add
jne
jl
mov
subl
xor
pop
mov
mov
cld
idivl
sub
push
jge
push
arpl
loope
shr
leave
lods
shll
call
jo
insb
div
push
jns
jns
cld
jecxz
pop
mov
cwtl
daa
hlt
in
loop
inc
sahf
nop
arpl
fdivs
adc
xor
and
pop
je
add
sbb
lock
adc
and
ficoml
mov
mov
cmc
xchg
jno
pop
imul
xor
xchg
lds
adc
dec
adc
push
rcl
xchg
push
inc
mov
or
stc
call
mov
pop
mov
lods
mov
sbb
xchg
addr16
outsl
pop
stos
inc
fwait
stos
aaa
mov
scas
xor
mov
mov
repnz
sbb
adc
push
arpl
gs
je
mov
jl
outsl
out
inc
loop
sti
dec
loopne
sbb
test
add
dec
cs
dec
lret
jno
sub
and
push
pop
xor
mov
dec
out
les
subb
aas
xchg
push
out
mov
lea
fisttpl
inc
dec
push
faddl
cli
mov
outsl
scas
sub
dec
pop
sbb
jmp
jmp
xor
dec
ss
xor
mov
mov
mov
cmpsb
ja
inc
mov
clc
in
pop
int
imul
repz
pop
or
loopne
daa
and
iret
lds
mov
adc
pop
out
pop
imull
jp
insb
rcll
ds
pop
xlat
xchg
pop
dec
inc
inc
pop
push
jp
and
inc
xor
mov
je
popf
sub
icebp
fldenv
mov
incl
jae
mov
div
lahf
or
and
lahf
inc
insb
cmp
test
lret
mov
mov
push
dec
in
shl
sub
sub
pop
popa
xor
std
dec
les
addl
add
ret
int3
dec
test
sub
fcoml
lret
and
or
push
jle
ds
jns
sbb
push
add
lahf
test
out
fwait
cmp
inc
push
lock
mov
call
daa
pop
jecxz
mov
loopne
outsl
mov
mov
out
pop
push
xor
jl
lretw
mov
add
arpl
sarb
dec
leave
cmp
xchg
mov
add
test
addb
mov
jmp
test
aaa
std
fcmovnu
jae
mov
stos
and
sbb
sbb
dec
fimuls
sub
fstpt
or
or
jno
fiadds
xor
cmp
sub
ss
mov
in
add
add
mov
loopne
xor
divb
sbb
scas
adc
movl
dec
mov
fisttps
fidivl
addr16
push
repnz
dec
add
mov
js
or
aas
xor
inc
sbbb
jo
push
adc
mov
cltd
in
mov
repz
int3
shll
pop
xor
icebp
imul
pop
jb
mov
sub
decl
pop
sahf
pop
pop
das
add
jb
mov
ret
das
jb
test
and
out
in
mov
nop
mov
jne
pop
pop
cmp
inc
or
adc
push
ret
dec
fisubs
pop
cmp
jo
shll
push
testl
je
sbbl
mov
shrb
adc
int
xchg
ds
or
mov
or
adc
push
lods
jno
sarb
pop
push
inc
loopne
cmpsl
sub
inc
mov
xchg
inc
xlat
cmp
jg
push
sub
outsl
cmc
jp
jae
fnstcw
jmp
push
insl
cld
lock
in
dec
sub
iret
cmpsl
lahf
add
and
pop
or
fistps
data16
das
lea
and
out
lahf
mov
scas
jno
outsl
adc
xchg
inc
pop
mov
and
mov
dec
pop
adc
cmc
daa
push
arpl
sar
cli
std
ja
in
popf
pop
sbb
clc
adc
add
push
aam
daa
in
dec
sahf
pop
adc
xchg
mov
or
mov
scas
aas
xor
cmpsl
and
loope
mov
mov
shrb
pop
push
repz
pop
or
jmp
test
jo
insl
jb
xchg
cmpsb
sti
push
sbb
add
test
push
jge
adcb
test
mov
in
pop
xchg
ljmp
repnz
xorb
lods
mov
mov
loope
movsl
movsb
ja
pop
sub
cmp
dec
scas
aad
xchg
and
fs
out
sbb
jmp
adc
out
mov
inc
xchg
cmpsb
and
push
cmc
repnz
push
pop
in
aad
orb
cmc
ss
push
loopne
mov
icebp
mov
mov
mov
fcoml
stc
out
leave
cmp
lcall
mov
push
push
mov
xor
aam
or
xchg
jg
inc
js
dec
dec
lods
mov
aam
scas
mov
stc
filds
mov
scas
push
pop
mov
adcl
lods
movsl
push
movsl
mov
loope
adc
in
inc
sbbb
push
in
arpl
pop
pusha
out
in
in
mov
adc
dec
je
bound
hlt
call
and
cld
fwait
mov
stos
mov
or
mov
fisubs
sbb
ja
inc
lret
and
xlat
mov
leave
or
shlb
xorb
or
iret
jmp
inc
sub
dec
push
push
pop
cwtl
iret
sbb
clc
mov
insb
loop
cld
leave
or
jp
mov
cltd
push
popf
int3
mov
mov
rcrl
andl
mov
xchg
jbe
pop
loope
test
clc
lock
out
xor
adc
mov
push
std
push
pop
fsubs
call
xor
xchg
inc
scas
call
xchg
jo
leave
push
mov
imul
popa
clc
mov
mov
dec
outsl
hlt
out
push
nop
jno
jecxz
mov
xor
sub
rcll
push
leavew
xchg
repnz
push
cmc
push
gs
sbb
in
inc
and
pop
mov
inc
sub
jg
mov
inc
add
xchg
repnz
sbb
out
push
inc
fcoml
adc
mov
pop
cmp
jmp
xchg
mov
and
xchg
scas
add
ljmp
xchg
mov
jge
sbb
movaps
popa
mov
mov
mulb
data16
jo
iret
insl
sbb
inc
enter
or
sub
push
popf
push
cmp
fistpll
fstpl
pop
xor
sbb
dec
je
rcl
inc
in
push
in
add
push
mov
test
adcl
dec
call
test
icebp
loopne
sti
gs
mov
adc
inc
sbb
xchg
xor
enter
xor
cmp
add
pop
pushf
pop
fscale
les
xor
xor
dec
add
xchg
popf
movsl
add
mov
push
sbb
add
push
wbinvd
ss
clc
or
shlb
and
das
das
sub
mov
stc
mov
pop
mov
lds
jo
daa
frstor
adc
jl
fwait
loope
repz
mov
sahf
pop
shlb
jecxz
fstl
xor
ret
rolb
or
std
cmp
std
sub
jo
or
test
inc
or
das
or
into
rcll
outsb
xlat
mov
or
insl
xlat
ja
push
cmp
and
js
subb
sub
sbb
add
xor
lcall
cmpsb
clc
shr
outsl
pop
pop
mov
rolb
push
xor
shrl
jge
insl
inc
lock
cmp
cmp
insb
jns
ret
jmp
inc
mov
gs
mov
aas
add
pop
pop
jge
xor
mov
scas
aad
adc
rep
cmp
pop
xor
sub
jle
es
ficoml
cld
mov
pop
leave
inc
fildll
ficoml
mov
lret
int
pop
pop
jae
dec
xor
cmp
mov
xchg
lea
lcall
arpl
cmpsl
ffreep
out
testb
aam
test
inc
jle
testl
lret
stos
cmp
sbb
scas
or
or
mov
jg
mov
iret
push
jnp
pop
dec
les
pop
repnz
ds
movsl
or
fwait
outsb
es
ja
and
xchg
jmp
cmc
cmpsl
mov
pop
hlt
nop
cmc
fsubr
ret
enter
mov
stc
cmp
xchg
loopne
jg
test
cli
stc
mov
jmp
mov
ds
dec
and
jb
or
sub
inc
lcall
scas
xchg
and
mov
dec
inc
jo
adcb
bound
je
or
mov
int
mov
cld
push
sbb
sbb
dec
in
sbb
stc
imul
jecxz
std
outsb
or
xchg
cmp
out
xor
xchg
pop
out
sbb
and
dec
leave
lods
mov
add
cmp
xor
xor
mov
sub
stos
and
xchg
and
out
ljmp
mov
leave
dec
xor
lods
push
xor
int3
ret
imul
leave
add
fcmovnu
das
lods
push
lock
aaa
sbb
rorl
adc
ffreep
adcb
push
add
in
addr16
call
lret
push
out
insb
cmp
aam
addr16
incl
fndisi(8087
jmp
scas
mov
push
push
xchg
mov
dec
sbb
in
and
fldt
jnp
add
ja
sbb
dec
dec
aaa
inc
push
out
xor
sub
and
adc
jnp
ret
jg
xchg
adcb
in
jbe
xchg
stos
jb
test
fisttpl
pushf
jb
shrl
and
int
xchg
fsubl
jle
push
fnsave
xor
movsb
jae
dec
lods
or
jg
pop
cwtl
lea
jmp
pop
mov
filds
lcall
test
push
out
and
rol
outsb
pop
arpl
sub
push
jns
lods
jmp
bound
hlt
push
xchg
mov
mov
push
push
fsubrs
lret
mov
scas
mov
or
mov
mov
mov
jnp
add
pop
xor
inc
lahf
dec
lahf
mov
pop
and
inc
dec
xor
cmp
ljmp
inc
sub
lods
sub
inc
pop
add
addr16
rolb
pop
add
and
flds
ljmp
std
sbb
movsl
xor
call
and
loopne
xlat
inc
mov
pushf
ss
cs
mov
sbb
loop
mov
push
mov
stc
movsl
sbb
dec
xor
fucomi
cmp
or
neg
roll
fdivp
inc
lds
loop
loopne
or
dec
and
sbb
lods
xchg
movsl
mov
adc
out
and
xlat
aaa
lea
add
int
or
fdivr
or
push
jle
cmc
hlt
or
shrb
jne
mov
xlat
dec
or
aas
fcmovu
jae
sahf
mov
pop
inc
test
add
loopne
cmc
icebp
sahf
movsl
jl
mov
popf
dec
xor
pop
test
xlat
push
sbb
js
mov
jno
jnp
lods
adcl
adc
xchg
test
mov
repz
pop
add
mov
and
int
push
push
outsl
xchg
out
fidivl
outsb
lret
sub
imul
jbe
mov
mov
stc
out
mulb
xchg
fcompl
pop
subl
inc
test
jl
divb
push
jb
mov
mov
mov
sub
clc
cmp
in
mov
int
adc
rolb
pop
ret
out
pop
add
xorl
add
cmp
fcomps
sub
scas
jbe
roll
inc
xlat
fadds
sbb
push
sub
bound
loopne
mov
fsub
movsb
rorb
xchg
aam
cwtl
int
test
test
xlat
xchg
xchg
fistpl
shr
dec
pop
sbb
ds
das
xor
test
dec
cli
imul
adc
imul
xor
dec
cmc
or
popa
cmc
out
rolb
fistpl
push
sbb
ds
ret
and
fdiv
enter
pop
push
int
pop
sub
mov
xor
push
push
loop
xor
dec
sbb
add
pop
sbb
push
insb
dec
ret
arpl
outsb
fcoml
cmp
push
cli
imul
rep
or
aam
lret
fwait
dec
dec
pop
pop
int3
stos
ret
mov
andb
inc
mov
lock
repnz
push
jb
xchg
mov
fwait
xchg
fucom
fstps
inc
ljmp
je
lock
mov
clc
push
mov
adc
cmp
cmpsb
into
jg
je
adc
test
or
cmp
cmp
mov
enter
pop
inc
push
mov
stos
push
ds
fdivl
lods
sbb
mov
movsb
stos
fdivrl
jae
dec
pop
mov
xor
cmp
sbb
hlt
mov
pop
lret
test
lock
insb
sbb
clc
fadds
subps
inc
subps
mov
imul
pop
xor
dec
outsb
adc
cmp
loopne
mov
fcmovnu
ret
xlat
push
pop
popa
sbb
xor
call
mov
ss
xchg
cmp
popf
fadd
lds
xchg
shl
adc
adc
ss
aas
pop
xchg
push
xchg
outsl
lcall
and
jecxz
out
ret
xlat
loop
test
adc
movsb
or
sub
std
inc
pop
push
jb
xchg
insb
arpl
scas
enter
cld
or
cmp
in
inc
inc
pop
cmc
sub
out
pop
and
add
into
xor
push
push
push
lcall
xchg
lods
mov
push
cmp
loopne
xor
xchg
test
ljmp
jle
xchg
cld
dec
or
mov
xchg
mov
lds
mov
xchg
jmp
push
push
fcoms
pushf
mov
pop
lcall
enter
inc
and
enter
inc
mov
xchg
data16
xchg
ljmp
mov
mov
push
shrb
jno
inc
sub
aas
pop
mov
fwait
mov
xor
xchg
fisttpll
popf
mov
xor
pop
mov
jge
and
out
ljmp
lahf
pusha
lret
in
stc
aad
hlt
mov
mov
cld
fsubs
mov
and
int
loopne
inc
pop
jbe
jnp
xchg
repz
jecxz
cmp
xchg
mov
xchg
lret
popf
jns
xchg
mov
shll
pop
or
mov
mov
pop
dec
inc
xchg
rolb
repnz
dec
repz
sbb
xor
push
imul
fstps
arpl
mov
mov
aaa
and
push
and
dec
or
jge
stos
mov
cmp
mov
push
cmpb
pop
adc
xchg
xchg
add
xchg
out
daa
or
out
hlt
rol
pop
mov
mov
mov
push
or
and
repnz
jne
push
xor
outsl
inc
sub
aaa
jae
mov
cmp
mov
dec
dec
ficoms
mov
pop
jno
jae
cs
js
xor
sub
push
ja
loopne
dec
push
pminsw
es
aas
insl
adc
or
jo
repnz
imul
add
add
pushf
pop
imul
jnp
lock
jp
xor
push
sbbb
push
push
lahf
xchg
jne
fisubs
aaa
movsb
inc
add
mov
jb
push
dec
cmpb
cmc
pushf
push
inc
es
sub
pop
push
inc
subl
in
sarb
adc
aam
ljmp
jmp
cs
lods
hlt
pop
cmp
cmpsb
popa
push
fwait
aaa
jnp
jnp
cmp
inc
add
jo
lret
sbb
dec
push
shll
adc
lods
xchg
sbb
aaa
inc
adc
cmp
ja
jp
push
mov
daa
outsb
fsts
mov
mov
test
or
nop
aas
test
jge
add
icebp
xchg
sub
stc
jmp
clc
jg
rolb
idiv
and
jmp
fs
lcall
pminsw
or
out
and
cmp
lret
xor
cmc
lods
fsubp
ja
es
cmp
mov
mov
dec
mov
sub
movsl
pop
mov
adc
jns,pn
scas
imul
cmp
imul
scas
push
es
sbb
testl
inc
out
xor
filds
popa
fmuls
add
push
subl
rorl
adc
js
lods
movsl
dec
adcl
sbb
jmp
mov
xchg
sbb
imul
or
lcall
xchg
cmpb
jge
pop
inc
or
push
shl
mov
scas
xchg
xchg
pop
or
mov
daa
mov
leave
or
imul
repz
push
inc
pop
ret
mov
pop
add
push
mov
pop
and
maxps
outsb
daa
dec
adcb
scas
hlt
cli
xor
fbstp
adc
ficoms
adcb
popa
sub
ret
int
out
mov
rclb
mov
cs
pop
xor
pop
int3
pop
lds
and
adc
pop
and
xor
cltd
or
cwtl
sbb
scas
ss
aas
iret
js
int
inc
mov
fistl
pop
pushf
hlt
fcompl
adc
cltd
es
pop
ret
cmp
ret
push
insb
frstor
shlb
decl
mov
pusha
nop
stos
cmp
daa
xor
push
inc
jmp
lcall
ss
mov
xchg
mov
sbb
mov
imulb
push
xchg
mov
into
test
add
add
enter
jg
mov
and
out
mov
sbb
insl
xchg
jecxz
add
mov
ds
sub
loope
or
pop
test
fsub
mov
and
push
repnz
lret
xlat
aad
mov
insl
and
lds
adc
outsb
pop
and
movsb
jae
stos
arpl
data16
scas
sbb
jl
aaa
xor
int
mov
orb
aad
fwait
hlt
xchg
clc
xor
enter
push
fimuls
adc
aad
jae
push
cmp
shlb
push
inc
push
out
push
xor
lret
jnp
pop
cmc
jmp
pop
sub
imul
mov
lcall
pushl
push
mov
out
mov
ds
dec
mov
xchg
push
imul
or
xchg
cmp
sbb
cmpsl
or
lods
or
in
fstps
dec
loop
ret
mov
jmp
sahf
ret
inc
xchg
mov
imul
pushf
ljmp
clc
jnp
xlat
cmp
ljmp
and
testb
je
dec
inc
and
fmul
mov
out
out
pop
faddl
sbb
movsb
in
push
inc
pop
ss
cmp
cmp
loop
xor
xchg
xlat
or
test
or
js
sub
inc
jb
leave
ljmp
and
adc
jo
adc
leave
jl
fldl
jbe
xchg
mov
mov
fmulp
pusha
imul
pop
fidivrl
jp
dec
and
sbb
data16
dec
dec
xchg
pop
xlat
xor
faddl
loopne
cmp
mov
loope
movsl
in
push
and
movsl
int
mov
inc
dec
out
mov
scas
mov
jno
aas
in
rcrb
dec
in
mov
mov
add
cmp
out
jbe
subb
repnz
xor
xor
dec
xor
pop
stc
add
out
stos
cmc
xchg
xor
xchg
and
xchg
iret
or
icebp
xlat
mov
xor
lea
int
fldl
sbb
mov
push
ret
pop
mov
lock
adc
mov
scas
leave
adc
iret
push
stc
int
inc
into
call
loope
fnsave
loopne
out
mov
push
inc
mov
pop
add
aas
data16
clc
sub
jg
mov
lret
inc
cmp
cmpsb
sbb
bound
cmc
in
leave
adc
xor
pop
sbb
cvtps2pd
lods
and
cmpsb
push
mov
pop
mov
ret
iret
sub
js
lds
pop
adc
jno
scas
mov
clc
les
lcall
push
rolb
lods
inc
in
in
jbe
pop
repnz
pop
cld
sarb
or
pushf
jg
sub
inc
sbb
mov
mov
dec
cmp
add
sbb
iret
push
mov
pusha
mov
shlb
push
mov
push
mov
adc
and
jns
push
je
ficoms
and
aas
movsb
out
in
dec
jns
loope
push
jge
and
fsubl
inc
mov
imulb
xchg
pop
into
out
dec
int
cmp
movsb
add
fimuls
inc
in
call
xchg
rol
cmpsl
sbb
lret
sbb
fadds
add
dec
push
shll
jbe
fsubr
adcb
insl
adc
pop
rorb
repnz
ss
sbb
movsl
pop
aas
push
test
nop
lret
add
adcb
cmp
arpl
mov
clc
test
adc
out
mov
rcll
call
imul
lea
lods
dec
xor
out
jno
push
mov
inc
shlb
pusha
inc
add
jne
mov
jo
ds
sub
add
xlat
repz
mov
cs
popf
or
jge
iret
sbb
sbb
int3
cmpsl
jb
jl
ds
dec
and
or
inc
push
loope
scas
mov
xchg
jmp
movsb
or
fwait
add
ret
or
lret
and
bound
push
or
add
aaa
pop
push
popa
jo
sbb
adc
sub
call
out
cmc
jecxz
push
rolb
mov
decl
in
sti
inc
mov
xchg
sbb
mov
lret
jge
std
mov
js
or
push
filds
movsl
mov
in
xchg
xchg
inc
xchg
jle
mov
rcl
faddl
xchg
push
inc
mov
xorl
aam
arpl
ljmp
fisubrs
ljmp
fisttpl
loopne
pop
int
lret
mov
and
cld
pop
fisubl
mov
and
sbb
out
ret
lret
add
jl
aaa
cld
mov
push
out
pop
adc
sahf
addr16
int
lock
inc
shl
ja
lret
cwtl
out
xchg
sbb
xor
xor
pop
mov
call
dec
inc
or
inc
les
xor
fists
pop
fcompl
ljmp
mov
push
aad
es
mov
fucomi
push
pop
or
push
aaa
into
into
inc
movb
fdivrl
mov
mov
push
mov
pop
call
dec
int3
or
push
test
jecxz
pop
pop
xor
adc
or
sbb
push
out
aam
daa
inc
pop
add
push
sti
xor
int
int3
loop
divl
pop
dec
xchg
loope
mov
fwait
movsb
xor
mov
push
arpl
daa
dec
adc
ds
adc
sar
sub
sub
jmp
sbb
mov
mov
xor
dec
cmp
add
add
sahf
dec
jg
std
sub
cli
adc
cmp
xor
mov
in
jl
lret
cli
and
pop
inc
mov
pop
mov
add
dec
cld
out
jae
pop
sti
sbb
mov
and
jp
fadds
sub
sub
xor
sub
pop
and
je
pop
cmp
lods
cld
es
jp
out
pop
pop
lahf
xchg
fs
cs
in
dec
cltd
ret
imul
in
lods
dec
ljmp
xchg
jo
xchg
hlt
cmp
cmp
in
fmull
inc
icebp
roll
cwtl
inc
es
or
out
les
in
push
lock
stos
xchg
sbb
lcall
aam
fistps
in
sub
adc
dec
push
mov
fdiv
mov
inc
sbb
fmull
fbld
jae
jmp
jg
rorl
stc
xchg
adc
mov
and
pop
cmp
add
mov
sub
cmp
pop
fcmovnbe
ficoml
iret
ret
cmp
test
rcrl
scas
cld
jmp
dec
push
mov
push
mov
mov
das
repnz
imul
mov
sbb
in
sub
cmp
sahf
and
mov
sub
ss
enter
jmp
push
out
fwait
sub
lret
std
sbb
dec
add
or
lods
pop
loopne
push
lds
pushf
pop
sarb
bound
adc
pop
inc
rclb
std
inc
mov
xor
out
cs
cli
pusha
sbb
cmp
jnp
xchg
mov
jae
add
pop
add
test
cmpb
iret
roll
leave
movb
je
out
and
mov
cld
xchg
mov
divb
mov
inc
or
adc
clc
cmp
mov
dec
dec
mov
pop
aam
mov
xlat
fstpt
stos
out
shr
ljmp
add
je
jnp
shll
lahf
push
mov
std
push
hlt
xor
std
push
test
ljmp
sti
leave
int
es
mov
aad
lds
cmp
out
xchg
testb
mov
mov
push
mov
xlat
push
push
jae
stos
into
fwait
jle
xlat
jmp
dec
xchg
out
dec
imul
xchg
mov
adc
jge
mov
jne
sbb
sub
sub
fiadds
ror
aaa
movsb
cmpb
adc
movsl
faddl
js
imul
sbb
cmp
pop
stos
push
aam
clc
jle
jecxz
movsl
rolb
xlat
fcmovne
xlat
test
or
jo
xlat
sahf
mov
pop
outsl
mov
jbe
out
and
aaa
lcall
icebp
jbe
mov
xor
cmc
js
imul
and
aas
je
sub
pop
dec
xchg
ret
js
jg
add
or
xchg
ljmp
cltd
cmp
mov
dec
push
imul
or
test
lds
push
mov
fisubs
mov
popa
loopne
pop
inc
and
mov
xor
push
daa
aad
dec
xor
adc
sub
xor
dec
es
imul
lods
clc
rcrb
mov
xchg
push
insl
push
or
mov
dec
jno
adc
mov
jl
pop
and
pushf
mov
das
sar
xchg
movsl
pusha
gs
lds
outsb
daa
push
shlb
inc
lock
outsl
in
dec
gs
test
sub
fcmovne
push
push
leave
mov
dec
mov
xorl
mov
nop
mov
in
fdivl
out
fwait
lahf
loop
lea
in
and
xchg
mov
decl
mov
add
dec
inc
mov
jb
sbb
leave
lea
xor
dec
dec
inc
pop
pop
cs
in
jge
daa
icebp
cmp
pop
out
sub
xor
insb
cmp
dec
insb
adc
mov
cmp
adc
push
dec
shlb
mov
cmpsl
jbe
pusha
inc
jmp
pop
rcr
jbe
out
jmp
xchg
or
jmp
push
imul
pop
xchg
imul
or
das
xchg
je
call
mov
pop
mov
cmp
push
push
imul
fs
fists
stc
sbb
insb
jnp
adc
xlat
mov
imul
fists
fcomip
sahf
cmp
mov
cmp
cmp
js
jnp
bound
ja
jl
or
roll
and
mov
sbb
sub
push
push
push
scas
mov
cmpsb
sub
jl
inc
push
jae
shlb
xor
fimull
and
lods
out
mov
loop
std
js
sbb
fistl
imul
call
pop
or
mov
test
jb
dec
xchg
sbb
dec
shl
loope
jle
arpl
mov
popf
or
sub
in
mov
adc
clc
daa
scas
movsl
xchg
adc
cmpb
inc
shufps
imul
shlb
ficomps
outsb
push
addb
cmp
cmpsb
rcll
jp
scas
insl
and
mov
mov
pop
popa
daa
insl
sar
in
call
scas
mov
daa
ret
out
enter
les
adc
icebp
jae
push
jno
and
adc
imul
dec
pop
mov
and
add
int
mov
xchg
mov
shll
push
mov
or
ja
mov
gs
cwtl
std
mov
lds
fidivl
filds
and
mov
arpl
outsb
int3
adc
add
push
or
pop
out
pop
mov
outsl
loopne
rorl
fdiv
imull
sbb
cmp
jae
xchg
add
push
mov
sub
jp
aad
cmpsl
cmp
xchg
lock
notl
sbb
sub
lea
pop
jmp
jecxz
xchg
cmpsb
les
jg
and
loopne
jle
jl
fs
popf
mov
cld
imul
int3
add
inc
or
iret
mov
fstpt
das
sub
mov
mov
pop
sub
int
jmp
adc
jb
xor
mov
xchg
mov
sbb
xchg
dec
adc
xor
xchg
sub
hlt
jecxz
stos
fnstcw
int
loope
aad
dec
cs
jmp
add
jle
mov
xor
fimull
or
lahf
mov
js
scas
daa
jge
mov
mov
sar
push
stc
cmc
lods
xchg
and
test
add
adc
fisubrl
icebp
add
outsb
lret
mov
test
pop
sbb
ja
dec
jmp
cmp
mov
daa
lea
cmpsl
std
jmp
imul
rcrl
or
ljmp
push
xchg
pop
cmp
stos
dec
pop
and
cwtl
pop
sub
and
aam
push
les
ret
ret
xor
fisubrl
adcl
mov
lods
movsb
popf
popf
out
movsl
into
test
push
mov
push
sbb
lret
pop
mov
and
out
sub
or
outsl
in
lret
rorl
mov
fstps
mov
pushf
gs
stos
sub
pop
pop
and
inc
pushf
add
jmp
in
enter
pop
or
cmp
sbb
add
sub
or
cli
into
sbb
xchg
sarl
jne
and
xchg
jmp
inc
fld
xor
ret
out
jno
mov
pop
popa
and
cmp
stos
add
adc
add
xchg
fsubrl
lret
es
test
xor
or
es
push
insl
pop
loopne
bound
jb
or
loopne
cmpsl
dec
sub
out
nop
mov
xlat
jnp
hlt
mov
sahf
imul
sub
jg
sub
mov
mov
scas
dec
outsl
mov
dec
fcompl
cmp
cmp
bswap
cmpsl
lock
and
mov
mov
sbb
pop
mov
sti
add
fs
pop
jne
cmpsb
nop
mov
push
pop
dec
add
nop
and
add
push
lret
divl
ficomps
aas
aas
lods
xlat
xchg
dec
push
test
pop
adc
js
insl
andb
out
push
mov
pop
outsl
scas
add
loop
fs
sub
in
in
or
out
adc
sub
cmpsb
inc
ss
push
repz
jnp
adc
pop
add
idivb
fs
sub
lret
bound
push
dec
mov
xchg
mov
dec
sub
push
mov
inc
gs
std
insl
xchg
fdivrl
pop
mov
sarb
jbe
in
sub
nop
loopne
filds
jne
jmp
iret
mov
pop
mov
sahf
test
push
dec
je
lret
cs
jbe
inc
and
pop
stos
jp
inc
mov
popf
jecxz
ret
imul
inc
sub
subb
shll
loope
dec
xchg
xchg
int3
sahf
mov
push
sub
lahf
aam
into
add
ss
xorb
mov
inc
or
ja
adc
fs
jmp
shll
sub
iret
shll
xor
sbb
ror
in
mov
sbb
or
stos
mov
or
push
sbb
mov
bnd
mov
lret
adc
mov
aam
subb
not
xor
icebp
lods
in
ds
test
inc
aaa
xor
mov
outsl
cmpsl
loop
out
mov
or
mov
pop
stos
mov
fcmovnbe
addl
std
and
bound
jg
mov
movsl
jns
ds
push
add
movsb
lock
dec
pusha
push
jl
and
in
int3
inc
cltd
sbb
or
xchg
xor
and
cmpsl
xor
jp
outsb
sahf
xchg
xor
scas
stos
sub
inc
ljmp
ss
movsl
mov
xchg
pop
std
repnz
or
mov
popf
xchg
test
jg
imul
mov
inc
arpl
outsl
loope
pop
mov
into
mov
or
stc
xor
pop
mov
and
push
mov
mov
jo
mov
jmp
and
scas
pop
xchg
adcb
add
sub
ljmp
inc
cs
jnp
push
repz
dec
adc
or
jno
fs
push
cmp
jp
js
pop
mov
call
pxor
je
jnp
pushf
mov
pusha
cmp
pop
mov
lret
ja
adc
pop
icebp
xchg
out
hlt
or
int3
sub
fstpl
int
cmp
mov
in
jmp
or
in
into
repnz
leavew
aas
xchg
jae
ds
mov
dec
outsl
ja
inc
and
jle
imul
pushf
and
iret
pushf
xor
fwait
jle
movsb
mov
scas
xchg
inc
add
mov
sbb
push
mov
in
pop
xchg
cs
mov
xlat
jl
sti
call
sarl
inc
jnp
jnp
push
fnsave
xchg
scas
fstpt
jbe
dec
test
test
test
or
outsb
xor
scas
add
and
leave
sbb
movsb
aaa
push
arpl
mov
outsb
iret
movsl
push
mov
in
mov
mov
imul
iret
jb
outsl
loopne
mov
pop
inc
rcrl
add
subb
and
mov
mov
mov
push
xchg
lret
imul
lock
repz
in
out
aas
sub
inc
fucomp
push
stos
sbb
ss
cmp
cmp
xchg
inc
cltd
inc
loopne
jle
addr16
pop
test
subl
addr16
shl
lcall
push
dec
push
fdivp
push
fmuls
adc
roll
sbb
je
inc
sbb
xchg
fisubl
out
inc
lcall
in
lret
shlb
sar
outsb
aas
inc
ja
inc
inc
push
addr16
stos
or
in
cmpsl
xchg
pushf
mov
mov
cmp
mov
fs
inc
mov
test
or
gs
pop
add
lds
mov
push
scas
dec
std
dec
dec
scas
jns
hlt
and
mov
fistpll
stos
xchg
jl
movsb
adc
cmp
mov
mov
mov
or
xorl
push
into
nop
push
shll
pop
fcmovnbe
sbb
mov
dec
cmp
stos
push
jbe
js
sub
ss
out
mov
int3
pop
sbb
or
xlat
imul
in
push
outsb
cmp
repnz
mov
and
in
ret
xchg
dec
mov
xchg
cmp
jmp
in
mov
push
inc
and
cltd
lcall
cmp
shl
ljmp
xlat
push
or
int
shrl
in
loopne
adc
stos
je
adc
ds
jp
outsb
test
mov
cmp
iret
add
pop
push
bound
lds
sbb
sti
sub
ss
ds
mov
ds
test
insb
mov
cmp
mov
inc
pushf
repz
fstp
lret
scas
adcl
mov
sbb
fcompl
fsubrp
adc
cmpsl
popf
outsb
mov
out
shlb
xchg
push
pop
lea
ja
xchg
cwtl
mov
jp
push
test
cmp
push
int
jl
xchg
cli
pop
and
xchg
hlt
add
and
mov
inc
push
ret
pop
jb
and
xor
arpl
cmp
and
aaa
pop
icebp
pop
inc
xor
mov
jo
dec
outsl
cmp
push
push
mov
mov
pusha
xorb
or
or
mov
in
xor
xchg
int
adc
scas
mov
inc
dec
fs
xchg
pop
mov
movsl
push
push
add
xchg
mov
xor
neg
mov
ljmp
or
sarl
mov
in
into
mov
cmp
push
into
xchg
sbb
pop
inc
cltd
cmp
out
adc
pop
jo
pop
out
ds
xor
and
dec
out
aam
rclb
adc
dec
and
lods
in
mov
sub
pop
pop
pop
sbb
dec
xlat
jbe
out
aas
das
jo
mov
adc
inc
neg
jnp
adc
cmp
push
fwait
jno
xchg
adc
dec
adc
cwtl
adc
imul
push
stc
cmp
push
push
push
and
push
lds
sub
xchg
dec
or
add
popa
lret
call
dec
fwait
xor
jo
in
imul
push
add
push
addb
je
icebp
stc
flds
iret
sbb
xor
adc
enter
pop
popf
fstpl
xchg
loop
fistpll
sub
cwtl
mov
stos
and
push
lods
and
xchg
xchg
mov
data16
pop
xor
fs
repnz
sbb
mov
fidivl
aam
aaa
mov
stos
sbb
mull
adc
dec
addr16
jecxz
xchg
std
out
sub
mov
sub
push
outsl
mov
push
shrl
pop
mov
aam
jle
pop
fbstp
sbb
xor
mov
popa
sbb
int3
gs
push
push
ret
enter
mov
test
out
call
iret
icebp
cmp
xor
cli
aad
sbb
mov
jne
and
out
xor
add
outsl
xor
aam
or
ljmp
push
xchg
and
fs
cmp
adc
movsl
add
mov
push
out
gs
int
out
stc
inc
add
mov
lret
loopne
into
outsl
mov
or
and
je
mov
cwtl
cs
push
cmpsl
int
cwtl
lds
mov
incl
mov
pop
xchg
jmp
lret
pop
lds
les
mov
jno
outsb
dec
jmp
mov
cmp
dec
pop
call
test
div
mov
sbb
dec
jb
pop
fldenv
addr16
or
lea
push
xor
outsb
setp
movsl
jmp
aad
iret
into
mov
add
out
testb
jne
out
jno
mov
pop
push
xchg
jp
mov
lret
sti
sbb
rep
or
add
add
nop
inc
jmp
xor
push
add
jno
out
sub
jmp
sarl
mov
lock
cltd
sub
fidivrs
push
cmpsb
xchg
aad
xchg
jle
add
imul
call
mov
loopne
jne
jae
push
dec
stos
add
mov
jl
repz
jno
adc
cs
push
push
leave
gs
jp
lock
push
push
mov
jb
jg
roll
cmc
and
jmp
inc
nop
stc
arpl
add
dec
lock
push
roll
stos
cmpsl
xchg
pop
cmpsb
pushf
shl
adc
pop
rcl
add
jge
popl
and
addb
pop
dec
adc
rol
es
cwtl
js
insl
call
leave
into
in
fwait
mov
inc
cmpb
sub
lods
fadds
ljmp
jl
dec
fidivrs
mov
stos
das
gs
add
dec
jle
cmp
pop
dec
divl
dec
cvttps2pi
imul
pop
jae
hlt
sarl
jnp
pop
cmp
xorps
test
xor
loopne
mov
cltd
mov
out
jg
les
sbb
fidivs
dec
push
push
lea
adc
test
mov
xorb
into
push
adc
push
mov
sbb
xchg
movsl
push
push
xor
xchg
test
mov
adc
adc
outsb
psrad
mov
jge
xor
add
rcrb
scas
sub
hlt
cltd
jb
loop
into
mov
outsb
fwait
jg
aam
enter
inc
out
adc
adc
add
jmp
mov
in
fimuls
jns
jbe
sub
jb,pt
sbb
pushl
jb
adc
inc
jne
dec
lahf
bound
mov
out
inc
and
pop
adc
aaa
pop
pop
cmp
call
xchg
mov
mov
adc
aas
cld
dec
mov
inc
ds
mov
imul
hlt
jge
sbb
stos
data16
pop
inc
or
push
jbe
rcl
mov
shll
add
mov
mov
lahf
outsb
rolb
movsl
shrl
sub
notl
pop
enter
or
fs
es
cmp
push
ret
inc
gs
mov
adc
adc
stc
stos
or
test
scas
pop
mov
out
sti
lahf
mov
out
jno
adc
mov
mov
or
int3
in
call
and
test
mov
jg
jb
mov
pop
aas
hlt
and
pusha
xor
out
cmp
insl
jecxz
in
cmp
jbe
sbb
out
cli
in
or
add
pop
jl
cli
add
pop
enter
and
scas
out
in
mov
daa
mov
dec
fcmovne
sub
pusha
pop
and
into
lds
or
inc
test
dec
ljmp
loopne
fcomi
dec
mov
inc
push
in
jno
and
ficoms
xchg
dec
je
fwait
jns
adcl
cmpl
gs
add
cmp
cmp
jmp
add
aam
push
jle
inc
cmpsl
and
xor
and
cmp
mov
testl
mov
inc
xorl
xchg
ret
loop
leave
or
mov
jle
adc
and
inc
cmpsb
mov
out
leave
add
push
sub
in
rcrb
xchg
or
and
ror
jmp
xchg
ficompl
push
xchg
push
test
dec
movsl
imull
adc
rcll
imul
std
mov
push
call
xor
sub
sub
push
subl
cli
inc
xchg
les
cmc
jge
in
testb
imul
cs
sub
sti
push
insl
xchg
jle
push
adc
movsb
popf
mov
aaa
sbb
sbb
xor
push
inc
pushf
mov
mov
movsl
xchg
and
dec
and
pop
aaa
ret
rol
into
cld
notb
jno
test
pop
sub
push
mov
lods
aas
inc
ljmp
mov
jmp
icebp
pusha
push
xorb
jae
adc
mov
outsl
mov
gs
test
fsubp
mov
dec
pop
gs
ret
call
stos
add
stos
jno
fadd
mov
dec
lcall
mov
push
adc
or
and
movsb
repz
pop
arpl
cli
test
sub
mov
jp
jnp
pop
cmpsb
popf
test
xor
out
pusha
xor
lcall
scas
in
call
flds
out
xchg
fisubrs
lcall
jae
movsl
and
hlt
outsb
mov
and
push
jecxz
push
jge
movsl
dec
push
lcall
gs
pushf
hlt
inc
fwait
xchg
stc
leave
xchg
leave
add
mov
push
into
mov
xchg
mov
sub
fists
push
das
push
addr16
sbb
xchg
lcall
xor
push
shr
mov
outsl
dec
inc
adcb
mov
inc
jge
xor
test
xchg
push
lret
popf
mul
sub
dec
sub
xlat
jmp
cmp
pop
adc
and
packssdw
int3
push
int3
dec
jo
lods
ret
xor
and
add
sub
dec
arpl
adc
pop
sti
dec
dec
or
fstps
add
sub
mov
push
sbb
repnz
lods
pop
lds
inc
mov
xchg
xchg
insl
call
add
push
movsl
inc
dec
and
pushf
or
loope
push
xchg
stos
bound
cltd
or
jb
inc
inc
enter
or
or
sti
into
sub
insl
xor
jmp
push
mov
lock
call
imul
xor
in
sub
addr16
cltd
cmp
push
push
and
add
movsb
sub
push
xlat
add
add
sub
jnp
xor
push
pop
pop
dec
mov
jmp
call
fdivs
pop
xor
nop
dec
ds
sbb
push
push
test
inc
xlat
and
inc
push
data16
sub
jle
mov
add
xchg
sarl
inc
popf
mov
cli
es
imul
mov
push
jl
stc
or
test
sub
cld
jne
aam
rclb
hlt
dec
cmp
int
jl
mov
cs
lcall
jne
or
fnstsw
mov
push
in
ja
dec
shll
cmc
les
jne
dec
jmp
test
jb
pop
je
push
std
pushf
mov
negb
xchg
cli
xchg
cmp
mov
imul
pop
xchg
call
loopne
xor
test
xchg
movsb
dec
add
dec
mov
ljmp
fisubrl
cli
mov
mov
cmp
mov
shrl
pop
jns
clc
xchg
lret
or
mov
dec
ljmp
or
shlb
stos
dec
sbb
sub
pushf
cld
jne
xor
lcall
int
mov
sbb
into
ljmp
sbb
cmpsb
stc
dec
in
ret
sub
pop
sbb
aad
scas
cmp
imul
jmp
and
movsl
loop
xchg
stos
adc
les
cmp
outsl
ret
outsb
inc
dec
outsl
shll
xor
mov
sub
or
fsubrp
rol
cltd
lahf
lea
addb
adc
mov
out
lret
dec
xor
pop
jb
jo
scas
push
lods
xorb
cmc
sbb
fdivrs
dec
cmp
mov
negb
mov
imul
addr16
inc
cmpsl
loope
outsb
push
xor
cwtl
push
add
jnp
add
lods
push
pusha
ret
cmp
xchg
cmc
push
mov
pop
lret
jmp
mov
inc
mov
and
cmpb
and
incb
daa
jle
xchg
call
addr16
stos
loop
sub
jnp
hlt
addr16
dec
arpl
in
mov
test
sbb
jp
pop
adc
lcall
sbb
inc
mov
out
jbe
ret
mov
xchg
mov
xchg
dec
add
ja
outsb
imul
inc
out
inc
push
repz
pushf
int3
xchg
je
mov
xor
dec
dec
test
push
sbb
sub
into
and
xlat
insb
push
pop
testl
aaa
hlt
rcr
cmp
push
shrb
cli
xchg
add
mov
push
cmp
lds
add
pop
dec
pop
mov
xlat
push
andb
imul
or
mov
inc
or
sub
cmpsb
je
xchg
cmpsl
fldcw
push
ljmp
insb
sbb
fisubrl
cmp
gs
add
cs
lea
jmp
cmp
add
data16
ret
push
dec
adc
rcr
loope
or
ss
iret
mov
insb
xchg
pop
or
sbb
mov
sub
and
das
stc
dec
mov
arpl
arpl
mov
xchg
outsb
aad
movsl
mov
cwtl
push
add
xchg
ja
adc
inc
push
int3
mov
mov
or
mov
xor
sbbb
push
imul
dec
in
call
cmpb
std
bound
sub
cmc
push
xor
filds
xor
sbb
lret
adc
push
sbb
inc
sbb
ds
sbb
xor
orl
mov
mov
jge
pushf
sub
fstps
xchg
decb
ss
int3
rorl
dec
sahf
rcr
pushf
orb
sahf
push
mov
cli
fists
push
cmpsl
shrw
sub
sbb
xor
adc
xor
aaa
loop
mov
imul
insl
fcmovbe
push
fisubrl
ficomps
xor
es
aas
nop
inc
xchg
inc
push
daa
subb
enter
xorb
rol
mov
xchg
mov
mov
pop
mov
mov
push
jecxz
enter
push
shr
int3
ss
xor
mov
cmp
js
mov
rorb
add
pop
shrl
in
lock
scas
cs
pop
sarl
out
xchg
out
fucomip
mov
test
hlt
jb
mov
sbb
hlt
sub
shll
loope
gs
outsl
incb
jbe
push
sbb
mov
and
cmc
cmc
call
add
dec
adc
lea
dec
and
dec
popf
les
in
or
xchg
ja
mov
leave
out
jp
xchg
cmp
leave
icebp
ja
mov
lret
roll
add
and
cmp
imul
mov
test
add
sbb
test
stos
pop
fcompl
dec
shll
gs
jne
sub
xor
cmpsl
fisubs
jge
mov
arpl
test
pop
stos
inc
jl
nop
sub
or
push
jg
arpl
movsb
pusha
add
sahf
add
andl
adc
incl
scas
mov
jg
mov
push
add
sub
in
nop
loope
in
cmp
inc
cli
cmpsl
andl
push
ljmp
sbb
pushf
jecxz
in
into
xchg
loop
lods
cltd
inc
repnz
xor
das
mov
cmpsb
ja
xor
push
push
xchg
dec
enter
and
xchg
pop
les
fdivrl
repz
ficompl
scas
inc
icebp
jp
out
fwait
nop
mov
dec
xchg
dec
cltd
cmc
and
sbb
cmp
mov
iret
cmpsb
es
dec
stos
lea
icebp
jne
bound
xor
and
xchg
scas
jge
push
aas
push
in
push
mov
push
xchg
les
lea
xchg
scas
dec
jmp
leave
or
cwtl
xor
adc
add
cwtl
mov
inc
jbe
pop
ret
push
ja
inc
nop
jmp
cmp
adc
dec
mov
pop
iret
insl
sbb
xchg
outsl
pop
cmp
lret
nop
mov
push
jb
fwait
ljmp
movsb
clc
int
dec
dec
rcll
lcall
jmp
push
outsb
ss
ljmp
movsl
popa
fnstenv
testl
stos
dec
insb
inc
loope
dec
int
push
dec
stos
das
mov
cmp
stc
mov
jo
repz
dec
cs
bsf
pop
cli
insb
mov
sub
dec
leave
mov
movsl
dec
mov
rcr
test
mov
jbe
loope
jae
inc
nop
mov
imul
lds
or
jno
addr16
ja
jnp
or
sbb
clc
xchg
test
imulb
hlt
sbb
mulb
xchg
fwait
push
fnstenvs
jmp
dec
call
inc
adc
mov
cmp
ds
out
jnp
icebp
ds
xlat
pop
mov
enter
shlb
push
push
call
inc
and
cmc
xlat
leave
mov
sub
inc
testl
push
int
enter
inc
cmp
sub
sti
dec
scas
sbb
aam
xchg
add
fld
fs
sub
push
mov
fwait
cmpsl
pop
pop
dec
nop
ss
push
xchg
sbb
mov
and
pop
xlat
inc
jbe
pop
rorb
pushf
push
add
jle
xchg
jns
pop
movsb
rorl
fidivrs
jmp
jl
cmp
in
pop
inc
adc
mov
mov
add
in
fstpt
negb
jo
mov
out
mov
push
push
dec
jle
aaa
lea
xchg
fwait
aas
stc
jge
imul
add
mov
pusha
mov
ffree
cmp
mov
mov
mov
xlat
je
add
insl
fwait
pop
call
in
insl
in
inc
flds
inc
out
mov
cmpsb
fsubr
xchg
jl
pop
sub
inc
pop
inc
pushf
mov
ja
into
jge
sbb
jne
sub
inc
enter
aas
inc
xchg
jnp
or
jbe
cltd
scas
sbb
xchg
xor
rcr
xor
outsb
stc
lret
leave
mov
ret
sbb
idivb
dec
sbb
lcall
push
sbb
push
sbb
mov
lret
mov
paddsb
xchg
in
jge
orl
rcrb
mov
sbb
jbe
push
imul
outsb
dec
jmp
xor
xor
lock
xor
aam
add
cmpsl
sbb
sbb
outsb
xchg
xor
fisttpll
std
pop
sahf
or
mov
loopne
test
icebp
add
aad
aam
mov
jge
dec
rclb
test
imul
add
dec
pop
ljmp
push
cwtl
mov
leave
mov
push
fldcw
mov
mov
sub
aas
and
sub
dec
sub
mov
popa
xor
in
jg
and
sub
mov
sbb
sbb
xchg
inc
fsubs
jo
push
clc
cmp
mov
jo
shrl
mov
loope
insl
mov
je
jmp
cmp
std
popl
lahf
mov
dec
add
fbstp
jnp
cmp
jge
adc
pop
sub
mov
xor
mov
mov
test
aas
aas
cmpb
sbb
cmp
and
int
loop
cmpsl
nop
icebp
add
popf
lods
sbb
mov
jo
out
sahf
fistpl
stc
enter
pop
dec
cmpsl
adc
addl
movsb
and
and
arpl
testl
cmpsl
mov
inc
lods
mov
xor
and
int3
dec
push
int3
nop
inc
add
xchg
push
mov
mov
int3
mov
sub
pop
xor
leave
sub
lahf
aad
das
aam
aad
or
inc
adc
mov
sbb
and
aas
jae
push
sub
jae
push
or
adc
pushf
mov
into
jbe
ljmp
sub
jbe
push
stos
test
loop
and
lods
cwtl
mov
xchg
jo
fucom
inc
popf
les
ret
stc
in
mov
adc
test
pop
fisttps
lods
push
xchg
inc
xorb
sbb
dec
jp
mov
jae
cmp
cmp
fimuls
and
xchg
mov
cmp
test
loop
incb
add
adc
sub
aas
nop
xor
pop
jo
xchg
pop
out
sbb
adc
mov
mov
jmp
cmp
xor
mov
imull
xchg
or
js
outsl
xchg
cmp
sub
push
sbb
and
pop
iret
test
les
cli
ficoml
bound
adc
xchg
jecxz
icebp
mov
cmpsl
out
pop
xchg
scas
dec
es
and
sbb
lret
sti
xor
mov
inc
ret
and
push
xchg
not
xor
xor
cmp
aad
test
mov
jge
inc
or
pop
fdivrp
sbb
mov
mov
push
and
inc
popa
mov
addr16
xchg
jo
adc
mov
xor
das
and
inc
addr16
cmpsl
ss
fidivl
jecxz
jnp
sarl
mov
popf
fidivrs
xlat
xchg
jne
pop
add
push
movl
jb
test
mov
sbbb
scas
dec
shlb
and
lss
or
imul
push
jmp
in
xor
pop
push
or
xchg
pop
out
enter
arpl
adc
shrl
test
cmp
or
int3
inc
outsb
fsubr
rorl
sub
cmp
push
loopne
jp
cwtl
xchg
lcall
dec
mov
in
mov
push
xor
call
fs
adc
pop
adc
add
stos
mov
test
xchg
cmp
fs
inc
add
rolb
lahf
mov
xor
push
jmp
push
decl
adc
testl
pop
in
aas
into
pop
and
dec
in
ret
fisubl
xor
sub
arpl
inc
dec
imul
fimull
enter
mov
imul
shlb
sbb
push
bound
je
mov
arpl
push
out
lcall
sbb
mov
stos
mov
and
push
pushf
add
ja
jnp
lea
lahf
sbb
sbb
xchg
mov
mov
enter
in
xchg
cld
inc
pop
mov
push
test
mov
in
mov
es
jne
mov
xchg
push
iret
inc
mov
cltd
repnz
push
out
mov
pusha
outsl
sti
jb
clc
and
sbb
sbb
xor
mov
sti
outsb
inc
jns
ret
inc
daa
aam
nop
xchg
adc
rolb
add
mov
sar
roll
or
sub
mov
sbb
aas
add
inc
lahf
mov
icebp
mov
dec
jmp
cmpsl
addb
xchg
xor
or
lret
iret
ja
dec
stc
push
fcoml
call
push
sub
fisttps
sti
xchg
mov
icebp
ljmp
imul
cmpsb
sti
ds
lret
outsl
rcrl
filds
pop
aas
and
mov
nop
push
dec
stc
lea
inc
fcoml
js
test
xor
xor
pmulhuw
loop
fwait
xor
cmp
adc
xchg
and
sbb
lahf
movsb
mov
dec
fcoml
fs
xchg
leave
aaa
cmp
loopne
iret
outsb
cmp
dec
fs
push
push
shrl
cmpsb
lahf
inc
js
das
pop
pop
push
shll
and
xor
cmp
mov
stos
cmpsb
adc
cli
sub
cmp
test
add
push
or
jmp
xlat
cmp
mov
xchg
adc
mov
sbb
lods
arpl
jno
enter
aaa
outsl
sub
sub
xor
push
xor
out
inc
mov
fstl
mov
cmp
loope
ljmp
adc
js
jbe
xchg
and
jp
jmp
dec
mov
sub
std
inc
mov
fldenv
lcall
rol
gs
sub
bound
push
xor
leave
js
fisubrs
in
pop
pop
xchg
lea
and
or
out
xchg
adc
mov
cmp
mov
pop
adc
addr16
xor
and
lret
mov
fwait
aas
aam
scas
sbb
sub
mov
ds
jae
das
fwait
inc
mov
jae
pushf
mov
cmp
cmp
mov
aad
jno
cltd
inc
rolb
xor
mulb
cmp
xchg
dec
xchg
mov
mov
add
jbe
mov
ret
enter
rolb
sub
test
dec
dec
push
jns
mov
sbb
jge
cmpsb
mov
and
lds
sub
pop
cmp
test
loopne
sub
pop
mov
inc
enter
xor
pusha
jge
iret
fbstp
and
leave
lret
fmull
ja
mov
inc
fcomps
dec
add
pop
dec
push
rcl
cmpsb
imul
int
mov
mov
push
ret
mov
add
in
mov
ret
cmp
pop
ret
ljmp
imul
inc
mov
dec
or
fldcw
dec
repz
imul
pop
jl
mov
call
mov
sub
mov
aam
adc
push
xchg
js
outsl
movsl
jne
inc
cwtl
xor
int
sub
cmp
in
cwtl
xor
jge
mov
test
add
push
cld
rorb
inc
lahf
mov
pop
je
and
jp
jmp
jns
jmp
addb
sbb
push
dec
cmp
call
ss
stos
add
adc
lcall
and
loope
aad
and
fistpl
xchg
popa
inc
cmp
mov
insl
ret
add
add
mov
adc
jp
cmp
out
bound
xchg
nop
ret
mov
mov
sbb
repnz
push
mov
mov
push
mov
mov
xchg
mov
sub
std
cmc
ljmp
mov
cmc
xchg
add
sub
mov
jns
add
or
pop
mov
popf
outsb
loop
ret
pusha
inc
pop
pop
dec
pop
push
fnstcw
mov
add
lret
mov
fwait
dec
sahf
pop
adc
cld
or
mov
fwait
insl
test
mov
cmp
ja
iret
xlat
jl
icebp
test
stos
push
leave
add
jmp
xor
js
add
mov
mov
mov
lock
xor
enter
pop
xchg
cmp
or
dec
inc
cltd
andb
mov
lcall
cmpsl
jge
test
scas
mov
mov
jecxz
xchg
pop
pop
ss
lea
push
fcom
sbb
mov
inc
das
rorb
push
mov
push
or
lcall
sbb
sti
rolb
cmp
add
sbb
popf
mov
fs
xor
arpl
movsl
xsavec
push
cmp
or
arpl
push
lock
pop
push
nop
dec
rcrl
sbb
pop
daa
cld
adc
fidivl
lods
sub
leave
and
xorl
or
notb
hlt
leave
adc
adc
rclb
stos
movsl
inc
push
rclb
ret
int
mov
icebp
lods
js
movb
aaa
cmpsl
mov
orb
stc
push
std
into
or
mov
and
or
cmp
repz
roll
stos
sub
or
sub
jns
xchg
jle
insl
sbb
and
jae
fcmovnu
xchg
pop
mov
push
inc
jp
andb
in
into
jne
xchg
push
scas
enter
sar
sub
hlt
lea
xchg
add
sub
and
cmp
adc
jne
pop
xchg
das
fs
pop
in
jnp
scas
mov
fistpl
lret
and
jne
inc
mov
cmp
push
test
hlt
add
mov
dec
stos
push
pusha
test
mov
adc
mov
xchg
decl
adc
and
xlat
sahf
jns
xchg
icebp
ret
pop
inc
repz
jbe
aad
dec
lret
pop
dec
dec
dec
orb
sbb
jb
sbb
leave
jmp
and
xchg
in
cmc
test
rcr
push
sbb
sub
cmp
mov
int
sub
jae
sub
mov
aam
syscall
loope
mov
push
jb
xor
icebp
into
jg
ror
xchg
mov
int3
mov
inc
and
or
jae
sti
mov
pop
push
aaa
mov
rcll
aad
lahf
int3
mov
pop
xchg
mov
jb
jb
mov
xor
leave
dec
je
xchg
mov
sub
ficompl
sub
dec
xchg
lods
mov
test
or
sub
lock
out
xchg
in
add
sbb
pop
xor
mov
ret
out
andl
push
or
mov
pop
fiadds
outsb
jnp
mov
gs
or
call
outsb
lods
sbb
jne
lcall
test
aas
in
cmp
test
dec
adc
xchg
cmp
test
inc
movsl
lock
int3
push
cmpb
xchg
aas
push
stos
sbb
faddp
push
add
cmp
push
cwtl
sbb
enter
cmc
movsl
mov
andb
pop
mov
push
and
adc
xchg
in
cmp
fcmovnbe
popf
dec
fistps
pop
jle
push
jge
cmp
mov
or
xchg
mov
outsb
xlat
sub
mull
clc
or
adcb
push
jecxz
fisubs
fdivs
and
inc
inc
rclb
mov
xchg
sbb
dec
scas
cmp
test
and
cld
clc
rclb
scas
loop
fisubrl
sub
mov
push
push
push
cmp
push
adc
jp
popf
dec
and
int
cmp
test
xchg
andb
imul
jp
jno
loopne
mov
lods
stos
cmpsb
sahf
sahf
mov
mov
push
sbb
push
mov
inc
cltd
xchg
xchg
xchg
pop
ret
cmp
mov
cmp
push
insb
aam
js
lret
pop
call
adc
mov
or
inc
gs
mov
ficompl
dec
cmp
bound
sbb
cmpsb
jne
iret
aaa
clc
in
mov
pop
jl
jae
int3
loope
dec
cmp
adc
fmul
mov
test
pop
jbe
add
sbb
fcomps
push
ret
pusha
jnp
mov
in
push
lcall
xlat
pop
repz
sbb
data16
mov
mov
push
cmp
dec
and
or
and
mov
mov
xor
dec
loope
xor
cmpsb
jns
lods
fcoms
xorl
mov
jecxz
aam
imul
dec
pop
test
jnp
fdivs
ss
adc
or
sbb
lret
mov
mov
mov
lock
sbb
dec
or
popf
mov
inc
inc
jne
mov
mov
scas
imul
xchg
pop
std
adc
fwait
xchg
mov
adc
cmp
rcr
mov
add
push
mov
aas
mov
sbb
dec
cmp
mov
lcall
scas
inc
fisttpll
pusha
xchg
adc
pop
repnz
inc
sbb
lods
pop
testl
add
movl
xor
and
xchg
adc
mov
jne
mov
lret
dec
inc
xchg
movsl
cwtl
dec
int3
shrl
push
or
push
mov
sbb
xchg
adc
pop
addr16
jb
or
lret
or
sbbl
and
jnp
push
mov
cmp
test
xchg
aad
pop
mov
mov
out
cmpsb
andl
movsb
xchg
loope
insb
lds
xchg
repz
cs
pop
stc
mov
adc
rcrb
addl
mov
insb
stos
into
mov
or
mov
and
xor
data16
dec
push
cmp
cmc
insb
inc
add
cld
inc
xchg
mov
dec
jno
cmpsb
into
dec
xor
testb
sub
push
pop
cmc
cmpsb
xor
mov
dec
movsl
ret
jbe
in
cli
jecxz
adc
lods
sarb
test
mov
and
or
add
xor
subl
xchg
xor
cmpsl
stc
sbb
fyl2xp1
hlt
popa
xchg
lret
fsub
das
in
add
jnp
xor
popa
movzwl
loop
and
pop
ja
pop
mov
xchg
push
dec
mov
loop
inc
adc
aam
popf
sbb
push
and
push
pop
pop
stos
int
dec
cmpsb
sbb
fidivl
pop
fnstcw
push
mulps
add
je
cmp
int
imul
enter
inc
xchg
std
adc
iret
and
jbe
inc
int
int
xchg
or
movsl
mov
orb
popf
cs
mov
jle
sti
mov
loop
hlt
sub
addr16
dec
jns
mov
pop
push
xor
out
push
sub
mulb
pop
adc
bt
test
int3
add
inc
lahf
jb
aam
mov
or
ljmp
adc
inc
add
mov
mov
xlat
decl
xchg
cli
sub
je
sub
jnp
in
push
mov
fs
xor
adc
jmp
inc
xchg
and
icebp
mov
outsb
daa
sub
jecxz
push
movsl
push
push
push
shll
je
lods
inc
pop
and
jb
ret
cld
pop
pop
xchg
in
mov
mov
lds
mov
std
cmpsb
and
jp
mov
inc
test
iret
fldt
xchg
or
cwtl
icebp
xor
dec
icebp
enter
icebp
mov
pop
pop
mov
es
jmp
pop
mov
dec
jb
jge
push
pop
test
inc
lret
aam
push
hlt
fsts
or
enter
or
sbb
jo
outsb
jns
es
sbb
rcrb
imul
ds
out
jb
sub
ljmp
lea
mov
int
js
jne
inc
test
test
adc
iret
adc
jge
loopne
inc
test
imul
fcomi
cmpsl
dec
in
call
ljmp
hlt
andl
sti
adc
pop
pop
gs
mov
mov
dec
jmp
jecxz
mov
clc
leave
mov
or
xor
fnstsw
jno
adc
imul
test
in
test
or
mov
and
cmp
push
sbbl
fisubrl
jge
mov
add
xchg
push
in
insb
pusha
jbe
push
loope
fmull
jb
std
movsb
movsl
lret
daa
inc
movsl
adc
inc
inc
and
add
imul
adc
push
lea
hlt
adc
aam
ss
adc
xor
jecxz
aam
sub
icebp
add
jle
popa
mov
cmpsb
inc
jbe
push
cld
out
out
xlat
push
in
cmp
imul
add
pop
inc
mov
sbbb
cmp
fisttpll
pop
adc
push
lret
sub
popf
add
push
repnz
xchg
cs
sub
cmp
and
mov
outsb
add
sub
mov
jp
and
outsb
addr16
push
test
and
mov
pop
cmp
dec
cmp
mov
mov
mov
mov
aaa
mov
dec
data16
pop
pop
in
xchg
mov
scas
aad
push
mov
in
shrb
shll
loop
dec
enter
ss
sbb
xchg
daa
out
push
dec
sbb
cmp
out
data16
xchg
cmp
push
xor
mov
arpl
punpcklwd
add
aam
xchg
movsl
out
or
in
int
decb
repnz
sarl
push
sar
inc
xor
or
or
stos
sub
dec
jecxz
leave
adc
out
sbb
jp
xorl
push
lahf
les
sbb
shlb
cwtl
push
cmpsl
mov
fiadds
cwtl
and
rorb
aas
ror
adc
pop
and
test
setl
aam
in
loop
fs
not
outsl
insb
cmc
or
jge
cltd
pop
xchg
adc
in
outsb
dec
push
inc
clc
or
inc
inc
inc
push
mov
cmc
push
leave
add
lock
inc
loope
leave
mov
cmp
cmpsb
inc
insl
aam
fnstsw
push
rclb
int
fists
andb
int
ss
inc
inc
ss
pop
int
ds
in
int
in
and
inc
pop
or
stc
pop
inc
add
and
jnp
idivb
jb
sbb
sub
mov
sbb
pop
lahf
loop
xchg
ja
push
loopne
sarb
loope
xchg
cwtl
inc
dec
cmp
and
inc
xchg
data16
ljmp
and
movsb
jae
aam
jne
in
jbe
jbe
icebp
xlat
sbbl
xchg
jle
cmp
mov
movsl
into
jecxz
popf
pop
xchg
push
push
sub
push
rorb
testl
out
outsl
sub
inc
fsubs
adc
sbb
scas
shl
xchg
neg
cmp
dec
subb
leave
sbb
mov
push
aas
and
and
in
sbb
jb
jecxz
mov
dec
out
sbbb
cmp
outsb
clc
mov
cld
cld
cmp
push
lods
jb
ret
mov
icebp
xchg
xchg
fisubrl
int
aad
push
adc
xor
lock
lret
adc
adc
mov
test
add
adc
cmp
imul
pop
fstpt
jl
xchg
push
xor
mov
jns
xchg
add
ja
mov
lret
xor
jle
pxor
test
or
inc
scas
sub
mov
jbe
adc
sub
push
pop
jno
mov
lds
mov
push
je
jb
call
les
adc
adc
pushf
aaa
rclb
ds
sti
cmpsb
dec
mov
pop
fstpt
mov
mov
iretw
lahf
dec
dec
push
in
and
jnp
or
or
popl
pop
enter
pushf
inc
cwtl
int
test
add
js
repz
mov
out
test
mov
or
xchg
aas
and
mov
outsb
out
or
test
fildl
push
mov
dec
jl
jno
xchg
xchg
cli
jg
cmp
jge
pop
lret
jne
add
xor
mov
mov
pop
pop
add
xchg
in
es
jns
sbb
and
add
pop
dec
pop
icebp
ss
jle
cmpsl
adc
lret
jnp
out
outsb
test
dec
cmpsb
outsl
nop
xor
cmp
repnz
test
mov
add
stos
add
stos
imul
mov
mov
fadds
in
jnp
pushf
mov
mov
mov
aad
sbb
ds
xchg
xchg
in
aas
loop
jno
mov
cmp
sbb
jno
mov
testl
rcr
add
lock
nop
mov
jmp
mov
pop
jns
push
mov
ss
pop
int
test
pop
lods
or
push
test
in
pop
fimull
outsl
mov
scas
and
lds
dec
incb
lock
out
mov
adc
inc
cs
lcall
enter
mov
cmpsb
lret
add
jecxz
cltd
stos
xchg
mov
push
inc
xor
ja
test
lcall
sbb
in
sbb
xor
ja
sbb
icebp
and
jle
insb
jns
lret
push
xor
sar
or
jb
cmp
jno
popf
inc
addr16
stc
adc
mov
and
push
mov
xchg
dec
outsl
lahf
outsb
in
lea
dec
or
cmp
push
inc
jl
inc
orb
daa
push
rorl
xchg
push
stos
in
dec
xchg
shlb
in
adc
or
push
insb
in
call
cwtl
shrl
xchg
push
cmpsb
jbe
jbe
shlb
stc
add
stc
out
scas
mov
inc
mov
xchg
fmull
push
out
push
adc
push
rcr
mov
inc
popa
mov
sub
orb
dec
jge
mov
jmp
jle
adc
pushw
aaa
adc
jo
lds
jle
inc
stos
adc
imul
ret
scas
sbb
xor
xor
arpl
cmc
and
mov
inc
adc
pop
push
cld
add
and
mov
pusha
and
addr16
push
push
fdivs
mov
fnsave
mov
sub
notb
cwtl
xchg
negl
pop
test
imull
dec
pop
pop
sbb
loope
cmpsl
xchg
ror
jecxz
lock
sub
idivl
sbb
mov
and
icebp
mov
lods
les
push
dec
pop
fs
add
lahf
xor
cli
shll
pop
mov
push
xchg
xor
push
sub
movsb
lods
ss
lahf
push
dec
mov
adc
stos
or
ret
es
push
aam
outsl
mov
loopne
mov
jp
jge
inc
sub
xor
jae
pop
cmpb
add
jmp
shr
jecxz
out
lahf
pop
xor
xor
xchg
stos
xchg
and
cmp
xchg
mov
xor
sub
repz
dec
and
in
inc
jge
sarl
mov
cmp
shll
fwait
hlt
xor
adc
ds
stc
mov
dec
mov
sbb
xchg
daa
dec
inc
cmp
mov
leave
cmp
xlat
and
daa
sub
add
cld
movsb
gs
mov
ljmp
lds
sti
cmp
arpl
sbb
cld
sbb
imull
aas
fimuls
jae
cltd
test
mov
in
js
out
lds
adc
out
inc
lea
mov
pop
adc
sbb
rorl
mov
in
jns
adc
cmp
xchg
sub
mov
je
adc
xchg
inc
and
mov
xor
hlt
push
xchg
jne
push
or
enter
jl
xchg
inc
xor
cltd
or
cmpsb
add
mov
mov
mov
xchg
shr
push
push
inc
sbb
je
lds
push
mov
loope
jno
or
jmp
iret
mov
adc
fildl
fimuls
pop
mov
mov
lcall
jne
mov
push
cmp
push
jno
mov
lea
ss
test
arpl
push
and
test
mov
mov
pop
mov
lcall
add
cmc
loopne
push
call
in
jg
stos
jo
jge
ret
cmp
push
fadds
mov
dec
mov
mov
adcb
pop
push
xchg
adc
push
xchg
je
movsb
cmp
outsb
shrb
pop
ds
push
mov
adc
jmp
inc
popf
leave
mov
mov
sub
push
aad
dec
leave
rcll
dec
repz
dec
jo
jmp
popf
int3
outsb
sti
lret
mov
and
imul
int
lret
in
popa
inc
ja
stc
and
jl
stc
and
int
imul
add
pop
data16
or
dec
add
movsl
add
dec
jg
xor
mov
lock
mov
cmp
dec
mov
lahf
add
out
je
test
je
push
std
jmp
push
xchg
and
inc
aaa
add
add
test
movups
mov
fiaddl
mov
insl
and
in
subb
mov
sub
enter
push
add
fists
mov
sbb
dec
mov
mov
sub
shll
ficompl
cmp
inc
insl
inc
pusha
mov
fnstsw
mov
imul
aam
arpl
push
adc
and
scas
mov
shrb
scas
mov
call
lret
push
sbb
pop
pop
ficoms
decb
movsb
out
jecxz
xorb
pop
out
ficomps
xor
out
mov
mov
fdivp
inc
mov
outsb
in
mov
dec
dec
xchg
jo
aad
hlt
adc
add
das
outsb
jl
adc
adc
sbb
outsb
mov
pop
sbb
mov
jo
cmpsl
or
pushf
les
rolb
add
xchg
mov
add
mov
out
jmp
movsl
push
push
and
pop
std
insl
in
sti
nop
pop
ss
xchg
test
lods
mov
testb
enter
clc
pop
test
mov
rclb
dec
ss
clc
sbb
pusha
mov
jmp
or
rcrl
push
jae
leave
dec
loopne
repnz
shrl
push
sub
pop
inc
pop
push
xor
and
mov
lods
outsl
or
cld
mov
mov
popa
mov
stos
inc
sub
mov
mov
incb
cmp
sahf
scas
and
and
adc
inc
subb
mov
scas
add
dec
clc
mov
push
ja
movl
aam
mov
testb
or
imul
popa
or
repz
jno
sbb
mov
or
in
jnp
enter
mov
pop
push
sbb
imul
or
subl
daa
and
jo
cmp
inc
mov
dec
mov
pop
dec
hlt
das
dec
das
in
xchg
mov
dec
loope
lret
scas
in
arpl
sub
sbb
push
dec
mov
pop
adc
out
pop
jnp
adc
out
sbb
sbb
xchg
pop
repnz
pop
sbb
bnd
or
setbe
negb
pop
out
addb
rclb
or
mov
jae
fidivrl
sub
out
and
das
in
inc
aad
push
mov
cmpsb
dec
jp
stos
aad
cwtl
push
pop
rcll
add
push
xchg
adc
push
popf
mov
cs
push
test
adc
call
fimuls
mov
cmc
adc
push
xchg
cmp
mov
sub
jmp
and
mov
ret
xor
loop
shl
mov
xchg
pop
jbe
mov
lret
or
mov
mov
aas
dec
push
rorl
cs
add
out
in
lret
inc
test
pop
outsb
pop
ljmp
imul
sbbb
inc
pop
adc
mov
pop
shll
xorb
pop
push
pop
mov
popf
pusha
jo
lret
addl
sub
pop
cli
mov
lds
ret
inc
dec
xor
loope
shrl
xchg
subb
in
cwtl
and
add
clc
inc
repnz
sub
call
aas
mov
mov
sti
sbb
shlb
inc
jnp
je
bound
js
and
sbb
cld
or
aas
out
sahf
out
and
adc
popf
repnz
mov
xchg
or
shl
call
hlt
fimull
mov
adc
out
call
fdivl
push
sbb
call
jp
rolb
into
mov
mov
xchg
mov
push
sub
insb
ja
mov
movsb
rcr
dec
inc
pop
mov
jno
mov
shll
mov
test
push
and
cmp
jp
jle
int3
popf
xlat
or
xchg
mov
push
adc
dec
cmc
add
cltd
movsl
ja
movhps
mov
dec
popf
ds
xchg
sbb
fcmovnbe
dec
or
xchg
inc
out
outsl
je
add
cli
lock
ljmp
jns
pop
sbbl
pop
push
rcll
lret
popf
add
mov
adc
or
cmpsb
into
jb
or
fstl
pop
fildll
cmc
ss
hlt
frstor
leave
xlat
sbb
mov
clc
and
lcall
xor
mov
and
adc
and
xlat
imul
test
cmc
std
push
mov
add
call
adc
testb
add
cmp
jg
sbbb
inc
push
aas
bound
rorb
sbb
repnz
cmp
out
lea
or
mov
idivb
in
pop
scas
sbb
mov
lods
hlt
out
push
loop
stc
add
xchg
and
xchg
int
cmpsl
sbb
pop
bound
pop
gs
jo
mov
xchg
push
js
push
mov
and
lret
or
cmp
mov
out
sti
mov
fsubl
xor
dec
sbb
test
push
sub
xchg
xor
mov
pop
sub
imul
sub
popa
loope
add
ds
pop
jmp
adc
fiadds
int3
jnp
pop
cmpsl
or
push
popa
push
scas
in
jo
pop
iret
xchg
das
jle,pt
jg
sub
loope
lret
dec
rclb
inc
cmpl
or
mov
shrl
pop
jbe
popf
cmp
pop
movq
insl
in
fldl
or
inc
dec
push
mov
mov
pop
push
pop
out
push
ss
icebp
stos
mov
add
mov
mov
fiaddl
xlat
es
add
shrb
sar
adc
xor
mov
adc
or
lret
loopne
roll
cmp
adc
dec
mov
je
out
sub
lahf
jmp
xchg
subb
orb
sbb
mov
fs
xor
cmp
test
or
sub
inc
cmp
jle
pushl
or
push
add
push
mov
or
stc
imul
lcall
add
out
xchg
pop
or
loopne
fwait
pop
lods
mov
sbbb
lea
adc
mov
cmc
bound
jle
mov
mov
cmp
add
jae
mov
lea
xchg
push
jo
mov
inc
dec
mov
aad
cli
or
imul
cmp
sbb
adc
icebp
xor
leave
sarb
jne
inc
mov
sahf
bnd
or
pop
stos
jbe
aad
jmp
decb
mov
cmp
jmp
iret
in
adc
xchg
shll
rcrl
mov
dec
xchg
scas
xchg
popf
adc
add
mov
iret
mov
les
or
lods
mov
out
test
jne
data16
push
jae
jl
mov
or
sti
nop
sbb
dec
cmp
mov
fimuls
sbb
scas
aad
cmp
mov
jno
cmp
test
les
inc
mov
or
inc
jae
shlb
fisubl
pop
popf
push
inc
out
mov
mov
inc
cmp
adc
rcrl
adc
and
lods
in
adcl
pop
jbe
pop
daa
push
jp
xchg
cltd
fstps
inc
sbb
jge
iret
cmp
push
dec
add
cli
cmp
mov
and
xchg
dec
sbb
pop
in
dec
push
pusha
xchg
xchg
sbb
stos
fnstcw
lds
movsl
ds
mov
rol
pop
mul
outsl
pop
pop
imul
jb
loope
movsb
fidivrs
imul
add
lods
sti
xlat
and
jb
ljmp
xchg
cwtl
jnp
jmp
pusha
inc
loop
addr16
mov
jae
movsl
rorl
or
incl
mov
cltd
cmovne
push
jne
loope
aam
popa
jp
roll
fcomps
add
mov
xchg
test
leave
movsl
and
xor
call
ror
adc
push
xchg
lret
push
std
cmp
loop
fdivrp
mov
push
pop
pushf
rorb
cwtl
push
stos
frstor
or
push
and
shrb
jecxz,pn
pop
mov
negl
out
xchg
sub
adc
cltd
je
fidivrs
sbb
and
rclb
call
or
icebp
adc
leave
popf
jp
imul
xor
outsb
mov
cwtl
push
rdtsc
jns
test
fwait
popf
inc
lret
ds
add
inc
dec
push
mov
mov
push
lahf
aaa
add
inc
out
jo
cli
mov
sub
aas
pusha
js
xor
and
pusha
loopne
or
jg
dec
sbb
jmp
mov
data16
push
adc
push
in
fimuls
push
push
in
mov
mov
push
add
mov
fsubl
or
push
lods
fidivrl
push
pop
mov
pusha
pop
enter
imul
pop
push
repz
std
stc
mov
incl
sbb
xchg
aad
mov
cmp
and
cmpsl
push
std
inc
iret
mov
movsl
ret
push
dec
mov
adc
xchg
push
push
xchg
jge
fidivrl
sub
lret
push
xor
pop
xor
mov
jb
mov
cld
pop
addr16
mov
add
cs
mov
cmp
lcall
lret
clc
sbb
int
inc
outsb
imul
or
and
dec
mov
xchg
lret
es
lcall
shl
or
popa
xlat
das
sbb
jb
mov
dec
mov
mov
mov
pusha
sub
push
mov
push
out
xorl
pop
push
in
mov
mov
jno
add
cmp
xchg
jge
xchg
aas
int
enter
add
dec
arpl
dec
pop
out
outsb
push
in
add
jne
ljmp
ret
ja
and
loope
fwait
mov
cmpsb
pop
iret
cs
nop
insb
xchg
nop
cmp
xchg
call
pop
fstpt
ds
dec
out
shll
pop
repz
test
cs
addb
dec
pop
in
mov
test
repz
cmp
ljmp
mov
mov
insb
push
outsb
xor
jnp
lods
fdivrs
cltd
stos
add
jmp
inc
lods
jne
xor
inc
addr16
iret
enter
push
mov
adc
in
push
sti
loope
in
in
sub
sahf
inc
sbb
pusha
sbb
xor
or
fisubl
mov
pushf
in
dec
jg
sub
push
mov
idiv
fbstp
jbe
xchg
les
and
push
mov
adc
jns
out
xchg
call
cltd
fadds
pop
inc
hlt
inc
into
filds
jns
mov
pop
cmp
cwtl
aam
add
inc
incb
out
lcall
fnstenv
jnp
lret
xchg
mov
ret
mov
push
lods
sub
cld
dec
daa
loopne
mov
out
adc
and
cmp
xor
xor
add
movd
addl
sti
inc
out
sbb
out
xchg
cmp
pusha
mov
arpl
push
daa
cmp
mov
js
cmc
testb
and
aaa
push
out
movd
mov
lahf
or
dec
bound
sbb
push
scas
int
aas
xlat
pop
test
out
dec
cld
mov
mov
ficoml
sub
push
icebp
sbb
add
cmp
inc
lea
frstor
inc
dec
inc
std
shrl
cs
popa
and
in
cmp
cmp
das
inc
movd
out
shll
pop
jg
ljmp
push
sub
popa
insl
or
mov
sbbl
xchg
adc
jo
mov
jae
adc
fldenv
ja
mov
inc
mov
cmp
dec
int
and
int3
in
sti
mov
repz
into
je
add
out
adc
add
mov
ja
mov
roll
xchg
out
adc
popa
jno
pop
xor
dec
leave
mov
inc
fbld
es
cmp
orl
ret
cld
mov
jo
repnz
fldcw
cmp
clc
pop
stos
sub
mov
pop
dec
rcrb
and
inc
ret
into
and
cmp
cmp
or
mov
mov
or
out
stos
add
bound
data16
dec
fstpt
repnz
push
or
jmp
or
adc
scas
ja
cltd
cltd
addr16
pushf
dec
adc
inc
mov
js
inc
sbb
mov
addr16
outsl
inc
lods
test
adc
add
int3
addr16
jge
pop
mov
lret
sbb
sbb
pop
dec
xor
shlb
fbstp
mov
sub
aaa
dec
xchg
data16
in
jae
add
insb
xor
pop
arpl
les
addb
fdivl
mov
xchg
out
daa
lahf
cmp
add
das
jl
xor
cmp
add
push
ljmp
xchg
push
sarl
addl
pop
dec
cmp
stc
iret
ss
mov
sub
in
jmp
xlat
pop
arpl
mov
loope
and
cmc
sahf
adc
int
jg
data16
int
jb
scas
gs
mov
stc
aaa
add
or
ss
nop
sbb
lcall
fists
lahf
lret
scas
fildll
dec
or
xor
lods
jo
addr16
dec
jno
insl
jne
dec
sbb
add
aas
xor
mov
adc
or
xchg
insb
add
hlt
xchg
fs
nop
pop
fisttpll
mov
inc
gs
pushf
mov
inc
mov
cwtl
dec
mov
mov
das
sub
pop
dec
push
mov
sbb
jmp
xor
xchg
pop
out
jl
adc
test
data16
mov
add
mov
dec
cli
adc
cld
sub
xchg
addb
push
iret
rcll
into
leave
lds
xor
scas
sbb
add
jg
jp
pop
into
cmp
xchg
and
icebp
dec
mov
adc
jbe
mov
popf
inc
pushf
cmp
hlt
pop
push
mov
pop
cmpsb
xor
lcall
je
in
sub
pop
test
add
xlat
jl
jb
arpl
pop
xchg
sbb
pop
aaa
xchg
movsl
cmc
test
dec
or
cmc
cmp
pop
adc
aaa
mov
lret
stc
push
cli
loopne
int
jb
jmp
repnz
clc
or
or
pop
aas
cmpl
adc
lea
out
cltd
mov
adc
sbb
jae
jb
aam
gs
jo
fwait
mov
push
lods
xchg
mov
outsl
aad
dec
dec
out
and
gs
roll
aaa
fisubs
or
enter
adc
icebp
bound
jo
add
mov
cwtl
xor
push
insl
cli
cs
xchg
movsl
or
roll
sbb
incb
mov
fsubrs
push
mov
mov
leave
loop
jmp
movsl
out
cld
pop
bnd
lock
insl
cmp
and
xor
mov
pushf
pop
orl
lds
mov
shlb
and
dec
sbbl
sub
jno
xchg
sub
xor
shl
lds
mov
sbb
push
fidivrs
cmp
sbb
dec
dec
insb
andb
das
scas
push
imul
dec
adc
xchg
clc
inc
xor
in
icebp
mov
mov
bound
enter
pusha
mov
inc
push
jmp
jne
std
push
out
or
rorl
outsl
shrl
in
stc
sbb
or
cmpb
ljmp
addr16
xchg
lds
xchg
loope
sub
push
pusha
or
frstor
icebp
add
lahf
mov
cli
testl
insb
test
test
push
fimull
add
gs
stc
bound
sub
mov
cmp
shll
push
stc
mov
stos
xchg
pop
lret
les
lods
dec
mov
mov
out
dec
int
jmp
xchg
mov
cltd
inc
in
icebp
pop
outsb
jle
out
xlat
push
pop
orb
mov
enter
mov
sarb
mov
or
add
fsubrp
aad
sti
mov
xor
sbb
add
xchg
lods
mov
and
cmp
jns
mov
or
jbe
pop
xchg
and
popa
xchg
and
das
cmpsb
push
mov
lret
lock
scas
outsb
ret
xchg
push
jg
pop
jno
pop
cmp
mov
jmp
fimuls
cs
jbe
or
add
test
sbb
push
hlt
fwait
mov
mov
movsl
int3
test
cmp
imul
test
rcrl
in
cwtl
leave
xchg
scas
mov
push
dec
stos
lods
mov
rorb
adc
push
jg
inc
leave
push
mov
ret
inc
pop
pop
repnz
cmp
push
mov
or
xor
mov
sbb
aaa
xlat
movsb
push
dec
sbb
sar
divb
ljmp
xchg
mov
ds
ret
jo
xor
lock
dec
mov
loopne
test
loope
loope
ss
pushf
repz
insl
mov
add
gs
rorb
xchg
add
xchg
mov
cli
add
pushf
mov
sti
ret
stc
daa
lods
mov
inc
enter
mov
jle
mov
in
inc
mov
ficompl
into
int
subl
push
mov
ja
outsb
scas
pushl
xor
push
popa
or
pop
imul
lret
lock
xor
lock
cwtl
cmp
repz
movnti
cmp
testb
rolb
add
cwtl
pop
insb
mov
push
ret
les
rcl
fs
xchg
jmp
popf
pop
ret
ss
ficomps
sub
cmpsl
xor
add
js
push
ljmp
sbb
sbb
and
mov
adc
push
push
xchg
fldenv
inc
jne
popf
adc
scas
mov
in
mov
mov
arpl
sub
icebp
sbb
ret
andl
enter
outsb
sub
xor
cltd
arpl
movb
int
daa
or
sub
cli
pop
push
mov
cmp
jb
loop
outsb
cltd
mov
push
sub
lea
ds
jo
shrl
loope
add
aad
lock
pop
add
pop
stos
add
test
and
jp
pop
int
jmp
test
fisttpll
adc
inc
mov
test
stos
xor
jo
inc
inc
jp
jmp
es
mov
stos
mov
andl
push
sbb
movl
and
dec
jb
cli
push
ret
out
xchg
pop
mov
push
mov
adc
ljmp
adc
cmp
cwtl
xchg
test
lea
mov
dec
into
mov
pop
rorb
adc
cmp
push
fbld
leavew
cmc
mov
icebp
mov
andl
push
test
xchg
lds
xchg
std
in
xchg
xor
xor
pop
into
test
scas
ficoml
adcl
or
pop
add
loope
rcll
pop
or
shll
sub
loope
sub
mov
dec
jae
shl
jae
leave
jmp
xor
xchg
clc
enter
jo
sbb
imul
and
dec
loop
clc
subb
dec
pop
aaa
cwtl
pusha
mov
jge
fs
pop
int3
aam
dec
mov
call
mov
adc
mov
push
jmp
fstl
add
or
dec
sbb
das
cmpsl
xchg
fmuls
out
sbb
adc
inc
dec
mov
imul
mov
sbb
in
out
sti
in
repz
lods
xor
lahf
mov
or
cmc
mov
pop
lock
inc
adc
mov
ret
movsb
cmp
stos
mov
jp
mov
popf
mov
mov
imul
push
jbe
adc
jle
mov
xchg
xor
jne
push
sub
sbb
add
mov
jbe
xchg
in
mov
jns
jp
lock
test
jge
lret
sbbb
push
push
fnstsw
push
lahf
add
jae
cltd
mov
xchg
xor
movsb
jb
stos
into
mov
push
sarl
fnstsw
bound
inc
push
ds
arpl
outsb
cmp
rcll
ret
cltd
mov
xor
in
jnp
and
xchg
adc
pop
sbb
inc
lret
add
je
shll
in
jnp
xchg
and
stos
adc
inc
ficoml
mul
daa
in
rcll
mov
push
insl
pop
sbb
inc
mov
xchg
add
mov
cmpsl
rcrl
dec
lds
aaa
shl
bound
stos
mov
sub
xchg
ljmp
loop
cwtl
sub
push
cltd
inc
movsb
mov
addl
inc
xor
mov
mov
std
mov
and
loop
mov
aaa
dec
mov
int
sti
push
jp
lahf
fistl
adcb
push
xor
aam
adc
push
sbb
xchg
xor
inc
repnz
je
gs
lahf
popa
jg
sub
cmpsb
test
sub
pop
xchg
insl
xor
out
adc
daa
stos
sbb
pusha
xor
enter
xchg
sub
ret
test
stos
mov
addb
sahf
cltd
or
mov
jle
jb,pt
out
dec
inc
repz
adc
sub
jg
pop
mov
clc
mov
add
jo
aaa
imul
je
add
adc
orb
movsl
push
jg
lock
dec
mov
outsb
cmp
pop
jbe
sbbb
imul
dec
adc
xor
sub
xchg
imul
cld
lods
insl
insl
fincstp
inc
add
sub
or
mov
aas
cmp
or
and
aaa
mov
mov
daa
jb
xchg
pop
stos
and
in
or
adc
add
mov
sahf
les
pop
lahf
shl
rcll
add
leave
js
jmp
push
adc
inc
mov
fisubl
in
inc
lock
mov
fcmovnbe
jo
les
mov
movsl
aaa
cmpb
iret
in
adc
push
fstl
ret
cmp
loop
pop
test
or
shll
daa
out
arpl
xor
adc
mov
cwtl
xchg
sti
mov
xor
leave
dec
jmp
cmpsb
aaa
mov
or
push
out
paddusb
aas
pushf
push
xor
mov
popf
hlt
std
xor
jnp
xor
inc
stos
mov
lock
loopne
sti
mov
lods
out
cmp
or
pusha
adc
leave
repnz
mov
xchg
movsl
add
sub
loope
cmp
push
shlb
fcoms
stc
into
jbe
mov
outsb
xor
and
mov
in
add
and
popf
mov
out
lods
add
mov
cmp
and
stos
es
out
adc
ljmp
cmp
aas
mov
mov
push
mov
in
or
add
scas
mov
and
jnp
dec
stc
mov
fsts
ret
mov
inc
inc
ljmp
fs
mov
pusha
sub
leave
xor
mov
stc
idivl
ror
and
pop
stos
dec
loope,pn
rcll
adc
or
cli
shrb
and
bound
xchg
xchg
or
and
adc
sbb
ftst
dec
int
cmp
push
cmp
adc
mov
inc
jnp
popa
repnz
movb
add
mov
xor
jmp
mov
sbb
sbb
out
xor
xlat
mov
aas
lea
incb
fs
adc
iret
test
xor
dec
mov
sub
xor
test
sbb
lcall
shll
popf
adc
push
jae
and
aas
ja
push
jl
inc
js
inc
lahf
push
and
adc
jno
mov
adc
outsl
cmpsl
mov
out
daa
les
ret
mul
xor
adc
adc
cs
pop
test
aam
sbb
mov
mov
xchg
bound
sbb
test
shl
lcall
or
iret
push
mov
es
sahf
jne
mov
test
cltd
test
loop
or
iret
sbb
imul
inc
lods
pop
push
pop
pop
jno
stc
sahf
xchg
pop
cmp
imul
mov
test
mov
bound
cs
sbb
push
dec
data16
or
imul
or
mov
cmp
mov
ljmp
add
pop
cltd
fnstsw
mov
leave
jg
mov
and
into
movsb
notb
and
inc
orb
pop
inc
das
add
test
notl
push
mov
and
sbb
sar
sahf
xor
pop
loop
cltd
mov
adc
pop
and
rclb
lahf
and
stc
sub
fnstenv
xchg
inc
aas
sbbl
or
lret
mov
mov
fistpll
in
add
dec
fisubs
aad
sbb
fcomi
pop
cmp
and
dec
xor
arpl
subb
sti
adc
xchg
jmp
lea
rcrl
call
sub
ss
jle
jno
push
jne
mov
xlat
in
push
mov
push
sub
inc
adc
nop
shll
stos
out
jmp
test
ret
adc
push
sub
push
fxch
mov
push
lds
xor
mov
mov
nop
mov
icebp
out
sbb
or
inc
xchg
adc
in
mov
mov
xchg
out
gs
sbb
in
xchg
test
dec
mov
adc
repnz
data16
add
mov
mov
mov
jl
cmpsl
pop
fbld
loope
out
cmp
mov
push
lcall
pop
and
cmp
add
inc
ss
mov
jle
faddl
xlat
stos
xchg
and
and
roll
add
jbe
pop
add
lods
sbb
push
into
das
add
aas
aam
mov
imul
in
mov
xlat
inc
loop
xchg
jg
mov
loope
popf
stc
sub
fsubs
cmpsb
push
sbb
les
mulb
xor
pop
adc
ja
loope
aaa
cwtl
mov
jp
xchg
outsl
dec
loope
loop
xchg
xor
lds
lea
pop
test
pop
sbb
aas
cwtl
mov
mov
lock
inc
inc
adc
loope
insb
inc
jp
jmp
testb
xchg
dec
dec
bound
pop
mov
popf
xchg
data16
jle
dec
pop
dec
xchg
lods
mov
shll
test
xchg
inc
jle
pop
repnz
adc
hlt
cld
lret
in
xlat
in
hlt
dec
movsb
ljmp
stc
jge
jg
sub
mov
mov
loope
pop
arpl
fmul
xchg
xchg
cmpsb
ljmp
xchg
or
scas
test
imul
mov
xchg
inc
xor
inc
inc
sbb
sbb
pop
insl
cltd
or
ds
enter
fst
cmp
xchg
mov
sub
mov
int3
sbb
push
addl
sahf
xchg
repnz
xor
xchg
sbb
iret
pop
icebp
dec
shl
ret
dec
out
data16
lods
jecxz
inc
test
imulb
sarb
outsl
inc
mov
enter
shl
shlb
jecxz
sarb
mov
jo
push
and
cmp
pop
out
fmulp
mov
incb
sub
pop
js
adc
jecxz
pop
imul
je
lods
cmp
add
push
inc
sub
adc
outsl
ds
and
imul
fld
lret
mov
mov
dec
arpl
push
jl
push
sahf
insl
xchg
mov
or
jo
adc
mov
sahf
hlt
lods
clc
popf
enter
cmpsb
movsb
lods
sahf
cmp
repz
lret
cmp
test
out
rorl
movsbl
das
xor
fdivrs
inc
push
mov
push
push
imul
fildll
out
test
mov
push
fwait
xchg
lahf
dec
sub
and
icebp
xchg
sbb
mov
lea
xor
imul
push
loopne
sbb
rorb
sarb
stc
js
mov
pop
test
mov
mov
aad
int3
es
and
mov
dec
push
or
mov
scas
mov
xor
sub
je
aad
ja
inc
test
dec
scas
popa
daa
mov
daa
int
mov
dec
add
mov
and
in
outsl
lret
inc
ja
adc
cs
and
inc
jmp
out
pop
xchg
stc
scas
sbbb
in
mov
mov
sbb
enter
cmp
mov
push
adc
sbb
sub
adc
sub
xchg
add
jmp
jmp
repnz
sbb
divl
mov
xchg
xor
mov
xlat
loope
xchg
fcoms
lds
or
cs
nop
gs
pop
int3
push
pop
fisubrs
repz
sbb
adc
int
add
jle
add
mov
pop
sub
jecxz
add
dec
fimull
repz
out
inc
fnstenv
jo
sbb
or
xorb
or
dec
shl
stos
sbb
rcl
cmp
lods
iret
movd
sub
push
mov
popa
push
inc
int
mov
inc
test
test
jl
fcoms
cld
stc
lcallw
sub
or
jbe
lea
pop
fidivrl
or
xor
repnz
loope
ljmp
sti
xlat
inc
adc
leave
ss
or
xor
cwtl
xor
mov
hlt
jb
daa
mov
lret
pusha
pop
stos
shll
sbb
mov
adc
mov
push
std
stos
and
insl
dec
fwait
jge
or
cltd
cmp
push
adc
cmp
add
int3
ficoml
inc
dec
add
pushf
dec
fs
mov
pop
mov
push
ret
aaa
xor
rcll
inc
pop
cmc
mov
push
xchg
jecxz
pop
add
mov
jne
rcl
pop
out
push
lock
cmp
imul
xor
push
fwait
push
jle
cmpsb
xchg
mov
sbb
.byte
.byte
