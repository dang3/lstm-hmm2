cld
push
push
call
pop
jmp
jecxz
call
shr
or
add
jmp
xor
pop
pop
jmp
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
in
add
add
add
add
xor
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
or
adc
or
adc
or
adc
adc
add
adc
adc
push
sbb
add
sbb
add
sbb
sbb
and
and
add
and
add
and
sub
sub
add
sub
xor
add
xor
cmp
add
ss
add
cmp
add
cmp
add
das
add
xor
inc
cmp
add
xor
inc
cmp
add
xor
inc
cmp
add
sub
inc
cmp
add
and
inc
xor
inc
xor
add
adc
dec
cs
add
or
dec
sub
add
add
dec
sub
add
add
push
sub
add
pop
xor
add
add
pop
xor
add
push
add
add
or
pop
cmp
add
or
pusha
cmp
add
push
add
adc
arpl
adc
arpl
adc
arpl
add
add
add
push
add
pop
add
sbb
inc
sbb
inc
sbb
gs
sbb
inc
sbb
inc
push
add
add
and
pop
inc
add
sub
push
inc
add
xor
push
inc
xor
push
inc
xor
push
inc
xor
add
cmp
push
dec
cmp
push
dec
add
add
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
push
add
add
dec
add
inc
add
inc
add
incl
jo
xor
add
sub
jno
sub
jb
sub
jae
sub
je
sub
jne
sub
add
xor
jp
xor
jp
xor
jnp
add
add
cmp
jle
cmp
jg
cmp
andb
andb
andl
test
add
insb
inc
add
insl
dec
add
outsl
push
add
jo
add
jno
add
je
add
ja
add
jp
add
jge
add
andb
andl
fwait
andl
test
popf
xchg
sahf
mov
lahf
mov
mov
mov
mov
nop
jnp
lahf
nop
jge
mov
xchg
jl
test
xchg
jg
stos
cwtl
jg
stos
cwtl
addb
cltd
addl
mov
test
mov
xchg
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
nop
add
movsb
xchg
add
movsb
cltd
add
movsb
lahf
add
movsl
mov
add
test
cmpsl
add
lods
cmpsb
add
mov
add
scas
pushf
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
lret
shll
int
mov
add
enter
leave
les
into
lret
into
int3
lret
int
add
iret
into
add
rcl
add
rcl
add
aam
add
aad
add
xlat
xlat
add
add
fcmovnu
add
fstp
add
add
add
add
loopne
add
loope
add
loop
add
jecxz
add
in
add
out
add
out
add
jmp
ljmp
in
in
add
out
out
add
out
out
add
lock
add
icebp
lock
repnz
add
repnz
repz
repz
add
cmc
testb
idiv
add
clc
stc
add
stc
cli
add
sti
sti
add
cld
cld
add
std
std
add
std
std
add
or
or
push
add
add
or
fldz
out
neg
call
adc
adc
or
adcb
loop
jmp
hlt
idiv
std
std
std
stos
shlb
sbbb
ret
ror
into
rcl
fsub
loop
out
lock
stc
std
std
movsb
cmpsl
xchg
nop
mov
mov
enter
enter
xlat
fsub
loop
out
div
std
std
std
std
lahf
mov
push
push
or
mov
mov
rcl
loopne
out
out
div
idiv
std
std
cltd
cltd
addb
mov
mov
into
into
rcl
fsub
call
idiv
std
std
std
xchg
xchg
jbe
dec
xchg
into
mov
mov
mov
xlat
fsub
loop
out
stc
std
std
std
std
std
std
xchg
mov
mov
mov
mov
mov
enter
mov
rcl
rcl
rcl
loop
std
std
mov
mov
mov
mov
cmpsl
cmpsl
xchg
mov
rcl
fstpl
mov
mov
mov
addb
adc
push
push
scas
rcl
rcr
adcb
xchg
mov
enter
push
push
push
push
push
push
push
push
push
push
sbb
rol
rcl
fldl
mov
andb
push
push
sbb
sbb
push
pop
pop
mov
cmpsl
rol
pop
pop
test
mov
imul
scas
mov
std
std
std
std
std
std
std
xchg
mov
adc
inc
mov
int3
xlat
fsub
call
stc
stc
div
div
out
out
stc
nop
mov
fcoml
jle
mov
call
div
out
out
out
not
mov
rcl
or
outsb
outsb
outsb
imul
div
hlt
out
out
call
movsb
mov
test
jae
js
outsb
js
std
std
hlt
out
out
out
out
call
lahf
lahf
cmpsl
cmpsl
mov
inc
imul
arpl
and
std
imul
jmp
loop
mov
mov
ds
dec
and
and
and
and
and
fdivr
call
xchg
mov
pop
or
cmp
inc
sub
sub
and
and
jmp
loopne
xlat
xchg
cltd
cmpsl
pop
or
imul
call
outsb
std
loopne
ffree
jnp
mov
pop
or
jle
enter
call
pop
dec
jbe
shr
fcoml
mov
jb
xor
cmp
loop
jmp
sub
outsb
js
fdivrl
test
lcall
xor
mov
call
outsb
outsb
outsb
imul
jle
test
pop
jb
xor
inc
ds
idivl
imul
jb
jnp
jle
test
jbe
cmp
sub
imul
jae
jbe
jnp
test
xor
cmp
cmp
inc
inc
imul
jbe
jnp
jle
push
push
outsb
je
cmp
cmp
ds
inc
inc
inc
xchg
jae
jbe
jnp
dec
push
outsb
je
cmp
cmp
cmp
je
inc
imul
js
dec
push
imul
xor
sub
xor
xor
xor
cmp
inc
inc
inc
imul
test
mov
mov
mov
xchg
cltd
cltd
lcall
cltd
lcall
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
pushf
lcall
cmpsl
cmpsl
stos
mov
add
add
and
add
add
and
test
add
add
add
add
add
aam
push
dec
aas
and
xor
lds
inc
inc
clc
loop
popf
inc
push
jge
cmp
nop
jae
mov
xor
cmp
loope
add
sub
adc
sbb
push
xor
lret
popf
movsl
mov
pop
insl
cmpsl
cmp
xchg
push
icebp
imull
shl
movsl
in
test
mov
ficompl
cmp
pop
cmp
sub
push
cmpsb
sahf
push
aam
xor
call
push
lahf
out
sub
test
jecxz
addr16
fdivrl
jmp
mov
bound
push
rcll
lods
jnp
adc
and
pop
add
add
stos
jg
lea
in
push
sub
stos
adc
stos
sub
push
push
sarl
shll
iret
clc
mov
jo
sbb
mov
add
dec
jae
xor
stos
cs
add
lea
jmp
in
sahf
inc
movsb
sarb
push
insl
jo
aad
je
add
push
int3
sub
adc
or
mov
shll
in
dec
mov
add
lds
xor
es
mov
mov
add
loopne
mov
cli
or
mov
cmpsb
adc
xor
insb
pop
dec
pusha
loope
mov
xchg
insb
imul
int
adc
arpl
popa
push
push
jns
lcall
sbb
outsb
or
pop
sbb
cs
mov
pop
xchg
enter
adc
lea
call
pop
and
les
jnp
mov
je
mov
inc
imull
mov
dec
sub
out
das
ja
jae
inc
push
ds
sarb
xlat
inc
in
jecxz
movsl
xor
daa
xor
pop
lcall
in
ljmp
test
fmull
daa
fwait
mov
fstpl
shlb
sbb
and
sbb
ja
pop
xor
cwtl
imul
sbb
pop
jge
jge
push
jae
xchg
and
cmp
mov
inc
pushf
cwtl
loop
jbe
inc
sub
cld
push
repz
sbb
js
cmp
repz
dec
adc
fadd
jb
mov
outsl
adc
je
outsb
pushf
xchg
out
sub
pop
pop
cmpsb
fwait
pusha
push
pop
jmp
sahf
out
push
xor
ljmp
mov
jbe
xchg
push
scas
xchg
movsl
xlat
mov
jl
fstpt
ja
cmpsl
add
push
lcall
push
sub
in
or
scas
sub
scas
mov
pushf
jae
stos
push
fs
sbb
rorl
push
aaa
xchg
mov
bound
lds
ljmp
shll
imul
out
or
cmc
test
out
outsl
cmp
cmp
jne
iret
push
stos
mov
cmpsl
cmpsb
bound
inc
jp
dec
aaa
mov
out
addr16
cltd
es
jl
popa
sub
imul
jo
jne
xchg
adc
or
fdivrl
cmpl
test
add
push
mov
in
push
js
ss
push
repnz
daa
mov
test
mov
daa
pop
cld
inc
int
orb
xlat
cltd
sbb
sub
int
aam
mov
inc
mov
aaa
jp
dec
add
inc
es
add
fldl
fstpl
outsl
inc
repz
adc
mov
stc
popa
sbbb
std
into
xchg
push
pop
mov
nop
xor
shll
sbb
push
test
mov
sub
push
adc
jg
inc
add
stos
add
xor
add
push
jb
fistps
and
loope
cmp
insl
add
in
jae
data16
in
ss
sarl
call
cwtl
ljmp
push
pop
ret
outsb
inc
mov
out
rorb
std
fdivl
fldt
or
mov
out
jb
movsl
call
movl
lahf
xchg
jle
push
in
fsubrl
cwtl
mov
sub
mov
inc
xchg
stos
fdiv
add
fldcw
mov
inc
arpl
outsb
push
out
mov
jae
push
mov
fwait
xchg
add
mov
popa
in
loop
and
lahf
sbb
ret
daa
mov
loopne
inc
and
repnz
or
ret
fsts
aam
pop
mov
nop
dec
popf
cmp
fidivrl
sub
jnp
je
mov
mov
insb
or
jl
inc
xchg
sub
leave
jno
dec
xor
mov
pop
cmp
mov
fistpl
xlat
icebp
imul
in
or
int3
loopne
cwtl
or
xchg
in
mov
pop
mov
decb
push
mov
int3
es
pop
xchg
out
xor
and
dec
lods
xorb
out
sti
icebp
aad
testb
mov
lods
or
push
add
rcr
cmpsl
inc
xorb
sti
adc
jp
xchg
mov
or
out
jb
or
xor
leave
popa
xor
and
add
add
test
add
pop
cmp
int3
cli
ficoml
cwtl
out
lods
sub
cmp
fwait
cld
lahf
rcl
mov
scas
out
cmp
testb
dec
add
adcb
xchg
cs
mov
inc
cmpsb
das
cli
jno
push
add
and
xchg
movsl
rcll
sti
push
mov
adc
xor
or
mov
mov
fidivs
cld
xchg
dec
inc
inc
xchg
into
lock
push
mov
sbb
insl
pop
add
setl
jno
imul
cmp
mov
jle
rolb
jmp
call
test
cmp
enter
cmp
std
icebp
adc
fnstcw
fwait
aam
scas
test
decb
lea
inc
pop
xor
mov
and
enter
movsb
inc
mov
and
shll
enter
dec
pop
mov
push
sub
leave
jecxz
xchg
jae
cltd
sbb
cli
mov
movsb
outsl
and
push
loope
mov
dec
push
cwtl
scas
insl
cs
jns
out
mov
jg
sub
and
add
scas
xchg
push
push
sub
xor
xor
shrb
lcall
mov
cmp
jmp
push
iretw
push
cwtl
add
out
xor
es
stos
mov
sbb
scas
fisubl
pusha
sub
std
fidivl
mov
xchg
jmp
insl
dec
mov
aas
stc
out
jle
jae
cli
mov
inc
xchg
jno
xlat
icebp
or
push
push
dec
out
mov
dec
mov
push
mov
add
mov
or
push
xchg
and
std
stos
in
xchg
jo
test
hlt
mov
out
testl
push
in
int3
scas
dec
aam
mov
arpl
iret
cltd
popf
in
imul
mov
aaa
in
adc
ja
lret
icebp
sbb
fiadds
negl
in
out
sbb
push
sbb
scas
or
inc
fidivrs
or
mov
ret
pop
outsl
and
jge
lahf
fsqrt
push
push
jae
les
loopne
enter
jge
shll
lret
cmp
xlat
das
mov
xchg
xor
icebp
incl
push
inc
or
mov
outsl
xor
ja
clc
cmpb
cmp
dec
xchg
insb
aam
sbb
sahf
scas
nop
sahf
dec
cmp
rcrl
outsl
addr16
fistps
ljmp
xchg
nop
xchg
and
cltd
cmpl
xor
cwtl
stc
and
lods
dec
push
sub
sbb
iret
sbb
lahf
adc
bound
jb
ret
sbb
test
push
imul
dec
xor
pushf
pop
jg
lods
jle
sbb
xor
aaa
call
jl
insl
sub
mov
dec
ds
sub
fiadds
sub
mov
cmc
outsb
lea
std
xchg
cmpl
andb
xchg
sub
push
lcall
das
push
sbb
rorw
cltd
pop
loopne
mov
faddl
test
ret
aas
iret
inc
dec
enter
ds
pushf
popf
sbbb
dec
push
je
jmp
sbb
shrb
decl
pop
shlb
mov
sbb
pushf
cwtl
xor
fld
enter
cltd
out
jmp
sub
stos
test
leave
std
outsb
mov
stos
repnz
jmp
pop
adc
sub
fisttps
and
leave
mov
jge
std
fsubrs
loope
popf
sbb
inc
pop
cmp
pop
xorb
std
jno
inc
dec
xor
mov
fldcw
push
jle
dec
mov
xchg
and
fxch
inc
adc
cli
dec
arpl
mov
ds
in
mov
inc
cmp
dec
inc
cwtl
jo
insl
das
mov
out
call
iret
push
dec
jnp
cmpsl
or
and
mov
cmp
mov
cli
enter
adc
hlt
pop
lret
ret
shlb
mov
aas
dec
pop
in
adc
ret
inc
outsb
push
orb
sub
ljmp
aam
aam
cmpsb
jae
or
dec
leave
cmp
adc
shl
jecxz
mov
fs
cmp
mov
or
or
inc
xchg
mov
pop
adc
dec
hlt
test
jbe
shrl
aaa
lcall
test
or
push
iret
repz
mov
sbb
pop
imul
fldcw
jg
cmpsl
dec
or
push
pop
orb
push
sub
cmpsb
jg
rorb
jbe
int3
repz
into
dec
push
mov
out
push
sub
ljmp
sub
jmp
insb
push
cs
sub
popl
dec
ror
jno
sti
jmp
xchg
mov
subl
cmp
xchg
sub
ss
sub
xor
xchg
inc
icebp
sub
fsubrl
ds
loope
lret
shr
mov
sbb
aam
dec
push
xchg
add
loopne
push
or
push
pop
sarl
scas
jg
iret
mov
je
adc
jp
sahf
imul
add
lret
lods
xor
mov
and
rolb
fisubs
pop
adc
push
addr16
sbb
cmp
cmp
je
stos
das
sub
pop
mov
mov
mov
lods
outsl
mov
or
scas
mov
inc
or
mov
push
adc
adc
jl
and
jl
adc
lods
nop
jmp
imul
push
xchg
mov
xchg
mov
jge
fisubrs
hlt
roll
add
dec
ss
mov
cmp
dec
test
int3
data16
lds
or
sub
fwait
xlat
lods
jecxz,pt
jo
fwait
ljmp
xchg
xchg
dec
cmp
cltd
imul
dec
mov
push
push
movsl
mov
add
pop
mov
ds
gs
add
jns
fidivrl
lcall
mov
push
push
sub
mov
ficoml
pop
lret
rcrl
in
push
mov
cmp
pop
inc
lods
and
outsl
cmp
jae
ss
dec
push
xchg
or
cmc
sub
jno
cmp
add
daa
and
iret
cmpsb
or
fdivr
sub
cmc
cmp
adc
cmp
mov
hlt
imul
adcl
ss
pop
outsl
add
ficomps
ljmp
xchg
sub
push
test
int3
mov
int3
sarb
xchg
mov
mov
mov
scas
aad
jmp
dec
fstpt
cld
mov
cli
xor
jne
jmp
xlat
int3
mov
jle
es
mov
mov
call
popf
mov
push
lods
sbb
jg,pn
xchg
pop
push
mov
inc
aas
call
in
mov
pop
dec
mull
cmp
int
mov
push
xor
jmp
nop
cwtl
popf
mov
xchg
pop
mov
aas
pop
repnz
push
stos
push
outsb
icebp
pop
mov
rclb
nop
enter
sub
es
add
cmovne
dec
out
gs
clc
sbb
outsl
inc
loope
shrl
shlb
out
jecxz
ret
push
fists
popf
sbb
sub
cmp
lods
stos
add
aam
mov
mov
pop
jbe
cld
cld
cld
dec
pop
roll
mov
cmp
adc
mov
jg
xor
pop
sbb
and
mov
cmp
clc
mov
xor
sar
pusha
loop
dec
mov
xchg
xor
popf
or
pop
add
orb
rorl
test
jp
lahf
adc
shlb
rcl
cmp
pop
aad
mov
add
mov
in
jns
add
pop
adc
idivl
or
insb
ficomps
and
into
insl
bound
int
and
fisubs
dec
mov
jecxz
push
loopne
cmp
cmp
out
cmp
pop
sub
test
and
inc
std
mov
int3
hlt
insb
cmc
jl
adc
push
adc
cwtl
mov
cld
orb
and
push
testl
imul
int
inc
lods
dec
sbbl
sub
push
push
pop
sub
lods
jl
lods
jmp
cmpb
insb
test
sub
ja
iret
jb
mov
lea
jnp
cmpsb
stc
push
or
push
ja
mov
dec
or
sbb
ficoml
jno
jl
mov
iret
je
inc
cmp
icebp
and
pop
cwtl
dec
jae
xchg
xor
push
int
stos
adc
push
loop
mov
sub
frstor
sbb
mov
mov
xchg
mov
sub
jb
push
shll
mov
rclb
and
jb
shll
cmp
or
mov
mov
outsb
dec
mov
or
jae
sub
call
or
in
and
sub
or
pop
mov
push
or
subb
jecxz
jbe
leave
int
push
or
xchg
call
cmpl
test
lcall
insb
int
nop
mov
repz
out
sbb
into
mov
test
and
gs
sbb
pop
fcoms
inc
leave
xchg
or
icebp
fst
xor
pop
sbb
mov
and
add
inc
popf
push
xor
jp
das
icebp
jecxz
lcall
dec
je
pusha
lahf
push
int
push
leave
test
aam
lea
clc
dec
mov
test
nop
push
jo
mov
iret
stos
mov
outsb
push
lret
testb
push
and
xchg
jbe
ror
adc
jo
xchg
repz
jb
test
jae
cmp
dec
sti
mov
aas
mov
les
jae
push
bswap
add
in
push
add
sub
jl
sub
in
fmuls
iret
add
shll
mov
mov
cmovl
sbb
les
lret
mov
outsb
out
push
lea
xchg
jge
inc
pop
xchg
and
xchg
mov
mov
xchg
and
dec
mov
stos
lods
inc
sbb
lods
mov
mov
lods
inc
push
sbb
mov
add
in
mov
xchg
cmp
push
push
jnp
mov
ret
ja
cmp
mov
sbb
and
xchg
lret
sbb
cltd
sbb
lock
popf
lods
les
nop
lcall
call
inc
addr16
leave
dec
sarb
jb
adc
pop
loope
jp
sahf
cmpsb
addr16
dec
jne
shrb
adc
pop
and
in
dec
sbb
das
fcomp
mov
xor
int3
xorb
sbb
ficoms
inc
imul
push
jmp
xlat
adc
nop
cmp
scas
ds
mov
jo
add
jns
mov
pop
cs
stos
imul
add
je
shrl
mov
sti
test
shrl
and
scas
push
call
mov
mov
loope
test
sub
push
das
xor
dec
aas
cltd
icebp
subb
xchg
adc
jge
mov
ret
jbe
les
sbb
dec
stos
movsl
fildll
push
pop
cmpsb
push
mov
and
into
pop
scas
inc
push
xchg
popa
push
or
inc
push
mov
dec
push
cmp
jle
sub
add
and
jg
push
add
xor
daa
sub
test
mov
lods
inc
sbb
mov
adc
call
pusha
inc
insl
xchg
sub
into
aam
mov
or
push
dec
cmpsl
lock
test
push
sbb
or
or
pop
mov
fwait
mov
fmull
or
negl
dec
rorb
cmp
add
jbe
pop
mov
sbbl
adc
scas
cmp
mov
loop
or
sub
xor
adc
dec
xor
pop
int
mov
mov
dec
push
push
out
sbb
shrl
xchg
jnp
inc
xor
sub
ret
sub
insb
mov
push
mov
pop
add
add
jb
dec
inc
dec
int
pop
subl
loopne
sbb
je
or
mov
xchg
push
das
mov
pop
mov
sub
xchg
mov
or
push
xor
lock
imul
das
pop
and
test
dec
cmp
ret
xchg
mov
mov
dec
cmc
xchg
repz
xor
pop
dec
jbe
xchg
add
pushl
rclb
mov
shll
pop
hlt
xlat
sbb
and
lock
je
ljmp
test
movsb
push
cmpsl
loope
dec
scas
dec
pop
enter
daa
mov
mov
mov
push
jae
sbb
shlb
jge
adc
jg
sarl
xor
ret
pop
lea
adc
inc
sub
adc
in
mov
cwtl
dec
inc
std
pop
cmpsb
mov
call
xor
inc
hlt
pop
jbe
xor
pop
xorb
sub
xor
js
int
add
test
mov
lcall
mov
clc
cmpsl
icebp
mov
mov
push
ret
pop
fmull
and
adc
int
xor
inc
add
mov
push
inc
and
inc
ds
and
lods
cmp
imul
inc
out
and
sub
push
js
stos
jl
xlat
lock
mov
icebp
adc
xor
jl
nop
pop
lret
enter
cli
xor
out
push
cli
out
repz
dec
mov
mov
sbb
daa
out
jp
sarb
mov
xchg
fildll
pcmpeqb
lret
rcrb
shrb
loope
and
bound
lret
test
arpl
sbb
adc
mov
xor
insl
dec
lods
add
mov
fiaddl
inc
fldcw
cmp
cld
aam
jne
pop
pop
mov
sub
sbb
mull
dec
push
ffreep
pop
addb
bound
or
scas
cmc
rorb
jmp
push
sbb
jo
sbb
ljmp
adc
cmp
pop
popf
lcall
mov
lods
cmp
lret
pop
sub
test
pop
leave
aam
push
out
dec
sbb
lds
xorb
repz
cmpb
push
push
divl
xor
ljmp
dec
sbb
icebp
arpl
loop
push
mov
xor
fldenv
jbe
xor
negl
mov
mov
les
test
adc
ja
rcr
js
popfw
or
mov
jnp
daa
ds
push
es
xor
leave
insb
inc
in
xchg
mov
popa
aaa
jg
and
jp
jp
dec
clc
pop
add
mov
rcll
push
ljmp
fcoml
dec
and
jecxz
jnp
mov
mov
hlt
xor
sbb
mov
mov
pop
in
rcrl
mov
out
or
ffreep
push
mov
pusha
adc
test
lea
add
mov
out
push
hlt
push
outsl
movsl
test
lock
add
cmp
add
iret
jle
sub
xchg
pop
sbb
mov
xchg
sbb
jne
and
in
rcll
sbb
jecxz
xchg
data16
adc
sti
dec
insb
jge
push
add
and
add
inc
add
cmp
jg
data16
fdiv
dec
inc
mov
jle
cli
push
pop
nop
mov
sbb
mov
pop
inc
sbb
pop
sbb
test
ret
jo
in
or
dec
jae
push
cmp
lods
repz
icebp
add
sahf
cmp
imul
out
int3
icebp
mov
icebp
pop
test
inc
ljmp
out
mov
add
add
popa
cmp
xchg
sub
subl
aam
je
test
data16
push
jge
cli
mov
xchg
and
mov
sbb
pop
insb
loope
pop
ret
adc
aaa
mov
aam
push
fwait
jle
neg
in
int3
in
in
pop
fwait
jbe
jns
stos
mov
cmpsb
sahf
fnstcw
jno
loope
mov
cli
lahf
pop
pop
cmp
or
mov
lds
fnstsw
sub
inc
outsl
aas
or
cmpsb
inc
lahf
rolb
xor
mov
out
mov
mov
in
lcall
test
out
addl
xor
leave
xchg
inc
sbbl
jne
xchg
andl
push
xor
xchg
enter
push
inc
mov
call
ss
pop
outsl
movsb
and
daa
mov
jns
xor
add
lret
pop
inc
mov
and
and
inc
xlat
xchg
stos
jecxz
pop
outsb
inc
inc
pop
lods
mov
std
cmpsl
mov
inc
jle
popf
test
push
and
inc
jl
scas
fnstenv
xchg
or
and
mov
cwtl
xchg
mov
loop,pn
rorl
inc
mov
xchg
sbb
inc
xchg
push
stos
sbb
dec
shlb
mov
stos
lcall
mov
mov
test
pop
lock
mov
aam
in
and
sbb
addl
cwtl
scas
insb
or
inc
or
push
popf
cmp
lods
mov
scas
movsl
outsb
stc
and
xor
bound
cmpsl
jecxz
pop
push
fiaddl
xor
fisubrs
notb
out
cmp
call
fsubl
inc
inc
jne
leave
adc
in
scas
xchg
push
or
mov
jl
cli
add
mov
jbe
enter
jb
fcoms
xchg
xor
push
cmp
into
ds
shrl
mov
pop
aaa
adc
add
outsb
jb
adc
mov
inc
aaa
mov
sub
pop
cmpsl
fistps
fwait
cmp
and
mov
pop
mov
jmp
mov
xlat
daa
ret
mov
push
dec
jl
inc
cmp
push
fcom
pop
loope
sub
rcll
pop
xchg
sbb
jno
mov
mov
loopne
mov
sbb
push
out
insl
lds
stos
add
xchg
pop
adc
add
push
scas
cs
mov
sub
repz
shr
iret
mov
push
xor
push
lahf
addr16
iret
stos
adc
sbb
in
jne
push
cmp
aad
aas
stc
pop
mov
mov
and
imul
dec
fbstp
mov
insb
lea
aas
jno
sarl
push
sahf
lret
loopne
aad
mov
xor
in
xchg
dec
inc
jg
je
pop
clc
into
xchg
mov
divl
or
sbb
push
ret
mov
scas
push
push
aam
adc
jbe
push
mov
or
jno
jae
lock
lea
out
rorl
mov
add
loope
lea
jecxz
sbb
mov
xchg
fisttpl
ss
push
pop
mov
xor
fsubr
insl
mov
aam
daa
mov
dec
ret
rorb
or
pop
fwait
xchg
int
dec
movsb
mov
or
hlt
sbb
and
int3
lcall
sahf
sahf
add
testl
xchg
push
pop
lret
mov
and
and
lea
repz
pop
cltd
jl
dec
sub
mov
mov
pop
rcll
addr16
pushf
in
inc
cmp
push
jno
pop
pop
lret
jl
or
sbb
fsts
cs
push
scas
pop
sahf
push
cmp
sbbl
pop
test
jb
fnstcw
into
cli
sbb
int
xor
xchg
loop
leave
pushf
dec
xchg
add
cmp
jo
lods
stos
daa
cmp
push
mov
ss
rcrl
push
dec
loop
and
pop
rclb
xchg
scas
jae
dec
cld
xor
aam
insl
repz
jp
bnd
inc
push
lcall
push
adc
imul
add
fimuls
jmp
repz
out
cmpsl
or
push
iret
add
adc
daa
popa
push
ja
cld
je
cmp
push
add
jbe
adc
jecxz
fwait
jl
popa
dec
pop
sub
fwait
negb
orl
pushf
orb
ljmp
jno
mov
int3
leave
nop
mov
dec
cmp
sbb
popf
hlt
in
or
pop
mov
test
loopne
or
xchg
lods
xchg
push
enter
mov
rcrb
push
cmc
add
cld
leave
pop
cli
and
adc
dec
pusha
xchg
shlb
mov
push
mov
lcall
ljmp
xor
imul
jp
insl
cmc
rcrl
stc
dec
cld
mov
aad
mov
je
in
in
ja
jl
loop
into
or
add
jg
dec
dec
js
jbe
out
jmp
out
inc
out
out
scas
popa
dec
loop
mov
sbb
rcr
outsl
insl
lret
fadds
pop
insl
xchg
pushf
js
mov
iret
popf
sub
aad
aaa
subb
inc
arpl
outsb
mov
imul
mov
mov
das
mov
mov
out
add
mov
cld
pop
mov
sbb
je
das
insl
in
nop
xchg
fistps
nop
sbb
add
int
xchg
mov
inc
push
stos
les
clc
out
sbbb
inc
imul
leave
mov
clc
in
jb
sbb
lods
and
out
pushf
pop
hlt
mov
outsl
pusha
popa
int3
lods
std
or
lcall
pop
push
pop
xchg
xchg
pop
xchg
push
xor
pushf
adc
mov
jl
sub
mull
arpl
mov
int3
mov
fstpt
movb
xor
xchg
fs
shll
push
dec
mov
lret
sar
sbb
stos
pop
scas
mov
shll
adc
les
fs
fcompl
mov
push
xor
insl
xor
ja
hlt
push
in
ret
aad
test
es
sahf
test
pop
cli
inc
insb
dec
sarl
mov
push
call
push
das
sub
dec
inc
sub
out
dec
fdivs
pusha
clc
pushf
mov
cmp
dec
pop
xchg
cmp
jne
push
adc
sub
inc
jle
push
repnz
out
cld
cld
jg
adc
loop
pop
dec
push
sahf
cld
push
int3
jmp
dec
stos
repz
loope
sub
inc
lret
imul
in
fadds
jno
adc
inc
ret
jae
out
pushf
ret
cmc
ja
inc
lods
jno
dec
bound
lods
sbb
jnp
ret
lods
cmpsb
mov
mov
mov
or
add
push
pop
xor
push
outsb
cmp
and
test
push
das
bound
test
fs
dec
pop
iret
outsb
iret
cli
pop
stos
and
add
cltd
ljmp
das
sbb
stos
test
ret
rclb
inc
fistps
mov
jp
pop
or
inc
xchg
sub
insl
xor
mov
jo
push
jnp
jmp
mov
xchg
xor
iret
push
inc
daa
jg
push
inc
sbb
push
push
jle
jp
outsb
mov
mov
shll
das
aad
xor
test
cmpsl
xor
outsb
mov
cmp
push
jo
cmpsb
sub
xchg
repz
shrl
in
hlt
shl
inc
xchg
nop
loopne
stc
inc
ds
lcall
and
andb
int3
mov
notl
scas
sbbb
mov
in
xor
ja
fwait
mov
xchg
xlat
pop
je
mov
sub
xchg
mov
sub
leave
adc
loopne
cs
and
inc
hlt
pop
cmp
in
or
aam
mov
jge
jo
popa
dec
stos
jg
popa
xor
inc
ret
sahf
testb
mov
into
popf
cwtl
jle
push
dec
ret
das
mov
push
in
push
jp
fisubl
rcr
ret
jecxz
mov
mov
outsl
and
and
push
sub
data16
sub
adc
adc
xor
outsb
mov
lret
mov
rorl
jns
inc
pop
inc
sub
popf
cs
loope
jo
lcall
ljmp
jno
das
subps
xchg
and
lea
push
add
xchg
or
clc
cmpsb
lods
pusha
sti
fsubl
out
xor
dec
xchg
inc
movsl
fwait
movsl
xchg
popf
aad
popf
or
ror
add
or
add
push
imul
sahf
sub
push
enter
xor
sbb
mov
scas
fnstcw
xlat
and
subl
inc
and
mov
sbb
sub
xorb
addr16
popa
das
mov
mov
xchg
add
aam
negl
dec
outsb
fsin
fisubs
inc
sub
cmp
lea
into
ss
lock
cs
adc
leave
aas
es
and
idiv
cmp
ss
enter
lods
push
and
fldcw
mov
test
mov
sub
dec
jecxz
mov
jg
ficoms
daa
jns
iret
mov
cmp
push
sbb
aad
lds
outsl
das
mov
lret
cld
and
sub
mov
sub
and
jno
in
xchg
ss
mov
repnz
lods
mov
pop
leave
ud0
sti
push
arpl
xor
xor
add
or
push
xor
xlat
je
divl
xor
cmp
fsincos
scas
jb
scas
add
jl
repnz
fwait
jecxz
fwait
mov
leave
cmp
fldl
pop
or
outsb
or
adc
dec
loopne
test
in
add
mov
jne
mov
ljmp
adc
sbb
mov
orb
cltd
inc
fistl
js
jae
dec
xchg
inc
inc
mov
ljmp
dec
loopne
nop
int3
lcall
fs
mov
adc
aam
adc
aas
fcompl
aad
lods
jl
int3
in
and
push
popa
xor
pop
jge
push
sbb
je
aas
addr16
mov
pop
scas
cmp
push
pop
mov
mov
mov
jmp
lcall
jno
rol
mov
xchg
push
inc
mov
and
pop
push
pop
mov
into
loop
dec
test
aaa
fdivrl
sub
out
inc
movsb
fwait
jns
in
add
sbb
mov
lret
xor
dec
ret
cmp
mov
les
inc
add
inc
in
dec
js
sbb
cmp
and
lcall
daa
xchg
in
pop
push
dec
mov
fstpl
inc
cmpl
out
in
ljmp
leave
gs
cmp
dec
mov
lods
cmp
loopne
jl
xchg
incl
lds
cmp
outsl
xchg
mov
xchg
mov
fcomps
add
adc
pop
mov
mov
call
sbb
fcompl
xchg
faddl
icebp
add
push
jns
fisubrl
xor
aad
xchg
adc
cmc
cmp
pop
inc
adc
fpatan
addr16
lret
lea
pop
sti
pop
test
inc
xor
das
dec
push
cmpsl
xchg
mov
pop
lret
push
jno
dec
pushf
sti
in
ror
or
in
shll
icebp
add
aas
cmp
inc
sbb
jne
imul
push
test
inc
aas
cmpsl
out
data16
or
test
pusha
and
ret
mov
lock
inc
add
lahf
pop
shr
data16
adc
out
loope
imull
add
dec
cmp
pusha
mov
cs
jl
mov
ret
cmpsl
mov
fs
jns
lock
cmpsb
lret
xchg
roll
pop
jno
xchg
xchg
fmull
cltd
pcmpgtw
cmpsb
cmc
push
inc
lret
sbb
and
scas
dec
scas
xor
cmp
into
sahf
aad
imul
mov
in
and
adc
out
push
aam
xor
jl
lea
in
arpl
fisttpll
test
call
sub
jno
jo
push
inc
out
jns
pop
jne
cli
dec
cmp
xchg
mov
mov
pusha
aad
xchg
mov
inc
pop
inc
add
fnstsw
inc
test
icebp
cmc
cmp
iret
cwtl
add
test
mov
adc
pop
sahf
inc
es
lahf
mov
ss
mov
lcall
sbb
push
movsl
rolb
xor
scas
xor
dec
adc
lcall
dec
hlt
aas
std
test
jmp
stos
das
adc
inc
pop
xor
mov
cld
data16
jbe
mov
push
rcr
adc
mov
out
outsb
mov
dec
int
lret
mov
aas
addl
sbb
leave
xor
pusha
push
inc
enter
add
mov
and
pop
mul
inc
jns
fsubs
inc
push
sbb
lods
push
push
jg
rcrb
mov
out
cmp
js
xchg
push
lock
cmp
inc
loop
jl
push
rorb
pop
loopne
sbb
sub
sub
addr16
or
push
dec
cmp
pop
subl
push
xlat
roll
stc
mov
int
mov
cmp
cmpsb
test
xor
int3
adc
std
jecxz
and
or
call
xchg
jae
arpl
pop
sar
scas
jb
stos
movsl
out
fisubrs
ret
mov
lods
test
jae
je
sbb
xchg
cmpsb
cs
push
mov
pop
and
jecxz
jae
aas
push
inc
iret
pop
jo
xor
adc
sar
outsb
in
xchg
xor
insb
mov
mov
out
mov
inc
adc
and
jae
imul
insb
inc
push
sub
add
movsl
sbbl
mov
jae
imul
jb
lcall
out
cmc
jecxz
pop
ror
xorb
dec
push
rorl
neg
call
add
mov
out
pop
dec
cmp
mov
xor
pop
in
dec
das
add
cmp
fcomps
enter
inc
hlt
or
mov
sbb
inc
je
enter
int
out
or
fnstsw
sbb
lods
data16
jae
imul
mov
jno
sbb
andb
lahf
jae
les
adc
je
fwait
pop
dec
int
cmp
scas
popa
jge
int3
dec
jle
mov
xor
jle
xchg
cmp
sbb
repnz
xchg
fs
iret
daa
aaa
jnp
dec
ret
push
push
int
std
stos
decb
sub
leave
arpl
aam
shrb
push
test
adcb
pop
and
sbb
into
les
adcl
lea
lods
icebp
or
inc
mov
shl
nop
push
test
or
lea
cld
or
xchg
int
inc
shlb
mov
lret
xchg
push
out
xchg
push
mov
xchg
xorl
nop
aas
negb
ja
inc
imul
push
push
and
adc
sbbl
loope
xor
je
sahf
fmulp
int
pop
mov
jmp
dec
push
inc
xor
mov
scas
ljmp
xor
push
cltd
mov
xchg
fbld
fdivp
or
movsl
xlat
mov
mov
jne
stos
sar
or
dec
xchg
push
sarb
fchs
aaa
jae
dec
mov
mov
shll
inc
mov
or
push
dec
clc
adc
shlb
lret
jb
mov
or
pop
stos
test
mov
cmp
dec
dec
adc
mov
lods
std
clc
cmp
fwait
push
jbe
adc
pushf
enter
dec
dec
sti
and
fmull
mov
test
mov
fcoml
call
or
cwtl
mov
fsincos
push
cld
neg
inc
jg
in
pop
sub
not
sbb
int
jno
mov
stc
jg
sti
sahf
lods
repz
popf
push
in
jnp
rorb
lcall
push
test
bound
movsl
outsl
inc
sub
and
mov
cmp
adc
jb
call
sub
jecxz
xchg
sbb
int
testb
rcrl
ds
outsl
cmp
enter
pop
cld
in
fidivrl
fisubs
push
cwtl
insb
clc
int
or
xor
sub
lret
push
fldcw
sub
imul
dec
int
push
pop
cmpsl
aas
mov
loopne
adc
sysret
mov
pop
test
and
dec
push
clc
aam
mov
rcrb
xchg
jecxz
fnsave
xor
add
out
sarl
or
xchg
pop
fwait
stos
mov
pop
and
xchg
aas
out
xlat
mov
lea
xchg
add
lret
cmpsb
andl
js
and
adc
sub
mov
mov
ss
int3
jno
push
sahf
pushf
and
ds
enter
pop
mov
clc
push
dec
js
cmp
dec
xchg
jb
ret
insl
push
adc
scas
sub
xchg
pop
xchg
mov
arpl
lods
push
push
movsl
fbstp
loop
fnstcw
xor
int
adc
stc
xchg
dec
addb
pxor
adc
xor
fcompl
jae
or
xchg
rclb
add
xlat
cmp
lret
adc
data16
mov
fsub
push
repz
mov
out
xchg
cs
push
or
sub
mov
je
outsl
add
push
outsl
mov
js
sar
xchg
xorb
daa
mov
xor
mov
cmp
in
mov
ljmp
sbb
jecxz
in
adcl
icebp
fldenv
pop
push
adc
xchg
mov
dec
mov
mov
ljmp
int
mov
cmp
leave
pop
sbbl
shll
push
arpl
mov
sbb
cmp
jo
lahf
movsl
pop
push
cmp
stos
adc
imul
adc
sbb
loop
sub
dec
inc
into
mov
fwait
aas
gs
or
jb
xchg
cmp
sub
push
jp
xor
cld
sti
and
fcomps
or
or
jge
mov
aas
mov
sarb
addr16
and
mov
test
cmpsb
push
sbb
popa
inc
adcl
or
jge
sbb
mov
cmp
js
mov
or
ret
mov
movsl
cmp
scas
push
fptan
imul
jnp
push
mov
fiaddl
cmp
je
jns
mov
ret
out
jb
mov
sahf
int
or
pushl
mov
fucomp
dec
out
xchg
fs
test
lods
hlt
mov
dec
jnp
cli
aad
subb
sub
or
mov
movsb
inc
sbb
scas
xor
xchg
xor
into
sahf
fildl
lcall
popf
ja
mov
cmpsl
pop
stc
push
cwtl
inc
jecxz
div
adc
loopne
xchg
pop
push
or
movsb
divb
enter
sub
push
mov
pusha
sti
subl
aam
icebp
pop
loopne
test
fdivl
out
dec
lods
mov
jae
adc
mov
jmp
xchg
subb
loop
call
mov
inc
jecxz
mov
or
cwtl
jne
lea
stos
insb
outsb
ja
push
sbb
mov
mov
or
clc
sub
dec
inc
lret
mov
push
shlb
cmpsl
cmp
insl
or
ja
cmc
mov
inc
push
movsl
in
add
push
jbe
fsub
mov
movsb
adc
dec
rorl
shrl
jp
pop
insl
out
xchg
xor
xor
lods
jbe
push
jmp
adc
arpl
push
es
add
xlat
inc
or
pop
jecxz
daa
mov
aad
clc
or
and
out
or
or
mov
ds
xchg
xchg
das
popa
sbb
push
pop
jl
cs
or
inc
jnp
jno
adcl
sarl
dec
mov
cltd
push
lcall
mov
out
push
idivb
pop
add
jmp
fidivs
in
imul
sub
subl
int
sbb
or
xchg
add
pop
aam
push
rcll
leave
or
or
xchg
xchg
insb
and
repz
push
jge
bound
push
lret
out
cli
out
daa
xchg
dec
test
or
xchg
push
sub
scas
setp
loopne
in
and
xchg
cmp
dec
lods
sbb
or
imul
sub
adc
bound
cmp
jecxz
das
push
mov
jb
call
call
imul
jb
or
adc
ret
sti
and
adcl
js
mov
dec
dec
aas
dec
in
and
sub
orb
inc
rorl
hlt
inc
leave
aad
adc
inc
cmpsl
out
lret
push
and
adc
leave
dec
adc
adc
and
xor
es
js
rorb
jo
push
xchg
or
dec
lret
movsl
dec
lahf
in
in
xor
outsb
les
stc
push
lea
jmp
lods
jmp
mov
push
js
test
stos
inc
mov
or
fyl2xp1
shlb
sar
jnp
cld
fs
loope
push
cmp
out
xor
mov
and
xchg
ret
dec
and
in
jecxz
pop
outsl
xor
aas
pusha
cmp
lret
inc
xor
adc
xor
mov
ret
cwtl
aam
sarl
int
jo
cs
and
mov
or
into
aaa
add
mov
dec
mov
fiaddl
xchg
ror
daa
and
mov
sub
mov
call
add
fidivrs
and
mov
shll
push
inc
int
std
or
mov
mov
popa
fstps
mov
jmp
mov
arpl
je
xchg
adc
fidivl
ja
jae
movsb
loop
mov
mov
mov
push
jg
incl
mov
loopne
jg
icebp
je
cmp
out
inc
sbb
mov
je
mov
fsubr
mov
leave
dec
fdivrl
xor
insl
int3
mov
mov
pop
pop
cmc
popf
and
xor
cmp
enter
sub
mov
jo
addl
jns
xchg
ss
std
pusha
adc
call
cmpsl
dec
add
fisttps
sub
repnz
push
add
ss
sbb
insl
loope
xchg
mov
aad
and
and
mov
nop
fidivrl
ret
ja
lret
lods
rcrb
bound
imulb
sahf
ss
sbb
mov
mov
mov
xor
aaa
push
loopne
pushf
in
xor
xchg
or
xchg
test
and
push
xor
jo
add
adc
pop
jle
repz
fs
insb
sti
pushf
or
leave
jg
pushf
sbb
or
xlat
jl
bound
push
adc
jb
int
or
push
jecxz
mov
test
int
stos
and
xchg
dec
or
jb
cltd
in
inc
lea
mov
test
les
adc
iret
jl
or
cs
mov
test
jg
xor
hlt
outsl
adc
lcall
pop
mov
jo
dec
call
in
pop
xor
mov
mov
in
popa
out
pusha
xchg
jbe
out
sahf
data16
in
fimuls
xchg
pusha
push
dec
xor
in
das
xor
push
das
mov
and
decb
sti
sub
xchg
xlat
and
lahf
mov
xchg
jbe
shr
fwait
test
sbb
mov
leave
dec
cmp
rcll
xchg
outsl
and
daa
popa
mov
lret
xor
stos
xchg
mov
std
or
test
cmpsb
aas
mov
adc
popa
mov
dec
jmp
jp
in
addr16
cmpsb
cmp
push
dec
sbb
xor
divl
nop
and
push
rcrl
test
fsubrs
jne
add
or
adc
add
xchg
outsb
mov
add
std
pop
in
xchg
mov
outsl
data16
fdivrs
jmp
and
out
xor
push
or
xchg
mov
mov
jnp
subl
mov
test
or
cld
out
inc
dec
xor
pop
sti
call
inc
adc
add
mov
mov
dec
ret
fmul
scas
cmc
adc
dec
pop
xor
sbb
mov
arpl
cmp
cmp
frstor
mov
xor
mov
scas
fbld
sub
push
xchg
sti
out
enter
xor
test
pop
sti
adc
hlt
cmc
in
cmp
lret
pop
inc
and
adc
inc
adc
popf
jne
cmpsl
jns
xor
test
mov
js
outsl
pop
dec
leave
lea
addl
or
sbb
adc
cmp
sbb
xchg
cmp
adc
adc
mov
cmp
push
jmp
mov
cwtl
stc
aad
or
loop
and
sarl
or
sub
push
cmc
mov
addr16
lret
cmc
lea
insb
leave
addr16
adc
pop
cmp
push
add
stos
arpl
xchg
mov
movsl
cltd
jo
incb
dec
loopne
popa
imul
js
ficompl
cmpsb
leave
mov
mov
loope
jp
fsubr
jo
push
jecxz
stc
mov
ficoml
test
loop
sub
into
pop
cli
add
jne
icebp
add
lds
mov
xchg
mov
out
cld
xchg
jl
sarl
push
scas
arpl
mov
jg
sub
lock
out
mov
mov
fs
push
in
call
push
clc
jns
in
xchg
add
stos
out
lock
fwait
sti
jae
dec
cmpsb
lea
dec
callw
push
adc
pop
dec
push
xor
fisttpll
ja
inc
dec
jno
fistpl
dec
xchg
rclb
jo
sub
adc
sbb
push
xlat
movsb
insl
in
enter
jl
lods
dec
xchg
inc
cltd
insl
repz
aad
popf
inc
call
push
cmp
iret
add
mov
hlt
aaa
cmp
outsb
lret
add
mov
sbb
jns
or
stc
push
dec
roll
in
insl
or
rcrb
das
in
sti
sbb
inc
mov
lds
jns
push
int
cmp
fsts
cwtl
leave
jo
pop
dec
je
xchg
mov
or
add
sub
cmp
cmp
and
push
inc
incb
adc
cmp
dec
add
and
jo
xor
notl
leave
jo
or
push
bound
shlb
js
adc
fnstsw
call
pop
and
push
mov
mov
cmc
push
sbb
mull
in
mov
ss
fisubl
xor
sbb
sbb
test
enter
mov
fldcw
and
pop
sarl
adc
adc
mov
lods
lds
pop
cmp
inc
cmpsb
pop
jmp
fs
addr16
movsb
xlat
mov
adc
fimull
jo
inc
or
mov
jle
test
xchg
mov
mov
mov
addr16
push
in
adc
loopne
stos
xor
cld
aad
xor
push
jno
jp
stos
mov
jl
and
mov
stos
jecxz
pop
xchg
rorl
movsb
push
xor
mov
test
aam
loop
adc
mov
je
test
out
xchg
imul
add
cmp
xchg
int
adc
js
adc
fisubrs
mull
mov
lret
jb
push
xchg
fnstcw
mov
jno
mov
mov
push
pop
cld
fs
sub
mov
mov
shl
mov
int3
scas
lock
xchg
daa
mov
mov
cld
xlat
xchg
repz
insl
sahf
or
mov
aas
jnp
lea
cmpsl
jmp
filds
out
mov
fmuls
addr16
daa
and
and
adc
xorb
push
add
push
lods
mov
sub
push
mov
je
call
divl
test
out
inc
icebp
xlat
jp
lds
mov
add
jmp
push
icebp
push
pop
rclb
mov
sub
jns
pop
in
test
sbb
imul
adc
inc
ret
aaa
stc
std
lcall
xchg
cmpsb
or
enter
js
and
adc
stc
es
stos
mov
mov
pop
mov
sahf
lock
jbe
xchg
sbb
insl
fwait
stc
push
dec
pop
jmp
in
out
inc
lahf
or
mov
mov
mov
psrld
pop
or
fldenv
sbb
xchg
push
push
cmp
mov
divps
out
or
mov
jle
jle
in
xchg
sarb
arpl
push
dec
rcrl
popa
push
fsubs
push
inc
mov
dec
jle
aam
and
repnz
stos
lea
imul
cwtl
divl
xchg
in
cld
stos
lret
in
aaa
jae
and
ds
lock
cmp
pop
jb
lahf
movsb
cmp
popa
std
adc
mov
pop
leave
mov
shlb
push
repnz
shlb
push
out
lret
xor
js
es
leave
movsl
adc
loopne
cld
iret
test
xchg
cmp
test
std
adc
jecxz
cmp
push
jge
inc
fldl
cli
and
mov
addr16
sti
jo
sub
mov
popa
sbb
shrb
gs
pop
adc
lahf
mov
shl
pop
fucomip
mov
pop
xchg
push
cli
xchg
iret
insl
xor
out
sbb
mov
out
shl
inc
xchg
push
and
lods
ja
mov
mov
rorl
cwtl
bnd
add
pop
icebp
jmp
sub
ret
stos
jp
stos
or
movsb
xchg
xor
out
adcl
lods
sub
mov
clc
shlb
jo
mov
mov
arpl
mov
push
dec
in
sbb
inc
cmp
mov
xchg
xchg
lock
test
lds
es
in
stos
mov
xor
push
push
stc
dec
fldenv
rcrb
inc
test
scas
stos
out
fisttpll
inc
cmp
testl
test
push
in
jbe
jg
outsb
add
cmp
mov
fdiv
mov
inc
imul
sub
adcl
xchg
or
jmp
scas
nop
and
jmp
pop
jnp
fidivrl
js
inc
outsl
lcall
jo
popf
loop
out
test
cld
call
cmpsb
notb
gs
stos
adc
int
cmp
xor
outsl
ljmp
push
mov
jns
sti
xor
jecxz
inc
mov
adc
mov
imul
adc
mov
xor
lea
adc
pop
or
sbb
adc
and
mov
shr
add
cmp
pop
or
popa
jb
dec
inc
mov
and
xlat
sbbl
pop
inc
int
sub
ret
mov
xchg
push
loop
push
cmp
jno
scas
push
outsl
mov
notl
icebp
mov
xor
inc
sub
mov
pop
sarb
mov
add
fwait
mov
pop
fbstp
jg
test
push
movl
jle
push
addr16
push
cld
cmp
ret
pop
iret
add
cwtl
dec
arpl
cs
popf
xchg
adc
or
scas
inc
inc
push
pop
add
xor
push
sub
in
adc
sbb
mov
fiaddl
jle
imul
dec
sti
es
int3
xchg
ret
popf
loopne
loope
lahf
fwait
ss
push
fs
addl
jl
jl
sub
or
inc
test
int3
movsb
cld
out
dec
jg
ror
movsl
scas
imul
icebp
or
in
mov
out
dec
push
lds
adc
leave
adc
and
shl
notl
fstpt
sub
lds
mov
mov
in
jmp
push
sbb
pop
rclb
shll
xchg
sub
jne
jg
scas
clc
clc
nop
xor
insl
cwtl
cld
mov
push
outsl
inc
scas
test
jecxz
cmp
push
sbbb
mov
jmp
xor
pop
imul
inc
adc
sub
cmpsl
mov
lock
sbb
mov
jne
movsl
cmp
dec
iret
scas
pushf
out
arpl
mov
data16
add
xor
adcl
lahf
sahf
sar
jp
mov
push
xor
cmp
push
sar
pushf
and
and
sub
outsl
popf
jg
add
popf
arpl
aas
mov
ja
hlt
cmp
xor
neg
pop
push
pop
pushf
js
inc
pop
iret
in
push
das
data16
push
aam
pop
inc
ret
adc
jae
push
data16
cmpsb
xchg
int
pop
mov
iret
mov
aad
jge
fdivs
lret
fldcw
in
jp
xor
scas
dec
das
cmp
imul
ret
push
mov
push
ss
outsl
inc
inc
std
pop
pop
repnz
push
leave
add
push
cmp
jne
test
addr16
in
fidivrl
imul
loopne
inc
xchg
inc
mov
mov
shlb
cmc
jns
ljmp
adc
cmp
cmp
jmp
mov
imul
mov
or
mov
std
out
call
mov
int
push
jge
lret
add
les
and
imull
jae
fmuls
jle
push
cwtl
fsub
push
mov
add
mov
sub
sub
in
mov
mov
pop
jno
jmp
sub
dec
xchg
xchg
sar
mov
mov
sub
icebp
test
movsl
xchg
outsb
sti
xchg
aaa
pop
shl
sub
test
mov
mov
sbb
cwtl
fildll
mov
mov
mov
jo
sub
jb
in
cld
cmova
dec
mov
jle
std
adc
xchg
sub
lock
pop
in
mov
data16
push
xchg
dec
push
sbbb
lds
bound
jg
and
pop
mov
push
push
inc
mov
sbb
test
mov
loop
cmp
cli
dec
jl
and
dec
andl
sub
sub
and
pop
mov
add
mov
mov
xor
xchg
lret
inc
pop
ret
mov
inc
addb
xchg
xor
push
inc
hlt
gs
adc
mov
mov
or
leave
xchg
xchg
adc
add
or
add
sahf
enter
lds
addr16
add
int
and
lret
ja
xor
push
push
jno
add
dec
pop
fst
stos
jnp
mov
inc
cld
jo
dec
add
sbbl
mov
repnz
test
outsl
es
mov
cmp
gs
fisttps
jg
pop
mov
imul
pop
aad
arpl
mov
insb
pop
push
or
jo
mov
movsl
sub
xchg
sarb
pushf
mov
pop
gs
ds
inc
scas
in
cld
push
in
cmp
out
push
addr16
push
jo
pop
xor
dec
adcl
scas
rorl
sbb
sub
ja
sub
push
inc
dec
and
mov
in
xchg
pop
jns
jge
loopne
pushf
add
jecxz
push
jne
xchg
pop
pop
adc
loope
sbb
jns
stc
mov
push
mov
mov
sbb
repz
jb
mov
jmp
push
std
jl
xor
cmpsl
les
jmp
sub
dec
add
std
jmp
sbb
ja
mov
test
rcr
fldl2t
lds
pop
movsl
sbb
int
or
xchg
add
xor
pop
sbb
rorl
lods
add
dec
rolb
inc
sbb
mov
pop
xor
adc
mov
divl
ds
es
imul
ja
sub
mov
push
ficoms
adc
daa
pop
xlat
xchg
stc
cmp
xchg
mov
sahf
fcompl
mov
lods
lods
mov
sbb
insb
or
pop
adc
addb
dec
xchg
fdivp
fdivr
dec
insb
inc
rclb
and
cld
negl
loopne
test
sub
cltd
push
mov
sub
sbb
mov
mov
call
loopne
jb
xchg
adc
push
sub
mov
test
cmp
ljmp
mov
stc
mov
ljmp
rorl
pop
and
push
sub
ja
ja
dec
je
xchg
sbb
inc
jecxz
stos
and
lcall
cmp
cmp
mul
push
jp
pop
inc
shlb
cs
cmp
sbb
xchg
jne
mov
and
pushf
inc
mov
rclb
popa
dec
add
out
cmp
inc
dec
pop
ret
cld
xorl
sub
pop
sub
mov
aaa
mov
rcl
mov
inc
jns
or
ja
jbe
test
mull
jns
add
rcr
jmp
mov
mov
stos
mov
out
popf
cmpsb
sahf
sub
and
adc
mov
cwtl
push
stos
push
sbb
and
out
dec
sahf
cltd
xchg
adc
dec
loop
rolb
push
xchg
movsb
fcomps
sarb
imul
push
fstl
mov
les
mov
dec
push
mov
xor
mov
xchg
mov
fstpl
push
js
mov
adc
jp
dec
jmp
jno
pop
popf
sub
push
into
outsb
cmp
sahf
loopne
idivb
adc
push
mov
inc
push
insb
push
sub
scas
fldcw
addl
icebp
fistps
movsb
mov
cmpsb
fcom
addr16
mov
mov
cmp
pop
jle
test
shr
and
adc
clc
popf
mov
xchg
loop
dec
add
xlat
adc
xor
push
inc
dec
or
sub
gs
sbb
stc
je
mov
cmp
insb
jns
cmp
dec
mov
popa
add
mov
ds
lret
xor
out
outsb
sub
fs
out
icebp
xchg
test
mov
xor
jns
push
xchg
jge
setg
inc
mov
and
addr16
mov
sbb
add
and
cmp
pop
jae
xchg
dec
push
shufps
idivb
aaa
out
pop
and
pop
mov
push
mov
ret
in
jae
loop
sbb
push
pushf
movsl
mulb
sbb
out
jp
das
frndint
in
lods
pop
mov
sbb
dec
insl
aad
sub
subl
xor
mov
popf
in
and
lds
jae
cmc
mov
mov
push
sahf
add
mov
push
std
pop
xchg
or
clc
add
mov
inc
outsb
pop
jp
jno
cmp
add
idivl
push
adc
add
jle
je
xlat
inc
jbe
xchg
add
cltd
insb
push
fwait
daa
sbb
or
fbstp
notb
jmp
test
adc
arpl
icebp
mov
lcall
inc
pop
daa
clc
mov
xchg
mov
xchg
roll
ss
mov
inc
cld
push
incl
xor
pop
xor
dec
rolb
sbb
lock
insb
cmp
mov
pop
int
mov
adc
sbbb
je
mov
adc
adc
std
cmp
outsb
mov
int
and
roll
mov
or
cmp
sub
mov
call
clc
fwait
mov
and
addl
jae
test
sub
push
das
test
ficomps
xchg
ljmp
movsl
iret
stc
into
sub
sbb
push
xchg
scas
es
dec
sub
rorl
ret
mov
add
scas
adc
mov
ja
cli
push
bound
ljmp
lcall
cs
and
sub
stos
jle
test
out
jnp
lods
fs
sbb
dec
and
iret
repnz
jge
stos
fsubrs
out
pop
mov
in
jge
sbb
push
pushf
xor
cmpsb
jmp
inc
mov
mov
daa
scas
rorl
xor
xor
call
dec
xchg
mov
sbb
mov
int3
xlat
ficompl
ja
mov
insl
outsb
divb
push
pop
pushf
mov
out
and
push
dec
fs
in
jge
ja
mov
xchg
push
push
into
xchg
xor
pop
ja
cs
mov
sub
or
movsl
mov
push
in
cmp
xchg
cmpsb
rcll
in
push
xor
test
jmp
pop
loope
cmp
cmp
mov
xchg
push
ficomps
sbbl
mov
shlb
sahf
dec
cmp
mov
mov
and
in
jno
cmp
fisttpll
cs
hlt
pop
paddusw
xor
mov
je
outsl
mov
xlat
pop
mov
dec
les
add
push
cmpsl
sub
sub
fwait
ja
ljmp
sbb
adc
subl
outsl
ja
shrl
push
test
xor
push
sbb
or
xor
mov
sub
add
rcr
cwtl
cmp
push
adc
add
mov
jmp
frstor
pop
pand
loop
mov
notb
ret
call
fnstenv
ds
shlb
subb
imul
ret
adc
std
pop
push
mov
add
add
add
clc
test
xchg
add
inc
inc
cld
fnstsw
mov
mov
loope
push
push
xor
divb
sub
xlat
mov
xor
lods
ss
mov
cmp
or
mov
gs
mov
xor
movsb
dec
iret
lods
popf
fs
jl
or
frstor
xchg
popa
xor
int
mov
adcl
sub
pop
out
jecxz
enter
es
lahf
stos
loop
shlb
inc
fnstsw
push
push
pop
mov
or
sbb
ret
mov
adc
movsl
sub
and
inc
fdivrs
out
push
out
hlt
sbb
jge
out
lret
leave
adc
inc
push
ret
pushw
sbb
loopne
xchg
bnd
inc
sub
mov
leave
sub
push
loope
and
outsl
in
or
adcb
pop
xchg
stos
cwtl
inc
adc
pop
jle
mov
call
adc
jns
sarb
inc
cmp
jp
dec
clc
lods
dec
adcb
cmp
fbld
fisttpl
push
sub
pop
ljmp
data16
xchg
mov
jno
aam
iret
lcall
inc
stos
out
xchg
jmp
push
xchg
xchg
aas
jb
outsl
inc
jne
or
or
push
cmp
add
jns
cld
jle
sbb
mov
mov
adc
fstps
lds
int
xor
mov
stos
in
cmp
push
sbbl
pop
stos
test
or
jmp
pop
and
out
movsb
rcl
cltd
sbb
sub
ret
notb
lods
in
dec
stos
icebp
gs
scas
jae
ds
xor
push
call
sbb
je
lds
dec
or
jmp
test
or
imul
outsl
ljmp
xor
dec
cmp
pop
xchg
push
in
xor
pushf
push
inc
cmp
mov
stos
dec
inc
mull
imull
cmp
jne
ja
mov
inc
flds
add
jmp
mov
cmp
inc
add
movsl
ja
clc
loopne
xor
mov
push
sbb
lret
pop
jnp
pop
mov
push
push
cwtl
shlb
out
cli
jns
dec
mov
pop
loop
xlat
cmp
xchg
adc
movsl
loopne,pn
push
pop
int
pusha
cmpsl
jnp
mov
add
xchg
sbb
je
sub
dec
pop
pushf
and
fs
add
add
fdivp
mov
repnz
outsb
inc
add
cwtl
std
inc
out
mov
push
sub
add
rorb
cld
aam
lret
sbb
aad
ss
stc
inc
clc
mov
pop
add
and
fstpt
hlt
test
push
out
pushf
fsts
sbb
push
jmp
js
sbb
add
rcl
push
pop
jns
popf
shrl
add
sbb
push
xchg
cmp
lahf
mov
out
cmp
push
fidivl
inc
or
add
inc
jg
push
push
jecxz
pop
ret
or
jg
inc
outsl
jmp
inc
sbb
push
lods
stc
pop
lahf
fisttpl
cmp
jp
adc
lret
mov
mov
and
lret
fcoms
pop
pop
out
int
aam
push
push
scas
int3
loopne
adc
xchg
jo
cmp
xor
insl
fbld
in
add
pop
xchg
movsb
dec
add
pop
test
mov
push
mov
xchg
sub
jge
subl
lods
mov
and
adc
stos
mov
pop
call
testl
test
xchg
aad
movsl
jae
adc
lcall
mov
mov
push
daa
fisttps
in
sarl
into
push
lcall
jp
outsb
or
scas
push
loopne
lahf
mov
or
rorl
dec
insb
xchg
icebp
nop
sbb
es
inc
cwtl
mov
repz
or
addl
rcll
push
fcoml
int
insl
sbb
xlat
data16
dec
xchg
jns
loopne
cmp
aad
pop
adc
pop
fpatan
icebp
mov
decb
cmpsb
cmpsb
clc
xchg
loope
mov
jb
icebp
test
insl
jne
mov
adc
dec
lcall
jp
in
xor
call
cmc
cmp
lret
aam
stc
cwtl
mov
outsl
and
fwait
pop
movsb
add
xor
pushf
repz
imul
aam
call
jo
into
data16
stos
std
pop
insl
test
movsb
fnstcw
mov
sub
imul
mov
test
jge
test
push
xchg
int
inc
or
dec
xor
cwtl
push
ret
mull
sbb
inc
mov
dec
test
pop
fcmovb
iret
push
fwait
mov
iret
mov
mov
ljmp
xor
rcrl
jl
and
and
nop
int3
jno
cmpsb
push
cmp
xor
pop
cmp
imul
sbb
lds
movsb
mov
es
imul
push
jae
mov
add
add
add
sub
idivb
mov
into
jle
cmpb
push
leave
stos
xchg
movsl
jne
fcomps
adc
xchg
in
pop
mov
push
outsb
xor
inc
mov
data16
xlat
dec
dec
xor
leave
mov
inc
test
xchg
cmp
xchg
stos
std
outsb
enter
test
add
cmp
cmp
push
gs
test
shlb
and
adc
imul
and
inc
jle
push
faddp
aaa
scas
and
or
push
addr16
jbe
and
xor
pop
mov
jp
gs
into
sbb
stos
sbb
out
mov
jecxz
insb
arpl
sub
xchg
popa
or
cmp
rcrl
rcrb
cmpsl
sbb
cltd
imul
arpl
cmpsl
sbb
repz
arpl
xchg
push
cmc
aas
cmp
shl
or
lret
xchg
pop
or
or
sub
stos
mov
jle
out
mov
push
sub
mov
pusha
and
clc
mov
in
sub
sbb
jnp
test
fs
mov
insl
pushw
mov
push
fwait
jo
fmul
decb
clc
dec
xchg
clc
cmp
jo
push
lret
bnd
inc
cwtl
inc
xchg
fdivr
pushf
loop
inc
stos
sbb
mul
inc
enter
push
sub
jmp
divb
jecxz
lcall
addr16
inc
and
es
leave
sub
in
xchg
inc
lret
jl
cwtl
push
subb
sbb
sbb
mov
inc
lock
int3
fwait
mov
in
popa
popa
and
cltd
mov
std
cltd
pop
adc
mov
sbb
lods
sti
sub
int
cmp
and
mov
fidivs
test
dec
cs
aam
xchg
dec
and
scas
xchg
inc
push
lahf
push
inc
mov
dec
imul
ljmp
xchg
inc
and
jns
fs
dec
clc
dec
scas
das
push
mov
jp
push
mov
jg
add
fisubrs
sti
jns
out
add
jmp
int
inc
mov
jp
mov
ja
xchg
mov
lock
adc
jle
add
or
std
mov
stos
fbld
pop
adc
inc
mov
faddl
add
adc
dec
xchg
hlt
sbb
sub
in
mov
pusha
and
imul
push
mov
psubd
push
ret
in
das
mov
inc
dec
and
movsb
in
cltd
xor
cmpsl
or
mov
mov
loope
sbb
cld
lds
mov
dec
add
adc
mov
mov
xor
int3
fiadds
fs
test
leave
in
or
add
int3
mov
push
je
orb
pop
ret
mov
bnd
test
orl
jmp
and
into
sbb
add
and
jae
jns
fldl
mov
add
test
cmpsl
out
fisttps
data16
jbe
or
sub
nop
and
dec
mov
dec
stos
xor
sub
mov
aam
test
sub
sahf
test
in
stc
rolb
pop
ds
dec
push
in
lret
push
or
cmp
mov
iret
mov
gs
out
scas
fidivrl
je
stos
insl
daa
repnz
mov
ret
aas
mov
xchg
dec
sub
iret
insb
fsubrl
xchg
imul
fnstcw
movsl
jecxz
insb
dec
add
mov
sbb
mov
cmp
jl
mov
adc
in
fs
outsl
daa
cmp
pop
dec
mov
outsl
xchg
and
jecxz
lds
mov
clc
insb
pop
mov
mov
je
dec
mull
mov
icebp
add
aad
sub
loopne
aas
push
and
cmpsb
fisubrs
aam
in
aaa
pop
cmp
cli
xlat
inc
std
pop
fsubr
in
and
or
push
inc
lods
add
jb
test
add
ret
gs
mov
xchg
inc
repnz
pop
cmpsb
adc
mov
cmp
iret
into
cmc
jecxz
mov
xor
pop
dec
xor
and
cld
and
outsb
adc
rcl
jmp
pop
imul
fbld
adc
mov
aam
test
push
dec
jmp
stc
aas
pop
inc
arpl
lret
ss
inc
int
mov
daa
sub
cmpl
push
and
into
scas
aaa
fwait
icebp
int
into
out
lds
cs
sarl
push
push
dec
clc
mov
ss
loop
movsb
cs
cmp
push
mov
imulb
dec
sarb
xor
and
dec
pop
cmp
xor
shlb
rclb
mov
mov
loopne
mov
xor
data16
jne
enter
mov
xchg
mov
mov
dec
out
rorb
out
repz
lret
clc
sbb
insb
sar
jne
das
sbb
test
jge
out
pop
cmpsb
call
sbb
or
xor
popf
in
adc
nop
loop
out
xor
lahf
cld
data16
xlat
dec
call
inc
bnd
sub
in
push
pushf
push
dec
and
ja
out
sbb
bound
repnz
ret
add
pop
mov
mov
adc
js
std
shlb
fidivl
int
mov
fisttpll
test
fsub
rolb
push
mov
adc
jo
mov
jg
mov
and
subb
cmp
and
and
rcrb
addr16
hlt
enter
sbb
sub
add
lods
pop
xchg
fistpl
arpl
pop
pop
insb
ss
jp
cmp
cmpb
pop
leave
rorl
scas
or
sbb
jecxz
pop
and
dec
adc
fwait
xchg
in
jo
lods
pop
xchg
into
lods
dec
xlat
iret
pushf
in
insb
sahf
inc
xchg
push
xlat
out
sbb
lds
xchg
pop
push
mov
xor
mul
xchg
ficoms
iret
mov
jg
mov
sub
push
xor
xchg
scas
pop
gs
mov
call
idiv
xchg
rcrb
ljmp
push
mov
xchg
push
enter
int
cltd
or
aaa
cmp
fcmovne
notl
mov
jb
xchg
push
cli
in
ret
xor
mov
in
jmp
imul
mov
cltd
shrb
add
push
mov
cmpsl
jg
das
nop
and
movl
sbb
and
cmp
repz
or
add
xchg
jae
mov
mov
sub
test
clc
movsl
dec
das
add
jnp
mov
ljmp
lock
push
add
mov
cmp
push
mov
es
mov
test
pop
outsb
test
cli
out
andl
hlt
or
mov
jo
lods
movsl
mov
stos
int3
insl
push
xchg
mov
leave
loop
push
push
fistl
push
ss
jl
jge
sbb
xchg
out
push
rorb
call
sub
jno
movsl
cli
fwait
cltd
sub
jge
push
stos
mov
ret
loope
mov
pop
xchg
jp
out
test
cmpsb
dec
sub
sti
sahf
cs
jbe
add
xchg
fstp
sub
insb
inc
adc
jae
jnp
or
loopne
movsb
sbb
mov
dec
jo
add
mov
mov
jae
shlb
pop
js
mov
out
lods
mov
lret
add
je
cmp
es
lcall
adc
hlt
divl
pop
xlat
cld
cltd
pop
inc
cli
and
fwait
daa
adc
or
or
xor
push
mov
cmp
call
mov
and
mov
fsts
cmpsl
sub
out
mov
out
mov
nop
mov
inc
and
hlt
lods
or
inc
and
xchg
sbb
jno
lea
xchg
pop
fadds
rcrl
out
pop
fsts
inc
lock
push
dec
int
sahf
jecxz
and
adc
push
push
xchg
rcrl
or
iret
daa
jmp
push
shlb
add
mov
jle
adc
cs
xchg
ret
fwait
dec
hlt
popa
adc
aaa
rcrb
inc
std
int3
dec
pop
jae
ficomps
cwtl
rcrl
ja
clc
sbb
jp
mov
xchg
mov
cmp
push
ds
jge
cmpsb
jp
jg
add
cli
inc
fcmovbe
cli
insl
and
hlt
mov
dec
jecxz
fs
sbb
xchg
mov
and
and
mov
add
clc
adc
gs
xchg
sti
cmc
and
aad
sbb
aaa
cltd
shrl
and
jmp
fwait
push
das
lds
inc
sbb
loop
push
out
mov
lcall
movsb
sub
pop
or
xor
push
pop
or
iret
rorl
stos
sub
dec
fcmove
test
push
mov
mov
imul
jb
mov
or
push
call
shlb
bound
leave
pop
rorb
jae
mov
mov
outsb
pop
and
arpl
insl
clc
and
jne
ffree
dec
adc
inc
or
in
xchg
bound
das
adc
mov
lea
and
stos
test
mov
push
popa
pop
fucomip
pop
lea
mov
fdivrl
out
add
fbld
pop
rcrl
xchg
push
sub
mov
scas
fdivr
jns
fwait
imul
jecxz
ja
test
fimuls
cmpsl
mov
dec
jne
xchg
insb
adc
clc
icebp
mov
imul
in
xor
and
clc
lret
loope
sub
xchg
aad
xchg
pop
test
outsb
movsl
pop
lea
cmp
pop
jbe
ret
insb
push
in
or
int3
mov
pop
scas
sbb
cmp
xchg
dec
outsl
fiadds
ss
pop
insl
xchg
insl
in
jle
lret
push
sbb
js
jle
adc
and
xchg
pop
mov
add
cmpsl
and
sub
fcoms
popa
and
iret
cmpsl
push
or
sub
sub
das
pushf
dec
in
jmp
outsl
rcrl
cmc
xchg
mov
jecxz
add
test
cs
jmp
and
dec
sub
repz
add
insl
fwait
hlt
mov
add
in
in
dec
inc
inc
jmp
popa
jl
out
push
out
cltd
cmp
orb
push
cli
rorl
jb
into
test
inc
xor
mov
pop
add
outsl
dec
ljmp
fwait
add
pop
pop
pop
bndstx
jmp
push
adc
jae
movsb
and
cmc
sbb
and
fildll
mov
cmpsl
sbb
jbe
aas
lea
inc
mov
xorl
gs
inc
xorb
subps
push
outsl
adc
mov
js
mov
lahf
cmp
pusha
mov
pop
lret
xor
mov
int3
sub
lock
pop
jb
gs
cltd
pop
sarb
push
iret
or
inc
out
push
mov
dec
inc
in
pop
inc
mov
xchg
mov
call
fstpl
inc
aaa
dec
fdivrp
scas
sbb
test
adc
xchg
mov
mov
lahf
loopne
or
cmc
inc
popf
mov
or
popa
cmp
pop
repz
xchg
in
xor
mov
mov
stos
shll
mov
incl
jp
dec
test
jo
cmp
inc
or
mov
mov
xchg
mov
sub
pop
jmp
cwtl
jmp
sbb
cmp
test
mov
repz
test
mov
jp
xchg
dec
push
push
pop
dec
adc
stos
shrl
xchg
popf
dec
fdivr
faddl
filds
loopne
xor
jns
stos
pop
js
cwtl
or
decb
hlt
mov
jns
xlat
dec
ja
and
cli
cmp
fsubrl
inc
dec
out
pop
out
in
daa
mov
push
cltd
roll
adc
and
sahf
cmc
shlb
ja
push
sbb
mov
pop
cli
testl
into
fildl
insl
je
pusha
and
xchg
dec
ret
dec
out
es
lret
xchg
das
and
sti
lock
pop
pop
ret
mov
jnp
andl
and
stos
daa
push
out
cmp
ss
sbb
jmp
sbb
inc
jge
inc
inc
fiadds
jno
jns
sbb
stc
xchg
mov
test
or
mov
scas
cwtl
subl
aam
pop
mov
xor
xor
sbb
fst
lock
cwtl
xchg
xchg
outsl
popa
ljmp
in
out
scas
sar
ds
mov
mov
lcall
inc
mov
pushl
jle
push
fucomp
mov
insb
fidivrl
lahf
or
scas
lahf
sub
sub
cmc
adc
sbb
mov
icebp
add
dec
call
in
in
daa
sub
iret
adc
mov
lret
xchg
jne
test
pop
ret
mov
sbb
sbbb
insl
or
lret
and
shlb
rcrl
jl
ds
jbe
mov
cmp
out
aas
sbb
lods
cltd
loopne
xor
cmp
rcrl
pushf
sarl
jbe
jge
ret
inc
neg
mov
inc
pop
jbe
xchg
icebp
movsl
out
ljmp
stc
arpl
jno
or
daa
scas
inc
cld
sbb
sbb
mov
iret
cli
lods
xor
mov
or
jns
je
xchg
mov
sbb
stos
jmp
in
and
arpl
mov
sub
cltd
add
lods
xor
adc
test
mov
mov
in
and
nop
add
mov
inc
xchg
ljmp
add
push
jns
jbe
iret
lock
add
lock
sub
test
fbstp
daa
sbb
out
mov
out
cmc
push
mov
aam
pop
xor
cmp
sahf
mov
cmp
roll
pop
push
mov
enter
jbe
idiv
xchg
insl
mov
and
and
jbe
popa
jecxz
add
dec
cmpsl
popf
and
out
xchg
jno
insl
push
mov
out
pop
or
dec
ret
adc
jo
test
fcomp
stos
pop
jmp
fwait
xchg
pop
mov
stc
fsts
dec
out
lods
jbe
xor
mov
cmpb
dec
lret
fstl
push
fldcw
mov
gs
lret
dec
out
loop
pop
enter
mov
mov
out
pop
cmp
mov
xor
xlat
test
and
sub
inc
mov
mov
out
ret
inc
xchg
int3
inc
sub
fldt
pushfw
mov
sbb
push
inc
xchg
jle
xorl
inc
gs
cmc
mov
push
cmpsl
cltd
inc
imull
out
inc
pop
sub
dec
rcl
cmp
lea
jnp
lods
push
adc
fistl
lret
shl
or
adc
cmp
in
and
push
dec
das
popa
adc
xor
popa
xchg
xor
mov
outsb
fwait
push
es
in
dec
pop
xor
es
add
fwait
ret
jl
fdivrs
push
jg
push
mov
mov
xchg
mov
push
xor
dec
bound
mov
getsec
dec
mov
xor
sub
call
jne
dec
push
jnp
cmp
addr16
mov
clc
addr16
add
rcl
call
fucomp
push
std
cmp
dec
or
dec
push
cwtl
push
push
notb
lods
dec
mov
out
loopne
pop
bound
les
test
mov
push
dec
fstps
lods
bound
push
jns
mov
adcb
ja
mov
mov
fsubrl
divl
cli
ret
hlt
sahf
pushf
mov
push
jg
and
div
lods
mov
lods
jb
cmp
out
sbb
ss
push
cmp
jecxz
inc
orb
inc
sub
jmp
sbbb
sbb
out
cmp
inc
lock
out
inc
xor
sbb
push
cmpsb
rolb
in
enter
mov
mov
mov
test
lret
add
movsl
cmp
test
addr16
sub
pop
test
ficomps
and
push
rcrb
mov
inc
ret
xchg
mov
mov
mov
popa
and
adc
sarl
push
es
arpl
pushf
and
rcrb
fstl
mov
nop
pop
push
cmpl
adc
push
cli
outsl
call
fcoml
pop
enter
daa
les
mov
test
mov
jno
ret
add
jb
aad
faddp
xchg
jno
enter
mov
or
and
lret
aas
push
fdivrl
sti
pop
into
mov
and
inc
fsubs
pop
subl
mov
add
iret
push
and
in
pushf
pop
xchg
xor
mov
lods
push
dec
scas
xchg
fbstp
icebp
push
jl
sbb
pop
jbe
xchg
pop
xchg
lods
imul
mov
idiv
lods
fwait
lret
stc
inc
inc
xchg
call
test
inc
push
pop
icebp
es
sub
mov
dec
call
and
aaa
lret
pushf
and
ficoms
add
ja
jns
lods
jmp
sub
sbb
mov
clc
loop
jl
push
mov
cld
dec
es
fldt
jmp
adc
mov
inc
and
popa
lods
clc
lods
jg
and
inc
and
and
inc
cmp
mov
arpl
mov
cmp
cmp
mov
repz
dec
jne
adc
repz
andl
jle
pop
mov
loope
ret
mov
sbb
inc
jo
das
iret
xchg
lret
or
hlt
inc
inc
jecxz
xor
push
mov
pop
insb
out
or
pop
movsb
movzbl
xchg
sahf
negl
inc
ficoml
mov
shrl
push
decl
mov
fs
or
imull
add
mov
int3
pusha
gs
filds
adc
sub
lods
jno
dec
inc
cmc
iret
push
mov
aas
lcall
std
jg
mov
data16
add
out
lret
sub
cmp
push
and
xabort
mov
push
and
or
aam
mov
mov
leave
mov
sub
xor
int
loopne
fisubrl
xor
jnp
pushl
sbb
jmp
gs
imul
xchg
inc
push
fistl
loope
das
cmpb
mov
sar
mov
inc
popa
xchg
decb
dec
daa
movsb
icebp
push
xor
mov
popf
rorb
cmc
pushf
jbe
jne
cmc
xchg
sub
xchg
dec
sbb
test
pusha
xchg
fcmovb
les
xchg
jp
and
xor
push
fwait
xchg
in
xchg
add
gs
xchg
jbe
or
sbb
pop
and
pop
xor
mov
test
jo
inc
push
gs
data16
add
test
or
or
rclb
jmp
push
adc
or
test
xor
dec
addr16
sub
push
fucom
loop
or
sub
fists
cwtl
aam
jl
inc
xor
pop
lds
lret
jo
and
mov
fs
jb
jle
push
mov
insl
xor
mov
push
add
and
into
add
xchg
scas
sbb
fcomi
aas
inc
inc
aad
cmp
imul
imul
ret
adc
movsl
scas
sahf
ret
pop
insl
inc
mov
clc
dec
test
add
add
add
cld
sbb
push
mov
div
fbstp
xchg
movsb
and
mov
jp
inc
cmp
cmp
into
jno
push
cmpsb
jnp
pop
mov
cmp
pop
mov
in
sti
adc
dec
inc
sub
xor
pushf
pop
xor
pusha
mov
and
cmc
fistps
call
xchg
mov
and
add
in
sub
jns
mov
push
repnz
into
out
icebp
clc
or
mov
jno
jnp
lea
xchg
mov
sub
add
daa
xchg
inc
clc
clc
iret
or
pop
adc
rorb
adc
or
jecxz
aas
jl
or
popa
mov
js
mov
dec
in
jg
push
into
mov
lcall
add
mov
inc
mov
leave
xchg
lods
jmp
cmp
jo
incb
cmp
xor
jo
into
dec
mov
dec
or
nop
mov
fiadds
aaa
or
stc
cmc
mov
inc
pop
cmp
cmc
sbb
mov
pop
dec
sub
mov
jno
mov
or
jns
sbb
xor
js
sub
mov
dec
sbb
jns
js
mov
sbb
orb
or
cmc
add
test
movsb
sub
rorl
pusha
nop
mov
inc
mov
or
pushf
mov
adc
dec
push
pushf
scas
jns
outsb
adc
fcoms
and
shll
jno
xor
xor
mov
addr16
sub
les
fsts
daa
scas
dec
sbb
aaa
cltd
sbb
ror
and
hlt
push
jnp
jl
test
inc
movd
xchg
test
jle
push
out
mov
and
stos
mov
pop
sbb
sub
pop
cmpb
inc
sbb
cmpsl
enter
pop
dec
mov
loop
imul
dec
iret
rorl
and
fidivrl
hlt
mov
xchg
inc
or
inc
js
test
and
jmp
loopne
ja
popa
lods
mov
fs
sub
cwtl
lods
test
sahf
or
arpl
ffreep
push
insl
gs
push
xor
out
testb
fisttpll
push
and
icebp
jnp
pop
inc
les
fisubrl
pop
or
fistpll
or
adcb
cmp
imul
call
int3
xor
jg
imul
pop
inc
pop
ficoms
cs
jae
fucomip
jge
cmp
mov
daa
jmp
scas
into
cmc
shrb
out
sti
sub
sbb
pminsw
arpl
cwtl
xchg
es
jp
mov
orl
pop
cmpsl
insb
sahf
push
cmpsb
inc
push
sahf
pop
out
push
ds
sub
imul
bound
loopne
sub
fs
xchg
iret
mov
or
inc
jmp
mov
push
fists
aam
ret
pop
inc
jp
cmp
cmp
or
out
dec
jp
stos
jae
jp
sub
push
dec
lcall
and
fcoml
test
fwait
adc
cmc
dec
or
add
add
xor
or
ja
repnz
xor
mov
jmp
dec
push
dec
imul
inc
inc
mov
or
xchg
addr16
jmp
mov
add
rolb
sbb
add
dec
jp
lahf
mov
mov
push
adc
loope
inc
mov
jecxz
inc
dec
daa
cmp
mov
loop
in
scas
arpl
in
and
xor
cmp
cmp
incl
mov
jbe
movsl
and
fnstsw
push
mov
inc
mov
add
add
and
call
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
call
call
lea
lea
xor
call
push
push
push
push
call
mov
jmp
xor
add
and
test
movsb
dec
add
pushl
add
pushl
add
call
popa
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
call
push
pushl
call
test
je
call
call
add
mov
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
push
push
pushl
call
call
call
call
call
cmpl
je
jmp
jmp
popa
jmp
nop
pusha
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
lea
lea
pusha
push
push
push
call
mov
popa
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
pop
push
push
push
call
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
mov
add
rcrb
imul
gs
xor
cs
insb
add
pushf
add
cld
pushf
add
or
add
daa
popf
add
sbb
add
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
and
stos
ret
jl
sub
inc
xor
in
pop
dec
jp
mov
jl
adc
pop
ja
and
call
and
insb
jmp
mul
and
and
cmp
subl
data16
push
mov
push
pop
stos
or
jle
repz
movsb
pop
test
push
cmp
pushf
js
fisubs
je
dec
xor
mov
and
push
xlat
xchg
sarl
lahf
inc
mov
sarb
jle
iret
lea
xchg
jp
xchg
mov
adc
xchg
mov
in
xor
arpl
addr16
movsl
ds
jb
out
jo
jl
sub
outsl
mov
jecxz
loope
shlb
test
push
mov
pop
pop
js
gs
repnz
or
into
ljmp
lea
lahf
scas
imul
pusha
adc
outsb
xchg
out
popa
std
add
sub
push
push
clc
xchg
mov
cwtl
mov
aam
outsb
aas
jg
dec
cmp
int3
and
scas
jg
sbb
push
fildl
repnz
xchg
xchg
add
adc
inc
scas
into
xchg
mov
add
mov
pop
xchg
lods
pop
inc
adc
cmp
fwait
les
aaa
nop
repz
sbbb
mov
fldt
jp
cmpsl
xor
fldl
mov
mov
loopne
lret
adc
fldenv
fiaddl
cmp
or
sbb
mov
in
fisubs
cli
dec
call
xchg
add
sbb
jle
pop
dec
cmp
dec
xlat
sti
iret
or
adc
popf
popa
lahf
inc
ljmp
cmp
pop
sub
mov
clc
mov
jecxz
psadbw
mov
cltd
popf
dec
inc
pusha
xchg
sbb
inc
xor
stos
mov
addr16
divb
pop
push
movsl
dec
dec
jne
in
dec
pop
stos
stos
icebp
loop
test
dec
push
cmp
xchg
lcall
xchg
popf
jne
or
pop
iret
rcll
xchg
push
cmp
push
dec
cmp
pop
pop
or
ja
imul
repnz
data16
inc
jge
aad
lea
jne
or
lods
arpl
dec
jp
jno
loop
pusha
xor
rclb
sub
add
in
enter
js
xchg
aad
dec
adc
aad
or
push
stos
push
bound
testb
and
pop
sbb
jp
sahf
ret
pop
mov
add
xchg
std
pop
dec
fistpll
movl
sbb
js
cmp
lret
imul
xchg
xor
rorb
push
adc
xlat
jp
mov
stos
nopl
cmp
push
add
stos
or
shll
mov
lahf
sbb
ds
rolb
cmp
adc
push
stos
mov
loop
lahf
sti
pushf
push
cltd
shll
fcompl
jne
mov
add
jno
mov
xor
fsubrl
add
ds
or
sub
mov
ret
push
test
mov
pusha
movl
jmp
mov
sbb
cmp
and
imul
or
sbb
pop
or
jne
fnsave
push
repz
inc
mov
inc
shll
inc
lods
pop
sbb
movsl
jmp
xchg
inc
push
in
int3
lcall
loop
mov
dec
or
mov
sar
int
cld
into
push
push
sub
insl
js
jl
add
fdivrs
movsb
lock
inc
inc
or
push
fcompl
fcomp
mov
adc
nop
test
push
std
inc
mov
imul
and
ja
mov
add
mov
jno
or
sbb
jmp
out
add
inc
addl
mov
and
mov
push
push
jmp
xorl
div
sbb
dec
adc
mov
movsl
xchg
cli
jle
bound
fld
insb
dec
insb
jae
mov
adc
mov
test
and
cmp
mov
out
out
sub
test
stos
imul
push
dec
mov
outsb
arpl
and
in
and
sbbb
pop
ret
mov
push
mov
popf
movsl
cld
ret
enter
push
push
add
push
lcall
lahf
iret
popa
mov
pop
inc
rclb
or
mov
pop
sub
ds
and
mov
add
dec
jae
ljmp
and
fistps
or
mov
xchg
outsl
adc
or
adc
mov
push
jle
imul
sbb
mov
sub
ss
out
cmp
mov
fcoms
shll
jle
mov
jl
andb
pusha
jle
scas
sbb
or
ss
leave
test
jp
adc
iret
mov
cmp
jb
gs
xor
add
shll
mov
mov
add
mov
pop
pop
bound
sub
fs
xchg
in
aad
rcll
dec
test
dec
or
int
mov
pop
pop
jge
in
pop
inc
jno
and
jecxz
inc
jg
xchg
xchg
mov
nop
sbb
xchg
rcll
lahf
addr16
test
xor
iret
frstor
into
jne
adc
mov
rolb
fcompl
shlb
decl
mov
test
insl
mov
or
ja
adc
out
jmp
add
loopne
pop
and
sub
sbb
push
pop
fisubs
andps
sub
pop
movsb
adc
mov
or
lods
out
or
xor
aaa
idivl
or
xchg
pop
popa
repnz
stc
rcll
push
dec
jno
mov
xor
movsb
dec
pop
dec
mov
mov
lock
fmul
sub
ljmp
in
push
mov
int
fimuls
in
mov
and
add
scas
xchg
fstpl
xlat
inc
inc
mov
sub
ja
jl
push
rcll
add
xorb
or
mov
test
fsub
jb
and
sti
insl
stos
fsubrl
flds
iret
inc
mov
lock
sbb
aam
in
int3
dec
dec
dec
insl
outsl
cmpl
jecxz
xchg
test
lock
fwait
stc
cmc
inc
sti
xor
lahf
push
dec
push
or
rcrl
test
nop
push
repz
movsb
stos
hlt
dec
repz
negl
neg
xor
imul
sti
pop
dec
pop
in
pop
mov
cs
insl
in
push
jge
rorl
pop
sub
out
rolb
add
adc
jns
push
push
cmp
pop
cmpsl
add
popa
repz
ja
cwtl
nop
ret
movsl
adc
xchg
jbe
mov
cmp
sbb
mov
mov
push
daa
cs
pop
shlb
fstpl
ficompl
jl
xor
div
jb
cli
int
adc
ret
negb
cwtl
mov
lret
pop
add
mov
cmp
imul
insb
inc
pop
mov
dec
fdivp
stos
lock
test
add
adc
sbb
ja
gs
dec
adc
fwait
arpl
push
or
xchg
xor
std
iret
pop
sbb
push
outsb
cmp
sub
call
mov
fisubrs
cmpl
sub
dec
lock
shrb
loop
mov
pushf
or
xlat
fists
sub
pop
aaa
and
xchg
push
cs
in
out
js
or
sub
push
cs
ss
daa
enter
xor
mov
jb
pop
bound
xor
sub
xchg
arpl
lock
idivb
enter
ja
mov
clc
loop
call
and
xor
clc
jns
lea
cmp
test
scas
pop
mov
ud2
dec
lock
rcr
scas
push
push
aad
lods
mov
mov
cmp
scas
stos
dec
mov
push
inc
lret
xchg
nop
test
jle
inc
xchg
imulb
es
out
loope
mov
sarb
mov
xor
push
out
or
xchg
and
push
jge
or
cmp
mov
xlat
test
xor
add
pop
cmp
pop
mov
and
divl
push
sub
lret
inc
int3
fstpt
scas
jns
ds
and
ja
lahf
cmp
push
pusha
ret
xchg
push
imul
add
cli
movsl
inc
pop
pop
sbb
outsb
iret
rcrl
lock
das
fimull
repz
xchg
emms
rclb
add
mov
pop
xor
inc
mov
scas
mov
jno
ret
mov
jne
loop
mov
push
inc
jmp
fsubp
sahf
loope
sti
sbb
incl
mov
or
jl
ret
jnp
or
gs
push
push
fs
arpl
dec
xchg
std
cmp
cmp
inc
jae
jmp
mov
icebp
and
das
lret
int3
imull
mov
pop
sarl
insb
xchg
mov
fsubl
out
dec
dec
addr16
in
push
lret
in
jbe
jae
sub
nop
adc
pop
jno
cwtl
lods
pop
sub
dec
jmp
pop
fsub
cmp
ret
sbb
ljmp
push
int3
iret
xchg
subb
pop
push
jae
inc
xor
or
pop
inc
jne
cmp
movsl
xor
pusha
inc
pop
ret
rcll
fwait
mov
dec
mov
int3
jmp
icebp
in
icebp
xor
outsb
jp
test
fldenv
std
sub
sbb
leave
mov
jle
mov
repz
fdivr
mov
sub
pop
adc
addl
arpl
aam
es
out
int3
adc
loop
pop
sub
mov
addr16
mov
outsb
loope
fwait
or
dec
adc
jg
xchg
stos
mov
test
addl
mov
ficoml
mov
mov
sub
dec
hlt
mov
imul
shl
adc
out
into
shrb
loope
ja
ret
jo
pop
out
push
push
ss
dec
cmp
cmp
sub
mov
fs
xchg
jmp
aad
lahf
in
insb
jno
mov
and
popf
dec
arpl
and
mov
cmp
adc
scas
pushf
pop
xchg
lods
adc
xor
std
sti
insb
or
ljmp
and
out
es
fadds
cltd
mov
jns
aad
cmc
mov
push
push
popa
sub
add
inc
mov
dec
fisttpl
test
jne
andl
and
cwtl
jg
and
dec
out
sbb
mov
sub
mov
sbb
pop
sbb
sbb
aas
xchg
push
inc
xor
jge
xchg
test
loopne
int3
xchg
push
push
dec
sbb
cmp
stos
xor
lahf
icebp
test
dec
mov
mov
push
xchg
je
in
cmp
mov
xlat
mov
mov
xchg
or
lock
loop
pop
roll
dec
push
and
pushf
imul
ja
ret
dec
or
xchg
ficoms
negl
push
adc
sub
lahf
mov
mov
lahf
push
pop
and
xlat
mov
push
push
cmp
dec
jae
inc
xchg
es
sbb
loopne
cmp
jecxz
pop
clc
mov
pop
push
aad
and
out
scas
cli
fwait
inc
jae
lret
lcall
fcomi
xchg
mov
inc
ret
xor
cmc
std
jecxz
ss
push
test
loopne
jmp
mov
jae
or
push
adc
jmp
hlt
and
and
sahf
gs
subb
push
xchg
sbb
jno
hlt
push
aas
pop
movsl
iret
push
xor
pop
bswap
mov
roll
test
fucom
cmp
dec
push
mov
fbld
and
pop
or
stos
push
xor
mov
pop
dec
mull
in
mov
inc
imul
pop
loope
lds
push
add
repnz
aam
out
outsb
test
out
dec
int
jnp
push
xchg
sub
imul
sbb
mov
fisttpll
divb
out
jecxz
jmp
imul
add
mov
xchg
cmp
dec
gs
inc
push
and
mov
push
clc
mov
or
or
mov
divl
ja
or
out
ret
fistpll
xor
sbb
out
or
in
sub
fs
imul
andb
jb
mov
nop
loop
cld
sti
in
cmp
roll
pushf
and
jp
mov
mov
dec
fs
adc
xor
mov
jg
inc
push
push
pushf
data16
loopne
mov
repz
stos
mov
xchg
cmp
mov
ds
push
aas
fldl
sub
ja
cli
imul
jnp
addl
adc
push
fisttpll
popf
jb
cmc
pop
popl
addr16
pop
mov
ret
lea
ret
inc
mov
mov
xchg
push
xabort
cmpsl
push
stos
popf
pop
sarb
sbb
data16
adc
movsl
cmp
pop
vmwrite
into
or
sbb
cmp
mov
repnz
dec
dec
and
xor
mov
mov
gs
je
into
push
xchg
imul
jb
dec
adc
cmp
mov
add
jbe
mov
out
mov
push
into
mov
xor
mov
std
call
xor
rcrb
scas
inc
or
out
jo
push
sti
mov
jae
ficompl
rorb
mov
repnz
in
ss
add
subl
js
jmp
add
ja
xor
dec
push
add
push
dec
sub
push
rcrl
mov
insl
cmp
or
pop
add
faddp
int3
les
xchg
jbe
fsubl
repnz
insb
pop
xchg
mov
ss
das
jb
out
scas
cmc
test
inc
mov
adc
pop
test
inc
fs
ret
outsl
jns
nop
xor
cmp
mov
add
test
lcall
aam
rolb
loop
adc
cmpsb
jge
xchg
out
dec
es
outsb
call
inc
sbb
js
inc
pop
adc
adc
mov
sbb
pop
movsl
dec
mov
stc
fisttpll
or
xor
mov
iret
ja
jnp
dec
cmpsl
xor
xlat
mov
adc
sarl
jecxz
sti
outsl
addr16
cltd
adc
ret
and
jb
adc
dec
mov
lret
cmc
notl
enter
jge
sub
jge
test
das
loopne
jbe
fdivs
das
cli
mov
stc
in
or
xor
imul
fwait
inc
addb
mov
sub
cmp
stc
hlt
and
cltd
call
jp
rorl
mov
xchg
out
dec
xchg
lods
leave
mov
xchg
push
sbb
cmp
cwtl
push
mov
push
xorb
dec
mov
cmc
and
rcr
sbb
xchg
inc
jb
test
test
mov
pop
and
out
inc
xchg
push
pusha
js
es
stos
xor
ljmp
dec
outsb
loopw
pushf
or
addl
into
ret
and
sti
movl
sbb
call
mov
addb
sub
inc
divb
mov
cmpsl
adc
xchg
or
adc
push
xlat
pop
repz
test
arpl
stos
shlb
push
mov
jb
subb
ja
loopne
xchg
clc
sub
aam
pop
inc
jae
inc
cld
repz
lret
nop
mov
jns
push
inc
xchg
imul
test
mov
jne
repnz
jae
jl
adc
cld
dec
sbb
movsl
mov
or
out
ja
loopne
stos
arpl
xchg
or
stc
add
pusha
adc
lret
outsb
and
pop
push
scas
testl
xor
loopne
ljmp
inc
mov
mov
dec
repnz
add
dec
pop
xor
inc
insl
pop
mov
enter
pop
fdivp
lcall
cmp
push
daa
aas
fs
fsub
push
mov
cltd
iret
ret
and
aas
cmc
into
cld
xchg
in
iret
outsl
in
scas
lock
sub
data16
fcmovnbe
jmp
fwait
dec
fwait
stos
fsubrs
cs
lea
sbb
sub
rcrb
lods
mov
cmpsl
mov
shll
fidivrl
pop
ret
jmp
sub
or
adc
repnz
pop
xchg
call
xchg
xchg
adc
out
mov
ljmp
loope
cmp
ja
cmpsb
icebp
mov
out
test
cli
bound
push
or
frstpm(287
cld
les
out
cmp
add
push
rorb
and
cmovp
jle
repz
dec
movsl
imul
xor
xor
data16
adc
and
aam
xchg
sub
sarb
divb
sub
scas
ja
jecxz
sbb
add
jb
mov
stos
mov
nop
mov
je
inc
out
pushf
mov
ret
sub
mov
popf
cwtl
sbb
imul
repz
movsl
ss
sti
pop
mov
mov
in
adc
or
mov
xor
pop
xchg
jge
sti
push
ret
inc
sbb
jnp
xor
int3
sub
bnd
dec
pop
fwait
jp
mov
xor
cwtl
jne
adc
xor
clc
jne
mov
xchg
insb
jne
in
and
adc
ficoml
mov
aam
dec
mov
sbb
lock
loope
int
or
mov
ss
repz
cmp
test
jnp
fisubl
xchg
ret
cmpsl
jno
dec
cmp
push
pop
rcrl
arpl
outsb
sbb
int
xor
mov
pop
iret
add
jle,pt
inc
jg
or
cmp
test
pop
mov
jae
je
mov
add
or
repnz
insb
cmpsb
jecxz
iret
out
inc
dec
mov
mov
fstpl
fs
dec
shr
js
sbb
inc
push
cmp
push
jb
dec
ret
sbb
fsubl
aam
mov
sbb
xchg
in
or
sbb
sbb
lds
xor
pop
ljmp
mov
lret
inc
cltd
cwtl
rolb
ds
push
shlb
xor
movsb
add
inc
fs
jne
lahf
out
lcall
outsb
sub
sbb
addr16
add
mov
and
jns
arpl
mov
mov
and
cli
jnp
or
sub
gs
push
push
addr16
iret
dec
xor
sub
jmp
dec
ljmp
es
jmp
ret
or
or
jno
les
lret
and
fwait
ret
dec
jecxz
stos
shrb
jge
pop
cmpsl
jbe
movb
push
outsl
push
cwtl
mov
pop
das
sub
mov
outsl
pusha
jp
lahf
add
cltd
imul
in
and
sub
xchg
cmpb
or
aam
dec
inc
cmp
push
pop
lods
xor
mov
cmp
mov
aas
add
setnp
cmp
sbb
jmp
pushf
clc
popl
mov
mov
and
add
push
xchg
ja
das
pusha
subl
cld
outsb
sbb
or
xor
je,pt
stc
iret
jbe
loop
dec
out
leave
cmp
in
loope
faddl
mov
addr16
jle
push
inc
cmp
divb
mov
pop
and
mov
and
ud0
pop
stos
dec
std
mov
popa
lea
xor
mov
test
outsb
jle
jbe
push
mov
mov
call
mov
sub
mov
cwtl
std
fsts
imul
imul
sti
jp
loope
out
mov
aas
movsb
push
out
insl
cmp
pop
das
cvtps2pi
inc
push
or
adc
movl
xchg
jecxz
xchg
inc
xchg
imul
mov
shll
sbb
or
loop
jne
mov
lret
mul
push
popf
popa
in
andl
call
add
in
int3
xchg
dec
into
inc
out
stos
scas
push
pop
xor
mov
xchg
in
jae
out
fstl
cli
dec
sbb
mov
pusha
xor
jne
or
outsl
enter
push
pop
pop
stos
popa
pop
outsb
fimuls
jmp
movsb
mov
data16
into
inc
popa
flds
jmp
xchg
aad
and
pop
arpl
movsl
test
add
xchg
test
jl
cmp
leave
pop
push
sub
inc
lret
mov
mov
mov
or
adc
and
addl
cmpsb
outsl
cmp
out
add
lock
cmp
mov
xchg
out
popa
in
scas
jo
push
cmp
data16
or
mov
ror
mov
xchg
imul
push
fisttpll
dec
clc
mov
cs
jmp
fdivr
ja
and
out
mov
aad
xor
lret
mov
pop
lret
jmp
decb
dec
mov
loop
push
push
push
scas
lods
scas
mov
and
lock
cli
in
outsl
loop
pop
inc
sahf
lea
push
js
into
in
jb
push
andb
daa
daa
cmp
cmp
xorb
repnz
call
xorb
jmp
hlt
or
inc
lds
data16
xor
shrl
pop
jg
jecxz
sbb
scas
fucomi
and
sub
aad
rorl
cmpsl
fisubl
lcall
add
push
sub
pop
repz
push
jne
out
aas
movsl
out
sub
add
movsl
lods
lods
mov
bound
andl
cltd
into
mov
mov
cltd
cmc
out
notl
loope
sbb
popf
sahf
inc
mov
leave
sbb
int
sahf
xor
cmp
xor
xor
ret
ds
scas
add
mov
popa
ja
in
mov
repz
mov
mov
mov
jp
inc
jp
lods
sbb
xchg
inc
push
or
adc
in
dec
jbe
mov
es
into
cmp
push
cmp
pop
jl
xchg
mov
add
lods
fs
push
loope
fdivrs
xchg
cwtl
ret
wrmsr
fadds
cmp
cli
lahf
lret
fdivrs
sahf
inc
xchg
jns
dec
out
or
dec
popa
outsb
rdtsc
sub
ss
stos
xchg
out
fwait
mov
nop
push
jne
fisttpll
loopne
jp
or
sub
or
mov
movsl
xchg
push
fstl
subl
add
gs
adc
pop
movsb
mov
xor
insl
dec
mov
fsubr
jns
fcoml
xor
add
adc
ret
into
push
fmul
add
imul
mov
xchg
jmp
push
arpl
pop
je
popf
pop
fsin
mov
push
mov
ret
xor
loope
int3
mov
dec
mov
lret
push
cwtl
in
fdiv
jns
push
fucomi
and
cmp
mov
or
push
es
pop
mov
das
out
stos
aad
out
ss
push
jbe
pop
mov
xchg
or
dec
imul
pusha
xchg
popa
add
pusha
out
lock
scas
test
xchg
push
and
add
xor
icebp
adc
inc
lea
sub
mov
sub
add
adc
arpl
mov
loope
int3
mov
mov
aaa
int3
test
inc
repz
sub
stc
jno
jp
fdivrl
cmp
mov
dec
andb
mov
lea
mov
data16
cmpsl
mov
push
pop
jmp
sub
mov
push
test
imul
ljmp
shlb
idiv
or
add
mov
add
ret
mov
xor
jns
into
ss
sub
shl
leave
cmpsl
or
push
popf
push
and
fbld
out
adc
inc
insb
xlat
jp
pop
xchg
pop
pop
fsubl
inc
xchg
cld
mov
cmp
mov
repnz
fcoms
outsl
xchg
das
loop
xchg
loope
sub
sbb
xor
sub
sub
mov
pand
pop
sub
hlt
mov
push
push
fwait
jns
jb
in
test
pusha
ret
mov
push
cwtl
adc
aam
cmp
push
loop
mov
in
cmp
adc
test
sbb
adc
loope
jecxz
les
dec
adc
sarl
sti
fidivs
push
scas
xchg
sub
xchg
les
lds
mov
dec
inc
xchg
and
and
jmp
in
pop
aad
in
add
sarb
xchg
dec
xor
les
mov
inc
mov
outsb
roll
inc
jae
push
jle
in
push
enter
jnp
repnz
xchg
addr16
insl
push
jo
push
adc
sahf
lcall
sub
pop
into
pop
icebp
pusha
mov
ss
leave
push
mov
daa
sbb
cli
mov
rol
imul
outsl
mov
mov
mov
scas
cmp
mov
mov
dec
ret
jnp
or
std
cmp
imul
fidivrl
mov
xchg
push
incb
and
adc
lea
xchg
fucomp
xor
push
lret
into
outsl
popf
rorb
iret
das
test
jbe
jne
cli
mov
