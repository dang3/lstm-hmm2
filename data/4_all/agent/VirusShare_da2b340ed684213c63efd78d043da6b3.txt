mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
ret
adc
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
dec
add
call
adc
add
push
add
xor
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
jbe
fcoml
xor
mov
add
sub
pop
bound
pop
mov
jmp
mov
jbe
cmp
pop
mov
pop
xchg
je
shrb
inc
jg
xchg
js
mov
idivl
das
les
sub
cli
stc
jg
inc
mov
xor
std
rcr
xor
sub
pop
push
nop
aas
jge
push
mov
jp
inc
in
inc
xchg
cmc
aas
mov
jge
or
fdivl
ret
add
std
sub
add
cmp
stos
mov
mov
push
xchg
movsb
inc
popa
dec
lcall
push
jl
fisttpl
call
sbb
mov
xor
jae
pop
aad
pusha
aam
cmp
push
or
loope
inc
in
push
call
lods
sub
pop
das
cmp
fnstcw
add
and
or
mov
cld
jne
xchg
inc
cltd
pop
pop
gs
das
dec
or
or
daa
aas
aad
xchg
and
inc
mov
mov
cmp
aad
popa
repnz
xor
test
in
icebp
add
mov
xor
push
xchg
cmp
repnz
test
push
jg
test
inc
std
or
arpl
inc
sub
les
nop
mov
mov
inc
cli
jp
sar
in
jo
add
test
loope
imul
fstpl
pop
dec
cwtl
mov
xor
repnz
adc
sbb
cmpsb
mov
pop
push
cmp
xor
fmuls
and
dec
jmp
and
inc
inc
stc
nop
cmpsb
xchg
pop
outsb
push
dec
jns
into
adc
scas
or
out
aaa
imul
jo
add
movsb
das
pop
repnz
inc
cmp
std
mov
xchg
pop
mov
fs
js
push
cwtl
jmp
and
dec
cs
pop
cmp
pop
sahf
push
iret
fsubrl
xor
sbb
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
jbe
fcoml
xor
mov
add
sub
pop
bound
pop
mov
jmp
mov
jbe
cmp
pop
mov
pop
xchg
je
shrb
inc
jg
xchg
js
mov
idivl
das
les
sub
cli
stc
jg
inc
mov
xor
std
rcr
xor
sub
pop
push
nop
aas
jge
push
mov
jp
inc
in
inc
xchg
cmc
aas
mov
jge
or
fdivl
ret
add
std
sub
add
cmp
stos
mov
mov
push
xchg
movsb
inc
popa
dec
lcall
push
jl
fisttpl
call
sbb
mov
xor
jae
pop
aad
pusha
aam
cmp
push
or
loope
inc
in
push
call
lods
sub
pop
das
cmp
.byte
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
jbe
fcoml
xor
mov
add
sub
pop
bound
pop
mov
jmp
mov
jbe
cmp
pop
mov
pop
xchg
je
shrb
inc
jg
xchg
js
mov
idivl
das
les
sub
cli
stc
jg
inc
mov
xor
std
rcr
xor
sub
pop
push
nop
aas
jge
push
mov
jp
inc
in
inc
xchg
cmc
aas
mov
jge
or
fdivl
ret
add
std
sub
add
cmp
stos
mov
mov
push
xchg
movsb
inc
popa
dec
lcall
push
jl
fisttpl
call
sbb
mov
xor
jae
pop
aad
pusha
aam
cmp
push
or
loope
inc
in
push
call
lods
sub
pop
das
cmp
fnstcw
add
and
or
mov
cld
jne
xchg
inc
cltd
pop
pop
gs
das
dec
or
or
daa
aas
aad
xchg
and
inc
mov
mov
cmp
aad
popa
repnz
xor
test
in
icebp
add
mov
xor
push
xchg
cmp
repnz
test
push
jg
test
inc
std
or
arpl
inc
sub
les
nop
mov
mov
inc
cli
jp
sar
in
jo
add
test
loope
imul
fstpl
pop
dec
cwtl
mov
xor
repnz
adc
sbb
cmpsb
mov
pop
push
cmp
xor
fmuls
and
dec
jmp
and
inc
inc
stc
nop
cmpsb
xchg
pop
outsb
push
dec
jns
into
adc
scas
or
out
aaa
imul
jo
add
movsb
das
pop
repnz
inc
cmp
std
mov
xchg
pop
mov
fs
js
push
cwtl
jmp
and
dec
cs
pop
cmp
pop
sahf
push
iret
fsubrl
xor
sbb
adc
or
pop
outsb
out
sub
mov
jbe
push
add
insb
sub
mov
mov
dec
add
jno
imul
mov
xchg
mov
mov
sub
or
mov
inc
push
pop
push
mov
outsb
out
fdivrl
std
ret
and
divb
xchg
lret
jb
lahf
xor
loope
sub
push
cli
add
jg
mov
test
gs
movsl
push
lock
js
call
leave
adc
xchg
mov
bnd
dec
inc
sbb
addr16
es
jbe
imul
pop
xchg
push
icebp
les
mov
xchg
xchg
fwait
in
das
pop
stos
popf
shrl
cld
add
testl
enter
or
pop
and
je
and
std
into
mov
roll
gs
push
push
fwait
lahf
movsb
imul
rorb
jo
cmp
js
test
xchg
addr16
mov
lock
cli
aas
shll
ja
cmp
jmp
inc
or
filds
push
sahf
push
mov
push
sar
jne
xchg
idivl
int
out
roll
mov
gs
xchg
cld
push
shlb
xor
pushf
incb
add
push
imul
loopne
push
jno
fs
cld
or
sarl
jbe
repnz
jle
xor
cmp
cmp
in
ret
cmp
inc
inc
push
int3
mov
push
pop
pop
pop
jnp
fsubrl
cmp
test
popa
mov
sbb
lahf
pop
daa
mov
dec
int3
xchg
xor
int
pop
sub
mov
mov
testb
inc
sahf
dec
xor
movsl
sbb
push
mov
movsl
xchg
insb
into
aaa
fbld
scas
pop
pop
cmp
jo
cmp
mov
mov
inc
out
adc
pop
insl
dec
adc
leave
pop
jns
pop
mov
adc
pop
dec
inc
out
rol
xchg
ffree
jae
or
popa
cmp
rcrl
leave
jecxz
jae
sub
xchg
imul
mov
fldl
pushw
pop
and
push
inc
xchg
xchg
or
jl
sbb
pop
dec
jo
xchg
xchg
cld
mov
pop
push
push
mov
adc
and
mov
sbb
pop
fcomps
push
xchg
daa
icebp
xlat
push
popa
aas
or
loope
addl
dec
fwait
ss
push
mul
scas
xor
adc
inc
inc
mov
push
jb
and
dec
push
inc
cmp
mov
mov
push
push
shll
sti
xor
or
js
adc
inc
jp
inc
xchg
out
shrl
rorb
lea
repnz
and
push
add
shrb
mov
out
fdivrs
xchg
xchg
pop
shr
fptan
cltd
sbb
fldenv
mov
adc
mov
inc
push
aas
inc
dec
mov
jb
mov
test
push
mov
adc
xchg
in
push
test
sub
jns
movb
out
mov
cmp
and
test
outsb
xchg
mov
rorl
pop
pop
mov
lcall
sbb
xchg
ret
jo
scas
movsl
pop
mov
int
cmp
mov
imul
adc
dec
out
pop
sbb
mov
or
es
sbb
shr
dec
js
cld
or
int3
cmpsb
movsl
xchg
and
jno
mov
addr16
inc
or
xor
pop
aaa
jg
mov
movd
int3
xchg
ljmp
test
dec
mov
repz
xchg
xor
and
push
lahf
xchg
pop
pop
xchg
std
std
mov
fbstp
jnp
sti
movsb
aas
jb
mov
mov
sbb
je
outsl
cs
xchg
lods
pop
mov
add
mov
out
stc
jae
lods
push
fs
inc
push
mov
push
and
mov
pushf
mov
push
data16
pop
loopne
mov
xchg
inc
scas
cmpsb
jg
daa
enter
sub
test
dec
add
shlb
or
sbb
shrl
sub
fbstp
test
je
popf
icebp
or
aam
mov
push
faddl
decb
dec
in
mov
push
test
pop
jbe
dec
jno
cwtl
mov
stc
jbe
mov
or
outsb
cwtl
inc
sub
rcl
stos
aaa
lea
lret
mov
xor
sbb
out
mov
pop
or
les
repnz
mov
pop
sbbb
lds
lods
in
sahf
mov
mov
or
mov
add
loope
bnd
jbe
xorl
push
sbb
sahf
fisubs
ret
sub
inc
xchg
mov
test
jp
push
lea
and
mov
stc
inc
ret
xchg
sbb
btrl
push
xchg
or
loop
les
inc
jg
iret
fsub
shl
push
rcll
cmp
add
or
xorb
mov
stos
movsl
setne
xchg
imul
mov
mov
xchg
xchg
mov
pop
push
add
stos
in
test
int
out
sub
and
xchg
push
sbb
aaa
inc
imul
and
mov
add
lods
incl
push
inc
insl
ljmp
inc
mov
dec
pop
sub
fdivrs
pusha
rclb
adc
loopne
hlt
in
orb
sbb
les
xchg
incb
adc
sbb
sti
and
mov
sub
imul
push
ret
das
insl
mov
dec
movsl
mov
sbb
and
test
divb
subb
loopne
pop
inc
inc
into
popf
sahf
mov
insb
shll
sarl
jecxz
sub
lret
sbb
cmp
lds
add
or
in
adc
arpl
cmp
mov
cmpsl
cmp
test
pushf
leave
xor
or
fcmovbe
js
test
mov
and
test
mov
repnz
sub
pushf
sbb
cmpsl
pop
mov
xchg
rorb
shl
mov
in
nop
mov
cmc
inc
push
add
inc
scas
std
faddl
mov
cwtl
sbb
add
jo
xchg
jge
fwait
std
repnz
cwtl
inc
mov
out
or
mov
jmp
jo
lcall
repnz
decl
pusha
pop
pop
movsb
repz
faddl
mulb
sub
out
sarl
subl
lahf
mov
and
das
mov
mov
jno
cmp
jns
cmc
dec
sub
daa
inc
js
mov
dec
insb
jbe
cmpsb
add
push
icebp
pop
hlt
or
sar
rclb
sub
movsl
or
mov
mov
imul
rorb
dec
jl
sub
jae
adc
push
jge
pop
cmpsl
loop,pn
fisttps
clc
cmp
cmpsb
and
xchg
loop
int3
pop
aad
add
shll
mov
pop
imul
and
cmc
mov
cltd
xchg
movsl
push
pop
add
jmp
emms
fildll
xlat
pop
lret
call
add
loopne
push
call
mov
pop
xor
adc
popf
lret
test
icebp
repz
out
das
leave
pop
sbb
mov
xchg
ljmp
jno
cmp
fisttps
mov
scas
or
fimuls
adc
inc
out
addr16
sbb
insb
sub
lea
mov
sbb
jl
cmp
dec
adc
fwait
ret
stc
icebp
and
cmp
sbb
jns
sub
fiaddl
fcoml
je
or
lods
scas
add
data16
dec
or
ret
dec
test
jmp
mov
jg
push
arpl
outsb
psrad
iret
incb
jmp
fwait
mov
and
push
jb
mov
and
cli
movsb
cltd
iret
mov
mov
call
inc
push
adc
mov
and
mov
mov
out
fstl
pop
xor
cmp
les
les
int
imul
cmpb
mov
xor
iret
inc
roll
ret
jbe
xor
out
inc
adc
or
enter
sub
mov
pop
cld
push
ss
popf
mov
test
repnz
push
call
pop
mov
push
stos
mov
xchg
sbbl
in
and
sub
cmp
loop
fwait
pop
add
lahf
sub
subl
jmp
adc
cmp
mov
add
dec
mov
pop
jle
stos
in
pop
inc
fstpt
sub
xchg
or
push
cld
out
cmc
pop
add
mov
pop
pop
movsb
add
adc
pop
loop
into
adc
pop
mov
repz
mov
pop
xchg
test
je
pop
sbb
movsl
out
jo
xchg
pop
push
mov
lahf
cmp
mov
mov
lock
xor
js
add
xchg
movsb
movsb
icebp
sub
das
jl
test
ss
mul
js
inc
inc
push
mov
mov
pop
test
sbb
dec
pop
jg
xchg
fs
sub
add
das
push
addr16
aam
loope
mov
subb
outsb
push
test
bound
xor
inc
subb
jle
inc
shrb
and
cwtl
repnz
add
shrb
in
mov
sti
repnz
outsb
inc
sbb
addr16
mov
js
mov
in
andl
lcall
sti
mov
pushf
pusha
lret
mov
movsb
les
test
xchg
sbb
xor
repnz
dec
imul
sahf
sub
xchg
outsl
loopne
pop
dec
cmpsb
movsl
push
push
test
mov
or
lahf
push
dec
adc
pop
pop
outsb
nop
add
push
and
push
or
in
mov
dec
test
push
movsl
jl
inc
outsb
cmpsb
imulb
push
jae
divb
repnz
daa
push
call
inc
rcrl
cmp
repz
mov
jle
cmp
add
outsb
scas
rorl
jb
jo
pop
cmc
ljmp
mov
sbb
pop
das
xor
fisttps
gs
jmp
mov
leave
sbb
call
adc
fldcw
jae
out
fcoms
xchg
aas
stos
iret
sub
xchg
into
and
rolb
cmpsb
push
jle
adc
adc
push
stc
jnp
mov
xor
nop
es
bound
mov
adc
bound
mov
les
adc
dec
push
and
lods
stos
mov
in
mov
in
and
push
xor
ret
sbb
popf
inc
adc
movsl
int3
xlat
dec
mov
push
and
arpl
mov
xor
leave
push
imul
pop
aaa
add
xlat
lods
mov
pop
xlat
xor
pusha
cmp
cmp
push
testb
sub
fldt
inc
add
js
and
inc
and
ret
jp
mov
xor
ret
lea
pop
jl
jno
in
test
and
stc
insl
fmull
adc
int
out
mov
imul
bound
sub
pushf
rcll
mov
in
xchg
xor
stos
adc
or
arpl
iret
rorb
sbb
push
lea
out
inc
adc
jae
pop
cmp
test
cmpl
mov
lret
arpl
jge
in
jg
fs
xchg
cltd
adc
test
stc
cmpsl
push
fwait
pop
push
rclb
das
or
fwait
enter
loope
xchg
test
flds
sub
jb
jns
cmp
movsl
stc
push
imul
int
mov
sti
mov
pusha
xchg
xlat
test
ret
fs
jo
cmp
mov
out
mov
pop
inc
push
aam
nop
arpl
sbb
insb
pushf
xchg
xlat
cmp
rcrb
jg
in
pop
stc
and
loope
sbb
ret
out
mov
jp
dec
loope
mov
rcl
mov
xlat
sub
lcall
pop
out
jns
xchg
xchg
jle
popf
cs
ret
hlt
pushf
lds
stos
adc
jo
sbbl
stos
aad
push
inc
into
pand
ret
rorl
mov
xchg
sub
in
pop
pop
sub
movsb
sub
sbb
inc
in
dec
nop
ljmp
push
test
jb
xor
mov
pushf
sbb
or
xchg
enter
outsb
or
leave
pushf
cmpb
fucom
push
gs
push
je
bound
call
loopne
xchg
and
and
imul
sbb
ret
push
inc
aaa
jbe
jae
dec
test
dec
bound
sub
adc
xchg
pop
xchg
jae
iret
popf
add
insb
jns
cmp
push
arpl
aam
mov
std
out
nop
into
movsl
ja
gs
mov
adcl
stc
jle
mov
push
cmc
xor
mov
sub
cmpsb
push
rol
xor
sub
dec
cld
int3
mov
pop
pop
mov
jle
adc
int3
repnz
out
outsb
iret
je
int3
jno
push
test
pop
jle
nop
pop
pop
jge
adc
iret
and
xchg
mov
fidivl
adc
pop
movsl
adc
mov
int3
in
in
and
ret
hlt
popf
test
inc
and
cmp
lret
sbb
xor
stc
push
icebp
paddq
addr16
jnp
xchg
popa
mov
fs
push
notl
les
lods
mov
cld
imul
dec
aam
push
test
cmp
repnz
insb
adc
es
ja
add
dec
int
and
adc
xchg
push
or
mov
sbb
push
inc
xlat
into
jnp
js
push
mov
fbld
test
daa
arpl
daa
out
sbb
dec
test
push
das
imulb
adc
pop
aas
repz
lock
fwait
in
test
ds
mov
mov
xchg
insb
push
lock
mov
arpl
addr16
pop
pop
hlt
pop
jne
test
jmp
subb
add
lods
out
cmp
xchg
flds
lcall
cmp
fstps
cwtl
cmp
xor
lcall
je
dec
inc
and
je
bound
jl
stos
or
daa
cmpb
clc
xchg
sbb
cmp
mov
add
and
sub
lock
sub
adc
jge
clc
das
stos
pop
pusha
cmpsl
dec
sbb
imull
frstor
sbb
sbb
in
mov
daa
fldl2e
lret
mov
sub
mov
add
dec
pop
mov
add
nop
jmp
std
push
mov
sub
xchg
dec
mov
mov
sub
imul
and
mov
bound
rolb
mov
out
jnp
jl
mov
sbb
outsb
mov
fs
mov
xchg
int
bound
es
mov
scas
mov
std
push
aam
adc
or
adc
inc
popa
mov
scas
roll
sti
push
stos
mov
xor
mov
push
xorl
pop
lea
mov
test
cmp
lods
pushf
cli
mov
and
pop
add
inc
jp
pop
iret
sbb
xchg
jp
and
add
sub
push
test
dec
adc
xchg
lock
loopne
lret
syscall
cmp
repnz
xchg
sbb
sbb
mov
lahf
xor
aad
xor
addr16
fisubl
cmp
adc
int3
out
mov
jae
mov
hlt
filds
jle
sub
xor
mov
out
jo
fmul
mov
stos
cli
sbb
dec
mov
ds
mov
mov
dec
es
xchg
push
and
mov
mov
dec
mov
stos
fnstsw
sbb
iret
push
fadds
call
add
sub
pop
sub
lock
daa
inc
dec
aaa
mov
mov
jmp
mov
sbb
addl
js
dec
jbe
adc
dec
cmp
mov
rcll
xchg
fmull
inc
jecxz
sub
fistl
hlt
pushf
jl
repz
sub
cmp
cmp
movsl
push
xchg
sbb
call
pusha
lcall
add
popa
push
sub
int
lret
addl
xchg
sub
xchg
jbe
mov
jo
pop
lods
push
arpl
test
stc
mov
test
xchg
mov
mov
lahf
subb
jns
cld
scas
inc
mov
data16
cwtl
dec
and
xchg
mov
adc
mov
stc
mov
stos
lahf
pop
pusha
aaa
cmp
mov
xor
inc
add
adc
and
jo
lds
mov
loope
jge
push
and
in
mov
pop
test
pusha
push
inc
sahf
sbb
pop
repnz
lahf
outsb
or
mov
scas
fdivrl
mov
out
xchg
lods
jae
mov
syscall
inc
notb
jbe
push
mov
sub
int3
leave
xchg
jg
push
add
push
adc
sbb
mov
test
xlat
aas
loope
js
stc
scas
out
insb
cmp
ret
mov
cmp
jne
mov
in
dec
xor
jbe
call
push
movsb
pop
or
inc
pop
push
jecxz
scas
pop
adc
aad
push
xchg
push
stos
jg
cld
or
push
lret
add
fsubs
push
enter
mov
pushf
repz
pop
xchg
xchg
ja
and
add
cmc
sti
mov
cld
push
negl
cmp
lahf
jecxz
lcall
cmp
leave
push
ret
std
lahf
add
push
data16
xchg
push
add
push
stos
gs
es
sub
leave
xor
mov
jp
adc
cltd
fisubs
daa
fbstp
mov
sbb
cli
andl
pusha
loop
jl
xchg
add
add
enter
nop
mov
mov
add
mov
shrl
xchg
cmp
icebp
or
inc
fisubl
out
pop
inc
popa
sbb
popf
xor
sub
inc
fidivrs
and
stos
inc
jecxz
aas
push
add
adc
in
int3
mov
mov
test
cmpsl
fucomp
movsbl
in
cmp
orb
arpl
mov
add
or
jecxz
xor
pop
insl
or
fdivr
jmp
ret
es
mov
xor
mov
inc
fld
mov
ljmp
sbbl
aas
or
pusha
mov
adc
and
fisttpl
lods
pop
mov
jns
div
fdivr
mov
mov
out
fistpll
jnp
inc
sub
es
push
add
fsub
std
and
ja
sbb
mov
xor
or
fildll
cmpsl
mov
aaa
and
push
xor
and
das
sbb
in
in
outsl
xor
mov
aas
dec
gs
imul
fadd
fxam
frstor
addr16
in
imul
inc
popf
pop
mov
mov
cmpsb
sub
mov
sbb
or
ror
stos
xorb
clc
in
cwtl
imul
leave
nop
fcomps
or
or
add
push
fmulp
mov
loop
mov
scas
rcr
push
add
add
nop
shrb
insl
mov
cmp
adc
cmp
jg
lods
sbb
fnstenv
jmp
push
pushf
lea
sbb
mov
dec
ret
jge
jle
jbe
push
imul
test
xchg
loope
jecxz
jmp
and
or
xorb
imul
inc
xorl
imul
cmp
xchg
ljmp
inc
adc
in
jmp
add
sub
lods
clc
mov
mov
xchg
test
insb
gs
int
xchg
cwtl
outsb
and
adc
nop
stc
and
sbbl
nop
enter
sbb
add
movsb
lea
mov
in
lods
push
ss
xor
adc
add
dec
test
fidivrl
insb
mov
ret
dec
ret
xchg
scas
int3
call
jge
insb
pop
loopne
inc
xchg
mov
ljmp
inc
lock
sub
pop
mov
cltd
ret
push
cmp
mov
and
push
jecxz
cmp
enter
inc
cmpsl
fstp
mov
lock
out
or
rcrl
cs
jg
in
hlt
add
adc
mov
jle
outsl
mov
or
pop
pushf
pop
jg
test
cmp
inc
scas
leave
push
mov
lret
ss
sahf
adc
bound
outsb
dec
sti
mov
test
out
flds
xor
test
push
fdivrs
cmpsl
shlb
icebp
icebp
lret
aas
test
and
mov
js
aaa
xor
and
mov
shlb
dec
js
cmp
lret
inc
mov
lret
loopne
add
in
fsubrs
nop
or
fistpl
jl
sbb
scas
hlt
lahf
subb
cltd
adc
adc
add
xchg
inc
icebp
dec
mov
sub
cli
mov
cmpl
xchg
inc
pop
dec
sbb
das
mov
ljmp
hlt
lods
call
sarb
add
pop
push
sbb
mov
lods
hlt
mov
mov
jo
mov
shlb
dec
add
adc
dec
sub
xorb
popf
and
cmpsb
or
rclb
sbb
loope
cmpsl
jbe
les
ret
leave
mov
repnz
out
xchg
push
jae
add
ss
pop
cwtl
popa
push
mov
mov
jmp
mov
jno
into
mov
gs
xchg
fstps
cmp
lea
sbb
mov
lea
dec
icebp
inc
sbb
push
out
jno
or
mov
mov
aad
jp
cmp
mov
dec
idivb
xor
pop
fiaddl
and
pop
cmp
rcl
adc
dec
mov
scas
mov
fwait
es
mov
push
outsl
push
mov
jnp
cmp
out
addr16
repnz
and
mov
iret
loop
movsb
mov
xor
mov
addr16
jecxz
sub
imul
movsl
xchg
sub
jno
rcrb
push
shlb
adc
jecxz
adc
in
sub
and
xchg
cmp
push
dec
into
inc
incb
adc
aad
in
fs
frstor
adc
nop
popf
xlat
cmpsl
into
repnz
cmp
pushf
mov
sbb
ja
pop
pop
arpl
mov
aaa
popa
cmp
pop
int3
push
data16
add
testl
add
pop
mov
sub
insl
pusha
sar
cmp
add
sbb
dec
add
mov
xlat
fldt
fidivl
xchg
into
mov
cs
pop
aad
adcb
push
out
xor
stc
cmp
pop
or
repz
ret
je
xchg
ja
cmpsl
andnps
das
cmp
lret
jle
dec
mov
iret
sub
mov
out
loopne
rcl
inc
aad
dec
test
pusha
clc
lahf
into
cmc
and
in
leave
inc
jmp
cmpsb
jnp
loope
mov
stc
dec
xchg
lret
mov
cmp
mov
ja
add
icebp
adc
add
call
dec
loopne
int3
xchg
out
adc
mov
adc
mov
enter
or
dec
lcall
mov
jge
loopne
stos
arpl
in
xchg
call
ficompl
call
adc
mul
movsl
out
mov
and
popf
push
dec
gs
hlt
sub
jg
xor
xlat
mov
aaa
test
sbb
pop
repz
ljmp
ficompl
cmpsl
mov
das
fdivl
pop
push
mov
vpsadbw
movsl
sub
and
cmp
loope
out
inc
adc
loop
leave
and
in
stos
jle
or
ljmp
pop
lcall
outsl
adc
sbb
cld
mov
ljmp
mov
outsb
icebp
cvtps2pi
in
test
and
push
mov
or
popa
cmp
add
fwait
push
stc
lret
jno
sbb
popf
sarl
aad
sub
sbb
fnstsw
repz
iret
dec
mov
cmp
add
inc
stc
add
xchg
mov
xchg
pop
inc
cmpsb
adc
jecxz
clc
ret
pop
popf
mov
ret
pop
adc
mov
rcl
das
cmp
iret
jp
push
xchg
fistl
sub
sub
mov
push
cmp
cmp
and
addr16
mov
inc
shlb
xchg
lahf
push
bound
arpl
pop
adc
cmpsb
mov
mov
pop
jle
push
lret
shrb
sbb
or
mov
pop
pop
jae
jp
daa
enter
sub
aas
lea
cwtl
fdivl
add
leave
dec
and
sbb
lret
sub
mov
lock
xor
aam
xlat
out
shl
cli
imul
fwait
jns
aaa
dec
loopne
sub
jae
scas
cmp
daa
rclb
shl
and
xchg
sub
adc
jmp
addb
pushf
pop
scas
xchg
es
cmp
mov
mov
jl
pop
iret
pop
dec
cmpxchg
arpl
sub
cmpsl
lret
testb
adc
xchg
mov
cltd
mov
jp
xor
pop
pop
sub
mov
sbb
sub
cmc
xor
push
jbe
mull
lds
jecxz
jle
inc
push
bound
sbb
cltd
cltd
jne
cmp
outsl
fadd
jnp
mov
clc
xchg
mov
ljmp
shl
sbb
ja
xor
mov
sti
adc
bnd
sub
cs
pop
xor
jp
cli
ja
int3
enter
xchg
xor
jle
fdivrs
sahf
inc
ja
inc
test
xlat
dec
leave
rorb
sub
rclb
or
roll
mov
decl
jnp
lcall
sub
fdivs
testb
imul
int
push
push
aas
pop
push
lods
adc
push
sbb
out
jecxz
xchg
xchg
inc
jae
jnp
imul
fisttpl
lahf
adc
jb
push
into
aad
cltd
push
shlb
jo
mov
out
sub
scas
push
push
insb
dec
jno
adc
jl
pop
or
out
xchg
pushf
imul
jp
or
add
inc
sti
dec
mov
add
push
adc
rol
jle
add
or
mov
dec
jo
pushf
jecxz
mov
pushf
nop
mov
add
and
movsb
jg
es
insb
xchg
add
lcall
ficomps
mov
inc
lds
xor
movsb
pusha
loopne
lds
leave
pop
sub
addr16
push
shl
jae
xlat
lret
iret
adcb
test
pop
mov
jg
jb
sub
lods
cli
cwtl
jge
aaa
imul
jecxz
arpl
inc
stc
shrw
cmpsb
sbb
mov
enter
cltd
mov
pop
aad
inc
popf
sbb
xlat
test
fnsave
jl
xchg
xchg
jmp
dec
stc
ds
pop
ja
loop
jno
repz
xchg
push
rcrb
sub
xchg
jecxz
mov
test
repnz
dec
jne
fs
mov
sub
movsb
je
sub
pop
xor
mov
aas
cmp
icebp
pop
add
dec
sub
enter
data16
mov
ljmp
cmp
cltd
mov
mov
stc
repnz
push
inc
into
jmp
pusha
daa
aaa
pop
int
test
push
bound
shr
fbstp
fistpl
sub
lea
cli
push
int
and
xor
bound
xchg
movsb
fstpl
es
dec
rcl
inc
cmp
inc
dec
xchg
in
xchg
push
cmpsl
pushf
mov
mov
lock
andb
cmp
test
add
lock
in
js
or
imul
and
addl
ret
ret
pop
adc
test
es
xchg
loop
js
pop
add
xor
or
popa
mov
movsb
sub
ds
add
jmp
dec
xor
lods
xchg
push
insb
mov
xchg
sti
lds
adc
insb
pop
cmp
or
adc
add
xor
cli
xchg
and
scas
cltd
cmp
inc
dec
shll
faddp
jb
mov
push
jb
repz
push
add
fsts
orl
int
push
pop
negb
lcall
ss
mov
daa
fdiv
sti
lock
adc
dec
mov
loope
push
loopne
popf
movsb
lods
jl
pop
push
adc
cmp
lret
or
add
lock
xchg
sti
subb
pop
shrb
cmc
jle
shrb
jnp
lods
int
test
add
mov
into
xor
mov
and
loop
das
in
sbb
mov
push
inc
sbb
test
lahf
mov
stos
mov
jb
ss
shrl
mov
or
addr16
pop
std
adc
ja
into
pusha
scas
std
or
cli
test
les
adc
into
aad
add
je
inc
mov
xchg
inc
jl
push
mov
mov
mov
movsl
and
push
mov
sub
or
fcom
das
dec
scas
cs
dec
mov
imul
push
sahf
mov
sti
and
movsb
pushf
mov
stos
aam
sahf
fdivrs
mov
hlt
daa
or
ret
jge
cmpb
mov
push
sbbl
mov
xor
and
imul
sarl
xchg
push
mov
dec
lret
and
cmp
xchg
mov
xor
jmp
mov
sbb
ja
dec
adc
lock
adc
fldt
push
stos
push
pop
stc
cmc
push
notl
mov
stos
mov
aaa
push
daa
call
test
movsb
cmp
mov
mov
mov
es
xor
movsb
adc
clc
vcomiss
andl
lods
cmp
adc
add
jno
xchg
lock
loope
rol
rolb
push
ds
add
lds
mulb
iret
sbb
mov
dec
inc
lcall
push
mov
pop
cmp
and
outsl
insb
adc
test
dec
jnp
fstpl
je
lods
jmp
es
insb
push
lcall
push
jne
mov
cs
adc
loop
addr16
gs
das
mov
test
pop
mov
sub
or
aad
push
jmp
cwtl
out
inc
mov
dec
mov
dec
sti
ljmp
and
sbb
jb
cmpsb
sahf
insb
repnz
sbb
fbstp
test
sti
int
int
cmc
ret
pop
inc
cs
rorl
bound
add
loop
sub
fdivrs
fbstp
std
and
frstor
mov
mov
sub
loopne
xchg
mov
pop
mov
stc
lea
mov
cmpsl
pop
int3
add
outsb
gs
dec
sti
fstpt
pusha
pop
mov
insb
xor
cmc
sub
pop
pushf
js
mov
out
je
inc
cli
sub
rcr
int
cmp
shlb
jl
cmpsl
xchg
add
out
repz
test
movsl
lods
jno
sbb
in
push
pushf
popa
and
xlat
add
data16
outsb
inc
cmp
vlddqu
mov
adc
in
pop
mov
xor
fldl2t
sub
bound
fwait
insb
pop
movsb
sbb
lods
out
cltd
add
ret
inc
xchg
shlb
dec
mov
inc
jmp
or
lds
test
pop
lods
jle
icebp
rolb
lock
ss
mov
cli
cmp
sti
and
dec
out
negb
adc
ljmp
xchg
lret
xchg
sub
cmp
into
sub
pop
jne
pop
and
sub
enter
dec
jecxz
daa
inc
inc
arpl
loopne
popa
aad
lahf
and
jnp
lcall
shll
jae
daa
add
jecxz,pn
bound
mov
adc
inc
mov
sub
push
xor
fsub
jle
mov
insb
jp
test
incb
xchg
pop
or
sub
repz
insb
pop
xchg
dec
jnp
mov
inc
fisubs
push
jne
adc
out
out
stos
fucomi
sub
andl
daa
cmp
movaps
imul
in
jo
fninit
dec
call
seta
mov
pusha
jmp
mov
psllw
xchg
jne
push
inc
push
sahf
movsb
cmp
adc
shrl
sub
add
ds
add
mov
add
pop
xchg
pop
inc
cmp
mov
sbb
inc
pop
mov
or
ret
call
mov
jbe
push
mov
sbb
sbb
popf
imul
sbb
sbb
ds
mov
sbb
pop
dec
pop
push
push
nop
sarl
dec
arpl
rcrl
lea
xlat
or
mov
iret
pop
jno
mov
lods
pop
andl
out
mov
push
adc
adc
mov
xchg
outsb
or
es
cs
and
insb
mov
movsl
cmp
xchg
icebp
adc
pop
jp
inc
or
and
jno
aad
xlat
fbstp
mov
sub
shll
dec
mov
adc
jno
rol
call
sub
lods
insl
repz
cmc
dec
pop
insb
rcrb
sbb
sar
push
mov
sbb
and
loop
ss
sbb
stos
mov
xor
int3
mov
lahf
jp
mov
scas
fs
xchg
out
lds
stos
inc
or
jbe
int3
stc
shrb
inc
mov
int3
lea
jmp
jnp
shll
mov
push
loope
add
call
jg
push
test
push
push
xchg
add
lahf
xchg
je
arpl
and
add
add
dec
push
sbb
inc
push
flds
movsl
pop
adc
xor
mov
fsubs
sbb
push
sbb
gs
into
push
mov
inc
adc
pop
sbb
push
popf
lcall
gs
jge
out
pop
and
mov
sub
mov
cmp
pop
out
inc
dec
or
push
mov
mov
lret
or
push
push
pop
lret
fimull
pop
je
data16
mov
ljmp
mov
loopne
mov
push
push
test
mov
call
cmovno
sti
lcall
movsl
mov
pop
xchg
les
lods
popf
call
dec
int
loopne
mov
xchg
stos
lahf
movsb
xchg
push
insl
sub
cmc
mov
jmp
cmp
insb
notb
xchg
hlt
mov
cmp
mov
mov
mov
pop
rcll
dec
mov
xchg
stos
or
bound
imul
mov
mov
js
inc
lret
insb
xchg
xor
or
shll
sbb
pop
ja
mov
mov
mov
imul
xchg
pushf
xchg
adc
pop
jno
fcoml
fdivs
jno
jnp
jmp
inc
cmp
and
lret
mov
jns
push
jmp
inc
hlt
pop
cmc
sbb
and
ds
and
dec
pop
cmp
in
shlb
movsb
addl
in
fstpl
outsl
enter
leave
and
xchg
leave
scas
int
jecxz
ds
jne
lahf
aad
pusha
js
mov
out
add
scas
mov
aam
mov
mov
imul
and
mov
xchg
xor
icebp
test
cmp
shl
or
sub
mov
sbb
and
rorb
hlt
inc
mov
int
inc
shrl
mov
mov
inc
jns
cmp
sbb
cmp
push
adc
jmp
mov
adc
jne
mov
lods
jne
enter
mov
push
jb
scas
add
mov
lea
in
scas
sti
add
iret
xchg
xchg
arpl
int3
dec
iret
jns
cmp
sbb
orl
pop
mov
jecxz
ror
dec
mov
out
ret
add
adc
lea
mov
out
xchg
jg
mov
push
jae
dec
add
hlt
sub
insl
jg
out
and
iret
jo
inc
cmc
xchg
out
sub
sub
ret
mov
imul
jle
adc
call
sbb
imul
repz
insb
push
iret
cli
dec
xchg
inc
insl
xor
xor
push
sbb
mov
push
xor
push
loopne
mov
cs
imul
xor
cmp
sub
add
out
and
nop
cli
inc
push
push
jmp
push
sbb
out
imul
fidivrs
mov
mov
xchg
pop
pusha
sbb
xchg
adc
loop
repnz
pop
xor
xchg
push
jmp
jns
int
mov
in
cmp
mov
push
icebp
cmpsb
call
pop
push
jge
scas
add
aad
out
out
shlb
sti
cmpsb
xchg
sub
pop
into
xor
xchg
mov
push
pop
movsl
jae
inc
mov
sbb
jmp
pop
or
push
xorl
loope
pop
movsl
movsl
bound
jecxz
in
call
sbb
enter
lcall
std
in
mov
repz
push
jle
fnstsw
orb
lock
pop
stc
jp
xchg
xchg
mov
lock
mov
push
arpl
pop
add
stc
jns
cmp
stos
mov
test
xchg
jp
add
pusha
sub
movsb
ss
int
jne
outsb
aad
inc
inc
xchg
das
pop
mov
dec
push
lds
cs
call
or
ljmp
out
scas
xor
in
jbe
aas
dec
jmp
lds
sub
scas
pushf
notl
int
push
pop
or
add
fwait
sbb
ja
push
loope
lea
cmp
test
jb
xor
in
sar
decb
aaa
xor
add
movsl
orl
lret
dec
sub
scas
fcmovnbe
xchg
test
lret
jbe
xor
clc
dec
stc
inc
mov
xchg
sbbl
sti
pop
adc
ffree
xchg
fildll
fs
xor
jns
scas
negl
fimull
std
jo
aaa
and
rolb
dec
addr16
sbb
pop
popf
rdtsc
dec
lret
xchg
gs
jbe
xlat
daa
pop
hlt
test
lcall
adc
rcrl
hlt
dec
lret
aam
push
xchg
mov
aad
or
fbld
mov
and
movsb
cltd
rcll
iret
xor
inc
es
xchg
pop
arpl
subl
insb
ss
jmp
xchg
sbb
stos
cmpsl
sub
add
mov
add
dec
mov
out
fildll
fs
repz
mov
pop
andl
fstps
sti
in
cmp
popa
jg
or
shlb
in
dec
aam
pop
xor
jl
jl
add
cltd
movsl
imul
xor
cld
adc
imul
mov
ret
out
cmp
fsubp
neg
dec
and
jb
inc
ja
jo
add
lea
push
sub
repz
push
pop
sbb
outsl
imul
mov
test
adc
sbb
add
mov
add
sarb
dec
xchg
sahf
sahf
add
out
xchg
iret
sbb
arpl
js
movsb
cmpsl
dec
adc
mov
adc
mov
lods
and
adc
inc
xchg
xor
jg
mov
adc
cld
hlt
add
sub
mov
sub
cmpsl
dec
push
mov
in
mov
mov
lea
out
mov
stos
jge
inc
daa
xor
xor
stc
int
movb
push
mov
push
ljmp
imul
jne
cs
cmp
adc
mov
fsubl
mov
cmpsb
mov
mov
or
push
sbb
sub
adc
mov
jb
mov
lds
adc
or
decl
jl
and
sahf
cmpb
adc
jae
inc
jg
insl
fdivrp
fwait
in
mov
push
fmul
ret
xchg
mov
mov
addr16
lds
aam
jb
shl
push
add
jno
lods
gs
pop
add
jae
popa
inc
push
jmp
imul
adc
scas
dec
push
faddl
icebp
in
stc
aaa
roll
xor
lods
outsl
and
xchg
les
jbe
pop
xor
jae
mov
scas
inc
push
xchg
leave
stos
insb
push
pop
js
sbb
add
push
popf
xchg
push
ljmp
inc
pop
mov
sahf
sbb
test
xchg
mov
dec
cltd
fstl
call
push
enter
jmp
cmp
imulb
data16
lds
xlat
cmc
lahf
add
jp
sbb
inc
and
add
popf
std
add
imul
fstpt
sbb
mov
repnz
icebp
jo
in
fcmovnb
mov
sti
pop
enter
adc
adc
or
cmpsl
pop
cwtl
rol
loopne
mov
data16
push
stc
mov
std
aad
cli
sarb
mov
xchg
repnz
inc
mov
jb
insl
lds
jmp
cmpsb
call
jl
lret
loopne
mov
rcl
addr16
mov
sub
mov
outsb
lcall
cmpsb
push
cmp
and
mov
and
test
out
xchg
leave
and
mov
test
aas
outsb
pop
test
shrl
test
stc
inc
enter
push
dec
push
sub
inc
hlt
inc
cmpsl
aaa
add
out
inc
int
push
loop
inc
jnp
pop
pop
dec
insb
test
imul
inc
jno
rcl
les
sbb
pop
sahf
sbb
pop
imul
je
pop
or
jmp
cmpsl
sahf
outsl
orl
mov
cmp
hlt
mov
mov
push
sbb
andl
adc
sub
paddd
aam
cmpsb
cld
xor
gs
inc
call
pop
add
push
pop
mov
jmp
lea
pop
movsl
push
mov
xchg
mov
xchg
les
out
jno
dec
mov
xorl
mulb
cmp
in
inc
cmp
sub
pop
out
jns
lods
testl
and
dec
enter
xor
negl
jbe
scas
sub
pop
outsb
cmp
in
out
and
es
subl
ret
push
out
xchg
sti
or
mov
dec
test
loopne
mov
sbb
dec
test
adcl
xor
pop
or
xchg
icebp
mov
outsb
inc
lea
les
loop
outsb
add
insb
jp
add
pop
adc
xor
push
mov
xor
jle
adc
mov
adc
pushf
ss
mov
jmp
and
adc
flds
jl
hlt
int
and
sub
lods
out
or
dec
mov
aad
addr16
dec
fbld
imul
imul
daa
sub
jno
pusha
push
dec
push
les
inc
aad
jb
add
push
jecxz
cmpsl
dec
popf
inc
dec
sahf
fbld
or
out
movl
stc
xor
icebp
lods
out
insl
jbe
nop
imul
mov
pushf
clc
jns
add
daa
sub
push
and
add
sti
xchg
sbb
jmp
out
sub
mov
int
mov
test
cmp
pushf
cmp
loopne
repnz
dec
mov
jb
dec
mov
sbb
cmpsl
sub
cld
mov
inc
dec
subb
dec
jae
jmp
mov
sbb
orb
int
pop
cmp
rcrb
jge
lock
outsb
ljmp
icebp
iret
xchg
jl
mov
fwait
and
jl
fs
jo
std
jbe
pop
aad
dec
mov
ss
xor
sub
fwait
inc
shll
les
mov
lahf
mov
mov
inc
stos
xlat
sbb
shrl
or
pop
es
xchg
sti
mov
enter
sti
and
aam
jl
lock
inc
insb
popa
je
filds
push
xor
hlt
in
outsb
js,pt
int
ret
sub
mov
adc
inc
insb
inc
add
mov
mov
jns
inc
cmp
lret
fs
pop
int3
dec
xor
outsb
push
imul
cvtps2pi
and
xchg
add
std
notl
push
cmp
cmp
pusha
sbb
imul
data16
sahf
jp
repnz
loop
ret
aas
inc
xchg
cltd
pop
stos
jle
mov
dec
cmp
fldt
xchg
xor
mov
cltd
jl
and
ret
movsl
and
push
sahf
xor
xor
cmpsl
mov
fdivrl
xor
rcrl
fwait
rcrl
and
mov
loope
xchg
adc
xor
mov
popa
mov
aam
sahf
adc
dec
frstor
mov
negl
fwait
cmpsb
ljmp
or
lcall
or
cwtl
pop
inc
xor
sbb
dec
or
movsl
xor
sahf
xchg
aad
cmp
xchg
data16
out
jmp
lret
dec
sub
dec
popf
add
pop
xor
popa
or
test
pop
sub
ljmp
call
and
imul
mov
add
push
aad
int
rclb
add
sub
jp
lea
aad
daa
imul
jae
cmp
xchg
xchg
add
adcl
dec
inc
jae
xchg
nop
mov
std
add
push
jne
push
cltd
push
adcb
mov
repnz
addb
leave
cmc
movsl
push
and
jmp
cmp
ds
inc
shrb
mov
enter
cmp
out
mov
jbe
cmp
daa
cli
cltd
lods
cmp
jle
lock
pop
mov
movsl
push
fcomi
mov
clc
pop
pop
add
test
inc
or
push
enter
mov
jae,pt
adc
lahf
lds
bound
leave
xchg
sbb
outsl
movsl
add
nop
pop
push
adc
inc
or
dec
xchg
jecxz
mov
xchg
cmp
mov
jmp
out
mov
stc
mov
addr16
and
xlat
daa
mov
cli
sbb
inc
outsl
addr16
int
pop
sub
insl
inc
lret
bound
arpl
popa
jecxz
xchg
xchg
out
mov
xbegin
jns
adc
popa
arpl
mov
xlat
mov
add
dec
mov
sub
push
repz
outsl
jp
pop
repz
jmp
outsl
fwait
inc
je
sub
negb
adc
fcomps
or
out
popa
sbb
mov
pop
xchg
mov
adc
or
adc
movsl
fchs
sub
dec
sub
jl
xor
cmp
fstps
xchg
std
pop
jne
aas
aaa
adc
push
jmp
push
jge
dec
pusha
mov
fwait
mov
dec
aam
xlat
ret
andl
imul
xchg
dec
sahf
xchg
cmpb
mov
loop
push
inc
mov
pushf
fmul
out
movsl
push
add
btr
call
repz
leave
pop
push
int3
sub
fstpt
mov
cmp
inc
jmp
xchg
push
add
cltd
pop
les
inc
pop
iret
xor
dec
loopne
iret
mov
in
mov
lret
xchg
out
movsl
push
mov
mov
sarl
cmp
dec
stos
or
push
sahf
or
cmc
cmp
cmpsl
add
ja
push
push
jl
enter
aaa
movd
inc
or
fchs
aas
cli
jo
fcompl
inc
les
popa
outsl
xorb
sbb
inc
iret
jne
jg
pop
movsl
out
push
shrb
cli
push
pusha
sbb
loopne
push
jo
insl
mov
jb
fnstenv
cmpsb
movsb
jg
add
cmp
push
aad
lea
xor
inc
iret
out
loopne
and
test
lods
xchg
imul
lea
stos
pop
cmp
cld
frstor
scas
test
mov
out
arpl
jnp
insb
dec
push
js
enter
push
or
in
ficomps
insb
xchg
jg
popf
sub
dec
int
out
jo
or
mov
adc
in
fldcw
inc
and
jnp
push
in
jne
mov
push
out
xor
cmpsl
icebp
fbld
cmp
dec
jg
mov
jo
cltd
mov
mov
and
push
insl
aam
xchg
sarl
pop
outsl
cmp
jae
sub
mov
into
aad
xchg
adc
push
push
adc
hlt
lret
xchg
xchg
shll
neg
popa
pop
shlb
cmp
push
inc
jno
mov
je
pop
data16
addr16
pushf
das
popf
sbb
out
jbe
xchg
int
xor
das
or
mov
sbb
inc
cmp
and
aaa
les
subl
outsl
mov
lret
or
nop
adc
or
out
jno
dec
jmp
push
mov
ret
mov
popa
fs
shlb
push
cmp
ja
loopne
pop
cltd
imul
pop
out
cmp
add
add
sbb
add
add
add
push
add
add
add
jbe
add
cmp
add
add
add
add
add
push
add
add
add
add
add
add
popa
mov
jmp
pusha
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
loop
jbe
fcoml
xor
mov
add
sub
pop
bound
pop
mov
jmp
mov
jbe
cmp
pop
mov
pop
xchg
je
shrb
inc
jg
xchg
js
mov
idivl
das
les
sub
cli
stc
jg
inc
mov
xor
std
rcr
xor
sub
pop
push
nop
aas
jge
push
mov
jp
inc
in
inc
xchg
cmc
aas
mov
jge
or
fdivl
ret
add
std
sub
add
cmp
stos
mov
mov
push
xchg
movsb
inc
popa
dec
lcall
push
jl
fisttpl
call
sbb
mov
xor
jae
pop
aad
pusha
aam
cmp
push
or
loope
inc
in
push
call
lods
sub
pop
das
cmp
fnstcw
add
and
or
mov
cld
jne
xchg
inc
cltd
pop
pop
gs
das
dec
or
or
daa
aas
aad
xchg
and
inc
mov
mov
cmp
aad
popa
repnz
xor
test
in
icebp
add
mov
xor
push
xchg
cmp
repnz
test
push
jg
test
inc
std
or
arpl
inc
sub
les
nop
mov
mov
inc
cli
jp
sar
in
jo
add
test
loope
imul
fstpl
pop
dec
cwtl
mov
xor
repnz
adc
sbb
cmpsb
mov
pop
push
cmp
xor
fmuls
and
dec
jmp
and
inc
inc
stc
nop
cmpsb
xchg
pop
outsb
push
dec
jns
into
adc
scas
or
out
aaa
imul
jo
add
movsb
das
pop
repnz
inc
cmp
std
mov
xchg
pop
mov
fs
js
push
cwtl
jmp
and
dec
cs
pop
cmp
pop
sahf
push
iret
fsubrl
xor
sbb
adc
or
pop
outsb
out
sub
mov
jbe
push
add
insb
sub
mov
mov
dec
add
jno
imul
mov
xchg
mov
mov
sub
or
mov
inc
push
pop
push
mov
outsb
out
fdivrl
std
ret
and
divb
xchg
lret
jb
lahf
xor
loope
sub
push
cli
add
jg
mov
test
gs
movsl
push
lock
js
call
leave
adc
xchg
mov
bnd
dec
inc
sbb
addr16
es
jbe
imul
pop
xchg
push
icebp
les
mov
xchg
xchg
fwait
in
das
pop
stos
popf
shrl
cld
add
testl
enter
or
pop
and
je
and
std
into
mov
roll
gs
push
push
fwait
lahf
movsb
imul
rorb
jo
cmp
js
test
xchg
addr16
mov
lock
cli
aas
shll
ja
cmp
jmp
inc
or
filds
push
sahf
push
mov
push
sar
jne
xchg
idivl
int
out
roll
mov
gs
xchg
cld
push
shlb
xor
pushf
incb
add
push
imul
loopne
push
jno
fs
cld
or
sarl
jbe
repnz
jle
xor
cmp
cmp
in
ret
cmp
inc
inc
push
int3
mov
push
pop
pop
pop
jnp
fsubrl
cmp
test
popa
mov
sbb
lahf
pop
daa
mov
dec
int3
xchg
xor
int
pop
sub
mov
mov
testb
inc
sahf
dec
xor
movsl
sbb
push
mov
movsl
xchg
insb
into
aaa
fbld
scas
pop
pop
cmp
jo
cmp
mov
mov
inc
out
adc
pop
insl
dec
adc
leave
pop
jns
pop
mov
adc
pop
dec
inc
out
rol
xchg
ffree
jae
or
popa
cmp
rcrl
leave
jecxz
jae
sub
xchg
imul
mov
fldl
pushw
pop
and
push
inc
xchg
xchg
or
jl
sbb
pop
dec
jo
xchg
xchg
cld
mov
pop
push
push
mov
adc
and
mov
sbb
pop
fcomps
push
xchg
daa
icebp
xlat
push
popa
aas
or
loope
addl
dec
fwait
ss
push
mul
scas
xor
adc
inc
inc
mov
push
jb
and
dec
push
inc
cmp
mov
mov
push
push
shll
sti
xor
or
js
adc
inc
jp
inc
xchg
out
shrl
rorb
lea
repnz
and
push
add
shrb
mov
out
fdivrs
xchg
xchg
pop
shr
fptan
cltd
sbb
fldenv
mov
adc
mov
inc
push
aas
inc
dec
mov
jb
mov
test
push
mov
adc
xchg
in
push
test
sub
jns
movb
out
mov
cmp
and
test
outsb
xchg
mov
rorl
pop
pop
mov
lcall
sbb
xchg
ret
jo
scas
movsl
pop
mov
int
cmp
mov
imul
adc
dec
out
pop
sbb
mov
or
es
sbb
shr
dec
js
cld
or
int3
cmpsb
movsl
xchg
and
jno
mov
addr16
inc
or
xor
pop
aaa
jg
mov
movd
int3
xchg
ljmp
test
dec
mov
repz
xchg
xor
and
push
lahf
xchg
pop
pop
xchg
std
std
mov
fbstp
jnp
sti
movsb
aas
jb
mov
mov
sbb
je
outsl
cs
xchg
lods
pop
mov
add
mov
out
stc
jae
lods
push
fs
inc
push
mov
push
and
mov
pushf
mov
push
data16
pop
loopne
mov
xchg
inc
scas
cmpsb
jg
daa
enter
sub
test
dec
add
shlb
or
sbb
shrl
sub
fbstp
test
je
popf
icebp
or
aam
mov
push
faddl
decb
dec
in
mov
push
test
pop
jbe
dec
jno
cwtl
mov
stc
jbe
mov
or
outsb
cwtl
inc
sub
rcl
stos
aaa
lea
lret
mov
xor
sbb
out
mov
pop
or
les
repnz
mov
pop
sbbb
lds
lods
in
sahf
mov
mov
or
mov
add
loope
bnd
jbe
xorl
push
sbb
sahf
fisubs
ret
sub
inc
xchg
mov
test
jp
push
lea
and
mov
stc
inc
ret
xchg
sbb
btrl
push
xchg
or
loop
les
inc
jg
iret
fsub
shl
push
rcll
cmp
add
or
xorb
mov
stos
movsl
setne
xchg
imul
mov
mov
xchg
xchg
mov
pop
push
add
stos
in
test
int
out
sub
and
xchg
push
sbb
aaa
inc
imul
and
mov
add
lods
incl
push
inc
insl
ljmp
inc
mov
dec
pop
sub
fdivrs
pusha
rclb
adc
loopne
hlt
in
orb
sbb
les
xchg
incb
adc
sbb
sti
and
mov
sub
imul
push
ret
das
insl
mov
dec
movsl
mov
sbb
and
test
divb
subb
loopne
pop
inc
inc
into
popf
sahf
mov
insb
shll
sarl
jecxz
sub
lret
sbb
cmp
lds
add
or
in
adc
arpl
cmp
mov
cmpsl
cmp
test
pushf
leave
xor
or
fcmovbe
js
test
mov
and
test
mov
repnz
sub
pushf
sbb
cmpsl
pop
mov
xchg
rorb
shl
mov
in
nop
mov
cmc
inc
push
add
inc
scas
std
faddl
mov
cwtl
sbb
add
jo
xchg
jge
fwait
std
repnz
cwtl
inc
mov
out
or
mov
jmp
jo
lcall
repnz
decl
pusha
pop
pop
movsb
repz
faddl
mulb
sub
out
sarl
subl
lahf
mov
and
das
mov
mov
jno
cmp
jns
cmc
dec
sub
daa
inc
js
mov
dec
insb
jbe
cmpsb
add
push
icebp
pop
hlt
or
sar
rclb
sub
movsl
or
mov
mov
imul
rorb
dec
jl
sub
jae
adc
push
jge
pop
cmpsl
loop,pn
fisttps
clc
cmp
cmpsb
and
xchg
loop
int3
pop
aad
add
shll
mov
pop
imul
and
cmc
mov
cltd
xchg
movsl
push
pop
add
jmp
emms
fildll
xlat
pop
lret
call
add
loopne
push
call
mov
pop
xor
adc
popf
lret
test
icebp
repz
out
das
leave
pop
sbb
mov
xchg
ljmp
jno
cmp
fisttps
mov
scas
or
fimuls
adc
inc
out
addr16
sbb
insb
sub
lea
mov
sbb
jl
cmp
dec
adc
fwait
ret
stc
icebp
and
cmp
sbb
jns
sub
fiaddl
fcoml
je
or
lods
scas
add
data16
dec
or
ret
dec
test
jmp
mov
jg
push
arpl
outsb
psrad
iret
incb
jmp
fwait
mov
and
push
jb
mov
and
cli
movsb
cltd
iret
mov
mov
call
inc
push
adc
mov
and
mov
mov
out
fstl
pop
xor
cmp
les
les
int
imul
cmpb
mov
xor
iret
inc
roll
ret
jbe
xor
out
inc
adc
or
enter
sub
mov
pop
cld
push
ss
popf
mov
test
repnz
push
call
pop
mov
push
stos
mov
xchg
sbbl
in
and
sub
cmp
loop
fwait
pop
add
lahf
sub
subl
jmp
adc
cmp
mov
add
dec
mov
pop
jle
stos
in
pop
inc
fstpt
sub
xchg
or
push
cld
out
cmc
pop
add
mov
pop
pop
movsb
add
adc
pop
loop
into
adc
pop
mov
repz
mov
pop
xchg
test
je
pop
sbb
movsl
out
jo
xchg
pop
push
mov
lahf
cmp
mov
mov
lock
xor
js
add
xchg
movsb
movsb
icebp
sub
das
jl
test
ss
mul
js
inc
inc
push
mov
mov
pop
test
sbb
dec
pop
jg
xchg
fs
sub
add
das
push
addr16
aam
loope
mov
subb
outsb
push
test
bound
xor
inc
subb
jle
inc
shrb
and
cwtl
repnz
add
shrb
in
mov
sti
repnz
outsb
inc
sbb
addr16
mov
js
mov
in
andl
lcall
sti
mov
pushf
pusha
lret
mov
movsb
les
test
xchg
sbb
xor
repnz
dec
imul
sahf
sub
xchg
outsl
loopne
pop
dec
cmpsb
movsl
push
push
test
mov
or
lahf
push
dec
adc
pop
pop
outsb
nop
add
push
and
push
or
in
mov
dec
test
push
movsl
jl
inc
outsb
cmpsb
imulb
push
jae
divb
repnz
daa
push
call
inc
rcrl
cmp
repz
mov
jle
cmp
add
outsb
scas
rorl
jb
jo
pop
cmc
ljmp
mov
sbb
pop
das
xor
fisttps
gs
jmp
mov
leave
sbb
call
adc
fldcw
jae
out
fcoms
xchg
aas
stos
iret
sub
xchg
into
and
rolb
cmpsb
push
jle
adc
adc
push
stc
jnp
mov
xor
nop
es
bound
mov
adc
bound
mov
les
adc
dec
push
and
lods
stos
mov
in
mov
in
and
push
xor
ret
sbb
popf
inc
adc
movsl
int3
xlat
dec
mov
push
and
arpl
mov
xor
leave
push
imul
pop
aaa
add
xlat
lods
mov
pop
xlat
xor
pusha
cmp
cmp
push
testb
sub
fldt
inc
add
js
and
inc
and
ret
jp
mov
xor
ret
lea
pop
jl
jno
in
test
and
stc
insl
fmull
adc
int
out
mov
imul
bound
sub
pushf
rcll
mov
in
xchg
xor
stos
adc
or
arpl
iret
rorb
sbb
push
lea
out
inc
adc
jae
pop
cmp
test
cmpl
mov
lret
arpl
jge
in
jg
fs
xchg
cltd
adc
test
stc
cmpsl
push
fwait
pop
push
rclb
das
or
fwait
enter
loope
xchg
test
flds
sub
jb
jns
cmp
movsl
stc
push
imul
int
mov
sti
mov
pusha
xchg
xlat
test
ret
fs
jo
cmp
mov
out
mov
pop
inc
push
aam
nop
arpl
sbb
insb
pushf
xchg
xlat
cmp
rcrb
jg
in
pop
stc
and
loope
sbb
ret
out
mov
jp
dec
loope
mov
rcl
mov
xlat
sub
lcall
pop
out
jns
xchg
xchg
jle
popf
cs
ret
hlt
pushf
lds
stos
adc
jo
sbbl
stos
aad
push
inc
into
pand
ret
rorl
mov
xchg
sub
in
pop
pop
sub
movsb
sub
sbb
inc
in
dec
nop
ljmp
push
test
jb
xor
mov
pushf
sbb
or
xchg
enter
outsb
or
leave
pushf
cmpb
fucom
push
gs
push
je
bound
call
loopne
xchg
and
and
imul
sbb
ret
push
inc
aaa
jbe
jae
dec
test
dec
bound
sub
adc
xchg
pop
xchg
jae
iret
popf
add
insb
jns
cmp
push
arpl
aam
mov
std
out
nop
into
movsl
ja
gs
mov
adcl
stc
jle
mov
push
cmc
xor
mov
sub
cmpsb
push
rol
xor
sub
dec
cld
int3
mov
pop
pop
mov
jle
adc
int3
repnz
out
outsb
iret
je
int3
jno
push
test
pop
jle
nop
pop
pop
jge
adc
iret
and
xchg
mov
fidivl
adc
pop
movsl
adc
mov
int3
in
in
and
ret
hlt
popf
test
inc
and
cmp
lret
sbb
xor
stc
push
icebp
paddq
addr16
jnp
xchg
popa
mov
fs
push
notl
les
lods
mov
cld
imul
dec
aam
push
test
cmp
repnz
insb
adc
es
ja
add
dec
int
and
adc
xchg
push
or
mov
sbb
push
inc
xlat
into
jnp
js
push
mov
fbld
test
daa
arpl
daa
out
sbb
dec
test
push
das
imulb
adc
pop
aas
repz
lock
fwait
in
test
ds
mov
mov
xchg
insb
push
lock
mov
arpl
addr16
pop
pop
hlt
pop
jne
test
jmp
subb
add
lods
out
cmp
xchg
flds
lcall
cmp
fstps
cwtl
cmp
xor
lcall
je
dec
inc
and
je
bound
jl
stos
or
daa
cmpb
clc
xchg
sbb
cmp
mov
add
and
sub
lock
sub
adc
jge
clc
das
stos
pop
pusha
cmpsl
dec
sbb
imull
frstor
sbb
sbb
in
mov
daa
fldl2e
lret
mov
sub
mov
add
dec
pop
mov
add
nop
jmp
std
push
mov
sub
xchg
dec
mov
mov
sub
imul
and
mov
bound
rolb
mov
out
jnp
jl
mov
sbb
outsb
mov
fs
mov
xchg
int
bound
es
mov
scas
mov
std
push
aam
adc
or
adc
inc
popa
mov
scas
roll
sti
push
stos
mov
xor
mov
push
xorl
pop
lea
mov
test
cmp
lods
pushf
cli
mov
and
pop
add
inc
jp
pop
iret
sbb
xchg
jp
and
add
sub
push
test
dec
adc
xchg
lock
loopne
lret
syscall
cmp
repnz
xchg
sbb
sbb
mov
lahf
xor
aad
xor
addr16
fisubl
cmp
adc
int3
out
mov
jae
mov
hlt
filds
jle
sub
xor
mov
out
jo
fmul
mov
stos
cli
sbb
dec
mov
ds
mov
mov
dec
es
xchg
push
and
mov
mov
dec
mov
stos
fnstsw
sbb
iret
push
fadds
call
add
sub
pop
sub
lock
daa
inc
dec
aaa
mov
mov
jmp
mov
sbb
addl
js
dec
jbe
adc
dec
cmp
mov
rcll
xchg
fmull
inc
jecxz
sub
fistl
hlt
pushf
jl
repz
sub
cmp
cmp
movsl
push
xchg
sbb
call
pusha
lcall
add
popa
push
sub
int
lret
addl
xchg
sub
xchg
jbe
mov
jo
pop
lods
push
arpl
test
stc
mov
test
xchg
mov
mov
lahf
subb
jns
cld
scas
inc
mov
data16
cwtl
dec
and
xchg
mov
adc
mov
stc
mov
stos
lahf
pop
pusha
aaa
cmp
mov
xor
inc
add
adc
and
jo
lds
mov
loope
jge
push
and
in
mov
pop
test
pusha
push
inc
sahf
sbb
pop
repnz
lahf
outsb
or
mov
scas
fdivrl
mov
out
xchg
lods
jae
mov
syscall
inc
notb
jbe
push
mov
sub
int3
leave
xchg
jg
push
add
push
adc
sbb
mov
test
xlat
aas
loope
js
stc
scas
out
insb
cmp
ret
mov
cmp
jne
mov
in
dec
xor
jbe
call
push
movsb
pop
or
inc
pop
push
jecxz
scas
pop
adc
aad
push
xchg
push
stos
jg
cld
or
push
lret
add
fsubs
push
enter
mov
pushf
repz
pop
xchg
xchg
ja
and
add
cmc
sti
mov
cld
push
negl
cmp
lahf
jecxz
lcall
cmp
leave
push
ret
std
lahf
add
push
data16
xchg
push
add
push
stos
gs
es
sub
leave
xor
mov
jp
adc
cltd
fisubs
daa
fbstp
mov
sbb
cli
andl
pusha
loop
jl
xchg
add
add
enter
nop
mov
mov
add
mov
shrl
xchg
cmp
icebp
or
inc
fisubl
out
pop
inc
popa
sbb
popf
xor
sub
inc
fidivrs
and
stos
inc
jecxz
aas
push
add
adc
in
int3
mov
mov
test
cmpsl
fucomp
movsbl
in
cmp
orb
arpl
mov
add
or
jecxz
xor
pop
insl
or
fdivr
jmp
ret
es
mov
xor
mov
inc
fld
mov
ljmp
sbbl
aas
or
pusha
mov
adc
and
fisttpl
lods
pop
mov
jns
div
fdivr
mov
mov
out
fistpll
jnp
inc
sub
es
push
add
fsub
std
and
ja
sbb
mov
xor
or
fildll
cmpsl
mov
aaa
and
push
xor
and
das
sbb
in
in
outsl
xor
mov
aas
dec
gs
imul
fadd
fxam
frstor
addr16
in
imul
inc
popf
pop
mov
mov
cmpsb
sub
mov
sbb
or
ror
stos
xorb
clc
in
cwtl
imul
leave
nop
fcomps
or
or
add
push
fmulp
mov
loop
mov
scas
rcr
push
add
add
nop
shrb
insl
mov
cmp
adc
cmp
jg
lods
sbb
fnstenv
jmp
push
pushf
lea
sbb
mov
dec
ret
jge
jle
jbe
push
imul
test
xchg
loope
jecxz
jmp
and
or
xorb
imul
inc
xorl
imul
cmp
xchg
ljmp
inc
adc
in
jmp
add
sub
lods
clc
mov
mov
xchg
test
insb
gs
int
xchg
cwtl
outsb
and
adc
nop
stc
and
sbbl
nop
enter
sbb
add
movsb
lea
mov
in
lods
push
ss
xor
adc
add
dec
test
fidivrl
insb
mov
ret
dec
ret
xchg
scas
int3
call
jge
insb
pop
loopne
inc
xchg
mov
ljmp
inc
lock
sub
pop
mov
cltd
ret
push
cmp
mov
and
push
jecxz
cmp
enter
inc
cmpsl
fstp
mov
lock
out
or
rcrl
cs
jg
in
hlt
add
adc
mov
jle
outsl
mov
or
pop
pushf
pop
jg
test
cmp
inc
scas
leave
push
mov
lret
ss
sahf
adc
bound
outsb
dec
sti
mov
test
out
flds
xor
test
push
fdivrs
cmpsl
shlb
icebp
icebp
lret
aas
test
and
mov
js
aaa
xor
and
mov
shlb
dec
js
cmp
lret
inc
mov
lret
loopne
add
in
fsubrs
nop
or
fistpl
jl
sbb
scas
hlt
lahf
subb
cltd
adc
adc
add
xchg
inc
icebp
dec
mov
sub
cli
mov
cmpl
xchg
inc
pop
dec
sbb
das
mov
ljmp
hlt
lods
call
sarb
add
pop
push
sbb
mov
lods
hlt
mov
mov
jo
mov
shlb
dec
add
adc
dec
sub
xorb
popf
and
cmpsb
or
rclb
sbb
loope
cmpsl
jbe
les
ret
leave
mov
repnz
out
xchg
push
jae
add
ss
pop
cwtl
popa
push
mov
mov
jmp
mov
jno
into
mov
gs
xchg
fstps
cmp
lea
sbb
mov
lea
dec
icebp
inc
sbb
push
out
jno
or
mov
mov
aad
jp
cmp
mov
dec
idivb
xor
pop
fiaddl
and
pop
cmp
rcl
adc
dec
mov
scas
mov
fwait
es
mov
push
outsl
push
mov
jnp
cmp
out
addr16
repnz
and
mov
iret
loop
movsb
mov
xor
mov
addr16
jecxz
sub
imul
movsl
xchg
sub
jno
rcrb
push
shlb
adc
jecxz
adc
in
sub
and
xchg
cmp
push
dec
into
inc
incb
adc
aad
in
fs
frstor
adc
nop
popf
xlat
cmpsl
into
repnz
cmp
pushf
mov
sbb
ja
pop
pop
arpl
mov
aaa
popa
cmp
pop
int3
push
data16
add
testl
add
pop
mov
sub
insl
pusha
sar
cmp
add
sbb
dec
add
mov
xlat
fldt
fidivl
xchg
into
mov
cs
pop
aad
adcb
push
out
xor
stc
cmp
pop
or
repz
ret
je
xchg
ja
cmpsl
andnps
das
cmp
lret
jle
dec
mov
iret
sub
mov
out
loopne
rcl
inc
aad
dec
test
pusha
clc
lahf
into
cmc
and
in
leave
inc
jmp
cmpsb
jnp
loope
mov
stc
dec
xchg
lret
mov
cmp
mov
ja
add
icebp
adc
add
call
dec
loopne
int3
xchg
out
adc
mov
adc
mov
enter
or
dec
lcall
mov
jge
loopne
stos
arpl
in
xchg
call
ficompl
call
adc
mul
movsl
out
mov
and
popf
push
dec
gs
hlt
sub
jg
xor
xlat
mov
aaa
test
sbb
pop
repz
ljmp
ficompl
cmpsl
mov
das
fdivl
pop
push
mov
vpsadbw
movsl
sub
and
cmp
loope
out
inc
adc
loop
leave
and
in
stos
jle
or
ljmp
pop
lcall
outsl
adc
sbb
cld
mov
ljmp
mov
outsb
icebp
cvtps2pi
in
test
and
push
mov
or
popa
cmp
add
fwait
push
stc
lret
jno
sbb
popf
sarl
aad
sub
sbb
fnstsw
repz
iret
dec
mov
cmp
add
inc
stc
add
xchg
mov
xchg
pop
inc
cmpsb
adc
jecxz
clc
ret
pop
popf
mov
ret
pop
adc
mov
rcl
das
cmp
iret
jp
push
xchg
fistl
sub
sub
mov
push
cmp
cmp
and
addr16
mov
inc
shlb
xchg
lahf
push
bound
arpl
pop
adc
cmpsb
mov
mov
pop
jle
push
lret
shrb
sbb
or
mov
pop
pop
jae
jp
daa
enter
sub
aas
lea
cwtl
fdivl
add
leave
dec
and
sbb
lret
sub
mov
lock
xor
aam
xlat
out
shl
cli
imul
fwait
jns
aaa
dec
loopne
sub
jae
scas
cmp
daa
rclb
shl
and
xchg
sub
adc
jmp
addb
pushf
pop
scas
xchg
es
cmp
mov
mov
jl
pop
iret
pop
dec
cmpxchg
arpl
sub
cmpsl
lret
testb
adc
xchg
mov
cltd
mov
jp
xor
pop
pop
sub
mov
sbb
sub
cmc
xor
push
jbe
mull
lds
jecxz
jle
inc
push
bound
sbb
cltd
cltd
jne
cmp
outsl
fadd
jnp
mov
clc
xchg
mov
ljmp
shl
sbb
ja
xor
mov
sti
adc
bnd
sub
cs
pop
xor
jp
cli
ja
int3
enter
xchg
xor
jle
fdivrs
sahf
inc
ja
inc
test
xlat
dec
leave
rorb
sub
rclb
or
roll
mov
decl
jnp
lcall
sub
fdivs
testb
imul
int
push
push
aas
pop
push
lods
adc
push
sbb
out
jecxz
xchg
xchg
inc
jae
jnp
imul
fisttpl
lahf
adc
jb
push
into
aad
cltd
push
shlb
jo
mov
out
sub
scas
push
push
insb
dec
jno
adc
jl
pop
or
out
xchg
pushf
imul
jp
or
add
inc
sti
dec
mov
add
push
adc
rol
jle
add
or
mov
dec
jo
pushf
jecxz
mov
pushf
nop
mov
add
and
movsb
jg
es
insb
xchg
add
lcall
ficomps
mov
inc
lds
xor
movsb
pusha
loopne
lds
leave
pop
sub
addr16
push
shl
jae
xlat
lret
iret
adcb
test
pop
mov
jg
jb
sub
lods
cli
cwtl
jge
aaa
imul
jecxz
arpl
inc
stc
shrw
cmpsb
sbb
mov
enter
cltd
mov
pop
aad
inc
popf
sbb
xlat
test
fnsave
jl
xchg
xchg
jmp
dec
stc
ds
pop
ja
loop
jno
repz
xchg
push
rcrb
sub
xchg
jecxz
mov
test
repnz
dec
jne
fs
mov
sub
movsb
je
sub
pop
xor
mov
aas
cmp
icebp
pop
add
dec
sub
enter
data16
mov
ljmp
cmp
cltd
mov
mov
stc
repnz
push
inc
into
jmp
pusha
daa
aaa
pop
int
test
push
bound
shr
fbstp
fistpl
sub
lea
cli
push
int
and
xor
bound
xchg
movsb
fstpl
es
dec
rcl
inc
cmp
inc
dec
xchg
in
xchg
push
cmpsl
pushf
mov
mov
lock
andb
cmp
test
add
lock
in
js
or
imul
and
addl
ret
ret
pop
adc
test
es
xchg
loop
js
pop
add
xor
or
popa
mov
movsb
sub
ds
add
jmp
dec
xor
lods
xchg
push
insb
mov
xchg
sti
lds
adc
insb
pop
cmp
or
adc
add
xor
cli
xchg
and
scas
cltd
cmp
inc
dec
shll
faddp
jb
mov
push
jb
repz
push
add
fsts
orl
int
push
pop
negb
lcall
ss
mov
daa
fdiv
sti
lock
adc
dec
mov
loope
push
loopne
popf
movsb
lods
jl
pop
push
adc
cmp
lret
or
add
lock
xchg
sti
subb
pop
shrb
cmc
jle
shrb
jnp
lods
int
test
add
mov
into
xor
mov
and
loop
das
in
sbb
mov
push
inc
sbb
test
lahf
mov
stos
mov
jb
ss
shrl
mov
or
addr16
pop
std
adc
ja
into
pusha
scas
std
or
cli
test
les
adc
into
aad
add
je
inc
mov
xchg
inc
jl
push
mov
mov
mov
movsl
and
push
mov
sub
or
fcom
das
dec
scas
cs
dec
mov
imul
push
sahf
mov
sti
and
movsb
pushf
mov
stos
aam
sahf
fdivrs
mov
hlt
daa
or
ret
jge
cmpb
mov
push
sbbl
mov
xor
and
imul
sarl
xchg
push
mov
dec
lret
and
cmp
xchg
mov
xor
jmp
mov
sbb
ja
dec
adc
lock
adc
fldt
push
stos
push
pop
stc
cmc
push
notl
mov
stos
mov
aaa
push
daa
call
test
movsb
cmp
mov
mov
mov
es
xor
movsb
adc
clc
vcomiss
andl
lods
cmp
adc
add
jno
xchg
lock
loope
rol
rolb
push
ds
add
lds
mulb
iret
sbb
mov
dec
inc
lcall
push
mov
pop
cmp
and
outsl
insb
adc
test
dec
jnp
fstpl
je
lods
jmp
es
insb
push
lcall
push
jne
mov
cs
adc
loop
addr16
gs
das
mov
test
pop
mov
sub
or
aad
push
jmp
cwtl
out
inc
mov
dec
mov
dec
sti
ljmp
and
sbb
jb
cmpsb
sahf
insb
repnz
sbb
fbstp
test
sti
int
int
cmc
ret
pop
inc
cs
rorl
bound
add
loop
sub
fdivrs
fbstp
std
and
frstor
mov
mov
sub
loopne
xchg
mov
pop
mov
stc
lea
mov
cmpsl
pop
int3
add
outsb
gs
dec
sti
fstpt
pusha
pop
mov
insb
xor
cmc
sub
pop
pushf
js
mov
out
je
inc
cli
sub
rcr
int
cmp
shlb
jl
cmpsl
xchg
add
out
repz
test
movsl
lods
jno
sbb
in
push
pushf
popa
and
xlat
add
data16
outsb
inc
cmp
vlddqu
mov
adc
in
pop
mov
xor
fldl2t
sub
bound
fwait
insb
pop
movsb
sbb
lods
out
cltd
add
ret
inc
xchg
shlb
dec
mov
inc
jmp
or
lds
test
pop
lods
jle
icebp
rolb
lock
ss
mov
cli
cmp
sti
and
dec
out
negb
adc
ljmp
xchg
lret
xchg
sub
cmp
into
sub
pop
jne
pop
and
sub
enter
dec
jecxz
daa
inc
inc
arpl
loopne
popa
aad
lahf
and
jnp
lcall
shll
jae
daa
add
jecxz,pn
bound
mov
adc
inc
mov
sub
push
xor
fsub
jle
mov
insb
jp
test
incb
xchg
pop
or
sub
repz
insb
pop
xchg
dec
jnp
mov
inc
fisubs
push
jne
adc
out
out
stos
fucomi
sub
andl
daa
cmp
movaps
imul
in
jo
fninit
dec
call
seta
mov
pusha
jmp
mov
psllw
xchg
jne
push
inc
push
sahf
movsb
cmp
adc
shrl
sub
add
ds
add
mov
add
pop
xchg
pop
inc
cmp
mov
sbb
inc
pop
mov
or
ret
call
mov
jbe
push
mov
sbb
sbb
popf
imul
sbb
sbb
ds
mov
sbb
pop
dec
pop
push
push
nop
sarl
dec
arpl
rcrl
lea
xlat
or
mov
iret
pop
jno
mov
lods
pop
andl
out
mov
push
adc
adc
mov
xchg
outsb
or
es
cs
and
insb
mov
movsl
cmp
xchg
icebp
adc
pop
jp
inc
or
and
jno
aad
xlat
fbstp
mov
sub
shll
dec
mov
adc
jno
rol
call
sub
lods
insl
repz
cmc
dec
pop
insb
rcrb
sbb
sar
push
mov
sbb
and
loop
ss
sbb
stos
mov
xor
int3
mov
lahf
jp
mov
scas
fs
xchg
out
lds
stos
inc
or
jbe
int3
stc
shrb
inc
mov
int3
lea
jmp
jnp
shll
mov
push
loope
add
call
jg
push
test
push
push
xchg
add
lahf
xchg
je
arpl
and
add
add
dec
push
sbb
inc
push
flds
movsl
pop
adc
xor
mov
fsubs
sbb
push
sbb
gs
into
push
mov
inc
adc
pop
sbb
push
popf
lcall
gs
jge
out
pop
and
mov
sub
mov
cmp
pop
out
inc
dec
or
push
mov
mov
lret
or
push
push
pop
lret
fimull
pop
je
data16
mov
ljmp
mov
loopne
mov
push
push
test
mov
call
cmovno
sti
lcall
movsl
mov
pop
xchg
les
lods
popf
call
dec
int
loopne
mov
xchg
stos
lahf
movsb
xchg
push
insl
sub
cmc
mov
jmp
cmp
insb
notb
xchg
hlt
mov
cmp
mov
mov
mov
pop
rcll
dec
mov
xchg
stos
or
bound
imul
mov
mov
js
inc
lret
insb
xchg
xor
or
shll
sbb
pop
ja
mov
mov
mov
imul
xchg
pushf
xchg
adc
pop
jno
fcoml
fdivs
jno
jnp
jmp
inc
cmp
and
lret
mov
jns
push
jmp
inc
hlt
pop
cmc
sbb
and
ds
and
dec
pop
cmp
in
shlb
movsb
addl
in
fstpl
outsl
enter
leave
and
xchg
leave
scas
int
jecxz
ds
jne
lahf
aad
pusha
js
mov
out
add
scas
mov
aam
mov
mov
imul
and
mov
xchg
xor
icebp
test
cmp
shl
or
sub
mov
sbb
and
rorb
hlt
inc
mov
int
inc
shrl
mov
mov
inc
jns
cmp
sbb
cmp
push
adc
jmp
mov
adc
jne
mov
lods
jne
enter
mov
push
jb
scas
add
mov
lea
in
scas
sti
add
iret
xchg
xchg
arpl
int3
dec
iret
jns
cmp
sbb
orl
pop
mov
jecxz
ror
dec
mov
out
ret
add
adc
lea
mov
out
xchg
jg
mov
push
jae
dec
add
hlt
sub
insl
jg
out
and
iret
jo
inc
cmc
xchg
out
sub
sub
ret
mov
imul
jle
adc
call
sbb
imul
repz
insb
push
iret
cli
dec
xchg
inc
insl
xor
xor
push
sbb
mov
push
xor
push
loopne
mov
cs
imul
xor
cmp
sub
add
out
and
nop
cli
inc
push
push
jmp
push
sbb
out
imul
fidivrs
mov
mov
xchg
pop
pusha
sbb
xchg
adc
loop
repnz
pop
xor
xchg
push
jmp
jns
int
mov
in
cmp
mov
push
icebp
cmpsb
call
pop
push
jge
scas
add
aad
out
out
shlb
sti
cmpsb
xchg
sub
pop
into
xor
xchg
mov
push
pop
movsl
jae
inc
mov
sbb
jmp
pop
or
push
xorl
loope
pop
movsl
movsl
bound
jecxz
in
call
sbb
enter
lcall
std
in
mov
repz
push
jle
fnstsw
orb
lock
pop
stc
jp
xchg
xchg
mov
lock
mov
push
arpl
pop
add
stc
jns
cmp
stos
mov
test
xchg
jp
add
pusha
sub
movsb
ss
int
jne
outsb
aad
inc
inc
xchg
das
pop
mov
dec
push
lds
cs
call
or
ljmp
out
scas
xor
in
jbe
aas
dec
jmp
lds
sub
scas
pushf
notl
int
push
pop
or
add
fwait
sbb
ja
push
loope
lea
cmp
test
jb
xor
in
sar
decb
aaa
xor
add
movsl
orl
lret
dec
sub
scas
fcmovnbe
xchg
test
lret
jbe
xor
clc
dec
stc
inc
mov
xchg
sbbl
sti
pop
adc
ffree
xchg
fildll
fs
xor
jns
scas
negl
fimull
std
jo
aaa
and
rolb
dec
addr16
sbb
pop
popf
rdtsc
dec
lret
xchg
gs
jbe
xlat
daa
pop
hlt
test
lcall
adc
rcrl
hlt
dec
lret
aam
push
xchg
mov
aad
or
fbld
mov
and
movsb
cltd
rcll
iret
xor
inc
es
xchg
pop
arpl
subl
insb
ss
jmp
xchg
sbb
stos
cmpsl
sub
add
mov
add
dec
mov
out
fildll
fs
repz
mov
pop
andl
fstps
sti
in
cmp
popa
jg
or
shlb
in
dec
aam
pop
xor
jl
jl
add
cltd
movsl
imul
xor
cld
adc
imul
mov
ret
out
cmp
fsubp
neg
dec
and
jb
inc
ja
jo
add
lea
push
sub
repz
push
pop
sbb
outsl
imul
mov
test
adc
sbb
add
mov
add
sarb
dec
xchg
sahf
sahf
add
out
xchg
iret
sbb
arpl
js
movsb
cmpsl
dec
adc
mov
adc
mov
lods
and
adc
inc
xchg
xor
jg
mov
adc
cld
hlt
add
sub
mov
sub
cmpsl
dec
push
mov
in
mov
mov
lea
out
mov
stos
jge
inc
daa
xor
xor
stc
int
movb
push
mov
push
ljmp
imul
jne
cs
cmp
adc
mov
fsubl
mov
cmpsb
mov
mov
or
push
sbb
sub
adc
mov
jb
mov
lds
adc
or
decl
jl
and
sahf
cmpb
adc
jae
inc
jg
insl
fdivrp
fwait
in
mov
push
fmul
ret
xchg
mov
mov
addr16
lds
aam
jb
shl
push
add
jno
lods
gs
pop
add
jae
popa
inc
push
jmp
imul
adc
scas
dec
push
faddl
icebp
in
stc
aaa
roll
xor
lods
outsl
and
xchg
les
jbe
pop
xor
jae
mov
scas
inc
push
xchg
leave
stos
insb
push
pop
js
sbb
add
push
popf
xchg
push
ljmp
inc
pop
mov
sahf
sbb
test
xchg
mov
dec
cltd
fstl
call
push
enter
jmp
cmp
imulb
data16
lds
xlat
cmc
lahf
add
jp
sbb
inc
and
add
popf
std
add
imul
fstpt
sbb
mov
repnz
icebp
jo
in
fcmovnb
mov
sti
pop
enter
adc
adc
or
cmpsl
pop
cwtl
rol
loopne
mov
data16
push
stc
mov
std
aad
cli
sarb
mov
xchg
repnz
inc
mov
jb
insl
lds
jmp
cmpsb
call
jl
lret
loopne
mov
rcl
addr16
mov
sub
mov
outsb
lcall
cmpsb
push
cmp
and
mov
and
test
out
xchg
leave
and
mov
test
aas
outsb
pop
test
shrl
test
stc
inc
enter
push
dec
push
sub
inc
hlt
inc
cmpsl
aaa
add
out
inc
int
push
loop
inc
jnp
pop
pop
dec
insb
test
imul
inc
jno
rcl
les
sbb
pop
sahf
sbb
pop
imul
je
pop
or
jmp
cmpsl
sahf
outsl
orl
mov
cmp
hlt
mov
mov
push
sbb
andl
adc
sub
paddd
aam
cmpsb
cld
xor
gs
inc
call
pop
add
push
pop
mov
jmp
lea
pop
movsl
push
mov
xchg
mov
xchg
les
out
jno
dec
mov
xorl
mulb
cmp
in
inc
cmp
sub
pop
out
jns
lods
testl
and
dec
enter
xor
negl
jbe
scas
sub
pop
outsb
cmp
in
out
and
es
subl
ret
push
out
xchg
sti
or
mov
dec
test
loopne
mov
sbb
dec
test
adcl
xor
pop
or
xchg
icebp
mov
outsb
inc
lea
les
loop
outsb
add
insb
jp
add
pop
adc
xor
push
mov
xor
jle
adc
mov
adc
pushf
ss
mov
jmp
and
adc
flds
jl
hlt
int
and
sub
lods
out
or
dec
mov
aad
addr16
dec
fbld
imul
imul
daa
sub
jno
pusha
push
dec
push
les
inc
aad
jb
add
push
jecxz
cmpsl
dec
popf
inc
dec
sahf
fbld
or
out
movl
stc
xor
icebp
lods
out
insl
jbe
nop
imul
mov
pushf
clc
jns
add
daa
sub
push
and
add
sti
xchg
sbb
jmp
out
sub
mov
int
mov
test
cmp
pushf
cmp
loopne
repnz
dec
mov
jb
dec
mov
sbb
cmpsl
sub
cld
mov
inc
dec
subb
dec
jae
jmp
mov
sbb
orb
int
pop
cmp
rcrb
jge
lock
outsb
ljmp
icebp
iret
xchg
jl
mov
fwait
and
jl
fs
jo
std
jbe
pop
aad
dec
mov
ss
xor
sub
fwait
inc
shll
les
mov
lahf
mov
mov
inc
stos
xlat
sbb
shrl
or
pop
es
xchg
sti
mov
enter
sti
and
aam
jl
lock
inc
insb
popa
je
filds
push
xor
hlt
in
outsb
js,pt
int
ret
sub
mov
adc
inc
insb
inc
add
mov
mov
jns
inc
cmp
lret
fs
pop
int3
dec
xor
outsb
push
imul
cvtps2pi
and
xchg
add
std
notl
push
cmp
cmp
pusha
sbb
imul
data16
sahf
jp
repnz
loop
ret
aas
inc
xchg
cltd
pop
stos
jle
mov
dec
cmp
fldt
xchg
xor
mov
cltd
jl
and
ret
movsl
and
push
sahf
xor
xor
cmpsl
mov
fdivrl
xor
rcrl
fwait
rcrl
and
mov
loope
xchg
adc
xor
mov
popa
mov
aam
sahf
adc
dec
frstor
mov
negl
fwait
cmpsb
ljmp
or
lcall
or
cwtl
pop
inc
xor
sbb
dec
or
movsl
xor
sahf
xchg
aad
cmp
xchg
data16
out
jmp
lret
dec
sub
dec
popf
add
pop
xor
popa
or
test
pop
sub
ljmp
call
and
imul
mov
add
push
aad
int
rclb
add
sub
jp
lea
aad
daa
imul
jae
cmp
xchg
xchg
add
adcl
dec
inc
jae
xchg
nop
mov
std
add
push
jne
push
cltd
push
adcb
mov
repnz
addb
leave
cmc
movsl
push
and
jmp
cmp
ds
inc
shrb
mov
enter
cmp
out
mov
jbe
cmp
daa
cli
cltd
lods
cmp
jle
lock
pop
mov
movsl
push
fcomi
mov
clc
pop
pop
add
test
inc
or
push
enter
mov
jae,pt
adc
lahf
lds
bound
leave
xchg
sbb
outsl
movsl
add
nop
pop
push
adc
inc
or
dec
xchg
jecxz
mov
xchg
cmp
mov
jmp
out
mov
stc
mov
addr16
and
xlat
daa
mov
cli
sbb
inc
outsl
addr16
int
pop
sub
insl
inc
lret
bound
arpl
popa
jecxz
xchg
xchg
out
mov
xbegin
jns
adc
popa
arpl
mov
xlat
mov
add
dec
mov
sub
push
repz
outsl
jp
pop
repz
jmp
outsl
fwait
inc
je
sub
negb
adc
fcomps
or
out
popa
sbb
mov
pop
xchg
mov
adc
or
adc
movsl
fchs
sub
dec
sub
jl
xor
cmp
fstps
xchg
std
pop
jne
aas
aaa
adc
push
jmp
push
jge
dec
pusha
mov
fwait
mov
dec
aam
xlat
ret
andl
imul
xchg
dec
sahf
xchg
cmpb
mov
loop
push
inc
mov
pushf
fmul
out
movsl
push
add
btr
call
repz
leave
pop
push
int3
sub
fstpt
mov
cmp
inc
jmp
xchg
push
add
cltd
pop
les
inc
pop
iret
xor
dec
loopne
iret
mov
in
mov
lret
xchg
out
movsl
push
mov
mov
sarl
cmp
dec
stos
or
push
sahf
or
cmc
cmp
cmpsl
add
ja
push
push
jl
enter
aaa
movd
inc
or
fchs
aas
cli
jo
fcompl
inc
les
popa
outsl
xorb
sbb
inc
iret
jne
jg
pop
movsl
out
push
shrb
cli
push
pusha
sbb
loopne
push
jo
insl
mov
jb
fnstenv
cmpsb
movsb
jg
add
cmp
push
aad
lea
xor
inc
iret
out
loopne
and
test
lods
xchg
imul
lea
stos
pop
cmp
cld
frstor
scas
test
mov
out
arpl
jnp
insb
dec
push
js
enter
push
or
in
ficomps
insb
xchg
jg
popf
sub
dec
int
out
jo
or
mov
adc
in
fldcw
inc
and
jnp
push
in
jne
mov
push
out
xor
cmpsl
icebp
fbld
cmp
dec
jg
mov
jo
cltd
mov
mov
and
push
insl
aam
xchg
sarl
pop
outsl
cmp
jae
sub
mov
into
aad
xchg
adc
push
push
adc
hlt
lret
xchg
xchg
shll
neg
popa
pop
shlb
cmp
push
inc
jno
mov
je
pop
data16
addr16
pushf
das
popf
sbb
out
jbe
xchg
int
xor
das
or
mov
sbb
inc
cmp
and
aaa
les
subl
outsl
mov
lret
or
nop
adc
or
out
jno
dec
jmp
push
mov
ret
mov
popa
fs
shlb
push
cmp
ja
loopne
pop
cltd
imul
pop
out
cmp
shll
add
aaa
xchg
lds
and
into
mov
pop
mov
mov
icebp
iret
jge
pop
lret
scas
outsb
mov
aam
jp
xlat
sbb
mov
jae
into
or
xchg
add
mov
andb
inc
add
scas
xchg
push
shlb
xor
xor
push
addr16
test
push
xchg
xor
or
imul
insb
cld
or
inc
notb
jl,pt
jl
jns
or
mov
mov
daa
cmp
and
mul
pop
cmp
test
push
sub
sub
dec
popf
arpl
sub
repz
pinsrw
jno
lods
enter
mov
sbb
outsl
cmc
sbb
or
cwtl
lret
or
or
sbb
mov
add
sub
lret
lcall
adc
outsl
lods
sbb
mov
mov
test
cld
pop
cmp
shll
xor
pop
insl
mov
push
jle
scas
les
jge
adc
mov
mov
std
fidivrl
mov
repnz
nop
popf
inc
lds
jae
lods
ret
shrb
mov
cmpsb
sub
mov
mov
jbe
jp
mov
loopne
push
xchg
rcrl
into
popa
inc
dec
and
mov
sti
mov
clc
stc
sti
fisttpl
mov
and
mov
adc
iret
out
adc
pop
push
adc
mov
xchg
sub
jno
adc
mov
jmp
scas
xor
stos
test
imul
add
adc
int
dec
sbb
sbb
call
lret
inc
lea
xor
jecxz
faddl
cmp
dec
in
ret
les
cmpsb
xchg
xor
mov
cmpsl
mov
inc
jb
push
mov
and
cmp
pop
jb
fdivrs
or
loope
jle
ret
imul
xchg
xchg
in
aad
sbb
sub
mov
pop
cwtl
mov
popa
cmc
pop
dec
mov
rcrb
xor
jbe
sbb
stc
cmp
cmp
pushf
sarl
arpl
jne
std
pop
cli
cmp
mov
sbb
clc
xor
scas
mov
ljmp
fmuls
cmp
leave
mov
xchg
fdecstp
sub
and
int
pop
and
repnz
int3
and
jl
fs
adc
or
mov
push
jg
xchg
mov
shl
adc
inc
inc
aad
mov
and
pusha
jl
rorl
and
ja
icebp
insl
sbb
adc
cmp
lret
lret
mov
cld
movb
pop
testl
and
decb
mov
jmp
sahf
aad
aam
leave
dec
addr16
add
pushf
das
cmp
idivb
js
sub
outsl
test
cmp
andb
test
pop
add
push
adc
ja
sahf
sti
in
and
into
and
jbe
inc
leave
xchg
hlt
inc
inc
add
mov
leave
enter
mov
sbb
lcall
repnz
enter
sti
mov
and
lods
pop
sub
pop
insb
dec
sub
out
ds
jmp
repz
cmpsb
clc
andl
stos
jne
lahf
or
das
push
lret
jmp
incl
aas
push
cs
adc
cmp
rorb
rcl
stc
push
pop
xchg
inc
or
cld
into
push
and
mov
pop
daa
mov
mov
je
pusha
stos
mov
aad
incl
std
xchg
jmp
xor
mov
stos
xor
in
incl
dec
jecxz
cmpsl
cmp
loopne
xchg
leave
inc
sub
and
add
xchg
lds
lahf
dec
lea
popa
popl
pop
pop
pop
jae
jbe
mov
push
enter
in
fdivrs
int
sahf
sbb
int
aaa
insb
mov
orb
mov
dec
lcall
bound
imul
inc
je
loope
aaa
in
hlt
mov
or
push
and
adc
mov
jmp
addr16
dec
pop
sub
out
xor
icebp
pextrw
leave
call
cli
xchg
xchg
inc
ret
cmpsl
xchg
call
xchg
lea
push
mov
in
or
xor
pusha
adc
and
outsb
inc
fdivrp
adc
aas
test
shlb
in
jno
loop
inc
and
popa
xchg
inc
xchg
sbb
int3
push
cmp
inc
jb
fildll
es
sub
push
ss
mov
jae
daa
les
rolb
lds
jge
outsb
add
gs
dec
pop
push
jge
adc
mov
daa
rclb
rcrl
xor
pop
xchg
add
pop
out
inc
ds
mov
test
sub
dec
and
dec
mov
stos
adc
fnstsw
and
aam
fstpt
insb
aam
icebp
mov
outsl
push
std
xor
push
jmp
add
push
mov
xlat
sbb
fstpt
push
jb
insl
xchg
inc
sbb
jne
sub
mov
je
push
mov
adc
sbb
dec
xchg
ljmp
jp
aas
xchg
dec
ret
cmp
cmp
loopne
push
std
shlb
lea
mov
sbb
es
dec
neg
cmp
jnp
jne
pop
push
inc
ficoml
repz
xchg
mov
aaa
inc
loop
loop
rcl
cli
and
xchg
sbb
push
scas
negl
test
push
clc
push
jbe
mov
addr16
sub
fsts
mov
adc
inc
cmc
sbb
stc
mov
aad
ret
sbb
in
dec
jle
rcr
jb
iret
fistl
xchg
jg
push
das
mov
mov
ss
ss
xor
push
cmc
adc
cmp
adcb
sub
bound
and
movsl
in
mulb
lea
xor
cmp
pop
pop
scas
push
sarb
shr
insb
aaa
inc
xor
fsubs
fstps
je
sub
addr16
es
pop
mov
add
popa
ror
cmp
mov
mov
je
nop
pop
sbbb
lret
and
cmpsb
cmpsb
icebp
jne
mov
icebp
loop
mov
adc
ss
sub
sbb
xchg
xchg
cs
int3
adc
cmp
sub
push
fimull
movsl
lret
dec
xchg
xchg
aad
pop
sub
mov
add
in
mov
cmp
mov
into
pusha
sbb
stc
dec
pop
fmull
shrl
cmpsb
mov
icebp
lods
dec
inc
addr16
fildl
das
aas
pop
imul
shlb
sbb
push
in
aam
cmp
in
adc
scas
and
xlat
cmp
ror
sahf
lock
or
loope
addr16
ljmp
test
hlt
mov
mov
push
out
mov
adc
lods
loopne
cli
inc
fists
jo
mov
fnstenv
popf
in
out
ss
popf
dec
jno
pop
xchg
lods
xor
fwait
mov
mov
sub
movsb
popf
mov
and
in
push
nop
enter
mov
sub
data16
insb
jp
loope
pop
mov
fcmovnu
icebp
loopne
aam
shl
mov
jg
imul
insb
pop
add
or
xlat
cmp
lret
mov
int
and
cltd
addr16
sbb
lcall
jl
out
imul
xchg
push
ds
cli
cmpl
and
jae
outsb
jbe
lods
push
loopne
mov
test
mov
mov
dec
orb
mov
mov
out
lods
fists
sahf
xor
cli
lahf
sub
repnz
je
rcr
scas
adc
xor
inc
imul
fisubs
rcl
mov
cmp
addr16
mov
push
sub
lds
jbe
insl
idivl
clc
xchg
loop
jle
mov
xchg
sub
jl
sti
jo
inc
sbb
les
add
mov
cmp
and
data16
insb
fmuls
mov
inc
fldt
xchg
ljmp
outsb
and
shrb
fisttpl
jp
sub
xlat
push
xchg
pusha
mov
mov
xlat
je
mov
cs
mov
popf
and
push
xchg
jle
dec
inc
dec
dec
add
and
fwait
push
outsb
ret
lods
jnp
negl
pusha
inc
xorb
push
mov
pop
mov
out
cmpsl
push
aas
movsb
mull
cmp
push
scas
loop
ljmp
test
or
mov
enter
out
inc
loope
ret
mov
arpl
mov
xor
ja
pop
inc
xor
mov
mov
aas
shll
in
push
es
adc
mov
sbb
cmp
mov
adc
cwtl
sbb
std
into
fbstp
xchg
movsb
cltd
sti
aam
jb
sahf
or
pushf
mov
xor
lret
or
cwtl
es
data16
adc
mov
ljmp
cmp
cmpsb
and
cli
adcb
subb
out
icebp
pop
in
mov
mov
mov
lret
and
in
cs
cwtl
fistl
shrb
dec
push
stos
push
jle
pop
les
jo
inc
scas
or
add
or
sbbb
sbb
fisubrl
repnz
sub
mov
std
or
jmp
mov
test
test
out
xor
mov
push
jle
mov
incb
or
in
lcall
mov
pushf
loop
or
jl
and
pop
sbb
imul
sub
sub
scas
mov
push
cmp
or
das
loope
scas
add
xchg
pop
out
inc
or
outsb
movsb
imul
cmp
aad
rcl
js
add
xor
out
push
jle
or
scas
dec
and
ret
test
test
mov
ljmp
shll
dec
pop
cmp
rolb
cli
in
daa
xchg
fcmovbe
cmp
xchg
xchg
jmp
xor
sahf
ss
shll
fs
ss
mov
and
mov
adc
aam
cmpsl
nop
push
jmp
pop
bound
cs
insl
cld
gs
xor
outsl
les
push
and
and
adc
adc
mov
addr16
cmp
cli
mov
in
into
xchg
and
out
lock
stos
lods
fs
add
nop
dec
push
inc
or
mov
mov
push
push
daa
movsl
fsts
cmpsl
adcl
lods
lods
es
loop
cwtl
ret
mov
cs
vunpckhps
orb
sub
int3
push
mov
daa
outsb
jne
arpl
mov
push
aaa
inc
push
mov
cmp
mov
mov
jecxz
jnp
pop
push
lods
fwait
dec
and
xor
push
push
sahf
fwait
xlat
inc
mov
cmpsb
shrb
or
add
test
dec
dec
test
leave
movsb
xor
aaa
jle
inc
ret
add
andb
inc
or
imull
jne
mov
inc
cmp
sub
pop
lret
aas
insb
adc
imul
xchg
cmovle
in
aas
or
popa
fldt
cld
dec
dec
repnz
bound
and
mov
fildll
inc
int3
pop
out
pop
in
jb
lret
les
cmpsb
je
adc
mov
lcall
jno
pop
test
cmpsl
jg
push
fidivrs
outsb
and
jge
es
xchg
mov
mov
movsb
cmp
jo
sbb
mov
lret
inc
into
cmp
jmp
shlb
mov
lahf
xor
xlat
adc
xchg
pop
int3
jbe
or
cmp
jecxz
jmp
jnp
mov
inc
in
pop
add
xlat
in
imul
dec
aam
jl
xchg
adc
pop
adc
lods
jl
test
rolb
lahf
popa
push
aad
pop
adc
cmpsb
add
mov
mov
cmp
dec
and
push
pop
jo
pusha
pop
dec
loopne
mov
popa
ss
in
mov
sbb
push
movsl
imul
sti
arpl
xchg
or
mov
dec
dec
adc
jecxz
popf
adc
adc
popa
pop
aas
daa
stc
fdivl
and
outsb
fistps
cmovnp
and
mov
insb
clc
js
lods
xchg
adc
mov
mov
mov
push
into
cwtl
add
cmp
sbb
icebp
mov
cli
xchg
aam
add
jmp
push
or
es
xor
mov
xor
mov
mov
cwtl
sbb
mov
xchg
sbb
mov
and
cwtl
cld
cmc
cs
jp
and
out
ja
stos
and
mov
xchg
push
xchg
lcall
push
pop
jne
imul
cmc
inc
ret
nop
push
dec
andb
dec
loopne
jecxz
cld
decb
push
inc
ficomps
in
test
and
sub
scas
and
dec
bound
mov
pop
or
dec
pop
aad
sub
clc
aad
cmp
pop
fs
fsubs
hlt
xor
cld
cmp
insl
pop
xor
out
addb
aaa
mov
movl
popa
mov
push
fldcw
pop
out
cmp
mov
jg
inc
inc
mov
and
int3
testb
mov
cmpl
xchg
shll
add
ficoml
mov
pop
pusha
jle
insl
adc
pop
in
lret
testl
xor
sbb
xor
xchg
add
pop
jb
ret
aaa
aaa
sti
jp
push
js
adc
repz
loope
iret
or
sub
aad
rorb
sub
xor
fcmovnb
xor
push
inc
and
aas
ja
jecxz
out
cmp
fcomps
mov
test
jg
ss
inc
adc
loope
pop
lcall
xor
in
or
adc
or
cwtl
dec
outsb
dec
mov
into
dec
and
and
mov
lock
mov
xor
cs
jo
add
pop
push
arpl
xor
add
arpl
sbb
rsqrtps
test
enter
out
inc
xchg
jecxz
shlb
arpl
inc
shlb
mov
pop
dec
mov
fisttpll
xchg
sbb
andl
or
xor
dec
xor
xchg
cmpsb
ja
ja
pushf
xor
jne
jmp
hlt
mov
fwait
add
loop
xor
arpl
and
mov
mov
jecxz
mov
mov
hlt
rcr
mov
fcompl
sahf
push
xor
fmul
sbb
mov
andl
xor
dec
push
mov
lret
or
push
iret
movb
push
lods
push
xchg
xchg
push
lods
out
jp
outsl
mov
push
xor
into
push
call
and
ds
das
jnp
mov
mov
jecxz
cmc
movb
mov
xchg
pop
or
pop
in
jle
jecxz
xchg
jnp
sub
mov
push
mov
mov
ja
add
mov
dec
xor
stos
cmp
xchg
cld
or
pop
and
cmp
nop
mov
inc
subb
dec
fdiv
cli
pop
mov
out
add
lea
mulb
jnp
mov
pusha
cmp
push
or
scas
and
sub
add
push
sub
cmpsb
add
aam
ds
aas
sbb
xchg
cs
lea
lods
mov
aaa
add
or
mov
loopne
pop
mov
xor
push
div
add
mov
xchg
and
and
sbb
xor
pop
xor
mov
add
pop
mov
jno
cs
sub
shll
mov
clc
lahf
sbbl
inc
call
xor
add
dec
push
cwtl
shrb
fmuls
mov
and
xchg
mul
pop
hlt
and
aad
pop
addr16
xor
call
lea
or
sub
fbstp
dec
mov
hlt
sarl
sub
mov
test
popf
push
dec
out
mov
mov
ss
stos
test
cli
jb
aad
mov
jg
jle
ret
pop
adc
scas
stos
dec
xor
pop
repnz
and
gs
arpl
mov
mov
and
movntps
lahf
out
loope
xchg
xchg
pusha
xchg
add
add
nop
mov
pop
or
push
mov
mov
fsubs
dec
sub
or
pop
cmp
cld
sbb
insl
xor
leave
test
orb
and
inc
jns
inc
cltd
sub
xor
popa
mov
push
mov
ret
lea
mov
dec
xlat
pop
popa
cmc
adc
dec
xchg
cmpsb
aad
push
xchg
xchg
jmp
in
pop
sbb
imul
fsubrs
test
lods
mov
pusha
loope
movsl
iret
mov
xor
scas
addr16
or
test
icebp
pop
dec
je
jmp
mov
sbb
mov
int3
fs
shrl
jbe
pushf
cwtl
sub
jno
and
cmp
rol
ds
cmp
shlb
mov
jle
negb
popf
sub
movsb
jg
lock
or
jbe
push
scas
xchg
sbb
fldenv
jbe
pop
testb
inc
inc
jg
lahf
dec
and
std
adc
ficoms
clc
and
fstpt
into
lret
dec
inc
arpl
shl
jno
cmp
mov
pop
dec
das
ss
imul
std
mov
dec
enter
mov
repz
div
std
sbb
and
adc
cltd
mov
sbb
push
mov
jns
mov
rclb
loopne
lret
mov
mov
sbb
mov
mov
sahf
js
add
movl
gs
add
aaa
mov
mov
icebp
lods
cmpsl
clc
mov
mov
cmpsl
cmp
xlat
dec
test
mov
jne
dec
jbe
pop
ds
inc
fnstcw
mov
mov
push
and
andb
mov
xchg
repz
cmp
inc
cmc
stc
mov
cmpsb
inc
mov
mov
jae
icebp
fldt
ds
cmc
mov
dec
mov
jne
jmp
imul
in
push
mov
mov
pusha
shr
jnp
pop
cmpl
jo
ljmp
sahf
or
pusha
das
and
sbb
shrl
push
cwtl
lret
lcall
xorps
sub
push
add
imul
cmpsl
xorb
fbstp
repnz
aas
mov
add
add
xor
sub
out
jl
test
cmp
loopne
inc
das
repz
push
jb
sub
jne
test
sub
lods
pusha
pop
xor
or
aam
pop
sbb
xchg
sbb
mov
or
popa
pop
xor
mov
cmpsb
or
sbb
shr
adc
cmp
data16
pop
dec
xor
out
adc
fdivr
std
shrl
push
in
cmpsb
xchg
adc
adc
xchg
mov
in
dec
push
add
lods
mov
fistps
adc
mov
cmpsb
fwait
addb
push
inc
add
push
in
repnz
pop
cmp
stc
addr16
shlb
xchg
lock
mov
add
outsl
lcall
movsl
aaa
lret
mov
jno
jne
pusha
mov
int
mov
fiaddl
fsincos
mov
pushf
cmp
lea
inc
test
push
lret
pop
pop
addr16
gs
pop
jmp
adc
pop
mov
sti
mov
out
hlt
sbb
daa
ret
cld
fcmovnu
mov
mov
mov
mull
lock
sbb
pushf
test
mov
repnz
sub
sub
stos
ret
xchg
push
mov
shl
into
push
or
xlat
fidivl
push
data16
push
in
loop
xchg
adc
pop
pop
cltd
cltd
ret
fadd
test
cwtl
cmpsb
enter
popf
gs
popf
nop
inc
outsb
orb
dec
arpl
scas
sub
xor
mov
xchg
push
xchg
cmc
add
popf
arpl
out
pop
mov
cmp
loop
aad
lcall
sub
sbb
call
sub
nop
lds
lcall
out
cmp
shll
repz
fiadds
std
gs
pop
fnstenv
dec
mov
mov
pop
outsl
or
in
jns
sub
add
out
pop
enter
repz
lock
test
xchg
mov
or
dec
mov
cmpsl
insl
pop
flds
xor
fcompl
sbb
nop
icebp
push
sahf
cmpsb
repz
scas
iret
xchg
mov
lret
lahf
out
mov
and
sub
mov
mov
mov
aas
fwait
mov
in
cmp
imul
in
enter
pop
mov
fistpll
sub
out
adc
or
mov
fsubp
mov
push
mov
mov
mov
ljmp
adc
and
icebp
hlt
jge
aad
mov
addl
lahf
push
add
into
mov
sub
sbb
add
adc
ljmp
rcrb
insb
stos
xchg
mov
testb
bound
out
aam
pusha
je
dec
andl
push
mov
sub
aam
lods
sbb
cmp
mov
jb
adc
pop
mov
pop
and
xchg
fistps
mov
movsb
dec
js
add
ret
jp
outsl
pop
pop
int3
test
cs
pop
into
mov
xchg
dec
push
into
jp
int
add
or
jb
inc
imul
xlat
out
call
insl
adc
popf
jp
cmp
cmp
sub
test
mov
push
xchg
jbe
adc
add
enter
das
fwait
ja
scas
in
std
cltd
push
sub
rorl
mov
test
pusha
sub
sbb
rcll
jo
sbb
lea
mov
mov
adc
enter
test
aas
test
pop
mov
enter
mov
mov
cmp
push
pop
mov
mov
and
dec
push
jp
ds
cmc
cli
gs
ss
cld
inc
nop
push
ljmp
dec
adc
xchg
sbb
cmp
insl
dec
pop
sbbb
mov
xor
xor
aad
sub
xor
pop
cltd
cmpsb
sahf
cmc
je
mov
rcrl
out
lock
mov
adc
lock
and
pop
movsl
rcrb
add
pusha
lcall
fcomps
mov
lods
jge
sti
xchg
fstpt
xchg
in
shlb
mov
pop
test
mov
pop
and
shlb
lret
xchg
adc
out
mov
xchg
push
xchg
mov
add
mull
popa
jge
jo
inc
sbb
fwait
add
