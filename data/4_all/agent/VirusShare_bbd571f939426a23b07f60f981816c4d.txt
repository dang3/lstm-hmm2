idiv
add
cmp
or
mov
or
imulb
popfw
adc
mov
pop
sbb
fsubl
push
jno
cmp
mov
jecxz
test
pop
fisubs
pushf
daa
sbb
sub
int
aaa
aaa
jg
mov
xor
jmp
cmpsb
je
push
pop
add
push
in
ret
pop
sahf
sbb
into
pop
dec
lock
push
push
pop
int3
adc
mov
jge
mov
and
adc
mov
imul
mov
jno
lahf
sti
lret
cmp
jge
xor
xchg
cwtl
push
jp
aam
push
int
and
xchg
inc
adc
clc
lods
gs
insl
adc
in
insb
repz
lds
out
test
aas
sbb
or
test
outsl
filds
iret
int
test
enter
in
sub
testb
cmpsb
test
addr16
lock
push
repz
jmp
cwtl
cmpsl
mov
test
enter
mov
mov
push
bound
insl
xchg
xchg
rcll
insl
mov
icebp
sbb
inc
int
aas
sub
out
outsl
adc
mov
xor
pop
arpl
push
sbb
adc
pop
dec
fwait
inc
movsl
nop
sti
mov
arpl
ret
scas
mov
les
in
scas
test
mov
mov
dec
xchg
xchg
insl
stc
stos
pushf
outsb
inc
dec
imulb
jne
fistl
aaa
fstpl
inc
xchg
adc
sub
leave
daa
std
test
jbe
mov
dec
call
repnz
fwait
and
pcmpgtb
mov
mov
lret
or
inc
xchg
pop
xor
fsubr
pop
das
push
cmp
push
mov
or
insl
int3
add
pop
xchg
sub
mov
ret
shr
clc
test
mov
add
sbb
xor
cmc
mov
stos
shlb
scas
into
in
hlt
imul
push
call
cmp
ret
std
jg
jg
sub
xor
sub
mov
testl
ffreep
mov
cli
outsl
cmp
sub
lods
or
stos
std
sbb
mov
scas
mov
hlt
aam
mov
jns
int3
pop
cld
xchg
mov
push
or
pop
mov
xlat
add
adc
add
mov
add
mov
bound
xchg
fs
xchg
push
pop
mov
push
pop
jge
or
cmp
push
andl
hlt
outsl
mov
cwtl
repnz
push
push
lods
inc
ja
cmc
dec
cmpl
imul
outsl
and
std
call
rcll
pop
sub
mov
sbb
mov
cltd
push
add
xchg
jbe
mov
cltd
dec
jge
cmpxchg
add
inc
fistps
mov
cltd
pop
addr16
stos
push
xchg
mov
in
jle
fcomp
leave
pushf
aam
cmpsb
adc
nop
xchg
dec
jecxz
mov
mov
dec
outsl
or
aaa
rcrb
pop
cmp
cmc
test
mov
nop
sbb
dec
js
xchg
mov
aaa
insl
dec
mov
push
scas
mov
jmp
push
ss
push
les
divl
das
sub
cwtl
fucomi
push
and
scas
xchg
inc
mov
jmp
fimuls
xchg
mov
mov
or
and
pop
test
cmp
mov
dec
sbb
insl
push
idiv
sbb
adc
pop
xor
xchg
orl
jnp
lret
mov
jmp
and
xchg
or
in
xchg
and
call
pop
or
cmpsb
loope
cwtl
lahf
xchg
ret
and
cmpsl
push
mov
adc
xor
push
fmuls
xchg
int3
jge
dec
bound
cbtw
push
out
dec
insb
pop
mov
outsb
pop
xchg
sbb
repnz
loopne
stc
leave
leave
xlat
push
inc
sbb
xlat
jbe
cmp
arpl
sub
fisttps
stos
xchg
pop
negb
mov
jl
add
jmp
mov
push
test
xchg
orl
mov
orl
jecxz
xchg
inc
push
and
stos
int
xchg
inc
sahf
insl
pop
sar
mov
mov
pop
xlat
lret
aas
pop
sti
sub
in
cmp
sub
pop
or
and
sub
repz
mov
mov
cwtl
mov
sbb
push
popf
jmp
sbb
inc
in
mov
stos
dec
shlb
call
mov
stos
lods
iret
jne
scas
mov
nop
fistl
rcl
insl
jnp
int3
std
xchg
jns
movb
movsl
hlt
cmp
add
jle
jp
mov
jns
int3
icebp
into
and
stc
mov
rcll
rclb
xor
pop
sbb
dec
cwtl
xor
mov
sub
fwait
test
add
movsb
gs
push
lahf
mov
idivl
pop
push
mov
xchg
cmp
pop
ds
xor
pop
xor
cli
sbb
pop
aaa
jg
jne
jb
sbb
dec
mov
jae
inc
adcb
es
fwait
pop
and
hlt
das
sbb
sbb
jbe
adc
lods
lods
mov
mov
mov
jle
xchg
cwtl
jl
sti
or
xchg
add
cmp
or
mov
or
into
sub
push
inc
mov
lock
repz
inc
pusha
loop
sti
push
cmc
inc
push
push
adc
into
aas
stc
lds
cltd
push
push
enter
lds
mov
outsb
mov
xchg
mov
dec
test
subb
loop
pop
clc
mov
insl
iret
jns
mov
adc
cmc
mov
xchg
push
sbb
jbe
jl
bound
scas
or
daa
sbb
inc
adc
cli
rcl
fcmovnb
into
in
int
mov
mov
lret
mov
cwtl
leave
repnz
cltd
pop
data16
aaa
jp
aad
aaa
ljmp
leave
dec
lea
mov
push
ret
pop
call
cs
rorb
stos
mov
ja
loop
js
push
adc
cmp
jnp
movsb
cmpsl
mov
repnz
lea
stos
repnz
cld
mov
cmp
pushf
xor
dec
mov
xchg
movsb
xchg
push
stc
xchg
or
push
mov
ret
fsts
cmp
repz
push
jae
xor
lods
lods
push
mov
stc
test
dec
bound
cwtl
xchg
cmp
faddl
enter
jl
push
jno
xchg
mov
lock
cwtl
ret
out
cmp
pop
pop
imul
push
in
mov
call
js
js
jge
jno
jno
cmpsb
dec
or
lcall
mov
rcrl
movsb
dec
xlat
xor
test
fistl
mov
and
adcl
xor
daa
mov
mov
xor
dec
add
cltd
mov
jmp
daa
popa
sti
or
scas
pop
lods
add
inc
iret
outsb
mov
push
in
imul
jecxz
mov
std
adc
lock
int
cmp
rolb
lea
mov
sbb
pop
daa
push
shl
scas
adc
test
xor
scas
fld
or
pop
inc
ficompl
inc
or
aaa
jns
notb
in
aaa
inc
cli
cmp
loope
into
or
sub
jne
fldl
in
aas
fwait
cld
xchg
outsb
call
aas
inc
xchg
sbb
out
xor
xor
out
add
hlt
es
jo
imul
jmp
xchg
dec
sub
jmp
or
stos
dec
cmp
mov
xor
test
scas
sub
xchg
jp
add
adc
insb
ret
pop
inc
repz
rcrl
cmp
and
shll
and
dec
data16
or
rol
faddl
mov
jecxz
xor
pusha
std
xchg
cmp
dec
add
insl
out
fmuls
ljmp
test
or
inc
ror
dec
pusha
cmp
cli
rcrl
adc
jmp
cmp
inc
dec
in
cli
ficoml
xchg
mov
mov
rclb
out
sub
push
and
cmp
fisttps
pop
pop
js
sahf
out
lahf
jp
ror
inc
daa
xor
cmp
mov
lods
jb
pop
jns
fs
out
xchg
sub
cmpsb
add
xchg
sahf
jl
add
cld
adc
adc
cmp
pop
mov
sbb
data16
adc
mov
jno
lock
cltd
fs
inc
out
ret
dec
jo
insb
mov
out
pop
mov
ss
xchg
pushl
cmc
lods
xchg
or
or
xchg
mov
cmpsl
add
mov
insl
lods
mov
mov
dec
sbb
mov
sbb
popa
inc
cmpsl
cltd
insl
mov
pop
pslld
mov
inc
std
popa
mov
xor
dec
outsb
and
out
xchg
push
shll
push
mov
cmpsb
dec
or
shl
stos
lods
daa
addl
insb
lea
add
call
in
fdivrl
push
ret
test
enter
pop
mov
mov
jecxz
popa
jmp
jae
jl
dec
pop
pop
or
xchg
or
jecxz
aam
xor
lods
inc
addb
sbb
test
sub
push
sarb
xchg
arpl
loope
leave
mov
nop
in
and
jge
pushf
clc
imul
push
jg
add
sub
mov
or
xor
and
outsl
repnz
int3
push
mov
fisttpll
movsb
mov
fistps
xor
mov
pop
lods
lock
mov
roll
jno
push
aam
das
in
stc
cmp
ja
les
ds
cmc
sub
enter
or
inc
fnsave
or
and
insl
xor
scas
xchg
fwait
cld
mov
inc
sarb
cs
push
mov
inc
sti
repz
or
es
sbb
mov
das
jp
fwait
repnz
xchg
aad
lods
cwtl
int3
push
dec
fimuls
pop
cwtl
adc
xor
adc
aas
in
es
bound
jae
jp
or
enter
std
mov
inc
xchg
push
out
imul
pop
jmpw
cld
lcall
cmp
out
lcall
dec
enter
stos
xchg
xchg
iret
jle
and
iret
xchg
jecxz
repnz
and
sub
mov
pushf
push
cs
movsl
push
into
enter
pop
cmp
icebp
mov
test
movsl
push
adc
push
add
inc
mov
test
rcrb
stos
xchg
lock
mov
les
push
adc
sarl
xchg
mov
and
xchg
xor
cmpsb
sub
adc
add
mov
scas
sub
test
lahf
xor
mov
dec
addr16
xor
push
cltd
insb
inc
xor
pop
js
popa
add
add
ljmp
pop
add
stos
cs
rcl
outsl
jp
jge
call
adc
pop
sbb
mov
dec
and
pop
adc
jnp
repnz
inc
jecxz
xor
inc
in
mov
inc
mov
adc
cmpsl
adc
push
inc
test
nop
dec
and
xlat
mov
fidivs
fsubrl
icebp
inc
and
push
sbb
mov
enter
sub
call
loop
and
mov
repnz
daa
push
stos
xor
subb
mov
sub
fs
push
ret
adcb
loopne
jg
cli
pop
hlt
out
or
push
xor
adc
inc
out
stos
xchg
pop
jmp
fidivl
dec
jl
dec
mov
fistpll
or
fidivrs
or
jo
xchg
ret
mov
push
mov
popa
inc
push
xor
loopne
fstpt
test
mov
xorb
imul
sub
popf
add
push
xor
push
cmp
mov
dec
clc
inc
and
push
out
xor
cmpl
shll
cld
fs
inc
xchg
lods
popf
stos
cmpsl
cmp
in
sahf
pushf
adc
inc
clc
stc
lock
imul
pop
push
mov
test
add
or
inc
cmp
dec
loopne
push
mov
mov
repz
and
xrelease
test
repnz
addr16
loope
and
test
and
inc
push
mov
pop
inc
pop
sbb
mov
adc
mov
icebp
cmp
mov
jae
jns
inc
xchg
push
push
pop
movsb
add
lret
loopne
push
mov
cmc
jg
or
jns
arpl
adc
or
je
imul
rcll
into
push
or
hlt
xchg
test
test
xlat
mov
jno
lret
inc
pop
mov
movsb
pop
inc
jle
setl
setae
inc
mov
enter
mov
pushf
rorb
outsb
mov
les
inc
btr
pop
popf
aam
jge
dec
fildll
mov
or
insb
jae
push
jmp
push
adc
leave
shll
mov
push
inc
jp
add
dec
std
out
int
or
rolb
lcall
add
imull
jnp
xor
sub
fiaddl
cmpsb
data16
or
shl
shrb
movsb
sub
ret
or
in
enter
push
mov
loopnew,pt
stos
and
inc
and
sbb
out
pop
sub
cltd
push
pop
inc
sub
mov
js
mov
jb
cmp
mov
popa
push
rcll
or
mov
repz
fldt
jl
enter
mov
push
pop
ret
xor
out
add
and
test
sbb
mov
into
xor
xlat
push
mov
fistl
popa
rcll
leave
push
fnstenv
dec
shlb
lret
fistl
sbb
jmp
pop
cmp
ja
sbb
inc
or
loope
jnp
cs
or
cli
test
cli
or
ds
mov
push
cmp
in
enter
movsl
adc
cmp
cmp
mov
rorb
lea
leave
sbb
clc
iret
dec
shlb
cmpsb
into
cmp
popa
pusha
lods
mov
popa
push
stc
xchg
xchg
push
ljmp
cmp
lock
xchg
pop
popl
mov
dec
mov
or
mov
adc
push
nop
adc
and
in
sbb
sbb
sbb
jecxz
xchg
jae
fcmovnb
jb
lret
mov
shll
notb
mov
fdivr
inc
fstp
fnstenv
add
xor
insb
mov
ret
or
push
lcall
lods
icebp
test
sbb
cmp
loopne
loopne
cmovno
cmp
sbb
sub
loope
jle
push
lcall
shl
movsl
fnstenv
cmpsl
inc
pop
in
dec
sbb
add
inc
mov
gs
js
mov
leave
xchg
sub
lea
xor
repnz
push
inc
mov
nop
jecxz
push
mov
clc
dec
and
inc
push
sub
cmp
mov
nop
test
aam
pop
subl
adc
js
jno
rorb
sub
sub
out
jae
mov
addr16
roll
xchg
bnd
rcrl
sub
push
ljmp
fisubrs
out
xchg
jo
loopne
lea
int
add
cld
mov
add
cs
jns
sti
cmpsb
mov
stos
add
sti
pop
jne
sub
loop
mov
les
adc
fistpl
icebp
out
jg
mov
insl
push
inc
insb
rcrb
loopne
mov
push
js
arpl
pop
stc
pop
mov
dec
pop
adc
or
cli
and
div
cltd
sbb
incl
or
popa
mov
push
xchg
cwtl
adc
xchg
inc
pop
popf
and
push
sub
sub
mov
jg
stc
pusha
pop
push
mov
int3
mov
xorl
dec
rcll
pop
push
pop
cmp
mov
lods
mov
imul
imul
int3
sub
jnp
adc
aam
jnp
inc
xor
mov
or
dec
mov
lahf
sbb
sbb
xlat
and
arpl
xor
imul
out
inc
call
arpl
pop
enter
push
out
daa
jo
fcoms
dec
push
inc
ss
insb
push
inc
gs
jo
xor
test
jecxz
out
negb
jbe
sti
cli
clc
inc
cltd
mov
push
aaa
addb
mov
sbb
movsb
adc
adc
adc
or
lods
and
sub
mov
mov
into
mov
push
mov
imul
mov
fildl
rcrl
pop
loop
pop
fmul
push
mov
pop
push
push
push
jecxz
ljmp
xchg
cld
js
cmpsl
adc
inc
jl
sti
xorb
std
in
cli
lret
popf
xchg
mov
sub
jmp
movl
mov
mov
sar
lds
popa
dec
std
enter
mov
push
push
cmpsl
test
in
mov
call
mov
fcmove
in
mov
and
and
or
sub
mov
cwtl
inc
mov
inc
pop
mov
sbb
inc
lds
mov
mov
das
cs
nop
xor
inc
outsl
ljmp
dec
cld
dec
jo
and
enter
adc
add
push
out
push
adc
xchg
mov
outsb
movsl
adc
test
enter
in
mov
bound
dec
pop
push
iret
push
lods
pushf
dec
and
adc
jp
loope
cltd
mov
fistl
push
mov
lret
stc
cs
daa
pop
gs
dec
scas
shll
mov
inc
and
lds
popa
inc
inc
jo
push
into
push
pop
adc
cmc
add
repz
inc
xor
add
dec
ss
xchg
cmc
and
idivl
mov
add
or
pop
or
adc
cmpsl
movsl
stc
mov
mov
and
pop
sub
lods
pop
mov
mov
sbb
add
mov
int3
xchg
test
and
mulb
dec
or
scas
cmc
rcl
jne
stc
into
xor
sub
xchg
shlb
outsb
icebp
mov
mov
dec
push
pop
adc
mov
test
stc
insb
outsl
push
xabort
adc
mov
imul
jbe
rcl
xorb
adc
in
and
mov
das
in
cmp
mov
jg
fwait
es
dec
pop
daa
jle
enter
repz
das
jo
push
lods
or
or
mov
lods
nop
movsb
or
ficomps
cltd
or
into
lock
sub
mov
in
ret
mov
out
lods
pusha
fsubp
pop
jno
adc
cmp
pop
div
clc
stc
cli
sti
xlat
std
push
incl
add
add
or
or
add
adc
push
adc
sub
or
sub
sbb
adc
push
pop
sbb
les
xlat
mov
jne
test
imul
mov
xchg
xchg
xor
cmp
cltd
insb
sbb
inc
cmpsb
and
inc
mov
mov
jecxz
add
and
adc
sbb
mov
fisubrs
es
lcall
jmp
xorl
ss
xlat
stos
pop
mov
jg
cmp
inc
or
jecxz
rep
outsl
mov
mov
outsl
ret
stc
push
lds
pushf
cltd
ss
dec
sub
xlat
fdivrs
aaa
pusha
cltd
push
xchg
pushf
inc
xchg
pusha
leave
leave
jmp
out
testb
ss
out
jns
and
sub
xchg
mov
jecxz
cld
lcall
stc
or
aad
mov
aaa
sub
or
mov
xlat
pop
push
and
pop
sub
sbb
and
mov
inc
les
xor
cmc
jl
mov
mov
flds
dec
dec
mov
and
push
adc
push
pop
pop
and
push
xorb
push
mov
and
negb
xor
inc
or
pop
push
adc
int3
pop
cmp
pop
push
or
mov
mov
xchg
xchg
cmpsl
test
lcall
popa
imul
mov
cmpsl
mov
cmpsb
sub
jle
leave
imul
mov
outsb
daa
popl
sarl
cs
