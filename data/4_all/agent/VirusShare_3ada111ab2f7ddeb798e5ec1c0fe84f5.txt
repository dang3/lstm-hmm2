imul
call
in
add
cmpb
jne
movzbl
mov
add
call
sbb
jne
adc
inc
sbb
jbe
repnz
aaa
or
pop
add
in
iret
adc
add
jne
rorb
jmp
fwait
sti
mov
sbb
jne
mov
add
mov
add
sub
mov
push
lea
sbb
sti
mov
pushl
popl
aaa
sbb
fs
mov
sub
rclb
fdivr
mov
lahf
ss
or
jne
cmp
jbe
push
push
jge
or
mov
in
lods
stos
or
stc
pop
pop
jmp
sbb
pushl
negb
push
pusha
hlt
leave
ret
dec
add
inc
aas
sti
aaa
fistl
sub
divb
cmp
cmpsl
movzwl
push
addr16
push
lea
push
lea
cmpsb
or
je
jg
testb
rcrb
push
push
push
jecxz
repz
sarl
idivb
pusha
rol
add
inc
pop
mov
dec
mov
mov
mov
add
mov
shr
cmp
dec
mov
and
or
test
jnp
roll
shll
cmp
loope
clc
jg
mov
shr
cmp
jae
lret
test
jg
push
shl
or
mov
or
and
sarl
shr
pop
cmp
add
ret
add
aad
out
ds
clc
pop
jmp
push
fstps
enter
test
dec
clc
hlt
add
mov
push
dec
shrb
cmp
push
jle
fmull
pop
and
push
adc
cmp
xlat
fsubr
shll
mov
imul
adc
out
xor
xchg
add
pcmpgtd
ss
jo
inc
sub
jg
mov
jns
out
or
lods
cmpsl
jns
out
add
xor
mov
pop
fwait
in
jns
push
pop
leave
ret
and
hlt
push
jp
ffree
sbb
push
push
or
push
cwtl
pop
sbb
or
add
xchg
sub
out
and
add
fdivs
adc
std
jge
mov
mov
and
das
mov
fisttps
adc
sub
clc
push
push
orl
lret
dec
jg
fimuls
dec
clc
add
add
pop
call
dec
dec
ja
mov
dec
mov
dec
xor
mov
dec
loop
inc
mov
repnz
scas
mov
jl
or
cmp
sbb
adc
sbb
or
cmp
cli
inc
or
jb
pop
jb
cmp
jbe
pop
inc
jo
adc
lods
clc
pop
add
or
rcr
sub
hlt
mov
shlb
leave
cld
lods
inc
cmp
cmp
jne
mov
jmp
mov
xor
add
and
push
and
add
sbb
lret
movsl
call
clc
cmpw
and
adc
daa
cwtl
mov
and
inc
popa
movsl
and
aad
or
lcall
fldl
push
testb
enter
fistpl
inc
sbb
hlt
ds
roll
add
jno
lahf
push
push
dec
out
adc
arpl
popf
in
into
pop
out
inc
push
les
or
mov
adc
add
inc
clc
cltd
jns
sbb
jae
mov
fwait
dec
sub
dec
pop
or
jp
cmp
aaa
add
pop
or
cmpl
and
mov
pop
add
popf
jge
outsl
add
and
stos
or
add
pusha
ss
pusha
test
push
sbb
and
add
fbstp
adc
je
je
mov
insb
mov
mov
or
and
push
push
fcmovnb
sbb
or
hlt
or
addr16
sub
movsb
je
sub
je
into
push
loopne
in
mov
dec
add
mov
fildl
add
insl
cmpl
inc
push
fdivs
out
sbb
stos
call
xchg
pop
jbe
fs
out
push
pop
and
xchg
push
inc
jmp
cmp
xor
lcall
js
jmp
shr
push
mov
lcall
mov
movw
push
cmpsl
jo
adc
xchg
add
ret
es
dec
or
mov
lcall
jbe
dec
inc
inc
push
in
xchg
inc
or
dec
je
ljmp
mov
xchg
push
sahf
xchg
add
push
dec
sahf
and
inc
jo
dec
xchg
xchg
dec
inc
dec
fidivrs
mov
push
cmc
cmpsl
mov
pop
push
and
add
sbb
jnp
in
addl
xor
add
add
or
or
push
sub
cmpl
add
outsb
jne
scas
mov
xchg
adc
mov
mov
ret
int3
add
nop
dec
mov
inc
rep
inc
push
les
jmp
pushf
jl
outsb
divb
pop
push
lcall
call
divl
and
loop
scas
or
xor
out
xor
pop
xor
or
pop
sbb
cld
outsl
inc
or
add
mov
fsubl
or
outsb
jne
mov
xchg
or
ja
inc
insb
lret
in
pop
sub
cmp
mov
cmp
cmp
rorb
popa
lock
adc
fnstcw
add
cld
push
jmp
cmp
in
dec
jne
fwait
lods
add
les
fistpl
and
ret
ret
mov
adc
adc
call
sahf
xor
add
fs
div
movl
sub
nop
shll
or
mov
psadbw
mov
or
pop
pop
cmp
sbb
bound
xlat
adc
inc
imul
in
and
mov
scas
xor
fnsave
into
sbb
pop
add
add
sarl
out
std
xchg
shlb
fs
aam
and
fstps
fmul
sbb
loopne
out
mov
fildl
adc
adc
sbb
addb
mov
jbe
or
rol
fidivl
and
lea
cs
out
std
mov
push
in
add
mov
add
mov
movsb
mov
cmpsb
push
pop
or
xor
inc
mov
test
jl
rorl
fcomps
mov
ljmp
daa
je
mov
push
push
fwait
push
adc
cltd
inc
sbb
fs
pop
jns
sbb
loopne
inc
cwtl
jo
fdivr
insl
stos
cmp
pushw
push
push
push
fstpt
adc
mull
enter
cmp
sarb
out
or
stos
mov
xor
mov
or
pop
jp
jle
repnz
shrb
adc
push
testl
shrb
or
out
jno
pop
adc
fs
mov
dec
unpcklps
inc
push
insb
andl
in
inc
push
cmp
movsb
insl
and
movsb
push
push
dec
xchg
fnstenv
insb
jmp
in
xor
fcmovne
adc
cmp
jg
and
mov
push
pop
insb
pop
ret
push
or
stos
add
push
cmpb
xor
pop
lcall
std
out
inc
mov
cmpb
push
push
imul
and
lea
sub
and
nop
and
rcll
lret
push
repz
les
pusha
push
sbb
push
sbb
mov
adc
ret
sahf
jl
add
mov
add
cwtl
adc
add
xor
ret
sbb
pop
hlt
mov
scas
shlb
cmp
push
loope
movb
or
sbb
adc
lcall
addr16
or
in
mov
ss
addr16
dec
sbb
push
cmpl
pop
pop
pop
add
outsl
xor
mov
xlat
add
cli
movb
sub
inc
and
inc
push
pop
test
gs
cmp
sub
push
or
inc
add
fsubs
mov
mov
push
pop
testb
lret
push
pop
cmp
jbe
sub
popa
cmpsl
cmp
push
adcl
loopne
jbe
frstor
xor
gs
test
add
addr16
decb
ljmp
lock
cmp
adc
push
sub
ds
cmp
ret
sub
xor
pop
add
dec
xlat
push
mov
icebp
xor
and
and
adc
dec
inc
xchg
cmp
mov
test
xchg
add
inc
gs
mov
outsb
xor
jne
jl
and
sbb
jmp
cmp
cmp
int3
decl
xor
enter
and
sbb
enter
adc
or
enter
add
cld
xor
hlt
lock
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
fcom
ror
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
mov
sub
xchg
xchg
xchg
xchg
test
xchg
xchg
je
insb
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
add
xchg
xchg
xchg
xchg
sbb
adc
xchg
cltd
xchg
xchg
or
xchg
add
call
dec
popa
imul
xor
xor
dec
outsl
filds
outsb
je
dec
imul
arpl
xor
xor
sbb
xor
add
xor
add
aas
arpl
arpl
inc
insb
popa
jae
pushl
gs
xor
fs
insb
add
imul
imul
ja
into
call
mov
ror
mov
mov
xlat
mov
shr
mov
mov
loop
mov
std
dec
shl
mov
shr
aam
int
sarb
iret
ret
add
aam
rcl
lret
jle
mov
mov
not
loop
cs
into
repz
and
pushl
pop
add
imul
pop
push
dec
dec
push
inc
cs
inc
inc
inc
inc
add
and
or
add
dec
and
nop
or
add
call
push
dec
add
adcb
cmp
cwtl
add
add
mov
incl
add
jg
cld
add
add
add
xor
lcall
sub
dec
xor
add
pop
inc
sahf
push
mov
add
aas
fdivrs
sub
lods
add
add
call
pop
jle
mov
roll
mov
add
add
adc
xor
add
and
inc
aad
sub
xchg
mov
leave
xchg
pop
pop
mov
imul
pop
add
sti
lods
sbb
mov
add
scas
das
add
xor
add
outsb
jae
sub
inc
sbb
push
mov
or
jns
jmp
out
sub
aas
xor
arpl
insl
cmp
je
xorl
cmp
lock
adc
jbe
dec
jne
sbb
subb
bswap
enter
nop
testb
push
ret
rorb
and
lcall
adc
add
adc
jg
adc
sub
push
dec
lods
push
cmp
das
leave
and
enter
sbb
xchg
test
das
push
xchg
xor
outsl
or
sbb
mov
addr16
ja
mov
decl
mov
data16
outsl
pusha
daa
adc
iret
add
add
mov
daa
xchg
xchg
pop
and
inc
leave
or
xchg
sub
cmpsb
imul
jne
ja
sti
mov
add
fadd
cmpl
enter
clc
add
lock
or
or
jg
rolb
int3
daa
das
pop
add
push
xor
pop
stc
add
cmp
sub
lock
cmp
push
push
pop
mov
test
and
inc
outsl
outsb
je
outsb
jne
inc
bound
addr16
jbe
adc
popa
je
inc
imul
repnz
outsb
or
jns
lcall
imul
jae
dec
gs
outsl
jb
popa
sti
pop
pop
pop
inc
or
imul
fstpl
pop
and
arpl
jne
adc
je
push
js
adc
push
outsl
imul
imul
and
dec
jo
jb
xchg
xchg
lods
cmp
push
inc
adc
je
jnp
dec
outsb
outsw
inc
adc
mov
inc
fs
cmovge
fbstp
dec
popa
outsb
movups
sub
insl
adc
or
popa
fldt
insl
insl
das
dec
mov
lods
or
test
sbb
test
jae
mov
out
cmpsl
pop
ret
mov
mov
jb
inc
imul
cmp
dec
bound
fistl
cmovl
sub
gs
sub
mov
and
adc
ja
and
int3
xchg
push
dec
xlat
mov
jne
pop
fcomps
add
xchg
add
jae
xchg
popa
addr16
pop
sbb
movsl
or
sbb
dec
outsl
outsb
addr16
gs
xorb
inc
inc
insb
addr16
pusha
mov
inc
inc
jne
jae
and
sbb
or
add
mov
mov
jne
sbb
inc
outsl
sbb
xor
arpl
fwait
insl
xchg
popa
or
push
and
fbstp
push
jb
pop
or
jae
ret
pop
ret
push
cmpsb
jae
push
das
or
mov
or
push
inc
pop
divb
jg
inc
or
popa
sbb
pop
inc
imul
or
fldl
sbb
jae
popa
inc
arpl
sbb
cli
mov
les
push
neg
or
inc
cmp
sbb
ss
and
lods
je
sbb
push
je
cmp
dec
add
jl
mov
cmp
add
or
pop
or
inc
mov
and
inc
sbb
xor
jge
inc
or
push
add
popf
lds
stos
push
pop
mov
pop
push
add
xor
rclb
outsl
ss
adc
push
adc
nop
out
test
add
aaa
pusha
jb,pn
jge
mov
sbb
fsubr
jnp
inc
add
es
push
adc
mov
dec
fldenv
daa
shrb
jae
arpl
dec
insl
arpl
sub
mov
sqrtps
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
