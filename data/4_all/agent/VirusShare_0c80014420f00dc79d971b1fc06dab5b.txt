fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
aam
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
test
pop
adc
pushl
cmp
pop
je
andb
int
sbb
dec
enter
mov
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
je
pop
fildl
shr
jmp
xorl
pop
stos
pop
pop
or
iret
mov
scas
insb
mov
push
popf
clc
mov
movsl
outsl
dec
andl
adc
sbb
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jmp
add
add
leave
in
mov
sub
movl
mov
shll
sbb
sbb
push
mov
mov
dec
jb
sbb
test
jne
pop
xor
adc
adc
rol
mov
sbb
insl
repnz
inc
in
insb
dec
shll
inc
imul
pusha
shr
ljmp
xorl
inc
mov
mov
inc
pop
stc
dec
adc
sti
cld
gs
sbb
or
movsb
jbe
pop
push
pop
push
and
clc
push
icebp
lods
rolb
or
pop
adc
leave
push
adc
add
mov
sbb
gs
mov
psllq
insl
shll
gs
scas
xor
outsl
adc
xor
inc
adc
arpl
push
adc
in
adc
pusha
insb
ljmp
clc
or
push
fwait
add
cmp
ljmp
cmp
mov
mov
add
add
cmp
mov
jae
mov
adc
sarl
ret
mov
outsl
fdivrl
faddl
sbb
mov
iret
cmp
fbstp
inc
mov
popa
cmp
add
push
push
push
sub
mov
cmpl
sbb
sbb
or
add
fcmovnu
mov
inc
sbb
orl
cmp
pusha
outsl
dec
jb
popf
mov
inc
sbb
jge
sub
and
hlt
jge
cmp
cmc
in
sub
jl
cmp
and
out
xchg
and
adc
sbb
fiaddl
or
and
or
push
mov
ret
les
sahf
adc
outsb
mov
cmpsl
jmp
test
je
mov
add
pop
stos
outsl
mov
clc
add
fisttpll
mov
outsb
jl
xchg
adc
shll
mov
adc
jge
lods
mov
cli
aas
mov
inc
sub
sub
call
call
add
fbld
movsb
cs
jo
in
rcrb
pop
popf
cmp
mov
mov
pop
pop
jb
xor
sbb
cltd
int3
int
shll
rcl
lret
test
dec
aam
insb
sti
xlat
insb
fmuls
inc
mov
dec
sub
push
xor
gs
outsb
or
dec
ss
xchg
int
lds
js
enter
push
je
lret
lods
jne
scas
xchg
scas
mov
pop
shll
mov
mov
mov
mov
inc
mov
xor
xor
mov
shlb
pop
and
fwait
scas
in
in
jns
out
jp
and
test
call
fnsave
cmpsb
sbb
xchg
mov
lea
pop
fcoml
aas
mov
mov
add
sub
cmpsb
adc
cltd
es
jne
mov
push
lcall
inc
adc
call
cmp
and
push
xor
jae
shlb
push
pop
dec
and
inc
in
mov
mov
dec
jge
in
daa
mov
adc
or
lea
xor
int3
add
push
gs
push
shlb
cs
int
shlb
jns
dec
aad
xor
data16
outsl
fcomp
fiaddl
fildl
pop
mov
inc
jecxz
cs
inc
out
out
pop
xlat
jne
call
adc
daa
in
xchg
sub
shlb
in
cmpb
mov
pop
arpl
leave
sub
pop
sahf
cwtl
mov
decb
pop
stos
lea
je
enter
incb
mov
nop
cmpsb
imul
rcrl
mov
test
lods
pop
add
shll
mov
push
aaa
or
or
pop
enter
sbb
subb
or
cmpsb
jnp
mov
xor
mov
mov
jge
inc
mov
sub
icebp
push
cli
lcall
jg
fxch
xor
sbb
jb
or
fsubr
adc
aaa
add
fistps
test
and
push
inc
jbe
daa
or
inc
xor
xchg
push
shll
data16
ja
xor
shll
gs
dec
imul
jb
outsl
xorl
outsb
dec
push
shll
outsl
ja
jae
add
xor
push
sub
insb
dec
outsl
push
popa
dec
push
shll
insl
pop
dec
lea
mov
xorb
roll
gs
shll
sub
xchg
inc
fs
imul
lcall
ss
iret
ret
out
iret
push
addb
addr16
jo
cmpsb
fnstcw
pop
add
push
fistps
loope
cmc
div
imul
and
cmpsb
std
jmp
xchg
adc
dec
sbbl
or
sbb
cmp
push
ret
sbb
or
sti
loopne
lods
adc
mov
or
enter
push
or
pop
je
aam
pop
mov
fistpl
mov
push
xor
divb
inc
ds
in
sub
mov
fsubrs
xor
push
adc
cmp
rcrl
insl
imul
mov
popa
je
sub
xor
or
inc
loopne
inc
push
mov
mov
push
insl
dec
shll
inc
popa
dec
shll
push
pop
mov
sbb
mov
and
mov
inc
shll
inc
outsl
push
stc
jo
shlb
inc
or
and
call
jne
xchg
shll
xlat
hlt
mov
fs
lea
int3
dec
mov
inc
push
sub
shll
jae
xor
xorl
shll
imul
outsl
ja
inc
imul
jb
je
cmp
shlb
lock
int3
ss
out
sub
into
or
push
or
mov
or
ss
xchg
or
add
test
pop
das
sub
add
loopne
push
mov
sub
add
inc
pop
scas
dec
pop
repnz
or
add
std
sbb
sbb
ret
adc
adc
pusha
loopne
loopne
subl
cmpsb
imul
imul
imul
inc
fcoml
inc
push
rcl
fs
pop
pop
or
adc
adc
cmp
adc
adc
pop
add
nop
sbb
cmpps
loopne
jne
in
xchg
dec
sub
lock
loope
or
jne
cmp
call
test
or
push
xchg
cmpsl
xchg
mov
shrb
out
fldcw
inc
out
xor
arpl
cmp
and
mov
xor
sub
dec
leave
adc
adc
popf
mov
sbb
mov
sub
xchg
nop
jae
das
andl
aam
icebp
add
cmp
je
aas
mov
add
push
mov
mov
xlat
push
push
fs
test
std
lret
xlat
ja
movsl
rolb
add
push
je
cmpsb
jmp
insl
jo
mov
push
int
sbb
dec
jbe
pop
lret
int3
gs
cmpsb
imul
mov
mov
arpl
mov
mov
mov
sub
lcall
stos
jmp
lods
dec
scas
inc
dec
add
popa
fs
xor
shll
idiv
stc
cli
sti
lret
mov
inc
cld
orl
sub
outsl
jne
pop
mov
test
cs
jae
xor
push
cmpsb
leave
lret
adc
push
jnp
xchg
mov
nop
lock
pop
es
loopne
test
sub
insl
punpckhdq
push
xor
pop
pop
fcmovnb
push
adc
bound
and
push
cltd
int
pop
push
ret
lods
cmp
push
imull
cmpb
shrd
adc
or
stos
and
adc
fs
imul
cmp
push
mov
sub
xchg
js
and
je
or
adc
call
stos
push
adc
pop
nop
mov
push
sub
or
sbb
jp
push
push
push
add
rorb
mov
mov
sbb
mov
testb
cwtl
push
nop
and
or
push
sbb
into
sbb
add
dec
sbb
leave
mov
in
and
pop
dec
xor
pop
loope
inc
popa
mov
and
push
inc
fistpl
and
or
xor
jns
enter
fdiv
mov
lods
inc
fstl
ret
push
leave
xorb
xor
push
pop
cltd
and
mov
lret
inc
fdivl
xchg
push
push
cld
jge
cmp
jo
xor
mov
sbb
mov
sahf
cmp
in
outsb
dec
mov
add
jp
neg
sbb
mov
inc
push
das
hlt
fstps
dec
and
mov
rol
xlat
lds
jae
inc
add
and
sub
or
push
mov
out
insb
loopne
je
je
adc
sub
pop
nop
jl
dec
pop
shl
push
movsb
mov
rclb
or
scas
imul
pop
push
shlb
pop
xchg
js
popa
insl
xor
roll
xor
out
lock
xor
dec
jo
popa
in
je
dec
shll
outsb
sub
xor
gs
int
adc
dec
xor
jne
jb
jbe
leave
adc
out
insb
inc
jbe
ret
xchg
bound
ret
add
mov
mov
inc
jmp
sub
gs
add
clc
add
add
xor
leave
mov
loop
push
push
stc
sub
enter
hlt
adc
hlt
xchg
dec
out
jl
mov
mov
out
jl
pop
cli
pop
cli
dec
testb
cmc
inc
cmc
hlt
and
push
clc
push
mov
rolb
sti
movsl
push
lret
or
jo
stos
jns
cmpsb
pop
cs
inc
lods
imul
movsb
aam
je
mov
in
adc
or
sub
add
movsb
or
pop
mov
inc
ss
popa
push
xchg
mov
insl
rolb
pop
sbb
dec
rcrl
dec
shll
mov
xor
movsb
movsl
stos
push
adc
outsb
mov
dec
mov
sbb
mov
or
scas
pop
or
xor
and
ret
lcall
mov
dec
xchg
les
jo
xchg
xor
mov
adc
xor
xor
call
add
mov
popw
adc
or
enter
fistl
inc
sarb
enter
clc
xor
pop
cli
push
stc
adc
mov
and
jecxz
fwait
aam
sahf
aad
mov
cli
adc
push
stc
mov
incb
int
xchg
hlt
outsb
adc
xor
test
add
push
cli
les
ds
add
in
in
pop
xchg
sub
ja
lock
add
repz
das
xchg
gs
xchg
jb
bound
or
jnp
dec
shll
xor
shll
loope
jecxz
shll
call
inc
ljmp
jnp
inc
enter
rorb
push
push
mov
leave
or
jmp
fists
xchg
pop
das
dec
sti
or
lods
pop
adcl
push
roll
fs
cmp
inc
or
mov
jns
inc
mov
mov
xorb
rcr
fdivs
or
sbb
leave
push
mov
mov
popa
mov
pop
into
jnp
jns
lock
or
jmp
jp
cld
in
mov
cld
imul
cmpsb
cmp
cmc
scas
add
jo
loopne
test
incb
jo
push
mov
sbb
je
sbb
push
lret
mov
jbe
out
je
inc
push
ja
or
mov
clc
mov
imul
cs
adc
adc
in
mov
sbb
mov
push
add
adc
sbb
cmp
outsl
leave
aaa
gs
xchg
insb
mov
sbb
repz
ljmp
pop
xor
ja
jle
ficoml
test
mov
jge
and
xor
in
loopne
dec
push
popa
push
test
xor
pop
scas
in
add
jmp
pop
add
enter
call
rdmsr
jl
xchg
arpl
lcall
test
xchg
cmp
push
dec
testl
jbe
xor
adc
lcall
adc
lods
loope
add
push
sub
int3
cmp
inc
cmc
lods
pushf
stc
sub
lods
in
push
in
sub
sub
shr
add
and
push
shlb
adc
push
inc
mov
mov
loopne
push
sub
in
pop
push
lret
mov
pop
out
lock
sub
fnstsw
sub
and
out
jl
adc
gs
fs
jne
popa
add
cld
je
out
push
mov
lods
stos
push
adc
fdivr
insl
jge
push
inc
xor
push
cmp
and
push
add
pop
jmp
shrl
leave
jl
pusha
test
xchg
sub
add
in
das
push
push
cmp
mov
pop
push
imul
lods
sub
inc
mov
insb
fs
mov
arpl
mov
insb
mov
mov
outsl
nop
data16
mov
or
lcall
or
mov
inc
fwait
pushf
insb
cmp
or
rol
insl
andl
or
gs
imul
cmp
test
lods
lret
xlat
pop
lods
popa
scas
scas
dec
popa
xor
rcl
and
outsl
inc
xor
shll
and
fdivs
jb
lods
push
in
iret
fmull
or
insb
movsl
in
adc
inc
enter
cld
pop
hlt
pop
idiv
fs
xor
sbb
jmp
lods
jo
stos
jg
fldl
pushf
sbb
repnz
cmp
push
shll
adcb
and
mov
adc
xchg
or
dec
shll
push
stos
sub
insb
push
insb
xor
cs
icebp
cmpsb
ss
jmp
dec
mov
push
push
push
sub
leave
adc
insb
insb
inc
mov
lret
mov
arpl
cmp
les
mov
dec
hlt
push
push
jae
fdivp
popf
pop
push
push
push
pop
popa
sbb
frstor
rcll
push
push
lock
inc
sub
pop
mov
xchg
push
sbb
sub
or
or
add
push
icebp
cmpsb
test
cs
push
mov
inc
sbb
arpl
jle
dec
pop
push
adc
dec
dec
shrl
in
lock
sub
mov
lea
jbe
dec
pop
sbb
push
jnp
pop
add
xor
or
add
xor
xor
jg
adc
xor
inc
or
div
imul
ret
mov
xor
adc
in
out
cmp
jbe
push
jne
jo
mov
mov
push
mov
fdivl
sub
and
sbb
or
inc
or
out
cmp
sbb
movzwl
cmp
jl
pop
nop
sahf
daa
dec
or
dec
sbb
cld
incb
dec
push
add
int3
in
inc
push
rcl
fadds
or
push
adc
jae
xchg
jl
jl
mov
push
dec
jle
sbb
pushl
into
push
adc
adcb
mov
flds
sbb
popa
arpl
in
cmp
adc
sub
aaa
mov
out
imulb
enter
or
adc
clc
pop
test
fimull
fdivrs
movl
xchg
loope
xor
aaa
xchg
lea
mov
pop
sub
add
fwait
gs
push
mov
mov
xchg
test
push
inc
sub
sub
mov
pushl
dec
mov
push
push
sbb
les
fs
imul
into
les
pop
iret
mov
icebp
inc
fsubrl
mov
sub
insl
fistpl
pop
add
push
push
or
sbb
xor
clc
sbb
push
push
mov
add
sub
add
xor
shlb
mov
pop
sbb
push
adc
hlt
and
inc
add
cmp
jl
add
js
and
sub
push
lcall
cltd
lea
movsl
clc
or
js
insl
add
mov
push
fadds
pusha
dec
sub
sub
push
xchg
mov
test
jnp
inc
or
or
push
jae
ss
pop
lea
daa
push
sahf
js
pop
push
lea
lods
adc
push
int
sar
sahf
lods
sbb
sbb
add
jbe
jmp
imulb
mov
adc
push
inc
or
clc
mov
daa
ja
sub
sbb
sti
mov
adc
cli
jl
mov
sbb
inc
mov
into
movsb
mov
daa
mov
andb
sub
jo
test
mov
mov
inc
push
push
sar
and
movb
pop
jmp
push
push
leave
push
dec
pop
push
and
inc
insl
std
sub
xchg
mov
sbb
jne
rcll
lds
jp
push
ret
dec
icebp
add
shlb
and
mov
jmp
push
mov
mov
lret
lds
push
inc
data16
push
out
push
mov
mov
jne
sbb
pop
cmp
pop
call
das
inc
dec
adc
push
movsl
add
insl
xor
lock
xor
mov
cmp
outsb
adc
lds
rolb
cmp
xchg
lcall
dec
mov
xor
fimull
mov
fstl
add
inc
sbb
push
sbb
adc
cmpw
jne
fwait
or
sbb
sbb
sub
xchg
jmp
lods
push
in
jbe
andl
and
fmuls
ret
push
pushf
outsl
pop
out
adc
sub
inc
adc
movsb
sub
jne
cmp
pop
lcall
lods
mov
mov
enter
stos
mov
sub
popa
and
dec
mov
sbb
mov
or
push
mov
mov
jp
lcall
outsl
jne
sbb
jno
dec
addr16
stos
mov
add
add
shrb
sbb
or
aad
add
xor
hlt
mov
mov
test
mov
les
or
lods
xor
int3
xor
pop
mov
addl
push
cwtl
pushf
lret
push
pop
inc
enter
fnstsw
xchg
dec
add
dec
adc
ret
addr16
pop
lock
push
loope
jbe
xchg
fmuls
push
jnp
jne
mov
cmp
push
push
sbb
push
or
call
mov
add
sbb
push
shll
mov
add
push
xor
and
pop
sbbb
icebp
push
add
dec
xchg
data16
ljmp
in
in
insb
cmp
add
jne
popa
lods
push
shrb
cmc
fs
mov
mov
jb
or
mov
scas
add
and
add
aad
cmp
and
js
loopne
loopne
sahf
and
inc
push
cli
push
push
fs
sbb
clc
mov
xor
lcall
add
sub
or
or
push
mov
pop
hlt
mov
sub
dec
and
jg
or
or
jne
shlb
mov
add
add
xor
pop
mov
fs
in
cmpsl
jl
mov
nop
scas
bound
mov
outsb
cmpl
ja
inc
imul
arpl
inc
int
daa
jns
ret
lock
pushf
test
dec
hlt
mov
mov
mov
std
and
subl
wrmsr
cltd
int
mov
mov
mov
loope
add
jecxz
enter
cmp
gs
pop
andb
add
adc
dec
lods
xchg
lea
dec
repnz
mov
sub
add
arpl
mov
pushf
cs
je
fnstsw
add
pop
idiv
add
mov
inc
lock
inc
add
pop
cmp
and
sub
ss
or
mov
add
sub
pop
dec
repnz
jbe
cwtl
cwtl
decb
fs
insb
rorb
inc
adc
ljmp
lods
cmp
ud2
push
mov
adc
xchg
lods
bound
cltd
inc
outsl
pop
xchg
gs
jo
inc
imul
add
jbe
or
xor
inc
insb
gs
test
dec
inc
js
fistps
mov
jmp
push
movsb
sbb
mov
push
push
inc
ds
mov
sbb
inc
in
pop
imul
lea
push
popa
pop
push
stos
data16
push
and
sbb
and
aaa
aaa
sub
push
xor
push
jmp
xor
sub
and
pop
inc
adc
pop
sbb
inc
mov
add
or
lret
aaa
cmp
push
sub
mov
lods
jl
pop
adc
ljmp
test
push
leave
xchg
cs
aad
aam
pop
xor
and
fcomp
mov
sti
fdivr
adc
les
lds
fldt
push
and
test
or
mov
sub
insb
and
aam
inc
outsb
rorl
fdivr
fcomps
or
or
sub
sbb
mov
inc
xchg
xor
push
rorb
lret
xchg
pavgw
addr16
enter
adc
mov
adc
mov
dec
inc
aam
pop
adc
sub
loopne
loopne
adc
pusha
and
in
bound
addl
push
call
addr16
call
push
call
and
shlb
or
icebp
out
insl
add
int3
add
pushf
sahf
add
xchg
xchg
mov
mov
outsl
ljmp
sub
std
add
add
jae
sub
mov
or
loope
pusha
in
imul
jae
inc
fsubrs
lock
mov
mov
or
pop
cwtl
int3
lock
sbb
sub
mov
dec
xor
gs
test
adc
jl
test
into
out
push
adcb
xchg
lods
mov
or
sub
roll
cmp
into
push
jg
sub
push
sti
in
or
mov
jo
fistl
xor
xlat
ficompl
nop
cmp
lcall
and
mov
jne
cmp
mov
cmp
mov
cmp
je
cmp
repnz
mov
add
jbe
aam
dec
movsb
insb
push
movsl
pop
mov
adc
cs
out
jmp
sub
jbe
jmp
jb
pop
xchg
adcb
jg
sub
pop
xor
imul
fisttpl
enter
pop
ret
and
mov
fimull
ficompl
arpl
add
or
stc
sub
jne
pause
data16
and
mov
and
add
add
out
imul
cmpsb
imul
imul
dec
shrl
and
inc
dec
imulb
push
ja
push
or
je
push
inc
add
adc
fnstenvs
hlt
push
ljmp
xor
call
xor
xlat
sbb
add
and
ss
shll
js
xor
shll
xchg
lcall
int3
aam
mov
add
and
nop
push
movsb
add
rclb
xchg
sbb
inc
add
data16
das
loopne
mov
xchg
push
jb
push
rclb
and
in
xchg
and
adc
mov
hlt
call
inc
push
xor
cs
insb
es
dec
add
or
mov
or
sbb
or
pop
mov
dec
gs
gs
repnz
lcall
je
outsl
fs
gs
imul
outsl
idivb
popa
je
push
push
and
ljmp
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
jbe
ljmp
arpl
xor
outsl
jb
cmovb
inc
outsl
outsl
je
gs
cmp
cmpsl
lret
out
sti
fidivs
dec
and
js
add
dec
dec
inc
xchg
pop
mov
cs
fs
je
jg
ja
gs
outsb
insb
imul
push
inc
push
inc
pop
push
outsb
arpl
mov
pop
push
push
mov
push
inc
dec
push
pop
fildl
mov
or
ret
push
pop
pusha
jle
add
pop
add
cmp
rclb
fcmovne
outsl
fldl
jmp
push
fdivl
arpl
fs
je
sub
out
xchg
cld
out
or
mov
mov
cmp
inc
or
add
add
mov
adc
dec
add
mov
add
dec
nop
test
nop
je
lea
fcomps
mov
add
push
mov
cmpsb
sbb
jg
mov
fcoml
and
mov
movzwl
mov
add
mov
or
mov
jmp
sbb
popa
xchg
or
cmp
rcrl
mov
pop
lea
push
push
adc
xorb
sub
fs
dec
pop
in
bound
xchg
lods
divl
adc
jns
push
sarb
cld
call
push
pop
ds
and
out
sbb
pop
lea
nop
push
or
mov
loope
call
pop
push
jmp
pop
pop
sbb
dec
clc
mov
fucomp
or
push
xor
pop
mov
inc
sbb
fcmovnbe
push
pop
and
add
add
sbb
mov
add
rorb
add
dec
push
add
pop
add
dec
pop
nop
add
xor
mov
filds
pop
mov
int
mov
imul
jb
insl
ljmp
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
mov
jp
add
clc
daa
fdivrl
out
movb
jmp
fmul
dec
jmp
cmpsl
call
pop
enter
movsb
and
jno
sti
pop
leave
mov
push
imul
cmp
dec
add
loope
dec
adc
mov
and
add
in
adc
jo
mov
lods
imul
insb
leave
fiadds
pop
xor
mov
popf
int
or
pop
push
test
xchg
fistpl
cwtl
add
fs
rorl
jnp
jo
les
cmp
shrb
xor
pushl
daa
insb
mov
sub
fadd
cld
or
sbb
daa
sbb
aas
cld
test
xor
add
push
pop
mov
fwait
seta
inc
xchg
daa
xor
mov
std
pop
decb
sub
xchg
mov
or
cli
mov
add
cmp
mov
add
sub
lcall
int
stos
add
and
and
jmp
or
call
add
ljmp
mov
dec
inc
lcall
lods
addr16
xchg
in
jle
jg
xchg
pusha
call
ljmp
and
mov
testb
pop
pushl
movzbl
push
je
mov
test
cs
mov
push
mov
push
mov
incl
pop
or
imul
push
sub
jne
jmp
adc
push
cmp
adc
cmp
or
adc
decl
loope
cld
insl
pop
insb
add
xor
pop
cmp
mov
mov
or
add
fs
in
mov
in
insb
in
jne
jg
sub
jae
add
mov
jl
icebp
adc
or
call
hlt
aas
push
lds
dec
rcrb
lcall
pop
push
inc
rol
les
add
lcall
mov
insl
leave
in
imul
int3
inc
add
outsb
or
cld
dec
into
arpl
outsl
cmp
rcll
shlb
jge
mov
mov
pushl
jo
arpl
je
xor
enter
movsb
movsl
cmpsb
cmpsl
shll
stos
lods
dec
out
out
or
mov
or
xchg
fistpll
jp
pushl
gs
jno
jne
push
lock
popa
lea
push
add
aas
sub
cld
mov
lock
test
push
lcall
push
jg
jnp
add
cmpsl
cmp
xor
sbb
mov
adc
jmp
pop
or
mov
dec
cmp
out
adc
add
lcall
filds
inc
push
dec
mov
add
pop
pop
scas
in
stos
loopne
loopne
sbb
ret
push
push
push
add
movl
mov
pusha
or
cs
clc
inc
stc
dec
cli
sti
push
fcmovb
xchg
call
adc
pop
decl
xor
or
or
jbe
decl
or
inc
mov
push
and
outsb
fisttpl
push
nop
rorb
pop
push
mov
or
call
lret
int3
nop
outsl
push
pop
insb
mov
lcall
rcl
jne
in
inc
addr16
call
sbb
lock
repnz
sbb
cmc
div
lahf
rorl
jg
lcall
cs
fwait
pushf
inc
or
popa
xor
inc
ret
jmp
mov
imul
test
stos
outsl
pop
data16
jg
loope
sub
pop
outsb
insl
scas
push
mov
mov
mov
xor
dec
mov
xchg
mov
imul
imul
jbe
mov
fisttps
pop
ret
ret
shll
vshufps
enter
decl
jmp
cmp
xlat
lret
fnstsw
xor
jne
pop
cs
loop
inc
jmp
in
in
out
out
jne
call
gs
xchg
in
aam
pop
dec
mov
push
enter
and
cmpsb
lret
int3
inc
or
into
dec
iret
minps
pushl
ret
rcl
aad
dec
dec
xlat
stos
fcoms
jne
aaa
push
and
aas
cmp
push
std
aaa
pop
lea
xchg
cli
idivb
push
mov
out
fsubs
add
jo
loope
cs
insl
add
mov
jns
cmpsl
jns
addr16
jp
or
jl
jle
outsb
jae
addl
add
stos
dec
outsb
add
dec
push
aas
lea
mov
mov
xor
cs
fimuls
mov
jbe
push
out
add
and
add
jo
cmp
lret
pusha
fsubr
or
cmp
push
aam
in
mov
xchg
cmp
adc
pusha
sbb
test
inc
inc
xor
sbb
pushl
xorl
imul
es
call
loope
sbb
mov
popa
jmp
push
imul
outsl
je
xor
push
pop
inc
insb
fcomp
outsl
sbb
inc
fcmovu
pop
fsubl
scas
pop
outsb
fwait
push
inc
push
fistpll
shrb
sub
inc
std
incl
jns
leave
idiv
mov
jne
mov
push
dec
push
mov
add
jns
movb
mov
inc
std
add
push
or
jno
hlt
inc
fucomi
outsb
lcall
ljmp
adc
push
pop
pop
stos
imul
and
leave
pushl
xor
shlb
dec
fcmovnu
int
scas
ds
add
add
or
push
jnp
mov
clc
decl
sub
insl
or
imul
add
pop
or
or
or
sbb
frstor
push
cli
mov
in
sbb
popf
mov
and
or
mov
add
lea
push
sub
adc
push
lcall
adcl
mov
add
cmp
cmovbe
shrl
add
dec
shl
inc
cmp
mov
jecxz
mov
fidivrs
adc
out
sbb
jo
mov
hlt
out
push
pushf
cmc
call
aaa
push
cs
push
jo
xchg
sti
outsl
jmp
imul
aam
mov
sbb
js
gs
push
push
addr16
push
fldt
leave
inc
or
in
call
jle
jne
add
pop
insb
int
ja
adc
insl
or
xorl
lcall
or
lods
push
dec
cmc
pop
jmp
mov
pop
sub
or
fadds
fwait
mov
pushl
pop
fwait
data16
in
inc
paddq
or
popf
or
movsl
mov
sbb
inc
psllw
outsb
popa
divl
outsb
and
push
testl
imul
aad
das
jmp
xor
xor
pop
and
out
popa
call
imul
lret
idiv
lea
negl
xor
cltd
add
pop
cwtl
dec
pop
clc
decl
xchg
xchg
xchg
cmp
int
jmp
cmp
jne
shll
sbb
insl
outsl
incl
mov
mov
inc
enter
xchg
cmp
push
jmp
inc
sbb
loopne
cmpsb
ja
dec
clc
cmpb
lret
push
sbb
call
or
outsl
std
push
lea
cltd
cltd
fildl
pop
xchg
lods
mov
xor
add
mov
test
adc
mov
enter
mov
push
cmp
add
push
push
arpl
insl
nop
cmpsb
outsb
or
push
dec
rorb
push
fdivs
in
mov
dec
dec
inc
dec
test
or
mov
out
loopne
rolb
jbe
call
jnp
jns
cmp
ss
xchg
jmp
push
sub
push
and
push
addb
call
clc
jmp
outsl
lods
xor
enter
sub
mov
fs
idivb
adc
fwait
xchg
lcall
insl
adc
clc
stc
jo
cli
je
mov
sar
pop
repnz
outsl
std
outsb
jmp
push
jmp
push
pop
loopne
jmp
in
sub
dec
sbb
outsb
mov
push
and
dec
push
in
hlt
inc
mov
pop
cmc
mov
insb
imul
out
dec
inc
or
and
aaa
cs
int
call
pop
jns
mov
ljmp
jbe
xchg
cmp
ss
xchg
fst
shrl
in
pop
mov
pushl
mov
ja
aam
pop
pop
cmp
je
nopl
push
sub
sbb
sbbl
clc
in
jle
sub
mov
dec
pop
xor
sbb
je
dec
push
dec
sub
dec
stc
push
cli
sar
lock
jle
int3
mov
pop
cmp
push
fwait
in
popf
push
xchg
cmp
push
stos
pop
outsl
hlt
jg
mov
mov
mov
add
inc
xor
pushl
ja
mov
push
je
push
and
mov
push
lcall
add
cli
call
movsb
inc
lea
vcvttss2si
mov
and
sbb
fistpll
add
jns
fs
dec
ljmp
mov
aad
fldln2
ret
pop
or
test
xchg
mov
outsb
nop
or
cmp
cmpb
xorl
and
decl
fcomp
addr16
pop
adc
sbb
pop
js
scas
mov
call
and
dec
loop
popa
dec
inc
xlat
ljmp
outsl
outsl
insb
daa
dec
imul
popa
outsl
test
sub
fwait
push
pop
xchg
bound
cmp
sbb
mov
pop
dec
pop
fldt
jl
mov
inc
xlat
fsubrs
aam
pop
mov
mov
or
outsb
arpl
cmc
inc
mov
ret
lds
pusha
mov
in
fimull
adc
xchg
loop
pop
sbb
clc
lock
stos
push
popa
or
jl
lcall
in
daa
jae
clc
testl
or
jnp
xchg
sbb
push
enter
mov
push
cwtl
pop
je
pop
das
outsb
fbstp
lods
lods
scas
mov
mov
adc
das
icebp
out
addl
pushl
mov
add
xor
mov
lea
jg
push
insl
pavgb
test
cmp
push
or
cld
fbld
addl
repnz
or
or
clc
call
clc
outsb
xchg
xor
or
das
icebp
lcall
lods
push
idiv
stc
push
dec
mov
xchg
sub
jb
or
shrl
sarl
cltd
ss
mov
lods
sti
popf
inc
cltd
pop
push
sahf
lahf
imul
mov
je
fsubrs
icebp
fisttps
mov
jne
out
push
stc
dec
pop
and
sbb
xchg
add
mov
and
jecxz
jg
std
add
in
ss
mov
add
scas
imul
add
pop
clc
push
lds
ret
test
cltd
inc
xchg
xchg
fdivs
mov
loope
or
call
iret
xchg
in
cmp
in
or
aaa
repz
pop
call
mov
xchg
dec
pop
sarb
icebp
dec
mov
int
ret
repnz
pop
push
hlt
add
iret
pop
cli
outsl
std
int3
dec
test
out
jns
ds
add
adc
cld
mov
or
adc
inc
je
push
push
sbb
xchg
or
adc
cmc
decl
in
lahf
daa
cmp
sbb
js
insl
add
incl
jno
push
adc
jb
and
dec
mov
lea
xchg
pop
idivb
xchg
sti
call
test
and
insb
inc
and
aaa
subl
jo
call
jns
mov
ret
pusha
ljmp
insb
dec
push
popa
cs
mov
adc
pop
push
shl
adc
push
jge
outsl
hlt
cli
mov
adc
js
mov
fs
and
push
push
pop
pop
icebp
gs
mov
inc
mov
aas
jae
or
jae
pop
or
xor
mov
gs
sbb
roll
adc
imul
pop
and
mov
cmp
cld
out
or
into
xor
daa
imul
int
aad
fisttpl
sbb
fsts
dec
shll
xor
out
in
stos
cmpsb
inc
jae
dec
push
roll
inc
jg
aaa
out
cmpsb
fnstenv
enter
adc
lcall
sub
push
xor
pop
leave
mov
lret
push
test
enter
fdivr
test
and
pop
pop
mov
pop
cld
outsl
mov
inc
out
mov
pop
in
leave
sbb
dec
push
lcall
inc
das
leave
out
std
fdivr
or
or
sub
xor
mov
jmp
cmp
xor
fs
ja
adc
loop
push
lds
jnp
inc
jmp
dec
sti
call
dec
cwtl
xor
jno
negb
adc
jge
mov
stc
sahf
cmp
jne
das
push
and
pushf
ljmp
mov
in
add
shlb
sub
or
lcall
inc
lret
es
cmp
popa
aad
xor
stc
and
stc
jp
add
sbb
pop
fistpl
std
js
enter
das
paddw
pushf
leave
fsubrp
pop
loopne
data16
pop
jae
mov
movl
pop
sbb
xor
xchg
cld
push
jnp
mov
cmp
xor
inc
addl
sub
cli
xor
inc
adc
outsb
lahf
jmp
and
mov
or
jo
dec
dec
and
ljmp
std
cmpxchg
inc
or
or
sbb
pop
or
rcll
jne
push
mov
lods
lods
mov
pop
inc
clc
pop
cld
js
jg
out
mov
jbe
outsb
add
ljmp
fldl
and
xor
adc
pushf
js
pop
popf
shlb
call
mov
mov
ljmp
mov
cmpb
xchg
mov
lcall
cld
and
inc
loopne
dec
xor
fs
pop
mov
or
mov
ljmp
lock
dec
and
pop
mov
stos
and
dec
jae
pop
or
aam
fstps
push
mov
add
sbb
mov
mov
sub
imul
fstpl
xchg
jae
nop
das
std
pop
cld
pop
xchg
aas
dec
cs
xor
popa
xchg
je
cmp
jb
sti
addr16
cwtl
je
cmp
jo
mov
lahf
mov
adc
inc
movsb
mov
push
cld
jl
cmc
mov
add
mov
push
int3
shlb
jmp
pushf
pop
jle
mov
sub
mov
outsb
add
mov
mov
mov
cmp
sbb
jp
xchg
and
data16
jp
test
cld
mov
or
cmp
dec
cmp
addb
sbb
pop
andl
test
mov
dec
mov
loopne
das
jge
or
adc
rclb
pop
pop
inc
data16
jne
cld
mov
out
push
mov
pop
shlb
outsl
arpl
fstpt
jae
fs
pusha
sbb
test
push
dec
jo
and
inc
lock
push
fstps
pop
mov
xchg
push
insl
mov
fs
gs
fsts
xchg
add
push
xlat
and
inc
push
lcall
sbb
pop
scas
icebp
mov
push
rolb
rcrb
pop
cltd
arpl
lcall
icebp
push
and
xchg
call
add
add
lahf
lods
dec
icebp
push
rol
lcall
sbb
mov
add
xor
mov
inc
std
xlat
cmp
dec
mov
movsb
inc
je
jg
das
fs
orl
inc
in
out
or
cmp
jmp
inc
daa
pop
adc
and
pop
xor
imul
add
call
in
push
fcomip
inc
incl
cltd
cwtl
xchg
xor
cmpsb
xchg
cmpsl
fstpl
jmp
int3
sbb
inc
pop
mov
aas
popa
ss
std
mov
aaa
arpl
aad
divb
xchg
sahf
fidivrl
dec
repnz
inc
jmp
popf
insl
mov
jb
ret
cwtl
mov
sub
mov
jle
and
shl
les
cwtl
sub
xchg
mov
mov
movsb
push
jns
test
inc
adc
cltd
sarb
inc
or
mov
mov
jl
push
jne
inc
mov
sahf
jge
mov
jmp
lods
cmpsl
insl
mov
addr16
leave
gs
push
cmp
sti
pop
rcrb
cwtl
or
add
mov
xchg
fs
fldt
jecxz
mov
dec
nop
xor
lcall
je
xchg
inc
cmp
sbb
dec
shlb
sbb
incl
mov
xchg
and
daa
or
push
mov
push
and
push
jmp
lret
js
in
stos
call
push
mov
cmpsb
push
lock
pop
xchg
xor
jg
cli
mov
nop
icebp
mov
jmp
lcall
mov
xchg
pop
in
push
sbb
fstpt
cmp
dec
leave
cmp
pop
and
loopne
mov
incl
repnz
ds
inc
cli
xchg
jl
or
jmp
push
sbb
mov
sub
icebp
sbb
and
xchg
mov
mov
push
loopne
dec
jg
call
movsb
mov
add
jno
mulb
mov
and
cwtl
xchg
or
jg
inc
xlat
mov
icebp
inc
rcr
or
subl
test
std
jg
decl
cmp
shl
sbb
imulb
lahf
fst
dec
jb
mov
stc
jne
dec
ss
pushf
stos
and
sbbb
jg
in
and
in
repz
repz
xchg
pushf
cltd
hlt
movsb
mulb
dec
pushl
pop
sub
les
lds
ror
mov
ud0
or
lcall
mov
repz
mov
add
mov
inc
sub
pushl
mov
pop
xchg
pop
enter
iret
jo
dec
adc
and
and
xor
pop
call
pop
into
jo
or
decl
mov
sarb
mov
fnstcw
jp
push
jle
call
stos
mov
jo
push
dec
jbe
lds
decl
push
push
push
and
rolb
and
and
test
incb
push
lods
lcall
pusha
adc
hlt
mov
aam
sub
std
out
outsl
lea
xor
xor
cmp
imul
aaa
cmp
xchg
dec
xchg
imul
adc
outsb
jnp,pt
or
inc
pop
cld
inc
push
gs
insb
shrl
jb
gs
aaa
push
dec
imul
nop
push
popa
scas
lea
cld
push
shrb
je
imull
adc
js
rol
xor
add
jmp
jb
mov
fwait
mull
stc
cmp
test
xchg
in
fucomip
xor
shrb
adc
scas
cmp
mov
adc
leave
inc
int
mov
call
dec
ret
sbb
sbb
sbb
addr16
push
sbb
lds
push
out
jo
pop
sub
mov
pushf
and
and
sbb
daa
dec
inc
and
pop
cmp
sub
in
loop
inc
mov
in
inc
xor
inc
out
push
lock
mov
lcall
decb
je
jnp
adc
cld
je
or
incb
push
ljmp
out
in
decl
insb
add
jmpw
mov
in
loope
sti
call
xor
xor
or
xchg
or
or
or
or
pop
mov
push
popa
bswap
je
call
adc
leave
leave
xchg
push
pop
popf
popf
sub
push
jl
pop
pop
inc
pop
daa
pushf
pushf
popf
mov
pop
jl
pop
jbe
sbb
in
xchg
mov
or
push
cmp
lods
push
test
add
push
lods
dec
test
outsl
xchg
gs
mov
pop
mov
pushl
lea
or
insb
insb
js
nop
xchg
out
mov
xchg
test
enter
aam
jg
call
sbb
pop
adc
sub
outsb
or
je
fdiv
or
movsl
add
jne
cltd
cmp
frstor
mov
mov
fs
add
cli
xchg
sbb
inc
pop
xorb
sbbb
or
xor
movsl
push
or
andb
movsb
push
hlt
mov
adc
scas
pop
xlat
shr
sub
sub
bound
push
int3
mov
rcrl
adc
leave
push
add
fs
add
inc
int
jecxz
movsl
je
leave
shlb
pusha
imul
outsb
aaa
clc
pop
call
aaa
xorl
jo
lock
dec
sbbb
das
lock
mov
pop
push
inc
inc
inc
push
in
adc
js
inc
in
hlt
or
add
dec
dec
dec
inc
jmp
insl
dec
enter
decl
addr16
dec
mov
push
loopne
in
inc
insb
adc
mov
lods
dec
popa
jne
pop
mov
mov
mov
lret
mov
dec
jno
dec
sbb
cmpsl
ficomps
lods
mov
ss
ljmp
adc
cs
fsts
push
pop
pop
mov
adc
hlt
adc
insb
inc
scas
ljmp
call
pop
ss
or
cmpl
and
cmp
and
add
mov
jne
mov
cli
push
xchg
popa
in
pop
push
inc
jg
or
mov
jno
inc
jmp
dec
loop
dec
cmp
test
mov
sub
dec
push
cmp
sbb
sbb
shl
adcb
pop
pusha
and
mov
adc
ljmp
sarl
cltd
and
adc
jno
push
and
push
in
hlt
daa
inc
das
push
push
mov
dec
incl
shl
inc
ds
ud1
xor
jle
incl
and
and
outsb
lods
loope
pop
adc
xor
xchg
cs
jmp
cltd
aam
xor
dec
outsb
adc
and
push
inc
or
fisttps
je
mov
les
push
inc
imul
or
call
clc
addl
popf
cwtl
ret
scas
pop
clc
lcall
les
lods
or
or
enter
sbb
aaa
fdivr
decl
incl
testl
lds
jne
adc
into
enter
incl
jne
or
add
fdivr
js
movsb
push
test
or
or
loopne
push
decl
sbb
sub
loope
incl
cmp
je
cmp
fistpll
idiv
jge
jb
dec
dec
cmpw
jne
pop
adc
jg
pop
jne
test
mov
sbb
call
xchg
push
fnstcw
push
pop
or
xchg
mov
inc
cmp
rcr
fidivrs
stos
pop
or
mov
cmp
decl
out
xor
lahf
adc
mov
je
sub
pop
xor
xchg
ret
and
insl
mov
and
repz
xchg
jne
push
fcompl
sub
pop
or
gs
pop
test
fs
dec
movsl
cmp
mov
iret
nop
rorl
mov
lds
in
push
adc
mov
orl
mov
pop
jg
incb
pushf
shlb
int3
les
pop
outsb
cmc
popa
push
insl
mov
pop
lods
mov
stos
incl
arpl
xchg
cmc
fcomps
adcl
inc
pop
push
lea
inc
mov
sbb
xor
lcall
negb
xor
cltd
sbb
xor
jmp
pop
clc
cli
dec
je
jo
flds
and
jbe
push
gs
cmp
jae
inc
js
add
push
mov
or
mov
ljmp
incl
bound
sbb
mov
jb
jmp
loopne
jbe
add
jl
jg
adc
mov
popf
xchg
push
xchg
push
fwait
pop
inc
pop
push
pop
jno
push
clc
aas
sbb
add
xor
pop
stos
dec
lods
sub
adc
aam
adc
aaa
adc
push
je
je
insl
mov
aam
xlat
cmp
add
add
sub
jl
loopne
cmpsl
mov
jl
pop
rorb
fistps
cmpsl
rcr
call
adc
mov
das
mov
mov
jmp
leave
push
or
adc
pop
mov
lret
inc
mov
in
fadds
pop
fisubs
jo
push
sbb
call
lds
scas
iret
dec
inc
mov
dec
mov
jg
pushl
jmp
and
push
cmc
inc
div
idiv
stc
cli
mov
cld
xchg
mov
decl
out
test
fsubrs
jle
imul
inc
cmpsb
push
xchg
outsl
outsb
xchg
sub
sub
cld
fildll
push
xchg
xchg
push
add
jb
ficompl
ljmp
sub
pop
pop
and
aas
dec
sub
sti
xor
stos
or
add
dec
rcl
fcomp
in
and
call
call
and
pop
repnz
xlat
mov
lret
add
mov
or
jnp
out
adc
mov
fadd
inc
or
dec
loopne
cmp
inc
bound
sub
jecxz
cmp
sub
push
adc
pusha
mov
out
mov
in
push
lods
int3
push
into
ss
popa
les
pop
push
adc
mov
mov
imulb
inc
addr16
dec
xor
cltd
mov
idiv
adc
jo
call
or
ljmp
and
push
mov
ljmp
mov
sub
jge
sub
xchg
and
insl
mov
sub
jmp
test
pop
pop
jo
adc
xor
loope
lret
push
in
cmpl
incl
xor
or
push
cmp
js
cmp
xchg
in
adc
bound
inc
mov
mov
sbb
leave
jb
xchg
jo
sbb
loopne
stos
lcall
xor
loop
jecxz
in
scas
inc
or
ja
push
and
cs
mov
xchg
in
push
jl
mov
sbb
call
push
sub
pop
sub
mov
sub
inc
push
inc
mov
movsl
mov
xor
mov
dec
dec
or
sub
xor
push
cwtl
outsb
cwtl
xor
cltd
lcall
jo
xor
adc
sbb
lock
call
jne
pop
jb
add
xor
and
std
add
push
repz
ss
mov
je
ret
pop
aaa
inc
lret
xor
rcrl
shlb
sbb
xchg
cmc
stos
cmp
jge
inc
inc
jle
fwait
pop
gs
mov
inc
lods
mov
cld
fucomip
sarb
faddp
and
nop
xchg
mov
jmp
or
aaa
inc
push
pop
sbb
hlt
jmp
mov
mov
inc
ljmp
xchg
inc
push
mov
sbbb
pop
std
test
jmp
hlt
push
popa
mov
cmpb
or
call
gs
push
lcall
daa
mov
decl
inc
jl
add
jg
mov
fistps
outsl
or
jl
cmp
push
out
push
inc
and
fdivrp
mov
mov
push
fwait
sbb
xchg
jb
and
pop
push
mov
dec
or
cwtl
xor
out
jns
cmpb
mov
outsl
adc
sub
js
outsb
sbb
inc
pop
sbb
xchg
popf
sbb
inc
rolb
iret
jge
mov
and
sbb
push
pop
test
cmp
test
stc
int
pop
test
push
cmp
mov
scas
js
mov
jg
sar
mov
mov
xor
push
bound
ss
adc
call
daa
in
cmp
in
loop
test
cmp
push
lcall
jne
mov
and
and
adc
cmp
decl
xchg
orl
sub
and
in
loope
inc
xchg
add
stos
add
andb
pushl
add
and
mov
jo
sbb
xor
lock
fnstsw
loope
jecxz
pop
in
dec
sar
cld
inc
int3
sub
inc
repz
cmp
jns
mov
pop
mov
jb
inc
sahf
sbbl
test
out
sub
mov
out
mov
dec
mov
call
outsl
call
popf
pop
inc
in
pop
nop
fucomp
out
inc
lock
push
test
and
std
push
jecxz
int3
sub
aam
andps
push
stc
push
push
inc
arpl
movsl
test
or
lcall
cmp
push
call
jbe
xchg
in
in
sub
adc
add
pop
test
call
jle
aaa
push
xchg
les
push
mov
mov
lcall
adc
inc
mov
pop
repnz
stos
push
xchg
xchg
mov
shll
jns
mov
inc
inc
pop
daa
cwtl
nop
ljmp
jle
sub
mov
mov
repz
fbstp
adc
jno
ds
push
pop
in
jno
or
adcb
leave
or
and
repz
in
sub
rclb
scas
ja
lea
in
push
sbb
adc
inc
pop
push
and
decl
pop
mov
loopne
in
xchg
ret
in
hlt
in
mov
cmp
in
add
les
mov
negl
je
dec
push
or
push
jbe
sbb
subb
mov
jl
jecxz
and
mov
sbb
jo
in
add
jbe
outsb
and
dec
inc
add
loopne
pushf
cwtl
iret
sbb
subl
push
rcrl
mov
add
gs
sarb
push
push
xchg
test
in
je
mov
cld
insb
push
mov
mov
or
arpl
inc
add
std
call
aas
inc
dec
push
xor
sarb
jb
rcl
icebp
ljmp
insl
sub
xchg
lods
pop
imul
xorl
in
or
clc
jmp
xor
in
stos
adc
in
in
mov
lcall
cltd
add
ret
data16
lods
xchg
jecxz
cmp
adc
lock
adc
xchg
mov
fdivrs
fdivrp
mov
pop
bound
jge
test
insl
ljmp
jnp
add
mov
push
inc
ljmp
sub
ja
mov
pop
es
fistl
push
cld
or
and
mov
mov
hlt
or
mov
insl
pushf
or
inc
sbb
call
sub
add
jbe
pushl
and
out
ja
mov
lcall
movsl
decb
cmp
shr
cmp
sub
pop
stos
lcall
and
push
pop
xchg
cmc
sbb
call
sysexit
mov
test
xorl
adc
call
sub
out
in
or
aam
sahf
or
test
xchg
in
dec
lock
or
dec
std
cwtl
rsqrtps
push
addr16
outsl
xchg
jmp
bound
dec
clc
pusha
rclb
mov
decl
and
and
pop
pop
adc
adc
mov
and
add
jmp
cmpsb
xor
mov
or
or
fidivl
ljmp
rcr
mov
sbb
pusha
fcoml
dec
mov
lock
jae
lcall
clc
and
sub
xchg
idivb
sbb
clc
outsb
xlat
mov
jb
call
sti
ja
sub
jg
and
jo
lds
in
cmp
sbb
int
xchg
mov
inc
mov
call
clc
and
mov
xchg
or
xor
rclb
push
pusha
popa
pop
in
loop
sahf
hlt
loopne
fldt
cmp
movsb
pop
or
mov
sbb
jne
and
lret
jns
arpl
xchg
push
and
lea
fs
test
outsb
push
enter
in
movsb
inc
push
jne
cmc
lea
inc
incl
pop
ret
jg
sbb
mov
lods
sbb
icebp
mov
jnp
xchg
aam
call
push
inc
add
lea
inc
cli
fbld
cmp
cld
sub
adc
in
mov
xchg
loopne
add
ret
and
out
mov
cld
push
fisubs
cmp
sub
les
inc
mov
sub
inc
mov
sub
sub
lods
lods
mov
cli
into
xchg
or
push
mov
fs
loop
std
icebp
inc
xchg
nop
dec
sbb
xchg
aaa
clc
call
fsin
mov
movsb
or
ljmp
cli
stos
rcl
aaa
lea
test
push
or
movsb
and
mov
mov
and
test
pop
movl
mov
pop
sbb
or
push
jae
in
jg
xchg
cli
push
jae
mov
outsl
dec
push
inc
into
andb
mov
insb
adc
mov
jae
rcrl
lods
insb
add
or
jg
adc
cmp
or
lods
and
jp
cmpsb
push
dec
shrb
inc
sbb
mov
icebp
incl
push
sub
pushl
adc
sbb
data16
and
mov
dec
pop
sbb
and
mov
in
xor
inc
into
sub
and
movsl
out
adc
sub
call
cli
pushl
vorps
xchg
adc
idivl
cmp
and
push
adc
adc
xor
jg
sbb
and
and
pop
inc
inc
xor
or
cltd
push
mov
xchg
push
xchg
idivb
into
push
mov
dec
popa
and
insl
imul
or
dec
push
incl
pop
aaa
jmp
jecxz
or
cli
das
jle
push
push
and
test
popa
int3
addl
clc
incl
adc
cmp
dec
and
je
inc
fldt
xchg
inc
cmp
je
sahf
adc
in
ljmp
lock
or
divl
adc
cmp
ja
push
fildl
hlt
cld
incl
in
in
xor
mov
and
mov
cmp
arpl
out
cmp
jb
das
mov
ljmp
addl
decl
test
mov
jmp
mov
or
mov
jmp
insl
enter
push
pushf
lods
sub
adc
or
push
adc
mov
add
and
neg
cli
dec
or
enter
aaa
inc
cmp
jae
mov
mov
decl
sti
lods
andb
adc
push
fmul
sub
inc
jb
xor
mov
cmc
adc
loopne
aaa
mov
ljmp
pop
int
inc
add
rorl
adc
test
sbb
call
xchg
adc
add
or
sar
jg
out
push
xchg
xor
test
leave
add
push
sbb
int
les
mov
pop
addl
add
lods
addb
lock
fwait
adc
out
cli
fcoml
addr16
add
les
decl
adc
sbb
hlt
pop
dec
out
inc
adc
add
mov
dec
cmp
imul
push
fcoml
dec
call
faddl
clc
int
fs
cmp
xor
inc
movsb
xor
and
leave
mov
and
jbe
mov
lcall
ret
push
xor
icebp
adc
shll
hlt
mov
pop
cmp
cltd
addl
fadd
ficoms
and
dec
or
adc
add
or
push
fsubl
add
push
testl
push
mov
pusha
sub
fxch
dec
add
fildll
data16
mov
test
aam
and
mov
jo
popf
push
das
add
roll
inc
subb
int
pop
jbe
xor
xchg
into
cmpsb
add
lahf
lret
or
cmp
jbe
pop
lods
enter
call
je
daa
inc
push
jmp
lock
mov
add
sar
xchg
sbb
pop
pusha
dec
mov
mov
xchg
mov
push
popf
clc
mov
decl
dec
cs
add
pop
mov
push
inc
add
imulb
and
pop
adc
mov
push
mov
movl
loopne
popf
adc
dec
std
sbb
add
xor
ret
pop
and
jge
std
stos
sub
jnp
or
lahf
cli
decl
repnz
std
sub
rolb
xchg
test
outsb
adc
inc
imul
fdivrs
clc
fbld
sbb
push
cwtl
xchg
insb
jae
adc
mov
call
fsubs
and
push
es
mov
jne
inc
dec
clc
inc
fs
pop
add
sahf
lea
and
pop
repz
inc
cmp
in
add
jl
pop
add
fisubrl
fcoml
add
mov
jecxz
loope
add
inc
or
and
popf
push
outsl
mov
loopne
adc
mov
xchg
or
or
loopne
or
stos
mov
movb
stc
fbstp
cmp
inc
lock
or
je
mov
push
and
or
push
repz
je
bound
mov
mov
adc
adc
sarb
iret
adc
jg
sub
mov
pop
mov
xor
aaa
clc
mov
sbb
js
inc
adc
sub
in
pop
jae
mov
es
inc
orl
mov
ror
mov
push
jne
fists
inc
dec
jmp
lods
push
add
int3
push
cmpsl
nop
pop
cld
outsl
icebp
jp
xor
push
xor
xor
xor
hlt
push
jne
dec
sarl
inc
mov
jmp
notb
and
ljmp
out
adc
jmp
push
insl
dec
mov
int3
xchg
loopne
pushl
xor
bound
add
lds
jmp
mov
mov
pusha
aas
mov
adc
xchg
mov
incb
outsl
std
mov
xchg
mov
pop
add
xchg
pop
std
lcall
and
add
lods
push
imul
cmpb
push
inc
imul
cs
push
mov
jns
add
call
mov
mov
pop
dec
sbb
jo
movsb
cmpsl
dec
xchg
jg
pop
lock
clc
xchg
clc
jbe
adc
into
cli
lcall
sbb
mov
mov
sub
call
push
stos
lock
add
fcompl
sbb
and
mov
imul
jg
mov
das
cmp
inc
dec
cmp
in
sti
push
test
jg
enter
mov
std
lret
jl
mov
cmp
movsb
in
loopne
jno
fistl
inc
pusha
mov
sbbl
sti
lea
jno
dec
adc
pop
xchg
and
hlt
in
nop
or
in
fwait
and
add
icebp
mov
add
cwtl
dec
aam
cmp
sub
mov
pusha
outsb
lea
std
push
rcll
idiv
push
inc
out
je
incb
mov
cmp
and
clc
je
mov
sbb
add
jbe
sarb
jl
pop
dec
pop
xlat
sar
mov
repnz
in
fmuls
lret
mov
incb
sbb
sub
dec
xlat
in
sub
cld
mov
push
cld
xor
adc
add
lret
mov
cwtl
jmp
decl
inc
xor
jb
push
dec
mov
ja
xor
sbb
pop
ljmp
and
jo
addb
negl
dec
inc
xchg
mov
add
jnp
ja
mov
incl
cmovae
pop
mov
lods
add
je
xor
pushl
add
leave
sub
ja
jne
je
push
repnz
cmp
leave
rcll
mov
es
xchg
or
xor
fs
leave
sbb
lock
adc
sub
inc
mov
add
push
push
dec
inc
dec
in
or
push
mov
jg
dec
std
push
andb
jo
and
out
jg
pushl
xlat
add
mov
cld
stc
leave
mov
aad
lret
xor
xor
lcall
xor
fisubl
mov
pop
xor
jge
pop
or
repz
jnp
sbb
mov
aaa
int
and
ficoms
insb
les
and
add
ds
adc
test
jnp
outsl
addr16
jp
sbb
fsubrp
or
das
hlt
fists
add
test
jne
insl
outsl
and
inc
dec
inc
pop
rclb
test
xor
jge
add
testb
push
inc
in
insb
fistpl
out
push
push
jmp
mov
inc
mov
imul
arpl
addr16
mov
add
xor
jne
lea
cli
pushw
sub
dec
sbb
push
sbb
push
add
fsubs
repz
push
push
in
adc
jg
jnp
jecxz
jg
adc
push
outsl
mov
sbb
mov
aas
dec
sti
ljmp
icebp
jg
and
adc
mov
gs
and
push
outsb
insl
adc
fucomp
or
imul
push
cld
dec
jg
imul
decl
adc
xchg
mov
jae
jg
incl
fs
lea
rcr
adc
add
popa
push
outsl
sbb
loop
sahf
jmp
push
sub
cmp
sbb
sahf
cmp
decb
aas
ja
gs
dec
add
jo
outsb
clc
adc
inc
decl
jo
push
arpl
xor
mov
mov
add
inc
push
dec
xchg
or
jns
inc
jb
pushl
xchg
nop
jb
or
or
popl
inc
enter
insl
inc
clc
push
inc
inc
mov
fidivrl
mov
jbe
jge
je
sbb
rcr
lret
push
frstor
adc
sti
call
arpl
push
mov
or
in
idiv
push
in
leave
sbb
inc
fs
xchg
or
outsw
out
fwait
jg
lock
test
incl
outsb
jo
push
popl
mov
or
jns
popa
bound
and
xchg
daa
mov
clc
fistpll
jb
ja
testl
pop
movd
and
sub
ljmp
std
pop
lret
pop
testb
dec
jb
and
pop
es
mov
pushl
jno
popa
lea
out
adc
or
aas
xor
mov
lds
incl
xor
dec
inc
pop
jno
adc
pop
push
decl
adc
jne
sbb
sti
hlt
lret
popa
and
push
aas
sub
shrb
lods
inc
js
pop
call
mov
dec
push
outsb
sbb
mov
ret
adc
mov
mov
mov
push
fsubrp
jo
jne
jns
add
incl
xchg
push
stos
js
ljmp
lock
adc
inc
mov
pop
or
mov
sbb
push
outsl
hlt
test
pop
pop
or
or
or
sysret
insl
mov
loop
push
push
push
add
push
and
and
xor
aaa
mov
or
or
ja
push
sbb
bts
call
or
xchg
xchg
push
dec
fdivl
ficomps
mov
pop
adc
or
mov
add
dec
or
or
adc
sbb
sub
pop
adc
adc
or
jl
or
xchg
sub
incl
lock
neg
incl
push
adc
adc
pop
inc
shrl
fisttpll
das
add
es
or
add
pushf
add
jae
pushl
jno
out
insl
sti
or
movl
adc
push
add
gs
pop
and
jg
aaa
add
sub
sub
inc
push
lldt
push
jg
outsl
mov
cli
inc
mov
adc
insb
adc
decl
std
fldt
outsl
or
or
add
pop
test
or
sbb
gs
incl
or
popa
or
or
and
pop
and
adc
cmpsl
adc
cmp
mov
rorl
adc
add
and
add
sbb
push
fildl
cvttps2pi
pop
or
cmp
inc
adc
cs
rcrb
std
in
sbb
in
fiaddl
or
int
dec
aaa
and
repnz
aad
fmuls
sub
or
sar
incl
add
push
sub
cli
movups
fadds
add
nop
push
inc
mov
add
mov
pop
shlb
subb
aas
mov
or
push
adc
pop
inc
test
push
adc
cmp
pop
call
xor
fstps
add
add
shll
insb
inc
ja
ss
jno
in
add
nop
xchg
add
aaa
fdivrp
cmpsl
and
push
sub
fsub
out
cmp
jmp
and
in
mov
movsb
je
sti
cmpsb
pop
pop
aam
adcl
cs
mov
pop
or
fisubl
gs
fwait
xchg
mov
push
fisttpl
or
jmp
sbb
sarb
popf
xchg
cmp
and
sub
jne
sub
lea
nop
fildl
nop
add
pop
call
pop
mov
sub
adc
in
mov
mov
adc
or
out
jne
push
jnp
adc
jae
xor
inc
sub
loopne
cmp
xor
test
lds
leave
or
enter
icebp
sbb
ljmp
dec
add
adcl
lea
cmp
mov
add
inc
xchg
dec
jne
jmp
mov
ret
sub
ja
add
jle
loopne
jmp
push
stos
mov
jg
call
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
lods
mov
add
cld
xor
jnp
notb
je
mov
mov
pop
ja
mov
push
pop
call
dec
or
sti
outsl
sbb
dec
repnz
push
adc
cs
mov
push
hlt
or
loope
xor
mov
mov
sbb
cmp
ja
fadd
fisubrl
jne
add
loop
mov
adc
jp
or
scas
xchg
ss
pop
out
jle
mov
push
std
lea
mov
aad
xchg
mov
and
sub
adc
cli
pushl
push
cmp
jne
sub
jmp
fmull
add
rclb
rorb
int
movsb
jecxz
xor
rorb
mov
mov
push
rol
fwait
cmpsb
jmp
adc
and
xor
shll
add
pop
shll
sbb
jbe
jl
mov
inc
push
mov
pop
in
inc
dec
push
add
dec
imul
and
insb
jo
imul
loop
loop
shll
loope
sbb
call
inc
jns
jno
cmp
lcall
jo
lret
fisubl
cmovno
and
lds
dec
inc
sub
inc
imul
push
mov
data16
mov
jb
data16
aam
iret
push
gs
cmp
and
pop
lsl
arpl
pusha
repz
jg
xchg
cmp
add
or
clc
loop
mov
and
ret
adcb
sub
faddl
outsl
push
push
adc
sbb
push
js
fidivrs
jne
cmp
push
daa
mov
adc
cmp
push
imul
adcb
push
gs
push
or
inc
mov
add
imul
jbe
push
js
jge,pn
rcrb
jnp
sbb
add
push
mov
sti
mov
adc
jbe
outsl
outsb
push
fs
test
fidivrs
inc
push
bound
fmuls
ss
xor
std
mov
fs
scas
and
or
stos
jo
push
adcl
jae
cs
addr16
inc
jb
or
lahf
je
aad
mov
inc
mov
fiadds
pop
jae
pop
fcomps
test
wbinvd
pop
add
mov
inc
or
insl
or
dec
push
pop
sbb
imul
inc
mov
add
test
pop
je
or
xchg
sub
mov
mov
inc
arpl
outsb
dec
gs
insb
in
gs
add
out
imull
pop
outsl
mov
fsubs
test
and
pop
jo
or
bound
aaa
cmp
sbb
mov
es
pushf
or
cmp
sub
fisttpll
ja
or
jo
loope
lock
xchg
inc
js
gs
sbbb
or
out
jb
push
push
xchg
and
lock
dec
outsb
gs
fsubrs
add
pop
imul
xchg
pop
and
and
ret
inc
inc
cmpsl
fstps
push
mov
adc
shll
inc
sahf
pop
repnz
add
add
dec
adc
fcoms
test
adc
bound
xchg
push
push
mov
jp
cmp
push
mov
or
cmc
cmp
shlb
aam
pop
mov
les
gs
or
jnp
fsubrs
push
inc
cs
mov
or
push
dec
daa
rorb
je
xor
cmp
mov
add
adc
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
pop
add
sbbb
add
add
add
ja
add
xor
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
add
cld
rolb
add
rolb
add
roll
add
rolb
add
add
in
rolb
add
roll
add
rolb
add
roll
add
roll
add
add
pop
roll
add
add
je
add
add
add
adc
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
push
cs
insb
add
inc
push
dec
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
data16
add
inc
gs
outsl
fs
gs
imul
js
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
aam
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
push
test
pop
adc
pushl
cmp
pop
je
andb
int
sbb
dec
enter
mov
xchg
fstpt
add
pop
push
push
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
je
pop
fildl
shr
jmp
xorl
pop
stos
pop
pop
or
iret
mov
scas
insb
mov
push
popf
clc
mov
movsl
outsl
dec
andl
adc
sbb
sti
sub
mov
cmp
jne
incl
inc
sbb
or
jmp
add
add
leave
in
mov
sub
movl
mov
shll
sbb
sbb
push
mov
mov
dec
jb
sbb
test
jne
pop
xor
adc
adc
rol
mov
sbb
insl
repnz
inc
in
insb
dec
shll
inc
imul
pusha
shr
ljmp
xorl
inc
mov
mov
inc
pop
stc
dec
adc
sti
cld
gs
sbb
or
movsb
jbe
pop
push
pop
push
and
clc
push
icebp
lods
rolb
or
pop
adc
leave
push
adc
add
mov
sbb
gs
mov
psllq
insl
shll
gs
scas
xor
outsl
adc
xor
inc
adc
arpl
push
adc
in
adc
pusha
insb
ljmp
clc
or
push
fwait
add
cmp
ljmp
cmp
mov
mov
add
add
cmp
mov
jae
mov
adc
sarl
ret
mov
outsl
fdivrl
faddl
sbb
mov
iret
cmp
fbstp
inc
mov
popa
cmp
add
push
push
push
sub
mov
cmpl
sbb
sbb
or
add
fcmovnu
mov
inc
sbb
orl
cmp
pusha
outsl
dec
jb
popf
mov
inc
sbb
jge
sub
and
hlt
jge
cmp
cmc
in
sub
jl
cmp
and
out
xchg
and
adc
sbb
fiaddl
or
and
or
push
mov
ret
les
sahf
adc
outsb
mov
cmpsl
jmp
test
je
mov
add
pop
stos
outsl
mov
clc
add
fisttpll
mov
outsb
jl
xchg
adc
shll
mov
adc
jge
lods
mov
cli
aas
mov
inc
sub
sub
call
call
add
fbld
movsb
cs
jo
in
rcrb
pop
popf
cmp
mov
mov
pop
pop
jb
xor
sbb
cltd
int3
int
shll
rcl
lret
test
dec
aam
insb
sti
xlat
insb
fmuls
inc
mov
dec
sub
push
xor
gs
outsb
or
dec
ss
xchg
int
lds
js
enter
push
je
lret
lods
jne
scas
xchg
scas
mov
pop
shll
mov
mov
mov
mov
inc
mov
xor
xor
mov
shlb
pop
and
fwait
scas
in
in
jns
out
jp
and
test
call
fnsave
cmpsb
sbb
xchg
mov
lea
pop
fcoml
aas
mov
mov
add
sub
cmpsb
adc
cltd
es
jne
mov
push
lcall
inc
adc
call
cmp
and
push
xor
jae
shlb
push
pop
dec
and
inc
in
mov
mov
dec
jge
in
daa
mov
adc
or
lea
xor
int3
add
push
gs
push
shlb
cs
int
shlb
jns
dec
aad
xor
data16
outsl
fcomp
fiaddl
fildl
pop
mov
inc
jecxz
cs
inc
out
out
pop
xlat
jne
call
adc
daa
in
xchg
sub
shlb
in
cmpb
mov
pop
arpl
leave
sub
pop
sahf
cwtl
mov
decb
pop
stos
lea
je
enter
incb
mov
nop
cmpsb
imul
rcrl
mov
test
lods
pop
add
shll
mov
push
aaa
or
or
pop
enter
sbb
subb
or
cmpsb
jnp
mov
xor
mov
mov
jge
inc
mov
sub
icebp
push
cli
lcall
jg
fxch
xor
sbb
jb
or
fsubr
adc
aaa
add
fistps
test
and
push
inc
jbe
daa
or
inc
xor
xchg
push
shll
data16
ja
xor
shll
gs
dec
imul
jb
outsl
xorl
outsb
dec
push
shll
outsl
ja
jae
add
xor
push
sub
insb
dec
outsl
push
popa
dec
push
shll
insl
pop
dec
lea
mov
xorb
roll
gs
shll
sub
xchg
inc
fs
imul
lcall
ss
iret
ret
out
iret
push
addb
addr16
jo
cmpsb
fnstcw
pop
add
push
fistps
loope
cmc
div
imul
and
cmpsb
std
jmp
xchg
adc
dec
sbbl
or
sbb
cmp
push
ret
sbb
or
sti
loopne
lods
adc
mov
or
enter
push
or
pop
je
aam
pop
mov
fistpl
mov
push
xor
divb
inc
ds
in
sub
mov
fsubrs
xor
push
adc
cmp
rcrl
insl
imul
mov
popa
je
sub
xor
or
inc
loopne
inc
push
mov
mov
push
insl
dec
shll
inc
popa
dec
shll
push
pop
mov
sbb
mov
and
mov
inc
shll
inc
outsl
push
stc
jo
shlb
inc
or
and
call
jne
xchg
shll
xlat
hlt
mov
fs
lea
int3
dec
mov
inc
push
sub
shll
jae
xor
xorl
shll
imul
outsl
ja
inc
imul
jb
je
cmp
shlb
lock
int3
ss
out
sub
into
or
push
or
mov
or
ss
xchg
or
add
test
pop
das
sub
add
loopne
push
mov
sub
add
inc
pop
scas
dec
pop
repnz
or
add
std
sbb
sbb
ret
adc
adc
pusha
loopne
loopne
subl
cmpsb
imul
imul
imul
inc
fcoml
inc
push
rcl
fs
pop
pop
or
adc
adc
cmp
adc
adc
pop
add
nop
sbb
cmpps
loopne
jne
in
xchg
dec
sub
lock
loope
or
jne
cmp
call
test
or
push
xchg
cmpsl
xchg
mov
shrb
out
fldcw
inc
out
xor
arpl
cmp
and
mov
xor
sub
dec
leave
adc
adc
popf
mov
sbb
mov
sub
xchg
nop
jae
das
andl
aam
icebp
add
cmp
je
aas
mov
add
push
mov
mov
xlat
push
push
fs
test
std
lret
xlat
ja
movsl
rolb
add
push
je
cmpsb
jmp
insl
jo
mov
push
int
sbb
dec
jbe
pop
lret
int3
gs
cmpsb
imul
mov
mov
arpl
mov
mov
mov
sub
lcall
stos
jmp
lods
dec
scas
inc
dec
add
popa
fs
xor
shll
idiv
stc
cli
sti
lret
mov
inc
cld
orl
sub
outsl
jne
pop
mov
test
cs
jae
xor
push
cmpsb
leave
lret
adc
push
jnp
xchg
mov
nop
lock
pop
es
loopne
test
sub
insl
punpckhdq
push
xor
pop
pop
fcmovnb
push
adc
bound
and
push
cltd
int
pop
push
ret
lods
cmp
push
imull
cmpb
shrd
adc
or
stos
and
adc
fs
imul
cmp
push
mov
sub
xchg
js
and
je
or
adc
call
stos
push
adc
pop
nop
mov
push
sub
or
sbb
jp
push
push
push
add
rorb
mov
mov
sbb
mov
testb
cwtl
push
nop
and
or
push
sbb
into
sbb
add
dec
sbb
leave
mov
in
and
pop
dec
xor
pop
loope
inc
popa
mov
and
push
inc
fistpl
and
or
xor
jns
enter
fdiv
mov
lods
inc
fstl
ret
push
leave
xorb
xor
push
pop
cltd
and
mov
lret
inc
fdivl
xchg
push
push
cld
jge
cmp
jo
xor
mov
sbb
mov
sahf
cmp
in
outsb
dec
mov
add
jp
neg
sbb
mov
inc
push
das
hlt
fstps
dec
and
mov
rol
xlat
lds
jae
inc
add
and
sub
or
push
mov
out
insb
loopne
je
je
adc
sub
pop
nop
jl
dec
pop
shl
push
movsb
mov
rclb
or
scas
imul
pop
push
shlb
pop
xchg
js
popa
insl
xor
roll
xor
out
lock
xor
dec
jo
popa
in
je
dec
shll
outsb
sub
xor
gs
int
adc
dec
xor
jne
jb
jbe
leave
adc
out
insb
inc
jbe
ret
xchg
bound
ret
add
mov
mov
inc
jmp
sub
gs
add
clc
add
add
xor
leave
mov
loop
push
push
stc
sub
enter
hlt
adc
hlt
xchg
dec
out
jl
mov
mov
out
jl
pop
cli
pop
cli
dec
testb
cmc
inc
cmc
hlt
and
push
clc
push
mov
rolb
sti
movsl
push
lret
or
jo
stos
jns
cmpsb
pop
cs
inc
lods
imul
movsb
aam
je
mov
in
adc
or
sub
add
movsb
or
pop
mov
inc
ss
popa
push
xchg
mov
insl
rolb
pop
sbb
dec
rcrl
dec
shll
mov
xor
movsb
movsl
stos
push
adc
outsb
mov
dec
mov
sbb
mov
or
scas
pop
or
xor
and
ret
lcall
mov
dec
xchg
les
jo
xchg
xor
mov
adc
xor
xor
call
add
mov
popw
adc
or
enter
fistl
inc
sarb
enter
clc
xor
pop
cli
push
stc
adc
mov
and
jecxz
fwait
aam
sahf
aad
mov
cli
adc
push
stc
mov
incb
int
xchg
hlt
outsb
adc
xor
test
add
push
cli
les
ds
add
in
in
pop
xchg
sub
ja
lock
add
repz
das
xchg
gs
xchg
jb
bound
or
jnp
dec
shll
xor
shll
loope
jecxz
shll
call
inc
ljmp
jnp
inc
enter
rorb
push
push
mov
leave
or
jmp
fists
xchg
pop
das
dec
sti
or
lods
pop
adcl
push
roll
fs
cmp
inc
or
mov
jns
inc
mov
mov
xorb
rcr
fdivs
or
sbb
leave
push
mov
mov
popa
mov
pop
into
jnp
jns
lock
or
jmp
jp
cld
in
mov
cld
imul
cmpsb
cmp
cmc
scas
add
jo
loopne
test
incb
jo
push
mov
sbb
je
sbb
push
lret
mov
jbe
out
je
inc
push
ja
or
mov
clc
mov
imul
cs
adc
adc
in
mov
sbb
mov
push
add
adc
sbb
cmp
outsl
leave
aaa
gs
xchg
insb
mov
sbb
repz
ljmp
pop
xor
ja
jle
ficoml
test
mov
jge
and
xor
in
loopne
dec
push
popa
push
test
xor
pop
scas
in
add
jmp
pop
add
enter
call
rdmsr
jl
xchg
arpl
lcall
test
xchg
cmp
push
dec
testl
jbe
xor
adc
lcall
adc
lods
loope
add
push
sub
int3
cmp
inc
cmc
lods
pushf
stc
sub
lods
in
push
in
sub
sub
shr
add
and
push
shlb
adc
push
inc
mov
mov
loopne
push
sub
in
pop
push
lret
mov
pop
out
lock
sub
fnstsw
sub
and
out
jl
adc
gs
fs
jne
popa
add
cld
je
out
push
mov
lods
stos
push
adc
fdivr
insl
jge
push
inc
xor
push
cmp
and
push
add
pop
jmp
shrl
leave
jl
pusha
test
xchg
sub
add
in
das
push
push
cmp
mov
pop
push
imul
lods
sub
inc
mov
insb
fs
mov
arpl
mov
insb
mov
mov
outsl
nop
data16
mov
or
lcall
or
mov
inc
fwait
pushf
insb
cmp
or
rol
insl
andl
or
gs
imul
cmp
test
lods
lret
xlat
pop
lods
popa
scas
scas
dec
popa
xor
rcl
and
outsl
inc
xor
shll
and
fdivs
jb
lods
push
in
iret
fmull
or
insb
movsl
in
adc
inc
enter
cld
pop
hlt
pop
idiv
fs
xor
sbb
jmp
lods
jo
stos
jg
fldl
pushf
sbb
repnz
cmp
push
shll
adcb
and
mov
adc
xchg
or
dec
shll
push
stos
sub
insb
push
insb
xor
cs
icebp
cmpsb
ss
jmp
dec
mov
push
push
push
sub
leave
adc
insb
insb
inc
mov
lret
mov
arpl
cmp
les
mov
dec
hlt
push
push
jae
fdivp
popf
pop
push
push
push
pop
popa
sbb
frstor
rcll
push
push
lock
inc
sub
pop
mov
xchg
push
sbb
sub
or
or
add
push
icebp
cmpsb
test
cs
push
mov
inc
sbb
arpl
jle
dec
pop
push
adc
dec
dec
shrl
in
lock
sub
mov
lea
jbe
dec
pop
sbb
push
jnp
pop
add
xor
or
add
xor
xor
jg
adc
xor
inc
or
div
imul
ret
mov
xor
adc
in
out
cmp
jbe
push
jne
jo
mov
mov
push
mov
fdivl
sub
and
sbb
or
inc
or
out
cmp
sbb
movzwl
cmp
jl
pop
nop
sahf
daa
dec
or
dec
sbb
cld
incb
dec
push
add
int3
in
inc
push
rcl
fadds
or
push
adc
jae
xchg
jl
jl
mov
push
dec
jle
sbb
pushl
into
push
adc
adcb
mov
flds
sbb
popa
arpl
in
cmp
adc
sub
aaa
mov
out
imulb
enter
or
adc
clc
pop
test
fimull
fdivrs
movl
xchg
loope
xor
aaa
xchg
lea
mov
pop
sub
add
fwait
gs
push
mov
mov
xchg
test
push
inc
sub
sub
mov
pushl
dec
mov
push
push
sbb
les
fs
imul
into
les
pop
iret
mov
icebp
inc
fsubrl
mov
sub
insl
fistpl
pop
add
push
push
or
sbb
xor
clc
sbb
push
push
mov
add
sub
add
xor
shlb
mov
pop
sbb
push
adc
hlt
and
inc
add
cmp
jl
add
js
and
sub
push
lcall
cltd
lea
movsl
clc
or
js
insl
add
mov
push
fadds
pusha
dec
sub
sub
push
xchg
mov
test
jnp
inc
or
or
push
jae
ss
pop
lea
daa
push
sahf
js
pop
push
lea
lods
adc
push
int
sar
sahf
lods
sbb
sbb
add
jbe
jmp
imulb
mov
adc
push
inc
or
clc
mov
daa
ja
sub
sbb
sti
mov
adc
cli
jl
mov
sbb
inc
mov
into
movsb
mov
daa
mov
andb
sub
jo
test
mov
mov
inc
push
push
sar
and
movb
pop
jmp
push
push
leave
push
dec
pop
push
and
inc
insl
std
sub
xchg
mov
sbb
jne
rcll
lds
jp
push
ret
dec
icebp
add
shlb
and
mov
jmp
push
mov
mov
lret
lds
push
inc
data16
push
out
push
mov
mov
jne
sbb
pop
cmp
pop
call
das
inc
dec
adc
push
movsl
add
insl
xor
lock
xor
mov
cmp
outsb
adc
lds
rolb
cmp
xchg
lcall
dec
mov
xor
fimull
mov
fstl
add
inc
sbb
push
sbb
adc
cmpw
jne
fwait
or
sbb
sbb
sub
xchg
jmp
lods
push
in
jbe
andl
and
fmuls
ret
push
pushf
outsl
pop
out
adc
sub
inc
adc
movsb
sub
jne
cmp
pop
lcall
lods
mov
mov
enter
stos
mov
sub
popa
and
dec
mov
sbb
mov
or
push
mov
mov
jp
lcall
outsl
jne
sbb
jno
dec
addr16
stos
mov
add
add
shrb
sbb
or
aad
add
xor
hlt
mov
mov
test
mov
les
or
lods
xor
int3
xor
pop
mov
addl
push
cwtl
pushf
lret
push
pop
inc
enter
fnstsw
xchg
dec
add
dec
adc
ret
addr16
pop
lock
push
loope
jbe
xchg
fmuls
push
jnp
jne
mov
cmp
push
push
sbb
push
or
call
mov
add
sbb
push
shll
mov
add
push
xor
and
pop
sbbb
icebp
push
add
dec
xchg
data16
ljmp
in
in
insb
cmp
add
jne
popa
lods
push
shrb
cmc
fs
mov
mov
jb
or
mov
scas
add
and
add
aad
cmp
and
js
loopne
loopne
sahf
and
inc
push
cli
push
push
fs
sbb
clc
mov
xor
lcall
add
sub
or
or
push
mov
pop
hlt
mov
sub
dec
and
jg
or
or
jne
shlb
mov
add
add
xor
pop
mov
fs
in
cmpsl
jl
mov
nop
scas
bound
mov
outsb
cmpl
ja
inc
imul
arpl
inc
int
daa
jns
ret
lock
pushf
test
dec
hlt
mov
mov
mov
std
and
subl
wrmsr
cltd
int
mov
mov
mov
loope
add
jecxz
enter
cmp
gs
pop
andb
add
adc
dec
lods
xchg
lea
dec
repnz
mov
sub
add
arpl
mov
pushf
cs
je
fnstsw
add
pop
idiv
add
mov
inc
lock
inc
add
pop
cmp
and
sub
ss
or
mov
add
sub
pop
dec
repnz
jbe
cwtl
cwtl
decb
fs
insb
rorb
inc
adc
ljmp
lods
cmp
ud2
push
mov
adc
xchg
lods
bound
cltd
inc
outsl
pop
xchg
gs
jo
inc
imul
add
jbe
or
xor
inc
insb
gs
test
dec
inc
js
fistps
mov
jmp
push
movsb
sbb
mov
push
push
inc
ds
mov
sbb
inc
in
pop
imul
lea
push
popa
pop
push
stos
data16
push
and
sbb
and
aaa
aaa
sub
push
xor
push
jmp
xor
sub
and
pop
inc
adc
pop
sbb
inc
mov
add
or
lret
aaa
cmp
push
sub
mov
lods
jl
pop
adc
ljmp
test
push
leave
xchg
cs
aad
aam
pop
xor
and
fcomp
mov
sti
fdivr
adc
les
lds
fldt
push
and
test
or
mov
sub
insb
and
aam
inc
outsb
rorl
fdivr
fcomps
or
or
sub
sbb
mov
inc
xchg
xor
push
rorb
lret
xchg
pavgw
addr16
enter
adc
mov
adc
mov
dec
inc
aam
pop
adc
sub
loopne
loopne
adc
pusha
and
in
bound
addl
push
call
addr16
call
push
call
and
shlb
or
icebp
out
insl
add
int3
add
pushf
sahf
add
xchg
xchg
mov
mov
outsl
ljmp
sub
std
add
add
jae
sub
mov
or
loope
pusha
in
imul
jae
inc
fsubrs
lock
mov
mov
or
pop
cwtl
int3
lock
sbb
sub
mov
dec
xor
gs
test
adc
jl
test
into
out
push
adcb
xchg
lods
mov
or
sub
roll
cmp
into
push
jg
sub
push
sti
in
or
mov
jo
fistl
xor
xlat
ficompl
nop
cmp
lcall
and
mov
jne
cmp
mov
cmp
mov
cmp
je
cmp
repnz
mov
add
jbe
aam
dec
movsb
insb
push
movsl
pop
mov
adc
cs
out
jmp
sub
jbe
jmp
jb
pop
xchg
adcb
jg
sub
pop
xor
imul
fisttpl
enter
pop
ret
and
mov
fimull
ficompl
arpl
add
or
stc
sub
jne
pause
data16
and
mov
and
add
add
out
imul
cmpsb
imul
imul
dec
shrl
and
inc
dec
imulb
push
ja
push
or
je
push
inc
add
adc
fnstenvs
hlt
push
ljmp
xor
call
xor
xlat
sbb
add
and
ss
shll
js
xor
shll
xchg
lcall
int3
aam
mov
add
and
nop
push
movsb
add
rclb
xchg
sbb
inc
add
data16
das
loopne
mov
xchg
push
jb
push
rclb
and
in
xchg
and
adc
mov
hlt
call
inc
push
xor
cs
insb
es
dec
add
or
mov
or
sbb
or
pop
mov
dec
gs
gs
repnz
lcall
je
outsl
fs
gs
imul
outsl
idivb
popa
je
push
push
and
ljmp
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
jbe
ljmp
arpl
xor
outsl
jb
cmovb
inc
outsl
outsl
je
gs
cmp
cmpsl
lret
out
sti
fidivs
dec
and
js
add
dec
dec
inc
xchg
pop
mov
cs
fs
je
jg
ja
gs
outsb
insb
imul
push
inc
push
inc
pop
push
outsb
arpl
mov
pop
push
push
mov
push
inc
dec
push
pop
fildl
mov
or
ret
push
pop
pusha
jle
add
pop
add
cmp
rclb
fcmovne
outsl
fldl
jmp
push
fdivl
arpl
fs
je
sub
out
xchg
cld
out
or
mov
mov
cmp
inc
or
add
add
mov
adc
dec
add
mov
add
dec
nop
test
nop
je
lea
fcomps
mov
add
push
mov
cmpsb
sbb
jg
mov
fcoml
and
mov
movzwl
mov
add
mov
or
mov
jmp
sbb
popa
xchg
or
cmp
rcrl
mov
pop
lea
push
push
adc
xorb
sub
fs
dec
pop
in
bound
xchg
lods
divl
adc
jns
push
sarb
cld
call
push
pop
ds
and
out
sbb
pop
lea
nop
push
or
mov
loope
call
pop
push
jmp
pop
pop
sbb
dec
clc
mov
fucomp
or
push
xor
pop
mov
inc
sbb
fcmovnbe
push
pop
and
add
add
sbb
mov
add
rorb
add
dec
push
add
pop
add
dec
pop
nop
add
xor
mov
filds
pop
mov
int
mov
imul
jb
insl
ljmp
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
mov
jp
add
clc
daa
fdivrl
out
movb
jmp
fmul
dec
jmp
cmpsl
call
pop
enter
movsb
and
jno
sti
pop
leave
mov
push
imul
cmp
dec
add
loope
dec
adc
mov
and
add
in
adc
jo
mov
lods
imul
insb
leave
fiadds
pop
xor
mov
popf
int
or
pop
push
test
xchg
fistpl
cwtl
add
fs
rorl
jnp
jo
les
cmp
shrb
xor
pushl
daa
insb
mov
sub
fadd
cld
or
sbb
daa
sbb
aas
cld
test
xor
add
push
pop
mov
fwait
seta
inc
xchg
daa
xor
mov
std
pop
decb
sub
xchg
mov
or
cli
mov
add
cmp
mov
add
sub
lcall
int
stos
add
and
and
jmp
or
call
add
ljmp
mov
dec
inc
lcall
lods
addr16
xchg
in
jle
jg
xchg
pusha
call
ljmp
and
mov
testb
pop
pushl
movzbl
push
je
mov
test
cs
mov
push
mov
push
mov
incl
pop
or
imul
push
sub
jne
jmp
adc
push
cmp
adc
cmp
or
adc
decl
loope
cld
insl
pop
insb
add
xor
pop
cmp
mov
mov
or
add
fs
in
mov
in
insb
in
jne
jg
sub
jae
add
mov
jl
icebp
adc
or
call
hlt
aas
push
lds
dec
rcrb
lcall
pop
push
inc
rol
les
add
lcall
mov
insl
leave
in
imul
int3
inc
add
outsb
or
cld
dec
into
arpl
outsl
cmp
rcll
shlb
jge
mov
mov
pushl
jo
arpl
je
xor
enter
movsb
movsl
cmpsb
cmpsl
shll
stos
lods
dec
out
out
or
mov
or
xchg
fistpll
jp
pushl
gs
jno
jne
push
lock
popa
lea
push
add
aas
sub
cld
mov
lock
test
push
lcall
push
jg
jnp
add
cmpsl
cmp
xor
sbb
mov
adc
jmp
pop
or
mov
dec
cmp
out
adc
add
lcall
filds
inc
push
dec
mov
add
pop
pop
scas
in
stos
loopne
loopne
sbb
ret
push
push
push
add
movl
mov
pusha
or
cs
clc
inc
stc
dec
cli
sti
push
fcmovb
xchg
call
adc
pop
decl
xor
or
or
jbe
decl
or
inc
mov
push
and
outsb
fisttpl
push
nop
rorb
pop
push
mov
or
call
lret
int3
nop
outsl
push
pop
insb
mov
lcall
rcl
jne
in
inc
addr16
call
sbb
lock
repnz
sbb
cmc
div
lahf
rorl
jg
lcall
cs
fwait
pushf
inc
or
popa
xor
inc
ret
jmp
mov
imul
test
stos
outsl
pop
data16
jg
loope
sub
pop
outsb
insl
scas
push
mov
mov
mov
xor
dec
mov
xchg
mov
imul
imul
jbe
mov
fisttps
pop
ret
ret
shll
vshufps
enter
decl
jmp
cmp
xlat
lret
fnstsw
xor
jne
pop
cs
loop
inc
jmp
in
in
out
out
jne
call
gs
xchg
in
aam
pop
dec
mov
push
enter
and
cmpsb
lret
int3
inc
or
into
dec
iret
minps
pushl
ret
rcl
aad
dec
dec
xlat
stos
fcoms
jne
aaa
push
and
aas
cmp
push
std
aaa
pop
lea
xchg
cli
idivb
push
mov
out
fsubs
add
jo
loope
cs
insl
add
mov
jns
cmpsl
jns
addr16
jp
or
jl
jle
outsb
jae
addl
add
stos
dec
outsb
add
dec
push
aas
lea
mov
mov
xor
cs
fimuls
mov
jbe
push
out
add
and
add
jo
cmp
lret
pusha
fsubr
or
cmp
push
aam
in
mov
xchg
cmp
adc
pusha
sbb
test
inc
inc
xor
sbb
pushl
xorl
imul
es
call
loope
sbb
mov
popa
jmp
push
imul
outsl
je
xor
push
pop
inc
insb
fcomp
outsl
sbb
inc
fcmovu
pop
fsubl
scas
pop
outsb
fwait
push
inc
push
fistpll
shrb
sub
inc
std
incl
jns
leave
idiv
mov
jne
mov
push
dec
push
mov
add
jns
movb
mov
inc
std
add
push
or
jno
hlt
inc
fucomi
outsb
lcall
ljmp
adc
push
pop
pop
stos
imul
and
leave
pushl
xor
shlb
dec
fcmovnu
int
scas
ds
add
add
or
push
jnp
mov
clc
decl
sub
insl
or
imul
add
pop
or
or
or
sbb
frstor
push
cli
mov
in
sbb
popf
mov
and
or
mov
add
lea
push
sub
adc
push
lcall
adcl
mov
add
cmp
cmovbe
shrl
add
dec
shl
inc
cmp
mov
jecxz
mov
fidivrs
adc
out
sbb
jo
mov
hlt
out
push
pushf
cmc
call
aaa
push
cs
push
jo
xchg
sti
outsl
jmp
imul
aam
mov
sbb
js
gs
push
push
addr16
push
fldt
leave
inc
or
in
call
jle
jne
add
pop
insb
int
ja
adc
insl
or
xorl
lcall
or
lods
push
dec
cmc
pop
jmp
mov
pop
sub
or
fadds
fwait
mov
pushl
pop
fwait
data16
in
inc
paddq
or
popf
or
movsl
mov
sbb
inc
psllw
outsb
popa
divl
outsb
and
push
testl
imul
aad
das
jmp
xor
xor
pop
and
out
popa
call
imul
lret
idiv
lea
negl
xor
cltd
add
pop
cwtl
dec
pop
clc
decl
xchg
xchg
xchg
cmp
int
jmp
cmp
jne
shll
sbb
insl
outsl
incl
mov
mov
inc
enter
xchg
cmp
push
jmp
inc
sbb
loopne
cmpsb
ja
dec
clc
cmpb
lret
push
sbb
call
or
outsl
std
push
lea
cltd
cltd
fildl
pop
xchg
lods
mov
xor
add
mov
test
adc
mov
enter
mov
push
cmp
add
push
push
arpl
insl
nop
cmpsb
outsb
or
push
dec
rorb
push
fdivs
in
mov
dec
dec
inc
dec
test
or
mov
out
loopne
rolb
jbe
call
jnp
jns
cmp
ss
xchg
jmp
push
sub
push
and
push
addb
call
clc
jmp
outsl
lods
xor
enter
sub
mov
fs
idivb
adc
fwait
xchg
lcall
insl
adc
clc
stc
jo
cli
je
mov
sar
pop
repnz
outsl
std
outsb
jmp
push
jmp
push
pop
loopne
jmp
in
sub
dec
sbb
outsb
mov
push
and
dec
push
in
hlt
inc
mov
pop
cmc
mov
insb
imul
out
dec
inc
or
and
aaa
cs
int
call
pop
jns
mov
ljmp
jbe
xchg
cmp
ss
xchg
fst
shrl
in
pop
mov
pushl
mov
ja
aam
pop
pop
cmp
je
nopl
push
sub
sbb
sbbl
clc
in
jle
sub
mov
dec
pop
xor
sbb
je
dec
push
dec
sub
dec
stc
push
cli
sar
lock
jle
int3
mov
pop
cmp
push
fwait
in
popf
push
xchg
cmp
push
stos
pop
outsl
hlt
jg
mov
mov
mov
add
inc
xor
pushl
ja
mov
push
je
push
and
mov
push
lcall
add
cli
call
movsb
inc
lea
vcvttss2si
mov
and
sbb
fistpll
add
jns
fs
dec
ljmp
mov
aad
fldln2
ret
pop
or
test
xchg
mov
outsb
nop
or
cmp
cmpb
xorl
and
decl
fcomp
addr16
pop
adc
sbb
pop
js
scas
mov
call
and
dec
loop
popa
dec
inc
xlat
ljmp
outsl
outsl
insb
daa
dec
imul
popa
outsl
test
sub
fwait
push
pop
xchg
bound
cmp
sbb
mov
pop
dec
pop
fldt
jl
mov
inc
xlat
fsubrs
aam
pop
mov
mov
or
outsb
arpl
cmc
inc
mov
ret
lds
pusha
mov
in
fimull
adc
xchg
loop
pop
sbb
clc
lock
stos
push
popa
or
jl
lcall
in
daa
jae
clc
testl
or
jnp
xchg
sbb
push
enter
mov
push
cwtl
pop
je
pop
das
outsb
fbstp
lods
lods
scas
mov
mov
adc
das
icebp
out
addl
pushl
mov
add
xor
mov
lea
jg
push
insl
pavgb
test
cmp
push
or
cld
fbld
addl
repnz
or
or
clc
call
clc
outsb
xchg
xor
or
das
icebp
lcall
lods
push
idiv
stc
push
dec
mov
xchg
sub
jb
or
shrl
sarl
cltd
ss
mov
lods
sti
popf
inc
cltd
pop
push
sahf
lahf
imul
mov
je
fsubrs
icebp
fisttps
mov
jne
out
push
stc
dec
pop
and
sbb
xchg
add
mov
and
jecxz
jg
std
add
in
ss
mov
add
scas
imul
add
pop
clc
push
lds
ret
test
cltd
inc
xchg
xchg
fdivs
mov
loope
or
call
iret
xchg
in
cmp
in
or
aaa
repz
pop
call
mov
xchg
dec
pop
sarb
icebp
dec
mov
int
ret
repnz
pop
push
hlt
add
iret
pop
cli
outsl
std
int3
dec
test
out
jns
ds
add
adc
cld
mov
or
adc
inc
je
push
push
sbb
xchg
or
adc
cmc
decl
in
lahf
daa
cmp
sbb
js
insl
add
incl
jno
push
adc
jb
and
dec
mov
lea
xchg
pop
idivb
xchg
sti
call
test
and
insb
inc
and
aaa
subl
jo
call
jns
mov
ret
pusha
ljmp
insb
dec
push
popa
cs
mov
adc
pop
push
shl
adc
push
jge
outsl
hlt
cli
mov
adc
js
mov
fs
and
push
push
pop
pop
icebp
gs
mov
inc
mov
aas
jae
or
jae
pop
or
xor
mov
gs
sbb
roll
adc
imul
pop
and
mov
cmp
cld
out
or
into
xor
daa
imul
int
aad
fisttpl
sbb
fsts
dec
shll
xor
out
in
stos
cmpsb
inc
jae
dec
push
roll
inc
jg
aaa
out
cmpsb
fnstenv
enter
adc
lcall
sub
push
xor
pop
leave
mov
lret
push
test
enter
fdivr
test
and
pop
pop
mov
pop
cld
outsl
mov
inc
out
mov
pop
in
leave
sbb
dec
push
lcall
inc
das
leave
out
std
fdivr
or
or
sub
xor
mov
jmp
cmp
xor
fs
ja
adc
loop
push
lds
jnp
inc
jmp
dec
sti
call
dec
cwtl
xor
jno
negb
adc
jge
mov
stc
sahf
cmp
jne
das
push
and
pushf
ljmp
mov
in
add
shlb
sub
or
lcall
inc
lret
es
cmp
popa
aad
xor
stc
and
stc
jp
add
sbb
pop
fistpl
std
js
enter
das
paddw
pushf
leave
fsubrp
pop
loopne
data16
pop
jae
mov
movl
pop
sbb
xor
xchg
cld
push
jnp
mov
cmp
xor
inc
addl
sub
cli
xor
inc
adc
outsb
lahf
jmp
and
mov
or
jo
dec
dec
and
ljmp
std
cmpxchg
inc
or
or
sbb
pop
or
rcll
jne
push
mov
lods
lods
mov
pop
inc
clc
pop
cld
js
jg
out
mov
jbe
outsb
add
ljmp
fldl
and
xor
adc
pushf
js
pop
popf
shlb
call
mov
mov
ljmp
mov
cmpb
xchg
mov
lcall
cld
and
inc
loopne
dec
xor
fs
pop
mov
or
mov
ljmp
lock
dec
and
pop
mov
stos
and
dec
jae
pop
or
aam
fstps
push
mov
add
sbb
mov
mov
sub
imul
fstpl
xchg
jae
nop
das
std
pop
cld
pop
xchg
aas
dec
cs
xor
popa
xchg
je
cmp
jb
sti
addr16
cwtl
je
cmp
jo
mov
lahf
mov
adc
inc
movsb
mov
push
cld
jl
cmc
mov
add
mov
push
int3
shlb
jmp
pushf
pop
jle
mov
sub
mov
outsb
add
mov
mov
mov
cmp
sbb
jp
xchg
and
data16
jp
test
cld
mov
or
cmp
dec
cmp
addb
sbb
pop
andl
test
mov
dec
mov
loopne
das
jge
or
adc
rclb
pop
pop
inc
data16
jne
cld
mov
out
push
mov
pop
shlb
outsl
arpl
fstpt
jae
fs
pusha
sbb
test
push
dec
jo
and
inc
lock
push
fstps
pop
mov
xchg
push
insl
mov
fs
gs
fsts
xchg
add
push
xlat
and
inc
push
lcall
sbb
pop
scas
icebp
mov
push
rolb
rcrb
pop
cltd
arpl
lcall
icebp
push
and
xchg
call
add
add
lahf
lods
dec
icebp
push
rol
lcall
sbb
mov
add
xor
mov
inc
std
xlat
cmp
dec
mov
movsb
inc
je
jg
das
fs
orl
inc
in
out
or
cmp
jmp
inc
daa
pop
adc
and
pop
xor
imul
add
call
in
push
fcomip
inc
incl
cltd
cwtl
xchg
xor
cmpsb
xchg
cmpsl
fstpl
jmp
int3
sbb
inc
pop
mov
aas
popa
ss
std
mov
aaa
arpl
aad
divb
xchg
sahf
fidivrl
dec
repnz
inc
jmp
popf
insl
mov
jb
ret
cwtl
mov
sub
mov
jle
and
shl
les
cwtl
sub
xchg
mov
mov
movsb
push
jns
test
inc
adc
cltd
sarb
inc
or
mov
mov
jl
push
jne
inc
mov
sahf
jge
mov
jmp
lods
cmpsl
insl
mov
addr16
leave
gs
push
cmp
sti
pop
rcrb
cwtl
or
add
mov
xchg
fs
fldt
jecxz
mov
dec
nop
xor
lcall
je
xchg
inc
cmp
sbb
dec
shlb
sbb
incl
mov
xchg
and
daa
or
push
mov
push
and
push
jmp
lret
js
in
stos
call
push
mov
cmpsb
push
lock
pop
xchg
xor
jg
cli
mov
nop
icebp
mov
jmp
lcall
mov
xchg
pop
in
push
sbb
fstpt
cmp
dec
leave
cmp
pop
and
loopne
mov
incl
repnz
ds
inc
cli
xchg
jl
or
jmp
push
sbb
mov
sub
icebp
sbb
and
xchg
mov
mov
push
loopne
dec
jg
call
movsb
mov
add
jno
mulb
mov
and
cwtl
xchg
or
jg
inc
xlat
mov
icebp
inc
rcr
or
subl
test
std
jg
decl
cmp
shl
sbb
imulb
lahf
fst
dec
jb
mov
stc
jne
dec
ss
pushf
stos
and
sbbb
jg
in
and
in
repz
repz
xchg
pushf
cltd
hlt
movsb
mulb
dec
pushl
pop
sub
les
lds
ror
mov
ud0
or
lcall
mov
repz
mov
add
mov
inc
sub
pushl
mov
pop
xchg
pop
enter
iret
jo
dec
adc
and
and
xor
pop
call
pop
into
jo
or
decl
mov
sarb
mov
fnstcw
jp
push
jle
call
stos
mov
jo
push
dec
jbe
lds
decl
push
push
push
and
rolb
and
and
test
incb
push
lods
lcall
pusha
adc
hlt
mov
aam
sub
std
out
outsl
lea
xor
xor
cmp
imul
aaa
cmp
xchg
dec
xchg
imul
adc
outsb
jnp,pt
or
inc
pop
cld
inc
push
gs
insb
shrl
jb
gs
aaa
push
dec
imul
nop
push
popa
scas
lea
cld
push
shrb
je
imull
adc
js
rol
xor
add
jmp
jb
mov
fwait
mull
stc
cmp
test
xchg
in
fucomip
xor
shrb
adc
scas
cmp
mov
adc
leave
inc
int
mov
call
dec
ret
sbb
sbb
sbb
addr16
push
sbb
lds
push
out
jo
pop
sub
mov
pushf
and
and
sbb
daa
dec
inc
and
pop
cmp
sub
in
loop
inc
mov
in
inc
xor
inc
out
push
lock
mov
lcall
decb
je
jnp
adc
cld
je
or
incb
push
ljmp
out
in
decl
insb
add
jmpw
mov
in
loope
sti
call
xor
xor
or
xchg
or
or
or
or
pop
mov
push
popa
bswap
je
call
adc
leave
leave
xchg
push
pop
popf
popf
sub
push
jl
pop
pop
inc
pop
daa
pushf
pushf
popf
mov
pop
jl
pop
jbe
sbb
in
xchg
mov
or
push
cmp
lods
push
test
add
push
lods
dec
test
outsl
xchg
gs
mov
pop
mov
pushl
lea
or
insb
insb
js
nop
xchg
out
mov
xchg
test
enter
aam
jg
call
sbb
pop
adc
sub
outsb
or
je
fdiv
or
movsl
add
jne
cltd
cmp
frstor
mov
mov
fs
add
cli
xchg
sbb
inc
pop
xorb
sbbb
or
xor
movsl
push
or
andb
movsb
push
hlt
mov
adc
scas
pop
xlat
shr
sub
sub
bound
push
int3
mov
rcrl
adc
leave
push
add
fs
add
inc
int
jecxz
movsl
je
leave
shlb
pusha
imul
outsb
aaa
clc
pop
call
aaa
xorl
jo
lock
dec
sbbb
das
lock
mov
pop
push
inc
inc
inc
push
in
adc
js
inc
in
hlt
or
add
dec
dec
dec
inc
jmp
insl
dec
enter
decl
addr16
dec
mov
push
loopne
in
inc
insb
adc
mov
lods
dec
popa
jne
pop
mov
mov
mov
lret
mov
dec
jno
dec
sbb
cmpsl
ficomps
lods
mov
ss
ljmp
adc
cs
fsts
push
pop
pop
mov
adc
hlt
adc
insb
inc
scas
ljmp
call
pop
ss
or
cmpl
and
cmp
and
add
mov
jne
mov
cli
push
xchg
popa
in
pop
push
inc
jg
or
mov
jno
inc
jmp
dec
loop
dec
cmp
test
mov
sub
dec
push
cmp
sbb
sbb
shl
adcb
pop
pusha
and
mov
adc
ljmp
sarl
cltd
and
adc
jno
push
and
push
in
hlt
daa
inc
das
push
push
mov
dec
incl
shl
inc
ds
ud1
xor
jle
incl
and
and
outsb
lods
loope
pop
adc
xor
xchg
cs
jmp
cltd
aam
xor
dec
outsb
adc
and
push
inc
or
fisttps
je
mov
les
push
inc
imul
or
call
clc
addl
popf
cwtl
ret
scas
pop
clc
lcall
les
lods
or
or
enter
sbb
aaa
fdivr
decl
incl
testl
lds
jne
adc
into
enter
incl
jne
or
add
fdivr
js
movsb
push
test
or
or
loopne
push
decl
sbb
sub
loope
incl
cmp
je
cmp
fistpll
idiv
jge
jb
dec
dec
cmpw
jne
pop
adc
jg
pop
jne
test
mov
sbb
call
xchg
push
fnstcw
push
pop
or
xchg
mov
inc
cmp
rcr
fidivrs
stos
pop
or
mov
cmp
decl
out
xor
lahf
adc
mov
je
sub
pop
xor
xchg
ret
and
insl
mov
and
repz
xchg
jne
push
fcompl
sub
pop
or
gs
pop
test
fs
dec
movsl
cmp
mov
iret
nop
rorl
mov
lds
in
push
adc
mov
orl
mov
pop
jg
incb
pushf
shlb
int3
les
pop
outsb
cmc
popa
push
insl
mov
pop
lods
mov
stos
incl
arpl
xchg
cmc
fcomps
adcl
inc
pop
push
lea
inc
mov
sbb
xor
lcall
negb
xor
cltd
sbb
xor
jmp
pop
clc
cli
dec
je
jo
flds
and
jbe
push
gs
cmp
jae
inc
js
add
push
mov
or
mov
ljmp
incl
bound
sbb
mov
jb
jmp
loopne
jbe
add
jl
jg
adc
mov
popf
xchg
push
xchg
push
fwait
pop
inc
pop
push
pop
jno
push
clc
aas
sbb
add
xor
pop
stos
dec
lods
sub
adc
aam
adc
aaa
adc
push
je
je
insl
mov
aam
xlat
cmp
add
add
sub
jl
loopne
cmpsl
mov
jl
pop
rorb
fistps
cmpsl
rcr
call
adc
mov
das
mov
mov
jmp
leave
push
or
adc
pop
mov
lret
inc
mov
in
fadds
pop
fisubs
jo
push
sbb
call
lds
scas
iret
dec
inc
mov
dec
mov
jg
pushl
jmp
and
push
cmc
inc
div
idiv
stc
cli
mov
cld
xchg
mov
decl
out
test
fsubrs
jle
imul
inc
cmpsb
push
xchg
outsl
outsb
xchg
sub
sub
cld
fildll
push
xchg
xchg
push
add
jb
ficompl
ljmp
sub
pop
pop
and
aas
dec
sub
sti
xor
stos
or
add
dec
rcl
fcomp
in
and
call
call
and
pop
repnz
xlat
mov
lret
add
mov
or
jnp
out
adc
mov
fadd
inc
or
dec
loopne
cmp
inc
bound
sub
jecxz
cmp
sub
push
adc
pusha
mov
out
mov
in
push
lods
int3
push
into
ss
popa
les
pop
push
adc
mov
mov
imulb
inc
addr16
dec
xor
cltd
mov
idiv
adc
jo
call
or
ljmp
and
push
mov
ljmp
mov
sub
jge
sub
xchg
and
insl
mov
sub
jmp
test
pop
pop
jo
adc
xor
loope
lret
push
in
cmpl
incl
xor
or
push
cmp
js
cmp
xchg
in
adc
bound
inc
mov
mov
sbb
leave
jb
xchg
jo
sbb
loopne
stos
lcall
xor
loop
jecxz
in
scas
inc
or
ja
push
and
cs
mov
xchg
in
push
jl
mov
sbb
call
push
sub
pop
sub
mov
sub
inc
push
inc
mov
movsl
mov
xor
mov
dec
dec
or
sub
xor
push
cwtl
outsb
cwtl
xor
cltd
lcall
jo
xor
adc
sbb
lock
call
jne
pop
jb
add
xor
and
std
add
push
repz
ss
mov
je
ret
pop
aaa
inc
lret
xor
rcrl
shlb
sbb
xchg
cmc
stos
cmp
jge
inc
inc
jle
fwait
pop
gs
mov
inc
lods
mov
cld
fucomip
sarb
faddp
and
nop
xchg
mov
jmp
or
aaa
inc
push
pop
sbb
hlt
jmp
mov
mov
inc
ljmp
xchg
inc
push
mov
sbbb
pop
std
test
jmp
hlt
push
popa
mov
cmpb
or
call
gs
push
lcall
daa
mov
decl
inc
jl
add
jg
mov
fistps
outsl
or
jl
cmp
push
out
push
inc
and
fdivrp
mov
mov
push
fwait
sbb
xchg
jb
and
pop
push
mov
dec
or
cwtl
xor
out
jns
cmpb
mov
outsl
adc
sub
js
outsb
sbb
inc
pop
sbb
xchg
popf
sbb
inc
rolb
iret
jge
mov
and
sbb
push
pop
test
cmp
test
stc
int
pop
test
push
cmp
mov
scas
js
mov
jg
sar
mov
mov
xor
push
bound
ss
adc
call
daa
in
cmp
in
loop
test
cmp
push
lcall
jne
mov
and
and
adc
cmp
decl
xchg
orl
sub
and
in
loope
inc
xchg
add
stos
add
andb
pushl
add
and
mov
jo
sbb
xor
lock
fnstsw
loope
jecxz
pop
in
dec
sar
cld
inc
int3
sub
inc
repz
cmp
jns
mov
pop
mov
jb
inc
sahf
sbbl
test
out
sub
mov
out
mov
dec
mov
call
outsl
call
popf
pop
inc
in
pop
nop
fucomp
out
inc
lock
push
test
and
std
push
jecxz
int3
sub
aam
andps
push
stc
push
push
inc
arpl
movsl
test
or
lcall
cmp
push
call
jbe
xchg
in
in
sub
adc
add
pop
test
call
jle
aaa
push
xchg
les
push
mov
mov
lcall
adc
inc
mov
pop
repnz
stos
push
xchg
xchg
mov
shll
jns
mov
inc
inc
pop
daa
cwtl
nop
ljmp
jle
sub
mov
mov
repz
fbstp
adc
jno
ds
push
pop
in
jno
or
adcb
leave
or
and
repz
in
sub
rclb
scas
ja
lea
in
push
sbb
adc
inc
pop
push
and
decl
pop
mov
loopne
in
xchg
ret
in
hlt
in
mov
cmp
in
add
les
mov
negl
je
dec
push
or
push
jbe
sbb
subb
mov
jl
jecxz
and
mov
sbb
jo
in
add
jbe
outsb
and
dec
inc
add
loopne
pushf
cwtl
iret
sbb
subl
push
rcrl
mov
add
gs
sarb
push
push
xchg
test
in
je
mov
cld
insb
push
mov
mov
or
arpl
inc
add
std
call
aas
inc
dec
push
xor
sarb
jb
rcl
icebp
ljmp
insl
sub
xchg
lods
pop
imul
xorl
in
or
clc
jmp
xor
in
stos
adc
in
in
mov
lcall
cltd
add
ret
data16
lods
xchg
jecxz
cmp
adc
lock
adc
xchg
mov
fdivrs
fdivrp
mov
pop
bound
jge
test
insl
ljmp
jnp
add
mov
push
inc
ljmp
sub
ja
mov
pop
es
fistl
push
cld
or
and
mov
mov
hlt
or
mov
insl
pushf
or
inc
sbb
call
sub
add
jbe
pushl
and
out
ja
mov
lcall
movsl
decb
cmp
shr
cmp
sub
pop
stos
lcall
and
push
pop
xchg
cmc
sbb
call
sysexit
mov
test
xorl
adc
call
sub
out
in
or
aam
sahf
or
test
xchg
in
dec
lock
or
dec
std
cwtl
rsqrtps
push
addr16
outsl
xchg
jmp
bound
dec
clc
pusha
rclb
mov
decl
and
and
pop
pop
adc
adc
mov
and
add
jmp
cmpsb
xor
mov
or
or
fidivl
ljmp
rcr
mov
sbb
pusha
fcoml
dec
mov
lock
jae
lcall
clc
and
sub
xchg
idivb
sbb
clc
outsb
xlat
mov
jb
call
sti
ja
sub
jg
and
jo
lds
in
cmp
sbb
int
xchg
mov
inc
mov
call
clc
and
mov
xchg
or
xor
rclb
push
pusha
popa
pop
in
loop
sahf
hlt
loopne
fldt
cmp
movsb
pop
or
mov
sbb
jne
and
lret
jns
arpl
xchg
push
and
lea
fs
test
outsb
push
enter
in
movsb
inc
push
jne
cmc
lea
inc
incl
pop
ret
jg
sbb
mov
lods
sbb
icebp
mov
jnp
xchg
aam
call
push
inc
add
lea
inc
cli
fbld
cmp
cld
sub
adc
in
mov
xchg
loopne
add
ret
and
out
mov
cld
push
fisubs
cmp
sub
les
inc
mov
sub
inc
mov
sub
sub
lods
lods
mov
cli
into
xchg
or
push
mov
fs
loop
std
icebp
inc
xchg
nop
dec
sbb
xchg
aaa
clc
call
fsin
mov
movsb
or
ljmp
cli
stos
rcl
aaa
lea
test
push
or
movsb
and
mov
mov
and
test
pop
movl
mov
pop
sbb
or
push
jae
in
jg
xchg
cli
push
jae
mov
outsl
dec
push
inc
into
andb
mov
insb
adc
mov
jae
rcrl
lods
insb
add
or
jg
adc
cmp
or
lods
and
jp
cmpsb
push
dec
shrb
inc
sbb
mov
icebp
incl
push
sub
pushl
adc
sbb
data16
and
mov
dec
pop
sbb
and
mov
in
xor
inc
into
sub
and
movsl
out
adc
sub
call
cli
pushl
vorps
xchg
adc
idivl
cmp
and
push
adc
adc
xor
jg
sbb
and
and
pop
inc
inc
xor
or
cltd
push
mov
xchg
push
xchg
idivb
into
push
mov
dec
popa
and
insl
imul
or
dec
push
incl
pop
aaa
jmp
jecxz
or
cli
das
jle
push
push
and
test
popa
int3
addl
clc
incl
adc
cmp
dec
and
je
inc
fldt
xchg
inc
cmp
je
sahf
adc
in
ljmp
lock
or
divl
adc
cmp
ja
push
fildl
hlt
cld
incl
in
in
xor
mov
and
mov
cmp
arpl
out
cmp
jb
das
mov
ljmp
addl
decl
test
mov
jmp
mov
or
mov
jmp
insl
enter
push
pushf
lods
sub
adc
or
push
adc
mov
add
and
neg
cli
dec
or
enter
aaa
inc
cmp
jae
mov
mov
decl
sti
lods
andb
adc
push
fmul
sub
inc
jb
xor
mov
cmc
adc
loopne
aaa
mov
ljmp
pop
int
inc
add
rorl
adc
test
sbb
call
xchg
adc
add
or
sar
jg
out
push
xchg
xor
test
leave
add
push
sbb
int
les
mov
pop
addl
add
lods
addb
lock
fwait
adc
out
cli
fcoml
addr16
add
les
decl
adc
sbb
hlt
pop
dec
out
inc
adc
add
mov
dec
cmp
imul
push
fcoml
dec
call
faddl
clc
int
fs
cmp
xor
inc
movsb
xor
and
leave
mov
and
jbe
mov
lcall
ret
push
xor
icebp
adc
shll
hlt
mov
pop
cmp
cltd
addl
fadd
ficoms
and
dec
or
adc
add
or
push
fsubl
add
push
testl
push
mov
pusha
sub
fxch
dec
add
fildll
data16
mov
test
aam
and
mov
jo
popf
push
das
add
roll
inc
subb
int
pop
jbe
xor
xchg
into
cmpsb
add
lahf
lret
or
cmp
jbe
pop
lods
enter
call
je
daa
inc
push
jmp
lock
mov
add
sar
xchg
sbb
pop
pusha
dec
mov
mov
xchg
mov
push
popf
clc
mov
decl
dec
cs
add
pop
mov
push
inc
add
imulb
and
pop
adc
mov
push
mov
movl
loopne
popf
adc
dec
std
sbb
add
xor
ret
pop
and
jge
std
stos
sub
jnp
or
lahf
cli
decl
repnz
std
sub
rolb
xchg
test
outsb
adc
inc
imul
fdivrs
clc
fbld
sbb
push
cwtl
xchg
insb
jae
adc
mov
call
fsubs
and
push
es
mov
jne
inc
dec
clc
inc
fs
pop
add
sahf
lea
and
pop
repz
inc
cmp
in
add
jl
pop
add
fisubrl
fcoml
add
mov
jecxz
loope
add
inc
or
and
popf
push
outsl
mov
loopne
adc
mov
xchg
or
or
loopne
or
stos
mov
movb
stc
fbstp
cmp
inc
lock
or
je
mov
push
and
or
push
repz
je
bound
mov
mov
adc
adc
sarb
iret
adc
jg
sub
mov
pop
mov
xor
aaa
clc
mov
sbb
js
inc
adc
sub
in
pop
jae
mov
es
inc
orl
mov
ror
mov
push
jne
fists
inc
dec
jmp
lods
push
add
int3
push
cmpsl
nop
pop
cld
outsl
icebp
jp
xor
push
xor
xor
xor
hlt
push
jne
dec
sarl
inc
mov
jmp
notb
and
ljmp
out
adc
jmp
push
insl
dec
mov
int3
xchg
loopne
pushl
xor
bound
add
lds
jmp
mov
mov
pusha
aas
mov
adc
xchg
mov
incb
outsl
std
mov
xchg
mov
pop
add
xchg
pop
std
lcall
and
add
lods
push
imul
cmpb
push
inc
imul
cs
push
mov
jns
add
call
mov
mov
pop
dec
sbb
jo
movsb
cmpsl
dec
xchg
jg
pop
lock
clc
xchg
clc
jbe
adc
into
cli
lcall
sbb
mov
mov
sub
call
push
stos
lock
add
fcompl
sbb
and
mov
imul
jg
mov
das
cmp
inc
dec
cmp
in
sti
push
test
jg
enter
mov
std
lret
jl
mov
cmp
movsb
in
loopne
jno
fistl
inc
pusha
mov
sbbl
sti
lea
jno
dec
adc
pop
xchg
and
hlt
in
nop
or
in
fwait
and
add
icebp
mov
add
cwtl
dec
aam
cmp
sub
mov
pusha
outsb
lea
std
push
rcll
idiv
push
inc
out
je
incb
mov
cmp
and
clc
je
mov
sbb
add
jbe
sarb
jl
pop
dec
pop
xlat
sar
mov
repnz
in
fmuls
lret
mov
incb
sbb
sub
dec
xlat
in
sub
cld
mov
push
cld
xor
adc
add
lret
mov
cwtl
jmp
decl
inc
xor
jb
push
dec
mov
ja
xor
sbb
pop
ljmp
and
jo
addb
negl
dec
inc
xchg
mov
add
jnp
ja
mov
incl
cmovae
pop
mov
lods
add
je
xor
pushl
add
leave
sub
ja
jne
je
push
repnz
cmp
leave
rcll
mov
es
xchg
or
xor
fs
leave
sbb
lock
adc
sub
inc
mov
add
push
push
dec
inc
dec
in
or
push
mov
jg
dec
std
push
andb
jo
and
out
jg
pushl
xlat
add
mov
cld
stc
leave
mov
aad
lret
xor
xor
lcall
xor
fisubl
mov
pop
xor
jge
pop
or
repz
jnp
sbb
mov
aaa
int
and
ficoms
insb
les
and
add
ds
adc
test
jnp
outsl
addr16
jp
sbb
fsubrp
or
das
hlt
fists
add
test
jne
insl
outsl
and
inc
dec
inc
pop
rclb
test
xor
jge
add
testb
push
inc
in
insb
fistpl
out
push
push
jmp
mov
inc
mov
imul
arpl
addr16
mov
add
xor
jne
lea
cli
pushw
sub
dec
sbb
push
sbb
push
add
fsubs
repz
push
push
in
adc
jg
jnp
jecxz
jg
adc
push
outsl
mov
sbb
mov
aas
dec
sti
ljmp
icebp
jg
and
adc
mov
gs
and
push
outsb
insl
adc
fucomp
or
imul
push
cld
dec
jg
imul
decl
adc
xchg
mov
jae
jg
incl
fs
lea
rcr
adc
add
popa
push
outsl
sbb
loop
sahf
jmp
push
sub
cmp
sbb
sahf
cmp
decb
aas
ja
gs
dec
add
jo
outsb
clc
adc
inc
decl
jo
push
arpl
xor
mov
mov
add
inc
push
dec
xchg
or
jns
inc
jb
pushl
xchg
nop
jb
or
or
popl
inc
enter
insl
inc
clc
push
inc
inc
mov
fidivrl
mov
jbe
jge
je
sbb
rcr
lret
push
frstor
adc
sti
call
arpl
push
mov
or
in
idiv
push
in
leave
sbb
inc
fs
xchg
or
outsw
out
fwait
jg
lock
test
incl
outsb
jo
push
popl
mov
or
jns
popa
bound
and
xchg
daa
mov
clc
fistpll
jb
ja
testl
pop
movd
and
sub
ljmp
std
pop
lret
pop
testb
dec
jb
and
pop
es
mov
pushl
jno
popa
lea
out
adc
or
aas
xor
mov
lds
incl
xor
dec
inc
pop
jno
adc
pop
push
decl
adc
jne
sbb
sti
hlt
lret
popa
and
push
aas
sub
shrb
lods
inc
js
pop
call
mov
dec
push
outsb
sbb
mov
ret
adc
mov
mov
mov
push
fsubrp
jo
jne
jns
add
incl
xchg
push
stos
js
ljmp
lock
adc
inc
mov
pop
or
mov
sbb
push
outsl
hlt
test
pop
pop
or
or
or
sysret
insl
mov
loop
push
push
push
add
push
and
and
xor
aaa
mov
or
or
ja
push
sbb
bts
call
or
xchg
xchg
push
dec
fdivl
ficomps
mov
pop
adc
or
mov
add
dec
or
or
adc
sbb
sub
pop
adc
adc
or
jl
or
xchg
sub
incl
lock
neg
incl
push
adc
adc
pop
inc
shrl
fisttpll
das
add
es
or
add
pushf
add
jae
pushl
jno
out
insl
sti
or
movl
adc
push
add
gs
pop
and
jg
aaa
add
sub
sub
inc
push
lldt
push
jg
outsl
mov
cli
inc
mov
adc
insb
adc
decl
std
fldt
outsl
or
or
add
pop
test
or
sbb
gs
incl
or
popa
or
or
and
pop
and
adc
cmpsl
adc
cmp
mov
rorl
adc
add
and
add
sbb
push
fildl
cvttps2pi
pop
or
cmp
inc
adc
cs
rcrb
std
in
sbb
in
fiaddl
or
int
dec
aaa
and
repnz
aad
fmuls
sub
or
sar
incl
add
push
sub
cli
movups
fadds
add
nop
push
inc
mov
add
mov
pop
shlb
subb
aas
mov
or
push
adc
pop
inc
test
push
adc
cmp
pop
call
xor
fstps
add
add
shll
insb
inc
ja
ss
jno
in
add
nop
xchg
add
aaa
fdivrp
cmpsl
and
push
sub
fsub
out
cmp
jmp
and
in
mov
movsb
je
sti
cmpsb
pop
pop
aam
adcl
cs
mov
pop
or
fisubl
gs
fwait
xchg
mov
push
fisttpl
or
jmp
sbb
sarb
popf
xchg
cmp
and
sub
jne
sub
lea
nop
fildl
nop
add
pop
call
pop
mov
sub
adc
in
mov
mov
adc
or
out
jne
push
jnp
adc
jae
xor
inc
sub
loopne
cmp
xor
test
lds
leave
or
enter
icebp
sbb
ljmp
dec
add
adcl
lea
cmp
mov
add
inc
xchg
dec
jne
jmp
mov
ret
sub
ja
add
jle
loopne
jmp
push
stos
mov
jg
call
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
lods
mov
add
cld
xor
jnp
notb
je
mov
mov
pop
ja
mov
push
pop
call
dec
or
sti
outsl
sbb
dec
repnz
push
adc
cs
mov
push
hlt
or
loope
xor
mov
mov
sbb
cmp
ja
fadd
fisubrl
jne
add
loop
mov
adc
jp
or
scas
xchg
ss
pop
out
jle
mov
push
std
lea
mov
aad
xchg
mov
and
sub
adc
cli
pushl
push
cmp
jne
sub
jmp
fmull
add
rclb
rorb
int
movsb
jecxz
xor
rorb
mov
mov
push
rol
fwait
cmpsb
jmp
adc
and
xor
shll
add
pop
shll
sbb
jbe
jl
mov
inc
push
mov
pop
in
inc
dec
push
add
dec
imul
and
insb
jo
imul
loop
loop
shll
loope
sbb
call
inc
jns
jno
cmp
lcall
jo
lret
fisubl
cmovno
and
lds
dec
inc
sub
inc
imul
push
mov
data16
mov
jb
data16
aam
iret
push
gs
cmp
and
pop
lsl
arpl
pusha
repz
jg
xchg
cmp
add
or
clc
loop
mov
and
ret
adcb
sub
faddl
outsl
push
push
adc
sbb
push
js
fidivrs
jne
cmp
push
daa
mov
adc
cmp
push
imul
adcb
push
gs
push
or
inc
mov
add
imul
jbe
push
js
jge,pn
rcrb
jnp
sbb
add
push
mov
sti
mov
adc
jbe
outsl
outsb
push
fs
test
fidivrs
inc
push
bound
fmuls
ss
xor
std
mov
fs
scas
and
or
stos
jo
push
adcl
jae
cs
addr16
inc
jb
or
lahf
je
aad
mov
inc
mov
fiadds
pop
jae
pop
fcomps
test
wbinvd
pop
add
mov
inc
or
insl
or
dec
push
pop
sbb
imul
inc
mov
add
test
pop
je
or
xchg
sub
mov
mov
inc
arpl
outsb
dec
gs
insb
in
gs
add
out
imull
pop
outsl
mov
fsubs
test
and
pop
jo
or
bound
aaa
cmp
sbb
mov
es
pushf
or
cmp
sub
fisttpll
ja
or
jo
loope
lock
xchg
inc
js
gs
sbbb
or
out
jb
push
push
xchg
and
lock
dec
outsb
gs
fsubrs
add
pop
imul
xchg
pop
and
and
ret
inc
inc
cmpsl
fstps
push
mov
adc
shll
inc
sahf
pop
repnz
add
add
dec
adc
fcoms
test
adc
bound
xchg
push
push
mov
jp
cmp
push
mov
or
cmc
cmp
shlb
aam
pop
mov
les
gs
or
jnp
fsubrs
push
inc
cs
mov
or
push
dec
daa
rorb
je
xor
cmp
mov
add
adc
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
