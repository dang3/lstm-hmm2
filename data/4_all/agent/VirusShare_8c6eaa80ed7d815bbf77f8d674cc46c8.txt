add
inc
gs
jne
jae
jb
outsl
jae
add
push
jne
jo
outsb
fs
push
add
add
addr16
gs
popa
insb
jne
inc
js
add
xchg
pop
add
add
push
gs
push
inc
gs
je
jo
pushf
mov
pushf
bswap
push
call
add
push
insb
jae
gs
popa
insb
jne
add
xlat
bswap
mov
call
add
inc
gs
gs
inc
imul
in
sti
sahf
gs
mov
mov
dec
dec
les
out
dec
mov
cmpsl
or
xor
mov
cmp
addr16
cmpsl
mov
js
jmp
or
adc
xorl
enter
test
pop
mov
dec
mov
pushf
call
add
dec
outsl
arpl
inc
jb
gs
inc
and
aad
inc
add
movw
movw
pushl
ret
add
inc
gs
outsl
fs
gs
imul
add
pop
dec
cmpsl
jnp
mov
xchg
sub
pop
scas
out
mov
notb
shl
mov
clc
das
cmp
call
pop
in
shll
push
add
push
gs
arpl
push
arpl
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
xchg
push
movsl
cltd
pusha
mov
pop
ret
aas
fisttpl
inc
fbld
mov
lods
push
xchg
adc
xchg
push
fiaddl
sub
adcl
sti
fistpll
dec
adc
add
fildll
les
sahf
int3
or
rcll
cmp
popa
scas
push
insb
jo
adc
and
ljmp
in
xor
push
loope
aam
aaa
inc
mov
jecxz,pn
jo
adcb
or
dec
xchg
dec
ja
adc
shr
and
test
stos
push
roll
add
outsb
inc
js
arpl
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
gs
movb
not
jmp
cmp
not
cmc
test
neg
pusha
jmp
add
push
gs
insb
jne
push
add
inc
outsl
jo
inc
imul
gs
imul
arpl
add
je
imul
bound
gs
add
jle
imul
xor
aaa
iret
sahf
daa
push
jbe
jne
ret
xor
out
add
sub
mov
pushf
mov
xchg
sub
add
loope
or
mul
out
mov
bound
mov
nop
ret
mov
mov
dec
arpl
scas
push
and
xchg
mov
shlb
cmp
xchg
test
enter
addb
cmpb
inc
add
jge
cmp
dec
cmpsl
stos
add
sti
jae
inc
adc
std
jns
fsub
dec
pop
into
cld
xchg
pop
xlat
pop
rorb
mov
std
std
loopne
out
out
loop
jp
mov
js
jnp
scas
gs
push
insb
pop
pop
sub
mov
sti
jl
fcomip
jge
icebp
dec
xlat
lret
pop
sbb
insl
mov
scas
shl
rcr
gs
push
ja
insb
jge
sahf
scas
out
imull
loopne
mov
lock
inc
lock
lock
cli
incb
add
addr16
gs
gs
dec
gs
add
jne
sub
jo
add
test
push
add
push
pusha
lea
jmp
jp
ror
sub
mov
pushf
stc
scas
mov
ja
and
add
and
lahf
insl
xor
shl
into
sbb
jmp
xchg
push
adc
pop
lods
push
dec
sub
dec
mov
cmpsl
sbb
scas
in
or
enter
enter
inc
jb
popa
je
push
jb
arpl
jae
add
fisttpl
pushl
push
mov
pushf
inc
jmp
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
imul
outsl
arpl
jae
ja
lahf
popf
lret
adc
lock
pop
adcl
xchg
in
lock
pop
idivl
int3
xchg
fmuls
cltd
out
or
inc
in
lcall
jecxz
fildll
ja
sti
or
mov
dec
xlat
data16
mov
aad
faddl
sbb
fwait
enter
or
lret
mov
mov
xchg
push
cld
jge
sub
call
cli
into
fwait
sahf
fdivs
sbb
pushf
jo
and
cli
add
mov
mov
or
aaa
mov
jns
enter
aam
sub
sahf
sub
ja
mov
scas
sti
push
into
mov
ljmp
out
push
in
cld
out
xchg
lret
mov
push
nop
cmp
pop
mov
pop
jno
xorb
adcl
mov
xchg
mov
or
pop
push
mov
hlt
cmp
hlt
clc
into
cmp
or
outsl
lret
jg
inc
in
or
mov
out
sbb
push
cmc
jno
push
gs
xlat
into
cmpb
lahf
clc
jp
fcmovne
stc
stc
loope
aas
in
jbe
into
scas
or
xor
jmp
mov
inc
andb
mov
sti
mov
sar
dec
out
mov
jb
lods
or
inc
sar
test
js
or
fldenv
xchg
bound
xchg
push
mov
mov
call
rcrl
jne
aam
test
rorl
dec
div
mov
inc
ljmp
outsb
pop
mov
clc
loop
cmpb
hlt
hlt
push
push
cld
loop
ret
or
cld
adc
loop
jb
out
insb
mov
xor
loop
lret
pop
fwait
out
stc
repnz
cli
push
jecxz
out
repnz
jmp
jmp
push
jno
repnz
imul
int
repnz
popa
mov
jge
dec
jle
ljmp
jb
jp
ja
mov
das
ljmp
mov
jle
in
idivb
jp
int3
stos
shl
cmpsb
fdivp
outsb
dec
in
cli
jp
jle
vmwrite
int3
in
stos
in
mov
adc
fs
jb
icebp
outsb
clc
idiv
lret
mov
mov
fmulp
dec
sub
push
ret
mov
fnsave
shl
lcall
int3
cli
rcrb
cli
lret
js
sub
in
xor
jno
mov
lret
movsb
fisttpll
jo
mov
cmc
mov
fimuls
mov
mov
mov
or
testb
lods
int3
mov
lock
fmul
fld
pop
loop
mov
out
cmc
xor
fs
cli
mov
lcall
pushf
pop
stos
out
mov
push
testl
aad
mov
fldl
jl
lret
ljmp
mov
in
cmc
mov
test
fisubs
frstor
lcall
stos
fsubrp
mov
arpl
scas
mov
in
stc
xchg
call
pop
cli
pop
mov
pop
pop
mov
xchg
mov
mov
movsb
ljmp
test
ret
in
sub
mov
shrb
stos
xchg
xor
out
aam
mov
mov
out
pop
int3
outsb
test
scas
int3
mul
cwtl
sarl
cli
movsb
mov
jns
jns
imul
cmp
xor
adc
dec
jl
icebp
ficoms
shl
dec
rcrb
and
jmp
push
in
cmc
xchg
sbbb
jae
sbb
outsb
mov
xchg
add
sub
jns
xchg
mov
loope
mov
xlat
repnz
test
fdivrs
fidivl
adc
xchg
xchg
push
xorl
mov
fisttps
insb
push
cld
out
movsl
cmp
in
jle
and
sub
xchg
push
mov
mov
push
movsl
aam
fidivs
jb
lds
jp
sub
add
mov
add
imulb
scas
stos
xchg
or
dec
xchg
adc
clc
inc
pop
aam
mov
mov
test
aaa
out
xor
test
shr
subl
pop
cld
jle
call
jecxz
mov
add
aad
mov
mov
push
inc
cmc
sahf
push
mov
fnsave
imul
add
cmp
iret
insl
pushw
aad
pop
lret
into
dec
add
push
adc
imul
xchg
mov
fucom
int
mov
into
mov
and
cld
aad
je
aas
push
mov
clc
pop
ret
outsb
clc
into
or
flds
cmpsb
adc
mov
xchg
mov
pop
insb
das
cmp
mov
out
mov
sbb
dec
inc
out
push
push
mov
xchg
xor
cli
into
push
sti
mov
mov
mov
xchg
pop
or
jle
mov
insl
cli
repnz
xlat
cs
adcb
gs
inc
mov
arpl
mov
add
loope
idivl
loope
jb
jle
jns
sti
push
ret
incb
addr16
lock
xchg
lock
decb
movb
add
into
shr
lods
sbb
dec
pop
adcb
cmp
inc
hlt
lods
adc
in
xor
movsb
mov
popf
hlt
fidivl
jnp,pt
sub
in
mov
xchg
stc
lret
js
je
inc
cmp
jnp
cmp
or
mov
mov
es
fwait
mov
and
mov
xchg
scas
xchg
in
or
xchg
lods
pop
lcall
data16
add
sub
mov
fwait
mov
jno
orl
shll
add
int3
fcoms
add
mov
bound
std
push
lret
mov
lock
cmp
or
clc
mov
mov
cmp
push
pop
push
in
fnstsw
cltd
jne
push
or
push
mov
add
fisttpll
mov
mov
pop
pop
adc
in
sahf
lea
mov
test
or
sub
xchg
sahf
mov
jge
fiaddl
xlat
je
lea
sti
add
addr16
fmull
or
and
cmp
loopne
mov
scas
inc
mov
mov
xchg
pushf
inc
inc
jl
test
mov
loop
mov
push
cmp
clc
cmp
lea
jnp
xor
mov
adc
pop
cmp
imul
mov
ljmp
mov
mov
dec
ret
aad
cmp
in
clc
or
ljmp
inc
sbb
xor
inc
std
push
mov
jnp
fstp
xchg
clc
push
push
rorl
push
mov
fldt
movsl
or
shrl
push
push
xor
fmul
test
sarl
mov
adc
popf
icebp
adc
repnz
gs
mov
addr16
jp
push
sub
loopne
xchg
out
fiaddl
in
or
push
aad
mov
fmulp
movsl
mov
or
icebp
out
push
jno
mov
pop
das
push
lret
add
pop
loopne
test
loope
out
sbb
sbb
mov
out
add
cmp
push
sahf
sti
mov
cli
shlb
pop
mov
mov
add
jnp
sbb
and
or
mov
dec
out
dec
xchg
in
mov
xor
jne
leave
outsl
shl
call
dec
aam
mov
mov
sahf
cmpsb
xor
xchg
repz
hlt
test
lock
mov
std
ljmp
cld
inc
jnp
stos
rclb
cmp
lahf
popf
or
xor
out
out
scas
jge
movsb
xor
shll
ficompl
add
sahf
push
jnp
xlat
loop
outsl
iret
adc
fistps
lcall
fisttps
popa
xor
pop
jecxz
lret
mov
lret
mov
imul
test
arpl
cmp
mov
scas
lods
xchg
jp
mov
dec
aad
cli
popf
mov
xchg
add
jecxz
lret
fisttpll
or
cmp
std
sub
push
out
fsts
fsubrs
adcl
and
hlt
add
mov
cld
in
mov
mov
in
cmp
jg
sahf
mov
adc
in
test
sub
stos
pushf
out
ss
xorl
cmc
repz
ja
lcall
mov
mov
lea
stc
dec
add
inc
cmp
add
fcmove
mov
clc
push
lahf
mov
int
jbe
add
cmp
adcl
cmpsl
stos
fcomp
mov
sti
fnstsw
stos
and
idivl
ja
outsb
mov
lock
add
test
sarl
movb
mov
in
addl
push
int3
loopne
mov
jl
repnz
jl
fs
sti
data16
jb
or
out
imul
mov
push
push
mov
push
test
add
push
insb
inc
ljmp
push
std
lret
in
dec
mov
cmp
inc
out
cmp
and
int
mov
inc
aaa
xor
pushf
iret
sub
jecxz
push
cmp
fwait
ret
sti
out
xchg
dec
ljmp
or
lcall
aad
rcr
fcmovne
repnz
pop
xchg
xor
mov
lahf
mov
jp
xchg
or
add
insl
movsb
lods
cmp
into
and
out
sbb
sbb
ss
or
mov
bound
mov
ret
lcall
add
out
xor
pop
mov
mov
imull
into
dec
clc
mov
out
rcrb
jl
popf
test
popf
repz
mov
dec
out
movsl
sahf
ljmp
aam
xchg
inc
jns
mov
push
push
jns
into
mov
mov
adc
std
adc
jecxz
stos
orb
jno
aam
inc
nop
ljmp
jmp
pop
pop
add
fs
xchg
in
push
mov
inc
xchg
mov
xor
aad
push
or
mov
xchg
shlb
add
cli
movsl
insb
inc
cmc
jge
xchg
add
adc
mov
sbb
jecxz
push
xor
sub
sti
mov
cwtl
cwtl
fiadds
rorl
mov
xchg
xchg
pop
data16
mov
insb
xor
jg
push
or
stc
out
cmpl
shll
sub
jbe
loop
jne
xor
cli
sub
je
xchg
mov
popf
jp
lcall
inc
lret
adc
mov
adc
jne
jne
mov
call
mov
cli
or
imul
cmp
fsubrl
clc
mov
outsb
pop
pusha
pop
inc
into
adc
repnz
lret
mov
mov
sarb
mov
ss
or
sbb
out
adc
jp
or
jge
inc
jecxz
jo
add
add
clc
push
cli
out
fistpll
adc
adcb
scas
cmpsl
ficompl
mov
sbb
pop
das
cltd
push
adc
sti
into
in
add
das
sbb
mov
add
push
mov
loop
aaa
xchg
lret
jp
xchg
or
dec
and
pop
orb
xchg
and
test
in
xor
mov
data16
push
mov
inc
inc
push
int3
cs
sub
inc
mov
lret
or
sub
fwait
aad
in
fwait
inc
adc
cmp
add
pop
shl
in
and
cmpsb
push
mov
or
add
clc
jbe
dec
xchg
dec
sbb
pop
cmp
sub
dec
xor
adc
push
xor
adc
dec
cmp
pop
push
sub
push
cwtl
pop
ja
xor
xchg
or
clc
mov
jle
es
mov
cmp
jmp
lock
xorl
lcall
rclb
call
in
lods
neg
add
and
popa
add
xlat
shrl
mov
push
mov
xor
push
mov
xor
jnp
cmp
loop
sbb
mov
or
pop
dec
and
push
and
sbb
aaa
adc
and
cld
les
push
cmp
lret
jo
xor
je
pop
mov
mov
xchg
stos
or
test
pop
dec
clc
js
or
add
sbb
mov
adc
mov
cmp
xchg
sbb
es
push
mov
dec
jns
push
lret
aad
int3
mov
gs
jge
js
sar
cmpsb
push
jp
push
ret
mov
or
fnstcw
dec
dec
and
fsubl
cld
popl
je
ja
mov
xchg
outsl
cld
mov
adc
and
xchg
sbb
cld
aam
stos
lods
jns
movsl
test
mov
sbb
adc
ljmp
sub
jmp
outsb
push
loopne
negl
shr
cmp
into
mov
in
sub
mov
mov
cli
jl
dec
ss
cld
fwait
out
addl
dec
std
push
or
lods
das
mov
pop
aam
test
dec
xchg
and
or
or
loope
fcoml
push
loope
int
inc
mov
dec
fsub
cli
jl
ss
jb
int3
jp
cmp
insl
cltd
and
insl
jmp
icebp
repz
mov
add
add
pop
push
and
testb
data16
xchg
xchg
jmp
enter
push
cmpsb
repz
paddusb
sub
into
loope
iret
add
stos
cld
cs
out
rolb
fcom
les
pop
shll
aam
mov
inc
test
cld
inc
ret
and
cld
mov
mov
cmc
adc
xchg
dec
std
ja
sahf
cmpsb
push
mov
ds
pop
mov
push
sub
and
fldcw
sahf
lret
pop
mov
pop
add
fsubrl
icebp
loope
lock
mulb
rorb
adc
loope
sbbb
cs
pop
popa
call
loop
into
cltd
fsubrl
push
mov
in
movsl
push
xchg
ret
and
out
addb
stc
mov
test
xchg
ja
mov
clc
ja
fbstp
jg
and
adc
jae
aaa
lret
cmp
lret
jp
sub
mov
stc
mov
sahf
bound
std
jae
mov
mov
xchg
sub
test
aad
das
fs
mov
fcoml
mov
sahf
mov
push
xchg
in
cli
lahf
insb
lds
dec
jg
xchg
out
outsb
clc
out
xor
ss
in
iret
testb
push
ret
sub
test
cs
iret
xor
roll
add
loopne
push
notb
or
fistpl
cmc
push
inc
add
push
fwait
mov
sbb
or
iret
into
push
sbb
adc
popf
mov
jb
push
sbb
and
sbbl
fcoms
hlt
rcll
stc
mov
adc
ffreep
mov
pusha
add
dec
cmc
cmc
ficoms
inc
loop
inc
pop
aaa
and
jo
sbbl
pop
not
or
fdivrs
pop
sub
inc
std
jmp
jb
push
mov
sbb
pop
test
jae
popf
push
mov
inc
orl
roll
cld
sbb
cmp
ja
mov
fadds
cvtdq2ps
xlat
add
ds
out
imul
mov
sbb
push
test
insb
push
push
sti
orl
nop
pop
sub
add
jne
int3
pop
mov
iret
sti
mov
aas
scas
pop
aam
out
jns
dec
push
mov
out
dec
loope
inc
add
cmc
iret
xchg
cmpsb
clc
xchg
cmc
adc
mov
repnz
int
rcrb
cmc
into
test
in
add
adcl
push
notb
sahf
rclb
or
insl
subl
in
jg
push
push
jnp
pop
mov
jge
jae
pop
std
jne
les
les
std
xchg
xchg
dec
out
les
sbb
fiadds
add
xchg
push
insb
lock
int
sbb
int3
out
cli
add
dec
fmull
mov
lods
ss
test
cmp
icebp
repnz
mov
dec
pop
push
inc
mov
push
nop
sub
cmp
decb
stos
es
mov
mov
popa
in
sbb
push
or
push
add
dec
ds
incl
test
jne
xchg
sbb
add
into
aas
mov
dec
jne
mov
or
test
sub
add
sahf
shll
jle
mov
push
ds
mov
arpl
movsb
mov
rcr
stc
ljmp
std
loop
cmp
jp
sbb
sub
rcr
leave
lea
cld
sbb
pop
add
fmulp
jno
roll
cmp
cmp
add
scas
mov
add
push
dec
xorb
dec
ljmp
pop
xor
jbe
add
int3
clc
xchg
sub
pop
inc
outsb
inc
push
mov
out
xchg
test
jbe
sbb
nop
add
and
sahf
jne
mov
faddp
jle
leave
or
add
inc
pop
mov
jne
das
inc
aad
add
push
imul
inc
push
fsubl
jge
push
jnp
add
sub
mov
dec
call
notb
mov
mov
stos
jg
jne
pusha
inc
mov
aas
mov
sbb
repnz
out
ret
pop
sbb
cmc
test
jp
add
ljmp
mov
stos
mov
or
fstps
jne
call
les
and
fs
movsb
add
and
mov
mov
clc
add
jl
in
aaa
add
movsl
repnz
fistpll
imulb
in
cld
std
or
cmpl
cld
in
ljmp
idivl
add
mov
hlt
sbb
adcb
cmp
jle
dec
pop
test
rorl
insb
aam
in
clc
cmp
enter
testb
cld
out
mov
push
imul
arpl
sar
push
repnz
mov
lret
mov
cli
cli
ds
pop
xor
jge
stos
mov
loopne
jae
divb
dec
mov
mov
gs
mov
arpl
repnz
lods
ljmp
push
or
inc
jg
repnz
mov
andl
fmulp
cwtl
outsb
or
data16
pop
add
jp
xchg
jo
cmp
out
jle
insb
push
out
mov
mov
add
negb
adc
sbbb
mov
je
ja
mov
in
sub
enter
fiadds
adc
loop
dec
ficoms
xchg
fists
in
bnd
adc
inc
jno
repnz
lahf
dec
mov
repnz
addb
add
xchg
shl
dec
jne
jle
xor
adcl
in
dec
fdiv
and
add
stos
out
out
sub
in
push
pop
cli
ss
rclb
ja
pop
pop
mov
push
stos
xchg
fdivp
or
inc
sahf
jno
sti
sbb
aas
int3
pusha
xchg
repz
mov
stc
add
std
cmp
mov
xchg
fcmovu
outsl
pop
cld
pop
and
mov
lock
xor
jbe
hlt
xchg
stos
sahf
lea
mov
push
mov
sbb
fisubrs
mov
push
fiadds
adc
int
out
mov
bound
jae
jl
hlt
jmp
mov
insl
jl
roll
add
jmp
pop
ljmp
addr16
add
insl
ljmp
ljmp
bound
jle
out
int3
and
ja
cli
mov
inc
scas
in
cmc
or
imul
fiaddl
test
xchg
push
inc
add
lods
mov
addl
jg
jge
ds
lret
int
ficoms
std
sub
cmpl
mov
jne
jns
orb
cmpsb
fsts
cwtl
paddsb
cmpsb
jbe
negb
xchg
cli
inc
xchg
xor
jp
mov
clc
loop
dec
mov
addb
jno
sarb
ds
cmc
jg
sbb
sahf
test
pop
insb
cmp
push
mov
jge
jns
lds
push
fmulp
add
jne
xchg
in
ficomps
xor
mov
in
fdivr
mov
mulb
lea
scas
mov
xchg
jbe
out
shlb
or
sahf
or
pushl
jl
inc
add
stos
ljmp
sbb
mov
mov
repnz
mov
popf
data16
aam
jns
in
push
std
stos
mov
fadds
push
fnstenv
outsb
outsb
mov
cmp
insb
inc
hlt
cld
outsl
fadds
lahf
out
loopne
lods
loopne
mov
mov
cmc
xor
jecxz,pt
std
rorb
inc
pop
cli
hlt
lock
hlt
loopne
fidivrl
mov
icebp
call
lcall
pop
push
cwtl
inc
sub
jb
dec
cwtl
add
dec
rclb
ret
test
popa
jnp
lcall
xchg
into
fsubp
hlt
dec
push
aaa
loopne
test
out
int
std
pop
test
es
xchg
add
cmpsl
inc
faddl
out
and
ret
jo,pt
ret
lea
cmpsb
fld1
ss
jno
and
mov
fdiv
jge
xlat
mov
sarb
insl
faddl
dec
out
into
adc
stos
inc
jae
push
mov
fidivl
xchg
xchg
outsb
ficoms
inc
jno
cmp
repnz
shlb
stos
cmpsb
hlt
mov
mov
push
adc
bound
cltd
push
mov
into
xchg
add
xchg
in
test
std
push
jbe
add
cld
loopne
xchg
out
jno
int3
pop
jb
std
data16
mov
jne
or
test
fsubs
rcrl
xchg
std
repnz
mov
cmp
rcr
ja
xchg
sbbb
xor
ds
adc
push
ret
push
stos
lea
cld
jns
pop
and
les
dec
decb
loop
pop
mov
in
repnz
mov
fidivl
jno
cli
test
outsb
jbe
idivl
cmpsb
cli
add
mov
mov
call
loope
and
mov
repnz
idivb
add
cli
push
add
and
jle
int
xchg
shlb
mov
xchg
repnz
cmp
sub
add
rcrb
fadd
sahf
mov
outsb
call
lea
es
pushf
aaa
xchg
mov
fsubrl
sti
cwtl
jne
push
repnz
pop
pop
sarb
xchg
test
aad
cmpb
xor
and
les
sub
xchg
xchg
xlat
cld
cli
mov
push
std
das
jp
add
out
mov
test
jl
cmpsl
popl
push
repz
mov
ljmp
adc
std
jne
lret
out
sub
stos
sti
icebp
imul
hlt
sahf
out
out
jge
sbb
mov
inc
jnp
popa
aaa
xor
mov
sbb
push
mov
jle
adc
mulb
in
pop
outsl
mov
out
cmpsb
xchg
xchg
adc
in
pop
std
push
push
mov
xor
sti
jb
cld
mov
pop
ljmp
loopne
test
sub
ds
imul
sbb
add
lret
fdivr
adc
pop
sahf
aas
push
inc
hlt
adc
sbb
cmp
push
loopnew
out
sbb
lcall
mov
push
fcmove
mov
inc
sarb
out
xor
cmp
repnz
jp
mov
lret
repnz
data16
mov
test
jbe
scas
aaa
xor
sti
clc
pop
outsl
ret
aam
enter
into
aad
repnz
add
cmp
mov
ds
fldpi
int3
mov
xchg
jle
xor
push
cmp
sbb
cli
inc
push
jmp
inc
sahf
push
inc
aam
xchg
mov
lods
ds
leave
add
jecxz
jecxz
ja
je
cmp
lods
test
ljmp
lods
mov
mov
scas
fisubrs
movl
jle
idivl
add
notb
loop
pop
test
inc
into
sbb
ljmp
rcrl
mov
push
fisttpl
jns
cmpb
lret
ljmp
xor
adc
aam
xorl
or
cmp
mov
out
cmp
test
push
fldl
loop
das
mov
push
out
arpl
ss
mov
push
jae
jmp
jle
xor
add
icebp
std
out
jne
pop
add
into
jle
mov
lret
enter
negb
in
mov
add
mov
ret
repnz
jbe
movsb
fiadds
js
lock
cmp
popf
dec
js
push
into
sti
pop
aaa
movsb
mov
sarl
outsl
movsb
ret
test
out
adc
jmp
jbe
mov
lock
out
test
fsub
ret
jge
jmp
imul
cmpsb
adc
dec
xchg
dec
ret
std
jp
mov
push
stos
mov
stc
ret
xchg
out
repnz
xchg
pop
dec
mov
cltd
add
sbb
out
mov
or
xchg
xchg
mov
xorb
movb
repz
add
push
cmp
push
out
imul
popf
jp
dec
shrb
jp
sub
fsubp
pop
mov
movsl
xchg
inc
xchg
mov
add
sbb
mov
push
div
jnp
jmp
popf
gs
popf
jg
adc
mov
add
out
push
mov
cli
jle
add
or
cmp
lretw
jle
cli
std
jns
pop
lea
mov
aaa
jno
fisubrl
mov
lock
sbb
pop
and
ficompl
pop
out
cmp
mov
push
jle
std
push
out
repnz
out
cmp
xor
popa
sub
add
in
mov
addb
push
es
dec
shll
push
andl
ja
pop
mov
std
fisubrl
add
stos
insb
movsl
mov
push
out
add
int3
mov
add
inc
inc
movl
jbe
pushf
mov
lcall
mov
icebp
cwtl
aam
adc
into
ud1
cmp
and
cli
test
dec
jno
xchg
jae
test
add
ror
int3
jae
xor
push
daa
jmp
adc
aad
jmp
ljmp
into
push
cmp
addr16
sbb
sarl
jbe
std
xchg
das
cmpsl
orb
mov
pop
cmc
add
and
loop
je
in
sbbb
ret
mov
add
and
mov
adc
shlb
repnz
or
outsl
test
jge
pop
subl
imul
stos
jae
pop
cwtl
fsubrl
cmc
aad
dec
loopne
jne
fmull
ficoms
xor
rcr
mov
jl
lret
jae
in
pop
xchg
mov
sbb
neg
push
outsl
nop
cli
or
cld
aas
jns
or
std
insl
inc
aam
sub
push
jbe
ror
iret
repz
mov
stc
and
imul
xchg
mov
mov
in
test
jecxz,pt
ret
outsl
call
imul
ret
and
out
cmp
insl
cli
pushf
inc
fwait
mov
loopne
mov
clc
cwtl
test
pushf
repnz
insb
mov
fisubrs
test
loopne
fs
mov
mov
out
ret
fnstcw
inc
into
int
and
in
pop
cmp
lret
icebp
ret
dec
jge
sbbb
insb
fdivrp
ljmp
clc
ja
cli
cmp
jnp
subl
aam
or
mov
xor
sahf
test
into
fdivs
jmp
mov
jo
lock
or
loop
cmp
jmp
pop
cmpsl
add
test
icebp
orl
dec
scas
imul
xchg
xchg
cmpsl
sti
sub
add
mov
cmc
cltd
push
jno
shlb
jmp
mov
sub
xchg
cwtl
push
inc
mov
dec
out
lods
insb
cltd
push
mov
popa
add
pcmpgtw
mov
cmc
push
xor
jle
dec
aad
sub
jmp
outsl
adc
pop
add
sbb
cld
out
push
aaa
mov
sub
add
movsb
fsubr
std
jecxz
add
inc
idivb
or
xchg
call
jge
mov
add
sbb
adc
pop
ss
sbb
and
and
ds
or
ret
fisttps
jne
cmpsb
mov
cmp
push
xchg
lea
sbb
mov
addb
notb
data16
ret
test
push
mov
aaa
fistps
push
sbb
add
test
mov
pop
jae
movsb
dec
inc
jl
add
std
cmp
xchg
adcl
xchg
popl
sbb
ljmp
test
jo
cmp
bound
push
or
mov
xor
popf
xchg
fsubr
rcrb
cmpsb
and
pushf
subl
sub
add
in
cli
jle
sbb
jecxz
jle
mov
cmpb
sarb
xchg
sti
fdivs
stos
jns
sub
stc
pop
into
cld
flds
or
cld
push
orb
repz
dec
jae
popf
cmpsl
stos
dec
lock
andl
push
std
xchg
loopne
test
add
sub
data16
xchg
clc
push
mov
sub
je
stos
in
jmp
add
mov
push
jle
sbb
ret
roll
sti
push
loopne
outsb
enter
mov
add
in
add
in
sub
push
mov
data16
addr16
cmp
mov
push
popf
enter
sbb
cmpsb
repz
push
dec
call
xlat
hlt
mov
ja
xchg
jno
clc
jnp
sbbb
in
sbb
mov
xchg
scas
test
pop
mov
xchg
mov
idivl
stos
into
mov
outsb
dec
add
ljmp
mov
jnp
adcb
aas
cmp
jl
inc
mov
push
stos
loopne
pop
xchg
mov
jne
je
fisubrs
subb
repz
fisubs
jns
add
ja
jge
add
and
popf
add
sti
mov
jl
pushf
add
and
mov
push
loop
add
dec
loop
sahf
lcall
pop
xor
mov
xchg
xor
outsl
cmp
sahf
mov
or
jnp
pushl
mov
orb
push
stos
sub
cmp
popf
mull
mov
addr16
movsb
pop
dec
jp
add
out
pop
addl
and
or
mov
repz
into
sahf
jne
je
das
iret
out
into
fdivrs
pop
xchg
xor
pop
idivb
mov
out
push
imul
dec
pusha
cmp
ret
shrb
add
mov
sub
sub
mov
test
enter
add
outsl
pop
fisubrl
sahf
fdivrl
movsl
mov
jge
jne
adc
nop
addr16
or
outsb
mov
pop
sbbb
cmpsl
cmp
ljmp
mov
or
and
stos
jb
jne
add
testb
decl
sbbb
stos
or
movsb
repz
movsl
xlat
sub
orb
test
cli
adc
in
je
call
subl
faddl
mov
insb
or
mov
jae
dec
jbe
mov
addl
daa
in
ret
xor
mov
sbb
insl
mov
repnz
adc
cmp
call
xchg
fstpl
call
push
out
mov
jae
shlb
lcall
stos
lods
pop
test
je
mov
add
fsub
std
push
test
fcom
std
int
filds
sub
cwtl
fimull
in
andb
push
hlt
add
int
clc
cwtl
movsb
std
ja
inc
add
pusha
stc
test
sbb
pop
add
into
std
push
sub
movl
test
or
adc
add
or
cmp
push
add
sub
aad
bnd
hlt
lar
or
mov
pop
fldt
xor
cwtl
lcall
enter
mov
loope
rcr
jmp
iret
loopne
repnz
add
mov
fsubs
out
dec
dec
cmc
out
mov
push
stos
movsb
das
mov
scas
daa
add
ficomps
lea
cmp
cli
push
movsl
insl
cmp
mov
push
dec
or
sarb
fcomps
imul
sahf
aas
mov
jp
out
mov
xchg
inc
jne
mov
std
enter
fdivp
cmpb
movsl
jns
sbbb
icebp
dec
mov
lret
push
test
std
ljmp
push
test
rcrl
out
lcall
mov
dec
ds
fisttpll
loopne
xchg
popf
loop
sahf
shr
sbb
ja
les
push
insb
xor
call
mov
loop
sahf
dec
add
jg
fimuls
stos
xor
enter
and
fldl
mov
sbb
jl
inc
out
into
movsb
std
mov
add
loopne
imul
mov
popa
out
jns
push
inc
push
rcrl
dec
xor
mov
ja
adcb
jge
xchg
loopne
shl
mov
inc
hlt
mov
push
xchg
push
mov
mov
out
addr16
stos
daa
movsb
orb
test
ds
idivb
hlt
jns
add
sbb
insb
dec
mov
in
and
mov
ljmp
xchg
cmc
in
arpl
dec
stc
test
jbe
fcompl
xor
xchg
inc
jno
add
mov
push
push
jne
jg
loopne
jmp
test
ret
decb
sti
test
add
fdivs
int
imul
push
jae
cmpsb
data16
popf
inc
pop
test
xchg
aam
ret
cwtl
jle
push
scas
add
out
cli
push
sbb
mov
mov
jmp
fstl
cld
fisubs
addl
fwait
sbbb
mul
lods
lcall
or
scas
add
inc
rorb
popf
inc
add
aas
push
cwtl
jne
mov
out
into
ja
sbb
or
xchg
cld
cmp
or
pop
ljmp
add
lock
mov
sbb
in
sbb
ljmp
fidivrl
nop
loop
iret
xchg
jae
lods
in
cwtl
fidivl
cmp
int
cmpsb
add
jge
cwtl
out
ret
test
mov
dec
mov
xchg
xor
pop
stos
in
out
sahf
inc
repz
scas
addr16
pusha
mov
cwtl
jbe
jle
stos
into
push
outsl
out
mov
jne
dec
add
mov
in
lds
mov
add
bnd
inc
aam
push
je
rcrb
mov
mov
xchg
mov
ret
sub
mov
out
sbbb
add
fldt
add
stos
adc
mov
into
neg
pop
repz
push
out
mov
fadds
fucomp
jge
in
adc
into
push
xchg
push
outsl
subl
fnstenv
negl
sbb
jp
push
in
nop
inc
movsb
jle
pop
cmpl
or
xchg
xchg
loop
add
or
sub
pushf
mov
dec
call
in
in
inc
mov
adcl
ljmp
inc
addr16
clc
cmp
out
mov
test
fidivs
add
lods
std
dec
out
lret
add
sbb
faddl
rolb
push
add
cmp
inc
aaa
jb
test
jb
jne
mov
out
popa
sarl
mov
add
negb
and
fstpt
fcmovu
dec
fiadds
lret
jno
cmpb
cltd
fadds
inc
clc
lcall
into
shlb
push
call
jne
movsb
ret
sub
test
imul
jle
daa
div
sub
repz
cmp
fstpl
loop
test
adc
aad
enter
stos
cli
sahf
cmp
mov
mov
add
test
div
ljmp
pop
cli
and
mov
xchg
mov
pusha
ja
pop
sub
mov
xor
mov
iret
xchg
push
fcmovu
icebp
push
push
sbbl
jecxz
or
out
out
fwait
dec
insb
lcall
test
xchg
jo
cmpsb
pop
mov
aaa
mov
push
ficompl
int3
subb
cmp
outsl
xchg
ds
jae
push
cld
sbb
data16
sti
nop
dec
sbbl
add
and
cmp
decl
mov
jae
or
je
fdivl
aaa
dec
sub
lea
pushf
jae
data16
in
test
into
lret
dec
adcl
push
fdivs
repnz
sub
in
loopne
js
and
dec
stos
sbb
test
into
aam
and
aas
push
mov
popa
fiaddl
pcmpeqw
mov
mov
out
dec
das
jge
ja
es
scas
jne
sub
push
add
push
mov
xlat
fisubs
cmp
out
jge
sarb
mov
movsl
faddl
sahf
loop
fcomp
mov
int
xor
cwtl
xchg
push
std
and
cld
out
dec
ret
test
mov
jl
xor
push
sub
mov
sahf
jle
add
jle
int3
fcos
xchg
movsl
std
dec
addr16
jns
test
sub
aam
sub
cld
and
jmp
mov
les
pop
push
insb
sub
or
subb
fdivrs
fimuls
or
cmp
xor
jge
dec
adc
hlt
test
lock
cmp
cmp
fcmovbe
push
jle
xor
adcl
add
xchg
cli
mov
sub
in
and
test
xchg
pop
xchg
repnz
add
je
adcl
inc
mov
out
scas
mov
add
add
mov
cld
add
adc
add
xchg
mov
inc
sar
repz
call
pushf
gs
jle
addr16
andl
cld
fistps
pop
mov
mov
add
cli
cmp
and
fcmove
push
cld
jg
add
daa
push
jne
push
pop
cli
cmpsb
cmp
adc
cwtl
mov
push
out
ret
scas
and
imul
push
sub
xorb
jp
add
repz
cmc
jp
aas
loopne
rclb
mov
test
dec
frstor
in
add
xchg
pushf
pop
push
xorb
outsl
cmpl
adc
into
mov
or
imul
mov
adc
cld
stos
nop
xchg
sub
add
loop
aam
jp
test
mov
jns
test
pop
inc
mov
lcall
dec
daa
icebp
movsb
adc
xchg
push
inc
jp
mov
add
cwtl
ljmp
xchg
repz
mov
push
stos
shlb
add
imul
outsl
and
sub
push
mov
repnz
xchg
stos
mov
sbb
hlt
lea
lock
ljmp
arpl
jmp
cmp
xchg
imul
fldl2t
call
push
mov
add
adc
mov
dec
sahf
rolb
mov
add
movsb
sbb
push
ljmp
add
inc
cmpb
fnstenv
mov
fldenv
clc
lahf
cwtl
mov
jp
stos
push
inc
dec
outsl
shr
push
in
ss
sub
adcl
es
push
jbe
in
into
mov
leave
sub
jnp
inc
outsb
xchg
fildll
loopne
adc
loop
jne
fcmovne
std
cmp
popf
add
test
sahf
pop
adc
push
orb
loopne
sbb
jp
repnz
inc
loopne
cmpsb
sub
outsb
pop
lea
mov
sbb
add
xchg
push
mov
jmp
or
push
mov
bnd
popl
jle
mov
test
test
pop
dec
pusha
xor
mov
push
or
bnd
add
sbb
and
jle
shll
add
popa
jns
cld
enter
push
mov
cmpb
leave
testb
sbb
andb
mov
mov
rcrb
dec
in
lret
imulb
test
call
sbb
mov
cwtl
stos
std
mov
or
mov
loope
xor
mov
pop
lret
dec
mov
lcall
out
outsl
add
aam
sub
nop
push
enter
adcl
fdivrs
repnz
repz
cmp
popa
dec
mov
popf
ficoms
mov
ljmp
adc
adc
in
cmc
cmpl
into
mov
push
dec
inc
stos
shl
pop
subb
mov
jne
in
mov
sahf
repnz
out
sub
cli
mov
push
inc
cmpl
mov
imul
cmp
mov
add
mov
orb
mov
les
push
ret
mov
xchg
cmp
mul
scas
jge
aaa
nop
mov
repz
ret
pop
mov
jae
add
xchg
inc
xchg
xchg
sub
test
int
cmpsb
cli
mov
test
nop
sbbb
hlt
mov
loopne
cmp
lods
test
push
mov
cmp
lcall
test
out
andb
xor
jle
mov
cmp
ret
inc
fdivl
pop
popf
dec
sbbb
enter
cmc
subb
xchg
mov
push
daa
fcmove
or
ficoms
lods
mov
cli
dec
in
outsl
dec
insl
mov
testb
stos
in
jl
fdivr
fs
adc
jp
ja
imul
or
jp
movsb
out
jnp
cli
inc
xchg
sub
ja
adc
push
ja
xchg
xor
push
mov
pop
jp
clc
sahf
andb
pop
idivb
iret
mov
pop
jge,pt
xchg
out
test
sbb
adc
in
loop
cmp
pop
inc
call
call
enter
sahf
orl
sbbb
and
cli
out
xor
xchg
push
mov
add
mov
cwtl
lock
jns
push
add
les
cmp
divb
cwtl
mov
jle
add
scas
mov
xchg
mov
out
fisubl
push
es
mov
add
sahf
jns
jg
push
outsb
mov
movl
mov
xchg
loope
inc
or
in
arpl
inc
adc
add
lcall
subl
lret
cli
jge
push
aad
popf
call
imul
mov
out
lock
jle
inc
movb
lret
std
ljmp
push
call
add
nop
or
jmp
mov
jecxz
lea
clc
outsl
dec
adc
lods
les
stos
cld
sub
movsb
ljmp
or
int
repz
pop
add
push
add
adcl
xchg
lahf
add
fnstcw
loopne
ficomps
push
bound
sbbb
lcall
push
pop
push
mov
popf
and
add
scas
xchg
cmpsb
mov
mov
xorl
orl
mov
scas
jns
add
addb
sub
xchg
mov
add
ficomps
xchg
mov
jne
push
into
mov
sti
sbb
add
xor
inc
xchg
cli
inc
test
pop
sub
test
lcall
andl
in
jbe
push
in
out
lcall
mov
pop
xchg
iret
test
and
hlt
into
aam
mov
inc
mov
insb
mov
repz
popl
cmc
popf
mov
out
jp
pusha
mov
push
dec
pushf
out
sti
pop
aad
add
xchg
cmc
pop
insb
or
and
cmp
into
inc
data16
js
jbe
mov
and
pushf
pop
cmp
loop
repnz
mov
in
sti
push
lcall
in
mov
mov
lods
sub
jp
movsb
call
dec
adcb
rorb
push
and
ret
out
dec
negb
insb
xor
mov
fcomps
movsl
aad
clc
jle
push
in
decl
mov
call
mov
sbb
inc
out
push
ds
call
mov
ds
push
popf
and
sbb
sub
lock
out
push
cmpsb
hlt
and
mov
adcl
cmpb
out
mov
aam
push
ss
push
mov
test
xchg
lods
xrelease
out
mov
sub
insb
out
pop
sti
jle
add
push
fildll
mov
dec
loop
mov
mov
out
mov
repnz
add
cmp
mov
mov
pop
fsubr
inc
stc
ret
push
aam
test
lods
bnd
imul
mov
enter
data16
add
iret
ficompl
xchg
rcrl
test
in
std
lcall
xchg
push
jne
xchg
cld
daa
dec
add
mov
and
mov
addb
pop
lcall
add
dec
cwtl
mov
ja
sar
subb
push
icebp
test
lods
fwait
test
fucom
cmp
repnz
stc
dec
add
xchg
in
pop
arpl
sti
adcl
lock
sar
sti
fsubr
jl
les
xorb
jno
clc
jnp
xchg
sahf
pop
sbb
inc
incb
cmp
pop
mov
and
aad
mov
jo
dec
out
mov
pop
scas
int
pop
roll
sbb
mov
xlat
mov
push
repz
cmpsb
add
sbbb
adc
inc
std
lock
xor
outsb
cli
das
arpl
push
mov
sub
adc
mov
or
xchg
or
push
mov
mov
aad
into
inc
and
rorb
ss
inc
in
push
enter
shrl
jmp
test
popa
xchg
sub
ja
xchg
fwait
pop
sbb
adc
les
lcall
ljmp
pop
lcall
jo
fisubl
dec
push
or
xchg
cltd
ss
adc
pop
xchg
inc
cmc
out
decb
fmulp
sti
mov
pop
fstpt
insb
popf
test
test
sbb
ds
sahf
call
dec
adc
jns
in
jno
dec
popf
xor
pop
sbb
sahf
jne
lock
loop
repnz
popf
cmp
fwait
enter
push
aad
mov
in
outsl
or
push
mov
test
xchg
mov
pop
push
ret
dec
rorb
mov
imul
dec
lcall
hlt
mov
pop
dec
inc
push
aam
mov
imul
movsb
les
push
mov
pop
out
addr16
jns
fildll
mov
call
push
push
lret
leave
push
subb
or
inc
add
push
mov
cmp
scas
pop
cld
adc
xlat
jb
ret
mov
jl
dec
xchg
ja
shlb
je
sahf
test
insl
inc
jo
jle
divb
push
jg
cwtl
cmp
fbstp
outsb
ja
mov
sbb
xor
add
lds
inc
test
add
pop
movsl
and
aas
jo
sarl
cmp
mov
js
iret
inc
test
and
cltd
inc
jg
mov
xchg
add
outsb
pusha
stos
inc
iret
jecxz
lock
pushf
or
xchg
int3
mov
pop
out
add
bound
inc
out
rdmsr
loope
das
scas
add
jns
mov
loopne
ja
mov
sahf
mul
cmpl
lock
cltd
sub
and
sarl
xchg
hlt
push
sub
dec
inc
sbb
cmp
dec
push
add
xchg
dec
scas
sub
mov
repnz
sub
imul
shrl
cmp
jnp
jbe
sub
iret
jae
add
inc
jp
adc
test
jmp
out
gs
filds
mov
adc
jo
shl
mov
mov
fiaddl
gs
lock
jbe
sbb
sar
adc
sbbl
sbb
add
fwait
js
insb
or
les
mov
pop
sub
pusha
fsubp
sub
pop
sub
std
iret
shlb
xlat
fmuls
dec
ds
and
mov
xorl
orl
pop
adc
in
sbb
pushf
jae
ja
hlt
mov
incl
and
pop
call
sbb
imull
addb
push
cmp
cmp
loop
decb
and
or
decb
sbb
decb
pop
push
cmp
mov
and
insb
scas
ss
lahf
mov
jae
jl
lret
ret
rorb
fs
mov
stc
mov
xorb
cmp
cmp
xor
mov
inc
int
mov
push
mov
in
pop
xchg
jmp
in
incb
sub
mov
push
lea
jge
insl
or
data16
dec
mov
mov
sarb
repnz
jmp
lods
test
out
or
cmp
inc
push
mov
pop
paddd
or
jmp
sar
sub
fisubs
add
fsubl
xor
pop
xor
inc
inc
sahf
aad
outsl
sub
stos
mov
cmpsb
clc
cmp
mull
cmp
pop
mov
imul
dec
mov
inc
mov
push
mov
jne
mov
aas
inc
or
push
sub
mov
outsb
jbe
mov
sbb
mov
mov
or
dec
mov
outsb
jno
adc
test
shl
fsubs
sahf
out
repz
aam
inc
mov
fdivrl
mov
push
divb
div
pop
call
inc
les
xor
dec
sahf
clc
sahf
inc
adc
ss
adc
pop
mov
push
cmpsl
stc
js
leave
cmp
inc
dec
jp
mov
xor
push
jnp
xchg
in
push
pop
cmpsb
jne
sahf
pop
mov
sbb
mov
jo
dec
cmp
rorl
mov
std
stc
sti
sub
arpl
scas
int3
inc
jge
fadd
jp
mov
push
cmp
fisubrs
pop
out
in
in
push
xchg
daa
sahf
push
push
cmp
adc
lret
idiv
incb
fwait
xchg
mov
xchg
inc
push
dec
add
aaa
pop
ljmp
xor
inc
or
stos
incb
cmp
pop
test
lods
aam
sbb
jp
sub
out
adc
insl
inc
aaa
sbb
popa
jge
in
fsubrp
mov
add
cmpsb
es
leave
jnp
and
ret
notb
fs
push
sub
jmp
dec
xchg
cld
lea
jle
iret
cli
sub
int3
add
xchg
jecxz
loope
jg
in
mov
nop
sbb
addr16
decb
cmp
scas
repnz
ljmp
xor
insl
pusha
mov
mov
cmp
loopne
mov
mov
cmp
shrl
or
out
cmp
rcrb
sub
clc
add
add
sub
and
push
jne
stos
ja
jns
decb
add
fisttpll
lcall
push
lea
lret
pop
inc
xchg
xchg
jge
jns
fstpt
loopne
fdivrl
xor
nop
cmp
mov
pop
jb
jp
loop
rclb
cmpsb
and
dec
int3
dec
leave
jle
cltd
cmc
mov
adc
add
xchg
incl
arpl
jle
repz
push
cs
testb
adc
gs
jnp
divl
mov
inc
incb
mov
imul
cltd
push
nop
xchg
xor
adc
leave
js
seta
jle
sbb
hlt
jbe
insb
mov
mov
das
or
mov
push
cmp
mov
xor
les
xchg
pop
fldenv
dec
int3
fsub
cmp
pop
out
dec
jg
push
adc
inc
xchg
add
mov
and
mov
daa
cld
add
mov
xlat
shr
xchg
sar
mov
fisubs
lods
or
xchg
dec
cmpsb
mov
xchg
xchg
pusha
mov
jbe
sbb
jecxz
lods
frstor
incb
test
je
ljmp
test
mov
gs
je
and
les
cmpsb
lret
fimull
push
jge
testb
scas
xchg
addl
sub
sahf
lahf
adc
das
and
push
or
dec
fdivr
std
aad
jl
loopne
pop
fists
cmpsb
cmp
inc
xchg
and
fstl
dec
insb
jae
jae
dec
std
lret
dec
mov
int3
pop
inc
jp
inc
pop
test
popf
sub
xchg
lret
fsts
ja
add
dec
cmp
xchg
stos
inc
call
mov
mov
xor
lds
jp
lahf
dec
xchg
add
jns
stos
loopne
lret
push
xor
xor
negb
mov
nop
or
js
rcrb
pop
push
and
mov
divl
incb
inc
ljmp
incb
cmp
icebp
cmpsb
dec
testl
cmp
sub
es
push
xchg
aaa
dec
xor
cli
xor
and
scas
mov
sbb
jo
fimuls
or
lock
mov
push
dec
sub
xchg
jmp
fidivrl
and
mov
enter
outsb
in
push
test
push
and
pop
mov
push
cmc
icebp
pop
repz
mov
fdivrl
or
xchg
cmp
loop
testb
out
push
sub
xor
dec
daa
mov
jo
jo
sahf
ss
fists
pop
dec
xchg
out
cmc
xor
inc
dec
mov
fstps
sbb
lcall
sahf
int
ret
sbb
leave
mov
push
mov
jl
pop
mov
jle
test
stc
add
mov
je
repnz
movsb
inc
test
fsubs
push
out
es
xor
out
mov
and
in
pop
xchg
fs
lahf
testl
pop
ret
shl
movsb
inc
inc
mov
cmp
es
imul
lcall
jne
stos
test
hlt
aam
gs
sub
shl
das
insb
sarb
jle
popa
xchg
dec
push
mov
jnp
pop
sub
push
mov
leave
mov
repz
ret
mov
cmp
add
enter
cld
or
sti
mov
aaa
sbb
sar
sbb
mov
sub
imul
ficoml
popa
push
pusha
mov
mov
stos
xor
sbb
gs
scas
insl
xor
inc
scas
cmp
push
mov
aas
push
xlat
mov
cmp
data16
jno
sbb
xchg
fldl
lea
rolb
xchg
mov
in
ret
test
outsl
jne
mov
mov
jnp
bound
add
popa
inc
add
rclb
push
and
daa
jns
or
mov
dec
pop
fs
scas
cld
addl
cmc
push
mov
lret
and
hlt
or
fwait
cmc
aaa
push
push
dec
xor
jg
mov
jns
dec
fsub
cmp
mov
or
fsin
mov
test
and
adc
cltd
or
loop
cmp
sbb
mov
mov
daa
pushf
aaa
jno
adc
adc
or
popa
outsb
xchg
adc
jno
out
ret
push
jle
jmp
cltd
mov
or
shll
repnz
xchg
lods
mov
pop
cwtl
cmp
stos
ljmp
aas
dec
inc
mov
adcb
push
loop
or
mov
xor
lods
push
std
adc
sbb
fsubs
sbb
out
and
mov
lret
mov
sbb
inc
in
cmpsb
sbb
or
in
adc
into
push
lods
mov
xor
cmp
push
and
in
xorb
adc
mov
test
jge
jecxz
call
dec
jge
push
loop
loopne
xor
out
jne
test
ret
test
jns
cmpsl
mov
lahf
jmp
mov
test
jge
jnp
dec
aas
movsb
xchg
ret
jle
mov
cmp
jg
sarl
sbb
mov
xchg
xor
ja
fs
jg
movsb
xor
jle
mov
icebp
test
rolb
out
push
lret
dec
es
fsin
sub
fsubrs
pop
jg
in
mov
sub
and
stos
jp
add
dec
shll
push
cwtl
test
lea
adc
mov
fstps
loope
inc
mov
mov
sarl
mov
cmp
decb
data16
int
cld
les
lret
test
dec
inc
jbe
xchg
xlat
addr16
cmp
rorl
adc
inc
fmuls
popa
je
mov
subl
scas
decb
clc
dec
sbb
xlat
sub
or
cmp
or
repz
iret
into
fisttpll
xchg
mov
pop
fwait
add
enter
outsb
pop
mov
mov
push
out
mov
nop
inc
inc
imul
push
mov
inc
addr16
mov
cmp
test
aad
jne
stos
fimuls
nop
xor
ss
mov
rcrl
scas
outsl
lret
mov
jl
mov
inc
pop
mov
imull
stos
pop
movsl
in
lcall
sbb
pop
outsb
jle
push
lcall
xchg
sarb
mov
jo
mov
std
arpl
cmp
repnz
cwtl
sbb
ret
lds
aaa
fsubl
push
mov
jae
repnz
or
in
mov
ja
es
mov
xor
pop
lods
std
push
in
rorb
xor
loope
adc
imul
cmp
lcall
cmp
stos
add
lods
aam
cli
push
sub
pop
mov
das
xlat
stos
out
jp
xor
dec
sarl
mov
lahf
popa
pop
mov
call
push
mov
xor
bound
xor
lahf
jl
cmpsl
dec
inc
xchg
bt
popa
and
cld
andb
mov
in
scas
add
xchg
mov
xorb
inc
fsubs
jmp
mov
aad
cmp
addl
jnp
and
inc
sbb
xchg
pop
ret
and
mov
js
push
pusha
dec
movsl
pop
mov
aas
sbbl
xchg
ret
dec
scas
add
jno
mov
mov
adc
jle
cltd
fidivrl
add
mov
pusha
xor
pop
loope
push
jl
int3
outsb
jae
mov
mov
mov
out
adc
incb
test
xchg
scas
dec
cld
jns
fimuls
pop
lock
push
inc
mov
sub
pop
push
lret
fisttps
jge
xchg
fdiv
xchg
out
dec
shl
mov
int
into
push
mov
fdivl
dec
push
mov
xchg
mov
adc
pushf
xchg
imul
xchg
mov
jmp
adc
shrb
jo
insb
out
mov
stos
lds
pushf
mov
jp
xor
sti
jnp
push
mov
sahf
inc
fdivl
adc
data16
out
out
or
or
sub
mov
jl
jbe
fistl
std
fimuls
dec
arpl
push
dec
sbb
fidivs
icebp
cld
repnz
pop
and
insl
decb
add
sti
in
mov
test
bound
jmp
inc
popa
mov
shr
inc
incb
imul
inc
xchg
rorl
mov
imul
in
cld
mov
test
mov
jmp
repz
lock
push
fidivrl
mov
pop
or
stos
jae
shll
xor
push
jle
mov
pop
imul
mov
cmp
jl
ror
sub
jns
sarb
cwtl
adcl
stos
clc
dec
test
call
cmp
or
dec
mov
jae
add
jne
imull
mov
inc
aam
jbe
push
dec
cmp
scas
test
shrl
sbb
mov
cs
jne
jge
add
mov
movzbl
inc
mov
cld
in
pop
fstpt
mov
push
jmp
out
paddd
lcall
and
imul
mov
xor
outsl
jmp
adc
sahf
fcomp
into
jne
into
out
lock
push
dec
jle
in
sti
cmpb
sub
ficoms
fadds
push
add
roll
add
test
add
xchg
add
mov
jge
jbe
icebp
sub
xlat
adc
scas
add
syscall
mov
gs
xor
insl
jecxz
xor
movsb
sbb
mull
or
sub
dec
adc
sbb
pusha
mov
mov
mov
vpaddw
dec
les
sub
and
push
or
push
jle
cmc
sbb
imul
push
pop
or
push
int3
add
add
add
add
add
add
cwtl
add
stc
les
call
ror
dec
mov
stos
mov
xor
jecxz
fsubrs
sarl
jle
data16
lcall
ret
xlat
ret
test
mov
jns
jbe
out
xor
mov
fadds
inc
add
jne
jo
dec
popa
mov
lret
cmpb
test
in
adcb
push
cmpb
bound
jmp
rcl
push
les
mov
scas
subb
lahf
sbbb
popl
addl
mul
repz
out
loopne
pusha
out
shr
iret
stc
das
das
ret
das
mov
das
mov
scas
das
stos
das
cmpsl
das
mov
das
xchg
das
xchg
das
xor
cmpsl
pop
jnp
imull
pop
out
dec
jmp
ja
jecxz
fisttps
fisttpl
xlat
or
or
or
or
or
or
or
or
or
or
or
loope
sbb
push
out
adc
push
out
jecxz
filds
fildl
xlat
add
add
add
add
add
add
add
add
add
add
add
popa
repz
out
ret
out
sarb
mov
lret
mov
mov
mov
scas
pop
stos
pop
cmpsl
in
mov
xchg
push
lods
pop
mov
lret
and
scas
test
cmpsb
add
test
inc
or
or
or
sbb
push
out
adc
push
ljmp
data16
add
add
add
in
xchg
adc
enter
mov
xchg
mov
lods
mov
cmpsb
mov
mov
mov
xchg
mov
cmpb
xor
jo
scas
call
outsl
loop
loopne
fisubrs
fsubrl
aad
int3
pop
jns
idiv
lock
ret
pop
jne
data16
xchg
in
outsb
lret
lcall
ret
daa
ret
lcall
cld
cmp
mov
js
mov
cmp
jb
imul
cmp
xor
cmp
jecxz
lods
loope
xor
jl
ljmp
xlat
xchg
cmp
popa
scas
lret
arpl
bound
pop
jg
jge
jnp
cmp
sbb
outsl
add
imul
add
pop
add
push
add
push
add
dec
add
dec
mov
mov
mul
bound
into
mov
ljmp
leave
mov
pop
in
pop
fs
lods
lock
in
loope
ret
fiaddl
inc
mov
xor
sti
stos
loop
bound
ror
je
pushf
mov
mov
outsl
fbstp
ljmp
jmp
in
xor
out
in
mov
bound
cld
jecxz
icebp
mov
insb
fisubrl
out
mov
push
bound
lret
loopne
in
add
jecxz
xlat
sarl
leave
sub
ds
arpl
fcoml
aad
dec
push
stos
or
push
or
loop
ja
jno
ljmp
mov
int
leave
mov
mov
mov
daa
mov
xchg
mov
add
jge
divb
in
jne
dec
xchg
pusha
fsubs
out
popa
imul
aad
into
push
inc
aaa
mov
sbb
sub
and
cltd
or
or
or
jnp
loopne
imul
jae
in
cmp
adc
jg
ficoml
pop
pop
rcll
dec
pop
enter
mov
pop
xor
outsl
fistps
push
mov
enter
popl
cmpsb
sbbb
pop
dec
out
cmpsb
in
mov
cmp
pushw
pop
pop
cmp
xor
test
or
clc
gs
adc
push
or
out
outsb
mov
xchg
mov
sbb
cmpsb
adc
int3
out
lock
loop
xor
dec
adc
mov
pop
mov
data16
in
inc
leave
lock
popa
cmpsb
xor
repz
loopne
insb
sbb
scas
sbb
addr16
mov
mov
popf
faddl
and
or
add
lock
xor
mov
gs
mov
mov
mov
je
in
mov
fwait
and
mov
pop
mov
mov
and
push
les
ret
sub
mov
outsl
ret
push
sti
test
add
cmc
ja
in
mov
pop
xchg
jp
aas
pusha
lds
loope
popa
loopne
divl
push
pop
mov
pop
leave
ja
push
mov
pop
sbb
nop
pop
or
cli
mov
loope
ret
lds
and
adc
gs
lock
imul
insb
jecxz
sbb
hlt
scas
sbb
mov
lds
pop
ret
rcr
int3
ja
inc
cmp
test
jmp
int
les
mov
data16
popa
pop
call
icebp
xor
mov
pop
lea
cmc
fldcw
aam
cmp
mov
sti
movsl
std
mov
bound
ljmp
mov
mov
mov
rcl
dec
mov
pop
inc
ja
push
mov
sbb
repnz
test
sub
mov
insb
fs
cmp
insl
dec
pop
cmp
sub
sbb
lods
or
or
or
or
cmp
imul
rclb
sarl
jnp
lods
mov
addb
loop
mov
mov
mov
xchg
mov
mov
xchg
outsl
subl
out
mov
das
cmpsb
das
movsb
das
mov
das
pushf
das
lcall
cmp
popa
cli
imul
testb
repnz
sbb
cmc
in
or
movsb
xchg
fisttps
sbb
push
xchg
xor
lds
push
push
mov
shl
lahf
pop
mov
fldl
roll
lds
mov
test
stc
fs
xlat
pop
mov
pop
and
mov
out
xchg
cmpsl
or
or
arpl
in
rcrb
ror
inc
aam
lahf
imull
in
mov
out
inc
out
cmp
add
sarb
loope
in
mov
out
mov
or
xchg
test
pop
mov
or
add
jmp
fucom
fldlg2
shll
das
cmp
ss
xor
sub
daa
das
adc
or
cwtl
push
push
xchg
je
mov
mov
fmuls
in
pop
mov
les
mov
sub
sbb
pop
mov
divl
enter
mov
out
gs
add
dec
cmp
push
jns
repz
fstl
aad
mov
add
loop
jmp
lock
jecxz
xor
imul
xchg
push
pop
repz
push
pop
push
pop
push
pop
push
pop
dec
pop
dec
jmp
mov
inc
das
inc
das
inc
das
inc
xor
add
xor
add
sub
and
test
dec
pushf
sbb
sbb
pop
add
pop
maxps
pop
pop
pop
add
xlat
mov
icebp
int3
xchg
dec
pop
fistps
fcmovne
clc
jmp
out
shrl
push
das
sbb
sbb
ja
adc
adc
adc
push
pop
or
or
or
push
pop
add
add
add
jp
js
jbe
dec
ret
lds
out
aam
loope
loope
jmp
xor
jnp
pusha
les
pop
xchg
dec
adc
lds
addr16
rcrb
test
xlat
and
sbb
cmpsb
pop
shll
and
add
insl
in
pop
xchg
mov
sub
jnp
mov
sbb
xlat
mov
pop
ja,pn
push
or
mov
adc
cld
mov
mov
xor
scas
xlat
popa
mov
mov
addr16
fdivr
dec
popa
push
imul
ret
sbb
xchg
scas
xchg
mov
ja
leave
pop
xchg
adc
iret
xor
inc
jp
push
cltd
sub
lea
loop
loope
popa
pop
loopne
jmp
repz
cmp
pop
xor
pop
lcall
mov
stc
pusha
ja
dec
pop
mov
data16
arpl
leave
rclb
or
xor
ljmp
mov
fidivrs
fdivrs
mov
sarb
lret
mov
ret
mov
mov
mov
mov
scas
mov
test
cmpsb
mov
mov
ja
cwtl
sbb
nop
or
mov
mov
mov
aam
lock
xor
jae
mov
dec
iret
int3
add
mov
sub
stos
or
or
mov
addb
lock
ljmp
stos
hlt
mov
mov
loop
inc
push
jle
sbb
cmp
fsub
repnz
lock
pop
in
mov
aad
in
mov
or
lods
jno
imul
mov
mov
xchg
cld
pusha
jns
mov
mov
or
xchg
bt
push
push
pushf
xchg
not
xchg
btc
xadd
adc
pusha
mov
test
mov
btr
mov
neg
shr
mov
shl
xor
lea
call
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
sahf
js
cmp
jae
bt
cmc
bt
stc
cmp
jmp
call
xchg
mov
mov
mov
movsbw
mov
movsbl
mov
mov
pushf
pushl
pushl
ret
add
push
gs
jb
popa
je
dec
gs
js
add
not
sbb
xor
jmp
add
inc
jb
popa
je
dec
jne
gs
add
add
outsl
outsb
jae
push
call
and
into
xchg
fistps
cmp
and
jne
mov
sbb
or
fsubr
cmp
mov
stos
clc
pop
leave
ror
mov
es
test
xchg
add
outsb
dec
outsb
jo
je
gs
je
jo
jbe
sbb
adc
cs
xor
mov
notb
clc
xchg
sbb
insb
icebp
adc
ss
bound
sub
cmp
lock
stc
cmp
ja
lods
gs
cs
movsb
lret
sbb
sub
lods
fs
push
shll
pop
inc
outsb
mov
cmc
mov
xor
fildll
fisubl
mov
sbb
sbb
sarl
sbb
lret
xorb
cmp
test
inc
popf
or
add
pop
scas
test
fimuls
or
add
dec
les
in
jmp
das
sub
sbb
mov
inc
sub
jg
mov
xlat
insb
add
jnp
inc
mov
mov
neg
stc
sti
push
lds
in
shlb
jle
out
cld
mov
cwtl
je
xchg
in
jp
fmull
ds
jne
jb
aam
int
dec
dec
jge
jg
in
ss
cmp
lock
div
clc
mov
cli
insl
cld
mov
mov
xchg
lock
mov
push
loop,pn
sti
clc
in
mov
repnz
jg
sbb
xchg
mov
cmp
aam
pop
cmpb
jl
push
sbb
jno
sahf
stc
test
arpl
lock
cmpsb
sbb
popf
ljmp
outsb
std
or
cmp
in
xchg
fdivp
cmp
push
inc
jb
lods
in
mov
or
aad
call
cs
ss
cmp
je
clc
insl
mov
push
hlt
sarl
test
jle
or
adc
jmp
xor
mov
mov
mov
sbb
ja
incb
repnz
stc
gs
mov
fidivrl
data16
aaa
xchg
add
hlt
hlt
in
or
or
aad
mov
pushf
inc
cmp
rcl
xchg
stc
data16
or
fimuls
push
and
adc
fimull
js
mul
adc
aam
insl
out
jb
mov
lret
out
ljmp
in
cmp
dec
or
les
ret
bound
fwait
jnp
inc
jp
and
bound
or
gs
fisubrs
out
cmp
out
loop
push
cmp
cmp
jge
push
lcall
cmp
fdivp
cltd
jge
in
dec
iret
rcrl
in
xor
shrl
int3
sti
mov
xchg
inc
cmc
or
rcr
loop
mov
ret
std
scas
mov
ds
jg
mov
dec
test
popf
sbbb
sbb
push
mov
lret
psubb
push
int3
cmp
cmc
jae
lds
repnz
hlt
cmp
pop
stos
xor
xchg
push
and
cmp
adc
std
popf
out
hlt
lock
daa
test
addl
cld
push
push
pop
cmp
in
hlt
ds
dec
mov
push
test
push
test
fdiv
push
mov
inc
cmpl
jle
cltd
gs
mov
in
push
pop
stos
fsubrs
leave
fcmove
cmp
pop
cwtl
cld
std
clc
mov
out
les
push
orb
cli
ret
rolb
push
out
jne
ljmp
lock
or
js
push
jp
insb
bound
cld
lock
mov
push
mov
repnz
jp
inc
xlat
ret
or
sti
into
hlt
mov
push
push
xchg
sbb
pop
stc
stos
pop
mov
ja
repnz
mov
mov
outsb
pop
ret
jns
divb
jl
xchg
stos
sbb
popa
imul
cmpw
stos
xchg
orl
and
fldenv
lds
mov
add
mov
fcmovb
jmp
cmp
jo
gs
fcomi
in
stos
pushf
ja
adcb
mov
loopne
xchg
jb
call
aaa
mov
sbb
inc
sbb
sbb
cmpsb
stos
outsl
jg
or
xlat
and
pop
xchg
mov
in
std
pop
mov
push
in
sbb
jmp
call
jle
hlt
push
stos
fiadds
or
bound
cmp
testb
clc
in
out
lock
popa
pop
or
shll
fwait
xchg
add
mov
mov
mov
push
js
cmp
pop
push
mov
std
pusha
mov
js
lds
jle
cmp
daa
into
pop
push
cmpl
sbb
lcall
mov
jbe
sahf
ror
cmp
mov
cmp
mov
mov
cmp
mov
or
dec
adc
inc
jge
test
std
test
icebp
cmp
sbb
data16
or
int3
stc
push
sahf
add
out
cld
cmp
in
call
idivl
fucomp
rorb
mov
jp
jg
xor
js,pt
mov
push
mov
inc
pop
std
cmc
mov
pusha
clc
outsb
or
jbe
stc
std
lret
call
neg
lock
aam
int3
std
pusha
mov
movsb
cli
rcr
lret
jle
cmp
jnp
push
or
test
pop
jle
bound
push
clc
mov
or
lahf
sahf
jg
jge
push
jl
or
mov
in
mov
pop
dec
xchg
iret
mov
movsb
movsb
push
aad
testb
sbb
int
or
xchg
loope
cld
add
dec
sti
outsb
call
pop
ds
pop
cmp
repnz
std
hlt
movl
mov
orps
or
aam
clc
les
bound
arpl
clc
popa
mov
cmp
ret
push
addr16
inc
out
cmp
scas
popf
or
rol
sub
pop
inc
in
clc
popf
mov
jns
popa
jl
out
into
popa
je
cmp
mov
test
ss
std
std
push
lea
sti
push
out
jno
insb
jo
mov
lret
pop
push
add
adc
mov
jmp
cmpsb
cs
scas
fdivrp
cmp
mov
cld
sbb
les
decl
lret
push
cmpsb
outsb
or
inc
dec
js
mov
mov
cli
pop
cli
or
popf
xlat
call
out
outsl
sbb
cwtl
stos
xor
cli
in
mov
push
push
cltd
push
repz
out
lret
mov
outsb
iret
stc
stc
cmp
clc
cmp
ret
shr
cli
arpl
add
stc
pminub
ljmp
cmc
cmp
push
cmp
les
out
rcl
int3
jb
les
outsb
out
xor
aaa
in
lea
mov
clc
std
pusha
mov
sahf
ja
call
jp
je
push
push
cmp
xlat
clc
or
jl
lret
pop
jnp
mov
out
aad
mov
jbe
loop
xor
jne
sti
in
or
addl
mov
call
out
sbb
rcrb
in
rclb
out
outsb
icebp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
insb
rcll
cmp
clc
mov
cld
jne
mov
jge
dec
cmp
andl
fsubrl
mov
xorl
loop
mov
fsubs
sbb
xchg
pop
repnz
pop
and
adc
and
xor
cli
js
pop
mov
mov
xor
hlt
cmp
dec
lods
fbld
sahf
test
jo
cmp
in
mov
aaa
stc
out
sar
mov
sub
lods
sub
push
out
int3
push
pop
scas
popf
jb
pop
cli
or
out
enterw
sar
adc
pop
push
adc
in
aas
mov
pop
cmp
xor
cltd
cs
mov
test
mov
pop
cmp
test
inc
std
scas
xchg
rcrb
mov
xlat
adc
fwait
add
mull
cld
lret
aas
sbb
cs
fisubl
mov
loope
sbb
sub
aad
insl
fstpl
xor
and
jns
add
sahf
outsb
ss
mov
mov
sub
pop
push
fsubp
data16
inc
std
cmp
out
fsubrl
out
pop
push
fstps
mov
in
push
pop
ficomps
ficoml
xlat
je
je,pt
jnp
jge
lcall
fld
mov
pop
pop
mov
out
ret
push
adc
sar
jecxz
out
cmp
jne
adc
rcrb
fidivrl
xchg
xchg
mov
xchg
cmp
xchg
jb
inc
inc
dec
and
inc
lock
out
andb
scas
ja
popf
lods
es
mov
push
and
lahf
jecxz
pop
call
cmp
repz
cmp
xchg
loope
xchg
ret
ss
insl
inc
pop
pop
mov
aaa
int3
imul
jle
jl
sahf
cmp
ss
jl
fsubr
enter
xor
lock
cmp
adc
mov
stc
jmp
sti
and
sub
gs
pop
or
fldl
push
push
popa
cmpsl
jae
repnz
dec
sbb
push
jge
data16
add
rclb
dec
in
sub
mov
sub
or
js
mov
mov
aam
fisubrl
jmp
das
pop
std
cmpsl
jbe
dec
daa
outsb
outsb
fstp
fcmove
inc
notb
mov
andl
fstl
push
dec
mov
insl
jae
ss
mov
cs
in
cld
mov
out
fcomp
aad
clc
mov
jno
fidivs
cmpsb
rcll
pop
lods
pop
aaa
lcall
jno
sbb
cmp
ja
xchg
clc
arpl
fs
jb
mov
pop
xchg
clc
jne
jb
sbb
js
cli
mov
sub
test
inc
mov
push
insl
jp
pop
aas
icebp
push
sub
into
add
mov
xlat
adc
fidivrl
test
cltd
or
inc
je
pop
movsl
imulb
lret
jp
pop
mov
test
in
mov
mov
mov
clc
mov
lret
sbb
std
xor
sti
call
cmp
int3
cmc
mov
mov
mov
pop
add
sbb
out
mov
xchg
xchg
mov
and
add
das
cmp
sub
fnstcw
mov
jns
jge
cmc
cmp
fnstsw
cmp
shrl
or
stc
fldl
push
push
cmp
pop
cmp
cmpsl
into
cmp
notl
sarb
int
or
jb
dec
jge
pop
sbbb
mov
push
cmp
pop
adc
jle
bound
xchg
xchg
sti
stos
cmp
jmp
jne
sbb
data16
or
lods
addr16
mov
cli
ffree
aaa
popa
divb
inc
xchg
testl
adc
add
aad
or
sbb
xchg
cmp
sbb
jge
ss
mov
loop
cltd
push
fisubs
ljmp
lock
negl
sahf
fisubrl
int3
stos
data16
sbb
hlt
mov
cli
lret
outsb
idivb
bound
adc
fstp
adc
xor
hlt
adc
xor
insb
mov
pop
or
mov
fwait
cmp
mov
mov
imul
pop
inc
push
or
and
jmp
add
mov
cmc
sarb
in
jp
mov
addr16
bound
aam
adc
cmp
arpl
push
inc
std
cld
jle
aad
mov
mov
bound
out
inc
rcr
xchg
je
imul
push
jno
lock
mov
repz
jnp
sarl
stc
adc
out
pop
inc
jae
add
div
ds
ljmp
sahf
or
dec
and
ficoms
dec
notb
clc
push
or
jg
mov
std
pop
fdivs
adc
xchg
cli
sbb
fisubrs
divb
cmpb
outsb
popf
dec
lret
mov
cmp
cmp
jbe
insb
aam
push
dec
pop
xchg
jne
int
mul
push
in
cmc
sbb
pushl
cmc
pop
jp
jns
cmp
fistpl
pop
and
rolb
sarb
xchg
inc
outsl
push
outsb
mov
aas
jbe
movsb
and
inc
or
cmp
inc
stos
jne
add
push
push
fsubr
cmpsb
mov
scas
out
adc
jmp
jmp
cld
mov
xchg
lret
std
fldl
cmp
mov
ljmp
mov
fnstcw
inc
pop
data16
sbb
xchg
pop
fld
jno
mov
mov
sub
shlb
stos
into
clc
push
mov
outsb
mulb
mov
mov
mov
pop
int
mov
daa
insl
cmp
jo
mov
and
mov
add
adcb
xor
popf
lock
mov
in
xchg
sbbl
mov
mov
lcall
mov
xor
mov
pusha
mov
mov
push
mov
cmp
loope
loope
jmp
std
insb
pop
mov
dec
ja
outsb
push
push
aas
or
add
scas
in
lea
leave
push
inc
pop
cli
addr16
loopne
push
insb
sub
clc
sbb
iret
or
ja
sarl
cmp
dec
push
scas
aas
stc
mov
das
or
ljmp
cli
jne
out
adc
hlt
in
insl
jge
cmp
ficomps
add
cmp
aam
stc
mov
jge
sbb
ja
aam
jp
mov
push
or
pop
pusha
icebp
fiaddl
fiadds
mov
jecxz
out
loopne
jbe
clc
push
call
xchg
inc
in
je
outsb
inc
leave
sbb
or
test
mov
js
cli
jp
mov
lock
cwtl
cmp
push
mov
mov
subb
add
scas
jb
mov
jg
cli
sti
mov
jbe
and
adc
arpl
imul
out
ljmp
dec
divl
adc
pop
jmp
pop
dec
or
je
in
jne
in
sub
sti
stos
jo
jno
jmp
jg
push
inc
cmp
inc
test
movsb
lret
mov
test
cmp
ret
mov
int3
bound
xor
out
fnstcw
xor
call
push
mov
adc
add
sbb
inc
fistps
jmp
in
sub
jl
jl
int3
fadds
cmpsb
adc
xchg
cmp
cli
ljmp
mov
addr16
inc
vpinsrw
inc
out
pop
xor
dec
lret
ljmp
std
call
xchg
dec
dec
mov
fwait
xlat
lret
cld
leave
fimuls
mov
push
fcmovne
xchg
cmp
inc
stc
mov
push
add
xchg
clc
lods
je
fimuls
adc
cs
xor
fcoms
cltd
outsb
sub
mov
in
mov
push
out
dec
inc
push
je
in
push
scas
mov
aam
jb
cltd
xor
push
fsubrp
mov
jne
mov
out
mov
adc
fucomip
and
insb
aas
mov
sbb
in
push
or
adc
add
mov
cmpsb
rcr
jmp
push
ficoml
pop
sti
arpl
je
imul
idiv
testb
fs
pop
cli
push
test
pop
imul
xchg
fldz
cmp
enter
xor
out
fcmovu
imul
mov
pop
out
mov
int3
inc
loopne
mov
out
cmp
lret
hlt
int3
cli
lcall
aam
mov
fsubrs
fcompl
loop
in
out
pop
call
ret
enter
nop
pop
not
fadd
inc
jno
ficomps
in
mov
out
adc
xor
cltd
int3
cli
int3
into
shl
aam
pop
insl
fdivs
ficompl
loopne
loop
in
pop
out
call
mov
repnz
mov
imulb
ss
lcall
int
bound
insl
mov
mov
xchg
bound
insl
lcall
lcall
test
stos
mov
lods
insl
scas
ss
mov
mov
mov
mov
mov
lcall
movsb
mov
pop
cmpsb
insl
test
stos
lcall
mov
mov
pop
mov
mov
aam
data16
lock
ficomps
in
out
call
in
ss
lcall
div
clc
mov
cli
insl
cld
mov
mov
cli
lcall
mov
mov
ss
lcall
lcall
mov
xchg
push
idivb
sbb
mov
aaa
gs
or
aad
negb
clc
push
rcr
mov
insl
fdivrs
sub
cli
mov
cli
lcall
inc
test
imull
ffree
call
divb
les
clc
imulb
in
out
mov
mov
jbe
mov
cmp
orb
aas
int3
pop
negb
ffreep
mov
pushf
dec
cmpsb
aam
inc
inc
jnp
inc
dec
pop
dec
fildll
pop
ss
in
hlt
pop
xchg
xchg
sbbb
mov
loop
sbb
js
jnp
js
out
jp
xlat
xchg
mov
dec
test
lret
shrl
cli
into
rclb
xor
repnz
jns
xor
rol
fdivs
andb
mov
cmp
mov
xchg
adc
cmpb
shll
sti
cli
gs
stos
in
push
popf
cwtl
mov
xchg
stos
arpl
sbb
inc
clc
aad
std
hlt
mov
out
lret
lret
mov
xorb
jns
sub
or
rclb
int3
cld
jne
push
aas
test
clc
xchg
sahf
inc
xchg
push
pop
cld
lods
cmp
ror
cmp
mov
mov
adcl
xor
orb
sti
or
sub
push
jns
sub
pushf
lock
jl
fadds
outsl
sub
jle
or
push
test
in
popa
clc
fdivs
repnz
xor
push
mov
or
xchg
mov
pushf
push
jae
jne
dec
hlt
jmp
negb
sub
testb
stos
xchg
mov
loopne
sbb
fwait
mov
xor
mov
int
cmc
or
add
or
loope
push
test
les
mov
jmp
leave
inc
test
fdivr
lods
push
clc
test
jmp
jp
sub
ljmp
dec
outsb
and
ljmp
jo
inc
jnp
aam
jp
ret
cmp
adc
stc
and
sbb
loop
push
clc
pop
clc
jge
out
rcr
loop
xor
push
jb
cmp
fsubrs
add
cmp
lods
inc
cmpsb
cmp
or
cmpsb
cmc
push
test
int3
aad
jne
es
sbb
mov
lret
movsl
std
inc
clc
cmp
shr
inc
outsl
out
fldl
imul
popa
xchg
inc
dec
movb
pop
cld
popa
jge
add
mov
mov
sub
into
aaa
sbb
jle
jp
clc
cmp
sbb
scas
stc
jns
jbe
jge
cli
daa
jno
push
test
mov
insl
inc
jge
je
mov
lods
dec
cmp
aam
cmp
cld
jo
in
in
xchg
fdivr
hlt
sbb
cmp
cli
jmp
mov
dec
xchg
sub
jp
hlt
call
jge
jmp
fmull
push
orb
and
clc
adc
orl
mov
mov
fcoms
stos
pop
pop
fnstcw
cli
jl
clc
out
lcall
adc
xchg
add
sahf
bound
xor
stos
mov
xchg
lret
addr16
in
and
inc
jae
or
mov
jno
sub
mov
add
adc
insb
sbb
push
inc
je
popf
call
xor
pushf
sub
dec
idivb
not
les
mov
xchg
xchg
pop
sbb
ds
or
add
lret
and
cmp
pop
in
push
mov
cmp
jne
stc
popa
sti
insl
div
idivl
push
jg
jne
xlat
in
sbb
cmc
cmpsl
loope
shl
popa
add
pop
stos
push
jmp
mov
insb
or
into
xor
jl
and
mov
mov
cltd
push
ss
lods
dec
call
xor
das
stos
inc
scas
add
mov
mov
incl
pop
call
movsl
jbe
negb
and
jp
jmp
push
mov
xchg
sbb
xor
lahf
cmc
sbb
fwait
sub
sahf
test
mov
sbbb
in
xor
insl
ja
int
sub
inc
out
jae
push
jmp
xchg
or
mov
mov
fdivrl
adc
roll
out
mov
lret
push
pop
cmp
dec
data16
pop
mov
lods
aam
mov
push
cld
ficompl
sti
shr
gs
jecxz
les
cli
lret
sbb
mov
dec
popf
insl
push
jl
or
mov
std
data16
push
out
mov
mov
into
outsb
xchg
in
cltd
or
inc
dec
int3
out
cmc
dec
dec
mov
loop
inc
imul
out
adc
inc
dec
cli
lret
dec
ror
lock
xchg
std
int3
daa
les
mov
lret
pop
rorl
out
xlat
dec
imul
insb
xchg
stos
fiaddl
arpl
leave
mov
out
or
add
mov
rcll
jmp
repnz
inc
fs
aaa
pop
push
dec
fistpll
mov
pop
pop
push
inc
stos
pop
push
cmpsl
repnz
call
mov
loop
mov
int3
push
sbb
xor
xchg
push
mov
aam
push
mov
cld
xchg
mov
rolb
mov
or
xorb
cli
push
and
inc
outsb
mov
inc
jne
fninit
cmp
ljmp
cmpb
bound
outsl
cmp
mov
and
lds
cmp
mov
dec
ljmp
push
sti
and
sbb
imul
mov
mov
xchg
in
mov
hlt
imul
jb
and
ficomps
add
sti
dec
mov
dec
and
aas
xor
lret
pusha
sbb
dec
mov
lahf
mov
cmp
xor
icebp
mov
add
jno
lock
add
hlt
shlb
fcoml
or
push
gs
mov
aad
repz
insb
jecxz
imul
inc
mov
push
jb
xchg
leave
shr
sbb
imul
mov
cmp
subb
enter
mov
inc
add
cmp
dec
mov
mov
into
addr16
mov
mov
mov
out
pop
pushf
mov
sarb
int3
adc
push
loop
lcall
mov
mov
pop
adc
dec
sub
mov
push
ret
fucomi
mov
sbbl
cmp
fidivs
jle
push
sbb
mov
pop
xor
jp
stc
mov
add
es
or
mov
shl
mov
leave
out
aad
and
lret
mov
xlat
ljmp
sarl
sti
push
popf
imul
dec
stc
call
push
out
jbe
ja
jns
add
lahf
lahf
dec
cmpsb
imul
hlt
jle
dec
out
jp
jmp
in
pop
sbb
out
ja
aas
popa
xor
fwait
cmc
js
loopne
icebp
div
out
sbb
mov
out
mov
and
adc
imul
cmp
idivb
iret
lock
fsubr
and
push
repnz
pop
add
cs
out
lea
in
jne
pop
hlt
cmp
pop
aam
int
lock
jecxz
fiaddl
dec
push
loop
or
imul
movsl
push
in
loop
fcomi
ds
in
faddp
fdiv
fcmovu
mov
movsb
push
sti
mov
cmp
cld
mov
cli
stos
xor
std
mov
add
add
cmc
mov
fmulp
jb
cli
sti
push
pop
cld
int
and
mov
repnz
stos
xor
cli
mov
or
pop
push
mov
xchg
in
fwait
lods
imul
cmc
cmp
pop
jge
cli
inc
cmp
mov
lods
mov
mov
push
xor
sbb
inc
pop
mov
fisttpl
hlt
inc
mov
negb
pusha
fstpl
mov
clc
xlat
in
testl
cmp
pusha
cmp
ds
add
rcll
imul
idiv
cld
jmp
and
dec
fwait
in
repnz
dec
neg
out
cmp
mov
cmp
jnp
or
out
sti
jg
xchg
pop
jp
fadds
mov
into
lahf
push
loop
aad
mov
stos
push
enter
aas
pop
adc
jle
out
adc
shr
fdivs
mov
insl
pop
aam
push
or
imul
jle
fdivrs
gs
insl
jg
loop
out
fadd
lret
data16
push
mul
insl
dec
int
rcrb
cmp
mov
and
xor
cmp
popf
ret
mov
and
mov
push
ss
mov
pop
jbe
cli
pop
or
shl
sti
cli
mov
adc
mov
fiaddl
hlt
xchg
popf
jmp
repnz
aaa
sti
jl
xchg
in
add
mov
jl
test
popf
imul
jle
mov
into
mov
jns
fwait
jo
pop
jmp
out
cmp
fcompp
neg
xchg
and
push
js
or
das
imul
mov
movsb
fs
inc
mov
data16
push
jg
aad
xchg
mov
mov
xchg
fdivrp
xor
lret
jnp
mov
xchg
inc
popf
in
insl
xchg
enter
mov
cmp
insb
xchg
jbe
pop
adc
lcall
jge
and
lock
push
sbb
cld
mov
cmp
mov
mov
mov
pop
jp
mov
pop
je
sub
ret
mov
mov
mov
ljmp
cmp
fisubs
sub
sub
in
ret
cwtl
xorb
ss
xchg
pop
xlat
shlb
mov
adc
in
movsb
inc
xor
mov
fisttpl
shll
rcll
mov
shrb
out
mov
fnstcw
push
or
rcrl
scas
out
test
cmpsb
xchg
push
jns
ficompl
mov
xchg
mov
xor
les
mov
ret
ds
jg
pop
es
out
jns
pop
inc
cltd
mov
push
mov
ja
lea
adcl
xchg
out
test
addr16
jne
popa
test
dec
arpl
fdivp
mov
clc
ja
cmp
popa
jle
pop
stc
push
lock
mov
inc
push
iret
jo
scas
inc
ret
inc
jg
idiv
aam
xor
add
push
or
jp
mov
pop
add
inc
sbb
clc
outsb
mov
jnp
and
inc
inc
or
pop
sub
fucom
outsb
divl
data16
mov
data16
in
fsubs
scas
ljmp
cmp
nop
xchg
aaa
jmp
hlt
pop
imul
pop
out
and
cli
pop
jnp
cli
fwait
cld
sbb
js
pop
jbe
lods
ljmp
mov
pop
mull
cmp
imul
jp
ficomps
out
mov
jb
cmc
and
dec
jge
sbb
jns
cmp
inc
pop
aaa
pushf
inc
insb
popf
jae
jge
cld
movsl
jle
push
xchg
ds
call
inc
aam
jbe
xor
add
sub
insl
cli
mov
sub
sbb
ljmp
insb
cmc
mov
in
imul
hlt
sarb
mov
xchg
jle
pop
in
cmpsb
popa
outsb
cmpsb
hlt
sahf
fisubrl
insl
clc
insl
adc
les
or
jbe,pt
push
pop
jle
gs
ret
rcrb
fs
in
lods
jbe
or
jl
pop
push
adc
addr16
xchg
out
push
popa
push
cld
les
lods
in
cmp
loope
cmp
jnp
dec
or
jbe
inc
cli
std
pop
jl
out
lret
sti
jmp
lcall
sbb
push
add
cmpsl
add
add
jp
imul
push
push
out
push
js
testb
shll
outsb
pushf
pushf
inc
push
in
mov
add
push
shll
js
cmc
hlt
or
stc
popa
std
daa
inc
in
icebp
subl
je
jg
cmc
sbb
outsb
jge
sarl
adc
addb
daa
dec
call
pop
repz
mov
adc
dec
cmc
out
dec
jno
mov
popa
push
mov
sbb
into
pushf
lea
shl
push
inc
je
shrl
jbe
hlt
or
push
sbb
sahf
cli
pop
ds
test
lds
pusha
cli
inc
push
push
gs
inc
stc
sbb
mov
out
mov
sbb
jmp
sbb
mov
and
cltd
fstl
dec
popa
sahf
and
in
outsb
sub
dec
sbb
cli
icebp
inc
mov
shrb
push
mulb
data16
inc
dec
hlt
xchg
push
push
mov
cmp
cld
pop
add
or
popf
adc
cmp
inc
pop
sbb
icebp
push
popa
cmc
cwtl
cmc
cmc
fwait
xor
imul
mov
jecxz
lret
hlt
xchg
jno
pop
gs
jge
lret
std
fstps
bnd
loopne
aas
pop
repnz
hlt
inc
addb
lds
call
fcomps
les
xor
pop
jecxz
icebp
and
cmp
out
aad
call
adc
mov
pop
clc
push
pop
hlt
les
jo
inc
pop
in
div
hlt
je
mov
cmpsb
push
dec
jle
in
nop
inc
push
sub
cmpsl
mov
leave
mov
fsubrs
lret
pop
pop
jg
push
in
in
jne
inc
cld
mov
aam
sarl
sahf
fdivs
pop
dec
shrl
idivl
movsb
adc
aas
stc
inc
ss
mov
scas
scas
add
pop
mov
mov
lea
je
mov
mov
inc
bound
fnsave
cs
jae
loop
fcomps
mov
lret
xchg
dec
mov
mov
jne
xchg
lret
shrl
mov
out
push
outsl
mov
inc
pop
fsubrp
pop
test
push
dec
jb
stc
dec
xchg
je
inc
jnp
in
push
inc
sub
mov
and
push
xchg
aam
cmc
fdivrl
fisubrs
loop
jmp
cmp
lock
add
push
push
push
xchg
js
imul
pop
shl
leave
loop
popa
jp
mov
mov
lret
push
push
mov
in
cmp
pusha
or
shlb
popa
addb
lret
cmp
push
fs
jbe
movsl
inc
test
fcmovbe
jge
xchg
aad
push
loop
rclb
mov
or
out
hlt
pop
fsubr
fmull
std
stc
hlt
or
push
les
push
divb
imul
cmp
aas
push
or
sbb
inc
cmp
mov
int3
xor
cld
cld
fidivrs
outsl
outsb
popa
js
bnd
out
stc
pushf
jb
in
push
out
stos
js
mov
les
inc
cld
mov
popa
xchg
xchg
push
push
fdivl
push
mov
jle
mov
out
mov
or
cmp
push
imul
jle
jge
push
test
mov
inc
cli
lret
aad
loop
out
jnp
inc
mov
xor
inc
adc
mov
clc
xor
cwtl
idivb
mov
out
hlt
cmp
mov
sarb
fcmovb
enter
out
shl
les
push
ret
into
out
lret
mov
lods
mov
decl
sbb
adc
or
out
ret
mov
push
cmp
in
mov
aas
cltd
jp
call
sti
adc
icebp
mov
call
xorl
pop
clc
xor
fidivrs
in
in
hlt
loop
shlb
jg
mov
pusha
loop
and
cmp
popf
std
dec
mov
jb
ret
mov
sti
lds
mov
out
les
sbb
loop
in
cmp
push
lret
mov
test
jo
ds
out
add
mov
jae
fisubs
sarb
icebp
jb
jg
loopne
int3
in
call
mov
hlt
insl
clc
mov
mov
adc
insl
stos
push
jp
cmp
add
and
pop
lods
add
adc
xchg
js
movups
roll
inc
mov
push
clc
ret
stc
jg
div
stos
imul
les
sbb
or
ljmp
jl
loop
xchg
fistl
test
sbb
mov
iret
adc
es
push
mov
mov
imull
and
popa
das
pop
cmp
into
ja
test
jge
add
sub
or
xchg
cmc
fwait
cmpsb
cmpsl
inc
mov
imul
clc
pop
mov
mov
push
mov
jle
loope
inc
jge
popa
test
jae
rcll
ja
xchg
adc
push
lock
in
dec
mov
enter
jl
loop
into
fdivrs
cmp
stc
mov
cld
inc
jp
mov
les
xchg
daa
or
cmp
fiaddl
aam
ljmp
cmp
add
fisttpl
mov
inc
sbb
sbb
notl
addr16
mov
scas
iret
jne
add
sub
data16
aam
loope
add
xchg
rcrl
jge
mov
jg
xor
xchg
lahf
push
cmp
dec
std
repnz
jle
xlat
insl
jns
cltd
test
adc
js
add
das
mov
es
pop
stc
and
loopne
xlat
rcl
mov
xlat
push
and
popf
inc
subb
cmp
jae,pt
icebp
xor
stos
xorb
pop
lcall
xchg
stc
jo
cmp
test
sbb
jne
lock
and
sub
mov
das
cltd
in
cli
cmp
xchg
cltd
fidivrs
mov
sub
test
into
test
out
lea
aad
push
cmp
pop
outsb
mov
pusha
xchg
repz
in
jge
push
or
roll
fwait
pushf
cmpl
add
jmp
jmp
imul
aam
fisubrs
in
sub
mov
aad
outsb
std
fsubr
fdivrl
enter
into
gs
pop
adc
jp
xchg
imul
mov
in
pop
and
mov
imul
cmp
sub
notl
push
cmpl
jge
repz
imul
pop
sbbb
jge
shr
xor
shl
pop
aad
out
movsl
test
clc
and
into
mov
jge
std
neg
popf
out
clc
jnp
mov
mov
ljmp
rcrl
add
jmp
pusha
mov
mov
aam
or
repz
push
pop
cmpb
insb
push
rcrl
movsb
jp
adc
push
lods
lahf
push
pop
xchg
jle
stos
into
push
dec
jnp
dec
popa
sub
roll
ss
push
jg
xchg
cmp
push
or
cmp
mov
adc
push
xlat
cld
test
or
loopne
fnstcw
inc
mov
arpl
and
hlt
stc
ftst
rorb
aad
bound
or
mov
mov
lods
shll
lret
sbb
fnstenv
sbb
cld
iret
jbe
nop
fisttpll
jl
popa
xorl
cmp
xor
ret
cmp
pop
mov
nop
push
cmp
rcrl
adc
sbbb
std
inc
pop
andl
cmp
adc
fcomip
movb
sbb
in
movsb
fwait
je
lahf
arpl
pop
ret
call
pop
dec
sub
outsl
pushf
cld
add
jl
inc
in
insb
sti
jle
hlt
outsl
sbb
je
lret
xlat
add
lret
test
pop
mov
popa
adc
cmc
pop
repz
cltd
and
int3
dec
xchg
dec
int3
push
dec
ret
ret
lret
dec
sar
rclb
inc
fucomp
das
out
inc
pop
mov
fisubrs
test
cmp
aaa
scas
cltd
mov
jmp
sub
jne
bound
loope
or
mov
pop
fisubrl
mov
call
into
lods
mov
aaa
daa
adc
ss
lods
fldl2e
xchg
stos
popf
cs
or
subl
xchg
subb
xorl
push
cmp
sub
mov
sbb
push
cltd
les
xor
adc
xor
cli
jae
bnd
sbb
out
or
mov
clc
sbb
arpl
out
push
dec
call
loop
mov
out
loopne
repnz
call
sbb
fsub
shr
adc
xor
loopne
cltd
test
push
ret
icebp
push
mov
xlat
insl
pusha
xchg
cmc
ret
or
ficoms
subb
enter
ja
pop
scas
mov
and
xchg
xor
adc
cli
int3
push
cli
inc
int3
pop
ljmp
cmc
and
insb
or
pop
push
jnp
sub
xlat
cmp
lock
sub
add
aam
jns
add
push
cmp
inc
ret
mov
cmp
hlt
xor
pop
sahf
mov
xchg
add
ds
in
fwait
inc
fisubrs
push
xor
mov
ja
cmp
hlt
mov
cmc
fdivrs
aam
test
aas
pop
mov
xchg
pushf
push
imul
xchg
mov
xor
xchg
cs
out
hlt
pushl
repz
and
popf
fidivs
jbe
xchg
add
xor
inc
inc
sbb
mov
jae
fnstenv
ljmp
call
imul
lds
movsl
sub
pop
jg
lcall
push
nop
push
shr
imul
adc
or
fwait
scas
psrad
rorl
stc
call
pushf
xchg
push
in
xchg
aad
mov
in
rorl
cmc
in
shll
push
fcmovnb
pop
sub
scas
push
inc
mov
and
popa
mov
callw
inc
jge
out
out
jns
adc
test
insl
and
out
clc
and
cs
loopne
bound
icebp
les
hlt
fcmovbe
loopne
popa
jns
in
jge
xor
sbb
sbb
imulb
ljmp
jmp
xchg
ljmp
cs
and
dec
data16
sahf
jl
ja
pop
cmc
xor
push
cmp
int
cli
or
std
jo
cld
das
fsubrl
cli
adc
into
jbe
divb
lret
jb
int
mov
jbe
lret
jle
dec
jle
lret
dec
mov
leave
cmp
dec
std
lret
in
int
cld
and
sbb
push
in
adc
arpl
push
or
out
cmp
imul
lods
rclb
loopne
movsl
mov
mov
mov
sbbl
ljmp
mov
dec
popf
inc
fucomp
pop
repnz
mov
cmp
cmp
aaa
mull
inc
outsl
hlt
fisttps
xor
cmpb
call
mov
div
movl
add
adc
icebp
fists
fdivs
jae
inc
push
pushf
sub
mov
jge
int3
push
push
lahf
scas
cmc
je
inc
jl
bnd
jno
xor
dec
in
cli
pop
hlt
jle
repnz
imul
ret
out
push
enter
xchg
cmpsb
fcoms
mov
hlt
ljmp
ret
in
iret
pop
es
push
ljmp
add
pop
fisttps
jge
out
push
and
pop
xlat
mov
cmp
fimull
add
icebp
xchg
and
popf
icebp
movsb
xor
out
jbe
out
arpl
negb
lds
ja
popa
fcoml
lock
ljmp
mov
mov
les
pop
pop
movsb
data16
fidivrs
shll
cli
in
mov
out
and
fidivrs
pop
lahf
je
cld
inc
jb
mov
dec
addr16
jae
or
cld
push
mov
in
jmp
insl
out
fisubrs
mov
jmp
movsb
gs
ret
mov
cmpsl
mov
push
bound
xor
dec
jg
test
imul
lds
insl
lds
cld
scas
fidivs
hlt
jb
std
cmp
pop
cmp
mov
cli
fsts
mov
iret
xor
cld
fmulp
and
popa
dec
sar
lods
sbb
jp
into
inc
jecxz
pop
pop
jbe
jge
fxtract
imul
inc
jge
inc
cld
push
ret
clc
xor
cmp
mov
cld
lock
push
stos
idivb
sub
xchg
cmc
inc
jno
xor
les
aad
stos
test
cwtl
imul
pop
loop
add
test
std
icebp
jae
inc
fcompl
xchg
cmpsl
sti
mov
fs
outsb
out
fstpt
ljmp
pop
sub
cmp
xchg
popa
mov
dec
jg
push
cld
mov
out
xchg
pop
stc
inc
mov
pusha
lret
cmp
mov
pusha
mov
pop
lock
dec
jae
xchg
lods
fnstenv
or
shll
mov
mov
ds
pop
fiaddl
push
jbe
jle
stos
test
insb
lods
jno
pop
shl
sub
mov
mov
mov
jb
repnz
cmpb
fucomp
push
mov
mov
pusha
adc
mov
jp
arpl
cmp
enter
stos
adc
mov
xor
aaa
insb
jns
push
push
outsb
addr16
test
in
xchg
ljmp
ret
inc
jbe
pop
mov
inc
and
pop
and
lahf
jg
inc
push
stc
pop
imulb
fucomi
outsl
addl
gs
inc
loopne
xchg
mov
cwtl
outsb
sbb
mov
sbb
lds
add
xlat
sti
xchg
push
fmull
jnp
mul
adc
xchg
repnz
pop
xorb
insl
mov
sub
sti
pop
cld
push
aas
aas
xlat
scas
lock
mov
vpinsrw
in
stos
js
jns
ficoms
cmpl
divb
divb
lods
cs
cmp
in
ss
xor
xor
pop
cmp
movsl
stc
add
lret
icebp
jmp
test
int3
popf
and
movsl
popf
lret
ret
xor
je
outsl
dec
out
hlt
pop
ror
rorb
cli
clc
ret
cli
out
xchg
cmp
and
mov
xchg
fs
insl
fsubrl
cli
fisubrl
fisttpll
pop
or
pop
into
pop
mov
mov
outsl
jbe
mov
in
jl
repnz
js
popf
pop
xor
push
into
mov
into
outsl
pop
cmp
int3
not
dec
jp
neg
pop
shrb
out
addr16
inc
dec
loope
mov
mov
shrb
mov
idivb
or
mov
push
fnsave
inc
pop
fs
mov
lret
lods
jnp
into
sbb
lods
ret
pop
js
xchg
push
vshufps
cmpsb
or
hlt
into
sbb
push
fadd
mov
or
pop
jmp
sub
sbb
aam
sub
pushf
in
std
jl
jnp
and
insl
cld
mov
call
add
push
jbe
or
cmp
jp
insl
mov
fcoms
mov
mov
popa
test
mov
sar
je
push
or
or
lret
adc
mov
icebp
jmp
mov
data16
mov
lds
push
xchg
data16
out
imul
jno
icebp
or
jne
xchg
inc
out
jnp
inc
lcall
lds
dec
shrl
dec
leave
inc
dec
cli
mov
xor
mov
mov
jge
in
fmul
and
jbe
inc
mov
addl
je
in
jb
sub
lret
add
pop
imul
cmp
push
stc
push
jl
sbb
mov
push
aas
jns,pt
out
jnp
js
adc
bnd
int3
or
lcall
mov
dec
adc
les
cmpsl
mov
inc
or
insl
popa
cmp
ja
mov
iret
add
pop
imul
inc
cmp
lcall
mov
fidivrl
pop
popf
mov
mov
lret
aad
out
sarb
pop
ss
aad
fisttpll
insb
adc
sub
pop
fnstsw
cmp
push
mov
inc
iret
in
dec
lods
cmp
fprem
lret
addr16
std
mul
sbb
or
xchg
push
mov
push
jae
daa
push
mov
sbb
insb
cli
js
lods
mov
cmp
loop
sbb
filds
in
xorb
lea
mov
inc
inc
daa
cmp
insl
push
inc
mov
lcall
insl
and
jmp
mov
sub
hlt
ss
lret
inc
dec
sbb
popf
mov
cld
jo
cs
dec
into
jne
rorl
sbb
sti
mulb
or
js
xchg
jae
push
imulb
fsubrs
fidivs
in
out
dec
test
xor
sbb
int
cld
xor
scas
adc
fldl
inc
sub
cwtl
inc
xor
rolb
negl
adc
or
mov
stc
lret
lret
movsl
push
jns
or
in
push
mov
outsl
mulb
sbb
add
shlb
inc
lds
mov
rep
add
in
push
insb
cmp
jecxz
scas
call
pusha
test
movsl
call
arpl
imulb
imul
push
nop
xor
in
jnp
enter
addr16
jae
test
cli
push
adc
repz
cli
arpl
jb
mov
stc
sbb
inc
sbb
inc
or
ljmp
lea
jle
cli
pop
xchg
fidivrs
fsubrs
mov
mov
lret
fld
clc
push
arpl
jle
hlt
shrl
add
xchg
rep
cs
imul
iret
data16
or
mov
mov
scas
pop
pop
adc
insb
sti
lods
xor
iret
xchg
mov
pop
fimuls
data16
jns
pop
dec
cli
aas
outsb
lahf
addr16
jno
pop
dec
bnd
xchg
xor
stos
loop
iret
or
xor
cli
jl
flds
fdivl
xchg
movl
adc
push
and
fucom
pop
mov
mov
or
stc
addr16
mov
gs
scas
push
out
push
imul
inc
call
std
mov
push
mov
xor
mov
into
jmp
cld
pop
mov
and
mul
hlt
jle
pop
cli
mov
xchg
insl
negl
ss
and
sbb
adc
xlat
mov
addr16
scas
repnz
repnz
call
pop
cmc
jnp
fsubrp
cld
sub
add
loopne
fs
mov
leave
cld
ljmp
mov
sbb
cli
in
popa
in
add
xor
pushf
in
int3
adc
pop
rolb
in
and
or
cmp
xchg
adc
inc
in
xor
roll
mov
pushf
sbbb
mov
mov
lds
cli
cli
mov
add
movsb
outsw
inc
out
jmp
mov
xchg
mov
dec
loope
push
push
in
cmp
cld
sbb
js
mov
repz
icebp
jge
xchg
call
ret
aad
cmpsb
fwait
add
sub
clc
fs
mov
fwait
push
xor
ljmp
mov
push
push
xchg
mov
dec
cli
std
int3
ja
pusha
shrl
cmp
mov
mov
std
inc
cld
or
int
js
add
cmc
mov
adc
imul
frstor
ret
jl
sar
lds
cmp
dec
mov
pop
cli
push
mov
popa
push
xchg
cmp
mov
imul
mov
cmp
out
ficompl
inc
cmp
in
orl
test
dec
cmc
lea
jae
or
ss
mov
fstpl
dec
xchg
les
or
pop
lret
ss
fmull
pop
hlt
loope
push
repz
js
out
push
lret
inc
cld
jno
mov
popa
xchg
lods
mov
cmp
or
and
dec
in
pop
loop
dec
push
in
jg
nop
and
popf
xor
std
mov
pop
loope
push
jle
jp
roll
push
add
std
pop
push
xlat
or
push
mov
les
mov
cmp
or
adc
push
fs
outsl
leave
loop
push
imull
dec
lret
push
push
add
insb
ja
mov
jae
xchg
sub
xorb
xchg
jl
inc
jge
inc
push
addr16
inc
ds
ljmp
pop
jo
sbb
or
ficomps
add
push
jle
ds
jle
cmp
inc
jge
and
mov
sbb
and
mov
push
ds
shrb
push
mov
and
lret
sbb
lcall
pop
jp
push
jnp
cltd
xor
int
mov
fcoml
sbb
inc
movsb
and
mov
ja
ss
aad
inc
pop
sbb
inc
xchg
jle
xchg
loop
das
add
lahf
subl
loop
repnz
fdivrp
push
jle
xchg
rcll
sti
stc
cmp
xchg
cmp
test
aas
test
mov
std
or
xchg
sti
cmp
mov
js
ret
repnz
mov
mov
dec
lods
and
subb
ficoml
cmc
lcall
push
sbb
mov
sti
and
adc
in
popa
mov
push
cmc
push
push
mov
mov
push
clc
loopne
jne
xchg
jecxz
xor
mov
or
add
imul
mov
or
repz
mov
inc
pop
andb
gs
mov
stc
mov
jmp
orl
hlt
or
xchg
cli
xchg
pushf
cltd
sti
lcall
loope
push
xchg
call
adc
adc
pop
test
pop
fdivl
fdivs
mov
arpl
adc
or
out
jmp
daa
xor
add
das
adc
negb
pop
mov
xchg
pop
jae
inc
jne
adc
mov
adc
aad
push
xlat
jp
dec
test
dec
mov
or
push
cwtl
mov
mov
cmp
data16
outsl
mov
mov
xchg
mov
lcall
insb
jmp
clc
push
pop
test
mov
sub
mov
mov
jne
ds
adc
jp
inc
mov
xor
pop
stos
decb
std
push
mov
fdivrl
pop
insl
push
jge
pop
jmp
pop
sar
mov
shll
pop
inc
lock
insb
divl
fwait
hlt
aas
ljmp
notb
test
popa
mov
cmpl
aam
sti
jbe
lcall
loopne
xchg
pop
push
imul
ds
pop
mov
push
in
js
fiadds
and
cmp
mov
mov
int
mov
dec
pushf
cli
scas
inc
pop
cmp
mov
cld
mov
test
test
add
and
sbb
pusha
xchg
jnp
mov
or
int3
dec
mov
dec
dec
push
rol
out
dec
lods
and
pusha
in
jb
mov
gs
lret
lock
dec
xchg
dec
dec
cmp
sub
clc
mov
shrl
xchg
inc
cs
mov
push
test
jp
mov
clc
jne
aad
pop
dec
jo
cmc
xorb
fimull
xchg
and
mov
jge
jmp
sti
pop
cmp
xchg
push
jge
daa
pusha
cltd
mov
fucomp
jae
repnz
mov
int
out
addl
lahf
pop
fldt
fcomps
pop
loopne
call
push
or
pop
in
fcmovbe
lahf
mov
lods
jne
shrb
add
jecxz
stos
inc
aaa
shll
xor
ljmp
and
shl
enter
clc
into
mov
les
xchg
ljmp
in
push
clc
fstps
rcr
jge
or
dec
cmp
fwait
test
jb
inc
push
jmp
loope
sbb
ret
icebp
clc
mov
xchg
sub
popf
mov
mov
lods
dec
push
aam
insl
xchg
cli
or
pop
out
mov
cs
jle
sarb
popa
xchg
mov
cmc
xchg
gs
push
add
jge
popa
add
cmp
imul
lock
jb
cli
nop
negb
sub
in
pop
in
fnstcw
arpl
jae
xchg
jge
and
fstpl
mov
inc
add
adc
into
ss
ret
pop
fsubrl
lods
test
push
fstpt
out
xlat
fs
fcoml
pusha
loopne
ret
jno
popa
cltd
inc
ja
xchg
dec
mov
inc
mov
ljmp
cld
insl
inc
mov
fnstenv
cmpb
cmp
rcr
std
outsl
push
pop
in
rcr
movsb
pushf
sub
mov
mov
insb
addr16
popf
push
and
in
and
aad
fimuls
and
fdivl
fisttpll
dec
das
pop
jbe
in
xchg
fucom
mov
out
jbe
clc
ficompl
mov
in
sub
test
mov
repz
inc
stc
test
mov
orb
push
push
pop
ret
in
les
pop
cmp
outsb
movsb
add
std
loopne
cmp
roll
fidivl
js
push
push
imul
or
inc
pop
push
and
sbb
xchg
push
imul
mov
in
and
stos
sbb
xor
jecxz
add
fsubl
movsb
mov
test
out
xorb
xor
push
push
idivb
aaa
sbb
iret
lds
in
call
out
out
loop
mov
lret
dec
repz
jge
mov
out
movsb
hlt
cmpsl
mov
jl
cmp
sub
andl
mov
ljmp
jo
ss
movsl
jne
lock
sub
jge
mov
int3
sbb
stos
outsb
mov
sbb
push
xor
mov
pop
cld
cld
in
jge
cmpl
cli
shl
daa
hlt
imulb
xchg
jns
mov
xchg
cmpsb
sbb
pop
mov
dec
xchg
add
mov
popa
xchg
mov
cs
outsl
out
pop
mov
loope
loop
inc
in
fcmovnu
call
pop
mov
adc
leave
mov
inc
outsl
lock
xor
adc
jnp
and
mov
push
push
mov
cmp
fistl
mov
xchg
fstps
fisttpll
scas
dec
roll
or
or
pop
pop
not
mov
out
ds
loopne
ss
pushf
std
std
ja
test
aam
xchg
fdivl
ss
fnstsw
pusha
sar
sub
fs
imul
pop
jb
js
scas
std
jns
frstor
inc
sti
cmp
lret
cmp
pushf
jnp
aas
enter
dec
dec
push
pop
aas
gs
js
repnz
add
imul
adc
stc
bnd
aam
adc
test
test
aam
lods
jle
mov
mov
int
mov
daa
out
call
adc
jmp
add
pop
aad
es
fimull
cmp
stos
push
in
push
loopne
or
dec
mov
cmpsl
subl
in
jae
jns
mov
mov
mov
std
pop
mov
push
mov
mov
iret
dec
cmp
or
cmp
mov
popa
dec
jg
cmp
mov
ja
movups
mov
hlt
sbbl
loopne
sbb
pop
ljmp
in
sbb
inc
sbb
scas
sub
and
ljmp
xchg
test
in
cmp
mov
loopew
or
jg
mov
jne
std
inc
add
rclb
mov
mov
jmp
cli
xchg
movsl
jns
sahf
add
imul
dec
pop
lret
in
xchg
push
ljmp
jmp
xchg
or
fimuls
shlb
xchg
inc
jns
jp
jbe
sbb
pop
shrb
jae
sbb
fs
in
cmp
sahf
stos
xchg
mov
lods
or
cmp
fstl
scas
sti
cmp
rorl
sti
out
ficomps
fcmovnu
cmpb
or
and
push
cmp
repnz
fbld
jmp
xor
fwait
cltd
popa
mov
cld
idivb
nop
popa
cld
xor
mov
int
and
loop
shrb
scas
jne
jmp
and
rcll
mov
sti
xlat
insl
fiaddl
pop
cmp
lods
rcl
imull
mov
aas
int
cmp
xor
shl
dec
divl
lret
xor
in
arpl
dec
mov
cmp
stc
adc
and
aad
mov
mov
xor
mov
aam
jp
pop
jnp
jb
pusha
xchg
mov
in
cmp
aam
sbb
and
cld
pop
mov
xchg
ds
pop
xor
ret
ss
lods
xchg
xchg
loopne
inc
mov
sbb
iret
cmp
or
push
in
pop
aad
rcl
mov
mov
cmpb
gs
insl
mov
sti
gs
mov
and
inc
ja
mov
aaa
stos
mov
mov
fistpl
mov
popa
xchg
mov
les
fwait
jmp
enter
movsb
mov
insl
addr16
sti
xorl
clc
sarb
push
mov
pop
cmpl
lods
xchg
aam
lock
sahf
jbe
ss
hlt
addb
xor
xchg
lcall
rcll
push
mov
mov
pushf
hlt
dec
repnz
adc
cmc
cmc
mov
pop
mov
test
std
popf
inc
and
pop
jp
sbb
hlt
nop
mov
rcr
xchg
movsb
and
cmpsb
pop
jecxz
sbb
test
and
jl
fwait
add
mov
push
and
imul
adc
insl
in
pop
lods
sub
cwtl
pop
fldcw
jae
and
stos
bound
flds
fdivrs
js
push
hlt
push
mov
inc
imul
push
push
add
cli
loop
pop
jmp
sub
pushf
iret
xlat
jge
ja
stos
sti
or
cltd
mov
jle
out
pop
ja
xlat
fists
movsl
cmp
and
sub
xchg
pop
hlt
ret
pop
hlt
mov
sbbl
pop
bnd
pop
repnz
jo
stos
andl
push
mov
sbb
or
xchg
adc
add
or
stos
cmp
ds
xchg
push
or
fdivl
cmp
dec
push
popf
jp
popf
fs
lock
testb
mov
inc
jle
pop
push
dec
mov
insl
out
mov
aam
pushf
lea
mov
insl
add
cmp
jno
into
add
cmc
adc
pop
insl
test
test
nop
fldl
insb
ljmp
xlat
lock
pop
mov
adcb
sbb
dec
out
js
cmpl
mov
mov
jmp
stc
lret
cmp
iret
push
lock
sarl
hlt
fidivrs
jle
sub
sub
or
jl
stos
jp
xchg
aad
adc
xchg
inc
lds
jno
ljmp
mov
mov
and
mov
push
clc
notl
iret
mov
jb
jb
ss
pop
pop
leave
mov
cmp
mov
cmp
jb
lea
lret
fimuls
fsts
mov
movsl
cld
jae
inc
out
cli
cs
cli
cmp
subb
push
popa
fnstcw
xchg
cltd
cli
xchg
popa
cmp
aas
sahf
fstpt
frstor
mov
dec
test
or
and
ss
stc
ja
dec
lahf
inc
or
lock
dec
mov
mov
mov
and
and
ja
loop
enter
outsb
les
pop
insl
fstp
outsb
pop
mov
sbbb
fdivr
in
loope
in
cmpb
stos
data16
push
or
xchg
movb
cli
and
add
xchg
mov
popa
cltd
inc
dec
or
pushf
xchg
mov
cmp
pop
mov
pop
mov
out
push
inc
stc
inc
shr
sar
mov
push
push
sbb
imul
int3
mov
lret
ljmp
repnz
and
pop
jp
es
jg
jg
and
jge
mov
addr16
adc
lcall
mov
jns
fistpll
mov
mov
ljmp
aad
hlt
push
cs
fsubrl
push
mov
lods
popa
stos
lods
out
movsl
lods
push
jl
cmc
jmp
ret
cmc
aad
or
rcll
loopne
xor
aam
cmpsb
repz
pop
sub
gs
ficompl
pushl
adc
push
pop
sub
push
mov
inc
jbe
mov
pop
mov
vmovlps
push
cli
jbe
imul
mov
xchg
stos
mov
mov
xor
dec
add
ja
fisubrl
jnp
int3
fadds
div
jns
pop
pop
movsb
sub
enter
sbb
subb
ret
or
mov
or
mov
mov
lds
cmp
testl
ret
cmc
cmc
sarl
pop
xchg
inc
mov
or
cld
les
leave
ja
mov
popa
xor
cmp
std
xorl
pop
push
dec
lods
lock
mov
jns
dec
and
pop
push
ja
mov
rcrl
dec
mov
cld
sub
mov
dec
inc
xchg
jne
xchg
or
mov
dec
add
jp
xchg
mov
lahf
add
mul
movsb
shl
dec
mov
stc
cmp
lods
push
dec
js
inc
hlt
jle
jg
push
repz
mov
xchg
lock
push
push
scas
jae
xor
or
cmpsb
neg
ja
fnstcw
sub
fnstsw
cmpl
aam
jp
jb
jae
jl
in
pop
mov
shlb
mov
inc
popa
xor
pusha
dec
inc
ficomps
test
push
movsl
loope
cld
ljmp
mov
mov
in
mov
mov
mov
loopne
loope
sbb
jb
cmpsb
add
rorl
stos
add
pop
cmp
mov
scas
push
or
add
sub
adc
movsb
mov
xor
leave
mov
adc
cld
repnz
ror
sbb
lret
clc
addl
sub
cmp
or
xor
test
iret
imul
iret
std
clc
xor
pop
jg
sti
or
sbb
xchg
mov
scas
ss
inc
cmp
fs
outsb
pop
dec
push
leave
sahf
fcompl
push
xor
movsb
ja
mov
mov
mov
jmp
daa
scas
js
mov
push
fmuls
outsb
xor
ds
bound
pop
add
arpl
pop
loopne
xor
adc
mov
xor
jmp
xor
push
test
mov
cmp
pop
daa
sub
out
es
dec
or
pusha
jb
cmp
fs
adc
push
imul
push
scas
idivb
loop
std
fs
stc
sub
hlt
cmpsl
lods
test
pop
ja
xor
mov
sub
push
mov
jg
hlt
imul
jp
mov
jns
icebp
jecxz
mull
pop
cwtl
lcall
jle
xchg
xchg
cmp
test
adc
xchg
xchg
fnstcw
sbb
sbb
add
dec
push
hlt
push
mov
inc
fbld
stos
xorb
je
sub
cli
push
add
dec
push
sub
jl
shrb
mov
mov
stc
lret
fcomps
pop
xchg
jo
mov
rol
mov
imul
imul
mov
aaa
movsb
divb
add
out
sbb
push
and
repz
icebp
sbb
aad
add
popa
stc
in
adc
loopne
addr16
mov
inc
dec
dec
cmp
add
xor
das
in
jl
std
or
jbe
divl
outsb
fistpl
cmp
mov
cltd
incb
adc
pop
inc
push
pop
test
mov
out
popf
sbb
xchg
popa
mov
jnp
negb
or
adc
sbb
mov
fwait
mov
sahf
or
cmp
inc
das
and
icebp
or
imul
jae
shll
jae
mov
sub
cltd
fiaddl
je
mov
fs
mov
sub
or
movswl
leave
icebp
jg
push
dec
repnz
cmp
jge
mov
pushf
xorb
in
xchg
fimuls
push
rcrb
pop
inc
jae
or
cmp
inc
das
sahf
jle
sti
sti
jge
add
imul
xchg
cs
jge
sbb
lock
mov
jns
das
push
xchg
insb
iret
or
xchg
out
add
inc
popa
imul
incb
repz
fistpl
cmp
cmp
inc
xchg
push
hlt
and
mov
adc
in
adc
in
jl
add
cvtps2pi
or
imul
lods
sbb
pop
dec
test
test
std
emms
inc
push
or
fnstsw
push
jnp
outsb
cli
fdivrl
stc
cmp
jns
clc
hlt
fnstsw
notl
cli
cmp
ficoml
cmp
insb
dec
repnz
push
cltd
fwait
cmp
or
mov
adc
push
dec
mov
sti
movsl
sti
xchg
xchg
cmpsl
cmp
dec
cs
fcmovnu
xchg
xchg
cmp
arpl
cmp
jnp
cli
hlt
fnstsw
xchg
andl
mov
outsb
ja
xchg
mov
rclb
sahf
or
rcrb
push
xlat
dec
xor
cmp
pop
fucomp
and
lahf
subl
add
inc
icebp
cmp
iret
shll
cmp
ljmp
ljmp
sti
hlt
fisubrl
cmpsl
lds
pop
mov
pushl
jbe
mov
mov
sub
jns
pushf
imul
and
cmp
addl
jle
sbb
mov
outsb
lcall
test
sub
adc
cmp
ljmp
aas
gs
fnstsw
mov
jne
or
cmp
and
lds
cmp
mov
sbb
jb
insl
repnz
fldl
or
out
into
fsubr
add
xchg
or
or
jge
mov
mov
std
jnp
pop
lea
push
jl
xchg
movsl
or
outsb
imul
cmp
and
dec
mov
je,pn
cmp
cmp
fisubs
dec
testb
jecxz
cld
xor
divb
mov
sarb
xchg
repnz
push
jge
xchg
in
hlt
cld
inc
push
fdivr
xchg
xchg
js
repnz
cltd
jmp
loope
jb
add
cli
mov
negb
scas
adc
lcall
ljmp
sbb
cmp
lahf
icebp
faddl
jl
xchg
mov
sbb
pop
push
mov
ja
mov
pop
xor
jecxz
push
inc
mov
adc
cli
lahf
ljmp
gs
xchg
cli
insl
push
mov
dec
popf
fs
mov
fdiv
or
jle
std
cmp
sahf
jae
xchg
inc
pushf
inc
and
jg
and
sbb
aad
jl
sti
pop
cmp
sti
test
rcl
jmp
xlat
jne
pushf
orb
push
mov
pop
lcall
or
adc
das
mov
cmp
insb
adc
jb
jmp
jge
xchg
pop
push
pop
rolb
movsb
ret
push
aam
or
mov
out
pushf
dec
pop
add
std
jbe
adc
push
decl
sbb
ljmp
cli
rolb
gs
test
pop
cld
xchg
pop
sbb
test
sub
mov
in
pop
sub
inc
pushf
mov
sub
or
or
sar
mov
mov
mov
clc
ret
jo
inc
jbe
xchg
lret
cmp
ret
gs
and
rorb
pop
std
sahf
adc
or
pop
push
lcall
cmp
pop
in
test
rorb
lret
xchg
inc
push
sub
xor
jp
mov
call
jbe
jbe
jno
add
sahf
in
cli
das
xlat
jg
xchg
pushf
mov
dec
hlt
sub
jge
jle
enter
mov
idivb
test
hlt
pop
sbb
cs
jge
mov
push
xchg
xchg
lret
repnz
lods
or
xrelease
loope
xlat
xchg
jl
cwtl
shr
test
loope
std
imul
subl
arpl
stos
inc
mov
push
jle
es
jmp
loopne
fucomp
cmp
inc
mov
leave
insb
mov
jbe
and
test
stc
rcrb
lret
iret
ds
push
push
idivl
mov
pushf
xor
imul
rol
jl
sbb
inc
cmp
jne
icebp
pop
mov
jp
jo
loopne
mov
cli
cs
insb
xchg
scas
pop
cs
pop
into
pop
pop
pop
xlat
fcmovnb
push
xor
mov
testb
mov
iret
movsb
inc
test
in
in
leave
mov
pop
scas
aas
insb
mov
in
mov
mov
ret
ss
lcall
into
lock
lcall
inc
mov
mov
fisubrl
sub
outsb
mov
xchg
xchg
dec
nop
leave
std
rcl
repnz
cmp
test
mov
jecxz
ret
dec
arpl
pushf
es
mov
dec
and
clc
shll
mov
mov
push
push
addr16
out
or
mov
ljmp
adc
imul
fistl
mov
mov
rclb
cmp
test
flds
mov
sarl
mov
cmpsl
mov
cmp
leave
inc
aas
lods
push
push
in
les
pushf
jns
jmp
jmp
inc
push
fnsave
xor
and
xchg
mov
cld
stos
imulb
xchg
jb
sbb
imul
mov
inc
je
mov
lods
inc
dec
jp
out
jg
iret
sbb
outsb
mov
cli
jb
sub
dec
sub
icebp
lock
lock
mov
mov
cmp
mov
mov
xchg
dec
cmp
dec
lahf
add
arpl
add
cld
cmp
fst
les
ret
cmp
sub
dec
ja
xchg
sub
mov
jo
roll
cld
out
mov
xchg
bound
fnstcw
xchg
mov
icebp
neg
sub
dec
lea
movsb
jbe
popa
push
cmp
fs
mov
mov
jge
cli
mov
cmp
push
sub
sub
lret
cmc
fnsave
outsb
mov
negb
in
pushf
idiv
sub
jbe
lcall
pop
cli
xchg
mov
notb
xchg
jbe
lock
fstl
shlb
mov
adc
bound
cli
mov
xchg
test
fbld
sbb
pusha
jb
jmp
inc
jnp
dec
dec
vcvtpd2dq
gs
inc
int3
or
bound
mov
inc
aas
and
out
movl
lock
rol
lret
notb
or
jg
les
jp
stc
xlat
out
call
dec
addl
push
sub
popa
adc
aas
cltd
and
es
pop
push
notb
inc
sub
out
aad
divb
ss
or
mov
pushf
mov
mov
pop
mov
push
xchg
in
xchg
das
gs
lcall
mov
test
xchg
in
inc
cmpsl
pushf
cmpsb
lret
cmpsl
imul
leave
lea
call
push
je
inc
pusha
cli
jbe
lea
insb
andb
clc
push
les
xchg
lret
xchg
lea
in
mov
xor
ja
aam
jne
pop
inc
aas
push
jl
call
test
vpaddsb
xchg
xor
or
daa
cmp
sub
bound
mov
mov
call
popw
pop
cli
insl
fisttpll
cmp
sbb
mov
ljmp
jnp
stc
mov
dec
rcll
xchg
cmpsb
stc
xchg
leave
mov
sub
adc
sbb
jbe
cmp
adcl
test
push
leave
imul
ja
cmp
mov
out
push
dec
mov
inc
les
inc
inc
jge
dec
ret
xor
insl
dec
mov
sahf
push
xor
popf
adc
lea
push
xor
jmp
shll
cmp
jbe
fwait
adc
pop
nop
es
es
negb
mov
adc
inc
sahf
loopne
js
xchg
mov
fcmovu
sub
cmp
push
enter
mov
scas
dec
jbe
cs
js
bound
loope
sbb
pop
ljmp
dec
dec
lret
in
subl
inc
subb
loope
imul
movsl
repnz
fisttpll
mov
xchg
jl
mov
pushf
rcrb
leave
jbe
push
cld
cli
jnp
mov
dec
xorb
mov
lods
iret
adc
fs
push
sahf
notl
addr16
mov
outsb
loopne
pop
fwait
pop
add
ja
test
test
mov
or
in
mov
shl
jb
jle
mov
and
repz
leave
cmpsl
std
ds
dec
hlt
dec
scas
pushf
std
sbb
add
jbe
jae
ss
pop
insl
jp
pop
stos
dec
adc
push
aam
fstpt
imulb
paddsw
scas
jbe
dec
cmp
shr
pop
mov
test
in
push
imul
mov
fadds
es
popf
dec
xor
movsb
loop
test
test
orb
xchg
push
mov
lahf
ss
ds
leave
nop
mov
push
sbb
lcall
sbb
stc
ljmp
push
cli
sbb
cmc
add
lock
movsb
loope
fstl
aaa
movsb
test
mov
mov
mov
add
and
dec
push
cmpsb
ror
repnz
fsubs
lea
out
outsb
mov
movsb
dec
cli
push
frstor
into
add
xchg
and
jnp
mov
movsb
popf
outsb
shlb
inc
addb
popf
cli
inc
and
push
stos
fsubrl
mov
push
repnz
ret
adc
mov
dec
mov
test
jb
or
cmc
jno
sbb
popa
xchg
fistl
and
adc
adc
cmc
jmp
shll
hlt
mov
out
mov
dec
mov
push
std
fdivrs
jl
enter
sub
fcomp
cs
pop
sub
fcmovnbe
int3
pop
mov
decl
sub
fucomi
pop
or
pop
push
out
cmp
aam
mulb
imul
cmc
and
in
lret
pusha
sbb
push
lret
sbb
frstor
lret
mov
adc
or
andb
das
mov
aam
test
add
sbb
std
inc
lds
lcall
jbe
in
cmp
jns
clc
cmpsb
lcall
inc
clc
mov
mov
mov
sbb
xor
mov
and
jmp
sbb
dec
mov
and
mov
jecxz
test
adc
cli
jle
shlb
mov
int3
cmp
mov
or
mov
ss
mov
cli
sti
or
cwtl
cmp
mov
in
sub
movsb
insl
dec
pusha
lock
or
cmp
in
cmp
repz
ds
inc
pop
inc
push
xor
int3
loop
lcall
push
pop
hlt
dec
subl
insl
jmp
out
inc
inc
sub
jmp
jns
hlt
outsl
inc
mov
or
ljmp
fisubl
xor
dec
fwait
daa
inc
stc
cli
and
cwtl
jns
into
shrb
or
mov
sub
hlt
jmp
std
jp
jno
pop
xor
xchg
in
rorl
xlat
cmc
pusha
lret
shll
lret
mov
inc
inc
sbb
jecxz
lret
testb
and
push
cli
pop
dec
pop
lret
mov
mov
mov
jp
pop
int3
loopne
mov
xchg
int
and
pop
inc
add
xchg
dec
xchg
jbe
jbe
dec
fcomps
jle
push
addl
jle
xlat
fsin
hlt
inc
rcrb
imul
mov
iret
pop
cmp
cli
add
mov
es
push
sbb
xchg
movsb
xchg
test
xor
cli
inc
mov
pushf
jmp
xor
and
jns
pop
jnp
mov
icebp
jns
xor
lea
leave
in
mov
pop
mov
mov
dec
pop
mov
jb
js
in
inc
xchg
enter
int3
pop
jge
mov
fisttpll
out
iret
mov
jnp
push
xlat
lds
push
push
xchg
idivb
repnz
int3
inc
std
dec
xlat
dec
dec
dec
lods
hlt
call
aam
jle
aad
rcrb
dec
mov
inc
aaa
lret
les
push
out
xlat
aam
pop
or
shrl
shrb
clc
out
push
mov
fsubl
jp
jbe
test
xchg
xor
cmp
pop
js
jl
mov
jbe
cmc
xchg
in
ret
lods
cmc
scas
pop
leave
ja
inc
fidivrl
pop
stc
xchg
lods
ja
ja
mov
test
fst
jl
mov
cmc
imul
rorl
fsub
jmp
cmp
mov
xchg
test
ljmp
sub
repnz
inc
lea
and
inc
es
dec
adc
or
jle
test
in
cmp
pop
movsb
shr
cmp
mov
adc
mov
unpckhps
inc
enter
out
and
rep
mov
out
lea
mov
dec
xchg
enter
std
xchg
movsl
dec
in
xchg
jge
scas
pop
pop
and
dec
jmp
cmc
add
in
rcr
lret
arpl
dec
dec
insb
and
mov
xchg
in
adc
out
mov
pop
lods
push
mov
xchg
pop
daa
lods
scas
movsl
sbb
imul
xlat
fs
push
xchg
pop
clc
fwait
sbbb
pop
dec
popa
addr16
lret
cmpsl
xor
ror
or
ss
adc
ljmp
scas
add
mov
xor
idiv
stc
inc
rcrb
cmc
out
sti
push
inc
adc
dec
fsubr
pop
cmp
xchg
dec
cld
mov
ret
hlt
pop
pop
fildll
xlat
cmp
dec
fwait
loopne
fwait
divb
mov
repnz
sub
jp
enter
inc
std
push
ret
cmp
shl
push
cli
daa
mov
sub
mov
aad
hlt
scas
stc
and
adc
push
je
lret
mov
data16
inc
sti
fwait
pop
scas
xor
cld
sarl
pop
mov
cmc
mov
cmpsl
sub
out
insl
mov
inc
imul
cmp
fsubl
sti
jle
push
int
push
cmp
push
xchg
xchg
dec
cld
repz
mov
xchg
das
cli
adc
imul
pop
jle
xchg
cltd
xor
add
cli
repnz
subl
sti
fistpl
push
mov
push
pop
pop
leave
data16
iret
jp
insl
add
movsb
sub
fwait
popa
mov
adc
inc
fisubrs
and
push
stos
cwtl
xchg
cwtl
ljmp
call
lea
test
mov
dec
push
mov
pop
add
mov
sbb
in
test
pop
popa
ss
mov
stos
xor
mul
xchg
push
js
test
cmp
in
loopne
mov
jnp
loopne
and
and
out
inc
cld
repz
lods
pslld
cmp
rclb
cli
lret
mov
mov
inc
pusha
xor
addr16
jo,pt
js
insl
int3
jmp
dec
imul
lods
js
std
in
mov
loopne
std
in
out
pop
push
ja
mov
mov
dec
sbb
mov
pop
stc
mov
mov
in
cmc
popf
mov
test
inc
into
xchg
xorb
fldl
push
mov
xchg
mov
add
aas
xor
out
pop
jl
mov
mov
test
js
cltd
jno
ret
push
outsb
nop
push
in
repz
cmp
loopne
cltd
call
sub
pop
add
inc
fnstenv
adc
fdivs
hlt
ror
imul
jns
lcall
pop
leave
mov
loop
scas
pushf
in
lods
push
push
cli
mov
scas
push
fidivrl
jp
sbb
ljmp
clc
xor
fs
xchg
idivb
push
jp
lret
mov
pop
inc
or
rcl
dec
int3
out
es
mov
mov
pop
jg
fsubs
fcmovu
fdivrl
aad
xor
mov
push
mov
xchg
outsb
idiv
inc
dec
repz
ret
loope
stos
xor
outsb
cmp
jbe
rcrl
xor
lcall
scas
pop
out
fcoml
sbb
sub
lds
fcoml
jp
fcoms
movsb
in
fdivr
ljmp
movsb
sbb
push
repnz
mov
dec
dec
int3
out
or
mov
movsl
clc
pop
ss
xchg
aad
pushf
jb
clc
xchg
mov
fmull
mov
pop
fstpl
mov
popf
cltd
clc
call
pop
sti
sub
sbb
push
stc
cmc
add
fisttpll
xchg
push
xor
ss
dec
mov
cmp
mulb
movsl
ljmp
rcll
movsl
jecxz
xchg
cli
push
int3
xlat
jns
fdivrl
sbb
divb
lret
cmp
ss
iret
out
arpl
into
and
cli
ljmp
or
and
test
pushf
repz
jle
ljmp
sbb
push
mov
mov
pop
hlt
les
pop
insb
xchg
dec
jp
cmp
push
jbe
pop
lret
testl
pushf
mov
aam
lcall
sub
js
jbe
rclb
mov
mov
cmpsb
fcmovnbe
loopne
fneni(8087
rcr
rcll
adc
imul
cli
in
inc
enter
pop
jp
xor
push
inc
fistl
negb
in
shr
insl
mov
ja
fdiv
andl
cld
add
ljmp
inc
cmp
imul
shr
clc
addr16
repnz
push
mov
push
shrl
mov
stos
mov
mov
push
outsl
xchg
hlt
test
cmp
inc
pop
xor
int
push
lods
mov
sub
mov
les
mov
sub
imul
imul
jbe
sub
ret
cmp
push
cmc
inc
xchg
mov
sbb
add
ret
push
mov
mov
dec
mov
aaa
dec
push
inc
lods
cmp
rcr
push
in
jbe
hlt
xchg
movsb
enter
push
shlb
xchg
sahf
sub
test
push
mov
int
jnp
push
xor
push
mov
fcmovb
xchg
pop
sbb
lods
out
cmp
cmova
and
cmpsb
lcall
or
mov
pop
dec
in
enter
repz
fucom
filds
mov
mov
mov
adc
mov
int
xor
xchg
inc
dec
mov
mov
pop
fwait
mov
std
out
lcall
pushw
scas
std
clc
xchg
xlat
shlb
fwait
push
mov
dec
mov
mov
pop
jbe
scas
jae
and
jl
sbb
jp
lods
aam
mov
test
test
xor
stc
jno
cmp
mov
jbe
add
aaa
jnp
mov
mov
loop
std
adcl
mov
lods
ffree
iret
js
cld
ljmp
xor
xor
clc
mov
and
push
hlt
cmp
cmpsb
sub
mov
ja
scas
sbb
sbb
lcall
imul
add
outsb
xorb
test
cmp
int
push
in
int
xchg
mov
cmc
jne
mov
inc
sbb
cmpsb
cmp
mov
mov
dec
cmp
cmpsb
cmp
pop
cli
ret
mov
div
lret
les
pushf
aas
push
loopne
jns
adc
arpl
pop
lods
icebp
ljmp
jmp
xor
std
in
daa
dec
xchg
lea
test
leave
add
notb
aam
movsb
mov
orb
repz
icebp
xchg
pop
lock
gs
les
pop
mov
cld
mov
pop
push
add
jmp
lods
pop
cmp
mov
divb
fdivs
or
lods
mov
inc
outsb
les
negb
mov
sub
out
push
or
aad
iret
clc
clc
push
pushf
xchg
pop
ret
test
mov
shr
outsb
sub
int
aad
scas
mov
inc
jbe
cwtl
jbe
push
in
outsb
add
int
jnp
mov
pop
add
xlat
cwtl
mov
aad
sbb
loop
loop
in
mov
imul
xchg
cli
shr
push
add
rolb
arpl
sbb
dec
dec
sbb
movsl
clc
sbb
cmp
lea
in
sub
testb
jge
mov
sub
outsb
cmp
pop
stos
or
inc
cmpsb
fdivrl
dec
lds
les
mov
and
sti
cwtl
cli
test
stos
out
lods
fisubrs
xor
je
cmp
xchg
inc
sub
ja
sbb
lods
and
in
fisubs
repz
xor
lock
loopne
xchg
lret
orb
cmp
adc
and
cltd
sbb
add
test
aad
data16
mov
in
mov
loopne
cwtl
sub
cmpsl
out
test
push
and
lock
mov
mov
pop
insb
out
lcall
loop
fdivp
aam
cld
aas
mov
jae
lds
xchg
fcompl
in
mov
sti
test
ret
inc
mov
xchg
mov
lret
jl
mov
mov
hlt
xchg
pop
inc
mov
push
xchg
ss
fmul
cmp
gs
sarl
lock
fists
pusha
hlt
mov
pop
cmp
cld
mov
orl
clc
mov
fidivs
cs
ffree
push
xor
repz
fnstsw
es
cld
pop
mov
aaa
lret
bound
xor
dec
notb
icebp
lock
dec
icebp
cmpsb
dec
and
loope
icebp
movsb
scas
jnp
push
ja
or
xchg
lods
out
mov
in
in
lock
jbe
cli
ljmp
jbe
negb
mov
xor
jns
fisubl
cs
xchg
scas
repnz
pop
or
fidivl
in
pop
cwtl
leave
stc
mov
pusha
push
movsb
insb
or
xor
int
sbb
aaa
mov
mov
andl
in
fdivr
push
pop
or
xchg
out
imul
or
jmp
les
loop
and
dec
adc
cltd
xchg
mov
adc
xchg
adc
sub
mov
xchg
and
movsb
and
lret
lock
test
jbe
push
scas
rcll
out
cmc
jns
stos
movsl
int3
negb
push
cmp
sub
outsb
or
in
loopne
jg
sar
push
mov
jmp
add
cli
mov
jecxz
push
mov
daa
fisttpl
movsl
xchg
inc
sbb
sub
cmp
xchg
dec
jl
mov
jge
mov
movsb
push
and
cs
fcoms
insl
clc
xchg
mov
aaa
push
int
xchg
jge
pushf
and
xchg
jp
cld
xchg
imul
into
fbstp
jne
shlb
fdivrl
pusha
adc
jns
in
sbbl
or
inc
xchg
mov
jmp
addr16
and
ss
test
mov
fildl
xchg
mov
test
and
mov
xchg
std
mov
jp
mov
daa
movsb
push
repnz
leave
sub
int3
mov
sbb
shl
nop
aaa
testb
add
imul
push
and
hlt
in
movsb
mov
mov
ja
push
pop
rcrl
aad
cmp
sar
push
mov
pop
xchg
lock
faddl
out
push
sahf
rol
pop
sub
incl
loop
pop
or
or
call
xor
cmpsl
sbb
mov
push
push
icebp
aad
and
es
daa
fsubrs
cmp
xchg
xchg
fdivrl
xchg
and
enter
lods
fprem1
loope
out
hlt
pop
jp
aad
nop
mov
movsl
pop
mov
test
setb
sub
cmpsl
nop
aam
cli
cli
mov
mov
push
cmp
push
lcall
or
das
cmc
in
out
imul
pop
iret
push
lea
imulb
in
mov
jp
sub
dec
pop
repnz
push
shlb
add
icebp
insb
leave
cld
pop
imull
push
mov
mov
ret
lods
mov
into
inc
aaa
int
fldenv
lea
icebp
mov
imul
cli
xor
inc
jge
scas
cmp
fnstcw
out
fistl
pop
repz
dec
cmpsb
gs
inc
xlat
add
rorb
out
xchg
and
pusha
push
roll
fstp
pop
clc
jmp
mov
fcmovu
sti
fxch
lcall
pop
xor
or
push
std
jp
inc
lret
mov
mov
xor
adc
push
gs
bound
fwait
sub
lret
fsts
call
subb
push
cmp
xchg
adc
pop
push
jne
mov
lods
add
imul
daa
cmpsb
pushf
jno
xlat
cli
movsb
lcall
scas
dec
int3
cld
insl
adc
add
fidivrs
xor
insl
dec
push
pushf
lods
push
stc
sub
cmp
test
pop
cmp
dec
mov
mov
loopne
jae
push
movsb
lret
fdivrl
jp
xchg
cmp
je
dec
add
jo
clc
shl
xchg
dec
fidivrl
rol
xor
shrb
add
jns
and
adc
xor
insb
icebp
adc
ja
fdivrl
pop
iret
sbb
mov
mov
inc
jae
fsub
rcr
adc
fstpl
shrl
fmuls
pop
cwtl
push
or
data16
pop
mov
addl
lahf
and
push
push
push
sub
cmp
pop
roll
pop
jne
pop
fcompl
xchg
cmc
gs
lods
dec
pushf
stc
pop
mov
inc
xlat
xchg
aaa
mov
pop
sub
xchg
outsb
pop
cmp
sub
das
in
int3
movsl
pop
out
call
test
out
fildll
loope
pop
mov
and
stos
fstpl
push
stos
jle
fstp
out
adc
push
jne
or
test
cli
push
xor
rcrb
push
idivb
sub
sti
dec
nop
xlat
dec
fucomp
test
jbe
mov
outsb
cmc
push
pusha
repnz
addr16
mov
inc
stos
divl
adc
clc
outsb
inc
push
scas
jbe
neg
out
cmp
fcompl
iret
pop
out
push
shll
cld
push
mov
xchg
nop
push
cmp
clc
mov
cs
push
jbe
push
loope
and
jno
mov
mov
lret
ljmp
clc
scas
push
lcall
nop
cmp
mulb
xor
outsb
cltd
fdivs
test
jb
push
into
imull
push
push
repnz
sbbl
out
sub
mul
test
and
fisttpll
adc
jnp
cld
push
dec
and
dec
dec
aam
cmp
lods
cli
imul
rcrl
montmul
cmpsb
xchg
pop
out
hlt
mov
pop
mov
push
loope
call
fisubrl
pop
pushf
push
and
or
int
pmuludq
jb
jp
imul
mov
inc
shrl
pop
mov
cmp
ljmp
lahf
push
in
outsl
fmul
addb
sbb
mov
mov
mulb
xchg
idiv
cmp
inc
xchg
inc
mov
and
js
roll
jnp
jne
fsub
mov
pop
outsb
out
cmp
jmp
ret
lret
roll
jbe
pop
aaa
mov
jns
lret
ja
lret
std
pop
fs
xor
jle
hlt
fimull
jbe
popf
sarb
lods
outsb
jb
in
mov
imul
stc
mov
pop
add
or
cs
loop
jecxz
lahf
push
mov
insb
inc
lea
cmpsl
sahf
mov
mov
out
inc
xor
jnp
sbb
push
dec
iret
push
repz
insl
movsb
sbb
hlt
das
dec
ja
adc
call
xchg
out
in
outsb
movsl
mov
data16
arpl
les
ret
fimuls
cli
scas
cli
je
and
cli
repnz
jp
in
mov
xor
push
sbb
loopne
scas
loopne
shlb
lret
inc
in
mov
pop
inc
jmp
and
xor
adcl
mov
jae
mov
dec
filds
or
cld
mov
dec
cltd
jb
in
arpl
pop
add
enter
pop
in
fs
addl
movsb
pop
outsb
push
enter
pop
cwtl
test
cli
xor
xor
fbld
mov
and
fisttpll
xchg
lcall
lock
ret
dec
mov
fsub
push
xor
lds
iret
call
fcmovu
jg
or
mov
or
push
cli
mov
and
mov
loopne
ret
xchg
jns
inc
jle
jl
mov
cmp
dec
pop
loopne
out
push
add
xchg
scas
stc
xchg
imul
mov
loope
lds
jecxz
lahf
inc
and
dec
pop
addr16
pop
cmp
loop
mov
mov
jns
mov
pop
fstpt
mov
in
outsl
jl
jo
push
sub
or
add
adc
xchg
mov
mov
ds
out
lret
out
fs
pop
lcall
or
or
dec
dec
sbbb
int3
enter
add
jg
xlat
or
and
and
adcb
cmp
stc
repz
mov
mov
add
mov
mov
mov
cmp
and
mov
aad
cmp
pop
cmp
das
mov
sarl
push
mov
popa
add
pop
dec
mov
adc
mov
and
xor
xchg
mov
push
inc
push
icebp
mov
push
hlt
pop
jns
mov
or
sub
frstpm(287
xchg
fisttpl
sbb
lcall
in
psubsb
je
dec
outsb
idivl
call
jns
imul
xchg
je
or
mov
movsl
add
rcll
xor
and
cld
or
add
inc
cmp
xchg
bound
mov
xchg
iret
or
pop
inc
hlt
lods
push
lcall
call
xor
fcomps
or
xchg
or
fidivrl
jl
insb
push
fnstcw
push
cmp
jae
bound
ss
dec
or
out
je
pop
mov
pop
cli
in
pop
bound
jle
add
hlt
adc
repnz
or
scas
fldt
sub
jp
movsl
jbe
or
mov
dec
insb
sarb
fstl
lret
mov
push
mov
fldenv
fistps
jbe
data16
xchg
push
push
inc
out
popa
cmp
dec
ret
push
push
hlt
out
sbb
fs
into
mov
lahf
push
clc
popa
fsubl
aam
lea
or
fucom
not
mov
jecxz
xor
in
negb
out
fcompl
lock
cli
repnz
imulb
fdivl
clc
jbe
je
in
or
sbb
outsb
in
repnz
into
jbe
push
pop
mov
not
pop
mov
scas
cmc
dec
dec
mov
or
icebp
push
sub
pop
mov
xchg
push
push
push
xchg
data16
and
loopne
adc
mov
xor
push
dec
jmp
icebp
in
out
pop
push
fstpt
push
push
pop
adc
dec
clc
or
push
adc
mov
push
mov
mov
cmp
les
out
fadds
or
nop
cwtl
rcll
fisubs
mov
and
jl
lret
sbb
jle
xlat
fstp
mov
push
jmp
or
xchg
leave
dec
les
or
call
cmc
adc
repz
hlt
mov
pop
fnsave
mov
decl
mov
or
in
popf
imul
push
cmp
mov
int3
jno
pusha
popa
add
notb
mov
jne
xchg
in
inc
outsb
push
add
adc
add
insb
fs
sbb
xor
sub
mov
test
xchg
inc
ss
mov
repz
lcall
xchg
and
mov
pop
jp
aad
pop
aad
sub
loop
pop
mov
mov
in
out
loopne
cli
xchg
pop
mov
dec
mov
cld
xchg
fstpl
cmpsb
je
or
or
jmp
pop
sar
mul
dec
in
call
popa
xchg
addr16
sbb
mov
push
mov
jo
push
imul
pusha
cmp
sbb
cli
das
test
out
pop
cmp
orl
cmp
pop
cld
cmp
mov
addb
arpl
ljmp
jnp
pop
mov
xor
div
in
hlt
xchg
push
cmp
repnz
out
cli
in
mov
outsb
jecxz
ljmp
lock
inc
cmp
mov
ljmp
aad
pop
test
lock
aam
pop
or
scas
ja
dec
rcrl
mov
or
jmp
jle
aam
mov
fstpt
add
data16
sub
sarb
paddsb
jne
out
hlt
sahf
or
adc
adc
lcall
test
out
ss
cld
outsl
mov
sub
insb
int3
sub
push
pushf
dec
pmuludq
cli
mov
in
test
jle
popa
push
cld
ja
cmp
in
popf
loope
fistpll
cmp
les
inc
jg
mov
mov
pop
loop
or
pop
push
into
std
clc
pop
pop
gs
imul
pop
fiaddl
push
sbb
ret
xchg
sbb
call
pop
push
fwait
addr16
in
xchg
jge
ja
cmpb
pop
in
mov
mov
cs
pop
or
mov
add
test
mov
loopne
popf
cmp
repnz
jle
pop
shlb
dec
fsubrp
rcl
ja
ljmp
jae
pop
lret
aaa
cmc
out
sub
daa
dec
push
jg
imul
test
fucom
mov
out
mov
sbb
jmp
jmp
sti
and
in
fwait
adc
add
out
aas
lahf
lahf
verr
ja
xor
insl
lcall
xchg
or
mov
mov
jae
dec
mov
movsl
fucomp
and
outsb
jle
repnz
add
cmp
imul
outsb
and
xor
fmulp
ja
jb
stc
outsb
pop
xor
mov
loopne
lods
std
movsb
stc
call
repz
pop
ret
repnz
jp
adc
out
rorl
xchg
and
repz
jl
insb
ja
cld
cli
movsl
dec
cli
mov
lods
cmc
push
subl
int
jmp
dec
lret
loopne
or
inc
xor
popa
xchg
mov
inc
out
testb
hlt
sub
mov
rol
cmp
ret
adc
or
add
shr
mov
push
xchg
or
or
repnz
enter
or
jne
js
out
jle
pop
rcr
scas
mov
jge
mov
cmp
in
loopne
aaa
jnp
outsb
inc
dec
in
loop
das
push
jg
lods
lret
cwtl
xor
call
ljmp
in
idiv
loope
dec
addr16
mov
dec
icebp
in
push
mov
outsl
test
loopne
in
sub
mov
fnstcw
dec
imul
icebp
cmpsl
fmulp
mov
test
in
adc
pop
call
neg
hlt
in
sarl
call
push
jecxz
lock
clc
fldcw
jns
and
and
mov
outsb
sarl
mov
cld
sub
mov
repnz
jbe
fwait
cmp
lods
mov
call
addr16
add
pop
in
cmpl
in
cli
lods
inc
push
loop
mov
outsl
jp
jno
shl
jne
imul
or
pop
rcrb
decb
insl
cmp
popa
jae
aam
lock
jb
mov
push
cld
test
mov
in
mov
in
xchg
out
xchg
pop
jg
pop
sti
cmp
cmp
cmpsb
addr16
cmp
cmp
test
jb
mov
jns
imul
shl
add
clc
jnp
mov
arpl
push
lods
aam
cli
fwait
mov
push
push
nop
push
mov
xor
int
fisubs
lahf
or
sbb
pop
fidivrl
loope
push
les
mov
xchg
inc
aam
push
mov
and
sub
jne
orb
lods
mov
push
imul
ljmp
testl
mov
jge
hlt
inc
jae
push
add
jmp
mov
or
rclb
out
mov
inc
pushf
stos
cmp
scas
mov
cwtl
lret
test
push
mov
mov
push
add
sti
cmp
pop
cmpl
mul
mov
insb
nop
sub
xchg
in
xchg
bound
lcall
mov
lds
mov
fsubrl
sahf
cli
lods
add
pop
fcoml
xchg
out
addr16
or
ja
loopne
mulb
mov
cmp
imul
imull
jb
sti
push
cli
test
call
nop
push
xor
mov
mov
divb
lcall
push
push
aaa
mov
mov
sub
loop
jl
cmpl
or
fucom
test
lret
jge
push
sbb
xchg
sti
popa
lcall
cld
mov
push
xchg
insl
lods
das
loopne
mov
fistpl
sbb
fcmovbe
sti
fdiv
xchg
or
xor
mov
jl
mov
adc
in
scas
call
andps
adc
inc
divl
adc
lcall
int
call
push
sbb
lods
mov
cmpw
loopne
cli
mov
lods
in
cmpl
or
sarb
pop
jl
or
test
loope
lods
cmp
jno
in
repnz
jno
pop
mov
ret
dec
shl
ljmp
repnz
add
lret
pop
test
add
movsb
dec
fldl
mov
or
mov
mov
mov
cmpl
insb
movsl
sub
cmp
jmp
imul
and
addb
mov
mov
js
fdivp
xchg
mov
leave
test
dec
out
lahf
pop
fcmovu
sub
in
mov
lret
pop
roll
jbe
repz
jo
popf
fidivl
in
pop
ret
inc
xor
jl
lret
pusha
scas
cli
cli
fucomi
insl
test
fmul
jno,pt
in
int
sti
jbe
hlt
js
mov
lods
js
xchg
insl
adc
adc
scas
mov
sub
xchg
hlt
movsb
add
loop
imul
mov
subl
sti
icebp
shlb
cmc
adc
mov
addr16
outsb
dec
mov
fsub
in
cmp
out
into
rcr
mov
rcr
nop
repz
loopne
jl
insl
inc
stos
dec
pop
cli
xor
xor
icebp
lcall
pushf
lahf
cs
inc
pop
cmpsb
mov
or
push
pushf
sbb
in
jl
pop
pop
aam
test
pop
jns
fcmovbe
lock
js
hlt
ss
aad
lret
fadd
cld
loope
out
lret
mov
shll
pusha
and
mov
shr
fnstenv
jne
mov
xor
call
aam
jb
pop
dec
dec
lret
xor
inc
filds
scas
xor
hlt
in
aad
add
ficoml
out
test
cmp
ficoml
mov
mov
xor
ret
push
insb
ljmp
xchg
pop
mov
mov
xor
icebp
outsb
scas
mov
fisttps
loop
mov
mov
in
les
neg
adcb
shll
xchg
jmp
mov
sbb
mov
scas
or
mov
sbb
call
int3
sbb
ss
rol
call
enter
fistps
out
push
shll
icebp
push
xchg
pushf
cs
sbb
aam
pop
add
hlt
sbb
lds
jne
jnp
repz
sbb
add
mov
jne
add
xlat
cli
subb
xchg
jg
cmp
negb
xchg
cmpsl
add
add
cs
cmp
jae
jbe
test
mov
lods
sbb
mov
lds
shlb
ja
sahf
mov
insb
mov
clc
in
fisttpll
test
shl
ss
fwait
lret
cmpsl
xor
push
jb
aas
cmp
adc
repz
gs
test
jg
pushf
xchg
out
gs
int
adc
stc
in
push
jmp
sbb
popf
std
aam
push
shl
inc
lcall
mov
mov
movsl
shl
fmul
mov
clc
xchg
cmp
pop
mov
outsb
rolb
cmc
xlat
stos
test
xor
inc
push
xchg
pusha
sbb
xchg
jno
add
jp
jb
ret
pop
mov
mov
xchg
inc
lret
div
mov
addl
dec
pop
xchg
jne
lret
inc
sbb
jns
ja
rol
mov
in
dec
lock
nop
cmpb
jmp
cs
mov
adcb
je
not
hlt
out
out
sub
jno
addb
testl
leave
int3
mov
pop
cs
adc
cmp
mov
les
stc
idiv
leave
mov
mov
inc
loopne
sub
cmp
nop
jb
sub
scas
test
fnstenv
outsb
xlat
bnd
mov
xor
cmpsb
adc
outsb
add
shrl
cmpb
cmp
xchg
scas
outsl
orb
ljmp
fistpl
mov
testb
pushf
pop
cmc
cld
outsb
add
dec
mov
in
filds
push
repz
mov
ret
add
in
pop
and
mov
in
pushl
iret
leave
loop
push
jns
jb
adc
stc
addl
out
cli
in
mov
fcomp
lods
shrb
lock
mov
movsb
lret
add
cld
add
sub
xchg
push
cmc
mov
inc
mov
mov
jle
inc
dec
dec
in
lods
addr16
fsubl
nop
clc
sub
test
cvtps2pd
add
pop
pop
pop
insb
ss
out
jecxz
sbb
lcall
cwtl
jb
in
xchg
mov
out
cmpsl
in
mov
test
movsl
ljmp
int3
in
sahf
push
jp
pushf
mov
jmp
pusha
push
push
js
movsb
jae
mov
pop
xor
mov
cmc
out
jns
out
sub
add
xchg
cmp
push
lahf
movsl
test
orl
or
addr16
pusha
cmpl
and
push
ljmp
ds
inc
mov
in
testb
dec
cs
fmull
xchg
mov
and
adc
jns
lret
inc
fmull
mov
aas
testb
mov
fidivl
jmp
arpl
mov
fsubrs
ret
sbb
cmp
ficoml
out
inc
mov
jae
ss
xchg
add
inc
shll
mov
jg
js
mov
xor
cld
repz
xchg
jnp
ljmp
inc
cs
lds
inc
jo
jo
fbld
int3
jge
rolb
insl
ror
mov
xorl
outsl
or
in
outsb
hlt
and
lret
fdivl
jae
cmp
leave
jmp
mov
inc
neg
xchg
jae
push
imul
mov
sub
out
je
jae
insl
sbb
loop
out
cmp
ljmp
mov
outsb
je
push
loop
icebp
mov
ja
cld
jge
stos
sbb
sbb
loope
fmull
fisubrs
ret
rcrb
and
mov
test
mov
jmp
ja
push
imulb
in
jns
jmp
rolb
sahf
inc
cld
cld
mov
pop
les
xor
mov
test
pushf
lret
and
int
jp
mov
ss
xchg
in
call
mov
push
push
pop
mul
mov
and
jle
sbb
add
cld
pushf
addr16
fbstp
cwtl
mov
lcall
mov
int3
pop
mov
mov
jmp
je
fcoml
or
fcomi
pop
cld
je
push
lds
dec
hlt
jae
hlt
xchg
insb
xor
mov
negb
cld
pop
movsl
sbbb
jle
test
cwtl
aam
shl
sub
hlt
sub
les
mov
imul
xchg
cld
out
pop
aad
aaa
xchg
jne
gs
adc
or
outsl
es
cmp
mov
and
cmp
pop
sbbb
test
push
in
xchg
popf
mulb
ja
or
lods
sbb
pop
adc
insl
jp
mov
inc
mov
cmp
jb
outsl
in
mov
mov
cmp
shll
or
cmpsb
add
cmp
dec
cli
in
and
jno
xchg
hlt
dec
call
arpl
jp
in
jmp
xchg
daa
imul
mov
jmp
ljmp
fcmovnu
mov
or
out
sub
sahf
sub
in
cmp
jg
cmp
sti
stos
push
idiv
out
sbb
out
cmpsb
neg
jg
fidivs
fidivs
jae
mov
cmc
mov
repz
in
fdivrl
push
in
pop
push
and
scas
cld
out
ja
fsubrl
mov
jbe
lock
mov
out
int3
fidivs
cwtl
jbe
jp
aad
lock
cmp
jp
fsubl
fsubrp
pusha
aad
test
aaa
sbbb
mov
in
or
inc
sahf
sbb
clc
std
jge
in
bnd
mov
fwait
test
out
shr
int
jp
insb
cld
xor
out
jmp
mov
in
pushf
lods
imull
mov
cmc
outsb
add
std
testb
mov
out
dec
out
idivb
push
idivb
dec
data16
stos
aas
out
sub
xor
jne
das
sbb
jo
je
popf
inc
stc
jnp
fdecstp
push
jne
dec
add
cld
push
loopne
inc
ljmp
mov
sbb
insb
xor
xchg
fwait
sub
mov
pop
ljmp
stc
xchg
cld
nop
dec
test
gs
or
cmpl
cld
xchg
xor
test
jno
jno
mov
xor
jns
repnz
mov
push
movsl
flds
jle
jle
out
mov
push
insl
outsb
xor
add
pop
clc
inc
add
xchg
ljmp
sarb
idivl
pop
push
mov
sub
dec
inc
leave
mov
jns
pop
loop
xchg
dec
js
xor
jb
mov
mov
scas
icebp
insb
jns
arpl
mov
in
lods
jb
cli
sub
fdivrl
aad
outsb
mov
xor
push
inc
mov
nop
test
mov
fs
mov
fwait
outsb
add
push
push
test
out
shlb
xchg
div
sbb
dec
add
pop
lahf
scas
jmp
add
add
add
gs
push
test
mov
pop
addb
ljmp
lret
jae
xor
sub
in
mov
push
scas
push
inc
inc
testb
or
lea
outsl
cmp
mov
in
lock
subl
xor
in
pop
xor
test
insb
push
in
mov
or
mov
lcall
out
jp
repz
jle
sub
aad
rcl
xchg
repnz
enter
sub
mov
xorb
mov
mov
inc
mov
jbe
int3
ljmp
fisubrs
lock
cmp
lods
incb
xlat
and
mov
cwtl
into
mov
cs
xchg
jbe
and
jg
lods
test
std
and
push
dec
pop
xor
rcrl
int
sbb
cmp
jne
mov
lds
sbb
mov
fmulp
inc
fisttpl
inc
fucomi
jbe
jne
scas
je
shlb
push
jo
pushf
fdiv
ret
je
daa
push
and
pushf
add
lret
xchg
cs
fs
jge
jno
xor
out
repnz
sbb
pop
ljmp
pop
repz
mov
out
push
cmc
cli
into
or
leave
fdiv
inc
sti
ds
cmc
out
ja
pop
mov
mov
cli
jg
out
in
incl
lret
data16
or
hlt
or
push
jbe
lock
in
je
jbe
hlt
movsb
mov
mov
sbb
int3
or
mov
ljmp
mov
fsubl
jae
mov
inc
mov
inc
dec
xchg
movsl
jns
addr16
bound
movsl
xchg
jo
dec
loopne
into
jne
scas
cli
mov
xchg
jns
fcmovb
pop
lods
lods
repz
scas
stos
outsb
lods
cli
sbb
lods
sub
fnstsw
adc
popa
add
sbbb
inc
xchg
icebp
in
and
jne
mov
shrl
jg
stc
rcrl
das
push
negb
mov
jne
push
cmc
cmp
push
jne
icebp
mov
mov
xor
xor
in
dec
subb
leave
cli
mov
xor
in
mov
sub
push
cwtl
rorl
jb
xchg
jbe
pop
jb
push
xor
mov
pop
bound
adc
mov
push
es
test
cmpsl
push
mov
leave
mov
mov
adc
jb
pusha
nop
loopne
push
pop
fistpll
insl
in
bound
jle
or
addr16
ja
lds
cmp
xorl
ss
and
pop
pop
ja
jne
xchg
adc
xchg
cmp
fisttpll
fsubp
and
mov
push
jne
shll
in
xchg
mov
dec
loopne
les
mov
fnsave
push
repnz
das
jbe
loopne
sbb
add
pop
xchg
neg
jb
mov
push
outsl
insl
lret
cmc
call
fdivl
fcom
fdivrl
xchg
cmp
dec
fldt
cmc
push
ja
mov
xorb
aaa
scas
lcall
aam
mov
lea
ja
jl
popa
mov
jae
jmp
inc
sbb
call
lock
push
cmp
cmp
xor
ja
push
jge
inc
push
push
mov
inc
js
pop
mov
mov
in
lock
popf
jns
stos
cmp
clc
data16
loop
mov
jns
hlt
xor
lods
shl
outsb
xor
xchg
fidivs
repz
lods
data16
outsl
fxch
int3
cmpsb
mov
push
outsb
push
and
sbb
shl
inc
fadd
popf
aam
ds
pushf
scas
push
jle
sbb
or
mov
repz
jae
push
push
std
clc
in
and
outsb
add
jmp
hlt
add
dec
int
pop
popf
movsl
in
jo
outsl
cwtl
sub
in
lcall
xchg
dec
lods
pushf
sahf
inc
insb
das
inc
sub
cld
mov
jns
data16
insl
fisttps
cmp
mov
xlat
in
pushf
cwtl
sbb
mov
cmp
hlt
pop
loope
aad
je
add
jne
cmpsb
and
ljmp
loop
cmp
dec
int
clc
or
icebp
cmp
push
jg
hlt
jmp
push
fnstcw
pop
cltd
inc
jle
in
sbb
xor
in
testl
out
cmpb
cli
jo
and
out
hlt
nop
xchg
loop
jmp
outsb
movsb
and
fistps
and
cli
mov
jp
data16
loope
push
sahf
or
ja
xor
sbb
xor
testb
push
in
push
jge
repnz
insb
div
repz
in
aam
lret
pop
hlt
lcall
sbb
pushf
lret
fsubs
in
jns
shlb
out
xor
or
lcall
shl
cld
jns
lods
mov
enter
jle
lea
popa
lods
cli
jbe
cli
hlt
fnsave
lock
int3
cli
xorb
into
mov
gs
divl
add
imul
lods
adc
iret
stc
jo
rorb
cli
stc
jns
in
stc
mov
add
nop
mov
cmp
ficoms
xchg
mov
lcall
mulb
xor
cmpsb
stos
dec
ss
into
jp
ret
and
scas
jbe
ss
jbe
push
dec
stc
out
jne
jp
imul
stos
inc
inc
cmp
jmp
and
jbe
jp
adc
mov
or
cwtl
in
mov
cmp
sub
scas
push
mov
das
inc
pop
xor
jbe
mov
outsb
lret
pop
dec
xor
fidivrs
dec
je
sub
cs
jp
or
and
stos
enter
shll
iret
mov
imul
sub
in
mov
out
inc
in
inc
cmp
ja
dec
mov
cmc
mov
xchg
dec
shll
aaa
pop
notb
or
push
mov
jnp
repnz
aaa
or
aam
ficomps
mov
jbe
fiaddl
scas
std
int3
ljmp
std
sbb
jl
or
shll
shlb
sti
mov
mov
stos
jnp
outsb
sahf
sti
rclb
xor
inc
lcall
stc
mov
push
addl
lcall
pop
fdivrl
adc
loopne
xchg
icebp
jne
scas
lods
sub
cmp
pop
out
out
dec
mov
loope
in
scas
clc
in
cmpsb
in
cmpsb
or
js
ret
sti
loopne
mov
add
pop
xor
inc
iret
bound
mov
and
sbb
je
mov
mov
test
test
loope
cld
leave
and
out
popf
dec
cmp
cmp
sar
inc
bswap
mov
in
mov
imul
xchg
mov
data16
xor
incl
jno
in
rcrb
std
lret
sbb
imul
mov
clc
cli
cmc
push
in
pop
nop
out
std
mov
ret
in
popa
ficoms
repz
out
repnz
mov
test
sub
jge
je
mulb
push
cmc
jle
fistpll
mov
test
cli
aad
div
ret
xchg
and
mov
repnz
jge
mov
jns
cmp
hlt
cli
inc
or
stc
dec
leave
loopne
push
mov
es
push
mov
sub
xor
cli
add
call
adc
and
pop
adc
jecxz
cmc
cmp
in
adc
mov
out
mov
adc
addl
sarb
mov
dec
jns
push
jmp
mov
aaa
jbe
pop
add
adc
sub
or
push
movsb
and
push
mov
push
movsb
adc
inc
rorl
xlat
outsl
push
mov
pop
cli
cmpb
xchg
cltd
lcall
lahf
pop
sub
mov
mov
enter
std
mov
mov
sbb
int3
fidivl
fucomip
mov
roll
or
push
mulb
idiv
and
test
mov
sbb
mov
sbb
inc
inc
mov
test
mov
rorb
mulb
cmp
push
cli
xchg
pushf
cltd
jle
lea
outsl
outsb
out
ss
fwait
mov
jns
stos
mov
inc
xor
std
or
repnz
lock
leave
xlat
notl
jns
xor
pop
aad
ds
mov
imulb
imulb
xlat
les
xchg
mov
divb
sti
xor
stos
jae
lret
or
hlt
or
lods
mov
hlt
testb
stc
lods
pop
jbe
jp
mov
lahf
mov
dec
in
pushf
dec
movsb
fdivl
jnp
dec
loop
pop
aaa
ds
add
dec
jg
in
clc
in
repz
pop
xor
jp
mov
leave
mov
xchg
push
adc
mov
imul
pop
add
adcl
shl
jne
cmp
fdivr
jmp
or
mov
out
mov
mov
rcr
outsb
cli
divb
sub
outsb
add
movsb
test
mov
fs
jge
outsb
jno
addb
mov
call
mov
stc
loop
rolb
xor
and
in
push
pusha
xor
stos
adc
pop
adc
cmp
movsb
cmp
inc
mov
test
iret
add
loopne
ret
pop
add
imul
jbe
xor
lods
je
adc
xchg
out
cltd
and
scas
jne
jl
jge
lret
push
cld
test
pop
lods
int3
jno
int
in
jne
int
xchg
subb
mov
jmp
rcr
mov
nop
in
icebp
sti
jne
in
sti
cs
mov
movsb
and
cwtl
add
clc
xchg
mov
int3
xchg
int
in
shrl
outsl
push
aam
pop
mov
daa
cmp
pop
stos
cwtl
sub
jp
cwtl
pushf
lcall
push
lea
in
add
fildll
add
pushf
mov
enter
cmp
jle
xchg
cs
mov
stos
push
aaa
mov
stos
mov
mov
mov
xor
icebp
inc
or
movsb
cs
cmp
movsb
mov
icebp
scas
jne
and
inc
fstl
sub
push
fbld
int3
cld
push
push
imul
jp
hlt
insl
roll
jmp
mov
cmp
rclb
loopne
arpl
testl
sub
pusha
jl
cmp
sub
sub
mov
lea
cmp
ret
test
sti
jge
cmp
add
in
outsb
test
leave
jb
insb
jp
and
cwtl
aas
fistl
les
xchg
pusha
or
mov
mov
stc
imul
insb
je
std
in
jb
xchg
mov
cli
stc
pusha
xor
mov
jge
pop
sub
lret
out
push
mov
jbe
or
jbe
pop
pop
fcoms
jbe
xor
add
xchg
aad
xchg
decl
and
fiadds
fsubl
out
bound
adc
stc
jle
xchg
add
rorb
jle
mov
fsubrl
insb
pop
mov
out
jnp
ret
inc
test
rolb
lods
stc
inc
out
xchg
cmp
out
adc
iret
outsb
testb
dec
xchg
push
pop
test
nop
movsb
cmpl
stc
sub
clc
or
out
imul
das
cwtl
or
std
push
mov
jl
loope
sub
bound
in
out
ljmp
loop
mov
test
xchg
and
sub
pusha
xor
cltd
add
pusha
add
pop
outsl
fdivrs
call
sub
jbe
xlat
mov
jbe
call
cwtl
out
test
out
add
hlt
inc
insb
cmpb
lret
xchg
pop
test
xchg
push
in
shl
mov
xchg
mov
pop
adc
jns
call
pushl
or
insl
jo
pop
jle
sbb
fnsave
icebp
aas
dec
imulb
add
leave
mov
mov
clc
mov
fmul
cli
inc
mov
xor
jno
cld
movsb
sbb
cmc
fldl
or
or
jno
mov
push
ja
add
subl
imul
lods
lret
dec
xchg
iret
mov
fwait
add
jns
mov
mov
lods
mov
repnz
hlt
fwait
imul
jbe
cmp
lret
in
sbb
fiadds
or
insb
cld
dec
mov
jne
cltd
je
ljmp
arpl
in
scas
mov
imul
fisubrs
repnz
sub
out
pop
lds
ret
lahf
and
sub
out
cld
scas
lods
lea
xchg
jmp
cmc
add
adcb
mov
fdiv
cmp
lcall
je
cmpsl
into
mov
push
sbb
fistpl
push
sub
ds
xchg
test
adc
sahf
mov
cmp
bound
in
mov
lods
mov
pop
jns
xchg
cltd
adc
add
xchg
mov
cmc
mov
stos
push
inc
jle
ret
neg
hlt
addr16
lcall
lahf
lcall
or
adc
dec
mov
xchg
ret
and
data16
mov
repnz
adc
pop
std
xor
adc
or
sbb
xchg
incl
dec
pop
in
mov
outsb
ret
xchg
das
push
pop
or
mov
or
out
or
in
mov
gs
jb
sbb
cli
int3
ljmp
or
int3
cltd
mov
loope
sbb
pop
stos
mov
inc
movsb
hlt
cld
fcmovb
mov
push
enter
in
mov
add
addr16
dec
dec
fstps
or
int3
inc
call
or
mov
mov
adc
scas
sahf
pop
pop
xlat
fdivl
loope
pop
mov
xchg
inc
mov
add
stc
cmpsb
jle
iret
jle
mov
nop
mov
inc
lock
outsb
pop
mov
movsl
mov
pop
cld
mov
insb
mov
lock
ret
inc
adc
jo
movsb
insl
add
cli
xchg
pop
adc
imul
xchg
push
jne
cs
lcall
lock
jge
les
cmc
jl,pn
mov
jp
mov
imul
mov
mov
rclb
and
or
adc
pop
out
mov
mull
cmp
and
cmp
scas
fcmove
or
mov
mov
pop
mov
mov
adc
mov
mov
pop
fisubs
sbb
nop
push
popa
or
pop
xchg
jne
popa
clc
pop
pop
ljmp
push
fisubrs
cltd
or
pop
int3
lahf
inc
aad
ss
mov
aam
clc
mov
stc
mov
pop
je
icebp
xchg
stos
lods
or
cs
mov
aam
cld
ja
mov
mov
loop
pushf
sarl
lret
movsl
sahf
and
xlat
scas
outsb
ja
pop
repz
repz
mov
stos
mov
repnz
insb
mov
mov
aam
ret
fidivl
in
stos
insl
ret
outsb
jp
mov
loop
cli
ss
inc
mov
jbe
sub
repnz
fsubr
sahf
fdivrl
pushf
or
movsb
jbe
mov
mov
jno
add
add
cld
fsubrl
jbe
and
add
int3
mov
jp
jle
gs
lret
lods
mov
loop
stos
stos
jne
les
out
or
mov
push
gs
insb
imul
inc
popa
je
add
add
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
fmuls
xchg
lahf
pushl
popl
call
pushf
lea
je
pushf
cmp
push
pushf
call
add
push
outsb
fs
gs
popa
addr16
add
jo
mov
mov
in
sub
movsl
push
in
pop
mulb
int
and
fs
idivb
adc
xchg
pop
pop
add
push
cmp
fdivl
int3
ret
pop
sub
adc
nop
cmp
pop
stc
ljmp
jl
out
add
inc
xorl
pop
movsl
movsb
inc
xor
adc
cmp
inc
ret
cltd
les
inc
out
add
jmp
inc
pop
mov
add
add
pop
out
xchg
add
add
mov
jo
and
jg
ret
cmp
mov
icebp
out
mov
shll
or
fistpll
test
mov
ret
dec
lcall
repnz
jo
out
push
cli
mov
xor
sbb
mov
into
cmp
add
pop
shll
xchg
inc
addr16
pop
in
mov
pushf
jnp
jne
xchg
dec
imul
dec
in
add
movsb
sub
cmp
jno
jp
iret
xchg
xor
dec
jle
dec
ret
cmpl
jb
mov
fs
hlt
adc
outsb
dec
test
mov
push
and
call
add
dec
gs
jo
jb
add
add
gs
push
gs
imul
jne
add
add
je
jns
je
insl
inc
imul
jns
add
add
je
arpl
add
je
popa
insl
gs
imul
insb
gs
je
je
add
jne
loopne
push
test
or
scas
push
pop
push
sbb
mov
dec
push
sub
mov
out
add
popl
mov
inc
push
xlat
jg
lods
adc
enter
fistps
pop
fldt
pop
sbb
pop
mov
out
leave
sahf
jo
pop
adc
xchg
scas
mov
movb
inc
xchg
stos
pusha
mov
xlat
out
cwtl
sbb
into
stos
jbe
inc
or
and
mov
test
mov
repnz
cmp
outsb
adc
cmpsb
sub
cwtl
xchg
icebp
test
jp
fadd
pop
mov
pop
mov
repnz
sbb
mov
inc
mov
insl
sbb
add
lcall
xlat
and
leave
push
nop
imul
jge
ss
inc
test
int
fstpl
xor
inc
xlat
jg
mov
sbb
lret
lock
clc
subl
xchg
jg
popf
mov
scas
pop
xor
sbb
int3
or
aaa
xlat
jmp
add
lock
test
mov
adc
bound
xchg
mov
inc
ljmp
xorps
movsl
shl
inc
xchg
dec
dec
and
and
jecxz
fcoms
push
not
not
stos
not
mov
lea
push
push
lea
call
push
pushf
movl
push
lea
jae
cmc
bt
pusha
xor
lea
jbe
pusha
push
pushf
lea
call
push
lea
jae
bt
sub
call
add
inc
jb
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
cmp
add
add
outsl
jae
push
imul
popa
je
outsl
outsb
add
addr16
call
iret
clc
shr
pushf
pushf
cmp
pusha
call
jmp
push
xchg
decb
sbb
cmp
dec
test
mov
mov
inc
pop
sub
loopne
out
loope
cmpsb
dec
jmp
fistps
call
push
call
sub
pushl
adc
lea
pusha
pushf
push
pushf
pushl
ret
add
push
push
inc
push
je
jb
jne
add
add
mov
je
shrd
not
call
add
inc
push
js
inc
add
fnstsw
pushf
lea
call
pushf
call
add
addr16
outsl
arpl
popa
insl
add
add
jbe
inc
imul
mov
inc
out
gs
dec
inc
shlb
jecxz
mov
mov
mov
add
cwtl
aaa
xchg
cmpb
mov
enter
popa
xor
ja
jne
dec
and
shrl
in
push
sbb
inc
shll
lods
mov
push
lds
mov
jae
out
loop
lahf
in
inc
loope
pop
inc
jl
iret
jmp
popa
aad
stos
shl
leave
and
add
and
pop
enter
add
jmp
std
cmp
pop
repz
xlat
lret
rolb
mov
cmp
addr16
inc
sbb
mov
pop
lods
xchg
fcomp
int3
cmc
dec
mov
shr
jl
imul
repz
adc
pop
jl
jbe
jmp
popa
mov
nop
cs
and
fidivl
dec
push
cmpsb
adc
cs
jmp
sub
orb
pop
hlt
mov
pop
movsb
imul
lock
int3
dec
cmp
or
ss
sahf
and
stos
popf
push
add
es
cmp
fistl
mov
iret
push
jle
cmp
fmul
lds
xor
sbb
dec
imul
ja
push
lret
sub
cld
and
je,pn
add
je
insb
imul
inc
popa
je
add
add
outsb
inc
insb
imul
add
add
outsb
push
gs
imul
adc
or
xlat
movsl
push
mov
pusha
lea
call
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
outsl
jae
inc
gs
je
jo
pusha
adc
pusha
call
mov
rol
movw
movw
pushf
pushf
inc
stc
call
lea
call
clc
sub
pushf
movb
movb
pushf
lea
jne
pushf
movb
pushf
pushf
lea
call
pushf
lea
jmp
add
inc
outsb
jne
push
imul
lods
rcl
rol
bt
setnp
rol
dec
inc
shr
pusha
call
add
inc
gs
gs
dec
bound
arpl
insb
and
pusha
pushl
ret
add
imul
outsl
popa
add
daa
add
pop
jle
sub
mov
cmp
adc
push
xchg
pop
mov
sbb
sarb
test
andps
pusha
xchg
sbb
outsb
gs
xor
cs
insb
add
add
jne
push
gs
imul
je
jae
add
add
outsl
bound
push
outsb
insb
outsl
arpl
cmp
bt
not
mov
clc
bt
neg
call
push
lea
jne
pusha
call
add
inc
gs
jns
je
insl
dec
gs
imul
add
add
je
jb
jbe
push
jns
gs
add
cli
ud0
add
push
dec
inc
imul
je
outsl
outsb
inc
add
je
sub
lea
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pop
and
movsb
or
inc
aad
rcl
repnz
js
repnz
add
mov
xor
inc
test
jge
cmpsl
imul
repz
xchg
adc
sub
adc
daa
dec
nop
xchg
pop
and
mov
or
cmp
stc
nop
mov
movsb
sti
leave
outsb
int3
lods
push
in
mov
in
insl
jge
incl
dec
push
fsubs
cmc
sub
push
in
fisttpl
mov
mov
gs
testb
fnstcw
cmp
ljmp
mov
mov
push
fldcw
dec
mov
jbe
fcomip
inc
jnp
in
arpl
ds
mov
lods
sbb
insl
dec
cmp
push
dec
dec
pop
add
mov
mov
into
test
or
inc
imulb
movsb
imul
icebp
xchg
ficoml
xchg
push
mov
pushf
leave
cmpl
outsb
sub
test
lods
iret
jl
nop
jg
sub
lcall
aad
inc
dec
lds
and
daa
mov
fisttps
inc
clc
pusha
mov
xchg
cmp
jae
xor
adc
pushf
loopne
mov
fiaddl
or
mov
and
add
bts
hlt
push
xchg
sub
ret
add
arpl
add
add
gs
inc
inc
add
mov
and
call
add
pop
insb
outsl
jo
outsb
add
decl
and
xor
pusha
call
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
in
test
cs
fs
aaa
mov
xor
mov
push
jae
repnz
aam
mov
andl
jbe
rclb
cmp
dec
inc
lea
setns
inc
neg
cmp
xchg
sbb
sub
mov
cmp
or
mov
clc
call
push
call
cld
repz
cmp
call
lea
je
cmp
add
pushf
pushl
lea
jmp
add
dec
jo
outsb
push
jb
arpl
jae
jmp
add
push
gs
outsb
jne
dec
gs
js
add
subl
shr
data16
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
and
add
je
add
push
mov
mov
or
rcr
xchg
btc
pop
aaa
mov
sbb
cmc
mov
cmc
mov
bsr
lea
mov
call
add
push
gs
gs
jae
inc
inc
add
inc
enter
aaa
ljmp
enter
lock
mov
mov
scas
fwait
mov
jns
ds
cld
lds
call
pop
fcmovu
sbb
clc
movsl
repz
xchg
in
push
pop
outsl
xchg
sbb
xchg
in
push
adc
or
jno
jns
mov
xlat
aaa
ret
add
push
gs
gs
imul
jne
add
out
pusha
add
add
inc
gs
gs
push
gs
imul
gs
popa
jae
inc
jb
outsl
jb
mov
daa
cwtl
mov
sbb
adc
xchg
ss
mov
jmp
dec
mov
int
orl
popf
fnstenv
xor
int3
rolb
or
adc
mov
mov
push
sbb
mov
lret
mov
out
pushl
std
add
inc
mov
js
or
sbb
cld
rorb
dec
lret
rorl
sub
jl
adc
lock
mov
cmp
das
shl
inc
jl
adc
xchg
inc
out
lods
cmpsl
and
fidivl
push
adc
repnz
pop
fldt
push
push
js
jns
cmc
push
push
jne
push
adc
mov
shlb
in
lahf
sub
ljmp
sbb
pop
test
cs
jl
lret
les
js
dec
adc
xchg
sub
mov
cmpsb
jle
fbld
lcall
insb
cwtl
push
sub
push
xor
test
dec
jnp
or
mov
sbb
push
jg
mov
sbb
xchg
lahf
sbb
fisttps
aad
pop
lods
imul
mov
mov
mov
and
dec
add
rolb
testl
aad
dec
or
xchg
pop
add
fs
jae
pusha
pusha
call
or
roll
add
int
scas
daa
xlat
mov
repnz
sar
das
xor
jo
stos
or
mov
or
shl
xchg
pop
pop
push
fdivp
pop
rclb
cmp
mov
fiaddl
popa
hlt
pop
idivb
jmp
sub
clc
push
out
hlt
test
sbb
and
mov
push
pcmpeqb
push
cli
or
popf
cmp
inc
cmp
out
inc
jmp
test
cs
out
decb
filds
pusha
xchg
jle
scas
pop
mov
and
icebp
gs
cmp
xchg
and
fstps
jmp
aam
aas
jl
mov
je
jne
jae
jb
outsl
jae
add
dec
jo
outsb
push
jb
arpl
jae
outsl
imul
imul
insb
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
test
add
call
add
jb
arpl
add
push
outsl
jae
dec
gs
popa
addr16
add
add
outsb
fs
imul
xor
repnz
push
push
sahf
cli
mov
fcomps
pop
in
pop
mov
jmp
sub
push
pushf
xchg
xchg
dec
mov
pop
xor
mov
mov
and
adc
daa
jmp
cmp
push
hlt
into
jle
add
and
lret
movsl
test
pop
in
sub
mov
repnz
push
arpl
xor
push
hlt
sar
mov
test
loop
push
pop
insb
inc
les
lcall
arpl
daa
sbb
aas
and
pop
inc
int3
xor
mov
pusha
mov
psubusw
mov
xor
dec
dec
add
adc
in
mov
push
xchg
pop
ret
inc
add
fildl
xor
leave
sub
add
and
add
and
push
hlt
mov
stc
int3
das
xor
fcompl
iret
jne
sti
add
mov
inc
test
dec
aas
cs
mov
jne
and
and
pop
or
cmpsl
fldenv
pop
pop
mov
cmpsb
mov
out
xchg
add
in
sub
mov
test
outsb
cmp
sbb
movb
jb
or
add
push
mov
outsb
push
imul
popa
je
outsl
outsb
inc
add
mov
mov
push
roll
jp
sbb
movb
add
lea
push
mov
cwtl
and
sbb
mov
sbb
andb
imul
test
cmp
add
pusha
cmp
pushf
lea
jae
cmp
pushf
test
pushf
cmp
pushf
lea
jae
clc
clc
bt
cmp
pushf
movw
call
xor
out
add
mov
inc
sub
add
loopne
add
lods
in
inc
es
push
sub
popa
xchg
dec
es
sub
test
in
pop
push
sbb
xchg
arpl
mov
xor
pusha
imul
mov
sbb
xchg
daa
shll
xor
daa
in
test
cmp
push
ds
pop
push
xchg
loop
fadds
jmp
insb
test
xchg
fst
pop
call
ret
js
and
xchg
mov
adc
push
jb
sarb
ljmp
cli
and
bound
mov
andb
add
stc
inc
cwtl
into
sbb
in
ret
iret
xchg
xor
jmp
repnz
inc
fwait
test
and
bound
xchg
insl
mov
test
pushf
lods
clc
mov
cli
jno
rorb
cmp
mov
jae
jmp
outsl
mov
xor
test
scas
xor
scas
out
lcall
mov
lds
sub
inc
jns
jbe
dec
leave
or
jmp
cmp
xor
insl
push
je
std
xor
add
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
push
gs
jne
jb
dec
outsb
outsw
dec
gs
add
jnp
jae
xchg
negb
fnstsw
imul
xchg
sub
rorb
xchg
scas
adc
out
push
fs
push
rorl
sti
pop
push
addl
and
mov
jb
loope
divb
xchg
push
scas
ss
je
sbb
loope
mov
out
repz
xchg
jns
test
jne
imull
movsb
sbb
les
xor
push
sbb
cmc
sub
dec
popf
dec
repz
decl
xchg
jns
es
or
outsb
xlat
movsb
mov
push
adc
or
inc
sbb
clc
insl
and
dec
popf
dec
pusha
aad
rorb
pop
fsubrl
in
int
lahf
sbb
sub
pop
cwtl
les
sub
daa
cs
nop
dec
sub
popf
fimull
mov
push
or
push
pop
je
pop
and
push
sti
pop
sbb
pop
mov
mov
fisubrl
jns
out
cmp
mov
outsb
cwtl
cmpsb
iret
adc
jae
xor
call
repnz
xlat
cld
std
insb
inc
jne
push
add
aad
rol
lahf
fisubl
mov
lods
fisttpl
out
arpl
pop
call
lods
fildl
fwait
pop
iret
pop
stos
xchg
sbb
jl
mov
push
call
xchg
push
fwait
inc
push
sbb
jge
js
xor
dec
test
lds
int
pavgw
bound
int3
or
xchg
test
sub
outsl
outsb
pop
mov
push
mov
xchg
sbb
rcrl
daa
aam
hlt
dec
pop
mov
test
pop
rcrb
das
cmpsb
aaa
push
xor
aas
or
addr16
jmp
add
ficoml
sub
pop
out
ret
mov
pop
jbe
cs
push
outsl
aam
cmp
cmpsb
mov
sbb
sahf
pop
lods
insb
jmp
add
imul
ja
outsl
arpl
xor
fs
insb
add
fcompl
aad
cmpsl
xorl
mov
xor
or
rclb
gs
data16
push
inc
lcall
enter
cmpsb
mov
mov
cmp
lret
mov
xchg
loop
push
pop
mov
xor
ja
sbb
js
mov
in
stc
popa
js
dec
jle
repz
sub
xchg
aas
cmp
mov
jecxz
enter
out
sbb
push
in
xchg
push
xchg
xlat
cmpsl
sahf
xchg
iret
insl
cmpsl
dec
loop
scas
inc
sbb
gs
or
rcl
btr
mov
cmc
push
test
test
pushf
pushl
lea
je
clc
test
call
mov
pop
lea
mov
mov
call
add
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
decl
add
cmp
add
movb
push
mov
pusha
lea
jmp
push
jmp
bt
pushf
clc
cmp
movb
pushl
pushf
lea
je
pusha
pusha
push
lea
jmp
push
test
jmp
push
call
jmp
push
pushf
not
movl
lea
call
push
pushf
cmp
pusha
pushf
push
push
lea
jae
bt
cmp
pushf
lea
jae
clc
bt
cmp
jmp
add
inc
gs
imul
js
inc
add
fmulp
xor
mov
call
add
inc
jb
popa
je
push
gs
imul
jle
in
cmp
push
cli
jne
clc
mov
cld
out
xchg
pop
mov
addb
out
sbb
pop
sbb
xchg
nop
jge
jle
or
sub
clc
shrb
jge
adc
cwtl
fdivrp
jp
cwtl
push
out
std
push
pop
mov
in
add
out
fs
ss
in
ljmp
jle
jg
rcr
loopne
xlat
mov
cli
jp
push
cs
jl
mov
sti
out
or
add
data16
loopne
pop
repnz
clc
mov
repz
std
lret
pop
hlt
mov
idivb
gs
int3
dec
lret
enter
sbb
ja
pop
inc
movb
jb
lret
bound
add
dec
dec
cmp
adc
mov
mov
es
enter
hlt
xchg
cmc
gs
jb
out
jp
data16
popf
jnp
xor
jp
push
jp
jbe
out
push
test
mov
cmc
shr
repnz
mov
jne
popa
in
ret
mov
divl
push
in
lret
cmpsb
adc
or
outsb
xchg
ds
hlt
mov
cmp
in
in
lcall
stos
mov
fsubrl
int
shl
cltd
outsb
mov
clc
jnp
jb
cwtl
jp
outsb
xchg
sub
call
lcall
ss
aad
cmc
mov
ficompl
in
lods
cmp
cmc
mov
mov
cmc
mov
pop
fcmovb
ss
xchg
fdivl
cmp
cmc
movsb
in
stc
fidivrl
fdivrl
repz
fimuls
ret
in
jecxz
cwtl
ja
lret
cmc
jmp
test
sti
ss
xchg
in
iret
ss
dec
fdivrl
jno
mov
xlat
cmp
pop
jbe
jmp
decb
lcall
jle
cmp
lea
cmc
jb
mov
inc
in
ficoml
movsl
inc
cmp
cmc
pop
in
test
push
jmp
repnz
in
inc
fsubl
fmull
test
ficompl
lcall
inc
in
pusha
pop
xchg
in
dec
fsubrl
mov
pop
xor
in
in
sbb
gs
fwait
bound
insl
in
stos
out
cmp
nop
push
cmp
mov
inc
cmc
popa
in
xchg
lds
imul
cmp
andl
push
pop
jae
inc
arpl
ss
in
imul
cmp
pop
pop
xchg
decb
outsl
in
scas
lds
in
pop
fimull
ss
aaa
cmp
incl
decb
push
test
fistps
lcall
add
outsl
insl
or
and
test
pop
or
xor
adc
insl
and
add
insl
sbb
xor
lcall
add
adc
add
sub
lcall
add
outsl
insl
sub
adc
test
fistps
lcall
mov
sarb
jl
xchg
jae
sub
jno
testb
mov
cld
je
mov
neg
xchg
sbb
std
hlt
sbb
out
cmc
lret
mov
divb
fisubrs
and
std
ds
mov
into
idiv
mov
out
js
clc
jbe
mov
pop
lods
in
cmp
pop
fdivr
lret
jns
repnz
mov
mov
inc
lds
push
out
lret
int3
push
pop
pop
add
sbb
inc
or
lock
loopne
sbb
add
repnz
aas
lret
dec
ret
dec
enter
inc
cmc
add
fisttpl
addr16
fadd
in
dec
inc
in
push
push
push
pop
mov
bound
add
les
inc
xchg
mov
je
dec
jne
inc
xchg
cmp
dec
xchg
mov
ljmp
jbe
pand
int3
mov
in
out
dec
int
dec
int
inc
enter
cmpsb
sub
sub
ficoms
pushf
mov
icebp
les
sub
lcall
mov
repz
lret
test
push
sub
mov
mov
xor
dec
lcall
mov
cli
fdivrl
mov
pop
ja
fdivr
fimull
clc
push
xchg
data16
jmpw
outsb
cmpsl
fdivl
xlat
mov
xchg
nop
cltd
jge
std
adc
cmc
mov
jne
hlt
ss
aam
push
pushf
in
std
cmpsl
mov
inc
fnsave
fstl
push
mov
xchg
jge
lea
outsb
fwait
outsb
mov
outsb
xchg
outsb
mov
mov
into
cs
or
jo
jge
repz
jl
fdiv
jb
icebp
cmc
jno
lock
fsubrp
out
hlt
push
cmc
aam
pop
int3
enter
mov
push
nop
lods
mov
int3
std
sarb
cld
test
int3
lcall
cld
insl
jnp
cli
lcall
clc
lock
aaa
jle
hlt
mov
jnp
xor
in
call
in
mov
lock
shl
nop
in
loopne
mov
fdivr
mov
in
in
fisubrl
fdiv
mov
aad
xchg
in
in
movsl
ss
fdivr
mov
in
jmp
in
mov
icebp
mov
shl
xchg
in
loope
mov
fdivr
mov
in
jmp
stos
ss
in
mov
repz
shl
xchg
in
jecxz
mov
fdiv
mov
xlat
cmc
xchg
in
out
cmpsl
ss
in
xchg
out
scas
cmp
cmc
in
lahf
ss
cmp
push
in
outsb
fisubrl
ss
in
push
fdivl
cmp
push
in
data16
ss
out
ljmp
sbb
push
sub
dec
in
or
jb
cmp
adc
fisubl
ss
in
add
jl
cmp
in
insb
fisubrl
dec
in
or
je
cmp
in
fisubl
inc
in
add
js
cmp
sbb
push
in
or
jo
cmp
adc
pusha
fisubl
ss
in
add
push
jle
cli
xor
mov
fisubl
fsubl
mov
fidivrl
fdivrl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
fmul
idivb
cmc
out
ss
ljmp
loop
ret
ss
in
fmul
hlt
cmp
cmc
in
fdivrs
cmp
sbb
dec
cmp
in
cmp
popf
fcomi
jp
clc
lock
cmc
cmc
in
stc
ss
in
repz
out
cmp
jbe
jp
jb
std
int3
je
js
jo
jge
jne
jns
cmp
jae
cs
inc
test
jge
scas
cmc
sti
mov
insb
stc
retw
imul
hlt
ss
out
fsubr
out
loop
fsubrp
fcmove
ss
in
mov
mov
mov
sti
stos
enter
push
shlb
dec
sahf
arpl
pop
adc
mov
pop
gs
jle
out
ljmp
pushf
ljmp
hlt
pushf
mov
pushf
divb
popf
mov
stc
jl
cld
clc
jge
std
arpl
jle
fisttps
int3
sti
jge
mov
stc
fistps
lcall
pop
mov
xchg
je
shlb
hlt
jge
cmc
repz
repnz
ss
icebp
pop
ss
lock
add
test
jnp
test
pop
mul
jle
cmc
lock
pop
hlt
lcall
mov
aas
insl
jb
pop
mov
mov
mov
call
mov
fistps
fs
decb
sub
mov
mov
adc
mov
xchg
xor
mov
mov
ss
divl
test
cmpsb
leave
inc
and
inc
xchg
xchg
icebp
or
incb
mov
jne
stos
dec
int3
roll
incb
mov
dec
mov
hlt
adc
sti
dec
mulb
addl
out
popa
iret
testb
pop
into
adc
ja
dec
lods
push
out
jge
pop
xchg
cld
pop
add
xchg
dec
and
jo
subl
sbb
test
mov
subps
js
nop
push
pusha
push
sub
mov
adc
and
test
xor
xor
pop
ja
and
ljmp
clc
fwait
in
or
cmp
inc
addr16
lret
jo
push
pusha
push
nop
inc
sti
inc
adc
out
xchg
mov
notb
cmp
subb
mov
das
gs
xchg
mov
ret
add
mov
jp
repnz
decb
and
aas
push
xor
int3
ss
dec
testl
xchg
out
loop
xlat
shll
xor
scas
inc
sub
jno
incb
add
adc
cmc
mov
mov
and
int
push
adc
xchg
add
dec
movsl
in
pop
xchg
push
mov
xchg
pop
sub
fsts
xor
sahf
pushf
pushf
push
lods
add
dec
pop
adcb
in
mov
dec
xchg
inc
push
jge
dec
fdivr
test
adc
inc
jl
lcall
jns
mov
and
lret
cmp
scas
jp
lret
and
das
mov
testl
sbb
push
xchg
cmpsb
movsb
stos
adc
jae
and
out
popa
shlb
and
enter
out
cmp
pop
mov
clc
loope
mov
pop
adc
loopne
inc
mov
cld
cmp
cmc
jns
or
mov
leave
dec
js
rorl
testl
es
jnp
fsubrl
cli
cmp
test
lcall
push
int
sbb
dec
mov
or
jno
decl
rol
xchg
negb
inc
mov
outsb
pop
lahf
mov
cwtl
and
adc
cmpsb
into
mov
push
cs
pushf
popf
xchg
loop
test
push
outsl
push
dec
and
push
mov
pop
pop
jecxz
ficoml
fdivs
daa
sbb
or
idiv
pop
sbb
insl
dec
stos
mov
inc
lahf
dec
fstpt
icebp
cmp
inc
insb
jecxz
lret
inc
clc
cwtl
jge
jns
and
std
in
addr16
push
lahf
popa
mov
and
cld
leave
and
popf
popw
xchg
and
scas
adc
jo
outsl
push
cmpsb
mov
dec
mov
mov
leave
inc
stc
xor
sti
jp
pop
jecxz
or
idivl
jne
jl
fstps
xor
hlt
shll
loop
mov
mov
js
adc
and
nop
sarb
adc
xchg
push
incb
cmp
repz
ds
jmp
xor
inc
cmpsb
inc
into
pop
and
mov
mov
inc
leave
ja
cltd
popa
sti
lret
ja
jns
jbe
scas
dec
aaa
dec
cmpsl
out
int
adc
sbb
repz
stc
scas
xchg
cld
xlat
popf
and
decb
add
into
xchg
pop
pop
decb
adc
leave
push
cmpsl
nop
rcll
pmaxub
andb
aas
pop
movsl
pop
jle
jg
out
test
pushf
mov
mov
sub
jecxz
inc
mov
push
aam
pop
dec
adc
ror
mov
jno
push
mov
inc
jmp
ja
mov
sbb
cmp
out
push
xchg
int
jecxz
sbb
sbb
adc
inc
mov
mov
push
cli
mov
popf
push
xchg
sahf
test
jo
mov
cmp
mov
push
cmc
popf
fdecstp
insl
adc
movb
push
adc
and
add
mov
jno
loop
sub
xor
subl
inc
push
testl
maxps
scas
not
sbb
or
sub
jo
xchg
add
sbb
xchg
test
das
fcmovnu
ljmp
mov
mov
jmp
jnp
dec
loop
cmc
add
movsl
into
push
fwait
inc
aam
rorb
cmp
add
lods
inc
ss
scas
jnp
mov
mov
mov
sub
movsl
loopne
jg
add
leave
inc
outsl
jno
pop
fsubrp
sarb
jle
fdivrl
mov
jp
mov
idiv
cmp
adc
negl
js
scas
scas
fadds
mov
xchg
dec
cmp
mov
adc
add
aam
and
fwait
pop
cmp
mov
jbe
cwtl
sbb
xor
or
jo
mov
and
fisubrs
mov
div
jb
insl
je
xchg
loop
xor
cld
pusha
sub
dec
sbb
out
shrb
push
int3
loop
xlat
sub
das
mov
gs
incb
mov
sub
incb
das
enter
mov
mov
push
fstpt
lea
and
in
jecxz
jno
jo
jmp
mov
fcmovbe
decb
mov
mov
pop
popf
add
adc
scas
sbb
cmp
ret
bound
sub
stc
sub
jp
sbb
pop
dec
test
pop
adc
out
popf
les
sar
add
push
enter
inc
xchg
pop
adc
xor
mov
mov
and
sub
out
jno
icebp
mov
and
lret
inc
loop
adc
push
popa
clc
mov
jno
adc
jge
cmc
mov
cmp
int
cmp
test
adc
pop
pushf
mov
sub
orl
jnp
cmpsl
stos
cmp
and
lds
in
cmp
imul
adc
and
fisttpl
jbe
lret
out
sbb
aas
dec
aam
fsubrp
dec
add
std
lods
popf
sub
ss
das
push
cmpsl
sbb
mov
mov
add
jnp
mov
shll
das
mov
cmpsb
in
lock
call
in
jmp
data16
movsb
push
fiaddl
xchg
dec
push
jecxz
fcmovnb
andb
adc
push
xchg
cwtl
lds
add
jle
fprem1
mov
jns
mov
xor
pop
and
jnp
loop
pushf
pop
je
data16
fsubrp
fnsave
sub
mov
jge,pt
int
outsl
sbb
mov
mov
sub
and
test
shll
xorb
int
adc
xchg
push
pop
sarl
adc
xchg
lock
ja
jne
cmp
aad
mov
ss
mov
outsl
xchg
adc
dec
sub
ficompl
addr16
cmc
loope
jnp
insl
leave
aam
cli
imul
inc
sahf
inc
sub
mov
lods
imul
pusha
and
cmp
sahf
insl
incb
mov
and
mov
js
cmp
xchg
inc
in
inc
xorb
fisttpl
push
and
dec
nop
test
mov
push
xchg
loop
out
add
cmpsl
fisubs
gs
pop
mov
arpl
popf
jle
xchg
mov
nop
stos
into
push
or
sbb
sti
movsl
sarb
cmp
push
jl
push
jne
aaa
popa
push
fbstp
mov
push
clc
int3
out
icebp
mov
xchg
cli
lock
push
mov
lock
jle
jo
inc
lods
outsl
push
into
nop
test
addr16
dec
or
popf
paddd
repnz
dec
jb
test
fs
jg
add
jmp
es
fadds
hlt
sarl
je
out
mov
mov
divl
fistpl
pushl
cmpb
xchg
pop
jnp
mov
cmpsb
dec
std
pusha
shlb
jecxz
inc
mov
mov
sub
in
pop
push
and
out
dec
adc
gs
test
call
decb
imul
push
int
inc
sub
mov
je
in
outsb
ljmp
mov
push
inc
stc
fists
sbb
mov
add
sub
cmp
movb
rolb
push
mov
xor
xor
push
ret
out
push
jae
pop
xor
inc
ret
mov
repz
js
outsb
int
sar
les
ret
scas
cld
roll
fwait
inc
cmpsb
out
mov
dec
popl
mov
fildll
inc
leave
std
aad
lretw
add
daa
int
decb
lret
sub
push
push
or
xchg
adc
int3
fisubs
dec
decb
fidivl
jns
pop
xlat
outsl
jl
inc
sahf
and
orb
push
sbb
xchg
sub
mov
fidivs
sti
pop
adc
pop
push
in
loop
fdivrl
in
pop
inc
shlb
jmp
jo
cmp
lret
aam
std
gs
fbld
xchg
and
mov
and
inc
adc
lahf
push
mov
sar
andnps
push
mov
cmp
jge
push
rcrl
dec
addr16
sub
jno
push
and
add
adc
inc
or
dec
mov
or
in
mov
mov
fldpi
pop
ja
mov
lods
mov
into
or
adc
jecxz
or
sar
dec
mov
or
cmp
enter
sti
push
jg
call
rcll
add
and
or
add
jmp
mov
push
mov
jp
sub
xor
cmp
sbb
or
inc
adc
mov
adcb
add
inc
cmp
and
adc
or
arpl
jnp
lret
sub
movsl
push
int
gs
scas
push
dec
mov
idiv
iret
sbb
mov
pushf
mov
fdivp
sbb
cwtl
rcll
add
xor
imull
mov
stos
daa
cld
pop
sbb
sbb
mov
sbb
jnp
cwtl
pop
dec
mov
sahf
pop
push
cmpsb
pop
ss
orb
mov
ljmp
mov
aam
xor
sbb
mov
pop
sub
mov
inc
xorl
mov
jl
xor
and
inc
push
add
cmp
dec
pop
mov
dec
cmp
aaa
mov
mov
mov
insl
fwait
inc
mov
pop
not
orb
xchg
nop
ds
xor
push
cmp
bnd
cmp
adc
scas
xchg
sub
mov
lret
test
rol
jnp
pop
cmc
push
out
inc
sub
mov
ds
sub
gs
ret
push
inc
lods
pop
pop
and
push
scas
add
incb
shrb
jle
pushf
and
jb
movsb
mov
fidivrs
cmp
mov
movsl
popa
mull
ja
int
pop
sahf
push
dec
cmp
and
je
sti
incb
and
mov
and
or
mov
dec
dec
mov
test
push
xor
jp
in
incb
dec
insb
and
pop
sbb
push
cli
inc
int3
jnp
and
cmp
adc
adc
paddd
das
push
jb
and
mov
test
lcall
sbb
cli
lds
xchg
sbb
mov
bnd
add
lods
out
pop
scas
xchg
fidivrs
imul
inc
lods
test
fwait
cmpsb
sbb
pop
sar
daa
in
push
lcall
xchg
mov
movsl
dec
loop
addr16
dec
mov
lea
or
push
stos
mov
loope
rcll
pop
pop
inc
ljmp
xchg
rcl
js
or
lret
add
imul
fistl
lea
xor
mov
cmc
adc
sahf
adc
xchg
das
imul
mov
scas
aas
jmp
add
mov
aaa
test
add
hlt
inc
xor
insl
mov
add
jge
leave
pop
ret
hlt
ja
cltd
test
jnp
lahf
mov
inc
scas
iret
and
mov
mov
je
cmp
or
dec
idiv
sbb
fiaddl
lret
test
test
cld
dec
fsubrs
mov
fdivl
mov
arpl
and
ljmp
cmpsb
lods
sub
icebp
mov
dec
bound
inc
xchg
imul
mov
in
mov
or
sahf
push
into
fsubl
rsm
pop
out
mov
mov
mov
cmp
jae
aam
imul
call
fcomps
out
add
adc
dec
mov
pop
rorl
cmp
push
mov
mov
fidivrs
xlat
insb
jge
mov
repz
arpl
cld
xor
jmp
outsl
or
outsb
pop
ret
daa
adc
shlb
mov
push
or
mov
jb
jg
outsb
popa
int
fstpt
xchg
or
in
mov
scas
or
ljmp
mov
loope
data16
mov
gs
cli
push
mov
and
repnz
fisubs
repz
pop
jae
xlat
add
incb
jbe
mov
mov
adc
out
out
pop
sbb
mov
sub
pop
leave
lock
mov
cld
inc
jmp
push
test
shrb
jb
pop
into
mov
push
int
or
jp
arpl
and
adc
mov
bound
btrw
decb
dec
add
leave
mov
stos
fidivrs
push
jle
jecxz
movsb
sub
cli
je
mov
lds
push
sub
jbe
inc
and
push
sbb
sbb
divb
loop
ret
sub
incb
xchg
idivb
into
jmp
inc
cltd
in
push
lods
push
pop
mov
pop
sub
add
sti
xchg
dec
cmp
xchg
cmp
fcoml
jle
inc
addr16
out
xor
jmp
or
or
fwait
andb
int
xchg
dec
rcr
lahf
push
xor
adc
imul
jmp
sbb
orb
mov
in
out
sub
sub
movsl
mov
jge
ds
decb
add
pop
mov
push
push
outsb
sti
mov
ficoms
sub
loop
aas
xchg
push
jle
sbb
rorb
jo
stc
es
mov
out
hlt
add
adc
dec
sbb
testl
and
mov
sub
jns
jecxz
jge
push
lock
repz
mov
call
and
jp
ja
mov
sub
fists
add
stos
ss
push
outsl
sub
les
sti
jl
inc
jnp
mov
testl
mov
dec
test
or
fs
dec
xor
notl
mov
mov
out
xor
xchg
adc
mov
or
jo
ss
and
int3
leave
cmpsb
out
test
mov
xchg
xchg
inc
dec
adc
push
mov
cmp
jne
mov
int3
decb
sahf
add
add
mov
hlt
jle
push
dec
jge
enter
pusha
mov
add
out
lcall
into
pop
mov
loopne
sahf
push
pop
cld
xchg
pop
xchg
js
add
and
mov
mov
adc
sbb
test
add
in
mov
inc
nop
sahf
js
sub
pusha
std
push
jmp
out
push
ds
loope
adc
dec
rep
movsb
test
and
xor
mov
ljmp
cli
fwait
clc
adc
in
addr16
sarb
lret
jbe
dec
jo
mov
ret
nop
pop
mov
adc
sti
mov
out
mov
jmp
fisubs
mov
gs
sbb
mov
stos
mov
divl
and
dec
pusha
push
xor
mov
dec
jge
cmp
out
test
jnp
cmpsb
sti
xor
jno
jle
inc
mov
ja
push
dec
cmpsb
adc
cmp
and
mov
xchg
push
sahf
add
pop
call
imul
les
cvttps2pi
pop
pusha
xchg
xor
lods
push
pushf
decb
xchg
test
pop
dec
or
leave
in
adc
fistl
cld
push
jo
test
adc
sbb
jl
ja
imul
or
xchg
clc
out
mov
insb
mov
xchg
jp
decb
das
iret
popl
imull
adc
mov
xchg
out
sbb
stos
jge
push
and
js
and
and
popa
sahf
mov
mov
and
mov
pusha
es
cmp
xor
adc
je
nop
repz
cmc
mov
popa
mov
ffreep
mov
pop
jns
idivl
xor
cmpsl
imul
outsl
xchg
fdivrl
cli
sub
test
dec
sti
popf
incl
dec
push
push
mov
dec
jecxz
dec
sti
or
xchg
jno
cmp
xchg
rcl
adc
cwtl
add
cmova
and
adc
mov
xor
jnp
push
jne
mov
push
mov
and
adc
movsl
jecxz
xchg
jle
imul
sbbl
lcall
xchg
push
data16
mov
fisttpl
cmp
dec
mov
icebp
insb
inc
xchg
scas
aad
jecxz
clc
inc
xor
jns
jge
std
repz
addr16
popa
lahf
movsl
and
ljmp
leave
cld
popf
adc
and
pop
callw
cmp
cmpsl
jo
int3
popf
cmpsb
mov
jmp
leave
sub
inc
stc
jp
sub
mul
pop
dec
cmp
push
jne
pop
fsin
mov
inc
es
loop
xchg
mov
xor
lahf
inc
nop
pop
and
adc
outsb
mov
mov
and
inc
ds
repz
inc
cmpsb
inc
push
repnz
out
sar
mov
leave
lret
sti
popa
cltd
jbe
jns
aaa
dec
scas
incl
dec
dec
adc
pop
scas
stc
ret
xchg
incb
bound
popf
sub
dec
xchg
into
repz
pop
dec
pop
pop
ffreep
inc
adc
xchg
sar
nop
fimuls
jns
arpl
mov
scas
sbb
movsl
pop
aas
out
jg
or
mov
popf
mov
cmp
movsb
sub
jl
fists
sti
mov
insl
adc
xchg
dec
shl
dec
fldenv
std
jmp
jns
arpl
jle
push
pusha
jb
pop
in
int
imul
sbb
inc
inc
test
pop
rcl
sub
sbb
popf
and
addl
xchg
sbb
cmpsl
mov
mov
mov
pop
fstps
adc
ret
adc
mov
cmpsl
adc
and
hlt
lock
out
jl
mov
loop
xor
repnz
push
sbb
mov
inc
push
imul
lock
pop
pop
decb
sbb
imull
lods
mov
movsl
out
lahf
sub
push
mov
inc
stos
incb
cmp
movsl
dec
shlb
das
or
cwtl
ljmp
lcallw
roll
jns
jp
cmc
lock
loop
pand
add
std
or
aam
test
cmp
jmp
popfw
mov
mov
scas
in
das
mov
cmp
jge
movsl
pop
loop
add
rcr
test
rorb
jle
jl
int
fcompl
adc
lock
mov
mov
and
stos
insl
mov
popf
dec
scas
sbb
outsb
addb
jne
stos
xchg
rcrb
adc
movl
and
sub
mov
mov
xor
adc
jbe
mov
adcl
rorb
mov
aam
and
push
push
mov
cmc
shlb
insl
jb
loop
xchg
pusha
sahf
pop
xor
sub
sahf
jle
sbb
insb
xlat
xchg
loop
jle
cmpsl
sub
sub
add
sub
push
jle
movsb
pop
xchg
xchg
cmc
out
inc
mov
sbb
in
sub
add
inc
dec
addr16
inc
and
and
jno
cld
cmc
jmp
mov
and
into
mov
add
popf
pop
adc
rcrb
mov
jnp
and
mov
dec
jge
popa
cmp
sub
jp
and
sbb
cmpsl
sbb
push
fildl
pop
sbb
popf
mov
pop
mov
std
push
enter
inc
inc
mov
mov
mov
sti
sub
and
mov
pop
mov
and
inc
mov
loop
adc
clc
jecxz
jmp
imul
mov
jle
adc
mov
cmc
scas
cmp
int
mov
and
push
adc
push
xchg
into
mov
cmpsl
jnp
or
lock
cmp
mov
or
adcb
push
out
lret
jecxz
aas
sbb
sbb
jg
dec
pop
add
or
sub
ss
push
scas
jle
mov
mov
xchg
jnp
cwtl
loope
mov
ja
xor
jp
sub
in
cmpsb
fs
jnp
out
jmp
inc
inc
push
movsb
push
dec
xchg
add
cmp
movsl
inc
sbb
push
mov
iret
jle
mov
cmc
fldenv
xor
pop
cmp
push
fcomi
icebp
loop
ret
je
lock
ljmp
fnstsw
push
inc
sbbl
outsl
mov
test
iret
and
je
lock
or
jno
push
rclw
inc
int
xor
push
test
incb
push
add
cmp
aad
mov
adc
mov
popf
sub
fiaddl
scas
loopew
jecxz
insl
jp
sub
in
aam
jbe
pop
dec
imul
mov
ss
and
sbb
mov
xchg
cmp
sahf
scas
add
adc
pop
insl
hlt
mov
and
xchg
jnp
jmp
cmp
mov
and
je
fisttpll
add
nop
dec
dec
mov
mov
jp
add
ret
mov
cmc
das
incb
xor
mov
arpl
xchg
std
fucomi
lahf
push
push
stos
nop
sti
sbb
shlb
divl
mov
pusha
js
mov
push
jp
incb
int3
cli
xchg
xor
push
pusha
lock
jo
inc
sbb
outsl
lods
inc
out
addr16
fisubrs
addr16
icebp
or
repnz
popf
jb
and
cmc
test
jg
es
testb
je
shl
jle
insl
repz
mov
loop
fisttpl
popa
sbb
mov
loope
andb
fdivrl
loopne
mov
sahf
aad
std
dec
jecxz
jae
arpl
xchg
sbb
jle
push
pop
mov
in
ja
mov
or
in
lds
sahf
nop
aaa
sub
imul
jmp
push
sbb
ja
fsubr
scas
push
inc
out
mov
nop
outsb
in
incb
ljmp
or
lcall
lock
and
jle
mov
arpl
sahf
incb
or
inc
out
push
cmpsl
inc
nop
xor
insb
lock
push
push
imul
adc
xor
nop
ret
mov
repz
int
inc
mov
out
xor
inc
fwait
mov
jl
mov
pop
cmp
out
hlt
jp
or
mov
mov
data16
dec
add
daa
aas
cli
dec
dec
mov
decb
sub
into
or
push
jnp
stos
adc
in
jge
jnp
mov
fiaddl
call
outsl
xlat
fstps
addb
shll
mov
mov
adc
pushf
mov
pop
sti
xchg
pop
sbb
in
push
jo
sbb
add
pop
mov
pop
cmp
push
gs
dec
push
inc
mov
xchg
jp
sbbb
and
shl
jnp
lahf
mov
mov
push
rsqrtps
or
es
or
in
push
add
inc
pop
rorl
addr16
push
fs
mov
incb
lea
pop
xchg
jge
and
mov
decb
inc
xchg
out
ja
lods
scas
rorl
into
jnp
dec
mov
or
mov
adc
mov
add
mov
sbb
xor
enter
sti
sub
add
pushf
fnstsw
shlb
fiaddl
xchg
push
jbe
jp
mov
sbb
imul
sbb
ret
xchg
mov
cmpb
adc
decb
mov
cmp
sahf
outsb
xchg
nop
arpl
adc
xchg
xchg
sub
pop
lds
movsl
ds
int
cld
push
scas
xchg
gs
xchg
in
icebp
push
sbb
push
pushf
mov
imul
repnz
push
rcrl
add
adc
jbe
mov
cltd
aaa
jp
das
lcall
push
cwtl
fdivr
jnp
sbb
jle
icebp
xchg
std
and
into
push
fidivrs
mov
addb
fucom
xor
stos
fbstp
jle
in
mov
lds
sub
pop
mov
jne
xor
and
in
sbb
and
fnstenv
cmp
mov
js
dec
aaa
pop
cmp
mov
fldl
adc
cld
pop
mov
and
mov
pop
mov
negl
mov
ds
xchg
push
mov
cmp
stos
dec
cmp
jae
loope
adc
js
decb
mov
cld
xchg
sub
ret
push
pop
sub
inc
test
mov
ds
gs
lods
inc
push
ret
sub
pop
pop
scas
subb
loope
incb
lods
lahf
xor
and
inc
xchg
movsb
sti
jb
mov
and
adc
and
xor
int
cmp
adc
lret
fimull
push
cmp
ss
mov
and
mov
xchg
lahf
mov
or
dec
dec
test
cmc
and
xchg
int
push
arpl
dec
std
nop
xor
loop
sbb
pop
pop
inc
jle
push
mov
dec
jle
fsts
pop
xchg
adc
cmovae
dec
not
jb
das
mov
orl
cmovno
sub
inc
vminss
xchg
out
inc
jmp
ds
push
lods
jo
add
sahf
xchg
scas
icebp
pop
mov
lods
inc
aaa
frstor
cli
rcrl
in
repnz
push
stc
popa
dec
and
movsl
cmp
xchg
addr16
loop
xor
push
xchg
bound
push
adc
mov
mov
pop
mov
idivb
fimuls
xchg
jle
adcb
xchg
cs
xor
pushf
shr
out
scas
push
push
aas
pop
inc
sbbl
add
xor
mov
jle
xchg
xlat
cmp
imul
jmp
pop
jb
pop
out
shl
aaa
mov
fimull
pusha
insl
test
data16
mov
cmp
add
test
cltd
stos
ja
aas
jnp
sti
sbb
xchg
mov
lock
test
mov
pavgb
popf
or
sarb
negl
inc
fiaddl
ljmp
sbb
out
adc
inc
mov
adcb
mov
jno
and
mov
lods
cmpsb
pop
fwait
lock
mov
fdivp
bound
aas
imul
outsl
test
jmp
jge
in
mov
xchg
addr16
mov
or
cmpb
pop
stos
bts
pop
mov
mov
jae
mov
std
inc
incb
addr16
adc
add
push
dec
jge
scas
mov
cmp
lret
inc
mov
arpl
sbb
push
cmpsl
xlat
aam
jnp
orl
inc
repz
das
cld
mov
imul
or
sahf
push
ret
mov
daa
gs
cmpsb
cltd
or
popa
orb
iret
pop
daa
cmpl
sahf
outsb
enter
mov
jnp
or
mov
mov
xchg
mov
add
mov
rorl
mov
mov
aaa
jp
outsl
gs
mov
mov
stos
dec
and
push
repnz
jl
icebp
jae
jns
addr16
add
sbb
mov
imul
sbb
fidivrl
out
add
leave
pop
lret
sub
add
bound
push
ss
xor
jb
add
mov
push
mov
mov
aad
shll
lret
adc
pcmpgtd
in
xchg
add
leave
scas
cld
jnp
mov
xchg
std
sub
pop
jo
xlat
mov
xchg
push
and
mov
les
jmp
jb
mov
fwait
lret
inc
dec
sarl
pop
cmpsl
cltd
inc
sbb
push
lods
push
in
incb
repnz
add
bound
pop
jbe
cwtl
ret
pop
xchg
xchg
push
cmp
fsubr
cmp
int3
sbbb
addr16
push
mov
popf
es
or
fwait
or
cs
int
fmuls
loopne
push
lahf
mov
mov
fs
out
call
jmp
and
mov
push
repz
sub
out
jbe
pop
sub
jge
mov
ds
decb
rolb
push
add
push
fbstp
outsb
xchg
dec
fcompl
mov
aas
pop
loop
sbb
jnp
and
push
jo
inc
push
cs
es
add
stos
incb
jne
dec
adc
inc
mull
jle
fwait
bound
je
xor
jg
mov
lock
mov
jge
inc
popf
call
adc
cld
xchg
mov
js
inc
jno
out
pop
xchg
fiaddl
push
push
sbb
cwtl
cmpsb
sub
outsl
clc
xchg
ror
dec
mov
jl
push
out
in
gs
jecxz
loop
pop
fstpl
pop
fcmovne
fimuls
ljmp
out
sahf
mov
mov
push
clc
mov
jle
mov
repnz
pop
int3
clc
jp
ss
in
fsubr
sbbb
jle
mov
add
inc
gs
push
inc
gs
je
jo
not
bt
neg
call
mov
push
jg
in
cld
cmp
lret
sbb
fdiv
mov
cmp
cmp
or
cltd
lret
ja
push
add
jecxz
sub
jmp
jge
fwait
inc
cmp
cli
ja
aaa
jns
fcmove
mov
hlt
jnp
cli
call
arpl
in
dec
xchg
push
out
into
fdivr
mov
lret
add
push
add
sahf
cmp
jl
mov
push
mov
add
adc
sbb
cmp
push
pop
push
orb
mov
or
cli
into
lea
sti
negb
cli
fmull
or
mov
mov
mov
adc
push
loop
xchg
mov
stos
loopne
idiv
ja
js
mov
cmpsb
push
cmp
in
xchg
arpl
mov
lret
scas
inc
add
divb
or
cmp
cwtl
negl
lahf
aaa
clc
fcomps
pusha
jg
lods
fwait
jle
jno
jnp
out
ret
sub
cmp
lret
jp
pop
jle
or
or
add
add
cmp
addr16
decb
aaa
jge
mov
xchg
lahf
ljmp
test
mov
jne
outsb
into
outsl
jmp
outsl
mov
sti
repnz
mov
xchg
mov
cmc
mov
add
test
fcom
lahf
aad
push
sahf
sti
insl
adc
or
fldcw
loop
mov
into
lods
mov
sar
lret
jecxz
lea
aad
xchg
fisttpll
push
cmpsb
loopne
or
jnp
or
ljmp
cli
mov
repnz
fcmovbe
into
fldt
lahf
aam
loopne
mov
push
pusha
jb
lock
fwait
scas
jb
xchg
enter
xchg
adc
lods
mov
movb
lret
and
popa
mov
popf
fstl
mov
and
fwait
mov
clc
out
push
fidivl
in
imul
sahf
push
bound
mov
dec
jp
insl
cltd
mov
dec
inc
mov
mov
mov
imul
push
push
adc
adc
xchg
mov
jmp
adcl
sti
sbb
or
fstps
into
lret
fcoml
test
sbb
sarl
mov
aad
mov
popf
cli
mov
in
or
stc
pop
pop
out
mov
pop
pop
push
fwait
orb
push
jl
fcom
outsb
mov
mov
cli
mov
mov
sbb
push
xchg
int
std
stc
mov
mov
ss
jmp
and
data16
adc
jo
sbb
push
xchg
add
xor
testl
les
sarb
aaa
scas
stos
jns
les
insl
xor
mov
fiadds
add
sti
or
rcrl
adc
nop
cwtl
inc
into
sub
mov
jb
stos
push
sbb
adc
ror
mov
fdivs
addr16
pop
outsb
repnz
cmp
ss
jnp
dec
int
xchg
hlt
jmp
jmp
fsubrl
cld
fstpt
addr16
into
sbb
pushf
div
pop
jnp
sub
cltd
jp
mov
xchg
test
jecxz
rcrl
cmp
clc
lahf
rolb
cltd
mov
lret
clc
shrb
sti
cld
jg
mov
or
flds
nop
test
idivl
inc
ss
or
imull
pop
stc
pusha
aad
hlt
clc
mov
mov
adc
push
ljmp
and
jnp
mov
xchg
push
lcall
int3
mov
mov
rcrl
mov
jb,pn
dec
loop
test
pop
sub
cld
push
xor
cmp
push
xor
add
repz
lahf
push
mov
add
jbe
cli
and
dec
jbe
jmp
out
out
mov
mov
mov
data16
shl
mov
and
cltd
mov
mov
inc
ja
or
adc
aad
cld
shl
xchg
fcmove
mov
out
xchg
ja
cmpl
add
add
jge
add
jecxz
pop
jne
cmp
cmp
out
xchg
adc
xchg
jecxz
push
lret
adc
ljmp
push
mov
das
xlat
xor
push
sub
cli
aaa
mov
mov
pushf
movsl
and
xor
jecxz
std
mov
fidivs
adc
ja
lods
jecxz
test
loop
hlt
repz
xor
fdivrs
mov
dec
adc
sbb
imul
in
call
insl
or
sahf
xor
jns
das
cmp
pop
bound
jp
popa
insb
add
std
cltd
or
mov
and
in
jmp
and
mov
fimuls
pop
pushf
adc
and
call
jp
xchg
or
add
mov
lods
xor
pop
push
stos
add
adcl
repnz
icebp
std
lret
xlat
or
inc
ror
ss
fadds
inc
ds
push
pop
fcmovb
dec
movsl
pop
jle
jo
sbb
mov
and
inc
rcrb
in
sbb
jnp
cmp
ds
bound
ljmp
rolb
addr16
out
mov
into
out
fwait
lock
fnstsw
pop
xchg
into
fdivl
ret
aad
or
xchg
sbb
or
shlb
lds
test
mov
sbb
mov
movsb
adc
pushf
cmp
cltd
xchg
push
jge
pop
cli
negb
lahf
in
sarl
fxtract
push
or
sub
insb
mov
cmpsl
nop
cwtl
int3
and
sahf
clc
add
pop
push
test
hlt
stos
not
aaa
sbb
cmp
pop
sbb
ror
je
or
nop
fisubrl
mov
ja
mov
std
stc
xchg
mov
in
loopne
inc
loop
es
in
add
mov
jmp
jb
loope
fsubr
push
ljmp
add
or
test
idiv
jl
jae
jns
std
mov
mov
lods
and
ss
mov
lcall
jb
stc
divb
loopne
rcll
ret
jg
push
sbb
stos
imul
test
inc
and
and
mov
mov
fidivrl
mov
xor
into
scas
mov
cmp
clc
outsb
add
xor
arpl
mov
leave
jb
cmpsb
test
push
add
loop
out
jo
sbb
mov
fwait
outsb
loop
or
std
or
fisubrl
sahf
lea
js
mov
aad
jp
add
int3
or
fxch
int3
jo
cli
push
test
jl
scas
shll
cli
mov
call
dec
lods
loop
cmp
push
in
bnd
out
hlt
pop
pop
jne
in
addr16
pop
push
in
push
mov
or
negb
out
data16
iret
fisubl
ja
push
mov
mov
mov
sbb
adc
idiv
ja
mov
jl
sub
bound
enter
pop
in
in
cmp
or
mov
gs
or
rclb
sbb
mov
ret
mov
pop
jne
out
fstpt
xchg
sub
mov
cmp
and
sbb
or
in
mov
cmp
stos
mov
lret
clc
or
gs
inc
js
mov
insb
mov
pop
out
xor
cli
cmp
insb
sub
pop
cld
hlt
ja
inc
movsl
pusha
jle
xchg
adcl
mov
cwtl
cmp
fidivrs
push
imul
lret
jle
adc
jp
out
xchg
outsb
xor
out
adc
mov
xchg
xchg
cltd
add
cmp
adc
jo
mov
insb
in
push
aam
scas
shl
out
gs
push
sahf
in
cmpsb
test
pop
xor
in
in
fmuls
mov
add
sbb
js
movsl
hlt
jp
mov
sub
add
pop
inc
les
into
xchg
jl
cmp
cmpsl
jle
cmpb
push
adc
mov
add
xor
or
insl
sub
test
cli
xor
insl
imul
xlat
mov
inc
sahf
jp
and
out
fistpll
dec
pop
push
jle
adc
mov
out
xor
in
divb
insb
inc
adcl
repz
and
rclb
push
mov
insb
arpl
dec
orl
inc
dec
pop
imul
nop
test
sbb
out
or
dec
cmpl
ljmp
loopne
imul
adc
cltd
loop
xchg
int
negl
mov
pop
data16
sahf
xchg
jnp
dec
xchg
push
imul
pop
js
aas
cmp
addr16
jl
push
insl
scas
push
mov
cmp
out
cmp
jle
pushl
push
lea
jae
xchg
pushf
mov
setl
inc
mov
mov
lea
push
mov
call
add
push
push
js
arpl
gs
add
add
je
gs
je
jo
imul
stos
pushl
movl
lea
jmp
movw
jmp
add
push
gs
jb
popa
je
dec
gs
add
xor
mov
lea
aas
out
fsubrl
pusha
lods
mov
test
inc
jmp
add
lods
subb
roll
test
cmp
loop
lret
fadd
bound
cmp
fadds
jecxz
scas
mov
cld
xchg
pop
out
and
jbe
fs
xor
ja
or
add
test
jo
in
push
sbb
test
xlat
lret
xchg
les
test
cld
lea
push
sub
lea
sets
pop
call
pusha
test
movw
mov
call
jne
gs
xor
fs
insb
add
push
lods
lret
cmc
pop
adc
lea
loop
pop
stos
xor
int3
sub
push
pop
pop
out
mov
and
call
dec
repnz
or
sbb
jmp
rcl
pop
sti
dec
loope
dec
mov
les
mov
les
xchg
mov
aaa
jae
mov
shrl
add
data16
and
cmp
or
lods
mov
jo
iret
sub
xor
dec
push
mov
jno
ds
dec
cmp
add
je
imul
js
dec
outsb
addr16
inc
add
xor
pushf
movl
pushl
pushf
mov
mov
pushf
push
pushl
ret
add
push
insb
jae
jb
add
push
adc
add
lea
jp
push
pusha
pushf
dec
bt
test
bt
shl
call
add
inc
outsl
outsb
je
outsl
insb
push
gs
imul
push
inc
inc
insb
gs
outsb
jne
add
lcall
jnp
stc
pusha
rol
mov
inc
jmp
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
call
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
ret
das
mov
cmp
mov
test
bt
test
cmc
xchg
sar
movzbw
clc
mov
push
call
push
add
js
test
pushf
mov
pusha
jmp
add
inc
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
push
push
add
es
jb
stos
mov
not
movw
pushf
pushw
popfw
call
je
add
and
lahf
cwtl
cmp
jo
ja
sub
inc
xor
insb
xchg
mov
dec
js
ss
mov
cmpsl
ret
sbb
test
and
mov
test
shll
xchg
mov
inc
sbb
fists
stc
in
dec
add
clc
add
scas
idiv
fisttpl
mov
js
in
clc
stos
push
mov
add
adc
loope
arpl
call
inc
ss
leave
icebp
sub
adc
fcomi
push
mov
jl
and
mov
xchg
imul
hlt
pop
inc
jmp
xchg
movsl
test
add
inc
in
jns
andl
sbb
or
xchg
insb
and
jnp
cmp
adc
xorl
cmc
fucomp
aad
ss
fdivl
lahf
in
cltd
ficoml
mov
clc
negb
lret
pusha
gs
jbe
in
jp
jg
ret
in
mov
in
movsl
fcompl
in
cld
mov
repnz
cmp
sbb
jbe
int
enter
mov
cmpsb
cmp
fiaddl
out
in
in
cmp
cmc
in
rcr
ss
stos
fcompl
sub
mov
in
ss
fcomp
rol
cmp
in
lahf
fcoml
adc
out
cmc
jecxz
fcomp
lret
ss
in
mov
lcall
mov
in
jmp
in
cmp
cmc
fidivl
sahf
xchg
cmp
add
cli
xor
cli
lock
call
int
in
mov
in
mov
out
into
lea
lcall
icebp
in
call
int3
cmc
in
mov
in
movsb
fcompl
ljmp
xor
inc
jp
fcmovbe
ss
in
rcr
stos
cmp
fimull
scas
in
repz
in
fcomi
shr
enter
adc
jbe
jp
cmc
xchg
in
xchg
sti
das
inc
lcall
fmul
lds
mov
gs
test
mov
hlt
rorl
fdivp
sti
scas
mov
in
xlat
sarl
into
cmc
lret
fidivrl
jg
push
fstps
dec
sub
jne
repnz
aad
imull
or
or
mov
loop
loope
pop
xchg
and
mov
cld
xchg
jbe
cwtl
out
test
sub
movsb
pop
mov
das
pop
jmp
ljmp
cld
jge
pop
mov
and
std
xchg
lret
mov
mov
mov
lods
push
adc
mov
jge
mov
loop
mov
lock
sarl
fnstcw
or
int
mov
mov
mov
ja
sarb
aaa
mov
sahf
dec
xorb
add
leave
addr16
mov
fimuls
mov
jns
pusha
imul
mov
clc
xor
hlt
fcomps
mov
inc
push
les
push
sbb
stos
mov
lret
sub
jae
jg
xor
mov
mov
popa
into
mov
repz
ret
dec
dec
lcall
fs
sbb
xchg
sahf
cmp
popa
sub
ds
sub
addr16
lahf
test
mov
xchg
loopne
push
dec
pop
fidivs
ss
ljmp
das
mov
popf
ja
fwait
xor
inc
xor
out
aaa
fnstcw
jae
iret
popf
mov
in
repnz
jle
xor
pop
xor
sub
jle
push
sarb
data16
jp
test
adc
in
incb
ret
pusha
sahf
xchg
sub
iret
call
sub
mov
jmp
mov
push
loope
cmp
ja
and
ljmp
pop
push
ret
mov
rdmsr
loopne
adc
jle
push
xlat
in
scas
lahf
mov
inc
js
fidivl
jne
jl
cmpsl
mov
sub
insl
mov
call
rcr
xchg
pop
pop
std
jo
mov
shlb
pop
mov
jb
cmp
lds
out
cld
ret
xor
adc
jg
in
lcall
out
pop
xchg
aas
out
adc
lahf
stos
scas
shr
cmpsb
and
mov
jb
subb
addr16
adc
dec
lahf
jno
mov
sbb
jns
xchg
mov
mov
lahf
jge
jl
shrl
ret
mov
adc
movsl
adc
dec
mov
repnz
stos
fwait
xchg
dec
std
lds
sbb
xchg
incb
imul
test
xchg
dec
push
mov
push
enter
shll
mov
out
add
leave
sbb
lods
enter
cltd
push
mov
decb
push
sub
hlt
xchg
cmp
faddl
adc
aam
jmp
addb
push
and
ja
divl
out
ds
loop
sbb
stos
add
les
imull
pop
lret
sbb
popf
imul
jle
dec
lahf
fwait
cmpsb
or
mov
bound
jno
push
imul
mov
hlt
shrb
mov
mov
gs
jmp
and
imul
mov
stos
pop
pop
inc
xchg
lock
testb
jecxz
cmpb
mov
lahf
lock
cmpsl
repnz
and
sub
jecxz
stos
and
fimuls
push
scas
jno
lds
mov
and
fstl
adc
push
lock
inc
add
adc
mov
mov
jecxz
shl
fists
jg
out
mov
icebp
push
es
jnp
sbb
lret
rclb
lahf
out
add
in
xlat
and
cmp
arpl
mov
add
jns
fdivrp
scas
shl
leave
fs
sub
xchg
popf
pop
and
orb
add
sub
push
pop
loop
icebp
sbb
sub
mov
popa
les
push
push
rcr
dec
xchg
out
dec
jecxz
lcall
lds
dec
js
jmp
push
lock
dec
xchg
pop
loopne
std
mov
jge
fbld
xchg
cltd
sbb
into
cmp
sbb
or
loopne
jbe
fstpl
shl
add
mov
dec
icebp
lea
outsb
decb
xor
mov
cmp
push
loop
pusha
in
jle
testb
jecxz
test
fstpl
pop
loopne
addl
xchg
stos
in
xlat
imulb
out
mov
shlb
cs
repnz
push
xchg
pop
xchg
decb
mov
rcll
mov
mov
scas
push
sarb
mov
es
repz
mov
dec
push
je
rolb
cmpsl
test
pop
or
aad
call
into
dec
cmp
jb
outsl
mov
in
and
test
xchg
decb
scas
push
push
inc
icebp
inc
sti
rclb
imul
mov
addl
push
decb
loop
sbb
daa
dec
scas
mov
ljmp
fcmovb
inc
cld
xor
mov
movsl
jg
fwait
imul
fdiv
imul
call
mov
cmp
cwtl
cs
jnp
loopne
and
xchg
sub
fst
jnp
insl
xchg
out
repz
pop
addr16
popa
mov
push
call
clc
test
sbb
lods
xlat
fisubrl
repnz
sti
or
ljmp
push
xchg
adc
out
imul
repz
push
test
push
xor
shlb
mov
dec
sahf
mov
data16
testb
mov
mov
mov
rcrl
add
cmp
sub
outsb
and
nop
sbb
mov
cmp
mov
and
mov
nop
sub
cmp
dec
and
repnz
dec
stos
mov
cwtl
and
in
ret
or
sahf
test
in
fld
jnp
mov
stos
pop
pop
fdivrs
repnz
jmp
fsubs
push
cwtl
dec
mov
testb
shlb
xchg
insl
imul
jb
jns
testl
push
shll
mov
out
lds
out
in
nop
enter
mov
mov
push
xchg
xchg
pop
jge
bound
popf
or
aaa
lea
lret
xchg
popa
arpl
and
jmp
clc
mov
or
cmpsb
lret
xchg
inc
push
push
mov
lock
jmp
icebp
jge
sbb
rcrb
lcall
sahf
lods
pop
testl
add
add
lret
xchg
mov
scas
out
call
daa
subl
lahf
pushl
jp,pt
repz
cmc
jle
cmp
insb
pop
aaa
mov
jnp
sub
outsb
outsl
cmpl
push
inc
mov
fistpl
hlt
or
sbb
scas
push
lret
enter
cmpl
test
dec
jnp,pn
test
adc
jo
ss
shll
jge
mov
mov
shlb
call
pusha
pushf
mov
fsubrs
jne
sbb
xchg
adc
shl
inc
dec
xor
mov
js
jg
iret
jl
jno
cli
xchg
mov
sbb
clc
sub
jns
dec
dec
gs
out
outsl
sarb
bnd
bound
je
pusha
in
std
mov
mov
in
clc
out
or
mov
jnp
push
mov
pop
out
scas
sti
ss
and
adc
sti
negl
stc
adcl
test
lds
jle
js
pushf
sbb
mov
mov
push
sub
cmc
or
out
and
dec
or
xchg
addl
sub
loop
rcr
sub
out
xchg
add
push
iret
and
notb
ja
fadds
and
cmpsb
dec
sub
jo
aas
mov
mov
test
fidivl
jae
pop
cmp
ret
jnp
es
push
mov
cmp
fdiv
lods
jae
lret
decb
xlat
icebp
imull
fildl
pusha
pop
push
inc
ljmp
mov
mov
dec
cli
xchg
lds
shr
cmp
lock
ds
cld
ret
jnp
lahf
loope
pop
insl
and
xchg
pop
add
iret
cmp
into
pop
call
pusha
ja
in
rclb
clc
sbb
pusha
pop
ljmp
or
pop
bound
out
stos
into
mov
push
mov
cmpsl
je
lock
add
sub
jle
inc
push
mov
or
mov
jbe
sbb
mov
mov
and
sti
mov
loop
mov
lods
mov
idiv
push
pop
add
in
or
test
xor
inc
dec
sub
ja
or
sti
mov
in
scas
in
xchg
and
xchg
cmp
cmp
cmp
push
in
movsl
insb
add
hlt
mov
xor
or
mov
ljmp
xchg
loopne
clc
scas
mov
ja
sahf
aad
fiadds
out
das
aaa
cmp
push
push
jge
stc
in
decb
pop
xor
js
or
mulb
repz
pop
test
push
and
push
fwait
into
sbb
sbb
ljmp
xor
sar
mov
push
sub
or
aaa
ljmp
adc
jle
lcall
ss
aaa
sar
xor
in
or
jb
fiadds
mov
dec
jp
sbb
or
incb
cmp
mov
dec
mov
mov
push
jecxz
lahf
inc
out
paddd
dec
push
cmpsl
cmp
jp
adc
xor
jle
pop
sti
idivb
in
sbb
les
lock
jecxz
or
cmp
out
call
jb
shlb
pop
xor
or
cs
outsb
loop
mov
inc
pusha
fnstcw
mov
pop
xchg
fsubl
mov
idivb
or
out
mov
pop
call
pop
inc
cld
jno
jg
into
sahf
dec
in
fs
mov
lock
gs
mov
sub
cmp
std
fdivr
sub
sbb
test
push
lds
stc
adc
push
cmpsl
xchg
outsl
roll
mov
insb
cmp
sub
pop
push
or
daa
sbb
inc
call
mov
cld
lock
pop
bound
std
vdivpd
lea
lcall
push
push
add
ret
aad
inc
inc
scas
mov
xor
sub
loop
aaa
std
clc
ja
inc
ficomps
push
cmpsb
mov
xchg
or
jno
adc
fadds
popa
je
dec
cmp
scas
loope
jle
mov
mov
lock
xor
stos
mov
std
popf
jle
push
push
xchg
sub
mov
bound
sub
mov
lret
xor
adc
mov
dec
xor
fisttps
pop
js
fimuls
mov
cmpb
arpl
or
decb
pop
xchg
and
cmp
popa
xlat
cmc
cmpsb
sahf
into
xadd
mov
dec
into
push
mov
mov
outsl
ficomps
das
pushf
fdivrl
sti
lock
mov
lahf
pop
repnz
out
cmp
mov
sahf
ret
ficoms
inc
in
cmpsl
mov
and
add
or
cmp
test
inc
ret
mov
out
push
cmp
mov
mov
popa
cmp
dec
sti
jmp
add
fmul
idivb
or
sarb
in
xor
insl
movsb
mov
dec
std
mov
lcall
mov
jns
movsl
xchg
cld
dec
in
mov
out
lds
pusha
jns
and
pusha
or
cltd
test
inc
push
sahf
mov
std
add
pmuludq
mov
xchg
jnp
mov
loope
dec
cmp
cmc
stos
call
add
adc
aas
mov
lock
and
xchg
adc
pop
aad
push
pop
dec
ret
push
nop
lock
fiaddl
lcall
inc
push
decb
movl
lea
jmp
add
inc
gs
popa
insb
gs
gs
outsb
je
imul
ds
and
add
and
incl
add
popa
fs
imul
xchg
shl
jmp
pusha
call
ret
testb
je
lret
mov
xor
arpl
xchg
sbb
xlat
push
mov
xchg
jno
cmp
sbb
pushf
mov
loopne
pop
cwtl
mov
pop
stos
mov
xor
xchg
cmpsb
sub
cmpsb
mov
lcall
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
fdivp
mov
sub
add
add
pop
repnz
jns
push
call
jae
icebp
inc
sub
push
in
add
adc
sub
add
add
pusha
cwtl
testb
add
cmp
jg
mov
sub
add
add
mov
sub
add
add
sbb
sub
add
add
pop
shl
icebp
aad
push
or
add
pusha
in
loopne
mov
sub
add
add
cltd
pop
ljmp
push
in
inc
add
adc
ja
or
sub
or
add
fisttpl
repnz
sub
add
add
adc
lock
sub
add
add
jp
testb
push
or
add
pusha
shl
negb
add
add
push
repz
add
add
std
sub
add
add
jo
sti
in
aad
push
or
add
loopne
aas
lock
sub
add
add
ret
cmpsl
cld
add
sub
adc
add
bound
adc
sub
or
add
mov
push
aam
push
or
add
pusha
pop
pop
mov
add
add
lahf
pop
icebp
dec
xchg
lods
inc
adc
push
push
cmpsb
icebp
and
jecxz
jmp
ss
sub
out
and
or
lret
xor
mov
in
add
mov
cs
test
int3
add
fistpll
aaa
cmp
add
jge
sbb
leave
push
dec
pop
mov
xlat
aad
cmp
and
pop
scas
shll
inc
xor
dec
iret
inc
dec
sub
cli
jl
fwait
bound
sub
cmp
pop
hlt
daa
jmp
cmpsb
enter
in
mov
xor
inc
cmc
cld
lret
xchg
test
push
rep
lahf
arpl
or
jb
je
ds
pop
cmp
lock
fnstsw
push
or
pop
sbb
std
inc
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
outsb
fs
gs
jne
arpl
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
out
out
sub
xor
cmp
outsb
sub
push
rcrb
adc
mov
dec
ret
and
inc
pop
aas
cmp
sub
test
xor
es
sbb
jae
out
jl
gs
inc
shll
xor
ret
cmp
mov
mov
js
fwait
gs
shll
xor
ret
lret
call
mov
testb
popa
test
je
push
pop
test
add
fldenv
inc
fwait
pop
sbb
cmp
aam
sbb
cmpsb
xchg
sub
fadds
xor
mov
pop
loopne
adc
xchg
dec
test
push
jge
std
dec
lret
xchg
data16
cmp
cld
and
sbb
inc
push
jb
bound
dec
ljmp
pop
dec
mov
and
incl
add
pushf
lea
jmp
push
call
xchg
push
call
dec
fmuls
je
imul
push
call
je
cmp
mov
loop
push
push
loop
lret
sbb
sub
sbb
inc
sarl
sub
sbb
mov
pusha
cmp
lock
pop
mov
add
sti
pusha
xor
outsl
rolb
es
mov
inc
cmp
jo
cmpb
ss
repnz
test
cmp
js
es
xchg
aaa
sbb
cmpl
xchg
push
adc
nop
push
int3
mov
jl
mov
dec
in
daa
test
xchg
subb
add
or
imul
xor
mov
popa
jbe
pop
insb
andl
movsb
jae
mov
lods
inc
fistl
sub
cmp
fsubs
lcall
ljmp
sub
add
mov
pop
mov
fcompl
cmc
imul
imul
and
rep
ds
sahf
xchg
stc
adc
arpl
jo
and
push
mov
cmpsl
jne
stos
xchg
ds
sti
dec
lods
inc
add
mov
rol
pushf
pushf
pushf
pushf
inc
bt
call
push
call
jle
imul
inc
imul
gs
add
push
insb
jae
insb
insb
outsl
arpl
clc
cmp
cmp
pusha
pushf
lea
jae
test
pushf
bt
call
add
inc
insb
outsl
bound
dec
outsl
arpl
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
lods
out
inc
dec
mov
sbbb
imul
dec
jle
andl
ljmp
xor
imul
fcomps
lret
cmp
sub
aam
pop
test
arpl
lock
inc
sub
cli
or
push
sub
adc
lret
xchg
mov
adc
pop
mov
movb
pushf
lea
je
clc
cmp
jmp
lock
mov
adc
fadds
mov
mov
ljmp
daa
rolb
xor
mov
pop
es
add
inc
stos
aaa
in
mov
test
std
jp
add
mov
xchg
mov
inc
int
cmp
fcoms
fwait
xchg
mov
add
popa
div
xchg
ja
inc
fiadds
xchg
push
pop
dec
stos
add
mov
xchg
clc
and
gs
pusha
adc
push
pushl
lea
jmp
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
cmc
push
sar
bswap
test
lea
mov
bt
bt
cmp
push
cmp
push
call
add
inc
gs
push
push
jb
outsl
jb
je
add
mov
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
addr16
jo
outsb
dec
gs
js
add
add
imul
jo
imul
adc
call
adc
add
outsb
inc
gs
je
jo
add
xor
rep
call
test
pushf
jmp
push
call
leave
rcl
add
fs
imul
add
imul
add
mov
push
jae
ljmp
lods
jb
in
pop
inc
insb
mov
or
inc
repz
jl
imul
or
dec
sub
in
shll
out
lods
push
pop
rcl
xor
aaa
enter
sub
cmp
xor
and
dec
xor
sub
jo
stos
pop
mov
xor
and
lods
push
btc
or
jl
mov
pusha
mov
sub
call
mov
movb
lea
jmp
add
arpl
gs
arpl
je
rcl
mov
cmp
bt
test
pushf
call
add
inc
gs
gs
imul
lea
call
jmp
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
add
arpl
je
add
insb
jae
jb
insl
jo
inc
add
inc
mov
xor
aad
push
aaa
cld
add
daa
and
push
faddl
and
lods
add
push
inc
push
pop
js
scas
int3
lret
xchg
inc
mov
incl
adc
mov
shl
mov
call
or
sub
fsub
stos
xorb
pop
xor
test
ja
jecxz
inc
aas
mov
scas
sub
push
daa
cmp
xor
cld
iret
or
xor
je
sarl
add
cmp
jae
dec
adc
jnp
loope
push
jae
scas
test
movsl
xchg
daa
xor
loopne
dec
pop
mov
ds
sub
xor
jno
mov
mov
cmpsl
ss
mov
sbb
jmp
pop
jge
icebp
and
pop
add
jmp
xchg
mov
dec
mov
adc
in
push
mov
loop
aam
xor
xchg
loop
insl
jg
xchg
fsubrs
pushf
das
and
adc
in
mov
in
sbb
hlt
pushf
jbe
xchg
jmp
sbb
ss
pop
sbb
push
lret
and
je
lret
loope
loop
dec
push
addr16
dec
pavgw
xor
popf
incl
jno
imul
inc
scas
xor
cld
sub
movw
pushl
pushf
movb
rep
pop
mov
pushf
pushf
lea
jmp
add
push
gs
push
push
jb
outsl
jb
je
add
addl
pushf
mov
mov
pusha
lea
jmp
shrb
call
mov
xchg
lds
ss
mov
push
adc
addb
lea
btr
mov
not
add
btr
sub
rol
add
not
mov
pushf
jmp
pusha
pop
movzbw
mov
movw
pop
pop
mov
jmp
add
push
insb
gs
add
push
gs
insl
gs
push
add
add
push
cmp
cli
scas
add
push
cmc
mov
pusha
movb
test
push
lea
je
ror
bsf
ror
add
xor
rcr
movzbw
mov
mov
sar
cmc
inc
mov
shl
pusha
mov
cmp
pusha
test
jmp
fnstsw
cmp
cmp
lahf
arpl
cli
pop
aad
nop
inc
int
dec
repz
push
icebp
outsb
jae
mov
setae
push
cmpsb
xchg
push
cmp
call
dec
call
add
inc
jb
popa
je
inc
imul
jns
add
js
mov
add
pop
imul
inc
js
je
jb
arpl
jae
pusha
movw
jmp
mov
pushf
pushl
mov
pushl
ret
push
push
or
gs
mov
push
fcomi
cltd
repz
pop
dec
xor
sub
push
jae
lcall
mov
enter
mov
shrl
lods
or
sbb
popa
adc
jge
pop
jns
mov
cmp
add
inc
insb
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
push
call
je
sub
je
jb
outsl
jb
je
inc
insb
popa
jae
add
shl
sub
rol
and
shr
mov
jmp
lea
je
call
not
cmp
bsr
mov
mov
pushf
and
cmc
push
pushf
add
add
stc
cmc
pusha
add
jmp
push
call
mov
jae
add
popa
insb
imul
je
add
add
outsb
fs
gs
inc
imul
ljmp
jo
add
xlat
xor
add
add
lds
add
ficoml
dec
outsl
jbe
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
inc
call
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
add
add
inc
outsb
popa
bound
imul
jbe
arpl
xor
cs
insb
add
cltd
sbb
add
add
fs
gs
jne
arpl
cmp
mov
and
xor
push
enter
scas
xor
mov
pop
cltd
sbb
int
jecxz
jno
mov
push
xor
ja
pop
in
cltd
jns
sub
mov
adc
loope
xor
lcall
and
mov
jb
xlat
pop
cmpsl
lret
jmp
xchg
pop
ljmp
mov
mov
stos
stc
ret
aad
lahf
and
pop
aaa
das
les
xchg
and
inc
test
add
inc
gs
inc
add
pushf
jmp
push
call
adc
add
jne
gs
gs
outsb
je
out
xor
lock
loope
or
aaa
scas
or
stos
add
mov
cmpsb
testb
hlt
lods
push
or
scas
push
addr16
xchg
or
ret
jne
out
data16
and
loopne
cmpsl
gs
adc
inc
inc
sbb
ret
jo
add
and
in
mov
ss
and
and
adc
enter
loopne
int3
xchg
andl
cli
test
lret
popa
xorb
mov
inc
jo
pop
add
js
or
loop
jmp
or
pop
xchg
pop
jo
aas
pop
xorb
sub
leave
rcrb
aad
stc
aad
pop
outsl
push
mov
or
cmpsl
sbb
mov
shrl
push
push
in
cli
aaa
xchg
and
add
imul
jae
js
mov
pushl
cmp
test
call
pushf
pushf
inc
mov
pushf
bt
jmp
add
clc
cmp
add
push
pusha
pusha
lea
jmp
add
imul
fs
add
pushf
movl
lea
jmp
lea
jne
pusha
push
stos
pusha
mov
pushf
mov
lea
jmp
movsbl
jmp
rcl
mov
cmc
test
stc
clc
and
jmp
xchg
xor
pop
pusha
fsts
fwait
adc
add
mov
push
inc
outsb
les
adcl
add
pop
imul
pushf
lea
call
push
adc
pushl
lea
jae
call
push
call
xor
pushf
lea
je
dec
add
call
pusha
movb
pushf
lea
jne
push
mov
push
lea
jmp
lea
je
clc
cmp
stc
add
push
pusha
pusha
lea
jmp
pushf
dec
test
cmc
pusha
stc
shl
pushl
lods
cmc
rol
mov
pushf
movb
movb
inc
cmc
not
mov
bt
cmp
neg
pushf
call
push
call
std
jmp
add
gs
je
push
push
add
xchg
adc
add
mov
pusha
lea
jae
jmp
cmc
sub
call
jmp
popa
fs
jo
xor
cs
insb
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
push
call
mov
scas
push
adcl
fstps
or
add
push
mov
bts
mov
push
cmpsl
adc
sbb
rcll
mov
popf
pop
lea
ja
inc
setb
mov
dec
inc
not
mov
pusha
pushl
inc
neg
cmp
xchg
call
jbe
ret
sub
push
dec
mov
fnstenv
scas
lods
out
js
imull
rcl
adc
cmp
jmp
pop
dec
xor
xor
inc
sti
dec
roll
pop
je
fs
bound
outsb
mov
out
enter
xor
aaa
sbb
ret
dec
jge
in
loope
mov
add
xor
mov
jae
fdivs
mov
cmpb
mov
icebp
mov
inc
mov
aas
lock
stc
outsb
and
dec
lea
pushl
jmp
add
push
push
inc
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
insb
outsl
bound
inc
jb
add
int
dec
pop
scas
inc
or
mov
cs
leave
je
sarb
add
jno
sbb
sub
cli
cmp
movsb
sysret
hlt
out
addl
movsl
js
lahf
hlt
push
jle
or
sbb
cmpsb
cltd
push
xchg
cmp
in
in
int3
leave
sub
mov
cltd
fbld
xchg
add
lods
mov
adcb
push
add
lret
sbb
or
cmp
jbe
jns
or
xchg
add
push
insb
jae
gs
popa
insb
jne
add
mov
or
aaa
stos
push
add
mov
mov
outsb
mov
mov
and
cmp
call
shrb
out
push
mov
add
fsubrs
sbb
cld
cmp
insl
sub
ret
sbb
in
xor
jecxz
movsl
cmpsb
or
dec
xchg
mov
insb
mov
lea
fucomp
dec
hlt
fwait
pusha
mov
add
je
imul
jb
popa
fs
jb
arpl
jae
add
lea
ja
pusha
inc
pushf
call
add
push
je
gs
push
je
add
add
gs
imul
lea
btr
mov
bt
cmc
stc
sub
pushf
bt
pusha
shr
lea
bt
cmp
stc
pusha
cmpl
push
jmp
push
call
shlb
stc
incl
add
popa
jo
gs
insb
insb
outsl
arpl
pushf
pushf
pushf
not
mov
call
ret
add
add
jle
add
adc
add
add
add
fsubrs
add
push
mov
add
add
adc
add
jmp
mov
add
stc
test
add
add
inc
mov
add
test
add
jp
add
dec
mov
add
mov
add
inc
cmpsb
add
inc
mov
add
mov
add
dec
mov
add
inc
cmpsb
add
xchg
add
gs
add
mov
add
stc
test
add
add
je
outsl
imul
jbe
push
je
imul
jbe
into
rorb
icebp
out
out
add
cmp
xchg
mov
out
int
mov
pop
push
xor
mov
cltd
mov
out
add
adc
movsl
fistpl
imul
sarb
out
mov
lock
xor
arpl
adc
in
mov
and
stos
add
lock
aas
dec
mov
clc
fnsave
inc
setb
cwtl
movb
repnz
out
mov
std
inc
int3
sub
dec
dec
or
xor
int
sahf
aam
ja
addr16
xchg
icebp
cs
out
push
repnz
dec
dec
in
add
dec
mov
mov
push
imul
cmpsb
ljmp
or
in
cmp
and
mov
mov
mov
mov
std
inc
inc
mov
add
push
imul
jb
imul
dec
popa
outsb
fs
gs
add
outsl
sbb
mov
xchg
xorl
jg
leave
inc
cli
icebp
loop
movsb
sub
shll
cmp
adc
add
adc
dec
inc
hlt
call
cmpb
sbb
loopne
sbb
orl
pop
xchg
out
pop
mov
xor
adc
jnp
and
jle
jmp
loop
mov
into
out
test
push
fisubrl
pop
jns
into
sub
cmp
pop
or
sub
data16
test
dec
sbb
stos
pop
mov
cmp
add
dec
gs
arpl
inc
add
add
popa
jb
push
gs
imul
add
xchg
inc
add
cld
mov
add
popf
test
add
xor
add
scas
stos
add
push
push
add
into
xchg
add
popf
add
ficoms
add
inc
add
lods
add
xchg
add
mov
mov
add
add
add
pop
push
add
sub
add
lahf
add
aad
add
pop
push
add
add
inc
add
rolb
add
in
add
test
add
rolb
inc
add
int
add
mov
add
add
add
push
mov
add
jbe
add
stos
dec
add
push
push
add
jno
add
add
inc
mov
add
test
movsb
add
cmp
add
popf
add
test
add
mov
add
add
mov
inc
add
sahf
cmp
add
pop
cmpsb
add
pop
mov
add
mov
inc
add
sbb
add
test
add
das
sahf
add
and
add
push
lahf
add
out
add
mov
add
cs
add
mov
dec
add
mov
push
add
fisubrl
add
xchg
add
add
xchg
add
cmp
add
pop
aas
add
insb
push
add
pop
push
add
dec
fwait
add
dec
movsl
add
cmp
add
addr16
add
movsl
lahf
add
jo
add
repz
add
popf
test
add
mov
cmpsl
add
pop
mov
add
imul
add
add
add
add
jbe
add
in
add
pop
push
add
cmp
cwtl
add
lret
add
inc
add
addb
popf
cmp
add
add
pop
fwait
add
mov
add
add
add
add
add
add
xlat
mov
add
mov
add
mov
xchg
add
inc
add
mov
cmp
add
inc
add
and
add
cmpsl
add
call
aas
add
jecxz
add
and
add
xchg
xchg
add
add
jne
add
push
jnp
add
inc
add
jae
add
or
add
add
add
aas
add
sbb
add
inc
add
mulb
add
cmp
add
mov
aas
add
pop
mov
add
add
add
mov
add
push
add
in
add
xchg
cmp
add
mov
add
aas
add
mov
inc
add
addb
dec
add
or
add
movsl
mov
add
add
add
test
add
inc
add
add
add
fdivrs
add
sbb
add
or
add
adc
mov
add
sbb
add
inc
add
cmp
cmpsl
add
nop
cmp
add
ret
add
add
add
test
add
cmp
add
sbb
add
add
mov
add
sar
shl
lea
cmp
mov
cmc
movb
stc
pushf
mov
test
mov
cmc
bt
or
push
movb
push
lea
je
shrd
inc
clc
mov
test
call
add
push
gs
outsb
fs
inc
imul
sub
adc
add
mov
add
je
jb
arpl
jae
gs
jo
lea
je
movzbl
push
movsbl
add
add
sbb
pushf
mov
call
fwait
rorl
fiaddl
sbb
sbb
int
lea
and
popf
xor
add
iret
sbb
add
rcrl
cltd
movsl
push
in
pop
out
jecxz
dec
stos
inc
sub
mov
add
imul
fs
gs
outsb
je
lock
aaa
fcmovbe
in
movsb
movsl
sbb
mov
ds
xchg
add
pop
test
jae
imulb
jno
mov
aaa
repnz
or
lock
out
adc
xchg
pop
mov
sarl
loopw
xor
xchg
popa
test
add
mov
adc
cmpsl
sub
mov
jl
xor
rcrb
js
or
ss
sbb
jnp
enter
adc
xchg
xor
inc
pop
xchg
dec
inc
xlat
clc
lds
push
jns
imul
jnp
mov
rorl
pop
xadd
sub
int3
and
insb
xchg
cmpsb
inc
or
lock
ja
mov
out
mov
rcl
cs
adc
mov
fnsave
pop
adcl
xor
or
aas
or
ja
xchg
mov
insb
fwait
sbb
pop
je
mov
ja
xor
stc
and
iret
shrb
adc
push
pop
cmp
int3
jl
aaa
and
pop
mov
or
stos
repz
xchg
add
jmp
cmpsb
test
and
pop
lods
cwtl
push
fwait
das
enter
xchg
imul
adc
out
add
inc
pop
std
icebp
mov
in
mov
ljmp
jno
mov
adc
inc
push
out
fdivrl
inc
push
dec
cmpsl
mov
jle
cli
xchg
adc
pop
dec
shl
cld
inc
out
jo
adc
inc
outsb
mov
imul
dec
mov
dec
clc
popf
xchg
add
inc
insl
jo
jns
insb
imul
add
and
xor
clc
push
cmc
push
test
test
pusha
test
lea
jbe
pushf
lea
je
jmp
add
push
gs
jo
outsb
dec
gs
add
add
jo
imul
gs
add
je
adc
inc
and
in
shlb
add
mov
pushl
ret
movsbw
lahf
lea
call
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
push
call
add
imul
je
imul
mov
rol
sar
bts
setg
mov
push
movw
push
add
stc
test
stc
mov
cmc
clc
pushf
test
pusha
lea
je
bt
bt
pushf
pusha
add
pushf
mov
lea
cmc
mov
jmp
add
inc
push
push
gs
imul
imul
gs
jb
arpl
fs
jae
add
add
outsb
outsb
arpl
add
outsl
ja
imul
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
pushf
int
or
sbb
adc
push
dec
adc
test
insl
push
es
je
push
testb
and
add
gs
push
gs
imul
imul
insb
outsl
jae
dec
popa
outsb
fs
add
gs
insb
xor
cs
insb
add
add
je
outsl
jae
bound
popa
insl
add
add
outsl
jae
push
gs
imul
insb
add
fwait
add
xchg
inc
add
cld
mov
add
popf
test
add
xor
add
scas
stos
add
push
push
add
into
xchg
add
popf
add
ficoms
add
inc
add
lods
add
xchg
add
mov
mov
add
add
add
pop
push
add
sub
add
lahf
add
aad
add
pop
push
add
add
inc
add
rolb
add
in
add
test
add
rolb
inc
add
int
add
mov
add
add
add
push
mov
add
jbe
add
stos
dec
add
push
push
add
jno
add
add
inc
mov
add
test
movsb
add
cmp
add
popf
add
test
add
mov
add
add
mov
inc
add
sahf
cmp
add
pop
cmpsb
add
pop
mov
add
mov
inc
add
sbb
add
test
add
das
sahf
add
and
add
push
lahf
add
out
add
mov
add
cs
add
mov
dec
add
mov
push
add
fisubrl
add
xchg
add
add
xchg
add
cmp
add
pop
aas
add
insb
push
add
pop
push
add
dec
fwait
add
dec
movsl
add
cmp
add
addr16
add
movsl
lahf
add
jo
add
repz
add
popf
test
add
mov
cmpsl
add
pop
mov
add
imul
add
add
add
add
jbe
add
in
add
pop
push
add
cmp
cwtl
add
lret
add
inc
add
addb
popf
cmp
add
add
pop
fwait
add
mov
add
add
add
add
add
add
xlat
mov
add
mov
add
mov
xchg
add
inc
add
mov
cmp
add
inc
add
and
add
cmpsl
add
call
aas
add
jecxz
add
and
add
xchg
xchg
add
add
jne
add
push
jnp
add
inc
add
jae
add
or
add
add
add
aas
add
sbb
add
inc
add
mulb
add
cmp
add
mov
aas
add
pop
mov
add
add
add
mov
add
push
add
in
add
xchg
cmp
add
mov
add
aas
add
mov
inc
add
addb
dec
add
or
add
movsl
mov
add
add
add
test
add
inc
add
add
add
fdivrs
add
sbb
add
or
add
adc
mov
add
sbb
add
inc
add
cmp
cmpsl
add
nop
cmp
add
ret
add
add
add
test
add
cmp
add
sbb
add
add
mov
add
mov
add
mov
lea
pop
jmp
hlt
xchg
dec
dec
cld
imul
dec
push
inc
test
push
pop
inc
xchg
ret
jecxz
inc
ret
pop
pushf
sub
stos
les
mov
jo
gs
jb
jbe
jb
gs
jb
jo
imul
adc
jns
aam
push
inc
inc
pop
xor
icebp
cli
dec
imul
rcr
pop
mov
lahf
aaa
xchg
mov
sbb
jle
adc
test
cmp
sub
addl
das
fisubrl
push
add
pop
dec
out
add
mov
or
leave
mov
inc
mov
dec
jecxz
lret
sbbl
outsl
push
stc
out
jae
push
xlat
xchg
repz
push
dec
push
imul
jns
jnp
stos
push
shll
mov
lret
imul
iret
cld
out
xor
dec
push
push
repnz
jnp
sub
adc
stos
lcall
cltd
or
pop
inc
push
mov
xor
pop
pop
sarb
out
pop
push
jae
sub
push
imul
testb
notl
add
xor
push
xor
iret
aam
mov
enter
cs
or
inc
mov
mov
cmp
bound
sarl
xor
lcall
push
call
jmp
aaa
push
call
push
and
not
stc
stc
neg
stc
not
clc
stc
cmc
pushf
shr
pushf
lea
je
jmp
rep
jmp
add
inc
js
je
push
add
add
popa
jo
insb
insb
outsl
arpl
seto
mov
inc
mov
pushf
bt
stc
cmp
add
mov
pusha
movl
pushl
xchg
seto
jmp
add
jae
outsb
add
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
add
imul
inc
lea
push
lea
call
push
mov
adc
pushl
lea
call
push
pusha
pushf
movw
lea
jb
pushf
pushl
ret
not
cmc
pusha
clc
neg
stc
not
std
test
stc
cmc
pushw
popfw
push
mov
call
pushl
mov
pusha
jmp
push
pop
or
and
repnz
in
subl
out
cmpsb
mov
adcl
popf
ja
into
add
mov
push
push
aaa
lcall
stos
xor
add
jp
outsl
push
gs
jne
arpl
add
inc
gs
jne
jb
outsb
je
push
add
dec
adc
push
sldt
js
in
add
add
mov
add
add
add
add
add
jecxz
add
jmp
mov
add
add
in
mov
jb
imul
add
gs
outsl
gs
cs
insb
add
add
gs
je
inc
imul
incl
add
je
imul
js
inc
add
add
jae
popa
addr16
outsl
js
add
add
jb
jne
insb
push
jb
je
arpl
cld
push
pushf
cmp
add
push
call
push
call
push
mov
push
mov
mov
pusha
jmp
dec
test
nop
outsl
adc
push
in
shrl
jbe
cmp
insb
mov
push
pop
sahf
add
aaa
cmc
mov
call
ds
jne
movsl
jae
movsl
outsl
gs
or
sbb
scas
mov
mov
leave
psllq
and
ds
mov
cmpsl
add
xor
lcall
inc
out
lock
pop
push
sbb
add
lea
jne
not
mov
setns
setae
pushfw
rcr
mov
bt
jge
clc
rol
call
add
push
je
push
outsb
ja
outsb
add
add
insb
arpl
xor
lea
ja
inc
call
add
inc
insb
outsl
jae
inc
insb
imul
add
push
xor
cli
sub
sbb
mov
add
mov
lret
repz
in
inc
and
fmull
arpl
sub
sbb
mov
dec
mov
push
mov
out
inc
lret
outsl
popf
pop
mov
test
xorb
mov
cmp
les
lahf
test
xor
rol
xchg
lret
setl
mov
add
cmp
maxps
sub
push
sbb
pop
imul
sbb
push
dec
pop
sbbb
mov
xor
js
std
mov
dec
mov
dec
inc
orb
pop
jmp
jl
mov
jbe
inc
and
push
es
ljmp
pop
mov
mov
xchg
mov
pop
xchg
popa
jo
out
pop
xchg
fcompl
ret
xor
add
dec
jg
push
shr
adc
cmc
pop
mov
testb
cld
mov
xchg
bound
sbb
fldcw
inc
mov
adc
adc
imul
dec
push
test
adc
jecxz
jo
mov
cld
or
add
das
mov
add
addr16
insb
outsl
jae
dec
gs
add
inc
gs
imul
bound
gs
add
test
fisttps
sbb
ficompl
mov
xor
pop
push
push
loope
in
andb
loopne
mov
hlt
inc
test
mov
insl
mov
scas
outsb
dec
inc
add
cmp
mov
lret
and
jno
jo
push
dec
jae
adc
push
mov
push
out
mov
inc
in
mov
popf
and
lret
mov
push
xchg
xchg
in
sub
xor
dec
addb
sbb
mov
inc
rcl
les
pop
test
dec
ret
and
mov
and
sbb
cmp
cmp
int3
cs
mov
pop
and
jmp
xchg
outsb
jmp
push
sbb
add
jle
aaa
nop
inc
lcall
sub
gs
sbb
xor
push
sub
ret
gs
ficoms
shl
sub
xor
sbb
stc
das
add
add
push
push
push
add
mov
push
adc
cmp
mov
mov
push
in
add
adc
push
ficomps
mov
dec
loop
cli
jg
and
xchg
inc
mov
jl
cltd
nop
ss
ror
je
sbb
repz
test
dec
xlat
cmpsb
sbb
jmp
sbb
xor
pop
cltd
in
mov
clc
add
les
lock
add
in
das
sbbb
leave
sahf
jne
out
push
mov
nop
pop
add
mov
sub
xlat
jl
mov
out
cmp
sub
out
inc
mov
scas
fxch
das
lds
movlps
fsubs
das
or
movsl
dec
repz
test
xchg
mov
lcall
or
dec
sti
lcall
pushl
lea
je
rol
xadd
rcl
bswap
mov
jmp
adc
lcall
jg
jnp
mov
push
sbb
movb
xchg
adc
sbb
ficoml
imul
lret
mov
outsb
out
sbb
jle
ss
cs
ret
into
pop
test
sbb
dec
ljmp
push
jecxz
cmp
or
adcb
add
xchg
or
lcall
imul
mov
pop
mov
in
cmpsb
jg
cmp
push
push
cmp
aam
sub
dec
ficoms
test
gs
je
push
imul
imul
add
les
clc
jmp
add
push
gs
arpl
insb
gs
gs
movsb
pusha
pushl
lea
mov
pushl
movl
mov
lea
jmp
push
call
loopne
mov
call
shr
stc
movzww
jmp
jmp
shld
xor
bsr
mov
lea
pusha
jmp
pushf
push
pushl
mov
movw
lea
jmp
pushf
popl
call
call
mov
movb
lea
jmp
ror
bt
mov
bt
push
test
add
lea
jb
pusha
pushf
mov
pushf
mov
lea
jmp
sub
push
mov
pusha
add
sbb
cmc
test
and
sub
sub
sar
movzbl
pusha
stc
shl
cmc
cmp
stc
add
adc
lea
mov
push
clc
stc
and
pushf
push
jmp
add
pusha
pusha
mov
movb
lea
jmp
cmp
shld
shr
shl
mov
push
cmp
add
mov
mov
lea
jo
pusha
mov
mov
pushl
pusha
mov
push
pushl
pushf
mov
lea
jmp
jmp
pushf
inc
call
movl
mov
pushf
pushl
movb
movw
lea
jmp
pushf
jmp
push
dec
bt
rol
jmp
pushf
test
cmc
sub
pusha
pusha
jmp
clc
sub
cmp
pushl
shr
jmp
mov
movl
pushf
popl
jmp
sbb
mov
cmp
jmp
cmc
pushf
not
bt
stc
bt
sub
pushf
mov
rol
bt
jmp
mov
cmp
pushf
add
pusha
mov
mov
mov
pushl
push
pushf
pushl
mov
movb
pushf
lea
jmp
jmp
pushf
popl
bswap
bswap
push
bsf
lea
inc
bswap
push
mov
dec
push
pusha
mov
inc
dec
push
mov
call
cmc
pushf
mov
pushl
pusha
stc
sub
jmp
btc
mov
xor
seta
mov
pusha
call
push
add
mov
lea
jp
cmp
sub
cmc
test
sub
pushf
jmp
xchg
pusha
mov
btr
mov
movl
call
inc
push
bt
pushf
jmp
sar
btr
shr
movzbw
mov
neg
mov
stc
cmc
add
jmp
add
pushf
jmp
pushf
push
mov
pushf
movb
push
pushf
popl
movb
call
mov
push
pusha
pushf
pushl
lea
jmp
pusha
mov
call
rol
movb
push
push
lea
jmp
call
clc
stc
sub
push
push
mov
pusha
lea
jmp
stc
bt
sub
jmp
pushl
mov
lea
jmp
cld
push
jmp
test
add
stc
clc
pushf
shld
pushf
mov
jmp
pushl
pushl
popl
pushl
lea
jmp
jmp
pusha
call
cmp
cmc
sub
bt
movb
clc
cmc
xor
movb
add
mov
jmp
sub
cmc
jmp
mov
bsr
movzbl
movl
push
mov
call
pushf
push
call
cmp
stc
add
jmp
bsf
xor
pushf
jmp
mov
pusha
movb
mov
call
call
ror
seto
shrd
movzbw
xor
bsr
neg
lea
bswap
bt
jmp
call
inc
and
and
and
and
sub
lea
mov
jmp
push
mov
pushl
mov
lea
jmp
aaa
not
btr
bt
movzww
clc
cmc
test
clc
sub
bt
cmc
call
push
mov
pushf
movb
lea
jmp
mov
not
mov
push
movzbw
movw
movsbw
mov
movsbw
bsr
bsf
movl
movsbl
jmp
pushf
pusha
movb
pusha
mov
pushl
mov
push
pushf
mov
lea
jmp
bt
cmp
pushl
cmp
test
stc
pushf
add
pushf
cmp
pushl
popf
pushf
pusha
mov
movb
lea
jmp
cmp
bswap
test
cmc
clc
not
cmp
call
movsbw
mov
jmp
clc
pusha
add
lea
jno
pushf
mov
push
lea
jmp
mov
push
push
mov
call
dec
pushf
inc
bt
stc
clc
cmp
not
stc
call
call
mov
pushf
mov
pushf
movb
pushf
pushl
lea
jmp
pushf
pushf
sub
movw
pushf
pushf
call
pushf
popl
mov
mov
movzbw
bswap
mov
mov
mov
call
jmp
inc
btr
aas
lahf
lea
pushf
cmp
call
stc
mov
pushf
jmp
mov
push
pushl
popl
pushl
mov
lea
jmp
mov
jmp
pushf
popl
call
add
bt
test
pusha
mov
test
pushf
pushf
sub
call
pushl
rep
not
sub
mov
not
mov
call
mov
pushf
movb
pushf
pushf
lea
jmp
stc
cmc
mov
jmp
movb
mov
push
call
mov
call
call
dec
bt
xor
cmc
cmc
sub
jb
sub
pushf
push
jmp
push
mov
inc
mov
decl
pusha
lea
jne
push
mov
pusha
lea
jmp
push
pusha
dec
push
cmp
jmp
bsr
mov
movsbw
movzbw
dec
shl
mov
shl
mov
stc
jmp
dec
movb
rol
mov
movl
movb
mov
lea
jmp
rol
stc
mov
pusha
jmp
pushf
pushl
popl
mov
movb
movw
mov
lea
jmp
pushl
bt
test
sub
bt
shl
jmp
mov
inc
mov
pushl
movsbw
not
mov
not
mov
dec
inc
mov
push
inc
movzbw
mov
dec
jmp
mov
mov
jmp
clc
jmp
pushl
call
shrd
movb
mov
mov
lea
jns
pusha
pushf
popl
pusha
mov
pushl
popl
push
movb
mov
push
lea
jmp
cmc
sub
jmp
pushf
jmp
push
call
bsr
call
mov
dec
clc
pushf
bt
clc
rol
pusha
dec
pushf
rol
mov
movw
lea
jmp
jmp
call
pushf
mov
mov
pushf
call
bt
not
pusha
cmp
cmc
cmp
not
cmp
cmp
and
jmp
movzbl
mov
shl
bt
mov
call
pushf
jmp
movw
call
pusha
jmp
mov
pushf
divl
call
call
pushl
mov
movsbw
mov
bsr
mov
bsr
movl
not
bsr
pop
movzbw
mov
pusha
push
pushf
dec
jmp
clc
rol
jmp
pushf
popl
pushf
call
jp
pushf
mov
movw
pushf
pusha
lea
jmp
not
cmc
cmc
bswap
mov
ror
shrd
sub
inc
dec
xor
shl
jmp
pusha
xchg
bswap
pushf
lea
jp
not
mov
pushf
cld
movb
mov
pusha
rep
or
mov
movzbw
clc
btc
mov
cmp
std
jmp
cmc
add
movb
mov
mov
pushf
lea
jmp
jmp
cmc
pushf
rol
pushf
dec
bt
stc
rol
pushf
pushf
mov
movb
lea
jmp
call
pushf
pushf
pushl
lea
ja
btr
not
mov
bsf
dec
lea
rcr
sub
daa
shl
add
daa
lea
rcr
call
cmp
sub
inc
mov
bsr
dec
bt
and
ror
stc
xor
rcr
jmp
call
pusha
pushf
push
call
cmp
xor
jmp
lahf
lahf
setno
mov
mov
jmp
pushl
popl
mov
mov
movb
mov
lea
jmp
bt
sub
push
call
neg
bt
call
stc
pusha
shr
jmp
xor
clc
add
jne
cbtw
pusha
stc
cmp
cwtl
pusha
sub
call
call
call
pushf
mov
dec
dec
mov
dec
dec
dec
lea
mov
movzbw
lea
mov
bsr
pop
movl
movzbw
mov
pushl
pushf
call
lea
jo
pushf
mov
pushl
push
push
lea
jmp
pushl
popl
push
lea
jmp
call
pushf
mov
movsbw
jmp
pushf
lea
je
pusha
pusha
stc
mov
shrd
sub
movzbl
movzbl
mov
cmp
pushf
mov
shr
pushf
xor
ror
jmp
pushf
popl
jmp
push
mov
push
pushl
push
push
lea
jmp
movsbl
ror
mov
jmp
cmc
cmc
not
clc
jmp
pushl
popl
mov
lea
jmp
pushl
add
sar
add
mov
seto
jmp
dec
pushl
pushf
stc
stc
rol
pushf
push
movb
movw
lea
jmp
aaa
xchg
mov
pusha
mov
cmc
test
pushl
clc
add
pusha
movb
mov
pushf
lea
jmp
jmp
pushl
popl
push
push
lea
jmp
push
pushf
popl
lea
push
jmp
mov
cmc
bt
add
push
pusha
call
jmp
sub
cmp
push
bt
and
movb
call
mov
pushf
lea
jmp
sub
pusha
shr
pusha
jmp
push
movb
xor
clc
pusha
not
stc
add
sub
jg
pusha
stc
mov
bt
sub
jmp
mov
mov
pusha
pushf
popl
dec
mov
jmp
call
pusha
mov
push
push
lea
jmp
dec
pusha
clc
rol
jmp
call
pushf
popl
jmp
pusha
pushl
popf
pushf
push
pushf
lea
jmp
jmp
cld
cld
mov
bswap
movzbw
pushf
push
lea
jmp
call
pushf
pushf
divl
call
pushf
pusha
jmp
movsbw
mov
call
jmp
shl
mov
jmp
mov
not
inc
mov
call
push
pushf
mov
call
mov
mov
pushf
pushf
lea
jmp
dec
pushf
stc
rol
mov
lea
jmp
and
fsts
fsts
cmp
aam
pop
fsts
sub
adc
sub
sub
fsts
fsts
adc
aam
sbb
fsts
sub
xchg
fwait
cmp
push
fistl
pop
or
fsts
or
fsts
fsts
push
fsts
push
fwait
cmp
push
pop
or
and
and
fsts
das
fsts
fsts
sub
and
adc
pop
fsts
add
fsts
fistl
fildll
fsubrl
fsts
imul
adc
pop
fsts
das
fsts
fsts
or
mov
push
fsts
sub
xchg
popf
or
adc
or
fsts
sbb
aam
xor
fsts
sub
push
sbb
pushf
add
fwait
cmp
push
and
adc
pop
fsts
or
fsts
adc
aam
xor
fsts
add
xchg
fwait
cmp
push
fildll
fnsave
fsts
or
fsts
fsts
or
xchg
and
fsts
adc
aam
push
pop
or
fsts
cmp
push
pop
or
aam
push
fsts
cmp
push
fiadds
fsts
aas
fsts
push
fsts
push
imul
fsts
sub
xchg
imul
fsts
or
adc
sub
aam
or
aam
or
xchg
mov
or
adc
xor
fsts
or
fsts
xor
and
fsts
adc
aam
push
fsts
pop
fsts
sub
adc
das
fsts
fsts
push
fsts
cmp
adc
or
adc
sbb
adc
adc
aam
sbb
aam
adc
aam
add
fsts
sbb
adc
das
fsts
fsts
or
aam
or
fsts
adc
aam
or
fwait
cmp
aam
push
and
fsts
sub
push
fmull
pop
or
fsts
and
adc
push
fsts
sub
fsts
sub
xchg
imul
fsts
sub
push
mov
push
sub
fsts
sub
adc
sub
adc
cmp
aam
sub
push
popf
cmp
adc
or
aam
and
adc
push
fsts
push
fsts
push
fsts
push
fsts
or
aam
and
adc
sbb
xchg
pop
or
fsts
fsts
das
fsts
mov
sbb
adc
xor
aam
or
xchg
imul
adc
sub
push
popf
or
adc
or
aam
pop
fsts
add
mov
cmp
push
pop
or
aam
cmp
adc
sub
fsts
or
mov
aas
fsts
push
fsts
or
aam
or
xchg
pop
or
fsts
fmull
and
fsts
das
fsts
fsts
push
fsts
sub
adc
sbb
adc
or
adc
das
fsts
fsts
or
xchg
jecxz
fsts
sbb
adc
aas
fsts
xor
fsts
or
adc
xor
and
adc
pop
fsts
push
fsts
sbb
fsts
or
fsts
sbb
aam
cmp
adc
push
fsts
push
pushf
pusha
mov
call
mov
jmp
dec
jmp
das
mov
and
mov
call
movzbw
mov
pop
bswap
movw
mov
push
mov
not
movsbw
mov
not
bswap
pushf
dec
mov
dec
bsf
bswap
mov
mov
movzbw
push
movl
bsr
dec
push
mov
pushf
call
push
pushl
mov
pushf
popl
movb
pushf
pushl
popl
movl
pushl
pusha
pushf
lea
jmp
call
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
bt
add
jmp
lea
test
cmp
cmc
movb
neg
jmp
mov
mov
movzbl
dec
bswap
mov
setge
jmp
mov
call
dec
jmp
pushl
popl
mov
pushf
lea
jmp
cmp
mov
stc
add
jmp
pushf
popl
bsr
movl
pushf
dec
mov
bsf
mov
bsr
push
lea
pop
push
movsbw
push
movzbw
pusha
bsr
mov
movzbw
pusha
mov
bsr
inc
movl
dec
pushf
pop
mov
mov
call
dec
mov
pushl
call
pushf
call
pushf
popl
call
pusha
jmp
cmc
call
cmc
mov
clc
pushf
xor
mov
dec
movb
pusha
not
call
test
notl
bt
mov
stc
bt
pusha
sub
mov
jmp
not
not
mov
pushf
pop
mov
mov
bswap
call
pushl
dec
movb
clc
clc
pushf
rol
jmp
movzbw
rdtsc
aaa
mov
btr
xadd
btc
adc
pop
movsbl
btr
btr
pop
xchg
lahf
pop
mov
pop
das
xadd
lea
test
pop
shld
pop
cld
rol
sar
pushf
mov
shld
pushl
popf
bswap
mov
pop
pop
mov
push
pushl
ret
inc
and
rcl
push
mov
push
jmp
pushf
pushf
call
mov
pushl
pushf
mov
movsbw
pushf
popl
not
jmp
pusha
pushf
inc
add
bt
movzbw
and
add
add
mov
cmp
pushf
add
call
call
pushl
popl
movw
lea
jmp
pushf
pusha
add
push
push
movw
mov
pushf
mov
mov
push
lea
jmp
mov
lea
bsf
jmp
pushf
dec
cmc
jmp
mov
mov
jmp
jmp
rol
lea
inc
bsr
lea
clc
xor
and
stc
jmp
jmp
call
mov
pusha
xchg
bswap
call
pushf
pusha
pushl
popl
push
push
lea
jmp
call
mov
push
call
mov
call
mov
pushf
pushl
call
pushf
lea
jns
add
call
pushf
mov
push
pushf
mov
lea
jmp
dec
stc
jmp
pushf
pushf
call
call
mov
mov
mov
push
lea
jmp
movsbw
mov
call
pushf
pushf
call
mov
jmp
pushf
mov
push
movb
pushf
pushf
popl
pushf
pushl
popl
mov
movw
mov
lea
jmp
call
mov
pushf
pusha
mov
dec
bswap
movl
bsr
bsr
push
inc
mov
pushf
call
jmp
push
pusha
pusha
mov
mov
jmp
dec
push
jmp
jmp
push
mov
pushl
push
movw
lea
jmp
lea
movb
test
not
stc
cmc
sub
clc
rol
pushf
movb
bt
sub
jmp
rol
call
pushl
mov
movl
pushf
mov
lea
jmp
call
cmc
stc
rol
pushf
lea
jmp
mov
pushf
lea
jmp
jmp
cwtl
cmp
sub
jmp
pushf
pushf
popl
pushf
pushf
pushf
call
dec
mov
cmc
cmc
cmc
sub
clc
clc
stc
mov
stc
call
movsbw
jmp
mov
jmp
pushl
popf
pushf
mov
lea
jmp
bswap
bsf
mov
rol
mov
cmp
cmc
call
mov
mov
movb
push
push
lea
jmp
movb
mov
pushf
lea
jmp
sub
shl
movzbw
or
rol
mov
clc
stc
bt
cmc
add
push
lea
je
push
mov
mov
pusha
pushf
lea
jmp
ror
bts
bsf
rcr
mov
shl
shrd
xor
stc
add
push
sub
movzbw
cmp
movzbw
not
clc
rcl
xor
movw
stc
cmc
mov
not
bswap
add
inc
sar
add
jmp
mov
pushl
pushl
movb
mov
lea
jmp
jmp
call
bts
bsr
movzbw
mov
pushf
and
mov
stc
add
lea
ja
mov
pusha
movb
movw
pushf
lea
jmp
rol
jmp
test
neg
sbb
test
movzbl
bt
stc
add
clc
push
movw
clc
sub
pusha
inc
pusha
stc
clc
not
bt
stc
mov
lea
js
xor
test
not
cmp
bt
jmp
pushl
popl
pushf
movw
movw
lea
jmp
call
call
jmp
pushl
popl
push
mov
pusha
pushl
lea
jmp
movl
dec
bswap
mov
pushf
dec
push
not
rol
pushl
dec
xchg
rol
add
and
call
cltd
setl
shld
mov
rol
shl
mov
ror
xor
rol
sub
mov
push
clc
jmp
ror
pushf
jmp
xchg
pusha
bswap
pushl
pushf
popl
mov
jmp
movb
lea
pusha
inc
movsbw
stc
xor
pusha
movzbl
dec
inc
jmp
neg
not
cmc
mov
xor
mov
push
pushf
sub
cmc
jmp
push
mov
jmp
sub
pusha
rol
pushf
bt
add
pushl
bt
call
movsbl
sub
bt
xor
mov
bt
sbb
shl
jmp
xor
pusha
mov
pushf
pushl
not
pushf
pushf
jmp
bt
not
push
adc
movzbl
cmp
cmp
bt
sub
mov
pushl
pushf
call
clc
clc
cmc
rol
push
pushl
lea
jmp
dec
call
call
mov
mov
pushf
pusha
movb
mov
bswap
not
bswap
mov
pushf
popl
dec
inc
bsf
mov
movzbl
movzbw
call
mov
mov
pushf
lea
jmp
pushf
pushf
popl
jmp
push
pushf
movzbl
jmp
rdtsc
pusha
lea
jle
not
mov
call
jmp
test
sub
pusha
call
mov
mov
push
mov
lea
jmp
push
call
rol
call
clc
stc
cbtw
pushf
test
cwtl
movw
sub
pushf
mov
push
movw
mov
lea
jmp
lea
jb
popf
pushf
push
mov
lea
jmp
rol
pushf
jmp
mov
call
pushf
popl
pusha
pushl
popl
pushf
pushf
pushf
lea
jmp
not
lea
lea
sub
shl
bts
mov
or
rcl
mov
bts
sub
cmc
add
rcl
btc
mov
btr
xor
stc
not
sub
rcl
rol
inc
shr
add
dec
pushf
dec
inc
movsbw
rcr
rol
jmp
lahf
lahf
jo
mov
push
movb
call
xchg
push
jmp
pusha
pushf
jmp
clc
call
mov
pop
bswap
push
bsr
push
inc
push
mov
bswap
push
call
and
pusha
pushf
call
pushf
pushf
rol
pushf
mov
pushf
pushf
lea
jmp
daa
daa
mov
inc
bsr
mov
push
pushf
cmc
pusha
not
pushl
call
pushf
call
pushf
bsf
mov
bsf
movsbw
bswap
pushl
mov
bsf
movl
bsr
movsbw
push
mov
mov
pusha
call
call
dec
stc
jmp
jmp
aam
setnp
clc
add
mov
bt
sub
test
pushf
add
pusha
push
lea
jne
pusha
pushf
popl
jmp
bswap
xchg
mov
pusha
pop
call
movb
pusha
pushl
mov
pushf
call
dec
bt
rol
mov
dec
push
clc
rol
pushf
lea
jmp
sar
mov
adc
rcr
mov
pushf
push
sub
cmp
mov
clc
shl
jmp
bsr
mov
pushf
call
movb
pushl
add
clc
neg
pushf
jmp
pushf
movzbw
mov
push
cld
push
jmp
jmp
not
mov
shld
btr
call
pop
movsbw
jmp
call
sub
cmp
pushf
pushf
add
jne
sub
pusha
pushl
jmp
ror
call
mov
pusha
pushf
lea
jmp
call
push
mov
push
pushf
popl
pusha
pushf
pushl
popl
mov
push
push
push
lea
jmp
sub
pushf
pusha
mov
pushf
movw
pushf
pushf
lea
jmp
stc
jmp
mov
call
stc
pushf
call
movl
dec
pushf
mov
mov
push
mov
jmp
mov
call
stc
mov
bsr
sar
mov
jmp
dec
call
neg
btr
movzbl
jmp
bsf
mov
pusha
dec
bt
movb
rol
lea
js
pushf
dec
push
cmc
rol
pushf
pushl
push
lea
jmp
movzbl
pop
pusha
mov
movzbl
jmp
call
jmp
jmp
mov
pushf
pushf
mov
pushf
jmp
mov
pushl
jmp
call
push
pushl
pushf
pushf
popl
pushf
pushl
pushf
pushl
popl
mov
pushf
push
pusha
lea
jmp
inc
bt
clc
ror
cmp
bt
pushf
push
neg
stc
add
pusha
pushf
call
clc
lea
jge
rol
pusha
dec
pusha
rol
mov
pushf
lea
jmp
jmp
mov
pushf
pushf
popl
call
mov
movb
movb
mov
pushl
ret
push
pushf
popl
push
jmp
and
lea
mov
dec
sub
pusha
add
seta
mov
mov
push
pusha
mov
mov
pushf
push
lea
jmp
bsf
movl
push
not
call
pusha
mov
pusha
lea
jmp
mov
mov
mov
mov
lea
jmp
jmp
mov
movb
pushf
mov
lea
jmp
pusha
pusha
movw
dec
call
rcl
rcr
bsr
mov
sets
mov
test
cmp
test
sub
pushf
pushf
test
test
shl
pushf
mov
lea
jns
pushf
mov
pushf
popl
jmp
test
push
sbb
mov
cmp
shr
jmp
pushf
mov
pushf
call
mov
push
lea
jmp
jmp
jmp
jmp
push
mov
push
mov
push
xchg
movsbl
bswap
call
pushf
pushf
xchg
pushf
push
pushf
popl
bswap
push
movzbw
mov
not
pop
pushf
mov
pop
call
jmp
mov
call
mov
pop
jmp
call
push
pushf
popl
pushf
call
jmp
mov
movsbl
movsbw
jmp
pusha
mov
push
push
mov
test
sub
clc
call
call
cmc
test
test
add
stc
pushf
neg
movb
call
