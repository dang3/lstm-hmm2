fstpt
ljmp
pusha
inc
add
je
or
adc
test
pop
jne
ret
push
or
aas
push
pop
ret
push
mov
sub
push
xor
cmp
push
mov
je
jb
ja
adc
movb
add
jo
gs
outsb
xchg
lret
jmp
in
push
in
jb
out
outsl
out
arpl
gs
icebp
jae
jae
pop
repz
push
mov
jbe
aad
and
insl
fsubrs
shll
sbb
je
fldl
dec
shll
jecxz
fcmovnu
insb
xchg
add
inc
lea
push
push
call
mov
fadd
mov
or
or
cltd
test
clc
mov
outsl
or
hlt
pushl
push
lret
call
cmp
outsb
sti
out
or
push
clc
push
cld
push
hlt
mov
out
in
fistps
in
in
jl
fadds
stc
add
ja
outsb
daa
mov
mov
dec
xlat
xor
ret
mov
lds
fcmovnb
mov
add
insb
pop
lret
insl
xlat
sub
int3
or
jo
into
xor
pop
shrl
xor
push
rcl
rcll
aam
inc
xlat
jne
aad
aaa
xlat
add
and
xor
arpl
mov
inc
in
inc
daa
out
out
push
or
jp
repz
div
js
je
xchg
jle
push
and
fcomps
ja
dec
adc
push
mov
adc
and
fisttpll
loope
pop
adc
negb
ficoms
mov
push
push
push
call
cmpl
pop
xor
jmp
pop
add
inc
add
mov
sbb
push
mov
and
jae
pop
mov
movsl
mov
add
pop
xor
mov
jge
lods
std
rep
stos
stos
push
xor
pop
lods
adc
mov
dec
or
mov
jbe
push
pop
mov
test
xchg
cmp
fldt
sbb
add
adc
mov
xor
add
inc
out
divl
inc
jp
leave
cmp
or
lods
std
xor
jne
push
sarl
push
sbb
push
je
adc
pushl
cmp
pop
je
andb
int
sbb
dec
clc
mov
mov
ret
push
repnz
xor
lcall
add
jb
test
std
mov
cld
jge
pop
adc
sbb
mov
je
mov
add
outsb
dec
shll
imul
pop
mov
insb
popa
sti
insb
push
cmpsb
imul
jo
lcall
outsl
arpl
scas
cmpsb
imul
mov
inc
in
push
mov
mov
mov
mov
jne
mov
dec
mov
pop
xlat
xor
mov
xor
mov
push
lods
rol
xchg
pop
xlat
pop
ret
push
les
rcrb
cltd
lcall
je
imul
mov
imul
cmpsb
imul
enter
pop
lods
ret
mov
mov
mov
add
xor
nop
enter
pop
leave
pop
xlat
insb
mov
mov
add
dec
push
xlat
je
rcl
sbb
in
aam
dec
shll
arpl
fists
push
push
rolb
cmp
xor
call
fdivs
sbb
or
push
and
xchg
sti
pop
mov
or
data16
neg
sbb
push
and
push
adc
insb
push
arpl
divb
inc
xchg
inc
test
mov
dec
inc
or
push
movsl
lea
xor
jecxz
pop
insb
jmp
dec
and
je
dec
jmp
xchg
pop
daa
or
sbb
fisttpll
adc
je
mov
inc
inc
jmp
add
icebp
fisubl
add
daa
fwait
push
mov
push
push
test
fisubs
jge
insl
inc
mov
cmpsb
int3
lret
out
outsl
outsl
movzbl
inc
lret
inc
jp
cmp
jg
divl
cmpb
je
daa
inc
push
jmp
jge
pop
fildl
shr
jmp
or
xchg
mov
stos
pop
pop
or
insb
in
fsts
fnstenv
mov
push
stos
hlt
andl
adc
sti
sub
mov
or
add
cmp
jne
incl
inc
sbb
or
jmp
xor
mov
pop
mov
cs
mov
jbe
pop
jo
cmpb
clc
inc
inc
jmp
adc
mov
je
notl
push
mov
mov
inc
mov
test
jne
pop
xor
push
adc
je
xor
push
pop
xorl
insl
in
sub
repnz
inc
in
mov
dec
rcrl
outsb
psubsb
orl
jae
inc
xor
shlb
insb
inc
fildl
mov
xorb
clc
inc
pop
stc
cli
xor
mov
aaa
sti
cld
gs
insl
adc
mov
adc
adc
pop
push
and
mov
lea
add
or
pop
adc
leave
cmp
adc
xchg
adc
outsb
inc
gs
jbe
lcall
insl
cmpsb
imul
addr16
inc
adc
push
sbb
repnz
daa
loopne
in
adc
pusha
insb
ljmp
lock
or
push
aaa
or
jb
ljmp
cmp
push
pop
incl
mov
mov
add
add
cmp
outsl
ljmp
add
cmp
jae
jb
cwtl
pop
push
inc
sbb
mov
iret
cmp
mov
inc
mov
popa
cmp
add
push
push
lods
mov
pop
test
cmpl
sbb
sbb
or
add
shlb
or
fbld
clc
add
cmp
mov
mov
imul
ss
pop
cli
je
cmp
and
hlt
cli
pusha
jo
cmc
in
sub
hlt
sbb
pop
and
out
xchg
and
std
mov
movsb
cmp
xchg
fdivs
or
push
pop
sahf
mov
mov
les
sahf
adc
outsb
mov
lock
insb
and
test
je
mov
add
pop
mov
mov
stos
push
or
cmp
fisttpll
mov
mov
jne
cmpb
aaa
mov
adc
jge
ficoms
fiaddl
sub
mov
outsb
or
pop
pop
call
add
fbld
movsb
cs
cmp
jb
rcrb
fs
test
fldcw
adc
pop
jb
shll
pusha
dec
cltd
rol
dec
shll
enter
xor
lret
lret
insb
int3
cmp
fsts
push
sbb
cwtl
xor
addr16
lret
insl
shll
mov
outsb
or
or
mov
cmpsb
imul
gs
jne
mov
xlat
push
movsl
xchg
cmpsb
jle
sbb
xor
test
dec
shll
insb
outsl
dec
in
jns
out
fisttpl
xor
arpl
cmpsb
paddb
rol
mov
lea
je
inc
sub
mov
dec
push
bound
adc
outsl
out
jne
mov
push
lcall
fcompl
call
popf
shlb
dec
imul
xor
imul
and
dec
and
inc
xchg
ret
mov
rorl
aam
add
jns
insl
mov
rcl
cs
js
fisubl
dec
fwait
test
or
add
mov
xor
ret
ret
notl
xor
sbb
add
adc
or
add
push
js
int3
lcall
addr16
jne
lcall
dec
outsb
popf
imul
dec
push
or
inc
xlat
aad
fninit
inc
cs
inc
out
out
pop
xlat
jne
call
adc
daa
in
ss
xor
xor
lret
adc
mov
mov
loopne
cltd
fcoml
mov
mov
decb
pop
repnz
mov
adc
enter
add
out
add
pop
outsb
mov
les
lods
pop
add
xor
enter
mov
push
je
shr
cmp
cmpsb
pop
sub
or
mov
and
lods
les
mov
fwait
add
jge
xchg
mov
sub
and
mov
js
sar
lret
adc
inc
cmp
jb
jmp
cs
pusha
sbb
daa
xor
pop
and
and
pusha
jo
xchg
or
out
rcr
sub
dec
shll
popa
jb
mov
pop
lods
dec
scas
rorl
shrl
outsl
or
xor
data16
push
outsb
shll
jae
lret
mov
inc
push
in
push
leave
mov
dec
outsl
push
jnp
insl
lret
insl
shrl
lret
int3
push
sbb
dec
into
cmpsb
scas
imul
inc
shrb
imul
dec
rcll
in
in
push
dec
shll
out
lock
mov
js
out
iret
push
adc
shlb
jo
dec
xor
leave
dec
jns
loopne
xor
shl
hlt
cmc
div
dec
shll
cld
std
dec
pusha
shll
ljmp
pop
add
xchg
adcl
adc
sbb
into
leave
mov
sbb
or
ret
outsb
adc
sbb
popa
lods
mov
jb
ds
push
inc
pop
mov
int
add
adc
pop
xor
adc
sahf
std
xor
sub
sub
out
cld
ds
sub
mov
enter
push
push
adc
cmp
nop
jg
ret
ret
jnp
test
mov
popa
je
sub
xor
jl
enter
mov
aaa
imul
sub
cld
inc
punpckhwd
inc
insb
insb
inc
lods
imul
dec
jbe
sbb
mov
test
jg
ss
inc
outsl
push
stc
jo
lcall
sub
ljmp
xor
into
call
sub
mov
mov
lea
in
dec
mov
cmpsb
mov
rorb
jns
shll
dec
shll
push
xor
inc
gs
imul
outsl
ja
inc
sub
or
imul
outsb
mov
iret
mov
add
ss
dec
jo
rorb
or
or
sbb
data16
es
or
stos
les
test
sub
mov
xor
mov
mov
iret
call
inc
ds
push
scas
or
test
adc
cmp
mov
adc
inc
cltd
in
push
subl
imul
inc
outsl
xor
shll
jns
imul
mov
fs
sub
fcoml
inc
cli
pop
nop
lods
stos
pop
pop
and
sti
adc
adc
pusha
add
adc
sbb
pmullw
ret
fmuls
xchg
dec
cmp
mov
pop
out
mov
xor
lods
adc
adc
cmpsl
cmc
daa
push
xchg
cmpsl
adc
mov
xchg
mov
jns
sbb
je
out
out
xor
arpl
pop
push
xor
jnp
cld
cs
adc
adc
mov
lods
out
adc
mov
xor
xor
punpckhdq
pop
dec
hlt
pop
mov
mov
push
mov
je
sbb
dec
inc
les
add
or
and
rcrb
pop
jo
scas
ja
out
stos
lcall
test
lcall
movb
fs
int
push
movsb
pop
jb
lret
add
push
and
xor
outsb
fs
dec
shll
arpl
fwait
in
and
push
mov
imul
cmpsl
test
imul
cmp
scas
inc
dec
outsl
popa
shll
fidivs
idiv
sbb
xor
stc
cli
sti
cld
leave
dec
sub
mov
outsl
arpl
gs
mov
outsl
jne
arpl
dec
push
test
inc
gs
cmpsb
jmp
xor
lret
mov
mov
dec
xchg
rorl
pushf
loopne
test
mov
ret
sub
insl
punpckhdq
pop
fcmovnb
pop
cli
mov
mov
test
add
shll
lds
push
jae
sbb
adc
push
mov
add
sbb
fwait
jge
movb
mov
jg
adc
imul
mov
fisttpll
xor
sub
xchg
js
or
push
movsb
sahf
scas
adc
sbb
push
adc
sti
fsts
cwtl
cwtl
je
xor
nop
or
clc
push
push
and
dec
push
or
gs
imul
pop
push
push
push
add
rorb
mov
mov
mov
sbb
mov
inc
fnstcw
nop
and
or
sbb
inc
and
mov
inc
cmp
aam
xor
add
dec
data16
loopne
cmpl
mov
movsb
jmp
mov
pop
pop
out
mov
lock
sbb
enter
add
push
clc
ret
mov
add
outsb
addr16
outsl
sub
push
pop
cs
stos
xchg
mov
lods
je
mov
add
cmpl
jae
jae
push
sub
sbb
es
hlt
hlt
jo
outsl
inc
hlt
cmp
addl
adc
jp
neg
pop
or
mov
inc
push
xor
hlt
fdivl
lea
mull
adc
push
je
out
adc
inc
push
int3
insl
lea
push
mov
push
xchg
je
fcompp
rclb
popa
push
sub
cmpsb
test
pop
push
and
imul
pop
jne
gs
repnz
dec
dec
bound
bound
in
out
dec
rcl
out
push
dec
inc
inc
movsl
and
cs
insb
shrb
gs
data16
shlb
push
jb
imul
imul
add
mov
orb
hlt
mov
rolb
cltd
adc
or
mov
testb
add
movl
cmp
or
mov
push
mov
dec
enter
adc
hlt
push
dec
out
jl
xchg
cld
xchg
cld
out
jl
cli
mov
jge
test
jl
jns
js
pop
or
test
test
mov
outsl
jo
aaa
xor
insb
adc
sbb
mov
shl
pop
test
lcall
push
pop
lcall
bound
arpl
pusha
or
lcall
adc
movsl
pop
lcall
arpl
jb
outsl
push
popf
cmp
pop
imul
ja
jbe
inc
outsb
outsl
jne
inc
jno
ja
xor
outsb
jb
jae
dec
je
daa
dec
ja
jbe
ja
inc
addr16
dec
mov
jne
jp
jnp
jbe
je
gs
outsl
jle
mov
cmp
jg
addb
subb
outsl
test
arpl
inc
xchg
mov
xchg
sub
lret
data16
lea
xor
push
xlat
daa
nop
sbb
data16
cmc
xchg
cwtl
adc
shll
lcall
mov
pop
push
dec
dec
outsl
cmpsb
jmp
xor
adc
push
dec
push
rolb
push
test
jae
pop
jge
adc
rcrl
sti
sbb
pop
or
shrl
lods
jae
pusha
sub
xchg
das
movsb
mov
loop
add
add
add
cltd
inc
add
lcall
add
dec
les
iret
ljmp
cli
mov
push
sub
inc
pop
dec
test
sub
xchg
xchg
mov
notb
divb
and
cmp
mov
add
loopne
cli
adc
push
xorl
pop
repnz
je
mov
adc
xor
enter
adc
adc
mov
icebp
les
roll
clc
sub
xchg
in
in
mov
gs
mov
lock
bnd
xchg
or
imul
je
mov
or
dec
fcmovnu
shll
loopne
dec
shll
out
addb
jmp
jno
int3
pop
in
ds
fnstenv
or
push
or
jmp
and
jo
xor
add
and
call
sub
imul
mov
loope
xorb
mov
enter
jl
xchg
cld
xor
xchg
cld
rcr
ret
add
into
fdivs
leave
inc
or
inc
push
push
sbb
icebp
lret
mov
into
jnp
or
jmp
pop
and
xchg
ficoml
cmp
add
sub
jo
aas
mov
ret
enter
lcall
fistl
insl
testb
lret
test
jbe
push
ja
or
sarb
or
dec
cmovp
jl
fadds
jp
bound
icebp
jns
mov
sub
push
insb
jbe
pop
mov
push
mov
jo
or
jne
adc
jp
lock
lret
ficoms
xchg
and
push
sbb
mov
fdivr
ljmp
mov
jne,pn
mov
jge
mov
sub
int3
sbb
cs
data16
in
loopne
pop
out
aad
movsb
pop
push
jle
or
in
dec
mov
rclb
adc
sub
pop
lock
jb
add
jmp
and
mov
or
or
sbb
lcall
jnp
test
and
sub
pop
mov
add
adc
jl
mov
je
daa
dec
es
mov
fsubs
clc
add
push
sub
push
cmp
js
lea
into
cld
dec
aaa
jmp
addb
push
or
mov
jne
inc
xor
ss
adc
push
sbb
or
pop
adc
add
daa
cwtl
jp
pop
rcrb
sub
test
cmp
js
jge
and
xor
add
push
clc
call
sbb
cs
push
adc
or
mov
jg
repnz
inc
xor
push
cmp
lea
shl
into
add
into
das
push
push
pop
inc
stc
cmp
hlt
pusha
mov
sbb
cmpxchg
insl
jo
imul
fsubs
add
imul
mov
mov
cmpsb
imul
outsl
and
cmpsb
imul
cmpsb
imul
imul
pushf
insb
cmp
sahf
and
jmp
andl
or
and
and
test
xlat
insb
jns
lods
pop
lods
popa
scas
scas
mov
sub
lret
mov
lret
and
je
and
lahf
fdivs
in
es
movsb
jb
fmull
add
add
lods
inc
sub
cld
rorl
or
adc
push
imul
sub
jl
dec
push
sbb
push
scas
icebp
add
bnd
cmp
inc
adc
sub
adcb
or
push
nop
outsl
je
adc
jae
push
shrl
and
insb
push
mov
lret
push
xchg
cs
push
jmp
mov
outsl
les
mov
push
insb
insb
inc
js
imul
je
mov
cmp
dec
hlt
push
hlt
add
mov
xchg
pop
shll
push
push
push
pop
pop
sbb
bound
out
push
lock
test
cld
pusha
push
mov
shrb
add
push
lret
or
push
mov
ret
icebp
cmpsb
in
stos
fisttpl
ret
andl
clc
mov
or
jae
sbb
dec
pop
push
insb
std
mov
adc
dec
in
lock
mov
loopne
imul
jbe
js
lret
xlat
fildl
sbb
js
sbb
xor
fdivr
ss
or
xor
andb
hlt
inc
fsubrs
decl
push
icebp
imul
ret
dec
xor
jg
outsl
and
push
jne
jo
mov
mov
sahf
sti
mov
rorl
and
or
leave
out
push
or
cmp
orl
ss
inc
rcrb
movzwl
cmp
jl
pop
nop
loope
imull
daa
dec
or
dec
inc
mov
add
jb
cwtl
or
rcl
shrb
pop
or
ficomps
test
push
int
mov
jl
out
add
pop
push
dec
jle
sbb
pushl
loop
lock
fistl
adcl
sbb
xor
cld
cmp
mov
sahf
xchg
sub
aaa
mov
mov
fs
sub
add
pop
or
cs
bound
and
movl
pop
mov
jle
lea
insl
mov
jo
pop
sub
add
inc
gs
push
mov
ret
pop
mov
inc
sub
sub
inc
and
dec
mov
push
push
fisttpll
movb
pop
xor
sub
js
addr16
push
lods
pop
js
out
ss
mov
sub
out
push
lock
scas
hlt
sub
sbb
ds
push
or
push
cld
mov
sbb
sbb
push
push
mov
ret
loope
in
enter
xor
sarb
mov
cmpsl
mov
pop
sbb
and
in
loopne
adc
add
cmp
jg
out
cld
jl
add
cs
mov
data16
fbstp
cltd
lea
movsl
clc
andl
or
mov
mov
push
fadds
push
dec
sub
outsl
inc
pop
xchg
mov
test
mov
out
orb
jle
push
pop
lea
daa
push
testl
pushf
cmp
or
push
int
fstps
sbb
add
incl
mov
adc
push
inc
or
clc
mov
ja
add
daa
push
cmp
sbbl
test
and
adcl
mov
sbb
pop
in
in
ret
movsb
mov
inc
sti
or
cmpsb
stos
adc
push
sbb
mov
sbb
jmp
movb
jmp
push
push
leave
add
mov
push
cmpsl
xchg
mov
movsl
aad
push
mov
mov
add
and
mov
shll
ss
adc
test
dec
ret
ret
push
loop
xor
sbbl
insl
outsl
insl
mov
cltd
add
or
mov
push
mov
out
in
mov
push
jne
sbb
pop
cmp
pop
call
xor
adc
push
movsl
add
sub
lods
sub
sar
imulb
cmc
arpl
outsb
adc
lds
adc
jne
or
mov
push
test
gs
dec
mov
mov
mov
push
call
sbb
jae
mov
adc
cmpw
jne
fwait
or
sub
js
loopne
or
push
in
jbe
andl
and
and
dec
add
push
pushf
jnp
jb
adc
sub
inc
adc
xor
ficoml
ret
rolb
rdpmc
dec
dec
lods
xchg
or
jne
out
inc
dec
pop
movsl
or
aas
mov
or
hlt
andl
mov
loope
mov
dec
mov
inc
stos
popa
orl
jae
mov
inc
xlat
lcall
mov
pop
inc
cmp
and
xor
jmp
or
xchg
rolb
rcl
les
inc
hlt
scas
loopne
or
xor
hlt
mov
emms
adc
mov
les
or
lods
test
data16
mov
loop
ficompl
sti
inc
lock
shl
mov
test
in
dec
add
dec
adc
ret
addr16
pop
lock
in
mov
setne
popa
adc
ja
inc
dec
jg
jnp
jne
mov
cmp
dec
push
sbb
pushl
push
xchg
push
test
jne
mov
adc
cmpsb
and
mov
sub
xor
lods
mov
lret
mov
cs
bound
shll
jbe
sub
insb
gs
lea
xor
push
or
inc
aas
jae
arpl
mov
loopne
in
mov
insb
cmp
add
push
mov
adc
jnp
sahf
push
xchg
xor
or
insb
mov
add
xor
jle
sbb
push
push
and
mov
loopne
sahf
and
orl
pusha
out
xor
sbb
adc
and
movb
or
sub
mov
jo
push
push
mov
sub
rorb
mov
push
outsl
and
insl
mov
pop
cmp
jne
xchg
jmp
mov
xor
pop
mov
out
push
sub
inc
mov
cmpsb
imul
push
imul
jns
ja
leave
inc
shlb
imul
outsl
jns
popa
aam
pop
ret
lock
pop
leave
cmpsb
mov
addr16
lret
stc
xor
es
nop
std
mov
add
cwtl
call
sub
insb
inc
popa
arpl
sub
adc
dec
cwtl
fs
je
popf
adc
xchg
lods
xchg
in
push
xchg
mov
nop
jmp
stos
stos
sbb
jecxz
iret
pushf
cs
outsl
lock
pop
cmc
adc
fxch
push
stc
add
mov
inc
add
pop
cmp
and
xchg
std
pcmpgtd
add
push
or
mov
pushf
mov
enter
and
pop
mov
nop
push
fmuls
inc
adc
jnp
or
pop
ud2
mov
or
push
mov
xor
cli
and
inc
outsl
jo
inc
pop
sbb
sbb
add
dec
shll
jbe
inc
or
xor
insb
gs
js
pop
cs
pop
fildll
add
mov
leave
push
push
jp
xchg
loop
push
movl
insb
in
gs
jmp
stos
insb
js
adc
lea
out
lods
lcall
call
sbb
rorb
push
push
sub
aam
sub
push
adc
sub
adc
pop
inc
cs
adcl
or
mov
fsts
lret
cs
push
push
jne
fwait
jge
lods
jl
pop
adc
sbbl
cs
jmp
sub
aad
and
adc
aam
enter
fdivr
adc
enter
call
or
sbb
stos
rcll
push
and
pop
cmp
sti
pop
adc
push
mov
push
sub
push
sub
xor
cli
fadds
ficoms
orb
push
addl
add
xor
or
insb
dec
pavgw
mov
jmp
mov
adc
mov
adc
lret
xchg
pop
rcrl
add
leave
dec
ds
loopne
loopne
adc
ss
and
bound
push
jnp
and
mov
repnz
adc
call
insb
bound
fmul
and
push
add
xor
test
mov
adc
xor
outsl
ljmp
jmp
add
in
pop
jae
sub
mov
or
loope
sarl
ret
int3
inc
je
inc
ficomps
mov
mov
cmpsb
jle
add
lock
push
es
sbb
lock
push
or
lods
xor
xchg
fwait
xchg
mov
jns
aaa
rolb
or
popa
mov
push
pusha
adc
push
imul
adcb
cmp
outsb
mov
sbb
add
push
dec
mov
call
pusha
daa
loop
push
ja
sub
ret
xchg
dec
xor
nop
add
nop
cmp
in
pop
adc
ja
mov
outsb
xor
and
inc
or
fcomip
ret
je
cmp
repnz
jbe
mov
dec
movsb
insb
neg
mov
adc
pop
jmp
test
clc
mov
jmp
arpl
pusha
push
push
jg
into
sbb
aam
push
jp
mov
push
test
jmp
sub
pop
clc
mov
imul
add
add
sub
push
out
movsl
ret
pause
fwait
xchg
mov
or
in
or
or
push
mov
dec
mov
and
push
fsub
hlt
lcall
es
imul
imul
xor
push
push
adc
xor
imulb
pop
push
push
jae
push
or
je
push
inc
add
adc
fnstenvs
hlt
push
ljmp
xor
call
xor
xlat
sbb
add
and
ss
shll
js
xor
shll
xchg
lcall
int3
aam
pop
mov
xor
dec
sbb
and
nop
fwait
jg
add
add
push
inc
ret
and
jp
mov
mov
mov
in
push
add
pop
push
push
push
inc
push
xor
cs
insb
out
pop
in
jbe
dec
add
or
subb
push
ljmp
jg
gs
gs
mov
inc
gs
outsl
fs
jmp
lret
jmp
imul
inc
jb
popa
je
push
push
mov
sbb
insb
outsl
jae
dec
popa
outsb
fs
add
std
fbstp
jbe
jo
xor
outsl
jb
cmovb
inc
outsl
imul
std
outsl
je
gs
cmp
cmpsl
lret
repz
sub
jae
xor
js
add
je
data16
fiadds
cs
fs
mov
push
cmc
incl
lock
sub
add
nop
pusha
nop
add
call
and
jmp
lcall
dec
xor
push
push
movl
jb
arpl
add
fs
test
push
rolb
sub
and
mov
sub
push
or
inc
sbb
pop
inc
or
mov
add
add
jge
dec
add
mov
lcall
add
dec
nop
test
nop
je
lea
mov
repnz
in
out
lret
mov
cmpsb
sbb
pop
jne
nop
nop
mov
sbb
stc
movzwl
mov
add
mov
add
jge
jmp
clc
push
lock
xor
cmp
aad
push
and
pop
lea
push
push
pop
jnp
sbb
fs
dec
pop
in
mov
lret
mov
testl
rclb
loopne
inc
inc
and
cld
pop
lea
nop
incb
lea
push
call
pop
push
jmp
pop
pop
fidivs
fistps
mov
pop
nop
ret
dec
call
negb
mov
loopne
mulps
fisttpl
repnz
nop
add
xor
cmp
nop
aas
inc
adc
add
loopne
int3
xor
add
nop
add
or
popf
and
inc
fisttps
pop
mov
int
mov
lcall
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
fdivr
outsl
add
and
fs
mov
cltd
jecxz
xchg
mov
mov
mov
sti
mov
pop
je
stc
fwait
out
push
sti
cwtl
into
repz
sbb
mov
pop
xor
stos
mov
pop
into
jbe
jne
cld
mov
pop
idivb
push
imul
adc
or
imul
mov
adc
mov
and
adc
jae
cmp
pop
add
add
sub
push
jnp
mov
or
pop
push
xor
jb
add
lods
push
daa
or
push
insb
outsl
ret
add
lcall
jb
cmp
daa
inc
xor
xor
orl
sbb
rcrb
add
xor
fdivr
decl
add
fldcw
mov
mov
cli
lret
es
and
push
bound
andb
fnstsw
and
push
cmp
pop
inc
or
pop
inc
adc
jge
int
stos
add
and
and
add
mov
dec
jne
imul
cmp
sub
sbb
or
daa
xor
push
icebp
test
mov
idivb
and
push
fists
push
and
fwait
mov
xor
push
pop
sbb
mov
xor
je
mov
inc
push
mov
inc
outsb
pop
loop
inc
dec
push
ret
das
dec
push
sub
divl
push
adc
ljmp
add
adc
cmp
jne
pop
test
sbb
loope
fldt
pop
lcall
inc
or
xor
inc
and
das
adc
int
sbb
mov
dec
adc
inc
add
mov
adc
sbb
loopne
push
or
fdivrs
mov
incl
loopne
or
sti
adc
inc
push
sbb
mov
ret
mov
insb
outsl
scas
dec
or
mov
imul
adc
adc
lods
arpl
push
movb
jb
mov
dec
add
dec
push
outsl
mov
stc
cli
jns
cs
gs
out
jb
js
fcoms
out
pop
push
mov
ss
adc
pushf
xor
mov
imul
call
adc
sbb
imul
add
adc
lods
xor
sub
cld
push
push
out
pop
add
mov
mov
xor
adc
lock
mov
mov
pop
dec
std
mov
mov
mov
out
and
lock
mov
ret
ja
push
cmp
mov
je
add
mov
sub
adc
movb
mov
lret
outsb
in
push
in
in
out
dec
out
mov
shrl
jmp
loope
add
lret
or
dec
mov
scas
clc
or
jg
rcrb
adc
mov
pop
or
aaa
ud0
mov
dec
sahf
add
cld
add
sbb
movsb
mov
mov
jbe
sbb
in
jae
fcoms
outsb
mov
lcall
decl
push
fdivs
mov
fistpl
cld
pushl
fstp
mov
cs
sub
fs
loope
loop
arpl
std
xor
pop
rcrb
enter
ljmp
roll
pop
push
xor
sbb
filds
daa
adc
mov
incl
inc
dec
imulb
and
test
les
inc
and
mov
push
enter
inc
pop
clc
dec
es
sbb
enter
mov
jmp
sbb
jnp
push
rol
add
pushl
test
jge
subb
iret
sbb
adc
sbb
and
cld
jmp
sbb
cwtl
std
shr
js
sarb
cmp
sub
insb
jbe
xchg
pop
cwtl
ljmp
mov
jbe
inc
mov
sbb
or
cs
jae
aas
iret
popa
shlb
cmp
pop
shrb
arpl
imul
mov
xlat
fdivs
and
xor
dec
or
pushl
frstor
jmp
in
xchg
cltd
addr16
pushf
in
xchg
adc
xchg
xor
incl
xor
pop
mov
jnp
les
mov
fcom
hlt
jne
les
lcall
aaa
mov
movsb
push
push
mov
cmpsb
xor
inc
add
ljmp
mov
outsb
sbb
mov
mov
cmpsb
mov
sbb
incl
mov
pop
sub
mov
pop
hlt
cmpsb
imul
imul
xchg
pop
inc
incb
adc
push
loope
and
lcall
insl
ss
in
push
out
scas
imul
jmp
imul
in
popa
lock
mov
sub
or
loope
and
mov
sbb
mov
pop
sti
outsb
mov
pusha
mov
fldt
sbb
enter
jge
movsl
das
cmp
push
filds
push
push
pusha
lock
nop
push
pop
data16
cmp
sub
pushl
nop
mov
mov
movzbl
cmp
dec
dec
jbe
xor
test
mov
les
xor
lret
and
cmp
jmp
or
pushl
pushl
idivb
je
adc
adc
loop
out
or
push
and
inc
push
call
pop
call
mov
add
push
pop
loop
fs
xchg
std
lock
call
adc
inc
ss
fsubs
mov
dec
stc
sub
cmp
das
sbb
clc
push
jns
imul
mov
push
xor
mov
in
xor
gs
cmp
fdivrl
loope
orl
push
jo
iret
ret
bound
cmovno
leave
insl
mov
loop
bound
mov
mov
les
add
popf
mov
das
jns
or
sar
aaa
cmp
and
xchg
add
pushl
xor
dec
das
enter
mov
or
leave
outsl
xor
or
mov
pop
jg
ljmp
xor
inc
sarl
jae
xor
lds
enter
dec
dec
lret
cmp
test
push
cmpl
xor
jbe
adcb
sbb
mov
add
fs
iret
rol
lcall
mov
jg
aad
cmpsb
inc
fwait
xlat
xor
xor
fcmove
mov
push
loopne
dec
sub
jecxz
in
insl
pop
mov
aaa
out
pop
gs
xor
xor
idivb
repz
cmp
rorl
xor
fbld
jg
push
push
mov
stos
pop
jp
cmp
add
jne
jl
and
call
or
mov
cmp
addb
jg
xchg
lods
rclb
std
in
jge
dec
rol
pushf
andb
dec
jns
stos
push
xchg
mov
in
pop
pop
cmp
test
fs
xchg
and
inc
xchg
pop
xchg
jae
outsl
mov
cltd
cmp
or
popf
cmp
out
in
out
in
jo
mov
roll
scas
notb
lock
incl
add
insb
add
outsl
mov
xorb
lods
mov
jg
andb
and
or
and
pushl
mov
js
std
mov
loop
mov
adc
jmp
incl
dec
int
cmc
push
xor
cmpb
dec
movsb
les
pop
pop
mov
shrl
lcall
mov
mov
mov
mov
cmpsb
mov
fs
mov
test
pop
pop
test
in
inc
pusha
call
mov
dec
mov
mov
cmpsl
jae
push
gs
test
inc
loop
xor
outsl
jmp
fldenv
jae
js
aam
xlat
pusha
or
sub
cmpsl
ljmp
pop
cmpsb
jmp
inc
pushf
roll
les
jne
jb
outsb
je
nop
cmpsb
mov
inc
dec
bound
icebp
push
and
rcll
xor
test
call
lods
mov
mov
sbbl
sbb
pop
sahf
int3
or
jne
add
incl
inc
or
fisubrl
add
jg
call
xor
nop
ss
fistpll
and
jae
insl
nop
sarl
cli
pushl
clc
sti
mov
lea
jne
push
mov
sbb
movsb
dec
movsb
adcb
rcll
fadds
lock
cld
std
inc
divb
je
push
movntps
in
mov
lea
inc
decl
popf
xlat
sbb
mov
movsl
test
sbb
or
popa
sbb
pushf
jle
cs
aaa
pop
adc
xlat
pushf
mov
mov
push
sub
shlb
test
dec
sub
push
fdivrl
sbb
mov
mov
mov
mov
lock
or
out
out
daa
sub
mov
dec
sub
sbb
clc
mov
or
sub
nop
jo
sub
movsl
sub
add
mull
decl
gs
add
add
rcrb
sbb
or
jmp
and
lcall
mov
dec
andb
jg
popa
and
add
loopne
cmp
jns
das
jno
ja
jb
jne
push
imul
sbb
call
push
je
lods
andl
push
sahf
push
in
call
outsb
mov
mov
inc
movsb
mov
decl
call
pushf
xor
sbb
fndisi(8087
scas
and
push
mov
mov
sub
inc
sub
jle
incb
movb
inc
or
push
inc
add
imul
setno
lock
shl
add
enter
adc
ret
adc
in
outsl
jo
call
dec
cld
push
std
or
int3
int
rorl
mov
pop
jbe
mov
and
lods
es
push
xchg
mov
xor
sbb
imul
pop
cli
sahf
cmp
fdivrl
adc
push
jg
incl
nop
test
dec
outsl
mov
dec
insl
push
and
loopne
xor
fimuls
popf
fdivs
add
jp
xchg
lcall
mov
pop
sbb
or
jae
mov
jg
push
dec
push
inc
sub
clc
lcall
shll
push
lea
push
outsb
push
xchg
xchg
cli
jecxz
or
call
mov
push
xor
jg
test
inc
push
mov
inc
jmp
cmp
add
jnp
sub
pushf
push
jle
hlt
mov
jge
nop
mov
push
dec
adc
mov
push
and
add
pop
out
xchg
jo
sub
push
jg
popa
mov
or
adc
and
test
orw
add
cmp
add
cmpl
add
call
push
push
jb
adc
cmp
or
ljmp
out
addr16
clc
testb
sub
adc
pop
inc
cmp
jmp
movsb
cld
add
or
call
loopne
push
or
call
inc
jmp
cmp
jb
mov
or
sbb
addl
aaa
aam
dec
sbb
insb
xor
int
add
or
movsb
cmp
pop
jmp
mov
cmp
push
dec
outsb
add
pop
test
or
sbbl
cwtl
aaa
call
stos
arpl
add
pop
xchg
jmp
add
xchg
jg
pop
shrl
jg
and
dec
ret
xor
cwtl
pop
ret
or
inc
push
push
push
xor
push
in
sbb
cmp
jne
sub
jno
and
jl
and
fistpl
cmp
rolb
fdecstp
inc
es
pop
inc
adc
and
lock
enter
pop
out
out
mov
mov
subl
ljmp
arpl
cmp
mov
adc
shlb
daa
loopne
xchg
push
sub
movsl
aaa
cli
xor
xorl
dec
or
jg
call
push
push
aaa
imul
movsb
push
sbb
mov
and
and
inc
into
ljmp
jo
xor
xchg
add
jbe
and
incl
adc
sbb
adc
outsl
inc
adc
decb
das
hlt
push
add
ret
xchg
mov
test
decl
jb
adc
pop
clc
sti
mov
jmp
pop
enter
arpl
mov
jmp
push
hlt
or
imul
and
pop
and
mov
pop
jge
imul
test
sub
lock
lret
out
fwait
inc
push
hlt
call
or
cmp
mov
fucomip
iret
je
daa
inc
push
jmp
add
imul
xchg
mov
push
jmp
pop
pop
or
call
inc
push
popf
clc
mov
clc
in
xor
dec
andl
mov
cmp
jmp
clc
lds
push
movsl
divl
aad
test
ret
pop
jns
unpcklps
test
outsl
mov
fdivr
or
mov
fwait
sub
or
cmp
ret
adc
lret
idiv
pop
cmp
xor
imul
jl
clc
lods
add
call
xchg
mov
rcr
adc
mov
cmp
inc
sbb
mov
xor
mov
push
clc
cmp
jg
pop
xor
int3
ljmp
xorl
jg
aas
mov
pop
sub
add
or
inc
rcrl
sbb
pop
mov
mov
inc
cs
mov
ljmp
nop
add
hlt
cmc
icebp
mov
ret
repnz
mov
stc
inc
sbb
test
test
mov
xor
mov
daa
pushf
and
jecxz
adc
enter
cmp
orl
loope
jg
or
push
sar
outsl
ljmp
arpl
adc
jmp
into
in
shrw
cltd
inc
sbb
xchg
lods
jne
incb
fildll
or
ret
cmpsl
sub
sti
dec
adc
pop
std
lods
lret
mov
enter
notb
rcr
cld
outsl
flds
mov
jmpw
dec
dec
adcb
into
lret
pusha
ljmp
out
push
mov
or
sar
incl
push
xor
fisubs
adc
pop
adc
inc
fwait
enter
dec
lods
rcr
or
mov
jb
push
adc
sbb
xor
mov
enter
call
ljmp
inc
imul
push
shrl
mov
decl
and
add
xchg
xor
pop
popa
popa
mov
jns
lods
ret
mov
pop
in
adc
pop
call
mov
dec
and
repz
imul
inc
mov
cld
jo
and
lock
sbb
mov
jg
adc
sbb
addr16
aas
push
pop
lahf
cmp
sti
arpl
adc
cmp
insl
icebp
pushl
test
pop
push
mov
push
int3
loope
aaa
mov
nop
mov
mov
add
int3
daa
jmp
mov
xchg
add
cmp
mov
lea
or
sbb
stos
adc
repnz
aad
add
inc
orb
add
xor
nop
fistpll
mov
mov
leave
adc
cli
movlps
xor
pop
fsubp
unpcklps
xchg
mov
dec
inc
dec
incl
jg
mov
adc
push
dec
cs
dec
dec
jge
out
or
jmp
xor
pop
pop
into
xor
xor
mov
push
cld
lods
jmp
mov
dec
jbe
outsw
out
fs
loop
das
dec
add
mov
ljmp
hlt
data16
jge
outsl
add
pop
or
mov
into
icebp
idivl
cmp
pop
push
mov
dec
cmp
pop
cmp
fdivrs
inc
jo
shlb
fnstcw
int3
push
out
arpl
outsl
outsb
jg
call
aas
neg
in
push
push
and
or
dec
inc
pop
xor
fisttps
les
or
insb
sbb
jae
outsl
mov
rdmsr
mov
das
and
push
mov
outsl
outsl
cwtl
setns
ds
pop
dec
popa
bound
gs
jae
cmc
idiv
jg
fs
mov
icebp
xor
sbb
jne
push
push
push
and
or
mov
adc
add
and
add
inc
adc
inc
popa
fs
and
cld
add
das
push
je
or
push
add
jo
rorl
cs
dec
sti
adc
sbb
sub
mov
mov
sbb
insb
inc
arpl
mov
jg
xor
or
jae
bts
xchg
sub
insl
mov
in
outsl
out
mov
jb
popa
jae
jb
data16
insb
mov
xor
icebp
ret
cvtps2pd
cmp
je
push
outsb
cmp
jo
in
pushl
jb
gs
in
into
fimull
adc
inc
insl
xchg
ror
sti
mov
ja
pop
pushl
outsb
push
jne
ja,pt
jl
ja
mov
cmpsl
fstps
mov
dec
je
jo
jne
sbb
jmp
cmp
les
pop
inc
ds
mov
push
roll
es
and
out
add
fucomip
xchg
push
pop
push
js
push
sbb
aas
or
mov
or
push
cltd
or
push
or
adc
or
call
sub
pop
inc
and
incl
stc
lock
or
or
pop
push
add
or
daa
sub
xor
jmp
push
add
or
ds
push
lock
add
or
std
add
xchg
inc
inc
sbb
pop
adc
incl
xchg
sbb
push
add
pop
or
mov
adc
or
push
cs
adc
push
push
pop
or
and
lock
aad
in
in
lea
adc
sub
cmp
movb
bound
or
add
add
aam
mov
dec
jl
cmpsb
pop
lcall
or
lods
sahf
xor
or
push
rclw
xor
in
mov
sub
xor
pop
fwait
sub
xor
shlb
xchg
mov
mov
mov
and
je
sbb
incl
jecxz
ret
jb,pn
fisubl
mov
add
and
inc
jg
add
jbe
cs
dec
fistl
or
decl
mov
sub
sarb
lods
mov
adc
push
imul
rorb
cmp
cwtl
adc
add
int
pop
push
pop
inc
add
mov
sub
adc
jb
mov
mov
jae
jne
push
jae
xor
mov
mov
loopne
cmp
cmpl
and
daa
sub
sbb
add
and
repz
adc
lea
cmp
jbe
add
inc
out
stos
js
jne
jmp
cmpl
js
icebp
add
jmp
push
sbb
mov
sub
cmp
adc
cmpb
jne
cwtl
pop
add
insl
lock
jp
or
insb
xchg
sub
sub
lock
or
mov
loop
cld
and
shlb
fstpt
daa
lea
pop
or
xchg
fstpt
mov
or
dec
repnz
push
adc
pop
and
add
out
popf
mov
pop
cld
or
mov
out
ja
cld
mov
jo
jo
das
insb
mov
jmp
mov
mov
xorl
insb
inc
jle
mov
add
call
lea
mov
and
sbbb
mov
pop
popa
lea
add
jne
sub
inc
std
sub
jmp
lcall
andb
lods
test
mov
loopne
cmp
lock
decb
pop
adc
std
inc
push
and
push
dec
inc
dec
sbb
add
push
inc
push
jnp
sbb
xor
adc
je
inc
push
xor
test
add
popa
insb
adc
pop
adcl
or
xchg
mov
or
add
and
mov
addl
pop
dec
add
sub
add
dec
je
inc
lahf
xor
test
fildll
push
pop
mov
inc
arpl
jae
or
jo
lods
pusha
mov
mov
add
add
cmc
sbb
fsubrp
leavew
call
dec
or
mov
inc
jns
outsl
push
imul
mov
inc
adc
sbb
xlat
fidivrs
jne
cmp
push
daa
in
push
idivb
mov
in
pop
push
imul
push
gs
pop
cmp
pop
push
or
sub
inc
fcoms
imul
jbe
outsl
pop
dec
testb
cs
fs
jne
gs
lods
cltd
jae
rclb
arpl
push
lods
insl
lds
test
push
fs
mov
movsl
xchg
fiaddl
bound
or
xor
loope
fisubrs
mov
scas
and
fdivs
jo
xorl
fistpl
adc
insb
pop
das
outsb
mov
movsl
into
jle
bound
push
jb
test
and
cs
jg
movsl
je
aas
xor
inc
push
inc
pop
dec
inc
pop
pop
pop
mov
pop
dec
jo
je
mov
mov
pop
popf
or
insl
or
dec
push
pop
sbb
imul
push
dec
insl
add
test
pop
je
or
xchg
sub
mov
mov
inc
arpl
outsb
or
ficompl
ja
jo
add
xor
cs
outsl
mov
mov
sub
je
jo
or
push
inc
mov
push
and
push
mov
jae
sbb
ja
decb
arpl
jne
jo
xchg
inc
js
ret
adc
mov
insl
inc
or
push
push
or
and
gs
inc
xor
aas
ds
imul
out
pop
and
rorl
mov
inc
imul
push
mov
icebp
push
dec
or
pop
repnz
add
repz
inc
add
orb
and
inc
test
loop
popa
push
push
push
add
sbb
je
rolb
adc
lds
push
xchg
pop
and
or
ds
jb
jo
pop
test
push
inc
mov
or
aam
inc
or
insb
mov
es
push
mov
adc
dec
icebp
dec
rcrl
dec
push
dec
add
sbb
xor
add
incl
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
