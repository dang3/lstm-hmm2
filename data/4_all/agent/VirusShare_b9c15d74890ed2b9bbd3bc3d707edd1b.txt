sub
xchg
mov
push
rcrl
sub
cltd
and
cltd
mov
mov
xchg
rcl
jmp
cld
lret
dec
mov
inc
mov
test
pop
xchg
nop
ret
pop
inc
sbb
mov
movsl
dec
int
cltd
aaa
bound
adc
test
inc
sbb
dec
movsb
mov
ficomps
pop
pop
push
xor
faddl
jl
push
or
call
fadd
orl
xlat
lods
sti
ss
imul
push
cmpsl
xchg
xchg
loop
cli
cli
jae
jp
mov
xchg
test
inc
je
mov
xor
imul
dec
adc
jecxz
in
or
lcall
cmpsl
pop
mov
das
sub
out
ds
mov
jecxz
mov
mov
dec
dec
xor
imul
ss
xchg
dec
rorl
adc
aas
shlb
jmp
call
inc
mov
push
popf
xchg
cmp
inc
push
inc
insb
testl
arpl
in
mov
push
mov
add
dec
xlat
mov
subl
jb
shlb
sbb
mov
cmp
popa
pop
jmp
loopne
xor
cmp
ja
iret
add
xchg
dec
dec
cmp
divl
push
xorl
xchg
dec
sbb
rcrb
add
sahf
jae
mov
and
aas
or
or
lret
xchg
cmovae
loop
sbb
pextrw
and
mov
int
inc
andb
popf
ljmp
popa
and
ds
xchg
movsb
das
inc
cmpsb
cmpsb
push
push
mov
cmp
test
stos
jae
cmp
sbb
sub
ja
jnp
or
sbb
mov
dec
rolb
dec
mov
sub
jb
popa
repnz
loope
mov
push
sarl
outsb
ljmp
lods
pop
test
push
insb
push
jbe
aam
and
inc
or
cmp
xor
fisttpll
pop
push
inc
push
rol
mov
insl
mov
jmp
mov
clc
jo
mov
inc
fistpl
std
sbb
fucom
mov
js
mov
jo
subl
insb
gs
iret
adc
inc
mov
xor
inc
insl
inc
jp
push
ljmp
shlb
cmp
add
outsb
aas
aad
adc
dec
jbe
into
fstpl
adc
push
sbb
jmp
and
push
sub
stos
mov
fidivrs
sub
out
pop
stos
test
arpl
sub
cmp
fimull
adc
ret
outsl
jb
dec
pusha
inc
jo
inc
pop
dec
pushf
in
rol
mov
and
push
lea
sbb
aas
test
or
incb
mov
aas
push
test
loopne
hlt
sbb
popf
rol
push
push
and
inc
jne
in
std
push
in
dec
das
jp
or
mov
inc
and
pop
sub
mov
add
adc
out
int
mov
push
nop
xchg
pop
fcoml
popa
cmp
shl
js
std
je
push
rcrb
dec
ja
das
jge
jg
icebp
ss
jns
aas
inc
fisttpl
mov
push
inc
push
push
xlat
popa
addr16
pop
cli
call
mov
dec
mov
popf
dec
outsb
out
icebp
push
nop
dec
xor
inc
inc
mov
mov
mov
pop
aam
mov
add
mov
pushf
push
mov
add
lods
stc
sbb
lds
test
add
fdivrl
jl
xchg
mov
out
cmp
jmp
mov
cli
push
pop
mov
subb
pop
push
jge
nop
sub
mov
cmc
int3
cmp
mov
pop
cmpsb
test
and
or
subl
fcmovnb
dec
mov
dec
push
sti
rorb
mov
lret
outsl
and
in
mov
mov
mov
cmp
mov
leave
sub
inc
cmp
orb
push
dec
or
icebp
pop
sbb
mov
mov
dec
pop
and
cmpsl
inc
aaa
je
push
jp
dec
out
push
inc
cmc
ret
inc
jbe
andl
cmp
into
sbb
addb
jmp
imul
aad
sti
push
outsb
or
xchg
je
icebp
jno
dec
pmullw
les
aam
jb
ja
fs
sbb
inc
mov
repz
into
aas
ret
and
mull
add
xorb
insl
push
jmp
mov
or
cmpsl
mov
and
sub
ret
xlat
push
mov
mov
xchg
jnp
push
jg
mov
and
and
out
or
arpl
mov
daa
es
inc
pop
inc
mov
gs
sbb
andl
xor
scas
inc
das
sahf
ret
pop
inc
faddl
lret
test
scas
sub
dec
loopne
addr16
lea
add
add
pop
pop
dec
adcb
outsl
cmp
pusha
movsl
mov
add
jbe
pop
xor
imul
in
cwtl
cli
cwtl
and
jnp
pop
popf
push
subl
ds
bound
lret
xor
push
mov
lea
shll
add
outsb
sahf
jle
inc
icebp
shll
mov
adcb
adc
mov
lea
shrb
xchg
jl
inc
scas
pop
cmp
xchg
in
jg
inc
test
lret
mov
push
icebp
pop
nop
mov
iret
test
dec
test
pushf
sub
mov
pop
xchg
negb
cld
dec
and
or
cmc
adc
xchg
pop
into
mov
ret
inc
addr16
fldenv
fdivs
mov
pop
int
je
jns
mov
dec
pop
ds
inc
andl
pop
or
das
daa
push
int
dec
push
and
mov
mov
sub
xlat
inc
rorl
rclb
lods
push
sub
jnp
or
lret
or
adcb
xor
dec
jmp
int3
cmp
test
loopne
fcompl
mov
gs
mov
jnp
fwait
add
rclb
mov
cli
xor
into
cmp
inc
adc
ficoms
ret
mov
and
ja
mov
mov
add
out
add
mull
pusha
pop
repnz
ja
out
mov
addb
scas
into
lea
mov
mov
ljmp
jbe
xor
cmp
xchg
jecxz
pop
xchg
leave
pop
cmp
adc
int3
lret
cld
adc
in
add
push
xor
negb
mov
mov
sbb
rorl
lahf
xor
mov
xchg
xchg
fnsave
addr16
mov
dec
out
dec
xchg
adc
push
mov
lock
fisubs
out
sarl
mov
jns
xlat
ffreep
int3
pop
pop
rcll
test
dec
call
out
dec
mov
jo
push
inc
cmp
mov
imul
jge
adc
jno
push
adc
int
sbb
icebp
aam
data16
sbb
test
in
add
lahf
dec
push
imul
pop
dec
mov
dec
bound
not
lods
ljmp
ss
daa
xchg
lret
mov
bound
adc
scas
cmpsl
xor
test
in
fistl
cmpsl
jbe
in
dec
bound
and
movsb
pop
clc
sahf
ret
inc
fldcw
imul
cltd
cltd
aad
sbb
mov
pop
mov
rorb
xchg
outsl
stos
and
cmp
cld
dec
pushf
xchg
aas
inc
xchg
mov
in
or
sub
sbb
outsl
and
testl
popf
mov
imull
sbb
push
xchg
dec
pop
cmpsl
sbb
xor
sub
adc
cmp
jbe
jl
pop
std
aas
pop
out
scas
sbb
outsb
icebp
mov
imul
cmp
movsl
pop
mov
pop
or
insl
jmp
mov
push
daa
xchg
xchg
scas
pop
aad
sahf
xadd
nop
sub
int
loop
dec
or
pushf
cmc
bound
popa
mov
xor
jae
imul
pop
arpl
mov
mov
rcll
stc
leave
mov
bound
ret
aad
and
adc
and
hlt
xchg
std
jne
int3
cmpsl
sub
sub
outsl
cmp
mov
push
imul
loop
adc
or
mov
xchg
pop
scas
push
sbb
cmpsb
add
sbb
cli
movsb
out
inc
mov
pop
mov
adc
cld
mov
inc
leave
stos
and
out
dec
xchg
cmp
test
hlt
fs
enter
insl
inc
push
stc
nop
mov
in
xor
movsl
mov
outsb
add
pop
sbb
cmpsl
xchg
sub
adc
frstor
lods
xor
in
xchg
push
fsubp
cmp
out
shll
sub
cs
push
sbb
push
add
add
int3
cltd
orl
dec
pusha
dec
out
cmp
pusha
outsb
jo
mov
mov
adc
jb
pop
sub
fstl
jge
or
scas
cs
imul
push
mov
sbb
lods
sub
aaa
fmul
pop
cmp
jne
push
aad
dec
pop
mov
or
or
pop
mov
adc
aas
sub
fs
mov
gs
popa
movsl
xor
xchg
or
shll
lret
stos
cmp
int3
jne
inc
and
add
xchg
sahf
cmp
mov
clc
fwait
lods
mov
mov
push
mov
stos
jl
sbb
sub
sub
sbb
push
mov
sbb
xchg
lcall
je
xchg
and
flds
push
mov
dec
xchg
loope
lea
std
fsts
mov
jns
fdivs
loopne
dec
jno
inc
cmp
insl
pop
mov
jge
leave
lret
into
pop
and
in
pop
lods
pop
into
out
std
inc
fs
jnp
xchg
cwtl
sub
adc
les
xor
stos
pop
mov
mov
test
push
or
mov
loope
leave
dec
add
stos
in
rclb
sbbl
fcompl
fbstp
inc
add
out
jmp
xchg
jae
xor
pusha
mov
out
orb
orb
test
daa
xor
popf
mov
adc
flds
dec
lret
jmp
push
pop
bound
aas
sbb
sub
gs
xchg
adcl
lret
mov
sub
cld
push
xchg
jne
scas
scas
jl
in
mov
int3
xor
and
es
add
and
push
insb
adc
xchg
data16
fs
aaa
ja
dec
movsl
ds
outsb
and
lahf
push
pop
std
or
in
xor
lahf
jmp
lock
cmp
aad
or
dec
xchg
fs
leave
je
cmp
jae
nop
lods
into
lret
insl
ja
jno
dec
mov
aaa
leave
add
rol
and
add
mov
rol
mov
xorl
jle
or
lret
les
xchg
ret
jmp
xor
shrl
into
hlt
add
sbb
mov
dec
int3
and
scas
mov
adc
popf
arpl
cmp
add
stos
in
dec
push
icebp
daa
ja
xchg
xchg
leave
call
pop
imul
call
stos
ja
xchg
lret
enter
add
pop
out
dec
lods
bound
adc
dec
ss
inc
push
insb
inc
cmp
mov
adc
ss
jo
pop
and
jl
cmp
dec
cmp
add
aas
mov
pop
dec
in
jo
mov
adc
call
test
loopne
mov
adc
gs
cmp
in
cld
mov
mov
pop
mov
jae
dec
xchg
inc
push
jne
insb
stos
fwait
xchg
enter
cmpsb
inc
movsb
push
mov
xchg
inc
mov
push
into
push
dec
cwtl
call
and
out
por
xchg
jns
outsb
or
inc
loop
or
int3
sub
fidivrl
movsl
in
rclb
or
je
mov
lds
and
lea
insl
lahf
int3
ja
adc
xlat
and
imul
dec
fldt
push
loopne
lahf
aaa
lcall
icebp
adc
xor
mov
fsubs
mov
movsb
leave
sbb
int3
repnz
test
sub
dec
sbb
cmpsb
or
jb
mov
and
sub
adc
into
sub
mov
popf
out
adc
jno
and
fstps
ss
xlat
xchg
mov
cmp
add
or
adc
shrb
add
sub
mov
cmpl
jecxz
mov
mov
add
ss
mov
sbb
das
adc
add
loopne
xchg
stos
ss
push
and
testb
sub
int3
mov
jbe
out
loope
jp
out
jg
popf
cmp
inc
cltd
mov
in
stos
stos
call
mov
gs
ljmp
mov
lds
lcall
sarb
mov
xchg
sub
aaa
pop
mov
pop
sub
data16
sahf
or
cmp
inc
dec
or
adc
data16
stos
sbb
rorl
decb
mov
jmp
inc
and
mov
lods
inc
jne
sub
jge
cld
cld
jecxz
add
sbb
mov
fidivl
sub
pop
jne
add
mov
aad
cmpsl
lds
xlat
dec
xchg
mov
ds
nop
lds
leave
call
rclb
or
lods
insl
cmpsl
data16
jns
mov
aad
lcall
int3
pop
sub
int
mov
stos
fistpl
sbb
cmpsl
aad
xchg
mov
jae
in
ret
lretw
mov
icebp
test
mov
jmp
addr16
or
out
fucomi
push
pusha
xor
add
cmc
insb
ss
xor
lret
mov
stos
mov
lods
push
push
pop
push
sub
cmp
scas
loope
dec
mov
pop
mov
cmpsb
cmp
xchg
inc
lock
pop
insl
negb
push
negb
mov
add
xchg
sbb
push
fdivs
stos
sbb
mov
pop
jecxz
ja
jecxz
into
test
inc
in
movsb
push
mov
push
adc
inc
xchg
test
mov
daa
and
mov
cld
sbb
imul
ljmp
lods
xchg
in
mov
cli
inc
pop
and
imul
shrl
push
push
inc
aaa
addr16
lock
and
lods
fs
int3
jle
outsb
mov
push
addr16
int3
xor
in
sbb
push
fiaddl
sub
pop
sbb
adc
fsub
jg
cmp
inc
aad
pop
dec
mov
test
ret
jb
mov
mov
xchg
loope
cmp
dec
stc
cli
cmp
jg
jmp
stos
rorb
iret
inc
lea
push
jmp
lock
repnz
loope
daa
cmpsl
cli
and
call
mov
nop
int
mov
fistl
jo
dec
cld
push
and
pop
pusha
jbe
xchg
popa
jnp
out
mov
popf
adc
mov
lcall
jno
add
push
int3
mov
push
scas
xorb
xor
sar
jle
rcrb
out
ja
add
dec
les
jo
push
pop
sbb
shlb
xchg
jbe
jne
jo
push
inc
rcr
gs
sub
sbb
xchg
loopne
hlt
mov
push
xor
and
add
fcompl
fcmovnbe
dec
aam
mov
dec
lret
lods
or
xor
out
mov
jb
jne
sahf
insb
in
and
mov
push
jno
decb
in
mov
inc
sub
push
addl
adc
pop
mov
cmp
and
ret
mov
std
mov
or
pop
xor
push
mov
leave
shl
pop
ret
fmuls
cmp
pop
add
ficoml
aaa
fbld
into
or
mov
psubw
mov
lcall
sbb
dec
inc
fildl
or
aaa
push
pop
mov
cwtl
add
mov
loopne
xor
jo
mov
cs
sub
popf
sti
sbbl
lret
push
push
mov
iret
enter
mov
xlat
push
pop
mov
push
lcall
mull
imul
outsb
sbb
push
ret
pop
push
add
stos
mov
popa
testb
jno
stc
je
dec
daa
repnz
mov
leave
pop
push
xor
push
sti
mov
adc
add
popf
xor
je
loope
es
cmpsl
push
mov
lret
cwtl
fsubrl
pop
popa
cwtl
cs
sub
pop
sbb
sub
ja
push
pop
xchg
dec
mov
inc
dec
or
pop
movsl
or
dec
gs
add
std
and
test
aas
hlt
lahf
jne
xchg
enter
mov
cmp
jbe
xchg
add
inc
adcl
stc
and
dec
pop
add
cli
adc
stc
imull
inc
and
add
clc
lods
and
adc
push
out
dec
ds
popa
popf
ja
loope
pop
add
mov
xchg
test
xchg
rol
jmp
rorb
data16
push
sub
pop
std
mov
mov
test
and
andb
cmova
push
pop
not
test
mov
pop
sbb
fucomi
in
xchg
pop
xor
lret
add
cli
ja
push
mov
test
cmp
leave
sbbb
adc
lea
or
xor
and
fs
cmp
and
ja
in
inc
dec
testb
push
sub
inc
lret
ja
mov
jge
les
cmpsb
aas
cmp
je
loopne
jecxz
mov
push
jge
daa
sti
inc
cli
jg
mov
int
sub
cmc
xchg
subb
lock
sub
sbb
jbe
iret
xchg
leave
pop
push
psrad
mov
dec
xor
xchg
xchg
clc
sub
insl
int
insb
sub
test
cs
pop
std
lcall
mov
fwait
dec
sarb
pop
jecxz
jne
xor
cmpsl
add
pmaxub
mov
push
and
push
icebp
sbb
imul
int3
mov
push
popl
dec
jecxz
sbb
mov
jp
in
lock
dec
adc
mov
ret
imul
pop
flds
cmp
movsb
push
leave
or
cmp
sub
ljmp
stos
insl
notb
js
int3
sti
or
mov
push
inc
out
and
cmp
xchg
in
in
xchg
subl
popa
dec
outsb
ja
cmp
xchg
jl
xor
pop
mov
cmp
jnp
orb
adc
xor
outsb
cmpsb
mov
push
inc
scas
test
jp
aad
into
test
pop
xor
adc
jne
and
xchg
mov
push
jg
mov
mov
or
orl
aam
jg
jnp
sub
xchg
jb
cmp
in
test
sbb
sbb
sbb
and
xchg
aas
lds
mov
mov
fdivl
cmp
outsb
rorl
or
mov
das
pop
fisubs
sub
cmp
bound
xor
call
addr16
sar
std
dec
adc
mov
push
movsb
and
lcall
ffreep
lock
add
adc
popf
sbb
xchg
xchg
push
pop
dec
push
adc
adc
lods
xor
jmp
into
cmp
loopne
daa
push
ficoml
loopne
lds
mov
out
push
adc
sbb
add
cmp
sub
adc
enter
cltd
jno
inc
dec
mov
mov
mov
je
mov
popf
dec
sub
xor
mov
out
add
test
adcb
cmp
mov
push
pop
sbb
sub
xchg
mov
in
adc
js
subb
shlb
mov
fldcw
sub
pop
mov
mov
dec
outsb
arpl
lock
jno
negb
push
pop
shlb
or
cmp
lock
sub
lock
mov
lods
int3
hlt
mov
popa
in
push
imul
push
xchg
ja
std
xchg
insl
mov
jg
cmp
sub
mov
stos
mov
ds
loopne
hlt
push
push
or
movsb
out
mov
popf
pop
pushl
jns
ror
xor
pop
movb
xor
sbb
inc
sbb
or
jno
pop
iret
es
stc
and
push
stos
les
mov
pusha
imul
mov
adc
popf
fnstsw
imul
idiv
pop
dec
push
repnz
popf
or
popa
pushw
into
jb
fcompl
xor
add
nop
lea
mov
adc
call
sub
lcall
pushf
jno
sbb
lahf
cmp
adc
pop
inc
mov
aad
push
jne
or
or
imul
imul
repnz
add
jno
ret
xor
shr
ja
stos
mov
inc
dec
add
pop
imulb
mov
scas
pusha
mov
jge
jg
inc
test
clc
xor
mov
jns
jle
pop
lods
popf
inc
jl
xchg
cmp
inc
lahf
mov
mov
dec
pop
fs
mov
rolb
scas
mov
push
cmpsb
mov
add
mov
inc
and
jnp
xor
loop
jo
test
fadd
lret
inc
ja
mov
pushf
fisttps
int3
shll
jmp
mov
pop
xchg
cs
add
and
fstpl
add
inc
imul
div
cmc
into
mov
mov
xchg
mov
clc
dec
stc
mov
aas
pop
add
mov
add
jo
pop
push
lods
adc
repz
sbb
mov
mov
push
xchg
pop
mov
aas
les
mov
pop
int
jb
push
lea
jo
clc
popl
add
and
push
out
cld
rclb
xlat
insb
flds
imul
fiaddl
popl
sbb
adc
or
lea
sbb
push
dec
addl
aas
cmp
xchg
add
divb
push
cmpsb
icebp
sti
popf
ret
test
fnstcw
jno
sub
pop
icebp
mov
popa
sbbl
orl
test
es
cmp
adcb
insb
or
add
and
mov
or
cmpsb
popa
sub
jecxz
dec
aam
in
add
fistpll
fwait
jae
xchg
dec
lcall
je
call
ljmp
or
and
mov
mov
inc
int3
sbb
push
pop
push
aam
inc
mov
inc
add
subl
mov
mov
in
push
add
js
add
rclb
ret
daa
shl
push
aam
mov
inc
daa
mov
aam
adc
insb
adc
cbtw
dec
sub
icebp
mov
xor
stc
push
inc
cltd
xor
test
jo
repnz
ret
loope
fidivrl
adc
pop
jns
idivl
xchg
lock
mov
es
sub
push
pop
push
sti
push
adc
push
xchg
std
arpl
das
cld
nop
jae
stc
jmp
pop
lock
ror
push
and
icebp
mov
decl
jle
repnz
scas
cmpsb
xchg
jge
inc
lret
cmp
fs
or
cs
cmp
xor
mov
xchg
shrl
repnz
addb
pop
mov
stos
scas
stos
cmp
int
pop
inc
push
push
arpl
outsl
cmpsl
lea
imulb
xor
push
inc
sahf
dec
stos
and
ret
mov
insb
lret
xchg
filds
mov
dec
add
xor
rorb
mov
nop
lahf
and
nopl
adc
or
inc
in
cmpsl
and
lds
in
push
lea
xlat
outsl
jb
aas
in
pop
xchg
mov
dec
dec
adc
arpl
pop
mov
lret
cwtl
ss
sbb
aaa
lods
frstor
lds
jno
mov
lds
push
stc
stos
mov
or
push
fcomip
add
cmp
mov
push
scas
push
pop
lret
xchg
cmp
cltd
xchg
xchg
fadds
mov
test
sti
clc
insb
add
sub
roll
inc
outsl
pop
mov
cltd
jno
xchg
imul
mov
lea
pusha
jbe
mov
ds
jecxz
jnp
push
push
pop
clc
sbb
arpl
lods
and
sti
xchg
pop
stos
and
bound
add
shrb
xor
sub
ja
jg
dec
stc
jnp
push
xor
mov
cli
mov
ds
imul
and
inc
jge
add
cwtl
xor
jg
or
add
lret
mov
arpl
push
xchg
fs
add
scas
cmpsb
test
lods
imul
jg
mov
mov
ficoml
notl
data16
dec
arpl
std
outsb
mov
outsb
std
sbb
enter
lds
add
mov
and
mov
mov
jge
test
pop
cmp
lret
xlat
mov
adc
cld
cwtl
out
popf
inc
pop
outsb
stc
addl
push
cli
clc
arpl
mov
xlat
dec
and
int
dec
mov
add
mov
mov
fs
sarl
negl
test
jne
es
rcrb
jns
or
cwtl
imull
jo
into
sbb
stos
jae
fbld
mov
or
pusha
rolb
cmp
sbb
mov
ss
imul
cmp
pop
fwait
hlt
ret
xchg
or
xor
or
sahf
leave
inc
mov
sbb
mov
adc
inc
divb
loope
inc
xchg
push
roll
inc
cltd
cs
inc
enter
test
hlt
pop
mov
mov
test
rolb
xchg
aam
xchg
and
pop
dec
dec
push
rclb
mov
lret
mov
shlb
adc
pop
and
orb
enter
cmp
mov
adc
movsl
dec
pop
and
mov
lods
add
subps
cmpsl
fdivrl
test
jo
jl
add
pop
mov
xchg
aad
fnsave
and
jb
roll
sub
lock
notb
jecxz
jns
lea
xchg
jge
jg
xchg
jno
xchg
xor
cmp
xlat
xchg
in
xor
mov
add
add
and
loopne
sub
pop
push
pop
mov
pusha
sbb
inc
aam
outsb
push
cmp
sbb
pop
daa
fwait
xor
lods
pop
xor
cld
and
nop
or
shl
icebp
jmp
and
add
adc
ror
loopne
cmp
aam
sahf
sub
sbb
std
fisubrs
aaa
xchg
mov
imul
or
out
sub
sar
dec
insl
in
mov
ret
pop
cmp
or
imul
sub
andl
lea
sbb
jmp
sub
push
dec
cs
xor
xor
ret
leave
dec
jbe
mov
sbb
rorb
cmp
out
add
jge
mov
in
popa
rcr
push
lods
movl
arpl
aas
mov
ja
cmp
movsl
ja
sub
xchg
daa
mov
call
or
stos
mov
or
mov
out
aam
dec
into
push
lods
add
push
cld
je
xchg
cltd
test
xchg
inc
dec
cmp
ffree
aaa
das
in
out
pop
out
jns
fs
sti
mov
dec
pushf
and
inc
movsb
xor
into
pusha
xchg
