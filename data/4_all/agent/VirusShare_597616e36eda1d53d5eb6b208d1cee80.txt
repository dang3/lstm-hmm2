mov
or
adc
outsb
jle
addr16
add
ja
pop
xor
outsb
fnstenv
cmpsl
add
movq
outsl
das
or
adc
daa
add
cld
repnz
repz
ja
add
add
pop
lret
cmpsb
imul
push
ss
xlat
xor
sahf
or
lret
imul
jne
sahf
fs
shll
xchg
lret
das
fnstcw
jge
jge
xlat
xor
js
lds
mov
ret
jp
mov
ss
ss
and
jge
repnz
inc
out
mov
in
xchg
sub
icebp
pop
and
mov
xchg
pop
lock
test
test
sub
cmpsb
shl
jle
arpl
in
ja
mov
xor
add
clc
pop
mov
adc
lret
in
add
movsl
nop
in
test
rolb
lods
nop
lahf
cmpsl
xchg
outsl
aam
pop
outsb
out
leave
scas
xchg
mov
xchg
insb
add
sub
cmpsb
jnp
mov
pusha
daa
mov
xchg
pop
pop
xor
jecxz
loopne
push
jg
popf
jae
movntps
lods
add
lea
mov
outsb
xchg
aas
hlt
pop
popf
stc
lcall
xchg
shlb
lea
push
int
fdivrl
mov
out
add
pop
out
sub
test
cmp
fmul
xorl
pop
stos
in
push
cmp
ja
and
add
xchg
sbb
leave
jecxz
dec
lret
mov
push
lret
and
loopne
sbb
sbb
js
and
out
sbb
cmp
adc
and
xchg
and
adc
in
inc
ds
and
sbb
adc
jns
cwtl
adc
adcb
out
in
mov
inc
sahf
and
aam
xchg
push
cld
ds
rclb
adc
add
push
pop
adc
push
adc
adc
adc
inc
inc
xor
repnz
adc
pop
adc
xor
xor
add
jo
xor
mov
push
adc
and
xchg
sbb
adc
enter
daa
adc
dec
sub
adc
xor
ja
mov
xchg
xchg
mov
sub
cld
pusha
es
enter
adc
in
adc
pop
test
sbb
add
sbb
jbe
or
sub
jmp
pop
mov
jae
fisttpl
inc
mov
clc
popa
sbb
sbb
sbb
mov
outsl
dec
dec
filds
add
xor
or
in
jne
dec
xchg
aas
fcoml
fcmovnbe
mov
inc
out
ret
jne
lahf
cmp
xor
pusha
lock
or
stos
add
xchg
pusha
cli
pop
cmp
dec
and
pushl
ja
mov
add
outsb
add
in
outsl
mov
and
and
push
repz
mov
int
add
and
inc
test
push
pop
into
mov
and
sbb
out
sti
dec
xor
and
out
out
sbb
pop
lahf
repnz
out
mov
pop
scas
sbb
cwtl
ds
fwait
fwait
icebp
sbb
movsl
sub
pop
xor
jge
and
in
push
jp
or
adc
pop
cltd
repz
fmull
js
or
loop
imulb
cltd
ljmp
pop
out
out
xor
mov
or
mov
lock
sti
incl
sbb
add
iret
int3
int
jg
add
jo
fucomip
mull
cmp
fadds
adc
jmp
mov
sub
or
lcall
loop
xor
aaa
jnp
xor
cwtl
mov
shrl
sub
and
aaa
ja
fs
fadds
adc
sbb
sub
xor
nop
add
xor
jbe
aaa
push
imul
sahf
cmp
mov
add
push
ret
arpl
andl
push
pop
sbb
nop
insl
sub
aaa
aaa
aas
adc
aad
vpaddusb
mov
xor
rcr
lock
negl
mov
add
jae
loope
cmc
sbb
call
inc
push
xor
out
out
and
add
ljmp
frstor
out
int
scas
shl
adc
add
ds
loopne
hlt
rcr
out
xchg
stos
xlat
cltd
fwait
mov
leave
add
fstpl
icebp
int
inc
test
js
add
fdivrl
cltd
mov
sub
int3
xor
adc
mov
adc
data16
add
adc
roll
dec
jg
ds
fsubl
ljmp
outsb
out
add
pop
into
jne
aad
negl
add
scas
add
out
xor
pop
adc
mov
int3
int
adc
add
pop
xchg
in
out
mov
fildl
or
addr16
ret
sub
sbb
icebp
iret
int3
int
hlt
cli
aad
in
stos
mov
fwait
fwait
fwait
mov
movsl
icebp
repz
in
hlt
inc
jae
test
fistpl
int
int
fs
or
lock
loope
repnz
int3
int
push
stos
xor
mov
jmp
repz
fucomip
xor
xor
lret
pop
cs
call
ja
add
rolb
xchg
xor
sbb
add
gs
int3
int
outsb
mov
dec
jno
xchg
test
int
insb
out
ds
fiaddl
inc
insb
mov
imul
int3
sbb
pop
xchg
pop
int3
fdivrl
and
xchg
mov
add
shlb
jae
aaa
ja
cwtl
pop
jnp
leave
add
rcrl
mov
xor
sbbb
imull
int3
pop
jb,pt
out
out
imul
lret
ror
out
out
mov
mov
int
int
nop
lret
shll
shrb
addl
xchg
rcrb
int
inc
jl
fiadds
xchg
stos
fcoml
int
int
fsubl
in
mov
xchg
int
int
xchg
mov
xchg
int
int
scas
loope
movsb
fnstcw
aam
popf
aad
out
mov
pop
mov
data16
mov
call
out
out
mov
ljmp
out
out
lods
ret
in
stos
ret
mov
out
mov
mov
loope
mov
lret
in
bts
add
sbb
int
xor
inc
add
add
add
in
pushl
add
push
lock
pop
push
add
add
add
imul
pop
mov
push
add
jo
xor
or
pusha
ljmp
sub
pop
add
in
int
rolb
or
xor
add
addr16
inc
xor
fmuls
scas
sub
pop
xor
mov
mov
adc
dec
add
ss
and
add
and
and
aaa
enter
test
int
or
andb
jb
popa
push
or
or
test
add
push
inc
ja
bound
in
call
outsl
arpl
inc
je
cs
adc
outsl
ja
gs
std
or
add
scas
add
or
outsb
xlat
xor
decl
fsin
aas
shll
push
add
iret
adc
filds
or
add
cmp
rolb
adc
lret
scas
pop
xlat
dec
pop
or
imul
xor
add
add
pop
ja
pop
add
xor
in
lcall
cmp
xor
lret
lret
mov
int3
clc
into
call
cmp
push
xor
dec
gs
xor
cmp
add
add
movsl
sbbb
add
es
sub
ds
jmp
outsl
or
mov
or
into
sarb
pop
mov
mov
lock
xlat
mov
and
gs
pop
and
inc
ret
lods
mov
push
inc
adc
jae
or
sub
push
sti
adc
push
inc
xor
bound
arpl
cs
sub
movsb
add
push
int3
pop
jnp
lods
sub
stc
xor
sti
popf
jmp
sub
fs
js
dec
xlat
jne
jge
cmpb
push
ret
jb
sub
outsl
jne
pop
mov
out
adc
pop
inc
pop
rcrb
jns
nop
inc
clc
push
mov
sub
lock
push
loopne
dec
push
nop
xchg
sbbl
cmp
jb
push
fs
hlt
dec
movsb
cmp
and
leave
inc
push
cmp
inc
dec
push
xor
cmpb
mov
xchg
inc
push
inc
inc
sbb
pop
or
arpl
decl
dec
incb
das
dec
scas
repz
add
pop
addb
fadds
lcall
fs
pop
pushf
call
inc
mov
jnp
cmp
repnz
es
out
add
mov
jns
add
pop
in
jp
js
sub
lcall
inc
mov
outsb
jecxz
xor
or
pop
push
cmp
add
cltd
add
cmp
rcr
lods
jmp
movsb
pusha
orl
add
pop
popa
stc
push
mov
xor
adc
add
xor
gs
fisttps
xchg
dec
add
scas
lods
dec
popa
push
or
scas
int
mov
leave
loop
std
ljmp
jbe,pn
sbb
nop
inc
sahf
bound
mov
es
sbb
inc
xchg
movsb
ja
jmp
test
out
push
and
add
stc
ljmp
mov
sbb
adcl
notl
std
aad
push
jnp
inc
mov
aas
test
popw
push
and
aad
imul
jno
in
lcall
add
frstor
dec
inc
std
fdivr
incl
add
xor
shll
push
or
or
xor
rorl
pop
or
push
frstor
or
loop
movups
int
je
pop
repz
push
add
mov
add
jecxz
gs
fs
je
xor
loopne
push
sub
test
hlt
push
mov
mov
hlt
loopne
addr16
and
faddl
adc
int
add
repnz
fstp
pop
jg
dec
push
push
add
rorb
jp
pop
in
fistps
std
cmp
push
call
sbb
or
and
jbe
bound
sbb
aam
sbb
fiaddl
je
ds
sbb
imull
inc
popf
cld
pop
inc
movhps
fs
lcall
add
mov
push
out
stos
pop
push
decb
test
add
outsl
aas
jo
insl
leave
dec
mov
or
lret
sbb
rcrb
nop
pop
daa
pop
int
in
pop
xchg
movsb
inc
cmpsl
daa
jl
aas
adc
test
push
ss
adc
pop
add
fildl
or
daa
test
roll
dec
shll
ror
ss
rcr
jmp
adc
ret
xor
jb
fucomi
add
cmp
and
push
add
or
xchg
sub
insl
andl
add
add
add
add
xor
aaa
or
mov
inc
add
leave
shll
mov
dec
lock
out
nop
sbb
and
xchg
or
pop
inc
push
enter
pop
jb
pop
in
lcall
fwait
sbb
fwait
sbb
and
das
add
inc
xor
mov
xchg
setl
dec
xorl
add
das
jbe
xchg
aas
cmp
inc
add
inc
and
repnz
aas
dec
add
xor
cvttps2pi
dec
xor
cmp
inc
je
je
fsubl
mov
mov
cmp
push
pushf
sahf
subb
insb
pop
cmpsl
inc
xchg
sbb
inc
add
xor
fnsave
insl
add
mov
xlat
sbb
lret
xor
les
mov
in
mov
pop
jae
xor
dec
cmp
movsb
daa
fistpll
or
jns
addr16
loopne
xchg
xor
hlt
arpl
pop
enter
inc
clc
out
bswap
mov
lahf
push
or
ss
push
shlb
int
push
add
dec
sahf
pop
push
in
sub
cmc
adc
inc
add
dec
add
in
pop
mov
dec
or
pop
sub
push
stc
dec
push
and
add
pop
mov
xchg
push
pop
push
fs
outsl
daa
pop
add
dec
xchg
inc
inc
push
pop
cltd
pop
dec
ja
fwait
sbbl
daa
mov
fs
cmpsl
pusha
pop
sti
fs
push
push
sti
sub
ja
push
lcall
pop
add
addb
xchg
dec
xorb
push
cmp
sbb
push
sbb
jo
pop
lret
add
dec
push
cwtl
scas
add
push
shlb
sbb
mov
js
mov
jnp
or
add
pop
leave
repz
jl
push
orl
cmp
outsl
mov
scas
int3
add
push
nop
cmp
jle
and
aaa
cld
inc
cmp
int
rorl
cmp
lahf
pop
push
or
cwtl
cmp
sti
cld
cmp
outsl
dec
and
dec
outsl
add
daa
inc
inc
aaa
outsl
and
and
imul
fldl
or
sahf
xorb
pop
jg
sbbb
int3
pop
fs
push
stc
daa
int3
or
add
aam
repz
push
enter
pop
jb
push
stc
inc
aam
sub
sbb
or
pop
fmuls
in
leave
add
lahf
fmull
enter
aas
jl
inc
push
jmp
ja
rorb
daa
test
in
xor
orl
mov
orl
call
xor
inc
pop
aaa
in
rorb
jl
scas
in
mov
lock
aas
hlt
mov
add
mov
inc
or
clc
movsb
and
add
mov
or
add
cmp
icebp
add
or
add
xor
dec
pop
data16
pop
sbb
push
xor
mov
test
loopne
or
ja
cmp
inc
pop
sbb
orl
subb
or
and
inc
sarb
push
and
jb
clc
test
nop
in
mov
cmp
push
mov
scas
add
adc
pop
nop
inc
jo
inc
xchg
jnp
adc
push
mov
push
int3
or
fs
out
repz
repz
negl
popa
dec
iret
xchg
out
jecxz
insb
fildll
fistpl
sti
jae
insb
bound
ja
jnp
pop
gs
jg
or
nop
push
mov
in
dec
test
push
mov
add
fwait
or
andb
mov
or
ja
or
testl
popa
sub
mov
imul
push
pushf
add
inc
cs
or
daa
xchg
inc
xchg
or
xchg
pop
pusha
loopne
daa
leave
inc
mov
call
in
dec
mov
pop
aam
test
fldcw
fbld
cwtl
mov
mov
and
fdiv
ja
loop
mov
js
insl
lock
das
insl
imul
fs
gs
lretw
testb
adc
pop
or
filds
xor
adc
lods
add
mov
adc
jmp
stos
mov
fsubl
test
mov
aas
fs
dec
outsb
pop
or
loopne
cltd
js
stos
push
repnz
jg
mov
sti
cld
cli
mov
xor
inc
cmp
push
jb
addr16
insl
and
mov
arpl
jae
data16
push
sti
out
fbstp
jne
insb
and
jne
imul
add
cs
dec
inc
inc
add
lcall
mov
add
nop
add
js
inc
mov
add
sub
adc
mov
int
push
xchg
mov
inc
dec
push
push
pop
jae
shlb
sub
xor
arpl
popf
bound
sbb
scas
mov
loop
xorb
add
xor
cmpsl
sarb
in
insb
adc
ss
xor
hlt
pop
xor
fidivs
addr16
xor
and
xor
bts
enter
or
or
or
dec
xor
xchg
dec
sar
insb
imul
push
ret
cld
inc
ja
insb
jmp
xchg
lret
mov
je
rcrl
add
loopne
jae
nop
adc
ja
in
xchg
inc
gs
outsb
je
arpl
sub
outsb
add
repnz
pop
insb
inc
pop
inc
inc
mov
test
imul
mov
push
cmp
inc
push
cmp
and
stc
scas
subl
xchg
aas
inc
dec
cmp
fistl
push
inc
push
imul
cmp
shrl
les
push
repnz
int3
cmp
pop
inc
or
jbe
inc
dec
inc
inc
je
inc
jb
sbb
cmp
mov
fsub
enter
packssdw
bound
jbe
add
push
std
xchg
ss
xchg
and
mov
imul
es
xchg
and
shlb
dec
pop
jb
sbb
jns
ret
lock
jge
loope
inc
aaa
rolb
inc
dec
sahf
stos
fs
hlt
cld
inc
xchg
mov
mov
or
xchg
popa
addr16
mov
lods
dec
mov
in
or
int3
pop
add
orl
push
in
add
inc
or
insb
pop
fsts
dec
fwait
push
push
add
in
dec
inc
sbb
mov
or
and
outsb
scas
aas
xor
dec
mov
dec
cwtl
mov
sub
or
and
sub
insb
xchg
xchg
fildll
fmull
xchg
add
xor
hlt
push
lds
xchg
or
lcall
push
fs
lcall
and
and
xor
and
mov
pop
mov
mov
jecxz
lea
inc
mov
test
arpl
mov
add
push
gs
fimuls
mov
daa
or
xchg
out
mov
je
pop
hlt
rolb
pop
push
das
add
push
push
sbb
js
fwait
jmp
or
data16
jp
das
fs
xlat
push
xor
push
xchg
sub
je
adc
insl
cs
and
andps
cmp
fs
or
and
popf
int
dec
jmp
sarl
and
add
xor
mov
das
leave
insl
frstor
jae
mov
jmp
pop
pop
add
imul
arpl
adc
sub
sub
push
pop
or
scas
lods
and
push
repnz
mov
sub
xchg
or
sub
xor
stc
dec
cmpsb
iret
outsb
xor
xor
cmpsl
push
cmp
dec
cs
push
fidivl
sbb
sub
insb
pop
ror
pop
mov
jns
mov
pop
dec
test
clc
adc
jmp
fimuls
mov
mov
mov
mov
pop
mov
ret
aad
scas
pop
ja
jno,pn
jo
outsb
cs
decl
pop
pop
xor
xor
pop
into
les
aam
es
xor
fldt
jo
bound
je
sti
or
out
dec
push
int3
dec
adc
imul
dec
dec
in
cmpsl
sbb
push
rcpps
jne
add
insl
outsl
pop
inc
push
adc
sbb
fnstenv
out
shlb
jo
decl
push
repz
or
jbe
ss
add
inc
punpcklwd
popa
adc
adc
mov
and
mov
dec
dec
dec
jae
jb
fists
bound
dec
mov
xor
mov
jo
je
xorb
or
movsb
or
and
pushf
add
shlb
add
push
mov
dec
inc
push
enter
add
sub
xorb
sbb
insl
sub
xor
xchg
je
pop
dec
xchg
arpl
jne
jns
outsl
scas
outsb
add
jmp
clc
imul
cmp
mov
dec
mov
and
or
inc
arpl
pop
mov
jnp
jae
jno
insl
in
pop
push
sbb
inc
adc
test
push
pop
jp
sbb
aam
inc
sbb
loope
aaa
ss
sub
out
dec
adc
std
daa
aaa
mov
bound
add
cmp
hlt
xchg
shll
adc
cwtl
rol
fwait
jg
outsb
jae
or
jg
ret
gs
sbb
addl
cmp
arpl
jno
push
mov
pop
or
jg
pop
ss
imul
std
dec
xchg
dec
scas
inc
jae
in
int3
dec
cmp
lea
mov
std
decl
leave
push
fisubrs
and
test
dec
fsubr
repnz
xor
insl
mov
je
call
jns
subl
push
inc
inc
call
bound
aad
repnz
je
add
outsl
mov
dec
cmp
pop
jnp
inc
xchg
and
xchg
and
leave
loope
movsb
and
stc
add
out
pop
shlb
fdivr
or
dec
leave
push
inc
mov
movsb
sbb
imul
pop
pop
shll
xor
xor
outsl
out
cmp
pop
adc
inc
lcall
pop
mov
cwtl
mov
push
or
sbb
push
test
rclb
add
in
inc
inc
mov
xchg
jo
xor
xchg
add
je
push
or
leave
sbbl
jb
je
aaa
pusha
or
inc
ss
dec
dec
rorl
jo
pop
jbe
dec
xor
aas
or
lods
ja
inc
insl
jo
sbb
inc
xchg
and
jmp
push
push
shlb
popa
popa
sub
add
aam
dec
das
dec
jne
dec
or
jns
push
je
xchg
insl
into
or
add
sub
sub
leave
xchg
cltd
ljmp
je
or
sub
inc
add
and
lahf
lods
mov
outsl
inc
outsb
jae
jmp
fiadds
jb
and
shr
inc
fs
add
ss
push
push
add
das
push
outsl
inc
daa
pop
lods
shll
pop
mul
dec
fs
int3
int
jb
dec
push
popa
pop
sahf
lods
lds
outsl
jbe
sbb
sbb
xor
repz
andb
std
cmp
sbb
cmp
gs
in
xchg
mov
dec
xchg
push
je
jae
or
mov
pop
cmp
in
divb
jae
inc
push
dec
push
pop
mov
ja
stos
and
mov
push
outsl
pop
psrad
and
iret
jno
ficoms
movsb
sub
icebp
jp
pop
push
or
and
pop
rcrb
add
pop
pop
outsb
mov
sbb
insl
or
dec
jp
cwtl
daa
insb
pop
roll
push
xor
sti
rclb
and
cwtl
lock
sbb
sbb
adc
lahf
gs
loope
jb
arpl
inc
mov
pop
sub
and
push
pushf
movsb
inc
pop
sub
roll
mov
xchg
daa
push
scas
push
jmp
dec
xchg
test
mov
push
stos
ficoml
outsb
sub
dec
test
or
fcoms
nop
pop
jb
mov
xchg
fldenv
pop
mov
mov
inc
pop
push
imul
jo
push
pop
xor
pop
xchg
jl
int3
aam
or
and
leave
and
rorb
mov
or
ret
popa
insl
jb
xor
inc
into
cmp
pop
pop
in
sbb
xchg
mov
xchg
xchg
arpl
lods
adcl
cmp
cmp
push
jne
imul
sti
xor
bound
aad
push
sbb
arpl
addr16
imul
jmp
add
testl
or
mov
inc
addr16
jg
pop
and
rcll
movsb
lret
pop
decl
testb
jle
xor
dec
push
sti
neg
and
inc
pop
and
xchg
and
rcr
mov
push
insb
or
add
dec
push
cltd
adc
gs
imul
adc
sub
popa
pop
rolb
pusha
adcb
aaa
add
mov
jg
xor
lea
test
ret
arpl
stos
les
and
mov
inc
fimull
push
bound
adc
mov
adc
dec
jo
or
leave
pusha
xor
js
xchg
mull
out
and
mov
xor
push
mov
lods
fstp
arpl
sub
bound
mov
or
dec
dec
dec
lea
insb
and
subb
and
stos
stos
sbb
mov
inc
ljmp
add
arpl
data16
out
cmp
out
add
add
in
mov
or
std
cmpsb
pop
addb
decl
adc
pop
mov
cmp
add
js
ss
jecxz
add
xor
loope
inc
sub
pop
orl
jmp
jno
imul
shrl
jle
ja
mov
mov
fimull
nop
pushf
inc
fstl
add
xchg
xchg
inc
and
xchg
add
add
repnz
dec
ret
xor
add
adc
call
mov
mov
add
mov
outsl
fidivrs
js
fcom
and
enter
and
cmp
and
stos
dec
xchg
lret
jo
pop
mov
adc
fdivrs
or
inc
mov
inc
pusha
sub
add
stc
inc
inc
in
movsl
pop
add
push
lahf
push
aad
fldl
and
add
mov
cmpsl
mov
jo
sub
or
dec
repz
repnz
mov
inc
rorb
pop
or
mov
movsb
popa
pop
aam
lcall
pop
inc
dec
imul
pop
les
lcall
adc
jo
test
adc
or
push
cmp
lcall
iret
enter
pop
adc
mov
popa
pop
mov
cmpl
xor
mov
dec
lcall
movsl
pop
push
shll
imul
jbe
pop
adc
pop
or
cmp
cmpsl
adc
or
add
add
mov
gs
add
pop
sbb
iret
lods
cltd
ja
pop
and
add
mov
imul
and
sub
push
insb
sub
xchg
std
int
push
sub
sub
das
cmp
mov
xlat
cmpsb
jmp
je
testl
fidivl
xor
and
addl
add
es
adc
adc
xchg
arpl
mov
pop
jmp
add
dec
popa
popa
dec
push
jb
add
add
pop
inc
dec
adc
cmp
dec
ss
add
fs
cmp
add
mov
push
insb
inc
nop
mov
pop
jge
pop
xchg
inc
inc
jae
pop
stos
cmpsb
stc
or
push
mov
iret
cld
or
fwait
movsb
add
orb
dec
add
or
mov
insb
or
pop
mov
sub
jp
push
inc
notl
add
in
shll
mov
jo
pop
loopne
shrl
das
add
inc
roll
cmp
mov
pop
push
inc
inc
jb
rcr
push
imul
jae
ljmp
pop
jb
jmp
imul
xor
outsl
stos
js
and
mov
mov
inc
xlat
adc
cltd
add
daa
int3
add
ud0
call
in
sub
push
push
mov
pop
adc
mov
movl
inc
sbb
call
jge
mov
mov
push
imul
adc
jnp
jo
fsubr
jnp
push
insb
ljmp
cmp
push
push
fstpt
mov
pop
imul
add
mov
nop
cmpsb
add
xchg
addr16
fisubrs
or
ret
ret
mov
push
sti
fcmovnu
decb
add
in
pop
mov
or
xor
or
mov
or
mov
xchg
in
ret
mov
xlat
adcl
nop
add
or
mov
add
out
fcmovu
jge
mov
and
mov
and
sbb
ud0
xchg
in
out
mov
ret
mov
add
aam
xchg
gs
les
pusha
mov
jne
push
inc
sbbb
sti
mov
sti
adc
push
call
inc
fnclex
jge
mov
add
push
push
call
jmp
adc
mov
in
fimull
mov
push
pop
mov
or
mov
out
cmpw
or
in
xchg
shl
daa
imul
xor
sbb
push
or
aam
xchg
dec
fistps
stc
inc
outsb
adc
adc
bound
jmp
lret
mov
fcomi
push
in
push
lcall
mov
or
xchg
or
scas
cmpsl
add
cwtl
jmp
and
jp
push
push
in
push
xor
imul
xchg
lea
mov
adc
dec
cmpsb
fs
push
movsb
or
adc
add
inc
sbb
test
pop
inc
aam
jge
int
scas
or
call
lock
push
adc
neg
sbb
adc
or
push
mov
test
add
mov
pop
mov
xchg
outsl
fisttpl
mov
mov
dec
inc
jge
fldt
ss
adc
imul
les
push
ja
movsb
mov
inc
push
call
pop
inc
xor
data16
fstpt
fisubrs
push
push
adc
movsb
jmp
sahf
ds
lock
mov
in
push
aaa
adc
jecxz
out
jne
fdivrl
mov
shl
mov
fmuls
repz
sti
insl
loopne
or
xchg
xor
iret
out
pop
jo
aaa
mov
push
xchg
sbb
sbb
adc
and
lods
mov
imul
xchg
scas
sbb
mov
stc
aam
jecxz
sbb
inc
or
cmp
xchg
in
pop
pop
add
add
push
dec
lcall
enter
jne
out
push
mov
push
leave
sub
mov
lret
mov
loopne
enter
outsl
cmpsl
rcrl
mov
push
mov
jle
adc
cmp
push
sbb
in
fsubrs
cmp
sahf
lret
call
and
xor
rorl
loopne
fdivrl
xchg
lea
call
imul
adc
xchg
insb
mov
sub
int3
and
call
fcmovne
and
fcoms
mov
push
adc
in
popf
dec
push
push
lahf
nop
add
ret
mov
fwait
pop
jo
cmp
es
push
adc
inc
sub
jno
out
push
punpckhdq
dec
or
aaa
rcrb
mov
xor
das
inc
or
mov
adc
push
decl
xor
enter
and
dec
inc
dec
xchg
dec
mov
cmp
test
outsl
fdivrs
js
and
add
cmp
pop
fwait
enter
add
call
add
hlt
rol
lea
insl
scas
push
cltd
fsubs
add
sbb
push
loopne
iret
or
cltd
pop
sarl
add
push
or
jbe
pop
xchg
addw
push
shll
insl
pop
call
jae
or
movsb
call
popa
out
cmp
fmull
xor
loope
push
ret
imul
inc
or
sbbl
aad
add
dec
into
pop
inc
xchg
in
call
lock
or
decb
pop
mov
fistl
add
mov
xor
xor
add
push
call
add
xor
mov
dec
cmovne
jae
mov
push
rcll
xor
mov
add
bound
faddl
mov
mov
and
faddl
pushf
sub
mov
cmp
arpl
movl
add
pop
outsb
imulb
fadds
push
in
or
push
test
shll
test
push
jmp
mov
divb
test
lea
adc
and
scas
xchg
fldenv
pop
test
adc
push
push
lds
push
bound
xchg
push
and
movl
cmpsl
mov
sub
mov
clc
jle
sub
cwtl
sbbb
or
sub
nop
push
xchg
adcb
xor
cmp
daa
dec
aaa
push
xchg
or
and
mov
inc
outsb
pop
stc
data16
jo
nop
iret
lcall
mov
sub
popf
push
mov
mov
call
push
sbb
push
sti
mov
test
and
push
mov
cltd
fadd
mov
iret
inc
mov
inc
sub
rolb
dec
or
dec
pop
js
leave
fs
or
fs
movsb
fs
dec
mov
xchg
clc
outsl
out
out
imul
inc
mov
jmp
mov
xchg
mov
inc
mov
cli
sub
pop
mov
push
adc
jne
inc
in
andb
sbb
inc
and
iret
push
add
mov
pop
push
fcoml
nop
inc
sbb
enter
mov
ret
xor
fimull
popa
add
push
xlat
inc
cwtl
sbb
sbb
incl
adc
cmp
adc
leave
leave
sbbb
fidivrs
xor
push
xorl
cmp
push
jl
dec
call
dec
push
cltd
mov
pop
sbb
ret
bound
cmp
lahf
push
push
int3
loopne
push
and
pushf
add
int3
pop
in
sub
and
sbbb
test
adc
rdmsr
xor
leave
sub
jb
push
dec
sbbl
or
pop
sbb
insb
mov
pusha
adc
jl
dec
dec
dec
sbb
pop
sub
shlb
xchg
dec
adc
insl
inc
xchg
pushf
pop
dec
add
pushf
push
flds
adc
inc
xor
and
rorb
or
and
movsb
push
sbb
push
pop
push
mov
addr16
cmpsl
jmp
jo
js
movsb
jb
sbb
enter
push
pushf
xor
and
add
mov
dec
shlb
and
into
rclb
cmp
push
iret
out
loop
add
or
aad
or
adc
ror
stc
adc
imul
rcll
popa
mov
adc
pushf
or
or
fadds
aam
adc
jae
cmpb
inc
dec
mov
mov
shrb
lods
shrb
mov
push
dec
sbb
test
je
push
or
movsl
insb
pop
imul
les
mov
push
jmp
cwtl
or
push
mov
ret
mov
ljmp
sbb
xor
add
dec
cmpsl
call
cmp
and
leave
add
add
and
pop
push
repnz
cld
dec
in
push
pop
jp
adc
pop
repnz
sti
les
add
pushf
ret
insb
adc
or
rorl
es
lods
xor
popa
jo
loope
jl
pop
mov
lcall
je
repnz
mov
ret
jecxz
push
mov
rorl
call
push
cmp
notb
mov
mov
add
int3
enter
lret
mov
mov
nop
mov
sbb
push
pop
or
int3
stc
sbb
lods
sub
push
aam
inc
sub
mov
jo
dec
les
int3
push
sub
fists
imul
lods
push
mov
mov
call
pop
push
stos
out
push
cmp
jle
push
aas
xlat
cmp
pop
mov
cltd
adc
cmp
int3
call
mov
cmp
pop
mov
roll
movsb
insl
cmp
xor
test
rorl
or
test
icebp
add
sbb
mov
arpl
mov
fs
cmp
ja
push
lods
mov
cmp
mov
push
mov
int3
jle
inc
add
pop
pop
pushf
add
sbb
and
lods
mov
xchg
add
or
push
pop
or
xchg
mov
mov
cmp
inc
mov
test
push
in
mov
push
xchg
lods
in
mov
lock
dec
fisttps
movl
ret
adc
sub
and
fs
adc
rcrb
jo
or
fisttpl
add
les
rcrb
lret
mov
add
shlb
je
decb
adc
xchg
mov
lods
sbb
sbb
aam
repnz
cmp
push
ds
xor
cmp
mov
rclb
fadds
jge
les
nop
xor
jl
fwait
sub
test
mov
mov
lods
dec
sbb
popa
sbb
and
jecxz
sub
ficomps
ret
or
stc
xchg
adc
jne
ficompl
lods
leave
push
push
lds
jl
insb
push
xchg
stos
aam
and
mov
pop
ror
hlt
rcr
pop
lock
sub
pop
mov
loope
repnz
adc
je
movsb
sub
sbbl
and
mov
enter
adc
mov
mov
testl
jmp
idivl
adc
ret
shlb
daa
jb
or
bound
or
adc
test
sub
add
cwtl
shrl
add
orl
mov
fcmovnbe
add
in
je
xor
dec
adc
add
in
push
shlb
xor
add
inc
lret
pop
fwait
pop
push
mov
add
add
ret
dec
mov
fs
arpl
mov
hlt
sbb
insb
nop
int3
mov
lret
cwtl
mov
das
add
push
out
pop
xchg
inc
adc
add
lcall
mov
rorb
sub
mov
and
dec
dec
xorb
dec
or
dec
test
in
insl
test
in
push
insl
rorl
in
push
rcll
in
or
jle
or
mov
mov
mov
enter
cmp
push
ret
pop
cwtl
mov
mov
push
or
mov
jne
inc
xor
sbb
jb
pop
cld
and
sub
aam
insl
roll
pop
decl
cmp
ret
enter
xor
sub
mov
xchg
call
mov
fsubl
xor
and
push
adc
gs
dec
and
pusha
stos
out
xchg
cmp
add
push
adc
aaa
push
inc
cld
push
mov
inc
mov
inc
sub
xchg
jo
jg
pop
inc
adc
shll
nop
jae
subl
fs
adc
aam
push
lea
mov
dec
cmp
rcll
pop
cmp
pop
and
es
xlat
xchg
xchg
int3
xor
add
stos
out
push
adc
shrb
lods
andnps
shrl
add
aam
daa
xchg
add
inc
xor
add
pop
push
xlat
xor
mov
push
test
cmp
add
adc
leave
shlb
add
mov
sbb
add
pop
dec
and
aam
sub
icebp
mov
mov
shll
add
pusha
adc
add
sbb
cmp
push
cs
add
in
push
xlat
sub
add
adc
lods
push
or
or
mov
add
pop
in
xchg
test
push
cmp
ss
aam
add
mov
mov
in
repnz
enter
adc
add
push
cmp
repz
pop
add
mov
aaa
ficompl
outsb
cltd
jno
sbb
popf
ficoms
push
dec
test
cmp
xchg
dec
ret
mov
hlt
leave
push
jo
xchg
clc
es
les
xchg
pop
sbb
ret
orl
dec
xchg
js
cmpb
dec
loop
adcb
and
outsl
jmp
mov
into
repnz
nop
jg
jne
mov
add
fisubs
lret
bound
and
movb
testl
in
and
push
inc
xor
mov
cmp
ss
inc
dec
push
adc
push
cld
sub
cwtl
es
cmp
xor
cmp
and
mov
sub
cmp
cmp
movsl
imul
sbb
lret
mov
mov
inc
cwtl
and
bound
or
adc
and
repnz
insb
push
pop
and
clc
jbe
push
push
add
cwtl
or
mov
pusha
stos
clc
dec
mov
and
punpckldq
or
add
cvtps2pi
cmp
push
dec
or
mov
pop
icebp
or
cmp
cmp
aas
sub
sbb
cmp
xor
and
and
fisubs
pop
test
imul
les
xchg
mov
filds
adc
lahf
push
pushf
add
lret
cwtl
xor
lea
cs
iret
dec
xchg
xchg
or
enter
inc
mov
cmpl
pushf
mov
mov
xor
adc
cmp
push
fs
pusha
stos
push
mov
int3
push
neg
sbb
pushf
fdivl
ljmp
push
testb
pushf
push
test
push
or
fcoml
ss
sub
test
push
add
mov
push
lods
leave
enter
enter
jne
push
sahf
addb
dec
mov
and
pop
push
js
scas
lds
push
push
inc
pop
mov
or
mov
add
lods
dec
bts
add
aad
pop
test
xor
andl
sbb
dec
or
enter
adc
les
xor
int3
les
loopne
cmp
adc
ja
jl
ss
outsl
push
fsubl
aam
mov
in
sahf
inc
adc
fadds
lods
xchg
addr16
xor
jno
cmpsl
and
cmp
ret
cmp
cmpsl
mov
mov
cwtl
and
push
call
add
inc
stc
dec
jp
push
adc
or
outsl
or
leave
enter
xchg
mov
inc
lahf
loopne
sbb
inc
loopne
cmp
les
repnz
pop
shl
mov
add
xor
and
fs
xor
lock
loopne
fs
fs
inc
and
push
cwtl
test
std
repz
scas
mov
add
cwtl
xor
sub
enter
loopne
add
fwait
dec
rorb
addr16
inc
test
dec
adc
adc
push
bnd
lea
loopne
xchg
or
stc
ss
adc
xchg
popa
mov
insl
scas
data16
pusha
sub
and
mov
adc
mov
insl
and
fisubrl
sub
sub
in
nop
out
xchg
sbbb
inc
dec
jp
sub
mov
loopne
fadds
int3
data16
jns
add
pop
mov
and
in
fildl
out
fstpl
cmp
xor
sbb
xor
pop
cmp
fnstsw
test
jno
push
movsb
mov
mov
push
stos
nop
lea
adc
aam
mov
insb
stc
sets
ss
xor
lds
adc
adc
orb
dec
push
jp
cmp
and
sbb
jnp
add
nop
pop
xor
fs
push
call
fldcw
dec
rorb
jb,pn
cmpsl
xchg
push
xchg
adc
jbe
insb
rolb
dec
mov
jl
loop
sbbb
or
fdivs
ret
push
nop
shl
sbb
inc
sub
into
into
add
mov
in
insb
les
lea
cltd
pusha
or
repz
push
push
xchg
test
add
rolb
rorb
inc
sbb
add
arpl
pause
xchg
jle
incl
inc
cltd
es
sbbb
or
mov
add
lret
fldenv
pop
rol
int
mov
add
movb
push
mov
ds
add
mov
mov
add
or
pop
sub
lds
jbe
hlt
cmp
sti
jmp
jbe
test
inc
add
inc
mov
outsl
mov
pop
adc
add
les
or
bound
adc
lock
pop
enter
cmpsb
fs
inc
or
inc
and
fldenv
jnp
rcrl
pop
adc
and
push
imul
push
pop
cmp
dec
xchg
xor
inc
jecxz
push
inc
xchg
xor
push
adc
jb
js
xchg
add
or
mov
ljmp
mov
push
arpl
xor
repnz
push
mov
mov
add
push
push
rcrl
js
stos
popa
sub
mov
repnz
shlb
nop
andb
pusha
xor
and
test
ss
add
or
iret
mov
lock
push
push
icebp
adc
xor
in
and
mov
in
mov
mov
mov
add
adc
mov
or
int3
notl
mov
pop
ljmp
dec
aam
adc
js
sbb
and
sbb
xlat
cmp
call
sbb
roll
pop
sub
cmp
pusha
addr16
in
insb
or
and
mov
cwtl
xor
sbb
cwtl
fsts
incb
addb
insb
sahf
sbbl
shll
sbb
lea
inc
clc
add
movl
lods
adc
sub
mov
push
xor
repnz
repnz
test
push
or
push
mov
jne
cld
insb
notl
mov
sbb
jle
arpl
or
inc
in
loop
lret
sbb
jb
add
xor
mov
fisttpl
pop
jne
add
jmp
sbb
aam
dec
adc
push
aad
lahf
out
sub
push
sub
cmp
adc
in
push
push
movsb
aas
pop
mov
notl
sbb
push
xor
iret
outsb
or
shll
call
sub
mov
inc
inc
insl
adc
and
xchg
dec
push
aam
cmp
decb
pop
test
mov
xor
hlt
pop
jo
jge
or
shll
cmp
ret
push
mov
push
cmp
and
ret
call
adc
jnp
adc
cmpl
add
aam
jecxz
push
test
shlb
or
mov
add
jmp
or
mov
mov
out
inc
movsb
mov
nop
dec
test
cmp
mov
dec
iret
dec
lods
xchg
xchg
add
jl
push
xor
test
test
jge
cs
insb
inc
pop
and
inc
scas
testl
push
enter
lods
mov
adc
sub
shrb
mov
int3
push
enter
mov
rcrb
cs
imul
push
and
adcl
pop
and
push
xor
es
jl
push
sahf
or
enter
shll
aam
jg
or
or
mov
sub
sub
pusha
or
xchg
add
cmp
in
mov
push
dec
cmc
or
mov
repnz
sti
xchg
pop
incb
add
stc
je
leave
js
pop
add
dec
jo
xor
dec
inc
dec
movsb
popa
das
rcrb
cmp
test
cmp
shlb
nop
dec
push
in
jo
or
mov
mov
lock
aam
test
sub
mov
aam
insb
mov
or
push
push
add
fs
mov
fs
cs
push
pusha
pusha
xchg
dec
push
cltd
pusha
pusha
adc
fs
test
dec
mov
fs
test
inc
insb
push
or
add
adc
add
and
aas
cmpb
adc
jo
dec
mov
jne
jne
loopne
mov
rclb
or
leave
inc
xchg
mov
adc
andb
outsl
cwtl
xchg
inc
es
or
mov
inc
pop
aas
call
lods
xor
adc
js
add
push
xor
adc
push
xor
xor
add
mov
xchg
mov
into
pop
adc
or
sub
push
ficompl
outsb
mov
lret
neg
rolb
mov
mov
lret
test
mov
adc
sub
stos
xor
sbb
flds
sbb
sbb
cmp
xor
sbb
sbb
sub
and
dec
mov
hlt
sbb
sbb
sub
or
gs
imul
pop
gs
data16
in
fwait
or
adc
daa
inc
add
nop
add
add
adc
dec
movq
or
flds
lds
outsl
inc
sbb
push
jnp
or
sbb
and
push
loopne
push
push
enter
rclb
insb
xor
popa
or
sbb
xor
popf
xor
nopl
push
add
mov
mov
dec
mov
cmp
xchg
push
cmpsb
or
int
scas
pusha
lea
mov
scas
xchg
dec
or
cmp
jb
ss
adc
dec
aas
fprem
sub
pop
xchg
test
fadds
pushf
rcrb
cmp
pop
lret
mov
rclb
repnz
pusha
das
sbb
faddl
js
and
inc
sub
jb
xchg
pusha
in
add
sub
out
dec
jmp
mov
adc
sbb
leave
subl
jae
xchg
push
xor
mov
xchg
cmp
adc
inc
lret
popf
xchg
dec
dec
adcl
push
loope
insb
or
xor
insb
jecxz
pop
insb
add
and
inc
pop
xor
leave
popl
mov
push
repnz
in
fsub
jnp
cmp
add
or
add
cmp
ds
nop
push
adc
push
nop
mov
add
jnp
hlt
push
pop
test
fdivs
in
jmp
pop
sbb
add
sbb
in
dec
sub
rorb
xor
pop
xchg
pop
loopne
bound
jno
adc
mov
call
es
stc
pop
nop
xchg
or
lea
pop
sahf
xchg
push
xchg
arpl
and
dec
sub
mov
xchg
ljmp
push
shrb
stc
inc
dec
out
add
push
pop
sbb
in
pop
pop
daa
add
nop
mov
pop
and
nop
adc
sub
shr
mov
mov
enter
call
dec
or
push
fcomps
lret
fdivl
pusha
adc
or
icebp
ror
pop
pushf
popf
xchg
bound
rcll
out
in
nop
int
mov
shrb
mov
pop
fidivrl
add
sub
add
sub
popf
call
fsubrl
adc
lds
dec
cmpsl
rcll
popf
int3
and
mov
popa
je
lea
pusha
mov
sbb
mov
ljmp
call
enter
jl
cmp
add
mov
imul
mov
adc
sub
xchg
in
in
pop
cmp
lock
xchg
jo
adc
sub
dec
xchg
pop
fsubrs
and
xor
xor
mov
pop
adc
stos
push
and
inc
cmpsb
add
rcrb
pop
jne
push
aam
test
call
mov
push
mov
mov
push
mov
stos
or
mov
sbb
pusha
or
push
sbb
insb
or
mov
cmp
jmp
mov
push
addr16
lods
or
xchg
lods
addb
imul
test
sbb
or
idivl
call
jns
int
xchg
mov
xor
sbb
enter
enter
adc
shlb
and
push
xorb
cmp
mov
push
insb
and
inc
and
int
inc
aam
push
xchg
add
sbb
sub
mov
inc
subl
pushf
lock
bound
mov
add
mov
shll
add
jae
mov
dec
mov
imul
and
fcoms
jmp
pop
cmp
inc
add
dec
push
push
xchg
subb
aam
dec
rorb
or
pop
insb
and
pop
dec
flds
mov
adc
adc
icebp
icebp
decb
cwtl
dec
sub
sub
jbe
rorl
lea
push
enter
je
fisubl
lods
out
push
push
pop
xor
add
or
mov
mov
les
lods
into
dec
pusha
js
add
mov
orl
sub
push
or
sbb
push
loope
nop
lea
jle
adc
sbb
inc
out
push
mov
sub
notb
pop
test
stc
inc
mov
inc
ljmp
in
stos
cli
add
pop
jle
js
inc
push
or
insb
sub
dec
imul
in
in
stc
stc
mov
push
mov
push
dec
popaw
cmp
fmuls
xchg
push
dec
rorl
daa
pop
daa
or
or
repz
mov
jb
adc
andb
movsb
xchg
insb
push
test
lods
inc
mov
mov
jmp
jle
dec
sub
sbb
scas
loope
adc
push
fwait
les
mov
xor
mov
or
fnstcw
es
pop
mov
mov
add
add
and
push
ja
cwtl
add
loope
mov
test
xor
or
movsb
mov
test
mov
inc
mov
xchg
or
loop
xchg
and
add
mov
inc
imul
aad
add
xor
lds
or
gs
ret
rorb
sbb
test
push
adc
in
mov
in
int3
ror
inc
loop,pn
js
insb
push
push
cwtl
or
push
xor
jne
jp
sub
jns
pop
lea
push
mov
sbb
inc
cmpsb
push
add
mov
and
inc
dec
and
dec
push
adc
dec
add
in
add
adcl
enter
xor
sbb
ss
mov
pop
fs
add
cltd
test
dec
or
nop
std
into
stos
xchg
or
push
test
dec
stc
add
fiaddl
aam
cs
flds
dec
cmp
mov
adc
fsubrs
pop
jb
add
pop
daa
inc
dec
cmp
dec
inc
test
cmpb
add
add
in
add
stos
inc
jno
test
lea
lret
loop
mov
xchg
add
test
sbb
mov
loop
cltd
sub
int
insb
push
adc
sbb
mov
and
jne
mulb
je
xchg
mov
xor
mov
push
push
sub
les
test
push
xor
aam
mov
pop
add
add
adc
xchg
gs
shrb
addb
or
adc
add
int3
mov
call
and
call
push
rcll
popa
xor
push
adc
ret
call
negb
out
add
add
adc
je
sahf
add
add
addl
and
add
push
add
push
outsl
lret
or
int3
or
arpl
pusha
pop
popa
fs
data16
popa
outsb
pop
xor
cmpb
xchg
or
xor
adc
add
adc
add
mov
jnp
imul
push
xchg
or
adc
or
insl
xor
sti
mov
fs
add
fistps
inc
push
inc
dec
push
pop
push
dec
dec
dec
xor
fldt
mov
add
ja
or
mov
and
or
sbb
ss
imul
nop
inc
rcr
push
push
pop
test
leave
fs
je
dec
or
lcall
mov
fsts
imul
int
adc
adc
sahf
push
lcall
jno
jbe
or
jne
arpl
sub
xchg
leave
sahf
data16
enter
popa
orl
mov
jno
mov
add
push
jne
adc
mov
arpl
inc
insl
mov
aad
je
rcr
mov
push
jb
and
nop
sub
xchg
push
shlb
movsl
int
in
adc
push
push
lock
adc
inc
scas
add
add
pop
js
jo
push
test
xchg
mov
add
add
mov
lret
mov
rorb
popa
popa
sub
out
xor
inc
add
push
jo
xchg
xor
dec
xchg
xor
pop
in
jle
or
ror
mov
and
jne
ds
adc
lcall
and
mov
add
mov
outsl
inc
xchg
xor
in
sub
pop
push
xchg
es
lds
lret
mov
or
push
add
add
dec
inc
std
add
scas
lods
pop
dec
js
stos
pop
test
or
push
mov
inc
adc
sbb
adc
dec
add
ljmp
pop
lods
mov
leave
out
push
adc
push
ror
pop
push
add
adc
insb
or
pop
aaa
push
cmp
cwtl
add
arpl
hlt
or
je
pop
in
test
nop
rcrb
popf
loope
cs
add
jg
insb
add
shrb
jae
arpl
outsl
dec
fmulp
daa
lock
sbb
add
fistps
or
nop
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
