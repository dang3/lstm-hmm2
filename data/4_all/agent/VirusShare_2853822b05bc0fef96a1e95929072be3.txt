add
cld
decl
test
lahf
add
movl
push
and
mov
cmpl
and
idiv
out
lea
mov
push
call
inc
add
cmp
jb
pop
movl
push
push
xor
in
mov
call
mov
push
es
add
or
daa
iret
idivl
push
fwait
cwtl
mov
cmp
sti
xchg
dec
add
lods
mov
push
popf
cmpsl
loopne
aas
mov
pop
mov
dec
dec
pop
mov
js
push
out
mov
lret
in
xor
pop
cmp
add
lcall
cltd
ret
push
jle
jae
push
xor
mov
sbb
jle
pop
xchg
call
mov
add
in
push
faddl
adc
cmp
out
adc
add
cmp
std
fisttpll
xor
dec
sub
pop
inc
push
inc
xchg
sbb
jb
sub
dec
cld
jmp
gs
push
mov
xor
cmp
je
push
lea
mov
or
push
pop
or
divb
mov
cmp
je
cmp
je
adc
shrb
shll
mov
mov
imul
adc
cmp
jbe
mov
add
mov
jae
movsl
sbb
lea
cmp
and
pop
sbb
mov
add
push
mov
in
lods
rcrb
out
ljmp
clc
jge
lea
add
out
add
shl
add
sub
mov
pusha
add
add
mov
bound
je
push
add
pop
loope
jg
pop
ret
mov
jnp
movl
lock
jbe
faddl
xor
test
je
movzbl
decb
clc
aas
jle
push
jge
cmp
ret
rorb
movl
sbb
jl
mov
test
je
mov
pushl
dec
or
jno
incb
mov
sub
mov
jno
mov
in
or
aam
decl
xchg
add
pusha
inc
decl
insl
call
cmp
je
mov
and
inc
sbb
push
iret
and
sti
sbb
xchg
jno
inc
test
jne
cmpl
push
ja
lret
xor
outsl
mov
cld
add
pop
push
ljmp
cwtl
inc
push
push
orl
jmp
fsubr
fdiv
lock
pop
pusha
push
jb
je
add
inc
ret
nop
mov
inc
mov
pop
ret
imulb
ret
int
jae
in
in
xor
xor
shrb
mov
adc
and
inc
pop
movsb
loopne
paddsw
inc
jmp
in
es
loop
into
repz
push
inc
je
ds
xchg
adc
sbb
sub
insb
and
sarb
out
das
js
push
rclb
lea
push
sbb
push
push
bound
or
add
int
xlat
sub
lods
mulb
inc
in
sbb
mov
pop
add
pop
fsubl
adc
push
xorl
setge
std
jp
or
xor
add
lea
inc
cmp
adc
push
ss
xchg
sbb
jbe
cmpb
fstp
test
subb
adc
mov
lahf
aaa
mov
sbb
cmp
jg
insl
pop
xor
or
into
jg
or
mov
cwtl
cmpsb
xchg
out
sub
lea
mov
outsl
adc
mov
cmp
jne
mov
imul
xor
jp
or
clc
xor
lahf
into
ficomps
jl
xor
idivl
pushf
inc
or
sbb
jo
adc
sub
add
push
in
das
repnz
mov
pop
cld
mov
les
and
lods
sbb
fisttpl
adc
punpckhwd
scas
lret
sub
pop
pop
add
pusha
sti
outsl
lcall
pop
js
inc
jl
sub
mov
xchg
test
adc
orb
sbb
in
fidivrs
xor
shll
cmp
dec
dec
insl
imull
push
push
mov
mov
mov
outsb
popl
fs
add
jl
sahf
decl
jo
push
arpl
fmull
inc
pusha
or
enter
scas
popa
leave
or
sub
stos
in
lock
jl
test
test
sub
lahf
loope
cmp
mov
cli
js
and
or
add
push
sub
rolb
jg
popf
push
add
mov
or
or
push
int3
in
scas
mov
sbb
mov
cmp
in
fsubrl
mov
fsubl
and
les
push
sahf
jne
push
mov
sub
loopne
punpckhbw
and
xor
or
adc
inc
or
pusha
cmp
loopne
loopne
lea
into
cmpsl
xchg
dec
push
stos
push
mov
ficoms
xor
inc
rcll
mov
mov
mov
inc
outsb
je
cmp
mov
jns
dec
mov
jmp
mov
sub
mov
add
cmpsb
imul
cmpsb
imul
xor
jne
cmpb
and
sbb
and
adc
xchg
adc
jp
sarb
adc
or
sbb
das
mov
mov
xchg
or
addl
in
sub
add
or
outsl
mov
add
push
mov
cmp
sub
cmp
or
iret
inc
inc
dec
cmp
cmp
sbb
and
sub
jmp
jle
xor
sbb
push
insl
pop
add
sbb
add
sbb
mov
dec
sub
cmp
push
popa
xchg
pop
ret
addb
jge
loopne
clc
fidivrl
ret
cmp
and
repz
sbb
jle
ret
push
add
xor
ljmp
dec
outsl
mov
sahf
push
int3
push
or
or
inc
adc
shlb
jno
adc
and
incl
mov
cmp
je
andb
sarl
jne
or
test
xor
ljmp
jl
pop
outsb
outsb
adc
push
mov
sbb
mov
into
push
jmp
pop
clc
pushl
adc
push
sbb
sbb
dec
sbb
ret
push
adc
not
fdivl
clc
inc
add
rol
test
fisubrl
push
sti
adc
push
jb
incl
lahf
pop
push
or
in
mov
jmp
cmpl
jg
test
loop
jbe
mov
push
lea
push
push
push
fisttps
fwait
push
xor
decl
inc
jmp
lahf
jle
jg
inc
cmp
jae
mov
mov
jg
mul
seto
neg
or
push
add
jmp
icebp
in
and
mov
push
popf
push
or
je
jo
or
lods
cli
insb
or
inc
push
jns
fsubs
divl
cmp
nop
inc
push
push
inc
mov
sahf
fistps
pushf
incl
mov
fbstp
pop
test
mov
mov
mov
in
jge
mov
mov
mov
cwtl
loopne
xchg
lret
ja
dec
in
or
lock
cmp
sti
jge
clc
or
mull
add
gs
stos
add
or
lret
and
and
sub
xor
pop
stc
cmp
dec
sub
insb
addr16
mov
js
stc
inc
jl
repz
mov
mov
in
int
cli
lea
jb
cs
and
cli
cli
out
cli
mov
add
sbb
out
cmp
mov
es
testb
in
lock
int3
jnp
cli
or
cs
dec
sbb
or
push
es
mull
pop
loopne
loop
adc
mov
pusha
je
mov
or
add
jns
cld
push
pop
mov
std
sbb
jl
mov
mov
sub
gs
dec
fsub
push
lods
add
add
in
adc
test
cmp
inc
or
std
out
mov
and
mov
push
lods
jle
pop
xor
mov
xchg
or
insb
sub
mov
mov
clc
outsb
inc
inc
mov
pop
call
cmp
in
enter
sbb
ror
ds
das
clc
sbb
out
scas
dec
lock
bound
js
add
add
movsb
push
stos
push
push
push
inc
inc
ficomps
xchg
and
xor
shl
add
inc
cs
sbbb
and
lods
mov
or
insb
cld
mov
jge
add
or
pop
sub
sub
std
xor
es
xor
mov
enter
mov
sarb
test
and
jb
sbb
dec
sub
add
cmpsb
test
xorb
mov
inc
mov
cmpsl
fsub
sbb
iret
xchg
xchg
cmp
add
and
pop
adc
nop
lret
lret
sets
test
enter
inc
sbb
add
inc
mov
lahf
pop
sub
or
and
and
xchg
cld
sbb
or
fs
add
fs
lock
cltd
lea
or
negb
sarb
call
sbb
and
cmpl
mov
dec
push
outsl
notl
or
pusha
push
jno
fs
js
addb
xor
inc
push
outsl
mov
mov
mov
push
mov
nop
adc
pop
fdivrs
mov
xchg
fsub
or
inc
shlb
xchg
out
outsb
or
dec
push
call
or
adc
inc
push
popf
xchg
pop
in
or
fs
lock
add
fidivrs
push
sub
and
fildll
pop
or
and
and
mov
in
sbb
sbb
cmp
inc
and
addr16
aaa
dec
or
push
or
or
inc
inc
push
mov
and
enter
sub
aam
mov
xchg
iret
lret
xchg
cld
add
add
push
pop
sub
sub
xor
enter
pop
pop
pop
pusha
fs
lret
lret
dec
mov
xchg
mov
sbb
sbb
mov
call
sahf
mov
or
and
push
sbb
and
orl
push
inc
inc
push
push
cmpsl
cmp
jo
movsb
or
jl
test
das
addr16
or
sbb
or
cmp
fwait
jge
cmp
popa
push
sbb
xchg
xor
inc
xchg
mov
test
lods
mov
pop
push
inc
mov
es
xchg
sub
and
in
sbb
iret
lret
lret
xchg
or
adc
adc
or
fs
lret
cmp
xor
gs
ret
lds
movsb
mov
pop
je
rcrl
pushf
mov
or
enter
inc
push
mov
cld
add
pop
ds
add
mov
sub
mov
xor
fstps
inc
inc
push
pop
pusha
fs
and
sbbl
xchg
inc
mov
sub
jmp
xchg
or
les
and
xchg
or
mov
or
xor
in
or
inc
inc
or
xor
gs
push
push
pushl
xor
enter
test
sbb
mov
xor
jb
sbb
lods
mov
push
jns
pop
sahf
or
adc
adc
push
inc
push
sbb
cmp
inc
and
push
sub
je
xor
push
repnz
xor
push
push
push
cmp
sbb
in
push
push
push
mov
pop
cmp
push
clts
sbb
mov
int3
aaa
seta
jae
or
stc
jno
test
mov
sahf
inc
iret
inc
inc
push
nopl
mov
xchg
inc
push
mov
mov
inc
les
and
lock
repz
inc
mov
xor
enter
adc
sbb
repnz
int3
inc
adc
adc
sub
sbb
ds
inc
jl
mov
xor
pop
sbb
sbb
mov
fcomp
loopne
pop
sahf
mov
adc
adc
push
mov
cmp
cmp
push
inc
inc
inc
inc
xor
and
subl
and
xchg
inc
cs
pushf
mov
movsb
mov
fs
mov
mov
adc
mov
inc
lret
out
enter
add
mov
leave
sub
sub
xor
fs
lret
fs
pop
pusha
push
cltd
arpl
add
jnp
adc
inc
adc
mov
inc
adc
and
adcl
adc
xchg
xchg
inc
inc
adc
adc
and
lahf
adc
xchg
iret
enter
inc
adc
fs
adc
sub
enter
jl
test
lret
repz
lods
mov
enter
cs
fdivrl
xor
in
push
mov
pop
sahf
or
adc
adc
sbb
les
pop
or
in
xchg
xor
movsb
adc
adc
pop
in
adc
dec
inc
insb
enter
jo
jne
cwtl
mov
xor
pushf
mov
sbb
in
int3
rcl
mov
push
mov
cld
add
add
push
inc
sub
mov
xchg
inc
pop
push
inc
inc
push
pop
pusha
fs
sub
and
xchg
xchg
inc
sub
dec
mov
xchg
rol
dec
call
in
lock
adc
out
in
sbb
sbb
and
and
fs
lret
dec
add
dec
push
mov
xor
add
mov
push
adc
adc
push
fstps
pushf
adc
and
lahf
xchg
push
push
or
push
xchg
sub
mov
mov
mov
inc
fmul
enter
loopne
in
leave
xchg
mov
pop
or
adc
fs
xchg
out
pop
jne
cmp
pop
gs
inc
pusha
mov
gs
jo
dec
xor
xor
cwtl
pushf
mov
movsb
ss
jb
sbb
jge
clc
cld
sbb
sbb
or
sbb
mov
xor
xchg
pusha
fs
push
sbb
mov
push
inc
xchg
int
out
and
push
push
call
xor
xchg
xchg
dec
js
pop
rcrl
xor
in
xor
cwtl
cmpsl
mov
movsb
xor
mov
es
fcomi
lahf
cmp
push
and
sbb
or
fs
mov
xor
dec
gs
mov
movsb
xor
addb
lods
mov
mov
in
and
dec
xchg
sbb
ret
es
enter
inc
cmp
sub
and
push
xchg
inc
insb
jo
cmp
enter
cwtl
pushf
mov
movsb
and
xchg
lret
aam
clc
in
mov
sub
jle
enter
in
sbb
hlt
inc
sub
or
xor
push
push
xchg
insb
push
sbb
xor
fs
lret
out
pop
pop
pusha
xor
dec
gs
xor
sbb
sbb
or
call
mov
sbb
dec
in
jb
sbb
sbb
sbb
ss
lret
sbb
sbb
push
sbb
jae
pushf
sbb
sbb
push
ss
lret
leave
sbb
sbb
push
adc
sbb
sbb
lret
in
jb
cmp
sbb
fwait
sbb
inc
mov
push
inc
inc
push
adc
or
jns
or
push
mov
sbb
jb
sbb
sbb
test
rcl
in
das
inc
push
sbb
cld
add
add
cs
mov
sub
sub
xor
jno
pop
pop
sub
and
adc
mov
nop
xchg
enter
mov
lret
lret
sbb
in
stc
jno
fs
or
inc
jnp
jl
inc
push
pop
pop
pop
pop
mull
and
pop
xchg
inc
inc
and
pop
pop
and
lahf
xchg
pop
pop
sub
pop
xchg
iret
enter
pop
pop
dec
xchg
lods
sbbb
js
sbb
mov
pop
pop
loope
fs
in
dec
inc
or
inc
or
adc
fs
lret
out
and
sbb
cmp
gs
inc
jae
push
insb
jo
test
in
pushf
mov
push
sbb
lahf
xchg
xchg
and
and
lahf
xchg
and
inc
cld
add
add
mov
das
sub
sub
xor
inc
cs
cmp
mov
adc
sbb
and
fwait
ss
mov
and
sbb
mov
and
and
xchg
and
add
and
and
add
jl
jg,pn
sbb
clc
cmpsb
xor
lahf
xchg
xchg
inc
and
and
enter
and
and
iret
and
and
or
fs
inc
fcomp
das
sub
and
in
and
and
and
and
mov
xchg
inc
inc
cmp
sbb
inc
in
movsl
and
xor
sbb
and
ljmp
and
and
sbb
and
and
sbbl
inc
and
and
das
aas
and
loopne
and
popf
push
cltd
int
xor
out
cs
xchg
cs
insb
jns
inc
test
adc
push
sbb
sbb
lds
mov
aad
subl
test
or
sub
mov
mov
inc
cmp
mov
shlb
cmp
adc
sbb
jl
outsl
jnp
test
enter
lods
mov
fbld
xor
loopne
adc
cmp
in
repnz
adc
sbb
gs
mov
and
adcb
pop
jle
shll
and
xchg
xor
sub
in
sbb
mov
mov
xchg
sbb
popa
mov
jle
xor
lret
out
mov
jae
sub
insb
mov
enter
outsl
xor
jge
and
fbstp
ss
repnz
sub
cmp
add
jo
cld
sub
pop
cmp
cltd
popa
xchg
insb
jno
sub
jb
pushf
aaa
mov
or
sar
add
test
fwait
aad
pop
ficomps
cmp
sub
xor
inc
push
sbb
pusha
insb
xlat
sub
sbbl
jo
xchg
xchg
inc
cs
enter
call
leave
lret
lcall
cmp
and
push
xor
enter
js
sbbb
in
add
test
mov
or
pop
inc
fiadds
fcomp
loopne
inc
push
mov
ds
and
cmp
inc
and
push
cltd
int
mov
push
jo
xor
dec
lds
fs
in
cltd
aaa
int3
shlb
fsubs
lcall
in
enter
aaa
sub
xor
nop
xchg
or
pusha
xor
enter
mov
call
or
push
mov
and
jnp
fwait
inc
inc
fs
lret
iret
inc
xchg
mov
inc
inc
xor
enter
pop
inc
inc
fs
in
inc
dec
xchg
outsl
lods
fmuls
mov
fsubs
gs
push
inc
or
fs
repz
cmp
cmp
adc
inc
dec
and
test
mov
insb
nop
lret
in
hlt
cwtl
pushf
aaa
mov
dec
sub
int3
rcrb
in
xchg
sub
cld
add
cmp
stc
pop
sub
inc
sub
xor
pop
pop
pusha
inc
push
mov
mov
dec
push
mov
gs
call
jb
add
lcall
mov
inc
or
ss
inc
inc
inc
adc
jl
mov
adc
inc
mov
push
fsubs
inc
loopne
or
inc
imul
add
inc
sbb
add
pop
les
outsl
and
enter
insb
jo
mov
pop
cwtl
pushf
mov
rolb
enter
xor
dec
insb
clc
cld
add
jns
repnz
sub
inc
xor
sbb
mov
add
pusha
mov
pop
adc
mov
mov
and
call
das
sub
sbb
inc
and
xchg
add
enter
push
cmp
js
xor
lret
aaa
inc
test
sbb
mov
fcomp
mov
rcll
mov
popa
sbb
inc
jp
inc
jbe
inc
addr16
fmuls
inc
cmp
mov
xchg
adc
sbb
mov
jo
or
or
push
add
rcrb
mov
sub
inc
sub
iret
mov
inc
pusha
dec
xlat
inc
or
xor
test
jb
xor
fcomp
or
cmp
dec
gs
sbb
lea
pop
lahf
mov
xor
push
mov
mov
adc
mov
dec
pushf
out
cmovo
sbb
cmp
mov
or
cmpb
es
jns
mov
es
dec
fs
insb
js
pushf
and
insb
or
xor
aaa
pushf
mov
or
aas
repnz
and
mov
int3
fmuls
hlt
clc
or
lret
lret
lret
xchg
nop
and
sub
sub
inc
inc
inc
sahf
cmp
jns
push
mov
data16
addr16
mov
mov
aas
enter
jg
and
insb
in
aas
clc
in
fists
sbb
jg
add
and
int
das
inc
add
dec
aas
pop
mov
insb
in
je
js
mov
fwait
lea
movsb
jno
or
xchg
addr16
inc
sahf
xchg
fsubr
pop
add
mov
add
cmp
cld
xor
add
add
aas
and
enter
xor
repz
insb
incl
xchg
cmp
fxch
xchg
cwtl
or
xchg
mov
sbb
mov
out
in
jb
xor
and
sub
int3
inc
sahf
cmp
push
xor
add
sbb
mov
add
mov
in
int
mov
ds
mov
iret
enter
enter
dec
and
in
clc
inc
and
js
mov
add
add
and
iret
sub
pop
inc
je
mov
and
movsb
repnz
cltd
lea
aas
call
push
or
push
data16
or
aas
xor
adc
sub
mov
cmp
fldcw
insb
aas
js
xchg
repnz
fimuls
int3
pop
sti
cmp
sar
inc
inc
hlt
or
or
dec
adc
enter
cwtl
fs
shl
pop
pop
mov
int
aaa
repnz
test
adc
sub
repnz
pop
in
cld
lret
cmpsl
mov
mov
inc
sahf
faddl
call
xchg
movsb
adc
dec
insb
js
loope
arpl
or
iret
div
and
or
or
fsubrs
cld
or
mov
mov
and
les
sbb
xchg
or
push
inc
fisubs
cwtl
xchg
mov
addr16
in
xor
inc
lcall
or
lea
loope
rorb
or
enter
pop
inc
js
xor
iretw
mov
mov
xchg
aaa
xor
call
sbb
or
xor
or
repnz
and
dec
aam
lea
cwtl
pushf
mov
lock
xor
xor
cmp
or
add
or
sbb
pop
pop
push
mov
xchg
mov
dec
jns
inc
in
clc
cld
xor
lret
push
adc
push
and
iret
sub
pop
sub
jl
sti
and
xor
sbb
push
sbb
and
mov
or
xor
cmp
iret
lods
rolb
insb
or
push
cwtl
pop
loope
xchg
pushf
test
call
addr16
fdivr
clc
xor
cld
sbb
or
adc
enter
xor
sbb
and
enter
mov
xor
mov
dec
call
xor
pusha
sub
adc
cmp
mov
and
pushf
js
fucomp
mov
mov
outsl
mov
loopne
adc
xor
and
and
fsubr
hlt
sub
xchg
sub
adc
or
sub
xor
repnz
cmp
cmp
iret
enter
js
sub
inc
sahf
pop
adc
js
sbb
inc
int3
fcomps
bound
adc
mov
enter
cmp
pop
mov
cmc
cltd
and
sub
adc
addr16
jo
xchg
xchg
and
clc
cmp
mov
sahf
xor
or
sub
outsl
dec
adc
adc
sub
pop
jl
xor
and
jns
xchg
adc
call
xor
out
adc
cmp
mov
fisubs
dec
adc
push
push
mov
cwtl
test
popf
xchg
addr16
in
jae
xor
or
sub
and
push
subb
ss
and
push
xchg
xchg
addr16
movsb
mov
jns
sbb
in
clc
sbb
sbb
fcompl
mov
adc
addr16
out
add
sub
int
addr16
jl
pop
das
rcrb
pop
mov
clc
dec
call
pushf
dec
into
pop
movsb
sbb
pop
cmp
addr16
fnstcw
sbb
das
dec
js
outsl
xchg
lret
sub
pushf
test
push
int3
leave
enter
mov
cmp
dec
cmp
sbb
pushf
sub
cmp
cltd
fs
pop
push
mov
fs
das
stos
sbb
mov
sbb
mov
sbb
mov
mov
lods
sbb
ds
mov
fsubl
iret
enter
xor
sbb
dec
repz
pusha
cmp
dec
cmp
jl
js
xor
inc
test
fmul
int3
mov
add
iret
sbb
sbb
xor
xchg
xchg
int
sbb
pusha
xor
sbb
xor
mov
mov
mov
xchg
aaa
enter
in
xor
jnp
sub
fdivs
sbb
mov
xor
xor
push
xor
lods
fs
loop
mov
fadd
lret
xchg
addr16
push
or
or
xor
cmp
loopne
sbb
push
enter
ja
xor
enter
push
and
xchg
out
clc
or
je
pop
fs
shrl
cmp
cmp
outsl
push
fdivrs
out
mov
in
ds
adc
sbb
arpl
xor
jnp
and
xor
sahf
fxch
xor
js
mov
test
pushf
jns
pop
cmp
dec
xor
mov
je
push
or
add
jae
and
insb
std
inc
and
fwait
lret
in
and
das
push
and
inc
sbb
and
mov
pusha
mov
sbb
adc
cmp
cmp
addr16
push
cld
rolb
inc
and
inc
and
xor
fsubrs
aas
jo
dec
clc
and
and
and
cmp
pop
iret
insb
test
push
cwtl
mov
mov
and
enter
enter
clc
shl
and
jnp
mov
and
adc
adc
or
fptan
add
and
imul
xor
xchg
addr16
enter
or
xor
cmp
and
dec
js
and
cmp
and
test
sbb
inc
enter
enter
scas
and
enter
cmp
and
mov
and
lret
out
cmp
pop
inc
xchg
and
sbb
dec
add
inc
fsub
dec
arpl
sti
dec
sbb
cs
xchg
es
pushf
push
es
mov
mov
in
es
es
es
cmc
inc
es
out
cmp
es
cs
xchg
es
daa
out
and
ret
mov
mov
mov
or
cmp
or
imul
sub
mov
aaa
mov
or
test
xchg
es
mov
fptan
cmp
xor
bound
in
inc
daa
or
xor
pop
cs
in
daa
daa
daa
lahf
aam
enter
inc
pusha
fs
lret
pushf
fimuls
gs
xchg
lds
xor
fimuls
mov
lock
or
mov
sbb
and
and
mov
stc
pop
push
dec
dec
push
ret
es
push
insb
pop
js
jl
sub
and
xchg
xchg
xchg
inc
lods
mov
jl
fsubs
lock
fldcw
insb
fs
js
cwtl
pushf
xchg
xchg
lret
addr16
cmp
int3
inc
inc
inc
sahf
fcomps
cld
or
pop
pop
mov
sub
sub
cmp
xor
repnz
pop
push
dec
mov
and
xor
lods
sub
sub
or
sub
or
adc
inc
pop
enter
inc
inc
incb
push
insb
jo
mov
inc
in
rolb
lret
sub
sub
ljmp
mov
sub
clc
inc
cld
jns
mov
sub
imulb
sub
mov
xor
mov
fs
mov
fsubr
fists
jl
sub
sbb
inc
lcall
dec
sbb
jns
pop
pushf
js
mov
movsb
cmp
test
lods
xor
loop
mov
xchg
xchg
ljmp
std
or
and
mov
adc
stc
inc
ficomps
js
adc
pop
cs
sub
insb
jb
jno
sub
sub
lret
mov
call
inc
lock
cmc
cmc
sbb
lret
lret
xchg
sub
and
and
and
into
sub
sub
and
pop
fildll
and
sub
sub
and
inc
lods
mov
mov
xchg
inc
fcomp
loopne
leave
lret
lret
imul
or
nop
lret
out
adc
sub
jne
addr16
inc
cmc
test
imul
and
mov
cmp
iret
clc
dec
cmp
sbb
enter
sub
cmp
scas
mov
and
push
fiadds
testb
mov
enter
clc
test
pop
mov
or
and
cmp
pop
int3
push
sbb
sbb
je
jns
dec
and
pop
push
inc
inc
mov
sub
and
cli
xor
enter
sub
sbb
sub
jb
sbb
sub
sub
sub
sbb
sbb
inc
mov
push
iret
mov
lods
mov
mov
push
inc
inc
lock
lret
or
cmpsl
xchg
cs
sub
inc
and
mov
test
lods
mov
in
fsubr
jge
jl
lock
or
sbb
cmp
cmp
or
or
nop
pop
sub
adc
cmp
mov
pop
test
pop
enter
mov
fdivs
sbb
mov
mov
cs
push
mov
jno,pn
cs
jmp
cs
xchg
fwait
lret
cs
enter
test
cs
rolb
out
cmp
cs
shrb
das
das
das
das
xor
sbb
sbb
mov
push
inc
push
lods
mov
cwtl
pushf
sub
inc
mov
enter
inc
lret
or
test
subl
xor
sbb
mov
xor
loopne
inc
cs
iret
enter
cmp
and
movsb
and
das
pop
das
or
xor
mov
and
pop
jno
push
jecxz
cmp
lret
fimuls
cmp
and
das
das
das
jle
inc
xchg
xchg
inc
cs
das
xor
and
add
xor
mov
dec
mov
pop
pop
push
inc
inc
pusha
fs
mov
xchg
inc
cs
xchg
xchg
sarl
lret
hlt
sbb
or
xor
mov
and
and
mov
sbb
ss
inc
dec
push
push
xor
push
pushf
sbb
xor
xchg
xor
xor
pop
das
xlat
xchg
mov
xchg
or
or
or
cmp
fsts
dec
mov
inc
inc
inc
sahf
js
cwtl
pushf
test
sbb
jns
enter
sbb
clc
clc
and
cmp
xchg
out
jl
xor
xor
sbb
add
mov
and
sub
cwtl
sub
push
mov
xor
sbb
fcoms
gs
mov
jb
mov
xor
cmp
inc
in
inc
inc
push
mov
pushf
sbb
push
test
gs
xor
mov
inc
jmp
rcl
jmp
inc
mov
xor
ss
sbb
xchg
leave
xor
aaa
xor
movsl
jb
xor
add
inc
sahf
repnz
call
xor
xor
xor
cltd
mov
xor
iret
insb
in
pop
jl
push
mov
test
xor
sbb
xor
ds
popf
fstps
call
inc
scas
xchg
addr16
cld
cmpsb
xor
sbbl
mov
inc
xor
inc
and
xor
add
xor
xor
sub
enter
xor
xor
iret
xor
sub
xor
xor
or
or
lods
mov
cmc
inc
inc
push
mov
movsb
or
push
stos
loop
xor
fwait
lret
in
xor
adc
cs
xor
xor
mov
dec
xorl
push
iret
js
aas
jmp
xchg
addr16
xor
cltd
arpl
and
cld
add
outsl
or
dec
aas
cmp
clc
xchg
xor
push
mov
adc
pop
inc
push
addr16
mov
cwtl
cwtl
aas
and
cmp
xor
enter
loope
and
in
clc
mov
jae
pop
xchg
xor
inc
fwait
lret
in
xor
mov
pop
dec
cs
ftst
mov
scas
xor
and
int3
aad
xchg
xchg
rcl
mov
xor
xor
xor
insb
jb
sbb
inc
enter
xor
test
pop
nop
lret
lret
fs
mov
fs
sbb
sbb
mov
inc
and
mov
int3
decw
pop
lock
lahf
fnstenv
xor
inc
sahf
fptan
xchg
xor
xchg
cli
int3
and
cmp
ss
or
xor
cmp
jbe
iret
dec
pusha
inc
ja
js
cmp
xchg
jl
and
adc
cwtl
enter
inc
push
mov
ss
mov
mov
add
repnz
sub
add
dec
pop
sbb
sbb
push
fwait
mov
test
mov
lods
mov
pop
push
inc
mov
mov
and
loopne
test
cmp
cmp
cmp
jl
xchg
xchg
inc
cmp
xchg
inc
mov
mov
xchg
cmp
hlt
clc
shll
xchg
ss
or
scas
fcompl
aaa
aaa
xor
clc
jl
inc
inc
pop
pop
push
sbb
xchg
addr16
lahf
xchg
xchg
call
cltd
mov
cmp
xor
in
sbb
js
pushf
addr16
mov
and
inc
push
test
cmp
shrb
and
cmp
jae
cmp
cmp
xcrypt-ecb
enter
cmp
fs
xchg
iret
cmp
lods
cmp
mov
cmp
outsb
stos
inc
jmp
rol
imul
cmp
cmp
movsb
popa
sbb
add
cmp
lods
mov
test
hlt
mov
cmp
fwait
xchg
out
cmp
or
cmp
repnz
and
dec
and
jecxz
xor
inc
inc
addr16
and
dec
repz
push
cmpb
out
int3
and
inc
insb
mov
and
cmp
and
push
cwtl
in
sbb
mov
cmp
sahf
pop
jno
clc
in
and
cltd
int
in
aas
clc
adc
repz
stc
call
or
xor
cmp
cmp
pop
xchg
fldcw
je
js
jl
inc
inc
sahf
mov
lods
lds
repnz
mov
cmp
dec
cmp
call
mov
cmp
or
sbb
sbb
dec
fs
fs
addr16
xchg
rclb
aas
test
inc
and
enter
enter
es
sbb
jl
lret
jg
cmp
cmp
ss
inc
push
pop
aas
pop
in
xchg
addr16
and
iret
insb
mov
cwtl
insb
mov
mov
and
push
mov
lret
in
icebp
cwtl
inc
int
ds
jecxz,pt
lods
inc
ds
in
mov
mov
je
mov
fdiv
mov
xchg
xchg
mov
aam
into
ds
and
aas
aas
fs
or
aas
xor
xchg
xchg
addr16
pop
fs
sahf
xchg
xchg
push
jl
inc
inc
cwtl
pushf
test
inc
cltd
int
push
iret
aas
or
fs
hlt
clc
cld
in
dec
jae
inc
call
cmp
cmp
inc
push
iret
in
add
or
aas
push
and
repnz
repnz
mov
fnstcw
pop
in
cmpsb
clc
mov
aas
in
clc
addb
mov
xor
pushf
sbb
sbb
pop
and
insb
in
je
mov
movsb
addr16
test
aas
mov
xor
aas
fsubr
and
push
jl
inc
jecxz
inc
inc
pop
out
and
inc
aas
xor
cmp
fnstcw
cmp
dec
sbb
fs
cltd
xor
sub
and
enter
pushf
test
les
enter
push
test
clc
aam
xor
mov
inc
insb
inc
inc
inc
cmp
iret
aaa
inc
aas
cmp
pop
into
inc
aas
push
gs
inc
aas
cwtl
sbb
sbb
mov
mov
enter
jmp
clc
call
mov
cmp
aas
inc
push
xor
dec
lahf
fldcw
inc
or
dec
mov
enter
inc
aas
mov
push
aam
faddl
clc
mov
je
jecxz
inc
cltd
mov
or
aas
xor
sbb
sbb
cmp
movsb
addr16
xchg
xchg
rclb
test
enter
jns
fdiv
hlt
clc
jns
sbb
cld
or
dec
and
data16
dec
movb
and
inc
aas
pop
push
sub
clc
jb
adc
dec
lods
inc
inc
enter
push
enter
and
enter
clc
xchg
movsb
and
nop
push
inc
jns
mov
adc
cmp
mov
je
aam
lahf
xchg
xchg
addr16
dec
das
vunpcklps
adc
inc
inc
xor
dec
xor
sbb
sbb
dec
inc
add
xchg
cwtl
js
js
orb
orb
add
movsb
mov
xor
push
push
outsl
pop
mov
inc
mov
mov
mov
repz
mov
sbb
mov
push
cmp
mov
decb
mov
adc
inc
cmp
mov
outsb
inc
loopne
mov
mov
and
imulb
std
or
xchg
rclb
jl
rolb
orb
rcr
pop
mov
mov
pop
ret
int3
add
xor
push
mov
je
cmp
or
add
in
gs
pop
mov
popa
sarl
frstor
movl
clc
call
insb
movsb
jo
jmp
and
cmp
test
nop
iret
adc
movsb
mov
js
iret
scas
loopne
jl
adc
mov
call
int3
or
scas
push
mov
fcoms
xchg
sub
pop
out
testl
mov
add
or
js
adc
sti
pop
mov
sti
popa
loopne
in
call
mov
inc
pop
rcll
mov
inc
push
test
jbe
mov
mov
cmp
jne
add
add
ljmp
mov
add
pop
sbb
and
inc
imul
sub
push
adc
xchg
mov
inc
leave
movl
mov
adc
push
mov
pop
or
jbe
fiaddl
jns
mov
in
lods
pop
cmpsb
lea
cmp
mov
clc
and
lods
push
je
xor
bound
loope
and
lahf
int
or
push
mov
push
adc
cmp
outsl
sub
mov
mov
subb
fadd
push
push
push
xchg
pop
loopne
in
xchg
or
pop
add
sar
data16
fimuls
cmp
ja
jo
and
push
add
cmp
dec
cmp
jne
add
out
dec
mov
push
out
add
cmp
add
sbb
data16
daa
mov
jmp
aas
push
prefetchw
je
push
outsb
mov
add
push
adc
inc
push
add
scas
xor
cli
mov
cmp
loopne
push
add
decl
vpcmpeqd
mov
cld
ss
jle
sbb
mov
mov
mov
scas
pop
mov
mov
mov
test
sbb
adc
jb
out
jg
sbb
pop
dec
mov
test
je
cmpsl
insl
dec
test
cwtl
mov
push
mov
mov
jmp
mov
xor
cltd
fwait
lret
mov
mov
mov
repz
ficompl
inc
jmp
sbb
dec
sbb
push
and
insl
push
andl
jne
cmp
sbb
pop
popf
sbb
and
dec
or
inc
sub
inc
dec
push
pop
ds
mov
orl
clc
dec
arpl
xchg
inc
add
jo
ss
xchg
fcom
int3
add
xor
pusha
ficoms
jno
ret
add
mov
mov
cmp
and
mull
or
insb
or
mov
inc
cmp
dec
in
mov
adc
adc
jle
mov
in
mov
insb
sbb
pop
xchg
dec
pop
mov
and
sub
fnstcw
leave
sbb
inc
inc
or
push
mov
xor
sbb
mov
push
xlat
scas
test
push
push
subl
push
repz
jmp
push
cmp
je
push
and
fsubrl
mov
arpl
dec
cmp
je
cwtl
sub
push
adc
mov
sahf
or
and
pop
pop
in
pop
ret
fsubs
and
ss
push
fmul
sub
adc
add
data16
lea
push
je
push
and
mov
jo
sub
jae
mov
push
movswl
ret
call
cmp
jge
inc
jmp
enter
mov
nop
sbb
decl
sub
mov
lea
insb
mov
cmp
adc
adc
and
loop
loop
in
xchg
mov
inc
jo
mov
das
dec
rorl
lods
fsubrp
stos
and
in
add
or
test
sub
ds
push
dec
stc
push
or
cmp
and
imul
incl
cmp
je
mov
cmpl
inc
xor
lea
cmp
aas
dec
mov
test
cwtl
bound
or
push
add
daa
dec
xlat
add
mov
add
insl
and
mov
leave
lock
addb
xchg
addl
push
dec
push
lea
mov
mov
data16
add
js
inc
sub
into
outsl
sbb
movl
cmp
adc
pushf
dec
sbb
insl
sti
jg
ja
jmp
fldl
and
sbb
mov
mov
cmp
je
mov
push
dec
add
out
stos
ljmp
mov
ja
jo
cli
or
adc
nop
add
aad
ret
push
sub
into
movb
cmp
ret
push
and
push
loop
push
or
aas
cmp
add
pop
xchg
addb
push
adc
imul
and
cs
mov
or
cmp
pop
or
add
stc
jmp
mov
adc
cmpb
icebp
push
lahf
iret
repz
testb
xchg
dec
cmp
xchg
and
stc
pusha
clc
mov
scas
jb
xor
lret
movsl
dec
push
movq
sarl
cwtl
scas
and
repz
sti
pop
rcll
inc
push
jo
jl
divl
cmpsb
push
cmc
xor
dec
push
inc
ss
ret
mov
sbb
mov
jp
cmp
mov
pop
roll
jle
inc
aam
lcall
cmp
sbb
adc
incb
je
stc
add
mov
out
sub
ja
mov
inc
dec
stc
add
dec
jb
out
jbe
dec
pop
outsl
or
pusha
add
bswap
mov
into
into
sbb
jecxz
sahf
add
cmp
int
decl
scas
lret
mov
mov
mov
cltd
int3
xor
cmp
enter
push
adc
ja
cmpl
in
ret
push
es
pop
jl
jne
pop
fs
popa
dec
sarb
cltd
pop
push
dec
push
jb
shr
dec
adc
je
and
push
pushf
mov
push
and
in
popa
inc
xchg
daa
dec
sahf
clc
dec
or
dec
fmuls
mov
fdivs
js
xor
rcll
sbb
mov
add
call
inc
cmp
dec
and
push
flds
xlat
test
sbb
add
add
sbb
lock
je
mov
add
push
push
mov
pop
stos
dec
add
cmp
jecxz
je
ja
push
lock
dec
sub
inc
jecxz
sbb
leave
xchg
inc
add
adc
and
cmp
adc
or
addb
fwait
sbb
aam
push
xchg
mov
inc
pop
in
jmp
lcall
std
std
or
lods
inc
pop
sub
sub
mov
jle
cmp
sbb
imul
xor
insb
adc
lock
sub
adc
ret
xor
sub
mov
int
add
cltd
fwait
add
dec
xchg
adc
std
cmpsl
mov
push
push
mov
dec
loopne
daa
iret
fdiv
jmp
dec
push
mov
test
dec
sub
mov
mov
les
push
ret
push
xor
mov
adc
push
orb
push
push
or
sub
add
sub
push
xor
dec
mov
inc
imul
dec
push
adc
or
int
lret
dec
jg
or
hlt
test
inc
add
mov
jmp
add
cmp
bound
dec
xchg
lahf
sahf
data16
or
xchg
dec
fdivp
frstor
test
mov
pop
dec
leave
imul
mov
dec
cmp
repnz
dec
cltd
dec
pushf
dec
mov
xor
add
mov
stos
pop
pop
push
jb
cld
sar
popa
mov
sahf
and
inc
mov
ja
dec
pop
mov
sbb
fldl
lods
xor
js
dec
das
mov
mov
dec
sahf
pushf
in
dec
fs
jl
mov
leave
xchg
daa
mov
dec
add
jp
outsl
fnstenv
xchg
dec
nop
inc
inc
pop
mov
arpl
outsb
pop
adc
fcmovu
lds
push
sub
test
ja
mov
out
lret
lods
inc
inc
ds
hlt
in
das
inc
stc
mov
xchg
aaa
fwait
dec
jle
sub
cwtl
dec
loope
sub
enter
imul
and
cli
push
pusha
movsl
lock
cmp
loopne
mov
mov
enter
sub
stc
sbb
mov
std
fstl
or
xlat
in
push
rorl
fdivl
and
sub
lds
dec
scas
pop
insl
add
dec
fidivs
push
and
rorb
in
inc
add
imul
test
mov
test
xchg
int3
int3
jecxz
cwtl
negl
push
dec
add
add
add
dec
mov
mov
add
jecxz
or
mulb
push
test
mov
call
addb
sub
sbb
in
add
cmp
push
pop
jle
test
je
push
sar
cmpl
inc
pop
inc
xor
leave
xchg
dec
sahf
dec
xor
clc
pusha
fistps
push
bound
adc
dec
pop
jne
jno
enter
inc
push
pop
test
jns
mov
je
push
cmpl
jnp
inc
iret
jg
push
repnz
stos
push
mov
push
jmp
pop
pop
mov
inc
lcall
ss
xor
push
inc
add
test
adc
cld
or
addl
call
insl
mov
adc
push
inc
push
xchg
jg
dec
int
pusha
cmp
push
popa
cmp
pop
or
cmp
mov
mov
or
cmp
inc
or
cld
mov
bnd
test
inc
dec
sahf
cmp
cwtl
insl
mov
mov
sbb
roll
loopne
xor
or
jno
jns
outsl
and
inc
cmp
fcompl
pop
mov
mov
dec
or
dec
loopne
jp
cmpb
xchg
adcl
movb
test
or
mov
lea
add
ss
loop
mov
xchg
mov
ds
dec
adc
ror
daa
imul
cmpb
adc
inc
mov
add
das
stos
rorb
test
test
sbb
jo
pusha
mov
imul
mov
adcl
or
mov
xchg
out
adc
outsb
ja
dec
push
pop
cld
dec
stos
push
add
lea
mov
mov
jl
and
idiv
xor
add
in
xchg
pcmpgtb
cmp
popf
cmp
fs
adc
out
mov
pop
or
push
pusha
movsb
jle
loope
mov
cmp
mov
popa
add
fstp
fnstenv
outsb
pop
sbb
pop
test
insl
imul
sbb
outsl
adc
add
mov
mov
inc
insl
mov
lcall
call
inc
inc
mov
push
sahf
mov
shrb
jl
adc
imul
jle
addl
mov
add
call
jl
pop
ja
mov
sub
and
data16
jmp
mov
push
repnz
sbb
lea
cmp
push
jp,pn
cltd
sbb
sbb
inc
inc
sbb
arpl
popa
or
loopne
cmp
cmp
mov
or
push
idivb
jl
test
xchg
out
sahf
pusha
stc
out
or
add
or
or
and
mov
pushf
jbe
and
cmpb
sbbl
sbb
cmp
popa
fcmovu
inc
inc
xor
iret
and
je
nop
xor
int
loope
cmp
lahf
and
outsb
sub
jo
inc
repz
or
dec
push
mov
inc
push
or
je
pusha
divl
add
test
jo
fs
add
mov
pop
dec
sahf
cmp
out
lock
cmc
pop
or
in
jg
jg
maxpd
push
imul
mov
imul
cld
shrl
xor
fldt
push
das
leave
lods
add
sbb
add
int3
inc
cmp
ja
mov
sub
fdivl
leave
into
std
pop
xor
shr
mov
ljmp
push
fisubrl
jge
movsb
cli
imul
pop
sbbl
idivb
int
push
xlat
cmpsl
imul
dec
pop
xchg
in
sarl
lock
stc
sahf
out
mov
cmovs
ss
jns
int
lea
mov
jnp
push
pop
scas
pop
pop
stc
pusha
out
insw
cmc
outsb
testb
pop
lock
stc
mov
sub
pop
push
push
mov
notb
aas
push
test
or
sbb
or
jge
add
push
ljmp
js
sahf
add
sbb
and
mov
ret
mov
xlat
pop
adc
push
or
mov
mov
mov
mov
orb
sbb
fimull
mov
pop
cmp
cmp
je
fs
lea
fisubrl
je
pop
jo
ss
jge
mov
aaa
jl
lea
flds
push
and
mov
aam
leave
sbb
mov
rclb
lret
loopne
mov
dec
dec
lea
loopne
mov
add
adc
pop
push
push
xor
ds
loop
cmp
mov
jae
clc
cltd
mov
dec
cmp
jge
je
jbe
mov
pop
xor
sbb
jb
popf
mov
lret
adc
pop
lock
sub
or
add
mov
pop
adc
inc
add
notb
rolb
inc
sahf
setp
inc
mov
in
xchg
daa
iret
lahf
fistpl
lods
lock
and
shrb
cmp
in
mov
inc
push
xchg
or
fisubrl
cmpb
sahf
test
jo
icebp
mov
and
add
inc
cmp
in
xchg
das
add
cwtl
in
xchg
xchg
negb
xchg
jns
sbb
fwait
or
inc
and
inc
adc
inc
nop
loopne
testl
push
fwait
inc
and
in
xchg
fwait
cmp
dec
fwait
push
fwait
std
cli
in
insb
fwait
inc
mov
incl
inc
xorl
cmpsb
int
xor
ja
and
pusha
mov
fcomps
xchg
xor
adc
js
mov
and
jmp
push
jne
cmpsl
imul
stos
xor
divb
mov
cld
cld
push
mov
sahf
mov
mov
or
mov
mov
pop
inc
js
inc
push
adc
pop
fldl
cmp
adc
inc
dec
lcall
aam
xchg
mov
push
and
xchg
xchg
fidivl
and
cmp
dec
xchg
pop
push
sbb
scas
and
jp
mov
and
mov
mov
clc
popa
and
mov
loop
fsubr
add
test
pop
aas
sub
jbe
xor
loope
pop
or
sbb
add
xchg
ds
jmp
sbb
jne
popf
fs
or
mov
add
sbb
sbb
dec
cmp
inc
rcrb
push
inc
rcl
mov
inc
dec
jne
stos
xor
and
mov
fdivl
add
and
lret
inc
xor
xchg
and
add
mov
jbe
push
popf
int
idivb
jmp
iret
xchg
cmpsl
je
mov
rol
test
rorl
and
mov
outsl
sbb
inc
es
sbb
das
mov
mov
add
push
pop
dec
adc
stos
test
xor
daa
ret
mov
inc
icebp
pmuludq
jle
dec
mov
jmp
pop
pop
add
js
test
mov
cltd
stos
pusha
mov
sahf
cmp
inc
dec
sahf
dec
sahf
popa
sahf
loopne
pop
fwait
adc
loope
rcrb
loop
jmp
sbb
aas
dec
push
inc
imul
pop
push
pop
xchg
push
mulb
add
or
mov
inc
mov
ret
daa
xor
aam
loopne
add
ss
sbb
push
sub
xor
bound
fs
mov
cmpsl
shlb
and
mov
loopne
push
push
mov
mov
adcb
inc
aaa
cmp
insb
loop,pn
push
es
or
sarl
stc
fstpl
in
add
push
jb
aas
test
mov
addb
call
das
mov
push
in
adc
popf
dec
test
and
pop
xchg
test
out
cltd
mov
lea
sar
mov
cmp
je
push
int3
cmp
mov
push
aas
adc
jecxz
lahf
jo
sbb
mov
and
or
sbb
push
call
adc
pop
popl
xor
fldl
dec
mov
mov
or
dec
test
mov
sub
rorl
jb
jmp
std
sbb
mov
xor
mov
push
sbb
stos
xchg
or
mov
xor
xor
incb
pop
push
or
inc
mov
or
adc
push
pop
mov
mov
push
jne
push
and
sub
loopne
mov
adc
sbb
fcomps
arpl
sbb
and
xchg
dec
jbe
jl
or
mov
jge
jl
jmp
add
rolb
mov
mov
or
jns
inc
test
test
adc
das
mov
je
sbb
insl
mov
xchg
push
push
add
lock
mov
mov
push
mov
stos
cmp
mov
repnz
mov
or
push
xchg
lret
mov
int3
fdivrl
popf
cmp
xchg
add
adc
lret
jno
mov
or
push
cli
inc
ret
or
mov
adc
addl
sbb
data16
jg
ret
stos
nop
and
inc
add
push
mov
int
xchg
shll
add
cmpsb
je
inc
add
fildll
mov
movaps
sub
sub
rorl
push
xor
dec
divl
push
push
cltd
push
pushf
pop
push
mov
negl
imul
mov
pop
pop
add
pop
repnz
add
push
pop
or
or
or
push
movups
adc
test
int
adc
push
pop
add
mov
mov
test
or
jg
dec
mov
mov
push
shll
aas
stos
push
inc
pop
cmpsl
push
insb
add
test
jl
stos
push
push
cmpsb
cmp
or
imul
sub
mov
lods
insb
dec
loope
cmp
inc
out
cmpsl
dec
shll
dec
mov
shrb
inc
test
push
sbb
je
and
push
add
addb
test
mov
mov
jg
ret
sarl
fnstcw
or
addl
jne
gs
pop
push
xchg
pop
je
pop
aam
ret
sti
inc
jle
adc
sbb
outsb
push
add
orb
dec
or
loopne
mov
mov
mov
mov
sbbl
cld
pop
addr16
sbb
mov
repz
js
dec
aaa
dec
push
push
pop
mov
imull
adc
pop
fcoml
lods
into
pop
xchg
push
or
dec
fcoms
xchg
inc
jmp
or
jo
lret
push
dec
cli
pusha
daa
popa
mov
sahf
push
daa
push
lock
imul
aaa
dec
into
imul
add
mov
test
xchg
insb
xor
or
test
lea
jmp
scas
imul
cmp
push
push
bound
loopne
jp
and
push
insb
lea
mov
push
insb
addb
stos
lds
pop
mov
jle
int
stc
adc
lcall
imul
cmp
cmp
jbe
or
mov
push
cmp
out
test
pusha
decl
dec
or
add
jl
cmp
inc
push
in
mov
lock
mov
int
gs
inc
dec
push
addl
fiaddl
inc
push
cmp
cmp
je
push
xor
mov
xor
dec
add
outsb
ret
mov
cmp
test
add
out
rolb
mov
mov
sbb
je
aas
add
inc
movaps
leave
test
adc
rorb
and
cmp
fadds
mov
sbb
std
sbb
ss
or
stc
insl
mov
notl
shlb
stc
jle
incl
loope
mov
xor
adc
add
sbb
lcall
lret
ret
push
mov
jl
add
lahf
and
lea
bound
divl
cmp
cmp
insl
cmp
dec
push
pop
jl
shll
test
sbb
add
mov
rolb
add
pop
push
pop
xor
cmp
hlt
sbb
cmpsb
adc
mov
and
pusha
int3
cmp
add
xchg
loope
add
sbb
filds
mov
push
cmp
je
pushf
outsl
cld
sub
jbe
and
add
leave
add
into
jno
aas
lock
add
cs
bound
and
out
jae
repz
orb
imul
push
pop
sbb
test
outsb
psrlq
dec
fs
sbb
add
int
sbb
mov
imul
jecxz
push
mov
sub
xchg
ljmp
inc
test
push
inc
movsl
or
jge
outsb
mov
cmp
je
or
mov
push
movsl
fildl
cmp
push
fiaddl
jns
adc
js
adc
mov
push
mov
in
push
popf
mov
pusha
outsb
adc
int
outsl
sbb
bound
loopne
orl
dec
jle
or
add
scas
aam
pop
rclb
sub
inc
fnstenv
movsl
loopne
mov
enter
jnp
insb
mull
sahf
or
cmp
or
icebp
mov
fs
repz
outsl
sbb
repnz
pop
jo
jo
jo
cmp
repz
add
cmp
cmp
out
push
cmp
sbb
das
jo
scas
jle
lea
jecxz
in
mov
lahf
test
dec
or
xor
mov
inc
push
sbb
daa
mov
inc
jo
enter
imul
lret
mov
xor
dec
dec
imull
jge
scas
subb
xchg
jle
stos
jl
in
sbb
rclb
rolb
add
in
and
ret
jne
rorb
and
cmp
scas
insl
imul
jecxz
call
add
or
add
add
mov
sbb
mov
mov
mov
lock
jl
add
dec
ret
shll
adc
xor
xor
shrb
test
or
testb
mov
push
adc
sbb
rcrl
dec
dec
lret
add
loopne
dec
aam
incl
mov
jbe
mov
aam
jo
xor
add
fs
push
int3
adc
push
mov
add
adc
mov
jmp
mov
in
mov
insl
dec
jnp
jns
push
xchg
xor
push
mov
loope
pop
or
les
hlt
orb
in
xchg
cs
jle
cmpb
jnp
sub
add
cmp
jnp
or
nop
lahf
test
mov
add
xchg
jns
jns
xor
mov
push
inc
pop
add
jle
scas
jns
stos
and
cmp
popa
add
cmp
sbb
ja
rorl
and
aas
sub
cmp
adc
outsb
pop
jae
push
or
sub
push
xor
ja
nop
sub
inc
pop
test
mov
jnp
enter
jnp
jnp
jnp
rol
cltd
cmp
enter
decl
xchg
mov
dec
adc
pop
movb
sbb
add
sbb
jo
test
mov
mov
and
dec
xor
mov
pusha
rcrb
cli
push
push
sub
jns
pop
adc
mov
aam
adc
enter
adc
xor
icebp
or
aaa
dec
push
and
jle
mov
lcall
adc
push
sub
rcrb
pop
sbb
sahf
xor
fwait
mov
or
sub
sahf
clc
or
rcl
jp
jb
in
cmp
jp
jp
mov
and
incb
lahf
lret
push
jbe
xor
nop
cmpsl
cmp
scas
push
cmp
enter
jnp
xchg
push
xor
jnp,pt
inc
cmp
subb
roll
mov
xchg
outsl
push
leave
call
dec
repz
jnp
sahf
sbb
imul
add
add
jecxz
mov
call
adc
imul
mov
pop
sbb
in
shlb
insb
lea
xor
insl
add
mov
sti
add
inc
xor
cli
bound
xchg
mov
inc
jo
or
add
cmpsb
mov
jno
movsb
add
cmp
movsl
mov
test
adc
xchg
rorl
add
cltd
cmc
addr16
xchg
add
adc
and
pop
into
test
dec
loop
outsl
pushf
out
sub
movswl
xor
inc
add
sti
jl
dec
cmp
pop
cli
mov
and
cmpsb
movsb
sahf
icebp
movsb
jne
out
out
sti
add
mov
js
fsubrl
mov
mov
push
push
push
lods
pop
or
sbb
dec
fcoml
or
adc
iret
mov
or
ss
sub
and
jne
and
cs
outsl
stos
and
jne
lea
xchg
lahf
fcompl
sbb
jae
hlt
mov
push
inc
test
fisubrs
jo
inc
jmp
pop
cld
or
into
sarl
push
cs
ds
mov
jae
ret
mov
je
dec
clc
popf
dec
push
push
jge
es
jmp
sub
sbb
push
jl
jecxz
test
push
mov
or
xchg
mov
subl
sbb
sbb
push
out
pop
sub
and
xchg
push
out
dec
push
bound
dec
movsb
and
leave
xchg
out
push
mov
sahf
xchg
cmp
push
dec
add
push
xor
leave
inc
sub
push
jae
jl
jl
add
cli
add
icebp
adc
call
xchg
and
sbb
push
sbb
inc
push
andb
xor
sbb
push
mov
daa
mov
or
movl
sbb
out
mov
xor
pop
fcomps
pop
mov
gs
daa
cmc
push
cmpl
out
xlat
pop
push
enter
inc
push
push
rcrb
pop
lods
cmp
cld
pop
add
pop
std
iret
data16
pop
inc
or
movsb
adc
xchg
js
xor
mov
fdivs
stos
xchg
lea
push
mov
test
cmpb
or
push
inc
inc
mov
mov
data16
jmp
xor
add
jo
push
enter
push
sti
adc
push
and
inc
xchg
cmpsb
cmp
pcmpeqb
cmp
and
mov
stos
jb
pop
cmp
mov
cmp
cmp
jbe
push
icebp
and
push
or
cmp
incb
mov
adc
sub
jb
or
cmp
in
cmp
mov
in
stos
jns
mov
adcb
repnz
push
stos
push
scas
push
int3
adc
push
inc
cmp
pop
and
inc
pop
sub
push
add
ret
out
cwtl
cmp
dec
push
pop
lcall
movsb
mov
pop
pusha
pop
mov
xor
in
mov
adc
cmp
or
inc
sub
xchg
xorb
mov
cltd
pop
or
call
setg
lea
mov
data16
pop
adc
divl
jmp
loope
int
dec
add
and
push
test
and
lea
dec
repz
and
push
jae
xor
and
aas
loopne
mov
adc
push
lock
cld
sub
sbb
adc
add
mov
cmp
insb
fldl
je
fwait
add
add
xchg
data16
in
or
sarb
fdivl
pushf
mov
inc
add
add
add
shlb
popa
mov
pop
or
push
shll
negl
imul
imul
push
or
dec
mov
add
add
pop
cld
sbb
push
sub
xor
shrl
sub
test
push
sbb
dec
add
ret
pop
and
add
push
cmpsl
lock
or
js
cmp
or
inc
andps
popf
mov
mov
pop
loopne
jecxz
pushf
sbb
or
shlb
inc
int
xchg
ljmp
das
inc
mov
ja
and
pop
xchg
outsb
push
fs
sub
mov
inc
add
jbe
pop
adc
or
jl
sbb
jmp
pop
add
inc
sbb
and
pop
movsl
sub
adc
xor
add
mov
mov
pushl
movsl
or
js
push
out
add
add
dec
sbb
sbb
lock
cmpsl
mov
or
in
arpl
and
std
out
cli
lods
shl
call
rcr
mov
adc
jb
jmp
xor
pop
xchg
arpl
xchg
fimuls
pop
add
call
mov
and
and
mov
int
add
sbb
jmp
adc
and
add
mov
or
ja
lret
sbb
and
mov
adc
mov
mov
mov
cmp
push
nop
in
incl
adc
and
mov
pop
bound
mov
push
dec
xchg
popa
shll
dec
cmp
sbb
push
ljmp
aaa
push
shr
inc
nop
mov
fildl
add
fistl
subb
add
push
fidivl
call
inc
and
mov
repnz
iret
fldt
fisubrs
xor
cs
mov
dec
mov
jle
adc
in
sub
out
int
inc
sbb
jb
jge
mov
xor
mov
push
jmp
adc
adc
jge
hlt
xchg
cld
push
push
stc
nop
scas
call
or
or
enter
shrb
iret
lods
subl
fcmovb
scas
and
pop
xchg
pushf
mov
push
sub
lods
push
adc
pop
test
pop
xchg
pusha
sub
iret
mov
lea
fstp
sbb
or
jle
adc
lock
lret
and
push
push
jecxz
add
jecxz
mov
and
push
adc
ja
add
or
or
test
aaa
or
push
test
jne
ret
and
add
cmp
pop
mov
lock
mov
lahf
movzwl
out
inc
sub
inc
cmp
pop
aam
cmp
push
push
dec
mov
sbb
outsl
int3
mov
sub
adc
scas
sub
clc
sbb
mov
dec
lahf
negl
or
lock
mov
push
pop
call
scas
inc
add
pusha
jmp
and
sbb
out
insl
cld
cmp
mov
jge
cmp
jne
jecxz
movsb
cmp
add
lock
repnz
cltd
add
adc
cltd
mov
aam
push
sbb
les
mov
popf
adc
addr16
push
jno
sbb
or
xchg
je
cmpsb
sub
jae
mov
or
xchg
arpl
inc
pop
push
std
add
dec
cmp
inc
in
rolb
xor
xor
lea
add
sti
sti
test
inc
push
je
andb
push
pop
mov
cmp
insb
push
xchg
fdivl
out
clc
pop
xchg
push
or
push
test
adc
or
lods
int3
inc
sbb
test
jp
jl
cld
aad
adc
push
add
call
andps
inc
ret
add
jne
jg
sbb
int
in
pop
sbb
push
je
popf
ja
push
ret
push
add
xlat
or
jb
dec
nop
sub
lahf
cmp
xchg
and
and
test
aas
pop
pop
leave
xchg
daa
pop
xor
in
out
repz
shrb
in
in
or
out
aam
ret
or
xchg
dec
imul
addr16
fcoms
test
add
push
inc
fldt
call
jl
xchg
test
filds
or
cld
mov
adcb
mov
jl
xor
sub
cmp
push
xor
jecxz
mov
dec
pcmpgtb
aad
dec
nop
roll
cltd
dec
cmp
or
stos
add
je
iret
push
lea
xchg
push
pushf
adc
jl
fmuls
inc
gs
dec
xorl
dec
inc
add
leave
fidivs
mov
cld
into
sbb
xchg
fs
adcl
push
push
sbb
mov
pop
pusha
xchg
jo
fsub
push
and
sbb
xor
sbb
pop
cmpsl
fdivrs
and
fiaddl
pop
push
lcall
and
mov
mov
jbe
adc
and
mov
loopne
or
xchg
pusha
mov
lcall
ret
mov
shl
push
push
rol
clc
lcall
xchg
mov
imul
cs
xor
xchg
sub
and
pop
jg
jle
cmp
push
dec
je
test
jne
or
cmp
rclb
ds
or
ret
pop
sbb
mov
sub
cmp
pop
gs
mov
and
aaa
mov
fldz
sub
fldl
push
cmpsl
add
pushf
lcall
jnp
pop
and
xchg
xor
bound
fadd
sbb
cs
mov
in
sub
mov
rcll
push
pop
das
dec
pop
pop
popf
inc
cmp
dec
fisubl
ror
sbb
sbb
add
xchg
sbb
hlt
adc
add
clc
sbb
pushf
xchg
or
inc
mov
push
push
push
lret
or
jo
pop
sub
incb
or
mov
push
and
lea
shl
sub
fcoml
iret
repnz
test
xorb
adc
adc
test
push
mov
push
sbb
add
sub
js
jno
pop
aaa
bound
shll
xchg
or
sub
jg
inc
fstpt
js
add
mov
cmpb
dec
loop
or
fiaddl
ret
inc
ret
fistps
movsb
frstor
adc
cmp
dec
mov
adc
lds
adc
xchg
repz
and
jae
pusha
push
sub
or
xor
je
icebp
mov
movl
test
cmp
call
mov
dec
mov
dec
adc
fwait
mov
push
nop
inc
ljmp
mov
add
sbb
fisttps
sub
je
pop
push
sar
adc
sbbb
sti
jl
adc
push
mov
das
add
inc
jg
pop
dec
lret
mov
add
jecxz
mov
dec
mov
push
int3
push
mov
mov
arpl
stos
mov
push
aam
mov
sbb
jg
mov
jle
ljmp
mov
jb
and
adc
sbb
push
adc
jmp
ds
fs
mov
sarb
repz
pop
inc
or
rcr
notb
adc
imull
dec
dec
and
cmpl
loop
sbb
in
fcoml
mull
mov
and
les
inc
mov
xor
inc
jl
xor
outsb
lcall
mov
rclb
movl
cmp
cmp
lods
idivl
cli
cwtl
adc
cli
je
jl
out
lret
mov
out
dec
lock
jne
sbb
cld
mov
xlat
cmp
sub
mov
mov
lods
mov
add
into
inc
stc
inc
stc
mov
pusha
mov
rcrb
mov
and
adcl
inc
sbb
and
dec
sbb
pop
or
les
adc
adc
mov
xchg
pop
iret
add
daa
and
mov
loopne
sti
or
fdivrl
pop
stc
imul
pushf
mov
mov
in
push
repnz
inc
and
test
cmc
and
add
add
mov
push
mov
in
mov
mov
push
clc
sub
sti
jbe
orb
lods
aad
fisubrs
dec
daa
adc
insb
fwait
les
push
outsb
push
or
inc
sub
jecxz
int
inc
andl
adc
inc
inc
mov
movsb
add
cli
pop
popf
hlt
xor
mov
push
popa
push
pop
dec
mov
and
jecxz
into
rcr
add
cmp
jge
mov
push
dec
fdivs
insb
loope
push
adc
jns
ss
cmpsl
pop
dec
pushw
sbb
or
inc
push
jo
rorb
pop
add
inc
nop
cmp
add
push
fsubl
int3
insb
sbb
in
adc
cmpsl
adc
sar
fsubrl
mov
dec
sbb
mov
in
jmp
decl
pop
mov
pop
movb
jmp
push
test
or
add
xor
push
cmpsb
les
add
xchg
in
adc
icebp
jle
push
call
pop
inc
scas
sub
pop
inc
cmp
cmp
inc
mov
int3
push
dec
add
incb
pop
int3
adc
push
popa
les
mov
adc
shrl
xor
rorb
lds
pop
push
out
outsb
add
sbb
or
or
andl
xchg
test
or
leave
and
inc
adc
sbb
js
adc
jmp
and
and
data16
aam
adc
or
stc
mov
push
inc
adcb
or
inc
adc
sub
push
fistps
mov
outsl
push
outsb
jle
xor
inc
push
fsubr
popa
pusha
dec
adc
push
out
mov
cmp
les
sbb
adc
and
adc
cmp
es
push
push
jl
cmc
xor
sub
scas
dec
mov
addr16
cmp
adc
add
fsts
add
mov
adc
jg
stos
mov
mov
add
mov
jne
mov
add
sbb
inc
subl
cmp
outsl
aad
mov
outsb
shrl
or
out
xor
jno
dec
mov
jmp
subl
pop
push
data16
addr16
fildll
inc
cmp
xchg
movsl
jns
fstpl
je
xchg
and
mov
outsl
jmp
xchg
adc
je
rcrl
push
push
pop
or
and
cmp
mov
sbb
fildl
in
mov
pop
and
sbb
add
jnp
or
cmc
add
invd
inc
jmp
mov
xor
out
mov
mov
nop
jge
stc
jo
inc
add
jne
lahf
or
mov
cmp
insl
add
jg
and
push
xor
mov
sub
pop
mov
mov
mov
sbb
lret
je
or
inc
dec
dec
jge
scas
jne
or
aaa
cmp
jo
add
push
dec
push
push
inc
inc
and
lods
lods
pavgw
push
cli
xorl
push
mov
daa
push
push
cmp
lock
adc
icebp
aad
ret
inc
and
nop
pop
jmp
lahf
push
lock
arpl
dec
adc
aas
jg
pop
mov
iret
bnd
aas
xlat
inc
cmp
mov
xchg
dec
sbb
cmpsb
inc
movsb
mov
cmp
mov
or
mov
lock
mov
xchg
dec
or
rcl
dec
or
mov
adc
adc
mov
andl
dec
jmp
mov
shrb
scas
pop
insl
pusha
fs
mov
or
es
push
or
inc
bound
stos
xor
lock
and
push
movsl
push
movsl
daa
jl
lods
push
ja
mov
nop
stos
and
adc
iret
push
pop
sbb
mov
pop
push
leave
call
fimull
jbe
test
dec
frstor
dec
xor
mov
lods
sbb
mov
lahf
js
mov
cmp
shrb
outsl
add
test
add
stc
add
mov
stos
in
out
das
xchg
das
add
lock
jle
sbb
jae
mov
jae
add
fisubl
mov
xchg
adc
sub
sub
int
sbb
push
call
add
add
outsb
nop
cld
mov
jno
aam
rorb
pop
sahf
push
cmp
aas
fmuls
sub
les
in
dec
jne
int3
cmp
mov
sub
inc
and
mov
sub
inc
cld
bound
ljmp
adc
adc
cs
jmp
and
lds
testl
sbbb
scas
stos
sbb
imul
popl
out
fisttps
and
js
gs
imul
mov
jns
pop
push
xchg
adc
je
out
sti
inc
imul
mov
push
or
or
jb
lock
jp
or
fisubrl
pop
je
pushf
popf
test
and
lds
adc
cmp
dec
adc
mov
aaa
pop
lea
mov
jp
jb
add
push
dec
mov
movntq
sub
inc
pop
adc
subb
lea
sahf
push
jg
insb
add
repnz
mov
lock
push
pop
mov
inc
divb
movsl
push
pop
mov
xchg
int3
inc
inc
insb
and
inc
loope
scas
dec
push
jge
sti
ss
addr16
fdivrl
shll
icebp
jge
and
add
or
sbb
insl
enter
push
dec
scas
sbb
and
dec
mov
pop
dec
jns
sub
fwait
sar
xchg
popf
sbb
mov
inc
pop
and
jmp
add
mov
or
cld
sahf
or
dec
push
mov
pop
flds
push
mov
cmp
loopne
xor
xchg
xchg
xchg
xor
loop
idivb
inc
cmp
and
mov
inc
movsl
mov
lods
roll
push
add
leave
mov
xor
inc
movsb
cmp
and
sub
mov
shrb
lahf
pop
mov
roll
xchg
shrb
iret
push
sarl
cs
push
aam
nop
adc
iret
pusha
insl
ss
mov
add
add
fiaddl
add
push
add
push
or
or
popa
leave
pop
and
push
or
int3
xor
sub
xor
sbb
mov
inc
rcrl
movsb
xor
mov
jle
jle
adc
inc
in
adc
out
and
iret
in
dec
ret
xor
jmp
inc
cmp
loope
xor
je
test
hlt
inc
xor
adc
pop
jo
pop
mov
cmp
push
stos
mov
ret
jl
or
je
and
push
pop
add
ja
cs
adc
iret
insl
cld
pmaxsw
and
mov
in
and
mov
pop
cli
mov
and
mov
mov
mov
cmovbe
jne
xor
inc
outsb
adc
rorl
cmp
sub
jnp
aas
je
xor
mov
dec
orb
ja
mov
jb
cmp
adc
push
cli
cmp
mov
shrb
dec
add
dec
add
mov
stos
iret
test
imul
pop
fimull
sbb
cli
js
stc
lcallw
jne
add
push
jge
das
negl
mov
into
repnz
push
and
push
inc
push
xchg
sbb
dec
mov
add
add
and
daa
xchg
add
int3
and
inc
repnz
mov
xor
popf
fistps
dec
insl
pop
jbe
or
pop
ja
fists
cmp
inc
incl
jmp
sbb
icebp
jmp
push
mov
push
cmc
jae
mov
jl
nop
push
push
out
bound
lret
mov
je
mov
dec
jnp
sub
sub
iret
fisubs
lret
jl
int
cmp
mov
call
stos
and
icebp
test
jl
fnsave
xor
xor
cs
add
sub
cmpl
pop
dec
or
lahf
fbstp
sub
mov
je
or
je
cmp
jg
je
data16
cmp
jg
push
mov
push
cmp
mov
push
push
das
out
cld
test
insb
dec
cmp
dec
sbb
add
inc
loopne
movsl
notb
jle
dec
jmp
mov
add
inc
cmp
jl
lea
lea
push
mov
mov
notl
adc
lcall
fcoml
rol
int3
add
setb
neg
or
adc
fmuls
push
les
cmp
mov
lea
jl
ret
push
loope
push
rclb
into
jns
mov
scas
mov
mov
xorl
lock
std
je
cmp
jle
test
cld
push
sub
nop
aaa
mov
aaa
rorb
pop
icebp
leave
cld
inc
jmp
adc
mov
push
fmuls
adc
adc
mov
jecxz
or
lret
nop
dec
push
mov
cmc
inc
stc
cmp
xchg
addb
hlt
pop
cwtl
cmp
xchg
stos
popa
adc
int3
push
nop
push
adc
repnz
lock
jo
jae
mov
ret
jbe
xchg
rclb
pop
cmp
inc
lock
inc
add
xchg
pmuludq
xchg
aam
and
mov
dec
je
lcall
dec
jb
loop
lds
les
aas
add
sub
sub
popa
mov
sbb
xor
scas
ljmp
add
jmp
and
js
clc
add
lea
push
sub
push
clc
jg
mov
push
push
pop
jl
jle
lea
cmp
jle
imul
dec
lea
lret
hlt
lods
mov
and
in
pop
mov
jae
inc
xor
pop
sub
stc
dec
or
dec
and
push
mov
fisttps
fwait
into
mov
adc
clc
jne
repz
sub
call
sbb
es
test
or
les
pusha
in
imul
shr
adc
stc
push
cmp
iret
mov
pop
and
inc
add
push
arpl
rol
dec
push
inc
jl
das
pop
test
adc
inc
add
inc
sbb
loopne
filds
in
xor
or
sub
push
adc
pop
mov
mov
mov
sub
fildl
mov
clc
or
add
sbb
push
test
mov
cmp
sbb
call
lea
fidivrl
orl
add
je
add
pop
out
jne
orl
int3
les
shrl
pop
mov
add
pop
jmp
add
dec
push
push
jne
rolb
mov
push
test
addr16
mov
ret
outsb
pop
test
fldt
nop
push
push
pop
mov
pop
push
loope
adc
mov
mov
cmp
fwait
add
orl
or
sahf
add
adc
or
sub
ja
push
jo
lods
loopne
ficomps
mov
lock
cmp
sbb
push
cld
stos
push
sbb
add
sub
insb
push
add
dec
cmp
and
push
cmc
sahf
xchg
lret
mov
fdivrl
int
mov
adc
cltd
push
mov
icebp
imul
sbb
fdivrp
fmull
insl
sub
or
pop
mov
dec
sbbl
pop
inc
xchg
push
xchg
adc
das
les
pop
adcl
xor
push
mov
sbb
outsb
sbb
adc
out
fistpl
clc
sbb
aad
call
gs
loopne
add
push
push
dec
push
push
sub
mov
push
push
rcrb
adc
jmp
inc
ret
inc
jmp
je
sti
pop
adcb
cwtl
dec
ret
pop
pop
add
and
clc
rolb
and
sub
mov
dec
insl
ficoms
mov
testl
pop
cmpsl
adc
sahf
je
addr16
sahf
mov
cmpl
idivl
movb
xor
adc
insl
and
mov
pop
inc
cli
fs
add
mov
test
pop
std
or
mov
lods
mov
fcoms
test
aad
mov
movsl
mov
or
and
and
sbb
stos
ss
sar
sbb
mov
mov
addb
cltd
and
adc
add
or
pop
mov
pusha
sti
repz
xor
cmp
xchg
push
or
mov
mov
fldt
imul
fcoml
mov
xor
or
test
adc
or
movb
rcr
dec
xchg
rolb
push
call
jo
adc
mov
sbb
pushl
mov
ss
lahf
push
and
or
je
leave
leave
adc
sbbb
sub
or
or
mov
add
add
add
xor
mov
dec
cmp
cmp
push
dec
inc
push
jno
outsl
int3
gs
enter
jbe
mul
sub
mov
push
je
sbb
sub
lea
cli
js
adc
adc
enter
cmpl
jnp
dec
cmpl
xchg
add
xchg
stc
outsb
mov
cmc
add
int
jns
pop
sbb
loope
orb
jle
add
adc
sbb
dec
mov
push
jp
aad
sbb
sub
xlat
and
in
pop
xlat
mov
xchg
sub
ret
rcll
or
mov
xor
incl
mov
notl
orb
lahf
fdivrs
or
iret
xchg
sarl
arpl
and
xchg
or
hlt
test
jle
add
jg
ficomps
sarl
inc
adc
bound
fldl
ret
and
sub
pop
mov
push
jle
pop
test
fnstsw
mov
pop
cmp
mov
rclb
jo
lds
sub
pop
mov
inc
fs
add
popa
fdivrs
mov
jecxz
loopne
and
leave
test
loopne
sub
or
inc
cmp
ret
cmp
or
neg
sbb
jl
or
loope
lahf
test
push
push
push
call
sub
push
pop
sahf
or
cs
test
pop
push
cmp
mov
adc
xor
sbb
jmp
adc
cmp
imul
xchg
mov
adc
push
jp
notl
int3
inc
mov
xchg
cmpsl
jmp
movsb
adc
mov
lea
cs
ret
jnp
xchg
dec
add
data16
test
cmp
xchg
lahf
mul
pop
test
push
mov
or
dec
jne
es
and
movsb
add
add
testb
mov
mov
sub
add
xor
rcrb
and
in
xchg
int3
lret
mov
cmp
loope
or
mov
in
sub
push
add
lahf
mov
andb
sbb
push
scas
orl
shrb
push
out
lods
sbb
inc
push
subl
insb
je
test
adc
mov
dec
xchg
xor
pop
mov
sbb
add
enter
fmull
adc
hlt
mov
inc
lods
or
icebp
adc
jmp
sti
or
lahf
or
lahf
dec
mov
lock
xorl
clc
cmpb
inc
not
mov
sbb
xchg
das
dec
fbstp
cmp
mov
arpl
adc
cmp
and
mov
inc
xchg
lea
test
in
xor
sub
adc
mov
pop
pop
sub
outsl
test
jg
es
add
nop
jecxz
rcrb
cmp
lahf
fdivs
jo
fs
je
and
iret
pop
lcall
cmpl
mov
xchg
rorl
cmp
enter
cmp
jo,pt
add
push
pcmpeqb
cmp
mov
sarb
loope
or
or
xor
xor
push
insl
jmp
incb
stos
ja
push
pop
add
pop
loopne
mov
cmp
inc
movups
enter
out
mov
mov
lcall
adc
test
add
mov
mov
add
sbb
pop
and
js
mov
push
lea
dec
adc
mov
int
rcll
jl
and
fldcw
decl
lock
and
testl
lock
mov
push
out
jnp
mov
cwtl
xchg
ret
cmp
insl
fadd
sub
mov
jo
dec
mov
pop
in
sti
jo
dec
dec
cmp
sahf
arpl
add
cmp
insb
loop
mov
loopne
cmp
mov
in
cmp
inc
int
sbb
xchg
cmp
clc
stos
sub
jo
add
mov
cmp
add
nop
cmc
pop
fdivr
push
jle
adc
jecxz
es
ret
loopne
aad
mov
push
sub
xor
sbb
push
inc
test
imul
cmp
cld
mov
or
enter
adc
mov
mov
inc
loope
test
je
push
push
push
mov
sti
push
imul
clc
push
push
push
push
cmovae
aaa
push
mov
xchg
and
cmp
jecxz
pop
xlat
incl
je
and
cmc
mov
pop
cmp
dec
in
sub
jae
data16
sahf
inc
push
push
js
mov
push
dec
or
lahf
dec
gs
ljmp
insb
mov
push
inc
mov
loopne
sarb
pop
sbb
repnz
pop
adc
pusha
xchg
subb
xchg
add
fcoml
cmpsb
sbb
inc
push
adc
sub
ss
enter
jle
xor
leave
cmpsl
je
sbb
xor
lods
fsubrl
add
shlb
in
sub
lods
mov
inc
rclb
jb
mov
lds
add
fisttpl
js
dec
mov
mov
xor
jge
sbb
test
adc
mov
call
data16
lds
dec
sbb
nop
inc
iret
push
test
scas
arpl
mov
mov
xlat
push
sahf
data16
jns
inc
mov
jg
js
addr16
push
rolb
mov
push
mov
or
jp
and
jp
xor
jne
or
addr16
test
bound
mov
sub
mov
andb
and
pop
mov
or
cmpsl
mov
mov
jne
mov
push
iret
sbb
pop
dec
or
je
aas
push
dec
sbb
fdivs
sub
pop
and
xor
je
clc
mov
movsb
xor
jg
aad
jmp
push
push
daa
jle
xchg
pop
push
aad
pop
jne
movb
sub
movsl
mov
sbb
xor
lret
mov
pop
xchg
or
stc
je
ja
mov
nop
scas
test
dec
xor
lcall
jae
js
push
ja
sub
jge
sti
add
sbb
sbbb
mov
or
jno
inc
inc
jge
push
call
lcall
xor
add
lods
sahf
pop
pop
stc
xchg
imulb
xor
lods
add
je
fucomp
push
js
mov
mov
inc
movups
and
add
cltd
ficoml
outsl
out
dec
lret
add
testl
loopne
inc
cmp
mov
jecxz
sbb
cmp
gs
rcll
pop
add
push
pop
icebp
push
dec
push
dec
mov
js
jl
sarl
dec
push
inc
push
inc
mov
xor
jno
dec
sbb
mov
cli
iret
inc
add
mov
ffree
jecxz
add
test
xchg
inc
lea
cmpsb
adc
sahf
or
rorb
push
jg
ret
ficompl
inc
es
rolb
jg
test
jbe
dec
data16
rorl
mov
push
shl
fisttpl
and
pop
call
xchg
lods
stos
in
inc
adc
or
push
push
sub
sub
mov
sub
push
inc
ret
mov
push
movsl
dec
aad
add
pop
mov
sbb
sub
mov
mov
pop
leave
enter
add
mov
inc
cmp
pop
call
inc
movsb
cmpl
jne
push
mov
loop
in
and
lcall
mov
xor
sbb
push
psllw
in
mov
mov
loope
std
xor
movsb
lret
in
dec
add
aad
repz
mov
sub
inc
sub
shlb
inc
jbe
adc
out
cmc
mov
ret
pushf
dec
sbb
idivb
fmuls
inc
mov
pop
xor
xor
dec
xlat
adc
jmp
dec
xchg
jnp
add
cld
inc
rorl
dec
mov
pop
push
imull
gs
mov
pop
pop
push
adc
js
fistps
adc
or
ret
mov
cmp
add
mov
mov
add
jne
call
lea
stos
adc
je
push
sbb
pop
mov
or
inc
and
mov
push
or
sbb
loope
enter
push
rclb
mov
or
inc
and
sbb
xor
dec
test
mov
sub
xchg
outsb
sub
push
sbb
movsb
cmp
mov
jns
fdivrs
cmp
and
inc
iret
aas
in
push
cmpsb
mov
push
in
cmp
or
int
cmp
inc
ss
mov
mov
fstpt
out
push
jge
sbb
lock
xor
out
dec
call
std
iret
add
pop
pop
ret
pop
prefetchw
cmpb
xchg
pop
imul
pop
cmp
adc
cmp
dec
std
sbb
add
push
xor
imul
inc
clc
mov
pop
out
je
lea
push
mov
pop
xor
lret
adc
enter
mov
fmull
mov
dec
cmpsl
mov
jle
push
lea
gs
push
mov
out
pop
push
mov
test
push
jo
inc
inc
pop
stc
cmp
or
cmp
sarb
mov
mov
push
sub
cwtl
xor
insb
or
scas
repnz
or
inc
clc
jbe
lea
inc
or
and
cmpb
lock
sub
jbe
sti
int3
test
cld
movsb
jle
je
or
jg
movl
dec
or
and
loope
xchg
mov
mov
cmp
xorb
cli
mov
lock
fadd
sub
mov
ret
sbb
fcomip
add
aaa
cltd
push
push
mov
or
je
pmuludq
mov
lahf
sub
push
push
int3
jecxz
clc
rclb
push
into
int3
clc
or
jl
dec
sub
int
dec
std
mov
push
push
push
push
push
xor
xor
cmp
push
shrb
test
pop
add
in
jle
jo
shr
add
dec
in
aaa
in
pop
cmpsl
shrb
pop
or
pop
ja
mov
dec
cmp
out
ss
inc
or
mov
cmp
ret
jecxz
inc
pop
arpl
mov
dec
scas
ret
lock
lea
lea
loopne
xchg
ret
ja
adc
scas
and
xchg
les
ret
xor
stos
aas
cltd
xor
cmp
ret
es
dec
sbb
sub
xchg
bound
add
and
mov
xchg
and
inc
mov
push
adc
mov
in
lcall
test
xor
cmp
mov
cmp
or
cmpsb
bnd
cmp
cmp
jbe
addr16
mov
adc
inc
xchg
cmpsb
ljmp
rcrb
sbb
je
or
fadd
cmpsl
or
push
bound
mov
mov
outsb
jae
out
push
call
jo
pop
push
sbb
imul
dec
sbb
es
mov
das
pop
add
adc
popa
fistps
sbb
xor
sub
pop
pop
push
fcmovu
nop
rcr
xchg
fwait
mov
nop
lock
data16
mov
cmp
pop
and
sub
outsl
cmp
xor
xor
cmp
dec
jmp
nop
xchg
scas
inc
jo
je
jl
outsl
divl
test
rcrl
nop
xchg
xchg
out
mov
pushf
mov
in
pop
mov
das
call
lahf
inc
mov
bound
repnz
test
test
mov
mov
jns
lods
sub
jne
mov
cmp
ret
mov
inc
outsl
fstps
lock
sahf
mov
lcall
sbb
inc
clc
push
test
pop
jmp
adc
and
fdivl
mov
negb
rclb
jno
sub
cmp
pop
and
adc
dec
ret
sbb
sbb
aad
xchg
insb
add
pushf
and
fistpll
jmp
adc
out
dec
clc
js
adc
cmp
loope
mov
rorb
push
sahf
adc
jo
scas
sbb
and
dec
lock
push
push
fisubrl
aas
fistpll
xorl
sub
in
dec
loop
call
push
xchg
push
je
aas
loopne
xchg
jg
je
or
xor
jmp
out
inc
push
jo
dec
dec
add
scas
test
sarb
das
lea
movsl
add
outsl
pop
jne
push
push
mov
jp
into
push
leave
fdivl
mov
gs
inc
arpl
mov
incl
jae
push
xor
inc
call
mov
jp
je
scas
lods
cmp
adc
mov
enter
push
add
adc
xchg
movsl
xchg
xor
scas
adc
xor
cmc
and
sub
dec
pusha
inc
add
add
sbb
loope
sub
enter
fistpl
fistps
inc
pop
or
inc
nop
pop
inc
in
adc
xor
shlb
xorb
daa
push
or
imul
aaa
or
dec
cli
addl
mov
or
or
sbb
fmuls
push
cmp
mov
int
jne
cmpl
push
sbb
hlt
add
push
and
lret
into
mov
mov
add
jo
pop
and
mov
or
cmc
insb
js
call
lret
lods
sub
dec
mov
das
stos
mov
lea
push
sub
inc
loop
jae
pushf
sahf
cld
push
mov
jo
imul
out
mov
xor
push
fnsave
xchg
add
push
push
inc
icebp
sub
dec
test
lea
sub
jl
inc
add
xor
adc
xor
pop
and
mov
add
data16
sbb
xchg
cmp
insb
sahf
sahf
jl
xchg
adc
or
adc
push
xor
sub
and
inc
loopne
or
add
inc
lock
dec
cmp
or
cld
cmp
dec
lods
test
adc
ret
and
cmp
bound
ficompl
lcall
and
push
or
mov
xchg
gs
cltd
push
or
xchg
mov
inc
cli
lret
or
or
and
push
push
addr16
inc
loopne
inc
cmp
mov
sbb
push
jo
mov
movl
addl
pop
xchg
mov
mov
js
inc
fistl
jp
scas
push
mov
xchg
or
insb
aam
add
cmp
cmp
jb
push
cli
pushf
ss
in
push
cmpl
dec
sbb
sbb
dec
push
out
push
repz
js
movl
cmp
xor
dec
sub
loopne
mov
jne
insb
add
pop
cmp
daa
fstl
loopne
cmp
lock
decb
push
push
jns
mov
inc
inc
or
dec
fcoms
lret
jnp
dec
fdivl
add
es
push
rclb
adc
loope
pop
scas
push
jle
mov
pop
push
jb
insb
aaa
adc
outsl
inc
std
inc
shlb
mov
test
adc
xlat
push
add
xor
cmp
push
jl
int
inc
ljmp
dec
cwtl
push
inc
stos
mov
adc
mov
xchg
xchg
std
jbe
adc
adc
sbbb
test
nop
lea
jnp
dec
enter
sbb
in
jnp
jmp
in
dec
cmp
sbb
jg
shrb
cmp
add
and
fistpll
adc
push
add
xor
fstl
adc
mov
adc
adc
sub
push
add
mov
pop
movl
adc
adc
cmp
jmp
mov
lahf
push
push
mov
test
jb
das
mov
pushf
sub
add
xor
fs
mov
inc
sbb
sbb
repz
fcomps
pop
push
jb
xor
cmp
cld
lret
xor
push
aad
scas
inc
inc
dec
cld
mov
or
push
and
lock
adc
jge
xor
sub
push
xchg
or
clc
cld
scas
jo
fmuls
aad
dec
cmpsb
cs
jo
xor
push
mov
adc
and
adc
aad
xchg
sbb
scas
xchg
rep
add
cmp
sub
push
sub
fxch
mov
das
jo
sbb
ffree
jns
jmp
xchg
aas
sub
dec
subb
inc
arpl
adc
jmp
xor
cmp
outsb
sbb
mov
push
pushf
xchg
push
mov
mov
cmp
ret
test
sbb
inc
adc
xor
pushf
je
xchg
call
adc
cmp
lea
mov
mov
or
test
mov
inc
inc
push
jne
out
test
pop
cmp
int3
add
push
inc
repz
lds
mov
xchg
adcb
mov
xor
mov
mulb
push
xor
lods
xchg
or
jle
adc
je
subl
push
test
daa
test
call
loope
js
mov
fisubs
sbb
getsec
repnz
enter
or
sbb
arpl
mov
pushf
mov
push
aaa
dec
adcl
imul
or
sbb
sub
icebp
lret
mov
decl
sbb
sahf
sub
int3
cmpsl
mov
mov
jno
push
inc
and
adc
data16
insl
or
dec
adc
adc
jle
add
and
aaa
jbe
jne
jl
pop
jge
mov
push
clc
and
daa
dec
push
jne
iret
data16
xor
add
bound
dec
mov
sub
xor
sub
adc
ljmp
pop
inc
inc
add
push
and
pusha
andb
insb
addr16
movsb
mov
test
cmpsb
rclb
sub
shll
add
push
push
fwait
cmp
fsubr
sbb
mov
sbb
pop
pop
fs
mov
fisttpl
sahf
jmp
rorb
cmp
add
jne
insl
mov
bound
mov
pop
push
cltd
int
dec
pop
ret
lock
fcoml
mov
dec
pop
incb
xor
fdivr
mov
test
arpl
out
or
jo
fdivl
je
jnp
or
push
test
stos
xor
and
popf
add
lods
aad
rorb
fmull
mov
xor
mov
and
jb
addr16
xchg
jle
js
imul
push
cmp
dec
scas
push
dec
fldt
jo
pop
rorl
and
pop
pop
add
adc
outsl
mov
cmpsb
adc
sub
ret
push
or
loopne
push
jns
jo
xchg
inc
xchg
push
adc
sub
test
inc
pop
cmpsl
sbb
push
jb
cmp
sub
imul
mov
push
cs
inc
aaa
lock
bound
lods
not
add
push
push
inc
add
pop
jbe
call
cmp
push
xchg
das
std
or
cmp
lock
cmc
in
xor
sbb
add
inc
add
mov
repz
loopne
cwtl
mov
sub
inc
mov
rcl
jmp
mov
lods
sbb
mov
sbb
adc
mov
maxps
cmp
push
mov
paddsw
dec
shlb
ret
pop
jl
cld
or
shrb
and
pop
push
dec
inc
mov
or
lea
mov
in
test
popa
and
add
sbb
inc
fdivp
adc
repz
stos
sub
push
add
sarb
dec
push
push
das
and
xorl
push
lea
add
in
aaa
adc
cmp
mov
mov
popa
sbbl
sbb
fimull
add
mov
loope
cmp
jae
adc
jo
enter
js
add
mov
fcompl
and
lcall
adc
or
sti
hlt
adc
jbe
movb
notb
push
jae
cmp
movsl
push
movsb
repz
dec
inc
xchg
incb
pop
mov
jl
sbb
shr
inc
cmpsb
inc
sahf
jle
jle
decb
mov
or
push
add
test
aaa
rorb
in
or
add
adc
lea
jp
jl
das
imul
xor
and
or
mov
fdivrl
aaa
inc
jbe
xor
dec
xor
cmp
inc
pushl
cmpsb
push
les
push
je
cld
mov
mov
and
adc
mov
fs
and
or
add
mov
std
imul
rol
add
enter
and
cmp
lcall
testb
or
shl
sar
insl
cmp
jmp
add
adc
and
adc
fidivrs
adc
push
mov
divl
pop
lret
sti
mov
add
lea
into
or
repnz
mov
fsts
fptan
in
and
out
loop
scas
cmc
lcall
fisubrl
fimuls
sub
xchg
fidivs
aaa
sub
adc
inc
xor
divl
ljmp
xor
dec
leave
das
fcomps
testl
mov
jmp
decb
fistpll
enter
and
nop
imul
cwtl
std
jae
outsl
popa
pusha
dec
pop
shll
mov
cmpsb
aas
adc
push
mov
push
insb
fnstsw
and
mov
mov
sti
daa
sbb
lods
sti
jbe
bound
fdivrp
add
out
sub
mov
rorb
ja
repz
push
pop
pop
es
push
adc
mov
adc
stos
mov
into
or
jg
mov
adc
roll
fdivrl
cmp
fistpll
adc
add
cld
sbb
out
fcomp
out
gs
jle
and
sti
shl
cmp
sub
and
xor
ret
and
stc
add
cmpsb
in
dec
add
clc
mov
or
xor
add
loop
bnd
filds
dec
sub
aam
xor
jmp
inc
cmp
incl
xor
aaa
lea
rol
add
lret
xor
cs
jmp
adc
sub
and
insl
adc
shll
sub
das
add
or
in
ror
xor
add
xor
mov
inc
ljmp
pusha
adc
pushl
rol
lock
addr16
insl
scas
jnp
dec
mov
fcmove
xor
xchg
sub
out
bnd
mov
add
jle
sub
mov
pusha
push
jg
stos
xor
daa
mov
dec
and
aam
fimuls
lret
mov
sub
sbb
pusha
or
stos
add
rcl
push
rcrl
mov
sub
in
stos
out
add
clc
jl
pop
out
push
insb
push
gs
lods
les
into
push
or
mov
pop
inc
and
hlt
push
pop
out
imul
jecxz
negl
inc
mov
fldcw
fimull
cmp
sahf
out
xchg
stos
psubusb
mov
imul
or
jg
out
pop
gs
int3
or
and
xor
jge
out
lcall
or
lahf
sbb
pop
test
test
stc
sbb
out
out
fcompl
mov
xchg
aas
inc
repnz
cmpb
iret
nop
cld
sbb
repnz
adc
rcl
sub
not
xor
add
imul
or
enter
push
rcr
les
add
inc
cmp
cmp
es
inc
inc
add
mov
test
inc
aam
es
dec
cmp
outsl
ret
mov
inc
cmp
out
or
push
js
jecxz
xchg
popa
adc
mov
fs
loopne
subb
sbb
adcb
xchg
and
pushf
xchg
hlt
xor
idiv
jl
jge
test
jae
inc
rorb
and
add
outsb
sub
in
xchg
pop
mov
nop
push
mov
inc
cld
add
mov
cmpb
xor
mov
cmp
rorb
inc
adc
lods
xchg
mov
sbb
mov
jl
loope
std
dec
mov
lea
cld
daa
xor
fiadds
loop
dec
and
adc
mov
cmp
inc
mov
or
adc
push
sub
xlat
jl
roll
fwait
loope
aas
outsb
sub
push
push
mov
jmp
popf
scas
add
mov
inc
add
ljmp
je
in
es
ss
subb
mov
or
imul
adc
repnz
mov
sbb
xor
cmp
cmpsl
xchg
add
insb
pop
add
adcb
push
sub
jns
sub
mov
and
imul
imul
pop
rorb
push
inc
jecxz
jp
pop
fmuls
cmp
push
sbb
shlb
mov
inc
inc
dec
inc
inc
xor
inc
insb
push
or
das
push
jb
or
les
fs
push
pop
add
subl
pop
or
loope
movsl
dec
xchg
push
cmp
dec
sbb
mov
fmul
inc
push
push
out
push
stos
mov
or
add
inc
adc
popf
test
sub
js
push
add
pop
xchg
movsb
rcr
movsl
popa
mov
adc
imul
test
adc
push
dec
lods
mov
sarb
cmpsl
lahf
sahf
mov
mov
aas
fs
push
push
push
fdivrl
fmul
sbb
or
adc
add
pushf
push
addr16
loop
sti
adc
or
mov
icebp
push
mov
sti
pop
testb
or
rclb
mov
sub
mov
rorl
push
fwait
cmpsl
mov
hlt
mov
inc
or
mov
mov
inc
add
cld
ret
dec
xchg
jg
cli
cmp
popa
push
incl
loopne
sarb
push
push
enter
inc
xchg
add
xchg
aas
call
mov
xlat
mov
jb
add
jg
fwait
push
add
inc
loope
lcall
or
sbb
fsubl
sub
adc
xorl
pop
or
inc
sub
pop
and
or
jmp
rcr
call
in
mov
mov
outsb
add
push
sbb
out
in
inc
sbb
dec
dec
and
lock
xchg
imul
scas
mov
push
push
in
test
dec
push
imul
and
iret
pop
or
add
and
insb
or
add
into
int
bound
mov
or
xor
idiv
mov
stos
xor
adc
adc
adc
test
scas
push
mov
lods
or
rorb
pop
mov
push
jle
dec
fimull
lgs
xlat
data16
inc
pop
jbe
outsb
sbb
test
add
les
adc
test
js
jae
pop
ficoml
dec
frstor
movsb
jle
mov
xor
cmp
add
lock
in
call
or
mov
inc
hlt
rclb
int
int3
lret
lret
gs
enter
mov
mov
mov
iret
sbb
push
xor
mov
jge
cmp
lret
and
mov
add
loopne
sub
lahf
lcall
mov
leave
cli
and
cli
add
test
cmpb
or
inc
rol
repz
rorb
mov
and
add
add
jmp
insl
pop
test
mov
daa
push
or
ret
aas
push
jl
leave
in
pop
push
push
xor
out
cld
adc
jl
add
movsb
xor
mov
or
adcl
mov
movsl
or
xor
dec
loop
mov
mov
push
add
aam
shlb
cs
inc
sub
add
cmp
or
and
je
shl
test
jbe
sub
lcall
inc
je
mov
aaa
ret
sbb
sbb
and
xlat
jno
jecxz
inc
dec
imul
rclb
pop
jne
or
adc
scas
loop
xchg
test
push
inc
adc
and
adc
lock
mov
call
ss
bound
pmuludq
xor
add
faddp
dec
add
mov
scas
callw
movsb
cwtl
shl
xor
dec
jne
xchg
int
shl
divb
cmc
mov
enter
and
jno
mov
pop
mov
in
insl
jecxz
and
sub
and
pop
sub
add
mov
ret
iret
movsl
mov
xor
sbb
pop
outsl
add
push
repnz
push
mov
pusha
pusha
add
in
jo
ds
adc
sbb
mov
sbb
mov
add
mov
pop
cmp
or
jle
sbb
pop
push
sub
jns
or
add
aaa
xor
icebp
call
or
pop
push
cmp
nop
out
inc
mov
dec
xchg
push
daa
inc
outsb
or
push
jae
fcoms
sub
hlt
je
mov
repz
push
jp
popa
call
add
or
pop
lcall
jl
and
push
jle
fwait
cmp
xor
imul
pop
pop
mov
mov
sbbb
cpuid
imul
mov
or
hlt
scas
mov
pusha
fisubs
hlt
pusha
out
sub
movsl
cmp
cmp
xor
dec
imul
mov
adc
add
and
add
adc
dec
mov
push
std
std
fucomp
or
add
ljmp
clc
sti
lods
cmp
mov
dec
imul
or
int3
mov
push
hlt
and
and
fidivl
xchg
inc
jne
adc
rcrb
pop
jp
jp
neg
pop
frstor
sub
daa
pop
inc
sbb
jmp
dec
pop
jl
decl
cld
je
mov
jmp
jno
add
clc
addr16
jne
add
popa
mov
ucomiss
popa
mov
loopne
fisttpll
clc
jno
add
lea
leave
push
mov
mov
mov
inc
add
add
pusha
push
lret
dec
cmp
mov
mov
fdivr
rol
mov
inc
or
lods
push
in
mov
jb
pop
cs
mov
movsb
js
jo
bnd
pop
adc
sbb
rcll
loopne
xor
inc
test
cmp
rcrl
rorb
mov
insb
add
or
fldl
fcoml
movw
sub
dec
mov
idivb
dec
lock
movsl
xchg
pop
pop
pop
jmp
dec
pushl
xchg
xchg
cmp
mov
mov
ficomps
jb
and
leave
ret
testb
ffree
mov
orl
in
sbb
aad
fstp
std
pop
push
lea
daa
addr16
inc
hlt
jecxz
gs
inc
add
push
movb
xor
jne
arpl
jne
adc
nop
shrb
mov
cmp
cli
enter
fs
pop
sarl
cld
dec
jb
mov
into
add
adc
sbb
push
inc
scas
stc
testb
jne
addl
add
adc
or
fidivrs
xlat
adc
xchg
addb
jmp
push
jne
sbb
mov
or
fwait
push
cmp
loopne
inc
cmpb
movsb
cmp
inc
loope
jo
mov
adc
or
cmp
insl
jl
pop
ja
and
cmp
lock
ljmp
add
out
and
sub
push
add
inc
inc
inc
inc
lock
nop
and
ficoms
je
jmp
jbe
mov
mov
shrb
cmp
inc
and
gs
iret
sbb
add
sub
and
jb
xchg
xor
xchg
push
mov
xor
test
jmp
mov
sbb
mov
pop
roll
sub
inc
outsl
outsl
addl
into
enter
add
sub
jmp
jo
mov
push
or
adc
jp
test
ret
push
je
shl
sub
cli
jbe
cmp
clc
je
pop
pop
push
push
mov
and
icebp
ja
add
pop
push
and
mov
inc
movsl
mov
mov
test
rolb
push
pop
fcmovbe
fsubr
rcll
push
jmp
ja
push
insb
mov
sbb
push
jmp
pushl
xor
push
mov
push
push
repnz
adc
stc
cmp
rclb
adc
shl
jnp
mov
pop
ret
adc
xlat
inc
cli
sub
add
in
push
insb
mov
lock
sbb
roll
out
rclb
push
in
cmpl
or
in
cmpl
jb
rcrb
push
or
fildl
enter
sbb
inc
fildll
pop
inc
jne
push
mov
mov
cmp
shrd
adc
or
add
pop
pop
jo
mov
jae
adcb
cmpb
gs
push
mov
xchg
lret
incl
mov
mov
loope
push
mov
dec
inc
or
jle
mov
js
daa
imul
fsubrl
in
loopne
out
add
mov
divl
xor
in
sbb
ss
jp
jbe
sub
xlat
test
in
bound
cmp
je
cmpsb
fmull
adc
mov
lahf
push
pop
jmp
push
inc
cld
decb
sbb
out
jge
sub
orl
or
xlat
aas
movsl
call
push
push
aad
and
sbb
pop
jbe
and
sbb
pusha
pusha
lret
lret
sbb
add
xchg
in
shrb
sbb
push
or
hlt
mov
shll
xor
je
ficompl
js
movsb
lock
push
mov
inc
imul
daa
fisubrl
inc
xor
xchg
adc
hlt
inc
and
je
add
dec
or
cmp
out
cmp
cmp
xor
push
addr16
lock
inc
adc
mov
add
mov
or
mov
test
fs
mov
jb
scas
pop
or
add
xchg
cmovs
test
movsl
xchg
notl
jbe
mov
loop
ss
dec
add
sub
movsl
es
push
nop
movsb
cmp
jb
and
add
xor
in
out
push
sahf
push
push
dec
push
and
mov
dec
mov
decl
mov
or
scas
adc
jl
int3
cmpsb
push
push
pop
pusha
mov
add
inc
add
add
lret
or
push
mov
cld
lahf
out
mov
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
dec
je
cmp
or
lock
fsts
jmp
clc
loope
or
and
leave
ret
nop
inc
pop
popa
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
mov
out
jo
neg
adc
and
daa
stc
sub
or
mov
test
rcr
add
mov
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
ljmp
mov
or
push
xor
pop
lahf
out
inc
dec
push
addr16
sahf
out
sahf
sbb
sbb
adc
jns
out
adc
or
or
sahf
out
add
inc
test
or
aaa
icebp
xchg
xor
push
add
pop
andl
inc
ja
pop
les
into
movl
in
dec
or
cwtl
dec
fildl
mov
mov
push
inc
loope
and
and
xor
mov
sbb
mov
add
sub
je
xor
loop
or
sbb
ds
xor
in
cmp
dec
add
jns
xchg
add
add
adc
xlat
add
add
dec
add
mov
jno
je
lcall
flds
add
sbb
mov
adcl
add
jae
sub
or
or
or
pop
enter
or
pop
jns
cmp
or
loop
cmpb
or
nop
ja
mov
cwtl
in
jns
push
push
ja
and
pusha
nopl
push
adc
in
lods
xor
pop
adc
fwait
sub
cmpb
lret
add
popa
adc
adc
add
adc
add
inc
fisubs
cltd
and
enter
adc
and
push
push
push
pop
lcall
sbb
lcall
sbb
call
pop
enter
push
sbb
push
push
and
jb
xor
out
sbb
ret
jns
jge
sbb
inc
sahf
push
push
inc
push
pop
clc
decl
in
jne
add
add
sub
cmp
jae
dec
out
movl
xchg
add
mov
sahf
mov
ljmp
and
cmp
je
lcall
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
sub
sbb
dec
add
pop
enter
je
call
nop
testl
sub
ljmp
jmp
jmp
push
mov
lcall
xchg
add
pop
in
inc
in
sahf
sbb
inc
sahf
out
out
jge
int
or
sbb
pop
lock
enter
icebp
xor
cmp
pslld
pop
enter
repz
push
jns
leave
std
hlt
hlt
shll
pop
in
cltd
or
fwait
mov
cmp
push
inc
push
nop
negb
cmp
movsb
test
clc
clc
fmulp
add
clc
cltd
adc
inc
stc
in
cmp
lock
cli
cli
nop
adcl
inc
outsb
sub
je
cld
in
pop
repnz
jne
std
xor
nop
out
cmpsb
sbb
adc
inc
cmp
add
imul
sub
leave
test
rorl
adc
shlb
andb
es
jecxz
sbb
out
repnz
sti
in
in
xchg
stos
lods
mov
inc
mov
stc
daa
xchg
sti
out
fsubs
add
outsb
and
mov
sti
inc
add
pop
sub
sbb
cs
jmp
jns
jne
in
add
and
test
out
out
cltd
adc
enter
add
mov
das
cli
push
cli
nop
cmpsb
jb
sbb
scas
xchg
pop
insb
repz
sar
push
sub
cmp
mov
pop
stc
negl
scas
dec
div
pop
fwait
xor
jno
clc
add
stc
xchg
xchg
mov
clc
rolb
sub
sti
sti
cltd
push
nop
aaa
jb
cld
inc
cld
or
inc
pusha
mov
sbb
mov
je
add
pusha
loop
cs
mul
pop
dec
pop
and
shl
scas
testl
out
push
fsubs
out
out
and
mov
notl
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcrb
jno
les
and
and
and
negb
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
cmpsw
xlat
bound
lret
jge
rolb
sti
lahf
xchg
mov
adc
sub
cmc
pop
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
mov
push
adc
sub
out
pop
sbb
rol
in
enter
cmovno
push
add
mov
iret
add
stos
add
xor
sub
or
adcb
adc
or
mov
add
jmp
jns
fstl
sbb
rcrb
scas
or
xor
xchg
inc
push
fs
cmp
data16
leave
cmp
cmp
inc
pop
cmp
fwait
iret
repz
addr16
aaa
mov
cmp
shrl
cmp
daa
dec
int
mov
lods
xor
sbb
std
xor
outsb
jne
out
out
lcall
js
adc
je
imul
pop
add
push
cmp
cmp
add
cmp
jb
incl
push
flds
sub
mov
je
add
mov
shl
add
or
fnstcw
nop
je
rep
mov
dec
ljmp
mov
adc
or
xor
sar
mov
and
pop
xor
icebp
jge
pop
inc
inc
je
dec
jne
xor
dec
and
push
xchg
xor
shl
or
shr
loop
leave
xorw
mov
mov
or
pop
jl
add
fsubrs
jg
push
shl
jne
mov
or
or
add
jmp
pushf
cmp
adc
ja
lock
sub
and
add
adc
cmp
jb
iret
sub
or
or
push
sub
test
sbb
ficompl
xor
pop
sti
adc
inc
loop
xor
push
mov
mov
cmp
neg
cli
dec
mov
sbb
in
lods
movsl
sub
sub
fmuls
and
cli
stc
inc
rol
lahf
lahf
rorl
inc
jb
dec
js
test
pinsrw
push
adc
dec
cmp
decb
dec
addl
jne
cmp
scas
adc
jg
jl
or
loope
pop
jmp
push
adc
adc
xor
sbb
push
pop
das
inc
mov
ljmp
jae
addb
je
sbb
mov
mov
jle
cltd
inc
call
mov
pop
sti
sbb
mov
sub
stos
and
mov
cmpsl
inc
and
insl
mov
xor
and
add
scas
push
cmpsb
sub
pop
add
jge
push
subl
push
call
dec
lret
adc
mov
jne
cwtl
jmp
and
adc
inc
or
iret
and
push
je
cmp
js
adc
insb
adc
mov
cmpsb
lea
jge
js
aas
adc
movl
xchg
adc
xchg
xor
ljmp
loopne
sbb
or
push
idivb
repz
mov
xor
and
xchg
mov
and
push
rorl
ret
push
stos
test
js
lods
cmp
sub
dec
aas
or
xor
cmp
lock
mov
and
pop
mov
outsl
or
andb
lret
fstpt
ja
push
inc
xor
aas
sbb
ret
adc
divl
dec
mov
imul
cmp
inc
orb
aaa
adc
adc
sub
fdivl
shlb
movntps
push
shrb
fisubrl
dec
fs
outsb
sbb
jo
add
test
jle
clc
int3
shlb
push
pop
mov
push
and
icebp
test
test
pop
mov
test
mov
or
adc
fisubrs
fisttps
sbb
jle
sahf
cli
dec
push
ds
jae
mov
int3
adc
mov
cmp
jb
les
sahf
pop
inc
push
lock
iret
loop
inc
je
sar
push
lea
mull
mov
daa
sbb
push
pop
loopne
add
xor
adc
mov
scas
push
xchg
push
inc
dec
mov
sbbl
push
pop
jg
shrb
jp
mov
push
adc
mov
bound
cmp
shl
daa
test
cmp
rol
sub
ds
push
adc
daa
inc
das
pop
pop
dec
movsb
and
insb
cmp
in
jne
dec
pop
out
test
shll
adcl
nop
jl
push
cmc
mov
loopne
xchg
aaa
sub
loop
adc
and
sbb
push
loopne
cmp
ret
lods
and
xorl
inc
adc
push
push
jbe
push
mov
jmp
fimuls
cmp
pop
sub
inc
lods
mov
fsubl
pop
fsubrs
jne
lcall
add
in
cmpsl
ja
and
xor
mov
or
ret
push
dec
daa
and
leave
push
out
arpl
loope
adc
cmp
je
mov
add
test
xchg
mov
les
xchg
aas
push
inc
jg
mov
add
xor
xor
jp
add
adc
je
mov
jb
test
mov
push
mov
push
je
jmp
and
out
ret
adc
jecxz
jb
std
cld
pop
subb
and
or
outsb
inc
roll
pop
and
iret
inc
and
push
add
sti
jns
jmp
or
jmp
std
jmp
add
sub
pop
or
sbb
mov
mov
jle
sub
ljmp
in
pop
icebp
sbb
loope
xor
mov
ret
fistl
paddusw
jo
data16
imul
sub
addps
cmp
pop
dec
jne
insl
inc
inc
add
popf
enter
pop
dec
lahf
int
hlt
arpl
cmpsl
jne
mov
dec
jmp
adc
popf
adc
psubusw
ss
test
pop
cmpsb
pop
jmp
repz
mov
clc
add
fcompl
clc
or
adc
pop
fiadds
add
loop
sub
in
or
data16
inc
push
or
push
cwtl
push
add
add
shl
sub
pop
mov
jne
cmp
jne
and
xchg
mov
or
sbb
sbb
fdivrl
push
add
jne
sub
daa
shrl
ljmp
dec
or
aam
pusha
ja
adc
push
std
and
fsubl
subb
push
popa
push
rolb
stos
dec
call
mov
jmp
cmpl
inc
mov
xor
lret
mov
mov
fwait
das
je
sub
xor
push
pop
sbb
jle
jle
out
neg
mov
sub
je
mov
repnz
inc
call
clc
cmp
jbe
fwait
and
hlt
hlt
iret
jmp
push
jne
adc
fcom
adc
cltd
push
pop
ds
jb
jl
pop
int3
jge
push
lret
in
and
jne
je
mov
sub
lock
mov
repz
cmp
jbe
push
push
mov
repnz
inc
push
xchg
dec
nop
icebp
and
nop
loopne
shr
je
jbe
pop
sbbb
jbe
and
xchg
inc
inc
and
cmp
adc
push
pop
push
add
push
inc
mov
jne
push
mov
xchg
jmp
push
xchg
out
and
stos
movb
sbb
fstps
leave
mov
sbb
fadds
dec
adc
adc
loop
xor
bnd
mov
push
fwait
ds
add
add
mov
pop
adc
dec
dec
jle
je
das
loop
adc
dec
xor
or
or
clc
stc
or
js
lods
sbb
dec
sbb
xor
enter
mov
xchg
sarb
ret
jne
adc
push
fistps
pusha
sub
pop
add
enter
inc
loope
scas
enter
es
lods
inc
pop
in
adc
push
fildll
outsb
fsubr
mov
cs
push
push
and
adc
movsb
lret
mov
adc
scas
inc
cmc
xorb
nop
mov
pushf
repz
sub
pop
cmp
sbb
cmc
lahf
cmp
push
push
push
cmp
and
in
sub
imul
sbb
ja
adc
inc
adc
add
sub
or
sub
sbb
test
cmp
jne
or
jns
cmpsb
fstpt
popa
adc
call
jne
sub
mov
xchg
mov
add
jne
rorl
sbb
loopne
imul
xchg
testb
mov
shl
push
cmpsl
bnd
sub
mov
add
movsb
mov
dec
mov
bound
cli
sub
mov
mov
lahf
lcall
lea
and
inc
mov
rcrl
push
cmp
cmp
int
dec
mov
push
cmp
jne
es
adc
jne
jp
test
push
cmp
push
cmp
jmp
jns
fidivrs
sbb
jmp
std
in
in
out
std
jmp
cld
cld
jmp
fucomi
pmaxub
adc
adc
inc
inc
decl
jne
ret
jl
shll
push
enter
dec
add
out
push
mov
dec
pmulhuw
pop
lds
inc
and
and
and
clc
in
and
cld
push
mov
ljmp
add
pop
lret
in
imul
cmp
mov
jmp
mov
cmp
inc
push
leave
and
adcb
push
mov
popf
and
andl
adc
scas
aaa
mov
inc
iret
flds
jmp
andl
addr16
push
das
add
into
push
jne
mov
jne
ljmp
pop
sbb
insb
and
scas
std
pop
test
jns
dec
cld
inc
jmp
test
je
test
rcl
rcl
and
sbb
mov
push
sahf
pop
aad
mov
add
adc
pop
bound
in
inc
mov
inc
lods
or
rolb
dec
push
push
or
adc
inc
pop
dec
inc
and
add
inc
or
lcall
inc
pushf
dec
mov
ljmp
adc
fbstp
enter
lret
push
add
inc
fisubrl
xor
cmpsl
jge
iret
jmp
mov
mov
jecxz
test
jp
mov
cmpsb
ds
adc
insb
inc
sarl
imul
call
hlt
mov
je
sbb
cwtl
loop
xchg
sbb
cmp
sbb
cmc
inc
pop
and
and
test
sub
mov
jb
mov
or
aam
rcrl
pop
sub
ja
lock
add
test
filds
push
jmp
cmp
jb
aaa
jb
or
pusha
jge
subb
pop
clc
jb
or
ret
and
sub
jge
jecxz
popa
push
iret
fidivrs
fnstcw
push
outsb
hlt
jmp
sbb
mov
fstpt
push
sub
mov
shll
js
jg
add
insb
mov
pushw
or
inc
aam
mov
je
mov
cmpsb
jmp
sarb
push
xchg
int3
cmp
xchg
into
inc
or
and
push
mov
push
sbb
jae
jp
pushf
testl
loope
sbb
or
dec
aas
test
or
jmp
mul
imul
fs
lods
push
push
fcom
mov
push
pop
add
adc
jmp
cmp
or
adc
dec
pandn
dec
in
xorl
clts
mov
push
inc
je
xchg
or
inc
push
add
testl
orb
aad
sbb
pusha
inc
xor
dec
clc
mov
inc
pusha
inc
add
iret
mov
or
divl
add
jbe
cmp
or
push
jmp
inc
mov
lret
xchg
adc
lock
cmp
nop
hlt
ljmp
sbb
ja
push
das
add
ds
loopne
add
adc
inc
cmpsb
fwait
jle
loopne
loop
cld
and
jb
add
mov
sarb
cmp
jbe
lods
inc
orb
xor
or
repz
movsl
fisubs
adc
pushf
or
fstpl
iret
dec
ja
cmp
sarb
fcomip
dec
dec
mov
xchg
jmp
test
inc
mov
flds
inc
xor
test
ljmp
hlt
fiaddl
push
adc
add
sub
call
adc
dec
imul
pop
inc
push
pop
add
dec
push
add
mov
adc
and
jmp
lods
rcll
stc
aaa
or
adc
int
xor
jne
sbb
sbbl
and
dec
jae
and
xor
inc
aas
dec
dec
jge
adc
inc
mov
sarl
cmp
pop
addr16
fcoml
push
adc
and
loopne
shl
inc
push
jne
push
jns
inc
in
add
or
adc
cli
ret
lea
loope
add
or
in
inc
and
jne
push
sbb
push
or
stc
sahf
loopne
mov
and
inc
and
addb
cmp
jo
mov
adc
cmp
push
and
test
fstpl
movsb
clc
sbb
dec
loopne
xchg
rorb
push
push
sbb
push
daa
sbb
push
or
push
sbb
pop
and
inc
xlat
mov
fs
push
or
pusha
jno
xor
push
xor
mov
pushf
js
push
add
int3
and
sub
or
inc
push
sub
pop
repz
jecxz
mov
jne
addl
loope
sub
dec
outsb
in
or
or
xchg
or
pop
pop
add
pop
pop
add
add
pop
pop
pop
lcall
pop
pop
or
pop
shlb
pop
pusha
and
lcall
pusha
pusha
sbb
mov
jae
or
popa
popa
xor
shll
popa
popa
popa
popa
imul
popa
push
or
leave
lahf
int
add
adc
call
pop
jne
out
add
out
ja
add
xchg
pusha
jne
sti
lret
mov
push
push
push
ror
pop
or
or
ss
xorb
call
dec
stos
sbb
in
mov
mov
jae
fsubrl
add
repz
and
sbb
mov
jmp
xor
adc
push
mov
or
mov
inc
fildl
or
sbb
subl
push
dec
and
sbb
add
fisttpl
cmp
lds
inc
orb
jl
pop
add
lret
sahf
push
sub
addb
je
cwtd
add
sub
jp
add
add
push
push
add
adc
stos
push
push
les
fisubrs
lods
fdivrs
and
mov
sub
je
dec
sbb
xchg
dec
jp
pop
test
ljmp
test
jmp
cmp
je
inc
adc
adc
adc
xor
jae
sbb
cld
and
push
sbb
cmpsb
jo
mov
xchg
adc
iret
jne
sub
mov
jo
daa
mov
fldl
mov
cs
dec
dec
scas
or
or
push
mov
sbb
pop
and
iret
int3
rorb
sti
xor
or
cld
shl
je
pusha
lcall
push
sbb
jbe
push
inc
inc
bound
pop
outsb
int
push
insb
mov
imul
cmp
xlat
jne
push
pusha
fcomps
jne
jne
sub
cltd
xchg
insl
sbb
mov
cmp
shrl
dec
into
fsubs
scas
jg
ja
test
sub
sar
lea
roll
lea
mov
add
push
movzbl
movsbl
and
sar
cmp
push
addb
pop
movsl
test
add
cmp
decl
orb
mov
and
or
adc
daa
sub
mov
call
or
loop
and
mov
in
push
insl
and
cmc
adc
jge
pop
sbb
rcrb
je
fs
cwtl
rol
and
repz
jl
ds
xor
push
mov
fwait
and
sub
rorl
sbb
les
sarb
jecxz
jl
cmp
loope
xorl
add
bound
push
roll
out
pop
add
pop
testb
aam
add
in
push
mov
lods
jne
or
mov
dec
fists
out
pop
mov
sub
test
cli
dec
jne
les
fmull
xor
imul
testb
fs
mov
sub
xor
je
loopne
das
jo
es
and
rcrl
xchg
adc
cmpl
popf
push
loop
lods
or
push
fwait
or
and
fiaddl
test
xor
jl
sub
ret
adc
in
mov
movd
mov
scas
rcrb
andl
add
out
sub
imul
pop
jmp
test
sub
sub
jge
and
and
in
sbb
xor
cmp
push
xchg
adc
sar
movsb
sub
jle
aam
pop
sarb
cmp
fisttps
mov
inc
xchg
push
shrb
push
shrb
rolb
mov
test
inc
mov
sarl
fdivr
das
cmp
jne
cmc
pop
push
stos
push
decl
cld
mov
mov
adc
add
jne
or
sbb
ds
jmp
in
lds
loopne
cli
popf
pushl
push
das
add
mov
dec
pop
insl
orl
dec
xor
add
aam
jb
call
push
imul
pop
add
pop
mov
fs
daa
popa
xor
cmp
test
add
push
mov
inc
clc
add
shll
lea
insb
dec
sub
or
popa
push
push
push
pop
lret
add
push
in
push
test
jnp
in
dec
insb
mov
lods
movzbw
mov
les
inc
insb
pop
cld
push
push
popf
xor
jnp
push
push
jae
ljmp
cld
or
cmp
in
or
mov
xchg
push
fdivr
push
mov
and
cmp
jne
fldl
pop
pop
jp
mov
jl
je
jecxz
rorb
xchg
push
jb
add
add
cmpl
add
pop
insb
and
sub
ljmp
sub
dec
fldz
faddl
roll
lods
inc
jp
loopne
mov
shl
add
clc
js
cmpsb
adc
sub
fidivrs
adcb
dec
xchg
decl
in
repz
push
jg
cmp
jbe
pop
or
sub
add
add
cmc
pop
xchg
shr
test
pusha
inc
lcall
pop
sub
inc
inc
call
jge
mov
inc
adcl
push
lea
add
lods
ret
cmp
push
mov
ret
sub
outsl
cld
mov
or
icebp
inc
ljmp
je
mov
rolb
movsl
adc
leave
add
testb
pop
mov
cmp
jae
pop
cmpb
jne
test
add
inc
cmp
jb
cmp
push
dec
hlt
movsl
sub
inc
sub
pop
ljmp
sbb
loopne
mov
std
pop
and
add
sar
aam
sbb
jmp
testb
xor
and
or
pushf
sub
and
mov
enter
mov
or
bound
shll
rcl
pop
negl
jmp
arpl
imul
jge
xor
ja
call
sbb
test
adc
inc
sbb
jmp
je
push
jbe
movsl
es
mov
push
rclb
push
jbe
or
mov
xchg
xor
xchg
stos
or
test
push
lods
xor
push
inc
jnp
push
xlat
push
push
iret
or
inc
push
xor
stc
xor
int
scas
sbb
push
pop
pop
leave
sub
pop
in
dec
lret
and
sbb
sbb
adc
pop
jecxz
lock
push
inc
pop
inc
lea
fwait
pushf
subb
data16
fmull
nop
or
lea
add
mov
shll
cmp
arpl
imul
sbb
push
push
shll
sbb
cld
cmp
jl
jbe
mov
add
sub
push
ds
adc
mov
adc
mov
add
mov
rol
xchg
fisubrl
pop
aam
cltd
sbb
push
hlt
jmp
cld
jge
mov
popf
rcrb
in
mov
mov
ret
xor
or
je
sbb
test
mov
mov
incb
jl
push
pop
pop
lea
ret
add
fiaddl
jl
and
out
sbb
in
or
addr16
pop
add
mov
jl
adcl
mov
pop
push
push
arpl
pushf
leave
cmpb
jg
hlt
imul
xlat
test
out
jg
mov
cmp
das
jl
xorl
clc
aas
jo
dec
or
pop
jmp
add
push
push
adc
and
jge
mul
jne
add
mov
push
sbbb
jp
arpl
insb
pop
cmp
pop
push
lds
test
push
and
push
jl
sbb
jge
test
adc
jge
addr16
insl
lods
jbe
pop
pop
jge
xchg
mov
adc
leave
loope
outsb
push
adc
and
clc
jmp
adc
incl
add
fnstsw
fwait
sahf
jp
fstp
adc
add
clc
jbe
mov
inc
dec
push
pop
dec
mov
adc
scas
fs
push
push
inc
pop
add
stos
ret
or
subb
imul
add
jmp
imul
wbinvd
mov
lret
push
jl
jg
xchg
pcmpgtd
jne
insl
bound
mov
adc
add
and
adc
cmp
sub
cli
fidivrs
dec
add
mov
jl
clc
incl
and
push
cltd
sub
xchg
sbb
test
inc
cwtl
jge
mov
std
mov
daa
inc
into
jne
dec
rolb
adc
jle
cmp
mov
xor
sub
adc
sbb
push
imul
stc
insb
mov
adc
nop
dec
movsl
and
jnp
stc
add
je
push
loope
movb
add
test
fisttpl
mov
clc
sub
ret
fsts
jmp
sub
fiaddl
outsl
push
pop
cmp
add
jl
adc
js
jge
cmp
mov
jbe
aaa
adc
fs
add
add
sub
fisubl
addr16
sub
sbb
xchg
inc
cmpsb
or
or
xor
imul
xchg
shr
sub
leave
jbe
adc
pusha
cli
cltd
pop
idiv
add
mov
cmc
jl
out
cmp
int3
cld
lea
dec
push
push
shrl
and
dec
insl
int3
or
cmp
pop
pushl
mov
sbb
adc
mov
adc
imul
adc
sbb
adc
xor
mov
and
and
push
mov
test
aas
adc
fdiv
jo
push
and
or
sbb
sti
dec
dec
je
dec
sub
and
add
test
gs
push
notb
pop
div
fcoms
jae
out
je
cmpl
aaa
ljmp
in
loopne
daa
sbb
and
mov
sub
call
stos
nop
push
fnsave
jnp
movsb
push
dec
mov
pop
push
mov
pop
or
jecxz
pop
les
pop
mov
fdivrs
rolb
mov
sbb
test
mov
sbb
cmpl
decl
jbe
xor
cmp
ret
xchg
add
fildl
clc
stos
mov
or
gs
fidivl
jl
xchg
jle
mov
lahf
dec
sarl
adc
mov
pop
push
adc
fsubs
dec
or
stc
push
adc
and
in
push
decb
mov
mov
pop
les
mov
enter
or
or
push
mov
push
mov
jb
add
sub
or
xor
dec
loop
insb
gs
cmp
insl
inc
dec
xchg
jl
adc
fdivs
push
and
adcl
out
shl
add
adc
andl
data16
dec
sub
add
inc
jp
mov
or
sbb
loopne
adc
inc
push
shlb
push
je
pushl
push
iret
lret
insb
mov
mov
or
sbb
push
add
test
fsubl
or
add
popa
jno
or
add
add
test
shll
sbb
pop
popa
hlt
mov
push
pop
jno
jbe
mov
loopne
movsl
xchg
jle
sbb
pop
nop
testb
je
add
adc
inc
cltd
add
pop
lock
loopne
adc
sub
dec
loope
sub
mov
pop
or
push
jecxz
mov
push
or
movsl
adc
pop
push
xor
call
cmp
into
enter
inc
add
add
xchg
shll
lea
stos
add
ja
push
pop
sub
mov
adc
jne
lea
repz
xchg
or
icebp
push
in
fsubl
or
lds
sub
xchg
mov
adc
loope
out
mov
mov
test
mov
notl
and
push
lea
dec
aaa
enter
ja
sub
inc
xchg
inc
push
or
adc
inc
mov
inc
fcom
jbe
ja
mov
fdivr
ficoml
push
push
mov
add
add
imul
push
cmp
sbb
xchg
inc
inc
ficoml
add
push
fndisi(8087
and
mov
test
push
orb
cmp
mov
adc
xchg
pop
jmp
movb
aad
jmp
mov
test
mov
jne
sub
mov
cmp
and
sti
sbb
lret
add
jmp
cmp
push
outsl
inc
mov
ljmp
cmp
jb
or
pop
xor
pop
fildll
push
jo
push
mov
pop
inc
jo
sbb
pushf
ja
movsl
dec
lods
push
ret
inc
or
rolb
jmp
push
sbb
add
jno
mov
dec
mov
mov
push
cld
shll
adc
imul
mov
rcll
jecxz
or
rorb
test
add
jne
movl
in
inc
and
cmp
std
jne
pop
sbb
xor
jmp
sub
lock
jmp
movsl
inc
adcb
inc
xchg
push
pop
lods
or
cmp
sbb
push
pop
pusha
insl
int
cmp
pop
cmpsl
nop
xchg
pusha
mov
cmp
or
in
push
mov
fs
mov
cmp
and
call
adc
lea
push
inc
rolb
fistpll
jae
cmp
jbe
out
movsb
iret
lahf
cmpb
jne
mov
cmp
or
inc
pop
leave
inc
js
cli
stc
bound
leave
xor
xchg
sbb
lds
xchg
jg
fcomp
sub
add
jmp
loopne
subb
cmp
lcall
out
inc
inc
add
mov
shrl
add
adcl
xorb
xor
inc
cmp
mov
mov
mov
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
test
ds
sub
add
jbe
sbb
jle
out
ds
sbb
jo
mov
inc
dec
jne
rolb
lods
shr
movsb
mov
test
mov
rclb
test
xor
sub
mov
push
pop
outsb
adc
arpl
push
sub
dec
shl
or
and
popl
popf
leave
pop
lcall
mov
sti
rep
andl
or
ficoms
pop
mov
jne
pop
push
push
icebp
or
sub
xlat
push
mov
adc
bound
jb
xor
sbb
std
jb
sub
and
push
insb
lret
stc
or
jo
enter
xor
jge
loopne
fbld
dec
loop
pop
sub
jmp
xor
add
mov
mov
add
push
bound
ret
ss
lods
out
arpl
xchg
jne
pop
shll
ljmp
outsl
cmp
and
inc
and
push
mov
jmp
mov
or
xchg
push
push
addb
jmp
insl
fcompl
add
js
dec
xchg
mov
mov
pop
or
jne
sbb
cltd
sub
pushl
xchg
inc
mov
pushf
cltd
sub
lahf
das
imul
rolb
and
int3
call
int3
pop
mov
andb
and
push
mov
push
xchg
cmp
cwtl
mov
jne
push
push
mov
jle
cld
pop
pusha
dec
or
push
cmpl
shlb
cmp
les
sub
adc
add
cmp
insb
add
leave
loopne
loop
mov
inc
mov
rorb
sub
sbb
outsl
aaa
cmpl
push
pop
mov
jo
xor
sub
out
xorl
inc
sub
xor
leave
leave
movb
je
push
mov
rcrb
sbb
and
in
mov
dec
jb
rcl
mov
pushl
lock
jo
and
es
sub
add
in
cli
lea
ds
mov
cmpsl
testl
push
in
sbb
jbe
pop
mov
adc
cmp
add
fimuls
mov
push
cmp
inc
bound
xchg
cmp
xor
aas
sbb
mov
mov
adc
repnz
jl
push
enter
aam
sbb
cld
imul
xchg
ss
arpl
or
cmp
and
and
dec
mov
push
mov
lods
fsubl
mov
or
aas
push
jno
fnstcw
js
cs
and
repnz
testl
into
jb
push
and
mov
adc
sub
cmp
xchg
shr
mov
push
jo
xchg
in
insb
inc
xchg
inc
or
add
sar
push
test
jno
or
sbb
rorl
mov
in
push
bound
add
cmp
loopne
adc
pop
ret
pop
aaa
inc
sub
cmp
ds
stos
cmp
inc
enter
enter
add
lea
lods
xor
sbbb
rorb
icebp
mov
mov
xor
push
clc
repz
dec
imul
mov
sbb
nop
add
nop
cmp
inc
cwtl
lds
cmp
cmp
mov
aam
push
sub
xor
mov
arpl
adc
push
dec
jbe
jmp
jl
jbe
and
pop
cmp
add
dec
je
jle
or
or
scas
clc
jne
outsl
xchg
std
insl
fsubrl
pushf
jg,pn
jge
jl
push
sub
bound
daa
rcll
mov
aas
pop
pusha
cmpsb
pop
adc
cmp
or
in
pop
hlt
andb
je
sbbl
mov
push
les
cwtl
pushf
cmp
jb
nop
mov
push
fnsave
mov
js
movsl
imul
mov
stos
test
stos
addl
ja
add
ja
mov
test
xchg
jecxz
push
add
mov
cmp
sub
pop
mov
iret
test
loope
int
gs
cwtl
pop
dec
inc
andb
add
test
or
pop
cmp
pop
das
and
mov
test
xchg
sub
call
ljmp
fmul
jbe
xor
das
outsb
pop
xor
mov
or
push
push
fisubrl
sub
loopne
fcoml
push
popf
aam
sarb
clc
pop
pop
pop
jle
in
popf
enter
shlb
jg
lods
mov
dec
outsl
or
mov
cmp
imul
cld
adc
cmp
mov
add
add
rol
add
xor
sub
adc
fcoms
push
lea
or
dec
lret
push
rorl
add
int
adc
cld
pop
push
outsb
cmp
cltd
xchg
sar
mov
dec
data16
test
pop
jmp
jge
loope
adc
mov
pusha
add
pusha
arpl
inc
cmp
jb
mov
aad
lea
push
adc
sbb
ss
aad
in
adc
mov
adc
or
jne
enter
mov
and
ret
fidivs
cmpsb
push
mov
pop
lcall
jne
xor
push
sbb
rolb
inc
sbb
jae
or
insl
stc
je
cmp
test
lock
sbb
xor
into
sti
mulb
push
lock
mov
fcoml
mov
push
adc
shrb
push
add
add
pushl
push
push
movb
push
jl
push
mov
in
cmpsl
xchg
add
inc
cmp
cmp
sub
add
push
mov
loopne
push
push
pop
add
add
repnz
out
push
and
push
out
add
push
dec
pop
mov
and
loop
inc
and
lsl
cld
xor
outsl
loopne
lea
and
addb
das
add
xor
lahf
pushl
imul
stc
daa
xlat
lock
je
out
pop
jne
inc
add
push
mov
xchg
mov
enter
aas
cld
sti
out
cmc
mov
cmc
mov
mov
push
add
mov
xchg
loop
pop
scas
mov
jl
es
and
imul
xchg
and
xchg
push
cli
and
cmp
cli
adc
cs
call
pop
push
pop
hlt
std
mov
test
jl
push
pop
lcall
add
ja
xchg
pusha
out
add
ja
mov
rcrl
rorb
jl
sbb
adc
mov
hlt
push
push
jmp
push
insl
loopne
lcall
lea
jl
push
push
popf
into
push
jne
push
ret
xchg
push
adc
add
insl
sub
or
arpl
or
lea
fnstsw
mov
mov
mov
mov
push
mov
jnp
add
movl
fimull
xorb
xchg
scas
mov
in
add
rol
mov
fiaddl
add
jb
or
loopne
mov
cmp
roll
mov
dec
sbb
xchg
ret
pushf
rorb
xchg
adc
push
or
sub
bound
sbb
lds
stc
jb
mov
add
sub
subb
jb
inc
ds
sub
push
hlt
push
push
adcl
push
push
std
fstl
xor
add
mov
jns
lods
adc
loopne
in
push
cs
shrb
loope
andb
mov
shr
negl
add
dec
sahf
mov
mov
js
add
add
cmc
test
jbe
pop
rorb
push
jle
pushl
push
mov
lea
loopne
push
or
push
sub
sbb
popf
call
mov
add
dec
dec
sbb
jecxz
jne
add
inc
imul
push
dec
mov
ret
adc
xchg
iret
xor
cmp
ret
fimull
pop
testb
dec
jmp
dec
push
call
mov
leave
mov
sbbb
mov
test
dec
xchg
andb
mov
dec
cmp
leave
jo
mov
mov
adc
adc
inc
dec
aas
adc
call
jge
and
je
and
add
jb
hlt
jno
inc
push
sarb
jae
loopne
mov
xchg
dec
cmp
push
dec
push
cmp
sbb
adc
xor
aas
pop
or
pop
or
call
push
sub
sarb
add
loop
or
dec
or
add
xor
push
or
adc
loope
xchg
addl
push
leave
inc
js
push
leave
outsb
adc
scas
rolb
mov
out
push
ret
cmc
sbb
add
xor
mov
fsubr
push
lret
cmp
fsubrs
or
mov
int
mov
rclb
cmp
or
jne
push
addb
shlb
int
jne
pushf
inc
push
fadds
and
push
fdivp
pusha
test
pusha
rolb
or
and
fldcw
lock
cmp
jge
imul
in
fistps
pop
andl
cmp
or
jle
cmp
jl
js
fs
mov
or
inc
subl
sbb
lret
cmp
xchg
gs
sub
adcb
push
cmp
xchg
pop
xor
lahf
icebp
mov
jbe
loopne
rclb
fs
push
sbb
test
inc
sbb
pusha
lea
mov
pminub
ja
sub
add
sbb
mov
ret
jge
shll
add
cmp
jae
cmp
loop
pop
aas
enter
mov
lock
xorb
xchg
mov
fsubrs
mov
pop
out
dec
add
and
or
sub
fsts
jne
test
mov
jle
mov
jp
es
sbb
cltd
data16
xchg
sub
je
shll
push
push
cmp
adc
mov
and
and
mov
popa
popf
jb
mov
jo
sub
dec
push
push
pop
lcall
fcomps
les
push
in
dec
scas
jno
pop
inc
cli
sti
or
outsl
ss
sti
add
sbb
inc
pusha
cs
aaa
in
jne
sbb
inc
mov
enter
mov
out
sbb
jge
mov
mov
push
pop
push
inc
pop
adc
movl
adc
sbb
push
push
dec
jmp
mov
adc
adc
adcb
xor
aaa
xor
cwtl
and
adc
mov
push
push
adc
and
outsl
sbb
sbb
xchg
pop
xor
mov
push
mov
push
xchg
das
push
stos
cmp
sarb
loopne
leave
cmp
roll
push
pop
dec
jo
rcrl
push
mov
adc
fisubl
shr
repz
rorb
push
dec
adc
push
and
stc
fsubp
pop
xor
push
dec
and
push
jg
jnp
iret
imull
inc
or
jbe
jle
xor
push
clc
iret
out
outsl
jg
jg
jo
mov
dec
add
jne
mov
repnz
or
push
scas
and
add
sub
and
or
in
mov
fmuls
or
dec
adc
call
fisubrs
cmp
sub
push
add
fs
xchg
sub
lods
data16
dec
push
mov
sub
mov
add
sub
shlb
pop
lock
sbb
rep
insl
push
dec
xlat
hlt
push
enter
push
pop
cld
rcll
adc
outsb
out
les
mov
jp
or
sub
mov
push
ret
clc
jmp
insl
roll
and
rep
mov
addl
add
stos
pop
dec
mov
pop
icebp
cmpsb
rorl
and
sbb
mov
add
push
jae
shll
fiaddl
jle
mov
out
pop
jbe
rorb
je
push
popf
push
mov
xlat
inc
or
push
mov
or
idivl
add
fisttpl
dec
call
and
sub
popa
sbb
add
or
push
rolb
test
inc
adc
and
inc
or
movsl
push
push
pusha
jo
shrb
push
aaa
push
icebp
adc
nop
xor
push
pop
hlt
mov
loope
xchg
mov
cmp
ret
xchg
xchg
rcrb
mov
add
lock
mov
fsubrl
add
jbe
pusha
inc
jbe
mov
push
mov
pop
push
add
data16
xchg
add
or
icebp
mov
mov
jae
push
xchg
ret
mull
fidivrs
lsl
jmp
push
pop
push
push
inc
jns
jg
jmp
rcr
or
jne
div
pop
dec
adc
inc
adc
out
jb
cmp
subps
jbe
dec
sub
sbb
call
or
into
fisubrl
lret
jo
sahf
fxch
mov
mov
or
js
int3
dec
rcll
pop
aad
jg
je
mov
fisubrl
in
pop
ret
repnz
cli
push
inc
mov
cmp
pusha
jge
add
sbb
jecxz
jg
mov
push
mov
jmp
adc
inc
cmp
movsb
and
mov
push
push
sub
pop
call
xor
fcomps
mov
js
movntq
loope
pop
das
or
adc
lret
jle
adc
jno
push
pop
push
popa
inc
jmp
mov
testb
fcomps
sub
or
pop
cmp
ja
pop
xchg
lea
insb
sbb
popa
mov
xor
jb
mov
fdivrs
and
jae
insb
or
sub
clc
jbe
add
mov
sbb
test
jne
sbb
add
pop
add
icebp
imul
outsb
dec
adc
psrad
cmpl
pop
fsubrl
loopne
test
jge
xorb
sub
jne
movsl
mul
cld
jbe
or
cmpsb
add
je
xor
punpcklbw
jmp
and
enter
je
add
jb
ljmp
dec
xor
xor
add
push
mov
pop
pop
xchg
cmp
and
jmp
push
sub
xor
push
push
rcrb
loopne
mov
cmp
test
or
dec
fdivr
popa
enter
in
mov
cmp
adcl
je
push
xor
lea
dec
sbb
imul
pop
stos
aam
adc
das
xchg
push
inc
pop
enter
adc
mov
lock
push
inc
xchg
out
add
in
lcall
int3
inc
ds
rolb
int
cmp
pop
pop
cmp
mov
dec
ja
mov
movsb
jb
lea
addb
adc
icebp
data16
sub
push
mov
ja
pop
call
nop
inc
cmp
inc
js
lock
cmp
test
push
or
fs
outsb
push
mov
aas
mov
and
test
mov
and
daa
push
or
aas
inc
ja
cmp
jb
ja
or
ja
pushl
dec
or
push
pop
or
push
mov
jecxz
shlb
nop
andb
pop
adc
data16
hlt
and
popa
lods
sbb
aas
push
jp
insl
inc
dec
lea
or
inc
movsl
xchg
adc
dec
push
cmp
call
sub
sahf
popa
sub
xor
ljmp
inc
shr
adc
adc
add
sub
mov
adc
xor
stos
add
adc
and
movsl
shlb
clc
hlt
mov
orl
in
or
shrl
pcmpgtb
dec
test
sub
push
lods
mov
xchg
pop
imul
lock
pop
clc
adc
or
add
adc
push
cmpsl
sbb
mov
pop
push
push
add
xor
sbb
xchg
xchg
adc
xchg
or
push
mov
aam
test
jge
sub
mov
mov
cmpl
inc
imulb
hlt
jne
repz
shl
and
inc
jne
inc
ljmp
pop
jge
int3
pop
sahf
mov
idiv
out
bound
push
into
sbb
clc
dec
cmp
mov
jle
push
mov
mov
or
test
mov
stc
mov
shll
add
incl
push
push
push
push
hlt
sub
int
inc
jb
ljmp
mov
mov
ffree
or
xchg
dec
jmp
mov
mov
sub
mov
jmpw
sbb
add
rorb
lcall
push
pop
push
xchg
fiadds
out
adc
cli
xor
cmpl
pop
orb
sbbl
mov
jnp
jecxz
je
data16
repnz
jmp
xchg
dec
jo
sub
pop
mov
inc
inc
jns
adc
xor
cmp
insb
push
xor
and
inc
je
and
and
imul
lea
cmp
in
mov
in
hlt
fadd
fcoms
cmp
test
orb
mov
mov
into
loope
adc
popf
xchg
addb
leave
mov
test
lods
jl
loopne
or
cmp
jl
add
and
fcomi
dec
loopne
rorb
imul
sbb
xorb
ret
sbb
mov
dec
sbb
sar
pop
sub
movsb
lods
xchg
lds
lods
lods
inc
je
fldl
orl
aam
jae
pop
fdivr
fsubs
fisttpl
pop
inc
lret
dec
or
je
cmp
gs
xor
into
dec
sub
sbb
pushf
pop
pop
cs
mov
add
icebp
sbb
sub
ficoml
les
adc
out
cmp
aas
mov
push
dec
jecxz
mov
rorb
shrl
mov
ja
movsl
mov
adc
lods
add
jb
xchg
or
movsl
hlt
hlt
mov
cmp
push
or
inc
jo
cmpl
orb
fisttpl
add
loope
insb
loopne
xchg
insb
sub
mov
mov
sbb
jne
fdivl
add
andb
xor
mov
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
cmp
clc
push
lea
mov
pop
aas
lret
subl
sbb
cld
add
push
shlb
inc
je
push
add
cmp
nop
push
ret
mov
enter
fdivr
movsl
rol
add
lock
or
je
push
jae
fsubs
test
les
mov
xchg
call
pop
push
scas
mov
add
or
sub
aam
sbb
mov
dec
or
jnp
test
es
sub
jl
test
and
push
push
adc
in
xchg
shlb
push
insl
cmp
or
mov
fwait
mov
int3
negl
sub
xchg
add
divb
inc
pop
xchg
jl
lret
add
or
ss
inc
cmp
cmp
inc
mov
jmp
outsb
lock
mov
pushl
jne
movsl
sub
add
fisttpll
lcall
mov
inc
mov
dec
mov
pop
nop
cmp
shlb
jecxz
rcrl
test
lea
je
jo
cmp
push
sbb
pop
lods
test
lods
insb
cmp
pop
sub
loop
sbb
into
add
addr16
lret
adc
push
outsb
je
loope
xor
test
insl
xorb
adc
popa
aas
mov
or
fistpll
fs
xchg
xor
mov
pop
push
adc
sub
popf
and
lds
cmp
push
stos
add
and
push
ret
push
mov
js
adc
mov
push
cmp
jle
insl
cmpl
incl
loopne
xor
mov
xor
or
adc
mov
pop
or
xchg
xor
jmp
cwtl
sti
pushl
clc
mov
dec
sub
push
mov
push
sarb
and
orb
jae
movsl
push
pop
int3
cwtl
in
push
jo
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
orl
rol
arpl
hlt
outsb
mov
mov
call
decb
mov
filds
push
in
push
push
imul
data16
push
sub
sub
lret
repz
sarl
test
insb
fs
popf
je
adc
aaa
xchg
aam
fdivrl
cltd
jmp
lods
or
insb
aaa
int3
je
cltd
nop
rorb
sub
ficoms
shlb
inc
inc
xor
jecxz
jle
nop
pop
fimull
mov
or
popf
jmp
dec
notl
decb
or
jne
and
into
ficoms
lea
or
fdivl
xchg
push
inc
je
mov
cltd
addb
sub
cmp
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
std
push
mov
cmp
je
cmp
jg
shlb
xor
ss
icebp
push
mov
jmp
dec
mov
ja
insl
push
inc
inc
sub
sub
sar
roll
fmuls
push
je
push
jl
jecxz
jmp
rorb
sub
push
test
dec
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
xor
mov
push
jp
imul
sub
fdivrl
mov
lea
lods
push
xor
add
push
jbe
dec
sarl
jne
jnp
xor
cmp
pop
or
fistps
rcll
push
jbe
adc
pushf
test
movsl
or
inc
lods
add
cmpsb
push
xor
sti
push
and
fistps
jl
testl
push
xchg
testl
cmc
movsl
daa
dec
cmp
loop
mov
mov
sbb
cmp
mov
xchg
std
ja
movsb
bound
mov
xchg
cmp
movsl
inc
add
push
mov
xor
test
adc
cld
insl
fs
lock
pop
js
cmp
push
pop
adc
mov
cmp
cli
xor
add
mov
dec
lret
mov
jge
pop
add
rclb
push
ret
xchg
sub
xor
sub
je
and
xor
cs
mov
gs
sub
cld
pop
fists
pop
sub
xlat
cmp
mov
push
aad
jl
jl
add
out
or
push
pusha
cld
into
add
cmp
mov
mov
ret
lcall
add
pusha
lea
xchg
sar
fsubl
rcrb
sub
add
sbbb
insl
pop
rclb
mov
add
es
jb
sbb
sbb
outsl
inc
cld
shr
mov
imul
inc
mov
lock
dec
js
and
and
pushl
push
lea
mov
and
or
loop
jbe
sbb
mov
cli
add
cmp
mov
pop
outsl
xchg
cli
and
dec
or
in
sub
jae
mov
pop
inc
ljmp
shll
pop
mov
and
mov
push
add
sbb
lea
xor
cmpb
pop
add
jnp
loopne
push
dec
pop
add
add
pop
and
or
loop
rorb
pop
shl
add
and
mov
lods
std
aaa
fdivr
add
int3
or
pop
cmp
jbe
mov
mov
imul
hlt
mov
jb
lret
cmpsb
loopne
mov
mov
sti
pop
mov
shr
not
and
add
mov
sub
jmp
lea
das
mov
mov
dec
stc
xor
xchg
mov
push
or
mov
stos
cld
lret
cltd
push
std
daa
mov
or
incb
repz
pop
dec
or
adc
pusha
mov
mov
inc
mov
mov
inc
adc
cmpb
xchg
lods
lock
xchg
or
pop
mov
pop
dec
or
jmp
dec
adc
jns
mov
cli
outsl
or
je
inc
xor
ret
lock
repz
cmpl
dec
out
hlt
xchg
push
out
adc
and
push
shl
add
int3
and
shrb
cmc
mov
push
or
xor
andl
inc
adc
dec
adc
add
and
mov
test
in
gs
test
or
inc
inc
mov
int
ss
clc
inc
es
push
lea
add
loopne
dec
pop
into
push
push
sti
jmp
jp
or
mov
or
cmp
dec
and
push
outsb
shrl
xor
adc
subb
out
sbb
repz
divb
push
pop
mov
subl
arpl
xor
enter
cmpb
pushl
push
fucomi
fwait
orl
ds
jmp
inc
add
add
and
and
pusha
inc
xor
add
mov
jno
outsb
fdivl
add
add
inc
aam
push
mov
rorb
pop
mov
outsb
and
inc
or
cmp
hlt
or
adc
or
jg
sbbb
dec
movsb
xchg
out
mov
jo
push
push
cli
ja
sub
shr
jl
add
lahf
adc
sbb
cld
jge
pop
fimuls
inc
cld
lock
call
adc
add
outsb
and
lret
add
subl
mov
jno
sub
fs
inc
mov
sahf
cmc
lds
inc
mov
lock
push
mov
cld
ljmp
and
not
and
pop
add
inc
leave
fwait
ljmp
repz
add
xlat
sub
pop
shr
add
dec
cld
cmp
dec
cmp
mov
add
and
cwtl
jle
xchg
test
repz
hlt
sar
stos
lret
addb
stc
int3
push
dec
add
test
pop
mov
xor
clc
shr
xchg
dec
add
loopne
out
test
nop
dec
or
jae
add
push
jns
sub
mov
fmul
add
and
pop
sbbb
ja
mov
add
orb
enter
pop
mov
lea
add
cmpsb
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
jbe
or
iret
push
pusha
scas
xor
and
inc
add
jl
je
or
ja
lea
pop
jnp
dec
inc
dec
insb
pop
xor
push
sar
dec
rorb
jp
movsb
pop
testb
and
cmp
ret
orl
dec
mov
cmp
je
fisttps
or
dec
push
cmp
fldcw
ficoms
add
mov
data16
loope
mov
mov
mov
dec
add
add
push
cmp
lret
shrb
insl
jo
xchg
cmp
rdmsr
cmp
and
dec
inc
mov
bound
sbbb
fcmovb
add
adc
jp
insb
and
cmp
and
sub
cmp
push
push
push
and
inc
jb
out
and
ss
jecxz
or
stos
pop
push
loopne
dec
or
insl
adc
and
add
ret
adc
add
call
sbb
icebp
iret
jne
jmp
mov
mov
arpl
jle
popf
lock
jecxz
fsubs
loope
sbb
add
pop
lock
lcall
pushl
sbb
dec
sbb
or
mov
jl
and
iret
ret
or
jne
dec
jno
mov
cmp
into
xchg
lods
and
jle
jmp
mov
repz
mov
and
jns
jle
jne
mov
push
pop
outsb
leave
inc
test
push
mov
sahf
inc
push
pushf
mov
sub
icebp
pop
repnz
and
sbb
add
je
jp
xchg
sbb
iret
push
jge
lock
sbb
bound
pop
mov
pusha
fs
push
decb
jne
clc
repnz
jmp
lret
cmp
mov
es
dec
bound
dec
push
and
push
clc
into
xor
inc
mov
int
cmp
inc
xor
push
or
and
roll
sub
insb
roll
and
ret
mov
or
dec
cld
or
jp
sub
jb
push
mov
mov
movl
aaa
nop
mov
popf
stos
or
adc
lock
xor
and
sbb
mov
lea
and
daa
mov
sbb
jge
add
push
push
hlt
xlat
mov
inc
add
addl
mov
das
arpl
mov
cmp
push
outsb
pop
sbbb
adc
add
pop
fistpll
call
lea
jge
jecxz
and
mov
mov
inc
loopne
cld
test
or
fs
add
jmp
out
add
out
pop
stc
movb
xor
push
mov
stc
add
push
pop
xlat
rcrb
mov
push
arpl
cmp
xor
adc
inc
jmp
test
bound
lock
es
xor
xchg
push
sub
popa
push
push
or
cmp
ja
popf
addr16
mov
mov
rolb
xlat
sbb
or
jne
or
mov
or
add
les
dec
jne
jmp
daa
or
or
jmp
bound
mov
aas
inc
mov
dec
pop
push
mov
icebp
and
xor
mov
ja
lret
pop
jae
pop
repz
adc
lods
and
shlb
xchg
add
inc
roll
push
mov
add
pop
push
or
cmp
data16
inc
orl
cmp
add
xor
sub
lea
std
pop
data16
push
jae
push
xchg
push
mov
adc
into
jmp
add
adc
sub
aas
inc
mov
cs
and
out
inc
outsb
jae
inc
sub
fsubs
inc
sub
cmp
or
ret
or
movsb
add
mov
cld
sbb
sub
jl
mov
jno
pusha
fdivrp
add
iret
mov
pop
cmp
push
pop
aas
cli
lret
add
popf
mov
sub
lock
sub
push
cmp
dec
pop
or
add
or
test
js
xor
add
add
mov
ss
out
push
cmp
daa
push
aam
je
mov
incl
adc
out
sbb
sbb
mov
add
dec
pop
addr16
and
adc
mov
push
inc
add
push
call
mov
xor
scas
cmp
add
or
into
pop
sub
jmp
push
in
pop
lds
jl
inc
add
sbb
and
add
pop
rolb
fninit
mov
inc
loopne
lcall
or
call
adc
mov
shlb
or
push
inc
test
movl
jns
mov
mov
mov
cmc
dec
pop
mov
les
enter
int3
add
mov
mov
sbb
push
or
rclb
loop
jl
sbb
adc
test
outsl
inc
loop
push
push
adc
dec
imul
movsb
xchg
mov
cwtl
mov
fisubl
or
imul
push
lods
pop
inc
sub
mov
mov
lret
jmp
out
mov
inc
adc
add
mov
clc
insl
movb
jl
ja
push
mov
pop
sub
enter
and
push
movsbl
shlb
call
ret
pop
jmp
inc
cmpsb
pop
mov
cwtl
jge
std
sbb
into
movl
gs
clc
xchg
test
movsb
scas
jbe
adc
push
lods
cmp
or
adc
mov
mov
add
inc
jle
pushf
add
loopne
push
pusha
cwtl
lret
roll
mov
pop
movb
mov
nop
popf
pop
insb
xor
pusha
rolb
outsb
mov
push
jmp
movb
ret
test
sbb
std
popf
pop
dec
test
inc
mov
ret
or
insb
sti
push
mov
aas
data16
fsubrs
cmp
outsb
sub
loopne
je
mov
sti
xor
test
pusha
cltd
je
jmp
in
in
in
adc
repnz
dec
repnz
enter
rolb
xor
scas
cmc
lea
loop
push
xor
lods
push
or
bound
mov
adc
arpl
dec
sbb
jne
dec
pushf
adc
pop
dec
aad
and
mov
not
lcall
in
in
sub
mov
and
inc
mov
enter
and
mov
push
mov
cmp
loopne
add
jge
add
testl
jmp
cmpsb
mov
inc
jge
test
lock
push
sbb
mov
and
cmp
or
or
sbb
ficoms
mov
loopne
in
cwtl
jmp
pop
adc
aas
cmp
shr
mov
int3
jmp
imul
cwtl
mov
dec
sbbb
cmpsb
es
mov
dec
mov
stos
cmp
cwtl
or
pushf
lcall
adc
xchg
iret
fsubs
sbb
add
and
jb
cs
faddl
jmp
notb
cmpb
les
or
out
xor
inc
adc
adc
inc
jp
cmp
pop
mov
call
lods
jno
pop
inc
clc
pop
mov
sbbl
shl
lock
mov
push
mov
lea
movsl
add
cmpsb
imul
mov
push
in
mov
nop
into
mov
mov
lock
and
and
frstor
lea
jb
shlb
andl
repz
cmpsl
imul
mov
or
mov
aas
ja
mov
pop
xchg
or
mov
es
inc
testl
in
mov
jne
jne
test
into
jne
orb
mov
or
cmp
xchg
lods
leave
fmuls
hlt
int3
add
jne
sub
fcoms
ficoms
sbb
movsb
add
inc
loop
rolb
lcall
test
mov
mov
pop
add
sarl
stos
lea
incb
lock
fisubrl
ss
ja
or
incw
andl
insl
mov
lcall
cmp
jmp
jg
add
ljmp
faddl
jne
sbbb
je
gs
and
testb
rorl
adc
pop
adc
rcll
and
insb
pop
mov
jg
or
push
cld
sub
lock
lods
testb
mov
ljmp
sub
shrl
shl
shr
or
mov
sbb
mov
jne
insb
test
cltd
mov
jle
push
or
cmp
ja
insb
aam
loope
int3
inc
inc
ret
or
lcall
sub
add
ficompl
mov
push
fidivs
in
fiadds
jle
loopne
jmp
call
xor
mov
and
in
out
ret
ret
cs
dec
mov
dec
mov
int3
jmp
mov
push
mov
mov
lods
xchg
aad
cmp
push
push
into
jmp
mov
mul
ljmp
xor
sbb
movsb
int3
and
test
orl
jp
lret
sub
jmp
sub
add
negb
sbbl
add
adc
and
inc
bound
add
or
nop
xchg
add
pop
rcll
inc
cmp
push
sahf
out
lcall
cmc
loop
xor
fstps
dec
add
inc
sbb
jns
decl
js
mov
mov
add
out
pop
push
pop
cmpb
dec
je
ret
adc
cwtl
pop
or
lret
inc
and
mov
mov
outsl
or
icebp
sbbl
inc
mov
xorb
test
xchg
iret
adc
xor
fmuls
lea
test
lock
call
in
enter
sbb
cmp
lods
std
ret
mov
shl
insb
pop
push
mov
js
add
add
incb
ja
add
mov
pop
sar
dec
ret
movl
aas
and
adc
aam
loopne
mov
test
negb
mov
std
or
or
outsl
mov
sub
cmp
jle
add
in
inc
sub
xchg
std
pop
lret
lods
mov
mov
mov
int3
shrb
enter
xor
and
dec
dec
push
pop
xor
pop
or
add
pop
sbb
addl
movl
sub
cld
cmp
fisttpl
stc
or
fsubl
arpl
push
lods
es
sub
mov
out
mov
dec
je
or
inc
aaa
pop
imul
lock
dec
push
mov
jne
inc
sub
jb
or
adc
and
sbb
jg
ss
cmpb
jne
inc
jne
add
fistpll
inc
xor
fiaddl
dec
aad
cmp
push
int
push
imul
xchg
push
lcall
popf
sbb
xchg
icebp
mov
mov
sti
test
jp
pop
pop
lea
cmp
jg
in
xor
filds
movsb
pop
inc
pop
adc
inc
push
adc
pushf
cmp
repnz
mov
sbb
or
add
adc
sti
push
pop
inc
cld
lds
popf
lea
in
pop
pop
jns
mov
mov
repnz
or
movsb
popf
jne
xor
imul
push
adc
jcxz
jg
testl
mov
jmp
mov
mov
js
sub
ret
fcmovbe
jns
fidivl
out
add
mov
mov
xchg
sub
mov
std
loopne
dec
mov
je
enter
mov
nop
and
sub
cwtl
outsb
or
mov
pop
lods
cmp
out
dec
add
je
testl
std
adc
clc
mov
loope
dec
fimuls
adc
cmp
std
rcr
jecxz
dec
sahf
pushf
mov
cmp
gs
loopne
lock
aaa
inc
sbb
adc
add
xchg
and
std
xor
cmp
jecxz
add
out
and
rorl
mov
lods
jne
cmp
mov
mov
pop
loop
mov
std
call
stc
aas
mov
mov
mov
mov
fdivrs
xor
mov
jbe
push
sub
neg
ret
or
lea
pop
or
mov
sarb
imul
mov
mov
mov
cmp
std
inc
icebp
push
push
enter
mov
outsb
and
cmp
mov
std
out
imul
imul
out
mov
loope
psrlq
xor
sub
add
xor
fsubl
inc
adc
inc
addr16
pop
jns
xchg
iret
cmp
cmp
lock
lock
cmp
enter
call
inc
loop
xor
out
std
jbe
shlb
scas
cmp
adc
jns
std
std
inc
repz
daa
cmp
std
loopne
in
popa
mov
xchg
decl
enter
push
ds
cs
add
sub
test
sub
rclb
repnz
in
jmp
dec
sub
movsb
cmc
shll
std
loop
pop
test
or
pushl
sbb
or
jbe
mov
loopne
mov
testl
popf
xchg
daa
lahf
std
fdivr
mov
sar
and
mov
enter
jns
xchg
cld
inc
insl
lock
dec
xorl
push
adc
fbstp
push
mov
sbb
push
movsb
adc
push
divl
loopne
js
inc
push
inc
lret
jne
cmp
cmp
cwtl
cmovge
mov
cmp
or
das
jae
in
std
das
push
dec
lret
mov
jl
je
pinsrw
in
std
std
loope
add
adc
xor
out
xchg
mov
test
aaa
fsubrl
dec
mov
push
xchg
and
jl
aad
nop
lret
enter
leave
inc
aas
iret
shll
inc
loopne
xchg
pop
imul
jne
jmp
add
int3
movb
jb
hlt
add
add
jge
leave
push
lds
push
clc
add
mov
fstl
pushf
adc
inc
loope
xchg
mov
or
stc
in
xor
and
call
mov
inc
jmp
cmp
dec
add
in
add
sub
push
cmp
adc
mov
xor
xor
pop
cmp
je
sub
mov
adc
neg
insb
adc
pop
jne
dec
add
add
lds
sbb
sbb
xor
lock
sub
push
mov
mov
jmp
call
aas
xor
cmp
cs
inc
test
and
adc
sbb
jb
movsb
call
lret
scas
and
nop
inc
movsb
and
pop
pop
adc
or
cmc
mov
test
inc
mov
gs
hlt
mov
mov
mov
mov
ret
mov
adc
sub
cld
stos
and
xchg
mov
jmp
xor
adc
push
and
in
push
ss
popa
je
or
sub
and
test
jmp
loopne
add
or
add
mov
and
mov
jnp
cmp
sbb
mov
jb
mov
and
lcall
adc
or
je
push
sbb
fcoml
or
je
imul
pop
adc
inc
xlat
cmp
test
pop
sti
cmp
aad
fcompl
adc
stos
aaa
inc
lcall
cmp
add
mov
sti
push
and
lods
jge
jne
mov
or
and
insb
lock
je
push
push
je
das
es
or
ljmp
ret
add
outsb
jne
or
jmp
hlt
jne
andl
pushf
sub
faddl
cld
and
arpl
pop
mov
mov
adc
in
add
fcomps
sub
cmp
cmp
push
out
add
or
ss
pusha
lret
pop
mov
movb
dec
neg
imul
add
pop
jle
fdivrl
xor
bound
aam
sub
or
add
nop
cmp
adc
and
or
int
std
inc
push
add
loopne
fcmovu
ds
push
rorb
push
imul
and
call
xchg
sbb
or
add
and
push
pop
dec
daa
paddq
js
gs
fs
or
pop
iret
inc
test
dec
push
inc
mov
dec
test
push
push
in
xlat
inc
std
test
adc
adc
insb
imul
insb
gs
xchg
aad
or
outsl
jmp
jmp
push
fwait
cwtl
stos
cli
in
push
arpl
mov
cmpsb
repnz
push
and
inc
cld
pushf
push
cmp
call
sbb
dec
add
mov
cmc
pop
andl
in
lods
pop
adc
push
andl
push
ficomps
xor
or
dec
adc
or
lret
insb
sbb
or
cmpsb
cmpsl
cltd
mov
push
jo
push
pop
dec
out
jmp
mov
jmp
test
imul
lahf
mov
pop
sub
sbb
and
xor
mov
fildl
bnd
lea
lea
or
jnp
aam
push
in
push
loop
mov
sbb
mov
es
popl
or
outsb
pop
inc
fsubrs
daa
lods
mov
xor
aaa
lock
cmp
lret
ja
add
inc
pop
and
mov
dec
and
pushl
add
jo
xor
sub
jno
push
loop
mov
mov
mov
sbb
pop
add
cld
or
xor
rolb
in
mov
push
test
pop
or
push
jmp
mov
or
sub
shlb
cmpl
mov
gs
or
nop
clc
push
add
or
cltd
andb
je
repz
aas
xor
inc
dec
cld
jle
std
js
inc
add
icebp
or
andl
imull
mov
ret
add
dec
or
mov
test
insl
jmp
in
test
xor
xchg
inc
mov
push
xchg
unpcklps
cli
lret
or
mov
push
cmpb
and
ret
dec
lea
push
clc
pop
push
imul
ss
or
popf
call
js
sub
push
push
ret
fwait
xorb
aas
dec
jecxz
inc
xor
jle
xchg
and
cmp
add
push
ret
pop
hlt
push
test
shl
add
mov
add
sar
pop
cmp
sti
jne
mov
mov
sbb
push
les
push
mov
push
or
hlt
clc
or
adc
jb
mov
dec
sbb
push
xor
push
and
sarl
shr
push
loopne
push
rclb
push
mov
xorl
sub
and
mov
ss
andl
sub
inc
push
push
notl
lods
repnz
and
cld
incl
cltd
mov
and
dec
test
or
pop
outsb
int
shrl
xor
loopne
mov
mov
cmp
push
es
fidivl
adc
jle
dec
add
jae
mov
cmp
test
sub
cwtl
jae
dec
cmpb
mov
shll
mov
rolw
xor
outsl
cmp
rcrl
adc
fildll
push
pop
add
xchg
mov
jb
xchg
aaa
jnp
dec
dec
or
rol
xor
int3
and
inc
xlat
xor
dec
or
xchg
pop
into
fisubrs
dec
or
lret
sbb
mov
add
cmp
and
fildll
loopne
jmp
sub
inc
push
jl
es
testl
pushf
xchg
std
mov
cmp
ja
mov
push
dec
add
ds
sub
movsl
push
jle
mov
inc
sbb
insl
jne
in
mov
dec
sub
mov
lods
xor
nop
insl
adc
sbb
repnz
mov
mov
push
pop
dec
mov
fucomp
loopne
push
fistl
in
inc
out
rorb
test
xor
push
clc
xchg
test
daa
add
or
push
fwait
or
sbb
mov
lea
scas
push
cs
sub
mov
sar
mov
sub
sti
add
fmuls
xor
xor
shll
shll
aad
insl
or
xor
jmp
or
pop
dec
out
pop
je
adc
and
cld
sub
insb
cmpl
push
insb
shlb
adc
add
pop
sbb
cwtl
bound
mov
inc
fidivs
pop
dec
sub
fcmovnb
je
imul
rorl
pop
addl
in
xchg
pushf
inc
mov
and
pop
or
in
rolb
sub
push
xor
dec
mov
mov
andl
je
dec
test
test
lock
ss
inc
fdivl
lret
add
push
fsubs
pusha
mov
add
cmpsb
inc
clc
loopne
lea
adc
sbb
sub
cld
dec
inc
lea
add
mov
inc
fwait
sbbl
lods
jnp
lods
add
jmp
pop
or
int
pusha
fcoms
sub
sarl
cmp
jmp
add
fs
mov
mov
mov
dec
scas
adc
add
insl
mov
test
subb
rolb
jno
add
std
jecxz
mov
ret
test
adc
les
jne
xor
hlt
and
rorl
add
inc
int
push
decl
and
pop
cmp
adc
mov
dec
iret
aad
push
enter
sbbb
pop
test
sub
mov
fucomip
mov
mov
mov
inc
sub
sti
mov
sbb
xor
rorl
jmp
mov
jae
inc
lret
sbb
jecxz
mov
lock
sub
sub
mov
sarb
cmp
mov
adc
cli
jbe
dec
mov
or
adc
add
cmpl
fmuls
push
and
adc
pop
inc
mov
mov
mov
daa
fldenv
shr
sub
call
lret
in
rcrl
andl
cmp
addb
pop
push
cwtl
sub
adc
lods
push
xorl
pop
mov
inc
inc
sbb
or
cwtl
adc
push
jb
bound
pop
add
xor
aas
mov
roll
stc
pop
jbe
and
mov
add
dec
stc
add
xchg
push
xchg
movb
or
or
mov
fs
jmp
test
data16
and
fwait
dec
loopne
mov
std
xor
add
push
cmp
lea
xor
mov
js
push
jo
lret
jmp
ret
repz
stos
adc
mov
jmp
dec
aas
lea
ss
lcall
xor
loope
sub
mov
fdivrs
jne
ljmp
xor
cmp
adc
popf
mov
xchg
fidivrs
jmp
mov
mov
mov
inc
je
xchg
leave
lods
and
cmpb
frstor
sbb
pusha
loope
sarb
test
push
mov
dec
xor
pusha
cmp
in
xlat
pop
iret
pop
mov
pop
adc
xor
je
mov
mov
testb
jne
inc
push
sbbb
cld
xchg
xor
pop
je
dec
or
jg
xlat
and
and
cmpsl
dec
cs
cmp
sbb
movsb
or
cld
mov
or
pop
in
addl
or
ret
cmpsl
test
insl
xlat
imul
enter
pop
fsubs
push
fcompl
pushl
jnp
xor
popa
out
sti
sub
push
xchg
inc
add
les
aam
nop
gs
fisubl
test
dec
rorb
in
add
cmpsl
mov
add
movsb
push
orl
ret
or
adc
or
inc
push
scas
scas
mov
xor
push
push
cs
cs
and
push
lea
pop
dec
pop
inc
pop
mov
dec
mov
and
cmp
pop
orl
cmpl
ds
ret
push
ljmp
add
adc
dec
or
mov
inc
dec
sbb
cmp
ss
dec
fsubl
pop
call
inc
scas
cmp
in
lret
xchg
repz
jne
or
xorl
jno
mov
arpl
add
mov
push
mov
jmp
pavgb
cli
cmpsb
ja
fidivrl
adc
mov
cli
lcall
sbbl
and
out
sub
sar
mov
dec
push
pop
and
dec
mov
not
cli
js
sub
and
cwtl
adc
dec
jnp
dec
popf
fistpl
inc
loope
push
mov
jmp
push
shr
fsub
jo
cli
mov
jbe
adc
mov
mov
and
cmp
push
xchg
jo
mov
push
sub
fcoml
push
add
testb
dec
je
mov
xchg
je
adc
insl
out
sahf
je
mov
xor
fisubs
fstpl
fcmovnb
add
pop
xor
mov
push
inc
cmp
inc
sub
cmpb
add
mov
and
movsl
sbb
sbb
push
add
xor
xchg
xchg
cli
in
in
sbb
mov
dec
mov
adc
lds
out
daa
pop
add
inc
push
inc
mov
mov
test
mov
push
pop
je
mov
into
nop
or
and
adc
dec
xchg
ret
into
subl
popa
push
fdivs
js
cmp
insb
scas
sbb
push
scas
ss
inc
inc
mov
jne
js
dec
or
lock
test
xor
add
jmp
jecxz
cmp
jmp
decl
ret
nop
or
mov
outsl
dec
jo
loope
adc
jge
add
push
mov
dec
loopne
fdivrp
push
mov
fnstcw
mov
jmp
lods
sub
push
fs
xor
xchg
add
pop
add
cmp
inc
adc
pusha
xor
movsb
mov
or
add
xor
cltd
mov
xchg
dec
mov
test
js
inc
mov
pop
sbb
test
add
rorl
adc
jb
dec
push
or
mov
movsl
jbe
mov
sbb
xor
mov
js
push
sbb
fsubr
inc
popa
and
sbb
mov
jl
jo
mov
jge
add
es
sub
int3
cltd
rorb
add
and
sub
cwtl
es
dec
or
hlt
lcall
orb
and
subb
es
xchg
sub
fs
and
push
mov
push
ret
pop
pop
mov
dec
push
xor
sub
subl
int3
mov
jbe
gs
loope
adc
out
inc
inc
inc
inc
aam
mov
push
sar
lahf
pop
push
or
sahf
cmp
aas
jge
fistpll
or
push
clc
mov
enter
sub
fdivl
clc
xor
cmpsl
push
adc
and
cmc
fsubr
sub
pop
test
jno
int3
xchg
mov
inc
test
sbb
push
push
pop
mov
dec
sub
push
inc
cmp
dec
pop
dec
and
insl
shlb
movsl
cltd
dec
push
je
pop
lds
mov
jp
xor
mov
jo
stos
aad
or
inc
sub
pop
sbb
inc
xlat
push
dec
mov
push
mov
fiaddl
pop
xchg
adc
roll
pop
push
cmp
je
bound
cli
inc
bound
jp
adc
or
jmp
xor
cs
push
push
mov
push
ficoms
in
xor
pop
leave
push
push
or
dec
shl
pushf
subb
push
popa
sub
push
rolb
or
adc
in
jae
mov
xor
inc
add
mov
repz
or
or
push
and
mov
cmp
push
or
outsl
add
cmp
clc
xchg
jnp
mov
movsl
cmp
pop
push
cmp
add
add
pop
js
sbb
sbb
repnz
mov
and
lea
or
andb
and
mov
in
mov
push
mov
inc
cmp
sbb
adc
cmp
push
clc
mov
add
push
mov
cwtl
or
jl
add
dec
xor
mov
jo
or
add
testl
cmp
mov
stos
movsl
div
inc
adcl
xchg
les
xorl
int3
or
sub
xchg
cmpl
dec
enter
daa
shl
or
cli
or
jecxz
inc
mov
mov
aas
add
adc
mov
dec
add
adc
sub
popf
or
push
add
or
incl
scas
js
adc
push
mov
xor
mul
add
and
cwtl
adc
in
insl
mov
push
or
bound
cmp
mov
mov
call
sbb
mov
shlb
lock
add
mov
dec
call
xor
les
mov
dec
cmp
shlb
mov
mov
mov
test
cmp
rcr
jmp
and
iret
scas
hlt
js
pop
sbb
push
add
or
mov
add
inc
inc
and
notl
subb
pop
pop
jae
mov
and
sbb
mov
pminub
ret
dec
dec
xchg
push
jne
xor
adc
adc
hlt
jmp
or
iret
mov
cmc
jmp
not
test
pop
sub
out
insl
jl
mov
js
ror
or
or
push
rorl
mov
mov
xor
dec
shll
test
dec
dec
andb
call
repz
sbb
int3
subl
and
push
sub
mov
sarl
dec
inc
shlb
or
add
jo
or
adc
in
test
ficomps
or
adc
popf
stos
xor
ss
sub
cmp
je
mov
stc
mov
inc
cmp
jecxz
push
xchg
or
xor
jbe
mov
xchg
add
sbb
jo
loope
jns
fmull
imull
xchg
leave
jae
adc
test
and
add
bsf
sarb
outsb
pusha
sub
inc
and
js
jae
sub
or
jae
subps
daa
sbb
add
fcoml
sbb
jno
cld
sub
pop
xorl
pop
lea
or
sbb
sbb
or
mov
ljmp
fsubrl
out
dec
subb
std
loope
push
sar
lcall
add
push
inc
sarb
jmp
mov
dec
mov
mov
sbb
roll
cmc
dec
mov
jmp
inc
insb
cmpsb
lds
cmp
jl
inc
or
iret
mov
add
jmp
inc
mov
data16
inc
and
adc
cmc
mov
sbb
rorb
push
movb
popa
loopne
mov
adc
sbb
mov
in
or
jmp
mov
test
dec
mov
or
inc
repz
sub
dec
push
and
adc
inc
inc
push
dec
sub
jecxz
dec
loop
push
push
adc
add
push
fstl
aam
test
incb
xor
add
shll
push
fwait
push
add
idivb
lock
loope
ret
xor
iret
jl
test
add
mov
clc
or
ljmp
adc
ljmp
pop
je
into
test
rclb
js
js
pop
leave
repnz
jle
lcall
jnp
imul
loop
cmpsb
dec
call
or
jo
add
xchg
std
and
shll
push
std
fistpll
addb
or
inc
push
adc
mov
add
or
or
pusha
repz
pop
add
imul
fsubrs
sub
ljmp
incl
cmp
or
pop
adc
out
pop
ret
js
sbb
push
or
imul
or
hlt
or
movsw
test
add
iret
mov
add
and
test
and
pop
mov
or
or
nop
mov
add
shll
dec
xor
adc
divb
leave
and
shr
pop
xchg
das
xchg
fsubl
and
cmp
mov
imul
inc
push
in
adc
test
adc
test
je
xlat
les
mov
xor
hlt
mov
or
or
sub
inc
jmp
in
clc
incb
mov
sbb
lock
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
mov
or
loope
sbb
sub
xchg
les
xor
sub
rol
jge
loopne
and
mov
sub
pop
adc
pusha
pusha
cmpsl
mov
loope
pop
sub
dec
and
jecxz
pop
fstp
xor
inc
fidivrl
pusha
pusha
xor
mov
mov
inc
in
and
nop
andl
adc
pop
jns
dec
sti
add
add
test
sub
fisttps
stos
clc
ret
mov
dec
je
add
dec
jne
add
scas
jmp
push
and
mov
adc
divl
je
push
add
out
and
add
add
ficomps
xorb
sbb
jmp
push
and
or
icebp
or
jg
cmp
inc
flds
fstps
jmp
fisttpll
xor
sbbl
imul
add
rclb
jo
inc
cmp
adc
outsb
stos
mov
rcpps
jmp
sub
sahf
lock
subb
or
repnz
pop
xchg
sti
lret
les
cmp
test
inc
or
lret
ret
push
ret
mov
sbb
adc
es
sbb
fldl
mov
dec
jmp
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
int3
in
and
ljmp
subb
pop
ja
in
aaa
out
adc
test
jno
call
loopne
jnp
add
stc
into
jbe
add
jl
or
sbb
pusha
inc
popf
mov
mov
sub
div
fadds
xchg
mov
mov
enter
jb
dec
into
pop
sarl
ljmp
jp
dec
in
or
out
lock
vpavgb
push
push
sahf
aaa
adc
pop
jmp
pop
pusha
stos
adc
gs
xchg
aam
std
rclb
enter
je
push
out
jle
push
sub
pop
sub
jl
dec
and
jle
push
add
ret
faddl
iret
and
sbb
and
mov
mov
push
jmp
or
lods
sub
mov
and
loope
int3
add
cmpsb
movsl
jne
push
add
and
adc
jo
lds
cmp
je
mov
sbb
pop
cmpsb
imul
or
sbb
add
sbb
adc
and
inc
or
push
sub
mov
rcrb
xor
adc
sbb
lock
or
cmpsb
lods
add
insb
xlat
in
mov
fwait
jno
mov
jo
and
dec
cmpsb
aam
int3
inc
or
or
xor
adc
mov
or
insb
mov
insl
inc
xor
jecxz
and
scas
adc
les
push
xchg
jnp
mov
cmp
mov
add
negb
push
addb
jae
lea
push
or
lcall
and
sub
pop
jnp
or
inc
rolb
cmp
adc
lock
mov
sbb
cs
fldl
pushf
or
adc
cmp
sbb
push
in
jg
jae
mov
int
cld
inc
add
pop
mov
call
fidivrs
mov
and
inc
cltd
push
and
lods
add
add
insl
or
jle
rorl
mov
fldt
cmpsb
mov
pop
or
or
dec
fsubrs
in
sbb
pop
and
pop
test
add
icebp
fstp
sbb
jmp
cmp
cwtl
scas
ljmp
movb
xor
dec
sbb
sub
inc
mov
scas
mov
cs
and
xchg
sbb
mov
or
and
lcall
adc
xchg
sbb
xor
xchg
inc
adc
or
gs
outsl
xor
pop
cmp
add
jle
or
inc
jae
mov
jae
shld
shl
pop
sarb
push
jp
ret
aas
dec
in
add
xor
call
mov
inc
mov
arpl
popa
clc
loopne
cmp
sub
mov
xchg
mov
pop
add
call
sub
mov
inc
xor
push
jecxz
jmp
lret
cmc
add
inc
sbb
mov
mov
push
fwait
mov
aaa
or
je
bound
jg
fstpl
mov
fstl
subb
jns
mov
mov
std
addl
or
sub
sub
mov
pop
out
mov
add
test
add
aad
mov
dec
mov
test
xor
cmp
sbb
jb
cmp
je
push
xor
mov
push
xchg
idivb
sbb
adc
sahf
fistps
scas
rcll
movl
rolb
ss
add
cmp
inc
jmp
das
clc
or
test
add
add
fbld
fstp
fld
fabs
fcompl
jae
xchg
fincstp
xor
or
pop
add
mov
push
mov
rcrb
shll
ja
sar
lea
jnp
aam
stos
int3
aaa
sbb
lea
pop
mov
ret
mov
push
push
orl
jae
fldl
ffree
mov
inc
sub
xchg
mov
shlb
mov
push
jg
pop
cmpsl
mov
push
fcoms
jne
or
or
fs
decb
mov
or
cli
push
neg
insl
imul
imul
lea
adc
jp
add
mov
iret
add
jmp
mov
jb
pop
aad
testl
mov
in
xchg
jns
fnstsw
xchg
popa
push
shl
sar
push
jno
test
inc
and
xlat
sub
inc
jl
loope
inc
fiaddl
fsubs
and
sub
stc
mov
and
rol
mov
or
or
in
or
pop
stc
jge
nop
insb
stc
inc
sbb
adc
idivb
mov
ret
or
test
lods
shll
decl
pop
pop
or
stgi
add
in
in
leave
add
jmp
pop
faddp
test
and
fldt
jo
cmpb
test
add
fchs
inc
fisttpl
dec
addr16
push
adc
sub
add
lods
pop
sar
push
fdivrp
ret
loopne,pn
inc
call
mov
dec
std
jle
in
addr16
int
sbb
aas
add
ret
dec
cmpsl
fldcw
pop
cld
inc
dec
pop
fmuls
sub
sbb
sub
mov
les
into
sub
jmp
inc
or
adc
stos
adc
sbb
outsl
jae
jmp
adc
push
mov
add
es
and
pushf
stc
fs
dec
dec
and
inc
mov
fcmovu
inc
mov
sub
push
int
fdivr
adc
sub
and
in
scas
mov
adc
arpl
jno
xor
insb
xor
fimull
jnp
insl
iret
mov
lea
lea
inc
xor
fdivrl
and
cmp
mov
mov
jge
mov
imul
pop
jb
inc
lret
xchg
fnsetpm(287
inc
lret
lds
fsts
jge
pop
mov
das
xchg
or
addb
int3
leave
insl
jb
lret
cmp
insb
adc
jge
lods
pop
xor
inc
inc
int3
int3
in
cmp
mov
bound
rcl
insl
out
xor
and
int
fwait
sbb
into
int
or
dec
xor
mov
jge
imul
jb
inc
adc
into
mov
into
cmp
sub
mov
dec
pop
out
xor
outsl
push
cmp
jo
mov
test
mov
lahf
adc
cmp
loopne
cmp
out
sahf
sub
fnstenv
dec
call
pop
xchg
out
or
or
outsl
sub
mov
or
fdivs
add
lock
fs
fisttpll
fucom
or
in
add
or
fistpll
fildl
add
incl
and
jl
and
jl
xchg
dec
and
and
mov
dec
pop
sub
rorb
push
sub
pop
and
into
push
xor
aam
mov
or
cmpb
clc
arpl
imul
pop
cs
sbb
test
ss
adc
mov
sarb
and
pop
in
ja
xor
js
movsb
sub
mov
ss
fdivr
and
or
sub
mov
es
or
or
jnp
mov
mov
mov
fstp
jmp
adc
lock
aaa
es
xor
push
movsb
stc
ret
cmp
rclb
aas
jbe
add
ficoms
jecxz
mov
or
cld
dec
pop
insb
fcom
popa
mov
ret
adc
add
or
add
js
jns
push
sbb
sub
adc
sbb
xor
je
fchs
jmp
sti
mov
inc
je
fnsave
cwtl
dec
inc
cmp
pop
jg
push
ficoml
xor
andl
sar
fstpt
adc
andl
movaps
pop
pop
xor
sarb
push
xor
scas
xor
fdivl
je
dec
add
bound
pop
ret
test
cmpb
cli
add
or
jns
push
into
jno
out
add
jns
sub
and
inc
adc
sbb
inc
aam
sbb
add
mov
jmp
jns
je
push
lock
adc
and
in
cmp
cmc
cmc
roll
jne
add
sbb
or
icebp
pop
stos
mov
and
add
mull
adc
mov
mov
push
push
jne
xor
aam
loopne
pop
sbb
jnp
mov
inc
in
je
cmp
pop
push
nop
outsl
fdivl
add
push
or
nop
xchg
jecxz
iret
decl
cmp
add
or
push
and
dec
jp
push
mov
js
sbb
and
icebp
sbb
dec
cmp
fwait
ret
push
and
rcrb
cmp
pop
push
cmp
pushl
orb
add
mov
or
or
xor
adc
dec
pop
mov
stos
leave
push
rclb
mov
data16
push
out
cmp
mov
ret
jle
sub
adc
fwait
mov
add
and
sbb
push
push
ljmp
push
push
mov
hlt
mov
pop
shlb
push
add
adc
mov
outsl
jo
push
push
push
inc
add
or
dec
aam
aas
inc
imul
push
faddl
out
push
jbe
dec
xlat
xor
push
mov
cmp
mov
jge
aaa
and
dec
add
xor
or
or
enter
mov
inc
and
rcrb
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
add
push
cwtl
es
pop
test
cmp
imul
cmp
push
pop
inc
jo
jge
aas
sbb
dec
enter
clc
js
movsbl
enter
pushl
pop
adc
shlb
xchg
notb
adc
lods
jns
orl
push
push
lock
ljmp
cmpb
or
adc
fcmovb
push
cltd
cmp
loope,pn
idiv
pop
lea
push
test
cltd
nop
and
loopne
lods
adc
add
or
lahf
dec
add
sub
lea
xor
mov
inc
xor
out
divb
cltd
sbb
rorb
cltd
outsl
sbb
clc
jp
imul
jo
ljmp
and
mov
pop
sub
jo
push
sbb
test
add
cmpsb
lock
add
lock
dec
fcompl
clc
sbb
inc
orb
clc
aas
push
cmp
jle
sub
jmp
icebp
xchg
push
insb
and
sbb
mov
pop
mov
fildl
jne
imul
dec
and
and
or
call
mov
inc
pop
xor
push
jmp
mov
subb
adc
gs
fbld
lcall
out
ja
adc
add
sbb
xor
jl
sub
incl
mov
xor
hlt
jne
shlb
add
outsl
jg
test
or
daa
mov
inc
cmp
fnstcw
and
out
cmc
shlb
fidivs
or
or
or
or
mov
add
and
xor
testb
push
jmp
pop
push
push
push
push
add
filds
add
pusha
stos
mov
loopne
dec
mov
loop
loop
jl
and
leave
xor
mov
sbb
mov
push
cmp
movsb
and
xor
fmul
inc
adc
mov
dec
pop
mov
and
push
jo
icebp
adc
push
adc
daa
mov
notb
rclb
stos
dec
mov
inc
mov
sbb
push
cmp
and
insb
aaa
mov
jle
jge
clc
mov
mov
in
and
repnz
jle
inc
adc
inc
jge
call
pop
inc
add
pop
jmp
inc
xchg
mov
jne
dec
add
test
dec
addr16
sbb
sarl
or
test
rcrb
push
adc
js
or
sbb
xor
mov
adc
js
test
inc
adc
inc
jl
or
mov
shlb
sbb
rorb
js
std
divl
xchg
or
int3
adc
xor
je
adc
mov
jg
jl
inc
push
pop
es
repnz
pushl
jmp
or
xor
fstpt
xor
es
xchg
ja
in
xorb
add
push
mov
subl
dec
inc
aad
xor
fmul
or
lret
loope
add
inc
add
pop
add
lea
inc
cmp
stos
out
sbb
push
mov
ret
xchg
push
and
in
jne
push
hlt
std
jg
inc
inc
mov
loopne
or
test
and
push
jl
or
inc
mov
mov
add
add
push
jbe
sti
outsl
jmp
ss
or
loop
pop
xor
rcrl
mov
loopne
test
leave
or
cltd
xor
mov
jne
cmpb
adc
inc
add
incl
outsl
xchg
jl
dec
adc
add
push
sub
popa
out
jo
popa
sub
pop
lcall
and
ljmp
fwait
inc
or
icebp
call
mov
fsubrl
dec
inc
inc
fldcw
sbb
xor
notl
fwait
pushf
mov
sbb
jno
xor
sbb
sti
or
sbb
xchg
push
xor
jge
inc
lahf
cmpsb
incb
fiaddl
nop
ja
ss
sbb
fcompl
adc
fdivs
push
xor
test
leave
shr
rcr
fcomi
mov
test
jb
jo
dec
pop
mov
sbb
push
xchg
or
pop
bound
out
mov
adc
xor
loope
call
inc
in
dec
jns
jmp
popa
mov
ret
xchg
lock
jmp
push
or
sbb
push
fs
sahf
or
lcall
loope
mov
add
jl
sbbb
add
mov
inc
dec
fmull
ret
add
js
mov
or
and
cmp
and
cmp
and
in
or
adc
sub
sub
and
push
adc
lods
ret
mov
pop
xchg
gs
add
add
and
daa
cltd
jle
inc
mov
jne
mov
push
cmp
inc
inc
jmp
inc
or
lock
push
fisttpll
sbb
push
fisttpl
push
clc
cmp
lea
cld
or
iret
adc
inc
push
neg
pop
sarl
inc
dec
fs
push
je
jmp
outsl
jmp
xor
pop
je
push
gs
cld
pop
les
push
push
push
push
inc
sbb
or
sbb
lea
and
jle
mov
and
or
push
gs
jbe
pop
add
sub
and
test
sbb
mov
lds
xchg
sbb
pop
shll
mov
dec
cmp
inc
push
push
les
cwtl
and
jmp
incl
xchg
pop
orb
push
fs
sar
mov
xchg
je
or
jne
dec
push
xchg
insb
fsubr
add
or
jmp
dec
dec
jmp
aas
mov
cmp
pop
jp,pt
add
lock
inc
es
je
xor
sbbb
js
and
adc
and
inc
das
add
or
xchg
sbb
mov
cmovp
pop
pop
or
mov
and
cld
jne
pop
sbb
shl
or
xor
sbb
sbb
xchg
cmpsb
and
adc
xchg
ret
cmp
or
dec
cltd
popl
and
mov
push
mov
cmp
xor
mov
rorl
sbb
incb
push
lea
xchg
jp
or
adc
sbb
mov
adc
cmp
jae
dec
std
pop
mov
cmp
add
inc
sub
xor
ja
or
int3
cmp
orl
andl
pop
mov
sbb
and
jno
lret
or
and
mov
subl
jne
loope
icebp
and
sub
inc
push
in
push
push
xlat
stos
lret
addr16
sbb
push
out
xchg
push
dec
xor
insl
arpl
pop
fistl
loope
mov
mov
mov
lock
cld
or
shlb
push
ds
cld
xor
pop
mov
lock
sbb
push
pop
shll
mov
sbb
fiadds
mov
repz
add
enter
or
loop
not
and
xor
or
mov
fstp
jge
cmp
jne
and
lods
shrb
mov
mov
xor
mov
inc
inc
cmp
jne
jo
sub
xor
inc
xchg
ror
xchg
cmp
push
xorb
mov
ret
daa
loop
push
mov
rcrb
shrb
dec
add
xor
push
and
lcall
jmp
mov
nop
dec
jp
adcb
cmpl
adc
insb
xchg
inc
cld
enter
xchg
icebp
cmp
sbb
out
push
push
popa
adc
aam
mov
out
enter
mov
aad
sahf
cltd
insb
jne
rcl
fidivs
es
fimull
inc
jmp
in
dec
cmp
pop
inc
test
testb
imulb
rorl
jge
data16
pop
cmp
sbb
movsb
pop
jecxz
add
int3
add
jae
inc
dec
cli
ss
mov
push
and
jecxz
sub
ficompl
out
int3
xor
icebp
sarb
or
orb
jle
push
cs
div
mov
aas
or
fcomps
pop
lods
mov
sbb
retw
pushf
fcoml
push
jbe
out
rcll
rcr
xor
cmp
fdiv
mov
shll
sub
xchg
push
xlat
or
adc
dec
ret
xor
push
push
arpl
push
cld
dec
movsl
or
imul
lods
jne
aaa
sub
dec
pusha
xlat
fsts
cmpsl
xorl
sbb
jb
inc
jge
cld
and
dec
cmp
push
hlt
cmp
je
movl
in
sbb
jle
push
mov
movl
or
push
inc
cmp
mov
mov
add
mov
rorl
pusha
inc
sbb
sbb
dec
lds
cmp
or
push
int3
push
test
jmp
call
adc
in
outsb
cmp
ja
xchg
mov
inc
adc
push
sbb
mov
out
aam
lock
mov
fisubrl
mov
xor
test
ja
jg
test
shrb
cmp
je
movl
and
push
mov
or
push
fsubs
sbb
dec
in
lds
hlt
jecxz
jmp
loopne
or
cmp
ds
inc
and
lods
movsl
pusha
in
je
push
ficomps
mulb
sub
jo
push
ljmp
lahf
sub
fldenv
mov
sub
lea
push
xor
xchg
leave
lds
bound
xchg
sbb
sbb
and
test
mov
pusha
stos
int3
cmp
stos
pop
push
push
push
xlat
push
int3
lods
xchg
lret
cmp
ljmp
mov
add
sahf
sbb
add
add
pop
jb
dec
jb
and
or
dec
orl
jle
orl
popa
jmp
cli
je
stos
aad
mov
in
jnp
push
pop
pushf
sarb
js
dec
xchg
loope
lret
jmp
sbb
cs
mov
sub
push
in
xor
cltd
inc
push
xchg
mov
and
cmp
sub
mov
cld
push
in
lcall
lods
sbb
outsl
icebp
inc
cmp
ret
jbe
xchg
dec
pop
fadd
dec
fimull
cmp
mov
dec
dec
dec
adc
cmp
mov
and
sub
cmp
cmp
xor
cmp
cltd
cmp
jb
cmp
dec
push
pushf
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
jnp
and
sbb
and
dec
xor
xor
xchg
cwtl
pushf
mov
movsb
test
sub
mov
inc
adc
dec
fwait
dec
adc
xchg
lret
pop
jbe
cmp
imul
mov
int
mov
and
dec
xor
cwtl
sbb
pushf
xor
int
and
dec
movsb
or
out
popa
leave
pop
xor
mov
inc
pushf
xchg
add
xchg
test
sarb
leave
add
std
sbb
dec
jne
je
and
or
sbb
loope
xor
xchg
inc
jge
inc
add
dec
add
js
or
stos
add
jmp
mov
aaa
int
dec
pop
mov
xor
mov
adc
rol
jno
xchg
out
xor
push
cmp
pop
repz
out
stos
mov
jmp
and
fists
push
adc
cmpl
or
push
jmp
sbb
or
out
jns
sarb
mov
jnp
mov
pop
fsubl
pop
cwtl
pop
inc
xor
pushf
incl
jns
or
push
or
andl
inc
cmp
sub
ss
cmp
inc
sbb
dec
fdivl
pop
leave
loop,pt
repnz
sub
int
jecxz
mov
mov
cs
int3
lea
sub
gs
pop
mov
mov
mov
and
testl
lea
inc
sbb
sahf
sbb
ljmp
dec
clc
push
push
jp
loopne
nop
mov
pop
cmpl
sub
mov
inc
scas
xor
cmp
lret
sbb
dec
cmp
popf
idivb
nop
add
aas
repnz
mov
adc
xor
dec
daa
ror
outsl
or
loopne
push
mov
or
add
mov
push
je
or
movsb
adc
out
call
and
popa
lcall
mov
push
or
jl
and
or
adc
dec
inc
call
lret
dec
mov
add
hlt
gs
and
addr16
imul
aam
cld
mov
inc
aaa
mov
or
imul
adc
lea
movsl
mov
push
arpl
sub
sub
addr16
push
cmp
sbb
inc
imul
sbb
jmp
scas
ret
clc
mov
inc
xchg
adcb
pop
std
and
fisubrs
rcrl
jb
mov
dec
mov
pop
leave
mov
sbb
dec
mov
sub
or
orl
das
sti
add
pop
jb
pop
and
or
dec
xlat
es
or
aaa
cmpsl
adc
pop
jns
jb
cmc
shlb
shlb
add
sub
sub
pop
stc
dec
sbbb
adc
and
ret
lods
loopne
sub
xor
lods
mov
jbe
shlb
loop
gs
enter
adcb
mov
add
and
or
add
fxch
adc
add
sbbb
and
inc
pop
mov
or
adcl
sub
loopne
push
xor
movsb
inc
insb
jne
stc
inc
mov
sbb
xlat
jmp
test
cld
ja
add
mov
mov
lea
sbb
imul
and
xchg
push
xor
push
dec
leave
sbb
mov
sub
enter
jnp
adcl
pop
mov
sbb
daa
cmp
push
loopne
sbb
fdivr
jmp
orb
ret
mov
sbb
ret
cmpsl
adc
js
stos
movl
loop
lea
cwtl
ret
mov
dec
adc
add
push
sub
xchg
mov
pop
add
or
add
popa
mov
or
in
add
inc
xorb
sub
enter
push
xchg
pop
test
js
das
lret
mov
lea
rolb
je
cmp
cmp
jbe
jb
adc
ret
adc
pop
outsb
cmpsl
mov
adc
pop
dec
xor
inc
xor
jle
or
lods
lret
push
inc
push
hlt
rcrb
push
add
pop
add
movsb
jl
ret
aad
inc
lock
xchg
ret
adc
sbb
push
push
push
add
daa
or
cmp
loope
jmp
mov
hlt
or
out
mov
dec
sbb
cld
add
nop
cmp
mov
mov
mov
arpl
push
enter
imul
sbb
jp
clc
inc
mov
iret
jbe
push
pop
sbb
call
pop
inc
or
sub
xchg
test
adc
or
nop
dec
fnsave
stos
rolb
jp
inc
inc
push
aaa
jo
imul
push
or
mov
pusha
mov
sub
mov
fistps
hlt
dec
inc
or
and
add
and
inc
inc
aas
sub
arpl
adc
rcll
stc
jb
imull
adc
or
roll
mov
dec
jl
dec
je
inc
mov
mov
add
add
jnp
adc
cs
mov
pop
enter
popa
and
dec
jmp
in
push
mov
sbb
cmp
out
dec
loop
lock
pop
movsb
fwait
mov
mov
pop
inc
daa
or
jo
inc
mov
outsb
in
ja
pop
mov
int
jl
xor
sub
es
int3
sbb
loope
pop
or
cmpsl
and
lds
sub
sbb
push
lock
mov
subl
inc
push
ds
fwait
sbb
and
leave
adc
sarb
les
pop
mov
pushf
loop
shll
dec
je
push
jmp
sub
adc
mov
shll
pop
sbb
fnop
jbe
pop
in
call
push
jle
push
rolb
mov
and
jbe
dec
rorb
jnp
cmp
fisttpl
insb
je
out
sahf
cli
mov
inc
or
je
cmp
jae
xchg
gs
rclb
and
sbbb
dec
or
push
pop
adc
loope
pusha
fimull
or
cmc
lahf
inc
xor
add
pop
dec
in
add
xor
inc
cmp
lods
rclb
jbe
test
or
cltd
xor
aaa
shll
stos
push
stos
pop
pop
adc
jb
jo
push
mov
out
sub
movsl
add
fsubs
shl
add
roll
xchg
pop
lock
dec
or
inc
lea
pop
push
popa
fisttps
sub
inc
shl
hlt
sbb
das
andb
loop
rolb
push
inc
jmp
adcl
out
ja
clc
repz
cltd
insb
pop
and
mov
out
lret
clc
mov
into
loopne
stos
sub
insl
push
stos
jbe
dec
mov
add
out
cmp
mov
fmuls
jb
sbb
sbb
out
idivl
pop
stos
es
incb
jae
das
push
ja
dec
push
adc
rcll
jns
movsb
cs
dec
mov
sahf
adc
add
sub
loopne
and
add
aam
pusha
sbb
ljmp
stos
inc
in
mov
inc
xor
rorb
je
lock
aam
xor
cmp
inc
inc
pop
rorl
or
sbb
pop
pop
sbb
out
and
and
ljmp
push
cld
not
dec
pop
popf
je
iret
sub
into
and
mov
out
push
or
js
or
and
lock
sub
jb
rorb
push
lock
lret
push
cmp
fabs
pop
adc
xchg
aam
mov
out
push
lds
pop
in
mov
sub
adc
addb
push
mov
inc
pusha
lcall
and
and
or
hlt
fs
push
scas
jo
adc
clc
pop
add
xor
inc
lock
add
roll
cltd
insb
inc
or
add
sbb
mov
mov
inc
adc
xchg
andb
testl
add
jge
pop
rorb
stos
add
dec
gs
push
into
out
add
jl
lock
push
iret
and
push
loope
push
fsubrp
and
into
sub
cmp
xchg
cld
mov
jge
dec
xorb
or
scas
shl
mov
orb
or
es
popa
in
iret
insl
xchg
loop,pt
or
and
mov
cmp
push
or
xchg
mov
cmp
sub
cmp
push
and
jg
and
cmp
test
sub
call
cld
cmp
add
xor
pop
movsb
adc
cld
inc
pop
jle
js
pop
clc
jmp
inc
pop
adc
ret
cmp
sbb
mov
pop
ss
es
mov
mov
mov
inc
adcb
mov
jne
pop
cmp
in
pop
adc
mov
negb
fs
xchg
adc
inc
xchg
or
ss
cmp
je
or
clc
or
je
mov
add
sbb
sbb
add
or
mov
aam
sub
sbbb
out
call
test
adc
add
mov
int3
add
outsb
fildll
dec
xor
pop
mov
out
iret
add
adc
or
jmp
je
fnstenv
xchg
push
adc
lock
icebp
xor
push
add
adc
adcl
cld
data16
mov
cmp
push
cmc
lock
lcall
and
cmp
push
dec
sbb
aam
mov
mov
sbb
sarb
or
or
add
or
sahf
add
or
jmp
test
dec
push
sbb
push
adc
adc
cmpl
xor
jne
dec
cld
lret
adc
imul
cmpl
mov
jne
movb
lea
jo
clc
inc
jle
push
js
shlb
dec
fstpl
xor
mov
es
cmp
or
sbb
add
xchg
stos
nop
ss
add
push
add
push
fildl
and
insl
dec
push
mov
add
push
inc
mov
out
push
clc
dec
push
neg
es
jbe
jl
cltd
call
xchg
testl
or
add
testb
add
sub
aaa
push
add
fwait
loop
test
pusha
dec
pop
pusha
adc
push
mov
xorl
aas
bound
js
jbe
push
mov
inc
pop
push
outsl
dec
ret
jbe
fidivrl
mov
jno
mov
aam
sub
push
repz
fcompl
aam
lods
pusha
push
push
mov
cmp
xor
pop
push
out
cli
insb
rolb
pop
jmp
mov
mov
mov
push
pop
aam
and
dec
cmp
test
and
pop
cmp
test
mov
adc
xor
pop
fcomip
xor
cltd
rol
shll
sbb
cmp
sub
xchg
lret
movb
mov
test
jge
lods
rorb
add
mov
fcoml
add
shlb
sbb
out
jmp
and
cmp
ret
add
nop
adc
add
lods
mov
xor
xor
or
sar
sbb
pop
add
nop
in
add
mov
fdivr
enter
insl
jbe
fs
and
dec
cmp
adc
pop
lock
mov
push
mov
sbb
inc
pop
out
cs
add
je
xor
in
or
dec
and
add
cmpsb
movb
insb
and
sub
enter
pop
sbb
dec
fwait
push
inc
imull
pop
pusha
fistpl
sub
loopne
lock
ret
loopne
popf
mov
or
jne
pop
cmp
imull
out
in
and
xlat
popa
adc
out
jmp
add
mov
mov
adc
and
or
mov
jg
ja
jbe
mov
mov
xchg
add
dec
push
mov
push
movswl
jecxz
and
adc
ljmpw
dec
insl
je
cmp
add
cld
mov
adc
cld
add
dec
shrd
or
push
jle
cmp
jle
loop
ss
jl
cmpsl
adc
and
xor
scas
divb
add
fmuls
or
out
and
lret
jge
adc
mov
mov
add
testb
ds
push
cs
xchg
push
push
add
mov
add
lcall
xor
jo
je
arpl
inc
out
and
incb
sbb
js
jg
jb
mov
push
sub
or
fidivrl
rorl
jl
mov
sbb
xchg
jnp
pop
popa
or
xor
jbe
rorl
pop
push
mov
mov
popa
std
mov
add
in
lods
sub
dec
pop
outsb
mov
mov
and
lods
jo
nop
add
daa
add
mov
inc
add
mov
dec
inc
mov
xlat
test
arpl
imul
xor
cli
pop
dec
stos
sbb
mov
or
pop
jl
or
mov
and
sub
inc
and
add
movsb
scas
mov
stos
rclb
mov
xchg
inc
sub
and
xchg
inc
dec
hlt
dec
sub
jge
mov
jo
out
adc
and
sbb
push
mov
pop
xor
push
stos
ficompl
lods
add
mov
and
adc
loopne
pop
test
mov
movsb
pusha
je
dec
inc
push
cmp
je
push
rorb
inc
cs
repz
cmp
notb
lock
inc
sbb
xchg
aam
or
or
lea
or
data16
mov
shrb
enter
push
insl
or
je
push
jmp
insl
cmp
mov
sub
mov
pop
inc
cmp
mov
mov
shrb
into
pop
ret
mov
jns
inc
pop
scas
jge,pt
fcomp
jle
clc
gs
or
pop
data16
and
popf
inc
ja
fs
push
inc
popa
je
inc
je
dec
xchg
pop
mov
inc
xor
xor
ds
mov
in
add
xchg
sub
xchg
mov
xchg
subb
arpl
and
bound
rolb
popa
jbe
fldl
fdivl
fmull
insl
push
pop
clc
fstps
or
int
ds
in
add
repnz
rcr
in
ret
pop
dec
shlb
add
divb
push
sub
mov
fcomps
jo
push
lea
pop
ljmp
lock
mov
or
insb
repz
add
or
sub
fsubs
or
shr
shr
or
mov
mov
xlat
bound
scas
push
clc
daa
add
stc
sti
in
pop
in
push
mov
sbb
cs
lock
fildl
in
test
lcall
push
push
adc
fnstcw
inc
testb
test
aam
incb
add
and
or
lea
mov
shr
cmp
mov
ret
jo
rorb
fimuls
jecxz
pop
scas
jp
adc
cwtl
push
adc
cmpb
adc
dec
je
dec
cmp
xor
stc
rolb
dec
rolb
nop
lret
xchg
dec
ret
xor
shlb
andl
cmp
fisubs
movsb
test
xor
mov
iret
jbe
mov
or
adc
mov
inc
adc
cmpsl
test
stos
cmp
pop
pusha
imulb
or
test
add
js
lret
test
dec
call
xor
cmpsb
cmp
push
pusha
ret
adc
fstps
inc
in
jl
xchg
addb
cmp
ret
mov
and
mov
test
rcll
call
add
dec
outsb
shlb
push
push
or
aaa
jo
push
test
and
and
jns
shlb
add
jl
sbb
jp
add
xchg
push
roll
xchg
inc
push
adc
imul
jo
add
sub
xor
es
sahf
mov
push
adc
inc
lods
loopne
cmp
sti
jbe
pop
aad
repnz
inc
aaa
sub
mov
mov
mov
lods
xchg
mov
int3
sub
cmp
shlb
dec
inc
inc
jb
test
leave
imulb
call
inc
call
or
adc
out
xor
add
call
and
pusha
mov
iret
push
rcrb
sub
sub
add
pop
push
mov
xchg
dec
jo
jmp
ja
mov
out
js
mov
enter
lret
pushf
out
shlb
push
sub
loopne
jne
pop
xor
cltd
rclb
cmpsl
inc
jmp
adc
or
das
aad
or
sbb
loop
push
ret
pop
jo
pop
sub
cmp
sub
inc
inc
aaa
push
pop
iret
push
jno
insb
dec
adc
or
lret
cwtl
in
das
adc
iret
or
add
push
cmp
popf
mov
sub
lods
push
jl
inc
mov
push
jle
inc
push
test
and
cmp
pop
xor
inc
je
orl
orl
cmp
add
jge
test
aas
or
adc
inc
inc
in
add
test
and
mov
mov
mov
dec
pop
ret
lock
adc
cld
adc
ror
clc
ja
lds
adc
insl
xor
mov
call
push
and
aad
clc
inc
jge
jbe
rolb
inc
incb
rdmsr
pop
add
ret
and
test
sbb
subl
mov
shl
xorb
out
dec
inc
dec
call
pop
push
sub
test
inc
jle
or
mov
jp
mov
loopne
or
aas
cmp
add
mov
sub
std
andb
or
and
xchg
mov
adc
incb
je
push
push
push
int
aam
test
nop
sbb
or
mov
cmp
imul
dec
jbe
or
nop
sbb
shlb
add
dec
xor
mov
fidivl
add
icebp
ret
or
jge
inc
loopne
hlt
add
or
or
sbb
or
add
inc
xor
sahf
negb
sub
and
add
call
pop
or
sbb
push
add
add
or
add
inc
ret
mov
rol
add
sbb
mov
out
rcrl
xor
ja
inc
test
xor
xchg
push
jbe
or
xor
cmp
mov
jb
sbb
cmp
add
mov
rcl
mov
sbb
xor
decb
ret
push
and
push
es
xor
xchg
jl
xor
push
je
inc
call
cmpl
pop
mov
das
dec
roll
adc
addr16
lcall
clc
push
cmpl
pop
pop
push
daa
gs
push
mov
fldenv
adc
sbb
mull
ds
adcl
imul
jmp
cmp
pusha
add
js
cs
jmp
aas
ret
jg
add
cmp
jg
lret
xor
mov
ficoms
jg
and
or
dec
incb
inc
das
movsb
xor
add
adc
loope
add
sub
or
mov
adc
jb
cmc
stos
add
mov
cs
stos
jl
mov
pop
lods
and
aad
shll
sub
jge
or
dec
int
lds
in
sti
pushf
into
dec
popf
and
lahf
sbb
jge
push
cmp
int
inc
sub
pop
mov
sub
dec
mov
imul
adc
jp
lock
out
and
push
mov
call
aaa
dec
rolb
jmp
inc
add
mov
stos
inc
mulb
cmp
in
sub
loopne
pop
xchg
sbb
xchg
and
and
or
fwait
adc
fidivs
call
jp
mov
ja
imul
xor
dec
cld
mov
push
push
dec
adc
outsl
and
stos
push
xor
jne
aas
movsb
or
call
mov
unpcklps
enter
inc
and
mov
pop
add
je
dec
sub
push
add
test
cmp
add
sbb
and
xor
inc
popa
sti
mov
popa
rolb
mov
inc
jg
jbe
or
mov
cmpl
pop
pop
push
or
push
or
sbb
add
mov
cmc
push
mov
pop
cmp
icebp
inc
faddl
add
sub
push
push
push
pop
pop
pop
pop
push
rclb
call
dec
sbb
shrb
idivb
clc
dec
jle
mov
and
or
rcrl
add
ret
sub
iret
stos
jmp
je
sbb
shlb
cmp
dec
mov
or
or
mov
adcb
rcrb
addr16
popa
sarl
inc
iret
mov
sub
sub
adc
stos
mov
push
sahf
or
pusha
mov
push
mov
push
mov
roll
sub
and
movl
sbb
bound
lahf
ficoml
loope
inc
popf
add
pop
mov
lea
xchg
xor
inc
sbb
sub
or
mov
xchg
inc
push
addl
lret
mov
mov
mov
das
jmp
adc
loope
mov
fwait
movsb
pop
and
jmp
push
sbb
sti
and
rcrb
or
sbb
sarb
xor
add
inc
fsubrp
mov
push
dec
push
mov
xchg
je
dec
je
add
and
jo
test
jp
je
jl
pop
or
jmp
in
shr
insb
sub
mov
push
add
or
jle
mov
dec
pusha
lcall
sbb
push
or
je
adc
stos
sbb
mov
cmp
rcr
sub
jecxz
pop
mov
leave
add
push
pusha
lock
int
inc
pusha
imul
and
scas
or
orl
add
pop
xchg
mov
xor
cltd
dec
jmp
push
sub
push
push
sub
gs
pop
je
gs
xchg
dec
inc
dec
lods
test
bound
cmp
movb
jmp
adc
jbe
enter
incb
adc
inc
gs
ret
mov
ss
roll
in
inc
push
push
loop
xor
xchg
jmp
cmp
adc
es
les
jp
lcall
mov
mov
pop
pop
dec
aam
bound
xchg
fadds
xchg
xor
xor
cmp
mov
and
imul
lds
call
sub
in
mov
or
rcll
inc
push
sub
mov
push
push
mov
lods
mulb
dec
int3
adc
les
cs
je
lods
lea
clc
pop
jmp
inc
xor
dec
je
dec
add
iret
xchg
cmpsb
pop
sub
xor
inc
add
fs
jmp
jp
orb
out
or
jle
cmp
ss
enter
je
sub
xor
fdivr
push
mov
xchg
adc
in
in
rorb
mov
pop
inc
add
test
push
push
popf
pop
jg
push
loop
mov
push
sbb
adc
xor
mov
andb
jne
movsl
shufps
inc
rolb
testb
clc
loopne
mov
sahf
or
cmp
mov
dec
xor
sbb
dec
lea
jnp
or
and
inc
adc
add
sbb
or
add
push
or
pop
mov
mov
or
sub
mov
adc
mov
mov
pushf
aas
das
sub
mov
lods
outsb
adc
pop
movsb
mov
pop
out
stc
push
test
cld
fiaddl
mov
out
push
sbb
cwtl
or
add
pushf
mov
clc
adc
jo
push
cmpb
imull
cmc
ficoml
hlt
mov
mov
test
or
arpl
dec
stos
and
nop
into
inc
mov
or
inc
and
add
je
fistpll
sub
pop
rcrl
inc
dec
adc
jne
adc
mov
pop
lods
add
rcrl
mov
xor
jmp
xchg
or
clc
jg
fisubs
mov
and
cmp
add
push
xchg
jbe
lock
mov
ljmp
pusha
push
xor
movsl
pop
jae
push
sub
mov
mov
je
fsubl
jmp
andnps
pop
pop
andl
or
sub
arpl
je
mov
and
adc
jge
sub
call
fs
or
or
or
dec
cmp
push
or
pop
push
dec
jno
cmp
repnz
pop
add
ret
add
inc
or
sbb
add
pop
rorb
pop
leave
arpl
es
sbb
fwait
pop
push
ret
or
mov
add
dec
adcl
mov
mov
adcl
xchg
outsb
pop
insl
test
and
mov
cmpsb
mov
dec
push
cld
mov
movb
dec
adc
cmpsl
pushw
adc
repnz
movb
lea
je
pop
rclb
lods
push
sbb
hlt
and
je
sub
pop
cmp
or
sub
or
movsb
xor
add
adc
xchg
je
mov
adc
aas
adc
negl
xchg
push
mov
movsl
mov
hlt
inc
or
push
adc
cmp
sbb
adcb
dec
das
je
imulb
adc
xchg
nop
sub
push
or
psadbw
mov
add
pop
mov
or
into
roll
movsl
or
push
xor
cli
add
mov
mov
dec
lods
ret
shlb
loopne
mov
frstor
jmp
rorl
mov
inc
lcall
les
inc
cli
int
mov
jle
mov
cmp
sub
leave
inc
xor
dec
cmp
ja
shl
xchg
jl
cmpb
jl
xor
ja
xchg
inc
cmpb
je
hlt
cmpb
aaa
mov
adc
inc
push
pop
push
push
push
xlat
imul
jge
xchg
inc
push
push
mov
incb
and
cmp
iret
lcall
xchg
rolb
ret
and
inc
bound
pop
call
sub
nop
cmp
shlb
xorl
mov
stos
icebp
inc
pop
add
dec
dec
add
sbb
stc
or
jbe
jle
or
movl
fcmovu
add
add
bound
or
add
add
jg
or
or
jo
shlb
xchg
or
adc
sbb
and
sub
inc
pop
mov
and
out
adc
lea
add
cld
movsl
movsl
movsw
xor
test
fnstenv
lret
mov
movswl
dec
push
and
aam
and
mov
jae
pop
adc
jmp
lods
outsb
stos
in
adcl
test
popf
xchg
test
add
shlb
mov
sbb
push
cmpb
jnp
mov
or
pop
outsl
dec
arpl
fcomps
idiv
and
cwtl
cld
lock
je
lea
or
push
jne
cmpsl
adc
and
cmp
shrb
or
add
imul
mov
mov
fidivs
pop
xchg
jp
jae
push
jb
insb
lods
rcrl
loop
pop
rorl
enter
pop
inc
adc
lock
js
mov
jmp
stos
dec
inc
jl
sahf
shl
push
or
or
xchg
sbb
adc
ret
movsb
jb
push
adc
sbb
ss
das
loopne
ja
js
jg
ja
mov
xchg
add
mov
dec
arpl
push
add
or
insl
add
jmp
adc
jbe
jno
in
jae
push
ja
push
adc
stos
test
enter
pop
pop
dec
cltd
or
xchg
inc
mov
jp
xlat
and
and
call
in
call
ret
out
add
adc
sbb
push
lret
nop
ret
add
xchg
aaa
fstpl
mov
mov
xor
pop
xor
mov
jne
gs
push
ficoms
out
inc
gs
int
push
cmp
jbe
mov
jmp
pushf
cmp
sbb
or
adc
fisttpll
inc
loope
xchg
ss
daa
mov
or
xchg
jo
idivl
inc
xor
sub
sarl
loope
pminsw
nop
out
fs
dec
cwtl
pop
cmpsl
add
cmp
or
lahf
sbb
fdivrs
and
or
sbb
out
and
je
pushl
adc
shrl
cmpb
mov
jge
cmp
and
mov
xchg
push
bound
outsl
and
inc
mov
aas
push
sub
push
popa
cmc
or
je
mov
pop
mov
imul
je
jb
jns
scas
test
jecxz
add
out
adc
ds
cli
cmp
sarb
jne
test
adc
mov
cld
shll
insl
into
leave
aas
sahf
pusha
pushf
xor
mov
xor
inc
outsb
push
adc
shll
mov
cmpsb
imul
sbb
mov
jnp
and
sbb
xchg
lods
mov
cmp
cmp
decl
push
inc
cmp
or
jmp
das
popf
pusha
mov
sub
sbb
sub
enter
add
cmp
ja
push
pop
dec
jmp
cmp
xchg
orl
repnz
sbb
mov
lock
jmp
mov
fidivs
adc
cmpsl
mov
lods
jbe
mov
mov
xchg
sub
cmp
sti
dec
adc
cmp
inc
jle
cmp
push
xor
jle
icebp
gs
add
rorl
sbb
lret
push
push
lods
jp
lock
roll
cmp
push
js
jmp
scas
sbb
sbb
pop
inc
fidivl
xor
pop
jge
jne
sarl
cmp
test
jns
pusha
fsubr
jbe
nop
add
jne
call
jae
imul
sbb
push
mov
stos
mov
sub
xchg
add
pop
lock
adc
aas
repnz
orl
or
and
sbb
sub
cmp
mov
stos
cs
xorb
movsbl
in
sahf
jg
dec
dec
je
test
fld
push
push
cmp
dec
mov
lea
add
fiadds
popa
or
test
xor
sahf
jne
cli
and
lock
std
jecxz
or
lahf
pushf
jmp
push
cwtl
pop
mov
xor
leave
enter
cmpb
cwtl
and
test
test
adc
test
nop
add
cs
cmp
insb
mov
iret
das
lea
test
mov
pushf
cmp
leave
and
enter
mov
movsb
icebp
xor
pushf
cmpl
clc
nop
mov
in
xchg
or
mov
xchg
add
cs
repz
sti
jbe
add
push
movsl
fcomps
sahf
push
imul
xor
ret
push
out
je
or
sbb
sbb
push
xor
push
xor
jge
jle
lret
cmpl
push
loop
inc
ror
repz
roll
rcl
rcl
aad
repz
xlat
fcomp
add
xchg
mov
nop
sub
push
movb
jmp
or
add
xchg
insb
push
into
in
das
loop
test
sub
pop
mov
add
ficoml
mov
add
add
cmp
xlat
adc
test
jbe
push
add
mov
testl
xor
adc
call
cwtl
das
shl
cld
pop
or
push
push
xchg
xor
pop
mov
sub
push
add
xor
xchg
pop
push
xchg
shr
cwtl
mov
imul
sub
dec
adc
sbb
je
or
data16
or
mov
or
enter
mov
roll
cmp
fistl
into
ljmp
sub
cli
fiadds
sbb
mov
pop
ja
test
adc
mov
dec
adc
add
sar
fisubs
sub
dec
pushf
mov
std
cmpb
push
rclb
dec
xor
insb
imul
or
lock
es
sti
ljmp
add
ja
and
and
mov
pop
sbb
xchg
jae
andl
decb
xchg
sbb
orb
adc
sub
push
inc
testl
push
in
ljmp
jne
inc
inc
or
cmp
mov
sub
lret
jne
inc
hlt
stos
rolb
dec
loopne
shlb
push
lea
or
dec
xchg
mov
inc
xor
mov
push
cld
das
dec
repz
scas
enter
add
shll
mov
cwtl
cmp
dec
int
mov
and
incb
aas
jle
jle
movsl
lods
and
imulb
mov
mov
add
cmp
cwtl
and
dec
rorb
leave
xchg
push
fsubl
push
lret
lcall
xchg
pushl
rolb
testb
testl
push
hlt
shrl
xor
or
mov
shl
jmp
dec
cmp
push
ss
inc
lods
lock
lcall
jns
sub
testb
mov
jb
push
jns
mov
loopne
subb
pop
mov
jnp
jae
dec
lds
mov
dec
or
aaa
or
mov
xchg
add
leave
dec
pusha
xlat
lret
push
and
ror
js
jno
clc
mov
lcall
inc
mov
lock
dec
push
pusha
movsl
jecxz
inc
je
pop
repnz
dec
pop
fdivrl
loop
out
cmp
xchg
mulb
push
nop
pop
cltd
dec
sarb
outsl
ret
xor
jne
inc
mov
cmp
cmp
sub
in
inc
shlb
fdivrs
aam
inc
inc
mov
push
inc
test
dec
ss
push
xor
dec
lea
mov
mov
adc
adc
test
lret
cld
lea
cmp
fnstcw
add
and
add
decl
clc
mov
and
inc
je
idiv
sbb
push
data16
negb
negb
test
xchg
inc
inc
lock
enter
out
or
jge
ret
add
lock
mov
or
jne
jne
push
fnsetpm(287
loopne
sbb
pop
cltd
or
mov
adc
xor
push
pop
sub
scas
jnp
lock
pop
movb
inc
mov
push
mov
ret
insb
add
push
nop
cmp
call
push
adc
adc
mov
mov
jne
rcll
sahf
add
or
scas
push
shll
jbe
jne
sbb
neg
and
out
jle
inc
imul
jmp
loopne
lds
xchg
fdiv
fs
dec
lret
add
and
cmp
mov
push
adc
or
dec
icebp
ret
test
add
shll
mov
add
xor
sub
inc
jb
mov
testl
outsb
inc
push
fs
clc
js
add
scas
jp
in
lea
mov
cmp
push
shlb
and
xchg
jno
dec
int3
push
jb
adc
clc
jne
cmp
cmp
lock
inc
aam
mov
movb
dec
and
jmp
add
xor
inc
cmpb
dec
mov
dec
cmp
mov
inc
dec
add
add
fadds
pop
add
sbb
mov
das
jp
hlt
xchg
jp
jne
dec
mov
jb
int
sub
xchg
mov
test
lret
or
add
lds
adc
inc
or
add
add
lods
xchg
cmpsb
rolb
adc
and
or
adc
stos
and
push
mov
cld
inc
xorl
test
or
or
nop
ret
push
data16
repz
lea
add
or
cmp
in
xor
scas
add
lret
xchg
call
sbb
push
add
inc
mov
pop
es
xor
or
xchg
adc
pop
arpl
mov
test
lret
dec
in
mov
xor
into
pusha
jg
ror
inc
and
and
pop
pop
jnp
sub
mov
ret
xchg
inc
or
prefetchw
push
addb
add
jbe
pop
jae
or
dec
movsl
push
or
add
add
push
add
add
adc
and
mov
push
je
loope
cmp
iret
cmpsb
ficoms
or
dec
pop
xchg
add
adc
popf
jnp
jne
and
and
or
je
or
rolb
cmp
loopne
mov
rcrl
jge
jbe
daa
fldcw
mov
push
and
cld
cld
xorb
enter
or
inc
loopne
mov
sub
mov
inc
sub
jecxz
leave
aam
out
cmp
fxsave
mov
add
sbb
fcompl
cltd
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
lret
repz
into
into
into
outsb
arpl
adc
sarb
js
pop
or
cwtl
lock
les
push
fcomps
test
or
pop
jns
pushf
inc
mov
or
push
bound
push
ss
pop
lcall
pusha
test
lahf
pop
test
repnz
add
add
inc
mov
xor
imul
das
sbb
je
and
jne
cmp
sub
jmp
mov
mov
or
lret
push
xor
out
add
out
incb
add
scas
push
scas
xchg
hlt
xchg
xor
in
inc
test
adcl
push
dec
pop
xchg
push
orb
jae
adc
rcrb
add
clc
in
cmp
add
push
ficoml
fdivl
push
mov
or
pushf
add
add
or
pop
sub
jnp
xchg
jle
xor
sbb
movsb
ret
stos
jp
pop
adc
pop
pop
jle
sbb
xlat
jle
and
daa
or
inc
mov
sub
adc
addr16
shlb
or
insb
scas
stc
add
icebp
lret
jne
rolb
pushw
or
adc
dec
sbb
xor
ljmp
push
loop
dec
inc
pop
cltd
orb
pop
sbb
jmp
lcall
adc
sub
inc
xor
sub
add
dec
mov
popf
je
out
je
mov
shl
xor
decl
add
lret
inc
inc
call
xchg
fiaddl
mov
and
imul
push
mov
jo
das
sbb
jns
jmp
ret
into
das
adcb
mov
loopne
push
or
xor
mov
inc
pusha
or
fdivp
jle
dec
sar
and
mov
and
xchg
shlb
jmp
shl
xchg
test
lock
test
loopne
adc
and
xchg
js
xchg
decl
test
dec
shl
sbb
add
inc
pushl
xchg
inc
repnz
test
je
test
out
mov
pop
push
xor
mov
jl
addb
daa
cmp
pop
mov
inc
ficomps
mov
jge
jge
add
les
popa
or
mov
mov
push
or
paddusb
jns
loopne
inc
fcoms
xchg
dec
inc
sbb
clc
shrl
mov
call
jnp
pop
adc
jge
lea
ror
jnp
push
pop
inc
dec
add
push
imul
mov
xor
and
xor
adc
pop
push
ror
mov
jg
inc
rclb
dec
clc
add
shrb
push
mov
pop
ds
pushl
cs
push
gs
pop
add
xchg
mov
test
jno
jmp
inc
insl
and
push
push
xlat
stc
or
mov
cmp
je
test
adc
xchg
sub
imul
jmp
arpl
lahf
loope
and
inc
inc
push
dec
inc
cmp
jl
cltd
push
adc
mov
cmp
mov
sbb
ljmp
mov
jmp
xchg
xorb
loopne
dec
jp
pop
fisubrl
rclb
cld
popf
adc
push
or
sbb
adc
outsb
mov
push
xchg
and
push
cwtl
jo
pop
orl
les
push
sbb
sub
mov
mov
loop
add
jg
mov
mov
cmp
imul
dec
shr
mov
inc
aam
test
pusha
cli
test
sbb
in
and
lahf
orb
lock
pop
inc
addl
cld
add
nop
pop
jl
rorb
jbe
adc
sbbb
jo
adc
or
mov
mov
fstl
xlat
aas
jae
fsubs
ds
sub
loopne
jmp
dec
loop
test
mov
lea
cmp
cmp
mov
cmp
sub
mulb
js
ja
cmc
sub
or
mov
stos
sbb
sbb
inc
js
xchg
mov
pop
jae
inc
sar
fcompl
or
xor
movb
in
mov
pop
add
xchg
enter
push
push
aam
orl
jo
popa
sbb
push
and
sbb
loop
xchg
or
clc
adc
subl
mov
test
and
cmp
outsl
and
push
popa
and
or
aaa
and
mov
or
inc
mov
je
lods
outsl
adc
sub
sub
bound
in
mov
or
mov
cmp
ds
shl
or
or
or
sbb
push
or
out
mov
xchg
push
aas
push
test
dec
scas
or
push
jmp
orl
adc
mov
fs
add
fmuls
loopne
into
aam
mov
adc
iret
cs
lea
sub
and
lods
inc
cli
ret
shl
push
rorb
aaa
jmp
cmpsb
mov
lret
inc
stc
xor
sahf
inc
std
inc
dec
iret
xor
mul
xchg
fisttpll
dec
jne
and
adc
add
les
test
or
sub
cmp
je
jb
repz
inc
out
and
faddl
out
dec
pusha
aas
aam
xchg
pop
addr16
outsb
or
mov
sub
cld
jle
xchg
fmulp
fld1
fld
testb
fprem
f2xm1
fimuls
std
cmp
or
in
sbb
icebp
inc
repz
testb
sbb
rcrb
loope
insb
pop
xlat
mov
fsqrt
push
jmp
out
pop
fadd
pop
aas
sub
fcoms
popa
sar
std
data16
fmul
fsubrp
jmp
ficomps
enter
fcoms
repnz
loopne
sbb
or
clc
adc
add
push
fs
in
push
xchg
sbb
push
sub
sub
adc
dec
call
jbe
popa
int
cmp
loop
add
loopne
lods
sarl
inc
push
int3
add
je
scas
sub
or
in
cvttsd2si
aaa
adc
add
fdivrl
sbb
and
pusha
pusha
add
test
jl
adc
lods
dec
adc
mov
test
jns
fstps
adc
call
mov
adc
das
fcoms
adc
test
mov
mov
repnz
cld
add
insb
push
mov
in
repz
push
in
pop
push
add
int3
push
push
imul
or
andb
push
mov
loope
decb
add
mov
push
movl
add
mov
add
clc
repz
or
sti
or
sbb
xchg
or
adc
add
or
adc
lods
in
hlt
push
pop
inc
adc
lahf
or
into
add
pushf
pusha
idivb
movsb
jge
add
adc
pop
cmpl
inc
test
cmp
add
fs
imul
cmp
mov
jbe
sub
sub
lea
lods
outsl
insl
mov
dec
or
push
fldt
add
loop
ljmp
fmuls
push
mov
test
dec
and
inc
push
cmpb
mov
aaa
add
add
out
adc
cmp
jge
mov
lea
adc
aad
fnstenv
adc
fstpl
daa
sub
add
loope
out
sub
xchg
lret
add
cmovno
inc
sub
adc
xor
das
mov
sub
int3
in
test
adc
and
push
fnstsw
and
xor
push
cmp
xchg
add
ret
push
movl
cld
mov
xor
mov
add
inc
popf
mov
pop
or
xchg
xchg
notl
movsb
adc
pop
add
jne
sbb
xor
add
iret
and
jne
and
aas
push
inc
dec
xor
cmp
roll
loope
lret
inc
xor
sbb
add
add
add
lock
xchg
scas
push
adc
pop
popa
or
pop
push
push
add
xchg
inc
add
sub
adc
and
push
jnp
adc
scas
dec
int3
stos
and
lea
sbb
loopne
dec
sbb
cli
pop
ljmp
mov
mov
dec
and
ss
cmp
je
lcall
sbb
dec
inc
fildl
push
pop
rcrb
clc
in
xor
jne
sub
jns
or
add
mov
inc
mov
cwtl
test
sbb
lahf
rcrb
out
or
push
xor
jmp
push
add
inc
ljmp
xor
gs
xchg
mov
and
out
clc
add
cmp
stos
jne
std
decl
aam
jno
xor
sub
push
pop
ds
cld
ret
outsb
add
sbb
inc
push
cmp
dec
icebp
test
insb
or
inc
ret
jbe
jg
or
inc
pop
push
pop
pop
adc
loopne
mov
in
or
push
push
mov
sbb
dec
jg
dec
fs
xchg
dec
xchg
add
cmpsb
nop
xorb
dec
arpl
es
pop
ret
sbb
adc
js
mov
add
das
add
in
inc
dec
push
cli
cmp
add
add
xchg
loop
fstpt
outsb
xor
sub
movl
cmp
mov
inc
mov
stos
adc
add
mov
stc
xchg
add
sahf
je
nop
sbb
popa
sbbl
or
outsb
addr16
add
pushf
insl
inc
and
sbb
fnsave
or
push
aas
orl
jb
ds
ret
test
xor
out
jo
and
sbb
dec
dec
mov
jns,pn
inc
sbb
add
add
arpl
dec
push
add
xlat
mov
or
je
pusha
push
sbb
pmaxub
adc
jo
mov
bound
mov
andl
xchg
test
je
push
pop
push
lcall
std
dec
jo
xor
ret
pop
ret
pushf
scas
jge
or
push
into
inc
in
pop
mov
adcl
jge
xchg
subb
push
inc
jne
push
inc
scas
xchg
adc
lods
int3
mov
inc
jle
jl
fistps
nop
cmpsl
xor
push
call
insl
and
test
jl
mov
lock
cmp
pop
mov
adc
imul
mov
mull
sbb
bound
test
dec
idivl
inc
sbb
add
mov
adc
add
push
jb
dec
sti
mov
out
jecxz
sub
push
add
pop
mov
clc
scas
add
call
xchg
inc
pop
sbb
or
mov
push
mov
outsl
xor
and
and
xor
push
mov
into
cmp
jmp
sbb
mov
jmp
or
daa
dec
and
out
mov
je
inc
adc
outsb
adc
std
sub
sbb
jns
lret
in
cltd
adc
test
test
cmp
mov
pop
xchg
or
jle
pop
push
lock
pushf
pop
adc
mov
cmp
aad
out
fdivr
xchg
sbbl
push
or
xor
cwtl
pusha
and
or
pushf
inc
pusha
cwtl
sbb
ficoml
xor
aaa
push
xor
pop
pop
add
orl
pop
rorb
es
or
ja
cld
test
add
inc
test
les
inc
clc
les
push
fldz
dec
icebp
std
push
push
inc
jnp
sbb
or
mov
pop
adc
mov
out
ret
nop
or
scas
jne
out
cmp
cmp
xor
outsl
inc
js
mov
in
loop
add
xor
jne
data16
add
push
pop
mov
xchg
js
jne
pusha
add
dec
or
outsl
addr16
cmp
imul
adc
hlt
xchg
push
fldl
xor
test
jle
fsubrp
or
inc
cmp
jnp
in
sub
mov
xor
mov
mov
rep
daa
mov
les
int
pop
xchg
ss
jae
sub
pop
cmp
aad
sub
movb
shrb
or
inc
aas
pop
lahf
xor
shl
dec
fistpl
add
xor
cld
or
inc
das
xor
cld
std
ret
call
test
repnz
sbb
or
insb
popf
mov
imul
push
jbe
add
cld
ret
scas
add
ss
faddl
inc
mov
or
or
push
out
add
dec
fldcw
or
add
xchg
out
sbb
xchg
jns
jae
dec
div
dec
and
push
jmp
jge
and
inc
xchg
xor
mov
mov
adc
mov
adc
xchg
rclb
dec
imul
or
ds
jbe
cs
adcb
clc
lcall
addr16
lods
push
mov
enter
xchg
das
mov
mov
insb
addl
adc
dec
pop
and
pop
xor
mov
pushf
xchg
push
push
push
loopne
mov
mov
add
fstpt
mov
add
add
dec
fistps
scas
add
pop
ret
sub
or
filds
pop
sti
test
or
pop
or
shl
popa
into
gs
xor
adc
cmp
dec
stc
dec
clc
mov
inc
call
test
push
cmc
loope
cmp
shlb
jne
rolb
jle
es
aam
fildll
and
dec
or
icebp
push
push
push
xchg
xchg
ds
xor
dec
mov
cmp
rol
add
inc
or
adc
sub
pop
pop
jbe
add
stos
add
inc
dec
xchg
rolb
or
or
mov
xchg
mov
xor
loopne
je
pop
mov
pushw
ret
push
push
cli
add
ret
test
loope
test
jmp
jbe
aas
fs
cmp
lock
add
and
mov
jo
fdivrs
push
push
add
push
dec
lea
pop
pop
sub
pop
pop
push
movsb
arpl
bound
mov
and
imul
jo
cmpsb
iret
inc
xchg
push
js
cmp
scas
pop
or
mov
inc
push
imul
add
sahf
movsb
lock
ret
push
mov
lock
push
sbb
sahf
roll
jmp
fcompl
xor
fnsave
xchg
jg
rclb
lds
es
or
adc
pop
and
pop
and
sub
add
mov
sbb
mov
mov
add
jnp
or
fwait
rcrb
or
je
adc
cmp
les
jle
call
or
pop
test
imul
inc
mov
pop
fbstp
call
mov
pop
and
cmp
fwait
mov
aas
and
aam
mov
repnz
fcoms
inc
push
sbb
push
aam
test
xchg
mov
in
pusha
iret
sahf
xor
insl
imul
inc
inc
test
sbb
loopne
xor
leave
push
int3
push
ds
push
xchg
mov
ss
dec
add
cwtl
push
jb,pt
rclb
popa
data16
mov
or
adc
ja
into
adc
add
inc
inc
mov
aam
dec
add
outsb
mov
lea
enter
sbb
dec
jge
cltd
inc
loopne
hlt
and
inc
shrl
int3
sbb
ljmp
adc
cmp
mov
add
or
cmp
divb
mov
and
pushf
jecxz
cmp
das
rol
push
into
negl
xor
mov
sti
out
dec
adc
jmp
sub
dec
mov
test
inc
push
dec
rcl
aam
and
push
push
enter
lods
adc
mov
sbb
outsb
pop
mov
je
test
addr16
adcb
mov
adc
inc
sbb
inc
jge
cmp
shrb
jmp
bound
pop
sub
mull
dec
push
inc
pop
jle
mov
push
push
push
push
push
dec
adc
pop
add
in
pop
jbe
mov
fidivl
cmc
mov
jae
mov
hlt
inc
pop
mov
mov
pop
iret
notb
sub
sti
and
call
and
or
dec
mov
frstor
les
jo
out
jbe
test
jnp
pop
mov
xor
push
add
push
xor
mov
loopne
scas
fsubs
inc
or
adc
sbbb
dec
fisttpl
repnz
dec
or
rorb
add
pop
push
loopne
and
iret
jne
inc
sbb
add
mov
loopne
loopne
out
add
inc
cmp
add
fidivrl
xchg
movsb
dec
sahf
test
js
idivb
ret
sbb
cmpsb
cld
call
sbb
icebp
mov
push
inc
int3
push
xor
repz
jbe
cmp
cmp
faddl
stc
xor
mov
jae
cld
inc
pop
loope
cmp
movd
cmpsb
clc
fucom
add
pushf
xlat
int
push
push
xor
adc
cmp
xor
or
adc
inc
add
mov
push
add
dec
push
mov
daa
adc
sbb
lods
xchg
inc
sub
mov
inc
sub
jnp
stos
and
xchg
xchg
dec
or
adc
add
cmc
clc
pop
scas
xchg
inc
push
ret
js
xor
std
inc
sbb
cs
sar
mov
iret
dec
or
cmpsb
sarl
lea
jmp
cmp
jg
mov
adcb
xchg
lea
cmp
xor
mov
pop
orb
rolb
sub
rcrb
push
repz
sbb
js
enter
push
aaa
fsub
fcomps
das
push
and
outsb
fldl
addb
shll
cs
add
xor
jg
adc
data16
xchg
inc
inc
lcall
sbb
cmp
pop
jbe
or
or
jl
or
das
jo
xor
inc
inc
clc
ret
rorl
mov
es
lods
mov
adc
test
call
btc
lret
ret
push
inc
mov
imul
jbe
inc
inc
adc
nop
inc
cmpsb
mov
mov
xchg
sarb
ret
and
cmp
jl
test
in
sbb
rorl
and
sbb
jmp
push
jnp
add
inc
pop
mov
xor
mov
iret
js
sub
mov
ficoml
push
jne
sbb
xchg
decl
ret
adc
out
lods
push
push
dec
cltd
nop
add
sub
inc
add
imul
test
lret
pop
push
rclb
in
inc
mov
fldl
adc
push
or
add
pop
push
pop
or
imul
jp
inc
jle
xor
imul
or
jne
je
andl
pop
adc
mov
notb
xor
jle
sbb
lea
imul
lock
xchg
push
cmpsl
xor
jb
add
les
aas
shlb
mov
jmp
push
pop
mov
inc
mov
cmc
lods
movsb
xor
adc
rorb
cwtl
push
ds
jbe
mov
jne
mov
or
mov
pop
clc
popa
ljmp
pop
pusha
testb
mov
movsb
xor
sub
nop
xchg
xor
mov
jae
jge
lcall
je
dec
or
je
cmp
je
fdivl
rol
inc
lods
jno
scas
xchg
sbb
inc
mov
test
test
inc
and
rcll
test
mov
and
leave
out
xor
adc
shl
test
or
sub
mov
add
cmp
sub
xorb
pop
ds
loopne
jmp
cltd
jne
xchg
lods
push
mov
and
mov
int
int
and
filds
xor
pushf
push
push
cmpsb
dec
cmp
fs
mov
cmp
adcb
pop
cwtl
adcl
dec
push
xor
aas
mull
sti
or
dec
aam
adc
shrl
cmp
pop
enter
sbb
adc
inc
out
out
mov
mov
sbb
cmp
addr16
adc
ficompl
cmp
std
arpl
xor
jb
mov
fwait
and
cmp
icebp
rcl
add
jns
push
push
mov
mov
daa
push
adc
xchg
push
fmul
and
push
leave
inc
rclb
xchg
lcall
insb
xor
decl
adc
adc
inc
orl
add
inc
js
js
gs
jae
jo
movsl
add
inc
fnsave
or
unpcklps
push
inc
mov
jnp
and
subl
adc
adc
jne
lods
sub
and
mov
test
and
cmp
js
adc
ds
fsubrs
push
cmpsb
add
adc
mov
mov
mov
dec
loope,pt
push
dec
jne
movsl
add
xchg
sub
test
dec
inc
popf
push
lret
mov
sbb
jmp
or
inc
outsb
loope
and
jmp
add
shrl
adc
dec
xor
and
adc
adcb
loope
pop
mov
fcmovb
ja
add
mov
ja
or
sbb
push
push
add
xchg
cmp
push
push
dec
pusha
xchg
out
test
lock
add
jne
outsb
mov
jnp
ss
cmp
mov
jne
sub
add
and
aaa
add
das
push
xchg
pop
js
and
pop
add
inc
or
out
or
fildll
mov
fildl
cmpb
or
xor
outsb
in
xchg
xor
int
jle
adc
cmc
add
cmp
call
test
cmp
out
jle
faddl
add
push
je
pop
cmp
adc
loope
subb
lcall
enter
fcoms
add
mov
sbb
test
and
and
xor
stos
lcall
mov
mov
popa
mov
inc
aad
mov
mov
mov
repnz
xor
cmc
push
int3
mov
pop
cs
fildll
mov
sbb
xor
push
push
fstp
outsl
push
lock
data16
fs
or
nop
inc
add
notb
adc
sti
cmp
insl
add
dec
inc
xchg
inc
lahf
imul
and
or
push
dec
push
lock
jge
in
inc
sbb
std
inc
dec
pop
jo
dec
cmp
sub
rcll
sub
push
movsl
enter
rolb
fildl
fisubrs
mov
push
testl
lcall
push
std
cmp
lds
pop
xchg
ljmp
add
jle
jge
ret
hlt
or
xor
or
or
scas
outsl
sbb
dec
fcompl
or
outsl
and
cmp
push
test
out
into
mov
or
mov
add
mov
iret
js
push
ret
mov
int3
test
and
pop
js
push
sub
leave
and
movsb
xor
dec
mov
filds
and
add
add
xlat
sub
clc
push
cmp
mov
cld
stos
jp
xlat
push
xchg
sbb
pop
mov
dec
loop
dec
out
imul
rcrb
sbb
mov
push
jle
jmp
push
cmp
mov
mov
push
fistpll
jl
test
mov
sub
or
or
jecxz
dec
or
rcll
cmp
test
jge
mov
jmp
ret
movsl
dec
xchg
adc
movsb
dec
or
push
int
mov
loope
mov
pop
adc
je
inc
in
sub
mov
ss
mov
push
test
xchg
adc
pop
ljmp
mov
push
push
enter
and
inc
iret
repnz
adc
sbb
movsl
and
sub
and
mov
loop
push
lcall
loopne
cmpsb
push
stos
lret
fisttpl
mov
in
pop
adc
sti
adc
movb
lcall
and
cld
dec
add
push
mov
inc
adc
mov
subb
pop
sbb
push
sbb
popf
jbe
dec
clc
sbb
mov
enter
xchg
adc
mov
cmpb
je
clc
lods
xchg
and
cmp
add
dec
dec
mov
invd
add
xchg
syscall
xor
outsb
cmc
push
ljmp
lahf
mov
jle
and
vpaddw
jnp
mov
or
dec
jle
int
sub
sti
push
in
pop
or
mov
push
loopne
jecxz
cs
fnstcw
pop
add
push
in
sbb
push
movb
xchg
lock
fs
cmp
jbe
aaa
mov
inc
or
test
add
fbld
adc
mov
cmp
setle
adc
add
test
sub
adc
xor
cmp
jne
lret
test
sbb
testb
mov
adc
pop
cld
adc
fsubrp
test
mov
push
daa
in
and
ret
jl
sbb
jne
push
pushf
daa
sbb
lcall
or
repz
loopne
xchg
je
incl
push
imul
xchg
pop
insl
dec
in
mov
sub
in
int3
in
adc
add
cmc
mov
in
jg
stos
loopne
push
scas
rolb
scas
insb
jp
and
iret
movsb
mov
push
jo
push
push
push
lock
pop
fldl
cmp
add
xchg
adcb
add
mov
daa
inc
push
rol
fwait
lods
add
push
mov
shl
leave
push
loope
out
rorl
ror
pop
repz
pop
or
and
or
sub
sub
pop
nop
imul
add
mov
das
mov
sub
xchg
jb
dec
xor
or
lcall
mov
mov
sbb
test
loopne
add
idiv
inc
stos
or
das
clc
rep
movsb
add
mov
fbld
or
imul
and
popf
jno
or
push
push
xchg
adc
loopne
cmp
push
adc
lea
and
iret
or
out
filds
mov
adc
adc
push
cltd
jo
push
pop
sbb
and
test
mov
mov
fwait
pop
cmp
add
cmpsb
sub
insb
test
pop
and
mov
add
dec
lahf
mov
add
add
adc
push
mov
fcomps
les
mov
fs
xchg
push
popa
or
ss
fwait
sbb
mov
insl
jle
stc
mov
ds
or
mov
adc
nop
and
mov
gs
push
push
aaa
sbb
push
and
xor
in
push
add
xor
jg
arpl
jle
cld
add
lret
aad
pop
loop
sbb
add
mov
test
fcompl
rorb
shrb
lret
jmp
and
dec
lock
insl
int3
lock
dec
daa
mov
bound
mov
lods
dec
adc
add
call
or
cmp
sbb
rolb
js
xchg
shlb
addb
in
fisubrs
cwtl
hlt
rcr
xchg
mov
xlat
mov
xchg
lock
sahf
jl
sbb
fld
mov
jg
or
in
or
psubd
jae
add
gs
sub
cmpl
pop
or
daa
sub
add
jmp
sub
call
or
js
or
mov
adc
and
shlb
push
adc
or
lret
int3
insl
adc
push
jmp
fstp
jmp
push
mov
xchg
pop
sti
std
mov
das
xor
push
mov
das
add
add
imulb
enter
das
mov
mov
push
cmpsl
push
dec
nop
or
push
or
mov
xor
and
jne
xor
push
xor
movsb
or
out
test
push
mov
fld
int
or
inc
jo
loope
lea
adc
jns
std
sub
xor
or
push
and
lock
repz
mov
testb
test
mov
xor
mov
or
jle
loope
mov
mov
cwtl
test
movb
cmp
js
popa
dec
adc
mov
sbb
dec
pop
inc
push
dec
and
dec
pop
or
xor
lret
jl
cs
pop
mov
ljmp
pop
jecxz
daa
shlb
xchg
movsl
xor
jbe
adc
ljmp
fs
add
stc
add
repnz
push
or
stos
xor
inc
push
lea
das
jp
fcompp
inc
rorl
aaa
andb
mov
cmp
mov
pop
sub
mov
sbb
aad
test
cmp
dec
push
loope
arpl
push
jbe
adc
sti
or
iret
mov
test
pop
arpl
push
dec
add
lods
loope
push
inc
mov
xchg
cmp
lds
and
stos
xor
pop
push
or
dec
mov
inc
push
daa
cmpsl
cmp
enter
bound
bound
or
lock
mov
sub
xor
xor
js
test
jmp
pop
loopne
push
xchg
stos
xorl
mov
bound
loop
loope
inc
sub
aaa
jne
push
pusha
or
jo
mov
sbb
xchg
sub
cmp
and
mov
pop
cmp
popf
fmuls
lret
adc
mov
add
xchg
notl
lds
inc
adc
ss
adc
stos
push
push
push
loop
sbb
lods
and
inc
dec
xor
pushf
mov
in
adc
cmpsl
in
add
lret
mov
pop
cmp
fmuls
or
shll
repnz
mov
add
nop
and
subl
sbb
decl
sub
inc
rclb
cmp
push
popf
out
cmp
mov
test
shrb
dec
inc
ljmp
mov
adc
mov
test
inc
jbe
inc
rcrl
xchg
dec
cmpsb
lock
orb
flds
inc
test
sbbl
fs
sti
add
loop
add
mov
add
adc
popf
or
inc
popa
mov
mov
xlat
hlt
add
adc
add
cmp
fnsave
add
xor
incl
push
jp
push
mov
sbb
out
sub
std
push
lahf
jne
mov
or
out
cmpsl
test
jbe
jb
pop
or
mov
and
jbe
or
int3
adc
flds
out
push
jnp
ret
jge
jge
rorb
cmp
aam
adc
jne
in
adc
dec
fistps
nop
mov
mov
mov
adc
jb
cmpsl
cmp
mov
or
mov
jbe
lret
add
jns
add
gs
cmp
cmp
jns
adc
or
cmp
xor
notb
stc
inc
add
or
sbb
jb
push
rsm
inc
sahf
jns
push
bound
mov
std
add
fldz
or
pop
into
jle
add
inc
xor
jmp
in
lret
cs
popa
cmp
inc
mov
lock
test
clc
push
push
in
int
mov
fsts
je
daa
mov
xor
into
mov
adc
bound
jno
subl
push
inc
mov
inc
enter
jne
push
jne
xor
xchg
add
cs
jge
pop
loopne
add
adc
and
jne
sbb
std
outsb
daa
cmpsl
add
push
push
and
inc
cmpsb
add
frstor
fadd
add
xor
repnz
leave
pop
mov
fsubrs
jge
fisubrs
pusha
mov
adc
dec
lcall
in
jne
jne
push
add
xor
sbb
outsl
stos
sub
and
std
lcall
jecxz
push
fimuls
pop
adc
jno
imul
jo
sarb
cmp
cmp
subb
mov
lcall
jb
rol
aad
test
jbe
es
call
adc
pop
and
xorb
mov
push
jecxz
mov
jmp
pop
loope
fwait
in
je
jae
inc
iret
fildl
xor
inc
sub
adc
xor
and
and
cltd
dec
mov
or
xchg
and
mov
xchg
test
jbe
mov
cld
or
sbbb
lock
and
add
addr16
pop
mov
xchg
add
jns
push
adc
pop
xor
xor
nop
xchg
shll
push
iret
js
js
insb
and
js
js
dec
cmp
push
mov
loop
lods
xchg
sub
add
repz
jae
sub
dec
call
call
cmp
jmp
push
icebp
push
mov
mov
and
pusha
adc
out
mov
movsb
push
lahf
inc
fadds
jge
leave
call
loop
adc
and
sub
and
add
sub
or
push
xor
xchg
xor
js
in
or
fcoml
enter
inc
mov
cmp
adc
add
out
add
sub
or
leave
xchg
add
jbe
popf
push
pop
dec
flds
push
pop
inc
aas
js
lds
js
pop
shr
inc
dec
adc
xchg
adc
adc
mov
in
clts
push
js
test
sub
fwait
mov
jge
mov
lcall
clc
cwtl
movsb
roll
jno
fidivl
pop
in
adc
jns
mov
in
jb
mov
push
inc
sub
mov
cs
push
push
xchg
ficoml
mov
call
sahf
inc
and
jns
jns
das
cmpsl
nop
or
or
or
or
fsubp
and
pop
int
sub
inc
xchg
ret
push
lret
test
jns
daa
cmp
lret
jns
jns
jns
jns
leave
inc
dec
and
jns
pop
and
jns
xchg
mov
ja
in
inc
xchg
mov
ja
ja
sbb
nop
jns
push
mov
js
loopne
add
pop
push
enter
cmp
add
xchg
pop
enter
xchg
add
js
jmp
or
jb
clc
mov
push
pusha
add
or
imul
repnz
sub
clc
add
push
insl
add
adc
add
mov
mov
push
test
xchg
or
nop
loopew
loopne
popf
jno
lret
mov
cmp
leave
movsl
mov
pop
xor
xor
repz
pop
outsl
mov
faddl
inc
das
add
mov
fsubr
out
test
pop
mov
out
mov
mov
js
mov
add
mov
leave
cmp
popa
xorb
adc
push
xchg
or
adc
imul
sub
adc
sbb
popf
adc
adc
lea
add
jge
and
cs
outsb
std
lds
cmp
out
in
add
rorb
sbb
rorb
dec
jbe
cltd
sub
cmpsb
inc
sbb
pop
ret
or
ret
add
mov
jp
adc
ds
and
jmp
add
add
jb
inc
jecxz
out
pop
cmp
and
cmp
ret
lcall
mov
push
add
mov
orb
call
insl
loope
mov
push
nop
xchg
sbb
pop
enter
jg
mov
jns
out
into
pop
arpl
cmpsl
fnstcw
into
push
shlb
dec
enter
push
lds
fldenv
icebp
dec
add
push
adc
pop
mov
daa
out
mov
repz
in
push
mov
jnp
out
add
cli
sahf
and
lahf
ja
iret
sub
aad
imulb
push
xlat
lea
sahf
imull
push
push
pop
mov
sahf
out
imul
popa
pushf
out
pop
jp
fcoms
push
adcb
push
movb
push
cld
jbe
cltd
rorb
adc
in
mov
sbb
mov
xchg
lds
fsubrp
adc
and
jae
add
mov
mov
xchg
and
xor
popa
add
pop
fsubrs
call
jns
jo
fisttpl
inc
mov
dec
aad
popa
cmpsl
mov
lret
add
xchg
scas
icebp
inc
adcb
xor
xchg
push
sub
or
and
fsubr
push
cld
add
jp
jmp
sbb
adc
push
push
push
jmp
in
sub
das
mov
test
pop
fbld
xchg
or
dec
fnstcw
test
ret
pop
lds
sub
xor
push
dec
mov
dec
push
and
mov
cmp
mov
lods
add
loope
scas
call
mov
mov
int3
mov
lds
les
mov
adc
and
mov
je
push
dec
xor
xchg
clc
inc
xchg
cld
arpl
call
insb
cmpl
je
push
push
pop
mov
sub
nop
or
test
outsb
jne
ja
mov
push
stos
pusha
ljmp
adc
sbb
adc
testb
or
pop
sub
pop
les
xchg
mov
add
dec
out
inc
adc
push
and
test
add
push
sub
fsub
rcrl
xchg
sub
mov
popf
mov
mov
push
jo
sti
sarb
or
xchg
jmp
rcrb
test
testl
and
sub
test
cmp
mov
or
mov
fidivs
xchg
mov
fcoml
adc
fs
jno
leave
fs
push
shll
push
adc
fisttps
mov
inc
inc
arpl
fldt
imul
gs
movl
ret
cmc
push
push
cmp
ret
pop
pop
imul
out
push
movsl
sub
mov
fwait
mov
out
jl
mov
jo
int3
push
inc
jl
enter
push
inc
mov
push
dec
xor
xchg
push
sbb
ror
sbb
xor
cltd
push
mov
imul
in
mov
adc
test
aaa
in
inc
aaa
dec
or
inc
mov
pop
sahf
xor
hlt
pop
shlb
cld
test
cmp
dec
sbb
adc
xchg
add
xor
sub
cmp
adc
shlb
loop
dec
adc
mov
insb
or
push
and
jle
and
xchg
or
clc
and
pop
and
add
mov
cltd
out
sub
fistpl
call
cld
inc
mov
inc
dec
sbb
or
idiv
pop
test
sbb
out
mov
xchg
xchg
fadds
mov
add
jne
arpl
pop
mov
sti
jne
fwait
out
stos
movsb
and
ja
jb
dec
sub
les
inc
decl
pop
insb
push
lock
add
pop
pop
xchg
shll
mov
sbb
mov
fisubrs
add
xchg
mov
xor
and
pop
jns
rcr
adc
cmp
lret
dec
dec
jbe
push
sub
add
and
add
mov
inc
ljmp
leave
adc
or
add
andl
shrb
xchg
push
call
push
jmp
inc
outsb
pop
shll
sti
pushf
fcmovbe
sbb
pushf
adc
aam
push
xchg
push
dec
movsb
movlps
mov
mov
xor
popf
pusha
pop
test
mov
sub
insl
fs
jl
ds
xor
xchg
rclb
das
call
outsl
cmp
sbb
jl
in
push
pop
in
movsl
push
jbe
inc
mov
shll
lods
xor
and
push
mov
cltd
loopne
or
imul
out
adc
lcall
sbb
inc
sahf
inc
xorb
jno
faddl
xlat
add
jns
and
or
adcb
pusha
dec
stos
push
aaa
dec
or
mov
pushf
xlat
pop
pusha
out
push
repnz
push
inc
inc
xchg
adc
inc
sub
shrl
jb
shrl
scas
mov
jle
add
sbb
dec
jb
addl
stc
stos
pusha
and
add
dec
adc
xor
lret
or
inc
adc
and
test
cli
add
mov
push
sbb
push
or
inc
ja
mov
adc
and
inc
mov
or
sbb
xor
inc
pushf
sbb
jg
dec
mov
pop
ret
daa
xor
arpl
loope
adc
lods
mov
loope
in
sbb
pop
add
outsl
movsl
loope
popf
add
adc
mov
inc
cltd
inc
sub
or
sub
jp
lds
insb
cmp
dec
test
or
or
jns
jbe
fnstcw
and
movsb
ret
adc
mov
iret
mov
lret
adc
enter
pop
dec
push
ss
cmp
int3
je
lret
xchg
push
int3
sub
xchg
mov
push
dec
push
andps
and
inc
addb
mov
mov
xchg
repnz
aad
or
sbb
jg
addr16
and
in
sar
push
mov
pop
mov
sti
out
rorl
jg
jbe
insb
sar
aas
shl
lea
out
or
and
lock
adc
pop
lds
dec
cmp
les
stos
aam
sbb
push
add
insb
sub
and
push
shll
jns
cmp
and
jle
fs
lods
sbb
inc
loop
pusha
lock
inc
in
pop
mov
cmpsb
push
jecxz
add
ret
xor
and
xchg
shrb
dec
push
dec
pop
dec
adc
dec
mov
add
jp
xchg
mov
pushf
mov
xchg
adc
xchg
gs
jns
and
bound
and
xor
out
sub
cmp
fldl2e
je
jle
lea
mov
adc
jae
js
mov
sub
push
push
repnz
mov
sar
fsubr
pop
inc
jne
stos
and
ds
ljmp
aaa
aas
inc
inc
cmp
jl
sbb
or
add
pop
test
cmp
mov
sbb
pop
or
sbb
ljmp
sbb
mov
or
fs
lods
pop
ss
cmp
add
and
iret
cmp
add
mov
add
xor
test
pop
inc
xchg
or
mov
lret
inc
push
jmp
jb
outsl
cwtl
cs
xchg
jnp
or
inc
sub
ljmp
mov
jb
nop
pop
or
loope
scas
lcall
daa
outsl
sub
test
pop
push
mov
xor
fisttpl
jmp
shr
inc
add
mov
mov
test
mov
jmp
xchg
pop
ficoml
adc
sbb
adc
mov
xor
int
mov
inc
clc
or
or
pop
mov
or
and
test
incb
add
add
adc
pusha
xlat
pop
sbb
jl
mov
cwtl
sub
rol
and
mov
cmp
dec
pop
sbb
or
orl
push
lea
je
mov
andl
and
push
dec
pop
cs
popf
rolb
sti
xor
xchg
cld
inc
xor
mov
jnp
mov
add
ret
mov
ja
and
int3
cmp
mov
scas
int3
aaa
and
ss
imul
and
cmp
scas
dec
xor
adc
sti
mov
and
enter
mov
add
subl
inc
sub
mov
insb
sbb
sub
out
mov
sub
adc
cmpxchg
fsubrs
and
mov
ret
mov
addr16
jo
scas
in
enter
icebp
loopne
jbe
ret
push
cmp
and
aaa
push
aas
das
movsb
cltd
in
jg
lahf
dec
push
inc
jns,pn
adcb
out
push
gs
xchg
and
or
or
push
sbb
xor
pop
push
jp
jle
lea
push
push
push
add
fs
sahf
and
fcoml
sbb
bound
dec
dec
subl
js
rcrb
aaa
pop
adc
dec
lea
into
lock
add
out
jge
jge,pn
xchg
xchg
add
repz
xchg
lock
push
icebp
push
lods
dec
pusha
repz
inc
push
roll
push
test
adc
ds
and
push
movb
inc
adc
bound
in
mov
cmp
dec
xchg
in
cmpsl
pop
and
cmp
jle
sarb
sub
lret
xchg
cmpsb
pop
fwait
and
into
lret
mov
mov
cmpsb
add
and
jle
xchg
xchg
icebp
push
fadd
lret
dec
xorl
ret
sbb
ffree
jo
pop
xor
adc
add
gs
or
jmp
clc
rclb
jg
jle
pop
or
addr16
mov
inc
or
test
jnp
or
frstor
push
mov
cs
pop
dec
push
roll
sti
xchg
into
add
popw
popa
mov
and
iret
pop
or
loopne
decb
adcl
insl
push
bound
cmp
lods
jle
add
fld1
and
push
sar
cmp
test
and
ja
pop
mul
and
cmp
cld
fwait
cwtl
rorb
push
clc
lea
fildll
push
and
push
sbb
test
dec
inc
or
shl
cmp
or
xor
in
pop
dec
incb
stc
lods
addb
jbe
push
xchg
mov
xor
push
std
dec
push
dec
gs
popa
inc
cwtl
fstl
mov
popa
or
cmp
js
in
or
cmpl
adc
cmp
enter
jg
push
mov
pop
es
mov
aad
jecxz
pusha
sub
mov
sbb
lret
mov
insl
mov
fsubl
shll
adc
pop
jmp
or
mov
dec
shl
cmp
push
addl
sbb
ss
mov
daa
dec
insb
pop
ret
fcompl
sbb
imul
adc
adc
push
lea
dec
inc
mov
and
addl
inc
pop
das
loope
adc
adc
nop
insl
pop
add
push
mov
xchg
lock
adc
inc
xor
mov
sub
xchg
lret
or
cmp
jg
pop
xchg
and
in
ss
jge
in
mov
jge
jge
out
xchg
icebp
mov
inc
pop
jge
pop
aam
les
cmc
mov
mov
jp
and
or
std
mov
outsl
dec
ja
fsub
movsl
mov
pusha
imul
push
js
xchg
test
scas
insl
outsl
and
xor
push
gs
pop
cwtl
inc
mov
pop
mov
imul
cmp
xchg
and
mov
xchg
sub
fildll
push
xchg
das
add
scas
xchg
inc
xchg
or
loopne
out
out
repz
cmpb
rcll
add
xchg
xor
push
push
add
aam
pop
xchg
sub
insb
int3
inc
mov
inc
loope
push
pushf
fisubl
aad
scas
imul
pop
sub
dec
jl
inc
cld
add
cli
jae
cmove
fldl
push
pop
push
pop
inc
cmp
mov
lea
addr16
out
jge
rcl
fs
inc
pop
add
ja
shlb
add
pop
dec
popa
push
mov
dec
adc
mov
imul
push
sbb
lods
outsl
sbb
sub
push
dec
sub
and
xor
aas
adc
sub
xor
lcall
push
data16
mov
add
gs
enter
pop
adc
or
adc
adc
mov
mov
jmp
fsts
mov
int
nop
sbbl
int
inc
cmp
lea
in
cmp
mov
jne
lahf
out
inc
addb
xchg
rclb
inc
jne
pop
mov
lock
mov
movsb
mov
pop
jns
cmpsl
pop
pop
int
repz
jbe
mov
mov
popa
hlt
cs
movb
hlt
js
in
jge
iret
push
or
das
xchg
hlt
sysret
lcall
sub
in
jge
cmc
sysret
inc
xor
in
addr16
scas
jns
cmp
add
notl
movsb
sahf
out
es
movsb
jl
xchg
gs
idivb
adc
clc
pop
int
jns
es
sub
fisubrs
sub
lea
inc
sti
daa
xor
cmpb
out
fsub
and
xchg
mov
jle
mov
mov
repnz
inc
inc
push
push
push
push
rcrb
push
mov
push
mov
push
push
mov
insl
shl
lahf
mov
jmp
jl
push
push
insb
adc
cwtl
sub
push
ret
into
xchg
dec
mov
or
sbb
push
and
mov
sahf
pop
cmp
dec
test
pop
jne
mov
loopne
mov
and
inc
mov
idiv
testb
push
stos
addr16
push
and
repz
mov
pop
push
push
test
xchg
jbe
dec
and
add
push
test
lcall
push
shll
mov
or
es
pop
clc
cmpsb
test
test
scas
sub
pushf
mov
mov
and
add
andb
mov
clc
dec
mulb
xchg
add
cmp
pop
fisttpll
ja
or
inc
mov
dec
jnp
fistpll
lock
add
mov
enter
jge
push
out
cmp
pop
mov
mov
push
cmp
in
or
mov
adc
rcrb
js
jo
or
ret
aaa
int3
pop
popa
or
inc
adc
out
and
dec
cmpb
insb
adc
xor
cwtl
add
inc
xor
and
lret
ret
lcall
sub
idivl
adc
mov
in
lods
sbb
rorb
xchg
mov
lods
int3
pop
sub
or
cs
push
mov
andb
into
in
pop
push
into
enter
jns
cmp
sbb
push
mov
call
adc
pushf
adcl
pop
mov
nop
test
bound
adcl
aad
mov
xor
adc
pop
ja
push
popa
sub
scas
ret
rolb
sub
clc
cs
mov
dec
pop
pop
sbb
mov
or
mov
mov
xor
lea
and
enter
fs
push
mov
aas
inc
and
enter
sbb
icebp
ss
repz
mov
jmp
mov
or
adc
jmp
xor
sbb
loopne
inc
lock
stos
push
dec
nop
aaa
loopne
and
or
test
sbb
cmp
dec
call
aas
sub
inc
mov
lock
dec
leave
sti
mov
push
and
push
pusha
movsb
pop
in
push
aam
js
mov
sahf
cmp
imul
stos
cmpl
js
pop
jbe
fidivs
pop
pop
in
xor
fs
stc
cltd
mov
xor
sub
cltd
jmp
sub
es
lods
pop
idivb
out
mov
xlat
mov
test
cmpsl
sub
out
xorb
test
nop
test
mov
stos
gs
sub
pop
ja
jbe
mov
pop
push
sub
insb
push
add
test
sbb
pop
sbbb
add
jp
inc
imul
inc
mov
lret
inc
inc
jle
jo
dec
and
aaa
int3
add
out
sbb
xor
or
mov
push
inc
jo
ds
lods
sbb
hlt
add
push
or
xlat
daa
cmp
add
cmc
mov
or
mov
push
fidivrs
repnz
dec
roll
dec
inc
fs
mov
outsl
cld
sahf
xchg
inc
mov
inc
or
divl
jnp
jae
fmull
orb
cmp
lea
xor
shl
ficompl
lods
int3
jmp
insb
scas
insb
or
sub
cmpsl
rcrb
testl
push
add
sub
inc
xchg
add
inc
dec
or
add
addr16
imulb
stos
cmp
dec
sti
jne
lahf
stos
mov
cmp
jae
lahf
sub
xor
mov
sbb
add
or
dec
inc
fs
sub
mov
enter
and
or
add
sub
test
mov
mov
push
pop
and
xlat
and
iret
pop
pushf
push
mov
dec
dec
test
mov
rcrb
dec
pop
pop
sub
add
mov
sub
arpl
popa
sub
push
and
sub
cmpsl
dec
sbb
push
bound
fs
push
insl
dec
setle
stos
inc
aaa
ja
dec
sbb
push
inc
cmpsl
jecxz
push
dec
xchg
and
dec
and
ret
dec
shl
maskmovq
testl
xor
add
jl
imul
rcrb
jnp
outsb
pop
push
iret
repz
lcall
adc
cmc
lods
mov
or
adc
decl
sub
jl
addb
push
rcrl
or
fs
inc
push
adc
mov
and
sbb
jmp
and
dec
jo
outsb
sbb
push
imulb
and
pop
jnp
pop
ret
inc
fldcw
dec
lahf
cmp
inc
andb
cli
inc
loope
adc
cmp
jmp
ljmp
xchg
shrl
mov
push
inc
dec
popa
add
int3
jle
sub
data16
clc
shll
push
adc
push
push
push
lahf
lea
add
jg
push
arpl
and
pop
mov
cmp
lret
aaa
push
lcall
cld
cltd
aad
out
mov
dec
inc
or
pusha
adc
xchg
push
loope
xor
xchg
and
sbb
sti
and
ss
cld
jnp
push
mov
cld
add
mov
adc
je
subl
xchg
adc
mov
jo
sbb
sbb
sbb
in
and
add
int
sbb
test
and
mov
loopne
jo
repz
mov
dec
or
add
or
push
or
mov
push
xor
loope
mov
lods
xor
test
les
adc
lods
or
mov
repnz
push
test
push
and
push
pop
cmp
xchg
sbb
dec
cmp
out
cmp
cmp
xor
lods
xchg
dec
xchg
cmp
cli
pop
mov
nop
cmp
and
add
xchg
adc
sbb
dec
or
nop
and
fstpl
or
jp
cmp
add
xor
idiv
rolb
cmp
lock
xchg
inc
mull
and
outsl
jl
pushf
mov
icebp
mov
adc
leave
xor
daa
sub
aam
push
imul
mov
inc
fs
rep
add
sti
xchg
xchg
add
jbe
aas
adc
or
mov
push
fadds
push
add
sub
movsb
adc
xor
push
out
inc
adc
xchg
lcall
imul
sarb
enter
outsb
xor
insl
sti
bound
sub
or
add
test
mov
adc
popa
lcall
add
add
pavgb
movsb
sub
xchg
and
add
adc
xchg
xchg
sbb
add
inc
aas
or
or
pop
es
je
add
cmpsl
int3
adc
sub
mov
inc
ret
dec
shrb
mov
add
fcomp
push
pop
scas
or
shrl
in
nop
jp
pushf
mov
fbstp
andb
add
test
mov
inc
push
popf
add
push
ss
push
inc
mov
je
pusha
mov
sub
or
xor
mov
ffreep
add
pop
jl
sahf
js
push
or
adc
movsl
and
and
mov
js,pt
leave
inc
iret
push
push
cmpsl
mov
add
jno
cli
xchg
sarl
jl
ret
pop
push
lahf
xchg
push
xor
jo
push
xchg
insb
push
sbb
jmp
mov
jns
lcall
sbb
sbb
movsl
add
in
rcr
jl
repnz
sbb
push
push
mov
cmp
pop
addr16
jmp
mov
xchg
sbb
push
xlat
xchg
lahf
in
cmp
ljmp
insb
pop
adcb
das
or
dec
jmp
mov
shr
pop
repnz
loopne
adc
rolb
adc
jbe
out
sub
xlat
mov
add
nop
orb
pop
test
mov
in
ret
and
add
icebp
or
add
and
or
adc
mov
outsl
loop
pop
inc
add
sbb
std
xchg
data16
xchg
outsl
fldl
fstpl
adc
push
loopne
cmpsb
push
adc
pushf
adc
jno
pop
and
cmpl
inc
adc
pop
jg
cmp
xchg
push
mov
sahf
sbb
rclb
movsb
fimuls
adc
addb
or
cmpsl
mov
mov
sub
mov
xor
dec
push
mov
and
ss
add
sub
test
cmp
and
push
mov
leave
arpl
and
repz
cltd
cmp
push
inc
sbb
test
xchg
and
and
mov
jo
jp
or
add
add
xorb
in
dec
sub
int
mov
paddq
xchg
scas
sahf
xchg
mov
add
jne
test
rcrl
pop
mov
mov
sbb
fistps
add
xorl
fs
cmp
xchg
xor
mov
mov
cmp
leave
lret
and
subl
scas
inc
push
mov
jns
xor
imul
loopne
and
arpl
ret
add
mov
pop
int
test
adc
xor
dec
xchg
pop
add
test
fiaddl
add
push
mov
loope
sbb
loope
adc
ret
dec
mov
xlat
js
mov
sub
and
sbb
mov
push
and
mov
pushf
cmp
or
sbb
sbb
or
dec
xchg
cmpsb
rorb
rcll
push
cmp
dec
lea
les
ret
sbb
adc
test
cmp
sbb
xor
mov
cmp
inc
adc
in
xchg
pushf
je
xchg
xchg
pushf
xchg
pop
cmp
sub
mov
cltd
nop
push
subb
push
es
add
pop
sbb
out
loopne
pop
lock
lret
xchg
repnz
sub
cmp
add
push
mov
rcll
sbb
xor
or
inc
jle
push
pop
add
setns
push
push
pop
in
dec
popf
test
and
in
cmpb
mov
dec
mov
ss
add
and
add
mov
loop
sbb
adc
call
dec
pop
pop
add
xchg
pushf
sbb
xchg
into
sbb
scas
adc
sbb
stos
and
pop
outsb
dec
add
and
cmp
sbb
or
push
jecxz
cmp
loopne
sbb
cs
movsl
add
addb
sub
scas
js
js
push
add
mov
sbb
loopne
sub
xchg
cmpsl
pusha
pop
cmp
push
jb
and
sahf
inc
dec
out
decb
xor
movb
sbb
or
repnz
arpl
nop
or
push
xor
lret
insb
nop
nop
in
rcrl
sub
leave
lcall
lcall
sub
mov
loop
leave
xchg
nop
scas
cmpsl
rolb
add
pusha
leave
leave
xor
or
lcall
fwait
nop
xchg
dec
push
xor
push
add
xchg
repnz
xchg
addr16
xchg
dec
lcall
pop
sbb
icebp
sub
inc
fisubs
adc
cmp
pshufw
cmp
xchg
popl
or
fs
xchg
add
mov
and
push
dec
pusha
inc
nop
push
adc
sub
imul
sbb
insb
xchg
fimull
xorb
push
push
mov
clc
cmp
add
pushf
lret
pop
lock
popl
push
rol
insb
in
cmp
gs
pushf
dec
sar
jb
sbb
inc
add
push
dec
dec
adc
xchg
push
repz
leave
add
adc
xchg
xchg
lret
movsl
xchg
in
stos
repz
adc
dec
jnp
cmpsl
pop
add
cmp
push
cli
pusha
outsb
loop
push
gs
push
popf
outsl
enter
pop
rcr
push
pop
xor
shrb
fisttpl
sub
pop
dec
lret
mov
and
or
cmpb
push
enter
not
ret
mov
mov
push
clc
mov
repnz
js
add
gs
or
push
imul
pop
cmp
xchg
jae
and
dec
testl
cmp
jb
daa
lds
sub
lret
mov
push
cmp
adc
mov
lcall
inc
cmpsb
mov
pop
inc
inc
sub
mov
in
dec
in
movsb
jl
xchg
xchg
xchg
cmp
push
cwtl
aam
xchg
subl
lahf
lock
loopne
lcall
add
cwtl
aam
xchg
jp
and
sub
xorl
adc
cs
and
sbb
jecxz
insl
loop
xor
add
pop
add
adc
pause
xchg
and
add
pop
test
addl
stc
mov
mov
insb
lea
push
push
rorl
dec
mov
inc
mov
mov
dec
xchg
pop
inc
dec
pop
add
hlt
popl
sbb
xorb
or
adc
adc
jo
stos
jle
jecxz
and
sub
mov
push
adc
iret
jo
jl
aaa
in
inc
lahf
adc
add
jne
dec
daa
jo
aaa
in
inc
daa
jae
popf
cltd
pop
adc
xorl
pusha
popf
mov
cltd
mov
test
jns
sbbl
and
pop
sarl
ja
adc
jnp
sub
lcall
pop
aaa
jne
and
or
mov
mov
and
pusha
fwait
push
lcall
lcall
in
lcall
or
stos
jmp
sub
fwait
jp
xchg
stos
sbb
jb
test
sub
sub
ja
dec
jmp
loopne
and
add
hlt
test
testl
mov
shrl
jo
xchg
push
adc
loopne
push
dec
incl
ljmp
das
xchg
daa
mov
push
sub
xor
jbe
push
iret
jnp
push
dec
push
and
jo
and
lods
jbe
and
nop
ret
and
mov
int3
and
ja
hlt
test
push
daa
aad
push
and
cltd
iret
repz
adc
aad
or
pusha
adc
and
jp
inc
pop
and
lret
nop
sbb
or
fmull
push
mov
pop
xor
fbstp
sub
pop
cmpsl
add
adc
insl
fldl
inc
inc
sub
inc
mov
or
outsl
lea
and
mov
jp
mov
mov
push
mov
fsubrp
inc
or
movsl
inc
jl
roll
sbb
cmp
cmpl
xchg
test
sbb
cmpl
orl
jmp
fildll
push
mov
fldl
dec
or
loopne
or
jge
or
adc
push
xor
add
inc
or
iret
or
adcl
lea
insb
mov
adc
mov
lds
pusha
aam
sahf
aad
mov
sub
data16
xor
pop
jbe
std
add
test
push
inc
mov
out
js
orb
dec
mov
xor
lds
mov
cmp
inc
cmp
pop
xchg
push
push
sub
xchg
lret
cmp
test
xor
xchg
mov
and
fldpi
popf
push
jno
mov
rcrb
pop
movsl
mov
mov
add
inc
nop
divps
adc
push
xchg
mov
lea
icebp
push
arpl
test
in
out
cli
or
lret
mov
test
and
lods
mov
mov
rol
pop
negb
addr16
or
fisubrs
stc
mov
mov
enter
add
leave
setne
ja
add
aaa
ret
push
and
xor
mov
xchg
fwait
movb
ja
bound
inc
add
adc
mov
cmc
rclb
pop
dec
mov
push
pop
sub
cwtl
ret
fimuls
mov
xchg
inc
cld
mov
xor
xor
pop
adc
mov
xlat
pop
or
mov
test
int
popf
fistpl
les
inc
add
stc
ljmp
push
push
or
inc
or
popa
push
mov
adc
aaa
inc
inc
test
sets
das
cmp
add
test
pop
add
sub
inc
cltd
pop
jge
cmpsl
sbb
jns
inc
pop
xor
add
or
xchg
ja
fldl
adcl
xchg
or
or
popa
xchg
enter
mov
pop
notb
loope
jmp
sbb
sbb
adc
pop
addl
inc
outsb
aaa
popl
data16
pop
pop
adc
aam
mov
test
outsl
mov
adc
sbb
pop
mov
or
jo
push
pop
pop
sbb
and
es
orps
test
lahf
das
movhps
adc
or
dec
adc
adc
test
out
mov
test
adc
mov
test
xchg
daa
inc
lret
out
loope
movsb
adc
insb
push
add
testb
adc
scas
mov
xchg
sbb
sub
mov
enter
repnz
bound
cmpsb
adc
xor
pushl
jge
bound
test
inc
bound
adc
pop
mov
popf
test
dec
nop
test
adc
das
cmp
dec
jb
rolb
in
enter
popa
nop
add
leave
test
inc
xor
push
leave
sub
test
pop
jle
or
popf
mov
adc
jnp
inc
mov
xchg
fistpll
pusha
adc
mov
inc
pusha
test
sarl
jge
pusha
pop
nop
fcomps
add
sahf
sbb
cmp
in
xchg
jp
or
ret
clc
pusha
push
push
aas
jge
mov
inc
fldl
mov
mov
mov
and
test
in
xor
jl
ja
mov
adc
dec
subb
push
sbb
sbb
pop
fmull
sub
dec
xor
jae
or
fildl
mov
cs
jmp
push
pop
enter
dec
pop
dec
inc
push
cli
sub
inc
pop
pop
inc
or
mov
mov
gs
mov
sbb
fadds
dec
cmpsl
jb
inc
sub
pop
add
movsl
leave
add
clc
fwait
outsb
enter
xor
and
insb
or
mov
stos
shll
daa
jns
mov
aam
mov
popa
sub
mov
jge
popa
mov
mov
aas
push
test
shlb
and
cmp
cwtl
xchg
nop
and
push
or
popf
push
out
and
and
in
add
mov
data16
cmp
out
clc
push
das
cmp
imulb
iret
repnz
lods
pop
xchg
pop
jns
out
and
mov
int
ljmp
sub
lret
repz
xchg
jns
insb
mov
aad
xchg
cmp
aaa
dec
divl
dec
pop
sub
push
xchg
push
xor
popa
inc
sbb
add
aad
das
xchg
sbb
or
ror
push
dec
fidivrl
lds
andb
push
popa
loope
add
clc
dec
mov
pop
adc
or
icebp
andl
add
in
lahf
es
call
and
push
pop
nop
mov
mov
daa
or
addr16
dec
push
fld
addr16
popl
pop
mov
or
adc
mov
jo
pushf
mov
cld
xor
test
xor
scas
or
xor
push
or
jp
inc
je
leave
in
addl
pop
push
lea
dec
insl
add
xorl
stos
jmp
mov
mov
add
in
out
push
sub
loopne
inc
inc
fstl
pushl
xor
test
je
icebp
pop
ret
test
pop
cwtl
ret
and
inc
test
ret
xor
and
movzbl
push
and
inc
xorl
nop
jl
bound
and
pop
and
sbb
push
or
mov
fiaddl
leave
lcall
jle
cmpsl
mov
aaa
test
push
sub
out
dec
inc
or
in
cmp
jmp
loopne
je
nop
sub
xchg
dec
xchg
out
in
ds
xor
adcb
iret
and
loop
cli
adc
loop
cli
aaa
rcll
cld
xor
adcb
add
xorps
jb
or
push
cmp
popf
jmp
add
add
cmp
or
mov
add
leave
shr
xchg
cmp
daa
push
push
test
jmp
adc
adc
shll
ret
shl
ret
sbbb
mov
adc
std
je
inc
add
sub
enter
ret
jns
adc
jle
dec
cmp
push
sarb
xchg
aas
inc
inc
mov
mov
gs
out
cmp
jg
rolb
std
add
push
add
incb
sub
je
sarl
in
rorl
sub
jp
rcll
jne
mov
xchg
idiv
jg
jne
cmp
ja
jmp
dec
loopne
pop
movsl
std
inc
je
jmp
sbb
add
mov
xchg
sbb
ljmp
mov
add
scas
or
sbb
or
out
aam
mov
aad
or
and
into
jp
and
loopne
call
icebp
add
sbb
adc
fbld
or
mov
dec
dec
sar
leave
sbb
or
test
mov
inc
pop
ret
clc
out
adc
sbb
dec
push
test
and
mov
lds
mov
mov
dec
daa
je
push
inc
jmp
cmp
push
cmp
sbb
push
out
enter
cmp
ret
mov
fldcw
sub
lds
jle
in
push
adc
in
sbb
or
or
imul
in
mov
adc
cmp
push
fwait
push
or
je
mov
in
mov
dec
pop
and
mov
mov
sub
or
leave
idivl
cmp
add
test
xlat
push
and
lods
push
inc
adc
or
int
js
jne
call
pop
je
cmp
mov
addr16
in
lret
inc
out
mov
ds
sbb
pushl
jecxz
fdivrs
out
dec
or
jg
or
sbb
push
lods
dec
je
sbbb
jle
jne
pushf
and
clc
xchg
ret
mov
adc
pop
pop
popf
mov
xchg
and
jl
imul
dec
notb
rolb
popf
add
push
add
add
sbbb
adc
adc
cli
xchg
dec
add
push
push
push
sub
push
jle
xor
add
add
mov
ljmp
dec
test
mov
add
int
test
js
adc
xlat
scas
add
lock
aas
sub
je
or
mov
rcl
stos
lds
sub
dec
inc
inc
cmp
jne
es
and
pop
adc
mov
mov
jecxz
repnz
cmp
lret
ss
pop
lods
adc
pop
rclb
mov
jno
in
movsb
xchg
and
call
push
and
mov
add
lahf
mov
mov
in
mov
scas
loope
xor
dec
push
push
mov
push
pop
in
xor
pop
jne
cmpb
jne
inc
jmp
jbe
loope
mov
inc
xor
xor
pop
je
mov
push
out
xor
inc
je
addr16
mov
pop
loop
pushf
iret
nop
cmp
adc
adc
xor
add
mov
lea
testl
sub
xchg
lea
and
add
or
or
jne
xchg
sbb
inc
inc
mov
les
es
lods
mov
scas
xchg
in
emms
and
pop
mov
lea
jb
shll
jmp
int3
data16
add
das
push
add
or
gs
pop
rcr
add
jb
adc
xor
pop
jne
out
in
add
test
pop
rorl
jb
lea
pop
dec
pop
test
inc
popf
inc
lock
inc
dec
leave
out
out
pusha
inc
ja
test
push
ret
or
xor
bound
lret
sub
data16
clc
sahf
pop
dec
test
xor
add
lods
jg
xchg
rcll
add
mov
test
testl
fwait
dec
loope
into
cmpb
je
jmp
test
jge
add
dec
cmpsb
out
jmp
cmp
das
mov
imul
mov
dec
in
add
jnp
cs
icebp
or
ret
test
ret
cld
arpl
cmp
loop
call
addb
mov
pop
mov
adc
adc
outsb
fistps
inc
and
jno
or
jge
add
scas
ja
pop
mov
add
add
fs
mov
sub
mov
out
lea
sbb
push
and
sarb
pop
scas
cwtl
mov
sub
add
sbb
lcall
rolb
loope
mov
cld
mov
fisttpll
nop
sbb
clc
push
bound
loop
fisubrs
xchg
rclb
jne
inc
fcmovb
imul
or
add
xchg
filds
add
or
add
cmp
or
sbb
or
into
out
or
add
add
cltd
nop
dec
into
mov
push
out
shl
iret
enter
out
sbb
xchg
iret
dec
roll
pop
sbb
pop
pop
fmull
xchg
jmp
cmp
adc
pusha
jmp
xor
test
inc
xor
push
inc
pop
roll
fidivrl
mov
shr
insl
popf
out
out
mov
xchg
mov
cmpsb
inc
and
movsb
add
add
inc
sbb
xchg
add
and
mov
fcom
ret
pop
xor
das
loopne
push
push
aam
clc
je
mov
aaa
jg
jmp
adc
cmp
ljmp
cmpb
jne
aaa
ret
je
loop
cmp
inc
lcall
dec
cmpb
cs
loope
push
lret
jmp
pushf
mov
cmpsl
subl
cli
jmp
push
or
add
idivl
jmp
pop
jne
sbb
inc
inc
outsl
popl
mov
jne
std
cmp
or
sbb
add
daa
push
inc
push
mov
jne
cmp
hlt
push
xor
into
imul
jno
push
mov
and
pop
or
or
bound
repz
cmp
inc
cmp
je
cmp
je
inc
test
jge
xchg
xor
pop
jae
mov
ret
clc
rclb
dec
cmc
sbb
push
cmp
jne
mov
lods
and
pop
lock
cmp
dec
jb
push
imul
mov
and
add
mov
sbb
or
add
pop
imul
inc
stos
xchg
add
cmp
sub
aam
push
push
ss
cmpsb
aad
add
xor
mov
sbb
test
push
sbb
pop
lea
inc
adc
outsb
pop
jno
inc
and
addl
out
das
stos
jb
mov
pop
mov
stos
test
aaa
jb
jge
out
inc
mov
and
xchg
aas
nop
lods
jo
sahf
dec
dec
leave
jl
cmp
cli
cmp
jge
mov
movl
mov
outsl
mov
lret
out
mov
mov
xor
xor
xchg
jne
jl
mov
sub
and
shlb
das
rorb
pop
sbb
mov
xchg
xor
inc
inc
sbb
sti
push
lock
shr
mov
cmp
push
negl
shr
and
fsubrs
aam
inc
fnstsw
xchg
cmp
fsubrs
adc
test
lcall
sbb
inc
or
jg
test
shr
dec
mov
lock
out
ficomps
adc
add
loopne
rorb
or
mov
test
icebp
xor
sub
push
dec
add
fnstenv
dec
std
add
std
dec
or
mov
pop
mov
mov
pop
in
mov
sbb
add
xchg
lock
sub
jnp
dec
sub
lea
jle
mov
nop
cmp
sub
jecxz
mov
sbb
outsl
lea
add
addr16
jmp
mov
mov
addl
adc
xor
add
pop
pop
pop
cwtl
push
add
aaa
imul
inc
and
lea
pop
xor
emms
test
adc
cmpb
xor
sbb
or
cmp
clc
bswap
mov
cmp
sub
inc
mov
pop
mov
ds
sub
pop
call
xor
dec
inc
ss
fsubrl
dec
dec
orl
xorl
cmp
rorb
add
outsb
dec
sbb
jl
rorb
cmpb
xor
xchg
inc
mov
xor
or
ja
int
sti
add
sarb
xorb
xor
in
mov
mov
adc
xor
aad
in
push
jg
jp
push
inc
add
jecxz
je
inc
mov
xor
or
int
lock
jl
and
movsl
sub
or
or
add
dec
add
or
mov
add
ret
daa
jbe
add
push
xor
push
les
aad
pop
jle
sbb
add
call
mov
pop
dec
add
mov
jb
movsb
repnz
popa
loop
incb
popf
push
mov
fidivrl
cltd
aad
rolb
sarb
pop
jno
and
lock
xor
dec
jae
lods
and
or
add
cmpsb
dec
sbb
push
dec
push
mov
fwait
pop
mov
cmpsl
add
faddp
mov
add
adc
add
add
xchg
cli
sub
and
inc
add
cmpxchg
push
dec
sub
stc
dec
adc
pushf
int3
xchg
or
je
or
sarb
dec
add
mov
or
je
jo
idivl
aam
pop
adc
mov
jns
nop
xor
call
das
rcrb
inc
cmp
lds
les
cmp
aam
pusha
add
pop
cmp
jg
and
add
push
mov
xor
add
aam
es
xchg
or
fadds
iret
faddp
push
push
or
cmp
test
or
pop
xor
jge
xor
mov
push
or
cmp
jno
push
adc
sub
add
mov
add
out
mov
and
or
or
rcll
fdivrl
or
and
push
push
push
xchg
or
jbe
aas
call
push
mov
or
xlat
aas
push
mov
or
push
mov
sub
xor
divl
jno
testl
cmpl
and
inc
lock
pop
jae
sbb
rorl
jnp
inc
or
cs
fsub
pop
lret
mov
insl
fisubrs
or
push
add
out
pop
pop
push
xor
and
out
mov
cmp
add
mov
cmpsb
add
fmull
lods
push
push
add
jnp
jle
jmp
push
pop
inc
push
xor
pushf
lcall
jle
push
mov
pop
daa
cmp
loopne
push
test
push
push
leave
mov
and
mov
push
loope
jno
push
xor
rclb
pop
adc
cmovno
mov
sahf
ja
mov
push
inc
mov
push
rcrb
sub
and
xlat
rorl
ja
push
arpl
cld
rcll
out
sbb
loop
pushf
shll
jno
into
je
decl
inc
push
sbb
mov
sbb
sbb
jge
xorb
out
and
inc
das
or
sbb
dec
push
add
sbb
jl
inc
sub
es
and
movl
test
inc
in
push
inc
push
push
cli
ss
lcall
jb
cltd
dec
lea
or
loop
push
sub
pop
add
mov
loop
hlt
and
pop
shrb
pop
or
sub
cmc
mov
ss
xor
adc
jo
mov
fdivrl
xor
or
cmpl
mov
mov
mov
ret
xor
pushf
insb
loop
inc
inc
cmpb
lods
pusha
rcrl
jle
pop
data16
data16
push
dec
imul
pop
dec
jb
pop
dec
adc
push
pop
jo
jle
push
je
pusha
jbe
push
filds
movsl
xlat
fcmovnbe
repnz
pop
push
push
cmp
cmpsl
mov
mov
clc
xchg
leave
rorl
ss
xchg
rol
fidivrl
and
cli
push
rolb
lea
push
sub
fdivl
xor
sbb
xchg
in
inc
outsb
dec
call
or
icebp
fidivrs
popa
bound
pop
inc
nop
pop
pop
sbb
inc
xor
loopne
pop
js
loop
and
jno
fidivl
push
rcrb
sbb
fstpt
bound
cmpsb
clc
aam
mov
sarb
fldl
xor
cmp
ret
stos
out
movsl
mov
jmp
test
add
negl
into
and
mov
fucomp
and
lock
lds
jmp
and
adc
int
loop
xchg
cmp
pop
outsb
je
push
jne
lret
ret
pop
inc
sub
cmp
aaa
mov
sti
jo
sub
lods
dec
mov
mov
ret
add
sti
sub
add
jo
jle
mov
xor
js
out
test
jne
mov
jmp
add
daa
mov
cmp
jle
scas
addr16
jns
sub
scas
adc
pusha
pop
sbb
jo
rclb
mov
sub
cmpsb
mov
add
inc
int
imul
adc
xor
sub
xor
mov
test
je
leave
je
sbb
jne
pop
sti
inc
push
or
cmp
or
pop
cmp
jb
inc
gs
roll
lea
or
loopne
and
add
add
int
push
ss
xor
sub
icebp
add
pop
add
add
lret
inc
outsb
cwtl
and
add
add
js
ret
pusha
sub
adc
inc
ja
in
adc
and
loopne
rorl
xchg
cmc
mov
repz
repnz
mov
dec
addl
ret
jl
or
cmp
mov
or
adc
mov
mov
cmp
push
testb
mov
daa
mov
fsubl
adc
sbb
fs
inc
mov
sbb
and
xorl
inc
sub
adc
add
add
and
add
test
orl
add
push
add
add
jnp
xlat
mov
push
int3
push
push
mov
out
fiadds
push
int3
pop
cs
pop
jno
out
jae
mov
shlb
js
xchg
adc
xor
in
test
or
push
pop
loope
xlat
hlt
enter
nop
or
jbe
cmpsb
jmp
or
inc
cwtl
js
inc
test
xor
push
in
fldenv
in
sub
xor
lea
push
sub
inc
sbb
std
call
outsl
adc
pop
cmp
pushf
pushf
push
imul
dec
cmpsb
ss
dec
ret
push
push
scas
imul
mov
cmp
dec
push
xor
add
and
xor
add
inc
sbb
nop
inc
xor
sub
dec
ret
dec
jmp
adc
aam
adc
and
sti
cmp
add
scas
xor
cmp
push
jp
xchg
rorl
or
and
dec
add
xor
scas
addb
mov
movsb
sbb
lods
cmpsl
dec
movsb
mov
pop
mov
push
inc
loop
dec
jle
dec
mov
inc
fcoms
sahf
jnp
sub
push
and
sub
pusha
jl
loope
dec
jmp
push
push
shlb
loop
adc
sbb
push
loope
insb
mov
add
loop
stos
adc
xor
xlat
scas
sub
sub
xchg
cltd
xor
lods
xor
bnd
xadd
test
push
popa
or
mov
nop
testl
mov
loope
sbb
inc
push
and
fimull
xorb
push
adc
jle
les
mov
cmc
sub
sub
push
or
and
mov
in
or
cmp
test
jo
push
sar
mov
aad
or
inc
fimuls
sbb
dec
pop
out
pushf
sarb
fs
sub
xor
into
add
rolb
or
push
popa
push
cld
sbb
cmp
jae
test
or
fbld
xor
mov
mov
shll
adc
push
push
push
and
xor
enter
add
test
and
mov
in
scas
xchg
or
repnz
push
sti
dec
rorb
lcall
adc
mov
jl
cli
mov
jmp
dec
and
movsl
rcrb
pop
pop
fisubl
push
inc
les
in
aaa
adc
popa
and
cld
push
add
cs
gs
jno
pop
dec
jl
xchg
faddl
addb
and
fmuls
xor
and
daa
inc
adc
dec
lea
or
pusha
testl
repnz
mov
add
and
push
shlb
lahf
cmp
sub
adc
popf
js
mov
inc
add
adc
push
push
push
mov
pop
aad
sub
movsl
mov
adc
push
movsl
daa
jmp
mov
loop
add
in
mov
lcall
and
ja
or
adc
mov
nop
mov
jmp
xchg
jns
xlat
fcoms
pop
scas
mov
xorb
shl
adc
movzwl
pop
pop
mov
js
add
pop
pushf
mov
test
adc
add
mov
jnp
pop
dec
xchg
daa
add
imul
pop
out
xor
ret
cmovae
inc
push
icebp
lret
call
or
popf
add
cmp
xor
sub
cmpl
jp
cmpxchg
adc
inc
pop
mov
dec
inc
pusha
inc
mov
adc
mov
cmpsb
pop
fists
jbe
pop
enter
xchg
mov
mov
adc
ss
fisubl
push
xchg
inc
sbb
dec
add
pop
dec
xchg
cli
or
pop
add
rol
scas
cmp
lods
or
mov
insl
sbb
data16
bound
pmaxub
push
sarb
dec
cmp
cmp
mov
test
add
and
add
push
jl
mov
or
jle
mov
pop
adc
icebp
and
jo
sbb
je
pop
cld
xor
push
clc
shl
adc
push
push
xorb
ds
mov
sbb
mov
in
or
cmp
addl
sbb
loope
insl
and
and
cwtl
xor
fistpll
mov
stos
adc
push
fidivs
mov
push
test
imul
xor
xchg
cmc
sbb
mov
aas
daa
lds
jne
shrl
xchg
popa
or
pop
add
rol
add
push
push
shrl
inc
or
or
sbb
add
aas
add
enter
push
adc
sub
or
add
sbbl
sbb
scas
int
and
add
or
sbb
and
and
and
pop
push
fcoml
sarb
das
cmpsl
adc
rorb
and
adc
or
add
pop
lahf
cmp
movsb
sbb
pusha
int3
shrb
cmp
scas
xor
mov
cmp
lret
sbb
adc
popa
sub
cmp
lea
js
pop
jge
cmp
or
inc
bound
jo
or
adc
ret
push
icebp
scas
xor
sbb
js
push
roll
fmuls
xchg
in
rclb
fs
adc
jne
adcl
or
push
mov
push
xor
mov
mov
jmp
sbb
es
adc
jo
xchg
jo
lods
xchg
ds
push
popf
popa
int
sahf
rol
mov
clc
sub
jmp
mov
test
enter
fildll
aaa
cmp
jne
lcall
add
jne
mov
neg
pop
sbb
fisttpl
and
sub
sbb
mov
add
add
sub
cmpxchg
push
movsb
ror
or
rorl
stc
or
imul
imulb
sbb
and
cmc
push
push
lcall
mov
jg
dec
ret
xor
jg
push
negb
mov
xchg
pop
popa
bound
cwtl
jl
or
mov
dec
jl
push
xchg
nop
arpl
mov
enter
inc
push
cld
pop
ret
push
dec
jne
mov
inc
lea
inc
and
test
jne
fldz
pop
es
shr
xor
xor
push
or
pop
pop
or
sbb
fsubl
test
test
mov
push
scas
mov
sub
movsb
int
add
lret
js
pop
fcoms
and
incl
or
adc
jbe
ljmp
das
add
and
imul
inc
add
out
adc
movb
add
xchg
sbb
adc
xchg
jle
les
mov
jo
or
push
fcompl
adc
mov
pop
cmpsl
pusha
cmpsl
sbb
dec
pop
leave
in
add
nop
push
inc
pusha
ja
sbb
insl
push
mov
jae
fnstcw
adc
decl
aaa
and
pop
dec
pop
movsl
or
loope
xor
cmp
xor
and
mov
notb
outsb
add
sti
sbb
popa
fisttpll
add
pop
adc
in
pushf
cmp
sahf
pop
adc
lahf
mov
fiaddl
pusha
cmpsb
in
push
icebp
cmpsl
call
dec
mov
jle
add
jmp
push
je
add
push
out
test
adc
lcall
xor
xchg
or
xor
xorl
shlb
jmp
jno
jge
insb
and
int3
aaa
mov
push
movb
add
out
ds
rorb
movsl
fistl
dec
adc
dec
add
jne
cs
cmpb
cmp
daa
inc
mov
add
mov
mov
inc
mov
xor
cli
push
jecxz
icebp
cmp
mov
jl
test
into
pop
mov
cld
add
mov
add
cmpl
or
stc
dec
push
xor
imul
add
mov
icebp
xchg
push
inc
cmp
pop
je
test
lret
mov
repz
pop
lock
cmpsl
test
dec
push
fucom
push
push
adc
add
rclb
mov
xor
test
fisubrl
xchg
add
loopne
lcall
mov
int
leave
xor
fidivl
jp
and
and
stos
loope
pop
subb
sbb
sub
fadds
jg
sub
push
sbb
cmp
jl
xor
jb
add
adc
mov
jnp
push
int
xchg
cmpsb
add
pop
add
add
pop
inc
push
pop
testl
mov
or
mov
shll
jg
dec
mov
add
and
addb
sbbl
inc
or
sbb
pop
inc
rolb
xor
std
fs
jne
inc
sub
inc
xor
scas
pop
sbb
in
push
add
push
je
pop
mov
test
fldl
inc
adc
pop
ljmp
clc
aam
cmp
loop
or
or
mov
push
mov
insl
sbb
inc
jmp
cld
sub
and
mov
sub
dec
xchg
incb
xor
or
sub
fsubrp
paddusw
mov
lahf
pop
add
dec
js
and
cs
xchg
je
sarb
add
inc
adc
pmuludq
jno
xchg
pop
ret
xor
xor
push
mov
daa
or
sub
or
das
jg
cmp
push
enter
call
jne
xor
aas
jmp
adc
push
mov
sbb
push
push
daa
dec
sub
jb
cmpsl
and
sub
js
push
and
inc
adc
adc
cmp
push
and
push
sbb
mov
adc
add
fwait
leave
je
add
cmp
sub
mov
js
mov
sub
xor
cs
shrb
test
sub
insb
push
fildll
sub
loopne
sti
dec
push
mov
push
lds
or
mov
mov
mov
into
xor
enter
cmp
sub
cli
or
cld
mov
cmp
idivb
and
inc
add
and
lock
pusha
aas
adc
pop
sahf
mov
lea
ds
dec
xor
inc
xor
cmp
lea
xchg
and
mov
fistpl
xchg
fsubrs
loope
or
mov
scas
xor
fistl
add
push
push
fdivs
inc
xor
and
inc
cmp
and
inc
cli
mov
mov
adc
push
mov
mov
jecxz,pt
enter
testb
cwtl
mov
push
mov
stos
bound
mov
pop
dec
movsl
push
add
add
mov
and
sbb
add
in
dec
test
add
adc
push
add
int
dec
push
add
pop
adc
or
pop
mov
sahf
int3
adc
pop
jp
xchg
shlb
hlt
add
jnp
sahf
add
jno
jle
repnz
mov
or
sub
cld
fimuls
or
push
and
mov
divl
sub
movsl
xchg
out
mov
movb
jbe
not
add
and
cmp
inc
lret
pop
icebp
dec
scas
mov
mov
lock
daa
push
test
icebp
or
lret
nop
mov
inc
adc
adc
sub
test
fmull
icebp
outsb
sbb
or
inc
add
in
mov
jle
filds
inc
iret
je
dec
sub
pop
sarb
pop
mov
or
incl
mov
in
inc
jecxz
outsl
inc
push
add
xlat
and
mov
adc
sarl
popf
lods
dec
or
pop
je
mov
jl
push
sub
cs
ret
push
push
or
mov
shrb
xor
push
sbb
repnz
inc
jge
mov
cmpsb
adc
cli
dec
lcall
imul
dec
jle
cmp
jge
adc
or
cs
fisubrl
fdivs
cmp
jle
add
mov
adc
mov
add
in
add
repz
or
mov
into
jge
and
cmp
inc
fstpl
outsb
add
mov
daa
cli
ljmp
pop
in
push
mov
add
fucom
and
add
sub
inc
ret
ds
or
in
lock
out
add
sub
mov
pop
add
push
jg
out
sub
cmp
adc
cmp
adc
cmp
ficoml
jp
out
or
adc
jno
mov
or
pushl
xor
mov
adc
push
mov
das
out
ret
mov
cmpsl
or
mov
mov
jl
jae
cmpl
and
ds
inc
sbb
loopne
sub
cli
mov
xchg
jns
or
pop
call
or
push
adc
mov
xor
mov
bound
lock
mov
insl
je
inc
fsubr
inc
inc
pop
divl
sahf
andl
es
sbb
push
shlb
mov
sbb
aam
pushaw
and
and
add
dec
idiv
out
xor
cmp
jb
jns
pop
push
and
inc
dec
add
insb
stc
dec
popa
xor
lcall
clc
nop
mov
sub
push
dec
iret
shlb
cmp
mov
push
inc
lds
in
xor
test
lahf
xor
push
add
mov
clc
add
pushf
pop
inc
add
mov
ja
mov
ret
pushf
pop
push
fbstp
rclb
adc
add
add
or
xor
ja
dec
pop
jb
jle
mov
push
ja
or
js
stc
adc
rcl
pop
sub
pop
jb
xchg
testl
adc
fs
add
push
push
imul
mov
push
pop
mov
mov
test
xor
mov
adcl
dec
inc
imul
jecxz
xchg
mov
mov
mov
rcl
push
mov
dec
push
jge
loopne
je
push
in
outsl
int
add
add
mov
mov
out
dec
js
push
add
and
imul
or
pop
adcl
ds
imul
sti
or
inc
add
jne
stc
dec
add
push
mov
inc
out
jbe
xor
jno
sar
inc
cmp
cmc
pop
sbb
repz
or
dec
and
pop
arpl
add
and
sub
add
bound
push
add
hlt
sahf
mov
or
adc
mov
daa
shl
loop
lock
pop
or
and
adc
inc
push
push
fisttps
pop
jns
mov
mov
dec
jb
push
hlt
pop
mov
push
or
ja
iret
and
or
cld
jl
inc
aaa
jmp
popa
jb
data16
loope
ret
mov
inc
dec
shl
lahf
and
jl
mov
dec
daa
sub
or
fiadds
rclb
loopne
icebp
clc
je
pop
mov
or
sbb
jae,pt
or
add
add
jae
das
xchg
xor
xor
shll
or
or
test
or
push
xlat
test
mov
pop
test
insb
aaa
test
adc
xor
cli
mov
sbb
pop
or
movsl
mov
pop
fs
ret
mov
andl
push
imul
inc
mov
add
in
push
fisubs
inc
dec
push
adc
aam
call
inc
push
jno
incb
dec
sub
jge
pop
loop
sarl
or
sbb
and
enter
and
pop
add
or
cs
inc
cmp
jb
insb
cld
add
mov
dec
pop
ds
je
xor
sahf
loope
push
add
jns
dec
and
mov
in
cmp
jecxz
pusha
scas
and
test
fildl
pop
iret
xor
pusha
xor
sbb
xor
sub
jb
orb
push
mov
push
and
sbb
mov
adc
mov
jne
mov
sbb
clc
dec
xor
movsb
in
cmpsl
jnp
adc
shrl
sbb
dec
inc
ret
jp
bound
test
mov
xor
ficoml
pop
bnd
ret
add
clc
mov
sub
mov
scas
and
push
sbb
xor
lcall
adc
lock
and
pop
imul
pop
pop
imul
add
push
xor
sbb
sbb
in
lock
lods
push
jle
mov
push
js
pop
or
inc
inc
dec
add
sub
push
pop
adc
mov
xor
mov
sbb
lds
adc
call
int3
push
jge
xor
fmuls
pop
push
push
sarl
mov
sub
add
ss
das
out
aaa
into
pop
sub
push
popf
or
mov
inc
dec
shl
push
push
xchg
adc
lea
rcrl
adc
fwait
sub
cmpsl
sub
dec
inc
push
fmuls
or
mov
es
subb
push
jno
xchg
scas
push
push
mov
or
or
sbb
addr16
cmpsl
cmp
xor
mov
inc
push
dec
adc
jmp
add
add
adc
ret
push
push
push
sbb
or
adc
cs
ret
push
movsl
cs
mov
xor
mov
push
cmp
pushf
dec
cmp
inc
aad
mov
add
xor
sub
push
sahf
sbb
cmpsb
jne
shll
sub
ucomiss
mov
and
xor
adc
jo
cs
mov
popl
addl
push
or
mov
dec
jp
sub
test
xor
jo
int
mov
jb
orps
or
test
or
xor
pop
cwtl
out
rolb
cmp
push
add
shlb
inc
sub
cmp
sbb
insb
inc
push
ja
cmp
inc
and
pop
fiadds
push
and
jg
lock
sarl
jle
mov
arpl
daa
xor
mov
test
push
sub
xchg
cmp
aad
add
out
or
push
idivb
stos
jg
dec
fimuls
sbb
addb
jle
lods
mov
or
mov
sbb
insl
rcl
pop
xor
pop
mov
mov
js
sub
in
dec
int
mov
xchg
push
push
and
jo
push
mov
mov
adc
fistl
into
mov
cmp
adc
mov
int3
xor
mov
inc
pop
sbb
inc
jbe
push
cmpsl
lods
push
xchg
pop
orb
mov
and
sbbl
adc
and
cmp
inc
je
adcl
aad
ffreep
xor
ds
adc
push
sbb
push
out
xchg
dec
loopne
fildll
pop
push
adc
mov
cmp
jp
xchg
adc
inc
dec
std
clc
imul
adc
es
test
dec
xchg
rcr
inc
cli
sbb
pusha
call
push
mov
daa
mov
ficoml
mov
adc
mov
xchg
gs
push
lahf
or
mov
sub
stos
pop
arpl
push
adc
push
mov
push
sub
pop
cld
or
inc
call
inc
pop
inc
aas
xor
jb
popf
mov
dec
mov
adcl
sbb
jns
int
inc
or
add
test
adc
orb
or
adc
mov
rcll
jae
cli
cmp
jmp
enter
pop
sbbl
enter
add
add
inc
mov
bnd
push
push
imul
inc
dec
enter
push
xor
jo
popa
mov
ljmp
es
setne
cwtl
outsb
imul
jne
xchg
push
push
push
xchg
or
or
aad
cli
xor
divl
js
or
dec
sub
mov
pop
clc
push
and
push
das
xor
push
sahf
cmpsl
sbb
inc
jb
mov
jbe
jl
bound
je
hlt
loopne
adc
lcall
clc
adc
retw
mov
in
lcall
add
stos
push
cwtl
xchg
push
adc
test
push
or
inc
cmp
mov
adc
enter
push
mov
jb
aaa
cmp
ret
and
mulb
mov
xchg
test
dec
or
filds
orb
pop
sub
push
or
or
push
push
mov
and
mov
mov
js
push
jne
mov
das
adc
xor
sbb
sahf
and
inc
into
das
add
int3
push
pop
sbb
cmovbe
int3
adc
jl
dec
or
add
pop
adc
sbb
xchg
inc
xor
sub
or
mov
xchg
in
jne
jecxz
or
inc
ja
test
push
movsl
lahf
inc
jmp
adc
pop
adc
ret
and
dec
pop
iret
in
add
inc
sub
and
ficoml
or
icebp
cwtl
and
jne
cmp
call
pop
or
rcll
js
pop
pop
cmp
lret
xchg
mov
add
gs
mov
dec
mov
push
test
aam
or
push
movsl
iret
xchg
dec
adc
div
mov
pop
lret
sbb
dec
or
push
stos
sbb
test
and
dec
inc
adc
call
lea
sbb
push
add
call
push
fwait
aam
sbb
inc
and
push
in
das
sti
sub
jmp
sbb
hlt
mov
xchg
or
sub
add
inc
or
lods
push
aaa
sbb
and
mov
push
cmpsb
adc
cmp
inc
popa
adc
lds
push
push
inc
push
mov
push
adc
inc
jo
in
or
rclb
inc
movsb
popa
jl
xchg
test
test
mov
push
push
js
push
pop
sahf
push
rol
inc
sub
xchg
and
stos
push
or
push
pop
xchg
pop
xor
mov
cmpsl
adc
add
int
jg
ds
push
jmp
mov
addl
inc
push
cs
lea
mov
and
in
push
and
subb
sub
inc
inc
xchg
push
xchg
sub
mov
stos
cld
add
pop
push
shll
or
sbb
and
inc
addps
jp
cwtl
cmpb
cmp
and
in
iret
scas
dec
ljmp
or
fbstp
inc
pop
pop
jmp
dec
add
roll
test
push
or
push
mov
sub
cmp
lods
pop
test
push
cmp
sbb
pop
sub
push
aaa
bound
hlt
or
cld
mov
enter
in
mov
aam
inc
add
loopne
dec
adc
push
cmp
jno
mov
or
mov
popa
ret
aam
push
lds
icebp
adc
cli
xor
cmpb
sbb
or
loop
inc
sbb
pop
testl
mov
adc
les
inc
add
fistl
lock
div
and
ss
testb
loopne
pusha
push
and
and
cmp
pop
or
add
pop
loopne
adc
js
cmp
pop
adc
in
adc
adc
inc
add
ss
inc
andl
cmp
xchg
push
lcall
insb
jo
or
inc
fcompl
xlat
loope
push
lods
push
and
sbb
shrb
js
sbb
push
movb
cmpb
xchg
jp
sbb
jnp
dec
push
mov
shll
fnstsw
xchg
push
adc
inc
pusha
or
xchg
jo
fbstp
pop
sbb
or
pop
out
push
mov
jmp
push
xchg
loope
test
push
xor
or
je
push
add
mov
or
negb
sub
arpl
ljmp
pop
push
push
sahf
and
push
or
call
decl
pop
xor
xchg
cmpsb
scas
add
and
movb
lcall
mov
cmp
mov
aaa
sub
scas
sbb
adc
jo
add
xchg
xchg
ljmp
testb
and
aam
jne
mov
insl
cmpsl
loopne
pop
dec
bound
sbb
cmp
clc
push
push
sub
xchg
pop
cmp
enter
push
push
push
inc
addb
decb
push
sbb
popl
mov
jno
or
cmp
in
or
cmp
jle
inc
sub
mov
push
jl,pn
mov
add
mov
pusha
test
inc
jp
roll
mov
jnp
jge
mov
dec
push
jne
push
rol
push
jg
dec
jge
cmp
push
inc
shll
push
push
inc
dec
push
mov
mov
jae
adc
pop
add
jle
add
push
je
push
xor
jo
fstps
test
add
fisttpl
nop
daa
cmpb
out
js
push
add
stos
imul
adc
and
xlat
inc
pop
addb
and
lea
test
je
add
and
pop
add
daa
outsb
mov
inc
lret
jmp
dec
les
and
sub
push
sgdtl
cmp
jb
pop
fwait
cli
dec
in
mov
add
jo
ret
or
or
rcrb
jbe
push
ret
dec
cmpsl
cmp
xchg
and
test
adc
rorb
jge
test
out
xchg
add
pop
and
or
mov
pop
push
mov
loope
imul
je
jl
dec
testl
push
mov
sbb
inc
and
cmp
jo
into
jmp
pop
push
add
outsl
inc
test
nop
and
cmp
or
mov
sub
pop
inc
xor
jns
and
orl
add
or
dec
xchg
js,pt
test
sbb
xor
ljmp
sbbl
push
cmpsb
test
cmpsb
lock
movsl
pop
inc
lock
or
imul
shrl
mov
push
mov
sub
pop
mov
dec
rolb
pop
xchg
cli
and
pop
add
stc
xchg
andb
sahf
adc
int3
dec
mov
test
and
mov
jno
add
adc
shlb
add
add
sub
sti
sbb
add
icebp
sbb
dec
jbe
cmp
je
iret
andb
adc
icebp
or
and
jp
popa
xor
dec
orb
adc
sbb
mov
or
adc
jp
repnz
leave
and
inc
xor
jne
and
and
or
cmp
imul
mov
xor
sbbb
add
mull
mov
fadds
add
enter
push
cmpsb
ss
test
test
stos
sbb
add
idivl
ljmp
xor
sbb
fcomip
inc
push
push
sub
xor
cmp
jne
inc
pop
add
dec
ljmp
rclb
sub
aad
dec
cmp
push
cmpsb
aad
mov
push
push
add
cmp
movsb
movsl
mov
ret
xor
sbb
dec
add
push
mov
lods
in
fcomps
adc
cmpsl
add
push
push
xor
mov
or
jne
push
add
fistpll
test
xchg
add
sub
cmp
adc
into
ljmp
mov
daa
xchg
pop
xor
or
inc
add
cmp
mov
adc
adcb
jg
outsb
ds
inc
aaa
jmp
popa
jl
inc
xor
data16
pop
mov
mov
or
or
or
push
popf
addl
mov
dec
add
adc
push
mov
push
mov
mov
roll
pop
cmp
movsb
into
in
pop
mov
mov
inc
push
fs
or
push
mov
mov
pop
xor
adc
ss
pop
adcb
push
test
and
imul
ljmp
and
movsl
mov
outsl
mov
pop
mov
stos
pop
xchg
dec
mov
or
mov
jge
pop
andl
sub
or
cmp
pusha
mov
stos
pop
cmp
dec
cmp
pop
inc
cmp
ss
in
xchg
mov
cmp
sbb
mov
cmp
es
sub
das
jmp
bound
in
cmp
inc
mov
xor
fst
ds
cmp
sbb
testl
ljmp
jne
add
or
dec
push
sub
je
xor
sbb
aam
add
sbb
arpl
cs
push
sub
outsb
hlt
xor
mov
arpl
sub
add
sbb
adc
sarl
pop
jb
push
xlat
push
adc
insb
je
insl
push
push
aaa
adc
push
in
pop
jae
fldt
shll
shrl
pop
adcb
dec
adc
sqrtps
cwtl
call
cmp
sub
sarb
push
or
movsb
in
and
cld
loopne
push
clc
sbb
sub
call
inc
dec
push
push
mov
imull
aam
fsubrs
mov
or
outsb
mov
push
push
into
fs
jle
sbb
and
sbb
lcall
pop
jne
xor
add
push
mov
add
pop
mov
pop
cmp
mov
mov
pop
pop
imull
clc
mov
push
mov
daa
mov
out
add
es
popf
push
xorb
sbb
xor
sub
das
cltd
fadds
js
aaa
loope
sbb
jl
icebp
add
push
mov
sub
xor
add
push
or
sbb
movb
add
mov
mov
xchg
pop
inc
mov
loopne,pn
and
lock
add
or
add
adc
add
lock
inc
dec
dec
test
movsb
repz
sbb
cli
mov
adc
enter
jle
dec
mov
inc
stc
or
pop
or
mov
jg
mov
add
inc
push
xor
or
mov
cmp
cmc
add
push
popa
push
or
scas
add
fistpl
and
pop
fisubs
or
xchg
pop
adc
pop
insl
loopne
mov
outsb
push
jns
pusha
clc
jmp
sbb
xchg
add
pop
jmp
test
add
movsl
xchg
push
bound
adc
mov
rcrl
insb
add
addb
sbb
ss
push
vmwrite
adc
fdiv
push
or
sbb
xlat
xor
adc
fimuls
fcompl
jmp
push
push
xchg
sbb
in
xor
mov
jp
push
movl
add
push
jae
sarb
mov
pop
je
xchg
lret
add
jne
outsb
insb
sbb
popa
push
pop
push
mov
xor
xchg
arpl
or
scas
adc
out
sbbb
cmp
movsl
add
or
cld
push
push
push
jmp
les
add
xchg
cmc
shl
fs
pusha
or
dec
bound
lds
fadd
popf
sbb
jns
mov
and
dec
js
push
addr16
push
mov
push
cmpb
sbb
mov
push
ss
std
pop
sub
xor
push
je
adc
push
push
push
shl
and
sbb
xchg
mov
inc
loopne
dec
arpl
aas
and
xchg
hlt
and
faddl
lock
push
and
mov
cmp
or
cmp
mov
fnstcw
rclb
xchg
jge
and
imul
xorb
jge
xchg
pop
or
out
add
sub
push
sbb
out
mov
dec
dec
add
adc
mov
in
shrb
movb
add
pop
or
nop
xor
pop
dec
and
pushf
and
lods
jns
cmp
shlb
or
dec
cmp
jmp
adc
mov
push
mov
adc
adc
xchg
je
jl
mov
cwtl
dec
xor
fiadds
sbb
sarl
mov
lea
pop
pop
aas
mov
sbb
sbb
sub
rclb
addl
or
sahf
sbb
pop
sbb
and
stos
add
sub
inc
inc
sbb
mov
push
push
sahf
dec
int3
aad
test
xlat
push
ja
popa
add
cmp
inc
or
mov
roll
adc
sub
pop
cvtpi2ps
into
cmp
bound
cmpsb
pop
pop
rorb
sbb
sub
rclb
pop
cmpsb
fcmovb
data16
inc
notl
movsb
sar
enter
sbb
in
jmp
daa
cmpsb
loopne
pop
inc
mov
push
xor
or
adc
jle
daa
or
sub
push
mov
lret
xor
push
ret
scas
and
xchg
cmpsb
add
push
or
cmp
std
sub
push
in
push
enter
inc
dec
iret
repz
loope
jle
cs
dec
inc
enter
cmovl
lahf
and
add
mov
decb
add
push
push
aad
dec
loopne
inc
sahf
ljmp
sbb
sti
push
add
push
dec
dec
push
push
push
and
mov
out
mov
loope
cmp
mov
adc
int
xchg
mov
or
push
daa
pop
cs
pop
push
in
test
jae
lods
shrl
pushf
add
pop
stos
pop
sbb
jne
es
push
lds
jecxz
push
cmp
add
xor
add
push
jne
inc
lods
mov
or
in
sbb
sbb
push
out
push
aam
push
mov
sub
or
shl
jge
divl
ret
push
add
push
inc
xchg
mov
movsl
sbb
mov
push
int3
adc
pop
cld
cmp
jl
pop
dec
add
sbb
or
lea
add
sbb
clc
cmp
dec
cmpb
in
pop
addb
jp
lock
dec
sbb
mov
sub
jnp
inc
or
mov
mov
xor
or
push
in
push
fwait
in
or
es
push
add
popa
pop
jg
inc
insl
xor
add
jne
jp
add
push
adc
adc
pop
or
inc
jle
add
adc
jp
lods
xor
stos
xlat
mov
mov
adc
test
or
dec
lds
ja
push
jmp
dec
add
push
add
mov
decb
mov
cmp
cmp
push
jo
into
es
shrb
scas
sub
mov
addr16
mov
fiaddl
cmpsb
dec
popa
pop
or
pop
xchg
or
inc
jmp
out
xor
mov
es
mov
lea
lods
call
ret
xchg
out
fstpl
or
push
jmp
xchg
add
add
lea
or
adc
mov
pop
out
jo
push
cmp
jle
inc
mov
mov
mov
rorl
push
jmp
and
adc
xchg
shll
jb
mov
lcall
imul
out
jne
adc
ds
lock
xchg
rcr
xchg
imul
lret
mov
dec
lcall
sbb
jb
pop
pop
inc
js
fnstcw
push
sbb
mov
pop
data16
dec
and
cmp
test
aaa
mov
subl
cld
or
popa
dec
lcall
mov
lds
or
fcmovne
inc
movsl
push
sbb
adc
and
jnp
mov
or
mov
dec
sbb
jb
subb
xor
push
cmp
addr16
or
fcoms
sub
sbb
cltd
xor
fstl
stos
lods
ret
rorb
jns
mov
jb
push
sbb
dec
pop
inc
pop
adc
pusha
mov
or
roll
adc
in
mov
xorb
push
mov
jno
pushf
cwtl
jmp
and
stos
xorl
xor
pop
sbb
imul
pop
das
pop
aas
or
in
cmp
dec
inc
adc
dec
add
jno
movsl
add
dec
or
adc
aas
lods
ja
out
pushf
sbb
pop
dec
movsb
adcl
xchg
or
clc
int
or
mov
jo
xchg
pop
inc
inc
and
ss
cmp
shlb
out
sub
push
add
nop
mov
add
cmpl
adc
sbb
das
cmp
call
mov
sub
shrb
and
bound
andl
jne
pop
or
addb
jmp
and
xchg
xlat
or
add
cwtl
push
mov
pop
jmp
or
jne
ficomps
pop
sub
hlt
pop
mov
jno
mov
fadd
sub
sub
into
mov
add
xlat
nop
add
mov
rolb
or
jmp
pop
xor
jae
bound
mov
inc
mov
add
pusha
cmp
or
jg
push
xchg
lcall
into
pop
mov
inc
inc
add
in
subb
loope
cmp
xchg
into
lods
lock
xor
sub
insl
insb
adc
imul
adc
sbb
inc
jne
inc
xchg
add
inc
mov
mov
repnz
sbb
mov
je
jmp
cvtps2pi
movq
xor
or
add
sub
inc
inc
out
mov
add
jmp
sbbl
test
xor
jae
sub
xchg
pop
test
ljmp
ficoml
addl
jo
cmpb
jmp
xchg
les
dec
adc
movzbl
adc
adc
fsts
leave
push
lds
fldl
mov
xchg
sub
xchg
subl
jg
add
stos
fcoms
mov
sub
ljmp
das
push
lea
inc
push
test
push
jl
lods
inc
sbb
repnz
xchg
sti
dec
loopne
ja
mov
leave
and
ss
push
fsubrs
inc
jg
push
or
push
mov
push
dec
sbb
pop
xlat
pop
dec
pop
mov
rorb
sub
mov
sbb
es
inc
pop
mov
sub
jge
push
mov
add
and
dec
insb
mov
jno
test
pop
test
sub
inc
adc
xorl
fidivl
xor
in
mov
cld
sbb
mov
adc
xchg
pop
push
xor
dec
push
mov
dec
in
bswap
pushf
imul
push
sbb
adc
clc
rorl
xor
dec
dec
sub
pop
xor
pop
or
loopne
ffreep
dec
push
xor
mov
jo
aas
cmp
jp
add
add
jmp
sub
jne
pop
mov
lea
jns
outsb
mov
bound
vcmpss
inc
fmul
push
cmp
mov
je
aaa
push
cmp
or
sub
popl
cwtl
and
and
jle
aad
adc
test
ret
push
sbb
lret
inc
sub
test
mov
test
jl
cs
add
cmpsb
inc
sub
xchg
test
xchg
mov
in
pop
insl
mov
test
or
or
inc
sub
and
mov
jge
cmc
add
and
add
sub
sub
push
data16
push
cmp
cmp
dec
popf
js
mov
shlb
add
dec
mov
dec
sub
add
pop
cmp
push
xchg
and
jge
mov
mov
pop
cmp
fistpll
or
dec
push
mov
test
daa
movsbl
movsb
jbe
dec
lods
imul
inc
mull
call
rclb
pop
dec
shufps
push
push
jnp
push
fisttpl
adc
mov
jbe
jnp
pop
adc
ret
jbe
jl
loop
and
adc
das
push
lods
jns
aaa
insb
mov
rcrb
adc
jecxz
sti
jne
xchg
lock
lds
mov
lcall
add
sub
push
and
add
cltd
inc
bound
jl
sbb
jle
jbe
or
cmc
leave
or
and
mov
cmc
jmp
dec
lds
sbb
rcl
sub
cs
pop
ds
enter
loop
es
adc
mov
popf
sub
sbb
push
js
add
push
sbb
or
push
lahf
ljmp
and
xchg
adc
jg
push
dec
rcll
lock
mov
sbb
or
push
sbbb
sub
inc
dec
adc
adc
popf
or
subb
pop
rorb
adc
sbb
add
popa
or
ss
push
test
mov
sarl
popa
test
js
push
push
push
sbbl
mov
adc
and
test
rol
repnz
aad
daa
push
lret
sbb
mov
mov
sub
roll
push
test
mov
cmc
push
mov
push
xchg
std
jo
push
out
dec
xor
sbb
aaa
jbe
lea
dec
mov
imul
add
inc
add
push
outsl
lahf
pusha
jl
cmp
or
outsl
xchg
mov
xchg
or
aaa
jb
mov
or
mov
pop
lock
or
repz
mov
xchg
jmp
loope
and
mov
lock
sarb
ret
lock
adc
xlat
sub
inc
sub
dec
pop
sbb
int3
lods
or
mov
adc
pop
push
add
dec
fcoml
xchg
mov
insl
mov
imul
test
cmp
js
inc
push
inc
push
mov
test
or
repz
push
or
dec
push
repnz
push
or
or
insb
fisubl
or
adc
leave
sbb
pop
adc
jae
jae
push
push
sbb
pop
shll
ss
gs
mov
sbb
inc
add
cs
or
push
cmp
jno
adc
xchg
mov
movsb
inc
add
add
cmpsb
fistl
inc
xlat
pop
inc
jmp
sbb
adc
add
cmp
cmp
jae
add
sbb
fwait
out
sti
cmp
or
enter
sub
out
adc
add
loope
test
arpl
xchg
and
mov
mov
icebp
scas
lahf
xchg
cmp
sbb
ja
jb
pushf
add
repz
jg
add
cli
outsl
ja
xchg
mov
or
add
fiadds
jne
xor
mov
pop
pop
andb
mov
ss
pop
nop
mov
jne
mov
pop
jle
jo
fs
dec
add
clc
add
xlat
pop
sub
adc
sahf
add
inc
lods
arpl
fwait
clc
pushf
add
xor
pop
sbb
dec
push
xchg
sub
adc
bound
mov
add
fsubp
popa
ret
jmp
push
adc
inc
push
push
sbb
insl
lods
je
inc
push
dec
mov
clc
mov
sahf
scas
cmp
cmp
fdivl
shlb
outsl
jl
adcl
adc
or
mov
mov
push
jl
add
mov
test
mov
jmp
lcall
pop
or
mov
push
sub
xchg
add
imul
cltd
daa
loope
jns
mov
cs
sbbl
mov
hlt
push
test
jge
push
sarl
mov
inc
ljmp
jno
cli
stc
outsl
add
and
inc
dec
mov
dec
push
cmp
addr16
push
dec
nop
decl
inc
mov
jno,pn
test
push
push
push
push
add
addb
in
cmp
stos
ja
mov
roll
cs
adc
mov
je
xor
dec
outsb
add
aaa
adc
dec
cmp
jb
std
mov
jne
mov
dec
and
cmp
xchg
loope
lock
add
nop
mov
call
cmp
xchg
enter
pop
push
xor
in
push
mov
cmp
insb
test
loopne
addr16
popf
sbb
pop
add
mov
adcb
push
push
push
mov
repz
insl
loope
xchg
mov
pop
call
subb
fs
xor
pop
ret
icebp
cmp
test
push
daa
imul
mov
jg
mov
jns
jae
push
sub
lock
adc
mov
inc
add
push
adc
pop
pop
es
mov
mov
mov
mov
cmp
cmp
stos
fcom
lret
jg
jmp
push
push
and
mov
insb
cmc
pop
mov
mov
mov
mov
adc
add
dec
add
shl
insl
xchg
push
and
shrl
push
cwtl
enter
xchg
jle
movsl
xchg
jg
mov
pop
mov
sub
mov
fadd
rolb
sbb
sbb
mov
inc
inc
xchg
adc
sbb
stos
cmpsb
rclb
mov
push
xchg
xchg
pop
pushf
bound
aam
ror
mov
dec
rorl
dec
adc
and
jl
movl
shlb
nop
dec
add
sub
fdivrl
mov
mov
lds
or
mov
adc
das
aam
inc
cmp
sbb
mov
lods
mov
mov
inc
adc
rolb
push
dec
or
cmc
push
imul
add
xchg
adc
dec
ds
outsb
pop
and
cmp
sub
push
lods
lea
cmp
je
pusha
rcrl
pop
and
xchg
aam
and
adc
xchg
dec
rolb
push
shl
mov
in
mov
inc
mov
sbb
rcrl
push
and
and
push
sub
clc
sbb
or
mov
pop
sti
inc
add
inc
and
lds
test
mov
icebp
mov
popa
lea
pop
add
insb
lcall
cmp
dec
pop
cs
shll
mov
push
xor
sbb
dec
dec
sub
jg
add
in
mov
xchg
sbb
xor
or
xchg
jne
stc
je
inc
es
loopne
or
pop
sbb
or
ss
repnz
adc
add
pop
les
mov
xor
and
adc
repnz
cmp
mov
jg
rol
add
xchg
stos
cmp
xchg
add
xchg
loopne
adc
push
mov
sub
cmpsl
add
lret
jb
aam
repnz
and
lea
mov
push
loope
fwait
jl
pop
add
and
testb
rorl
push
rcrb
jae
add
add
and
arpl
jle
dec
push
cwtl
push
pop
jb
and
add
mov
push
xor
or
cmpsl
sbb
or
inc
andl
setae
xchg
je
dec
mov
inc
inc
jae,pn
pushf
dec
ret
pop
xor
adc
mov
add
fidivrl
jne
add
xchg
lods
push
negb
arpl
mov
test
cmc
roll
and
and
mov
add
sub
pop
shlb
fidivs
push
push
rcl
pushf
mov
mov
push
lcall
into
inc
mov
pusha
popa
pop
mov
inc
push
inc
mov
rol
sbb
pop
cmp
push
push
cwtl
mov
mov
and
adc
add
push
mov
dec
mov
lods
inc
in
in
or
or
xor
aaa
push
dec
or
andb
adc
pop
in
es
pusha
push
dec
js
add
inc
pop
jle
jns
and
add
sbb
add
dec
es
andb
xor
mov
test
xchg
xor
xor
push
pushf
xor
fimuls
lock
lcall
pop
sbb
inc
mov
xchg
icebp
mov
xchg
xor
pop
fisttps
xchg
xchg
adc
cs
cmpb
jne
inc
aaa
outsl
or
sbb
and
cmp
add
mov
shlb
jbe
jg
and
or
xorl
inc
aas
inc
add
sub
ja
notb
push
bound
push
sbb
ja
aaa
add
rolb
and
int
loopne
sbb
push
and
jnp
out
and
and
mov
cmp
or
pop
xlat
xor
in
push
add
and
xor
lds
xor
xor
push
je
stos
je
or
outsb
mov
xor
loopne
je
lcall
lods
dec
enter
or
xor
in
jmp
cmp
int3
jb
sbb
enter
sub
or
sub
rcll
and
and
int3
xchg
xor
mov
xor
xor
dec
mov
addr16
xor
jge
or
xchg
and
mov
push
jbe
jl
mov
adc
xor
sbb
dec
faddl
inc
sbbb
call
jle
mov
sahf
mov
or
or
sbb
push
mov
movb
sub
mov
mov
xchg
adc
movsl
roll
cmpsb
pushf
adc
int3
sbb
lret
int3
mov
inc
inc
dec
push
mov
and
sub
cmp
pusha
jnp
or
pextrw
add
xchg
out
mov
movsl
jl
jg
sbb
xchg
mov
push
jbe
add
inc
pusha
dec
das
rorl
mov
inc
pusha
cld
lds
jle
out
dec
shlb
mov
and
pop
adc
outsb
adc
cmp
xor
lds
jl
imul
push
add
xor
and
push
push
pop
xchg
jne
add
sbb
xor
ja
push
mov
mov
dec
out
je
pop
test
pop
push
push
push
pushf
das
mov
mov
lea
and
aam
push
mov
add
das
xchg
roll
xchg
xchg
mov
and
clc
orl
mov
clc
mov
push
mov
jge
adc
cmp
aaa
xchg
shll
pop
testb
sti
sub
or
aad
prefetch
or
xor
ljmp
loope
adc
xor
and
adc
stos
into
cmp
or
fs
fisubs
push
and
loop
and
ficomps
push
and
fs
decl
in
mov
insl
inc
mov
push
or
push
jg
pushl
and
dec
push
mov
or
incb
ss
mov
leave
mov
shlb
jae
xor
mov
loop
cmp
jl
mov
sub
xchg
mov
mov
add
inc
test
mov
inc
adcl
jle
pop
pushf
mov
shrl
shlb
push
cmp
or
in
inc
sub
je
jp
cmp
iret
jp
stos
xor
or
inc
pop
pop
sahf
push
push
or
push
pop
dec
add
and
mov
push
ficoml
enter
adc
adc
test
ja
orb
pop
xor
push
fnsave
pushf
jle
push
xchg
inc
insl
movsl
sub
jmp
xchg
pop
pop
inc
dec
bound
dec
mov
shrl
mov
lea
ja
jbe
dec
xchg
inc
lret
mov
jne
or
or
xor
cmp
mov
push
add
test
int3
mov
mov
adc
add
inc
dec
in
sub
stc
jg
mov
xchg
iret
jg
jbe
inc
add
mov
dec
sbb
mov
jle
mov
dec
or
dec
or
inc
xchg
call
jno
repnz
fwait
sub
push
cwtl
clc
shr
rcll
sbb
repnz
call
add
or
sub
or
push
push
popl
add
add
adc
test
stc
add
push
mov
pop
insl
push
iret
inc
push
pop
pop
je
mov
in
in
dec
add
test
jb
movsb
leave
std
add
insb
enter
mov
dec
inc
inc
cmp
paddw
test
das
jg
lds
popl
repz
push
mov
sub
cmp
cs
loopne
out
sub
aas
pop
cmc
popa
push
lret
dec
test
pusha
mov
xchg
out
sbb
shrl
aas
pop
mov
imul
sub
xorb
addb
in
inc
and
add
pop
jle
out
mov
push
sbb
fisttpl
in
mov
and
dec
xor
push
jecxz
and
fisttpl
cmp
ljmp
push
test
cmp
imul
mov
stos
dec
push
mov
sbb
add
dec
xor
push
rclb
xor
daa
test
les
ja
notb
jp
data16
inc
jmp
push
push
jae
mov
jmp
imul
mov
lcall
scas
push
mov
call
subl
sub
clc
inc
pusha
out
add
and
lahf
jg
dec
lea
xor
dec
insl
cmp
outsb
sub
cmpsb
jl
add
or
scas
ljmp
scas
fcomps
and
and
cmp
pop
inc
gs
jle
inc
je
jmp
inc
inc
xor
scas
jmp
mov
xor
mull
inc
adc
jb
mov
adc
leave
xchg
clc
xchg
insb
test
rorb
pusha
push
sti
sbb
jecxz
sarl
fstpt
push
cs
insb
popf
rorl
sbb
xor
daa
mov
sub
rcrb
mov
jo
lret
mov
mov
add
test
add
push
mov
sub
leave
adc
mov
in
and
add
ljmp
inc
sub
push
dec
fimull
icebp
inc
into
scas
shlb
dec
or
push
and
popl
xor
in
adc
push
je
mov
sub
emms
jge
clc
push
xchg
popa
mov
movsl
inc
sbb
mov
es
cmc
jbe
shr
lods
mov
popl
push
lret
xchg
andb
and
push
pop
cltd
loope
loope
scas
adcb
pop
push
mov
and
daa
dec
imul
cmp
xchg
ljmp
add
inc
js
mov
es
nop
push
test
jg
xor
das
jp
push
add
adc
sar
loopne
and
xor
popa
cmp
adcl
cmp
sub
sbbb
js
push
cli
add
stos
jns
dec
je
sub
xor
xchg
xor
je
sbb
push
mov
xchg
jge
pusha
mov
lcall
outsb
shrb
xchg
in
jp
mov
inc
jns
sub
aaa
xchg
jne
mov
sbb
and
ret
subl
or
test
cmc
or
leave
add
jo
sbb
movaps
mov
adc
jmp
les
int
sbbb
jge
jle
rcll
inc
or
push
push
jg
shlb
fldenv
push
jecxz
aam
les
das
inc
jl
xchg
mov
jne
fildll
mov
fiadds
xchg
cmp
lahf
push
cld
dec
lea
inc
push
lret
jns
add
shrb
pop
xorb
mov
arpl
add
jl
pop
xor
sbb
mov
rorb
dec
cmp
jle
stc
mov
inc
repz
push
add
adc
fs
sub
jl
ret
push
popf
sbb
decl
inc
jg
stos
xchg
sub
dec
cmp
out
lahf
scas
sub
decl
mov
repnz
cwtl
push
add
add
xchg
sub
cmp
dec
dec
stos
mov
xor
jne
dec
dec
inc
xlat
mov
dec
xor
mov
icebp
xchg
add
in
push
ja
pusha
orl
lret
push
imul
push
je
or
sbb
ret
cmpsb
jb
shufps
ret
call
push
sahf
loopne
xor
mov
enter
mov
jge
jp
enter
jno
jmp
jg
xor
jge
fneni(8087
fistps
lds
mov
les
sub
fldcw
cmp
adc
jo
push
xchg
cmp
cmp
adc
xor
push
fidivrs
lods
ret
mov
in
fldenv
mov
imul
mov
lds
fidivl
sub
push
clc
or
loope
add
dec
sahf
push
sti
sbb
jge
fildl
imul
ret
mov
pop
jecxz
mov
fldt
push
sti
push
pop
mov
mov
ds
xchg
mov
xor
sbb
mov
test
inc
cmp
push
push
lock
sub
mov
arpl
mov
out
cli
jne
pop
push
and
add
add
cmp
ds
out
aam
loope
sbb
add
jecxz
cmp
fwait
push
dec
lea
jmp
add
jbe
cmc
jne
sti
cmp
pusha
jo
xchg
repz
cs
js
mov
and
mov
andl
push
pop
sarb
mov
lret
mov
mov
cmp
xor
in
inc
inc
inc
jbe
shrl
cmp
insb
outsb
push
lods
in
cltd
push
in
jp
sbb
rolb
push
es
jae
das
inc
jbe
sub
popl
push
sub
daa
leave
inc
push
les
sbb
sbb
sbb
mov
xor
cmp
and
sbb
xor
test
sbb
test
dec
adc
jl
and
inc
mov
rcrb
aaa
cltd
and
and
frstor
inc
adc
inc
adcb
std
sbb
sbb
in
cmp
pop
enter
push
push
sub
adc
dec
pop
sahf
sbb
test
inc
sbb
enter
je
sub
loopne
fldl
lock
or
lahf
push
add
inc
pop
scas
jb
into
das
push
je
sbb
adc
adcl
psrad
jb
loop
inc
test
add
sbb
or
push
add
lock
cwtl
push
sbbb
push
xchg
push
add
aas
push
xchg
jg
or
xor
add
add
mov
adc
dec
xlat
sgdtl
jb
insb
fcoml
movsl
loopne
add
nop
lods
pop
call
mov
jne
sub
or
and
inc
cmp
and
add
pop
jmp
jae
nop
sbb
sub
add
dec
sub
jmp
lock
scas
mov
xchg
xor
cs
add
adc
mov
rorl
dec
shl
or
mov
adc
add
xor
add
add
and
adc
push
adc
or
in
stc
shlb
fadds
jmp
leave
inc
push
jmp
xchg
adc
leave
and
jecxz
out
push
cmp
ret
data16
and
mov
test
fsubs
cmp
adc
in
pop
testb
test
test
daa
mov
jnp
adc
cs
adc
or
cmp
cmp
jle
movsl
repnz
stc
push
sbbb
sub
popf
cmpsb
popf
orb
pop
adc
push
aaa
add
decb
and
je
nop
xchg
out
jge
je
jno
rcll
fdecstp
mov
cltd
jb
jge
jl
test
push
stc
or
test
stos
dec
das
dec
jg
cs
in
mov
or
test
lods
push
xlat
pop
fsubr
push
sub
pop
popf
jbe
xor
and
jbe
mov
add
pop
es
rcrl
repnz
xchg
in
mov
dec
add
pop
push
stc
lods
loopne
push
dec
test
inc
inc
pop
lahf
adc
and
int3
sbb
jb
dec
cmp
into
aad
sbb
mov
sar
xchg
mov
sbb
sbb
faddp
or
sub
jge
rclb
add
push
sub
jecxz
jne
and
mov
cld
stc
imul
and
seto
aas
xchg
xchg
pop
xchg
repnz
cmp
jl
xchg
fldt
fiadds
xchg
pushf
dec
cmpsb
or
push
lea
xor
or
ss
push
stos
push
nop
push
lds
ds
sbb
fistpl
inc
pop
test
sbb
lods
enter
sarl
icebp
ret
in
shrb
pop
adc
movsl
adc
mov
xor
std
sbb
stc
or
scas
shl
add
push
pop
test
lcall
sub
dec
loop
loope
pop
adc
rolb
test
mov
mov
mov
sub
or
in
sahf
icebp
or
sbb
je
adc
js
xchg
add
lahf
fs
mov
outsb
add
lret
aas
mov
push
je
cmp
add
cmpsb
cmp
sbb
adc
inc
sub
pusha
dec
add
je
iret
clc
daa
or
leave
cmpsl
sbb
js
stc
mov
lahf
lods
inc
cmpsb
cmpsl
dec
rcl
lcall
or
inc
data16
jl
mov
cmp
add
dec
and
fistl
add
cmp
lret
ja
outsb
or
xchg
lock
add
inc
es
inc
xor
jmp
stos
add
xor
lock
cmpsb
in
or
clc
add
lcall
lea
jb
push
and
add
lock
mov
jg
add
pop
add
dec
add
in
pushf
and
add
mov
pop
adc
or
cmp
sahf
je
xor
or
pop
sarb
lds
andl
push
mov
dec
cld
ret
push
inc
add
add
sub
push
rcll
inc
and
nop
push
lods
or
mov
ret
cs
dec
add
sbb
sbb
scas
ds
add
icebp
xchg
add
out
inc
inc
int
cmpsb
cmp
and
push
popa
mov
out
loope,pt
push
add
pop
dec
push
jb
inc
sahf
lock
in
and
add
jmp
outsb
pop
mov
add
or
bswap
fstpt
jmp
fprem
push
imul
push
sahf
loope
fadds
fstl
int
fnstcw
mov
dec
aaa
fs
mull
jae
xchg
cltd
in
sbb
jl
xchg
jbe
push
or
adc
imul
dec
jb
ret
pop
addr16
cmpsl
shrb
xchg
sbb
sbb
xchg
enter
inc
fsub
jg
nop
addr16
adcl
loope
inc
push
cmp
fadds
mov
punpckhwd
arpl
pop
sahf
bnd
daa
dec
push
dec
je
inc
jmp
dec
ja
inc
xor
jne
pop
and
test
push
push
and
leave
mov
inc
push
jmp
arpl
mov
lret
push
clc
test
sbb
jg
mov
cmpb
lea
enter
daa
add
pusha
or
and
arpl
push
push
dec
jg
inc
dec
enter
add
test
inc
cwtl
dec
daa
loopne
subb
cmp
and
popa
stos
pushf
sarb
fiadds
add
mov
and
mov
jne
pop
outsl
jb
pop
mov
mov
xor
jb
push
or
loopne
jne
push
rcrl
and
add
sbb
sbb
sub
mov
add
mov
test
push
jmp
add
loop
mov
cmpsl
pop
jne
daa
flds
adc
push
jne
sbb
loop
jno
loopne
lods
inc
xchg
dec
cmp
dec
push
mov
in
ds
es
and
add
inc
cli
push
push
jns
das
and
push
adc
cmp
adc
nop
imul
add
adc
arpl
sub
loopne
rclb
mov
cmp
push
cmp
adc
lret
enter
inc
das
imul
gs
mov
mov
sahf
pushf
push
inc
mov
and
les
push
les
pop
pop
lret
xchg
adcb
mov
scas
xor
es
xorb
and
cmpsl
pop
mov
sbb
jno
jmpw
mov
xchg
test
test
sub
pop
xorl
push
aad
push
xor
out
mov
mov
sub
insb
sbb
add
out
mov
loope
ficoms
hlt
adc
ja
or
lea
and
addl
dec
lods
add
mov
and
aaa
pop
adc
mov
movsb
pop
sbb
push
push
cmp
and
rcrl
mov
fiaddl
sub
xchg
adcl
jnp
rorb
or
mov
mov
movsb
es
roll
xor
adc
or
sarl
rclb
inc
je
je
test
cs
mov
mov
and
scas
add
xchg
lock
test
or
sbb
pop
sub
decl
mov
push
jl
adc
es
dec
cmp
jg
call
sub
sub
outsb
inc
cmp
push
xor
cli
iret
dec
adc
pop
pop
jno
movsb
dec
movsb
cmp
cmp
pop
mov
or
loopne
xchg
shl
fildl
mov
mov
and
push
add
push
pop
adc
lret
aam
adc
inc
adcb
sub
and
add
cmc
xor
mov
push
out
sub
incl
mov
adc
pop
push
lods
shlb
xor
push
or
ja
push
je
mov
dec
mov
sysenter
push
pop
push
xchg
in
mov
cmpsl
mov
test
iret
mov
xlat
adc
mov
inc
shlb
sbb
pop
add
xchg
rdpmc
int
das
xchg
jno
mov
lcall
inc
cmc
js
pop
xchg
outsb
loop
xor
xor
mov
sbb
iret
rcr
mov
push
push
push
mov
xor
push
sub
xchg
dec
push
push
orl
aas
inc
icebp
sbb
lods
cmp
pusha
stos
adc
cmp
dec
xor
push
aaa
jno
inc
fs
loop
pushf
stos
or
and
aas
adc
adc
dec
lret
push
or
adc
imul
cmp
add
adc
jl
lahf
ds
add
add
pop
aad
dec
inc
jl
or
sarb
pop
mov
sbb
mov
push
jmp
mov
ret
movsl
inc
pop
cmp
movsl
iret
outsl
sbb
mov
push
xlat
je
daa
sub
or
adc
inc
sbb
ret
xor
sbb
out
add
xor
sub
inc
aas
cwtl
lods
add
stos
pop
inc
or
jge
negl
sbb
stc
mov
dec
sub
imul
popa
roll
jl
xchg
xor
shll
xchg
or
sub
mov
lods
and
xchg
testb
lahf
testb
test
add
jo
fiadds
in
popa
push
rcl
push
pop
std
cmc
push
push
mov
pop
loope,pn
sbb
mov
cmp
inc
or
inc
adc
cmc
aas
cmp
addb
and
or
cmc
mov
sbb
inc
out
jb
or
stos
inc
push
test
and
sub
pop
mov
insl
adc
pop
test
lds
push
hlt
add
push
jb
add
sahf
pushf
stos
push
lahf
jg
repz
repz
pop
icebp
repz
inc
scas
dec
das
repnz
adc
inc
shlb
fildl
das
dec
adc
inc
idivl
or
fmull
loopne
sub
rorb
adc
or
nop
push
sbbb
loopne
das
xchg
repnz
inc
adc
ja
push
sbb
xchg
inc
jecxz
bound
lcall
jmp
lock
loope
enter
sbb
or
xchg
pop
xor
inc
pop
add
dec
push
sbb
add
pop
les
clc
sbb
icebp
push
add
stc
ret
hlt
inc
js
adc
inc
cmp
pop
sbb
cmp
lcall
arpl
addl
xchg
adc
add
pop
ja
sub
dec
gs
pop
jo
jo
xchg
jp
addl
or
test
lock
push
pop
pop
mov
pop
xor
pop
test
mov
ficoms
in
test
mov
jno
sbb
inc
jnp
pop
xor
loope
xchg
jnp
les
pusha
jl
push
or
mov
xchg
mov
or
xchg
or
pop
sbb
js
adc
insl
adc
shrb
pop
movsl
push
pop
nop
daa
iret
add
out
dec
loop
and
iret
add
out
cs
adc
cmp
adc
and
pop
sarb
sbb
xor
jb
scas
dec
pusha
and
nop
mov
repz
inc
adc
jns
out
inc
fisttps
push
mov
out
jne
mov
mov
or
and
and
and
cmp
push
xchg
jnp
dec
mov
ljmp
add
add
mov
int
pop
sbb
repnz
out
inc
adc
in
or
dec
and
push
xchg
pop
inc
test
sub
add
jae
mov
in
jbe
xor
jecxz
mov
mov
out
cmp
sahf
sbb
sbb
sbb
or
and
shlb
aaa
sbbl
sti
movsl
and
ss
mov
ror
out
xor
adc
cmp
imul
rol
aam
ss
sub
push
ret
ret
add
in
repz
shlb
jle
sub
int
jge
mov
fdivl
jns
iret
dec
sub
push
xchg
out
out
inc
jmp
push
insb
movsb
dec
repz
mov
iret
mov
iret
repz
jns
cltd
sub
fsin
call
push
loop
dec
mov
cmp
push
xchg
mov
inc
sbb
push
push
mov
mov
push
imul
push
ret
and
xchg
inc
arpl
call
xor
lahf
inc
adc
repnz
adc
sbb
add
sbb
and
and
dec
sub
sub
sub
xor
xor
xor
ss
out
mov
cmp
cmp
inc
inc
inc
inc
fmull
pop
out
xchg
movb
and
xchg
insb
push
mov
sbb
dec
lret
out
mov
push
dec
loop
lock
dec
jecxz
fmul
and
jno
inc
ss
in
mov
push
fcmovnu
lret
loopne
iret
shrl
stos
fiaddl
out
ja
idivl
test
ja
sub
test
ret
ds
addr16
push
rol
in
and
add
in
or
int
insl
jmp
adc
scas
int
dec
repz
in
out
mov
xchg
out
and
xchg
call
add
aaa
lahf
out
lcall
repnz
insl
imul
lds
stc
out
fisubl
lock
gs
repz
inc
add
mov
sbb
jg
add
or
xor
ljmp
leave
repz
xor
mov
push
mov
stos
loop
pop
push
inc
push
pop
daa
sbb
ret
inc
fs
sbb
arpl
add
shrl
dec
loope
xorb
repz
ret
pop
inc
adc
dec
adc
sub
mov
push
rorb
xchg
scas
adc
lcall
cli
inc
ja
xchg
loop
test
psllw
or
rolb
pop
jmp
push
incl
jl
idivb
insb
sbb
or
jecxz
aaa
addl
testb
inc
add
or
jmp
sbb
pop
jne
pop
adc
cmp
pop
dec
jg
ljmp
pop
in
add
add
push
popf
dec
mov
add
sbb
fisttpll
sbb
imull
add
adc
mov
xor
and
add
addr16
shl
push
or
les
jmp
inc
pop
inc
jae
rorb
ret
pusha
je
or
daa
jae
jae
pusha
je
cmp
je
inc
je
mov
xlat
jmp
adc
lret
jmp
xor
js
rorb
jl
cmpb
dec
stc
jno
and
mov
in
mov
in
iret
push
lahf
push
push
int3
shlb
xor
cs
test
push
push
ficoms
push
xchg
jg
inc
movsl
sbb
rolb
sub
push
add
or
xchg
int3
jmp
or
bnd
mov
ret
iret
daa
dec
inc
dec
clc
cmpb
xor
lds
add
shrl
and
adc
sbb
sbb
add
sbb
or
jno
or
inc
orb
push
adc
inc
test
push
pop
ret
pop
sub
adc
cli
lret
pop
pop
or
mov
dec
push
test
outsb
sbb
call
push
scas
sbb
push
sub
addb
push
cmp
in
pop
jmp
push
push
mov
sub
cmp
ja
cmp
jne
jmp
loope
sbb
fldcw
aaa
shr
and
loopne
das
or
adc
inc
inc
aaa
out
insl
or
ja
sarl
xor
adc
and
lock
push
dec
dec
cltd
push
jmp
adc
dec
inc
inc
xor
adc
cmc
adc
sub
inc
call
or
mov
movsl
sti
xor
mov
and
xchg
add
imul
lret
mov
sbb
jo
pop
jae
xor
addr16
flds
stos
test
sub
dec
pop
movsb
arpl
push
aas
add
fdivrs
xchg
xor
push
jg
cmp
and
inc
inc
cli
mov
dec
mov
mov
jecxz
jno
pop
dec
fwait
push
push
xor
in
cmp
inc
and
fcmovbe
repnz
test
mov
inc
or
lock
lock
mull
clc
mov
leave
push
dec
mov
jge
xor
mov
imul
mov
sub
sub
push
fsubr
lret
add
aam
dec
sbbb
mov
leave
mov
pusha
pusha
outsb
push
daa
jmp
shrb
or
mov
lcall
lret
pop
in
fidivl
lret
daa
cmc
enter
jg
sub
mov
xchg
lret
cs
jg
lea
sbb
out
xor
mov
punpckhwd
imul
mov
je
jne
and
and
insb
mov
je,pt
adc
pop
xor
or
jne
sbb
rorl
movsl
and
sbb
das
xchg
ds
sarl
jg
je
adc
jl
push
or
pusha
movsb
in
bound
and
cmpsl
sahf
das
test
sub
frstor
jle
inc
adc
cmp
ljmp
jne
jnp
inc
pop
xor
and
jns
push
adc
sub
psrad
subb
test
mov
decl
incb
sbb
mov
repnz
add
add
repz
inc
test
std
inc
push
add
std
inc
lds
xor
ds
test
in
jbe
pop
lds
add
nop
inc
xchg
insb
pop
das
dec
decb
call
push
inc
enter
pop
das
pop
sub
arpl
in
pop
das
pop
xorl
jmp
aas
xchg
dec
xor
xchg
adc
adc
addr16
jae
negb
push
movsb
or
xchg
pop
dec
cld
int
rcrb
push
xchg
fistl
add
jmp
sti
sti
repnz
jmp
test
add
jmp
sub
mulb
orl
shrl
mov
orb
fidivs
rcrb
push
adc
pop
jb
sbb
add
adc
dec
clc
repz
js
pop
nop
mov
out
lcall
loop
hlt
cmp
cmp
data16
inc
movsb
in
filds
pop
pop
adc
cmp
sbb
sbb
popf
sahf
idivl
loop
push
div
cltd
dec
stos
jge
pop
xchg
jbe
sahf
cmpsl
jge
or
fnstcw
mov
cld
pop
aas
loopne
in
repz
adcb
ja
add
add
jne
sahf
sub
adc
xor
sbb
rol
push
aaa
push
and
cmp
adc
push
add
add
mov
js
sub
or
mov
jb
mov
jmp
or
or
roll
push
add
ja
jb
pop
notb
rcll
adc
or
mov
push
or
test
sub
call
push
push
and
sub
jo
push
cs
push
cmp
push
ja
dec
adc
pop
jne
mov
mov
in
mov
cs
cmp
push
outsl
dec
gs
adc
mov
pop
scas
pusha
cmpsb
inc
and
dec
stc
lret
inc
or
sbb
mov
mov
adc
ret
sti
pop
cmp
pop
and
push
or
cs
push
xorb
pop
lahf
mov
adc
jge
push
jne
xor
jmp
test
mov
lea
jns
add
or
ss
repz
add
inc
pusha
sub
fidivs
push
push
push
cwtl
or
sbb
mov
and
into
sbb
push
lock
push
stos
push
inc
xor
mov
sbb
icebp
push
shr
fisubrl
iret
popf
mov
xchg
ss
or
pop
or
add
and
or
out
sbb
or
add
jae
mov
ljmp
fadd
mull
sbb
xchg
lea
add
jo
movb
or
jmp
cs
in
cmp
add
mov
and
mov
andl
dec
xchg
mov
or
xor
push
ss
add
insl
add
popa
dec
ja
and
xor
cmp
fwait
add
mov
pop
add
add
inc
notb
pop
mov
xor
inc
arpl
lahf
sbb
add
cmp
mov
xchg
or
mov
jecxz
adc
push
push
cmc
hlt
dec
pop
push
push
xlat
sbb
call
cmp
sbb
dec
pop
out
jo
mov
cmp
pop
cmp
jle
sahf
cmpsb
add
jge
data16
in
or
hlt
mov
push
cmp
jbe
addb
jge
pop
pushf
test
insb
sbb
out
or
jne
int
inc
dec
fistl
lret
pop
xlat
push
sbb
add
sub
inc
adcb
push
ret
adc
add
jle
add
mov
fwait
pop
ret
or
daa
movsb
mov
sub
jmp
rolb
add
clc
add
push
mov
lods
and
push
jno
lahf
xchg
jb
sbb
jle
push
adc
push
bound
push
mov
cltd
push
add
dec
mov
inc
push
sbb
pusha
add
aaa
adc
outsl
inc
fwait
shll
loopne
pop
sub
call
pop
sti
mov
int
push
mov
xor
sub
jns
xchg
popl
mov
sbb
adc
push
fsubrl
cwtl
push
sub
fildl
add
inc
jo
fcomi
pop
sub
sub
dec
je
jle
test
jb
std
into
inc
fiaddl
dec
pop
ss
push
mov
aaa
jl
adc
jne
test
mov
dec
adc
push
fdivrs
xor
jecxz
outsb
push
xor
mov
add
ljmp
jecxz
xor
fsubrs
sbb
inc
xor
pusha
xlat
ret
or
lahf
adc
jns
adc
jnp
std
nop
sub
call
jb
lds
lods
push
sbb
mov
fdivrs
sbb
inc
pusha
push
xchg
jo
sub
sbb
or
pop
je
ljmp
add
cmpsl
pop
dec
push
mov
mov
lods
je
and
inc
je
jb
sub
clc
std
sub
add
or
push
adc
mov
mov
jp
adc
shlb
js
dec
sub
jle
popf
and
add
mov
pop
mov
dec
addl
jo
mov
add
stc
add
sub
testb
jne
mov
or
cli
pop
imul
and
mov
cmp
pop
popf
cltd
pop
xchg
add
mov
jmp
scas
or
mov
dec
inc
push
push
push
inc
leave
add
aas
pop
popa
enter
add
popa
loop
pop
test
sbb
mov
out
ret
push
push
addr16
jns
cmc
sub
and
loope
or
cltd
mov
add
lahf
rcrl
adc
xchg
add
mov
adc
add
adc
push
xor
push
repz
pop
push
ret
pushf
push
sbb
mov
int
shrb
das
sbb
je
cmpb
imul
push
cwtl
xchg
mov
ret
mov
outsl
jl
ljmp
jmp
cmp
je
push
or
mov
fistps
jne
mov
cmp
dec
je
mov
or
mov
add
pusha
and
jl
inc
xchg
stos
jle
pushf
jbe
push
jne
inc
sub
loopne
inc
jl
cmp
test
in
jg
or
pushf
aaa
adc
mov
pop
push
cmp
push
fmull
in
mov
out
add
dec
and
mov
and
sbb
dec
dec
js
adc
mov
shrl
add
inc
push
add
cmp
pop
ficomps
add
mov
lock
mov
fdiv
mov
cmpb
je
mov
fcom
cmp
sahf
enter
mov
scas
adc
or
mov
mov
mov
testb
cmp
cmp
or
add
jmp
lock
mov
pop
jb
mov
and
adc
inc
lods
jmp
pcmpeqw
enter
out
push
inc
pop
push
add
sbb
or
inc
pusha
adc
push
push
js
test
pop
loope
aad
adc
push
sbb
mov
subb
dec
scas
xor
dec
iret
xor
cmpb
xchg
sub
popa
negl
add
mov
movb
or
loop
and
incl
xlat
pop
mov
mov
pusha
pop
das
int3
and
adc
inc
lods
or
arpl
xchg
dec
shr
cmc
int
je
sbb
push
fistl
rolb
inc
add
add
push
adc
imul
sbb
xor
cli
adc
dec
xor
sarb
push
sbb
xor
call
je
inc
sub
push
loopew
cmp
xor
sarl
and
mov
push
cmp
jbe
xchg
ror
xchg
push
shrl
cmp
fldt
inc
cld
imul
scas
inc
stos
dec
mov
fbld
std
mov
pop
dec
push
mov
ss
divb
push
scas
imul
test
aas
lds
and
dec
cmp
addl
jnp
inc
imul
mov
jl
loope
ja
push
mov
js
sbb
mov
push
push
sub
adc
into
inc
lea
cmp
jbe
aaa
mov
jg
daa
lahf
mov
jg
inc
insl
jle
dec
cmp
cwtl
clc
testl
call
icebp
add
dec
pusha
daa
add
fcmovbe
test
add
jne
inc
test
ret
push
xor
pop
mov
or
push
and
jnp
sub
cwtl
add
or
das
mov
add
pusha
aaa
push
add
add
mov
movsl
mov
push
dec
cmp
inc
mov
jno
or
repz
sar
jmp
xor
push
mov
xchg
or
loop
iret
pop
add
dec
mov
lahf
pop
js
add
decb
or
aaa
cmp
and
inc
sahf
cmpsb
adc
inc
push
loope
call
push
fsubrs
sarl
adc
xchg
ds
add
ja
adc
sbb
add
add
and
or
std
ljmp
hlt
dec
imul
and
push
push
sub
sar
nop
addb
ret
daa
sub
stos
int3
ret
stos
pop
jns
jo
mov
push
shlb
andb
mov
popa
add
je
jb
insl
fcoms
sbb
mov
pop
nop
movsb
pop
add
or
mov
ss
xor
cmpsb
push
js
xchg
and
repnz
adc
fldt
jb
push
andl
or
xchg
fwait
jle
mov
mov
adc
pop
mov
jnp
inc
popa
xchg
or
xchg
pop
and
fcomip
or
sbb
lea
inc
sbb
popa
insl
stos
and
or
inc
pop
add
sub
push
aas
mov
xchg
and
and
adc
add
mov
ds
jnp
test
xchg
cwtl
insl
and
pop
ret
cwtl
ret
xlat
icebp
add
xchg
in
inc
jmp
adc
add
and
test
jno
pop
enter
dec
iret
popl
and
push
cld
outsl
cmp
xor
jg
rcll
cmp
je
cmp
lock
sahf
cwtl
mov
and
sahf
mov
jne
add
inc
ljmp
add
daa
mov
xor
jl
push
pop
push
in
repnz
ret
dec
cmpsb
cmp
pop
mov
or
or
push
push
mov
inc
shll
inc
popf
pop
mov
push
dec
int
in
push
imul
inc
cmp
jnp
int
fadds
cmp
sub
mov
add
push
ljmp
or
pop
inc
fmul
imul
in
add
cmp
ds
sub
out
ficoms
aas
push
xor
imul
add
add
jns
into
ret
adc
incl
and
sbb
int3
xor
loopne
lcall
iret
jge
testl
nop
jno
inc
es
stc
dec
js
mov
push
xabort
xor
adc
movw
inc
sbb
test
fisttps
dec
or
mov
mov
push
push
xchg
inc
test
and
xchg
sub
cmp
ret
inc
orb
adc
sub
cltd
das
mov
adc
add
xchg
lea
add
adc
mov
dec
and
test
movsl
xchg
jp
jle
mov
ds
test
mov
aam
inc
test
add
and
sub
mov
popf
loop
inc
cmp
jne
cmp
imul
jge
sti
ljmp
cli
cwtl
sub
mov
bound
cmpsb
and
nop
and
inc
jmp
pop
cld
sbb
lods
inc
xchg
ret
mov
pop
push
ret
pusha
pop
insl
mov
pop
mov
jg
add
mov
fisttpl
inc
sbb
push
ss
pop
jno
loopne
mov
dec
pop
xor
mov
and
adc
stos
jp
mov
mov
cmpsb
push
add
fbstp
push
subb
mov
sub
popf
pop
push
ret
lods
jl
mov
mov
pop
jnp
dec
add
push
mov
insl
jne
pop
dec
sbb
shll
push
les
mov
sub
in
sub
es
fiaddl
shrb
adc
or
dec
mov
or
xchg
mov
and
and
inc
adc
cs
sub
xor
xor
cmpsl
fsubrs
push
sub
sub
mov
mov
cmp
add
sbb
fstpt
xchg
xor
cmp
adcb
scas
mov
xchg
push
cmp
adc
push
arpl
push
jmp
test
and
inc
cwtl
adc
inc
fistl
push
sub
je
inc
pusha
inc
loope
xor
adc
inc
dec
mov
inc
inc
jnp
dec
cs
push
push
dec
push
imul
lock
push
sub
sbb
je
mov
mov
lds
push
ror
mov
fwait
add
sub
lock
xchg
fcoms
jmp
ret
sbb
mov
jne
inc
cmp
aam
stc
stos
rolb
or
push
push
aas
jnp
and
std
add
sarb
push
add
sbb
loope
insl
in
jne
out
popf
testl
xor
adc
add
add
and
mov
aad
ret
xlat
adcl
or
push
lcall
jo
cmp
xor
ds
adc
xor
cmovno
sub
xor
sbb
dec
push
stos
and
les
daa
dec
int3
loopne
xchg
push
mov
mov
popa
xchg
jg
jno
adc
push
jnp
cmp
out
movsl
push
hlt
lods
sti
jle
inc
rolb
dec
jb,pn
push
popf
lock
loopne
ds
sub
add
pop
test
aaa
movsl
sub
xchg
cwtl
test
pushf
adcl
dec
aam
cmp
and
inc
mov
sbbb
mov
or
mov
scas
je
push
sub
andb
pop
pop
sbb
mov
pop
dec
mov
and
mov
xor
add
fmull
lods
dec
outsb
das
xor
adc
add
xor
mov
push
jl
test
mov
andl
ss
adc
and
jmp
or
mov
das
adc
jl
push
lock
sub
or
pop
dec
push
mov
pop
sub
mov
sbb
les
mov
and
mov
loop
sbb
mov
pop
sbbb
out
cmp
add
nop
cmp
popa
or
stos
ja
or
addb
lods
cmp
xor
add
xchg
sbb
cmpsl
cmp
dec
pop
and
cmp
adc
jecxz
subb
int
pop
cmp
negb
or
pop
add
xchg
mov
jle
inc
jne
inc
mov
mov
jns
das
adc
add
or
sub
bound
mov
dec
mov
fldl
pop
jmp
inc
inc
je
adc
repnz
jecxz
push
subl
add
imul
add
xchg
movsl
xchg
jnp
push
sub
add
stos
es
rclb
pop
orb
xchg
clc
lods
xchg
mov
add
xchg
daa
test
dec
mov
in
mov
add
cs
pop
cmp
push
lahf
or
rolb
popa
adc
and
or
mov
cs
bound
push
pop
lds
lods
push
add
mov
push
clc
jae
pop
and
mov
popa
ja
ret
lea
xor
jl
mov
daa
push
push
mov
add
dec
or
xor
mov
dec
mov
xor
or
imul
and
shl
fiaddl
inc
dec
pushl
pop
or
and
xor
or
gs
cmp
push
add
sub
popf
adcb
rclb
pop
mov
mov
push
push
sub
shll
gs
repnz
push
and
push
and
push
xchg
add
cltd
cmove
lret
cmp
das
lahf
push
mov
xor
je
xchg
xor
movl
mov
out
sub
xor
adcl
loope
in
test
xchg
and
ja
lds
jg
rcr
push
add
and
jno
xor
inc
cmp
mov
movzwl
fsubrl
mov
sub
xor
jmp
sub
or
push
add
pop
pop
out
inc
dec
adc
mov
jae
dec
or
sub
enter
mov
xchg
jg
inc
lock
jb
xchg
lods
imul
dec
sub
jb
cmp
mov
push
pop
jl
es
call
scas
and
mov
push
add
sub
loopne
mov
movl
loop
pop
loopne
cld
stos
enter
xor
in
or
xchg
call
cmpl
sub
push
push
or
push
inc
dec
or
mov
inc
sbb
sbb
inc
sbb
and
xchg
cmpsb
jb
js
xchg
jge
mov
add
push
or
pop
mov
call
test
push
pop
jmp
or
inc
out
cmp
jne
cmp
cmp
adcl
fisttpl
pop
add
pop
pop
mov
fstl
test
mov
push
sarl
pop
sbb
mov
jae
lahf
xchg
insb
imul
dec
push
sub
stos
dec
sahf
mov
addl
jno
les
pop
add
add
popa
dec
adc
xor
das
ds
mov
add
mov
scas
stos
xor
sbbl
test
cltd
shr
xor
clc
xor
mov
jne
mov
cmp
pop
je
decl
add
loop
ret
outsl
roll
loop
ljmp
enter
jnp
jns
add
rcl
cltd
dec
adc
dec
or
adc
mov
cli
or
js
iret
or
out
jle
sub
sub
ja
xor
adc
ja
jbe
or
jae
dec
lahf
mov
pop
and
filds
divb
xor
jg
jl
je
movsb
jb
fs
je
lock
push
sbb
popf
je
mov
inc
dec
je
rol
out
daa
xchg
mov
ret
xor
addr16
push
and
cmp
inc
fidivs
sbb
add
mov
xor
push
jb
mov
insb
ljmp
inc
or
fsts
enter
adc
push
add
es
sbb
pop
imul
sub
xchg
add
fsubrp
xchg
in
into
xor
nop
and
outsb
daa
iret
sub
adcl
dec
mov
cmp
fiadds
ds
inc
inc
mov
cld
int3
shrl
add
jo
sub
and
int
mov
mov
insl
add
jmp
arpl
int3
lcall
or
outsb
iret
adc
jg
xor
leave
jbe
push
adc
inc
pushf
xchg
fbld
movaps
jge
mov
mov
mov
es
movsb
mov
in
std
icebp
mov
or
sbb
out
or
mulb
add
xchg
jle
pop
scas
jns
mov
lret
cmpsb
mov
or
push
mov
shlb
adc
daa
add
test
jge
sub
cld
sahf
adcb
arpl
loopne
push
dec
in
and
cltd
pop
mov
push
push
add
dec
sbb
add
fsubr
mov
sub
mov
rolb
push
adc
sub
int
xchg
ss
add
popf
xor
fbstp
xor
imul
xor
ds
pop
add
adc
fsubrp
je
add
push
push
lods
push
sbb
push
push
mov
loop
jo
mov
xchg
xchg
pushf
push
inc
clc
lea
sub
push
outsl
sbb
inc
push
movsb
es
xor
inc
sub
mov
dec
pop
sbb
sbb
lock
mov
adc
scas
and
icebp
fbstp
lea
pop
pop
add
inc
mov
lock
adc
and
inc
sub
adc
andb
mov
int
push
in
add
mov
add
pop
popf
xchg
inc
bound
cmc
dec
jnp
sbb
enter
aad
xor
insb
das
adc
rolb
mov
in
movsb
pop
and
push
call
and
or
enter
lret
aas
push
popa
add
cmpsl
and
lods
add
leave
push
int3
mov
or
pop
inc
fs
cmp
adc
ds
push
pop
push
xor
fwait
sbb
les
add
jae
fcmovnu
test
xor
dec
mov
cmp
ret
cmp
inc
cmp
aas
dec
mov
push
mov
dec
xor
add
or
cwtl
mov
pop
pop
cltd
insl
shl
adc
sub
and
push
sbb
and
push
stc
sahf
push
es
and
push
sub
inc
inc
inc
push
notl
add
and
iret
xchg
xchg
and
fmuls
je
sti
insl
dec
sub
xchg
loop
les
fistpll
hlt
jmp
jns
mov
add
mov
cmpsl
mov
mull
cld
pop
xor
andb
lcall
and
sbb
cmpsb
ret
hlt
and
push
pop
inc
movsb
lret
outsb
mov
mov
inc
lcall
scas
lahf
xlat
adc
or
insb
in
adc
mov
sbb
mov
or
xor
xor
push
outsb
xorb
push
push
sarb
lahf
mov
mov
xor
pop
cmpsl
mov
or
mov
mov
mov
push
sbb
xor
imul
or
scas
mov
xlat
fldenv
cli
push
pop
adc
dec
aam
mov
push
push
pop
ss
imul
adc
sahf
out
or
or
cltd
fwait
inc
and
ja
fs
cltd
push
arpl
arpl
jnp
push
push
or
pusha
and
gs
dec
nop
add
dec
in
dec
adc
sbb
shlb
jb
sbb
dec
js
xchg
sbb
out
add
lea
lcall
inc
lods
ret
or
push
xchg
pop
and
loope
add
mov
subl
enter
sbb
inc
inc
out
inc
sub
xchg
lret
movsb
es
data16
sbbb
inc
add
sbb
dec
sbb
imul
dec
int3
push
fs
mov
add
and
out
shr
xchg
sbb
sbb
sub
mov
xlat
mov
push
mov
push
adc
add
mov
or
adc
mov
dec
cwtl
sbb
test
sub
push
jl
sarl
mov
pop
imul
outsl
in
push
add
mov
add
int
mov
pop
push
push
mov
insl
ret
cmp
enter
pop
lret
insb
cmp
cld
aad
cmp
inc
jne
adc
adc
push
clc
test
push
stos
outsl
add
mov
or
xor
jle
pop
inc
sub
push
and
cmp
pushf
or
andl
dec
push
mov
mov
mov
call
jle
das
and
add
pusha
sub
mov
iret
rorl
icebp
dec
dec
push
cmp
ja
imul
lods
mov
dec
inc
scas
in
push
dec
mov
add
sbb
inc
push
cs
pop
sarl
mov
aam
les
test
lods
mov
sub
cmc
test
xor
scas
nop
pop
dec
fildl
je
mov
sahf
icebp
push
dec
or
jnp
les
pushf
pop
rorl
loope
cs
or
adc
or
cmp
sub
push
loopne
mov
push
pop
sbb
xchg
in
dec
movsb
push
mov
mov
mov
and
pop
pop
jecxz
sbb
rcll
and
add
adc
push
push
cmpsl
add
shlb
rorb
and
enter
mov
shlb
add
sbb
mov
jbe
push
add
xor
xor
js
hlt
add
push
je
mov
mov
lods
mov
or
mov
mov
pop
daa
inc
imul
jb
mov
mov
pop
daa
mov
or
lret
pop
pusha
fistps
add
sbb
js
jmp
leave
and
ret
dec
and
mov
cmp
sbb
xlat
imul
popa
fnsave
or
data16
stos
out
add
add
inc
addr16
sbbb
mov
and
mov
xchg
or
add
sbb
mov
sahf
loopne
test
fcmovb
xorl
pop
add
cs
pop
inc
or
adc
movsl
aam
mull
dec
sub
ret
xchg
push
rorl
lea
je
es
mov
push
mov
test
push
test
jns
xor
mov
and
add
jle
xchg
icebp
push
ja
sti
adc
pop
sub
push
mov
cwtl
ret
pop
and
adc
or
cmp
aaa
mov
cli
incb
je
add
sbb
sub
pop
cmp
pop
fstpl
push
jne
jg
gs
inc
cld
push
and
cmpl
das
ret
adc
cmpb
push
or
sbb
add
pop
and
loope
scas
add
test
fadds
cltd
rorb
loope
inc
in
xor
dec
inc
push
dec
insb
mov
add
adc
scas
add
movsl
fwait
push
dec
jp
adc
negl
push
cmp
test
dec
sub
xchg
mov
les
pop
push
adc
mov
xchg
lods
xchg
in
mov
idivl
or
inc
iret
dec
mov
test
adc
push
lods
jmp
fdivrs
cmp
idiv
lods
orl
test
xor
push
popa
dec
pop
sbb
scas
and
mov
or
xor
xor
sbb
jnp
pop
das
imul
jb
jge
cmpsb
mov
mov
dec
mov
insb
cmc
xor
xchg
jle
test
stc
lock
cmp
xchg
jp
xor
lock
popa
mov
dec
sub
pop
jge
fisttpll
out
daa
scas
mov
add
and
sub
push
popl
jle
fmuls
stc
fs
fstpl
sbbl
fsts
adc
out
pop
mov
addr16
jmp
inc
mov
ret
mov
mov
sub
adc
cmp
icebp
jle
sub
adcl
or
cmc
jo
xorb
adc
imul
repnz
inc
inc
jecxz
jne
mov
push
lea
push
arpl
cwtl
jbe
mov
ds
dec
adc
sub
call
xor
ss
xchg
mov
xor
push
mov
movsl
mov
inc
sahf
jle
cmp
jne
push
daa
adc
adcb
inc
sbb
and
inc
mov
loopne
pop
mov
insl
push
adc
or
imul
outsb
dec
dec
add
nop
and
repnz
test
inc
inc
fbstp
mov
xchg
push
movb
adc
xor
push
dec
sub
enter
dec
add
stos
cmp
mov
and
jne
push
jne
add
jo
jmp
xor
cs
cmp
roll
sub
add
add
adc
push
adc
sbbb
pmaxub
rolb
xor
cmp
lea
mov
add
in
push
cmp
bound
jne
test
pop
sub
lods
aad
mov
dec
jnp
je
mov
sbb
fstpt
add
mov
jmp
cmpb
or
rclb
mov
cmp
movsb
jb
icebp
stos
dec
add
mov
dec
add
and
loop
jo
andl
rolb
pop
mov
mov
data16
mov
or
add
jns
mov
sbb
lahf
inc
ret
cmp
sub
and
push
stos
dec
pop
add
pushl
sahf
enter
xchg
xchg
add
mov
into
nop
rolb
out
mov
or
sub
sbb
lahf
push
adc
jne
push
scas
lret
and
push
inc
dec
cwtl
inc
aaa
mov
outsb
add
mov
mov
sbb
inc
push
lea
sti
xorb
fimuls
out
jns
inc
pop
xchg
lds
add
nop
outsb
sti
adc
xor
das
jle
add
add
mov
xor
xchg
dec
scas
mov
je
xchg
push
pushf
mov
dec
xor
xor
mov
xor
movsl
mov
inc
inc
add
push
adc
rcrl
adc
mov
ret
add
jg
inc
ficompl
jg
jl
cwtl
js
rcr
addb
push
call
cmp
jo
push
mov
xor
stos
mov
add
xor
mov
mov
loope
leave
loopne
push
insl
push
xor
adc
jmp
repnz
dec
adc
repz
adc
inc
orb
je
xlat
xor
xchg
mov
lret
push
sahf
sbb
push
add
rorb
in
fwait
imul
rclb
and
je
dec
cmp
inc
int
adc
and
and
sbbl
jecxz
xor
ja
push
sub
repz
sub
add
lea
dec
and
addr16
ljmp
adc
sub
ret
add
cmp
pop
data16
cmp
or
lret
andl
and
dec
dec
mov
push
add
xor
push
mov
shrl
dec
dec
pop
jmp
push
dec
dec
lds
or
leave
push
cmovle
jo,pt
aas
or
dec
pop
xchg
xor
or
mov
cmp
imul
ret
push
loope
jge
icebp
in
sti
cltd
adc
jmp
ds
aad
sbb
dec
cmpl
mov
in
sbb
mov
cmp
dec
idivl
or
xor
jl
adc
dec
or
adc
sub
cmp
hlt
mov
int
inc
dec
and
nop
add
outsb
xchg
dec
dec
mov
jle
dec
adc
jecxz
inc
add
sarl
jns
cs
mov
mov
mov
pop
xchg
xchg
push
add
cmp
into
pop
add
imul
add
dec
inc
or
and
cmp
add
les
add
in
les
lock
pop
and
add
add
sbb
adc
mov
push
adc
cs
xor
mov
dec
or
call
sbb
adc
push
repnz
mov
or
xchg
cmp
or
add
pop
sahf
stos
shrl
push
push
adc
push
cs
cmp
xchg
imul
pop
adc
mov
rclb
arpl
mov
cmp
jge
push
push
addr16
xlat
fidivs
adc
cmc
or
xor
dec
push
pop
adc
shlb
jecxz
xchg
dec
loope
jnp
push
dec
leave
fiaddl
dec
shr
movsl
mov
andb
stos
enter
jb
outsl
inc
push
sbb
sub
pop
dec
jo
cli
and
cmp
shr
clc
pusha
ret
loope
aad
mov
push
adc
in
sbb
or
push
add
and
xlat
push
sub
and
inc
cmc
cmp
cmp
push
cmp
mov
inc
add
das
jmp
push
add
lea
push
push
add
pop
stos
pop
pop
xchg
aaa
or
cmp
in
idivl
sbb
stc
loop
inc
mov
in
push
decl
add
dec
mov
inc
jmp
jmp
aad
or
aas
data16
lea
arpl
call
mov
aad
add
fucom
add
xchg
sub
mov
mov
mov
ja
pop
pop
sarb
or
xchg
adc
inc
test
lods
fwait
push
adc
and
aad
and
xchg
out
daa
daa
adc
lret
dec
mov
aad
dec
inc
add
in
pop
or
mov
adc
jne
inc
es
cmp
pop
sub
aas
push
in
je
incb
adc
dec
push
daa
inc
inc
rep
xchg
and
jne
add
arpl
inc
push
add
jae
mov
inc
add
imul
js
dec
rorb
ljmp
or
pop
jno
arpl
out
data16
dec
ret
cmp
mov
or
jbe
mov
or
push
xchg
jg
inc
adc
cmp
jb
fld
add
inc
mov
gs
add
sub
pop
mov
lret
scas
dec
pop
shrb
xor
loopne,pn
jecxz
xor
xchg
push
sbb
mov
adcb
jo
sub
jbe
cmp
xor
jb
in
sub
outsb
repz
int3
aad
adc
out
out
shl
aas
cmp
cs
insl
mov
inc
cmc
cs
xor
orb
and
mov
and
movsl
push
jbe
push
xlat
and
sub
jo,pt
in
xor
stos
lea
popf
movsl
xchg
sbb
je
xor
movb
ljmp
push
das
sbb
lock
add
xor
or
js
add
repnz
and
ss
add
mov
fs
xlat
rcl
aad
rcr
sbb
mull
inc
adc
insb
fcoml
aam
lods
or
rcrb
cmp
sub
sbb
dec
sbb
push
push
das
sbb
aad
push
push
lret
jno
hlt
mov
cmpsl
ret
inc
xchg
adc
jecxz
les
cmp
lret
mov
lock
xchg
testl
inc
jp
xchg
push
sub
or
insb
mov
ds
ret
in
cmp
iret
and
sarb
or
mov
dec
xchg
adc
jno
inc
add
mov
test
lock
push
push
mov
sub
push
in
xchg
or
cmp
loopne
or
jae
mov
push
stc
push
mov
push
nop
mov
mov
push
gs
and
leave
sub
xor
pusha
pop
insb
fisttpll
adc
inc
rclb
testb
lock
push
mov
or
cmc
xchg
or
pusha
push
push
cmpb
shlb
mov
in
xor
and
or
push
mov
dec
inc
call
adc
or
push
mov
nop
inc
dec
push
push
dec
pop
lea
jne
or
cmp
sar
mov
mov
je
fsubrp
mov
and
push
lahf
sub
xlat
mov
adc
push
cmpb
sbb
push
cmp
add
adcl
cmp
fistpll
sbb
out
or
add
jae
rorb
loope
sbb
add
xor
or
rol
test
xor
and
mov
xor
push
sub
inc
xor
pop
js
test
addr16
cmp
push
xor
or
aas
or
push
inc
sub
push
fidivrl
push
xor
push
jae
shlb
mov
push
push
shll
sbb
sub
cltd
popf
mov
add
xor
int
scas
add
jo
arpl
aas
or
cmpb
adc
inc
mov
adcl
or
xorb
adc
mov
imul
sub
mov
jo
xor
mov
inc
loopne
filds
nop
push
jl
jb
adc
scas
je
xor
insb
fwait
cmp
imul
fwait
int
mov
sarb
xchg
shrl
mov
or
cmp
sbb
xor
inc
or
sbbb
jno
mov
jno
test
push
xchg
lea
adc
pushf
data16
jne
mov
jle
jne
sbb
int
test
sub
mov
xchg
sub
adc
or
xchg
popa
cmp
cmpsb
fbstp
ljmp
and
sbb
cs
repnz
cmp
in
mov
pop
mov
js
push
aam
add
adc
and
gs
dec
int
orb
inc
pop
cs
mov
adc
xchg
mov
daa
adc
les
jo
dec
leave
stos
cli
pop
ss
sub
push
imul
daa
in
push
loopne
outsb
add
push
mov
mov
push
in
ret
test
shlb
mov
sub
test
or
push
sub
mov
ds
push
push
negl
pop
movb
dec
es
cwtl
pop
sub
out
mov
dec
movl
cmp
in
cwtl
gs
addr16
push
push
push
mov
jns
mov
push
mov
imul
xchg
sbb
mov
jl
or
sub
xchg
jno
xchg
imul
rolb
xor
inc
adc
clc
int
sbb
test
or
cmp
jo
pop
inc
push
dec
add
push
shll
mov
pop
adc
fdivrs
pusha
cwtl
sbb
jmp
jmp
ret
dec
call
call
popa
sbb
es
add
mov
adc
pushf
outsl
or
adc
das
das
adc
mov
sbb
cmp
hlt
sub
push
scas
adc
sub
aad
mov
popl
jno
pop
push
adc
ljmp
pusha
cltd
in
mov
daa
push
in
in
stos
cmp
push
movsb
popa
fsts
fidivrs
push
pop
test
xchg
addl
scas
sub
in
xorb
sti
inc
cmp
sbb
cmp
rolb
push
jp
incb
xor
andl
jle
mov
and
sub
push
jl
sub
mov
adc
and
orl
and
das
test
aam
push
jge
fadds
or
xor
subb
jp
pop
push
or
dec
ficoml
int3
inc
aam
mov
ret
dec
add
inc
sbb
orl
aaa
adc
jecxz
jbe
lret
dec
xor
or
jecxz
outsb
mov
dec
mov
mov
add
mov
push
push
sbb
push
cmp
std
inc
jecxz
xor
std
clc
xor
jecxz
out
and
icebp
mov
push
fs
adc
call
ljmp
inc
jg
mov
mov
in
push
fmuls
push
push
xor
in
bnd
dec
mov
or
jb
mov
inc
shrb
fmuls
inc
xchg
rorb
cs
fisubrl
add
xchg
mov
stos
adc
or
mov
call
sub
lods
or
cmp
mov
imul
adc
and
xchg
xchg
push
and
push
lret
fcoml
xor
loop
jnp
pop
jl
and
add
pop
dec
cwtl
fs
xor
push
pop
pop
daa
add
push
push
xor
lahf
sub
fldl
push
mov
cwtl
rcrl
adc
push
in
test
xchg
ljmp
pop
jp
push
sub
push
cmpl
in
inc
ljmp
iret
or
shl
pop
lods
outsb
lock
push
rolb
bound
push
xor
sbb
inc
jg
nopl
jge
pusha
mov
fisttps
inc
xor
gs
add
jl
xor
rsm
insb
lcall
jno
xchg
es
je
cmp
sarb
nop
daa
jo
stos
jae
jb
jne
std
adc
popa
and
sbb
dec
sub
xlat
pusha
lock
mov
in
lock
sub
xor
out
mov
push
stc
mov
mov
movsb
pop
dec
jl
dec
ret
out
push
inc
mov
arpl
jns
jecxz
sti
inc
cmp
loopw
dec
pusha
fstps
clc
push
pop
add
mov
pop
jecxz
clc
jp
add
push
inc
cmp
sub
push
jo
jne
dec
or
jge
adc
mov
shlb
mov
je
cmp
dec
inc
add
jge
nop
inc
and
xchg
addl
add
and
mov
xchg
xchg
jnp
ret
cmp
inc
pop
das
dec
dec
xchg
call
insb
into
jmp
inc
jne
movsl
and
xchg
xchg
mov
xor
rolb
mov
loop
imul
hlt
mov
pop
inc
pushl
movsb
movsb
xchg
lret
push
pop
add
bound
paddd
inc
std
xchg
test
pop
or
mov
inc
insb
xchg
jge
xor
std
or
xlat
jge
mov
xor
out
mov
arpl
shrb
inc
cmp
leave
enter
lods
or
ds
mov
push
push
or
pop
add
and
cmp
jne
xor
cld
xchg
fisubrs
push
clc
shr
inc
fisttpll
sub
adc
pop
test
insb
loopne
sbb
pop
daa
lock
inc
lret
add
push
or
mov
sbb
imul
adc
jns
fstpl
and
xchg
xor
add
mov
mov
sbb
add
out
and
aaa
jo
clc
sub
mov
mov
mov
rorb
ret
jo
pop
pop
or
xor
and
negl
out
dec
add
je
ret
dec
cmp
out
push
or
nop
mov
icebp
nop
sarb
jo
jge
ds
js
inc
inc
js
pop
js
clc
iret
fdivp
jo
jne
inc
jmp
scas
sbb
inc
imul
xor
inc
test
push
add
and
push
add
cli
shlb
bound
add
and
cmpsl
mov
inc
mov
cltd
js
testl
adc
cmpsb
fs
pusha
jg
rclb
push
adc
or
add
cmpsb
sbb
je
push
je
repz
and
pop
dec
cld
mov
test
jmp
mul
sub
sub
ret
jge
pop
out
dec
jle
and
jmp
bound
insb
iret
or
aas
mov
lods
icebp
insl
or
dec
mov
loop
test
and
out
lock
mov
enter
cmp
jl
lea
dec
test
ret
push
jb
sub
xor
and
xchg
ret
call
mov
fs
jp
lods
jmp
dec
and
push
loopne
and
push
mov
call
enter
sbb
adc
xlat
cmp
loopne
lcall
fldz
add
push
sub
mov
fmull
xor
jae
cmp
jne
xor
je
sarb
add
jp
sub
inc
jp
fcompl
adc
iret
outsl
push
dec
shlb
add
cmp
in
jmp
ja
enterw
push
cmpsb
cltd
or
add
ss
add
push
rcl
dec
outsl
pop
bndldx
push
add
cmc
add
push
jae
sub
dec
add
or
add
inc
push
push
lock
pop
mov
inc
leave
cmp
sbb
cmp
or
jnp
movl
xor
lods
loopne
and
and
cmpsl
int
jge
xchg
jmp
xchg
adc
cmp
and
call
push
mov
cmp
jne
or
mov
sbb
outsb
outsl
push
or
xchg
add
addb
jae
add
push
push
and
jmp
sub
mov
ror
cmp
rorl
sbb
sbb
push
fdivs
mov
sbb
pop
push
sbb
jl
pop
das
cmp
movsl
adc
xor
mov
rol
mov
jnp
xor
jb
xchg
insl
pop
pop
mov
mov
popa
cmp
cmp
mov
fwait
cmp
and
cmp
mov
push
xchg
add
dec
fchs
add
add
xchg
loope
out
daa
or
cmp
test
imul
repz
sub
and
out
ret
pop
mov
jbe
sub
addl
jae
inc
jle
push
bnd
or
xchg
xor
and
cmp
cmp
mov
push
lds
push
or
push
and
jb
jo
faddl
xor
add
xor
add
mov
mov
adc
leave
adc
rolb
mov
loop
rolb
cmp
jbe
xorl
adc
sbb
addb
sbb
or
dec
cmp
ss
add
sub
push
push
test
cmp
push
aam
add
mov
push
js
mov
mov
jbe
jmp
dec
and
std
or
xorl
jl
fnstsw
push
mov
js
push
mov
pusha
stos
pop
push
into
adc
add
cmp
add
pop
jl
mov
cmpb
or
out
imul
adc
inc
loope
xchg
push
mov
jl
mov
push
sub
addr16
dec
aam
test
inc
jne
movsb
jb
jmp
pop
arpl
jecxz
inc
xor
jnp
add
repz
inc
sbb
inc
imul
scas
loopne
jl
push
cmpb
jp
loopne
iret
iret
and
and
push
cmpsl
sbb
cmp
jbe
or
out
cs
add
inc
sub
and
and
inc
or
and
jl
and
add
mov
test
call
push
es
add
mov
cmp
jle
shld
push
dec
vpcmpeqw
add
or
lcall
add
pop
lds
dec
in
shll
rol
adc
mov
xor
mov
adc
daa
mov
or
sbb
ret
jp
xor
mov
rcrl
int
jne
sbb
sub
or
insb
pusha
sub
cmp
je
sbb
or
test
test
lret
and
out
aad
inc
xchg
mov
loop
cli
mov
rorb
or
sub
ss
cmp
adc
out
sti
or
push
pop
sbb
pop
adc
pusha
and
insl
fdivr
xor
int
or
fistl
jb
aam
inc
sarb
mov
cltd
jns
mov
loopne
cmp
roll
cltd
pop
mov
cmp
sahf
push
inc
push
cltd
cmp
outsl
jns
jno
jge
lods
add
add
cli
mov
mov
mov
push
lea
add
dec
add
out
push
inc
cld
shrb
lea
push
push
add
push
push
fistl
pop
aam
and
fdivr
fs
cli
negb
add
push
loopne
dec
enter
mov
in
dec
iret
sti
imull
adc
iret
sub
and
or
inc
push
sbb
sub
and
das
jle
mov
or
sbb
and
and
adc
dec
dec
push
jp
loop
subb
enter
inc
packssdw
call
push
test
cmp
es
add
sbb
rclb
or
ja
ret
pop
dec
add
adc
push
add
leave
add
xchg
idivl
sar
clc
lods
mov
or
xor
dec
jno
mov
inc
or
mov
pop
in
add
fwait
aad
xor
imul
cmp
adc
add
push
xchg
lcall
push
push
push
popa
inc
lock
dec
adc
dec
inc
inc
repnz
cmp
pop
orb
dec
pop
add
or
aad
inc
dec
adc
ss
ret
or
popf
mov
inc
adc
sbb
add
dec
rclb
ret
push
je
add
int
test
xchg
cmc
cmp
xchg
cmp
out
mov
sub
sub
fbld
insl
andps
repnz
add
call
jns
test
mov
dec
mov
ljmp
cmpsl
cli
das
inc
adc
jbe
pop
test
inc
orl
std
sub
testl
lcall
stc
or
test
push
xchg
push
add
add
add
add
add
add
pop
dec
enter
jno
inc
and
xor
ljmp
rol
mov
xlat
aad
push
jmp
cmp
jae
mov
or
add
lea
subb
dec
pop
dec
dec
lahf
loope
mov
push
mov
adc
jbe
or
mov
subl
outsb
lods
ja
and
sub
test
test
jnp
cmp
jne
or
push
push
nop
xor
fstl
or
cvttps2pi
push
push
adc
and
call
cmp
pushf
jnp
mov
jge
jmp
push
into
add
adc
sti
into
sub
cmp
mov
xchg
mov
addl
sub
xchg
add
mov
sub
dec
mov
cli
and
sbb
push
mov
sarl
rorl
int
lock
lret
testl
sahf
shll
push
cmpb
fdivrs
divl
inc
test
lock
sbb
test
dec
inc
xor
mov
cmp
es
mov
adc
pop
cmp
test
push
mov
xchg
xchg
out
es
add
pop
pop
insb
adc
xchg
lock
push
cmp
test
pusha
mov
mov
inc
das
inc
mov
lret
cmpsl
dec
pop
mov
or
out
lea
cwtl
pop
push
sub
jge
sub
loop
faddp
popa
cwtl
sbb
pop
adc
popa
or
jnp
dec
pusha
aaa
jbe
add
mov
mov
sbb
adc
add
pop
mov
ds
mov
flds
sub
loop
xchg
sbb
and
movsl
lock
imulb
out
add
mov
insb
add
push
adc
decl
mov
cmp
je
cmp
je
cmp
je
and
repnz
pop
adc
xor
cmc
hlt
ja
ds
aaa
push
js
dec
or
aaa
pop
mov
push
orb
out
clc
bound
mov
pop
push
fildl
ja
inc
lcall
lock
shlb
adc
lock
cmp
xchg
test
ret
jg
sub
ja
mov
jl
mov
or
add
mov
sub
movsb
mov
les
rcr
sub
movswl
inc
jne
jbe
jb
lret
clc
mov
popf
icebp
adc
loopne
cwtl
inc
cmpl
je
mov
inc
push
mov
mov
and
mov
sbb
addb
and
inc
orb
sub
sbbb
std
and
test
test
or
les
add
mov
xorl
popf
xor
sub
push
inc
stos
comiss
xchg
int
scas
inc
imul
gs
and
push
outsl
in
adc
add
cmc
push
mov
jo
add
pusha
mov
mov
aad
fldenv
push
sti
adc
mov
add
adc
xchg
shl
dec
xor
mov
adc
xor
xchg
lahf
mov
movsb
mov
sbb
rcll
cmpsb
xchg
test
or
loopne
icebp
pusha
sbb
movsl
mov
aas
arpl
mov
add
cmp
ret
or
mov
inc
push
ret
adc
jbe
mov
push
lds
jb
test
push
rorb
cli
lods
aam
jne
ss
loope
or
aas
push
dec
dec
rolb
sbb
push
sub
inc
xor
or
adc
xor
dec
adc
push
adcl
jl
inc
xchg
fwait
call
inc
aad
jl
nop
sub
add
xchg
sub
xchg
add
pop
dec
pop
sub
adc
and
pop
dec
sub
or
xor
mov
subb
mov
inc
sbb
lret
not
adc
jmp
lods
mov
push
pop
pop
and
fsubs
mov
mov
fucomi
push
cld
push
in
adc
pusha
dec
xchg
mov
adc
adc
lds
fists
push
gs
js
test
das
xor
cld
or
pop
fists
push
stos
or
dec
or
pop
add
and
nop
ja
ret
popa
cwtl
lcall
dec
repz
out
inc
push
jb
scas
xor
call
push
lret
add
add
js
cmpsl
and
jo
lahf
movsl
sbb
or
fwait
inc
jns
nop
rolb
adc
pop
aaa
addl
xor
fwait
and
or
cmp
pop
cmp
mov
incb
je
cmp
je
jne
mov
mov
inc
cmp
lcall
mov
dec
sub
jp
testl
xchg
pop
mov
sbb
sbb
mov
subb
add
and
or
addl
mov
pushf
and
jo
loopne
cmp
adc
sahf
xor
adc
jno
and
pop
pop
mov
jnp
or
mov
in
or
xchg
jl
cmpsl
adc
push
loopne
lret
int
lea
mov
push
in
mov
in
jle
jle
adc
mov
mov
fisttpll
and
push
sbb
icebp
or
lock
adc
aam
shl
pop
lret
pop
jns
inc
cmp
std
mov
in
dec
divl
test
xchg
js
test
popa
jmp
pop
gs
stos
push
test
shrb
push
dec
dec
inc
sahf
pop
in
push
dec
popa
add
mov
mov
xchg
sbb
enter
dec
add
jg
ret
bound
aaa
pop
loopne
nop
push
and
mov
in
mov
js
inc
cmp
cmp
xor
neg
inc
inc
dec
loop
imul
fs
lock
inc
jo
jmp
and
lcall
jns
mov
push
and
cwtl
aam
mov
ret
andl
jl
jge
xor
daa
ret
adc
xor
xchg
leave
pop
pop
xor
mov
push
add
mov
loop
lea
test
movsl
pop
pushf
xchg
adc
addl
or
mov
fdivs
sub
shll
inc
shlb
outsb
and
jo
pop
or
add
in
mov
dec
pop
pop
fidivl
adc
mov
inc
add
jle
dec
jne
sub
pop
data16
xchg
orb
xor
inc
pushf
shlb
add
and
lahf
add
sbb
mov
movsl
lea
add
test
es
mov
mov
loopne
sbb
fdivs
shll
push
add
dec
insb
jne
xorl
add
clc
inc
ljmp
add
xor
add
push
insb
roll
jecxz
andl
test
loop
add
cltd
and
out
cmp
adc
addr16
xchg
jmp
or
dec
cmpsb
xor
test
sbb
outsb
adc
add
into
jmp
imul
dec
mov
xchg
mov
mov
pop
xchg
adc
js
adc
push
push
push
loopne
adc
fildl
shll
fadd
test
mov
mov
test
inc
and
xor
pop
enter
and
int
inc
je
roll
aad
cli
rorb
icebp
xchg
xor
pushf
sub
xchg
outsb
cli
movsl
push
and
loope
lock
xor
pusha
push
or
movsl
loopne
shlb
push
aad
subl
inc
les
sub
sub
scas
and
inc
movl
adc
pop
call
test
and
xchg
xchg
mov
je
ret
clc
test
jmp
sbb
or
dec
push
xor
add
mov
ja
bound
cmp
or
sbb
int3
xor
mov
sbb
rorb
popf
and
adcl
dec
orb
sub
jl
cld
sbb
xor
mov
sahf
pop
nop
push
add
push
cmpsb
jns
out
mov
dec
xor
mov
into
xchg
and
dec
test
add
roll
ret
add
push
xchg
or
push
push
adc
or
mov
mov
lcall
cmpb
push
ljmp
push
adc
adc
mov
cmp
or
or
add
push
or
ret
insb
mov
insb
jg
add
orl
add
adc
cmp
mov
mov
cmpsl
enter
lock
std
out
dec
hlt
aas
adc
pop
add
mov
test
idiv
push
add
scas
mov
push
test
jecxz
mov
jbe
aad
or
lcall
addr16
push
xchg
pushf
push
xchg
adcb
xor
add
add
js
sub
test
jns
mov
push
ret
sub
shll
jmp
icebp
push
andb
into
ds
popf
adc
sbb
sbb
rolb
add
fistpl
adc
lcall
orl
scas
ljmp
sub
leave
in
int3
adcl
fs
mov
cmp
inc
mov
and
jmp
sub
inc
js
in
jg
push
xchg
popa
sbb
dec
mov
jmp
test
aas
movsb
cvtpi2ps
sub
xor
dec
mov
add
orb
inc
les
ret
xor
les
adc
add
je
sbb
shll
pop
jp
fcomps
insb
dec
adc
mov
cmp
mov
or
xchg
testb
mov
dec
pushf
ds
lock
test
fistl
fidivrs
push
adcb
jne
push
mov
jle
add
in
push
stc
fmull
mov
push
cmpsl
xor
dec
test
cmp
ret
mov
push
dec
push
mov
inc
dec
mov
repz
ret
sar
scas
in
cmpsb
xor
cmp
dec
dec
daa
xor
test
mov
mov
cwtl
add
push
lock
clc
fldenv
dec
repz
mov
or
inc
cwtl
xchg
adc
and
mov
mov
hlt
xor
mov
loope
pop
jmp
rcll
rclb
add
fstpl
dec
xchg
push
aaa
xchg
aam
or
jnp
sti
sub
cs
sub
js
add
or
add
add
or
xor
xchg
push
adc
cmp
adc
test
int
push
mov
ds
jo
jo
pop
lea
sbb
add
rol
popf
dec
insb
fimull
sub
jne
pop
inc
iret
add
sub
roll
mov
and
cli
push
inc
mov
and
sbb
aas
lods
ds
add
imul
add
lock
push
std
jbe
cmc
xor
push
sbb
add
push
mov
sub
mov
shrb
mov
call
in
popa
adcb
cli
jnp
inc
jmp
test
mov
lock
push
test
ret
jecxz
add
add
fs
adc
in
or
pop
movsb
jns
es
inc
xor
mov
xchg
or
mov
jae
and
mov
inc
jo
fs
add
sub
repnz
add
mov
and
adc
and
sbb
jg
add
lahf
popa
or
lret
repnz
pop
jb
cmp
mov
add
pop
push
adc
and
pop
scas
cmp
inc
and
ret
adc
dec
sahf
xchg
and
inc
gs
add
push
movsb
xor
test
push
or
rol
inc
push
dec
cmp
mov
test
jle
dec
cmpb
movb
jmp
add
pop
nop
jb
dec
adc
pop
rcrb
push
and
adc
jb
loop
adc
xor
daa
lea
jno
adc
lea
inc
js
cmp
adc
sbb
mov
dec
lret
fnsave
push
jl
lret
and
add
les
dec
and
xor
mov
pusha
scas
adc
cmpsb
mov
push
sbb
jns
lret
adcb
fiaddl
adc
in
rcrb
sbb
push
ret
lcall
cmpb
or
pop
sbb
xor
mov
cmp
dec
adc
movsb
pop
push
cmp
test
test
stc
sbb
adc
add
inc
insl
leave
sbb
and
add
call
push
dec
push
jo
jo
es
push
ret
dec
mov
in
mov
movsb
inc
lods
rcrb
cmc
mov
imul
mov
add
shrb
add
dec
in
stos
ss
mov
inc
mov
or
mov
xchg
scas
fadds
stc
test
jg
push
inc
mov
inc
push
mov
movl
dec
xlat
mov
dec
or
pop
jbe
inc
xchg
dec
pop
add
add
push
dec
inc
loopne
fcoml
les
mov
xchg
jo
loopew
adc
lahf
add
cmp
fists
dec
mov
xchg
setb
je
and
mov
and
pusha
loope
rcrb
or
jmp
push
dec
shrl
cmp
and
cmc
add
or
and
mov
and
dec
mov
jg
cld
sub
cs
xchg
inc
insb
out
mov
data16
inc
addr16
pusha
int3
xchg
push
dec
or
loope
or
xor
xor
dec
ret
sbb
out
inc
je
push
cmp
jmp
sbb
orl
pop
xchg
jne
xor
add
notl
les
or
xchg
add
xchg
pusha
cld
mov
mov
outsb
stos
push
mov
add
xorl
cmp
mov
adc
mov
mov
jo
hlt
pop
inc
stos
add
lret
push
cs
fcmovbe
test
out
lcall
xor
adc
les
pop
cmc
dec
sbb
mull
test
fimuls
outsb
pop
subb
xchg
push
or
jns
dec
add
testb
mov
jge
push
add
push
lea
mov
insb
lahf
xchg
dec
test
push
mov
sub
repz
shll
push
outsb
movsl
push
aam
lahf
cmpsl
jge
push
jg
movsb
push
cltd
xchg
cmpsb
dec
loope
xor
inc
sbb
or
push
or
and
cmp
es
jp
sbb
cmp
sbb
in
les
sub
outsl
dec
js
cmp
push
aaa
or
dec
push
imul
xchg
cmpsb
rclb
or
sbb
pop
sbb
add
push
cmc
pop
fs
jp
and
sbb
xchg
movsl
add
cmpsb
push
push
xchg
push
and
mov
out
cmp
cmpl
pop
push
push
and
mov
pop
jno
in
rol
or
outsl
es
inc
lret
test
inc
push
je
push
shr
inc
xor
roll
add
mov
jle
ret
mov
sbb
dec
test
and
pop
or
and
addr16
and
push
mov
mov
xor
jb
jo
in
cltd
test
sbb
addr16
xchg
push
mov
sbb
sbb
mov
fidivrl
icebp
scas
pop
out
inc
js
shrb
adc
pop
pop
and
sub
or
pop
fwait
or
jmp
or
jmp
lret
or
cmp
and
adc
iret
jmp
cmp
xor
adc
or
imul
mov
call
arpl
mov
call
add
adc
out
ss
movsb
jmp
dec
xor
out
add
xorb
adc
daa
jne
gs
add
loopne
lock
test
jl
test
mov
push
cmp
xor
adc
push
cmpsb
imul
and
popa
xchg
jb
pop
ss
pop
xor
imul
sbb
push
and
push
jmp
jo
repz
pop
push
push
push
cmp
inc
pop
gs
xchg
sbb
xchg
std
enter
mov
adc
and
inc
cltd
test
sbb
movswl
sub
fistpll
insb
xor
push
pop
jne
es
pop
jne
sbb
loope
and
jne
dec
push
mov
dec
pop
nop
jge
push
pop
sar
xchg
add
dec
pop
push
push
out
movsb
dec
mov
jnp
pop
dec
mov
js
push
pop
and
inc
adc
stos
fcoml
xchg
es
loopne
ret
and
jne
cmp
mov
jne
mov
cmp
mov
repz
stos
inc
mov
inc
xor
adc
jp
pop
or
in
or
jge
inc
jo
xor
jbe
test
ja
mov
outsb
xchg
inc
and
mov
sub
cwtl
movsb
out
nop
xchg
sub
stc
adc
add
adc
jbe
push
or
adc
mov
adc
lods
jo
clc
jb
cltd
cld
dec
sbb
xor
xchg
xchg
or
adc
push
pusha
mov
movsl
ss
push
push
lods
sbb
lds
xlat
ss
or
ja
cltd
jp
out
lods
dec
push
xor
stos
push
dec
push
cmpsl
ljmp
dec
fildl
iret
push
sbb
testb
xchg
test
jne
add
movsb
rclb
add
mov
jge
sub
jle
cmp
jp
xor
inc
repnz
inc
inc
push
push
xchg
mov
inc
adc
add
push
cli
test
push
mov
cltd
or
sbb
into
push
fs
mulb
dec
add
or
push
or
scas
or
ds
mov
cwtl
or
mov
push
popf
pop
cmp
push
mov
fstps
adc
push
sub
inc
ss
into
repz
add
pop
aaa
add
loop
adc
pop
orl
cmp
cmp
je
push
dec
xor
dec
cmp
cmp
fidivrs
sub
je
pop
je
or
enter
sar
or
loope
in
mov
push
cmp
popf
pop
fsubs
adc
jnp
xor
outsl
in
das
push
push
daa
inc
or
sub
sub
xchg
test
cmpsb
data16
popa
pop
jmp
pop
adc
jmp
mov
bswap
dec
rorb
ffree
add
adc
xor
outsb
testl
add
sbb
movb
adc
nop
pop
push
pop
sub
movsb
mov
ret
or
jg
movsl
mov
mov
loop
cmp
inc
inc
push
mov
pusha
and
mov
out
clc
int3
jne
jecxz
test
lea
jl
test
les
jmp
mov
mov
hlt
mov
or
jnp
test
cli
ficomps
xor
movaps
rorl
add
and
pop
ret
shr
add
jnp
sete
ss
mov
pop
mov
jne
inc
dec
mov
int
push
shlb
loope
cmp
je
lcall
sub
loopne
mov
repz
rcr
add
add
jl
push
push
in
jbe
sub
daa
sub
clc
sbb
push
jp
js
andb
in
mov
mov
add
jl
loopne
or
adc
sub
out
mov
movsl
add
cmp
rolb
sbb
ds
mov
fmul
movsl
xchg
mov
nop
push
and
lahf
pop
insb
imul
xorl
push
add
adc
mov
sbb
mov
add
and
or
mov
add
and
jl
ds
mov
sbb
push
jg
or
ret
cmp
push
daa
xor
sbb
xor
fildl
pop
pop
mov
not
jae
arpl
rclb
adc
pop
cwtl
sbb
sti
mov
repnz
inc
jmp
in
cmp
mov
inc
mov
add
pop
mov
add
mov
icebp
adc
and
xchg
hlt
rclb
call
pop
jp
bound
insb
bound
add
and
insb
dec
shlb
fiaddl
fisubl
arpl
or
push
inc
adc
push
inc
dec
mov
push
sbb
xchg
mov
and
pusha
ret
jb
or
jno
push
mov
xor
nop
shll
fcomps
stos
int3
dec
dec
cmovae
adc
pusha
sub
aaa
aaa
lahf
sub
add
add
add
or
xor
and
leave
bts
or
dec
pop
mov
out
shrb
and
mov
js
xchg
repz
or
push
sub
xchg
adc
cs
movsl
mov
dec
and
in
fsub
fldl
mov
cmp
adc
in
sbb
fs
jbe
popa
push
pop
or
push
inc
pushf
xor
test
fistps
ljmp
das
shlb
pop
jne
sbb
lea
nop
xchg
out
pop
pop
jne
push
or
stc
mulb
daa
and
adc
sub
sub
adc
add
and
or
ret
cmp
test
jne
les
mov
int
mov
add
push
push
push
addr16
cmpsb
xor
iret
es
sahf
jge
push
or
out
mov
and
andb
int
int3
or
and
mov
cmp
xlat
dec
cmpb
shlb
push
add
test
add
adc
leave
mov
pusha
xor
cwtl
lods
std
mov
hlt
in
lea
push
lcall
xchg
add
sarl
fbld
dec
push
mov
pop
pusha
or
and
lret
cmp
mov
pusha
inc
shll
repz
push
sbb
pop
movsl
dec
movsb
mov
mov
pop
xor
sub
aam
sbb
jnp
push
mov
adc
sbb
mov
push
mov
sbb
push
movlps
and
jge
and
subl
jne
xor
or
jmp
mov
inc
loop
dec
imulb
loop
xor
dec
xchg
popa
pop
adc
adc
xor
ljmp
and
fwait
stos
cmpsb
mov
divl
test
movsl
or
dec
jb
rol
enter
es
fucom
wrmsr
ds
shr
jle
lcall
push
jecxz
lea
out
or
andb
push
and
push
mov
or
push
out
jle
and
stos
push
insb
add
mov
xor
imul
and
add
mov
mov
outsl
cs
mov
pop
imul
pop
outsb
or
enter
add
or
pusha
and
push
push
pop
inc
cmp
pop
push
dec
xor
add
test
push
xchg
dec
js
adc
push
push
or
pop
and
add
in
inc
add
faddl
add
pop
inc
inc
dec
sub
xchg
mov
and
xor
loope
shrb
daa
fidivs
mov
into
pop
lea
stc
cmp
out
or
inc
or
jnp
push
ja
mul
lds
lret
or
push
sarl
outsb
xor
xor
mov
sbb
adc
nop
or
pop
pop
inc
test
dec
std
dec
xchg
sbb
rcll
inc
arpl
add
andl
or
pusha
mov
mov
and
add
test
xor
popa
mov
dec
add
lock
lods
sub
icebp
mov
test
int
loopne
push
dec
xor
push
and
fld
push
xor
clc
inc
pop
ret
std
aaa
jle
add
mov
sbb
inc
dec
dec
dec
and
rcll
mov
dec
mov
xchg
lea
pop
imul
mov
call
cmp
je
xor
mov
lods
dec
push
or
sbbb
je
int3
mov
add
mov
push
call
test
imul
push
stos
jns
insl
add
inc
pop
into
jecxz
out
cwtl
fisubrl
ficompl
fcompl
pop
sbb
jmp
jbe
sbb
sbb
pop
iret
aam
cmp
and
pop
inc
addb
dec
mov
movsl
sub
stos
or
jl
in
das
xchg
xor
or
outsb
xor
jo
adc
aam
cld
lcall
pop
enter
inc
cmp
sub
xor
push
mov
ljmp
movb
mov
pop
pushf
mov
push
add
or
mov
adc
or
imul
rcr
aas
jae
inc
sbb
loope
sub
mov
fsubrl
mov
and
fcomps
sbb
sbb
and
ja
push
and
jle
mov
and
cwtl
out
push
add
stos
pop
test
popf
jns
rolb
aas
loope
cmpsl
sar
shl
es
push
push
dec
cs
mov
pop
andb
je
mov
insl
mov
push
push
aad
pop
mov
cmp
insl
shlb
cmp
xchg
adc
cmpsl
daa
push
in
mov
add
add
push
cmp
rclb
adc
cmp
mov
subl
add
movsl
inc
dec
adc
stos
inc
and
roll
mov
les
decl
adc
inc
pop
aad
loopne
xor
and
or
push
sbb
add
jae
aas
pop
lea
xchg
and
inc
inc
add
lds
sbb
stc
push
add
push
pop
push
adc
nop
mov
push
push
shrb
mov
popa
dec
pusha
testl
add
hlt
inc
gs
popa
cmp
or
pop
jmp
adc
test
and
loopne
jle
sub
sbb
adc
adc
xchg
or
nop
add
rcll
sub
mov
mov
ret
push
inc
sub
add
dec
push
mov
xchg
adc
dec
bound
inc
cs
sahf
pop
push
and
push
jp
lock
xlat
push
data16
loope
je
inc
lcall
and
mov
cmpb
data16
sub
inc
fs
sub
xchg
into
movsb
enter
popf
popa
imul
stos
inc
jmp
jne
nop
push
shll
cwtl
push
pop
jne
cmp
nop
mov
push
and
push
andb
fldcw
xchg
mov
cmpsb
and
mov
and
cmp
jb
xchg
inc
mov
pop
xor
dec
jmp
pop
push
jae
inc
mov
mov
mov
adc
adc
pusha
adc
add
or
add
push
cli
add
sub
xchg
push
clc
inc
dec
pshufw
adc
repz
mov
sub
sub
negb
out
cld
dec
push
mov
xchg
test
adc
lods
push
mov
jl
jle
call
data16
pop
mov
mov
add
js
mov
cpuid
jmp
cmpl
cwtl
push
insl
jo
add
pop
inc
iret
and
lods
xor
xor
and
sub
or
inc
cmp
dec
in
jo
fldenv
jae
pop
push
aas
inc
imul
pushf
add
xchg
pop
mov
fwait
sbb
pop
inc
gs
push
xor
or
mov
and
les
mov
xor
sahf
out
push
and
or
or
insl
inc
pushf
add
mov
aam
loopne
adc
push
jle
jl
fs
or
inc
adc
loopne
push
cmp
and
sbb
mov
or
pop
inc
jbe
rol
push
mov
ss
adc
roll
fldcw
insl
xlat
xchg
xchg
pusha
adc
sub
lahf
sbb
add
sarl
xor
jno
imul
pop
aam
test
xor
sub
xor
pop
ret
pop
mov
lods
ss
inc
xor
inc
lcall
seta
ror
mov
iret
sarl
dec
add
inc
dec
pop
add
mov
xor
adcb
xor
shll
popa
add
and
addb
insb
and
js
mov
or
test
lret
push
imul
mov
jmp
xchg
cltd
jge
test
sahf
into
notl
jne
mov
push
mov
push
push
int
popf
repnz
sbb
pop
imul
sbb
add
jb
add
addl
pop
mov
jbe
adc
sbb
and
cmp
pushf
dec
inc
and
add
push
subb
rcll
rcrb
sub
push
push
arpl
mov
test
sub
mov
adc
sub
pop
sbb
adc
insb
cmp
push
pop
sub
rolb
xchg
mov
sti
arpl
dec
xchg
pop
popa
lock
or
mov
xor
dec
std
stos
repnz
lcall
cld
stos
push
loop
push
xor
cmp
imul
jbe
dec
xor
ds
push
xor
adc
sub
movsl
insb
cs
add
shll
push
push
test
add
inc
hlt
popf
fwait
clc
adc
xchg
push
xor
dec
add
adc
sub
orl
mov
mov
cmp
push
rorb
push
cmp
push
push
and
stos
and
or
rolb
and
sub
inc
pop
xor
lret
cwtl
popf
lret
cmp
jl
popa
and
push
sbb
rcrb
adc
es
fnsave
shlb
fidivl
xor
fisttpll
js
inc
addl
aam
mov
sub
xchg
cmp
mov
xchg
arpl
pop
fistpll
xchg
sub
aam
mov
or
mov
mov
or
clc
insb
dec
dec
add
jg
add
or
hlt
rorl
adc
xchg
sbb
daa
xchg
dec
les
sbb
leave
mov
add
push
jns
push
mov
bound
lahf
or
sbb
xchg
push
mov
imul
mov
sbb
lods
push
inc
je
or
cmp
pop
push
movsb
sub
shll
lock
mov
pop
leave
sbb
push
inc
clc
sub
mov
add
prefetch
xor
or
or
add
rcrb
les
movsb
imul
fcmovnu
mov
push
cmp
in
outsl
js
jge
ficoms
aad
leave
je
jecxz
fistpl
push
cmpb
or
sub
imul
fistl
and
mov
mov
cld
jge
ret
outsb
icebp
loop
inc
mov
adc
faddp
shl
jmp
cmpsl
sbb
adc
jo
shlb
out
adc
or
and
xchg
popf
push
add
dec
sbb
pop
jge
dec
movl
adc
sti
pop
add
cwtl
lret
and
xchg
mov
adc
mov
push
jmp
push
test
mov
cmp
or
fsts
ljmp
adc
mov
or
fsubl
fs
stos
xchg
test
iret
pop
add
jp
je
push
or
mov
shl
pop
xor
push
aam
xchg
add
ret
jne
mov
mov
int
xchg
xor
in
shlb
mov
and
les
pop
jne
adc
push
and
push
je
or
sub
adc
sbb
into
pop
inc
jl
sbb
add
lea
inc
cmp
pop
cld
in
push
lret
shll
loopne
icebp
mov
rol
gs
das
hlt
ss
pushf
push
push
mov
and
pop
mov
mov
cs
mov
dec
or
fwait
push
add
mov
test
dec
popf
test
rcrb
daa
mov
add
and
pop
jo
pop
rorb
adc
jo
cwtl
lods
and
out
push
jae
xchg
jmp
mov
pop
mov
nop
xchg
lcall
lcall
xchg
push
jne
push
xchg
add
call
jl
cmp
nop
adc
dec
es
mov
inc
fs
sahf
adc
push
inc
dec
lcall
and
inc
int
dec
inc
push
stc
pop
jo
push
push
mov
rorb
aad
mov
or
movsl
loope
or
add
mov
incl
adc
push
ror
insl
insl
xor
fdivl
xchg
or
insb
adc
xor
mov
into
ljmp
or
jmp
or
and
rolb
ja
dec
pop
cmp
push
subl
loopne
loope
in
adc
adc
lahf
cld
cmp
lods
add
pop
xchg
sub
jg
repz
jo
mov
jg
mov
dec
sub
les
shr
and
cmpsl
xor
push
xchg
mov
dec
jle
xor
sbb
test
and
popf
mov
pop
shrl
and
add
mov
push
cmp
dec
push
into
inc
mov
inc
in
mov
jg
cmp
push
push
into
jne
add
dec
push
push
xorb
xchg
jb
add
addr16
loope
push
xor
push
scas
and
rolb
jbe
xchg
or
add
xor
xchg
aad
sar
pusha
test
outsl
scas
inc
mov
mov
fbld
jmp
cmp
ja
cmp
mov
roll
cld
stc
add
mov
or
push
mov
add
add
push
shlb
jbe
imul
mov
jge
data16
nop
dec
insl
push
add
xchg
les
int3
dec
xchg
fdivs
les
sbb
imul
out
pusha
lods
gs
jl
jb
or
mov
adcb
jmp
xlat
in
add
repnz
push
mov
inc
jae
push
mov
xchg
lret
cmc
push
out
sbb
push
mov
loopne
mov
inc
xor
sbb
add
xor
pop
iret
ficomps
sbb
das
mov
testb
inc
push
sti
mov
pop
sbb
fisubrl
add
test
out
mov
add
sbb
add
jno
adc
out
sub
push
enter
les
mulb
repz
or
jnp
or
inc
jmp
push
xchg
xchg
loopne
inc
sub
mov
popa
mov
ds
test
and
int
push
pop
and
inc
test
jl
orb
dec
push
shrl
or
jl
xchg
or
stos
xor
mov
cmp
mov
jge
sbb
push
and
adcb
and
sub
add
gs
xorb
sti
add
es
push
dec
sub
pop
mov
mov
or
or
cmp
xor
jo
or
pop
jo
mov
testl
aaa
adc
por
inc
addr16
arpl
aaa
ret
and
add
or
or
gs
push
data16
push
sbb
push
adc
cltd
js
sub
or
mov
je
nopl
fildl
push
push
dec
gs
sbb
push
leave
and
shrl
inc
cmp
add
out
adc
pop
mov
insl
bound
aaa
out
xor
mov
fcmovnb
les
push
bound
mov
out
jno
pop
dec
cmpb
dec
repz
xor
inc
movsl
rcll
loopne
adc
gs
add
jp
gs
sub
out
je
push
nop
fmuls
jp
adc
fcmovnb
lea
insl
loopne
stos
orps
or
mov
int
pop
cmp
dec
add
pushf
dec
xlat
jnp
mov
inc
mov
add
ljmp
and
mov
mov
ret
inc
mov
mov
and
sub
or
mov
push
fstpl
pop
mov
pop
or
pop
pop
add
push
and
vaddsd
test
repnz
in
and
lret
xchg
add
push
or
dec
jp
loop
mov
mov
xor
shlb
sub
nop
cs
jno
int
adc
jno
inc
test
subl
das
ja
push
lret
cmp
cmpb
or
and
mov
sbb
testl
xchg
mov
movsb
or
scas
dec
sub
xchg
stc
mov
jmp
sub
mov
jmp
xor
in
clc
dec
popa
push
icebp
push
lock
cmpsl
subb
fwait
push
or
fcoms
xlat
test
sbb
mov
outsb
xchg
gs
jae
std
push
pop
sbb
jbe
jae
mov
int
or
rorb
ret
mov
je
loopne
xchg
rorl
xchg
or
adc
sub
sub
push
pusha
cmpsl
mov
rcrl
into
sti
jl
or
add
mov
test
mov
pop
out
sub
popa
movsb
test
pop
mov
jnp
add
cli
cmp
lods
xor
sub
push
jne
movsb
xchg
mov
and
xchg
adc
pop
and
rorb
shlb
jp
daa
int3
lea
notb
push
mov
push
push
dec
adc
jno
imul
leave
xor
enter
xchg
mov
adc
xor
dec
insb
sbb
inc
push
rclb
adc
mov
jnp
inc
jmp
pop
mov
or
mov
pop
inc
adc
add
pop
mov
dec
mov
xor
fcoms
jno
adc
arpl
sub
mov
andb
pop
pcmpeqd
or
sahf
jle
and
rorb
pop
shrl
dec
sbb
sub
sbb
xchg
rcll
fwait
sbb
mov
lds
push
pop
mov
push
jbe
mov
test
mov
push
inc
fildl
cmpb
or
or
ret
jne
xor
pop
cmpsl
test
dec
cmp
mov
lahf
xor
mov
push
loop
shlb
test
repnz
add
pop
add
mov
outsl
movsl
or
mov
daa
or
sbb
pusha
sub
dec
sbb
add
jle
lock
sarb
jl
add
xchg
mov
jge
or
mov
loope
push
popf
jle
insb
inc
cmpsl
jmp
xchg
and
sbb
mov
add
sbb
push
pop
pop
lcall
or
movsb
cmp
fwait
jl
cli
jp
pop
fidivl
and
imul
sbb
xchg
xor
add
adc
fldl
jecxz
rorb
cmp
icebp
je
pop
push
push
or
sbb
lock
adc
and
movsb
xor
fs
cmc
cmp
hlt
cmp
lcall
inc
sbb
add
cld
addb
or
sbb
sbb
das
in
jmp
or
sbb
rorb
adc
shrb
dec
sub
inc
sub
faddl
sbb
xor
mov
div
dec
push
sub
pop
and
push
pushf
insl
sbb
pop
sub
xor
movntps
adc
push
add
xor
aad
negb
push
add
gs
add
icebp
faddl
inc
adc
sub
add
pop
and
inc
pop
je
jo
mov
jne
addb
lahf
mov
test
pop
xchg
or
or
and
mov
xchg
inc
imul
push
dec
ret
lock
push
push
mov
adc
xchg
fistpll
sub
pushf
xor
sbb
cmp
add
mov
pop
stos
and
pop
adcb
mov
jbe
adc
or
sbb
add
and
sbb
pop
sub
dec
and
mov
mov
add
shufps
push
lcall
xor
and
mov
push
scas
in
add
adc
and
ss
mov
jecxz
and
inc
and
adc
notb
ja
fcomi
and
add
push
repz
or
push
mov
and
push
iret
sub
sahf
es
sub
inc
sbb
je
mov
je
jae
and
add
adc
pop
scas
cmp
repnz
add
or
push
xor
sti
pop
xlat
push
incl
movsb
inc
xchg
push
inc
test
dec
xor
je
sti
adcl
sbb
mov
mov
jns
in
imul
imul
das
pop
add
stc
jge
je
pop
or
adc
imul
clc
jl
pop
mov
push
push
scas
cmp
ss
insb
arpl
pop
outsb
cmp
jb
in
dec
xor
mov
or
xor
adc
cmp
sub
add
xchg
rcr
mov
repnz
das
call
fsubrs
test
mov
push
je
and
ficomps
daa
jne
les
rcrb
inc
inc
jns
shl
mov
out
subb
jne
shrb
or
mov
loopne
xchg
push
and
jl
ret
mov
xor
aad
and
mov
inc
rorl
addr16
or
sbb
or
ja
dec
or
inc
repz
mov
stos
cmp
mov
sub
repz
sbb
loopne
and
and
adc
mov
push
adc
test
cmpsl
inc
or
or
data16
int3
or
add
adc
mov
push
test
push
push
icebp
add
sub
sbb
pop
std
add
popa
imul
lea
loope
inc
nop
pop
rcll
ret
cmp
or
ret
sub
or
dec
push
cmp
jbe
add
push
int
pop
aaa
mov
jo
or
mov
add
add
cltd
push
add
loop
call
mov
and
or
sbb
lea
or
out
add
and
dec
pop
push
sar
inc
jmp
inc
add
popf
mov
scas
pusha
dec
jmp
sbbb
dec
rcrb
sbb
adc
cmpl
imul
adc
inc
shrb
mov
add
mov
adc
sbb
sub
push
xor
xor
addl
mov
fisubrs
cs
mov
dec
sti
imul
rorb
push
lcall
cmp
sbb
or
jne
inc
sub
dec
or
pop
outsl
call
inc
les
out
test
testl
call
xchg
sarb
pop
mov
pop
pop
mov
dec
daa
mov
fmull
cmc
fcompl
clc
sub
sbb
mov
insb
iret
dec
jo
sbb
and
pop
pusha
mov
repnz
push
imulb
dec
scas
sub
push
nop
mov
xchg
sbb
fistl
mov
mov
pop
jb
fisttpll
xor
push
dec
pop
add
lret
inc
into
push
and
rorl
into
mov
inc
add
mov
jmp
loope
std
lahf
or
mov
dec
add
push
push
imul
cli
movl
add
sub
idivb
push
call
in
enter
jno
add
mov
fwait
sub
push
or
sub
icebp
je
push
pop
cmp
and
cltd
outsb
fs
push
rolb
lret
loope
mov
mov
dec
in
inc
cmp
push
push
test
movsb
xor
sub
inc
sub
fadd
mov
push
iret
roll
push
sub
add
fldenv
and
ljmp
popa
inc
inc
mov
mov
ds
push
xor
hlt
mov
push
jno
test
jle
xor
push
xchg
sub
sbbl
sbb
xchg
sbb
icebp
add
je
sbbl
fidivl
ja
sub
cmp
lahf
sub
sub
pusha
xor
or
lods
addb
xor
inc
movsb
jae
sti
push
xchg
mov
mov
adc
jns
add
add
hlt
movb
adc
movb
sub
aam
cmp
xchg
ss
pushf
imul
jo
inc
call
idivb
push
pop
inc
xchg
sbb
sahf
or
arpl
and
ret
andb
mov
mov
in
fwait
add
loope
lcall
cmp
inc
jne
sub
jns
push
sub
iret
or
gs
dec
adc
pop
shrb
out
nop
rcrl
push
and
inc
or
push
mov
shlb
pop
ret
popf
jns
addb
xchg
jno
nop
add
adc
iret
sbb
ret
test
or
and
adc
add
sbb
sub
xchg
es
loopne
fwait
test
sub
pop
jmp
ficompl
add
add
loope
and
daa
pop
dec
jg
xchg
or
or
xor
rolb
adc
jne
mov
mov
and
adc
mov
les
mov
in
adc
adc
out
mov
fadds
pop
add
jmp
xchg
pop
movsl
push
xchg
adc
jo
push
push
mov
or
push
jne,pt
mov
pop
cmpb
sub
jl
or
sbb
push
or
push
push
sub
mov
mov
out
adc
cmp
dec
pop
pop
jl
stos
jne
push
push
jo
mov
popa
push
add
cmp
and
add
jne
pusha
push
popf
add
inc
imul
push
adc
add
test
pop
mov
jns
out
and
enter
mov
inc
adc
xchg
jmp
std
sbb
xlat
push
mov
xor
and
iret
cld
cmp
mov
dec
adc
cmp
xor
or
xor
js
xor
rcll
test
movsb
push
out
rsqrtps
addr16
movsb
add
rolb
sbb
xchg
lock
dec
loopne
scas
xor
xor
pop
hlt
sbb
inc
stos
add
inc
sbb
or
xchg
mov
add
imul
repz
fmull
cmp
dec
scas
add
pop
or
jecxz
fdivs
add
mov
in
hlt
jo
xor
mov
and
inc
loopne
cmpl
jne
pop
sub
mov
push
mov
mov
dec
sub
lods
or
sub
adc
adc
adcl
sbb
addb
dec
cs
pop
loop
add
xchg
xchg
incl
mov
dec
inc
inc
enter
xor
jge
cmp
shl
cmc
inc
push
sub
push
adc
jns
sbb
adc
lods
pusha
cld
sub
or
adc
lret
insb
mov
dec
or
int
inc
sbb
inc
adc
xor
fbstp
mov
push
xor
xor
sti
enter
jns
dec
sub
sub
push
sub
cs
or
nop
and
pop
xor
lock
orb
in
stos
sbb
nop
insl
cmp
in
adc
and
add
add
mov
and
sub
mov
and
xorb
or
mov
repnz
mov
dec
sbb
adc
cmp
inc
push
sub
xor
or
cld
sarl
movb
and
sbb
xor
adc
in
add
or
jle
lods
int
fsub
mov
xor
ja
xor
mov
add
mov
and
test
ret
push
push
ret
sub
repnz
pop
daa
inc
dec
pop
mov
adc
adc
sub
xor
pop
cmp
xor
loop
cmp
xor
fisttpl
inc
dec
push
dec
lahf
xor
inc
roll
cmpl
and
or
jne
xchg
pop
add
adc
testl
xor
adc
push
aaa
push
jmp
jecxz
lock
mov
push
movb
inc
xchg
add
push
addl
sbb
lea
push
enter
mov
adc
cmp
jb
mov
add
xchg
out
sub
sbb
or
pop
mov
push
lock
lea
mov
insb
xor
and
and
fadd
gs
lods
adc
test
pusha
and
or
or
and
mov
lea
xor
sti
mov
sub
lret
push
pop
adc
je
lea
or
xor
mov
push
mov
add
add
clc
nop
scas
daa
sub
andl
inc
add
dec
xor
mov
adc
sbb
clc
lahf
xchg
xor
sbb
inc
jns
jne
add
loope
and
imul
pop
and
sbb
fmull
arpl
lea
fidivs
cmp
pop
inc
push
sbb
sbb
jb
cmpsl
shrl
pop
and
aam
or
stc
add
rcrl
xchg
rolb
ja
mov
call
push
dec
sub
in
add
imul
mov
and
and
sbb
ret
bound
push
sbb
dec
dec
faddl
call
xchg
cmc
mov
inc
shll
mov
test
sbbb
dec
mov
pop
and
pop
repnz
inc
fs
xor
and
dec
xorb
pop
inc
adc
mov
add
adc
addb
ret
dec
pop
mov
adc
loopne
data16
xchg
jge
movsb
movsb
loope
sub
pusha
imul
or
lds
aaa
lock
mov
cmpsb
fstl
cmp
test
es
xor
dec
xor
aad
int3
mov
or
and
pushf
call
rcrb
insb
push
adc
js
into
mov
inc
aam
cmovnp
lahf
mov
mov
xchg
mov
nop
lret
push
mov
cltd
or
xchg
sbb
xorb
xlat
or
sub
ret
sub
and
pop
and
test
or
jmp
and
adc
or
jae
fs
fdivrl
or
add
in
rcrl
or
pop
push
mov
test
ret
push
pusha
push
fdivs
inc
cmc
lods
mov
cmp
idivl
icebp
ret
fisubs
push
loopne
mov
or
outsl
lahf
addr16
loopne
or
loope
or
jb
leave
xchg
inc
push
dec
mov
mov
inc
push
jo
clc
or
or
pop
imul
out
mov
dec
test
dec
and
mov
inc
mov
bnd
das
test
adc
or
mov
dec
dec
loopnew
es
or
sub
loopne
push
sbb
pop
mov
pop
or
adc
mov
mov
add
sub
push
and
adc
xor
loope
mov
inc
mov
fcoms
adc
mov
cmpsb
xor
lcall
mov
cwtl
or
push
rcll
addr16
arpl
pop
cmp
sub
aas
shr
dec
push
and
adc
sbb
repz
sub
stos
fnstcw
jge
mov
out
push
push
ret
pop
or
fists
push
sub
jnp
xor
pop
mov
cwtl
inc
rclb
dec
add
fidivl
add
pop
rclb
data16
cmpsl
add
dec
cmpb
sbb
mov
pop
push
iret
mov
int
fst
adc
push
jne
push
outsl
imul
lods
cmp
sub
push
cmpsb
call
ret
xchg
sbb
jbe
sbb
outsb
push
xor
pop
jo
adc
push
ror
dec
pop
add
pop
inc
outsb
dec
xchg
jp
das
out
inc
sub
mov
and
push
fists
nop
sub
repnz
repz
mov
or
dec
xchg
lahf
mov
jl
add
sub
add
mov
call
jno
pop
push
push
cmpsb
push
jle
add
push
add
add
add
in
and
push
rol
xor
fildl
or
nop
jo
cmp
loop
xor
aam
sub
mov
test
jnp
aas
mov
jmp
fldl
sub
das
pop
add
js
mov
sbb
add
and
adc
lret
inc
or
popf
xchg
push
xor
sub
stc
add
inc
inc
test
cmc
jmp
sbb
addb
or
subl
cli
insb
jns
lds
push
and
into
aad
push
inc
aad
dec
mov
mov
push
xchg
add
add
ret
dec
xor
xchg
les
fsubl
adc
add
mov
sub
rcr
adc
sbb
adc
jp
decl
stos
adc
add
push
sub
lds
into
cmp
je
test
or
sbb
pop
imul
mov
add
cmp
lea
repz
in
mov
push
int3
inc
or
pop
rorl
and
xor
pop
mov
lods
adc
and
mov
test
sbb
out
adc
xchg
mov
mov
into
call
xor
jbe
dec
popa
sub
ljmp
adc
repz
pushf
sbb
fnstcw
add
shl
push
aas
sti
adc
cmp
sti
imulb
mov
and
jnp
je
push
lcall
push
andb
lds
ljmp
push
pusha
or
add
push
jge
and
hlt
leave
js
pop
leave
mov
or
popf
add
push
lret
mov
les
in
xchg
mov
adc
dec
mov
es
sbb
mov
outsl
xchg
or
fsts
fcom
xchg
aad
add
jg
mov
fmull
les
add
dec
imul
or
push
adc
push
push
test
mov
imul
jno
adc
shll
and
add
cmpsb
lcall
push
ja
pusha
repnz
or
xor
mov
inc
add
cmp
cmc
daa
movl
sahf
adc
add
ljmp
ss
rcl
push
in
push
fisubrl
mov
or
jle
pusha
js,pn
mov
test
or
imul
jg
fnstenv
aaa
adc
push
jne
xchg
jne,pn
mov
add
sbb
push
pop
pop
lock
mov
xor
xor
orl
lcall
idiv
add
dec
jo
push
sub
dec
push
cmpsl
add
mov
out
rol
or
lea
divl
pop
enter
rclb
pop
mov
push
push
pop
pop
bound
testl
lahf
out
into
js
sub
mov
adc
and
mov
xchg
cmp
fsubl
push
dec
fwait
mov
mov
inc
pushf
in
xorl
dec
jo
data16
dec
adc
cwtl
dec
call
xor
or
jbe
pop
fidivrs
hlt
es
or
or
inc
mov
int3
rorb
fcomp
and
js
mov
mov
insb
cmp
xor
mov
cmp
rol
loopne
in
jp
add
adc
aad
xor
jns
repnz
inc
mov
add
add
adc
jo
lea
fs
push
mov
sbb
push
or
fs
in
cmp
inc
inc
dec
or
enter
sbb
lods
lock
outsb
jbe
jge
xor
adc
jb
lret
lods
adc
enter
insb
lahf
jo
je
or
and
jl
sub
and
or
mov
mov
enter
int
and
mov
xchg
leave
enter
lcall
cmpsb
inc
push
mov
or
jbe
lret
ja
add
scas
or
pop
pop
or
enter
xor
test
mov
mov
inc
mov
fwait
pusha
mov
cltd
mov
aaa
imul
enter
dec
loopne
xchg
xchg
xchg
subl
mov
pop
add
inc
jns
test
mov
push
pushf
sbb
sbb
lea
add
mov
fcoml
sub
out
data16
pop
dec
add
pusha
sbb
cmp
lods
sbb
imul
jbe
or
or
data16
push
js
xor
lret
pop
inc
inc
inc
inc
pusha
fs
push
jl
add
test
stc
lret
cmpb
lcall
xor
dec
addl
cld
lds
ds
dec
or
xor
mov
jo
je
shr
mov
jecxz
popf
mov
int3
shr
cltd
mov
mov
outsb
add
xchg
xchg
xchg
xchg
mov
mov
in
jno
add
inc
es
adc
jmp
mov
outsl
movsb
test
mov
mov
cmp
add
inc
mov
mov
mov
daa
xchg
adc
and
mov
movsb
add
or
popf
xor
cmpl
shll
xchg
lret
dec
enter
ret
int3
sbb
movsb
decl
iret
shlb
pop
push
and
jl
xchg
xchg
push
pop
pop
icebp
int3
mov
or
pushf
jmp
sti
sbb
add
add
jb
in
cmp
and
mov
add
jae
sbb
xchg
js
dec
aaa
xor
jl
test
sbb
and
nop
pop
fcoml
xchg
cwtl
in
pushf
scas
sahf
pushf
mov
scas
cltd
mov
pop
hlt
test
mov
mov
add
les
cld
add
add
sub
add
aaa
rcrb
xor
loopne
sbbl
push
call
idiv
jnp
pop
in
or
or
adc
movsb
stos
jl
lret
lock
add
fistl
cld
pop
cmp
sbb
fdivrs
jge
and
or
sub
sub
icebp
jmp
adc
mov
add
add
lods
cmp
mov
push
and
popf
out
sub
in
les
sub
adc
mov
sub
push
je
in
cmp
add
xor
inc
adc
cmp
sbb
data16
dec
inc
pop
inc
mov
mov
push
pop
das
scas
xchg
push
pop
xchg
lret
adc
icebp
imul
stos
movsb
xorb
xor
orb
mov
sbb
add
in
andl
xchg
mov
mov
or
cmp
xchg
lods
or
adc
jb
shlb
and
outsb
or
jmp
lods
sbb
test
cmp
and
jb
sbb
push
add
scas
outsl
sub
je
xchg
imul
rclb
test
xor
loope
test
jmp
add
inc
dec
push
dec
adc
test
add
add
rol
sub
inc
divl
sub
add
add
sub
or
sub
and
add
cltd
mov
mov
les
push
cmp
ret
stos
daa
andb
push
leave
nop
test
push
ficompl
popa
pop
xchg
xchg
and
adc
push
xchg
incb
sub
dec
push
push
xor
movsb
cs
push
push
push
pop
sub
dec
jg
xchg
and
cmp
inc
dec
jbe
inc
fmull
in
inc
mov
fisttpll
nop
push
jne
nop
sub
push
adc
fcmovu
orb
xor
fistl
dec
sbb
pop
sbb
adc
sub
add
xor
fbstp
push
add
sub
sbb
inc
push
or
mov
mov
andl
add
rol
adc
rcl
adc
xchg
jne
jmp
scas
pop
xchg
push
sbb
or
pop
push
mov
xchg
sbb
xchg
inc
add
push
fldcw
pop
cmp
inc
test
mov
inc
movsb
call
sarb
inc
jns
sarb
sbb
add
adc
add
add
test
pop
fldt
imul
loopne
int
cmpsl
and
or
lret
or
outsl
fdivs
lcall
outsl
mov
mov
sti
pop
cmp
push
jmp
gs
frstor
popaw
jp
roll
jmp
aas
insl
add
insl
pop
mov
inc
es
insb
and
mov
push
lods
and
adc
aad
xor
mov
sbb
jmp
sbb
xor
stos
fiadds
cmpsb
pop
repz
mov
sub
in
xor
lcall
sbb
push
inc
bound
push
push
xchg
xchg
jp
inc
pop
ret
lds
cmpb
sarb
sbb
xchg
loop
loope
push
insl
or
mov
add
pop
jle
mov
js
mov
jg
rorl
sbb
cmp
and
and
xor
sub
sbb
push
addb
lahf
lret
adc
sahf
xor
adc
js
lods
call
xor
push
or
cmp
push
cmpsl
adc
pop
orb
xor
xchg
xchg
xor
rcrb
mov
mov
mov
in
push
push
adc
sub
mov
jno
jp
push
xor
and
mov
rcrl
xlat
data16
cmp
add
icebp
inc
adc
xor
lahf
rorl
pop
cmp
sub
mov
lea
add
sub
inc
pop
js
cli
push
and
xchg
dec
aaa
je
pop
sbb
pop
jmp
push
or
and
jle
ret
mov
sbb
push
shlb
cmpsb
movsb
es
lods
jle
or
xchg
pop
add
les
cmpsb
jo
mov
pop
push
imul
stc
movsl
sub
sti
popa
cmp
dec
sub
cwtl
jmp
fiadds
ret
pusha
push
andl
xchg
adcb
jae
or
mov
mov
sbb
sahf
mov
scas
sarb
cmp
mov
inc
fisttpll
and
cmp
add
sub
mov
stos
adc
fdivrp
and
and
lods
cmp
cmp
insb
jge
xchg
lcall
push
in
cmpsl
add
mov
vrsqrtps
xor
bound
or
xor
arpl
xchg
add
dec
add
xorl
cmp
or
pop
mov
pop
loopne
xlat
mov
out
and
mov
enter
and
pop
cmpsb
cwtl
xor
pusha
out
and
sub
jo
mov
insl
mov
jo
fldcw
loope
test
xor
dec
or
jl
jno
addr16
jno
rcll
jo
popa
test
push
das
push
or
lods
imul
sub
fs
xchg
jbe
dec
mov
mov
rcrl
out
ror
push
xchg
push
sub
and
es
insl
xchg
or
test
lock
popa
in
and
sbb
sbb
inc
cmp
pop
fbld
mov
and
ret
xor
push
int3
repz
pop
push
and
and
sub
and
push
loope
sbb
push
inc
addl
fwait
push
push
ja
or
lock
popf
stc
xor
and
je
sub
test
pop
popa
cld
pop
and
or
add
adc
dec
out
and
cmpsl
leave
inc
outsl
push
push
sbb
adc
inc
mov
fnstcw
dec
scas
enter
cli
sbb
lret
nopl
cmp
cmp
sbb
shl
and
mov
loop
cmp
in
jne
mov
je
popl
xchg
inc
jno
fmul
mov
pushf
mov
dec
mov
movsb
adcl
test
dec
pop
lock
jp
test
nop
xchg
rolb
push
ret
psubsb
mov
test
das
nop
pop
mov
dec
inc
fs
or
loopne,pn
dec
fimuls
xchg
add
xchg
nop
inc
pushf
sub
add
sti
xor
and
mov
push
or
xorl
lods
xor
sbbl
dec
dec
sbb
push
out
aas
cmpsl
andb
xor
loopne
mov
xchg
inc
dec
jae
mov
dec
cmp
push
xor
int
sub
loope
adc
gs
push
or
sub
lret
out
jmp
adc
lods
adc
mov
sbb
es
mov
push
js
lret
fninit
mov
or
rorb
repnz
mov
inc
adc
adc
adc
hlt
push
or
test
sbb
or
xchg
cmp
and
xor
adcb
ja
jns
sub
push
dec
adc
mov
jb
jp
outsl
insl
sbb
dec
mov
or
add
and
rcrb
mov
pop
cmp
jnp
xor
sbb
sub
sub
add
adc
push
pushf
sub
sub
mov
cli
add
rcrb
rcrl
bound
xchg
xchg
xchg
lret
ds
rcrl
xor
add
and
loope
dec
pop
das
cmp
adc
jae
sub
adc
iret
test
iret
dec
gs
add
sbb
xorb
insb
stos
mov
pop
push
sub
add
sahf
les
cmp
rolb
dec
and
arpl
adc
or
lock
dec
mov
inc
sbb
aaa
pop
rclb
xor
xor
in
inc
dec
push
iret
sub
neg
push
add
or
push
add
lret
or
cmp
xlat
aam
xor
mov
nop
sub
in
ss
mov
mov
les
inc
fbld
adc
sub
add
cltd
push
and
push
push
rclb
ja
adc
pop
cld
mov
mov
and
test
lock
adc
push
push
imul
adc
add
mov
maxps
test
add
rcr
bnd
add
pavgw
lea
push
xchg
cmp
lock
wbinvd
sub
xor
fcmovb
mov
push
or
ss
pop
push
inc
fstpt
inc
and
std
mov
pop
jbe
or
adc
sbb
xchg
push
add
or
ljmp
sub
and
imul
fsubr
push
add
hlt
add
int3
rcll
xor
mov
mov
jge
je
mov
add
sbb
call
mov
adc
in
call
arpl
movsb
mov
in
ds
push
and
inc
xchg
shl
lret
inc
pop
scas
or
mov
xor
push
or
or
sbb
mov
loopne
pop
xor
sub
cmp
jb
xchg
or
fidivs
pop
mov
jne
push
or
shrl
xchg
adc
mov
jb
add
pshufw
out
call
loopne
and
add
leave
add
push
cmp
loop
arpl
pop
inc
vbroadcastss
shrb
add
lds
push
enter
push
sub
and
cmp
pop
cmp
push
push
push
mov
sub
jo
mov
sti
xor
jl
je
add
mov
ljmp
or
pop
push
jge
jb
mov
mov
and
mov
add
push
lcall
sub
pushf
lods
dec
bnd
and
enter
push
push
sbb
dec
push
sbb
push
push
sahf
push
ljmp
adc
lcall
cltd
mov
adc
fwait
mov
jno
rorb
push
push
lea
jo
mov
sub
call
mov
push
sbb
jle
shr
loope
pop
add
rcrb
sub
push
sub
mov
add
add
pop
and
or
or
adcl
inc
inc
mov
dec
push
push
int3
ja
xchg
push
push
push
inc
pop
or
std
lods
dec
jge
or
std
or
inc
sbb
fadd
dec
and
jb
dec
xor
movsb
lret
inc
into
cmp
xor
cmp
xor
push
std
or
mov
ret
in
gs
inc
jg
imul
fxch
movsb
hlt
jb
icebp
ja
pop
loope
fidivrl
cmpsb
cmp
jno
imul
xor
xor
shrl
and
xchg
jo
dec
je
dec
push
pop
jne
in
add
jecxz
push
xchg
inc
rcrl
test
je
sub
cmp
mov
push
jae
adc
sub
mov
and
rorb
or
add
jno
addl
sub
add
push
sub
sub
adc
movb
push
fmull
xchg
cmp
or
and
pop
sub
and
cltd
xor
jmp
lcall
sub
dec
test
add
stos
clc
popa
imul
jne
lea
xor
mov
fmuls
popf
fidivl
jne
lock
xchg
dec
ret
loopne
les
popl
lea
cmp
add
add
xor
dec
push
sti
jmp
sbb
add
jbe
lahf
xchg
mov
ljmp
sbb
dec
inc
daa
mov
sarb
xor
cmp
fisttpl
aad
hlt
xor
jo
loopne
sub
push
and
or
sub
cmp
push
sub
test
in
enter
in
cmp
xchg
cs
fwait
lret
scas
or
adc
pop
xchg
call
xchg
add
pop
jecxz
movsb
jg
xorb
orl
mov
push
add
mov
adc
nop
mov
sbb
dec
sub
pop
aaa
xor
jno
add
pusha
sbb
pop
xchg
movsl
test
adc
push
dec
addr16
dec
int
test
sbb
loope
add
test
inc
mov
push
pop
sbb
test
add
mov
les
ds
loope
mov
add
cmp
push
xchg
inc
std
push
mov
jns
or
mov
ficomps
or
xor
add
iret
add
cmp
popa
and
daa
mov
test
xor
test
mov
es
xor
dec
push
add
dec
inc
or
rcll
bound
push
xchg
adc
inc
ja
cwtl
or
imul
sbb
addb
add
inc
or
push
pop
mov
jo
sbbl
push
cmp
pop
aas
pusha
jne
mov
xchg
int3
sbb
push
or
xchg
add
sub
loopne
add
and
or
int
in
push
mov
out
or
and
mov
or
sbb
sbb
sub
mov
inc
dec
dec
iret
addl
mov
xchg
sub
pop
sbb
jb
btr
mov
add
iret
and
dec
jno
mov
nop
sub
dec
push
adc
rolb
rolb
jb
jns
aam
in
inc
inc
fcoms
aaa
push
add
or
push
add
jg
xchg
addb
jbe
mov
jbe
jmp
xor
dec
add
add
dec
pop
jbe
dec
or
inc
or
and
pop
jl
icebp
insb
or
out
or
add
and
or
or
lock
inc
mov
fs
pop
and
sub
insl
or
sarl
lock
inc
sbb
sub
fcomps
rcpps
xchg
mov
das
push
add
fisubrs
fs
into
xchg
fs
insb
add
stos
inc
leave
adc
int3
add
jl
mov
popa
xchg
jno
sbb
mov
sbb
adcb
lock
inc
push
jmp
cmp
insb
mov
sahf
jne
incl
add
add
in
push
jmp
or
push
cld
repz
add
adc
sbb
lea
xor
or
mov
fimuls
or
sbbl
adc
stc
adc
mov
dec
push
push
sarl
out
jno
and
ret
and
and
mov
pop
jp
sub
out
shlb
add
push
rol
xor
dec
cmpsb
mov
push
mov
ja
pop
or
cs
mov
pop
xor
dec
aaa
cwtl
adc
mov
popf
and
xchg
fwait
xchg
inc
pop
addl
push
mov
sub
sbb
inc
scas
cld
dec
in
nop
dec
xor
mov
xchg
push
inc
je
data16
into
adc
std
adc
push
das
and
sbb
mov
and
inc
ja
and
dec
int3
xor
xor
pop
push
aaa
mov
jo
and
mov
adc
jge
sbb
cmpsb
mov
push
mov
bound
ss
jp
push
push
aam
adc
pop
pop
shlb
dec
adc
xchg
inc
push
add
shll
mov
icebp
sbb
out
pop
je
push
or
jg
mov
push
out
dec
repnz
or
repnz
adc
inc
push
nop
pop
adc
push
clc
test
sti
or
notl
inc
daa
push
xor
xchg
sub
push
test
push
imul
adc
pop
mov
sub
mov
or
int3
cs
jns
push
xor
and
pop
jl
and
sahf
push
push
inc
dec
mov
js
push
dec
sbb
adcb
mov
clc
cmp
dec
jmp
rcrl
mov
mov
movsl
push
xor
inc
inc
leave
insb
cltd
add
cmpsl
fadds
mov
pop
sub
sbbb
mov
dec
and
adc
cmp
push
add
imul
or
mov
cmpl
mov
push
sarb
add
enter
ret
mov
lods
dec
and
dec
mov
mov
sub
cwtl
insb
and
in
xchg
int
push
mov
jns
dec
push
xchg
pop
add
lcall
xorl
imul
mov
sbb
arpl
sub
inc
shlb
add
cmpb
xchg
cmp
sub
pop
sbb
xchg
pop
lock
mov
inc
pop
and
out
sub
add
repnz
pushf
push
cwtl
push
inc
push
mov
inc
pop
sbb
inc
mov
flds
mov
test
add
and
add
iret
inc
sbb
sbb
sbb
addl
loope
pop
fdiv
xor
push
fwait
ret
ret
inc
adc
xor
push
xor
xor
fisttpl
push
fdiv
inc
push
pop
push
cmp
test
mov
or
loope
test
xor
sbb
pop
scas
shl
add
pusha
test
jo
cmp
ja
pop
and
push
or
lods
cmp
inc
sbb
sub
adc
adc
ss
adc
sub
add
adc
add
bound
cmpsl
mov
aaa
faddl
and
push
cmp
sbb
and
jmp
cmp
inc
out
xchg
xor
adc
push
or
or
adc
or
jmp
dec
jns
add
insb
fiaddl
dec
out
sahf
out
push
push
pop
pop
xchg
clc
xor
pusha
fs
push
test
cwtl
test
dec
adc
fsubl
pop
sbb
xor
clc
adc
mov
pushf
pop
das
and
push
jne
cmp
and
daa
sub
xchg
inc
cmp
sbb
cmp
xchg
xchg
cmp
dec
lock
ss
xor
fsub
icebp
mov
sbb
test
pop
pop
orl
add
mov
into
sbb
xor
push
les
push
das
rorl
jo
mov
popa
int3
inc
loope
shrb
add
nop
test
into
mov
mov
sub
jmp
sbb
loope
xchg
add
cmp
test
mov
push
sub
push
xor
sti
mov
jl
push
div
enter
or
popf
mov
mov
test
lcall
dec
push
and
inc
repz
push
jl
cmp
sbb
popa
shll
or
popa
frstor
mov
out
push
lds
push
lret
fs
loope
and
mov
adc
insb
sti
xor
inc
inc
sub
cmp
ret
fsubs
or
mov
dec
add
mov
pop
ljmp
add
jns
daa
push
ror
sbb
rolb
dec
push
push
push
sbb
test
adc
sbbb
mov
sub
mov
sar
push
mov
bound
addr16
push
movsl
dec
mov
inc
and
jl
jl
test
add
or
inc
inc
pop
push
daa
xor
xchg
mov
and
popa
test
dec
dec
and
cmpsl
mov
clc
add
sbbb
push
pop
fadds
pop
aam
sahf
add
sub
insl
mov
xchg
cld
mov
fstpl
mov
dec
or
nop
sbb
adc
push
cwtl
mov
aas
xor
cmpsl
insl
js
rol
add
adcl
mov
imul
clc
add
or
sub
dec
push
mov
or
sti
or
mov
icebp
add
cmp
inc
push
imul
push
scas
pop
mov
mov
pop
sub
or
mov
sbb
push
pop
mov
js
ret
add
aas
loope
test
cmp
movsl
adc
pushw
pop
push
or
jp
sub
or
punpckhbw
xor
sahf
push
scas
sbb
rorb
movsb
addr16
cmp
jp
movsb
xorl
xchg
xchg
ss
push
sub
pop
adc
aaa
arpl
jno
sub
jle
insb
dec
loop
push
in
jo
sbb
test
and
popa
inc
add
inc
or
or
push
movsb
movsl
or
jnp
cmpb
jae
clc
or
sub
cmp
dec
pop
mov
push
stc
imul
xchg
mov
adc
movsb
mov
lock
xchg
add
in
enter
adc
jbe
test
mov
add
xorb
xchg
add
pop
xchg
jp
inc
stos
pusha
and
popf
push
jne
push
add
mov
sbb
ret
cmp
cmpsl
movsb
fld1
ljmp
fmuls
mov
mov
inc
pop
or
out
xor
pop
jmp
cmp
sbb
test
pop
in
jne
sbb
inc
and
movsb
js
sub
mov
jno
ret
push
cltd
setg
xor
in
pusha
cmpsl
movl
ret
cmp
add
dec
pop
or
mov
dec
mov
dec
iret
sbb
pop
adc
cmp
xchg
cmp
arpl
into
aad
inc
adc
push
mov
push
mov
ret
jmp
push
xor
mov
cltd
imul
mov
shr
addr16
cltd
mov
pop
andl
cmpsb
sub
pop
jbe
add
adc
dec
dec
lods
xor
jns
mov
and
inc
pop
push
or
cmp
and
xchg
mov
in
ret
xor
negb
dec
push
push
xor
fildl
push
fs
ret
imul
xlat
or
mov
shll
xor
or
xor
dec
jmp
int3
or
add
adc
mov
jb
dec
nop
sub
inc
jo
push
inc
push
mov
mov
popf
mov
pop
push
pop
dec
add
pop
inc
mov
add
in
jo
pop
sbb
js
add
mov
or
xchg
push
jne
mov
or
add
sub
sbb
dec
fsubs
and
push
mov
leave
xchg
addr16
mov
xchg
aam
add
loopne
xchg
aad
stc
jno
fbld
fstpt
push
imul
adc
popa
cmp
and
icebp
push
imul
and
sti
lea
daa
push
push
or
aam
enter
cmp
and
mov
or
or
xchg
loopne
xchg
or
pop
add
sti
into
inc
mov
sbb
dec
popl
aaa
ja
ror
fmull
dec
jbe
cmp
sbb
or
inc
inc
loope
lock
mov
into
xchg
sub
xchg
insb
and
push
jnp
adc
push
ds
aas
pop
shr
push
and
negl
adc
xlat
mov
inc
adc
jne
sub
daa
ret
ret
shrl
rclb
mov
fnstenv
or
push
mov
shlb
sahf
cmp
sarb
into
sbb
jge
push
leave
inc
es
adc
cmp
push
add
push
imul
jg
mov
movb
jmp
test
xor
es
sub
xlat
cli
jne
repz
mov
stos
dec
mov
movsl
xchg
adcb
rorl
and
pmaxsw
sbbl
mov
enter
inc
push
out
and
push
dec
adc
inc
and
clc
cmp
mov
testl
lds
paddusw
add
outsb
inc
or
ret
mov
add
in
ficoms
inc
dec
mov
cld
test
cmp
je
add
sbb
inc
cmp
repz
push
sbb
jge
jecxz
and
jl
jmp
mov
adc
mov
movb
bound
test
iret
call
imull
mov
inc
negl
adc
xor
addr16
lock
pop
xchg
out
mov
and
aas
push
aaa
and
sub
add
or
insb
in
insb
push
aaa
add
sbb
shrb
mov
cmp
out
sbb
push
adc
push
lods
je
xor
inc
xchg
jne
jp
clc
sub
jmp
nop
je
and
test
icebp
in
sub
or
and
ficoms
add
cmpsl
cmp
xchg
add
enter
andb
dec
cmp
or
ficoml
jo
jno
push
jge
pop
cmp
or
pop
xchg
sbb
dec
or
xchg
inc
add
mov
shlb
outsl
or
jl
je
and
xor
insl
repz
mov
dec
xchg
cmp
repnz
mov
cmp
leave
and
mov
inc
pop
push
pop
ficoms
push
sub
push
scas
dec
out
jp
inc
push
push
imul
xor
sbb
jmp
shrl
push
xchg
push
test
push
or
sub
out
inc
lcall
xor
testl
add
inc
push
or
adc
outsl
mov
and
dec
stos
pop
xchg
mov
mov
in
out
stos
mov
adc
ret
movsb
ss
or
daa
and
inc
and
dec
sbb
pushf
testb
mov
outsb
or
cmp
push
pop
mov
cmp
jae
sbb
add
sbb
js
jmp
jl
add
pop
mov
sub
cmp
loope
or
lret
cmp
dec
jmp
movsb
cmp
cmp
std
inc
pop
mov
int
fcoms
sub
sti
or
rolb
movsl
jno
adc
push
insb
push
xchg
aaa
lock
inc
sub
fcompl
data16
sarl
cltd
cmp
mov
wrmsr
cmp
aas
mov
push
push
data16
mul
addl
or
mov
inc
adc
adc
notl
ficoml
rcrb
int
rorb
inc
decb
mov
lds
dec
xor
or
hlt
pop
es
jg
das
adc
xor
push
sub
fldt
or
lods
jmp
loop
subb
ljmp
mov
es
ja
je
fildl
test
pop
movl
jne
or
jb
push
in
cmc
outsb
js
bound
je
push
in
push
push
sub
inc
loop
adc
jmp
int3
push
addr16
movlps
pushf
or
mov
ja
inc
or
loopne
lret
stos
shll
cmp
outsb
sub
sbb
inc
bound
sbb
int
dec
rolb
stos
push
inc
adc
or
and
stc
jae
xor
fcoms
adcb
imul
inc
xor
and
cld
inc
or
add
data16
jb
movsb
inc
or
les
mov
add
xchg
cld
dec
jae
cltd
or
ja
aam
add
aam
loope
test
inc
sbb
dec
daa
mov
jo
test
cmp
imul
inc
push
ficoml
stos
and
push
test
jne
push
flds
fmuls
pop
test
imul
mov
hlt
xchg
push
pop
ss
mov
pop
xchg
pop
mov
shrb
mov
dec
push
dec
das
in
imul
sbb
mov
xchg
push
jmp
pop
adc
mov
add
jmp
movsb
push
clc
lcall
test
bound
pop
mov
aad
mov
bound
loopne
inc
mov
jnp
adc
pusha
ja
fmull
pop
daa
mov
dec
sbbl
les
xchg
test
or
adc
adc
jge
inc
cld
inc
sub
xor
mov
or
push
push
dec
maxps
testl
mov
inc
and
ss
adc
dec
fcmovnbe
pop
or
leave
clc
inc
and
imul
enter
mov
pop
push
inc
cmp
xor
insl
das
add
push
adc
fdivs
sub
shlb
lock
loope
cmp
push
stos
pop
pop
inc
mov
adc
jno
dec
jo
test
sub
push
imul
mov
fcoml
and
add
sbb
add
ja
xchg
mov
mov
popf
push
jmp
jmp
push
adc
scas
out
lret
in
cmpsl
sbb
or
jo
shl
ret
jne
and
test
ja
mov
lea
cmpsb
jge
jmp
lods
std
addb
dec
data16
pop
shl
faddl
jp
inc
lret
push
or
jbe
jmp
cmp
daa
loop
sbb
cld
or
jmp
test
and
cmp
sbb
sub
arpl
movsl
rcr
adc
and
dec
daa
add
push
jmp
fsubs
jo
push
sub
sbb
sbb
mov
das
rcrb
leave
add
neg
inc
add
cwtl
nop
dec
ds
sbb
mov
std
jns
add
scas
jge
add
or
and
xchg
es
and
mov
movsl
dec
pop
add
lahf
mov
sti
push
xlat
lret
and
pop
add
dec
mov
dec
or
xor
lcall
js
xor
inc
addb
adc
cmp
stc
or
pop
and
divl
mov
mov
and
test
jmp
dec
push
push
mov
addb
or
popa
jl
nop
ds
cmp
ret
movb
jmp
push
movsb
rorl
inc
jae
decl
pop
test
xchg
xor
adc
inc
and
add
stc
adc
pop
sub
sub
sbb
sub
mov
fimull
sahf
sbb
push
jbe
inc
adc
ret
ljmp
arpl
push
ds
adc
xchg
adc
pushf
repnz
adc
call
dec
aas
pavgb
jecxz
popl
ss
pop
sbb
push
pop
and
xlat
xchg
pop
xchg
push
adc
xor
mov
imul
into
lock
shrl
or
push
js
lock
fsubrs
ret
mov
dec
loope
or
mov
fidivrl
ret
add
and
das
adc
daa
mov
cmp
sbb
je
adcl
scas
mov
ss
lcall
inc
push
push
inc
loopne
mov
or
je
push
mov
adc
xchg
cmp
in
add
and
imul
mov
inc
add
sub
aad
add
rorl
leave
add
stc
div
push
fistps
mov
arpl
jne
dec
lds
mov
pop
out
push
add
nop
adc
jmp
and
cmpb
repz
sbb
mov
jae
and
das
mov
xor
sub
cld
xchg
pop
inc
lds
adc
and
or
mov
aad
and
imul
sub
sub
mov
dec
add
dec
dec
mov
cs
sub
lods
bound
pinsrw
xchg
popa
sbb
loopne
push
push
in
push
inc
jecxz
sub
and
push
data16
daa
and
int
inc
cmp
cmpb
xor
adc
dec
sub
jl
rcr
xchg
xchg
leave
xor
pusha
adc
pop
jmp
stos
and
add
fwait
mov
inc
inc
subb
test
pop
xchg
mov
and
mov
and
popf
and
daa
sbbl
cmp
fisubl
ret
sarb
sbb
shrl
mov
loopne
roll
jo
jnp
add
test
inc
xchg
mov
push
cmp
add
cmp
loopne
mov
jmp
push
sub
dec
add
mov
bound
enter
test
and
aam
mov
jl
and
pop
push
push
jb
and
and
sub
cli
test
sar
or
add
or
sbb
call
movb
push
sbb
jno
test
das
or
test
or
jnp
xchg
inc
pop
sbb
adc
ds
cmp
adc
inc
int3
jl
push
pop
mov
lret
sar
dec
ja
js
pop
jg
mov
sub
fcomps
sbb
jnp
mov
jno
sbb
sarb
xor
dec
mov
add
hlt
inc
test
bound
std
scas
cmp
int
xor
push
roll
dec
add
test
outsl
lock
or
mov
cmc
sub
sar
pop
mov
sub
cld
sbb
push
pop
es
std
cmp
aas
jbe
mov
sub
jg
mov
jae
mov
xor
xchg
or
or
dec
in
adc
and
sbb
dec
sbb
insb
inc
in
mov
push
adc
mov
jge
loop
add
jbe
adc
add
inc
sub
loope
fistl
mov
xchg
push
fiadds
adc
ss
loopne
push
arpl
xor
movb
sbbb
mov
and
push
lock
ja
je
sub
or
and
lods
js
out
mov
push
add
arpl
addl
dec
rcrb
push
jne
jmp
aaa
std
fst
and
jecxz
cltd
push
jecxz
and
push
xorb
xor
push
push
mov
test
push
xchg
jg
loopne
pusha
cld
js
imul
popa
aas
nop
xchg
mov
mov
out
cmp
hlt
mov
pop
jns
sub
xchg
gs
xlat
add
or
cmpsl
lret
xor
rol
push
inc
ja
jne
sbb
fnstenv
dec
push
xchg
fxch
and
test
or
dec
push
pop
push
mov
fs
inc
pop
jecxz
push
lods
dec
iret
mov
dec
out
or
int3
rorb
cmpl
cwtl
leave
outsl
fadd
aam
aaa
mov
movsb
int
or
xlat
cmp
push
inc
stos
imul
inc
push
sbb
jne
outsl
in
add
repz
inc
lds
dec
dec
push
jns
push
push
and
inc
aas
pop
leave
adc
lea
into
jle
sbbb
jge
loope
fisubrs
sub
mov
lods
ret
nop
jle
pop
push
jmp
push
add
and
pop
fs
push
movsl
cmpsl
je
rolb
xchg
jge
sbb
in
sbb
inc
call
mov
adc
outsb
shll
push
je
sahf
lcall
push
movsb
push
push
xchg
mov
icebp
xor
xor
xchg
dec
jnp,pt
pusha
lods
fisttpl
and
inc
mov
negl
xchg
imul
out
inc
push
mov
push
fsubs
mov
mov
clc
and
cmc
push
sbb
stos
inc
jecxz
ret
push
data16
clc
push
jl
adc
jp
call
mov
jae
xchg
xchg
xchg
test
cmp
daa
jo
cwtl
stc
jmp
fsts
add
add
sub
test
xchg
cli
jmp
inc
movsb
mov
js
orl
and
nop
popa
lock
fimull
mov
mov
flds
push
jle
pop
and
test
sub
or
mov
mov
mov
xor
jno
adc
sti
push
fildl
test
push
and
js
shl
cli
xchg
or
leave
test
sbb
lea
out
push
orl
outsb
arpl
push
in
mov
adc
sub
cmp
insl
add
rorb
imul
pop
and
or
sahf
test
das
adc
add
lea
xchg
or
mov
sub
jae
test
add
lea
nop
jo
push
mov
jbe
dec
sbb
jns
ja
aaa
mov
and
pusha
iret
jmp
mov
jno
push
inc
int3
push
push
push
data16
xor
jns
dec
inc
add
push
cltd
insl
jg
aas
test
das
movl
mov
mov
or
nop
xor
clc
movb
add
dec
cmp
push
cmp
inc
test
cmp
sbb
pop
mov
xchg
test
and
mov
add
lret
arpl
add
aam
dec
std
push
fistpl
mov
sbb
mov
push
sarl
ficoml
dec
cmpsl
xor
iret
js
cmp
xor
test
fwait
test
xchg
xchg
inc
out
add
pushf
fsubl
jle
jne
xchg
or
jns,pn
inc
pop
sub
push
sub
test
xorl
adc
jl
mov
ja
aas
or
push
add
cmp
xchg
icebp
xor
add
add
add
out
movsl
sbb
cmp
aam
hlt
stos
mov
pop
lods
add
xchg
pop
repnz
adc
pop
jne
push
or
aaa
and
cmp
push
pusha
add
adc
add
and
adc
push
xchg
push
adc
or
sbb
rorb
push
mov
andl
mov
xor
repz
dec
push
inc
push
sub
andl
pop
dec
and
dec
pop
or
mov
js
dec
push
mov
or
leave
push
push
dec
add
or
push
rcrl
sub
inc
add
push
cmc
jmp
insl
ds
mov
lret
mov
push
divl
xor
xor
add
int3
xchg
and
sbb
lret
dec
dec
inc
mov
xor
and
cltd
lret
push
fwait
xor
andb
push
adc
push
into
rclb
xor
inc
test
push
push
dec
pop
pop
add
adc
xchg
jae
pusha
xor
adc
or
adc
cmp
adc
and
fld
cmpl
pop
mov
lods
mov
cmp
push
sbb
test
xchg
rcrb
mov
enter
pop
fldcw
xchg
xor
or
pop
or
add
add
mov
sbb
pop
dec
les
inc
push
je
and
and
jge
inc
test
cmp
in
vmovhps
xchg
cmp
fstl
inc
es
cli
cli
sbb
jo
xchg
dec
or
adc
mov
inc
and
shlb
clc
ret
push
and
cmp
xchg
push
add
mov
sbb
pop
mov
insl
bound
inc
sbb
inc
sub
lret
inc
sub
aaa
ret
and
mov
xor
or
jnp
pop
inc
jmp
enter
movsl
cmp
jge
loope
pop
inc
or
push
ret
inc
pushf
and
mov
inc
jb
or
shlb
jle
rolb
aas
andl
imul
add
pusha
ret
dec
cmp
or
mov
fildll
cwtl
and
loope
pop
lock
ret
mov
jecxz
icebp
add
rcll
and
gs
cltd
loope
adc
or
ja
fs
fldl
push
jb
and
mov
loopne
add
or
and
lret
lret
lret
sbb
add
aaa
xor
stc
sub
cltd
dec
xor
or
insb
adc
and
fiadds
roll
add
leave
pusha
xor
push
fnsave
push
cltd
sub
sbb
cmp
mov
push
xlat
cs
jge
int
mov
lcall
ret
dec
mov
push
lcall
sub
xchg
jne
jns
sti
test
push
add
push
inc
outsl
jae
pop
lret
sub
add
test
push
int3
or
sub
scas
mov
jmp
sbb
pop
xor
sbb
inc
and
popa
xlat
adc
sbb
inc
cmpsb
sub
or
ja
dec
adc
adc
pusha
push
pop
xor
or
add
addr16
cmp
sub
out
xor
rol
lods
dec
icebp
push
sub
jp
movsl
push
or
adc
xchg
mov
push
test
add
push
add
and
out
sbb
cs
les
ret
hlt
sbb
jmp
pop
and
subb
push
mov
mov
xchg
push
push
lea
xchg
push
mov
rol
xchg
jmp
push
pop
icebp
inc
and
pop
aaa
add
adc
push
adc
outsl
push
push
add
pop
loopne
inc
mov
xor
lret
movl
jmp
xchg
xor
pop
mov
xchg
add
insl
xlat
mov
and
flds
movsb
jo
je
add
push
jno
and
lds
xor
dec
popl
push
inc
jecxz
pushl
xor
test
cmp
fcom
adc
decl
inc
andb
jge
push
inc
xor
js
pop
push
sub
pop
mov
cmp
out
sarl
jo
ds
lods
adc
push
cmp
cmp
aad
push
gs
or
inc
lret
mov
movsb
dec
sbb
outsb
push
push
and
adc
icebp
cld
mov
jno
pushf
push
mov
push
test
jbe
push
add
mov
mov
stos
and
jmp
adc
jl
movsb
ret
popf
jmp
js
and
xor
lds
adc
je,pt
mov
jno
push
add
xor
stos
rcr
addl
sbb
into
data16
mov
push
push
data16
dec
dec
pushw
jmp
mov
mov
cs
in
mov
xchg
add
push
dec
mov
mov
rclb
inc
fidivs
fisttpl
mov
loope
xor
inc
lret
scas
xor
outsl
sbb
cmp
fs
pop
or
sarb
xor
inc
inc
cs
testb
imul
add
add
fisubs
mov
test
pop
rol
and
and
push
push
fsubrs
mov
cmp
inc
mov
lods
loopne
movsb
icebp
ja
mov
lret
test
xchg
sbb
mov
pop
es
push
stc
fdivrs
fldl
insb
push
or
fucomp
cs
cmp
inc
xor
and
push
test
pop
sbb
stos
and
pusha
or
sub
rcl
add
push
sub
imul
in
pop
jg
or
cmp
je
stc
ja
dec
int
or
mov
adc
adc
pop
push
adc
repnz
xchg
fstps
fstps
rol
dec
out
sub
shll
int
jge
inc
add
lea
pop
pusha
leave
adc
inc
mov
pop
sub
sbb
cmp
push
popf
push
and
mov
int3
lahf
popf
and
xor
push
lds
xor
xchg
sahf
fiaddl
inc
outsl
jb
btr
mov
test
ja
imul
dec
jnp
sahf
push
jno
test
insl
imul
inc
sub
xchg
jle
jecxz
stos
add
add
stc
push
dec
lock
push
cmp
cs
adc
inc
xchg
and
adc
sbb
xorb
pop
cld
adc
insb
sbb
push
std
add
sub
mov
pop
test
cmp
jns
or
adc
push
cmp
jnp
dec
jns
add
push
add
test
cmpsb
xchg
fwait
sahf
cmp
dec
mov
jns
lock
xchg
mov
sbb
mov
or
sbb
or
cmp
inc
cmp
jl
jmp
adc
sbb
fwait
add
clc
bound
mov
pop
jmp
sub
pop
or
jg
roll
arpl
scas
cltd
lods
jp
or
sub
push
mov
push
adc
mov
adc
adc
jmp
mov
jne
movsb
dec
ret
dec
sbb
add
imul
mov
and
and
mov
sbb
imul
mov
adc
lret
cmpsb
jle
xchg
add
insl
dec
pop
xchg
cwtl
push
lahf
rolb
call
push
jbe
lret
push
push
enter
mov
push
cli
xchg
div
daa
insb
or
push
xchg
add
or
hlt
push
or
ret
lcall
pop
and
adc
mov
rorb
mov
fucom
adc
add
cmp
lahf
mov
xor
push
sub
mov
sbbl
daa
mov
jecxz
ja
inc
lahf
subl
mov
dec
sub
jmp
or
cmc
pop
fldl
hlt
sbb
jmp
pusha
or
push
ss
cld
push
push
aas
add
cs
ficoms
mov
mov
and
push
nop
jne
push
sbb
pop
popa
jge
in
jge
pop
aaa
pushf
sub
insl
bound
sub
scas
pop
inc
icebp
icebp
jle
fildl
cmp
xor
sbb
or
sarb
loope
scas
mov
jbe
mov
adc
jnp
sbb
psubsw
mov
or
xor
sbb
lock
push
add
or
adc
dec
inc
stos
loope
dec
sub
or
adc
sub
sub
jl
sub
sbbb
cld
je
adc
das
pop
jle
sbb
push
sub
or
or
or
xchg
add
add
test
or
mov
sub
adc
add
push
or
mov
inc
jb
push
enter
add
add
xchg
pop
xor
imul
inc
cmp
repnz
jmp
push
dec
fmull
push
mov
lret
addl
call
push
adcb
ja
mov
sbb
decb
push
call
cmp
pop
sarl
cwtl
xchg
cli
inc
sbb
idivl
movsl
sub
jg
mov
jmp
jl
mov
mov
mov
sbb
jle
dec
les
out
mov
jmp
pop
out
mov
adcl
jmp
inc
js
sbb
jge
and
pop
imul
lret
fs
push
jns
push
pop
lock
and
dec
inc
pushf
sub
and
fnstsw
or
adc
pop
test
dec
jbe
pop
push
add
movsb
cmp
rorl
push
push
push
pushf
movsl
mov
and
loope
ret
pop
pop
push
and
ret
test
in
sub
add
jle
add
imul
add
in
insb
loopne
pop
add
push
lahf
jns
hlt
icebp
cmpsb
add
adc
rolb
mov
mov
push
in
push
or
xchg
ret
cwtl
je
shll
mov
dec
dec
push
mov
addl
pop
push
divw
add
gs
nop
adc
mov
pop
loop
aas
and
pop
and
jle
pop
sbb
xor
ret
loop
mov
or
mov
pop
push
fiadds
pop
push
cmpsl
mov
add
adc
or
pop
inc
mov
push
cmp
push
fcoms
out
dec
nop
shlb
adc
mov
push
adc
add
test
push
pop
or
je
or
and
in
jo
jne
out
lcall
push
xor
cwtl
mov
movsb
sub
cmp
fists
or
and
dec
dec
mov
add
pop
rolb
cmpsb
mov
dec
add
insl
fstpt
add
push
dec
pop
sbb
dec
aas
sub
shrl
scas
xchg
add
mov
xchg
shll
repnz
mov
lock
xchg
lds
sbb
push
test
clc
and
mov
pop
push
subl
fmull
adc
jmp
stos
jge
mov
mov
sub
jmp
int
pop
clc
or
std
dec
xor
dec
iret
hlt
mov
or
xchg
adc
xchg
add
jmp
jo
pushf
and
addb
or
adc
push
fisttpll
outsb
jae
aad
clc
rorb
mov
pusha
roll
mov
push
loope
push
sbb
inc
loopne
jo
push
sub
test
in
or
cmp
xchg
pop
jo
dec
adc
add
fistl
push
divb
push
cmp
cmpsl
es
adc
pop
rclb
and
add
cs
lods
add
or
orb
cli
jo
adc
adc
adc
ret
add
xchg
push
ds
pop
add
jecxz
add
movsb
das
and
dec
cli
pop
sbb
std
or
jge
add
pop
das
cmp
adc
test
ret
fisubs
loopne
cmp
leave
popl
lahf
mov
push
add
sub
sbb
xchg
xchg
mov
xor
xchg
adc
lret
pop
push
stc
mov
adc
sbb
mov
cmpsb
xchg
popa
mov
iret
mov
or
jl
ja
push
aam
cmp
test
and
and
dec
or
mov
mov
mov
mov
and
jp
rolb
inc
and
shll
pop
mov
dec
mov
push
mov
sub
lahf
add
cmpb
test
pop
lea
pop
mov
pcmpeqd
mov
sqrtps
insl
xchg
addr16
setns
aad
out
aad
inc
fdivrs
int3
mov
adc
sbb
fstl
nop
outsb
add
idivl
lock
or
xchg
add
add
inc
dec
pop
lea
lods
xlat
sbb
sub
add
daa
add
sahf
out
push
lret
fdivrs
out
repnz
pop
add
adc
push
ret
mov
mov
bound
mov
push
adc
test
pusha
push
adc
cmp
sbb
movsl
and
jge
dec
xchg
mov
nop
popf
or
insl
push
lock
xor
add
mov
das
cmp
jne
mov
aam
add
pushf
cwtl
or
je
add
pop
pop
rcll
sub
inc
adc
cmp
nop
aaa
movsb
das
inc
push
jo
pop
testb
inc
push
sub
mov
pop
push
nop
sub
inc
pusha
cmp
adc
testl
sbb
inc
or
push
iret
in
dec
mov
stos
inc
movl
orb
dec
shlb
int
adc
inc
pcmpeqw
dec
pop
outsl
jle
movsb
add
mov
sbb
leave
call
push
dec
nop
mov
mov
or
je
push
dec
jl
mov
xor
or
sbb
mov
xor
adc
popa
sub
push
xchg
jne
mov
adcb
push
jp
dec
pop
jge
notb
shrl
fists
js
jl
orb
inc
lahf
add
xchg
insl
pop
sbb
mov
call
push
or
push
jne
mov
push
or
subb
push
dec
jo
or
rcll
push
lds
mov
mov
sti
lret
dec
jo
mov
add
add
add
and
sub
pop
sbb
push
fucomip
jp
and
mov
push
sarl
dec
jne
cmc
cmc
xor
ret
jo
testl
dec
jo
mov
aaa
or
inc
rcl
pop
push
dec
jo
and
and
es
mov
dec
fcmovnb
jge
shl
jno
call
fidivrl
pop
ja
jne
jmp
add
inc
loope
movl
pop
cld
cli
push
movb
jmp
add
xchg
mov
jo
sbb
lahf
daa
dec
push
inc
aas
mov
daa
pushf
sbb
jb
xor
pop
sarl
sbb
ds
movsl
push
xor
and
sbb
mov
nop
pusha
xchg
scas
dec
adc
out
pusha
add
xor
rorb
inc
imul
add
pop
cmp
rcr
jecxz
jge
test
ljmp
pop
sub
js
push
inc
jae
fidivl
mov
jno
jle
popf
cmp
nop
adc
or
and
push
xchg
mov
adc
gs
inc
sbb
add
push
xchg
jmp
in
cmp
xchg
es
repz
scas
push
gs
adc
pop
lret
push
add
dec
xor
nop
push
pop
push
test
push
popa
xor
jo
repnz
xor
or
ja
or
mov
ds
add
push
loopne
mov
out
out
cmp
mov
cs
push
xor
push
fnstsw
nop
add
test
adc
push
sub
mov
sbb
or
pusha
dec
cmp
and
mov
dec
test
aam
je
pop
inc
or
fadds
scas
xor
movsl
xchg
fs
pop
jb
and
mov
iret
adc
mov
cmp
rcl
adc
shl
pusha
xchg
jbe
popf
test
xchg
icebp
xchg
fistpll
mov
insb
push
inc
clc
jne
lret
mov
roll
mov
cmpsl
jnp
add
dec
or
mov
mov
outsb
pop
idivb
xchg
jmp
aas
faddp
adc
imul
pop
aam
push
pop
push
aaa
and
push
pusha
xor
mov
xor
jmp
mov
push
or
adc
clc
out
jp
shlb
dec
add
popa
pop
jecxz
push
inc
add
pop
mov
test
test
adc
rcr
cmp
sahf
out
mov
adc
sub
in
sub
jb
cmp
add
sub
dec
inc
push
int3
scas
mov
insl
xor
pop
add
mov
add
out
push
fisttpl
xchg
sub
jb
mov
cmp
add
and
cmpsl
dec
adc
jmp
jge
outsb
cmpsb
and
call
and
push
rcl
cmp
mov
in
pop
mov
sub
jns
pop
dec
sub
xor
push
movsb
sbb
fstpt
push
dec
scas
insb
sbb
adc
lcall
pushf
sub
loopne
arpl
add
jns
ficomps
add
add
push
imul
aas
sbb
fldt
push
push
mov
jecxz
in
shlb
test
and
rclb
push
inc
ja
adc
xlat
mov
xor
imul
mov
adc
or
js
sbbl
push
test
adc
cmpsl
jno
fldl
sbb
jbe
sbb
cmp
jns
inc
dec
jl
jp
mov
pop
outsl
adc
mov
pusha
cmp
jge
xor
xor
cltd
lret
add
mov
add
and
push
xchg
add
pushw
add
cmpsb
je
scas
data16
sub
push
pushf
add
hlt
push
inc
inc
push
lods
cltd
inc
rclb
lods
jno
sub
mov
push
push
jl
sbb
lea
or
addr16
das
sbb
fisttpll
xlat
rcll
sub
ret
popa
sub
add
xor
mov
jl
lea
xchg
mov
sub
lods
mov
and
mov
push
cmp
jo
imul
dec
gs
roll
and
or
jo
cmp
jmp
cmp
mov
insl
mov
dec
jae
push
fisubrl
pop
push
int
push
mov
or
clc
xor
jl
imul
add
mov
lcall
and
adc
and
push
cmc
jmp
dec
jne
cmp
sub
movsb
into
mov
mov
imul
sbb
sbb
cwtl
cwtl
je
inc
cmc
or
mov
and
imul
mov
cltd
or
mov
and
test
fisttpll
fcoms
or
push
sbb
and
pop
scas
dec
push
int3
cmpsb
test
pop
mov
mov
lahf
mov
push
sarb
pop
adc
mov
loope
push
inc
arpl
das
or
std
xor
xorl
rcll
mov
dec
arpl
sbb
push
inc
push
lcall
dec
mov
push
ja
dec
ret
ss
int
or
pop
outsl
loope
fwait
mov
adc
push
fadd
loop
dec
nop
out
js
jno
jl
pop
pop
sub
mov
xchg
mov
clc
test
cmp
insl
outsb
xor
or
cmp
xor
add
push
movsb
push
push
fcomps
sahf
mov
addr16
call
sub
pop
pusha
ljmp
sub
cmp
xor
lock
insl
xchg
lods
fdivrs
fdivs
dec
or
adc
push
mov
pop
adc
test
mov
mov
adc
inc
add
pop
jmp
adc
sub
and
xor
lds
ficoml
mov
sub
add
cltd
fmuls
or
jmp
xchg
jne
add
adc
push
and
mov
addb
add
pop
and
aaa
or
pop
mov
sarb
pop
out
pop
add
fistl
or
mov
insb
shll
xor
xor
aam
mov
decl
pop
inc
movsb
int3
ss
add
fstpt
cmp
inc
inc
cmp
nop
and
scas
adc
xorb
mov
movsl
xchg
adc
dec
aam
add
lea
loop
inc
mov
adc
pop
sbb
xor
mov
push
in
je
lock
addb
mov
pop
jl
sarb
js
cld
popa
mov
jmp
popa
mov
test
mov
in
cltd
cmp
stc
jmp
mov
dec
dec
mov
jo
mov
insb
push
add
jmp
or
xor
push
or
add
push
addl
pop
mov
insb
xchg
popf
push
aas
dec
sbbl
push
add
cs
inc
sbb
fldt
clc
cs
xor
and
mov
jmp
mov
and
inc
push
mov
pop
pop
push
pusha
push
je
inc
je
xor
cmpl
dec
dec
mov
daa
sbb
inc
sub
lock
lahf
sbb
iret
sbb
mov
xchg
mov
out
outsl
add
jp
pop
bound
mov
jmp
add
das
sub
jo
add
inc
push
dec
xor
mov
adc
std
add
in
inc
jno
sub
push
stc
inc
sub
inc
mov
loopne
xor
lahf
cmp
dec
ss
jbe
push
lods
sbb
adc
clc
lret
push
sarb
adc
sub
cld
add
adc
pop
fsubs
ss
fcmovne
mov
into
jb
outsb
add
jge
dec
mov
rolb
stc
mull
lahf
int
mov
int
jb
aad
rcrl
xor
or
jno
notb
dec
xlat
mov
dec
roll
add
out
xchg
push
push
dec
jne
inc
push
and
insb
inc
push
js
int
cmp
jnp
xor
and
xchg
js
pop
pop
add
jg
and
imul
add
add
pop
jmp
sbb
mov
push
pop
dec
xlat
mov
inc
test
cmp
shl
inc
call
sub
and
xor
cmpsb
jno
xor
ffreep
push
mov
cmp
or
jnp
push
negb
js
cmp
cmp
inc
movsl
call
sub
xor
mov
dec
loope
ret
push
lret
or
xor
aad
xchg
aad
sbbl
adc
fistpll
inc
popl
xorb
push
and
nop
lock
shlb
jb
cmp
pop
xor
cmp
dec
test
lret
inc
dec
or
jecxz
push
fisttpll
push
push
jg
js
popa
mov
aad
lods
cmp
add
add
sub
inc
loopne
push
pushf
daa
dec
mov
jae
dec
sub
test
push
enter
xchg
fwait
push
push
or
ss
jne
cmp
mov
sahf
push
adc
orl
test
fdivl
inc
lea
cs
mov
fs
mov
push
or
mov
es
out
adc
and
sbb
clc
push
jns
push
cmp
or
call
jnp
xor
xchg
or
add
and
stos
das
push
add
or
test
add
jmp
and
adc
int
add
fstpl
sub
repz
sbbb
pop
cmpsl
test
mov
sub
dec
imul
addr16
sbb
dec
arpl
sbb
ffreep
stos
ss
push
loopne
loop
push
call
pop
or
or
jb
add
push
popf
mov
les
push
push
clc
add
pop
mov
roll
adc
divl
stos
cmp
xchg
adc
orl
in
loope
xor
bound
inc
lahf
jne
or
jle
add
add
add
es
cmp
cmpsb
rolb
mov
into
test
cld
jmp
mov
cmp
int
sub
scas
lods
fadd
pop
cmc
add
and
adc
xor
sbb
add
jbe
adc
sbb
jmp
int3
in
cmp
add
and
sub
mov
mov
push
push
jmp
rolb
aad
push
and
add
add
in
jno
push
mov
outsb
add
adc
and
dec
push
sub
sub
xchg
add
add
push
push
gs
or
dec
add
or
inc
hlt
aas
xor
lret
adc
pusha
pop
iret
sub
jno
outsl
pop
dec
adc
mov
aaa
inc
cmp
mov
adc
pop
call
insb
aas
pusha
sub
cmp
pop
mov
negl
push
leave
cmp
lea
sbb
xchg
jg
jg
push
push
push
test
outsl
mov
push
fisttpl
xorb
pushl
pushl
sub
or
xor
pop
jno
sbb
dec
sbb
pop
add
sub
jecxz
aad
hlt
add
and
add
incb
mov
popf
cmp
jp
in
xchg
adc
add
es
and
popf
sub
outsb
dec
xor
data16
inc
adc
add
push
dec
repz
adc
push
mov
dec
xor
xor
mov
inc
insl
adc
orb
jge
fs
pop
push
cmp
push
adc
xchg
fdiv
push
sbb
push
mov
add
test
or
sbb
imul
xchg
adc
or
jl
ja
push
and
jmp
pop
loope
call
cmpsl
outsl
lock
inc
add
inc
dec
bound
into
into
jge
add
test
jl
lea
cmpsb
fstl
push
sbb
xor
aad
xorl
xor
pop
dec
jb
lods
bound
int
clc
dec
cmpl
inc
add
in
sti
push
jecxz
lahf
lahf
sti
test
ret
sub
cmp
fisttps
jns
popf
std
cs
pop
jne
and
daa
clc
or
aam
adc
mov
jle
xor
ja
push
popa
xor
insl
imul
pop
xor
pusha
psubb
push
mov
ss
test
pop
push
push
shrl
mov
xchg
rolb
sub
rorl
sub
mov
incl
or
push
mov
in
or
icebp
sub
or
xor
add
es
cwtl
jnp
pop
and
push
jge
sbb
std
pop
es
adc
push
std
fstpt
rcl
add
adc
popf
cmp
xchg
fbstp
or
and
mov
shlb
call
sbb
or
mov
cmpsl
push
cmp
or
scas
push
inc
arpl
push
xchg
pop
push
ss
leave
cmp
jmp
in
jmp
sbb
rclb
lods
xchg
rcrl
jl
push
adc
insl
sbb
imul
sbb
cmpsb
loope
in
rolb
add
test
mov
aam
add
mov
andl
mov
adc
push
aaa
sub
mov
jae
ret
inc
or
test
inc
adc
sbbl
xchg
and
pop
enter
dec
mov
jne
test
sub
iret
test
or
sbbb
push
adc
push
lods
jp
inc
lds
push
nop
jmp
mov
sbb
rol
imul
lret
vcomiss
ret
rorl
xorl
pop
insl
data16
out
or
and
push
push
xor
daa
pushf
add
rorl
shlb
fwait
jno
ror
sarl
jp
push
adcl
mov
mov
ret
and
push
divb
mov
int
or
and
jns
inc
push
or
aam
inc
sbb
push
enter
orb
xchg
push
adcl
cmc
jmp
hlt
repnz
sbb
and
fadds
and
sbb
jae
fsubrs
add
push
nop
subb
xor
inc
aas
and
xor
addl
cmp
outsb
hlt
cmp
pusha
daa
pop
add
cmp
sub
ljmp
leave
xor
xchg
mov
and
fs
cmpsb
dec
pop
adc
adc
cmpsb
and
mov
dec
dec
aam
and
and
addl
sub
repz
cltd
sub
mov
insl
dec
or
add
adc
int3
mov
push
push
add
jl
sub
test
push
loope
mov
lock
dec
push
push
or
test
mov
pusha
cmpsl
xor
inc
cmp
testl
sbb
call
sub
jmp
loop
adc
dec
rcrb
pop
add
ret
jmp
dec
xor
and
add
push
stc
mov
incl
test
xor
dec
es
and
cmp
sbb
gs
inc
xor
in
out
test
cmp
in
sahf
out
cmp
sbb
inc
cmpsb
pop
adc
repnz
xor
dec
and
cmp
push
push
ficoms
movntq
pushw
mov
mov
repnz
andb
les
inc
rcrb
push
call
sub
or
push
in
add
add
pop
and
push
mov
aad
mov
rolb
mov
lods
loope
and
aas
adc
cmp
jb
mov
xor
xor
jae
pusha
sub
inc
mov
sub
jle
and
cmp
inc
ret
push
mov
push
js
push
movsl
adc
movsb
stos
mov
loope
adc
add
lods
jmp
shlb
mov
push
je
and
pop
pop
or
push
sbbl
xorb
add
sbb
pop
pop
xchg
push
cmpl
stc
add
aas
cmp
popa
pop
mov
loopne
xchg
lods
mov
mov
imul
ret
inc
push
push
add
xchg
pop
loop
mov
push
push
nop
dec
and
or
mov
fnstenv
in
mov
and
dec
inc
inc
call
movsl
jp
mov
jecxz
loopne
add
shl
nop
sub
lret
inc
aam
pop
dec
add
rclb
sub
rcrb
push
cmc
insb
jmp
or
push
mov
or
xor
push
call
sbb
xor
push
add
daa
in
dec
cmp
out
jne
test
xchg
fdivrs
and
scas
hlt
sub
clc
push
adc
sbbb
adc
mov
mov
push
add
int3
add
add
xlat
inc
mov
loop
das
jmp
xor
mov
push
push
dec
mov
inc
imul
mov
or
or
jp
adc
and
gs
test
imul
fwait
mov
addb
or
daa
inc
xchg
push
push
nop
add
js
adc
push
sub
sub
and
inc
push
push
lret
add
movsb
imul
rolb
outsl
or
mov
and
lds
wbinvd
sub
pop
sbb
arpl
push
mov
popa
cmp
pushf
sbb
add
adc
xchg
adc
das
inc
fidivs
pop
sbb
in
mov
loope
or
push
pop
or
xor
inc
sahf
push
push
cmp
pop
sbb
div
dec
subb
add
push
ret
out
call
add
mov
add
loope
jmp
xor
push
mov
ret
inc
or
popa
adc
xor
cmp
test
imul
xchg
xchg
sbb
out
push
xor
add
add
mov
lock
xor
adcb
or
xchg
inc
pushf
pop
push
pusha
xor
pop
jo
nop
sub
or
cmp
pusha
cmp
cmp
mov
dec
cmp
push
js
sbbb
and
leave
dec
rorl
xor
fisttpll
insb
jns
stos
and
cmp
and
pop
pop
in
test
adc
lahf
and
push
pop
sbb
ss
out
jno
cmp
xlat
push
aaa
into
add
mov
adc
push
push
inc
sbb
and
add
mov
les
push
lods
cmp
leave
lock
xor
sub
cmp
or
daa
dec
ljmp
out
or
or
or
xchg
mov
add
test
xchg
adc
jecxz
dec
add
enter
ljmp
sub
sbb
mul
xchg
data16
sub
out
adcb
or
fdivrs
mov
ss
xor
scas
pop
pop
insb
mov
mov
jp
fisttps
test
jmp
pop
jmp
outsl
sub
sbb
pop
or
inc
push
test
dec
repz
popa
xor
stos
jae
and
dec
mov
jl
ljmp
dec
pop
mov
adc
cmpsl
dec
pop
push
je
pop
pushf
into
adcb
cmove
push
or
daa
or
jno
rorl
mov
jp
adc
ss
adc
or
enter
imul
mov
push
gs
add
add
call
pop
push
mov
leave
add
arpl
sub
shl
push
cmp
push
mov
subb
pop
jo
jle
sub
xchg
dec
jle
add
push
rolb
xor
or
jns
and
inc
add
ret
enter
sub
push
dec
dec
sbb
xchg
sbb
insb
cwtl
pushw
and
addr16
enter
xor
test
or
data16
inc
aam
mov
mov
jmp
xchg
mov
lock
adc
and
xor
inc
jne
sbb
aad
in
sub
xchg
adc
iret
push
inc
insl
add
sub
xor
add
imul
mov
mov
and
push
cmp
cltd
jge
xchg
popa
jecxz
in
pop
ds
clc
popf
cwtl
sub
xor
push
pop
lcall
mov
dec
rclb
pop
and
dec
push
aam
popa
loop
xor
jecxz
add
sub
inc
hlt
subb
jo
jecxz
mov
inc
pop
pop
rcl
cmp
inc
cld
cld
or
ret
pop
or
test
add
mov
rcll
mov
adc
push
stc
mov
enter
xor
orb
shrl
adc
sub
adc
pop
mov
xor
mov
pusha
pop
ljmp
ss
xchg
ljmp
mov
adc
add
lret
cmp
ret
inc
in
iret
repz
push
das
ss
cmp
outsb
push
addl
lcall
and
cmp
cmp
cmp
push
push
and
js
add
add
rcrl
adc
push
sub
xchg
jb
push
inc
data16
mov
lock
add
mov
adc
adc
ret
imul
jb
add
lods
lds
pusha
cmp
push
sbb
or
les
mov
enter
cmp
out
adc
add
sbb
int
nop
rcrb
and
dec
js
aam
xchg
sbb
lea
fidivrl
mov
push
cltd
repnz
mov
imul
int3
lods
je
rorb
pop
mov
sbb
cmp
fs
mov
andl
jle
mov
jae
pop
or
adc
ror
mov
dec
lods
adc
mov
xchg
push
inc
outsl
je
jo
and
cmp
aad
jo
sbb
ret
or
scas
adc
mov
sbb
cmp
mov
jnp
call
jbe
xor
adc
sbb
sub
pop
and
jmp
pusha
push
jbe
inc
sbb
cmp
addr16
push
push
and
push
adc
test
jno
jno
call
je
inc
adc
push
inc
fcmovbe
and
test
mov
inc
or
or
inc
popf
sub
xorb
xchg
add
adc
sbb
test
mov
and
sbb
add
sbb
pop
pop
inc
int
in
sbb
movsl
inc
out
pop
add
push
fmuls
sbb
pop
or
or
push
out
mov
push
loopne
ds
aam
jb
cmp
stc
and
rcrl
test
inc
push
push
cmp
jns
jb
jge
add
xchg
lea
mov
out
cmp
and
aam
addr16
push
push
push
int
xlat
push
mov
pushl
orl
xchg
and
mov
rcl
push
shrb
cld
add
push
jae
or
rcrb
and
add
mov
test
inc
mov
mov
cld
notl
iret
imul
cmp
xor
addl
aas
imul
pop
ljmp
jo
push
push
mov
loopne
pop
je
aam
or
adc
shr
push
ret
sbb
xor
adc
jae
xchg
les
and
movsb
rcrl
or
jp
enter
scas
cmp
add
icebp
dec
bound
rolb
push
and
jmp
in
push
ret
and
sbb
mov
mov
test
fildl
arpl
push
mov
fstpl
push
lea
icebp
sbb
fistpl
dec
add
mov
pop
arpl
mov
add
cmpsl
pop
inc
inc
xchg
inc
pop
inc
jb
xchg
adc
pop
cmp
les
add
jb
or
and
adc
sbb
pop
jmp
nop
inc
lcall
mov
and
popa
jecxz
xor
xor
lods
dec
rorb
out
pusha
dec
jecxz
add
test
sub
add
and
mov
add
inc
dec
ret
stos
mov
adc
mov
dec
imul
dec
xorb
or
data16
add
jo
bound
mov
pop
mov
xor
rclb
adc
mov
pop
add
pop
das
jmp
sbb
repz
and
js
lcall
xchg
inc
mov
and
shll
jmp
and
dec
call
add
mov
shll
outsb
je
data16
imul
lods
loop
or
dec
test
cltd
pop
sbb
lea
fs
imul
inc
xchg
mov
cmpsb
jno
fstpt
jg
outsl
aam
ja
push
push
dec
ret
push
nop
out
adc
sub
add
inc
jl
rolb
add
add
ror
xor
sbb
add
shrl
jae
cmp
repz
mov
jns
out
aam
xor
es
pop
push
add
adc
or
das
int3
add
xchg
int3
pop
mov
or
xorb
lcall
int3
xchg
inc
fistl
mov
add
push
mov
testb
dec
xchg
loop
and
shl
and
nop
cmpsb
xchg
les
dec
bound
sbb
ds
into
push
mov
or
sub
mov
or
or
inc
pop
and
pop
cmc
rorb
push
inc
jae
jb
mov
sbb
push
inc
sbb
add
fistpl
mov
mov
lock
pop
jg
sub
nop
testb
xor
mov
sbb
ret
aas
js
pop
pop
xchg
or
jo
jecxz,pn
push
adc
add
loop
clc
inc
lods
adc
jmp
pusha
or
fstps
inc
pushf
adc
sbb
insb
xor
or
and
sbb
inc
add
jae
push
ret
adc
or
dec
movsl
xchg
lret
inc
or
pop
and
xor
inc
xor
and
imul
sub
daa
ds
xor
pop
xchg
jmp
add
cwtl
jge
or
sbb
stos
push
pop
and
xchg
test
in
and
cmp
sbb
popf
inc
pop
pop
xorl
mov
popf
stc
lret
jp
xchg
test
add
and
cmp
loope
mov
xchg
mov
mov
dec
je
and
sub
inc
aaa
xchg
lea
sbb
out
rol
jb
not
mov
push
movb
add
mov
lods
jne
push
aaa
rolb
add
push
and
shl
adc
insb
xor
push
push
mov
or
add
cs
lea
sbb
enter
xor
xor
add
stos
loop
jg
in
ss
pop
fsts
or
dec
movsl
je
dec
jecxz
push
cmpsl
ret
dec
add
mov
sbb
sahf
push
add
pop
sbb
sbb
mov
mov
pusha
addr16
dec
lcall
sub
or
lahf
add
adc
sub
mov
pop
orb
mov
push
pop
cmp
stos
shlb
test
inc
cmp
into
jns
hlt
clc
adc
fsubrl
aaa
inc
insb
xchg
and
call
jne
mov
clc
push
pusha
push
sahf
inc
adc
adcb
adc
mov
mov
pop
repnz
addr16
sbb
into
inc
cmp
dec
in
loop
and
mov
pop
pusha
les
xorb
and
push
jb
sbb
push
push
add
mov
inc
push
pusha
cs
mov
popa
js
inc
push
dec
adc
lret
cld
mov
popa
int3
movsb
inc
mov
pop
cmovg
push
cld
push
xor
loopne
aam
jl
or
push
pop
popa
adc
ret
pop
out
call
dec
loope
add
pusha
push
push
pop
sub
sbb
aam
dec
test
lds
and
sub
sub
cmp
xor
add
push
adc
inc
jmp
js
rclb
adc
sub
or
add
rcrl
jecxz
das
inc
in
mov
pop
xchg
mov
jmp
push
jmp
xor
out
out
add
in
outsb
push
je
xchg
add
or
xchg
sti
sbb
add
cmpsb
xor
sbb
outsl
and
mov
inc
push
inc
leave
ds
and
dec
or
lret
sbb
aad
or
and
xchg
cltd
fcoms
icebp
xor
pop
es
sbb
dec
int
ret
cmp
xor
sub
pop
cmp
jmp
scas
push
fldt
and
or
pusha
cwtl
xlat
adc
call
dec
mov
pop
and
push
sbb
mov
adc
dec
sbb
addl
or
nop
out
sub
adc
add
xor
push
or
arpl
adc
out
pusha
into
fadds
add
sbb
push
es
leave
shrl
or
dec
inc
das
loope
inc
sbb
les
filds
pop
adc
push
sbb
cmp
sbb
and
inc
lret
sub
and
or
or
xor
sbb
inc
add
push
sbb
inc
ja
std
adc
pop
or
dec
add
imul
push
sbb
sbb
movsb
dec
dec
setbe
mov
leave
cmp
adc
sbb
cmc
add
add
jmp
rolb
push
dec
or
sbb
mov
push
adcl
repz
dec
insl
add
je
dec
pushf
or
insl
clc
jb
add
mov
gs
jecxz
dec
sarl
sub
lcall
add
mov
shlb
and
mov
or
mov
bound
xorl
arpl
cld
sub
cs
mov
fcompl
inc
popf
call
in
aaa
push
xchg
jbe
dec
pop
push
push
dec
add
sub
leave
int3
add
and
sti
in
mov
mov
lcall
jno
cmp
loopne
and
sub
add
cmpsb
mov
xor
inc
imul
popf
pop
or
addb
mov
inc
xchg
addb
push
push
or
dec
sbb
into
rcrb
std
popf
std
pop
xor
inc
pusha
xchg
and
aad
and
jle
mov
sub
push
ret
or
pushf
fisttps
or
add
mov
dec
xor
mov
popf
and
push
cmp
fcompl
inc
fs
sti
adc
iret
lahf
mov
dec
adc
out
adc
hlt
inc
push
jmp
into
shl
xchg
loopne
call
ds
enter
jg
push
pusha
push
push
mov
popf
je
js
push
jl
sbb
sbb
rorb
dec
mov
rcll
cmp
ja
xchg
and
nop
rclb
sub
inc
sahf
lret
or
and
aaa
test
cmp
jne
jne
jnp
sbb
sub
mov
repnz
aam
pusha
in
fcoms
loopne
add
fimuls
in
push
dec
in
lock
and
and
cld
push
push
fucomp
das
cmp
fs
pop
lea
adc
in
sti
jns
or
adc
xor
mov
or
xchg
pop
sbb
xchg
add
xlat
imul
add
rcrb
stc
pop
fldl
inc
js
or
movsl
sbb
dec
jo
aaa
xor
xchg
mov
mov
aad
cs
cmp
popl
pop
jmp
test
add
add
data16
fwait
insb
dec
sub
sbb
and
xor
jns
shl
hlt
mov
repz
xor
addr16
and
adc
jns
fmulp
pop
pop
sub
or
stc
sbb
dec
insb
pushf
iret
jnp
pop
iret
mov
sbb
subb
xchg
addr16
nop
or
enter
clc
enter
repnz
cmp
iret
enter
enter
repnz
fdiv
test
lock
inc
xor
out
jnp
ficoms
push
out
sub
mov
cmpsb
fstpt
adc
loope
shrb
jae
mov
and
adc
arpl
sbb
xor
jbe
xchg
xor
adc
pop
dec
and
sub
sbb
pop
jle
inc
mov
xchg
jb
mov
mull
push
jbe
testb
xor
push
sbb
movzwl
xchg
cmp
cmp
mov
imul
mov
mov
lea
xor
jg
movsb
adc
cmp
flds
mov
dec
lea
and
dec
cmp
adc
and
push
je
ficoms
xchg
pop
dec
fnstenv
call
loope
ja
xchg
pusha
add
mov
mov
xor
jp
test
xor
cmp
sahf
aam
xchg
lods
xchg
add
or
mov
std
sbb
adc
repz
mov
add
cmpsl
sbb
push
jg
xor
xchg
pop
inc
sub
movsb
mov
lock
addb
out
mov
fcomi
test
push
imul
lds
or
adc
popa
pop
loope
aad
in
shlb
rorl
je
xchg
add
aam
or
pop
leave
pop
test
addl
add
inc
and
inc
push
push
xchg
addb
pushl
mov
push
push
inc
imul
push
or
push
push
rcll
inc
mov
imul
ret
dec
sub
sbb
adc
sbb
or
sysenter
ficompl
sub
jbe
aas
adc
xor
cmp
pop
lods
hlt
mov
jmp
mov
in
push
mov
push
jno
pop
xchg
cmp
mov
fsts
adcb
das
orl
xchg
add
dec
add
and
cmp
or
ret
fstpt
inc
cltd
xchg
dec
mov
cli
rol
cs
fucomip
mov
push
fcoms
mov
xlat
sub
aaa
mov
pop
aaa
js
test
pop
xchg
aam
fs
gs
mov
adc
or
cmp
jmp
fadds
add
push
orl
iret
lock
or
fsts
outsl
sub
sbb
mov
pop
outsb
mov
inc
dec
in
ss
xorb
adc
sub
nop
or
mov
xor
jge
mov
mov
lea
or
fistl
iret
mov
inc
adc
dec
imul
in
or
jmp
push
mov
mov
and
inc
mov
mov
jmp
jo
je
sbb
test
push
jmp
jbe
push
sbb
xchg
dec
adc
orb
pop
push
push
push
sbb
dec
int
add
ds
addr16
faddl
pop
jmp
lcall
ljmp
rolb
sbb
add
add
adc
add
or
pusha
pusha
pop
ja
inc
pop
loopne
xor
pop
test
push
lods
or
sub
enter
xchg
clc
mov
mov
pop
push
pop
jle
sbb
or
fsts
pop
xchg
movsb
packsswb
or
stos
lock
inc
decb
ret
in
stc
add
andb
push
sub
int
lods
jecxz
pop
dec
vpmaxsw
jb
fisubl
and
fcomps
push
inc
sbb
sbb
orb
mov
mov
jnp
inc
pop
addl
sub
sub
ljmp
adc
sbb
jne
pop
cmc
xchg
push
and
add
pop
bnd
adc
or
and
loopne
das
jmp
flds
loope
icebp
mov
adc
xor
adc
lahf
add
repnz
fiaddl
adc
ret
mov
push
push
sub
outsb
fsubp
sub
or
add
sar
cwtl
mov
sub
lahf
mov
push
cmc
push
pop
add
dec
dec
outsl
cmp
and
shr
enter
lock
jg
iret
push
and
sbb
in
and
add
test
scas
or
adc
pop
push
xor
out
movsb
and
push
mov
pop
push
lea
loopne
inc
psrlw
xchg
xchg
xor
and
scas
and
push
mov
and
add
scas
sub
mov
adc
mov
sbb
add
aad
and
fisttpl
jmp
fisttpll
das
adc
cmp
push
and
daa
int
jne
icebp
push
loop
push
fcomi
and
out
push
frstor
pop
mov
add
add
jecxz
pop
adc
cli
mov
stc
or
or
outsl
enter
in
add
mov
xor
xor
xor
xor
cmp
cmp
inc
or
enter
dec
or
enter
push
add
xor
xor
and
push
adc
insb
jl
add
cmp
lods
jg
or
lret
dec
repnz
shrl
cmp
push
ss
dec
stos
inc
cmp
add
lahf
sbb
jo
lock
pusha
sub
in
pusha
dec
jae,pt
add
fnstenv
pusha
adc
add
sbb
scas
or
sub
or
lds
sbb
jmp
and
popf
pop
jo
jae
lds
les
or
into
adc
shrb
mov
adc
rcr
lea
xchg
push
xchg
ret
push
icebp
dec
add
push
jb
jnp
jno
dec
in
andl
dec
xchg
jbe
xor
jb
clc
inc
movsb
cwtl
outsl
cmpb
testb
dec
leave
add
push
add
inc
mov
sbb
jl
xchg
sbb
cmpb
sbb
sti
xchg
dec
test
adc
fiadds
push
jo
les
add
push
cmp
dec
inc
sahf
je
or
insl
gs
lea
arpl
mov
aad
sahf
sub
pop
jg
add
rorb
pop
xchg
mov
pusha
xchg
out
je
push
push
inc
gs
xchg
sbb
test
inc
or
pop
aaa
and
adc
mov
add
pop
lahf
and
jno
cmpsl
add
inc
decl
xor
cld
movsb
imul
pop
in
lods
scas
fisttpll
mov
sub
pop
adc
cs
ret
icebp
or
push
push
xor
or
lods
cmp
bound
ljmp
xor
xor
sub
cmc
xor
cmpl
hlt
in
jb
lahf
sbbb
jmp
pop
sarl
test
mov
push
stc
dec
add
mov
mov
icebp
test
or
loope
lea
mov
fisubs
icebp
jno
in
mov
mov
pop
cld
fcoms
arpl
jns
insb
mov
iret
rcrl
sti
leave
and
incb
push
or
jp
xchg
and
popf
cmp
scas
push
push
gs
cmp
mov
sub
mov
cmp
notl
push
or
pusha
icebp
or
adc
add
xchg
inc
aaa
pop
and
dec
or
cmc
push
or
and
pop
push
roll
sbb
sub
or
dec
dec
loope
imul
cmp
push
pop
adc
mov
push
bound
or
or
subl
sub
subb
cmp
clc
arpl
in
pop
sbb
int3
dec
inc
mov
lock
in
mov
sbb
jl
js
add
mov
sub
loopne
mov
adc
push
adc
je
call
and
imul
imul
dec
je
scas
xchg
xchg
cltd
inc
push
adc
ss
mov
mov
pop
jg
jbe
test
push
mov
and
cld
loope
aad
add
pop
pop
add
scas
repz
mov
mov
mov
out
mov
cmc
jle
ljmp
dec
je
iret
mov
out
jae
ret
scas
adc
scas
pop
mov
cld
jge
add
adc
dec
add
add
or
sub
push
pop
mov
lahf
add
insb
cmp
cmp
inc
rorl
out
mov
mov
sub
testl
mov
and
and
out
leave
add
pop
test
push
sub
xchg
in
fcoms
fistpl
cmp
leave
push
or
inc
pop
fbstp
dec
cwtl
xchg
sbb
insb
fildl
push
push
cmp
adc
ret
pop
aaa
outsb
mov
jno
push
mov
jns
mov
or
test
sbb
sub
cmp
mov
popl
lock
rorl
cmp
push
push
jnp
inc
es
jns
loopne
loopne
push
pusha
mov
js,pt
or
jl
or
sbb
out
xchg
rcr
sub
cmpb
pop
adc
stos
mov
mov
pop
push
lea
fidivs
je
xor
or
add
js
fnstcw
xlat
hlt
adc
ret
arpl
std
push
push
jp
jb
data16
and
adc
mov
js
shr
jl
loopne
dec
xor
dec
add
xor
xor
cmp
cmp
push
xor
mov
xchg
les
xor
rcrl
sbb
cmpsl
pop
inc
push
pop
lock
mov
sub
inc
shl
outsb
sbb
and
mov
arpl
and
push
add
xor
mov
or
xor
mov
cmpsl
fiadds
jmp
jo
je
ficoml
jl
or
lret
test
test
push
jns
add
pusha
inc
xchg
je
and
movsl
add
dec
aaa
ret
mov
jl
mov
dec
pushf
xchg
cmp
lods
add
maskmovq
testl
rcrl
addl
jle
cli
lods
repnz
pop
dec
push
cmp
sub
mov
sbb
mov
imul
sub
lods
dec
popf
push
in
test
push
sbb
cmp
push
aam
xor
jle
pop
push
pop
daa
add
cmp
push
pop
xchg
add
adc
test
sarb
push
push
pop
add
and
adc
pop
and
in
xor
sbb
jmp
push
xchg
sbb
xchg
test
push
mov
cwtl
cmp
xchg
sbb
jl
mov
mov
xor
pop
cmpsl
jo
and
add
add
adc
lock
and
add
mov
ret
cwtl
jecxz
rcrb
nop
mov
mov
mov
das
sbb
mov
push
mov
push
pushf
mov
jae
push
push
lock
xchg
mov
loope
clc
push
dec
sbb
pusha
dec
and
pop
xchg
cltd
inc
adc
in
mov
xchg
xchg
movsb
ss
cwtl
sbb
pusha
insb
inc
xor
lods
xchg
ss
sarb
mov
jp
pop
insb
and
dec
xor
push
mov
add
arpl
imul
test
or
cmpsb
or
je
and
jg
inc
leave
inc
sub
in
leave
inc
pop
test
in
in
mov
call
sub
mov
rcrb
movsb
rcr
add
adc
test
add
sbb
fldl
mov
testl
or
mov
mov
pop
rclb
add
xchg
stc
test
inc
mov
lea
shlb
int
shll
mov
xchg
push
sub
je
out
movsb
push
pusha
mov
rorb
inc
in
aam
andl
inc
add
cli
add
lods
lods
mov
sbb
dec
sarl
lods
das
jae
xor
fsubl
leave
je
inc
push
rcr
clc
push
cs
faddp
fld
mov
mov
inc
or
sub
add
imul
adc
jl
jmp
sbb
jge
cs
ljmp
mov
shl
pop
pop
xchg
xor
dec
cmpsb
or
mov
icebp
jb
sarl
add
cmp
rorb
lret
jmp
xchg
test
add
pop
rolb
xor
xchg
fbstp
pusha
jle
or
or
or
mov
imul
clc
mov
test
add
add
out
xchg
fldcw
ljmp
sub
xadd
jnp
sub
and
shl
pop
jge
aaa
les
js
mov
sub
mov
clc
dec
jmp
not
les
sub
and
mov
push
cmpl
pop
adc
or
addl
test
inc
xor
sub
and
cmc
bound
mov
lret
js
push
pusha
fstpt
decb
arpl
add
cmpsl
iret
imul
push
or
and
jnp
cmp
add
nop
pusha
imul
std
mov
ljmp
outsb
mov
sub
and
jb
sub
sub
lods
xchg
jae
pop
and
xlat
push
repz
test
mov
cwtl
inc
and
adc
or
bound
inc
mov
imul
inc
lea
or
xor
pop
aam
les
pop
cmpsl
mov
push
mov
bound
mov
inc
gs
gs
dec
bound
or
or
dec
pushf
push
cmp
or
stc
inc
push
or
or
add
mov
je
inc
add
add
or
add
bndstx
pop
and
fbld
adc
add
or
cmpsb
or
and
xor
stos
inc
or
stos
xor
ret
out
xchg
fistpl
inc
sub
push
lcall
xchg
ss
jle
jmp
jmp
inc
imul
push
cwtl
imul
mov
sbbb
adc
and
xor
sarl
popa
push
inc
mov
lods
mov
dec
mov
pop
hlt
mov
xor
sbb
xor
pop
movzwl
pop
push
xor
xor
int3
xor
stc
adc
sti
and
outsl
movzbl
loop
call
push
mov
add
jo
fwait
dec
bound
dec
and
or
inc
or
xchg
and
pop
push
loope
and
mov
push
or
pushf
adc
and
mov
mov
insb
imul
fimull
mov
pop
xor
adc
dec
mov
push
lds
jns
dec
sbb
adc
sub
add
push
or
add
outsl
test
push
adc
add
stos
add
cs
dec
inc
or
lret
lahf
daa
inc
add
imul
scas
inc
and
dec
fcoml
adc
rolb
xor
xorl
inc
sbb
scas
loopne
inc
pop
mov
adc
movb
xchg
sbb
ljmp
inc
push
or
xor
pop
or
adc
adc
call
push
sub
add
or
push
int3
push
mov
mov
jge
repnz
mov
leave
inc
sbb
and
push
adcb
lods
lcall
lock
adc
add
xchg
push
cltd
jmp
and
jo
pop
aaa
in
push
add
jg
jmp
cmp
gs
adc
aam
iret
pop
add
or
fnclex
mov
push
sbb
jb
dec
add
or
and
adc
fdivrs
push
cmp
mov
cmp
jns
add
inc
pop
seta
push
or
pop
or
call
cmp
inc
fs
jne
in
mov
xchg
sub
or
pop
cmp
xchg
add
add
inc
push
xchg
push
push
pop
cwtl
mov
fwait
adc
ja
into
xor
imull
sbbb
ficompl
flds
or
test
and
add
or
fwait
mov
lret
and
jmp
je
dec
int
or
push
adc
or
shl
push
arpl
lcall
dec
ss
data16
fisttps
and
aam
out
sbb
pop
outsl
lret
push
lds
test
aam
pmulhw
sub
sbb
adc
xor
lods
mov
jb
add
jns
bound
and
sub
or
sarb
jp
mov
push
sbb
cmp
hlt
push
imul
and
pop
and
mov
and
test
adc
cwtl
rclb
inc
pop
dec
lods
dec
hlt
rclb
mov
add
add
shr
nop
ds
and
push
mov
dec
daa
pop
push
bound
loop
xor
add
mov
push
js
push
dec
inc
repz
insl
test
push
pop
and
ljmp
jne
cmp
cmp
push
lret
shr
push
shl
nop
push
sub
inc
xchg
adc
and
or
jl
sbb
test
and
dec
dec
dec
fwait
cwtl
jno
add
xor
cmp
lock
out
and
sub
xchg
sbb
pop
cmp
jnp
push
push
jmp
pop
fs
and
sub
pop
push
pop
cmp
lds
xor
mov
js
jns
xlat
add
xor
mov
loope
sti
lret
xorb
imul
mov
push
enter
and
in
and
sbb
sbb
adc
pushf
and
xor
mov
insl
mov
sub
jb
push
stos
cwtl
sbb
jbe
das
rcrl
add
inc
push
sbb
or
jno
mov
inc
pop
cmp
push
dec
hlt
cmp
and
or
or
and
out
rclb
add
dec
add
addl
rcrl
popa
adc
xchg
test
inc
jne
out
sbb
xchg
push
popf
movsl
ss
xorb
rclb
push
subb
rcll
sbbl
or
cmp
dec
cmpsb
add
stc
aam
lea
cmp
or
push
cmp
pop
and
xchg
sbb
or
imul
sbb
push
mov
stos
invd
out
sub
push
add
addl
lret
xor
inc
sbb
das
hlt
jbe
outsl
int
xor
icebp
lahf
ret
aas
sub
dec
jmp
dec
sbb
adc
fwait
add
sub
lock
pushf
fld
out
hlt
leave
push
pop
push
xchg
push
adc
mov
inc
je
sbb
sub
jo
cltd
mov
jge
sub
ds
add
loopne
sbb
inc
or
lods
push
push
dec
cmp
mov
lea
imul
jno
add
es
add
stc
dec
imul
adc
xor
test
inc
pop
pop
xchg
sbb
clc
shlb
sbb
arpl
push
dec
out
lock
pop
fisttpll
shlb
or
push
add
mov
sub
daa
sbb
or
push
pop
push
mov
test
add
or
popf
sbb
mov
movsb
mov
loope
or
cmp
sub
pop
jne
loope
or
hlt
lods
jne
add
adc
adc
adc
cmp
cmp
dec
inc
jne
push
das
je
gs
cs
fwait
hlt
jnp
mov
mov
cmp
dec
cmp
adc
pop
jmp
push
jecxz
pop
push
jmp
xchg
cs
mov
es
add
loopne
push
iret
mov
mov
cmpb
movsl
sub
pop
cmp
test
movsl
addl
push
add
mov
dec
adc
nop
mov
nopl
jo
pop
sbb
xchg
mov
movups
xor
mov
inc
add
push
add
popa
in
dec
add
mov
pop
add
add
or
adc
stos
sub
add
pop
daa
add
sbb
mov
jbe
scas
add
leave
xor
or
aad
push
jmp
cmc
or
mov
aad
mov
inc
mov
orl
add
pushf
cmpb
adc
fwait
andb
dec
scas
dec
enter
push
dec
sbb
jbe
fcmove
nop
pop
dec
adc
into
xchg
fmulp
and
cmp
and
sarl
imul
call
es
jnp
movsl
lahf
fwait
test
mov
hlt
sbb
mov
nop
data16
imul
mov
add
ja
jmp
xchg
push
xor
js
sub
jno
add
bound
push
mov
loopne
jb
loop
adc
xchg
ja
insb
mov
fsubrs
or
es
das
pop
jbe
push
add
je
movsb
and
lods
push
lea
jge
ret
cltd
add
adc
dec
test
mov
push
nop
aaa
lds
lods
popl
jae
popa
add
arpl
push
mov
inc
mov
sub
inc
jne
push
int
add
push
push
sbb
shrb
movsb
cmp
fldt
imul
inc
fcoms
or
and
imul
jne
pusha
jmp
clc
inc
xchg
jmp
lcall
inc
mov
and
mov
mov
push
es
inc
loope
outsb
nop
popf
incb
sbb
js
jecxz
sub
mov
sbb
dec
test
loope
inc
dec
mov
in
roll
add
add
sub
pop
aam
cmp
add
xchg
push
sbb
out
mov
fs
pop
insb
or
adc
imul
sub
dec
scas
movsb
lret
cmp
test
imul
sar
out
dec
or
or
inc
js
test
subl
mov
pop
push
sub
cmp
out
notl
jl
jb
jbe
je
popa
je
out
out
push
je
jae
push
dec
je
push
out
dec
je
outsb
je
dec
je
outsl
je
push
dec
sbb
push
je
fdivrs
rolb
insl
add
or
lret
addr16
addb
add
insb
and
push
push
or
push
add
ljmp
addl
push
sbbb
adc
push
cmp
loopne
and
sahf
adc
cli
aas
out
mov
add
and
sub
jo
fs
sahf
mov
push
dec
adc
add
into
aaa
add
add
movsb
pop
mov
mov
shlb
mov
fwait
jo
adc
push
inc
push
add
pop
or
and
lret
mull
xchg
jle
pop
pop
sbb
testb
add
dec
inc
js
xlat
scas
aad
es
add
lahf
sbb
add
dec
push
cmp
inc
cmpsb
shll
push
cmp
les
mov
push
repnz
xor
lods
jg
dec
nop
or
aad
out
sub
std
iret
test
dec
dec
repnz
add
cli
inc
or
adc
rcrb
enter
push
or
nop
lahf
or
sub
pusha
mov
jae
inc
addb
test
andb
sub
je
push
push
sub
fstps
jg
loopne
nop
out
or
repz
and
jo
and
xor
rcl
jns
rcll
or
enter
clc
or
add
sbb
cmp
sub
cmp
fadd
loopne
scas
sub
mov
pop
mov
notb
pusha
pop
add
xor
jno
sub
sub
imul
xor
sub
sub
loope
pusha
and
cmp
xchg
dec
pop
pop
mov
cmp
dec
sbb
jbe
int3
xlat
add
pop
add
sbb
fldcw
shll
push
aam
jge
jbe
cmpsl
or
shlb
and
das
loope
xchg
dec
push
lock
ja
ficomps
aas
pop
inc
xor
movsl
jbe
inc
inc
inc
add
jae
jo
xchg
leave
leave
and
adc
mov
jbe
adc
mov
push
sbb
jbe
scas
mov
outsb
adc
push
lret
shll
push
mov
push
adc
stos
sbb
fiaddl
cmp
push
cmp
lret
mov
aaa
rclb
add
jne
push
or
push
add
loope
pop
jp
xor
ds
faddl
jbe
stos
inc
dec
sbb
xor
adc
dec
and
cmp
jbe
lea
adc
push
cmp
push
or
xorl
imul
jge
mov
les
pop
or
call
dec
and
sbb
and
sub
aas
push
or
add
popa
sub
jo
das
fcompl
and
add
dec
mov
adc
inc
cli
jg
fs
add
mov
push
mov
pop
push
adc
xor
mov
cmp
push
push
rolb
dec
xchg
mov
inc
sbb
jle
cmp
push
cmc
inc
pop
or
inc
add
clc
ffreep
push
pop
push
pop
dec
push
pop
aaa
xchg
dec
cmp
add
add
cmp
inc
rcrb
and
into
xchg
les
scas
and
push
push
test
adc
mov
inc
jno,pn
je
and
lods
mov
test
xor
cltd
ret
jmp
sbb
shrl
dec
jmp
or
mov
add
decl
imul
pop
lret
addl
jmp
or
xchg
adc
add
pop
jnp
cmp
andl
js
pusha
lods
insb
lar
jl
xchg
in
fadds
jmp
sbb
loope
adc
push
mov
movsl
or
leave
add
mov
push
inc
jge
dec
or
pop
xor
cwtl
sbb
add
rclb
xor
xchg
push
nop
sbb
mov
cli
and
sbb
mov
scas
or
or
leave
adc
xchg
mov
sub
sub
sub
rcl
inc
push
aam
xor
add
imul
push
rorl
stos
and
add
fwait
in
cmp
mov
inc
and
jmp
pop
sbb
cmp
enter
dec
pop
push
mov
leave
mov
sub
sub
pop
dec
arpl
adc
cmp
mov
jl
pushf
mov
rep
add
or
jge
add
loope
fs
mov
pop
xchg
adc
mov
int
in
jb
cmp
cmp
dec
or
xor
pop
je
stos
or
xchg
mov
test
popa
or
jmp
pop
xchg
push
mov
lret
mov
sbb
push
mov
mov
and
mov
imul
push
cld
test
xor
pusha
xchg
pop
je
or
xchg
inc
dec
nop
cmp
in
pushf
sub
aas
sbb
or
cmp
mov
out
fwait
stos
sub
mov
test
or
add
mov
inc
cmpsb
jnp
inc
scas
in
inc
cmc
push
pop
cltd
add
nop
jb
mov
inc
lret
and
dec
or
cmp
mov
dec
sahf
ss
fcoms
sbb
dec
push
sub
jae
arpl
jbe
add
stc
arpl
pop
pcmpgtw
rcrb
sub
mov
sbb
int
push
or
push
and
pop
jae
dec
addr16
and
and
bound
or
mov
cs
mov
xor
or
shlb
push
mov
or
or
jmp
mov
aaa
mov
in
jp
insl
push
mov
xchg
sub
adc
jne
adc
jbe
sub
fists
add
or
ret
add
mov
gs
xor
cmp
imul
movsb
sti
adc
cmp
push
sbb
push
xor
jmp
xorb
add
and
outsb
xor
dec
add
adc
or
mov
cwtl
js
cmp
sub
inc
push
test
nop
mov
sbb
add
subb
adc
push
mov
lock
xchg
sub
lret
add
and
jne
or
push
inc
int
inc
or
adc
mov
push
jnp
lock
cmp
adc
wbinvd
cmp
push
je
cmp
adc
xor
scas
xor
inc
adc
adc
adc
push
enter
cwtl
pop
sti
push
dec
add
add
sbb
lock
sbb
sbb
pop
test
stos
mov
dec
xchg
jne
cld
and
fs
add
push
ret
inc
jnp
cmp
push
pop
pop
push
adc
jne
dec
push
test
wbinvd
inc
fisttps
in
push
mov
jbe
lcall
cs
ljmp
dec
or
inc
inc
sbb
popfw
fs
mov
cmp
aaa
loopne
add
inc
cmp
loop
jg
js
inc
jne
or
dec
add
stos
adc
loop
je
mov
add
pusha
test
imul
insb
decl
cmpsl
dec
in
and
sahf
cmpsl
in
cmpsl
out
je
add
push
mov
lods
push
aam
movl
mov
add
ret
adc
es
mov
push
rorb
mov
adc
push
and
test
add
shll
stos
cs
sarb
das
jl
notl
inc
popf
not
push
cmp
push
into
jno
inc
xor
adc
rcrb
mov
and
addr16
sbb
mov
push
adc
loope
inc
insl
pop
push
inc
outsb
mov
lds
je
rolb
add
add
movsl
addl
inc
xchg
inc
sti
adc
and
lock
dec
rolb
shll
shl
fdivrl
cmp
xadd
push
push
int3
add
xor
ljmp
cmp
adc
dec
les
leave
push
sub
test
pop
cmpsl
gs
or
sub
inc
and
jl
push
and
out
xchg
clc
pusha
sbb
icebp
out
sub
jge
and
cwtl
and
pop
mov
xorl
aaa
test
sub
mov
jo
cmp
mov
add
cwtl
test
stos
sbb
jbe
xor
mov
or
mov
loopne
fwait
shrb
jb
xchg
xacquire
sub
adc
rol
xor
int3
and
xor
stos
inc
jp
loopne
nop
dec
and
adcl
imul
roll
mov
push
inc
fs
sub
and
sbb
pop
jo
loopne
in
pop
inc
dec
fwait
pop
add
and
sub
pusha
pop
cmpsl
fiadds
dec
gs
jbe
or
shll
sub
and
push
xor
icebp
pop
jg
push
or
push
cmpsl
lock
xorl
imul
add
jns
add
shrl
sub
jp
mov
or
adc
sti
push
xchg
adc
pop
ffreep
adc
sbb
or
mov
add
pop
gs
mov
dec
loope
sbb
or
inc
push
outsb
xchg
sbb
mov
and
jecxz
adc
sbb
popa
mov
faddl
inc
stc
jl
inc
jns
ljmp
inc
test
cmp
xchg
sbb
jbe
sbb
mov
sbb
jne
movl
icebp
arpl
xor
or
add
push
or
mov
les
addl
cmc
adc
sbb
ret
adc
xlat
int
fbstp
jb
popa
xor
fisttps
out
imul
and
lds
or
rolb
xchg
lods
ss
jg
sub
mov
int3
sbb
stc
clc
cmp
pop
loop
jae
or
mov
mov
fsubrs
mov
movsb
rorb
mov
inc
mov
cmpsl
dec
pop
xchg
insl
push
pop
shl
pop
dec
mov
aam
dec
dec
sbb
push
push
insb
push
inc
dec
das
lahf
lret
sub
xor
push
pop
add
in
and
pushf
pop
dec
aaa
pop
js
cmp
mov
sbb
mov
aaa
push
cs
loope
ret
sbb
stc
pushf
hlt
add
xlat
push
rcrl
xchg
push
mov
xor
test
sub
ret
xchg
les
and
sbb
xor
iret
push
popa
push
dec
lret
sbb
sub
or
mov
push
pop
clc
fsubp
sti
cmpb
clc
int3
dec
cli
dec
stos
dec
ret
push
repnz
push
jo
sub
mov
or
imul
or
xor
incl
cmp
push
jge
adc
in
mov
or
stos
pop
jo
push
aam
add
jmp
imul
or
imull
adc
or
gs
pop
jge
and
and
shlb
sub
filds
or
ljmp
imul
or
push
jno
test
mov
lock
mov
dec
mov
add
push
push
xlat
iret
loop
pushf
data16
sbb
sbb
jnp
or
cld
inc
cmp
sub
js
jo
xorl
push
pop
and
inc
ret
lea
cmp
add
lds
pop
aas
lret
jb
jl
imul
int
test
push
mov
pop
insl
sbb
mov
out
add
mov
xchg
sub
lret
rorb
xor
xor
xor
and
sbbb
inc
lock
das
xchg
inc
push
jl
test
sbb
and
and
mov
dec
push
fiadds
inc
mov
jae
add
jmp
add
add
push
ss
sbb
pushf
jno
push
xor
or
pop
insb
dec
xchg
rcrb
add
call
pop
pop
mov
pusha
arpl
aas
and
add
push
xor
xchg
test
xor
pushf
sbb
mov
je
out
sbb
adc
stos
xor
push
sub
mov
mov
sbb
insb
mov
enter
pop
lds
push
xchg
push
xor
sahf
adc
cmpsb
popa
mov
lcall
movl
bound
dec
js
sarb
lahf
adc
cmp
xchg
mov
testl
adc
into
jl
lcall
jae
sbb
in
jle
mov
xchg
or
adc
aas
je
les
faddl
or
add
and
loop
adc
and
xchg
cltd
sti
add
or
lock
sahf
and
ret
ret
or
dec
or
fsubs
sbb
dec
xor
aas
push
push
xchg
adc
jmp
mov
imul
mov
or
or
pop
mov
or
cmp
cltd
sub
mov
stos
mov
and
xchg
mov
sub
or
inc
jle
adc
or
lea
pop
add
mov
adc
cmpsl
push
add
hlt
mov
in
add
outsl
loop
inc
inc
pop
or
bound
or
scas
inc
mov
mov
addr16
xor
cmp
sbb
sbb
les
outsb
loop
repz
jno
push
jno
ret
call
jl
mov
les
cmovnp
push
je
mov
push
test
dec
push
inc
and
or
xor
cmp
push
and
loopne
sub
xor
mov
xor
sbb
je
mov
out
push
clc
push
xchg
sbb
mov
nop
fwait
and
test
add
test
loop
pop
and
fwait
mov
ret
adc
and
je
lods
mov
or
xor
jnp
add
push
sti
lahf
xor
mov
xchg
inc
flds
cmpsl
adc
or
fisubrs
jg
jmp
pusha
sub
insl
mov
in
xchg
or
arpl
sub
dec
pop
aas
dec
sbb
sbb
pop
push
mov
repnz
sub
mov
ss
mov
adc
or
jmp
mov
and
add
out
xchg
jo
mov
sub
and
xor
mov
loopne
insl
mov
pop
mov
pop
sbb
push
movl
subl
stc
fnsave
bound
pushf
or
or
and
dec
pop
out
pop
pop
add
outsl
pop
dec
out
mov
pop
xor
test
add
stos
push
outsl
or
fcomps
xor
insb
sub
dec
pop
nop
cmpsw
dec
or
mov
pop
testb
add
or
add
or
adc
jge
test
pop
aas
add
jns
movsbl
mov
push
aas
mov
fimuls
mov
or
movzwl
mov
int
stos
dec
sti
bnd
jno
sub
mov
flds
push
push
in
fcoms
adc
add
daa
inc
fildll
xor
and
dec
lods
pop
mov
or
xor
js
out
enter
jo
nop
xchg
push
or
inc
cmp
push
xchg
mov
and
in
sub
imul
pop
sub
push
and
pop
push
pusha
and
dec
mov
orb
ret
dec
lds
or
nop
adc
and
nop
pop
add
sarl
test
pop
sbb
mov
add
cmp
fistpll
cmp
adc
loopne
outsl
add
jb
xor
fimull
ja
call
mov
repz
movsl
std
mov
inc
sub
negb
mov
pop
das
lahf
xchg
dec
inc
lcall
mov
sbb
popa
adc
dec
push
push
out
push
mov
rcr
popa
aam
mov
js
or
push
xchg
ds
jns
ficomps
or
push
int3
jle
flds
pop
push
pop
mov
outsl
mov
push
push
pusha
jg
pop
rcrl
in
mov
sub
pop
xchg
dec
pop
and
sahf
outsb
int
aaa
daa
cwtl
stos
push
mov
shl
push
adc
fnsave
mov
jg
or
cmp
fistl
pop
dec
lea
mov
jg
push
nop
pop
add
enter
sub
orl
adc
pop
jne
adcl
xor
jg
nop
nop
xchg
rcr
in
xlat
sub
test
or
push
cmp
adc
xchg
mov
shr
loop
push
jns
pop
repz
pop
and
scas
ljmp
add
sbb
fiaddl
std
inc
fiaddl
jbe
pop
ret
mov
mov
mov
jb
push
xlat
aaa
inc
int3
mov
mov
jnp
movsb
mov
inc
add
dec
add
mov
adc
orl
add
dec
adc
vrsqrtss
mov
addb
addb
inc
add
loopne
adc
push
js
adc
add
cmpsb
ret
push
movsl
add
push
adc
push
inc
xchg
push
and
pop
push
mov
daa
fldcw
cmp
pusha
mov
adcl
pop
sbb
les
cmp
lea
xchg
pushaw
das
pop
out
sbb
or
adcb
add
or
inc
andl
sbb
xor
repnz
push
out
mov
sarb
push
in
add
nop
sti
je
cs
inc
repnz
pop
sub
jae
push
ljmp
inc
jmp
mov
pop
movsb
dec
das
nop
shufps
cvttps2pi
xor
or
orb
rorb
dec
fstpl
outsl
and
movl
dec
andb
je
sub
pop
lret
pop
pop
popf
mov
adc
iret
fwait
rcll
inc
xor
add
inc
imul
xchg
add
inc
pop
and
in
push
in
adc
pop
jb
dec
andl
pushf
cld
bound
pop
xor
aaa
cmp
jl
mov
and
stos
sbb
add
enter
lods
and
or
mov
inc
popa
andl
std
mov
pop
xlat
pop
inc
sub
ret
mov
inc
push
xadd
jne
rcll
jno
xor
mov
lea
add
cli
push
loopne
stc
int3
sbb
insl
out
inc
push
aas
mov
dec
pop
mov
or
push
mov
ret
xchg
adc
adc
and
pop
sub
rolb
ljmp
divb
je
sub
mov
xchg
inc
add
xchg
xchg
and
cmpsl
rorb
cwtl
lock
lea
jo
and
pop
or
jle
push
das
cmpl
addb
jmp
fistpl
sub
cmp
loopne
cltd
xchg
inc
and
add
pusha
push
mov
add
inc
sub
sub
push
shrb
movsb
not
mov
nop
xchg
rcl
in
mov
mov
scas
ja
jo
mov
call
pop
and
movsl
push
adc
inc
lock
mov
adc
data16
xchg
nop
inc
orb
enter
test
add
add
jne
jmp
jecxz
push
push
and
sbb
cmp
nop
fs
dec
push
pop
pop
or
mov
sbb
cs
inc
cmp
push
or
inc
pop
inc
inc
push
cs
xchg
dec
imul
cltd
testb
pop
ds
arpl
out
inc
or
dec
xchg
sub
pusha
cmp
pusha
adc
push
or
adc
adc
add
cmp
cli
push
add
nop
inc
subb
push
or
push
mov
stos
xorb
jb
xchg
nop
pop
add
mov
pusha
xchg
shrb
jecxz
fisubl
pop
mov
cmp
incl
aam
mov
std
push
out
mov
test
pop
lock
inc
jne
shll
dec
sbb
incb
sub
dec
push
insl
add
leave
inc
inc
out
pusha
push
add
lret
sar
push
mov
inc
jl
arpl
pop
or
xchg
andl
and
cmp
sbb
ret
sbb
xor
push
add
leave
dec
cmp
push
adc
subb
push
add
and
popa
and
outsb
shll
push
lahf
cmp
cld
insl
addb
je
imull
insl
adc
es
adc
dec
out
lods
testb
in
mov
or
ds
bound
jmp
lret
lret
mov
jo
cmp
roll
push
dec
mov
inc
lods
mov
mov
jecxz
inc
dec
jno
ret
xlat
push
or
pop
sub
mov
popf
push
aad
bound
mov
mov
arpl
movsl
rcrb
sahf
pop
mov
or
push
dec
add
xchg
push
emms
dec
cmpsl
cmp
pop
sahf
inc
cmp
push
adc
lods
nop
lock
xchg
xor
push
push
adc
rcrb
adc
cld
out
lds
dec
arpl
sub
loope
mov
or
adc
sub
cmp
sbb
jne
test
and
ss
pop
mov
mov
scas
push
mov
push
xchg
and
and
fisubrs
dec
add
and
sbb
push
add
in
push
lcall
shrl
push
push
inc
or
clc
sbb
out
lret
push
xchg
mov
push
xchg
addl
push
jno
insb
add
mov
hlt
pop
adcb
adc
inc
inc
iret
sbb
pop
adc
inc
sub
xchg
sub
mov
dec
or
xorl
and
push
je
mov
dec
push
loopne
test
ljmp
push
or
imul
mov
push
add
mov
stos
or
mov
gs
mov
push
mov
push
xchg
aam
push
cmp
stos
push
dec
jge
or
jnp
add
mov
add
rcrl
jo
pop
pop
mov
lahf
jge
adc
insb
mov
pop
adcl
cmp
pop
fs
fld
inc
adc
push
jb
sbb
aad
mov
aaa
and
jb
mov
mov
cwtl
imul
xor
push
inc
push
push
sbb
mov
push
add
sbb
jns
cmp
cmp
ds
push
push
cmp
inc
mov
arpl
and
xor
adc
inc
lea
sbb
push
or
dec
cmp
lods
inc
ret
or
lret
dec
dec
add
mov
pop
cmp
mov
inc
dec
daa
sub
jmp
fnstenv
cld
and
add
jb
cltd
push
xor
adc
jmp
add
push
lods
insb
popa
push
sub
and
adc
mov
push
xchg
add
inc
or
mov
xchg
pop
movsl
inc
sub
add
ss
shlb
xchg
mov
mov
je
lret
dec
cmp
insl
in
push
lahf
das
cmp
mov
stos
mov
sahf
add
push
inc
xchg
bound
sub
gs
pop
shlb
add
push
push
ljmp
mov
data16
dec
pop
sub
and
xor
test
dec
fsubrl
and
mov
fs
mov
inc
dec
adc
sbb
sahf
add
and
push
push
pushf
mov
push
adc
xchg
mov
bound
pop
aam
ja
or
xor
iret
mov
cmc
mov
or
rolb
int3
xor
call
inc
movsl
mov
jns
sub
pop
and
adc
popf
adc
insb
adc
cmp
cmp
and
sbb
test
push
add
dec
mov
shll
push
adc
fnstsw
or
gs
push
sbb
pop
mov
movsbl
nop
dec
sbb
add
fnstsw
mov
jle
mov
fistpl
sub
and
xchg
loopne
push
cmp
push
in
inc
call
or
and
adc
dec
jle
xchg
or
cmp
sbb
movsl
cmp
fsubrl
xor
push
imul
loope
or
in
push
add
sbb
aaa
test
xchg
nop
gs
mov
dec
jae
add
lea
and
add
aaa
roll
testl
ret
out
addr16
loopne
add
sbb
or
inc
dec
mov
xchg
push
pushf
pop
sbb
add
inc
pop
out
mov
adc
add
stos
movsl
ret
in
sub
add
imul
xchg
push
push
inc
shrb
xor
fsubrl
cmp
sbb
mov
xlat
lcall
mov
sub
add
mov
push
stos
push
or
push
mov
jae
shll
dec
xchg
rcrb
popa
gs
dec
inc
movsb
int
add
jmp
or
sbb
cmovle
mov
adcb
dec
xchg
mov
jle
pop
add
sbb
pop
or
jl
inc
bound
fistl
adc
or
or
inc
lods
push
in
addb
adcb
inc
jp
lcall
test
cs
outsl
mov
movb
cs
clc
mov
pop
in
or
sbb
jecxz
mov
into
stos
shrl
fucom
je
push
test
lock
adc
pop
ret
inc
mov
leave
enter
mov
movsl
or
inc
add
insl
jecxz
jmp
sub
ret
cmp
adc
mov
les
dec
in
cmp
loop
call
push
clc
jl
mov
aaa
insl
sub
lret
inc
dec
add
cwtl
pop
push
add
nop
int
add
sub
lcall
je
xor
addl
xchg
mov
popa
arpl
xor
das
sbb
xchg
sub
das
push
stos
or
arpl
cltd
inc
fisubrs
mov
add
jmp
flds
xor
adc
pusha
fnsave
into
or
rol
sub
pop
aas
stos
movsb
jb
mov
jne
inc
inc
inc
add
pop
lods
es
pop
insl
adc
or
mov
outsb
iret
repz
jae
pop
inc
push
sahf
out
fidivl
ss
cmp
fadds
loopne
xor
push
ss
je
imul
loopne
xchg
or
mov
inc
iret
xor
enter
push
xchg
xor
xor
jae
xor
orb
push
jne
push
adc
or
inc
sarl
and
cltd
shlb
sbb
subl
dec
xchg
dec
push
jne
cmp
mov
adc
mov
aam
testl
shlb
inc
dec
dec
pop
sub
pusha
loope
add
nop
pop
and
xor
push
mov
iret
jmp
movsl
addl
push
jo
sbb
add
inc
dec
in
or
gs
mov
adcl
pop
cmp
cmp
cld
add
jae
jle
pop
ret
jnp
lea
dec
add
inc
add
pop
sub
call
inc
sbb
jnp
jge
push
mov
in
push
push
int3
dec
sub
lea
mov
mov
and
cmp
mov
sub
inc
pop
xor
in
shll
movl
imul
mov
adc
push
mov
add
mov
call
and
nop
movb
es
popa
pop
dec
add
cmp
xchg
pusha
ret
dec
push
inc
adc
test
and
imul
mov
add
adc
popa
call
hlt
lea
shrl
push
push
pushl
test
pop
add
push
add
or
and
mov
mov
dec
sub
mov
subl
pop
and
mov
push
adc
ljmp
rol
inc
mov
sub
push
and
xorb
mov
mov
imul
mov
push
leave
mov
leave
test
and
jle
lea
inc
adc
sub
dec
sahf
or
jl
push
add
mov
aam
aam
mov
or
jno
xchg
fcompl
ss
xchg
pop
ret
inc
add
dec
sub
test
adc
or
push
pop
jge
cmp
mov
and
sbb
or
add
xor
shll
popa
sub
das
push
ds
inc
pop
jecxz
inc
roll
add
add
cmp
ljmp
inc
jmp
mov
or
rcll
pop
sbb
mov
add
test
sub
jne
cmp
mov
fisubrs
push
add
adc
push
pop
sub
jg
jmp
orb
mov
add
nop
push
sbb
pop
add
sbbb
xchg
sub
decb
adc
xor
mov
and
lods
or
test
and
add
insb
sub
jbe
inc
cmp
jne
pop
fs
lea
adc
adc
psrad
mov
jg
xchg
fwait
negl
sbb
out
mov
xor
push
push
cwtl
in
and
or
sub
jle
adc
je
mov
cvttps2pi
jb
repnz
bound
or
push
insl
mov
adc
mov
mov
roll
fmull
pop
jo
inc
sub
mov
xchg
cltd
mov
js
inc
addr16
call
ss
dec
stos
adc
or
lea
sub
mov
imul
sbb
add
add
add
addr16
sub
inc
pop
out
rcrb
xchg
repnz
or
int
or
push
cltd
adc
scas
pop
pop
sub
dec
adc
mov
pop
xchg
fiadds
pop
jno
mov
and
pop
cmp
test
imul
jl
scas
push
or
pop
mov
sbb
fisttps
mov
cmp
inc
adc
jmp
inc
inc
fs
test
or
lcall
jge
lea
sahf
out
out
xlat
cmp
jnp
mov
test
jl
jl
adc
sbb
or
mov
movsb
add
or
pop
shr
and
xor
pop
mov
and
cmp
add
ss
shrb
loopne
xchg
in
js
pop
insb
cmp
out
mov
inc
fwait
or
out
push
aam
pusha
or
jmp
add
push
add
jmp
in
stos
mov
adc
xor
pop
imul
das
in
inc
lods
and
xorl
mov
adc
stos
inc
push
add
and
arpl
stos
and
pop
jg
fmull
inc
push
orl
or
out
sbb
jmp
add
jbe
add
add
in
add
add
mov
pop
or
mov
add
sbb
in
add
adc
pop
mov
xchg
hlt
add
orb
loope
jmp
flds
inc
jl
or
loope
pop
cmpsl
push
ror
ljmp
dec
dec
jle
mov
push
add
pop
addl
pop
cmpsl
push
or
stos
fs
cmp
jno
pusha
push
pop
pop
lods
sbb
int
pushf
adc
adc
add
adc
aad
clc
daa
mov
frstor
fidivrs
add
ds
mov
push
sub
inc
add
mov
mov
cwtl
inc
test
jbe
jg
inc
add
lret
pop
cli
lock
dec
andl
or
outsl
add
shlb
mov
xchg
shrl
push
and
pusha
mov
jbe
and
jns
add
sub
inc
inc
jne
jno
adc
mov
aam
dec
jo
xor
cld
cmp
mov
or
sub
xor
js
loopne
ja
add
cmp
push
push
pop
mov
mov
mov
lock
insl
add
and
pop
add
add
inc
add
lea
insl
mov
push
push
in
js
push
shrb
and
imul
add
cmpsl
and
insb
inc
jne
sub
je
sub
or
jnp
jns
or
add
xchg
es
xor
sub
pop
or
push
fs
ljmp
sahf
addb
push
pop
mov
call
jo
clc
mov
adc
insb
gs
xchg
mov
jae
cmp
adc
or
test
fcom
xchg
aad
cs
xchg
or
cmp
sub
push
mov
cmc
sbb
add
insb
insl
sub
adc
test
xchg
fcoml
dec
jae
lahf
fwait
pop
scas
push
cmpb
push
add
lods
fidivrl
pop
insb
shrb
add
add
ljmp
loop
jmp
add
jo
pop
mov
jae
adcb
sbb
xchg
cmp
es
lea
cli
cli
add
adc
xchg
cmp
push
push
stc
jne
xchg
xchg
sub
jne
adc
andl
inc
xor
jne
inc
adc
pop
mov
sbb
cmp
shrl
aas
dec
sbb
sub
xorl
js
out
inc
mov
dec
push
pusha
inc
sbb
shll
dec
xor
mov
rcr
inc
in
xchg
testl
sbb
cs
jo
mov
or
xchg
add
push
test
outsb
int
dec
adc
cli
jge
push
mov
sub
test
dec
imul
dec
add
loopne
jecxz
add
or
cmc
add
bound
or
sbb
flds
pop
and
and
pop
lock
or
dec
inc
and
inc
adcb
push
sub
dec
fisttps
jnp
js
pusha
imul
inc
cmpsl
adc
pop
in
out
rsm
mov
cmp
cs
and
jmp
adc
je
xchg
jbe
xor
lds
mov
xchg
mov
cmpsb
sub
mov
aas
push
gs
iret
test
xchg
push
leave
inc
std
jne
jmp
insb
mov
pop
jne
mov
inc
or
mov
movb
inc
mov
or
mov
mov
cmp
xor
sub
dec
js
xor
adc
adc
stos
push
inc
sub
outsl
dec
mov
aas
sub
mov
pop
mov
or
sub
ja
test
loop
sub
sub
pushf
inc
out
mov
and
mov
or
ret
and
xor
add
imul
mov
into
add
gs
imul
pop
imul
in
add
push
dec
mov
xorl
inc
xor
lods
mov
cmp
or
jb
inc
stos
xchg
push
push
test
add
inc
cmp
fmuls
mov
sbb
sub
push
rorl
push
pusha
jne
sub
rorl
fcompl
sub
jmp
mov
dec
rorb
je
loopne
sub
fidivrl
dec
mov
inc
push
rcl
lds
aaa
scas
jb
xor
orb
test
test
lret
aaa
cmp
mov
xchg
add
jle
dec
jg
ljmp
or
cmp
or
mov
fdivrl
jmp
sbb
jne
rcrl
fidivs
or
shll
jne
shll
add
mov
ss
lret
negb
into
xchg
and
fistpl
pop
and
jbe
push
pop
out
ret
xchg
add
push
xor
pop
dec
ret
pop
cmp
sahf
or
pop
mov
adc
test
neg
movsl
jge
mov
bound
in
sbb
loop
lret
adc
jne
arpl
push
mov
and
or
inc
jne
js
inc
push
mov
pop
add
sbb
pop
lret
lea
push
int3
testb
add
mov
int3
sub
pop
sbb
outsb
or
inc
adc
daa
xor
inc
push
sub
inc
cmp
dec
sbb
bnd
sbb
dec
ds
pop
outsb
push
test
cmp
lock
jl
add
fisubrs
mov
jb
mov
jb
jbe
scas
cmp
or
adc
int3
push
cld
aaa
icebp
andb
or
ret
pop
sub
insb
into
pusha
mov
xchg
jl
std
stc
cmp
movsl
mov
xor
daa
jae
cs
push
notl
dec
or
adc
mov
mov
mov
ja
loope
sub
and
sub
in
in
in
lcall
add
and
fdivs
sbb
and
and
xor
and
xor
adc
adc
inc
adc
fisubrs
incl
mov
add
pusha
xor
pop
xor
in
cmpl
shrl
mov
add
fs
andl
jb
lcall
stc
adc
fs
pop
mov
pop
and
in
cmp
das
sbbl
jns
xor
pushf
pop
pop
jb
adc
cmp
fdivp
inc
xchg
and
pop
add
sbb
sub
sub
jecxz
rolb
add
or
pandn
leave
orb
addb
jb
mov
push
inc
pop
dec
mov
es
fs
lahf
leave
outsl
mov
or
je
je
popl
dec
aaa
mov
cmp
ss
imul
add
aaa
sub
or
cld
push
or
xor
pop
ds
jne
or
rorl
or
jp
pop
mov
rclb
leave
clc
insl
adc
pop
inc
rcll
mov
pop
les
sbb
imul
es
ja
jb
mov
shrb
xor
adc
inc
mov
inc
or
rolb
xor
fs
fildl
dec
orb
jo
sbb
imul
jns
mov
push
mov
adc
sarl
adc
mov
mov
das
repnz
xchg
cmpsb
in
inc
iret
adc
sbb
jmp
adc
pop
or
jbe
lds
mov
push
pop
cmp
ret
movsb
clc
das
pop
add
adc
add
push
pop
inc
pop
push
popf
dec
rol
adc
push
sbb
scas
sub
jg
cmc
es
sarl
xor
dec
cmp
pop
dec
mov
mov
call
ljmp
incl
add
loop
clc
sub
adc
imul
bound
in
data16
dec
inc
push
dec
inc
stos
jle
lds
in
dec
loopne
sub
pusha
dec
out
cmp
jmp
add
insb
or
or
dec
and
jg
and
xchg
jo
sub
jle
jle
int3
cmp
push
insl
xor
stos
movsb
cmc
sbb
adc
test
xchg
adc
add
call
jecxz
leave
adc
icebp
sub
popa
into
or
js
inc
fwait
jne
mov
xor
repz
jl
mov
call
inc
stos
inc
add
cmpsb
or
inc
nop
hlt
andl
or
mov
js
dec
loope
lea
fiaddl
inc
shlb
adc
pop
and
inc
mov
addl
xor
xor
addb
dec
test
or
pushf
call
lods
sbbl
lods
int
enter
xchg
jnp
shrl
rcl
sub
or
mov
inc
mov
inc
dec
repnz
mov
mov
adc
push
jmp
loop
inc
daa
push
cwtl
repz
jg
or
not
mov
xor
repz
mov
pop
or
xor
mov
pop
xor
cmc
jne
ret
icebp
cld
lods
cmp
xor
sub
inc
sti
aaa
out
scas
mov
jno
cmpsl
scas
movsl
test
sub
arpl
and
add
mov
sbb
sbb
xchg
std
xchg
push
lcall
push
aaa
popf
test
imul
ret
cmpsb
mov
push
mov
xchg
test
aaa
jbe
cmp
pop
sub
adc
inc
les
adc
aas
inc
dec
inc
add
pop
fsubrp
and
inc
and
dec
andl
imul
jne
lahf
movsl
inc
sbb
inc
add
nop
add
lahf
or
insl
push
dec
add
sub
cmp
movsl
lods
inc
mov
inc
jns
push
popf
test
xchg
sub
or
inc
in
popl
adc
inc
leave
mov
sub
adc
outsl
or
jns
dec
xor
jns
jmp
mov
mulb
dec
adc
xchg
out
pop
push
test
pop
lcall
pop
je
pop
je
pusha
je
insl
push
xor
xchg
or
add
test
pop
adc
jle
fsub
xor
enter
icebp
lock
cmp
adc
rolb
sbbb
loope
pusha
out
inc
jl
adc
jne
leave
test
fcoms
mov
test
mov
xchg
cmpsb
shll
lock
ret
add
sub
lea
mov
adc
cmp
jne
lea
jge
pop
add
or
xchg
xchg
andl
shll
mov
loopne
pandn
mov
fs
inc
enter
popa
push
mov
outsl
pop
clc
ffreep
push
imul
jnp
inc
sub
inc
add
dec
testb
jae
je
xchg
push
or
mov
mov
clc
shlb
cmc
push
push
fistl
fimull
shrb
fisttpll
bound
les
jnp
aas
jl
cmp
xchg
movsb
xchg
cmpsl
mov
or
mov
jl
or
xor
int
dec
divl
repz
cmp
cmpsb
cmp
jae
jp
sbb
push
and
cmp
xor
enter
addl
add
xchg
js
roll
fadds
xor
push
fs
cmpb
ret
sub
pop
lock
and
push
jp
loope
push
inc
push
dec
pop
in
roll
push
out
vmwrite
das
lods
sbb
xchg
pop
jmp
js
loopne
lds
or
ss
jmp
ljmp
push
xchg
xor
push
mov
add
shll
mov
les
movsb
ret
add
xchg
je
sahf
fiaddl
jae
pop
pop
test
neg
jmp
add
sbb
mov
add
fidivl
clc
push
xchg
sbb
inc
adc
js
in
add
sub
sbb
lcall
cmp
incb
fnstcw
add
dec
insb
jns
dec
jmp
push
cltd
and
ret
sub
inc
dec
pop
iret
outsb
add
mov
lock
jb
test
xchg
or
mov
mov
sbb
push
cmpsl
add
dec
mov
ret
cmp
rcrl
cmc
xchg
pop
push
xchg
inc
test
ds
pop
pop
xor
stos
adc
and
xchg
xor
cwtl
or
mov
and
cmp
pop
je
repz
unpcklps
mov
stos
sub
stc
pop
lea
add
je
add
out
in
call
mov
fsubrl
add
pop
add
fs
add
adc
mov
inc
sub
adc
call
ret
mov
push
das
inc
int3
sub
inc
testb
mov
mov
cmp
ds
add
push
push
shl
es
push
jae
je
ret
cmpsl
sbb
push
in
loopne
int3
add
je
add
in
pusha
or
outsl
dec
fnstenv
or
cvtdq2ps
inc
daa
pusha
addb
and
les
push
shlb
je
add
gs
xchg
push
lcall
adc
pushf
mov
or
lods
add
and
push
mov
arpl
movsl
stos
scas
aad
int
mov
or
push
add
fiadds
and
pop
mov
dec
mov
sbb
add
adc
adc
lods
out
mov
testl
and
fidivs
mov
add
outsb
push
cmp
lea
pop
sbb
lret
inc
pop
lcall
ret
mov
add
mov
xor
addb
sbb
xor
mov
rol
mov
cmp
shrl
push
adc
loopne
out
xchg
add
xor
mov
add
je
int
in
enter
push
lock
insl
xchg
shr
pop
mov
clc
mov
or
jo
pop
mov
sbb
adc
xchg
repz
sbb
xchg
push
adc
je
mov
outsb
fiadds
jo
adc
mov
inc
push
xor
sub
jne
gs
inc
xchg
cld
cwtl
adc
psubb
xor
add
rolb
add
aas
xor
testl
sub
pop
pop
pusha
xchg
call
jo
cmp
popf
jns
es
jmp
sub
cmpsb
push
cwtl
pusha
mov
inc
es
sub
es
es
inc
inc
es
es
inc
inc
es
es
xor
inc
aaa
cmp
push
frstor
sbb
sti
test
movb
inc
mov
inc
cltd
mov
add
add
jo
lds
jb
ret
xchg
mov
push
mov
mov
cli
and
dec
sub
enter
mov
add
movsb
icebp
or
mov
daa
ds
xor
xor
dec
xor
mov
add
bound
psraw
xor
pushf
jae
ret
xor
fdivs
pop
leave
push
push
push
jge
mov
or
cmp
int3
mov
std
jmp
orl
jl
xchg
hlt
data16
adc
dec
nop
jge
loopne
pop
xor
add
cmpsb
out
add
pop
jp
inc
fs
out
gs
pop
mov
xchg
xchg
xor
push
or
adc
jnp
je
sub
and
sbb
popa
push
hlt
xchg
add
inc
mov
aaa
in
inc
inc
inc
inc
and
scas
add
or
jne
ret
add
jae
xchg
dec
cmp
out
cmp
or
dec
in
fs
or
fcomps
cmp
jne
pop
daa
out
outsb
adc
jne
sbb
add
jmp
in
mov
cmp
mov
jmp
and
daa
add
push
xchg
test
sub
adc
clc
sub
add
dec
push
outsl
or
sub
pop
push
jae
sbb
mov
ret
orb
add
or
add
dec
jmp
add
jae
in
ja
fcompl
inc
sub
mov
push
fimuls
inc
cmp
inc
mov
adc
adc
and
mov
adc
test
or
sarb
or
mov
mov
lods
or
sarl
xor
fsubrl
dec
xor
xor
dec
orl
ret
sub
or
inc
sub
xchg
adc
fsts
mov
call
add
cmp
aaa
into
dec
jl
outsb
cmp
jge
in
or
adc
or
xor
vpsrlw
dec
pop
jb
lret
or
adc
and
and
dec
dec
add
pop
mov
adc
dec
inc
lds
js
jmp
xor
adc
cmp
and
inc
sarb
mov
in
pop
mov
adc
std
push
jne
push
push
mov
add
and
popa
mov
mov
adc
adc
inc
fsubr
adc
push
inc
push
xchg
sub
rcll
orb
outsb
sub
inc
and
cmp
ljmp
gs
pop
or
and
mov
rcl
int3
xchg
es
mov
sbbb
cli
push
and
inc
push
xchg
inc
les
movb
imul
adc
mov
or
push
push
and
push
sbb
adc
mov
xchg
lret
insl
dec
aad
aam
test
xor
dec
sarb
mov
inc
xchg
xchg
pop
mov
and
bound
adc
repz
pop
push
or
add
inc
cmpb
jnp
xchg
es
test
add
loopne
rcr
and
icebp
cmp
loopne
xchg
add
cld
imul
stos
out
push
pop
inc
cmp
sarl
mov
nop
mov
xchg
push
adc
mov
lock
dec
xchg
push
xchg
add
cwtl
mov
cmp
sbb
outsb
sbb
sub
lds
in
inc
sbb
adc
sbb
jge
test
sub
dec
outsl
ja
add
rcrb
jne
insb
or
movups
out
jle
nop
cvtdq2ps
push
sbb
sub
inc
inc
fsubs
mov
sbb
inc
mov
int3
subb
scas
insl
rolb
js
je
cmp
push
mov
outsl
mov
psllw
sub
ja
cwtl
xchg
mov
and
mov
loopne
or
sub
pop
and
xor
xor
xor
mov
icebp
cs
lret
lahf
add
sub
cwtl
push
add
sbb
out
fistl
mov
jmp
insb
add
mov
adcl
outsl
sti
jbe
sbb
insb
cld
xchg
push
fnsave
cmp
inc
arpl
mov
leave
pop
pushf
nop
add
jl
inc
adc
jge
outsl
mov
xchg
mov
sub
and
enter
push
pusha
or
and
inc
shrb
dec
xor
add
rcll
ja
mov
lods
sbb
sbb
pusha
imul
mov
cmpsl
adc
push
or
xor
dec
add
loop
and
inc
cmp
pop
or
rcrb
imul
push
lret
mov
sbb
and
sub
lret
add
adc
push
mov
xchg
inc
or
ror
lret
ret
insb
push
sub
inc
andb
cmp
mov
sub
xchg
leave
jo
pop
shl
adc
mov
jne
xchg
pop
movups
pop
enter
lret
xor
pusha
ret
mov
add
fs
mov
mov
outsb
mov
push
mov
loop
jmp
pop
nop
mov
daa
adc
or
or
or
sbb
dec
bound
cmp
push
dec
or
or
xchg
or
pop
adc
or
pop
xorb
cmp
mov
rolb
sub
jne
jnp
cmpsb
std
ret
mov
adcl
jne
shl
sbb
mov
push
mov
fistpl
call
cmp
inc
insb
jo
add
add
insl
loop
sub
xlat
je
out
aas
mov
gs
out
dec
addl
jp
xchg
inc
xchg
subb
es
rolb
addb
sub
sub
push
jle
xchg
sub
pop
sub
std
xor
jmp
or
sbb
jmp
inc
mov
aaa
or
or
lea
inc
repz
jne
dec
lock
roll
aad
aad
add
cld
into
ss
dec
push
dec
adc
mov
add
mov
daa
cwtl
loopne
cmp
xchg
cmp
int
test
movsl
jg
pop
je
add
mov
inc
and
divb
test
sbb
sub
xchg
mov
push
jmp
add
add
insb
fwait
adc
inc
loopne,pt
loopne
rcrl
cmp
cmp
call
xchg
dec
push
and
push
add
rclb
cli
jge
lock
inc
push
add
fists
out
xor
aaa
add
push
jno
mov
and
pop
lret
push
dec
cmp
and
rclb
scas
adc
cmp
lods
test
clc
add
mov
ss
test
jl
mov
pop
mov
or
mov
ja
push
dec
ds
mov
jmp
push
cmp
push
icebp
enter
inc
sub
sub
rolb
mov
add
adc
sbb
mov
xchg
and
daa
pusha
push
xchg
mov
icebp
push
push
sahf
cmp
push
or
je
mov
insb
push
mov
icebp
and
dec
add
pop
mov
adc
inc
sbb
test
and
jge
jo
adc
lcall
add
daa
mov
addr16
cwtl
shrb
imul
cmpsb
dec
lock
adc
js
mov
nop
dec
push
pop
ja
jo
jno
sub
mov
pop
push
inc
push
jl
call
and
jge
scas
xor
and
aaa
or
cwtl
push
or
add
jo
inc
inc
jg
jmp
jecxz
jo
mov
fwait
cmp
fmull
push
cld
mov
out
out
dec
push
filds
out
xchg
adc
or
clc
into
into
push
je
add
mov
sub
xorl
jo
adc
mov
sub
roll
cmp
fucomip
xor
jb
dec
shlb
add
adc
xchg
xor
xchg
add
pusha
jo
pop
inc
int
stos
in
pop
popf
add
xor
sub
push
push
lret
pop
loope
and
sub
out
dec
mov
inc
cld
dec
std
push
pop
sub
add
push
push
or
lea
add
pop
and
jl
xor
xor
add
or
and
mov
ja
mov
dec
mov
cmp
dec
cmp
adc
dec
pop
jno
mov
inc
jno
push
cs
pop
cmp
adc
or
cmc
bound
mov
leave
push
or
orb
and
sbb
dec
ret
push
scas
test
and
xor
jl
inc
shlb
xor
mov
inc
dec
jmp
fwait
call
pop
mov
fmul
xchg
aaa
xor
or
xor
inc
mov
aaa
adc
add
adc
dec
call
add
xchg
add
sbb
rorb
cmc
mov
clc
pop
add
pusha
repz
mov
sub
cmp
sti
mov
and
cmp
sub
cmp
fsubrl
test
mov
xchg
jp
lret
or
pop
stos
cmp
cwtl
push
push
pop
cmp
adc
inc
insl
leave
or
sbb
cmp
jb
fnstenv
push
mov
insb
aaa
dec
pusha
sbb
into
adc
sub
std
dec
es
scas
psubusb
xorl
in
pop
loopne
pop
cmpsb
pusha
inc
icebp
loop
mov
mov
mov
sub
shll
sub
push
leave
push
jb
sbb
adc
sbb
jmp
dec
shrl
mov
int3
sub
pusha
dec
outsb
ret
add
movsl
jns
sahf
data16
lds
push
negb
jnp
int
push
scas
push
out
test
test
cmpsb
cmp
push
and
lcall
add
push
insl
rcrb
push
xor
or
aas
mov
and
lds
andb
mov
in
xlat
sahf
push
lahf
xor
sbb
loopne
notl
or
cmp
add
pop
loope
or
or
fiadds
cmp
loopne
ficoms
mov
or
push
lods
mov
cmpsb
jge
imulb
push
cmpsl
ss
movsl
jne
dec
sub
mov
mov
push
add
add
pusha
orb
sbb
or
fdivrs
out
push
loopne
leave
into
roll
data16
dec
xchg
aaa
and
add
add
add
je
pop
out
aaa
adc
pop
push
jne
mov
mov
insb
pop
pop
imul
xchg
mov
aam
call
rcll
outsb
inc
mov
sub
mov
movsl
pop
adc
neg
xchg
adc
cmp
decl
pop
sbb
dec
xor
cmp
test
sub
hlt
pop
xchg
xchg
sub
mov
loopne
sbb
pop
sbb
xchg
add
inc
inc
and
aas
lea
inc
fistpl
cli
sub
add
pop
add
dec
dec
rcrb
lods
sub
mov
pop
dec
imul
fistl
popl
jge
insl
sbb
in
test
adc
lret
std
mov
popf
insl
shrb
or
mov
jmp
cltd
push
mov
pop
add
pop
push
push
lea
popa
pop
dec
mov
push
and
lock
testl
xchg
nop
pop
flds
lods
push
sti
push
bound
mov
xor
cmp
sbb
inc
fdivl
add
mov
xor
mov
xor
xor
aad
dec
add
push
push
mov
xor
pop
mov
pop
cmp
scas
cmp
lea
pop
push
insl
mov
push
or
shll
sbb
aas
fbld
lods
mov
jb
jl
pop
pusha
fs
insb
push
jo
je
test
jb
mov
mov
mov
cwtl
pushf
mov
mov
and
pop
sub
mov
rorb
repz
or
push
add
xor
pop
push
sub
sub
xchg
jp
in
aam
adc
cmp
or
xchg
loopne
push
mov
push
mov
push
inc
add
and
xor
mov
or
jne
xchg
xchg
mov
push
mov
inc
cmp
push
xchg
rolb
inc
and
push
sarb
push
je
mov
cmp
test
adc
iret
adc
sbb
outsb
push
and
je
scas
push
ret
push
mov
pop
mov
pop
dec
pop
mov
mov
add
mov
test
add
loop
mov
rcr
xchg
jbe
dec
dec
xor
xor
mov
adc
shlb
pop
mov
and
inc
or
inc
dec
nop
and
cmpsb
mov
pop
sub
shrb
icebp
dec
push
dec
bound
add
mov
jle
cmp
jbe
adc
adc
add
xchg
ja
lea
ret
add
dec
enter
adc
repz
outsl
lods
divb
push
adc
sub
imul
aas
scas
adc
dec
jle
inc
add
jl
xor
jnp
jne
add
inc
cmc
adc
xchg
leave
xchg
fmull
lock
mov
lret
les
imull
pop
fiaddl
inc
sub
cli
sbb
dec
cmovo
jne
pusha
les
sbb
daa
in
and
jno
test
adc
jmp
and
push
fsqrt
or
add
cmpsb
icebp
mov
mov
fwait
pop
es
out
jg
hlt
pop
xor
mov
jno
cmp
stos
mov
enter
or
inc
es
adc
movsb
aam
cltd
mov
movsl
dec
insl
out
in
lds
adc
sbb
fimuls
add
push
fistpl
add
pop
adc
push
push
ljmp
mov
cs
int
push
sbb
push
add
into
sbb
and
in
and
cmp
add
aas
mov
jne
add
and
dec
inc
add
and
sbbb
pusha
pop
mov
cmpsb
add
pop
xchg
cwtl
sub
cmpsb
ss
xor
inc
mov
test
cmp
jbe
jg
lds
jecxz
pop
push
movsb
adc
testb
add
hlt
cmp
ljmp
pop
shll
push
xor
dec
outsb
sbb
std
push
leave
mov
and
pop
add
and
fistpl
cmp
lret
jmp
scas
sbb
rclb
sub
ret
sarb
add
aas
inc
and
push
inc
loop
jl
popa
mov
or
jle
sbb
or
rclb
adc
test
push
sub
jns
or
cmp
push
mov
push
sub
mov
xorl
sbb
push
test
push
mov
je
scas
sbb
es
pop
and
push
xor
and
or
push
or
add
xchg
add
sbb
mov
mov
and
inc
sbb
lea
pop
or
fs
or
outsl
fisubrs
stc
mov
sub
mov
adc
ss
insb
cmp
dec
orl
inc
mov
jo
das
or
xchg
cmp
jo
add
and
jle
inc
lahf
add
sub
push
call
fdivl
je
mov
xor
xor
pop
xabort
sbbb
jmp
pop
jecxz
xor
pop
dec
dec
pop
push
or
push
das
movsl
sub
inc
js
sub
pop
or
imul
add
aad
mov
jae
addb
int
push
call
dec
ret
push
sub
nop
sbb
mov
sub
dec
adc
push
pop
xchg
mov
fsts
push
mov
cmp
add
int
daa
inc
cmp
push
inc
sbb
or
sub
shl
push
dec
xchg
cltd
ret
xchg
xchg
aaa
mov
popf
in
sub
inc
or
xchg
add
or
enter
dec
or
dec
jmp
push
dec
cmp
xchg
and
fldcw
mov
mov
insl
jl
mov
adc
xchg
ss
mov
cmp
mov
subb
cmp
jl
inc
dec
xchg
js
sbb
shrb
sub
xorb
xor
es
test
mov
cmpsl
adc
mov
push
jb
shl
fisttps
mov
jo
mov
gs
pop
add
mov
mov
repz
mov
xor
das
inc
inc
orb
lods
push
mov
test
jo
xor
jp
mov
rolb
sbb
add
and
pop
sti
fdivrs
rolb
push
dec
mov
out
sbb
mov
push
rcrl
je
cmp
stc
sbb
movb
cmpsb
mov
sub
inc
xchg
je
in
es
sbb
adc
push
push
xchg
aaa
test
into
mov
mov
xchg
sbb
or
jmp
pminub
arpl
ret
mov
jle
sub
push
int
enter
iret
sub
comiss
movl
inc
lret
jmp
mov
sub
dec
je
sbb
inc
lahf
les
mov
lret
add
add
pop
jmp
add
inc
sub
mov
insb
loope
adc
sbb
xor
adc
push
push
push
push
inc
movsb
adc
mov
insb
inc
rorb
add
mov
daa
inc
je
dec
jbe
mov
pusha
sbb
lea
mov
nop
fmull
push
push
or
xchg
cmp
sub
fcmovb
ret
inc
push
testl
mov
inc
cmp
xchg
cwtl
mov
or
or
orl
loope
cli
sbb
test
mov
mov
or
xchg
mov
xor
sbb
gs
push
jmp
push
insb
sub
xchg
and
test
mov
out
inc
xor
adc
push
jno
sub
push
testl
pusha
lahf
inc
iret
xchg
mov
adc
repnz
test
addr16
push
jnp
or
jne
dec
in
pop
add
add
adc
push
or
or
adc
add
rolb
sbb
cmp
in
push
jb
out
sub
mov
add
and
aad
add
sub
jmp
cmc
loope
sub
nop
xor
or
push
cwtl
lods
mov
hlt
add
and
mov
mov
push
pop
mov
push
xchg
dec
in
xchg
test
inc
lods
fldl
jo
fistps
pop
fstps
jae
ljmp
sbb
xor
or
outsb
jno
cmp
jne
hlt
movsb
mov
pop
and
and
sub
sub
test
aaa
jno
xchg
cs
pop
inc
cmp
xorl
or
mov
mov
ret
add
punpcklwd
push
and
out
mov
mov
sbb
push
mov
push
mov
xchg
add
bound
inc
xor
and
xchg
pop
fisubrl
sti
je
pushl
lods
xchg
mov
pop
cmp
mov
adc
lea
scas
test
adc
aad
sbb
jno
idiv
aad
cli
popa
lods
orl
jne
and
lcall
addr16
mov
adc
push
cmp
arpl
out
outsb
xor
add
mov
test
adcb
in
aas
insb
mov
jle
jmp
lret
inc
out
mov
push
push
dec
mov
insl
xor
sahf
js
loopne
js
or
cltd
fcoms
loope
in
adc
mov
sti
pusha
add
adc
push
add
sbb
mov
loopne
inc
inc
jle
inc
and
ret
inc
and
xchg
or
push
push
int3
or
movsl
test
xchg
lret
pusha
loope
fildl
sbb
push
and
xor
fstpl
gs
loop
sbb
xchg
xor
push
sbbb
inc
jne
or
jae
pop
in
shr
xchg
dec
adc
cmp
mov
or
dec
movsl
or
or
pop
xor
mov
jo
add
lods
pusha
cmpsb
lret
or
ret
mov
adc
aas
clc
inc
sbb
dec
xchg
inc
pop
xchg
sub
cmp
iret
pop
leave
push
or
push
ret
jo
cld
shlb
push
xchg
test
in
call
scas
js
leave
negb
xor
push
in
xchg
inc
in
je
std
lret
xor
je
fistl
lods
adc
cmp
push
xor
xchg
jno
pop
js
ss
ja
mov
mov
sbb
int
into
push
sbb
mov
sub
cmp
push
jne
int3
push
repz
or
add
jmp
inc
loopne
dec
jl
push
stos
jns
and
push
ret
je,pn
push
add
adc
je
cmp
invlpg
pop
pop
pushf
or
pusha
lahf
test
movsl
test
cli
or
jo
xor
mov
orb
push
lret
je
and
pop
out
test
lea
and
dec
mov
movsb
dec
std
and
cmp
shl
mov
pop
int3
ja
push
xchg
stos
aad
xchg
or
imul
outsl
mov
lahf
ja
out
es
ds
cld
adc
cmp
sbbl
lods
mov
xchg
sbbl
sub
int
pop
adc
cmpb
or
cwtl
or
inc
push
lods
xchg
mov
lcall
jl
and
jge
pop
mov
adc
inc
add
add
xor
xchg
js
adc
pop
imul
in
not
les
and
adc
inc
adc
jnp
push
sub
out
sbb
xchg
jmp
mov
js
jne
sbb
inc
jne
adc
mov
or
iret
repz
push
pop
imul
or
stc
add
dec
inc
push
push
sbb
adc
or
sarb
lock
sbb
xlat
push
xchg
mov
rol
movsl
test
push
hlt
pop
icebp
sub
and
je
inc
movsb
ret
rclb
inc
pop
mov
pop
or
add
add
cmpb
lds
push
sbb
add
push
test
or
jp
sbb
mov
adc
es
or
mov
sti
cmp
sub
and
xor
fs
mov
fsubrl
xchg
push
sarl
inc
nop
lock
xchg
js
adc
movsl
push
daa
mov
inc
add
sti
push
add
sbb
push
lds
adcb
xor
add
clc
mov
dec
outsl
xchg
inc
push
adc
test
mov
xchg
mov
add
leave
adc
jae
mov
sub
xor
pop
imul
popa
pop
dec
imul
sbb
sbb
push
js
sub
enter
inc
popf
dec
test
sub
add
and
xor
and
loope
dec
inc
push
push
dec
sti
and
sub
push
aas
xchg
test
or
mov
push
xchg
push
push
mov
roll
jg
or
insl
fs
mov
dec
pop
jo
xchg
jmp
or
ret
inc
mov
popa
add
xor
inc
mov
out
pop
dec
mov
cmp
rorl
xchg
sub
mov
cmp
lcall
adc
push
and
cmpsb
pop
inc
or
imul
sbb
dec
adc
shl
pop
push
xchg
push
and
and
push
aas
adc
testl
dec
sbb
xchg
sub
jg
add
into
inc
add
mov
mov
rcrb
xchg
or
mov
dec
add
dec
mov
fbld
nop
sbb
mov
push
push
nop
jb
sbb
mov
icebp
mov
push
and
add
jg
xchg
cmpsb
jno
in
dec
inc
mov
dec
movsb
or
int
xor
push
push
add
push
dec
inc
add
adc
out
cld
xor
mov
inc
call
push
add
sub
sbb
push
jg
add
les
cltd
pusha
xor
adc
sbb
orl
xor
arpl
inc
mov
xor
lret
shll
jbe
mov
aad
mov
inc
mov
inc
pop
cmp
clc
mov
js
fsubs
jno
int
xchg
and
jns
or
xchg
addb
jecxz
aam
test
mov
sbbl
or
or
push
jo
and
insb
pop
dec
xchg
ljmp
fs
xor
mov
cmpsb
mov
xor
call
xor
lret
pop
fcmovnb
sbb
push
gs
cmp
pushf
add
out
xchg
ret
icebp
xorps
and
pop
or
jl
lds
movsb
jo
cmp
jo
and
imul
das
jne
jno
popf
nop
jle
cmpsb
adc
xor
mov
fildl
je
fistps
or
mov
pop
js
out
mov
loopne
les
sahf
xor
mov
sbb
and
fimuls
dec
stc
sbb
and
inc
mov
insl
add
out
scas
jmp
sbb
add
push
out
inc
pop
jnp
sarb
jbe
and
lea
imul
lods
jge
cmp
sbb
sub
scas
sub
push
push
in
add
sub
outsb
data16
test
push
jmp
sbbb
push
jmp
int3
or
mov
fisttpl
adc
mov
andl
insb
ljmp
lods
inc
and
cmp
aas
and
inc
sbb
push
mov
rolb
adc
sbbl
faddl
movsb
push
lock
in
aad
jecxz
je
imul
and
pop
add
xchg
pop
cmp
or
inc
jmp
push
add
mov
xchg
fdivs
les
shll
or
or
and
push
mov
sbbl
push
sar
js
orb
mov
shlb
sub
fnstcw
test
int
shrb
cltd
and
inc
jo
add
je
or
add
fbld
mov
xor
shlb
test
mov
xchg
into
ret
or
xchg
add
add
or
pop
inc
cmpsb
fs
or
add
add
inc
cmp
pop
or
jns
lahf
add
mov
add
lods
jmp
lret
xchg
test
and
cltd
inc
jle
mov
orl
push
and
rcrl
sbb
inc
dec
into
cmp
add
adc
inc
add
aaa
add
ss
cmc
xchg
int
mov
or
data16
int3
imul
dec
test
enter
out
das
in
addr16
mov
cmp
movsb
and
addr16
dec
inc
mov
sub
push
lcall
movswl
dec
cmp
lret
loopne
sbb
inc
adc
sbb
out
dec
insl
pusha
dec
add
lahf
andb
out
jns
mov
sbb
jns
sbb
pushf
insb
fsub
jo
shrb
adc
jge
lds
nop
add
jl
sbb
adc
adc
jne
add
xor
mov
mov
push
jl
jns
or
in
cwtl
push
xchg
enter
jmp
and
push
cmp
subl
idivb
cmp
fwait
add
mov
push
push
mov
and
mov
xchg
les
rolb
push
inc
adc
outsl
aas
add
and
mov
push
push
inc
pusha
leave
mov
push
xor
pop
push
xor
push
imul
push
iret
stos
add
lock
test
dec
xor
push
aas
je
add
and
and
mov
test
mov
popl
adc
dec
push
push
add
jle
jbe
sub
fstpl
pop
sbb
mov
shlb
xchg
and
mov
adc
jmp
cltd
pop
fdivrs
insb
and
push
outsl
cmpsl
jo
jmp
sub
adc
ret
add
cmc
aam
popa
dec
mov
push
pop
pop
jns
add
jnp
out
mov
inc
add
push
push
sahf
out
lcall
jns
out
mov
cmp
repz
test
jns
iret
lock
or
loopne
jns
dec
xlat
pop
loope
scas
loope
sarl
int
loop
jge
push
xchg
iret
jnp
shll
test
out
jge
jns
stc
or
pop
push
out
out
cwtl
cmp
repz
mov
out
jmp
in
xchg
and
sarl
dec
sub
arpl
sahf
out
xor
jmp
out
pop
ds
repz
cwtl
fisubrs
int
imul
sarl
repz
lret
fidivs
es
repz
dec
jo
mov
jns
jmp
jmp
ss
sbb
les
push
adc
push
stos
add
dec
stos
clc
add
adc
cltd
jp
movsl
sbb
mov
test
sbb
in
fisubs
test
imul
cmp
sbb
or
inc
in
fnstsw
mov
push
jno
mov
push
jmp
push
fstpt
jne
mov
imul
imul
push
jb
nop
xor
stos
sbb
and
pop
loopne
or
ljmp
dec
and
sub
add
clc
inc
sarb
and
fldl
data16
filds
xchg
push
cltd
inc
jge
fisttps
push
dec
cs
call
pusha
xorb
loope
fidivs
mov
pop
sub
cmp
test
xchg
pusha
cmp
lods
add
jmp
jge
loopne
scas
push
orb
pushf
mov
xchg
sub
adc
test
lea
pop
cmp
or
jmp
dec
cmp
cmp
inc
cmpsl
push
rcr
dec
in
lret
aaa
add
pop
adc
push
sbb
sbb
or
dec
in
inc
dec
mov
push
lret
xor
pop
stos
cmp
incl
xor
push
stc
pushf
inc
or
mov
sbb
je
rcrb
inc
push
dec
dec
scas
lcall
xor
roll
pop
add
push
xor
and
dec
pop
pop
fstp
jae
mov
xchg
fs
or
mov
cmp
aas
cmpsb
push
iret
xchg
mov
inc
rcrb
inc
push
shlb
movsb
mov
adc
lcall
out
loope
pop
sarl
mov
mov
out
fistpl
fcompl
dec
jmp
or
ret
inc
rorb
jp
test
adc
out
push
jge
jp
mov
movsb
mov
mov
cmp
and
mov
xchg
cmpb
cmp
loop
xchg
dec
pop
push
pop
jmp
sbb
push
push
cmp
xchg
arpl
push
push
inc
push
test
negl
sbb
outsl
adc
cs
sbb
aam
sahf
sub
inc
sub
dec
rcr
inc
xchg
inc
mov
sti
sbb
call
add
mov
mov
or
dec
cwtl
jns
sub
add
dec
inc
ljmp
pop
fsubrl
cmpsl
sbb
mov
and
xor
ja
and
adc
mov
or
imul
pop
sub
fidivrs
ret
jmp
rorl
cmp
and
add
mov
data16
inc
pop
pop
arpl
mov
xchg
fnsave
mov
lea
xor
xor
adc
nop
and
das
adc
addl
js
adc
call
mov
sub
jmp
dec
inc
lods
pop
add
adc
out
bound
jae
fsubrs
int
xor
adc
out
and
lret
adc
daa
jne
mov
sbb
jae
xchg
mov
mov
add
mov
or
mov
adc
xchg
or
dec
movsl
xchg
sbb
sub
add
inc
or
or
cmp
inc
cmp
and
outsb
xchg
mov
cmp
sahf
aaa
push
or
or
movb
or
fbstp
push
js
xor
pop
popf
je
add
xchg
and
add
js
daa
fisttpl
sub
pop
cmp
add
jne
or
cmp
pop
subl
addl
or
mov
sub
insl
inc
mov
inc
inc
pop
cmp
pop
inc
test
decb
inc
add
stos
add
inc
rorl
loope
or
pop
mov
adc
sub
jbe
inc
adc
jo
or
jns
push
addb
jns
cmpsl
es
test
push
sbb
or
mov
inc
xor
and
pop
sbb
movsl
fucomp
xor
dec
inc
das
sub
mov
pop
sbb
loop
sbb
push
push
add
test
xor
push
push
add
imul
sbb
pop
fsts
dec
or
xchg
iret
mov
lret
fidivl
inc
pop
pop
aas
out
ja
cmc
jmp
pop
fwait
cmp
pop
adc
push
inc
jne
xor
cmp
or
je
add
je
sbb
and
je
inc
xor
add
xchg
jnp
xchg
pop
xor
push
sub
shlb
mov
je
shrb
mov
sbb
add
jae
push
jo
adc
es
and
or
push
ret
cmp
add
xchg
movsb
movsl
bound
inc
xor
cli
sbb
inc
or
cmp
dec
push
or
mov
push
mov
pop
xchg
pop
sub
addps
je
nop
adc
ret
cmc
and
push
loop
adc
add
loopne
dec
mov
ret
in
fcomps
xchg
mov
and
pop
int
push
xor
add
cs
and
sbb
cwtl
xchg
cmp
push
xor
and
lea
adc
sbb
test
add
push
lds
stos
sub
sub
or
or
inc
mov
cmp
cmp
add
movsl
scas
sub
jg
ds
adc
mov
sti
out
je
xor
test
and
mov
sbb
adc
fsubl
inc
sub
pop
lret
imul
mov
pusha
cmp
mov
mov
xchg
pushf
sti
jl
fidivl
dec
cmp
lea
xor
dec
push
cwtl
add
push
xchg
adc
jl
pusha
sbb
sub
lret
mov
sub
cmpsl
dec
xor
push
mov
mov
lea
inc
and
sub
int3
lea
jbe
dec
popl
or
jle
fldt
and
add
xor
pop
mov
int
cmp
xor
xchg
dec
aaa
and
mov
sub
push
push
xor
add
ret
adc
popa
sbb
mov
mov
jo
jmp
add
cmp
and
rorb
push
and
mov
ja
rorb
ret
fisttpl
add
pop
jp
xor
cmp
es
js
movl
fsubr
pop
dec
sub
adc
fwait
stos
push
push
ret
xor
dec
inc
leave
sbb
lock
jge
inc
jo
xchg
inc
sti
mov
into
sub
inc
and
lods
jne
andb
push
mov
insb
sub
mov
mov
add
test
iret
adc
cmp
fs
dec
pusha
pop
jo
call
mov
pop
divb
int
xchg
xchg
adc
popf
insl
mov
or
test
pop
popa
sub
push
aas
cmpsb
push
adcl
les
and
dec
jmp
sbb
push
or
arpl
loope
push
inc
cmp
dec
jg
loop
jne
lcall
push
cmp
pop
adc
pop
or
bnd
test
adc
int3
mov
xor
pusha
outsb
mov
adc
shlb
sub
shlb
adc
dec
test
push
add
sbbb
dec
dec
jle
dec
dec
cld
out
mov
movb
add
push
pop
sbb
scas
mov
unpcklps
movsb
mov
cmp
add
adc
add
sub
or
mov
and
add
outsb
push
push
xchg
sbb
push
push
inc
pusha
getsec
mov
or
push
sbb
push
push
mov
insl
and
pop
inc
out
out
and
dec
cs
js
jbe
jmp
mov
cmpsl
sub
mov
push
dec
adc
and
sbb
or
inc
or
add
das
stc
or
pop
insl
lea
sbb
mov
iret
jmp
orb
lock
sti
or
xchg
or
fs
sub
xchg
sub
cmp
mov
dec
repz
or
push
dec
sub
repz
xchg
pushf
shl
push
fcmovnbe
shll
mov
fcoml
dec
push
mov
xor
sub
shrb
mov
sbb
adc
xor
mov
push
adc
add
pop
add
imul
in
imul
jle
cli
fadds
jbe
or
dec
push
mov
add
push
jbe
cmp
out
xchg
hlt
adc
pop
mov
sub
jecxz
push
stos
or
loope
cwtl
adc
sbb
mov
addr16
outsl
and
movlps
xchg
stos
add
sbb
xchg
movsb
test
adc
sbb
xorb
aam
rcrb
nop
lock
inc
mov
js
stos
adc
incl
and
mov
jle
lcall
lcall
dec
dec
sub
imul
dec
and
dec
rclb
mov
loopne
sbbb
xor
loop
sbb
fdivl
and
add
xor
arpl
jne
dec
or
mov
test
sahf
pusha
nop
mov
enter
sub
push
ret
adc
push
cmp
mov
jl
mov
hlt
in
inc
inc
push
dec
test
aaa
rcll
cmp
mov
cs
fwait
loopne
mov
or
repnz
push
test
dec
cmp
imull
rorb
adc
pop
jle
or
and
or
icebp
mov
or
xchg
push
jmp
sub
xchg
jo
mov
push
xchg
lock
movsl
sti
pushl
dec
lea
xor
pop
xor
les
es
out
push
add
sub
push
xchg
and
push
dec
pusha
jge
push
adc
xor
cwtl
shrb
push
adc
call
rcrl
clc
mov
add
sbb
sbb
cmp
xor
adc
test
and
add
lret
mov
xchg
into
rol
fcmovnbe
call
push
in
movsb
aam
popa
or
stos
sub
cmc
gs
dec
cwtl
mov
lods
add
movsl
lods
jp
cmpsb
push
dec
xchg
sub
xor
adc
pop
add
and
arpl
ss
test
inc
inc
fsubs
push
dec
add
adc
test
pop
xlat
jge
pop
adc
sub
pop
aaa
mov
mov
dec
movhps
cmp
add
or
scas
fwait
pop
dec
xchg
or
xlat
lods
xchg
ljmp
test
out
push
call
cmp
insl
sbb
rcr
inc
arpl
push
push
out
testl
add
add
sbb
dec
sbb
xchg
mov
mov
inc
in
fnsave
sub
push
inc
in
sub
dec
lret
dec
ret
into
xor
mov
xchg
inc
and
xor
int
xor
cltd
xor
ret
dec
sbb
mov
jbe
push
push
stc
push
push
and
iret
push
ss
out
shlb
test
dec
add
int
xchg
mov
push
shlb
cmp
jle
ret
ret
stc
mov
xor
jl
pop
mov
jbe
xor
ret
xor
add
sub
rclb
xchg
sbb
xor
or
push
dec
push
sbb
mov
sub
je
mov
dec
mov
jbe
pop
clc
jle
push
mov
loop
cmp
jne
and
adc
int
xchg
mov
inc
sbb
fisttps
jbe
sbb
xchg
add
mov
adc
dec
dec
mov
insl
aaa
add
test
movsb
scas
test
or
push
add
aam
xchg
sahf
aas
dec
pop
xchg
jecxz
inc
mov
jecxz
push
unpckhps
nop
inc
cltd
adc
adc
fdivrl
xor
add
push
push
stc
push
aad
pop
je
push
das
xchg
jecxz
fcmovnbe
push
int
jp
sub
inc
and
arpl
dec
movsl
outsb
cld
cmp
push
stc
or
icebp
jmp
aas
mov
or
les
dec
add
adc
pop
neg
gs
and
cmpb
add
dec
jecxz
pop
lea
pop
or
inc
sbb
pop
dec
push
imul
in
ret
adc
les
les
push
add
dec
sub
add
incl
push
fcomps
iret
imul
pop
movsb
fbld
lods
sub
mov
mov
sbb
push
cltd
inc
xor
jle
testb
in
jo
in
ds
push
jp
mov
aas
mov
sub
mov
imul
mov
sahf
or
or
shll
or
xchg
aaa
mov
mov
add
inc
scas
jo
add
mov
repnz
adc
sub
add
push
sub
or
xor
adc
nop
push
ljmp
shrl
mov
cmp
mov
jns
mov
jb
push
incb
adc
into
xchg
test
xchg
push
sbb
and
and
pop
fsubrs
inc
xchg
repz
divl
mov
cmp
inc
shrl
cmp
or
sbb
push
jb
out
cmp
dec
movsb
or
pop
lods
pop
inc
or
xchg
es
fcompl
ficoml
cmovs
sbb
inc
push
rol
adc
adc
adc
movlps
leave
or
loopne
push
lret
xchg
push
mov
adc
push
add
push
mov
xlat
leave
popa
mov
add
ret
or
mov
aam
lods
jmp
cs
xlat
fnsave
mov
jmp
cmpsl
or
outsl
nop
adc
sti
push
test
cwtl
loop
adc
add
jmp
xor
xchg
add
mov
fs
and
mov
pop
repz
dec
and
pusha
push
sub
lock
jmp
add
addl
nop
test
or
jb
cmc
fstps
and
mov
insb
xchg
add
jmp
hlt
xchg
xor
arpl
jmp
and
jmp
inc
jp
inc
sbb
in
push
xlat
in
mov
mov
jo
jnp
dec
imul
inc
nop
jle
ljmp
jbe
jno
sbb
mov
shlb
xchg
add
adc
imul
jae
sbb
add
inc
or
cmp
fimull
fdivrl
inc
push
push
mov
pop
test
les
mov
mov
add
add
inc
inc
mov
movsb
push
movb
xor
call
add
cmp
test
xor
or
das
sub
add
aad
xchg
push
nop
jmp
sbb
sub
push
std
sub
sbb
cmp
movsb
adc
sbb
adc
add
sti
jbe
decl
jne
inc
cmp
or
loopne
lods
repz
out
lods
push
push
jge
sub
pushf
ret
test
jmp
adc
sbb
xor
test
or
add
mov
xor
jecxz
mov
mov
jbe
enter
andl
sub
aam
decl
test
lods
loop
ss
loop
inc
fs
xor
pop
pop
je
push
lock
adc
ljmp
push
inc
push
movb
mov
cmp
sbb
mov
mov
mov
mov
popf
xor
or
dec
hlt
xchg
xor
push
lcall
sahf
add
push
pop
add
sbbl
fs
add
or
test
cmp
test
mov
cli
lea
inc
jecxz
xor
inc
cli
mov
mov
sbb
test
sub
rclb
fs
dec
and
stc
dec
or
inc
cmp
xchg
dec
adc
xchg
add
clc
adc
or
dec
sbb
xchg
clc
dec
adc
pop
mov
fimuls
cmc
nop
imul
movb
mov
pop
das
fiadds
test
add
mov
cmp
lahf
add
aad
jns
nop
call
shll
sbb
pop
cmp
jg
cmp
or
into
popa
xor
jns
andb
jb
sub
cmp
ret
add
xchg
pop
rolb
xchg
xlat
roll
lds
lds
fistpl
ret
mov
add
mov
jmp
add
lret
ret
mov
inc
sbb
cmp
push
inc
fcomip
jecxz
or
inc
or
xor
les
jl
pop
jno
das
loop
loopne
inc
mov
xor
out
rcrb
jmp
push
jo
sbb
inc
add
jno
les
and
fwait
adc
mov
cmp
push
arpl
adc
gs
mov
or
aaa
and
mov
repnz
jecxz
pop
adc
icebp
inc
pop
addl
sar
cli
inc
iret
or
stc
add
sub
js
mov
test
je
cmp
ficompl
xchg
jl
jmp
add
or
pop
pop
push
add
mov
mov
jns
nop
movsb
inc
or
mov
xor
sahf
shlb
mov
mov
cld
dec
adc
or
cmpsl
pop
sbb
xchg
and
push
ret
and
cmp
xor
insl
xchg
jne
rorl
popa
sub
je
add
sub
push
adc
inc
xchg
add
fs
hlt
xchg
xchg
xchg
insb
add
rorl
mov
add
mov
ja
sbb
shlb
shll
and
inc
pop
jb
repnz
inc
movsb
push
inc
dec
jl
nop
mov
ret
mov
lock
pop
or
adc
add
ljmpw
lea
push
xor
jle
inc
dec
sub
lea
jbe
add
xor
mov
add
hlt
push
adc
or
push
and
sbb
fisubl
sbb
in
add
or
scas
fisttpll
pop
xor
test
xlat
push
dec
fadds
adc
insl
xor
push
xor
loope
jge
pop
fs
paddb
mov
lcall
mov
add
inc
add
adc
sub
add
or
adc
test
mov
push
dec
ljmp
fisubrl
adc
pop
pop
in
adc
loop
std
sbb
mov
jp
call
adc
sbb
push
or
movsb
or
inc
pop
cmp
pop
mov
orb
in
das
inc
lahf
rclb
jl
mov
jbe
add
insb
pop
xchg
xor
dec
xchg
imul
add
movsl
mov
jo
dec
orb
inc
aaa
mov
cmp
dec
dec
push
mov
mov
leave
xor
or
mov
cmp
add
and
scas
jns
mov
enter
shlb
out
pop
or
adc
pop
test
xchg
notb
push
xchg
popf
fmull
mov
add
adcl
jl
bound
clc
cmpsb
inc
mov
inc
sti
idivl
or
roll
adc
pop
test
adc
cmp
mov
ds
sbb
push
mov
outsb
shrb
fsubrl
jne
xchg
push
cmovae
mov
add
movsb
jmp
cmp
enter
aas
push
lea
jo
mov
add
pusha
dec
insb
xchg
les
lds
aad
sbb
sub
in
mov
and
ret
pusha
jecxz
test
push
cmpsl
scas
and
jae
shlb
sub
orb
mov
push
out
mov
inc
jmp
movsl
and
add
cwtl
dec
ja
mov
xchg
push
push
ret
pop
add
jp
xchg
xorb
test
ja
iret
imul
cmpsl
clc
fists
fbld
jnp
dec
push
add
jl
mov
mov
insl
orb
inc
add
std
inc
aam
roll
add
fimuls
jmp
add
push
adc
xchg
ret
cmp
or
out
add
repnz
lock
push
mov
push
out
push
xor
cwtl
icebp
loop
inc
cmp
mov
cli
cmp
dec
and
dec
sub
and
or
daa
or
repnz
sub
mov
add
pop
sub
sub
xor
and
inc
push
pop
inc
mov
cmpsl
leave
adc
and
xchg
add
and
add
cmc
inc
divb
or
out
push
ficoml
sbb
xor
test
push
dec
mov
and
push
mov
test
inc
je
sub
je
adc
jo
cmpsb
add
push
sub
add
les
jl
jmp
add
shll
jmp
add
data16
and
sub
xchg
mov
inc
inc
adc
pop
inc
pop
dec
loopne
arpl
adc
push
mov
xor
add
add
sbb
test
mov
push
push
mov
add
nop
sbb
adc
sbb
rcl
mov
out
or
cmp
je
mov
cmp
ds
jne
mov
call
pop
pop
sbb
pop
repnz
mov
test
xor
cmp
cmp
mov
cmp
enter
test
hlt
sub
add
pusha
push
lret
rclb
mov
sub
mov
mov
adc
rclb
push
test
fidivrl
sbb
xor
dec
lds
pop
xchg
adc
push
xor
dec
push
push
and
movl
jmp
cmp
push
push
loopne
and
inc
push
dec
sub
fwait
sub
sbb
sub
je
xor
mov
les
sub
bnd
cmp
push
notl
cmovg
fistpl
lcall
lahf
je
mov
addr16
je
pop
add
aas
pop
outsl
mov
daa
pop
aaa
ja
pop
mov
mov
dec
jo
inc
movups
inc
sbb
or
dec
dec
mov
mov
xchg
daa
sbb
push
push
loop
ficompl
mov
jmp
sub
pop
and
jle
adc
inc
roll
fistpl
imul
rcl
shlb
inc
roll
mov
sbb
add
movl
mov
mov
and
cmp
push
mov
in
jmp
mov
and
sarb
jle
pop
popa
mov
dec
cmp
in
cmp
adc
or
xchg
jecxz
pop
adc
aas
mov
dec
pop
adc
cli
or
lds
cmp
dec
sbb
mov
out
sbb
clc
pop
sahf
sub
jge
out
add
ds
sbbb
sbb
lret
icebp
and
fisttps
and
popa
push
xlat
loope
and
pop
imulb
fisubrl
mov
dec
outsl
adc
jne
adc
in
inc
pop
add
jno
cwtl
or
stc
and
push
sub
movups
insb
andl
out
pop
adc
sbbl
lods
cmpsl
mov
test
rorl
push
inc
add
and
add
sub
pop
xor
mov
es
adc
add
adc
xor
mov
ds
lsl
fnstcw
scas
mov
and
imul
repz
and
daa
or
push
pop
push
adcb
sbb
xor
sti
push
sbb
fsubrl
push
push
pop
js
sbb
dec
adc
or
and
pop
iret
adc
popa
adc
pop
add
test
push
lcall
ljmp
mov
and
add
xor
insb
jbe
mov
and
ret
cmp
testl
add
mov
sub
cmp
cmp
popa
xlat
lret
pop
in
push
mov
data16
repz
cmp
popa
fidivrs
mov
pop
les
fnstenv
dec
and
cmc
insl
mov
loopne
test
xchg
push
jp
aas
and
imul
inc
jg
jne
xchg
push
add
imul
cmpsl
or
and
push
stos
jns
mov
aam
adc
por
jae
pusha
pop
int
lods
inc
cmp
ss
xor
sub
gs
scas
inc
leave
xor
pop
imul
sbb
xor
jbe
or
adc
mov
mov
dec
fsubs
mov
mov
out
xor
js
and
and
dec
cmp
or
cs
aam
mov
fs
add
sub
push
push
xchg
add
gs
mov
cmpsl
sub
loop
push
mov
and
push
and
outsl
jnp
add
mov
push
inc
xchg
mov
dec
nop
les
inc
loope
sbb
pop
inc
push
repz
inc
pop
dec
jo
lcall
adcl
ret
mov
leave
sbb
push
sbb
call
movzwl
movsl
inc
jp
in
and
adc
mov
cmp
push
and
adc
fs
lods
test
sbb
mov
sub
push
inc
or
push
push
push
jmp
das
mov
es
ds
add
adcb
mov
or
xor
fldenv
jl
mov
xchg
cmp
insl
lcall
out
push
scas
sub
add
enter
lret
push
push
push
push
jnp
mov
push
mov
add
push
roll
dec
push
sub
into
push
scas
sub
roll
add
or
inc
push
loope
mov
faddl
inc
and
shlb
repnz
jo
dec
mov
fisttpll
push
pop
sbb
jge
test
or
in
push
sbb
and
in
add
sub
cmp
sbb
in
push
jmp
movsl
mov
cmc
or
dec
inc
scas
in
movsb
adc
inc
popa
mov
adc
or
or
sbb
adc
and
and
aam
test
pop
lahf
mov
pop
and
pop
mov
sbb
pop
or
jmp
xchg
ss
mov
pop
jno
in
movsb
push
add
xorb
andb
add
pop
xor
jp
xchg
dec
add
rcrb
enter
jne
mov
xchg
in
xchg
inc
or
adc
sbb
loopne
lods
je
dec
mov
cmp
pop
icebp
addb
xchg
adc
dec
fnstenv
addl
out
push
adc
or
fwait
inc
mov
inc
mov
inc
or
and
cmp
leave
push
lds
pop
inc
mov
add
jb
inc
sub
add
nop
cmp
clc
xchg
ficoms
inc
mov
rclb
push
adc
push
adc
adc
push
add
and
push
adc
outsl
dec
loop
and
sub
push
loopne
add
clc
mov
sub
mov
push
mov
adc
outsl
mov
das
adc
rorb
clc
adc
mov
adc
clc
mov
repnz
sub
aas
adc
adc
leave
int3
loopne
add
and
sub
iret
push
cmpsl
xchg
jo
loopne
sub
jle
and
out
xchg
inc
mov
imul
mov
hlt
mov
insl
add
int
addr16
inc
add
ret
movsl
pop
xchg
inc
xor
add
leave
lret
push
mov
push
aaa
in
pop
movsb
jbe
pop
pusha
pusha
test
and
jmp
lods
addl
jmp
jo
inc
inc
sahf
sbb
cmpsb
push
pop
pusha
lea
pop
pop
or
push
dec
pushf
mov
adc
cltd
enter
clc
mov
or
xor
pop
mov
enter
mov
adc
add
push
icebp
sub
orl
lds
adc
inc
ss
push
inc
add
jb
or
pop
lahf
call
ja
cmp
jb
adc
mov
jge
sub
jbe
add
cmp
mov
lods
cmpl
jl
mov
mov
dec
adc
sub
inc
pop
insb
mov
xchg
push
dec
insl
pop
sub
cmp
add
or
jp
sub
into
mov
fdivrs
cmpsb
push
mov
and
shr
jl
and
cmp
lock
adc
dec
or
imul
repz
je
testl
fnstsw
jmp
and
ljmp
add
je
jb
or
into
mov
testl
cmp
je
push
adc
cltd
push
bound
push
add
jmp
inc
push
inc
imul
add
sbb
fcomi
sbb
jecxz
pop
adc
and
sub
movsb
in
push
sbb
add
sub
aaa
lods
mov
mov
xor
jnp
add
outsl
mov
mov
rorb
cwtl
fs
test
int3
cmp
add
mov
int
or
into
or
sbb
mov
push
push
je
in
adc
addr16
mov
or
or
or
and
xchg
adc
dec
dec
xor
dec
add
dec
rclb
push
cmp
addl
add
test
cmp
je
jb
jne
loop
push
sub
add
or
and
cmp
aad
mov
inc
xorb
daa
mov
jbe
sub
pop
insl
stos
add
jge
inc
adc
push
jbe
in
xor
sbb
or
lock
cmp
pop
ret
cmp
ss
push
inc
adc
cmp
mov
pop
mov
adc
add
sbb
jb
jmp
xchg
shll
mov
mov
mov
mov
ss
and
pop
mov
dec
sub
push
or
ret
and
add
or
mov
test
movsl
in
ret
add
int
adcb
ret
inc
xor
dec
out
push
and
mov
pushf
imul
inc
and
out
push
mov
xor
push
loop
sbb
sub
cmpsl
lea
xor
xor
inc
ja
jno
jle
sbb
push
push
add
and
int
ljmp
and
inc
or
and
out
jne
rorb
adc
aad
or
jnp
pop
sub
adc
pop
lea
add
xor
scas
hlt
or
sbbb
xchg
and
and
or
jno
adc
jne
xchg
js
sbb
cs
lret
and
and
xchg
sahf
shrb
jb
das
mov
jp
or
lods
cmp
dec
dec
add
xchg
mov
push
adc
dec
leave
hlt
xlat
cmpsb
adc
push
jmp
push
sti
sbb
sub
and
leave
add
mov
and
enter
xor
or
loopne
mov
rorb
or
push
push
and
and
stos
pop
fsubs
lds
push
lea
sub
pop
jmp
orb
scas
push
adc
mov
adc
adc
cltd
dec
add
or
add
mov
orb
inc
add
rol
inc
push
movsb
mov
xor
inc
xchg
je
mov
jl
inc
dec
sub
and
push
mov
push
jmp
jg
ret
hlt
das
xchg
jne
sub
push
mov
sub
sub
mov
add
and
add
mov
lea
xchg
adc
sub
xchg
hlt
xchg
int3
jbe
adcb
pop
add
nop
insl
mov
cmpb
pop
push
imul
lock
jl
shld
cmp
pop
in
fs
cltd
mov
push
and
inc
jo
sahf
addr16
dec
push
inc
add
int
or
jl
js
push
xor
aas
mov
or
xchg
imul
add
push
and
or
or
mov
push
mov
pop
mov
push
pop
inc
pop
push
push
or
shlb
inc
outsb
stos
in
xchg
xchg
add
push
mov
sbb
cmp
sub
mov
aam
loopne
jl
sub
add
push
and
push
xchg
pop
lods
xchg
and
aam
adc
xchg
ret
mov
push
pop
jp
mov
lret
and
aam
scas
insb
pop
outsl
and
jns
aas
push
adc
ret
xchg
dec
xchg
mov
xor
popa
fisttps
ljmp
or
or
and
rcrb
loope
inc
add
xchg
sbb
add
and
pop
fs
sbb
int3
adc
pusha
push
daa
jne
in
cmp
or
sub
and
cmp
cmp
test
xchg
mov
imul
dec
cmp
ds
pop
jae
xchg
or
pop
dec
pop
imul
hlt
mov
sbb
lcall
xchg
subb
nop
cmp
dec
aad
push
dec
dec
or
mov
int3
push
cmp
add
jp
aas
pop
mov
aaa
jae
js
enter
add
test
and
cs
inc
cs
push
sbb
ljmp
sub
pusha
enter
adc
cli
cwtl
out
mov
sbb
xor
push
arpl
cmpsl
adcb
xchg
sub
xorb
add
hlt
add
les
decl
sbb
sub
jp
fwait
inc
fnstsw
cmp
jle
adc
les
and
rcll
jo
jl
jl
sub
lds
mov
push
and
cmp
jle
and
mov
aam
out
pushf
add
mov
dec
pop
pop
xchg
add
push
clc
loop
fiadds
adc
fs
sub
push
mov
cmp
fwait
or
push
add
je
or
nop
hlt
pusha
or
addb
and
cmpsl
push
das
inc
fldpi
push
dec
jp
add
pushf
sbb
adc
pop
ljmp
stc
xor
and
push
sub
sbb
mov
xchg
cmp
add
in
lods
push
and
push
loope
test
cs
pop
push
push
shlb
sbb
or
jne
addr16
push
push
push
xchg
int3
icebp
add
inc
es
push
add
insl
bound
stc
fwait
in
cltd
fadds
sub
sub
and
push
mov
call
xchg
push
scas
repz
sub
nop
push
pop
or
xchg
subb
icebp
dec
arpl
jnp
inc
test
dec
fstl
add
dec
rclb
dec
jnp
cmp
or
popa
pop
lea
adc
cmpsl
inc
mov
cmp
fdivs
jle
mov
and
cmp
mov
sti
jae
addb
cmp
fadd
sub
jmp
and
mov
jmp
dec
icebp
clc
jle
rolb
inc
cmp
cmp
movsb
jp
inc
sub
inc
or
stc
and
mov
and
sbb
jno
and
outsb
inc
dec
insl
aas
test
sub
mov
sbb
jmp
mov
mov
push
add
pop
push
dec
jmp
popf
mov
rcrl
add
ljmp
ljmp
xchg
int
pop
xor
add
pop
pushl
mov
adc
xchg
or
loope
sub
sbb
imul
sub
dec
xchg
jmp
leave
pushf
cli
clc
jge
jnp
xor
sub
out
adc
mov
xor
inc
jmp
add
sbb
and
int
jge
push
rcr
mov
push
jmp
bndldx
shrl
jne
pop
mov
add
jae
xor
pop
add
push
test
inc
push
cmp
push
jl
rcll
add
loopne
dec
jns
push
mov
test
or
je
inc
and
push
or
insb
push
lcall
je
sti
insl
pusha
pop
je
shlb
jmp
imul
mov
nop
fistl
xor
sarl
mov
push
stos
movsl
popf
lods
ss
adc
sub
jno
inc
jo
mov
movsb
and
aad
cmp
mov
mov
xor
xor
dec
adc
jo
hlt
fs
push
jae
mov
push
stos
inc
movb
rcr
pop
or
push
sbb
cmpsl
jmp
or
clc
rolb
pusha
ss
mov
pop
inc
ret
jbe
xchg
mov
dec
cli
cmp
add
jle
push
cmp
and
and
push
adc
jne
ja
push
or
shr
lret
sbb
jnp
movsl
dec
out
cltd
and
in
dec
pop
dec
orl
inc
pop
or
cmp
je
dec
xorb
jecxz
adc
ret
push
idiv
jmp
adc
or
add
pop
pop
js
adc
cmp
pop
xchg
xor
xchg
rorb
rorb
pop
inc
push
lock
sbb
mov
jb
xchg
sbb
popf
sbb
test
daa
pop
enter
push
xor
dec
shlb
lds
jae
add
dec
jo
cwtl
xor
pop
and
add
dec
xchg
push
repz
fnstcw
sub
xchg
test
add
and
shrb
mov
add
jl
xchg
lret
inc
fdivrl
mov
out
fwait
loop
xchg
xor
mov
inc
loopne
inc
mov
dec
and
mov
movsl
jl
jmp
xor
sbb
jbe
sub
test
push
xchg
push
fmul
pop
fstp
pop
xor
jnp
inc
mov
mov
or
add
lock
fdivrl
ss
xchg
out
or
push
push
inc
add
inc
xchg
cwtl
mov
cmp
mov
or
or
daa
mov
jle
aad
adc
push
add
cmp
and
inc
sub
sub
pop
sub
push
and
cld
ret
push
jp
daa
and
cmp
dec
andl
or
adc
cmp
sbb
daa
push
or
adc
push
xchg
xor
mov
in
push
jae
stos
or
dec
lahf
dec
push
jb
pop
mov
sbbl
cmp
fs
cmpsb
push
fs
push
insl
dec
pop
xor
push
in
sahf
frstor
mov
mov
inc
and
cs
stos
fbld
sub
mov
les
dec
jnp
fwait
push
aam
insb
push
inc
outsl
sbb
shlb
mov
push
dec
mul
cltd
nop
or
inc
inc
jge
sbb
inc
sub
adc
and
pop
pop
add
int
es
aas
pop
insb
insl
cs
xor
xchg
push
jl
aas
sub
dec
and
loope
jb
xchg
cmpb
popf
add
inc
dec
pop
jg
jns
loopne
popa
add
loope
dec
or
pop
dec
adc
pop
repnz
icebp
pop
or
jne
jb
inc
test
pop
mov
sbb
xchg
nopl
inc
push
in
xchg
and
pop
pop
mov
adc
test
lods
js
pop
mov
pop
lret
rclb
jge
mov
inc
pop
pushf
mov
cltd
jecxz
sti
fildl
sti
movb
nop
mov
adc
int3
adc
dec
pushf
pop
xchg
sbb
push
add
rcrb
nop
and
add
clc
pop
jmp
push
push
shl
mov
cmpsb
loopne
add
stc
arpl
mov
mov
xor
cltd
nop
fists
xor
push
cltd
jmp
leave
push
cmp
jnp
sub
test
in
or
aas
test
push
and
jmp
and
ret
inc
adc
sbb
and
sbb
stos
push
or
inc
ror
adc
mov
cmp
sub
pop
sbb
push
insb
lret
pop
mov
sbb
call
dec
adc
xor
pop
or
push
sub
mov
imul
inc
sub
xchg
xchg
sets
or
dec
enter
insb
or
jmp
adc
insb
into
and
pop
mov
nop
out
dec
inc
push
inc
jmp
roll
sbb
ds
out
rorl
sbb
jns
sub
nop
pop
cmp
enter
imul
std
fldenv
mov
test
inc
stos
xchg
nop
sbb
jb
stos
mov
xchg
es
repnz
repnz
jmp
popa
movsb
and
push
fs
lds
nop
scas
inc
inc
lds
outsl
mov
cmp
or
xor
adc
push
or
xor
pop
test
add
nop
outsl
mov
dec
nop
sar
outsl
clc
es
scas
mov
pop
dec
test
or
and
dec
ja
cwtl
mov
je
jno
popa
push
and
call
or
lcall
add
stc
xchg
pushf
pop
insl
inc
add
insb
and
shr
dec
xlat
push
mov
test
andl
mov
inc
push
pop
mov
adc
rclb
xchg
dec
adc
sbb
inc
dec
or
pop
lock
mov
test
sbb
or
mov
mov
arpl
adc
cmp
addr16
shrd
push
shrb
mov
sbb
andl
inc
shlb
sbb
addr16
lcall
pop
mov
sub
andb
jo
mov
pop
rcrb
sub
jl
sbb
or
movsb
push
ss
mov
rcrb
add
daa
pop
or
and
dec
cmp
and
nop
xor
pop
mov
outsl
adc
rclb
inc
mov
jp
fmull
xor
cmp
cltd
orl
notl
insb
inc
sbb
lods
int
idivl
push
shrb
insb
cmp
pop
gs
or
arpl
push
cmpsl
push
sub
fsts
lods
push
sbb
jmp
push
mov
mov
ja
scas
popw
shr
xchg
lea
mov
inc
sbb
mov
or
je
pop
inc
jns,pn
out
adc
or
and
repnz
push
idivl
push
push
push
add
adc
inc
dec
xchg
loope
imul
jle
subl
popf
in
movsl
sbb
jb
shrl
jbe
and
cli
xchg
repz
dec
or
mov
xor
out
shll
or
push
sbb
xchg
sti
dec
orb
pop
lods
inc
inc
rcrb
incl
jae
test
dec
arpl
mov
sahf
xor
repz
add
sbb
inc
xchg
cmp
push
fwait
xchg
cli
inc
push
jge
cmp
mov
nop
cwtl
in
adc
add
andb
push
repz
push
and
jp
aad
popa
movsl
andb
jmp
int
ret
cmp
jge
dec
rorl
in
xchg
rol
pop
es
or
in
shl
pop
mov
lods
addb
nop
pop
mov
iret
repnz
shrl
enter
rolb
movsb
daa
dec
out
int3
test
clc
rorb
push
or
out
add
je
and
aaa
pop
adc
dec
adc
inc
int
lgdtl
call
rol
adc
movsb
shrb
flds
in
push
je
dec
mov
jbe
pop
push
out
sub
or
andl
jp
mov
push
sub
add
mov
and
mov
lea
bswap
xor
in
and
test
sub
xchg
add
mov
or
movsl
pop
push
mov
lcall
push
shlb
dec
xor
sub
mov
mov
add
jbe
enter
rcl
inc
sub
imul
pop
es
jp
pusha
adc
or
jge
ret
push
adc
jle
inc
sti
sub
movsb
lret
adc
adc
mov
adc
cmp
dec
cld
leave
test
jge
je
inc
sub
mov
mov
or
sub
inc
dec
mov
xor
dec
cmpsb
rcl
inc
dec
push
xor
loopne
xchg
jo
ftst
sbb
and
dec
sub
je
lahf
dec
bound
mov
push
rcr
or
adcb
ret
pop
add
push
and
mov
les
push
jne
adc
xchg
push
cmp
stos
fs
lds
pop
pop
push
cld
push
insl
push
lcall
fcompl
push
addr16
add
subb
rcl
inc
adc
rcrb
push
insb
add
jmp
lods
pushf
insb
sbb
inc
and
push
xor
adc
std
je
mov
cmp
xchg
add
cmp
lods
jo
or
inc
test
ss
push
faddl
loop
mov
lods
pop
dec
xorb
clc
push
imul
or
inc
dec
sub
push
mov
popf
inc
js
or
rcll
push
adc
add
and
mov
int
roll
xor
add
test
add
mov
and
or
xor
push
into
mov
xchg
add
mov
adcb
add
or
adc
push
adc
fimull
adc
xchg
jno
adc
sti
sti
pop
test
sub
add
outsb
sbb
mov
xchg
int3
sub
cmpsb
mov
xchg
je
lods
push
lret
aam
int3
inc
push
dec
inc
ret
aas
and
addb
dec
inc
and
or
aaa
lcall
adc
testb
mov
jge
not
xor
jnp
std
adc
and
and
fldl
xor
sbb
cmp
rcll
dec
jecxz
pop
push
sbb
sbb
add
push
xchg
ret
pop
dec
loope
cmp
dec
jmp
ljmp
add
push
js
clc
inc
roll
pop
adc
stc
subb
push
jne
je
sub
fisttpll
adc
movsb
and
icebp
mov
jbe
int
les
sbb
adc
mov
or
es
inc
pop
insb
loop
roll
lock
sbb
aam
dec
sbb
jp
jo
rcll
stos
push
xchg
inc
inc
inc
pop
add
jo
movsb
mov
pusha
jne
sub
in
and
push
push
scas
inc
loopne
or
mov
pushf
push
cmp
mov
popl
inc
push
xchg
clc
mov
lcall
ss
or
repz
cmp
cmp
inc
add
shlb
xchg
xorb
sbb
mov
push
scas
mov
nop
test
insl
push
pop
stos
insl
cmp
out
js
jb
sbb
mov
push
push
fcomps
xchg
ja
add
dec
pushl
repz
or
inc
mov
sete
leave
int
ficoml
push
rcrl
or
jae
inc
in
adc
pop
jo
daa
inc
shlb
push
cmp
popa
sub
xor
leave
pop
inc
test
imul
insl
imulb
mov
daa
cmp
mov
loopne
aam
incl
dec
imul
sub
test
xor
add
into
pusha
sbbb
jnp
push
fnstcw
lock
push
xor
cmp
insb
push
dec
push
mov
mov
leave
add
pop
test
mov
clc
je
mov
or
pusha
mov
jo
xchg
rolb
jno
cmp
ret
sbb
es
sub
push
imul
inc
or
mov
lret
jmp
mov
mov
imul
push
je
push
jb
jns
adc
shrb
mov
insb
jo
pop
inc
popa
popa
inc
les
xor
leave
adcb
sbb
sub
add
dec
inc
push
test
pop
pusha
xor
push
aaa
add
test
add
jne
or
push
and
scas
cmp
lea
lret
ss
fidivrl
add
xor
adc
loopne
shll
mov
cmp
call
lret
adc
cmc
add
orl
and
xchg
out
push
push
and
xor
iret
push
inc
and
inc
es
sbb
movsb
mov
sbb
adc
outsl
cmp
arpl
nop
pop
push
mov
lahf
loope
xchg
and
outsb
dec
add
add
xor
aam
add
sub
pop
sbb
call
or
or
jne
mov
push
sbb
and
jmp
arpl
mov
mov
les
ja
mov
cwtl
rorw
scas
movsl
rol
loop
adc
pusha
xchg
push
mov
into
sub
and
jno
sahf
scas
rolb
ret
xchg
sub
push
or
mov
sub
pop
ja
test
fadds
test
subl
pop
jmp
push
jl
mov
cmpsl
cmp
jb
loope
lods
ss
adc
int3
pop
lcall
fildll
or
sub
or
pop
clc
dec
xor
xlat
int
mov
in
cmp
sub
aas
or
mov
jnp
fisubl
arpl
icebp
inc
xor
push
push
or
and
xor
jp
test
mov
jb
push
and
xor
inc
sbb
sbb
fs
mov
xor
mov
xchg
push
rcll
clc
ljmp
xor
sub
loope
cmp
subl
stc
pusha
sub
test
xchg
imul
xchg
lret
mov
adcl
sub
cmp
adc
sub
push
add
dec
js
mov
mov
push
jne
xlat
adc
lods
adc
test
and
fnsave
jmp
pop
adc
pop
and
adc
loopne
mov
mov
jo
dec
pop
xchg
movsb
les
stos
cmp
sbb
insb
mov
movsl
mov
rolb
jmp
into
add
fs
rcl
outsl
fdivrl
sbb
mov
jae
ud1
js
xor
sbb
cmc
xchg
pusha
popa
test
std
inc
scas
adc
mov
xchg
popa
push
cwtl
push
jae
xlat
xor
es
insl
add
aam
sub
pop
dec
out
push
clc
cmp
jge
mov
and
out
adc
inc
xchg
push
imul
scas
or
or
or
call
xchg
or
mov
fldenv
mov
bnd
aad
adc
nop
mov
push
xor
add
lcall
mov
inc
push
add
testl
inc
movsl
loopne
mov
inc
fdivl
scas
rolb
ljmp
xchg
jb
or
fldl
or
sbb
sarb
cld
xchg
insb
pushf
outsl
mov
cwtl
or
imul
inc
cmp
fs
int3
adc
add
imul
negb
mov
dec
insb
mov
lret
loop
inc
imul
push
push
adc
dec
xor
adc
mov
test
inc
lret
daa
dec
push
push
cmp
xchg
ja
jl
lcall
dec
hlt
xchg
insb
popf
push
and
xchg
jmp
sbb
insl
cltd
cs
and
sub
or
sub
add
pop
jmp
daa
xor
pop
cmp
and
hlt
or
push
rorl
loopne
xchg
cmp
call
int3
mov
inc
jbe
js
movzbl
fsubs
es
add
sbb
or
sbb
xchg
aas
dec
xor
pop
and
lcall
add
cmp
icebp
push
hlt
aam
lret
popa
leave
test
or
and
lds
icebp
jmp
adc
fcoml
or
jle
in
and
cmp
jnp
add
and
scas
cmpsb
push
xchg
adc
std
and
addb
jne
cltd
fmuls
inc
movsb
inc
xlat
mov
roll
aas
lods
inc
lea
pop
fs
sub
mov
pusha
push
pop
inc
xorl
pusha
add
por
popa
packsswb
add
lcall
hlt
mov
or
and
add
fbld
add
fcomps
and
mov
or
xchg
daa
fcom
pop
jmp
cmpsb
and
xor
shlb
aad
push
and
push
jbe
fsts
faddl
das
pop
dec
jne
jne
xor
mov
clc
jns
pop
cmpsb
inc
cli
lahf
mov
push
dec
sub
cmp
fmull
xor
cmp
pusha
adc
mov
dec
cwtl
sbb
push
dec
or
subb
rcll
cli
daa
sub
cs
lods
xchg
xorb
push
es
pop
sbb
or
jmp
mov
add
in
add
andb
in
inc
adc
mov
in
jecxz
leave
ret
add
or
mov
mov
adcb
hlt
rcl
mov
shlb
push
sbb
imul
push
add
sub
mov
cmp
xorl
adcb
push
push
mov
fiaddl
movsl
or
pop
xor
push
scas
sbb
sub
orb
push
in
xchg
xor
xor
or
or
jnp
jbe
jae
inc
push
add
inc
or
pusha
loopne
jno
jae
adc
dec
jmp
dec
bound
push
sbb
xor
xorb
mov
les
js
and
jo
rorl
and
push
decb
dec
add
and
or
push
add
into
inc
jp
dec
ret
or
insb
and
mov
movsl
ds
add
adc
repnz
pop
lock
xchg
jmp
jne
fists
or
adc
jno
or
insb
push
jp
mov
pop
pop
testl
mov
push
outsb
mov
sbbb
sti
sub
xchg
xchg
or
mov
js
jo
push
mov
in
mov
in
repnz
call
xchg
or
insl
sub
or
orl
int
push
fcmovbe
pusha
add
xor
popa
add
in
pop
push
jns
lret
sbb
sub
push
mov
cmp
or
and
nop
outsl
dec
roll
add
leave
in
lods
inc
dec
mov
add
sbb
cmp
inc
xchg
add
mov
mov
test
pop
inc
cmp
add
xchg
xor
push
fs
adcl
stc
or
and
xchg
push
das
or
mov
cmp
pop
negl
jmp
jge
ljmp
dec
sahf
push
jmp
cld
cmp
cmpxchg
data16
jmp
inc
add
xor
sbb
loopne
push
in
mov
mov
sub
pop
adcb
adc
fildll
add
sub
pop
and
loop
ret
sarb
mov
test
sub
push
fdivrl
inc
stos
lods
adc
call
jle
adcb
mov
xchg
adc
test
push
js
mov
pop
std
test
xor
imul
or
pop
outsl
jmp
add
sub
lods
lea
mov
push
push
pop
xor
mov
xchg
mov
jg
push
pop
out
xor
dec
inc
inc
add
sub
jle
adc
xchg
nop
nop
dec
jno
and
xchg
lea
lret
mov
fnstcw
ljmp
fidivrl
sub
rorl
pusha
loop
mov
imul
movq
sbb
inc
pusha
push
adc
ds
sbb
stos
xor
nop
lret
add
cmp
in
insb
pop
pop
les
mov
inc
pop
sbb
dec
pop
pop
xchg
insl
push
in
add
dec
lock
dec
sbb
mov
or
or
shlb
dec
jnp
dec
ret
lock
push
cmp
xchg
sbb
mov
mov
pop
nop
lds
cmp
xorl
push
sahf
push
sub
add
jo
jp
stc
cmp
push
mov
jnp
dec
repz
jns
fistps
dec
repz
mov
adcb
sahf
testb
dec
dec
push
out
push
pusha
jle
dec
idivl
jns
push
dec
repz
ds
jg
push
gs
stos
add
or
mov
add
xor
int3
adc
mov
push
repz
or
push
mov
lods
adc
ret
lahf
out
sbb
and
or
es
sbbb
pop
dec
mov
push
mov
push
mull
jmp
push
leave
add
lret
dec
dec
sub
sbb
cmpsb
sub
xchg
jl
sub
lcall
lea
dec
or
xor
sbb
xorl
aas
gs
xor
stos
push
lea
add
mov
xchg
ss
xor
arpl
imul
sub
push
pop
dec
sahf
push
push
push
mov
incl
popa
and
sub
cmpl
orl
dec
mov
sarb
cli
jo
loop
iret
cmp
push
and
inc
jmp
mov
adc
dec
xor
pop
shlb
xor
sub
inc
sub
sti
loopne
aas
pop
cmp
inc
push
or
xchg
scas
push
sub
dec
lret
dec
jae
cmp
sbb
out
xchg
xor
fcoms
lods
add
jae
add
ret
nop
fiaddl
add
cs
shll
testb
jmp
cwtl
mov
nop
xchg
xchg
loope
mov
push
dec
inc
xchg
dec
pop
aam
mov
add
cmc
xchg
inc
push
mov
fadd
or
jno
add
cmp
sbb
add
push
nop
data16
and
cs
push
orl
repnz
cmp
cwtl
imul
sbb
jle
inc
dec
dec
push
add
enter
mov
mov
adc
roll
imul
inc
das
mov
adc
inc
push
insb
lods
jns
out
mov
movsl
rdmsr
fidivrs
out
push
in
cld
add
add
or
mov
fwait
xchg
add
dec
aaa
test
push
sbb
push
fadds
add
adc
sbb
nop
or
sbb
or
sbb
push
clts
nop
add
adc
inc
add
inc
push
nop
add
add
add
sbb
sbb
nop
sbb
or
add
sbb
sbb
sbb
shll
xor
aam
mov
and
orl
dec
inc
xchg
cmp
dec
jl
push
add
mov
adcl
jge
movl
jmp
pop
or
cmpl
jne
jg
push
stos
or
loop
jmp
cmpsb
lea
sub
lahf
mov
push
leave
and
sub
dec
push
mov
stos
imul
or
ljmp
add
pop
cmp
addl
sub
test
and
or
inc
je
test
xchg
xor
add
sub
xor
add
add
cwtl
cmpsb
add
add
fldl2t
add
mov
test
adc
ja
adc
mov
mov
subb
cwtl
dec
insl
push
sub
outsb
dec
push
pop
mov
xlat
jmp
orl
adc
js
sbb
fwait
cmp
fldl
cmp
jp
test
and
sub
jmp
and
lds
pop
or
push
pop
jg
je
push
jne
dec
daa
dec
rorb
dec
sbb
int3
mov
or
inc
jmp
in
dec
and
pop
pop
jg
sbb
aam
shll
inc
push
xchg
push
ja
or
sbb
js
mov
pop
or
fcmovbe
pop
stos
lret
rcrb
jns
iret
jnp
push
push
adc
xor
pop
sbbb
aad
add
inc
pop
je
inc
into
sbb
into
push
nop
pop
cli
xor
movsl
mov
jne
popl
pop
jle
outsb
cmpsb
jge
mov
sbb
mov
shrb
push
mov
sbbl
and
inc
repz
sbb
dec
or
fwait
rcrb
test
pop
fmuls
xchg
lea
mov
mov
push
fimuls
jne
cmp
jne
addb
mov
daa
inc
lahf
add
xchg
xor
mov
cmp
jmp
mov
pusha
and
cmpl
or
push
pushf
mov
adc
dec
mov
xor
cmp
pop
lret
popf
mov
out
pcmpeqw
push
subl
aaa
xchg
movsb
ss
je
rol
mov
scas
sub
daa
inc
jae
and
lret
or
fsts
inc
stos
add
sbb
mov
jg
jg
push
pop
adc
mov
and
mov
ljmp
pop
aas
jbe
mov
add
pusha
cmp
pop
push
rolb
pushf
pop
and
pop
sbb
jmp
add
jmp
mov
rorb
aad
push
or
sbb
lock
sub
popa
push
mov
cmp
ss
mov
pop
pop
repnz
inc
pushf
push
movsl
mov
push
sub
xchg
pop
fwait
sub
popf
jge
je
je
or
hlt
test
or
dec
flds
fildl
aam
pop
movsl
dec
popf
xor
add
jg
jl
call
popl
stos
icebp
icebp
sbb
mov
add
jmp
dec
jmp
sub
xchg
out
inc
adc
push
xchg
dec
xorl
pop
and
pop
popa
es
rclb
cmp
mov
add
sbb
mov
or
in
mov
or
and
jg
loopne
adcb
je
mov
xor
dec
mov
movsl
ficoml
lds
push
push
addb
and
aaa
xor
adc
inc
cmp
mov
out
cmp
rcrl
fnstcw
dec
cmp
rorl
add
in
cmp
push
jge
dec
cmp
fwait
xchg
adc
imul
es
jg
fisubs
insb
jne
push
cmp
adc
nop
and
adc
sarb
ljmp
mov
aad
cmpb
xor
in
xor
pop
sub
jecxz
orb
push
cltd
fstpt
pop
mov
insl
xor
xor
mov
cmp
jl
mov
movsl
xor
push
cmp
add
add
push
stos
stos
cld
inc
adc
cmp
andb
add
aam
jge
jno
xchg
int3
mov
jle
lahf
hlt
loope
bnd
jmp
orl
sbb
pop
cltd
mov
cmp
lret
clc
adc
push
popa
inc
in
dec
sub
fmull
inc
pop
or
xor
clc
mov
stos
cmpsb
xchg
sub
dec
pop
sub
mov
pusha
dec
and
jne
out
cmp
inc
ljmp
jmp
xchg
sbb
test
xchg
lods
add
cmp
out
mov
popa
mov
dec
lcall
xor
xor
xor
lods
sbb
sbb
sbb
sbb
jge
popa
aad
mov
push
cmp
dec
mov
inc
and
adc
xchg
pushl
push
push
push
and
add
sbb
mov
aad
mov
xchg
inc
dec
push
mov
insb
pop
add
loopne
leave
inc
push
sbb
or
inc
push
inc
pusha
fldl
sbb
cs
or
nop
subl
icebp
mov
loope
mov
fdivs
loope
dec
ret
xor
sub
daa
xorb
dec
jecxz
inc
bound
inc
popa
lahf
je
mov
fldl
push
and
cmc
pop
and
cmp
int3
pop
push
sarb
pop
mov
enter
push
lcall
adc
js
xor
sbb
xor
cld
cld
cld
or
sub
je
dec
je
gs
mov
test
xor
mov
sbb
cmp
test
mov
or
mov
sbb
loope
push
rep
and
in
cs
lcall
leave
inc
jo
push
loope
xchg
jae
sub
inc
inc
dec
aas
mov
or
inc
inc
je
xor
sub
stos
xor
shlb
mov
and
add
or
subb
add
ret
popl
add
xchg
imul
pop
mov
xor
cmp
fsubp
stc
jg
sbb
out
mov
aas
jg
dec
xchg
push
mov
sub
dec
xor
hlt
push
mov
inc
jnp
insl
pop
fwait
mov
sbb
sbb
jge
mov
xchg
lret
sub
add
shrb
clc
jns
mov
jp
mov
dec
shl
lahf
jmp
cmp
dec
xchg
push
dec
outsb
adc
mov
xor
sbb
negl
shrl
test
orb
scas
push
and
adc
daa
ja
addr16
xor
dec
jmp
inc
mov
rorb
fs
fnstcw
dec
push
fdivrs
push
mov
add
add
push
add
pop
mov
pusha
mov
pop
inc
adc
cmp
cli
push
fs
cmp
fadds
push
adc
sub
lock
fiadds
hlt
and
ficomps
andl
in
mov
inc
xor
cltd
nop
mov
xor
test
pop
test
xor
nop
adcb
inc
mov
inc
xor
add
fs
mov
inc
movsb
lret
dec
cmp
lahf
and
in
and
sub
push
inc
test
inc
xor
xor
jae
sub
and
cs
loope
popa
es
dec
pop
push
mov
jmp
lret
and
pop
add
ret
sbb
jnp
mov
jne
and
call
andb
pop
cmp
test
mov
pop
push
aam
pop
es
inc
data16
shl
jo
sahf
daa
filds
insb
subb
pop
or
jmp
repz
mov
inc
pop
or
xchg
inc
mov
jmp
sub
xor
mov
or
lcall
mov
sti
sbb
frstor
mov
sti
mov
inc
dec
insb
test
sarb
enter
orb
add
add
fsubl
inc
xor
adc
jl
inc
cmp
or
sbb
sbb
popa
lret
popf
sbb
aaa
ret
sarb
aaa
jle
mov
adcl
lods
rolb
pop
inc
cmp
mov
xor
je
inc
cmpsb
dec
inc
or
add
repnz
outsl
loope
add
add
sub
sbb
xchg
xchg
ret
sbb
lods
int3
xchg
add
gs
jns
pop
ret
test
mov
mov
xor
mov
push
sub
mov
je
lret
daa
jmp
mov
sbb
sbb
flds
or
jb
or
mov
jo
mov
arpl
mov
adcb
dec
icebp
pop
adc
pop
in
sub
icebp
push
pop
insl
sti
fnstsw
xchg
pusha
sbb
add
repnz
add
loope
and
add
mov
lock
add
pop
mov
mov
leave
dec
push
push
and
xor
or
pusha
in
adc
mov
inc
sub
cmp
inc
test
and
dec
sub
mov
add
xor
push
in
push
jnp
push
in
inc
leave
push
jmp
jmp
mov
push
push
push
adc
fimuls
and
mov
sub
and
inc
inc
js
push
jne
shl
ret
jmp
std
fildll
cmp
inc
insl
and
push
mov
inc
pusha
js
push
mov
and
jl
ret
push
test
daa
cmp
dec
ss
add
xchg
mov
dec
frstor
pusha
int
mov
cwtl
sub
jmp
add
jbe
in
cmp
inc
inc
xchg
aas
jne
cmp
outsb
cmp
rorl
and
mov
ss
cmpsb
push
or
subb
push
dec
mov
adc
leave
imul
add
jmp
inc
xor
push
js
pop
sub
inc
xchg
dec
jo
in
xor
ret
insl
sub
dec
dec
push
push
lahf
pop
adc
and
or
xchg
enter
je
cmp
imull
data16
fs
mov
add
adc
push
mov
js
or
jne
mov
arpl
test
dec
xor
ds
jb
sbb
out
xchg
mov
bound
mov
mov
data16
inc
jb
sahf
sbb
push
add
loopne
and
rolb
lcall
or
fdivs
cmp
in
decb
and
or
ss
push
das
dec
lret
add
push
call
inc
or
out
mov
cmp
and
rorb
je
test
lock
jg
and
loop
inc
icebp
insb
sub
into
lret
mov
mov
sbb
fs
xor
sbb
jp
jno
add
and
cmp
into
les
cltd
adc
inc
adcb
data16
add
pop
mov
aas
pop
xlat
cwtl
lcall
dec
mov
fimuls
in
push
mov
adc
addr16
xchg
mov
and
icebp
sub
push
xor
insl
rorl
inc
fs
addr16
imul
lock
push
push
nop
mov
bound
pop
fstpt
xchg
or
or
dec
sub
dec
lods
xor
adc
inc
xor
aaa
dec
sahf
mov
jo
popf
pop
movsb
sub
and
xor
add
adc
rcrl
xchg
gs
dec
inc
add
mov
xchg
or
and
adc
push
adcl
mov
jb
ljmp
cmp
jbe
cmp
push
inc
popf
mov
cmp
push
sysret
nop
les
mov
adc
mov
jae
inc
inc
add
and
pop
sub
movb
pop
mov
push
shlb
outsb
dec
loopne
xor
adc
inc
into
je
stc
mov
add
sti
sbb
sub
lods
lock
inc
pop
mov
mov
and
push
and
mov
pop
pop
sbb
les
enter
push
mov
test
push
cmp
test
xchg
mov
xchg
in
loopne
testl
and
mov
add
jno
or
inc
mov
and
push
addb
sahf
or
xor
pop
inc
test
int
sub
or
decb
test
push
inc
and
xchg
add
cmp
and
pop
and
push
jmp
das
mov
xchg
sbb
xorl
sub
adc
imul
or
xorl
icebp
roll
lcall
sub
leave
xlat
insb
outsb
cmp
filds
xchg
je
aaa
dec
test
orl
xor
xor
cmp
imul
add
in
pop
adc
imul
mov
sub
or
cwtl
push
add
cmpsb
testb
or
lea
clc
aad
push
mov
cmp
mov
inc
xor
mov
loope
xor
jnp
push
xchg
inc
xor
inc
insb
test
or
outsl
out
sbb
scas
bnd
out
faddl
mov
incb
mov
outsb
mov
mov
and
inc
test
xor
push
sbb
add
sub
dec
orb
push
add
dec
sbb
and
xor
and
add
dec
dec
adc
mov
push
push
push
aas
sbb
add
adc
xchg
jecxz
add
or
mov
inc
pop
xchg
dec
push
and
les
mov
sbb
and
test
cmp
and
mov
testl
jmp
test
sbb
sbb
dec
push
lret
or
xorl
lahf
mov
sbb
adc
das
test
inc
inc
dec
mov
sub
mov
shr
aad
lret
imul
xor
shlb
cmpsb
sbb
mov
jne
jae
std
or
push
jb
shlb
pop
pop
mov
fdiv
icebp
cmp
pop
cmpsb
and
ror
pop
mov
pop
push
outsb
call
lock
movsb
or
push
out
jbe
pop
xor
mov
mov
icebp
out
test
jns
fsubrs
mov
stos
movsl
rol
mov
or
loop
je,pn
add
pop
or
jbe
adc
mov
sbb
mov
orb
or
cmp
aaa
int3
xchg
xchg
push
rorl
cmp
lsl
ret
mov
scas
push
xor
pop
mov
pop
push
lods
mov
shrl
roll
fwait
cmp
outsl
loopne
jno
scas
pop
and
adc
xor
pop
sbb
sbb
xor
dec
push
mov
inc
add
test
cmp
shl
pusha
jbe
pop
cwtl
xor
pop
lcall
aad
xchg
popa
jg
jno
xchg
xor
repz
fs
push
mov
push
pushf
jmp
add
mov
stos
sbb
push
rclb
jb
mov
into
add
add
pop
add
add
sbb
stos
xor
test
dec
mov
outsl
ret
pop
or
mov
mov
pop
jmp
xchg
jae
ja
lock
testl
inc
sbb
mov
popa
sub
push
push
cmp
je
lcall
dec
jmp
js
adc
loopne
pop
xor
insb
stos
mov
mov
add
clc
adc
or
mov
push
sahf
xorl
inc
push
movsb
cmp
lock
or
pusha
incb
pop
add
int
add
inc
pop
dec
or
inc
ret
dec
into
repz
add
call
inc
adc
fsub
pusha
js
scas
jb
sub
jb
es
inc
scas
jo
test
sub
loope
adc
bound
push
jbe
mov
xchg
xor
mov
sbb
add
and
idiv
xchg
imul
xchg
adc
cmp
ds
ret
addb
daa
mov
push
mov
mov
enter
xlat
mov
pushf
xlat
add
inc
xor
push
sub
add
and
insl
enter
and
mov
add
fisttpl
push
lods
jecxz
shlb
loop
and
test
lods
loop
sbb
les
in
enter
sub
icebp
and
arpl
mov
ds
movsl
sar
test
mov
cmpsb
and
dec
add
add
adc
les
movsb
xchg
ret
adc
dec
xor
add
adc
loopne
xor
int
xor
repz
pop
fsts
inc
mov
dec
mov
and
rcl
sub
xor
out
lahf
fimull
imul
jmp
add
inc
fwait
repnz
jbe
dec
fstpt
or
inc
push
inc
push
mov
push
nop
xchg
dec
stc
adc
push
mov
sbb
leave
jmp
sbb
sbb
imul
dec
mov
and
xchg
int3
and
cmp
mov
inc
adc
orl
adc
add
sub
leave
aam
test
add
dec
add
inc
fistpll
mov
and
hlt
ret
push
cmpsb
roll
imul
shl
inc
lea
sub
test
enter
and
xor
sub
add
jmp
fidivrl
xor
sub
lods
adc
jg
cmc
sbb
scas
mov
ret
inc
dec
xchg
stc
movb
push
cmp
xchg
nop
sti
insl
adc
push
push
push
cmp
js
les
lcall
test
mov
push
jmp
push
repz
test
fcoml
out
repz
xor
test
cld
inc
jo
xchg
add
xchg
nop
int3
and
fidivrs
pop
repnz
aam
jae
push
add
inc
and
adc
xchg
sbb
das
movsb
rcrb
mov
orb
mov
push
push
aas
or
mov
outsl
orl
inc
bound
mov
aam
rcrb
mov
adc
test
cld
add
popf
cmp
add
jmp
es
and
inc
pop
sbb
sub
movb
and
fsubl
lock
repz
mov
adcb
mov
fs
xchg
xchg
rcll
sarl
add
dec
add
insl
dec
lret
push
mov
mov
test
xor
and
pop
cmp
and
cwtl
add
sbb
imul
mov
add
sub
inc
add
and
cmp
imul
popa
mov
sti
inc
pusha
inc
mov
leave
push
daa
mov
lcall
mov
ret
sbb
sbb
add
inc
inc
loop
rolb
inc
dec
clc
or
xorl
jge
sbbl
cmp
cs
rol
orb
imul
jp
sbb
imul
lock
loope
cmp
repnz
cmp
data16
cltd
sbb
dec
subl
imul
mov
inc
mov
aas
lea
or
push
mov
sbb
lea
pop
stos
adc
cmpl
pop
xor
ja
cmc
cmp
adc
sbb
inc
and
ret
pop
pop
jecxz
xor
ficoms
mov
dec
push
loopne
xor
push
jo
dec
mov
pusha
push
jmp
push
pop
push
mov
or
popa
push
sbb
cmp
mov
sbb
cmpsl
xor
xchg
xor
inc
xchg
dec
push
lahf
fbld
add
dec
dec
insl
cltd
jne
sub
js
sub
std
out
sbb
add
mov
dec
adc
pop
loopne
jne,pn
xchg
into
fildl
pushf
addr16
adc
pop
jne
xorb
or
or
jns
popa
repnz
cmpsb
mov
pop
dec
lods
add
adc
lea
xchg
pusha
add
inc
mov
sarl
cmp
rolb
sub
add
mov
xor
sub
mov
pop
pusha
jns
push
adc
pushf
mov
addr16
mov
rclb
je
xorl
popf
loope
add
sub
nop
stc
push
inc
add
xchg
push
push
push
insl
add
inc
insl
adc
add
test
mov
or
pusha
sarb
jl
loopne
push
jg
mov
adc
js
xchg
sahf
negl
shrb
mov
pop
je
int3
inc
or
hlt
dec
cli
mov
ss
je
pop
aam
jae
repz
push
arpl
or
adc
sub
fimull
lea
lea
mov
xchg
jne
test
push
mov
inc
xadd
adc
xchg
add
fisubl
cmp
pusha
test
inc
inc
mov
lds
xor
cmp
and
or
inc
inc
arpl
in
xor
adc
das
outsl
pusha
xor
jo
call
or
push
adc
adc
push
movsb
dec
ret
push
push
cmovle
xor
arpl
and
loope
je
es
xor
xor
jns
inc
xchg
repnz
dec
jo
mov
out
push
cmp
or
inc
adc
pop
jne
adc
push
push
jno
jmp
xor
add
xchg
mov
pusha
fstps
jae
or
xchg
push
xchg
and
les
push
mov
or
popa
push
xor
adc
fldenv
add
jle
lcall
stos
mov
xor
out
pop
push
xor
or
adc
in
out
imul
push
push
push
jne
push
enter
ljmp
and
popa
push
lahf
imul
clc
xor
sbb
adc
ret
outsl
pop
cmp
jmp
add
rol
cld
or
es
add
add
inc
arpl
mov
add
push
pop
lea
orl
add
mov
add
mov
pop
mov
loop
fsubrl
lea
xor
mov
adc
and
pop
aas
data16
insb
pop
leave
mov
adc
enter
push
add
ljmp
aas
xchg
xor
push
or
test
sub
movl
das
push
lds
cmp
in
fisttps
pop
call
pop
or
xchg
mov
fwait
mov
mov
aam
test
outsl
sarb
adcb
mov
sbb
jp
mov
mov
call
jne
mov
pop
add
xor
mov
jno
dec
mov
adc
cli
and
and
xchg
jle
sahf
pop
mov
lret
sub
fwait
dec
add
cmc
lret
sbb
mov
sub
cmp
je
mov
xchg
adc
fisubs
add
push
movsb
mov
pusha
imul
cmc
add
push
adc
std
or
or
mov
inc
clc
addb
fs
adc
js
sub
and
sbb
sub
mov
sbb
mov
pop
or
jbe
add
ja
cwtl
dec
popa
and
out
ret
dec
dec
pop
push
adc
adc
xor
or
cmc
dec
jmp
xor
jbe
and
mov
and
cmp
jge
imull
call
leave
adc
push
call
push
mov
scas
mov
out
pop
sbb
dec
cmp
mov
inc
push
je
pop
ror
cmp
test
or
aam
push
fisubl
out
clc
add
push
add
add
pushf
push
aas
dec
loop
enter
push
adc
dec
movsb
push
sbb
inc
imul
adc
je
lcall
test
popf
sbb
xor
dec
mov
imul
cmp
cmp
inc
adc
xchg
cmpsb
cmc
xor
xor
mov
and
jae
adc
push
out
pop
pop
lea
js
adc
xor
add
push
cmp
lds
ja
or
enter
dec
or
call
sub
jb
dec
pop
or
mov
dec
sub
and
inc
test
sbb
mov
jns
xchg
mov
add
cmp
loope
scas
nop
mov
lret
add
loop
mov
push
outsl
mov
cmp
push
sbb
cmpsb
add
hlt
add
nop
or
mov
adc
pushf
pusha
sub
pop
push
xchg
jne
sarb
inc
lods
ficoms
sbb
in
mov
mov
es
fcoms
and
pop
push
and
pop
dec
cmp
insb
adc
pop
mov
jo
mov
outsl
push
test
or
sbb
subl
or
mov
test
mov
mov
adc
sub
adc
jmp
movsb
push
pop
out
in
fwait
orb
insb
lret
xor
pop
and
mov
mov
and
inc
jo
xor
fnsave
mov
sbb
and
jo
into
sub
cmp
ja
incl
cld
in
mov
lret
fmul
or
push
xchg
sti
mov
pop
push
arpl
ret
test
outsb
into
push
push
add
mov
xlat
cs
ja
add
push
xor
mov
push
and
fistpl
jmp
fwait
push
fcoms
pop
jb
push
stos
push
out
push
xchg
mov
icebp
xor
movsb
loopne
adc
mov
xchg
mov
cwtl
jge
push
xchg
lret
jmp
cld
mov
sub
xchg
aam
rorl
inc
jecxz
push
stc
sbb
mov
xor
in
add
cld
mov
jl
push
lods
mov
mov
push
push
push
enter
push
repz
jmp
push
cmp
lods
cmp
cmpl
add
leave
and
push
icebp
add
xor
dec
ds
subl
outsl
inc
sbb
cli
pop
cmp
fs
xor
push
mov
das
ror
andl
lock
int3
and
out
dec
fildl
and
push
jmp
jo
xor
iret
repz
addl
push
push
aam
fcmovb
mov
push
add
push
imul
push
sub
or
or
pop
leave
inc
ja
lahf
out
iret
xchg
and
inc
adc
xor
or
xor
mov
aad
cmpsl
or
test
add
mov
push
or
dec
dec
outsl
out
or
or
mov
add
mov
or
popa
add
mov
pop
push
xchg
data16
adc
jl,pn
arpl
cmc
out
shr
ss
sbb
inc
fnstcw
xorb
pop
sar
flds
xchg
mov
outsl
jnp
or
sbb
pushf
add
xor
mov
adc
jne
movb
ficomps
mov
out
in
int
xchg
adc
add
jo
jp
shll
fwait
jg
cwtl
stos
and
xor
in
jl
mov
stc
adc
pop
rolb
nop
or
nop
add
adc
adc
or
sbb
mov
and
mov
inc
inc
jo
adc
inc
pop
enter
or
jns
das
sldt
add
fcomp
incl
test
sbb
mov
xor
pop
sbbl
cld
std
mov
stos
fcmovne
adc
push
mov
fsin
orb
jnp
mov
or
ret
ljmp
sub
inc
pop
scas
or
rclb
xchg
dec
add
scas
lods
dec
add
call
jg
popa
and
insb
outsl
arpl
imul
ficomps
and
js
inc
outsl
jb
js
je
jb
jg
outsb
cmp
jae
insl
add
arpl
outsl
add
add
add
fs
insb
data16
js
outsb
imul
into
rcrl
outsb
and
jo
ds
lods
cmp
divl
add
divl
push
xor
outsb
fmul
gs
dec
sub
adc
mov
inc
ss
sar
filds
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
in
pushl
dec
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
sar
loopne
insb
insl
push
jo
jb
je
jbe
js
jp
jl
jle
jg
wbinvd
pop
inc
outsb
arpl
push
outsl
imul
and
mov
pusha
rorl
xor
inc
adc
add
out
lahf
fadds
inc
insb
jae
jb
rcpps
push
out
leave
xlat
mov
pop
inc
inc
fnsave
sbb
insl
jb
push
jo
jb
and
jl
stc
push
dec
dec
push
push
sbb
inc
data16
fstp
dec
dec
inc
and
push
xor
adc
cmpsl
clc
xchg
popa
jo
insb
imul
js
mov
popa
je,pn
insl
adc
je
and
fidivl
inc
and
fs
incl
sbb
jb
jb
and
cmpsb
cwtl
je
jns
or
gs
outsb
data16
outsb
je
arpl
daa
mov
jne
pop
xor
and
mov
push
xchg
ror
aas
xor
or
scas
loopne
dec
mov
rolb
jnp
data16
stos
out
insl
bound
and
xchg
xor
ja
and
jbe
dec
mov
sbb
scas
sarl
es
adc
out
bound
push
and
je
and
mov
ds
imul
add
test
data16
mov
push
daa
sub
dec
imul
insb
jb
xor
arpl
pusha
push
sub
mov
femms
outsb
filds
inc
xchg
dec
popa
imul
jae
int3
or
cmp
lcall
xor
popa
pop
xor
and
gs
push
or
push
neg
sbb
cmpsb
cs
ficomps
adcb
xchg
push
fisubrs
aas
xor
adc
shlb
dec
add
add
rcll
test
loopne
outsl
ss
and
and
fs
jo
cli
jbe
add
nop
out
pop
movsb
inc
xchg
push
mov
mov
gs
das
mov
add
sbb
lds
pop
out
inc
jle
outsl
push
jp
mov
or
arpl
lcall
bound
push
rcrb
pop
repnz
aaa
insl
in
ljmp
adc
imul
sub
outsb
popa
pop
or
in
inc
jno
or
std
mov
leave
nop
push
roll
cmp
jbe
inc
gs
fnstsw
adc
sub
es
lea
push
and
add
ja
push
cmp
xchg
mov
addr16
jae
xor
adc
jne
pusha
jo
sub
test
insb
adc
data16
lret
inc
sub
pop
dec
jmp
in
negb
add
cmp
pop
sub
inc
push
mov
test
ds
gs
dec
rcrl
push
dec
cmp
jns
and
or
sbb
daa
iret
lea
mov
nop
xchg
xchg
lock
leave
xchg
push
mov
pop
sub
outsb
add
push
jl
pop
sub
sub
stos
mov
push
add
adc
add
add
add
sar
jnp
add
pop
and
push
pop
pop
lods
aaa
fnstsw
push
pop
and
lds
pusha
push
pop
xchg
adc
add
inc
out
cmpb
sbb
or
push
mov
add
pop
xor
ss
jbe
popf
or
call
lds
data16
push
bound
jns
push
xor
data16
mov
jno
inc
les
push
jns
je
sbb
insb
fs
test
jmp
cmp
aas
sub
inc
pop
rclb
insb
outsb
inc
outsl
jae
in
xchg
jno
subb
xor
pop
inc
cmovs
lock
popf
sub
sub
dec
xor
pmaxub
pop
xor
sbb
add
je
push
inc
sub
out
push
js
loope
dec
dec
inc
dec
sub
idiv
add
jg
or
cwtl
rolb
push
cmp
dec
dec
push
sbbl
nop
push
lcall
popa
jns
out
push
dec
push
popa
jb
jo
dec
dec
dec
add
push
mov
push
gs
dec
outsl
jbe
add
sbb
push
in
stc
dec
add
test
add
nop
dec
cs
mov
ja
add
xchg
add
add
mov
sub
add
fcoms
and
add
ja
push
mov
mov
imul
mov
mov
pop
rol
inc
pop
inc
out
and
fisttps
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivr
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
adc
mov
popa
mov
lcall
push
or
mov
aas
ljmp
std
add
cmp
cmp
cmpsb
mov
dec
and
jns
add
das
test
adc
push
inc
dec
inc
inc
test
add
mov
enter
pop
ret
je
cld
jne
lret
xor
adc
mov
adc
arpl
les
xorb
out
ja
mov
out
jae
cmpsl
xchg
popl
mov
addr16
popa
mov
xor
mov
inc
insb
les
jp
icebp
mov
nop
and
jbe
inc
lcall
xlat
push
lock
ja
je
cs
jae
mov
bound
dec
jecxz
ret
ja
sub
dec
popa
add
pop
divb
jge
push
cld
jne
daa
pop
dec
cli
addr16
inc
outsl
ds
inc
push
xor
cs
dec
std
nop
jbe
jl
sub
add
sarb
roll
inc
dec
jae
xchg
sbb
insb
fdivr
out
mov
data16
test
dec
mov
pop
ret
mov
adcb
add
addb
test
mov
adcb
pop
sub
cmp
inc
pop
into
in
or
push
push
mov
sub
jb
stos
dec
pop
xor
js
push
pop
push
jo
add
and
adc
mov
insb
gs
and
scas
loopne
and
aaa
insb
pop
and
or
ret
jns
cwtl
jae
scas
jo
jnp
insl
cmp
inc
jb
les
insb
jns
daa
pop
inc
test
mov
jns
mov
cmp
fisubl
push
adc
cmp
outsb
cmpsb
xor
lret
hlt
jns
aaa
push
dec
sub
pop
outsl
shr
in
pusha
inc
jbe
push
push
push
push
popf
push
fs
and
out
xchg
test
dec
imul
inc
jae
inc
lock
pusha
gs
xchg
pop
mov
push
sbb
dec
dec
lahf
daa
test
push
test
jno
pop
pop
pop
push
push
jae
sbb
push
mov
insb
arpl
or
sbb
subl
ja
mov
data16
xchg
mov
pop
bound
push
push
push
dec
testl
xchg
sahf
int3
repnz
xor
ss
push
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
addb
pop
popa
push
push
jbe
fstpt
ljmp
insb
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
imul
sub
sub
int3
popf
out
jle,pt
add
lret
add
sub
sub
sub
sahf
sub
push
mov
add
push
cmp
call
push
in
inc
aas
pop
pusha
ret
pop
cmp
jb
imul
cmp
pop
jo
xchg
in
inc
sarb
in
cmp
out
inc
jo
testb
mov
jl
bound
sahf
out
in
sub
call
aam
jnp
out
mov
ds
rcrl
out
push
lods
cwtl
js
cmpsl
stc
cmp
jl
je
fisttpl
jo
cmp
push
cmp
repz
dec
dec
inc
inc
cmp
cmp
repz
sub
iret
repz
and
sbb
adc
ds
repz
or
cld
bnd
out
clc
hlt
lock
call
in
aam
out
sahf
enter
nop
test
push
mov
adc
push
iret
repz
shrb
mov
fdivp
push
in
fmul
repz
mov
pop
repz
repz
or
out
out
cwtl
ret
sti
cmp
je
and
out
jle
cmpsl
fbstp
add
inc
dec
sbb
sti
decl
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
ja
das
push
cs
jecxz
jne
xchg
inc
sbb
mov
mov
dec
cmp
dec
push
dec
outsl
shlb
ficoms
inc
outsl
jnp
push
push
push
aaa
dec
sbb
xlat
pop
push
mov
sbb
das
inc
outsb
jnp
in
dec
push
inc
push
outsb
inc
pop
ljmp
xchg
loopne
inc
mov
push
mov
inc
fdivrp
mov
ret
inc
sbb
dec
outsb
inc
and
xor
xchg
and
inc
jne
sub
hlt
ret
cs
and
int
push
jo
gs
popa
pop
push
out
adc
jbe
inc
popa
push
ss
xchg
cmp
into
rolb
push
frstor
push
push
stos
scas
add
inc
push
add
es
aam
xchg
xchg
jbe
ficomps
imul
js
scas
fstpt
das
daa
mov
jb
out
jbe
pusha
dec
mov
das
lret
xor
mov
jnp
jo
inc
fisubl
addr16
mov
js
arpl
es
outsb
push
dec
shl
push
push
adc
jo
push
iret
xlat
inc
js
imul
sub
popa
dec
mov
xchg
add
add
push
outsl
sahf
ret
out
mov
sub
insl
inc
jns
mov
jne,pt
jle
fs
testl
pop
scas
cmpb
adc
call
imul
addr16
push
inc
mov
or
imul
push
xchg
gs
sti
out
push
xchg
arpl
mov
ljmp
negl
inc
jbe
cs
and
fisubrl
insb
aas
pop
fisubrs
mov
or
js
cltd
push
xchg
aaa
xchg
mov
out
cmpsb
dec
sti
pop
push
xchg
push
push
push
lock
jo
in
mov
out
popf
xchg
das
out
das
out
pop
jnp
outsl
jb
jae
out
insb
pusha
scas
ss
out
xchg
fistl
fsubrs
pop
inc
ret
push
dec
lahf
imul
jmp
pop
xor
dec
mov
push
imull
push
out
loopne
negb
pop
fisttps
xor
negl
mov
orps
push
mov
ret
dec
ds
push
lock
xchg
in
lods
pusha
in
push
pop
decl
dec
stos
mov
pop
mov
lret
mov
mov
fistps
testl
add
push
cmp
mov
cmpsb
lahf
xor
push
pop
pop
lahf
fisttpl
jo
mulb
inc
push
fsubl
in
sub
paddsb
pop
test
jge
ljmp
dec
fimull
sahf
push
lods
mov
add
mov
iret
sti
xchg
xlat
ja
movsl
pop
int3
push
lods
cmp
popf
out
jge
sub
cmp
psubusw
pop
lahf
das
je
jbe
jno
jnp
fldt
outsl
pop
addr16
lods
stc
jg
imul
gs
gs
xor
sub
pop
imul
ja
xor
dec
aas
cmp
jae
std
sub
cli
push
push
xor
insb
jne
imul
adc
das
scas
das
xchg
push
clc
push
scas
push
dec
add
ja
adc
push
add
aas
jbe
scas
mov
cmp
cmp
cs
inc
enter
sldt
sti
scas
stos
and
sub
fiaddl
cmp
das
inc
jle
adc
fistpl
shlb
ja
arpl
aaa
out
and
push
pop
pop
xor
repnz
adc
sub
ret
mov
push
and
jle
stos
pop
rcl
es
sbb
or
sub
and
xchg
fadds
mov
cmp
mov
fisttpl
sub
add
or
or
push
inc
pop
fisubs
gs
and
imul
in
push
jae
jb
gs
popa
or
outsl
or
arpl
popa
out
push
jbe
out
lcall
jo
cmp
stos
addr16
out
jnp
jecxz
dec
mov
push
fldcw
je
mov
out
and
mov
or
imul
addr16
lahf
addl
popf
popa
cmpsl
jo
jae
pop
clc
cmpsb
mov
and
insl
jb
outsl
jo
pop
jae
cmp
aas
jae
sysret
add
into
and
and
rcl
fs
pop
add
cli
push
mov
jp
mov
mov
inc
stos
jg
xlat
push
push
ss
dec
dec
push
cmp
inc
dec
push
dec
aas
fdivrp
and
dec
dec
inc
push
sub
fnstsw
dec
and
and
push
dec
and
aad
in
movq
ficompl
inc
push
push
push
dec
dec
xor
sbb
bound
xor
cmp
inc
push
push
dec
dec
and
incb
pop
inc
push
push
xor
xor
inc
inc
dec
jle
inc
dec
fidivl
pop
push
and
or
cmp
push
jge
packssdw
inc
push
dec
inc
pop
push
shll
clc
push
dec
dec
push
dec
pop
lods
subb
pop
dec
es
inc
push
and
popa
out
add
dec
scas
pop
inc
inc
dec
push
push
imul
daa
push
inc
push
es
push
sub
sti
pop
add
sar
imul
push
bound
inc
inc
dec
ret
add
cli
mov
cld
xchg
jbe
mov
inc
mov
push
dec
sub
jnp
push
sub
ret
out
punpckhbw
inc
pop
xchg
ds
and
push
push
inc
dec
xor
xor
hlt
stos
cmp
mov
cmp
cmp
cmp
xor
loopne
cmp
xor
xor
mov
divb
mov
push
sbb
inc
xor
dec
pop
addr16
push
jbe
xor
and
push
inc
inc
pop
out
mov
xor
dec
push
inc
inc
xor
cmpl
aas
jb
out
adc
push
lldt
xor
repz
xor
add
aaa
ss
xor
xor
mov
addb
cmp
xor
dec
add
fisubrl
pusha
icebp
adc
scas
xor
aas
dec
xor
lret
in
jnp
xor
out
push
add
int
out
mov
repnz
roll
mov
into
je
add
das
pop
cmp
add
sahf
push
pop
mov
add
xor
sub
push
sbb
xchg
cmpsl
add
push
jne
bound
repz
cli
imul
add
mov
pop
fidivrl
outsb
and
sbb
jo
nop
add
mov
or
test
dec
sbb
in
inc
and
pop
mov
xor
sbb
add
push
add
add
fimuls
mov
pop
push
lcall
dec
xor
push
dec
loopne
outsb
mov
push
lock
jbe
push
pop
cmp
out
pop
add
add
pushf
pop
enter
add
pop
leave
repz
mov
add
dec
cs
push
inc
outsb
jns
sub
imul
aad
sahf
inc
push
cmp
scas
push
addr16
push
outsl
jo
insl
xchg
fists
xlat
mov
insb
xor
inc
jne
add
push
jp
jbe
out
fscale
pop
inc
bound
imul
inc
arpl
jmp
outsb
push
jb
imul
sub
sbb
fisubrs
insl
stos
adc
dec
test
int3
jae
imul
je
jb
cmp
sahf
or
jbe
mov
mov
mov
dec
je
jbe
jbe
inc
gs
insb
xor
fwait
inc
outsl
popa
pop
xor
cmp
imul
push
cltd
push
mov
mov
std
scas
adc
push
addr16
or
mov
sbbb
outsb
dec
imul
ljmp
lods
jbe
sbb
popa
push
je
imul
popa
into
inc
pop
repz
scas
and
push
insl
pop
fsubl
add
lcall
or
arpl
insl
bound
xor
insl
cmpb
add
outsl
in
shll
arpl
fs
mov
pop
dec
add
push
inc
dec
arpl
sub
xor
daa
fldcw
mov
fs
pop
push
pop
imul
dec
imul
addr16
insb
pop
fsubrl
imul
push
filds
mov
adc
int
mov
or
push
xor
ficoml
arpl
data16
insb
addr16
sub
outsl
and
push
imul
push
push
mov
mov
or
jb
pop
push
shlb
imul
iret
gs
jns
ss
push
push
dec
les
imul
sbb
orb
dec
ja
test
fiadds
stos
gs
cld
or
cmp
mov
mov
mov
mov
add
icebp
push
cmp
push
sarl
jo
mov
jge
add
or
add
adc
add
add
and
or
lret
scas
stos
mov
pop
or
push
je
jge
or
pop
mov
add
or
jl
or
mov
or
mov
push
lea
add
or
add
add
jle
jle
add
adc
int
add
adc
fistpll
jle
adc
in
add
adc
sti
aas
aas
aaa
jg
add
add
add
sbb
adc
add
aas
aas
aas
aas
sbb
and
add
ds
cmp
push
add
loopne
stc
std
sub
and
add
and
pop
or
stc
stc
inc
add
add
cld
cld
push
cmp
ja
push
add
add
out
cld
or
cmpb
stc
cmpsb
inc
add
add
pop
pop
mov
add
popf
lahf
push
add
add
into
add
int
push
rolb
add
and
add
or
loop
add
sub
push
or
ljmp
add
repz
add
bound
add
add
adc
add
jnp
out
add
or
and
sub
add
add
xor
fnstenv
sub
jne
lahf
jmp
pop
add
push
lcall
pop
sbb
add
add
mov
dec
add
xor
jg
add
xor
mov
add
add
add
add
pop
aas
aas
cmp
enter
adc
cmp
loop
into
add
into
fcmove
sbb
add
stc
loopne
add
mov
and
dec
pop
mov
cmpsl
incl
jle
jle
inc
insl
test
outsb
pop
inc
mov
sbb
add
jnp
pop
mov
or
push
clc
push
fldt
sbb
mov
sbb
out
pop
inc
addb
sbb
jge
pop
leave
ja
add
pusha
adcb
push
push
aad
add
pop
lods
aam
adc
out
cmp
cmp
aas
push
loopne
inc
mov
cli
jmp
lcall
je,pt
out
mov
out
out
ljmp
push
ljmp
lock
int
pop
add
sti
es
lcall
sti
mov
push
in
or
lods
dec
loop
lock
call
mov
inc
inc
inc
inc
push
clc
dec
dec
dec
test
inc
dec
mov
sub
dec
or
or
andb
repnz
mov
push
add
push
icebp
xorl
push
ret
adc
dec
or
and
bound
imul
arpl
jb
mov
xor
jl
add
ret
dec
or
or
sub
jb
or
push
out
xlat
scas
call
pusha
pop
mov
add
and
lahf
jbe
mov
add
ja
rclb
and
add
mov
xchg
outsb
pop
and
ret
mov
into
outsb
lods
jge
cs
es
arpl
je
fs
or
outsb
shll
add
and
subb
insb
stos
jae
add
test
pushf
bound
jne
lea
js
push
cmp
jnp
ss
mov
mov
int
pusha
ss
add
aas
insl
sbb
dec
insl
imul
pop
xor
pop
stos
out
rcrl
mov
add
jbe
push
mov
popa
inc
dec
add
movsb
inc
inc
mov
push
sbb
rorb
data16
xor
adc
add
mov
adc
insl
sbb
data16
outsb
adc
sub
push
fucom
push
in
lods
or
rorb
cmp
mov
fisttpll
xchg
aas
and
fnstcw
sub
pop
stc
fs
or
mov
rcrl
outsl
xor
ja
jne
cmp
mov
add
dec
rorb
push
sub
push
or
ret
insb
inc
bound
dec
dec
mov
jo
ficoml
fwait
enter
pop
sbb
ffreep
gs
je
jae
pop
movsb
and
arpl
into
push
test
pop
sbbb
outsb
jecxz
mov
ljmp
loop
sbb
mov
mov
mov
push
mov
mov
xchg
jns
leave
cs
ret
sbb
xor
sub
sbb
loopne
cli
xor
push
data16
enter
pop
dec
movsb
push
je
push
js
insb
clc
inc
aaa
xchg
or
les
and
sbb
mov
sbb
cs
sbb
sub
pop
mov
jno
inc
or
loopne
mov
loopne
nop
js
sub
popf
push
push
sti
pop
sub
jge
dec
jne
mov
out
cmp
dec
cmc
aaa
add
push
push
rcrl
cmp
jge
mov
insb
sbb
sub
push
sti
pop
xor
in
mov
and
hlt
stos
stos
xor
sub
pop
js
stos
pop
push
pop
test
xlat
sbb
xor
push
jl
test
inc
mull
mov
clc
pusha
adcb
outsl
int3
ds
fistl
in
sub
insb
dec
push
sub
mov
out
inc
sub
and
xor
cmp
lds
xor
push
arpl
nop
cltd
test
stos
fstl
and
ret
or
or
loope
popa
test
push
dec
jns
js
arpl
dec
je
or
xchg
add
push
jmp
jae
and
jae
mov
xchg
add
insb
sbb
ret
insl
add
xchg
lods
push
leave
jno
loop
pop
addr16
leave
xor
add
add
add
shrl
cld
push
shl
mov
xor
inc
jae
fsubrs
js
inc
cli
shll
push
pusha
divl
xor
push
addr16
sub
mov
add
popa
insb
jae
addr16
xor
aaa
mov
popf
dec
insl
push
sub
lret
cmpl
sub
and
imul
sbb
jbe
xor
mov
arpl
sti
dec
add
rorl
push
sahf
inc
cs
add
dec
dec
inc
outsl
outsb
gs
push
dec
and
cmpsb
push
subl
sub
or
pop
lahf
dec
push
dec
mov
pop
jo
push
pop
addr16
popl
movl
addr16
sub
pop
push
icebp
push
in
adc
das
pop
and
push
js
jbe
in
pop
out
cmp
mov
jp
xlat
das
adc
sub
push
inc
sub
add
inc
or
das
xchg
cmpsb
mov
or
popf
call
pop
pop
iret
add
sbb
pop
dec
fidivl
fwait
sub
pop
jge
push
fldcw
imul
pop
mov
push
mov
add
xchg
xchg
inc
cs
or
lds
add
pop
and
rcrb
in
fwait
inc
mov
xor
cwtl
mov
rolb
inc
gs
dec
imul
movsb
inc
js
push
pop
and
dec
lahf
pop
mov
or
push
bound
add
ret
push
pop
pop
pop
xor
fbstp
push
inc
jbe
cmpsl
sbb
fists
cmp
popa
andl
mov
or
dec
cwtl
es
xchg
aas
xlat
arpl
add
clc
inc
cmp
xchg
imul
dec
push
iret
push
jne
jo
push
shrb
add
sbb
add
ret
rcrb
jg
fneni(8087
sbbl
inc
mov
sbb
fs
jne
and
fwait
jo
outsl
sub
addr16
mov
fisubl
loopne
sarl
enter
inc
add
iret
dec
cmp
jb
dec
adc
sub
pop
dec
jnp
out
cmp
push
push
and
pop
aaa
les
ja
cs
fcoms
adc
xchg
jecxz
push
jae
xor
xor
xor
xchg
sub
loopne
inc
dec
add
stos
daa
shrl
dec
mov
xchg
mov
jg
dec
mov
cmp
adc
imul
adc
adc
pop
mov
adc
push
shl
xor
inc
mov
sbb
add
push
push
inc
adc
mull
mov
addl
sbb
inc
ss
jns
dec
comiss
or
push
outsl
and
pop
inc
arpl
push
out
inc
movsb
inc
push
jp
and
fildll
xlat
les
daa
in
mov
ljmp
inc
and
test
push
dec
mov
scas
push
mov
int3
push
pushf
push
dec
pop
dec
movsl
fdivs
jecxz
dec
divl
fisubrs
pop
fisttps
add
mov
neg
sbb
jmp
inc
mov
mov
mov
mov
jns
pop
repnz
pop
push
lock
xchg
push
cmp
std
push
sub
rorb
xor
inc
mov
fisubrs
mov
push
jo
je
xchg
push
pop
out
inc
xor
ds
and
jl
roll
inc
inc
xor
xor
pop
xchg
fsubrs
cmpsl
sub
aas
dec
push
daa
es
xchg
out
cmc
ds
add
push
inc
mov
pop
pop
ja
jb
lods
mov
xorps
iret
mov
pop
aas
mov
mov
pop
imul
ficompl
mov
aas
sub
adc
inc
dec
jg
mov
push
mov
inc
inc
stos
pop
in
add
xchg
insl
repnz
daa
push
push
in
arpl
xorb
lret
in
arpl
inc
ud2
inc
or
fnsave
imul
dec
out
push
adc
xchg
sbb
dec
popf
add
into
push
shr
and
inc
push
imul
mul
push
add
xchg
pop
inc
fwait
cmp
inc
das
push
mov
pop
getsec
mov
imul
pop
adc
jmp
pop
lods
rcl
aaa
dec
adc
xlat
aas
ja
sub
aas
jg
inc
push
loope
mov
dec
lods
fadds
mov
les
xchg
movsb
mov
or
call
inc
addr16
out
push
mov
stos
cmp
pop
das
push
adc
jo
sub
xsha1
cmpsb
rcpps
dec
test
sub
fidivs
pop
outsl
shl
cmp
das
xchg
push
ficomps
jae
sbb
push
inc
mov
aas
inc
xor
pusha
lahf
inc
stos
shll
out
inc
dec
inc
scas
shll
loopne
mov
xorb
push
inc
inc
in
and
into
inc
inc
pop
aas
mov
iret
push
in
popf
push
sub
jg
mov
dec
insl
aaa
out
dec
pop
in
xchg
dec
xchg
nop
fimull
adc
add
push
fisubrs
iret
ja
pop
cmp
or
inc
js
mov
das
mov
aas
push
ss
xor
xchg
cld
jae
aas
push
jp
shrl
mov
out
add
push
jnp
outsl
lcall
call
push
cs
push
push
mov
outsl
out
out
ret
fistl
pop
repnz
mov
inc
inc
inc
inc
ret
mov
mov
jnp
pop
mov
pop
pop
daa
imul
out
push
stos
dec
dec
mov
push
aaa
dec
dec
daa
dec
imul
dec
das
pop
push
shll
pusha
das
jle
lods
mov
aas
xor
sbbl
aas
sbb
jnp
xchg
inc
aaa
pop
inc
pop
imul
xchg
or
push
stos
pushl
das
push
ret
mov
cmpsl
jmp
insb
lods
cmp
push
lods
lods
mov
push
shrb
inc
pop
test
aas
imul
push
jae
les
pop
das
les
adc
pusha
test
push
mov
ret
adc
push
aam
mov
lcall
ret
mov
hlt
insb
sbb
pop
or
pusha
or
aaa
mov
outsl
adc
lret
push
dec
mov
sahf
sbb
jecxz
push
inc
ficompl
mov
out
and
pop
push
inc
inc
push
mov
ja
ret
add
xchg
add
lods
sbb
jmp
ret
dec
sbb
fildll
or
addr16
push
xor
inc
lahf
cmp
dec
fwait
push
loop
inc
bound
push
cmp
in
aad
jecxz
push
jae
sbb
cs
adc
add
jnp
mov
mov
mov
inc
fists
mov
dec
inc
aaa
lods
push
and
out
inc
cmp
mov
fisubrs
push
push
jb
scas
adc
push
bswap
mov
sti
outsl
add
aas
lds
adcb
dec
fildl
fadd
pop
test
fsubrs
aas
aas
or
dec
inc
insb
aad
inc
imul
aad
add
inc
ja
push
sub
push
aas
dec
inc
je
add
xchg
inc
insb
popa
xchg
es
cmpsl
inc
movsl
pop
insl
aaa
sti
repnz
shrl
pop
dec
aas
inc
in
test
add
rcll
addr16
sti
xor
adc
inc
push
mov
xor
call
mov
lcall
add
pop
pop
mov
cs
cmpl
shrl
mov
das
inc
lds
shrl
incl
and
lock
push
sbb
aaa
fiadds
pop
cpuid
fcmovnu
test
daa
push
push
stos
dec
push
push
daa
fidivl
sub
dec
sti
pop
lea
push
adc
pop
push
aas
aas
insl
mov
adc
push
dec
sub
sbb
and
imul
pop
mov
push
sub
and
push
sub
daa
daa
dec
or
adc
xchg
push
ljmp
mov
aas
inc
pop
push
or
mov
push
aas
ret
push
push
sub
out
mov
pop
fbld
pop
and
ret
dec
notl
cwtl
cmp
push
fwait
popa
subb
sub
arpl
pop
daa
add
xlat
addr16
or
das
dec
cmpsl
imul
inc
pop
push
aaa
stos
clc
pop
mov
out
test
cmpsl
daa
imul
stos
jnp
nopl
mov
xor
lds
call
mov
inc
or
fdivs
inc
xlat
aaa
jge
xor
jnp
das
dec
lods
lods
push
out
jp
ret
out
das
dec
pop
mov
inc
roll
adc
aaa
imul
mov
pop
aas
pop
mov
fistpl
movsb
sub
dec
pop
notl
rorl
insb
dec
dec
xor
dec
cs
sbb
pusha
pop
dec
pop
daa
cmp
xor
pop
push
decl
dec
lock
xchg
mov
inc
mov
add
rolb
pop
das
mov
lock
aas
fwait
dec
cmp
int
aas
adc
sti
ficomps
pop
aas
daa
pop
subl
inc
call
out
shlb
or
jnp
lahf
push
sub
imul
xchg
jo
or
inc
sub
lock
pop
mov
ja
pop
pop
sub
dec
jnp
daa
cmp
jmp
fsubs
xchg
mov
adc
mov
daa
out
imul
push
scas
add
and
inc
aam
add
pop
out
adc
jmp
mov
imull
dec
push
das
call
mov
aam
add
das
popa
mov
js
setb
inc
sti
shlb
dec
shll
sub
jmp
ds
dec
mov
mov
shll
test
das
aaa
or
inc
aaa
in
cmp
push
aaa
outsl
mov
pop
ja
adc
arpl
pop
lcall
sarl
ret
pop
or
mov
dec
aas
movl
daa
aaa
adc
pop
mov
mov
mov
scas
aaa
sub
mov
pop
pop
push
das
les
mov
shlb
icebp
push
sbb
mov
ficompl
aas
dec
or
scas
stos
test
mov
or
push
sub
stos
xchg
xlat
daa
xchg
insb
mov
cmpsl
fwait
mov
mov
das
outsl
imul
lahf
inc
dec
sbb
movsl
insl
das
cmpsl
pop
push
add
fisubrl
lea
inc
mov
push
inc
jecxz
sbb
ret
xchg
aas
daa
pop
test
aas
pop
pop
mov
sbb
popa
insb
insl
sbb
push
xor
push
push
insb
inc
testl
insl
inc
mov
cwtl
icebp
push
enter
pop
call
das
insl
and
das
jmp
push
adc
rolb
pop
aaa
sti
aas
jo
mov
insl
push
lods
mov
inc
pop
aaa
ficoml
and
aas
pop
pop
rcr
jnp
iret
pop
jae
iret
push
hlt
push
das
iret
push
addr16
in
dec
aaa
aaa
mov
bound
or
divb
inc
orl
mov
movsb
daa
iret
jg
adc
pop
dec
addl
lret
xor
jb
stos
hlt
jo
aas
dec
pop
push
inc
pop
dec
fildl
aaa
mov
mov
jmp
pop
aaa
sbb
push
sarl
add
xorb
pop
imul
jnp
jecxz
pop
subb
dec
jecxz
mov
imul
ss
dec
dec
lahf
jmp
adc
insl
push
adc
or
lods
mov
ss
pop
mov
mov
sbb
pop
addr16
push
dec
lods
adc
sbb
fildll
aad
mul
pop
mov
aam
add
pop
mov
add
sti
cs
je
adc
shlb
rdmsr
das
xchg
pop
cmp
dec
das
lret
adc
xor
outsl
inc
inc
xchg
xchg
pop
pop
mov
mov
inc
bound
imul
add
les
add
loope
push
or
mov
pop
jae
lahf
rcr
jb
jbe
xchg
sarb
inc
push
pop
cmovg
js
fistps
xlat
cmp
outsl
imul
inc
daa
ljmp
cmp
pop
pop
cmp
in
loopne
out
mov
mov
outsl
add
sbb
popa
cmp
ret
or
add
scas
mov
testl
cld
rolb
dec
rolb
rorl
movsb
shrb
pop
decl
ss
mov
jp
lea
daa
out
dec
pop
mov
and
sub
call
insb
sti
sbb
pop
pop
sub
sahf
ja
push
inc
dec
inc
push
adc
movsl
inc
sub
jno
loop
roll
lcall
outsb
xchg
add
pop
cmp
movsl
lret
js
ds
push
jmp
push
push
imul
add
call
add
out
enter
inc
and
mov
cmpsl
adc
cmp
xor
jb
pop
adcb
out
addr16
sub
pop
aam
lds
push
lods
jne
fldl
inc
inc
daa
inc
jns
loope
and
mull
mov
cmp
scas
aaa
loope
pusha
inc
ja
popa
mov
push
ja
pop
pop
push
push
fisubrs
iret
xor
arpl
fcoml
dec
outsb
dec
fsubl
daa
xor
iret
push
shld
sti
stos
jp
mov
repnz
xchg
xor
lds
mov
cs
add
bound
and
addr16
or
jmp
pop
addr16
xor
mov
xchg
sti
cmp
fldt
ret
popa
push
sub
and
rolb
daa
aaa
adc
push
insb
dec
daa
push
aaa
insb
imul
sub
inc
retw
aas
ds
jo
jnp
mov
ja
inc
dec
push
jns
or
xor
pop
rcrl
mov
sub
lods
popa
lds
jne
xlat
pusha
insl
fsubs
daa
sbb
rcl
mov
dec
sub
ficompl
rorb
in
stos
jg
and
xor
pop
push
seta
dec
xor
or
mov
xor
jecxz
push
push
es
sbb
push
sbb
pop
fimuls
cmpsl
loop
push
jb
add
fisubl
push
je
cmp
add
sub
jle
push
packuswb
xor
pop
mov
cmpsl
ja
dec
mov
aaa
dec
out
ss
popa
jmp
and
outsb
add
push
push
cvtdq2ps
jbe
pop
ss
decl
or
lea
mov
jb
fwait
mov
add
mov
outsb
sub
push
inc
out
lret
scas
push
xchg
jl
mov
jg
lea
inc
call
push
mov
inc
fcmovbe
push
addr16
add
and
add
dec
test
push
add
inc
lods
jbe
daa
pop
jecxz
inc
lods
es
adcb
sbb
add
push
and
dec
cmp
cmp
pop
sbb
in
pop
mov
mov
adc
push
pop
add
adc
adc
add
rclb
bswap
adcl
pop
es
out
add
adc
mov
or
add
cmp
push
jge
addr16
dec
insl
shrb
outsl
xchg
subb
sub
pop
pop
out
mov
sbb
adc
sbb
stos
dec
pop
out
inc
fistl
arpl
add
cmp
cmp
outsb
jbe
jecxz
fistl
lret
insb
stos
ja
sahf
mov
pop
mov
xchg
imul
xchg
push
imul
push
jnp
out
es
repz
dec
testl
out
sbb
fstp
push
jne
bound
cmpsb
subl
pop
sbb
and
in
push
jbe
sub
daa
xchg
mov
pop
cmp
mov
jmp
cmp
imul
jnp
pop
loopne
cli
insl
daa
addr16
aaa
in
or
add
xchg
int3
xchg
pusha
pop
inc
push
and
and
inc
dec
rcl
and
es
fimull
mov
outsl
pop
outsb
mov
or
jmp
inc
stos
arpl
dec
data16
rolb
inc
pop
inc
je
dec
or
ss
xchg
sti
arpl
or
or
dec
outsb
repz
fiadds
mov
fsubr
add
jne
pop
mov
negl
daa
push
xor
mov
loope
sub
xchg
mov
js
aaa
push
cvtpi2ps
sub
sub
or
jnp
test
xlat
lods
sbb
stos
lret
lods
lods
lods
aas
xor
popa
rcll
cmp
arpl
fidivl
add
lds
lea
mov
add
dec
push
and
pop
dec
lods
mov
inc
arpl
pop
sbb
inc
pop
push
cmpsl
iret
cmp
add
dec
das
push
jl
imul
aas
cmp
fcompl
xor
dec
xor
or
ret
outsl
mov
sbb
dec
out
daa
out
in
sub
xchg
out
xor
xor
pop
and
adc
sbb
pop
fs
and
jp
jo
rorb
mov
pop
mov
push
sahf
rorl
jnp
sbb
ret
aaa
inc
inc
rcll
dec
pop
aas
enter
xlat
fists
pop
dec
cmp
mov
popa
adc
pop
in
test
sub
mov
or
pop
arpl
xchg
adc
hlt
or
mov
das
fisttpl
jmp
arpl
daa
ret
push
or
dec
adc
ss
pop
inc
inc
daa
fsubs
jb
pusha
inc
add
aaa
inc
inc
daa
mov
ds
add
pop
daa
hlt
inc
das
push
lahf
xchg
inc
pop
aas
inc
out
lea
mov
das
inc
mov
fdivs
sub
pusha
and
dec
push
push
pop
in
or
ffree
mov
outsl
aaa
pop
orl
outsl
rcll
push
stos
add
mov
adc
outsb
inc
or
popl
das
push
sub
push
fisttps
dec
pop
insl
adc
fsubrs
ja
inc
add
jecxz
dec
fistps
pop
insl
inc
testl
out
movsb
add
imul
inc
mov
jg
pop
das
inc
xchg
push
aas
mov
bound
dec
pop
push
adc
aam
sbb
sbb
jno
or
lods
dec
test
mov
outsl
xlat
cmp
dec
fwait
jo
iretw
fwait
hlt
add
pop
nop
in
shl
xor
nop
adc
pop
jae
imul
cmp
or
mov
hlt
orl
push
xchg
into
add
mov
sbb
or
mov
add
popa
or
sbbb
xchg
sub
xor
fistl
add
add
jo
and
inc
stos
imul
rcl
inc
and
fsubs
ljmp
pop
mov
inc
mov
mov
sub
andl
or
inc
sub
ja
testl
mov
cmovno
adc
mov
or
pop
sub
daa
push
fisttpl
les
xor
xchg
xor
xchg
sbb
lahf
push
lods
or
iret
sti
add
outsl
rcrl
cmp
pop
loop
inc
mov
popw
or
add
das
push
aaa
mov
ja
mov
add
add
mov
jo
add
inc
imul
jns
aaa
pop
push
push
inc
addr16
cmp
add
add
sub
inc
stos
ss
push
mov
mov
outsb
mov
aaa
jb
ja
pop
in
insl
and
cmp
or
adc
jne
dec
mov
sbb
sbb
imul
imull
xchg
sbb
ficoms
idivl
lahf
sbb
sbbb
push
jo
cwtl
jo
push
arpl
lds
insb
xchg
mov
insl
in
mov
sbb
sbb
ss
iret
jne
invd
push
sbb
jne
imul
jo
add
xor
adc
dec
out
ret
imul
jbe
mov
cmpsb
addr16
rol
sub
or
ficoms
cmpsl
pop
and
jbe
xchg
inc
push
jb
sarl
arpl
aas
push
das
push
jg
inc
inc
bound
shrl
in
sbb
aaa
sbb
lea
dec
aaa
inc
mov
imul
daa
push
fwait
push
pop
pop
sub
sub
popa
das
inc
xor
ret
js
testb
jae
add
rclb
sbb
pop
nop
enter
pop
and
add
sbb
inc
and
add
jno
inc
pop
fistpll
jmp
push
and
push
adc
sub
mov
rolb
dec
sbb
test
xor
addr16
fcmovnu
mov
scas
pop
out
addr16
mov
and
mov
jp
lea
mov
ds
xlat
add
insb
pop
xchg
les
les
inc
xchg
and
or
push
and
add
lods
insl
and
arpl
pop
lds
pop
in
dec
lahf
mov
xor
push
aaa
mov
sbb
adc
pop
out
outsl
fdivl
out
xchg
push
adc
mov
or
push
pop
add
xorb
xchg
sbb
push
je
out
or
inc
sub
mov
and
and
inc
jmp
pop
and
inc
xor
inc
xchg
into
cmp
and
and
push
push
jno
enter
dec
pop
mov
dec
aaa
cs
popa
and
cs
sub
iret
jmp
xor
xchg
push
dec
push
cmp
sbb
rcll
inc
or
arpl
jg
fwait
push
pop
lcall
add
aas
xchg
sub
adc
gs
insb
ret
pusha
aaa
jae
sub
add
fsubl
inc
aas
mov
loop
mov
sbb
pop
or
in
push
dec
push
pop
or
sub
outsb
jnp
push
sahf
push
sub
inc
sub
or
mov
or
and
push
pop
pop
daa
mov
xchg
iret
pop
add
cmp
je
aaa
pop
clc
inc
popl
xchg
mov
out
inc
int
add
mov
and
sarb
loopne
ds
fs
ds
add
push
mov
lods
jb
pop
je
jnp
add
inc
add
test
cmpsl
mov
lods
in
add
mov
jae
add
daa
iret
lds
jg
pop
fcomps
insl
daa
aas
out
add
fimuls
cmp
or
movsb
mov
jae
xchg
or
imul
stos
popf
and
xchg
ja
daa
bound
in
daa
aas
aam
dec
and
outsb
dec
roll
jns
dec
test
adc
mov
add
push
jp
and
xchg
pop
insb
pop
or
inc
shlb
dec
dec
pop
mov
aaa
bound
data16
out
aas
je
pop
xor
jno
pop
cmp
pop
dec
aas
inc
adc
xchg
insl
or
add
outsb
je
mov
pop
push
pop
sbb
xor
adcb
jg
mov
aas
fdivs
idivl
pop
fmuls
jbe
mov
fildll
leave
inc
mov
nop
aas
roll
xchg
mov
shlb
jae
imul
nop
scas
aas
adc
dec
mov
jb
cmp
int3
call
out
pop
mov
repz
add
pop
idivl
and
jg
clc
inc
psubusw
adc
stc
iret
je
inc
into
add
mulb
add
and
repnz
fdivrs
and
mov
sub
cmp
cmp
mov
mov
jge
inc
popf
or
les
addb
inc
pop
jle
call
add
push
in
xchg
pop
inc
sahf
inc
inc
push
or
aaa
daa
aaa
out
sub
ret
or
xchg
dec
xchg
jbe
add
jg
in
dec
and
add
add
add
movb
test
add
jb
or
imul
inc
sete
int
pop
fbstp
aas
aaa
lock
sbb
mov
inc
or
push
mov
add
test
inc
inc
and
sub
adc
inc
or
ret
pop
shrb
inc
rol
sbb
repnz
or
andb
fbld
popl
orb
pop
shll
mov
lgs
out
in
inc
mov
iret
mov
in
call
mov
push
add
insb
aas
and
push
xor
fcomp
loopne
jb
jle
pop
dec
sbb
inc
xlat
inc
mov
add
dec
pop
dec
jnp
sbb
push
add
sbb
insb
shrb
jmp
into
frstor
pushf
jo
pop
push
xlat
decl
dec
insb
add
push
jns
out
xchg
add
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
ja
movsb
loope
pop
data16
call
out
fidivrs
fists
cmp
repz
adc
repz
sbb
jns
out
ficomps
mov
jl
out
sahf
sbb
push
xor
rcr
lcall
mov
out
add
fstpt
iret
repz
jp
push
cld
int3
mov
out
das
or
pop
in
push
aas
pop
mov
jmp
out
adc
stc
cmpsl
stc
push
jne
jae
loop
add
lock
inc
sub
lahf
adcb
aaa
orb
mov
clc
call
mov
pop
adcb
fs
jecxz
push
je
out
sahf
sbb
push
out
adc
push
push
out
sahf
out
or
out
sahf
adc
add
sahf
out
adc
and
out
sahf
out
or
stos
sbb
cld
loop
push
adc
out
sahf
out
in
fcoml
sahf
out
sahf
aam
shlb
int3
and
sahf
out
enter
mov
cwtl
push
rcr
inc
jg
scas
mov
fdivl
mov
bswap
jmp
stos
and
pop
add
add
or
shlb
pop
ret
mov
pop
aaa
add
lahf
inc
push
popa
dec
outsb
pop
cmp
jmp
test
bound
cmp
repz
cmp
into
shr
out
or
sahf
out
sahf
sbb
ds
arpl
sahf
out
andb
dec
repz
and
inc
iret
repz
pop
jb
cmpsb
stos
lds
ljmp
out
dec
dec
imul
mov
iret
repz
or
pop
jb
iret
repz
xchg
mov
push
adc
repz
lods
imul
or
hlt
push
push
push
inc
jle
movsb
jmp
inc
sub
push
popa
push
negb
out
add
out
sahf
xlat
inc
push
inc
cmp
xor
out
sahf
xor
and
or
cmp
sarl
in
call
iret
repz
aam
int3
sahf
out
iret
enter
mov
in
mov
xor
iret
repz
pusha
push
push
jmp
inc
sub
or
mov
pcmpgtd
cmpsb
jl
insb
push
insl
cmp
pop
jg
push
sub
add
jae
aam
cld
mov
bound
cmpb
bswap
repz
add
nop
leave
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
push
cld
call
add
inc
stc
mov
popl
cmp
cmpsb
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
aaa
or
call
lock
mov
popa
sbb
jg
mov
and
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
addr16
andb
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
add
call
mov
icebp
aas
rorb
and
cmpsl
mov
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
fwait
loopne
xlat
cmp
mov
sbb
add
incl
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
sbb
cli
fistps
lahf
into
ror
add
cmpsb
fmuls
mulb
shrb
push
repz
jnp
push
pop
js
mov
imul
add
dec
jns
fisubrl
cmp
xchg
out
sahf
out
shl
adc
ret
fdivrl
dec
insb
incb
ficompl
jne
cs
xchg
mul
jns
add
mov
add
out
sahf
insb
add
add
and
mov
jns
xchg
xchg
cmc
fdiv
cmc
mov
or
or
sub
cmp
repz
push
cwtl
nop
mov
iret
repz
pop
push
inc
out
ds
and
in
rcrb
sub
fsubl
cmp
repz
nop
js
inc
jns
iret
repz
cld
pusha
in
aam
jns
out
movsb
xchg
je
jns
jns
dec
and
fcomps
push
mov
test
sbb
repz
cld
pop
in
lods
xchg
test
repz
pusha
inc
xor
iret
repz
repz
pop
pop
push
enter
iret
repz
insb
push
dec
inc
cmpsl
jne
repz
pop
pop
push
les
mov
jge
out
inc
sub
add
pop
sahf
out
fidivrs
pop
inc
sbbl
jbe
pop
in
sub
push
ss
sub
mov
fsubrs
or
push
adc
roll
sub
popa
sbbb
push
addb
loop
dec
mov
inc
jg
aas
inc
cltd
dec
push
or
dec
dec
mov
adcb
dec
scas
lods
out
dec
pop
or
add
dec
xchg
or
inc
ret
adc
aas
scas
or
pop
pop
mov
mov
xor
inc
ret
add
mov
and
push
push
dec
cmp
xor
out
and
cld
and
repz
repz
iret
repz
mov
pop
cmp
xor
adc
repz
push
shlb
cwtl
mov
cmp
repz
dec
pop
mov
push
aaa
lahf
dec
adc
fidivrl
aaa
adc
inc
ja
dec
loopne
push
add
aad
cmpsb
les
jne
mov
mov
dec
data16
add
cmp
insl
insl
lds
aaa
fbstp
subl
fistl
insb
outsl
cmp
cmpsb
and
add
adc
mov
xchg
filds
shrb
aaa
xor
or
fisttps
jmp
adc
inc
push
adc
xorb
scas
ja
clc
push
and
cmp
jno
push
jecxz
sub
and
xor
xor
xor
das
xor
sbb
cmp
push
outsb
bound
outsb
gs
and
imulb
lahf
les
jns
out
push
mov
test
pushf
out
sahf
out
nop
mov
jl
je
insb
push
fs
pop
pop
push
out
sahf
out
inc
cmp
sub
out
sahf
and
sbb
add
sarl
in
in
aam
cmp
repz
test
repz
mov
js
iret
repz
pusha
push
dec
cmp
cmp
repz
and
adc
imul
add
loopne
out
sahf
rol
mov
mov
out
jo
pop
dec
inc
repz
out
and
clc
add
repz
in
fmul
mov
repz
mov
iret
repz
push
inc
cmp
adc
roll
push
xor
cs
out
outsb
pop
sub
or
sahf
jo
jb
je
jns
out
jbe
js
jp
dec
sahf
out
and
and
dec
and
daa
and
es
shll
pop
pop
xchg
nop
shll
pusha
popa
dec
shll
data16
shll
imul
shrl
pop
mov
dec
movsb
movsl
mov
dec
shll
cmpsl
test
stos
shll
scas
scas
dec
shll
mov
fisttpl
xor
mov
test
xlat
aaa
add
repnz
or
or
sbbb
pop
jle
pusha
and
ljmp
stc
dec
xor
leave
xor
es
rcl
push
sub
fsubrl
enter
inc
sub
jmp
popa
inc
gs
loopne
inc
imul
pop
outsb
dec
mov
jne
or
pop
add
and
adc
nop
push
add
add
addl
orb
adc
adc
xchg
push
nop
pop
pop
or
jecxz
mov
adc
sub
scas
es
aad
nop
test
add
inc
adc
add
jo
mov
dec
or
addb
pop
out
dec
aad
jae
out
and
addr16
add
pop
sub
jnp
dec
loop
js
imul
dec
mov
repnz
ljmp
jbe
add
push
cmp
sub
xchg
jmp
push
adc
sbb
out
xor
push
push
aas
bound
dec
inc
add
jb
push
add
pop
pop
push
arpl
pop
ret
push
sti
sub
mov
pop
pop
or
xchg
xchg
test
push
pop
fs
push
fwait
ret
jae
popa
fsubp
pop
jnp
pop
bound
inc
mov
xchg
adc
lods
cmp
imul
inc
imul
and
arpl
pusha
popa
test
ret
mov
imul
add
cmpsl
decl
dec
pop
xor
out
scas
mov
outsl
ret
push
fbstp
mov
inc
cmp
inc
loop
lret
jnp
and
ja
and
addb
bound
inc
cmp
das
incl
pop
pop
pop
mov
push
jo
and
pop
add
es
loop
daa
push
push
cli
pop
fs
or
and
addl
loop
pop
adc
or
mov
sub
mov
outsb
xlat
bound
sub
mov
or
sbb
loopne
xor
arpl
adc
dec
popa
nop
fdivs
push
adc
cmp
test
mov
add
pop
xor
add
dec
xchg
arpl
mov
jmp
ss
mov
jle
ret
imul
xor
push
frstor
out
adc
les
cmp
push
adc
pop
mov
rorl
cmp
dec
ja
scas
sub
push
push
mov
mov
pop
daa
mov
adc
popa
xchg
sub
mov
xor
shrb
dec
jg
rorl
pop
fs
or
mov
xchg
dec
ljmp
popa
or
xor
pop
sub
sub
sub
inc
mov
sbb
dec
neg
push
pop
inc
ss
push
aaa
cmpsb
mov
outsl
cmpsl
or
mov
jecxz
jnp
jg
shrb
bound
cmpsl
mov
and
jae
aas
aad
mov
gs
jg
pop
mov
scas
xor
cmp
mov
sub
xor
push
outsw
jecxz
sub
pop
mov
cmp
inc
sub
mov
mov
push
fisubl
pop
cwtl
stos
lods
lret
aaa
add
jae
mov
inc
jae
fbld
xor
ds
insl
mov
mov
inc
push
adc
or
sub
push
sub
out
fisubs
xor
xchg
pop
add
loopne
xchg
subl
lock
xor
and
ret
mov
dec
jb
gs
orb
pop
sub
push
fsubs
push
imul
ja
sbb
popa
and
addb
inc
rolb
mov
or
xchg
pop
and
adc
add
mov
das
or
fwait
pop
clc
cmpsb
movsl
loopne
inc
fwait
sub
dec
out
fmuls
and
pop
push
push
shlb
bound
mov
lods
das
seta
sub
xor
stos
xchg
fstps
popa
ja
inc
push
mov
pusha
stos
inc
or
sub
xchg
pop
out
test
lods
pop
decl
jecxz
adc
pop
sbb
cmp
outsl
imul
mov
xchg
jp
sub
mov
sbb
pop
mov
sbb
inc
arpl
push
outsb
cmpsl
mov
addl
cltd
push
or
ret
scas
mov
xchg
adc
loopne
xchg
jnp
scas
jb
outsb
bound
pop
leave
rcrl
sub
bound
jmp
xchg
mov
popw
imul
jbe
lret
leave
ret
mov
ret
push
sub
ja
cmp
pop
xor
es
mov
mov
popl
lock
pop
aaa
outsb
mov
lahf
xlat
ret
das
roll
lods
xlat
xchg
lea
push
test
jae
movsl
test
jae
xor
mov
mov
lea
loopne
add
arpl
mov
mov
adc
sbb
pusha
xor
clc
push
ret
scas
and
dec
aaa
push
and
fsubrs
sbb
and
test
pop
adc
adc
lods
mov
push
jo
bound
pop
jp
loop
xchg
lahf
mov
shrl
gs
das
stos
push
loop
das
xchg
das
fisttpl
fisubrl
jg
rclb
or
sbb
mov
or
out
sub
add
ja
add
outsl
lea
push
push
inc
jne
outsl
aad
imul
mov
or
sub
sarl
jno
and
jb
add
outsl
das
ds
pusha
or
sti
xchg
lret
inc
cmp
mov
in
push
pop
fildll
sbb
outsl
inc
lahf
sub
add
aaa
and
ret
roll
and
ljmp
arpl
mov
xor
pop
push
test
ja
xchg
xor
cmp
sub
and
mov
mov
mov
test
cmpsl
aaa
inc
ljmp
or
jo
pop
iret
mov
pusha
dec
pop
push
or
pop
ret
inc
xorb
shll
pusha
int
dec
xlat
pop
xchg
inc
mov
sbb
cs
xor
pop
imul
mov
test
mov
stos
sub
push
jae
jo
mov
sub
out
stos
ja
movsb
add
xchg
stos
into
adc
rcll
fbstp
mov
push
sti
and
mov
add
jecxz
or
mov
ja
jne
loop
out
jnp
insb
inc
scas
sbb
push
jo
pop
sti
push
addl
adc
sub
xor
cmp
mov
xchg
adc
dec
inc
test
or
sub
in
arpl
inc
lds
xchg
push
adc
shll
fbld
pop
xor
iret
pop
adc
mov
jbe
lahf
xchg
sub
add
stos
cmp
jo
divl
jo
ja
out
jecxz
adc
lock
inc
adc
jne
or
es
aaa
imul
add
dec
psllw
imul
sub
fldt
sub
rolb
and
jecxz
pusha
lds
dec
xchg
mov
imul
and
mov
mov
sarb
pusha
adc
daa
push
sarl
pop
adc
pop
mov
stos
bound
sub
rcrl
inc
das
iret
cmovns
or
fisubs
js
rcrl
jae
xchg
pop
add
push
mov
jmp
ds
lods
lods
mov
data16
cmovs
stos
sbb
lods
inc
lods
mov
inc
jo
int
das
and
sbb
pop
xor
andb
xor
data16
sub
add
ds
jbe
pop
mov
mov
lret
cmpsb
enter
mov
inc
pop
rcl
adc
pusha
mov
dec
clc
bound
push
insb
or
push
add
mov
jne
mov
push
jne
xchg
les
pop
inc
js
mov
mov
xchg
cltd
and
insb
pop
inc
ss
fistl
pop
jns
push
out
pop
inc
adc
inc
outsl
jne
sbb
xchg
les
jns
dec
shll
add
gs
ss
jo
popf
dec
je
popa
aaa
push
cmp
adc
and
sbb
or
or
aas
adc
dec
push
adc
arpl
add
mov
addr16
outsl
outsl
insb
push
xor
jo
push
inc
and
push
je
and
js
in
jae
mov
inc
scas
sub
bound
jae
out
shll
jns
pop
fadd
jnp
aam
inc
fcmove
lods
jns
das
cmpsl
sbb
scas
shlb
imul
ret
jo
adc
and
sbb
push
and
push
push
push
je
rcll
arpl
inc
mov
sbb
and
cbtw
mov
pop
inc
add
adcl
jo
xchg
cmp
push
fbstp
and
popa
nop
subb
jno
movl
push
mov
cmp
or
es
outsl
mov
xchg
mov
bound
imul
in
gs
loope
xor
pop
je
cmp
imul
scas
arpl
pop
push
pop
scas
repnz
jl
fs
js
cmpsb
jne
out
dec
sub
mov
mov
push
test
push
jle
mov
sbb
insl
push
sti
pusha
je
or
cmp
sub
lcall
push
push
jno
fsubs
xchg
push
jo
sbb
lods
cmc
mov
push
push
aaa
imul
add
outsl
sub
test
add
test
sbb
jne
popf
xchg
fdivs
cli
inc
sbb
and
sub
cmp
jae
jae
insb
xor
sub
push
sahf
jne
adc
and
je
ret
sbb
fs
dec
imul
sbb
outsl
inc
pop
cmp
aad
jo
fs
lds
shll
jno
xor
je
mov
push
inc
cmp
out
pop
push
outsb
insb
push
or
mov
sbb
outsl
pop
addl
jne
pop
inc
or
sbb
lods
outsl
in
jb
mov
jae
add
pop
push
fcoms
loopne
test
pop
pop
push
push
pop
in
xor
mov
jns
nop
sub
enter
xchg
xchg
sub
mov
mov
sbb
popa
mov
sub
and
cmc
imul
pop
push
xchg
or
stos
testl
push
stc
xchg
iret
push
lea
andl
sbb
sub
dec
loope
jae
xor
nop
or
pop
shr
test
jo
lcall
mov
cmpl
inc
push
btsl
dec
inc
dec
adc
add
xorb
jecxz
cmp
mov
push
fs
push
frstor
add
xchg
add
xor
sbb
fimuls
mov
push
lods
mov
in
aas
out
jno
shll
dec
rcll
cmp
lahf
in
fsts
lds
jno
rcrl
add
mov
fs
adc
in
jo
xchg
in
cli
pop
mov
dec
xchg
mov
adc
pop
hlt
outsb
ret
adc
inc
sub
push
xchg
or
jne
inc
dec
xor
mov
jmp
pop
fiadds
push
mov
sub
das
push
insl
in
dec
mov
scas
sub
jmp
or
and
xchg
cmp
and
daa
inc
sbb
xchg
inc
xchg
dec
inc
imul
inc
add
movsb
adc
iret
pop
fs
xchg
mov
sub
sarb
and
cmc
rolb
inc
inc
je
outsb
or
xchg
jge
sub
dec
gs
cs
jbe
addr16
pop
cmp
pop
xlat
push
jae
cmp
imulb
adc
aas
mov
arpl
test
in
add
sub
mov
icebp
mov
sub
push
dec
outsb
sub
sub
subb
cmp
jae
add
js
shr
sbb
xchg
loopne
sbbl
rcrl
jne
lahf
out
fnsave
out
insb
mov
arpl
add
decl
pop
mov
mov
and
jne
or
insb
sbb
add
outsl
sub
aad
lods
add
cmp
pop
sub
mov
je
xor
sahf
push
gs
mov
pop
notl
sub
push
decl
push
mov
int
add
pop
mov
mov
and
cmc
and
sbb
mov
adc
cmp
outsb
xor
push
outsb
aas
scas
push
pop
cmpl
inc
xor
dec
jns,pt
pop
push
jno
and
ds
and
dec
arpl
into
push
pusha
cmp
lfs
bound
loope
pop
repz
cmp
leave
xchg
test
cltd
push
xchg
xor
int3
mov
js
je
in
mov
xor
jns
ret
js
pop
fcoms
std
and
inc
fsubrs
push
imul
cmp
mov
insb
adc
fldl
inc
insb
inc
dec
divb
sbb
daa
jae
mov
push
mov
pusha
dec
bound
hlt
pop
dec
adc
inc
jb
pop
xchg
inc
rol
and
sbb
out
popa
xorl
fwait
dec
mov
popa
imul
xlat
es
imul
je
cwtl
imul
add
add
push
cmp
push
outsb
inc
jb
push
pop
mov
adcl
pop
jecxz
inc
jp
inc
pop
lods
inc
sub
adc
pop
lcall
push
daa
push
pusha
ret
daa
sbb
addr16
repz
les
fadd
add
loopne
dec
nop
mov
loop
loope
insb
das
jb
push
push
sub
cmp
mov
dec
inc
mov
outsl
stos
push
outsb
jne
and
lods
jb
mov
inc
mov
push
xchg
popa
dec
mov
mov
enter
pop
jmp
sbb
insl
dec
outsb
dec
pusha
mov
popa
jae
cmpsb
sti
and
mov
dec
inc
adc
in
add
jo
sbb
and
and
popf
xor
push
aas
push
in
xchg
outsb
sub
out
add
lock
outsl
push
xor
add
imul
js
movsb
imul
out
add
or
out
xchg
cmp
jmp
mov
dec
add
add
fsubrl
imul
add
das
std
mov
sbb
pop
add
dec
subl
mov
ss
cmp
jno
jae
mov
sahf
dec
dec
mov
dec
or
insb
lret
or
add
hlt
nop
mov
notl
inc
mov
fdivrs
clc
push
in
dec
mov
jb
insb
fs
daa
popa
andl
dec
aas
data16
push
addr16
std
sub
icebp
adc
imul
jns
cwtl
sbb
dec
popa
or
roll
inc
inc
and
subb
dec
outsl
stos
data16
push
imul
mov
sti
xor
inc
mov
pop
sub
imul
bound
orps
fsubrl
cmpsl
bound
aam
push
and
sbb
sub
sub
arpl
sbb
jo
mov
divl
mov
jne
and
cmp
outsl
lsl
outsb
in
push
sbb
xchg
dec
sub
fmuls
dec
mov
xor
loopne
sub
pop
aam
push
sub
je
sub
aaa
outsl
lods
push
cmpsb
roll
pshufw
addr16
lds
pop
out
push
aam
xorb
lods
sbb
fsubr
in
adcl
fwait
pop
loopne
nop
and
dec
xchg
scas
lods
cmpsl
lods
push
or
rorl
sub
mov
sub
and
sub
mov
popf
xor
or
push
cmp
xor
lds
in
mov
jecxz
or
insb
addr16
clc
je
pop
ret
test
and
js
or
cmpb
add
mov
bound
jne
mov
das
stos
jb
test
adc
notl
mov
rorl
jge
cs
mov
add
jbe
mov
aas
aaa
push
push
cmp
jne
mov
xchg
sbb
daa
imul
jo
or
or
cmp
mov
pop
cmp
fldcw
lods
lods
sub
xchg
jne
push
aam
stos
push
movsl
data16
xchg
cltd
inc
pop
inc
jg
faddl
mov
cmp
cmp
mov
pop
jo
shlb
cmp
or
imulb
add
ss
xor
inc
lds
mov
xlat
fwait
imul
add
and
push
inc
sub
rcrl
inc
push
add
or
loop
adc
stc
ret
lcall
subb
movsb
jp
lahf
scas
cli
pop
mov
insb
adc
jne
xchg
sub
and
imul
push
sbb
push
test
inc
pop
mov
lea
cmp
xor
push
shll
sub
nop
sbb
leave
clc
add
push
outsl
add
adc
movsl
int3
mov
sbb
jnp
lock
cltd
xchg
cmp
jecxz
shrb
ja
dec
loopne
test
orl
sub
mov
loope
loope
sbbb
mov
jo
sbb
add
leave
inc
add
jno
or
add
adc
pop
out
cmc
mov
gs
adc
add
or
cwtl
xbegin
leave
lret
out
mov
add
or
pop
sub
mov
cmp
xchg
int
inc
xchg
jbe
popa
lock
cmp
shll
shl
push
dec
shlb
aas
jg
push
in
cmp
push
adc
mov
add
pmulhw
sub
mov
bound
adc
mov
pushf
or
jge
jge
js
mov
push
adc
shll
inc
cmp
pop
push
filds
popf
inc
adc
cmpsb
mov
push
scas
in
test
jge
push
flds
jbe
std
pop
push
mov
sbb
dec
mov
dec
sbb
pop
add
inc
andb
or
and
pop
daa
sub
mov
adcl
adc
nop
inc
fmuls
fadds
pop
push
xor
sbb
aaa
dec
aad
jle
mov
loope
fldt
outsb
pop
adc
sub
cmc
sbb
push
cs
cwtl
pop
movsl
adc
clc
inc
je
pop
lock
or
sbb
pop
push
in
inc
xor
adc
andb
lods
xchg
adc
lods
adc
pop
xchg
sbb
adc
mov
adc
mov
xchg
dec
or
sahf
mov
mov
arpl
dec
outsb
xchg
push
pushl
adc
imul
dec
sarl
test
adc
add
adc
xor
xor
or
add
push
iret
rcll
ficomps
orb
cli
push
dec
sbb
and
or
icebp
jnp
adc
ja
imul
add
xor
fistpl
add
fimuls
daa
and
mov
prefetch
jp
add
insb
sahf
add
mov
push
dec
adc
cmp
jle
clc
push
mov
pop
and
dec
aaa
xlat
push
outsl
add
shlb
jl
insb
cmpsb
ret
ret
out
fiadds
cs
rcrb
push
jmp
or
sahf
jae
add
roll
pop
xlat
out
xchg
movb
in
subl
iret
or
xchg
and
xchg
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
