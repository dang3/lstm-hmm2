sbb
add
jmp
xor
inc
and
mov
inc
cmp
mov
imul
shl
mov
jno
xchg
cmp
push
jb
and
shrl
xchg
cmpsl
into
stos
xor
dec
aad
pop
insb
imul
je
js
sub
test
add
inc
push
pop
inc
inc
movsb
test
arpl
aas
std
subl
sub
mov
sbb
movsl
fwait
shlb
adc
test
add
enter
mov
mov
pop
mov
xchg
pop
mov
test
negb
adc
sbb
pop
add
adc
cli
dec
and
pop
clc
lds
out
pop
mov
stc
frstor
sub
mov
sub
jle
sub
jbe
imul
aas
rorb
ds
imul
inc
jecxz
jno
and
bnd
nop
addl
pop
mov
stos
mov
lds
in
push
mov
push
ret
je
pop
stos
or
into
mov
sub
adc
sub
lret
je
fstpt
loopne
jne
aad
xlat
aaa
lods
lds
rcl
fimull
repz
data16
dec
addr16
push
inc
mov
fldcw
sub
and
jmp
lods
lret
fwait
jno
in
ret
js
jmp
sub
sub
imul
jns
xchg
adc
out
loope
and
jno
dec
fstl
mov
xlat
push
cmp
inc
pop
fistl
mov
push
adc
mov
dec
and
gs
xchg
mov
push
xor
cld
xor
pop
movsb
scas
pop
leave
sbb
xorl
hlt
jecxz
addb
push
mulps
mov
mov
adc
pop
clc
mov
les
inc
inc
mov
inc
pop
xchg
jmp
sub
adc
sub
outsl
leave
or
in
sub
fcmovnu
fsubl
les
mov
lods
dec
ds
push
push
adc
inc
sub
push
faddl
loope
push
fistl
xor
mov
pop
mov
mov
popl
mov
lock
test
add
xchg
ficoms
rcrl
subb
sub
aad
cld
cmp
push
rol
jge
outsb
dec
dec
movsb
xor
push
sub
push
sub
xchg
scas
mov
lock
imulb
stos
pop
mov
cmp
xor
je
push
xlat
mov
jmp
fisubs
or
cmp
stos
add
orl
inc
pop
dec
lret
jge
adc
xchg
mov
rclb
nop
mov
leave
push
and
fwait
and
xchg
cwtl
je
pop
insl
cmp
xor
xor
add
sbb
mov
stc
push
pushf
push
loop
loop
sbbl
std
lea
mov
mov
shl
mov
psrlw
sti
xchg
lods
out
test
and
or
lds
repnz
popf
mov
xchg
mov
mov
mov
stos
in
cmc
push
push
fmuls
pushf
dec
insb
mov
repnz
push
sbb
mov
rol
mov
mov
add
and
mov
xchg
add
fwait
mov
pop
pusha
ror
jnp
nop
push
xchg
movsl
cmp
pusha
jno
or
pop
cmpsl
inc
pop
mov
out
shl
out
loopne
cmp
orl
movsl
xchg
cwtl
xchg
faddl
ret
test
push
stos
mov
cwtl
push
push
inc
cmp
shrl
xchg
hlt
lahf
dec
jecxz
jp
or
pop
setle
scas
std
mov
cmp
insl
and
addr16
mov
push
or
xor
push
inc
pop
test
imul
mov
lret
out
and
jns
sti
push
pop
dec
jle
inc
jno
iret
test
mov
and
pop
jne
ror
xchg
inc
ja
push
mov
jb
push
xor
testb
sub
nop
sub
and
addl
pop
in
dec
mov
aam
xor
inc
aam
addr16
mov
call
in
shl
addb
arpl
add
mov
adc
mov
cmp
mov
and
arpl
rcll
std
bound
jae
mov
lret
cmc
addb
and
push
mov
inc
das
jg
dec
popw
push
jns
xlat
jo
fidivrl
sbbl
sbb
cs
arpl
inc
mov
push
dec
aad
cmpsl
aaa
jb
xor
push
sbb
mov
ret
leave
sbb
push
ds
cmp
subl
repnz
ss
and
dec
xchg
insl
sbb
adc
or
mov
cmc
mov
fidivl
popf
ror
xchg
jge,pn
dec
cmp
push
pop
repz
jno
mov
pusha
js
jle
clc
call
loop
mov
jecxz
pop
cltd
sbb
leave
loope
aam
nop
cmp
inc
add
leave
mov
sub
add
xchg
cmp
push
sbb
push
aaa
rol
fsubrp
sbb
add
mov
in
xor
popa
push
jl
sbb
xlat
push
mov
lret
push
push
push
sbb
jg
sarl
test
shll
push
ret
pusha
scas
xchg
test
cmp
call
outsl
push
mov
sub
jle
imul
cwtl
lods
cld
lock
out
and
xchg
lea
pushf
xchg
sub
ljmp
jb
mov
sbb
cmpb
int
arpl
adc
mov
aad
rorb
mov
aas
sahf
hlt
add
pop
xor
sbb
push
loope
mov
in
adc
mov
sti
xor
cmp
sahf
lock
cmp
jp
jmp
inc
outsb
dec
and
int3
stos
mov
cltd
xchg
and
sbb
inc
cmp
lcall
ljmp
mov
add
sub
andb
jb
mov
xchg
xchg
aaa
adc
push
repz
into
push
jg
jb
mov
addb
lods
sub
nop
loopne
cltd
cmc
ja
stos
data16
add
cmp
jbe
inc
int
fs
sub
inc
push
push
das
add
add
in
or
mov
add
mov
nop
jnp
cmc
pop
fildll
mov
push
not
inc
xor
push
popw
xchg
push
imul
sub
pop
or
imul
sarl
into
roll
jae
mov
faddl
push
mov
mov
icebp
push
mov
mov
cmp
leave
xorb
mov
inc
mov
cmp
lret
xor
stos
scas
fildll
es
xchg
aas
mov
shll
std
rorb
call
inc
cmc
in
fstps
push
scas
xor
dec
lea
pop
add
cld
lods
scas
insb
in
outsb
ds
fdivr
fadds
lret
test
fisttps
mul
das
mov
push
pop
int3
or
mov
mov
fneni(8087
fisttpl
in
outsb
rclb
adc
adc
add
iret
mov
shlb
mov
inc
lahf
scas
xchg
dec
xor
sar
push
into
loop
sbbb
sub
mov
movsb
je
adc
sti
pop
and
sbb
jo
sbb
push
mov
add
and
xor
lret
dec
outsb
cmpxchg
mov
ljmp
xchg
subl
in
or
mov
aam
cld
repz
mov
mov
sub
sbb
xchg
pop
jnp
mov
or
push
lock
xchg
cld
int3
mov
sbb
xor
loopne
dec
test
mov
mov
loopne
jns
add
sti
out
add
cli
pop
xchg
mov
mov
sbb
adc
xchg
pop
ljmp
xor
lods
icebp
adc
outsb
test
aaa
jbe
fcoms
fiaddl
in
arpl
sub
in
push
leave
or
inc
mov
and
loopne
mov
out
dec
mov
daa
mov
scas
lds
subb
scas
mov
cmp
fdivl
mov
and
push
sbb
dec
test
mov
fs
cmpsb
jbe
out
in
cvtpi2ps
outsl
sub
aam
cmpsb
jno
test
leave
repnz
push
add
xor
mov
or
cwtl
loope
repz
xor
std
jnp
inc
sbb
jl
mov
pop
fistpl
sub
lcall
iret
std
scas
loop
sahf
cmpsl
sbb
dec
push
fsubl
enter
or
pushl
mov
imulb
out
adc
jecxz
or
pop
fs
cmp
pop
pop
outsl
arpl
cmpl
mov
into
ljmp
push
in
in
in
jge
aam
jle
mov
loopne
mov
pop
cmp
insl
jmp
jg
or
cmpsb
sahf
xor
loop
pop
cmpsb
adc
daa
enter
frstor
in
mov
in
xor
cmpsb
and
sarl
xor
rolb
call
cmp
jo
lcall
and
cmc
std
jno
mov
je
addl
inc
jb
mov
inc
or
lcall
cwtl
cmp
jns
icebp
mov
aam
ds
cli
sbb
movsl
fs
lods
or
inc
daa
pop
jl
sar
out
pop
in
xchg
test
sbb
mov
shll
mov
insl
pop
imul
imull
and
push
andl
sarb
insl
stos
jo
shlb
mov
mov
dec
lods
popa
cmp
dec
xor
and
xor
ss
cmp
jns
out
xchg
pop
pop
fists
or
aaa
or
mov
pop
test
add
movsl
xor
addb
jmp
testb
dec
fwait
pop
and
and
sub
icebp
sbb
mov
enter
shll
movb
mov
push
cmp
dec
adc
insb
shrb
mov
test
add
pop
sarb
inc
sarl
xchg
mov
pusha
je
dec
pusha
iret
xor
movsl
imul
lret
and
scas
je
movsl
adc
inc
insl
mov
cmp
cmpsl
inc
xor
popa
imul
daa
xchg
arpl
lahf
sbb
adc
cmp
cmp
xchg
cmp
pop
xlat
mov
call
mov
mov
js
sti
fcoms
bound
test
notb
push
mov
sbb
xlat
mov
and
mov
loop
push
add
inc
sarb
jnp
sbb
push
dec
leave
mov
sbb
add
jae
in
add
cmpsl
cmpl
movsl
and
ret
lods
sub
dec
test
mov
cmpl
fimull
mov
arpl
stos
repnz
mov
xlat
scas
mov
lds
pusha
out
mov
aaa
cmp
or
stc
and
std
mov
adc
xor
in
sub
loop
inc
lahf
or
mov
sub
in
xchg
scas
add
fimuls
sbb
xchg
inc
ficompl
fs
cmp
jnp
push
jecxz
ja
add
add
int
mov
mov
mov
pop
imul
dec
popa
cmp
sbb
fdivl
test
push
inc
inc
and
mov
insl
add
sub
loop
fisubs
pop
fs
mov
xor
lds
jbe
loop
out
mov
or
mov
je
das
hlt
rol
xchg
jle
lods
dec
dec
or
or
ret
push
mov
lods
shll
das
shlb
dec
or
and
fmul
pop
movsl
mov
pop
xor
sarb
pop
sti
mov
add
cmp
movsl
jne
cwtl
insl
xchg
cltd
out
fstpl
fldenv
repz
lods
je
sub
gs
mov
mov
inc
mov
out
test
in
in
insb
enter
sub
or
cmp
shrb
push
in
xchg
int3
and
shll
mov
das
jns
fcoms
or
ret
cli
jb
dec
into
mov
jg
loopne
dec
mov
pop
xchg
into
mov
in
add
adc
dec
ja
lcall
nop
push
add
rcl
mov
adc
call
adc
adc
outsl
std
cmpsl
inc
push
shll
pop
pop
adc
call
push
cmp
inc
pop
jg
push
loop
sub
aas
dec
inc
fidivs
xor
dec
add
ja
pop
pop
push
lret
int3
and
pop
mov
and
in
roll
sbb
jnp
add
mov
mov
fdivrp
or
insb
mov
or
jmp
and
xchg
std
daa
iret
loopne
outsb
add
jle
and
jnp
mov
enter
push
mov
shr
std
xor
xor
aaa
je
aam
jl
pop
bound
out
repnz
push
xchg
call
imul
pop
cld
push
adc
dec
jmp
dec
fdivl
lcall
cmpsl
icebp
mov
push
out
sti
mov
popa
daa
hlt
xchg
clc
mov
pop
or
data16
movsl
push
out
push
in
cmp
sub
xchg
inc
jno
mov
cmp
dec
push
sub
int
rol
scas
jmp
jmp
mov
mov
sbb
adc
in
imul
cmp
sti
ret
pop
mov
xchg
push
sbb
mov
sub
fnsave
ret
seto
adc
in
loopne
push
nop
fmull
pusha
xchg
mov
dec
outsb
aaa
and
sbb
xor
sub
ret
shrl
mov
jle
pop
and
push
inc
xchg
fimuls
sbb
xor
xchg
loop
dec
fmuls
icebp
mov
push
call
mov
cld
or
inc
bound
push
ror
sub
pop
sbb
lds
dec
rclb
jmp
adc
dec
int
cmp
push
sub
or
ret
jbe
rorl
popf
cltd
ds
or
outsl
insl
sub
inc
jnp
mov
aaa
cmp
pop
scas
cltd
jg
add
or
in
jle
arpl
pop
aam
in
pop
sbb
out
and
orl
lahf
xor
setnp
enter
cmp
inc
jecxz,pn
mov
insb
lock
cmp
test
in
push
ljmp
jb
or
out
fsubs
sub
pusha
mov
stos
pop
aam
shrb
jb
mov
adcl
mov
rcll
sub
mov
insl
shlb
or
daa
cmp
jbe
sbb
cs
test
cmpsl
push
jl
setae
push
inc
add
sbb
push
jmp
mov
jp
push
mov
pop
or
or
inc
ret
out
and
test
add
test
pop
and
fisubrl
cli
or
sbb
mov
push
jl
mov
xchg
cmp
push
jb
imul
sbb
test
push
shlb
mov
std
mov
push
mov
bound
out
mov
push
xchg
push
sti
ljmp
jo
daa
push
popa
pushf
les
jbe
xor
aaa
addr16
in
cwtl
add
adc
push
stc
imul
je
arpl
outsl
loope
lds
rolb
jno
bound
mov
pop
stc
out
or
adc
mov
mov
dec
orb
outsb
lcall
movsb
mov
dec
adc
hlt
stos
sbb
pop
sbb
je
outsl
push
out
pop
push
pusha
push
les
mov
cmc
loop
ss
mov
imul
jno
in
adc
cmpsl
xor
pop
lahf
mov
fnsave
pop
rcr
xchg
testb
add
vshufpd
adc
call
push
repz
mov
xchg
rcrl
es
out
jbe
pop
aad
mov
dec
inc
dec
push
pop
out
lods
cmp
sub
inc
cmp
addr16
add
dec
add
inc
add
scas
xchg
push
sahf
cmc
idivb
hlt
hlt
rorl
repz
sbb
in
inc
sbb
push
shrl
outsl
jg
rcll
fs
sbb
int3
mov
mov
mov
movsl
cmp
mov
add
sub
nop
dec
jecxz
hlt
pop
ficomps
inc
add
jne
shr
and
mov
add
out
in
les
mov
sti
icebp
or
cmc
stc
and
cmc
or
push
or
popa
clc
arpl
jo
mov
lods
es
inc
into
into
cld
mov
test
push
dec
dec
sarl
pop
mov
dec
push
pop
mov
andb
push
xor
ss
aam
cltd
jno
roll
push
loop
clc
mov
bound
jo
xlat
sub
mov
rcrb
sub
mov
stos
out
xchg
dec
fidivs
fidivrl
sbb
fiaddl
inc
loopne
xor
jg
sbb
push
jb
ja
cmp
adc
daa
push
out
pop
lret
xorb
and
sub
cmp
cltd
je
int
mov
xchg
adc
sbb
inc
shlb
lret
jmp
in
mov
mov
push
aad
push
xlat
push
cmp
test
loop
shll
in
mov
insl
push
loop
dec
dec
xchg
inc
mov
insl
sbb
push
inc
push
aas
mov
pushf
jns
pop
add
mov
outsl
das
outsl
popa
pop
clc
ficoml
stos
leave
dec
jo
stc
sub
xchg
pop
pop
mov
fwait
mov
pop
mov
fs
mov
pop
cld
ret
scas
push
or
jne
hlt
fiaddl
mov
cltd
xchg
jo
mov
push
pusha
xor
sub
cmp
mov
jno
cmc
mov
sub
movsl
sub
enter
jno
movsl
test
leave
or
lods
xor
iret
pusha
aad
xor
and
leave
dec
adc
ss
das
cmp
fsubp
adc
cmove
push
xchg
inc
dec
cmc
stos
mov
jg
std
sub
leavew
inc
fadd
and
pusha
daa
into
loopne
xchg
cli
repnz
push
cmc
lock
out
xorb
sbb
ljmp
or
push
push
pushf
je
xchg
inc
xchg
icebp
repz
in
fmull
sar
icebp
dec
icebp
push
adc
lret
cmpsl
filds
imul
jecxz
dec
stos
popf
xor
in
mov
or
cmp
ja
hlt
mov
mov
sub
inc
mov
jle
scas
mov
xor
or
outsb
lods
mov
mov
pop
xor
data16
xchg
xor
cmp
in
add
test
inc
inc
push
push
mov
adc
and
mov
nop
mov
popf
std
and
xchg
test
ret
xor
sbb
adc
inc
rcr
xorl
sub
fwait
imul
mov
sub
pop
add
loop
rcrb
jge
xchg
jae
sbbl
sti
and
aaa
jmp
test
sarl
or
into
movsb
push
fs
and
sbb
fadds
int
cmpsb
xor
add
shll
add
xor
subb
js
cmp
and
jns
pop
pop
dec
dec
mov
loopne
leave
inc
ja,pn
push
push
in
mov
insl
push
aaa
test
daa
sub
sbb
arpl
adc
xor
xor
sub
or
or
push
xor
into
sahf
mov
xor
sub
leave
outsb
pop
or
mov
out
mov
xchg
faddl
inc
bound
jecxz
cli
repz
inc
cltd
push
sbb
xchg
lods
xor
movb
adcl
stos
jae
jno
sbb
sub
lods
dec
je
divb
jge
sbb
add
xor
or
jb
cltd
hlt
shlb
insl
clc
rolb
xchg
addl
lea
inc
mov
test
sarb
call
clc
cltd
cmp
loope
lahf
gs
sub
mov
cmc
dec
lods
cmp
xor
adc
jg
add
fwait
outsb
arpl
das
sbb
mov
add
jne,pt
cmp
cmc
lcall
ja
cld
loope
aad
cmp
out
stos
mov
xchg
cmpl
std
addr16
mov
lea
mov
adc
sbb
push
mov
movsb
push
adc
xchg
pop
xor
cmp
sub
adc
mov
repnz
test
pop
aad
in
sti
test
aaa
imul
pop
mov
jp
mov
push
dec
addr16
sub
fsub
mov
fwait
jmp
shrl
and
mov
add
aas
pop
or
sbb
loopne
sub
lds
jmp
gs
pop
cmc
or
stc
test
les
lcall
or
das
add
sbb
sub
cld
les
test
inc
scas
ss
sbb
iret
arpl
xorl
inc
jge
aam
dec
dec
xchg
sbb
into
pop
inc
push
lods
es
cmpl
add
cmpsb
and
lock
xor
mov
nop
or
dec
inc
pop
in
pop
add
movsb
adc
aam
mov
mov
mov
xchg
push
sarb
inc
test
jns
rolb
inc
lock
cmp
enter
push
mov
ss
mov
ds
out
cmp
sbb
dec
jecxz
mov
jae
inc
inc
add
mov
int
dec
xchg
mov
mov
imul
xchg
cmp
and
sub
jecxz
movsl
dec
sbb
in
dec
push
loopne
cld
out
xchg
jecxz
sti
rclb
xchg
jl
mov
mov
cmpsl
js
dec
lcall
imul
aaa
sbb
test
andb
pushf
iret
jecxz
cmp
push
cltd
sub
cmp
ljmp
and
int3
push
mov
adc
int
jecxz
movsl
stos
in
sti
call
sub
fs
inc
adc
fwait
hlt
xor
sti
jae
mov
les
mov
mov
sbb
popa
lea
ja
or
lret
inc
or
jb
jno
es
xor
popf
ret
faddl
icebp
jge
mov
orb
pop
lock
subl
scas
inc
scas
ja
mov
mov
sti
std
lret
out
sbb
imul
cmp
push
cmpl
loope
sbb
les
rclb
push
xchg
pop
cmp
pushf
jb
out
inc
sbb
jle
and
adc
mov
xor
mov
sti
pop
jno
sbbb
outsb
push
cli
cmp
adc
xchg
cmpsl
jae
pop
xor
scas
jo
pop
pop
je
out
jl
movb
mov
subb
jb
jno
add
arpl
mov
stos
xchg
out
lea
out
daa
je
mov
daa
pushl
pop
push
adcb
xchg
mov
mov
and
dec
icebp
ss
icebp
push
jns
sub
lds
push
sbb
xor
jnp
dec
add
adc
pop
leave
push
outsl
sti
fldcw
or
test
aam
pop
cltd
inc
js
mov
in
push
mov
mov
mov
sbb
cmp
je
push
pop
ja
rolb
mov
mov
pusha
cmp
push
add
cli
pusha
adc
push
outsb
rorl
xor
into
dec
aas
xchg
les
call
les
push
adc
ret
push
or
jp
mov
cmc
push
out
dec
addr16
and
lods
lcall
js
aam
inc
loope
inc
call
push
pop
stc
or
dec
push
push
mov
enter
xor
or
arpl
movsb
mov
mov
popa
stos
mov
add
push
inc
or
nop
mov
add
int3
cmp
movsb
daa
test
sbb
jp
inc
fiadds
push
and
dec
repnz
jo
jne
and
or
jo
pop
xorb
into
jg
dec
cs
insl
and
xchg
xchg
jne
fadds
add
inc
mov
cmp
out
add
jbe,pt
and
ja
daa
mov
pop
jno
mov
inc
push
sub
inc
mov
fdivp
pop
imul
ret
sub
nop
sub
lods
pop
cmpsb
repnz
xchg
add
inc
test
jae
push
xor
pop
pop
dec
imul
push
pop
push
jo
fsts
adc
jmp
sbb
mov
xchg
dec
xchg
push
jmp
and
inc
mov
lret
insl
mov
push
imul
imull
scas
cmp
into
push
xor
addr16
imul
frstor
xor
or
xchg
std
xchg
scas
xor
mov
pop
lret
push
xlat
dec
mov
cmc
js
addr16
cmp
ss
mov
std
adc
mov
repz
cmp
pop
add
xor
icebp
adc
cmpsb
sbb
fwait
mov
cs
sub
mov
jl
or
pop
mov
leave
jp
mov
scas
stc
xchg
lods
ja
mov
lret
mov
daa
add
inc
cmpb
cmpsl
aam
lods
gs
lods
sbb
jbe
dec
movsb
out
push
pop
jo
xor
test
cs
arpl
jmp
jecxz
xor
mov
jl
xor
mov
dec
dec
and
fimull
bound
es
inc
in
mov
pop
add
xchg
sbb
pop
mov
mov
ja
dec
sti
orb
out
cmp
dec
sbbb
in
aas
sub
or
mov
ja
xor
mov
jns
call
mov
pop
mov
cmp
int3
xchg
out
or
ljmp
add
add
stos
jno
addr16
in
or
leave
dec
sahf
out
xchg
inc
js
lret
xchg
jnp
inc
ret
fsubrs
and
mov
mov
orl
sub
or
push
dec
and
iret
aaa
xchg
clc
push
movb
test
inc
addr16
ds
and
jo
adc
div
dec
pop
addb
sbb
cmp
mov
aas
mov
stos
xor
and
mov
sub
jnp
cmp
addr16
fisubs
lea
push
les
adc
pop
test
pop
mov
test
mov
stos
xor
cli
pop
xor
mov
xchg
out
int
add
dec
ret
dec
bndstx
call
andl
push
and
mov
dec
pop
push
mov
mov
aas
xor
out
out
sti
ss
stos
js
mov
push
adc
lret
pop
cmc
data16
xor
mov
out
xchg
imul
xchg
jle
and
push
inc
lods
pop
mov
xchg
xchg
dec
push
test
mov
dec
daa
iret
inc
negl
lock
mov
cmp
cs
in
push
cmpl
mov
xorb
xorb
orl
test
dec
push
and
cmp
inc
push
lods
lock
nop
sbb
or
add
into
iret
in
data16
int
lret
fst
mov
mov
into
pushl
jmp
neg
jge
dec
call
lods
pusha
push
mov
jg
xlat
shl
mov
xchg
cmp
jge
daa
xorl
je
sub
add
pop
ss
lock
sbb
daa
add
out
dec
sbb
mov
push
pop
xchg
jns
xor
jge
frstpm(287
nop
fisttps
lcall
pop
pop
xchg
insb
dec
out
jne
pop
xchg
inc
or
dec
loopne
cmp
mov
xorb
mov
jmp
mov
inc
mov
mov
xor
das
orb
push
ret
inc
out
imul
xchg
pop
cmpb
add
cs
loop
jne
pop
xchg
in
mov
adc
ja
sbb
dec
mov
fdivs
push
cmp
sub
jns
fwait
cwtl
mov
xlat
pop
cltd
aas
or
mov
adcb
insl
fiadds
ds
sbb
es
out
insl
cld
stos
xchg
lds
aam
rcrb
js
sbb
cli
xchg
xorl
jecxz
fnstsw
jl
fisubl
mov
xor
push
push
aam
addb
imul
mov
fstpl
test
repnz
sti
or
scas
push
add
shr
pop
xorb
or
add
ret
inc
imul
add
pop
dec
lret
cmp
pop
mov
inc
push
stos
cmp
push
dec
mov
mov
jl
pusha
fst
sub
mov
dec
loop
cwtl
inc
dec
push
xorb
sub
mov
jle
xchg
push
pusha
jp,pt
bound
sbbl
movsb
loop
jl
mov
cmc
mov
pop
fistpl
pop
inc
nop
pop
xchg
test
jle
shrb
xchg
sti
mov
nop
lcall
es
loope
fcomip
xchg
cld
fisttps
jl
ds
inc
mov
rolb
mov
add
and
and
mov
xor
negb
lods
and
mov
movsb
dec
jge
inc
xchg
jge
inc
add
cmp
xor
or
fidivrl
sbb
pop
pop
hlt
push
pop
addr16
jo
gs
outsb
xorb
cld
ljmp
sbb
add
adc
in
cmp
and
test
jbe
add
stos
es
mov
stos
pop
sub
das
and
and
mov
out
popl
jg
ud1
cmp
add
cltd
cmp
push
xchg
xlat
push
movsl
dec
inc
lock
std
pop
stos
das
mov
fsubrl
xor
movsl
push
call
xor
dec
xor
dec
cmc
push
imul
push
les
inc
mov
scas
push
jnp
push
aad
xor
lret
cltd
mov
ds
xchg
je
fidivrs
lcall
cld
movsb
scas
lods
jmp
or
jb
or
in
jo
adc
xchg
jo
cwtl
std
lods
loope
push
mov
movb
dec
rorb
mov
xchg
data16
mov
sahf
mov
lea
push
imul
jge
add
shl
fsub
mov
popa
jne
ds
mov
pop
or
push
mov
insb
sub
mov
and
mov
in
adc
pop
lahf
sbb
out
mov
out
movsl
pop
insb
or
xorb
popf
test
sub
rcll
cmp
adc
fbstp
aaa
loop
jg
jo
loopne
out
aas
add
dec
mov
cmpsl
inc
push
push
movsl
mov
xor
pop
stos
cmpsl
xchg
pop
or
xchg
daa
repz
jne
and
adc
movsb
mov
jne
mov
rolb
out
mov
xorl
jb
jg
iret
xorl
insl
ficomps
mov
ss
daa
into
mov
popf
cmp
mov
cmpb
mov
sub
out
daa
mov
movd
dec
hlt
and
sahf
sub
add
out
cmp
inc
dec
je
mov
mov
xchg
cmp
xlat
into
stc
pop
aas
push
xlat
mov
sahf
or
cld
jmp
neg
loopne
mov
aad
sub
and
rorl
inc
cld
aaa
lcall
push
lock
loope
jne
push
rcrb
add
cwtl
sub
pop
lods
loopne
dec
and
pop
xor
mov
test
jae
arpl
gs
and
mov
cmp
ja
daa
pop
mov
pop
jg
pop
inc
jle
insb
and
mov
jmp
or
dec
cmpsb
sbb
adc
fucomip
sub
sbb
add
xor
loopne
dec
aad
sti
clc
sub
push
push
mov
hlt
cmc
push
adc
cmp
adc
dec
jnp
xchg
movsl
mov
xor
fs
adcl
repnz
mov
dec
cmp
idiv
mov
daa
inc
adc
add
out
and
inc
push
test
xchg
nop
adc
mov
loopne
xchg
adc
ja
gs
rolb
mov
addr16
and
sub
imul
sbb
imul
cld
je
mov
in
cltd
lcall
bound
movsl
xchg
loopne
and
sbb
shl
xchg
repz
sbb
adc
inc
icebp
mov
xchg
andl
mul
mov
lret
cmp
push
hlt
stc
ficomps
iret
nop
je
xchg
enter
or
neg
pop
sub
ud1
xor
sbb
nop
leave
test
mov
loope
xor
pop
in
int3
out
jge
lcall
mov
popa
stos
lds
std
push
and
jae
sbb
push
jne
int3
sub
bound
int
jmp
out
rorb
pop
or
cmp
scas
xor
ds
shrl
stos
fwait
leave
jl
ret
sub
addr16
inc
add
adc
pop
add
scas
xor
jo
outsl
xchg
dec
cmpsb
adc
cli
cmp
dec
lret
mov
gs
xor
mov
add
out
mov
loope
addr16
data16
sbb
clc
out
in
push
shrl
iret
pop
lods
cmpsl
mov
push
mov
sbb
jbe
xor
xchg
mov
sub
rorl
sbb
in
sbb
xor
mov
xchg
outsl
adc
sbb
out
and
or
sub
mov
lret
mov
lods
jl
push
insb
setp
jb
xchg
mov
jae
xor
sub
add
call
mov
imul
out
je
hlt
mov
out
push
les
or
dec
jbe
into
aaa
push
stos
stos
cld
xchg
jp
popf
inc
lock
test
mov
imul
aam
mov
dec
arpl
add
int
cmpsl
xchg
or
jae
push
aaa
mov
fwait
and
jae
pop
and
idivb
shlb
arpl
and
pushf
dec
pop
sbb
mov
rol
pop
and
insb
and
clc
inc
mov
fstps
or
inc
pop
fwait
scas
adc
xchg
addl
push
sbb
loop
mov
je
mov
pop
test
getsec
sub
data16
lea
jmp
mov
ja
cmp
mov
mov
push
adc
fistpll
cmp
jmp
push
rorb
scas
xor
enter
sbb
fsubrl
xor
loopne
jnp
shl
pushf
lods
xor
mov
pop
inc
dec
xchg
stos
ja
inc
fildll
lock
mov
lods
push
xchg
add
in
mov
fidivrs
xor
pop
push
cmpsl
out
dec
pop
scas
lock
cmp
push
lret
pop
repnz
js
xchg
xor
xchg
mov
cmp
shrb
shll
lods
movsb
push
fmulp
ret
enter
push
push
cmpsl
outsl
addr16
mov
xchg
adc
push
std
pop
mov
lcall
pop
jp
mov
dec
pop
push
mov
loope
movlps
cltd
int3
mov
loope
clc
fstpt
jb
clc
nop
stc
loopne
loopne
adc
popf
addr16
xor
cs
and
ja
lds
cmp
hlt
lds
rclb
add
test
xlat
sub
int3
cmp
fistl
xchg
jo
cmp
mov
gs
xchg
push
add
sar
xchg
ror
adc
enter
cmp
jae
loope
ljmp
ficompl
mov
jns
pusha
or
jno
mov
les
push
mov
orb
push
jns
mov
dec
test
and
incb
lcall
cld
lds
mov
cmp
adc
or
xchg
add
jmp
mov
dec
dec
in
arpl
cmp
dec
rol
aam
mov
fucom
popa
pop
xor
add
test
pop
stc
jle
dec
cs
ss
add
xchg
xchg
dec
fisubrl
mov
iret
add
jnp
daa
sub
repnz
push
repz
mov
xchg
arpl
loopne
fwait
daa
pop
mov
mov
cmpsl
cmp
mov
mov
pop
in
inc
add
dec
movsl
cmpsb
add
mov
and
imull
cmp
fmuls
fsts
sub
and
pop
pushf
rcrb
xor
jbe
push
pop
add
and
lret
mov
inc
mov
inc
fwait
push
lret
sarb
lods
aaa
sbb
subl
dec
adc
dec
inc
cmp
ljmp
cmpsb
sub
ljmp
stc
jo
and
adc
push
in
aad
incb
xor
add
pop
rcll
inc
repnz
inc
jg
arpl
aaa
mov
fsubl
mov
into
xchg
mov
scas
insb
scas
cmpsb
push
imul
shl
xor
mov
fldt
mov
and
rclb
add
subl
std
loope
sbb
sub
push
fimuls
sub
add
cs
xor
in
fs
and
adcb
pop
fstl
jne
mov
stc
push
xor
dec
mov
in
arpl
gs
dec
in
push
jno
add
push
xchg
scas
test
cmp
xor
xor
mov
cmp
push
test
jae
hlt
pop
jb
xchg
mov
stc
jmp
and
movsl
jl
mov
repz
test
mov
mov
jae
push
scas
aam
iret
push
test
sub
push
lcall
dec
xchg
ss
fnstsw
imul
out
add
mov
mov
out
inc
sub
out
and
mov
adc
or
sahf
les
sub
sar
xchg
test
add
iret
outsb
popf
stos
subb
cmpsb
jge
xor
lock
nop
icebp
sub
daa
out
add
cmp
sbb
cmp
std
xor
ds
fmul
dec
lcall
sbbl
lret
lods
xlat
movlps
xchg
xor
clc
mov
loop
fsubr
adc
xor
pop
sbb
data16
adc
int
fcomp
div
cmpsb
jno
dec
clc
scas
int3
xchg
sub
test
roll
pushf
xchg
pusha
add
sub
mov
stos
or
push
pcmpgtb
shrb
or
iret
pop
xchg
inc
mov
lret
jns
cmp
cs
ret
inc
sahf
call
fdivs
imul
popa
xor
push
lods
mov
push
sbb
or
jp
and
fs
insb
enter
shll
add
out
sub
sbb
mov
daa
movsb
subl
dec
mov
mov
xchg
pop
lahf
int
mov
mov
push
je
dec
cmpl
in
std
mov
mov
sar
cmp
dec
stc
push
or
into
jb
icebp
push
cld
push
and
icebp
inc
addr16
iret
sub
sbb
xchg
adc
dec
aam
sahf
pushf
aas
out
imul
and
mov
fwait
sub
gs
cli
les
jne
lret
push
push
and
push
inc
js
fdivr
adc
lock
test
mov
dec
cwtl
das
insl
pop
inc
lcall
or
xchg
pushf
sub
cld
fsub
std
xchg
ss
pop
arpl
ret
dec
jns
xchg
mov
fmuls
out
stos
xchg
stos
sbb
push
add
and
xchg
fsts
cmp
adc
cmp
add
ret
dec
aas
push
lea
test
imull
and
mov
out
ds
movsb
clc
cli
mov
repz
sub
mov
adc
mov
dec
mov
pop
inc
lret
inc
adc
cwtl
mov
adc
cwtl
pop
push
sbb
mov
pop
leave
mov
or
lea
pop
adc
addr16
add
andb
mov
pushl
sbb
adc
or
dec
and
lret
or
cli
mov
ret
imul
inc
ret
push
lahf
test
jmp
popl
jecxz
mov
bound
div
lret
mov
fbstp
fnstsw
dec
pop
out
mov
icebp
test
and
loopne
push
or
pop
xor
movsb
arpl
xchg
fimull
test
and
movaps
pop
out
and
mov
jne
sub
mov
mov
movsb
ficompl
ret
mov
cmpsb
sbb
xchg
loop
rcll
jg
sbb
jge
fildl
adc
loope
sbb
sub
dec
push
es
xchg
lds
push
adc
fildl
addr16
call
and
push
inc
aas
sub
ret
in
cmpsb
mov
out
add
clc
push
popf
test
test
mov
add
and
ret
push
and
jmp
cmpsb
scas
push
out
mov
inc
in
dec
cmpb
cmp
pop
inc
lcall
call
pop
out
in
shl
mov
xor
ss
shrl
ret
push
push
shll
inc
in
and
jns
add
fmuls
repz
jnp
mov
insl
mov
cmp
dec
push
lcall
jno
ficompl
loope
rcrl
jl
jns
cmp
stos
cmp
push
into
pop
sub
sbb
fmuls
jmp
mov
push
pop
fmulp
dec
sbb
fxch
push
or
inc
sbb
push
addb
out
ffree
pop
push
jmp
cmp
jmp
push
xchg
out
jmp
sbb
dec
subl
lret
test
add
add
cwtl
inc
lahf
popa
js
cmpb
in
aaa
adc
decl
mov
jg
imul
nop
out
sbb
cwtl
daa
dec
jne
or
scas
mov
mov
jne
jecxz
std
pop
xor
or
inc
adc
cwtl
sahf
in
dec
sub
int3
sti
rcr
call
jge
imul
and
iret
adc
or
dec
add
xlat
incb
repz
mov
in
mov
mov
xor
cmpsl
inc
mov
xorl
mov
push
push
fisubrl
add
push
mov
pop
outsb
jle
out
sbb
nop
or
lds
lods
lret
add
loope
negl
pop
and
movsb
sub
fisttpll
popf
push
fcoms
push
pop
inc
cli
std
repz
daa
cmp
add
pop
cwtl
out
iret
enter
bound
mov
test
in
mov
jge
mov
mov
push
lea
cltd
shr
movsl
cmpsb
addr16
jmp
add
mov
adc
pop
dec
sub
mov
sub
pop
ficoms
hlt
shrl
fnstcw
dec
ljmp
mov
es
addr16
hlt
sbb
jo
mov
or
adc
push
xor
push
inc
xor
mov
push
aam
pop
mov
add
add
mov
push
xchg
fadds
jg
fiadds
mov
fisttpll
test
lea
jns
mov
je
and
stc
insb
ja
jae
nop
jb
and
xchg
pop
sub
sbb
push
add
fisubs
sub
sbb
push
mov
loope
pop
scas
incl
or
jo
sti
xchg
test
repnz
adc
and
dec
jl
aas
fwait
scas
rorb
jns
mov
enter
popf
shrl
or
inc
jb
mov
mov
pop
inc
shll
das
icebp
or
addr16
imul
push
mov
adcb
ds
int
or
sub
loopne
mov
sahf
jecxz
jns
mov
push
addr16
mov
daa
or
inc
imulb
stos
add
push
aad
pop
xchg
mov
sub
jno
std
data16
jae
inc
mov
ret
addr16
lcall
fidivs
or
lret
lret
lcall
sar
das
mov
ja
sub
addr16
ja
shrl
mov
pushf
push
aaa
mov
aam
inc
xchg
adc
loop
aad
mov
ficomps
in
pop
sahf
sbb
adc
sbb
leave
fdivrl
mov
mov
jmp
imul
push
pop
int3
pop
loope
mov
dec
stos
add
mov
pusha
pop
call
mov
mov
xor
or
push
sub
icebp
shll
daa
addb
addr16
jmp
mov
lods
lahf
cmp
jo
repz
push
xlat
adc
mov
in
cmp
push
int
mov
adc
adc
mov
inc
mov
cmp
mov
cmc
mov
insl
cmpl
sub
jnp
outsl
dec
ds
sarl
jmp
dec
mov
jle
add
nop
mov
jmp
or
add
mov
mov
jle
repz
xor
sbbb
mov
mov
sub
mov
in
jl
and
adc
dec
dec
test
jmp
aam
add
js
adc
xchg
cmp
lods
stc
xchg
lcall
notb
xor
inc
or
aas
mov
lods
xor
cmc
push
push
mov
push
ret
or
in
in
mov
jno
pop
pusha
sub
hlt
push
inc
sbb
test
fists
jbe
je
in
mov
jo
lods
jle
enter
jge
xlat
jl
fdivl
lcall
dec
fildll
cmp
movsl
pop
pop
mov
stos
sahf
cmp
lss
and
cmp
daa
mov
sbb
loope
mov
push
loop
mov
lcall
push
adc
pop
xchg
test
mov
jle
fs
hlt
test
sbb
sbbl
test
or
mov
pusha
arpl
pop
pop
call
lret
add
pushf
mov
jecxz
fsubrp
xlat
sbb
xor
lea
fsubrl
sbb
xchg
or
out
inc
popf
lods
lahf
xchg
pusha
cmp
jae
push
cmp
icebp
stos
or
aaa
jge
or
push
test
orb
xor
push
sbb
out
out
sub
pop
out
mov
jns
jecxz
pop
lret
jbe
cmp
aas
shll
mov
mov
dec
rol
adc
jb
ds
mov
dec
ljmp
and
and
jl
cs
enter
clc
int3
or
mov
jb
inc
jno
sbbb
ja
sub
mov
in
or
fldcw
movsl
arpl
insl
fwait
mov
repnz
mov
rcl
lret
jb
sub
call
jecxz
lods
lods
or
cli
pop
push
pop
push
sub
and
pop
mov
into
int
test
pop
std
lret
jae
dec
roll
sbb
xlat
in
inc
loope
mov
xchg
adc
popa
test
sub
push
jbe
mov
shl
push
lea
lea
dec
inc
pop
push
ficompl
mov
outsl
cmpsl
jle
aad
inc
aas
incb
cmp
clc
sub
int3
lock
push
jecxz
xchg
sahf
out
std
fwait
addr16
mov
insb
cmp
mov
rcll
ja
inc
pushw
mov
and
out
mov
stos
lods
popa
sbb
mov
mov
jb
hlt
dec
jns
mov
xor
jo
adc
and
jbe
push
nop
xchg
push
in
xchg
lret
dec
lahf
mov
jbe
je
data16
jle
jp
pop
test
inc
jo
out
pop
dec
push
push
xchg
cmp
xor
sbb
jae
push
mov
add
lock
std
sub
insl
xor
addr16
mov
mov
pop
movsb
xchg
cs
sub
repnz
jle
cld
movsb
repz
in
call
add
inc
push
push
aad
daa
inc
out
bound
jmp
cli
gs
es
inc
test
dec
mov
mov
inc
dec
pop
imul
xchg
cmpsb
push
in
jge
add
lds
pop
cmp
inc
mov
std
into
push
pop
andb
adc
sbb
and
cs
ret
or
cmpb
push
sub
loope
mov
mov
xor
push
lcall
in
andb
inc
dec
mov
lds
imul
in
mov
jae
adc
les
movzbl
dec
les
or
lea
dec
xor
pop
test
repz
push
add
dec
enter
pop
mov
arpl
imul
out
inc
inc
test
push
int3
mov
in
sub
lret
ficoml
mov
loop
or
pusha
cmp
xorl
test
and
fiadds
jle
shlb
popa
sbb
push
cmc
icebp
or
inc
mov
mov
fldcw
outsb
cmpsl
int3
std
mov
cmpsl
jne
sbb
and
aaa
rolb
jns
or
jge
in
lea
ljmp
pop
pop
shrl
or
mov
xchg
popa
push
jne
sub
cmp
fdivrp
or
pop
sub
insb
repnz
popf
fidivrl
or
or
les
scas
push
xchg
movsb
or
inc
andb
shr
leave
xchg
lret
mov
cmc
pop
movl
sti
dec
pop
out
in
mov
pop
dec
inc
in
sbb
add
push
cmp
dec
iret
adc
outsl
ds
mov
jp
and
dec
or
aam
push
inc
popf
sub
fnstcw
out
add
cwtl
orl
mov
pop
xchg
mov
jnp
dec
ljmp
lahf
or
pushl
pop
out
mov
in
lea
pop
test
lds
je
push
out
jp
inc
push
push
imul
clc
roll
lea
daa
mov
int
adc
add
cmp
dec
push
ja
jge
shl
shr
inc
push
outsl
ja
sbb
sbb
repz
call
ret
mov
jmp
dec
or
sbb
inc
push
dec
loope
sub
xchg
push
cmp
fmull
jb
lea
ret
shll
notl
movsl
mov
adc
outsb
mov
mov
push
call
lods
push
mov
arpl
mov
dec
jp
imul
sahf
or
std
inc
dec
in
adc
leave
movsb
aas
and
sbb
xchg
outsb
adc
dec
mov
xor
adc
outsl
cmp
mov
and
icebp
xchg
jge
in
int
cli
pusha
fdiv
incb
mov
lds
clc
xchg
or
xlat
and
mov
test
and
push
add
mov
sbb
fmulp
arpl
mov
mov
push
js
fistl
push
fwait
pusha
sbb
cmc
lods
jl
push
ret
addr16
pop
dec
push
arpl
aas
leave
inc
stc
nop
sbb
dec
dec
push
cmp
shr
lods
push
xchg
fsubl
mov
rcrl
xchg
bound
leave
fwait
or
sbb
add
shlb
fimuls
movsb
andl
mov
in
jb
int
cmp
ret
popf
addl
cmpsl
fstpl
jmp
cmpsb
mov
movsb
cmp
dec
adc
pop
fsub
sti
dec
mov
cmpsb
es
sbb
sbb
movsb
push
push
inc
sarb
sbb
clc
mov
clc
in
repz
add
mov
adc
pminub
fisttps
nop
or
cli
inc
js
scas
mov
and
mov
sub
push
mov
incl
popa
mov
js
sub
es
in
adc
cld
xchg
data16
cmc
cmp
mov
cmc
sahf
cs
int3
aad
xchg
pop
jo
out
push
xchg
fwait
jno
inc
les
mov
mov
mov
pop
test
mov
arpl
jo
sub
lret
neg
imul
and
dec
mov
mov
dec
lds
mov
or
add
popf
mov
push
and
fbstp
adc
push
or
pop
lods
sub
mov
sbb
mov
test
lret
inc
cmp
loop
repnz
pushf
mov
gs
adcb
nop
cmc
repz
aas
insb
xor
mul
adc
inc
outsl
lods
repz
jns
jp
jnp
push
mov
lcall
andl
jecxz
popf
daa
in
idivl
add
sub
dec
enter
adc
cmp
xor
cmpsl
jae
inc
jns
add
sub
mov
jg
xchg
and
scas
imul
inc
jne
stos
repnz
mov
ficoms
sbb
mov
jl
shll
mov
push
sub
insl
adc
push
pop
loop
xor
call
leave
and
fildl
and
insl
fisubrl
xor
cmpsb
stos
mov
sub
sub
pop
iret
int
mov
add
aam
adc
mov
mov
ja
stc
sub
pop
sbb
adc
loopne
xchg
cmp
pop
cltd
inc
ljmp
pop
jecxz
push
and
stos
pop
aad
xorl
roll
gs
push
bound
and
mov
add
push
mov
sbb
fldl
or
mov
aad
adc
shll
inc
jge
xlat
sahf
imul
jl
test
movsl
fld
mov
inc
popfw
sub
outsl
mov
lds
insl
pop
cwtl
loop
xchg
push
test
jb
stos
cli
fildll
icebp
movsb
in
popa
mov
add
cwtl
rorl
in
sub
dec
lahf
ja
repnz
jl
das
stc
lret
test
in
out
mov
pop
pop
aaa
test
mov
cmp
push
dec
sub
push
adc
sub
cmpsb
clc
xor
sub
xor
sbbl
stc
shlb
ror
pop
fadds
pop
divb
loope
mov
jb
inc
xor
cld
adc
or
jne
pop
cmpsl
xchg
adcb
vcvtdq2ps
fildl
xor
xor
int3
shr
cmpsl
aaa
mov
nop
jns
dec
lods
call
ret
nop
repnz
scas
cmpsb
dec
ds
xorl
fxam
jge
imul
pop
cli
cmpsl
sbb
adc
jle
rolw
mov
jne
adc
js
cmp
nop
loopne
inc
cmpsb
mov
data16
shll
scas
dec
inc
aas
imul
jne
push
adc
and
adc
adc
push
in
mov
js
stos
inc
lret
xchg
sahf
fcomps
outsl
and
mov
sub
inc
add
sub
sarl
adc
je
repnz
dec
sahf
rcll
mov
ret
mov
pop
pop
pop
pop
mov
sub
imul
xor
pop
jne
jg
mov
mov
sbb
mov
jecxz
stc
and
sbb
mov
enter
aas
lea
xchg
fs
pushf
jl
clc
lret
cmp
push
inc
push
mov
jp
aad
jb
scas
jno
mov
or
pop
fs
mov
add
aas
test
loope
ja
imul
xchg
push
and
sbb
cld
mov
cwtl
call
fwait
addr16
push
cli
mov
push
sub
fdivl
jns
repnz
mov
cmpsl
stos
adc
jbe
pushf
fildl
inc
lea
push
push
push
xchg
adc
cmp
movsb
aam
lret
sbb
rorw
mov
xchg
dec
inc
jmp
in
ret
mov
js
outsb
sub
dec
jo
js
call
or
mov
cmpsb
cmp
mov
lahf
daa
jbe
std
pop
imulb
insb
mov
add
fildl
xlat
hlt
loopne
loopne
lret
xchg
inc
scas
out
mov
aas
out
es
inc
cmc
pop
dec
or
sahf
call
incb
jb,pt
int3
jnp
div
sub
or
shr
lods
pop
cmp
cmp
and
imul
mov
orl
sub
and
push
cmpsl
mov
xchg
imul
cli
inc
ja
cmp
lock
mov
loop
mov
lahf
push
loope
add
bound
xacquire
pusha
fcoms
fidivrl
sub
jo
inc
mov
call
and
je
lock
int
mov
adc
leave
xor
pop
shll
or
mov
cmpl
xorb
jge
mov
xor
sti
xchg
cmpsl
mov
movsb
jno
pushf
mov
pushf
imul
adc
xor
shll
xlat
repz
jmp
mov
mov
xchg
mov
int3
out
test
xchg
jno
cmp
inc
sub
pop
or
dec
fisubl
pushf
sub
mov
lods
dec
ficoms
push
in
push
negl
mov
add
mov
mov
ja
push
js
cwtl
hlt
lcall
cwtl
insl
fwait
mov
enter
lods
adc
jl
jecxz
xchg
loopne
pop
mov
jne
push
fistps
inc
mov
das
pop
xchg
scas
std
test
out
mov
cmp
aad
les
cmpsb
pushf
test
xor
inc
scas
pop
jmp
in
loope
fst
inc
int
mov
or
stos
popf
push
mov
arpl
sub
mov
xor
lahf
push
loop
mov
or
inc
add
adc
lds
inc
pusha
mov
or
seta
dec
mov
inc
dec
xlat
push
and
xchg
mov
arpl
iret
sub
pop
pop
or
ficoms
shl
nop
dec
mov
mov
out
mov
jns
pop
mov
jae
cmp
popa
push
movsl
pusha
mov
adc
dec
out
iret
push
movsb
loopne
jbe
add
in
testb
xor
push
add
js
cli
fyl2x
add
cmp
dec
andps
fbstp
repz
cmc
pop
pusha
stos
mov
daa
mov
inc
imul
gs
add
in
or
pop
sbb
lock
cmpsl
lahf
jl
adc
int3
adc
adc
and
mov
and
sarb
push
iret
mov
pop
test
cs
lahf
fisubrl
ljmp
sbb
mov
xchg
cs
mov
das
mov
je
push
adc
daa
repnz
jnp
hlt
adc
xor
out
ljmp
fwait
jge
adcl
inc
cmpsb
aaa
add
rcr
ds
in
cmp
cli
jns
daa
hlt
out
test
mov
and
inc
jnp
repnz
cmpsl
push
jae
les
jae
xchg
pop
leave
sbb
jl
sub
aaa
cmpb
add
pop
mov
jmp
bound
xchg
inc
jg
sbb
inc
jno
push
mov
fsave
xchg
mov
xchg
cmc
mov
push
pop
lds
xor
and
notb
mov
shrl
fadd
mov
bound
and
sbb
lods
xor
dec
cmpsl
cmp
sbb
mov
pop
xchg
jae
inc
andb
ret
mov
adc
jae
push
adc
dec
ja
jecxz
inc
xor
mov
mov
shll
adc
adc
mov
pusha
mov
out
adc
pop
lahf
xor
cmp
iret
mov
jge
ret
lods
jbe
mov
dec
movsl
sbb
mov
or
jb
mov
in
push
ja
mov
inc
jmp
dec
push
mov
push
bound
xor
ds
sahf
mov
roll
rolb
push
orl
xor
sub
int3
in
out
repz
inc
outsl
popf
and
pop
adc
mov
out
pop
or
mov
les
stos
xchg
push
fucomp
xor
inc
sub
xchg
lea
mov
mov
mov
lock
cmp
aam
add
rep
outsl
outsb
jns
push
outsb
das
mov
mov
push
xchg
nop
cltd
popa
adc
scas
movsb
aam
pop
dec
xor
mov
movsb
sbb
dec
adc
dec
xor
fwait
push
addr16
clc
lahf
pop
pop
cmp
xchg
aam
out
aad
push
shrb
push
in
roll
adc
ret
pop
daa
add
mov
cmp
mov
xchg
repz
out
push
cmp
jbe
push
pop
cmpsb
or
daa
filds
dec
orb
rorb
adc
push
movsb
stc
inc
jecxz
sahf
rorl
push
icebp
xor
sarl
lods
repnz
or
enter
or
jns
pop
cmp
pop
and
subb
addr16
pop
gs
jo
mov
pusha
adc
ficomps
pop
test
dec
in
sahf
lcall
pop
mov
or
sub
lgs
out
sub
les
xorb
mov
pop
cmpsl
jp
jl
outsb
dec
daa
mov
inc
outsb
push
add
ret
jecxz
mov
mov
cltd
xchg
mov
xor
or
cmp
ss
inc
mov
mov
not
and
xor
and
jbe
push
cmpsb
jbe
pmaddwd
stc
jp
aam
push
xor
pop
orb
jge
mov
std
in
pusha
dec
pusha
add
add
divb
mov
aad
sbb
push
mov
cmp
jae
cmc
mov
lcall
aam
int3
pop
cmp
jecxz
mov
mov
mov
int3
cli
int
repnz
cmp
addl
cwtl
xchg
dec
dec
xor
cltd
insl
push
mulb
mov
xchg
mov
mov
sbb
and
cmp
jno
repz
cmp
lret
in
push
popa
xor
pop
xchg
mov
or
xchg
mov
jecxz
decb
jo
lock
cmpsl
int
lss
and
and
sbb
iret
cwtl
pop
inc
sbb
sub
pop
or
fists
into
ss
negb
in
xchg
mov
xchg
cmp
and
in
and
pop
je
scas
push
jbe
jbe
mov
cmp
lods
adc
inc
xchg
nop
push
daa
jmpw
sbb
cmpb
int3
aas
into
andl
lods
ficomps
jmp
imul
divb
jg
gs
xchg
inc
sub
and
jnp
imul
xorl
leave
ja
sbb
mov
cmp
push
mov
inc
dec
adc
mov
push
dec
dec
inc
mov
sarb
jecxz
adc
push
xlat
jp
or
fwait
sub
fnstsw
or
or
int
cmpsl
pushf
pop
dec
fwait
in
jmp
add
and
dec
or
pop
or
pop
fnsave
xchg
in
add
inc
pop
mov
cmp
mov
xchg
jae
mov
lods
repnz
movl
fbld
pop
push
data16
sarb
cs
fcmovne
mov
pusha
fdivl
into
jae
xchg
push
sub
sub
popa
repz
jae
dec
push
pop
and
jo
and
jno
call
dec
lret
rolb
or
mov
xor
rcrl
or
sbb
es
pop
lods
movsb
lods
add
push
xor
je
mov
mov
repz
push
arpl
test
jb
cmp
daa
cmpsb
mov
xor
add
adc
fildl
scas
pop
lret
push
adc
mov
mov
xchg
push
jg
aaa
scas
rcll
pushf
mov
pop
imul
dec
lret
mov
in
scas
sti
cmc
xchg
mov
sub
fistpl
inc
xchg
int3
adc
cltd
pusha
push
mov
pop
add
add
cmp
adc
lcall
lock
cmc
push
and
lock
mov
lret
ss
dec
xchg
cli
sub
dec
mull
sarb
sub
sub
loope
fadds
aaa
adc
push
stos
dec
in
cmp
and
out
arpl
dec
addr16
add
scas
jb
cwtl
push
lds
pop
mov
repz
dec
mov
mov
je
add
xor
cmp
jbe
pop
inc
aad
mov
ret
pop
fidivrs
pusha
mov
dec
dec
push
pop
je
test
cmp
push
lcall
mov
es
aas
jecxz
int
push
andb
jnp
mov
cwtl
jnp
jo
fsubr
mov
pop
shr
test
jne
ljmp
repz
fcmovb
pop
testb
lock
test
xor
xchg
scas
arpl
scas
inc
xlat
adc
and
adc
push
or
and
pop
and
mov
mov
inc
add
cmp
sub
lcall
sbb
lods
dec
stos
pop
or
mov
les
or
mov
sbb
in
es
or
cld
lea
sub
repz
out
cmpsl
imull
push
aam
inc
in
out
std
sub
inc
add
sub
mov
bound
jne
addr16
push
adc
push
jmp
pusha
sub
or
ret
fildl
sbb
xor
aam
je
pop
addl
sarl
jb
movsl
int3
cwtl
fidivs
cmp
mov
pusha
pshufw
pop
and
js
jb
or
and
or
outsl
imul
sbb
dec
fsubrs
add
cld
mov
push
mov
out
inc
xchg
jg
imul
movsl
enter
repnz
sbb
in
popf
lods
push
xor
jo
mov
and
adc
push
icebp
pop
lock
sub
pop
push
lcall
jbe
js
sahf
iret
inc
call
in
repnz
popa
cld
jns
add
adc
popa
call
dec
sub
xor
pop
mov
sbb
aad
mov
mov
lods
out
sbb
mov
add
jne
mov
movsb
lahf
rol
stos
fcmovnu
out
lock
fsubl
call
insl
and
inc
ljmp
pop
jae
sbb
cmpsb
mov
mov
push
ret
or
or
inc
mov
dec
arpl
in
jns
iret
and
sbbl
mull
hlt
pusha
and
push
xor
mov
leave
lahf
inc
popf
adc
enter
jmp
mov
jecxz
sub
jae
subb
jae
dec
icebp
sub
mov
in
addr16
pop
xchg
testb
dec
test
sub
sarb
pushf
insb
movsl
push
xorb
sbb
xor
pop
xchg
and
cmp
and
je
outsb
mov
mov
cltd
icebp
jno
mov
std
movsb
aas
aam
mov
pop
leave
mov
movl
and
xchg
rclb
push
bound
push
jne
pop
adc
and
pop
cli
pop
mov
loope
dec
or
cmp
rep
jo
int3
mov
repnz
cs
js
inc
jnp
mov
cmp
push
cmp
imul
in
cltd
aam
sbb
daa
mov
inc
jl
mov
cmp
cli
in
or
call
jno
fs
aad
movsb
cmp
mov
nop
nop
dec
sub
shl
xor
lods
or
mov
push
stos
dec
jb
lods
or
enter
lret
sub
mov
adc
enter
sbb
pop
lea
dec
push
pop
aas
mov
mov
movsl
imul
jle
leave
iret
int3
loop
pop
pop
xchg
mov
pusha
je
lods
movsb
push
dec
add
in
shrb
ret
pop
mov
dec
lods
pop
jb
ljmp
lods
inc
xor
rcrl
loop
test
int3
pushf
jl
movsb
pop
or
inc
add
pop
xor
push
cltd
inc
mov
cmp
out
mov
push
pop
jl
sahf
loope
fs
flds
rorb
leave
jb
push
adc
jne
or
lds
mov
fs
cmp
xchg
push
js
jb
iret
cmpb
or
pop
rcrl
xor
adc
outsb
pop
mov
arpl
jbe
jecxz
cmpsl
rorl
mov
ds
mov
and
dec
dec
mov
push
and
aas
loope
pop
les
test
jge
xchg
sahf
das
push
out
xchg
inc
std
jb
pop
aas
sahf
add
incl
gs
pushf
mov
rolb
push
stos
mov
jmp
aas
pop
jle
out
pop
jo
rol
cltd
out
push
cmp
lock
scas
adc
imulb
mov
scas
mov
jecxz
cmp
fcmovnb
or
and
in
movsl
das
jb
adc
lds
sbb
dec
loope
aam
jne
add
xor
fldenv
xor
jle
sahf
clc
adc
sbb
loope
sbb
pop
imul
es
xchg
add
dec
cltd
lea
dec
out
jl
stos
xlat
sub
mov
pop
push
inc
inc
mov
inc
int
ss
out
add
cmp
add
jmp
in
idiv
lcall
imul
mov
popa
ljmp
push
sub
int3
jmp
fwait
xchg
aaa
xor
mov
daa
jecxz
inc
dec
outsl
cli
push
fnstsw
adc
loop
dec
rorl
shlb
push
in
fists
mov
jo
mov
mov
into
inc
mov
pop
pop
fprem1
jmp
cmpsb
ret
outsl
or
test
cmpb
pop
xor
add
mov
sub
out
pusha
mov
xor
stos
subps
das
mov
fadd
hlt
iret
pop
dec
xor
jl
mov
clc
or
dec
lods
shrb
mov
sahf
test
jns
or
mov
sbb
or
sub
pushf
push
fst
jl
mov
aas
pushf
push
adcl
mov
movnti
pusha
into
pop
fistpll
xor
lds
stos
mov
das
xchg
mov
xor
es
push
mov
in
push
das
xor
sbb
jle
ret
sbb
mov
pop
dec
xchg
mov
or
pop
pop
push
sarb
stc
dec
push
insb
lea
xchg
push
push
pop
pop
fsubrl
sbbl
mov
fdivr
sahf
into
mov
stos
adcb
sub
in
xor
test
lods
stos
push
fidivl
ret
push
push
cmpsl
out
and
cmp
mov
sub
add
push
xchg
insl
mov
or
test
stos
fistpl
adc
loopne
icebp
cwtl
mov
test
call
adc
cmp
push
cli
mov
dec
xor
pushf
lea
subb
std
inc
cld
sbb
out
pop
cmp
movsl
ret
sbb
mov
je
dec
cmp
into
mov
add
in
xor
sub
xchg
xchg
les
adc
shl
pop
lods
bound
jae
push
push
outsl
mov
jno
fs
or
push
pop
adc
pop
in
mov
mov
fstl
adc
pop
enter
push
push
cwtl
sbb
cmpsl
adc
dec
dec
mov
in
jnp
roll
leave
jp
sarb
mov
jp
pop
mov
or
and
xchg
push
xchg
or
push
jle
cmp
insb
pop
int3
add
xchg
aad
incl
push
stos
xor
xor
mov
or
lock
fnstsw
or
sbb
repnz
popa
mov
nop
movsb
outsb
in
test
repz
xrstor
mov
push
enter
jns
push
pushf
xor
imul
mov
add
dec
enter
cltd
ret
dec
sbb
fcompl
pop
sbb
daa
jge
pushfw
pop
fwait
push
mov
adc
inc
adc
inc
push
cmpsl
sahf
inc
dec
xor
movsl
pusha
adc
das
or
lahf
mov
vucomiss
clc
jne
lcall
pop
or
loop
jmp
pushf
ds
fidivs
dec
daa
or
out
insb
fwait
rol
mov
xor
scas
xor
mov
adc
inc
jo
int3
neg
jns
aam
fsubs
mov
pop
cmp
and
out
gs
js
pop
gs
fldcw
jo
adc
shlb
dec
scas
dec
or
ljmp
arpl
cmp
dec
ljmp
int3
movsl
push
lcall
xchg
test
fists
fstps
push
sbb
mov
leave
push
decl
dec
cmp
xorb
int3
jae
add
rol
or
mov
adcl
in
add
andl
xchg
repz
aam
adc
mov
setns
xorl
inc
or
push
dec
inc
xchg
cmp
inc
icebp
lret
cmp
push
daa
insb
push
in
xor
mov
in
jbe
jle
imul
fisubrs
shrb
adc
fisttpll
loop
xlat
ds
fs
mov
dec
jnp
jno
add
xor
rorb
pop
icebp
cmp
adc
mov
cmpsb
sub
loop
pop
mov
add
pop
outsb
pusha
dec
hlt
mov
in
mov
cmp
movb
or
pushf
loop
jo
xchg
jo
xlat
pop
je
sub
jle
jge
ljmp
cli
fsubrl
fisttpll
movl
outsb
mov
pop
iret
aaa
or
xor
sub
cmp
fdivrp
xor
add
aam
cltd
es
repnz
jns
xchg
xchg
pushf
popa
add
fstpt
mov
push
leave
inc
pop
cld
std
push
pushl
jo
jbe
shrl
ja
cmc
add
cld
cmpsl
test
in
sbb
testl
inc
out
pusha
and
xor
arpl
jmp
lods
xlat
arpl
rorl
pop
push
push
fsub
mov
scas
in
les
push
data16
adc
mov
push
cmp
push
cmc
cwtl
cmp
fs
in
in
test
std
pause
xor
xor
pop
js
xchg
dec
mov
fwait
sub
mov
mov
jae
mov
movsl
fisttpll
movsb
cs
sub
xchg
pop
ljmp
dec
xor
neg
fcmovbe
ret
mov
inc
sub
inc
testl
leave
sbb
xchg
mov
bound
sbb
stc
outsl
push
loopne
pop
inc
adc
cli
scas
sbb
xlat
hlt
pop
xchg
dec
cmp
cmp
lock
imul
xchg
inc
mov
push
mov
and
pop
xchg
scas
sbb
add
dec
xor
mov
pop
popa
sarl
push
shlb
sbb
lods
mov
shll
adc
mov
stos
add
push
rclb
jp
test
into
es
fcomi
lret
in
bound
xor
and
shrb
mov
xor
stc
out
push
xchg
fwait
add
jp
pusha
mov
iret
mov
jle
add
push
aaa
xchg
les
or
test
inc
adc
sub
sbb
push
mov
sbb
cmpsb
push
pop
add
pop
jl
cltd
fildl
jecxz
dec
xor
in
xchg
push
pusha
ret
xor
sub
mov
aad
cmp
cld
or
pop
mov
mov
mov
add
aad
sahf
lods
xor
nop
inc
add
scas
dec
lods
sub
and
jbe
adc
imul
or
test
mov
add
xor
sub
adc
cmp
jg
dec
and
jnp
ja
fists
jmp
inc
push
and
and
mov
aaa
shr
cld
mov
scas
mov
scas
push
popf
or
iret
cmp
pop
pop
leave
out
enter
rorb
subl
push
mov
loop
imul
jo
ss
push
cmp
cli
das
in
adc
insl
mov
pop
mov
mov
mov
in
imulb
mov
jl
in
rcl
mov
addr16
cli
fs
js
and
mov
push
lods
jmp
cmpsl
mov
sub
test
in
push
cmp
xlat
inc
dec
fsubs
add
xor
mov
lea
pop
out
cmpsb
push
jecxz
pop
and
je
iret
inc
mov
sti
xchg
adc
addb
and
and
rorb
icebp
shl
xor
ret
das
loopne
inc
fnstsw
daa
sti
push
mov
xchg
mov
sub
je
out
lahf
dec
or
outsb
mov
push
ret
in
xor
aad
stos
and
pop
stos
in
mov
icebp
movsb
shll
insl
lods
addr16
cli
push
cmp
cwtl
sbb
xchg
xor
push
test
test
fistps
mov
lods
push
cld
mov
jo
jg
sub
mov
push
outsb
pop
mov
adc
test
lods
pop
pop
int3
lret
inc
and
mov
sarb
lcall
lahf
sar
adc
mov
ret
imul
jne
dec
mov
push
call
rep
sbb
adc
les
sub
mov
lret
loope
inc
inc
or
jo
jge
addl
sub
jo
pop
jle
mov
fisubs
out
mov
inc
mov
andl
inc
push
push
gs
mov
jne
dec
sbb
or
dec
cwtl
into
insl
lea
leave
pop
mov
or
das
mov
jmp
mov
ficoms
inc
mov
ja
inc
and
jbe
dec
mov
mov
push
stos
cmp
jge
add
outsl
mul
add
cmp
jge
jb
insb
or
loopne
push
sub
mov
call
xor
subl
gs
lock
dec
clc
dec
out
arpl
shrb
repz
pop
inc
ja
pop
mov
roll
cmp
xchg
push
cmp
shrb
mov
adc
mov
xchg
pop
retw
xchg
mov
test
aas
sbb
fsubr
xchg
ds
add
push
test
adc
nop
std
enter
sub
lds
adc
rcrl
orl
sbb
out
gs
mov
pop
lcall
je
ds
mov
mov
xor
std
int
mov
or
sbb
xor
xor
mov
fs
dec
and
xor
inc
adc
lahf
insl
push
xchg
add
xchg
movsb
int3
cmp
dec
negl
mov
test
int3
or
mov
hlt
jbe
push
or
fistpll
ret
fsubl
xorl
repnz
mov
ret
dec
xor
mov
in
inc
lret
mov
mov
gs
push
pop
sbb
outsb
xchg
adc
adc
bound
cmpsl
inc
jns
pandn
inc
mov
inc
cmpsb
fwait
repnz
lret
cmpl
stc
and
cld
jl
dec
adc
and
inc
mov
popf
js
sub
mov
xor
push
jle
lret
dec
out
jne
int3
inc
insl
mov
pshufw
imul
pop
jno
enter
es
mov
test
fadd
iret
xchg
sbb
add
or
add
xchg
hlt
dec
push
mov
cmp
fstp
push
xchg
das
fidivl
es
rcl
or
dec
pop
stc
lds
jmp
add
mov
mov
cmpsl
xchg
call
sarl
inc
jno
mov
gs
pop
test
adc
or
mov
dec
and
sub
adc
jg
hlt
sub
mov
mov
mov
js
mov
add
cmp
pop
pop
mov
cwtl
dec
std
mov
dec
pop
pushf
sub
mov
cmp
in
stos
mov
rclb
cli
push
inc
rol
test
xchg
xor
or
movsl
jmp
push
into
or
mov
ror
cs
mov
mov
sahf
jecxz
or
push
call
adc
xorl
mov
mov
fildll
leave
in
and
ret
cmpsl
imul
pop
in
push
arpl
jle
jge
lea
cmpsl
cmp
add
inc
xorb
cmpsl
mov
imul
push
daa
mov
outsb
cltd
sbb
in
fisubl
cmp
xor
mov
inc
sarb
mov
negb
adc
sub
imul
ret
stc
sub
in
fistpll
dec
shlb
nop
int3
jg
xchg
push
push
enter
shlb
xchg
sub
push
push
mov
mov
fucomip
sub
push
dec
xor
sbb
or
sahf
imul
and
je
or
scas
fistps
cmp
aad
jbe
jge
xchg
lds
call
movsb
mov
cmpsl
or
mov
xlat
sub
fisubrl
jbe
mov
mov
mov
in
or
pop
outsl
jp
bound
and
les
mov
out
jge
mov
mov
scas
nop
imull
jg
fmuls
cmp
fiadds
jae
int
fwait
hlt
popa
cli
in
popf
xor
mov
ror
adc
cmpsb
sti
sbb
mov
jl,pt
loopne
mov
sub
mov
xchg
data16
out
mov
xchg
sbb
ficomps
adc
pop
scas
shrb
daa
sbb
insb
push
fwait
or
mov
movsb
push
scas
xchg
pop
aam
dec
xorb
adc
mov
and
jns
xchg
jmp
mov
and
add
xchg
ficoml
xchg
sbb
xchg
gs
add
lret
popa
push
pop
mov
cmp
cwtl
mov
jmp
push
mov
inc
es
pop
cmpsb
sti
das
jp
pop
out
test
addr16
ss
sbb
cmp
and
ficoms
fcomp
pop
or
sbb
inc
fs
in
cmp
mov
cmp
adc
fcmovbe
in
adc
sti
inc
and
shrl
push
dec
ret
sub
jbe
push
flds
fstl
ss
cmp
sbb
jns
and
xor
incl
lret
mov
adc
popf
loope
shr
push
loopne
or
mov
lds
pop
mov
test
or
or
out
or
or
mov
jecxz
xor
xchg
mov
repnz
jmp
inc
ja
push
mov
and
pop
sbb
addr16
or
out
xchg
xorb
shrl
lds
adcb
sbb
dec
ret
mov
flds
jbe
daa
adc
add
jmp
push
xchg
lock
mov
add
sbb
out
gs
cld
push
mov
cli
rol
int
push
or
imul
imul
and
cltd
sbb
in
lret
and
mov
add
jne
cwtl
test
sub
ja
test
leave
sub
mov
mov
mov
sbb
movsb
and
repnz
lcall
test
xchg
cmp
dec
movsb
mov
push
add
add
pop
fucompp
mov
outsb
mov
inc
cmpsb
mov
daa
movsb
repnz
xchg
and
cmp
dec
nop
sbb
idivl
sbb
daa
or
jl
or
mov
push
ja
movsb
push
jmp
fwait
lahf
xor
push
mov
cmp
insl
push
shl
xchg
lds
xlat
xchg
and
jae
adc
and
or
xchg
test
arpl
pop
leave
cmp
fmull
test
insb
jbe
fidivrs
in
sahf
sub
pop
dec
xchg
subl
repz
dec
xor
aam
inc
in
cmpsb
sarl
fistl
movsb
les
mov
in
mov
jle
or
hlt
sub
orl
xlat
ret
inc
push
setnp
add
ret
xchg
aam
test
cmp
xor
in
fiaddl
dec
xor
stos
mov
popf
xorb
inc
push
jl
push
into
jmp
cmp
cmpsl
jmp
push
repnz
inc
dec
or
mov
hlt
jg
fwait
aas
int
mov
mov
mov
test
out
fyl2xp1
sbb
inc
aam
jmp
fs
mov
inc
push
add
test
lret
popf
loopne
push
mov
ret
stos
mov
loopne
flds
mov
adc
dec
insl
sti
adc
xor
add
push
test
jp
inc
lea
lret
lods
daa
fcomi
sbb
push
call
lds
dec
stc
mov
dec
xor
and
xor
sbb
dec
ja
xchg
and
fs
into
adc
fcomps
loopne
lcall
in
pop
iret
sti
mov
inc
add
pop
fs
sbb
push
jle
mov
or
adc
ja
lock
mov
mov
inc
stos
cltd
jecxz
hlt
shll
jp
dec
jg
jecxz
das
sbb
mov
sbb
rcl
cmp
push
mov
bound
rcrb
add
in
les
aad
cmp
xchg
fs
icebp
inc
in
insb
mov
mov
xor
les
in
dec
repz
aad
mov
xor
psrad
scas
in
sbb
lea
pop
mov
jle
xor
loopne
testb
out
pop
push
popf
loop
add
rorl
ret
xor
lock
jo
insl
xchg
or
fsqrt
repz
jg
inc
adc
inc
lret
jmp
inc
mov
jo
imull
mov
out
je
popa
jnp
aad
addr16
lret
scas
mov
test
mov
insb
pop
loop
mov
stc
pushf
jbe
adc
inc
loope
sub
loopne
adc
dec
sbb
jmp
mov
adc
add
dec
fstps
stos
push
xchg
lret
ja
faddl
paddusw
cli
dec
inc
cmpsb
movsl
je
add
mov
sti
sbb
cmp
lods
dec
fs
dec
sahf
mov
mov
pop
mov
fstps
shlb
mov
sbb
ds
clc
iret
mov
je
jno
add
xlat
sbb
test
insb
cltd
cmp
add
fists
sub
mov
push
jbe
jge
les
sahf
lods
lahf
sub
adc
sub
shll
jg
lret
ljmp
cmpsl
mov
enter
push
jge
pop
sbb
fbld
out
out
inc
and
xchg
outsl
pop
out
in
pusha
adc
mov
cwtl
mov
xor
or
popa
pop
fld
test
jae
dec
mov
pop
push
int3
cld
insl
lcall
add
mov
pop
add
fbstp
lret
jl
inc
repnz
neg
aad
ss
icebp
clc
jle
cmpsb
mov
push
es
and
lahf
fcmovb
push
loopne
outsl
sbb
sbb
adc
enter
or
xor
and
in
fmuls
addb
adc
inc
fldenv
out
leave
push
mov
pop
or
xchg
mov
inc
mov
xchg
lods
or
pop
mov
jnp
push
dec
lock
dec
sti
jg
mov
movsb
sbb
pop
xorb
pop
cld
and
or
pop
inc
xchg
pop
jne
pop
add
xchg
mov
xchg
and
or
aaa
mov
push
scas
sbb
inc
rcrl
adc
sbb
pop
rclb
sub
sbb
loop
rcr
imul
lahf
jnp
push
test
mov
daa
mov
xor
cvtpi2ps
inc
sti
xor
push
addr16
push
push
cmc
cld
out
sbbl
flds
rclb
mov
hlt
xchg
call
pop
and
lods
jl
stos
pop
jne
fildl
pop
std
pop
adc
xor
loopne
imul
jle
mov
adc
push
push
neg
test
mov
pusha
ja
inc
pop
ret
scas
xor
xbegin
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
ja
inc
inc
push
push
push
add
push
push
push
nop
nop
nop
push
push
nop
nop
movl
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
