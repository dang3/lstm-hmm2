mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
cmpsl
and
sub
rcrb
mov
xlat
shl
lea
fwait
mov
jno
jl
iret
sbb
enter
scas
pop
cmpsl
push
mov
in
lcall
jne
jns
xlat
mov
rcl
and
add
aad
mov
in
into
movsl
pushf
or
out
psrad
mov
xchg
addr16
lods
les
mov
push
dec
xor
data16
in
std
jne
fldl
pop
mov
mov
mov
stos
mov
xchg
inc
cmpsb
and
xor
adc
sub
imul
push
int3
inc
mov
dec
mov
add
mov
repz
loopne
icebp
inc
hlt
incb
idivl
loop
xchg
mov
mov
nop
push
lret
cmpsl
pop
inc
cmp
jno
push
scas
adc
mov
push
cmp
inc
pop
jg
or
out
jno
dec
movsl
xchg
test
push
add
shlb
bound
or
popl
ret
lret
sbb
push
inc
rolb
jecxz
addb
jle
nop
xor
sub
pushf
orl
inc
xchg
loop
repnz
and
mov
out
push
mov
dec
enter
add
fldpi
sahf
mov
mov
inc
push
and
lods
bnd
in
or
or
jns
lods
push
mul
lret
xor
inc
sbb
xor
nop
aad
std
repnz
insb
push
inc
push
inc
cli
fidivs
out
or
mov
push
fwait
and
add
ja
sahf
mov
mov
lahf
arpl
inc
add
mov
xchg
push
stos
mov
pusha
nop
jo
mov
cmc
ja
insb
pop
jle
push
insb
mov
ret
sub
cli
push
shll
or
in
aad
rolb
lahf
pop
jmp
in
lods
enter
loope
xor
ja
out
jmp
jl
jg
stc
xlat
jmp
add
pop
addr16
cmp
jmp
aad
push
xchg
into
pop
push
sub
call
dec
call
push
mov
inc
pop
xor
inc
push
sbb
out
cwtl
fcomps
mov
es
dec
iret
xor
adc
es
fiadds
daa
jns
iret
es
shll
or
sti
mov
leave
cmp
scas
sub
dec
sbb
aad
sub
shll
aas
jae
xchg
ret
dec
jbe
ficoms
mov
out
subb
lret
ds
mov
arpl
test
cmpsl
and
stc
ja
int
sub
pop
xor
fisttps
jno
cwtl
push
mov
nop
sbb
in
cmp
cs
pusha
add
loopne
int3
nop
inc
pop
stc
pop
or
xor
mov
das
das
jp
add
jae
sti
mov
je
test
mov
pop
iret
or
fs
jg
push
push
out
lods
adc
adc
push
pop
std
das
mov
scas
hlt
add
mov
aas
jno
jmp
or
push
aas
cmp
sbb
sbb
or
loop,pt
inc
xchg
or
mov
gs
jmp
stos
mov
daa
cmc
es
insl
cwtl
xchg
lds
pushf
lret
xchg
shrb
int
jne
daa
and
push
jae
ja
mov
mov
les
sti
dec
cmpsl
fidivrs
loopne
fnstcw
push
cwtl
push
enter
lcall
inc
enter
insl
pushf
and
lret
inc
les
je
out
jmp
test
hlt
adc
filds
push
cmp
mov
or
pop
cs
and
fisubrl
jo
push
jecxz
imul
int
cld
dec
mov
mov
outsl
mov
pop
cmp
fucomp
cmpsl
adcb
data16
adc
stos
mov
or
lods
xchg
testl
cmp
out
push
add
mov
scas
rolb
sub
pusha
xor
testl
push
sub
in
pop
inc
dec
mov
push
adc
dec
or
jnp
push
add
adc
push
or
dec
jae
mov
dec
les
fstp
lods
fiadds
mov
jns
mov
cmc
sbb
mov
sbb
mov
sarl
fisttps
fs
enter
dec
pop
or
out
pop
push
add
js
mov
inc
dec
sub
scas
push
jnp
push
insl
xchg
test
mov
inc
shll
mov
jbe
inc
xor
lds
push
jg
jge
xchg
rcr
lods
cmp
xchg
push
iret
and
push
inc
cmpsb
mov
adc
dec
jl
xchg
fisubl
orl
dec
test
hlt
push
mov
cmp
pop
sti
dec
or
test
clc
and
inc
jb
lods
mov
enter
icebp
adc
and
inc
xor
xchg
fbld
nop
int
inc
pusha
dec
adc
nop
mov
sub
sub
mov
inc
mov
shlb
pop
pop
cli
sbb
xor
or
mov
dec
imul
test
jecxz
cmp
adc
ret
shll
cld
dec
vpaddw
add
outsl
shrl
xorb
pop
xchg
xchg
and
inc
subb
dec
insb
pop
inc
mov
or
pop
outsb
fsubrs
cli
jno
mov
arpl
cli
mov
push
out
shlb
and
dec
xor
dec
push
jecxz
lret
sbb
sbb
cmp
movsl
ret
xor
scas
loope
in
xor
lcall
stos
adc
push
add
or
xchg
int3
cmp
idivl
mov
int3
test
push
cmpsl
sub
int
mov
jle
sub
jne
out
outsl
std
dec
mov
fwait
pop
ret
and
mov
adc
jbe
lods
cmp
dec
cwtl
jl
mov
mov
lods
inc
test
xchg
push
stos
xchg
outsl
jg
jecxz
adc
mov
or
fsubl
pop
push
add
stos
int3
sti
or
sbb
cwtd
pop
lret
xor
mov
jno
leave
mov
jmp
add
mov
dec
sahf
imul
xor
push
sbb
out
mov
ret
pop
jns
dec
fwait
pop
inc
mov
inc
inc
lock
loopne
push
push
popa
lahf
cld
les
cmc
xlat
mov
lods
and
sarb
stc
int
xor
pop
daa
ss
add
sub
repnz
xor
call
sarl
add
subl
cmpsb
not
or
pop
in
loop
and
push
stos
or
sub
cmp
data16
or
ljmp
lcall
test
out
sar
add
xor
es
sub
mov
ljmp
loop
fiadds
int3
fists
cmpb
jnp
sub
arpl
sbb
xchg
insb
ret
dec
loop
mov
ret
lock
xor
add
xor
mov
mov
andb
icebp
rcrl
sbb
pop
ljmp
xor
hlt
ss
loopne
push
sub
insl
sbb
cmp
jnp
divl
or
mov
es
ret
pusha
mov
xchg
mov
lret
push
sub
lock
clc
lret
sbb
sbb
negb
dec
inc
je
mov
out
sbbl
shlb
jb
adc
movq
call
and
fwait
arpl
xchg
mov
lds
mov
test
lds
sbb
mov
test
in
sahf
leave
faddl
cmc
jge
movsl
into
mov
mov
pop
stc
mov
mov
adc
imul
sub
imulb
cmp
add
push
sbb
mov
test
xor
iret
jne
or
xor
aaa
clc
aaa
jp
loope
and
outsl
adc
jb
inc
sub
pop
insb
dec
insb
jl
enter
or
and
sbb
popf
loop
jecxz
leave
lock
ss
fidivs
les
lock
divl
pop
cmp
pusha
xchg
jecxz
cmp
mov
cmpl
lret
mov
insl
xor
xchg
or
xchg
test
loop
push
mov
cs
jge
jo
mov
lahf
pop
cli
jg
xor
je
mov
cmp
int3
aas
bound
pop
and
test
test
loop
push
test
jbe
mov
insl
xlat
mov
hlt
xchg
or
ja
push
dec
push
sar
das
shlb
xor
pop
popf
and
mov
add
iret
mov
je
js
xchg
and
xchg
push
mov
dec
adc
imul
popf
xor
lcall
loop
mov
test
inc
mov
dec
and
mov
loope
xchg
test
cmp
push
stos
gs
imul
adc
shrb
aad
mov
pop
sbb
dec
fcmovb
fstpt
repz
pop
neg
hlt
xchg
fldl
jno
mov
push
xchg
mov
push
bound
push
mov
mov
pop
mov
xchg
push
cmp
mov
push
int
inc
mov
inc
xchg
dec
xchg
fists
xchg
jl
leave
movsb
mov
adc
mov
mov
mov
sbb
fidivl
lret
cmp
lret
pop
push
pop
cmp
mov
push
mov
cld
rcrl
aam
loopne
xlat
xchg
pop
mov
xor
and
push
fwait
sbb
jae
or
dec
movsl
mov
mov
repnz
mov
in
push
fsubs
and
add
sub
adc
adc
imul
ss
adc
fs
arpl
xorb
cmp
imull
mov
sub
pop
mov
push
dec
and
mov
and
bound
js
and
fdivrl
inc
sti
test
loop
and
push
mov
cltd
pop
in
stos
adc
xor
xchg
mov
push
push
es
scas
add
or
imul
addr16
movsl
cmp
and
inc
gs
jnp
insl
xorb
pop
stc
mov
test
stc
jae
test
mov
and
cmc
mov
and
test
xchg
push
aad
mov
add
test
or
sbb
add
pushf
fneni(8087
add
jmp
outsb
pop
mov
ret
jbe
jns
leave
mov
mov
movsl
push
leave
in
jo
cmp
sti
iret
xchg
out
push
je
mov
mov
mov
mov
js
aad
dec
les
mov
lods
push
insl
lock
mov
lret
mov
xor
popa
push
pop
adc
mulb
inc
add
cmp
or
lea
pop
pop
adc
ror
scas
add
loope
jge
mov
inc
sbb
jmp
mov
enter
sbb
je
push
adc
inc
fwait
push
xor
and
xor
cltd
int3
addr16
pop
inc
add
mov
icebp
out
test
ret
dec
popf
popa
dec
lea
add
xchg
int3
gs
lock
sub
mov
leave
aaa
xorb
cmp
mov
sub
cmp
lret
iret
movsb
sti
xchg
fstps
out
imul
inc
movsb
pop
clc
mov
mov
push
add
sbb
mov
stc
ret
cltd
dec
ljmp
inc
outsl
jg
or
repz
add
inc
pop
cld
lods
adc
cwtl
dec
cmp
xor
shll
xchg
add
cld
dec
loopne,pn
mov
in
sbb
xor
mul
push
mov
jp
scas
fdivr
cmpsb
js
daa
mulb
gs
psllw
mov
push
push
mov
mov
mov
insb
loope
ror
hlt
sbb
sbb
pusha
popa
cli
push
int3
out
pushf
imul
mov
mov
loop
sbb
ss
xlat
push
in
lds
mov
jl
adc
ljmp
mov
inc
xor
jae
sub
lahf
dec
out
or
lret
sub
pop
mov
shl
aad
sahf
fs
mov
mov
fmuls
push
mov
cmp
arpl
scas
sbb
loope,pt
mov
lret
out
sbb
mov
cmc
test
mov
jmp
movsl
add
mov
repz
xchg
into
xor
repnz
mov
add
cmp
jo
xorb
loop
adc
lcall
daa
inc
fimull
push
scas
pop
gs
fiaddl
lea
fwait
nop
test
and
xchg
sub
mov
xchg
xor
and
adc
push
imul
mov
and
es
out
mov
xor
and
mov
cmp
sbb
icebp
aaa
ja
push
out
aad
add
mov
push
enter
sti
mov
mov
daa
mov
sti
jne
inc
roll
mov
pop
mov
ljmp
mov
inc
sti
pusha
pusha
xor
pop
pop
hlt
lret
cmp
push
in
dec
xchg
repz
es
repnz
rcll
sub
movsl
les
dec
cmp
mov
xor
mov
faddp
ror
bound
fistps
jecxz
inc
lods
int
sarl
pop
and
and
xchg
jle
std
jno
mov
jbe
sbb
xchg
int3
clc
fildll
sub
push
aad
adc
cmp
repz
adc
cmp
or
arpl
sub
jnp
out
mov
jae
jne
data16
not
adcl
and
jecxz
push
mov
repnz
pop
cmp
out
cld
jecxz
sub
packsswb
ljmp
addr16
rcll
cmp
pop
out
nop
jbe
sub
insb
mov
add
pop
lods
in
sub
cli
push
movsb
fistpl
inc
pusha
out
dec
je
lret
orb
mov
cltd
jb
cs
and
inc
das
dec
sti
xlat
cmp
cs
inc
pop
mov
cmpl
fstl
inc
lcall
dec
aas
test
addr16
fadds
adc
or
mov
cmpsb
rcrl
out
fmul
inc
test
adc
sub
or
jg
sbb
inc
fs
aas
mov
stos
pop
testb
inc
xorl
das
aam
inc
adc
mov
test
mov
xchg
into
mov
int
xor
cmpsl
add
mov
jb
outsl
jbe
rcrb
jbe
jge
daa
add
jmp
xchg
nop
mov
and
xchg
push
jge
cmp
mov
pop
push
fmuls
andb
pusha
cld
iret
out
fcoml
push
mov
xor
daa
fwait
cmp
rsqrtps
enter
test
dec
rorb
aad
mov
xor
xchg
in
mov
addl
mov
dec
cld
inc
dec
cmp
movsb
mov
jge
and
cmp
pop
mov
push
sahf
mov
cli
push
sahf
pusha
mov
pop
sbbl
movsb
fdiv
jns
sub
push
scas
and
or
mov
clc
out
mov
push
push
cmp
bound
call
mov
lods
outsl
arpl
sar
ljmp
pusha
cli
shrl
pusha
rorb
sysenter
add
jno
sbb
and
call
out
in
xchg
out
dec
sub
and
pop
hlt
mov
lcall
mov
or
xor
pop
inc
xchg
add
mov
jmp
ret
movsb
mov
in
xor
or
inc
and
repnz
out
add
fsubl
sahf
lods
int3
mov
or
xor
push
lock
aaa
jp
ret
sub
push
cmpsl
lods
jg
scas
xchg
xor
hlt
push
call
aas
int
call
sub
daa
sbb
mov
dec
adc
jecxz
adc
fdivl
lahf
push
mov
nop
fwait
sti
imul
test
addr16
cltd
lahf
or
or
imul
shlb
scas
in
and
xchg
jmp
in
jbe
cmc
mov
cs
pop
push
inc
pop
add
movsl
jle
jmp
divb
jnp
stos
inc
adc
adc
pushf
cli
mov
cmp
stos
sub
cld
xorb
dec
ficoms
push
mov
sub
rcl
pop
jge
fisubrs
mov
mov
stos
lock
sub
jo
shrb
push
lds
cmpsb
push
sub
pusha
add
fcoml
pop
mov
sbb
adc
mov
push
push
sub
or
enter
dec
xor
cmpl
push
pushf
inc
mov
loopne
rcr
mov
imul
sub
loope
push
in
repz
orl
push
push
lock
inc
sub
fdivs
inc
adcl
push
data16
out
cmpsl
sbb
addr16
mov
aaa
and
push
ret
xchg
add
insb
ret
inc
xchg
test
xchg
lret
rcll
filds
push
hlt
int
insb
rolb
or
inc
push
adc
xchg
mov
imul
lcall
mov
leave
cmp
lret
pop
lea
es
std
sbb
fwait
adc
stc
jmp
xchg
aaa
dec
out
mov
pop
js
cmp
das
push
pop
mov
adc
inc
fcomi
mov
movsl
sbb
push
add
inc
popf
cli
push
mov
mov
loope
arpl
sbb
fisubl
add
stc
sbbb
aad
mov
int3
cmpsb
hlt
dec
repnz
mov
out
push
andl
je
scas
push
mov
mov
jecxz
mov
scas
loopne
fsubr
and
fisttpl
lret
inc
clc
push
add
nop
adc
gs
repz
xchg
ds
mov
mov
leave
popa
dec
mov
pop
sti
int
js
xor
cmpl
or
aaa
data16
mov
aas
xor
outsl
fistl
rcrb
lds
or
and
repz
mov
xchg
popf
dec
lret
mov
or
add
rsm
mov
lods
sub
add
arpl
push
faddl
daa
xorl
sbb
divb
int
jnp
imul
mov
sti
cmp
inc
addl
dec
xor
into
mov
adc
xchg
mov
mov
sti
sub
es
or
dec
jo
nop
xchg
in
je
lods
stc
push
flds
pop
jmp
push
das
and
xor
je
xchg
test
pop
xor
push
jo
std
into
push
iret
mov
aad
in
push
mov
cmpl
mov
sbb
adc
mov
jmp
ret
add
and
xor
cmpl
repnz
pop
xorb
negl
jno
or
in
enter
mov
leave
cmp
mov
jae
cmp
xor
add
daa
xchg
or
imul
jo
jb
or
filds
das
in
xor
jmp
jp
and
ds
or
push
jge
loop
jmp
test
fidivrl
mov
and
loopne
xor
xor
in
xchg
test
aam
mov
pop
or
sub
aas
out
mov
push
and
xlat
test
rcll
xchg
icebp
fdivrp
scas
lcall
cmp
ret
xchg
pop
ffreep
push
stos
stc
int3
sarb
scas
sbb
xchg
pop
fidivrs
outsb
sbb
pop
stos
mov
add
stos
mov
out
cwtl
sbb
adc
sbbb
sub
mov
mov
shrb
or
ficompl
inc
xchg
sbb
imul
lahf
das
scas
cld
cs
mov
les
cmp
sbb
xchg
sbb
and
inc
stos
call
sbb
jp
jl
aad
pop
dec
push
nop
jg
fbstp
leave
push
cld
push
outsl
mov
inc
pushf
lods
push
pop
and
sbb
in
jecxz
int3
sti
or
in
loopne
xor
test
int
loope
push
or
inc
scas
dec
sbb
sahf
push
out
xor
loop
jne,pn
ss
jno
sbb
rcrl
mov
and
xor
orb
mov
pop
xchg
mul
xor
repnz
in
or
xchg
imul
adc
inc
cmp
push
add
mov
pop
jns
pop
shlb
scas
push
adc
outsl
sarb
push
push
pusha
int3
loopne
insb
insb
icebp
push
test
mov
mov
pop
sahf
jb
inc
arpl
and
lock
and
lret
imul
or
pop
clc
insl
lret
xchg
test
sahf
cmpsl
pushf
rorl
out
ja
xchg
lret
add
add
je
loop
nop
ret
loop
mov
aad
faddl
mov
scas
repz
pop
fldl
adcl
cs
and
push
es
jle
addr16
into
dec
mov
cmc
jmp
test
cmp
sarl
aaa
jbe
inc
rcl
lods
shlb
enter
and
cmpsb
mov
pop
pop
in
shlb
in
jl
outsl
inc
xchg
xor
push
dec
enter
ror
xchg
jns
stos
jne
push
pop
push
inc
and
inc
lods
fldenv
xchg
and
cmc
mov
jae
arpl
sahf
ficoms
rcrb
sahf
mov
imul
leave
jecxz
fisubs
sbb
and
pushf
fldl
xorl
pop
sub
mov
push
adc
shlb
lret
xor
hlt
adc
and
out
subb
cmp
outsb
es
dec
jno
dec
pop
sbb
mov
jmp
into
and
data16
push
pop
shlb
add
shl
rcl
pop
push
or
add
mov
aaa
and
cmp
and
shlb
iret
dec
and
out
ret
repz
outsb
or
outsb
in
cmp
dec
adc
into
notb
mov
popf
fidivrs
test
subb
push
fcoms
jecxz
pop
imulb
rcrb
sbb
je
mov
cmp
filds
pop
xchg
sbb
xchg
mov
adc
test
sbb
lahf
push
mov
and
sbb
sbb
ret
outsb
lea
push
jp
fwait
push
ror
jp
in
lret
fbld
dec
fstpt
cmc
mov
out
sbbb
mov
imul
imul
pop
inc
test
insb
mov
enter
push
iret
mov
clc
cmpl
fdivrl
test
jbe
xchg
fbstp
adc
nop
push
jge
xor
ljmp
add
sbb
xchg
mov
out
pop
mov
push
push
cmpb
lret
add
push
ret
fsubs
sbb
divl
cmp
push
test
sbb
aam
or
test
in
push
test
pop
dec
pop
adcl
hlt
fbstp
fmulp
pop
into
aas
dec
je
and
inc
idivb
cli
fs
lea
mov
cmc
push
les
mov
popf
cmovbe
push
call
pusha
and
stos
mov
adc
outsl
aas
sahf
xchg
sbb
lds
and
out
out
incb
sub
imul
xor
int3
sbb
push
jae
in
das
xor
ret
in
cmp
mov
xchg
cmp
add
dec
push
inc
cwtl
xchg
mov
fcoml
push
jae
and
jecxz
pop
sub
roll
rorb
dec
shll
or
mov
xor
js
int3
xchg
sub
cli
lahf
out
sbb
push
jmp
je
aaa
ror
push
adc
ret
fcomi
mov
mov
cmp
dec
pop
cmp
jg
cli
adc
jae
js
mov
in
sbb
or
into
mov
int3
sub
imul
pop
pop
fs
sti
dec
cmpsl
in
and
fcomp
mov
mov
and
push
add
shrb
pop
pop
sti
cmpsl
mov
dec
pusha
ds
add
mov
xchg
xlat
inc
mov
int
in
test
mov
mov
cmpsb
mov
and
mov
lret
aaa
xchg
cmc
insb
fcomi
lret
fwait
adc
daa
inc
cmpsl
out
sbb
popa
push
adc
inc
fistl
pop
fisttpl
or
push
inc
pop
jb
popa
nop
ret
icebp
xchg
out
push
xor
jge
inc
sub
add
cmpsl
jmp
add
jp
rorb
cli
cmp
ljmp
sahf
jecxz
mov
mov
test
inc
dec
pop
sbb
pop
sub
stos
mov
out
psubsb
loop
inc
push
mov
call
sbb
push
out
movsb
jle
mov
ss
hlt
jmp
fidivs
bound
shrl
cmpsl
cld
lods
lods
push
test
jbe
andl
in
sub
cmp
pop
or
cmp
xor
loope
adc
inc
loop
xor
cld
into
xchg
fildll
test
pop
sbb
cmp
fstl
les
jecxz
jns
subps
jo
test
aaa
movsl
pop
insb
fucom
imul
fs
jg
out
nop
or
mov
push
and
ret
jmp
dec
das
arpl
scas
ds
scas
or
dec
mov
leave
fdivr
push
and
js
scas
mov
pop
loope
icebp
mov
xchg
inc
push
sub
sbb
in
xchg
adc
js
xchg
mov
data16
xor
clc
mov
cmpsb
jno
shrb
push
insl
xor
movsl
mov
adc
sbb
jle
in
mov
mov
lret
test
fs
mov
lea
fs
in
jle
xor
inc
push
push
sub
cltd
out
sbb
ljmp
push
scas
mov
mov
rorl
add
pop
dec
mov
dec
mov
mov
mov
outsl
xchg
mov
popf
dec
pop
outsb
enter
mov
daa
stc
iret
ds
aaa
inc
aad
imul
push
roll
inc
adc
data16
std
and
sbbl
jno
pop
inc
adc
fmuls
lret
jg
or
push
scas
movsl
out
jge
adc
fsubrp
js
xor
adc
aas
cmc
push
inc
mov
lea
js
pushf
or
aam
jle
jne
cmpsb
mov
inc
or
push
xor
sub
xchg
aad
mov
mov
int
cltd
ds
pop
mov
xor
movsb
pop
in
sub
repz
sbb
push
loopne
popa
jmp
xchg
cmp
jno
enter
jb
stos
in
cmp
xchg
push
imul
std
ret
jl
in
push
scas
cmp
cs
icebp
insl
aaa
jecxz
es
mov
std
jne
jno
scas
mov
dec
xor
jbe
insb
adc
cmp
clc
lea
jg
xchg
pop
cmp
xchg
cmc
push
loopne
jbe
jg
sub
das
sahf
pop
pop
out
cld
shrl
xor
pop
js
fstpt
std
jmp
insl
add
arpl
pop
sbb
mov
arpl
je
xor
add
and
aam
add
sbb
push
jb
cmp
cmp
les
sbb
inc
int
rolb
mov
iret
pop
cwtl
mov
xchg
sub
fldenv
dec
stc
xlat
outsb
and
push
dec
je
enter
jp
jl
push
xchg
mov
sbb
lods
xchg
testb
lock
filds
mov
dec
data16
xor
fdivrl
dec
leave
cmp
jne
add
cmp
mov
fnclex
in
out
sbb
inc
int
dec
and
sbbl
fwait
enter
push
pop
jns
dec
pop
rcrb
pop
inc
mov
in
fstps
dec
in
mov
adc
ljmp
jno
repz
lret
icebp
ficoms
adc
inc
pop
and
jp
cmp
lret
mov
jb
jae
ds
clc
inc
addr16
or
insb
adc
arpl
pop
lea
leave
movsb
in
pop
and
add
imul
push
arpl
js
in
mov
inc
mov
xor
xchg
test
xor
jnp
dec
dec
sbbl
nop
inc
lods
inc
mov
mov
add
xor
gs
sub
ret
push
pop
daa
les
cmp
clc
adc
outsl
sbb
add
movsb
or
pop
notb
rorl
cmpsb
leave
push
cmpsl
and
dec
imul
push
repz
jg
nop
cmp
popa
jnp
lods
push
mov
ret
and
mov
mov
in
scas
jl
mov
push
outsl
mov
rclb
cmc
mov
xchg
pop
aam
test
mov
push
dec
popl
xchg
push
test
pop
inc
cmpsl
scas
lahf
dec
add
ret
aas
testl
les
in
out
mov
rcrl
and
sub
inc
iret
mov
sub
test
cmc
mov
xchg
mov
out
or
scas
xchg
aas
cwtl
dec
in
mov
or
lahf
add
cmp
sbb
hlt
pop
imul
das
sub
stos
mov
jp
xlat
push
mov
add
xor
ret
and
or
dec
cmpsb
jae
test
test
mov
xor
xor
dec
enter
dec
out
arpl
out
clc
push
testl
xchg
inc
lgs
add
icebp
xor
in
or
cmc
cwtl
popf
inc
sub
sub
faddl
lcall
fs
fwait
sub
xor
repnz
mov
test
xchg
sbb
and
mov
pop
xor
push
jmp
lods
pushf
mov
in
imul
incl
adc
pop
dec
loop
push
jne
loope
popf
fldenv
pop
bound
mov
jle
pop
iret
cmp
stos
adc
mov
xchg
mull
test
movsl
mov
les
dec
cmp
bndldx
or
cli
cltd
js
lock
pop
aas
test
dec
jl
mov
mov
fcomps
das
inc
pop
mov
mov
insb
or
test
sbb
stos
mov
and
fcmovnb
mov
mov
xor
cmp
or
and
test
sub
notb
test
mov
je
inc
adc
or
mov
repz
fs
inc
subb
xor
ljmp
es
stc
fs
and
aas
xlat
lods
cwtl
pop
adc
and
lcall
mov
out
rcl
xor
push
insb
sub
xor
idiv
fwait
aaa
cwtl
mov
sub
xchg
adc
jg
lea
and
arpl
repnz
cltd
cltd
push
adc
out
mov
movsl
stos
sub
fwait
dec
aas
lahf
sbb
rcrl
popa
dec
xchg
lcall
imul
cld
lock
xor
decb
xlat
mulb
insb
push
push
mov
jmp
jnp
repnz
mov
ret
mov
movsl
into
xchg
xchg
daa
addb
xchg
jge
xchg
dec
in
and
pop
scas
in
out
and
xor
mov
mov
notl
arpl
pop
jp
inc
cmp
test
xor
lea
pop
add
lretw
daa
int3
cs
push
mov
mov
jo
mov
loopne
or
cli
inc
lds
xchg
lahf
test
sub
add
lret
inc
push
aas
fdivrp
mov
movsb
dec
aas
add
aas
push
xor
sub
xchg
adc
movsl
clc
icebp
bound
test
and
pop
fwait
xor
fstpl
and
test
insb
xlat
add
mov
cli
jno
sbb
insb
cmp
test
push
sub
aam
ds
mov
out
sub
out
sub
loop
notb
arpl
cli
xchg
sbb
push
jno
aam
cmc
add
stos
mov
fs
rorb
lahf
jae
notb
xor
in
cmp
in
cs
insl
mov
mov
imul
fcompl
mov
lcall
mov
int3
ja
test
dec
std
mov
sbb
xchg
out
aas
jecxz
push
jno
mov
cmp
xchg
mov
add
add
jge
jp
lea
cmp
push
das
pushl
lcall
push
mov
xchg
mov
rclb
cmp
inc
imul
xor
inc
ss
nop
xor
shlb
dec
add
lcall
repnz
and
fildll
nop
jb
mov
jbe
mov
ds
sbb
sbb
call
sahf
xor
nop
daa
xchg
adc
insb
out
or
adc
mov
xchg
and
push
orl
jl
filds
lock
repz
pop
pop
shrb
or
out
sub
mov
das
test
or
ljmp
mov
xchg
jp
dec
sti
loop
inc
pop
js
jge
cwtl
int3
push
xchg
cmp
jle
insb
decl
inc
and
add
fdivrl
push
neg
jb
add
daa
outsb
adc
pop
mov
leave
push
pop
sbb
mov
mov
push
andb
push
adc
rsqrtps
mov
or
jo
or
ret
adc
test
push
jno
mov
icebp
dec
sub
push
sub
lds
inc
xor
push
jnp
fbstp
das
ret
fists
or
out
dec
or
pop
xchg
pop
cld
adc
push
insb
mov
add
mov
stc
sbbb
cmpb
incl
stos
pop
subl
std
lahf
mov
xchg
xchg
mov
cmpsb
inc
sbb
jle
adc
xorb
sub
mov
dec
cmpsb
loope
pop
test
xchg
test
enter
dec
sahf
lea
lods
fisubs
mov
mov
outsb
fiaddl
jo
xor
dec
cmpsb
into
outsb
inc
aam
mov
loope
and
mov
mov
test
sarl
lret
dec
fldt
xchg
xchg
adc
sete
sub
and
xchg
testl
xlat
aas
sti
lcall
scas
imul
mov
lds
clc
iret
das
stos
divb
leave
jnp
stc
imul
pop
aam
in
out
enter
mov
push
dec
add
outsb
movsb
ss
mov
mov
mov
push
cltd
inc
lds
xchg
lahf
jb
movsl
out
xchg
scas
mov
rcll
loope
jmp
js
inc
add
mov
xchg
subb
pop
inc
jno
mov
jne
nop
xchg
jmp
pusha
outsb
insb
aas
dec
pop
xchg
cli
jo
out
mov
pop
mov
lret
repz
inc
push
xchg
dec
add
test
sub
inc
xchg
jno
jl
lock
pop
mov
mov
xor
sub
int3
insb
loop
stos
cmp
mov
xchg
add
push
xor
pop
dec
ss
orl
adc
cmp
scas
cmp
out
lahf
or
inc
stos
cs
pop
sarb
movsl
pop
inc
fcmovnbe
lods
cs
aad
cli
shl
hlt
inc
mov
push
out
xchg
mov
mov
aaa
paddusb
mov
mov
jb
jle
loope
test
mov
jns
sbb
push
lds
inc
push
or
push
push
inc
sbbl
push
shll
adc
cltd
cmpl
ficompl
mov
test
sub
cmp
subl
fimull
popf
and
pop
into
movsl
cwtl
push
rorb
cs
and
xlat
repz
sub
or
push
hlt
sarb
and
jp
jmp
inc
fldt
sbb
lret
imul
rcr
push
push
dec
mov
cmp
jg
inc
xchg
push
lahf
call
imul
movsl
cwtl
sbb
sahf
cmp
mov
fsubr
or
pop
in
jp
clc
jecxz
inc
add
leave
mov
popa
aaa
rcr
iret
test
std
out
test
sbb
mov
pop
ffreep
stos
adc
add
jl
cmp
insl
lcall
aas
movsb
push
mov
lret
add
test
mov
bswap
inc
scas
cli
leave
inc
jp
mov
sti
sbb
push
in
add
ret
adc
call
xor
lcall
mov
pop
iret
sbb
pop
shrb
mov
cmp
aam
int3
push
mov
xor
out
mov
stos
xchg
sub
sub
mov
shrb
shlb
cmp
daa
imull
out
lcall
mov
ret
jno
or
in
repz
mov
insb
data16
dec
sbb
mov
daa
test
dec
and
and
dec
lods
ss
pusha
out
out
pop
xchg
xchg
inc
and
sbb
stos
jl
rcrl
or
rol
stos
and
test
inc
aaa
es
sub
movsb
fdivr
pop
test
xor
minps
movsl
movsb
mov
ficoml
outsb
adc
lahf
imul
mov
imul
xor
test
fbstp
jne
fmul
lcall
adc
xor
and
into
cmpsl
std
add
add
inc
mov
mov
pop
fsts
sbb
mov
cmpsb
jae
shlb
inc
sub
inc
dec
push
xor
inc
mov
mov
bound
pop
dec
repz
out
sub
cmp
mov
sub
add
enter
psllq
mov
sahf
and
out
dec
lock
icebp
pause
fstp
and
sbb
and
and
stos
enter
or
cmpsb
pop
dec
push
mov
adc
inc
or
xor
mov
inc
mov
dec
jmp
mov
add
push
cmpsb
insl
sbb
pop
push
dec
mov
aad
sahf
push
aam
out
fwait
jns
mov
sbb
movsl
aas
or
cmp
mov
decl
dec
fldl2t
es
out
ja
test
xchg
dec
mov
dec
mov
cmpsl
xchg
repnz
mov
push
mov
jne
ret
push
mov
push
pop
jb
jns
xchg
sub
dec
adc
xor
fs
add
sub
mov
int3
rcrl
mov
and
push
sti
loope
ror
mov
cmp
mov
in
std
popa
add
addl
pop
test
jo
xchg
push
adc
add
inc
std
cmp
leave
mov
pop
loop
inc
jae
or
fimull
add
adc
cmpsl
jmp
dec
push
adc
shrb
jmp
rcll
pop
add
in
pminsw
pop
mov
mov
sbb
int3
nop
sub
adc
negb
xchg
inc
dec
out
xor
dec
and
lods
lods
xchg
xchg
cmp
adc
mov
mov
inc
int
mov
in
pop
js
mov
dec
or
mov
iret
sub
aaa
scas
imul
push
negb
les
mov
sbb
cmp
jmp
stc
add
sub
mov
test
ret
addr16
jecxz
push
fwait
aaa
pop
fsts
sub
dec
call
jl
mov
stos
test
jmp
mov
mov
adc
inc
push
movl
jl
fidivs
or
sbb
cld
movl
jne
xlat
cmp
lods
add
push
jle
push
mov
push
pop
scas
xchg
leave
out
and
mov
aas
xor
fadds
inc
and
pop
in
inc
cmp
rcr
movl
push
jmp
add
xor
cmpsb
or
addr16
fistl
mov
lcallw
scas
addr16
loop
push
in
sbbl
andnps
mov
mov
mov
in
adc
jns
mov
in
xchg
push
int3
mov
inc
cmpsl
jno
jl
fadd
sbb
fdivrl
iret
adc
add
rcl
sbb
sbb
adc
lods
lock
jecxz
lods
imul
sub
jb
mov
pop
nop
cmp
arpl
imul
jmp
jle
xchg
arpl
jo
cmp
cltd
cs
lods
mov
data16
sti
dec
iret
inc
adc
mov
jne
xchg
icebp
movsb
inc
movsl
jecxz
jnp
adc
test
ljmp
push
lret
test
enter
stc
and
ds
mov
insb
rcrb
ljmp
sub
out
lret
lea
sbb
inc
push
loopne
mov
push
roll
lret
mov
xchg
add
sahf
fidivs
fwait
cmp
cmp
daa
xchg
sbb
inc
jns
daa
jbe
adc
xor
push
rcrb
mov
dec
sahf
cld
addr16
dec
jbe
mov
jo
mov
mov
sbb
jg
in
inc
lock
std
dec
imul
jnp
ret
aad
fimuls
dec
pop
push
mov
sub
pusha
movsb
fcmovnbe
or
or
or
and
cmp
sbb
cmp
sbb
shlb
xlat
lods
rcrb
jns
mov
loope
aaa
mov
cmp
mov
jle
dec
dec
mov
int
inc
add
insb
int
add
xchg
orb
adc
int3
cli
pop
pop
adc
idiv
push
test
fwait
pop
cmp
lods
in
repnz
inc
or
out
inc
mov
adc
or
aas
xchg
mov
and
sbb
mov
push
movsb
mov
ljmp
push
xchg
int
mov
idiv
cmp
loop
or
lods
popf
nop
aad
mov
out
jne
xchg
fwait
inc
mov
lea
pop
xchg
pop
sub
jmp
sahf
insb
int
lea
push
mov
aam
rol
push
fcoms
lods
dec
sahf
dec
int
in
aam
flds
xor
insl
lock
pop
cmp
imul
mov
jnp
mov
pop
xchg
xor
icebp
jns
bound
sbb
fisttpll
dec
lock
int3
das
inc
cmp
cmpl
loope
fwait
sbb
mov
mov
fidivrl
xchg
push
imul
jnp
je
push
cmp
dec
mov
jno
movsl
or
or
push
and
jge
insb
dec
lods
adc
mov
fnstsw
dec
test
push
sbb
idiv
icebp
or
popa
std
lahf
lods
andl
mov
or
push
pop
xor
int3
dec
sub
cli
rcll
push
sub
mov
shr
ficoms
mov
enter
add
sub
or
sub
sahf
or
mov
push
fcmovnbe
cmp
stos
iret
aam
xchg
sub
into
pusha
lock
pusha
mov
std
xchg
inc
push
fisubrl
jbe
nop
fimuls
add
mov
add
dec
mov
scas
inc
pop
scas
xchg
ja
cmp
cmp
ljmp
push
lods
xchg
jmp
jo
sbb
loop
cmc
dec
scas
jb
fcomip
sahf
sub
pusha
xchg
std
sbb
adc
sub
mov
divl
pop
jo
mov
in
or
xchg
cltd
xor
mov
stc
cmpsl
dec
nop
push
mov
lcall
out
je
or
inc
pushf
lahf
jle
nop
dec
and
cmpsl
mov
or
in
xor
fldl
int3
jge
push
nop
sub
inc
xlat
inc
xchg
add
pop
xchg
test
push
xchg
fmull
and
xor
addl
xlat
mov
stos
jbe
sbb
lret
jge
insl
adc
rol
dec
mov
mov
cltd
push
imul
sti
xchg
add
mov
inc
sti
xchg
xor
shlb
sub
cli
popa
orl
mov
sub
dec
dec
jmp
or
mov
cwtl
out
arpl
gs
dec
cmp
addps
repnz
fsubrs
js
mov
push
dec
mov
push
push
push
adc
push
inc
xlat
fisubl
pop
roll
jp
and
sbb
gs
mov
xchg
inc
filds
dec
ds
lock
movsb
sub
in
jmp
popa
xor
jno
call
mov
jl
push
xchg
aas
out
inc
mov
dec
shrb
lods
mov
xor
movsb
xlat
sbb
push
dec
cmp
popa
mov
add
push
adc
ret
add
xchg
pop
or
movsb
or
fisttpl
jne
mov
and
mov
leave
ja
out
cmp
xchg
adc
mov
nop
xor
scas
aam
movsl
sub
fcomps
pop
xlat
movsl
add
xor
sbb
jmp
or
cmp
push
jle
notb
pop
loopne
cmpsl
pop
mov
mov
mov
std
testb
xchg
sub
push
das
xchg
mov
ret
ljmp
dec
popf
push
inc
in
sub
jae
ds
cvtpi2ps
push
mov
push
and
xchg
adc
mov
pop
add
dec
mov
adc
pop
rclb
sub
lret
xor
pop
xor
mov
add
inc
inc
lock
xor
mov
push
mov
push
add
pop
addr16
loop
pop
pop
mov
mov
in
fwait
addr16
xchg
inc
or
icebp
iret
rcr
pop
insl
pop
dec
sbb
push
add
outsl
cmp
mov
stc
and
mov
jo
pop
pop
rol
mov
push
push
pop
lahf
and
push
std
lret
mov
sub
cs
push
jbe
int
rorl
in
std
dec
stos
ja
adc
jecxz
adc
inc
jbe
push
dec
cmp
add
gs
cmpb
push
xchg
push
sbb
imull
xor
and
add
and
pop
test
jp
sub
insb
popf
fcompl
ss
insl
inc
pop
stc
mov
ss
scas
ja
add
adcl
inc
mov
push
mov
jbe
test
iret
sahf
dec
inc
mulb
insb
inc
mov
sarl
arpl
sahf
iret
xchg
push
dec
jae
and
xchg
cli
mov
data16
loope
push
repz
in
mov
inc
addb
pop
sbb
cmp
loop
xor
stos
sarb
inc
push
dec
push
cwtl
inc
iret
int3
mov
fistpl
ss
aam
dec
and
add
mov
shl
pop
mov
cmp
scas
pusha
sub
out
mov
mov
mov
orb
push
mov
shlb
jne
inc
pop
add
jns
cli
pop
js
sbb
sub
dec
repnz
xchg
insl
pusha
jmp
cmc
push
sub
cmp
mov
fdecstp
sub
add
mov
nop
in
pop
mov
and
dec
xlat
inc
xor
push
jp
sbb
sub
dec
clc
lods
lds
imul
cli
add
xchg
ret
loopne
lods
test
je
incb
pusha
and
sbb
mov
mov
sub
cltd
push
lret
mov
adc
loopne
add
inc
ret
jl
hlt
mov
or
sbb
pop
or
jae
sbb
mov
stc
dec
bound
out
inc
lea
mov
add
aad
pop
jmp
and
dec
stos
ss
sub
icebp
dec
enter
or
mov
aaa
push
xacquire
sub
jbe
ja
sub
push
adc
mov
jecxz
mov
push
in
loopne
ret
jp
lret
ja
aas
xchg
test
mov
pusha
cmp
fistps
jge
les
sbbb
inc
adc
cs
je
lods
loop
icebp
movsl
push
jge
nop
aaa
inc
and
jecxz
pop
adc
xchg
xor
repz
cmp
mov
or
stos
mov
lret
loop
shlb
aaa
lods
in
leave
out
sbb
sub
adc
cs
xchg
cmc
lea
pusha
cmpl
bound
cli
jb
adc
lods
cmp
test
pop
push
sbb
xor
pop
sub
js
xlat
clc
mov
data16
out
fsubrs
push
mov
jle
fdivrl
out
in
mov
or
pop
dec
jne
outsl
stos
mov
movl
in
sbb
lret
pop
mov
jecxz
fnstenv
mov
inc
hlt
push
enter
pop
icebp
jmp
aaa
jg
stc
push
sub
cmp
fnstenv
xchg
pop
push
ret
data16
mov
cltd
insl
jns
int
out
inc
adc
push
iret
mov
fcmovnb
loopne
push
cmc
addr16
push
push
pop
call
sbb
xchg
iret
mov
sub
rorl
xchg
sub
cmp
inc
test
push
lds
push
push
addr16
lds
xchg
fdivr
in
pop
jge
sub
cmp
jmp
adc
sbb
pusha
cld
dec
or
gs
test
rcrb
enter
fldt
mov
sarb
jl
outsl
enter
and
fwait
sub
into
mov
mov
lret
xchg
cs
mov
lock
pop
out
scas
dec
fldcw
aas
out
and
rorw
out
gs
inc
sbb
test
fidivl
std
dec
pop
aad
ja
jecxz
stos
inc
push
in
popa
mov
jl
ss
popa
mov
ss
pop
sahf
insb
pop
mov
cld
sub
popa
pop
sub
jg
fbld
add
rcl
xor
cltd
add
ds
dec
xor
cwtl
sub
call
jmp
insl
les
cmp
enter
test
stos
fldcw
adc
pop
ljmp
push
icebp
shlb
push
xor
push
adc
ja
shlb
inc
loop
jle
dec
aaa
mov
ret
sub
daa
in
add
inc
or
mov
jnp
pop
jb
popa
pushf
fistps
jae
in
setp
xchg
inc
xchg
lock
mov
mov
stc
push
divl
xorb
repnz
inc
cs
jge
mov
mov
and
and
andl
rorb
sbb
push
jecxz
adc
in
add
sub
mov
out
sbb
lret
loopne
inc
ret
testl
jmp
cmp
popa
or
mov
cmc
and
mov
and
and
or
mov
inc
mov
push
out
and
je
movsb
mov
mov
cltd
arpl
dec
nopl
in
out
xor
out
push
cmp
mul
sub
aas
repz
xor
xchg
subb
and
jns
add
pop
addr16
test
xchg
push
pop
pushf
sub
sub
mov
daa
test
mov
pop
jle
cmp
cltd
cmp
sar
loopne
jp
and
test
jae
mov
int
jno
pop
test
bnd
push
cli
clc
ret
xchg
dec
xchg
mov
sahf
fstpl
cmp
and
sbb
jmp
out
movsb
dec
addb
sub
in
mov
pop
loope
bound
lea
cmp
clc
mov
mov
adc
subb
test
mov
jbe
add
fildll
je
cs
xchg
daa
jmp
sbb
out
add
push
inc
push
mov
cmc
add
xor
insb
push
scas
cld
mov
jb
xorl
fisttpll
cltd
cs
ss
fsubl
mov
fimuls
dec
in
jecxz
or
movsl
fidivrl
lahf
jb
or
or
pop
xor
jp
roll
lret
mov
or
stc
adc
lahf
xchg
xabort
dec
in
fcoml
xor
cmp
imul
pop
clc
or
jle
stos
push
test
xor
dec
and
cmpsl
or
es
xor
sahf
daa
test
or
inc
mov
scas
aad
and
ja
sub
inc
push
xor
dec
jmp
orl
push
pop
pop
sbb
xor
inc
pusha
scas
push
pop
addr16
stc
sub
mov
mov
mov
les
dec
or
jno
adc
xchg
xchg
dec
xor
dec
xor
pop
dec
cltd
shll
aas
cmp
cmp
xor
dec
pop
je
fcomi
sar
fcmovb
sub
test
and
data16
jg
sbb
push
cmp
aam
xchg
aad
pop
mov
stos
sbb
lea
arpl
jns
pushf
roll
ret
jne
cwtl
test
dec
xchg
inc
daa
mov
pop
lods
pop
shl
movsl
aam
adc
adc
fstpl
xor
inc
shrl
fstpt
sbb
xor
cmp
xor
push
dec
sbb
add
outsl
loop
jp
mov
mov
cli
sbb
or
push
sub
gs
jnp
arpl
bound
fldl
push
add
into
pop
lods
xor
fs
sub
push
cmp
js
and
pop
xchg
sbb
add
enter
mov
pop
bound
pusha
mov
push
jnp
push
mov
sub
repnz
add
xor
push
xorb
jo
xlat
xchg
dec
jmp
in
add
sarb
or
testl
push
and
push
adc
std
sbb
rcrb
sub
xchg
push
push
push
jle
inc
in
jecxz
xor
xchg
mov
adc
adc
pop
sub
int
popa
xor
sahf
stos
in
mov
mov
mov
out
push
ljmp
xchg
test
xchg
push
pop
int3
fsubs
ret
fs
mov
ret
pop
mov
add
into
and
xor
xor
mov
out
iret
inc
stos
jge
dec
inc
sti
into
jecxz
push
call
pop
pop
pop
dec
test
pop
pop
faddl
leave
shr
ret
bound
mov
icebp
ljmp
cli
cmp
jns
cltd
lds
inc
mov
inc
hlt
in
ret
push
in
xlat
in
add
jno
outsl
xchg
scas
lds
mov
lods
imul
cmp
int3
dec
xchg
sarl
cltd
mov
inc
xor
pop
add
scas
adc
cltd
mulb
mov
iret
fwait
rcll
fld
in
inc
lea
inc
push
cmpsl
push
mov
mov
mov
call
ds
xor
stc
repnz
andl
scas
add
add
fmull
stc
clc
xabort
lret
in
movsl
loopne
dec
push
mov
loope
jecxz
scas
repz
fldl
iret
dec
sti
jb
scas
xor
movsl
xchg
ja
push
mov
out
jg
stc
xchg
xlat
mov
xchg
mov
or
imul
test
pop
xor
jo
mov
mov
or
push
iret
call
lea
sub
movsl
bound
int
jecxz
jbe
or
outsb
mov
push
int
addb
ljmp
sbb
dec
inc
xor
inc
ljmp
lret
out
data16
cli
in
inc
aas
dec
call
out
add
inc
lea
hlt
xchg
xlat
adc
daa
inc
icebp
mov
mov
mov
and
outsl
out
outsl
sbb
shrb
inc
and
gs
imul
mov
cmpsl
iret
cmp
dec
bound
inc
push
mov
push
dec
es
je
add
les
test
int3
and
add
sub
scas
fsubs
aas
cmp
dec
arpl
enter
test
inc
push
xchg
adc
sbb
into
jmp
insl
aam
pushf
xor
lock
jecxz
mov
cmp
rolb
jae
xchg
cmp
fldt
push
jns
insb
ds
lret
lods
scas
mov
sub
push
adc
out
mov
or
and
push
push
inc
push
cli
je
jle
jecxz
xchg
clc
jnp
dec
ds
xchg
adc
loop
popl
or
loope
jle
pop
scas
test
pusha
sub
imul
inc
cmp
popa
fsub
cmc
or
in
fsub
adc
pop
dec
mov
rcr
push
repnz
xor
loopne
push
aad
pop
cs
fstl
popf
or
push
mul
xlat
sti
insb
clc
xor
sbb
in
movsb
and
cmc
dec
lea
mov
mov
inc
adc
push
mov
cli
fnstenv
adc
mov
out
mov
push
sbb
inc
ds
stos
add
pop
stos
and
pusha
inc
clc
out
push
inc
xchg
addr16
stc
jno
ja
test
mov
nop
in
jns
in
loope
cltd
into
rcrb
push
add
mov
scas
stc
inc
dec
les
cmp
int3
leave
or
in
outsb
outsl
scas
push
jp
push
adc
sarl
mov
fwait
loop
cltd
mov
inc
addr16
fcomps
lret
mov
hlt
out
fdivl
fwait
and
rclb
cwtl
aas
mov
mov
jcxz
xchg
aaa
test
cmp
xor
sarl
out
adc
stc
int
mov
mov
push
and
movsl
lahf
push
inc
testl
movsl
add
add
pop
jle
popa
adcl
xor
and
arpl
das
aad
pop
jne
mov
mov
sub
js
mov
xor
cli
loopne
push
or
mov
ficoms
dec
jbe
das
in
dec
es
outsl
adc
fs
xlat
jg
inc
xchg
mov
popf
sti
push
dec
stos
sub
sbb
sti
or
out
popf
inc
lret
dec
or
jl
aad
loopne
jle
add
xchg
sahf
int3
mov
in
cmp
xor
pop
out
xor
mov
inc
pop
xor
sub
fcompl
mov
xor
cwtl
test
jno
lds
dec
pop
ja
les
sub
adc
or
lods
in
fmulp
dec
mov
mov
mov
or
sub
mov
cmp
repz
push
and
shlb
xor
add
sbb
inc
cs
jg
lods
mov
inc
pop
shl
xor
fdivrl
and
add
cmp
adc
je
cmp
fstps
mov
addl
mov
out
fildl
imul
das
or
mov
mov
adc
push
cmp
mov
sub
jl
xor
scas
mov
xor
xor
xlat
and
leave
repnz
in
arpl
outsb
or
jae
adc
mov
fidivrs
loopne
sub
push
outsl
es
xor
xor
fimull
nop
xor
push
fisttps
aaa
dec
test
gs
rcrl
add
mov
cmpsb
pop
push
cmp
dec
mov
mov
pushf
inc
fnstenv
xor
into
mov
jo
pop
sub
nop
cwtl
xor
notb
test
fldenv
fs
fildl
adc
std
xchg
or
fs
jns
testb
cmpsb
xor
jecxz
imul
adc
je
inc
cli
jnp
xchg
jge
cltd
mov
ljmp
pop
in
jno
pop
xchg
inc
fmuls
mov
fsubrs
sarb
nop
push
xchg
adc
lods
adc
push
and
mov
push
inc
and
sarb
jnp
test
inc
call
sbb
and
sti
mov
sbb
xorb
sub
rcll
pop
push
mov
and
or
sbb
popf
or
cmp
mov
dec
xor
mulb
pop
dec
cmpb
add
push
mov
mov
pop
xor
xchg
mov
add
shrl
cld
pushf
or
ja
popf
adc
and
jge
cmp
enter
or
loop
aad
mov
mov
fidivs
cmpsb
dec
mov
outsl
adc
insl
xchg
xor
mov
in
insl
xor
stos
fdivr
ljmp
xchg
sbb
jg
cmpb
cmp
pop
popa
mov
andl
sbbl
or
inc
push
fistpll
xchg
mov
in
loopne
insb
clc
fldenv
adc
cwtl
mov
test
cmp
add
repnz
lods
es
fs
in
inc
or
into
or
xlat
cli
jp
jle
fisttps
fstpl
out
lret
push
fwait
push
pop
mov
xor
sahf
sbb
or
xor
addr16
stos
ljmp
sub
fnstsw
ret
fcoms
xor
jnp
xor
push
outsl
adc
cwtl
cmp
cmp
jmp
push
int
mov
call
out
and
out
les
test
inc
push
mov
adc
insb
pop
fadd
sbb
leave
into
inc
pop
xchg
push
fdivrl
test
and
pop
decb
aaa
arpl
inc
hlt
sub
nop
or
cltd
inc
pop
addb
adc
lods
xchg
rorb
jecxz
push
push
mov
mov
or
push
pop
mov
push
repnz
xchg
mov
xor
push
or
mov
sbb
inc
or
fwait
sbb
gs
xchg
cmp
mov
push
jge
inc
test
cmp
push
xor
mov
mov
rolb
and
les
pop
cmp
jo
adc
and
mov
in
mov
add
or
enter
push
leave
pop
test
inc
adc
jmp
iret
dec
sub
movsb
lods
jno
mov
dec
lahf
stos
lret
testb
insl
pop
pop
fwait
cltd
insb
and
inc
mov
stos
loop
stc
mov
jge
and
pushf
in
push
push
push
mov
jle
sbb
and
or
add
adc
dec
sub
mov
orb
leave
enter
lods
mov
mov
pop
pop
dec
adc
mov
adc
mov
popf
aaa
xor
repnz
fdivs
mov
sub
cmp
fdivrp
lds
jne
je
xchg
mov
mov
mov
and
mov
mov
ret
pop
fisubrl
add
and
and
mov
data16
add
xor
pushl
mov
les
or
leave
rorb
jmp
mov
outsl
test
stc
ss
push
aas
cmp
dec
xchg
push
idivb
cwtl
dec
add
mov
jl
in
add
inc
or
or
data16
pop
fwait
push
cmpsl
jmp
pushf
adc
xchg
add
rorl
inc
dec
lret
push
cmovs
mov
mov
sub
xor
cs
ret
repz
int3
mov
in
jbe
inc
xchg
stos
or
nop
cmp
sarb
scas
pop
leave
push
divb
pusha
subb
xor
jno
lfs
ret
jge
xor
test
push
pushf
and
shlb
mov
out
movsb
in
sbb
xor
in
add
push
les
mov
mov
fucom
cmp
jg
mov
cmp
or
xor
cld
leave
push
xor
jnp
dec
test
mov
adc
divl
sbb
lret
cmp
aad
outsb
adc
pop
aam
mov
test
mov
lea
pop
jbe
pop
xor
cli
ret
mov
das
aas
inc
shll
jns
shrl
xchg
packuswb
mov
dec
mov
dec
fimuls
mov
sub
stc
xor
les
or
gs
fisttps
loopne
daa
dec
lods
inc
lods
mov
mov
or
jb
cmp
sahf
fs
test
insl
mov
add
inc
ret
rcrl
mov
or
xor
cmp
mov
mov
mov
aam
inc
test
out
cmp
in
adc
cld
mov
pop
jne
data16
popf
js
mov
cmp
fidivrl
mov
xchg
push
jecxz
mov
scas
pop
and
cmp
fcom
std
push
xlat
pop
mov
out
jns
ja
cmp
ds
cmp
xor
loopne
imul
loope
xor
or
idivb
xor
xor
adc
mov
testb
xor
ret
jno
push
cltd
xor
push
mov
cld
fidivrl
push
ret
mov
adc
or
jno
adc
test
adc
push
ret
and
jp
pop
xchg
lock
or
xor
xchg
ror
das
frstor
scas
mov
jle
jo
sbb
lcall
cld
mov
out
ljmp
lret
cwtl
lods
movb
hlt
add
pop
dec
scas
pop
sbb
jb
and
mov
out
test
rcl
cli
adc
filds
add
lahf
imul
cltd
es
sahf
inc
jle
xor
ficoms
ror
shll
add
loopne
das
fdivr
ss
cltd
mov
add
cmpb
pop
dec
cmp
jns
repz
in
inc
dec
mov
xchg
dec
jmp
mov
nop
dec
lahf
push
fdivrs
mov
add
pop
xchg
test
js
mov
mov
push
testl
fsincos
pop
cmp
cmp
jnp
fwait
push
push
pop
jl
out
shlb
sbb
fs
mov
jnp
ljmp
cli
mov
das
add
jae
ss
push
inc
fisttps
ror
mov
dec
jb
mov
fwait
add
fdivl
andl
daa
aaa
push
or
adc
xor
inc
mov
arpl
scas
jp
in
and
pop
lea
divb
inc
jbe
test
or
fwait
or
jns
xor
mov
call
push
inc
aad
xchg
sti
es
mov
adc
lahf
sub
movsl
cmpsl
ja
jge
in
lods
rolb
shl
lods
push
inc
mov
jg
mov
into
pusha
mov
inc
xchg
pushf
addr16
in
in
shr
xchg
jo
int
inc
stc
mov
test
inc
mov
jne
push
inc
lods
inc
pop
je
rolb
adc
or
pop
stos
rcl
int
push
das
dec
mov
fxch
cmpl
or
cmpsl
sbb
push
inc
sub
mov
jae
call
push
aam
or
popa
les
fwait
cli
fwait
adc
movsl
pop
push
ljmp
ja
lea
xchg
and
add
adc
arpl
lock
xor
xchg
stc
dec
mov
into
enter
mov
lds
je
cmp
or
sub
rcrb
cwtl
inc
xchg
push
js
loop
into
pop
sbb
push
inc
fsts
or
mov
shrl
loop
mov
and
ds
rorb
or
jmp
push
lock
adc
test
lock
inc
leave
push
rcll
int
xor
andl
enter
lods
orb
fadds
add
fsub
ret
and
push
mov
sahf
leave
pop
ficoms
sarb
mov
das
loope
jnp
inc
in
sbb
or
xchg
in
lret
outsl
int
and
out
test
cmp
lahf
push
orb
push
xchg
jnp
sub
dec
rcr
jmp
outsl
push
xlat
pushf
mov
sbb
mov
loop
movsb
dec
orb
cmp
push
cmp
fiadds
loopne
push
fiadds
lahf
inc
pop
jecxz
pop
add
adc
call
inc
popa
fsubrs
inc
dec
mov
daa
xlat
pushf
inc
data16
add
fdivrs
test
adc
fimull
loop
add
mov
jns
pop
outsl
cld
add
fidivl
mov
movsb
push
test
sub
int
adc
test
inc
lcall
mov
mov
mov
mov
enter
sub
push
pop
bound
fmuls
mov
sahf
int
jno
push
outsb
data16
xor
lds
js
shll
sub
sti
scas
dec
cmp
arpl
sub
outsb
push
pop
mov
and
dec
pop
pop
je
ret
fisttpll
push
jo
jbe
dec
jmp
pop
and
push
loope
nop
je
out
std
imul
les
or
mov
jnp
add
lcall
pop
orl
mov
add
test
mov
ficomps
add
daa
cmp
pop
fwait
jmp
insb
jns
out
pop
in
mov
rorl
xor
shrl
mov
psubusb
sbb
push
jecxz
scas
enter
inc
add
mov
pop
lcall
ret
and
adc
stos
sahf
in
cld
pop
jns
inc
scas
inc
sub
stos
fildl
mov
sahf
stc
cmc
inc
or
es
mov
mov
ret
or
andl
mov
cmpsb
lods
xor
jg
fildl
in
outsl
sub
fstps
mov
sub
dec
mov
es
push
dec
and
lret
test
pop
out
cmp
inc
gs
jmp
pop
rolb
dec
mov
sub
loope
gs
stos
inc
mov
pop
test
pop
mov
loopne
xchg
mov
sahf
sahf
sbb
add
movsb
xchg
hlt
mov
xchg
inc
fistpll
cmp
arpl
insl
push
popl
rorb
push
ja
jle
out
fcoms
jnp
adc
add
xor
xor
add
pusha
hlt
jne
push
shrl
mov
inc
push
sti
cld
pop
mov
cmpsl
or
movsl
sub
dec
jmp
fadd
pusha
orb
mov
or
imul
jge
mov
pop
int
in
lods
mov
jne
lea
mov
xor
lcall
fxch
jb
push
xchg
or
mov
xorb
mov
out
test
xor
or
push
fwait
jle
jle
push
enter
mov
fwait
dec
nop
inc
mov
pusha
sub
adc
stos
cs
inc
cltd
addr16
push
xor
iret
les
cltd
cmp
dec
insl
xor
into
cltd
or
ret
mov
xor
mov
out
stos
jge
sbb
lods
loop
pushf
in
jo
popf
test
cmp
repnz
push
cltd
iret
jl
push
add
sbb
jle
xchg
loope
push
das
or
xchg
lahf
push
dec
clc
sbb
imul
cmc
fcoms
lret
inc
mov
sarb
mov
lods
cmp
cmp
lods
jno
test
push
inc
or
and
js
in
sti
in
jmp
add
dec
cmp
add
mov
jnp
xchg
jg
xchg
xchg
adc
loopne
jb
cmc
fnstcw
dec
mov
aad
mov
repnz
cmp
xor
fnstenv
lret
rorb
xor
lahf
push
aam
mov
dec
lahf
popa
test
add
add
dec
arpl
fidivs
and
hlt
stos
pop
shlb
lahf
fnsave
push
movsl
mov
xchg
inc
in
sbb
jo
ds
ja
sbb
in
push
mov
loope
inc
lret
loop
lret
xchg
call
loope
call
fisttpl
sub
mov
lods
rcrb
loope
dec
fsubrs
popf
push
mov
cmp
ret
jae
ljmp
push
push
xchg
out
jns
and
shrb
push
lcall
push
div
cmpb
insl
adc
or
lds
clc
push
xor
inc
sub
addr16
cs
cli
cmp
mov
pop
hlt
xor
into
test
fcomi
sub
dec
sbb
push
adc
hlt
cmp
arpl
push
ret
and
sbb
push
cmp
cmp
movsb
pusha
fdivrs
rol
xor
shll
hlt
xchg
cmp
xor
sub
push
mov
jae
lods
mov
inc
mov
fcmove
cmpb
push
or
fdivl
xor
aam
pop
adc
push
pop
jne
push
stos
inc
in
xchg
xor
mov
mov
popa
mov
je
inc
icebp
xchg
ja
aas
sbb
dec
mov
push
jb
xor
icebp
lods
push
sbb
adc
mov
mov
dec
scas
mov
addr16
or
popf
cmp
testl
out
lods
pop
xchg
andb
pop
shll
mov
sub
loop
sub
jg
pop
aaa
jbe
lret
mov
xor
cmp
jns
dec
imul
mov
mov
sub
inc
pop
or
shrl
mov
lods
xlat
inc
inc
lock
aad
adc
pop
idivl
mov
cld
popa
out
xor
pop
and
or
or
pop
aaa
mov
xlat
lret
lea
test
fiadds
lcall
dec
pushf
and
loop
or
and
sub
sbb
inc
push
leave
or
cmpsl
shlb
xor
push
mov
mov
push
xor
adc
repnz
outsl
mov
pop
neg
mov
in
pop
sti
jne
decb
xchg
mov
pop
filds
mov
dec
dec
dec
mov
repz
cmpsl
sbbb
push
les
popa
mov
out
jne
jg
sbb
mov
aam
cmp
leave
add
sbb
into
push
pop
cmp
mov
cmp
jmp
faddl
data16
arpl
fs
cld
stc
add
inc
out
outsl
pop
scas
popa
cmp
pop
jmp
and
fstps
cmp
and
xor
add
sub
dec
icebp
dec
icebp
or
or
out
xchg
jge
inc
add
das
rorl
mov
aad
das
jno
cmp
pop
leave
sub
push
mov
cmp
pop
testl
sub
aad
sbb
negl
dec
and
mov
aas
mov
addr16
mov
leave
in
mov
roll
pop
pop
fildl
lds
cmp
jb
mov
cli
mov
adc
add
sub
xchg
add
movsb
loop
pop
inc
push
aam
scas
fsubrs
sbb
xchg
xchg
imul
adc
push
inc
ja
subl
or
fucomip
jnp
shrl
cs
shrb
cwtl
testb
out
add
fsts
pusha
push
int
mov
mov
or
aad
movsl
cmp
pushf
xchg
xchg
je
xor
scas
dec
push
rclb
xorl
push
in
dec
std
xchg
lret
pushf
sbb
idiv
cmp
jg
xchg
das
jl
sbb
ret
mov
mov
or
pop
jae
jmp
aas
sti
push
aad
in
lods
imul
lds
hlt
fcoms
jecxz
dec
jle
push
and
lcall
insl
stos
mov
sub
or
cmp
mull
sub
pop
int3
add
les
push
pop
es
call
inc
pop
cmp
cwtl
out
test
aas
push
bound
mov
addr16
ss
sub
insl
cmp
dec
shlb
dec
jnp
out
jl
and
jbe
into
mov
sbb
ja
sub
into
int3
sahf
in
mov
cld
dec
push
jae
and
pop
lock
arpl
mov
or
in
xchg
sbbl
or
stos
inc
mov
inc
or
outsb
mov
and
call
in
push
or
push
and
dec
enter
popf
rcrb
cmp
inc
adc
stos
divl
lcall
sarb
ljmp
mov
add
xchg
in
bound
push
pushl
sar
inc
mov
je
mov
dec
xor
pop
dec
pop
jae
movsl
es
inc
cltd
out
mov
enter
fisttpll
scas
pop
push
xchg
cmpsl
dec
pop
adc
cmp
or
jmp
pop
xor
dec
mov
out
lea
test
push
adc
cmovg
adc
lock
loopne
sub
mov
inc
sub
dec
orl
xor
nop
pop
jge
je
pop
jo
bound
jne
daa
mov
push
pop
fimuls
sub
fs
lahf
das
testl
sbb
push
push
jb
movsl
pop
dec
xlat
push
dec
test
sarb
cltd
jo
dec
js
es
enter
xlat
jno
pushf
or
pop
push
pop
sti
insb
mov
shlb
out
and
jg
or
pop
pop
xor
pop
ficompl
push
xor
mov
clc
std
ret
dec
xchg
cmp
into
cmp
scas
mov
pop
je
les
push
int
push
or
pop
adc
cmpsl
sub
inc
test
stos
ret
or
or
loop
pop
lret
in
notb
xor
xor
mov
gs
mov
push
jmp
xor
lret
test
xor
dec
das
arpl
insb
ret
lcall
fcmovnbe
cld
sbb
subl
xchg
push
push
xor
mov
and
xor
mov
add
cmp
mov
push
adc
mov
cmp
add
jne
inc
jno
popa
xor
nop
pop
xchg
mov
addr16
mov
int
and
cmp
fadd
push
jo
ja
push
sti
push
add
in
outsl
ret
mov
sbb
pop
addr16
or
movsb
sub
pushf
xchg
jl
cmp
nop
out
cmc
inc
stos
push
popa
jb
mov
outsb
ljmp
jae
insl
mov
xor
stos
rcll
inc
mov
xchg
outsl
fs
sbb
std
xchg
pop
xor
stc
fcomi
push
jg
or
and
int
sub
push
push
out
jno
mov
fcomps
dec
daa
push
pop
outsl
mov
in
les
mov
mov
sub
push
pop
push
mov
xlat
daa
insl
xchg
fisttpl
rorl
pop
jno
inc
lods
pop
sahf
xchg
lcall
imul
into
sahf
fwait
pop
and
mov
ljmp
fs
jmp
push
sub
jne
push
cmp
xor
ss
mov
daa
insl
out
mov
mov
jmp
jp
jmp
ljmp
dec
cli
push
inc
mov
pop
sbb
jmp
push
cli
dec
pusha
lret
sub
in
icebp
out
fsts
mov
cmpsb
aam
or
shlb
push
add
out
xchg
arpl
cwtl
outsb
je
push
dec
jecxz
fdivrl
testb
frstor
fs
fimuls
pop
sbb
mov
movl
cs
adc
rcrl
xor
sbb
sub
adc
mov
testl
fistpl
imul
jns
mov
out
and
mov
jp
stos
clc
int
add
or
out
cld
xor
clc
arpl
out
push
mov
test
fcmovnb
or
andb
jae
arpl
aad
mov
rolb
sbb
frstor
subl
lahf
lock
in
xchg
jle
cmp
jmp
ficoml
lods
pushf
push
daa
xchg
lock
sub
loopne
ror
dec
out
push
insl
sbb
adcb
xor
push
addr16
cmp
lock
dec
jbe
mov
sti
les
outsb
mov
aad
pop
jecxz
test
mov
or
pusha
repz
shll
loope
ja
add
adc
add
nop
movswl
fs
and
sbb
dec
fstpt
jg
aad
es
divb
rolb
push
xorl
jl
fnstcw
ds
or
bound
clc
mov
add
push
dec
pop
sub
out
je
aam
xchg
jg
lret
lods
jle
gs
xchg
mov
mov
mov
faddl
out
adc
inc
ret
mov
in
or
mov
or
call
cmp
imul
mov
mov
test
pop
jb
mov
icebp
loop
push
sub
addr16
push
mov
and
mov
cmp
stos
popf
xchg
mov
cmpsb
add
mov
addr16
mov
cs
cmpsl
or
push
ss
call
bswap
push
pusha
xchg
and
mov
xor
dec
push
jbe
js
pop
sarl
xchg
and
pop
pushf
cmc
insl
jo
xlat
mov
call
shrl
out
xchg
sti
sti
xor
outsl
pop
lds
sub
pop
loop
scas
xlat
add
jb
js
and
scas
addr16
stc
je
mov
faddl
mov
lcall
lahf
mov
scas
jg
gs
or
sarl
jp
negl
sub
or
mov
and
lcall
lea
push
fidivrl
dec
pop
ds
sbbl
lods
sbb
jle
daa
xchg
insl
call
test
incb
inc
pop
lods
dec
jl
xchg
shrb
dec
in
mov
and
xchg
or
xor
inc
leave
adc
and
mov
adc
mov
loop
dec
popa
pop
cmc
pushf
jne
lahf
cmpsl
mov
cmp
movsl
out
popa
cmpsl
xchg
outsb
cmp
dec
mov
jl
pop
cmp
dec
dec
mov
mov
add
sarl
pushf
xchg
in
mov
sbb
lods
addr16
aad
jmp
rolb
sbb
ffreep
fcomps
stc
push
insl
jl
xchg
arpl
xor
lods
popa
fidivrl
or
fcmovu
ret
scas
push
pop
xchg
stos
xchg
mov
jle
ret
and
icebp
pop
pop
jns
imul
mov
lods
xchg
sbb
mov
sbb
lcall
cwtl
inc
loop
dec
pop
aas
jae
pop
jns
add
jbe
insb
scas
xlat
jg
stos
or
int3
out
push
xor
cmpb
mov
subl
loope
loop
rcl
mov
repz
inc
adc
sub
jno
add
iret
sti
scas
pop
pop
mov
push
fcmove
jb
or
in
xchg
mov
out
xchg
jno
out
and
lea
pop
ljmp
cmp
dec
fcmovne
dec
xchg
jo
fistpll
cmp
rcrb
in
pop
stc
aam
mov
aaa
jb
mov
pop
ret
inc
int3
jbe
repnz
cmp
popa
dec
adc
mov
fsubrs
sub
pop
dec
aas
in
pop
les
lret
jp
mov
addr16
repnz
add
stc
insb
adc
jle
dec
adc
fiaddl
clc
push
shlb
cmpsb
inc
dec
pop
rcrb
xchg
sub
in
pop
jmp
sub
and
mov
ds
mov
adc
ret
pushf
xchg
imul
fisttpll
mov
xorl
addl
mov
icebp
shlb
iret
xchg
icebp
test
xor
lods
and
jbe
in
mov
test
fdivrs
fadds
or
jns
int3
sahf
mov
jmp
jne
push
jmp
dec
js
push
mov
sub
stc
jg
lea
add
sub
sbb
jne
test
negl
push
pop
dec
xchg
pop
push
adc
ljmp
mov
fdiv
or
loop
add
jnp
cmpsl
repz
scas
je
lods
imulb
cltd
sbb
ja
or
adc
mov
and
dec
xor
push
or
sti
push
mov
xchg
aam
jmp
dec
out
push
pusha
sub
and
cmp
daa
test
or
push
cltd
ret
stc
jno
sti
sbb
add
scas
pop
movsl
dec
xchg
ret
xchg
loopne
push
pop
or
jl
js
inc
mov
push
call
test
jnp
ret
cmp
xchg
push
mov
adc
mov
or
sbb
cmp
mov
xchg
rcll
xlat
cmp
stos
adc
push
cmp
cmp
and
es
data16
jmp
cmp
push
add
fwait
add
shrb
shrl
sti
sarl
fs
std
dec
mov
mov
dec
cltd
sar
mov
jge
in
xchg
ret
rep
ret
add
orl
mov
cmpsb
or
xor
jle
and
xchg
xor
cmp
jge
mov
inc
into
jmp
cmpsl
dec
mov
out
es
inc
ret
sub
mov
lods
dec
sbb
push
add
pop
mov
jno
enter
loop
or
sub
inc
cmp
fmuls
jnp
inc
in
scas
add
lea
cmp
loope
andl
pop
in
and
mov
push
jae
inc
lret
xor
mov
mov
or
pop
mov
dec
std
hlt
xchg
mov
in
pop
pusha
add
jne
mov
out
andb
sbbl
xchg
pusha
inc
jmp
ss
daa
push
push
ljmp
or
sub
pushf
sub
inc
in
xchg
xbegin
int
dec
in
out
adc
push
sub
mov
xor
or
push
aam
cmp
inc
stos
icebp
adc
pop
imul
into
fisttpll
pop
sub
mov
lret
addr16
sbb
push
lahf
pop
movsb
pop
cltd
cli
add
rcl
add
pusha
adc
dec
rcl
mov
movsl
movsb
push
jl
pushf
ljmp
fistpll
add
cmpsb
dec
sbb
stos
jns
cli
jne
mov
or
fsubrl
xchg
push
call
loop
push
mov
and
and
in
push
and
test
push
xlat
jecxz
inc
fidivs
shrb
add
pop
into
lea
xchg
lret
jecxz
lahf
nop
clc
cmp
icebp
decl
and
inc
rcrb
fstps
and
cmp
movsb
les
sbb
fisttpl
lock
sbb
js
cmp
push
mov
and
and
dec
out
mov
xchg
sub
loopne
test
notb
bound
xchg
dec
xchg
test
add
sbb
add
mov
popa
pushl
stos
mov
push
mov
dec
lahf
xor
loope
in
call
pusha
cmp
lahf
ret
idivl
adc
je
add
test
aam
jbe
nop
rol
cmp
ret
and
or
adc
or
repz
repnz
fnsave
cli
sahf
inc
repz
pop
jb
xchg
in
adc
mov
xor
sbb
lret
jecxz
mov
insl
sti
push
les
jno
pop
add
sub
mov
shl
lcall
jecxz
add
outsb
ljmp
into
movsb
ds
pusha
sbb
jns
or
or
sub
int
fsubrs
cmp
xchg
inc
mov
popa
pop
sub
mov
dec
andl
call
xlat
mov
jb
test
imul
fs
push
jmp
shll
push
loopne
pop
jnp
int
out
iret
dec
jmp
leave
adc
into
inc
xchg
imul
test
cmp
out
inc
shrb
outsb
xchg
mov
insb
enter
icebp
and
out
mov
sahf
movsb
fwait
jecxz
push
repz
je
frstor
ljmp
sub
ljmp
mov
leave
xchg
sub
ror
push
mov
test
add
push
mov
mov
push
pushf
sub
in
jp
dec
sub
pop
jl
sub
in
test
or
sbb
je
movsl
cmpsl
lret
sbb
dec
cmp
es
je
dec
push
adc
out
fcmovnb
fsubrl
jb
jp
sbb
adc
sub
shlb
lods
addb
popf
cmp
cmc
and
add
push
xchg
jno
push
push
aad
or
jp
push
pop
je
or
pop
loopne
insl
cld
mov
pop
in
push
add
outsl
pop
inc
jmp
or
dec
pop
daa
jg
aaa
shrb
xor
xchg
std
jle
dec
shrb
test
mov
push
in
pop
dec
push
cwtl
arpl
inc
mov
jle
dec
test
fstl
shrl
or
aas
mov
test
add
or
fmull
jns
dec
lret
clc
sub
nop
insb
dec
fmull
das
mov
mov
loopne
add
sahf
dec
lea
out
and
and
mov
jp
movsb
mov
sbb
inc
adc
stos
or
lea
enter
mov
popl
and
cld
and
push
aas
mov
add
pop
js
mov
mov
cmc
mov
pop
push
dec
fsub
call
xor
xchg
in
mov
jne
xchg
and
mov
cltd
imul
clc
insl
pushf
or
jb
into
jns
psubb
fwait
out
inc
add
jmp
pop
pop
mov
xor
add
or
cmc
icebp
in
and
js
add
mov
dec
add
xor
cmp
and
bound
and
jmp
or
fsubs
xchg
shl
ret
cli
or
mov
inc
lahf
popa
adc
mov
mov
nop
adc
push
iret
int
call
fs
bound
int
ss
test
lahf
pushf
mov
sub
jecxz
and
sub
adc
cld
iret
add
mov
mov
dec
outsl
dec
mov
sub
jl
pop
add
push
sbb
jne
jns
cmp
push
add
loope
sub
inc
mov
xchg
int3
mov
xlat
movsl
adc
shrl
aas
les
push
andl
ret
jl
xchg
lret
add
lcall
push
loop
or
sbb
test
pop
xor
push
and
xchg
push
cltd
push
into
icebp
inc
cs
xor
test
and
cmc
fadds
lahf
add
add
mov
test
mov
and
insb
aaa
in
mov
dec
sti
mov
push
test
ret
or
or
clc
inc
sbb
sub
mov
sub
xchg
mov
fmull
js
inc
aas
cld
sbb
cmp
aad
cld
into
ret
inc
rcll
loop
xchg
xorl
data16
out
insb
fcompl
push
push
jp
sti
loopne
call
out
mov
lds
cmpsl
add
mov
push
fistps
lret
outsl
push
ss
dec
dec
mov
pushf
pusha
flds
imul
inc
not
in
out
sub
or
pop
push
xor
mov
inc
mov
jl
popf
xchg
cmp
lahf
mov
fmul
mov
jge
or
negb
std
cmp
out
cmp
mov
sti
scas
popf
fnstenv
loop
add
xor
jmp
cmpsl
test
xchg
inc
test
push
pop
rcl
mov
addb
out
add
or
cmp
cltd
dec
jnp
adc
xchg
hlt
pop
mov
adc
xor
inc
pop
cmp
mov
dec
sbb
cwtl
xor
bound
gs
loop
xchg
dec
outsl
and
ljmp
inc
cmc
gs
faddl
bound
xor
cltd
mov
xchg
adc
test
popa
int
pushf
adc
fisubrs
jno
daa
lods
sub
in
mov
call
out
sbb
mov
sarl
push
icebp
xor
aad
push
bound
or
cmp
gs
rorb
data16
inc
adc
mov
mov
test
xor
mov
aam
jle
add
mov
adc
sti
sahf
inc
repnz
sub
sub
test
xor
mov
xor
push
xor
stos
popf
lock
stos
out
pop
dec
jns
or
std
dec
xchg
jnp
cmp
out
lahf
in
cmp
int3
cmp
pop
gs
or
int
mov
dec
lret
lock
jg
test
mov
mov
adc
inc
popa
out
xor
clc
adc
aad
outsb
test
dec
imul
fiaddl
lret
lods
fsubrl
adc
mov
cli
popf
pushf
in
clc
testl
daa
pop
addr16
lds
mov
sub
inc
pop
iret
shll
pop
ret
ss
inc
nop
ret
inc
xlat
sub
push
ret
or
cmp
push
adc
push
xorl
push
rclb
jno
pop
imul
push
pop
es
xlat
fcompl
sub
sub
push
cmpb
out
lds
jl
int
data16
push
outsb
xchg
mov
mov
addb
mov
icebp
lods
pop
push
ficoms
inc
pop
test
mov
call
add
fists
jns
hlt
std
movsb
bound
mov
mov
mov
pop
xcrypt-ecb
cmpsl
dec
int
cmp
xchg
insl
push
xor
push
mov
shlb
lcall
dec
dec
js
dec
cmpsb
scas
lret
ja
popa
xchg
mov
icebp
push
xchg
mov
sbb
fwait
and
jmp
xor
pop
jo
xchg
gs
add
sub
outsb
xchg
fsub
cli
and
iret
or
js
cmpsb
lret
dec
dec
push
jg
pop
or
jne
jp
and
cltd
jno
cwtl
je
cs
sbb
xchg
pop
rcll
test
jge
sub
sbb
sbb
nop
lret
mov
push
call
mov
lahf
push
lret
pop
shr
iret
mov
jo
insb
pop
shrb
pop
push
in
fwait
and
adc
jg
mov
mov
aad
mov
iret
test
pop
adc
repz
and
aaa
cwtl
sti
fcomps
cltd
enter
cmp
clc
int
iret
mov
push
dec
nop
adc
hlt
jge
add
jns
lcall
jle
dec
loope
dec
cmpb
and
xchg
test
pop
mov
mov
fstpl
daa
rcr
push
or
or
fcmovnbe
cld
mov
fadds
adc
dec
bound
insl
xchg
add
iret
divb
daa
fsub
out
sbb
clc
jp
push
xchg
ret
lahf
rdpmc
sbb
or
js
cs
sub
cmp
lea
leave
notb
mov
aad
mov
aaa
or
xchg
shl
or
sahf
fcomp
cmpsb
push
int3
repz
in
adc
stos
in
sub
out
daa
push
stos
xchg
mov
jle
mov
pop
push
pushf
pop
stc
inc
dec
pop
testb
jmp
out
cmpsl
mov
dec
dec
icebp
bound
scas
cs
lock
pop
push
adc
pop
xchg
xor
sub
fistl
push
mov
rcrl
mov
jl
push
add
and
push
arpl
mov
jp
out
jb
cmp
cmpsb
jbe
imul
dec
scas
aas
aaa
test
adc
dec
sbb
cmc
fisubl
cmp
mov
jns
push
mov
xchg
mov
xor
int
mov
sub
arpl
repnz
mov
xchg
divl
push
mov
inc
jo
push
add
les
sub
cmpsb
add
sbb
test
jp
out
and
rcrl
jge
lds
pushf
js
jno
or
sub
in
stc
mov
add
aad
push
xor
mov
leave
or
cmp
mov
fldcw
adc
and
je
jno
xchg
enter
mov
mov
sub
icebp
stc
or
pop
call
jge
xor
xchg
push
popf
push
loope
cmp
push
js
inc
push
inc
das
pop
out
push
adc
aam
push
xchg
js
xlat
hlt
lods
cmp
lret
jmp
push
out
pop
outsb
jo
imul
sub
or
out
mov
sbb
sub
ss
inc
mov
and
mov
popf
mov
ss
shrl
outsb
and
inc
push
aas
jae
push
cmpsb
mov
push
stos
sbb
ss
test
iret
mov
rorl
idiv
das
xor
loope
je
das
in
ret
inc
pop
lcall
jb
mov
push
and
jb
or
sbb
mov
xor
loop
sbb
hlt
mov
es
sbb
sbb
test
add
and
insl
pop
arpl
and
pop
imul
pop
iret
push
fsubrs
orb
clc
js
add
xorl
mov
or
push
push
mov
push
addr16
mov
cmp
sahf
mov
ret
aad
mov
add
adc
xchg
shlb
das
add
imul
cld
cwtl
shlb
sbb
sbb
daa
xchg
pop
and
xchg
cmpsb
mov
push
aas
scas
mov
pop
pop
repnz
adc
hlt
mov
arpl
cmpsb
jle
inc
dec
idivl
pop
add
mov
repnz
int
fdivl
cmp
loop
pop
sti
xor
push
rorb
cmp
push
in
xchg
in
fcoms
cmp
cmpsb
movsl
test
pop
pop
mov
dec
addr16
inc
loopne
cmp
loop
jns
scas
pop
enter
cmp
std
jge
mov
sub
ljmp
mov
sub
xchg
sub
mov
mov
dec
aam
aad
leave
xor
adc
jge
lods
ja
sbb
insb
mov
jge
sbb
xor
repnz
cmp
lods
xchg
repnz
insb
push
adc
dec
fmull
sahf
pop
jb
xorb
sub
cmp
add
sbb
xor
adc
pop
push
add
stc
xor
aam
xchg
jg
cmp
cmc
cs
add
cli
add
mov
lcall
out
pop
push
jecxz
add
dec
or
outsl
mov
rcr
int
clc
fmul
sbb
sbb
orl
mov
ja
fisttps
movsl
sub
movsb
in
mov
jg
push
xor
pop
pop
adc
mov
or
into
jb
dec
enter
lahf
add
stc
sbbb
and
or
xchg
movsb
and
test
shlb
mov
push
push
lcall
in
je
cmp
xchg
or
xor
xchg
cwtl
out
push
aaa
jecxz
in
pmaxsw
test
mov
mov
gs
add
mov
data16
jo
rcrb
pop
sbb
push
mov
cmp
pop
mov
into
cli
xor
aam
mov
ror
mov
cld
and
and
or
dec
add
mov
imul
in
outsl
pop
mov
push
sub
fucom
mov
repz
jb
fistpl
adc
pop
cltd
sub
push
mov
cltd
and
inc
jecxz
out
xchg
push
push
adc
push
ja
jb
mov
mov
mov
mov
pop
out
jge
out
push
lret
in
cmc
sub
dec
xlat
inc
lret
xchg
pop
dec
outsb
in
mov
call
and
inc
jne
push
insl
pop
and
test
ret
mov
mov
bound
repz
xor
nop
lret
mov
lret
cmpsl
insl
push
andl
je
negb
sub
xchg
adc
pop
pop
add
and
push
push
gs
xor
test
mov
popf
xchg
decl
idivb
out
fcoml
das
push
js
add
shl
fwait
mov
jl
out
popf
xchg
adc
pop
pop
cmc
jb
inc
add
sti
into
ss
jns
shrb
cld
ja
push
lds
cmp
inc
in
push
adc
stos
and
cmp
mov
js
jne
pop
jle
jp
pushl
cmpsb
cs
imul
push
lods
dec
fwait
push
and
mov
ss
fcom
inc
arpl
cltd
dec
aas
not
mov
lea
dec
cltd
pop
push
cltd
and
xor
sahf
loopne
fdivrl
mov
mov
xor
jmp
mov
fimuls
sbb
fildl
sub
int
fcmovnu
lcall
and
add
ds
xlat
mov
lds
cli
fildl
scas
jge
insb
and
fcomi
roll
xchg
push
das
push
inc
mov
sub
sbb
jns
cli
dec
rcll
fcmovnbe
add
lahf
rcll
xor
xchg
dec
mov
std
sbb
cmp
fnstsw
jae
rcr
int3
mov
push
mov
push
push
xor
dec
pop
jno
pop
sti
lock
mov
xchg
cmp
cwtl
push
inc
call
testb
out
mov
mov
pop
sbb
nopl
pop
fwait
mov
mov
daa
mov
xor
or
or
xor
repz
cwtl
mov
cmp
inc
scas
pop
and
pushf
shl
jne
leave
shr
or
mov
cs
pop
fwait
inc
pushf
imul
fdiv
add
mov
add
jb
pop
fisttpll
adc
incl
lret
fisttpll
cmp
out
mov
dec
clc
stos
in
aam
insb
stos
push
add
pop
out
push
inc
pop
lods
adc
adc
ret
mov
les
xor
pop
or
or
movsb
cmp
ds
dec
lods
or
sbbl
ss
sbb
adc
mov
lcall
fs
inc
adc
mov
mov
pop
les
movsb
rorl
jg
icebp
xor
aad
add
dec
mov
in
and
pop
add
addr16
sub
push
push
unpckhps
aad
or
cmp
ljmp
loopne
push
push
mov
cli
mov
jl
xor
hlt
cmpsl
hlt
add
filds
shlb
pop
mov
push
sbb
or
cmp
call
mov
xchg
or
pop
cs
stc
mull
and
ss
pop
xchg
cwtl
jnp
sbb
cmc
stc
and
lea
jmp
mov
ret
pop
jge
xchg
hlt
jg
sub
push
xor
pop
sub
sbb
fdivrl
xchg
mov
pusha
push
pop
sahf
fmul
out
idiv
mov
femms
mov
and
imul
pop
aas
mov
cltd
xor
sbb
insl
and
jne
shrl
xchg
loope
mov
sub
test
mov
jns
les
call
mov
cmc
cmp
cmc
aas
sbb
movsl
les
es
bound
dec
add
sub
xchg
pushf
push
lods
shrb
mov
test
mov
or
and
or
ret
mov
sbb
or
cmp
popa
outsb
andb
popa
aam
jp
mov
in
xchg
jo
test
adc
dec
loopne
cs
fdiv
add
push
aad
lret
aad
das
icebp
cmpsb
xor
cltd
cmp
lock
sti
jo
mov
cld
adc
jb
out
jg
int
sbb
enter
mov
jnp
faddl
mov
icebp
or
mov
and
pop
jbe
enter
inc
les
add
sar
jbe
xchg
leave
mov
push
sub
call
or
pushf
bound
push
cmp
dec
js
inc
mov
xchg
pop
stos
add
std
imul
xchg
or
and
pop
xchg
repnz
fs
in
and
nopl
pop
lds
stos
movsl
xchg
sahf
fisttpll
jle
mov
pop
fisttpll
popf
inc
cmp
fistps
mov
mov
jne
cmp
call
js
fs
add
lds
mov
dec
ret
dec
adc
mov
imul
sbbl
outsl
add
insb
pop
stos
lret
push
xchg
inc
push
mov
test
aaa
incl
inc
xor
test
sbb
stos
cmp
push
adc
movsb
mov
test
repz
mov
and
fs
test
out
hlt
test
adcl
sub
and
outsl
push
addb
sub
shlb
push
inc
shll
mov
add
ret
push
fisubl
sbb
push
xchg
push
mov
jne
in
xchg
adc
loopne
push
outsl
mov
in
jle
cld
repz
jl
xchg
jmp
inc
hlt
sbb
push
les
loope
outsb
cltd
mov
loope
cmp
outsl
test
xor
sarl
popf
xchg
mov
sarl
add
out
push
adc
dec
mov
jne
ss
popf
popa
sub
outsb
stc
lcall
xchg
data16
out
enter
into
lea
dec
push
dec
sbb
push
fldcw
xor
add
stos
sarb
jno
mov
mov
xor
pop
dec
sub
inc
adc
jno,pn
andl
shrl
jle
call
je
inc
fdivr
mov
hlt
mov
mov
sub
cmp
cmpsl
lcall
xor
repz
dec
inc
jb
inc
adc
mov
lret
push
push
sbbb
lcall
inc
xchg
scas
jmp
inc
lcall
sbb
fs
sti
ret
inc
ljmp
clc
fisubs
das
xor
mov
xchg
sub
shr
mov
xchg
sti
mov
xchg
stos
movsb
push
stc
out
addr16
sub
push
sti
movsb
jge
push
xchg
mov
leave
xor
sbb
int3
mov
rorb
and
aas
push
xor
jbe
imul
out
push
push
out
cmpsl
pusha
dec
mov
pusha
sbb
aam
push
xchg
push
stos
inc
jp
xor
inc
fcomi
xchg
leave
mov
ljmp
negl
lahf
scas
mov
fwait
dec
pusha
jg
jecxz
std
pop
test
insb
icebp
pusha
popa
sbb
cmp
test
sahf
aad
lods
xchg
jmp
mov
cmp
mov
in
dec
pop
push
adc
jl
mov
mov
cmp
cmp
cmp
add
inc
jnp
insb
cmpsl
into
fwait
mov
cmp
xor
pusha
inc
inc
loope
pop
daa
sahf
sub
pushf
jne
iret
repnz
lods
fwait
sbb
lret
ljmp
imul
xchg
push
or
jbe
pop
sbb
in
cmp
adcb
je
daa
nop
sbb
mov
stos
push
mov
decl
add
lahf
outsl
mov
jl
repnz
cwtl
int
push
fstp
mov
out
mov
aaa
test
aam
lahf
push
jge
jo
or
dec
and
in
shlb
lods
inc
dec
sbb
bound
adc
adc
cmp
es
push
and
pop
pop
jp
js
repz
sub
loopne
push
sub
cmp
jmp
mov
xor
popa
mov
fwait
outsb
pop
ret
cli
inc
pop
mov
cld
mov
push
sbb
mov
fsts
cmp
fildl
shll
push
sbb
pushf
icebp
fwait
mov
lods
mov
pop
push
aad
sub
les
fistl
mov
popf
or
lods
pop
sbb
pop
mov
insb
les
fadds
or
mov
sub
jb
repz
sub
mov
lret
hlt
pop
add
rcr
pop
repnz
out
add
mov
out
lcall
data16
sbb
rorb
or
sub
divl
leave
in
mov
sti
xor
fwait
andb
out
imul
and
inc
push
paddusb
out
xor
das
sarl
test
mov
pop
fiaddl
out
pop
js
clc
and
push
adc
scas
aas
je
jbe
pop
frstor
xchg
mov
xchg
pop
sbb
xchg
imul
or
dec
pop
mov
sub
jbe
popa
insb
fwait
push
loop
imul
bound
aad
sub
imul
xor
dec
sbb
icebp
ljmp
inc
loopne
cmp
cmp
mov
jne
lcall
lock
inc
xchg
jp
or
loope
fwait
jmp
enter
xchg
stos
mov
mov
xor
sbb
ljmp
scas
dec
and
test
xchg
adc
sti
add
add
inc
or
and
xchg
jmp
aam
icebp
mov
iret
enter
xchg
or
data16
in
mov
arpl
cld
aam
movsl
in
sub
shl
xor
int
dec
add
adc
stos
leave
pop
repnz
int3
cmpsl
xlat
xor
mov
push
xchg
out
fmul
adc
mov
push
lds
push
lods
shlb
pop
sub
ja
jnp
fidivrs
pop
fnsave
movsl
jns
js
cs
push
fwait
movsb
sti
cmp
mov
loopne
dec
fstl
out
mov
test
imul
xor
sbb
xor
and
inc
aam
or
cmp
jnp
push
pop
xor
pop
insb
pop
mov
repnz
pop
and
lock
adc
in
pop
sti
mov
mov
stc
lret
mov
dec
dec
push
mov
subl
jae
mov
or
mov
lcall
stos
addr16
jecxz
icebp
in
insl
jmp
and
in
sbb
outsl
push
xor
jmp
sarl
es
imull
stos
int3
pop
mov
pop
test
loop
dec
outsl
inc
adc
neg
mov
je
inc
and
jo
test
rolb
mov
mov
imul
or
adc
cmp
pusha
and
jge
hlt
lcall
divl
repz
mov
dec
cmp
insl
mov
sbb
dec
sub
int3
js
or
hlt
hlt
fcmove
aad
ds
mov
das
jl
push
mov
adc
add
bound
cli
inc
cmp
inc
popf
fistpll
in
mov
mov
out
jb
repz
xchg
out
pop
jno
popa
repz
xchg
aad
lmsw
lahf
pop
sbb
out
aaa
adc
repz
inc
and
pop
cmc
rcrb
fucomp
out
fcomps
mov
adc
test
stos
mov
pop
pop
xchg
daa
pop
repz
call
test
pop
test
jp
pop
jne
mov
lods
cltd
shlb
mov
xchg
fdivr
cld
xchg
jg
mov
mov
sarb
jae
pop
insl
adc
sub
shrl
lret
inc
movsb
mov
les
sti
xchg
push
aaa
out
mov
xchg
and
lock
add
sub
mov
movsl
ljmp
lcall
cld
mov
dec
mov
daa
adc
pop
inc
push
js
clc
inc
dec
shrb
stc
outsb
pop
mov
insl
arpl
shll
or
pop
inc
dec
lea
mov
cli
mov
fadds
lahf
or
movsb
sub
push
fisttpll
lahf
mov
xlat
leave
fildl
icebp
add
shlb
cmp
rorl
les
insl
lea
mov
cmpsl
add
int
shll
lods
popa
sub
xchg
aaa
es
iret
mov
movsb
test
adc
sbb
ret
fs
in
xchg
testb
popf
imul
lock
fwait
pushf
icebp
test
dec
adc
scas
pop
push
mov
jb
or
inc
dec
xor
adc
dec
push
test
clc
hlt
das
pop
jle
or
or
or
or
push
std
xor
jae
jae
pop
data16
dec
adc
js
loope
pushf
sbb
add
call
mov
je
bound
aaa
push
insl
js
jl
mov
fmul
push
icebp
out
pand
lret
inc
rol
je
pusha
icebp
adc
pushf
push
jp
and
sbb
push
mov
adc
xor
pop
add
pop
sbb
outsl
push
pop
mov
es
push
lea
or
mov
cmc
pop
aad
jne
das
mov
fcomi
rclb
jmp
in
loop
adc
dec
mov
dec
les
sti
aam
idivb
into
ss
dec
fstl
add
mov
dec
call
hlt
stos
cld
arpl
xor
add
or
mov
imul
cli
jb
mov
dec
mov
cmc
je
enter
inc
outsl
sbb
push
push
fmull
es
test
orb
mov
cld
mov
pop
sbb
dec
inc
inc
jo
sahf
inc
inc
pop
cmpsl
fistpl
je
stc
outsl
icebp
cld
bound
mov
dec
negl
rcrl
sub
imul
out
mov
daa
lea
jg
cltd
cmpsb
sub
loopne
and
rcr
add
scas
and
and
popa
sbb
inc
and
ret
sub
adc
sbb
sub
adc
test
sub
js
rcr
push
add
sbb
xchg
inc
adc
sti
xchg
add
pop
cs
push
xchg
in
rclb
mov
gs
stos
lret
in
out
cltd
inc
icebp
mov
adc
mov
adc
xchg
rcll
lcall
dec
addr16
inc
in
mov
xor
or
divl
add
pushf
mov
idivl
cmp
sbb
xor
pop
pop
jne
lods
add
divb
mov
int3
lods
mov
sbb
lods
aam
rcl
test
hlt
and
sahf
inc
mov
inc
jg
icebp
test
add
inc
jecxz
adc
in
adc
lods
add
out
stos
xchg
pop
gs
ret
push
test
jae
inc
fdivl
insb
je
adc
adc
lods
loop
sbb
push
xor
push
out
sub
stos
imul
std
aam
lea
rolb
inc
sub
in
lahf
sub
ja
je
in
xor
xor
push
pop
gs
jge
hlt
jg
insb
lods
pop
cmpsl
rolb
int
cmp
js
pop
popa
test
sar
xor
cmp
push
je
pusha
mov
insl
dec
in
ds
in
xor
insb
iret
repz
add
mov
outsb
loope
push
xchg
push
inc
jns
push
cwtl
repnz
xor
xchg
cld
out
jecxz
outsl
cmpsl
mov
xchg
call
xchg
xchg
add
mov
lods
scas
in
inc
or
push
cli
dec
push
les
in
jmp
inc
pop
test
fcmovu
shlb
push
mov
xchg
fsubr
bound
out
mov
repz
ret
pop
inc
adc
aaa
mov
xchg
out
cli
and
xorl
in
idivb
xchg
and
pop
and
sahf
inc
cwtl
je
cmp
jne
sar
mov
in
inc
paddsb
insl
int
in
mov
mov
scas
or
arpl
mov
cmp
jnp
sti
xorl
dec
dec
cmp
jmp
pop
je
mov
stos
imul
fwait
adcl
daa
jae
xor
sbb
inc
cmc
bound
fs
cmpsb
inc
sarb
fdivs
xor
push
add
push
lret
xor
fnstsw
lds
jp
sub
test
cli
ret
std
sti
lds
pop
pusha
movsb
add
pop
dec
sub
popf
insb
rcrb
push
imul
xchg
push
mov
sub
dec
pop
fdivs
ljmp
or
in
or
cmpb
adc
je
jecxz
push
in
inc
pop
into
in
inc
mov
pop
shrl
cwtl
dec
cmp
ror
shl
add
test
push
mov
das
push
pushf
fidivs
cmpb
add
int3
movsb
adc
pop
xchg
mov
jp
pop
pop
lods
orb
cli
dec
cs
cmp
lea
pop
push
repnz
cmc
fidivs
lret
sbb
dec
lods
pop
mov
into
es
lret
sub
cmpsb
push
push
add
int3
sub
in
int3
xchg
sbb
sub
fwait
xlat
pop
inc
jns
or
lcall
data16
int3
sbb
inc
push
pushw
lods
cwtl
sbb
cmp
cld
push
sahf
enter
aad
mov
xchg
dec
pop
and
dec
fld1
scas
leave
leave
cmp
push
jne
add
push
jl
sbb
fwait
shll
shlb
sbb
push
cmp
adc
cwtl
rcll
sub
sbb
xchg
inc
push
sub
push
mov
mov
daa
aam
jo
nop
popf
inc
out
decb
xchg
and
add
sub
or
les
lods
xchg
xor
je
mov
testl
rorl
mov
lea
xor
sbb
movl
call
or
loope
mov
inc
sub
pop
push
adc
pop
imul
push
cmc
sti
xchg
pushf
das
xor
jp
xor
test
pop
sbb
pop
push
xchg
fnsave
fnstenv
ror
xchg
cmp
divb
inc
push
lcall
and
test
std
data16
sub
je
stos
fisttpl
mov
movsl
pop
fxch
mov
xchg
lcall
sub
imul
cmp
std
mov
mov
xchg
mov
push
imul
mov
cltd
and
sub
mov
jg
sbb
test
out
pop
aas
xor
sub
jbe
lea
ret
popf
or
aaa
daa
xor
xchg
fsub
inc
mov
mov
xor
dec
mov
cltd
push
out
cmp
in
cmp
cmpsl
push
lods
dec
arpl
addr16
mov
pop
addr16
sbb
js
das
loope
fs
sbb
jmp
jbe
ljmp
insl
loope
outsb
scas
xchg
jl
cmp
push
xchg
fsubs
mov
shlb
and
mov
mov
cmp
add
or
lock
push
ljmp
jmp
xor
adc
xor
cmpsl
mov
sarb
ret
addr16
mov
loopne
add
rcrl
lods
xorb
mov
add
loopne
jae
add
xchg
fstl
into
test
ret
lds
jnp
mov
jno
loopne
data16
mov
dec
push
cmp
outsl
aaa
mov
mov
xor
movsl
inc
and
pusha
hlt
fcomps
iret
ds
mov
scas
addr16
outsl
clc
arpl
and
insl
adc
stos
decb
je
push
or
cs
icebp
pusha
or
lret
dec
jmp
pushf
pop
xor
sub
fld
push
inc
call
push
dec
enter
jmp
dec
pusha
jns
xchg
clc
add
pusha
jle
mov
mov
arpl
adcl
fadds
lcall
xchg
ret
add
addr16
add
ja
out
rcr
imul
jle
jne
pop
pop
dec
nop
push
loopne
sub
lods
pop
jg
lret
adcb
pushf
das
mov
lods
lods
pop
and
cmpsl
aam
pushf
pop
lret
sti
sbb
dec
xor
pop
ljmp
push
xchg
push
pop
sub
lret
fs
call
jl
xlat
push
loopne
fisubrl
dec
mov
fsubrl
sti
pusha
pop
mov
xchg
ja
sbb
fisubl
lret
or
lds
in
add
cmp
sbb
or
mov
jmp
xor
lods
inc
lret
cmp
fiadds
fsts
mov
ret
sbb
xchg
push
push
add
and
adc
mov
es
or
inc
mov
add
inc
popf
loopne
int3
jl
sbb
lret
call
aam
pushl
loopne
dec
jo
mov
push
or
xor
repnz
aam
xor
call
ljmp
loopne
int3
dec
ds
mov
adc
gs
pop
mov
mov
jmp
adc
jno
mov
jno
idivl
dec
lock
dec
movsb
es
inc
cmpsl
mov
adc
xor
imul
xor
and
sti
lcall
adc
push
pop
push
stos
cmp
pop
push
adc
inc
push
jns
outsb
push
mov
ja
push
jge
and
stc
and
xor
mov
in
lea
in
nop
sub
outsb
mov
ja
cmc
pop
jo
fisubrl
je
push
sbb
mov
sub
lods
dec
mov
cmp
insl
fld
jnp
jb
test
js
inc
shll
std
sub
jne
test
cmpl
lcall
cmp
pop
sahf
mov
les
aas
and
movsb
jge
mov
int3
es
pushf
scas
fs
addr16
and
inc
sbb
jne
ss
lcall
xor
scas
pop
mov
sahf
into
subb
xchg
mov
pop
add
jo
push
xchg
mov
outsl
xor
ret
ret
rorb
cmp
mov
in
nop
mov
orb
xor
call
xlat
xor
mov
mov
push
imul
sbb
inc
sbb
adc
add
cld
cmp
mov
or
out
inc
addr16
push
inc
inc
int3
sbb
and
call
icebp
dec
ret
out
movsl
and
sarl
hlt
imul
out
lods
jo
push
out
cmp
out
sar
imul
icebp
aam
mov
push
jne
mov
insb
xchg
into
adc
cs
pop
es
mov
ljmp
cs
loop
or
xor
loope
mov
icebp
enter
jne
jmp
push
dec
out
xor
int
jg
sbb
fistl
push
loopne
pop
push
cmp
mov
inc
cmc
mov
dec
mov
inc
fwait
xchg
pop
aam
test
cwtl
imul
xor
jmp
add
xor
sbb
xchg
in
into
test
jmp
enter
cmp
aam
fnstenv
mov
push
pop
mov
lods
inc
popf
test
pop
ja
lds
mov
loop
inc
push
cmp
xchg
adc
mov
fldenv
test
cmp
hlt
addr16
or
xor
dec
aad
popa
lods
pop
mov
sub
daa
out
pop
sarb
sbb
push
lret
pop
xchg
mov
mov
sub
jle
jne
fmul
int
repnz
outsl
push
cmp
loope
mov
mov
inc
scas
aam
mov
mov
loop
pop
out
push
sbbb
dec
std
mov
xchg
int3
pushl
jmp
and
push
xchg
pop
add
fsubrl
dec
push
int3
jg
mov
push
cmp
data16
ror
jmp
out
adc
test
mov
adc
imul
xor
fidivs
ljmp
loopne
mov
and
into
aaa
icebp
or
sub
mov
mov
inc
dec
cmovs
xchg
sub
adc
jle
shrl
sub
outsl
or
or
aaa
pushf
pop
jne
iret
jge
daa
popf
mov
push
xchg
push
outsb
je
es
pop
mov
sub
out
xor
or
rorb
movsl
pusha
cltd
xor
popl
mov
mov
mov
jne
out
jg
pusha
and
mov
stos
popf
dec
xor
sbb
mov
push
loope
insl
pusha
daa
repz
pop
jb
xchg
out
inc
out
xchg
pop
cmp
pop
imul
cmpb
js
out
movsb
jb
cmp
push
cld
and
xor
mov
sti
mov
xchg
jge
pop
negb
mov
sub
inc
push
push
push
sub
or
sub
lret
fwait
dec
adc
jle
add
popl
pop
cmp
std
mov
sub
repnz
rcll
test
xor
mov
adc
mov
or
mov
cmp
out
subb
outsl
sahf
cmp
xchg
data16
pushf
lret
out
sbb
xchg
cmp
ds
inc
mov
mov
jns
lea
ljmp
mov
scas
dec
sbb
das
scas
test
cmp
adc
rcrl
mov
dec
xchg
aam
mov
mov
dec
mov
sub
sub
jnp
dec
xchg
sub
xor
bound
cmp
pop
test
mov
insl
cltd
lea
sbb
lahf
mov
test
push
mov
ljmp
movsb
nop
push
jmp
ljmp
sub
fmuls
adc
xchg
xchg
call
mov
or
ss
and
je
js
outsb
js
adc
fcmovnu
mov
lcall
xor
in
repz
clc
mov
xchg
subl
lds
jb
enter
sarb
push
cmp
and
and
mov
ret
daa
pop
or
gs
loopne
jle
es
sub
jmp
mov
shrb
iret
sub
int
xor
sbb
mov
adc
sbb
nop
dec
push
push
movsb
xchg
push
or
adc
rol
or
sbb
push
and
sub
pop
iret
lods
mov
pushl
xor
cs
dec
push
stos
or
test
orl
clc
fstpl
jecxz
loop
xchg
int3
or
js
cmp
lahf
mov
cmp
push
imulb
or
adc
stos
push
sbb
mov
cmp
leave
in
sbb
dec
mov
jb
stos
scas
jbe
sahf
jp
jmp
and
push
mov
fadds
and
jno
sbb
shl
dec
fsubr
and
lret
adc
cmp
out
xorl
lahf
mov
sub
pop
dec
sub
aam
ljmp
ljmp
cmp
fs
jno
in
movsb
push
jl
pop
enter
adc
cmp
xchg
int3
loop
xchg
push
jae
ja
mov
loope
xor
mov
cmpsb
fimull
in
push
in
sub
xor
or
fadd
roll
lret
and
adc
pop
add
loope,pt
stc
lret
xor
inc
lahf
push
inc
or
cltd
jo
push
mov
mov
xor
popa
jp
cmc
jle
orl
aas
faddp
mull
push
mov
inc
addr16
mov
mov
jne
ss
dec
lret
fdivs
clc
fwait
test
aas
xor
xlat
mov
add
repnz
repnz
xchg
jl
test
push
add
int3
fsubr
fstl
aad
mov
dec
mov
stc
adc
insl
mov
jecxz
int3
xchg
and
or
test
js
adc
inc
mov
loope
xor
mov
pop
aam
mov
lcall
pop
adc
loope
dec
sbb
test
xchg
and
dec
lret
leave
cmpl
and
and
inc
adc
lahf
jo
imul
das
lahf
fstpl
sub
sbb
xor
pop
lea
out
test
fdivrl
imul
and
popa
cmpsb
loopne
pop
pop
sub
xchg
xlat
lret
fnstenv
nop
stos
cmpsb
aam
cmpsl
dec
dec
inc
psubw
jp
inc
jb
sbb
xlat
movsb
aas
and
les
mov
sbb
dec
and
in
fldt
cwtl
xchg
xchg
lret
push
mov
push
cmpsb
xor
lods
xlat
add
das
enter
sbb
mov
pop
add
mov
out
out
pop
xlat
mov
aas
imul
xlat
stos
push
sub
stc
and
cwtl
jle
lock
or
mov
repz
icebp
mov
xor
ja
hlt
jmp
inc
add
mov
lds
jb
cmp
pop
jl
mov
aad
inc
sub
lods
sub
add
xchg
mov
adc
lret
jp
jno
fs
shll
sub
ds
mov
jge
lods
and
loopne
bound
sti
ds
rolb
repnz
fnstsw
enter
xchg
xchg
sbb
mov
cmpsl
adc
mov
ror
leave
xchg
das
aad
mov
xor
pop
mov
outsl
sub
cmpsl
pop
rolb
and
add
sahf
inc
ds
rorb
bound
cli
inc
into
or
mov
sub
dec
mov
arpl
jne
mov
inc
aaa
fidivrs
sbb
loop
fidivrl
sbb
pop
cmp
sbb
mov
pusha
sbb
pop
rcll
adc
lock
ljmp
xor
in
adc
sarl
mov
push
xor
out
xlat
jbe
xchg
lods
xchg
stos
test
arpl
mov
or
push
repnz
lock
cmp
int
shll
pop
pop
xchg
jge
cmpsb
or
rorb
js
out
ljmp
ja
or
aad
fwait
push
clc
pop
je
cwtl
mov
mov
add
inc
ffreep
clc
gs
aas
mov
ljmp
pop
andl
shll
push
dec
lods
stc
call
pop
adcl
test
fiaddl
jo
xor
xor
inc
cmpb
mov
mov
sti
xor
pop
es
popf
sbb
xlat
outsl
das
xchg
and
div
cmpsl
xor
out
ljmp
movsl
jge
dec
out
inc
rorl
icebp
movhps
int3
mov
xchg
mov
test
add
fisubrl
xchg
jmp
daa
push
xchg
adc
push
dec
ljmp
notb
les
popf
lods
push
lock
lret
push
jecxz
adc
adc
or
andnps
arpl
adc
sub
sub
jbe
bound
into
pop
xchg
in
sbb
mov
arpl
jne
mov
test
cmp
hlt
or
mov
add
mov
fwait
shll
adc
out
sbb
mov
repnz
jp
cmp
jae
lods
int3
sti
lock
lret
aad
mov
scas
fwait
inc
push
mov
mov
sti
xchg
je
nop
in
or
xchg
fs
cmp
or
pop
xor
lcall
xchg
mov
pop
lahf
sbb
cmp
mov
mov
add
subl
lcall
rcll
cmp
in
out
les
mov
insl
sahf
loopne
mov
and
mov
ss
xor
es
sub
or
cs
std
or
fsubr
cmp
jmp
add
cmp
push
pop
test
jns
mov
jbe
xor
inc
cld
aad
and
pop
sub
jns
add
cli
push
mov
mov
fwait
jae
or
movsl
push
and
leave
inc
cmp
inc
mov
lahf
sbb
cmp
hlt
icebp
dec
pop
add
nop
lea
rclb
cli
ljmp
push
cmp
imul
rclb
jp
jmp
cmp
sbb
push
cmpsl
lret
sbbl
cmp
xor
into
mov
outsb
and
xchg
lret
imul
mov
sub
les
mov
rcl
inc
test
pusha
mov
fdivp
jae
and
xchg
inc
scas
movsb
int3
fcoml
pop
pop
lock
sub
cmp
loope
jbe
test
addl
jno
pop
sub
sub
in
cmpsb
push
push
pop
push
mov
jmp
aam
and
add
mov
pop
imul
cmpsb
xlat
imul
push
dec
aaa
cmp
jmp
addl
fcmovnu
fldenv
or
ror
dec
ss
sub
jno
aam
decl
add
out
shr
test
adc
cli
xor
frstor
sub
jb
inc
push
xor
arpl
pushf
inc
xchg
ror
imul
lcall
sub
popa
loop
cmp
mov
icebp
xchg
lret
jne
negl
iret
inc
mov
cmp
faddl
aam
adc
daa
out
sbb
fstpl
rcrl
sub
jo
pop
sahf
jecxz
jle
stos
push
lods
int3
sub
xlat
test
in
and
add
xor
lea
push
jns,pt
ds
mov
lods
lcall
push
loope
jns
cmpb
flds
orl
aaa
xchg
mov
mov
sti
add
sti
aam
std
shrl
loope
xor
mov
addl
xchg
jg
inc
sbb
test
adc
sbb
pop
pop
and
dec
lods
pop
mov
cli
cmp
data16
cmpsb
mov
das
scas
in
jb
inc
xor
jl
bound
inc
test
leave
out
adc
jge
into
mov
inc
movsl
in
add
xlat
pop
clc
pop
outsl
mov
je
jmp
adc
daa
test
jne
dec
or
push
jp
sbb
lock
jle
lahf
mov
mov
in
pop
aam
pop
popa
mov
cli
adc
push
js
push
jno
sub
aam
cmpsb
sub
sbb
and
dec
cmp
or
sbb
test
nop
mov
jno
inc
mov
xor
in
lods
cli
bound
inc
sbb
mov
push
testl
xor
pop
pop
int
dec
inc
pop
pop
xchg
mov
pop
mov
aas
xchg
imul
loop
das
and
mov
test
or
xor
out
cmp
test
ds
mov
loop
rolb
fdivl
cmp
js
test
pop
adc
push
js
cmp
dec
mov
adc
xchg
xor
push
dec
outsl
lds
push
imul
xor
jl
je
jns
lret
jmp
and
cmpsl
xor
jge
hlt
imul
jbe
cwtl
fisubl
stos
mov
scas
add
jl
lea
adc
cmpsl
aam
xorl
movsl
or
xchg
mov
cld
jo
mov
outsb
jo
dec
stc
lds
xlat
lcall
xor
js
sub
cwtl
call
js
shll
jecxz
mov
push
pop
sub
outsl
fwait
dec
cli
cmp
mov
insb
dec
lea
aad
scas
push
xor
mov
imul
in
cwtl
adc
cmp
inc
fbstp
mov
fcoms
push
pmulhw
pusha
mov
aaa
popa
inc
cmc
ret
in
xchg
sarb
dec
subb
ds
or
sub
pop
sbb
int3
pop
mov
fistl
hlt
cmp
cld
std
or
jne
fidivrs
cmp
aaa
push
xor
add
pusha
arpl
imul
ja
mov
jmp
sbb
add
stc
pop
clc
mov
adc
dec
and
xchg
fdivl
sub
cmpsb
jno
pop
push
xchg
and
push
adc
int3
inc
stc
xor
pop
mov
push
mov
push
push
jae
rcll
push
daa
in
pop
sub
das
adc
mov
mov
test
pop
pushf
sbb
mov
cmp
lret
mov
pop
mov
cli
mov
inc
sbb
test
fdivl
jne
scas
rorb
xchg
or
mov
pop
dec
dec
or
inc
repnz
das
pusha
shl
nop
xlat
push
dec
pop
xchg
dec
mov
int3
mov
and
inc
jae
dec
dec
sti
and
add
nop
lret
incb
scas
xchg
push
sub
and
das
cmpsl
push
loope
cmp
lahf
sarb
and
pop
int
jbe
scas
xchg
ss
add
std
jmp
lcall
clc
or
mov
xlat
sub
mov
lock
ds
xorb
adc
sub
pop
stc
jno
and
bswap
aam
loope
orb
nop
outsb
add
jle
xchg
cmp
leave
xor
fadds
mov
mov
je
enter
dec
xorb
pop
fnsave
sub
cs
dec
bound
cmp
cmp
call
mov
xor
cwtl
jno
mov
lea
hlt
fsubs
insl
cmp
xchg
adc
mov
inc
inc
mov
shr
push
scas
pop
scas
insb
mov
roll
and
mov
cmpl
push
jb
rcr
shr
and
lret
cmp
leave
push
cmc
xor
hlt
cmc
fs
adc
notb
push
loope
jno
pusha
std
aas
insl
jno
mov
es
lds
dec
jmp
js
enter
outsl
xlat
lods
out
jbe
mov
adc
mov
jne
pop
pop
rol
jmp
mov
push
movsl
add
cmc
mov
icebp
lods
mov
ret
fwait
adc
fwait
adc
push
add
lret
mov
or
cmp
loopne
loope
xchg
cmc
iret
mov
shll
inc
js
shll
adc
movsb
repnz
mov
sbb
cmc
inc
inc
hlt
adc
adc
mov
jle
mov
pusha
jge
ficoml
jge
push
jno
dec
fistpl
pop
iret
mov
rorl
sub
pop
addr16
test
into
cmpsb
cmp
add
sub
idivl
adc
and
aas
mov
mov
push
in
mov
les
pop
mov
add
fnstenv
xchg
mov
pusha
mov
sub
or
adc
sub
jnp
xchg
imul
and
jecxz
les
sub
mov
pop
xrelease
and
dec
repz
imul
mov
mov
mov
es
iret
in
into
lea
mov
add
cmp
dec
popf
loopne
subb
xchg
jecxz
push
inc
mov
mov
jb
push
push
ds
test
add
cmp
ror
add
pop
sub
notb
adc
dec
lods
mov
xchg
pop
xchg
push
stos
add
xlat
cwtl
and
and
shlb
imul
mov
dec
outsb
es
inc
adc
js
fildl
leave
scas
dec
fists
mov
enter
fwait
inc
mov
lods
sbb
shll
or
add
fnstenv
jmp
ja
inc
lret
sbb
add
push
pop
out
jno
xchg
mov
mov
inc
xchg
fcoms
fstps
lds
mov
cwtl
and
stos
outsb
mov
fsubrs
xchg
push
inc
pushf
iret
sbb
sub
sti
fisttpl
les
aaa
or
adc
jmp
bound
ds
adcb
xor
fisubrl
inc
lods
daa
iret
and
scas
jg
cmp
mov
insl
mov
testb
inc
dec
out
in
xchg
mov
loopne
negb
dec
mov
mov
jns
push
dec
adc
test
fwait
lcall
inc
add
push
and
scas
in
and
fwait
imul
mov
cmp
add
testb
pop
mov
testb
xchg
pop
in
aas
dec
adc
pop
scas
movsl
dec
mov
xchg
dec
leave
mov
lods
nop
orl
jb
sbb
sub
fwait
mov
sbb
clc
push
add
xchg
inc
cmp
cltd
cmpsl
pop
mov
subl
xchg
push
out
add
flds
and
or
ret
ret
dec
xlat
data16
push
cs
inc
mov
cmc
rcrl
add
fdivrl
leave
out
cwtl
aam
lret
add
shlb
addl
imul
stos
ret
push
or
movsl
sbb
cmc
loop
adc
int3
push
int3
icebp
movsb
xchg
jl
add
fwait
fs
leave
fcmovne
mov
mov
dec
push
mov
js
shrb
inc
mov
popf
jnp
adc
les
dec
sbb
mov
shrb
test
mov
inc
push
push
xchg
gs
imul
sti
jge
inc
orb
push
add
movsl
jb
data16
dec
add
push
adc
mov
loope
fmul
adc
fsubs
icebp
xchg
aas
rcrb
sub
inc
enter
data16
inc
sub
flds
push
jp
ss
adc
adc
notb
aaa
in
out
incl
fwait
in
cs
rcll
popa
pop
cli
stc
sub
rcrb
sbb
mov
lods
xor
lods
cwtl
sub
shlb
stc
test
clc
xchg
test
pop
fisubrl
inc
pop
mov
test
push
decb
jo
jnp
popa
imul
enter
pop
and
andb
in
inc
mov
stos
daa
xlat
push
dec
shrl
lret
testl
call
inc
insb
fisttpl
mov
jb
sahf
pushl
xor
movsb
pop
movsl
shlb
fwait
xchg
or
push
mov
inc
inc
mov
in
pop
scas
sbb
stc
push
test
gs
inc
int3
enter
push
jo
jecxz
jno
mov
inc
push
mov
lods
sub
lea
push
into
fsubrl
shrb
adc
jl
push
push
mov
pop
sbb
jne
sbb
jp
xor
mov
sti
fisubl
mov
fdiv
cmpsl
sub
mov
mov
pop
call
lods
push
push
int
test
or
xchg
mov
push
sub
fsin
fwait
cwtl
dec
sbb
fcmove
pop
mov
sub
divb
popa
cmp
inc
sbb
push
jle
movsb
mov
mov
or
stos
test
movsb
es
cltd
xchg
inc
je
out
sub
dec
shrl
shl
nop
xchg
cli
sub
mov
pop
jge
jae
mov
add
cwtl
fstps
dec
dec
and
or
lds
enter
repz
cmp
loope
scas
cmp
in
in
scas
sbb
test
pop
lea
adc
mov
test
loope
aas
in
daa
cmpsl
and
lret
sbb
std
cmp
in
outsl
xor
sahf
pop
pop
push
pusha
mov
mov
pop
aad
mov
or
inc
xlat
loopne
add
adc
add
jno
repz
add
shrb
js
cwtl
mov
inc
pop
lret
cmc
push
aas
inc
cmpb
fldlg2
inc
and
ret
cmpsb
int3
xchg
add
es
sub
mov
imul
fcoml
ljmp
sbb
sub
cmp
test
shlb
out
aam
pop
lret
cmp
mov
inc
fsubrp
and
movsb
loopne
dec
call
push
aam
imul
adc
cltd
in
mov
dec
subb
xchg
mov
pop
jl
das
pop
sbb
fstpt
sbb
in
test
in
cmp
ljmp
cmpsb
mov
inc
frstor
jp
outsb
std
iret
pop
or
out
movsb
filds
and
insb
ret
imul
stc
sarl
fiaddl
mov
inc
adc
pop
out
inc
mov
add
mov
clc
sub
mov
xchg
jno
push
adc
pop
fsts
fidivl
mov
das
push
loope
xor
or
fldenv
cmp
sbb
ret
push
data16
inc
ret
push
sub
jg
sub
insb
or
movsl
fnsave
mov
leave
js
lds
rcrl
leave
and
mov
jge
dec
popw
push
repnz
aad
sub
mov
or
dec
cli
inc
push
push
sahf
push
ja
inc
xor
dec
jne
jl
adc
popf
mov
inc
enter
adc
mov
idivb
movsb
add
test
pop
xor
mov
enter
mov
aas
xor
jl
imul
fisubrl
push
subl
lret
dec
out
sub
ds
mov
mov
lret
enter
jbe
lds
js
adc
xchg
sbb
shll
popf
jge
test
jp
adcb
cmp
mov
orb
cmp
mov
add
decl
push
aad
inc
sub
fnstsw
pop
jg
adc
push
outsl
push
mov
sub
add
pop
xor
fmulp
xchg
movb
js
hlt
addr16
test
cli
jge
cmc
fmull
jae
pop
sbb
push
add
jl
test
mov
push
popf
xlat
jnp
dec
sbb
pop
rolb
mov
xorl
and
shr
enter
dec
lea
leave
hlt
push
sbb
add
sahf
gs
lea
int3
int
jl
jmp
je
add
out
adc
pop
xor
mov
lcall
push
leave
jo
mov
and
or
jno
lcall
bound
scas
ljmp
mov
mov
sub
fidivs
xor
test
int
in
pop
fiaddl
jmp
xchg
xchg
test
cmp
fmulp
lahf
fistpl
rcr
nop
cmpsb
add
xor
sub
movsb
xor
add
xchg
sub
mov
push
fisubrl
aad
push
pushf
jns
cmpl
in
sub
and
fwait
dec
cmp
loopne
dec
jl
arpl
mov
and
out
or
or
loopne
nop
pusha
fisttpl
xchg
fucomi
mov
cmp
or
cs
sbb
aam
mov
and
inc
popf
lods
sahf
test
fildll
jle
mov
negl
xor
or
xchg
roll
xchg
inc
sub
in
pop
dec
pop
ret
fwait
pop
rcrb
shll
in
jle
cmpsb
jne
xchg
jecxz
cmc
sbb
add
out
cs
rorb
jg
mov
xor
out
scas
sub
mov
push
ficompl
adc
das
pop
adc
push
addr16
jo
loope,pn
or
dec
inc
out
mov
xchg
sbb
xor
xchg
pushf
pushf
pop
sub
negb
adc
inc
mov
cltd
outsl
cmp
insl
sbb
out
xor
insl
mov
lock
pusha
cmpsb
jmp
mov
jg
mov
ljmp
lods
popa
ret
xchg
dec
mov
andl
xor
xchg
cmpsl
filds
dec
cmp
xor
outsb
shrb
xor
jne
stos
out
mov
mov
push
cwtl
xchg
imul
ja
daa
xchg
xchg
jecxz
in
mov
andl
or
mov
insl
pop
xchg
in
dec
sbb
movsb
sub
pop
test
push
pop
adc
xchg
fiaddl
sbb
icebp
out
and
jecxz
es
jno
push
inc
inc
xor
bound
je
lock
fsubr
mov
or
adc
push
mov
mov
into
mov
push
in
aam
jge,pn
dec
in
ds
fimull
sti
or
mov
icebp
mov
inc
jnp
sbb
stc
sbbb
cmp
rclb
fcomp
and
sti
xchg
movsl
add
ja
imul
imulb
lds
dec
add
cli
or
cld
in
adc
or
and
push
leave
xchg
mov
sub
add
movsl
fdivrp
es
shll
jmp
pop
lahf
xchg
inc
aad
aas
cs
lahf
js
fdivrs
inc
sub
insb
int3
sub
sti
jg
subb
fstps
lods
push
pusha
sub
mov
out
aas
stc
shrl
add
mov
xor
pushf
push
xlat
jg
jo
pop
and
std
out
int
stc
data16
fcmovnu
mov
jge
scas
mov
and
nop
push
out
lods
in
rclb
fildll
inc
cmc
sub
fs
and
xor
movsb
xor
xchg
mulb
and
lret
shr
mov
and
or
cltd
mov
int3
push
jp
mov
cs
in
mov
ret
loop
xor
xlat
test
or
fsubrl
aad
push
sbb
cli
lret
into
pop
xchg
outsb
lods
nop
lods
into
lock
inc
pushf
cmp
movl
sub
into
rorb
or
push
nop
mov
xor
roll
mov
jno
out
cmp
in
mov
nop
in
mov
popa
inc
cmp
fbld
scas
les
ret
xchg
jl
std
xor
dec
pop
cmp
das
pop
or
sub
out
and
fiadds
aam
scas
aaa
mov
mov
adc
pop
daa
pop
fiaddl
jne
pusha
jne
lods
cmp
mov
fpatan
push
pop
dec
sbb
cmp
mov
loop
push
cltd
leave
cmp
cmp
xchg
pop
idiv
add
jo
cltd
sub
sub
imul
ja
push
mov
cmpsb
lcall
add
inc
push
or
and
shrl
xchg
lret
xchg
loope
mov
pop
jne
adc
aad
jo
adc
pop
xchg
xchg
adc
add
imul
inc
cmpsl
jns
pusha
mov
out
lock
aas
xchg
movsl
inc
fs
iret
pop
loope
dec
fmull
xchg
mov
sbb
shrl
mov
jbe
xor
mov
test
push
ljmp
cmp
push
cltd
pop
rcrb
out
lret
sub
xcrypt-cbc
cmpsl
push
xor
ret
ss
and
aaa
inc
ficoml
pop
leave
xlat
push
xlat
lock
sbb
mov
mov
fcmovne
push
xor
mov
mov
pop
mov
test
push
in
jbe
cmpsl
sti
addb
int3
mov
jmp
aad
icebp
test
push
sbb
dec
and
in
sbb
push
int3
xchg
inc
pop
dec
les
out
sub
sahf
dec
sub
enter
fists
inc
jp
dec
jno
jle
jecxz
repnz
roll
jnp
dec
cmp
subb
add
scas
jae
mov
out
fildll
js
scas
aas
mov
jle
les
xor
dec
add
jle
pop
cmpsb
adc
jno
cmp
or
mov
push
outsl
sbb
push
dec
test
into
xlat
mov
pop
fcom
lret
lods
in
jmp
fsub
push
sub
add
xchg
mov
ljmp
mov
jae
popf
xchg
popa
loopne
sub
fldenv
sbb
add
mov
or
xor
rol
lret
xor
int3
pop
xor
and
sub
jle
cmp
push
pop
lock
push
adc
xchg
iret
pop
cmpb
mov
dec
addl
adc
data16
shr
xor
jmp
mov
stos
jbe
dec
mov
cwtl
les
inc
fidivl
and
push
or
sub
cmp
dec
pop
into
add
xor
jle
enter
rorl
dec
movsl
fiadds
addr16
scas
daa
or
pop
out
xchg
mov
leave
aad
xor
incl
inc
daa
sbb
dec
stos
inc
and
mov
sarb
add
ja
mov
push
mov
dec
movsb
push
loopne
xor
ret
fincstp
movsl
xorb
or
cmp
test
fwait
cmp
mov
pop
and
outsw
inc
push
lahf
dec
ljmp
inc
cmpsb
jle
dec
ss
popa
imul
int
scas
mov
in
inc
and
roll
dec
movsb
sub
ss
mov
push
inc
out
mov
ds
cli
and
jb
cmpsb
mov
jecxz
ret
ret
test
jge
mov
push
pop
cmpsl
jnp
xor
mov
bound
add
push
shl
sbb
push
pop
insl
insl
sbb
and
dec
das
pop
insl
cmpsl
dec
mov
adc
arpl
and
push
jle
out
jo
das
mov
inc
in
js
daa
and
pushf
stos
icebp
sbb
mov
mov
cli
arpl
xor
ret
lods
clc
in
cld
pop
push
xchg
fwait
or
inc
rorb
inc
jns
out
lds
pop
or
sub
dec
jecxz
push
mov
pusha
or
outsl
call
iret
imul
push
sub
rclb
call
mov
push
mov
xorps
mov
push
mov
jae
int
push
xchg
xor
ret
rcr
decl
push
mov
jnp
dec
mov
jge
sbb
cmpb
rcrl
stos
inc
sub
dec
mov
rcr
ja
lods
es
mov
or
andb
push
and
mov
fimuls
dec
or
out
adcb
push
and
mov
leave
xchg
fistl
in
adc
or
popf
mov
jg
outsb
xchg
sub
test
in
scas
adc
mov
lcall
iret
mov
lock
jno
cli
movsb
xor
ss
mov
mov
cmp
mov
push
rcll
nop
mov
push
pop
pop
dec
ds
sbb
mov
dec
std
mov
nop
sbb
hlt
xorl
lret
das
xor
jne
mov
pop
ds
setl
sbb
pop
sub
sarl
iret
shr
inc
xor
xor
popa
ss
ss
stos
pop
mov
sarb
pop
push
movsl
pushf
and
push
sbb
xchg
imul
mov
sahf
mov
cmpsb
into
cmpl
sbb
out
xchg
shll
sbb
out
push
pop
push
mov
mov
clc
adc
gs
insl
jmp
sti
rclb
repz
out
inc
cli
shrb
loop
js
int3
sbb
sub
inc
mov
sbbl
out
aas
int
inc
xchg
in
out
outsb
in
lea
sbb
and
insl
push
gs
sub
jb
pop
pop
in
xlat
cli
fiaddl
or
mov
push
cwtl
or
imul
dec
pop
das
pop
mov
mov
lods
ja
jnp
xchg
cld
cli
push
dec
mov
inc
pop
cmp
imul
cld
lahf
enter
arpl
aad
dec
mov
and
les
lds
out
outsl
mov
pop
inc
mov
push
out
push
popa
and
lahf
xor
ds
jo
jno
lcall
xor
jnp
fwait
inc
mov
rcr
jecxz
ss
shr
outsl
jns
sub
xchg
sbb
sub
push
cmp
cmpsb
pop
sbb
sub
fucomi
mov
fwait
je
ret
pop
ss
cmp
dec
pusha
call
jbe
test
jae
movl
push
add
imul
sbb
mov
adcb
push
pop
sbb
call
pop
pop
aas
idivl
ss
push
pushf
scas
jae
roll
jne
jbe
mov
dec
lahf
xor
cmp
push
lret
jne
test
rcll
mov
xor
and
push
push
into
mov
fs
mov
cmpsl
testl
es
mov
dec
jae
into
and
inc
scas
sbb
xchg
mov
aad
sub
or
int3
sub
push
shll
aaa
leave
xor
pop
cmp
mov
sub
and
test
and
popf
jmp
mov
sbb
jno
loopne
or
sub
mov
test
xor
fisttps
loope
mov
lea
and
xchg
rorb
sbb
xlat
mov
push
sub
mov
pusha
and
sbb
jle
fstpl
or
loope
popf
jl
je
pop
dec
iret
cli
ret
shrl
sbb
aaa
jmp
and
loope
mov
sbb
cld
or
mov
and
outsb
xorb
test
in
push
je
sti
arpl
out
js
jle
push
adcb
pop
and
push
xor
gs
lea
mov
and
or
jb
aas
add
sarw
xchg
ret
fstps
out
cmpsl
gs
xchg
aaa
fidivrl
fcmovbe
ror
xchg
cmp
clc
xchg
mov
decb
call
jl
je
jle
ret
or
pushf
dec
jge
xor
push
addl
cmp
movsb
pop
and
jnp
jl
mov
outsl
or
insb
or
test
or
jnp
xor
xchg
mov
mov
fmuls
jmp
rclb
out
stos
testb
aad
xchg
insl
jns
add
sub
icebp
mov
mov
or
mov
sbb
mov
out
adc
das
cmp
cmp
sub
jb
inc
mov
loopne
jmp
adc
arpl
cmp
lock
sub
iret
dec
and
gs
es
xchg
jne
dec
bound
hlt
pop
mov
int
sub
sti
sbb
xchg
lock
xchg
pop
push
and
out
and
mov
jg
inc
enter
testb
in
sub
jnp
loopne
push
mov
popa
adc
add
or
inc
bound
call
fcmovnb
push
cld
movsb
rorl
dec
sbbb
out
cmc
pop
outsl
adc
clc
mov
mov
outsb
outsb
push
push
push
jecxz
iret
lock
or
cltd
jg
inc
fcomps
push
jno
sbb
ror
loopne
add
scas
and
les
aam
daa
sbb
mov
jns
lds
push
mov
jg
int3
dec
cmp
jae
aam
mov
pusha
scas
in
ret
ss
push
idivb
cmp
dec
jecxz
and
addr16
dec
int
roll
xor
push
jo
gs
in
or
sub
mov
cmpsb
mov
out
add
pop
mov
lds
jmp
push
inc
int3
push
fnstsw
dec
sti
out
sbb
cmp
sbb
cs
mov
lcall
incb
dec
hlt
out
sti
cld
sub
mov
repnz
out
aam
or
in
add
and
dec
sub
sbb
jmp
int3
sub
shl
sub
scas
cmpsl
or
mov
clc
shll
sub
cmpsl
sarb
ret
mov
mov
xchg
xchg
and
int3
jecxz
lds
push
testb
cwtl
movsl
push
or
test
inc
jecxz
cltd
xorl
add
aaa
push
mov
cld
xor
pusha
jmp
jle
dec
mov
mov
popa
push
mov
inc
mov
sbb
in
jle
cmp
add
out
mov
or
sbb
pop
mov
mov
pop
fisubs
lods
cmpsb
int
mov
int3
dec
cs
cmp
addr16
outsl
mov
xor
add
xchg
pop
test
dec
mov
insl
and
adc
sub
sub
mov
rclb
and
dec
aad
fldl
push
push
hlt
bound
out
cs
cmp
push
ss
pop
movsb
imul
push
mov
out
rolb
shrl
outsb
and
je
mov
mov
xor
or
adc
or
jmp
out
dec
sbb
test
cmp
pop
mov
inc
mov
xor
mov
fdivs
xor
xchg
incl
or
fadds
sub
mov
push
orb
add
pop
aaa
mov
lods
out
divl
out
mov
fs
mov
bound
cmp
je
into
shlb
test
adc
mov
add
inc
mov
pop
adc
mov
cmp
adc
int3
cmp
addb
rolb
cmp
js
sub
pop
leave
rcrl
pop
inc
enter
sub
mov
jle
icebp
mov
jo
leave
or
sub
cmp
loopne
dec
stos
rorl
inc
inc
pop
lock
in
test
push
hlt
icebp
and
lret
std
xlat
push
mov
pop
xor
adc
push
sub
pop
gs
in
or
out
ds
push
cmpsb
add
pop
in
clc
lret
in
mov
fcmovu
mov
sub
test
andl
and
xchg
test
dec
lds
xchg
pop
js
clc
sub
dec
inc
pusha
cmpsl
or
and
hlt
push
xchg
inc
mov
testl
pop
pusha
movsl
fucomp
cwtl
push
enter
daa
nop
pop
orl
stc
mov
xchg
mov
cmp
loope
mov
cmp
sarb
outsl
add
movsb
in
xchg
mov
pop
dec
je
mov
addl
scas
frstor
clc
lods
mov
mov
xor
stos
mov
jbe
mov
or
xor
and
das
jb
lock
in
inc
mov
sub
mov
pop
js
and
mov
jl
lret
pop
bound
jns
cmp
test
ljmp
out
xor
cltd
jp
orb
push
pop
push
imul
add
jg
fwait
cmc
mov
dec
push
dec
xchg
pop
mov
ja
fistl
adc
adc
ds
jns
jne
leave
fisubs
lahf
mov
fwait
out
cs
push
sub
and
movsl
orb
ljmp
stc
mov
cli
push
cmp
testl
pop
mov
add
addr16
inc
or
mov
mov
push
aad
add
xor
xor
scas
inc
push
sbb
xchg
pop
push
scas
sbb
cwtl
ret
dec
inc
add
cltd
inc
sarl
push
jecxz
mov
inc
push
sbb
insb
cltd
shrb
mov
dec
pop
cmpsl
pop
add
jmp
ficoms
xor
push
fldenv
enter
push
sub
mov
xor
fbld
and
mov
add
push
xchg
adc
sub
xor
out
mov
sti
and
fidivrs
fisubs
and
stos
insl
xchg
aas
push
ss
sahf
mov
jbe
adc
pop
imul
push
scas
pop
fildll
int
or
mov
push
fcmovb
mov
add
sbb
push
mov
mov
push
repz
pusha
and
je
jae
rolb
pop
sbb
fsubrl
and
pop
mov
sbb
loope
fs
push
shrb
sbb
gs
and
movsl
test
pop
sahf
iret
jae
sbb
xchg
int
inc
arpl
adc
add
push
push
cmpb
jno
jae
mov
cmp
bound
add
add
mov
sub
push
cmpsb
movsb
push
in
pop
jo
xchg
sarb
add
or
jge
sbb
jp
aaa
adc
sbb
xchg
adc
ja
jne
outsb
cmpsl
xor
jne
loop
sub
rorl
lds
cltd
inc
pop
or
jae
in
push
adc
push
clc
mov
and
xchg
or
mov
cli
jae
dec
and
ds
in
adc
das
jmp
stos
cmpsb
mov
lea
arpl
vpsadbw
mov
fisttps
lret
gs
cmp
dec
repz
clc
call
popa
in
hlt
pop
les
adc
subb
adcb
pop
popf
xchg
call
mov
mul
mov
nop
les
xadd
scas
jns
std
in
inc
insb
mov
insl
pop
repz
adc
or
inc
in
lock
loopne
loop
mov
xchg
ja
sub
aad
into
fisubs
xchg
std
fistpl
jp
mov
imul
lahf
loope
xchg
xor
dec
lahf
pop
out
int3
jae
or
imul
add
aas
scas
inc
cwtl
fxch
stos
jno
push
cmp
pop
fldt
mov
divb
mov
lcall
jecxz
mov
jl
xchg
xchg
mov
addr16
sti
fcomp
orb
jl
fldt
mov
lcall
inc
mov
dec
ja
out
dec
jle
ja
dec
insb
push
adc
ljmp
jle
stos
shrb
inc
mov
cwtl
mov
cmp
pop
aam
out
sbb
pop
xor
and
add
lahf
adcb
inc
pop
imul
nop
mov
aam
andl
mov
clc
xor
xchg
adc
fs
imul
aam
jl
push
inc
xorw
xchg
xor
xor
mov
xor
mov
dec
test
dec
sbb
xchg
lea
dec
mov
out
add
mov
adc
daa
jmp
mov
sbb
add
add
test
xchg
cmpsb
mov
and
pushf
or
and
push
xorl
out
imul
lods
lods
loop
xor
jns
adc
fwait
loop
jno
stc
fdivr
hlt
fdivl
push
subb
mov
repz
push
push
cmovle
pop
in
dec
and
movsl
pusha
jne
pop
movsl
daa
add
inc
jns
icebp
and
lds
pop
dec
pop
push
clc
pop
or
pop
jge
push
jmp
pop
lcall
push
int3
adc
int
lret
jle
jge
call
std
jnp
xor
out
cwtl
sub
jmp
add
xchg
pushf
pop
xor
frstor
enter
xor
fstps
xchg
or
jnp
jo
out
xor
cli
les
fsubs
daa
fmul
les
gs
dec
cltd
inc
jmp
xlat
jecxz
fildll
sbb
icebp
nop
and
shrb
leave
or
inc
xchg
fwait
jmp
mov
pop
pop
sub
or
lret
popf
add
std
in
push
cs
pop
mov
xchg
fimull
jbe
cs
or
out
xor
lret
cld
clc
std
mov
fists
ds
push
or
dec
sub
es
mov
mov
adc
mov
in
and
ss
imul
cmp
aam
sub
mov
sbb
mov
mov
cwtl
in
xchg
decl
sti
idiv
fists
ret
and
cmc
xchg
ficompl
mov
jmp
out
arpl
mov
push
jno
sbb
adc
cmp
pop
xor
aad
stos
mov
cmp
imul
push
nop
mov
cmp
adc
repz
daa
mov
cs
addr16
mov
dec
inc
icebp
cmc
mull
jle
sub
pop
sbb
lods
xor
mov
in
add
xor
aam
jnp
fwait
mov
call
sbb
xor
pop
inc
mov
or
lret
in
mov
in
ret
add
sub
insb
orb
jns
push
decb
mov
jo
mov
pop
sub
push
xor
test
jae
daa
add
and
pop
jne
push
push
addb
mov
push
sbb
fidivrs
sub
sbb
aad
in
xor
mov
mov
mov
mulb
dec
dec
lods
jbe
lret
lcall
sub
imul
sti
mov
jo
sub
outsb
sub
adc
dec
test
ss
lods
daa
std
daa
cmpsb
popf
jp
in
loopne
stos
pop
pop
outsb
add
int
add
es
pop
test
test
scas
ja
scas
inc
sub
inc
mov
adc
sbb
dec
popa
mov
pop
call
or
mov
push
sbb
cmp
lock
inc
ret
mov
inc
cld
rorl
adc
repnz
lcall
popf
adc
shll
xchg
movsb
cltd
les
in
mov
faddl
mov
pop
mov
add
xor
push
fucomi
xor
adc
cmp
jle
inc
rclb
inc
push
int
mov
xchg
lcall
ss
test
loope
push
xchg
icebp
cmp
jp
push
ficoms
mov
mov
or
jns
arpl
inc
repnz
sub
cltd
mov
insb
add
in
stos
int3
pop
loope
pop
mov
cmp
icebp
dec
push
push
jne
pusha
loop
cmp
imul
sarb
mov
xlat
inc
push
adc
dec
lcall
adcb
sub
outsb
push
orl
mov
or
data16
mov
lods
pop
in
or
jp
cmp
ret
push
jno
ret
es
cld
ud0
push
insb
dec
pop
jle
jmp
jnp
dec
mov
lods
pop
pop
mov
pop
adc
loopne
and
push
push
les
cmp
or
nop
cmpsl
and
cmp
out
je
outsb
ds
sub
scas
add
jl
sub
adc
pop
fisttpll
lds
int
mov
hlt
mov
push
data16
mov
cmp
adc
xchg
mov
incb
push
cmp
inc
xor
pop
stos
ficoms
add
ficoml
dec
jg
dec
mov
ljmp
dec
dec
inc
lahf
inc
pop
xor
sbb
pop
jae
data16
mov
push
lret
add
dec
popf
pop
fsubrl
xor
fimuls
pop
mov
xchg
subl
push
mov
and
cmp
push
outsl
inc
daa
mov
sbb
and
shrl
rclb
xchg
jl
or
lea
jmp
mov
mov
mov
jle
add
push
into
rclb
popa
mov
fsubrl
cmp
xchg
outsl
rcrb
dec
add
lcall
insl
or
jne
pop
and
cmp
cmp
mov
or
mov
mov
popf
inc
mov
sub
call
mov
cmpsl
sub
xchg
adc
sub
mov
pushf
fsubrl
jp
xchg
in
loope
das
popa
dec
xor
std
data16
ljmp
mov
jnp
push
cmpsb
adcb
cli
push
dec
sub
xor
xor
call
fldcw
xor
xchg
jp
arpl
cmp
xchg
cmpsb
adc
dec
bound
sub
push
fldl
notb
lcall
pop
xchg
je
adc
xchg
bound
popf
in
lods
jge
insb
icebp
sbb
pop
or
cwtl
mov
sarb
or
mov
and
repz
xor
jne
mov
push
push
xor
aam
cltd
mov
jno
popl
pop
inc
inc
je
cmc
mov
jecxz
pop
test
adc
push
mov
mov
mov
lret
lar
or
pop
inc
loope
mov
insl
divl
sub
mov
pop
or
rol
jmp
loop
mov
add
xchg
dec
dec
xor
ja
test
mov
nop
mov
jns
repz
fisubrs
cmpsb
mov
jbe
sbbb
movsb
sbb
sarl
adc
xor
sbb
adc
jmp
pop
push
lret
mov
nop
stc
je
aaa
les
cwtl
icebp
loope
rcll
testl
and
repnz
xor
jo
mov
xchg
rorl
ja
jp
mov
sub
dec
cltd
mov
adc
sub
inc
repnz
and
adc
fldcw
pop
push
imul
out
dec
lcall
int3
mov
sub
iret
xchg
pop
pop
lds
stos
inc
mov
lea
rolb
mov
in
loope
xchg
dec
adc
xchg
mov
or
mulb
sti
pop
mov
js
test
jmp
xor
mov
or
dec
or
jb
leave
xchg
pop
lahf
lds
mov
adc
adc
mov
fcomi
jae
jno
mov
or
adc
fnstenv
sub
sub
sbb
cli
test
mov
int
jnp
icebp
mov
mov
ds
mov
data16
mov
xchg
aad
ljmp
repz
fdivrs
mov
add
cmpsl
jp
xorl
adc
mov
arpl
or
out
push
and
pop
scas
lds
mov
sbb
push
aaa
sub
in
jmp
mov
inc
imulb
jp
xchg
sub
repz
mov
xchg
aas
adc
scas
pop
js
mov
scas
sbb
addr16
inc
push
clc
mov
pop
mov
cmp
shll
cmp
dec
jno
mov
mov
sbb
jecxz
sub
shl
xchg
cli
jbe
push
sbb
shrl
and
jp
vunpckhps
push
mov
or
push
out
js
and
dec
and
popa
icebp
sbb
outsb
cmp
lret
out
aam
sahf
xlat
or
inc
mov
aad
cmp
inc
inc
mov
movsl
jbe
clc
mov
push
loopne
popf
inc
cmpsl
out
aad
add
ljmp
hlt
mov
and
jg
cld
lods
and
sub
inc
mov
ss
aaa
push
xor
gs
dec
push
mov
mov
repz
sbb
xchg
and
stos
repnz
inc
mov
pop
cli
in
js
fisttpll
sbb
and
adc
mov
or
or
jns
imul
sbb
outsb
aam
mov
xchg
daa
xor
cmp
push
push
lods
mov
shrd
shl
test
shr
dec
xchg
es
jg
and
fs
rolb
rcrl
sub
hlt
cmc
shlb
call
mov
push
sahf
sbb
fidivrl
shl
jecxz
ror
cmp
dec
mov
jg
shll
lcall
or
js
jo
sub
iret
out
mov
jb
mov
sub
dec
xchg
dec
mov
add
mov
test
jbe
push
cmp
jae
les
fdivs
rcr
sbb
sub
xor
cmpsl
mov
cmc
sub
inc
pop
sub
add
jg
negb
popf
lods
or
mov
lods
push
xor
inc
cld
cmpb
pop
outsl
and
ret
in
jg
xchg
cmpsl
les
pop
sti
insl
outsl
xorl
loopne
cmp
psrlw
scas
pop
out
and
popf
sub
arpl
push
movsb
cld
repnz
mov
or
mov
add
in
adcl
push
aas
sub
loopne
mov
orl
jnp
sbb
and
mov
ds
stc
add
scas
sbb
out
and
bound
lds
data16
loop
outsb
les
ret
sub
pop
imul
mov
cli
rcr
add
mov
or
mov
or
xchg
pop
enter
push
and
push
fsts
and
loope
add
cltd
or
and
mull
jp
out
mov
mov
mov
inc
mov
inc
adc
inc
sti
lods
sub
mov
popf
in
scas
std
lret
jmp
push
loope
das
xlat
sbb
sbb
in
gs
insl
fisttps
jne
adc
jmp
mov
jp
sub
or
test
xchg
add
jne
mov
lods
neg
addr16
mov
dec
xchg
mov
out
hlt
and
sub
lea
cltd
adc
pop
pop
clc
push
jbe
dec
ret
mov
pop
sub
cltd
jb
ss
movsl
sbb
sahf
sbb
jnp
xor
xchg
dec
push
std
mov
mov
fldl
xchg
ja
inc
dec
adc
int3
mov
arpl
and
or
iret
pop
sub
faddp
imul
and
xlat
xchg
mov
mov
inc
mov
jl
pop
jg
ds
icebp
cmp
sti
pop
lcall
sti
push
hlt
sub
scas
inc
jbe
sub
dec
inc
icebp
add
cmp
and
xor
jns
int3
ljmp
lahf
inc
imul
data16
gs
fwait
adc
sar
adc
int3
nop
pop
push
pushf
xor
ficoms
std
push
mov
dec
add
pop
ljmp
push
call
cmp
and
hlt
scas
mov
in
nop
bound
inc
dec
or
ret
push
sbb
jmp
jae
mov
push
lcall
stc
pop
xor
imul
out
cwtl
mull
push
add
pop
pop
enter
add
into
jno
sbb
stos
jl
rol
test
or
inc
mov
mov
pop
pushf
xchg
sbbl
gs
push
jnp
xlat
cld
adc
in
sub
repnz
push
adc
daa
clc
or
sub
setle
mov
and
sbb
jno
outsb
fwait
sbb
pop
insb
iretw
lods
subb
ss
mov
sub
ret
push
test
dec
add
sbb
pop
loopne
nop
sbb
push
mov
sahf
cmp
mov
cmpsb
repnz
push
sahf
clc
stc
enter
ss
addr16
dec
cmpsb
sub
inc
push
pushf
jp
idivb
sar
xchg
icebp
jno
jb
dec
mov
add
xor
addb
data16
aaa
lret
in
cmp
push
js
fdiv
fisubl
arpl
xchg
adc
mov
addr16
fst
enter
adc
sub
call
adc
add
fisttps
or
adc
sub
mov
or
addr16
and
xchg
mov
pushf
int3
test
add
jnp
mov
mov
sarb
jbe
outsb
lock
fisubrl
movsl
movsl
test
sub
out
insb
inc
add
movl
lds
jge
pop
gs
cmpsb
inc
jbe
push
pop
push
fwait
mov
dec
jmp
cmpsb
inc
adc
pop
out
jge
pusha
in
dec
sub
xchg
adc
mov
push
popa
movsl
mov
push
mov
dec
push
inc
adc
mov
jp
sbb
stos
sub
inc
xor
mov
xor
pop
jnp
repz
orl
aas
lahf
sbb
rcr
inc
cmp
mov
into
repz
sbbb
xor
pushf
jno
lea
pop
ja
jl
hlt
mov
and
pop
push
lret
sbb
push
dec
ljmp
ss
ficoml
lahf
scas
fld
mov
mov
xor
scas
jmp
add
stos
push
xor
adc
sub
xor
enter
mov
xchg
iret
pop
jnp
fdivrs
imul
sarl
test
push
or
lahf
sbb
jb
arpl
xor
jle
inc
mov
push
mov
adc
mov
push
rcrl
inc
ret
rorl
xlat
xchg
jae
add
in
jns
mov
daa
out
inc
jmp
fmull
dec
xchg
sub
fmuls
xchg
push
js
out
mov
pop
sub
sahf
repz
call
xor
js
clc
in
lahf
mov
add
cmp
cwtl
xor
mov
xchg
adc
sbb
daa
and
rcr
xchg
lock
add
xchg
jb
sahf
xchg
cmp
mov
imul
ljmp
lahf
push
jge
dec
outsl
test
setg
popf
fwait
jne
pop
lods
jg
pop
jns
adc
iret
add
notb
fidivrs
lds
out
add
inc
or
je
push
jns
scas
enter
xor
xchg
pop
loopne
adc
inc
and
lret
sbb
aas
xor
push
scas
out
popa
sbb
sub
mov
frstor
sub
mov
ds
test
inc
inc
pushf
mov
ret
xor
dec
pop
imul
dec
leave
ret
test
xchg
cmc
xchg
dec
pop
adc
mov
xor
or
add
dec
sahf
cmp
int3
xor
add
fisttpll
outsb
push
fmul
loop
adc
push
inc
jnp
mov
jae
dec
xchg
cmp
add
nop
fnstsw
adc
sub
js
mul
jmp
mov
cmpsl
xchg
mov
and
mov
sbb
test
int
xchg
and
adc
insl
xchg
gs
sub
sub
sbb
pushf
pop
jecxz
aas
mov
mov
insl
dec
or
add
sub
adc
stos
inc
jno
pusha
int
xchg
mov
push
pop
ljmp
insb
cmc
stc
fidivl
daa
push
in
movsb
imul
xchg
add
mov
xchg
sbb
sbbb
repnz
and
testb
or
jg
push
stc
mov
int3
inc
adc
repz
xor
ret
ss
cltd
push
sub
cwtl
jmp
xor
xchg
jo
insb
sbb
xor
adc
es
fidivl
mov
xor
stos
jnp
int3
adc
xor
andl
in
or
jno
loopne
negl
test
mov
pop
push
jns
rol
iret
call
xchg
cmp
sub
cmp
push
jne
mov
aad
aaa
push
in
outsb
ror
xor
cmp
xor
add
dec
test
movsb
inc
pop
roll
sbb
fmull
ud1
or
out
les
inc
cmp
dec
dec
in
arpl
mov
cmp
jo
cltd
aad
mulb
pushf
sbb
and
sub
xchg
push
dec
data16
pushl
sbb
in
xor
test
cmp
in
xchg
mov
hlt
out
repnz
adc
hlt
shl
fnstenv
mov
jmp
lahf
scas
cwtl
repz
lret
aaa
lock
sbb
rcrb
cmp
cmp
stos
cmp
mov
xchg
or
push
les
pusha
inc
mov
rorl
xchg
aam
bswap
cmp
jo
push
ror
ds
mov
imul
outsl
pop
fs
push
aas
mov
scas
insl
and
dec
dec
psrad
mov
fistps
mov
sti
jb
mov
xor
push
insb
aam
insb
mov
test
jnp
mov
sbb
out
loop
cmp
inc
jb
pop
xor
popf
dec
jno
pop
pusha
and
stos
mov
xchg
js
call
mov
add
push
sti
dec
add
inc
out
dec
inc
or
mov
xchg
adc
pop
sub
popfw
mov
and
xchg
movsl
and
js
jns
cmp
adc
lock
add
pop
fld
jmp
cmpsl
or
mov
jo
jb
xchg
lcall
mov
loopne
jecxz
jl
xor
mov
push
mov
shld
filds
xchg
movsl
mov
je
mov
mov
fistpll
mov
add
cmp
ret
das
mov
inc
movsb
jecxz
dec
adc
dec
push
mov
bound
mov
xor
hlt
xchg
ficomps
sub
leave
sti
mov
and
sub
push
lock
je
inc
rorl
gs
test
push
mov
push
or
mov
cmp
xchg
xchg
mov
pop
dec
mov
mov
pop
and
movsb
arpl
shl
inc
fimuls
fidivs
xchg
lcall
xlat
cmp
push
iret
es
sbb
ss
aas
or
sub
or
into
and
mov
xchg
jl
ficompl
adc
stc
push
aam
shr
xchg
pop
mov
nop
in
xchg
lret
ret
mov
sahf
mov
jnp
cmp
rcrl
repz
fisubs
ja
jmp
dec
push
jle
mov
mov
adc
test
rorl
sarl
xchg
xor
xor
or
lods
scas
jg
icebp
add
lret
sub
lea
push
stos
xor
sbbb
pop
pushf
test
lods
stc
fdivl
outsb
cltd
or
mov
lods
rorb
daa
jnp
cwtl
test
xchg
or
pop
int
push
shl
jnp
xor
loopne
sub
outsb
dec
fimuls
mov
sbb
pop
cmp
movsl
std
pop
xchg
xchg
in
cli
or
sub
mov
les
pop
xchg
lods
imul
insl
add
push
jecxz
push
cmp
sub
dec
idiv
mov
inc
loopne
mov
insb
cmp
mov
out
cwtl
cmpsl
xor
xor
or
pusha
mov
ss
pop
mov
loop
add
dec
call
mov
cwtl
lds
fucom
jge
mov
inc
test
sbbb
data16
cli
enter
sbb
pop
sbb
mov
scas
cmc
mov
jns
mov
sub
lahf
sub
pop
or
adc
rcrb
cwtl
dec
xchg
cmp
xorb
test
fildl
push
dec
xchg
sub
lcall
fisttpl
inc
mov
nop
xor
pop
mov
jbe
mov
push
jmp
mov
scas
mov
lock
rcrb
or
subl
daa
cmp
call
add
int3
push
ss
inc
xlat
lds
push
in
push
je
mov
add
pop
push
imul
fcoms
je
incl
ljmp
dec
or
popf
fidivl
fwait
push
mov
pusha
fs
fidivs
push
lock
cmc
into
cli
and
adcb
mov
sbb
test
inc
les
xchg
mov
xlat
data16
push
mov
dec
xchg
call
xchg
push
pop
xor
cmp
int3
add
push
lds
shrb
into
xchg
mov
inc
lret
mov
push
xor
pop
rcl
lea
test
jae
aaa
push
fwait
inc
jge
in
stos
outsl
pop
jecxz
aaa
mov
out
movl
cmp
test
mov
and
lock
pop
std
dec
mov
scas
sub
adc
and
outsl
ljmp
popf
pop
push
imul
fsub
cmp
mov
jge
add
jmp
ljmp
lea
jl
or
mov
aaa
xchg
mov
xor
mov
scas
push
cs
add
cli
lcall
dec
rcrb
add
mov
mov
pop
mov
ficoms
stc
push
pop
dec
hlt
jg
inc
mov
jnp
test
adc
sub
push
incb
cmpsl
push
add
ja
inc
sahf
xlat
rorb
xchg
daa
sbb
imul
sahf
mov
mov
andl
inc
mov
sbbb
adc
push
aam
push
pop
aam
sub
fisubl
mov
ror
imull
push
cmp
in
imul
popa
jae
repz
leave
fs
sbb
cmp
and
cli
sbb
mov
mov
sub
lea
loopne
test
cmp
jb
iret
out
ds
lods
mov
imul
loope
or
in
adc
sti
pop
inc
dec
aad
pop
xor
and
fs
aas
push
cmp
xor
js
xor
lods
or
and
fs
cmpsl
aas
mov
je
insb
push
idivb
inc
mov
outsb
cld
leave
out
mov
cs
jne
mov
sub
adc
adc
add
in
faddl
movsb
mov
bound
orb
push
daa
into
movsb
add
jb
rorl
outsl
xchg
inc
inc
pop
dec
dec
inc
ret
jl
and
sar
inc
jecxz
sbb
pop
mov
cmp
and
pop
push
movsl
push
icebp
shl
outsl
or
aam
adc
int3
sub
inc
push
sub
cmp
aaa
sub
enter
mov
imul
das
fxch
loope
in
gs
jg
xorl
mov
xor
and
leave
clc
xchg
movsl
loope
push
stc
pop
out
repz
pop
repz
xchg
or
test
sbb
lds
stos
mov
ljmp
imul
insl
clc
add
cmp
cltd
lods
scas
in
lods
dec
xlat
xorb
cs
mov
push
fiadds
pop
mov
lods
inc
int
imul
and
ret
xor
pop
pop
cmc
in
in
cmp
mov
pop
clc
mov
in
push
mov
add
xchg
adc
scas
pop
push
and
cmc
shl
scas
mov
mov
ss
sub
ret
and
mov
dec
andb
cmp
mov
push
ret
das
mov
imul
mov
mov
cmc
gs
lahf
loop
push
ljmp
jnp
repnz
roll
aam
xchg
sub
mov
push
lock
sub
xor
fiaddl
push
ss
lcall
das
cli
fiaddl
es
outsl
mov
les
ss
scas
cwtl
cmp
mov
xchg
loopne
pop
mov
cltd
fnsave
push
pushf
cwtl
adc
add
xchg
push
dec
and
jmp
daa
icebp
clc
fwait
sbb
je
sbb
out
or
out
not
cmpsb
subb
call
inc
bound
jbe
sub
push
pop
or
daa
or
xchg
push
add
lods
mov
out
mov
outsl
mov
jbe
pop
dec
mov
fimuls
xor
mov
cltd
mov
xor
or
scas
sbb
pop
pop
sub
mov
aaa
push
addb
mov
xor
nop
in
adc
inc
lds
and
ret
and
sbb
sub
and
adc
stos
lret
rcll
insl
push
mov
push
sbb
jnp
stc
sarl
push
jbe
rolb
and
repz
lcall
sbb
out
pushf
insb
mov
push
jg
loope
fs
ret
cmp
dec
cmpsb
ss
add
sub
test
jecxz
push
adc
dec
sbb
arpl
sti
es
mov
adc
pushf
jnp
lcall
fistps
gs
pop
movsl
sbb
xlat
jp
pop
out
or
add
std
mov
cmp
or
cmpsl
xchg
mov
mov
in
sub
rorb
test
pop
out
or
xchg
movsl
xchg
mov
jmp
negb
addl
jnp
adc
or
jg
jnp
repnz
fnsetpm(287
mov
repnz
add
rcrb
push
imul
pushf
or
outsb
jmp
sti
xlat
je
pop
mov
or
loop
call
notl
mov
jns
pop
js
nop
mov
and
push
fwait
and
mov
cmp
imulb
enter
and
jo
lret
stos
daa
adc
or
push
scas
test
jbe
xchg
push
dec
shll
pop
aad
int3
dec
adc
mov
lods
mov
movsl
lcall
sbb
pop
loopne
mov
das
adc
notl
sub
mov
mov
push
mov
scas
xor
adc
sub
push
out
mov
in
cwtl
fstl
and
xlat
ret
xor
xor
mov
push
rcll
mov
xlat
sub
bnd
aas
inc
fs
popf
cltd
mov
mov
dec
nop
jp
xor
sti
in
cmp
das
cs
push
es
repnz
xchg
cmp
jecxz
loop
dec
rclb
inc
mov
out
add
idiv
icebp
lcall
or
xchg
test
pop
cmp
pop
jns
mov
imul
lods
mov
lret
mov
jp
aad
mov
sub
mov
mov
xchg
test
fsubrs
cmp
arpl
xchg
jno
stos
adc
xlat
dec
lret
repnz
xor
xchg
or
push
jecxz
out
cmp
pop
pop
jae
jae
mov
lret
aam
sbb
dec
dec
les
pop
clc
pusha
jp
leave
adc
out
cmpsl
int3
jge
jp
mov
loop
dec
dec
scas
sub
cmpb
clc
pop
in
imul
dec
xchg
loop
push
sbb
scas
jle
insl
mov
add
pushf
lret
ret
mov
outsb
jno
pop
nop
iret
xchg
fnstsw
inc
xor
loope
mov
inc
or
ret
sbb
je
out
mov
xorl
test
loopne
lods
inc
xor
mov
xchg
lock
call
push
fistpl
jmp
ja
mov
test
ret
mov
pop
xlat
dec
popa
repz
scas
mov
and
cmp
das
ss
push
inc
test
push
push
cmp
outsb
sbb
mov
rolb
sbb
lcall
sbb
daa
mov
cmp
cmp
lea
and
pop
in
jge
fnstcw
and
outsl
into
iret
add
xchg
popf
mov
jno
adc
ss
xchg
enter
xchg
sbb
addr16
mov
test
jl
mov
aas
nop
lods
mov
pushf
pop
shr
scas
mov
leave
add
xchg
xchg
pop
sub
or
loop
ficoml
jbe
mov
mov
mov
dec
jo
or
or
and
movsb
xor
cmp
es
mov
push
std
shrb
jbe
xlat
clc
andb
sbb
inc
stos
insb
fsubrl
stc
inc
push
dec
sbb
cmpsl
jnp
lret
test
aas
push
jo
and
cmc
dec
or
xchg
loop
sti
push
outsb
xor
int
fcomip
mov
cmp
cmp
lock
es
ljmp
movsl
cmp
mov
pop
test
jbe
mov
mov
xchg
test
lods
add
add
pusha
mov
fbld
jbe
pusha
push
pop
adc
lcall
pop
lock
fs
fdivl
sbb
test
jle
out
subl
jge
xchg
mov
sub
ds
fs
mov
xor
inc
mov
jmp
gs
int
add
mov
cmp
test
push
mov
pop
adc
cwtl
or
roll
lret
xchg
enter
sbb
fcomip
sbb
push
insl
repnz
mov
test
dec
mov
jecxz
add
addr16
xlat
cmp
and
lret
mov
xor
cmpsb
xor
movsl
fwait
adc
pop
movsb
add
mov
or
lods
sub
mov
cmp
aaa
js
xchg
adcl
pop
mov
xchg
push
shll
push
sub
push
mov
sub
or
cltd
jmp
int
out
dec
in
xor
xchg
xchg
fists
test
or
ret
or
mov
dec
cld
adc
fwait
mov
push
enter
jp
je
out
mov
in
xchg
jo
xorb
cmp
pop
pop
push
cmp
repz
std
jno
mov
adc
cmp
cmovo
push
inc
jg
into
mov
ret
mov
mov
pop
jecxz
std
or
sub
sti
lock
xor
mov
mov
outsl
sbbb
cli
nop
dec
jae
push
cmpb
int3
push
ss
jnp
add
call
xchg
jl
mov
lds
and
pop
push
mov
out
outsb
adc
add
inc
aas
movsl
dec
cmp
fidivrl
divb
popf
cld
xchg
nop
mov
xlat
insb
push
stos
mov
sbb
inc
pop
lahf
insl
orl
jmp
in
or
sbb
mov
mov
pop
in
jp
cli
and
mov
sbb
stos
hlt
cmc
mov
insb
sahf
dec
mov
inc
std
sub
sub
pop
stos
movsb
cmp
outsb
cmp
fwait
and
jmp
loopne
lahf
insl
jae
xor
xchg
fisttpl
or
es
add
mov
fisubrs
lcall
dec
xchg
mov
aaa
jge
mov
push
fs
and
cmc
pop
mov
pusha
sub
imull
test
lods
test
adc
vmovlps
shrb
scas
stc
dec
jecxz
jae
xchg
jne
sbb
divb
lods
adc
mov
mov
pusha
out
sbb
cmpsb
jnp
cmp
aaa
adc
dec
or
mov
sub
push
push
dec
xor
mov
aas
dec
push
rorb
push
scas
xchg
mov
lcall
orb
mov
pusha
inc
inc
lds
out
jl
sbbl
and
mov
inc
inc
jecxz
add
cmc
or
scas
xchg
add
push
mov
repz
jno
bound
jo,pn
pop
insl
gs
jecxz
je
jbe
sbb
lea
out
loopne
popf
mov
and
xorl
push
shr
push
aad
lods
jne
inc
jl
and
xchg
cmp
mov
xchg
leave
loop
js
push
cmpsl
cmp
daa
push
cmp
das
push
mov
xchg
loopew
add
xchg
bound
jecxz
popf
add
xchg
movsl
xchg
out
sub
jl
inc
ds
mov
outsl
faddl
daa
add
lods
push
mov
lods
cmp
xchg
xor
inc
mov
adc
mov
and
imul
jle
xorb
test
push
push
fnstcw
lret
lds
fiadds
addl
inc
dec
test
push
inc
adc
std
js
sub
pop
mov
adc
inc
mov
xchg
push
add
pop
js
cli
pop
fwait
dec
jge
idiv
pop
aaa
dec
std
mov
pushf
xchg
popf
inc
out
enter
ja
mov
es
pop
xchg
test
mov
fiaddl
sahf
mov
mov
ja
push
add
test
subl
xchg
sub
mov
jg
inc
int3
sub
std
pop
stos
cli
xchg
sub
jns
mov
fdivr
or
pop
cmpsb
loope
xchg
les
mov
clc
mov
xchg
add
shll
mov
aas
jle
pop
sub
push
out
dec
test
add
dec
hlt
and
inc
addl
sti
xchg
scas
mov
add
push
sub
adc
lods
jno
jg
ljmp
aad
mov
and
daa
sub
xchg
dec
push
mov
cmc
shll
push
xor
mov
push
imulb
xchg
jmp
ficoml
mov
mov
jbe
jae
fisttpll
inc
mov
bound
out
xchg
loope
into
push
jnp
dec
jecxz
pop
mov
imull
mov
inc
sbb
movsb
std
mov
or
sbb
movsl
pop
inc
push
mov
jmp
lcall
filds
lea
mov
add
cld
scas
addr16
mov
push
cltd
xchg
sub
cmp
cmpsb
mov
cmc
push
sub
test
ret
jae
popf
dec
sub
sbb
lock
hlt
dec
ds
jg
dec
mov
popf
insb
nop
into
add
adc
mov
push
adc
push
imul
outsb
cli
sbb
subl
xor
cmp
xchg
inc
sbbb
mov
sarl
inc
clc
or
in
inc
ret
adc
das
sbb
into
lret
pop
aaa
sti
xorl
movl
or
jns
sub
jle
orl
and
add
call
sub
popf
clc
push
fisubl
adc
add
push
lds
xchg
jbe
and
ud1
xchg
out
scas
lahf
add
lret
leave
push
imull
dec
push
sub
ss
hlt
lret
bound
inc
in
push
rorl
jne
test
add
jae
jne
mov
mov
cmp
out
push
xor
dec
cmpsb
lods
add
mov
inc
fimuls
dec
sub
mov
adc
negb
adc
test
sbb
arpl
push
lds
push
fbstp
or
decb
mov
mov
xchg
ds
jo
popf
xchg
jno
out
dec
in
inc
in
sarl
mov
mov
stc
jl
arpl
jp
ja
je
xchg
lret
xchg
jg
jg
xchg
fildll
fs
lea
mov
cmp
cmp
cs
sbb
orl
add
shlb
mov
dec
or
rcll
loope
add
popa
dec
test
or
fmull
adc
mov
mov
repz
insl
std
loop
mov
sub
cmp
bnd
push
enter
and
mov
xor
xchg
int3
or
inc
faddl
fdivrs
mov
lods
xchg
mov
cmp
faddp
sub
loopne
call
push
xchg
xor
sub
jns
in
add
leave
and
jns
mov
adc
insl
pop
adc
out
dec
mov
daa
iret
outsl
pop
pop
das
fs
jmp
arpl
in
push
insl
fbld
and
shlb
sarl
pushf
mov
xchg
and
mov
or
or
jmp
or
push
push
adc
lret
pop
repz
pop
pop
jg
stc
pop
push
iret
mov
pop
dec
mov
shlb
mov
cmpsl
push
sub
insl
fsubs
xchg
cmp
jmp
repnz
fldcw
imul
jae
jecxz
push
imul
mov
cmpsb
shl
loopne
sbbb
out
dec
ss
pushf
mov
out
jmp
adc
iret
enter
xchg
movsb
add
ja
outsl
mov
adc
add
jae
fcomps
and
imul
sub
out
imul
mov
or
inc
xchg
aas
mov
mov
shrl
sub
and
movsb
test
mov
sub
mov
sbb
imul
in
dec
ficoms
nop
std
int3
test
aaa
push
loop
ss
mov
pop
dec
test
sub
loope
decb
and
adc
cmp
mov
sbb
cmp
push
adc
sbb
cmpsb
sub
repz
outsl
bound
test
sbb
xor
mov
adc
inc
mov
and
testb
ja
or
xor
addr16
push
call
lcall
xchg
adc
cmp
gs
shl
cld
sbb
mov
pop
shrb
dec
js
scas
call
adc
jle
hlt
inc
cmc
stc
xor
dec
mov
into
imul
bound
repz
fsubrs
call
inc
pop
pop
jmp
out
xchg
in
sbb
mov
lods
mov
xchg
adc
subps
push
add
mov
fadd
xor
outsb
jns
push
jb
jae
or
cmp
sbb
xchg
mov
es
outsl
jp
or
aas
adc
call
fnstcw
push
xchg
loopne
scas
jb
jno
call
mov
test
stc
lods
es
stos
or
rorb
push
lea
pop
ljmp
out
mov
mov
sbb
cltd
test
test
or
cmpsl
divb
mov
push
jno
xlat
push
dec
inc
shrb
jne
movb
out
xor
cmp
or
sub
out
jb
orl
mov
push
arpl
pop
add
mov
hlt
in
addl
sti
inc
out
movb
mov
testl
iret
xor
cmp
repz
loope
cltd
mov
cmp
xchg
xchg
test
gs
sub
pop
aas
cmc
in
mulb
adc
mov
adc
jl
rcrb
cmp
scas
ja
cmpsb
mov
das
addr16
jle
out
enter
imul
cwtl
add
mov
into
repnz
outsb
jmp
inc
pop
cltd
sahf
ja
aas
mov
das
sbb
bound
fisubrl
and
mov
xlat
leave
stc
ror
insl
mov
xor
out
or
jne
ret
movsb
lods
jmp
xchg
sub
or
test
xchg
out
xor
push
cmc
aad
aas
into
sbb
mov
movsb
xchg
dec
add
mov
out
aam
and
cld
pop
pop
push
lds
enter
and
aaa
add
icebp
cltd
frstor
fidivrs
ja
dec
gs
std
sub
push
filds
lea
inc
outsl
pop
into
ja
jecxz
das
jo
cmp
xchg
pop
pop
or
ljmp
fadd
pop
ficoms
or
ret
xorb
out
in
sbb
jae
xor
xchg
outsb
imul
jg
insl
movsl
mov
ret
sub
and
push
loope
aam
adc
mov
pop
mov
and
in
sbb
ret
add
ja
add
pop
add
xor
dec
jne
fisttps
mov
add
or
mov
test
or
add
xchg
jne
in
in
push
test
ret
jl
sub
inc
adc
adc
pusha
or
jle
pop
cmp
lcall
sahf
in
aam
sahf
ja
nop
aam
sbb
pop
sbb
fstps
dec
lods
pop
inc
inc
aas
inc
mov
inc
iret
pushl
mov
js
les
outsl
dec
pop
into
int
mov
pop
scas
and
js
out
jne
pop
outsl
inc
cmp
dec
daa
add
fidivl
mov
ret
mov
mov
adc
dec
cs
add
orb
pop
fidivs
fwait
lock
sbb
leave
mov
adc
sbbb
push
jg
jl
int
gs
push
adc
mov
xor
mov
jnp
imul
cmp
cmp
xchg
push
js
dec
jnp
ljmp
enter
xor
dec
fs
pop
mov
loope
push
xchg
push
lock
push
sub
mov
mov
dec
bound
mov
add
push
jmp
movsl
in
out
int
sub
enter
outsb
stos
push
cmp
nop
fmuls
rorb
dec
lods
je
mov
fwait
xchg
and
bound
inc
pop
cld
sub
cmp
out
sbb
int
test
sub
fldl
jae
mov
iret
push
push
pop
push
shrl
cmpsl
mov
dec
into
add
cld
rolb
cmp
jno
repnz
jno
popa
insl
js
lcall
fldl
mov
sub
call
out
out
sbb
sahf
dec
and
and
xchg
outsb
jle
out
xchg
ret
sbb
test
inc
dec
jbe
arpl
xchg
add
pop
jnp
daa
jmp
cmp
push
xor
nop
mov
imul
dec
xor
jg
jns
leave
mov
push
xor
test
sahf
cmpsl
in
dec
push
nop
sub
ljmp
xor
stc
aad
out
mov
outsb
and
xlat
sahf
mov
lahf
pusha
lods
jnp
adc
sub
call
stos
push
xor
sbb
and
mov
pusha
xor
pop
test
sub
or
lahf
arpl
mov
add
lods
sbb
push
xor
xchg
dec
dec
push
and
jl
test
jp
jne
and
out
mov
mov
lds
mov
loop
push
xor
or
sbb
and
add
inc
inc
loopne
cmp
xchg
in
jg
dec
imul
jecxz
xchg
mov
sub
push
mov
jno
stos
inc
lret
mov
cmc
and
xchg
and
dec
sub
lods
mov
pop
andl
add
jl
jns
rclb
xchg
lods
cmp
cmp
add
shl
sub
ja
sbb
int
repz
nop
clc
or
out
dec
adc
xlat
jns
or
add
add
mov
adc
mov
dec
icebp
je
sarl
xlat
cs
add
fnstsw
push
jnp
iret
push
into
dec
xchg
xchg
jo
test
sub
xchg
repnz
cmp
addb
incb
mov
pop
xchg
test
xor
mov
xchg
pop
pop
sbb
shl
cmp
roll
jb
popl
push
inc
enter
clc
aaa
ljmp
nop
mov
mov
hlt
in
test
pusha
cld
lret
pop
pop
mov
jnp
dec
jne
popf
test
ret
pop
divl
bound
lock
dec
xchg
mov
mov
mov
cmp
jb
mov
daa
xchg
test
add
cmp
mov
push
push
loope
mov
xchg
pop
fidivrl
lods
add
xchg
sti
xchg
into
fcmovbe
pusha
arpl
stos
pop
imul
xor
or
out
popf
lcall
scas
and
mov
push
adc
rcrl
mov
icebp
adc
pop
mov
jge
jmp
and
jbe
in
add
stos
mov
xchg
jmp
jmp
data16
inc
pop
or
mov
push
in
cltd
imul
call
scas
sbb
loop
lock
sub
leave
repnz
push
aaa
call
insb
dec
loope
test
mov
jne
sahf
es
lods
aad
lret
punpckhdq
ss
push
pushf
dec
sbb
dec
jmp
fnstsw
out
shr
or
jae
outsb
cmpsb
repnz
push
cmpsb
insb
push
repz
aaa
sbb
shrl
stos
loope
xchg
test
jge
daa
movsl
cmpb
test
jecxz
fstps
aas
enter
insl
or
cmp
jmp
fadd
pop
push
pop
mov
movsl
sbb
arpl
test
mov
xor
xlat
imul
push
sti
or
pushf
aam
push
xchg
aaa
inc
leave
das
roll
ficoms
dec
cmp
out
mov
shlb
mov
in
int3
push
repz
xor
adc
and
mov
and
pop
sbb
mov
adc
std
idivb
mov
imul
fdivl
sbb
outsl
or
jo
aaa
pushf
mov
mov
mov
insb
inc
adc
dec
shlb
loopne
jbe
ffree
test
mov
add
enter
sbb
ljmp
scas
andl
stc
ds
iret
jne
adc
push
mov
mov
add
fmuls
repz
sub
mov
scas
pop
and
pop
das
push
roll
popf
dec
mov
bound
sub
cmp
movl
cmp
ror
mov
push
outsl
insl
in
adc
push
ljmp
je
hlt
mov
mov
xor
and
outsb
sbb
push
jp
cmpsl
push
sbb
test
lcall
mull
dec
inc
mov
xor
mov
mov
in
jle
subb
cmc
sti
loope
sub
mov
data16
dec
sub
les
adcb
dec
ss
popa
jne
dec
std
push
adc
cld
xchg
cmp
push
into
out
ficompl
sbb
daa
jb
inc
push
sub
and
sbb
cmp
and
jg
jae
cmp
inc
enter
iret
sbb
jo
lock
mov
push
pop
jno
or
push
mov
cmp
out
lcall
xchg
sbb
sbb
cld
lock
push
sbb
inc
lods
or
jle
xchg
push
xor
jbe
xchg
mov
lods
mov
sahf
out
shll
in
scas
test
jnp
mov
fstp
jb
call
lods
inc
or
push
sub
sti
mov
mov
push
xchg
adc
dec
in
je
jp
jl
xor
arpl
xchg
xchg
rol
cmpsl
mov
push
cmp
jmp
dec
sub
xlat
inc
frstor
sbb
dec
cmp
sbb
push
fisttpll
lahf
push
jno
cmp
imul
and
sub
fisubs
and
rclb
jle
sub
roll
iret
lret
fstps
cmp
jno
cmp
outsb
cmpsl
jno
sbb
adc
hlt
cmpb
mov
mov
mov
add
mov
or
lret
addr16
shrl
mov
mov
jge
ficoms
xorl
in
pop
out
test
in
sub
stos
data16
stos
mov
jbe
ret
mov
mov
ja
and
xchg
subl
icebp
shrl
mov
pop
inc
xchg
xchg
sbb
xor
pop
jo
mov
or
sar
adc
pushf
jne
pusha
adc
js
cmp
stos
dec
pop
adc
or
adc
or
mov
xlat
lahf
or
xchg
mov
sbb
call
in
cmp
jno
shrb
mov
sahf
pop
jmp
xor
inc
popf
cmpl
mov
lea
bound
dec
sbb
mov
add
mov
sbb
jmp
mov
shll
sbb
inc
scas
xor
cmpl
inc
test
es
xchg
stc
jno
push
test
das
inc
push
sub
fstps
adc
pushf
mov
xchg
pop
dec
cltd
pop
fwait
jno
js
test
xor
cmpsl
test
sbb
mov
iret
mov
jmp
mov
xchg
sbb
xchg
fimull
adc
xchg
pushf
lcall
mov
push
leave
icebp
cli
rolb
mov
cmp
cmc
mov
fdivs
push
mov
arpl
sbb
push
cs
in
data16
adc
push
ja
popa
sarl
lret
leave
mov
inc
test
pop
lret
cmpsb
pop
mov
inc
mov
stos
push
push
dec
ret
pushf
dec
sbb
mov
pop
sub
movsl
in
movsl
jns
mov
dec
rcl
push
out
aaa
out
mov
mov
inc
inc
aad
testb
call
gs
cld
jnp
rsqrtps
dec
fwait
cmc
ss
dec
dec
imul
scas
lea
gs
dec
ds
les
lcall
cs
fwait
pop
push
mov
fildll
cmc
sub
lods
adc
fldt
mov
inc
sub
cmp
mov
mov
lcall
and
jns
test
sub
sub
push
aaa
loop
adc
shlb
and
je
xchg
rolb
xor
xchg
je
lock
gs
aas
enter
enter
jnp
push
and
movsb
lds
lret
and
lahf
pushf
loop
xchg
pop
out
mov
adc
inc
faddl
ret
push
into
sub
xor
fistps
xchg
pop
and
loope
cld
and
fidivrl
pop
xor
test
mov
mov
call
mov
xor
and
cltd
inc
leave
or
adc
mov
dec
fstpt
sub
sub
mov
cmp
adc
inc
push
nop
fimuls
pop
dec
rorb
insl
jl
mov
hlt
pop
pop
cmpsb
fldcw
cmc
rorl
arpl
fucomip
lret
dec
loope
insb
divb
adc
jb
mov
std
arpl
dec
push
mov
ret
into
iret
mov
mov
loope
pop
add
ret
jno
mov
test
mov
add
leave
mov
push
clc
sbb
sub
fcompl
cmp
push
lds
in
mov
xorl
mov
pop
push
fdivrp
mov
xchg
out
mov
nop
push
pop
loop
mov
imul
ror
dec
cld
mov
addr16
jle
es
adc
mov
pop
xor
data16
call
shlb
mov
pop
jmp
lods
dec
gs
add
in
in
into
lods
or
mov
cmp
xchg
into
mov
arpl
inc
mov
out
xor
in
or
xchg
add
xchg
shl
ss
add
cmp
add
pop
sub
popw
inc
arpl
imul
dec
adcb
insl
xchg
stos
lds
jp
ljmp
loopne
js
cmp
mov
inc
iret
and
clc
imul
outsb
shr
ja
mov
lret
sub
in
cmc
jmp
stc
adc
push
jge
lock
call
pop
cs
fsubr
int
xchg
rorl
fistpl
mov
cli
xor
test
dec
repnz
pmulhw
in
mov
jae
jbe
call
es
repnz
sbb
or
mov
sub
out
aas
cmp
add
jae
jne
xor
addr16
out
aad
out
lea
ja
push
std
sub
push
in
xor
jns
addl
into
sbb
imul
pop
sub
jne
cmp
push
jnp
cs
test
in
stos
mov
aam
add
cmpsl
xchg
ja
sbb
stos
or
mov
adc
inc
dec
inc
scas
mov
cmp
lahf
mov
nop
dec
leave
pop
sub
add
jle
push
or
add
mov
cmpsl
push
jle
pop
cmpsl
cmc
lds
xorb
xorl
inc
push
movsb
outsb
arpl
xchg
xchg
mov
addr16
in
negb
nop
and
aam
mov
shl
test
fcmovnbe
out
xchg
std
push
cmp
lret
xchg
rol
fwait
testl
pop
fmuls
das
mov
or
ljmp
jo
ds
push
and
dec
dec
fs
or
imul
xchg
popa
mov
data16
cld
mov
insb
push
lds
push
insb
leave
dec
push
push
sbb
push
cmp
js
aad
dec
xchg
or
xchg
cld
xchg
cmpsl
mov
fcoml
inc
sbb
dec
sub
fs
fwait
xchg
jae
jo
sbb
push
dec
inc
pcmpeqd
push
adc
stos
ja
mov
cli
sub
outsl
sub
xchg
push
les
xor
popl
call
lods
jb
aad
xchg
cmp
rcrl
in
fcmovbe
xchg
mov
cmpsb
sbb
pop
lahf
les
cld
aam
orb
jo
jmp
push
imul
push
test
lret
or
dec
sti
fwait
and
sub
or
pop
ds
lds
das
dec
and
iret
xchg
xor
jb
push
add
sub
fs
push
lock
arpl
fcmovnbe
ret
add
xchg
mov
cmp
int3
dec
into
fiadds
xchg
dec
xchg
pop
punpckldq
adc
push
push
fstl
jne
stc
dec
xor
xor
mov
inc
add
lea
cmp
repnz
xchg
xchg
lahf
add
and
imul
xor
in
dec
mov
mov
xchg
fs
rclb
xchg
push
nop
jae
push
mov
mov
incl
scas
mov
add
leave
faddl
dec
adc
movsb
mov
into
shll
sub
sti
in
and
mov
xor
insb
or
imul
out
incl
movsl
gs
and
aam
sbb
jns
sti
fildl
and
mov
lcall
push
sub
lds
std
arpl
cmp
adc
cmp
or
dec
roll
ds
repnz
jne
repnz
jb
mov
sub
and
dec
fwait
xchg
or
xchg
lcall
loop
mov
sbb
adc
and
aad
pop
lods
push
repnz
jb
popf
lret
cltd
cli
and
inc
mov
fidivl
jl
add
out
lret
mov
inc
mov
mov
jo
pop
and
enter
add
cmp
xor
jne
daa
sub
fcmovu
cmp
mov
sbb
or
sbb
dec
xor
xchg
insl
sbb
in
adc
subl
and
test
test
push
test
pushf
sbb
adc
jb
or
cmc
sbb
or
fmull
jle
aaa
jp
lret
mov
mov
mov
pop
xchg
inc
mov
movsb
test
or
jb
cmp
std
cmpsl
jle
mov
hlt
jle
scas
xor
cli
sbb
and
in
mov
pushf
aaa
mov
dec
imul
ss
pop
jg
lods
aam
add
notl
sub
mov
push
inc
daa
out
mov
xchg
aas
sub
sti
mov
push
std
or
popf
nop
push
xchg
mov
push
scas
sub
sub
orl
cmp
sti
add
jmp
test
xchg
dec
dec
pop
sahf
sub
add
lock
jb
repnz
mov
xor
mov
xchg
sbb
int3
sbb
pusha
jb
in
mov
adc
arpl
xor
mov
jle
cmpsb
cmp
pop
xchg
sarb
pop
hlt
push
sub
lds
push
test
or
and
mov
adc
inc
add
outsb
xor
pusha
cmpsb
cmp
inc
xchg
loop
rcl
push
les
jb
outsl
popa
push
inc
out
or
add
dec
lods
gs
sti
jno
jae
iret
js
stos
sub
cmp
fidivl
inc
ret
and
outsl
out
dec
inc
jbe
mov
sbb
popf
pop
mov
stos
shr
push
fiaddl
mov
or
mov
dec
pop
mov
jne
xor
inc
pop
mov
outsb
lcall
lahf
outsl
cmp
dec
jp
arpl
pop
sub
daa
pop
sub
and
adc
add
dec
ljmp
push
pop
xchg
stos
dec
es
mov
add
in
jmp
or
imul
mov
loope
inc
adc
jb
scas
pop
mov
or
fs
stos
push
xor
jno
sub
cmp
aam
test
ja
test
dec
ret
pusha
imul
fsub
sbb
dec
xchg
outsb
or
lea
cwtl
addps
sarl
push
mov
in
dec
cs
das
insl
add
mov
out
mov
das
sahf
in
mov
hlt
ss
frstor
ja
sbb
out
enter
jp
jg
sahf
push
xor
xchg
push
push
pop
scas
and
inc
sbb
shl
lds
and
pushf
xchg
test
cli
adc
cmp
andl
mov
xchg
pop
aam
movsl
dec
pusha
sti
mov
leave
ror
js
cmp
cld
jbe
push
dec
jo
jne
inc
int3
dec
imul
jge
repnz
mov
xor
xchg
ja
dec
xor
bound
inc
sub
into
out
adc
mov
dec
jl
icebp
mov
mov
xchg
cmc
hlt
cltd
xor
int
mov
jnp
cmp
scas
xlat
cmpl
popf
mov
xchg
dec
pop
cmp
mov
xchg
jmp
push
xorb
sub
daa
cmc
inc
or
stc
das
or
jnp
pushf
icebp
in
jl
adc
adc
sub
addr16
mov
lret
mov
leave
ficompl
pop
sti
inc
pop
pop
add
int3
pop
sub
xchg
ror
or
sub
movsb
test
ljmp
push
imul
jb
mov
gs
jle
sub
fstp
mov
ja
and
mov
int3
adc
das
xchg
lods
mov
jns
mov
fildl
lods
push
bound
int3
insb
lret
call
cli
in
cmp
dec
and
shl
addb
int
in
insb
xor
adc
and
bound
fnstenv
scas
push
inc
inc
loope
rorb
lds
cld
cmc
or
mov
sub
stos
repz
add
mov
mov
dec
push
jno
out
es
ret
pusha
stc
leave
pop
adc
lahf
insb
xchg
push
in
push
nop
loop
or
loope
pusha
xchg
mov
xchg
loop
cmpl
outsl
pop
sti
jecxz
out
cmp
ja
aas
cmpsl
pop
lahf
hlt
lcall
imul
add
or
js
mov
adc
popf
inc
std
jge
or
cli
inc
clc
cwtl
je
add
insb
push
xorl
imul
fs
xor
sbb
dec
sub
mov
xor
flds
lods
outsb
out
outsl
adc
es
jmp
ret
mov
pop
add
pop
fsubrs
ljmp
mov
fnsave
xchg
adc
popf
and
shrb
pop
xchg
fsubrs
cmp
sbb
push
xchg
cmp
jl
or
loope
cmp
cltd
test
mov
push
adc
jno
lds
lcall
mov
push
leave
add
lahf
fxtract
or
adc
push
cmp
mov
and
sahf
cpuid
in
xor
jecxz
mov
jnp
xlat
leave
jle
xchg
clc
pop
push
push
sbb
mov
pushf
inc
sbb
cmpsb
imul
push
push
dec
jge
xchg
lret
cwtl
add
mov
addr16
cmp
fcmovbe
shll
fildll
aad
sbb
aaa
test
test
jmp
lea
outsb
daa
push
lods
fwait
pop
push
fimuls
mov
clc
rorl
jmp
addr16
daa
jo
add
jg
xchg
push
popf
xor
mov
cli
inc
xor
test
adc
mov
pop
sti
decb
pop
mov
daa
cmpl
mov
jae
xor
clc
ret
dec
inc
hlt
mull
sbb
mov
jge
int
cltd
fdivl
push
ret
int
addr16
jecxz
es
and
ja
adcl
test
add
sub
lahf
pop
mov
add
int
mov
mov
out
and
cmpsb
lock
mov
fldt
es
clc
push
gs
and
xchg
push
xchg
mov
sbb
fst
or
or
stos
dec
mov
adc
or
nop
jmp
out
sbb
push
scas
mov
out
mov
ds
dec
pop
shll
iret
pop
test
out
lret
sub
addr16
movsl
adc
xchg
sti
popf
es
pop
inc
mov
lret
jmp
dec
ja
pushl
in
aas
loopne
loope
mov
mov
stos
mov
outsb
pop
mov
and
outsl
bswap
repz
add
insb
and
mov
mov
lea
xor
and
lds
adc
cltd
out
adcb
ss
sbb
cmp
cmp
sbb
data16
push
jo
mov
xchg
in
shr
pop
mov
fs
mov
movl
or
out
clc
and
stos
pop
cmp
xor
mov
adcb
jnp
jecxz
cmpsl
divl
rcrb
fildl
jg
xor
push
scas
pusha
enter
into
adcb
xchg
adc
inc
sub
pop
adc
icebp
dec
sub
dec
mov
add
jo
add
andb
add
mov
add
cmp
add
add
add
imul
gs
xor
cs
insb
add
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
cltd
or
add
add
add
add
iret
leave
mov
push
jne
int
mov
in
arpl
pushf
scas
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
mov
mov
and
sbb
test
inc
add
sub
and
and
add
add
or
jl
xchg
shll
packuswb
mov
push
pop
push
push
inc
minps
in
dec
adc
xor
cld
pop
add
sub
outsl
das
fisubrs
jecxz
jbe
add
adc
lods
stos
add
add
rolb
jae
test
jno
mov
mov
mov
cmp
sbb
add
push
or
sbb
call
cmpsb
add
mov
mov
and
daa
mov
test
or
fists
jb
sub
insl
xchg
rcll
dec
rclb
test
test
mov
test
inc
push
pusha
outsb
je
mov
lea
dec
mov
lahf
jmp
test
push
push
and
push
lea
push
aas
das
push
mov
iret
es
sbb
enter
aas
shrb
or
stos
sbb
shlb
or
jmp
or
aaa
fisubs
and
loop
dec
inc
add
jmp
cmp
nop
add
pusha
xchg
cmp
mov
setge
or
pop
pop
pop
pop
dec
ret
roll
inc
pop
sub
loopne
add
add
push
call
mov
inc
ret
rcll
add
push
jmp
ret
push
cltd
mov
xor
add
ret
in
mov
lods
push
jne
scas
leave
fcompl
adc
rolb
adc
shlw
pop
pop
add
orb
or
jmp
mov
cmp
leave
pop
add
or
nop
xor
push
jmp
jne
and
movzwl
inc
adc
ficomps
xchg
xchg
sub
insb
stos
pop
inc
pop
adc
add
cmp
cmp
xor
push
inc
imul
call
xlat
jne
sub
ret
push
shr
popa
rclb
les
push
flds
add
xlat
xor
enter
mov
push
mov
cmp
or
flds
pushw
adc
or
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
shll
cmp
cmp
ret
add
and
push
mov
push
lock
push
push
lea
inc
mov
mov
adc
enter
mov
pop
xchg
and
jl
dec
add
mov
sub
push
dec
lahf
or
and
push
push
testb
in
jle
sbb
inc
je
jae
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sbb
lret
fidivl
dec
inc
and
cmp
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
aad
mov
mov
adc
sbb
inc
inc
mov
dec
jae
shlb
and
shl
dec
int
mov
cmp
sarb
mov
jmp
testb
mov
jle
mov
jg
cmp
test
and
jmp
push
add
iretw
adcl
mov
and
imul
mov
in
xchg
inc
sub
mov
lods
popf
and
push
pusha
jnp
repz
xor
icebp
mov
shr
nop
add
dec
dec
or
adc
mov
rorl
pop
cld
cmp
or
sbb
lock
sub
mov
jl
sbb
add
test
shr
push
loope
push
lea
add
sti
add
add
call
sbb
xchg
and
jbe
push
dec
imul
enter
dec
and
xchg
out
jo
add
pusha
insl
jae
in
addl
arpl
add
and
mov
adc
and
jne
in
rclb
icebp
popf
cmp
lahf
fs
arpl
insb
repnz
in
je
bound
ss
fs
inc
jno
rolb
cltd
andb
insb
and
xchg
xor
sub
jne
xchg
xor
push
dec
fistpll
inc
outsl
js
xorl
push
je
adc
imul
fsubrs
js
imul
pusha
cwtl
push
icebp
sti
orl
inc
stc
je
ljmp
orps
je
mov
arpl
cmp
daa
inc
popa
pop
dec
sar
scas
fldenv
and
and
push
pop
test
int3
cmp
or
mov
mov
imul
lea
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
adc
add
ss
add
or
add
add
inc
add
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
