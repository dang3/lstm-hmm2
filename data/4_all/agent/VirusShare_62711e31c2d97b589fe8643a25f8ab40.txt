incb
add
add
inc
add
scas
jmp
jne
sahf
call
out
repnz
jmp
in
jae
jbe
ljmp
shrd
push
out
out
std
sahf
sbb
in
leave
in
pop
dec
inc
and
jb
out
leave
stos
out
mov
pop
jo
icebp
out
pop
ja
pop
add
mov
repz
dec
notb
adc
inc
add
stc
mov
jbe
mov
pop
sbb
adc
cld
in
addr16
pop
adc
pop
clc
std
scas
sbb
inc
xchg
cmpl
psubw
add
enter
mov
add
sahf
sub
add
arpl
cmp
loopne
push
lods
inc
scas
lods
mov
out
pop
pop
sub
inc
add
sub
push
add
sub
mov
stos
add
imul
imul
jecxz
xchg
int
mov
inc
es
xchg
int
daa
lcall
nop
sub
and
add
in
jmp
lahf
jp
push
sub
mov
mov
scas
add
insb
fwait
outsb
jns
adc
pop
incb
lret
fldenvs
orl
bound
dec
shrl
fcmovnb
fsubl
or
add
pop
push
pop
cmp
out
xchg
cmp
add
pop
in
xchg
aas
inc
cmp
add
cmp
ds
inc
ds
outsb
setnp
sarb
aaa
lods
aas
into
lock
lret
bound
inc
sub
lret
lret
push
sbb
inc
pop
icebp
dec
mov
add
and
add
and
adc
cmp
adc
repnz
fsubrs
enter
xor
les
in
iret
xchg
xchg
out
adc
fcom
adc
push
push
repz
sbb
or
adc
inc
adc
iret
out
pusha
in
adc
adc
inc
lods
jo
inc
cmp
inc
pop
adc
out
in
nop
adc
sahf
iret
mov
mov
repz
cld
xchg
push
adc
mov
push
adc
iret
xchg
out
adc
test
adc
and
sub
lods
cld
dec
cwtl
mov
popa
adc
in
lock
pop
jae
fs
mov
int3
adc
adc
ss
ja
mov
jae
leave
mov
adc
iret
cwtl
adc
push
adc
insb
dec
cwtl
mov
adc
insl
adc
inc
push
mov
loopne
xor
bnd
adc
pushf
test
jae
insb
inc
add
adc
adc
sbb
insb
clc
adc
pop
mov
push
dec
pop
add
xor
idiv
pop
movsb
pop
mov
lea
out
and
adc
sti
xchg
je
aas
push
push
iret
sti
iret
mov
mov
add
or
sub
adc
xor
lcall
loopne
hlt
test
lods
imul
imul
pop
mov
sbb
popf
mov
inc
push
add
and
adc
xor
cmpsb
jmp
cmp
inc
push
ds
push
pop
jnp
mov
add
add
ret
call
xor
bound
arpl
cs
insb
sub
push
pop
insl
or
notb
adc
xor
test
mov
lcall
out
sbb
or
add
and
test
xchg
lock
gs
add
jmp
ja
nop
jg
bound
add
fnstsw
adc
jns
pop
and
fldt
jg
dec
add
and
jnp
inc
xor
sbb
lret
pop
pop
jecxz
mov
sbb
xchg
cmp
mov
inc
pop
inc
into
sahf
sbb
gs
sysenter
sbb
in
pushf
pop
pop
pop
adc
pop
lret
inc
dec
sahf
pop
pop
adc
pop
push
xchg
addr16
lods
pop
test
pop
mov
fsts
pop
call
push
daa
dec
sahf
cmp
push
mov
pop
push
adc
in
mov
push
daa
dec
sahf
cmp
push
sbb
aam
nop
cmp
leave
xchg
push
dec
push
add
push
daa
dec
sahf
cmp
push
hlt
push
lods
push
fs
nop
xchg
push
adc
push
and
sub
jo
mov
pop
fidivrs
or
jecxz
adc
cmp
jnp
add
outsb
sti
jg
bound
jp
hlt
xchg
or
testb
cmc
std
lods
adc
adc
cmpsl
jle
jb
add
jp
xor
sbb
add
and
xchg
xor
addr16
data16
xchg
loopne
lock
jle
and
aaa
sbb
cs
dec
cld
pop
daa
pop
test
inc
mov
rdpmc
mov
push
and
int3
jo
mov
aas
pop
dec
repz
and
add
jp
rcrl
xor
inc
sarl
sbb
dec
outsl
lods
stc
mov
xor
add
add
mov
xchg
cmp
scas
pop
enter
in
daa
dec
or
and
pop
rcr
insl
lcall
and
pop
dec
push
add
nop
outsb
nop
mov
int
add
add
and
pop
pop
jnp
dec
pop
lods
imul
xor
pop
add
and
jmp
fxch
dec
pop
in
ja
add
daa
adc
inc
in
or
and
or
pop
enter
adc
or
and
xor
mov
cmpsb
xor
xor
add
dec
pop
imul
jae
cmpsb
cmpsb
mov
daa
add
push
add
into
ss
out
in
repnz
pop
push
sub
dec
xchg
add
add
add
mov
jl
movsb
pop
test
scas
ret
xorb
inc
add
pop
sbb
push
hlt
xchg
stos
aas
sbb
adc
or
inc
dec
nop
or
insb
stos
inc
pop
xlat
or
xchg
addl
and
push
aaa
in
jl
incl
in
sbbb
or
dec
out
jae
mov
xchg
addr16
inc
in
fistpl
inc
push
fmull
dec
mov
xchg
addr16
pop
fucomip
imul
aam
dec
adcb
lock
notb
jmp
fisttps
leave
rorl
mov
and
push
add
daa
xchg
daa
test
cld
and
jo
mov
rolb
test
xchg
sbb
add
cmpb
daa
pop
inc
push
sbb
pop
mov
and
pop
jb
sub
daa
nop
mov
or
add
xchg
add
add
in
leave
fcomps
cwtl
add
outsl
leave
add
xor
sub
and
add
add
sub
mov
sub
jg
dec
sahf
sbb
les
loopne
push
enter
lods
or
sub
js
pop
das
mov
dec
sahf
sbb
sub
pop
pop
mov
pop
sbb
sub
data16
syscall
sub
xchg
sub
dec
mov
lcall
cmp
pusha
insl
jp
aas
adc
mull
sbbl
xchg
shll
fwait
and
test
in
or
inc
cs
es
mov
pop
leave
xor
pop
pop
pop
fildl
jnp
sub
and
or
das
orb
je
inc
lods
pop
orl
cld
inc
orb
pop
and
pop
mov
daa
cmp
fwait
jecxz
and
in
or
cmp
mov
jmp
in
jl
dec
sahf
js
out
sbb
stos
icebp
pop
cmp
sahf
cmp
repnz
repnz
in
repnz
pop
out
leave
enter
xor
cmp
add
lods
add
mov
cmpl
jnp
mov
sbb
fbstp
cmpsl
mov
sub
ficoml
or
and
push
xchg
add
iret
and
push
xor
outsl
mov
add
ret
push
dec
pop
push
sub
cs
icebp
xor
sbb
adc
adcb
das
fcompl
bound
fistpll
clc
dec
add
add
and
pop
mov
push
leave
xchg
inc
rcrb
sub
aam
add
repnz
pusha
or
adc
fs
sub
das
adc
test
lret
or
push
add
sbb
fadds
pop
jae
daa
xor
ja
inc
outsl
jb
xor
dec
outsl
fs
xor
call
orl
xor
gs
inc
loop
lds
sti
mov
cmp
fsub
decl
fimull
xor
mov
mov
rcll
insb
xor
cs
push
sti
lcall
xor
inc
cmp
outsl
addr16
insl
and
fdivs
dec
imul
jae
data16
push
imul
jne
imul
icebp
fnstsw
cmp
cs
dec
inc
pop
rolb
or
loopne
das
pop
jmp
ret
sbb
ja
mov
sub
inc
and
outsb
and
or
jae
arpl
outsl
or
add
js
icebp
lods
or
add
popl
inc
jg
dec
pop
inc
testl
or
test
push
add
leave
decl
pop
push
jg
push
inc
xor
fsubl
mov
sub
add
push
jmp
ja
add
sbb
adc
insl
das
adc
sbb
mov
mov
fistpl
lods
adc
dec
jae
mov
pusha
jge
ljmp
std
add
insl
pusha
pushf
push
or
add
pop
iret
jle
fdivs
nop
cmp
push
je
xchg
push
cmp
push
sbb
rorb
jo
xchg
dec
dec
pop
add
xchg
pop
xor
push
jne
insb
push
clc
push
adc
nop
cli
push
das
lret
lods
mov
xchg
in
lret
sub
out
mov
inc
bound
test
arpl
jge
adc
mov
inc
xor
call
insl
aad
mov
inc
mov
xor
xlat
ss
add
add
mov
cmp
fistpll
pusha
or
xor
or
out
loope
notl
adc
adc
push
add
adc
or
pop
enter
jb
add
addr16
add
pop
jne
or
stos
cld
cmpb
scas
jns
mov
jl
std
jg
jbe
pop
aaa
imul
sbb
xor
mov
pop
cmp
popa
cmpb
add
mov
add
mov
pop
daa
jle
aaa
ficoms
bound
mov
and
push
mov
addr16
jl
jle
pop
dec
cld
sbb
add
sbb
mov
inc
sbb
jns
sub
and
fwait
and
xor
adc
mull
sub
dec
jl
xchg
jl
lock
add
cmp
adc
cmp
shll
pop
sbb
mov
mov
xchg
sub
std
or
sub
bound
cmpsl
add
adcl
push
cmpsb
sbb
or
orb
xor
xor
xchg
inc
add
mov
and
add
push
popa
je
mov
sbb
add
fisttpll
push
add
fs
imul
add
cmp
sub
cmp
mov
rcl
addr16
jae
cmp
cs
mov
adc
add
mov
pop
comiss
das
sbb
outsb
mov
jb
inc
inc
cld
dec
inc
mov
imul
push
orl
add
or
das
pop
mov
and
xchg
dec
stos
push
sbb
insl
popa
addr16
pop
xor
addl
jle
subb
xor
push
insb
gs
outsb
add
jmp
push
mov
cli
je
jmp
push
stc
mov
or
outsb
push
jb
arpl
jae
inc
push
sbb
stc
jg
mov
jae
dec
popa
outsb
fs
gs
push
sbb
and
jb
or
dec
push
cmp
nop
mov
push
outsl
ja
push
mov
out
inc
ja
hlt
rcrb
push
enter
xor
in
pop
addr16
pusha
add
fldt
dec
das
pop
push
push
int3
ret
xchg
aam
push
inc
nop
inc
mov
inc
pushf
fsubs
cs
lods
or
in
gs
dec
loope
inc
jecxz
xchg
sbb
pusha
inc
in
hlt
inc
and
ret
adcl
jb
je
inc
arpl
mov
sub
inc
push
and
cmp
mov
inc
jae
push
mov
in
or
mov
add
sbb
xor
test
xorb
dec
cmp
xchg
jae
mov
adc
cmp
or
das
sbb
in
insl
pop
jb
inc
inc
bound
pop
jb
cmp
adc
mov
fisttpl
fs
popa
xor
and
fwait
test
sub
and
jecxz
mov
push
push
inc
jb
orl
dec
inc
or
jae
push
and
mov
or
cmp
inc
pop
jb
sbb
inc
outsl
outsb
jbe
cs
es
jne
adc
das
inc
push
add
mov
dec
xor
stc
and
sbb
inc
adc
and
and
outsl
fs
fsubrl
and
and
and
mov
adc
adc
fldt
dec
outsl
je
data16
arpl
xchg
sbb
and
dec
jae
movb
add
pop
adc
pop
in
pop
jb
pop
and
dec
inc
loope
push
je
dec
outsl
or
adc
inc
pop
mov
xchg
insb
adc
je
lods
movsl
or
jne
xchg
leave
orl
jb
lea
imul
dec
inc
dec
outsb
and
jne
loop
outsl
sbb
jmp
leave
orl
movsl
or
jg
arpl
inc
into
push
inc
jnp
push
inc
cmpb
mov
sbb
lods
sbb
xchg
inc
xchg
outsl
insb
mov
arpl
dec
jo
outsb
popa
jo
outsl
dec
inc
orl
ud2
dec
pop
mov
push
dec
add
ss
out
je
dec
push
movsb
sti
testb
pop
mov
clc
inc
dec
gs
and
push
movsb
inc
lods
mov
sub
inc
push
jmp
call
mov
push
dec
js
test
xchg
add
dec
mov
fs
jo
adc
mov
or
leave
orl
les
inc
jb
push
add
jne
mov
jo
dec
imul
std
jg
adc
push
inc
inc
ss
dec
dec
inc
pop
pop
jbe
popa
inc
jo
xor
nop
xchg
andl
enter
and
fs
xchg
nop
shll
scas
insb
jae
mov
fsubl
and
add
into
dec
and
ljmp
mov
or
adcb
add
or
lods
sbb
add
add
flds
and
emms
mov
add
test
and
cmpsl
pop
push
jns
rcll
mov
push
popa
mov
or
cmp
outsb
outsw
sti
nop
pop
aas
in
pop
in
push
dec
mov
sub
add
pop
outsl
jle
pop
push
dec
add
lret
push
je
inc
fsubrs
xchg
orl
push
int3
pop
sbb
data16
jbe
icebp
lret
add
das
push
jmp
pop
mov
aas
insb
leave
push
push
popa
in
mov
lods
add
cmp
cmpb
rorl
cmovg
dec
imul
cmp
out
aaa
fbstp
sbb
je
adcb
lea
dec
sub
addl
xchg
sub
outsl
jo
adcl
mov
dec
jae
mov
sbb
lods
mov
pop
or
dec
xor
js
adc
cmp
lods
jmp
inc
or
or
inc
rolb
sub
jg
push
stos
sub
icebp
inc
jbe
insl
insl
sub
push
test
dec
lods
adc
xchg
jno
push
jmp
pop
inc
jo
leave
dec
lahf
push
inc
inc
ljmp
adc
roll
pop
mov
call
dec
imul
inc
idivl
mov
jmp
jl
xor
insb
cltd
xchg
pop
adc
sub
xchg
xchg
and
and
lds
stc
outsl
push
ret
sub
fnstenv
pop
mov
bound
sbb
and
and
pop
negl
sub
andb
and
ficoml
mov
fldl
inc
inc
insb
add
jmp
push
and
pop
jns
push
pop
pusha
jne
lods
addr16
sub
jl
pop
les
mov
andl
dec
or
pop
xlat
insl
inc
arpl
push
movsl
jne
or
mov
mov
jae
je
mov
jmp
insl
iret
ja
jbe
sbb
loop
test
inc
stos
push
testb
xchg
pop
mov
insb
popa
jns
adc
jb
flds
lock
dec
scas
in
enter
das
dec
mov
adcl
mov
mov
add
cld
push
jb
pop
add
adc
insl
inc
into
add
imul
or
or
pop
pop
pop
pop
lret
lret
fcmovnb
or
jg
dec
add
pop
pusha
dec
push
pusha
mov
scas
int
adc
outsb
and
outsl
adc
nop
pop
jbe
mov
andnps
sbbb
pusha
push
in
in
pop
sti
pop
inc
and
xchg
pop
enter
adc
cmp
inc
movsl
popa
xchg
inc
dec
in
add
sub
pop
rorl
xchg
inc
enter
jns
inc
cmp
and
sbb
pushf
lahf
pop
repnz
cld
xchg
pop
or
arpl
ds
dec
xchg
pop
lret
mov
xchg
into
xchg
xchg
and
jb
add
stc
dec
xchg
je
daa
das
stos
jb
mov
sti
sarb
inc
add
or
test
add
das
out
test
sub
jmp
sbb
hlt
sti
inc
jb
stc
rcl
xchg
imul
daa
adc
jns
mov
and
popf
mov
dec
mov
push
cmc
je
inc
divb
popa
jne
je
mov
sbb
fwait
xor
mov
arpl
xchg
sbb
dec
xor
xlat
shll
mov
mov
mov
imul
outsl
add
in
daa
pusha
leave
addr16
lret
outsl
outsl
add
into
pop
iret
imul
push
push
inc
popa
arpl
xor
daa
xor
mov
jmp
pop
mov
push
lcall
xchg
lods
cmp
sbb
sub
xor
in
mov
xchg
shlb
stos
cmc
repz
rorb
pusha
scas
iretw
and
repz
fwait
les
dec
xor
outsb
push
xchg
or
add
push
ret
fstps
push
sahf
inc
jno
inc
ret
ljmp
and
xor
inc
add
ljmp
lea
push
imul
outsl
fs
or
pop
push
mov
and
imul
pop
imul
ss
insb
or
pop
adc
push
dec
cwtl
adc
cmpsl
adc
popa
ret
pop
sub
mov
push
loopne
mov
add
daa
or
jae
push
pop
and
push
outsb
adc
or
mov
adc
pop
lahf
mov
lock
jnp
outsb
jae
add
xchg
jmp
inc
outsl
sbb
fimuls
or
rol
xchg
mov
loope
inc
aas
mov
adc
mov
arpl
cmove
xor
lods
cmp
sbb
mov
pop
and
popa
sub
jmp
loopne
mov
adc
push
fistpl
lahf
xchg
adc
cmpb
pop
push
in
data16
lret
xchg
imul
xlat
push
inc
pop
addr16
mov
xchg
sbb
js
ret
mov
xor
add
lea
pop
sbb
push
scas
xchg
push
gs
leave
out
sbb
jb
xchg
std
cmp
xchg
sbb
push
pop
xor
add
out
cltd
cmpl
fld
dec
add
or
aaa
add
addr16
sbb
imul
xlat
adc
adc
mov
movsb
outsb
imul
push
jecxz
pop
pop
daa
je
insl
mov
pop
lahf
add
out
aaa
incl
xchg
lock
adc
dec
mov
adc
sub
add
pop
idiv
jns
inc
sbb
mov
ja
sysexit
popa
jno
mov
sub
mov
nop
mov
pop
orl
mov
or
inc
dec
testl
cmp
inc
movsl
push
pop
push
adc
arpl
sbb
int
jmp
jb
xorl
pop
inc
xor
xchg
and
xchg
outsb
adc
xor
lods
jmp
adc
or
sbb
loope
sbb
adc
add
jnp
dec
xchg
das
adcl
and
mov
sbb
pop
mov
imul
add
aam
lcall
pop
add
fs
mov
fldenv
rorl
mov
cltd
pop
leave
pop
daa
cmpsw
pop
pop
and
cmp
mov
xchg
out
xor
pop
cmpl
and
push
push
jne
add
mov
mov
lret
xor
pop
lret
xor
or
lret
inc
fadds
adc
sub
xor
xlat
icebp
cltd
push
mov
inc
pop
and
pop
or
fistps
sbb
arpl
xor
ja
insl
dec
and
pop
orl
inc
pop
push
sub
ja
adc
dec
or
jnp
outsl
ja
fcoml
or
dec
cmp
mov
inc
dec
wbinvd
or
enter
push
test
or
push
add
or
cmp
sbb
mov
mov
dec
jb
mov
sub
aaa
adc
dec
jmp
add
in
adc
cmp
push
push
pop
push
add
or
or
or
test
adc
adc
sbb
push
add
and
daa
and
std
mov
or
aaa
sub
xor
pop
daa
cmp
xor
test
jg
inc
add
add
or
or
sbb
xor
or
dec
scas
add
mov
add
add
and
mov
fists
add
adc
inc
add
add
in
dec
jmp
or
or
and
dec
insb
sub
cmp
add
mov
add
push
adc
pop
and
xor
inc
in
pushl
lock
bound
cmp
pop
sbb
sbb
sub
hlt
cmp
inc
inc
inc
inc
inc
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
ljmp
insl
subl
jbe
js
jp
test
mov
call
mov
test
stos
mov
mov
mov
mov
enter
idiv
call
aam
xlat
fcomp
loop
in
out
call
repz
cmc
div
clc
stc
cli
xlat
add
lods
mov
out
xlat
insl
out
int3
adc
add
xlat
or
mov
and
and
push
adc
pop
popa
jno
and
adc
xchg
neg
repnz
mov
lock
loope
icebp
fisubl
mov
fadds
adc
xlat
fidivl
aam
pop
jns
mov
add
push
fcomp
dec
sarb
cmp
mov
sub
and
and
jae
mov
push
roll
pop
hlt
ret
pushl
iret
jecxz
push
xchg
addr16
insl
bound
clc
loopne
add
pop
mov
pushl
psadbw
shl
repnz
xor
inc
dec
test
sbb
bound
aam
jecxz
xchg
jmp
gs
xor
sbb
in
cld
sti
or
cmp
adcb
hlt
and
call
in
std
testl
addr16
aas
les
mov
sub
in
decl
jno
mov
jae
mov
dec
adc
out
es
push
loope
mov
dec
decl
pop
fdivl
addr16
mov
test
xchg
dec
loopne
mov
call
xor
sub
out
jmp
pushf
sbb
mov
icebp
dec
sahf
iret
pop
push
mov
lcall
pop
cmp
jnp
sti
mov
jmp
in
fisttpl
mov
push
push
fwait
adc
fstpl
jo
ds
xor
sar
incl
das
lea
insb
hlt
cmp
mov
and
repnz
inc
imul
into
loopne
nop
mov
outsl
add
stc
dec
sub
ljmp
mov
stos
int3
xchg
ret
xor
mov
cmp
pop
add
inc
or
push
mov
xchg
mov
mov
mov
pop
rol
rcll
cwtl
mov
in
movsb
lahf
xchg
add
xchg
inc
pop
aam
fildl
sub
mov
xchg
mov
push
pop
popf
mov
int
call
lods
mov
iret
mov
out
in
jge
cli
push
divb
jmp
push
ja
les
fcmove
xlat
in
pushf
mov
in
daa
adc
jg
in
cmpsl
leavew
and
arpl
push
int3
or
lods
and
lret
and
jb
or
insl
ljmp
cld
int
sub
call
sub
xchg
pop
cli
mov
xchg
mov
adc
aaa
dec
sub
cmp
and
mov
imul
out
jge
aaa
mov
or
decl
xlat
push
mov
push
mov
mov
inc
into
popa
test
lret
sbb
xchg
sub
fstps
add
xor
dec
gs
in
mov
cmpsb
lcall
cld
jg
movb
and
jbe
lret
ret
pop
cmpsb
mov
xor
sarl
in
mov
jno
mov
jns
jns
or
sbb
cmpsl
add
xlat
repz
repnz
sub
sub
inc
or
push
nop
inc
ljmp
clc
int
mov
test
shlb
mov
dec
push
inc
xchg
mov
xchg
inc
push
mov
decb
mov
or
pop
xorl
outsb
inc
in
test
mov
xchg
inc
pushl
mov
test
mov
sbb
sbb
jl
fucomp
popa
lods
mov
insb
movsl
rcr
addl
xchg
sub
fildl
mov
ljmp
xor
lods
mov
adc
cmpsb
rolb
hlt
sbb
out
push
mov
cmp
sub
aad
pop
or
cmp
mov
push
sbbl
insl
fldl
out
mov
sub
fdivrl
push
add
pop
clc
repnz
xchg
in
and
pop
add
cmc
dec
mov
jg
ljmp
lret
push
xchg
dec
int3
pop
cmp
insl
mov
xorb
inc
decl
neg
cli
xor
fisubs
mov
push
mov
sub
outsl
xor
scas
pop
lret
or
scas
xchg
lock
ret
in
loopne
pushl
lret
fidivs
scas
adcb
jp
ds
jg
call
mov
mov
mov
push
sti
fs
imul
pop
inc
xor
push
jg
sbb
mov
mov
jg
jnp
pop
push
xchg
xorl
inc
neg
jge
sti
lcall
lgs
hlt
xor
mov
aas
xchg
lods
stc
mov
jp
pushl
popf
idivb
push
aad
mov
dec
leave
mov
repz
xchg
loopne
push
jo
mov
sbb
cmc
and
int
mov
mov
cmp
mov
mov
jg
jp
xchg
mov
in
sbb
jmp
sahf
jb
push
inc
ljmp
sahf
jg
inc
cmp
lret
fwait
dec
mov
out
cmpsl
jg
push
scas
imul
sahf
mov
cmc
int
cmp
frstor
nop
xor
xchg
decl
ret
mov
push
lahf
js
aas
das
pop
mov
aas
in
jg
aaa
stos
stos
outsl
pushl
xor
cmp
mov
fdivl
xchg
cmpsb
cmc
mov
pop
jecxz
mov
std
idiv
hlt
scas
xsha1
cmpsb
mov
jbe
and
imul
aad
fstpt
jg
adc
xchg
aam
mov
mov
jb
cs
call
jmp
fs
mov
push
jb
mov
xchg
test
cld
dec
lret
lods
sbb
sahf
push
js
sbb
not
xchg
stos
in
ljmp
cmpsb
stc
adc
mov
mov
pop
imul
stc
mov
or
in
mov
push
mov
jl
loope
xchg
out
loop,pn
ljmp
cmc
mov
es
fistpl
in
pop
pop
xchg
mov
sub
call
lret
dec
std
cmp
mov
jno
jne
andb
xchg
sbb
cld
movsb
mov
adc
stos
clc
addr16
xchg
fisubrl
jns
xchg
jecxz
out
in
roll
xor
cmp
jae
call
jmp
call
pop
cmp
fstps
mov
push
leave
arpl
push
pop
or
mov
add
inc
nop
popa
push
add
bound
cmp
cmpsl
imul
mov
fcmove
xchg
pop
aaa
fisttpl
jno
setae
sub
jb
rcr
inc
cmp
adc
inc
ljmp
sub
or
xor
mov
aad
clc
inc
in
or
pop
cli
and
jmp
dec
int
cmp
sbb
cltd
mov
out
and
xor
dec
ljmp
in
into
jp
or
xlat
pop
xlat
push
mov
rcrl
fwait
mov
ret
dec
sbb
movsl
push
shlb
or
in
sahf
sbb
movsb
aad
aad
or
lret
push
ljmp
lods
adc
adc
pop
dec
sar
mov
into
sbb
sbb
mov
lahf
popa
mov
xchg
incl
pop
push
mov
ljmp
jne
xor
insl
sbb
sbb
jno
jb
xchg
and
bnd
pushl
fadd
daa
daa
or
cmp
inc
mov
sub
sub
cmpsl
rcrl
mov
movsl
in
iret
xchg
mov
pop
int3
mov
push
cwtl
jb
adc
jmp
xchg
movsl
mov
mov
push
fmul
sti
sub
push
mov
movsl
sbb
lahf
mov
testb
adc
push
jg
sub
das
pusha
mov
lret
push
xchg
cmp
ja
fistpll
in
pop
std
xorb
push
sub
lods
pop
and
push
fsubs
fcomps
adc
lods
cmp
pop
ret
sarb
and
pop
lahf
call
jnp
xchg
mov
imul
xchg
adc
add
push
xchg
outsl
lcall
ret
pop
repnz
jns
paddd
das
or
cmpsb
fildll
pop
push
add
add
sbb
mov
sub
decl
cmpsl
rclb
mov
push
mov
push
testb
or
push
sbb
ficoml
sub
fisubl
les
mov
sti
add
or
jg
lcall
fistpll
sarb
mov
push
inc
or
icebp
jae
test
incb
outsl
cli
repnz
std
or
sub
mov
lds
movsb
in
jp
test
push
sarl
lret
add
sbb
lret
lock
cld
mov
mov
insl
sti
decl
mov
pop
inc
mov
inc
xchg
jmp
xchg
dec
fidivrl
stc
mov
add
inc
add
ds
jno
leave
cmc
mov
imul
pop
lahf
pop
xor
sub
adc
or
dec
cmpsb
das
pop
shll
xchg
xor
adcb
dec
xor
inc
and
mov
dec
rcrl
inc
push
sti
jg
mov
mov
clc
arpl
inc
dec
pop
mov
sti
jg
add
mov
inc
jns
insb
xchg
es
sti
in
decl
mov
sub
mov
test
cs
and
mov
mov
cmp
push
fiadds
xchg
mov
xor
push
hlt
xchg
push
and
insl
imul
rclb
pop
mov
inc
imul
test
int3
orl
sub
pop
scas
adc
cmp
mov
stos
pop
adc
pop
push
lock
pop
aad
mov
adc
aam
sub
inc
pusha
int
jbe
int
imul
or
mov
push
jne
push
adc
jmp
dec
in
mov
or
or
mov
or
push
loop
fisubs
fwait
xorb
xchg
or
mov
xlat
cld
lea
cmc
in
lock
jae
mov
inc
xor
push
nop
stos
pop
pop
sbb
xchg
push
inc
sub
cli
pop
call
in
pusha
shlb
and
dec
inc
mov
rolb
inc
push
andl
or
sub
mov
scas
nop
daa
sbbl
push
dec
jle
sub
cltd
mov
and
xchg
adc
out
fwait
test
xor
or
mov
imul
add
dec
fisttpll
add
rorl
movsl
jg
push
outsb
mov
jg
dec
push
or
xor
and
int
xchg
xor
dec
dec
add
mov
push
imul
sti
into
fldcw
adc
xor
fildll
in
xchg
xchg
loope
or
arpl
icebp
dec
repz
inc
lods
aas
fwait
std
lahf
iret
adc
xchg
pop
outsl
cmc
mov
sarl
adc
xchg
sti
test
mov
in
mov
loope
data16
in
neg
sbb
push
repz
lahf
in
into
and
adc
sbb
xchg
push
push
imul
jg
out
out
inc
ds
es
std
enter
or
rclb
and
mov
ja
or
mov
dec
sbb
addr16
or
or
clc
lcall
outsl
aaa
jmp
das
sti
in
add
notb
adc
jb
das
fwait
in
dec
sub
rcll
in
push
jns
sbb
add
xchg
or
mov
fsubl
in
jg
rorl
bound
ss
mov
jb
in
jg
push
cmp
jle
jne
mov
out
scas
sbb
xchg
fiadds
and
dec
das
mov
mov
lock
outsl
clc
nop
dec
pop
fiaddl
scas
or
xlat
xor
jl
xchg
aas
cli
sahf
dec
rclb
cli
imul
pop
push
xorb
cli
popf
aad
mov
cmp
add
into
adc
or
stos
test
add
in
hlt
ljmp
inc
push
loopne
arpl
xor
and
aam
xor
in
pushl
outsl
in
xchg
insb
adc
dec
in
push
insb
fmull
mov
push
stc
pushl
jecxz
ja
pop
dec
fldenv
mov
xor
pop
nop
jno
jo
fbld
xchg
cmc
ljmp
pop
xlat
filds
cli
test
or
outsb
daa
push
inc
insb
pushf
xor
pop
add
pop
call
push
cmp
sbb
les
sub
rcl
mov
mov
je
fisttps
jl
mov
jle
outsl
es
mov
fstl
dec
push
ret
std
int3
push
pop
or
sbb
lcall
sbb
jecxz
icebp
or
jg
std
test
in
adc
sub
mov
push
inc
pusha
popf
inc
pop
add
jns
mov
stos
dec
cmpsl
pop
mov
adc
ret
mov
dec
icebp
insb
ds
add
fcomp
hlt
into
das
test
push
shlb
cmp
fmuls
dec
incl
addr16
sbb
sbbb
and
add
int
cltd
jg
imul
push
sub
daa
arpl
adc
enter
jl
cmp
and
sahf
jecxz
dec
sar
decl
shlb
adc
stos
mov
add
hlt
adc
imul
push
into
xlat
dec
mov
inc
dec
pop
sub
and
cmp
or
mov
dec
mov
stos
in
cmp
shrl
xor
das
cld
decl
outsl
jl
cmp
or
adc
xchg
mov
lods
iret
clc
pop
pop
sub
jmp
dec
lds
jmp
aaa
lods
rcrl
fisubrs
inc
scas
or
pop
test
jg
mov
push
ljmp
adc
mov
cmpsl
cmc
cmp
inc
cli
les
mov
mov
call
aas
jg
ret
in
sbb
add
es
shrd
ret
jp
mul
popa
js
and
das
pop
push
sti
ror
mov
loopne
and
sti
mov
add
stos
dec
mov
and
adc
xor
ja
ds
push
pop
insl
or
lds
aaa
nop
sbb
jno
rcll
cmp
and
mov
cmpsb
inc
clc
push
mov
aaa
aaa
aas
int
loope
sahf
jmp
mov
sub
mov
stc
imul
push
outsl
mov
loopne
lock
mov
sbb
dec
mov
mov
andl
sub
rclb
call
pop
dec
ret
lcall
in
jnp
add
mov
fsincos
aaa
xor
js
lcall
popf
testl
pop
push
test
in
jg
jbe
out
mov
repnz
jg
leave
jge
mov
pushl
xchg
je
fnstenv
pop
mov
insl
call
pushf
add
sub
negb
and
in
inc
mov
and
adc
in
xor
add
adc
mov
push
and
jecxz
push
popf
pop
push
out
lcall
and
dec
pop
mov
rolb
repz
add
fs
push
or
add
aam
xchg
jg
lret
ljmp
fs
add
jno
inc
mov
mov
inc
out
cltd
mov
jle
lret
add
push
mov
test
jmp
sti
mov
adc
adc
scas
and
repz
ret
aas
dec
repnz
filds
xor
stc
lahf
repz
mov
sbb
scas
imul
mov
add
xorb
cmp
or
add
lcall
daa
pop
and
or
int3
fwait
xor
add
int3
xor
shll
int3
int3
int3
int3
shll
cltd
cltd
dec
shll
data16
shll
xor
xor
cmpsb
xor
xor
add
cltd
imul
js
int3
int3
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
fisubs
int3
add
imul
cmpsb
imul
cltd
cltd
cltd
cltd
cltd
lcall
cltd
cltd
cltd
imul
imul
idivl
cltd
cltd
cltd
shll
data16
shll
data16
shll
data16
data16
shll
data16
pop
shll
mov
sti
mov
data16
xor
xor
xor
xor
xor
shll
xor
xor
shll
xor
dec
shll
xor
xor
shll
xor
xor
sbb
sub
lcall
popf
imul
dec
shll
int3
int3
int3
cltd
shll
cltd
cltd
xor
xor
data16
mov
mov
mov
aad
out
bound
es
out
pop
inc
shll
mov
or
fs
inc
sbbl
in
fldl
mov
add
jb
pop
add
inc
add
add
dec
ja
sahf
add
idiv
or
insl
ret
lret
into
decl
cli
pop
test
pusha
cs
rolb
pop
pop
pop
js
cmp
cs
mov
pop
paddw
xor
fsubr
pushl
jg
outsb
fsubrp
fcmovnu
dec
out
pop
sbb
adc
in
ret
dec
ja
decl
pop
ss
inc
idiv
fcmovnu
jmp
push
push
mov
std
adc
add
shll
inc
addb
add
add
cld
or
mov
cli
test
xchg
int3
and
lods
jmp
loopne
shrb
mov
xor
fnstenv
outsl
inc
cld
pop
mov
or
jg
jmp
jecxz
mov
int
insl
sbb
dec
pop
das
setbe
xchg
das
pop
negl
sahf
int
int
jg
fistl
xor
movlps
mov
xor
inc
iret
repz
xor
das
add
scas
pop
lahf
das
adc
pop
rcrl
pop
push
cwtl
das
lsl
das
jg
xchg
pop
add
and
cli
das
mov
cli
cli
cli
push
shll
jle
add
incl
inc
ja
repnz
dec
lret
mov
jecxz
dec
add
cli
add
or
call
pop
add
jae
pop
xchg
xor
add
mov
add
pop
fadds
std
std
mull
cs
jae,pn
and
testl
sti
clc
and
clc
sti
pop
jae
fscale
aas
insl
add
xor
pop
sbb
fstp
shrb
pop
int3
cmp
int
out
inc
int3
cmp
sbb
jnp
jbe
std
sbb
add
push
fdivr
decl
pop
pop
or
sbb
pop
aas
pop
mov
and
add
in
xchg
mov
std
sarb
xor
xchg
sbb
jge
pop
bound
pop
sbb
mov
std
lahf
and
enter
inc
sbb
std
out
inc
and
fsubl
out
jbe
push
mov
and
jmp
pop
xchg
mov
add
pop
fnstenv
add
pop
aas
pop
leave
ret
and
pop
out
inc
shr
ret
sbb
xchg
dec
add
sbbl
leave
cli
jmp
and
es
add
pop
fcompl
loopne
or
ret
push
bound
dec
add
or
push
or
aam
test
rolb
pop
imul
and
pop
sbb
adcl
sub
mov
repnz
inc
ror
add
inc
add
sbbl
test
and
add
sub
mov
ljmp
mov
add
inc
pop
mov
or
jle
add
or
lret
or
cmp
arpl
push
lcall
aas
idiv
sub
mov
rcll
test
inc
rorl
std
fistl
pushf
addr16
pop
negb
inc
and
xchg
and
les
jmp
sarb
jge
and
sahf
es
xor
repnz
mov
daa
mov
cmpsb
int
dec
add
jns
stc
rcr
jle
mov
dec
cmp
imul
fs
outsb
or
cld
out
jne
out
sbb
mov
cmpsb
xchg
pop
cld
xor
idiv
cltd
mov
mov
push
mov
lea
stos
incl
push
lret
xor
cmp
pop
ljmp
sbb
mov
lcall
jg
test
mov
ret
cli
stos
dec
sbb
mov
sbb
adc
xchg
in
pop
cwtl
stos
push
dec
sub
fwait
je
inc
jp
cmp
lods
push
leave
bound
scas
jg
xlat
out
in
mov
dec
shr
rcrb
mov
sti
arpl
dec
enter
scas
or
decl
pop
push
das
mov
push
or
xor
cmp
xchg
jbe
test
addr16
sub
gs
std
dec
jg
fucomi
inc
pop
push
and
mov
shl
lahf
dec
test
fistps
ficompl
xchg
lret
sub
jle
icebp
sahf
call
imul
addr16
ja
hlt
scas
mov
lahf
add
pushl
and
bound
jmp
lcall
inc
stos
movsb
and
das
cld
fists
mov
lds
test
and
sbb
decl
fstp
dec
add
push
inc
fimull
dec
xor
lds
das
lret
mov
or
xor
push
idiv
ljmp
mov
pop
gs
lock
add
stos
xor
hlt
into
incl
aam
pop
repz
mov
adc
and
cmp
pop
dec
mov
stc
dec
and
pushl
sbb
out
sbb
adc
jne
sub
pop
mov
xor
inc
sbb
jmp
ljmp
aad
shl
sub
mov
sbb
call
leave
and
pushl
xor
lock
int
scas
cmp
xor
fisttpl
pop
popa
outsb
mov
call
daa
mov
imul
inc
jmp
mov
push
popf
push
ljmp
std
call
lcall
lret
std
cmp
mov
mov
sti
lcall
xchg
inc
and
sub
stos
push
pop
adc
mov
jg
gs
fistpl
mov
stos
push
cmpsl
mov
xchg
push
or
cmp
ss
jg
mov
cmp
push
pop
std
xchg
lcall
dec
insl
repz
dec
xor
lahf
mov
cli
push
addr16
sbb
arpl
pinsrw
sbb
ljmp
adc
xor
cltd
push
xchg
sbb
jae
cltd
call
adc
inc
and
mov
adc
ret
sahf
adc
lahf
icebp
loop
data16
bound
ljmp
bound
inc
loop
mov
push
divb
repz
jecxz
push
sub
jmp
sub
jns
mov
pop
mov
sahf
outsb
jl
xchg
jecxz
mov
mov
pop
movsl
incl
lods
xchg
int
lret
sub
xor
sbb
jl
test
imul
ljmp
push
das
leave
jecxz
jecxz
popa
mov
out
inc
cmp
jmp
xlat
stos
nop
ret
stos
dec
les
ljmp
mov
push
push
xor
dec
imul
jge
call
sar
outsl
in
inc
out
mov
dec
pusha
fldpi
fcomps
fnstcw
or
cmp
mov
icebp
jg
adc
cmp
loope
das
add
push
loop
sbb
mov
fildll
xor
lods
mov
scas
in
popf
mov
lcall
cld
cmp
roll
pop
shlb
jnp
or
mov
dec
mov
jbe
sti
lcall
add
ffreep
mov
lods
pusha
std
jbe
sub
dec
in
xchg
sub
cld
test
dec
ljmp
imul
ss
cmp
xor
sbbl
adc
pushl
cmp
sahf
sub
rclb
dec
icebp
fadd
clc
pop
stos
cmp
mov
jno
decl
add
jmp
lcall
fst
std
mov
inc
xorl
ffree
imul
jg
adc
scas
xchg
mov
adcl
mov
loop
mov
or
sahf
loopne
shrb
incl
mov
jge
out
mov
movb
cli
leave
pop
cmc
and
int
icebp
ljmp
lret
xchg
push
loopne
enter
push
xor
in
ror
fbld
dec
test
jg
ljmp
jnp
insl
mov
xchg
mov
fsubrs
push
lahf
arpl
fsub
in
leave
add
push
jo
mov
jg
call
fs
inc
mov
jno
repz
xchg
push
subb
mov
xor
cmp
iret
pop
aam
fisttpl
xor
pop
inc
add
push
jg
pop
lret
std
aas
adc
fdivrs
and
in
aaa
imul
popf
enter
incl
mov
jne
cwtl
pusha
cltd
ja
enter
fistpll
sub
enter
fisttpl
loope
adcb
jmp
lea
sbb
cmp
sub
clc
mov
pop
rclb
out
rcr
loopne
imul
jo
outsb
or
mov
idiv
push
xor
add
or
dec
mov
mov
add
testl
dec
pop
divb
jo
pop
hlt
cld
aas
enter
or
addl
or
jle
mov
loop
push
aas
mov
jbe
cld
stos
xchg
lods
cmp
adc
sub
add
aaa
ljmp
cli
loope
mov
fdivrl
pop
subb
inc
sbb
pushf
mov
loope
and
cmp
mov
sti
aas
or
dec
shlb
cltd
mov
sbb
jg
mov
and
cli
into
sub
scas
out
fdivrl
xor
add
bound
or
jbe
push
sub
mov
fmuls
iret
xlat
repnz
jg
lods
scas
or
iret
sahf
inc
sbb
jb
dec
icebp
pop
pop
std
mov
and
sub
pushf
outsb
out
js
iret
mov
mov
gs
jecxz
stc
testl
mov
dec
iret
hlt
int3
sub
imul
stos
push
mov
loopne
rolb
cmpb
out
out
fidivrl
adc
sahf
hlt
loope
jg
pushl
outsl
adc
movsl
push
mov
add
pop
call
aad
int
into
int
hlt
push
push
jb
scas
fildl
xchg
push
call
mov
inc
and
or
mov
mov
movsl
inc
pop
mov
stos
sbb
push
rclb
xor
mov
or
rcr
dec
fcmovnu
lret
pop
mov
incl
clc
add
cmp
adc
cmp
mov
pusha
icebp
ljmp
call
inc
out
scas
repz
sbb
pop
sub
popf
pusha
jge
sbb
lcall
fisttps
rcll
loop
mov
loopne
jmp
jmp
lods
and
rcrb
lock
js
fisubrs
add
mov
repnz
idivl
sbb
clc
mov
push
and
je
inc
icebp
mov
aad
cmp
jge
sahf
ret
call
cli
aad
cmp
movq
test
xchg
cltd
insl
lods
mov
cmp
and
punpckhdq
xchg
pop
mov
adc
out
shll
xchg
movb
sbb
in
pushl
aad
popl
add
pop
sub
je
jg
loope
lea
lock
pop
mov
mov
shrl
clc
pushf
dec
push
ljmp
leave
fldcw
outsb
fs
jns
in
jbe
aaa
xor
es
jno
mov
fsubrs
fs
aad
mov
insb
inc
and
mov
inc
jecxz
or
lds
adc
push
dec
stos
sbb
sbb
and
sbb
mov
inc
sbb
inc
mov
mov
movsl
dec
lds
fdivs
and
mov
pop
add
in
sbb
stos
shrb
flds
js
dec
add
add
add
lcall
push
push
stos
aad
or
dec
fs
sbb
add
pop
xor
call
or
fists
or
xor
stos
mov
add
inc
mov
xor
or
and
insb
inc
mov
mov
add
incb
add
imul
pop
sahf
lret
cmpsb
cmp
std
add
insb
pop
mov
cmpsb
pusha
add
sub
add
clc
add
dec
xor
and
jmp
rolb
daa
das
add
pop
xor
dec
jg
repnz
orl
add
int
add
xchg
pop
xor
or
or
rcl
push
call
lret
into
int3
in
add
or
and
lods
faddl
fs
and
test
push
stc
cmp
add
xor
xor
hlt
sub
and
mov
outsl
or
sub
add
loopne
loopne
xor
sbb
dec
fnstenv
andb
and
xchg
xchg
jp
ljmp
icebp
jae
inc
imul
sub
cld
in
call
inc
xor
xor
xor
cmp
xor
or
xor
xor
pop
push
mov
ficomps
nop
xchg
add
ss
xor
imul
xchg
sub
add
add
incl
ljmp
jno
push
stc
push
pop
mov
jge
add
daa
xchg
mov
jecxz
pop
sbb
daa
call
imul
fs
lods
cmp
xor
test
push
lret
push
icebp
inc
ljmp
fucom
mov
cmc
lock
fldenv
les
mov
push
mov
movsb
push
scas
dec
cmpsb
es
or
js
jl
insb
rcll
xchg
xor
pop
ljmp
lahf
mov
lds
pop
cld
sti
pop
insl
jg
mov
ret
xchg
mov
cmpsb
fiadds
push
aaa
mov
xchg
mov
push
mov
test
sub
adc
xchg
push
dec
fisttps
subb
inc
mov
in
push
cmp
in
ret
jge
lds
inc
fs
cli
inc
mov
test
dec
mov
jne
insb
ja
jecxz
pushl
sub
fnstenv
mov
jne
imul
dec
adc
ss
les
fidivrl
and
out
jg
xor
and
add
in
mov
pop
es
insl
jo
movsl
pop
movsl
mov
mov
aaa
arpl
mov
in
dec
fst
xor
fcomp
cltd
testb
test
fucomip
and
sahf
movsl
push
pop
fisubrl
mov
lahf
imul
adc
sar
call
ljmp
push
lods
adc
je
lcall
mov
add
sbb
js
pop
dec
xor
lret
adc
call
xchg
dec
jg
mov
pop
mov
out
push
rorb
and
xlat
ret
inc
repnz
dec
jne
xchg
mov
jmp
dec
xor
or
ljmp
or
jecxz
lret
cmpsl
ds
inc
lcall
data16
jg
sti
std
and
repnz
nop
dec
inc
jae
cmp
dec
mov
xchg
ljmp
xchg
dec
sbb
sbbl
pushf
sbb
incl
lods
iret
sbb
jl
mov
inc
test
and
lods
pop
push
in
add
cmc
ret
jno
cmp
int3
sbb
into
or
scas
hlt
or
fists
sbb
ljmp
dec
aam
mov
mov
xchg
and
sbb
ret
movsl
pop
sti
or
outsl
in
jle
sub
inc
mov
dec
lcall
fistps
inc
pop
cmpsl
cmp
adc
ja
sbb
mov
mov
mov
push
xor
xor
mov
popf
inc
jmp
cld
sub
or
sub
lcall
imulb
jnp
popf
into
jnp
adc
mov
lock
ljmp
jge
fimull
push
jnp
pop
jnp
push
mov
lahf
jnp
sti
repnz
psubusb
fcomps
std
sti
pop
mov
lock
jl
jae
imul
xorl
aam
pop
stos
ja
mov
idivb
sbb
or
pop
pop
ljmp
push
loope
cmp
testb
jae
cld
scas
mov
jnp
clc
push
or
and
mov
popa
ret
mov
xor
hlt
incl
xchg
mov
pop
mov
fsub
mov
fiaddl
or
call
sub
out
enter
in
cmp
shl
and
push
mov
lds
jns
push
std
jg
cmp
fsts
fbld
jge
adc
inc
mov
mov
decl
adc
int3
jae
mov
inc
shl
popa
subl
fbstp
mov
xorl
jbe
in
xchg
scas
in
pop
jmp
loope
inc
mov
std
pusha
enter
mov
lret
or
mov
in
test
sub
pop
divb
mov
aas
lcall
mov
xchg
jnp
push
or
pop
lea
push
movsl
mov
xrelease
ljmp
push
hlt
or
cld
jmp
sub
xorl
pop
inc
add
dec
ret
cmpsl
sahf
jle
decl
mov
sub
int3
sbb
iret
roll
je
mov
lods
dec
adc
es
jl
jg
xor
repnz
lcall
jg
aas
lock
sub
push
dec
mov
in
rorb
fiaddl
cld
in
lcall
push
cmpb
ja
mov
repz
mov
dec
sarl
sub
inc
push
dec
in
pusha
mov
pushl
xchg
jns
shlb
pushf
bnd
pop
bound
mov
icebp
ljmp
pop
xchg
in
fld
inc
cld
fucomip
mov
mov
int
test
test
fs
push
pop
sub
pushl
aas
flds
cmpsl
dec
cmp
mov
ds
mov
xchg
xorb
call
xchg
sub
punpckhwd
fcmovnu
cmpsb
popf
data16
rorl
loop
xchg
mov
xor
or
push
cmpsl
mov
repnz
mov
test
shrl
call
jecxz
lea
cmp
mov
or
pusha
add
leave
dec
mov
pushl
test
mov
pop
cs
dec
inc
jmp
hlt
jns
out
dec
filds
push
lods
lods
outsb
push
xchg
inc
gs
movsb
pop
jno
sbb
jnp
mov
insl
arpl
insl
adc
arpl
and
or
fistps
inc
in
das
xchg
xchg
jnp
sti
adc
cmpsb
dec
shl
fwait
sbb
dec
sbb
das
hlt
ss
sbb
xchg
movsl
imul
mov
aad
insb
daa
inc
sti
cltd
aas
fs
xchg
jge
jp
mov
push
dec
jle
sar
decl
enter
leave
dec
jp
xchg
mull
sbb
daa
pop
ret
std
mov
stos
inc
mov
cmc
je
movq
in
fimuls
jge
flds
inc
call
rclb
insb
ret
ljmp
shlb
call
pop
push
dec
cmp
daa
adc
xchg
enter
mov
adc
xlat
cmp
insb
out
mov
mov
mov
mov
cmp
cs
mov
mov
jp
dec
fldcw
in
stc
sub
mov
sub
inc
cli
fbstp
outsb
mov
mov
xor
lods
jg
cmp
add
int
notb
inc
das
flds
push
and
neg
in
test
lret
orl
test
pushl
aaa
xchg
jge
stc
sbb
pusha
mov
test
hlt
imulb
ss
cmp
mov
lock
lcall
and
repnz
cmc
jecxz
mov
stos
xor
mov
adc
shll
or
cwtl
and
xchg
jne
and
add
or
in
xlat
jnp
pop
inc
ljmp
mov
xor
xor
sbb
cs
or
stc
inc
pusha
pop
jecxz
lcall
rcl
ficoml
mov
out
push
imul
imul
fimull
cld
sahf
pop
ss
or
pop
xor
lcall
jmp
jp
cmp
lds
mov
mov
jl
cmp
ja
shll
or
mov
addr16
jmp
sarl
cmpsl
push
in
testl
mov
incl
mov
sti
movsl
es
mov
mov
rcrb
leave
sbb
std
das
icebp
pop
sbb
aam
dec
inc
inc
or
fdivrp
mov
sbb
mulb
mov
sbb
testb
add
rorl
xchg
jmp
dec
and
xor
sahf
push
inc
push
pop
adc
add
xor
add
xchg
jg
sub
push
xchg
xchg
mov
mov
outsl
mov
jle
cmpsb
loopne
and
xchg
aas
fldcw
jg
sbb
aaa
inc
pop
cmp
decl
jmp
repz
ret
insb
mov
pushf
fsubrl
lods
fwait
stos
insl
add
jae
xlat
call
cmp
xchg
call
sbb
or
sbb
arpl
inc
outsl
jnp
xor
pushl
lret
sbb
mov
add
out
push
pop
pop
add
jg
pop
sub
pop
popa
jb
jl
add
push
lahf
testb
sub
ljmp
enter
sbb
imull
sub
jbe
inc
hlt
in
jg
mov
cld
jge
or
pop
lds
sub
outsl
push
ljmp
in
pop
inc
inc
sti
loop
pop
fistpl
mov
sar
pushl
cwtl
pop
ret
adc
or
out
cmpb
mulb
or
in
stc
lock
push
jg
push
inc
and
lds
pop
adc
mov
out
out
add
pop
std
test
insl
cmp
and
pop
in
dec
sbb
inc
jg
pop
into
xchg
cmp
loopne
std
cmc
push
mov
decb
jg
outsl
std
lret
mov
pop
fdivrl
mov
out
xchg
lods
jne
add
sarl
mov
pop
clc
lcall
insb
dec
or
add
push
lret
cmc
sbb
cmpsl
test
sti
jmp
dec
dec
hlt
or
ret
dec
push
jmp
pop
out
mov
aaa
popa
mov
dec
daa
add
std
pop
inc
insl
and
rol
sub
es
jle
mov
test
movsb
jbe
aam
pop
fdivrl
dec
sarb
or
jb
or
rolb
cmpsl
data16
in
pop
mov
inc
xchg
sti
push
pmaxsw
loopne
scas
ss
fsubl
xchg
imull
aas
fwait
xor
adc
popl
mov
pop
das
shr
in
call
popa
mov
xor
add
pop
js
push
iret
dec
sbb
xor
lcall
cmp
lcall
xor
add
inc
or
lahf
push
std
outsl
jg
inc
inc
add
jge
aas
std
add
sti
mov
aaa
mov
xchg
jnp
int3
mov
jl
lcall
push
aam
ret
mov
push
or
push
cmp
sub
sbb
mov
add
pop
imul
mov
sub
and
aad
jg
in
push
call
xlat
cmpsl
imul
int
lods
xchg
shlb
test
gs
add
jmp
hlt
clc
dec
or
bound
repz
ja
jg
lret
xor
add
dec
cmp
push
jle
mov
loope
stos
cmp
or
cmpsl
pop
lock
mov
into
xor
cmp
mov
push
mov
mov
pop
xchg
sbb
cmp
jmp
lods
adc
jg
push
sbb
sbb
int3
xor
mov
jg
je
hlt
lea
dec
gs
inc
mov
data16
or
addr16
xor
add
out
push
cli
pushl
jmp
clc
mov
sti
dec
pop
pop
jns
adc
aad
jmp
mov
dec
divb
inc
ss
sbb
jg
mov
adc
int
add
sub
xchg
sar
call
movsl
pop
pop
fists
ja
orl
fidivrs
cmpsl
in
mov
fwait
idivl
dec
mov
lods
xor
adc
jmp
xchg
cmp
dec
pusha
pop
mov
lods
incl
jnp
cmp
and
pop
cs
mov
lcall
aas
insl
mov
fwait
jl
int
cmp
pop
add
in
stos
outsb
aas
in
insb
ja
inc
sub
mov
xchg
pop
cmp
insl
dec
sti
push
mov
xchg
and
decl
jno
addr16
stos
repnz
cmpsl
dec
in
jnp
mov
movsl
cvttps2pi
cmp
sub
push
cmc
test
insb
xor
decl
cld
mov
inc
repz
jecxz
xor
sbb
cmp
aad
and
pop
outsb
outsl
adc
xor
cmp
std
xchg
mov
lcall
cld
shr
push
xor
xor
cmp
rcr
pop
inc
push
das
fisttpl
xchg
jno
int
inc
daa
jb
das
loopne
dec
or
dec
push
out
cli
pop
xchg
mov
mov
ret
fucomi
bound
sbb
pushl
fimuls
shrl
mov
insb
sbb
inc
sbb
pop
lcall
xor
and
xor
or
aam
adc
idivl
xchg
test
idivb
loope
icebp
lock
xchg
jbe
addr16
arpl
sbb
push
add
push
outsb
cs
mov
inc
popa
mov
ljmp
xor
sub
pop
jae
addr16
nop
push
ss
sub
imul
sub
jmp
push
mov
push
mov
or
adc
jle
mov
orl
mov
jg
lcall
or
and
inc
and
shl
rep
das
pop
aad
sub
imul
fsub
xor
or
movsb
push
xchg
movsb
aaa
sbb
fidivs
adc
shrb
pop
outsl
jmp
ret
push
repnz
mov
jo
sahf
psubsb
ljmp
clc
jle
scas
lahf
push
xchg
imul
shrl
sbb
rorl
cmpl
out
xchg
mov
pop
scas
fwait
das
mov
arpl
in
xchg
jns
and
pop
cs
mov
ret
cmp
imul
push
pop
mov
repnz
into
out
mov
mov
leave
sbb
adc
dec
and
stos
jne
cmp
ljmp
sub
pop
idiv
pop
les
dec
sbb
cmpsb
dec
mov
divl
outsl
nop
adc
pushl
out
or
loope
push
or
lds
or
pusha
mov
cmp
imul
in
pop
das
and
fs
bnd
and
je
test
hlt
filds
mov
roll
mov
mov
pushf
adc
mov
cli
adc
push
xchg
dec
aam
xor
jne
fldt
aaa
cmp
xchg
out
fbstp
jecxz
jl
jecxz
sbb
or
decl
ljmp
das
dec
jg
mov
pop
repz
sarl
and
insl
div
pop
pop
jbe
aad
jg
pop
icebp
xchg
adc
int3
sub
xchg
mov
fisubrs
ret
iret
cs
push
dec
out
jle
daa
int3
cwtl
pop
cmp
test
and
lcall
fimull
mov
mov
nop
mov
and
ret
sub
repz
ljmp
jns
pop
mov
call
lret
dec
xor
cmp
add
add
adc
jmp
inc
imul
mov
leave
jo
int3
mov
outsl
xchg
and
mov
cmp
mov
xor
dec
imul
adc
adc
jmp
xchg
popf
fsubr
movb
imul
fnstsw
in
dec
mov
jns
pop
push
jne
inc
and
push
ljmp
std
decl
and
or
mov
or
out
out
imul
sti
leave
mov
pop
loop
and
inc
lds
adc
add
or
mov
pop
lcall
add
lds
jp
lock
push
push
mov
cmpsl
cld
out
jmp
sti
stos
inc
jg
ja
aad
jmp
js
pop
cmp
outsl
movsl
pushl
out
es
in
cmp
stos
mov
push
arpl
movsl
imul
sub
xchg
sub
out
in
mov
in
incl
cmpsl
pop
inc
adc
ds
inc
sbb
fcoml
sbb
inc
mov
jg
clc
push
clc
loop
ret
xor
ret
add
int
push
ljmp
add
jb
aas
sub
mov
aad
mov
mov
mov
pusha
lcall
sub
movsl
fistpll
mov
cld
pop
cltd
mov
pushl
ret
aad
sub
cltd
movsb
push
jo
lods
int3
adcl
mov
fildll
cli
inc
icebp
fsubrl
fcmovbe
xor
pop
and
outsb
sbb
mov
lcall
jnp
cmp
mov
mov
mov
xchg
fiaddl
stc
les
mov
aam
and
cmp
in
jg
sub
pop
clc
jno
cld
inc
inc
sti
js
pop
cli
lcall
pop
js
push
out
jno
or
cmc
stc
test
ss
sbb
or
int
data16
sbb
mov
inc
into
sbbl
out
loop
stos
clc
mov
mov
jae
fcmovnu
and
adc
mov
dec
les
pop
jge
stos
xchg
nop
add
cwtl
std
pop
sub
imul
cwtl
adc
sub
mov
out
jg
mov
inc
lret
dec
dec
fs
nop
cmc
daa
xorb
jmp
adc
jg
pushl
sti
lods
cmp
dec
mov
clc
mov
fistl
adc
jg
pushl
or
out
push
and
xchg
mov
jecxz
mov
xor
ds
decl
ss
sbb
adc
adc
les
fwait
or
iret
adc
fildll
xor
adc
push
xchg
jns
lcall
mov
sbb
mov
mov
addr16
mov
sti
mov
cli
iret
test
fnstcw
jns
stc
fidivrl
inc
xor
fbstp
lcall
les
aad
push
mov
lods
sbb
daa
cwtl
pop
subb
fisttpll
jnp
scas
pop
loop
pushl
and
sub
rolb
nop
push
test
call
nop
loopne
shl
adc
clc
mov
loope
push
mov
adc
pop
and
xchg
dec
lcall
sbb
mov
data16
loope
fldl
push
push
mov
divb
sub
in
mov
out
bound
test
jb
stos
jp
sub
incl
mov
loope
cmp
pop
cmp
mov
fisttpl
xor
mov
stos
jg
xor
push
ss
inc
add
push
ss
daa
sub
lcall
in
dec
movsb
xchg
jnp
aad
mov
bound
dec
and
cwtl
lock
stos
mov
push
dec
mov
cmp
inc
or
lods
lea
push
int3
cmp
je
or
jb
loopne
pop
clc
ds
pop
pop
lret
add
fistpl
imul
ds
xchg
xlat
imul
test
or
jg
lret
lret
out
loope
inc
dec
icebp
outsb
movsl
jge
jnp
div
push
push
scas
push
cmp
cmpsb
call
xchg
dec
test
jo
pop
and
jl
fmul
inc
inc
pop
pop
sub
cmc
inc
mov
sub
mov
jecxz
fadds
cmpsl
outsl
enter
outsb
push
orl
push
ret
filds
add
adc
lret
cmp
mov
sub
clc
sahf
outsb
aaa
mov
sti
xchg
xor
cmp
mov
jg
inc
sbb
mov
shl
jg
and
les
push
arpl
push
xchg
popf
in
stos
push
inc
cmp
mov
loope
decl
jge
mov
cmp
xor
dec
out
inc
and
pop
or
sbb
jb
movsb
jp
call
jle
fadds
mov
push
outsb
xor
stos
test
jge
fs
mov
iret
std
repz
pop
aam
push
fs
std
xchg
pop
movsl
ja
int
cs
mov
iret
push
movsl
out
push
lret
add
addr16
fbld
cld
inc
daa
xchg
pushf
std
imul
ljmp
in
xchg
in
vpmulhuw
xchg
outsl
aam
ja
jne
dec
subl
dec
fwait
jg
push
dec
jge
test
mov
fldt
sbb
mov
jg
mov
mov
jmp
das
negb
in
ljmp
test
dec
orb
enter
xchg
int3
xchg
mov
jno
cmp
popa
lahf
mov
out
test
test
jb
repz
je
jne
and
int3
outsb
ret
add
aas
inc
clc
lods
or
push
sbb
lahf
adc
xor
mov
scas
addr16
push
mov
cld
test
cwtl
ror
lods
loop
sbb
or
jmp
and
adc
xor
xchg
jl
mov
mull
cmpb
xchg
pop
cmp
std
test
std
mov
inc
push
sti
lret
push
dec
pop
push
inc
insl
out
jnp
xchg
das
call
sub
xchg
bound
stos
pop
shrl
pop
mov
push
jl
orb
daa
imul
mov
jl
negb
dec
inc
mov
cltd
adc
gs
ds
popa
or
inc
mov
lcall
aas
sti
and
pop
mov
xchg
fucom
repz
mov
lcall
mov
xor
pop
sub
fists
ss
adc
inc
movsb
mov
cmp
jbe
mov
jnp
mov
xor
clc
xacquire
xor
fadd
dec
into
lret
jb
mov
push
movsl
enter
adc
daa
pop
icebp
xchg
jae
xor
and
or
push
outsl
pop
loop
or
jne
sbb
cmp
test
pop
fs
cmp
xor
aaa
mov
lds
ljmp
jge
push
lahf
dec
mov
inc
sub
adc
push
jmp
mov
and
xor
psubd
inc
adc
outsb
cmc
hlt
pop
stc
add
inc
cli
sbb
int
daa
std
ja
inc
xor
or
movsl
mov
push
lcall
xchg
mov
add
mov
loopne
adc
mov
and
mov
sbb
add
cmp
adc
push
mov
lahf
les
pop
xchg
dec
ficomps
std
decl
dec
xchg
push
sub
pop
repnz
pusha
fdivr
or
push
dec
and
mov
dec
cli
clc
mov
pop
mov
sbb
mov
sub
fcomps
adc
add
add
xchg
movsb
mov
aas
xor
or
adc
mov
mov
rcr
mov
addl
mov
inc
fdivr
pop
cmp
mov
push
ja
push
cli
pusha
nopl
and
mov
rorl
push
flds
push
repnz
adc
xor
aas
add
dec
sarb
or
pushf
cmp
je
mov
loopne
stc
add
mov
push
fdivrl
dec
das
or
mov
mov
pop
insb
incl
ror
mov
mov
xor
aas
aam
jmp
int
mov
lock
lods
adc
push
testb
add
jg
hlt
jmp
in
sbb
jmp
and
jge
sbb
subl
lcall
xchg
aas
loop
bound
push
push
enter
jp
fsts
ret
mov
in
mov
outsb
xchg
adc
lret
xchg
notl
rorl
dec
jnp
imul
inc
outsl
je
ret
add
lahf
stc
add
xlat
or
mov
les
jg
out
mov
pop
test
incb
pop
cmc
out
pop
adc
loope
cmpsb
test
call
push
fildl
shll
xor
out
or
aas
dec
stos
inc
push
sub
mov
or
sahf
lea
dec
arpl
cmp
cmpsb
hlt
mov
push
mov
scas
adc
mov
fisubrl
push
int
decl
jecxz
mov
mov
jmp
outsl
std
sbb
data16
fdivrs
nop
sti
push
outsl
insb
jo
int
mov
pop
and
add
sbb
rolb
lcall
cmpsl
mov
pop
jl
jo
ret
fdivrl
xchg
xor
cld
arpl
sti
stos
insl
popf
cmpsl
adc
cld
pop
xchg
fbstp
cltd
jbe
adc
out
das
decb
sbb
imul
stos
xor
dec
rcll
lea
je
dec
repz
pop
xchg
fsubs
push
xchg
cmpb
add
aaa
dec
mov
or
cmc
cmp
jb
pop
pusha
dec
ret
pop
repnz
dec
movsl
sub
xchg
sub
xchg
in
xchg
sbb
xor
int3
lds
ja
mov
ljmp
fildll
decb
sti
cmp
push
mov
pop
pop
data16
jmp
mov
test
int
jg
aad
incb
mov
dec
cld
mov
sbb
xchg
std
pop
into
cmp
lret
dec
inc
in
inc
imulb
jle
jg
sbb
ds
das
aad
pop
inc
rcrb
push
push
std
fwait
push
lret
cld
push
outsl
cs
mov
pop
insb
lds
int
roll
push
fs
aas
je
xchg
push
dec
sbb
in
inc
pusha
pop
cmp
test
jb
mov
stc
cli
mov
shlb
pop
pop
sub
jno
dec
push
inc
data16
mov
shlb
push
mov
xchg
dec
ret
jg
in
mov
mov
xor
incb
sub
push
movsb
hlt
in
js
xchg
cmpsl
out
fwait
in
shl
sub
mov
mov
ja
cmp
jb
and
lds
and
or
bound
arpl
movsb
dec
inc
mov
in
add
shrl
jbe
enter
fcmovu
jg
je
mov
aaa
ret
or
stc
sti
mov
mov
addr16
lcall
movsb
and
frstor
jmp
cmp
int
xor
jg
sub
xor
test
pop
sub
jp
std
cmp
cmp
ficompl
lds
fsin
ret
shl
clc
testb
fs
sarl
sbb
adc
xchg
js
jmp
sbb
fdivr
aas
testb
or
sbb
lahf
js
aas
xchg
sbb
mov
mov
fwait
jge
incl
call
out
popf
jecxz
push
inc
xchg
stos
fldcw
and
sub
jbe
icebp
incl
cmp
call
mov
sub
jmp
enter
lret
les
les
xchg
lock
pop
cmp
mov
sbbb
jae
into
das
mov
pop
aaa
popl
out
inc
pop
out
mov
lret
std
shll
mov
fucomp
pop
shrb
sti
cmpsl
ret
cwtl
mov
jg
popa
fdivs
dec
in
mov
inc
clc
push
int3
inc
fdivs
popa
pop
inc
and
mov
lods
jecxz
les
sbb
mov
lea
mov
loop
mov
jae
jecxz
jecxz
nop
outsb
fsts
mov
ret
cmp
addr16
icebp
data16
je
adc
xchg
pop
es
iret
scas
icebp
fldcw
cmp
cld
cmpl
lock
xor
pop
addr16
mov
push
ffree
or
xchg
or
pushl
jnp
mov
idiv
sub
add
push
pusha
jb
or
inc
outsl
cmp
into
pop
int
fsub
add
incl
mov
pop
mov
movsb
loop
sub
mov
push
mov
cmp
sub
lea
jg
adcb
lahf
test
pop
arpl
int3
pushf
jno
inc
rorl
pushl
clc
mov
pop
fadds
int
inc
and
movsb
push
cmp
stos
lcall
sbb
fistpl
sub
cmp
out
ljmp
jno
jmp
and
in
push
call
fidivl
lcall
mov
fs
push
sar
repz
mov
rcrb
jb
jmp
movsb
xchg
add
adc
add
jo
mov
cmpsl
shrl
mov
movsb
and
call
stos
xchg
mov
fwait
loope
push
cmpsb
xchg
jae
inc
orl
enter
sarb
mov
xchg
mov
sti
dec
lea
fldcw
lcall
js
sub
sub
fninit
add
cmp
push
cmp
jne
mov
dec
bound
loop
mov
xor
in
mov
push
cltd
cmp
int
vmread
std
cwtl
repnz
call
imul
loopne
pusha
fcoml
repz
cmp
mov
fwait
ret
rcr
jbe
or
fcmovu
dec
sbb
repz
add
fbstp
leave
into
push
out
lods
lock
nop
cmpsl
les
mov
xor
dec
xchg
stos
inc
mov
ss
jo
mov
mov
cmp
cltd
push
xchg
lahf
jp
dec
lds
fwait
sub
xchg
lcall
or
add
rcll
mov
jne
std
cmp
shlb
adc
pop
call
inc
movsb
sub
cmp
adc
ds
loope
aas
ret
mov
ds
test
xor
cmc
and
cli
inc
and
dec
or
mov
mov
jmp
adc
jg
adc
pop
lock
jmp
das
aaa
ss
fsts
inc
jns
cld
and
cld
or
and
sbb
xchg
out
cs
mov
or
daa
clc
push
push
cmp
outsl
mov
rcl
dec
ror
inc
dec
lock
mov
out
dec
add
fdivrs
addr16
cld
pop
loope
pop
hlt
pop
sub
mov
incb
push
popf
push
mov
pop
add
push
cmpsb
or
jbe
idiv
pop
jns
sbb
imul
and
cltd
mov
in
jecxz
jno
pop
das
lods
call
and
mov
imul
xor
pop
sti
jno
insl
ret
push
jno
jno
xchg
pop
lea
add
xchg
lcall
fstl
jle
leave
mov
cmp
sub
inc
pop
or
bound
sub
stos
cmpsb
mov
push
or
inc
fists
mov
mov
push
inc
ja
cli
addr16
push
lret
stc
in
loope
xchg
in
stos
mov
sbb
aas
enter
roll
pop
adc
mov
xchg
add
sbb
adc
jg
adc
nop
movsl
in
cmp
out
cmp
in
mov
mov
xchg
pop
cld
hlt
add
xchg
pop
out
fsubrl
jg
fldl
out
dec
cli
repnz
xchg
std
cmc
sbb
clc
jg
movb
xchg
inc
testb
mov
out
das
in
inc
das
fwait
dec
dec
dec
loope
das
in
add
in
xchg
hlt
loop
divl
mov
outsl
fiadds
xor
fcmovne
fdivrl
add
xchg
std
clc
repz
mov
jle
mov
fisubrs
ret
xchg
daa
out
pop
notl
orl
xor
fstpt
popf
dec
pop
jg
mov
loope
fwait
jmp
jmp
pushl
xor
mov
sub
addb
add
mov
add
lret
xchg
in
divb
fnstenv
jno
pop
cmc
in
fistpl
test
sub
add
popa
pop
add
mov
lds
mov
aaa
xlat
lret
mov
add
pop
sbb
outsb
xchg
mov
stc
mov
shlb
fstpt
das
fildl
cmpsb
push
pop
mov
adc
fdivr
into
mov
cmpsb
push
sbb
arpl
jo
ret
out
mov
inc
push
sbb
test
mov
add
addb
xor
es
fwait
jl
incl
or
add
adc
jb
pop
add
add
cmp
inc
pop
cs
lret
add
pop
add
add
add
add
xchg
lds
rolb
fiadds
jmp
clc
call
lock
push
movsb
mov
lret
cmpsb
cmp
fwait
mov
f2xm1
add
dec
dec
jmp
frstor
mov
adc
push
shll
inc
push
dec
shll
int
xor
shll
push
imul
stos
mov
into
fimull
xor
out
pop
jl
mov
f2xm1
call
xor
sar
ljmp
aas
push
dec
shll
mov
xor
shll
adc
shll
inc
push
inc
shll
int
cmpsb
imul
lcall
shll
dec
shrl
mov
into
ficompl
pop
xor
mov
inc
dec
shll
incl
xor
pusha
pop
pusha
popa
popa
bound
pop
pop
pop
pop
pop
or
pop
or
add
decb
push
push
push
push
push
push
aad
sarb
dec
dec
dec
sbb
cmp
cmp
inc
cvttps2pi
xor
xor
sub
outsb
pop
rolb
daa
insl
sub
sub
pop
and
and
fdivrl
and
and
stc
sbb
add
adc
decb
add
scas
lds
lret
test
pop
cld
addr16
xor
sbb
pop
aaa
sti
xorb
bndstx
xchg
mov
cmp
nop
aas
dec
add
daa
adc
cmpl
pop
pusha
or
inc
mov
add
add
and
xor
or
addb
xor
push
xor
cmp
loop
xorl
xlat
lock
push
test
je
push
pop
mov
inc
push
pop
ds
test
sub
mov
sub
mov
ljmp
sub
add
mov
inc
test
inc
dec
mov
pop
add
test
push
sbb
aaa
add
rolb
mov
inc
add
add
aas
inc
test
add
stos
and
xor
add
enter
mov
push
fisubrs
add
pop
int
xchg
push
xor
and
add
sbb
adc
add
or
and
add
push
jnp
pop
cld
dec
inc
add
xchg
pop
adcl
enter
jb
repnz
pop
mov
push
and
fcompl
inc
xor
dec
testb
add
and
shlb
add
dec
jae
or
pop
xadd
dec
push
dec
and
or
jbe
sub
dec
loop
mov
mov
daa
pop
mov
push
xchg
xchg
loope
je
inc
jbe
pushf
sub
daa
pop
xchg
arpl
fstpl
xor
je
inc
or
js
and
inc
mov
jl
subb
xor
movsl
add
add
add
sbbl
mov
add
sbb
add
int3
lahf
aas
mov
push
mov
sub
push
mov
sub
movsb
push
push
push
push
mov
movl
mov
mov
and
mov
and
outsb
jmp
push
mov
call
mov
xor
or
call
xchg
gs
fsubs
xchg
cwtl
xchg
nop
mov
xchg
sbb
pop
lea
push
fistpll
idiv
adc
hlt
popa
inc
add
or
cmp
insl
jmp
jge
push
push
and
fmull
mov
mov
jo
mov
call
inc
in
idiv
inc
inc
and
enter
imulb
mul
call
push
dec
inc
sbb
lea
push
push
push
cmp
out
int
add
mov
call
xor
push
push
call
push
mov
pusha
lcall
push
test
outsl
scas
or
popf
shr
push
ds
leave
data16
push
call
inc
adc
add
in
mov
mov
push
xor
pop
push
mov
jno
jne
push
lods
jnp
add
push
inc
mov
pslld
call
sbb
pop
fcompl
mov
sbb
or
cwtl
add
out
jbe
out
push
push
push
push
push
popf
xor
out
andb
or
push
addb
imulb
inc
fadd
orb
mov
iret
test
mov
inc
add
push
outsl
movsb
gs
pushf
in
nop
push
sub
pop
jbe
sbb
push
or
pop
mov
inc
xchg
fadds
sbb
loope
fisttpl
mov
test
or
xchg
stc
sbb
push
enter
pop
jbe
test
jne
xor
adc
or
fsubs
fldt
fistl
aam
mov
dec
mov
mov
mov
add
mov
enter
lret
imulb
mov
adc
aam
rorb
aam
addr16
mov
sbb
pop
xchg
and
sbb
mov
xchg
movsb
add
push
inc
mov
and
and
rcll
cld
cmpsb
fwait
push
or
arpl
xchg
push
sbb
xor
ret
in
ret
mov
test
mov
aas
rcrb
hlt
or
ret
mov
push
daa
add
push
dec
xchg
adc
imull
test
or
push
or
fstps
sub
int3
mov
sti
testb
adc
push
cmp
fstl
popf
lods
xchg
dec
ret
fcoml
shlb
aas
mov
cmp
jle
sub
fistpll
cmp
push
fmul
pop
push
mov
add
xor
int3
insb
dec
addr16
pop
adc
dec
in
int3
frstor
fucomi
or
loopne
subb
adc
data16
mov
cld
add
or
and
loopne
rorl
mov
cmp
push
leave
push
ret
aas
or
in
cmp
sbb
enter
sar
and
fldenv
add
jae
insl
add
push
cmpsb
ret
jne
outsl
and
adc
fs
mov
adc
jb
push
push
fldcw
lods
xor
inc
outsb
nop
dec
mov
add
xor
fiaddl
push
and
cltd
movsb
jns
push
xchg
jne
in
ljmp
or
inc
das
and
inc
push
inc
shrb
push
leave
fsubrl
sbb
push
sahf
shl
or
or
in
fstp
popf
fnsave
mov
jnp
mov
icebp
adc
out
adc
cmpl
xchg
dec
xor
fistl
pop
xchg
in
pop
call
push
inc
das
cs
repnz
mov
fwait
daa
adc
xlat
mov
push
js
or
js
cmpsl
js
xlat
cmp
fbstp
cmc
loopne
and
mov
mov
jl
pop
mov
cs
xor
cs
xchg
ja
cmp
sub
and
nop
sub
imul
jnp
das
xchg
add
ret
mov
fdivl
lock
repz
inc
adc
les
jne
mov
mov
add
divl
das
fdivrl
sar
test
je
inc
push
xchg
xchg
jo
adc
or
adc
push
mov
mov
push
rcr
fildll
cmp
gs
push
mov
fildl
push
mov
mov
dec
or
xchg
jnp
xor
rorl
insl
add
xchg
pop
leave
and
stc
xlat
xor
cmpsl
add
mov
xor
push
nop
ljmp
push
dec
mov
xor
gs
jo
js
test
nop
hlt
mov
mov
push
mov
add
push
sarl
cmp
out
call
call
fwait
xor
mov
enter
push
std
push
mov
clc
mov
and
mov
mov
mov
fistps
add
insb
in
mov
das
shlb
repnz
fcoml
mov
push
push
xor
xchg
movsl
aam
enter
adc
mov
pop
dec
mov
mov
inc
popa
adc
xchg
movsb
sbb
cwtl
out
test
rclb
dec
mov
sbb
sub
add
mov
les
adc
jl
sbb
and
and
xor
imul
xchg
push
int3
rcrb
dec
mov
vcvtdq2ps
mov
outsb
mov
cmp
subb
add
in
mov
add
inc
in
pop
test
gs
mov
adc
lods
inc
in
pop
stos
fldcw
add
ret
aas
adc
int3
repz
test
out
or
dec
lock
or
inc
mov
outsl
dec
and
in
mov
dec
js
ja
or
inc
mov
add
sub
mov
loopne
fsubs
pushf
cwtl
and
add
jbe
and
mov
sbb
loopne
pop
pop
adc
das
sub
lods
fsubs
lret
dec
gs
and
pop
fdivrs
xor
add
fnsave
mov
enter
or
add
and
add
call
add
cmp
adc
adc
pop
pop
lods
cmp
mov
jg
lods
add
out
add
lods
pop
outsl
es
das
and
push
pusha
daa
jo
and
das
inc
fcomps
inc
data16
mov
cmovns
push
testl
movsl
push
push
nop
pop
sbb
scas
jns
loop
fdivrl
call
and
push
call
sti
pop
push
or
xor
inc
sbb
iret
pusha
test
or
pop
fiaddl
push
notl
xor
pop
adc
inc
mov
xchg
jl
nop
mov
cmp
sbb
or
and
sub
das
sbb
mov
mov
push
mov
sub
cwtl
jne
lret
cltd
adc
mov
mov
test
inc
add
cmpsb
inc
lods
aam
or
xor
pop
mov
mov
pop
mov
les
cmp
mov
cmpsl
movsb
dec
inc
fildll
mov
or
adc
adc
movsb
mov
addl
or
xchg
sbb
lret
dec
pusha
movsb
sub
lret
mov
dec
add
pop
push
ret
cld
inc
faddl
movsb
xor
mov
call
cmpl
and
xchg
mov
cmp
add
or
mov
flds
or
inc
lret
mov
jb
sbb
cmp
cltd
movsb
sbb
mov
push
leave
fs
loopne
inc
lcall
push
rorb
dec
sbb
dec
push
push
mov
push
mov
cmp
insl
into
gs
dec
push
adc
leave
add
or
and
fs
fisttpl
add
testb
lcall
sub
je
pop
push
push
push
stc
mov
sbb
adc
cs
and
add
stc
nop
push
push
fadds
jb
fistps
pop
lods
mov
sbb
sbb
jl
or
nop
mov
jp
jmp
cmp
shr
mov
loope
push
psllw
insb
cmpxchg
inc
int3
add
test
cmp
add
push
out
and
dec
mull
insb
push
adc
flds
cmpsb
daa
or
movsb
imul
and
push
cmp
outsb
pop
jnp
adc
inc
data16
popa
push
add
dec
pop
pop
movsb
pop
pop
xchg
xchg
jl
sbb
push
push
outsl
call
sub
ret
das
cli
sub
imulb
mov
add
test
orl
pop
pusha
mov
movl
jle
stos
iret
adc
mov
adc
inc
imul
jno
sub
scas
outsb
mov
push
or
add
mov
and
xor
enter
mov
xchg
mov
inc
int
das
icebp
mov
and
mov
mov
add
shrb
push
enter
ljmp
loopne
leave
pinsrw
adc
xor
sbb
fisttps
cmp
lret
sub
jo
mov
add
xchg
js
mov
jl
xor
add
loope
enter
and
adc
in
pusha
or
push
push
mov
or
inc
add
dec
inc
aas
addr16
fcoms
iret
scas
mov
aas
jg
pushf
mov
in
and
cmp
pop
push
or
pop
jmp
sbb
push
adcb
push
xorl
je
out
je
mov
xor
push
xor
sbbb
pusha
add
pusha
add
add
pop
cmp
inc
xor
adc
ss
cmp
cmp
setne
neg
bound
into
ss
into
mov
cmpsl
repnz
mov
sub
mov
or
rolb
dec
or
cmpl
add
inc
mov
in
xor
xchg
ret
imul
push
test
jne
mov
ja
xor
cmp
imulb
push
sub
xor
jne
cmpsl
pop
imul
pusha
dec
push
fwait
cmp
inc
sbb
int3
cmp
fnstenv
mov
or
jecxz
push
dec
push
add
fs
push
xchg
jne
sbb
leave
les
movsl
xor
int3
enter
aas
inc
add
sbb
push
mov
push
loop
mov
aas
dec
dec
sbb
lea
cli
pop
xchg
test
xchg
call
xor
shlb
inc
rol
cwtl
pop
popf
dec
xchg
xchg
xchg
int
add
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
and
and
lock
loopne
shlb
pushf
cwtl
xchg
movsl
data16
nop
std
cmpsb
ret
or
cmc
movsb
push
mov
lock
add
int3
mov
outsl
test
cmp
sbb
inc
pop
adc
sub
nopl
xchg
pop
cmp
mov
push
imul
sbb
dec
push
mov
addr16
pop
jl,pn
pop
es
jbe
adc
or
push
nop
mov
mov
cs
iret
movsl
pop
insb
or
pop
insb
push
pop
mov
pop
adc
cwtl
inc
and
pop
pop
dec
adc
jno
mov
lea
lods
mov
popf
test
das
or
cld
lcall
je
adc
test
and
mov
push
xlat
js
adc
loope
add
dec
or
sub
jmp
stos
notl
data16
sbbl
insb
mov
dec
mov
push
cltd
pop
pusha
into
cmpsl
in
jg
cmc
push
ret
or
je
and
cmp
push
push
mov
add
test
mov
mov
or
mov
jnp
sbb
jle
pop
or
mov
push
xor
cmpb
in
mov
inc
dec
push
inc
fldt
fiaddl
inc
and
cmc
int3
aam
push
pop
xchg
sub
into
fdivs
test
inc
js
outsl
fwait
lds
and
jo
test
xor
inc
mov
push
push
push
inc
rclb
fcompl
pop
xchg
mov
sbb
das
and
nop
push
push
push
insb
pop
add
inc
jl
push
xchg
imul
jnp
leave
inc
sbb
jo
lcall
dec
sbb
push
arpl
mov
push
das
pop
lock
mov
cmp
jbe
mov
add
idivl
mov
dec
mov
and
js
les
cmp
xor
push
sub
or
or
mov
adc
sub
movsb
pop
hlt
dec
adc
les
stos
add
gs
jge
or
jne
cmp
leave
push
push
or
cmpl
mov
inc
int3
push
jno
xor
mov
xor
sbb
push
add
adc
lods
xor
adc
sbb
test
inc
mov
enter
adc
pusha
sbb
pop
jge
movsl
jbe
leave
adc
neg
xor
inc
jnp
mov
test
in
push
push
imul
mov
mov
shrb
orb
or
mov
mov
jnp
jbe
pushf
js
sbb
repnz
sbb
mov
add
push
pop
push
jmp
jge
and
imul
int3
sub
leave
dec
adc
subl
sbb
fsubr
ret
cmp
jmp
add
ret
shll
popa
je
mov
out
adc
mov
cwtl
ficoms
pop
jno
cmp
or
mov
xlat
cmp
popa
in
push
fmuls
out
mov
push
fmul
orl
sbb
mov
and
mov
mov
dec
adc
leave
enter
adc
push
shlb
pop
xor
in
pop
sbb
sub
clc
adc
add
rolb
dec
mov
clc
mov
or
dec
mov
arpl
gs
inc
jns
cwtl
mov
es
enter
mov
sbb
or
sbb
xor
cwtl
and
or
mov
xor
stos
outsb
or
inc
cs
bound
lock
insb
gs
bound
add
xor
pop
mov
push
rcrb
sub
loopne
cmp
mov
push
cvttps2pi
xchg
mov
in
inc
adc
lcall
ror
cltd
fisubl
arpl
push
cmp
pop
pop
inc
sub
jb
dec
clc
test
mov
xabort
add
dec
push
and
sbb
arpl
movl
push
mov
shlb
es
mov
sub
push
jmp
sbb
and
xchg
add
mov
pushf
lea
sub
pop
add
sbb
inc
inc
lcall
out
pop
mov
xchg
lock
adc
insb
sbb
push
nop
add
stos
fsts
fs
push
push
push
push
add
add
imul
mov
mov
xchg
in
mov
mov
or
aam
xlat
inc
js
add
mov
mov
add
mov
and
mov
mov
adc
dec
call
leave
cmp
iret
push
jmp
lret
sub
lea
aas
leave
push
jnp
or
loope
or
xchg
push
sbb
popf
test
dec
push
xor
addr16
or
adc
inc
loop
int
push
es
jb
fisubrl
and
add
in
sbb
mov
add
test
push
xor
jle
adc
call
insb
mov
dec
mov
je
in
inc
adc
and
ror
adc
push
in
mov
pop
push
dec
push
mov
sub
lea
dec
push
les
faddl
xchg
mov
xchg
lcall
push
aam
add
flds
cs
add
test
push
mov
jmp
pop
out
and
mov
mov
lahf
and
jmp
fsubs
sub
aaa
xor
push
push
movl
xor
add
xor
push
fwait
jp
and
dec
lea
inc
and
cmp
cltd
mov
cmp
or
test
je
add
and
push
mov
and
dec
add
push
and
gs
pop
dec
push
xor
pop
or
jae
mov
outsb
pop
push
icebp
mov
jmp
sub
mov
call
or
sbb
in
inc
lea
dec
aam
push
dec
xchg
push
aad
call
dec
inc
or
enter
inc
les
pop
test
push
pop
jne
repz
cmpsl
push
pop
or
in
addb
sub
adc
lcall
dec
push
out
xchg
lods
lea
xchg
xchg
or
cs
and
and
jb
ja
sbb
pop
mov
add
sub
outsl
mov
and
enter
das
push
fs
mov
fsubr
sbb
in
add
sbb
inc
sbb
or
dec
add
pop
mov
add
insl
jle
push
and
cmc
add
add
enter
cmp
xchg
or
add
loopne
enter
push
loop
inc
mov
arpl
lds
popf
pop
andb
or
adc
push
cld
adc
movsb
pop
mov
add
enter
add
dec
adc
pusha
or
or
and
outsb
stos
daa
mov
sub
push
jmp
inc
xchg
clc
or
jge
add
icebp
pop
sub
lds
cmp
and
in
adc
jl
ret
sub
pop
mov
xor
fs
pop
push
or
add
les
or
or
das
leave
and
add
cmp
lock
movsl
adc
cmp
or
xchg
mov
push
jo
mov
cmpsl
mov
clc
push
nop
lods
call
stc
xlat
jmp
aas
lock
inc
inc
sub
inc
mov
aam
and
lods
or
or
adc
pushf
insb
out
and
sbb
xor
or
nop
cmp
jb
fwait
cli
dec
sti
pop
xchg
push
scas
inc
ret
sahf
in
add
xor
sarb
cmp
movsb
frstor
jb
les
pushf
and
xchg
stc
in
sbb
adc
mov
pop
sbb
daa
ret
add
inc
in
jo
ficompl
test
lock
decb
ficompl
hlt
xchg
push
jp
adc
in
sub
mov
push
add
test
push
push
sub
mov
xor
hlt
test
push
test
push
fucomip
inc
push
lods
sbb
inc
add
jl
cmp
or
lret
mov
aam
add
ds
incl
push
cmp
push
cmp
xchg
leave
jbe
mov
jae
movsl
or
sahf
sbb
loopne
adc
pop
xor
out
icebp
repnz
sbb
test
push
cmp
add
add
push
push
sbb
es
insb
xchg
cmp
cmp
mov
or
or
fcomp
push
jne
xor
lea
lea
sbb
test
and
fdivrs
push
mov
or
arpl
inc
adc
test
xchg
in
fsts
xchg
xchg
lea
add
or
test
inc
test
add
xchg
inc
mov
lods
movl
mov
jne
and
and
les
mull
enter
push
jns
mov
jmp
push
test
frstor
fcoms
and
into
xchg
adc
fs
add
inc
dec
cmp
fsts
adc
cmpsl
inc
or
jo
movsb
inc
scas
in
dec
dec
bnd
cmp
je
jg
add
pusha
mov
insb
xchg
lret
adc
adc
pop
pusha
loopne
mov
pushf
push
jge
pcmpeqw
mov
xor
fbld
xchg
or
xchg
cmp
cmp
adc
dec
enter
pop
inc
mov
aam
test
mov
inc
xchg
xchg
lea
inc
sbbl
subb
pop
inc
mov
and
push
pop
sbb
add
fwait
mov
je
or
movsb
psubq
pop
push
or
and
adc
xchg
into
or
ds
int3
popf
cmp
sbb
mov
aam
insb
dec
and
int
dec
push
sbb
cld
incb
add
add
cmp
add
out
adc
add
inc
jecxz
and
cmp
dec
jecxz
push
xor
lods
sbb
and
mov
mov
adc
push
sbb
in
popa
clc
lret
sub
sbb
mov
or
cwtl
sbb
ds
adc
in
stos
hlt
hlt
decb
popa
add
xor
clc
rclb
push
add
add
pop
xchg
dec
and
lock
and
add
xor
int3
sbb
mov
fisubrl
push
nop
loop
stc
adc
negl
xor
push
popa
scas
push
sub
js
sbb
fcom
inc
rorb
in
xchg
or
sbb
movsl
adc
and
and
lds
sbb
add
jg
mov
inc
mov
imul
jmp
jo
in
ja
push
mov
xor
mov
pop
jmp
out
rcll
gs
les
mov
ret
subb
cmp
jg
insb
repz
xor
mov
inc
shll
mov
jle
or
add
add
jo
jmp
pop
adc
push
js
mov
inc
push
push
aam
dec
inc
je
mov
mov
aas
ret
sbb
inc
mov
daa
fiaddl
call
mov
clc
pusha
inc
or
xchg
sub
or
wrmsr
sbb
inc
movsb
and
mov
add
int3
add
rcrl
mov
mov
sub
mov
push
jb
sbb
push
mov
push
pop
push
aaa
add
dec
cmpb
jne
les
lret
ficompl
sbb
inc
dec
jmp
out
xchg
xchg
adc
nop
cmpl
cmpsb
fsubrl
sbb
and
pop
pop
dec
aad
insl
inc
std
mov
dec
mov
mov
sbb
mov
push
inc
push
push
ret
dec
push
in
push
push
jns
gs
push
test
test
addb
dec
add
lea
cs
out
and
or
pop
pop
push
dec
ljmp
lcall
or
in
dec
pop
dec
sbb
and
cmpsl
sbb
int3
and
gs
enter
pusha
lea
fmuls
jnp
stc
sahf
cmp
les
adc
lret
inc
mov
xchg
stos
sbb
pop
pop
int3
sbb
rolb
add
pop
inc
inc
inc
mov
bound
fldcw
inc
sbb
mov
xchg
inc
add
cmp
insb
xchg
xchg
or
add
mov
in
cmp
outsb
shlb
mov
es
or
or
aam
rolb
aas
push
jl
dec
adc
stos
aam
cmp
dec
icebp
mov
cmp
xchg
daa
fdivs
mov
jnp
int3
or
push
pusha
sub
mov
fs
xchg
stc
in
pop
cwtl
push
int3
push
lcall
mov
int
and
inc
sub
nop
out
shlb
dec
mov
dec
bound
inc
sub
inc
sub
dec
mov
cmp
adc
les
fadd
xor
mov
call
or
dec
leave
and
mov
mov
dec
jecxz
add
loope
push
or
insb
enter
cmp
int
and
push
out
addl
dec
mov
dec
pop
push
mul
in
xchg
insb
insb
xchg
push
je
or
sbbl
inc
adc
fdivrl
idivb
push
pop
mov
pushl
fisttpl
push
pop
dec
push
outsb
push
aam
or
out
push
mov
or
call
out
popf
lods
das
add
mov
mov
push
mov
adc
in
or
mov
les
push
mov
loope
push
mov
push
jle
in
adc
popa
test
ss
or
xchg
sub
push
push
aas
stos
pop
xor
repz
mov
jns
popa
jo
es
mov
xchg
xlat
and
pop
jnp
in
call
jne
push
adc
xchg
sub
and
push
xor
fimuls
pop
dec
ss
gs
mov
and
rorb
add
repz
lahf
add
xchg
jle
sbb
lea
mov
sbb
mov
and
addl
into
fsubs
jo
orb
loope
je
lea
test
sub
popa
and
jno
push
je
mov
mov
out
idivl
sti
dec
js
insb
inc
aam
sub
js
sub
std
xlat
mov
adc
imul
sub
xchg
lods
es
popf
cmp
cwtl
xchg
xor
sub
leave
pusha
xchg
dec
daa
nop
cmp
and
push
adc
fcomps
adc
ss
nop
adc
sbbb
adc
insb
into
mov
fsts
call
mov
mov
sub
cmp
add
fisubs
inc
bound
test
dec
jno
jbe
mov
lret
push
sub
leave
pushf
mov
sbb
xor
push
mov
into
test
pusha
pop
push
jb
or
or
push
ret
cmpsb
push
push
sbb
mov
orl
sahf
or
mov
loopne
daa
loope
cltd
push
cmpsb
test
sbb
push
adc
sub
adc
andb
add
addb
pop
mov
mov
mov
lahf
add
cmc
mov
testl
mov
pop
cmpl
lock
xchg
jo
inc
xor
xchg
inc
and
aaa
fucomi
popf
add
cwtl
xor
jnp
icebp
inc
jns
inc
loop
add
add
xlat
shl
and
mov
adc
out
mov
or
dec
add
adc
mov
lods
fcomps
mov
nop
sbb
lea
jmp
pop
leave
dec
je
push
dec
cwtl
leave
mov
dec
shll
ret
jnp
leave
movsb
pusha
xorb
xor
mov
call
pushf
aaa
dec
adc
bound
or
pop
push
sets
push
push
adc
inc
lret
les
ljmp
fdivrl
push
push
mov
sub
scas
pushf
sti
jne
jg
movswl
movsl
mov
fcoml
push
sub
cmp
les
movsb
mov
mov
mov
dec
cmp
xor
and
pushf
push
mov
push
daa
mov
push
xlat
xlat
adc
insl
xorb
mov
jo
mov
pop
dec
add
add
dec
notb
inc
and
sub
add
xor
aam
mov
lds
mov
sbb
loopne
cwtl
mov
in
mov
and
pusha
test
xchg
addr16
add
sub
lods
test
int3
xlat
or
push
xor
rcl
dec
insb
sahf
push
shlb
dec
cwtl
aas
mov
ror
sbbb
pop
mov
iret
fidivl
neg
sbb
inc
add
test
je
imul
into
ds
adc
inc
sbb
arpl
mov
mov
xlat
inc
lods
dec
xlat
xor
fstpl
lahf
insb
sbb
push
mov
mov
dec
and
jno
int
pop
insl
pop
pop
scas
gs
les
inc
test
push
xchg
push
xlat
sarb
push
hlt
push
push
mov
lock
push
mov
mull
xor
arpl
mov
add
and
pusha
dec
push
dec
repnz
mov
add
and
loop
mov
inc
mov
mov
xor
mov
cmp
scas
shlb
out
ret
mov
push
pop
ret
add
mov
dec
mov
and
loope
imul
add
ficompl
push
orb
movsb
fdivl
and
dec
pop
testb
mov
cmpsb
test
pop
fsubl
pop
add
add
cmp
ljmp
and
inc
jl
mov
inc
add
loopne
cmp
adc
shlb
dec
aam
jp
in
mov
rorb
jne
sahf
dec
pop
sarl
dec
rcrb
js
add
mov
jo
pop
push
pop
lea
jns
mov
xchg
cmp
clc
add
or
mov
inc
in
testb
aaa
push
jnp
xchg
incb
pusha
fldt
jbe
adc
add
jo
out
bound
sbb
lret
xor
add
nop
cmpsl
pop
ds
push
inc
jb
xchg
or
fnstcw
dec
pop
roll
or
xor
nop
lods
jo
fisubrs
test
test
pop
and
add
in
mov
jno
int
and
dec
lock
dec
xorb
scas
stos
rolb
int3
cltd
imul
shll
mov
push
fdivs
adc
inc
xchg
xor
ret
lods
adc
inc
sub
add
insl
jmp
sbb
jae
enter
inc
mov
out
notl
sub
and
ret
in
or
and
or
popl
dec
stos
lcall
inc
out
pop
xor
and
and
xor
xor
and
push
int3
or
in
push
int3
sbb
addr16
xchg
test
test
dec
jp
mov
sub
pop
xchg
ss
push
cmp
mov
loopne
add
shrl
rclb
jmp
add
cmpl
and
xchg
int3
xchg
or
pop
sahf
adc
movsl
push
push
dec
fidivs
into
cmpsb
mov
fnstenv
repnz
inc
in
inc
lea
xor
dec
add
lcall
dec
ss
lret
adc
test
push
inc
and
orl
jg
or
xor
movl
mov
add
xchg
xchg
lods
xchg
add
fwait
jmp
rolb
add
or
test
and
and
sbb
pop
rcr
mov
inc
xchg
arpl
leave
mov
jp
dec
adc
inc
or
icebp
in
mov
orb
popl
leave
je
cmpw
jne
mov
inc
adc
fistpll
clc
jb
negl
mov
jmp
fiadds
mov
data16
enter
or
and
rolb
and
push
jo
lea
les
mov
push
rclb
je
in
fwait
jmp
or
xor
les
pop
ret
sbb
mov
mov
pop
sarb
push
push
es
pusha
or
pusha
xchg
dec
rorl
add
cmp
push
ret
and
repnz
or
add
pop
and
fmull
sbb
mov
jg
and
jle
sub
add
xor
outsl
mov
adc
mov
sub
or
push
ret
push
inc
xor
enter
adc
rcrb
fdivs
or
adc
not
mov
or
sub
iret
ds
outsb
xor
xchg
add
in
mov
mov
mov
fstp
cltd
adc
add
and
repnz
cmp
mov
cmp
and
sub
cmp
jb
popf
jmp
imulb
cmp
mov
mov
out
push
or
add
mov
jl
ret
icebp
push
mov
data16
aam
adc
adc
lock
xor
mov
jle
mov
and
sub
cmp
sbb
outsb
or
mov
mov
insl
xor
arpl
sub
int
pop
mov
inc
add
movswl
lahf
cmp
inc
adc
lds
jo
mov
xor
mov
mov
mov
mov
add
pop
inc
pop
sbb
adc
lods
add
int
fwait
call
and
lahf
call
arpl
sub
sbb
nop
lcall
repnz
and
inc
and
push
sub
xlat
cwtl
mov
adc
sbb
dec
mov
mov
movsb
pusha
mov
push
xor
orl
jg
jbe
mov
lods
xor
inc
xor
cmp
addr16
sbb
dec
xor
aas
and
lea
or
xchg
out
je
push
or
outsl
outsl
jns
rorl
add
iret
and
add
adc
mov
sbb
or
sbb
aam
mov
outsl
rolb
mov
mov
push
add
je
test
je
push
inc
addr16
adc
adc
xor
adcl
add
loop
pop
pop
push
test
push
push
sbb
cli
push
push
push
mov
lcall
fildl
je
xor
xchg
and
rorb
cltd
idiv
and
mov
mov
shr
pop
jne
mov
pop
mov
mov
xor
shl
mov
gs
std
pop
cld
inc
ror
hlt
or
sub
fs
mov
mov
scas
pop
mov
lcallw
std
hlt
std
lock
fistl
addr16
xor
into
lds
fxch
lea
loope
jl
repz
inc
push
cmpsb
je
inc
outsl
cmp
jbe
loopne
scas
lods
daa
sarb
arpl
cs
dec
xor
das
mov
mov
pop
cmp
pop
push
or
sbb
aam
inc
sbb
pop
imul
sarb
dec
dec
jge
or
or
pop
ds
lea
cmpl
lret
je
shlb
mov
ss
and
fidivrl
fdivs
sbb
jmp
rolb
mov
inc
adcb
notl
cwtl
mov
jecxz
xor
lds
push
inc
movl
sahf
jecxz
insb
popa
sbb
mov
sbb
add
xor
fs
pop
add
cmp
mov
pop
dec
adc
pop
push
rcrb
rcrl
adc
inc
add
insb
adc
mov
add
dec
arpl
popa
fs
data16
inc
add
or
adc
add
pusha
push
out
add
sbb
pop
loop
roll
imul
push
adc
ljmp
lock
adc
inc
add
mov
test
jns
popa
arpl
loop
add
add
add
jno
fadds
lahf
xor
inc
pop
sbb
fiadds
fdivs
dec
outsb
pop
jbe
pushf
sbb
jno
xor
mov
add
jb
pop
ret
dec
decl
add
int
cmp
cmpb
mov
pop
cmp
add
lds
or
js
pop
mov
fistl
imul
mov
push
jle
inc
push
inc
dec
push
pop
push
dec
dec
dec
or
jno
pop
push
icebp
mov
adc
insl
jo
loop
add
test
lret
mov
xchg
nop
or
or
fcmovbe
push
xor
jb
add
jae
mov
bound
out
cmpsb
add
xchg
add
dec
add
mov
mov
andl
sbb
popa
adc
inc
mov
xchg
pop
add
cmp
jb
popa
sub
sbb
fcompl
push
jne
jns
outsb
mov
mov
xchg
lock
or
mov
and
cmc
addr16
add
sbb
sarb
arpl
outsb
lcall
pusha
inc
push
mov
cbtw
pop
insb
pop
int
stos
orb
add
inc
stos
je
jmp
insl
mov
pop
test
add
mov
cwtl
nop
stos
loopne
lret
mov
sub
sbb
sub
and
jnp
adc
sbb
gs
addr16
xor
adc
adc
or
xchg
mov
add
push
jmp
leave
sub
ret
push
test
add
std
popa
and
ljmp
ret
adc
fbstp
xor
and
xor
push
aas
add
or
or
jg
push
inc
dec
add
add
add
add
lcall
add
ja
pusha
adc
inc
rcr
adc
add
add
jb
pop
mov
popa
sub
sarb
and
dec
sub
adc
sub
clc
add
cmp
scas
je,pn
scas
fadds
ffree
jmp
and
cs
sti
add
jnp
std
xchg
jb
or
lret
test
daa
add
add
add
ds
add
add
add
incl
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
