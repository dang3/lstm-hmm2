mov
add
adc
mov
add
add
add
stc
pusha
cld
mov
in
in
arpl
jmp
jae
cmc
jb
mov
into
pop
cli
pop
lods
aaa
xchg
cs
jl
shlb
icebp
push
jno
fucomi
repz
add
lods
push
fs
imul
fsubr
sbb
das
scas
ret
mov
push
push
push
pop
int3
aad
push
pop
xchg
mov
icebp
in
inc
xchg
pop
loope
push
pop
pop
mov
and
add
scas
pop
arpl
push
mov
sub
idivb
cmp
cs
dec
lock
enter
push
fnstsw
pop
iret
lret
cmp
int
cmp
mov
and
mov
imul
or
das
cmpsl
or
fstps
mov
stos
daa
sub
scas
mov
jns
les
addr16
cmp
fs
pop
ret
inc
test
test
fdivp
dec
inc
mov
lods
mov
je
pop
dec
stos
shl
mov
sbb
sub
xchg
mov
inc
popf
test
test
xor
ljmp
push
pop
cltd
jb
dec
popf
and
loopne
pop
mov
push
push
addr16
push
inc
add
stos
outsl
pop
outsl
fld
aam
fmull
mov
in
or
or
adc
mov
adc
pop
aam
lods
in
xchg
mov
xchg
sub
pop
arpl
sbb
pop
aad
bnd
scas
mov
sub
aad
fwait
jg
test
add
mov
cmp
std
insl
out
notl
outsl
sbb
or
cmpsl
iret
loope
loopne
pushf
ljmp
add
imul
adc
imul
rclb
lret
sbb
fistpl
fadd
sub
mov
xchg
js
sub
js
sbb
gs
pop
mov
jo
shlb
sbb
jle
cmp
shl
movsb
sbb
dec
cmp
and
mov
sub
sub
mov
cmp
aas
mov
imul
mov
xlat
inc
mov
pop
movsl
shl
inc
cs
popf
and
lds
out
adc
mulb
stc
or
jg
mov
ror
fmull
fisubs
popa
shlb
pop
adc
dec
rorb
jg
lods
mov
cmpsb
pop
fldt
sub
dec
push
movsb
in
ret
aas
or
aaa
popa
into
adc
fistl
push
dec
push
and
out
xor
js
xchg
or
adc
adc
jecxz
and
shlb
stos
sub
test
ja
jecxz
sbb
mov
jb
dec
in
shll
sbb
push
push
movsl
xor
cmp
dec
fstl
cmp
adc
outsb
idivb
xchg
loope
fstps
push
mov
dec
movsb
sub
push
adc
mov
add
push
lahf
xchg
lret
xor
bnd
mov
mov
ss
push
mov
rcr
xchg
and
pop
push
es
icebp
lcall
in
mov
mov
add
ljmp
sub
adc
mov
pop
mov
cmp
fs
add
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
jbe
mov
fdivr
mov
pop
popa
dec
clc
icebp
aas
decb
call
mov
jecxz
popf
xor
ss
stos
pop
mov
jne
jmp
dec
cltd
or
jmp
hlt
test
sub
pop
gs
pushf
and
clc
fdivr
cmpsb
insb
dec
sbb
daa
lock
and
jb
adc
xchg
pusha
and
pop
arpl
cmp
cmp
orb
orb
adc
pop
add
aas
icebp
cmp
inc
imul
xchg
rcl
shll
fldl
push
es
jne
mov
mov
sahf
push
dec
repz
repnz
cwtl
cmc
adc
fiaddl
pusha
cwtl
dec
enter
or
sub
in
mov
and
pushf
dec
xchg
mov
xor
test
shll
in
imul
sbbb
insl
cmp
sbb
aam
clc
inc
add
mov
sub
inc
mov
sub
cmp
pop
xchg
xor
dec
dec
sarl
pop
and
mov
adc
das
cmc
out
add
insb
inc
int3
repnz
cltd
repnz
sti
into
push
testl
jae
fisubrl
adc
icebp
hlt
inc
pop
lock
xchg
loop
mov
fldl
pop
xchg
push
mov
lock
cmpsb
insl
into
int3
iret
std
in
pop
fwait
xchg
lcall
adc
add
mov
mov
daa
jecxz
aad
and
adc
push
es
cmpb
mov
mov
xor
jae
dec
pop
jge
inc
or
lcall
or
xlat
mov
in
das
add
cmpsb
jns
adc
push
lcall
add
test
jp
mov
jno
jmp
dec
shrl
cmp
sti
icebp
xor
mov
sub
mov
stos
in
mov
bound
cmp
or
jecxz
xor
cwtl
and
dec
adc
jnp
jnp
jne
cmp
mov
xchg
mov
lcall
fwait
test
mov
stc
dec
add
loopne
adc
repz
stc
adc
adc
enter
in
mov
fs
and
cs
iret
inc
push
pop
aam
xchg
adc
lock
mov
push
pusha
push
and
popf
lods
push
lcall
xchg
sbb
imul
in
stos
lret
jnp
popa
sbb
push
jp
in
jns
lods
clc
std
pushf
jb
outsb
addl
sub
lea
cmc
pop
testb
iret
push
push
add
dec
mov
imul
pushfw
pop
pop
add
shll
mov
aas
push
xorl
sub
aas
dec
xor
jno
mov
aas
sar
cmp
xchg
and
adc
lahf
cmpsb
int
or
sahf
push
jnp
lods
sub
mov
mov
inc
jl
adc
sbb
sub
jbe
push
xchg
lret
jnp
scas
pop
insb
jne
add
ds
popf
push
out
ja
pop
filds
test
dec
mov
fwait
rcrw
pop
mov
adcb
and
xchg
sbb
inc
repnz
mov
xor
ret
out
in
push
jle
arpl
lock
testl
mov
dec
push
mov
fcoml
cmpsl
mov
pop
mov
cltd
stos
popf
inc
and
loope
fldcw
ret
scas
mull
adc
inc
dec
fists
scas
adc
lcall
lods
dec
mov
push
lret
sub
ret
popf
push
cmp
xchg
div
cld
roll
and
mov
dec
mov
inc
pop
fcom
add
push
cmpb
push
into
sbb
sbb
jo
call
jmp
lods
xchg
mov
repnz
inc
insl
fisttps
adc
iret
repnz
mov
imul
mov
clc
mov
sub
pop
adc
pop
inc
or
xor
fistpl
outsb
and
or
mov
ds
pop
push
jecxz
xchg
loop
popf
outsl
jns
pop
or
mov
adc
adc
movsl
in
add
rcll
shr
sub
jl
shll
test
jno
cmp
out
cltd
push
ret
push
pop
cld
in
mov
popf
jmp
xbegin
aad
outsb
adc
cmp
movsb
fstpl
imul
ss
mov
inc
movsl
cmp
sub
xchg
aaa
sbb
mov
mov
pop
dec
cmc
arpl
dec
push
and
sub
and
xchg
ljmp
jae
in
mov
and
pop
dec
repz
mov
jbe
ds
out
push
dec
add
xlat
ret
ja
scas
lret
not
ficoml
dec
fstps
pusha
add
into
push
test
enter
dec
mov
aaa
sub
sahf
ret
outsl
xchg
lods
xlat
mov
lds
dec
jl
push
xor
jae
xchg
xor
mov
lcall
jnp
dec
cmp
add
cld
sub
iret
imull
or
inc
mov
jle
inc
sub
pop
adc
clc
frstor
sub
cmp
lcall
ret
lahf
pop
sbb
and
mov
sub
inc
adc
jl
add
dec
test
dec
mov
lret
add
mov
pavgw
dec
jmp
lret
ja
xor
lea
lds
push
dec
adc
sub
nop
mov
xor
enter
jmp
popa
xor
mov
je
sub
or
sub
add
inc
pop
nop
sub
and
mov
movsl
adc
loop
cltd
je
rcrb
pop
call
aam
push
mov
xchg
daa
shrb
cltd
inc
or
push
inc
push
sub
mov
and
xchg
xchg
sub
es
icebp
idivl
and
popf
sahf
call
sbb
mov
test
dec
data16
insb
sbb
or
rorb
xchg
dec
sub
std
imul
xchg
cmpl
fiadds
jns
sub
sbb
or
pop
pop
or
jnp
or
stos
inc
and
pop
cmpsl
js
and
fidivl
mov
xchg
movsb
ss
inc
pop
or
inc
add
test
pop
xchg
lahf
sub
dec
mov
xchg
adc
mov
ret
push
dec
shll
adc
and
iret
repnz
ret
inc
or
jbe
fimuls
addr16
pushf
scas
pop
add
imul
bound
test
out
dec
je
outsb
and
xchg
repnz
cs
push
jmp
jo
loopne
jns
shl
imul
outsl
mov
push
sbbl
push
pop
push
loopne
sub
imul
cmpsl
xor
push
jmp
dec
mov
test
daa
movsl
js
lahf
cmpsl
cmp
out
push
in
test
cli
popf
or
dec
mov
sub
cli
lret
pop
mov
sub
clc
shlb
mov
inc
or
rcrb
lds
pop
in
mov
loopne
xor
inc
mov
cltd
sti
int
dec
mov
mov
jmp
xchg
or
fisttpl
sub
pop
and
rorb
inc
sbb
adc
rclb
sub
repnz
adc
xchg
es
je
pusha
inc
cmpsl
xor
fiaddl
jmp
jbe
cmpsb
inc
sbb
fsubrl
mov
testl
jo
pop
movsb
xor
lock
lods
jle
or
mov
dec
mov
js
xchg
popf
stc
xor
fcomp
lods
or
popf
jno
imul
push
lea
outsb
pop
adc
jo
jg
add
xchg
fiaddl
sub
jge
ret
fisttpll
push
mov
fisubs
or
jl
or
cltd
dec
jge
out
les
stos
loop
icebp
enter
pop
add
test
sbb
dec
shrl
and
xor
xchg
aas
mov
loope
push
scas
gs
push
adc
orl
and
mov
ds
jno
movsb
jns
and
or
loop
push
inc
mov
sub
or
hlt
cmp
clc
mov
push
push
add
sub
mov
mov
lahf
jge
push
lock
ret
fs
dec
insl
rcll
or
outsl
pop
negb
sar
das
xlat
push
popa
icebp
test
jo
xlat
adc
mov
pop
mov
inc
mov
jne
or
mov
test
add
fwait
ljmp
mov
or
orb
in
sub
fwait
out
sub
das
pop
mov
mov
sti
push
fsts
inc
sub
iret
and
repz
cmp
test
cmp
aam
adc
xchg
pusha
mov
mov
add
xchg
push
lret
mov
cmp
nop
fldcw
fsubrl
mov
jl
cmpsb
pushf
test
fldcw
mov
push
push
pop
mov
addr16
sbb
mov
jecxz
push
mov
dec
mov
jp
push
test
pop
sbbb
jb
push
lret
test
aam
adc
mov
lea
or
ljmp
in
testl
push
addr16
add
mov
lahf
and
lret
inc
dec
xchg
hlt
adc
test
stc
lock
jle
in
cltd
outsb
outsl
and
jns
xchg
sub
mov
jae
rcrb
mov
mov
outsl
call
stos
lret
or
pop
arpl
sub
push
stos
insb
xor
sub
inc
inc
jecxz
loop
and
xchg
lea
sbb
mov
xor
push
repnz
in
cmp
repnz
lahf
push
dec
loopne
ret
daa
push
mov
out
pop
mov
dec
pushf
jmp
orb
aaa
push
xlat
sub
js
jle
call
and
inc
rcrl
xchg
jmp
mov
repz
mov
fmull
mov
cmp
fsubrs
in
push
push
sub
xor
xchg
sbb
inc
adc
std
fwait
mov
cmp
mov
adc
ret
retw
cmp
jmp
mov
jo
outsb
pmaxub
inc
mov
inc
pop
add
pop
or
adc
lds
mov
lahf
sub
sarl
gs
aam
inc
fs
cmpsl
cmc
enter
test
insl
sub
cmp
ficoml
jo
call
xchg
ret
or
or
aad
xchg
adc
lret
and
mov
mov
addr16
and
pop
lods
push
jo
and
mov
jmp
ljmp
roll
je
jg
testb
mov
xor
sti
ret
inc
jle
ss
hlt
stc
xchg
pop
sbb
outsb
jp
sub
test
out
mov
mov
pop
push
pop
mov
int3
out
jmp
jae
mov
sub
xchg
or
push
hlt
push
sub
ret
loopne
xor
into
mov
push
out
arpl
jge
xor
outsl
into
mov
repnz
roll
push
test
push
add
and
add
es
lahf
xchg
xchg
cmpsl
xchg
mov
aad
in
or
jb
stos
lea
push
mov
and
loop
push
lahf
sub
in
mov
aad
push
shl
push
out
xchg
mov
leave
daa
int3
cs
filds
push
sub
push
jmp
lea
rcl
fdivr
adc
push
aam
pop
mov
add
cltd
lea
or
fcoml
xor
mov
add
popa
xchg
ficomps
jae
xor
imul
pop
ror
loopne
jo
ficoml
push
lea
popf
in
adc
mov
xchg
xchg
ss
mov
test
mov
adc
xchg
add
xlat
and
or
movsl
mov
cmp
push
jne
les
in
pop
outsb
pushf
xchg
jl
mov
lods
dec
sub
addr16
orb
mov
pop
insl
dec
sub
pop
mulb
testl
daa
xlat
out
xor
and
inc
cwtl
xchg
les
mov
pusha
push
icebp
mov
jne
cmp
mov
and
jbe
cmp
lgs
sbb
mov
xchg
xor
add
xchg
imul
mov
cmpsl
and
pop
sbb
mov
xor
cli
test
subb
xchg
cmp
cmc
dec
mov
hlt
gs
in
jecxz
fwait
cli
fwait
in
out
dec
or
cmp
pmullw
out
cmp
xor
mov
arpl
mov
dec
mov
or
mov
mov
pop
sbb
mov
pop
out
pusha
int3
add
testb
cmpsb
into
fs
and
loopne
add
cwtl
mov
aad
lahf
and
test
loope
dec
mov
xchg
mov
stos
adc
jnp
int
push
mov
dec
mov
pop
jnp
lret
test
inc
pop
inc
dec
lods
lods
insb
xor
je
push
push
cli
mov
jbe
sub
inc
shrb
mov
push
iret
xchg
xchg
stos
nop
jbe
adc
ret
cmpsb
inc
mov
and
movhps
xchg
lea
je
sahf
push
leave
push
adc
out
lods
shrl
outsl
and
sbb
or
hlt
inc
pop
shll
sub
sub
cmp
test
inc
ret
cmc
out
scas
dec
sub
and
push
icebp
out
xchg
outsl
lods
xor
jo
push
adc
mov
jl
data16
shr
int3
push
dec
stc
int3
and
movsb
mov
or
mov
enter
mov
ret
mov
xchg
jmp
pop
stos
outsl
jmp
rolb
sbb
in
and
fwait
inc
mov
das
es
shll
sub
faddl
call
dec
dec
jmp
mov
cltd
addr16
testb
addr16
sbb
jns
and
inc
lock
shlb
rorl
adc
ffreep
cwtl
lcall
out
lods
push
xor
pushf
imul
add
mov
addr16
mov
add
add
adc
jg
in
fchs
in
xor
xor
adc
jecxz
dec
or
cli
xchg
test
adc
mov
insl
lds
jbe
add
in
push
nop
incb
cltd
data16
pop
xlat
jb
cmp
mov
and
mov
out
add
stc
loop
rorl
jns
add
loopne
jg
pop
jmp
rclb
cli
addr16
mov
jmp
addb
imul
adcl
pop
int3
push
jae
mov
jmp
aaa
mov
xchg
mov
xor
sub
cmpsb
jns
pop
jmp
and
iret
add
add
jbe
xor
andb
in
and
jbe
in
bound
jl
int
mov
sbb
inc
pop
insb
sub
lea
push
xlat
jmp
mov
ds
mov
ror
sbb
cwtl
xchg
jle
xor
jmp
jbe
pop
and
popf
mov
adc
jns
in
or
mov
dec
je
and
push
ds
imul
and
ret
mov
inc
cli
mov
xlat
ds
cmp
insl
sub
jmp
out
xchg
insb
stc
mov
mov
ror
inc
incb
stos
rcrl
int3
push
push
mov
adc
sti
push
repnz
cmp
sbb
dec
xchg
ret
jmp
out
insb
pop
fs
xchg
xor
ret
sahf
clc
jecxz
adc
sub
sar
repz
insl
mov
mov
or
fstpt
jge
das
testb
lcall
mov
mov
mov
idivb
mov
mov
push
dec
test
addl
clc
aad
notl
setp
xor
mov
adc
jecxz
push
dec
rorb
negl
jge
out
push
xchg
push
jne
adc
jo
adc
mov
iret
xchg
jge
lahf
inc
jg
out
cmpsb
dec
cmp
pop
mov
out
cld
mov
lret
orb
xor
mov
cmpb
shrl
mov
xchg
sub
xchg
and
jecxz
and
mov
dec
and
cmp
loope
cmp
jg
mov
sbb
add
sbb
dec
cmp
mov
aas
and
repnz
and
sbb
sub
add
cwtl
outsb
add
inc
xor
and
push
ret
ret
add
cli
xchg
or
mov
repz
xchg
repnz
lods
add
dec
add
ds
or
sbb
jp
lea
xchg
jg
adc
aad
pop
ja
cmpsl
mov
push
sub
sbb
loop
push
inc
jg
hlt
mov
js
dec
mov
imul
adcb
jns
or
mov
pop
test
inc
adc
pop
stos
lods
shlb
jecxz
and
and
cli
and
sbbb
pushf
rolb
add
cmp
aam
popa
dec
pop
js
fld
sti
and
xor
adc
repz
icebp
popa
sub
adc
xchg
das
clc
or
add
aam
mov
andb
xor
mov
repnz
sbb
ds
lahf
mov
mov
cmp
adc
daa
xor
in
es
push
repnz
inc
mov
cmp
inc
cli
cmpsl
loope
mov
int3
repnz
cmp
cmp
icebp
inc
pop
enter
jg
aam
sub
dec
jp
in
and
dec
inc
push
cmp
lods
in
loopne
jne
lea
push
cmp
mov
mul
jb
pushf
push
idivl
movsl
jecxz
xor
xor
sub
inc
fistps
xor
in
loop
jg
fidivrs
cltd
cs
mov
call
add
mov
addr16
xchg
cmp
fs
in
ds
mov
and
xchg
xchg
jo
push
cmp
xorb
sbb
es
in
xor
sar
mulb
pop
ja
int3
adc
add
sub
cmp
xchg
jl
orb
daa
mov
mov
jecxz
pop
jl
xor
enter
std
mov
cmpsb
sub
xor
push
jne
sub
or
lahf
scas
ds
jo,pt
js
lods
add
orb
sbb
daa
out
fxch
pop
cmp
rol
xchg
int
xchg
fisttpll
fnstenv
mov
aam
pop
jge
push
inc
jae
stos
inc
jo
jno
in
mov
rorb
sbb
in
popa
outsl
sub
push
jnp
mov
pop
mov
ljmp
push
push
std
verw
or
das
and
mov
dec
fs
adc
or
loop
lock
sub
out
lret
lret
scas
popf
cmp
arpl
movsb
ja
jno
push
es
push
sub
sbb
mov
or
dec
je
sub
push
push
outsl
dec
into
addb
adc
cltd
push
addr16
les
dec
iret
je
pop
cmpsb
pop
jne
stos
out
mov
int
inc
sti
test
sub
mov
mov
mov
mov
ss
pop
and
inc
ja
mov
data16
push
jmp
xchg
subb
mov
and
inc
and
rcll
jg
mov
push
cmp
and
mov
fxam
dec
fnstenv
mov
ljmp
lahf
mov
fsts
scas
cmpsb
ss
mov
dec
add
fcomi
push
enter
mov
or
rcl
fisttpl
jo
sbb
xchg
dec
das
jg
es
dec
dec
popa
outsl
dec
adc
in
movsl
ret
fistpll
adc
outsb
cmpl
in
dec
mov
loope
push
mov
or
andl
test
lock
add
aaa
jp
rorl
aad
inc
sbb
jmp
stc
std
dec
lret
cmp
add
xchg
jge
movsb
cld
cmp
in
push
lock
inc
ret
subb
push
fistpl
out
gs
sbb
cld
xchg
jbe
es
cmp
add
sbb
xor
sub
cmp
lret
and
push
nop
sbb
test
xor
inc
push
mov
mov
xchg
and
add
js
cmp
mov
aas
stc
xor
xor
gs
lcall
push
or
int3
pop
testl
outsl
rolb
jno
push
aam
xchg
or
push
mov
insl
cs
cmp
lea
hlt
dec
fldenv
mov
mov
cs
inc
iret
jo
push
cmp
das
rclb
xchg
mov
fnstcw
stos
enter
xor
sub
sub
mov
xorl
outsb
stos
out
sti
aam
stos
lret
pusha
sub
ljmp
in
in
push
rcll
mov
inc
cld
rclb
push
add
enter
sub
sbb
add
ss
insb
pop
aam
jne
mov
sub
fadd
jle
call
outsl
jge
ljmp
nop
sti
rcrb
jae
and
or
mov
jno
pushf
add
rolb
jae
aaa
dec
dec
pop
xchg
inc
pop
mov
or
xor
repnz
hlt
incl
es
jno
sar
xchg
loopne
clc
aas
sbb
or
leave
or
xchg
jg
test
insb
aam
cld
je
pop
inc
orl
repnz
fmul
movsl
nop
lcall
mov
push
bound
push
cmp
leave
mov
xchg
dec
out
cld
inc
mov
shl
xchg
notb
dec
mov
imul
jns
xor
push
adc
sbb
enter
push
mov
add
aam
jno
and
std
jns
sub
inc
stos
push
push
stc
arpl
fidivs
or
loop
and
push
mov
movsl
push
fsubrs
pop
sub
dec
ljmp
sbb
lds
adc
das
movsl
cld
mov
mov
jge
xor
pop
fdivl
ds
fisttpl
push
xchg
cld
xchg
je
test
xor
pop
in
gs
xchg
xchg
mov
gs
movsl
enter
push
mov
aad
in
cmc
es
xchg
cmp
cmpsb
mov
cld
cmpsb
dec
ja
add
adcl
das
or
cmp
daa
sbb
adc
sub
pop
cmpb
xchg
stos
dec
jecxz
insl
jo
loope
test
jmp
mov
test
inc
leave
sbb
sti
test
xor
cmc
aad
pop
mov
dec
std
pop
shlb
mov
es
and
mov
cli
push
lret
mov
mov
add
inc
jno
pop
add
scas
inc
sbb
cmc
push
stc
or
dec
and
xor
pop
mov
pop
mov
in
shll
mov
dec
imul
nop
lret
push
lods
sub
xorl
inc
sbb
sar
jns
push
inc
xor
rolb
aas
lret
jno
rclb
mov
inc
in
add
mulb
sub
hlt
and
enter
dec
jns
ss
gs
outsl
jb
pop
pop
stc
call
bnd
and
add
loopne
and
push
xchg
dec
test
lahf
mov
rorb
and
adc
pop
adc
mov
cmp
outsb
xchg
mov
pop
push
shll
iret
cmp
or
mov
dec
mov
mov
pop
xchg
rcr
xlat
mov
in
mov
mov
and
mov
sahf
test
xchg
ljmp
stos
fstpt
pop
jle
jecxz
xor
cmp
jp
jecxz
fwait
push
inc
leave
mov
xchg
push
and
daa
xchg
ljmp
push
lods
daa
or
arpl
push
lock
xchg
mov
popa
es
insb
lret
movsl
sbb
push
int
es
fcoms
fbstp
iret
jge
jne
or
sub
scas
lret
jae
addr16
rcrb
cmovbe
jp
loope
flds
daa
bound
in
outsl
icebp
popf
inc
or
cmpsb
shrb
cmp
lret
stos
mov
shll
std
dec
push
inc
dec
pop
in
cmp
cmp
bound
int3
push
pop
mov
adc
inc
rorb
dec
add
xor
jp
dec
push
pop
stos
cwtl
add
cmp
cmp
cltd
jg
and
or
sub
ljmp
imul
loop
fimull
aam
mov
dec
xor
and
push
jns
cmp
js
out
je
aam
scas
and
sbb
stos
sbb
out
mov
std
mov
push
add
adc
inc
lods
adc
in
jle
and
test
outsl
ja
nop
xchg
xchg
cltd
fisttpl
xchg
pop
xor
jle
dec
cmp
jae
dec
andl
pop
and
dec
mov
int
jle
jne
mov
mov
push
inc
filds
bound
out
sub
outsb
imul
imul
lea
sbb
pop
mov
shrb
lock
fidivs
rolb
vfrczpd
adc
mov
js
add
sub
cwtl
mov
pushf
jle
push
and
addr16
subl
in
gs
cmp
xlat
rorl
rorl
mov
pop
jnp
scas
in
fidivrl
or
push
in
pop
outsb
nop
mov
dec
jbe
dec
mov
data16
push
push
mov
mov
push
xchg
mov
das
or
sbb
js
int3
sahf
mov
cmp
push
push
clc
dec
lahf
jecxz
xlat
sub
loop
lret
dec
hlt
and
push
sub
ds
sub
scas
jg
sbb
je
jae
in
in
paddq
rorl
inc
cmpl
gs
divb
sub
test
out
addr16
fstl
xchg
jmp
in
loop
mov
ror
rcll
xchg
iret
fcompl
test
xchg
out
pusha
xchg
pusha
ret
das
xlat
mov
xchg
ja
jle
add
mov
les
outsl
jnp
mov
ss
lcall
into
mov
test
push
idiv
cmp
hlt
pop
pop
fbstp
aad
daa
test
mov
push
repz
lcall
push
pop
push
or
int
pop
mov
imul
push
loopne
xor
lock
mov
add
int
mov
xlat
or
pop
sub
dec
loop
popa
daa
mov
mov
ss
ja
mov
mov
mov
outsb
hlt
push
add
push
pop
inc
nop
ds
xchg
in
cmp
pop
mov
repz
pop
gs
shr
xchg
add
ds
mov
cmp
sub
cmp
inc
lods
insb
cmc
ss
xchg
rcrb
sahf
mov
inc
xchg
leave
repnz
mov
jge
mov
test
loope
push
mov
cmp
cmpsb
adc
enter
bound
loope,pn
pop
pop
sub
or
jp
fisttpll
push
sub
add
jae
jb
pop
std
stos
pop
in
push
rcl
push
pusha
jne
mov
movsl
outsl
push
aaa
insb
inc
clc
mov
push
in
in
dec
outsl
inc
inc
repz
ret
push
sub
adc
jo
dec
scas
clc
mov
stos
xorb
inc
sbb
or
jb
cmp
dec
icebp
and
xchg
int
pop
push
repnz
popa
xlat
mov
loop
dec
ficomps
repnz
ds
jecxz
shl
sti
loop
pop
loope
mov
dec
pop
or
das
xor
sub
ljmp
dec
mov
jno
mov
lret
mov
loop
out
flds
adc
call
jae
add
js,pt
fidivrl
mov
jecxz
shrb
icebp
out
cli
andb
sbb
mov
leave
ret
adc
loope
jbe
popa
inc
sbb
mov
lea
ret
and
jmp
push
mov
xor
test
xor
das
mov
ss
out
fldcw
xor
xchg
xor
inc
add
jo
jb
cmp
adc
in
inc
sbb
xor
cmp
inc
call
push
mov
xlat
jne
inc
ret
add
lea
scas
in
add
xor
jns
push
mov
into
lret
fldl
movsb
popa
xor
mov
sub
out
pop
enter
pushf
cmpsb
xor
or
aas
jmp
fwait
mov
xchg
cmp
mov
out
jns
andl
je
lods
ret
loopne
nop
xchg
hlt
mov
add
pop
out
adc
xor
mov
cli
inc
dec
nop
out
je
andb
mov
call
lods
nop
adc
pushf
out
ud1
sbb
sbb
xchg
je
enter
rorb
out
xor
adc
in
test
push
push
lock
test
out
mov
aaa
jbe
jmp
sub
les
daa
push
mov
jno
movsb
loope
lahf
push
movsb
movsl
mov
jne
adc
iret
mov
out
les
into
jge
aad
popa
clc
jne
loopne
rcl
cmp
jg
movsb
adc
div
pop
jnp
adc
mov
jae
clc
and
sub
lods
mov
in
loope
cmp
xchg
xor
pop
adc
mov
jne
lods
stos
inc
mov
jne
loope
xchg
push
fldcw
out
xchg
in
dec
cmp
jmp
mov
sarl
insb
mov
iret
xchg
daa
inc
dec
cmc
cmp
les
adc
sub
adc
mov
cmc
pushf
mov
out
outsl
mov
scas
cmc
adc
mov
rcll
not
pop
mov
xchg
enter
cmpsb
sbb
add
xlat
stos
ret
out
sbb
add
jmp
jle
lret
adc
loope
repnz
cld
mov
mov
or
arpl
xchg
ds
and
push
popa
pop
cld
sbb
jbe
shl
push
add
mov
jmp
mov
cli
jp
repnz
movsl
dec
push
jmp
lock
inc
cs
lods
jb
sbbb
xchg
and
je
call
nop
and
mov
ret
cmp
inc
arpl
pop
push
sbb
ret
push
inc
test
lret
mov
pop
sub
iret
inc
movl
insl
add
outsl
cmp
sub
xor
in
cmpsb
fwait
and
les
stc
aas
sbb
mov
pop
insb
mov
or
outsb
pop
scas
testb
out
mov
mov
mov
int3
roll
dec
movaps
cmp
mov
adc
ljmp
and
sub
pop
or
jge
mov
cmc
add
jle
cmpsb
iret
push
mov
je
cmp
mov
pop
pop
sub
imul
or
ljmp
scas
push
test
fldl
iret
lahf
shll
jne
leave
sbb
stos
fwait
pushf
sbb
psraw
imul
xor
jmp
cmc
dec
nop
enter
ret
jg
outsb
cmp
cli
std
je
imul
mov
fs
lock
ret
sub
stos
jno
jmp
xchg
pop
adc
and
lret
pop
sarb
adc
stos
mov
pop
push
sahf
insl
bound
and
adc
mov
outsb
mov
jg
pop
jae
inc
sub
fimuls
arpl
mov
leave
out
pop
fmull
jle
xchg
insb
jmp
enter
std
outsl
ret
outsb
js
mov
xor
and
stc
in
mov
pop
or
jecxz
pushf
daa
xchg
outsl
sub
lret
dec
sub
stos
and
popa
mov
mov
aad
pushf
mov
cs
std
pop
xor
in
mov
sub
jg
inc
shrb
hlt
mov
scas
inc
cld
or
inc
out
add
add
int
lret
jl
cmp
pop
or
cmp
sbb
scas
ret
mov
adc
fsubrs
xor
inc
jbe
push
jg
xchg
in
ss
aam
int
or
int
xchg
sahf
int
je
test
shlb
jo
and
jo
add
aam
daa
sbb
xchg
dec
dec
call
repz
leave
mov
rolb
nop
fadd
or
inc
or
sbb
popf
mov
in
clc
insb
dec
hlt
es
adc
loope
fildll
inc
andl
scas
jno
cltd
fidivl
push
add
sub
mov
sbb
and
sbb
xchg
mov
cmp
mov
testb
mov
dec
sub
add
movl
cs
jp
hlt
jbe
fcmovne
push
xlat
enter
nop
inc
out
dec
sti
es
mov
fisubrs
movsb
push
push
scas
or
sub
inc
iret
mov
or
inc
es
add
push
sbb
cltd
pusha
mov
jne
jb
jmp
sbb
inc
push
fistpl
data16
les
ljmp
lret
inc
push
mov
fwait
and
jl
xchg
mov
xor
lock
cld
xchg
sbb
push
sub
push
daa
jecxz
lret
cmc
rol
jb
scas
rcrl
movsb
or
mov
sbb
sbb
pop
pop
adc
mov
mov
inc
dec
xor
cli
mov
inc
pop
mov
fistps
mov
out
fisubrs
mov
cmp
and
movsl
lea
cmpl
lds
cmp
dec
loope
fstps
xor
cltd
add
or
and
jnp
cmp
stos
insl
sbb
push
inc
call
pop
mov
push
xchg
testb
jbe
ret
in
jmp
mov
xchg
sub
or
mov
mov
dec
mov
inc
push
xor
sub
cmp
sbb
push
icebp
iret
or
imul
ss
bound
pushf
es
rcr
insl
in
test
or
iret
js
fisttpl
and
out
sbb
mov
or
xor
clc
jmp
dec
jge
jb
dec
push
repz
sub
dec
jno
pop
mov
pop
cmc
ficoml
xor
fdiv
sbb
xor
jnp
jmp
movsl
mov
lods
sub
imul
das
mov
int3
pop
pop
or
stos
xchg
rcl
stc
pop
sub
daa
pop
arpl
dec
jecxz
sahf
orl
push
mov
sub
call
mov
out
cmp
sbb
in
dec
add
repz
loop
inc
sar
sub
cmp
loopne
iret
cli
in
out
rolb
dec
shll
pop
or
out
push
jmp
sbb
mov
mov
sbb
sbb
daa
jp
enter
popa
add
js
pop
jl
test
fs
out
pop
pop
xor
xchg
out
ljmp
leave
out
inc
hlt
loop
mov
push
push
inc
push
add
ja
stos
ret
idiv
fisttps
out
bound
movsl
popa
dec
pop
es
add
jp
adcb
sub
sbbb
jns
mov
xor
sbb
push
mov
adc
lock
dec
stos
xchg
push
dec
xor
aam
pop
lcall
adc
dec
xor
inc
aaa
lcall
pop
jne
xor
xchg
pusha
jle
xchg
lods
leave
adc
and
addr16
std
mov
push
fdivrl
mov
add
inc
clc
fs
add
pop
nop
pop
aad
cmp
ret
mov
pop
pop
sbb
fmull
push
push
jge
bound
and
scas
or
push
loope
hlt
addr16
lret
cltd
enter
pushf
imul
sub
xchg
ds
mov
es
scas
insb
adc
popa
loopne
adc
adcb
out
out
mov
jb,pt
cmpsb
out
sbb
out
movsb
test
test
out
cmp
jmp
pop
stos
mov
jns
dec
cld
xor
mov
cmpl
mov
aaa
xor
push
or
and
lea
mov
loopne
add
call
xchg
sarb
fnstcw
bound
jl
pop
fucom
mov
cltd
jl
fwait
pop
xorl
or
sub
xchg
rolb
loope
and
icebp
and
aas
pop
ss
ljmp
cwtl
shll
cmp
ljmp
sarb
xor
repz
outsb
mov
cmp
add
movsb
andb
mov
mov
lea
or
movb
div
push
clc
stc
and
inc
push
mov
jne
aam
andb
sub
mov
dec
xorl
sbbl
pop
rcrb
mov
pop
cld
jp
out
in
xchg
mov
xchg
mov
je
pop
mul
jae
mov
xchg
inc
jo
sub
fcmovne
inc
push
adc
mov
lods
test
cmpsb
inc
jo
sub
loopne
popw
pop
cmpsb
mov
out
test
lahf
add
std
stos
int3
scas
in
cmp
pop
lcall
cmp
pop
rorl
xorb
test
adc
dec
mov
out
jae
cmp
orb
add
scas
pop
push
mov
mov
sbb
out
enter
sahf
mov
xchg
dec
xor
sub
aas
add
mov
cmc
fdivl
mov
push
push
mov
push
fadds
jp
sbbb
add
sub
and
mov
xor
adc
mov
push
cmpsb
cltd
push
cmp
js
out
enter
frstor
fldl
cld
mov
das
cwtl
lahf
xlat
cmp
sahf
int
mov
call
dec
add
ds
test
inc
push
aam
pop
sbbl
gs
add
mov
icebp
cmp
pop
dec
mov
pusha
push
push
inc
push
dec
call
sarl
jge
test
shrl
mov
mov
cmp
ja
hlt
push
push
rcr
cs
inc
mov
gs
sbb
jo
and
mov
test
lea
hlt
mov
mov
cs
sub
push
les
add
subl
movsl
pop
lret
adc
jl
insl
push
nop
call
mov
sub
xor
mov
push
or
xor
mov
xor
jno
mov
out
sub
outsl
aam
outsl
mov
xor
push
dec
push
and
mov
cli
das
aaa
cmp
mov
mov
xchg
popa
std
scas
mov
jle
and
lcall
push
add
sub
int3
inc
ror
inc
dec
cwtl
adc
sbb
xchg
jecxz
adc
adc
cmpsb
pop
flds
pop
or
js
mov
in
and
lcall
xchg
movsb
mov
dec
mov
inc
insl
leave
push
pop
mov
shlb
loope
fdivrs
lds
sbb
dec
push
in
add
nop
andl
in
pop
sahf
lods
scas
xor
mov
ds
pop
push
xor
sbb
inc
cltd
aas
inc
data16
pop
jo
xorl
nop
xchg
mov
jno
das
or
stc
testb
je
stos
inc
fsub
in
sbbl
jbe
test
addl
outsl
mov
shll
ret
cs
jb
repz
xor
xor
jmp
pusha
jl
jb
jge
imul
icebp
sub
arpl
and
mov
addr16
sub
dec
loope
out
outsb
out
shll
or
mov
aam
movsb
rorl
pop
sbb
pushf
dec
cltd
or
test
lods
shlb
pop
aaa
je
and
ldmxcsr
mov
inc
cmp
and
mov
mov
mov
push
js
jmp
sub
inc
movsl
divb
pop
mov
push
jo
cmp
add
call
or
mov
loope
cmpsl
outsl
fwait
cs
or
inc
mov
data16
sbb
push
loopne
aam
sahf
adc
cmp
mov
in
cmp
pop
mov
sbb
xchg
test
push
add
imul
inc
data16
push
inc
cmp
cld
lea
sarl
jnp
dec
lahf
push
jbe
dec
dec
jbe
stos
and
lcall
outsl
and
gs
leave
test
shlb
pushf
stos
int3
movb
mov
mov
ret
mov
adc
test
or
in
stc
lock
pop
negb
test
add
pop
cmp
xlat
cmpl
das
xchg
fdivl
push
xor
popf
cli
outsl
loopne
daa
mull
andl
lock
mov
loope
loop
or
jl
xchg
mov
cld
mov
pop
inc
mov
cmpsb
rcrb
scas
nop
es
scas
mov
xchg
stos
or
cmp
insl
lods
aas
mov
popf
add
data16
dec
sbb
ret
xor
and
push
xlat
jmp
iret
insb
mov
xor
pop
or
add
xchg
sub
repnz
lahf
jo
jo
call
cmc
mov
cmp
insl
or
and
mov
dec
rclb
pusha
pop
outsl
dec
jb
call
shll
push
push
push
cli
enter
aaa
ficoml
pop
insb
sbb
inc
faddl
jne
jbe
or
adc
in
adc
sbb
aas
js
test
inc
sbb
dec
jle
negb
or
movb
sub
push
or
repz
xchg
push
pop
incl
xchg
fstl
stos
lahf
dec
pop
cmpsl
cmc
arpl
aam
and
inc
cmp
imul
movsl
mov
insb
mov
or
in
jb
jnp
inc
imul
test
pop
lret
daa
pop
ja
dec
mov
lret
pop
leave
xor
adc
pop
adc
dec
in
movsl
insb
pusha
mov
ret
cmp
push
je
pmulhuw
fnstsw
push
es
jns
mov
jae
ret
scas
inc
mov
loope
int3
pop
ret
fcompl
aad
dec
leave
cltd
bound
dec
add
dec
push
fimuls
jo
mov
sbb
fnstenv
and
add
mov
adc
jbe
mov
jmp
sub
sub
sbb
gs
jl
scas
hlt
mov
push
in
lods
add
leave
cmc
clc
cmp
or
imul
lods
and
pop
pop
movsl
mov
mov
sahf
jp
mov
ljmp
cmpsl
aaa
idivl
push
scas
add
sti
call
adc
mov
js
or
sbb
fwait
lds
fldt
and
lds
sar
mov
pop
pushf
ss
push
int
xor
and
xchg
jns
push
adc
jnp
push
push
jmp
cmp
xchg
adc
aas
fdivl
scas
dec
imul
push
test
pop
mov
pushf
add
cli
xchg
jno
sbb
xchg
and
jb
inc
cmp
cmpb
jbe
pop
ja
mov
or
in
pusha
xor
sub
negb
aaa
dec
jae
jb
xchg
push
out
xor
mov
mov
adc
push
or
xchg
in
cmpsb
pop
lds
vpcmpeqd
cs
push
adc
popa
aam
flds
int
push
lea
add
adc
cmp
iret
ret
sub
xor
xchg
mov
mov
xchg
or
in
call
cmpsl
xchg
pop
jns
cmp
test
lahf
ret
add
imul
inc
dec
push
push
dec
test
andl
rcrb
rorl
jle
mov
fwait
stos
icebp
pop
inc
mov
aad
daa
sbb
test
mov
ds
xchg
inc
ret
pop
xchg
mov
inc
mov
add
enter
push
mov
sub
es
sub
stos
addr16
inc
sub
xchg
or
or
int3
ret
int3
lret
xchg
sbb
jmp
inc
jmp
push
sub
xor
sahf
icebp
outsl
imul
push
mov
sub
xchg
push
clc
adc
sbb
mov
xchg
fcomip
cwtl
jge
dec
sbb
inc
addr16
jns
jbe
or
pusha
aas
inc
xchg
divb
repz
jb
sub
popf
cwtl
outsl
mov
inc
cltd
ret
pop
mov
ja
jp
cmp
xchg
jb
fildll
leave
inc
rolb
jg
sete
fwait
out
loope
cmp
and
repnz
dec
xor
cli
out
and
aam
fsts
jnp
pusha
decl
out
sbb
testb
pushf
cmc
mov
jbe
clc
mov
cltd
dec
aas
xor
mov
jle
sub
mov
into
inc
sub
or
into
or
arpl
or
mov
test
pop
aad
addb
sub
adc
cltd
and
lret
in
sub
movsb
xor
pop
sbb
cmp
mov
stos
test
push
ja
add
scas
fmull
jo
jmp
test
and
ss
bound
arpl
jo
in
stos
or
or
fdivr
lock
sbb
stos
lea
mov
cmp
ss
mov
sub
sbb
inc
int3
xor
iret
lcall
sub
xchg
pop
and
mov
jp
clc
mov
push
lret
or
xor
flds
inc
out
jge
sti
or
mov
mov
sub
xchg
lds
push
adc
dec
mov
push
hlt
cmc
aas
fwait
or
inc
sbb
dec
loopne
shlb
pop
jns
mov
repnz
out
mov
pop
sub
push
cmp
leave
aas
jg
mov
adc
hlt
pop
gs
inc
pop
jmp
xchg
sbb
mov
pop
xchg
rcrb
mov
and
jnp
mov
out
data16
add
jbe
daa
push
and
fistpl
xchg
push
sub
mov
sti
pop
std
jnp
mov
sbb
repnz
mov
xlat
movsl
popa
inc
xchg
push
ja
or
sub
andb
xlat
add
cli
adc
xchg
lret
push
pop
popf
aas
push
lea
mov
jg
dec
cmp
int
and
fisttps
stos
arpl
int3
xchg
or
cpuid
sbb
test
push
roll
cmp
push
inc
cmp
js
int3
sub
call
xor
lds
or
sub
sti
push
inc
and
mov
fisubrl
out
imul
cmpsl
pop
push
pop
push
xor
sti
sub
mov
xlat
data16
pop
lcall
cld
pop
xchg
loope
mov
clc
pusha
jne
mov
sti
xor
addr16
cmpsb
mov
cmp
lods
sub
cmp
fdivrs
insl
mov
lahf
xor
add
sbb
bound
ret
add
stos
ljmp
int3
ss
lret
xor
in
std
push
fsts
sbb
cmp
dec
and
pop
movsl
mov
fisubrl
fdivs
cwtl
movsb
lods
ja
xchg
ja
or
jno
arpl
or
and
nop
adc
sub
mov
adc
xchg
decl
repz
lods
xchg
cmpsb
out
test
data16
int
lods
loope
push
sbb
inc
mull
in
jae
mov
xchg
fsubp
repnz
and
jb
movsb
pusha
fidivl
lret
and
mov
or
lea
rol
aad
add
call
jmp
push
stos
push
hlt
clc
gs
sub
and
cltd
mov
jmp
xor
ljmp
int
shlb
loopne
enter
setne
das
add
sub
popa
dec
jg
int
jecxz
jae
sbb
pop
sbb
inc
fnstcw
and
cwtl
arpl
jne
cmpsl
sub
lods
aam
sub
xchg
jl
xchg
jae
and
sub
cmpsb
jno
jle
sub
mov
aam
leave
cmp
std
addb
jmp
xchg
jae
cmpsl
iret
xor
pop
and
pop
mov
sti
jns
and
ljmp
jg
dec
xchg
pop
shll
and
pop
sti
pusha
frstor
movsb
add
inc
fcoms
xchg
cltd
mov
aam
mov
or
insl
inc
fwait
negb
iret
dec
add
dec
lods
fcmovnbe
inc
mov
cmp
or
lods
ffree
mov
dec
mov
jo
or
xchg
mov
mov
mov
dec
xor
add
scas
mov
sahf
add
shlb
push
test
pop
mov
mov
daa
inc
mov
push
shll
stc
outsl
test
adc
loope
out
fistpll
xchg
mov
push
arpl
pusha
scas
fsubs
adc
nop
es
outsb
and
das
xor
push
pop
sbb
jne
testl
pop
sub
xor
mov
or
int3
cmp
mov
je
mov
jbe
scas
xchg
out
loopne
pop
adcl
lret
jo
negb
repnz
orb
shrb
pop
insl
outsb
out
push
fiaddl
outsb
and
hlt
adc
mov
jno
sub
sti
ror
dec
imul
jmp
push
dec
nop
jb
je
mov
push
mov
cmp
shr
jmp
mov
xchg
jo
arpl
lods
clc
adc
decb
jns
adc
mov
pop
xor
loopne
test
xchg
outsb
add
dec
pop
popf
into
dec
shlb
push
sti
push
lods
jp
pop
int3
sub
imulb
pop
xor
push
aad
jns
sub
pop
inc
pushf
aas
mov
lods
outsl
ret
aad
lret
movsl
outsb
and
imul
lods
repz
fdivrl
xchg
lea
dec
jl
jbe
rol
pop
out
add
ret
mov
dec
sbb
dec
lret
cmp
cs
add
cmp
scas
xchg
jge
in
xor
in
mov
adc
push
rorb
daa
into
cmp
cmp
sbb
fwait
mov
in
mov
or
rcrl
cltd
vunpckhps
inc
jge
cmp
cmp
int3
daa
xlat
push
mov
test
xchg
loop
pop
leave
mov
pusha
push
ss
mov
jg
jmp
cld
sub
mov
or
dec
rorb
fisttpll
mov
push
or
int
mov
inc
cmp
adc
pop
fwait
mov
stc
xchg
test
and
into
jnp
jae
xchg
and
das
jae
mov
daa
movsb
lds
mov
mov
les
adc
gs
pop
jno
shrb
sbb
mov
ss
adc
lds
arpl
mov
fisubl
ja
orb
xchg
mov
push
mov
test
in
xor
ret
test
mov
test
mov
push
mov
mov
push
not
sub
push
imulb
inc
pushf
mov
mov
pop
and
scas
mov
or
inc
stos
fildll
mov
pop
lods
jl
orl
hlt
mov
jmp
shrl
dec
loopne
cs
mov
insb
repz
inc
dec
push
cmpsb
ret
mov
jns
inc
loopne
cli
xchg
adc
arpl
mov
repz
pop
or
cli
sub
aad
jne
inc
push
sub
sub
rcll
lea
adcl
jl
daa
test
mov
out
loopne
icebp
mov
movsl
mov
jmp
mov
loopne
popl
xchg
orl
sbb
ss
inc
test
enter
daa
mov
shl
inc
inc
adc
xchg
sub
je
subb
or
add
mov
mov
sahf
into
jno
mov
xchg
rcrb
fldl
insb
cltd
std
mov
xor
out
pop
shrb
jl
enter
mov
cmpsl
pusha
adc
fisubrs
mov
test
pop
xlat
movd
shll
push
sub
mov
push
sbb
fs
lret
aas
aad
inc
cs
xchg
add
cmpsb
cmpsl
mov
mov
mov
rcr
sbb
daa
jg
add
out
dec
lret
gs
mov
mov
sarl
ljmp
mov
repz
or
mov
add
mov
fs
sahf
jle
jl
adc
mov
jp
ficomps
movsb
enter
es
jb
jle
pop
sub
ljmp
in
in
dec
lods
push
loope
repz
enter
xchg
push
shrb
gs
xchg
arpl
stc
icebp
iret
xor
leave
testb
and
pop
add
sub
add
inc
repnz
fs
in
and
push
inc
sti
out
fwait
push
jbe
inc
adc
jl
test
std
int3
sub
push
into
add
jmp
adc
adc
add
xchg
xchg
push
enter
je
daa
sti
jle
mov
or
jge
xchg
loopne
sar
sahf
je
mov
popa
shlb
loop
imul
cmp
mov
inc
addr16
jb
mov
in
sub
inc
outsl
or
jo
cmpsl
push
push
in
xor
mov
std
jmp
jp
fs
popa
out
add
adc
sub
lds
fnstsw
sub
push
sbb
inc
cmp
pop
xor
dec
mov
cltd
lea
fdivrs
cmp
sbb
cwtl
inc
lods
xlat
clc
ret
outsb
in
das
into
or
addr16
sbb
mov
cmp
fsubl
cmpsl
call
ss
xchg
pop
cmp
enter
ds
cltd
jnp
std
negl
dec
push
lds
cmpsl
idiv
mov
test
iret
inc
aas
pop
sbb
pop
xchg
cld
pop
add
jo
jb
or
movsl
push
and
loopne
cld
fimuls
cs
nop
or
cmp
push
dec
dec
repz
sete
lock
ret
mov
addr16
loop
jge
gs
push
adc
pop
mov
sub
dec
xor
sbb
aad
sub
addb
or
or
stc
mov
and
xchg
push
xchg
push
add
sub
pop
js
push
cwtl
cmpb
inc
popf
sub
push
add
popf
test
arpl
dec
sub
xchg
pop
push
mov
out
lea
fcoml
xchg
xchg
jno
ds
mov
sub
ret
mov
inc
jnp
lds
and
xchg
xchg
and
dec
scas
sbb
cmpsl
jns
mov
adc
push
clc
inc
stc
popa
data16
lcall
mov
mov
dec
das
add
mov
es
pop
fcomi
push
and
movb
lods
in
cmpsb
push
cs
push
orb
lods
adc
leave
insb
sub
push
gs
adc
ja
jge
je
inc
sbbb
dec
sub
xor
stc
stos
mov
mov
pop
aam
dec
shlb
fbld
xchg
stos
add
popa
push
es
mov
sbb
mov
inc
ds
les
or
push
stos
jp
icebp
pop
aad
add
movsb
fcoml
fucomip
pushf
mov
mov
adc
inc
mov
pop
je
outsl
ja
lret
mov
jnp
mov
repnz
mov
inc
pop
leave
aas
cmpsb
mov
jae
mov
fsubrs
dec
movsb
push
dec
adcl
dec
mov
fisubs
and
inc
test
push
push
ds
lods
loop
sub
and
repz
inc
inc
mov
dec
mov
dec
cmpsl
push
sarl
mov
cmp
out
sub
mov
call
push
inc
push
push
cmp
cltd
in
pop
jl
fdivs
aam
mov
pop
ss
jne
sub
mov
clc
es
sub
pop
jb
add
sbb
jle
xor
loopne
das
outsb
dec
lret
sub
mov
lds
lods
arpl
out
shlb
pusha
data16
shl
icebp
inc
xchg
cmpsb
lahf
sbb
dec
or
inc
imul
testb
test
or
jg
cmpsb
mov
mov
push
lock
mov
inc
ret
icebp
add
insl
clc
bndstx
call
add
push
in
pop
sub
rcll
xchg
sahf
lods
insb
mov
movsl
aad
lds
and
enter
and
outsl
mov
pop
adc
adc
dec
enter
jnp
nop
pop
je
outsl
mov
data16
xchg
xor
or
mov
mov
adc
inc
xor
insl
outsb
and
add
test
xchg
xor
add
xchg
push
out
and
lret
jmp
lods
sub
loope
bound
add
stos
mov
mov
xor
out
dec
push
push
idivl
xchg
mov
xchg
jae
repnz
cmp
popf
mov
fildl
cmp
mov
test
add
lahf
rcrb
xchg
fstp
insb
pop
jp
inc
push
mov
hlt
test
cmpsl
out
aaa
jo
mov
out
cmp
sbb
adc
sahf
or
stos
stc
mov
sti
mov
cli
jno
lcall
mov
aam
xorb
imul
ret
movsl
inc
mov
cli
jl
cmp
mov
repnz
mov
lcall
dec
mov
cltd
or
xor
es
pop
scas
rcrb
shr
imul
fcomps
ss
pusha
jno
xor
je
pop
cmpsb
xchg
das
mov
xlat
shlb
mov
mov
mov
into
mov
dec
sti
sub
mov
pop
pop
add
xor
fldt
test
xchg
inc
ret
ret
dec
test
push
movsl
sarl
and
int
push
sub
xchg
lods
dec
add
dec
jp
data16
and
iret
inc
ffreep
into
stos
push
ds
jmp
jbe
repz
mov
fistps
orl
pop
stos
xchg
in
adc
add
idivl
cmpsb
mov
shlb
dec
mov
mov
data16
cwtl
loope
pop
push
stc
ss
mov
mov
push
imul
ja
mov
pop
mov
inc
xor
sub
fcmove
js
cwtl
xchg
xor
sbb
rclb
cld
pop
dec
push
ret
imul
sbb
xchg
ljmp
adcl
jno
push
pop
imul
cmp
xor
mov
lahf
sub
sbb
test
pop
add
cwtl
outsb
lret
jmp
fwait
std
test
xchg
jne
sub
mov
es
scas
push
mov
lods
sub
jmp
into
xchg
aam
xor
adc
dec
pushf
mull
aas
mov
sub
push
sbb
ret
popa
mov
stc
push
add
jne
mov
in
aad
adc
mov
sub
mov
jnp
pop
cld
xor
mov
lods
in
sti
aam
fwait
xchg
ds
out
mov
jmp
mov
filds
xchg
sti
or
jmp
sub
test
xor
nop
cli
dec
push
adc
fnstcw
sbb
fmull
imul
inc
pop
adc
mov
inc
loope
cltd
adcb
in
adcl
mov
outsb
aas
enter
cli
add
jns
cmp
into
push
shl
push
pop
push
push
repz
jae,pn
and
std
or
or
lods
add
inc
xchg
fimull
inc
jns
push
daa
mov
dec
gs
repnz
popf
gs
adc
push
xor
data16
xchg
jo
push
outsl
and
or
adc
dec
jl
sub
lock
add
call
jmp
cmp
mov
xchg
insl
cmp
and
pop
sahf
and
and
in
aas
mov
inc
call
dec
sbb
and
dec
iret
fildll
and
cmp
cs
pop
lods
and
sarl
mov
std
xchg
ret
fisttpll
and
scas
lods
lods
add
jo
fadds
or
pop
cmp
push
sbb
pop
lods
adc
xchg
je
inc
xchg
push
and
pop
imul
stos
xchg
out
test
or
adc
iret
sbb
add
xchg
mov
sub
ret
inc
mov
arpl
out
xor
leave
dec
fimull
lahf
icebp
sbb
fidivrl
test
aad
inc
sub
stos
arpl
ret
movsb
dec
in
out
sub
hlt
mov
inc
push
and
pop
fimull
push
in
xchg
cmp
mov
bound
xchg
cmp
mov
ss
dec
sbb
inc
fcompl
inc
fisttpl
adc
xor
pop
and
fsubrl
shrl
dec
out
sbb
aad
adc
test
sbb
dec
jle
idivl
add
dec
jge
mov
imul
dec
push
xchg
orl
loop
and
jg
int3
xor
sbb
ja
xchg
cld
test
cmp
cmpl
cli
ficoml
mov
mov
fiaddl
int
enter
idivl
jbe
xor
out
outsb
out
push
cltd
mov
cmp
inc
lock
sbbb
xchg
xor
rcrb
in
cmp
mov
in
mov
cmpsl
or
cmp
dec
dec
and
xor
cwtl
fcomps
mov
int
lcall
xchg
hlt
lahf
fisubl
push
mov
inc
test
int3
jecxz
jmp
sti
rclb
fwait
in
mov
dec
push
xor
fwait
ret
arpl
iret
or
mov
sub
or
mov
and
ret
or
add
and
sbb
mov
hlt
cmpsb
mov
adc
scas
sbb
je
push
outsb
add
fistl
int
insl
xchg
in
scas
lods
mov
add
jo
cmpsl
divb
jns
lds
mov
sti
fists
dec
data16
jbe
out
adc
in
repz
sub
lea
pop
or
mov
or
pop
inc
sahf
insl
or
add
movb
sub
push
rorb
out
das
or
imul
jp
lods
jno
push
hlt
mov
lea
das
jbe
mov
xchg
pop
pop
push
popf
add
push
scas
or
lret
std
pop
test
push
les
push
lret
inc
mov
stos
push
mov
shr
jnp
insb
jmp
test
cmp
loop
imul
outsl
movsb
mov
adc
rorl
mov
or
mov
sbb
cmp
ds
sub
pop
jg
push
repz
outsb
leave
mov
nop
test
cmp
ficoml
sub
inc
imul
pop
imul
and
aaa
mov
mov
ret
dec
mov
mov
adc
outsb
ret
mov
movsl
jmp
xchg
xchg
pushl
cmp
push
and
xor
pop
cmp
mov
dec
leave
aas
xchg
jbe
stc
xchg
sbb
mov
xor
cmpsl
aaa
inc
jle
jecxz
enter
push
mov
inc
pop
int3
or
sbb
push
fistpl
popf
adc
xor
pop
mov
mov
cld
add
loop
pop
ret
popf
decl
es
fbstp
mov
add
nop
aaa
mov
cmp
hlt
mov
mov
jno
jg
inc
daa
sbb
rorb
push
clc
sbb
cwtl
daa
pop
mov
ds
lds
ds
out
mov
push
pop
ror
enter
fnstsw
iret
and
pop
lods
cmp
jno
and
cld
gs
addl
iret
sub
cwtl
sub
lahf
inc
pop
pop
sbb
les
jo
dec
mov
push
pop
dec
mov
jno
ljmp
and
push
mov
xchg
test
pop
push
pop
jge
outsb
xchg
or
jp
jne
jne
clc
mov
inc
movsb
jns
xchg
lret
cli
ja
mov
sub
sti
cmpsl
jg
lods
cmc
xchg
shlb
pop
xor
sqrtps
mov
out
mov
xchg
fdivrs
rcl
xor
cld
aas
cmp
sbb
cli
dec
int
nop
popa
cld
sti
incl
insl
dec
jno
pop
mov
jnp
outsl
jle
push
shlb
sbb
adc
scas
testl
in
movsb
pop
lea
xchg
sub
divl
jmp
sbb
insb
push
rcrl
pop
mulb
jne
mov
mov
leave
xor
in
subb
fldcw
inc
jmp
xor
mov
cmp
nop
inc
add
adc
test
xchg
es
mov
add
jb
cmp
add
test
movsl
adc
mov
cmp
sub
add
punpckldq
cmpsb
mov
or
inc
cwtl
jae
aaa
hlt
push
push
mov
pop
dec
add
cmp
or
jnp
mov
or
fdivrs
insb
pop
lret
xchg
dec
add
clc
inc
inc
jg
push
test
mov
ds
cmpsl
add
out
xlat
cmpsb
xlat
mov
das
and
stos
cmpsl
idiv
mov
jmp
jmp
mov
add
mov
stos
xchg
jno
fisubs
ret
mov
xchg
loopne
jg
out
jmp
sahf
inc
xchg
aas
xchg
cmc
lods
rorl
xchg
xchg
mov
dec
cmpsb
into
dec
jecxz
jno
sbb
out
clc
or
fwait
and
add
shl
repz
or
std
jp
mov
lret
in
shrb
mov
and
add
xorl
push
das
jl
js
jne
mov
jns
sbb
bound
fnstsw
les
fidivl
add
jl
xor
inc
gs
sbb
adc
aaa
mov
sub
in
jne
xchg
int3
insb
leave
inc
jbe
add
xchg
and
dec
mov
je
xor
vmovaps
push
pop
cmpsb
outsb
sahf
xchg
incb
std
xchg
aam
mov
jno
fiadds
nopl
fwait
outsb
sbb
push
sarb
adc
mov
aaa
repnz
and
jo
jnp
imul
imul
push
sub
dec
insb
xchg
push
dec
fmuls
addb
and
jle
push
lret
into
sti
cmp
pusha
xchg
lods
arpl
inc
repnz
cld
sbb
out
mov
and
les
out
lea
jp
or
sahf
out
sub
xor
loop
mov
adc
out
in
and
sub
mov
ss
or
les
push
pop
adc
add
inc
movsb
mov
jle
in
mov
mov
pop
sub
inc
jge
add
lret
dec
and
add
shl
ss
jecxz
mov
dec
or
push
int
pop
sub
mov
das
pop
pop
lds
xchg
in
push
movb
rcl
bound
inc
fadd
das
cmc
lock
fdivr
sub
movsb
or
push
enter
ret
adc
int
mov
mov
push
loop
or
inc
pop
mov
popf
in
hlt
sarl
lahf
cmp
inc
and
nop
push
pop
pop
stc
sub
out
mov
out
icebp
jb
adc
clc
and
dec
push
push
clc
jb
scas
adc
push
dec
xchg
jo
repnz
add
sub
xchg
lret
mov
cmp
insb
sub
pop
aad
push
mov
das
pop
jns
mov
gs
pop
jne
ficomps
dec
add
inc
pop
add
scas
stos
jbe
xor
mov
add
jo
repz
ret
in
cmpsb
or
pop
xchg
subl
pop
mov
shll
aad
push
call
sbb
mov
aaa
movsb
push
hlt
aad
das
loopne
into
mov
xchg
push
out
in
das
mov
pop
push
or
rcr
push
adc
lock
imull
sarb
xlat
jecxz
in
pushl
loopne
loopne
mov
cmp
pop
stos
add
mov
adc
daa
sahf
in
add
xor
aam
je
pop
ljmp
push
ffree
push
lea
add
and
inc
mov
push
fst
mov
dec
enter
nop
pop
fwait
ljmp
xchg
ljmp
and
pop
or
push
adc
lret
icebp
jne
mov
jns
mov
adc
iret
cmp
cmp
rclb
sbb
test
loopne
and
mul
inc
and
dec
pop
pop
push
ljmp
sahf
out
add
pusha
and
pop
cmp
mov
push
or
test
inc
sub
sti
testl
adc
dec
push
dec
rorl
push
jb
xchg
js
dec
mov
popa
test
cmp
shlb
sub
in
das
loopne
xchg
or
mov
mov
adcl
nop
jne
ss
adc
aaa
test
mov
xchg
nop
movsb
fs
push
push
idiv
or
cmp
sub
mov
fcmovbe
sbb
aaa
xchg
push
sub
xchg
xor
mov
out
outsl
pop
lret
lds
jp
add
int3
outsl
loopne
dec
test
inc
ficoms
mov
dec
es
daa
xor
dec
imul
stc
or
pushf
fildll
daa
jb
std
xor
xchg
push
out
mov
jae
insl
inc
cli
fdiv
pop
cwtl
and
inc
xor
aam
inc
inc
pop
fnstcw
jae
subb
dec
mov
push
pop
int3
push
cmc
xchg
lea
std
and
rorl
cmp
test
ljmp
in
pusha
jns
mov
pop
xchg
jno
mov
scas
or
into
fdivrs
mov
mov
bound
es
addr16
iret
mov
shl
mov
arpl
nop
int
sbb
std
mov
pushf
cmp
fwait
xor
cwtl
loopne
lret
dec
add
fstp
insl
and
jae
add
jle
xor
push
dec
sub
dec
push
and
sbb
push
jmp
negl
dec
pop
adcb
mov
lcall
loop
scas
mov
xchg
mov
aas
out
xchg
addr16
dec
cmovne
out
sub
mov
mov
test
clc
pcmpgtw
nop
pop
scas
pop
aaa
jae
mov
fistpll
xor
subl
loop
inc
mov
pop
ljmp
int
sub
mov
fstps
xlat
mov
mov
cwtl
les
inc
inc
mov
push
loopne
xor
scas
popf
dec
loop
jmp
dec
dec
jae
and
mov
xchg
sbb
or
enter
mulb
mov
lods
loop
push
sbb
dec
enter
jbe
es
inc
pop
iret
jle
mov
dec
arpl
add
scas
jae
imul
ds
insl
ja
xor
clc
popf
xor
stc
sbb
jl
inc
xchg
dec
pop
loope
jecxz
cs
icebp
popa
dec
cld
or
test
in
loopne
xchg
pusha
cs
xor
jl
xlat
adc
and
inc
out
sub
push
xchg
iret
jge
fsubrl
add
jno
bound
loope
test
lcall
pop
jae
mov
xor
ret
std
addl
xor
jbe
les
cld
sahf
ret
xchg
test
xchg
test
cmp
popa
mov
stos
inc
call
fildll
cmpsl
cmpsb
addr16
mov
leave
ret
sti
lahf
cwtl
push
mov
jmp
dec
add
pushf
cmpsl
je
enter
sub
jne
iret
bound
push
and
sahf
jae
cmc
ss
fcmovbe
addr16
xchg
fadd
jnp
and
ss
or
clc
sbb
pop
mov
std
leave
ret
into
call
sbb
pop
fcompl
test
ret
jbe
xor
mov
addr16
loopne
scas
mov
orb
lret
in
aam
jnp
inc
and
outsl
std
addr16
push
xchg
mov
scas
fisubrl
or
das
stc
insl
pop
pop
pop
adc
loope
dec
enter
jnp
sbb
imul
sbb
pop
or
pusha
pusha
sbb
add
add
rcrb
daa
aas
sahf
ja
mov
push
rcrl
mov
pop
sbb
lret
cmp
in
push
xor
jnp
adc
addr16
out
xor
jecxz
sub
jns
std
jo
cld
jo
xchg
lgs
adc
jae
nop
insb
das
pushf
jb
hlt
add
mov
cmp
adc
or
push
jae
jecxz
mov
out
sti
addr16
pop
sub
jecxz
jno
jo
inc
lods
inc
test
jo
mov
andb
and
js
js
mov
pop
cmp
sub
cmp
cmpsl
repnz
in
data16
xorl
pushf
iret
mov
pop
jp
arpl
sti
int3
jo
testl
je
adc
push
imulb
mov
imul
aad
pop
call
sahf
add
dec
fistpll
push
jge
out
dec
ljmp
mov
incb
fidivrl
mov
cmc
add
shr
int3
loop
and
mov
dec
pop
mov
lret
add
leave
dec
push
daa
insl
pop
jnp
adc
bound
insl
loop
ss
iret
lret
sti
cmp
fldenv
ja
sbb
adc
jmp
es
inc
fcmovnb
repnz
jbe
test
sub
repz
outsl
jge
daa
loopne
and
fwait
adc
inc
adc
jnp
xchg
adc
jno
pop
ljmp
sbb
jno
push
add
adc
mov
loopne
push
mov
movsl
orb
stc
out
mov
xor
cmp
popa
data16
and
cmp
mov
mov
pop
pop
repz
push
inc
xchg
pop
sub
out
and
sbb
xchg
dec
imul
out
call
or
pop
adc
cwtl
out
and
jmp
addb
iret
outsl
ja
dec
xchg
lcall
and
clc
das
bnd
daa
aam
cmp
leave
stos
or
add
pop
fdivrs
push
sbb
and
xorb
push
mov
mov
stc
xchg
data16
xor
hlt
jnp
sub
mov
sub
fs
fldl
dec
xchg
test
sub
push
es
int
dec
mov
mov
in
jo
imul
cmp
mov
xchg
test
jae
adc
shlb
stos
or
inc
nop
sub
repz
add
psubq
cmpl
xchg
repnz
jp
cli
push
ja
lea
movsl
fsub
fwait
adc
push
cmpb
imul
mov
dec
gs
inc
sub
lcall
sbb
roll
push
xlat
mov
cmp
xchg
popl
dec
adc
sbb
lods
cmp
mov
out
int3
cmp
xlat
mov
mov
test
clc
pop
add
mov
lea
arpl
dec
ret
push
or
jae
push
push
fmuls
xlat
xchg
mov
inc
sbb
add
add
pop
gs
aad
popf
sbb
push
inc
sbb
popf
mov
das
adc
cmpl
push
cmp
ret
mov
into
inc
push
scas
popa
pushf
jle
dec
cmp
aaa
lret
fwait
and
and
pop
fcomip
sub
inc
ds
jbe
loopne
jne
fsubrl
cmp
xor
das
rclb
ror
jg
inc
sub
cmp
negb
aaa
insl
sub
xchg
decb
mov
int3
add
mov
push
shl
ss
and
jne
and
jo
push
out
ror
cs
mov
jg
mov
push
js
in
mov
fs
xor
dec
lock
push
call
and
roll
mov
movsl
movsl
push
int
and
rclb
aam
xor
movsb
sub
pop
push
fisttps
hlt
mov
pop
imul
adc
pop
sub
jae
popf
gs
xchg
cmc
pop
jno
ja
mov
int3
mov
adc
and
cmc
xchg
test
mov
ds
xchg
inc
adc
jnp
jg
add
add
jp
lock
inc
and
sbb
mov
jg
aas
xor
repz
popf
push
sbb
pop
addl
stos
mov
sti
int
daa
scas
imul
fdiv
pop
out
adc
out
xor
enter
loope
and
mov
dec
call
xor
sbb
push
push
mov
xchg
sahf
dec
xchg
popa
sti
pushf
dec
jle
pminub
xchg
cld
mov
pop
movsl
test
movsl
push
sbb
out
adc
pop
mov
xor
or
jmp
addr16
filds
cmp
jp
insb
or
int3
ja
xlat
dec
rcr
pop
add
add
and
inc
mov
mov
jns
fisubl
pop
test
aam
testb
push
cmp
adc
sub
in
test
addb
xchg
js
and
mov
stos
cmp
popf
push
cmp
aad
adc
pop
cmpsl
xchg
in
lods
xlat
sarb
clc
inc
cmp
aaa
mov
mov
paddb
pop
ljmp
insl
add
push
dec
or
inc
out
mov
cmp
add
aad
test
and
jne
jg
jae
mov
lea
inc
sti
aad
movsb
fistpll
push
iret
mov
pop
sti
fwait
loop
pop
sarl
lock
sbb
daa
mov
jb
shll
dec
xor
dec
sarb
movb
add
rorl
inc
inc
or
andl
adc
adc
xor
sub
sahf
sahf
push
and
imul
outsb
add
jnp
lods
mov
push
xor
stc
cmp
jo
adc
sbb
inc
mov
push
std
nop
pop
addl
roll
push
insl
xor
mov
sub
sub
fiaddl
rorl
fstl
loop,pt
fists
push
push
xor
outsb
sti
popa
faddl
aas
xor
mov
pop
loope
leave
sub
clc
push
sbb
jno
mov
and
cmpsb
bound
dec
and
out
inc
xor
and
push
mov
addr16
stos
aas
sarb
sahf
fistps
mov
sarl
add
pop
enter
mov
dec
sbb
adc
jbe
lea
pop
dec
mov
mov
xorb
and
or
dec
push
js
je
call
pop
sub
imul
insb
mov
add
or
in
stos
adc
inc
outsl
xor
sbb
movl
fnstenv
call
push
in
pop
cmp
cli
cmp
pop
daa
lret
stos
add
imulb
or
xchg
ficomps
cld
push
mov
or
pop
andb
mov
sub
jo
push
sbb
pop
sub
jg
scas
insl
popf
jne
xchg
push
jbe
insl
jbe
adc
test
xchg
sub
jns
shlb
inc
popf
or
scas
jnp
out
insb
sub
arpl
and
out
xchg
and
test
std
adc
es
mov
cmp
out
cmp
cvtdq2ps
cwtl
jo
repz
jne
in
push
loope
popa
jge
outsl
and
mov
sub
lret
and
mov
sbb
ret
out
push
inc
popf
pop
popa
mov
pop
mov
xor
popf
repz
xchg
lods
repz
inc
insl
adc
lret
mov
cmpsl
dec
push
mov
mov
push
mov
arpl
cmp
mov
aam
and
stos
mov
mov
aad
mov
jae
hlt
mov
sub
jmp
jp
adc
inc
adc
pushf
mov
shlb
stc
lds
mov
or
mov
inc
jnp
fcmove
fdivrl
sub
inc
cmp
cmp
insl
push
iret
mov
filds
push
mov
cmc
rorb
inc
pop
pop
pop
mov
cmp
cmp
dec
testl
adc
jae
hlt
inc
call
insb
clc
xor
push
mov
pop
pop
sub
mov
sti
fwait
je
lock
js
imul
jns
mul
imul
xchg
ja
cmp
add
mov
xlat
push
shufps
jl
xchg
decb
rol
mov
inc
sub
int3
and
jno
test
mov
lahf
aad
stc
bound
insl
sub
or
popf
out
xchg
stos
cmpsl
lcall
xchg
int3
cmp
sbb
arpl
xchg
test
xchg
xchg
or
sub
mov
xchg
rcll
push
mov
test
mov
and
lret
inc
inc
movsl
shl
and
mov
cmp
mov
push
out
mov
pop
testl
xchg
lahf
out
lret
cmp
int3
push
cs
and
jno
jle
inc
jnp
mov
imul
and
jne
adc
jb
movsl
push
sbb
enter
sbb
shrl
sti
div
add
add
dec
inc
add
jmp
mov
adc
mov
mov
enter
mov
pop
je
pushf
lret
sbb
mov
out
jmp
mov
pop
jb
sbb
mov
lods
xor
js
inc
dec
into
sub
jmp
mov
addl
mov
sub
inc
out
mov
ret
xor
andl
into
sahf
push
hlt
arpl
push
xchg
lock
and
aad
jns
pop
jmp
lret
sub
leave
aas
mov
or
sbb
movsl
arpl
or
icebp
mov
mov
cmpsl
out
pusha
fmull
inc
nop
sbb
fists
mov
sub
je
xor
sbb
sub
jle
test
sbb
leave
mov
mov
cld
sub
jae
push
pop
lods
adc
cmp
cs
or
mov
in
adc
jo
jecxz
ss
in
push
fsubrs
mov
pop
mov
mov
andl
insl
push
leave
mov
je
pop
data16
xchg
pusha
mov
aad
outsl
pop
or
cs
jmp
repnz
rcll
and
inc
fldl
data16
mov
fwait
stc
test
fstpt
adc
mov
push
int3
push
int3
pop
test
add
xor
ret
jno
xor
inc
dec
and
sub
xchg
loopne
sbbb
sbb
mov
lods
and
inc
mov
les
fistpll
shlb
out
mov
aaa
jge
scas
cmp
push
aas
or
cwtl
sbb
pop
hlt
xlat
imul
sti
pop
sbb
add
lahf
xlat
push
jle
pop
scas
mov
ret
xor
sbb
test
sub
jno
add
fwait
inc
dec
push
jae
fstpt
xchg
sarl
xor
adc
lea
fisttpl
or
mov
enter
xor
lods
aas
aas
mov
adc
ja
xchg
mov
pop
cmp
ss
insl
mov
push
mov
out
mov
adc
sub
sbb
pop
push
and
leave
scas
aas
jg
push
sbb
and
and
fstps
pop
pushf
sub
xchg
cmp
sarl
jne
int3
popf
adc
cmpsb
ficompl
scas
sti
pop
inc
sbb
push
or
inc
mov
mov
lret
sbb
ds
arpl
sbb
mov
pop
pop
jg
xorb
aam
enter
jae
xchg
jne
int3
movsb
mov
jnp
sbb
sub
jo
ds
adc
andl
sarb
jmp
jmp
cwtl
shrb
xchg
in
pushf
sub
or
mov
mov
fsubr
repnz
pop
mov
sbb
jb
fiadds
dec
cmp
pop
repnz
xchg
jno
iret
es
sahf
dec
rol
xchg
cmp
jne
aam
cs
mov
dec
fsts
jge
xor
ja
add
adc
cli
setae
fdivrs
mov
popf
je
and
lea
jae
outsl
mov
lods
sar
arpl
dec
lods
roll
enter
gs
cwtl
pop
popa
and
and
push
xchg
mov
sub
and
jmp
test
fcoms
stc
cmp
into
add
mov
inc
inc
cmpl
adc
mov
jb
inc
aam
jl
pop
lds
hlt
shlb
dec
shlb
sub
jns
inc
push
and
xor
leave
adc
mov
dec
pop
stos
jecxz
in
push
and
movsl
shlb
bound
dec
filds
scas
xchg
loopne
push
inc
pop
pop
or
int
jle
inc
aad
sbb
aad
fdivrl
nop
or
and
ret
ret
inc
std
xlat
lds
xor
hlt
insb
es
add
push
arpl
push
ret
push
cmp
mov
hlt
jge
and
rclb
hlt
xor
xchg
stc
fsts
pop
sbb
xchg
push
inc
cmp
js
mov
mov
push
fidivs
cli
push
ds
sub
je
push
lea
pop
dec
dec
fs
cmp
jecxz
xchg
inc
xor
add
sub
out
testl
dec
cmp
cmp
test
lahf
push
les
lcall
inc
out
fiaddl
cli
fidivl
test
jbe
jne
sbb
or
pop
xor
lcall
hlt
movsb
lret
fwait
dec
push
xor
mov
push
test
lcall
loope
jge
int
pop
pushf
insl
or
mov
sbb
jne
jno
pusha
cld
and
aaa
mov
ret
jb
mov
inc
push
pop
int
xor
add
fistpll
aaa
mov
test
pop
repnz
fimuls
and
mov
mov
lea
aas
and
addr16
add
bound
cmp
fisubl
xor
hlt
daa
int3
and
jmp
xchg
mov
sub
xor
lods
hlt
mov
pop
push
outsl
jl
add
cmp
or
fcomps
pushl
mov
lea
mov
negl
adc
mov
lea
jne
lcall
cmp
jge
out
mov
xchg
bound
or
lock
mov
push
bound
mov
sbb
xor
cli
pop
sbb
add
icebp
xchg
insl
rorl
push
add
sti
not
jmp
addl
fldl
adc
xchg
inc
xchg
push
icebp
mov
push
pop
out
mov
cltd
in
into
popa
decl
mov
adc
rcrl
xor
test
dec
dec
jae
adc
out
cld
pop
scas
adc
cmp
pop
pop
ficomps
adc
dec
das
sub
cmp
leave
ficoml
pop
ljmp
fdivrs
xchg
das
dec
xchg
jo
out
xlat
adcb
imul
pop
mov
lahf
mov
sub
dec
pop
fistpl
fcompl
xor
pusha
mul
mov
pop
fwait
mov
push
mov
shll
mov
test
popa
jns
scas
test
test
and
add
daa
pushf
outsl
fnstenv
in
test
mov
xchg
pop
jle
aaa
notb
cld
arpl
push
inc
mov
inc
nop
out
movsb
or
lods
fcmovu
loop
or
inc
and
ss
inc
loopne
lret
jl
adc
aam
mov
dec
pop
push
xor
or
add
jae
xor
push
inc
xchg
fdivs
add
fcompl
movsb
pop
lahf
xor
fdivl
scas
int3
cmpsl
sub
push
push
fdivr
xchg
int
repz
xor
mov
shl
add
adcb
jns
mov
pop
cmp
pop
test
pop
or
jecxz
test
loop
xor
mov
lea
mov
test
mov
mov
xor
xchg
or
je
and
fwait
jg
xlat
pop
test
lcall
cmc
pop
push
pusha
push
dec
or
incl
pop
loope
sub
leave
mov
fcoml
sub
fs
lret
fsubrs
dec
dec
mov
out
stos
add
inc
mov
sbb
adc
insl
aaa
push
cli
fbld
pusha
cmp
xor
loop
adc
loope
dec
xor
mov
jo
sbb
jne
in
loopne
adc
cltd
jns
inc
push
xor
ljmp
pop
lcall
mov
je
bound
mov
add
xor
stc
xchg
xchg
or
ret
pushf
clc
or
cmp
lahf
loope
repnz
mov
mov
add
out
lods
push
fs
out
pop
add
enter
sub
es
xchg
aaa
sub
sbb
lds
mov
outsb
adc
aad
es
fdivrs
pop
dec
in
push
es
xchg
outsl
js
or
sub
pop
adc
loop
ljmp
sbb
add
cmp
jb
ror
test
stos
mov
lock
xor
mov
in
shlb
fildl
ja
subl
xor
neg
int
mov
add
dec
jbe
fadds
adc
js
dec
ds
dec
enter
shlb
in
outsl
das
mov
sub
daa
jmp
cmp
mov
push
pop
sbb
fmull
sbb
lret
jmp
inc
aam
stc
nopl
dec
push
inc
fstpt
stc
pop
push
and
push
xchg
fistl
mov
lret
xor
je
cmp
je
mov
cmpsb
pop
push
ss
loop
dec
fisubrl
repnz
fidivs
cmc
in
xchg
xchg
sbb
inc
pop
jne
or
mov
mov
pushf
shrd
movsl
jp
sahf
sahf
arpl
call
dec
cmp
in
shr
aaa
sub
lret
sbb
cmp
ret
inc
je
cmp
xor
pop
lcall
sub
xor
jl
xchg
movsl
jne
or
mov
out
add
movsb
incl
movb
inc
push
aas
dec
add
pop
loopne
mov
or
xlat
jb
dec
push
or
add
addr16
cmpsl
jb
fistl
call
loopne
into
pop
outsb
pop
pop
mov
clc
xor
inc
lcall
add
xlat
jecxz
or
inc
and
sbb
pop
mov
hlt
xchg
dec
xlat
fscale
cmp
sub
lahf
adc
push
das
jnp
movsl
mov
jmp
test
loop
inc
ss
je
mov
xchg
pop
stos
mov
pusha
cs
mov
fdivrl
repnz
push
or
sarb
rolb
cmp
push
fists
loopne
iret
xor
push
add
lods
push
insl
xor
nop
cmc
cmp
fists
jg
push
and
dec
and
inc
dec
mov
jp
shrl
loopne
aad
mov
out
aas
or
add
inc
ret
dec
add
xchg
inc
add
cmc
add
sub
ds
cwtl
enter
jle
test
cmpb
hlt
fidivs
fdivs
psubsb
push
out
es
and
inc
adc
lcall
subb
jns
mov
pop
ficompl
mov
sub
repz
add
fdivs
dec
subps
in
pop
inc
sub
add
mov
or
loope
inc
scas
ss
divb
jo
xorl
sarl
out
ljmp
stc
out
pop
pop
hlt
add
icebp
andb
out
and
out
subl
repnz
pop
pushf
out
leave
xchg
scas
scas
enter
leave
pushf
jmp
mov
push
lods
test
daa
out
pushf
popf
test
jns
fwait
outsb
push
loop
repnz
jg
leave
pop
mov
sub
cltd
and
sbb
mov
jo
aaa
adc
mov
add
cld
int3
xchg
pop
int3
out
imul
rcrl
lods
xchg
push
jo
aad
push
xchg
dec
aam
pushf
xchg
mov
cmp
xor
sub
add
push
mov
sbb
or
repnz
sbb
idivl
daa
sti
pop
out
jbe
xchg
pusha
xchg
in
sbb
push
sti
xchg
xor
dec
mov
aam
stos
fcmovnu
leave
in
jns
jb
ret
dec
pop
fdivrl
sahf
pushf
pop
addb
out
enter
es
mov
aam
jg
rcrb
packuswb
pop
test
mov
notl
aaa
popf
scas
push
xlat
fnstenv
inc
sahf
add
push
lods
push
inc
dec
pop
lock
mov
sbb
dec
push
sub
push
scas
imul
test
sbb
out
fwait
icebp
cmp
lret
mov
push
pop
daa
mov
mov
jbe
mov
push
cmpsl
add
outsb
sahf
cmpsb
stos
icebp
lock
test
ret
enter
into
inc
aam
sbb
xchg
lods
out
push
pop
iret
pop
je
mov
loopne
stos
out
dec
mov
lods
gs
and
push
or
addl
imul
insb
jno
movsb
jb
scas
cmpsb
push
jnp
in
std
mov
mov
movsb
jns
repnz
xor
das
mov
in
movsb
adc
push
rolb
js
ds
add
add
js
adc
imul
add
in
cmp
cmc
negb
ja
xchg
sar
aam
and
sbb
in
jbe
sub
je
pop
aad
stos
mov
xchg
sbb
sub
pop
and
mov
mov
xchg
cwtl
adc
add
dec
out
cmp
pop
in
mov
pop
dec
or
mov
rcr
or
pop
daa
mov
sub
mov
lock
add
adc
pop
mov
adc
jg
sbb
pop
fucom
das
mov
add
push
ficomps
icebp
xchg
sbb
sub
movsl
nop
dec
je
xchg
mov
mov
xchg
push
jecxz
out
xchg
mov
ljmp
jge
xorl
jge
adc
or
jge
scas
int
pop
inc
cmpsb
movsb
insb
xor
repnz
and
out
or
mov
jo
cmpsb
mov
or
jg
dec
int3
fwait
dec
ss
mov
les
stos
iret
mov
mov
iret
adc
push
push
jmp
push
pop
mov
mov
pop
insl
fisubl
int
or
cwtl
cmp
cmc
data16
je
push
rclb
and
aam
cmpsb
xor
daa
pcmpgtb
push
jae
pop
jmp
mov
push
pop
imul
cltd
mov
repnz
lret
mov
cmp
mov
mov
dec
mov
jge
and
cli
daa
xrelease
mov
scas
inc
pop
setno
lock
mov
js
stos
loop
xchg
inc
shl
sub
dec
lret
push
out
test
pushf
cld
lods
iret
jge
cmovns
loopne
xor
insl
sbb
fs
cmp
adcl
xor
or
es
mov
std
cmp
xchg
stos
cmp
jle
out
test
sub
in
and
sbb
sbb
cmp
scas
cld
sarl
mov
out
push
test
push
orb
enter
or
les
mov
sahf
mov
jnp
xor
ja
repz
int
inc
adc
pop
add
push
push
rorb
sbb
notl
insl
test
aad
pusha
je
mov
test
jge
stos
jmp
cld
mov
lea
ret
sbb
or
xor
outsl
clc
pop
adc
int3
sbb
aad
inc
xlat
pop
outsl
sub
outsb
ljmp
adc
and
add
mov
jbe
std
fists
mov
jle
xchg
movsb
leave
jg
push
cld
sahf
jl
leave
push
dec
sti
lds
repnz
mov
cld
clc
icebp
jp
es
movsl
pop
add
pop
iret
cmp
arpl
rep
xchg
and
adc
test
loop
jmp
adc
sqrtps
or
test
shlb
arpl
insb
dec
jne
or
xor
jmp
mov
lcall
rcrb
mov
push
clc
or
push
pop
mov
add
and
pop
ljmp
ficomps
cmp
mov
add
xlat
pop
sbbl
enter
stc
iret
pushf
sarb
mov
out
mov
inc
mov
jb
rorl
xchg
sahf
mov
push
pop
mov
mov
out
sbb
push
testl
call
pushf
pop
stc
shlb
movsl
mov
test
inc
mov
mov
or
shlb
inc
cmpsl
sbb
cli
fnstcw
outsb
sub
mov
jecxz
jae
cli
mov
mov
dec
fwait
sub
js
jbe
cmp
lds
jo
jge
xor
je
test
scas
jg
and
mov
adc
std
adc
addb
loop
loop
and
call
daa
loop
pop
sub
jae
popf
sti
push
adc
pop
fimuls
icebp
sub
sub
cmc
xor
push
lods
adc
stos
cmp
cmpsl
pop
test
int3
and
cli
pop
mov
push
or
adc
loope
movsl
xchg
popf
ret
jae
dec
es
rcrl
xchg
imul
popf
cmpsl
dec
or
dec
cmp
mov
js
leave
cmp
imul
and
mov
fldl
lds
xchg
stos
test
jo
insb
pop
mov
scas
fadd
aas
movsb
aas
pop
test
fwait
jle
and
rol
out
xchg
add
or
cltd
into
sub
rcll
pop
inc
sub
pop
cs
sahf
popf
pop
dec
cs
mov
insl
out
stos
shll
jbe
sahf
xchg
jne
push
pop
xchg
adc
je
and
sub
fistpll
pop
nop
jns
je
sarl
in
adc
inc
dec
and
cmp
pusha
mov
dec
out
insb
push
aam
imul
in
fnstenv
mov
test
mov
pop
sbb
cmp
jmp
push
mov
mov
mov
mov
add
push
and
insb
add
cmpsb
mov
add
movsl
inc
inc
inc
xor
lcall
int
aas
out
rcl
cwtl
cmc
pop
pop
jne
jecxz
jno
inc
mov
pop
sbb
popf
ja
jge
mov
in
push
mov
push
or
je
cmpsl
fwait
dec
roll
dec
add
cmpsb
xchg
popa
inc
adc
hlt
dec
leave
inc
push
or
push
rcr
cmp
push
adc
fcom
sbb
xor
lods
popa
xor
lcall
lcall
jge
xchg
cmc
inc
mov
in
jo
scas
sahf
xchg
push
mov
dec
pop
pop
leave
push
stos
push
mov
mov
pop
fistpll
popf
dec
push
sarb
xor
shl
pop
dec
dec
aaa
dec
jb
rclb
mov
sub
jae
xchg
std
cli
mov
fs
cmp
jbe
and
jae
jge
mov
dec
jbe
inc
xor
xchg
lret
lea
scas
out
rorb
pop
cmp
jne
repz
out
lret
add
sbb
addr16
stos
mov
xchg
and
in
orb
xor
xor
mov
outsl
ja
xor
and
push
ss
adc
test
ret
daa
mov
sti
mov
or
rclb
mov
movsl
add
push
mov
mov
test
inc
mov
ret
aaa
xchg
lahf
xchg
cs
dec
out
mov
pop
mov
hlt
add
cld
add
dec
dec
gs
jge
sub
movsl
lods
cmp
sahf
jb
push
push
push
call
out
lods
jae
in
add
adc
cld
insl
mov
cmp
cmp
test
insl
sbb
negl
cs
pop
pop
cmp
pop
ljmp
adc
imul
jl
in
arpl
mov
arpl
xchg
xchg
push
pusha
sub
fsubrl
jo
bound
jb
mov
std
scas
enter
imul
aam
dec
int3
inc
jb
scas
pop
mov
pop
mov
sbb
push
add
sub
sti
dec
push
mov
and
sub
in
sub
mov
jno
mov
lea
sub
loope
inc
and
cs
out
lock
mov
push
sbb
jmp
lds
jo
xchg
and
imul
push
faddl
mov
add
dec
or
dec
jge
fsubs
xchg
dec
adcl
sub
je
or
cmp
in
cltd
pop
xchg
loopne
sub
hlt
outsl
adc
xchg
sub
add
pushf
lahf
push
cmpsl
mov
mov
in
ret
mov
xchg
out
popa
dec
sub
and
adc
mov
push
lds
sbb
test
and
lds
sub
mov
rcrl
push
sti
insl
mov
mov
pop
mov
dec
sahf
jb
xor
shrb
rcrb
pop
insl
cwtl
pop
rcll
leave
or
or
insb
jle
pusha
mov
into
xor
and
incl
inc
stc
shlb
shll
test
sub
ds
mov
inc
ret
jg
int
mov
insb
mov
pop
jmp
lret
gs
repnz
andl
and
and
mov
lahf
sub
inc
inc
push
mov
pushf
mov
push
pusha
rolb
add
pop
push
pop
jno
xchg
jae
mov
popa
ljmp
jbe
inc
leave
push
jl
xchg
mov
icebp
lcall
jmp
push
pop
ds
icebp
test
jmp
test
sub
xor
inc
and
scas
mov
add
cmpl
out
pop
mov
sahf
roll
mov
shrl
or
sahf
lcall
faddl
cmp
xchg
jns
testb
cmp
mov
es
xor
mov
std
imul
adc
outsb
pop
ret
ljmp
bound
movsl
dec
sub
das
dec
and
lock
ret
jnp
add
lock
mov
pusha
jns
pop
sbb
aam
push
fld
fs
jmp
pop
cwtl
fucomip
outsb
xor
gs
test
ficoms
push
sti
cmpsb
test
pop
add
mov
stos
das
add
jge
mov
xchg
fdiv
xchg
or
insb
aad
mov
in
lods
idivb
jns
adc
push
mov
std
pop
pop
fstpt
out
pop
cmpsb
ljmp
mov
cltd
push
andl
andl
outsl
ficompl
ja
pop
push
mov
sbb
push
sub
mov
adc
inc
pushf
gs
pusha
inc
jp
mov
pop
inc
sbb
and
or
std
and
icebp
jno
iret
aas
ja
cs
sti
xchg
jmp
rcrb
sbb
cs
pushf
jne
pushf
in
xlat
dec
xor
pusha
fistpll
fxch
lret
xor
or
cmpsb
xorl
movsl
lret
adc
push
lds
push
jge
and
or
dec
sti
faddl
dec
lret
and
xchg
mov
push
movsb
mov
rorb
lods
pop
rol
loopne
fsubr
dec
push
outsl
push
pop
lret
adc
push
mov
push
es
popf
jb
int3
test
test
dec
or
sbb
sub
nop
jge
es
and
into
les
push
stos
mov
dec
xchg
cld
sub
ret
iret
and
push
ss
addr16
int3
stos
insl
in
add
mov
enter
paddq
arpl
add
aad
loop
ret
sahf
rcl
push
sbb
or
daa
cltd
sarb
push
push
push
shrb
test
jecxz
cmpsl
push
jl
or
pop
movsb
dec
inc
mov
or
inc
in
jb
inc
mov
push
mov
xor
movsl
mov
mov
mov
mov
movl
inc
leave
arpl
push
movsl
mov
out
lret
test
add
mov
test
inc
mov
lock
test
fists
call
adcl
pop
sub
sbb
xchg
pop
imul
les
inc
popf
cmp
lock
push
sub
insl
sbb
pop
je
int
mov
das
call
mov
sub
sub
data16
scas
mov
adc
jns
mov
lds
jl
push
cmp
leave
roll
and
mov
cmp
decb
cmp
stos
jp
or
repz
and
xchg
jo
fisttps
fldenv
mov
mov
repz
call
les
out
inc
out
push
orl
push
stos
clc
xchg
testl
mov
inc
xor
inc
inc
sub
xchg
movsl
rclb
jp
in
in
aam
mov
pusha
iret
icebp
adc
cld
xor
adc
jbe
xchg
data16
pop
icebp
pop
lods
jae
rcll
add
pusha
jmp
out
mov
dec
int3
insl
dec
sbb
movsb
in
mov
scas
outsl
decl
push
pop
dec
movb
sbb
push
sub
or
jp
shlb
xchg
out
insl
xor
scas
popa
rorl
icebp
cmp
push
jne
mov
cli
movsb
mov
adc
daa
test
inc
inc
scas
data16
sub
popf
sub
ret
jle
pop
ret
aas
repnz
inc
ss
sub
pop
sbb
or
fwait
jns
daa
or
push
in
std
ret
stos
jecxz
jnp
pop
or
movsl
divl
jecxz
cmp
shll
test
leave
sarl
jo
lea
adc
sti
ret
mov
or
xchg
mov
imul
in
aaa
xchg
out
sbbl
push
stos
inc
es
jmp
mov
stc
insl
cmp
jns
and
jno
xor
add
iret
mov
jnp
ds
mov
test
inc
lea
cmc
cmp
inc
repnz
add
mov
ret
and
jbe
cmp
push
test
call
aaa
push
lds
ljmp
int
frstor
sub
push
adc
jmp
aaa
out
adc
ljmp
jecxz
xor
repnz
jmp
out
cmp
divl
call
jmp
stos
sbb
pop
fwait
lahf
mov
cmp
or
dec
ljmp
sub
push
jbe
xchg
dec
push
gs
adc
sti
popf
mov
inc
mov
mov
dec
lahf
jo
sahf
add
and
rcl
push
ss
lahf
fcomps
lods
jo
adc
fnstcw
call
jb
sub
dec
sbb
pop
rcl
lock
fldenv
and
es
cmc
sub
out
inc
daa
mov
test
lock
mov
mov
mov
mov
subb
push
sub
mov
xchg
lcall
stos
mov
cli
ficompl
xchg
movsb
nop
cld
ja
in
mov
dec
xor
sbb
jmp
sbb
push
xor
and
repnz
sti
pop
sti
mov
outsb
and
add
push
out
cs
int
mov
xor
cmp
jecxz
mov
popa
test
push
fisubrs
cmpsb
mov
mov
ficomps
and
data16
xchg
ljmp
movsb
mov
and
mov
mov
inc
sar
daa
faddp
es
pop
outsl
xchg
cltd
sbb
ds
mov
pushf
rcl
lea
pushf
test
lcall
cmp
addr16
sbb
stc
xor
mov
jnp
jne
push
cwtl
and
fsts
mov
push
mov
xchg
lret
hlt
sbb
xchg
lret
nop
pop
sbb
add
sahf
add
test
push
push
jno
pop
pop
stc
enter
les
jae
std
inc
xor
push
sub
repz
sub
xor
xorl
fcompl
and
dec
shrl
clc
push
mov
sub
cmp
xlat
add
sti
jae
jmp
cltd
dec
shrl
mov
popf
push
jp
sub
xor
test
mov
and
mov
jae
pop
pop
inc
loopne
repz
jo
push
dec
fcmovnb
mov
arpl
pop
sub
sub
cmc
stos
dec
add
fcoms
mov
mov
repz
mov
iret
push
sbb
adc
push
pop
mov
or
and
dec
or
sbb
or
and
inc
or
adc
jg
in
xchg
push
loope
outsb
inc
cli
test
stos
repz
jp
sti
int
xor
xor
push
out
pusha
add
xlat
sub
loope
mov
sbb
stos
sub
xchg
ja
mov
imul
mov
sti
add
jbe
in
fidivs
roll
lock
sbb
arpl
push
pop
mov
jb
bound
insl
inc
ljmp
test
cmp
pusha
movsb
lret
fstpt
push
adc
xor
and
stc
punpckldq
dec
lds
dec
popa
and
push
xchg
sbbl
stc
adc
sbb
fnstenv
lahf
loope
sbb
and
jl
sar
jmp
dec
sub
sbb
in
dec
push
mov
pop
aas
mov
pop
and
nop
lock
loop
adc
inc
jmp
fsubrs
push
loop
adc
cmc
mov
pop
addr16
cmp
arpl
outsb
push
sbb
lahf
loop
and
mov
movsb
mov
inc
xlat
andl
lahf
data16
push
decb
xor
cmp
aad
enter
and
scas
fdivr
in
pop
or
ss
pop
jne
push
in
es
ret
push
push
mov
sub
jnp
sahf
lret
inc
adc
xor
lea
mov
jo
es
pop
xchg
out
push
and
nop
fbld
add
cwtl
mov
lock
push
pop
mov
mov
mov
or
inc
mov
int
stos
lods
repnz
int3
nop
pop
and
mov
push
mov
mov
arpl
push
mov
lds
mov
sbb
add
test
inc
mov
out
cmp
cmc
aad
imul
push
adc
pop
cwtl
sbb
xchg
jecxz
mov
pop
clc
jo
lods
mov
mov
fcmovu
sbb
and
loope
cmp
pop
lods
outsl
aas
mov
int
add
aad
inc
loope
inc
out
fsubp
rcll
xor
aad
mov
pop
rclb
xchg
xchg
mov
push
movsb
subl
test
cmpsb
dec
dec
adc
jle
call
sub
bound
test
sbb
cmpsb
sbb
xchg
or
dec
push
in
mov
out
push
lcall
cmpsl
jmp
pusha
push
loop
or
sub
push
jae
adc
call
gs
sub
mov
out
jb
mov
test
push
inc
ljmp
js
rolb
jle
int
jp
push
push
pop
lds
add
hlt
dec
loopne
sub
push
out
pusha
cmp
cs
call
adc
int3
and
jecxz
scas
or
adcb
sahf
in
xchg
xor
out
sub
in
lret
leave
int
idivb
or
ja
dec
adc
scas
xor
call
mov
insb
and
inc
popf
or
gs
jno
pop
ret
ja
aad
pop
subb
lret
pop
fistl
hlt
sbb
mov
push
movb
sbb
pop
mov
sub
stos
jg
push
sub
push
shrl
mov
rcl
ljmp
mov
pop
pop
jae
dec
insl
inc
out
repz
cmp
jg
clc
cmc
mov
nop
fcmovb
inc
add
test
stos
orl
jbe
pop
arpl
cmp
out
enter
ret
xacquire
sbb
addr16
out
ja
mov
jb
mov
jg
add
test
mov
dec
cmp
mov
in
sub
fldl
push
fdivrp
test
or
and
or
icebp
ja
sub
in
leave
and
iret
xor
gs
bound
add
or
pop
xlat
jecxz
daa
add
in
sbb
lret
leave
cmp
loop
push
sub
xchg
fucom
lock
sub
adc
mov
ljmp
or
arpl
or
push
lds
sbb
adc
dec
sti
and
les
loope
xchg
movsb
sbb
pusha
lret
cmp
and
out
hlt
fcomps
dec
fsubs
subl
cmpb
add
es
mov
subl
addr16
in
sub
test
xchg
xlat
cli
jae
pop
sbb
jmp
cmp
mov
and
rcrl
pushf
rcll
jbe
ret
int
ret
rcl
fisttpll
pushf
mov
dec
and
pop
aaa
imul
shl
cmp
xchg
push
mov
rclb
push
sbb
or
aam
out
fistl
test
scas
and
sbb
pushf
enter
and
pusha
push
or
mov
sub
mov
mov
sti
je
scas
push
js
jnp
pop
call
mov
mov
mov
jne
push
and
xor
mov
clc
idivl
orb
sbb
icebp
sbb
add
pop
cmc
jg
aam
push
add
cmp
cmpsl
ret
inc
mov
aad
scas
add
sub
xlat
xlat
out
pop
imul
dec
mov
sub
mov
adc
sbb
mov
cmp
mov
inc
mov
outsb
jno
mov
mov
push
adc
repz
jno
mov
out
push
inc
inc
sub
hlt
mov
dec
push
clc
repnz
dec
movsb
fisubl
ljmp
pop
and
mov
pusha
mov
jge
or
or
fnsave
fwait
add
loopne
mov
mov
clc
mov
out
fbld
mov
jle
pusha
or
and
xor
mov
dec
sbb
dec
or
cmp
ss
fwait
repz
int3
loope
jge
sub
xor
push
addr16
filds
xor
or
ret
or
outsl
mov
cmp
mov
or
lahf
mov
cmp
pop
fcmovne
dec
fiadds
mov
pop
neg
repnz
popa
fwait
sbb
mov
int
pop
xchg
nop
loop
lret
jle
lock
and
scas
pop
and
xchg
insl
and
mov
rorb
add
cmpsl
fwait
rclb
cs
xchg
fistpl
jp
dec
adc
inc
xchg
fcomi
jnp
mov
aam
add
orl
scas
mov
aaa
or
inc
fwait
inc
ja
cmp
sbb
mov
out
jecxz
jge
mov
xor
pop
sub
add
pushf
lea
mov
add
out
hlt
jo
scas
push
imul
cltd
mov
fildll
lret
xor
loop
les
push
loopne
aam
and
pop
in
stos
lret
dec
imul
mov
adc
mov
cwtl
jne
arpl
icebp
mov
ds
ret
repz
dec
int
jae
xlat
ret
jo
mov
in
mov
cmpsl
mov
inc
jmp
and
sbb
adc
sbb
mov
sub
test
pop
push
in
or
fsubs
out
push
mov
mov
jmp
xchg
lret
xor
les
lds
xchg
shlb
xchg
imul
adc
inc
adc
mov
mov
jmp
fdivrp
xor
outsb
or
and
sbb
pop
adc
loopne
xor
inc
js
xor
xchg
pop
faddl
mov
sub
insl
ss
icebp
jo
pushf
lret
movsb
scas
aam
inc
sbb
sbb
rorb
fwait
or
cmp
jge
mov
dec
dec
mov
in
arpl
mov
insl
push
and
movsb
cmp
sub
mov
jmp
inc
push
shlb
jns
mov
outsl
adc
fidivl
and
inc
mov
int
pop
jbe
aas
loopew
mov
ret
loope
sbb
cmp
ds
xchg
and
sarl
into
add
addr16
lahf
adc
sbb
mov
push
pop
ljmp
cmp
add
lock
lods
cltd
mov
ja
ljmp
retw
and
dec
push
aas
lret
repnz
or
pop
sbb
jns
pop
mov
decl
xchg
clc
lahf
mov
and
cmp
in
mov
jne
in
jge
popa
iret
mov
mov
test
loop
test
outsl
call
mov
push
flds
dec
lea
push
xor
jle
mov
sub
sub
mov
ret
in
xchg
adc
xchg
fmulp
cwtl
xchg
sti
inc
imul
jmp
jg
add
jg
popa
pop
and
shll
xchg
jns
sbb
movsl
xchg
mov
and
pop
fimull
jns,pn
or
cld
aas
mov
data16
addr16
adc
push
dec
and
inc
add
sti
mov
xchg
int3
sbb
mov
sub
int3
sbb
xchg
out
movsl
sti
dec
popf
sub
les
nop
arpl
cli
dec
or
pop
insb
aas
add
add
cmp
into
xchg
mov
and
xor
dec
cs
stos
dec
push
ret
fisttpll
out
shll
mov
sti
jb
sub
adc
push
ja
push
icebp
repnz
fldl
and
mov
sarl
cmp
or
inc
jae
jae
adc
aad
jne
ss
jle
jne
outsl
lcall
jmp
xor
cld
pop
mov
jecxz
movsl
push
cld
cs
pop
jb
push
sbb
dec
dec
adc
sub
or
int3
or
xchg
stos
jmp
mov
test
cmovge
sbb
jp
dec
outsb
ret
mov
mov
cli
cmp
and
mov
or
bound
jno
mov
or
iret
negb
cmpsb
mov
mov
pop
pop
mov
cwtl
or
mov
or
js
mov
into
inc
push
push
arpl
add
out
mov
popf
inc
sbb
mov
dec
dec
loope
sbb
pop
and
pusha
mov
mov
inc
nop
xor
sub
les
jmp
pop
pusha
loope
xlat
xor
jno
divb
push
jecxz
rclb
dec
int
in
pop
stos
outsl
int
or
out
sub
sahf
jmp
mov
iret
dec
cmc
sub
sahf
push
lret
inc
jl
xor
data16
push
out
push
bts
adc
and
xor
push
popa
and
fdivrs
add
pop
leave
add
push
insl
and
stos
and
inc
les
loopne
dec
xor
cltd
push
mov
inc
andb
xchg
cmpsl
xchg
sub
mov
incl
dec
mov
dec
cmc
jl
push
notl
iret
pop
movsl
cmp
mov
clc
jns
mov
daa
addr16
and
xor
mov
mov
jg
dec
xchg
xor
sbb
pop
cmp
add
push
adc
cltd
dec
xchg
out
adc
ret
jo
jbe,pn
shr
aas
aaa
cmp
fldl
and
stos
push
js
pop
sbb
sbb
daa
aaa
or
jbe
dec
icebp
sbb
scas
mov
xchg
lods
lock
stos
add
sti
adc
imul
mov
je
adc
adc
sarb
push
adc
lds
into
jmp
insl
xchg
in
movsl
clc
inc
add
mov
in
or
insl
fistps
sbb
mov
push
add
adc
sub
and
adc
roll
mov
push
adc
ljmp
fists
mov
inc
xor
sar
lea
repz
mov
or
sub
sub
icebp
push
mov
sbb
mov
sbb
ret
ret
ja
mov
mov
jecxz
ret
jmp
int3
pop
repz
mov
inc
mov
sub
into
shlb
daa
neg
mov
pop
sahf
xor
adc
inc
dec
pop
test
cld
rcr
xchg
jo
and
in
fadd
jnp
sahf
mov
jp
mov
dec
loope
lret
mov
adc
mov
jno
outsl
mov
sti
jnp
dec
mov
mov
ds
out
mov
test
inc
movsl
xchg
sahf
out
lods
sbb
inc
mov
jb
dec
push
imul
ret
push
repz
dec
imul
pop
mov
repnz
xchg
mov
lods
ljmp
xchg
cmc
xor
push
mov
scas
and
jno
fstpl
mov
outsb
mov
and
or
mov
sbb
nop
xchg
test
movsl
cltd
rcl
push
xchg
pop
aaa
fsubs
mov
outsb
or
pop
pop
and
sbb
push
test
push
dec
sub
sub
xchg
out
pop
daa
cmp
clc
push
daa
enter
test
cmc
xor
push
xlat
imul
jae
sbb
lahf
jge
je
aas
lret
ja
jecxz
xchg
clc
fmuls
mov
cld
ljmp
cwtl
scas
jae
idivl
in
popf
dec
lret
mov
in
cld
inc
sahf
dec
test
sub
popf
jo
loop
addl
mov
pop
inc
jno
popa
or
test
sarb
add
sub
mov
cmpsb
nop
in
mov
adc
js
ficoms
fisubs
ds
inc
mov
mov
je
pop
mov
cltd
sub
bound
fldcw
mov
fdivrl
movsb
xchg
and
inc
les
cmp
jmpw
clc
cltd
mov
or
je
nop
stos
popf
arpl
adc
mov
flds
loope
push
or
loope
xor
adc
push
js
adc
jg
or
push
add
into
arpl
jle
pop
inc
cmp
jg
mov
inc
and
dec
dec
jg
or
lea
nop
je
shrl
mov
popl
xor
stc
inc
cmpsb
je
loope
addb
pop
js
imul
repz
sub
hlt
stos
jnp
outsl
or
jnp
mov
push
rcll
add
lret
fdivr
in
adc
popa
movsl
icebp
add
jmp
sbbl
mov
push
pop
int
adc
adc
jbe
pop
sbb
addr16
push
mov
push
movsb
fiadds
xor
lcall
cmc
mov
stos
cmp
fdivs
sub
push
imul
or
mov
and
call
popa
pop
aam
into
xchg
pop
leave
and
sbb
popa
shlb
sarb
ss
fucomip
sti
dec
pop
jne
or
sbb
mov
and
xchg
ss
iret
lock
mov
add
or
ret
cmpsb
jge
and
ret
mov
sete
aaa
jne
lcall
inc
rcr
dec
divl
lds
xchg
cmpb
jmp
cmp
fcompl
jl
pop
xchg
rorl
repnz
sbb
sbb
dec
ret
mov
dec
aam
std
pop
push
inc
lods
sahf
and
and
pop
loop
mov
arpl
or
dec
stos
sbb
loope
fdivrl
or
mov
push
dec
fisttpll
sahf
jo
fnstsw
aas
mov
dec
nop
mov
mov
sbb
popa
mov
jnp
pop
sub
add
cmpsb
inc
dec
ss
aas
cmpsl
or
stos
jae
test
jns
divl
jbe
enter
test
outsl
mov
stos
pop
fsts
adc
aam
repnz
cmp
fdivs
jmp
dec
lds
pop
sbb
xchg
fimull
push
stc
mov
test
mov
dec
pushl
jae
mov
sbb
jnp
push
movsb
pushf
add
cmp
jb
pop
mov
add
ret
jno
adcl
sub
aaa
inc
inc
mov
mov
xchg
push
jnp
inc
xchg
popf
jno
inc
aaa
add
lea
pusha
sbb
dec
mov
stc
mov
mov
pop
loope
loopne
sbb
mov
filds
xorl
scas
push
movsb
cli
pop
pop
mov
leave
pop
shll
and
orb
fiadds
jecxz
into
and
dec
stc
xor
adc
in
popl
adc
push
xlat
cs
dec
sbb
push
jge
aas
dec
js
push
in
push
ja
cmp
jns
aad
lods
mov
mov
xchg
lods
xchg
push
cmp
pusha
and
enter
mov
imul
sub
mov
fisubrl
out
xchg
push
mov
in
stos
aam
xor
loopne
fwait
adc
inc
mov
hlt
loopne
sub
sub
scas
add
xchg
cmp
mov
jecxz
ja
lcall
sahf
fidivs
gs
sbb
je
movsb
mov
imul
test
adc
dec
pop
pop
and
add
shlb
pop
int3
jmp
hlt
dec
push
inc
xchg
push
mov
mov
shll
gs
pop
mov
shlb
icebp
sbb
dec
popa
jne
ret
cmp
mov
idiv
imul
mov
lcall
xchg
lcall
fiadds
pxor
push
jbe
shlb
mov
js
mov
sub
das
inc
stos
cmp
mov
mov
sahf
test
divb
mov
sub
and
lods
loope
xchg
adc
nop
push
int3
pop
ja
in
xor
icebp
cwtl
cmc
movsb
push
push
and
mov
xorb
pop
push
xor
xchg
jns
cmp
or
lcall
outsb
lahf
sub
fstps
and
dec
rorw
push
out
call
ljmp
pop
daa
or
jbe
xor
fldenv
sahf
aam
outsl
sbb
dec
fs
popf
mov
repz
xchg
inc
and
arpl
fimull
pop
or
arpl
fwait
xchg
dec
dec
dec
push
gs
pop
jl
loop
stos
xor
cld
cmpsl
dec
enter
mov
sub
sbb
xor
out
loop
push
cli
loopne
pop
xor
xchg
fwait
cmp
sarb
push
mov
scas
daa
fsincos
mov
cmp
mov
test
pop
fbstp
mov
pop
and
std
inc
dec
es
push
loopne
push
jo
call
imul
jb
pop
adc
or
xchg
push
xchg
stos
ret
fcoml
add
jecxz
add
adc
int3
bound
cmp
xchg
insb
and
rclb
outsl
loopne
push
or
vpextrw
inc
or
lods
fmuls
es
enter
lahf
mov
jo
fcomps
scas
and
push
js
mov
lret
jns
mov
out
sahf
pop
mov
addr16
mov
add
cmp
adc
pop
pop
jb
pop
mov
in
arpl
cs
js
mov
mov
adc
inc
mov
int
fwait
mov
addr16
mov
jae
pop
sbb
int3
pop
mov
or
sbb
dec
rcl
mov
and
rol
out
dec
mov
rolb
adc
push
mov
or
pushf
in
daa
xor
negl
xor
imul
pop
inc
mov
push
push
jb
fwait
popa
fcoml
mov
cmp
inc
jbe
push
and
pop
inc
pop
lods
lods
adc
cmp
test
or
cmpsl
adcb
lret
adc
lea
xchg
sub
nop
mov
jno
push
mov
in
and
scas
std
adc
arpl
in
add
and
pop
and
push
pop
pusha
mov
mov
dec
dec
add
sub
aaa
jmp
cs
lods
mov
cmpsb
jecxz
push
dec
cmpsl
mov
cmp
pop
xchg
insl
bound
test
shll
adc
into
in
sub
mov
inc
out
das
cmpsl
cwtl
jbe
out
loopne
adc
lock
dec
add
lods
cmpsb
or
aam
mov
sub
ja
mov
je
lcall
out
adc
add
mov
data16
fidivs
aas
cmp
pop
add
sub
mov
mov
sub
inc
popa
test
popf
mov
inc
out
xlat
or
in
sub
cmc
mov
mov
out
cmp
gs
pop
loopne
push
push
pop
sbb
sbb
push
sbb
mov
ret
mov
sub
mov
cmpsl
pop
pop
inc
sbb
pop
cwtl
or
int3
pusha
pop
loop
jb
pop
shr
andl
pop
inc
mov
test
gs
and
mov
dec
sti
mov
cmp
mov
sti
push
jmp
stos
jns
cmp
xchg
inc
xchg
bound
xor
and
mov
xlat
mov
sub
cmp
ret
pop
xchg
ds
test
mov
xorl
push
jae
insl
sub
xchg
repz
jne
mov
das
arpl
cli
incb
nop
inc
cli
sub
clc
xchg
fs
inc
push
jecxz
mov
xor
loope
pop
sub
pop
mov
mull
cmp
mov
leave
lds
or
inc
dec
push
inc
mov
cs
and
or
cld
xor
ret
addr16
fdivrl
push
testb
pusha
lret
adc
pop
sbb
jo
dec
cmpsl
je
icebp
cmp
inc
sbbl
add
sbb
and
js
mov
lcall
mov
mov
arpl
mov
lods
stos
push
pop
xor
or
sbb
arpl
xor
je
pusha
fdivrp
fldcw
jb
shrl
sub
mov
jb
pop
cmpsl
test
or
repz
sti
pop
mov
test
cmp
cltd
add
xor
out
fsubl
in
iret
inc
sub
mov
movsb
push
xor
popf
outsb
xchg
dec
ss
add
mov
xor
subl
cmpb
or
push
sbb
lret
add
push
mov
aas
fmull
in
lea
jmp
lods
lcall
mov
sbb
cmp
js
pop
mov
push
xchg
fldcw
xchg
adc
push
mov
and
mov
dec
push
xlat
sbb
in
fildl
inc
xchg
push
sub
lds
testb
cmp
cltd
rclb
mov
fisubrl
fdivs
lods
cs
xchg
jns
inc
jb
bnd
or
jle
in
cli
or
push
dec
test
sub
jno
mov
repz
insl
movsl
stos
daa
scas
out
xchg
jle
in
sub
les
pop
test
mov
popf
aaa
xchg
enter
sti
inc
xor
pop
inc
pop
cmpsb
cmp
lea
hlt
int
adc
pop
scas
in
jmp
add
push
nop
sbb
add
sahf
gs
dec
inc
push
int3
xor
add
out
enter
mov
shll
dec
sbb
outsl
xlat
dec
insl
jbe
jg
test
in
movsl
ja
in
fstpt
lods
inc
fiadds
out
pop
aam
leave
hlt
add
and
mov
cli
popf
repnz
push
cli
nop
xor
push
add
mov
mov
sbb
test
cmp
push
je
cs
jle
fnstsw
pop
cmp
adc
xchg
adc
addr16
fisttps
xchg
mov
xlat
jmp
sub
repz
out
inc
jns
cmp
aam
jl
push
hlt
adc
xchg
dec
cld
mov
or
sti
stc
out
sbb
add
add
sbb
in
ficoml
test
es
lcallw
mov
inc
push
mov
or
sbb
into
in
sbb
or
jl
inc
lret
jle
cmp
mov
test
cld
xchg
dec
xchg
xchg
outsl
fdivl
fiadds
enter
je
cmp
cvtps2pd
add
fmul
divl
sub
dec
mov
call
dec
cmp
xor
gs
xor
sbb
in
mov
lret
adc
int3
pop
in
movsl
cmpsl
mov
arpl
xorl
add
mov
xor
nop
lods
add
dec
aas
movsl
fisttpl
orb
pop
test
stc
or
in
lea
shrl
dec
sarb
mov
scas
or
test
mov
cmp
pushf
ja
pushf
xor
cmpsb
imul
in
scas
sub
mov
mov
push
jge
dec
xchg
or
mov
out
inc
ret
cli
adc
inc
shl
mov
ljmp
jns
xlat
aad
xchg
mov
xchg
cmp
vshufps
sbb
nop
dec
aas
sub
and
and
imul
js
dec
sbb
ret
repz
xor
lds
lods
js
mov
and
jbe
outsl
bswap
in
mov
lret
loope
adc
in
notl
or
cld
lcall
pop
pop
arpl
xchg
ja
mov
std
leave
dec
arpl
test
xchg
mov
leave
sub
pop
in
mov
xchg
xchg
movsl
pop
sub
inc
lcall
mov
hlt
scas
orb
rcr
mov
dec
sbb
lahf
stos
xchg
insl
push
xlat
add
or
mov
mov
push
xchg
dec
mov
push
mov
inc
pop
call
mov
xchg
sub
add
lock
es
imul
xor
add
pminub
mov
jo
test
add
dec
push
xchg
xchg
pop
inc
fisubrl
adc
je
dec
sub
lock
sbb
mov
lret
mov
insb
icebp
add
imul
sbb
call
ss
arpl
mull
pushf
rcr
add
cmp
or
jns
jns
scas
ret
addb
filds
xchg
xchg
dec
jecxz
in
scas
mov
sbb
decb
pop
dec
pop
lock
prefetchnta
xlat
lea
or
inc
mov
pop
sub
fists
xor
xchg
jb
jge
cmp
mov
movb
gs
xor
std
out
test
cmc
jmp
sub
aaa
fsubrs
cltd
lahf
dec
cmp
push
mov
repz
pop
mov
daa
push
iret
bound
js
dec
gs
dec
ja
pop
movsl
mov
fsubl
push
jmp
push
out
mov
icebp
insl
ljmp
loopne
adcl
aad
jno
pop
sub
sbb
add
ja
xor
ljmp
lods
lcall
add
mov
xor
pop
mov
dec
inc
and
iret
push
fcmovb
inc
cli
add
ja
scas
movsb
outsl
jno
fiadds
lcall
mov
inc
addr16
pop
lahf
pusha
mov
clc
fbld
outsl
inc
pop
push
sbb
pop
sub
imul
jge
data16
repnz
je
scas
das
sub
aad
bound
lret
es
je
test
test
and
mov
scas
es
xlat
jne
hlt
xchg
xchg
popf
push
inc
movsl
movsl
inc
adc
iret
lret
cmp
inc
fmuls
jns
sub
or
negl
and
jmp
sbb
sbb
push
int3
mov
push
push
sbbb
pop
mov
fcmovnb
pop
stos
int
add
jnp,pn
mov
pop
in
add
add
cmp
lahf
push
ficompl
lods
loopne
jp
outsl
pop
mov
and
in
or
cs
mov
das
add
loope
test
add
jmp
out
cli
xchg
xchg
or
cmpsl
jns
dec
inc
and
push
mov
mov
in
push
cmp
cmpsl
mov
add
fs
cwtl
pop
std
es
addl
cmp
lock
pop
push
fs
mov
mov
js
lods
adc
push
fdivl
cs
int
pusha
xchg
test
loopne
cmp
sbb
jmp
mov
pop
into
push
pop
dec
pop
or
out
dec
aad
push
lret
sbb
add
and
mov
push
xchg
fwait
cmpsb
out
ljmp
inc
jnp
daa
pop
loopne
lods
pop
jb
jae
in
das
test
mov
push
push
xchg
fdiv
mov
fwait
jae
sub
out
insb
or
hlt
fs
ret
pop
inc
es
add
fstpt
mov
lea
xchg
jle
testl
les
xchg
movsl
movb
and
ret
xchg
es
in
mov
pop
cmovbe
shll
cmc
xor
cwtl
mov
rcll
fs
daa
pop
std
adc
xor
lock
and
pop
push
int
dec
lock
orb
add
cmp
add
imul
pop
sahf
push
lods
test
out
add
adc
imul
and
xchg
and
js
adc
or
and
jae
imul
xchg
mov
ret
iret
imul
loop
lods
por
sub
jbe
add
dec
mov
mov
dec
cmp
or
pushw
insb
leave
sbb
adc
or
out
inc
mov
in
pop
cmpsb
fcomp
add
in
mov
fwait
xlat
out
lahf
jmp
repnz
daa
inc
xchg
cltd
mov
adc
mov
js
sbb
insb
xchg
int3
ljmp
lock
ret
mov
push
xchg
lods
sub
mov
mov
mov
decb
push
sub
lds
loop
imull
mov
xor
leave
push
push
xchg
mov
push
xchg
add
lcall
into
movsl
mov
imul
cmp
icebp
pop
cs
pop
mov
in
mov
aad
cmc
fsubl
add
cmp
xchg
cmp
jnp
dec
cmp
mov
lea
xor
adc
shrl
lret
sub
xchg
ljmp
scas
inc
insl
fstl
sahf
push
lcall
ljmp
mulb
xchg
dec
jecxz
sarl
sbb
inc
pop
adc
lcall
dec
pop
repz
cmova
mov
repnz
sub
pop
push
jb
cmp
xor
out
pop
sbb
pop
bswap
inc
cmc
hlt
jno
jge
jg
loopne
mov
mov
imul
repnz
sti
sbb
loope
push
push
mov
lret
les
mov
ret
mov
inc
mov
daa
or
clc
xchg
push
lcall
out
jns
sbb
sbb
or
subb
movsl
cmpsl
clc
gs
arpl
cmp
nop
call
jnp
cmpsb
adc
pop
adc
fwait
mov
xchg
cwtl
fdivrs
xchg
jecxz
loopne
lahf
into
inc
dec
insb
push
mov
into
xchg
dec
sbb
pop
mov
mov
mov
mov
dec
fdivp
push
lds
mov
pop
cmp
push
mov
popf
cs
push
negl
xchg
mov
push
cmpsl
inc
lods
sub
mov
shlb
pop
scas
and
dec
call
nop
push
mov
mov
aam
cld
movb
repnz
sti
jecxz
pushf
enter
push
inc
mov
insb
inc
lret
or
jecxz
pop
mov
stc
inc
xor
testl
push
mov
test
cli
sti
les
push
gs
xchg
jge
mov
jge
ljmp
jae
loopne
inc
dec
lret
arpl
js
sub
xchg
push
cmp
mov
xchg
jno
inc
jmp
rorl
mov
lea
add
ss
out
addr16
clc
scas
outsb
mov
cmc
mov
int3
cmp
jp
stos
add
sub
aam
mov
adc
sti
in
cmc
fldenv
xor
xor
inc
and
bound
mov
pushl
lods
pop
jmp
decl
dec
into
inc
insb
int3
out
jnp
sbb
dec
stos
jp
sub
and
aas
sti
jns
adc
jns
jp
jmp
pop
xchg
jecxz
fldcw
jecxz
cmp
std
mov
push
cmpsl
mov
sbb
cltd
lcall
ss
cmpsl
inc
pop
adc
mov
dec
xchg
cmp
inc
leave
subb
adc
cs
jge
mov
mov
ja
aad
push
into
sti
shl
movsb
xchg
in
push
test
adc
in
aas
push
loope
sahf
roll
or
sahf
popa
jbe
repnz
or
pop
push
ds
cli
ja
mov
mov
mov
mov
sub
inc
popa
cltd
and
fisubl
and
xor
xor
clc
pop
mov
cmc
add
scas
bnd
dec
fcomp
push
fstps
cmp
push
push
add
and
iret
shl
or
dec
aaa
rcrb
daa
push
dec
sub
xchg
xor
xchg
jne
inc
xlat
cmp
mov
rcll
push
dec
ljmp
push
in
cmp
push
push
aaa
rcl
xchg
lcall
insb
or
sbb
jmp
rcr
data16
push
sbb
fdivr
sub
dec
mov
xchg
rcrb
mov
mov
movsb
or
sbb
mov
mov
or
ds
inc
sti
cmc
scas
rcrl
test
cmpsb
sbb
mov
cmpl
mov
fucomi
xor
or
lock
push
inc
arpl
aas
add
fdivs
repz
mov
cmc
mov
mov
inc
lods
and
test
jge
adc
and
or
es
jp
push
jp
push
daa
push
and
lock
fdivs
movsl
cmp
sub
sbb
fisubs
je
mov
inc
in
pop
out
push
mov
cmp
push
stos
mov
ror
mov
xchg
xchg
mov
addr16
daa
lds
mov
out
call
push
xchg
adc
dec
js
icebp
pop
es
mov
or
mov
jl
push
pop
ja
xchg
test
adc
and
cmc
adc
mov
scas
stc
icebp
xor
and
pop
sbb
ljmp
sbb
fwait
in
out
scas
fnstsw
inc
iret
aad
popa
push
jp
cwtl
mov
lret
adc
sti
adc
mov
arpl
dec
mov
sbb
int
ds
arpl
jg
or
xchg
out
push
or
scas
int
inc
inc
or
decl
lret
xor
incb
pop
aaa
mov
js
pop
rcll
into
push
in
mov
int
out
inc
sub
and
mov
or
test
dec
pop
rclb
push
adc
dec
out
out
pop
popf
clc
scas
jmp
arpl
shr
ds
mov
sbb
dec
add
or
cltd
jo
mov
push
mov
adc
xchg
pop
into
sub
out
in
arpl
outsl
and
sub
mov
sub
sbb
test
xor
add
adc
arpl
dec
test
cmp
mov
mov
pop
mov
sbb
mov
and
outsb
fisubrs
xor
imul
pushf
mov
push
iret
xor
es
and
cmp
sbb
arpl
mov
push
movsl
xor
push
mov
add
jbe
fstpl
stos
mov
testb
test
iret
call
adc
xlat
cmpsl
jns
inc
sub
pop
xor
push
inc
hlt
mov
xor
add
mov
cmc
call
imul
out
leave
add
subb
shr
jle
sbb
stos
mov
mov
stos
out
inc
pop
jno
adc
adc
xor
sbbl
push
cli
inc
test
movsb
jp
shll
fmull
into
vcvtdq2pd
jmp
and
aad
xchg
aad
mov
lret
or
ret
sbb
jo
mov
jns
or
stc
push
mov
inc
pop
push
sub
push
test
mov
and
sarb
jg
push
sti
test
clc
mov
mov
into
add
lods
cmc
idivl
lcall
mov
fcoml
or
inc
jbe
sub
aaa
icebp
movsl
inc
aas
add
cmp
dec
xor
inc
cmp
fs
xor
ja
add
enter
faddp
inc
xchg
xor
out
xor
ds
in
mov
push
pop
hlt
outsb
arpl
adc
mov
ss
sub
scas
cmpl
std
adc
into
lahf
cmpl
pop
mov
bnd
xchg
cwtl
cwtl
jo
xor
ret
shrb
cwtl
inc
jg
xchg
mov
imul
sti
mov
loopne
mov
dec
push
inc
pop
ljmp
xchg
rorl
jmp
adc
lods
or
int
outsb
outsl
arpl
shrb
cwtl
nop
cmp
jb
scas
fcmovnu
push
jmp
or
fildll
cmpsb
jle
push
test
push
or
rcrb
or
cmc
pop
jl
adc
fwait
lds
pusha
adc
push
sahf
dec
mov
mov
jmp
sub
mov
rclb
add
les
cmp
sarl
mov
lcall
jnp
sbb
fstps
mov
sub
clc
sub
jge
cwtl
fdivl
fisubs
xchg
jge
pop
leave
es
ljmp
inc
sti
mov
inc
push
mov
les
sbb
insb
mov
lret
js
aas
fwait
xor
int
and
stc
pop
mov
mov
mov
stos
int
jmp
test
jmp
push
insb
clc
in
jo
mov
inc
decb
sub
xor
push
mov
adc
mov
pop
sti
jne
fisubs
ds
xchg
mov
aaa
sbbb
jmp
jne
fstpt
xor
cmpsb
and
ret
jl
add
imul
gs
or
aam
scas
sbbl
fmull
stc
sub
orl
sbb
dec
sbb
jns
sar
push
or
mov
and
mov
lods
xor
lret
adc
inc
xor
inc
fmul
movsl
rcrl
fdivrl
lock
fistpll
sbb
or
popaw
insl
mov
push
pushf
orl
or
ja
xchg
scas
sar
sub
jnp
ret
xchg
mov
insl
xor
mov
test
cmp
or
dec
js
lret
icebp
jns
xor
mov
jno
push
imulb
cwtl
dec
iret
cs
and
or
push
movsl
adc
pop
cmp
lods
cwtl
movsb
and
pop
mov
inc
inc
popf
jecxz
push
push
mov
sahf
fisttpl
xor
mov
lock
jg
shlb
xor
jle
call
push
out
push
fdivs
cmpsl
outsl
mov
sbb
cmc
leave
mov
jns
xor
in
pusha
lret
push
bound
adc
or
xchg
loopne
inc
lcall
jns
xchg
mov
adc
orl
dec
fwait
sub
cmp
jo
mov
lds
xor
call
iret
mov
push
aad
or
sub
bound
inc
inc
movsl
hlt
mov
loop
and
sub
sbb
mov
inc
int3
and
shll
mov
loop
lcall
fstps
or
insl
cmp
and
and
mov
or
outsb
push
lods
sbb
inc
cmp
push
jae
add
inc
adc
xchg
clc
mov
or
jo
adc
pop
add
or
mov
repnz
mov
mov
stos
ret
mov
cmp
xor
cs
cld
mov
mov
fstpl
out
xlat
mov
dec
cmp
jl
mov
cwtl
push
and
mov
dec
jge
and
mov
fmul
std
xchg
xor
jge
sub
scas
adc
or
or
sub
iret
jmp
ds
pushw
leave
insl
adc
stos
fld
mov
paddsw
adc
sahf
xchg
jge
pop
mov
cmp
add
aam
push
adc
fsubs
pop
jbe
sub
cltd
les
xor
mov
or
test
aad
lret
mov
add
mov
mov
lcall
fld
int3
loop
push
dec
or
pop
cmp
mov
jae
in
fisubrl
mov
cmpsb
xchg
call
or
or
jecxz
bound
push
dec
enter
int3
inc
icebp
icebp
test
iret
xor
mov
cmp
inc
cld
jb
mov
push
cmp
mov
push
cmp
push
sahf
insl
mov
or
jb
inc
aam
enter
loop
sub
hlt
nop
adc
aaa
lea
mov
pushf
aad
lods
ja
inc
outsl
or
ret
and
push
fisubrl
or
js
push
enter
sub
enter
in
popa
xchg
push
xlat
loop
xchg
sub
pop
int
addr16
dec
mov
push
cmpsb
or
shl
adc
xor
loop
mov
cmp
dec
xchg
addr16
enter
pushf
mov
dec
and
mov
and
scas
adc
data16
jb
push
add
rcll
pusha
jae
je
lea
jb
push
imul
notb
icebp
mov
push
pop
dec
mov
clc
data16
cmp
popa
xchg
inc
aas
pop
adc
int
xor
add
xchg
mov
daa
add
mov
push
xlat
or
insb
xor
in
outsb
and
push
or
leave
arpl
jnp
sbb
outsb
ds
cmp
add
in
call
pop
in
xor
aas
incb
push
jg
push
cmp
and
outsb
xor
mov
push
shrl
push
xchg
imul
push
xor
movsl
aad
scas
in
dec
jl
jo
aaa
mov
test
lods
jmp
orl
ss
cmp
ret
push
outsl
lret
insl
sub
mov
sbb
mov
into
add
fs
test
mov
jns
jb
inc
jno
push
and
xchg
mov
push
mov
in
xchg
leave
xor
inc
cmc
jo
frstor
popa
adc
fistl
jae
fxch
cli
inc
and
ret
lea
lods
push
add
or
or
inc
aad
jb
jp
ja
mov
jnp
out
mov
sbb
sarb
pop
lods
jp
ja
push
push
scas
sub
mov
mov
shrb
roll
dec
jg
adc
out
push
adc
test
push
jns
aam
scas
xor
mov
jns
mov
mov
jns
sbb
mov
sarl
sti
adc
movsl
nop
sub
ror
cmp
addr16
xchg
loop
pop
push
into
dec
and
push
jbe
push
lcall
jno
fs
lds
int3
cwtl
mov
sub
and
and
pop
mov
and
scas
xchg
sbb
test
in
jb
mov
jno
movsb
roll
movb
xchg
fs
shlb
adc
push
leave
cmc
dec
push
loopne
sbb
mov
mov
and
jnp
pop
daa
pop
jns
aaa
add
shrl
mov
call
mov
shlb
xchg
shrl
mov
lea
out
lock
sub
lcall
xor
dec
push
pop
mov
cltd
loop
cld
scas
cmp
mov
jne
daa
push
es
shll
insl
xorl
adc
clc
ret
sti
test
ja
or
mov
imull
and
movsl
addr16
orb
repz
gs
popa
sbb
bound
incl
inc
sbbl
push
js
cmpsb
xor
mov
push
mov
jne
xchg
icebp
stc
push
xchg
pop
adc
cmpsb
inc
xchg
hlt
mov
and
dec
adc
out
xchg
pop
das
outsl
jne
hlt
dec
mov
mov
lcall
xchg
outsb
adc
negl
leave
pop
push
outsl
or
xor
fistpll
pop
mov
and
cmp
daa
add
push
repz
sub
xlat
add
out
mov
push
xlat
test
mov
hlt
adcb
lods
xor
dec
pop
fldl
jno
clc
xchg
xchg
lea
ja
jnp
mov
dec
jecxz
mov
lods
or
arpl
addr16
push
dec
rorb
mov
cmpl
out
jae
xor
adc
cld
test
mov
incb
add
fxch
int3
sti
lret
lods
cmp
movsl
ljmp
mov
lahf
call
lcall
mov
xchg
push
or
jo
pop
dec
fidivl
mov
cltd
pop
jge
loopne
or
jnp
in
jmp
mov
testl
dec
lahf
js
adc
iret
pop
in
mov
inc
inc
int
mov
xchg
test
mov
pop
gs
inc
movsl
cmpl
stos
jg
sub
cmpl
mov
push
sbb
dec
popa
je
add
enter
cmp
adc
and
inc
out
in
push
mov
pop
mov
ss
cmp
pop
adcl
push
xchg
bnd
ret
adc
fsubrp
into
outsb
imul
lret
push
jo
mov
fisttps
sahf
adc
sbb
xchg
jmp
pop
fldcw
loopne
xchg
inc
inc
rcll
pop
rorl
out
pop
dec
add
addr16
lods
pop
push
movsb
testl
ss
ja
stc
push
mov
or
inc
daa
shrb
hlt
mov
add
fucomp
or
shrl
imul
pushf
out
aas
sbb
and
iret
leave
andl
xlat
jmp
pusha
mov
dec
sahf
lahf
jno
jnp
dec
ss
es
adc
cmp
lret
push
iret
cltd
rol
sbb
pop
clc
mov
dec
inc
xor
je
out
jl
loope
fbld
mov
in
push
adc
cmpsb
adc
lds
out
cmp
outsl
or
mov
add
push
cmp
jae
push
mov
inc
testb
enter
push
adc
aad
mov
xchg
repnz
sbb
or
gs
movsl
mov
rolb
negb
aam
lcall
out
sub
or
fwait
das
test
mov
std
rcrl
lret
and
mov
jno
xor
les
icebp
shl
add
pop
stc
sbb
stos
xchg
sbb
sub
xor
mov
in
adc
sub
ja
aam
mov
dec
nop
sahf
xor
mov
fs
fmuls
out
dec
insl
mov
clc
pusha
daa
cmp
jle
sti
inc
dec
and
mov
popf
sti
xchg
adc
mov
ds
sbb
mov
lds
ret
sbb
das
cmp
nop
bound
cld
jmp
mov
orb
push
jnp
adc
jl
popa
dec
in
pop
add
xchg
mov
ljmp
pop
pop
pop
sub
push
and
jecxz
movsl
sahf
mov
mov
ss
data16
add
out
push
mulb
sbb
insb
push
jns
js
push
clc
int
jbe
sub
fs
lds
nop
sub
adc
xor
loop
push
mov
mov
pop
xchg
jno
jecxz
cmp
push
fsubl
mov
js
fwait
mov
dec
dec
and
in
adc
xorl
inc
pushf
orb
dec
add
jg
pop
mov
push
mov
add
rolb
lods
lods
mov
sub
jge
sbb
sbb
pop
test
push
iret
ljmp
xchg
add
dec
xor
push
xor
pop
push
sbb
sti
jmp
enter
call
mov
xor
dec
add
xor
xor
sahf
push
loop
push
stos
push
cld
cmp
jmp
fnstenv
aam
jne
jmp
out
cmp
hlt
cmc
flds
cmp
out
mov
mov
js
popa
movsl
outsb
in
lods
jb
adc
dec
stc
movsb
cmp
mov
sysret
in
xchg
mov
pop
xchg
xchg
push
fidivs
cmp
cs
xchg
or
lock
xor
pop
lea
je
popa
arpl
and
push
mov
sbb
or
int3
pop
sbb
mov
loopne
inc
mov
test
dec
push
clc
xor
mov
cmp
xor
xor
lahf
int
xchg
sbb
or
dec
mov
pusha
sbb
cld
cld
les
scas
pop
mov
leave
push
mov
fisubrs
pop
nop
insl
testl
ucomiss
push
pop
or
orl
dec
scas
cltd
repz
mov
push
mov
cmp
inc
lret
mov
and
add
pusha
lods
dec
cli
xchg
scas
adcb
jg
mov
lret
add
aaa
fiadds
dec
aas
ret
mov
mov
scas
jae
enter
les
mov
xor
outsl
ret
shlb
sbb
cld
dec
addb
cmp
lahf
jp
xchg
sbb
adc
int3
mov
xchg
mov
mov
inc
inc
rol
fwait
mov
bound
mov
cli
sub
mov
mov
mov
cli
push
das
movsb
xchg
test
mov
dec
fs
cltd
mov
repnz
lahf
mov
dec
inc
fisubl
roll
cmpsl
jmp
out
dec
stos
pop
sbb
xlat
or
mov
and
in
add
sbb
movsl
ss
popa
push
cmp
fldcw
cmpsl
add
in
nop
mov
sbb
push
adc
pop
cld
xchg
inc
sbb
add
call
adc
push
loop
or
sub
jb
shr
sub
shrl
jg
jae
mov
aam
fs
pop
inc
cld
jecxz
imul
xchg
pop
dec
cld
mov
pushf
call
mov
jae
jmp
mov
xor
xor
cmc
aad
aaa
push
sbb
loopne
xchg
mov
mov
add
jb
sbb
sbb
add
imul
in
call
scas
and
jg,pn
pop
dec
scas
ljmp
or
jl
shll
xor
dec
in
jbe
xor
cltd
mov
adc
popf
inc
out
inc
adc
mov
call
add
adc
mov
movsb
jo
lcall
mov
bound
pushf
sar
inc
sahf
arpl
cs
movsb
xchg
lods
cmp
aad
xchg
faddl
mov
jp
lods
lock
or
jp
cmc
shll
lods
in
pushw
out
add
aam
and
mov
jb
fistps
pop
mov
movsb
fisttps
rclb
jp
jae
mov
rcrl
xlat
jge
jge
xor
push
loopne
fbstp
sbb
outsl
jle
scas
cmp
addr16
rcrb
push
mov
add
mov
jecxz
cs
jg
sbb
hlt
cmp
lret
push
push
cmp
out
pop
in
scas
xor
ja
fwait
mov
push
lods
pop
icebp
xchg
shll
lods
rolb
jp
pop
insl
push
sti
mov
aad
call
in
and
lahf
dec
jbe
fwait
mov
and
pop
aam
inc
and
addr16
fmuls
xchg
push
subb
cmpsl
lods
ror
repz
or
in
test
sbb
fs
ds
mov
mov
mull
dec
fbstp
or
dec
inc
out
daa
ja
or
shlb
sub
push
add
add
and
std
push
dec
push
je
mov
pusha
out
pop
mov
xor
in
pop
addr16
inc
and
xor
sbb
dec
sbb
test
insl
push
mov
jle
inc
sub
js
sbb
daa
outsl
jg
lods
pushf
into
test
cmp
lahf
push
inc
jmp
xchg
jnp
dec
xlat
sub
pop
mov
mov
xor
cld
hlt
mov
js
and
mov
aam
and
iret
imul
mov
xchg
cwtl
bound
jmp
cmpsl
push
test
fsts
int
push
mov
cmp
push
xchg
rorb
dec
mov
sub
jnp
cmc
insb
mov
pop
leave
lea
sbb
rorb
cmp
jge
xor
insb
mov
nop
sbb
sub
cmp
sub
cmovnp
mov
mov
mov
and
outsl
push
cmp
sbb
or
push
xor
loopne
sub
xchg
shl
adc
sbb
mov
hlt
push
or
adc
jg
int
add
test
mov
sti
outsb
test
jp
ljmp
sbb
fbstp
xchg
cltd
mov
stos
loop
in
or
sbb
jns
and
or
xchg
inc
jp
mov
and
pop
mov
mov
xchg
dec
out
aas
test
pop
stc
movsl
dec
dec
mov
clc
aam
push
dec
lahf
gs
mov
mov
pop
ficomps
fs
insb
cld
pusha
push
xchg
sti
std
or
pop
insb
add
testb
push
pop
loope
and
mov
mov
mov
in
ret
sbbb
xor
sbb
and
rolb
push
or
imul
xlat
aam
orb
dec
loopne
xor
mov
jmp
jl
inc
push
jne
sbb
mov
stos
subb
imul
mov
inc
fisubl
pop
fs
lcall
pop
add
xlat
and
add
jns
xor
lret
and
mov
fisttpl
cs
cmpsb
fsubl
sub
popa
push
xchg
push
sti
push
add
jg
pusha
scas
push
and
ljmp
lret
testl
loope
popa
out
ret
add
push
imul
adcb
lea
in
ljmp
insl
bnd
add
or
mov
push
les
cvtpi2ps
mov
jnp
xor
push
js
daa
pop
js
in
xlat
mov
jg
lahf
rorl
or
repnz
cwtl
outsl
gs
dec
mov
ja
in
into
push
push
int
andl
shll
ret
in
outsl
pop
cmp
fwait
popf
mull
leave
adc
lret
dec
lahf
gs
and
mov
shrl
lcall
xchg
gs
bound
stc
or
cmp
sbb
adc
std
fidivl
call
aam
int
cld
enter
jb
int3
sub
xchg
or
ss
movsb
jmp
enter
faddl
fiadds
push
in
hlt
adc
fwait
test
stos
lahf
xchg
cmp
mov
ror
mov
jo
dec
xchg
ds
and
mov
cmp
imul
scas
clc
xchg
in
int
and
jns
push
cmp
push
mov
adc
pusha
out
adc
inc
push
cmp
adcb
iret
mov
scas
fldl
push
stos
nop
add
xor
enter
xchg
icebp
cmpl
scas
sbb
ret
dec
sub
movsl
mov
sbb
jae
mov
sub
jmp
dec
or
xchg
rsm
jp
mov
mov
popa
jp
xor
xchg
pop
incb
xor
in
lock
lret
lods
mov
call
xor
adc
cs
and
sub
aas
aad
in
mov
xchg
pop
and
pop
inc
mov
test
loope
int
dec
push
push
and
mov
fdivrs
xchg
cmp
pop
cmpsb
ds
cmp
ret
iret
sub
add
xchg
ljmp
and
push
clc
pop
cld
out
xchg
mov
fildll
notb
addl
rcrl
sbb
or
vpshuflw
and
test
repnz
push
ret
cmp
jecxz
cld
cmp
lahf
mov
mov
enter
ljmp
inc
xor
pop
pop
xchg
sbb
loopne
cwtl
test
fcomps
cmp
mov
add
jge
fisttpl
aas
rcrb
push
pop
cmpl
fcomip
pop
or
mov
pusha
and
movsb
aam
aas
adc
cmp
pop
sbb
fisubs
cld
mov
in
dec
jg
mov
imulb
inc
mov
hlt
xor
in
jmp
int
xchg
cmpsl
mov
cld
or
rcl
imul
pop
dec
mov
setb
gs
push
dec
arpl
adc
lcall
xor
push
fstp
dec
jp
lods
je
loopne
dec
cwtl
or
xor
movsl
addr16
movsl
ljmp
daa
hlt
into
scas
es
xor
das
out
xchg
lahf
enter
hlt
out
xchg
cli
and
stos
jge
push
mov
mov
outsb
shl
cmpsl
jns
stc
xor
pushf
bound
mov
popa
pop
enter
je
dec
ljmp
dec
jecxz
mov
je
sbb
hlt
std
sub
or
xchg
sbb
ret
sbbl
scas
bswap
sahf
jecxz
rolb
push
sbb
adc
push
imul
fwait
dec
add
jle
sbb
test
jp
push
in
push
xor
inc
ret
and
outsl
dec
push
in
jle
sti
sbb
cmp
sarl
mov
aaa
sub
xorb
repz
hlt
dec
imul
adc
mov
sbb
enter
pminsw
push
sbb
addr16
mov
rcrl
add
lea
lods
mov
mov
mov
or
pop
sub
loopne
xor
loopne
pop
pop
out
pusha
jle
cld
int3
loop
inc
mov
outsb
jmp
add
fimuls
mov
aam
xchg
ja
leave
cmp
or
add
cwtl
adc
rorb
aad
xor
ret
lcall
jg
and
pop
stc
push
or
mov
jae
pop
or
pop
mov
dec
pop
or
xor
test
fcompl
stos
or
push
orl
inc
dec
adc
out
xor
and
add
rorb
xor
and
jae
mov
adc
jb
add
nop
cld
push
imulb
fdivl
arpl
xor
sbb
adc
push
push
idiv
ljmp
pop
test
fucom
nop
pusha
xchg
lret
hlt
sarb
push
mov
jbe
sub
divb
popf
mov
cmp
ds
mov
push
out
cmp
inc
lcall
pop
das
in
xor
shll
dec
or
arpl
dec
inc
movsl
aad
inc
cmp
out
iret
aas
movsb
pop
cmp
xor
adc
in
ret
cs
call
ror
push
clc
mov
imul
les
and
mov
pop
pusha
mov
jge
mov
lret
clc
jl
inc
xor
aad
sub
add
jbe
mov
ss
xchg
and
arpl
and
sbbb
mov
jmp
or
cmc
cld
pop
sub
leave
push
mov
in
mov
or
adc
pushf
push
sub
xor
xchg
sub
ret
scas
insb
out
movsb
stos
mov
xchg
mov
xor
ds
jmp
movsl
sbb
sbb
je
cmpb
xchg
push
fcmovbe
jp
rorb
mov
call
jno
lret
stc
test
lret
sub
jo
and
mov
call
mov
mov
mov
out
rolb
lock
sti
cltd
cmp
scas
insl
js
cmp
bound
xchg
test
mov
int
lock
pop
sub
ss
filds
jmp
dec
mov
jp
rol
or
cmpsb
push
adc
xchg
fstpt
sub
add
lock
inc
daa
popa
in
mov
cmpsl
je
out
inc
dec
jmp
fisubl
mov
fimull
mov
push
sub
lcall
push
adc
icebp
clc
dec
insl
ret
or
scas
jbe
mov
int
ds
lock
cmp
and
out
jp
and
pop
mov
mov
mov
add
mov
shrl
sarb
fcom
ja
push
adc
aaa
imul
fs
add
popf
and
pop
mov
pushf
sub
in
insb
inc
xchg
fnstenv
icebp
inc
mov
inc
adc
push
test
jo
imul
add
aaa
mov
adc
leave
or
scas
movsl
mov
inc
xlat
testb
clc
push
movsb
cli
test
clc
mov
sub
inc
sarb
outsl
sbb
push
xor
sarb
jp
stos
sub
sub
loope
jmp
nop
sub
inc
int3
xchg
push
mov
ret
aas
xchg
ret
scas
pushf
push
fiadds
xor
int3
push
std
sarb
imul
jo
aas
pop
insl
mov
inc
or
aaa
outsl
fdivrl
cmc
inc
nop
addr16
add
js
dec
mov
xor
movl
sarb
push
cli
pop
add
adc
xchg
mov
aaa
sbbb
fmuls
addr16
push
and
outsb
pop
sbb
mov
xor
arpl
or
test
mov
mov
cmp
fbld
mov
or
cmpsb
cwtl
cld
xchg
shll
enter
scas
push
lea
inc
xor
mov
aaa
out
gs
daa
mov
xor
pop
mov
pop
pop
pop
pop
les
notl
test
push
xchg
test
lock
dec
sbb
and
arpl
loopne
sbb
dec
pop
insl
sahf
push
gs
and
mov
nop
into
mov
pop
orl
lods
xchg
dec
push
andl
mov
addr16
inc
movsb
je
jno
or
ss
pop
loope
pusha
sub
in
push
mov
mov
icebp
sbb
or
divb
idiv
shr
xchg
fcoms
jmp
dec
dec
mov
sbb
push
sbb
daa
mov
add
fs
xor
cwtl
shrl
pop
push
cld
push
int
inc
add
insb
out
insl
hlt
ss
jecxz
insl
and
fnstenv
and
movsb
sub
sub
int
push
out
jle
enter
js
fldpi
movsl
mov
dec
xchg
jle
jecxz
repz
lods
call
shlb
xchg
std
sub
test
add
and
or
test
push
fisubrl
hlt
mov
cld
jle
mov
push
push
sbbl
push
sub
ds
sub
cmp
shlb
mov
cmp
mov
sub
je
push
int
push
adc
cmpsb
xor
clc
jle
imul
push
add
in
lods
adc
pop
mov
mov
or
int
test
xchg
jmp
and
adc
jno
fwait
adc
pop
adc
fnstsw
cmp
mov
outsb
dec
lret
jb
mov
fs
loopne
pop
add
test
ja
or
jno
enter
mov
pop
scas
jb
sub
sbb
push
into
je
adc
push
mov
mov
sahf
out
aam
jmp
cmovg
add
mov
xor
sub
mov
xchg
cmp
lds
pop
int
shlb
dec
adc
sub
sbb
mov
ljmp
sub
stos
sbb
sub
aam
xlat
xor
shrl
xchg
popf
cmp
cmp
push
xor
mov
jbe
sub
arpl
mov
mov
mov
hlt
cmpsl
loopne
push
enter
pop
fstpl
jmp
sbb
lods
sbb
sbb
enter
test
mov
dec
scas
cmp
cmpsb
push
in
dec
jo
aad
mov
inc
js
es
adc
stos
sahf
loop
sbb
test
push
sbb
xchg
movsb
and
in
shrl
rcrl
push
cmpl
dec
xlat
pop
mov
add
push
or
pop
lds
arpl
xchg
mov
ds
xchg
push
repz
pop
lahf
scas
sub
mov
push
cmc
xchg
lods
ret
addr16
dec
loop
dec
icebp
adc
ja
int3
sub
andb
push
pop
xchg
out
push
mov
mull
push
mov
mov
pop
adc
lods
sub
add
jae
dec
nop
fs
adc
and
jnp
jb
dec
push
xor
jae
cs
imull
add
jo
imul
mov
cwtl
int3
xorb
lcall
test
pop
lea
ds
not
and
dec
lea
out
fistpl
xor
mov
cmp
cmp
push
sbb
mov
inc
lods
jo
xor
ljmp
mov
push
hlt
dec
dec
es
jb
lock
cmpb
idivb
test
imul
inc
adcb
or
cld
mov
stos
ja
mov
negb
es
nop
sti
fidivrl
scas
es
mov
icebp
in
imul
jg
mov
aas
and
push
cld
push
icebp
loop
push
inc
lods
inc
jb
jbe
in
inc
push
adcb
leave
or
or
jle
sbbl
dec
sub
sbb
mov
inc
xchg
ds
add
cmp
addr16
adc
lock
into
mov
sub
pusha
sub
xchg
inc
out
vaddss
idivb
mov
add
cmp
cmp
xor
mov
add
in
int3
outsl
dec
mov
insb
mov
pop
jne
cmpl
loop
sub
mov
adc
out
jb
test
and
fs
ja
inc
jbe
inc
call
iret
adc
cmp
icebp
inc
ss
dec
lret
jg
and
xchg
jbe
outsl
shl
mov
inc
jbe
stc
clc
cmp
push
inc
push
or
dec
call
add
push
repnz
scas
sbb
insb
jnp
push
loope
push
stos
leave
mov
inc
fwait
pop
or
in
pop
outsl
fsubrl
cmp
and
pop
cs
jcxz
arpl
sbb
pop
push
xor
push
mov
aad
and
cmpsb
adc
pop
pop
nop
sbb
or
les
ja
xor
dec
mov
mov
mov
and
jae
sub
arpl
push
jns
pop
push
mov
lds
push
fldt
pop
or
lret
jp
xchg
fcoml
test
adc
loope
jmp
out
jbe
cmpsb
dec
movsb
sub
cli
add
inc
mov
mov
mov
testb
daa
les
mov
inc
cmp
mov
pop
and
inc
pusha
lret
cmc
fdivrp
lods
mov
inc
inc
push
or
test
cmp
inc
out
cmp
popf
cld
aas
adc
xor
cld
cmp
imul
or
pop
add
aad
adc
outsb
mov
or
jl
add
lcall
push
xchg
mov
adc
das
sbb
insl
sbb
pop
and
sbb
lret
out
dec
and
mov
inc
dec
jb
idivb
aad
rcll
lds
call
pop
push
not
mov
sbb
add
imul
addb
xchg
pop
mov
mov
jmp
ret
adc
mov
sbb
loopne
add
mov
cmc
mov
inc
cmp
cs
sahf
movsb
aaa
xor
push
repnz
data16
mov
push
xchg
int
push
cmp
cwtl
mov
push
test
xchg
and
jae
and
stc
push
inc
push
push
sub
fs
lret
aas
mov
mov
scas
xor
xchg
fbstp
adc
dec
shlb
cmpb
pop
imul
jmp
mov
cmpsl
xchg
dec
shrl
cmp
jp
mov
mov
push
fwait
leave
daa
pop
pop
sahf
js
pop
push
or
push
or
cli
push
cmp
decl
push
sbb
decb
or
cmp
ljmp
mov
loopne
ret
loop
adc
nop
popa
and
add
test
pop
mov
out
call
scas
rcrb
fsubs
iret
mov
scas
push
ja
push
mov
dec
mov
fs
scas
mov
push
mov
sub
sub
and
jo
xchg
decb
xchg
ret
shll
ljmp
mov
mov
xchg
hlt
adc
and
xor
int
mov
xchg
inc
or
xchg
adc
cmp
mov
push
hlt
test
adc
insb
inc
pop
aad
sbb
mov
pushf
pop
mov
sub
push
int3
cmp
xchg
ret
pop
jbe
mov
sub
aad
xlat
cltd
cmp
lcall
sub
xor
sbb
push
mov
mov
adc
pop
test
pop
push
dec
dec
lret
add
into
push
mov
test
add
addr16
scas
jg
data16
imulb
imul
dec
jmp
les
test
sbb
jns
sarl
add
arpl
insl
mov
imul
not
or
int
loope
mov
test
pop
jnp
lret
gs
xchg
daa
lds
fnstenv
mov
popa
loope
jg
jns
dec
test
addr16
jne
mov
loope
and
cmpsb
and
adc
pop
mov
xor
cmp
mov
push
imul
pop
mov
jo
cmp
or
sub
dec
push
xor
sti
fcomip
je
jecxz
stc
push
or
inc
xor
mov
es
sbb
lock
iret
adc
adc
scas
jecxz
and
xor
stos
pop
pop
cltd
arpl
es
add
loopne
xchg
or
addr16
xchg
mov
outsl
loop
push
push
insl
sbb
outsl
push
out
mov
adc
jge
cmp
mov
das
in
sbb
dec
xlat
pop
adc
add
add
inc
mov
lret
fistpl
sub
mov
and
ja
aam
sbb
data16
jno
arpl
outsb
dec
cmp
das
repz
cmpb
pop
pop
out
mov
sbb
jne
mov
inc
push
fcoml
ret
sbb
xor
add
dec
add
rclb
fistpl
mov
xor
xchg
xchg
pushf
fs
xor
xchg
push
pop
mov
in
in
dec
sub
adc
popf
js
lock
mov
aad
mov
sub
xor
daa
xchg
repz
push
mov
or
mov
incb
aas
or
stos
mov
sbb
sti
xor
fwait
cltd
das
mov
push
pop
mov
push
ret
cmpsl
clc
shll
test
lahf
sbb
or
les
das
xor
int
jne
aas
or
decb
jbe
inc
mov
mov
jp
enter
jmp
nop
pop
adc
aas
mov
call
xchg
scas
test
imul
pop
lock
push
xor
fs
test
inc
je
xchg
iret
mul
jl
inc
pop
mov
xchg
test
cmp
into
or
out
ret
clc
mov
push
sbb
xchg
addl
xor
sub
mov
jle
cmp
adc
or
in
push
dec
test
movsl
xor
insl
repz
sarl
stc
js
adc
push
ljmp
adc
xchg
loopne
mov
mov
cs
dec
gs
inc
in
mov
jmp
into
dec
imul
clc
mov
movsl
push
insl
push
outsl
xchg
mov
sbb
es
sbb
xchg
jg
push
movsl
jp
lds
jge
or
mov
push
pop
sub
add
insl
sub
xlat
je
testl
dec
mov
sub
es
cmp
jnp
fldl
hlt
inc
mov
lahf
mov
lods
das
mov
or
and
jg
pop
cs
pop
xor
aam
xchg
mov
push
scas
dec
dec
insl
popf
pushf
out
push
jle
je
add
in
stc
cs
xchg
fbstp
aaa
push
outsb
test
insb
icebp
movb
push
and
inc
jecxz
jo
test
adc
in
dec
iret
adc
dec
sbb
cli
jo
rcrb
add
and
aas
sbb
in
sub
mov
jle
cld
clc
mov
das
mulb
inc
sbb
cmp
int3
test
push
in
push
mov
test
not
mov
mov
daa
and
push
mov
out
je
pop
clc
mov
je
pop
test
cs
stos
and
lret
lock
arpl
mov
push
pop
das
jne
xor
sbb
mov
push
pop
mov
out
mov
mov
inc
lret
sarl
pop
push
je
int
aas
mov
xchg
and
cs
lahf
or
xchg
pop
push
pop
xchg
and
dec
popf
sub
loop
mov
and
cmc
decl
ljmp
xor
adc
mov
lds
rcl
push
mov
dec
jl
mov
repnz
push
fcompl
mov
popf
packuswb
push
push
cmp
dec
mov
push
sbb
adc
popa
lcall
pop
xor
or
mov
loopne
mov
sti
test
cld
out
push
addr16
sbb
sbb
add
rcrl
adc
jecxz
jbe
mov
aam
insl
cltd
fsubs
adc
mov
lock
mov
jno
sub
or
mov
jnp
cmp
pusha
jp
inc
xchg
jp
in
lret
pop
lret
stc
cmpl
test
pusha
jg
xchg
mov
cltd
mov
gs
cs
mov
lret
xor
iret
rcrl
pusha
push
sarb
fdivrl
jnp
xor
lds
icebp
in
sbb
inc
mov
lods
dec
xor
test
xchg
dec
outsw
out
es
mov
cmp
das
and
fisubs
aas
xor
lret
xchg
popa
daa
mov
ljmp
pop
sbb
or
mov
int3
or
xchg
sahf
lea
test
sub
mov
in
mov
push
fstl
loope
cwtl
xchg
pop
mov
ss
movsb
iret
adc
push
mov
mov
subl
push
addr16
data16
add
std
xchg
jmp
add
std
rcll
popl
test
lcall
je
xchg
push
jb
jg
xchg
inc
xchg
push
cwtl
cmpb
and
je
shlb
decb
call
mov
scas
cmp
and
data16
inc
ja
pop
pop
adcl
sahf
lcall
sbbl
cli
dec
and
lcall
mov
mov
add
bound
jl
xor
xchg
scas
fxch
xchg
adc
shrl
xchg
sbb
add
xchg
por
cmp
out
mov
arpl
dec
dec
stos
out
pop
bound
cmp
sub
inc
cmpb
hlt
shll
fistpll
mov
push
cld
xor
cmp
jns
cmp
pop
movsb
je
mov
mov
xor
xor
adc
mov
xorb
jge
mov
ret
xchg
pop
rcrb
jecxz
lock
cmp
leave
sub
ds
mov
out
mov
sub
inc
mull
mov
hlt
popf
or
xchg
scas
adc
add
push
inc
mov
mov
shlb
lock
push
mov
movsb
outsl
add
jnp
push
mov
decb
vpunpckhqdq
pop
pusha
andb
out
pushf
adc
jmp
push
aam
jo
or
adcl
push
pusha
xlat
jae
cli
jl
out
push
daa
inc
xchg
mov
dec
push
cld
in
idivl
fwait
rcrl
or
xchg
cmp
shlb
fnstcw
or
adc
dec
cld
and
inc
xor
sti
stos
lea
notl
cmp
add
adc
push
aad
loop
mov
repz
popf
mov
pop
rolb
or
mov
pop
ljmp
pop
cmp
push
adc
lods
fdivrp
dec
mov
or
mov
xchg
xor
pop
pop
jbe
xor
dec
imul
adc
jbe
popa
jnp
push
shlb
cmp
mov
pop
fmuls
bswap
pop
mov
mov
xor
aad
or
cmc
cld
ds
xchg
or
sbb
jmp
subl
sub
data16
aaa
in
mov
mov
or
stos
or
ret
add
pop
outsb
push
pushf
dec
test
sbb
mov
cmp
cs
xor
inc
inc
push
jne
arpl
call
xor
popa
dec
int
xor
fcomps
int3
pop
stos
push
loop
sahf
inc
adc
bound
fidivl
adc
out
sarl
imul
mov
add
pop
jb
ja
push
mov
mov
jecxz
adc
nop
pmaxub
mov
icebp
daa
jae
and
xor
aam
dec
loope
push
cmpsb
testl
loopne
aad
and
mov
inc
les
add
push
cwtl
mov
popa
xchg
inc
nop
pop
bound
add
sub
call
xchg
sahf
and
mov
lds
mov
xor
pop
jle
add
mov
mov
aaa
push
jmp
and
sub
iret
push
scas
mov
jne
xor
pusha
rcrb
lods
pop
dec
pop
nop
jnp
adc
inc
inc
or
lods
mov
inc
int3
xchg
stos
lock
or
sbbb
jecxz
inc
into
insl
movsl
jmp
out
mov
dec
stc
ficompl
mov
xchg
les
pop
add
dec
dec
add
je
adc
daa
in
flds
inc
lds
stc
mov
mov
shrl
mov
sbb
popl
or
imul
ret
jp
xchg
ds
popf
cld
iret
xchg
lea
test
xchg
push
ret
mov
or
in
test
xchg
sub
dec
nop
sub
adc
xor
pop
or
and
rorb
push
cmpsl
in
and
inc
jae
test
rcrl
rcr
or
jmp
subl
imul
scas
dec
jae
int
pop
ljmp
and
pushf
push
mov
mov
adc
outsw
xchg
mov
xchg
inc
icebp
mov
pop
stc
iret
ss
cmpsb
out
push
adc
imul
push
fildll
mov
dec
int3
ret
sahf
cmp
mulb
cltd
ljmp
sbb
ss
shll
xlat
inc
popa
mov
test
mov
adc
sbb
icebp
sarl
test
arpl
call
nop
out
mov
cmp
gs
pusha
ja,pn
out
repnz
dec
mov
sbb
and
jne
in
mov
lods
rol
addr16
cmpsl
lret
mov
repnz
jmp
add
pop
jo
in
punpckhwd
push
add
gs
jmp
pop
xor
insl
dec
mov
call
xorl
imull
lea
sbb
les
repz
mov
cs
ljmp
or
cmc
jbe
jge
jbe
lcall
in
push
ss
orl
jnp
mov
adc
and
stos
xchg
and
pusha
incb
insb
xchg
push
out
loope
mulb
inc
push
mov
test
add
mov
and
in
fcompl
call
ja
outsb
lcall
ljmp
daa
jmp
div
sub
call
xchg
cs
add
sub
xchg
or
jne
xor
mov
clc
es
pop
mov
lcall
in
imul
add
add
in
xor
mov
movsb
inc
jl
xor
cmp
hlt
iret
sub
pop
push
cmpsl
inc
xor
rolb
add
fists
jl
xor
imul
jmp
aad
and
jmp
or
pop
mov
jge
jl
test
das
int
mov
mov
jp
inc
iret
lods
mov
enter
fdivrs
and
sbb
jne
in
repnz
xor
jmp
scas
sahf
stc
mov
and
push
sbb
inc
lahf
mov
hlt
aas
pop
cmc
mov
or
jp
and
sarl
mov
lea
ret
adc
jg
das
mov
push
mov
xchg
call
mov
pop
dec
mov
cmp
sbb
divl
xchg
add
mov
push
rcrl
dec
cmp
xlat
in
dec
push
xor
inc
enter
pop
xor
loope
mov
cs
mov
nop
rcl
pop
das
jecxz
fnsave
aam
js
push
ss
inc
adc
pushf
enter
jo
mov
add
sub
aaa
mov
push
shrb
cltd
add
mov
in
shrb
dec
pusha
mov
sbb
xchg
ljmp
dec
mov
repnz
sbb
xchg
adc
aaa
mov
bound
jns
ljmp
scas
imul
or
mov
sahf
scas
sbb
push
jg
fcoml
cmp
push
xor
mov
jbe
push
fcmovbe
daa
or
pushf
arpl
cltd
nop
push
in
sbb
pop
and
lret
test
insb
mov
xor
test
sbb
xchg
idivb
xor
movsb
push
mov
sti
mull
adc
outsb
xchg
mov
lock
imul
adc
pop
in
loop
mov
lds
cmpsb
xor
mov
mov
mov
push
mov
aaa
out
pusha
xor
push
outsl
adc
pusha
aam
mov
fldl
jno
repnz
push
mov
adcl
andl
jbe
fildl
push
in
je
or
sbb
mov
jg
insl
inc
push
mov
pop
fistpl
shll
mov
vpunpcklbw
sbb
jo
leave
jle
arpl
in
imul
incb
jno
jmp
lcall
movsb
xchg
enter
mov
inc
or
fisttpll
xchg
rorl
add
mov
adc
dec
flds
xchg
xchg
xchg
imul
mov
jp
bound
outsl
imul
jle
out
ljmp
lods
fimull
sbb
daa
stc
lret
mov
push
enter
add
fst
popf
fdivs
lret
dec
or
test
mov
test
shl
mov
or
jmp
outsl
daa
loopne
or
js
popa
mov
out
idiv
ret
xor
push
lea
push
sahf
sti
mov
nop
pop
dec
dec
mov
mov
push
iret
jb
cs
dec
jecxz
push
and
mov
fdivrs
adc
ficoms
dec
daa
jne
add
aaa
xor
adc
sub
jecxz
adc
jns
repnz
mov
mov
cmp
jmp
xor
lea
jb
insl
shlb
pushf
lcall
mov
int3
into
xchg
pop
aam
mov
pop
clc
shr
push
sar
jne
int
data16
xchg
outsl
adc
mov
push
dec
inc
xchg
mov
stos
add
mov
inc
adc
or
ret
test
pop
daa
xor
daa
add
inc
xchg
adc
test
outsl
clc
mov
sbb
cmpsl
and
mov
mulb
leave
enter
ret
push
repz
push
sub
loop
pop
push
movsl
movsb
pop
addb
mov
jmp
cwtl
outsb
fmull
je
pop
pusha
pop
sub
push
xchg
xchg
fmuls
pop
xor
mov
jno
popf
out
movl
cltd
jns
mov
in
pop
fsubr
fdivs
sbb
and
lcall
pop
sarl
lret
cmpsb
adc
out
rcrl
loop
lods
rcll
xlat
sti
sub
fsubrl
into
movsl
inc
and
mov
dec
cs
cmpl
add
sub
or
adc
sub
mov
mov
mov
cwtl
xor
pop
sarl
es
add
add
rcll
in
repnz
nop
imul
movsl
pop
xchg
idivl
movsb
xchg
adcl
xchg
nop
pop
mov
jbe
push
iret
and
std
inc
dec
add
imul
cmpb
mov
pop
hlt
and
mov
insl
push
scas
unpckhps
sub
lret
bnd
xor
xor
dec
adc
adc
mov
sub
dec
xor
sti
push
pop
jb
out
adc
and
jns
add
aaa
inc
imul
movsl
mov
inc
mov
cmpb
cmp
inc
imul
dec
imul
scas
aaa
and
lds
into
dec
sbb
push
push
or
xor
push
loopne
in
popl
outsl
xchg
les
adc
insl
jne
and
in
push
test
xorb
sbb
xor
and
or
add
fld
insl
cs
hlt
pusha
popf
sbb
mov
repz
add
fs
or
mov
imul
xchg
add
dec
stos
push
and
fnstsw
int3
jns
mov
das
or
adc
out
sub
stos
pop
aaa
xchg
inc
xchg
sbb
addr16
mov
mov
xor
lahf
insb
repz
cmc
sarb
push
rcrl
nop
addr16
lret
and
sbb
sub
add
ss
sahf
rorl
mov
dec
cmpsl
sub
pop
rcl
out
clc
mov
int
xchg
push
adcl
cmp
imul
fwait
push
ret
call
shlb
data16
negb
bound
xchg
mov
xchg
into
push
loopne
push
rcrb
pusha
shrb
cs
shlb
mov
cmpsb
mov
pusha
stc
lds
add
int
push
fildll
aas
jl
fwait
xor
in
fldl
lcall
mov
sub
xchg
mov
dec
fnstcw
jge
loope
cmp
cmpsl
lods
xor
ret
shll
call
push
jae
push
cmp
out
or
cmp
es
js
mov
cmp
sbb
xchg
jns
imulb
mov
nop
push
lahf
fistpl
xchg
add
add
push
mov
ror
cs
out
ds
repz
lea
fs
xchg
iret
movsb
cmpsb
xor
sbb
push
mul
cltd
xchg
sbb
xchg
jecxz
cmpsb
int3
out
lret
push
sub
adc
enter
out
fisubrs
inc
lahf
pushf
ret
out
flds
and
addb
cmp
inc
in
or
jb
add
xchg
lea
popa
lret
add
sub
dec
xor
in
sahf
rorl
orl
mov
lcall
pop
mov
cli
pop
jecxz
out
lcall
lods
imul
lret
jae
in
mov
icebp
js
lods
test
mov
inc
push
add
xor
xchg
and
stc
pop
xor
and
cmpsl
out
ret
mov
push
out
xchg
xor
sub
lods
fidivs
jmp
in
jns
jns
movsb
cmp
pop
sub
hlt
dec
dec
xor
hlt
xlat
cld
cwtl
jle
xchg
ljmp
mov
pop
cmpsl
enter
movsb
fldl2e
sbb
cmp
sub
mov
shrb
test
xchg
icebp
mov
adc
push
lock
mov
push
mov
pop
popa
movsl
xchg
sbb
aaa
sbb
adcb
sub
mov
add
fists
aas
in
xchg
enter
push
stos
sbb
fs
cmpsl
add
aaa
mov
cmp
daa
ss
bound
push
adc
cmpsb
fs
out
fadds
lods
add
pop
ret
test
dec
xchg
sub
repnz
sub
inc
out
push
mov
outsb
dec
xor
iret
test
mov
or
mov
out
add
xor
xor
lret
mov
filds
inc
push
shld
fadds
and
push
leave
jne
push
mov
ret
cli
jne
push
xlat
shll
and
in
add
pop
imul
adc
pop
enter
les
push
push
fimull
fmul
push
jne
adc
or
inc
add
mov
adc
adc
mov
sti
roll
ja
sub
add
sub
mov
ss
xchg
ja
push
imul
dec
or
repz
sahf
cmp
aam
sbb
rorb
fwait
dec
out
jno
in
sub
jbe
inc
add
fstpl
outsl
pop
repz
lret
cmp
sub
shl
incl
mov
dec
daa
mov
call
ss
out
fnstsw
divl
mov
cmp
xchg
daa
sbb
test
jno
mov
and
push
push
daa
dec
imul
bound
push
and
scas
add
sti
lret
gs
enter
add
popa
mov
xor
popf
inc
adc
pop
repnz
sub
and
pop
mov
push
lret
sbb
adc
mov
cmpsb
mov
jnp
lahf
dec
mov
adc
loope
push
jnp
mov
sub
pop
or
in
xor
sbb
inc
pop
pand
mov
scas
pop
adc
addr16
cltd
cmp
xchg
dec
stc
pop
divb
test
adc
add
mov
cmp
sub
scas
lret
imul
jp
push
pop
pop
jae
test
shrb
ret
mov
and
push
insb
push
daa
cmp
xchg
outsl
aam
call
fs
cld
or
les
mov
mov
mov
adc
xchg
mov
repz
jno
loopne
mov
bound
ljmp
inc
mov
incl
cwtl
cmp
shr
mov
lods
push
aad
sbb
jg
xorl
xchg
or
out
rcrl
and
ret
push
fmul
push
or
insl
sub
xchg
xor
jmp
pop
test
lcall
subb
pmullw
sarl
addr16
imul
sbb
sub
lahf
mov
cli
mov
cwtl
push
mov
xor
loopne
dec
mov
out
fxch
sub
cld
fcmove
pushf
jns
push
sarl
push
jl
fs
fcomps
in
hlt
les
fs
sbb
pop
dec
aam
mov
jmp
mov
mov
shlb
addr16
pop
pop
add
mov
jmp
clc
xor
das
or
push
pop
sarb
mov
movb
icebp
push
and
sub
inc
mov
sarb
pop
js
xchg
jo
mov
lods
inc
jge
sbb
enter
pop
test
cwtl
aad
test
out
stc
fstl
and
pop
lods
push
fimull
mov
and
cltd
aad
jmp
bound
in
pop
or
popl
cli
push
mov
jno
pusha
lods
shl
mov
dec
xor
scas
rolb
mov
mov
inc
call
mov
loop
inc
xchg
sub
push
lods
shll
and
adc
jmp
adc
pop
repz
dec
aas
mov
mov
xchg
loop
scas
dec
nop
jbe
adc
out
in
jno
cmpsb
dec
fadd
or
add
out
mov
xor
and
xchg
popa
pop
mov
ret
hlt
daa
test
outsb
cmp
sub
jp
lods
lds
ffreep
mov
shl
mov
dec
loope
xor
dec
inc
sbb
daa
xchg
test
xchg
mov
shlb
or
ds
movsb
xchg
jecxz
inc
je
and
shlb
les
test
inc
lea
in
xchg
out
jns
movsb
int3
pop
dec
inc
jo
mov
fistpll
addr16
outsb
add
ret
push
add
dec
pop
or
jmp
nop
popf
jge
push
addr16
in
adc
pop
lds
int3
in
clc
sahf
jmp
push
pop
add
jle
jno
inc
sbb
sbb
lea
or
jns
mov
scas
in
adc
imul
lcall
jge
je
sahf
lea
repnz
fwait
insb
xchg
sbb
daa
dec
loop
add
test
xchg
mov
outsl
dec
outsb
jnp
push
xor
and
push
sbb
into
ss
repnz
lret
or
jmp
incl
add
icebp
pusha
xchg
pop
cmp
mov
jb
cwtl
dec
xchg
and
mov
lods
jne
in
mov
cmp
add
add
pop
and
add
fildl
pushf
add
test
xchg
or
in
mov
dec
inc
subl
iret
pop
adc
pusha
push
jge
xchg
adc
xchg
jge
inc
inc
dec
jne
hlt
jecxz
jmp
sub
in
sahf
jo
insb
std
subb
movsb
mov
cmp
incb
psubusw
mov
insb
adc
adcb
pushf
mov
imul
and
xlat
leave
jne
neg
ret
cmovge
pusha
mov
scas
xchg
lods
push
pushf
sarl
jp
fisubrs
sbb
xchg
push
inc
pop
ljmp
rolb
cmp
xchg
imul
jns
fsts
add
pop
pop
sbb
stc
mov
js
push
clc
adc
pop
pop
pop
inc
inc
push
add
lods
outsb
mov
and
jbe
mov
jmp
push
inc
pop
rcrb
sbb
pushf
xchg
ficoml
xor
fldl
daa
in
add
mov
enter
jnp
leave
loop
or
xorl
je
pusha
add
adc
imul
jmp
out
in
jbe
and
push
mov
mov
imul
scas
xchg
ficompl
or
cmp
sbb
cmp
add
sbb
push
sbb
dec
xor
push
aad
sti
adc
push
ja
jno
pop
jecxz
xor
jmp
mov
stos
jge
fucomi
inc
cli
in
sahf
daa
insb
cmp
loop
adc
add
and
xor
adc
dec
ds
mov
outsb
mov
and
xchg
pop
dec
in
xor
lods
jp
inc
adc
pop
shll
clc
test
add
pop
shll
negl
cld
mov
xchg
test
arpl
aas
lea
push
dec
pop
inc
lahf
cmp
mov
scas
push
mov
repz
xchg
inc
inc
or
stos
movl
lret
sub
jge
inc
imull
cmpsl
jecxz
add
jo
xchg
gs
pop
imul
mov
enter
bound
enter
sub
movsl
mov
and
cmp
jge
xchg
loop
adc
adc
sbb
mov
xchg
or
mov
or
outsb
jbe
or
fistpl
xlat
push
lret
stc
sbb
mov
cmc
lcall
push
repnz
loop
jg
lret
xchg
fcoms
jecxz
gs
dec
push
imul
mov
cmp
cmp
mov
scas
mov
mov
mov
dec
pop
data16
cltd
out
stos
jno
jne
or
or
adc
xor
jne
and
push
jle
cmp
in
sbb
add
aaa
fs
push
outsb
sbb
and
cmp
sarl
into
ficompl
xor
pusha
testl
or
inc
daa
jnp
jmp
iret
div
pop
sub
pop
adc
or
adc
cltd
mov
mov
push
push
adc
bound
lods
cmp
divb
xor
int
ret
gs
mov
adc
aas
data16
adc
dec
lock
adcl
shrl
xor
xor
jb
jo
mov
cmp
ja
and
inc
xor
in
mov
ret
cmp
enter
add
cmp
dec
negl
sbb
dec
inc
iret
cs
push
jbe
dec
repnz
test
fstpt
jnp
or
fistpl
sbb
pop
scas
std
add
and
outsl
pop
push
imul
iret
les
aas
and
mov
ss
cmpsl
xchg
pop
push
or
sub
dec
sarb
mov
and
add
bound
cmc
sub
inc
mov
pop
incl
xchg
adc
jg
je
rcll
iret
movsl
loop
mov
ret
mov
dec
pushf
xor
shl
in
loope
in
xchg
xchg
xor
jmp
add
lcall
jg
mov
inc
mov
shrl
push
mov
mul
fs
fwait
push
ret
inc
int3
dec
cmpsb
cmp
cmp
jle
in
repz
jno,pt
push
int3
dec
adc
loop
pop
mov
popf
shll
adc
jp
and
paddusw
mov
stos
int3
xchg
jne
stos
lock
sbb
adc
aaa
xchg
inc
fildll
bound
mov
mov
pop
adc
loopne
and
xlat
jnp
xor
sbb
or
jge
test
imul
adc
mov
mov
repnz
dec
push
out
rorb
ja
outsl
dec
incb
shll
sbb
sti
and
push
mov
dec
fimuls
sbb
xor
inc
mov
lahf
sbb
dec
std
rcrb
rorb
adc
sti
insb
xor
jb
push
fcomps
rorb
mov
gs
xchg
add
inc
mov
mov
in
mov
cmp
push
adc
jge
test
pop
push
cmc
cmp
jno
rcrl
int3
lea
arpl
adc
mov
ret
aaa
jo
ljmp
rcrb
inc
xor
sbbl
loopne
out
jge
test
mov
mov
xor
clc
out
out
sub
daa
cmp
dec
or
mov
rcr
outsl
movsl
mov
cmp
xchg
int
mov
mov
mov
jmp
leave
ljmp
mov
ja
pop
js
adc
cli
sub
cmp
cli
repz
and
push
sub
mov
leave
jle
loop
int3
jge
je
ja
or
insb
xor
testl
popl
mov
and
xchg
popa
sbb
pop
shlb
inc
jno
idivl
cmp
aaa
out
cmpsb
jns
mov
ljmp
rclb
pop
jl
movsb
test
push
inc
mov
pop
nop
fwait
mov
and
shrb
add
push
vmulpd
push
mov
sub
repz
out
add
int3
les
pop
sbb
and
bound
cmpsl
adc
pop
outsb
lret
mov
mov
mov
addb
pop
dec
lock
outsb
in
imul
sbb
icebp
lea
lret
leave
ljmp
sti
xchg
sbb
in
add
faddl
js
mov
fsubrs
ud0
mov
mov
push
cwtl
push
imul
or
mov
ret
pop
ja
sbb
sbb
or
fiadds
jg
lock
jno
jb,pt
es
jl
ret
mov
popa
ret
push
pop
mov
iret
xchg
sbb
cmpsb
lcall
out
or
cmp
out
mov
sbb
loop
cmpsb
in
mov
pop
popa
cwtl
xlat
out
outsb
fbstp
cld
mov
lea
out
ja
enter
cmpsb
das
jno
pop
add
das
push
lahf
jae
das
pushf
in
call
js
push
mov
push
push
pop
lret
xchg
add
mov
repnz
inc
inc
dec
sub
ja
mov
push
mov
cmp
les
ja
fmul
inc
mov
mov
in
mov
sub
mov
fisubs
pop
test
rolb
dec
repz
mov
lods
pop
ljmp
mov
enter
dec
bound
cli
cmp
adc
mov
mov
test
inc
cmp
call
jle
mov
in
repnz
sbb
loope
lods
bound
cmp
lods
mov
dec
les
xchg
sahf
movsl
dec
mov
pop
mov
int3
dec
jmp
jl
sub
hlt
fbstp
lahf
cwtl
daa
cmp
mov
push
pop
lcall
decb
ds
imulb
and
jecxz
or
int
lcall
mul
inc
inc
imul
mov
std
movsb
cli
xor
push
pop
and
scas
xor
in
pop
mov
add
xchg
test
rcrl
icebp
mov
add
jmp
dec
adc
fstpt
cld
dec
mov
cwtl
pop
add
pop
dec
jno
loope
cmp
mov
jmp
inc
jge
pusha
scas
inc
add
fwait
sbb
loope
xchg
in
mov
in
inc
mov
ret
sub
les
mov
fs
pop
jno
jb
adc
xchg
lret
jp
in
mov
mov
rorb
lret
lahf
int
cwtl
xchg
push
sub
enter
fisubrs
sti
shlb
sub
and
negl
in
dec
in
stos
dec
mov
mov
push
lahf
add
sbb
and
sub
xchg
inc
je
push
lret
gs
pop
lods
aas
xchg
mov
pop
les
add
iret
repnz
add
xor
aas
dec
rcrb
imul
push
pop
test
mov
dec
nop
mov
push
add
jne
sub
mov
mov
sbb
push
mov
jg
jg
stos
xchg
pushf
addl
push
xchg
stos
gs
xchg
pop
mov
cli
pop
idivb
idiv
loope
arpl
vpmovm2d
cs
test
push
xchg
pop
pop
adc
jmp
add
or
fbld
sahf
adc
adc
shll
clc
jecxz
and
xor
push
out
insl
leave
add
or
xor
mov
push
fnstenv
push
xor
pop
movsb
pop
movsb
jnp
faddl
jb
add
or
out
jp
cmpsb
out
inc
sar
inc
jecxz
test
loope
ret
insl
xchg
into
stos
repz
fidivrl
push
lret
jo
lea
popf
or
sub
inc
aad
cmpsl
jb
cmp
mov
mov
in
es
mov
jl
jb
sbb
or
or
dec
xor
add
outsl
loope
pop
pop
dec
inc
adc
dec
adc
and
pop
mov
and
adc
pop
mov
repz
fwait
movsb
mov
push
rorb
pop
lods
loop
fadds
xor
stos
call
gs
cmp
cltd
mov
sub
movsb
sub
sub
cltd
jecxz
jbe
xchg
mov
and
dec
pop
lock
nop
loopne
fldlg2
inc
imul
sbb
or
mov
add
pop
pop
loope
sbb
js
jmp
sub
adc
cmp
sub
and
jp
fisttps
cmp
leave
enter
jl
loopne
cmpsl
and
adc
sbb
dec
sub
adc
pop
push
jg
mov
jge
mov
adc
mov
or
icebp
xchg
andb
out
je
jecxz
lods
cmp
push
addr16
movsb
imul
icebp
movsb
scas
and
fst
faddl
sbb
in
pop
mov
jne
pop
add
add
push
nop
outsb
pop
es
jne
pop
xchg
lock
or
dec
xor
or
xchg
add
sbb
inc
ljmp
scas
roll
int3
or
inc
in
push
stc
push
inc
fstps
mov
sub
ret
inc
pop
aam
push
jne
mov
adc
out
jmp
jbe
adc
inc
push
xchg
mov
imul
cmpl
aas
out
ljmp
int
xchg
jmp
inc
faddl
jmp
cld
inc
in
sbb
shr
jmp
xchg
int
scas
dec
sahf
in
sub
cmp
or
add
rcrb
iret
out
repz
add
je
ret
mov
add
mov
inc
insb
add
jl
insb
cwtl
mov
shrb
mov
fld
inc
xchg
push
test
cli
xor
sbb
adcl
fistps
lods
mov
push
in
pop
call
sbb
loop
pop
mov
xchg
lcall
xchg
popf
clc
fs
sbb
les
sub
fsubrs
sub
cmp
mov
push
xor
clc
jmp
cmp
bound
fwait
xor
in
imul
cltd
pop
aaa
xor
inc
and
ds
mov
inc
push
cmp
daa
dec
nop
mov
movl
cli
mov
push
mov
mov
cmp
cmc
mov
jg
loop
pushf
or
shr
jbe
clc
mov
fimull
loopne
inc
out
adc
test
xchg
jecxz
sub
sarb
xchg
call
test
mov
xor
sub
xor
lds
pop
or
add
xchg
stos
pop
add
jl
mov
push
sbb
pop
lcall
jne
jno
lret
push
mov
cltd
das
mov
leave
push
rcrl
sub
rorb
and
ljmp
int3
andb
clc
movsl
mov
adc
cwtl
jecxz
test
aaa
xorb
xchg
in
sbb
jmp
insb
and
adc
mov
jecxz
inc
aam
xchg
dec
jg
and
addr16
cld
push
inc
mov
dec
add
mov
lds
adc
shrb
push
sarb
int
mov
lock
or
xchg
fistpl
sbb
pop
int3
inc
push
movsl
lds
jp
in
cmp
sub
mov
xor
test
xchg
ljmp
mov
sub
add
fnstcw
out
in
enter
mov
sub
push
repnz
pop
fcoms
sub
mov
call
sbb
and
aas
sbb
sarb
add
rclb
repnz
xchg
and
cmp
push
outsl
fdivrl
mov
inc
in
das
or
jmp
cmp
push
shrl
out
and
out
pop
mov
pop
dec
cmp
cwtl
xor
mov
pop
daa
xor
xchg
push
adc
mov
clc
mov
mov
and
subl
cmp
xor
jb,pn
cmp
add
and
sbb
cmc
sub
out
daa
insb
je
outsl
lahf
inc
inc
or
inc
iret
mov
pop
push
jae
mov
lods
add
ljmp
scas
orl
fisubs
pop
mov
sbb
popa
mov
mov
inc
sahf
mov
cmp
inc
inc
inc
jp
data16
inc
lods
mov
adc
sar
es
jnp
mov
bound
filds
adc
pushf
das
jae
testl
ss
adc
pushf
xchg
ja
std
test
xchg
mov
aad
pop
xchg
or
xlat
or
xchg
insl
mov
pop
ds
or
cmp
mov
mov
cmp
enter
or
iret
push
and
mov
pop
stc
sbb
or
inc
hlt
lods
dec
and
test
shlb
les
sub
jae
hlt
daa
and
jb
in
shll
jne
sub
jecxz
fistpl
fidivs
inc
sbb
in
inc
xchg
out
leave
imul
mov
push
inc
hlt
pop
mov
fistps
sbbb
lahf
sub
push
aam
jg
pop
inc
xor
add
jns
pop
jns
mov
shl
mov
cltd
loopne
jno
andl
ret
add
lret
bound
mov
push
mov
in
mov
xchg
popf
call
nop
mov
and
push
adc
mov
lock
iret
pusha
xchg
and
test
xchg
xlat
push
jnp
mov
ret
sarb
sbb
aas
jge
leave
ficoml
xchg
mov
add
rcrb
jg
mov
test
jne
sub
shrb
int
adc
cmc
push
testb
loope
ja
sub
aad
dec
aaa
jb
cmp
int
iret
into
out
pop
adc
lahf
into
xchg
fimuls
lods
int
xchg
mov
cmp
ds
lret
es
dec
mov
xorl
ja
cmp
mov
das
and
shrb
cld
sarb
adc
int
sub
cmp
pop
dec
inc
xor
inc
rcl
out
stc
jg
mov
adc
push
jb
imul
imul
add
pop
rorl
repnz
adc
jo
mov
pop
dec
add
cli
jge
xchg
xor
jb
repz
ja
xchg
mov
pop
cmpl
cmpsl
lret
adc
ret
fisttpl
outsl
pop
and
sub
mov
cmp
mov
hlt
xchg
xchg
int
pop
mov
clc
or
mov
fdivrs
hlt
mov
test
fwait
gs
dec
sub
repnz
rclb
stos
add
ret
and
xor
mov
nop
mov
aam
outsl
mov
add
movsb
negl
dec
jnp
out
add
xchg
adc
fistpll
jp
out
inc
or
mov
std
neg
jb
leave
outsb
out
lret
mov
cmp
sbb
ret
rol
add
or
rolb
test
pop
stos
xor
cwtl
test
mov
daa
adc
gs
pushl
mov
sbb
fwait
out
add
testb
bound
out
mov
and
inc
ja
sbb
stos
pop
test
lock
shlb
fiadds
jp
out
jmp
rcrb
cli
cmpl
pop
and
jo
jle
mov
rcr
mov
xor
xchg
and
jle
ret
pop
js
cld
loope
movsl
fldt
gs
mov
out
shrb
or
sar
jle
inc
mov
lcall
cmp
ret
add
inc
dec
addb
sbb
mov
mov
sub
rcrl
repnz
xchg
jecxz
sbb
ja
je
push
js
mov
mov
shrb
push
ja
in
adc
gs
scas
into
mov
pop
adc
js
repnz
ljmp
add
decb
iret
test
jo
clc
popl
dec
adc
cltd
pop
jmp
notb
adc
dec
icebp
xchg
jmp
inc
mov
sub
push
adc
imul
add
enter
xor
jle
or
cltd
mov
pop
mov
push
pushf
out
mov
shlb
test
out
jne
add
jge
shl
adc
stc
push
mov
sarb
jmp
arpl
shl
mov
imul
out
mov
add
imul
lods
add
sub
cmc
or
mov
loopne
scas
leave
jne
cmc
ret
subb
mov
xor
push
inc
jo
mov
xor
das
addr16
dec
cs
insl
cli
mov
movsl
int3
stos
cmp
cld
pop
sub
subl
iret
dec
push
or
test
test
aam
mov
fdivrs
inc
hlt
fdivrl
dec
push
mov
out
call
pop
into
sbb
push
jmp
jb
mov
jmp
test
ss
mov
dec
sti
inc
and
sbb
repz
jne
mov
hlt
pop
push
stos
or
lret
mov
jmp
lret
mov
or
lahf
add
dec
and
fcos
lods
cmp
mov
movsb
lock
mov
leave
test
jno
jge
daa
pop
cs
inc
cs
flds
bound
cmp
pop
push
ret
mov
sub
xor
mov
push
clc
nop
sub
loopne
movsl
ficoml
fs
scas
xor
or
je
scas
aam
push
jae
faddl
sbb
ja
mov
dec
ret
jge
shll
mov
xchg
push
fsts
xchg
inc
push
cmp
bswap
mov
or
and
adc
lds
lds
and
push
addl
stc
imul
mov
out
out
sbb
xor
inc
mov
inc
cld
cmpsb
jecxz
aaa
add
ljmp
hlt
pushf
adc
daa
push
mov
xchg
inc
xchg
xor
ljmp
ja
add
mov
stos
in
enter
sbb
icebp
iret
jge
fistps
xchg
inc
cwtl
repz
ja
and
dec
push
pop
mov
mov
repnz
xor
negl
dec
adc
adc
imul
std
pop
out
cltd
jnp
or
repz
outsb
sbb
dec
pop
inc
inc
out
mov
sub
psrlw
xchg
ss
test
jno
mov
push
mov
pop
pushf
mov
in
std
imul
mov
xchg
fldcw
mov
mov
ljmp
inc
and
imul
cmpsb
sarl
js
cmp
mov
xor
and
inc
filds
dec
pusha
ljmp
orb
dec
pop
inc
ja
mov
mov
jne
cmpsl
cmp
adc
test
movsb
dec
in
insl
dec
pop
sub
arpl
jno
clc
aam
fcoml
and
iret
jle
sbb
iret
pcmpeqw
pop
mov
and
jns
aas
and
dec
lret
xchg
rcl
pop
inc
add
jne
mov
loopne
int
xchg
insl
adc
lcall
imull
or
cli
push
cmpsl
std
repnz
movsl
inc
cmp
jmp
jle
jge
mov
push
sbb
mov
push
xchg
fildl
add
mov
mov
jecxz
jbe
les
out
enter
negb
adc
js
adc
into
push
rep
aam
add
jle
lock
and
outsl
aaa
add
sub
push
or
cmp
dec
stc
add
mov
xchg
lea
push
mov
daa
or
jge
inc
mov
and
cmp
movsl
jae
stos
adc
test
loope
mov
loopne
in
test
das
shl
test
mov
test
xchg
jnp
mov
cltd
mov
pop
lret
pop
and
cmp
jg
arpl
das
and
ret
js
icebp
pop
lcall
js
fildl
cmpsl
sti
sub
lahf
mov
lret
repz
das
test
adc
std
aaa
sub
int
les
pushf
addl
leave
sbb
jge
sbb
aam
mov
cmp
shlb
dec
xor
jo
loop
inc
test
in
andl
icebp
dec
outsl
fldenv
xor
es
icebp
fs
scas
jg
sbb
inc
repz
ja
mov
pop
mov
sbb
xchg
out
inc
mov
icebp
daa
sbb
insb
movsl
lds
out
jb
adc
and
xchg
vpshaw
cmpsl
das
push
push
adcl
mov
pop
iret
out
clc
dec
cmp
imul
test
sbb
sbbb
insl
int
pop
jno
xchg
fcmovnu
orb
shl
cmp
mov
xchg
jnp
pop
mov
outsb
dec
mov
mov
in
xchg
push
mov
sbb
mov
fists
push
or
divl
test
xchg
jnp
fstpt
push
inc
pop
out
aaa
test
cmp
call
ljmp
dec
outsl
xchg
pop
jae
repnz
and
xchg
sub
dec
dec
mov
cmp
test
mov
mov
jbe
fcomip
aas
inc
popf
jne
sbb
inc
inc
negl
mov
cmpsb
mov
mov
mov
shrb
fidivrs
data16
inc
hlt
mov
dec
sub
jno
cmpsl
dec
cmpsb
cs
out
sbb
pusha
iret
and
xor
movsl
imul
xor
push
inc
clc
inc
ror
scas
jnp
fs
rcll
inc
test
push
mov
fsts
test
cmp
push
lahf
mov
mov
lcall
into
mov
sub
hlt
mov
lods
je
cmpsl
sub
cmpsb
lahf
outsb
mov
fs
mov
and
in
add
mov
pop
mov
inc
dec
xor
inc
mov
loope
shlb
cmp
leave
cmp
loopne
adc
decl
pop
es
and
xor
inc
add
movsl
and
mov
les
and
dec
sbb
in
mov
lock
cmp
rorb
dec
and
test
in
ljmp
je
and
ja
sub
mov
loop
jbe
and
enter
cmp
xor
movsl
xlat
fstpl
faddl
jecxz
xchg
lock
faddl
out
sbb
jl
xorb
sub
cmp
das
adc
les
cmp
pop
std
popa
jns
mov
jne
push
and
rclb
sub
mov
lahf
inc
mov
dec
cmpsl
mov
leave
dec
ss
cmp
inc
jge
sub
adc
lret
sbb
lahf
out
push
push
mov
mov
sbb
loope
and
adc
mov
sub
imul
mov
ja
push
inc
mov
mov
add
and
adcb
sbb
jae
scas
adc
sahf
add
mov
xlat
repz
scas
sbb
mov
mov
je
cmc
lea
loopne
xor
cmp
pop
cmp
addr16
popa
or
pop
iret
add
pop
adc
mov
daa
push
push
jnp
into
stos
loopne
bound
lods
icebp
fidivrl
pop
xchg
add
mov
or
jne
pop
xchg
nop
loopne
in
cld
cmp
shlb
pusha
adc
in
jb
xor
gs
and
xor
imul
sub
int
ja
pop
jb
nop
adc
push
inc
cwtl
push
lea
xor
push
mov
cmp
sbb
cmp
sbb
aad
data16
mov
add
push
cmpsl
les
sbb
cmpsb
in
pusha
test
gs
mov
push
cmpsl
nop
pop
push
sti
sub
cltd
mov
dec
mov
movsl
adc
int3
inc
xlat
dec
add
jle
push
pop
fs
push
mov
aas
or
jmp
sahf
xchg
inc
push
fdiv
dec
int
aam
out
mov
iret
pop
shlb
dec
mov
mov
add
enter
adc
xchg
jbe
jg
mov
fs
test
fisttpl
cs
sbb
sbb
xchg
outsb
gs
into
cli
lock
movl
xor
add
shll
dec
lea
mov
frstor
mov
jl
jl
sbb
sbb
xor
in
cmp
repz
inc
sarl
dec
sbb
stos
lds
pop
add
push
out
inc
in
lea
push
das
loop
hlt
lret
mov
xorb
pop
lcall
mov
xchg
jmp
outsl
xor
aaa
jg
dec
popf
jnp
mov
movsw
lahf
jmp
outsb
test
icebp
test
lea
iret
pop
jl
add
arpl
outsb
test
mov
inc
xlat
rol
jbe
jmp
xchg
cmp
mov
movsb
jl
or
xchg
aas
add
jmp
xchg
popf
adc
jmp
push
cmp
pop
push
mov
add
imul
bound
sub
push
lods
add
addl
jmp
fildll
mov
imul
aam
imul
ret
jle
rcrb
jnp
mov
inc
into
inc
dec
into
cld
ret
jne
out
cs
push
fdivrs
mov
rolb
fnstcw
push
pushf
pusha
call
outsb
ja
push
ret
and
jb
hlt
sub
int3
xchg
adc
lret
inc
das
jae
ffreep
icebp
or
xchg
mov
mov
outsb
test
nop
sti
adc
int
dec
mov
adc
jl
fdivrl
xadd
jle
xchg
sahf
repnz
adcb
mov
stos
inc
ss
outsl
xchg
loop
xchg
pop
jge
push
or
inc
xor
xor
cmp
mov
xor
push
or
imul
sar
mov
popa
adc
pop
ljmp
pusha
add
lods
jnp
mov
mov
data16
jb
jbe
sahf
pop
or
xor
out
dec
add
lret
shr
pop
call
repz
add
pop
xchg
fwait
cld
sub
mov
jecxz
or
btc
push
cmp
sbb
fwait
inc
add
and
std
jge
mov
jne
and
out
jne
cmp
pushf
mov
hlt
nop
adc
push
dec
outsb
mov
cld
mov
add
sub
adc
cmpsl
inc
cmp
negl
lods
dec
lock
cmp
movsb
jp
fisubl
das
in
pop
or
rcl
hlt
roll
sbb
pop
test
inc
xchg
mov
mov
sub
push
sub
dec
insl
rolb
rorl
inc
in
jae
lods
adc
shl
lea
xchg
aam
add
loope
popa
insb
adc
shlb
movsl
cmp
addr16
fisttpll
and
psubusw
push
pushf
arpl
loope
mov
aam
xchg
and
xchg
xor
jecxz,pn
push
test
aaa
inc
pop
xchg
in
outsb
push
xchg
cmpsl
cmp
jmp
rolb
add
inc
pop
out
jb
push
int3
and
cmpsl
pop
pusha
pop
xor
inc
add
adc
and
ror
jge
push
and
rol
adc
adc
rolb
out
pop
dec
js
fmull
sbb
popa
inc
adcb
pop
repnz
push
jnp
scas
fdivs
sbb
inc
iret
pop
or
call
int
cmp
test
vunpcklps
inc
jns
andb
aam
adc
mov
cs
out
aaa
std
push
icebp
addr16
ja
out
inc
fmull
sub
dec
jp
ret
dec
imul
adc
imul
mul
dec
lock
dec
or
xchg
mov
sbb
in
mov
iret
sbb
fs
int3
sbb
jmp
ds
jbe
data16
repz
mov
cmp
fwait
icebp
ljmp
es
cmpb
cmp
jne
lods
push
mov
dec
push
repz
add
cmpl
les
out
cmp
scas
cld
test
out
jns
mov
mov
bound
rcrl
int3
jmp
loop
testb
jne
or
add
sub
ja
sahf
cmp
mov
lods
loope
jbe
dec
lds
popa
scas
adc
mov
mov
push
subl
cs
mov
sarl
shl
fistps
cmp
mov
push
and
repnz
cmp
add
jmp
imul
jp
push
pop
or
adc
lcall
pop
lock
mov
cmp
lahf
out
xchg
pushf
xchg
shrl
sbb
or
jb
add
mov
mov
inc
sbb
clc
out
lahf
jae
fdivrl
lds
mov
sub
pop
mov
loopne
out
inc
xor
rcrb
stos
ss
mov
xor
in
ss
push
lock
push
rcrb
or
dec
mov
adc
xchg
loopne
xor
sbb
pop
adc
sqrtps
mov
pusha
scas
sub
mov
jno
push
cmp
inc
push
fwait
sbb
aaa
cmpsl
pop
adc
enter
aaa
pop
outsb
cmp
xchg
pop
pushf
mov
inc
leave
cmp
xor
dec
out
dec
xchg
ds
or
mov
or
gs
loop
adc
push
popf
sbb
mov
gs
push
sti
leave
insl
sub
push
ret
lret
push
mov
mov
cmc
xchg
dec
daa
push
int3
adc
xchg
or
shlb
in
loope
out
gs
hlt
lret
sbb
out
shrb
rolb
test
and
mov
popf
scas
bound
enter
add
adc
movsl
cld
sbb
adc
leave
in
lret
dec
pop
fsts
push
push
outsb
mov
sbb
pop
lea
xchg
sahf
push
sbb
test
sub
dec
mov
mov
jmp
xor
push
jae
out
mov
inc
or
jecxz
and
mov
icebp
push
lret
inc
adc
add
xor
or
push
out
iret
popf
imul
les
inc
hlt
lret
sub
clc
adc
pop
cwtl
mov
stos
push
mov
pop
test
ret
add
mov
sbb
ficoms
orl
dec
cvtps2pi
pop
pop
arpl
jbe
in
scas
push
test
dec
faddl
popa
xor
add
pop
into
hlt
dec
jbe
je
xchg
lea
movsb
in
add
mov
or
inc
sti
fcmovnu
pushf
xchg
in
ljmp
xchg
sbb
inc
jmp
repnz
pop
insl
inc
pop
sub
bound
adc
or
sbb
iret
call
hlt
fadds
pop
sbb
sbbl
test
int3
data16
adc
and
movb
aad
iret
std
pop
rorl
stos
cmpsb
cmpsb
dec
mov
jne
jnp
cmpl
push
xor
in
mov
mov
lods
clc
cmp
adc
fbld
lahf
cmpsb
pop
inc
xchg
jl
subps
fistps
push
pop
cmp
lcall
iret
push
orb
addl
shlb
sub
mov
and
pop
cmpsb
sbb
mov
out
mov
inc
fnstenv
sub
jmp
adc
pop
xchg
stos
xchg
std
test
jns
dec
dec
mov
sbb
divb
daa
popa
jno
aad
mov
cs
fsubp
jb
mov
mov
adc
pop
mov
and
jns
ljmp
mov
inc
pop
and
push
inc
mov
sbb
jge
lahf
adc
out
mov
mov
cmp
rolb
mov
inc
fistpll
das
outsl
inc
in
pushl
addr16
test
push
ja
pop
rcrl
push
jge
sbb
mov
std
xchg
shll
push
mul
push
test
psraw
data16
xlat
mov
mov
inc
mov
cmp
dec
inc
xor
pop
cmpl
inc
ss
jno
rclb
stos
mov
mov
int
or
pusha
xor
add
xchg
and
mov
call
stos
test
inc
pop
push
fbld
cmp
jns
or
pop
inc
push
dec
iret
ret
call
fistpll
dec
sbb
inc
icebp
mov
hlt
repz
inc
inc
and
bound
jae
adc
loopne
bound
faddl
loopne
stc
pop
xchg
ja
xchg
in
sub
or
cltd
es
test
jo
cmp
or
es
test
and
loop
ljmp
sbb
dec
pushf
movsl
mov
loop
lds
inc
cmp
dec
inc
xchg
sbb
subb
aas
adc
iret
sub
xor
scas
dec
lds
jp
mov
inc
mov
lahf
inc
jne
xor
sti
pop
popa
jg
ret
cmc
add
lcall
mov
fnstenv
cli
dec
mov
fidivrl
js
imul
orb
mov
pop
and
fucomip
sbb
dec
mov
adc
invd
push
jae
outsb
out
dec
xchg
push
sti
nop
aam
push
push
fwait
push
mov
incl
int3
mov
cs
add
mov
jne
call
orl
push
int
add
lret
addb
ljmp
push
and
fldcw
fmuls
lahf
out
sub
mov
iret
push
out
insb
sub
notl
ja
xor
jecxz
rclb
mov
or
popa
jmp
mov
jno
mov
or
sbb
bound
shl
stos
xchg
mov
sahf
and
je
adc
sub
clc
aaa
dec
andl
xchg
push
or
mov
dec
call
icebp
jb
ffree
or
js
mov
adc
add
popf
pop
ss
sbb
adc
xor
dec
pop
dec
xchg
pop
or
movb
fildl
loopne
mov
dec
lret
xor
adc
scas
test
xchg
dec
hlt
das
rcll
test
pop
das
dec
loop
xchg
cmp
outsb
scas
dec
cmp
aas
out
push
or
lods
gs
mov
cmp
test
xor
cmpl
icebp
pop
sahf
lea
or
adc
mov
icebp
dec
jle
or
fimuls
jnp
out
cmp
mov
lret
int
push
push
sar
cmpsb
mov
xor
fstpt
adc
mov
orb
mov
insb
xchg
aas
and
mov
xchg
jmp
mov
notl
int
cmp
push
sub
add
fcmovnb
sub
xlat
popa
or
sub
repnz
and
negl
xchg
pop
adc
mov
push
xor
inc
sbb
jne
and
sub
cli
jp
cmp
sbbb
mov
ret
andb
nop
lock
idivb
sbb
adc
cmp
push
lret
xchg
pop
mov
or
inc
cs
in
lods
or
add
inc
push
insb
sub
inc
fs
rcrb
jmp
aad
pop
mov
jl
cmp
fwait
arpl
sbb
insl
leave
sbb
cltd
mov
cmpsb
negb
sub
mov
shl
sub
stc
xor
cmp
inc
xchg
push
je
mov
call
out
pop
icebp
fstpt
sub
sub
push
push
sub
add
or
jge
dec
add
pop
lret
int3
ds
ds
cmp
adc
packssdw
xchg
sbb
pop
adc
lock
jno
xchg
mov
lds
xchg
pop
and
mov
fcomps
xchg
xlat
xor
loopne
sub
push
fs
jne
inc
rolb
inc
out
dec
push
xor
sub
jmp
mov
jecxz
nop
xor
or
test
sub
mov
adc
je
aas
jno
mov
imul
clc
push
orb
sub
popf
pushf
cltd
mov
test
imul
in
das
outsb
notl
or
shrb
jmp
out
xlat
ljmp
cltd
test
or
xchg
mov
mov
data16
fwait
jno
add
xchg
jle
push
in
mov
cmp
cmp
pusha
ror
xlat
and
mov
mov
iret
and
cmp
xor
or
jbe
mov
lods
inc
push
repz
push
pop
in
pop
sbb
mov
out
call
inc
mov
out
xorl
mov
lock
std
movsl
cmpl
leave
mov
and
sbb
adc
in
xchg
loop
xchg
pushf
sti
xchg
es
or
mov
adc
sub
ljmp
int3
les
mov
cmp
jae
mov
insb
xchg
aam
xchg
xchg
mov
xor
lret
stc
movaps
cs
lock
addb
les
inc
addr16
mov
add
mov
mov
push
adc
aas
leave
mov
stc
ret
outsb
cmp
loope
lea
movsb
mov
or
dec
outsl
xchg
or
cmp
call
daa
imul
cmp
arpl
push
cmp
lea
or
nop
sub
js
xor
push
lock
push
xchg
lcall
int
jle
jnp
dec
jl
pop
and
out
mov
repnz
fiaddl
cmp
jne
mov
test
lahf
lcall
jmp
loopne
sbb
test
out
popa
push
cmpsl
int
xor
test
jo
inc
mov
or
ret
jg
mov
loop
or
lock
push
and
sub
ja
dec
pop
adc
mov
mov
push
sub
add
shll
push
mov
sub
xchg
xor
cld
cmp
mov
outsl
shl
xor
mov
jbe
or
movsl
test
ret
mov
call
mov
push
mov
or
dec
fcmovnu
pop
push
or
jge
and
sub
jle
insb
inc
rcl
dec
cmp
mov
adc
ljmp
push
repz
xchg
xchg
mov
mov
fwait
mov
adc
imul
faddp
sbb
xchg
adc
jl
das
cmp
std
jp
xchg
jns
test
adc
test
sbb
das
lcall
mov
in
stc
pushf
push
in
cmp
in
iret
dec
cmp
xchg
sbb
xor
push
fldln2
shll
jle
jae
in
xchg
shr
orl
popf
cmp
xchg
in
jl
xor
jnp
pop
insb
jmp
ds
lcall
pusha
mov
loop
xchg
dec
sub
xchg
in
xor
cwtl
das
call
pop
jno
enter
inc
in
xor
and
jo
repz
scas
idivl
addl
cwtl
call
cmc
arpl
cmova
addb
and
inc
jnp
pop
aad
into
fcmovnbe
xchg
idivb
or
mov
push
push
mov
scas
mov
arpl
pop
test
in
jmp
adc
mov
fs
cmpsb
scas
cld
inc
jl
mov
xor
cmp
mov
cld
add
iret
dec
and
jno
lock
fldt
out
mov
or
rclb
or
mov
es
xchg
xchg
push
adc
add
jmp
mov
cwtl
fidivrl
lds
lods
xchg
movsb
movsl
pushf
sahf
loope
and
loop
mov
xor
lret
mov
mov
push
xchg
cmp
inc
inc
jae
popf
scas
out
cli
mov
fwait
xor
and
call
mov
sbb
sbb
cmp
cmp
orl
jmp
inc
pop
outsl
sub
outsl
sub
das
cmc
and
jno
xorb
rolb
push
mov
imul
rorl
mov
mov
in
push
insl
xchg
inc
jns
mov
movsl
aas
add
into
fwait
adc
mov
mov
testl
push
scas
xchg
cs
mov
ss
imul
dec
loop
jno
mov
add
iret
lods
into
add
xchg
adc
push
dec
mov
loop
lret
adc
sub
mov
cmp
push
push
fidivrl
outsl
push
pop
sbb
xchg
loop
jmp
sub
int
pop
adc
jno
aam
sahf
cmp
pop
mov
bound
lcall
mov
stos
shl
jp
psubusw
mov
mov
testb
push
jae
out
pop
clc
insb
test
test
movsl
or
jns,pt
addr16
ret
cs
mov
or
xchg
push
sbb
sub
sub
in
push
leave
inc
lods
outsb
pusha
xchg
insl
mov
enter
push
push
ds
arpl
adc
lock
push
sahf
sub
test
jmp
stos
movsb
imull
mov
ss
pop
rolb
fistpl
sub
jmp
shr
dec
dec
imul
push
in
out
sub
dec
cmp
mov
test
mov
fbstp
mov
insl
adc
aad
fistps
jne
and
inc
push
jb
pushf
pop
dec
dec
inc
add
out
mov
jp
mov
mov
pop
cld
nop
dec
in
sub
test
or
andb
lret
out
dec
imul
addl
xchg
mov
inc
inc
pushf
test
jle
testb
cmpsl
movsb
imul
add
cmp
xchg
arpl
pushf
mov
sub
cmpb
ljmp
leave
jecxz
inc
jp
scas
xor
jnp
jo
push
iret
push
cmp
addl
add
mov
mov
es
mov
sub
mov
mov
and
mov
xchg
push
cmp
js
into
out
icebp
testb
lcall
mov
scas
mov
je
cmpsl
xchg
mov
dec
rcrb
test
int3
test
fnstenv
push
adc
push
rolb
test
sub
lea
mov
out
lret
cmc
pop
sub
sahf
mov
jnp
sbbb
xor
nop
or
mov
dec
mov
popa
cmc
test
shrl
mov
cmpsl
imul
lahf
push
icebp
pop
dec
cmp
dec
nop
push
sbb
rcrb
mov
and
test
mov
sub
test
adc
push
dec
xchg
jnp
fadds
lods
dec
dec
add
mov
mov
mov
push
adc
dec
dec
pop
mov
fldcw
ret
jnp
rcrl
cli
jmp
sub
inc
loop
cmp
add
out
dec
stos
call
cmp
inc
cmp
sbb
cld
cmp
push
scas
mov
dec
mov
insl
ret
addl
imul
jmp
adc
stc
mov
adc
push
fstpl
sub
pop
sub
pop
xchg
rcll
loopne
fwait
jo
incl
mov
out
test
loope
shl
cltd
ss
or
scas
sub
mov
popl
cs
test
push
dec
mov
scas
cwtl
inc
mov
cli
jbe
or
push
inc
add
ds
xor
pop
iret
mov
arpl
push
in
or
sbb
sbb
jp
dec
in
jb
aaa
dec
adc
test
lcall
lahf
jle
idivl
pop
fmuls
mov
sbb
inc
out
lods
mov
mov
shrb
mov
or
pop
xlat
mov
jl
push
fsubs
cmp
das
mov
dec
xlat
cmp
roll
dec
cmp
pop
jl
sar
pop
mov
sbb
fisubs
mov
in
or
cltd
push
jmp
sub
mov
push
daa
or
hlt
cmp
or
cwtl
int
and
jmp
outsb
mov
sub
push
sbb
mov
xchg
pusha
in
stos
loop
fwait
xchg
lea
arpl
jp
cmpsl
inc
cmp
jns
add
pop
pop
stos
call
imul
lock
fstps
mov
js
ljmp
push
bound
sahf
stos
or
rorl
xor
andl
cmp
xor
pop
int
sbb
mov
mov
adc
out
divb
iret
fnsave
dec
scas
outsb
je
xor
push
dec
outsl
icebp
xchg
sahf
insl
xor
sbb
xchg
mov
outsb
jo
neg
mov
or
xor
lcall
cmp
pop
lea
pop
negl
bound
and
out
scas
sbbl
in
orl
xor
or
loop
outsl
mov
movsl
jp
or
sbb
mov
hlt
jno
push
clc
ret
call
sbb
and
mov
or
outsb
add
jecxz
roll
scas
bound
shrb
aaa
mov
cmp
mov
popa
push
test
pop
in
xor
sub
sbb
test
cs
rcl
imul
adc
in
clc
adc
inc
leave
enter
push
push
mov
aam
push
and
clc
pop
pop
push
inc
int3
loopne
je
out
dec
dec
scas
fwait
cmc
call
jmp
xor
adc
add
mov
dec
inc
adc
cltd
pop
sub
and
sbb
xor
sub
mov
call
imul
xchg
ja
aaa
rcll
add
cmp
pop
sub
inc
dec
push
mov
xor
and
arpl
aam
cs
fldpi
ret
jp
push
sahf
jae
mov
sub
lret
andl
or
pop
movsl
add
xchg
jbe
mov
and
scas
push
push
adc
or
mov
mov
lahf
cmp
int3
test
das
ljmp
mov
mov
es
cwtl
fnstenv
addr16
xor
shl
inc
dec
roll
fsubr
ret
mov
test
adc
pop
lret
outsb
mov
fildll
jg
and
add
jns
mov
jae
inc
lret
inc
add
cmpl
adc
jmp
pop
inc
add
fwait
jne
jecxz
jbe
mulb
mov
fsubrs
jbe
mov
jbe
movsb
clc
fisubrs
xchg
ja,pn
adc
push
nop
mov
clc
mov
int3
inc
mov
cld
lds
mov
mov
xchg
aam
mov
imul
stos
xlat
dec
sub
inc
push
lret
add
leave
cwtl
bnd
out
aaa
sbb
rcrl
fsubl
stos
pop
mov
cltd
jns
insl
and
push
sbb
fldl
pusha
iret
gs
int3
adc
and
xor
jg
sub
mull
lock
xchg
xchg
adc
int3
fcomip
movsb
add
fmuls
cmp
hlt
xor
ficompl
sbb
rclb
xchg
ss
sarb
fistps
or
adc
xchg
in
popf
add
hlt
adc
je
cmp
and
sbb
cmp
ljmp
fisttps
loope
and
jo
rcll
cmpl
jecxz
scas
shlb
fcoml
dec
lret
js
in
aam
or
mov
pushf
mov
jns
fld
push
xchg
lahf
andl
mov
sti
cwtl
ja
adc
adc
dec
mov
scas
ret
push
inc
in
xor
sub
icebp
push
outsl
mov
adc
add
js
pop
cmp
or
adc
ret
inc
in
xor
inc
ss
pop
xchg
enter
jns
lods
addb
rorb
out
mov
xchg
mov
jo
and
mov
mov
mov
daa
cmp
pop
movsl
jbe
movsb
or
cs
jge
mov
or
shr
mov
push
icebp
cwtl
testl
jnp
in
cld
sarl
int
stos
cmp
ret
jns
dec
mov
mov
and
xchg
cltd
out
test
add
stc
notl
and
mov
insb
pop
pop
pop
psraw
iret
jmp
mov
cmpsb
clc
sbb
xor
imul
push
mov
int
movsl
adc
push
lods
jbe
push
add
scas
adc
mov
cmpb
pop
test
outsl
add
lahf
incl
xorl
leave
js
mov
out
xlat
xchg
cltd
xchg
les
add
lahf
fidivl
push
fwait
xor
popa
ljmp
cmpsl
shlb
pushf
andl
add
in
cwtl
mov
fwait
bound
cmpsb
mov
xchg
mov
xchg
jo
mov
push
fimuls
push
pop
adc
mov
pop
dec
divl
loope
pop
dec
or
dec
sub
pop
pop
icebp
xchg
sbb
xor
mov
imul
int
lret
addb
cmc
pop
out
scas
test
and
jne
aad
inc
and
in
xchg
and
inc
mov
xchg
lds
in
pop
es
add
push
or
shlb
stc
cli
sub
xor
cld
pop
orl
mov
pop
jge
mov
jecxz
push
addr16
inc
inc
cwtl
adc
mov
repz
or
inc
and
add
jge
shll
js
xchg
notl
int
cmpsb
cli
pop
outsb
das
fwait
mov
mov
bound
mov
push
and
push
push
aad
aad
cld
out
insb
sbb
push
lods
or
stos
fisubs
add
lahf
xchg
dec
push
fstpt
and
pusha
test
push
push
sub
inc
jne
sub
stos
mov
sbb
add
adc
cltd
sub
or
xor
les
icebp
fidivs
cld
push
and
xchg
add
pop
pop
in
cmp
mov
push
push
xchg
adc
shlb
jbe
pop
clc
cmp
sahf
test
pop
fisubs
jge
inc
inc
mov
into
icebp
push
inc
mov
mov
notb
mov
mov
aad
incl
mov
pop
push
mov
fcoms
sbbl
lcall
push
cwtl
stos
fistpll
mov
push
dec
or
or
setl
jp
les
inc
pop
cmpsl
add
and
movsl
inc
push
and
push
ljmp
mov
xchg
push
mov
lcall
sti
inc
mov
jg
ljmp
cwtl
cmp
sahf
inc
notl
fstpl
jmp
or
gs
sbbl
test
jns
ljmp
jnp
mov
jae
cmp
mov
pop
sbb
ret
adc
lret
testl
je
mov
jecxz
push
inc
mov
sbb
dec
aam
xchg
and
cltd
jmp
mov
les
out
add
sbb
cmp
xchg
nop
lret
and
adc
fmuls
shl
fwait
in
int
adc
pushf
testl
int
int3
push
mov
xchg
and
sbb
mov
pop
enter
push
and
inc
sarl
rcl
aas
jns
and
xor
jg
js
inc
inc
dec
fiaddl
mov
into
mov
sbb
fucomp
div
mov
dec
loop
imul
push
js
sarl
cli
push
add
sub
cmp
pop
pushf
addr16
mov
or
push
and
and
cmp
cwtl
insb
int
push
dec
fs
je,pt
dec
mov
test
lods
and
push
cmc
enter
jns
adc
scas
inc
sub
pop
cltd
and
pop
jb
pushl
mov
push
jno
and
jae
mov
pushf
add
push
fmul
xchg
fildll
rolb
sub
lods
inc
xor
mov
mov
push
ds
jo
ljmp
daa
push
pushl
cmc
sbb
loope
sti
or
fwait
push
cmc
or
push
sbb
out
test
cmpsl
ss
mov
insl
adc
add
add
mov
and
and
iret
clc
adc
lds
or
lahf
insb
test
cli
add
xor
aaa
pop
sahf
rcrl
cmc
jnp
mov
xchg
iret
mov
iret
pop
mov
cltd
sub
push
lcall
stos
add
inc
push
std
cltd
and
sub
add
dec
mov
cmp
inc
js
idivl
push
cmp
test
out
dec
shlb
xchg
lret
push
mov
pop
movsl
mov
dec
dec
add
dec
add
dec
fimuls
iret
pop
pusha
mov
mov
test
add
sub
call
xchg
inc
popf
sub
andl
adc
jg
fildl
mov
mov
inc
sbb
repz
adc
adc
out
xchg
and
dec
mov
pop
aas
and
test
fists
xchg
push
js
sti
jo
repz
dec
cmp
popa
inc
mov
mov
dec
test
cwtl
pop
gs
cmpsl
cmpsb
stos
xor
xor
lods
lods
jb
xchg
fwait
cmpsb
inc
inc
xchg
imul
insb
jbe
adc
repnz
pop
push
enter
std
in
aam
dec
add
enter
pop
jae
xor
iret
add
lea
or
in
mov
loope
xor
cmpsl
int3
and
mov
mov
scas
enter
mov
jg
inc
and
or
lahf
js
jmp
std
inc
nop
ficoms
sbb
push
addb
stc
inc
test
jnp
call
sbb
enter
adc
les
and
jb
mov
inc
dec
and
imul
out
mov
clc
rcrl
jg
into
jnp
adc
mov
cmp
cli
push
fistpll
fstpt
loopne
push
cmp
in
subb
clc
lret
xchg
adc
lock
dec
leave
jge
mov
push
pop
push
and
fldenv
fisubl
pop
jp
sub
imul
std
xor
pop
add
sub
cs
dec
frstor
jmp
in
loop
arpl
data16
iret
mov
or
inc
inc
xchg
lret
imul
rorb
lret
mov
xchg
and
aad
xor
int
scas
push
mov
mov
jae
push
andl
adc
sbb
test
fdivl
fidivs
sysenter
jp
ds
inc
mov
cmc
fiadds
xor
xor
adc
dec
inc
adc
inc
add
inc
jns
sub
jne
inc
xor
jb
fs
jb
push
inc
push
pop
test
xchg
pop
jle
xor
aad
dec
ret
cmpl
mov
jmp
jmp
push
fnstenv
jno
shlb
and
test
push
dec
xchg
mov
repz
mov
add
adc
orb
mov
rorl
ja
clc
addb
outsl
test
test
sti
nop
in
adc
sbb
mov
lahf
sar
popa
es
sub
pushl
adc
add
sub
pop
pop
shrl
pop
sbb
xchg
xor
mov
sti
jp
fadds
pusha
scas
and
jo
stos
sub
lahf
das
jmp
test
add
and
push
push
xchg
icebp
insb
mov
mov
adc
sbb
push
cld
aam
xchg
inc
cld
mov
stos
gs
movsl
add
cmc
mov
ss
dec
push
sbb
les
lods
push
push
ret
into
xchg
sbb
inc
cmp
loopne
xor
dec
nop
mov
push
cltd
xchg
fildl
sti
stos
in
mov
btc
dec
cltd
jbe
es
in
das
sbbl
jge
int
push
aad
xchg
lods
fcom
push
adc
pop
jae
fsubr
jge
in
imul
xchg
aam
adc
pusha
test
inc
adc
popl
popa
fisttpl
call
mov
nop
sub
mov
fsubs
test
xor
push
testb
cmp
push
push
aaa
jne
sahf
add
lret
mov
je
mov
jae
xor
jle
out
and
add
pusha
insb
mov
xor
jne
mov
mov
or
les
scas
clc
loope
int3
dec
in
aam
add
mov
leave
addr16
and
mov
daa
push
dec
or
js,pt
sub
iret
pop
pop
in
clc
mov
loopne,pn
cmp
xchg
jo
dec
dec
inc
sub
aas
scas
lods
jge
sbb
inc
mov
outsb
sub
movsl
sbb
pop
cmp
xchg
outsl
popa
pop
mov
shl
adc
fldl
lea
mov
sbb
movl
mov
pop
inc
ret
psllw
add
mov
dec
add
pop
loopne
arpl
jge
fisubl
add
or
fsts
mov
in
xor
mov
adc
imul
rcrb
push
jne
daa
ss
pop
lods
pop
fsubr
push
xor
ret
sar
pop
and
mov
add
dec
jbe
cmp
stos
mov
xor
rcll
mov
test
add
xor
pusha
lds
add
xor
xchg
test
shlb
xchg
cmp
lret
cmp
push
into
pusha
stc
dec
adc
outsl
in
jle
test
xchg
in
fdiv
fisubrl
mov
popf
movsb
sbb
pop
lcall
mov
cmp
movsl
orb
sti
add
xor
add
push
stc
adc
or
sub
and
fistpl
cwtl
mov
cwtl
mov
lcall
daa
lcall
mov
mov
inc
outsl
lock
inc
iret
cmp
xor
sub
ret
lret
imul
xchg
pop
sahf
add
add
stos
pop
xchg
mov
mov
push
lcall
mov
clc
test
jmp
dec
or
xchg
insb
dec
ret
scas
test
pop
lods
push
mov
das
adc
lds
insb
xor
iret
lret
mov
and
jo
inc
jo
loopne
sbb
add
insl
xchg
or
je
jge
and
or
jne
xlat
and
jne
jecxz
jmp
test
lods
sbb
ja
xchg
je
rolb
ds
dec
lret
cld
movsl
pop
add
ret
xchg
decl
sbb
ljmp
lods
hlt
sub
mov
or
shll
cmp
fildl
insb
gs
push
out
jecxz
lods
xor
popf
iret
addr16
jmp
in
push
cmpsl
aam
push
mov
fwait
push
xchg
inc
fwait
ret
mov
fldlg2
test
add
cld
sub
sub
cmpsl
stc
lret
inc
cmpsb
push
jle
addr16
mov
sbb
sbb
test
outsl
xchg
xchg
jle
or
mov
cmp
in
inc
xlat
and
cs
adcl
test
popa
fisubrs
inc
dec
pop
pop
xor
call
inc
xchg
insl
dec
lahf
lock
xor
and
or
les
mov
lahf
das
loope
jbe
xcrypt-ctr
cmpsl
pop
xchg
movsb
xchg
std
leave
sti
dec
int3
fadds
or
push
push
mov
jg
sahf
sbb
or
popf
xchg
scas
fistpll
pop
in
or
xchg
add
scas
sti
or
nop
orb
mov
cmpsb
lods
sbb
lcall
idivb
rol
or
popa
enter
inc
leave
push
cmp
lods
cmp
jmp
repnz
hlt
jb
push
std
lock
pop
fdivrl
andb
adc
popf
dec
aad
popa
je
or
sub
pop
cli
pop
mov
ljmp
dec
sub
shl
push
mov
jp
push
adc
fisubrl
pop
ljmp
add
mov
add
mov
xchg
ror
or
test
loope
repz
out
fstps
xor
jno
ret
cmp
daa
popf
pop
xchg
add
adc
pushf
jle
sbb
jle
fwait
dec
mov
sub
mov
jecxz
fs
cmp
idivb
cld
inc
sarb
mov
mov
subl
out
fidivrs
cmp
mov
sbb
add
aas
adc
jbe
std
aam
pop
sbb
aas
dec
mov
sbb
out
add
xor
stc
in
cmpsl
stc
xchg
out
out
dec
push
jmp
cwtl
pop
scas
mov
xor
rorl
and
stc
pop
dec
jb
insl
mov
call
fiaddl
mov
insl
popa
and
sbb
dec
daa
or
aad
jnp
jmp
and
xchg
scas
push
mov
or
jne
xor
sbb
or
lock
sub
mov
jns
sbb
out
push
cmp
add
xchg
test
test
mov
test
cmpsb
xchg
lea
jmp
icebp
nop
imul
dec
push
add
mov
cwtl
lods
iret
fdivp
cltd
in
sub
xchg
and
aaa
mov
and
fwait
pop
xlat
xor
mov
cs
adc
aas
test
insl
mov
cli
hlt
lds
les
pushf
jge
adc
lock
fbld
lock
sub
mov
ljmp
push
paddusw
sub
xor
cld
jmp
dec
loope
jge
lret
adc
les
xor
or
add
std
bound
xor
loop
addr16
pop
loop
xchg
les
jo
inc
lods
jg
jp
xor
adc
jecxz
xor
inc
xor
pop
ss
jnp
cmc
push
fsubrl
jp
or
xor
fucomp
sbb
pop
jae
jne
cld
popa
xor
aas
jecxz
adc
mov
call
bsf
mov
pop
pop
push
outsb
dec
sbb
adcl
sti
dec
sbb
lds
pop
fiaddl
push
inc
leave
dec
pushf
pop
dec
aas
into
imul
inc
int
test
ja
fcoms
pushf
xorb
sbb
sbb
sbbl
shr
cmp
mov
ss
sbb
inc
sbb
xor
lahf
dec
push
jo
jle
xor
pop
aas
hlt
xchg
test
lods
dec
adcw
sub
call
js
pop
xor
cmp
insl
mov
mov
out
fcompl
lods
push
cmpsl
scas
and
sbb
lods
mov
inc
pushf
gs
xor
je
mov
add
push
xchg
jnp
enter
and
xchg
scas
jmp
jo
inc
cli
icebp
out
xchg
loope
push
inc
outsl
fisttps
lcall
std
jl
ret
mov
xor
cs
xlat
jecxz
out
nop
pushf
push
mov
dec
cmp
test
sti
arpl
stos
ret
inc
adc
or
pop
xchg
push
cmpsb
aas
xor
jg
movsl
jmp
mov
and
aad
lods
mov
jae
jl
out
sub
ret
cmpsl
addr16
out
push
push
xchg
xor
stos
std
push
je
mov
ds
push
out
dec
mov
add
das
repz
test
xor
adc
cmpb
inc
mov
inc
gs
adc
les
aad
movsb
xchg
adc
pop
dec
and
mov
cmp
mov
stos
cs
lock
cmp
mov
mov
pop
cli
int3
or
jge
mov
xchg
and
dec
mov
adc
add
push
lret
sbb
push
jo
mov
and
iret
dec
mov
rclb
lret
xor
sbb
jg
out
mov
add
push
shrl
sahf
les
xor
daa
xchg
mov
ret
mov
test
xor
fwait
sbb
int3
xchg
sbb
jmp
fdivrs
and
or
test
jmp
insb
loop
aas
mov
mov
mov
jmp
test
cmp
or
pusha
inc
cmp
mov
dec
mov
or
movsb
in
call
inc
into
lret
sbb
xchg
xchg
mov
mov
xchg
cmp
jae
cmpsl
inc
int3
loop
rcrb
outsb
cltd
cmp
imul
dec
dec
mov
mov
enter
dec
hlt
mov
ss
arpl
mov
inc
cld
cli
out
adc
and
add
jb
out
push
mov
test
adc
or
adc
into
mov
or
popf
cld
lcall
ja
test
or
mov
or
pop
cs
fmul
pop
imul
jns
pusha
push
jo
testl
xchg
sub
stos
stos
test
lock
sti
mov
loope
cmp
imul
pop
cmc
add
fcoms
enter
repz
push
push
xlat
ja
and
or
notl
cmp
sbb
into
add
inc
js
mov
ret
push
lret
and
hlt
mov
repz
fcoms
outsl
push
inc
mov
stc
adc
sbb
xor
jns
or
pop
pusha
fldenv
and
adc
and
scas
sti
pop
adc
push
test
jp
inc
jge
hlt
and
hlt
divb
push
popa
clc
push
sbb
mov
sub
es
movsl
std
cmp
add
and
inc
out
dec
pop
push
loopne
imul
sbb
test
and
xchg
pop
jmp
mov
cmp
test
dec
cwtl
das
cmpsb
xchg
in
ljmp
jbe
xchg
ss
xchg
xchg
ljmp
xchg
adc
dec
and
sbbl
sub
and
mov
int
out
out
inc
into
stc
inc
jo
cmp
mov
jns
scas
ds
xchg
sub
rcrb
jnp
push
xchg
movsb
jb
dec
xchg
rorl
daa
dec
in
repz
mov
ljmp
sarb
cld
roll
sub
xor
jbe
jbe
ja
xchg
push
xor
test
sub
ljmp
mov
sub
mov
mov
fdivl
fiaddl
jecxz
push
inc
jg
ds
ds
stos
stos
test
outsl
push
daa
xchg
test
into
sbb
xor
mov
aaa
leave
in
aaa
pop
unpcklps
jle
xchg
sbb
rep
stos
push
adc
add
inc
mov
mov
sbb
jae
jmp
ds
push
lock
call
movsb
sbb
in
int3
dec
push
inc
out
and
clc
aad
movsb
mov
mov
iret
gs
stos
jmp
loope
or
adc
or
cmc
ret
xor
repnz
shll
mov
aam
loope
movsb
loopne
ljmp
mov
das
idivl
test
sbb
xchg
loop
pop
out
sbb
sbb
mov
mov
into
mov
icebp
cli
sub
xor
xchg
mov
jnp
mov
jne
xor
xlat
sbb
dec
lahf
movsl
pop
stos
mov
mov
jo
fiaddl
test
mov
das
pop
and
or
xor
int3
imulb
lret
test
jle
cmp
sarl
inc
sub
cld
push
push
ds
popa
inc
sti
rclb
sti
xchg
or
cwtl
pop
in
insb
dec
bound
xchg
scas
jno
xchg
push
jbe
push
inc
sbb
js
rol
add
and
sbb
shll
rcrb
pop
je
pushw
mov
or
mov
pop
push
lcall
inc
lahf
and
add
jp
mov
into
lock
push
popa
jge
repnz
jl
mov
outsb
dec
adc
jl
into
mov
xchg
mov
popf
inc
jne
pop
xor
xchg
addr16
fwait
inc
add
mulb
mov
add
jcxz
mov
cli
mov
xchg
insl
icebp
xchg
std
pop
cmc
mov
stc
cli
fcomi
pusha
add
mov
stc
cwtl
ss
inc
pop
mov
enter
stc
imul
inc
cmpsl
loope
out
pop
stos
std
movsb
andl
dec
loope
mov
xlat
fisubs
adc
jbe
and
xchg
sbb
rorl
sub
add
adc
xlat
mov
pop
push
fmull
imul
cmpsb
aam
insb
pop
mov
and
mov
addr16
call
sti
sbb
mov
cmovo
pop
es
loop
push
or
stos
sbb
add
iret
je
add
pop
lock
stc
fists
mov
xorl
cmp
pop
sbb
lods
into
or
mov
addr16
sbb
dec
mov
ds
push
scas
mov
push
shl
jb
stos
pop
and
hlt
repnz
sub
dec
ds
push
testb
xor
cmp
adc
mov
cmp
imul
ds
jecxz
sub
adc
adc
stos
cmp
repnz
push
pop
push
mov
sbb
jnp
mov
out
xchg
jge
inc
ret
subl
out
jnp
mov
xchg
or
pop
cltd
jne
shlb
clc
inc
arpl
les
cmp
xchg
add
ds
lods
fildl
out
mov
movsl
pushl
sbb
test
adc
push
cmp
std
loopne
mov
inc
add
subl
icebp
xlat
cltd
js
js
sub
jle
jnp
pusha
aas
push
outsb
cwtl
stos
add
fimull
add
xchg
sub
cmp
push
or
das
sbb
xchg
mov
sarl
cmp
lahf
pop
dec
popa
out
mov
outsb
adc
sub
mov
add
ljmp
lea
sub
stos
movsl
lock
mov
test
cwtl
leave
hlt
fsub
jnp
dec
fcomp
mov
adc
jecxz
xor
sbb
mov
movsb
test
fiaddl
shll
stc
add
jb
int3
inc
xchg
adc
sub
dec
push
push
out
jae
mov
ljmp
rorb
mov
dec
xchg
xchg
mov
cmc
pop
or
mov
xchg
sub
lods
icebp
je
mov
lret
jge
lahf
add
push
add
add
xchg
xor
and
repnz
mov
or
inc
or
scas
das
xchg
ret
stos
dec
push
aaa
insl
or
pop
or
fcoml
dec
sbb
decb
mov
pop
mov
pop
mov
pop
dec
cmp
inc
push
xor
sbb
imul
push
cmp
cli
mov
popf
sub
out
imul
imul
xor
xchg
cmp
mov
add
shrb
call
imul
pop
adcl
orb
mov
icebp
mov
jmp
mov
lahf
mov
xchg
and
test
add
mov
js
dec
negb
cmc
pop
xchg
jae
push
sbb
shrb
mov
aam
mov
iret
cmpsb
push
sbb
popf
jnp
scas
cli
iret
in
mov
mov
push
dec
loopne
pusha
jns
push
adc
xor
popf
jae
inc
adc
push
enter
sarl
mov
fcoml
dec
adc
or
jecxz
cmp
pop
add
sbb
jg
andl
test
dec
add
mov
cwtl
nop
inc
xor
divb
in
or
and
popa
xchg
cld
fstps
enter
int3
cli
jle
shlb
xor
shl
lods
inc
adc
or
lock
lcall
xchg
or
adc
inc
inc
popf
mov
pop
mov
loope
mov
jmp
aaa
push
jns
pop
jmp
push
test
mov
sub
ret
mov
popa
xlat
cmp
jmp
add
loopne
or
lcall
ss
enter
jl
aad
cld
repnz
repnz
sub
inc
mov
dec
scas
in
jne
push
sbb
ficompl
insl
ret
incl
xchg
aam
daa
push
push
jecxz
cld
sub
inc
mov
mov
outsl
ja
adc
cwtl
cmc
sub
mov
xchg
sub
out
pop
andb
cmpsl
push
adc
test
cmp
ja
bound
xor
sbbb
jae
mov
fcompl
mov
adc
outsb
push
add
mov
pop
ja
push
loope
mov
jge
sub
sahf
adc
fstl
mov
mov
pop
adc
add
add
scas
into
sub
push
ss
mov
xchg
test
or
adc
cmp
mov
push
jl
jnp
pop
lret
cld
push
stc
pop
dec
push
pusha
jmp
in
push
mov
dec
xchg
push
in
ljmp
dec
inc
pop
pop
aad
inc
dec
pop
cmp
outsl
jmp
pop
hlt
nop
dec
sbb
int
mov
mov
lahf
sbb
daa
lcall
and
pop
xlat
inc
inc
pop
cmp
cmpb
xor
aaa
enter
mov
xor
in
pop
pop
aas
mov
fsts
pusha
or
mov
outsl
sbb
mov
cmpsl
push
and
cltd
repz
adc
clc
scas
cmp
pop
push
and
mulb
jae
or
jne
sbb
das
adc
sbb
mov
fsub
in
dec
add
mov
add
aaa
call
movsl
loopne
adc
jecxz
mov
sbb
lock
xchg
push
push
sbb
popf
cmp
and
fnstcw
cli
push
int
pop
pop
int3
sahf
pop
dec
subb
scas
out
mov
sbb
pop
sub
ud1
and
jecxz
rcrb
or
sti
pop
repnz
mov
and
out
xchg
lcall
mov
out
std
bnd
and
mov
cmp
push
mull
mov
dec
popf
push
outsb
jg
cmp
movsb
test
sbb
mov
adc
pop
and
push
leave
cmpsl
and
pushf
push
nop
inc
and
or
enter
outsl
mov
and
and
jecxz
sub
push
sub
icebp
mov
out
fidivrl
or
jbe
xor
out
popf
pusha
outsb
pusha
sti
or
cmp
nop
xchg
js
inc
test
orl
add
sbb
pop
cli
push
cmpsb
cltd
adc
and
mulb
ljmp
dec
pop
test
and
stc
fdivrs
scas
sarb
sbb
push
movsl
sbb
mov
movsb
mov
shl
outsb
outsl
cld
int3
add
sub
sub
lret
adc
inc
add
ret
push
xchg
jae
shll
push
push
push
adc
mov
xchg
out
stos
jno
push
pop
sar
bound
push
ret
subl
lahf
sti
test
and
enter
adc
fadds
xor
pushf
sbb
sbb
and
lret
sahf
inc
mov
cmp
loope
jmp
iret
add
push
adc
ds
aam
inc
and
pop
out
adc
enter
adc
sub
test
into
or
mov
push
fcom
fwait
mov
push
or
aad
loopne
out
fistl
jl
mov
cwtl
insl
jle
sbb
mov
pop
insl
mov
icebp
sub
pusha
cmpb
pop
roll
aad
movsb
mov
icebp
fwait
push
js
mov
cmp
clc
lods
xchg
mov
sbb
xchg
push
mov
sub
mov
insb
mov
add
jmp
xchg
out
sbb
aaa
rclb
std
ja
mov
addl
popl
push
pop
lea
fcmovnb
mov
pop
inc
cwtl
cmpsl
dec
int
repz
sahf
scas
adc
jmp
xor
cmp
ds
cmpsl
jecxz
and
clc
sbb
insb
sub
xchg
and
dec
out
push
and
pop
mov
xchg
cwtl
jmp
ja
pop
pop
fdiv
add
in
inc
enter
ficoml
fistps
cmpsl
mov
jae
aad
lret
adc
adc
pop
mov
add
cmp
call
fmuls
cmp
enter
dec
adc
out
andb
lods
hlt
add
xchg
mov
popa
stos
divb
sbb
mov
out
xlat
out
xchg
jecxz
out
jo
mov
cli
inc
mov
or
mov
cmpsl
and
ss
sarb
inc
xorb
popa
add
add
pusha
mov
push
mov
sub
adc
pop
mov
and
jns
fsubrs
aad
int3
sbbl
add
jl
pop
insb
jo
mulb
cs
pop
sbb
pop
xchg
shr
sub
jmp
fsts
add
inc
adc
mov
xchg
jle
and
pop
shll
bound
dec
mov
dec
pop
and
lret
mov
adc
cmpsl
cmp
or
outsl
pop
test
cwtl
sub
push
pushf
mov
xchg
mov
xchg
lock
xchg
lret
xlat
mov
mov
jl
and
push
xchg
inc
arpl
xor
idiv
pop
xchg
inc
jle
inc
fcmovnb
in
out
in
xchg
lds
movsb
mov
stos
add
xchg
push
cwtl
int
add
idivb
aaa
js
ret
cmpsl
mov
mov
scas
fsubl
inc
inc
xchg
jl
cmpsl
cmp
and
adc
cmp
inc
bound
xor
int3
dec
cmp
fldl
js
sahf
repz
jne
sbb
cmp
mov
mov
popf
in
mov
shlb
mov
sti
push
mov
dec
push
lea
jge
jne
mov
nop
pop
fsts
inc
addr16
stos
lret
fstps
dec
cs
xchg
aad
xor
into
stos
sub
jecxz
ljmp
adc
pop
cmpsl
test
call
sub
pusha
or
or
cmpsb
pop
arpl
pop
xchg
sbb
and
sub
hlt
cmp
push
rorl
mov
jae
scas
mov
and
cs
jmp
ljmp
cmpsb
push
test
sbb
cltd
sbb
mov
leave
jno
mov
sbb
cmpsl
addr16
in
outsb
push
xor
test
popf
xor
mov
imul
int3
push
adc
cmpb
mov
inc
mov
cld
push
jb
push
lds
xchg
int
es
xor
cmp
test
xlat
mov
pop
push
insl
pop
imul
sub
scas
jmp
adc
and
arpl
mov
cmp
jg
pop
ror
int3
xor
lock
fwait
lods
jge
cmp
xchg
dec
out
rcl
or
aaa
xchg
out
mov
or
out
xor
xor
or
imul
push
sahf
inc
pop
jno
ret
cwtl
dec
mov
sahf
pop
and
mov
les
nop
loope
mov
ds
in
add
sub
adc
mov
movsb
pop
adc
ret
inc
bound
push
clc
push
cmp
jle
lret
out
jns
jmp
sub
mov
gs
lods
and
and
lods
ljmp
mov
push
cwtl
inc
fwait
outsl
push
cmpsl
xlat
sub
imul
sahf
mov
xlat
pusha
jg
sub
or
out
ds
jae
xchg
or
orb
test
sub
xchg
popa
into
jecxz,pn
lret
pop
outsb
mov
mov
shlb
ret
rclb
hlt
jle
push
addr16
ret
mov
mov
cmp
mov
and
aam
data16
mov
push
sbb
mov
icebp
cmp
jl
int
push
cmp
pop
jns
aaa
scas
and
sub
movsb
add
out
mov
push
das
leave
repnz
mov
enter
mov
fwait
mov
add
lahf
data16
roll
rclb
dec
add
fsub
xor
shll
jnp
test
call
pop
aaa
inc
adc
sub
mov
andb
pop
clc
mov
orl
cwtl
addl
enter
out
rcr
ret
gs
mov
shll
mov
std
mul
push
fidivrs
mov
imul
scas
mov
sub
pusha
inc
cmp
xor
and
xchg
xor
stc
lahf
jb
pop
adc
test
push
ja
ljmp
shll
cmpsl
ds
push
dec
mov
jecxz
into
jg
scas
inc
frstor
imul
insl
nop
fwait
cmpsl
call
inc
pop
pop
and
out
scas
sti
xchg
shlb
enter
mov
add
rorl
jp
mov
mov
bnd
push
sahf
or
xchg
mov
xchg
jle
addb
rep
or
jo
test
lock
js
adc
aad
mov
ror
add
dec
xchg
inc
adc
ret
and
daa
or
xchg
adc
xchg
aam
push
jno
lahf
jb
incb
dec
add
gs
loopne
in
nop
scas
inc
popa
std
dec
sbb
xchg
fwait
xchg
dec
repnz
xchg
push
loope
rcrb
mov
call
mov
jno
inc
or
data16
jmp
cmp
xchg
dec
aad
or
mov
mov
fcmovb
mov
xchg
stc
push
rolb
lret
in
outsl
out
xor
in
aam
mov
mov
pop
adcl
icebp
push
push
lahf
jns
into
or
sbb
mov
dec
fwait
lds
test
sub
lock
hlt
ja
add
shll
insl
or
ret
mov
iret
lcall
sbb
jnp
mov
cmp
ljmp
pop
dec
pop
push
ds
inc
sub
cmp
les
fisubrs
dec
mov
jnp
fsubr
sbb
add
adc
push
scas
xor
ja
sahf
xchg
xor
insl
inc
dec
mov
lcall
mov
test
add
push
popf
or
out
icebp
add
push
mov
dec
jns
mov
cmp
jbe
out
test
bound
test
mov
jb
ret
inc
mov
gs
int
adc
out
add
test
int3
pop
loop
lods
sub
out
jb
ja
adcl
xor
mov
jl
sti
and
jmp
mov
imul
loope
inc
shll
aas
lahf
xor
js
in
adc
xlat
push
xor
clc
nop
xor
cwtl
cmpsb
imulb
jp
idivl
sub
jl
mov
loopne
lock
jne
nop
imul
outsl
mov
dec
jns
int3
ja
cltd
shll
in
mov
push
xlat
mov
jp
loopne
outsl
in
enter
inc
ret
mov
jno
xor
cmpsl
lock
jge
fnstenv
mov
inc
test
mov
mov
adc
mov
sbb
pop
gs
sbb
sub
insb
xor
leave
fisubrl
xchg
dec
xor
ljmp
pop
mov
jge
inc
jp
cs
dec
shr
mov
xor
lcall
inc
cmp
adc
mov
inc
fimull
mov
andl
cmp
pop
xchg
pushf
push
push
and
idiv
or
ss
sbb
mov
repz
cmp
ror
clc
xor
int3
test
push
lock
cmp
mov
pushl
rol
enter
or
dec
inc
jg
ljmp
mov
adc
pop
mov
mov
push
mov
test
inc
xorb
push
and
repz
and
shrb
mov
fadds
sub
adc
sub
bound
cld
adc
inc
lcall
jne
mov
lret
mov
cltd
leave
mov
mov
cmp
fs
icebp
lcall
mov
add
mov
xlat
pop
movsl
mov
daa
movsl
mov
rclb
test
rcrb
out
add
xor
lcall
pop
ficompl
xchg
lret
inc
lea
jmp
and
jge
inc
pop
das
jae
add
mov
sbb
es
scas
pushf
mov
add
ret
shlb
and
push
repnz
enter
inc
in
leave
cltd
sub
fwait
jmp
push
or
pop
jns
xor
mov
mov
jl
mov
enter
mov
push
insb
mov
cmp
add
sbbl
push
cwtl
lods
mov
sub
insb
jns
ds
ret
jae
sub
mov
je
out
xchg
adc
and
sbb
xchg
jg
jb
jge
xchg
cmc
ja
inc
and
cmpsb
add
fdiv
mov
ja
stos
mov
jbe
shl
mov
add
shlb
mov
xor
or
fwait
es
sub
jecxz
leave
test
call
sahf
decb
push
scas
lcall
jmp
jnp
mov
jmp
jne
icebp
xlat
mov
addr16
xor
out
fdiv
push
or
sub
mov
repz
jb
or
out
dec
in
jl
fbld
outsb
pushf
lahf
mov
insb
out
sub
rorl
fcmovb
push
inc
sub
jnp
mov
adc
push
lds
rclb
arpl
int3
mov
enter
in
stos
movsl
xor
push
or
xor
or
rorl
dec
adc
adcl
movsl
dec
out
mov
dec
or
or
je
dec
dec
jl
jno
test
mov
add
movb
cmp
or
and
mov
push
inc
sbb
dec
stos
sub
adc
adc
and
sbb
inc
mov
jle
icebp
pop
xor
movsl
push
popf
and
mov
pusha
push
hlt
or
cs
out
jbe
fcomp
sbb
jmp
iret
cmpsl
jbe
and
mov
imul
pop
dec
fucomp
repz
dec
lock
rcrb
mov
mov
ds
jnp
iret
mov
and
mov
enter
sub
xchg
jns
fsts
imul
movsl
mov
mov
in
sbb
loopne
ja
mov
test
dec
fs
leave
inc
xchg
mov
aas
xchg
incb
fwait
push
sub
rclb
inc
jne
xchg
test
out
movsb
fwait
pop
scas
xchg
enter
sbb
sahf
pop
call
mov
shl
test
out
adc
lock
pop
adc
and
mov
lods
mov
lock
add
js
and
lahf
out
inc
jno
mov
or
idivl
jle
or
lea
fistpll
dec
fldt
pusha
mov
in
cmp
cmpb
hlt
bound
lahf
push
cli
mov
mov
sbb
mov
sahf
insb
mov
shrb
arpl
ret
cmp
setge
push
sbb
fisubs
xchg
mov
mov
sub
push
add
sar
ret
lret
xor
lock
add
cmp
or
push
xor
sub
xchg
cmc
pop
mov
mov
mov
loope
push
mov
sbb
ljmp
ret
pop
repnz
dec
cmp
out
pop
nop
aam
cltd
loop
lret
clc
cmp
pop
dec
sbb
mov
cmp
jg
cmpsb
xor
loopne
mov
das
sub
mov
sub
mov
shlb
sub
out
popf
push
outsl
jbe
adc
jmp
ret
mov
dec
mov
pop
inc
jnp
lret
cmp
movsl
xchg
bound
or
mov
shlb
sub
rcrl
into
mov
inc
leave
pop
or
inc
pmulhuw
lret
sarl
and
cmp
cld
dec
push
repz
sarb
inc
mov
push
pushf
daa
add
mov
test
loop
loope
xor
or
das
js
data16
xor
inc
adc
call
lcall
adc
xchg
or
xor
das
jle
sbb
adc
fucom
fcoms
push
out
xchg
xchg
int
dec
lret
sub
xlat
lods
shll
lret
test
into
sub
aam
insl
cmp
xchg
movsl
cmpsl
and
cmp
imul
sub
insb
in
pop
jb
xor
in
mov
cmp
insl
imul
dec
sbb
popf
and
add
inc
add
outsb
pop
test
fcomps
push
loopne
ja
out
je
cmc
mov
mov
xchg
icebp
xchg
cmc
fbld
iret
test
sub
gs
dec
jge
int
inc
mov
push
xchg
pushf
adc
out
push
xor
ret
add
jecxz
inc
pop
cmpsl
dec
sarl
cmpsl
mov
pop
jb
mov
data16
adc
jl
push
test
xchg
add
jecxz
data16
bound
movsb
mov
xchg
addr16
sti
add
pop
add
fldt
push
cli
jmp
mov
cmp
test
cli
ljmp
dec
adc
scas
int3
icebp
inc
inc
dec
inc
and
jne
mov
flds
xor
lock
dec
xor
aaa
insb
pop
shlb
imul
out
pop
adc
fwait
rcl
adc
push
cmp
cwtl
inc
std
cmp
push
lret
xchg
sbb
inc
fwait
push
sub
fnstenv
and
mov
and
cmovs
push
test
and
int3
jmp
xchg
negb
xchg
adc
add
jp
or
mov
sbb
jge
divb
mov
xchg
sbb
push
nop
addr16
sahf
cmp
lods
ds
fcmovnbe
outsl
icebp
mov
pop
jp
or
popf
xchg
clc
aad
ret
and
imul
jl
es
cld
pop
jmp
jmp
push
adc
mov
push
mov
or
push
fsubs
imul
jno
push
aas
test
sahf
adc
std
scas
call
inc
mov
fcomps
push
pop
add
test
int3
adc
mov
lret
ljmp
add
mov
or
adc
mov
js
jmp
leave
xchg
cmpsb
xchg
test
mov
cmp
mov
gs
pop
scas
mov
jne
cmp
sti
push
insb
shlb
sbb
lods
jo
cmp
daa
add
imul
iret
sub
mov
cltd
xchg
adc
xor
mov
ficompl
cmp
pop
rolb
clc
and
fcompl
pop
stos
mov
mov
mov
mov
outsb
fs
jecxz
xor
and
scas
xlat
mov
test
lock
ret
lahf
in
imul
or
les
aas
cld
dec
movsb
jo
adc
push
jae
cmp
pop
adc
adc
imul
cmp
jmp
or
pop
jmp
sbb
insb
imul
sub
xor
xor
jb
mov
add
and
push
xchg
fucomip
xchg
sub
or
mov
jg
loopne
mov
sbb
sbb
jmp
sub
je
js
test
mov
ret
ss
mov
andl
adc
inc
out
cmpsb
sbb
xchg
add
mov
jns
sub
pop
mov
ja
jbe
or
push
xor
pop
xchg
sub
mov
dec
hlt
mov
das
push
mov
xor
scas
xor
icebp
or
push
pop
pop
dec
xor
repz
int3
mov
jns
push
jg
jns
aam
test
in
lret
out
inc
xchg
imul
mov
sbb
lds
out
xchg
cmpsb
sarb
dec
add
in
jle
mov
push
mov
leave
cltd
nop
xor
xchg
push
test
dec
fwait
and
bound
jb
add
gs
or
mov
lods
xchg
inc
imul
outsl
jb
mov
mov
pop
cs
int
push
cmc
test
pop
mov
and
jb
add
jl
out
jae
mov
mov
pop
fcmovnu
jg
xchg
push
adc
lahf
add
fiadds
je
and
int
loopne
mov
repnz
pusha
sbbl
and
out
pushf
enter
mov
es
popa
mov
aad
inc
jp
push
pop
cmc
dec
mov
dec
and
adc
cmpsb
inc
pop
push
test
xchg
xorl
das
cli
loopne
test
sbb
lret
movsl
xchg
xchg
xor
push
mov
insl
lret
loopne
out
mov
adc
and
xlat
jns
inc
popa
cs
pop
ret
mov
sub
adc
cmc
mov
dec
sub
rcl
adc
cmc
fcmove
sbb
jmp
and
fndisi(8087
lds
sub
push
movb
out
push
ja
or
push
testb
std
dec
test
std
imulb
jo
dec
push
out
dec
std
lea
cmp
pusha
testb
pop
adc
loop
mov
xlat
sbb
push
jge
arpl
jg,pt
adc
fs
add
sti
add
dec
inc
imul
pop
mov
stc
or
ret
stos
pop
data16
imul
jb
xchg
push
dec
xchg
shll
pusha
loope
push
lret
out
mov
mov
dec
push
aaa
jge
aaa
leave
sub
sub
or
int3
fisubs
loope
test
or
insb
add
in
or
push
adc
in
xor
scas
and
or
ret
dec
jae
jne
mov
push
les
jns
push
xor
push
mulb
xchg
push
mov
pop
xchg
or
mov
or
nop
add
push
mov
jmp
clc
adc
dec
xlat
roll
push
mov
in
push
jb
sahf
xlat
mov
scas
mov
push
loope
movsb
dec
inc
cmpsb
add
or
loop
sub
push
sarb
orb
xor
xlat
pop
lods
test
adcb
cmp
push
insl
fnstenv
enter
dec
or
mov
pusha
xor
out
pop
dec
mov
adc
pop
cmc
ret
fcomip
add
bound
adc
xor
flds
pop
mov
stc
cs
repz
test
pop
addl
into
jb
out
inc
sub
jge
js
fs
mov
sbb
or
js
addr16
mov
xor
mov
mov
rep
ret
ljmp
mov
jns
scas
out
sub
daa
mov
mov
xchg
jg
jmp
or
insl
sti
xor
lcall
sbb
pop
stos
xchg
repz
andb
lahf
and
add
cli
fnstsw
xchg
aaa
aas
inc
punpckhbw
out
or
xchg
daa
xor
bound
fsubs
jg
loop
lret
mov
in
pop
sti
adc
jg
and
add
sub
gs
test
ss
ljmp
mov
xchg
test
cld
int3
insb
je
or
or
arpl
pop
icebp
int3
push
int
inc
sub
repnz
les
adc
xor
lret
and
fcoms
imul
out
movsl
adc
push
sbb
cmp
sub
jno
cmp
add
push
ret
in
dec
xchg
in
inc
loopne,pt
jo
mov
jb
out
pop
cli
sahf
in
mov
fimull
es
aad
mov
sbbl
and
ljmp
mov
rcrb
cs
lcall
push
jns
sbb
das
adc
or
cmp
sbb
pop
mov
fstpl
pushf
cwtl
mov
xor
js
mov
cmpsl
aaa
cmpsb
scas
and
push
iret
xor
or
xor
xor
imul
nop
jl
shlb
ficoms
add
adc
pop
inc
push
adc
lret
fstp
das
mov
ret
adc
outsb
imul
push
or
mov
adc
add
mov
fsubp
xor
lods
push
cs
popa
pop
pop
and
jae
data16
xor
dec
sbb
xchg
rcrb
or
pop
jecxz
mov
xor
xchg
fisubs
cmp
sub
fs
push
int
enter
sbb
std
popa
pop
mov
mov
xor
loopne
std
cltd
jno
stc
cmp
xor
insl
cmpsb
lds
outsb
sbb
mov
arpl
inc
jecxz
jnp
lret
inc
jge
mov
lret
mov
sbb
fisttpll
lret
push
movsb
arpl
mov
push
push
dec
jnp
jmp
stos
nop
movl
jae
inc
dec
mov
insl
sysenter
mov
inc
mov
inc
and
cmpsb
test
xchg
scas
out
jg
jbe
and
xchg
cmp
lret
push
mov
into
pop
arpl
push
sub
xlat
dec
in
cmp
and
sbb
cltd
sub
mov
rol
fidivs
popa
fmulp
pop
sti
sbb
daa
sub
dec
jl
int
xlat
or
add
cwtl
mov
inc
jl
sub
mov
ds
in
jp
rcl
js
mov
iret
pop
and
and
xlat
stc
mov
mov
ljmp
aaa
notb
xchg
xchg
aaa
lods
dec
aad
sbb
test
add
stc
fwait
and
fcoms
orb
idivl
pop
mov
idivl
cmp
fsts
xchg
addr16
pop
testb
cmpsl
ret
push
xchg
mov
pop
pusha
in
xor
dec
inc
inc
mov
pop
imul
inc
and
pop
rolb
mov
xchg
loope
ljmp
in
inc
mov
add
jmp
mov
icebp
hlt
dec
sti
sbb
xchg
xchg
cmp
pushf
xchg
cmc
int
xor
sub
mov
addl
movsl
push
push
mov
insl
in
pop
cmp
cmc
sub
test
add
fwait
mov
adc
aam
stos
inc
xchg
jp
outsb
mov
mov
dec
pop
sti
int
jne
or
or
fdivrp
hlt
xchg
add
adc
test
pop
shll
dec
add
lcall
and
dec
adc
pop
jnp
lahf
jmp
fistpll
jl
dec
adc
fwait
mov
rcll
xchg
popf
sahf
aad
fnstenv
scas
ja
icebp
lahf
pop
cmpsb
pop
jno
repnz
jmp
dec
sti
mov
xchg
xchg
mov
stos
inc
add
cmp
lret
loope
stc
pushf
mov
inc
mov
pop
push
in
das
jl
xchg
mov
sbb
clc
push
sahf
pcmpgtd
jecxz
sbb
adcb
adc
rorl
ljmp
dec
and
sub
leave
push
insb
in
cmc
test
fsubl
ja
insl
mov
ljmp
mov
cs
aad
out
je
call
popf
call
in
test
cli
data16
stos
aaa
popa
mov
pop
pop
in
aas
dec
mov
pop
insb
lret
aaa
sbb
pop
mov
loop
sub
ficoms
push
sbb
or
sub
outsl
aas
xchg
lds
dec
add
inc
stc
out
icebp
jbe
in
idiv
mov
mov
pop
and
loopne
popa
xchg
adc
mov
inc
fcom
mov
and
lahf
shl
mov
lahf
rep
rcrb
test
adc
xchg
mov
fdivp
mov
pop
aaa
jge
or
sub
arpl
out
mov
jl
xchg
xor
dec
push
iret
sbb
sahf
shrl
push
mov
out
dec
in
lea
adc
dec
xchg
mov
push
mov
mov
sbb
les
imul
jae
and
inc
sub
int3
push
mul
sub
mov
xor
lods
sbb
and
lods
cmp
pusha
jb
add
add
clc
xchg
bound
movb
fwait
pop
subb
cmpb
xchg
test
lds
imul
sbb
sbb
imul
add
lods
ljmp
popf
imul
into
test
outsl
sub
mov
fcmovnu
fcoms
gs
and
dec
addr16
xor
fnstcw
mov
negl
testb
adc
sbb
fdivl
and
inc
pop
pop
popf
call
mov
mov
lret
xchg
fstpl
jo
sti
dec
mov
call
mov
cmp
int
dec
adc
xor
jg
ficompl
mov
lods
push
insb
lret
imul
popa
cmpsl
int3
xlat
int
andl
add
ret
push
dec
orb
sub
xor
pop
in
aaa
ret
push
sahf
lods
cmc
popf
popf
ljmp
outsb
orl
lret
test
out
jp
jge
sub
jbe
movsl
out
dec
add
insl
jg
cmp
mov
cli
add
or
andl
lahf
sub
addr16
shl
in
sbb
es
xor
test
icebp
pushf
adc
cwtl
add
fcoms
jnp
add
scas
mov
imul
push
repnz
repnz
movsl
fsubl
outsb
and
cwtl
xchg
lods
bnd
mov
add
or
call
add
hlt
aaa
push
fists
fs
sub
dec
or
outsl
rcrl
cmp
mov
orl
or
icebp
hlt
push
pop
and
mov
mov
fs
dec
int
mov
cmpsb
icebp
imul
pop
cwtl
jbe
mov
pop
inc
or
insb
mov
scas
dec
dec
mov
pop
lahf
test
mov
and
in
adc
cli
out
enter
dec
lock
hlt
mov
xchg
shr
pop
push
and
ret
loopne
or
rcl
xor
xchg
mov
outsb
cmp
in
pushf
jne
hlt
and
cmp
rol
dec
sub
inc
xlat
xor
call
jle
inc
movsb
mov
push
popf
test
inc
lea
inc
dec
and
sub
scas
scas
jb
mov
insb
adc
loopne
fisubl
roll
js
mov
pop
in
xlat
and
ret
shrb
pop
jmp
arpl
dec
ficoms
and
or
lock
sub
adc
inc
outsb
lcall
mov
pop
cmpsb
jb
scas
aam
cmp
dec
push
mov
aam
push
pop
cmpsl
xchg
fidivs
dec
jne
push
and
sbbb
sub
adc
aas
lret
cwtl
movsl
cs
push
insl
sbb
adc
icebp
cltd
jp
jnp
jle
pop
cmc
fistpll
lea
frstor
inc
pusha
std
repz
sub
mov
jae
insb
test
sbb
push
rcrb
ret
xor
aam
mov
jne
and
and
js
or
xor
jmp
mov
movsl
test
adc
lea
js
push
shrl
pop
jns
lds
sti
dec
mov
or
pop
test
xchg
out
ljmp
xchg
les
cs
push
sbb
int
test
hlt
imul
fstpl
cld
rorb
jle
mov
mov
test
dec
mov
std
jns
pop
js
mov
mov
imul
jne
in
fidivl
ja
push
push
jae
inc
jmp
jb
mov
test
lods
pop
shll
jge
dec
jbe
or
dec
in
cmpsb
lods
daa
call
lods
push
cmp
sti
mov
ret
lods
leave
mul
jecxz
and
and
dec
mov
add
ret
sub
xor
insl
push
ret
mov
sbb
js
mov
std
push
jg
shr
in
imul
outsl
rolb
aam
mov
shrb
or
sub
dec
stos
ret
jecxz
shl
rolb
push
push
add
je
adc
dec
rcrl
pop
es
lret
addb
jp
jb
cwtl
cltd
jb
and
cwtl
add
dec
xchg
lret
xchg
fsubrl
add
movsl
xchg
lds
into
movsb
dec
inc
cmpsb
or
jo
xchg
pop
mov
push
jns
sahf
loop
adc
jl
lret
das
mov
iret
cwtl
sbb
into
adc
fdivrs
mov
fcoml
cwtl
call
lret
add
xchg
iret
rclb
mov
cmp
lea
push
adc
leave
rorl
cld
sub
mov
stos
jo
jg
les
js
es
out
jnp
mov
int3
lret
loopne
inc
xor
ficomps
mov
out
or
add
nop
notb
fsubl
ja
xchg
nop
xor
lea
pop
and
sbb
jbe
dec
cmp
mov
or
out
xlat
notl
sub
mov
movsl
test
scas
and
pusha
aad
xchg
dec
in
xchg
popf
xlat
lret
or
movb
cmc
push
fsubp
jp
cmp
loope
loope
jae
aas
rclb
cli
or
dec
rcrb
xchg
add
outsb
inc
mov
jp
cmp
xchg
inc
aam
jg
int
add
mov
sub
pop
icebp
int
or
and
adc
lcall
stos
mov
aam
or
xchg
lret
adc
dec
xchg
pop
int3
jl
sbb
dec
leave
shrb
clc
test
cmc
test
arpl
dec
imul
pushl
pop
aaa
repnz
addr16
and
dec
mov
movsb
popl
cmc
pushf
outsl
cli
mov
mov
mov
push
fistpl
mov
xlat
xor
in
daa
pop
daa
nop
enter
jg
push
jmp
inc
ret
lcall
mov
jbe
mov
mov
scas
sahf
fs
dec
cmp
mov
push
add
ljmp
lahf
mov
mov
shlb
mov
mov
daa
jp
mov
or
int
in
mov
jge
loopne
pop
cs
mov
jns
push
xor
sbb
lret
and
add
lret
ret
or
mov
rorb
inc
pop
mov
lea
xchg
lds
and
and
lahf
adc
dec
xchg
jno
xchg
in
fs
popa
insb
fsubrp
xor
les
jns
cmp
inc
movsl
and
ljmp
cs
mov
mov
insb
push
mov
mov
add
inc
sub
mov
es
push
mov
sbb
push
pop
adc
jae
pop
lock
jmp
lds
jp
add
lods
push
sbb
lret
mov
out
mov
push
je
or
mov
loop
dec
jle
mov
cmpsl
pop
repz
jl
mov
push
rolb
into
in
dec
into
jae
notb
sbbb
ficomps
in
aam
lea
pusha
adc
iret
or
stos
jmp
hlt
repnz
dec
fwait
mov
cmp
sub
dec
adc
mov
lods
dec
rcr
cmp
push
jns
mov
and
addr16
nop
xor
fnstcw
jmp
fwait
jecxz
or
and
roll
mov
mov
test
int3
out
ret
testl
push
test
clc
or
pop
mov
hlt
mov
iret
lea
repz
push
pushf
imul
inc
daa
sbb
sbb
sbb
hlt
mov
fwait
push
xchg
sti
pop
push
in
loop
jae
in
inc
ss
mov
lahf
xchg
adc
inc
mulb
xor
stos
jmp
mov
in
xor
stos
adc
jecxz
out
add
push
inc
cli
dec
push
inc
jnp
jmp
in
pop
loop
mov
ja
imul
push
lods
scas
mov
lahf
cmp
inc
xchg
sbb
mov
sahf
cmp
sub
je
rcl
push
in
repnz
gs
jmp
shl
frstor
aad
orb
in
jecxz
mov
adc
push
xor
les
sar
cmpsl
sub
mov
add
scas
cwtl
add
lods
and
in
std
cltd
dec
jl
lret
adcb
cmp
repz
fisttps
xor
pop
mov
sbbl
xor
jge
mov
jmp
xchg
mov
ja
shll
add
adc
xchg
rclb
movsl
test
out
lcall
mov
lea
push
mov
or
lret
out
inc
add
fnstsw
mov
loope
push
dec
andb
push
jae
add
push
popf
sbb
mov
sbb
rcll
sub
clc
testb
iret
pop
sbb
or
or
fisubs
jbe
cmp
fldl
pop
mov
fcoms
leave
fmull
leave
or
lret
mov
test
movntps
push
push
adcl
mov
test
imull
out
dec
jb
mov
mov
adc
js
mov
push
push
ret
rcrl
popa
hlt
adc
in
push
ret
fwait
call
je
adc
and
fiadds
ret
push
push
arpl
cmp
ljmp
mov
lea
and
imul
jl
out
push
cmp
mov
ljmp
xchg
mov
mov
mov
push
dec
and
xchg
jns
mov
add
imul
or
lret
xor
pop
lock
pop
push
mov
cli
mov
add
and
rcrl
lret
xor
lods
sub
lods
fists
adc
xchg
xchg
in
faddl
sti
add
ds
ds
cmp
inc
fxch
jmp
xor
cmp
imul
aaa
mov
incb
js
jmp
or
push
jg
and
pop
andps
xor
adc
dec
xchg
mov
xchg
cmc
jae
xor
or
in
cmp
lds
push
inc
lods
stc
jb
pop
add
push
outsb
or
jl
das
sbb
sbb
xchg
rolb
xchg
xor
push
sbb
pushf
lea
inc
jne
dec
inc
fwait
push
movsl
mov
daa
lds
adc
pop
sub
fs
lods
cmpsb
cmpl
adc
mov
add
imul
movsl
mov
mov
mov
ficomps
ret
int
cmp
adc
xor
sub
lods
fisubrs
addr16
in
push
push
and
shlb
cltd
cmp
and
das
repz
clc
or
lods
sub
popa
cmpsl
orb
mov
xchg
icebp
jg
dec
loop
icebp
inc
out
js
in
arpl
mov
pop
cmp
mov
mov
mov
adc
addr16
mov
xchg
sahf
lcall
repnz
leave
jg
or
and
in
push
inc
cmp
jne
sbb
dec
cmpsl
imul
adc
mov
push
fnstcw
jae
push
loop
sub
mov
out
adc
inc
sbb
sub
mov
fwait
scas
pop
test
sbb
popa
jno
pop
push
mov
fimull
js
pushfw
push
pushf
hlt
adcb
cmp
or
movsb
mov
dec
xor
push
xor
pop
sub
rorl
lds
popf
sbb
adc
into
inc
mov
lods
jmp
mov
or
push
cmp
cmp
hlt
sub
sbb
sub
jg
js
ret
mov
push
xchg
inc
xchg
xlat
js
lock
jb
divb
lcall
xchg
push
scas
xchg
ljmp
movsb
inc
adc
inc
cmovg
or
fsubp
repnz
jmp
jne
ljmp
mov
pop
in
add
int
test
or
lods
dec
push
imul
or
jbe
outsl
lret
mov
adc
or
cmpsl
push
insb
aaa
int
lahf
jg
movsl
or
mov
hlt
push
xor
mov
fcompl
movsb
jae
sbbl
cmp
shrl
sub
cmp
jnp
push
movsl
vmwrite
cli
shrl
out
lahf
mov
inc
stos
adc
pop
dec
ror
adc
pop
mov
jg
mov
testb
xchg
les
insl
cmp
mov
cmp
push
repnz
andb
mov
aas
push
dec
aas
mov
in
xchg
mov
ljmp
push
es
ficoml
fs
movsb
add
mov
mov
mov
mov
lods
fdivrs
ljmp
aaa
xchg
imul
inc
cmpsb
pop
loope
lret
incb
mov
mov
mov
dec
jb
jae
pusha
in
cmp
ds
icebp
loopne
and
jmp
in
cmp
or
mov
das
rcrb
mov
inc
inc
inc
loopne
jp
mov
add
jo
sub
pop
les
in
mov
jne
push
jno
scas
std
or
out
jo
jmp
and
cmp
mov
fsub
cli
xchg
and
ret
sbbl
daa
into
xor
add
mov
xchg
push
fbstp
xor
ds
or
cltd
das
fcoml
pop
jnp
mov
mov
dec
in
jnp
pop
pop
cmpb
jae
add
jae
ds
ffree
add
rcrb
clc
hlt
cmpsb
inc
lock
pop
mov
dec
pushf
mov
mov
fs
pop
push
iret
clc
adc
into
sub
je
mov
sub
jl
ja
int3
push
xor
outsb
scas
add
cltd
jns
test
cmpsb
test
sub
outsb
adc
js
stos
add
cmp
fs
out
mov
enter
push
jg
sbb
test
pop
jmp
mov
xor
add
bound
idiv
mov
mov
pushf
mov
je
pop
jle
mov
addr16
cwtl
sar
popa
addr16
and
xrelease
xor
lods
adc
add
gs
movsb
lcall
out
inc
aas
cmp
cmp
mov
jmp
or
pop
sbb
mov
lods
xor
push
lret
lahf
or
lret
xor
js
jle
es
sub
xchg
dec
mov
movsl
mov
jle
fistpll
mov
enter
and
outsl
and
lcall
add
and
push
fldl
xor
stc
sub
xor
js
and
ja
mov
xor
xchg
and
shll
stos
xchg
add
jb
push
ret
int
loopne
pushf
loopne
int
pusha
or
lret
sar
xor
jne
dec
arpl
les
mov
sub
or
mov
adc
aad
into
sbb
call
jae
andb
cmpb
addr16
ss
sub
stos
shll
data16
lds
xchg
mov
sbb
outsb
aam
pop
lods
and
adc
rorb
mov
push
mov
sub
xor
popa
jmp
gs
icebp
cli
shl
das
mov
dec
scas
stos
adc
inc
and
adc
cwtl
mov
rorl
push
inc
cmp
pop
inc
dec
lds
in
lret
add
out
stc
push
jno
cmpsb
dec
lret
pop
popf
and
xor
sahf
xor
and
push
and
iret
adc
xor
andb
xchg
pushf
pop
loop
mov
adc
popa
sub
push
xor
jne
add
jle
sbb
lods
call
lahf
cmp
sbb
inc
jl
ss
leave
outsb
int
test
or
lds
leave
fs
cmpsl
xchg
ror
fstps
mov
fnsave
xchg
shlb
ds
aam
arpl
pushf
movsl
pop
dec
and
cs
mov
add
mov
sti
adc
mov
stc
sbb
inc
xor
xor
in
xchg
popf
cmp
mov
lea
hlt
lods
push
repnz
sbb
dec
pop
mov
xor
push
push
rcrl
rcrl
xor
rolb
rsqrtps
out
mov
push
call
jns
jl
outsl
outsl
cmp
mov
xorb
cmpsl
xchg
filds
mov
inc
sti
pop
aaa
mov
je
repz
repnz
dec
rcrl
mov
mov
dec
jge
fistps
jnp
fs
daa
mov
bndstx
push
test
pop
shll
or
jmp
mov
cmc
jge
shll
daa
jnp
or
test
sbb
dec
xchg
push
sub
insb
fidivl
push
xor
sub
jbe
and
fisttpll
test
outsb
xchg
clc
loop
jle
mov
int
push
es
xchg
jg
jne
xor
call
jecxz
mov
sub
scas
or
push
jge
js
in
cmpb
out
cs
xchg
mov
jle
call
cmp
jg
rorb
pop
cmpsl
pop
adc
pop
jb
pop
sbb
fst
sbb
outsl
mov
popa
xlat
sub
out
sub
mov
rcrl
push
insb
decl
ret
mov
jg
inc
xchg
icebp
out
mov
sub
cmp
push
pushf
icebp
jns
pop
out
add
loop
icebp
pushl
inc
jecxz
test
mov
and
fists
cld
rcrl
mov
cli
loopne
mov
add
data16
mov
mov
rol
test
push
push
jo
aaa
pop
dec
test
scas
push
ss
scas
mov
mov
xor
pushf
or
movsl
inc
add
cli
adc
aad
cmpb
mov
dec
fdiv
aas
or
push
push
ss
pop
ret
stos
inc
dec
mov
cltd
fdivl
push
pop
inc
mov
cltd
cmp
jbe
adc
or
mov
or
cmc
ljmp
enter
cli
and
mov
arpl
jge
xchg
adc
rol
inc
es
adc
push
inc
sub
imul
sarl
out
rcl
or
mov
out
arpl
push
in
test
jno
mov
lods
sarl
clc
xchg
cmpsl
ja
pushf
fisttpll
xor
jmp
in
inc
fwait
and
sbb
xor
and
sahf
xchg
inc
icebp
pop
push
mov
in
adc
dec
out
sbb
xchg
lret
cmp
mov
mov
xchg
test
sti
mov
stos
cmpsl
jne
and
push
push
enter
push
imul
scas
add
xchg
rol
cmc
stos
pop
cmp
mov
fidivl
lcall
lret
pop
jl
mov
popf
cmp
push
lods
adc
mov
cltd
fidivl
lods
pop
daa
push
js
or
push
jnp
lcall
mov
jg
subl
inc
sub
movsl
mov
cmp
outsb
xor
xchg
ret
xchg
jmp
shll
imul
jno
jge
test
std
dec
push
or
inc
repnz
ret
inc
jle
sub
xchg
not
out
jb
mov
lods
xlat
mov
inc
jb
in
and
cmc
xor
dec
scas
sub
inc
stc
push
ljmp
into
adc
fstps
xor
or
aaa
loop
add
fistpll
inc
sahf
mov
gs
icebp
popf
mov
sar
aad
leave
mov
dec
adc
jno
fisubs
jo
xor
mov
scas
jbe
pop
stc
push
jo
jo
cwtl
mov
xchg
inc
pop
imull
push
sub
or
add
and
repz
adc
sbb
mov
mov
push
mov
pop
mov
lret
test
mov
mov
jp
lods
test
nop
sbb
push
addr16
inc
popf
dec
adc
cli
inc
aad
mov
inc
cmpsb
enter
inc
inc
and
mov
and
pop
shlb
fsub
movsl
or
pop
dec
dec
mov
push
add
adc
or
cmp
jbe
scas
test
pop
in
pushf
in
cmc
mov
cmp
std
out
dec
enter
or
sub
mov
xor
mov
adc
xchg
mov
loop
and
out
imul
sub
rcrb
movsb
sbb
push
fdivrl
icebp
mov
push
adc
loop
inc
xor
aam
sub
shlb
fwait
sbb
fbstp
pop
mov
adc
cwtl
pop
push
lods
and
mov
pop
shlb
lcall
aas
movsl
fisttps
int3
les
daa
adc
inc
push
aaa
test
outsl
mov
subl
inc
aam
sbb
es
insb
push
testl
ds
sub
fwait
notl
adcl
mov
decb
inc
and
or
aaa
or
loope
add
ds
push
arpl
out
or
ds
sbb
leave
inc
xor
bnd
or
sahf
ficoms
pop
xchg
mov
dec
cmpsl
repz
jmp
fdivrs
iret
and
pop
es
je
cltd
leave
sahf
rcpps
ret
jns
or
rclb
aad
jecxz
fildl
ret
imul
pop
int3
stos
jle
aam
push
test
sbb
inc
scas
testl
insb
outsl
scas
cltd
or
mov
and
es
push
push
push
sbb
clc
jbe
jg
test
shr
lods
out
addr16
cli
aad
mov
fadds
das
push
push
outsl
dec
cmpb
loope
inc
mov
mov
test
push
loope
and
jmp
sahf
in
lret
or
inc
jecxz
lods
inc
mov
aaa
out
or
inc
and
ja
adc
aad
fldcw
dec
jl
out
mov
jmp
hlt
mov
test
sub
mov
sub
dec
xor
lods
les
std
sahf
stc
dec
loop
jg
outsb
shrl
inc
aad
dec
gs
out
or
sbb
fstps
push
add
cli
rorb
leave
dec
les
push
inc
ret
fs
stc
insb
mov
adc
push
and
call
in
mov
pop
jmp
ret
cmc
loope
add
mov
repz
adc
pop
cltd
sub
sbb
fwait
aam
pop
mov
dec
adc
aaa
outsl
imul
and
shlb
xchg
mov
sub
repz
push
sarl
cmp
std
popl
adcl
or
push
push
pop
mov
add
dec
mov
xchg
mov
mulb
shlb
xor
cmpsb
imul
jl
fstps
pop
pop
shr
push
adc
mov
jp
mov
clc
pop
addr16
push
jmp
mov
jg
cmpl
mov
xchg
sub
es
pop
mov
scas
dec
and
loop
ret
lods
push
dec
xor
test
pop
or
add
out
and
das
pop
ficoms
repz
movsb
movsb
aad
jno
aad
ljmp
adc
jb
ss
jno
mov
ficoms
push
gs
pxor
adc
xlat
inc
inc
loope
rcrl
sbb
push
fidivs
or
mov
cmpsb
push
pop
mov
mov
cmp
sbb
iret
dec
imul
jp
fucomip
add
mov
sub
mov
inc
mov
push
fidivl
sbb
xchg
jmp
popf
add
pop
sub
xor
in
inc
mov
add
cmpsb
dec
cmpsl
inc
in
mov
cmpsl
stos
js
ret
mov
loopne
push
mov
fstpl
cmc
or
in
lahf
xchg
and
add
icebp
xchg
mov
mov
mov
inc
push
jecxz
push
mov
xchg
je
cmp
xchg
jnp
js
jl
lods
roll
mov
mov
lahf
mov
lahf
mov
leave
loop
int3
sbb
dec
imul
mov
mov
scas
push
pop
les
iret
mov
rcll
inc
out
mov
mov
test
ljmp
int
outsb
pop
movsl
shl
stos
xor
shld
xor
inc
pop
push
cmpps
roll
scas
inc
sbb
sub
adc
dec
jb
sbb
lea
dec
gs
or
add
popa
rcr
std
popf
loope
adc
cs
pop
pop
xchg
mov
stos
or
loopne
pop
mov
es
jnp
hlt
push
leave
repnz
lret
in
xor
shr
loop
push
insb
mov
pusha
outsb
sbb
cld
cwtl
out
xchg
lret
adc
push
mov
arpl
sub
daa
iret
adc
lods
push
repnz
push
mov
das
or
cli
movsl
ja
stos
adc
xchg
xchg
stc
loop
cmp
outsl
ds
xor
sub
xor
out
int3
clc
cli
stos
rorl
adc
lds
mov
xchg
test
movsl
and
mov
sbb
cld
icebp
mov
pop
push
sub
in
popa
inc
ffree
mov
outsl
push
imul
dec
cs
sahf
jns
xchg
imul
pop
mov
mov
pop
int
sarl
test
mov
pop
sbb
repz
mov
mov
inc
hlt
xchg
mov
in
jo
or
or
bound
pop
sti
ret
push
xor
inc
call
pop
and
clc
mov
out
fstpt
clc
outsb
or
ficomps
lea
sbb
mov
cmpsb
pop
add
icebp
xchg
or
ror
loop
jo
aad
pushf
push
mov
xor
push
cmpl
mov
pop
mov
mov
adc
add
cs
scas
pop
add
push
aaa
xor
call
repz
mov
push
mov
or
arpl
cld
and
fimull
rorl
jp
xor
out
add
xor
inc
cmp
pop
mov
sarl
in
add
cmpsb
scas
movsb
repz
xchg
shrl
add
js
popl
lret
mov
xor
subl
mov
inc
push
cmp
lret
pop
lcall
adc
ss
outsb
movsl
mov
mov
test
push
loopne
mov
fdivrs
int3
shlb
mov
cmp
or
mov
aas
add
movd
test
arpl
sub
insb
or
dec
mov
add
outsb
imul
inc
mov
ror
sub
mov
mov
daa
cmpl
js
insl
and
jbe
mov
pop
push
push
pushf
and
xor
test
jo
inc
leave
imul
lcall
cld
xor
mov
jmp
and
add
fstpt
mov
fmul
dec
inc
nop
rcrl
dec
jle
outsb
or
mov
popf
pop
mov
sub
cmpsl
icebp
mov
add
mov
mov
es
fdivrp
xchg
sahf
jecxz
adc
jae
sarl
daa
dec
push
call
fsubrs
sub
decl
les
scas
and
sahf
pop
test
jle
fcomps
mov
xchg
imul
push
pop
cmp
mov
bound
xchg
adc
push
dec
mov
mov
inc
fdivr
subl
add
mov
jecxz
lahf
jmp
cld
popa
lcall
adc
push
repnz
movsl
jp
dec
inc
push
push
scas
jnp
sub
sub
jecxz
cmpsb
rcrl
or
xor
dec
ljmp
test
stos
ret
lcall
cmp
or
adc
inc
lahf
mov
inc
or
sub
stc
imul
fcmovne
sarl
in
lret
ret
xchg
push
or
mov
nop
pop
lahf
or
ret
nop
repnz
enter
cmpsl
aad
ret
xchg
mov
stc
mov
jge
sbb
mov
mov
mov
fidivl
mov
and
pop
mov
test
repz
fwait
inc
outsb
jle
mov
pop
pop
sbb
gs
ret
fisubrs
xchg
push
call
cmc
sti
in
rcr
jbe
mov
xchg
cmp
push
ss
jp
mov
int3
jnp
push
bound
pop
xchg
fimull
pop
stos
fs
xor
mov
pusha
inc
loopne
cmp
gs
test
adc
jnp
pop
push
sbb
dec
testb
sahf
pop
inc
mov
jae
mov
test
fistl
pop
and
push
fwait
mov
popa
mov
mov
push
jno
into
sbb
mov
jmp
lret
jbe
test
jmp
inc
cs
push
sbb
and
jbe
ja
sarl
imul
dec
in
arpl
push
inc
pop
imul
lods
call
push
pop
mov
cmp
cmp
ss
movsb
dec
mov
movsb
jne
ja
sbbb
int3
jns
push
mov
cs
xor
push
nop
les
mov
out
or
repnz
dec
jl
mov
dec
lods
push
out
add
pop
and
outsl
or
pop
mov
pushf
push
adc
mov
sbb
adcb
inc
push
sbb
mov
imul
mov
xchg
push
sub
cmp
dec
jp
sahf
scas
push
mov
xor
fnstcw
pop
sti
xchg
add
dec
push
push
mov
in
adc
ja
jno
sub
stc
je
xchg
mov
lds
mov
inc
int
sub
cmp
jl
and
xor
add
xchg
jg
fsubl
mov
mov
mov
lds
addr16
jg
cmp
inc
xor
cmp
pop
cmp
fisttps
sbb
pop
cmc
test
stos
sub
cmp
dec
pushl
insb
mov
inc
xchg
pop
pop
rorb
in
cmpsl
pop
incb
out
out
fsubrp
jne
aaa
push
adc
cmp
xor
jmp
ss
jo
push
leave
adc
mov
push
mov
int
push
cli
out
sbb
fcoml
jno
adc
inc
in
lods
les
jmp
dec
push
pop
push
in
sahf
cltd
sub
pop
add
inc
inc
jmp
ds
or
jge
push
cmp
cmpsl
xchg
pushf
in
dec
pop
in
mov
loopne
push
jp
inc
fisttps
and
cmp
bound
outsb
int3
loope
push
sarb
clc
sub
mov
sub
dec
ja
mov
sub
pop
and
pop
addr16
sarb
call
sub
call
ret
ficoms
cmp
mov
or
fnsave
addb
xor
in
add
pop
jmp
nop
fnstcw
mov
sub
fldt
dec
movsb
rclb
mov
adc
jmp
in
or
jo
dec
lock
gs
fsubrl
mov
sub
sub
scas
ror
xchg
dec
xchg
daa
and
rcl
and
out
push
outsb
add
add
movsb
cltd
mov
push
subb
mov
pop
sbb
dec
sub
rcrw
pop
add
jnp
je
repnz
sub
push
cmp
int
addr16
in
jle
cmp
xor
sarb
enter
out
xchg
dec
push
or
xor
push
mov
dec
add
and
cmp
pushf
in
fmull
lret
leave
or
cmp
dec
sbb
or
cli
sub
out
xchg
lock
loope
leave
mov
inc
inc
out
add
das
or
add
imul
sub
push
adc
dec
ror
add
sub
xchg
popa
push
inc
jne
cmp
mov
in
mov
or
gs
stc
out
and
add
in
or
add
out
cmp
fs
mov
popf
push
inc
cltd
cmp
outsl
push
aad
jg
jno
hlt
call
shll
jl
bound
pop
dec
clc
sbb
iret
xor
sub
ret
dec
dec
pop
stc
sub
fsubrs
add
aas
sub
out
out
insl
sbbl
jp
inc
test
loope
mov
adc
mov
pop
ds
dec
pop
inc
adcb
das
cs
xor
popf
test
call
insl
call
push
addr16
cmp
inc
inc
pop
jp
pop
test
mov
int
stc
adc
jnp
push
loope
andl
loop
adc
inc
test
and
ret
daa
popf
cmp
js
ja
push
out
and
fwait
das
add
mov
dec
pop
mov
fcom
loopne
insb
and
push
icebp
sbb
rolb
adc
xchg
xchg
pop
adc
mov
fnstenv
hlt
insb
jb
pop
outsb
outsl
adc
cld
js
fcompl
cmp
cmpsb
sub
pop
push
mov
push
leave
cmp
push
push
cmp
xchg
test
mov
in
popf
fs
fstpl
std
adc
push
scas
jp
lahf
jge
dec
jae
pusha
fildl
adc
adc
cltd
jl
adc
lods
test
mov
push
dec
xor
xchg
and
push
push
and
inc
and
dec
cs
aas
mov
rorl
hlt
fnstenv
fsubl
sbbb
sbb
rorb
jp
in
mov
pop
sub
cld
pop
push
bound
sarb
in
lret
inc
mov
outsl
xchg
push
xchg
mov
xor
outsb
repnz
inc
xor
je
fiaddl
repz
ss
mov
popa
adc
pop
std
sub
idivl
shll
lret
cmp
dec
pushf
lods
js
loop
sbb
dec
out
sarb
add
xchg
push
outsl
pop
jg
sbb
popf
jae
cmp
jae
ss
ja
testl
repnz
mov
mov
hlt
sub
inc
in
cmp
cmp
mov
or
jge
dec
call
popf
cltd
pop
xor
xchg
sbb
adc
sub
mov
lcall
jmp
push
mov
in
jae
scas
xchg
repz
pop
and
arpl
ret
leave
mov
pusha
lea
mov
add
roll
jno
insb
jp
mov
call
insb
xor
fadds
cld
les
psubusb
push
xchg
add
in
movsl
mov
cmp
sbb
jbe
adcl
stc
pop
pop
xor
and
xchg
adc
mov
out
pushf
or
xor
push
and
int
test
lods
sbb
mov
stc
push
push
adc
inc
movsl
jmp
hlt
inc
mov
mov
in
rcr
fwait
cmpsl
out
sbb
lea
mov
xor
mov
fwait
pop
push
inc
aas
pop
imul
shll
push
das
sub
xchg
pop
shrl
xchg
sbb
pusha
scas
jg
mov
and
push
stos
stos
and
push
jne
in
mov
jbe
jne
je
jno
adc
pop
in
mov
dec
icebp
pop
cmpsl
xlat
jo
es
inc
mov
mov
or
js
xor
pushf
push
movsb
xorb
lcall
lods
jb
stos
add
filds
sub
lret
add
scas
mov
adc
in
ror
shrd
adc
push
mov
lret
stc
outsb
cmp
addr16
add
in
mov
inc
xchg
in
jnp
adc
sbb
jl
out
xchg
popa
push
jecxz
mov
dec
inc
stc
std
mov
sbb
rclb
enter
ret
lret
insb
pop
adc
sbb
ja
in
mov
cli
jo
cld
aam
lds
pop
push
pop
adc
aaa
sbb
jo
sbb
cwtl
pop
push
aad
dec
sub
leave
ja
addl
pop
sub
outsl
loope
xchg
push
leave
xchg
mov
test
stc
in
and
adc
lods
xchg
into
out
sub
and
shll
les
mov
dec
jne
xor
xor
dec
dec
jae
add
dec
adc
mov
das
sub
out
scas
cmpsl
bswap
movsb
test
mov
sbb
lock
cmp
mov
xchg
pop
and
sbb
dec
push
pop
add
aam
aam
mov
or
adc
jmp
push
frstor
scas
sbb
imul
lea
aad
cmp
in
sarb
jbe
pop
mov
jbe
and
dec
jl
hlt
dec
fs
pop
popf
add
outsb
fistpl
lahf
into
jmp
push
ret
jp
cwtl
int
mov
and
push
in
mov
mov
push
or
push
in
bound
xchg
in
sub
shlb
lret
pushf
xchg
mov
ljmp
insl
add
movsb
sbb
push
aad
mov
fmuls
mov
cmpsl
mov
sbb
dec
and
nop
repnz
xchg
sbb
fisubs
jno
loope
push
jg
sbb
add
out
inc
fmull
out
push
je
mov
mov
rorb
push
sbb
pusha
push
mul
mov
in
mov
sub
test
sbbb
ljmp
data16
sbb
jne
or
jb
xor
xor
ret
pop
xchg
push
sub
andb
mov
ljmp
ret
fs
loope
mov
pushf
sbb
sbb
insl
xchg
or
xchg
adc
int3
add
or
movsb
mov
jp
cmp
pop
stos
dec
or
inc
fs
mov
push
sbb
fdivs
jno
xorl
fwait
inc
cmpsl
xchg
test
inc
mov
cmp
dec
fwait
or
movsb
inc
lods
repz
push
cmpsl
cmpsl
idivb
js
mov
mov
test
icebp
and
xchg
inc
je
push
dec
nop
dec
test
sub
in
int
add
jp
in
lods
and
pop
adc
mov
xor
inc
jmp
outsb
movswl
dec
repnz
cwtl
jnp
negl
sub
lods
fnstcw
mov
fsts
les
ret
and
cmpsb
mov
xor
or
lcall
jge
ss
lods
call
imul
adc
stc
inc
pop
mov
sbb
cmp
outsl
pop
aas
mov
and
fsubs
or
jb
ss
pop
xchg
inc
mov
inc
push
jno
repz
ret
mov
sub
inc
scas
sub
out
xor
bnd
or
dec
loopne
ret
inc
fstl
shld
jge
lods
push
push
stos
lret
dec
lea
pusha
jnp
pop
push
aad
lds
or
movl
xchg
stos
pushf
dec
in
imul
sbb
movsl
push
push
inc
mov
inc
movsb
add
dec
test
int
pop
jne
add
cltd
popf
repz
inc
add
popf
out
in
xchg
adc
mov
pop
scas
cmp
pop
mov
mov
cmpsb
rorb
and
out
xor
fbld
push
inc
stos
shlb
shlb
cmc
lock
imull
cld
sbb
shlb
jns
or
mov
and
jl
loop
je
stc
push
jl
push
dec
lea
int3
insb
roll
fwait
pusha
add
mov
movb
lea
fiadds
fistpl
inc
xchg
and
xlat
push
jecxz
imul
out
inc
aad
fwait
mov
lahf
test
adc
jmp
and
int3
cwtl
mov
scas
add
psubb
out
add
add
cli
pusha
pop
arpl
test
inc
pusha
dec
push
lods
fucomip
dec
dec
jne
sub
popa
pop
filds
scas
push
adc
and
inc
into
lcall
mov
cli
or
data16
adc
jge
call
push
ljmp
mov
loopne
cmp
inc
push
out
ret
fistl
add
mov
insl
aam
mov
das
add
inc
adc
movsb
jae
aam
xchg
sub
jp
out
fwait
sbb
les
dec
pop
je
dec
test
fmull
jns
xchg
imul
xchg
je
cmp
xor
imull
xchg
loop
ret
sbb
mov
jbe
je
insl
jo
xchg
out
lcall
mov
inc
and
mov
add
fdivp
mov
pop
mov
xchg
mov
xor
fdivs
mov
lods
xchg
in
lcall
icebp
cld
in
mov
aas
add
cmp
out
inc
adc
pusha
aad
jno
mov
insb
sub
jnp
mov
scas
pop
mov
lahf
push
sarl
iret
push
mov
adc
xor
cmp
push
sbb
jb
mov
jp
mov
pushf
inc
sbb
mov
cs
movsl
fstpl
and
mov
xchg
and
jns
stc
jecxz
in
jno
pop
xchg
mov
jle
dec
lcall
fbld
mov
xchg
popa
nop
loopne
and
fnsave
adc
push
mov
aas
movsl
rclb
pop
ss
jbe
or
inc
lret
outsl
or
flds
or
mov
out
gs
aaa
lcall
mov
fcmovnbe
loopne
push
mov
sqrtps
jle
insl
insl
call
inc
sti
in
fs
cmpsb
pop
lds
pop
dec
or
bound
cs
insl
jmp
pop
mov
ret
add
test
jo
popa
aas
xchg
xor
lret
stos
cmp
lcall
daa
shrb
mov
xchg
cmp
jmp
loopne
xor
mov
and
sbb
clc
lods
xchg
mov
stos
lahf
push
xchg
pop
insb
add
xchg
sbb
test
aam
mov
xor
not
add
out
xchg
push
jnp
and
dec
push
lds
dec
fsubr
mov
inc
jnp
or
xlat
int
xchg
lods
jmp
sahf
out
mov
inc
jmp
aaa
cmp
js
stos
mov
xor
mov
pop
xchg
jle
add
jbe
ljmp
popf
dec
push
sbb
movsl
sub
iret
repnz
gs
iret
insl
jmp
shl
bound
xchg
jno
lock
cs
in
xchg
fdivl
sbb
lods
pop
addl
cmp
shrl
adc
js
sahf
cmp
std
xor
stc
loopne
add
pop
sbb
icebp
or
popa
test
xor
inc
sti
jge
mov
pop
out
ret
fs
hlt
rcrb
das
jbe
insb
inc
leave
mov
sub
pop
inc
and
jge
leave
cmp
test
cli
scas
stos
jg
movsl
mov
sbb
out
mov
push
or
mov
addl
outsb
popa
dec
jge
or
dec
test
andl
sub
lret
subl
xchg
sub
mov
xchg
add
xorb
aam
mov
inc
jne
fiadds
ret
push
or
and
adc
mov
cmp
dec
fcoms
dec
mov
push
xchg
outsb
mov
dec
nop
adc
les
sbb
push
fdivr
mov
lds
mov
fucomp
ja
xchg
test
pop
xor
dec
rcrb
mov
dec
lret
push
int3
data16
mov
dec
repz
inc
xor
je
pop
popa
push
pop
stos
jmp
adc
out
std
aaa
inc
push
jae
mov
xor
mov
sbb
xchg
jne
sbb
fisttps
cmp
pop
loope
push
fmuls
add
movsb
loope
mov
cmp
sbb
sahf
lea
mov
stc
imul
incb
pop
xchg
mov
push
adc
pop
in
cmc
addr16
fdivs
loopne
fcomps
xchg
mov
insb
sub
sub
sbbb
xchg
fmull
cmp
sub
dec
cmp
insl
test
cld
dec
and
outsl
push
sbb
std
xchg
sub
xlat
fldenv
loop
in
cwtl
pop
push
stc
sbb
add
and
hlt
push
xor
pop
or
jbe
and
xchg
div
loope
inc
gs
gs
shr
jle
sub
cmpsb
xor
xchg
mov
mov
aas
or
pusha
jno
xchg
cmp
lods
clc
sbb
ljmp
jg
push
incl
outsb
cli
adcb
inc
lods
scas
sahf
push
sbb
sub
or
mov
pop
testl
mov
jnp
jecxz
mov
add
ds
mov
push
gs
mov
xchg
mov
mov
inc
inc
jg
dec
test
jle
pop
outsb
xor
mov
jnp
lods
scas
or
mov
dec
imul
mov
sub
jmp
mov
test
nop
repz
xchg
es
and
test
add
frstor
shrb
pop
cmpsl
sbb
push
xchg
inc
das
testl
mov
adc
dec
pop
xchg
in
push
shll
es
adc
daa
pop
or
pop
cmpl
mov
sub
ret
xor
sub
out
daa
mov
icebp
mov
and
or
lret
stos
push
std
iret
or
cmp
mov
pop
js
xor
dec
cmp
rorb
int
mov
dec
lods
and
sbbb
and
pop
aad
jle
mov
in
daa
push
int3
jmp
les
dec
adc
popf
push
cmp
das
cmp
dec
xor
jno
sbb
mov
mov
jg
es
clc
arpl
daa
inc
clc
cld
adc
addr16
pop
imul
test
lods
les
aas
nop
add
ret
das
icebp
push
inc
inc
mov
jo
imul
mov
adc
mov
add
outsl
nop
enter
leave
lret
or
fincstp
jae,pt
test
xlat
psubw
sti
shlb
movsl
mov
aam
ficomps
bound
sbb
and
sbb
fadds
nop
push
adc
mov
mov
dec
enter
rcrb
xor
lret
jnp
fisubrl
mov
sbb
out
gs
xchg
sub
ffree
lcall
cwtl
add
imul
jmp
jmp
sarl
int3
jp
je
push
leave
fsubrl
xchg
rorl
lcall
xor
sub
sub
xchg
mov
xchg
pop
aas
lds
xor
or
mov
xor
out
adc
addr16
or
cmpsb
cmpsb
mov
pop
ror
cmp
popa
sbb
cld
fwait
or
ja
in
outsl
cltd
push
cmp
sub
orb
sahf
stos
jecxz
mov
push
scas
inc
dec
mulb
test
repnz
mov
outsl
dec
lea
shrl
into
jl
les
jbe
mov
push
xor
lcall
cmpl
out
testb
or
pop
insl
sbb
ret
pop
das
mov
arpl
mov
adc
shl
add
sub
movb
push
inc
insl
cmpxchg
adc
push
jle
and
adc
sbb
hlt
lcall
out
xchg
rolb
and
call
cmp
sbb
int
iret
mov
pop
lcall
call
pop
sub
imul
sbb
mov
fnsave
mov
mov
aam
jne
and
nop
or
in
int3
push
mov
and
mov
lock
mov
mov
sub
je
lcall
ss
sub
out
hlt
ljmp
jle
iret
sbb
mov
fcoms
jo
mov
bound
sti
data16
test
mov
out
int3
xor
jecxz
push
or
scas
cmpsl
ret
test
leave
mov
or
cli
fistps
cli
js
movb
ret
push
pusha
jo
pop
xchg
fcom
lret
mov
mov
sbb
out
xlat
adc
pushf
add
mov
cmp
push
xor
jbe
sbb
add
sub
push
mov
out
inc
mov
inc
outsl
movsb
cmp
pop
data16
sub
ret
cmc
ss
xchg
xlat
dec
cmc
outsb
mov
sti
and
out
inc
mov
inc
inc
or
rol
js
mov
scas
mov
mov
jae
sahf
popf
in
mov
stc
push
xor
in
xchg
dec
orb
loope
popa
out
xchg
je
out
mov
aaa
cmp
cmp
push
out
push
push
jp
out
fcom
clc
test
push
js
push
mov
sub
xchg
repnz
inc
jne
jl
pop
sub
pop
aad
jns
insb
and
lods
mov
jecxz
adc
sbb
xlat
inc
jne
rorb
in
add
rol
sub
pop
xlat
jmp
and
aad
fildl
cmpsb
sahf
sahf
ret
inc
fstp
jp
std
lret
outsb
aas
sbb
xchg
iret
pop
mov
and
cmp
cs
adc
adc
ret
lcall
add
jae
lcall
inc
add
mov
mov
nop
cmp
or
push
xchg
mov
and
cmp
mov
and
fldenv
mov
push
xchg
mov
mov
adc
or
and
push
bnd
sub
enter
incl
cmp
aaa
push
jmp
jmp
stc
jb
cld
sub
pop
push
xlat
cmp
and
jg
pop
xor
pop
ss
push
and
shrb
jg
cmpsl
sbb
jg
xchg
loopne
cmp
and
arpl
aad
mov
cmpsl
daa
stc
ljmp
je
xchg
mov
insl
sub
or
or
insb
xchg
ficompl
fcmovnb
sbb
pop
mov
pop
fadds
inc
int
xor
mov
dec
stos
add
subb
xor
stos
inc
or
cmp
adcb
mov
lea
sub
push
rcl
inc
sbb
mov
in
push
lods
or
adc
jb
cwtd
sbb
add
push
push
pop
dec
or
jle
cmp
js
in
pushl
xor
lcall
add
icebp
sbb
sub
xchg
aad
xchg
test
dec
mov
jp
jl
mov
pop
and
pusha
mov
ljmp
out
insb
cmp
pushl
dec
lods
stos
lods
fyl2xp1
inc
sbb
fadds
icebp
mov
jmp
shlb
insb
rcll
sub
and
push
sbb
enter
fcoms
inc
or
clc
sub
int
jne
sti
and
or
push
lock
sahf
dec
jmp
bound
shll
sub
fnstsw
jo
movsb
test
pop
xor
push
xor
push
dec
fmull
fdiv
stc
into
js
and
xor
aas
inc
sarl
inc
jg
cmpb
and
mov
test
cmp
movsl
pop
xor
orb
push
ja
xlat
xchg
mov
jg
mov
gs
mov
cs
cltd
pop
inc
cli
insb
mov
sub
jp
dec
xor
inc
inc
fdivrs
icebp
jg
jle
dec
mov
sbb
in
cli
fdivrl
popa
out
xor
hlt
xchg
mov
add
jecxz
out
sti
mov
push
mov
js
xchg
mov
into
lock
movsl
popf
mov
pop
shrb
inc
cmc
int
cmpsb
adc
mov
xor
out
add
fbstp
iret
dec
xchg
bound
mov
test
sub
jl
jle
lds
add
test
xchg
shrb
in
or
out
fdivrl
sub
mov
sub
mov
enter
dec
push
cltd
jb
mov
mov
imul
xchg
adc
int
and
add
fistl
or
mov
add
cli
dec
or
jns
adc
sub
or
fsts
rcr
aam
int3
or
and
outsl
aad
lock
sub
loope
scas
xor
sub
das
ret
inc
cltd
cwtl
and
xlat
repz
push
xchg
mov
popl
mov
negl
lcall
mov
scas
in
rolw
mov
cmc
stos
mov
mov
std
push
and
lret
repnz
mov
out
mov
dec
pusha
cmpsb
jl
call
jnp
inc
mov
ja
js
insb
ja
adc
iret
lds
dec
icebp
mov
mov
imul
ret
stos
sbb
add
or
jg
cmpsl
insl
fisttpl
mov
mov
cmpsb
ret
jne
cmc
dec
pop
push
mov
and
test
aas
xchg
pusha
push
bnd
clc
push
loop
add
dec
movsl
pop
lods
cmpsl
and
test
adc
add
hlt
cs
aam
jae
mov
fildl
xchg
test
daa
push
mov
dec
imul
xlat
lret
je
mov
xlat
pop
fs
sbb
and
stos
mov
xor
or
dec
push
ds
cwtl
ja
cs
mov
or
sbb
icebp
sbb
fsub
push
mov
dec
sahf
sbb
adc
out
jns
jge
sar
add
imul
push
ja
rcrl
cmp
leave
add
jle
xchg
adc
stc
cltd
push
int3
loop
dec
add
pop
insb
mov
jecxz
outsb
fidivrl
mov
fcompl
mov
xchg
push
pop
es
and
cli
dec
lcall
mov
sbb
imul
rcl
sbb
mov
pop
jmp
jb
test
mov
jbe
inc
push
addr16
xor
and
mov
jg
ds
stc
rcll
cmp
xchg
or
adc
xorb
mov
stc
int3
dec
subl
jo
xlat
xchg
jnp
sbb
and
mov
xorl
aaa
fucomi
test
aad
fwait
dec
dec
fstl
shlb
dec
jp
dec
push
call
mov
imul
sub
push
pushf
mov
sub
ror
das
add
mov
push
fwait
mov
aas
je,pn
add
movsl
mov
xorb
cmp
dec
sbb
pop
add
inc
aad
sbb
cli
ja
stos
data16
insb
xchg
push
mov
pop
shrb
shl
add
cmp
aaa
sbb
push
pop
push
mov
test
mov
sbb
icebp
mov
cmp
push
xor
lods
or
pop
shrl
out
js
and
fcomi
sbbb
mov
sub
sub
fstpl
ljmp
ljmp
imul
dec
push
repnz
add
inc
mov
flds
cmp
pop
test
mov
std
mov
insl
test
cmc
int
push
daa
movsl
mov
and
pop
lods
xchg
jmp
out
loope
xor
cmp
jge
pavgb
adc
push
jne
sbb
adc
dec
dec
xlat
push
in
rcr
insl
lock
xchg
data16
cmp
sbb
inc
pop
push
test
inc
imul
push
dec
cmp
js
and
ss
xchg
icebp
cmpl
dec
jnp
sub
outsb
cmpsl
sub
aam
cs
call
push
ja
sbbl
daa
inc
cwtl
push
adc
enter
xor
push
outsl
repz
ror
shrl
repz
push
rorb
mov
popa
pop
iret
sub
sahf
pop
xchg
pusha
pop
out
lods
or
aad
dec
lret
scas
out
fwait
idiv
test
divb
aam
jmp
mov
cmc
xor
dec
addb
push
or
and
ret
out
mov
mov
push
or
jno
and
subb
and
dec
and
jnp
adc
std
lret
sbb
mov
scas
xor
aaa
inc
xor
jne
loop
sahf
mov
or
push
nop
rcrb
inc
mov
aaa
cmpsl
mov
ficoml
xchg
stos
das
fnstsw
jae
lahf
std
in
dec
int
enter
jl
test
mov
sub
addb
and
iret
pusha
inc
aad
testl
dec
adc
aad
and
xchg
cmpsb
jl
and
xlat
stos
push
popa
fwait
and
add
cs
rcll
add
push
jl
mov
gs
push
and
sbb
ret
add
mov
xchg
sbb
imul
cmpsb
mov
cltd
imul
sarl
mov
adc
mov
adc
lcall
flds
adc
mov
aad
hlt
mov
jb
mov
lcall
xchg
adc
dec
lock
jp
mov
js
test
add
pop
stos
dec
and
mov
sub
popf
jae
jns
outsb
mov
cwtl
jns
out
mov
dec
or
push
pop
and
scas
mov
jg
jecxz
sbb
aam
push
push
xor
in
mov
sahf
fldl
test
ljmp
xor
jo
adc
movsb
lds
mov
std
aam
sbbb
sti
push
xchg
dec
daa
or
add
xor
jg
iret
gs
jb
inc
mov
sbb
add
mov
ret
adc
lret
add
std
sarb
inc
jb
arpl
jne
out
inc
sbb
insl
sub
push
adc
or
adcl
push
push
repz
sub
cmpsl
test
es
filds
out
popf
mov
repnz
bnd
xor
fs
jp
jmp
push
sbb
xor
jae
pop
xor
push
lret
push
pushf
out
sbb
adc
iret
mov
push
lods
js
lcall
or
rcrb
repz
sub
cwtl
lea
mov
add
mov
xchg
mov
out
daa
jns
popa
sar
cmp
cwtl
inc
pop
cmp
enter
and
push
jge
mov
pushf
aaa
pop
out
mov
fldcw
xchg
push
sbb
cmpsb
xor
int3
sti
jnp
test
and
cmp
dec
fsubrp
cmp
pusha
mov
push
fldenv
push
add
flds
aaa
mov
jg
sub
and
dec
out
pop
aaa
pushfw
repnz
fldenv
ljmp
mov
and
mov
push
cmpsb
mov
dec
dec
push
dec
xchg
test
lock
or
mov
mov
sbb
daa
out
pop
and
pushf
cmc
adc
or
inc
mov
inc
sbb
mov
stos
xor
mov
fisubl
fucomp
mov
mov
lahf
fdivr
sti
and
icebp
imul
jge
movsb
test
push
push
leave
dec
dec
popa
insb
lcall
movsl
pop
icebp
and
jmp
adc
xor
lods
aas
inc
iret
lret
enter
fstpl
mov
cmp
xchg
inc
xchg
and
dec
sub
jmp
push
mov
mov
xor
outsb
lcall
jno
sbb
xchg
sar
fsubrs
lcall
aam
pop
mov
push
dec
popa
adc
inc
call
adc
arpl
cli
push
pushf
xor
sti
fnstenv
sub
mov
shl
cmp
aaa
stos
movsb
out
stc
xchg
mov
mov
jae
sub
das
cwtl
inc
and
lods
jmp
lret
sbbl
xchg
aas
mov
add
and
inc
fldt
enter
jae
js
jae
into
aam
mov
out
pop
or
mov
mov
imul
add
add
add
outsb
pop
push
and
mov
es
sbb
pop
mov
xor
pop
sub
mov
push
scas
mov
or
jl
popf
pop
outsl
mov
mov
insl
or
sbb
shlb
mov
lret
adc
int
dec
sub
sarl
jp
jae
ds
movsl
add
mov
inc
loope
enter
lods
push
dec
or
xor
gs
cmp
mov
leave
pop
mov
mov
mov
adc
pop
orl
mov
lods
test
aad
jns
rolb
or
les
movsb
add
xchg
mov
push
dec
xor
imull
push
std
scas
sbb
xchg
xor
sahf
push
imul
mov
push
sbb
dec
push
sbb
push
pushf
lds
mov
pop
adc
or
int3
cmp
out
lea
pop
xchg
out
inc
mov
jge
mov
xor
mov
xchg
int3
mov
xchg
sahf
jmp
dec
push
cld
negb
out
ror
mov
pusha
leave
cmp
jle
push
mov
daa
xor
iret
dec
mov
mov
in
inc
adc
inc
test
imul
lret
pop
mov
int
pop
negb
out
push
cmp
cmp
jo
inc
iret
sarb
imul
xor
sarl
ds
aam
jno
pop
add
es
pop
les
lahf
jbe
mov
shrl
loopne
pop
stos
in
cmpsb
cltd
inc
and
lahf
xor
scas
je
cld
mov
mov
cmp
and
add
cmp
rcl
sub
and
sbb
repz
outsb
hlt
dec
fistpl
mov
fists
fs
movsb
mov
xor
add
adc
je
or
push
add
sbb
cmc
push
cmc
subb
mov
js
pop
cmpsl
ret
stos
jge
cmp
add
gs
mov
xor
jle
cmpsl
enter
and
subb
outsb
mov
fucom
sahf
adc
dec
aad
in
push
cmpsl
out
xchg
push
insl
pushf
add
je
and
mov
xchg
cmp
pushf
add
add
push
mov
gs
test
icebp
jp
and
sub
in
jno
and
mov
jns
pop
mov
pop
pop
lret
jp
push
sub
movsl
pshufw
scas
leave
negl
jle
mov
xor
xor
lret
call
or
cmp
mov
js
inc
push
or
xor
mov
into
lea
xchg
sbb
push
out
rcrb
pushf
and
out
outsl
dec
insb
clc
push
subb
and
pop
push
xor
mov
jl
ja
and
jle
add
mov
xchg
sahf
xor
cwtl
push
push
pop
sbb
shll
movsl
jo
pop
sti
iret
popf
add
adc
test
ret
adcb
fisttpl
and
aam
mov
les
test
mov
fisttps
or
jmp
aas
xchg
xor
ss
addb
rorb
orb
addl
cli
cld
push
fnstsw
enter
orb
sahf
lods
cli
pushl
jle
aas
shl
push
and
test
enter
mov
add
icebp
dec
xor
jge
cld
fwait
adc
push
out
dec
test
lahf
mov
nop
push
pop
out
push
es
out
mov
dec
add
vcvtsi2sd
test
ret
xor
mov
les
jnp
in
push
sub
add
push
faddl
movsl
dec
pop
mov
or
sub
xor
test
xor
int3
leave
mov
iret
xchg
xor
jle
stos
fnsave
jmp
call
test
cmp
fsubr
jnp
cmpb
push
stos
jno
cmp
jnp
mov
xchg
outsl
mov
pop
xchg
outsl
pop
les
imul
mov
adc
mov
sbb
in
adc
jb
repnz
sbb
sar
sbbl
pusha
or
jns
test
std
add
inc
data16
insb
aas
mov
clc
dec
scas
lods
test
out
mov
scas
icebp
jns
inc
scas
adc
dec
lock
mov
paddw
addl
in
and
lahf
das
xchg
fldt
sar
cmp
outsl
or
out
shlb
xorb
idivb
or
gs
xor
fdivs
push
mov
scas
arpl
cld
jb
out
out
in
jno
test
push
push
shrb
outsl
mov
addr16
dec
neg
out
jae
ret
xor
outsl
fldcw
push
stos
shrl
add
xor
int
cmp
bnd
pusha
jl
fimull
test
stos
rolb
pusha
insb
jbe
repz
xor
mov
and
xor
jns
jbe
rcrl
jb
xor
xchg
push
jmp
jle
fwait
out
push
mov
mov
out
ret
cs
out
rcrl
lock
xor
insb
fs
lds
xor
icebp
add
pop
sti
mov
inc
movsb
fsubr
pusha
ret
stos
sbb
pop
push
xor
jo
mov
dec
jnp
dec
mov
loop
imul
sbb
aad
mov
sub
inc
fstl
adc
push
mov
push
jl
lcall
scas
cmpsl
dec
insb
call
stos
push
mov
out
xchg
xlat
sub
cmp
cld
insb
pop
stos
outsb
int
shll
leave
mov
mov
les
cmpl
fmulp
imul
jmp
push
sub
mov
push
and
out
or
fldcw
cmc
repz
ret
pusha
mov
pusha
pop
rcrl
test
sub
fwait
int
xchg
inc
and
aaa
add
mov
xchg
adc
andl
mov
lret
cltd
ja
push
and
cltd
popf
mov
push
aad
je
into
loope
out
adc
push
add
cmp
push
jmp
push
sbbb
stos
sub
jge
fxch
int
andl
xchg
imulb
push
adc
jne
xchg
mov
xchg
mov
push
xchg
gs
mov
scas
mov
sub
sahf
jb
aad
xor
mov
adc
stos
sub
jns
nop
inc
lret
push
add
es
jecxz
stc
shl
lea
xchg
inc
insl
jmp
lea
dec
test
loop
push
pop
jno
loopne
cld
imul
call
fcoml
cltd
adcl
lods
mov
fisubs
sub
pop
jno
sbb
mov
mov
inc
test
pop
sub
xor
stc
int
xor
clc
pusha
mov
lcall
and
into
push
decl
fidivrs
or
sbb
in
cs
adc
inc
lock
inc
mov
fcmovne
cvtdq2ps
adc
cmp
jge
outsb
push
stos
aaa
mov
xor
sbb
mov
mov
popa
pop
xor
cmp
in
pop
add
xorb
pop
push
mov
or
mov
out
shll
jb
es
cli
stos
sub
push
lods
ret
or
cmc
sahf
adc
mov
hlt
adc
dec
lods
ds
stos
push
jmp
mov
mov
aad
ds
dec
add
outsw
out
subl
dec
xchg
mov
xchg
lods
mov
xchg
popf
mov
fnstsw
push
sbb
mov
fptan
mov
sbb
mov
push
or
pop
pop
lds
xchg
cs
sti
push
push
fsub
cmpb
sbb
out
gs
andb
cmc
cld
shlb
mov
jo
lds
pusha
sub
xchg
mov
cmc
cwtl
roll
fstps
jmp
xor
rcl
fadds
xlat
pusha
je
out
jne
movsb
stc
sbb
mov
stc
stos
ds
mov
shll
adc
and
lods
and
sbb
mov
ret
in
sub
lcall
out
das
lock
cli
insl
push
adc
adcl
pop
pop
cmp
push
movsl
fstpt
ret
or
dec
inc
or
pop
in
clc
inc
sbb
cwtl
jl
add
shl
mov
xlat
insb
fidivs
imull
nop
dec
add
jo
mov
cmp
lds
fbld
jmp
movsb
lcall
or
jae
cmp
loopne
stos
fiadds
xchg
adc
std
jno
xor
orb
inc
icebp
ds
shlb
add
xor
cld
rcrb
or
in
pop
or
lods
fcompl
pop
sbb
rclb
popa
or
sub
call
out
push
mov
jno
shlb
mov
push
mov
movsl
fdivrl
or
scas
mov
cmp
popf
xchg
fwait
adc
test
fsts
add
stos
dec
sbb
addr16
push
pushf
adc
dec
sbb
push
mov
xor
xchg
in
xchg
clc
push
out
mov
and
mov
lods
xor
xchg
bound
xlat
inc
scas
sub
imul
jg
lahf
or
int
jo
dec
cmp
fwait
testb
je
mov
sbb
fisubs
mov
mov
stos
mov
adc
mov
cmpsb
add
push
xchg
sbb
addr16
in
add
popf
mov
dec
pop
cld
sub
cld
mov
gs
dec
in
repnz
adc
nop
adcl
cmpsl
pop
xchg
xor
mov
out
inc
out
scas
aam
pop
mov
mov
mul
jmp
pop
loop
pusha
cmp
mov
adc
mov
cmp
lods
pop
data16
icebp
imul
inc
fcoms
fidivrs
lods
xchg
repnz
fs
inc
repnz
xchg
roll
gs
sarb
adc
and
mov
aam
out
mov
mov
lock
imull
lods
movsb
push
loop,pn
push
cmp
cli
jae
dec
adc
adc
lea
lds
push
mov
add
xchg
and
mov
adc
jmp
aam
lods
push
mov
mov
sub
call
mov
ja
sbb
inc
mov
in
push
mov
mov
and
sahf
outsl
mov
inc
sub
add
add
sbb
sbb
cmp
es
and
xor
mov
rclb
mov
js
add
mov
sbb
aad
pop
rcr
je
icebp
cmovle
pop
les
sbbl
and
ud1
cmp
push
dec
dec
cs
adc
mov
xor
subps
repz
fisubrl
clc
jp
pop
adc
mov
insb
stos
mov
es
out
adc
ljmp
out
leave
xorb
ds
int
call
and
adc
sub
sub
int3
sub
clc
sub
sbb
stc
addr16
xor
push
lret
nop
and
cmpsl
push
mov
bound
mov
pop
pop
add
sub
ss
adc
or
in
mov
add
test
lahf
inc
sar
mov
xchg
and
push
subl
ljmp
dec
sbb
retw
aam
into
out
mov
ret
cli
and
xchg
mov
mov
popaw
in
enter
dec
push
stos
hlt
push
inc
shrl
in
add
or
int
pushf
and
cmp
jle
fwait
lods
sub
mov
daa
adc
cmp
call
jecxz
dec
and
jb
arpl
pop
fbld
jo
jbe
pop
cmp
cmp
test
xchg
cmp
icebp
pop
push
lahf
filds
xchg
mov
mov
jno
or
jnp
mov
jmp
outsb
jecxz
cmp
cltd
ljmp
cltd
popf
subl
jmp
xchg
int3
cmp
mov
ficoml
clc
xor
cmp
je
add
sub
rol
das
mov
pop
add
dec
in
dec
cmp
mov
repz
push
push
movsb
int3
jne
adc
lea
dec
inc
subl
je
loop
in
adc
jge
mov
pop
inc
loope
fsubrl
dec
xor
mov
movsb
in
add
int
lock
popa
jne
rcl
push
adc
das
cmpl
push
inc
lock
int3
mov
dec
lock
or
sub
movsl
pop
in
leave
mov
mov
sbb
ja
cmpsl
cmp
ret
mov
nop
shrl
jnp
fcomps
loope
imul
inc
inc
sbb
pop
xchg
mov
or
dec
repz
bound
xor
js
in
sub
enter
mov
pop
or
imul
inc
lret
in
aas
pop
mov
pop
jmp
xchg
xor
out
adc
add
mov
mov
movsl
cltd
cmpsl
mov
push
cwtl
mov
shll
pop
data16
out
inc
cmp
fs
push
and
lahf
pop
popf
push
jne
std
ljmp
and
fs
rolb
inc
dec
sbb
push
in
and
in
repz
shll
push
scas
mov
popf
rcrb
sub
mov
mov
jmp
xchg
add
andl
int3
or
sahf
rcr
pop
jae
fstpt
and
xchg
cmp
lcall
mov
divb
insb
cmpsb
int3
sbb
cwtl
xchg
dec
dec
les
push
in
in
mov
dec
dec
cmc
dec
inc
mov
jge
jae
cmp
push
dec
xchg
sbb
fdiv
mov
lret
or
das
jo
xchg
push
mov
popf
sbb
dec
xchg
or
jns
aaa
jl
nop
mov
pop
mov
jnp
dec
or
lahf
loopne
stos
and
inc
mov
icebp
negb
push
popf
subl
cli
in
push
mov
xor
out
sbb
aaa
int
addr16
mov
push
cs
insb
je
mov
pop
or
inc
sub
ficomps
roll
arpl
cmpsl
call
push
subl
mov
aas
push
adc
sub
mov
bts
cmp
sub
rorb
mov
mov
sbb
enter
js
push
cmp
dec
pop
pop
inc
cli
jmp
mov
cmp
int
or
outsb
fwait
sbb
add
insb
ret
and
adc
cmpsb
arpl
aad
in
gs
lret
push
cmpl
mov
pop
jne
loope
insl
lods
jbe
loopne
dec
pop
cwtl
jge
data16
aad
sbb
cwtl
repnz
bound
call
jo,pn
mov
mov
nop
and
xor
mov
add
aaa
ja
out
in
mov
jl
sti
decl
ret
sbb
pop
jmp
jecxz
out
pop
cmc
mov
cmp
fnstcw
xor
sub
adc
and
sub
sub
or
jp
stos
insb
add
cmp
in
xlat
cwtl
pusha
or
mov
js
jg
ljmp
xchg
daa
test
imul
mov
or
sahf
mov
iret
push
in
into
int3
pop
dec
shll
inc
sbb
mov
dec
push
pop
fsubl
outsl
mov
loope
test
ds
sti
or
push
adc
stos
fbld
out
push
inc
rcll
xor
fdivrs
jmp
imul
fmuls
and
cli
xchg
sbb
jecxz
roll
xor
dec
mov
gs
popa
sbb
or
fmul
add
push
daa
or
xor
push
addl
add
pusha
mov
jge
repnz
enter
lods
push
cld
pop
xor
jbe
insl
cld
lret
push
scas
dec
cmp
loop
jge
sbb
mov
fmuls
mov
mov
jns
orb
in
fwait
cwtl
mov
mov
in
or
push
addr16
lea
dec
or
aas
jae
aaa
daa
popa
sub
dec
fwait
sub
pop
push
jmp
pushw
stc
mov
ja
pop
jno
push
mov
loope
cmp
mov
stos
lret
outsb
scas
mov
mov
and
push
mov
add
fsub
xchg
dec
xchg
mov
add
minps
xchg
scas
ljmp
add
mov
imul
inc
mov
xchg
xchg
mov
and
jp
jns
cmpsl
jnp
xor
push
cmp
xchg
aaa
aaa
add
jmp
mov
add
or
mov
sti
popa
cltd
jg
test
xchg
jg
cmp
and
lcall
lahf
pop
fcmovnu
cmp
jmp
divb
xchg
mov
xchg
jno
ret
dec
hlt
mov
mov
jae
cmp
mov
cmp
mov
clc
cli
adc
mov
daa
pop
push
nop
mov
sahf
loope
mov
mov
movsl
fwait
push
icebp
in
das
adc
inc
popf
scas
mov
adc
sub
lock
out
lea
nop
pop
subl
jmp
lcall
rcrl
sub
push
sbb
dec
xorb
xchg
sti
add
add
push
add
sbb
ds
xchg
pop
xor
stc
and
outsl
or
test
dec
jae
cmp
data16
in
out
mov
insb
popf
ret
mov
jbe
inc
insl
lods
lret
jecxz
sti
sub
add
int
cmp
dec
pop
xor
dec
fistpll
divb
sbb
loop
mov
adc
outsb
sub
cmp
push
and
mov
add
add
mov
test
sub
and
mov
cmp
arpl
sarb
xchg
jae
and
es
fnsetpm(287
pop
insl
mov
orb
iret
dec
pop
push
mov
mov
sar
lods
lock
les
std
aas
jo
repnz
cmp
mov
dec
pop
out
sub
cmp
pop
add
fildl
addb
xchg
popf
sbbb
enter
mov
je
mov
xchg
cs
xor
loope
jmp
inc
lods
add
pusha
pop
push
stos
in
xchg
mov
insb
cmp
rcrl
xchg
ja
xchg
test
scas
loop
das
jnp
jae
push
cmpsb
scas
and
aas
mov
notl
loopne
movsb
ret
jb
mov
sar
mov
adc
lret
pop
rcr
sub
inc
arpl
add
cmpb
sbb
ret
data16
jb
mov
cmc
inc
add
fs
xchg
pop
mov
sub
add
dec
push
ficoms
lea
xchg
mov
sbb
sub
mov
inc
add
lahf
cld
push
add
fdivrl
popa
fwait
pop
fisttpll
jne
mov
adc
inc
pushl
xchg
lds
push
add
std
adc
mov
cmp
insb
adc
dec
es
movsl
xchg
jbe
hlt
cmp
add
imul
add
fdivrp
popa
push
mov
je
inc
lahf
imul
jb
nop
jle
test
dec
cli
cld
nop
fsubr
sahf
mov
or
lret
sub
icebp
pusha
mov
cwtl
outsl
fcmovnbe
and
inc
lret
mov
popa
into
inc
jns
vpmaxsb
inc
call
mov
dec
and
adcb
pop
loopne
xor
adc
jbe
lret
cs
or
inc
rorb
pop
in
xchg
push
shrl
push
dec
inc
popa
shl
enter
outsb
jnp
jb
popa
add
mov
cmp
in
sub
mov
xbegin
jge
xchg
test
mov
sbb
jle
iret
dec
daa
cltd
sub
mov
out
test
mov
lock
jge
and
es
subl
xor
jae
std
push
stos
and
js
out
mov
pop
and
mov
xor
sbb
push
jg,pt
adc
std
ljmp
outsl
outsl
push
push
adc
lock
push
xor
or
inc
xchg
movsb
cmc
stos
adc
or
adcl
mov
daa
popa
jae
pushf
inc
clc
lods
out
jb
outsl
xor
psubq
fistl
mov
and
cmpsb
gs
bound
mov
les
ja
popa
mov
push
push
sub
idivl
push
cltd
out
push
xor
cmp
clc
stos
jb
rorl
cmp
in
loope
inc
xchg
arpl
add
sti
push
or
sbb
lea
pop
aam
scas
dec
test
loop
cmp
fcmove
xchg
or
fwait
xlat
inc
xor
bnd
push
jmp
mov
mov
movsl
add
mov
insb
mov
mov
xor
jo
mov
sub
sets
mov
mov
lahf
mov
xchg
push
jecxz
dec
pop
adc
sahf
shl
mov
pusha
shlb
ss
out
dec
add
data16
xlat
imul
test
gs
or
jecxz
mov
mulb
out
push
imul
iret
imul
gs
dec
lret
inc
jae
dec
xchg
fsubrs
mov
jmp
popa
xchg
inc
dec
fcomps
jecxz
leave
xchg
and
scas
sub
cltd
pop
dec
mov
jb
adc
dec
xchg
in
ret
sub
imul
pop
jge
sahf
pusha
jae
and
testl
aas
adc
rorb
insl
push
mov
or
rolb
xchg
and
push
inc
shlb
and
lea
sbb
mov
sbb
outsb
iret
into
pop
loop
mov
lock
call
fdiv
movsb
or
and
ja
mov
test
call
jmp
or
icebp
dec
sub
insb
mov
push
es
cld
dec
inc
dec
shlb
call
out
inc
pop
mov
inc
xor
adc
xchg
rclb
and
sub
xlat
test
sub
mov
sub
ljmp
push
fimull
test
cmp
or
mov
je
stos
adc
mov
repnz
mov
pop
cli
fcmovu
push
nop
add
bnd
lock
mov
out
loopne
aas
aaa
push
loope
xchg
and
out
add
jle
das
clc
sbb
jecxz,pt
push
pop
js
cli
movsb
fdivrs
les
xor
add
idivb
xor
push
or
jne
insb
add
mov
pop
adc
insb
rolb
push
inc
xchg
aam
sarb
adcb
dec
flds
das
bound
mov
xlat
test
movsl
mov
mov
loop
rcrl
or
ja
sub
adcl
sub
sub
xor
outsb
pop
mov
loope
mov
orl
popf
faddp
push
lds
sbb
fistl
mov
in
out
or
dec
push
loopne
jo
and
and
xor
push
xchg
mov
xchg
in
pop
pop
das
jne
enter
loope
lods
sbb
test
pop
loope
sbb
push
pop
js
add
xlat
loopne
mov
lock
sbb
sbb
das
jne
mov
ljmp
fs
loop
mov
ret
mov
mov
mov
or
dec
jae
cli
repnz
loop
mov
sbb
mov
jp
mov
mov
and
fsts
add
xchg
iret
dec
cltd
stos
dec
push
push
mov
jl
push
lea
in
adc
xchg
push
cwtl
or
fldenv
mov
sub
test
stos
fcmovbe
nop
imul
cmpsb
pop
sbb
pop
jnp
pxor
adc
cld
scas
scas
stc
inc
incl
shl
push
insb
mov
jb
clc
adc
test
sub
inc
pusha
hlt
jp
lret
sub
and
cwtl
jmp
inc
and
jp
push
mov
nop
fstps
dec
cs
push
mov
mov
daa
outsb
data16
add
fstpt
stos
jl
push
mov
stos
push
mov
inc
or
jp
orb
jno
lea
test
mov
mov
jnp
in
add
pusha
pop
out
popa
sbb
ja
in
mov
bound
fcomi
stc
add
in
adc
jo
ffreep
mov
mov
faddl
cwtl
mov
bound
fsubrs
repnz
inc
rorb
in
stc
dec
inc
push
repnz
or
enter
lahf
aam
sahf
enter
jno
mov
sbb
mov
aas
add
sbbl
lahf
pop
cs
jecxz
adc
imul
lea
fsubrl
stos
aas
mov
xorb
in
inc
inc
and
loopne
xchg
in
pop
sarl
xchg
out
pop
cmp
add
xor
cmp
mov
fcomi
pop
lret
xor
dec
shl
into
clc
pop
in
into
lods
ret
jo
xchg
mov
and
mov
fildl
mov
mov
cmpsb
lahf
push
scas
pop
rcr
insb
jmp
in
addb
cmp
lret
dec
mull
xchg
aad
shrb
std
mov
jp
js
mov
sub
iret
into
or
into
lcall
out
test
sbb
mov
xor
sub
xchg
rolw
sub
in
mov
fbstp
sahf
mov
jae
sub
cwtl
out
push
out
cld
mov
mov
jbe
decb
jo
mov
push
arpl
xchg
and
dec
jne
lahf
xlat
mov
xchg
imul
pop
and
inc
sbb
in
adc
cmp
pusha
in
les
pusha
dec
push
xchg
popf
test
ret
mov
les
icebp
jae
ficompl
sbb
push
xor
icebp
pop
dec
aam
dec
and
shrb
jnp
lahf
scas
outsl
lods
or
cmp
and
jae
xor
pop
and
mov
fwait
scas
popf
jge
xchg
inc
fadd
sub
mov
pop
js
rep
mov
fstps
sbb
int3
adc
fucomip
or
or
jae
out
mull
daa
xlat
cltd
fcoms
nop
pop
mov
cmp
repnz
mov
leave
cmp
popa
xlat
hlt
and
pop
inc
jnp
add
jg
cmpsl
arpl
scas
shrl
div
aas
xchg
cwtl
clc
pop
insb
or
gs
pop
les
mov
jb
pop
cmp
jg
mov
outsl
gs
dec
pop
adcb
mov
out
je
mov
adc
pop
dec
xchg
mov
pop
xchg
arpl
cmc
ficoml
out
dec
loopne
divl
adc
inc
cmp
rorb
fsubrl
orl
dec
pop
fs
sarb
ljmp
and
lock
in
adcl
sbb
jno
pop
push
in
cmp
icebp
xor
in
in
mov
ss
nop
scas
leave
test
fwait
mov
outsb
lea
push
xchg
jb
sbb
mov
enter
fldcw
in
scas
xchg
mov
rol
xchg
pop
jge
push
jge
addr16
out
mov
and
lds
push
push
mov
scas
inc
lea
mov
dec
outsl
push
jp
xor
daa
and
fwait
iret
xlat
mov
jns
leave
push
popf
popa
push
push
aam
sub
pop
sbb
sbb
das
sbb
test
push
aam
lock
dec
push
fcompl
popa
adc
dec
jo
fildll
stos
push
add
push
repz
imul
inc
test
mov
push
cli
sarb
xchg
cmp
filds
pop
inc
bound
mov
mov
shlb
enter
push
sbb
mov
filds
jle
push
and
sbb
nop
pop
sub
bound
dec
into
jmp
lods
sbb
nop
push
pusha
or
shll
cmp
sbb
mov
mov
sub
dec
push
in
lock
ret
fstps
test
lea
ljmp
outsl
push
orb
mov
xor
mov
mov
enter
das
jbe
and
dec
ret
add
inc
sbb
andl
test
cmp
push
inc
cmpsl
scas
inc
stos
in
pop
cmp
sbb
sub
inc
idivl
pop
sbb
in
inc
loope
mov
lds
dec
dec
inc
in
dec
dec
lods
xlat
pop
jns
sub
cmp
aaa
push
lcall
shlb
pop
std
call
cmp
sub
jbe
mov
adc
aam
pusha
repz
fcomp
pop
test
dec
push
xor
aam
fcmovnu
jp
jg
inc
jmp
mov
mov
aam
lds
xchg
loop
fs
and
nop
jns
or
loopne
ret
arpl
inc
mov
insl
insb
rcrb
add
movsl
pushf
leave
icebp
add
fwait
test
xchg
shrb
cmp
xchg
cmp
outsl
test
cld
sbb
mov
and
js
sub
insb
lea
cmp
lock
test
fwait
dec
out
inc
stc
test
cmpsb
xor
xchg
adc
dec
pop
and
jmp
lods
push
or
pop
add
sarl
xchg
mov
sbb
arpl
add
es
xor
pop
xchg
in
xor
push
jmp
inc
out
or
cld
lcall
cli
adc
pop
mov
pushf
clc
ja
negl
ret
popw
sub
and
les
xchg
mov
loop
lock
ds
insb
ss
shlb
mov
xchg
insb
sbb
fldcw
inc
add
rorb
in
dec
push
fldcw
xor
push
rcrl
ljmp
adc
mov
push
adc
and
dec
into
nop
rcrl
repz
sub
rol
into
faddl
into
dec
fs
out
cmpsb
mov
xchg
popf
jae
mov
adc
arpl
inc
xchg
xchg
mov
sbb
loop
inc
repnz
insl
lock
inc
add
les
xchg
jne
pop
xchg
bound
pop
lret
mov
fists
jle
xchg
lcall
dec
mov
inc
cmp
stos
or
out
pop
adc
repnz
cmp
popl
push
sahf
stos
rcr
clc
lret
cmp
movsl
test
lcall
fisttpl
rol
repnz
cmc
and
cli
xor
loopne
ljmp
sbb
mov
sub
mov
mov
imul
inc
stc
subb
arpl
aad
sub
pushf
or
testb
int
adc
cmc
in
dec
ret
hlt
faddl
rolb
pop
sbb
mov
test
loope
int
mov
cmp
sub
dec
xor
sbbb
jne
in
gs
dec
fstl
in
cltd
mov
and
mov
aas
add
clc
mov
adcb
xchg
testb
pop
xor
mov
imul
in
add
jns
jl
js
shll
test
jmp
jbe
dec
out
xorl
dec
add
cltd
lea
mov
movsl
mov
dec
fwait
pop
test
cmp
je
sub
cs
sub
lods
das
arpl
inc
pop
andl
lods
popl
jmp
fidivl
push
addl
cwtl
pop
jl
or
xlat
push
sahf
test
cmp
dec
inc
xor
sbb
sbb
xchg
test
repnz
pop
adc
sbb
dec
std
fcmove
test
and
call
fs
xchg
in
jne
aas
mov
loope
cld
add
xchg
subl
inc
imull
mov
dec
cmpsb
mov
ds
xlat
lods
sbb
ret
add
lret
sub
add
pop
dec
inc
nop
rdtsc
icebp
stos
mov
into
test
inc
fwait
inc
xor
out
mov
jns
cmp
push
hlt
in
pop
mov
cmc
fdivrp
fstpt
sub
in
outsb
xor
aas
add
cmc
out
mov
pop
loop
mov
cmp
xlat
rcl
jnp
mov
cmp
sbb
cmp
jmp
add
push
cmp
clc
add
pop
std
test
lock
add
cmpsb
cli
dec
nop
mov
sbb
cmp
loopne
mov
jge
cmpsl
test
jge
fnstenv
jnp
push
nop
test
ret
sbb
cmpsl
sbb
push
sbb
push
decl
cmp
addr16
loopne
jg
mov
mov
dec
sahf
xchg
pusha
jae
fldt
jb
sub
mov
nop
jnp
pop
dec
shll
lret
rolb
mov
cld
movsl
sbb
xor
push
cmp
add
mov
lahf
pop
inc
hlt
jl
shrl
dec
mov
mov
lods
mov
stos
pop
test
xchg
mov
sub
hlt
xchg
push
cmp
sbb
movsl
cmp
mov
inc
out
sub
prefetch
mov
mov
ljmp
fdivl
dec
cs
iret
xchg
adc
cltd
out
inc
inc
cmp
and
cmc
fcoms
sbb
data16
xchg
popa
rolb
in
lds
in
js
repnz
lret
daa
aas
xchg
ret
cmpl
scas
jne
jmp
std
xchg
hlt
adc
std
adc
push
inc
test
push
test
mov
pop
je
test
sbb
sub
xchg
xchg
jle
popa
jp
mov
sub
sbb
jno
push
push
mov
xor
mov
or
orl
imul
sub
lock
and
adc
je
test
lods
cmc
adc
rcrb
pop
jg
imul
ljmp
cmp
cltd
aam
std
sub
mov
mov
adc
xor
call
sub
icebp
divl
xor
bound
add
cmp
jecxz
insb
ficompl
in
daa
das
out
or
dec
push
int3
add
ret
mov
out
xchg
mov
jecxz
movsl
cmpsb
sub
push
xchg
push
addl
adc
punpcklwd
aas
lret
mov
cwtl
rcll
xlat
sti
das
aad
dec
into
call
add
mov
movsl
test
sti
jecxz
push
clc
mov
or
pop
pop
sub
jp
add
popf
mov
test
pop
rcll
movsb
fisttpl
fs
pop
pusha
pop
pusha
stos
dec
negb
pushf
and
test
sbb
pop
fldt
movsl
outsb
int3
insb
jnp
rclb
int3
jecxz
xchg
jns
cmp
pop
xor
testb
ret
cmpsl
mov
pop
scas
xorb
jp
inc
imul
add
popa
les
pushf
jne
test
or
adc
leave
sub
gs
sbb
push
inc
jge
jae
loop
inc
xchg
push
xor
adc
addr16
mov
lds
loop
xor
jae
inc
nop
jb
inc
leave
inc
idivb
outsb
dec
nop
cmp
dec
negb
imul
mov
lea
sbb
adc
out
add
inc
jmp
push
inc
jmp
mov
xchg
sti
mov
dec
gs
pop
int3
loop
fs
xor
aas
ret
scas
push
push
fstpl
stc
fstl
dec
push
or
roll
push
dec
push
daa
outsb
out
pop
test
mov
mov
daa
jg
dec
or
inc
xchg
mov
or
test
push
dec
inc
inc
inc
test
pushf
dec
xor
cmp
jae
stos
call
stc
jns
cmp
and
sub
idivb
xor
or
imulb
out
mov
inc
ss
push
dec
shrl
xchg
jae
cs
lahf
or
loope
mov
jg
dec
gs
les
arpl
and
fimuls
lcall
cmpsb
arpl
outsb
jbe
dec
sub
ds
mov
aaa
push
xchg
xchg
in
mov
cli
lret
xchg
out
das
xor
or
mov
adc
cmpsl
shlb
and
and
lahf
and
jle
loop
xor
mov
lods
cs
in
xchg
mov
pop
sub
inc
inc
or
add
mov
ljmp
dec
lods
leave
stos
add
and
hlt
push
xor
outsl
mov
pop
push
inc
jmp
imul
xlat
inc
or
mov
sti
fistpll
std
in
inc
inc
stos
sahf
cmp
push
xor
loop
sbb
pop
cmpsl
xor
mov
pushf
dec
sahf
je
clc
jge
push
daa
push
loop
jge
pop
mov
sbb
fs
cmpl
adc
arpl
stc
dec
outsl
jbe
dec
outsl
xlat
sti
inc
leave
dec
xchg
dec
mov
je
or
je
xchg
or
imul
paddsw
rorl
popa
add
adc
fnstenv
xchg
shlb
xor
jnp
les
je
mov
in
fsubr
in
dec
lcall
cmp
mov
pop
sbb
cmp
jb
orl
out
outsl
fs
stos
out
cmp
shll
inc
ja
mov
orl
inc
mov
xor
sub
xor
in
sbb
push
cld
mov
clc
fiadds
outsl
shrl
out
fdivp
and
aad
in
mov
nop
pop
inc
xor
add
push
jmp
arpl
sub
clc
xor
mov
shl
pop
push
sbb
test
push
movsb
iret
ds
mov
loopne
addb
in
cmp
data16
pop
sub
scas
lds
in
xor
sbb
pop
repz
cmp
mov
das
add
xor
outsl
dec
in
inc
inc
jae
and
aaa
out
dec
test
add
pop
push
das
lods
pop
fwait
lods
jge
and
jle
loop
shrb
sub
mov
popa
sub
cmp
pop
in
nop
je
add
mov
je
sub
leave
pop
test
aas
ror
mov
je
adc
lret
cmp
cmp
add
mov
in
js
lds
int3
xchg
mov
xchg
out
inc
js
sahf
imul
ret
mov
imul
insb
aas
loopne
fsqrt
add
in
xor
addr16
out
push
sbb
popa
movsl
ret
out
ret
fcomip
into
cmp
mov
inc
cltd
push
dec
inc
mov
out
in
sub
pusha
pusha
inc
push
xchg
repz
push
fsubrl
mov
pop
jmp
out
mov
lret
popf
test
jbe
sahf
cld
add
sbb
and
jne
std
add
outsl
neg
pop
and
dec
cmp
test
aam
lahf
dec
xor
fwait
inc
dec
outsb
divl
push
xchg
xchg
mov
and
jmp
add
addr16
mov
sbb
sti
stos
jae
ja
movsb
jecxz
fnstsw
adc
push
jno
lods
mov
mov
xlat
gs
jmp
das
std
jae
cwtl
fs
cmp
or
or
add
add
inc
icebp
cltd
dec
xor
adc
xor
rolb
xor
je
inc
add
lret
and
fisubl
lods
xchg
xchg
mov
dec
and
jecxz
fadds
add
mov
daa
mov
cmp
jb
test
and
jb
das
outsb
jge
clc
insl
jbe
add
jge
cmp
subb
lcall
sub
mov
pop
mov
sub
adc
popf
std
outsl
mov
test
pop
sbb
ds
inc
aaa
std
xor
or
xchg
pop
aam
cmpb
mov
inc
aas
lret
inc
bnd
sbb
add
imul
xlat
cmp
xchg
xchg
xchg
or
add
aad
nop
push
pop
jle
repnz
push
outsl
call
sbb
push
mov
mov
repz
rep
jo
or
or
into
test
pusha
lahf
movsb
xchg
push
mov
arpl
cmp
cmp
addr16
inc
cmp
imul
mov
out
add
imul
repnz
xchg
push
inc
aad
test
xor
push
xchg
iret
jle
pop
adcl
inc
rcrb
ret
out
jae
ja
movsl
xchg
adc
out
dec
nop
dec
popl
pop
subb
add
cmp
arpl
outsb
mov
fisttpl
add
fsubrp
pop
lods
repz
test
test
ret
mov
cmp
pop
and
cs
lods
insl
cwtl
push
clc
adc
jl
add
popf
lret
mov
pop
cltd
inc
cltd
mov
inc
les
sbb
dec
js
xor
loope
arpl
lods
addr16
ja
mov
fildll
adcw
stos
pop
push
lret
push
fsubs
fbstp
mov
rclb
js
pop
out
jecxz
stos
aam
mov
pop
lret
aad
sbb
icebp
or
jo
not
cs
dec
mov
jge
and
pop
leave
sahf
pop
mov
rolb
xchg
pop
in
orl
lea
and
in
aad
dec
lods
dec
dec
in
adc
and
inc
pop
push
xor
xchg
in
adc
jnp
or
movb
mov
cmp
sub
popf
mov
mov
jp
cmp
inc
mov
push
push
movsb
and
mov
xchg
cmp
xchg
adc
dec
mov
xor
out
sti
je
lahf
adc
sbb
dec
cmpl
sbb
lret
dec
adc
fistpl
out
sbb
jecxz
lods
scas
cmp
and
lds
ret
xor
pop
lods
sbb
cmp
repz
loope
dec
mov
sbb
lock
xlat
adc
out
lret
xor
sahf
stc
mov
cmpsb
inc
adc
fidivrs
data16
push
lds
lcall
in
mov
adc
out
xchg
mov
xchg
filds
das
in
mov
add
out
push
in
outsb
ss
jnp
adc
jge
mov
mov
push
adc
fisttpl
jno
rcr
dec
cwtl
das
fdivrs
rcr
push
dec
inc
and
jge
sbb
int3
lock
cmpsb
xchg
scas
pop
or
movsb
add
bound
loope
jp
push
hlt
sub
leave
add
aad
aaa
push
mov
mov
jmp
mov
xor
sahf
push
mov
loopne
orb
cmp
sbb
fistpll
es
popa
stos
or
push
inc
cmp
pop
mov
iret
mov
lret
arpl
push
in
sub
inc
fldenv
sarl
mov
push
cmp
das
xchg
dec
mov
movsb
es
push
jg
sub
int3
shrb
nop
aad
xor
je
addr16
cwtl
jne
jg
and
dec
fnsave
inc
sub
das
jbe
pop
inc
mov
rorb
pop
test
sub
in
shll
faddl
dec
or
adc
je
sbb
out
data16
mov
cwtl
mov
jne
jno
push
call
ficoml
cmp
mov
icebp
aaa
enter
rolb
subl
or
ja
mov
jbe
or
xchg
mov
sbb
xor
xchg
jmp
xchg
cmp
xchg
mov
rcl
xchg
jae
xchg
test
adc
or
and
imul
dec
lods
popf
dec
clc
js
pop
jp
mov
popf
xchg
add
lea
out
outsl
push
inc
movsl
mov
test
imul
sub
gs
xchg
xor
xchg
dec
inc
cmp
jmp
daa
mov
sub
or
push
pop
nop
das
mov
sub
lret
fistpl
xor
add
jb
dec
pop
daa
cmp
xchg
mov
or
cmp
mov
jmp
sarl
push
rorb
jb
jnp
fs
xchg
pop
add
data16
sbb
mov
mov
or
vphaddwq
bsf
rcl
xchg
mov
scas
shll
jmp
mov
fdivl
adc
mov
iret
lods
mov
cmpb
cs
flds
xchg
inc
outsl
xchg
gs
jo
sti
hlt
jl
xlat
mov
sbb
and
arpl
mov
mov
es
xchg
out
or
mov
std
enter
hlt
mov
xchg
xchg
lock
outsl
adc
inc
jb
sub
dec
cmc
adc
insl
mov
sub
mov
jg
fcoml
shlb
mov
cs
pop
jp
incb
andb
aaa
fwait
mov
jl
xor
sbb
mov
cli
hlt
incb
fidivl
cmp
fldt
or
mov
repz
lds
int3
test
cmp
sbb
xor
cmp
inc
out
or
cld
test
fidivrs
jle
sub
hlt
dec
jns
mov
push
mov
loopne
movsb
xchg
inc
add
lret
pop
out
cmc
mov
push
adc
mov
xchg
dec
insl
mov
push
mov
sub
rcrb
rorl
out
dec
dec
aad
enter
test
in
ss
jg
pop
and
sub
cltd
shrl
repnz
xchg
sbb
xchg
adc
push
sub
std
shll
pop
inc
in
and
adc
xchg
jg
imul
js
scas
cmp
xchg
mov
out
fs
fbstp
push
or
out
movsl
sbb
outsb
data16
adc
lods
push
in
lods
popf
mov
adc
mov
cs
out
cmp
jmp
inc
or
iret
mov
and
mov
mov
in
lcall
leave
cmp
iret
loop
inc
cld
out
fildl
xchg
xlat
dec
adc
shll
insl
mov
xchg
jmp
mov
inc
ds
xor
outsl
movsb
fwait
out
fidivl
mov
jae
inc
add
fdivrs
push
out
push
dec
insl
sub
adc
fnstsw
out
jo
jecxz
dec
insb
sbb
dec
push
jle
pop
mov
fnstcw
fistl
popa
pop
sbbb
mov
orb
aam
jnp
test
pop
xchg
andl
mov
and
dec
lret
xor
pop
pop
sub
sti
push
xchg
inc
adc
sub
mov
sbb
cmp
jg
andl
mov
inc
lock
in
pop
gs
mov
sti
add
scas
stos
xchg
in
enter
jp
and
iret
js
mov
pop
jno
add
jb
setle
mov
sbb
add
pop
mov
loop
push
out
scas
leave
push
out
inc
and
cmp
mov
cmpsl
inc
mov
imul
fidivl
daa
cmp
outsl
cmp
js
data16
xchg
and
sbb
bound
call
scas
imul
xchg
push
data16
ja
testl
dec
lret
sarb
lret
and
jno
dec
xlat
jp
test
mov
shlb
and
pop
testb
outsb
mov
scas
rcll
shll
insl
pop
rclb
sub
repnz
push
popa
pop
or
imul
mov
in
sahf
pop
es
pop
scas
aam
xor
xor
push
scas
ja
adc
gs
and
inc
dec
imul
movsb
mov
ficoms
dec
and
sub
adc
push
mov
ljmp
cwtl
int3
push
lahf
ljmp
jb
cwtl
xchg
xchg
ss
mov
movsl
lds
fistpll
push
pop
jp
pushf
jns
push
mov
adc
popa
mov
mov
mov
inc
add
xchg
pop
dec
into
leave
lods
dec
cmc
in
cs
cmp
stos
jns
xchg
and
insb
fs
fcompl
mov
ljmp
jnp
adc
lock
int
sub
add
jo
fldcw
jne
cmpsb
xor
js
add
or
sbb
pop
pop
mov
cwtl
pop
pop
repnz
mov
lds
jecxz
push
flds
rcrl
xchg
mov
inc
xor
lret
mov
jo
mov
jle
cmp
xor
lahf
jnp
jno
xor
sbb
push
sub
jbe
mov
leave
lea
fmul
out
jno
push
popl
call
cmpsl
fnstcw
daa
lret
call
mov
movsl
cmc
mov
push
cs
ficoms
mov
rolb
jp
sub
cld
lcall
jp
leave
fcoml
adc
ret
lock
sbb
movsb
mov
pop
sub
cltd
xchg
pop
inc
imul
pusha
jge
lret
loop
ss
pop
cmpl
in
fs
or
inc
inc
or
xor
scas
insb
orb
adc
je
ret
mov
rol
std
mov
jecxz
pop
ja
jge
or
insb
inc
sub
jmp
xchg
js
daa
xor
fists
pushf
dec
adc
and
mov
rol
out
jnp
das
or
xor
out
fnstsw
push
lods
int3
sti
fcmovb
pusha
clc
sbb
movb
dec
adc
sbb
push
jbe
mov
mov
scas
adc
cmc
fs
dec
pushl
std
dec
push
xchg
leave
out
mov
cmp
cmp
pop
add
out
cmp
int
fidivrs
clc
dec
and
push
rorb
or
icebp
sbb
xor
dec
and
push
xchg
cmc
pusha
jle
and
out
inc
add
cmp
ss
data16
imul
gs
addb
mov
push
arpl
fs
aad
pop
stc
mov
jnp
repz
xchg
mov
xchg
xor
out
cmpl
out
xlat
mov
dec
sub
push
push
add
mov
jle
or
test
cmp
loop
jecxz
orl
and
out
cmp
loop
daa
adc
mov
xor
mov
lahf
jb
inc
push
mov
aaa
clc
jl
sbb
testl
sbbb
fisttpl
xor
mov
cs
aas
test
call
adc
dec
add
xor
imul
jp
xchg
pop
clc
sbb
sbb
xchg
sahf
in
mov
stos
in
flds
xchg
sub
in
push
push
scas
sbb
hlt
and
test
fnstenv
nop
adc
lahf
push
int
adc
lock
cmc
xchg
call
sbb
sub
adc
enter
mov
ss
mov
jg
gs
in
stc
inc
cwtl
fsubr
cmc
pusha
jle
movsl
shll
xor
sbb
popf
mov
sub
rol
cmp
cmp
shrb
dec
fidivrs
cmc
fdivrl
stos
mov
testb
lcall
jle
mov
test
jmp
cmp
ss
lock
pop
dec
pop
pop
mov
push
sub
jecxz
adc
sahf
cmp
cmpsl
js
inc
push
cmp
in
inc
inc
aaa
jge
mov
stos
cmovle
sbb
movsb
push
sub
jns
sub
add
in
lds
fistpll
pop
or
or
aas
int3
cltd
imul
mov
cwtl
push
faddl
rcll
in
sub
aas
movsl
mov
shll
cltd
sub
push
cmp
les
cmc
fwait
jae
shl
lret
rorl
sti
aam
fs
movsl
loopne
cld
or
inc
loope
js
mov
test
mov
fs
outsl
jnp
push
repz
in
adc
call
jl
xlat
call
femms
pop
stos
sbb
pextrw
inc
jg
fistl
js
rclb
sbb
jecxz
ret
rcrl
pop
and
inc
xor
fnstcw
outsb
cmp
pushf
aaa
mov
adc
and
int
mov
paddq
dec
jb
arpl
cmpsb
or
or
pop
or
dec
cmpsl
ret
pop
inc
or
cmpsb
or
pop
sub
jae
push
inc
out
pop
xor
inc
jns
lods
lea
sti
mov
dec
es
push
jnp
xor
repz
jecxz
push
xor
adc
rorb
or
mov
cld
icebp
mov
scas
cmpsl
mov
int
paddw
and
push
dec
and
xchg
mov
test
int3
rol
daa
push
std
add
or
mov
pop
sti
mov
pushf
in
jecxz
inc
jecxz
cmpsl
fwait
xchg
push
push
adc
dec
test
or
addr16
cltd
mov
leave
out
cmp
ret
cltd
insl
lock
adc
mov
cmp
push
add
sub
push
fmull
inc
inc
int
stc
mov
mov
sbb
notl
or
add
jbe
xchg
inc
std
mov
scas
and
jmp
push
push
jno
push
mov
and
inc
stos
cmp
mov
add
mov
arpl
jle
arpl
cmp
mov
push
sub
inc
mov
popf
xorb
mov
push
jnp
mov
insl
mov
test
push
hlt
fstpt
mov
repnz
push
inc
xlat
je
nop
sbb
mov
sbb
dec
inc
jbe
dec
xchg
pushf
add
add
fbstp
mov
arpl
sbb
hlt
bts
adc
push
pop
loopne
pop
roll
into
mov
rorb
call
xor
ucomiss
pop
fwait
into
jnp
stc
pop
xchg
dec
lcall
out
push
push
cmp
pop
sti
inc
addl
cltd
push
in
mov
sub
inc
xor
mov
neg
add
ja
and
push
aas
and
xchg
mov
loopne
add
push
sbbl
or
popf
xor
adc
sahf
xor
movsl
mov
adc
mov
and
jbe
cmpsb
dec
cmc
aas
shlb
shl
loop
add
mov
fbld
add
jecxz
out
repnz
adc
bswap
xor
sub
and
stos
sub
cmp
add
es
popf
mov
or
outsb
pop
jle
pop
cmpl
jp
sbb
inc
fdivl
cli
jne
xlat
or
inc
cs
dec
and
mov
into
xchg
push
pop
aad
mov
lret
cmpsb
cmpsl
into
fimull
ficomps
daa
push
jle
dec
and
rcrb
ret
dec
pop
outsl
sub
cli
fmulp
das
push
mov
in
cmp
ds
cmp
lock
adc
fidivs
shll
mov
push
jmp
push
fs
push
into
int3
jp
jo
fildl
scas
rcl
je
fimuls
std
imulb
inc
loop
test
add
fsubrs
lods
pop
fwait
mov
test
push
add
inc
insl
or
pop
push
addr16
lods
leave
sub
insb
adc
xchg
pushf
mov
loop
js
pushf
fisubrs
stc
mov
lea
mov
imul
lret
adc
scas
or
imul
and
jnp
xchg
push
and
push
clc
ret
mov
out
int
sub
and
test
outsb
loopne
outsb
lcall
pop
out
in
jnp
js
and
fdivrs
mulb
cmpsb
dec
test
mov
out
jle
repnz
int
xor
test
add
dec
add
xor
cmpsb
subl
lods
jns
mov
loope
adcb
stos
sub
sbbb
mov
cmpsl
icebp
cmp
sahf
lret
or
or
int3
outsl
cwtl
mov
sub
sub
mov
mov
es
push
movsl
inc
cmp
pop
pop
test
sahf
ss
xor
fnstenv
adc
test
or
js
sbb
loopne
xchg
push
cmc
inc
ss
cli
sbb
mov
ja
lcall
mov
push
ljmp
pop
aas
notb
pop
cwtl
push
and
pop
repnz
into
test
data16
ds
dec
inc
inc
movsl
outsb
lock
sarb
ds
inc
pop
mov
sub
cld
xchg
push
hlt
or
test
in
fistl
sub
gs
fdivs
push
or
andb
cmpsb
fwait
in
adc
inc
sbb
pop
mov
mov
mov
stos
jb
sub
lret
lods
sbb
aaa
xor
push
rorl
and
inc
xorb
pop
sahf
xchg
bound
test
lds
scas
leave
xchg
fsubl
bound
daa
mov
xorl
push
pop
xchg
insb
aaa
subl
movsb
jno
cltd
cmpsl
jmp
or
loope
sbb
icebp
jne
insb
das
daa
fldl
fcomip
push
xchg
or
adc
jle
or
xlat
out
stos
or
jl
les
sub
lock
gs
push
js
into
testb
mov
adc
sub
test
pop
ret
xor
mov
mov
pop
out
bound
cwtl
scas
pushf
mov
outsb
pop
adc
push
or
or
pop
sbb
cs
dec
mov
add
xchg
das
leave
mov
xor
fwait
in
mov
int3
adc
jp
stc
dec
les
enter
lds
jns
fcoml
std
movsl
pop
or
mov
mov
js
clc
imul
dec
dec
sub
xchg
sahf
jnp
lcall
jns
cli
dec
mov
inc
mov
ret
mov
mov
mov
mov
sbb
jae
mov
jge
and
arpl
mov
pop
mov
gs
inc
shl
es
add
jo
cmp
jp
mov
imul
jl
ret
xor
sub
repz
pusha
mov
loop
dec
fs
int
je
lahf
pop
mov
lret
cmp
jge
insl
aam
popa
lock
outsl
clc
dec
enter
pop
and
sahf
sub
roll
imul
cwtl
subb
push
pop
or
jo
add
lds
scas
ljmp
sbb
aam
mov
mov
mov
or
sahf
add
pop
sub
dec
lahf
aas
xor
and
sbb
mov
pop
push
adc
fwait
dec
push
ret
xchg
cmp
mov
dec
and
sbb
push
pop
sub
adc
shrb
into
ds
hlt
lock
inc
or
test
pop
pop
mov
cmpb
dec
or
adc
pop
sbb
scas
insl
cld
lcall
cld
and
lock
and
popa
fsqrt
inc
bound
and
fmull
pop
pop
int
push
xchg
enter
adc
inc
int
jae
incb
mov
jmp
aad
std
add
arpl
das
push
xchg
out
cmc
jbe
icebp
rcrb
xor
pushf
pop
mov
in
cmp
xor
inc
aaa
sbb
roll
xchg
movsb
adc
mov
dec
lods
mov
adc
sarl
mov
leave
dec
lods
stos
int
pop
int
nop
push
jmp
mov
test
repz
jno
sub
sti
dec
jmp
push
cs
mov
fldt
in
mov
int
aaa
repnz
cmp
insl
add
xchg
rcr
cmp
sbb
pop
hlt
xor
pavgw
sbb
mov
popf
lea
mov
xchg
lret
in
scas
xor
lcall
push
jmp
cld
or
sbb
cmp
dec
fdivs
aas
stos
and
scas
imul
sbb
jae
fdiv
sub
insl
aaa
push
mov
xor
dec
aad
outsl
pushf
xor
pop
mov
sbb
or
movsl
das
mov
shll
push
shll
adc
cmc
in
js
mov
flds
scas
ljmp
mov
jecxz
jo
popf
add
push
movq
mov
or
rcll
std
mov
jb
fs
xor
xor
mov
ljmp
rclb
insl
xchg
mov
sub
call
sub
jo
fsubrl
inc
imul
xor
test
dec
pop
xchg
es
aam
test
imul
mov
or
mov
jl
mov
in
xchg
dec
xor
pop
pop
pushf
lea
and
dec
std
xor
adc
jb
cmpsl
xchg
push
and
push
xchg
sub
stos
jae
jne
loopne
cmp
jb
add
xor
dec
dec
jbe
push
dec
adc
test
out
call
mov
adc
pop
loope
roll
jmp
pop
aad
jbe
lret
jae
bound
cmp
insl
dec
fs
inc
orb
push
sbb
cmp
adc
std
andl
jle
jp
push
xchg
inc
mov
test
ljmp
out
dec
cmp
leave
mov
mov
jl
pop
xchg
pop
mov
rcrl
jecxz
rcl
adc
jmp
sub
jge
std
jecxz
aas
pop
and
xorb
fidivs
jg
arpl
push
or
jl
push
notb
popf
and
jne
shr
cmp
add
mov
popa
fs
mov
pop
mov
add
mov
jl
xchg
adc
jle
jle
inc
mov
cmp
loopne
fisubrs
test
out
mov
fisubrs
xchg
xchg
repnz
scas
mov
in
push
enter
sbb
or
shlb
xor
std
and
rcrb
mov
xchg
insl
cmp
imul
mov
and
mov
dec
loop
or
and
movsb
cmp
sbb
xorl
xchg
jmp
sbb
in
jg
jmp
repz
inc
mov
inc
cmc
in
pusha
pushf
pushf
inc
pop
int
mov
ds
rclb
lea
push
add
stos
sbb
fdivp
sub
push
mov
lahf
out
inc
out
es
idivl
mov
fnsave
and
dec
jle
icebp
cmp
mov
xchg
aad
ret
cmp
mov
les
test
mov
cmp
movsb
sbb
movsb
pop
outsl
in
push
hlt
stos
rcll
pusha
pop
dec
mov
out
fldl
outsb
test
or
sub
ss
call
bound
rorb
jp
ss
jae
hlt
pop
inc
mov
push
cltd
int
push
and
xor
xchg
ja
and
push
mov
pop
cmpsl
inc
push
pop
mov
xchg
adc
add
inc
sbb
aad
lock
push
sbb
repnz
adc
ss
icebp
adc
xor
sbb
sbb
mov
inc
in
incl
mov
and
pop
mov
mov
mov
fimull
sub
mov
jbe
ss
sbbl
lahf
xor
lea
and
inc
lods
dec
xor
mov
sbb
nop
jns
lfs
cli
dec
shl
mov
mov
and
lret
sub
or
xchg
scas
xor
mov
push
or
cmp
loope
mov
pop
add
outsl
pop
inc
incl
mov
clc
stc
outsl
shll
fcmovnb
push
xor
push
mov
and
movsb
xchg
cmpsb
add
mov
sbb
adc
and
in
cmpsb
dec
mov
repnz
mov
imul
cmp
adc
dec
jge
xchg
and
xchg
inc
pop
dec
push
pop
pop
sbb
xchg
lods
jmp
pop
xchg
dec
mov
insb
push
es
aaa
jecxz
clc
stos
lods
nop
cmpsl
imul
orb
xchg
fidivrl
testb
mov
pop
jae
es
gs
aam
sbbl
mov
mov
add
add
jnp
mov
add
xor
or
jns
dec
cs
in
cmpl
lahf
push
mov
push
add
inc
stos
mov
sub
jecxz
pop
cmp
mov
stc
js
pop
xchg
mov
int3
mov
add
xor
call
aas
push
fiadds
repnz
or
pushw
subb
enter
movsb
rorb
insb
jb
in
jb
sub
sbb
into
insl
mov
dec
aas
addr16
insb
loop
adc
mov
loopne
ljmp
mov
sbb
popa
je
fmuls
push
adc
lea
sub
in
pop
xchg
loopne
repz
inc
mov
les
or
jb
or
fidivrl
ret
push
frndint
jg
es
mov
stos
in
mov
or
mov
in
sbb
xor
cmp
movl
or
dec
repz
push
and
pushw
outsl
cwtl
mov
fwait
add
and
movntq
pop
rorl
jmp
imul
add
jns
and
insl
aaa
sahf
mov
imul
dec
xor
call
lods
sarb
and
jb
dec
addl
ss
cltd
adcl
es
cld
and
or
lcall
dec
cli
pop
mov
fbld
lcall
and
addr16
les
hlt
xchg
filds
cmp
cltd
test
js
sbb
mov
dec
andl
popa
sbb
in
jbe
inc
arpl
pop
cs
push
xor
sub
jecxz
inc
test
ret
aas
inc
push
clc
jmp
rorb
push
add
dec
div
push
mov
dec
ss
pop
popf
xor
lahf
push
mov
sti
cmp
fiaddl
insl
sbb
sub
add
scas
imul
mov
sbbb
cmpsb
mov
adc
fcompl
cmp
push
movsb
or
mov
lods
pop
jo
mov
adc
sbbl
mov
sub
cmp
add
aad
pop
sbb
jne
pushf
inc
sbb
sarl
add
daa
lcall
push
jg
mov
cmp
xor
daa
pop
in
push
push
call
pop
je
lret
mov
insb
and
in
jp
stos
fcoms
cmp
xchg
int3
lahf
and
nop
inc
inc
mov
cmpsb
inc
jns
stos
fisttpl
sbb
fstp
and
inc
imul
iret
jle
jecxz
cmp
and
jle
sub
stos
cltd
stos
jg
jge
fwait
test
xor
lcall
add
inc
inc
lds
movsb
in
in
mov
adc
insl
sub
xor
addl
mov
cli
std
dec
pop
ds
sub
xchg
jle
popa
or
jg
test
cmp
xor
fwait
xor
mov
cmc
hlt
aad
ljmp
or
push
pop
or
jge
mov
clc
or
addr16
jno
adc
iret
ja
enter
pop
cmp
cltd
jmp
ret
xor
std
xchg
pop
sbb
jg
pop
push
fcompl
push
pop
inc
adc
popf
fldt
imul
outsb
xchg
jno
or
mov
mov
jle
mov
addb
mov
jp
pushf
mov
arpl
push
dec
mov
out
xor
ss
dec
push
in
popa
jl
lds
je
repnz
jmp
ffreep
mov
mov
shl
xor
flds
cld
in
es
dec
movsl
sub
repz
pop
fdivrs
jns
sub
jle
pop
imul
and
cmpsb
mov
shl
outsb
fcoml
pop
out
jae
add
mov
sbb
imul
add
jo
and
out
pop
lds
inc
dec
fistps
test
and
jno
loope
and
cmp
cmp
fsubr
mov
test
or
mov
nop
cmp
fdivrs
lods
lahf
jno
orb
stc
pop
lods
xchg
xor
fisttps
xor
ds
jl
mov
cmp
xchg
sbb
or
xchg
scas
rcll
flds
jns
shll
jecxz
push
push
pop
add
popa
add
jb
dec
or
sbb
inc
push
adc
dec
js
push
ja
pop
xchg
xor
push
icebp
mov
stos
push
jb
sarl
jmp
std
add
xchg
xchg
adc
aas
fsubs
push
aas
pop
adc
rcl
adc
sbb
in
cmp
popl
test
pop
jb
pop
cmp
shlb
sub
js
sbb
cmp
cmc
mov
sahf
clc
fimuls
sbbl
push
sbb
lea
loop
imul
push
movsl
pop
movsb
push
std
adc
or
mov
mov
dec
iret
xchg
push
cmp
mov
adc
adc
lock
pop
aam
xor
jg
adc
mov
inc
dec
lods
adc
arpl
mov
loope
pop
sbb
or
push
aam
lds
test
insb
jne
inc
aas
sbb
sub
lret
or
and
jnp
jmp
adc
cmp
cltd
cmp
test
repz
pop
stc
or
fimull
dec
test
cld
daa
rcr
add
push
jecxz
xchg
imul
push
jecxz
aad
mov
cmpsl
sbb
loop
fstl
sub
das
cmp
mov
jo
ret
jne
ja
cmp
sbb
notl
sub
sar
loopne
negb
inc
mov
call
in
iret
lret
dec
enter
mov
out
movsl
add
rcrl
ss
mov
lods
ror
sbb
stos
ficompl
clc
cwtl
sti
xorb
cmp
push
xor
sbbb
sub
jae
sub
iret
idivl
int3
movsl
fs
push
or
add
pop
sub
sub
adc
xlat
push
lcall
idivb
pop
push
fidivs
mov
out
and
loopne
xchg
mov
sbb
repnz
stos
sub
fs
adc
dec
sbb
mov
pop
or
inc
mov
pop
mov
dec
jg
or
jge
mov
in
test
cltd
ljmp
int3
les
inc
sti
int
cmc
and
push
mov
sub
inc
mov
dec
bound
ja
je
jb
aaa
in
sub
mov
ds
mov
jmp
xor
enter
mov
mov
inc
mov
mov
jnp
mov
mov
rorl
aas
pop
pop
fcomps
mov
inc
das
aas
lret
push
test
pusha
adc
mov
aad
nop
fldenv
sub
ret
pusha
dec
fbstp
mov
insl
aas
xchg
add
les
cmp
outsl
jae
mov
addr16
push
rorb
ret
mov
sbb
adc
xor
stc
arpl
push
aam
xchg
push
hlt
clc
xchg
addr16
scas
add
popf
inc
pop
repz
mov
cmp
cmp
xchg
mov
sbb
xchg
pop
call
or
mov
gs
test
inc
xchg
or
out
pushf
push
and
leave
or
xchg
xlat
jo
inc
xor
icebp
mov
int
test
mov
gs
call
cmp
ljmp
cld
movb
xchg
adc
adc
or
xor
subl
or
jg
loope
and
out
xor
push
fnstsw
add
add
mov
inc
pusha
data16
push
int
and
addr16
mov
cs
mov
pop
push
mov
repz
clc
out
into
cld
orb
or
inc
fprem
push
fidivrl
daa
test
sub
sbbl
mov
cmp
and
scas
sub
push
jae
cmp
sbb
rolb
sub
inc
inc
and
daa
incl
cmp
dec
ljmp
mov
push
adc
adc
les
insl
push
daa
cmp
scas
push
inc
int3
mov
ja
mov
or
push
mov
xchg
nop
inc
sbb
mov
inc
jns
mov
popa
dec
leave
aam
arpl
xchg
xor
sbb
cs
aaa
sbb
cmpl
or
test
push
rol
cli
push
jp
test
jae
add
rcl
in
push
pop
jb
push
push
cmpsb
out
jle
mov
push
add
jbe
repnz
xchg
cmp
out
lret
repz
add
xchg
add
sti
and
icebp
cltd
cltd
mov
mov
mov
into
pop
gs
lcall
test
xchg
ret
push
xor
mov
fistpll
push
jecxz
mov
cmc
jns
jnp
lock
test
xor
pop
sbb
push
sub
mov
dec
and
mov
ret
pop
pop
xchg
ret
sbb
popf
or
or
push
dec
add
sub
call
sub
and
pusha
mov
out
jecxz
or
in
sub
xor
movsb
push
clc
faddp
lahf
aam
xchg
add
addr16
incl
xor
jle
push
mov
aam
dec
movl
loope
inc
addb
sub
scas
add
sbb
scas
dec
ds
out
sbb
pushf
adc
imul
jmp
or
sub
mov
in
in
std
in
pop
pusha
stc
mov
cwtl
push
xchg
jmp
sbb
add
clc
xor
in
mov
shl
cmp
cmp
push
xor
adc
xor
mov
mov
add
sbb
mov
pop
fisttpll
shr
add
ja
bound
xor
enter
inc
mov
inc
jnp
xor
xchg
mov
fistpl
test
sub
enter
sub
mov
addr16
fsubrl
dec
frstpm(287
jmp
jmp
xor
xchg
push
xchg
arpl
dec
in
popf
xor
cli
xchg
movl
lods
dec
scas
cmp
push
cmp
ret
xchg
and
and
mov
push
aaa
dec
idivl
jae
hlt
cmp
idivb
pop
dec
sub
in
sarl
adc
and
popa
fcoml
cmp
fwait
or
lcall
subl
mov
add
ja
stc
fucomi
fistps
popf
adc
lods
mov
mov
arpl
inc
adc
sub
mov
mov
out
inc
xor
gs
loopne
adc
js
mov
push
jmp
lods
hlt
jne
iret
das
xchg
sbb
sbb
jno
mov
or
cmpsl
push
inc
cmpsb
pop
sub
jecxz
jmp
les
addr16
nop
mov
pop
jno
sub
loopne
je
aam
addr16
jnp
add
push
popa
jne
stos
jo
dec
in
mov
add
pusha
and
dec
jg
mov
test
test
jg
xor
xchg
cmp
in
lea
push
enter
iret
push
dec
mov
sub
fstl
fiaddl
jl
push
mov
push
push
mov
inc
imul
loope
and
pop
jmp
loop
inc
pusha
xor
cmc
mov
stos
insb
lahf
cmc
mov
cltd
pop
decl
repnz
xchg
mov
mov
jmp
inc
jns
lods
cmp
imul
test
mov
out
sahf
icebp
pop
xor
out
dec
in
imul
icebp
xchg
jnp
scas
pop
xchg
mov
add
scas
pop
mov
mov
mov
fiaddl
fdecstp
in
stos
test
pop
jg
mov
cmp
and
mov
xor
add
push
sbb
outsb
inc
cmp
adc
out
mov
cmp
mov
sbb
repnz
nop
or
lock
outsb
pusha
jp
push
mulb
bt
jle
dec
into
push
js
dec
jmp
cmp
lods
pop
add
dec
addr16
and
jae
iret
sbb
dec
inc
shll
inc
jne
fistps
hlt
cmpsl
mov
mov
lods
int3
push
lret
xor
cmp
mov
mov
stos
add
xor
test
addr16
jbe
movsl
ljmp
sub
ror
lret
inc
divl
jno
repz
pop
lahf
test
sub
fdivl
dec
pop
mov
add
push
dec
add
cltd
xchg
jo
insb
jne
arpl
jb
leave
jp
lds
jo
lods
sub
mov
repz
ljmp
in
das
fdivs
mov
addr16
sar
cmc
sbb
pop
and
aas
das
je
fcompl
add
orb
cmp
mov
sti
ret
or
xor
lret
lret
shrl
dec
pop
sub
int
arpl
sbbb
js
hlt
and
frstor
and
mov
mov
stc
add
mov
jmp
jg
fcompl
push
scas
add
or
jne
pop
adc
jge
daa
push
pushf
cmp
dec
mov
es
test
fdivrp
xchg
movsl
bound
pop
rclb
sub
repnz
push
pop
aam
xchg
adc
push
cmp
and
jmp
fwait
pop
test
xor
and
rcrb
lcall
out
in
push
xor
pop
inc
ds
ljmp
outsl
xchg
int3
push
xchg
fmull
adc
loopne
sub
repnz
ret
push
jle
xchg
ja
jb
jo
and
xor
test
outsl
mov
and
rcr
cwtl
sub
cmp
sbb
out
rcrl
add
xchg
mov
mov
mov
repnz
shll
iret
in
std
pushl
sub
adcb
mov
loope
pop
int
sarb
and
or
push
call
xchg
stc
sbb
jecxz
mov
fcoms
mov
or
movsb
int
test
push
pop
jo
xor
loopne
stc
mov
aaa
push
sbb
lret
imul
xor
adc
in
icebp
rorb
cmc
dec
and
aad
inc
movsb
lock
fs
sbb
inc
and
fcomps
pop
xchg
outsb
cld
cmp
orb
cmp
cmp
xorl
mov
pushf
mov
clc
jnp
adc
mov
out
lds
int
jo
adc
int
test
int
sti
sbb
push
out
in
lds
adc
or
test
cmc
add
pushl
cltd
jo
push
arpl
adc
ljmp
and
mov
stos
cmp
push
scas
addb
mov
fcoml
test
outsl
std
je
xchg
fmul
shrl
mulb
sbb
inc
aam
sti
jno
jg
inc
mov
fcoms
ds
add
shrb
or
adc
bnd
push
pushf
lods
loopne
cli
xchg
mov
pushf
inc
inc
insl
push
mov
mov
mov
jmp
adc
mov
cmpps
shlb
inc
jnp
clc
jp
fxch
mov
push
mov
cmp
fcmovnu
loope
push
jo
scas
mov
adcl
scas
mov
divb
scas
scas
mov
cwtl
mov
cmpsb
cmp
xchg
push
add
sarl
lret
xchg
hlt
xchg
mov
cmpsl
pop
and
lcall
inc
dec
sbb
inc
push
pop
into
mov
push
dec
cmp
sbb
daa
cmpsl
and
das
sbb
jb
sahf
sub
jp
sar
mov
mov
out
push
call
mov
jns
repz
xchg
push
or
je
shl
insb
push
int
call
arpl
sti
fisubrs
cli
faddp
jae
scas
shl
jbe
push
jecxz
mov
pop
xor
ss
lea
lods
xchg
mov
and
push
aas
aad
sub
adcb
fisubs
cmp
aas
out
das
jnp
dec
pop
stos
dec
dec
jg
inc
xchg
pop
mov
ficomps
ficoml
push
lret
push
enter
mov
jmp
icebp
test
lret
cmpsl
add
dec
aad
sub
mov
xchg
xor
cmp
fcomp
addb
pushf
into
sbb
aam
push
arpl
pop
inc
jno
xchg
sub
jecxz
into
stos
mov
lcall
leave
or
cli
sbb
loop
pop
mov
aad
xor
inc
stc
lcall
ffreep
in
movsb
xor
imul
add
shrl
stc
adc
adc
lock
std
pushf
rcr
dec
clc
aaa
insb
mov
mov
ljmp
stos
cmp
add
aam
adc
adc
and
add
pop
sbb
fs
ret
lret
sbb
add
scas
pop
mov
pop
mov
xchg
mov
cmpsl
es
jb
das
xor
addb
aam
xor
gs
call
mov
ds
dec
xlat
and
add
into
lahf
xlat
cwtl
nop
xchg
cmp
je
push
sbb
insb
adc
adc
cmpsl
sub
bound
mov
test
xor
mov
les
cmpb
mov
jmp
jl
mov
adc
repz
fistpl
mov
aad
iret
sub
adc
mov
xor
outsl
sub
js
rorl
cmpl
xchg
jl
cmpsl
shrl
imul
scas
sub
pop
in
rcrb
pop
lods
xchg
pushf
mov
xchg
out
jno
shl
imul
sahf
xchg
clc
xor
sbb
jg
cmp
cmc
sarb
lret
cld
sub
cli
lcall
sarl
mov
iret
xchg
and
je
nop
pop
jne
sub
jl
push
adc
xchg
jb
mov
jno
or
imul
sbb
sbb
and
insb
shrb
clc
imul
sub
pusha
and
pusha
sub
leave
sub
dec
sub
loope
cmp
cld
push
out
cmpl
push
jne
xor
dec
fwait
xor
pop
or
out
mov
fists
outsl
stos
mov
jno
fldenv
adc
pop
cmpsb
add
xor
mov
in
adc
jb
add
shrl
mov
fs
xchg
mov
rorl
xchg
mov
xor
fwait
cmp
and
mov
and
inc
push
xor
pop
mov
mov
jmpw
ret
insl
inc
cmpsb
sar
cwtl
xor
sbb
jno
jge
jmp
mov
cmp
push
add
push
mov
pop
call
mov
xor
nop
jmp
adc
jo
mov
mov
mov
xchg
in
xchg
cmpsb
into
hlt
aad
pop
cmp
pushl
or
pop
rclb
push
xor
lds
dec
inc
mov
loopne
cmp
adc
fbstp
and
add
pop
arpl
movsl
imul
andl
xor
jmp
xchg
gs
inc
push
dec
adc
xchg
mov
sub
js
cmpb
inc
push
int3
les
pop
jmp
out
stos
sbb
dec
enter
or
xor
subl
jecxz
pop
mov
xchg
or
jle
mov
and
add
std
jl
push
mov
xor
add
xor
pop
loopne
mov
sbb
xchg
shl
jae
cmp
mov
xor
pop
stos
push
mov
add
or
inc
push
test
adc
mov
jmp
mov
test
test
insl
fcmovbe
nop
cmp
jl
js
jbe
and
xchg
xor
into
push
out
jmp
mov
adc
dec
les
cmp
mov
and
mov
xorl
sub
mov
jge
mov
and
mov
dec
jle
imul
movsb
mov
jne
jne
or
xchg
and
cmp
std
or
mov
pop
sbb
call
mov
push
fistpl
xchg
xchg
scas
dec
negb
adc
jmp
imul
lods
mov
aas
cmp
fidivrs
nop
jge
ja
mull
or
movsl
clc
sbb
pop
mov
mov
dec
je
cli
sbb
andl
dec
ret
imul
lods
push
rolb
movsl
push
es
or
int
push
shll
int3
aad
add
sbb
mov
lret
or
pop
clc
sbb
popf
mov
popf
popf
rcl
jmp
cmc
in
out
mov
enter
dec
repz
out
std
lock
mov
sbb
push
sbb
in
adc
imul
cwtl
mov
or
cmpsl
sbb
pusha
fstps
sub
push
xlat
cmpsb
push
cmp
out
sti
stos
pop
jb
ja
imul
test
or
int3
subl
repnz
dec
pop
fidivl
sbb
jge
adc
add
and
inc
or
or
adc
in
xlat
enter
sub
pop
hlt
fidivrl
dec
inc
fdivs
jmp
mov
inc
das
fwait
or
sub
push
adc
aam
mov
mov
sahf
dec
jecxz
mov
jl
outsb
pushf
dec
cmp
aas
mov
pop
stos
jb
les
cmpsl
inc
leave
lcall
mov
pop
icebp
sarl
sub
sarb
push
push
pop
fdivrs
lds
lret
lea
lcall
push
jno
dec
adc
jnp
lods
pop
in
int3
mov
ss
add
popf
cmp
in
jle
sbb
stc
stos
sbb
push
xlat
pop
leave
adc
add
lret
nop
addb
faddl
pop
fwait
aaa
jbe
cmp
jecxz
in
cmc
repnz
and
pop
sub
xor
lret
stos
lret
add
pop
js
test
pop
inc
push
shll
clc
imul
push
pop
adc
cmpsb
add
dec
cmp
add
add
imul
hlt
sub
jg
cmpsl
jbe
sub
xchg
dec
fnstenv
mov
mov
pop
fistpll
fsubr
adc
xchg
repz
sbbl
les
xchg
fcoml
shll
cmp
inc
aad
or
out
xor
push
sub
xchg
xchg
sbb
gs
xor
not
and
popa
xchg
jne
adc
pop
insb
test
xchg
sarb
add
sbb
xchg
inc
mov
sbb
sbb
inc
fiaddl
xchg
das
mov
ja
stos
xchg
xchg
jbe
push
pop
in
mov
push
jmp
iret
cmc
je
or
stc
pop
or
jmp
scas
popf
mov
or
jg,pt
sarb
lcall
orl
adc
push
cmp
in
fisubrs
into
popa
jge
cmc
cmp
int
test
dec
and
sub
cmp
cltd
popa
and
loope
loop
xor
mov
jbe
es
xchg
repz
mov
shlb
mov
hlt
xchg
mov
add
incb
fidivrl
popf
dec
jmp
dec
pop
mov
and
xchg
adc
leave
mov
lods
push
ret
jmp
and
jecxz
jecxz
cltd
ret
pop
cltd
cmp
cmp
pop
add
ret
or
adc
mov
mov
jno
jb
movsl
fistpl
les
subl
cwtl
cli
mov
popa
jecxz
cmp
add
lea
movb
incb
or
xor
test
movsb
shrb
push
mov
arpl
sub
in
push
push
and
inc
ds
xchg
push
fwait
dec
dec
fxtract
lods
sub
rclw
cld
mov
or
outsb
lea
add
fisttps
jl
xlat
and
add
push
mov
lds
ficomps
lock
out
cltd
and
aad
clc
xor
cwtl
daa
add
inc
adc
dec
test
dec
cmp
or
loop
sub
push
faddl
push
enter
pop
push
cs
xor
scas
mov
jbe
pop
ss
dec
inc
and
mov
add
add
and
add
ror
jg
adc
pop
loopne
stc
jno
lods
neg
sbb
jno
push
clc
aad
mov
ja
xchg
and
sbb
xor
nop
sbb
lds
pop
adc
push
cmp
jge
mov
sti
cmp
mov
jge
shlb
push
xlat
jp
cli
push
pop
pop
imul
pop
xchg
cld
shrl
jns
jnp
repnz
int
ja
push
mov
js
adc
aam
cmp
and
inc
mov
ret
xorb
lret
loop
or
in
lret
repz
sub
push
movb
movsb
xor
fnsave
cmp
nop
test
pusha
or
xlat
andps
jo
test
push
out
xchg
call
push
xchg
call
jg
mov
lods
push
inc
test
leave
mov
cwtl
scas
mov
subl
mov
int3
std
cmp
stos
in
movsb
fwait
ret
scas
inc
stos
xlat
test
shrl
pop
ffree
xchg
xor
cmpsl
adc
mov
inc
mov
scas
outsl
jmp
outsb
fdivrl
ffree
dec
sbb
loope
int3
repnz
ret
xor
jnp
push
and
outsb
rcr
cwtl
jns
mov
in
push
pop
pop
lret
add
popa
insb
add
test
ret
jle
scas
xchg
xchg
rorb
and
rorb
js
shlb
push
loope
lret
ficomps
sub
sbb
inc
or
pavgw
clc
xor
xor
sbb
dec
lahf
and
imul
or
rorb
test
add
arpl
and
jb
test
dec
sub
mov
clc
mov
add
mov
mov
loop
push
dec
mov
xchg
lods
or
push
push
or
fidivl
add
adc
pusha
sbb
dec
cmpsl
sub
mov
sbb
test
inc
pop
insl
js
pop
addr16
dec
mov
shrb
pop
sahf
imul
sbb
in
les
add
mov
cmpsl
int3
jg
popf
mov
ret
sarb
stc
xchg
push
mov
adc
popf
push
stos
leave
ljmp
cmp
test
and
shl
mov
lahf
stc
and
add
jb
mov
mov
sub
xor
cmp
mov
jmp
pop
enter
push
insb
inc
xor
int
or
fincstp
jmp
mov
flds
push
xor
imul
fdivrl
push
in
out
stos
adc
in
sub
dec
jl
pop
xor
aam
mulb
scas
pop
aam
mov
rcll
xor
inc
imul
cmc
enter
stos
or
lock
pop
in
imul
pop
push
lds
inc
sub
dec
pop
xlat
sub
cmpsb
pop
pop
insb
ja
sub
in
addr16
call
inc
xchg
clc
sub
into
dec
addb
sub
decl
mov
jns
adc
outsl
pop
inc
movsb
addr16
clc
or
sbb
jecxz
cmpsb
mov
pop
decb
ret
jge
mov
fisttpl
jns
push
dec
dec
test
xor
xchg
dec
into
cld
leave
add
cmp
push
mov
pop
aam
push
pop
adc
xor
mov
sub
jmp
inc
insb
ljmp
push
aaa
dec
mov
lret
mov
or
test
inc
leave
cli
xchg
pop
cs
dec
lods
shll
and
mov
fnstsw
and
inc
add
mov
sub
in
mov
mov
push
addr16
sahf
popa
fwait
adc
or
mov
sbb
sahf
or
jne
pushf
notb
mov
fwait
dec
sub
mov
cmp
cmc
lret
sahf
or
leave
sbb
inc
sarl
test
xor
mov
movsl
es
test
ds
jb
imul
je
out
push
mov
push
and
push
arpl
and
in
out
pop
imulb
push
fadds
mov
mov
jmp
xor
sti
fisttpl
out
xchg
cld
sbb
rorb
add
notb
mov
cwtl
adc
cld
fwait
sbb
insl
fildl
test
jns
push
push
pushf
mov
out
je
loope
add
outsl
xadd
popf
mov
fadd
xchg
or
sub
loopne
jmp
lahf
in
leave
push
lock
aaa
xchg
popa
pop
mov
add
jae
das
push
cwtl
aad
adc
pop
jno
sbb
outsl
or
mov
fs
loope
repz
aam
lods
cmp
mov
fs
xorb
roll
shlb
dec
cmpsb
loopne
js
xor
mov
fsub
in
and
ret
and
push
rorb
dec
cmp
and
fistpl
sbb
xchg
sbb
pop
push
das
int3
pop
das
dec
decl
dec
inc
xor
outsb
adc
xor
leave
mov
fmull
ljmp
test
lock
push
lea
in
cmpsl
dec
outsl
ja
jp
test
fiadds
movsl
jbe
sahf
sbb
push
mov
cmp
mov
jl
pop
inc
fidivs
xchg
mov
bound
pop
mov
lods
in
sbb
pushl
cmp
sub
sahf
scas
fdivs
add
ret
sub
movsb
lret
xlat
clc
jo
arpl
xor
cmp
or
fwait
out
add
adc
cmpsb
shr
addb
mov
add
and
sub
rorl
push
pop
xor
insb
addr16
push
or
fadds
icebp
ret
movsb
lea
outsl
decl
and
into
adc
loopne
ja
mov
das
sbb
imul
decb
shlb
pop
fdivrl
adc
leave
push
cmpsb
push
lahf
adc
data16
add
jae
xchg
stc
sbb
xchg
xlat
push
popf
aam
jb
cwtl
je
inc
repz
ja
sarl
icebp
mov
pop
pop
sahf
ds
jmp
jns
sbb
dec
decb
test
mov
mov
xlat
pop
scas
mov
hlt
mov
imul
sub
jno
jecxz
clc
sbb
pushf
inc
fs
xor
in
je
mov
enter
loop
push
out
pop
mov
std
fsubrl
cmpsb
push
jb
xor
rcrb
cmp
int
sbb
test
bnd
add
push
mov
movsl
cs
sbb
mov
cmp
movl
mov
cmp
mov
pop
cmpsb
loope
pop
mov
mov
insb
movsl
mull
dec
add
sbb
add
adc
fldl2e
jl
out
out
xor
sub
xchg
fbstp
scas
sbb
icebp
in
ss
bound
xchg
xor
mov
lahf
js
adc
imul
pop
aad
shll
enter
aaa
lods
daa
in
lcall
mov
cmp
cwtl
dec
arpl
inc
das
jp
inc
sbb
lock
push
add
cli
and
fs
add
jno
mov
and
sub
and
rolb
out
leave
stos
sbb
xor
repnz
jmp
adc
jp
and
test
cmp
ret
adc
inc
ss
xchg
dec
aas
pop
sub
mov
xlat
vmread
cs
loopne
mov
add
stos
mov
mov
or
out
addl
je
rcl
mov
daa
iret
inc
jle
add
bound
rcrl
mov
stos
aam
mov
xor
ror
call
xchg
pusha
fsub
dec
stos
sub
js
xchg
xchg
stc
inc
xor
mov
fldl
push
pop
dec
aas
and
jne
pop
push
push
cmp
add
repnz
pop
dec
or
inc
aam
movl
stos
adc
mov
jle
xchg
sub
mov
add
leave
lahf
insl
es
mov
dec
pop
xor
adc
xchg
xor
mov
push
jne
leave
inc
dec
mov
decb
ds
push
push
xor
inc
inc
jnp
cmp
sub
jecxz
mov
lret
daa
push
cmp
out
and
mov
add
pushf
lcall
lods
imul
mov
pushf
adc
test
pop
and
push
push
out
push
add
mov
rdmsr
add
test
pop
insb
push
repnz
jnp
fwait
push
ret
lret
cmp
test
sub
cbtw
adc
or
repz
push
cmp
jg
fnsave
sbb
popa
mov
push
and
adc
data16
fs
std
mov
fisubrs
hlt
or
stos
fs
pop
xchg
mov
inc
and
push
mov
mov
adc
test
jae
test
xchg
jne
mov
sbb
jmp
mov
aam
fsubl
shlb
mov
daa
loop
insl
ret
pop
push
icebp
xchg
adc
shll
loop
xchg
xchg
testl
rolb
stos
roll
jne
add
imul
ja
push
imul
jecxz
add
andl
ret
mov
xchg
loop
stos
fsubrl
pop
call
ja
shlb
stc
fildll
or
mov
add
aas
jl
push
jle
mov
in
mov
test
push
xor
xor
cmp
mov
mov
or
outsb
mov
mov
cmp
movq
bound
rorb
inc
sbb
fs
pop
loop
and
shlb
push
cli
loopne
xchg
sahf
daa
dec
jo
mov
fidivs
imul
in
lret
popf
aam
cltd
test
arpl
not
leave
loop
popa
in
mov
out
push
insl
es
in
mov
dec
cmp
popaw
xor
stos
in
enter
insl
jl
or
add
jb
push
popf
nop
and
in
jmp
xor
ret
mov
jge
je
push
push
shr
adc
push
pop
test
sub
rorb
test
xor
icebp
incl
lea
cld
push
push
in
hlt
pushf
lods
hlt
movsb
insb
sbb
sbb
push
sub
fisttpl
push
mov
invd
out
mov
add
and
add
mov
dec
jne
inc
adc
pop
lods
pop
and
mov
push
jl
jmp
icebp
dec
xchg
push
les
test
xor
sbb
sar
pop
dec
insb
lds
and
jg
mov
sbb
push
or
pop
sti
fistl
nop
pop
mov
pop
lods
out
push
cmp
js
cltd
jne
xor
popa
inc
js
repnz
mov
inc
mov
add
mov
xlat
ljmp
mov
es
push
mov
mov
dec
push
cs
stc
pop
jo
clc
and
movsb
setnp
int
das
sub
or
jge
inc
mov
and
stos
push
outsl
push
vsubss
jl,pn
js
push
rorl
loop
fwait
xor
xor
test
push
popf
push
mov
jb
ret
sahf
sbb
pop
push
mov
sbb
sbb
popa
xlat
lods
popf
pop
aaa
cmpsb
pop
and
jbe
fisttps
out
mov
jo
inc
mov
shrb
jp
lods
push
push
insb
mov
test
scas
jle
std
add
push
call
movl
xchg
pusha
xchg
cs
mov
aas
out
call
mov
inc
pop
push
add
orb
lret
inc
outsb
xor
xchg
sbb
add
andl
mov
stc
mov
inc
xchg
imull
pop
addr16
adc
js
jbe
sahf
lock
sarb
xchg
dec
xchg
mov
sub
imul
rclb
mov
ljmp
lea
pop
xchg
push
pop
mov
xor
int
pop
adc
cmpsb
pop
cltd
jecxz
dec
jge
add
cmp
aad
ljmp
js
ja
xor
xchg
dec
in
dec
cmp
dec
bound
push
insl
inc
faddp
imul
pushf
cmp
iret
push
push
xor
nop
inc
cmpsl
sbb
sbb
mov
mov
cmp
mov
lret
sub
mov
mov
out
xor
cmpsb
push
fldenv
stc
lods
xchg
fistpll
inc
push
cltd
pop
rcll
jae
outsl
mov
icebp
movsb
dec
int
cltd
xchg
cltd
scas
mov
les
dec
xor
sbb
and
sub
adc
inc
jl
leave
neg
lea
mov
pushf
mov
or
adc
dec
lock
adc
adc
in
and
gs
mov
add
mov
xor
jns
lods
push
scas
jecxz
add
xchg
and
stc
sbb
mov
dec
xchg
int3
add
cli
adc
gs
shrb
jno
xor
inc
cmp
lahf
fistps
leave
xchg
test
add
fimull
xlat
leave
cli
adc
jge
dec
push
cmp
std
or
addl
test
daa
in
inc
or
push
sub
jb
mov
sbb
mov
cltd
pop
cmp
pop
loop
imul
mov
add
mov
in
inc
xchg
mov
dec
outsb
adc
xor
pop
flds
sub
inc
xor
ret
ja
or
cmp
inc
pop
add
mov
inc
sbb
movsb
mov
bound
jno
dec
xchg
cld
jno
adc
and
je
jmp
xchg
loop
je
loopne
adc
cmp
jg
insl
mov
cmp
daa
sbb
jo
jne
mov
push
cld
mov
mov
ss
cltd
mov
push
push
cmc
pop
insb
std
mov
in
push
fiadds
imull
scas
aaa
dec
dec
xor
std
xor
rcr
pop
repnz
push
xchg
in
inc
or
dec
in
fwait
jmp
sub
sub
popf
push
inc
inc
mov
mov
xorl
fcomp
mov
ss
rcrb
dec
je
ret
cmp
push
cmc
push
addr16
dec
jl
mov
cld
cmp
std
jp
or
and
push
ffreep
sub
pop
aam
add
in
frstor
fdivrl
xor
push
dec
xor
cmpsb
or
cs
dec
data16
and
push
mov
dec
and
fdivrl
cmp
mov
out
insl
lret
into
jl
std
xchg
icebp
mov
gs
nop
xor
je
jb
stos
mov
xor
jbe
mov
xchg
push
test
mov
in
xor
call
shll
movsl
or
sub
lds
sbb
arpl
into
add
pop
or
data16
mov
xchg
pop
xchg
mov
sbb
sbb
xchg
sbb
idivb
xchg
adc
ss
dec
mov
fidivs
pushf
cmp
mov
aaa
dec
inc
insb
bnd
adc
adc
mov
fs
imul
add
mov
fmuls
pop
push
lds
rcr
pop
divb
movsl
mov
push
out
fildll
mov
outsl
arpl
in
inc
fstpl
mov
out
cmp
test
inc
int
push
or
adc
shll
push
mov
mov
out
add
cmp
ljmp
cmp
mov
loopne
adc
mov
testb
fists
rcrb
int3
test
sub
xchg
dec
out
adc
test
adc
test
in
dec
lahf
cs
and
cmove
jns
std
ds
leave
xchg
jl
mov
rclb
sub
and
jae
les
das
or
sbb
popf
push
mov
xlat
xor
jbe
cmp
inc
cmp
sub
sbb
aas
push
leave
and
sub
pushf
hlt
out
in
and
inc
ret
lods
mov
push
dec
or
jl
mov
jg,pn
hlt
xor
push
cmpsb
sub
jle
mov
ret
test
insb
jo
sbb
mov
insb
and
push
mov
jo
mov
add
mov
test
andl
test
stos
out
push
out
std
pop
jae
into
leave
xchg
lods
sbb
pop
ds
mov
mov
jne
cs
test
icebp
addr16
cmp
cmp
shrl
orl
mov
out
or
int3
add
xor
lds
loope
or
jb
push
jge,pn
shll
test
mov
mov
arpl
or
mov
mov
mov
bound
xchg
pop
loop
lds
mov
xor
adc
aam
cmpsb
insb
pusha
cmp
pusha
lcall
inc
test
push
pop
daa
cmp
and
sahf
pop
jmp
jb
mov
leave
mov
bound
fcompl
sbb
sbb
mov
and
jae
lcall
xchg
inc
push
and
dec
aaa
pop
movsb
int3
push
dec
inc
jg
or
inc
mov
mov
movsb
xor
ret
rep
push
adc
jecxz
jle
sub
add
or
cmpsl
lret
cmp
sub
cmc
pop
fninit
xchg
xchg
ljmp
fcmovbe
pusha
pop
hlt
mov
push
nop
cmpsl
sbb
fstl
push
dec
xlat
enter
outsl
shl
fsubrl
xor
mov
or
adc
outsb
std
mov
fidivl
jns
gs
jge
push
jnp
push
adc
scas
dec
icebp
cmp
jbe
shll
test
cld
add
dec
arpl
int3
js
jnp
mov
pop
mov
lock
inc
or
stos
ds
jg
jno
sbb
jo
xor
jge
xchg
jg
xor
cld
adc
sarb
test
cmpsb
mov
and
imul
imul
dec
scas
inc
aas
sbb
out
mov
fisttpl
in
jb
mov
jl
mov
aaa
enter
mov
add
mov
sbb
aaa
aam
pushf
jbe
inc
jae
push
bound
in
insl
xor
pop
popf
jno
push
test
push
leave
add
out
in
push
push
push
out
add
inc
js
jnp
pop
cwtl
or
sub
and
push
test
jnp
xor
in
pop
adc
mov
insl
mov
push
rcrl
bound
xor
mov
fwait
or
cmp
mov
inc
stos
mov
cmpl
iret
adc
sbb
inc
ret
lock
mov
pop
mov
and
and
lahf
inc
ljmp
push
xchg
push
mov
test
mov
dec
push
jmp
int
bound
push
repz
add
faddp
sub
lret
es
les
jne
inc
sbb
cmc
ds
andb
or
mov
fcomip
in
pop
mov
aaa
flds
dec
sbb
and
and
insl
jno
sub
push
in
imul
mov
lret
vmulsd
nop
cmpsb
push
outsb
jmp
insl
mov
push
inc
out
xchg
sub
adc
mov
cwtl
pop
cmp
je
shlb
sbb
adc
dec
push
lea
aas
cli
dec
outsb
aaa
cmp
inc
and
jb
mov
hlt
sti
and
pop
stos
bound
cwtl
xor
cli
shrl
sbb
mov
push
dec
notl
inc
mov
iret
std
mov
jo
cmc
dec
dec
mov
dec
mov
jp
xchg
mov
testl
xchg
pop
xor
mov
sub
aad
stos
popa
sub
enter
ds
repnz
aaa
or
add
sbb
jle
mov
out
dec
scas
mulb
inc
int
add
pop
shr
sbb
outsb
mov
cmp
stos
xor
nop
mov
jne
mov
lcall
adcb
mul
fildl
inc
pop
lea
sub
shrb
push
adc
xchg
pop
lods
scas
test
test
or
and
pop
xchg
icebp
dec
dec
shll
or
rcll
test
sbb
xorb
testl
inc
add
jnp
cli
mov
push
sub
mov
icebp
xchg
or
repz
xor
push
ret
es
into
and
inc
cmp
imul
pop
push
mov
mov
xchg
cmpsl
ror
arpl
xor
push
nop
xor
and
or
es
cld
xchg
in
cmp
xor
call
test
mov
out
jo
jne
cmp
mov
inc
lcall
xor
or
push
adc
popa
dec
mov
test
mov
xor
mov
insb
fsts
loopne
test
sbb
lods
in
sub
lcall
mov
test
daa
or
xchg
pop
sub
xor
jae
mov
mov
outsl
or
in
jl
insl
mov
xlat
cmpsb
pop
lret
jmp
cltd
and
dec
adc
fstpt
lret
push
ja
mov
sahf
sub
jne
dec
jae
lahf
outsb
pop
pop
hlt
pop
rorl
sbb
xorb
inc
lea
jmp
push
push
aam
mov
cmp
lds
mov
sarl
pop
jns
mov
stos
loope
insb
call
push
pop
sub
cmp
jo
sub
jmp
dec
lcall
push
or
sahf
in
out
fdivrp
pop
insb
and
xchg
or
add
dec
enter
inc
enter
jcxz
dec
scas
repz
nop
lret
cmpsl
lret
jle
pop
ja
cmp
push
pushf
dec
sub
push
jns
test
mov
inc
jb
scas
cwtl
adc
dec
or
jecxz
xchg
inc
push
pop
cmp
and
inc
jg
inc
mov
add
in
test
xchg
repnz
push
jecxz
inc
in
jae
add
jo
or
dec
pop
in
add
stos
xchg
mov
ret
fcmovnu
mov
mov
inc
mov
lods
mov
shrl
shll
or
sub
add
pushf
addr16
pushf
adc
fs
iret
es
pop
jle
dec
adc
mov
loop
jns
jg
outsb
pop
cli
test
cli
loopne
or
and
addl
mov
mov
dec
mov
pop
add
rcrl
cmp
aaa
sub
inc
dec
and
xchg
loop
bound
cmp
jecxz
scas
xchg
inc
mov
lods
fisubl
call
xchg
cmp
fdivl
mov
aad
loop
pop
ret
dec
cmpsb
xchg
push
popa
jno
pop
cld
cmp
xor
ljmp
divb
xlat
inc
xchg
or
mov
js
test
bound
or
lea
in
pop
rcl
shrb
lgs
mov
push
inc
push
std
jle
lock
mov
in
sbb
xor
fdivr
jbe
std
jl
lcall
mov
mov
sbb
je
dec
adc
cmp
lret
fidivrs
sbb
and
mov
daa
or
dec
aam
pop
js
push
cwtl
jecxz
jecxz
out
sub
add
push
jle
cli
mov
xchg
hlt
fldl
ss
pop
sub
mov
ja
sub
sub
mull
pop
out
hlt
mov
aaa
or
fdivr
or
or
imul
inc
test
jae
jnp
jmp
bound
pop
sbb
jle
jle
mov
mov
push
call
push
inc
mov
fsubrs
add
and
mov
inc
jbe
and
pop
inc
or
jns
mov
lods
out
add
enter
fdiv
subl
cmc
dec
shlb
push
jns
lahf
out
push
mov
pop
adc
mov
test
add
or
fsubp
movsl
push
imul
mov
int3
les
dec
popf
dec
xchg
std
addb
ljmp
mov
loope
or
call
filds
cmp
dec
test
dec
cmc
mov
fsts
dec
fnstsw
push
push
andb
sbb
je
jmp
jecxz
lret
movsl
push
fimuls
pop
out
mov
pop
jnp
aas
hlt
outsb
sahf
lods
fcomp
jmp
lea
std
cmp
add
cmp
scas
loop
int3
rclb
cwtl
lock
les
push
stos
fstl
xchg
into
mov
mov
push
aaa
in
adc
push
mov
aas
cwtl
int
data16
lret
ror
cwtl
cltd
outsl
ret
loope
out
jns
hlt
sahf
push
adc
xchg
mov
call
pop
ret
ss
fsubrl
loopne
lods
mov
lret
iret
ss
movsl
or
rcrb
mov
dec
stos
sbb
stos
nop
jge
popa
movsl
mov
xchg
in
iret
inc
or
bound
lock
fimull
cld
sti
push
jmp
mov
scas
hlt
inc
sbb
cmp
insb
pop
mov
mov
out
addl
inc
les
pusha
ss
pop
xor
mov
mov
loope
inc
hlt
subl
or
mov
ss
out
jno
xlat
mov
dec
mov
dec
fiadds
dec
adc
pushl
jae
dec
sub
xor
test
adc
aas
loop
xchg
mov
dec
out
dec
lods
jae
in
inc
stos
dec
and
dec
negb
addb
adc
inc
dec
out
mov
lock
cmp
mov
movsb
mov
movsb
xlat
xor
adc
adc
push
jne
mov
lcall
outsb
test
loopne
jb
dec
mov
mov
xorl
sarl
sarb
inc
mov
popa
mov
sub
and
pop
rcll
sub
ficomps
mov
adc
pminsw
addr16
pop
xchg
stos
imul
cmp
sub
daa
adc
mov
push
mov
sahf
sbb
adc
aad
jno
popl
les
mov
push
testl
dec
les
pop
jge
aad
cmp
push
xchg
mov
dec
mov
jb
push
ret
mov
and
mov
rcr
call
pop
jae
es
mov
mov
lahf
cltd
es
dec
out
imul
cmp
cld
xchg
add
mov
rcrl
jmp
sub
sbb
jo
shlb
pop
xchg
mov
and
push
jns
fimull
and
inc
pusha
add
and
push
push
adc
es
mov
rcrl
xor
icebp
jae
push
mov
test
sahf
or
jo
popf
inc
xchg
int3
push
pop
cmp
jl
and
inc
jp
inc
into
movsl
dec
jl
xchg
popf
mov
lea
inc
int
pop
mov
js
sbb
leave
mov
jne
add
fisubrs
iret
ret
jge
jp
sar
mov
dec
insb
out
inc
push
add
lods
sti
out
dec
loop
out
out
dec
cmc
pop
mov
das
adc
scas
mov
xchg
push
mov
xchg
pusha
test
bound
scas
std
test
int3
or
loope
or
scas
stos
fcoms
jg
negb
daa
ja
xchg
les
popa
repz
stos
iret
sub
mov
rcrl
jmp
pop
gs
inc
or
jmp
cli
cmp
mulb
mov
cs
cmp
dec
lret
or
pop
cmp
mov
mov
cmc
xchg
lret
mov
sbb
push
into
mov
xor
xlat
out
jb
test
push
adc
inc
add
pop
mov
xchg
rclb
and
mov
nop
cwtl
notl
and
sahf
mov
aad
in
lds
jle
mov
in
xor
lret
mov
jno
std
xchg
add
andb
js
sahf
decb
clc
dec
stos
pop
insb
adc
mov
add
inc
push
test
mov
dec
add
or
scas
jle
in
jb
xchg
sub
xchg
jmp
xchg
pop
and
adc
ret
cld
dec
clc
icebp
jb
push
push
imul
jp
fistl
into
inc
test
and
jb
std
aaa
cmpsb
jle
leave
dec
jns
daa
or
cmp
adc
nop
dec
push
mov
cmp
clc
imul
fs
outsb
cmp
test
std
or
pop
cwtl
and
jl
jmp
icebp
sti
pop
dec
pop
cmp
stos
out
pop
mov
jg
xor
enter
imul
cmp
cs
mov
mov
cmp
mov
imul
push
or
sub
popf
outsb
nop
xor
loope
adc
aaa
and
cmp
cmp
int
cld
lods
mov
mov
mov
jecxz
xor
jb
inc
ficoml
outsb
bound
cmpsb
cmp
inc
adc
ljmp
hlt
cmp
test
push
and
fs
inc
in
sbb
and
ss
ja
pushf
pop
mov
and
ljmp
sbb
sub
cli
rolb
out
test
aaa
into
pop
jb
dec
mov
stc
jl
hlt
pop
ja
outsb
jno
leave
or
xor
fadd
sub
push
ljmp
mov
inc
jp
test
adc
leave
sub
bound
mov
imul
fnstcw
out
lret
inc
jp
jmp
pusha
cmp
addb
mov
in
mov
mov
addl
mov
popf
out
lret
in
cltd
cmp
arpl
mov
movsl
jnp
inc
int3
mov
xchg
xchg
enter
xchg
lock
and
push
imul
lea
inc
stos
push
jbe
mov
push
jmp
or
sub
stos
ljmp
pop
loopne
inc
in
andb
gs
or
rclb
and
sbb
mov
or
cld
sub
shl
jbe
test
jg
add
dec
fbld
std
aas
clc
jae
mov
mov
ret
inc
mov
ret
xchg
jne
mov
fisubrl
stc
add
xor
out
jp
and
inc
subl
xchg
mov
aam
in
loope
mov
fistpll
cmp
jno
cmp
mov
jbe
sbb
pusha
icebp
stc
adc
js
mov
mov
lods
ret
popf
pop
es
movsl
in
xchg
sahf
loop
clc
dec
xor
arpl
test
jno
mov
neg
jg
adc
shl
or
arpl
outsl
inc
mov
push
test
pop
sbb
ret
cmpsl
jbe
or
int3
jmp
push
fisubrs
and
xchg
cmc
loop
ficomps
sub
cmp
rcl
call
dec
test
pop
push
test
test
out
int
push
xor
jp
sbb
push
arpl
std
push
and
lods
in
push
push
dec
xchg
jbe
adc
jbe
enter
imul
add
daa
in
or
loop
out
dec
ss
pusha
mov
cmpsb
mov
dec
in
scas
insl
cltd
dec
test
test
arpl
imul
enter
push
sub
iret
xrelease
cmp
xchg
inc
fmull
lea
enter
movsl
scas
in
inc
mov
mov
xchg
dec
es
std
xor
jo
and
push
mov
push
dec
dec
loope
lds
inc
xchg
loop
out
sub
pop
daa
pop
cmp
out
push
fisttpl
and
or
rolb
mov
or
lret
pop
test
cmp
push
xorl
inc
mov
xchg
int
adcb
stc
iret
cmpsl
repz
xchg
push
dec
push
sti
inc
ss
mov
pop
xchg
aad
aas
or
adc
pop
or
push
dec
push
jecxz
call
out
jmp
or
and
mov
cmpsb
pop
mov
fwait
mov
leave
mov
ljmp
mov
push
add
jae
adc
inc
test
repnz
mov
cmp
push
stos
pop
inc
inc
je
rcll
adc
dec
dec
test
cld
imulb
in
ret
pop
push
jno
aam
bnd
std
pop
cmp
xchg
cltd
pop
pop
lock
jae
cmpsl
dec
xchg
add
mov
push
pop
fisttps
int
or
out
push
cmc
mov
outsb
and
or
clc
scas
inc
test
cmp
andb
lahf
jl
adc
lahf
popf
call
fdivr
inc
or
cmp
mov
inc
push
ror
mov
pusha
add
pop
andl
mov
xor
xor
adc
pop
or
mov
adc
sahf
out
aaa
jbe
mov
add
and
jecxz
add
jmp
adc
sub
xor
inc
sub
loopne
cmp
mov
call
add
or
es
flds
addr16
les
bound
call
xor
push
mov
popa
std
mov
mov
or
int3
mov
mov
insb
in
ss
or
or
aad
jg
loop
aam
dec
lret
inc
inc
aaa
dec
nop
insl
fmul
scas
fldcw
jns
cmpsl
pusha
cmp
pop
push
adcb
adc
fdivrl
divl
or
jl
add
lcall
adc
ss
add
mov
div
test
lock
push
movsb
mov
or
mov
dec
loop
xor
xchg
gs
xchg
mov
loopne
mov
push
cmp
pusha
sbb
or
leave
lahf
sar
or
inc
or
addl
adc
ret
enter
mov
cmp
push
cmp
add
add
icebp
mov
pusha
mov
nop
jnp
xchg
xchg
or
dec
in
push
iret
jns
aad
adc
cmp
or
scas
mov
fs
jo
pop
cltd
jg
or
mov
jnp
idivl
push
daa
jb
pop
push
mov
std
inc
and
dec
clc
push
or
fstp
pop
lret
sub
mov
sub
add
pop
in
sti
repnz
hlt
xchg
or
xor
fnstenv
in
mov
adc
loop
test
mov
and
and
dec
outsl
jno
pop
sbb
leavew
add
xchg
inc
dec
xchg
cwtl
jno
add
adc
add
cmc
cs
fildll
je
ret
mov
xchg
xchg
fucomp
cmc
pusha
dec
jb
push
iret
pushf
sahf
cmp
pop
idiv
jecxz
mov
and
mov
sahf
mov
jecxz
xchg
bound
mov
push
add
cltd
or
in
pop
shrb
and
pop
mov
fcom
testb
fs
inc
cmpsl
dec
push
push
imul
push
gs
xor
mov
aas
test
adc
xchg
shlb
mov
xor
aad
add
shlb
inc
cmc
enter
xchg
xor
shll
es
dec
in
rorl
mov
dec
dec
sbb
ja
mov
sbb
call
mov
dec
mov
loop
movsb
sub
push
cs
xchg
rorl
les
cwtl
call
stc
and
test
add
mov
inc
jecxz
xor
lret
cwtl
push
xchg
jo
mov
xchg
push
cmp
mov
or
jge
push
fwait
sbb
xor
xchg
add
inc
lret
lods
push
mov
inc
jne
inc
jns
in
loop
mov
cwtl
push
fcomi
fsubrs
cmp
outsb
ja
mov
or
ret
sbb
push
pop
push
and
or
inc
dec
rep
lea
jmp
xchg
outsb
xchg
dec
push
rorl
cmpsb
das
mov
daa
pop
jae
stos
shlb
out
into
jmp
push
pop
sub
pop
aas
inc
ja
call
mov
sarb
mov
fistpll
mov
add
xor
repnz
adc
jnp
adc
and
ss
xchg
push
sub
imul
or
outsl
push
mov
lea
cmp
ror
aas
fs
inc
sub
jae
bound
dec
movsb
sti
inc
stc
push
rorl
mov
bound
mov
sahf
aad
mov
adc
or
mov
mov
dec
pusha
xor
mov
sub
add
xor
fldt
in
sbb
fmuls
xchg
jg
pop
iret
mov
mov
xlat
sub
std
lcall
gs
mov
js
cmp
negb
or
imul
fnstenv
lret
jnp
adcl
mov
xchg
cmp
push
js,pt
stos
inc
xchg
and
lahf
out
subb
or
out
mov
pop
int3
repz
and
cmpl
add
js
push
xor
cmp
movsl
cmpsb
in
xchg
cmp
popl
mov
cli
imul
mov
inc
addl
mov
sub
push
cwtl
out
jecxz
daa
sbbb
xchg
loopne
lea
adc
fsts
call
mov
jno
push
fadds
inc
ret
mov
pop
fldt
xor
jae
dec
sub
rorb
decb
ret
push
lea
push
call
test
xchg
outsl
add
fnstsw
lods
and
inc
xor
push
or
mov
sub
mov
mov
lods
mov
xor
imull
jb
cmp
insl
sbb
jno
push
push
jp
test
ds
cmpb
mov
jb
pop
aam
ret
dec
sub
pop
stos
jp
gs
je
pop
daa
add
mov
sub
pushf
in
or
mov
ret
js
add
sub
cmpsl
shrl
xchg
pop
jecxz
cmp
push
js
and
jecxz
lods
arpl
pop
test
pop
xor
ds
aas
loope
hlt
jmp
and
sbb
xchg
sbb
test
lahf
mov
and
jbe
mov
cmpsl
leave
cmc
arpl
and
sti
outsl
cmc
les
xchg
push
xlat
adc
sub
das
ficompl
sbb
mov
bound
repz
rcl
cmpl
push
dec
enter
fs
mov
js
jle
or
xchg
xchg
xchg
out
call
inc
pop
shll
outsb
dec
arpl
lods
je
and
outsl
das
cmp
sbb
iret
loop
addr16
sbb
das
push
xor
imul
incb
xchg
jae
cmp
adc
in
subl
stc
adc
scas
int
and
add
scas
ret
jmp
repz
add
xor
lret
mov
dec
jle
arpl
aad
rcrl
ficompl
mov
add
test
xchg
into
sbb
sub
andl
push
movl
testl
or
push
push
pop
std
sub
or
mov
push
jle
sbb
into
xchg
xor
out
bound
icebp
and
nop
push
inc
jle
xor
nop
loope
jmp
sub
jg
stos
mov
decl
cmp
inc
loope
sub
jge
adcl
in
popf
mov
psllw
xor
jb
inc
inc
push
fldt
outsb
inc
outsl
xor
jmp
dec
seta
xchg
mov
xor
cmc
inc
leave
nop
xchg
push
mov
movsl
adc
cltd
pushf
imul
jae
mov
cmpsl
ja
fnsave
inc
mov
push
push
pushf
inc
mov
sbb
rorl
das
adc
dec
inc
fcmovbe
fucomi
sti
andl
push
call
mov
dec
enter
loopne
mov
jmp
mov
outsb
leave
dec
lods
loope
pop
and
sub
add
xor
inc
cmp
mov
cld
dec
out
cmc
push
mov
loop
jno
mov
mov
movsl
push
addr16
je
dec
mov
or
inc
in
lret
pop
sub
daa
or
push
sbb
mov
dec
mov
cmp
or
and
aad
stc
pop
sarl
cltd
fidivl
fld
push
cltd
pusha
dec
insb
push
sbb
push
sbb
fs
outsb
jbe
mov
dec
js
add
cmp
and
or
push
int
dec
in
xor
sbb
xor
shl
mov
loop
dec
and
sti
and
stos
int
inc
ret
push
stos
mov
ret
xor
add
out
xor
ret
mov
lds
mov
test
insl
enter
shlb
xchg
mov
xor
jl
xchg
sbb
cltd
popa
jbe
adc
inc
push
leave
or
cmp
je
mov
les
pushf
mov
idiv
sub
sub
pop
inc
cs
inc
push
out
or
fcmovnbe
shll
lods
test
jno
dec
repnz
xchg
outsl
or
movsb
or
push
aas
push
push
jno
and
loop
cmc
mov
push
cld
xor
or
out
aad
xchg
or
jp
mov
xchg
sub
xor
cmp
push
jno
and
jns
push
pop
cltd
or
int
adc
in
roll
sahf
sbb
stc
mov
mov
jnp
inc
xchg
push
lods
mov
pop
sbb
xor
and
pop
pushf
dec
or
fdivrs
pop
adc
loope
jmp
xor
pop
insl
xchg
and
aaa
add
adc
lret
or
push
mov
repz
int3
cmp
inc
and
ret
jmp
cld
dec
es
fists
sub
mov
pop
int3
jp
mov
inc
mov
stos
jl
ret
add
adc
leave
hlt
imul
aaa
hlt
lcall
adc
or
and
and
repnz
xor
dec
pop
xchg
push
jne
call
test
inc
add
inc
mov
pop
out
jb
jecxz
sub
cmpsl
repz
stos
stc
mov
adc
fcompl
cli
push
pop
popf
jmp
xlat
xchg
movsb
insb
jmp
xor
cwtl
out
inc
popa
sar
jecxz
cmp
add
mov
and
vfrczps
mov
xor
sub
xor
adc
and
aam
inc
add
and
mov
cmp
jne
scas
jl
hlt
popl
inc
int
jg
jno
mov
insl
shr
sbb
inc
sarb
push
push
cmpl
add
aas
mov
mov
fsubrl
lods
ljmp
jo
js
fistpll
and
gs
mov
mov
movsb
es
imul
push
push
sbb
lods
and
mov
es
clc
popf
int3
mov
mov
jo
push
xor
mov
shll
dec
xchg
aas
ljmp
fs
jl
or
aam
jecxz
fmul
mov
pop
arpl
cmp
int
push
and
xor
lcall
bound
in
mov
add
mov
jno
add
and
leave
les
push
push
inc
sbb
jecxz
movsl
mov
js
iret
pop
std
jo
inc
push
frstpm(287
dec
xor
fisubrs
dec
inc
mov
jbe
jg
cmpsl
cltd
fsubs
mov
push
and
fstps
shll
call
es
dec
rclb
dec
pop
lods
push
addb
mov
mov
cmp
rcll
and
cmpsl
test
aas
std
gs
mov
stos
push
iret
sub
enter
pushf
mov
call
push
cmp
sub
cmc
vpunpcklqdq
sbb
and
lock
bound
shr
add
hlt
pop
inc
sbb
repz
shlb
add
mov
fidivs
imul
pusha
out
movsb
popf
inc
or
sub
sbb
sub
aaa
test
out
cmp
jb
movsb
dec
cmc
stc
add
addr16
loope
mov
call
adc
inc
cmc
repnz
or
jnp
cmp
in
rorb
push
jle
cld
xor
shrb
movsl
lea
cmpsl
pusha
pusha
out
mov
dec
iret
les
mov
iret
mov
mov
stos
mov
aam
insl
jb
inc
cltd
mov
pop
ror
cmp
aad
fidivs
fidivs
adc
ss
fldl
push
mov
leave
cld
repz
sub
jecxz
mov
xchg
nop
fdivrs
add
inc
cmp
clc
mov
pop
pop
cwtl
add
in
sbb
cmp
sbb
call
cmp
dec
les
ss
xlat
aam
push
or
inc
mov
adc
lods
mov
aam
rorl
lock
pop
stc
lea
aam
xor
mov
cmp
out
mov
lcall
adc
hlt
insl
push
xchg
jle
inc
aaa
sub
or
pop
repz
jnp
sub
pushf
out
add
jb
cmp
call
outsl
int
inc
cli
int3
mov
push
inc
iret
scas
sub
cld
mov
data16
inc
ss
sub
imul
mov
js
dec
pop
fnstenv
adc
pop
dec
lcall
xchg
sbb
cmp
mov
popa
addr16
and
shll
xor
imul
fstpt
mov
jecxz
flds
sbb
mov
or
les
add
jno
mov
pop
test
mov
test
add
fndisi(8087
adc
sti
push
ljmp
push
mov
sbb
test
ja
mov
pop
in
xor
jnp
pop
pop
mov
sub
sub
jl
aad
mov
cmp
or
adc
out
inc
lock
jae
pop
adc
pop
add
push
stos
push
jno
push
pop
pop
pop
sbb
stos
jg
out
fisttps
mov
fiadds
or
inc
cmp
cmpsl
push
js
dec
jl
sub
test
iret
aas
outsl
mov
mov
cmp
adc
fst
ret
stc
pop
lock
jl
push
fwait
inc
add
mov
test
add
mov
leave
or
fdiv
sbb
popf
pop
mov
push
loopne
pushf
cmp
movl
pop
or
inc
sti
enter
hlt
xor
arpl
push
xchg
les
jl
stos
jae
adc
out
mov
je
or
ret
inc
adc
mov
sub
loope
mov
fisubs
jne
mov
jg
loopne
push
leave
inc
cli
lds
lret
stc
divb
lret
jecxz
push
mov
push
aad
orb
sbb
pop
sub
fdivrp
cmp
mov
fistpll
jnp
sti
dec
push
mov
mov
out
idivb
stos
imul
push
and
mov
stos
add
ja
insl
pop
mov
xor
push
push
mov
adc
add
add
movsb
mov
add
bound
and
testl
ja
sub
jecxz
hlt
lds
pop
je
mov
in
pop
lcall
testb
mov
jl
movsb
dec
pop
int3
mov
inc
pushf
push
pop
mov
into
dec
mov
aas
dec
ret
or
sahf
das
dec
lea
lea
sbb
push
cmp
xchg
addr16
sbb
movsl
movsb
jp
fs
nop
xor
lret
mov
pop
fs
std
pop
fldcw
push
je
mov
ret
cmp
mov
inc
gs
std
xor
dec
mov
in
sub
mov
je
gs
sbb
xor
lcall
jl
xchg
ficomps
in
push
adc
fwait
pop
nop
jo
xchg
sub
pop
fists
iret
aaa
mov
add
push
lret
fs
sbb
mov
cmpsb
adc
push
mov
ret
cwtl
mov
mov
pusha
fs
cltd
mov
lret
jo
adc
ret
mov
loop
add
lcall
jmp
cmc
push
xchg
xchg
xchg
xor
popf
or
mov
ss
pop
into
out
scas
push
fistpll
dec
dec
mov
add
mov
inc
mov
dec
aaa
aam
push
pop
fcomps
test
repnz
mov
push
pop
fs
jmp
jp
xchg
lea
pop
aaa
mov
pop
ret
push
loope
mov
dec
inc
push
xchg
sahf
fists
lods
andl
in
pop
xchg
aam
inc
add
inc
mov
je
dec
add
loope
addr16
fnsave
fisubs
adc
jb
repz
enter
jg
cmp
mov
fucomp
push
mov
jg
or
int3
mov
mov
adc
mov
fucomip
xor
mov
xchg
add
adc
add
add
out
cmc
stos
movsb
popf
out
pop
mov
xchg
stc
stos
xchg
lock
sub
mov
jecxz
mov
in
jns
sub
push
xor
add
sub
orl
cmpsb
and
cmpsl
cmpsl
xchg
cmp
int
and
fcomip
sbb
jns
pop
leave
pop
dec
mov
cmpsb
clc
and
out
addb
cmp
cli
push
bound
or
jle
adc
sbb
xchg
or
pop
fisubrl
outsl
out
mov
sbb
mov
mov
xor
repnz
sbb
sbb
cltd
cmp
enter
aas
loope
loope
pop
inc
mov
cmp
fs
and
inc
push
and
jmp
push
lret
popa
xor
test
pop
nop
sbb
ret
add
in
jo
in
stc
fs
and
ljmp
out
je
adcb
sbb
fcoml
or
jo
xor
arpl
push
xlat
sub
cli
adc
ss
and
or
lret
push
es
aam
mov
lods
daa
stos
sub
adc
xchg
mov
ret
push
xchg
and
in
ja
dec
je
push
add
cld
stc
cmpsl
push
or
pushf
fisubl
mov
out
repz
sbb
mov
fdivrl
sbb
push
cmp
jo
negl
add
adc
fidivrs
int3
dec
mov
inc
pop
pop
push
mov
aam
sub
adc
out
cmp
test
pop
sbb
ljmp
lahf
mov
call
jb
lahf
mov
mov
mov
fs
add
lret
or
pop
inc
fwait
xchg
int3
ja
and
out
scas
inc
push
sti
add
aad
mov
sub
sbb
fsubr
repnz
into
lods
jmp
add
sbb
mov
jno
loopne
jmp
jb
pop
and
sub
pop
mov
sbb
mov
jle
cmc
xchg
sub
popa
and
jl
sahf
movsl
stos
inc
notl
push
je
cmp
xchg
push
lret
jle
jp
cmc
jg
mov
adc
jmp
xchg
sub
dec
mov
bound
sub
or
ss
fstl
pop
inc
xor
in
and
inc
mov
movsl
inc
pop
jo
cmc
hlt
in
xor
adc
inc
cmp
out
push
shlb
insb
outsl
sub
sbb
repnz
imul
inc
sahf
adc
mov
mov
sarb
loopne
loop
imul
sbbl
add
sbb
aad
sbb
push
xor
inc
sbb
out
fidivrs
add
mov
sar
shlb
xchg
jns
jne
sub
jg
out
hlt
sbb
sahf
sub
enter
movsb
jl
outsl
iret
ret
je
push
das
testb
inc
fcoms
aas
sbb
push
data16
mov
shrl
out
inc
in
mov
mov
or
push
mov
clc
cld
cli
jno
mov
pushf
insl
mov
push
insb
dec
movsb
sub
shl
add
adc
mov
jmp
add
mov
fwait
mov
mov
jnp
sub
cmp
mov
mov
inc
fdivs
mov
dec
test
sbb
std
inc
int
and
cltd
xor
insb
mov
rorl
jae
jp
jge
pop
pop
jns
xchg
iret
jecxz
loopne
mov
adc
lods
xchg
pop
cmc
xor
stc
pop
cmp
xor
in
dec
ret
fcmovne
repz
sahf
pop
add
add
dec
cwtl
into
imul
adc
test
push
xchg
mov
push
sbb
push
out
jmp
push
hlt
and
sbb
inc
leave
sub
adc
std
fcompl
adc
add
cmpsb
loopne
nop
xorl
push
repnz
scas
adc
dec
xor
lahf
insl
leave
pop
das
and
jp
xor
inc
cmp
xchg
iret
jg
js
pushf
loop
jmp
sbb
enter
adc
sahf
nop
dec
sbb
add
ja
fsubl
outsl
push
xlat
xlat
popa
out
jnp
nop
mov
mov
jmp
int3
jne
andl
inc
inc
test
jb
aas
push
lea
cltd
adc
sbb
std
inc
hlt
lahf
add
or
loop
call
das
mov
jmp
scas
xchg
inc
outsb
out
aad
push
movsb
push
icebp
sbbl
popf
sbb
push
fidivs
rcll
sub
mov
adc
bnd
pop
cmp
pusha
xor
mov
cmpsb
adc
pop
ficoml
sti
and
push
adc
out
jg
cmpsb
shr
jnp
or
xchg
adc
dec
fld
sbb
xchg
shr
xorb
test
out
jge
clc
inc
out
mov
fldt
lds
js
das
aad
inc
sub
lret
or
into
lret
out
push
jae
addb
adc
imul
dec
mov
lea
push
das
jae
mov
push
mov
mov
fstl
adc
or
mov
sahf
imul
jnp
and
mov
out
fmul
sahf
out
push
xchg
mov
mov
jne
fldcw
pop
enter
shll
negb
stos
mov
imul
int3
sti
xchg
xchg
outsl
test
or
int
adc
xchg
mov
or
clc
shrl
fbstp
push
push
adc
and
pop
scas
inc
pop
cld
and
or
mov
inc
lea
mov
xlat
mov
ret
mov
test
or
stos
jns
jge
pop
lahf
xchg
adc
fisttps
push
lret
ss
int
sbb
mov
mov
xorb
sbb
mov
adc
push
out
into
rclb
mov
arpl
out
out
mov
aad
mov
stos
add
sub
push
push
in
shl
fidivs
push
pop
cmpb
gs
incl
xchg
add
lret
lds
imull
add
mov
mov
or
btr
adc
mov
incb
xchg
ret
je
pop
mov
pop
jl
dec
mov
push
cmp
sub
sub
fisubrs
add
std
sub
add
lahf
mov
push
xor
std
jnp
push
jb
xchg
xchg
jmp
stos
mov
xor
dec
mov
repz
mov
imul
aas
cmp
fistpl
dec
iret
into
push
ja
cli
in
sub
and
adc
dec
mov
ds
xchg
xor
jae
lock
movsl
push
xor
jl
push
xchg
pop
cmpb
and
stos
ja
cwtl
sbb
mov
test
add
jge
lret
out
push
jnp
scas
sub
sbb
repnz
test
push
mov
in
dec
xor
lock
push
jg
mov
adc
jle
and
cltd
andb
sub
lds
fnsave
mov
scas
inc
push
xchg
mov
adc
pop
ret
sti
sahf
dec
mov
push
fwait
cmp
cmc
xor
nop
sarl
iret
mov
cmp
sub
jae
mov
jmp
dec
div
mov
pop
iret
and
test
inc
push
fld
pushf
mov
jge
pushf
sbb
xor
aaa
sub
call
push
or
cli
sbb
movsb
adc
cmpsl
ss
push
sbb
cld
adc
add
push
repz
xchg
lfs
push
xor
nop
xchg
pop
jmp
mov
int3
cmp
inc
mov
push
jg
xchg
fsts
or
cvtps2pd
fldenv
loop
dec
push
pop
sub
cmpsl
adc
loope
rolb
shrb
sub
jp
std
dec
movsl
add
push
movl
jns
jle
divb
stos
pop
push
jne
adc
scas
or
mov
dec
aaa
aam
mov
mov
mov
jl
stos
enter
adc
and
mov
jae
jb
jecxz
dec
outsl
js
into
mov
sbb
andb
cmp
mov
sbb
stos
dec
idivl
call
int
adc
mov
pop
fcom
in
mov
push
push
scas
mov
xchg
sub
clc
pusha
mov
scas
push
out
mov
mov
jl
loope
cmp
push
fdivrs
dec
jl
jecxz
cmp
mov
aaa
push
inc
pop
xchg
push
mov
cld
mov
cmp
dec
movsb
lds
jbe
cmp
push
sbb
arpl
xchg
aas
inc
nop
iret
cmp
pop
je
idivb
lahf
enter
pusha
add
or
in
bound
xchg
icebp
std
movsb
lret
mov
add
gs
sti
aam
adc
shlb
mov
push
add
fcmovne
push
fdivrl
out
add
std
out
jae
ret
cmp
sbb
ljmp
and
cmp
leave
sti
cltd
test
jmpw
mov
mov
insb
cld
fs
cmp
scas
aaa
int
outsb
lock
icebp
repnz
mov
push
cmp
mov
gs
mov
aaa
dec
mov
jae
add
mov
cwtl
xor
sbb
out
jle
clc
adc
into
mov
fstp
xor
push
loopne
imul
sti
test
cmpl
scas
jno
inc
lahf
sbb
out
je
xchg
sbb
mov
addr16
inc
insb
pop
xchg
cmpsb
push
mov
xchg
and
xor
nop
or
call
pop
push
push
adc
and
out
pop
lahf
mov
adc
call
inc
xchg
mov
dec
fisubl
xor
mov
xorl
pusha
xor
in
sbb
jg
aas
adc
fcoml
dec
push
xor
and
mov
xor
jge
jb
pop
add
mov
cmp
push
jns
aaa
jno
xchg
fs
sbb
in
ror
sub
enter
xchg
popa
or
lods
push
insl
cmp
sub
mov
cltd
xchg
into
xor
mov
dec
xor
or
jmp
push
mov
xchg
movsb
push
leave
mov
fwait
pop
jno
lods
or
test
ja
movsb
out
lea
inc
dec
push
lock
notl
mov
addr16
cltd
cltd
mov
mov
xor
or
xor
mov
fs
cmp
rcl
xchg
jns
xor
stos
mov
int3
mov
jle
xchg
fisubl
dec
stc
add
dec
clc
dec
lret
mov
mov
mov
out
ret
fcompl
pusha
mov
outsb
in
imul
cwtl
xor
fcmovbe
xchg
arpl
cs
pushf
rclb
push
fsub
mov
std
leave
pop
loop
xchg
hlt
scas
xor
mov
aad
fidivl
jle
mov
lods
nop
and
add
add
shrb
ljmp
mov
rolb
lea
dec
inc
out
outsb
sbb
out
icebp
adc
push
dec
aad
sub
jle
lock
jo
fbld
cwtl
add
test
lock
inc
lret
jne
bound
clc
jns
in
fcomps
gs
loopne
sub
aad
or
inc
jbe
loopne
jae
or
inc
inc
jle
jge
pop
movb
lret
pop
mov
into
add
jmp
bound
mov
jns
insb
dec
lret
fsubrp
scas
jmp
mov
popa
jl
test
cmp
movsb
inc
push
dec
pop
cmpsb
xchg
fs
iret
xor
imul
in
incl
hlt
js
push
mov
fwait
push
loope
mov
sub
int
test
fldcw
jmp
mov
adc
mov
fdivs
sbb
sub
xor
mov
repnz
adc
aas
and
xchg
and
mov
cmc
xor
popf
or
icebp
je
adc
dec
push
stos
imul
push
mov
imul
cmc
aas
mov
sub
add
aaa
or
leave
sub
test
jle
movsl
sub
rcrl
mov
sbbb
sbb
xchg
es
call
insb
ja
icebp
mov
xchg
or
cmpsb
sarb
aam
mov
es
mov
lds
cmp
mov
rcl
mov
mov
sub
pop
pop
scas
sub
jne
jae
loope
dec
jge
pop
divb
leave
mov
jae
xorl
std
test
xchg
xor
push
rorb
lret
adc
mov
test
gs
leave
int
jo
jnp
or
cld
dec
sub
loopne
pop
sbb
sub
test
mov
mov
pushf
sbb
fisubrl
lods
addr16
cmp
mov
mov
ds
mov
movsb
cmp
pop
mov
mov
dec
inc
loopne
shl
lret
sbb
call
sub
fcomps
or
int
sub
mov
shlb
aaa
adc
pop
scas
xchg
jge
fistpll
xor
loope
cmp
fcmovnbe
push
in
jns
cli
lock
push
mov
out
cmp
mov
shll
call
jae
sub
lahf
lods
or
sahf
xor
jb
into
mov
pop
lds
add
fsts
push
loopne
mov
dec
mov
pusha
in
push
dec
int
mov
or
inc
movsb
pop
fwait
sub
int3
xchg
clc
mov
cmp
push
cmp
mov
adc
mov
cmp
xchg
add
lcall
push
movb
push
jmp
or
loope
enter
icebp
inc
push
cmpb
arpl
pop
fmuls
pop
clc
add
repz
push
push
mov
jnp
jmp
jg
shlb
cmp
cmp
add
adc
inc
jle
clc
pop
iret
arpl
stos
jmp
jbe
testb
ret
call
xchg
sti
inc
fistl
lret
mov
out
mov
dec
mov
mov
mov
inc
xchg
wrmsr
push
xchg
int3
add
sub
sbb
out
ret
movsl
or
sbb
pusha
xor
bound
aam
push
std
addb
pusha
xchg
push
add
hlt
cmp
imul
xlat
jg
or
cs
xor
adc
dec
xor
mov
xchg
jmp
out
cmpsb
jg
ja
sub
cltd
mov
mov
or
sar
jbe
int3
sbb
lds
daa
push
sub
addr16
pop
repnz
mov
addl
iret
mov
jp
pop
push
xchg
or
jae
stc
loope
ret
xor
call
inc
out
ljmp
mov
arpl
dec
xor
aaa
cld
ss
adc
push
out
xchg
into
in
in
imul
dec
adc
sbbb
cmp
insb
push
pop
cs
daa
cmp
jb
daa
jne
jnp
xor
or
pop
loopne
push
cmp
dec
or
mov
subb
out
js
dec
insl
dec
decb
inc
inc
mov
enter
push
imul
cs
or
or
jae
in
push
out
cmp
test
out
push
jge
sbb
sbbb
cmp
je
movsl
pop
add
add
adc
inc
insb
mov
fdivr
and
stos
adc
in
push
js
push
mulb
xor
sbb
rorb
sub
pop
dec
loope
loopne
mov
fwait
iret
imul
mov
push
adc
movsb
insb
xor
xor
adc
dec
nopl
in
sbb
ret
push
jp
fsubrp
out
sti
arpl
pushf
mov
enter
sbb
cmc
xor
ljmp
cs
jmp
xchg
stc
jne
out
in
push
sahf
adc
fwait
sti
pop
iret
daa
inc
inc
in
in
cmc
mov
push
xchg
push
mov
dec
jecxz
push
sbb
pop
push
inc
mov
loope
sbb
dec
and
adc
mov
jmp
jecxz
andl
pop
das
xor
fiadds
mov
shll
fsubr
mov
call
or
mov
sbb
add
dec
jnp
cmc
mov
fabs
fistl
xchg
push
push
push
mov
add
inc
mov
lods
mov
daa
icebp
pushl
cwtl
imul
loopne,pt
push
gs
mov
iret
lret
dec
arpl
out
fwait
jno
xor
push
testl
cmp
leave
dec
das
dec
clc
pusha
dec
or
cmp
jno
fcoms
mov
and
movsl
or
outsl
fisubrs
xor
test
test
dec
mov
dec
push
cmc
ret
mov
in
sbb
cmc
int3
movsb
push
rcl
in
dec
or
call
xchg
cmp
or
sub
push
test
aad
dec
fwait
jne
mov
in
xor
inc
cltd
add
nop
push
stc
mov
jle
push
xchg
push
mov
jg
pop
or
xchg
ja
inc
cld
xor
jnp
call
sub
dec
pop
jo
es
rcr
mov
nop
enter
clc
inc
jmp
mov
adc
inc
mov
xchg
push
aaa
mov
xor
pop
sti
ja
mov
or
adc
mov
push
loope
aam
and
adc
jne
inc
or
sub
lret
adc
sbb
adc
mov
sbb
xchg
sbb
mov
popa
out
cltd
inc
call
cld
cmp
cmpsl
sub
pop
fstpt
mov
inc
or
ljmp
ret
test
xor
fmull
js
push
sbb
lret
dec
jno
insb
test
jg
stos
mov
sub
xor
int
push
add
sti
xchg
popf
cwtl
fstpl
loop
cmp
ja
frstor
cld
mov
call
sbbl
adc
push
sti
cmp
pusha
pop
pop
ljmp
push
into
ffreep
repz
mov
jno
pop
call
xchg
mov
in
xor
or
sub
and
mov
icebp
fcoml
adc
rorb
mov
cld
fs
xchg
sub
mov
cmpsl
loop
xchg
shrl
pop
jl
xchg
push
adc
mov
movsb
ret
lods
inc
in
aas
sub
dec
lcall
inc
xchg
mov
push
inc
add
test
mov
sti
xchg
or
xchg
dec
fldl
pop
repz
in
fbld
insb
aam
sub
aaa
imul
les
and
rol
mov
out
push
push
cmp
into
adc
inc
negl
or
or
lea
mov
xor
inc
dec
jle
arpl
sti
add
mov
sbb
mov
sub
testb
mov
dec
fisttps
in
push
lods
push
ret
fcompl
mov
movsb
add
xrelease
push
dec
sub
je
repnz
imul
add
lock
test
leave
jp
pop
jbe
fiadds
mov
repz
rol
and
push
pop
dec
sti
enter
pop
pushf
or
rcrb
lret
add
xchg
loopne
jne
aaa
test
mov
lods
inc
or
ds
xor
test
insb
fldt
rcl
mov
test
pop
out
jb
pop
jge
das
out
ljmp
lahf
hlt
icebp
ss
or
nop
dec
push
cmp
mov
or
stc
movsb
fsts
xchg
icebp
xchg
sub
adc
or
cwtl
fs
dec
mov
cmp
adc
jge
inc
inc
lea
add
stc
je
jns
xchg
cmp
push
push
enter
adc
sti
movsl
add
ja
jl
pop
add
addr16
or
xchg
sbb
sub
ljmp
dec
js
ret
sbb
imul
push
cmpb
call
push
punpckldq
scas
push
cli
fwait
xchg
mov
pop
cmpsb
fdivl
sbb
xchg
xchg
aas
and
mov
pop
sbb
test
sub
lods
adc
ret
mov
shll
mov
push
movsb
and
sub
jg
cld
loop
jg
nop
jge
insb
xlat
inc
or
add
mov
scas
ds
and
stos
xor
dec
popf
mov
aam
sbb
ret
into
dec
dec
aam
adc
jl
scas
ds
fildll
or
leave
movsl
adcl
out
fdivl
cmp
mov
cmp
ds
nop
test
cs
inc
inc
shrd
add
in
cmp
mov
fsubp
or
jle
int
jo
hlt
ljmp
dec
push
sub
mov
push
les
or
rol
sbb
fisubrs
push
int
xor
sub
test
dec
je
jl
dec
ficomps
scas
repnz
leave
xlat
lods
js
pop
sub
mov
outsl
cmpsl
lahf
int3
cmp
stc
in
fwait
stos
or
jl
inc
addl
sub
or
xor
cmc
lods
rolb
jecxz
into
loop
pushf
push
fldt
sbb
dec
cmp
dec
and
jl
xchg
push
jle
inc
std
and
mov
repnz
fldcw
push
out
push
cmp
add
das
xor
adc
mov
dec
push
dec
dec
push
clc
test
gs
jb
pop
insb
movsl
bound
cli
xorl
cmp
adc
mov
mov
push
mov
negl
mov
jmp
add
xor
out
mov
ret
push
mov
jg
inc
outsl
xor
lods
adc
js
popf
gs
inc
gs
push
dec
clc
sbb
scas
push
xor
in
xchg
sub
data16
mov
sbb
ja
push
xchg
mov
pop
xchg
jecxz
push
xlat
and
out
ret
jge
push
dec
int
pop
pop
push
add
out
andb
and
or
sub
or
fldl
notl
addr16
sbb
mov
inc
xor
inc
lret
ficomps
nop
ret
bound
add
aad
mov
pop
push
xchg
xor
out
and
jp
mov
shlb
test
sbb
or
mov
pop
sbb
inc
ljmp
in
xlat
shlb
ds
jnp
dec
orb
dec
outsl
mov
addb
jne
sbbl
lcall
jnp
xlat
xchg
dec
ja
mov
cltd
outsl
lds
loop
push
xchg
sarb
jmp
mov
inc
xchg
popa
es
mov
mov
adc
mov
lret
dec
and
int3
aas
sbb
sub
mov
aaa
inc
mov
add
cmp
inc
roll
ja
sub
jne
imull
xchg
shrl
add
cltd
jecxz
xor
push
cmp
push
ss
dec
lea
sub
test
or
jmp
or
mov
cmp
sub
mov
es
inc
gs
rol
outsl
cmp
mov
push
push
shrb
dec
dec
insl
pop
sub
ljmp
inc
sahf
mov
sbb
jg
leave
out
jno
cmpsb
sbb
imulb
mov
push
pop
cmpsb
push
sbb
mov
fstp
in
notb
call
bound
ds
lods
inc
pop
mov
movsl
cmp
insb
jmp
sub
mov
xchg
cwtl
lds
pop
lds
test
popf
xchg
inc
nop
mov
or
xor
mov
andl
scas
fimuls
fmull
mov
push
add
aam
pop
or
cli
adc
lea
pop
mov
das
cltd
jns
pop
and
mov
arpl
frstpm(287
add
xchg
es
jae
jp
push
shlb
dec
cmp
mov
sti
cmp
ljmp
mov
inc
mov
xor
adc
pop
outsl
mov
imul
xchg
mov
push
mov
in
int3
lahf
or
fidivrs
testb
rcl
je
jns
push
adc
add
xchg
xchg
fwait
mov
push
addl
adc
jp
xor
adc
testb
inc
mov
pop
dec
imul
out
fisubs
cld
and
mov
insb
fidivs
insb
xor
or
cwtl
jnp
or
pop
jl
cmc
orl
adc
dec
pop
outsl
sub
push
cmp
inc
fcmovne
call
cli
cltd
push
mov
dec
sbb
dec
mov
nop
sub
push
mov
fidivl
push
dec
cmpsl
push
push
sbb
xchg
in
sbb
int
add
aam
adc
xor
sbb
mov
ss
and
adc
xlat
cmp
lds
clc
dec
je
push
call
inc
xchg
testb
dec
imul
push
jecxz
mov
inc
or
mov
jno
outsl
into
pop
mov
dec
ljmp
push
fistl
fsubrs
orb
clc
mov
inc
xor
and
sbb
or
cmpb
jg
and
pop
sarb
and
add
enter
andl
fmuls
mov
jo
pop
push
cwtl
adc
icebp
mov
sub
and
sub
cwtl
ret
fildll
mov
dec
mov
dec
test
rol
push
mov
push
out
pushf
and
add
jae
jg
mov
mov
or
fsubrp
sub
test
aas
xor
push
sti
xor
movsl
cwtl
and
and
hlt
xorb
jge
rolb
pop
push
lods
outsb
les
xor
add
and
mov
pop
loope
ljmp
push
push
mov
mov
dec
out
stc
scas
es
cli
pop
or
hlt
js
lds
dec
jne
mov
sub
addl
imul
jle
in
lret
mov
mov
push
insb
inc
pop
pop
scas
rcl
mov
inc
sbb
or
adc
pop
cltd
shll
xchg
pop
mov
dec
dec
icebp
pushf
mov
fistpl
xchg
xor
repz
pop
cld
sbb
dec
dec
lods
adc
push
daa
push
bound
scas
mul
cmc
test
and
loope
mov
inc
rolb
int3
mov
inc
test
add
movsl
sarl
pop
sbb
notb
inc
or
stos
cltd
aas
cld
and
jmp
push
movsb
stc
push
xor
jmp
sub
pop
inc
std
sbb
inc
mov
pop
aaa
xlat
sarb
shr
xlat
hlt
das
push
xchg
xlat
sbb
or
lock
adc
fldt
lcall
pop
sti
xchg
pop
adc
rorb
cmp
jae
xchg
mov
add
mov
or
adc
inc
or
mov
adc
adc
cmp
iret
dec
xor
out
stc
mov
and
stos
pop
fildl
add
xor
icebp
data16
addr16
fimuls
dec
imul
and
push
repnz
push
pop
mov
inc
mov
jmp
movsb
mov
popf
push
or
and
pop
pop
adc
dec
push
mov
add
dec
fabs
pop
jp
in
push
popa
push
int
fbstp
int3
or
aaa
jae
popf
mov
push
sub
push
mov
pop
dec
cmp
cmpsb
inc
sbb
jb
cmp
mov
cmpsb
xchg
addr16
adc
sbb
pop
ds
sub
mov
out
mov
cmp
jbe
push
jl
imul
push
rcll
nop
repnz
aad
int3
fsubrp
mov
mov
es
inc
roll
push
xacquire
jb
bound
aaa
inc
outsb
push
pop
lea
pop
mov
in
sbb
or
or
jb
or
lret
sub
fs
sbb
cld
loope
in
stos
xchg
xchg
fnstsw
lods
cld
inc
mov
jnp
mov
adc
fwait
pop
sub
out
pop
cmpsb
lds
mov
lcall
cmpsl
or
inc
mov
xchg
inc
lahf
mov
jno
mov
adc
add
xchg
pop
xor
inc
fwait
call
xchg
mov
sub
jne
fists
inc
mov
in
mov
mov
sbb
in
adc
xor
mov
mov
jb
icebp
cmpsl
out
xorl
pop
loop
je
push
pop
pop
out
loopne
pop
aas
shrl
dec
mov
inc
mov
lods
push
xchg
mov
pause
cmp
das
lods
xchg
inc
dec
repz
mov
xor
adc
insb
in
or
xchg
adc
rorb
mov
fcmove
fs
pop
sub
jmp
stos
dec
inc
and
ljmp
xchg
or
push
rcrb
std
jecxz
push
jg
push
int
push
imul
dec
pop
xor
xchg
addl
mov
les
cmpsl
sbbl
clc
or
fistps
xor
notl
sti
loope
sub
in
imul
mov
push
movsb
lods
sti
imul
mov
stos
call
loopne
mov
repz
outsb
outsl
fcoms
mov
push
pop
bound
std
cmp
btc
xchg
cmp
aam
fucomp
xchg
mov
adc
in
jb
mov
or
mov
jne
add
sbb
movsb
cmp
pop
lods
mulb
test
xchg
xchg
xor
mov
xchg
ja
out
cmp
inc
inc
mov
push
xchg
dec
outsb
jbe
outsb
lret
rcrb
mov
fcomps
rcl
repz
fmulp
pop
add
roll
stos
hlt
pop
sti
popl
mov
icebp
clc
add
cs
inc
flds
mov
lret
xchg
push
jl
dec
scas
mov
xor
xchg
lock
bt
shr
ret
lcall
test
sbb
movsl
jns
xor
xor
xor
sti
iret
or
mov
das
xor
lret
sbb
fimuls
pop
shr
jae
mov
ja
pop
jne
insb
int
push
cmp
push
imul
icebp
jl
stc
xchg
mov
cmpsb
aad
std
stc
and
in
popf
pop
push
xor
or
sub
stos
jno
add
ja
fsts
sub
hlt
sbb
mov
pop
test
adc
dec
popf
or
xlat
bound
push
and
fcoml
iret
mov
sti
sbb
sub
jne
out
sbb
mov
cmpsb
stos
insl
nop
ret
test
add
aaa
push
ja
mov
and
insl
insl
xor
cmp
ud2
sbb
xor
inc
dec
xor
js
jl,pt
test
adc
movsl
xor
push
mov
adc
mov
dec
sub
test
jl
arpl
out
or
into
jno
das
imul
xchg
lcall
adcl
loope
sbb
and
mov
daa
mov
cmp
pop
movsl
xor
lret
inc
xchg
or
nop
cmpsl
movsl
sarb
or
push
bound
jb
xor
mov
cli
jmp
dec
inc
insl
lahf
jp
sub
test
ss
fsubrl
enter
pop
pop
fisubrs
aam
jae
ja
es
in
lret
incb
inc
popf
jl
pop
neg
xchg
xor
pushf
insl
movsl
fildll
pop
mov
fisttpl
jno
pop
sub
cld
mov
fnstenv
popa
enter
lahf
cmp
mov
sub
ret
or
sti
xor
stc
inc
mov
cmpsb
aas
cmp
mov
shll
push
push
xor
jmp
add
xchg
adc
lret
in
add
mov
das
in
fistpll
dec
pushf
cmc
pop
push
mov
push
in
xor
out
mov
js
cmpl
clc
and
add
cmc
popf
jno
cmp
js
push
or
mov
adc
ljmp
sub
jg
cmp
cmp
insl
jns
addl
sbb
adc
jp
cmp
aas
dec
adc
enter
rorb
fistl
jae
movsl
fists
mov
movsb
arpl
cmp
jl
xor
xchg
jecxz
insb
ss
into
sub
cmc
pop
dec
shll
outsb
pop
pop
inc
js
xchg
adc
stos
lret
mov
scas
je
mov
lahf
and
pop
mov
rorl
mov
inc
sub
repnz
in
mov
mov
mov
mov
add
jecxz
mov
sahf
sbb
xor
add
shll
cmp
mov
xchg
jl
mov
insl
out
ljmp
iret
and
add
cmpb
pop
cld
in
mov
testl
pop
mov
pop
jno
adc
fists
in
sub
sti
inc
mov
sbb
xchg
dec
mov
xor
ud1
ljmp
mov
daa
xchg
mov
push
sub
lea
xor
sub
dec
inc
cmp
test
in
faddp
or
fwait
mov
pushf
adc
outsl
pop
mov
ss
mov
pop
push
fidivs
stos
cmc
sarb
push
cs
rcll
xor
es
int
dec
adc
mov
repnz
mov
stos
xchg
je
test
adc
sbb
xchg
inc
add
fidivs
push
sysenter
fstl
jae
icebp
fisubl
adcl
xchg
daa
pop
or
push
rol
xchg
sbb
inc
addr16
mov
and
rol
fstl
in
adc
movsl
mov
int
pop
popa
orl
mov
lret
shlb
insl
pop
dec
pause
xor
jle
adc
rclb
or
mov
repz
pop
lss
xlat
or
pusha
pop
jp
adc
cmpsl
cmpsb
jae
and
jecxz
lcall
fisttpl
sub
sarb
mov
push
daa
loop
outsl
ljmp
push
adc
xor
test
jmp
adc
mov
fildll
out
jno
sub
scas
jns
pop
rcrb
mov
insb
mov
cli
mov
mov
out
and
nop
ja
cmpsl
lcall
or
xchg
lcall
sbb
rorl
test
insb
mov
sub
jl
cmpsl
mov
out
fcomip
fsubs
test
add
rcll
mov
pop
push
aam
mov
xchg
mov
and
push
xchg
sub
mov
fistpll
imul
lahf
fwait
test
dec
inc
out
dec
xchg
fbstp
cmp
jmp
cltd
out
mov
cmp
sub
add
imul
pop
jecxz
mov
aad
cmp
lods
es
aad
repnz
adc
inc
mov
insl
push
data16
ret
add
push
jns
negb
sbb
out
mov
clc
rcll
repz
sbb
sub
pushf
cld
hlt
stc
xor
adc
cmp
cmpsl
push
lret
add
push
mov
imul
push
std
cltd
push
xor
push
faddp
dec
adc
mov
filds
jle
jmp
mov
into
jnp
mov
xchg
scas
shll
jp
test
gs
and
aas
aas
xor
adcl
add
das
or
dec
jmp
movaps
mov
iret
sbb
hlt
insl
stc
test
mov
rorb
test
pop
mov
loopne
adc
add
loopne
shll
es
enter
into
shll
scas
adc
xchg
push
cmp
lods
adc
jp
clc
mov
adcb
jp
xchg
mov
push
pop
xchg
mov
out
imul
adc
push
pop
jb
dec
cltd
cld
loopne
adc
mov
pop
adcl
jnp
iret
inc
sub
das
push
jle
push
mov
push
and
inc
and
jle,pn
xchg
fmuls
repnz
mov
bound
fcmovnb
repnz
rclb
mov
in
sbb
call
mov
loopne
push
add
sbb
add
leave
cmpsb
sub
push
les
rcll
or
shlb
cmp
add
imull
xchg
dec
pop
inc
mov
jne
test
mov
sub
xor
mov
jns
in
add
dec
fistpll
shrl
lahf
inc
inc
lret
testb
mov
int3
add
and
aam
insl
xchg
div
in
push
ret
mov
sub
lods
jne
sbb
jo,pn
repz
lahf
xchg
jmp
stc
cmp
sbb
sub
push
aam
inc
or
dec
mov
repz
mov
mov
sub
xor
ds
test
std
cmp
bound
loopne
mov
cli
cmp
loop
repnz
pop
insb
dec
add
adc
lock
fstl
mov
push
sbb
jo
push
or
add
mov
xor
sub
mov
pop
dec
ret
push
fiadds
mov
fisubl
jae
imul
repnz
out
dec
sarl
add
push
sbb
pop
jp
and
in
mov
std
gs
xor
sbb
pop
pop
xor
sahf
add
scas
repz
insb
test
rcrb
or
push
and
or
mov
push
xor
repz
and
nop
mov
rolb
push
mov
xlat
mov
rolb
in
das
in
dec
add
lods
mov
and
mov
mov
fisubs
test
xchg
test
add
scas
and
sbb
push
aas
cmp
fmull
sbb
jg
fldcw
and
jbe
pop
sub
mov
pop
lods
lea
js
lret
lods
arpl
out
negl
scas
mov
lods
in
fucomp
cmovae
lahf
int3
jne
roll
aad
fs
cmp
xchg
xor
jb
fstpt
stos
hlt
scas
jbe
lock
in
lahf
out
jbe
inc
push
int3
add
lahf
ljmp
sbbl
push
fimuls
nop
shll
je
test
jne
sub
into
incl
adc
sbb
jb
dec
jb
mov
cmp
adc
inc
or
add
clc
popa
jne
andb
and
cld
frstor
test
dec
leave
pop
mov
pop
cli
int3
pusha
push
pusha
xchg
out
andb
js
stos
cli
cmp
cmp
or
add
add
push
aaa
mov
je
mov
inc
and
ds
outsl
in
pop
dec
sub
imul
or
movsb
pop
xchg
fnsave
popf
icebp
fsub
mov
imul
lds
xchg
adc
xchg
fwait
cmp
sbb
imul
mov
movsb
xchg
inc
movsb
add
mov
mov
insl
jns
mov
push
jmp
xor
pop
jno
mov
or
push
mov
out
call
arpl
push
push
dec
mov
fsubrl
dec
movsb
push
filds
jle
jle
lcall
out
popa
mov
jmp
mov
push
dec
mov
pusha
pushf
in
xlat
xorb
ss
jecxz
xor
imul
sub
pop
sar
push
jmp
bnd
lret
in
cs
mov
sub
rcrl
add
and
sbb
inc
xor
not
ficomps
lahf
sub
insb
daa
cmp
push
dec
clc
add
mov
js
aam
divl
pusha
stos
pop
fiadds
fsubrs
sahf
js
pusha
push
mov
sbb
rolb
push
jecxz
xlat
in
pop
das
inc
jl
dec
dec
pusha
fdivrp
lods
out
or
into
or
aam
or
xor
cmp
push
dec
stc
test
lret
mov
and
inc
pushf
pop
or
jg
dec
and
pusha
nop
push
xchg
loope
in
out
xchg
lock
rcrb
jmp
imul
jne
mov
sbb
sub
scas
enter
lret
vpmadcsswd
ror
repnz
inc
pop
mov
popa
adc
adc
lea
sub
mov
lahf
cmp
xlat
xor
sti
xchg
jno
inc
add
imul
inc
cmpsl
cmp
mov
lods
dec
mov
ja
in
outsl
xor
fidivrl
mov
add
or
push
sub
xor
orb
hlt
dec
js
inc
lock
rol
mov
jle
add
and
mov
mov
mov
xchg
fnstsw
xchg
testl
and
push
out
sub
mov
shrb
jle
adc
ss
xchg
mov
js
stos
lods
jae
adc
maskmovq
mull
fsubs
cmc
sbb
or
lss
imul
jno
add
pop
cltd
fcoml
jmp
or
loop
mov
bnd
jmp
push
fcmovne
hlt
jg
inc
int3
nop
fscale
or
sbb
sub
add
push
adc
jmp
dec
in
loop
aam
pop
push
dec
cmp
lcall
jg
xchg
pop
mov
jecxz
mov
daa
aad
sbb
xor
jno
and
cltd
addr16
mov
fstpt
mov
jbe
sahf
mov
jae
xchg
in
and
push
mov
sub
lret
cmpsb
repz
iret
inc
je
sub
cwtl
xor
dec
or
lds
ret
jb
fcompl
aaa
std
lahf
outsb
sub
pop
outsb
add
in
ja
adc
in
addb
out
popa
push
lret
and
mov
ja
mov
cmpsl
add
imul
fnstsw
add
inc
cld
hlt
rcl
andl
hlt
nop
pop
popf
xor
sar
or
fsubrl
push
js
ret
out
mov
add
dec
inc
jmp
jl
das
sub
push
pushf
iret
xor
in
jne
shrb
pop
rep
lock
mov
sub
sbb
cltd
xor
dec
push
push
jb
xlat
fwait
lret
xor
push
xor
aad
loope
xor
repnz
dec
or
out
push
out
adc
fdivrs
xchg
pushf
cmc
mov
jmp
mov
ds
fsubrl
mov
cs
lahf
jnp
repz
or
cmpsl
rcrb
jp
inc
xor
push
and
outsb
sar
xlat
aaa
xor
jb
jg
dec
xor
xchg
dec
fs
sub
sub
mov
fnsave
xchg
or
mov
mov
mov
imul
push
lds
mov
inc
inc
adc
dec
sub
adc
fs
xchg
decl
shlb
jmp
xchg
popa
daa
jmp
loopne
add
mov
lret
pop
xchg
push
cmpsl
hlt
lcall
aas
mov
adc
and
sbb
cmovge
mov
jmp
mov
jle
jnp,pn
mov
pop
mov
jg
je
mov
mov
insl
ss
div
mov
adc
movsb
inc
leave
inc
adc
les
test
cmp
out
mov
fldt
in
xchg
insl
push
cmp
or
jge
sub
push
xchg
fnstsw
mov
fcoms
lods
and
mov
and
add
add
add
stc
repz
dec
mov
lret
sub
in
sbb
dec
js
aam
jle
in
jno
jg
in
add
sub
aad
ss
mov
xchg
mov
pop
xor
gs
popa
test
neg
cs
sub
mov
enter
jne
sti
fistpll
bound
add
jb
xchg
aaa
and
sbb
or
test
or
lcall
push
cmp
imul
leave
ss
inc
ss
xor
popa
mov
test
out
and
lds
outsl
fucomip
cmpl
xor
push
xchg
popf
mov
pop
pop
xchg
cmp
inc
sti
adc
pop
and
and
inc
clc
sahf
movsl
ds
sub
stos
stos
push
movl
cmp
xlat
cmpsb
adc
jb
pop
mov
mov
cmp
dec
push
loopne
and
je
cmp
add
nop
and
dec
mov
pusha
dec
adc
stos
lea
ds
into
mov
xor
testb
mov
int3
push
mov
adc
ljmp
and
cs
daa
mov
es
jmp
call
cmc
leave
and
jns
cmp
push
sahf
shll
out
dec
fmull
or
sbb
jge
push
leave
jno
jg
fsubrs
loope
imul
std
xor
push
ror
cmp
mov
ret
mov
pop
add
push
rcrb
push
mov
add
or
mov
rclb
sarb
xor
dec
cmp
outsb
lahf
cmpsb
push
and
test
lock
or
jle
mov
stc
push
and
jl
dec
aam
jbe
jbe
xchg
in
ret
mov
hlt
sbb
mov
xlat
pop
daa
jmp
sarb
mov
mov
lods
iret
xchg
jle
cmp
sub
ret
in
mov
je
add
movsl
pop
stos
pushf
loope
inc
lds
mov
mov
mov
jle
jl
pop
sub
sbb
xor
repnz
gs
dec
out
jp
cltd
cmc
ljmp
add
pop
pop
cmp
std
popa
std
jmp
jle
add
mov
or
fimull
xchg
inc
je
adc
mov
xchg
movsl
push
add
aaa
pop
mov
mov
and
push
jbe
shrl
div
dec
gs
call
fcompl
icebp
jo
notl
mov
in
mov
mov
mov
inc
andb
ret
xchg
inc
inc
sbb
xchg
repz
cld
lret
cld
int3
xor
push
test
ret
mov
std
mov
inc
fucomp
or
adc
jns
or
sbb
rcrb
cmp
cmpsl
mov
testb
sub
ret
xchg
ret
sbb
adc
lcall
test
add
cmpl
sbb
iret
scas
inc
inc
int
gs
mov
add
adc
fbstp
xchg
mov
fstpt
and
lea
movsb
sahf
adcl
mov
push
ja
push
jo
fidivs
or
xchg
cmp
aas
daa
cmp
test
pushf
mov
nop
push
jecxz
loop
push
or
and
es
push
mov
xchg
icebp
cmpsl
sbb
mov
scas
jae
mov
cmp
outsl
ret
mov
loop
mov
mov
call
mov
mov
or
xchg
cmp
data16
pop
mov
rorl
in
inc
dec
mov
and
idivb
lcall
divb
data16
cld
sti
mov
in
adcl
mov
outsb
add
add
pop
fdivl
jne
jbe
loop
xchg
enter
sbb
xchg
into
mov
nop
pop
cmp
icebp
aas
aad
and
fwait
xchg
mov
adc
je
sbb
call
cmpsl
or
aaa
inc
mov
movsl
mov
repnz
faddl
loop
les
cmp
xor
sbb
rorl
in
mov
popa
sbb
add
add
mov
imul
mov
dec
pop
mov
cwtl
jecxz
xorl
fcmove
push
mov
xchg
xchg
mov
das
les
lock
jb
loope
and
repnz
xor
add
lahf
cli
ret
jp
cmp
in
and
pmaxsw
mov
repnz
pusha
add
lahf
add
xchg
cmp
lds
test
mov
sub
or
push
jo
push
xchg
sti
jns
mov
call
or
adc
and
and
cmp
or
aam
or
nop
sub
and
xchg
and
or
xchg
stc
push
out
gs
dec
aam
add
cmpsb
mov
in
add
push
jo
lret
out
popa
fildl
iret
inc
lcall
push
jb
sub
dec
xor
jmp
wrmsr
sbb
add
lods
mov
iret
repnz
sarb
adc
cmp
xchg
xchg
or
daa
pop
sbb
fcoms
mov
mov
not
and
cmp
in
cltd
sub
into
in
and
mov
dec
rclb
dec
out
insb
insb
dec
inc
adc
insb
mov
data16
lcall
xchg
repz
jmp
fdivp
push
push
pop
fmul
pop
jmp
mov
cwtl
sub
lret
adc
mov
incl
xor
in
cmp
cmc
mov
xor
jb
in
mov
push
pushf
les
fiaddl
popf
pop
xchg
push
cmp
adc
and
call
jae
loop
rol
mov
sbb
fcomps
neg
xor
gs
jo
dec
pop
daa
aaa
pop
jl
js
mov
iret
jns
or
andb
in
out
inc
mov
pop
dec
inc
out
push
fstpl
inc
add
sbb
leave
jns
loopne
dec
mov
adc
in
jecxz
push
pop
push
imul
ja
jp
and
ljmp
xchg
fldl2t
mov
xchg
clc
out
cwtl
push
adc
sahf
push
pop
lcall
es
jb
lods
xchg
add
popa
fisttpll
cmp
jmp
roll
fsubl
pop
gs
fwait
popf
pop
xor
neg
xchg
hlt
loopne
imul
cmp
sbb
cmc
imul
call
adc
sbb
lret
push
mov
push
adc
and
dec
fwait
cmpsl
popf
push
fwait
movsl
cwtl
data16
cmc
int3
cmp
ret
lock
pop
mov
pop
int
int
int
jne
fisttps
mov
out
fldl
mov
je
and
push
sahf
lock
loope
sbb
repnz
fcmovne
or
clc
aas
pop
and
pop
jne
pop
inc
std
mov
addr16
aad
mov
lods
dec
mov
dec
lahf
cld
loopne
ja
das
mov
xor
dec
xlat
popa
repz
cmp
and
push
mov
pop
and
lcall
push
pop
hlt
mov
shrl
mov
lret
mov
jge
jl
ja
jl
insb
outsl
sub
jmp
repz
rcrl
scas
psrlq
fs
mov
lods
pop
adc
cmpsl
mov
ret
lret
mov
pop
mov
jg
aas
gs
rclb
popf
mov
sub
dec
jns
push
dec
fwait
enter
cmp
mov
hlt
aas
hlt
mov
aas
mov
outsb
push
addr16
stos
ljmp
mov
dec
lock
rclb
mov
dec
inc
sbb
repnz
mov
cmp
jecxz
fistpl
test
sub
cli
sbb
int3
std
shll
cmp
cmpsb
sbb
stos
inc
leave
fsub
out
daa
in
add
movsl
cli
jge
cmp
das
fcoms
jmp
imul
jmp
and
imul
sbb
outsl
xchg
mov
push
out
jo
jg
in
movsb
sahf
inc
jmp
mov
push
pop
dec
mov
jle
xchg
loope
push
mov
test
cli
mov
jno
xchg
aaa
dec
pop
cmc
dec
bound
incl
xchg
pop
jbe
in
out
dec
mov
or
insb
cmp
and
xchg
mov
cmp
jle
push
xor
push
push
mov
push
cmp
pop
pushl
movsl
pop
mov
je
testb
dec
and
push
stos
or
test
rolb
jbe
add
dec
jne
adc
inc
fisttps
addl
addr16
lods
daa
pusha
inc
lds
inc
test
cltd
icebp
outsl
or
arpl
mov
push
sub
mov
cwtl
jg
jo
xor
and
shrl
push
out
in
xchg
in
mov
pop
push
mov
dec
add
or
bound
inc
xchg
fldt
adc
push
pop
sub
lcall
pop
inc
ja
sti
xor
fiaddl
dec
xchg
pop
inc
ffree
mov
cltd
mov
popf
jns
pop
mov
movsb
bsf
imul
mov
cmp
ja
mov
icebp
jo
or
and
inc
ret
xchg
dec
in
incb
iret
pop
test
push
daa
sti
shrl
arpl
xchg
testb
mov
mov
mov
cltd
and
cmpsb
movl
std
fsubrs
adc
js
cmpsl
sbbl
cltd
mov
subb
push
stos
inc
pushf
movsl
xchg
xchg
ds
sub
dec
int
movsb
js
shll
jns
insl
ds
mov
mov
cmp
mov
out
dec
lods
sub
ret
cltd
out
xor
and
fsubs
jg
add
cmp
mov
jb
adc
inc
add
xor
mov
mov
dec
ss
mov
in
rolb
mov
in
lds
test
cmpsb
cs
inc
sbb
sbb
enter
idivl
or
cmp
push
pop
dec
stos
adc
movl
xchg
xlat
lahf
stc
or
lods
jl
and
xor
gs
or
aam
int
mov
sbb
cmp
jbe
flds
rcll
sbb
adc
push
scas
clc
stos
jb
daa
sub
imul
xor
pop
cmpl
mov
dec
add
shrb
into
call
mov
mov
mov
xchg
lcall
cmp
imul
sbb
test
subl
cli
cwtl
mov
inc
mov
lahf
je
adc
fsubr
test
shrb
movsb
xchg
pop
clc
pop
jnp
mov
or
data16
mov
xor
xchg
sbb
lods
add
adc
xchg
dec
or
aas
aam
shrl
xor
rorl
orl
mov
xor
fnstenv
movsl
jb
dec
sbb
insb
mov
arpl
and
ljmp
and
sahf
insl
test
and
aaa
fdivrl
pop
je
mov
push
movsb
popf
xlat
lahf
in
mov
in
and
xchg
xchg
sub
dec
icebp
mov
mov
or
add
sbb
cwtl
fwait
leave
cmp
xchg
xchg
cmp
cmp
add
int
jo
movsl
inc
cli
jb
stc
andl
jae
popa
pop
push
mov
loope
xchg
cmp
test
sbb
cwtl
and
or
jg
setle
mov
xchg
mov
cmp
hlt
xlat
movsl
popa
fadds
mov
push
inc
dec
or
subl
inc
mov
or
jp
lods
test
dec
arpl
lods
pop
mov
and
inc
jl
inc
xchg
arpl
sub
js
xor
push
cmp
fdivr
and
cmp
andl
arpl
loopne
hlt
in
in
sbb
jecxz
jl
mov
dec
leave
jbe
out
jg
push
nop
mov
add
movsl
mov
xchg
push
leave
dec
push
imul
sbb
ficoml
mov
mov
push
nop
push
dec
mov
xor
xor
cmp
mov
xlat
sub
rcrl
ljmp
cmp
in
mov
les
push
lcall
xchg
mov
insb
mov
daa
cmp
das
xlat
mov
inc
loop
mull
or
push
cmp
scas
fstl
jnp
sti
cmp
jne
pushf
hlt
adc
and
inc
sti
cmp
sbb
dec
movsb
inc
mov
mov
push
mov
jns
xchg
into
sub
sub
mov
je
nop
sub
cmc
cmpsb
add
out
jmp
das
inc
cltd
cmpsl
test
and
aas
push
and
mov
les
shrl
add
jno
sub
sbb
mov
sub
int
jl
es
cmc
or
notb
clc
cs
test
cmpsb
call
push
stos
inc
jae
push
sbbb
and
fsubs
lods
cmp
outsb
and
jae
test
scas
mov
jl
mov
push
mov
out
pop
js
cmpl
fiadds
aad
insl
inc
push
jae
sbb
lret
pop
xchg
push
icebp
pushf
mov
mov
pop
sbb
fisubs
test
cmpsl
insl
sbb
xchg
mov
xlat
jno
cmp
mov
rcrl
sub
pop
cli
mov
daa
mov
mulb
and
loopne
inc
fsubl
mov
mov
xchg
lods
loope
bound
xor
push
lods
inc
insl
adc
dec
inc
mov
cld
cli
dec
push
stos
xor
cmpsl
and
mov
int
and
testb
es
sahf
dec
mov
mov
adc
sbb
mov
lcall
mov
jnp
xlat
ret
movsb
lods
inc
mov
push
scas
push
adc
pop
or
dec
stc
dec
cmp
es
lods
jge
xlat
mov
dec
dec
xor
sub
and
xlat
dec
add
das
push
movsl
add
punpcklbw
mov
int
sub
jl
mov
xchg
mov
rcll
adc
fcmovnb
out
cmpsb
in
xor
and
sahf
out
je
xlat
xor
iret
push
leave
push
xor
jbe
xor
ja
add
cs
fwait
fs
push
inc
lea
sbb
and
outsl
or
imul
fistl
and
xchg
adc
cmc
xchg
inc
mov
popf
or
jl
adc
aas
or
fistpll
loope
bound
jmp
jl
cmpsb
data16
in
dec
mov
mov
sbb
sub
cwtl
loopne
stos
movsl
push
imul
push
cmp
sbb
cmpsl
dec
add
jp
push
push
pushf
cld
in
dec
adcb
incl
xor
cmc
or
in
and
inc
enter
int3
scas
jne
nop
rcll
faddl
movsl
aas
lea
xor
fisubs
or
ss
sbb
jmp
dec
dec
je
insb
adc
or
into
add
xchg
xor
sub
pop
sbb
loop
sahf
mov
iret
ljmp
pop
pop
or
cld
xchg
fxch
xchg
add
cmpsl
out
in
dec
sbb
dec
out
xchg
mov
aas
rcrl
xchg
mov
jno
add
dec
add
xchg
leave
xchg
shrb
cwtl
inc
call
shll
adc
adc
sub
add
roll
sub
lahf
aad
push
sub
push
out
ficoms
xchg
movsb
xchg
push
push
dec
mov
je
jle
notb
out
xchg
dec
cmp
inc
push
mov
xor
cmp
fimuls
out
jecxz
jmp
adc
xor
mov
mov
cwtl
sub
imull
mov
lret
outsb
scas
call
xchg
and
in
xchg
cld
cwtl
nop
ds
in
cmp
jo
xor
out
into
hlt
jns
cltd
dec
shufps
cmp
popa
mov
mov
xor
and
sub
push
sub
inc
inc
or
pop
mov
and
aad
pusha
pushf
add
rclb
pushf
fstl
orb
push
ja
xchg
clc
loopne
inc
adc
pop
dec
mov
cmp
sahf
and
dec
pop
and
subb
or
pop
mov
or
and
fs
idivl
pop
repz
inc
push
jns
mov
int
sub
std
sub
and
push
bound
and
cltd
sub
in
hlt
in
jmp
decb
add
les
clc
lcall
out
cmp
dec
ss
jo
cld
enter
in
repz
aad
lods
jmp
ret
popa
jge
xor
mov
mov
ficoms
adcl
sub
mov
jno,pt
dec
in
mov
fsubrl
xor
test
mov
mov
scas
sub
push
xor
add
popa
ss
mov
imul
xlat
pop
das
inc
pop
pop
jns
dec
mov
xor
dec
aam
jmp
sbb
xchg
mov
ret
xor
aas
fst
dec
ja
ds
xchg
in
subl
pop
insl
xchg
jmp
lods
test
jb
pop
sub
and
out
dec
nop
push
mov
movsb
aaa
nop
sbb
je
repnz
addr16
mov
adc
mov
xchg
jne
mov
stc
addr16
inc
push
andl
stos
push
dec
addr16
out
pop
push
pop
out
add
nop
jae
cld
cwtl
sbb
add
add
sahf
ja
inc
add
sbb
xor
movsb
ret
addr16
mov
repz
loope
movsb
call
pushf
inc
fisttpll
add
sar
add
pushf
cmp
or
insb
mov
insb
xchg
mov
cmp
cld
push
add
or
and
icebp
adc
sub
iret
scas
mov
push
and
call
and
imul
imul
xor
arpl
cmp
push
push
nop
js
inc
push
andl
mov
xor
outsl
xchg
sbb
pop
movb
mov
test
xlat
mov
repz
mov
mov
adc
cmpsb
jmp
shl
iret
jle
aas
fildll
mov
xchg
stos
sarl
push
pop
xor
jno
sub
ret
fadds
lahf
jnp
loope
rcll
stos
fmul
and
mov
das
lcall
jmp
fcoml
mov
in
cmp
push
popf
ret
cmc
push
inc
xchg
add
out
push
andb
mov
sub
lds
call
add
iret
shlb
loope
pop
mov
cmp
mov
inc
adc
cli
ja
push
inc
sub
test
ret
mov
pop
pop
testb
mov
aad
mov
pop
xchg
lea
lahf
jo
push
ficoms
in
mov
inc
lods
test
mov
lea
fadds
pop
daa
sbb
ret
ret
leave
pop
aad
cwtl
fistps
pushf
lret
icebp
aam
sub
imul
adc
testb
out
mov
sbb
dec
negl
inc
sbb
and
push
xor
insl
mov
int3
out
repnz
cmp
push
inc
inc
mov
testl
data16
xor
test
push
inc
dec
mov
add
fwait
arpl
aad
lcall
pop
pusha
cmp
mov
stos
jne
jmp
xorl
sbb
dec
mov
insb
aaa
dec
mov
jp
push
iret
ficompl
pop
ljmp
sbb
test
jecxz
loop
aas
or
sub
pushf
pop
xorl
cwtl
jo
imul
add
xor
clc
sub
jg
repz
xchg
mov
mov
pop
outsb
insl
shll
aas
mov
mov
inc
or
leave
lahf
push
and
out
xchg
movsbl
cmpsb
xchg
pop
mov
or
xchg
jp
cs
addr16
push
add
repnz
test
scas
xchg
xor
and
or
sbb
ds
lods
push
sbb
push
in
popa
in
dec
cmc
push
jmp
push
inc
ja
nop
sub
aaa
insl
jns
and
and
and
sub
popf
and
out
push
mul
shrl
cld
xchg
inc
das
dec
mov
leave
adc
sbb
hlt
add
sbb
std
fildl
sbb
push
ss
stos
mov
rolb
sub
sub
popl
sti
jge
push
lock
pop
aas
sub
sbb
outsb
adc
add
cmc
lahf
xchg
jge
mov
mov
lret
add
pop
test
xor
sbb
or
or
and
push
cmp
sub
xlat
mov
inc
jo
cmpsl
mov
aas
nop
cwtl
push
push
cmpsl
cmp
in
jg
insl
mov
iret
mov
pop
les
movsl
hlt
int3
sub
bound
dec
dec
xchg
dec
mov
mov
cltd
incb
ljmp
cs
movsb
ss
inc
sbb
fdivp
xor
xchg
movsb
test
inc
adcl
and
mov
xchg
int3
jmp
rorl
inc
jo
enter
aas
int3
and
inc
gs
inc
or
in
push
mov
and
mov
xor
repnz
ss
xchg
out
push
sahf
imul
pop
inc
lcall
movsl
mov
into
movsl
xlat
imul
mov
xchg
xlat
xor
ror
les
lea
cmpsl
xchg
and
nop
fdivrs
into
cs
add
inc
outsb
sub
ficoms
insb
popf
rclb
inc
xor
addl
dec
fucomip
adc
pop
rcl
bound
jp
push
mov
ss
jp
pop
mov
jecxz
into
test
lea
roll
and
in
das
sbb
inc
mov
mov
and
pop
dec
rcrl
pop
out
push
inc
loop
pop
adc
add
out
aaa
pop
mov
pushf
sbb
aad
jecxz
lea
pop
out
mov
les
fdivs
movsl
popf
sbb
cmp
push
sub
inc
dec
jne
dec
movsb
cltd
pop
pop
xor
lcall
out
sbb
fs
sub
int3
test
ljmp
jns
xchg
sub
lods
lcall
stos
inc
pop
add
fmull
fsubl
aad
inc
mov
xchg
outsl
movsl
push
jbe
das
pop
xchg
addr16
lea
nop
cmc
cmp
sub
pushf
or
pop
pop
arpl
test
or
shr
mov
add
scas
mov
cmpsl
fsts
and
lret
in
sub
in
setl
xchg
cmp
int3
cmp
call
adc
cltd
jg
imul
es
stos
mov
dec
sub
fs
fildll
fwait
testl
popa
scas
dec
test
fstl
enter
push
jbe
cmpsl
sbb
pushf
mull
jne
and
cli
mov
adc
sarl
mov
mov
aaa
add
adc
cld
pop
ficoml
ds
mov
push
or
aad
fucomip
clc
pop
ret
fldt
push
sarb
sahf
arpl
push
mov
dec
push
jno
filds
call
inc
jle
pop
repnz
push
jbe
dec
cmp
sub
stos
js
hlt
or
sbb
or
and
mov
pop
xlat
adc
or
gs
xchg
or
inc
mov
jle
pop
int3
xchg
vpaddusw
dec
pusha
inc
add
rclb
out
xchg
add
adc
iret
dec
test
jmp
mov
out
jmp
and
cmc
aad
cmp
std
xor
ret
inc
push
testl
out
sub
push
stc
xchg
pop
mov
mov
mov
sub
xor
ja
lods
cmpsl
sbb
fwait
and
ss
or
cs
inc
pop
mov
ljmp
push
sahf
sbb
push
lea
inc
and
add
mov
mov
inc
fiaddl
shll
cmpsb
push
adc
and
aad
imul
push
jne
mov
cmp
fistpll
xchg
stos
lds
adc
dec
loope
pop
jg
in
or
or
cmp
add
ja
push
inc
rcll
data16
iret
sub
sub
mov
iret
shrb
cwtl
shrb
jmp
pop
data16
daa
in
in
filds
outsb
subb
enter
and
aam
stos
or
push
cmp
jmp
add
cli
rol
outsl
dec
sub
insl
dec
cmc
or
pop
je
fucomi
sbb
adc
pop
mov
or
mov
lcall
jns
or
fidivrs
cltd
in
adc
xchg
nop
xchg
or
aas
lret
mov
push
push
icebp
sar
call
sub
and
lods
push
scas
test
adcb
test
mov
adc
jmp
in
xor
je
lahf
cmpb
xchg
push
popf
pop
dec
jmp
xchg
fdivr
xchg
pop
outsb
pop
call
repz
mov
mov
fstl
pop
pop
les
and
xchg
jne
mov
jno
adc
mov
cmc
xor
dec
aad
incb
dec
push
dec
int
in
int3
fwait
jp
adc
fmull
push
test
jne
sti
in
pop
aaa
fwait
pop
fwait
jo
decl
lcall
gs
stos
mov
jne
mov
data16
dec
jecxz
lahf
sbb
dec
repnz
arpl
in
pop
mov
or
repnz
int3
push
push
testb
cmc
adc
dec
insb
data16
or
mov
mov
aas
das
outsl
ds
fcmovnb
stos
lret
mov
stos
xchg
sub
insb
jns
inc
add
faddp
push
cmp
mov
rcrl
pop
jge
fimull
xor
les
cwtl
arpl
aaa
es
push
insl
cmpsb
push
pushf
push
dec
add
ds
push
sarb
jns
mov
xchg
pop
mov
inc
fcomip
out
mov
push
xor
mov
inc
std
nop
add
imul
jbe
adc
mov
lods
leave
and
pop
add
enter
mov
sub
xor
push
jnp
fildll
jge
leave
pushf
sbb
jmp
imul
rcll
adc
idiv
in
in
add
push
aad
add
pop
or
inc
cmp
xor
xor
mov
enter
dec
orl
je
dec
sbb
mov
and
xor
or
mov
imul
mov
insb
mov
shll
dec
xchg
mov
jmp
pop
ss
or
pop
cmp
mov
jb
mov
out
mov
bound
mov
rcrl
add
repz
repz
lea
daa
iret
jmp
inc
aaa
mov
into
call
adc
popa
sub
lcall
dec
nop
in
push
scas
inc
add
adc
test
imul
mov
dec
sub
mov
cmp
pushf
or
cmp
xor
bound
ret
and
loope
jae
sbb
jns,pn
lcall
mov
adc
fwait
negl
iret
adc
sbb
loopew
shll
mov
aaa
and
adc
sti
ret
jl
xchg
mov
adc
test
pop
aam
sub
mov
mov
xchg
jo
and
les
push
jp
sub
mov
ljmp
mov
stos
pusha
xor
gs
push
addl
push
push
iret
andl
hlt
loop
jmp
es
dec
hlt
push
sub
daa
cwtl
pop
out
mov
xchg
dec
stos
sbb
and
mov
rclb
out
jbe
cmc
push
dec
sbb
jbe
call
and
pushf
rcl
aaa
xchg
mov
clc
test
pop
cmp
push
fs
or
add
movsl
cmpsb
cmp
cmpsl
sahf
push
testl
js
push
insb
fsubrp
outsb
dec
sbb
jae
es
bound
dec
pusha
pop
dec
int3
add
mov
pop
popf
or
in
loope
inc
mov
cmp
cmc
dec
jp
jle
rcrb
imul
or
mov
bound
bound
dec
sub
movsl
out
shrl
fcomi
cmpsl
pop
xchg
push
add
jno
pop
mov
stos
mov
jl
add
dec
or
enter
cld
addr16
aas
xor
outsl
xchg
fimuls
xor
sti
pop
sbb
jl
loop
mov
dec
mov
fcoms
inc
or
repz
jge
jmp
call
jl
push
repnz
data16
sbb
mov
jae
iret
cmpb
adc
jnp
leave
pop
dec
dec
les
repz
push
jmp
popa
xchg
jnp
sbb
inc
pushf
pop
inc
jns
adc
fwait
sub
nop
test
inc
pop
adc
mov
sbb
xchg
loope
cld
inc
imul
push
cmp
cli
push
ret
push
call
add
cwtl
or
lods
mov
fbstp
shlb
iret
shlb
icebp
mov
xchg
fwait
sahf
into
cs
xchg
or
mov
enter
and
pusha
xchg
ficompl
push
mov
in
fcomip
insb
pop
into
and
inc
mov
mov
in
adc
push
sub
outsl
lcall
movsb
jg
daa
xchg
js
sub
jae
push
pop
into
out
rcrb
mov
pop
aam
mov
les
and
inc
push
mov
sarl
arpl
pop
mov
dec
mov
mov
pop
or
mov
ret
push
dec
filds
mov
sbb
jg
push
lods
stos
cmpsl
jns
push
jno
addr16
xor
inc
loop
call
incb
pop
cmp
jno
push
push
xchg
incb
xlat
jle
sub
mov
add
mov
hlt
and
and
divb
inc
loop
imul
insl
hlt
sub
add
inc
shrl
lret
lret
sbb
fs
adc
inc
call
aad
cmpsl
and
mov
repnz
int3
cmp
int3
cs
sbb
fadd
mov
mov
jmp
lods
outsb
add
aaa
fcmovbe
loope
add
lret
decb
or
rclb
aaa
or
sarl
movsb
nop
push
pop
adc
jp
fistl
dec
mov
stc
out
ss
cmp
adc
fsubs
sbb
pop
nop
fdivrl
sub
cld
jp
lahf
mov
lcall
les
fisubs
mov
loop
fwait
jmp
leave
shrb
push
cmp
outsl
orl
push
sbb
xchg
sub
negb
xchg
jb
or
inc
ret
sbb
sbb
pop
inc
xchg
bound
sbb
int3
jb
call
sbb
lods
mov
lods
es
enter
shrb
xor
inc
sbb
mov
xchg
sub
mov
and
mov
mov
or
loop
jno
shlb
mov
sub
adc
dec
iret
jecxz
xor
rcrl
and
and
and
movsl
ljmp
xor
xor
std
adc
dec
pop
popf
out
fdivs
ret
inc
and
push
clc
in
xor
cmp
clc
fistpl
in
fdivrs
mov
push
pop
push
in
popf
push
fisubl
loop
sbb
notl
cmp
mov
cmp
movsl
add
push
repnz
call
add
std
dec
fstpt
mov
gs
loop
ljmp
push
xor
sbb
in
lds
xor
mov
and
pop
jecxz
cmc
jg
push
nop
fld
add
push
outsb
or
mov
and
mov
imul
sub
mov
jno
add
mov
adc
iret
sbb
imul
aas
mov
mov
mov
cmp
sbb
mov
or
dec
fcmovnb
ret
pop
inc
int
cmp
adc
inc
adc
pop
in
push
mov
dec
jno
fnstsw
loop
test
xchg
fs
shl
pop
enter
mov
sbb
out
cwtl
iret
pop
xor
test
ljmp
adc
and
xor
testb
xchg
pop
lock
loope
xchg
dec
push
stos
movsl
sbb
xor
lret
add
mov
loope
shrl
mov
pop
xchg
gs
mov
inc
add
jo
imul
xchg
push
sbb
sbb
js
test
mov
dec
pop
ja
mov
mov
sub
gs
push
jnp
popa
movsl
mov
dec
loopne
fmull
lahf
movsb
jmp
out
jl
pop
scas
mov
sub
ret
cwtl
adc
call
xor
xchg
xor
leave
add
xchg
mov
sub
aaa
sub
ds
movsb
xchg
adc
gs
cwtl
jp
adc
sbb
movsb
push
and
xchg
lcall
sub
ret
loope
pushf
mov
and
in
fs
test
lret
shll
mov
cmpsb
xlat
lea
rcrb
popf
rcll
adc
fbstp
nop
dec
fstpl
xchg
xor
or
push
lods
jae
mov
mov
and
adc
jecxz
lcall
icebp
push
xchg
adc
sub
jo
sahf
dec
shlb
in
fnstsw
xlat
dec
lahf
fisubrl
xor
pusha
sti
push
iret
addl
xor
or
dec
insl
mov
dec
adc
adc
dec
cmp
push
mov
xchg
dec
jne
mov
sti
test
pop
arpl
dec
repz
push
push
adc
test
mov
xchg
mov
imul
mov
test
std
sti
sbb
inc
sub
test
movsb
test
lock
add
pop
test
mov
jp
xchg
sahf
fimuls
jle
pop
je
stc
gs
mov
and
outsb
jnp
in
sub
test
dec
dec
adc
xchg
jle
mov
sbb
inc
dec
rcll
jnp
sbb
ljmp
mov
and
jnp
push
testb
push
pushf
push
negl
test
sub
xor
xchg
inc
popa
or
or
bound
rcll
test
popf
orl
lea
xchg
outsl
mov
mov
pop
jecxz
push
popa
xchg
mov
xchg
loopne
sbb
sub
std
cmovnp
or
sub
or
in
dec
scas
movb
xchg
les
insb
pop
rcll
insl
mov
fildl
ljmp
div
sbb
push
jo
mov
add
addr16
fs
cli
outsl
cmp
pop
out
notb
sahf
push
lahf
push
push
xchg
enter
adc
sub
or
push
jp
outsb
and
aas
in
bnd
in
jb
cmp
sbb
cld
fsubrl
inc
cli
shl
dec
add
cwtl
stos
push
aad
adc
insl
cmc
xchg
xor
sub
jnp
sbb
mov
xchg
dec
dec
shll
xor
push
ret
out
bound
mov
insb
adc
dec
int
ret
dec
sbb
inc
xchg
andb
or
cmp
movsl
push
jae
or
cmp
dec
adc
cltd
xchg
inc
adc
push
frstor
lahf
pop
leave
pop
mov
pop
fsubrp
mov
in
push
fisubrl
pop
mov
setno
shl
push
test
dec
mov
out
and
ss
cmp
jl
jmp
decl
je
dec
or
mov
popfw
lods
mov
loope
inc
dec
leave
cmc
clc
les
subb
in
clc
mov
idivb
cmp
add
in
and
inc
jge
xor
pushf
aad
mov
jmp
ret
test
insb
sub
sbb
gs
bound
lcall
push
pop
jns
scas
out
xchg
sbb
or
in
mov
add
or
jmp
xor
push
cmpsl
sbb
inc
shll
imulb
sub
or
mov
xchg
fstp
std
je
imul
add
inc
push
out
scas
jecxz
xchg
cmp
jbe
imul
cmpsb
pop
push
sbb
je
subb
fsubrp
pop
lea
mov
lret
repnz
jb
inc
sub
loop
lcall
mov
pop
and
adc
dec
dec
push
push
fisttps
pop
int
xor
mov
xor
xchg
pop
dec
cmp
mov
mov
mov
stos
jle
cwtl
jnp
cmp
movsl
pusha
sbb
push
xor
jno
jl
test
xor
mov
dec
jo
pusha
movsb
movl
imul
add
push
inc
in
jbe
add
mov
out
cwtl
xchg
ds
inc
leave
fwait
mov
or
lahf
xlat
and
xchg
xor
inc
test
scas
and
cld
mov
js
adc
cmp
dec
sarb
xchg
lods
xorl
out
inc
jl
loope
pop
push
out
push
int
jl
mov
xchg
add
and
arpl
arpl
rcl
out
pop
fdivr
mov
loope
mov
adc
xor
cwtl
jnp
push
aam
bound
jo
dec
loope
mov
or
pop
push
sahf
push
sbb
cmp
cltd
xchg
dec
inc
cmpsb
arpl
or
push
inc
ja
aaa
pop
pop
jo,pt
repz
test
xchg
loope
dec
out
lret
sub
or
int3
and
pop
fnstenv
sub
pop
mov
mov
xor
mov
rolb
cmpsl
cwtl
je
push
sbb
mov
and
out
add
or
xor
cmp
test
pop
fwait
sub
lfs
dec
fsubrs
test
mov
cld
push
stc
adc
or
enter
push
adc
xchg
outsb
sub
and
call
fdivrs
aad
out
jl
enter
cmp
dec
adc
call
outsb
dec
fstl
pop
popf
imulb
mov
stos
bsf
ds
or
popa
aad
je
push
dec
shlb
or
mov
cmc
ljmp
jp
loop
xchg
add
sub
cmpxchg
fidivl
pusha
mov
rep
into
cwtl
sti
inc
mov
inc
push
jmp
inc
rep
jae
xor
and
adc
jbe
test
add
insl
adc
insl
dec
icebp
lahf
into
and
and
ss
out
pop
push
sarb
orb
or
out
xor
jnp
xchg
sbb
ret
add
adc
in
dec
push
stos
dec
xor
and
divb
in
test
icebp
jmp
fcompp
mov
pop
mov
or
cmp
out
push
stc
gs
xor
call
rcr
jecxz
cmp
cwtl
loope
pop
xchg
mov
into
lods
mov
xchg
out
mov
inc
test
adc
add
mov
les
mov
test
inc
or
call
push
sub
cwtl
xlat
inc
rcrl
nop
pop
cmp
and
pop
rorl
xor
mov
fisubl
push
pop
mov
les
jne
mov
jbe
icebp
sbb
ljmp
movsl
jbe
inc
aaa
jge
and
lds
mov
int
lea
mov
mov
cmp
fimuls
aam
mov
int
jns
mov
dec
add
das
xchg
inc
add
fdivrp
arpl
les
and
inc
hlt
out
add
pushf
popl
mov
inc
aam
add
sbb
imul
and
inc
xor
sub
cltd
icebp
inc
xchg
mov
stc
pop
lock
xor
xchg
sub
cmpsb
iret
int3
sbb
rcll
or
cmp
mov
ja
idiv
or
mov
sahf
cmp
js
add
dec
hlt
xchg
sub
movsl
pop
and
fstps
or
cmpsl
int3
xor
and
xchg
lds
mov
test
sbb
lret
adc
mov
arpl
mov
ret
cld
ja
aam
or
mov
cmpsl
or
stos
mov
push
mov
arpl
inc
or
push
jb
addr16
jae
cmc
insb
push
ret
mov
or
sahf
fdivrp
subb
sub
std
pop
lcall
push
push
shlb
add
icebp
cld
outsb
adc
push
lods
rorb
xchg
icebp
insb
aam
push
dec
ret
lahf
pop
popl
sub
mov
add
push
pop
pop
fidivl
fidivrl
mov
lods
mov
pop
xor
jp
das
pop
pop
inc
or
dec
stc
sub
sti
add
fbstp
ror
testl
add
aas
push
pop
jnp
and
es
inc
sub
sbb
pop
cs
lret
cs
mov
stos
jge
xchg
fwait
sub
scas
cmp
loopne
out
mov
adc
je
mov
clc
je
sub
shlb
repz
aad
jl
data16
aad
cwtl
sub
xchg
outsb
imul
jae
inc
cmpsl
pop
pop
aaa
popa
lock
scas
icebp
sub
or
xchg
jg
lret
loope
js
add
bound
push
dec
mov
pushf
dec
add
dec
cmpsb
and
shll
push
and
cltd
add
push
aas
sbb
lods
mov
jmp
cmp
cs
cwtl
pop
push
xchg
iret
js
outsl
or
sbb
cld
and
jecxz
push
xchg
jns
out
sti
movsb
adc
cmp
stos
pop
adc
int3
loopne
mov
pushf
stos
pop
push
xor
rcr
mov
or
mov
add
cwtl
and
imul
pusha
pop
add
dec
fcompl
dec
iret
mov
std
pop
mov
int3
xchg
xchg
ss
arpl
and
push
jl
shrb
push
mov
or
add
xchg
xchg
or
aaa
es
scas
cmp
cmp
or
ret
cwtl
sbb
mov
icebp
sub
andb
mul
push
mov
dec
pop
jae
xchg
repz
lds
inc
push
xchg
xor
inc
filds
xchg
jp
mov
in
and
pop
push
and
and
mov
adc
mov
test
mov
mov
je
repnz
sbb
fbstp
popf
ret
push
fldl
jle
and
repnz
call
lods
mov
sub
or
mov
hlt
stos
inc
jae
loop
test
aad
call
xor
inc
lea
gs
cs
jmp
out
jmp
mov
loopne
xchg
mov
je
sbb
adc
add
and
push
cld
xor
push
arpl
xor
movsl
test
mov
fld
ret
jns
mov
inc
std
es
daa
shlb
add
xchg
mov
mov
mov
std
jne
dec
imul
in
mov
and
gs
push
mov
loopne
outsb
rcll
ljmp
push
sub
and
fwait
scas
insb
cli
cmpsb
jle
cmpb
int
sbb
dec
jne
dec
arpl
ficompl
int
in
in
aad
scas
lds
lret
lea
inc
test
or
out
lds
and
sti
sbb
pushl
pushf
stos
push
lods
jg
and
mov
ret
jge
inc
insl
mov
dec
sbb
cmpsb
arpl
sbb
loopne
lea
adc
in
dec
aas
mov
iret
adc
inc
stos
out
xchg
fnstsw
cltd
push
inc
push
mov
push
cmp
xchg
inc
mov
jb
test
jne
mov
outsb
dec
inc
xchg
or
movsb
sub
push
movsl
pop
lret
jl
fcoms
sbb
sbb
adc
sahf
out
std
test
movsl
fwait
jnp
xor
out
lea
dec
enter
or
pop
js
mov
xchg
mov
push
mov
xor
jl
inc
adc
push
fistps
pop
pushf
and
or
imul
adc
dec
mov
insl
jo
scas
add
in
mov
adc
loopne
push
loop
or
sarl
cmp
rorb
mov
pushf
inc
cmpsl
lock
jl
push
xchg
sbb
in
sbb
mov
pop
test
inc
addr16
mov
sub
frndint
ss
xchg
into
cmp
nop
lar
lret
sbb
pop
or
rcrl
or
ja
lcall
sub
dec
sbb
dec
das
add
jns
mulb
test
cmp
ljmp
in
into
test
sbb
clc
xchg
mov
dec
adc
jmp
jl
std
jae
sti
push
or
cmp
lret
xor
mov
jne
or
scas
xor
sub
out
xchg
dec
mov
sbb
shr
popa
push
push
stos
mov
fimull
mov
es
sbb
inc
das
cmp
push
inc
jmp
movsl
call
mov
jb
insl
jl
adc
pop
mov
or
add
out
sti
jmp
pop
dec
xchg
jb
in
int
xchg
mov
sbb
dec
adc
arpl
fimull
cmp
cmp
cmp
movsl
mov
aaa
xchg
or
xorl
mov
inc
movsb
scas
fldenv
push
add
fsub
shll
or
idivb
cli
cmp
cltd
mov
mov
sub
sbbl
push
add
or
push
cmp
cmp
insb
xchg
imul
mov
push
push
scas
cmp
in
xor
jp
pop
xchg
ror
aad
lods
mov
and
lret
jnp
loope
ret
mov
inc
ljmp
and
adc
and
mov
add
pushf
out
arpl
or
pop
lret
leave
in
lret
xchg
ret
sbb
dec
add
and
lds
mov
xchg
sub
popf
mov
decb
in
adc
sti
dec
or
fdivl
mov
mov
movsb
mov
dec
mov
scas
mov
dec
dec
lods
xchg
mov
xor
iret
xlat
and
and
xchg
xor
mov
dec
or
rcrl
scas
adc
sahf
or
bt
int
out
and
stos
add
repz
cmp
repnz
add
ret
sub
fldt
fsubrp
jo
sub
sub
cltd
mov
stc
or
pop
inc
clc
add
test
lock
sbb
xor
stos
xlat
fadd
fisubl
or
jp
fsqrt
cwtl
dec
mov
pop
inc
and
mov
pop
push
cmp
gs
movsb
lret
repnz
fidivrs
fmuls
lea
add
xor
repz
loopne
xor
pop
nopl
push
mov
cwtl
sub
mov
inc
sub
mov
adc
xchg
mov
pop
push
iret
inc
sbb
mov
mov
addr16
adc
sub
adc
loopne
shlb
iret
mov
test
or
dec
cmc
pextrw
jo
inc
xor
mov
or
std
repz
js
jmp
xchg
repnz
xor
out
test
and
pusha
jg
lahf
dec
cmpsl
les
jmp
rcrl
clc
into
stos
aam
out
lahf
inc
mov
std
pop
lret
and
rcr
or
dec
popa
mov
push
in
mov
inc
pop
icebp
add
push
mov
jg
lahf
jb
mov
sti
scas
shl
or
jg
fsts
in
cmp
or
xchg
ss
push
enter
inc
cs
lahf
mov
dec
mov
jmp
mov
sbb
aas
ljmp
repnz
add
loope
cmp
jo
lods
pushf
or
xchg
dec
push
iret
mov
mov
inc
cmpb
icebp
insl
mov
jmp
jnp
xor
mov
test
es
xchg
dec
inc
add
inc
mov
pop
xor
data16
popl
pop
sahf
adc
mov
cmpsl
or
mov
aas
mov
jg
imul
scas
or
nop
cmpb
stos
mov
fisubrs
int3
mov
stos
test
add
push
sar
bound
mov
mov
and
cmpsb
inc
gs
sub
push
cmp
lret
fs
lock
pop
jp
dec
push
pop
test
lcall
jmp
jo
jae
xchg
sbbb
std
loopne
or
xchg
outsb
inc
dec
add
mov
imul
mov
clc
jecxz
and
mov
fdiv
stos
cmc
inc
enter
jmp
adc
fstp
add
insb
mov
mov
inc
sbb
lds
and
scas
out
sbb
dec
jge
dec
sub
jp
rcrb
popf
xchg
push
stc
mov
add
jae
and
mov
mov
iret
jnp
imul
cmp
inc
pop
call
push
xchg
addb
mov
sub
fidivrs
cmpl
stos
inc
orl
gs
scas
push
adcb
dec
in
fisubrl
mov
addr16
cmpsl
out
fdivs
cmpl
mov
arpl
sti
js
pop
xlat
in
mov
outsl
inc
jp
idiv
dec
pop
frstor
dec
cmc
fstpt
cld
push
test
cwtl
cbtw
mov
mov
rcrb
jl
mov
cmp
test
sbb
andl
sbb
mov
xor
fldl
mov
lret
jae
cmp
rclb
cld
pop
and
repnz
add
jbe
fdivr
popa
pop
or
push
xchg
inc
pop
cmp
inc
jno
int3
push
jne
pushf
loope
out
mov
mov
xchg
fisttpll
aam
cmp
jg
xchg
fdivrl
shrb
into
pusha
es
push
insb
mov
in
cmp
adc
daa
pop
or
xchg
ret
pop
sbb
push
and
mov
loope
sbb
jns
mov
insl
imul
stc
shll
cmp
xor
pop
clc
icebp
cmp
xlat
fdivrs
mov
mov
xor
pop
lea
popf
pop
mov
sbb
sub
les
or
lea
cmp
mov
repnz
add
push
loope
outsb
in
mov
cmp
stos
jmp
cli
pusha
in
sbb
lea
movsl
jne
cs
jnp
dec
cmp
sub
ss
imul
fsubs
pop
sbb
sub
dec
push
cltd
hlt
cmpsb
lret
cmpsl
pusha
addb
jbe
stc
incb
lea
outsl
clc
fidivrl
xchg
cmp
mov
dec
popf
inc
mov
sbb
flds
or
or
loop
aaa
push
xchg
mov
mov
iret
add
mov
jecxz
test
push
repnz
pop
gs
jmp
clc
bound
push
lret
and
sub
insl
imul
mov
cmp
cwtl
cmc
lahf
cmpsb
xor
jmp
xchg
adc
daa
push
cmpsb
mov
or
lcall
cpuid
mov
sahf
xor
dec
adc
adc
iret
dec
cld
adcb
inc
sarb
fsubrl
ret
and
inc
xchg
and
or
test
call
inc
add
push
popa
loopne
call
sbb
pop
lahf
mov
js
mov
sub
mov
mov
cli
iret
xor
ss
leave
mov
fisubl
flds
and
and
pusha
mov
push
inc
adc
push
aas
inc
mov
out
sub
arpl
inc
int3
inc
inc
jo
mov
mov
sbb
cwtl
push
jne
push
add
cmpsl
nop
outsl
and
data16
jecxz
mov
xor
fnsave
mov
jl
add
sahf
xchg
pop
add
add
loopne
out
xor
ds
inc
cmp
sub
dec
stos
xchg
mov
rolb
and
mov
adc
jnp
cmp
pop
outsb
fs
sub
dec
sub
jmp
and
mov
sbb
mov
push
movsl
fistpl
orb
lods
iret
dec
dec
int3
cld
test
dec
bound
stos
jno
movsb
aas
sub
out
sub
outsb
pop
rol
pop
push
in
sbb
jns
insb
push
test
pop
mov
orl
push
scas
subb
pop
adc
inc
push
cwtl
in
pop
push
out
dec
sbb
fcompl
loop
mov
pop
sbbb
cmpb
push
iret
enter
xlat
rclb
xor
xchg
dec
ret
cmp
cmpsl
in
jne
push
aas
adc
imul
xor
push
or
test
jle
in
pop
sub
inc
hlt
and
or
push
clc
mov
fs
divb
mov
mov
or
mov
mov
mov
rcll
insb
jnp
stos
imul
mov
js
add
out
pushf
scas
jg
outsb
and
xchg
lcall
insl
jp
std
iret
mov
loop
data16
out
sarl
lahf
outsb
xchg
mov
jge
dec
das
lret
or
fdivrs
push
cmp
js
jg
call
fwait
std
fldenv
jg
xor
mov
mov
sarl
pop
cli
mov
das
aam
loop
sub
enter
lea
jbe
pop
arpl
pop
repnz
pop
xor
or
add
gs
jo
xchg
scas
ret
inc
push
cmp
push
mov
push
sarb
mov
aad
repz
mov
push
push
sub
subb
mov
sbb
call
xchg
and
xchg
mov
dec
cmpsb
aas
clc
cmpl
sub
fsubrs
push
test
iret
sbbl
adc
dec
adc
add
sub
js
loop
push
dec
add
or
idivl
cmp
push
pop
mov
push
imul
cmp
aam
or
mov
mov
xor
das
and
ljmp
lock
pusha
lock
inc
pop
addr16
push
aaa
out
shrl
aaa
mov
push
xchg
and
stc
test
jbe
jno
mov
lahf
mov
out
inc
inc
add
dec
cmp
icebp
push
popf
nop
push
repz
pop
mov
xchg
testb
repnz
inc
push
mov
loop
adc
lahf
loop
ss
ret
add
mov
xchg
jp
cwtl
inc
xchg
mov
loope
dec
inc
adc
adc
ret
dec
inc
int3
sbb
adc
lret
sbb
mov
ja
sti
push
lret
xchg
aaa
popf
cmp
push
sbb
add
inc
ds
and
or
pop
mov
iret
cmp
mov
xchg
jp
imul
lret
cmp
xchg
test
and
xchg
popa
call
icebp
mov
sbb
sub
loope
xchg
fstpt
movsl
xchg
out
sbb
cmp
icebp
int3
nop
push
andb
sbb
push
decb
fldenv
sbb
ss
das
jbe
mov
out
in
in
or
movsl
pop
sbb
dec
jno
shrb
js
mov
std
pushf
fs
sbb
movsb
sbb
xchg
ss
mov
mov
mov
insb
fnstenv
add
xchg
add
cmp
inc
out
xchg
pop
cmpl
push
ret
pop
ret
cmp
cld
jp
cmp
adc
wbinvd
sub
add
cmp
push
inc
sub
jnp
push
popf
hlt
mov
loopne
icebp
jl
pop
mov
out
push
jno
sahf
daa
push
jo
mov
sbb
or
fld
mov
movsb
fcomi
stos
test
dec
add
push
inc
cmpsl
push
push
mov
pop
call
js
aaa
sub
pop
add
or
pop
mov
mov
jecxz
and
or
cmp
fadds
inc
ljmp
popf
push
push
loope
dec
rol
sub
les
sub
into
dec
add
mov
pushf
nop
mov
pop
divl
stos
inc
pop
out
mov
pop
dec
xor
iret
jb
push
sbb
inc
pop
ss
ljmp
out
push
lret
sbbl
mov
rorb
push
push
and
dec
in
xchg
pop
jbe
sub
xchg
jae
lds
in
inc
repz
icebp
push
dec
fsubrp
jle
cmpsl
lcall
out
dec
pop
bound
dec
xor
cmp
pop
mov
rorb
pop
or
sti
nop
or
mov
sub
xchg
and
pop
and
xchg
jp
enter
cmc
adc
jle
push
pop
sahf
jno
mov
inc
cltd
or
leave
in
out
cmp
dec
addl
filds
jmp
push
jae
rclb
or
mov
imul
cmp
rorl
xchg
inc
mov
leave
or
sahf
fs
jmp
lock
cmpsl
jmp
data16
push
inc
push
and
ret
popf
ja
mov
jns
jmp
insl
mov
jb
fstpl
imul
cmp
scas
fwait
inc
add
add
xor
dec
je
and
icebp
inc
pop
sub
loop
stos
xchg
mov
in
shl
jbe
dec
push
dec
lcall
fdivrl
adc
xadd
nop
data16
enter
stos
sub
cltd
pop
je
mov
pop
add
cmp
stos
popa
mov
adcl
js
imul
mov
xor
sbb
cmpb
xor
cmp
test
sub
mov
pop
mov
adc
movsb
cmp
and
movsl
adc
ret
or
hlt
add
rorb
mov
out
inc
dec
sbb
inc
outsb
int3
jb
mov
fadds
cwtl
int3
into
aaa
mov
lds
and
xchg
frstor
int
clc
jmp
sbb
add
xorl
xchg
popa
push
sub
adc
xchg
fidivl
loop
xchg
add
adc
inc
dec
sbb
iret
push
add
es
xchg
and
push
fsubrl
dec
mov
aam
jae
dec
mov
adc
outsl
mov
pop
sbb
test
xor
cmp
mov
add
xchg
xchg
mov
sbb
nop
jae
sbb
push
int3
jno
pop
movsb
fwait
movsl
lods
jno
mov
lret
jle
fbld
pop
cmp
mov
cli
mov
leave
add
mov
sub
lods
inc
pop
cmpsb
sbb
loope
movsl
std
and
jo
mov
lock
outsb
or
int
mov
out
lret
mov
xlat
xchg
fdivrl
bound
loope
mov
inc
gs
add
inc
mov
out
xor
scas
aas
out
mov
add
sahf
out
dec
jne
jmp
bound
loop
fisubrl
fwait
jns
push
cld
rol
loop
test
lcall
ss
and
push
jbe
fbld
push
push
jbe
test
dec
dec
js
fisttpl
shlb
dec
xor
sub
xchg
mov
cmpsb
jg
push
loope
sbb
outsb
insl
into
push
shl
inc
xchg
insl
loope
lods
adc
ss
popa
and
cwtl
jb
pop
out
xchg
sbb
jle
xchg
jp
cld
mov
addr16
popf
xchg
ja
jl
jno
mov
test
insl
xchg
pop
jmp
adc
out
sbb
leave
imul
push
mov
mov
fdivs
xchg
mov
nop
and
aaa
sahf
mov
adc
mov
in
ss
fwait
mov
mov
xchg
sub
sub
hlt
pushf
enter
mov
mov
and
inc
ss
loop
ja
mov
xor
lods
sub
addr16
in
inc
or
shll
enter
sub
adc
in
mov
repz
cli
mov
adc
sbb
testb
cmp
xor
xor
sbb
cmc
or
or
loope
sub
je
jg
cltd
adc
jp
int
mov
mov
lods
int3
mov
lods
cmp
add
insl
pusha
clc
popa
add
and
mov
dec
icebp
mov
and
inc
jne
fisubl
mov
test
and
cwtl
loop
fidivrs
cmp
push
loope
imul
inc
int
imul
es
cmp
push
push
jo
xchg
jp
add
dec
lods
xlat
pop
lea
add
ret
mov
add
mov
rorl
add
loopne
mov
es
es
mov
jecxz
add
push
dec
sub
inc
ret
rclb
enter
pop
leave
jo
push
dec
xchg
inc
mov
push
jge
std
cli
fisttps
das
or
outsl
cmpsl
cmp
cmp
pop
jno
es
fwait
in
adc
outsl
pop
in
adc
dec
mov
mov
sub
rorb
push
xor
in
sub
lahf
scas
sbb
roll
inc
mul
fldt
ret
xor
out
mov
cmp
shlb
sub
pop
lods
mov
or
aaa
xor
adc
fidivl
test
sub
mov
or
es
cmp
stos
into
fisubrl
adc
lahf
in
imul
pop
cli
pusha
loopne
cmpsb
insl
icebp
icebp
sti
cmpsl
out
jle
scas
mov
int
and
sub
add
out
push
out
loopne
insl
popa
aaa
loope
push
mov
ss
cmp
cltd
clc
rcrl
mov
cmc
adc
cmp
sbb
ja
jno
lcall
ret
pop
dec
inc
xchg
mov
repnz
leave
inc
adc
mov
sbb
adc
add
sub
pop
push
lods
outsl
insb
mov
inc
push
pop
ret
stos
cwtl
pop
into
jns
adcb
mov
repnz
pushf
pop
shrl
add
mov
jp
test
fsubrs
scas
mov
sbb
mov
cld
add
dec
rorb
fldcw
insl
ror
dec
xor
mov
sbb
mov
or
xchg
test
in
and
cld
inc
mov
fsubs
lods
jb
mov
mov
adc
je
push
mov
pop
mov
sbb
pusha
sub
aaa
and
mov
aas
lds
scas
cli
add
dec
rcrb
andb
jae
fnstenv
or
mov
mov
dec
inc
sti
ret
ljmp
mov
pop
and
bnd
and
bound
xor
gs
push
sub
jbe
das
into
aad
paddsw
inc
es
mov
lods
fldt
fs
sub
cwtl
fisttpll
pop
out
inc
std
orb
cmpsl
ffreep
xor
pop
pop
pop
pop
push
jecxz
xlat
dec
lret
pop
es
fstl
inc
jno
sbb
in
cmp
mov
xchg
mov
nop
cltd
cmpsl
add
fbstp
xor
or
daa
ja
jecxz
outsb
sbb
fdivr
or
jmp
in
call
xchg
jmp
or
mov
xchg
in
out
xchg
xchg
scas
pop
sbb
les
daa
cmp
shrl
push
sbb
iret
cltd
xchg
fstp
sbb
ret
out
push
call
push
fadds
or
in
gs
sbb
lods
loop,pn
loopne
xchg
icebp
dec
mov
xor
inc
scas
xchg
mov
lods
push
outsb
in
lret
lock
push
lret
jne
ret
push
mov
or
jecxz
adc
iret
xchg
jnp
dec
aad
ja
in
mov
mov
xchg
add
mov
mov
adc
mov
jno
cmpsl
shll
jmp
jmp
mov
fcmovbe
daa
mov
add
leave
and
push
dec
aaa
sbbl
mov
add
cmpsl
mov
push
in
clc
sarl
bsf
xor
ljmp
leave
jle
roll
mov
or
push
and
mov
sub
inc
mov
popf
pushf
rcrl
xchg
jle
adc
imul
jmp
or
leave
cmp
imul
mov
pop
data16
mov
test
jnp
orl
dec
dec
jno
sbb
sub
or
fsub
movsl
out
fs
sbbb
mov
mov
adc
sti
mov
test
adc
push
push
mov
test
sti
movd
repz
lret
push
dec
jno
sub
mov
test
mov
fcompl
mov
sub
cld
sbb
je
lods
inc
shl
jnp
adc
outsb
cwtl
mov
repz
add
pop
popf
je
sub
sub
mov
add
fsubr
inc
imul
dec
xchg
out
shrl
cmp
sub
sub
jae
fidivs
jns
add
cmp
das
cmp
cli
jl
dec
or
out
out
fwait
mov
scas
sbb
pop
testl
and
add
or
add
out
aad
lret
popa
stos
push
xorl
loope
movsb
and
rcrl
mov
mov
scas
fnstcw
pop
cmp
xchg
pushf
push
add
and
popf
sbb
mov
cmpb
lret
lods
and
jmp
out
stos
ss
stc
push
out
or
movb
mov
imul
pushf
cmp
fimuls
inc
loopne
and
dec
fdivrs
and
inc
pop
sbb
mov
cld
mov
pop
clc
jge
dec
mov
mov
mov
push
lds
ja
or
lret
movsb
inc
scas
mov
inc
pusha
push
push
push
js
sub
mov
dec
cmp
aam
xchg
cld
jno
into
or
jns
out
popf
adcl
fdivp
fbld
push
push
xchg
pop
jno
push
xchg
je
fmull
in
ret
rcrl
push
push
mov
jno
std
mov
dec
js
jbe
add
inc
or
xchg
sahf
cwtl
mov
pop
jns
or
lea
mov
mov
push
movsb
add
push
mov
add
mov
push
dec
adc
enter
add
lahf
clc
xlat
stc
cmp
repz
das
mov
fs
sbb
mov
mov
xchg
out
add
mov
cli
push
in
in
stos
cmpsl
add
inc
imul
les
add
popa
leave
aaa
xchg
push
lock
push
sbb
jae
mov
inc
jl
popf
push
jbe
lea
sbb
sbb
mov
push
das
pop
dec
fistpl
fwait
mov
fbstp
lcall
leave
cmpsb
dec
pop
dec
dec
dec
xor
xorl
mov
adc
push
das
xchg
xchg
or
jb
mov
cmp
and
rol
std
xor
jae
cmp
push
rcll
mov
mov
out
and
gs
inc
pop
and
push
inc
pop
fmul
lcall
dec
ss
sbb
cmp
inc
adc
adc
xor
cwtl
sbb
test
sbb
lcall
inc
cld
fdivs
inc
imul
aad
jnp
ds
inc
outsl
stos
dec
ja
mov
sub
push
jp
jbe
xchg
jle
mov
sub
out
insl
sub
je
cmpsl
xchg
push
or
mov
pop
cltd
ret
jmp
cld
stc
clc
and
inc
inc
or
xor
pop
fwait
adc
pushf
and
mov
pop
and
sub
xorl
push
and
lcall
lods
adc
xchg
cmp
and
sahf
pop
cmpsl
dec
add
shll
cwtl
repnz
jmp
cmp
inc
gs
mov
xchg
or
and
jg
push
fimull
cld
inc
popf
mov
mov
mov
cmp
repnz
push
push
fwait
aas
mov
mov
cli
xchg
or
cltd
push
sub
aas
int
add
imul
adc
xchg
xchg
outsl
xor
mov
aam
lret
mov
fbld
sbb
movsl
ret
or
popa
ljmp
push
cmp
push
lret
fwait
icebp
lds
into
adc
add
fnstsw
mov
fsubr
and
pop
imul
pop
fimull
cmpsb
and
or
shll
mov
jnp
lcall
xchg
push
adc
in
out
push
addr16
imulb
ja
push
rolb
push
cmc
fstpt
pop
dec
aaa
sbb
adc
sti
inc
cld
sbb
inc
in
in
loope
cli
cwtl
mov
stos
push
andl
addps
mov
mov
arpl
inc
xor
cmp
mov
repnz
cmp
ret
fdiv
add
mov
xchg
xchg
imul
in
out
imul
mov
dec
mov
enter
jo
dec
into
xor
inc
sbbl
adc
cmp
into
fsubrp
and
pop
fisttpll
scas
jbe
aad
add
out
rolb
and
iret
pushf
lahf
mov
mov
popa
jbe
push
sbb
xchg
pusha
cmp
pop
insb
loopne
in
sbb
push
dec
and
pusha
ret
dec
adc
mov
fs
add
cli
cmpsl
testb
jmp
sub
add
push
pop
call
iret
adc
add
cmpsb
push
jl
and
pushf
sbb
mov
fistps
cmp
seto
test
pop
stos
xchg
test
push
lahf
int3
fmull
xlat
testl
or
jo
and
adc
sbb
gs
out
mov
stc
repnz
ja
jo
adc
jle
xchg
mov
lock
imul
les
mov
cwtl
lods
jp
cmp
in
pop
subb
shrb
mov
pop
xor
add
pusha
or
lock
pushf
pop
lea
jns
and
scas
out
jl
das
cli
pop
and
add
xchg
sub
in
inc
jbe
outsb
insb
jne
dec
sub
dec
sbb
popf
mov
insb
mov
data16
add
leave
sbb
jle
fs
inc
int
or
xor
test
sub
dec
subps
in
fdivs
push
ja
test
repnz
cli
xor
fisubs
push
cli
movsl
adc
inc
loop
sub
fldl
push
xor
cmpsl
cmp
xchg
ja
dec
cmpsb
cmp
xor
mov
sbb
pop
dec
gs
loop
adc
call
mov
cmp
mov
stos
rcrl
out
adc
data16
xor
imul
insb
pushf
sub
adc
pop
add
or
clc
scas
push
push
sub
fldt
mov
shl
aaa
push
sub
jmp
iret
push
pop
mov
ret
jo
jnp
add
adc
sbb
pop
ja
cmc
push
mov
lcall
push
mov
aad
dec
shlb
sub
adc
add
cmpsl
cld
mov
cmp
add
mov
sbb
les
add
roll
lock
pop
lock
dec
in
fimuls
mov
jmp
mov
push
icebp
arpl
aam
adc
lcall
adc
and
ja
and
inc
adc
mov
fnstcw
in
inc
popa
insl
mov
int
or
push
cmp
and
loopne
insl
test
iret
movsl
std
and
sbb
imul
inc
lcall
sub
or
mov
insl
fwait
jg
stos
or
out
shrl
push
cmp
insb
outsl
mov
cmpsl
xchg
xlat
pop
test
nopl
push
mov
jmp
rcll
jnp
enter
jns
mov
sahf
xor
sbb
fisubl
xor
pop
popa
fadds
push
fidivrs
xor
ja
sbb
movsl
pop
stos
insb
movsb
xchg
scas
notl
jno
push
xchg
popa
add
jnp
inc
jp
jg
popf
push
sub
cmpsl
data16
pop
cmc
mov
imul
sti
iret
mov
or
hlt
loop
inc
push
cli
mov
cmc
fcomp
or
xor
cli
jb
jb
dec
popf
iret
sbb
shrl
mov
ja
jge
cmp
push
stos
inc
shr
mov
scas
std
sbb
loope
aas
jns
pop
mov
ljmp
and
push
rorl
bound
andl
shll
sahf
or
in
pop
test
movsb
dec
sbb
fimull
mov
repnz
jmp
and
cmc
push
adc
fabs
and
into
test
xor
add
xchg
das
mov
je
push
mov
cmp
jae
add
imulb
lock
sbb
daa
add
idivb
lock
xchg
divb
adc
fists
push
mov
pop
mov
mov
mov
jnp
inc
jg
add
and
enter
mov
or
xchg
xor
inc
inc
xchg
fdivl
mov
inc
negl
pop
gs
push
mov
lods
jge
iret
mov
out
frstor
test
xchg
insb
sbb
push
nop
test
push
sub
or
dec
push
add
xchg
jo
sbb
cltd
fs
or
aad
xorl
cmp
jmp
cmc
xor
mov
aam
xchg
mov
dec
or
push
push
pop
xchg
in
lahf
sti
in
mov
adc
ljmp
aas
pop
cmpsb
cld
ss
sbb
jl
sbb
push
push
pop
add
xor
inc
mov
in
dec
daa
push
loope
rclb
pop
insl
inc
inc
std
in
adc
mov
loopne
icebp
or
mov
push
rorl
xchg
std
adc
push
movsb
cmp
mov
test
test
leave
jne
and
jb
fisubrs
adc
in
fcoms
stc
cmp
imul
nop
mov
aaa
pop
adc
dec
mov
bound
sub
push
push
mov
cmpsl
push
mov
lea
ret
jmp
out
mov
push
nop
xchg
mov
lcall
roll
or
ret
insl
dec
xlat
sub
aam
mov
push
aas
or
aas
inc
cmp
daa
pop
jnp
popf
pusha
sbb
ss
lods
jae
fstps
mov
sub
dec
in
jns
adc
mov
pop
xchg
stos
movsl
popl
inc
stc
inc
aad
push
jnp
aam
je
push
lahf
sub
sbb
scas
out
mov
dec
or
shrb
orb
aam
jle
xlat
nop
dec
adc
push
sbb
int3
fadd
jmp
scas
adc
cli
js
in
scas
les
push
lret
mov
lods
mov
call
or
repnz
xchg
cmpsl
in
cld
mov
push
hlt
cmpsb
fbld
lret
add
xor
sbb
idivb
sbb
mov
inc
push
addr16
push
inc
or
adc
jge
adc
mov
add
pusha
dec
push
enter
fwait
inc
jno
ret
out
jne
add
cmp
xchg
pop
pop
filds
lcall
jns
cmp
xor
inc
mov
rcll
sub
cmpsl
ret
stos
sbb
hlt
jp
shrl
cmpsl
scas
lret
sub
pop
fidivl
stos
lret
sub
addr16
popw
int3
and
insl
shlb
adc
mov
dec
xchg
cld
xor
lea
scas
sbb
mov
mov
sbb
mov
loopne
dec
pop
ss
jle
stc
arpl
inc
mov
bound
add
ja
mov
imul
inc
xchg
sub
lock
into
xchg
sahf
sbb
pop
push
or
pop
rolb
dec
pop
mov
clc
cmpsl
hlt
dec
nop
add
mov
push
ret
cli
mov
int
jnp
adc
pop
and
clc
popf
ret
mov
pop
icebp
test
pushf
nop
dec
hlt
dec
jecxz
mov
fmuls
sub
inc
cwtl
pushf
jge
int3
ror
and
aas
mov
int
jmp
pusha
jae
or
dec
outsb
divl
or
xchg
out
dec
cmp
fnsave
int3
push
mov
pop
push
dec
fwait
test
es
jge
sahf
xchg
repnz
jns
ljmp
inc
xlat
adc
jb
call
push
xor
fistpll
push
xchg
inc
dec
lcall
cwtl
xor
daa
push
out
aam
mul
gs
call
mov
mov
jns
xchg
rcrl
mov
imul
add
insb
dec
adc
jecxz
push
xchg
add
fldt
ret
out
icebp
aaa
add
push
es
imul
add
pop
mov
fsubr
xor
in
sub
js
fstpl
sub
push
sbb
bound
xorl
pop
jae
jmp
cli
ljmp
or
repz
sbb
hlt
fsubl
dec
js
add
xchg
aas
leave
dec
orb
stos
ja
push
mov
add
pop
sub
push
xchg
pop
addb
dec
je
jne
mov
dec
push
or
add
and
sub
cld
arpl
push
repnz
inc
andl
jno
and
js
loope
xor
adc
gs
stc
scas
cmp
dec
jecxz
push
fsubrl
mov
popf
mov
cli
cmpsb
movl
and
mov
cmp
lock
addr16
push
cmc
adc
sbb
jb
or
or
int
inc
daa
or
mov
xor
aam
dec
sub
cmpsl
or
je
test
sbb
mov
xchg
mov
adc
or
inc
test
jge
dec
inc
into
fnstcw
loop
int
repz
xor
dec
mov
icebp
stos
stos
lret
sub
dec
fistpll
mov
and
pop
imul
and
jno
jp
mov
daa
pop
fwait
cmc
add
stc
cmp
test
xchg
xlat
xor
push
inc
pop
loope
jmp
pop
aad
cld
cs
push
popf
push
xlat
pop
jecxz
sbb
enter
cmpsl
sbb
fptan
sbb
xorb
enter
pop
add
pop
mul
outsl
fadd
fs
push
mov
cmp
mov
jp
mov
push
mov
lahf
fucomp
fiadds
jo
hlt
mov
mov
je
and
jnp
out
jecxz
jb
dec
sti
iret
addr16
cmp
cmp
cwtl
into
js
mov
push
aaa
imul
jmp
xchg
and
ds
and
jmp
test
xlat
and
cli
adc
fst
add
pop
loope
xor
jmp
jns
xor
imul
test
pushf
and
cmp
popf
xor
xor
scas
shrl
sbb
cmp
inc
mov
inc
mov
bound
cmp
and
dec
ret
sub
aad
shr
jo
sub
and
pop
lods
icebp
movsl
shrl
xchg
outsl
mov
stos
repnz
aaa
cmp
cmp
loop
test
push
mov
mov
mov
call
push
jle
mov
add
repz
mov
scas
loope
push
clc
cmpsb
daa
outsl
loop
mov
jnp
push
gs
xchg
adc
insb
fs
sub
xor
sub
in
sahf
testb
xchg
or
bound
pop
push
fcomps
fldenv
xor
dec
pop
mov
add
shll
xchg
jae
push
mov
fadds
adc
push
addr16
pop
push
pushf
stc
lret
or
fmul
xor
notl
add
lods
in
sub
and
rcll
ss
mov
sbb
mov
xchg
jbe
imulb
mov
lcall
cmp
add
push
cmp
pop
pop
aas
xchg
hlt
sub
andb
mov
and
shr
fwait
clc
and
jle
fs
mov
pop
out
lahf
andb
inc
ret
xlat
mov
dec
mov
add
xor
push
mulb
fs
pop
jp
lock
sar
mov
cmp
or
test
lret
int
clc
dec
mov
dec
cmpsb
push
ljmp
imul
push
adc
jbe
aaa
adc
jne
dec
dec
push
fbstp
je
rcrl
repz
std
mov
cltd
adc
jp
mov
push
sarb
hlt
pop
lods
sbb
lahf
andb
ja
enter
cwtl
jmp
push
push
and
imul
push
daa
jecxz
or
cmpsb
adc
dec
inc
outsl
shrb
scas
movsb
adc
mov
pop
lret
xchg
fistpl
inc
push
es
out
mov
aas
leave
cmpsl
pop
mov
mov
pop
icebp
es
sub
cli
dec
sub
in
pop
sub
mov
ret
xacquire
stos
mov
xorb
inc
dec
sbb
and
xchg
call
sti
add
aas
and
cmp
loopne
mov
sub
fimuls
addr16
arpl
lahf
in
mov
leave
bound
pop
in
dec
mov
inc
inc
lods
inc
pushf
mov
mov
cmp
repnz
cmp
xchg
and
push
mov
popf
cwtl
and
and
aad
lcall
dec
icebp
dec
shrb
add
jbe
jecxz
add
popa
sti
add
dec
xor
and
pop
xor
lret
dec
mov
cmpsb
rclb
jbe,pt
xchg
imul
cmp
sub
es
pop
jb
pop
jmp
sbb
nop
movsl
xchg
and
stc
sbb
cltd
jg
je
push
bound
push
fadds
or
mov
push
adc
cmc
adc
pop
mov
bound
test
subb
and
pop
les
repnz
aad
mov
pop
sbb
loopne
insb
arpl
scas
imul
lret
push
mov
adc
loop
popl
and
adc
and
add
dec
movsb
je
test
inc
fs
dec
nopl
imul
mov
ja
dec
pop
xor
test
or
pop
pop
xor
inc
dec
cltd
adc
out
les
lret
mov
cs
mov
lret
mov
repz
out
push
inc
adc
mov
into
pop
jl
cmp
and
pop
xor
ds
mov
push
push
stc
fbstp
sahf
xor
mov
outsb
loope
outsl
lds
jnp
adc
sub
xlat
or
out
imul
xchg
and
add
lea
and
es
lods
fcomps
push
push
movsl
call
push
cmp
push
cmp
dec
shll
xor
adc
call
sub
movsl
cmp
notl
mov
testb
shrl
mov
xchg
mov
bound
jb
aam
xor
lods
rcrb
stos
cltd
das
inc
or
repz
in
fstpt
test
outsb
icebp
fidivrl
or
mov
imulb
push
dec
push
sub
sbb
fcoms
pop
or
pop
or
ret
pop
cwtl
xchg
jle
stc
and
mov
mov
xor
fwait
pop
mull
addb
out
rclb
xor
inc
pop
adcl
mov
mov
sbb
cwtl
sub
cmpl
test
scas
in
dec
jl
jecxz
decb
sub
pop
std
mov
xorl
sub
shr
push
xorl
scas
out
mov
dec
sbb
rorl
in
hlt
mov
mov
aas
sub
mov
sbbl
sub
sbb
jp
lcall
shll
rolb
cmp
cwtl
or
mov
sbb
popf
mov
int3
adc
add
cld
mov
enter
xor
ss
scas
loop
cwtl
cmp
xchg
sti
mov
std
mov
mov
cmp
dec
pushw
fisttps
iret
pop
rcrl
mov
ret
ds
enter
or
cmp
dec
cs
add
push
xor
mull
icebp
movsb
scas
jecxz
lret
fs
mov
fptan
dec
mov
cld
mov
jbe
xchg
insb
sbb
scas
dec
testl
jne
inc
dec
out
std
xor
into
xor
inc
bound
xor
out
adc
clc
repz
insl
adc
cs
stc
outsb
cmp
mov
fcoml
sub
fwait
lret
and
in
or
notl
mov
mov
dec
xchg
xchg
lret
fcmovu
jle
stos
add
cwtl
sarb
xchg
inc
testb
aam
insl
mov
int3
jmp
or
ficompl
and
loopne
jnp
shll
imul
and
xor
or
push
movsb
xchg
push
push
icebp
cltd
and
mov
adc
mov
dec
mov
and
sub
mov
into
popa
popf
mov
fsts
je
push
out
fisubs
cmp
imul
outsl
es
mov
gs
jbe
adc
imul
popf
xor
insb
cmp
inc
scas
mov
or
jmp
and
jg
sbb
imull
fiaddl
jmp
std
xlat
cmpsb
mov
adc
add
pop
cltd
aaa
jp
xchg
sarb
xchg
cwtl
cltd
cli
ds
rcrb
dec
popa
int3
aam
sub
enter
pusha
js
pusha
fstps
mov
mov
sub
int3
adc
dec
fsubl
pop
dec
pop
mov
mov
rcl
push
cmp
lahf
mov
fsubrs
bound
rorl
sbb
mov
movsb
adc
lret
ss
cmc
mov
or
inc
sbb
xchg
push
adc
sbb
in
push
jae
sbb
std
ret
mov
stos
gs
xchg
jbe
fmulp
les
sbb
xchg
loop
clc
mov
sbb
stc
jmp
cli
adc
xlat
in
shrb
sub
gs
lea
pop
pop
jl
dec
cmc
stos
dec
lret
mov
xchg
lcall
sbb
jle
mov
mov
sub
ret
aad
cmp
dec
xor
je
ret
mov
xchg
mov
dec
mov
add
scas
jno
and
loopew
or
xchg
icebp
pop
cmp
imull
xchg
out
into
movsb
lods
cmc
add
in
ss
je
pop
or
mov
int3
jo
iret
inc
and
jecxz
in
dec
add
mov
mov
push
mov
or
push
subl
js
fucomp
cmp
test
xchg
cmp
or
nop
xchg
dec
add
xor
call
dec
imul
mov
xrelease
pop
test
hlt
sub
shr
sub
arpl
dec
dec
lea
mov
int3
mov
mov
sub
xor
pop
mov
mov
int3
jns
das
call
jg
movaps
out
xor
mov
hlt
mov
dec
dec
or
js
sbb
sbb
xchg
sbb
inc
mov
jnp
inc
enter
loope
xlat
mov
or
test
hlt
xchg
addl
int3
lods
mov
ljmp
sbb
iret
popa
icebp
in
cmp
ljmp
test
sub
popf
fistps
fdivrp
movl
add
out
jge
cwtl
fsubrl
lock
shl
dec
jg
cltd
inc
and
in
inc
into
incl
adc
mov
push
repnz
rcrb
fcomi
pop
adc
sbb
div
enter
pusha
inc
cmp
adc
and
jb
push
adc
xchg
je
out
xor
xor
roll
movsl
dec
dec
int
mov
loopne
stos
les
outsb
jbe
filds
loope
pop
cmp
sub
cmp
arpl
repnz
repz
mov
push
push
push
jp
cmc
and
cmpsb
mov
std
movsb
dec
ret
ret
mov
movl
scas
aad
jge
nop
xor
int3
je
xlat
loop
imul
add
jo
call
xchg
mov
ret
jecxz
sbb
jecxz
cmpsl
in
xor
jne
mov
mov
dec
rclb
out
adc
ja
sbb
add
mov
out
sbb
insl
ja
jno
iret
mov
shrb
outsl
sbb
pop
mov
es
cmp
or
ja
mov
xor
loop
movsl
add
clc
mov
sub
add
adc
in
aaa
sub
movsl
lods
push
ds
out
sub
cmp
or
flds
stc
hlt
xorb
in
cmc
jns
leave
ljmp
mov
outsl
iret
loopne
xchg
push
sub
lock
xchg
mov
cmp
fsubs
jmp
adc
jp
in
out
out
mov
dec
loop
jb
ror
enter
jo
mov
push
fadds
add
mov
push
jge
mov
sbb
je
fs
repz
arpl
adc
fcomps
or
sub
mov
cmp
das
ss
cli
push
repnz
fldl
cmp
adc
cmp
push
mov
outsb
mov
in
std
lods
not
cmp
clc
xchg
std
jp
sbb
cld
mov
or
test
inc
in
mov
mov
bswap
bound
int3
xor
sti
inc
pop
fists
aas
or
cli
out
cmp
xchg
lods
sub
push
jg
testb
scas
js
jecxz
mov
push
jae
adc
and
adc
ret
lret
sub
out
in
mov
loopne
xchg
pop
pop
xor
mov
xor
cmp
pop
and
das
out
and
mov
int
orb
mov
mov
xor
ja
mov
cmp
out
aaa
lahf
jl
inc
repz
repnz
rolb
cmp
or
imul
dec
nop
inc
call
mov
mov
clc
je
inc
bound
fildl
mov
imul
das
orb
mov
cmc
mov
or
pop
pop
andb
sahf
rcrl
into
or
jae
mov
dec
push
mov
dec
lret
cmpsl
dec
and
jno
movsb
jecxz
sbbl
inc
int
mov
push
divb
add
loop
arpl
pusha
ret
pop
xchg
out
loop
sbb
lods
pop
lea
xor
pop
es
aaa
pop
adc
ficomps
inc
jae
jmp
mov
xchg
insb
std
mov
or
arpl
fstps
mov
cmp
push
mov
jecxz
lret
sub
pushf
cli
outsb
testl
mov
aad
add
dec
sahf
incl
lock
mov
sbb
mov
cmp
xor
daa
aad
xchg
and
fisubs
data16
jge
jne
add
ljmp
dec
xchg
gs
leave
sub
popf
jecxz
sub
sub
fbstp
push
fisttps
mov
xchg
movsl
ja
int3
push
pop
cmpsb
pop
cmp
movsl
cmp
mov
mov
push
mov
jns
test
mov
xchg
sti
push
ds
dec
data16
cmpsb
push
std
scas
rcrl
aad
inc
xorl
jg
loop
push
xor
dec
gs
xchg
call
es
lods
mov
push
les
lret
fidivs
push
aad
pop
jmp
push
aad
sbb
fstpl
lahf
mov
hlt
push
jno
add
xor
hlt
mov
pusha
leave
add
fldcw
in
or
push
lods
push
sbb
xor
ljmp
outsb
ficomps
js
pop
and
es
popf
xor
cmp
lahf
lret
add
fadds
out
pop
xchg
ret
mov
add
rcrl
stos
fiaddl
ficompl
mov
xchg
in
dec
ss
cs
dec
outsl
mov
sbb
xchg
pop
jno
test
cmp
out
out
mov
sub
call
cld
mov
pushf
dec
xchg
push
xchg
shlb
daa
jae
test
mov
adc
push
in
js
in
push
push
lahf
dec
les
mov
movsl
mov
push
push
scas
pop
adc
gs
das
sti
imul
daa
jae
test
pop
jg
push
pushf
out
sahf
xor
loope
xchg
add
push
cmp
cmp
xor
scas
clc
loopne
and
lods
repnz
mov
dec
insb
sub
daa
inc
sub
scas
rolb
add
cmp
subl
in
xchg
adc
mov
mov
pop
fwait
dec
adc
add
fldt
push
data16
movsl
mov
fisubrl
mov
decb
jge
mov
cli
movsl
add
push
dec
mov
jns
mov
ret
ror
push
cltd
or
ds
add
out
out
jecxz
sub
dec
cmp
mov
jnp
inc
sbb
cmp
mov
addl
movsl
jl
or
out
ja
mov
fsubr
pushf
repnz
fwait
mov
popf
cs
fwait
xchg
fwait
loop
or
jns
int3
cmp
int3
cmpsb
loope
ljmp
dec
jge
in
out
roll
adc
aam
or
lret
ret
push
out
test
pop
or
dec
roll
int3
dec
cld
inc
call
in
dec
add
cmp
in
sbb
stc
cmp
aas
stos
shl
lods
dec
sbb
stos
pop
ficompl
lods
scas
hlt
pop
mov
ljmp
mov
and
add
mov
sub
adc
add
shrb
pop
aam
sub
enter
ficoml
jp
sub
mov
xchg
xchg
dec
gs
jne
push
call
das
push
or
push
bound
adc
les
repnz
je
sub
sbb
mov
jg
loope
jecxz
mov
fbld
aam
lret
or
xchg
dec
xchg
pusha
orb
bound
fdivl
out
push
movsl
out
add
mov
test
mov
nop
call
sub
mov
jecxz
xor
and
push
sub
lret
imul
imul
fldt
push
lods
and
push
lods
sbb
xorl
add
faddp
jo
xlat
outsb
inc
repnz
mov
gs
mov
jbe
mov
and
mov
mov
and
adc
xchg
data16
out
pop
loop
sbb
mov
or
and
dec
iret
loop
sbb
adc
mov
adc
fwait
dec
rorb
or
ljmp
mov
dec
push
rcll
push
push
in
ror
cmp
es
add
ds
mov
mov
ret
mov
data16
mov
pusha
fistps
jmp
pushf
ds
in
bound
and
and
data16
xchg
outsb
push
lahf
test
mov
pop
ss
push
clc
fs
test
mov
sub
test
ret
add
jmp
leave
adc
loop
outsl
rcrl
loop
stc
mov
cmpsl
jbe
cmp
shlb
mov
jns
imul
pop
inc
cmp
jne
pop
jnp
aas
repz
sbb
test
rorb
jl
pusha
cmp
mov
cli
into
bound
dec
sub
push
mov
dec
je
sbb
in
xchg
aam
aam
and
mov
push
lea
stos
arpl
inc
cmpsb
or
xor
rcr
jae
pop
out
jl
sub
insl
pop
fstpl
jae
stos
outsl
hlt
xchg
and
dec
fbld
rclb
mov
jecxz
in
xor
scas
aad
adc
shl
push
mov
jnp
dec
cld
xlat
mov
push
push
mov
pop
sub
inc
xchg
mov
test
stos
bts
adc
cmpsb
hlt
jecxz
jne
jns
push
adc
xor
rcrl
sub
andl
call
jge
pop
lea
daa
mov
into
jle
mov
aas
add
dec
xchg
andl
pop
xor
fldenv
js
js
jne
fidivs
push
add
adc
pop
andl
or
xor
sti
or
fs
add
jle
stos
fdivrs
mov
lcall
iret
jecxz
cld
mov
daa
mov
int3
mov
and
add
pop
xchg
fisttpll
jg
xchg
out
test
ret
neg
aaa
jmp
dec
repnz
test
pop
jge
cltd
sbb
mov
inc
hlt
push
jl
dec
mov
or
and
jmp
scas
cmp
loope
dec
out
pop
sbb
push
sub
ret
subb
jbe
mov
je
pop
lock
int3
out
mov
xor
fidivrl
cmpsb
cld
adc
ret
cmp
ret
fisttpl
shl
arpl
inc
sub
add
ljmp
stc
rcll
and
test
ficoms
sbb
lret
mov
test
pop
jecxz
popf
cld
in
mov
and
scas
arpl
sti
fwait
xor
push
in
out
dec
jne
inc
sti
arpl
inc
das
cmp
cmp
cs
xor
or
shr
aas
inc
jle
stc
push
inc
imul
pop
ret
insl
xchg
jnp
fcoml
hlt
dec
inc
jb
xor
dec
push
push
shrb
xlat
adc
fnstsw
mov
sub
and
adc
adc
pop
fcmovnb
testb
imul
imul
xchg
mov
out
ret
lods
mov
jo
lcall
stc
push
out
and
xchg
popa
mov
arpl
cmpsb
and
push
stos
sti
fisttps
xrelease
sub
mov
lret
adc
cltd
dec
hlt
mov
popf
js
in
out
andb
cmc
adc
out
insl
lret
mov
dec
jle
xor
movsl
adc
jo
sub
iret
lock
sub
jne
sub
cmc
xorb
mov
out
xlat
push
xor
cwtl
cmp
cld
xor
dec
dec
jae
inc
ret
int3
mov
dec
hlt
mov
lds
dec
and
popl
fisubrl
xchg
jmp
adc
std
ljmp
jo
insb
cli
outsl
mov
jg
jbe
mov
sub
dec
mov
mov
push
xchg
out
or
enter
xchg
cvtps2pd
adc
fucomp
inc
sarb
les
and
gs
mov
sbb
gs
xor
mov
inc
loopne
mov
push
outsb
into
jae
out
pop
mov
movsb
lcall
in
testb
sbb
jo
mov
add
push
int3
popf
mov
jnp
mov
pop
pop
repz
inc
dec
cmc
hlt
or
sub
adc
cli
cld
sub
xor
ret
mov
stos
sub
lahf
push
stc
sbb
int
jl
das
cmpb
mov
mov
sbb
sar
leave
jl
mov
in
cli
cs
jne
push
rorb
dec
fsubrl
fcoms
ja
cmpsl
push
pop
cli
add
dec
jno
lcall
div
xchg
rolb
int
cmp
sub
mov
adc
repnz
into
sti
jg
ds
mov
pop
je
xchg
mov
in
dec
pop
scas
clc
stos
ds
scas
out
pusha
pause
arpl
test
fwait
dec
inc
outsl
cmp
pop
and
lcall
mov
mov
test
leave
pop
xor
adc
nop
hlt
ret
jno
ja
fnstenv
lods
pop
jmp
inc
jb,pn
stos
fildll
push
fistps
das
adc
mov
or
pop
sub
or
int3
pop
jge
clc
cmp
sub
stc
inc
add
ljmp
or
pushf
or
call
inc
into
repnz
adc
pop
mov
cmpsl
scas
or
xor
cmp
push
mov
imul
mov
adc
movsl
fbstp
xchg
adc
pop
pop
cmpsl
rcrl
andb
sbb
cmp
sub
repnz
outsb
jg
add
mov
div
lret
scas
dec
daa
mov
adc
add
sbb
inc
repz
iret
inc
mov
shlb
sub
and
add
test
popa
push
nop
pop
pop
xchg
mov
lret
ffreep
div
pop
ret
mov
inc
in
pop
lea
dec
dec
add
cld
incl
pop
int3
mov
sti
subb
and
into
addr16
out
imul
mov
mov
or
addr16
je
mov
lahf
cmp
lret
movsb
mov
movl
push
jbe
icebp
jl
and
hlt
inc
fwait
lret
stos
pop
stos
pop
adc
call
mov
jae
dec
add
push
sub
jbe
adc
movsb
or
xchg
sbb
lret
jns
addl
and
inc
cmp
shll
or
mov
je
add
mov
cmpsl
xorb
mov
imul
add
cmp
jg
fstpt
xchg
jmp
popf
psraw
cmpsl
imull
nop
dec
sbb
fdivl
pop
cmp
push
insl
push
repz
enter
adc
data16
jp
stos
mov
shlb
jo
out
lret
pop
ljmp
fbld
push
add
pop
jecxz
ret
jmp
or
sbb
imul
sarl
ljmp
das
push
push
insb
out
daa
mov
cs
frstor
lds
addb
outsl
lcall
jp
mov
mov
cmp
iret
out
jmp
xor
repz
sub
iret
inc
sbb
sahf
mov
dec
popa
testb
lea
jbe
sbb
mov
out
sbb
out
mov
jbe
mov
daa
out
sbb
lea
mov
into
xchg
leave
mov
or
fadds
cmp
sub
push
inc
test
into
adc
arpl
jnp
rcll
adc
dec
sub
jle
push
push
hlt
leave
loopne
mov
loopne
sbb
out
fcomps
cmpsb
clc
inc
out
addr16
inc
and
adc
jb
xchg
jno
add
ret
push
mov
xchg
and
shll
sarl
ss
inc
int3
inc
enter
sub
mov
aad
pop
push
int
and
fidivrl
fcompl
sub
dec
std
adcl
stos
cltd
push
xchg
pop
in
lea
xchg
pop
insb
xor
cmp
jb
add
xor
sub
in
dec
outsb
push
loope
lods
pop
aam
adc
in
or
data16
inc
sbb
rcrl
dec
sbb
faddl
dec
fcomi
enter
loop
lcall
pop
jge
psubq
and
fildl
lods
lods
pop
inc
xchg
in
cltd
lods
fldl
dec
aas
and
mov
in
test
test
ret
jb
stos
add
xchg
add
jmp
shll
mov
mov
sbb
loop
adc
mov
das
call
cmp
add
test
or
negb
and
mov
test
xchg
xchg
pop
sbb
sub
clc
psubw
add
jo
daa
fsubrs
pop
dec
xchg
int3
movsl
and
xchg
pop
xlat
shrl
push
mov
lods
xor
jb
fildll
js
xchg
xchg
and
inc
pop
jmp
add
out
stos
insb
adc
adc
mov
push
mov
iret
lret
dec
dec
add
sbb
or
dec
test
cli
jnp
lcall
loopne
daa
pop
icebp
in
lds
ror
mov
dec
push
xchg
mov
sub
sbb
cmpsb
std
mov
pop
addl
sub
frstor
sub
dec
xor
pop
imul
push
cwtl
mov
outsb
xor
mov
dec
add
clc
add
ljmp
push
dec
dec
je
jnp
ja
push
or
pop
cmp
insl
sbb
pop
hlt
cmpl
push
loope
inc
dec
ret
dec
mov
andl
xchg
adc
movsl
push
mov
pop
jmp
and
in
movsb
mov
xchg
nop
and
stos
push
jp
iret
add
aaa
or
xor
mull
and
push
jmp
ss
int3
ds
push
cwtl
stc
int3
mov
and
mov
push
aas
xchg
test
cwtl
sbb
lret
lret
insb
fwait
push
movsl
push
sarl
xor
and
inc
mov
fstpl
aam
test
jg
jecxz
fcoml
repnz
mov
scas
outsb
outsl
fnsave
cli
nop
inc
push
jne
test
dec
xchg
lret
testl
mov
mov
add
into
cli
shlb
mov
movl
fisttps
das
stos
cmove
xlat
dec
sbb
inc
jns
sub
in
xor
imul
cmpsl
add
mov
jno
cmp
xchg
jmp
and
mov
rol
addr16
mov
push
inc
jp
fs
dec
in
mov
add
xchg
adc
daa
pop
mov
setle
sarl
lret
sub
push
popa
xchg
inc
out
or
mov
adc
or
mov
cmp
out
and
andb
xchg
xorl
pop
xor
fsubr
dec
sarl
push
xchg
push
lcall
mov
xor
sbb
sub
push
aaa
add
movsl
andl
fwait
xchg
sti
loop
inc
lahf
cmpb
jmp
xor
ja
hlt
xorb
jp
xor
or
sti
xchg
das
push
movsb
jae
dec
ss
mov
popf
push
mov
mov
jb
mov
jae
mov
add
push
enter
and
ja
aam
ret
push
or
cmp
and
ja
cmpsb
add
cli
and
push
cmpsb
nop
insb
inc
loopne
jno
jmp
adc
xor
ret
ljmp
pop
or
enter
cmp
fstpl
fstpl
mov
adc
pop
movsl
es
push
dec
adc
pop
xchg
lcall
push
jle
dec
jl
lahf
in
lock
sbb
fdivr
lret
or
les
sysenter
mov
pop
call
popa
adc
adc
pop
ss
leave
mov
stos
sbb
sbb
out
add
xor
fcomps
lods
fldt
daa
leave
sbb
mov
jo
xchg
pop
adc
clc
sbbl
leave
mov
lret
gs
push
push
sbb
sbb
adc
xchg
add
mov
cmp
out
or
daa
inc
roll
dec
lods
out
mov
sbb
dec
enter
cmp
aas
ljmp
adc
sbb
aam
mov
imul
jge
fnstenv
push
mov
shlb
movsl
out
fidivrs
cmpsb
pushf
add
add
mov
xchg
push
popf
jbe
mov
push
dec
das
xor
outsb
mov
mov
lds
and
dec
push
adc
cmp
jp
cmp
lcall
andl
popa
jl
leave
push
jl
add
push
jmp
jmp
dec
pushf
xchg
imul
testl
test
dec
adc
push
xchg
ja
lock
pop
jae
lahf
dec
pop
or
add
data16
mov
cmp
sbb
adc
mov
sahf
push
jmp
xchg
cwtl
lahf
jp
imull
cs
rcrb
jp
cmp
mov
loopne
xchg
mov
out
ret
ret
sub
cli
repnz
in
dec
and
push
sub
add
aad
fiadds
cmp
es
inc
ljmp
xchg
dec
nop
cmp
xlat
jle
icebp
inc
les
mov
pop
rorl
dec
jge
adcl
jne
inc
cmp
out
mov
rcrb
fsts
cmp
xorl
icebp
mov
lea
mov
pop
xor
xchg
add
je
aaa
fadd
inc
mov
push
ret
in
dec
in
add
iret
out
sub
jbe
dec
pushf
inc
pop
xchg
mov
aas
xor
and
mov
imul
mov
jbe
jmp
lods
and
ljmp
cmp
jnp
jnp
stos
jmp
mov
fcompl
cld
pop
cwtl
and
xor
xlat
pop
ss
cmp
add
xor
dec
push
mov
out
sbb
aas
addl
es
subl
add
push
in
aaa
pop
arpl
push
test
lea
add
xchg
fdiv
xor
add
push
add
test
inc
fisttpll
rcrl
sub
fptan
jb
mov
imul
sub
dec
xchg
jae
inc
inc
push
mov
xchg
mov
aam
pop
incl
adc
or
inc
jmp
dec
fsubr
sti
sub
push
mov
mov
sbb
sub
and
divb
mov
jnp
or
pusha
adc
xlat
lahf
mov
jae
ljmp
sbb
cli
mov
test
lcall
lds
daa
adc
jo
test
js
push
xchg
loope
repz
bound
sarb
mov
lret
repz
repz
jnp
adc
jae
adc
loopne
pop
pop
cmpsb
adc
pop
mov
test
in
jne
lods
nop
cmp
jb,pt
pop
fisubs
mov
sbb
scas
xor
aaa
push
out
push
inc
and
fs
ss
fisubs
pop
scas
and
add
fs
and
jecxz
sub
sbb
add
dec
arpl
push
inc
sub
xchg
ja
sub
sub
mov
gs
push
in
push
test
pusha
push
shl
xlat
aas
outsb
pusha
shlb
mov
xchg
insb
adc
pop
les
outsb
jne
imul
lods
nop
push
imul
and
sbb
inc
pusha
mov
bound
les
mov
ret
push
xor
stc
sahf
sub
test
cmpsb
push
cld
add
push
sbb
ja
not
inc
push
or
mov
xchg
gs
and
mov
and
dec
xchg
or
cmp
std
jp
adc
and
rcll
clc
jbe
fnstsw
mov
fisttpll
scas
pop
fwait
ja
add
add
sub
sbb
bnd
mov
in
test
jl
mov
pusha
pusha
sub
adc
bound
inc
lea
sbb
cmp
out
pop
inc
inc
pop
sahf
or
mov
ja
aaa
clc
arpl
fildll
aam
mov
daa
gs
or
aad
add
add
cmpsb
push
dec
jb
call
pop
movsb
hlt
cmp
rcl
pop
stos
sub
test
and
xchg
lds
mov
and
mov
leave
jno
stos
mov
popf
in
inc
repz
mov
stc
js
add
lcall
cmp
lods
mov
loope
sbb
mov
lds
inc
rcl
mov
inc
cmp
adc
dec
in
push
nop
repz
fsubr
aaa
xor
adc
test
lahf
out
dec
sub
and
dec
sub
sarl
std
jmp
xchg
lahf
inc
or
jecxz
imul
scas
call
pop
mov
out
jmp
addb
mov
test
xor
popa
mov
imul
loopne
adc
dec
sub
mov
packuswb
js
shl
sbb
cmpsb
rclb
pop
xor
inc
pushf
test
mov
mov
fadds
mov
xchg
or
insl
lahf
ret
and
lret
lahf
stos
js
push
mov
es
mov
arpl
push
pop
push
or
fs
lcall
xchg
lods
add
cmpsl
fs
test
xchg
loop
jmp
pushf
mov
mov
xchg
jnp
adc
cmp
jae
in
sub
jge
add
sbb
hlt
mov
jp
and
mov
fwait
cltd
int3
int3
fdivrs
add
xor
jbe
mov
mov
outsb
int3
es
push
xchg
outsl
enter
loopne
enter
jno
push
das
das
mov
dec
xor
inc
or
cmpsl
pop
fwait
or
je
push
testb
sub
scas
out
cmp
jae
xor
test
or
add
or
mov
in
add
orb
inc
mov
daa
fcomps
inc
add
sbb
push
stos
pusha
lods
cmp
mov
push
fdiv
test
loope
pop
js
js
push
mov
rcll
pop
insb
fisttps
int
imul
inc
ret
rcrl
jg,pn
test
mov
or
decl
mov
scas
adc
sbbl
inc
dec
data16
imul
pop
xchg
xchg
bound
inc
insl
jb
cli
out
movsb
shrl
adc
push
les
daa
push
mov
pusha
std
dec
xor
fwait
sub
pop
cld
pusha
loopne
and
dec
lock
mov
daa
push
test
or
fisttpl
mov
and
jmp
jo
ja
add
or
push
add
lods
jb
jb
es
neg
je
bound
xchg
jl
xor
fstl
out
fldenv
and
push
ss
movb
aad
outsb
xchg
cld
repnz
popa
call
inc
xor
mov
jmp
sub
sbb
and
fidivrl
inc
cwtl
mov
push
jmp
movsb
xor
adcl
jg
std
add
movsl
fldlg2
xor
arpl
and
cli
and
enter
mov
xlat
decl
ret
leave
punpckhbw
shlb
mov
add
and
push
bound
cmpsb
push
pop
and
mov
in
sub
enter
repnz
or
mov
sbb
sti
jmp
mov
cmpb
sub
cmp
push
test
xchg
sbb
fcmovnu
out
daa
xchg
js
orl
int3
jae
sbb
icebp
push
dec
push
iret
shll
shl
outsb
insb
pop
push
addb
fs
loop
pushw
ljmpw
adc
lret
imul
xchg
mov
pop
cmp
jne
jmp
lods
xchg
mov
push
dec
ret
lret
push
shll
pop
jl
movsb
mov
mov
int
push
or
mov
addr16
nop
xchg
in
adc
xchg
lock
lea
push
dec
je
and
in
jmp
inc
rorl
nop
testb
or
data16
rcr
jns
subl
dec
subb
inc
leave
dec
sub
cmp
jnp
jl
pop
notl
push
jmp
out
mov
pushf
movsb
xlat
cmp
cmpl
out
and
sub
mov
cmp
test
push
test
clc
mov
mov
adc
idiv
inc
imul
fdivrl
pop
mov
negl
arpl
scas
pop
push
jmp
cmc
daa
ret
dec
mov
cld
add
jmp
pop
add
dec
sub
aam
adc
stos
inc
cmp
adc
into
out
inc
push
jg
sub
imul
das
inc
daa
fcmovne
cmpsl
dec
js
test
iret
pushf
or
adc
fstps
cld
sti
or
xor
push
icebp
ss
pop
mov
xor
out
lods
js
mov
mov
sbb
sbb
aas
aad
fwait
xor
mov
xchg
aad
jge
jg
push
lret
lahf
inc
sbb
add
jae
lea
repnz
sub
movsb
jge
mov
dec
or
dec
stos
cmp
sbb
add
outsb
or
jo
jns
hlt
int
test
loope
and
and
addl
fidivrl
fucom
ss
cmc
xchg
shl
popf
outsb
fwait
dec
imul
in
cmpsb
pusha
pusha
cltd
in
enter
orb
sarb
imul
and
sbb
adc
fdivs
mov
cmpsl
push
or
sub
ja
emms
int
mov
daa
and
sub
pop
and
subb
in
popf
ds
insl
xlat
push
xchg
adc
jo
ret
sub
xchg
or
mov
pop
fiaddl
and
pop
testl
jg
and
icebp
jb
out
add
sarl
out
in
pop
inc
pop
adc
xchg
xchg
and
add
pop
jl
mov
push
mov
ret
int
mov
jno
outsl
sbb
mov
add
sbb
dec
xor
test
pop
shrl
scas
jb
mov
push
loop
insb
and
pop
into
xchg
jno
movsb
mov
leave
mov
jnp
cli
or
cmc
xlat
test
je
and
mov
mov
jle
cwtl
inc
rclb
sbb
cltd
mov
push
jb
and
hlt
sbb
hlt
aad
xor
sti
push
inc
iret
loope
adc
out
outsl
mov
and
rclb
test
aam
inc
ret
push
mov
add
je
add
push
xor
jg
sbb
sub
jnp
out
sbb
push
xchg
in
push
or
movb
mov
push
nop
mov
jns
or
sbb
xchg
mov
mov
mov
ficomps
lea
lock
ret
mov
jbe
adc
aaa
add
or
jnp
andl
sahf
xor
ljmp
loopne
lret
fwait
in
outsl
call
aaa
cmp
mov
fdivs
rol
push
lea
or
mov
out
sub
mov
mov
jb
loop
or
clc
mov
adc
dec
scas
jb
iret
shll
shlb
and
lret
push
pushf
sub
loop
xor
sbb
into
jnp
xor
ss
xchg
incb
or
mov
or
fisubl
mov
pop
push
and
ds
inc
cmp
jmp
sub
cwtl
cmp
jnp
in
call
add
mov
sub
call
cli
lahf
aad
adc
dec
testl
mov
mov
xchg
cwtl
scas
lret
cmpl
xor
xchg
jo
ljmp
das
xor
push
mov
aad
sbb
test
pop
xor
and
call
nop
stc
xor
frstor
scas
jg
sub
in
cmp
out
ja
cltd
mov
and
test
ljmp
ret
mov
addr16
xor
cmp
push
jge
gs
cld
int
mov
mov
mov
je
jne
fneni(8087
jecxz
std
or
pushf
push
mov
imul
lds
xchg
push
ffree
and
rcr
lret
sub
negl
jbe
adc
mov
jge
mov
cmpsb
jno
std
mov
cs
pop
jb
in
mov
out
and
fwait
std
pop
fisubrl
jecxz
xchg
shll
leave
sub
dec
les
out
adc
lret
fsubr
cmpsb
and
lea
mov
rol
into
pop
dec
push
in
outsl
popl
mov
ljmp
or
ss
jne
push
incb
lock
std
jns
faddl
aaa
dec
dec
loope
adc
sub
fldenv
push
daa
imul
push
lahf
cmp
push
adc
imul
daa
fidivl
cmp
les
jae
pop
js
pop
gs
push
movb
inc
out
daa
imull
data16
sub
ret
lock
inc
push
mov
shrb
adc
insl
out
aam
and
push
mov
push
adc
lret
dec
mov
jge
push
adc
xchg
jnp
es
jle
cmp
sbb
fildll
test
inc
pop
jae
ret
fwait
shll
inc
stos
push
xchg
cwtl
out
mov
cmp
into
mov
xchg
hlt
hlt
and
push
mov
inc
lods
mov
cli
inc
pop
mov
and
jp
fisttpll
and
data16
into
or
addr16
cmp
add
or
xchg
mulb
pop
pop
shll
insb
mov
sbb
ret
add
and
push
iret
ds
scas
mov
mov
mov
mov
cmpsb
dec
add
push
mov
scas
into
add
mov
xchg
test
aaa
sahf
add
pop
cmp
and
scas
lahf
and
into
int3
arpl
adc
and
push
jmp
mov
cmpsb
xchg
loope
sub
cmp
ds
sbb
adc
mov
in
jmp
mov
push
andl
in
mov
testb
sti
xchg
dec
loope
push
adc
out
sub
fs
pop
pusha
add
aam
jp
sbb
pusha
scas
fistl
or
add
inc
test
sub
fsubrs
shl
stos
loope
loope
rolb
insl
jnp
scas
in
sbb
mov
push
jmp
in
out
pop
xchg
aaa
pop
sub
ror
jecxz
push
and
mov
shl
fcom
in
aaa
js
and
icebp
jg
fmul
ret
cltd
mov
jge
pop
ss
mov
xor
ljmp
out
sti
das
inc
jne
cmpsl
shl
ficoml
int
mov
or
dec
pop
daa
pop
cltd
adc
xlat
mov
inc
add
nop
in
mov
pop
jo
xchg
mov
cmp
and
adc
mov
lock
inc
and
aad
mov
ss
daa
in
add
jne
scas
test
mov
popa
sbbl
mov
add
and
lret
lea
lret
rol
mov
mov
jmp
mov
cld
xor
fistps
fsubs
pop
and
push
divb
adc
jg
aas
inc
inc
std
pop
xchg
mov
mov
jle
or
nop
std
test
call
es
xlat
and
out
adc
mov
loopne
cmp
cs
mov
ljmp
and
sub
push
inc
aaa
ds
add
aaa
xchg
in
cltd
sti
dec
pop
stos
push
fcmovbe
mov
xor
cmpsl
movsb
shrb
pop
and
jbe
mov
dec
or
leave
xchg
ja
mov
and
test
xchg
push
in
sbb
adc
das
push
stos
cmp
insl
adc
xor
out
dec
test
bound
push
pop
lret
add
arpl
push
sub
rclb
add
lcall
inc
fs
cld
lahf
cmp
loop
mov
xchg
cmpsb
test
outsb
or
lahf
jnp
sbb
xorb
rclb
mov
push
jne
std
dec
push
mov
xchg
in
sub
lea
fcmovnb
dec
xor
cmc
imul
inc
mov
jmp
mov
push
clc
mov
sub
lcall
pushf
into
mov
out
add
sbb
insl
add
pop
jns
xchg
cmp
movsl
pop
sub
fstps
xchg
es
adc
mov
pushf
sbb
sub
out
cmp
pusha
xor
add
dec
sbb
add
mov
call
out
and
pop
insb
test
movsb
test
inc
mov
and
inc
dec
adc
push
sti
rol
lock
jno
xchg
ror
jns
mov
mov
loope
mov
jge
lock
adc
dec
shrl
and
sub
das
and
rcrb
jbe
adc
push
xor
jmp
out
jle
dec
push
test
xchg
jl
loope
daa
jnp
add
pop
test
insl
movsl
inc
jnp
mov
push
cmpsl
jmp
xchg
cmp
in
test
ss
shrl
int3
sub
fsts
aad
mov
jae
push
sbb
in
cli
into
xchg
sub
xor
ljmp
rorb
fcmovu
add
pop
mov
popa
xor
outsb
mov
push
lods
popa
or
xlat
jge
xchg
icebp
sbb
cltd
push
xor
ffree
aas
sti
cld
addr16
icebp
test
repz
lcall
ret
inc
test
xchg
push
cmp
lea
scas
push
and
wrmsr
int
adc
stos
inc
lods
xor
test
sub
mov
dec
inc
test
aas
shrl
jae
lret
xor
popf
imul
push
add
insb
mov
fldenv
movsb
test
mov
loop
movaps
rolb
cmp
int3
mov
ret
mov
push
push
pop
sub
jmp
fcoml
push
pop
add
jno
outsb
inc
xor
dec
js
add
xchg
jg
jg
test
cli
inc
adc
mov
ds
scas
adc
push
push
out
jg
mov
lret
or
jp
lea
or
xchg
pop
jge
push
mov
arpl
dec
dec
roll
or
pop
shlb
dec
and
push
not
mov
and
mov
int3
add
insl
fwait
loop
sahf
stos
loope
cmp
push
inc
ret
scas
aas
mov
js
imul
in
psubusw
int3
xor
cld
mov
push
ds
mov
call
sub
sahf
dec
jmp
xchg
mov
std
out
mov
adcl
int3
pop
or
mov
pop
imul
int
or
dec
sbb
xor
je
xor
cmp
jns
mov
and
push
jge
lret
xchg
push
push
mov
mov
adc
pop
cli
notl
push
pusha
jnp
jae
dec
cmp
jbe
negb
dec
mov
inc
jp
jmp
pop
mov
daa
push
inc
scas
push
aam
iret
loop
pushf
lcall
out
lods
cmp
jp
push
data16
fwait
aam
xchg
jne
push
leave
lahf
test
mov
aas
jg
adc
sub
push
loope
nop
pop
push
cmp
inc
pop
jmp
mov
arpl
pop
mov
jp
mov
mov
inc
pusha
aam
ret
std
lds
sbb
sub
fsubrs
lcall
sbb
andl
xor
or
pop
jmp
sub
jle
xchg
jns
aad
sub
sbb
iret
xchg
movb
pop
scas
jp
pop
notb
fistps
mov
adc
add
inc
jl
fcompl
stc
adc
mov
sub
push
popa
pop
aam
lea
jno
inc
push
cmp
sbb
inc
xor
dec
mov
or
jle
push
outsb
push
jmp
add
mov
jne
out
or
shl
xchg
push
lds
push
movsb
scas
loope
insb
adc
inc
xchg
les
push
mov
cmp
test
je
mov
push
cmp
adc
mov
stos
pop
mov
movsb
fsubrl
pmaxub
jo
test
sahf
lahf
xchg
cld
sbb
cld
ret
or
popa
sub
pop
arpl
addr16
loop
sub
add
push
out
cmc
xchg
sbb
je
mov
stc
dec
dec
mov
clts
push
scas
push
adc
jnp
and
std
imul
sub
lods
inc
pusha
daa
dec
lods
nop
or
pop
fwait
inc
sarl
dec
mov
inc
jo
stos
into
jo
stos
es
push
jae
dec
push
cmp
xor
add
mov
sbb
and
js
in
loopne
insl
imulb
dec
push
gs
inc
inc
mov
pop
lods
sbb
int
cmp
out
jns
shll
or
in
or
cld
adc
out
jg
inc
xchg
push
pop
mov
sbb
add
pop
fwait
je
xchg
adc
imul
fcomps
cli
lcall
cmp
mov
jmp
scas
xor
arpl
inc
rcl
int
add
mov
adc
test
mov
fwait
xchg
negb
ret
outsb
stc
pop
dec
call
mov
mov
sub
jmp
and
dec
push
and
ss
fnsave
in
loop
or
insl
dec
test
mov
mov
inc
push
pop
cmp
imul
int3
xchg
inc
inc
test
inc
pusha
pop
cwtl
push
das
jl
enter
wrmsr
enter
sub
xchg
lods
nop
dec
mov
ret
pushf
jmp
decb
fwait
mov
rclb
or
into
ret
fwait
aas
xchg
xor
add
int3
mov
mov
cltd
cmp
insb
and
mov
and
stos
pop
cmc
mov
test
cli
dec
inc
pop
bnd
movsl
push
push
xchg
add
mov
inc
mov
leave
in
xor
adc
sbb
adcb
jle
fisttpll
std
adc
pop
add
mov
fnstenv
xchg
mov
mov
xchg
cltd
cmp
jle
stos
enter
movsb
hlt
fisttps
xor
int3
inc
xchg
notrack
hlt
mov
adc
pop
add
xchg
in
inc
leave
outsb
ljmp
jge
sub
fwait
xchg
cmp
adc
jp
and
xchg
call
xchg
mov
sbb
or
or
sub
pop
sbb
das
push
in
dec
rcr
pop
mov
dec
cmpsb
inc
mov
aaa
xchg
lock
movsl
mov
cltd
cld
andl
add
rclb
dec
das
mov
stc
cmp
pop
push
cmp
inc
int
mov
jle
arpl
push
aad
pop
adc
test
bound
iret
in
pop
adc
or
movsl
out
cmpl
imul
mov
jge
sbb
out
lcall
push
icebp
mov
cmp
dec
mov
sbb
div
xchg
pop
fsubrl
jecxz
dec
fwait
cs
mov
push
adc
pop
add
cmp
or
cmp
xor
ss
xor
adc
add
scas
and
sbb
mov
movsb
imul
popa
push
aas
inc
daa
or
jmp
mov
rorb
inc
pop
test
pop
sarl
push
add
cmc
jge
sarl
ljmp
sub
mov
xor
mov
or
testb
into
icebp
jmp
dec
fdivrp
leave
imul
test
xor
mov
add
and
insb
dec
jo
adc
into
aad
lock
jecxz
aaa
popf
mov
sbb
fiaddl
adc
adc
fnstcw
and
pop
ret
cmpb
cld
inc
xor
mov
pop
or
lret
clc
lret
and
jne
sarl
iret
or
add
sbb
cmp
in
pop
sbb
loopne
push
sahf
xor
xor
lret
fsubl
test
rcrl
enter
jbe
shll
test
sub
fsubr
jge
mov
std
sub
lds
aam
jg
sbb
stos
ret
ret
and
xchg
dec
movsb
shlb
mov
out
xor
cmp
xchg
jne
inc
cmp
cmp
jl
rol
data16
add
jno
mov
mov
push
or
fidivrl
sbb
or
cmpsl
cmpsl
cmp
enter
fistps
dec
lea
pop
test
sar
fadd
dec
mov
jl
mov
fmull
aas
xchg
xchg
adc
sarb
jle
xor
lcall
inc
lret
fs
sbb
inc
xchg
jmp
sbb
or
cmp
fisttpl
sarb
shll
sbb
cmpsb
mov
outsb
scas
movsl
movsb
outsl
nop
cmpsb
mov
inc
pop
addl
mov
xor
insb
call
addb
xchg
stos
test
sbb
fistl
das
add
mov
mov
ss
pushf
shll
enter
lds
cmc
ljmp
shll
jmp
pop
shrl
push
lods
es
dec
lds
cli
inc
sbb
push
and
mov
pop
insl
push
test
fs
xor
lret
mov
fdivp
fnstcw
push
data16
push
nop
fadd
mov
repnz
jmp
ds
pop
cltd
aaa
sahf
inc
enter
in
test
xchg
mov
js
dec
inc
jmp
mov
inc
mov
std
dec
cs
adc
lahf
movsb
dec
lcall
mov
outsl
mov
shrl
sarb
mov
add
sub
pop
and
loop
and
mov
test
mov
cmp
add
outsl
xchg
pop
sub
leave
jb
lret
cmp
jo
add
inc
mov
outsl
data16
decb
mov
jl
xchg
and
inc
fsubrs
repnz
es
xor
sti
pop
dec
inc
addr16
orl
daa
pushf
test
xchg
mov
repnz
and
fxtract
push
imulb
stos
add
mov
dec
xor
jmp
nop
cmp
test
pushf
dec
inc
adc
data16
inc
push
ret
roll
out
pushf
inc
jbe
rorl
dec
aad
sbb
loope
outsb
arpl
sbb
inc
mov
js
mov
jb
inc
push
pushf
sahf
xchg
inc
stos
rolb
bound
push
push
mov
jae
shlb
cmpsb
adc
jge
push
dec
sbb
rorb
aaa
ficompl
add
and
out
mov
test
movsl
or
cmp
mov
push
negl
xchg
or
call
pop
push
jbe
pop
data16
or
in
sub
mov
fisubrl
dec
cli
or
std
pop
inc
dec
mov
mov
fldt
sbb
mov
pusha
scas
xchg
clc
stos
paddsw
inc
out
dec
mov
in
xor
xchg
mov
ja
loope
cmp
adc
push
leave
lcall
cmp
jo
sub
adc
xor
inc
add
imul
movb
jnp
dec
outsb
cwtl
jecxz
xlat
lds
cli
daa
enter
sti
lret
daa
mov
inc
aad
scas
jbe
inc
in
aam
ret
lods
cmp
jle
cwtl
icebp
int
mov
scas
pop
and
and
sti
pop
xlat
pop
les
ret
push
push
sbb
xchg
push
mov
std
fsubl
inc
cmpsl
adc
sti
xchg
xchg
pop
mov
aad
int
push
es
jne
mov
and
enter
pop
ljmp
sbb
outsl
dec
mov
pop
repz
inc
xchg
and
lds
add
ret
mov
stos
jb
xor
clc
cs
xor
movsl
outsl
or
or
scas
fldl
insb
push
xor
sbb
sub
lock
mov
xor
sbb
lcall
or
lret
xchg
push
sbb
and
jae
xor
cwtl
cmpsl
js
bound
jle
test
push
fsubr
ljmp
mov
rolb
test
sub
fwait
inc
jnp
bound
cmc
cmp
faddp
insb
mov
jmp
aam
scas
hlt
outsl
testl
jge
fists
out
and
sahf
fadds
cmc
sarl
inc
push
mov
inc
push
testw
mov
mov
cmp
daa
arpl
jb
mov
jg
xchg
push
imul
jle
lds
xor
cmp
mov
jmp
hlt
shlb
dec
idivb
pop
adc
mov
xor
mov
lcall
cltd
adc
inc
lds
iret
ds
jg
sbbl
mov
add
popa
sbb
cmp
mov
push
test
scas
imul
sub
dec
ror
jmp
xorb
pop
das
clc
sbb
leave
and
dec
in
push
jmp
xchg
dec
cltd
aam
outsb
cld
jecxz
jp
rcr
ret
mov
inc
ja
shll
push
or
lahf
adc
add
add
pop
pop
pcmpeqw
in
arpl
or
and
mov
pop
mov
and
notl
in
scas
jo
add
fldcw
pop
ds
lcall
pop
push
aam
jmp
sub
repz
popf
outsl
imul
dec
or
add
pop
leave
ret
dec
movsb
or
sub
pop
pop
xchg
mov
push
std
stc
push
sub
sti
inc
cld
out
inc
clc
rorb
xor
int3
or
dec
or
adc
out
mov
stc
scas
std
add
pop
fdivrs
lods
andb
frstpm(287
push
sbb
xor
sbb
mov
pop
and
mov
test
fdivp
add
xor
push
pop
out
lock
dec
aaa
aam
aaa
add
cmp
jle
dec
mov
sbb
xchg
dec
pusha
pop
scas
imull
push
cmp
cmp
jmp
sbb
rcll
sti
mov
lock
cmpsb
repz
xor
dec
jne
lods
je
daa
insl
std
pop
data16
mov
mov
xchg
push
daa
movsb
repnz
mov
cmp
xor
push
push
lods
orl
ljmp
aam
jmp
in
pop
cmp
or
push
xchg
jnp
daa
pusha
sti
xchg
xchg
and
iret
test
nop
add
popf
clc
adc
mov
mov
inc
mov
bound
xor
xchg
loop
xchg
test
mov
inc
mov
pop
vmwrite
inc
loopne
or
aam
xchg
or
add
add
rorb
pop
incl
sti
int3
enter
das
aad
dec
xlat
repz
xchg
dec
dec
cmp
xor
mov
xlat
xchg
in
imul
add
nop
xlat
aas
gs
sub
push
sub
or
push
pop
add
sarl
jns
sbb
insb
push
clc
mov
cmp
mov
lahf
aad
or
popa
bound
call
jmp
mov
mov
insb
sti
stos
lahf
cltd
cld
outsl
cmc
movsl
fidivrl
mov
sarb
lcall
mov
sar
std
hlt
dec
lcall
pop
mov
pop
mov
adc
mov
cli
or
pop
mov
in
or
out
or
in
and
subb
mov
incl
shlb
push
xchg
sbb
adc
clc
fwait
mov
mov
pushf
sbb
add
dec
dec
or
cld
pop
pop
movsl
aaa
sahf
and
ja
sub
ja
scas
and
push
in
jl
push
fs
ja
sbb
xor
cmp
and
push
ret
mov
push
mov
mov
scas
push
add
jle
and
xor
lds
fsubs
adc
mov
xchg
pusha
inc
adc
xchg
gs
aad
mov
test
pop
shll
dec
pop
flds
jbe
sarl
xlat
cmp
mov
iret
mov
inc
sub
test
dec
and
or
sub
in
cmp
out
lods
ret
ret
loop
xor
add
push
xor
jg
jg
xchg
or
jp
leave
cmp
adc
add
mov
dec
sbb
fucomp
inc
fisubl
mov
in
les
pop
and
fdiv
xchg
pop
mov
sahf
add
enter
sahf
push
filds
cmp
cmp
popa
bound
jl
mov
mov
adc
shl
fiaddl
push
dec
lock
les
arpl
xchg
rol
rcrl
lcall
xor
aam
int
es
fiaddl
push
push
xchg
out
adc
out
shrl
cmp
jb
unpcklps
fidivl
popl
adc
mov
jnp
adc
test
inc
xchg
sub
cmp
cmc
fcoms
lods
fimull
dec
lods
sub
iret
out
pop
cmp
jmp
in
idivl
fwait
mov
lcall
rcl
pushf
pop
cmpsb
jnp
mov
sti
test
mov
out
mov
jbe
sbb
push
inc
jl
xor
aad
lea
adc
or
dec
jae
iret
sbb
push
pop
movsb
pop
imul
pop
push
mov
jge
rorb
jb
push
mov
xchg
repz
cmp
push
xor
leave
push
xchg
icebp
fld
div
inc
arpl
ret
imul
mov
clc
aam
mov
outsb
lea
and
cmpsl
in
fiadds
cmp
icebp
cmp
cmc
mov
icebp
fsubrs
shlb
lods
xor
push
inc
cmp
mov
ss
mov
popl
and
push
push
fildll
sti
xlat
xchg
mov
fcoms
pop
pop
shll
bound
xor
adc
mov
movsb
aad
jecxz
mov
push
mov
test
jbe
inc
dec
cwtl
in
push
out
push
dec
cs
cmp
in
inc
mov
out
mov
sub
jg
xor
fwait
mov
inc
add
fsubl
daa
adc
loopne
mov
adc
sbb
test
push
jo
push
and
dec
imul
push
jle
inc
jmp
enter
cmpsb
push
push
lods
xchg
daa
dec
daa
test
rolb
incl
push
fcomps
mov
xor
sbb
fcmovb
data16
pusha
movsb
leave
sbb
repnz
mov
pop
or
jle
mov
sbb
push
in
jmp
sub
lret
stc
iret
ss
add
pop
repnz
dec
dec
xchg
sub
cld
sub
sbb
ljmp
pop
jo
cmp
jbe
pop
loopne
dec
push
inc
push
fistl
cmp
jbe
sub
sarl
xorl
jle
stos
cli
jbe
pusha
cld
jne
push
xchg
add
daa
inc
inc
sbb
xor
out
sbb
imul
xorl
cmp
adc
cmp
or
pop
vpsubq
in
mov
sub
lahf
fsubl
pop
xchg
jle
dec
mov
das
or
xor
pushf
mov
mov
mov
or
cmp
jb
mov
mov
js
fisubrl
mov
movsb
pop
lret
inc
push
jmp
jle
jno
dec
repnz
jbe
add
imul
repz
inc
cltd
pop
out
jp
shll
xchg
xchg
and
fsubl
and
call
adc
push
shll
jle
andb
dec
pop
pushl
das
pop
mov
mov
cmp
insb
popf
into
mov
fidivl
repz
and
xchg
cmc
and
pop
adc
adc
or
mov
xor
sub
rcll
pushf
bound
clc
pop
adc
lcall
fldenv
inc
mov
pop
insb
or
inc
push
push
mov
mov
mov
mov
adc
xor
jae
lret
push
inc
push
jb
lds
sub
in
and
aam
cmp
push
in
push
decl
out
sub
dec
int3
ljmp
jne
pushw
stos
clc
sub
inc
mov
cli
dec
mov
mov
fs
mov
nop
mov
pop
mov
xchg
push
jnp
add
push
testl
cltd
call
stos
cmp
jmp
push
xchg
fdivs
shrl
sub
lock
mov
lock
mov
sbb
jge
mov
out
insl
cmp
les
orl
data16
pop
in
pop
pop
leave
push
popf
push
in
push
iret
loop
jmp
push
dec
sub
rcrb
add
not
push
bnd
addr16
push
fbld
sbb
in
cmp
outsl
inc
negb
pop
int3
lcall
inc
insl
pop
push
jl
fcomps
jmp
mov
xchg
lahf
daa
addr16
mov
out
or
lea
pop
push
mov
vpshlb
nop
clc
xchg
cmp
ret
fisttpl
test
pop
adc
das
push
cmp
ret
xor
jb
scas
push
repnz
dec
adc
jecxz
or
mov
ret
in
cmp
in
xchg
adc
push
xchg
mov
mov
pop
hlt
clc
xor
ret
lcall
pop
mov
xchg
xchg
je
fnstenv
out
sbb
dec
xor
cmp
inc
sub
or
and
lock
shrb
addr16
and
dec
mov
stos
pop
sub
xchg
aad
xor
iret
xorl
jp
push
cmp
lret
sbb
sbb
mov
es
pop
test
aaa
pop
jb
lds
sub
or
pop
inc
mov
jne
lock
rcrl
dec
xor
push
inc
pop
adc
gs
in
jae
jbe
ja
outsb
pop
dec
into
in
lea
inc
sahf
push
mov
dec
test
jns
mov
loopne
sti
sbb
adcb
pushf
sti
test
scas
mov
out
fnsave
mov
fisttpll
js
or
je
mov
xor
push
data16
call
imul
std
jns
mov
lods
jnp
fpatan
push
fistpll
into
pop
xchg
mov
int
xchg
leave
flds
jl
mov
ficoml
insl
lods
sub
xor
xorb
loop
hlt
inc
pop
shrw
orb
mov
xor
sub
mov
clc
lcall
in
mov
and
ret
mov
jp
xor
ret
push
das
ljmp
sbb
push
in
imul
repz
and
pop
inc
popf
pop
cwtl
lahf
mov
in
inc
and
push
sbb
cld
jno
lock
or
jb
inc
sub
call
mov
push
pop
shll
aam
add
adc
loop
mov
lods
loop
fbstp
or
pop
push
rcl
cs
or
mov
in
in
mov
push
or
pop
xlat
aas
int
mov
mov
push
xchg
shl
lea
movsl
or
add
in
test
imull
js
xor
mov
push
push
jne
rcrl
xor
inc
arpl
fisttpl
lahf
addr16
pop
movsb
mov
enter
es
or
mov
lea
mov
enter
sbb
mov
fmulp
sub
pop
leave
and
jle
or
shll
dec
bound
and
insl
shll
mov
xor
iret
inc
outsl
fistpll
mov
adc
cmp
fidivrs
push
and
mov
push
lods
xlat
lods
mov
xchg
mov
or
lret
sbb
fadds
lahf
repz
imulb
lods
aam
les
stos
pop
and
inc
lret
les
adc
jle
lret
xor
mov
sbb
jmp
out
push
mov
fcmovb
dec
ret
mov
pop
out
cmp
sub
push
test
repnz
int
daa
add
adc
mov
iret
adc
adc
dec
sbbl
pop
jge
pop
jb
or
and
inc
int3
xor
pop
push
cltd
hlt
cmpsl
mov
mov
popf
mov
loope
shr
xor
inc
cs
cmp
fsubp
scas
in
inc
pop
divl
mov
cmp
sbb
test
loop
xchg
je
and
dec
inc
pop
xchg
push
cmpsl
pushf
adc
push
scas
pop
test
cmp
hlt
repz
roll
clc
out
push
bsr
ret
jno
jbe
dec
dec
loope
or
rcl
int
xchg
mov
fsts
lret
scas
lcall
mov
dec
jle
aas
mov
stc
lret
fmull
mov
mov
cmp
mov
dec
dec
jmp
xor
std
loopne
xor
fwait
clc
fcom
test
jp
pop
cli
push
aad
push
fwait
stc
pop
mov
cltd
lods
pop
xor
mov
or
subb
into
adcl
mov
pop
mov
pop
sbb
xor
imul
xchg
out
xchg
mov
lods
inc
pop
jbe
out
cwtl
mov
stc
cmp
pop
pop
pop
test
jge
sbb
xorl
pop
cmpsb
mov
dec
lods
jle
xor
sub
cwtl
adc
loop
sbb
js
shlb
sahf
sbb
leave
ljmp
cltd
push
mull
cwtl
xor
arpl
jge
mov
inc
and
add
xor
ficomps
xchg
mov
and
sub
xchg
mov
pop
xor
inc
dec
cmc
hlt
push
push
cmpsl
cli
icebp
dec
fnsave
inc
dec
push
setae
adc
scas
jns
loop
xchg
jno
push
mov
fdiv
int3
call
pop
xor
or
jp
jbe
stc
lret
out
shll
mov
int3
mov
mov
add
mov
cmpsl
ja,pt
sti
and
pop
sub
cmp
xchg
incb
lcall
mov
cmp
adc
repnz
in
cmp
sub
loope
sub
setp
repz
push
pusha
push
xchg
and
sbb
jo
jno
jl
pop
inc
add
fisubrl
and
sbb
fidivl
cltd
ja
pop
xchg
iret
pop
xor
out
cli
add
jae
test
inc
outsb
mov
pop
cmp
mov
sbb
mov
out
js
sub
mov
in
jno
repz
shrl
mov
inc
mov
imulb
dec
lret
cmp
xor
mov
mov
sbbb
inc
mov
mov
jo
cmp
inc
mov
fs
int3
push
xchg
pop
subb
dec
xchg
test
rorl
aas
pop
cmpsl
xchg
in
mov
arpl
cmp
scas
mov
das
scas
mov
enter
mov
inc
lahf
jmp
shll
lods
jl
lcall
btr
fcomp
xor
lds
lret
cmp
dec
sahf
and
stos
loop
pop
push
xchg
add
cmp
bound
inc
bound
and
sub
lock
pushf
imul
lret
lea
or
mov
daa
int3
mov
pop
cmpsb
inc
sub
sbbl
ljmp
js
aad
ljmp
cmpsl
jg
fidivrl
jmp
ret
hlt
imul
xchg
repnz
mov
mov
inc
std
xlat
jmp
outsb
cwtl
xadd
mov
lret
js
sbb
outsl
orb
inc
ds
clc
push
stos
jecxz
jnp
addb
xchg
mov
out
call
add
cmpsl
push
call
inc
xchg
jmp
push
mov
dec
aaa
fucomi
hlt
fisubrs
dec
repnz
mov
cwtl
xchg
inc
int3
shl
adc
in
or
mov
pushf
push
cwtl
push
aaa
push
addr16
gs
and
imul
shlb
xchg
mov
dec
sub
sub
pop
pop
xor
insl
dec
insl
pop
movsl
in
push
aaa
xchg
push
jecxz
add
mov
add
sbb
cmp
pusha
leave
adc
cli
neg
sbb
add
out
sbb
xchg
ret
lea
jo
mov
pusha
lock
pop
jnp
lea
jne
add
repnz
icebp
stos
out
mov
popa
or
add
shr
stos
outsb
sub
mov
xchg
clc
pop
cmp
or
add
push
and
lock
mov
push
inc
mov
xchg
and
movsb
push
je
ret
dec
mov
sub
aaa
stc
aad
imul
mov
sub
enter
add
add
scas
push
dec
and
push
popf
cmp
sbbl
pop
out
les
fmull
ficomps
xchg
adc
inc
add
popf
and
dec
outsl
mov
xor
lcall
scas
loopne
mov
std
xchg
shlb
mov
mov
dec
mov
push
xor
adc
push
dec
pop
sti
add
outsb
sbbl
mov
adc
sub
xchg
stc
ljmp
fldcw
adc
movsb
xorl
sbb
ja
outsb
mov
mov
les
jl
loope
sbb
add
or
or
mov
and
dec
pop
cmp
ljmp
dec
ret
add
leave
adc
shll
mov
decl
mov
iret
mov
xchg
cmc
jbe
rorl
sub
jle
push
xor
cld
add
sahf
les
push
and
ret
inc
bound
pop
popf
into
imul
xchg
sub
or
jp
xchg
pop
xchg
stos
in
pop
sbb
mov
cmp
jno
in
mov
stos
and
xchg
dec
mov
cmc
in
shrb
ds
lcall
cs
pop
and
out
sub
adc
pop
enter
cmp
pusha
test
pop
mov
mov
pushf
xor
int3
lret
scas
dec
mov
clc
sbb
mov
pusha
sahf
leave
pop
fwait
cmp
dec
push
sub
mov
outsl
or
pop
lret
iret
pop
lods
ljmp
fstpl
cli
stos
hlt
into
xchg
ja
pop
push
data16
push
push
ds
mov
idivl
and
aaa
xchg
push
rclb
movsl
shl
jne
add
iret
mov
cli
mov
dec
lods
jle
jge
insl
imul
pop
dec
push
pop
call
push
fsts
scas
loope
jecxz
and
sbb
dec
fcmovu
push
sbbl
shll
lcall
ljmp
xchg
mov
inc
imul
dec
arpl
rolb
loop
pop
dec
in
and
push
mov
test
jb
or
sub
xchg
mov
jo
or
das
lret
adc
sbbb
jo
in
mov
fildll
pop
js
sub
dec
jbe
loopne
pop
or
sbb
jo
inc
dec
adc
mov
scas
dec
cmpsb
popf
in
dec
adc
mov
sub
mov
fidivs
pop
or
stos
mov
pusha
in
insl
out
add
inc
mov
push
xor
cmp
insl
xchg
push
sahf
and
lcall
cmc
and
xchg
mov
or
inc
repnz
outsl
xchg
add
push
add
dec
aas
lahf
add
repz
xchg
and
cmp
cmp
movsb
pushf
pushf
imul
jae
add
mov
jmp
mov
jp
and
rorl
test
dec
dec
cmp
outsl
jae
loop
dec
test
push
push
and
icebp
out
gs
push
pop
xchg
mov
out
das
gs
xchg
mov
mov
xor
push
lret
cli
mov
or
jne
lahf
inc
cmpsl
xlat
sub
cmp
xchg
jmp
outsl
mov
ja
int3
or
les
or
hlt
mov
jmp
sahf
nop
in
inc
sbb
lods
inc
fdivs
sahf
dec
push
dec
push
dec
cmp
jle
dec
aam
jne
jg
xchg
repnz
lods
push
hlt
jb
test
out
or
and
sub
bound
mov
or
xchg
sbb
jne
lods
add
or
xchg
mov
cmp
ds
popf
jb
push
ja
xlat
outsb
lods
xchg
in
dec
inc
and
test
jb
sub
sarb
lcall
in
lahf
push
adc
fists
mov
or
push
mov
sbb
sub
pop
mov
clc
call
adc
mov
stos
and
mov
in
dec
xchg
aaa
add
cld
mov
adcl
mov
or
adc
clc
or
mov
fistps
mov
inc
test
inc
inc
je
add
mov
sarb
pop
decb
cmp
rorb
rclb
aaa
pop
dec
scas
jle
mul
pop
cmp
jne
pop
repz
fld
bound
dec
fdiv
cmp
jns
pushl
nop
aaa
mov
pop
cmp
mov
popa
sbb
inc
add
inc
adc
dec
dec
cwtl
divb
loope
ds
inc
xor
jecxz
notl
sub
ja
std
jo
mov
lret
sbbb
dec
xor
gs
push
je
jmp
es
mov
ja
jp
out
jmp
sqrtps
mov
pusha
mov
test
add
sub
push
jnp
ss
jg
sbb
iret
push
ficoml
adc
aam
stos
test
push
das
mov
adcb
adc
aaa
fildl
and
jbe
cmc
push
jne
mov
push
or
pusha
out
cmove
das
lret
sbb
outsl
stos
das
xchg
xchg
repnz
sub
cs
or
or
dec
xor
dec
das
sbb
push
rolb
inc
adc
mov
pop
fildll
cmpsb
and
sarl
lods
pop
hlt
add
mov
dec
fs
test
in
xor
sub
inc
repnz
dec
cmp
push
dec
xchg
fistpll
ds
clc
loop
pop
out
pop
pusha
pop
lods
daa
fwait
and
pop
xchg
imul
sarb
mov
or
xchg
mov
pop
lea
dec
xor
xor
mov
inc
das
pop
and
xor
in
aad
cs
jle
mov
dec
mov
test
rcrl
sub
dec
adc
cld
arpl
add
int3
xchg
enter
hlt
adc
push
mov
pushf
push
sub
mov
test
push
mov
push
and
mov
repz
pop
ja
mov
add
mov
push
pop
xor
and
xlat
pop
pop
push
or
xlat
add
in
pop
insb
cltd
mov
push
aas
sub
sbb
sbb
xor
jg
mov
and
add
add
pop
adc
sbb
mov
dec
mov
mov
rcl
cs
addl
daa
jns
orl
mov
inc
in
xor
jp
mov
jg
xchg
arpl
sbb
int3
sub
cmp
fcmovbe
test
insl
sti
das
mov
xchg
ljmp
int
push
push
or
das
jbe
jecxz
xor
jecxz
mov
xorb
mov
xchg
inc
add
and
lods
mov
jp
adc
fsubs
cmp
jne
xchg
into
add
inc
adc
jp
inc
bound
or
mov
sti
mov
stos
adc
js
lods
inc
cltd
sbb
mov
inc
or
iret
leave
test
hlt
mov
mov
add
ficoml
imul
mov
cmpsl
adc
and
pop
inc
leave
sub
xor
cmp
mov
addr16
or
hlt
nop
sbb
hlt
fdivs
sarl
into
cmp
pminsw
mov
iret
lods
add
sbb
ja
into
in
arpl
or
in
mov
mov
jns
push
mov
pop
mov
js
mov
sub
imul
dec
xchg
test
je
jb
outsb
mov
xchg
jne
adc
adc
loop
ja
mov
pushf
mov
fisttpl
shrb
mov
es
inc
pop
shrb
jo
xchg
mov
mov
lods
pusha
test
shr
arpl
mov
push
cltd
cmp
dec
or
mov
push
sub
inc
ret
cmpl
mov
dec
xchg
sub
xor
pop
notl
adc
adc
ror
out
add
jmp
fidivrs
comiss
mov
xor
or
mov
popa
sub
ss
pop
or
das
bound
repnz
repz
inc
and
cmc
add
rcrb
jl
jbe
xchg
clc
lods
xor
jne
imul
or
push
pop
into
arpl
iret
and
outsb
ret
mov
movb
jmp
push
mov
sbb
jne
clc
data16
ljmp
stos
iret
int
xchg
jle
ret
push
fstp
lods
and
adc
jl
jns
mov
inc
add
aam
push
lret
jo
xlat
add
popa
in
insb
int
and
mov
jg
loopne
jle
lods
jb
and
inc
outsl
pop
xchg
rcl
clc
push
cltd
jp
ss
int
es
in
and
aaa
nop
xchg
cmp
aad
inc
sbb
scas
mov
enter
repnz
out
in
je
enter
mov
mov
cmp
loop
cld
test
xor
outsw
mov
mov
frstor
sub
cld
mov
roll
shl
mov
nop
pop
mov
lock
mov
adc
cltd
mov
in
jbe
mov
in
mov
popf
cmp
hlt
cmp
adc
mov
shll
lcall
push
push
stos
out
xor
ficoms
inc
ror
insb
jmp
lods
push
scas
adc
sub
and
jns
rcrl
cmp
fistpll
lods
mov
int
jp
nop
push
loop
xor
into
fists
into
fldenv
imul
add
jge
lock
push
mov
je
pop
dec
sbb
and
cmp
ljmp
popf
jns
cmp
cmpsb
mov
mov
ja
out
cli
enter
and
jo
lea
test
sbb
dec
rorl
inc
fsts
or
add
stc
xor
sub
shll
and
jge
mov
addr16
test
mov
or
repz
xchg
xchg
sub
lcall
add
jno
popw
daa
mov
cmp
cmp
repz
test
lds
repz
lea
ss
mov
xor
outsb
fidivrs
inc
jbe
test
sbb
or
fucompp
adc
xor
and
cli
adc
add
outsl
fwait
sub
inc
mov
fsts
inc
outsl
xlat
inc
and
stc
lahf
sar
mov
mov
inc
loop
das
test
leave
pusha
sub
icebp
sbb
lock
fisubrl
mov
mov
mov
andl
jmp
adc
loopne
or
and
lcall
sub
pop
dec
lret
rol
mov
mov
shll
inc
stos
mov
jnp
jmp
pop
leave
nop
add
lahf
inc
lock
cmp
xor
mov
test
repz
or
rcrl
sbb
lds
cmp
fsts
xchg
bound
lahf
sub
inc
out
cmp
and
xor
ret
popf
cwtl
and
in
sbb
mov
notb
mov
iret
jno
daa
fidivrs
repnz
ss
orb
sub
ljmp
or
cmp
mov
xchg
jno
sbb
push
add
test
lods
pushf
adc
push
popa
hlt
dec
jge
or
sub
add
mov
push
test
daa
sbb
mov
mov
inc
divb
ss
xor
mov
xchg
rcl
and
insl
jnp
jle
fistps
cmpsl
xorl
imul
add
idiv
xor
jnp
push
ficoml
ja
jmp
fisttps
pop
mov
cs
jbe
push
aam
xchg
pop
aam
nop
mov
test
or
push
xor
xor
inc
add
int3
inc
in
fcomps
scas
enter
cmpb
pop
mov
push
imul
cmp
cmp
adc
push
movsl
mov
cmp
pop
cli
shr
xchg
stc
shll
mov
test
or
mov
mov
ja
arpl
xor
adc
movsb
movsl
mov
push
fbld
pop
and
inc
lahf
sub
xor
adc
inc
roll
test
adc
clc
pop
adc
pusha
mov
ja
outsl
aam
scas
aaa
mov
popf
dec
mov
cmpsl
dec
jmp
movsb
sbb
mov
pop
dec
mov
repz
mov
xor
jnp
mov
sub
orb
out
fcompp
test
fs
aas
cli
sub
ror
and
xor
into
xor
add
jmp
outsl
xchg
insb
and
into
or
testl
mov
jne
jbe
sbb
adc
sarl
fxch
in
arpl
roll
std
nop
into
and
adc
xor
cmpsb
dec
das
aas
pushf
xor
inc
push
ljmp
or
fnstenv
add
sbb
add
sbb
cmpsb
dec
xor
inc
sub
cwtl
inc
sub
hlt
imul
icebp
and
fldt
std
and
pusha
pushf
jb
fcmovnu
mov
repnz
dec
adc
xchg
movsl
mov
aas
nop
add
insb
adc
mov
aad
pusha
pop
xchg
aam
xor
int3
lds
dec
lods
in
insl
sti
sbb
cmp
or
push
sarl
negb
aam
dec
adc
js
test
scas
inc
je
cmp
sar
fwait
dec
mov
dec
movsb
adc
pop
mov
push
mov
lea
pushf
sub
negb
into
pop
xchg
inc
dec
scas
or
out
lea
cmp
lret
nop
ret
dec
ljmp
scas
or
pusha
and
push
jle
push
cmp
bound
movsl
jmp
sbb
rol
repnz
pop
xchg
into
xlat
xchg
xchg
xchg
jle
push
hlt
fildl
fdiv
loop
les
mov
cmp
or
mov
push
ret
fists
mov
fnstenv
or
ja
fsubrs
inc
mov
mov
rol
and
popf
fistpl
lds
cwtl
jg
ljmp
pop
movsb
pop
xor
jb
fucom
pop
dec
dec
lret
insl
mov
inc
and
fimull
add
push
cmpsl
icebp
jb
out
mov
daa
ds
in
push
xchg
ja
sub
popa
into
jne
dec
decl
out
movsb
mov
mov
hlt
pop
jae
je
push
cmpb
adc
lock
cmp
pand
xchg
std
sbbl
subps
cmp
pop
inc
in
mov
xor
mov
jle
or
jecxz
or
adc
sub
xor
lods
negb
mov
mov
leave
ja
mov
cmc
adc
inc
cltd
sub
ds
add
xor
mov
push
sbb
push
mov
mov
pusha
and
cmpl
daa
lds
mov
notb
cmp
xchg
push
insb
mov
cmpl
or
mov
pusha
mov
in
popa
or
sbb
fstps
jae
aad
xor
add
popa
fnsave
mov
shlb
inc
pop
mov
std
cmpsb
leave
push
out
arpl
lods
ja
push
cltd
xchg
cmp
mov
and
les
ljmp
inc
and
dec
cmp
ljmp
movsb
sbb
xchg
push
xchg
ljmp
add
pop
or
std
cmp
in
and
inc
sub
add
into
cmpsb
push
sub
and
and
stos
clc
iret
jno
push
aam
popa
sbb
dec
nop
scas
cwtl
mov
push
int
cmp
inc
fcoml
popf
dec
arpl
inc
jge
cmp
push
add
aad
inc
jp
inc
sub
cmp
xchg
pop
push
dec
mov
mov
loopne
out
outsb
into
sub
jae
jo
push
setbe
lods
out
jnp
xor
icebp
fistpl
daa
xor
data16
fsts
xor
aas
push
mov
outsb
cmp
aaa
movsl
clc
sub
xchg
movl
mov
or
sub
cmpsb
mov
mov
pop
mov
sti
sub
mov
js
out
or
ret
xchg
in
repz
imulb
or
mov
push
in
xchg
int
fiadds
mov
xor
cld
adcl
mov
cmpsb
sbb
dec
xchg
and
scas
cmp
popa
adc
xchg
jae
and
sub
stos
lret
mov
jge
jae
cli
loope
sub
lcall
shr
repz
ret
les
adcl
pop
mov
mov
add
push
inc
out
in
cmpsb
lea
xor
push
sbb
sub
sbb
jbe
cmpsb
lret
pop
lds
loopne
rcll
shll
pushf
das
cmpsb
adc
xor
sbb
das
js
scas
fcmovb
cmp
rcrb
sub
push
mov
dec
mov
fidivl
inc
stos
inc
add
and
loop
sti
pop
pop
outsb
push
xchg
movsb
mov
and
int3
and
adc
cld
fbstp
aad
hlt
push
xchg
jmp
fsubrs
mov
in
cmc
sub
gs
push
scas
mov
jecxz
in
jg
sti
and
push
test
jecxz
jns
loope
xchg
loopne
das
lods
xchg
ljmp
int3
cmpsl
xor
aam
sub
jmp
daa
or
stc
lret
jl
gs
push
xor
xchg
jno
lods
data16
mov
jge
iret
and
and
into
dec
xchg
or
fiadds
xchg
sub
test
dec
jne
outsl
mov
ja
roll
xor
loop
cmpsb
mov
sub
and
adc
inc
cs
mov
negb
pop
cmp
push
inc
sub
lock
dec
dec
stos
rcrl
lcall
int3
cld
sub
adcl
dec
or
les
fs
shll
mov
xchg
fsts
rorl
mov
rdpmc
testl
pusha
jne
jecxz
mov
fcmovnbe
sbb
loopne
fdiv
jl
mov
dec
jge
lret
sti
test
pushf
addr16
mov
cmp
gs
jns
adc
loope,pn
addr16
les
into
shrl
stos
dec
arpl
and
movzbl
xor
cmpsb
cmpsl
mov
in
or
or
mov
dec
out
popl
int3
pushf
lds
or
jae
cs
ret
out
dec
enter
pop
imul
call
mov
mov
flds
icebp
xor
les
push
fnstsw
ror
mov
jb
lea
clc
stos
pop
pop
mov
pushf
add
fwait
pop
cld
inc
pop
test
and
xchg
dec
stos
add
cmp
inc
mov
dec
scas
mov
stc
jge
cmp
jl
repnz
mov
xchg
cld
outsb
gs
nop
jecxz
lock
lock
push
sub
cs
mov
sar
adc
xor
cmpsl
stos
les
out
dec
sbb
dec
lcall
jl
sub
int3
xor
jp
or
cmp
enter
inc
mov
fs
sbb
fisttpll
dec
push
xchg
idivb
mov
fadds
lret
sbb
enter
jo
pop
xchg
adcl
or
xor
roll
arpl
jo
mov
aad
sarl
mov
lds
mov
into
and
pop
popa
inc
pop
cwtl
stos
adcl
add
int
out
js
inc
sub
jae
mov
or
sub
xchg
xchg
inc
aam
stos
fnstenv
je
sahf
testb
movsl
nop
mov
pusha
xchg
mov
push
xor
lcall
add
dec
xchg
ret
aam
out
in
ficomps
pop
pop
frstor
sbb
femms
orl
push
loope
mov
ret
fdivrl
int3
mov
xchg
sub
push
cli
adc
jns
xor
sahf
rcl
lret
and
shlb
inc
mov
inc
pop
push
push
or
mov
pop
mov
sub
and
jno
test
notl
les
xchg
inc
add
sbb
ja
gs
mov
clc
mov
mov
jmp
insb
jo
fsubs
sub
push
in
sar
popf
aam
mov
xchg
mov
jmp
cmpsl
pop
inc
add
popf
int3
incl
adc
pop
lds
outsl
xchg
lock
cmp
imul
xorb
mov
mov
inc
mov
pop
adc
jmp
pop
fsubrs
lock
or
rclb
inc
cwtl
and
lret
popf
sub
inc
or
aaa
enter
inc
push
adcb
xor
lods
lcall
fldt
or
out
push
ss
or
pop
pop
repnz
sete
std
not
hlt
or
xchg
sub
inc
dec
daa
sbb
insl
jge
inc
xor
loop
test
int3
mov
out
jns,pn
out
shll
jno
arpl
push
add
or
imul
and
inc
jno
in
mov
jb
or
mov
pop
and
cmp
dec
push
icebp
inc
fisubrl
and
jo
xor
pop
mov
daa
jne
jns
sahf
rcrb
sub
pop
mov
pop
stc
daa
iret
clc
dec
or
push
das
push
or
imul
push
xor
sub
out
mov
lock
push
mov
cli
dec
in
movsl
sbb
enter
mov
fs
rcrl
repz
or
mov
fimuls
sarb
mov
hlt
lea
loopne
add
mov
sahf
add
arpl
push
dec
xchg
lds
push
and
jns
xlat
inc
rclb
mov
inc
cmpl
xor
dec
aas
decl
clc
test
out
jle
lods
jmp
mov
in
mov
mov
lock
fisttpll
cli
addr16
sub
cmpsb
pop
sub
out
cmp
andl
testl
mov
sar
int3
push
aam
daa
insb
xchg
mov
fisubs
adc
or
inc
fisubrs
jne
jge
mov
ret
scas
out
pop
test
xchg
stos
clc
jl
cmp
mov
sub
dec
aad
gs
idivl
jns
stos
mov
adc
mov
js
addr16
inc
push
shll
push
dec
add
sbb
push
inc
enter
lfs
dec
aam
push
xor
jg
inc
mov
scas
popf
jnp
cli
and
xlat
fs
xor
decb
jge
sti
mov
cmp
inc
bound
movsl
insl
nop
loope
fmull
insb
clc
adc
orb
mov
insl
pop
jl
adc
test
rcrl
out
jb
pushf
mov
inc
xchg
cltd
pushl
insl
sbb
jp
inc
outsb
mov
je
or
scas
add
fcoml
fdivrs
or
mov
pop
jle
fmul
call
fsubp
and
mov
enter
pop
add
push
out
mov
push
cwtl
mov
enter
insb
icebp
outsl
movsl
pop
add
push
gs
push
mov
sub
lcall
inc
lret
dec
pop
fwait
cmpb
lock
inc
scas
imul
push
mov
loopne
lods
pop
lret
xchg
sub
xchg
fimuls
mov
sub
mov
sub
sub
lods
add
pop
adc
xor
cwtl
mov
fnstsw
jl
inc
int
xor
cwtl
lods
adc
pop
jns
imul
fiadds
je
jno
xlat
mov
xor
sbb
repz
fwait
mov
pop
lods
lret
xchg
add
push
jb
mov
xchg
pop
mov
dec
inc
mov
outsl
fbld
mull
add
int3
cld
mov
xchg
dec
lahf
popf
mov
mov
sub
icebp
or
imul
push
ficoml
mov
or
inc
and
sub
adc
pop
xchg
pop
movsl
xor
mov
mov
jnp
push
dec
mov
data16
xor
aaa
out
sub
rcrb
in
popa
cltd
movsb
or
ficoml
and
test
roll
and
call
dec
xlat
xlat
xor
xchg
cmpsl
jle
mov
xchg
aaa
mov
jo
sbb
loop
cmp
pop
push
mov
cmpsb
and
inc
int
daa
stc
and
cwtl
cmp
pop
fcompl
jae
std
out
adc
mov
mov
jp
sti
add
repz
aas
mov
cltd
arpl
inc
lahf
or
mov
sub
aad
sbb
jecxz
flds
fwait
or
adc
mov
jg
jge
rol
inc
cmp
sbb
movsl
inc
bound
mov
sbb
cli
shrb
dec
inc
add
xlat
sbb
jae
cld
sbb
pop
pop
subb
insb
dec
inc
mov
outsb
add
movsb
and
push
xchg
lods
nop
cld
lods
mov
je
xchg
jmp
dec
sarb
dec
cltd
xchg
repnz
dec
jl
stc
mov
sti
xor
test
leave
imul
ret
icebp
push
ficomps
add
mov
pop
xlat
push
popa
out
pop
inc
mov
leave
ja
mov
je
and
test
pop
pop
imulb
sbb
jne
sbb
adc
dec
or
cli
pop
outsb
outsb
jmp
inc
pop
mov
inc
add
xor
push
dec
mov
mov
xchg
pop
mov
inc
lcall
call
mov
fdivs
mov
rolb
je
xor
cmpsl
in
aam
filds
dec
rcrl
dec
dec
scas
in
adc
adc
pop
test
adc
push
or
inc
es
xchg
mov
lahf
call
xor
inc
inc
enter
pop
mov
dec
or
ret
call
add
pop
xchg
and
gs
filds
jo
rcr
add
popa
adc
mulb
and
xlat
out
push
iret
inc
rorb
sbb
adc
sbb
cmpsb
repz
dec
push
movsb
imul
sbb
mov
cltd
sbb
sub
push
add
mov
mov
bound
iret
mov
lcall
icebp
lds
cmpsl
mov
inc
lock
jp
and
idiv
or
sbb
pop
lahf
ja
push
jge
cmp
sbb
jo
aam
push
jno
xchg
out
mov
cld
fwait
jno
pushf
lods
jo
neg
cltd
xchg
lret
cmp
push
jmp
dec
jle
loope
and
pop
or
inc
aad
or
xchg
mov
xor
sti
push
mov
in
mov
scas
outsb
pop
addl
jge
inc
clc
outsl
or
sahf
or
jl
inc
or
out
into
fadds
pop
mov
mov
fstl
sahf
lods
adc
les
movsl
out
loop
dec
les
xor
jns
fwait
jns
inc
pushf
add
addl
enter
inc
scas
clc
adc
into
icebp
or
pop
push
sub
les
lret
pop
int3
xchg
cmp
xchg
mov
and
loop
adc
outsb
loop
sub
jno
sub
test
ja
and
jl
inc
daa
cmp
out
mov
lods
rclb
mov
lock
add
outsb
mov
std
jmp
xor
sbb
hlt
ljmp
ds
divl
das
popf
jo
pop
jno,pn
dec
repz
movsl
shlb
mov
add
cmpl
daa
fcoms
jge
or
hlt
fnstcw
mov
mov
pushf
stos
mov
hlt
in
add
test
dec
sahf
arpl
pop
pop
cld
mov
test
in
xor
xchg
sahf
xor
call
sub
scas
jg
or
dec
adc
inc
pop
mov
pop
xor
pop
inc
or
orl
cmp
sahf
mov
inc
push
stos
cmpsl
js
fucom
in
xchg
js
cli
xchg
cli
iret
jo
mov
pop
mov
clc
or
mov
shrl
ret
add
and
test
jbe
imul
fwait
inc
jae
mov
test
adc
inc
xchg
dec
addr16
hlt
ret
fcoms
test
scas
push
pop
jmp
stos
inc
xchg
jmp
insl
lock
imul
lret
lods
cli
das
add
in
pop
dec
adc
mov
sbb
push
or
jnp
inc
cltd
inc
sti
shrl
clc
adc
mov
sbb
stos
xchg
and
out
xor
in
repz
sbb
jnp
push
bnd
ljmp
mov
inc
sbb
mov
movsb
lds
cltd
jno
inc
rorb
int3
pop
cltd
cs
jmp
mov
or
cld
push
pcmpgtd
mov
adc
jecxz
adcl
xchg
xchg
inc
xor
lea
nop
lcall
push
scas
ret
jnp
repnz
and
enter
dec
mov
mov
data16
insb
fwait
loopne
clc
pushf
and
les
vmovdqu
jmp
xlat
dec
or
imul
push
cli
ljmp
or
lods
jnp
popa
push
push
push
popf
aas
pop
inc
sar
cld
test
pop
adc
xchg
adc
push
inc
dec
dec
rorl
into
int3
and
inc
jb
arpl
jl
testl
dec
add
fnstsw
mov
push
das
push
sar
and
test
pop
mov
push
xchg
aas
notl
adc
imul
push
stc
idivl
nop
mov
mov
mov
ljmp
sub
dec
mov
inc
in
ljmp
jae
scas
inc
stos
inc
test
cltd
mov
dec
sub
fsub
sbb
mov
mov
je
mov
mov
fcompp
outsb
mov
in
movsl
or
addr16
decl
push
std
std
push
ds
add
lcall
sbb
loopne
mov
out
and
mov
movsl
out
sbb
jne
lret
nop
mov
mov
popa
test
pop
mov
test
and
fmuls
pop
push
fsts
in
and
push
jl
mov
push
adc
fwait
push
sbb
xor
adc
jnp
rcll
mov
clc
test
or
inc
jmp
sbb
mov
push
lahf
push
cmp
fists
lods
test
repz
cli
movl
sar
push
mov
mov
add
adc
into
bound
pop
es
insb
clc
arpl
sub
pop
sti
mov
shll
add
jno
mov
int
arpl
rorb
cmc
jg
in
push
sar
fstpl
stos
lea
mov
push
adc
loop
mov
or
mov
enter
jae
jge
div
cmpsb
push
stos
inc
sbb
dec
scas
lods
into
pop
mov
push
arpl
icebp
sbb
roll
or
mov
cmp
push
push
push
scas
mov
pop
call
mov
mov
sahf
sub
xchg
xchg
je
jbe
lret
fcmovnu
test
scas
loopne
pushf
push
sbb
jge
mov
jmp
adc
mov
and
jne
aaa
aas
pop
jb
mov
adc
shll
jns
push
jo
dec
jae
dec
out
xchg
push
les
sub
roll
inc
dec
in
push
mov
int
jo
ret
push
ja
sub
xchg
dec
cmpsl
call
cmp
cwtl
xor
outsl
lods
dec
sub
mov
shlb
sub
scas
or
js
push
cli
xchg
movsl
test
sahf
jge
mov
divl
jmp
iret
and
pop
lds
sub
iret
sub
xor
mov
jecxz
out
scas
ret
adc
push
mov
iret
lcall
pop
andb
or
inc
sti
sgdtl
stc
pop
test
push
dec
insl
xchg
aaa
inc
xor
xor
adc
add
pop
mov
dec
mov
push
into
xor
jg
je
test
daa
mov
cli
shlb
and
imul
je
jnp
mov
add
dec
int3
push
mov
xor
popl
lahf
dec
data16
js
andb
out
pop
push
in
sub
in
aaa
cld
jmp
out
pop
test
inc
mov
jae
daa
xlat
jae
test
scas
addr16
popa
or
push
mov
jl
fnstcw
mov
gs
xchg
inc
inc
stc
daa
jno
fimull
sbb
leave
cmp
lret
iret
ss
mov
decb
addr16
cli
cmp
mov
xor
jl
xor
inc
push
rep
popf
in
in
cwtl
sbb
cmpsb
popf
inc
push
pop
push
mov
sub
adc
xchg
xchg
mov
out
cmp
ja
or
clc
mov
push
push
outsl
xchg
or
cld
mov
jge
out
sub
jecxz
mov
cmp
fisttpl
push
push
sbb
sub
xchg
sbb
sahf
xchg
nop
lret
subl
ds
das
in
mov
dec
int3
fdivp
cmc
xchg
add
xchg
int3
ds
dec
xor
in
inc
loop
outsb
iret
adcl
pop
sub
jge
lds
arpl
cld
sbb
cmpsl
xchg
int
inc
dec
es
nop
jmp
sbb
sub
adc
mov
repz
cmpsb
cmp
stc
stos
mull
push
es
lods
fnsave
adc
aaa
xchg
push
sbb
pop
mul
push
jl
orb
imul
push
and
xchg
mov
mov
out
inc
xor
mov
sub
push
mov
mov
add
lret
or
lret
divl
add
ljmp
jbe
inc
sbb
dec
mov
repnz
push
cmpb
movsb
leave
adc
sub
mov
orb
dec
and
xor
fs
shrb
inc
ja
add
jbe
pop
sar
and
push
pop
repnz
dec
test
mov
jg
jecxz
outsb
sub
xchg
jle
push
test
sahf
fsubrl
push
mov
inc
pop
xchg
add
sbb
int3
fldt
filds
repz
jae
inc
insl
popf
adc
fidivrs
dec
inc
imul
and
add
rcrl
xchg
pop
fs
push
gs
int
inc
and
adc
mov
shll
xchg
xchg
or
pop
xchg
push
dec
loopne
jl
add
out
in
pop
lea
in
lahf
mov
sub
mov
adc
test
sbbb
jge
mov
pop
mov
add
dec
in
imul
dec
jl
lods
repnz
mov
orl
pusha
sbbl
push
xchg
lds
lea
jns
push
incl
pop
js
ret
dec
cld
mov
les
jae
negl
pop
mov
mov
test
sbb
sarb
in
fnsave
sbb
movb
imul
mov
mov
cmc
dec
xchg
mov
cld
repz
push
imul
data16
dec
jno
adc
ja
pop
cmp
push
sub
push
testl
data16
scas
pop
mov
pop
lcall
xor
popf
push
jmp
sub
outsl
ja
dec
inc
adcb
ret
negl
mov
xchg
push
fs
jp
cltd
lea
das
inc
push
test
lods
lds
clc
jmp
pusha
dec
adc
sar
fisttpl
int
sub
insb
enter
mov
and
test
jmp
bound
sub
loopne
mov
int3
xorb
push
jb
push
aas
inc
in
shr
mov
ljmp
mov
in
xor
mov
int3
lds
cmpsb
add
push
push
mov
xchg
jle
into
xor
jmp
lret
xchg
test
dec
mov
mov
aam
cmp
aam
notb
and
inc
fildl
mov
and
pop
or
ficompl
es
jle
sub
mov
mov
jle
mov
xor
fs
mov
stc
sbb
jb
stc
push
mov
mov
mov
adc
inc
dec
xor
mov
mov
or
sub
stos
jle
pop
mov
cli
dec
test
push
daa
dec
pop
xchg
or
jmp
add
int3
fidivrl
dec
and
add
sbb
sarb
lds
adc
stc
scas
add
shll
jae
in
test
xor
lret
shlb
dec
push
aaa
insb
scas
int
jg
pop
inc
fs
and
add
testl
sub
or
cmp
mov
push
xor
mov
test
inc
push
xor
sub
mov
mov
inc
add
in
add
mov
ret
nop
push
out
add
out
xor
ljmp
inc
dec
inc
in
lods
outsl
adc
dec
clc
mov
ret
mov
cltd
ljmp
or
push
push
xlat
int
test
dec
pop
pop
pop
je
nop
xchg
pushf
push
add
ja
shlb
cmpsb
popf
push
ljmp
leave
aad
adc
hlt
fldt
loop
das
insl
js
movsb
repz
mov
cmp
movsl
jecxz
cltd
mov
add
mov
or
and
lahf
inc
adc
adc
stc
test
sbb
je
shrl
arpl
insb
add
out
ror
or
sti
mov
fsubrs
xchg
and
xchg
fs
jbe
loope
mov
daa
add
dec
scas
ret
fstl
mov
push
aam
add
and
adc
adcb
test
rolb
daa
pop
mov
xchg
jb
push
xlat
mov
or
inc
adc
cmp
cmc
ret
mov
adc
rolb
cltd
fbld
xor
xor
mov
clc
sbb
subl
adc
cmp
push
lcall
es
ljmp
popf
aad
fsts
pop
sbb
push
add
jle
xchg
test
shrl
and
dec
pop
xlat
push
mov
pop
cmpsb
cwtl
stos
pushf
xor
mov
inc
test
push
iret
pop
testb
cld
popa
adc
or
ud0
rclb
mov
jae
mov
mov
or
lcall
push
mov
lret
lods
pop
out
imul
xor
lods
clc
out
stos
rorl
aam
fstl
mov
in
clc
inc
popa
dec
loop
ss
or
pusha
and
shlb
imull
dec
ret
dec
push
daa
pusha
lea
xacquire
or
gs
jmp
into
rclb
fs
mul
mov
mov
scas
cmp
cmp
dec
cltd
or
add
or
das
fmul
inc
inc
sub
cmp
mov
push
divb
stos
les
cmp
loopne
jno
and
leave
xor
dec
jns
xchg
adc
mov
xor
xchg
decl
cmc
push
push
scas
scas
fwait
inc
shlb
pop
jns
pop
lahf
loop
jecxz
mov
mov
cltd
insb
addb
insl
rolb
insl
cwtl
inc
imul
shlb
jge
dec
inc
insb
hlt
jns
sub
and
insb
and
popa
xchg
add
inc
add
dec
hlt
push
xor
pop
xchg
adc
push
pop
inc
and
movsl
jge
mov
xchg
lahf
and
pop
pop
mov
and
cmp
jecxz
fwait
pop
out
into
scas
mov
fimuls
pop
xor
and
add
andb
dec
cmpsl
cltd
pop
cmp
stc
jb
loop,pn
movsl
movsl
repz
add
mov
mov
sub
xchg
cmp
or
inc
cmpb
popa
hlt
in
int
pop
loopne
mov
out
je
call
push
scas
mov
mov
xchg
leave
loopne
call
adc
stc
jb
pop
ret
repz
mov
add
jnp
sbb
movsb
ret
movl
daa
fildll
lahf
mov
nop
mov
push
xchg
pop
cmp
lea
mov
test
mov
addb
add
or
jmp
mov
xchg
mov
jp
xor
popf
xchg
inc
adc
pop
sbb
and
arpl
sub
aaa
jmp
into
pop
dec
push
mov
and
icebp
rcl
shll
push
repnz
nop
hlt
xor
inc
inc
jno
out
fwait
aas
sub
sbb
idiv
aaa
xchg
inc
inc
addr16
gs
nop
test
xor
mov
mov
lods
mov
sub
test
js
aaa
aas
aas
mov
pusha
iret
push
lods
push
out
xor
cwtl
pop
mov
fcoms
push
mov
mov
jns
cmp
mov
mov
sbb
mov
ss
sub
or
jnp
cmp
fidivs
xchg
xchg
push
jnp
enter
pop
in
mov
scas
mov
jg
cmp
add
divb
pop
pusha
xchg
cmp
mov
scas
push
push
cmp
iret
call
mov
inc
pop
xchg
cli
je
out
sbb
icebp
and
inc
sahf
ljmp
add
dec
in
adc
add
inc
mov
dec
stos
push
pop
outsb
jb
fildll
pop
incl
outsb
in
ja
mov
add
inc
test
nop
icebp
int
inc
imul
push
insb
cld
mov
and
jb
in
inc
add
xchg
je
mov
cs
cmp
or
mov
fnstsw
fs
neg
add
mov
repnz
pop
shlb
fistl
or
adcb
add
cmp
gs
dec
js
shlb
inc
pop
mov
push
gs
iret
aad
leave
js
jecxz
jnp
pop
fsub
mov
or
rcrl
jmp
and
leave
xchg
mov
test
sub
testb
pop
mov
adc
rcr
repz
cli
fs
jl
jo
push
pushl
sub
or
jo
mov
dec
nop
xchg
jg
mov
push
push
insl
xor
stos
add
neg
xchg
fimull
mov
cmpsl
lds
push
adc
popf
mov
push
push
dec
loopne
pushf
inc
dec
out
scas
cli
out
jl
xchg
adc
xor
xor
lret
mov
xchg
jb
addl
out
andb
sbb
add
test
xchg
xchg
fimuls
fdivrp
lods
push
fwait
test
addr16
dec
mov
and
mov
jg
pop
js
imul
or
dec
test
add
pop
in
das
test
cmp
into
test
push
inc
repnz
dec
out
stos
xchg
mov
loope
mov
notb
jb
pop
shl
mov
inc
cmp
xlat
fdiv
fwait
pop
xchg
jne
shlb
lds
test
ss
fwait
mov
sbb
inc
mov
sbb
das
lods
sbb
fldenv
in
or
popa
adc
inc
loope
mov
popa
sub
into
xor
mov
enter
add
outsl
inc
scas
push
clc
shl
in
lahf
fldl
push
jl
ret
push
mov
jg
xor
and
adc
add
xor
xor
aam
ja
les
xchg
push
jae
inc
bound
xchg
stos
add
pusha
sub
call
sbb
int3
jge
aas
sbb
in
repnz
inc
es
mov
sub
add
push
repnz
pop
jmp
iret
cmpb
and
sub
mov
pusha
or
adc
sub
or
jne
testb
mov
shll
js
lds
gs
enter
adc
in
hlt
stc
mov
ficoml
movsb
movsl
xchg
lods
xchg
sub
es
jb
xchg
ljmp
cmc
pushf
mov
dec
repz
ljmp
test
push
lret
sbb
push
lock
and
int3
xorb
std
scas
lock
out
aad
test
or
out
int3
cmp
aam
sub
dec
dec
mov
mov
and
in
js
fsubs
jae
movsl
pop
dec
cmp
or
ret
mov
xchg
dec
ljmp
xchg
jmp
xlat
or
stos
jl
sub
out
loopne
sbb
pop
add
mov
insl
inc
jl
rcrl
les
adc
int
jle
ss
scas
in
sbb
hlt
push
xlat
insl
sbb
cmp
sbb
inc
mov
and
mov
rcr
lods
adc
mov
or
mov
lods
test
mov
mov
out
xchg
pop
dec
dec
sub
jno
or
adc
xor
jl
inc
cli
or
mov
adc
test
fnstenv
sbb
xor
movsb
aad
mov
mov
mov
mov
mov
popf
pop
ljmp
sub
flds
ljmp
rorl
cmpb
push
negl
and
cltd
shll
jge
popf
sbb
fmul
and
pop
inc
std
int
mov
ret
jge
xchg
adc
push
sahf
push
repz
xor
mov
push
pop
jle
lcallw
dec
add
mov
cmp
push
mov
into
adc
sbb
xchg
cli
cmpsl
sub
inc
and
test
outsb
and
xor
or
xor
subb
in
lds
pop
test
hlt
cld
adc
and
dec
outsb
ret
add
mov
and
cmp
push
add
or
add
lcall
lods
adc
lret
stos
sahf
lahf
add
xor
xchg
imul
mov
pop
in
dec
int3
orb
and
jb
insb
bound
sahf
sbb
mov
call
scas
leave
lods
sub
jmp
movsb
movl
xchg
mov
xor
das
sbb
and
dec
mov
mov
mov
fiadds
gs
in
hlt
stc
adc
xchg
inc
jp
fwait
nop
in
push
test
inc
cwtl
fidivs
mov
dec
sbb
push
add
add
jno
sub
into
into
push
fsubrl
shl
subb
and
jbe
sbb
call
inc
in
and
push
mov
mov
aaa
fisttpll
mov
cmpsl
or
das
ret
insb
sub
adc
cmc
sbbb
movsb
lret
mov
andb
cwtl
fadds
lret
in
inc
outsl
inc
sbb
xchg
test
mov
hlt
add
sub
mov
adc
les
test
mov
and
xor
test
orb
push
out
inc
es
sub
sbb
nop
lds
int3
out
aad
jge
pop
mov
fwait
jo
mov
ja
out
scas
cmc
rorb
add
xchg
aad
mov
jo
movsl
je
dec
add
in
mov
insl
jl
mov
mov
add
or
cs
pop
data16
sahf
add
pop
mov
out
or
mov
inc
push
mov
push
into
aas
push
ret
mov
mov
dec
loop
jo
addb
xchg
dec
test
aam
push
cmp
or
mov
lods
fs
ljmp
das
mov
dec
adc
imul
adc
lahf
fimuls
mov
ret
xchg
popa
inc
repz
sub
loop
push
pop
sub
and
push
ret
mov
roll
sub
enter
repz
adc
xor
fnstsw
xor
out
fsubp
cwtl
and
pop
sti
xor
inc
stc
and
aam
jae
sub
scas
mov
fsub
push
aam
lret
fldt
mov
aas
mov
gs
jecxz
mov
scas
mov
hlt
in
xor
shrb
sub
loope
fwait
out
fmul
adc
and
jno
bound
mov
das
mov
jmp
mov
push
cmpsl
adc
push
mov
xchg
sub
cmp
push
dec
in
es
push
cs
arpl
adc
in
or
clc
mov
push
adc
repnz
jo
jecxz
sbb
jbe
ljmp
mov
pop
aad
and
rclb
xchg
adc
movsl
push
add
shl
inc
call
pop
mov
adc
dec
cli
mov
push
jns
add
jns
pop
push
fldcw
outsl
xorb
in
pop
mov
sub
dec
mov
dec
test
push
testl
push
in
fs
xor
lock
xor
xor
mov
popa
aam
xchg
mov
stos
xor
mov
xchg
into
enter
xor
scas
in
inc
imul
int
lea
push
add
clc
push
xor
out
arpl
js
mov
cmp
dec
loop
xchg
pop
fistpl
cmp
into
out
call
cli
out
jmp
int3
rcr
mov
dec
cmp
and
inc
bound
jge
xchg
test
push
dec
push
lret
mov
pop
xchg
les
mov
pop
outsb
movaps
pop
mov
jecxz
jo
movl
add
addr16
out
xor
imul
pop
xor
in
shll
aad
js
jp
xchg
jbe
xchg
fcmovb
adc
fs
repz
add
sub
mov
jmp
imul
mov
outsb
pop
les
push
xchg
rcrb
sub
push
cmp
fmulp
fcom
add
test
cmp
jge
clc
mov
cld
pusha
lods
sbb
dec
subb
cmp
cld
test
sub
xlat
push
mov
add
push
lahf
insl
sbb
xchg
fdivrs
fmuls
jp
repnz
xor
add
inc
cmpsb
xchg
xlat
aam
leave
mov
cld
or
lods
xor
outsb
iret
cmp
es
adc
dec
push
popf
arpl
add
loop
imul
aas
xchg
inc
cli
fwait
dec
xor
out
test
add
aas
aam
sbb
in
jnp
pop
int
inc
rolb
std
mov
push
popf
addl
or
imul
dec
jb
fcmovnbe
xchg
inc
fcomp
arpl
sbbb
in
scas
push
sub
xor
sbb
mov
xor
notl
addr16
nop
rcr
adc
jae
das
fbstp
into
es
pop
movsl
clc
daa
filds
popa
imul
cmp
jmp
int3
pop
ljmp
in
cmp
mov
cli
sub
fsubp
cmc
imul
cmp
sub
in
repnz
dec
push
jns
xorl
insb
int
lods
sbb
xor
fs
mov
pop
stos
fmull
fsubrl
cmp
jb
imul
out
out
jb
orb
push
xchg
cmp
fistpll
mov
out
sarb
and
roll
in
mov
push
fs
shr
lahf
js
sbb
ror
out
mov
pop
or
adc
dec
mov
fcmovnbe
fmulp
xchg
pop
or
cmp
mov
pop
mov
sbbb
int3
stos
loopne
adc
mov
inc
sub
dec
add
daa
insl
negb
sbb
js
dec
or
cwtl
cld
inc
lods
in
fwait
loope
push
push
xchg
ret
jo
cmp
orb
scas
sub
mov
pusha
sarb
xchg
pushf
fisubrl
dec
xchg
in
or
push
and
adc
imul
mov
div
ret
pop
mov
add
pop
scas
sub
add
rcl
inc
jl
xchg
nop
ja
push
mov
std
ret
mov
cmp
imul
fcomps
xor
sbb
js
testb
test
pop
inc
push
mov
sti
xorb
call
loop
inc
push
jne
es
movsl
cmp
loop
inc
adc
adc
pop
mov
fiadds
aaa
sub
lret
inc
mov
lods
xchg
add
sub
imul
pop
inc
mov
addr16
cli
xchg
xchg
xor
lock
data16
nop
jl
xor
mov
sbb
xor
push
dec
stos
out
adc
fstpl
cmp
dec
mov
testl
insb
dec
jecxz
lods
inc
xor
xchg
aaa
roll
lcall
ljmp
mov
lret
mov
insl
add
push
add
push
sbb
andb
cmp
sub
adc
dec
sub
insb
in
int
mov
add
add
shr
dec
add
add
add
add
js
add
add
add
shr
dec
add
add
add
pop
add
add
pusha
add
andb
add
add
add
add
add
add
subb
add
add
subb
add
add
subb
add
add
shr
dec
add
add
add
add
add
add
js
add
add
add
ljmp
shr
dec
add
add
add
add
add
add
mov
dec
add
cwtl
adc
add
add
add
add
add
shr
dec
add
add
add
add
add
add
enter
cwtl
pop
add
add
add
mov
add
shr
dec
add
add
add
add
add
add
lock
add
pusha
add
mov
add
shr
dec
add
add
add
add
add
add
sbb
add
cwtl
clc
add
enter
mov
add
shr
dec
add
add
add
add
add
add
inc
add
add
or
enter
mov
add
shr
dec
add
add
add
add
add
add
push
and
adc
add
mov
add
add
add
push
add
push
add
push
add
dec
add
add
xor
in
xor
add
or
adc
or
add
add
nop
xor
add
add
dec
xor
nop
xor
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
subb
jecxz
pop
loop
pop
cmpsl
fwait
push
test
lea
mov
xlat
and
pxor
add
loope
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
adc
sub
pop
xchg
rorl
adc
mov
mov
xor
pop
xor
or
push
popaw
inc
or
or
add
or
popf
pop
aaa
or
xchg
adc
add
clc
inc
std
sub
push
xor
add
push
push
push
push
call
in
pusha
dec
call
rorb
dec
add
jbe
fdivp
push
jle
add
add
lea
lods
stos
and
nop
cmpl
adc
pop
jae
test
jno
mov
cld
jnp
outsl
sbb
in
sbb
das
and
dec
push
ret
lcall
sbb
call
nop
add
mov
mov
inc
sbb
popa
aaa
and
push
call
and
pand
or
sti
xchg
nop
add
lcall
mov
mov
push
xor
jnp
adc
sbb
jne
inc
cmp
sbb
je
push
daa
and
lea
push
and
pop
orl
cmp
inc
mov
aas
shr
sub
or
stos
mov
mov
inc
or
aaa
ficoms
and
clc
dec
inc
cld
icebp
add
jmp
mov
ret
repnz
movsl
pop
push
sbb
sbb
and
mov
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
push
in
in
xor
xchg
mov
sbbl
push
loopne
push
add
test
mov
push
ret
rorl
push
dec
roll
push
push
sti
scas
aad
push
mov
xor
lahf
es
xor
leave
push
add
jp
hlt
push
ror
inc
shll
mov
and
pop
aas
add
pop
sub
hlt
cltd
enter
push
fs
push
ds
leave
xor
sub
or
inc
incb
xchg
orb
sub
test
mov
dec
test
mov
inc
pop
adc
add
jne
cmp
jge
jo
inc
mov
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
scas
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
notl
sub
std
push
test
push
mov
sbbl
add
jbe
add
xor
sbb
mov
dec
push
out
mov
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
pop
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
cmp
sbb
lret
pop
into
ss
cmp
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
nop
pusha
aam
mov
sub
push
dec
lahf
or
and
push
push
testb
in
add
inc
je
xchg
mov
out
adc
adc
lret
sbb
popa
jne
stc
jmp
inc
ficompl
add
adc
loopne
sub
test
pushf
pushf
fimull
mov
or
and
in
sbb
pop
fwait
mov
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
mov
xchg
pop
xchg
in
sbb
pop
mov
rclb
scas
or
jno
adc
addl
rol
cmp
pop
pop
test
push
xor
jmp
or
xchg
jmp
or
into
jge
andnps
int3
testb
mov
idivb
jg
test
and
jmp
mov
pop
inc
cmp
clc
cmp
lret
xor
es
push
dec
push
mov
enter
mov
xchg
test
push
outsl
mov
shrb
sub
insl
mov
call
cmp
andb
repz
cmpsb
imul
je
mov
mov
cmpb
add
daa
call
pusha
cmp
cltd
push
lea
insl
xor
sarl
push
add
add
call
sbb
movsl
and
test
or
enter
dec
and
scas
and
xor
in
add
sub
push
xor
pop
cmpsb
ficomps
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
daa
arpl
jae
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
dec
pushf
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
push
add
clc
or
add
xor
pushf
xor
add
inc
add
xor
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
jo
arpl
add
scas
adc
or
fwait
leave
.byte
