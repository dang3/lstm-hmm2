mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
add
sti
pop
add
push
add
das
imul
int
or
push
je
jl
int3
push
or
push
imul
stc
mov
pop
push
imul
dec
lret
adc
add
imul
aas
add
cmpb
push
nop
xchg
fcoms
push
pop
push
pusha
insl
cmp
dec
bound
arpl
sbb
xchg
mov
jns
adc
jo
dec
popa
cltd
int
jl
popaw
arpl
add
pop
inc
sti
mov
mov
imul
insb
sbb
sbb
pop
add
add
int3
addl
inc
mov
clc
jmp
adc
int3
int3
int
fidivs
loope
add
push
adc
dec
repz
mov
or
clc
adc
pop
adcb
pop
adc
push
cmp
jmp
daa
mov
lock
pop
call
xchg
xchg
xor
add
daa
daa
daa
mov
paddq
int3
enter
daa
sarb
mov
mov
sbb
adc
mov
xor
and
and
daa
daa
nop
mov
clc
lock
mov
add
rcr
decb
mov
and
mov
ss
pop
ret
test
leave
leave
in
jl
js
jo
ds
hlt
mov
cmp
jne
fxch
iret
out
inc
push
push
add
mov
cmpl
out
mov
mov
jmp
mov
mov
pop
mov
adc
rorb
roll
push
ljmp
or
and
fs
mov
pushf
rcrb
add
mov
mov
mov
and
add
push
push
sbb
mov
mov
out
fdivr
add
popa
incb
jmp
mov
push
jl
inc
add
adc
mov
cmp
cmpsl
adc
and
pop
jae
in
fcmovnbe
mov
pop
pop
pop
mov
mov
adc
jnp
inc
adc
jl
pusha
out
push
mov
add
call
outsl
fistpll
push
push
outsl
mov
mov
jbe
cmpb
imul
push
push
repz
mov
imul
lret
add
cmp
jne
xor
inc
divb
out
inc
or
or
pop
jmp
add
cmp
jne
cmp
das
inc
pop
cmp
jne
mov
mov
xor
roll
pop
push
insb
shlb
fxtract
or
ret
jecxz
aam
push
mov
ds
loopne
jbe
mov
add
stc
add
fbstp
push
and
in
decb
push
add
movhps
pop
push
cmpl
in
les
mov
push
add
dec
imul
aas
jmp
mov
add
pop
mov
jle
add
sub
mov
enter
lea
subl
pop
jmp
lret
and
cmpsb
rorb
inc
cmp
test
xor
addl
insb
adc
mov
mov
movb
pop
mov
push
paddb
and
push
push
push
sbb
daa
add
mov
mov
test
je
xor
in
imul
ret
loope
dec
orb
dec
arpl
int3
mov
pop
lods
sti
mov
dec
movsl
shrb
push
and
jne
icebp
add
pushf
push
or
daa
sbb
mov
sub
aas
call
inc
mov
mov
pop
nopl
jecxz
mov
dec
push
cs
in
sbbb
jb
mov
repnz
ja
and
jae
in
jnp
std
or
or
push
adc
or
std
jne
xor
movl
scas
push
jg
push
jne
push
pop
mov
adc
cmp
aam
inc
sub
inc
mov
lea
call
lock
cmp
ret
add
out
loope
lock
dec
mov
loop
popf
data16
push
mov
adc
daa
cmp
pop
jmp
or
movl
adc
or
shlb
jbe
ja
or
paddsb
sbb
push
es
aam
ja
cmp
out
setp
lock
jne
orl
sbb
lds
xchg
adc
add
jo
xchg
jns
aas
in
add
aaa
add
outsb
sbb
push
sahf
inc
add
add
lahf
div
lret
sar
cmp
mov
mov
adc
inc
cmp
jg
mov
out
or
mov
rorb
push
pop
mov
lret
xchg
pop
add
pand
mov
fucomp
ds
shrb
jne
repz
cmp
lea
and
pop
sti
loopne,pt
and
xchg
daa
push
add
sub
dec
cmp
sbb
mov
push
pop
add
add
mov
out
push
sbb
cmp
je
sarb
jne
or
or
mov
xor
push
out
or
or
or
rolb
cmp
adc
or
mov
sub
add
rorb
xor
stos
mov
add
inc
push
xchg
loopne
jg
jmp
stc
cmp
jne
pop
jg
inc
js
jae
jl
in
cmp
or
inc
lock
fcmovne
xor
pop
cmpsl
jl
sub
leave
lea
cli
mov
shlb
push
sub
rolb
repz
jmp
xchg
mov
je
mov
mov
xor
aam
adc
ja
or
lock
int
scas
push
mov
das
jp
in
push
dec
push
push
pushl
mov
push
data16
in
cmp
or
popa
xor
push
xchg
lea
or
pop
mov
in
adc
inc
cmp
data16
movl
mov
add
adc
mov
les
mov
pop
pop
fs
fisttps
std
test
cs
in
pop
pop
pop
cmp
pusha
scas
test
sub
in
push
out
call
sbb
push
mov
xchg
mov
lea
sub
lock
clc
jmp
or
in
pop
cmp
cmp
dec
mov
cld
mov
inc
in
je
add
loopne
inc
jne
repz
mov
arpl
pop
cld
fistpl
bound
add
adc
adc
cli
into
jg
adc
jecxz
fdivs
test
jns
ret
cli
add
ds
hlt
jmp
sub
sbb
mov
xchg
mov
adc
mov
sbb
cld
cmpsl
jecxz
mov
push
sub
adc
ret
sbb
push
or
sbb
inc
jns
inc
mov
adc
jnp
loopne
xchg
pop
pop
add
sub
lea
mov
or
mov
jl
movl
or
and
out
adc
pcmpeqd
add
xchg
ret
iret
lods
inc
or
add
xchg
ljmp
stos
fucomip
or
push
adc
je
jl
or
insb
call
sub
clc
fwait
or
ret
inc
push
push
push
subl
cmp
std
dec
jmp
leave
sub
ret
decl
lock
add
sub
jl
or
xor
jo
xchg
sbb
in
faddp
mov
out
fdivs
testb
and
fsubs
test
jne
sub
inc
les
ja
andl
mov
pop
cmpsl
hlt
push
arpl
jl
xor
das
push
js
inc
jmp
sahf
dec
in
js
mov
mov
cli
or
sub
xor
jbe
jg
lock
push
movl
cmpsb
ret
dec
mov
xchg
or
adc
loop
xchg
xor
cmp
xchg
cmp
jo
or
aad
mov
or
movl
lea
lds
mov
sbb
aam
pop
mov
dec
adc
ret
or
mov
fsub
mov
mov
add
or
cmp
cs
movsb
sti
jbe
test
jo
add
lret
mov
add
test
cmp
sub
pusha
dec
je
or
inc
adc
and
pop
mov
stos
lods
or
adc
out
movsb
or
cmp
or
cmp
cld
jo
mov
cmp
cltd
scas
in
add
shl
cmpl
in
mov
es
sub
or
and
mov
jns
sbb
adc
add
pop
sub
movsl
mov
dec
adc
loopne
mov
rcrl
jae
movsl
inc
sub
add
pop
ja
pop
add
repz
jae
xor
cmp
jne
addl
rcrw
fadds
xor
mov
nop
sbb
enter
inc
jo
lea
or
outsb
sub
mov
ret
add
push
inc
mov
lea
ret
pusha
or
xor
mov
or
cmp
sub
xor
jmp
sbb
mov
pop
inc
insb
shlb
int
mov
adc
push
popf
jle
pop
jb
and
and
push
mov
jg
fildl
bound
jbe
pop
je
insl
pop
pop
push
cwtl
jbe
push
xchg
call
rol
lods
hlt
pusha
sbb
mov
aas
push
adc
cmp
mov
or
loopne
pop
adc
sbb
mov
clc
cltd
or
loopne
sbbb
aad
jmp
or
sbb
push
cli
fnstsw
rorb
cli
sarl
in
adcb
jne
push
xor
mov
stos
imulb
sbb
aad
inc
test
sahf
pop
pop
in
push
inc
test
sbb
push
repz
or
je
clc
outsb
jle
inc
jl
xlat
inc
cld
push
or
or
xchg
push
test
add
and
cmp
jne
xor
add
lods
push
pop
push
clc
jb
stos
mov
fsubs
in
push
xchg
and
fdivs
insl
jno
dec
sbb
lock
jne
cmpb
aaa
jmp
xchg
sbb
rorl
pop
inc
insb
sbb
adc
sub
pop
xor
mov
mov
and
loopne
test
insb
sarl
sbb
stos
fisubs
add
pop
lds
cmp
xor
mov
es
add
pop
lock
add
gs
jne
out
bnd
or
loop
lock
pop
clc
inc
ss
mov
mov
test
jne
cltd
or
mov
or
sbb
fwait
shrl
stos
push
add
or
enter
bound
test
pop
icebp
and
cmp
cmp
lock
pop
push
js
sub
ret
cmp
fldl
xor
stos
jle
dec
out
xor
push
lock
test
je
sub
push
addr16
add
or
lahf
jbe
cmp
or
jmp
push
repnz
pop
aaa
outsb
or
orb
or
test
sub
pop
pop
push
mov
cmp
xor
cmp
daa
mov
jge
loope
dec
js
mov
and
add
repz
adc
nop
mov
sub
out
cmp
push
je
orl
outsl
push
add
sbb
out
in
mov
xchg
mov
add
adc
or
aad
std
mov
lret
fwait
std
int
push
sub
mov
cltd
cmpsl
mov
sub
rcr
divps
cmp
jg
sub
add
negl
mov
sub
in
sub
xchg
and
mov
fdivs
fdivs
das
mov
add
les
mov
lds
push
shrl
push
movsl
sub
test
das
mov
lret
dec
add
pop
dec
jl
xor
jmp
sub
sub
sub
aaa
push
adc
add
sbb
xor
adc
xor
add
sbb
les
jg
pop
in
sbb
add
push
fildl
add
jecxz
psubb
je
fmul
xchg
push
sbb
jle
inc
xor
shrb
addl
mov
xchg
test
jle
nop
call
xchg
mov
push
faddp
cmp
add
out
out
push
adc
fnstcw
add
cld
ret
jge
mov
je
test
je
push
mov
dec
dec
pop
or
movsl
mov
ret
push
jmp
mov
jne
sub
bound
shl
ja
movsb
inc
out
mov
push
lret
cwtl
xchg
bndstx
jb
add
adc
jg
and
dec
and
push
or
outsl
lock
add
inc
xor
ret
repz
fs
jno
cs
xor
ja
sbb
fs
sub
icebp
cmp
ja
mov
mov
jno
in
loope
in
and
ss
push
lock
push
push
inc
jne
push
ss
jbe
jne
xor
aas
notl
rclb
adc
mov
adc
sbb
je
cmpb
ret
scas
clc
jg
sub
inc
add
adc
sarl
mov
inc
rep
jmp
mov
aaa
pop
in
leave
jmp
mov
jmp
mov
mov
xchg
pop
adc
mov
pop
cltd
ds
mov
bound
divl
je
sar
data16
add
rep
xchg
inc
je
cld
lea
jne
mov
xor
cld
inc
dec
rclb
iret
enter
jne
lcall
mov
mov
data16
dec
and
sbb
mov
jo
cmp
jle
js
push
add
fbstp
in
popf
ss
or
pop
cmp
jmp
sub
pop
mov
sub
add
or
and
and
sahf
jno
ljmp
cs
jnp
push
cltd
mov
fidivl
mov
pop
mov
incl
inc
daa
jb
and
inc
push
iret
xor
inc
ja
xchg
outsb
fsubrs
sbb
ljmp
xchg
and
test
jne
push
out
ljmp
enter
pop
loop
xor
shrb
add
jge
rol
sbb
or
add
out
or
mull
push
mov
fs
decb
dec
cs
cwtl
sbb
out
out
dec
cmp
jb
cmp
ja
sub
ret
nop
mov
fldcw
pusha
push
or
mov
in
or
hlt
add
fists
fwait
pop
test
test
mov
stos
jmp
mov
sub
repnz
sub
jae
sti
scas
or
lcall
jmp
fsubr
pop
cmp
mov
cmp
and
mov
sbb
xchg
sub
fdivl
lods
cmp
mov
ja
and
adc
jne
out
pusha
clc
jb
push
sbb
jle
and
push
outsl
sbbl
cmp
data16
loopne
rol
lahf
mov
cmp
jbe
mov
mov
inc
inc
and
sbb
inc
xlat
mov
jg
ljmp
inc
inc
add
push
shr
je
push
cld
jmp
mov
mov
cmp
jne
dec
je
mov
pop
add
aaa
jg
jle
orb
dec
jne
jmp
adc
add
and
je
xor
mov
pcmpeqw
push
adc
add
adc
add
neg
add
add
jmp
pop
cmp
cmp
jne
shr
int3
adc
sbb
fists
into
shr
out
fsub
or
pop
cmp
fwait
lret
int
rol
dec
rol
pop
and
sarl
mov
cmp
jne
dec
dec
dec
and
lcall
jecxz
mov
mov
shl
stc
pop
fistl
data16
stos
mov
stos
pop
scas
loope
jg
xor
imul
js
lock
mov
push
pop
push
shrb
fidivrs
fstpt
push
inc
inc
je
mov
or
je
scas
xor
bound
sub
js
pop
pop
je
dec
xchg
imulb
jne
dec
and
call
fucomip
add
sub
or
cmp
ja
lea
push
add
notb
out
int
or
jge
jmp
inc
dec
mov
fdivrs
js
pop
sub
jmp
inc
inc
jmp
mov
enter
filds
cltd
jbe
sub
imul
add
scas
leave
aam
stos
jmp
push
cwtl
pop
xor
mov
jge
mov
mov
notb
stc
cld
pop
fistpl
inc
mov
dec
jne
pop
cmp
jbe
mov
jle
xchg
xchg
leave
fpatan
cmpsb
mov
inc
aas
jmp
je
in
mov
orl
push
daa
xor
in
out
add
jns
pcmpeqb
pop
xor
lret
jbe
add
popa
push
and
jmp
pop
dec
gs
mov
xor
das
test
jmp
fstp
fldt
ret
push
mov
daa
pop
jg
aas
mov
sbb
enter
inc
pushf
or
inc
ds
ret
mov
adc
mov
mov
sbb
add
sti
lock
mov
lock
es
test
scas
xor
out
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
fwait
stc
add
mov
bound
cmpb
xlat
fadds
out
nop
lods
outsb
xor
xchg
push
or
push
push
int3
aad
dec
sbb
rorl
mov
push
pop
test
enter
mov
inc
mov
jg
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
incl
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
fistpl
js
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
jmp
imul
divl
jl
xor
cmp
call
mov
jg
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
incl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
lcall
mov
and
addr16
repz
mov
subb
and
test
inc
and
outsb
bound
xor
jmp
sti
outsl
test
jnp
push
cmp
jne
push
pop
and
add
decb
jle
push
sbb
aaa
hlt
movzwl
in
lea
andb
push
push
mov
loop
xchg
movl
xor
hlt
push
data16
add
mov
sub
ja
mov
cmpsl
out
mov
jmp
or
cmp
pop
aas
or
add
ljmp
jo
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
mov
push
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
js
push
dec
gs
mov
std
push
call
xor
jo
xor
lods
cli
adc
rep
es
push
mov
add
fildll
jne
dec
mov
xor
out
jne
sbb
push
out
mov
inc
mov
ds
fdivl
pushf
jo
sahf
push
es
negl
mov
sub
aaa
daa
test
testl
test
testb
pop
push
movups
orl
add
test
loopne
mov
or
push
cld
lock
jle
mov
jl
mov
xor
push
shr
dec
rep
pop
mov
mov
mov
sub
stos
mov
pop
fmull
cmp
je
pop
mov
add
add
scas
ret
push
push
mov
mov
push
sbb
sti
mov
jecxz
lods
mov
mov
mov
stos
ret
sub
ds
mov
xchg
jmp
clc
xchg
cmp
jb
syscall
add
test
add
jmp
enter
or
adc
dec
lods
lahf
jb
and
push
loop
and
or
popa
data16
lods
sub
lock
sub
les
scas
push
sahf
adc
pushf
mov
adc
add
adc
mov
lods
sbb
dec
clc
inc
push
sbb
mov
mov
je
mov
insl
rclb
cmp
mov
mov
mov
mov
xor
add
jo
hlt
push
or
fmull
jne
or
je
inc
pop
popa
sbb
pop
fsubrl
mov
jle
ret
pop
subb
call
dec
cmp
push
mov
mov
cmp
pop
dec
jle
xchg
mov
and
loop
dec
test
jle
and
movl
clc
jmp
divb
pop
add
sub
mov
pop
mov
xor
push
mov
pop
pop
add
out
lods
loopne
pop
mov
cmp
xchg
xor
jbe
clc
lea
mov
addr16
xchg
cmpsb
int
es
rol
inc
or
je
push
push
pop
push
lcall
or
dec
rol
fnstsw
push
mov
loopne
pop
loop
pop
adc
lock
pop
xor
mov
shll
ds
mov
adc
out
push
cmp
sbb
add
dec
jne
add
jmp
push
jmp
hlt
insl
lcall
xor
jecxz
dec
cmp
lret
rcr
inc
pop
lahf
push
popf
enter
mov
pop
lcall
pop
jmp
push
xor
call
add
cmpsb
mov
push
mov
hlt
xor
inc
clc
call
mov
mov
movl
inc
inc
movl
cmp
dec
les
or
or
pop
cmp
cs
test
call
mov
in
lea
add
and
pop
rolb
pop
cmpb
or
adc
outsl
or
cli
in
push
call
enter
pop
push
pusha
push
push
cmp
xchg
cmpsl
cmp
add
pusha
shll
jae
scas
lret
sahf
addr16
pop
push
push
and
aad
mov
sbb
jmp
jne
movsbl
inc
inc
jmp
add
dec
clc
movsb
popa
add
sbb
fs
jecxz
inc
loopne
flds
loop
dec
fwait
pusha
fcomp
cmp
jecxz
pop
incb
mov
inc
add
jne
orl
fiadds
dec
adc
outsb
cld
pop
jne
push
insb
int3
adc
test
or
notb
out
decl
cmp
cli
out
push
je
or
in
jb
jbe
test
mov
jbe
nop
cmp
mov
jbe
mov
enter
adc
jne
jbe
adc
pusha
scas
cli
push
jns
je
orl
fsubs
add
loop
sbb
pop
jo
cmp
sub
push
xchg
mov
pop
sub
sbb
stos
mov
mov
ja
mov
fcoml
ret
add
jmp
div
dec
aas
mov
mov
daa
enter
and
xchg
popa
js
pop
dec
or
add
inc
popf
pop
dec
mov
pop
cwtl
mov
and
push
or
aad
cmpsb
mov
jno
mov
add
cld
push
ret
xlat
aas
add
addb
cmp
jne
sysenter
ret
mov
or
cli
insl
mov
je
jg
pushw
outsb
dec
sub
ja
jne
sub
insb
lds
jmp
sbb
sbb
and
push
adc
adcl
shll
mov
add
xchg
ds
adc
loopne
or
sub
jmp
adc
popf
pop
pop
out
jbe
add
pushf
ret
push
push
ja
or
inc
outsl
ljmp
mov
and
push
push
push
push
push
cmp
mov
negb
fs
mov
aas
sahf
incb
adc
nop
or
pusha
add
popa
xor
jle
mov
nop
fmul
shlb
adcb
pop
sub
cmc
lea
jae
mov
sbb
insl
cwtl
jmp
ret
xor
or
rcl
xor
xchg
ret
push
sbb
add
je
out
pop
cmp
push
sub
and
cmp
pusha
add
sub
jb
je
jmp
cmp
cmp
sub
inc
adc
jmp
sub
cmp
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
adc
call
mov
jmp
mov
jmp
mov
jmp
mov
fs
imul
call
pushf
add
idivl
out
jo
jge
push
leave
dec
aad
outsl
jp
outsb
inc
das
jp
xor
push
push
inc
sbb
cmpsl
cmpsb
add
fdivl
adc
out
push
inc
sti
sub
add
push
cmpsb
push
sub
insb
xor
xor
adcl
scas
repnz
or
push
ret
int3
aas
mov
or
sbb
cmp
mov
push
repnz
stc
pushl
add
and
add
mov
bound
mov
loopne
loopne
ja
xor
andb
sbb
ss
mov
and
fdivrs
mov
hlt
call
xor
in
jmp
inc
pop
add
mov
testb
mov
inc
xor
fndisi(8087
aad
mov
jle
flds
rcrb
jne
add
cmp
jg
movl
sbb
adc
mov
cmp
movb
jbe
jl
ds
test
push
sbb
out
add
xor
in
pop
loopne
je
dec
jne
pop
pop
pop
inc
pop
sub
sub
dec
jmp
dec
mov
loopne
add
sbb
cwtl
adc
mov
mov
cmp
ret
mov
add
ret
mov
rorl
mov
dec
scas
push
testl
call
movsl
mov
adc
mov
push
push
out
outsb
and
xchg
clc
neg
sbb
inc
lcall
test
ja
test
and
movsl
pop
leave
inc
lods
outsl
lods
mov
push
cmpw
loopne
cmpl
mov
pushf
int3
cmp
ljmp
subl
cmc
cmp
cwtl
xor
add
inc
inc
pop
ret
mov
push
add
sahf
push
cwtl
outsb
add
mov
clc
add
js
fisubl
push
mov
addr16
sub
ds
dec
jl
push
mov
subb
inc
xchg
out
inc
sbb
push
fbstp
mov
pushf
or
sub
daa
push
or
add
ds
pop
inc
or
fwait
adc
insl
xor
xor
inc
xor
add
inc
sbb
push
hlt
mov
dec
adc
jne
cmp
je
sahf
push
outsb
lods
jl
cmp
jne
ljmp
add
mov
cmp
adc
psubsw
sarl
xor
frstor
sbb
ret
nop
popl
xlat
xor
pop
or
dec
jl
lock
or
inc
clc
iret
outsb
in
lea
mov
adc
movl
push
or
dec
jne
sbb
fcmovbe
movb
sbb
mov
jns
jo
ret
dec
sarb
pop
jmp
jbe
xchg
adc
adc
xchg
das
xchg
jle
outsl
movsb
decl
add
and
push
jae
movw
add
mov
push
cld
and
inc
add
ds
loopne
lods
cltd
mov
mov
das
stc
mov
rolb
push
ljmp
fadd
sub
dec
popa
mov
cmpsl
sahf
and
ja
out
push
dec
or
adc
add
mov
pop
sub
testb
cmp
lret
clc
fdivs
or
jmp
lea
cmp
pop
js
sub
push
mov
movsb
aaa
int3
push
jl
std
sub
push
inc
mov
dec
sub
fldl
fstpt
shrl
fiaddl
or
jge
xor
push
test
push
mov
mov
ret
cs
mov
je
sbb
dec
movsb
nop
xchg
or
je
add
mov
jmp
inc
add
jmp
cmp
pop
sub
and
pop
pop
or
fcmovu
repz
push
push
addr16
in
add
fnstenv
or
adc
inc
push
repnz
lds
pop
add
pop
pop
xor
out
pop
cld
outsl
push
and
pop
cld
es
xchg
mov
jl
in
inc
mov
aas
mov
loop
cld
ret
push
aas
je
mov
jns
push
cld
add
cmp
insl
lds
dec
and
and
das
sub
mov
cmpl
je
cmp
mov
divl
mov
rorl
add
mov
mov
fmuls
add
pop
ja
aad
push
rolb
mov
jmp
mov
movsl
push
pop
mov
xor
mov
or
dec
dec
cmp
add
or
pusha
out
data16
cmp
fs
dec
jne
mov
loopne
and
jge
and
aaa
add
dec
jmp
jp
inc
cmp
pushf
sbb
sbbb
out
into
pop
dec
jne
mov
dec
shll
pop
and
insb
add
pop
lea
jmp
iret
cmp
shl
jnp
and
sub
imul
mov
inc
pop
imul
mov
mov
adc
xchg
inc
or
adc
shr
aam
repnz
rorl
das
push
cli
cmp
ret
add
lds
xor
cmc
mov
jp
mov
adc
mov
dec
inc
es
mov
or
add
paddd
cli
dec
mov
es
jl
cmp
jge
sub
xor
adc
push
sub
xor
xor
jmp
inc
jmp
scas
adcl
mov
mov
aaa
int3
cmp
mov
or
mov
mov
add
ret
push
sub
add
lea
inc
dec
movsb
push
xlat
xorl
iret
loop
cltd
mov
push
mov
sub
outsl
fistpll
xlat
adc
imul
add
gs
cmp
or
mov
mov
lea
lock
add
push
adc
add
xchg
xor
stos
in
aas
std
mov
push
insb
dec
js
mov
inc
jb
adc
and
out
adc
inc
aaa
shlb
lret
fsubl
in
and
iret
shlb
or
hlt
dec
out
and
clc
add
sub
or
loopne
test
arpl
or
sub
and
outsl
xchg
popa
xor
jmp
out
arpl
pop
cmp
cmp
pop
ror
lods
cmp
jecxz
popl
pop
ret
scas
fildl
push
pop
push
push
push
das
push
or
clc
mov
mull
push
and
rcrb
mov
add
pusha
jno
inc
jle
cmp
leave
jae
jle
js
sub
dec
ret
cmp
lock
fistpll
push
dec
push
das
int3
pop
pushl
mov
or
rorb
out
xor
sub
add
and
xor
add
add
repnz
push
pop
fwait
pop
pop
add
jb
or
mov
inc
mov
inc
push
xor
bnd
data16
pusha
and
push
cvtps2pd
or
daa
dec
test
ss
push
popf
test
shufps
jnp
cld
inc
xor
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
push
mov
or
push
jo
pop
push
lea
jge
or
bound
dec
cmp
xchg
jno
loop
or
fadds
push
xchg
push
cli
ret
cltd
call
push
mov
sbb
adc
mov
xchg
sbb
aas
ds
ja
ljmp
mov
insl
punpcklwd
push
add
adc
je
cmp
je
cmp
je
cmp
je
cmp
xchg
addr16
add
je
mov
mov
push
cwtl
clc
jmp
adc
jne
lcall
xor
or
add
dec
cs
adc
dec
ja
outsl
cmp
pop
jmp
cmp
mov
sub
add
sbbl
lahf
push
pop
in
aas
cmp
jne
cmp
popf
les
stos
mov
call
loopne
or
and
ds
pop
jbe
test
add
jo
push
mov
inc
adc
int3
jg
and
imulb
fnstcw
pop
das
ja
cmp
or
sub
jmp
jb
xchg
adc
cmp
jne
inc
mov
sub
daa
fcompl
inc
icebp
jmp
lret
adc
fstl
xchg
sbb
scas
inc
inc
fbstp
rorb
icebp
jbe
ss
clc
push
push
add
sarl
minps
int3
inc
int
loope
data16
xor
or
push
int3
int
je
or
jo
adcb
jbe
adc
mov
dec
inc
xor
mov
add
cmp
push
push
jle
insb
lea
mov
js
mov
pushl
or
cli
fimuls
inc
fs
jmp
aas
add
jns
jb
cmp
and
adc
lret
popa
and
loopne
incl
pop
rorb
jo
test
add
xlat
mov
cmpsl
or
insb
and
mov
in
inc
in
test
xchg
rorl
sbb
lds
dec
jne
sub
dec
cmp
jmp
cmpsl
std
es
push
sub
adc
dec
xor
add
pop
scas
jo
es
ja
sti
add
add
inc
pop
sbb
cmpsl
ljmp
inc
add
mov
add
je
cmp
lock
xchg
cmp
adc
popa
adc
add
pop
xchg
nop
push
or
push
ss
sub
loopne,pt
inc
and
pop
xchg
xchg
ret
xor
shr
sti
aaa
insb
push
insb
inc
mov
dec
or
in
movw
jo
scas
pop
aaa
push
push
nop
cmp
sbb
jmp
into
pop
inc
mov
jge
enter
aaa
movsl
les
push
mov
xor
adc
pop
loope
adc
fnsave
aaa
mull
mov
in
fs
add
dec
test
mov
adc
pop
pop
ret
das
in
mov
jbe
jl
mov
cmp
in
xor
or
or
sti
sub
inc
inc
inc
cmpb
jnp
jne
mov
mov
sub
inc
jmp
cmp
mov
out
mov
or
add
je
cmp
mov
cmp
je
daa
xor
mov
add
sub
inc
mov
fists
mov
add
sub
jb
add
sub
jb
add
or
sar
pop
sbb
xor
sbb
aaa
mov
xor
jmp
push
and
push
mov
inc
jmp
jl
andl
jb
pushl
jmp
jg
mov
cltd
xor
adc
push
mov
shld
add
adc
fwait
mov
inc
xor
fiadds
outsl
shrb
cmp
int3
xor
shlb
in
pop
ljmp
sub
push
outsl
pusha
xlat
jno
pop
movzbl
inc
dec
inc
jmp
jne
adc
int3
and
jg
or
adc
or
call
cmp
adc
jmp
pop
je
mov
push
add
jmp
int3
out
or
xchg
shr
setl
cmp
je
dec
out
or
test
mov
mov
add
pop
sub
ss
pop
dec
mov
dec
dec
mov
out
fists
cmpb
sbb
push
push
dec
repz
sbb
call
mov
cmpsb
sbb
out
fnsave
dec
mov
nop
inc
sub
adc
pop
add
subl
daa
jecxz
fnstcw
adc
scas
inc
add
xlat
sbb
cld
jo
mov
sbbb
cmp
cmp
int
push
lock
in
std
jge
andl
mov
add
call
mov
pop
out
sbb
rol
lock
or
scas
add
mov
sub
pop
js
dec
pop
int
inc
cmp
inc
in
jmp
out
jmp
arpl
nop
in
and
cmp
jge
mov
push
or
mov
xor
sub
lock
sub
mov
push
lret
dec
mov
pop
push
push
out
mov
inc
movsl
test
add
movsb
inc
add
pop
not
sub
mov
or
add
mov
hlt
add
xchg
jle
or
dec
insb
sbb
xor
das
push
lea
shl
mov
sub
dec
jne
aad
dec
mov
icebp
sub
add
rclb
inc
mov
xor
decl
add
clc
jne
jbe
push
adc
je
push
inc
inc
pop
xor
adc
lea
xchg
sbb
fs
jg
rorl
dec
clc
push
push
mov
incl
das
mov
inc
fcomps
out
xchg
push
or
jecxz
mov
es
mov
xchg
cmp
les
movsb
xor
inc
out
clc
into
jnp
sub
fisttpll
add
push
call
les
sbb
xorb
mov
jmp
adc
pop
xchg
sbb
mov
mov
or
outsl
ret
add
and
inc
icebp
stos
mov
jb
xor
or
mov
or
jecxz
aad
sti
and
scas
xchg
lea
xor
sets
jge
jne
push
add
movsb
pop
imul
in
or
add
stos
inc
push
jmp
std
lock
fimuls
iret
test
mov
push
clc
push
sub
inc
loope
push
sbb
cmpb
inc
and
fucomp
vmread
pop
jne
add
sarb
dec
fs
inc
xchg
mov
xor
inc
das
cmc
sub
idivb
lret
addr16
lea
shr
mov
sbb
push
loop
inc
cmp
add
inc
push
inc
jno
je
into
xchg
jne
stos
fwait
pop
rclb
je
mov
std
dec
cmc
and
jg
movb
sbb
push
push
mov
shll
test
lods
xchg
xchg
dec
xchg
and
gs
gs
xor
pushl
xor
fs
insb
cmova
dec
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
daa
adc
fdivr
movsb
push
addr16
dec
sbb
movb
into
shrb
fisubrl
call
add
cmp
add
sbb
and
or
fs
pop
sbb
dec
add
mov
dec
add
mov
test
inc
mov
cmp
iret
fwait
rol
in
cmp
push
repnz
ja
inc
das
mov
roll
add
ret
dec
cmp
mov
imul
loop
repz
push
jmp
jnp
xchg
pop
repnz
inc
add
jmp
stos
in
in
adc
mov
je
inc
cmp
jne
adc
push
incl
mul
sub
testb
jbe
add
fneni(8087
xchg
push
or
insb
das
jo
pop
sub
repz
test
jae
ret
iret
adc
loop
push
outsl
data16
popa
jb
cmove
insb
gs
aaa
pop
jl
jbe
inc
ret
dec
cld
dec
mov
dec
loope
sbb
mov
pop
adcl
shlb
adc
cmpsl
icebp
pop
cli
shl
mov
xchg
push
je
sarl
jne
das
add
gs
xor
adc
aas
pop
imul
adcb
mov
loopne
dec
lods
push
add
xor
lret
push
inc
cmp
je
call
cmp
jo
cli
inc
ret
faddl
sbb
das
cmp
mov
pop
push
jno
pop
fnstcw
mov
ss
mov
pop
and
xchg
sub
xchg
dec
movsb
xchg
pop
cmp
iret
or
sbb
cs
arpl
cmc
cmp
pop
roll
mov
fsubl
rorl
sub
mov
add
aaa
sub
loope
les
add
pop
mov
jno
sbb
xor
mov
push
inc
lods
insl
xorl
repz
mov
sahf
push
push
sti
mov
sbb
mov
inc
les
mov
ficomps
sbb
dec
and
inc
pop
loopne
cmpsb
push
pop
test
ss
ja
mov
in
outsl
add
adc
and
aam
add
ljmp
bound
jo
push
js
inc
fbstp
or
mov
lock
enter
sahf
push
mov
xchg
adc
sbb
lahf
mov
push
outsb
add
ror
mov
jg
shlb
movzwl
lds
incl
cli
jg
push
mov
inc
jmp
cmp
out
pop
jl
cmp
ja
fcmovb
jmp
or
mov
adc
sbb
in
outsl
sbb
and
lret
add
shlb
cmp
and
and
sar
out
inc
add
dec
or
cmp
jb
or
mov
add
or
xor
out
adc
or
add
andl
lea
ret
les
pop
mov
and
jb
dec
lock
mov
adc
cmp
rcl
cld
push
cmp
test
pop
es
mov
inc
test
pop
or
neg
push
call
loope
and
je
cmp
adc
mov
mov
sti
orb
mov
jo
and
or
mov
cld
ja
mov
dec
dec
cld
mov
pop
pusha
mov
or
inc
lcall
lock
adc
dec
cmp
fldl
mov
inc
inc
inc
mov
mov
xor
xor
mull
adc
in
xorb
sbb
sbb
fwait
or
jb
inc
pop
and
dec
mov
daa
out
dec
sbb
fnstcw
dec
and
pop
orb
leave
adc
lea
dec
sub
and
mov
xor
pop
inc
push
and
and
int
or
mov
or
mov
or
mov
pushw
xchg
push
jle
cmp
and
push
add
jns
arpl
insb
addr16
test
test
xchg
pop
inc
cmp
cmp
call
repnz
pushf
cmp
enter
enter
mov
in
imul
fmuls
sahf
push
aam
orb
cmc
mov
add
mov
arpl
jge
in
mov
sub
adc
repnz
adcb
movsb
xchg
imul
and
sarb
jle
fs
lea
push
push
mov
lock
push
aaa
sbb
and
ljmp
or
fs
sub
daa
mov
and
add
mov
fsubs
adc
shl
call
aad
mov
subl
push
sbb
movb
fisubrl
ja
dec
adc
and
call
and
lahf
adcb
cmp
adc
adc
add
in
adc
dec
add
and
inc
pop
sub
push
push
and
jbe
out
jmp
aaa
arpl
mov
daa
jno
sbb
jmp
sar
cmp
xor
rolb
icebp
push
push
push
jo
pop
fstl
push
imul
adc
lock
mov
loope
out
mov
scas
sti
jmp
push
mov
sub
ja
xchg
mov
sarl
js
add
mov
inc
and
ret
mov
xor
xacquire
arpl
test
mov
mov
out
sub
mov
mov
push
and
ds
xor
xchg
pop
cltd
and
es
jle
mov
test
sub
shrl
fcmovnbe
jl
push
and
adc
dec
push
or
mov
cmp
hlt
jnp
insb
jb
dec
mov
add
imul
or
pop
sub
or
jbe
insl
xor
pop
fs
addr16
das
jecxz
test
add
cs
or
outsb
add
lahf
and
outsl
fs
gs
inc
gs
inc
jb
jns
adc
scas
insl
fisubl
adc
inc
push
outsl
arpl
mov
gs
jne
je
dec
outsl
je
imul
mov
pop
sti
ja
jbe
ds
outsl
inc
arpl
or
pop
fistpl
jle
inc
xor
xor
cmp
inc
outsl
insl
bound
outsl
js
imul
ja
nop
xor
cmp
mov
push
dec
ja
dec
inc
xor
je
dec
add
lahf
dec
dec
cmove
js
jo
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
xor
hlt
lock
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
pushf
pushf
fsubr
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
xor
fsubl
je
dec
dec
dec
nop
mov
dec
cmpb
dec
dec
dec
jo
push
dec
pusha
pop
pop
push
dec
dec
dec
dec
push
dec
dec
inc
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
and
add
xor
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
xchg
xchg
daa
sbb
sbb
leave
enter
ss
or
repnz
fs
adc
ss
jb
lock
call
jb
aam
jb
jb
int3
enter
jb
sarb
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
sbb
add
xor
cmp
lock
call
cmp
pop
fmuls
aam
dec
dec
dec
ror
enter
in
sarb
mov
test
in
in
mov
in
xchg
nop
mov
test
in
je
insb
push
fs
pop
pop
in
in
push
push
dec
dec
in
in
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
xor
in
add
cld
xor
jb
jb
hlt
lock
call
in
jb
jb
aam
int3
enter
jb
sarb
mov
test
std
aam
movsb
dec
inc
cmpsb
mov
decb
mov
shl
or
adc
dec
mov
add
mov
repz
jo
sbbl
in
mulb
adc
addr16
mov
ret
pop
pop
enter
icebp
or
push
and
push
or
mov
xor
pop
cli
mov
pop
out
clc
shl
xor
stos
xchg
ret
sbb
ja
mov
add
mov
sbb
mov
pushw
sarl
clc
inc
add
cli
testl
ds
mov
popa
imul
mulb
in
mov
sbb
out
out
push
adc
sahf
out
sbb
and
aaa
add
hlt
add
arpl
jo
test
mov
cmp
sahf
push
and
mov
stos
ret
and
orl
inc
mov
pop
adc
jne
pusha
cwtl
dec
repnz
sti
js
push
hlt
pop
push
or
nop
mov
jge
push
rclb
or
cwtl
sbb
push
or
rorb
in
insb
adc
cmp
jb
or
fadd
dec
rolb
aaa
insl
mov
mov
gs
and
dec
push
push
dec
inc
inc
dec
cmp
divb
pop
push
and
dec
push
mov
push
dec
pop
and
adc
push
pop
sub
in
ja
cs
inc
dec
pop
dec
dec
dec
inc
push
das
repnz
inc
pop
xchg
gs
insb
jne
jmp
popf
jl
mov
jl
popf
push
dec
shl
adc
icebp
repnz
daa
daa
daa
repz
cmc
mulb
daa
daa
daa
idiv
stc
cli
daa
daa
daa
daa
sti
cld
std
daa
daa
daa
daa
jmp
loope
daa
daa
daa
daa
jecxz
in
daa
daa
daa
daa
out
jmp
daa
jmp
in
out
daa
daa
daa
daa
out
rcl
shlb
daa
daa
daa
rcl
aad
daa
daa
daa
daa
xlat
fcomp
fisubl
daa
daa
daa
fcmovnu
fstp
daa
daa
daa
daa
ffreep
rol
daa
daa
daa
ret
daa
daa
daa
enter
daa
daa
daa
lret
int3
int
daa
daa
daa
daa
iret
mov
mov
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmpsl
test
stos
enter
pop
lods
js
loopne
dec
push
mov
orb
loopne
inc
aas
push
and
jns
out
cmp
pop
mov
mov
inc
js
gs
imul
iret
ror
adc
js
fcomps
dec
gs
jo
nop
shlb
shrb
jns
mov
dec
jne
dec
dec
gs
outsl
jb
outsb
jp
xor
outsl
aas
inc
imul
mov
test
test
push
pushf
add
add
push
jns
shrl
scas
fsubrl
xor
xlat
cmp
inc
dec
mov
mov
or
sbb
sbb
scas
call
jb
lock
imul
cld
pop
gs
nop
in
in
rcrl
bound
popa
outsb
addr16
jl
fsts
out
outsb
jb
sahf
mov
insb
outsl
ja
mov
sub
jo
pop
dec
leave
inc
sti
rolb
pop
stos
in
jl
jbe
imul
jge
push
jge
test
mov
test
add
xor
or
jle
mov
inc
dec
add
outsb
fs
inc
sbbb
scas
ds
xor
mov
mov
mov
or
xor
mov
or
inc
popa
jae
jb
mov
adc
jne
cmp
shrb
push
loopne
loopne
inc
add
push
adc
leave
addl
mov
push
jb
insb
dec
mov
or
nop
and
scas
and
push
add
arpl
mov
add
inc
xchg
or
je
insb
inc
and
lods
fsubrs
xor
inc
dec
mov
mov
xor
mov
popa
sbbl
mov
pop
push
bound
dec
add
lock
jbe
shlb
data16
and
stos
lock
orb
inc
or
stos
push
movsb
adc
push
add
popa
data16
mov
aaa
xor
pop
dec
fcomps
or
push
inc
insb
jae
inc
xor
or
jbe,pt
mov
dec
je
aas
inc
xchg
cmp
or
push
push
mov
mov
push
int3
add
mov
aad
fs
das
jo
sbbl
aam
out
lret
aam
xchg
push
mov
out
jge
xchg
adc
sbb
mov
loopne
sbb
mov
push
add
aas
xor
cmp
adc
lds
into
imul
or
push
fadd
lods
outsb
adc
cmp
fsub
out
xchg
das
cld
ret
adc
repz
in
add
mov
add
sahf
jg
mov
dec
cld
mov
addr16
shlb
and
test
jne
push
xchg
push
cld
icebp
mov
push
in
mov
jg
sbb
mov
mov
mov
pop
movsl
sbb
mov
ss
push
mov
xchg
mov
scas
mov
or
cmp
cmp
add
mov
pop
pop
shll
pusha
call
pushf
in
sbb
jl
xor
mov
inc
testl
or
add
insl
testl
mov
mov
ds
decl
pop
jne
dec
sahf
lret
add
jecxz
adc
gs
xlat
rolb
or
jbe
idivb
repz
je
movzbl
push
push
call
mov
in
mov
hlt
ss
jne
inc
imul
dec
jne
inc
inc
ds
mov
sub
or
sub
add
xchg
mov
ljmp
outsl
in
push
out
and
sti
je
loopne
out
sub
pop
xchg
mov
mov
das
stos
add
mov
fs
in
jo
and
hlt
push
inc
push
das
xlat
mov
pop
push
jne
xorl
jle
push
imul
adc
pop
add
xchg
clc
dec
sub
in
jl
add
push
and
xchg
add
jno
or
xchg
xor
mov
jbe
paddb
fsubrl
add
lds
add
icebp
cmpsl
in
push
mov
hlt
cmpb
fstpl
jle
mov
inc
mov
lock
es
cs
insb
ror
out
push
ret
movb
jmp
pop
hlt
mov
sbb
add
adc
push
orb
inc
insb
jl
inc
aaa
or
push
mov
pusha
ja
adc
outsl
or
and
outsl
mov
jne
enter
xchg
or
jne
lock
idiv
jns
mov
inc
dec
mov
ret
mov
pop
cld
push
xor
div
dec
cs
jb
mov
mov
xor
pop
pop
sub
sub
jbe
add
mov
sub
std
xchg
and
add
dec
jne
push
mov
sub
xor
push
outsb
out
negb
cltd
sub
repnz
mov
mov
xorb
lock
pushl
jmp
mov
not
adc
popf
xchg
xor
pushf
jae
int3
clc
data16
sub
mov
add
pop
add
orl
adc
outsb
dec
add
loope
daa
andl
push
and
fistps
ret
mov
jmp
fildll
filds
rorl
fdivr
mov
pop
mov
fidivs
cmp
add
push
sub
mov
jg
rcrl
loope
push
ds
ffree
dec
ss
clc
ffree
ffree
pop
aad
add
movsb
lcall
test
jecxz
and
mov
lahf
popl
push
push
mov
hlt
aaa
and
in
lea
and
xchg
add
sub
js
jo
or
in
mov
pop
scas
leave
ljmp
je
xor
lock
and
push
out
inc
fildl
add
inc
xor
mov
fwait
cwtl
and
mov
pop
outsb
lock
dec
mov
dec
sbb
pop
cs
mov
fsubp
mov
xor
dec
dec
cs
mov
add
push
sbb
sbb
xor
add
pushf
push
xchg
int3
negl
les
scas
jp
sahf
lret
mov
inc
inc
jmp
loopne
push
pop
add
or
lock
jne
daa
call
call
xor
test
insl
call
stos
or
scas
outsl
cmp
adcb
mov
jge
mov
pop
jl
pop
jae
dec
pop
sti
out
movb
daa
push
nop
nop
and
cmp
add
out
clc
fcompl
sub
scas
adc
mov
jp
xchg
mov
inc
sbb
mov
adc
adc
ret
pop
leave
nop
sbb
rorb
les
xchg
cmp
sub
add
rorb
adc
fwait
ret
sti
pop
adc
add
adc
mov
add
cmpl
test
jle
add
push
mov
pop
pop
sbb
and
inc
js
xchg
fwait
popf
popa
insb
or
insl
repnz
add
mov
or
jge
cmp
rclb
jecxz
inc
or
pop
dec
and
push
inc
or
push
outsl
add
or
test
scas
jae
out
rorl
or
dec
insb
les
cs
hlt
jo
push
cld
cmp
push
int
jnp
ret
add
imul
pop
enter
fisttpl
pop
shl
adc
fsubrp
mov
shlb
call
in
and
push
mov
ja
lock
mov
daa
sbb
aas
aas
adc
cwtl
or
sbb
inc
mov
push
pusha
adc
loope
aas
dec
mov
ret
add
jns
add
xlat
les
or
dec
sarl
loop
xor
clc
cmpb
mov
imul
xor
orl
lock
adc
jg
pop
mov
testb
mov
jg
push
popa
test
mov
push
shl
sarl
add
jns
pop
and
jne,pn
lods
add
pop
sahf
movsl
jge
fdivl
pop
loope
add
rorb
jle
lock
lock
mov
sub
cmp
sub
pop
cmp
xchg
aaa
lahf
adc
add
xor
fcompl
or
dec
ret
add
or
jno
push
fst
popa
stos
popa
fcoml
cmpsl
add
insl
hlt
xor
loopne
in
adc
cmpsb
mov
xchg
cmpsb
cld
jb
mov
xor
adc
jge
fists
add
insl
jmp
adc
pushf
ret
inc
xlat
jbe
lea
daa
ret
imul
jae
jp
push
frstor
sub
fcomps
xor
not
mov
or
mov
add
pop
push
sbb
hlt
aam
mov
leave
lret
dec
push
gs
push
adc
inc
sub
pop
cli
mov
fldenv
xor
sbb
orb
and
pop
pusha
add
pop
lock
aas
repnz
jg
xlat
xor
repz
mov
mov
adc
or
adc
and
outsl
faddl
das
pop
cmp
sub
in
ljmp
shlb
xor
rorb
add
xchg
scas
addl
hlt
mov
jmp
adc
sbb
dec
ret
std
sbb
outsb
add
add
sub
in
testb
dec
or
or
mov
cs
mov
mov
icebp
jbe
sbb
pop
add
lods
cmp
inc
dec
lock
mov
jne
or
imul
mov
clc
cwtl
hlt
xchg
xchg
movsb
inc
mov
add
rcr
push
jno
clc
inc
xchg
aad
outsl
push
aam
xor
or
addl
jo
mov
mov
inc
cli
push
test
sub
fidivrs
adc
das
mov
sbb
adcb
int3
das
push
loopne
fwait
pop
jbe
or
push
dec
xchg
lock
stc
stos
insb
nop
dec
push
aam
clc
cld
or
outsl
testl
movb
lea
mov
or
call
lret
mov
std
test
je
adc
shr
pop
push
adc
inc
jns
or
sbb
pop
dec
push
loopne
notl
das
inc
or
dec
lsl
aad
clc
jge
adc
adc
cli
or
stos
ljmp
dec
jne
cmp
sahf
jmp
push
jns
bnd
mov
mov
add
cmpb
fdivr
fidivl
cs
and
lods
jmp
adc
mov
fisubs
iret
sub
sub
mov
out
sub
pop
mov
jae
fildl
call
lret
add
movsb
xchg
pop
mov
repz
xor
idivb
lea
pushf
cmp
jg
mov
cmp
cmp
jb
cmp
ja
imul
call
rolb
and
in
dec
fucompp
cmp
inc
imul
adc
ret
inc
loopne
adc
ret
je
xchg
ret
and
mov
lcall
pop
pop
sbb
notb
or
xor
mov
lcall
xchg
enter
lcall
xchg
mov
inc
cwtl
das
pop
add
ja
into
daa
pop
push
push
in
mov
mov
cs
fsubrs
shl
or
mov
lea
fmull
adc
repnz
dec
push
adc
xchg
stos
sbb
dec
sti
xor
or
jmp
push
add
sub
pop
outsb
adc
icebp
inc
or
sbb
xchg
test
jmp
mov
jbe
mov
aad
add
or
xor
inc
inc
add
mov
enter
fadds
xchg
outsl
mov
inc
push
jne
aas
and
stos
inc
pop
js
mov
add
xlat
jl
ja
cmp
cmp
ja
pop
and
int3
or
pop
xlat
sub
dec
mov
loopne
ds
pop
shrb
aad
fcomi
inc
pop
out
mov
add
mov
outsb
stc
testb
loop
je
mov
or
je
mov
aas
in
insl
mov
add
hlt
dec
jl
mov
mov
adc
cmp
jbe
mov
or
adc
ja
mov
add
shrb
pop
loopne
mov
inc
iret
dec
mov
sbb
es
xchg
ret
xor
and
icebp
pop
pop
ret
lahf
sub
or
scas
push
add
ss
xor
clc
sub
push
mov
mov
loope
sub
push
cmpsl
stos
mov
aas
in
pop
loop
mov
cltd
movsb
mov
mov
lret
mov
bound
movsl
sti
add
xor
dec
add
adc
lods
or
ret
and
or
sub
cmp
fsts
out
lea
ret
sub
adc
dec
mov
dec
notb
ds
add
fs
fstpl
cmp
mov
pusha
pop
mov
jno
fimuls
into
or
or
push
xor
stos
or
jmp
or
or
sarb
mov
neg
jmp
or
nop
mov
stos
xchg
push
mov
dec
mov
pusha
push
cld
call
dec
dec
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
push
pop
popa
or
mov
xor
mov
cli
mov
outsb
cs
mov
repnz
add
pop
sbbb
or
jle
and
mov
or
pushf
adc
jb
out
subb
cs
dec
hlt
mov
sbb
add
std
adc
inc
in
mov
es
adc
mov
les
je
add
or
aam
mov
add
nop
sbb
hlt
fwait
pop
pop
loopne
or
shl
mov
lods
jmp
jge
add
int
mov
popf
dec
dec
inc
dec
inc
dec
lods
or
xor
jge
adc
sub
stos
or
mov
aam
fmull
sub
std
jl
pop
sbb
xorb
stos
neg
sbb
stos
jmp
neg
std
jnp
inc
mov
loop
movlps
pop
mov
loopne
pop
inc
clc
dec
dec
add
out
cs
sbb
mov
or
enter
sbb
sub
jl
sbb
mov
mov
mov
mov
jo
out
insl
or
adc
mov
xor
es
jge
aaa
scas
je
mov
dec
jl
repz
inc
test
mov
push
shll
cli
dec
in
stos
xor
call
loop
sti
add
je
fildl
pop
jl
ret
xchg
repnz
fnstsw
cmp
and
sbb
mov
addl
lea
push
pop
iret
mov
je
push
push
cmp
fwait
or
jmp
stos
adc
ja
outsb
dec
movsl
mov
pop
inc
loop
ret
push
mov
int
mov
in
and
inc
add
and
and
adc
and
sub
out
jl
fldl
xor
sub
sahf
jmp
sbb
and
sub
sub
orl
sub
xor
adc
loopne
sub
rclb
add
in
cld
mov
aaa
nop
or
mov
data16
mov
jne
testw
jecxz
loopne
mov
cmpl
iret
mov
movb
sbb
je,pn
ret
cmc
imul
rolb
fabs
push
jg
sarl
and
frndint
rcr
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
sbb
jmp
shrb
jns
mov
mov
jge
pushf
or
cmpb
add
or
dec
js
decb
and
pop
data16
cmpl
jmp
mov
inc
add
icebp
notb
shr
dec
clc
jne
mov
add
xchg
out
or
or
cmpsb
movsb
fs
jecxz
push
add
or
je
imul
sbb
mov
or
aam
fisttps
das
adc
jl
mov
cmpsl
sbb
jae
dec
ficoml
push
mov
fildll
cli
paddusw
mov
sbb
cmp
cs
mov
sbb
sbb
sub
cwtl
call
pcmpeqw
dec
sub
cmp
ja
jae
and
inc
ljmp
sub
add
enter
cmpb
divl
sub
sub
pop
jmp
mov
sbb
hlt
pop
iret
inc
outsl
rorb
lret
loop
inc
ret
f2xm1
fwait
xor
outsl
loop
mov
cmp
lods
call
sub
icebp
daa
sbb
fdivp
push
dec
or
cmp
icebp
je
and
fistpll
out
or
sub
pop
add
jg
jne
mov
xor
or
add
pop
fs
push
mov
adc
aas
jmp
test
sbb
test
mov
addb
and
jmp
int
cmp
mov
test
or
fimull
or
add
jmp
aaa
mov
idiv
adc
or
push
inc
imul
call
cmp
add
bsf
movsb
bound
push
jp
xchg
mov
call
jnp
ret
or
orl
or
dec
mov
add
ret
nop
adc
push
call
dec
lea
movsl
or
jl
mov
sbb
mov
fldcw
and
add
push
mov
inc
or
mov
int3
push
ss
mov
xor
jmp
adc
adc
inc
and
pop
out
sbb
aaa
dec
fbld
inc
stc
out
jge
sbb
fbstp
or
cmp
dec
cli
inc
adc
sbb
loopne
out
add
lods
pop
sbb
ret
fs
cli
call
dec
outsl
fdivs
or
stc
std
xchg
test
movsb
dec
inc
and
sub
adc
ljmp
dec
inc
dec
repnz
mov
dec
push
out
dec
or
lock
adc
dec
add
and
call
shlb
and
push
je
shlb
mov
call
insl
outsl
pop
sbb
xchg
insb
scas
jg
add
add
loopne
ja
inc
add
jnp
jb
divl
hlt
daa
ja
cmpsb
adc
or
fwait
cli
nop
push
jo
in
mov
scas
inc
inc
cmp
jb
and
jle
ret
dec
dec
push
pop
add
cltd
add
out
jmp
xchg
mov
idiv
imul
insl
bound
in
pop
stc
std
add
sub
inc
mov
enter
addl
call
sbb
add
adc
xchg
mov
int3
xchg
sbb
nop
in
jg
fcomps
outsb
cmovg
pmuludq
mov
pop
cmp
repz
and
in
pop
inc
lods
sub
dec
in
lret
xchg
mov
int
cmp
add
insl
adc
shll
es
fisttpll
test
mov
jl
pop
in
xor
inc
ljmp
fnstenv
in
pusha
mov
pop
insb
ljmp
xor
pop
cltd
sub
mov
ret
lock
sub
sub
or
loopne
imul
out
loopne
outsb
out
sti
ret
cwtl
ljmp
and
jmp
dec
fldcw
adc
push
inc
mov
mov
add
add
lock
bnd
mov
xor
dec
hlt
inc
clc
xor
popa
pop
pusha
dec
sub
movsl
lea
loopne
loope
pop
or
cmpl
clc
jle
aam
test
addb
cmp
aas
push
mov
mov
lods
push
out
add
fcoml
mov
loopne
fadds
push
push
loope
cs
pop
fdivl
lcall
insb
orb
mov
pushf
sbb
notl
mov
jmp
adc
and
int3
rorl
sti
je
inc
sub
xchg
stos
xchg
stc
hlt
pop
sub
sub
add
or
testb
pop
mov
lock
movb
and
mov
outsl
jecxz
push
in
mov
out
ljmp
jecxz
xchg
movsb
jbe
inc
ret
sbb
imul
repnz
lock
out
out
mov
dec
and
cmp
mov
inc
loopne
and
cwtl
xor
mov
mov
mov
push
mov
iret
pop
mov
mov
rolb
or
ficoms
jnp,pn
das
pusha
in
xor
lds
push
insb
sbb
imull
cmp
popa
xor
pop
xchg
fldcw
ret
and
jne
imul
les
nop
test
sti
xchg
sbb
push
movsb
mov
lea
pop
xor
push
imul
pusha
or
lods
outsl
addr16
imul
pop
fcomps
add
addr16
pop
in
repnz
pop
sti
lods
stos
aas
dec
xor
in
ljmp
leave
push
pop
shrb
and
xor
in
je
sbb
xchg
mov
das
push
lods
enter
and
sti
add
mov
add
xchg
es
jns
add
add
js
adc
add
movsb
cmpb
shrb
std
dec
xchg
cli
mov
xchg
jb
lock
add
sbbb
xorb
cltd
insb
loope
push
cmpsb
push
jecxz
loopne
rclb
jbe
sbb
sbb
mov
sub
lds
fidivl
xchg
mov
loope
add
fdivl
jmp
jge
dec
into
loope
jne
mov
loop
xor
les
inc
aad
adc
hlt
cmp
xchg
cs
and
add
or
or
pop
hlt
or
or
push
add
pop
add
or
or
popa
arpl
or
inc
adcb
out
push
lods
sbb
sahf
out
mov
fs
notl
jbe
xchg
test
or
xchg
hlt
and
scas
repnz
mov
mov
add
popf
out
sbb
pop
dec
push
lea
sarb
jb
je
adc
cltd
mov
int3
hlt
dec
xchg
xlat
xchg
sbb
xor
xchg
adc
xchg
or
add
test
xchg
xchg
fidivrl
fidivl
fmul
mov
adc
dec
add
jmp
shlb
push
xchg
scas
cmc
mov
sarb
push
push
daa
bound
leave
lcall
icebp
hlt
pop
rcr
ja
ficomps
rcr
adc
pop
scas
sbb
push
dec
jg
mov
push
push
je
or
aaa
sbb
bound
pop
je
jmp
sahf
cltd
mov
push
mov
inc
cmp
xlat
orl
out
sub
stos
pop
push
jns
mov
and
mov
add
pop
push
fbstp
xor
and
push
dec
stos
and
cmpl
sbb
dec
pop
out
and
sbb
insl
push
jle
adc
mov
sbb
sbb
popa
cmp
sbb
out
add
pop
leave
mov
movsb
test
dec
cs
lret
in
push
pop
mov
mov
jb
lods
jmp
enter
and
mov
aas
sahf
ret
sbb
xchg
enter
cmp
push
jg
add
mov
add
xor
jae
fistps
sbb
and
cmpsb
dec
push
xor
push
and
add
pop
push
or
lds
lock
sti
div
and
sub
inc
ljmp
call
jbe
test
popf
nop
ja
jo
cmpb
outsb
sbbl
push
popf
nop
inc
cwtl
jmp
cmc
jmp
loope
mov
insl
or
sub
dec
mov
ror
jl
push
cld
push
cld
sub
jmp
adc
cmp
sub
mov
scas
jo
int3
or
out
cmpsl
adc
inc
dec
das
push
dec
push
ret
jnp
push
add
add
imul
or
sub
outsb
aaa
jecxz
mov
movsl
pusha
pop
xlat
mov
sbb
mov
iret
lea
sub
mov
xlat
pop
xorl
push
pop
mov
add
pop
inc
pop
enter
jns
and
mov
mov
ja
ud2
out
and
movsb
xor
dec
lods
outsl
lds
popa
nop
lods
adc
fldenv
push
in
sar
jmp
or
inc
sub
add
mov
cld
dec
in
movzbl
ljmp
dec
fcmovu
clc
in
in
jl
sbb
ja
dec
in
jae
dec
ljmp
inc
jge
mov
adc
ret
xor
mov
hlt
ljmp
repz
xchg
mov
data16
and
mov
fmull
push
cmpsb
lods
push
pop
dec
das
jecxz
push
sbb
fidivs
je
adc
loope
fildl
add
imul
and
xor
mov
mov
xchg
testb
cmpsl
cmp
jl
sti
jae
inc
cmpsb
mov
and
mov
hlt
lds
cmp
insl
and
sub
je
dec
push
sub
je
sub
je
jmp
adc
jmp
or
insl
jmp
or
dec
sbb
jo
jge
aaa
pop
movsl
xor
pause
pop
jmp
ret
inc
adc
arpl
and
add
xorb
ret
lods
jbe
mov
nop
cmp
push
add
or
sub
push
cmp
xor
lods
hlt
orb
or
or
cmp
jne
hlt
pop
push
and
jg
das
nop
movzwl
int
shr
push
sti
xor
sub
add
sarl
fs
movsb
out
ja
cmpl
jle
adc
pop
push
dec
pop
test
dec
push
rcrl
pop
enter
sbb
lock
popf
dec
dec
dec
sbb
aam
cltd
cmpsl
outsb
out
in
notb
sti
xor
push
out
add
cmp
inc
out
push
insl
and
inc
xor
mov
cmp
movsl
movsb
repnz
adc
mov
out
xchg
jnp
lea
adc
cmp
cmpsb
or
or
mov
sbb
adc
addr16
cmc
jo
mov
cli
loope
cli
pop
cmpsl
sbb
mov
ja
or
lods
add
movsb
in
inc
sahf
jbe
pop
fs
sahf
lret
inc
in
fucomip
call
clc
out
sub
jb
cli
cli
test
es
jmp
cmpsb
call
and
adc
cmp
loope
jmp
aas
ljmp
adc
loope
pop
dec
cltd
call
mov
ret
inc
cmp
push
jmp
cmpb
ja
xor
rolb
jo
jmp
ss
ja
fsubs
out
xor
add
lea
inc
jge
popa
jae
data16
fs
andl
sub
jmp
imul
aas
test
call
cwtl
aam
xor
mov
mov
xchg
mov
mov
aad
and
addb
into
hlt
jno
add
testb
fucom
push
cltd
add
rorl
dec
dec
hlt
in
subb
int3
aaa
push
je
fmuls
mov
clc
shll
clc
loop
rclb
dec
cmp
and
xchg
mov
cmp
out
cmp
add
push
mov
mov
fidivl
aaa
mov
add
and
movsb
adc
into
insb
inc
jae
outsl
add
xchg
popf
cmc
and
inc
daa
je
in
enter
fs
mov
pop
mov
add
in
add
push
and
scas
pop
out
push
add
call
loope
dec
sbb
in
rcrl
js
call
pop
xor
dec
out
add
sbb
pop
shl
xorb
jb
rcrb
rorb
lahf
mov
arpl
adc
jmp
movsl
and
hlt
jns
int3
cmpsb
or
inc
ljmp
cmp
cmpsl
add
pop
push
daa
cmpsl
jo
pusha
out
sub
ret
lea
lea
jl
and
ficompl
xchg
xchg
inc
loopne
add
loopne
in
xorl
loopne
xor
push
ret
jne
inc
lods
int3
int3
jmp
fldl
in
lods
sub
movsb
mov
scas
mov
jmp
sbb
or
rorb
rcrb
lret
hlt
jno
add
mov
mov
jle
sti
incb
push
sub
jb
sub
je
lea
inc
scas
rcrl
loope
push
cmp
enter
dec
adc
jle
repnz
adc
adcb
lods
xorb
fucomip
inc
bound
push
stos
movsl
cmp
dec
xor
loop
inc
imul
push
push
divl
mov
and
fdivr
loopne
lea
sub
in
fildl
dec
loope
pop
adc
add
add
jnp
add
pop
clc
push
push
call
mov
rolb
pop
fmul
mov
sbb
xor
addb
in
fdivr
subl
cltd
fistpl
imul
lods
cmp
xchg
int
cmp
pop
pop
in
repnz
xor
sub
in
pop
xchg
out
loopne
jne
lea
shl
pop
sub
dec
pop
cmp
fucomp
jmp
addb
sub
dec
cmp
jnp
sbb
movsb
pusha
cld
inc
or
xchg
cmp
int3
jae
aad
ss
decl
sbb
ss
cmpb
xchg
inc
xlat
dec
leave
loope
imul
sub
pop
pop
mov
adc
sbb
or
jmp
hlt
jno
xchg
lds
je
std
cmp
addr16
inc
dec
out
imul
xchg
cmp
pop
test
add
add
outsb
mov
int
jmp
jb
andb
cmpsl
shrl
mov
fdivs
fadds
loopne
mov
inc
sub
iret
lahf
ret
sbb
in
rorl
jl
in
jb
aaa
rolb
sub
imul
cmpb
je
jmp
in
inc
je
sub
je
xor
jno
dec
sub
adc
or
adc
xchg
push
xchg
dec
add
inc
adc
mov
aam
pop
pop
xchg
mov
cmp
sub
fcomps
adc
aam
ja
mov
into
mov
push
lock
add
mov
shl
push
mov
mov
mov
push
cs
cmp
adc
jbe
inc
iret
adc
dec
jmp
sbbl
jne
dec
inc
bnd
pop
jmp
fcomp
scas
push
pop
and
lea
test
xchg
sbb
jb
rcrl
xor
ja
sbb
xlat
add
sub
add
jb
imul
scas
sbb
add
add
movsb
test
cmpl
sbb
std
dec
and
jbe
test
inc
inc
pusha
aaa
sti
xor
push
pop
mov
pop
push
jmp
sbb
mov
divl
pop
mov
cmp
jo
rolb
fstpt
add
mov
sbb
inc
orb
arpl
cmp
sub
xchg
xchg
inc
cmp
je
and
add
and
je,pn
mov
or
enter
cmpb
add
popa
stos
pusha
xor
push
sub
es
pop
iret
dec
jnp
or
movb
jae
and
pushf
lock
pop
fidivrl
ds
jo
movsl
call
addb
push
lea
pop
test
mov
inc
add
divl
adc
or
or
push
and
adc
mov
xchg
mov
idivb
pop
mov
sbb
and
and
cmp
pop
mov
push
pop
jo
dec
rorl
adc
xchg
xor
fs
sti
jmp
push
ss
sbb
pop
arpl
inc
scas
pop
ret
out
dec
iret
pop
shlb
mov
jl,pn
push
and
inc
insl
adc
or
test
test
jae
pop
pusha
sarb
lock
inc
add
ljmp
push
int3
loope
clts
add
movsb
push
adc
inc
imull
ficompl
pop
scas
adc
mov
and
mov
in
ror
stos
enter
add
in
aad
adc
mov
test
mov
enter
js
test
dec
aam
inc
add
push
in
and
lea
push
push
setns
sbb
mov
xchg
mov
sub
and
pop
jne
add
jl
sbb
int3
push
loopne
pop
mov
cmp
xchg
mov
imul
sbb
dec
mov
nop
dec
sti
xor
lods
adc
call
ret
dec
call
sub
mov
or
adc
push
jb
jmp
shr
dec
inc
insl
cmp
mov
lea
imul
or
pop
dec
or
mov
cli
pushl
jmp
push
rorb
dec
js
lret
dec
je
into
xchg
xchg
pop
pop
and
ret
lcall
lock
fidivrs
sub
aas
in
je
xchg
ud1
mov
call
inc
test
adc
mov
call
and
test
shrl
insl
add
dec
sti
mov
sub
inc
sub
mov
sub
insb
cmp
add
loopne
fwait
inc
sub
cmc
pushl
mov
aas
dec
je
jmp
mov
je
jmp
dec
cmp
clc
mov
inc
cmp
inc
repz
or
cmp
cs
jmp
or
and
jmp
or
push
shl
repz
adc
add
lcall
movsb
leave
push
push
fdiv
inc
testl
mov
or
pop
xorb
into
clc
pop
adc
das
insl
adc
jne
leave
cmp
mov
mov
sub
mov
mov
mov
test
movsb
iret
mov
jg
nop
data16
popf
imul
mov
lea
mov
and
mov
dec
sbb
hlt
mov
cmpsb
xor
xchg
enter
mov
loopne
lea
adc
or
jg
popa
cmp
repnz
mov
out
jb
cwtl
pushf
mov
dec
leave
and
test
test
dec
into
test
and
dec
fists
pop
push
movsb
clc
aad
in
pop
cmc
sub
in
and
and
fwait
je
mov
int3
sub
sub
jae
and
inc
testl
pop
xor
push
mov
dec
in
in
call
aaa
in
jl
in
nop
jp
and
cmp
or
roll
nop
nop
out
iret
in
test
jbe
frstor
adcb
jns
addr16
xchg
in
pushf
sub
pop
or
pushf
insb
mull
inc
adc
push
jo
rep
xor
or
fwait
xchg
negl
mov
inc
mov
into
mov
iret
lret
inc
add
mov
add
lahf
cmp
adc
fwait
out
sbb
fsubs
push
fsubp
movsb
inc
pushf
pushf
adc
inc
jo
xchg
inc
aas
push
stc
push
sbb
adc
and
inc
mov
or
jns
pop
out
insb
inc
test
xchg
mov
hlt
pop
out
adc
mov
jnp
jl
mov
or
push
int3
je
inc
imul
js
negl
and
and
addl
xorb
out
mov
xchg
jg
adc
mov
push
loop
lahf
hlt
mov
add
clc
pushf
inc
or
cmp
pop
shlb
sbb
push
xchg
popf
cmp
sarl
and
inc
and
subb
push
xor
test
in
jg
roll
repz
dec
in
mov
mov
push
push
div
add
mov
dec
cmpb
jg
inc
imul
sbb
loopne
sbb
add
or
cmpl
pop
adc
and
xor
jmp
add
ret
insl
mov
add
sbb
add
and
push
cmp
sub
adc
pop
mov
ret
addr16
push
stos
fcoms
pop
lcall
arpl
or
mov
subb
dec
test
insl
jle
lea
pop
push
or
jnp
add
nop
lock
jg
push
loope
push
mov
test
or
fldlg2
mov
jle
or
nop
imul
or
and
jl
jmp
jl
lret
rcl
adc
call
push
call
ret
cs
jne
das
daa
xchg
clts
xor
or
mov
dec
ja
aaa
and
dec
and
jle
or
scas
loopne
outsb
stos
or
xchg
outsb
aam
jg
or
test
or
push
pop
push
cmc
stc
sub
mov
xchg
idivl
movsl
gs
fwait
adc
popf
je
pop
sbb
test
add
pop
cmp
cmp
mov
iret
jno
mov
shlb
add
gs
sbb
cltd
mov
inc
popa
sbb
add
adc
nop
stos
movsl
xchg
mov
clc
cmpsl
aas
ret
outsl
adc
shrb
jb
or
insl
pop
lea
daa
lods
mov
mov
xchg
in
mov
or
rorl
mov
addr16
ret
scas
mov
sub
stos
adc
subb
aaa
jle
shll
add
sbb
enter
test
data16
mov
test
sahf
clc
lahf
clc
xchg
in
arpl
in
lret
mov
and
push
mov
cld
shrb
lock
add
clc
sbb
push
clc
ja
xchg
scas
inc
xor
cmpsl
push
push
leave
hlt
jecxz
jmp
sub
dec
cmp
jae
jl
scas
adc
xchg
sub
mov
enter
test
imul
push
pop
insl
jmp
inc
jecxz
lahf
nop
or
cmp
mov
leave
repnz
je
jmp
pop
hlt
adc
rorb
out
add
in
in
xchg
adc
mov
sbbl
stos
loop
push
icebp
mov
in
xor
pop
jne
xchg
cmp
pop
fldlg2
scas
dec
insb
mov
andb
out
leave
sbb
add
jge
mov
xchg
sub
mov
or
loop
in
inc
stos
sbb
dec
cli
jne
rcrb
inc
push
aam
push
jg
fadd
out
inc
jne
pop
push
or
std
adc
pop
fmull
inc
sub
dec
pop
push
cmp
ja
pop
sbb
movl
dec
add
adc
mov
add
or
sbb
adc
add
dec
rcll
test
call
add
mov
add
add
test
aad
icebp
sbb
lret
mov
movb
lcall
leave
nop
pop
mov
jnp
mov
and
scas
addb
mov
loopne
mov
sar
and
test
dec
ljmp
out
test
xchg
jb
aam
pop
cmp
jnp
icebp
pushf
push
pop
dec
js
mov
xchg
icebp
add
mov
xchg
ljmp
jne
stos
xlat
jmp
push
fldt
sbb
pop
cmp
sub
adcb
add
pop
ret
push
jne
ret
or
stc
in
adc
leave
int
lret
in
push
mov
jno
dec
jp
and
leave
mov
ss
and
imul
loopne
mov
movsl
test
inc
push
in
dec
in
in
jnp
lahf
mov
mov
push
inc
dec
mov
sbb
mov
jno
mov
xchg
fsubr
pop
leave
int
stos
fsubrs
mov
fdivrl
rcrb
and
enter
aam
mov
push
xchg
or
int3
adcb
jnp
insl
xchg
bswap
mov
sub
es
inc
enter
enter
sbb
int3
cwtl
sbb
jl
mov
scas
xchg
cld
mov
and
jb
jle
and
xor
dec
fiaddl
mov
bswap
pop
hlt
mov
mov
dec
lods
in
cld
push
mov
adc
cmp
repnz
or
add
push
and
aam
shlb
jle
mov
jne
adc
push
fdivrp
rcrb
das
fs
push
mov
add
fs
xchg
imul
pop
scas
jne
push
je
pop
and
pop
sbb
inc
out
cmp
pop
push
inc
jbe
clc
cmp
add
and
in
jo
in
in
pop
loopne
mov
mov
push
mov
ret
mov
fwait
cmpsb
jge
lods
movsb
sub
lock
or
add
or
add
outsb
adc
xor
adc
pop
addr16
cmc
repz
in
loopne
clc
push
outsb
scas
dec
sti
dec
iret
jl
mov
push
sub
ficoms
mov
adc
or
mov
dec
fisttps
call
out
jmp
jb
add
sbb
push
mov
cmpl
outsb
fcomps
loope
psrld
adc
adc
and
mov
mov
jo
mov
push
outsb
and
inc
outsl
int3
imul
cs
gs
jo
inc
js
cld
mov
jg
xchg
lock
inc
ret
mov
xchg
ret
lock
inc
pop
sbb
dec
adc
dec
mov
or
sbb
sbb
cmp
mov
inc
orb
lret
adc
incl
bound
adc
adc
dec
and
daa
cmp
lock
jle,pt
sub
inc
cltd
pop
and
imul
mov
pxor
or
les
arpl
js
add
add
adc
adcl
push
or
jne
cmp
sarb
inc
mov
clts
sbb
hlt
cs
hlt
test
sbb
add
popa
lods
enter
outsb
out
test
pusha
or
mull
pop
mov
aaa
subl
sbb
int3
sbbl
and
or
pop
cmpsl
dec
cmp
scas
adc
or
incl
sub
stos
cld
adc
clc
push
jbe
and
add
sub
push
orl
adc
iret
dec
sbb
pop
or
add
dec
pop
adc
pop
test
mov
and
inc
or
mov
sbb
aam
aaa
das
push
sbbl
leave
dec
enter
shlb
movsl
scas
in
inc
in
dec
and
idivl
stos
and
rclb
cmp
js
rorl
mov
seta
mov
add
and
arpl
and
and
roll
push
fistl
inc
inc
xchg
jl
mov
jmp
inc
xchg
stos
in
andl
and
inc
cmp
in
xchg
adc
pop
clc
dec
dec
sbb
lea
jnp
sbb
sub
and
fldt
or
cmp
ds
sbb
xchg
iret
push
fwait
rcrb
or
pop
bswap
ret
testb
lds
mov
dec
push
jne
rcll
sub
jno
lock
push
cmp
iret
je
add
sbb
cmpsb
ret
or
mov
cmovs
pop
daa
ds
cs
pop
hlt
hlt
or
sbb
movsb
pusha
in
incl
adc
mov
dec
push
das
sbb
push
or
das
adc
push
inc
shll
lea
adc
xchg
mov
out
dec
xchg
mov
mov
add
adc
lret
xlat
iret
and
fmuls
jne
jecxz
out
mov
daa
dec
xchg
paddsb
test
subps
inc
add
je
cmp
sub
dec
push
outsl
mov
in
mov
add
notl
imul
in
cmp
mov
pop
ds
adc
push
push
and
inc
cmp
data16
bnd
lock
stc
cmp
aad
mov
inc
push
fdivrs
repz
enter
push
cmp
mov
fsubrl
jle
mov
jo
nop
repz
idivl
mov
rolb
fidivrs
cmp
lock
sahf
out
or
sub
in
idivl
inc
into
dec
cmp
mov
push
hlt
sub
iret
xor
clc
add
pop
xlat
push
sbb
in
mov
das
adc
dec
sahf
xchg
out
adc
or
or
or
mov
dec
jae
jae
pop
loopne
cld
icebp
add
ds
clc
push
mov
hlt
test
lock
in
cmp
in
clc
ja
shl
cmp
in
jl
jbe
add
fsubrl
aam
xchg
ja
pop
push
inc
int3
daa
out
cmpsb
pushf
enter
movsb
shr
popf
cmp
mov
in
cmp
or
mov
mov
mov
sahf
xchg
out
sub
ja
pop
lods
mov
inc
dec
sahf
xchg
ja
pop
cmp
jmp
push
jns
fs
xor
aam
daa
xchg
in
xchg
cwtl
test
iret
mull
call
mov
mov
mov
leave
inc
mov
mov
cmpl
adc
sub
cmp
stc
sahf
sub
in
mov
fidivl
push
cmpsl
jge
sub
and
or
push
or
push
nop
or
and
inc
push
cmp
xchg
nop
test
xor
test
les
mov
ret
enter
or
subl
jae
jl
inc
xor
push
les
cmpb
dec
pop
mov
shrb
xor
shlb
push
mov
in
mov
xor
dec
inc
daa
daa
dec
push
inc
inc
cmp
icebp
push
mov
adc
ljmp
xchg
sub
data16
adc
adc
fcomip
les
pop
and
push
daa
or
test
inc
or
cmp
std
rcll
or
xor
jge
jecxz
adc
add
adc
mov
out
pop
in
pop
enter
out
cltd
inc
pop
test
mov
cltd
add
xorl
mov
pushf
or
adc
xchg
and
cmp
cmpsb
nop
dec
hlt
xchg
xor
rclb
push
sti
jl
jo
xorl
add
sbb
push
lods
or
xchg
addr16
lock
pop
add
sbb
cmp
addr16
rcr
pop
in
push
nop
ljmp
adc
inc
cmpsb
fsubrs
mov
and
orb
or
lods
or
pusha
sub
lcall
mov
repz
mov
push
xchg
xor
xor
les
adcb
sub
jne,pn
jne
dec
dec
movsl
add
xchg
push
jl
jl
push
mov
and
loop
pop
mov
mov
test
lods
mov
mov
mov
mov
mov
enter
cltd
fs
rcr
loopne
fs
dec
enter
xchg
dec
es
clc
and
xchg
dec
aam
add
lret
and
lret
fcoms
fmul
lret
and
enter
out
xor
inc
lret
and
lret
call
mov
pusha
push
lock
sub
push
cs
hlt
mov
or
out
aam
lods
je
arpl
or
inc
push
clc
xchg
das
mov
add
outsl
je
fs
stc
in
fbstp
das
dec
jne
inc
imul
cmp
jnp
fs
outsb
dec
jb
pop
outsl
jb
std
and
insl
jo
inc
jb
insl
push
je
pop
push
or
xor
inc
adc
jns
in
rolb
push
rcr
out
pop
inc
jns
pop
sbb
dec
mov
cld
push
mov
add
mov
or
lret
add
xor
or
idivl
lret
fdivrp
and
bound
call
add
push
in
cmc
adc
mov
enter
jo
sbb
push
add
push
or
insb
add
dec
push
push
nop
push
les
loopne
add
cmpsl
mov
lahf
les
inc
hlt
dec
fsubs
cmp
mov
inc
jne
push
dec
adc
push
inc
nop
testb
xor
pop
gs
adc
sub
cmp
push
inc
cs
cmp
popa
jnp
mov
mov
adc
or
mov
mov
ret
insl
enter
es
movl
ret
push
and
leave
push
pop
or
inc
jb
lret
int3
scas
jnp
in
inc
popa
adc
xor
push
xor
and
jo
xchg
fs
mov
xchg
pop
xor
sbb
xchg
push
push
hlt
dec
outsl
rolb
fimull
cld
iret
cld
or
jb
and
and
iret
fs
fs
mov
orb
insb
add
dec
xchg
enter
mov
and
cmp
xor
xor
mov
mov
outsb
divb
sbb
push
ds
outsl
and
iret
inc
or
mov
divb
jp
sti
push
cld
mov
es
bound
les
addl
daa
mov
xchg
push
dec
in
cld
cmc
add
jle
cmp
mov
or
xor
lods
mov
daa
call
or
or
cli
inc
mov
push
xchg
cld
sub
mov
inc
lock
cld
pop
nop
pop
enter
in
cld
in
leave
mov
sbbb
fs
dec
std
or
and
std
leave
adc
push
aad
add
xor
or
or
add
push
sbb
add
and
nop
es
sub
dec
jecxz
pop
push
scas
out
test
mov
sbb
jbe
dec
lahf
push
nop
es
jbe
fldl
jmp
adc
mov
cmpb
cmp
in
jle
pop
in
cwtl
clc
mov
cmp
insl
mov
dec
hlt
mov
push
repnz
lock
lock
jae
scas
in
stc
in
mov
enter
cli
call
xorl
mov
rcrl
jae
loopne
les
loopne
jmp
incb
add
enter
dec
shll
or
add
mov
add
pop
les
xor
out
cmpsb
imul
sbb
enter
push
sub
inc
outsb
scas
sarb
sbb
das
test
in
fdivl
sub
sub
jno
push
je
jnp
inc
xchg
inc
ret
cld
jmp
adc
in
in
jmp
lahf
movsl
icebp
cmpsl
es
mov
dec
sbb
push
mov
jle
lock
push
dec
pop
jge
or
fisttpl
jmp
inc
les
adc
test
ret
je
out
mov
inc
add
enter
add
xor
enter
test
add
pop
or
roll
ret
add
adc
push
loope
mov
je
lahf
ret
inc
inc
xchg
lea
jecxz
pop
fmul
or
inc
cmp
incl
test
insb
jnp
mov
add
in
jne
pushf
xchg
push
and
sub
sbb
mov
mov
icebp
mov
and
xor
loop
call
das
test
push
or
inc
add
enter
sub
add
pop
xor
push
inc
xor
jb
mov
pcmpgtd
jne
cmp
je
dec
mov
dec
mov
jmp
and
rcrl
movzwl
lock
or
lahf
dec
imul
lea
mov
call
add
mov
clc
loop
and
test
aaa
sub
sbbl
inc
sub
inc
pop
dec
inc
push
jbe
pop
xchg
sahf
jmp
inc
mov
cltd
dec
or
mov
fdivl
dec
repz
dec
jnp
out
sarb
out
test
fsubl
xor
fsts
movsb
jge
insl
mov
push
cld
fstl
call
jo
movsb
xor
push
aas
hlt
clc
xchg
jmp
lret
pcmpgtd
xchg
xor
inc
inc
pop
jmp
sub
add
add
cs
js
xor
div
and
call
jge
adc
sub
fbld
sbb
pop
pusha
and
fs
jmp
mov
pop
push
inc
mov
pop
js
xlat
je
sbb
add
stos
cmp
or
jne
adc
push
inc
sub
ds
push
cld
inc
push
push
pushf
cli
adc
imull
xor
ljmp
nop
popf
fwait
hlt
add
hlt
cld
mov
xchg
or
call
data16
sub
push
jnp
sbb
pushf
mov
sbb
in
push
shl
dec
shr
sub
jmp
sub
pop
mov
push
lret
daa
mov
cwtl
jns
push
push
sti
add
cltd
xchg
sub
cli
aad
jns
mov
and
arpl
inc
jne
fnsave
inc
sub
in
xor
clc
fimull
dec
inc
add
xor
pop
daa
call
jb
stos
sbb
fsubr
enter
call
pop
fcompl
out
stc
push
push
jno
call
pop
fs
subl
fnstsw
adc
mov
or
cmc
add
jb
dec
push
in
test
inc
stos
hlt
loopne
cs
ret
dec
call
mov
jmp
push
or
or
push
push
xor
add
pop
pop
add
cs
ds
cmpsb
decl
push
inc
pop
jns
cmp
call
add
movsb
or
loopne
inc
dec
loopne
sti
aad
cmp
adc
cmp
push
mov
sbb
cmpsl
adc
mov
cmc
mov
inc
mov
repnz
push
inc
push
pop
leave
rol
jle
sub
or
pop
pop
mov
cmp
je
pop
xor
push
es
pop
jae
add
or
or
hlt
roll
je
xchg
add
das
and
xor
lock
mov
or
xor
sub
or
jp
push
pop
ja
in
push
rolb
dec
pop
popa
jb
rcll
or
das
nop
fdivrs
cmp
sbb
inc
pop
jns
shll
jg
pop
daa
call
andb
inc
pop
enter
mov
cmp
mov
xchg
cmp
or
in
xchg
inc
push
std
sub
mov
clc
movsl
adc
sub
pmaxub
push
or
icebp
push
push
mov
mov
arpl
xor
cwtl
add
pop
push
push
pop
dec
add
cmp
adc
sub
sbbl
lds
push
imul
push
clc
xlat
popa
sbb
es
jle
mov
sbb
or
call
shrb
adc
repz
cmp
jg
mov
in
std
adc
pop
movsb
ja
mov
mov
mov
jl
aad
add
push
cmp
push
xchg
xchg
out
shr
pusha
fnstsw
repz
jne
pushf
scas
rorb
outsb
cmp
sbb
mov
shlb
dec
pushf
imulb
rorl
loopne
icebp
dec
jnp
inc
mov
pop
arpl
aaa
sub
jecxz
daa
pop
add
mov
mov
hlt
cmpsl
int
and
fwait
pop
je
adc
jae
inc
ss
fstpl
xor
fistpll
les
int3
pushf
jbe
in
mov
repnz
pop
adc
add
or
out
and
test
jp
add
cmp
jmp
push
sub
jmp
xchg
or
jle
in
push
push
dec
jmp
stc
push
cli
ret
test
sub
sub
push
inc
xor
mov
mov
add
iret
arpl
subb
push
sbb
cmpsl
movsl
lret
es
lcall
cmp
push
or
inc
es
fildl
or
inc
cmp
sti
std
jg
sub
xor
pushf
test
shll
pop
sbb
popa
dec
mov
cmp
data16
js
in
mov
or
xor
pop
call
inc
lcall
xchg
inc
test
pushf
adc
adc
adc
les
pop
jg
in
add
push
jmp
cmp
and
push
xorl
aaa
push
lahf
in
push
subl
outsl
cmp
loopne
and
sbbl
push
arpl
call
popa
aad
xor
arpl
imul
ljmp
mov
mov
shl
push
cmp
push
inc
cmp
repz
je
mov
repz
adc
outsb
in
mov
pop
sub
dec
add
out
outsl
or
jne
ds
add
imul
push
outsl
aas
sub
mov
sub
mov
fnstenv
call
clc
pop
cmp
pop
mov
and
push
adc
mov
push
std
sbb
movsb
lea
mov
adc
and
push
or
add
inc
lock
mov
subb
cwtl
je
dec
mov
jmp
outsl
test
gs
xor
je
inc
daa
out
enter
loop
inc
mov
test
adc
pop
pop
adc
sahf
out
andb
sahf
outsb
pop
and
sahf
out
push
pusha
jbe
mov
mov
mov
and
outsl
inc
fisttpll
ds
fildll
pop
xchg
rclb
push
fcompl
inc
mov
jns
mov
sbb
adc
push
sub
or
aaa
or
daa
add
add
insb
adc
pop
imul
jecxz
jmp
rcrb
lahf
pop
add
repnz
lock
and
mov
cmc
xchg
jmp
push
inc
sbb
fwait
addr16
jb
sbb
clc
cmp
popf
sub
stos
movsb
out
jmp
rcll
fldt
hlt
pop
or
pop
minps
stc
adcb
adc
enter
push
ret
adcb
lock
andl
adc
outsl
lock
mov
xor
je
lret
sbbl
leave
aaa
adc
dec
xlat
pop
leave
add
arpl
out
jmp
adc
xchg
or
and
cmp
push
cmc
repz
jnp
mov
mov
push
lock
into
in
enter
mov
pop
xorb
sub
popa
adc
mov
pop
mov
add
jmp
pop
stos
in
out
adc
adc
mov
dec
stc
add
fisubrl
push
movsl
mov
repz
pusha
nop
add
mov
sbb
cmpsl
fsubs
mov
add
xchg
adc
adc
push
cmp
cmp
addb
mov
lods
mov
push
mov
and
adc
mov
pusha
push
adc
imul
sub
imul
imul
repz
xor
inc
mov
lock
pushf
xor
gs
cltd
bound
sahf
test
push
push
xchg
loopne
adc
in
pop
aaa
push
and
adc
rclb
ret
aaa
sbb
sub
add
xor
nop
push
bound
xchg
dec
ds
scas
sbb
sbb
mov
clc
in
xchg
xchg
sbb
push
test
hlt
jno
push
lods
xor
lock
jbe
in
xor
hlt
dec
call
cmpl
cwtl
or
mov
inc
clc
nop
xchg
out
fnsave
mov
inc
sub
sbb
pusha
xor
call
in
les
sbb
sbb
xor
ja
xor
add
dec
mov
pop
mov
test
lret
stos
cmp
push
iret
repz
adc
cmp
jbe
sahf
out
cmp
mov
mov
inc
sbb
in
push
or
and
clc
lock
xchg
dec
pop
sub
or
mov
push
cmp
add
mov
pusha
xchg
arpl
lea
pop
mov
insl
and
mov
aad
bound
mov
and
push
or
lock
dec
arpl
push
lock
jne
jnp
jl
mov
nop
outsl
and
cltd
xchg
test
sbb
cmp
sbb
dec
fs
outsl
lcall
lahf
out
cmpsb
daa
push
add
push
movsb
sbb
pop
bound
movb
loop
adc
pop
dec
pop
sub
sub
gs
dec
cmpsb
sub
in
add
js
je
inc
out
sub
jo
sbb
cmp
ss
cmp
and
test
xchg
sbb
inc
lods
test
mov
jb
pop
dec
jae
idivb
sbb
pop
popa
mov
jmp
sub
pop
sub
call
cmp
jg
sub
or
enter
push
lock
or
and
data16
jno
leave
inc
jp
pop
out
sbb
mov
jb
out
out
sub
sbb
or
add
pop
out
push
pusha
or
dec
nop
mull
and
or
rclb
popf
jns
add
fidivrs
cld
loop
jmp
and
cmp
cmp
fs
sarl
repnz
mov
repz
outsb
pop
cwtl
and
or
int
jp
adc
or
lea
xchg
sbb
sbb
or
pop
flds
fcomps
sub
sbbb
jnp
sub
sti
pusha
mov
notb
sbbb
shlb
dec
sbb
and
sahf
xorl
push
rcll
jmp
das
pop
cltd
or
add
pop
pop
push
inc
push
add
jnp
out
mov
or
fstl
inc
cs
addb
cmp
repz
push
bound
mov
int
sbb
push
sbb
pusha
push
and
fucom
pop
loop
xor
mov
adcb
sbb
out
pop
dec
sbb
inc
pop
cwtl
jne
and
mov
shrl
and
jmp
rcr
add
or
or
sbb
arpl
add
jno
clc
push
add
adc
dec
shr
push
xchg
shrb
inc
das
fstpl
pop
xor
js
jo
mov
test
and
fs
inc
pusha
rcrl
test
pop
leave
stos
sbb
and
push
xor
mov
sub
pop
jo
and
push
xchg
jns
jb
adc
cli
repz
repz
and
out
imul
es
push
add
jnp
xchg
es
popf
mov
enter
jecxz
idiv
leave
and
in
loopne
in
adc
sbb
popa
leave
and
flds
into
add
add
imul
xchg
bound
hlt
daa
lock
lahf
adc
inc
movswl
push
sub
mov
xchg
mov
xchg
or
in
hlt
push
ss
xor
xor
sub
rorb
ret
bound
xchg
jl
adc
int3
push
shll
pop
movsb
add
push
jne
imul
pop
leave
xlat
in
sti
xor
repz
daa
sbb
daa
inc
aas
cmp
mov
push
mov
push
push
addl
repz
stos
scas
loope
in
pop
fistpl
flds
adc
push
sbb
sub
cmc
pop
or
icebp
sub
jmp
jg
mov
xor
xchg
imul
lds
ds
adc
sub
and
sbb
sub
xor
les
jle
adc
ja
mov
sbb
iret
repz
repnz
js
cmpsl
mov
fwait
inc
cmp
les
fiaddl
lahf
out
es
add
push
sub
xor
ja
add
je
mov
xchg
test
sub
fisttpl
push
in
cmp
fiaddl
mov
add
and
out
in
add
repnz
dec
inc
pop
inc
cmp
sub
aaa
pop
xor
xlat
sub
ja
push
repnz
xchg
loopne
sub
or
cmp
push
pusha
clc
mov
lods
inc
xchg
and
jno
pushf
test
mov
pop
mov
jb
imul
loopne
orl
add
mov
popa
mov
pop
les
adc
pop
or
mov
cmp
inc
pop
jne
leave
add
xchg
jl,pt
lret
add
inc
pop
cmpl
inc
sub
dec
jb
mov
lods
push
sub
mov
daa
shl
push
cld
cmp
lock
cmpsl
pop
adc
and
pop
pop
rclb
fistl
rcrb
enter
addr16
sbb
sub
addr16
mov
pop
xor
pop
adc
repnz
mov
and
sbb
adcl
adc
int3
ds
mov
icebp
cs
or
aaa
in
jae
daa
aaa
dec
cs
pop
push
repz
xchg
jecxz
jb
popf
in
test
mov
sbbl
mov
sub
dec
adc
adc
mov
xor
dec
adc
sbb
sbbb
sub
sub
sub
das
and
or
das
mov
repnz
in
xchg
and
inc
push
shrl
lock
pusha
rolb
insl
iret
push
enter
push
fildll
dec
and
push
inc
jb
cmp
sub
xor
xchg
cld
xchg
cmpsb
add
jge
xor
insl
dec
nop
dec
addl
mov
mov
sahf
out
repz
decb
xor
xor
idivb
or
push
inc
out
out
jbe
pop
xor
lods
int
xor
addl
and
push
adc
out
and
fmuls
in
je
frstpm(287
and
stos
lods
add
out
push
andl
pop
rorb
mov
and
mov
adc
mov
fdivs
push
adcl
mov
iret
pop
test
jb
sub
daa
dec
jae
mov
xor
lods
xor
aad
cmp
or
sbb
cmp
shrl
jo
cmpsl
xchg
test
add
add
or
jnp
and
sarl
mov
xor
test
pop
dec
cmp
lds
roll
mov
and
xor
pop
sbb
insl
and
mov
xlat
rorb
mov
fadds
xchg
fnstenv
scas
outsl
test
mov
pop
cmp
mov
pop
sbb
enter
ss
push
mov
mov
xchg
or
adc
and
clc
mov
mov
in
fstl
js
int3
ficompl
inc
lock
pusha
hlt
push
pop
mov
rcl
loopne
push
pop
mov
popl
notl
add
sub
jb
rolb
add
or
adcl
scas
cmp
es
jg
add
or
mov
jecxz
and
sbb
cmp
mov
cmpsb
cltd
cmp
xchg
inc
push
inc
xor
rcrl
and
sub
or
lds
pop
and
mov
cmp
xchg
adc
add
xchg
push
or
out
push
add
fcoms
ret
pop
mov
xor
pop
add
hlt
cmc
dec
push
mov
js
aaa
mov
sti
xor
adc
push
sub
xlat
std
sbb
lret
cmp
jp
xchg
cmp
add
and
sarl
push
test
sub
jnp
neg
daa
lahf
mov
es
and
mov
mov
add
out
loopne
xchg
ret
dec
mov
lret
loopne
jns
xor
add
clc
pop
adc
fucomi
in
rorl
inc
fucomp
add
mov
or
or
cmp
cli
add
push
cmp
cmp
je
xor
fadds
in
push
loopne
jg
popa
inc
pop
jo
loopne
mov
push
inc
loope,pn
loopne
aaa
mov
es
aam
xor
inc
rolb
rcl
jp
rcrb
bound
mov
out
xorl
cmp
subl
les
and
int
add
stos
or
mul
xor
in
push
cmp
jae
cmp
cmp
sbbb
iret
mov
push
jle
jns
repz
out
or
push
inc
adc
rorb
popa
push
adc
mov
adc
xchg
pop
in
in
mov
bound
daa
mov
jb
popa
and
ja
lods
shrl
mov
pusha
ss
roll
aad
or
movsb
mov
push
cltd
nop
inc
mov
je
pushf
xor
stos
cwtl
fwait
andb
jno
jmp
adcl
ds
ret
push
jmp
sub
xchg
adc
mov
adc
cmp
mov
test
add
or
int
xor
inc
fsubrs
mov
filds
cmp
mov
or
push
sub
and
lods
shr
push
aaa
test
mov
dec
sbb
out
pushf
dec
pop
inc
mov
ds
or
setb
xor
loopne
aad
sbb
test
ds
inc
test
and
dec
loopne
loopne
ds
cmp
loopne
loope
ret
aas
cmpsb
in
and
cmp
pop
inc
mov
call
add
inc
popa
jle
repnz
xchg
push
ds
daa
test
jns
mov
push
call
xchg
xchg
insb
into
cmp
or
insl
xor
dec
cmp
test
mov
inc
cmp
inc
cmp
mov
test
add
and
in
mov
gs
loopne
mov
or
and
aaa
adc
xor
fsubs
fdivs
and
aam
add
pop
cmp
sbb
push
int
xor
adc
int3
and
int3
mov
enter
movl
jns
out
sahf
inc
pop
adc
mov
mov
inc
inc
jecxz
nop
sahf
out
mov
add
daa
jl
inc
and
fdivs
and
aaa
sbb
cwtl
adc
mov
or
leave
cmp
inc
arpl
xor
cmp
ret
pushf
lods
cwtl
cmp
and
dec
and
cmp
cmp
push
rcrb
cmp
dec
cwtl
fdivl
pushf
jno
and
mov
and
icebp
pushf
das
or
adc
cmp
add
sbb
jmp
inc
adc
and
add
cwtl
mov
xchg
sbb
mov
movsb
enterw
pusha
mov
jno
call
inc
jmp
or
or
loope
mov
dec
dec
lods
daa
and
in
inc
jl
or
cmp
or
dec
mov
je
or
je
jmp
sub
je,pn
sub
cs
leave
xor
pop
insl
dec
xchg
jmp
fisttps
cmp
decl
cli
jbe
sbb
addl
in
call
sbb
jno
and
inc
inc
xorb
sbbb
mov
rcrb
sbb
xchg
push
rcll
pushw
cmp
push
lea
sub
outsb
inc
insl
cs
xchg
dec
or
in
roll
inc
inc
lock
scas
or
push
nop
fmulp
aam
cmc
clc
testw
mov
and
inc
mov
mov
jne
mov
add
mov
imul
xor
add
ds
adc
mov
cmpsb
fcomps
lea
adc
and
stos
cmp
test
scas
or
into
mov
dec
bound
fstps
xchg
pop
mov
jne
and
pop
addl
das
or
orb
inc
dec
lahf
or
js
fwait
stc
xchg
dec
sbb
fistpll
sub
adc
and
bound
ret
pop
push
sbb
lahf
pop
cmp
push
pop
mov
mov
or
daa
push
inc
das
orl
dec
sub
inc
call
iret
inc
push
xor
pop
out
add
inc
and
xchg
adc
push
in
dec
enter
sar
pop
mov
mov
icebp
cmp
mov
mov
cld
jo
js
mov
cmp
push
cmp
sub
and
or
sub
jle
mov
or
push
sbb
add
mov
or
jmp
xchg
out
scas
and
push
xorb
bound
mov
jl
jno
jne
jmp
lods
add
or
test
in
jo
hlt
mov
dec
aaa
hlt
dec
sub
ss
pop
and
cli
inc
mov
aaa
jmp
and
into
xchg
adc
dec
adc
adc
or
push
mov
gs
jecxz
loop
or
or
mov
je
lahf
dec
testl
or
sbb
popa
and
pop
xacquire
inc
push
fwait
cld
fcomps
add
inc
outsl
jne
xchg
adc
jb
outsb
arpl
xor
dec
insb
pusha
sbb
adcl
pop
pop
pop
repnz
and
outsb
imul
cld
jl
dec
inc
arpl
pop
add
inc
adc
adc
push
sbb
cmp
pop
sahf
xchg
ret
adc
mov
cmp
shlb
aaa
ss
add
xor
jmp
testb
fadds
mov
out
ja
stos
xchg
push
movsb
enter
inc
jg
cmp
aad
mov
sti
add
mov
xor
sbb
xchg
inc
ljmp
sub
fists
rcll
cld
std
stos
inc
sbb
or
das
jne
sbb
dec
push
inc
adc
sub
popa
into
mov
hlt
pop
or
notl
push
mov
pusha
push
or
and
movsl
and
dec
or
mov
inc
cmp
lahf
enter
jae
inc
outsb
jns
inc
outsl
sub
inc
push
dec
dec
cmp
gs
push
cltd
dec
sbb
or
sub
hlt
addb
ds
cmpsb
push
xor
imul
addb
mov
mov
or
pop
cs
mov
rcr
dec
xorl
sbb
cwtl
cmp
sub
lret
daa
and
mov
sub
ss
jb
fcoml
in
enter
adc
xor
movb
daa
sbb
xchg
push
adc
test
into
shll
insb
incl
or
js
jge
cmp
je
jbe
movsb
pop
rorb
xchg
fadds
sub
fdivr
pop
mov
inc
lea
test
and
inc
mov
cmpl
adc
add
or
cmpl
int3
into
mov
call
mov
inc
and
ret
inc
ljmp
rclb
mov
xchg
pop
sub
sbb
js
adc
cmp
and
in
repz
inc
and
pusha
incl
call
rorl
or
add
xor
push
push
and
into
cltd
hlt
addr16
aaa
adc
jbe
enter
pop
sbb
mov
rclb
nop
insl
push
adc
sar
jb
or
jbe
rol
push
xor
sarl
mov
push
mov
mov
outsb
jg
cmp
setg
inc
mov
nop
jmp
inc
fnstenv
loope
push
or
ss
inc
dec
adc
push
daa
dec
and
or
es
and
pop
popf
push
loopne
or
push
inc
xor
push
or
inc
sbb
je
sbb
test
add
test
loope
jg
jbe
out
and
dec
add
dec
jne
cmpb
xchg
movsb
push
cmp
roll
sbb
xor
mov
xor
cmp
icebp
dec
xchg
dec
xor
aaa
enter
mov
dec
das
test
nop
mov
mov
inc
repz
aad
sub
or
addr16
hlt
sub
inc
lret
dec
out
cmc
subl
jae
jne
push
mov
sarl
lret
cld
inc
adc
lods
sti
ret
inc
mov
inc
gs
pop
stos
mov
test
and
xor
or
aaa
pop
or
sbb
xchg
adc
dec
mov
out
mov
imul
lods
shrd
scas
nop
xchg
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
cwtl
cltd
lcall
popf
sahf
daa
daa
daa
daa
lahf
addb
addl
xchg
or
into
inc
das
adc
sbb
sub
das
loope
movsb
mov
add
enter
push
add
inc
adc
mov
ljmp
or
add
lea
mov
ss
push
adc
insl
push
cmc
decl
sbb
test
jne
jb
push
or
sbb
add
cmp
xchg
mov
inc
jns
or
outsl
dec
pop
sbb
jp
push
pop
mov
sti
inc
dec
cmpl
cli
and
push
inc
ffree
test
or
sbbl
or
dec
test
or
sbb
or
filds
cld
roll
fisttpl
mov
mov
jl
or
sbb
push
or
rcr
pop
and
push
mov
dec
and
sbb
outsb
sbb
push
jmp
jle
in
xchg
fnsave
loop
mov
insb
sbb
test
cmp
hlt
out
jne
pop
push
mov
mov
mov
cmpb
push
testb
dec
ja
lar
aam
jp
decb
ja
or
jmp
call
adc
adc
out
addr16
hlt
cld
push
add
add
adc
add
mov
int
pop
jle
add
jne
cmp
mov
in
ds
fidivrs
push
adc
pushl
mov
mov
cmpb
ja
jb
add
add
call
lret
xchg
das
iret
out
mov
mov
mov
pop
popa
or
mov
mov
test
xor
adc
incl
cmp
pop
dec
aam
jno
loop
or
xchg
sti
jg
xchg
xchg
into
mov
cmp
lcall
stos
mov
outsl
or
dec
addr16
add
xchg
scas
enter
lea
jecxz
mov
lahf
scas
ds
push
rol
subb
lahf
adcl
stos
pop
loope
andl
mov
fisubrl
cs
or
add
mov
lock
inc
mov
jg
push
fidivrs
movb
add
sub
fcoms
lcall
push
pop
add
pop
dec
adc
push
push
mov
cmpb
loopne
pop
pop
pop
or
rcl
or
jmp
jo
movsl
mov
jp
out
dec
mov
outsl
test
adc
xor
in
or
sbb
insb
js
sub
push
push
nop
loope
pop
jne
xchg
ffree
adc
adc
add
jecxz
push
inc
mov
cmpl
fisttpll
test
inc
wrmsr
and
or
repnz
adc
cltd
mov
nop
out
pop
loopne
add
imul
scas
iret
or
push
dec
bound
mov
jne
hlt
or
push
ja
jnp
jo
test
xchg
mov
lahf
leave
fldt
daa
mov
loopne,pn
dec
push
sbb
mov
addr16
jmp
add
repnz
xlat
push
fistpll
insl
fmuls
xchg
mov
add
jo
in
call
cmpsb
loopne
cwtl
cltd
jge
das
pop
jns
out
inc
push
pop
insl
sbbl
test
stc
mov
frstor
mov
jl
push
test
cmp
popf
xor
xor
hlt
mov
sarl
and
mov
aaa
imul
xor
scas
add
sbb
clc
adcb
mov
mov
sub
mov
pop
jp
clc
push
cmp
and
jno
pushl
and
ja
insl
sti
add
call
pop
insb
rcrl
jecxz
adc
movsb
add
cmpsl
cmpb
fildll
dec
or
jae
jne
xor
cld
popf
pop
adc
ss
jbe
add
aas
jns
aad
imull
or
inc
iret
and
out
pop
inc
pop
mov
and
mov
nop
nopl
pushl
inc
cvttps2pi
or
dec
push
dec
push
dec
pop
push
dec
or
jb
or
call
mov
invd
dec
push
gs
imul
pop
or
add
inc
fldl
lea
pop
stos
nop
sbbb
fisubs
insl
dec
es
push
out
pop
and
mov
lahf
or
pop
inc
inc
push
jb
and
rclb
mov
mov
jbe
xlat
or
fwait
xchg
pop
fdivr
fcoms
iret
adc
out
or
addr16
push
inc
add
outsb
push
insb
jbe
push
or
add
add
pop
add
mov
jae
movsb
je
or
int3
outsl
or
pop
adc
mov
mov
xchg
lds
stos
repnz
pusha
xchg
nop
adc
imul
pop
adc
sbb
scas
fsubrl
cs
adc
dec
xlat
pusha
iret
cmp
adc
fdivs
jae
mov
push
ja
jle
stos
shrl
inc
cmp
xchg
insb
jp
in
icebp
nop
js
dec
fwait
inc
fisubrl
jne
push
orb
jnp
mov
popa
aas
xor
pop
push
pushf
fsubl
pop
out
aaa
vmread
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
nop
mov
out
negb
mov
xchg
and
and
popa
dec
push
cs
js
add
push
inc
imul
dec
add
cs
data16
outsl
push
cmpb
addr16
sbb
sbb
adc
dec
outsl
inc
insb
test
sub
or
mov
dec
outsb
insb
jns
inc
jl
je
adc
scas
mov
roll
in
ss
push
mov
add
or
insb
or
into
icebp
negb
dec
imul
add
test
or
inc
pop
pop
add
mov
dec
repnz
imul
je
add
jo
dec
pusha
stc
add
ss
mov
dec
gs
cwtl
sbb
fldcw
out
add
jne
cmpl
fwait
cmp
or
pop
push
gs
andb
or
arpl
shrl
or
mov
nop
mov
call
or
cmp
dec
and
push
pop
dec
fs
dec
sbbl
outsb
mov
scas
ds
xchg
out
jb
or
cld
dec
and
or
sar
pushf
pop
lods
nop
push
gs
push
sub
add
cs
sbb
inc
dec
scas
push
inc
and
inc
sbb
mov
cmpsw
or
arpl
mov
xor
shlb
mov
scas
mov
shlb
and
mov
push
imul
mov
je
out
data16
jo
push
mov
in
aas
incb
cwtl
nop
jb
daa
or
outsl
sub
xor
addr16
gs
dec
sbb
push
sahf
mov
push
sbb
xor
mov
sbb
hlt
xchg
ss
pop
popl
add
lock
test
sub
dec
mov
add
scas
aas
and
call
jbe
add
cmpsl
enter
add
dec
fidivs
jg
sahf
adc
mov
or
mov
add
fldenv
test
movl
sbb
stc
test
das
fdivrs
sbb
shr
in
int3
int3
in
jbe
push
add
outsl
xorb
sbb
lret
mov
push
enter
sbb
scas
push
movsb
fbld
icebp
aam
add
fwait
movb
adc
inc
fucom
pop
xor
cmp
clc
sub
cmovns
std
push
leave
jae
fs
jo
or
fmuls
jae
push
rclb
sahf
cmpsb
add
add
aaa
add
mov
push
sbb
dec
lcall
or
loopne
push
fxch
popf
inc
and
lods
cmpsb
xor
int
in
jo
and
add
mov
sbb
dec
sbbb
in
rcll
test
lahf
out
push
loopne
cmp
lock
sahf
adc
shl
test
hlt
inc
or
or
pop
sbb
sbb
or
insl
test
aaa
test
push
insl
pop
daa
xchg
bswap
inc
xor
imul
dec
cmp
or
push
pop
je
scas
and
mov
mov
mov
popf
loope
jl
mov
cwtl
lods
es
cmpsl
push
in
mov
ficomps
mov
inc
outsb
insb
push
or
jo
sti
into
je
mov
cmp
add
lahf
mov
mov
xadd
sub
outsl
cmp
push
test
inc
ja
push
pop
push
xor
push
mov
je
xor
push
mov
mov
cwtl
inc
dec
mov
or
mov
jnp
test
xchg
das
xchg
xchg
in
mov
or
addr16
popa
rcrb
inc
pop
push
mov
mov
adc
sarl
xchg
fincstp
cwtl
mov
repnz
mov
loope
dec
sub
repz
adc
xor
sbb
and
imul
roll
jbe
mov
testl
mov
push
cmpsl
in
or
or
jb
pop
adc
and
jb
sbb
sub
pop
jb
sub
add
mov
in
in
fisubl
in
jns
out
out
mov
out
sahf
pop
imul
mov
mov
sub
mov
or
cs
mov
test
jno
test
or
jl
iret
adc
rorb
dec
push
jns
cmpsl
fnstenv
test
push
repz
adc
fbld
sub
aas
or
jmp
inc
push
adc
jo
sarb
push
jae
sub
dec
lock
lahf
jb
mov
xcrypt-cbc
cmpsl
adc
cs
dec
repz
cmp
ss
out
int
xchg
push
fadds
pop
into
fmul
aam
jmp
int3
enter
fldl
rol
pop
jo
push
popa
jo
popa
call
adc
cmpl
inc
jo
icebp
push
je
sbb
and
inc
push
gs
cltd
sarb
mov
jno
cmpsb
jecxz
adc
mov
mov
mov
cli
neg
inc
fsubrs
js
add
mov
test
aam
cmp
loopne
aam
aad
jecxz
in
int
sahf
out
testl
decl
inc
int
dec
addb
sbb
nop
out
aas
sub
sbb
imul
push
je
scas
lret
mov
xor
cmp
sti
inc
addr16
pushf
pop
jnp
add
push
pop
push
enter
push
xchg
add
cmpsl
stc
push
js
sub
cli
mov
mov
cld
sti
mov
jmp
cli
stc
clc
push
push
push
push
push
push
repz
cmpsb
icebp
push
lcall
out
add
mov
push
add
add
push
sub
jns
sti
xor
fs
inc
imul
out
cwtl
push
or
cmp
pop
push
mov
test
shlb
add
xorl
cmp
cmc
add
and
jbe
adcl
push
pop
xchg
pushf
push
cmpsl
jge
out
or
pop
hlt
push
push
les
rolb
push
arpl
mov
imul
add
fstps
lock
pop
leave
adc
je
in
inc
test
inc
lahf
negb
or
cmp
fdiv
xor
je
push
cmp
call
addl
push
or
push
aaa
push
insb
xor
sub
jne
lds
dec
push
dec
dec
fs
addb
js
jns
add
adc
aaa
pop
push
loopne
in
mov
jo
push
push
clc
cld
rcrb
mov
movsl
inc
adc
mov
out
push
add
std
aam
adc
vmread
inc
rorb
mov
test
js
push
and
mov
jb
jne
scas
rcl
dec
sahf
shlb
or
das
add
pusha
es
mov
lahf
enter
lahf
inc
push
pusha
test
js
mov
and
push
lock
inc
lcall
sub
scas
orl
inc
ja
sub
push
cmpsb
icebp
xor
jno
jne
idivl
subb
call
xchg
cmpsl
xor
hlt
call
inc
jecxz
adc
mov
dec
movntps
fwait
sbb
and
sub
aad
mov
sbb
mov
xorl
and
mov
and
inc
or
aad
loop
hlt
in
lahf
add
xchg
outsb
sub
adc
lahf
les
and
cmpb
in
add
inc
pop
test
test
aaa
loope
mov
fsubr
cmp
and
add
push
or
xchg
popa
sub
xchg
mov
enter
add
das
in
push
xor
push
or
and
faddl
rcr
in
dec
jl
inc
inc
cwtl
movsl
lods
mov
hlt
push
inc
cmp
cmp
push
add
mov
hlt
xor
lock
mov
nop
inc
and
inc
or
mov
fldl
out
push
in
setge
push
cmpsb
les
adc
inc
movsb
sbb
or
jo
xor
xor
popa
aad
mov
lods
data16
jl
jle
insl
inc
add
test
test
or
pop
adc
fwait
lods
testb
dec
mov
dec
and
dec
adc
sahf
push
and
xchg
lahf
hlt
in
movsb
fwait
sub
mov
movsl
stos
aaa
add
orl
push
or
stc
inc
sbb
add
xor
repz
movb
add
pop
test
cmpsl
rcrl
loope
jmp
loopne
sbb
in
add
xor
pop
popa
cmp
clc
test
push
sbb
arpl
pop
stc
rolb
movl
mov
stos
or
jae
insb
push
dec
mov
je
scas
hlt
popf
dec
jle
wrmsr
dec
cmp
sbb
jp
shll
add
rol
jmp
pop
xor
or
adc
dec
jecxz
imul
movsb
mov
push
pop
and
adc
lock
outsb
clc
lea
push
sbb
les
jmp
jno
sbb
jl
jbe
lret
dec
in
in
cmp
int
fnsave
xchg
and
loopne
call
subb
xorb
mov
mov
xchg
lock
inc
loopne
stos
loop
fmull
je
xchg
sbb
ret
mov
les
aad
and
push
pop
cmp
test
scas
adc
sbb
sub
loopne
pop
fidivs
movsl
push
pop
xchg
xor
test
sbb
mov
fcmovnu
loope
or
rcll
pop
pop
sbb
push
adcb
dec
sbb
cmp
lock
cltd
add
lret
sub
mov
or
test
hlt
xchg
jno
mov
js
sub
ljmp
or
inc
inc
nop
or
push
lock
in
icebp
jne
rcl
mov
subb
push
dec
mov
add
xor
into
aas
icebp
inc
jecxz
cwtl
xorl
sbb
frstor
adcb
cmpsl
adc
dec
pop
pop
mov
nop
test
aas
shlb
orb
int3
out
and
sbb
and
add
loopne
mov
fs
test
xchg
clc
or
inc
mov
in
sbb
add
and
add
jbe
mov
sbb
mov
push
xor
push
or
mov
add
mov
jne
jns
and
pop
cmp
sub
enter
xchg
and
pop
rorl
je
mov
int
subb
pusha
xchg
sub
mov
test
repz
popf
fiaddl
cmp
add
mov
test
push
xchg
scas
jo
fisubrl
push
enter
test
lods
mov
add
mov
mov
or
aas
adc
or
daa
roll
mov
inc
mov
mov
push
or
or
adcl
stos
and
loopne
mov
pop
arpl
aam
jecxz
imull
cmp
orl
xor
or
xlat
jge
xor
adc
add
xor
xchg
ja
xor
jo
cmpsb
ror
icebp
mov
add
or
sub
notb
rolb
inc
push
add
adc
test
outsl
xor
xor
outsb
in
imul
mov
mov
fwait
sbb
xor
push
lret
jbe
adc
rolb
fs
jne
sbb
pushf
xchg
adc
pop
or
mov
incl
pusha
inc
adcb
popa
dec
aaa
dec
inc
dec
sbb
inc
mov
call
jg
sub
mov
sbb
pop
outsl
push
sub
cmp
pop
popf
sbb
insb
jmp
mov
jp
rclb
lcall
add
pop
mov
or
mov
icebp
push
rcrb
setne
mull
push
in
mov
enter
push
icebp
je
or
xor
push
test
mov
sbb
and
or
popa
push
xor
rolb
lret
sbb
inc
mov
sbb
insl
inc
pop
call
inc
pop
leave
mov
sub
jecxz
push
cmp
and
dec
insl
pusha
scas
adc
dec
mov
pushf
cld
and
jo
loopne
call
cmp
jg
and
sarb
mov
push
ret
adc
or
scas
sbb
or
add
adc
ljmp
je
leave
clc
mov
xor
ja
inc
cmp
pop
dec
inc
cld
add
lods
push
popa
inc
int3
adc
ret
popf
rclb
cld
pop
inc
test
cmp
xor
test
adc
leave
call
out
inc
cmp
negb
mov
fucomi
and
sbb
xor
xchg
aam
imulb
out
enter
mov
popf
and
jl
cmpb
inc
aaa
aas
or
aaa
xor
jae
les
or
fstpl
in
lods
test
and
or
pop
ja
xorl
data16
inc
dec
loope
icebp
or
aam
jne
jb
xlat
jg
adc
and
or
out
pop
fistps
ljmp
fisubs
in
lods
imul
mov
cwtl
icebp
decl
arpl
cld
dec
lock
jne
and
shl
pop
fwait
pop
subl
cwtl
aaa
inc
inc
pop
inc
fcoml
addb
out
sbb
mov
ljmp
pop
push
mov
sbb
dec
in
or
lock
ret
rol
and
mov
push
fsts
stc
rcrb
test
inc
jb
out
sub
bound
sbb
sarb
test
clc
pop
or
mov
lret
test
daa
mov
shlb
adc
push
lahf
in
jmp
cmp
jle
popf
popa
cwtl
jp,pn
cmp
mov
pop
mov
aas
nop
xchg
adcl
xor
dec
arpl
xor
pushf
dec
sahf
hlt
dec
xlat
inc
enter
fistpll
aam
sbb
out
push
nop
add
in
jecxz
icebp
add
out
cmp
hlt
hlt
sbb
and
sbb
adcl
orl
xchg
je
test
lock
pop
lock
imul
and
arpl
clc
rolb
or
adcl
or
sbb
adc
clc
lret
add
sbb
and
and
mov
mov
sbb
cwtl
mov
or
aas
push
insb
popa
xor
nop
inc
cld
sub
subl
add
and
dec
rorb
push
sub
out
and
pop
sarb
dec
add
mov
nop
mov
add
test
mov
xor
movb
mov
loopne
mov
int3
orl
in
in
dec
xchg
enter
cmpb
test
mov
inc
sbb
adc
jmp
push
add
mov
loopne
bound
cmp
and
dec
push
xchg
mov
lods
adc
xor
inc
add
push
sub
ret
jne
in
icebp
leave
cmpsb
and
stos
getsec
jbe
test
movsl
nop
cmpsl
in
xor
or
inc
push
xor
sbb
call
push
stos
aaa
inc
add
test
jge
sub
xchg
add
and
pop
sar
mov
cmpsl
xor
popa
cmpl
mov
iret
sbb
mov
lock
in
xor
sbb
push
sub
in
inc
pop
movsb
cmp
jmp
in
mov
adc
shl
add
shr
out
cmp
jae
dec
or
je
stos
adc
btr
aas
add
jl
inc
int
inc
cmpsl
lods
pop
mov
aaa
in
add
xchg
dec
jmp
dec
push
add
in
imul
and
cmp
je
daa
jbe
enter
mov
xchg
add
mov
into
dec
or
and
pop
xor
or
add
fstpt
jmp
push
out
inc
je
loopne
jne
aad
jne
dec
mov
mov
or
mov
dec
mov
aad
and
rorb
adc
adc
cmpsl
dec
cltd
inc
mov
shrl
cmp
ja
add
sbb
sbb
sbb
dec
in
jns
test
lea
cltd
sbb
jb
mov
sub
push
cltd
dec
pop
xchg
inc
mov
imul
in
arpl
add
adc
mov
inc
subl
popa
sbb
sbb
cmp
movsb
test
pop
or
push
push
cmp
cmp
cmp
idiv
pop
movsb
rorb
jbe
push
gs
mov
and
testl
and
push
pop
jno
mov
ss
fwait
or
scas
popa
lea
fsubrp
ss
test
inc
xor
pop
or
ljmp
dec
test
xchg
leave
pop
and
mov
or
sbb
sub
stos
iret
xor
xchg
or
push
mov
add
aad
adc
jae
xchg
xchg
imul
mov
inc
orl
cwtl
jl
and
jp
dec
stos
test
sahf
fsts
add
mov
cmp
bound
xor
add
in
xor
mov
loopne
adc
addl
dec
pop
pop
or
pop
aam
push
sbb
inc
negl
shlb
loopne
popa
mov
xchg
cmp
shrb
popf
sub
lea
xchg
sub
inc
jbe
int
les
mov
mov
jb
inc
push
pop
pop
push
xor
add
and
stos
je
push
test
xlat
or
sti
dec
aaa
mov
jne
nop
mov
and
or
mov
pop
or
in
push
cmc
ss
push
and
not
xor
enter
jmp
aaa
popa
mov
push
lahf
popa
js
cmp
push
push
sarl
mov
or
jecxz
loop
sahf
sub
jge
sbb
mov
and
push
imul
adc
enter
daa
adc
rclb
jecxz
push
mov
jl
stos
in
cmpsl
or
jne
je
xchg
dec
jb
lea
shrb
cmpsl
adc
lock
loopne
push
sbb
jne
and
int
aas
xor
jmp
adc
push
add
in
mov
sarb
inc
enter
nop
and
enter
mov
mov
inc
cmc
adc
jae
icebp
jne
arpl
clc
mov
push
ficoml
push
and
das
adc
and
mov
add
sbb
mov
push
dec
add
dec
add
das
pop
jno
jo
sub
lods
mov
or
pop
test
cmp
scas
aam
neg
cmpsb
pusha
repnz
mov
js
and
mov
xor
outsb
cmp
aam
or
push
fmuls
push
jl
adc
add
add
imul
adc
mov
cltd
fs
in
imul
jb
loopne
sub
bound
xchg
movsl
roll
mov
dec
ret
add
mov
push
in
aam
fsubrl
pop
inc
jecxz
out
ret
add
or
jne
orl
inc
ret
popf
insb
and
dec
clc
xor
cmp
imulb
jb
nop
xchg
inc
pusha
adc
inc
push
add
lret
movsb
inc
or
sbb
int
sub
scas
lcall
inc
sbb
js
adc
test
call
and
adc
gs
call
add
push
movsb
xchg
mov
popa
jno
jecxz
test
xchg
push
xchg
call
pusha
xlat
rcl
and
dec
or
pop
lock
inc
maxps
xchg
outsb
inc
stos
push
jo
xchg
xchg
hlt
das
movsl
lret
insb
add
and
nop
xchg
add
ja
cmp
les
jo
je
les
fadds
fwait
sbb
lock
loopne
cmp
sub
sub
adc
mov
inc
shlb
lcall
andb
inc
mov
fs
inc
push
and
xchg
and
cmp
cmp
adc
stos
xchg
pop
imul
iret
movsb
cmpsl
pop
dec
int3
mov
xchg
jg
jmp
insb
cmp
lods
push
fidivl
xchg
and
mov
mov
int
stos
pop
roll
cmp
and
push
or
enter
test
push
ret
inc
pop
gs
popa
sub
enter
andl
xlat
pop
adc
loop
test
pop
mov
adc
shlb
push
cmp
shlb
dec
cmpsb
into
inc
inc
push
adc
test
mov
movsb
hlt
and
push
test
loop
push
clc
scas
inc
movsb
in
leave
fldt
imul
insl
add
dec
sub
and
bound
inc
scas
sub
nop
mov
or
mov
or
jne
mov
test
ljmp
aas
cmp
inc
daa
xchg
stos
sub
cld
jle
in
inc
sub
out
mov
pop
adc
lcall
and
push
pop
push
ret
testb
or
add
cmp
insb
sbb
pushw
aaa
cmp
jae
adc
dec
pop
pop
addr16
addb
xor
add
jp
push
adc
fdivrl
adc
pop
dec
adc
rcr
mov
adc
jno
imul
adc
sub
test
pop
inc
roll
cmpsb
roll
mov
arpl
xor
fdivrs
mov
and
sbb
xchg
sub
cmp
and
imul
popa
xchg
into
mov
insl
test
cwtl
adc
sbb
jmp
enter
and
in
pop
xorb
push
sub
sub
out
sbb
mov
xlat
xchg
test
xchg
jae
xor
pop
dec
adc
addb
cmp
in
jl
repz
lea
rolb
add
mov
test
imul
test
adc
pop
jp
rorb
mov
into
push
add
leave
nop
pop
or
adc
add
adc
imul
add
in
sbb
call
insl
inc
or
lock
call
enter
mov
adc
insl
push
int
mov
cmp
xchg
outsl
jg
push
add
call
mov
in
dec
xor
inc
rorb
add
mov
and
test
jne
pop
lods
lahf
push
cmp
sbb
jo
adc
jle
mov
push
or
rcll
in
pushf
push
xchg
jl
adc
push
and
out
out
mov
adc
mov
adc
bound
int3
and
dec
lahf
sbb
enter
sbb
lods
add
jno
adc
jmp
hlt
xor
pop
lahf
lods
test
movsb
imul
mov
push
sbb
add
add
jle
add
mov
mov
push
xlat
fimuls
adc
sbb
imul
jmp
or
dec
push
test
mov
cmp
dec
push
ljmp
push
aas
and
sub
push
lods
add
jg
dec
rclb
xchg
cs
push
dec
sar
or
shll
xor
hlt
sbb
lock
cmp
repnz
dec
in
in
movsb
std
or
jg
pop
in
mov
call
jne
fwait
push
push
faddl
pop
push
mov
jae
cltd
in
push
jge
stc
or
jae
clc
mov
negl
dec
hlt
jl
das
popa
lds
sbb
or
sbb
or
inc
pushf
sbb
nop
adc
lock
or
mov
or
adcl
popf
lock
pop
mov
sbb
xchg
xchg
or
xor
add
clc
push
nop
push
roll
dec
rolb
dec
jg
add
loope
stos
adc
je
addr16
xlat
mov
das
push
nop
dec
lods
or
xchg
dec
and
in
sub
dec
dec
enter
add
mov
iret
iret
js
mov
mov
in
xchg
jge
adc
xchg
shrb
jle
sbb
pop
mov
sub
adc
mov
scas
or
scas
add
mov
decl
dec
pop
mov
call
sub
and
in
stos
or
xor
scas
xchg
pop
or
clc
pop
fcomps
test
adc
popf
fdivrs
add
loopne
in
rep
fcomps
adc
xchg
in
adc
adc
inc
sbb
fmull
faddl
or
add
stos
dec
dec
sti
adc
mov
adc
arpl
add
pushl
sub
sbb
mov
push
pusha
mov
and
dec
mov
or
pop
fwait
push
sub
mov
in
lret
lods
mov
inc
or
loope
test
xor
add
dec
scas
or
in
sbb
mov
mov
adc
mov
sahf
insl
inc
fldt
dec
cmp
or
jge
movsl
add
in
add
or
cld
xor
cltd
sub
jl
mov
or
sub
int3
sbbl
in
movsl
or
pop
xchg
xor
jb
shl
enter
mov
mov
fwait
aad
repnz
pop
sbb
jae
mov
lods
aas
aaa
add
mov
or
in
adc
outsl
add
and
mov
and
lcall
or
add
mov
cmpsl
xchg
xchg
push
lock
pop
pop
mov
or
lcall
stos
mov
add
fadds
or
fdivrl
pop
fdivrs
imul
out
test
mov
outsl
notb
push
loopne
adcl
mov
pop
xor
gs
sbb
fldt
push
das
stc
pop
movsb
arpl
push
dec
jnp
fistpll
jge
fsubs
daa
adc
fcom
aam
rorb
inc
add
popa
add
fistpll
mov
arpl
mov
push
mov
iret
bound
mov
das
dec
mov
mov
or
mov
dec
popf
inc
push
cmp
lret
dec
fnstenv
mov
cmpsl
or
cmp
push
pusha
sub
add
sub
notb
sbb
enter
out
mov
adc
jge
insb
add
jecxz
and
sbb
sub
push
scas
lods
loopne
or
es
xchg
push
sub
adc
xchg
adc
cmp
pop
out
mov
adc
sbb
lods
dec
pop
adc
lahf
or
mov
adc
push
loope
adc
in
cmp
push
jecxz
and
push
or
pop
ss
add
cmpb
call
push
adc
jne
aas
pop
sbb
pop
adcl
sbb
xor
sti
mov
orb
bound
push
push
and
les
xor
sbb
addr16
int3
or
and
inc
add
push
out
jae
push
adc
les
adc
in
out
bound
or
add
cmpsb
adc
repz
push
add
mov
ret
dec
movsb
or
or
test
imul
sbb
inc
or
dec
and
push
inc
lcall
pop
hlt
mov
add
hlt
call
jae
mov
clc
je
les
clc
dec
mov
pop
push
pop
xchg
orb
adc
jmp
fdivr
hlt
aam
cmp
jmp
add
inc
cmp
mov
bound
mov
sub
mov
pop
clc
xchg
cmp
rclb
sar
add
loope
mov
inc
xchg
inc
mov
xchg
add
fcomp
and
mov
fcmovne
aam
inc
add
add
inc
imul
mov
or
out
inc
ret
mov
mov
ds
nop
cmpxchg
out
fldt
pop
pusha
test
shll
jb
out
pop
or
jb
mov
pushf
rcr
hlt
insl
xchg
jnp
rolb
add
jne,pn
testb
in
dec
rep
mov
lods
aaa
dec
dec
add
dec
xor
mov
adc
mov
dec
pop
adc
dec
add
push
sbb
out
add
adc
loope
test
or
lods
in
dec
xor
mov
dec
xchg
loopne
inc
dec
shlb
loopne
lds
sub
add
in
mov
ret
int
aaa
les
lcall
add
fs
lea
add
fildl
pop
mov
mov
enter
popl
sti
jns
je
jmp
jne
adc
ds
ljmp
lcall
movsl
lds
adc
or
pop
stc
jne
jno
out
push
les
and
imul
and
mov
adc
mov
jnp
in
fnstcw
idiv
je
clc
lds
lds
mov
daa
enter
and
push
or
xor
xchg
mov
loope
push
es
fs
jmp
adc
mov
test
xchg
xor
mov
inc
dec
mov
xor
fs
out
mov
push
fdivrs
jbe
push
popa
mov
pop
leave
aas
push
scas
jge
xor
pop
pop
call
scas
addr16
scas
pop
test
xchg
es
pop
cmp
cs
xor
and
ja
add
dec
call
jg
jge
jne
dec
add
nop
out
ret
bswap
push
inc
cs
dec
pop
cmp
jns
pushf
mov
movsb
dec
in
repz
or
pop
jno
jmp
mov
jnp
inc
imul
movsb
sub
sub
adc
lock
dec
lods
mov
or
mov
dec
jno
jmp
fidivs
lahf
jns
pop
sub
dec
cmp
testb
addr16
adc
dec
jae
shrl
and
and
push
lcall
mov
sbbb
cmp
mov
test
jb
or
push
out
mov
iret
dec
add
inc
add
push
cwtl
mov
adc
aam
cmpsl
adc
rorl
add
cmp
push
fucomi
inc
cmp
ficoml
jg
and
fnsave
add
mov
stc
jo
ret
mov
adc
push
sahf
loopne
lahf
dec
jo
lea
out
mov
mov
dec
test
addb
sbb
inc
push
and
cltd
cmp
xlat
cld
dec
outsl
hlt
scas
dec
repnz
popf
lret
mov
aas
mov
cvttps2pi
aaa
inc
movsb
and
test
cmp
xor
popa
push
pop
addr16
and
push
leave
sbb
test
lea
dec
push
push
sbb
pop
or
ja
push
sbb
xchg
in
push
push
jmp
push
or
or
sub
iret
cmp
out
jnp
out
xlat
hlt
cmp
orb
mov
cmp
mov
or
enter
dec
dec
dec
lea
cmc
add
jne
subl
pop
arpl
inc
xchg
push
inc
mov
es
cmpsb
call
sbb
ljmp
pop
xor
cs
mov
or
mov
and
lods
xor
adc
add
mov
fnstsw
lock
mov
mov
cmp
mov
orl
rcr
movsb
scas
push
xchg
inc
js
add
or
adc
add
or
test
and
push
pop
cmp
mov
mov
cmpb
into
xlat
push
aam
pop
popl
cwtl
scas
inc
sub
adc
mov
inc
xchg
mov
dec
or
sub
xor
xor
xor
aas
sub
test
imul
and
dec
pop
call
sub
sbb
out
xor
dec
add
loopne
inc
inc
addb
cmpl
ret
push
pop
ljmp
out
je
in
lods
adc
dec
movd
clc
inc
je
mov
ja
jecxz
mov
test
cs
popa
push
insl
les
cld
or
pop
adc
mov
pop
mov
add
mov
mov
add
ret
jb
lock
adc
dec
adc
mov
fldcw
sbb
test
enter
testb
adc
cmp
lret
mov
adc
std
or
jne
xchg
mov
mov
xlat
or
dec
add
push
cld
movsl
jo
sbb
mov
cmp
lcall
mov
xchg
daa
and
dec
jle
mov
add
push
dec
scas
sub
and
pushf
arpl
rcr
xor
push
mov
jmp
les
cmp
sbb
and
je
xlat
outsb
cmpsl
xchg
je
inc
call
cmp
xlat
adc
or
roll
rcrb
xchg
ss
shrl
pop
aam
lods
dec
inc
pop
sub
clc
pop
popa
xor
xor
ret
cld
mov
aad
sbb
faddl
lea
add
dec
jmp
push
mov
test
cld
xchg
lods
mov
inc
insl
mov
gs
pop
les
cmp
push
mov
std
data16
pop
push
scas
sbb
sbb
mov
push
ret
mov
push
not
and
int3
jl
push
sbb
dec
add
push
or
cmpsb
dec
inc
shl
add
lret
lock
rorb
insl
pop
imul
dec
or
lock
pop
sbb
add
bound
xlat
adc
adc
clc
sarb
lock
xchg
adc
and
pop
mov
je,pt
mov
add
paddsb
mov
sub
in
mov
aas
daa
pop
clc
imul
mov
mov
mov
call
adc
rclb
in
imul
add
mov
addr16
sub
lret
pop
xchg
sbb
mov
push
and
in
jg
add
and
mov
aad
push
sub
mov
mov
in
and
dec
nopl
je
in
or
inc
nop
or
jne
in
and
cs
dec
push
mov
fsubrs
in
jb
mov
push
shlb
sbb
mov
adc
sbb
lcall
fsubs
xor
sbbb
and
jbe
rcll
call
push
inc
pop
sub
adc
test
dec
add
insb
cmpb
push
mul
je
jno
add
lds
pop
ss
sub
add
jae
ja
std
fwait
ret
adc
mov
mov
sub
outsb
fcompl
jne
lds
dec
add
cmc
add
dec
jae
pop
jno
ficompl
mov
add
sub
sbb
adc
in
xor
fisttps
push
adc
popa
unpckhps
xlat
sub
xor
pop
cmp
and
aaa
sub
pop
mov
sbb
in
push
scas
sbb
stos
scas
lds
imul
fcomps
add
shlb
fcomp
out
cmp
fildl
fsub
cld
rcr
add
outsb
xorl
daa
push
and
jne
and
xchg
sub
into
fiadds
mov
dec
push
add
pop
mov
push
jmp
push
and
and
hlt
lods
sub
insb
aam
sub
iret
fnstcw
cld
xchg
pusha
push
pop
sub
movsl
in
sbb
sbb
fs
shr
mov
inc
in
or
or
lea
xor
pop
xchg
sbb
xor
jl
or
js
int3
mov
fildll
adc
insl
call
fldt
xchg
out
mov
add
add
sub
inc
adcb
or
fmuls
loopne
sub
fisttps
and
cmpsl
adc
lcall
out
dec
imul
xorb
nop
ja
add
inc
fisttpl
add
mov
and
lahf
pop
pushf
out
scas
mov
add
mov
outsb
dec
sub
loope
dec
jmp
pop
inc
sbb
not
mov
sbb
jb
or
adc
mov
in
popa
mov
sub
push
cwtl
fs
sub
shlb
xor
inc
scas
movsbl
mov
xor
mov
push
mov
in
pop
xor
jnp
popa
cmp
jne
negl
setno
pop
jmp
mov
je
xchg
daa
daa
orl
xchg
adc
and
cmp
jne
add
loope
lock
inc
shlb
push
or
mov
out
and
test
das
dec
push
fsubrp
pop
add
adc
sarb
jno
icebp
push
or
push
adc
xchg
mov
pop
cli
and
fcomp
les
rclb
int
es
ret
dec
xor
and
in
cld
add
movsl
dec
dec
add
hlt
fsubrs
jmp
or
push
fdivrp
sarb
mov
test
test
loopne
dec
sbb
insl
sub
enter
cli
fists
jbe
pop
leave
cmc
or
mov
pop
ret
data16
jae
or
or
sbbb
pop
hlt
mov
sub
jl
lret
cmp
pop
jecxz
sahf
rcrb
jecxz,pn
fdivs
out
add
jne
push
scas
jo
mov
inc
loopne
int3
pop
pop
shlb
cmp
in
inc
push
sbb
jnp
push
imul
ret
push
inc
jmp
adc
in
shlb
into
int
or
in
icebp
mov
jo
inc
xchg
cmpsb
adc
jno
mov
mov
cwtl
sbb
int
pop
out
cmp
cmpb
or
out
ret
xchg
xor
sbb
or
fiadds
sarl
or
hlt
test
pusha
outsb
scas
mov
or
inc
or
aaa
js
jp
push
pusha
sub
adc
in
xchg
ret
mov
dec
xor
push
sub
outsb
loopew
push
jecxz
pop
jns
add
sbbl
add
hlt
imul
or
pushf
add
repnz
es
add
mov
or
ds
subl
push
clc
jns
sahf
push
jge
and
or
ljmp
inc
dec
pop
call
jg
xchg
push
aam
fmul
imul
sarb
or
imul
or
popa
xchg
cmp
sub
xor
pop
mov
or
notl
in
cmp
je
out
jecxz
pop
ds
repz
sahf
mov
sahf
out
insl
test
inc
daa
fucomi
pop
pop
and
cmpsl
or
push
cmc
rcrl
mov
and
xchg
dec
in
pop
adcl
aad
cmc
mov
and
ror
fisubrl
mov
mov
or
inc
mov
mov
and
dec
adc
adc
fsubrl
mov
lods
cmp
fdiv
fdivs
pusha
lods
fsubr
out
mov
sub
mov
push
inc
lcall
sbb
popf
shrb
shrl
xchg
dec
xor
aam
int3
pop
js
adc
xchg
mov
sbb
mov
ror
inc
sbb
aas
fcmovnb
pop
call
outsb
mov
xchg
jnp
testb
aam
adc
jmp
notl
aas
push
sbbl
pop
jge
in
xchg
jns,pn
fadd
cmp
sbb
mov
je
inc
cltd
jmp
pop
movsl
and
lea
jecxz
cmp
lahf
mov
outsb
mov
adc
jp
lds
and
xchg
push
cmc
xchg
fcmovbe
add
es
sub
dec
cmp
xor
mov
dec
sbb
push
roll
cmp
stos
sub
jnp
or
inc
shl
or
inc
mov
daa
cmp
sarb
jo
sub
jmp
bt
hlt
inc
or
cmp
scas
dec
ficoml
int3
rcrb
int3
or
out
or
imul
fdivl
xchg
je
mov
and
lcall
aaa
fists
cmp
xor
adc
mov
add
bound
movsb
lods
adc
sub
in
cmpsb
lds
movsl
mov
pop
leave
adc
ror
cmp
inc
pushw
nop
mov
xor
pop
es
pusha
cs
stos
push
lock
in
stc
push
mov
ja
pop
and
xor
arpl
inc
inc
sbb
in
in
dec
or
jl,pn
mov
cmp
pop
pop
jmp
and
xor
movsl
push
or
or
add
call
lods
or
call
xor
mov
inc
test
movsb
jmp
or
or
or
or
lods
in
pop
push
dec
xchg
mov
in
fists
stos
push
fnstcw
push
shrl
fmull
stos
jmp
pop
mov
adcb
adc
insb
add
sub
and
add
xchg
and
xchg
adc
mov
in
ljmp
dec
or
gs
mov
adc
mov
loopne
jo
jae
push
je
push
adc
and
prefetch
push
ret
leave
or
xchg
xor
jns
jl
wbinvd
in
ret
and
push
jne
sub
mov
test
xchg
adc
je
js
mov
outsl
popa
cmp
cmp
add
imul
adc
lock
outsl
cmpsl
push
adcb
jmp
add
call
pusha
xchg
push
aas
inc
stos
shrb
popa
push
in
pop
lret
leave
mov
mov
jecxz
out
loope
lods
insl
aaa
fists
push
cmpsl
xor
push
roll
imul
shlb
xor
pushf
mov
int
loope
jns
xchg
ljmp
int3
popa
and
cmpsl
inc
xlat
addl
lret
xor
in
inc
lods
sahf
idivl
push
loop
es
sbb
lods
sub
ss
cmp
repz
jne
xchg
fucomi
repz
mov
pop
xchg
and
xchg
add
aaa
int3
push
adc
mov
or
mov
ja
jmp
das
pop
push
fmuls
je
mov
mov
or
cmp
xchg
sbb
or
or
fistpll
jg
out
arpl
mov
pop
or
push
mov
lcall
mov
and
lock
sbb
inc
mov
pop
out
cmp
xor
pusha
or
dec
hlt
inc
push
push
xlat
and
in
jbe
mov
lock
jmp
mov
cwtl
adc
stc
sbb
sbb
xor
rolb
popf
hlt
add
lock
push
loopne
mov
jl
daa
mov
inc
and
pushf
push
jne
stos
or
mov
add
ret
dec
clc
clc
repz
xchg
addb
dec
enter
or
inc
adc
pop
add
inc
fs
into
jnp
fadds
jge
jg
loopne
xor
sbb
loope
arpl
dec
sub
xchg
je
popa
sbb
iret
add
add
mov
xorl
in
inc
jmp
push
dec
pusha
push
sbb
xchg
xlat
cli
je
jle
orl
in
or
insl
aaa
jmp
and
es
call
addr16
mov
mov
loopne
add
and
repz
mov
add
adc
fisttpl
cmp
mov
loope
js
or
movsl
fs
xor
inc
sub
clc
push
push
and
mov
ret
hlt
hlt
jp
popa
ja
cmp
inc
insb
inc
loopne
iret
and
mov
jbe
and
mov
lds
pop
loope
aam
sub
and
adc
movsl
mov
jb
cmp
call
push
or
adc
call
inc
pop
sub
aas
sbb
xor
pop
pop
add
mov
shl
ds
inc
or
cmp
je
push
pusha
push
xchg
pusha
ss
cltd
mov
fcmovne
test
pop
imul
jcxz,pn
push
or
sbb
orb
or
pop
fldcw
js
cmpsl
rorb
gs
mov
pushl
ss
mov
xor
repnz
inc
sub
and
enter
insb
les
mov
pop
jae
pop
sub
lahf
xor
lods
jmp
in
or
sbb
inc
push
ret
mov
movsb
clc
pop
jge
inc
std
or
and
and
xchg
fdiv
loopne
adc
mov
imul
or
dec
inc
pop
imul
and
mov
sub
push
out
inc
adc
enter
cmp
pop
or
pop
shrb
mov
inc
sub
push
inc
or
or
xor
pop
mov
cmpb
jg
pop
cmp
mov
dec
rolb
fdivr
mov
shr
cld
mov
add
adc
pop
add
testb
aaa
add
or
dec
call
xor
xor
add
xchg
cmp
testb
mov
f2xm1
shlb
jno
ljmp
and
add
rol
lea
jnp
lea
clc
push
add
clc
xlat
dec
lea
and
out
jb
mov
sub
sub
inc
cmp
insb
pause
mov
add
add
mov
mov
xchg
insl
fwait
pop
outsl
dec
nop
mov
popa
push
and
push
mov
das
mov
das
aam
movsb
fistps
mov
mov
adc
je
sbb
addr16
adc
xchg
sub
testb
gs
test
push
mov
mov
mov
call
or
lea
in
clc
jne
cmp
ljmp
clc
aad
jle
nop
out
sbb
jecxz
cmovs
stc
sbb
and
push
or
sbb
lcall
cwtl
cmpsl
push
rcrb
and
cmp
jl
push
sbb
inc
sbb
fnsave
or
xchg
xor
xchg
jle
xor
mov
and
lret
lea
jno
in
sbb
push
adc
adc
jp
inc
adcl
fsubl
sub
fdivs
or
dec
dec
rorb
movsb
xor
cltd
mov
das
push
adc
sub
xchg
jo
rolb
sbb
push
mov
inc
cmpsl
inc
fs
mov
add
add
inc
imul
push
rcr
adc
and
and
lds
or
cwtl
sub
mov
xor
adc
pop
leave
adc
jecxz
aas
sbb
into
xor
mov
pop
lods
jl
sbb
add
rclb
adc
mov
add
and
enter
adc
xor
mov
xor
add
fstps
cmc
call
stos
mov
in
sub
paddsb
out
pop
mov
xchg
insl
inc
movlps
adc
and
in
sub
inc
mov
test
aam
iret
jmp
popa
cmp
push
out
loopne
jp
and
adc
mov
jl
jb
and
clc
inc
imul
sub
xchg
jge
or
jae
sub
aas
adc
dec
or
xchg
inc
decl
pop
sub
adc
std
cltd
sbb
sub
cltd
adc
adc
lods
mov
adc
jge
pusha
cmpsb
fsubl
adc
dec
imul
call
mov
add
movsb
lock
push
ja
outsb
gs
mov
push
arpl
jns
mov
cmp
cmpsl
stos
rolb
sti
sbb
push
push
out
shrb
pushf
adc
adc
data16
xor
xchg
add
nop
ret
xor
xchg
push
mov
or
pop
inc
sbb
jmp
icebp
jne
addr16
outsl
jo
mov
andl
lcall
sub
inc
aas
scas
addl
test
mov
or
add
in
mov
inc
xlat
and
mov
pusha
sbb
stos
and
nop
lcall
gs
lcall
rclb
std
enter
xor
popa
mov
push
stos
push
or
jns
pusha
leave
lret
fadds
sub
out
rclb
push
mov
xchg
jle
pusha
cmp
add
jg
hlt
pop
adc
mov
dec
pop
inc
rcll
in
inc
jo
add
or
jmp
jecxz
lock
addr16
jns
or
cmp
xor
sahf
popf
js
daa
push
sub
movnti
dec
pusha
push
and
inc
fisubrl
cmp
adc
pop
add
adc
repz
or
adc
xor
cwtl
jo
pop
sbb
mov
jns
or
xor
cmc
push
rolb
ss
jmp
shll
sbb
arpl
add
xchg
jbe
lahf
jbe
daa
pop
adc
ds
sbb
hlt
je
xchg
add
cmpsb
into
and
aad
xor
hlt
and
shll
or
out
cs
xor
lds
mov
mov
adc
add
xor
daa
in
or
or
dec
and
hlt
into
in
repnz
inc
mov
push
ljmp
scas
push
lock
mov
inc
out
add
mov
sbb
cmp
pop
add
or
inc
mov
pusha
push
pop
xchg
cmp
lea
test
or
pop
sub
aad
mov
cltd
rclb
in
or
cmpsb
jne
sub
jmp
inc
adc
and
push
movsl
out
jno
mov
add
or
cmp
minps
pop
xchg
sbb
sbb
or
push
subl
mov
sbb
sbb
js
inc
jge
cli
jg
push
inc
jp
or
or
or
xlat
iret
pop
xlat
or
adc
push
adc
dec
loope
push
xchg
pop
xchg
dec
adc
ja
int
lock
xor
xchg
pop
insl
inc
cmp
cmp
into
addr16
ljmp
and
jnp
mov
mov
xor
cmp
stos
lret
pop
test
mov
iret
movsb
fmuls
xchg
cmp
jmp
jno
rorb
sub
pandn
push
xchg
push
pop
mov
pop
add
xchg
les
movsb
add
loope
pop
fucomip
adc
sub
adc
jecxz
test
rorb
cmc
mov
mov
roll
mov
addr16
dec
loope
and
or
jecxz
fildl
xlat
push
sub
jge
dec
mov
xor
ret
adc
cmpsl
test
test
or
fildl
daa
cmp
loopne
dec
scas
pop
imul
push
aaa
jne
lea
push
popa
nop
aas
leave
test
movsb
daa
test
cwtl
shlb
jns
xor
push
mov
jecxz
dec
fbstp
mov
xor
mov
aas
mov
adc
outsl
push
sub
dec
mov
sub
shlb
or
adc
fcmovu
dec
xlat
bound
in
adc
inc
mov
add
loopne
sti
rolb
mov
nop
dec
les
xchg
or
imul
adc
into
pop
cltd
ret
test
test
das
or
adc
add
subb
es
add
or
jle
add
pop
adc
add
jmp
adc
or
andl
dec
cmp
adc
inc
nop
pop
sbb
push
fidivs
nop
cmp
test
pushl
jne
dec
or
andb
add
in
incl
pop
pop
dec
shl
out
or
add
ret
adc
add
in
fsubrl
add
xor
push
adc
pop
add
enter
sbb
dec
or
adc
in
sbb
cmp
aaa
das
add
or
jge
popa
jae
jg
mov
aam
jne
lods
mov
int3
iret
int3
in
cmc
and
adc
lock
adc
mov
imul
andb
pop
add
inc
mov
movsb
loopne
push
in
rcl
jae
mov
or
xchg
rclb
dec
adc
fcomp
rorl
and
in
imul
je
daa
inc
daa
cwtl
pusha
shrl
cmp
sub
sbb
cmp
or
clc
ja
testl
int
out
sbb
fdivrl
ffree
jno
loopne
in
loop
add
or
and
xchg
cmp
or
dec
mov
sbb
xchg
mov
mov
push
mov
mov
sbb
movsb
call
inc
adc
rclb
add
xlat
es
rcrl
or
leave
leave
xchg
add
leave
sbb
and
sub
mov
push
xor
push
push
test
insl
sbb
sub
xchg
xor
out
addb
movsb
mov
sub
mov
and
add
sbb
xor
bound
aad
adc
movsb
xchg
add
lock
add
adc
ret
int3
test
sub
rolb
filds
ficoml
push
push
or
pop
nop
lcall
clc
add
pop
rorl
mov
call
adc
popa
enter
fcompl
add
sub
push
and
std
insl
outsb
xchg
fld
push
jae
inc
hlt
add
repz
orl
push
sub
sub
pop
cmp
cld
mov
push
cwtl
pandn
loope
add
or
ret
out
imul
push
adc
lret
add
sub
push
push
es
pop
pop
adc
rorb
lret
mull
sub
push
daa
aas
adc
mov
pop
cmp
ret
insb
insl
cwtl
xlat
je
pop
adc
jle
mov
pop
popa
shrb
adc
push
test
and
gs
xchg
out
mov
mov
jmp
sbb
mov
or
ja
pop
mov
jp
pop
nop
dec
clc
and
dec
adc
xchg
add
pop
inc
outsb
add
pop
add
sahf
pop
jge
out
xor
or
jl
pusha
data16
mov
jle
das
or
jb
xor
out
sbb
adc
icebp
outsl
add
mov
es
cmp
jle
jmp
push
lret
popa
cltd
push
lret
je
insl
sbb
xchg
rcr
pop
xor
ror
sub
ret
clc
shrb
push
je
lock
pop
and
pop
jb
push
aad
pushf
movsb
xor
aas
mov
mov
in
in
mov
mov
in
jb
je
in
in
jbe
js
in
in
jp
jl
in
in
jle
pusha
popa
in
in
bound
gs
in
addr16
in
in
imul
in
outsb
outsl
push
push
in
in
push
push
push
push
in
in
push
push
pop
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
dec
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
xor
in
in
xor
xor
push
out
in
aaa
cmp
dec
sbb
cltd
adc
or
push
fisubrs
sahf
movb
les
add
loop
ds
inc
adc
pop
or
sbb
and
sbb
and
add
push
inc
sbb
add
clc
pop
add
cmp
or
mov
dec
and
iret
and
dec
xor
testl
nop
test
or
mov
xchg
push
add
and
je
jbe
xchg
xchg
insb
clc
cmp
sbb
xor
data16
rcrb
enterw
je
arpl
adc
outsb
gs
int3
imul
ss
mov
or
sbb
or
imul
sbb
testl
push
adc
pop
jo
outsl
lret
jle
push
sbb
push
inc
popa
jae
add
sbb
add
add
inc
jl
or
dec
outsb
jae
inc
jmp
or
js
ret
or
inc
mov
adc
push
push
je
into
insl
dec
outsl
mov
or
inc
jns
sbb
or
dec
shlb
nop
and
mov
mov
add
sbb
fistpll
or
nop
cmp
or
sbb
pop
adc
sbb
inc
repz
push
shll
dec
pop
cmp
lods
jge
enter
or
dec
jl
pop
imul
sbb
je
inc
rep
adc
cs
inc
imul
mov
jae
es
inc
je
sbb
sub
or
adc
sbb
js
sbb
push
add
std
mov
push
popa
test
andps
xchg
pop
sub
add
dec
dec
or
push
sub
mov
imul
and
insl
or
sbb
aam
mov
add
pop
repnz
push
and
mov
cmpsl
in
inc
dec
adc
inc
fists
jp
out
andb
lret
add
fsubrl
mov
adc
and
push
add
push
add
sbb
push
pushf
aaa
inc
push
add
adc
pop
cmp
sahf
popa
fcoml
lret
dec
enter
inc
adc
add
sbb
idivl
jmp
js
movsb
jl
stc
out
add
cld
aam
lock
jl
mov
push
outsb
push
lahf
push
sahf
pop
sbb
add
push
add
mov
xchg
in
rol
add
orl
push
mov
dec
jle
push
rcrl
in
xor
sub
adc
sarl
stos
jns
jns
hlt
add
push
and
add
ljmp
imul
fwait
jmp
bnd
test
push
cmp
mov
add
add
xchg
add
sub
adc
add
nop
xchg
cmp
inc
add
adc
jne
pop
fwait
cmp
sub
daa
xor
inc
inc
in
push
mov
xor
xchg
sbb
pop
mov
in
sbb
push
movsl
xchg
fs
dec
imul
daa
and
pop
aas
mov
loopne
push
int3
push
or
pop
enter
cmp
rcrb
dec
lahf
mov
push
cmp
pop
dec
imul
into
pop
fcoml
or
dec
mov
xchg
ret
sbb
add
or
fsubr
imul
stos
and
or
push
out
mov
mov
lret
mov
es
sbb
xchg
les
mov
push
ds
cwtl
outsl
fisubl
sbb
push
add
pop
cld
cs
sarl
push
inc
push
js
nopl
arpl
repz
aaa
push
shlb
cltd
cmp
add
repnz
inc
pusha
insl
jnp
inc
outsb
in
inc
movsb
aas
pop
push
sub
cmp
dec
or
pop
inc
pop
and
dec
push
iret
add
xchg
pop
insb
jl
xlat
and
push
push
pop
popa
and
xor
mov
cmpsl
in
sbb
cld
push
xchg
cmpsb
loope
and
sub
mov
insl
dec
pusha
push
add
outsl
inc
cltd
xor
mov
xchg
sbb
pop
xchg
out
pop
mov
sub
cwtl
pop
int3
sbb
aaa
xchg
mov
nop
jl
pop
push
enter
ja
insl
bound
pmaxsw
jmp
sbb
std
movl
inc
cwtl
xor
add
out
mov
das
cmp
or
dec
add
jne
dec
mov
gs
insl
popa
addr16
cwtl
leave
and
mov
and
lcall
lods
cltd
fmuls
mov
stc
and
jmp
inc
les
pushf
out
nop
js
aam
mov
sbb
jnp
jnp
mov
jl
add
jge
addb
pushw
cld
test
sarl
xchg
in
inc
lock
imul
cmp
or
movsb
xor
and
mov
int
movsb
cmp
and
test
es
mov
push
cmp
mov
test
jns
lock
call
jo
and
push
push
aas
mov
jle
jle
mov
fimull
jo
push
mov
mov
xor
push
movsb
sbb
add
aas
movsb
cmpsb
outsb
mov
out
out
push
mov
scas
xchg
inc
pop
orl
pop
sbb
mov
and
js
xor
and
sbb
bound
std
mov
push
or
outsl
outsb
pop
jl
push
hlt
pop
in
in
pop
loopne
pop
in
daa
jns
mov
stc
or
sarb
pop
les
mov
sahf
notb
cmp
push
cwtl
fs
ret
roll
add
push
test
cmp
nop
je
leave
pop
pop
jo
xchg
mov
jecxz
push
cltd
outsl
hlt
dec
adc
dec
fs
incl
mov
xor
rol
xor
inc
dec
jne
add
mulb
ja
add
arpl
pop
les
mov
mov
dec
sub
loope
ljmp
sub
mov
adc
inc
sti
add
andb
dec
incb
lock
and
sub
cmpsb
es
out
es
dec
and
in
dec
clc
add
mov
pop
mov
or
inc
and
out
outsb
dec
enter
gs
mov
lea
inc
fistpl
repnz
and
mov
sbb
jno
jbe
fxtract
decl
js
cmp
divl
fcoml
gs
leave
imul
decl
in
add
mov
xchg
cmc
aas
jne
add
test
or
lods
push
daa
pop
xchg
mov
rcpps
add
pop
ret
sbb
mov
lds
fmuls
fisttpll
and
subl
push
adc
and
push
cmc
xor
cmpsl
jne
cmp
or
dec
push
rcr
dec
sbb
sub
test
pop
pop
sbb
pop
dec
push
pop
jns
enter
sub
adc
and
popf
add
out
sub
jnp
sub
push
cmp
cmp
mov
or
adc
jge
ret
hlt
xor
in
xchg
sbb
adc
test
push
sbb
adc
push
call
and
or
cmp
add
cmp
cmp
jg
push
mov
and
push
in
repnz
xchg
xor
jbe
in
pusha
sbb
and
cmp
jne
xor
or
shufps
xchg
arpl
pop
inc
inc
cmpsl
arpl
jb
outsl
outsb
lods
rcl
inc
inc
or
pop
xchg
ljmp
jg
insb
imul
jbe
add
jne
jo
gs
push
gs
insb
pop
stc
pop
push
and
addr16
imul
push
add
dec
imul
pop
gs
dec
mov
lahf
jne
or
arpl
rorl
jae
popa
inc
jno
popa
mov
mov
or
fwait
mov
add
fldcw
mov
shll
daa
push
sbb
insb
sub
inc
das
stc
push
outsb
stos
ret
inc
popa
pop
out
add
sub
mov
pop
imul
and
addr16
fcmovnu
daa
subb
je
inc
push
xchg
pop
stos
push
int
lods
insb
mov
push
int3
or
or
or
sbb
cmp
je
or
sub
push
sbb
pop
push
fwait
daa
pop
xchg
imul
lahf
sbb
ficoml
or
sbb
inc
pop
or
push
test
andl
mov
js
insb
jg
fcomip
fwait
and
aaa
adc
adc
add
or
outsw
inc
sub
jb
push
lock
pop
outsb
jne
pop
andb
inc
xchg
daa
bswap
rcl
or
lahf
dec
cs
sbb
xchg
push
arpl
mov
xlat
jno
inc
xor
shrl
loopne
outsl
das
cmp
or
daa
or
inc
das
or
xchg
mov
adc
outsl
add
subb
mov
and
sbb
ja
xor
loope
jns
aaa
adc
cmp
xor
leave
xor
or
xor
jne
mov
aas
pop
sbb
incl
testl
dec
inc
push
push
inc
push
add
push
ja
inc
inc
inc
or
notl
dec
inc
dec
dec
arpl
fadds
dec
inc
inc
push
adc
inc
push
dec
xor
mov
shlb
in
jae
dec
dec
and
out
insl
fiadds
xor
adc
inc
dec
inc
or
mov
inc
xor
inc
dec
mov
push
push
dec
sub
dec
lods
insl
imul
bound
das
sbb
mov
push
inc
inc
dec
push
mov
add
push
test
mov
rcl
push
dec
pop
adc
push
push
sbb
aam
push
dec
push
inc
scas
dec
inc
dec
insl
xchg
cld
loopne
adc
ret
xor
incl
sub
lar
adc
cwtl
scas
push
push
jo
add
dec
enter
mov
push
mov
mov
es
orb
and
out
jge
add
add
add
aas
les
rorl
mov
sub
push
sbb
insl
sbb
push
and
lods
cmp
push
xlat
and
inc
or
push
popa
movb
stos
mov
adc
push
jno
or
sub
xor
and
dec
shlb
or
mov
dec
loope
arpl
jmp
cwtl
sbb
dec
insb
push
arpl
mov
sub
dec
or
and
cwtl
pop
decb
xchg
xbegin
aaa
sub
jecxz
icebp
in
jg
sub
movsb
and
jge
pop
les
daa
in
cmp
je
push
ja
pushf
mov
je
adc
fnsave
adc
cmpsb
jo
frstor
cld
dec
out
lea
clc
inc
in
push
or
jo
cli
pop
add
mov
push
addb
nop
jb
add
dec
clc
mov
sbb
pop
pop
add
aas
adc
pop
sbb
push
mov
movsb
lods
add
je
sbb
cmp
aaa
sbb
test
add
and
mov
cmp
add
sbb
mov
dec
stos
push
rol
sbb
jnp
cmpsl
dec
outsb
enter
nop
stos
push
mov
add
inc
int3
sbb
and
mov
or
push
add
cmp
sbbb
mov
js
shr
push
in
cmp
mov
or
xorl
lods
xor
stos
aaa
cmp
inc
rolb
push
rcl
leave
sub
pop
mov
or
or
roll
or
rcrl
jecxz
cmp
lea
pop
xchg
je
inc
cmp
lret
push
es
addr16
and
or
and
sub
int3
int3
gs
sarl
and
adc
mov
jg
sbb
insl
xchg
lds
pop
test
mov
pop
cmp
mov
dec
mov
add
pop
ret
xor
add
and
lods
add
dec
dec
bound
mov
or
sbb
push
inc
sub
sub
dec
popa
shrb
jbe
push
clc
neg
ja
sub
pop
popf
das
adc
dec
movsl
cmpsb
and
aad
sbb
dec
es
aam
add
cltd
add
nop
je
stos
addr16
cwtl
call
add
nop
sbb
sbb
loopne
dec
push
adc
add
xchg
cmp
cmp
mov
cs
cmpsl
adcl
adc
ds
addb
fs
and
cmp
adc
jecxz
out
push
and
sub
js
fmuls
adc
xor
ds
cmp
aaa
xorb
sbb
mov
inc
pushf
inc
loope
shlb
clc
push
pop
or
js
lods
or
add
xor
int
loopne,pt
adc
pop
test
ret
iret
sbb
and
sbb
imul
xor
ret
add
fcmovnbe
pusha
and
divl
lret
in
mov
shr
out
xor
jns
push
jb
cmp
inc
sbb
test
and
and
ret
sub
inc
dec
es
stos
or
enter
in
addb
mov
push
lea
or
xor
aas
xor
add
addb
add
push
hlt
lds
cltd
and
in
inc
orl
movsb
and
inc
push
xor
dec
sub
lods
arpl
sub
movsl
hlt
or
cmpsl
hlt
jp
add
or
lcall
sbb
adc
push
or
adc
scas
stc
in
call
and
sbb
and
cmp
xor
push
xchg
outsl
inc
scas
mov
sub
cld
inc
pop
add
sbb
fld
pusha
mov
data16
or
xchg
xchg
iret
outsb
data16
sub
nop
inc
lock
cmp
jb
das
and
adc
dec
pop
push
xor
lcall
lock
or
mov
imul
add
cmp
jmp
adc
rorb
push
cmp
push
test
jne
and
loopne
push
cmp
icebp
and
sbb
add
sub
int3
sbb
add
and
sbb
inc
clc
pop
clc
clc
clc
mov
mov
adc
rcrl
mov
push
cmpsl
in
inc
ret
imul
pusha
sbb
mov
xchg
push
xchg
test
push
jbe
in
jmp
jo
lods
mov
test
and
adc
mov
xchg
xor
lahf
or
nop
js
xchg
mov
cltd
push
mov
pusha
and
nop
or
clc
pusha
adc
or
cmp
enter
inc
inc
movsl
xchg
packssdw
hlt
xchg
sbb
mov
push
les
pop
push
pop
mov
xchg
mov
fimuls
mul
mov
pop
xor
sub
sub
cld
or
pushf
scas
fsts
sbb
inc
test
sub
add
std
push
pop
adc
mov
add
mov
ss
in
leave
aad
mov
popa
xor
ret
cmp
xchg
jl
cli
inc
inc
push
jo
shl
jnp
pop
and
push
jp
and
pop
out
adc
dec
mov
insl
xchg
add
adc
arpl
mov
enter
sbb
rcrl
lahf
add
in
pop
inc
lea
movsl
movsl
mov
pop
or
push
enter
push
and
push
fidivs
dec
pop
fdivs
in
clc
push
jnp
outsl
shrl
or
xchg
mov
add
dec
add
mov
mov
ret
ja
addr16
jb
dec
pusha
mov
shlb
inc
fsub
incl
nop
mov
cmp
je
mov
leave
rcrl
pusha
mov
and
inc
mov
out
push
sbb
inc
inc
mov
xchg
push
daa
cltd
sbb
rcl
fstpt
xchg
movsb
imul
pop
sbb
das
fisttpll
mov
pusha
or
fcmovnbe
sub
dec
or
sarl
lea
sub
les
hlt
mov
mov
dec
pop
cmp
je
testb
je
add
add
rcrl
mov
enter
pop
add
sbb
push
cmp
cmp
sbb
rolb
aas
mov
xchg
sbb
xor
push
xor
push
xchg
mov
repnz
int3
or
test
in
lcall
add
dec
xchg
sbb
and
cmpsb
shll
mov
dec
cmp
cs
fbld
ror
js
xchg
pop
mov
add
inc
jae
add
je
std
mov
out
addr16
xor
sti
mov
mov
cmpsl
and
sbb
js
jle
cmp
addb
cmp
xchg
pop
inc
xchg
nop
or
dec
leave
add
inc
rolb
dec
and
dec
inc
outsb
xor
jl
aas
mov
mov
push
xor
cld
push
push
outsl
adcl
lea
sarb
mov
sub
add
mov
xor
add
pop
add
or
andb
repz
sbb
lock
cmp
push
lock
push
inc
rorb
push
sbb
sarb
cs
mov
cmp
lahf
lahf
dec
imul
call
mov
bound
pusha
test
xor
adc
add
int
in
push
loopne
std
movb
cltd
enter
insl
mov
into
add
pop
pop
rcrb
xor
fsubl
movsl
cmp
mov
movsl
sub
or
cmp
cltd
test
pop
test
or
ja
int3
add
mov
add
cltd
rcll
adc
inc
loopne
idiv
fcomi
insl
lock
sub
repnz
not
and
fadds
pop
shll
cwtl
test
psubusb
test
fdivs
aad
xor
or
push
scas
adc
xchg
bound
and
push
push
adc
enter
xchg
cwtl
push
mov
mov
pushf
dec
rcll
or
stc
mov
dec
sub
test
js
and
jnp
xor
dec
fadds
mov
push
mov
push
in
aad
mov
xchg
movsb
push
pop
push
pop
pop
and
adc
ljmp
in
dec
or
fucomi
jmp
jns
pop
inc
and
or
pslld
pop
shrb
add
pusha
pop
gs
adc
adc
pusha
jg
ss
push
sub
sbb
aad
mov
and
flds
pop
stc
mov
lcall
xchg
test
xlat
hlt
push
adc
dec
inc
sub
aas
fsts
clc
pushl
cmp
or
iret
xchg
adc
sub
loope
inc
add
add
push
mov
add
test
add
mov
add
ss
sub
mov
in
mov
popa
lret
movsl
cmp
push
in
lock
pop
lcall
es
in
loopne
add
add
mov
jge
adc
push
jp
xchg
ret
gs
movsl
dec
add
adc
js
mov
nop
push
les
mov
or
iret
clc
dec
or
and
pop
or
bswap
shr
mov
dec
jns
jmp
mov
and
mov
sub
shl
mov
lds
xor
sbb
jbe
movsl
out
sti
in
inc
movl
ljmp
dec
pop
cmp
inc
inc
mul
in
sti
sbb
incb
shl
hlt
mov
xchg
int3
je
int
test
jmp
ds
rolb
test
or
mov
in
call
or
test
pop
jb
fnstenv
and
out
pop
push
push
push
hlt
lock
or
lds
push
adc
adc
cld
or
scas
jl
fstps
cmp
mov
mov
xchg
out
mov
inc
in
or
or
sbb
inc
popa
add
pop
pop
rcl
add
in
in
add
mov
or
pop
push
and
pop
add
std
into
inc
add
scas
push
push
push
addl
cs
cmpsl
cwtl
loopne
push
es
jae
push
lea
ds
dec
push
adc
cltd
int
xor
pop
out
dec
ss
xor
sub
or
js
or
cmpsl
inc
imul
xor
repnz
mov
faddl
sbb
adc
repnz
add
inc
pop
xchg
push
imul
iret
loopne
shrl
addb
push
jp
and
inc
test
fadds
cmp
pop
adc
dec
mov
adc
nop
fstpl
fadds
subb
push
add
dec
mov
inc
jno
popf
in
es
adc
lock
pop
push
and
xchg
push
ret
sub
fdivrl
adc
enter
push
cwtl
push
div
add
mov
lods
jns
xor
stos
adc
push
aas
cmc
imul
inc
jo
bound
mov
sbb
add
les
pop
inc
or
subb
sbb
xchg
movsb
aad
decl
inc
dec
lret
add
adc
ficoms
lds
pusha
inc
inc
push
adcl
enter
enter
data16
inc
in
push
xor
and
push
add
dec
jne
or
in
add
adc
mov
or
sbb
dec
repnz
sar
lock
xor
sub
jp
or
push
mov
push
push
pop
jbe
ret
inc
push
lcall
dec
mov
int3
out
jo
mov
out
mov
fcomps
dec
inc
add
dec
xor
pop
adc
push
inc
out
xchg
inc
xor
scas
mov
fsubrs
fnop
push
jp
arpl
call
sbb
test
pop
mov
and
dec
inc
ret
fildl
jg
paddusb
cmp
arpl
adc
adc
add
pop
inc
or
dec
rorl
imul
fucom
pop
lret
decl
jne
push
push
out
lock
push
push
sbb
push
pop
pop
jl
inc
or
sub
fdivl
push
mov
lock
adc
shrb
xchg
fmul
mov
or
mov
dec
and
push
dec
or
push
mov
repnz
lods
jl
outsl
in
dec
adc
test
ljmp
xchg
and
mov
lods
mov
mov
les
lods
pop
mov
dec
lods
adc
mov
mov
xchg
rclb
inc
pop
sub
shrl
sahf
push
pushf
aad
ljmp
xor
cmp
cmpl
rcrb
dec
xor
outsl
les
loope
cmp
aas
jecxz
or
inc
ljmp
sbb
fisttps
push
sti
xchg
cmp
sbb
in
add
shr
or
and
add
sahf
push
scas
pushf
push
push
sbb
pushf
push
pxor
adc
pop
xchg
jmp
sbb
xchg
fstpt
mov
jb
int
jne
mov
mov
jmp
and
sub
fdivrl
popa
or
jns
mov
fildl
cmovs
push
jb
sub
pop
jb
push
xor
aaa
adc
xor
add
daa
or
testb
inc
lods
mov
push
mull
pop
into
inc
or
inc
and
and
daa
cmp
fbld
sbb
clc
enter
xor
repnz
adc
int3
arpl
dec
leave
dec
dec
dec
inc
sarb
pop
in
imul
add
xor
add
sub
sbb
sbb
push
jb
or
lret
movsl
push
xor
adc
repnz
jl
dec
adc
cmp
popa
sub
ret
or
inc
sbb
mov
sbb
mov
push
fs
sbb
cmp
pop
and
and
sbb
shlb
movsl
lea
in
cmpsl
adc
xor
xor
and
dec
jnp
push
sbb
mov
mov
cwtl
es
pushf
daa
pop
nop
mov
push
sbb
das
and
jns
lods
inc
pop
nop
xor
pcmpeqb
add
ret
frstor
mov
xlat
popa
imul
xchg
dec
aam
push
sub
dec
add
loopne
dec
lcall
aam
loopne
add
lock
imul
add
inc
xor
jno
pushw
add
add
dec
add
xlat
mov
add
aas
adc
shlb
int
or
ss
mov
jp
clc
les
adc
mov
in
mov
push
cs
enter
cmp
test
cwtl
pushf
mov
inc
int3
shl
or
rolb
fsubrs
dec
xor
sbb
in
call
loope
arpl
dec
jae
mov
in
lock
pop
repnz
bound
or
out
daa
adc
out
das
loopne
loope
aas
sarb
leave
adc
pop
pop
test
cmp
or
in
and
jno
cmp
cs
ja
scas
xor
xor
xchg
or
test
adc
add
push
mov
fs
cmpsb
or
lcall
sbb
dec
imul
adc
fsub
popf
fildl
scas
add
jne
pop
dec
mov
das
je
jno
pusha
mov
push
lods
push
into
pushf
adc
ss
pop
adc
mov
xor
mov
inc
jmp
add
adc
mov
insb
sub
push
cmp
bound
inc
push
and
dec
repz
jns
gs
in
mov
lock
pusha
and
mov
aaa
leave
push
lea
pop
cmp
push
enter
inc
inc
hlt
pop
adc
mov
pop
mov
push
pop
ret
inc
sbb
mov
dec
je
jbe
inc
xor
pop
repz
pop
out
push
rcll
jne
add
push
enter
in
push
scas
adc
mov
push
cmp
je
adc
pop
pop
cld
ja
inc
stos
xchg
cs
addb
inc
outsl
jb
sbb
lret
int3
nop
cmpsb
mov
pop
or
add
ds
pop
xchg
lahf
xchg
inc
push
xor
xorb
addr16
xchg
mov
test
js
in
inc
push
call
ds
fucomip
dec
add
lock
daa
in
mov
mov
jns
mov
mov
sahf
call
dec
jl
out
es
bswap
push
sbb
das
add
mov
pop
imul
bound
outsl
xchg
sbb
adc
fbld
or
pusha
jle
inc
insb
push
bound
add
iret
mov
cmpl
out
icebp
or
mov
xor
pop
ja
jle
mov
test
in
gs
mov
xlat
or
fstp
mov
or
in
loope
loope
cmp
mov
cli
and
stos
inc
push
dec
rcll
in
inc
rcrb
inc
movsb
adc
sbb
jno
hlt
xor
shlb
scas
and
nop
mov
jmp
mov
repz
in
sub
cmpsl
push
sub
and
movsb
ja
dec
adc
imul
andb
or
cmp
or
add
pop
or
xchg
push
pop
xor
in
and
sbb
adc
and
stos
xor
or
jnp
sbb
insb
adc
inc
shrb
mov
pop
mov
dec
lcall
testb
nop
loopne
jg
add
mov
enter
push
fsub
push
test
cmp
inc
xlat
and
cltd
jl
test
mov
lea
ret
adc
notb
mov
rolb
pop
add
rorl
and
mov
dec
add
and
insb
dec
les
push
dec
mov
in
ret
dec
xchg
xchg
pop
cmpsb
cmp
sbb
inc
xchg
jno
dec
fs
sbb
mov
and
inc
leave
or
adc
push
mov
push
inc
lahf
fwait
push
repz
mov
in
jge
outsl
sub
or
xor
mov
dec
pop
inc
pop
mov
sbb
leave
pop
mov
dec
test
dec
xor
push
mov
and
sbb
sub
mov
jno
lahf
movsb
cmpsl
and
sub
jg
adc
xchg
les
sbb
sbb
pushf
jo
jg
popf
js
sbb
jo
scas
lods
and
pop
xor
jno
test
or
xchg
ret
mov
sub
or
inc
jg
cmp
lods
jo
pop
cwtl
movsl
movsb
lret
shr
inc
mov
leave
mov
xor
xor
push
add
lahf
mov
push
pop
mov
icebp
jno
pushf
push
and
mov
mull
ja
fsubrs
ret
mov
fwait
mov
add
or
cmpb
mov
pop
inc
dec
mov
push
ja
jno
push
mov
push
push
jecxz
sti
push
or
in
dec
push
sub
gs
adc
mov
xchg
ss
add
and
out
das
out
mov
enter
jno
in
dec
ret
inc
jae
test
and
push
adc
test
sub
push
and
pop
inc
pushf
pop
dec
arpl
push
add
mov
sbbl
loopne
scas
xchg
push
in
xorb
dec
lock
push
add
add
jo
fs
inc
dec
add
mov
add
add
inc
xor
dec
lret
jbe
push
sub
xor
xchg
cmp
sbb
or
scas
lods
sbb
jl
pop
imul
mov
sbb
std
mov
jae
jmp
push
xor
rorb
push
mov
xor
jne
mov
in
inc
cs
push
or
and
adc
jo
sub
or
pusha
shlb
mov
fimuls
jle
mov
popf
push
or
ja
hlt
mov
daa
repz
cmp
sub
jnp
enter
add
sbb
dec
pop
fdivrl
add
es
loopne
icebp
out
rclb
xchg
or
adc
add
xchg
nop
dec
xchg
add
hlt
jno
addl
mov
shlb
xlat
add
mov
pop
add
cmp
sti
insl
jmp
add
sbbl
sub
sbb
cwtl
imul
xlat
add
out
sub
sarl
aaa
flds
or
leave
pop
push
mov
jl
sub
sbb
sbb
mov
sub
pop
or
mov
sbb
jns
inc
xchg
xchg
add
addr16
xor
inc
paddusb
in
adc
outsl
xchg
andl
in
and
imul
xchg
clc
popa
and
cmpb
add
lea
test
add
les
icebp
sbb
jge
inc
sub
cmp
ret
shr
and
mov
int
and
movsb
lea
fs
pop
mov
or
jno
je
and
cmp
push
dec
sahf
sbb
insb
pop
sbbb
pop
in
mov
and
testl
pop
dec
jno
pop
mov
adc
adcb
nop
aaa
out
or
sbb
push
jne
mov
dec
shrl
jmp
adc
lcall
mov
sets
jle
lods
add
mov
imul
push
jo
push
mov
adc
subb
push
sbb
in
mov
outsb
aaa
mov
inc
add
push
sub
or
cs
push
push
lock
sub
add
movsl
push
xchg
lods
stos
inc
and
fmull
and
andl
hlt
ljmp
les
bound
lock
push
mov
das
rorb
iret
pop
sub
mov
adc
enter
or
push
sbb
xchg
je
leave
outsb
fs
add
push
add
enter
arpl
outsl
dec
out
sbb
mov
adcl
leave
rolb
add
rorb
mov
pop
sub
mov
xchg
inc
pop
adc
sub
js
loop
mov
pop
mov
mov
popa
inc
adcl
mov
inc
dec
inc
je
cli
add
and
add
jg
xchg
les
test
xor
pcmpgtb
sarl
lds
int
sti
fisubrs
sub
inc
or
and
cs
mov
adc
negl
test
mov
fbld
adc
mov
jmp
xlat
int
lcall
loope
movsb
or
inc
push
ret
fs
xchg
lock
jecxz
fs
xchg
dec
dec
loopne
add
xchg
aad
push
in
in
inc
sbb
and
mov
stos
push
loopne
push
fsubrl
ret
sahf
sbbl
loop
ror
test
adc
or
sbb
sub
ficomps
ret
xchg
and
in
sub
and
movsb
or
add
mov
push
mov
ljmp
out
lock
leave
adcl
ficomps
dec
sub
lea
subb
enter
fnstsw
adc
aaa
push
and
sbb
out
dec
sub
adc
or
jo
xchg
and
cmp
cmpb
nop
push
bound
xchg
fildll
in
xchg
aaa
clc
xor
lods
push
jne
icebp
cmovno
int
xorl
in
push
or
adc
into
lods
lret
or
mov
mov
scas
jne
cltd
push
out
or
inc
dec
lret
dec
ret
add
cmpsb
clc
jge
lods
div
sbbl
nop
push
push
das
clc
push
mov
insb
pop
sub
nop
sbb
jg
in
shlb
push
mov
test
orl
or
pop
mov
sbb
loopne
mov
mov
adcb
mov
sbb
fs
leave
hlt
mov
orb
pushf
cwtl
push
adc
mov
mov
mov
dec
ret
or
jmp
jle
loope
and
and
loopne
jbe
xchg
jge
sbb
push
or
inc
sbb
testb
jo
mov
and
xor
int3
and
xchg
jl
cwtl
mov
mov
scas
push
inc
nop
cmp
adc
cmp
outsb
mov
sbb
imul
cmp
adc
push
xchg
and
test
sbb
xchg
test
mov
dec
shlb
xchg
add
mov
les
loop
dec
clc
inc
rcr
enter
push
rorl
sarb
inc
inc
push
loopne
cmp
rolb
adc
and
adc
xor
adc
fiadds
push
out
in
inc
xchg
lar
mov
add
bound
mov
cmp
xchg
jg
mov
push
enter
sub
mov
xchg
ds
dec
dec
inc
repnz
jl
loopne
lds
xor
fnstsw
or
bound
frstor
hlt
out
mov
or
cmp
mov
push
mov
daa
mov
pop
adc
setle
mov
push
shlb
push
cmp
xor
mov
pop
xchg
push
cmp
push
xchg
or
pusha
mov
xchg
testl
adc
testb
aad
in
rorb
or
lock
into
movl
rorb
add
xchg
in
inc
ljmp
clc
pop
mov
ret
popa
pop
shlb
xor
xor
mov
jl
xchg
leave
mov
cmp
xchg
les
pushl
dec
dec
sbb
out
sbb
dec
sldt
nop
icebp
push
jmp
mov
lds
cmp
pop
sbb
mov
mov
jno
inc
jo
rol
aaa
lea
iret
les
push
add
incl
sbb
rorb
fst
jns
xchg
mov
sub
rcrb
cmp
pusha
or
push
cmp
imul
sub
int
and
sbb
xchg
xchg
jno
add
inc
inc
pusha
push
pop
pop
stos
adcb
icebp
rorb
sbb
and
aaa
mov
xor
dec
pusha
lods
mov
xchg
push
imul
rcr
pop
jmp
sub
sub
jbe
adc
sbb
ret
sbb
add
test
xlat
lea
add
loopne
shrl
outsl
jecxz
jmp
and
xor
inc
and
sub
dec
adc
mov
bound
push
adc
dec
push
ss
fstpl
dec
fs
sub
mov
push
push
inc
fildl
andl
dec
pop
or
or
dec
xor
or
ss
push
pop
hlt
jo
cmc
adc
arpl
add
or
add
notl
inc
mov
and
or
test
iret
xor
sub
fisttpl
push
bound
mov
loop
cmc
rcl
or
xlat
loope
mov
aas
div
add
pop
es
inc
mov
adc
xchg
and
ds
adc
pop
add
sub
es
mov
add
adc
aam
xchg
ja
and
cmp
mov
sbb
xor
iret
popa
mov
and
outsl
in
jne
sub
test
push
xor
push
mov
mov
xlat
lock
xlat
rorb
sbb
xchg
or
ret
dec
mov
out
xchg
in
jne
xor
pop
outsb
outsl
js
and
data16
add
jp
out
xchg
or
or
sub
push
pop
cltd
enter
and
clc
dec
or
push
mov
pop
out
sbb
mov
movl
test
adc
es
add
outsb
and
lahf
stos
push
sbb
ja
shrb
movsl
sbb
pop
xchg
fmuls
sub
roll
sbb
sbb
push
and
lods
cwtl
int3
sub
push
and
cmp
push
nop
mov
push
jns
or
add
dec
data16
ds
xor
cmp
imul
add
push
scas
and
mov
fcoml
ja
insl
or
loope
mov
pop
jo
mov
call
je
sbb
jne
cmc
jp
jbe
imulb
jg
addr16
inc
mov
or
cmpb
sbb
sub
insl
inc
pop
scas
imul
js
mov
push
ds
xor
scas
ds
mov
xchg
add
scas
xor
nop
lret
icebp
fwait
call
fstpl
push
add
loop
les
adc
push
xor
mov
mov
mov
iret
mulb
dec
mov
inc
fmuls
subl
negl
jno
shll
lcall
jo
sub
notl
sbb
inc
cli
jnp
push
shr
pop
add
mov
and
dec
sub
push
and
xchg
mov
add
fsubr
popa
fmul
inc
loope
les
inc
and
push
add
cmp
xor
push
and
shll
jge
rolb
punpckhdq
push
push
nop
movsb
les
push
mov
jbe
dec
add
cmp
mov
hlt
enter
popl
pop
shll
stc
mov
add
pusha
bound
or
mov
movsl
add
fisubl
mov
iret
and
mov
cmp
dec
jbe
push
cltd
add
mov
mov
dec
push
and
sbb
xchg
mov
adcb
and
xchg
insl
dec
rcrl
out
adcb
fldl
add
or
mov
dec
cmp
roll
pop
cmp
stc
jne
xchg
xchg
pop
mov
push
rol
xlat
pop
in
lods
push
cld
inc
imul
push
fmull
adc
xchg
in
or
je
inc
add
mov
pop
jns
cwtl
clc
adcb
dec
cld
add
xchg
movsb
pop
fs
xor
and
shlb
bound
add
push
pop
adc
xor
popa
mov
or
mov
push
push
sbb
arpl
aam
popa
bound
jne
ret
jecxz
push
inc
cmp
adc
dec
lahf
pop
push
ds
and
and
push
inc
cmp
push
pop
hlt
xchg
mov
xchg
mov
lods
sub
jo
and
xchg
inc
in
and
lods
insl
or
add
dec
mov
sahf
lea
test
jb
das
xor
cmp
sub
mov
inc
lds
int3
sbb
or
xor
xor
pop
add
jge
push
mov
pop
imul
sbb
dec
mov
fwait
sbb
cmp
push
dec
mov
adc
xchg
cwtl
push
sub
fwait
clc
xlat
lock
adc
jo
xchg
pop
lods
loopne
iret
es
push
popa
mov
pop
dec
adc
adcl
push
adc
mov
jg
inc
xor
adc
test
mov
jnp
sbb
and
xlat
aam
inc
andl
pop
or
adc
movsb
and
sub
inc
or
jmp
imul
notb
fisubl
es
sub
test
aam
xchg
dec
fcom
js
sbb
and
mov
addr16
push
pop
movsl
je
enter
adc
pop
and
or
sub
ljmp
out
pop
sub
pop
cmp
mov
fildll
or
sub
and
iret
xchg
les
and
daa
lahf
or
in
andb
or
pusha
seto
fistl
and
adc
fcompl
lods
jg
addr16
pop
aaa
inc
xor
push
test
add
hlt
hlt
out
mov
fldpi
fbstp
push
test
icebp
xchg
and
sub
jmp
in
add
adc
imul
fdivl
mov
adc
dec
sbb
pusha
jnp
add
insl
cwtl
rcll
jbe
call
out
push
or
sbb
nop
mov
inc
aas
into
jle
icebp
pushf
dec
or
sahf
sub
sub
sbb
jg
leave
adc
popa
mov
inc
mov
cmp
movsb
sub
adc
test
test
fildll
mov
cvttps2pi
aas
pop
pop
sbb
adc
sbb
pop
movsb
lds
sub
dec
lods
pop
xor
lcall
loopne
jnp
mov
rcll
push
aam
adc
cmp
inc
xor
bound
mov
fstl
js
dec
add
addb
mov
push
jne
jmp
movsl
jo
adc
scas
adc
or
jmp
add
ret
pop
scas
xor
pop
mov
push
adc
push
out
sub
nop
or
adc
pop
xchg
cmp
jmp
js
jne
mov
je
into
mov
and
dec
jns
je
je
pop
cmp
cmp
xor
clc
xorl
push
xlat
mov
or
sbb
aaa
xor
mov
sbb
adcb
fnstsw
pop
enter
xor
popa
inc
mov
lock
adc
dec
imull
adc
mov
cmp
fs
lea
jge
adc
shlb
jmp
das
sub
rorl
sub
push
enter
out
test
jnp
outsl
mov
insb
sar
or
or
or
cmp
imul
dec
inc
pop
imul
mov
jmp
xor
movsb
or
mov
adc
pop
mov
xchg
insl
clc
push
lret
and
clc
clc
insl
xor
test
dec
or
hlt
hlt
xchg
mov
xor
or
adc
out
je
xchg
jmp
stos
xchg
cmp
in
adc
or
inc
dec
and
cmp
xlat
cmp
je
stos
xchg
clc
js,pn
adc
jne
arpl
pop
cs
inc
clc
lods
cmp
inc
hlt
fdivrs
mov
xor
fcomps
out
clc
or
pop
test
fbld
icebp
adc
xor
daa
or
icebp
sbb
lea
fldenv
mov
pushf
and
or
mov
push
pop
add
hlt
adc
sarl
dec
lods
cmpsl
ja
fdivrs
adcb
icebp
mov
into
and
push
lock
int
dec
mov
aam
sbb
xor
push
or
push
jo
xchg
aad
push
or
lock
cli
dec
mov
adc
insb
xchg
nop
mov
sub
sbb
leave
sbb
and
mull
shlb
lea
fwait
mov
inc
pop
js
lods
orb
outsl
dec
inc
push
mov
mov
pusha
xor
jge
or
test
int
in
fisttpl
and
adcb
jae
add
add
pop
addb
mov
in
xchg
lods
sbb
test
mov
xor
cmp
add
cmovb
pop
mov
mov
xchg
mov
outsb
adc
or
lea
pop
popf
jbe
ja
shlb
mov
stos
mov
push
mov
insb
outsl
xor
sub
push
cwtl
and
out
testb
mov
dec
arpl
add
mov
add
ja
or
rolb
inc
les
cmp
enter
fiaddl
inc
adc
insl
adc
xor
flds
xor
in
loopne
mov
call
pushf
sbb
dec
sub
sub
xor
adc
jne
divl
test
or
orl
ja
and
push
popf
pop
mov
loope
pop
mov
call
push
ret
aas
inc
and
in
or
xor
inc
frstor
lret
mov
add
mov
int3
insb
cmpsl
xor
or
int
dec
loopne
nop
mov
rcr
lods
lods
lds
jne
xchg
shrb
dec
mov
jns
or
call
pop
xchg
dec
and
or
mov
jo
add
jbe
adc
xchg
pop
in
inc
sub
mov
push
shlb
gs
jns
lods
aad
scas
xchg
mov
add
adc
int3
push
add
adc
dec
fs
mov
lods
and
in
gs
and
pop
cmp
in
gs
js
es
shl
pusha
jb
cmp
add
or
call
add
xchg
push
loope
nop
aam
test
adc
mov
jbe
bts
adc
mov
and
pop
push
and
sub
adc
mov
sbb
and
lcall
rorb
sbb
and
xchg
dec
dec
mov
es
andl
subl
dec
test
lods
adc
sbb
adcl
xor
mov
adc
out
lahf
xor
xchg
loope
push
push
cwtl
rorb
and
lret
cs
fdivrl
mov
pushf
xchg
sub
inc
loope,pt
lock
lea
daa
and
icebp
mov
sbb
xchg
lock
aaa
fldln2
pop
scas
mov
imul
hlt
shrl
gs
xlat
mov
aam
xchg
and
pusha
or
inc
push
and
adc
add
jno
mov
lea
inc
mov
sbb
fwait
jmp
dec
mov
fdivl
mov
xorl
ret
jnp
push
test
bound
dec
repz
arpl
adc
adc
fnstsw
or
push
test
mov
sub
testb
lea
aas
mov
je,pn
adc
mov
xchg
mov
push
js
or
dec
shlb
call
pusha
pop
inc
or
mov
and
mov
sbb
sbb
xchg
push
je
sbb
push
cmpsb
adc
inc
in
mov
das
bound
fcomps
cmc
dec
jmp
pushf
add
xchg
ja,pt
rclb
dec
lds
lock
and
mov
ret
push
sbb
inc
data16
ret
sub
sbb
push
in
inc
cmpsl
lcall
lret
dec
stos
xchg
push
popa
sbb
push
bound
and
lock
into
fmuls
xlat
dec
or
push
mov
cltd
jmp
sbb
rolb
lods
cmp
mov
stos
ficompl
xchg
and
out
cs
leave
adc
add
mov
call
cmpsl
mov
sub
arpl
aaa
push
xor
or
lcall
adc
test
adc
scas
sub
inc
dec
cmp
ja
gs
add
xor
push
lahf
call
sbb
adc
je
roll
and
xorb
aam
or
adc
and
rorb
adc
and
roll
adc
mov
xchg
xchg
lea
add
pop
add
lea
cld
push
add
mov
rolb
iret
adc
mov
inc
push
fidivrs
das
jno
cmp
pop
imul
pop
in
in
jbe
xor
les
call
fwait
shl
push
fmuls
test
and
adcl
pop
xor
je
sbb
or
ljmp
push
rcrb
inc
add
pop
fwait
xor
pushf
scas
lock
xchg
imul
or
jae
dec
add
push
int3
cmp
jnp
insl
add
or
dec
inc
inc
incl
lea
mov
idiv
aaa
sbb
testb
je
dec
pop
xchg
dec
add
jo
mov
xor
in
std
dec
in
int
or
xchg
cmpb
inc
daa
xor
pop
shrl
and
mov
and
adc
test
add
stos
sub
movb
sub
or
mov
lods
daa
jp
repnz
insl
jne
cmc
inc
or
jns
dec
mov
add
lock
mov
mov
sub
roll
rclb
adc
cmpsl
das
jno
test
or
shrb
pusha
and
push
out
add
aam
mov
and
cltd
imul
jo
cmc
dec
pop
sbb
mov
jmp
aam
mov
add
inc
xchg
scas
mov
and
loopne
cltd
hlt
sbbb
stos
jl
pop
mov
pop
add
or
xor
imull
adc
movsl
adc
adc
add
addl
sub
inc
xor
in
adc
out
mul
and
es
adc
mov
movsb
and
sub
and
dec
or
rol
add
aad
es
add
cmpl
into
inc
inc
adc
enter
mov
dec
jnp
add
xchg
repnz
adc
popf
arpl
in
sbb
or
clc
in
push
jb
and
inc
hlt
pop
add
pop
lods
rcl
sub
imul
mov
iret
xor
lock
fwait
dec
hlt
pop
adc
mov
lahf
jg
es
mov
mov
pop
add
xlat
ud0
mov
movsb
adc
mov
ds
jmp
push
xchg
rcrb
iret
xchg
jb
xchg
xor
pop
ret
mov
pop
xchg
inc
subl
xlat
mov
push
push
mov
mov
dec
pop
jnp
scas
and
imul
test
mov
jg
inc
or
ret
push
mov
sbb
arpl
popf
test
mov
and
xchg
test
pop
clc
push
dec
and
ret
lret
and
inc
cmp
daa
jo
dec
xchg
mov
mov
scas
cmpsb
mov
subb
outsb
ljmp
xorb
mov
inc
jge
cmp
mov
or
mov
incl
adcb
ljmp
push
adcl
orl
iret
push
add
inc
inc
adc
push
test
xor
in
decl
mov
out
pushf
pop
inc
scas
pop
enter
jmp
add
pop
ja
push
inc
jne
adc
lods
jne
movsb
and
mov
lods
xchg
mov
xchg
loope
inc
popa
in
xor
movl
mov
xchg
shll
add
xchg
pop
pop
aas
ret
add
push
sbb
call
sbb
das
test
xor
xor
fbstp
sub
and
fwait
pop
cld
sbb
sub
sbb
pusha
dec
insl
xor
xor
dec
adc
lock
incb
movsl
sahf
ret
cmp
jge
xor
shll
inc
mov
add
jae
xor
jmp
aas
add
in
or
push
mov
cmp
sub
adc
ret
bound
orb
mov
popa
mov
imul
movsb
in
es
jecxz
or
pop
adc
xor
mov
int3
movsb
fsubs
cmp
jmp
cltd
sub
sahf
jns
or
arpl
jmp
lock
in
call
shrb
in
cmp
adc
xor
xchg
mov
adc
mov
inc
pop
hlt
sub
cmp
and
pop
loopne
and
test
aas
sti
scas
mov
pop
adc
push
sub
mov
mov
inc
movsb
push
and
xchg
lcall
and
movsb
sbb
mov
fistps
inc
in
enter
mov
sub
and
mov
jae
imul
sub
push
in
es
nop
sbb
pop
mov
inc
gs
push
popa
and
push
jns
aad
lock
orl
pop
lock
aas
movsb
cmp
inc
ds
cmpl
test
inc
or
enter
adc
mov
test
jnp
pavgb
je
inc
fmuls
mov
add
inc
fmuls
xchg
gs
ja
iret
adc
push
repnz
repnz
movb
inc
push
push
insb
lret
xlat
adc
sbb
lds
leave
dec
mov
cmc
cmpsl
int
push
pop
outsl
pop
lods
lds
imul
pop
sbb
jne
sub
or
adc
jg
aaa
aam
adc
repz
lods
test
inc
jno
adc
fadds
mov
clc
addr16
mov
outsl
jp
push
mov
mov
loope
gs
xchg
push
subl
leave
hlt
inc
sub
jb
leave
hlt
daa
mov
pop
push
aaa
pmulhuw
mov
add
scas
xchg
mov
push
insl
movsb
or
add
leave
leave
in
int3
bswap
ror
leave
leave
mov
leave
leave
leave
lods
test
mov
pushf
cwtl
pop
pop
lret
add
sbb
notl
xchg
inc
lret
pop
and
mov
mov
mov
mov
dec
jne
mov
cmpsb
add
jb
mov
hlt
mov
mov
lea
mov
and
mov
xchg
jle
jns
or
add
and
scas
and
pop
dec
dec
lret
inc
test
pop
mov
and
test
je
sbb
dec
mov
jo
es
add
mov
ljmp
sub
dec
seto
mov
adc
sbb
sbb
dec
adc
push
por
sti
push
or
or
in
dec
and
cmc
in
push
sbb
ret
dec
adc
mov
inc
es
inc
sub
sub
or
inc
add
scas
mov
xor
xlat
rcl
cmp
dec
pusha
xchg
rclb
cmp
es
sbb
push
ret
call
pushf
add
addl
xchg
movsl
repnz
and
dec
int
pushf
sbb
dec
add
add
in
adc
je
xlat
jmp
aaa
pop
xor
cmp
sbb
sbbb
sarb
and
adc
jb
rorl
call
movsb
add
pushf
pushf
xor
in
lcall
mov
ljmp
push
cld
jle
and
adc
add
test
aaa
lret
jb
cmpsb
inc
dec
shlb
push
push
nop
xor
sub
mov
pop
mov
enter
lcall
cmp
cmp
jb
adc
xor
fs
mov
push
sbb
pop
into
jmp
sbb
jne
lea
lahf
flds
and
and
mov
lock
push
and
sub
je
popa
loope
decl
mov
dec
push
push
dec
inc
pop
imull
xor
cmp
iret
adc
pop
adc
pushf
in
iret
cmovno
jb
sub
rclb
push
movsb
push
adc
and
push
leave
rol
rclb
shl
sub
mov
pop
dec
ret
push
sbb
add
mov
pushf
xchg
adc
mov
aam
loopne
add
jmp
or
mov
mov
test
mov
dec
add
sti
idiv
or
arpl
or
mov
fidivs
and
add
or
cwtl
add
jbe
mov
jne
das
jmp
dec
sbb
mov
push
inc
pop
xor
adc
mov
push
sub
lods
xchg
mov
jne
ss
popa
jns
imul
punpckhbw
jle
pusha
mov
sti
add
mov
mov
adc
cmpsl
add
or
or
lret
cld
adc
into
adc
iret
push
ret
sbb
shrb
push
inc
push
adc
and
inc
inc
dec
dec
add
inc
mov
inc
sbb
cmpsb
mov
inc
inc
add
push
xchg
ss
iret
adc
test
and
outsl
cmp
aaa
addb
xor
xor
outsl
stos
pop
xchg
cld
mov
pop
rcll
mov
dec
jp
lods
cmp
inc
fwait
dec
add
daa
outsl
enter
or
imul
cmp
adc
in
mov
imul
push
cs
or
adc
adc
adc
cli
fs
adc
cmp
roll
add
and
xor
aam
adc
popa
dec
and
sahf
out
jnp
add
push
aam
jae
xor
push
fs
add
rcl
pop
imul
inc
aad
ret
pop
xor
jno
lods
and
push
faddl
dec
test
or
push
push
dec
xchg
add
cmpb
loopne
testb
insb
js
push
sub
adc
jb
in
rorl
int
bswap
cld
shll
pop
cmp
jb
rclb
faddp
mov
int3
jno
jnp
test
out
pop
popa
imul
lahf
cmpsl
xor
jo
scas
mov
inc
insl
loop
ja
aad
push
in
xchg
out
aaa
imull
movsb
sbb
mov
add
add
pop
fistpll
xchg
and
or
xor
push
fsts
cmp
cmp
sub
je
jp
and
dec
add
loope
cmpl
in
enter
jle
cli
outsb
dec
or
test
pusha
loopne
mov
repnz
jecxz
xlat
adc
or
aad
daa
jmp
pushf
movsl
mov
adc
out
lahf
xor
clc
mov
test
adcl
packssdw
adc
stos
call
mov
mov
and
mov
sub
call
adc
mov
pop
and
dec
xchg
fst
aam
jmp
and
adc
pop
sub
call
pop
mov
scas
mov
sbb
sub
je
mov
xchg
adc
xchg
and
xor
lahf
in
repz
dec
xchg
sbb
xchg
andl
dec
pop
inc
out
and
adc
push
cmc
mov
ret
jmp
dec
dec
inc
pop
andl
fiaddl
push
sub
adc
sbb
xor
addb
mov
orb
pop
sub
lret
and
loopne
dec
sub
call
xchg
and
xchg
sbb
ret
pop
adc
ret
push
push
sbb
int3
dec
insl
and
mov
xchg
fadds
fldcw
fldcw
imul
adc
adcl
or
in
popf
xchg
bndldx
jmp
xchg
and
jne
mov
jle
adc
dec
sarb
clc
bound
jmp
and
xchg
xchg
rcr
dec
faddl
and
mov
add
je
roll
mov
mov
inc
test
test
fcompl
pop
popf
push
pop
ljmp
cs
js
fldl
push
shlb
mov
xchg
mov
sbb
xor
ret
inc
add
xor
lods
data16
and
ds
or
nop
fstl
fistpl
add
or
in
inc
xchg
mov
inc
pop
mov
dec
mov
inc
ret
push
fstl
loope
shlb
pop
mov
pop
enter
mov
gs
cmp
les
mov
fucom
fnstcw
push
pop
jle
sar
into
inc
shrb
add
ror
sub
daa
or
mov
xor
pop
aam
mov
in
shl
test
loopne
and
xor
xchg
xchg
cmpsl
popa
and
jno
inc
ret
cmpb
adc
jmp
mov
das
ror
jae
icebp
or
xchg
xor
dec
aam
in
iret
lock
add
mov
lret
pop
dec
sti
dec
pop
cmpsb
imul
or
mov
add
faddl
dec
enter
daa
les
enter
je
stos
mov
xchg
out
ss
sti
filds
scas
inc
aaa
mov
enter
loopne
push
loope
rorb
jo
jmp
mov
inc
xchg
xor
subb
in
rol
adc
fiaddl
add
inc
loopne
cwtl
in
loopne
stos
subl
loope
rcl
dec
lods
stos
xchg
pop
lock
call
cmp
jns
outsl
cmp
in
push
in
jbe
popa
mov
shll
jo
and
push
xor
in
arpl
push
inc
pop
pop
arpl
outsb
sbb
test
jg
inc
or
movsl
rcll
jno
les
mov
pusha
shll
or
cs
pop
jecxz
xchg
mov
pop
cmp
or
sbb
in
mov
mov
frstor
and
jmp
js
add
push
push
push
sti
data16
adc
shrl
repz
xor
push
and
and
xor
and
xchg
sub
daa
imul
sub
sarl
jge
adc
xor
add
sbb
les
cmp
push
imul
xchg
popa
xchg
jg
and
mov
int
xor
stc
jno
mov
cmp
lahf
xor
jmp
and
xor
pop
enter
outsl
mov
inc
sbb
neg
inc
mov
inc
orb
push
insb
insb
sbb
xor
push
inc
pop
neg
sbb
nop
fldenv
test
jo
pop
jo
pop
pop
cmpsb
add
shl
pop
test
adc
sub
arpl
pop
push
cmp
movsb
xor
sub
call
jo
inc
dec
or
mov
fadd
and
inc
repnz
sbb
dec
mov
sahf
pop
push
movsb
pop
dec
dec
sub
cs
push
jns
jo
push
add
mov
xchg
push
push
and
pushf
iret
xchg
lret
sbbl
in
sub
xchg
lret
enter
out
pusha
inc
and
pop
arpl
arpl
pop
push
inc
jle
inc
adc
push
inc
daa
push
sub
mov
sbbl
movsb
repnz
das
push
enter
outsb
mov
pop
push
or
mov
repz
adc
sub
pop
daa
jg
inc
push
and
jmp
push
xor
jo
fnstcw
out
xchg
add
pop
lock
cld
and
inc
jl
push
push
pop
cmpsl
nop
out
addr16
aam
int3
fsubr
and
sbb
and
insb
cld
repz
ds
push
mov
push
inc
jb
ret
cmp
adc
xor
stos
es
add
mov
pop
nop
adc
mov
imul
das
arpl
mov
in
repz
add
jmp
ds
js
inc
sbb
mov
les
in
loopne
mul
inc
sbb
decl
jl
xor
push
mov
add
jl
mov
mov
cwtl
pushf
mov
lods
mov
mov
rol
int3
mov
fmull
call
mov
hlt
clc
cld
mov
or
mov
mov
sub
mov
mov
xor
inc
sbb
fmuls
dec
fsubrs
pop
xorl
cmp
mov
sub
dec
aaa
add
dec
in
fisttpl
inc
fcmovb
aas
test
pop
orb
pop
dec
insb
test
mov
lret
xchg
in
sub
cwtl
fcomps
mov
nop
lret
test
in
sub
lods
inc
mov
test
jl
jb
xchg
mov
test
lods
les
push
mov
int3
dec
in
sub
shl
lret
pop
aam
repz
push
mov
loopne
in
sub
in
xchg
or
insb
movsb
jb
lock
lret
cwtl
clc
test
pop
push
mov
enter
inc
add
or
xchg
or
adc
adc
pop
dec
in
sbb
and
push
and
sub
mov
jge
pop
push
shlb
xchg
inc
decl
add
jno
cmp
mov
pop
dec
and
push
pop
push
loopne
clc
push
sbb
inc
insb
outsl
jae
and
sub
arpl
popf
daa
roll
insl
inc
cwtl
xchg
sbb
aas
imul
jle
popa
jb
mov
inc
jo
icebp
je
dec
gs
mov
addr16
fucomi
pop
sub
dec
imul
or
fs
pop
dec
arpl
or
dec
jae
bound
fs
fsubr
dec
pop
cmp
insb
jns
jp
jae
sbb
sub
inc
outsl
push
pop
xorb
in
pop
out
sbb
pop
xchg
pop
nop
mov
imul
push
or
divb
pop
inc
or
add
pop
dec
xor
add
xor
mov
iret
jmp
dec
cmp
dec
xor
outsb
push
cltd
ret
out
iret
adc
imul
cmp
test
in
and
das
fstpl
popa
in
pusha
in
in
pop
xchg
pop
mov
xchg
mov
pop
ja
loopne
add
and
xchg
call
outsl
addr16
push
notb
das
pop
cmp
mov
out
inc
imul
push
dec
dec
cmp
loopne
inc
outsl
arpl
or
loope
inc
and
sbb
pop
outsl
stos
and
pop
xlat
stos
and
or
jbe
mov
sub
rcl
and
or
add
roll
scas
and
pusha
cmc
cltd
pop
mov
cmp
fistl
cmc
testb
and
jg
inc
jge
je
jp
cmc
mov
mov
sbb
mov
in
movsl
xchg
cmpsl
add
ja
dec
xor
mov
dec
sbb
mov
inc
cmp
jmp
pop
dec
lock
add
push
leave
orb
notb
jb
add
pusha
push
mov
les
jns
add
aaa
clc
hlt
add
insl
iret
rcrl
pop
outsl
stc
xor
in
add
pop
push
fs
add
mull
dec
push
in
pusha
imul
sbb
pop
mov
clc
lahf
add
ja
je
inc
push
pusha
push
pop
nop
fs
je
adc
inc
ficomps
or
stc
inc
and
jle
imul
sti
aas
lea
mov
push
cmpsb
add
neg
call
add
sub
and
dec
or
aam
jl
nop
pop
add
push
pop
sub
cmp
gs
adc
xor
add
and
cmpsb
mov
incl
test
jne
faddl
pop
cmp
cmp
jl
mov
or
mov
lods
jo
cmpb
push
xchg
adc
push
inc
sub
das
xchg
push
dec
sbb
add
push
add
push
mov
inc
inc
scas
add
fmuls
sbbl
add
push
add
inc
pop
pop
cmpsl
cmp
mov
inc
or
dec
imul
rorb
das
ss
cmp
add
imul
test
xor
pop
sub
cli
cld
adcl
sbb
cmpsl
mov
jg
gs
or
adcb
push
sbb
out
loope
into
add
dec
cmp
insl
mov
loopne
mov
loopne
dec
jle
jb
dec
add
push
sub
fistl
cld
shlb
aaa
add
jecxz
ficomps
jge
in
mov
testl
xchg
xchg
in
sti
inc
xchg
push
imul
push
sbb
cld
sub
out
or
iret
push
pop
sub
fildll
sbb
and
pop
xor
inc
movsb
mov
push
jmp
pop
repnz
add
psubw
add
out
ljmp
xor
mov
clc
add
push
inc
insb
mov
jnp
pop
dec
outsb
outsl
cmp
or
insb
insb
pop
push
outsl
pop
or
and
imul
std
mov
cwtl
mov
nop
roll
ds
jns
dec
push
xchg
call
repz
mov
add
push
add
cmp
pop
insl
scas
jno
sti
fs
addr16
push
sbb
test
adc
arpl
ret
cmp
xor
mov
xchg
aaa
repnz
pushf
cs
dec
fidivrs
xor
push
xchg
call
pop
nop
test
repnz
ds
push
test
subb
inc
mov
or
popf
mov
rolb
cmp
daa
ret
cmp
mov
cmp
insb
pop
sub
sub
jmp
jle
mov
push
div
add
sub
or
mov
insb
xor
or
in
or
push
cmp
mov
jp
mov
ja
mov
je
cltd
stos
pop
add
xor
test
inc
push
and
bound
mov
sub
je
push
push
push
push
imul
testl
push
je
or
jae
sub
add
mov
jl
xor
add
nop
add
cwtl
mov
xchg
mov
test
lcall
or
jo
inc
and
int3
mov
fs
or
dec
fldenv
test
nop
add
pop
sbb
iret
xchg
sbb
ret
adc
add
push
lods
add
out
test
cmp
aam
icebp
push
adc
in
notl
jno
or
add
test
inc
mov
pop
inc
scas
cmp
xor
or
mov
popa
jl
push
fwait
clc
sub
js
lret
mov
inc
enter
push
or
sub
data16
adc
lea
adc
or
sahf
or
add
je
hlt
and
push
cmp
pop
xor
jbe
xchg
fcmovne
cmp
xchg
xchg
xchg
xchg
and
and
xchg
xchg
xchg
and
xchg
xchg
xchg
sub
sub
xchg
xchg
xchg
sub
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
adc
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
sbb
xchg
xchg
xchg
add
add
xchg
xchg
xchg
add
sahf
xchg
xchg
or
or
cmp
mov
inc
add
adc
add
lahf
cmpsl
stc
clc
add
cld
clc
call
hlt
loopne
fsub
iret
repz
rcr
enter
cmp
repz
les
iret
repz
lods
cwtl
movsb
iret
repz
nop
pushf
mov
cmp
test
push
je
insb
pop
fs
repz
push
pop
dec
push
inc
dec
cmp
repz
inc
xor
repz
repz
sub
and
jns
int3
adc
clc
add
pushf
out
sahf
add
add
add
push
hlt
loopne
fdivrs
out
in
fmul
aam
jns
out
int3
mov
jns
mov
cwtl
sbb
cltd
jo
enter
add
sub
adc
das
or
cs
pop
iret
inc
in
inc
sub
adc
sub
pushf
or
or
jmp
dec
jnp
xlat
sub
out
jl
mov
push
inc
jl
outsl
inc
xor
xchg
mov
sub
jbe
test
pusha
pop
jle
push
or
sbb
pop
andb
ja
mov
xchg
movsl
and
or
and
pop
out
lahf
mov
and
add
mov
daa
sbb
filds
inc
mov
das
or
js
loop
or
cmp
filds
inc
jo
sbb
pushf
cmp
push
cmp
popf
cmp
fbstp
pop
or
je
mov
cld
sub
cmpsb
xchg
lret
cwtl
out
pop
nop
repnz
or
or
jecxz
loopne
das
inc
nop
sbb
jo
outsb
lret
sub
push
enter
xor
and
gs
shlb
push
xchg
fcompl
stc
add
mov
sbbb
dec
push
and
push
or
inc
outsl
xor
enter
push
dec
push
mov
int3
push
jo
cmp
jno
mov
scas
cmpsb
pop
js
pop
int3
sbb
lret
mov
rcrb
mov
jb
mov
enter
push
leave
nop
das
and
shll
cmp
or
frstor
fsubrl
add
and
jo
out
add
dec
adc
push
mov
add
mov
push
adc
gs
mov
sbb
add
je
in
jno
xchg
jg
add
mov
mov
inc
jecxz
sbb
pop
dec
dec
and
leave
sbb
jge
xor
push
out
adc
and
mov
nop
xchg
mov
in
es
fimuls
dec
inc
mov
bound
stos
ds
mov
push
inc
jnp
or
cmp
in
sub
xor
shrl
clts
xor
clc
push
push
push
movsl
xchg
imul
aaa
daa
idivl
std
sub
insl
adc
test
xor
mov
cmpb
dec
imul
add
lock
add
add
outsb
pop
arpl
insb
idivl
add
insl
inc
outsl
pop
js
sti
fidivrs
mov
add
es
jb
fstl
loop
jb
popa
or
popa
dec
movsl
fnstsw
es
insb
bound
jbe
es
mov
scas
imulb
pop
addr16
out
jnp
pop
jb
addr16
add
pop
imul
mov
arpl
insb
daa
push
sti
outsb
inc
imul
mov
fnsave
cmpsl
sbb
fcoms
mov
and
pop
bound
mov
xchg
mov
popa
dec
fdivp
ljmp
mov
cmpsb
outsl
dec
pushw
das
add
or
outsl
pop
sbb
fs
jle
insl
mov
hlt
hlt
and
sub
aaa
jbe
fsub
jne
cli
mov
xchg
shlb
add
dec
outsl
dec
cmp
fbld
and
jg
inc
pusha
shrb
call
and
mov
test
adc
rclb
add
push
or
xchg
inc
xchg
or
inc
lods
imul
adc
or
xor
addl
xor
lret
pop
orb
pcmpeqb
push
mov
dec
sbb
sub
decb
sbb
jg
inc
insb
or
das
es
icebp
lea
int3
mov
jno
jmp
ret
mov
sub
dec
add
pop
pop
addr16
enter
pop
or
xor
mov
xchg
ds
shlb
sub
or
or
movsb
enter
push
mov
xor
add
and
or
es
ret
xchg
nop
jo
test
pop
jb
movsb
xor
pop
inc
hlt
jle
or
jbe
test
or
mov
push
add
mov
xor
out
pop
dec
pushw
daa
add
lcall
add
add
add
push
pop
pop
or
or
sahf
out
decb
or
or
or
jns
out
adc
adc
push
out
sahf
out
sbb
sbb
out
mov
lahf
sbb
push
pop
and
and
and
mov
fcomps
sahf
out
cmp
cmc
or
and
jns
out
dec
arpl
movsl
repz
out
shl
std
adc
repz
sub
push
imul
lods
ret
add
imul
shll
out
nop
mov
shr
xchg
add
and
xor
add
add
adc
xor
add
and
adc
adc
and
adc
push
or
and
xor
or
and
xor
or
push
adc
xor
or
and
and
sub
and
adc
sub
and
adc
xor
xor
adc
xor
cmp
adc
xor
adc
and
inc
pop
dec
xor
and
sbb
and
xor
push
and
xor
sbb
pop
adc
xor
sbb
and
popa
pop
out
bound
and
enter
and
xchg
xchg
xchg
lret
and
jb
enter
addr16
push
pop
jecxz
dec
aas
add
std
dec
adcl
inc
loope
ds
sarl
les
or
inc
add
pop
lds
shlb
mov
push
in
aam
aaa
out
je
or
je
push
sub
push
adc
push
add
test
xor
adc
shlb
lock
movsb
push
pop
inc
push
rcrb
lock
inc
sub
sahf
cmp
enter
rol
xchg
or
dec
pop
pusha
enter
pushf
int
add
inc
or
dec
pusha
or
cwtl
push
sbb
mov
or
pop
in
or
fdivl
xchg
adc
jecxz
pop
aaa
lock
xchg
rcr
jecxz
cmpb
rclb
pop
iret
lock
jmp
mov
pop
mov
pop
push
mov
jae
mov
inc
repnz
mov
inc
add
inc
cld
add
nop
cld
je
add
inc
push
std
mov
loopne
push
cld
addb
adc
mov
or
shll
and
jae
inc
mov
je
outsb
jae
and
adc
jl
addl
cwtl
xchg
jb
push
push
adcb
add
inc
xchg
loopne
ja
leave
add
insb
sbb
add
jns
ljmp
adc
mov
test
and
or
pushf
sbb
cmp
or
inc
mov
cmp
xchg
mov
and
loopne
mov
pop
sti
push
add
out
fidivs
rcr
jns
out
loope
mov
out
addl
outsl
adc
shlb
or
push
push
push
pop
push
leave
paddusw
and
xor
shlb
adc
ljmp
push
repz
add
addr16
in
out
stos
adc
dec
pusha
jl
fimull
push
dec
sub
sub
adc
ror
fimull
push
out
dec
dec
or
and
inc
jb
movntps
and
push
dec
loop
lock
mov
xchg
sbb
repz
add
jne
push
push
push
jne
cmp
xor
mov
sbb
daa
dec
shrb
mov
xchg
repnz
lea
lock
add
repz
and
dec
inc
xchg
dec
out
mov
ror
inc
arpl
sti
orb
fs
and
popa
test
fistps
shll
adc
jge
sbb
add
adc
cmpsb
push
and
mov
sub
fistpl
and
clc
negl
bound
and
test
add
mov
divl
add
and
add
das
add
hlt
push
mov
xchg
push
dec
clc
lds
call
mov
ret
pop
iret
xchg
push
push
inc
fsubrs
push
hlt
in
cmp
push
in
ss
dec
pop
inc
and
push
mov
lahf
and
inc
sub
inc
ljmp
test
jne
pop
ficoml
pop
inc
jecxz
push
dec
cmpsl
lret
and
cmp
inc
mov
mov
adc
into
insl
or
inc
or
add
es
rcr
repz
mov
aaa
in
idiv
incl
inc
dec
sub
and
sub
push
pop
sbb
cmp
sub
sub
and
dec
dec
xor
push
sbb
cs
or
or
xchg
mov
add
cwtl
cs
add
push
mov
lods
ljmp
bound
sbb
mov
adc
data16
stos
push
or
add
out
mov
adc
cmpb
ret
mov
rclb
inc
ljmp
inc
xchg
or
add
hlt
insl
imul
xor
out
jo
sub
lcall
or
xchg
hlt
cwtl
sub
mov
call
cld
dec
jne
jo
inc
js
jle
mov
adc
and
repz
xor
imul
push
jno
push
sbb
push
aas
out
lock
aam
lret
aad
sub
and
jb
xor
mov
push
push
pop
enter
nop
cmpb
fisubl
inc
addb
dec
cmp
pusha
jl
sub
stc
xchg
and
orw
push
or
pop
das
dec
cmp
add
push
or
add
or
jmp
jae
repnz
mov
pop
or
bnd
and
push
fwait
rcl
pop
or
push
xor
or
pop
in
movsb
adc
adc
bound
and
push
or
lea
pop
mov
mov
sti
inc
mov
jb
or
orl
jne
or
mov
inc
xor
das
jno
push
pop
push
dec
dec
dec
inc
dec
sub
fnsetpm(287
sbbb
mov
mov
or
mov
shlb
mov
xchg
inc
cmp
cmp
test
clc
jmp
xlat
or
push
insb
and
mov
or
mov
je
xor
inc
fsubrl
sbb
sub
add
cmp
add
push
xorl
rorb
inc
lret
and
call
sub
sbb
inc
ds
insb
test
dec
addl
cmp
xor
jo
cmp
xchg
pop
nop
or
aaa
lea
add
or
sbb
mov
pop
in
add
mov
in
inc
shll
std
or
jno
mov
inc
cmp
aad
dec
and
hlt
or
push
push
shlb
inc
pusha
sbb
add
fstpl
icebp
pop
jo
push
movsl
inc
and
mov
int
or
inc
mov
daa
pop
or
fadds
pop
daa
dec
sbb
cmpsl
loop
fisubrs
cmp
leave
daa
nop
out
push
sub
sub
lods
mov
popf
test
cltd
add
or
fistpll
call
sbb
pop
push
xchg
movsl
push
sbb
outsl
jb
shr
rcl
inc
add
push
cmp
rcll
outsl
inc
sub
popa
imul
inc
or
inc
outsl
je
push
shll
xchg
insb
push
inc
jb
outsb
adc
movsb
addl
addb
sbb
pop
pop
lds
push
mov
mov
push
xchg
dec
inc
mov
push
test
push
nop
dec
push
inc
lock
mov
push
adc
or
add
imul
loopne
push
push
cmpsb
cmpsl
add
sbb
mov
ds
jl
fwait
xchg
adc
push
lock
sub
loopne
add
lods
push
push
fs
xchg
mov
cmp
push
int3
outsl
cmp
push
shll
xchg
lahf
out
jl
inc
inc
sub
and
push
cld
push
cmpsb
adcb
jg
xchg
and
or
or
add
push
xor
push
push
adc
iret
inc
roll
test
insb
jno
or
lock
fcompl
cwtl
es
push
or
dec
adc
push
setnp
cmp
pop
sub
enter
inc
xor
insb
sub
sbbl
and
ss
inc
pushf
mov
pop
in
nop
scas
mov
popl
clc
cs
push
sbb
and
mov
pop
sub
dec
pop
dec
mov
rol
call
jae
xchg
sub
and
outsl
inc
jl
imul
outsb
inc
mov
test
jl
cmp
push
adc
cmp
sahf
out
or
inc
push
enter
movsl
lock
pop
jno
push
mov
sub
and
push
push
addb
frstor
push
loopne
push
nop
add
jbe
push
add
inc
jne
subl
loopne
lods
cld
push
insl
bound
xchg
xchg
mov
bound
movsl
mov
inc
jg
test
or
cmp
or
dec
insb
imul
mov
arpl
outsl
sbb
jl
or
xchg
fbstp
fs
in
xchg
jg
bound
dec
gs
jbe
or
adc
adc
pop
dec
enter
outsb
fs
cld
push
les
push
imul
imul
bound
popa
movsl
pop
scas
add
adc
add
or
push
add
arpl
test
das
or
outsl
jb
pusha
xchg
iret
xchg
inc
and
popa
imul
enter
imul
and
or
icebp
in
jns
orb
rdtsc
or
leave
push
fidivl
popa
or
stos
bound
mov
aaa
cld
jle
iret
iret
mov
fsubrl
imul
jae
std
dec
movl
cmp
rol
lret
jl
out
dec
shrb
mov
sub
js
mov
or
push
or
sarb
pop
decl
stc
pushf
add
adc
sub
xchg
add
imul
xor
bnd
sbb
orb
or
rclb
mov
mov
pop
sbb
cmp
xchg
dec
mov
xor
testl
lds
and
mov
pop
out
nop
int3
dec
inc
mov
pop
int
xor
iret
mov
push
push
xor
fwait
les
sbb
add
jnp
test
fimuls
sysenter
xor
mov
ja
push
adc
xor
pop
add
cwtl
into
es
hlt
insl
jo
mov
repz
adc
clc
insb
jl
or
shlb
add
push
test
cmpsl
mov
jb
leave
dec
or
fidivrs
xor
pop
popf
loopne
frstor
fs
or
or
insb
mov
int3
adc
and
mov
xor
mov
mov
pop
mov
repnz
mov
iret
loop
stos
mov
iret
test
adc
and
into
mov
leave
jmp
or
add
fdivrl
gs
or
sub
add
cmp
les
cmp
bt
jno
sgdtl
imul
xchg
jo
adc
pop
and
jb
mov
or
dec
mov
mov
arpl
add
jmp
inc
shlb
test
jo
sahf
jnp
add
xor
pop
or
fmuls
xchg
add
in
fadds
in
out
mov
ss
xchg
cmpl
sub
jb
cvttps2pi
xor
adc
addr16
clc
dec
repz
adc
gs
imul
stos
or
sbb
wrmsr
sbb
rclb
sub
cmp
aaa
push
push
roll
ja
test
insb
add
out
xchg
hlt
or
dec
push
pop
addb
mov
mov
rcrb
imul
pop
add
rorb
fsubs
and
mov
mov
fwait
andb
ja
jbe
call
inc
cmpsl
mov
jnp,pt
ss
enter
pushf
jne
jg
repz
mov
fcompl
pusha
xchg
jo
into
mov
mov
xchg
lahf
in
mov
rcrb
sti
xchg
js
mov
adc
push
add
mov
push
add
add
add
add
inc
bound
inc
add
add
add
mov
hlt
pushl
or
or
sbb
cmp
inc
mov
mov
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
mov
call
call
dec
push
dec
dec
cli
push
jmp
lret
dec
icebp
dec
dec
lcall
movsl
mov
out
imul
loopne
cmp
repz
xchg
mov
lcall
lods
sub
cmp
test
push
sbb
push
imul
inc
mov
push
out
sub
movsb
outsb
loopne
lods
es
mov
insb
mov
dec
dec
xorl
xchg
mov
xor
pop
lods
push
pusha
xchg
mov
imul
dec
xchg
jo
mov
in
cmp
jae
cmpsb
sahf
pushf
cmpsl
push
js
mov
xorb
push
dec
push
call
insb
sahf
in
lock
rorb
adc
inc
mov
nop
leave
sbb
pop
sbb
or
inc
cs
cmc
addl
push
test
sbb
mov
dec
cmp
aam
cmp
add
and
sbb
dec
mov
stc
push
out
adc
sub
inc
insb
mov
mov
add
push
cmp
fwait
test
incl
pop
push
pop
pop
sbb
pop
insb
loop
incl
inc
mov
xchg
rorl
mov
sub
or
dec
add
dec
and
rclb
pop
dec
cmp
jb
mov
inc
lock
cmpl
xchg
pop
cmp
test
sub
inc
cmp
test
lds
mov
mov
add
sbb
cmp
push
rol
mov
add
jno
mov
insb
in
add
dec
jnp
mov
sbb
into
inc
pusha
add
inc
vmwrite
lahf
inc
fdivl
add
sbb
les
pop
mov
data16
inc
or
mov
lahf
insb
push
push
mov
lahf
push
loop
adc
sti
mov
or
movsb
cmp
retw
fwait
int
stos
rorw
sbb
mov
aam
sti
out
cmp
clc
rclb
push
jo
data16
mov
or
pop
insb
cmp
fiaddl
push
inc
mov
add
loop
add
pop
add
andb
sub
dec
push
xchg
add
add
adc
clc
das
in
clc
adc
addl
pop
add
jbe
adc
sbb
sbb
or
add
mov
incl
ljmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
push
mov
mov
and
and
mov
mov
mov
mov
push
mov
xor
cmp
or
call
lret
inc
inc
inc
inc
inc
inc
inc
clc
sub
mov
mov
rorb
dec
push
cmp
fcmovb
ljmp
lcall
mov
mov
inc
in
in
hlt
lcall
lock
push
pop
lahf
out
xorb
lcall
ljmp
cmp
mulb
out
mov
sbb
dec
mov
or
cmp
push
push
loopne
xor
divl
pushf
sub
fucom
jmp
dec
and
es
out
shr
or
and
idivl
out
incb
xor
fidivrs
insb
ss
mov
push
sub
dec
push
in
iret
cmp
cs
jb
sbb
push
push
sti
mov
repz
lock
push
mov
lahf
mov
pop
aad
call
cmp
aam
sahf
or
dec
les
insb
into
sub
int3
in
add
dec
sti
fcompp
mov
pop
lds
in
dec
insb
out
fnstcw
or
scas
test
lock
cbtw
cmc
cli
into
mov
mov
je
out
cmp
jge
out
sub
sub
jbe
into
push
enter
jmp
push
mov
xchg
and
enter
enter
in
jnp
pop
xchg
push
pushf
push
or
mov
mov
inc
movsb
sub
add
stos
pop
adc
push
cs
popa
adc
or
sub
aas
pop
sub
orb
and
mov
call
add
shlb
jl
aam
sbb
inc
pop
and
ljmp
fs
or
aaa
sti
adc
hlt
push
pushf
bound
add
cmp
and
cmp
addb
aas
sub
rcrb
or
add
call
xchg
clc
sub
xlat
enter
or
or
or
orb
and
mov
dec
pushf
xor
and
mov
sub
xor
cmp
inc
mov
sahf
out
mov
and
push
inc
adc
inc
test
loop
add
je
in
fimuls
mov
sbb
sbb
add
cmp
sarb
adc
inc
es
push
dec
inc
call
mov
aam
mov
inc
out
push
and
push
mov
push
inc
dec
jo
and
scas
push
inc
jnp
inc
aad
mov
sbb
mov
cmp
cmp
lahf
xor
lock
jo
into
or
dec
pop
hlt
and
mov
and
ret
add
pusha
or
adc
pop
or
add
inc
movl
add
fs
adc
insl
pop
sahf
dec
sbb
or
ret
sbb
cmpsb
sub
notl
dec
cld
mov
movl
fadds
push
mov
movsl
inc
cmp
push
cwtl
repz
mov
test
adcb
outsl
adc
or
bound
fbstp
sub
xor
add
jecxz
mov
jno
gs
call
nop
and
jb
daa
mov
jb
dec
sub
mov
pop
dec
inc
cmc
add
xchg
or
int3
cwtl
imul
push
xchg
daa
push
inc
repnz
dec
push
push
inc
push
in
loopne
xchg
inc
daa
push
jo
daa
orb
lret
or
inc
insb
popa
femms
insb
lods
in
inc
xchg
dec
outsl
cld
adcb
imul
push
lock
pop
mov
mov
popa
push
movl
adc
or
jo
pusha
int
inc
fsubr
mov
mov
lret
out
jns
daa
add
adc
and
dec
xor
insb
dec
inc
mov
sbb
add
adc
and
lcall
jne
les
xor
cmpsl
push
mov
xchg
push
enter
ret
mov
cli
adc
stos
sahf
xchg
daa
sbb
mov
clc
pushf
mov
ljmp
xchg
jp
dec
pop
pop
push
loop
in
aas
xchg
sub
pandn
pop
sarb
xchg
xor
dec
inc
sub
cmovo
jle
movsl
inc
cmc
aaa
mov
rol
and
xchg
nop
and
or
inc
pop
xor
sub
test
xor
or
rcrl
push
imul
jne
pop
or
or
leave
xor
scas
cld
xor
rcrl
mov
xor
jle
cmp
pop
pop
add
popa
loope
aas
add
mov
ret
test
xorl
xor
cmpsl
xchg
cmp
sub
mov
aaa
cmpsl
lahf
jecxz
xchg
pushf
pop
sbb
xor
movsl
outsl
adc
pusha
sbb
add
js
sbb
xor
lret
sub
outsb
lahf
jne
push
push
pushf
add
push
xor
pop
mov
lahf
cmp
test
add
dec
add
or
or
cmpsb
imul
xchg
sbb
and
or
push
sub
or
pop
popa
and
push
push
lahf
xor
xchg
cwtl
outsl
xlat
or
dec
testl
or
iret
sub
xchg
mov
dec
push
jne
mov
adc
cli
jg
je
sub
xchg
stos
cld
dec
faddl
rcll
into
aas
sub
je
sbb
or
fsubs
into
ja
dec
sbb
sbb
cmp
cmp
jmp
adc
jmp
mov
arpl
and
add
jne
sub
gs
mov
cmp
adc
movsb
and
dec
loop
adc
sub
popa
insl
test
mov
cmp
dec
pop
cmp
fstpl
add
imul
jmp
psllq
pop
pop
aad
loope,pt
cmpsl
push
xchg
popf
lods
inc
in
add
push
push
inc
dec
and
xchg
xor
jo
in
sub
push
outsl
mov
add
cmp
sbbb
ja
cmp
les
pusha
mov
xlat
cwtl
insb
lods
addb
inc
push
add
cmp
fnstsw
xchg
orb
pop
fbld
or
and
mov
test
outsb
fisttpl
xlat
lds
icebp
push
mov
movsb
dec
lret
sbb
bound
cmp
insl
inc
dec
sbb
lds
xor
filds
inc
test
inc
mov
lret
xor
cli
sub
xor
mov
js
push
jo
mov
sbb
sub
xchg
pop
xor
push
push
pop
xchg
das
insb
insb
cltd
xor
lea
lea
jp
pop
cmp
inc
aas
jne
sahf
sub
mov
dec
in
cld
sub
xchg
clc
hlt
xor
cmp
nop
mov
mov
js
std
imul
in
jge
push
shrl
sbb
dec
adc
adc
les
call
lret
sub
adc
mov
jno
hlt
hlt
pop
xchg
push
xchg
hlt
repz
ss
ret
icebp
stc
aad
xchg
jbe
mov
stos
cmp
and
xchg
stc
shll
pop
xchg
fiaddl
pop
lea
pop
fs
enter
or
jo
test
rolb
sub
hlt
loopne
pop
pushl
add
sub
icebp
jb
aad
or
adc
movsb
sarb
add
sbb
jge
popf
mov
push
pop
jp
enter
lret
jl
xor
pop
push
or
xor
sbb
sub
cmpsb
cwtl
shl
jb
xor
jg
sub
out
adc
scas
sbb
push
lahf
pop
loopne
shr
les
or
mov
into
test
jnp
sbb
jmp
pop
sbb
sub
fdiv
lock
rorl
movsl
push
call
mov
push
and
xchg
push
push
aad
lock
mov
in
jae
ficoms
push
dec
int3
xchg
xchg
adc
ret
or
into
cmpl
jle
mov
in
cmp
je
push
faddl
mov
add
adc
test
fistpll
out
add
pop
repz
mov
subl
lock
cld
xchg
cmp
add
icebp
and
cwtl
mov
mov
movsl
mov
mov
inc
adc
jo
and
mov
sub
leave
loopne
in
lea
or
xchg
jge
aaa
push
in
cmpb
lahf
test
inc
push
lods
jp
popl
movsl
adc
inc
mov
adc
mov
lahf
pop
nop
inc
or
enter
cs
xchg
jo
idiv
dec
shlb
adc
mov
sub
lods
sti
add
loopne
sbb
add
add
hlt
push
xchg
loopne
test
cmp
sub
fsubrl
adc
xchg
or
bound
jbe
in
mov
lods
es
or
pusha
lods
add
pop
add
pop
hlt
sub
in
js
movsl
xlat
inc
sub
sahf
xchg
add
fsubr
or
mov
or
jecxz
adc
inc
pop
push
dec
pop
and
sub
sub
inc
pushf
jmp
pop
pop
fists
cmp
and
lcall
push
push
push
push
or
lea
sub
inc
movq
popa
loopne
push
popf
and
cmp
orl
xlat
push
or
loope
or
adcb
mov
inc
or
push
mov
dec
test
and
or
adc
sub
fstpl
xchg
mov
incb
jmp
jecxz
ds
mov
adc
adc
outsl
rorb
or
xor
or
or
movsb
stc
xchg
hlt
cmpsl
xchg
pop
cmpl
xchg
pop
enter
dec
jne
pop
adcb
dec
insb
adc
push
inc
or
pop
push
clc
xchg
xor
or
xchg
jno
lahf
add
lods
loopne
ficoms
xor
and
loop
inc
mov
je
xchg
rdmsr
cmp
cmp
pop
sub
cmp
inc
push
jmp
inc
xor
push
mov
add
cltd
or
and
outsb
dec
mov
movsl
scas
subl
xchg
cmp
in
xor
jbe
stc
popl
jns
cmp
pop
leave
mov
out
das
xchg
inc
xor
sbb
je
xor
jl
mov
cmp
sub
cmp
inc
xor
addr16
inc
adc
push
sbb
push
add
mov
push
mov
test
lods
mov
jo
vunpcklps
call
adc
mov
fmuls
or
sbb
arpl
ret
sub
add
push
and
rcrb
push
cmp
push
popa
pop
cmpsl
ret
popf
xchg
aaa
and
and
and
sub
sbb
or
jle
push
pop
sbb
jl
and
scas
adc
mov
loop
aam
dec
leave
or
jbe
cmp
jle
mov
aad
outsl
push
sbb
enter
pop
das
repnz
shl
lods
pop
adc
movsb
test
fcomps
lret
shll
cmpsb
in
inc
push
pop
arpl
dec
mov
pop
jge
jae
les
jbe
xlat
or
aaa
aam
adc
shr
lea
popf
and
mov
push
ret
hlt
imul
and
pop
cs
inc
adc
dec
popa
ja
pop
mov
cmp
je
jne
xchg
cmpsb
xchg
inc
adcl
sbb
int3
xchg
test
test
sub
shrb
jae
lods
fisttps
mov
add
and
call
pop
or
fwait
inc
sub
divl
outsl
inc
add
das
adc
dec
push
mov
xchg
inc
xchg
sub
mov
sub
or
cs
jmp
and
aas
mov
ljmp
or
or
imul
add
stos
into
inc
jno
scas
fcoms
pusha
leave
inc
and
cmp
dec
enter
adc
mov
or
add
cmp
inc
push
mov
leave
cmp
nop
sub
add
xchg
or
dec
push
fistps
pop
and
cmp
sub
sbb
sbb
sbb
aaa
xchg
aaa
xor
iret
sub
imul
rcrb
inc
and
in
dec
jmp
ljmp
test
sbb
in
jo
pop
loopne
sbb
mov
adc
sbb
ret
fidivs
dec
arpl
shrl
mov
push
push
fcmovbe
test
sbb
or
shrb
sbb
mov
add
pop
jne
xchg
mov
int
push
sbb
or
push
inc
stc
lea
and
cmp
mov
inc
or
rorb
xor
adc
arpl
sbb
out
lods
pop
xchg
jo
cmp
nop
nop
adc
rolb
add
adc
je,pt
sub
ja
dec
dec
fdivl
push
and
or
sub
pop
sub
leave
mov
adc
out
or
bnd
pop
loopne
outsb
and
adc
sub
or
ror
insb
xor
int3
push
and
icebp
dec
push
test
imul
mov
fdivl
mov
lods
sbb
cmpb
adc
clc
jle
call
std
in
inc
loop
mov
loopne
mov
ret
or
sbb
mov
pop
lcall
mov
pop
xor
add
and
add
out
loopne
adc
out
or
daa
push
cmp
jmp
negb
sbb
pop
pop
or
lds
hlt
xorb
fwait
cmp
subb
out
adc
out
adc
mov
mov
cs
call
in
nop
outsl
daa
movsb
lock
adc
in
sub
cmp
or
cmp
push
rcrl
mov
or
cmc
fisttps
inc
cmp
stc
add
je
shl
sub
pop
and
pop
in
sub
inc
cltd
loope
inc
mov
xor
testl
dec
mov
leave
sub
push
mov
cmp
cmp
and
mov
pop
pop
xchg
iret
outsl
cmp
ret
mov
mov
or
sbb
pop
push
cmp
mov
inc
aam
push
push
xor
adcl
pop
mov
adc
test
aas
inc
cmp
jnp
pop
pop
push
movb
jmp
adc
dec
inc
popf
into
mov
add
or
hlt
push
nop
push
das
ja
imul
cmp
push
push
inc
pop
imul
adc
or
add
test
pop
sarb
pop
cmp
jmp
push
mov
rcll
aaa
push
add
lea
push
inc
in
stos
sahf
gs
fwait
pop
jno
clts
xorb
push
cmp
test
mov
push
enter
aam
and
mov
or
mov
push
push
inc
iret
pusha
stos
outsl
push
stos
mov
daa
push
adc
adc
push
je
jns
pop
or
shr
push
sbb
cld
orl
pusha
push
jg
adc
movsl
cld
outsb
out
xchg
adc
sbb
add
cmp
movsb
sbb
or
sbb
shlb
jmp
inc
push
test
or
je
dec
pop
or
push
test
cwtl
fldcw
fwait
es
mov
jbe
cmp
jae
rcr
dec
jmp
jge
enter
mov
and
je
nop
xlat
inc
add
jne
jbe
push
cmp
or
mov
cs
or
or
adc
xor
jns
dec
xor
icebp
inc
or
pusha
jg
rorb
xor
jns
add
sbbl
sub
pop
inc
push
lcall
mov
test
xchg
sahf
mov
fs
andl
xor
dec
push
push
mov
push
aas
lods
xchg
addr16
mov
cwtl
pushf
lcall
xchg
mov
adc
and
push
adc
or
test
jae
sub
sub
out
popf
outsb
push
js
addb
stos
lea
lock
jecxz
jbe
clc
sub
dec
xorb
sbb
xor
sarb
mul
jmp
jecxz
and
aam
fnstcw
pop
and
xorb
ficoml
push
jl
adc
fnstsw
mov
insl
pop
and
addb
lods
sbb
iret
adc
nop
popl
clc
inc
pop
mov
and
and
test
or
clc
pop
ja
pop
xorl
push
mov
pop
push
inc
shll
adc
sub
push
mov
sbb
sbb
dec
loopne
insb
iret
or
jmp
mov
dec
fwait
loope
adc
pop
inc
addb
iret
mov
sbbb
dec
xchg
js
sub
push
add
inc
jo
shlb
cmp
fsub
nop
insl
enter
and
push
sbb
clc
jp
nop
and
mov
push
push
aas
inc
sub
sahf
cmp
cmp
aam
gs
adc
push
adc
xor
mov
push
add
jnp
mov
pop
add
je
in
lods
jae
mov
fs
movb
or
movb
ss
mov
jp
call
aaa
inc
nop
mov
dec
pop
push
add
xor
mov
mov
mov
sbb
jecxz
add
imul
and
push
xor
dec
movsb
xchg
sbb
insl
push
add
jb
inc
test
mov
push
int3
mov
out
addr16
insb
leave
fwait
jl
insb
and
insb
loopne
fs
out
mov
mov
pop
pop
pop
dec
sub
push
push
inc
sbb
test
xor
inc
lods
mov
sbb
test
push
inc
cmp
xor
mov
xlat
icebp
add
or
pop
cmc
pop
add
mov
xor
dec
jge
out
xchg
mov
jnp
jno
lahf
jl
hlt
dec
daa
adc
jmp
push
fs
hlt
enter
leave
popf
nop
jg
insb
push
push
push
daa
movsb
jg
xchg
mov
das
incl
imul
pop
xor
push
pushl
jmp
gs
repnz
inc
scas
adc
pop
cmp
push
lcall
or
lods
insb
and
fwait
loopne
clc
mov
scas
movsb
rcll
cmp
adc
sbb
dec
adc
daa
incl
test
mov
fs
pop
stos
push
and
cli
jle
outsb
add
add
xchg
je
mov
jno
mov
dec
push
imul
mov
sub
inc
lock
icebp
pop
imul
and
stos
push
or
mov
and
and
cmp
cmpsl
jl,pn
aaa
bound
pop
pop
arpl
sarl
sub
fidivl
mov
popa
mov
cmp
insl
mov
mov
pusha
adc
lret
fisttpl
inc
rorb
or
ja
or
outsb
mov
loop
cmpsb
or
bound
dec
sub
std
jnp
sub
add
push
ret
jne
mov
add
xor
clc
xor
mov
or
inc
lock
or
jl
nop
lret
pop
shlb
roll
iret
adc
mov
or
xchg
sbb
repz
mov
out
push
push
or
inc
icebp
aad
jne
and
inc
xor
cmp
xor
mov
jae
xor
xor
outsl
mov
fldenv
mov
add
test
es
or
call
mov
add
pop
add
cmp
mov
jne
adcl
sti
test
add
sub
ret
push
pop
inc
fwait
jno
mov
sub
sar
movsl
insl
aad
jo
addl
cmp
or
dec
mov
enter
and
sbb
mov
mov
int3
mov
jnp
out
lea
mov
fwait
xchg
jne
xchg
rcrl
add
cmpb
push
push
popa
cmp
jns
insl
fdivrs
rcll
hlt
addr16
pop
dec
mov
dec
sub
enter
outsb
popa
dec
xor
out
lods
pop
dec
orb
outsl
jg
clc
fstpt
sbbl
mov
clc
jg
inc
sub
or
icebp
dec
and
add
adc
jnp
sub
nop
mulb
adc
pop
inc
inc
cld
int3
or
in
pop
push
imul
push
push
dec
mov
adc
pop
jge
adc
nop
cmpsl
test
mov
xor
pop
sbb
arpl
nopl
scas
aad
pop
lret
arpl
js
inc
lds
fidivl
cmpsl
dec
xor
hlt
mov
adc
and
cmp
sti
xlat
ret
pop
fbstp
mov
mov
xor
rcr
pushf
sub
xor
loopne
dec
arpl
cmp
or
dec
xchg
imul
rorl
push
loop
pop
test
push
stos
add
and
inc
scas
arpl
loope
dec
and
mov
in
repnz
aaa
adc
test
xchg
loopne
mov
or
adc
pop
fsubrl
dec
sbb
push
test
addr16
call
ljmp
sbb
adc
clc
mov
cmp
sbb
sub
cmpsl
hlt
adc
mov
sbb
add
lea
inc
test
inc
add
add
daa
dec
push
or
or
push
inc
dec
mov
add
fwait
add
dec
xchg
arpl
sbb
xchg
cmpsl
add
jnp
push
leave
fwait
add
sbb
pusha
xlat
inc
lock
ja
xor
in
sub
mov
mov
mov
add
mov
and
aam
jo
pusha
or
jns
lds
cli
addl
adc
clc
jns
arpl
add
xlat
and
inc
scas
popa
cmp
movsl
and
or
jg
je
std
pop
pusha
mov
jmp
mov
testb
shrl
push
inc
out
mov
xchg
shl
or
adc
add
in
int
fists
dec
or
pop
stos
test
mov
push
adc
out
mov
mov
mov
mov
lret
and
or
rorb
das
mov
in
das
je
push
in
adc
in
xlat
and
lock
les
add
pop
or
and
enter
gs
xchg
jecxz
and
or
adc
movsb
fnstsw
sbb
addr16
add
mov
outsb
cmpsl
pop
sub
or
sarb
subps
xor
leave
sbb
or
push
or
iret
dec
test
push
and
xlat
inc
repnz
and
sub
jb
push
cmp
and
adc
repnz
fidivrs
out
nop
add
cmp
push
test
push
movsb
sbb
in
sbb
in
cmp
add
arpl
lods
dec
push
xchg
iret
dec
aad
and
or
mov
sub
cli
add
adc
cmp
push
int
ret
xchg
sub
or
or
pop
sbb
sbb
or
pop
test
or
cmp
rcr
pop
mov
pop
jo
inc
lods
jle
sub
sahf
inc
pop
scas
cmp
jg
test
add
jb
dec
inc
ds
xchg
jl
push
rolb
or
xor
fwait
je
out
or
adc
movsb
jl
rcrb
loope
push
loop
rclb
inc
or
cs
call
imul
ret
mov
adc
mov
pop
cmp
xchg
xchg
xor
dec
in
and
inc
push
and
iret
cmp
pusha
movsl
add
mov
push
add
sbb
movsb
cld
cmpb
lret
les
mov
test
nop
add
xchg
stos
inc
push
fwait
jns
adc
mov
add
mov
xor
xchg
xchg
movsb
adc
ja
push
or
pop
mov
ss
adc
or
mov
ja
xchg
daa
andb
mov
repnz
pop
and
lcall
push
xchg
sbb
and
and
or
outsl
pop
pop
pop
fisubl
mov
nop
or
inc
pusha
cmp
stos
loop
sbb
add
sub
sti
cmpl
aas
xchg
and
rcl
xchg
sbb
add
add
imul
lahf
adc
pop
pusha
cmovg
or
inc
in
dec
movsb
movsl
and
sub
pop
inc
mov
xchg
xchg
sub
pop
test
xor
inc
call
add
shl
insb
insb
or
add
notb
dec
adc
mov
xor
pop
addr16
lcall
xlat
das
and
pop
out
jnp
outsl
pop
nop
add
cmpsb
adcb
jecxz
jb
add
adc
les
jmp
push
sbb
mov
adc
xor
inc
mov
pop
daa
test
sti
jno
cmp
push
adc
push
mov
pop
mov
aad
cmp
or
je
rclb
cltd
pusha
loopne
sbb
ss
pop
pop
xorb
testb
jg
clc
mov
mov
adc
lods
push
jmp
shr
xchg
mov
orb
add
call
push
arpl
cmpsb
sbb
ljmp
inc
jne
sarb
push
xchg
iret
test
mov
rorb
mov
push
insb
stc
push
hlt
pop
sub
xchg
int
sbb
xor
push
cmp
mov
movsl
push
popf
dec
pop
mov
jo
lahf
insl
jg
dec
es
dec
lods
mov
push
mov
sbb
test
sbb
jbe
dec
shrb
ret
xchg
mov
inc
fbld
or
cmpsl
jae
push
xchg
push
add
mov
jae
inc
pop
mov
rcl
pop
adc
mov
mov
pop
pop
sub
loope
cmp
bound
je
inc
pop
orb
sbb
sarl
mov
dec
adc
jle
loopne
test
mov
in
xchg
push
ret
lret
sub
mov
in
mov
pop
in
sahf
adc
jne
add
lods
and
cmpb
cmp
or
dec
cmp
aas
lcall
in
add
mov
cmp
leave
jl
push
pusha
xchg
imul
arpl
cmpsl
sar
lahf
subl
nop
inc
push
inc
xor
sub
adc
pop
hlt
dec
das
jmp
ficompl
aam
mov
imul
xchg
add
adc
xor
add
out
sbb
sbb
lods
and
add
lahf
add
stos
xchg
adcl
ficoms
test
js
sub
sbb
lock
cs
mov
fildl
fsubp
fstpl
fwait
sub
sub
lods
pop
adc
fwait
ret
or
sub
sbbb
push
lcall
jmp
faddl
hlt
sbb
sbb
fildl
sbb
adc
xor
sub
popa
mov
insl
addl
cmp
sarl
jl
lods
push
jns
pop
push
out
mov
imul
push
and
shlb
jecxz
inc
mov
pop
or
mov
or
or
pop
jb
xchg
add
call
inc
add
pusha
xchg
inc
int
jmp
or
popf
xchg
lret
cmp
repnz
jmp
in
sub
cmp
mov
pop
sbb
adc
andb
int
cmp
sub
pop
mov
sub
imul
or
cwtl
ret
xchg
flds
notb
jmp
sub
or
lea
adc
mov
movl
out
icebp
in
repz
cltd
inc
adc
or
push
fdivp
repnz
inc
push
sub
negl
and
shlb
push
imul
xor
mov
jge
dec
push
jge
jmp
sbb
push
push
xchg
sub
in
cli
aas
xchg
inc
mov
in
dec
add
jle
inc
push
fsubrl
inc
aam
adc
in
jne
dec
add
in
mov
outsl
push
push
fwait
dec
insb
mov
rolb
mov
sub
sub
cmp
inc
call
mov
ds
call
or
add
mov
push
js
stc
add
or
shrb
cmpb
jp
mov
cmpsb
xor
fsubl
clc
pop
test
jg
ror
xchg
push
inc
ljmp
testb
push
jl
es
loope
fidivrs
add
in
shll
inc
sbb
inc
pop
jbe,pn
cmp
aaa
mov
popf
mov
sbb
sbb
mov
shld
je
imul
in
sbb
add
xorb
ss
dec
push
sub
out
add
aaa
test
les
inc
pusha
and
inc
mov
movsb
sbb
sti
jle
lds
pushf
aam
push
sbb
add
popf
jo
dec
or
cmp
pop
rclb
push
cmpsl
rclb
in
je
fmuls
test
fsubr
push
leave
int
inc
cmp
and
mov
jo
jmp
sub
ret
xlat
dec
leave
stos
es
adc
gs
lcall
adc
sbb
sbb
inc
cmpsl
adc
pusha
cs
pop
incl
mov
and
pop
sarl
lea
jne
push
jno
mov
sub
cmpb
fdivs
push
test
popa
xorb
inc
loop
movsl
jp
adc
pop
inc
aam
mov
rorl
or
mov
addr16
pop
pushf
jl
adc
sahf
loopne
and
outsl
rolb
sbb
pop
dec
roll
cmpsl
int3
int3
or
mov
pop
add
shlb
ret
das
popa
xchg
inc
or
lahf
test
push
add
adc
xlat
rorb
xlat
call
xlat
pop
add
xchg
fisttpll
push
push
ret
mov
stc
cltd
std
or
fildl
inc
das
adc
es
jae
das
adc
loope
xlat
xor
lock
jno
sbb
lea
lret
pop
shll
das
test
enter
jno
xor
inc
cwtl
outsl
push
adcb
jg
test
pop
xchg
fists
xor
pop
sub
add
push
dec
mov
es
aaa
in
add
mov
pushf
jbe
pop
add
lcall
adc
ljmp
lcall
or
clc
ret
and
xor
movsb
test
daa
inc
clc
call
dec
rcrl
or
mov
in
ret
jge
imul
dec
in
in
hlt
pop
hlt
push
test
inc
sbb
dec
movsl
inc
loopne
adc
push
or
push
mov
xchg
mov
adc
mov
out
and
shlb
data16
mov
cli
int
pop
or
test
mov
dec
in
mov
or
mov
add
bts
scas
imul
adc
adc
gs
ja
test
in
jmp
outsb
sbb
cmp
arpl
dec
test
dec
shrl
in
add
pop
sub
xor
xchg
lock
pusha
mov
jge
stos
call
or
dec
push
ja
popf
addr16
inc
mov
push
lret
push
loope
xchg
xchg
ret
xchg
ret
sbb
jb
xchg
enter
push
sbbb
add
add
fiadds
mov
sub
aaa
add
dec
je
add
fwait
mov
dec
out
cmc
in
in
lock
subl
loope
pop
mov
add
lret
xor
sti
and
into
mov
out
xchg
push
sbb
push
test
xor
sbb
movsl
jl
mov
mov
jne
test
fld1
std
mov
xor
mov
xchg
notb
mov
test
xor
stos
mov
xchg
rorw
call
add
rcrb
adc
popa
pop
ret
add
sbb
or
outsl
and
rcl
push
mov
push
cmp
fs
or
shl
fisttpl
stos
or
dec
mov
mov
jne
dec
jmp
dec
inc
dec
enter
mov
hlt
movsl
in
dec
faddl
fs
daa
nop
bound
push
sbb
pusha
push
xchg
lock
lods
mov
add
out
aas
stos
sbbb
adc
test
leave
cmp
jmp
xor
inc
push
in
add
add
add
scas
or
xorl
and
sahf
add
in
lea
pop
mov
or
and
daa
inc
jmp
mov
popa
fcoml
inc
or
jmp
leave
jo
push
sbb
test
pop
sub
sub
stc
xor
push
xor
rorb
push
or
adc
mov
lret
xlat
in
push
mov
nop
push
jge
mov
dec
jg
pop
dec
jle
sahf
ss
or
out
repz
daa
cmpsl
daa
bound
xor
dec
addr16
jne
dec
or
out
and
movswl
adc
mov
mov
test
roll
and
add
or
shlb
jge
mov
cltd
call
xchg
je
stos
sbb
sub
or
sub
and
or
sub
movsl
mov
or
mov
mov
jo
mov
mov
pop
mul
dec
lods
lahf
ret
or
in
lods
and
fcoms
add
inc
addb
clc
jno
bound
mov
lcall
add
xor
inc
fs
orb
cwtl
addr16
mov
sbb
shll
testb
fdiv
push
icebp
xor
enter
cs
dec
dec
xchg
hlt
jae
je
test
sub
add
dec
or
pop
leave
aam
loop
cmpsb
fs
loopne,pn
sub
cmc
out
shrl
or
mov
xor
push
and
rorl
dec
mov
mov
movsb
rolb
mov
ss
or
and
or
stos
and
mov
push
sbb
cwtl
dec
add
jg
sbb
sarb
pusha
fcomps
push
jo
rolb
inc
fs
aad
or
pop
push
inc
test
sub
orb
jo
lret
jmp
sarl
loop
call
insl
scas
mov
aad
repnz
jecxz
je
mov
jp
negl
hlt
fcoms
stc
xchg
out
pop
and
sbb
cs
or
cmp
dec
sbb
fwait
pop
adc
jmp
je
mov
aas
sbb
add
and
sbb
out
lock
loop
cmp
add
adc
lahf
adc
or
ss
outsl
and
add
jmp
or
enter
aad
mov
mov
repnz
xor
xor
xchg
xchg
orb
inc
dec
sub
push
jo
dec
cmpsl
fwait
cmc
ljmp
out
mov
mov
daa
jo
pusha
nop
sbb
sar
es
sbb
push
shlb
add
loop
fsubs
jmp
in
sbb
les
mov
sbb
xor
push
sbb
nop
cltd
add
cs
or
dec
pop
fsubs
sbb
js
push
inc
lea
sbb
jae
nop
push
jo
jge
insl
push
xlat
aaa
lods
xchg
xchg
push
adc
xorl
adc
lcall
jne
sub
lcall
pop
and
mov
repz
dec
cmp
cmpsb
xchg
pop
sbb
dec
sub
inc
nopl
mov
int
popa
imul
mov
adc
push
sub
xchg
and
or
push
inc
sbb
cmp
fildl
dec
lcall
push
addb
pop
mov
dec
jecxz
sbb
sub
inc
stos
fdivrl
insb
mov
fwait
add
pop
sub
or
mov
push
add
cld
sub
sbb
cld
pop
sub
sub
xchg
stc
aaa
jns
stos
adc
arpl
lahf
rolb
jo
jmp
imul
sbb
xchg
add
arpl
sub
outsl
adc
adc
pop
pop
repnz
mov
shll
adc
or
lea
pusha
faddl
jecxz
hlt
arpl
xchg
fidivrs
push
cmp
aas
adc
fs
outsb
mov
cmp
xorb
pop
clc
pushf
lea
or
jnp
aad
adcb
xchg
aas
shlb
and
fiaddl
jne
inc
mov
and
mov
adcl
fistps
mov
cmp
lds
sub
daa
adc
movsl
enter
scas
ss
scas
inc
scas
xor
adc
nop
imul
mov
inc
stos
pop
rorl
es
das
ljmp
mov
adc
loope
nop
inc
out
dec
cld
and
mov
jnp
outsl
mov
mov
xchg
mov
cmp
cmc
icebp
mov
lods
imul
nop
push
movsb
mov
and
fcompl
loopne
add
push
and
pop
fldt
fsubs
test
cwtl
ret
adc
imul
add
movsl
push
fcmovbe
in
inc
inc
loopne
and
clc
and
or
ds
inc
or
popa
mov
jl
add
dec
imul
es
imul
push
js
pop
rcrb
cmpsl
enter
fcomps
ret
mov
jg
cmp
je
dec
je
add
jmp
or
jo
outsb
jmp
cmc
jmp
jecxz
shll
jmp
or
pop
xor
pop
mov
pushl
lea
imul
sub
lcall
push
test
and
push
inc
iret
cmp
sbb
dec
sbb
cmp
dec
or
mov
push
sub
loop
stos
jno
pop
cmpsl
andb
in
add
stc
jmp
loope
fadds
inc
cmc
jb
push
and
leave
or
push
push
movsl
push
xchg
out
out
pop
push
cmp
sub
out
push
inc
shrl
adcb
pop
and
push
rorb
pop
jmp
rcrb
fsubl
mov
arpl
enter
add
push
add
jns
sub
xchg
sub
xor
je
cmp
lea
cmp
imull
add
je
jne
dec
pop
pop
cmc
push
sub
and
ss
or
shll
daa
popa
pop
aaa
pop
mov
mov
sub
fcom
inc
rcl
and
addl
leave
or
sbb
xchg
push
test
ja
dec
add
dec
lret
adc
orb
and
cmp
repnz
or
flds
cmc
mov
bound
xor
out
nop
out
add
fs
adc
add
or
mov
jmp
sti
shll
loope
shrb
sbb
xor
test
mov
jno
test
mov
cmp
loope
cltd
fwait
scas
jecxz
dec
cwtl
lods
jne
shlb
sub
notl
mov
repnz
lret
sti
jo
ret
jge
dec
mov
sub
add
rclb
pushf
lcall
pop
in
ret
mov
cmp
je
xor
pop
or
dec
scas
adc
xchg
rorb
mov
push
nop
adc
and
jge
cltd
inc
popa
mov
popf
addb
test
ja
add
sub
test
push
fsub
nop
stos
inc
jb
mov
cli
push
mov
mov
inc
cmp
cmp
clc
lea
pop
stos
mov
sbb
and
inc
xchg
aas
adc
testl
mov
push
xchg
mov
cmc
pop
dec
cmp
setg
jmp
and
mov
mov
push
dec
in
int
pusha
sahf
ds
arpl
jmp
and
inc
sub
loope
dec
pop
push
xchg
popa
cmp
push
lods
movsb
and
rorb
nop
js
ljmp
mov
es
sbb
movsb
popf
nop
push
rcll
or
test
in
call
daa
popa
sarb
and
xchg
cmp
addl
or
sahf
fimull
in
popa
add
adc
mov
push
fwait
and
sub
es
aaa
xchg
xor
dec
jb
test
mov
sar
lods
add
sub
std
or
xor
or
xchg
mov
call
dec
xchg
add
dec
call
sub
fstl
mov
gs
and
lea
in
push
jne
icebp
ret
fidivl
cmc
cmp
clc
push
pop
sbb
mov
cmp
dec
std
out
jp
pop
test
pop
or
add
mov
or
pop
add
pop
repz
imul
xor
int3
mov
fwait
jge
shlb
push
jns
add
pop
and
sub
and
mov
popa
bound
add
jmp
inc
mov
rcrl
push
adc
jo
cmp
inc
jmp
mov
popf
test
fwait
rclb
lods
or
ret
daa
inc
packsswb
cs
jae
sbb
inc
add
jp
roll
push
std
push
adc
ret
enter
shrl
inc
scas
dec
mov
mov
mov
inc
cmp
dec
or
and
cltd
xchg
push
daa
fsubl
xor
loopne
popa
and
addr16
pop
jne
pop
sbb
pop
out
pop
adc
and
push
lret
mov
test
lret
fld
push
popa
mov
xor
flds
test
wrmsr
sub
daa
mov
xlat
dec
jmp
pop
cmp
jb
es
mov
pop
adc
inc
and
stos
mov
cmp
mov
and
fucomp
leave
rorb
lods
dec
mov
sub
adc
inc
outsl
test
inc
movsl
adc
and
mov
clc
aas
adc
cmpsb
out
adc
and
mov
scas
jne
add
add
add
pop
pop
jp
fdivrs
cmp
rolb
adc
mov
mov
or
push
adc
xlat
add
mov
sbb
loopne
loop
adc
lods
xchg
mov
push
jp
outsb
cwtl
arpl
test
ja
xchg
xchg
mov
hlt
jmp
nop
les
mov
pop
and
add
jns
enter
shlb
adc
mov
dec
pop
test
xor
push
mov
pop
or
pop
adc
pcmpeqb
pusha
or
mov
mov
pop
dec
add
fdivr
pop
out
shrl
sbb
call
fimull
incl
loopne
add
mov
or
movsl
inc
mov
mov
jg
lock
movb
mov
dec
pop
sahf
fmuls
adc
lret
sub
punpcklbw
mov
add
testb
call
pop
fs
sub
jp
pop
push
lock
mov
popa
orl
push
outsl
addr16
andl
push
ret
inc
lgs
sbb
inc
hlt
aaa
adc
sbb
adc
xor
xor
jg
pop
inc
push
andb
out
ljmp
mov
adc
or
mov
lods
pusha
add
popa
scas
mov
pop
jle
mov
pop
leave
fists
enter
push
mov
mov
push
xor
orb
jp
mov
push
add
fdivrs
cld
jne
sbb
xchg
xchg
shlb
push
lahf
xor
adc
and
push
leave
stos
pop
mov
mov
repnz
or
pushf
jmp
push
push
pop
xchg
jmp
inc
cwtl
mov
xor
mov
add
jbe
mov
push
dec
push
cld
mov
and
sbb
jb
and
inc
clc
and
mov
sbb
orb
jmp
and
xchg
or
cmp
push
rolb
dec
pop
adc
lods
mov
lret
clc
pinsrw
sbb
pop
jp
or
push
sbb
and
or
bound
dec
push
cmp
mov
push
ret
inc
xor
mov
mov
mov
popf
movsb
xor
in
fistpl
nop
lmsw
pop
xchg
clc
outsl
jno
xchg
out
jae
lock
xor
psubusw
out
sub
cmp
mov
loopne
fisttpll
testb
cmpsl
mov
ja
into
push
push
ds
or
and
dec
inc
je
fmull
repnz
add
adc
push
adc
xorl
adcl
lds
aaa
mov
mov
lcall
xlat
add
push
inc
mov
scas
repnz
add
inc
orl
lods
or
outsb
pop
rolb
push
or
movsl
pop
mov
or
leave
je
inc
adc
sbb
sarl
mov
jmp
dec
xchg
nop
enter
mov
sbb
and
loopne
sub
mov
jmp
cmp
inc
mov
lea
cmp
add
pop
inc
mov
aas
or
xchg
adcb
ret
lds
cmp
push
aam
adc
sbb
iret
pop
xchg
insb
sub
xor
leave
mov
out
mov
xor
je
push
das
test
insl
test
jno
mov
dec
fisttps
inc
mov
and
out
lcall
push
cmp
mov
inc
movsl
in
mov
dec
xor
jbe
sbb
inc
dec
sub
in
scas
cmc
or
test
out
pop
testb
and
rol
gs
inc
push
ret
nop
xchg
dec
mov
jo
sub
into
shrl
test
push
push
and
lret
xor
das
mov
and
cmp
rorb
fs
ret
inc
cmp
out
sub
mov
cmp
sub
add
mov
inc
cmp
pop
sbb
repnz
fnstenv
or
adc
xor
adc
lea
xor
orl
sub
arpl
sarb
mov
fnsave
xchg
sub
sbb
cli
cmpsb
fstpt
and
add
and
xchg
add
lock
test
jb
jmp
incb
lods
or
daa
roll
popf
popa
insl
adc
jns
push
mov
arpl
pusha
mov
js
adc
lret
xor
pop
test
add
add
nop
sbb
or
cmp
mov
sub
mov
or
xor
ret
pushf
pushf
or
sbb
pushf
in
in
in
or
es
inc
lahf
rdmsr
fisubs
imul
and
rorl
test
ret
shll
dec
movsl
ja
cltd
or
jecxz
add
mov
pop
add
mov
pusha
cmpsl
cmpsb
ss
push
test
pop
shlb
add
mov
pop
stos
xchg
cmp
add
inc
shll
pop
nop
lods
dec
add
dec
sar
dec
adc
outsl
nopl
lods
add
inc
fldenv
push
or
sarb
push
in
lock
jo
das
adc
and
or
rcll
dec
rol
mov
adc
and
xor
dec
sub
sub
fs
pop
popa
pusha
xor
hlt
or
mov
test
das
mov
or
xchg
push
in
outsl
sbb
jno
and
lock
nop
pushl
inc
shlb
cmp
sub
dec
daa
mov
dec
std
xorl
rcll
loope
xchg
xor
xor
push
mov
jge
dec
enter
pop
and
sbb
cs
xchg
loope
push
in
adc
test
dec
or
jb
rcrb
xchg
cwtl
andl
jbe
lods
cmp
mov
jnp
das
cmpsb
add
and
cs
sbb
and
and
and
inc
lds
ja
sbb
fucomi
frstor
adc
lret
or
cmp
pusha
mov
push
mov
push
or
movsb
pop
addr16
lea
int
adc
pop
insl
cmp
sub
adc
mov
inc
adc
add
jle
test
xchg
add
or
daa
add
adc
mov
mov
stos
aaa
outsl
inc
inc
mov
daa
sti
lret
inc
arpl
rorb
and
aad
inc
push
adc
ss
subb
addr16
sub
test
ljmp
mov
clc
leave
push
add
xor
jecxz
dec
sbb
pop
sbb
inc
xor
dec
in
cmpsb
xchg
or
sub
lcall
push
dec
xchg
pop
or
in
dec
or
lods
inc
scas
mov
and
je
icebp
leave
and
xchg
call
cwtl
mov
rcll
add
pop
aas
jl
add
jns
mov
lods
andl
movsb
sub
leave
ret
mov
fmul
dec
push
fidivs
fdivs
popa
pop
popf
mov
daa
or
mov
pop
sub
or
dec
jecxz
pop
gs
add
inc
pop
or
pop
or
adc
push
sar
lock
mov
jg
test
dec
sbb
dec
je
clc
daa
push
aad
pop
and
mov
or
pop
aam
or
adcb
sbb
mov
pop
cmpsl
and
data16
pusha
call
jne
inc
lods
and
add
add
hlt
and
movsb
subl
dec
in
sbb
dec
cltd
adc
fs
sbb
add
and
mov
xor
popa
loopne
call
dec
movsl
dec
test
add
mov
add
mov
inc
jmp
pop
addl
cmp
sub
icebp
scas
add
fisubrs
rolb
jo
out
nop
add
add
mov
jne
mov
and
sbb
and
int
ret
je
loopne
in
push
pop
jb
add
dec
int
fwait
add
mov
call
stos
pop
xchg
dec
sub
push
push
dec
xchg
dec
or
enter
dec
or
cltd
add
es
pop
sbb
das
add
adc
lcall
int3
nop
ljmp
and
add
and
adc
arpl
cmp
inc
iret
mov
cmp
mov
pop
adc
imul
andb
inc
scas
nop
push
mov
cmp
dec
fmull
pop
roll
sbb
stos
xchg
dec
jne
and
mov
add
idivl
dec
adc
inc
adc
push
imul
insb
outsb
test
daa
fs
mov
int
test
mov
xchg
push
mov
add
incl
popf
jl
mov
adc
call
pop
pop
pop
movl
dec
sbb
hlt
inc
pushf
xchg
add
outsb
pusha
popf
sub
in
jl
pop
xchg
dec
dec
aas
xor
add
fstl
pop
fstpl
fdivl
in
jge
ret
dec
or
and
lds
sub
loopne
dec
pop
push
mov
mov
js
push
fs
jle
pop
out
scas
inc
movsl
pop
je
or
add
cwtl
ficomps
push
xchg
jg
pop
xorb
cmp
fildl
and
sbb
fbld
push
les
push
repz
ret
cmp
pushf
mov
push
mov
xchg
mov
leave
pop
fcmovbe
aaa
stos
jbe
xchg
inc
fmuls
enter
fadd
inc
dec
or
jge
add
outsl
fwait
adcl
lret
gs
fmuls
std
frstor
and
xchg
sbb
mov
cmp
inc
mov
cmp
add
int3
mov
enter
cmpsl
test
leave
cld
pop
aas
leave
orl
je
aas
cltd
push
out
std
repz
jmp
and
and
lahf
cmp
lock
add
inc
xor
pop
jmp
cmp
test
adc
dec
push
lock
mov
mov
repnz
shrb
and
test
imul
int3
dec
fsub
xor
int3
push
jo
dec
sbb
adc
cmpsb
pop
mov
loopne
ret
inc
xchg
sub
or
mov
mov
push
test
jbe
add
sub
lock
lods
into
adc
mov
pusha
add
or
movsb
push
sbb
nop
sub
or
psubb
inc
cmp
lock
out
inc
add
in
test
or
pop
div
loopne
aam
lcall
aam
add
or
inc
mov
stc
pop
call
jg
in
jae
scas
adc
cmp
xchg
out
jmp
sub
mov
bound
arpl
mov
sbb
hlt
push
dec
imul
xor
and
je
das
es
inc
adc
xchg
daa
testl
add
lds
rcrl
incb
mov
ljmp
test
sub
add
and
add
rolb
daa
add
inc
lret
sbbl
xor
clc
or
inc
jl
dec
inc
clc
in
mov
aad
xor
test
out
jl
movsl
add
je
dec
pop
push
sub
or
sub
imull
add
mov
clc
movsl
testb
nop
sbb
cmc
cmpsl
lods
fwait
js
sbb
push
daa
or
les
and
jecxz
stos
adc
jne
mov
add
sbbl
jmp
pop
fsubr
xor
add
adc
xchg
stc
push
mov
orl
addl
pusha
je
xchg
mov
jns
stos
movsb
add
lcall
aas
jl
fcmovnbe
push
mov
push
sub
into
fists
jne
xor
push
inc
adc
mov
add
jne
dec
mov
pop
jge
mov
mov
flds
sbb
in
inc
pop
repnz
decl
mov
xchg
inc
cld
cld
lea
div
push
push
and
dec
popl
imul
or
mov
cli
movsb
pop
mov
pop
shrb
orb
mov
inc
mov
or
mov
and
inc
lahf
inc
dec
pop
frstor
stc
ret
push
add
lcall
inc
push
push
in
inc
pop
add
testl
jo
fiaddl
pop
pop
cmp
jae
mov
add
pop
lods
adc
lods
dec
hlt
test
or
cwtl
fmuls
or
jl
inc
clc
xchg
adcb
push
cmp
or
mov
jb
or
pop
pushf
xchg
sbb
push
pop
clc
clc
lcall
movsb
loope
fwait
push
clc
clc
dec
and
xchg
add
minps
push
dec
mov
aam
mov
lahf
fs
es
out
ret
push
push
rclb
in
and
enter
movsl
pop
stos
pop
clc
mov
push
add
add
cmpb
jl
test
mov
mov
pusha
mov
das
mov
and
xor
xchg
mov
add
and
cmp
mov
lret
repnz
movsl
shll
pop
hlt
hlt
rcll
lret
ret
cmp
push
mov
cs
loope
inc
ljmp
inc
sub
inc
add
cmp
cld
cmp
sub
or
or
add
daa
in
out
or
rol
ss
inc
aaa
sub
subb
sub
mov
in
xchg
aam
adc
pop
out
aas
hlt
stc
pop
pop
add
jle
push
and
push
es
dec
popa
je
add
jbe
pop
aas
inc
popa
push
mov
xchg
mov
xchg
imul
and
or
add
in
xchg
and
mov
jae
test
jmp
fisttpl
les
lods
adc
sti
xor
or
add
mov
arpl
push
adc
andb
and
dec
or
mov
sbb
add
bound
cmpsl
jecxz
inc
pop
jne
lahf
rcll
mov
pop
mov
lods
xor
test
loop
outsl
test
or
inc
sbb
or
add
add
adc
ja
inc
push
inc
ja
cmp
stos
and
inc
push
mov
outsb
imul
cltd
mov
ja
dec
push
and
xchg
xor
es
popa
test
mov
or
mov
scas
pusha
add
sahf
movsl
adc
adc
hlt
shrb
push
xor
enter
cmc
inc
ds
inc
hlt
lea
add
xchg
inc
fldl
into
sbb
push
fucomi
mov
popa
movb
pop
pop
nop
inc
sbb
daa
add
pusha
sub
mov
fadds
stos
test
das
outsl
cmc
adc
cmp
or
cmpb
sbb
xchg
xor
xor
fbstp
imulb
mov
push
mov
mov
pop
adc
mov
lret
mov
mov
and
push
mov
push
push
lret
les
loop
loopne
daa
out
add
popa
sub
add
out
sub
mov
mov
and
arpl
mov
test
sbb
add
xlat
nop
xchg
bound
push
arpl
pop
mov
add
adc
out
adc
pop
adc
daa
loope
jns
lock
pop
pop
sbb
out
leave
test
sahf
or
insb
jnp
and
or
sti
push
rolb
and
lret
push
mov
into
clc
lcall
int
jmp
inc
xor
sbb
dec
adc
xlat
add
leave
rolb
cmp
pop
mov
mov
sub
push
push
jne
data16
cmp
inc
xor
add
outsl
adc
jne
aaa
ja
or
lds
sub
mov
in
adc
pop
add
adc
or
insb
push
outsl
hlt
cmp
jl
push
adc
jns
pop
out
and
sbb
es
scas
fsts
iret
or
jl
rclb
decl
cwtl
xor
jne
lods
cs
pop
pop
daa
or
das
mov
xor
in
pop
cwtl
movsl
pusha
push
popf
pusha
in
orb
or
xchg
das
jae
shlb
cmp
cmp
push
aad
ret
xchg
cmp
sub
and
mov
xchg
out
pop
cmp
test
ja
mov
sarl
push
jns
enter
stos
xchg
sbbl
mov
nop
adc
or
pop
or
dec
jae
stos
fists
in
popa
xor
out
push
inc
or
and
movzbl
add
bound
filds
and
test
loope
addr16
lret
dec
and
pop
loopne
cmp
pop
and
or
nopl
inc
sahf
or
xchg
sbb
repz
xor
mov
sti
and
pop
mov
mov
stc
lods
mov
xchg
insl
or
push
repz
pop
and
icebp
sbb
and
jo
xor
mov
int
jecxz
inc
and
adc
scas
and
repnz
test
fstl
jmp
xor
daa
pusha
sub
out
aaa
inc
shlb
sbb
pop
and
jmp
hlt
sbb
push
and
jle
jmp
cwtl
addb
out
inc
push
and
pop
lea
xchg
or
or
aad
sahf
adc
dec
out
jne
call
xchg
mov
mov
push
push
jmp
adcl
je
pusha
jb
jne
pop
dec
imul
addl
or
add
push
mov
pushf
mov
lret
arpl
int
pmuludq
and
shl
and
cmp
sbb
sbb
cmp
inc
into
fsubs
roll
mov
fs
ljmp
pop
jle
sbb
je
and
add
test
or
fistl
jb
insb
sbb
cmp
jmp
test
adc
add
add
insl
jne
sub
push
in
or
add
xchg
outsb
jne
int
jbe
insl
ja
add
mov
decl
dec
test
sbb
ds
push
por
add
test
and
push
icebp
dec
or
sbb
xchg
push
andl
je
mov
sub
inc
xchg
stos
sub
ret
jne
test
cmp
outsb
lds
aad
je
xchg
pusha
imul
mov
test
sbb
pi2fd
sub
xor
insl
and
sbb
lock
push
mov
and
enter
pop
cmp
or
daa
cmc
push
inc
dec
popa
pop
and
or
nop
ud2
sbb
sub
lret
lock
jbe
inc
movsb
xchg
in
sbb
iret
popf
arpl
sub
push
inc
bound
jnp
nop
aaa
push
push
push
push
xchg
mov
xchg
scas
pop
ret
xchg
cli
add
pusha
and
int3
and
ja
pusha
and
lahf
push
inc
jg
test
inc
xlat
mov
push
sbb
ss
out
mov
cwtl
je
enter
jl
xchg
in
in
push
or
std
es
xchg
adc
call
cmp
sub
xor
pop
popf
fsts
adc
pop
call
mov
adcb
test
add
mov
rorb
sbb
xlat
in
test
add
adc
adc
sub
pushf
jl
cmp
and
sub
or
addr16
add
mov
and
loopne
cmp
mov
insb
arpl
es
pop
inc
inc
dec
cmp
dec
cmpsl
les
xchg
enter
sti
dec
inc
sub
sbb
xchg
inc
lahf
lock
adc
scas
dec
test
and
jg
dec
mov
mov
aam
xor
daa
xor
stc
jbe
test
adc
inc
or
adc
sbb
aas
adc
push
shl
inc
and
xchg
pop
test
sbb
jecxz
inc
xchg
fsubl
test
adc
jno
mov
popa
xchg
pop
arpl
outsb
movsl
jno
push
inc
sarb
pop
dec
or
xor
or
and
mov
push
ss
xchg
icebp
sahf
ja
sub
jno
rorb
aaa
or
ret
lds
dec
jg
outsl
lods
jne
out
and
or
push
pop
test
add
ffreep
sub
lods
sbb
in
add
loopnew
or
mov
popa
push
sbb
out
cmp
xor
jg
cmp
movsl
arpl
subl
jmp
adc
mov
or
mov
mov
mov
mov
jle
mov
push
test
mov
adc
and
sbb
mov
dec
add
imul
or
cmp
pusha
and
inc
faddl
das
fstpl
loope
gs
data16
lods
xchg
sbbl
and
or
jecxz
adc
popa
and
cwtl
jle
es
imul
lret
aad
in
out
movl
insl
jb
jl
inc
dec
or
fwait
push
and
mov
jnp
mov
sbb
pop
pop
int
dec
pop
dec
es
jo
mov
mov
xor
inc
dec
or
pop
lods
xchg
out
mov
pop
or
xchg
and
jp
iret
cmp
test
dec
mov
test
mov
mov
push
enter
add
test
push
cmp
cli
cli
dec
inc
lods
shrl
xor
les
sbb
ficoml
xchg
das
out
daa
add
jge
and
fmull
scas
pusha
or
or
movl
pop
lcall
ret
mov
das
jae
lahf
cmp
stc
shll
add
xor
and
movsb
sub
cmp
sbb
xchg
sbb
sub
add
jge
bound
push
dec
sub
lods
pop
rclb
daa
lods
das
cmpsl
cmp
andl
and
repnz
adc
addb
setne
mov
mov
je
lods
mov
shlb
fsubrs
adc
movsb
cmp
addb
push
popf
sbb
jle
enter
sbb
xor
in
aaa
push
jo
lock
dec
nop
das
or
add
push
addr16
sub
xchg
xchg
push
jns
ffree
shll
mov
push
sbb
aad
push
cwtl
test
and
lret
sub
mov
mov
adc
cmp
adc
lret
mov
sbb
jp
and
add
aam
pushl
mov
in
fwait
int3
lea
cmpb
push
aas
call
sbb
adc
xchg
or
in
outsl
xchg
pusha
dec
jo
add
inc
jp
pop
shrb
int
call
repnz
or
xor
and
pop
outsl
push
in
add
fcompl
pop
adc
in
mov
lock
pop
and
jecxz
adc
push
sub
xor
repz
sbb
cmp
or
and
or
mov
jno
cmpsl
or
test
jno
push
stos
das
std
or
mov
cmp
les
or
loop
imul
jge
inc
scas
or
mov
dec
js
add
and
inc
inc
xchg
or
hlt
or
and
inc
or
and
int
or
ret
sub
xlat
sbb
je
xchg
pusha
mov
arpl
push
push
cmp
fmuls
pop
adc
or
outsl
std
sub
xchg
faddl
lods
add
in
pushf
sub
mov
dec
mov
sbbb
call
or
sub
out
rcr
pop
hlt
in
or
lret
xchg
call
or
fldenv
sbb
dec
movsl
rorb
aam
and
rcrb
and
add
inc
int
lods
mov
cmp
lret
or
mov
mov
mov
std
mov
mov
jb
outsl
push
jo
jl
cld
stos
mov
movb
jmp
or
popa
and
push
jl
adc
ss
cmpsb
mov
mov
dec
imul
dec
adc
add
and
call
insl
in
dec
stos
stos
add
add
out
lret
and
stos
stos
jo
xchg
out
jo
mov
cwtl
pop
lcall
das
xchg
dec
lret
lcall
stos
xchg
fiaddl
mov
dec
fistpl
push
adc
jge
adc
jno
scas
adc
add
mov
cs
fdivrs
mov
sbb
mov
adc
loop
xchg
lods
add
sub
mov
dec
movsl
push
imul
or
dec
mov
rorb
rolb
les
rcrb
xor
out
xlat
cs
shll
fcompl
adc
mov
xor
xor
and
imul
or
xchg
cmpsb
jge
dec
aam
aam
hlt
in
in
insl
sbb
shlb
or
adc
bound
add
pop
jb
add
add
mov
xor
adc
add
sub
mov
movswl
inc
loopne
add
xchg
shlb
pop
add
je
cwtl
pop
dec
pusha
test
pusha
cmp
jo
sub
xor
shll
xchg
nop
mov
xchg
dec
out
push
push
adc
sub
cmp
xchg
test
and
sbb
sbb
mov
loopne
mov
in
pop
mov
arpl
lret
adc
fbld
mov
mov
fsubrl
test
js
and
int
int3
sahf
dec
and
and
hlt
stos
sub
test
loope
je
lock
inc
sub
push
inc
insl
fsubl
mov
shl
xchg
xor
mov
popf
sub
cmp
pop
inc
movsl
pop
mov
or
add
mov
mov
inc
sti
loope
sub
fcom
adc
dec
enter
orb
xchg
hlt
in
mov
in
xor
or
jne
nop
repz
lock
adc
aas
sub
mov
clc
cmp
xorl
in
pusha
and
stos
out
or
andb
jl
hlt
push
lcall
xor
sbb
add
push
or
cmpsb
sbb
mov
jne
jne
stc
insb
out
gs
xchg
jecxz
fs
inc
pop
shlb
iret
shrb
scas
mov
imul
dec
shlb
lret
push
fdivrl
loop
ret
inc
aas
pop
or
lea
mov
sbb
jg
dec
in
sub
fmul
or
add
nop
or
lock
loop
lds
push
dec
xchg
and
rolb
rcll
or
out
adc
mov
sub
es
or
xchg
out
fcoms
adc
arpl
dec
notb
xchg
gs
xor
add
aam
inc
and
data16
push
arpl
test
fs
fxtract
nop
ss
mov
xor
mov
push
int3
repz
or
xlat
and
and
mov
xor
int
cvtps2pi
jge
aam
divl
xor
icebp
jne
inc
and
jns
jnp
sbb
movsl
add
das
movsl
cmpsb
nop
pop
mov
jle
or
or
and
in
adc
ds
add
in
add
hlt
push
aas
loopne
inc
dec
add
sbbb
jne
aaa
or
or
or
pop
jmp
rcll
push
inc
aad
add
xor
adc
add
jecxz
iret
adc
adc
or
arpl
xchg
xchg
push
jmp
not
and
adc
push
mov
or
andb
xchg
ret
add
cmp
push
test
jb
add
xor
inc
add
add
addb
and
into
add
jge
sbb
or
cmp
fs
mov
pop
or
jns
add
jo
or
adc
ret
das
pcmpeqw
or
push
andb
sub
push
and
dec
add
inc
pop
rcll
cli
pusha
push
sbb
insl
enter
mov
push
lock
adcb
ret
in
icebp
rolb
outsl
jecxz
movsl
mov
adc
mov
orb
mov
call
jne
cmp
pop
enter
js
pop
sbb
js
sti
int3
sbb
or
or
das
xchg
lret
mov
je
add
and
ja
je
cmp
je
add
pop
pop
adc
mov
lods
adc
aam
popf
pop
int3
mov
popf
push
lea
push
or
iret
dec
std
adc
push
mov
dec
aaa
sub
dec
xchg
push
imul
rorl
fstl
add
pop
mulb
mov
fsubr
sarb
lods
jecxz
ss
add
or
xor
dec
mov
jecxz
pop
xor
cmc
shlb
dec
add
cmp
jge
xor
scas
pop
nop
dec
jecxz
insl
das
imul
sbb
seto
andl
cltd
mov
adc
jo
mov
dec
xlat
pusha
out
imul
or
pop
xchg
xchg
fsts
inc
cmp
add
add
pop
flds
push
adc
add
cmp
sbb
sbb
cmp
sub
push
into
fsubrl
jle
js
shlb
test
add
in
mov
sub
call
mov
sbb
cltd
nop
pusha
push
movl
adcl
and
addr16
sub
call
jl
sbb
stos
adc
cmpsl
pop
pop
popa
mov
pusha
in
push
pop
xchg
or
or
or
cmp
notl
push
or
mov
fmul
mov
popa
in
inc
cmc
dec
dec
fnstenv
push
punpckhdq
dec
and
lock
fucomi
sub
ret
aas
insb
add
push
xor
jg
cs
xchg
inc
and
not
xchg
pop
sbb
shlb
fcoml
adc
cmp
popf
popf
xchg
jp
js
pop
mov
dec
cmpb
dec
outsl
push
test
je
and
or
pusha
jle
mov
es
push
push
addb
xchg
cmp
call
mov
mov
lods
adc
or
sbb
cmp
in
sub
mov
shlb
inc
push
add
int3
adc
cmp
mov
jo
insl
and
gs
mov
and
nop
inc
or
sub
lahf
adc
bound
mov
push
pop
loope
xchg
add
adc
dec
lock
outsb
scas
push
dec
imul
and
add
push
fsubrs
js
in
cmpsl
cmpsb
je
icebp
sbb
sub
and
arpl
call
sub
cltd
jl
adc
push
lock
sub
ds
and
test
xor
sbb
sbb
ja
cmp
movsb
ret
sub
pop
hlt
clc
or
xchg
push
popa
imul
dec
fnstsw
aas
add
sbb
xlat
inc
cmp
and
xor
fadd
jl
adc
cmp
inc
jae
icebp
or
in
push
test
xor
add
mov
xorb
add
rcl
pop
pushf
sbb
mov
loop
test
test
add
xor
mov
xor
gs
mov
inc
aaa
inc
dec
sub
xchg
cmp
cmp
push
mov
enter
iret
xor
dec
outsb
xchg
fcom
or
sub
xchg
mov
aaa
pusha
pop
add
mov
or
or
mov
xchg
insb
in
lods
inc
adc
sbb
push
stos
adc
fs
dec
in
addr16
inc
xchg
mov
test
divl
fsubl
sbb
cmp
mov
xor
out
xor
inc
bound
sub
xlat
mov
adcl
or
xchg
nop
enter
loope
mov
scas
inc
dec
ret
push
mov
or
fwait
out
push
movsb
mov
xor
and
add
sbb
xor
and
js
lret
and
repnz
and
pop
clc
mov
xor
mov
inc
loopne
popa
pop
notl
add
popf
sbb
es
bound
popa
es
out
sub
aas
and
sbb
push
cmp
orb
aam
ljmp
aaa
pop
xor
dec
je
sbb
jne
sbb
dec
mov
inc
daa
into
clc
xor
scas
adc
or
pop
stos
jbe
in
aas
jbe
xorl
add
cmp
dec
imul
push
cmp
push
and
cmp
subl
pushf
rcrl
jmp
or
in
push
adc
mov
call
push
hlt
and
lret
push
fisubs
mov
or
cld
daa
sub
adc
aad
mov
pop
xchg
imul
dec
push
ret
popf
jg
shl
dec
pushf
add
push
jl
xor
mov
adc
sub
out
in
sar
rcrl
andb
rclb
pop
add
add
adc
push
cmp
or
jge
adc
inc
arpl
nop
lock
loope
sbb
add
xchg
fsubl
popf
add
movsl
loope
scas
and
clc
jbe
insl
cwtl
push
mov
pop
cmpsl
or
jne
mov
push
cmp
xor
add
add
or
into
xchg
push
arpl
sbb
subl
adc
dec
inc
lds
loope
fidivrl
add
inc
hlt
xchg
push
es
inc
or
insl
fwait
mov
std
sbb
push
mov
outsb
arpl
jo
je
add
dec
fisubl
push
and
je
fsubrs
adc
xchg
sbb
hlt
inc
imul
or
jg
rclb
add
pusha
add
insl
xchg
popa
cwtl
xor
mov
mov
nop
lahf
sbb
pop
lcall
rol
lea
pop
test
dec
sbb
cs
xlat
or
filds
cmc
jnp
xorl
movsl
mov
push
cmp
xor
mov
lret
inc
int
or
adc
and
loopne
in
xor
jl
sub
pop
sbb
iret
jo
pusha
lods
push
push
loop
lret
sbb
daa
aam
roll
xlat
cmp
cmp
insl
test
outsl
or
in
push
mov
sub
out
test
inc
popa
adc
jo
cmp
mov
xor
add
adc
lret
in
or
test
mov
xchg
or
test
leave
adc
call
push
es
inc
mov
fcmovne
lock
add
fistps
mov
addr16
testb
fldt
ret
add
shlb
dec
xor
cmp
fnsave
inc
nop
ja
or
adc
inc
mov
arpl
sbb
fsubs
fwait
mov
cmp
pop
push
add
fwait
or
sub
adcb
scas
xorl
clc
xchg
ror
or
push
pop
or
add
or
or
mov
pusha
pop
nop
pop
fsubs
jmp
adc
dec
adc
and
and
rolb
push
sbb
or
mov
inc
push
jle
arpl
repz
mov
call
pop
inc
or
pop
faddl
insl
or
push
hlt
pop
or
lds
lds
loop
inc
or
popa
xor
add
or
aaa
or
dec
out
outsl
push
outsb
mov
insl
or
add
mov
inc
mov
and
das
adc
test
adc
dec
xor
lods
ror
mov
cs
sbb
in
and
loopne
clc
rorb
call
insb
mov
hlt
dec
ljmp
mov
dec
sub
add
sbb
loope
mov
add
mov
sbb
lock
mov
push
fs
dec
sbb
bound
xchg
mov
lods
inc
add
push
push
cmp
inc
comiss
rorl
sbb
loopne
mov
push
jne
pop
loopne
inc
push
pusha
dec
stos
adc
add
out
test
push
pop
das
ret
adc
inc
imul
fs
or
push
mov
ret
aad
mov
and
add
xor
fnstcw
push
ss
pop
loope
out
sub
push
jnp
mov
ret
dec
stos
mov
inc
mov
lcall
jecxz
xchg
cmp
inc
adc
xchg
fs
ss
in
stos
jmp
test
xor
add
test
push
stc
xchg
ljmp
sbb
sbb
adc
mov
adc
js
pusha
pop
testl
fisubrs
xor
inc
push
aas
das
mov
pop
rorb
lods
push
mov
mov
cwtl
dec
cld
push
push
inc
mov
rcrl
xchg
cmp
xor
arpl
dec
pusha
push
xor
or
mov
loopne
and
mov
adc
stos
or
push
sbb
cwtl
sub
or
mov
enter
comiss
mov
mov
or
push
xor
lds
mov
les
sub
mov
mov
sbb
adc
pop
les
mov
hlt
pusha
fwait
adc
sbb
sub
pop
or
and
or
or
test
or
lcall
xor
or
adc
jae
pop
vorps
test
cmp
lock
and
cmp
pop
dec
je
adc
add
add
mov
test
es
or
stos
xor
or
or
cmp
inc
gs
jb
xchg
sbb
js
xlat
and
jg
imul
pop
clc
clc
pop
fistpl
scas
mov
sbb
nop
jne
or
adc
adc
loop
sbb
push
sub
jl
and
and
pop
out
ret
movl
in
aas
mov
pop
test
jl
mov
add
adc
and
jmp
and
push
sbb
std
lods
std
or
xchg
mov
add
mov
add
mov
fwait
sub
popl
cmp
pop
hlt
cmpb
mov
fidivrl
xlat
push
jae
movaps
call
movswl
adc
add
idivl
jae
popa
sbb
jg
xor
ret
sbbl
push
jge
xor
pop
addl
push
sub
adc
push
sbb
aad
les
cmp
or
mov
stos
pop
or
cmp
dec
mov
mov
mov
jmp
and
imul
jnp
fistpll
sbb
loope
mov
lods
repnz
add
xchg
pop
push
pop
clc
jae
popa
inc
inc
insb
adc
inc
ljmp
add
dec
mov
fdivl
or
mov
jo
ja
sahf
loopne
icebp
sti
dec
push
shll
ret
or
call
adc
sub
xor
add
addb
sbb
xor
lock
movsb
dec
movsb
cltd
addr16
adc
test
inc
pusha
leave
clc
jo
popa
mov
cmp
dec
or
sub
cmp
scas
shl
inc
or
push
iret
mov
add
dec
test
loope
mov
stc
mov
push
loopne
or
dec
ljmp
and
mov
popf
aad
insl
aaa
imul
dec
jl
cmp
ja,pt
adc
clc
cmp
jne
xor
sbb
lret
call
and
je
sbb
and
fists
adc
pop
shll
sbb
inc
dec
out
dec
and
mov
pop
sbb
fs
mov
push
pop
xor
shrl
rcr
faddl
insl
dec
jle
or
shlb
push
jge
mov
test
cli
sbb
fnsave
inc
jnp
xchg
cmp
outsl
enter
fst
aam
mov
push
inc
sahf
inc
xor
fs
lods
jecxz
add
xchg
test
push
sub
fs
add
test
push
cmp
xor
or
pop
or
adc
imull
and
je
nop
iret
and
in
in
mov
inc
hlt
adc
mov
jle
sub
lret
adc
js
jb
inc
add
or
xchg
mov
adc
or
cmp
inc
cmp
and
push
dec
xor
pop
cmp
nop
sbb
jmp
pop
add
ss
jo
sbb
icebp
add
outsb
inc
adc
jnp
jbe
adc
push
stc
dec
je
outsb
and
testl
xor
imull
jmp
sbb
xchg
inc
repz
xchg
lahf
std
dec
jno
xchg
arpl
call
lods
fcmovne
push
cmp
test
xor
adc
sbb
and
lock
inc
adc
push
xor
shrb
movsb
jmp
inc
fsubr
inc
push
jp
dec
sub
xor
xor
loopne
in
in
xchg
lock
stc
inc
enter
test
mov
xchg
push
add
jne
fst
sub
cmp
ds
and
and
pop
imul
and
adc
cmp
adc
mov
dec
adc
cmp
cmp
dec
and
lcall
add
or
mov
push
or
pop
adc
push
flds
das
add
ss
fmuls
add
rcl
jl
pop
adc
add
movb
pop
dec
arpl
adc
imul
jo
sub
xor
push
jge
or
stos
call
xor
pusha
or
xor
ja
and
movsb
roll
sub
jg
pop
int
sbb
in
rolb
in
xchg
jne
push
jnp
enter
sub
dec
jo
sub
pop
lcall
popa
subl
das
dec
sub
imul
add
bound
call
dec
fisttpll
imul
xchg
inc
sub
or
or
pushf
mov
loopne
mov
jecxz
mov
pop
or
mov
insl
and
clc
aaa
dec
jb
inc
lahf
lahf
add
push
es
loopne
mov
je
fsub
mov
sub
inc
push
and
jmp
cmpsl
faddp
mov
jl
add
inc
jp
mov
push
or
mov
mov
mov
pop
cmp
dec
lret
das
cmp
out
jg
lea
and
pop
xchg
hlt
inc
jmp
xchg
cmp
into
pop
faddl
mov
and
jecxz
dec
dec
mov
mov
push
andb
mov
mov
je
cmpsl
inc
mov
xchg
sti
pop
jg
rcll
insb
push
or
or
pop
call
mov
jmp
daa
pop
ja
lods
rorb
xchg
test
lret
das
inc
insl
mov
cmp
inc
lock
loopne
and
setg
cs
dec
loope
pop
movsb
lgs
inc
mov
jbe
inc
push
or
sub
adc
mov
or
out
push
inc
fdiv
xor
mov
addr16
push
incb
push
mov
push
or
add
rcll
jmp
add
sbb
inc
sub
nop
lods
mov
lods
jmp
js
mov
push
and
fcomi
sub
out
xorl
inc
int
jmp
adc
mov
es
dec
fs
test
jmp
xor
daa
mov
adc
adc
cmp
dec
das
gs
scas
fisttpll
rol
and
inc
dec
loop,pt
pop
cmp
and
rolb
loope
lea
dec
mov
jno
or
pop
xchg
mov
fisttpl
and
push
adc
adc
pop
cmpsl
sti
and
pop
inc
adc
mov
test
cmp
adc
or
xchg
inc
mov
in
sbbl
xchg
pusha
test
jecxz
pop
xchg
ret
insb
push
add
orl
xor
fnstsw
sbb
pop
mov
push
xchg
lret
push
fucomi
push
adc
cmp
icebp
add
fadd
pop
arpl
mov
addr16
cwtl
mov
les
fwait
loopne
and
loope
jae
call
scas
adc
sbb
movsb
sbb
sub
sbb
imul
mov
push
sub
fld
push
or
mov
decl
arpl
xor
je
xor
or
dec
insb
and
rolb
daa
bound
xor
inc
enter
mov
and
pop
xor
or
adc
test
lea
dec
inc
mov
lods
mov
sub
add
stos
pop
test
call
or
movsl
mov
loop
fldenv
jl
fidivl
cltd
popa
cmp
dec
pop
fs
mov
push
mov
test
xchg
adc
dec
cwtl
mov
outsb
or
mov
xchg
pop
push
mov
and
inc
cmp
aad
arpl
inc
pusha
mov
inc
sbbl
and
push
cltd
das
imul
mov
jecxz
arpl
pusha
adc
inc
push
lcall
fs
out
add
mov
ret
call
or
mov
daa
imul
or
das
jae
push
inc
bound
and
push
and
loop
les
sub
cmc
dec
ja
in
sub
dec
pop
dec
loop
push
jno
or
add
mov
arpl
or
clc
inc
ljmp
mov
sbb
push
mov
fs
inc
sub
imul
mov
adc
push
or
inc
pop
jle
mov
daa
sub
or
insl
inc
inc
cmp
mov
add
addb
xchg
xor
insb
xchg
push
adc
or
sbb
jmp
xchg
pop
pop
adc
sbb
and
in
pop
fwait
push
cmp
adc
fs
cmpsb
stc
cmp
jg
repz
push
out
fistpll
push
out
fucomip
fnstsw
sub
dec
cmp
jmp
fildl
shlb
popa
sbb
cs
add
orl
pop
pop
jns
xor
sub
jo
sbb
jmp
and
or
mov
sub
popa
int
stos
js
pop
cmpsl
fisubrs
popa
pop
xor
loope
push
loopne
mov
das
out
andb
je
loope
add
stos
cmp
dec
popa
push
pop
and
bound
dec
das
adc
add
sub
nop
sub
gs
jge
mov
mov
add
sar
sub
cmp
jge
dec
sarb
mov
push
das
add
lds
sub
dec
out
inc
pop
sub
xor
inc
inc
push
jmp
sub
insb
adc
mov
dec
inc
xor
sti
pop
sub
pop
aam
imul
fsubr
lcall
pop
dec
das
aaa
push
shl
jmp
push
pop
jp
adc
add
cmp
shlb
mov
jnp
adc
dec
xor
cmpsl
lds
xor
pop
cmpsl
cmpsb
add
sbb
std
imul
xor
or
push
pop
popa
cmp
stc
insl
fadds
dec
fs
push
enter
jmp
roll
leave
nop
dec
and
add
jmp
jo
ret
jo
inc
jp
bound
add
xlat
ds
dec
push
hlt
sub
adc
adc
je
dec
repz
xchg
push
push
mov
mov
mov
add
roll
and
and
mov
dec
xor
dec
fs
pop
xchg
in
mov
rorb
sub
or
or
sbb
mov
and
xchg
sbb
outsb
inc
sub
add
sbb
sub
and
add
pop
leave
cli
pop
nop
push
mov
jns
inc
xchg
call
scas
and
in
push
dec
les
push
inc
dec
or
or
in
or
inc
mov
pop
mov
jbe
mov
punpcklbw
add
fwait
nop
add
ret
lea
jg
out
mov
mov
add
sbb
sbb
xchg
addb
subb
add
ljmp
mov
roll
sbb
popa
mov
arpl
rol
or
sub
adc
or
and
hlt
or
jb
dec
dec
das
or
int
mov
dec
and
sub
adc
hlt
and
hlt
cmp
movswl
lods
sbb
push
or
xor
pop
dec
loopne
mov
fldenv
adc
add
sbb
daa
loopne
cmpsl
dec
in
cmc
jmp
mov
jno
popf
aam
xchg
inc
sub
roll
ret
dec
js
and
lea
cmp
sub
xchg
sub
pop
inc
repz
mov
push
ja
inc
add
out
push
int3
push
xchg
and
add
dec
or
jge
cmp
mov
daa
add
jg
adc
add
push
or
and
mov
jae
inc
push
addl
or
xlat
inc
jl
les
lahf
push
ret
mov
jne
divl
adc
inc
dec
je
adcl
push
dec
clc
lea
or
shlb
jo
inc
sub
push
xchg
shrb
gs
daa
fcomps
test
inc
xor
or
inc
or
xchg
cmpsl
outsb
fistps
imul
jmp
test
or
add
mov
dec
les
stos
cmp
sbb
sbb
sub
and
fwait
mov
lcall
inc
dec
pop
into
addr16
push
mov
sbb
sbb
dec
or
push
jb
sti
shrl
into
adc
pop
xchg
sub
push
jns
rcrb
movsb
jb
int
test
mov
je
js
pop
mov
push
jb
xchg
sbbb
xor
test
dec
mov
nop
pop
nop
adc
imul
dec
jo
sub
dec
dec
push
add
xchg
add
dec
dec
inc
add
insl
lret
dec
xor
inc
gs
adc
push
gs
add
inc
out
cmpsl
test
jae
and
nop
push
dec
and
mov
and
jo
or
dec
mov
xorb
out
sbb
dec
jae
pop
fimull
mov
je
movsl
and
dec
sub
out
adc
rcrb
cli
cli
xchg
inc
rclb
add
add
shrl
sub
in
sbb
pop
xchg
mov
sbb
in
xlat
insb
sub
jmp
cmp
cmp
je
lods
or
in
stos
repz
add
xor
lea
cwtl
sub
mov
xchg
and
sbb
or
xor
push
adc
lock
xorl
mov
dec
sahf
mov
dec
push
rcll
jle
jo
mov
cs
pop
xor
and
and
imul
xor
and
xor
inc
daa
or
pop
xchg
inc
mov
or
pop
jg
insl
movsl
clc
mov
lods
xchg
mov
fs
mov
jmp
xchg
inc
or
pop
je
push
fisubs
jecxz
fmul
and
div
mov
or
in
or
sub
and
and
fs
or
outsl
xor
stos
add
mov
mov
sub
pop
mov
xor
out
mov
int3
dec
nop
mov
inc
adc
sarb
push
bound
cmp
and
jns
and
clc
mov
inc
dec
add
aas
lds
adc
jo
js
data16
aaa
daa
inc
mov
push
or
aas
mov
outsb
inc
sub
loop
sbb
mov
dec
loopne
fcmovb
mov
jmp
outsl
leave
ret
or
xchg
sbb
pop
pop
push
outsl
inc
ja
nop
lea
xor
add
cmp
sahf
mov
pop
add
outsl
push
shl
cmp
sbb
ja
nop
fs
lods
push
lock
jns
pop
mov
and
xchg
je
add
and
cld
je
adc
or
aaa
sarb
out
cmp
cmp
je
mov
mov
pusha
test
cmp
xchg
mov
pop
mov
push
cmc
dec
xchg
and
add
add
imul
mov
or
addr16
mov
mov
lock
push
push
fiaddl
push
ja
ja
xchg
jns
xchg
adc
jp
adc
add
jo
test
lock
cmc
xor
cwtl
push
mov
in
sbb
in
lret
lods
aas
pop
adc
into
aam
mov
push
mov
loope
data16
lret
popf
adc
cld
jl,pt
enter
insb
xor
inc
sbb
test
movsl
xchg
loope
and
insl
inc
imul
jb
push
sbb
lahf
add
testb
sub
and
jmp
add
mov
jl
add
add
push
inc
push
or
and
xor
dec
in
pushf
add
sbb
fidivrl
mov
mov
push
leave
js
inc
mov
mov
push
pusha
test
cmp
test
lock
out
mov
push
adcb
out
shl
lock
cli
cmp
adc
xor
push
push
sub
mov
scas
xchg
inc
pop
movsl
add
xchg
scas
lcall
js
or
mov
test
sub
and
and
sub
sub
add
aad
mov
into
aas
movsb
mov
rcrb
pop
inc
insb
and
adc
pop
movsl
or
insb
and
xor
rcrl
loop
push
cmp
sub
or
sbb
inc
and
mov
dec
push
addr16
adc
addps
in
arpl
imul
je
jecxz
lds
and
in
imul
xchg
push
sub
push
inc
and
mov
xchg
and
jp
mov
xor
test
dec
sbb
mov
adc
xlat
lock
fs
xchg
cli
add
fs
adc
xor
and
inc
xor
or
push
jge
jo
xchg
aam
dec
popl
jg
mov
add
es
rcrb
pop
ja
add
sbb
lods
ficoml
push
xchg
nop
cmp
adc
xor
mov
push
inc
out
xchg
dec
jl
das
jnp
push
iret
lods
mov
sarl
mov
fs
jno
adc
daa
cwtl
pop
lds
dec
cmp
ror
cmp
mov
pop
ss
test
dec
bound
stos
ja
xchg
je
push
mov
nop
dec
dec
cmp
ja
jne
xor
stc
sbb
leave
popa
mov
ss
cmp
mov
pop
xor
dec
add
pushf
bound
adcb
push
xchg
or
or
pop
daa
pop
nop
js
rorl
sbb
add
in
inc
jbe
inc
loop
dec
sub
lds
adc
mov
mov
and
scas
push
inc
sbb
in
fcmovnu
pushf
sub
inc
in
dec
mov
push
adc
subb
je
pop
es
scas
lock
mov
cmp
xchg
dec
cmp
push
sbb
call
jbe
aam
ja
add
inc
jb
mov
rclb
nop
push
loope
lea
adc
jl
lea
lods
sbb
xchg
clc
scas
imul
push
push
scas
dec
or
mov
push
inc
mov
mov
add
aas
pop
inc
mov
or
jg
or
mov
ja
push
test
inc
jecxz
fildll
addb
rorb
xchg
addr16
cwtl
add
pushf
lods
test
dec
out
add
adc
roll
lods
inc
inc
and
mov
dec
xor
imul
test
jecxz
sub
sbb
cld
dec
adc
pause
out
and
xchg
jo
test
subl
daa
mov
in
sbb
dec
or
mov
lret
cmp
dec
rorb
xchg
lahf
xchg
fs
push
mov
pop
xor
push
inc
test
sub
mov
popa
rcrb
sbb
fs
loopne
push
jecxz
pop
rclb
jl
pop
lahf
movsb
imul
shlb
mov
sbb
cmpsb
shr
imul
dec
orl
mov
int3
push
outsl
and
data16
and
movsb
cmp
xlat
push
pop
ja
sub
cmc
add
shlb
sub
mov
sbb
insb
mov
pop
add
jecxz
add
add
repnz
xor
add
add
ret
or
in
add
or
jmp
sub
cmpsb
dec
frstor
push
fisttpll
adc
rcl
enter
pop
fistpll
adc
and
jmp
mov
adc
cmp
cmp
xchg
das
lock
js
call
je
pusha
in
shll
mov
sbbl
jb
pop
push
xchg
addb
orb
or
pop
push
movsb
push
nop
or
inc
mov
insb
xchg
cwtl
push
lds
mov
xchg
in
sbb
xchg
outsb
dec
pushf
push
shll
aas
push
loopne
dec
push
sbb
mov
inc
lods
sbb
hlt
lods
and
add
sub
mov
mov
cmp
pusha
cmpsl
add
lret
mov
std
pop
test
mov
addr16
mov
jecxz
fisubs
inc
add
or
outsb
shl
gs
mov
ja
ret
adc
sbb
mov
xor
mov
ss
and
in
mov
and
out
adc
push
sbb
das
mov
add
sub
ss
call
xlat
fwait
pushf
xor
cmp
lret
adc
adc
mov
xor
add
adc
and
dec
xor
xchg
dec
ret
push
call
and
and
xchg
xor
inc
add
rcrb
and
pop
adc
stos
pop
pop
jo
add
js
iret
add
mov
or
lods
mov
fidivs
and
leave
sbbb
pop
insb
mov
push
mov
add
push
cmp
push
push
mov
xchg
inc
fwait
push
xchg
inc
or
mov
push
sbb
in
inc
mov
inc
push
loopne
and
push
adc
shlb
pop
imul
inc
pop
inc
fistpl
daa
adc
sar
sub
dec
je
jmp
cmp
dec
icebp
cmp
xor
xor
dec
sub
gs
jmp
and
inc
cmp
push
adc
in
stos
adc
aad
pop
jne
scas
aas
xchg
sbb
mov
subb
lea
insb
xchg
inc
arpl
push
push
fstpt
addr16
dec
mov
add
dec
add
pop
test
jmp
dec
addr16
lahf
xor
jl
xor
movsb
sbbb
fnsave
jge
fs
jbe
pop
push
loopne
dec
mov
pop
cmp
add
cmpb
mov
inc
xor
jl
dec
adc
dec
pusha
xchg
mov
imul
out
mov
sub
fiaddl
or
iret
mov
ret
movsb
mov
add
fstps
dec
add
into
sahf
sbb
sahf
push
seto
xor
out
fs
in
sbb
mov
fwait
sub
test
jne
mov
stc
dec
fdivl
mov
and
adc
inc
or
lock
xlat
add
ds
out
sbb
dec
pop
sub
lock
std
mov
xor
stos
push
mov
pop
imull
cmpsb
lock
aam
mov
push
mov
pusha
out
dec
adc
xor
mov
jae
adc
push
jnp
lods
inc
pop
pop
fidivrl
adc
pop
dec
pop
mov
lds
mov
into
cmp
call
and
dec
movsb
or
shr
int3
cmp
incb
rcrl
jne
dec
and
int
or
into
hlt
xor
mov
push
inc
popa
subb
mov
mov
das
stos
insl
leave
pop
adc
inc
cmpsb
cmp
movsb
jb
mov
mov
pop
sbb
jo
dec
add
mov
lods
in
and
adcl
mov
sbb
dec
dec
daa
mov
push
xchg
mov
shrb
hlt
mov
sbb
sbb
push
int3
inc
lea
or
add
sub
lea
add
jg
pop
pop
into
pop
mov
jns
leave
push
cmp
xor
push
sbb
sbb
mov
add
jne
outsl
enter
test
lock
adc
cmpsl
dec
xchg
dec
adc
push
sbb
sbb
push
sbb
je
add
divl
push
jp
push
xor
or
clc
xor
mov
scas
inc
sbb
xor
pop
sub
pusha
xor
add
push
sub
insb
pop
sub
imul
add
cmpsl
add
shlb
cmp
pop
lds
lret
mov
dec
mov
sbb
push
fdivr
test
aas
testb
inc
mov
adc
adc
and
mov
repnz
adc
adc
pop
rol
adc
or
dec
loopne
mov
cmp
mov
jmp
movsb
and
xor
sbb
decb
add
xor
clc
adc
rol
cmp
inc
or
sbb
iret
or
loope
nop
and
mov
in
leave
jo
jmp
aam
mov
pop
rcr
jp
xchg
ja
add
xorl
addr16
mov
and
scas
loopne,pt
aaa
inc
sbb
sbb
mov
mov
fs
adc
orl
jnp,pn
mov
adcl
add
push
adc
add
fdivr
sub
dec
imul
cltd
xor
or
imul
aaa
lods
add
adc
ret
add
insl
xchg
scas
mov
push
inc
scas
inc
pop
inc
inc
lret
mov
sub
shll
inc
popa
and
pushf
inc
sbb
push
iret
or
fucomi
or
sub
pop
test
fiadds
out
dec
or
push
das
dec
add
sbb
cld
mov
cld
hlt
cld
hlt
aaa
mov
dec
inc
lock
dec
aas
popa
cld
icebp
hlt
jb
and
and
xor
hlt
hlt
cld
cmp
and
popl
gs
inc
adc
jl
pop
sub
jge
xchg
sub
subl
in
loop
rcll
adc
dec
xchg
mov
mov
cmp
xor
nop
js
sti
jmp
rcrb
sub
and
dec
loope
xchg
cmp
arpl
sbb
mov
addb
inc
rorl
mov
ret
and
xchg
imul
loopne
add
addl
xor
cld
push
cld
or
or
dec
add
and
pop
or
je
testl
mov
cmp
mov
inc
add
xchg
cmpsl
or
lcall
fs
loope
dec
jge
fmull
sbb
xchg
mov
enter
inc
add
push
push
ljmp
pop
scas
cs
js
or
fmuls
adc
getsec
or
push
pop
fucomi
pop
lods
adc
adc
js
xchg
pop
or
mov
les
dec
pushl
add
xchg
cmp
fwait
dec
adc
imul
lret
pop
adc
call
cli
sbbb
mov
lcall
rcr
cltd
mov
mov
stc
dec
xchg
dec
sub
cmp
add
xor
movsl
jo
sbb
push
mov
rorl
dec
xchg
adc
shrb
adc
dec
pop
sub
and
in
pop
sub
lods
sbb
imul
adc
xchg
sub
push
cwtl
adc
enter
xor
in
call
cs
scas
sub
add
xor
loopne
push
dec
cmp
inc
pop
stc
and
push
sahf
jno
ret
cmp
and
mov
pusha
bound
test
dec
dec
and
daa
cld
lcall
jge
sub
movsl
sub
jo
dec
cwtl
rclb
push
orb
or
out
mov
sub
pop
sub
out
jmp
lock
jne
es
or
mov
in
or
inc
xchg
mov
ret
jbe
cmovge
lock
cmc
lahf
cld
lahf
mov
add
es
sbb
dec
scas
fs
mov
and
and
xchg
in
inc
fisubl
mov
pop
xor
je
dec
dec
or
fcmovnb
mov
push
jle
test
adc
dec
add
mov
and
push
enter
test
mov
shr
incl
mov
subl
je
es
ss
xorl
js
push
push
arpl
inc
and
jp
daa
push
pop
xchg
push
call
loopne
pop
cmp
jmp
jno
mov
int3
or
jne
and
mov
lcall
enter
insl
pop
inc
loopne
sbb
push
add
fldcw
ja
mov
and
jle
xor
lea
sub
outsl
inc
xor
das
add
jb
cmp
mov
add
jb
repnz
stc
add
mov
adc
add
or
inc
fs
adc
inc
jo
out
add
imul
popa
sbb
mov
or
pop
or
or
popa
jb
mov
pop
fldl
jle
adc
shlb
adc
rol
inc
or
add
pop
cmp
pop
push
bound
insb
insl
lret
mov
je
movsb
adc
add
lock
pop
inc
pop
and
js
and
adc
dec
mov
pop
inc
adc
xor
aam
fdecstp
out
nop
je
sbb
js
arpl
dec
pop
push
nop
js
inc
and
icebp
xor
fsts
in
adc
rolb
sbb
push
jmp
mov
pop
movsl
adc
cmp
shll
add
insb
mov
pop
arpl
xor
or
fstl
lods
in
movsb
or
xchg
dec
add
push
mov
adc
addr16
sbb
or
mov
sbb
les
xor
push
jl
rclb
insb
pop
dec
push
call
iret
sarl
mov
jnp
nop
pop
mov
fcoms
or
js
pusha
clc
out
pmullw
call
scas
xor
mov
cltd
dec
jp
jmp
mov
lds
stc
cmp
add
mov
add
dec
sbb
loopne
mov
js
mov
cmpsb
or
pop
scas
mov
clc
sub
fisubl
loop
jecxz
push
ljmp
insb
fistpll
cmpsl
pop
clc
adc
sbb
mov
scas
mov
dec
adc
or
push
xchg
test
test
dec
lcall
fs
imul
push
andl
inc
xor
inc
add
inc
cmp
imul
dec
sub
cmpsl
cmp
cli
add
ss
and
in
fs
mov
dec
mov
or
jmp
imul
sbb
add
or
pushf
mov
mov
cli
mov
lret
or
and
inc
cmp
sarb
dec
repz
loopne
add
repnz
jl
out
mov
or
or
cmp
movsb
jae
cmp
xor
sub
and
xchg
cwtl
cmp
pop
xchg
cmp
push
mov
sarl
js,pt
or
add
call
dec
pop
shlb
and
push
xor
roll
cmc
imul
or
test
inc
xor
sbb
mov
js
out
cmp
xchg
or
sbb
loope
or
hlt
ljmp
out
mov
sbb
mov
push
nop
test
or
push
iret
cmpsb
loopne
mov
insb
out
out
adc
pop
outsl
push
imul
push
mov
inc
mov
aam
mov
add
nop
add
inc
adc
sub
repz
cwtl
cwtl
rclb
testl
mov
xor
add
movsl
stos
inc
dec
shl
pop
jnp
jl
pop
jb
aas
nop
push
lds
enter
inc
add
frstor
in
pop
inc
cld
cli
into
inc
cmp
push
roll
popf
push
aas
cmp
stc
pop
xchg
xlat
pop
adc
dec
addb
loopne
add
jl
ret
filds
add
xor
scas
push
out
popf
filds
pop
push
add
das
nop
setle
les
or
push
rorb
or
pop
pop
or
sbb
scas
loopne
pop
push
stos
mov
adc
adc
adc
dec
or
int
or
in
imul
icebp
stos
pop
scas
xor
lret
adc
test
dec
sbb
inc
dec
or
repnz
pop
add
push
or
pop
addb
jnp
into
add
mov
icebp
inc
inc
loopne
xchg
jl
or
or
addb
scas
mov
jbe
fwait
jmp
push
mov
lods
out
andps
or
sbb
pop
insl
andb
jo
mov
sub
cmp
loopne
push
roll
jg
push
push
test
cmp
or
xor
je
imul
into
mov
jg
scas
call
repz
push
mov
add
scas
mov
push
insl
popa
adc
xchg
sbb
jo
in
pop
jbe
bndldx
and
push
sbb
mov
ror
nop
test
push
push
pop
repnz
outsb
add
jecxz
cmp
push
dec
jae
sub
js
cmpl
push
inc
sbb
sbb
or
imul
fsts
and
inc
pusha
es
or
test
mov
sbb
add
fstl
pop
inc
xchg
and
cmp
rclb
nop
and
pop
enter
scas
push
imul
jecxz
or
push
xor
or
cs
mov
pushf
xchg
or
lods
sbb
ficoms
in
jo
jo
sub
js
in
xchg
decb
ja
mov
fcmove
dec
scas
call
adc
and
ret
nop
clc
xlat
add
inc
daa
es
sbb
mov
inc
or
mov
push
shlb
xor
xor
xor
inc
and
dec
dec
dec
dec
dec
dec
dec
dec
sbb
push
push
push
push
push
pop
pop
pop
inc
or
clc
and
xor
loopne
inc
hlt
cwtl
dec
std
test
xchg
push
inc
pop
xchg
adc
test
in
pop
addb
push
adcb
and
inc
sub
cli
testb
insb
cwtl
xorw
add
rol
cmp
sbbb
push
mov
mov
mov
dec
push
pminsw
inc
cmp
mov
shlb
pop
inc
mov
mov
dec
ja
leave
inc
insl
leave
inc
jae
roll
clc
sub
xchg
jb
or
je
push
mov
sub
notb
xlat
movsb
fstl
cmpsl
popf
out
jge
shrl
xchg
dec
or
push
shlb
test
jne
mov
cli
push
sbb
lea
hlt
loop
rcrl
adc
xor
inc
xor
cmpsb
out
test
and
dec
jle
ret
aam
cmp
jmp
repnz
xor
xchg
jmp
cltd
rorb
inc
push
pusha
loopne
sbb
cs
call
mov
std
lock
mov
lods
sbb
hlt
sbb
push
or
lods
shrl
dec
mov
rclb
rcll
xor
daa
out
test
xchg
cmpb
jb
xchg
sbb
sub
xor
jp
sub
add
or
testl
xor
or
and
cmp
push
ret
xorb
xor
xchg
iret
xlat
adcl
xchg
add
mov
repnz
dec
xor
jmp
aaa
xchg
flds
mov
inc
jmp
insl
xchg
sahf
xchg
xchg
xchg
lods
cwtl
sub
daa
cmc
jne
adc
hlt
clc
or
lods
mov
mov
and
ds
push
lcall
add
orb
cld
bound
and
pop
pop
mov
add
out
mov
ds
xchg
repnz
inc
mov
push
je
idiv
mov
dec
xchg
xor
rcl
push
adc
rorb
dec
mov
ja
sbb
sub
pushl
ljmp
or
imull
and
dec
add
fcomps
sub
call
add
sub
lock
xor
icebp
jp
dec
mov
scas
adc
out
das
lcall
int
or
outsl
dec
dec
and
call
sub
jg
out
lsl
pop
cmp
ja
sub
and
test
cmpsl
inc
fisttpl
out
push
mov
lock
or
fstps
cmp
js
mov
adc
loop
or
jne
orl
push
xor
and
mov
add
dec
push
inc
cs
xchg
add
les
or
jmp
imul
mov
xchg
cmp
mov
inc
pop
and
popf
imul
fiaddl
imul
movl
xor
movsl
outsl
add
mov
je
aaa
andb
aas
jb
insb
movzbl
cmp
je
nop
adc
push
insl
adc
das
int
xor
dec
sbb
iret
jmp
imul
or
push
leave
mov
out
push
in
or
test
or
fwait
movl
fs
rcrb
xchg
pop
sub
dec
imul
push
push
inc
mov
dec
cmp
and
xchg
inc
jb
mov
shr
in
dec
shlb
imul
pop
test
pop
add
mov
mov
mov
jl
mov
or
mov
add
sub
pop
cmpsb
lock
aam
add
js
add
test
adc
aad
hlt
test
or
cmp
mov
iret
jmp
and
fisubrl
movsb
add
add
sbb
inc
les
mov
inc
loope
adc
stc
adc
and
and
or
dec
test
leave
dec
dec
add
mov
mov
add
xor
inc
add
push
cs
push
add
inc
ds
or
les
sbb
xor
dec
dec
xorl
pop
gs
sub
pop
push
pusha
enter
sub
jbe
and
mov
and
daa
jbe
add
rolb
mov
sub
dec
mov
push
mov
out
add
mov
add
xor
lods
and
xor
push
add
xor
cltd
sbb
mov
aam
sub
nop
in
sti
push
cmp
xor
sbb
dec
or
jo
xchg
div
test
rcll
jmp
mov
in
xor
cmp
out
fcomp
sbb
pop
aam
xlat
pop
xchg
cmp
fsubs
add
lds
rclb
xchg
xchg
loop
add
out
mov
mov
ss
fbld
sahf
dec
lods
cmp
cmp
xor
mov
adc
int3
enter
test
and
push
mov
mov
out
or
inc
adc
push
nop
mov
decl
push
aaa
test
pop
sub
mov
or
scas
inc
cld
rorb
sub
push
dec
roll
je
ja
or
insb
jecxz
call
push
pop
ja
jo
jl
mov
mov
push
dec
insb
out
sbb
inc
push
clc
add
dec
dec
add
mov
daa
add
dec
jno
mov
scas
imul
dec
jne
insb
in
xor
sbb
jnp
push
in
push
inc
push
cltd
in
or
rcr
inc
sub
and
or
or
insl
fimull
pop
xor
clc
and
je
mov
insl
out
movsb
xchg
mov
into
rorb
cmp
sub
in
sbb
push
call
rcrl
mov
and
shlb
sbb
mov
pop
mov
imul
pop
repnz
or
adc
out
jmp
pop
xor
aam
push
cmp
test
adc
cmp
dec
sbbb
inc
push
push
fwait
pop
iret
sbb
mov
mov
fcmovb
xor
jmp
cmp
test
pop
adc
inc
push
scas
int3
xor
leave
out
dec
add
scas
or
fwait
rorl
push
mov
dec
imul
pusha
add
shll
mov
dec
out
cwtl
aas
pusha
cmp
push
subb
aad
sbb
filds
outsb
rorb
push
xor
push
sbb
sbb
lock
enter
inc
ficoml
clc
xchg
je
mulb
or
adcb
pop
mov
add
inc
add
imul
movsb
aaa
daa
jl
hlt
dec
js
add
and
fs
xor
clc
and
inc
add
js
lcall
or
sbb
mov
test
adc
mov
push
sahf
sub
addl
sbb
aam
in
push
test
pop
push
inc
mov
adc
adc
dec
cmp
xchg
lcall
mov
push
insb
ljmp
movsl
mov
or
cwtl
pop
test
call
sti
mov
adc
pop
inc
daa
mov
stc
xchg
arpl
add
adc
jae
mov
mov
and
cmpsb
leave
push
mov
icebp
stc
and
orl
add
mov
mov
adc
xchg
add
adc
xchg
ffreep
shl
push
xchg
jns
dec
dec
xor
push
adc
sub
add
xchg
or
sbb
jmp
sub
ja
push
sbb
or
add
xlat
sub
adc
push
cmc
enter
inc
cmpl
inc
iret
adc
repz
cmp
repz
cltd
fs
movsl
outsl
sti
add
inc
iret
jmp
pop
das
loopne
repnz
in
insb
mov
loop
adc
rcr
das
std
inc
mov
cmpsl
mov
inc
mov
or
movsl
cmp
movsb
cltd
loopne
mov
jle
shl
cmp
enter
inc
and
xor
cmp
push
push
cmp
sbb
divl
mov
das
mov
imul
mov
or
jo
sub
in
and
add
sub
or
add
fs
push
jns
hlt
xor
jmp
push
popa
sbbl
cld
jge
addr16
mov
popa
in
mov
cmp
pop
add
mov
fsubrs
jecxz
mov
test
fnstsw
pop
xchg
mov
lock
sub
dec
out
rol
adc
inc
lock
inc
cwtl
pop
add
loope
jb
jle
sbb
lret
mov
jmp
adc
push
fsubrs
mov
fs
cs
dec
mov
mov
mov
and
and
add
pop
mov
shrl
dec
mov
or
lods
cmpsl
mov
rcll
pop
push
xchg
nop
loope
mov
add
test
cld
or
push
hlt
sub
or
xchg
imul
sub
inc
jbe
cs
shl
xchg
in
or
xor
repz
xor
cmpsl
ret
cmp
mov
je
movsb
subl
sub
repz
stos
and
cmp
sub
mov
jnp
sbb
or
testb
pop
inc
adc
add
mov
xchg
data16
movsb
lock
fucomi
imul
mov
push
jne
orb
sbb
xor
out
pop
dec
leave
lock
rorl
or
clc
or
lahf
and
pop
fildll
xor
push
pop
or
xor
inc
cmp
je
and
lea
clc
adc
rorb
mov
mov
xchg
sbb
jge
aaa
fisttps
cmp
push
xor
sub
fiadds
and
dec
add
hlt
push
inc
xchg
jne
cmp
rcll
dec
repz
jb
lcall
pushf
call
inc
add
or
outsl
and
ljmp
setnp
int3
push
dec
pushf
or
dec
loopne
adc
mov
fcoml
dec
adc
push
cmp
xchg
pushf
add
or
xor
pop
push
andb
mov
mov
mov
jmp
in
in
ret
xchg
popa
adc
and
sbb
add
and
enter
adc
mov
fsubs
test
xchg
pop
pop
push
mov
int
pop
and
iret
int3
sar
ja
inc
movsb
inc
jmp
fistl
inc
add
xor
call
dec
clc
xor
xor
mov
sbb
adc
add
push
repnz
loope
xchg
lret
add
inc
sub
inc
ds
outsl
dec
push
inc
enter
clc
xchg
pop
enter
pop
sbb
cmp
outsb
xlat
dec
cmpsb
cli
push
jns
les
sub
arpl
add
bound
push
mov
ja
addl
lock
push
adc
xchg
call
and
fisttpl
push
mov
movsb
and
adc
sbb
xchg
arpl
xor
loopne
ss
enter
push
je
fwait
lods
loopne
xor
mov
fnstcw
cmpsl
and
or
loopne
fwait
add
jae
cmc
rclb
int3
mov
or
add
xlat
sub
sub
cmp
sbb
sbb
fwait
jae
jl
jecxz
addl
fbstp
repnz
das
dec
lods
push
sbb
cmp
xchg
ljmp
aas
mov
xchg
jne
fsubrs
pop
sub
lock
jmp
fbld
sub
adc
push
inc
push
xchg
pmuludq
inc
mov
cmp
push
daa
fbld
sub
adc
cmp
jl
add
cmp
icebp
jl
jecxz
lods
or
add
out
or
mov
test
or
lea
dec
imul
adc
jmp
xchg
sbb
test
out
nop
rclb
mov
mov
fwait
mov
repnz
dec
filds
lock
and
movb
and
int3
push
jl
xlat
add
mov
call
adc
cmp
cld
push
add
sti
add
loop
push
pop
inc
and
push
jg
out
and
pop
out
push
add
jp
stc
and
cmp
insb
add
inc
fwait
dec
pushf
mulb
jb
mov
mov
mov
fists
stc
mov
mov
dec
mov
stos
sbb
add
mov
adc
jmp
jecxz
push
rolb
and
lcall
test
sbb
dec
mov
push
pop
add
into
cmp
mov
and
push
cmp
push
pop
sbb
xor
jno
xchg
mov
xor
sti
movsb
aad
sub
pop
xchg
sub
dec
adc
xlat
aam
sbb
movsb
adc
cltd
push
filds
fcompl
or
sbb
mov
or
mov
cld
add
xor
mov
add
int3
or
dec
xchg
cmpsl
pop
xor
sbb
mov
sbb
sti
dec
mov
and
dec
adc
ss
pop
cld
cltd
inc
mov
pop
sbb
ret
aas
push
push
or
aas
xor
fmull
jne
nop
lret
dec
mov
pop
add
xchg
adc
mov
loopne
dec
inc
add
jl
sub
sbb
pop
xor
ret
das
push
popa
nop
cmp
cltd
rcrb
cmp
xor
adc
inc
or
xchg
out
adc
mov
cltd
and
jmp
movsb
inc
xor
loope
adc
insb
xor
dec
orl
sti
pop
mov
clc
xor
pusha
push
lea
xchg
movsl
inc
pop
add
inc
nop
add
cmp
pop
add
je
dec
enter
xchg
aaa
pusha
adc
inc
movsl
xchg
ja
add
push
inc
int
subb
test
push
cmp
ficoml
sbbb
aad
adc
ja
xor
and
iret
addr16
push
push
xlat
mov
fisubrs
aad
xorl
add
nop
fbld
sbb
mov
lods
insl
loope
dec
sbb
cmp
push
imul
mov
cmp
and
xchg
lret
lahf
cmp
in
push
rcll
inc
and
sbb
or
jmp
test
pop
js
lods
insl
jecxz
sbbl
sahf
popa
sbb
mov
je
hlt
jbe
xor
dec
stos
adc
push
dec
aas
pop
jns
push
subb
adc
sub
inc
or
inc
mov
push
movsl
iret
push
sbb
and
jl
mov
or
pushf
sbb
and
pop
cmovne
test
add
mov
pop
lods
arpl
jp
inc
rcrl
sub
ficoml
je
xor
and
loope
add
xchg
xor
add
andb
test
cmpsb
jbe
leave
adc
bound
add
ret
lret
in
ss
mov
aad
jno
adc
mov
lods
cmp
sahf
rorb
hlt
push
or
enter
pushw
mov
out
stos
in
mov
jo
mov
lods
sub
mov
test
inc
negl
dec
enter
or
sbb
inc
mov
adc
hlt
fadds
loop
push
cltd
mov
inc
nop
push
xchg
lcall
adc
rcl
fcompl
push
pop
adcb
andb
mov
into
push
lock
cmp
inc
inc
sub
inc
push
inc
shr
inc
fsubs
dec
jno
push
or
hlt
sub
jle
shrl
sbb
xchg
mov
adc
popf
cmpsl
jmp
inc
cmp
dec
dec
pushw
mov
test
pop
mov
xchg
dec
js
dec
dec
push
ljmp
mov
fs
loop
mov
inc
das
cmp
aaa
test
sbb
pushf
mov
fldl
add
mov
push
adc
repz
rol
mov
inc
mov
sbb
add
repz
cmp
pushf
mov
daa
in
imul
cmp
add
cmp
fcmovbe
lods
push
fnstenv
add
pop
mov
mov
xlat
and
push
repz
nop
aas
insb
mov
loopne
inc
inc
dec
aas
shr
jo
sarb
sub
scas
cmc
bswap
xor
and
add
mov
mov
mov
add
outsl
push
or
orl
imul
inc
in
stos
in
addr16
sub
sub
cmp
sub
sub
cmp
sub
sub
push
mov
sub
sub
das
cmp
fs
push
push
pop
sbb
jbe
daa
cld
out
add
aad
mov
mov
test
dec
and
mov
imul
aaa
sbb
or
sub
fsubr
adc
sub
sbb
adc
xor
inc
pop
mov
and
sbb
loopne
out
or
xchg
rolb
lock
sbb
subl
pop
roll
adc
stos
and
or
stos
jge
and
sar
mov
xchg
push
sti
sub
push
xchg
negl
popf
aaa
rclb
lods
in
and
jns
lea
aas
sub
pop
push
sbb
or
pop
jns
orl
int3
daa
or
sub
mov
aad
scas
or
repnz
out
in
mov
cmp
mov
mov
cmpsb
pop
test
mov
or
imul
push
outsb
add
sbb
dec
and
inc
aam
insl
push
xchg
adc
mov
movsb
pop
add
pusha
in
lock
dec
loopne
nop
filds
enter
popa
mov
push
jle
or
or
clc
push
inc
adc
add
test
dec
lea
je
add
ja
or
lcall
loopne
xchg
add
or
es
imul
test
imul
loope
lcall
push
jecxz
es
imul
pop
or
outsb
in
insl
pop
push
popf
pop
adc
jo
pop
sub
and
pop
push
in
mov
cmp
testl
int
dec
inc
adcb
sbb
in
adc
mov
fcomps
push
mov
std
stc
cmp
add
repnz
inc
inc
pop
movsb
clc
cmp
and
ss
add
nop
fcoms
add
sbb
ffree
scas
std
mov
push
gs
inc
loope
xor
mov
gs
xlat
mov
mov
pop
push
jae
push
divl
in
xor
pop
lahf
out
xor
stos
sub
mov
push
sahf
rolb
fnstsw
jb
inc
movsb
pop
cwtl
aam
dec
shl
jmp
sbb
ja
jb
push
es
in
sub
cmp
addb
xor
mov
insl
out
push
cmp
insl
add
add
xchg
sbb
pop
jne
sub
cmp
push
lea
add
loope
pop
jmp
mov
mov
add
add
lret
das
dec
cmp
popf
outsb
inc
imul
dec
bound
mov
fstpl
adc
mov
adc
xor
inc
pop
pop
push
cmp
xor
mov
add
dec
popa
out
cmp
test
jo
lret
lcall
fdivs
std
loop
sub
repnz
in
scas
add
jo
xchg
arpl
xor
repz
popf
push
lock
mov
call
imul
movsl
gs
out
jl
dec
mov
dec
lahf
sub
jmp
movsl
adc
push
add
pop
daa
aam
daa
insl
mov
push
push
fsubr
cwtl
sub
sub
fcoms
adc
test
mov
sbb
scas
inc
sbb
mov
inc
outsb
rorb
xchg
cmp
enter
sub
imul
xchg
dec
add
inc
and
test
xchg
scas
add
or
push
insb
xchg
push
sub
aaa
pop
mov
add
je
and
cltd
xlat
pop
pusha
inc
dec
movb
popa
ret
popf
sbb
hlt
mov
mov
or
stos
sub
adc
or
pop
pop
sbb
js,pn
dec
and
sub
add
xor
xor
icebp
jg
dec
sti
xchg
pop
leave
push
repz
sbb
add
mov
lods
inc
sar
pop
adc
cmp
mov
and
inc
cmp
shlb
and
outsb
mov
adc
dec
xor
sbb
leave
mov
pop
lahf
cmp
pusha
nop
inc
and
push
dec
mov
add
mov
xchg
push
addb
sub
push
pushf
sbb
movsb
jo
inc
sbb
pushf
push
inc
aaa
sub
add
jmp
iret
cld
insb
xlat
lea
sub
sub
adc
ss
add
mov
xor
iret
rclb
pop
xor
xor
add
xchg
stc
jb
xor
mov
push
mov
sbb
inc
dec
adc
jne
and
lret
push
xor
mov
cmp
fdivs
or
xchg
cltd
mul
sub
xchg
mov
adc
aas
sti
cmpsb
xchg
xor
loopne
inc
inc
loope
pop
rsqrtps
and
jbe
adc
in
and
scas
and
xchg
sbb
test
repz
add
push
sub
dec
movsl
sub
loopne
aad
mov
das
pop
add
out
jo
mov
pop
in
nop
fcmove
shrb
inc
outsb
imul
sbb
dec
pop
scas
sub
sub
insb
and
add
inc
pop
testl
xor
bound
cmp
add
icebp
nop
fisubrs
xchg
paddd
push
popf
and
xchg
lock
int3
into
sbb
nop
or
push
dec
push
mov
xchg
ss
fcoms
xchg
add
fldenv
mov
fadd
sbb
push
mov
dec
mov
sahf
inc
pushf
iret
sub
leave
xor
and
mov
or
xchg
sarl
push
or
lea
and
add
or
mov
and
movsb
rcl
inc
mov
mov
add
ret
lea
pop
push
add
out
das
sub
push
daa
imul
sub
xor
lahf
or
and
adc
cli
and
xchg
mov
popa
dec
lar
imul
cld
sbb
icebp
in
out
int3
pop
aaa
jno
or
cld
ror
lret
cmp
or
and
cltd
lahf
shl
dec
xor
jl
push
add
loopne
jbe
or
adc
jae
xchg
imul
xchg
adc
cltd
mov
popa
cltd
jmp
mov
push
pop
jo
test
mov
push
test
inc
ficoms
add
sahf
jge
mov
mov
inc
testl
sub
jmp
dec
cs
lds
test
push
out
add
sub
testl
cld
pop
mov
pop
test
jecxz
sbb
addr16
pop
fadds
mov
sub
je
push
mov
mov
popa
mov
and
push
mov
nop
pop
inc
xor
les
movsl
xchg
loop
mov
lods
dec
mov
jg
enter
arpl
int3
adc
test
inc
rolb
fldl2e
mov
clc
pop
loopne
jp
or
and
mov
cli
add
rolb
ret
xor
call
inc
lcall
cmpsb
ror
stos
jb
inc
jge
adc
rol
cmp
iret
iret
lock
mov
add
push
outsl
sti
xchg
shlb
fsubl
push
sub
mov
rolb
and
std
pop
dec
in
inc
mov
in
inc
call
adc
sub
jge
mov
sub
dec
push
in
add
int3
mov
cmp
or
jge
or
xor
fbld
test
or
test
add
imul
push
call
cmp
pop
add
and
imul
mov
dec
jmp
pop
sarb
mov
add
pop
add
mov
mov
and
sahf
dec
aaa
loop
movsl
add
mov
xchg
inc
or
outsb
aam
fcoml
out
push
mov
fwait
mov
lods
test
movsl
pushf
push
pop
inc
pop
xor
jo
sbb
adc
and
repnz
mov
cmc
sub
dec
daa
insb
mov
shlb
test
add
das
rol
mov
or
mov
leave
add
xchg
push
inc
movsl
add
push
mov
or
xor
cmp
mov
dec
sbb
dec
popa
add
inc
dec
dec
inc
or
adc
or
xchg
rorb
inc
xor
sarb
idivb
xor
sub
inc
pop
das
lret
rolb
fwait
in
adc
test
aas
mov
les
sbb
sub
enter
fcoms
nop
push
pop
push
and
push
jp
adc
inc
ja
add
add
fs
daa
mov
sub
adc
push
xor
lods
pop
stos
sub
sub
push
aas
in
push
ss
aaa
inc
push
mov
test
test
addb
cwtl
add
leave
inc
popf
xchg
mov
daa
in
inc
adc
es
imul
daa
nop
loopne
lsl
sub
xchg
sub
test
jmp
dec
cmp
inc
stc
sub
movsl
mov
sbb
adc
test
xchg
sub
adc
sub
add
das
loop
dec
sub
sarb
rol
loop
testl
jge
cld
jmp
sbb
adc
xor
inc
imul
and
aam
cwtl
or
push
sbb
fs
xchg
mov
jge
imul
pusha
fs
lods
and
xchg
clc
and
pusha
mov
xchg
imul
or
add
dec
jnp
ret
cmp
jne
mov
mov
jp
push
in
push
daa
pxor
cltd
add
imul
test
xor
sub
xor
lods
aam
shlb
and
cmpsl
movsl
adc
push
adc
test
lods
adc
in
ljmp
sbb
mov
or
push
ss
inc
cmp
or
xchg
jns
xor
xor
dec
pushf
push
das
repnz
loopne
xor
inc
stc
jno
add
jg
sub
imul
int3
pop
adc
fistps
push
and
test
jno
jecxz
mov
scas
xor
test
orb
ljmp
jbe
add
adc
xchg
cmp
movsb
adc
sub
dec
pop
jns
inc
pop
dec
ljmp
sub
mov
gs
mov
flds
sbb
push
adc
mov
loopw
inc
insl
push
xchg
call
jmp
cltd
dec
jnp
sbb
jge
push
inc
add
mov
test
mov
pusha
mov
sbb
push
pop
fs
xchg
pop
mov
cmp
lods
movsb
aam
dec
insb
dec
fstp
pop
sub
scas
push
test
inc
loop
dec
loopne
push
pop
jmp
jae
incl
pop
repz
movsl
loop
xchg
mov
sub
in
and
loope
pop
and
shlb
xor
xchg
test
add
or
in
rorl
or
cld
or
pop
scas
dec
pop
jge
pop
nop
adc
xor
and
and
inc
adc
push
pop
shrb
adc
enter
jg
adc
aad
cs
add
rolb
test
rolb
adc
sub
or
add
xchg
es
xor
int3
aam
cmp
fs
pop
mull
adc
push
pop
aam
out
add
mov
jmp
ficoml
movsl
push
adc
or
sub
push
push
sbb
pop
clc
shlb
adc
inc
dec
sub
out
lods
adc
lock
xor
insl
or
std
and
add
loopne
test
jmp
and
dec
push
adc
mov
cltd
mov
sub
add
ficoml
imul
sbb
sbb
pop
int
inc
arpl
or
mov
out
in
jne
lods
inc
in
dec
and
popf
lcall
add
sub
mov
jp
and
subb
adc
ds
out
orl
inc
out
pusha
call
daa
or
cmp
push
repz
push
int3
jnp
rcll
add
jo
adc
ret
leave
dec
pop
loopne
sub
inc
dec
ja
test
or
lret
test
pop
lret
jp
sub
xor
in
int3
lea
inc
inc
inc
je
sub
sbb
aam
and
add
push
out
xorl
popa
dec
cmpsl
fwait
xor
xchg
pop
enter
sub
dec
cli
xchg
mov
sti
jge
dec
pop
or
xchg
push
xchg
imul
dec
shl
mov
add
enter
loopne
xlat
popa
inc
adc
fcomps
pop
adc
xchg
je
sbb
dec
popa
mov
fisttpl
loope
aad
pop
lea
ljmp
mov
xchg
in
adc
pop
sbb
stc
xor
jns,pn
add
jo
xchg
adc
xor
push
adc
sarb
xorl
cmovne
and
xor
pop
fsubs
xchg
test
nop
pusha
or
adc
adc
pop
ss
inc
pop
adc
stos
sbbl
and
inc
orl
push
movsb
push
xor
or
mov
jg
xchg
sbb
scas
mov
push
es
jb
sub
and
fisttps
adc
xlat
cmc
or
push
cmp
jno
mov
addr16
sbb
xor
pusha
add
add
scas
hlt
push
leave
and
xor
pop
out
pusha
rcll
cmp
adc
push
lcall
into
shlb
dec
add
out
dec
pop
jmp
addr16
xlat
pop
pop
test
imul
adc
fldt
in
jg
push
mov
or
inc
sbb
jne
push
add
and
or
ds
icebp
imul
add
mov
in
cmp
mov
jg
sbb
in
push
adc
adc
lret
xor
add
enter
pop
sub
mov
add
cmp
ret
or
div
in
or
or
dec
mov
xchg
pop
mov
fldl
mov
jle
je
nop
or
add
and
xor
inc
pop
mov
arpl
pop
sbb
mov
push
imul
or
aad
add
jmp
loope
mov
inc
cmpb
arpl
cmp
inc
sti
rcll
sbb
jl
arpl
scas
sbb
sub
sbb
leave
xchg
mov
sub
or
dec
out
stos
sub
sahf
mov
nop
lock
jmp
shll
jns
sbb
adc
pop
cmp
std
es
lock
sub
mov
decl
pop
inc
inc
mov
and
mov
inc
mov
adc
cmc
cmp
fistpl
outsl
cld
sbb
push
jo
add
add
daa
adc
lcall
push
rolb
out
cwtl
mov
mov
jl
lods
xorb
jl
js
sahf
cmpsl
stc
push
sub
je
jo
push
jns
jnp
insb
outsb
loopne
push
test
dec
je
jns
out
dec
pop
pusha
pop
push
js
mov
cmp
mov
cmp
sbb
jge
jo
inc
aaa
adc
mov
lahf
inc
inc
push
add
scas
mov
mov
jl
mov
jns
cmpb
or
call
dec
cld
mov
inc
mov
movsb
push
out
and
psraw
cli
add
pusha
hlt
dec
outsb
arpl
and
jl
add
ret
shrb
outsl
add
cwtl
lods
mov
lock
ss
adc
je
sub
insl
add
cmp
dec
add
cmp
pop
pop
or
cmp
mov
pusha
inc
adc
or
in
mov
mov
imul
mov
enter
jl
fstl
add
mov
imul
add
sub
sbb
dec
push
inc
aaa
call
pop
inc
and
or
sti
xor
loope
mov
pop
push
rcrb
sbb
fs
adc
xchg
pcmpgtb
dec
sub
dec
add
or
popf
and
aad
sbb
lds
or
jmp
pop
dec
mov
cmp
sbbb
repnz
pop
pop
pop
push
insl
outsl
sbb
je
fs
imul
jno
add
movsl
fs
enter
fildll
in
cmp
in
or
push
in
jo
pop
sbb
jecxz
enter
fs
inc
mov
mov
or
cs
push
out
clc
cmp
ja
dec
into
les
imul
in
pop
popa
js
imul
lods
and
stos
add
mov
sbb
mov
push
inc
push
in
inc
and
push
inc
lods
pop
mov
ret
push
inc
push
inc
push
push
inc
fmull
push
push
and
fcompl
cmp
das
cmp
in
negl
and
xor
sbb
fs
jbe
fwait
int
pop
lock
sbb
inc
sbb
and
adcl
pop
xor
or
sbb
jo
outsb
or
in
sub
or
inc
jp
dec
or
cwtl
or
or
mul
mov
inc
dec
sub
adc
mov
divb
and
push
bound
or
jnp
dec
sub
adc
jo
or
fwait
ret
mov
lods
or
push
outsl
mov
outsl
subb
or
out
dec
imul
jmp
sub
dec
mov
das
mov
pop
xchg
mov
or
test
mov
sub
mov
pop
gs
es
hlt
xchg
or
lock
inc
inc
sbb
or
mov
mov
adc
push
inc
clc
cmp
outsb
mov
or
and
push
das
mov
inc
xor
imul
jne
sbb
shrb
jnp
adc
stc
xchg
mov
or
add
sub
hlt
xchg
pop
test
jo
addr16
inc
cmp
pop
adc
adc
pushw
adc
icebp
and
out
adc
gs
jge
imul
inc
mov
and
sbb
imul
fcmovnb
scas
mov
sbb
inc
cmp
fs
mov
push
jb
cwtl
in
adc
test
or
mov
rclb
sbb
jp
scas
push
outsb
adc
add
inc
stc
jl
and
jno
cmp
or
pop
cmpl
movsl
in
sahf
test
xor
dec
fstps
xchg
arpl
dec
imul
or
iret
sbb
jnp
mov
or
pop
jo
push
rcr
out
sbb
jo
mov
imul
jo
xchg
popf
adc
outsb
dec
mov
mov
push
cld
filds
inc
adcl
dec
jae
push
push
push
dec
xor
and
and
fisubrs
inc
add
ja
sub
push
or
pop
dec
mov
push
xchg
fisubs
ret
pusha
or
pop
xchg
inc
inc
clc
mov
insl
popl
sete
xlat
mov
push
sub
push
loopne
cmpsb
pop
stos
sbb
testb
add
push
push
mov
xchg
das
pop
call
test
mov
jns
lock
arpl
sbb
inc
push
mov
add
push
nop
seto
imul
jbe
int3
insl
es
imulb
inc
enter
jne
xchg
mov
inc
addl
mov
enter
xchg
inc
in
scas
inc
jl
push
ss
int
int3
pusha
dec
popa
add
pushf
pop
movsb
lods
or
cwtl
scas
mov
out
in
ja
push
mov
and
repz
cmp
adcb
add
sbb
and
pop
ljmp
add
add
add
add
adc
push
out
inc
xchg
adc
add
mov
adc
or
dec
inc
mov
adc
sbb
mov
testb
inc
mov
ljmp
and
pushl
jbe
jmp
or
in
ficompl
leave
ss
inc
xchg
ds
roll
dec
add
lcall
adc
fs
pushf
fwait
int
imul
sahf
sbb
insb
out
repz
aam
mov
mov
data16
test
pop
movsb
and
jl
ds
push
push
rolb
andl
movsl
push
jnp
ds
jle
sub
test
pusha
xchg
pop
xchg
mov
addr16
movsb
push
insb
imul
sti
lods
push
hlt
mov
or
iret
jecxz
js
cmp
ja
mov
pop
or
inc
or
rorl
loope
xchg
mov
sub
in
mov
mov
out
cwtl
sub
adc
cmp
dec
daa
mov
sbb
push
xlat
outsl
pop
sbb
outsb
js
movsl
sub
pop
lret
push
inc
lods
mov
pop
cmp
insb
shrb
xor
push
std
push
xchg
ret
and
call
lea
sub
jno
or
xor
addl
or
mov
inc
aas
adc
out
loopne
or
popa
inc
insb
push
in
xchg
dec
call
add
jl
xchg
mov
push
jne
and
adc
andl
sub
dec
cmp
adc
and
add
sbb
loope
sub
inc
test
xor
dec
addw
mov
ja
and
inc
pop
and
inc
xchg
ja
push
ljmp
sub
clc
mov
jae
pop
add
mov
cwtl
cmove
dec
jne
test
xor
rolb
ja
movsb
add
sbb
sbb
inc
test
cmp
inc
sbb
mov
pop
and
jl
int
out
enter
add
mov
rorb
mov
push
or
sbb
mov
call
jnp
xchg
xchg
in
push
jl
nop
jl
push
add
out
xor
inc
pop
xor
dec
sbb
push
out
jns
add
inc
pop
mov
cmpsl
stos
xchg
daa
in
adc
add
push
jae
sbb
lea
adc
or
and
jbe
and
pop
adc
jge
ret
fwait
mov
fwait
and
pop
repnz
out
cmp
pop
pusha
and
inc
mov
push
sub
push
or
je
es
insb
adc
inc
jecxz
mov
sahf
sub
fadds
push
pop
sarl
mov
or
xor
jns
mov
cltd
loopne
inc
add
pop
push
pop
clc
test
sbb
lods
inc
add
into
repz
daa
pop
inc
dec
nop
jnp
dec
jo
shrb
pop
cwtl
fwait
imul
push
dec
orb
jbe
dec
fwait
nop
iret
test
xchg
xchg
xor
xchg
insb
fs
cmpsl
in
hlt
lods
dec
jecxz
cmpsl
mov
xchg
loopne
mov
jb
sub
insb
xchg
xchg
out
xchg
insl
and
xor
loopne
loope
imul
cmp
sbb
xor
pushf
adc
push
push
pop
sbb
xor
xorb
jo
xor
xor
jl
add
and
fadds
push
ja
sahf
mov
pop
int
pcmpgtb
ss
push
sbb
pop
bnd
dec
cltd
int3
in
push
sub
dec
fidivrl
in
popf
out
in
cmp
gs
cmp
cltd
sbb
fists
jle
mov
es
fcmovu
and
imul
test
enter
inc
sub
andb
jb
cmp
test
pop
enter
lods
cmp
pusha
dec
shll
mov
push
pop
repnz
mov
lock
pop
xchg
clc
xor
sbb
push
dec
cmp
sbb
xchg
and
dec
ds
cs
arpl
cld
nop
fcoms
push
sbb
fcmovbe
pop
enter
pop
inc
rorl
push
adc
add
dec
aam
xor
hlt
aaa
dec
jo
fmuls
add
xlat
and
nop
pop
adc
js
mov
sarb
mov
leave
sub
inc
je
or
jbe
fdivrs
xchg
push
repnz
cmp
mov
inc
mov
popf
or
popa
cmc
mov
adc
mov
inc
fistps
and
dec
mov
inc
dec
test
mov
call
dec
dec
mov
dec
or
iret
lock
xchg
loopne
sahf
mov
xor
or
dec
jns
into
sarl
xor
or
or
test
mov
jno
repz
add
and
and
in
dec
inc
mov
test
rcr
and
dec
inc
adc
sbb
cwtl
hlt
inc
loopne
push
lods
jmp
dec
orb
call
enter
pop
push
jo
xor
xorb
rcl
push
rcrb
stos
flds
xchg
xor
in
cmovne
add
xor
xchg
or
clc
mov
cmp
push
pop
push
inc
repnz
popa
push
dec
inc
inc
xor
enter
adc
push
jbe
in
dec
adc
push
push
inc
sahf
push
mov
das
mov
loope
repz
cmp
add
add
iret
lds
mov
rol
or
jo
in
adc
repnz
or
and
xchg
add
pop
lahf
sub
mov
dec
lock
sbb
push
or
cmp
js
pop
sub
cmp
jns
test
enter
or
sub
dec
or
test
sub
inc
sub
loope
cmpsb
or
repz
mov
dec
in
mov
nopl
ss
pop
mov
cmp
push
pop
jo
adc
testl
adc
and
pop
outsb
lock
iret
stos
push
mov
aaa
in
roll
hlt
inc
dec
rolb
push
mov
dec
or
sbb
pop
sbb
push
mov
xchg
es
jae
mov
inc
cmp
cs
sbbl
push
jnp
test
or
mov
dec
pop
push
andps
or
mov
popa
nop
addr16
and
stos
adc
or
jg
cld
fldl
mov
xor
bound
in
shl
into
movsb
incb
or
jne
inc
dec
es
inc
jmp
sbb
or
fdivrp
notl
popa
push
fcoms
mov
daa
mov
sub
cmp
mov
inc
aaa
daa
sbb
xorb
pop
inc
adc
cmpw
inc
in
aam
jne
or
cmp
iret
mov
nop
mov
sbb
xor
push
rcl
or
cld
imul
ffreep
aas
insl
pop
loopne
subl
inc
das
cmc
xchg
xchg
mov
repnz
js
and
cmp
sbb
ret
or
sbb
sub
xor
mov
dec
lret
movsb
adcl
scas
mov
dec
cs
in
sti
cmp
sub
call
adc
out
stc
pop
dec
aaa
imul
xlat
pop
xor
sbb
pop
repz
test
and
pop
clc
dec
jne
std
and
pop
jp
mov
adc
or
or
mov
inc
pop
lods
sub
dec
or
lret
loope
sbb
or
adcb
inc
hlt
popa
insl
add
ss
test
outsl
xor
xchg
cmp
adc
roll
es
test
and
adcl
out
dec
add
aas
popa
mov
gs
cmp
sarl
cs
sub
nop
mov
xchg
mov
add
xchg
mov
les
cltd
jae
test
mov
mov
or
stos
xchg
mov
nop
inc
add
notb
lret
jnp
sahf
orb
adc
add
xchg
out
pop
or
adc
jne
xchg
lcall
les
cmp
mov
adc
pop
in
in
add
pop
sar
and
mov
jl
adc
mov
mov
mov
adc
pop
inc
and
add
jb
mov
add
inc
movsb
ss
out
nop
cmp
sbb
lock
inc
jp
add
or
pushf
adc
pop
test
inc
mov
loope
jmp
sbb
imul
sbb
mov
or
push
test
jnp
inc
adc
xor
and
jmp
pop
push
or
loopne
or
mov
mov
add
dec
std
cmc
or
ljmp
enter
aaa
adc
cmp
xor
push
push
sub
pop
ss
cmove
push
cli
and
mov
mov
xorl
es
stc
and
mov
inc
cmp
cmpsl
xor
lods
notl
sbb
and
and
jmp
sbb
cmpb
outsl
xor
fldt
sbbb
mov
in
inc
sub
push
daa
std
fwait
xchg
jmp
sub
std
fistps
push
cmp
je
mov
outsl
and
adc
inc
dec
fists
cwtl
or
push
inc
or
or
dec
loope
andb
inc
cltd
or
add
lea
xor
pop
xchg
lcall
stc
or
inc
inc
in
mov
mov
add
jge
and
stos
mov
sarb
aaa
pop
adc
jae
pop
or
daa
pop
push
orl
mov
pop
jmp
sub
int3
and
into
cmc
int3
mov
sbb
rolb
sti
xchg
jg
orb
xor
xchg
push
and
sbb
sbb
je
lret
stc
push
mov
xor
das
xchg
test
in
mov
data16
dec
shll
xlat
and
fucomip
or
pop
rcrl
sti
push
pop
clc
sbb
add
or
mov
xor
sub
inc
sub
imul
je
adc
pop
or
scas
test
pop
or
in
popf
or
ret
mov
push
mov
rcrl
jp
pop
mov
insl
outsl
sbb
lock
in
pop
inc
xor
les
push
mov
mov
inc
imul
and
movsb
fcompl
popa
cmp
add
inc
mov
pop
and
mov
scas
xchg
push
mov
aaa
sub
push
dec
push
dec
fucom
rcrl
loopne
add
scas
push
aas
les
or
sbb
or
cmp
in
popf
dec
inc
lret
outsl
in
push
aad
sub
jbe
jmp
dec
dec
pushl
mov
add
pop
dec
and
mov
cmp
ss
sbb
sti
call
jle
dec
adc
mov
add
adc
sub
iret
je
je
dec
adcb
fldl
inc
test
push
sub
add
dec
data16
loopne
push
aaa
and
mov
dec
adc
aad
pop
adc
popa
dec
lock
dec
in
imul
nop
popa
mov
lock
std
sub
ja
add
iret
repz
dec
imul
push
dec
and
insl
mov
shll
add
xchg
sub
mov
dec
push
inc
fisubrl
sub
or
std
es
cmpl
sub
xchg
pop
add
loopne
mov
call
push
cltd
sbb
mov
sub
xchg
shlb
push
or
mov
rol
mov
inc
daa
sbb
inc
pop
or
mov
clc
mov
pop
mov
inc
sub
sbb
mov
lcall
imul
sub
gs
xor
or
cmpsb
xchg
cmp
push
icebp
xor
aas
aad
sub
movsb
aad
and
les
rcrl
xchg
fcompl
jnp
push
paddq
je
push
xchg
jge
scas
mov
adc
rorb
sahf
cmp
xchg
cmpsb
push
pop
dec
sub
aas
or
pop
adc
xor
cmp
jno
cmp
push
xor
pusha
imulb
jo
add
and
push
imul
pusha
or
mov
daa
xor
xor
sub
push
xor
in
mov
sub
jmp
lea
jno
and
cmp
jmp
rcrl
pushf
xor
cmc
xchg
mov
push
pop
mov
lahf
loope
cmc
or
bound
cmp
mov
mov
jns
xor
and
and
pop
cltd
inc
inc
fsts
add
mov
rcrb
push
inc
and
pusha
and
xor
jb
xor
roll
xchg
push
das
or
mov
pcmpgtw
adc
pop
adc
ss
stos
adc
sub
dec
repnz
adc
adc
imul
inc
pop
in
mov
fwait
mov
mov
jp
lcall
jmp
lods
rcrb
stos
and
sub
pop
cwtl
pushf
nop
clc
add
or
pop
adc
cmovbe
jl
adc
lahf
push
testl
inc
je
fucom
mov
lret
dec
or
add
sahf
stc
inc
sub
xor
or
leave
dec
xor
inc
sub
pop
and
push
sub
iret
xlat
andl
out
mov
mov
addb
clts
push
pop
mov
mov
add
aaa
inc
push
dec
loopne
dec
mov
xchg
pop
sbb
push
lret
aaa
adc
cmpsl
adc
add
and
mov
lahf
mov
inc
ss
stc
adc
add
push
out
adc
je
call
mov
dec
in
sub
loopne
in
imul
test
in
leave
orl
mov
push
les
push
push
inc
sbbl
pop
testb
jg
xorl
outsb
sbb
cwtl
lea
lds
mov
jmp
fmull
or
inc
les
mov
pop
xchg
scas
cmpb
gs
stos
and
inc
pop
push
xor
icebp
or
pop
dec
pop
in
outsl
adc
fcmovne
add
pop
and
pop
dec
inc
mov
or
sub
in
and
dec
xchg
or
shl
pusha
push
dec
xor
cmpsl
out
mov
or
jecxz
jmp
add
es
add
jge
mov
pop
mov
call
add
insl
aas
fcompl
aas
xchg
or
enter
cmp
dec
xchg
mov
aaa
dec
loopne
push
mov
or
jge
mov
push
xor
and
push
mov
xor
jbe
inc
sbb
fwait
jge
pop
and
clc
scas
xchg
scas
movsl
pop
lock
adc
cmpsb
shrb
lock
int
frstor
outsl
sbb
testb
add
das
or
aam
xchg
popf
outsl
fidivl
icebp
in
add
and
mov
gs
mov
or
sbb
dec
outsl
sbb
cmp
ret
adc
jp
add
push
inc
adc
mov
dec
sub
lods
xor
or
xor
gs
ss
add
xchg
lret
sbb
ds
dec
call
sbb
cmc
loopne
mov
cwtl
aaa
jns
incl
mov
clc
test
fmuls
inc
leave
cmp
in
ds
jmp
sub
or
lret
nop
adcl
jne
cwtl
lods
rol
mov
mov
nop
rol
mov
popf
jmp
push
push
mov
and
cmovno
inc
dec
outsl
or
push
sub
and
dec
add
cmp
inc
mov
or
push
imul
insb
xchg
lret
inc
enter
pop
imul
sbb
shll
movsl
mov
int3
neg
inc
sbb
mov
clc
lea
or
push
or
mov
dec
sbb
or
bt
clc
arpl
cltd
jmp
pop
sub
cmpl
jae
add
push
test
popf
adc
pop
pop
add
hlt
mov
or
loopne
add
mov
push
cmp
mov
push
mov
int
sub
jo
sbb
pop
adc
clc
push
jge
or
mov
cmc
pop
ror
sbb
xchg
test
je
nop
mov
sbb
jns
roll
xor
cwtl
scas
pop
add
aam
pop
sbb
sbb
xor
call
adc
cmp
mov
or
push
testb
lods
mov
or
popl
imul
inc
push
lods
pusha
pop
inc
lock
imul
in
mov
sbb
add
xor
inc
add
insl
or
mov
sub
push
xor
test
mov
dec
test
loopne
cmp
mov
sub
jl
add
sub
dec
push
cs
xor
inc
mov
or
jno
pop
jno
or
xor
shlb
loope
iret
in
push
xchg
adc
jns
andb
fwait
test
rol
and
inc
ffree
inc
out
cmp
add
add
imul
pop
lea
xor
sub
fs
mov
mov
scas
add
shrl
mov
pop
into
add
and
jge
leave
inc
push
or
mov
inc
test
sbb
lods
mov
pop
adc
push
push
fsts
fdivs
inc
sbb
lock
add
mov
movsl
add
je
cs
popa
cld
xor
add
push
or
inc
xchg
push
and
inc
jne
cmpsb
movsl
int
jne
pop
pop
push
neg
inc
mov
and
sbb
leave
sbb
cmp
rclb
xchg
lret
mov
and
mov
xor
xor
dec
les
push
addr16
into
hlt
add
push
or
xor
loop
cmp
pop
push
and
add
stos
loopne
mov
push
xchg
sub
insb
xchg
mov
in
xchg
stos
dec
pop
inc
add
cmp
and
loopne
fwait
insl
in
jmp
or
and
or
add
outsl
jmp
pop
in
lret
xchg
jl
xchg
das
pop
test
in
xchg
pusha
jo
push
adc
xchg
xchg
add
lds
xchg
mov
pop
adc
std
gs
outsl
cmp
insb
jo
loope
adc
or
mov
lods
xor
push
jnp
dec
js
stos
shlb
sarb
add
in
das
add
adc
pop
in
push
adcb
xor
daa
push
test
jo
rcll
into
sbb
jns
and
add
ds
or
add
jmp
mov
mov
pop
xorb
push
add
xchg
sbb
sbb
push
nop
arpl
cmc
sbb
pop
fs
insb
and
inc
add
add
dec
pop
xchg
push
in
push
bound
insb
addr16
cmp
insb
outsl
cmp
or
scas
movsb
lods
cwtl
sti
and
or
sbb
popa
and
xorb
lcall
add
leave
add
inc
xor
push
pop
dec
pushf
test
ret
push
sti
jg
mov
xor
mov
xchg
out
insl
cmp
adc
and
and
cmp
outsl
and
sbb
ret
push
inc
mov
inc
rorb
ja
add
jns
adc
lret
sarb
dec
lods
shrb
adc
dec
inc
sub
jb
aaa
inc
shrb
out
and
inc
jo
pop
xchg
pop
inc
imul
push
or
arpl
add
cmpsb
mov
orl
sub
in
push
jp
es
ja
push
jmp
cmp
xor
test
mov
push
movsb
sub
js
inc
mov
add
pusha
push
dec
test
jmp
cmc
xchg
cmpsl
shr
sbb
push
mov
pusha
push
cmp
sbb
pop
faddl
stos
adc
adc
and
sbb
test
outsb
mov
mov
lret
sbb
sub
or
cmp
outsl
cmpsb
pop
cs
add
sbbb
add
and
add
dec
cs
enter
imul
and
sub
loopne
ja
daa
add
push
imul
inc
jns
call
or
ret
ds
add
and
subl
and
sub
daa
aaa
pop
add
movsb
scas
add
mov
inc
sbb
xchg
cmpsl
push
add
add
pushf
data16
xor
cmp
jne
xchg
xor
inc
rclb
mov
mov
imul
pusha
aad
and
jno
fiaddl
bound
or
xor
mov
sbb
xor
sbb
xchg
sbb
jl
outsl
mov
clc
hlt
or
sub
add
and
and
xchg
xorb
nop
call
lea
mov
push
sub
test
sub
call
sub
insb
fsubrs
xchg
or
pushf
or
mov
push
xchg
sahf
push
sbb
addr16
xor
je
jl
std
jmp
cmp
pop
push
sbbb
sbb
sbb
mov
insl
ja
and
test
sub
stos
mov
push
enter
stos
insl
inc
ret
add
icebp
xor
aaa
xor
pop
inc
cltd
or
push
je
aaa
mov
daa
roll
mov
stc
sbb
push
or
xlat
add
cli
adc
clc
inc
jg
in
mov
fimuls
add
add
or
xchg
sub
add
test
bound
das
fninit
addr16
add
mov
cld
inc
lahf
aam
add
jne
xor
dec
cld
xchg
aam
jns
add
adc
cmp
sub
xor
data16
lea
pop
dec
xchg
andl
pop
das
inc
dec
dec
push
in
cmp
inc
mov
ficoml
dec
or
mov
or
jb
mov
add
jb
jb
sub
xor
addl
sbb
sub
xor
lret
cmp
loopne
sub
add
sub
pop
jl
push
adc
ja
aam
cwtl
sub
add
nop
imul
test
enter
out
ja
dec
push
stc
pop
call
inc
inc
mov
js
call
and
jmp
fcomp
call
or
call
lock
or
jo
shlb
das
int
paddq
mov
cmp
jae
pusha
adc
lods
in
jb
cmp
popa
in
and
push
in
and
mov
cmpsb
xchg
call
or
inc
cmp
bound
in
inc
pusha
shrl
cmp
iret
and
and
add
push
cmp
cmpsl
lret
fwait
sarb
adc
adc
fistl
add
insl
pusha
mov
xchg
sbb
add
push
adc
or
or
repnz
hlt
mull
stos
fidivrl
mov
inc
adc
inc
xlat
sbbb
push
mov
mov
test
sub
sub
rcl
xchg
lods
hlt
pop
test
popf
xchg
outsl
es
icebp
stos
sub
aad
gs
inc
inc
push
sbb
pop
ds
push
dec
movsb
test
insl
cmp
stos
sub
inc
rcll
pop
jo
dec
mov
inc
push
jno
test
inc
dec
lret
ficomps
and
xor
and
pop
inc
daa
pop
clc
int
data16
or
pop
orb
mov
movsb
sub
sbb
mov
neg
xchg
movsb
neg
in
lods
dec
or
cmp
and
cmc
je
sbb
mov
lods
add
pop
jl
cmpsl
or
push
jo
pop
pusha
xlat
push
js
rorb
xchg
adc
in
xor
lock
sbb
rorb
adc
addl
and
jmp
xor
les
insb
pop
ss
and
adc
cmp
popa
xor
sbbl
inc
dec
or
push
jbe
add
icebp
add
out
add
orb
adc
movsb
sbbl
call
sbb
or
add
pop
jno
je
sbb
push
cmc
lds
ds
pop
sub
xchg
arpl
pusha
pop
ret
mov
and
mov
adc
dec
daa
gs
xor
adc
mov
imul
push
cmp
xor
test
roll
pop
dec
add
mov
jp
roll
ss
adc
and
shrd
jne
shrb
dec
add
hlt
or
insl
sub
mov
imul
mov
jno
pusha
xchg
outsl
sbb
lahf
inc
in
test
cmp
es
or
movsl
leave
xchg
daa
pop
xor
test
roll
cmp
test
or
jne
sub
jl
jno
sub
dec
xchg
daa
sbb
in
cmp
fistps
inc
sbb
mov
and
dec
in
xor
stos
subl
mov
xor
sbb
mov
mov
sub
add
sbb
call
push
outsl
or
insl
jecxz
mov
mov
mov
leave
inc
mov
mov
insl
sub
adc
adc
pop
ror
or
xor
dec
jno
push
inc
bound
xor
xchg
mov
mov
mov
enter
xchg
add
fadd
push
push
scas
inc
push
push
movsl
xor
leave
jo
push
ret
lods
jge
lret
push
hlt
jns
add
jo
gs
cmc
cmp
je
lret
xlat
sti
movsl
int
sbb
jmp
add
daa
adc
xlat
popf
cltd
pop
aad
cmc
dec
scas
addr16
adc
fcoml
hlt
pop
pop
or
adc
xchg
pop
enter
push
xor
adc
push
xor
push
push
pusha
mov
and
sbb
add
popa
dec
pop
mov
imul
mov
in
dec
repnz
inc
enter
outsl
xchg
jno
arpl
inc
mov
movsb
jb
imul
lret
dec
push
sbb
xchg
loope
in
mov
pop
adc
push
dec
sbb
and
cmc
lods
jns
fnstcw
lea
sub
enter
mov
lret
sbb
and
aad
loopne
outsl
addr16
xchg
je
out
sbb
sub
jge
je
inc
inc
sbbl
or
arpl
sbb
push
ret
lds
cmc
add
adc
push
ja
pop
push
mov
js
jg
adc
and
ret
gs
sbb
sbb
dec
stos
adcl
dec
cmpsl
push
and
roll
and
or
push
fmull
inc
push
insl
sbb
fwait
daa
xor
xor
lods
xchg
add
sub
adc
mov
loope
add
dec
test
test
call
repnz
add
cmp
mov
mov
pusha
je
xor
movsb
push
popa
push
leave
adc
sbb
je
addb
pop
cmpsl
jo
sub
outsl
popf
jmp
pushl
add
out
lahf
cs
xchg
pop
inc
adc
xor
mov
popa
imul
pop
push
jno
scas
sub
cmpsl
daa
adc
and
test
inc
rcll
pushw
push
and
std
shlb
movsb
pop
mov
inc
sbb
xchg
push
xchg
xor
std
push
inc
push
xor
add
or
add
push
mov
sbb
dec
adc
test
aad
sti
jl
push
and
mov
aas
xor
test
and
fstps
add
fadd
and
fildll
outsl
mov
or
sbb
or
notb
imul
enter
mov
and
fistpl
jbe
aaa
push
cmp
cmp
inc
ds
sub
call
sub
lods
leave
pushf
test
xor
adc
cmp
inc
test
inc
push
in
sub
mov
mov
stos
dec
xchg
mov
xchg
add
xchg
outsb
movsl
cmpsl
jge
leave
push
pop
pop
imulb
inc
adc
test
ljmp
in
aaa
dec
sbb
andl
cmpsb
in
sub
jne
jg
rolb
iret
add
cmpsl
stc
cmp
adc
hlt
adc
in
sbb
mov
notl
sub
jmp
mov
push
ds
or
dec
in
imul
je
test
dec
fdivp
push
mov
lock
pop
xor
or
mov
loop
pop
js
sub
mov
sbb
xchg
inc
or
jmp
ret
jp
arpl
or
mov
mov
popa
and
fwait
outsl
xchg
cmpl
jnp
outsl
mov
xchg
out
jecxz
repnz
xchg
mov
dec
mov
lea
fs
xchg
push
es
test
mov
or
push
add
outsl
fnsave
add
or
jge
push
and
and
add
in
lea
mov
dec
ja
pop
or
sub
arpl
aas
cmp
or
int
or
jp
or
dec
cmpsb
push
icebp
and
inc
adc
xor
sbb
add
test
add
xlat
mov
mov
in
push
sbbl
dec
push
and
arpl
dec
popa
leave
icebp
cwtl
fiaddl
lahf
jle
mov
pop
into
mov
mov
push
out
test
cwtl
jae
sahf
add
shlb
jmp
jo
je
mov
outsb
arpl
aas
jmp
jecxz
sbbl
sub
filds
dec
dec
inc
dec
push
iret
imul
cs
and
ret
dec
jbe
sbb
popa
adc
inc
inc
loopne
shrb
sbb
inc
xchg
inc
push
les
mov
adc
inc
mov
push
movsl
ja
lods
mov
adc
hlt
mov
adc
inc
pop
cltd
xchg
clc
scas
adc
push
cmp
and
nop
push
cmp
pusha
sbb
xor
stos
popa
inc
notl
jmp
lock
loop
and
andl
decl
sbb
rcll
jecxz
or
push
outsb
jmp
xchg
mov
push
inc
popf
sbb
sbb
pop
add
in
and
jmp
ret
xor
xchg
cwtd
add
jne
mov
pusha
push
dec
mov
push
fsubs
jbe,pn
addr16
movsb
adc
int3
inc
aas
popa
enter
loop
inc
mov
and
shll
mov
es
inc
sbb
aaa
xorl
fs
dec
pop
jne
aam
popa
out
inc
sbbl
push
mov
lods
dec
dec
pop
dec
mov
xor
add
mov
adc
pop
mov
and
inc
outsl
sbb
mov
pusha
push
xor
inc
and
jge
das
push
mov
in
fistps
pop
cmp
jp
xchg
mov
xlat
incl
repnz
daa
arpl
imul
inc
jae
push
xlat
xor
fs
leave
dec
mov
pop
dec
jo
dec
sbb
fwait
and
rorl
das
jge
dec
cmpsb
icebp
dec
jb
jmp
daa
cmc
mov
lods
iret
aaa
aas
add
mov
add
add
mov
das
and
xchg
fdivl
mov
js
das
pop
sbb
mov
and
js
cld
add
les
mov
or
imul
dec
pop
lods
stos
and
push
cmp
repz
and
sub
arpl
adc
arpl
sub
jecxz
jbe
xlat
je
jne
jge
ret
lahf
test
repz
idivl
orl
in
mov
addb
fmull
adc
das
jbe
dec
xchg
pop
shlb
push
cmc
mov
adc
fwait
icebp
pop
shlb
mov
pop
push
cwtl
pop
in
pop
les
adc
jl
pop
jno
adc
data16
mov
in
arpl
and
push
pop
push
pop
mov
andl
adc
or
pop
xchg
jno
push
push
pop
movb
or
fcomps
testl
pop
sbb
lods
pop
pop
ret
sbb
sub
mov
add
push
xor
and
add
lds
adc
outsl
test
inc
jo
adc
stos
lcall
cwtl
dec
jecxz
cmp
xor
lods
or
ret
sbb
mov
pop
dec
sub
mov
or
add
jo
xor
push
repz
sbb
pop
fmuls
lock
xor
inc
pop
test
add
rcrb
mov
push
adc
enter
aaa
jo
fcoml
mov
cwtl
dec
jne
inc
adcl
ror
push
rorb
mov
nop
movl
and
pop
xchg
mov
movsb
mov
aaa
mov
mov
and
and
test
push
and
cmp
test
xchg
inc
cmp
cmp
xchg
xor
push
mov
xlat
lods
fnsave
add
add
subps
imul
and
dec
mov
aad
call
push
dec
inc
mov
sub
in
testb
jno
lds
sbb
loop
xlat
ljmp
cli
addr16
lock
outsl
jne
mov
je
rorl
inc
push
or
mov
and
cmp
fs
orl
fsubrs
and
dec
aad
stos
pop
push
push
pop
cmp
stos
test
arpl
add
cmp
call
add
nop
clc
or
cmpsb
mov
jae
xchg
es
mov
js
or
cmp
outsl
add
mov
add
ret
test
dec
sar
mov
add
jne
xor
cmp
lahf
jo
push
sbb
pop
pop
add
nop
mov
and
aas
lea
jns,pt
add
pop
adc
cmp
xor
in
icebp
mov
adc
pop
testb
subl
adc
push
push
xor
fwait
add
and
add
popa
cmp
hlt
sbb
push
dec
mov
flds
mov
push
repnz
bound
sub
push
movsl
lahf
cmp
jns
out
push
add
imul
addr16
sub
and
aad
add
mov
into
mov
adc
pop
pop
sub
xor
dec
addl
leave
adc
pushf
or
js
in
stos
les
mov
push
pushl
nop
sbb
mov
inc
inc
jo
push
fdivrs
call
sub
adc
adc
mov
out
lock
dec
or
aad
loopne
jo
ja
test
and
add
jns
jns
pushf
inc
nop
pop
popa
xor
and
pop
rcl
mov
sbb
out
add
sub
or
lret
and
je
rolb
push
xor
adc
add
cmpsl
or
sub
mov
lds
shll
push
scas
iret
cmp
sbb
je
lods
xchg
or
gs
lds
or
orl
rol
mov
and
scas
clc
insb
adcb
xchg
sbb
adc
push
push
mulb
cmp
push
jecxz
rclb
adc
inc
or
mov
inc
jnp
pusha
roll
adc
fdiv
cltd
dec
rorl
daa
cmovs
lods
shlb
popl
outsb
imul
push
sub
pusha
add
jmp
add
arpl
add
out
mov
aaa
in
fisttpl
subl
add
push
popa
push
leave
lahf
inc
lahf
test
mov
leave
mov
and
push
cmp
movsb
jne
or
orl
jae
sbb
clc
add
push
out
mov
ss
neg
sub
insl
movsb
sub
xlat
cwtl
and
in
clc
mov
inc
orb
out
dec
mov
sahf
stos
push
cs
in
int3
cmc
sbb
xor
or
sub
inc
add
push
add
rcr
and
sbb
pop
pop
ja
cmp
push
sbb
inc
adc
pop
mov
leave
pop
add
mov
add
movsl
mov
or
nop
arpl
call
cli
add
ss
mov
add
adc
cmp
xor
pop
test
nop
dec
pop
jmp
in
xorb
inc
dec
or
pushf
pop
or
daa
shll
sbb
xchg
cmc
dec
movl
lock
mov
clc
xchg
add
dec
data16
cmpsl
int
imul
ret
andb
leave
sub
mov
jne
es
push
xor
lock
aad
push
lock
cmpsl
add
popf
adc
jge
je
and
mov
pop
loop
daa
pushf
xor
test
adc
lds
je
popa
push
xchg
inc
andb
cltd
adc
mov
adc
lcall
cs
or
in
in
call
enter
scas
or
shlb
lea
subb
lret
dec
sub
stos
sub
jge
jo
imul
pop
xlat
xor
pop
add
cmpsl
test
imul
pop
or
mov
mov
inc
lds
in
mov
push
and
sahf
aam
xchg
stos
std
fsts
inc
xchg
inc
pop
inc
fmuls
lock
incl
es
fdivs
sub
xor
push
lar
andb
int
rolb
jae
mov
mov
addr16
push
popa
adc
or
sub
add
or
or
pop
in
add
cmp
out
xchg
jns
jl
or
adc
shll
pop
inc
mov
popf
aad
mov
pop
daa
mov
mov
pop
and
push
xchg
pushf
data16
fwait
iret
in
int3
and
rorl
daa
cmpsb
cmp
push
pop
stos
loop
push
daa
out
and
add
daa
mov
mov
push
aaa
in
test
add
cmp
push
and
adc
out
repnz
inc
cmpsb
push
xchg
mov
or
pusha
push
or
fwait
lock
pop
push
lret
jne
dec
sub
ja
loope
add
sbb
es
inc
jnp
insl
adc
mov
imul
lds
arpl
hlt
movsb
jo
or
fnsave
fistps
cmp
mov
test
jo
je
cmp
jae
sub
fcoml
pop
mov
add
inc
or
jae
add
cltd
ficoms
loope
iret
icebp
ss
mov
aaa
inc
adc
into
add
add
lret
mov
inc
sbbb
xchg
xchg
xor
sbbl
push
pushf
cmp
stc
jmp
cmp
sub
dec
outsl
dec
xchg
mov
add
andl
lods
pop
test
push
fwait
pop
in
jecxz
mov
cmp
sbb
cli
and
cmp
orl
inc
test
enter
sbb
adc
cltd
sub
inc
adc
in
add
subb
sub
movsl
fsubr
sbb
lds
roll
cmp
sti
sbb
les
sbb
and
and
pop
push
push
pop
add
aaa
clc
inc
loope
inc
sbb
or
je,pn
cmp
pop
mov
jb
addb
push
daa
jmp
je
inc
jmp
in
cmp
or
xchg
push
push
hlt
pop
andl
inc
test
inc
stos
nop
add
or
adc
cmpsl
push
sub
dec
jge
dec
aas
or
fwait
das
mov
mov
addl
loope
sub
mov
jecxz
mov
xor
sub
sub
push
add
les
add
jb
xchg
adc
dec
add
or
mov
lea
add
rol
lret
shrl
test
loope
lret
enter
pop
pushf
pop
add
cwtl
cwtl
out
and
addr16
nop
scas
push
mov
pop
adc
or
les
test
jmp
imul
xor
mov
inc
and
pop
lea
shrb
mov
add
pop
push
adc
xchg
or
frstor
aam
and
xchg
inc
push
outsl
scas
inc
aam
add
mov
pop
pushf
pusha
je
pop
pop
jb
add
dec
adcl
sarl
pop
loopne
dec
pusha
and
xchg
jmp
shlb
sbb
push
inc
mov
push
inc
add
mov
push
adc
mov
test
pop
cwtl
sub
imul
hlt
in
ds
int3
sub
andb
popf
fidivs
adc
mov
sbb
push
test
sahf
and
or
daa
mov
and
js
cmp
cmp
push
mov
add
rorb
cmpsb
adc
xchg
mov
inc
sbb
xchg
aad
jle
sbb
sbb
fs
js
push
lea
dec
pop
and
cmp
test
mov
xor
cmp
xor
movsb
test
loopne
inc
test
out
fistpl
adc
rorb
inc
add
xchg
xor
sbbl
push
pop
push
aam
fwait
inc
push
mov
sbbb
and
sub
push
add
pop
rcll
mov
rcll
xor
rclb
out
jecxz
frstor
inc
bound
icebp
insl
loop
out
imul
xor
es
dec
xor
cmpsl
ret
adc
inc
pop
pop
jl
das
inc
fbstp
dec
cmp
push
add
lahf
sahf
gs
out
sbb
mov
loop
or
in
sbb
nop
mov
xchg
or
add
cmp
movl
cmc
ja
js
pop
fisttpl
and
cmp
mov
sbb
sbb
fsts
cld
or
or
push
repnz
and
pusha
pop
in
mov
movsl
pusha
xchg
pop
sbb
daa
pop
imul
and
push
cmp
imul
in
push
dec
push
gs
out
aam
das
mov
ret
shrl
inc
scas
rorb
sbb
sbb
loope
mov
push
pop
mov
xor
mov
sbb
imul
mov
xchg
dec
mov
xor
sbb
xor
imulb
jbe
mov
ret
inc
pop
and
add
adc
adc
xchg
and
jle
lods
adc
aad
jns
outsl
mov
xchg
fnsave
cld
fs
adc
pop
ret
push
cmpsl
daa
loopne
mov
sbb
shlb
rol
subb
cwtl
jne
daa
jecxz
or
inc
pusha
shl
add
aam
sub
add
xor
add
push
inc
imul
hlt
push
sbb
test
or
sbb
adc
sbb
and
mov
loopew
cwtl
push
sub
lcall
sub
sub
xlat
sub
push
cmpsb
sub
sbb
aas
add
add
pop
sbb
lea
add
data16
arpl
xchg
repz
enter
lods
mov
dec
add
adc
mov
pop
aad
xchg
lea
and
movsb
ss
loopne
xor
mov
test
xchg
in
enter
xor
xor
push
jne
and
rclb
sbb
push
movsb
adc
jo
lret
xor
and
push
hlt
pusha
lock
addr16
jns
ja
inc
lock
jo
xchg
mov
xlat
adc
and
jne
sbb
mov
inc
insl
add
sbb
insb
pop
insb
push
test
adc
scas
and
xor
and
imul
xchg
out
inc
xchg
xor
ljmp
adc
lods
pushw
mov
sbb
aas
xchg
push
mov
push
jo
add
and
add
push
fidivs
loopne
pop
pushf
bound
push
adc
pop
call
ffree
jbe
xlat
mov
mov
jmp
and
popa
xor
or
adc
pop
fbld
scas
mov
pusha
xlat
adc
push
repz
sub
arpl
fwait
push
mov
xchg
stc
cltd
hlt
shll
push
lahf
mov
or
in
lock
xchg
shl
lock
lock
pop
test
in
hlt
shrl
xchg
jo
inc
jecxz
rcrl
mov
jne
jle
in
xor
mov
subl
add
push
divl
das
inc
jecxz
test
dec
cltd
cmp
inc
add
aam
inc
add
ficomps
dec
popl
lock
rolb
inc
adc
mov
xchg
add
out
mov
inc
and
add
scas
ja
lock
mov
xor
decl
xlat
cmp
fdivs
add
test
push
add
aaa
dec
and
inc
jb
push
pop
ret
sub
inc
jl
lock
mov
lock
je
sub
sub
add
and
and
mov
jns
mov
xlat
jne
nop
xchg
add
mov
aam
mov
xlat
sbb
mov
jecxz
sbb
in
orb
adc
dec
dec
xor
insl
bound
jl
xor
dec
imul
pop
cld
mov
and
nop
add
and
shlb
adc
and
fstpl
xchg
sub
pop
aas
add
pop
and
dec
and
leave
inc
dec
dec
xor
rorl
pop
ficompl
inc
pop
subl
sarb
aam
xchg
leave
inc
jb
push
push
push
add
popf
push
pop
in
je
dec
pop
or
lcall
jo
sub
and
and
or
test
inc
addl
dec
ret
sbb
jne
inc
pusha
xchg
mov
lods
popf
fsubrs
imul
cmpsb
dec
inc
push
sub
ficomps
adc
sbb
les
push
popl
loop
inc
inc
mov
les
mov
clc
out
jl
or
jle
jne
cmpsb
fiaddl
mov
jo
cmp
std
inc
std
adc
inc
sub
inc
cld
jp
jge
add
mov
subb
movsl
test
fmuls
adc
adc
jmp
test
push
sbb
or
mov
and
dec
scas
pop
mov
shlb
mov
pusha
lea
push
lcall
lock
inc
add
popf
adc
mov
sub
dec
mov
xchg
adc
dec
dec
iret
adc
js
ljmp
pop
sub
stos
jecxz
sbb
inc
xor
enter
jno
sub
push
jmp
push
adc
push
adcb
gs
push
add
inc
scas
cltd
lret
pushf
mov
les
fisubl
pop
mov
or
fwait
enter
movsl
ret
add
loopne
dec
std
cld
pop
imul
pop
call
cmp
inc
adc
add
in
xchg
push
lmsw
and
xlat
pop
xchg
dec
push
cmp
push
pop
test
xor
in
enter
cmpsb
xchg
jmp
mov
adc
dec
cli
sbb
mov
out
xchg
sbb
pop
dec
fsub
mov
lock
add
jne
ja
sbb
pop
notl
and
popa
pop
xor
cld
jns
jne
jae
cmpsb
js
insb
xchg
cmp
pop
rcl
test
cmp
subb
data16
sub
cs
ljmp
jne
cmpl
addl
test
test
xchg
push
push
dec
or
xor
and
dec
sbb
lods
or
out
xchg
xchg
mov
and
mov
out
iret
in
adc
dec
imul
xor
xlat
push
repnz
nop
int
loopne
push
lcall
and
lea
bound
sbb
in
call
pop
add
call
in
and
adc
out
and
shll
addr16
xor
push
mov
and
cmpsl
andl
repnz
pop
inc
out
and
sbb
cmp
shlb
dec
xlat
sub
xor
movl
push
jbe
cmp
inc
ljmp
imul
push
imul
les
loope
push
fiaddl
pop
push
push
pop
enter
scas
inc
and
xor
sub
shlb
sbb
push
rcrl
repz
mov
mov
andb
mov
lret
adc
mov
insb
push
pop
ret
push
sbb
inc
jmp
int
xor
adc
and
bound
jg
leave
xchg
and
xor
cld
or
pushf
dec
inc
or
cld
or
mov
pop
xchg
xor
dec
daa
push
adc
in
sub
mov
in
imul
ret
push
cs
jmp
inc
enter
xor
sbb
sbb
xor
sbb
dec
or
xchg
lock
mov
fisttps
jg
hlt
sub
cmp
or
and
iret
push
popf
push
sub
push
jl
ja
gs
mov
mov
add
stc
jle
and
dec
dec
add
cmp
dec
mov
and
fisubrl
cltd
pop
notl
clc
sbb
out
daa
cmpsb
enter
inc
lahf
cmp
cs
jp
out
jae
xor
dec
nop
inc
sbb
adc
xchg
lock
inc
cwtl
lock
cs
dec
lock
jbe
subl
pop
xchg
mov
fs
jae
and
cltd
xchg
inc
ds
arpl
sbb
clc
cs
ret
adc
pushf
adc
xorb
loope
inc
sub
pop
xor
add
test
cmp
adc
inc
or
sub
mov
addr16
pop
sbb
cld
lock
or
cmp
rcrl
jle
iret
dec
clc
push
rolb
mov
or
adc
add
sbb
shlb
xchg
clc
lahf
cmpsb
and
xor
test
xchg
enter
or
inc
lcall
in
nop
stc
popf
cwtl
mov
pop
jo
pmulhw
xor
call
test
xor
add
jmp
sub
sub
xor
mov
pop
jne
imul
pop
lahf
xor
sub
shrb
jne
adc
and
mov
pop
test
push
roll
dec
xchg
sbb
add
mov
mov
or
mov
add
sbbl
adc
fwait
add
pop
les
mov
mov
add
fistps
mov
popa
call
jecxz
daa
xchg
inc
ficoms
fmull
push
push
sbb
movsl
pop
bound
jmp
sbb
or
addb
jo
xor
dec
jae
inc
enter
imul
les
icebp
lock
test
push
mov
mov
add
je
jno
mov
ret
lea
push
daa
add
sbb
pop
pusha
jle
scas
pop
jo
das
je
movzbl
push
dec
sub
sti
push
dec
fstpt
scas
ja
jne
in
jecxz
and
mov
adc
push
ss
mov
and
or
cmp
pop
into
mov
jne
clc
outsl
sbb
sub
mov
pushf
addb
xchg
inc
add
pop
and
cmp
or
xor
push
dec
or
pop
repz
xor
rorl
sub
jg
and
arpl
xchg
jbe
sbb
js
flds
add
je
or
pop
sahf
fistl
xchg
adc
test
sub
and
nop
nop
andl
cmp
shlb
sti
fs
mov
add
pop
daa
or
mov
insl
push
or
xor
daa
pop
dec
andb
cmpsl
mov
sbb
iret
jmp
loopne
inc
sbb
pop
add
xchg
dec
xchg
or
jno
pop
and
pop
or
cmp
adc
arpl
and
pcmpeqw
clc
cwtl
gs
inc
dec
and
dec
inc
dec
dec
sub
call
mov
xor
mov
or
cmp
into
div
push
call
push
dec
aaa
mov
xor
pop
je
leave
popf
movsl
test
mov
loopne
rolb
ficomps
pop
sub
xchg
leave
adc
mov
sbb
jmp
jne
nop
sub
adc
dec
mov
mov
xchg
imul
andb
xchg
cmc
push
fs
mov
xor
or
inc
jne
rclb
mov
jo
ds
scas
sbb
or
adc
mov
dec
dec
adc
inc
inc
xor
fiaddl
and
dec
pop
mov
mov
cwtl
enter
push
or
mov
mov
pop
insl
push
cmpb
mov
inc
shrl
push
xchg
aaa
repnz
call
pop
inc
sub
mov
adc
adc
enter
addr16
arpl
cmpsl
pop
xor
test
jo
adc
dec
dec
sub
fs
mov
push
nop
outsl
inc
js
pusha
pusha
mov
xchg
out
pop
js
dec
cmpl
sbb
inc
jl
push
movsl
je
dec
lret
loope
insl
xor
mov
adc
push
push
jne
sahf
dec
adc
and
mov
mov
sbbl
mov
scas
add
sahf
and
sbb
frstor
faddl
pop
clc
insb
je
xchg
lock
xchg
pusha
xchg
lea
jno
jno
sbb
inc
sbb
xchg
movsl
jno
mov
push
jae
push
scas
dec
mov
mov
sub
adc
cli
pop
inc
sub
repnz
in
push
cmp
ljmp
mov
pushf
es
int3
mov
shl
sbb
loope
push
call
sub
arpl
nop
out
clc
push
pop
clc
rcrb
sub
lock
pop
inc
jg
xor
ret
dec
sahf
daa
mov
sbb
icebp
pminsw
sbb
leave
ud0
pop
js
pop
or
add
cmpsb
jg
sub
popa
mov
fildll
lea
mov
mov
adc
or
lret
or
test
xor
fcomip
and
xor
rcr
push
pusha
pusha
push
add
mov
push
dec
cld
pop
das
sbb
and
dec
loopne
out
add
or
jg
sub
mov
cs
dec
sarb
add
xchg
adc
and
lcall
imul
jg
jno
rcrb
jg
adc
lret
in
sbb
insl
rcrl
cs
out
push
out
loop
xor
aas
sahf
and
dec
mov
jg
repnz
out
adc
addl
dec
leave
cmpsb
mov
sub
inc
add
nop
add
inc
jg
push
test
je
sub
add
adc
xchg
int3
bound
jb
mov
daa
fstpt
add
add
aaa
enter
add
xchg
pop
xchg
jbe
sub
dec
sbb
ror
xor
pushf
shl
cmpb
push
sub
sbb
rcrb
in
xchg
mov
loopne
push
sbb
int3
mov
iret
loopne
xor
ficoms
sub
adc
mov
sbb
mov
bound
push
jp
les
pop
push
int3
xor
or
hlt
fstl
repnz
fwait
add
add
int
inc
add
cmp
pop
sbb
je
test
jno
push
outsl
xorb
pop
pop
adcl
adc
ja
push
dec
pop
xor
xor
cmpl
jne
loop
mov
push
add
mov
dec
jo
mov
outsb
jmp
inc
sbbl
cwtl
dec
in
sub
cmpsb
mov
pusha
shlb
add
call
pop
inc
xorl
mov
adc
ret
mov
mov
sbbb
sbb
adc
ret
outsl
fdivl
rcrb
inc
jmp
and
outsb
and
pop
lret
dec
and
and
lahf
into
movb
daa
jnp
popa
or
xlat
adc
inc
insb
mov
inc
jg
push
push
roll
mov
pushf
mov
int3
addr16
and
or
bound
lret
or
and
incb
gs
loope
xor
daa
cmc
rorl
add
out
xchg
lcall
inc
pop
in
jmp
inc
jb
or
xchg
inc
ficomps
pop
fisubrl
shlb
ret
jge
mov
in
cmpsb
jbe
fnstenv
sub
adc
repz
loop
out
iret
pusha
mov
mov
loope
cmp
mov
inc
popf
sbb
aam
adc
call
push
test
mov
pop
das
jbe
insb
je
jae
xor
or
cwtl
xor
gs
jb
inc
push
mov
lcall
dec
fcompl
jne
shlb
faddl
jne
movsb
fcom
jle
add
xchg
xor
mov
jge
pop
stos
sub
xor
adc
push
push
sub
jge
adc
shrl
or
inc
test
mov
adc
add
test
enter
movl
push
icebp
je
or
lods
mov
sbb
and
add
jne
push
xrelease
sbb
sahf
int3
fs
mov
sbb
xchg
adc
mov
pushf
orb
rorb
faddl
adc
and
push
sbb
or
push
addl
sub
clc
push
add
push
jge
sar
leave
push
rorb
lahf
mov
stos
icebp
mov
scas
jno
push
cmp
daa
pusha
mov
cmp
jg
ret
push
imul
pop
jo
loopne
and
or
movsb
iret
sub
mov
mov
xor
sub
je
outsb
testb
jmp
pop
or
xor
mov
add
inc
xlat
dec
sub
mov
sbb
out
mov
pop
mov
cwtl
mov
sub
adc
loop
mov
stos
xchg
rcrb
pop
gs
lock
push
xchg
mov
cmp
mov
cmp
pop
or
xchg
cmp
jg
and
sbb
fisttpll
ja
cvtpi2ps
push
push
push
test
popa
cmp
mov
jmp
rcrl
xchg
adc
and
sbb
cmc
adc
cmp
push
neg
add
adc
adc
into
fimuls
sub
iret
mov
fisttpl
cmp
je
lds
stos
out
enter
insl
sbb
dec
cwtl
popl
adc
loopne
pop
int3
cmp
icebp
cmp
arpl
dec
sbb
cmpsl
push
lea
and
jmp
popf
and
addl
xorl
dec
daa
push
cmc
es
test
lock
mov
add
lds
sbbl
sub
xor
sarl
sbb
sbb
jmp
clc
scas
mov
mov
scas
subl
mov
call
mov
xor
pop
pop
xchg
inc
mov
lods
ja
dec
add
enter
jns
pusha
push
movsl
lock
pop
js
sbb
lods
icebp
movsl
and
adc
add
int
inc
lahf
hlt
pop
fs
fistpll
lahf
hlt
and
pop
dec
fdivrs
jne
shrl
or
inc
push
mov
add
add
dec
test
and
add
jns
sbb
in
mov
add
lods
in
lock
sbb
mov
add
xorb
mov
mov
je
in
push
test
mov
test
add
mov
mov
sbb
imul
adc
fldpi
and
adc
fs
fistpll
pop
cmp
stos
adc
movsb
xchg
cmp
add
in
xor
dec
lods
sub
jo
inc
aaa
mov
and
fidivrl
lea
and
subb
or
push
inc
inc
stc
cmp
mov
mov
popa
ret
test
sbb
fdivl
fwait
xchg
sub
sub
xor
repz
sbb
mov
cs
xor
push
test
je
and
cmp
les
fsubl
cmp
xchg
lock
inc
xchg
mov
test
int3
jg
mov
jne
adc
and
mov
and
sbb
inc
aaa
pusha
dec
sbb
add
pop
repz
inc
in
or
lcall
pop
orl
push
inc
or
bound
int3
sbb
sub
call
sub
daa
call
lods
jno
enter
add
fs
add
sbb
or
mov
mov
cmp
out
testb
imul
push
adc
inc
mov
mov
pop
inc
cmp
fwait
jl
and
cmp
adc
jnp
inc
and
or
xor
mov
jns
xorb
out
and
hlt
rorl
mov
dec
aam
mov
aam
lods
push
lods
mov
sub
and
sub
pop
pop
in
push
out
add
mov
addr16
movsl
mov
in
in
cs
push
clc
mov
pop
outsl
push
and
daa
popa
jne
lods
mov
pop
mov
xor
adc
cmc
add
outsb
shl
xor
xor
cs
mov
adc
gs
xor
and
adc
inc
das
shll
cs
add
adc
iret
ret
inc
jne
sub
imul
inc
cli
mov
add
and
mov
sub
cld
sub
pop
inc
mov
xor
or
and
nop
and
pop
cmp
sbb
push
pop
and
lock
fcompl
filds
adc
in
in
and
xchg
push
sarb
cmp
call
jno
push
pop
fdivs
dec
or
aas
scas
movsb
add
je
jmp
dec
pop
sub
push
mov
adc
add
inc
imul
inc
stos
mov
ret
push
pop
adc
jne
and
cli
xchg
or
sbb
shll
mov
mov
add
adc
inc
lods
stc
mov
pusha
adcl
flds
xchg
add
mov
adc
add
mov
jecxz
popa
cmp
and
lcall
add
movsl
fisubs
aam
xchg
xor
jmp
pop
sti
imul
mov
jns
xchg
pop
xor
loope
shl
push
fwait
push
imul
xor
mov
stos
inc
jmp
gs
pop
inc
das
or
outsb
lods
pop
push
dec
mov
pusha
xchg
pop
rcrb
cld
hlt
shll
daa
and
incl
add
xchg
andb
push
adc
dec
jl
cmp
nop
mov
jns
mov
std
jge
lret
lahf
dec
mov
xor
lock
sub
push
push
mov
aas
mov
sub
mov
ret
orl
enter
call
and
jmp
aaa
mov
push
pop
and
xchg
rcll
adc
jo
pop
sub
xchg
dec
mov
inc
inc
xchg
aas
pop
dec
loopne
add
das
mov
sub
sbb
adcl
mov
or
insl
add
push
add
mov
add
bound
or
inc
or
or
jmp
ss
or
push
add
jge
stos
or
jno
mov
dec
adc
cmp
add
js
dec
clc
aaa
sub
ret
and
test
jmp
mov
jp
push
daa
clc
add
filds
push
jecxz
repnz
push
or
jmp
jnp
ss
into
out
pusha
dec
mov
xchg
sbb
mov
data16
xchg
insb
jmp
mov
hlt
pop
mov
sbb
test
test
int3
add
xor
xor
and
andb
adc
es
les
add
xchg
shll
add
aas
cmp
scas
mov
mov
das
int3
cmp
adc
add
cmc
push
pop
or
lods
or
mov
inc
hlt
lea
dec
jns
sbb
hlt
inc
and
or
mov
fucomp
push
push
ss
clc
push
mov
dec
shlb
mov
ret
enter
inc
in
sahf
subl
lret
mov
pop
and
and
popf
imul
in
imull
mov
daa
test
dec
mov
mov
inc
pusha
jb
lcall
into
ja
leave
daa
test
ja
add
cmp
jl
push
dec
insb
push
mov
pop
mov
idivl
adc
sub
cmpsb
fcomp
pop
test
dec
or
push
add
popl
cmp
fistpl
fcomp
jne
sub
sub
addb
inc
mov
push
sbb
cmp
mov
xlat
inc
mov
fistl
dec
ret
adc
lock
pop
dec
movl
and
movsl
icebp
add
and
scas
insb
jmp
stos
sbb
add
adc
xor
xchg
in
mov
inc
sbb
outsl
push
pop
shrl
add
inc
ljmp
push
hlt
hlt
jecxz
nop
in
adc
lock
rcll
adcb
test
sbb
jo
or
fwait
ret
and
insb
hlt
mov
ds
popf
push
mov
mov
and
mov
or
or
hlt
push
rclb
pusha
or
test
rclb
xchg
insl
std
test
sbb
pop
add
dec
sub
clc
lea
cltd
mov
xchg
jl
jne
mov
and
mov
daa
inc
sub
xchg
add
adc
sub
inc
in
in
movsl
inc
dec
xor
cmp
xor
cmp
imul
pop
sub
daa
and
fwait
xchg
or
lea
hlt
and
leave
inc
jg
daa
and
mov
xchg
and
and
sbb
aam
aam
int3
rcrb
movsl
in
sti
mov
pusha
push
cmp
arpl
rcll
cmp
push
or
movsl
pop
pop
sub
xor
ret
pop
pop
rol
mov
push
or
cmpsl
pop
jb
scas
or
sub
jge
cmc
add
mov
sub
mov
ljmp
mov
cmp
cli
sub
or
xor
xlat
mov
movsl
mov
int3
aam
cmp
call
das
sbb
bound
xchg
xchg
loope
add
jbe
adc
push
mov
insb
jo
mov
addb
push
inc
pop
cmp
daa
dec
clc
or
xor
jmp
fsubs
in
sub
add
sbb
inc
jno
movsb
push
aad
push
add
or
adc
imul
dec
xchg
sbb
sub
loopne
xlat
push
pop
data16
dec
testl
dec
adc
mov
sbb
dec
xor
scas
aam
nop
and
out
push
fnstsw
or
jne
dec
adc
xchg
adc
or
xor
shr
add
push
ret
or
clc
test
ja
pop
mov
enter
cld
push
push
pop
adc
sub
or
inc
and
jb
xchg
jbe
fwait
inc
mov
or
add
add
inc
je
or
into
xlat
sub
aaa
push
aaa
jno
pop
push
sbb
inc
or
out
cmp
js
outsl
aaa
mov
mov
rclb
dec
hlt
pop
fcoms
rdpmc
or
sub
add
sbbb
jecxz
or
or
std
mov
add
daa
jns
xor
or
sub
sbb
lcall
out
or
push
sbb
ret
popa
jns
inc
push
ret
pop
inc
ja
bound
popf
fs
or
jmp
clc
fisubs
push
lods
add
insl
sub
addr16
inc
push
cmp
xor
xor
add
iret
dec
or
inc
div
xor
xor
or
pop
adc
and
push
aas
leave
hlt
add
add
inc
repnz
or
mov
cld
add
push
mov
xchg
stc
enter
mov
ljmp
mov
mov
sub
jb
inc
rcll
dec
idiv
insb
jbe
outsl
sbb
lret
jne
add
cmp
jge
pop
or
shlb
sbb
sub
std
mov
out
add
sbb
fcompl
daa
test
dec
data16
xor
sub
lods
out
aam
push
adc
jbe
xor
arpl
xor
push
cli
add
dec
imul
repnz
call
jne
cmp
mov
divl
ret
mov
outsl
aas
rcll
popa
push
xor
fsub
inc
inc
cmp
xor
lds
fstpt
cmp
movsl
js
cmp
inc
cmp
xchg
rorl
ss
dec
jne
jmp
xchg
add
and
pop
rcrl
arpl
test
adc
add
sbb
outsl
jns
out
and
mov
stos
cltd
xor
jns
push
and
je
popa
pop
je
nop
lods
fistps
adc
and
add
xchg
mov
addr16
push
xor
sbb
push
leave
fnstenv
inc
mov
mov
adc
jl
inc
mov
cmp
jg
sbbb
cmp
jne
lcall
sbb
call
sbb
mov
je
push
jne
jl
or
jle
lret
nop
test
mov
test
in
push
mov
cmpsl
test
add
sub
ds
clc
iret
cld
cwtl
in
pop
xchg
add
add
dec
xor
rcrb
lock
pop
xor
push
lret
inc
sub
pushf
in
sti
stc
adc
cmp
sbb
xor
fdivrs
adc
ljmp
add
mov
inc
inc
dec
push
outsl
cmp
mov
mov
out
lock
pop
cmpb
fnsave
hlt
adc
mov
std
jmp
dec
sub
mov
sub
clc
push
inc
and
cmp
add
filds
push
stos
and
in
sub
data16
ss
popf
or
push
xchg
jo
sub
testl
in
jl
mov
and
ret
jle
jmp
and
dec
or
outsl
cli
or
inc
test
mov
jmp
mov
xchg
adc
cwtl
scas
divl
leave
cmpb
dec
or
fmuls
das
clc
pushf
lock
fsubl
shlb
jl
in
je
cmpb
dec
fs
sbb
adc
aad
push
jb
sbb
data16
sub
sbb
ss
xor
push
add
mov
aaa
push
mov
leave
stos
push
inc
add
or
xchg
add
xor
jbe
adc
movsl
nop
jo
push
pop
xlat
idiv
stc
mov
add
insl
cmp
scas
pop
lds
cmp
std
inc
mov
add
shl
pop
sub
push
pop
push
jmp
jp
sub
jle
ret
test
xchg
xor
lcall
or
dec
and
mov
adc
fldcw
roll
aaa
adc
daa
pop
or
add
push
add
sbb
test
push
add
std
inc
adc
jge
cmp
mov
mov
cmp
rol
je
cmc
mov
rolb
shll
insb
add
lods
jg
pusha
stos
shr
and
dec
cmp
lret
clc
and
add
in
sbb
mov
and
les
and
add
add
dec
stos
pop
push
and
testl
lahf
sub
and
popf
test
scas
adc
mov
daa
jnp
clts
xchg
add
out
mov
pop
int
nop
pop
or
adc
inc
mov
call
aam
inc
inc
or
loopne
pop
outsb
lret
cld
mov
xor
das
mov
cmovs
sub
movsb
rcl
stos
das
ficomps
rorb
leave
xchg
and
mov
pop
inc
push
sbb
loope
das
das
inc
das
lods
je
or
sar
sbb
sub
add
inc
cltd
scas
push
popa
xchg
add
mov
cwtl
popa
bound
mov
jno
or
inc
jne
add
lea
sbb
fisubrl
adc
in
movsb
lods
adc
sbb
mov
xor
xchg
or
push
aam
pop
xchg
add
in
insb
and
inc
push
dec
pop
ret
nop
and
or
stos
test
fs
hlt
jne
add
fwait
je
add
adc
add
addb
fsubl
inc
sbb
sbb
adc
push
add
rorb
lods
cmp
ret
test
ljmp
aaa
and
outsb
js
add
faddp
mov
inc
js
jl
xchg
aas
dec
cmp
pushf
or
jb
hlt
sahf
inc
xchg
scas
xor
mov
fadds
lock
add
push
inc
inc
push
xchg
or
lds
fcompl
fcoml
sbb
dec
addr16
or
outsl
addr16
icebp
mov
push
enter
in
add
fstl
and
mov
pop
fwait
aas
in
scas
aas
xchg
mov
dec
scas
or
movsl
mov
cmpsl
jae
sub
pop
daa
bound
mov
ficomps
mov
fnstenv
add
or
bound
rolb
je
cmp
inc
xor
aam
testb
int3
add
mov
pop
dec
stos
push
hlt
dec
gs
insb
ja
pop
adc
sahf
test
pushf
and
or
hlt
adc
jge
pusha
or
xor
adc
sbb
inc
vsqrtpd
rcrl
cmp
sbb
test
shl
adc
add
daa
arpl
add
sbb
push
sub
mov
cmpsb
pop
mov
mov
pop
sbb
frstor
scas
cmc
mov
seta
xlat
sbb
push
and
inc
mov
sbb
jge
inc
rcll
add
mov
enter
push
or
adc
movsl
insl
or
mov
sbb
dec
rolb
mov
and
rorb
sahf
cmp
aaa
or
inc
add
inc
inc
add
inc
enter
inc
xchg
ss
xor
adc
mov
das
jge
mov
xchg
das
clc
sahf
or
cmp
js
call
xchg
adc
sbb
insl
bound
daa
mov
aam
in
add
mov
add
cmpsb
cmc
stos
pop
test
dec
add
lahf
lods
add
mov
sti
sub
test
or
push
sbb
jns
inc
push
bound
movsl
fs
add
and
inc
loope
aam
mov
addl
inc
in
sub
jg
ret
movsb
push
sub
mov
and
adc
lods
xchg
ljmp
mov
xchg
rclb
test
or
test
push
adc
jae
adc
and
push
mov
dec
rolb
adc
push
aas
lods
dec
push
jns
jmp
adc
fldl
ret
call
xchg
push
or
jge
sbb
mov
aaa
inc
movsb
jbe
add
sbb
sbb
outsl
dec
icebp
ret
push
rcrb
jnp
pusha
inc
add
dec
sbb
in
xor
btr
sbb
or
addl
xor
push
pop
jno
push
mov
and
or
add
and
lods
addb
repnz
add
int3
push
jb
fcomps
lret
pop
scas
push
pop
cmp
movsb
jb
xchg
mov
inc
lahf
movsb
jne
xchg
lahf
addb
xchg
inc
outsl
add
pop
lds
roll
daa
xor
inc
fs
cltd
sbb
cbtw
push
and
and
lock
xor
lea
jae
cmovae
mov
xchg
mov
push
jne
jo
repnz
add
rcll
sub
jl
dec
aaa
sbb
dec
push
jo
scas
cltd
nop
push
mov
adc
mov
xchg
sbb
mov
cmpsb
nop
sarb
loopne
fsubr
shrl
fmuls
fdivs
pop
stc
shl
push
pusha
jge
and
shlb
hlt
arpl
cmpsl
lods
push
fcmovnu
mov
mov
cld
lea
adc
fcomip
xchg
mov
mov
shrb
orb
push
aam
push
repz
pop
mov
rorb
pop
pop
loopne
insl
les
pushf
jbe
aam
adc
daa
insl
inc
inc
mov
or
clc
or
mov
adc
pushf
sbb
cmp
fdivrl
test
iret
test
xor
flds
and
sbb
push
stos
cld
push
aas
cltd
or
and
ret
inc
subb
pop
mov
push
push
add
pop
subl
add
sub
cmpw
rorb
pop
mov
add
mov
sbb
mov
jne
ds
shlb
mov
xchg
mov
adc
inc
add
enter
or
or
andl
cltd
or
out
adcl
inc
cmp
jl
or
adc
fidivrs
dec
add
addr16
mov
daa
dec
ret
pop
test
movsb
pushf
test
sub
test
sbb
adc
add
shlb
fdivs
add
js
inc
test
psllw
loop
cli
or
aam
test
mov
push
pop
cmp
test
mov
sbb
mov
lea
mov
call
sub
and
enter
mov
xor
je
sbb
sbb
sub
imul
das
test
mov
inc
clc
loope
pop
adc
rorb
pop
shlb
cmpb
fmuls
out
xchg
pop
scas
cltd
and
xchg
push
mov
jns
stos
out
shll
and
sbb
push
push
jae
add
mov
or
add
push
mov
add
lds
shlb
mov
les
mov
mov
adc
sbb
outsl
inc
aaa
sbb
es
cmpsb
sti
addb
rolb
loopne
imul
out
rolb
fdiv
ss
adc
outsb
mov
add
fwait
sub
addb
rclb
test
xor
inc
add
movsl
mov
outsl
pop
or
pop
mov
or
xchg
in
outsb
or
push
adc
push
jo
and
adc
pop
mov
cmp
mov
or
pop
mov
aaa
fadds
sub
add
jbe
or
repz
je
or
jbe
push
es
push
daa
addl
sbb
pop
mov
adc
dec
add
js
push
jb
lea
lret
adc
adc
adc
xor
sbb
cwtl
popf
push
dec
adc
imul
insb
cwtl
pushf
inc
dec
add
sub
or
subb
and
in
sahf
and
or
push
adc
in
mov
and
adc
daa
pop
dec
inc
pop
dec
or
and
and
clc
add
inc
pop
jbe
and
or
fsubs
inc
repnz
push
dec
dec
mov
add
lcall
call
movsl
mov
minps
sbbl
or
repnz
mov
pop
mov
ret
adc
and
jg
add
je
cmp
jb
cmp
ja
pushl
ss
ss
push
push
dec
jmp
push
or
pop
loopne
mov
and
push
mov
inc
add
dec
jne
mov
lock
imulb
imul
stos
adc
je
cld
dec
jne
sub
test
stc
mov
push
scas
fdivrs
sti
jnp
or
or
hlt
push
pusha
push
push
add
pushf
pop
sbb
lock
and
out
xchg
les
shlb
push
movsl
push
sub
add
testl
or
adc
add
testb
xor
je
xchg
mov
cmp
es
pop
or
sub
or
divb
lods
sub
shll
outsl
xchg
sub
pop
outsl
fnstcw
adc
or
insb
dec
add
and
lret
sub
inc
ljmp
add
xor
daa
mov
fldl
fimull
xor
or
add
sbb
out
cmp
or
popa
adc
cwtl
rorb
insb
in
push
hlt
and
ds
popf
loope
movsl
mov
adc
sahf
stos
cmp
add
popf
push
inc
mov
xchg
mov
into
fstl
jns
repnz
lock
push
decb
add
mul
test
mov
in
cmp
cmpb
sar
mov
pushf
std
cmpsb
add
or
jae
icebp
mov
jg
push
cmp
jo
inc
jo
mov
aad
add
bound
sarb
mov
sbb
pop
xchg
mov
cmp
das
cmp
inc
divb
cwtl
sub
iret
or
lock
or
sub
sbb
imul
in
inc
das
fistl
movsl
push
pop
data16
push
popa
pushf
adc
sub
popa
mov
fisubrl
push
and
push
and
lock
pop
inc
int3
cmp
inc
push
dec
and
das
add
mov
sbb
sbbl
out
or
outsb
push
add
subb
adc
and
push
xchg
xchg
shl
cmp
sub
jno
mov
int3
xchg
outsl
jecxz
pop
rcll
or
adc
icebp
sub
sub
jns
loope
pop
movsl
lret
push
push
rclb
mov
movsb
ds
pop
orl
xchg
and
jbe
out
cmp
push
add
push
xor
push
shlb
aad
jb
push
xlat
aas
sub
push
jns
cmpsl
add
and
sub
xor
adc
dec
push
pop
enter
aas
add
xor
jns
inc
xchg
dec
jb
loope
sub
cs
dec
and
ds
sub
cmp
jnp
bound
inc
jl
mov
loopne
add
repnz
movsb
and
jnp
xchg
js
inc
mov
repz
ds
push
xor
fs
mov
lock
dec
inc
inc
inc
outsb
pusha
dec
js
inc
std
mov
mov
loopne
cmp
les
inc
lock
push
iret
daa
inc
dec
dec
add
push
pusha
or
jg
and
sarl
inc
je,pn
lea
add
add
clc
ret
repz
inc
add
insl
push
xchg
jge
decl
inc
mov
insl
insl
pushf
movsb
and
lods
sub
enter
lods
jl
faddl
repz
and
mov
xchg
mov
nop
xchg
sub
sub
sbb
wrmsr
xchg
aaa
ja
inc
mov
movsb
cmp
pop
push
inc
add
jle
dec
xchg
je
pop
scas
imul
mov
mov
popa
call
iret
jg
xor
xor
and
xor
push
aad
xchg
nop
in
nop
xchg
sub
int3
clc
adc
movsl
loop
and
sbbl
mov
inc
pop
jne
mov
add
push
rcrb
mov
xchg
push
push
ret
mov
test
or
jl
or
xchg
mov
xor
xor
add
mov
pop
in
pop
in
je
js
inc
and
push
inc
xchg
test
addr16
pushf
dec
xor
xchg
dec
dec
and
test
jmp
lahf
push
mov
inc
negl
mov
cmp
and
fldenv
xor
add
add
es
sbb
fdivrl
inc
or
inc
xchg
fcomps
or
mov
push
cmp
pop
push
test
mov
adc
cwtl
mov
cmpsl
test
mov
fdivrl
mov
cmp
add
xchg
sub
dec
jae
xorb
jmp
movsl
clc
xchg
push
mov
add
rclb
mov
notl
mov
adc
push
and
lods
xchg
out
xchg
loope
in
loop
push
mov
sbb
nop
loopne
add
add
jmp
xor
inc
fsubrs
push
adc
sub
idivb
add
mov
xchg
push
movsb
inc
xchg
push
aaa
xor
jo
xor
ss
sub
or
push
pop
adc
push
loopne
cmp
xchg
add
je
xorb
fmuls
icebp
and
dec
sbb
test
fs
xchg
and
and
xchg
sub
inc
xchg
cmp
pusha
mov
sbb
icebp
test
popa
mov
bound
add
jns
inc
jecxz
dec
int3
inc
rorb
cmp
sub
int3
aad
and
int3
loopne
xor
push
mov
jg
jae
enter
jge
fstpt
pop
sbb
push
rcll
nop
add
cli
add
sbbl
xchg
in
and
mov
xor
adc
sbb
jecxz
cltd
pop
je
in
dec
push
mov
daa
xchg
cmp
leave
dec
int3
lock
out
pop
cmpsl
subb
cmp
sub
mov
hlt
cld
and
pop
cmp
adcb
ja
and
or
mov
sahf
add
sub
adc
or
mov
dec
stc
cmp
dec
ret
or
addl
outsb
out
fstps
or
jne
rcr
fadds
sub
mov
inc
ja
cltd
js
rcrb
push
cmpsl
sub
shl
out
je
iret
in
cmp
xchg
push
xor
xor
pop
insb
jne
mov
fadds
sbb
notl
enter
jmp
mov
and
int
or
and
lock
imul
and
arpl
cmp
add
add
sub
fs
cmpsl
xchg
xchg
fs
jl
lret
adc
call
lock
jns
out
mov
lock
add
sbb
cmc
sbb
mov
popf
add
and
xor
push
lea
adc
shlb
xchg
pop
adc
loope
inc
add
jecxz
push
fisttpll
push
leave
clc
sub
rolb
xchg
or
in
bound
sbb
adc
cmp
xchg
rorl
mov
and
lods
mov
pop
push
xchg
lods
or
pop
inc
push
xchg
icebp
dec
add
and
pushw
and
daa
or
in
xchg
in
inc
loope
sti
cmp
pop
and
mov
daa
push
push
sarl
fsub
dec
mov
and
or
jnp
adc
dec
sbb
rol
mov
xchg
shll
push
or
xor
loopne
cmpsl
movsb
sahf
pop
test
clc
hlt
adc
inc
mov
in
or
inc
inc
push
cld
or
sub
sub
loop
adc
mov
adc
andb
push
pop
out
hlt
les
cltd
adc
dec
shrb
or
hlt
push
hlt
adc
sbb
nop
xchg
sbb
add
or
dec
dec
xchg
add
lock
xchg
xchg
sub
pop
pop
inc
pushf
in
inc
mov
clc
mov
das
int3
pop
mov
inc
inc
mov
test
mov
and
leave
dec
sbb
sub
and
sbbb
adc
push
popf
icebp
pop
js
inc
pop
sub
arpl
add
push
jg
inc
sar
add
bound
mov
jg
adc
es
mov
and
or
cmp
xor
and
lock
lock
mov
sbb
sub
sub
pop
xchg
test
jb
jns
inc
inc
and
adc
ja
xchg
inc
mov
cmp
sbb
mov
sbb
sbb
dec
in
sub
dec
sbb
pushf
or
inc
lcall
lods
xor
mov
shrb
sub
and
insb
or
arpl
add
dec
fstp
aaa
dec
outsl
popa
xor
lahf
adc
xchg
add
pop
adcl
sub
daa
inc
sub
punpckhbw
push
jg
lahf
mov
sbb
aam
fcom
cmc
sarl
and
pop
enter
mov
and
inc
cld
cmc
cwtl
je
mov
dec
pop
sarl
sbb
fimuls
out
imul
sbb
lds
jmp
loopne
sbb
fst
mov
mov
hlt
dec
sbb
shll
xor
cmp
jl
div
jae
jb
repz
cmc
divb
mov
add
inc
pop
push
inc
and
ss
adc
fsubr
ds
insb
out
out
arpl
mov
test
icebp
add
jnp
pop
fwait
jp
and
movsb
cs
mov
inc
push
rorb
ds
test
sbb
push
movsl
shll
jge
int3
cmpl
add
adc
add
cmp
sbb
popa
dec
mov
and
xor
add
dec
fidivl
and
adcb
lods
test
sbb
xchg
loopne
xor
das
outsb
adc
inc
push
in
insb
aam
and
or
fwait
insl
nop
mov
lea
test
outsl
lods
sbb
cmpb
and
jns
lock
add
add
and
pop
jo
dec
mov
pusha
jmp
or
nop
movsb
movsb
orb
mov
nop
xchg
or
pop
js
sub
xchg
add
inc
push
or
nop
add
mov
inc
pop
jb
push
inc
push
inc
pusha
je
and
icebp
pushf
pushf
iret
repz
push
int3
jae
test
xchg
pop
data16
repz
xlat
in
mov
lahf
cmpsl
stc
and
inc
stc
mov
sbb
push
std
or
repz
sahf
stos
mov
cmp
pop
push
ja
iret
repz
out
mov
push
rcrl
cmp
and
ds
repz
repz
gs
mov
jl
out
dec
dec
push
fimuls
out
lcall
sub
out
sahf
mov
shlb
daa
shl
mov
push
adc
adc
sub
sbb
xchg
dec
sbb
fwait
stos
add
popf
daa
repnz
push
dec
ss
in
nop
dec
push
add
and
jns
in
pop
pop
mov
outsb
pusha
sbb
iret
test
add
xchg
mov
out
add
push
mov
dec
push
out
sbb
push
or
nop
pop
jns
push
inc
sbbb
push
add
push
inc
shrb
enter
pop
jo
inc
addr16
pushf
movsb
inc
inc
rcrb
dec
pop
inc
sbb
testb
fs
gs
push
pop
insb
xorb
aaa
pop
imul
sbb
adc
out
and
sahf
out
pusha
sub
push
push
cmovae
stos
pop
sub
mov
sar
test
push
inc
jae
ds
mov
jne
test
jp
xorl
sub
pop
and
mov
test
shrl
xchg
cmp
sti
dec
and
js
mov
addr16
add
mov
hlt
and
mov
scas
loopne
mov
mov
push
mov
fdivs
jmp
aad
lock
insb
xorb
xchg
daa
rolb
sub
mov
mov
sbb
dec
sub
test
add
add
test
pop
arpl
or
mov
pusha
dec
mov
outsl
daa
jnp
je
jnp
lods
xchg
sbb
dec
sbbl
nop
aaa
int3
inc
mov
mov
pop
or
mov
or
or
pop
jb
sbb
outsl
pop
inc
jl
adc
std
inc
cmp
jmp
xrelease
pop
sahf
and
enter
in
cwtl
push
test
orb
shlb
jl
xor
pop
inc
jle
push
sbb
and
pushf
xchg
bound
inc
bound
xchg
or
dec
dec
xor
cs
enter
dec
mov
shl
flds
cmp
sbb
xchg
lret
test
inc
bnd
es
mov
push
pop
jb
and
pop
inc
or
call
mov
inc
ds
enter
lods
outsl
xchg
add
sbb
into
aam
aad
or
mov
pop
rclb
add
testb
out
xor
sysexit
add
das
cmp
test
cmp
or
sbb
jbe
pushf
dec
in
push
dec
adc
cmp
add
jne
outsb
add
xchg
cld
push
inc
jo
stc
jge
or
add
pusha
shll
lds
stos
les
mov
mov
sub
out
add
inc
pop
push
mov
mov
jmp
out
in
sbb
push
pop
call
and
aaa
sbb
sbb
into
dec
dec
sub
dec
adc
jae
mov
push
add
insb
sub
adc
xlat
pusha
sbb
cs
sbb
inc
sbb
rorl
sbb
adc
mov
pop
lds
xchg
push
jbe
sub
iret
and
inc
jbe
sbb
mov
fisttpll
int
je
stc
in
cmp
jae
sbb
mov
imul
push
aas
sbb
jmp
mov
ret
jno
insl
test
xor
das
jae
nop
shll
sub
push
or
sub
jne
cltd
xor
sbb
lds
sub
push
xchg
ja
add
push
cmp
mov
jmp
xchg
int3
gs
scas
adc
mov
mov
sub
mov
std
add
add
jae
add
push
xor
icebp
push
and
and
loop
or
push
inc
lods
adc
pop
mov
jg
adc
mov
add
jmp
xor
add
jne
sub
sub
test
dec
xchg
add
imul
lds
adc
mov
inc
add
inc
imul
pop
mov
popf
push
mov
xor
lock
push
mov
in
lods
shll
test
or
add
sbb
sbb
addr16
dec
pop
cmpb
or
and
mov
jne
pop
jb
movsb
in
rolb
adc
push
loopne
sbb
sbb
scas
clc
push
xchg
rcrb
stos
and
sub
addr16
stc
fiadds
popa
adc
pop
mov
js
adc
pop
add
fsubr
popa
je
js
xlat
inc
add
in
dec
xchg
push
test
aaa
lock
cli
out
add
imul
lret
subl
push
fisttps
push
inc
aaa
cmp
outsb
addr16
rol
push
es
daa
xlat
add
inc
sub
inc
addr16
ss
push
mov
jae
bound
sub
pushf
cmpsl
dec
jno
sbb
mov
and
add
out
and
cmp
xor
add
push
insl
scas
adc
and
xor
jno
dec
pop
add
pop
inc
test
ljmp
push
fs
scas
inc
push
idivl
addr16
fdivs
sbb
cmpsb
push
jns
cwtl
addb
dec
ret
mov
out
add
inc
xor
pushf
inc
test
push
cs
popl
adc
adc
pop
add
push
sbb
mov
adc
mov
cmp
in
xor
sub
es
mov
scas
clc
hlt
mov
cmpsl
or
call
adc
jb
lret
adc
inc
and
cmp
jne
pop
je
les
cld
std
arpl
lret
push
and
das
push
bound
xor
jmp
cmp
je
inc
incl
lock
jne
stos
jmp
push
cmpl
xchg
jbe
pop
mov
sbb
and
push
push
and
add
pop
mov
mov
pop
nop
ret
jnp
mov
adc
je
push
dec
adc
xor
outsl
push
push
nop
mov
mov
pop
mov
dec
dec
in
mov
rcrb
gs
dec
bound
mov
hlt
xor
mov
in
scas
and
aaa
aaa
out
mov
divb
loop
daa
pop
pop
jecxz
fwait
loopne
mov
sbb
test
out
lds
outsb
or
xchg
or
shll
jg
or
adc
lds
sbb
out
rolb
push
sub
jg
out
dec
and
sub
ror
ret
out
std
add
or
inc
es
and
movsb
int
adc
sahf
ret
or
pusha
shlb
pop
inc
mov
lods
add
pusha
loope
in
dec
sar
adc
adc
mov
push
jmp
in
push
daa
dec
add
sbb
stos
imul
dec
dec
push
les
les
movsl
push
pop
lods
cmovb
sub
in
into
mov
mov
loop
add
adc
or
popf
sbb
and
xlat
adc
and
fnstcw
jmp
sbb
xlat
sub
in
push
lcall
push
fsubrl
push
cmp
ja
xlat
sbb
dec
add
add
inc
sti
and
jne
push
or
jp
push
repz
pop
jl
sbb
lret
lea
fidivl
push
imul
xchg
or
push
jl
add
cmpsl
cltd
jb
jmp
push
adc
ja
dec
movl
xchg
aam
adc
aam
test
data16
aam
aam
mov
ds
mov
or
cmpsb
int
mov
mov
cmp
dec
pop
shr
and
push
insb
testb
pusha
push
pop
es
sbb
cltd
rclb
fdiv
jne
and
mov
add
jno
push
ss
mov
or
insl
fxsave
js
jmp
pop
add
popf
push
daa
add
or
pop
and
or
xor
lock
fdivs
js
push
addl
or
imul
arpl
xchg
add
movsl
or
int3
mov
adc
add
push
stos
fcmovnbe
dec
or
xor
sub
xor
push
dec
mov
pop
popa
add
fsts
pushw
ja
jmp
jg,pn
lret
pop
movsb
inc
lret
mov
arpl
add
lea
pop
insl
repnz
push
gs
jno
add
jle
and
fcoms
rolb
movb
pop
push
cmp
xchg
daa
test
jne
mov
xor
test
hlt
push
dec
dec
xor
pop
je
push
mov
cld
test
dec
jne
mov
xor
push
sbb
aam
adc
dec
ss
std
mov
sbb
xor
bound
scas
imul
add
mov
fld1
dec
sbb
jne
mov
sub
pop
and
mov
jno
add
xchg
push
add
and
cmp
mov
outsb
lcall
push
add
sub
adc
push
negl
xchg
mov
test
mov
or
cmp
addr16
and
pop
push
xor
call
mov
rcr
inc
insl
push
pop
push
dec
push
pop
or
sub
xor
push
aaa
test
and
add
sbb
adc
dec
add
jl
jle
xor
bound
push
push
and
out
or
pop
mov
xor
in
pop
pop
add
xor
mov
or
or
sub
test
hlt
jl
imul
or
pop
aas
pop
mov
dec
add
push
sbb
das
movsl
pusha
imul
cmpsl
pop
and
push
inc
andl
xor
adc
mov
cli
cwtd
sti
adc
inc
jecxz
mov
insb
mov
xor
cmp
imul
in
mov
out
add
lea
stc
sub
push
bts
sbb
es
aaa
add
adc
mov
test
je
out
leave
pop
loopne
hlt
cmp
aad
bound
mov
cltd
mov
out
push
mov
scas
mov
sbb
pop
mov
add
or
inc
xorb
add
lock
cmp
stos
or
out
sbb
pop
cmc
adc
and
xor
cmp
xchg
imul
sub
dec
pop
mov
push
or
dec
call
mov
aam
mov
repz
jg
or
jbe
push
out
or
adc
out
push
in
in
or
or
ret
leave
add
add
jns
nop
push
addl
movsl
arpl
in
pop
sbb
dec
fs
mov
jno
fcmove
leave
push
add
hlt
cld
xor
movsl
mov
pop
and
jmp
rolb
pop
mov
mov
mov
clc
lret
pop
test
lods
nop
inc
mov
xor
mov
cmp
mov
pavgb
test
mov
jo
mov
rorb
pop
out
outsl
pop
lcall
jns
pop
add
andb
jmp
mov
jl
dec
xchg
test
jnp
cltd
lock
xor
add
sub
push
loopne
mov
ret
stos
mov
mov
add
mov
inc
mov
inc
inc
mov
sbb
in
pop
mov
rol
testb
sbb
xlat
add
or
push
or
mov
xchg
ja
and
and
mov
mov
pop
int3
ret
ja
jne
or
push
mov
in
or
jne
jo
pop
push
jl
sbb
and
xchg
dec
sbb
cs
aam
sbb
jb
in
push
inc
dec
xlat
fdivrl
add
sub
adc
cli
ja
jecxz
rorb
mov
sub
mov
jae,pt
pop
clc
mov
nop
movsb
mov
or
adc
sbbb
xor
lock
cmp
lret
push
iret
pop
jge
push
and
inc
daa
jmp
jge
movsl
movsb
sub
and
and
decb
mov
pop
popa
and
add
je
mov
sub
icebp
lock
cmp
add
and
iret
add
adc
jb
fisubrl
inc
inc
cmc
add
xor
or
or
jne
pop
pusha
mov
fldt
xchg
cmp
sub
stos
popf
cmp
je
push
je
dec
xor
mov
ret
pop
xor
adc
jg
lock
pop
loope
inc
js
pop
aam
aaa
xor
push
movsb
scas
adc
cwtl
mov
mov
push
adc
pcmpeqb
insl
xchg
test
and
pop
push
cmpl
dec
cmpsl
dec
pop
mov
dec
adc
dec
cmp
and
jmp
inc
dec
outsl
fistpl
or
xchg
pop
push
sbb
pop
dec
pop
push
xor
and
inc
adc
mov
or
enter
dec
sbb
xorl
push
movsb
popa
and
inc
cmp
add
push
stos
orl
adc
mov
je
cmp
jae
sbb
push
cltd
sbb
jnp
dec
cmp
leave
add
push
xlat
pop
ret
scas
dec
insb
in
push
fbstp
xor
in
call
lea
int
cs
inc
mov
jl
dec
add
in
and
data16
insb
cmp
add
add
negb
jl
in
cmc
rolb
xorb
pop
imul
pop
out
insb
cmp
mov
pop
sbb
in
sub
adc
adc
dec
adc
cmp
cmp
nop
sub
add
in
scas
ficompl
mov
xlat
jne
xor
inc
jmp
sub
cs
cwtl
adc
and
sarb
subl
mov
add
adc
inc
inc
mov
in
push
ret
adc
add
dec
adc
add
inc
lods
and
mov
jo
push
out
decb
mov
or
sub
test
mov
pop
xor
or
in
cmpsb
fsubrl
push
or
push
lock
adc
in
das
nop
cmp
icebp
or
daa
mov
or
addr16
cltd
xchg
mov
add
sbb
adc
clc
imul
add
adc
or
cltd
inc
jmp
cmp
fisttpl
rorb
cltd
inc
dec
out
xchg
pop
add
jmp
popa
add
or
and
stc
out
sub
pop
inc
jbe
inc
add
mov
rcrb
testl
ud2
scas
mov
add
and
push
out
jns
les
or
xor
bound
lods
subl
in
pop
pop
out
add
pop
call
pop
inc
xchg
xchg
mov
adc
sub
dec
in
ljmp
clc
sti
adc
cmp
push
cmovne
lea
pop
push
je
or
in
out
add
sbb
iret
shrl
sbbb
push
rorb
mov
cmpxchg
push
xchg
or
xor
pop
sbb
jg
pusha
imul
imul
mov
adc
dec
xor
sbb
add
jbe
sbbl
loopne
inc
stos
daa
ja
popa
imul
popaw
dec
add
lret
ret
icebp
and
fnsave
imul
jmp
ficoms
inc
test
push
dec
enter
dec
cwtl
lds
adc
insl
cmp
cmp
lahf
jmp
sbb
fiadds
jg
mov
stos
push
roll
jecxz
dec
imul
enter
or
xor
xor
subb
jne
mov
and
fninit
in
cmc
or
lret
sbb
ja
iret
jnp
push
je
push
sub
sti
jg
mov
jg
pop
les
in
cmp
repz
push
aaa
and
mov
inc
dec
cmp
roll
jo
arpl
pop
imul
mov
and
insl
adc
cmp
adc
push
pop
xor
xchg
lret
scas
or
sub
xchg
add
int
push
addr16
jmp
push
in
daa
inc
or
outsl
loope
inc
fadd
xor
push
data16
sbb
inc
sbb
xor
fidivl
pop
outsl
sbb
mov
inc
cmp
aam
arpl
mov
inc
mov
xchg
and
fcoms
add
sbb
sub
lahf
xchg
sub
ss
sbb
scas
sub
sbb
jp
mov
mov
cmpl
push
cmp
and
fcoml
cmp
std
shl
paddusw
sbb
mov
inc
xor
mov
fs
xchg
add
mov
and
dec
mov
dec
lods
inc
mov
out
add
dec
xchg
cmp
addb
test
std
push
imul
in
mov
push
pop
add
aaa
add
enter
in
ds
pop
mov
in
adcl
sbb
sbb
pop
cmp
and
sbb
dec
addl
xor
dec
inc
cltd
sub
add
movsl
clc
and
inc
or
out
push
pop
and
or
and
jns
add
mov
or
inc
outsl
outsb
outsb
adc
jo
leave
shll
ds
test
arpl
jne
mov
dec
lods
jb
or
cmp
scas
adc
mov
popf
popa
and
xor
adc
inc
je
arpl
outsl
and
xor
mov
hlt
ja
adc
hlt
cmp
nop
sbbl
jbe
pusha
adc
pusha
jnp
int3
add
dec
jl
std
addl
push
sbb
inc
cs
or
mov
mov
sbb
add
add
and
ret
adc
push
mov
mov
jl
out
adc
sbb
or
cs
nop
mov
pop
ja
add
push
or
movsb
cmc
es
add
or
add
inc
push
lea
mov
dec
dec
cwtl
imul
push
addr16
lcall
mov
pop
and
adc
dec
test
sub
or
cmp
inc
lret
sub
push
addb
cltd
nop
insl
mov
lock
or
pop
xchg
mov
or
inc
adc
xor
xchg
mov
or
and
out
mov
push
add
pop
inc
mov
inc
cs
pusha
inc
in
mov
jecxz
mov
bound
pop
lea
and
sub
push
out
or
in
jg
mov
test
push
cmpb
rcl
jge
faddl
or
jle
mov
rcrb
in
jl
inc
pop
adc
xchg
mov
loope
lock
in
nop
rcrb
sub
xor
loopne
int3
jmp
lea
cmp
ret
rcrb
inc
outsl
loopne
xchg
push
mov
jl
mov
lock
and
mov
cmp
cmp
sbbb
mov
add
nop
pop
mov
add
pusha
lret
push
pusha
mov
lds
pop
out
adc
dec
inc
inc
sub
pop
push
and
and
nop
nop
ds
push
push
or
add
outsl
adc
mov
ret
mov
inc
sbb
adc
mov
cmp
cmp
adc
sbb
xor
and
shlb
icebp
cmp
mov
or
adc
ss
faddl
pusha
nop
lcall
cld
pop
xchg
pop
jl
sub
jb
loope
dec
and
loope
jl
imul
and
mov
ret
sub
ss
or
sub
dec
sti
jmp
aad
cmp
das
or
ret
aaa
loopne
aam
int3
mov
aam
pop
sbb
mov
out
mov
push
adc
add
das
xchg
jmp
rcrb
sahf
fs
shll
jb
inc
jge
rcl
sbb
rorb
jmp
xor
dec
fcomi
inc
pusha
add
dec
jg
aam
or
cmpsb
filds
or
and
jne
add
mov
pop
push
add
push
punpckhwd
ja
sub
movsb
pop
jb
fisttpll
sbb
daa
cmp
adc
xchg
and
or
inc
jo
sar
dec
push
bound
lcall
ljmp
add
or
push
dec
pop
push
ja
and
inc
push
test
mov
or
add
roll
adc
js
ja
jmp
imul
shrl
ds
jge
stc
rorb
outsb
adc
push
aam
sub
sbb
mov
add
add
nop
or
sub
call
stos
test
sbb
addr16
fistl
add
fwait
add
popa
push
pop
inc
xchg
insb
inc
jmp
and
fucomp
add
add
sbb
loope
xlat
pop
dec
jl
shlb
xchg
or
int
das
jmp
push
push
imul
adc
shl
or
inc
and
cmpsl
sbb
push
inc
lock
data16
xor
xchg
test
rcrb
inc
out
adc
push
push
dec
and
add
fdivs
or
sub
imul
mov
test
pop
pop
cmpb
dec
inc
pop
and
lock
out
pushf
push
call
and
adc
shll
pop
add
adc
scas
loope
aaa
ret
adc
ja
mov
or
jo
and
test
stos
mov
scas
or
and
mov
mov
adc
push
add
dec
outsb
aad
add
xchg
xor
sti
nop
mov
push
inc
inc
ljmp
clc
stos
in
adc
inc
and
stos
insl
xor
rcll
sub
scas
ss
mov
add
aam
add
jbe
inc
cltd
or
fwait
sarb
sbb
add
sbb
sub
or
aas
je
xchg
pop
xchg
push
outsl
pusha
addr16
add
cld
cmp
and
inc
push
pushf
inc
pusha
pop
adcl
sbb
mov
cmpsb
out
jg
and
rorl
addb
mov
push
popa
bound
add
mov
jp
xchg
in
lds
lock
push
cmp
inc
cmpsl
push
lcall
mov
push
or
push
pusha
pop
add
add
and
or
adc
mov
clc
push
sub
and
sete
fisttpll
subl
adc
push
adc
fsubl
sbb
adc
add
inc
sarb
jo
enter
repz
add
js
je
int3
adc
test
adc
enter
rcr
aam
shrb
rcr
push
sbbb
inc
stc
scas
jmp
xchg
sbb
enter
inc
jo
mov
insl
xchg
sbb
cltd
jge
xor
nop
cmp
dec
xchg
or
or
sbb
aad
jb
pop
pushf
sbb
push
or
inc
dec
add
js
sbb
ss
inc
daa
and
rdtsc
inc
ds
sub
bound
mov
xor
xchg
push
sub
cmp
jl
add
imul
ficompl
and
add
inc
or
and
xchg
pushf
adc
fsubrl
repz
dec
daa
xchg
adc
or
iret
mov
pop
jo
adc
jl
daa
add
gs
dec
jnp
push
js
sub
adc
push
sbbb
nop
subb
xor
add
inc
pop
outsb
inc
mov
add
jo
into
sub
les
nop
ja
nop
pop
nop
sub
or
das
or
mov
cwtl
aaa
popf
cwtl
pop
sub
pusha
push
test
inc
sahf
mov
add
vpblendmq
scas
push
pop
cs
pushf
dec
mov
inc
and
pop
das
add
lret
pop
enter
mov
xchg
sbb
idivb
push
jne
lcall
cmp
sub
lds
lret
aaa
hlt
inc
fsubrs
xor
scas
or
cmp
inc
loopne
xor
xlat
pop
mov
push
mov
lock
pop
jb
lock
push
fsubs
pusha
gs
xchg
inc
syscall
rclb
mov
lods
fcompl
mov
pushf
arpl
xchg
lea
pop
insb
add
or
or
lock
mov
js
mov
popa
or
movsb
lds
add
test
test
xor
xor
or
ljmp
dec
mov
mov
push
pop
or
mov
lods
in
pushf
dec
movsb
add
subb
jg
and
cmp
in
inc
in
popf
das
jb
push
add
pusha
sbb
pop
repnz
nop
xchg
or
clc
enter
pushf
sbb
or
jl
pop
or
cmpb
pop
sub
ret
pop
in
addr16
mov
mov
popf
push
adc
and
cmp
popa
outsb
jnp
iret
repz
xchg
mov
sarb
iret
adc
mov
into
sbb
cs
nop
pushf
jbe
cltd
sbbl
outsl
jbe
mov
pop
sub
les
push
repnz
or
add
or
push
test
pop
jns
or
dec
sbb
dec
add
inc
sbb
rolb
push
jo
add
add
loope
add
enter
sub
outsb
inc
insb
inc
sbb
mov
sbb
pop
or
fiadds
lods
xor
ret
add
jnp
cltd
sbb
fsubl
xor
inc
push
test
loope
push
xor
pop
lret
dec
into
add
dec
xlat
mov
pushf
cmpsl
fsubrs
push
out
pusha
push
xor
inc
aam
scas
push
jb
push
mov
or
pop
sbb
inc
adcb
push
sbb
shrl
outsb
jg
xlat
pop
cmp
movb
js
mov
adc
and
xlat
inc
or
and
sbb
push
scas
aas
mov
cmpsb
dec
or
or
aas
mov
or
mov
das
mov
xchg
aas
cmpsl
xlat
pop
mov
jns
add
pop
adc
sbb
lods
jne
stc
mov
loopne
jne
dec
ret
adc
inc
dec
adc
and
inc
jg
rclb
cs
push
dec
dec
pop
loopne
mov
cmp
mov
xor
or
dec
push
inc
xor
mov
xlat
lods
dec
pop
mov
dec
or
jns
dec
xchg
shld
sbb
loopne
cmc
sub
dec
ds
mov
inc
mov
mov
mov
or
and
movsl
jae
lret
and
and
cmpsl
cmp
pushf
mov
adc
insb
outsb
or
sti
adc
pop
out
mov
adc
jno
mov
sbb
xor
subb
jnp
aad
cmp
jb
push
lods
lds
pop
nop
xchg
pop
inc
cld
test
sub
push
mov
mov
movsb
cmp
mov
test
push
dec
inc
outsl
dec
sti
adc
out
sub
iret
je
ret
add
dec
mov
dec
repnz
push
nop
roll
pop
insl
loope
dec
clc
push
xlat
sub
inc
push
mov
mov
pop
test
sub
xlat
insl
add
mov
mov
add
push
push
fdivs
and
push
mov
adc
inc
and
adcl
sbb
push
das
dec
push
sbb
xchg
int3
and
inc
mov
add
cmc
push
xchg
inc
insb
and
bound
das
mov
push
mov
adc
dec
inc
cmp
cmp
xor
add
pop
rcrb
pop
test
insl
cmp
popf
mov
mov
add
push
mov
mov
mov
xor
or
mov
scas
nop
mov
xchg
out
sbb
imul
int
mov
and
cld
xor
xor
push
mov
test
mov
mov
insb
stos
or
mov
xchg
push
dec
js
sub
lods
dec
leave
arpl
aaa
pop
push
lea
lods
add
cltd
and
add
enter
inc
cmpl
shlb
push
sbb
xchg
add
pop
insb
lea
dec
add
rolb
test
jle
adc
loop
sub
dec
add
push
mov
xor
pop
test
aas
or
sbb
test
mov
pusha
dec
loopne
xor
mov
addl
loopne
push
xchg
mov
in
stos
lock
call
and
inc
or
lock
mov
add
popa
inc
arpl
movl
sub
lret
rclb
mov
xor
or
dec
or
popa
aad
push
dec
and
or
ret
iret
nop
xchg
sbb
xchg
stos
push
pushf
stos
stc
and
jb
sbb
sysenter
xor
jb
jb
and
sbb
jb
jb
adc
das
jb
es
stos
push
xor
or
push
push
negl
stc
cli
sti
imul
cld
mov
and
lahf
int
inc
mov
adc
or
add
inc
push
adc
jb
mov
xchg
inc
adc
popa
cmp
pop
inc
mov
shlb
inc
cmp
or
bound
push
inc
push
and
loope
add
out
test
push
lods
loopne
in
stc
in
mov
mov
mov
shlb
push
lea
fnstenv
add
lods
mov
shlb
add
int3
rorb
push
mov
mov
ds
sub
mov
inc
roll
pop
mov
pop
repnz
andb
jmp
movsb
ret
push
loop
das
and
push
jmp
loop
in
mov
mov
pop
mov
dec
mov
jo
mov
jmp
fwait
sub
rcrb
gs
sahf
inc
dec
mov
clc
add
pop
adc
repz
push
sbb
push
add
scas
inc
stos
test
cmpsl
repz
sub
movsb
sar
in
nop
inc
sbb
xchg
icebp
loope
inc
and
rol
add
mov
ja
cmp
push
bound
dec
push
pop
pop
sbb
in
scas
adc
jp
lock
sbb
clc
daa
and
xchg
jb
or
insb
dec
adc
nop
mov
jb
jge
scas
mov
call
dec
jmp
mov
or
loope
lcall
push
pop
dec
aas
iret
hlt
pop
xchg
filds
imul
roll
jbe
xlat
push
mov
add
bound
mov
xor
comiss
pop
arpl
adc
arpl
lea
adc
inc
mov
sub
sbb
xchg
mov
push
and
mov
int3
cmp
sete
or
pop
arpl
jns
lcall
cld
pop
adc
mov
lret
lret
inc
loope
mov
mov
shll
dec
out
push
sub
mov
aas
das
sbb
pop
jnp
add
xchg
push
sbb
push
dec
lock
aam
jne
test
mov
into
lcall
mov
push
in
inc
lock
in
add
ret
and
xorb
in
jnp
flds
mov
mov
jae
out
xchg
and
dec
sbb
mov
or
ret
sub
mov
push
and
mov
add
jmp
inc
dec
jne
shl
add
xchg
lods
mov
int3
pusha
mov
dec
push
lret
push
push
inc
mov
incl
lock
inc
add
xor
pop
jp
outsl
neg
das
or
jp
mov
es
and
das
cmova
stos
rol
mov
cwtl
fsubrs
movsb
pushf
sub
rcrl
mov
mov
jne
pop
add
cmp
cmpsb
push
mov
xlat
negl
pop
pushl
outsl
mov
orb
frstor
mov
mov
mov
lods
adc
pop
mov
mov
add
xchg
outsb
dec
add
or
lods
imul
out
push
jmp
or
mov
and
sti
ficompl
mov
pop
or
push
emms
fisubrs
mov
ljmp
dec
or
sahf
mov
mov
mov
add
gs
mov
xchg
cmp
mov
mov
or
jo
test
push
pushf
mov
loopne
dec
adc
cmp
lds
xchg
jo
push
dec
push
adc
pop
fldenv
jae
add
push
jo
fiadds
mov
pop
cwtl
fisubs
adc
adc
dec
bound
cmp
sbb
lods
mov
lock
mov
lock
pop
add
add
jb
imul
inc
pop
repnz
dec
push
xor
xor
outsb
in
pop
push
add
xor
xor
pop
je
cmp
or
rcl
and
clc
pop
cmpsl
mov
jge
sub
idivl
add
and
xchg
xchg
faddl
mov
pusha
test
mov
push
xchg
addl
orb
imull
mov
sub
or
js
dec
fistps
or
push
sarb
jl
shrb
shrb
es
mov
push
push
mov
popa
int3
sub
clc
call
mov
hlt
mov
mov
mov
add
xchg
leave
dec
cmp
push
rol
mov
push
and
sti
or
mov
dec
mov
mov
sti
pushf
or
pop
mov
mov
cltd
lea
lds
mov
push
dec
dec
dec
sub
cs
ja
jb
mov
pop
xchg
push
and
insl
or
daa
sbb
sub
and
xchg
add
ss
sbbb
ja
scas
orb
adc
push
inc
dec
or
in
push
enter
daa
dec
std
inc
in
aaa
adcl
sbb
or
inc
adc
push
mov
pop
rcrb
inc
negb
mov
in
mov
das
int
xchg
bound
pop
adcb
pop
lods
add
mov
cmpl
bound
fistpll
or
xor
data16
pusha
or
repz
dec
xchg
dec
dec
cs
jmp
or
jmp
imul
or
xor
gs
xor
je
push
outsb
adc
repz
or
add
add
mov
mov
push
int3
adc
lcall
das
sub
xchg
pop
call
loopne
jno
mov
leave
es
test
fldenv
inc
pop
and
insl
xchg
sub
pop
add
xchg
rol
cmp
mov
hlt
inc
fcoms
pop
jge
push
hlt
and
rol
orl
mov
rcrl
aam
jb
jge
sbb
daa
add
mov
adc
push
or
fbstp
adc
mov
mov
fisttps
push
add
mov
outsl
in
push
xor
mov
ds
aam
repz
dec
loopne
test
cmp
jne
add
inc
sbb
or
pusha
dec
xchg
cltd
xchg
add
push
mov
daa
mov
cmp
js
add
jns
out
mov
imul
xor
pop
push
inc
push
jmp
add
push
imul
add
aaa
fisubl
das
adc
aad
push
sub
ja
pop
insl
jae
push
inc
adcb
leave
enter
pop
inc
dec
cmp
xor
adc
xchg
add
dec
hlt
repz
das
jg
movsl
js
lock
cmpl
popa
icebp
jb
movl
sbb
lahf
hlt
or
mov
add
movb
inc
push
js
inc
mov
xadd
jno
push
pop
add
xor
add
push
add
or
mov
xlat
ret
add
push
inc
sub
idivb
scas
add
popf
inc
inc
mov
out
or
arpl
inc
add
pop
mov
fstps
jge
daa
push
out
sub
cmp
aaa
xor
pushf
popa
adc
enter
mov
inc
stos
pop
loope
sbb
lahf
in
or
loopne
mov
inc
xchg
mov
sbb
xchg
inc
and
outsl
test
jp
or
mov
or
sub
js
inc
cli
cmpsb
mov
icebp
movsb
sub
push
lea
inc
ss
mov
je
add
mov
cmp
inc
lds
jle
fwait
rol
ljmp
adc
orb
inc
push
mov
mov
and
ljmp
adc
das
into
dec
push
adc
jne
xor
adc
cltd
add
fwait
addr16
mov
andl
inc
ss
xor
clc
push
mov
scas
mov
in
call
aam
mov
int3
lods
add
test
sbb
cmp
xchg
mov
jge
pop
mov
pop
enter
adc
jp
dec
mov
xchg
aas
insl
dec
pop
pop
das
mov
test
ja
sub
inc
dec
sti
mov
ss
iret
popf
loopne
xor
mov
sub
mov
and
sub
mov
push
push
mov
or
pushl
and
test
fidivrl
repnz
dec
mov
das
fistps
rcl
nop
push
hlt
and
pop
push
jl
mov
mov
hlt
mov
fwait
and
pop
inc
xor
inc
xor
push
inc
xor
add
xor
inc
inc
xor
inc
xor
xor
in
mov
add
inc
xor
inc
inc
xor
xor
bound
xor
mov
xor
xor
xor
xor
aaa
cs
mov
mov
adc
mov
cs
cmpsl
in
add
lods
movsl
lods
stos
push
clc
test
or
and
rcl
mov
ds
and
sar
outsb
xlat
cmp
jbe
into
jle
lret
call
sbb
mov
pop
aaa
outsl
addr16
int3
cmp
inc
ja
jo
shlb
xor
lods
mov
movsb
and
decb
xor
es
pop
or
and
add
ret
xchg
add
roll
lret
xchg
out
dec
rorb
in
cmp
dec
jne
sub
pop
scas
and
jns
xchg
addr16
and
xlat
jno
clc
or
inc
inc
dec
cs
xchg
inc
insl
pop
adc
sbb
push
xlat
ret
sbbb
inc
rolb
je
mov
add
push
push
sbb
push
adc
adc
ret
clc
xchg
sbb
fstps
fists
push
pop
xor
mov
sub
popa
and
pop
ret
add
jl
and
lock
jg
bound
gs
imul
jo
jb
je
jbe
js
jp
insl
fwait
mov
pop
xor
jp
movsl
mov
sbb
inc
xor
cmp
sbb
cmp
dec
clc
mov
xor
push
xor
ja
aaa
xor
xor
jmp
inc
or
pop
push
imul
xor
inc
xor
ja
xor
pop
sbb
xor
xor
dec
add
mov
sahf
xor
xchg
jbe
sbb
xor
aaa
xor
mov
xor
loop,pn
push
xchg
aaa
inc
xor
inc
cmp
cwtl
mov
xor
jb
dec
mov
inc
aaa
xor
andb
sbb
jg
inc
inc
inc
aaa
xchg
pop
sbb
loopne
push
adc
aaa
clc
xchg
mov
inc
lock
ss
push
data16
mov
outsl
pusha
push
inc
jp
push
daa
xor
testb
fmull
les
adc
push
ss
push
in
in
push
cmp
add
outsb
repnz
adc
in
aad
or
imul
adc
push
repnz
lret
dec
jle
int3
dec
data16
sbb
enter
xchg
sbb
shlb
xchg
sbb
sub
cwtl
lods
dec
cmpb
call
add
xchg
xchg
pop
cmp
jnp
jmp
inc
addl
test
lea
pop
popa
imul
mov
push
mov
enter
mov
adc
cltd
notb
add
cmp
out
xchg
jg
dec
fdivrs
sub
mov
ljmp
out
sbb
mov
mov
test
fadd
cs
in
lock
pusha
xor
inc
dec
jg
xor
scas
jnp
sub
sbb
add
or
push
push
iret
insl
std
cs
ljmp
adc
shlb
test
jecxz
mov
xchg
and
rorb
stos
lock
inc
inc
inc
nop
lret
das
hlt
das
in
out
lds
rcrb
sbb
mov
hlt
add
sbb
cmp
or
cltd
in
hlt
loope
mov
sub
mov
mov
pop
cmp
xchg
mov
add
xchg
lock
fstpl
inc
mov
xchg
nop
mov
test
pop
adc
or
cltd
sub
mov
ja
enter
pushf
mov
leave
and
jmp
aad
adc
xchg
xchg
cwtl
repnz
shll
dec
sbb
jle
movsb
aad
push
lock
dec
mov
lock
dec
push
in
lock
es
sahf
sub
imul
inc
push
jns
sbb
hlt
and
lock
inc
pop
lock
inc
leave
add
mov
nop
enter
aad
test
orb
sahf
sbb
mov
jno
cmpl
push
or
clc
sbb
mov
stc
add
leave
add
mov
mov
dec
jecxz
scas
add
dec
and
inc
push
jo
dec
push
cmpsl
adc
les
mov
lea
adc
sbb
ret
and
add
add
pop
ret
in
pop
fs
adc
call
lret
in
lock
shr
test
loope
sbb
adc
inc
data16
dec
iret
sbb
jne
addl
mov
or
mov
push
addr16
stc
mov
xor
lods
movsl
cli
lods
popa
push
mov
fisubrl
jle
fs
iret
call
clc
sub
push
jb
outsb
mov
in
int3
rcrb
jmp
inc
xchg
dec
das
dec
mov
insb
mov
or
push
add
popa
lock
push
scas
add
invd
xchg
in
loopne
or
jbe
or
inc
sbb
movsl
add
add
mov
ret
pusha
ja
movsl
shr
or
push
cmpsl
daa
inc
dec
cmp
adc
rcr
addb
and
or
xor
pop
sbb
ret
lcall
pop
sub
aaa
mov
mov
mov
rorb
pop
jg
cmpl
xchg
or
dec
leave
movl
sahf
bnd
in
and
sub
inc
push
sbb
push
test
jb
dec
add
lret
dec
hlt
dec
add
mov
mov
inc
cld
and
mov
inc
xlat
mov
cmc
in
jbe
testl
je
inc
jo
jle
adc
xor
mov
sbb
cmp
pop
lcall
add
push
mov
and
in
lret
test
xor
xor
fs
xchg
int3
sub
sub
sbbl
in
sub
and
and
xchg
or
and
mov
rcrb
in
push
or
cs
xor
sbb
sbb
mov
or
lds
or
int
adc
mov
xchg
shlb
dec
or
dec
jnp
cs
add
dec
movsb
xchg
in
aam
adc
or
lcall
and
call
add
xchg
mov
push
cld
inc
fwait
addb
aad
dec
and
rcrb
hlt
mov
leave
add
mov
cs
mov
xor
sbb
rolb
mov
int
mov
push
cmp
ss
mov
adc
push
in
fsub
lods
jl
push
in
dec
test
xchg
add
fcomp
xchg
push
aam
xchg
inc
mov
add
rcrb
sub
mov
loopne
mov
sbb
and
mov
insb
int3
jns
push
imul
jns
out
sarb
mov
movsl
out
mov
cmp
dec
mov
push
test
pop
cmp
fwait
jno
inc
inc
dec
dec
sub
incb
add
xchg
pop
enter
incb
xor
sbbb
cmpl
mov
dec
push
mov
inc
es
or
nop
or
cmp
adcb
mov
push
inc
addr16
andb
inc
mov
jb
jo
push
mov
and
cs
jb
movsb
test
loope
xchg
test
jne
cmpsb
mov
mov
jo
mov
imul
pop
loope
mov
xor
or
add
movsl
add
js
aam
and
push
insl
adc
shlb
sbb
sbb
imul
sub
sub
xchg
mov
add
mov
cmp
aas
mov
mov
nop
out
dec
dec
clc
icebp
hlt
arpl
or
xor
push
stc
inc
inc
lock
mov
sub
movsl
and
add
mov
mov
xor
mov
adc
add
or
inc
adc
lcall
fcmovu
roll
and
jle
mov
movsl
out
nop
iret
or
mov
add
pop
fwait
inc
xchg
add
cmp
mov
pusha
sub
inc
dec
mov
mov
les
mov
les
mov
fisubl
faddl
adc
mov
ds
and
push
clc
mov
addr16
scas
int3
adc
sub
cld
push
mov
sbb
jl
adc
nop
dec
push
les
cmp
adc
andb
out
pushf
out
mov
pop
std
mov
fsubl
aaa
popa
dec
lcall
es
sbb
pop
xor
mov
push
add
jne
sbb
cld
sub
mov
gs
inc
push
clc
aaa
xor
cs
imul
xchg
inc
sub
jmp
mov
ret
mov
fadd
std
dec
pop
cmp
xor
adc
cmp
mov
adc
inc
push
cmp
and
inc
push
cmp
sbb
adc
cmp
nop
adc
add
repnz
inc
add
add
jb
and
repnz
jb
sbb
mov
enter
jae
scas
xchg
into
inc
jbe
fldl
or
icebp
jb
mov
push
lret
adc
clc
fs
xchg
add
cmp
or
inc
push
cmp
adc
sbb
cmp
nop
and
sub
in
inc
xor
xor
dec
popa
push
cmp
cmp
or
xchg
add
mov
je
movl
jo
mov
push
xchg
popa
aas
imul
or
and
out
mov
or
enter
adc
fildl
mov
fisubs
leave
fadds
and
fnclex
cli
xor
rclb
adc
ja
cmp
cmp
pop
jge
dec
inc
aaa
ficoms
fimuls
and
jo
push
cwtl
fs
js
dec
loopne
sahf
out
jne
test
insb
xor
dec
cmp
mov
pop
mov
int3
in
dec
jmp
cmc
nop
fldcw
push
push
fcoml
sbb
push
and
rclb
pop
or
pop
adc
int
flds
loopne
mov
leave
sub
in
in
shrb
aaa
fwait
out
cmp
push
pop
les
sahf
data16
add
mov
push
jmp
lcall
sbb
aam
int3
jnp
out
pushf
fs
cld
sbb
cmp
push
adc
cmp
xor
in
push
hlt
pop
fsubp
push
out
ds
lods
jo
testl
mov
outsb
mov
xchg
les
mov
pusha
push
out
idivb
call
daa
push
idivl
int
pop
aam
js
jo
ss
jl
sub
mov
jl
out
ss
rorb
pop
mov
clc
cld
enter
pop
mov
push
hlt
xchg
mov
fnstcw
int3
daa
push
daa
jmp
sbb
rorb
push
mov
lahf
jl
adc
fldcw
inc
push
adc
nop
sub
inc
adc
int
je
inc
and
adc
sub
xchg
lea
lock
shl
sahf
out
mov
stos
out
jge
dec
jo
stos
or
mov
mov
mov
jge
cmp
pushf
mov
stc
cmp
ja
push
js
into
push
fcmovnu
sbb
mov
jg
into
rcrb
push
sub
sbb
lea
loope
and
sarb
dec
sbb
xorb
shrb
loop
out
es
enter
push
movsl
inc
jmp
or
sbb
or
negb
mov
mov
lock
add
std
pop
add
bound
push
out
cld
sub
fnstenv
fneni(8087
xor
repnz
xchg
xchg
loope
pop
sbb
xchg
shrl
popa
imul
sub
call
adc
clc
add
adc
sbb
insb
and
dec
data16
hlt
sub
int3
enter
enter
fcomp
fxch
fsubp
or
fnstsw
loope
add
in
out
sub
and
dec
fidivs
and
popa
je
xor
aas
fs
or
out
mov
xor
xorl
push
adc
push
sbb
xorl
cmpsb
testl
lret
shlb
add
jo
jne
jbe
push
cmp
mov
or
incl
pop
es
pop
ja
push
push
jo
orb
cmp
test
mov
repz
call
lock
add
adc
and
xor
inc
jns
out
dec
push
pop
pusha
push
jo
sbbb
add
fs
orb
gs
sahf
je
paddsb
xchg
daa
and
jge
add
leave
enter
jg
addb
fdivs
pop
inc
pusha
xor
jp
adc
mov
and
vpinsrw
je
push
or
adc
adc
sbbb
add
adc
js
inc
cmp
repz
cwtl
lods
mov
out
lock
xor
jns
out
push
fs
addr16
sahf
xchg
movsb
mov
call
xor
adc
push
dec
dec
cmp
push
inc
cltd
adc
pusha
pop
pop
jmp
cmp
notl
inc
sbb
shrb
mov
lods
cwtl
cs
ja
sub
jmp
mov
adc
mov
and
loopne
push
cmc
mov
dec
lock
cs
add
shlb
adc
pushl
dec
insl
scas
mov
aas
push
insb
aas
push
jl
mov
mov
cmpsb
lret
movsb
sti
push
mov
mov
or
push
add
jnp
out
or
das
add
push
iret
repz
cmp
push
adc
ss
repz
or
mov
sbb
push
adc
repz
add
or
cmp
repz
or
repz
repz
cmp
rolb
in
sti
loopne
cmp
pop
adc
fistps
and
out
pop
xchg
xor
adc
jns
pusha
add
jns
lds
pop
push
xor
add
int3
dec
in
iret
sarl
adcl
iret
repz
mov
repz
repz
iret
repz
sarb
out
or
and
cmp
jno
adc
add
adc
dec
sbb
add
or
or
push
xlat
sub
fimuls
bound
ret
add
fistl
sbb
js
sbb
out
or
in
xchg
aad
sbb
xchg
lock
data16
push
add
or
je
outsb
push
mov
jns
enter
iret
repz
testb
data16
push
and
cmp
dec
push
pop
pusha
mov
xor
andb
in
bound
xorb
seta
add
jmp
xchg
mov
mov
xor
jle
fildll
sti
sahf
xchg
das
sti
setbe
daa
add
or
cmovle
dec
adc
adc
mov
outsb
or
femms
daa
daa
daa
daa
or
adc
es
daa
daa
pop
add
jb
or
pusha
jb
jb
push
or
ja
xchg
push
cwtl
mov
mov
iret
repz
mov
mov
or
push
mov
lcall
push
jo
mov
lods
aam
hlt
add
adc
xor
pop
jns
out
push
fdivrs
out
enter
xor
pushl
inc
push
add
or
nop
cmp
cmp
mov
push
std
pop
cld
iret
repz
insb
cli
jl
nop
clc
cmp
repz
idivl
iret
repz
loopne
hlt
repz
sahf
out
dec
repnz
sub
out
sahf
lock
out
push
out
push
in
js
mov
jne
sahf
out
ljmp
aaa
xchg
add
or
out
aaa
xchg
rolb
adc
push
cmp
mov
roll
dec
fmuls
iret
pop
outsb
fcomp
mov
or
add
add
mov
adc
sbb
inc
adc
nop
add
add
cmpsb
add
cmp
xchg
out
add
daa
imul
inc
add
cmp
ja
mov
dec
jnp
pop
pop
add
das
aaa
outsb
test
cmpsl
add
sub
add
out
out
mov
add
xchg
insl
xchg
pushf
pushf
inc
add
xchg
pop
pop
add
in
xchg
stc
mov
repz
cld
std
repz
repz
addb
xchg
add
or
int3
aad
into
adc
adc
push
inc
call
push
pushf
lods
cld
push
stos
push
inc
outsl
mov
push
pop
push
xchg
mov
adc
and
xor
addb
xchg
out
push
imul
cmp
cli
mov
cld
add
out
lock
push
inc
push
add
mov
stc
push
mov
xor
adc
mov
in
xor
gs
xchg
dec
cs
lods
dec
adc
enter
fdivr
inc
xchg
add
decl
xor
lods
push
ss
popf
pop
scas
sarl
jle
idiv
cmp
or
xchg
xor
and
jne
fs
pushf
inc
fstpt
fs
stc
jbe
add
jmp
mov
adc
cltd
adc
scas
jbe
inc
mov
mov
outsb
jmp
cli
jl
cmc
flds
xor
and
ja
data16
cmp
lret
mov
push
out
sti
ljmpw
add
incl
push
push
popa
lahf
jo
add
adc
dec
into
vdivsd
xlat
cld
push
stos
repz
call
inc
xchg
jno
pusha
mov
aaa
cmp
int
inc
iret
push
in
jmp
mov
icebp
jmp
jb
inc
popf
push
and
mov
pop
and
push
jecxz
js
icebp
fwait
xchg
bound
xor
cmp
iret
incl
fstp
push
int
mov
stc
lcall
sbb
movsl
sarl
loope
lock
or
sbb
fstpt
fs
in
pop
call
std
jbe
jl
xchg
xor
mov
cmpsb
lods
shlb
mov
sbb
sarl
pop
ljmp
in
insb
dec
idivl
insb
or
xchg
xchg
jecxz,pn
repnz
mov
inc
sub
cmp
fstps
outsw
out
jle
dec
std
pop
mov
incl
mov
cmp
rcrl
pop
or
jg
outsb
cmc
pop
jl
or
test
push
in
mov
andb
dec
int
push
imul
sbb
ds
add
lahf
cmc
push
in
nop
and
lds
dec
xlat
jns
push
repz
jp
ljmp
push
out
negb
xchg
aad
mov
mov
inc
imul
push
dec
fstpl
sub
stc
lcall
testl
lds
xchg
xor
aad
pop
dec
jecxz
push
icebp
push
js
mov
xor
ja
popa
push
out
mov
les
incl
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
lcall
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
mov
push
cmp
or
pop
adc
in
pusha
aad
jno
or
shl
add
aam
dec
std
test
cli
test
xor
dec
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
mov
mov
mov
and
mov
cltd
xchg
mov
mov
add
aaa
cld
or
shlb
or
adc
mov
sarl
fdivl
jno
add
aad
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
cmpsb
lcall
sbb
push
sub
insb
fs
pop
arpl
hlt
push
imul
test
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
ljmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
pushl
add
inc
movsl
fisttps
xchg
fadd
shll
jmp
cld
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
test
or
mov
popa
into
filds
pop
cwtl
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
jmp
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
decl
sub
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
xchg
ja
int3
add
mov
lret
or
es
lds
or
sub
mov
lcall
xlat
ret
shlb
sbb
ret
es
pushf
mov
insl
incl
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
jecxz
lcall
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incl
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fdivrl
insb
cld
pop
fldenv
fistpll
mov
lcall
mov
jmp
repnz
lret
mov
cmpsb
mov
sarb
incl
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
shr
decl
add
sub
out
pop
fadds
in
cld
or
cmp
sub
lods
mov
je
shl
jle
pop
rolb
movsl
mov
jns
mov
push
mov
out
fdiv
add
sbb
repz
repz
andb
cld
adc
sub
nop
cmpsb
pop
inc
fcoms
jne
add
imul
outsl
loopne
clc
inc
pop
outsl
cld
inc
push
inc
pop
sub
rclb
xor
inc
xlat
dec
cs
xchg
push
sbb
cmp
pop
das
or
pop
repz
lods
mull
sub
sbb
xchg
push
imul
mov
adc
push
loopne
lcall
into
inc
adc
add
pusha
lcall
punpcklbw
test
repz
lock
aas
pop
jns
mov
enter
push
sarb
js
rcrb
in
push
cmpsb
sahf
dec
mov
ja
loopne,pn
mov
decl
jo
jle
sbb
inc
std
jle
out
mov
or
out
xor
test
into
jnp
es
add
cmp
adc
add
pop
cmpsb
adc
mov
fsubs
sarl
mov
push
push
pusha
das
push
or
sbb
enter
pushf
je
out
je
sar
pop
mov
test
jbe
mov
mov
pushf
out
notb
pusha
push
xchg
outsb
jno
shlb
push
sbb
mov
sbb
mov
movsl
push
xchg
imull
add
data16
adcb
push
sahf
mov
jle
jbe
fdivrp
jo
inc
data16
pop
ds
mull
push
cmpsb
push
and
dec
add
call
popl
out
jbe
push
call
ficoms
cmp
inc
dec
testl
mov
sahf
mulb
js
cs
into
pop
jmp
dec
sub
ss
lahf
mull
sbb
mov
shl
mov
xor
data16
addb
iret
enter
loopne,pt
das
push
and
jo
adc
fdivrp
or
shlb
aaa
push
iret
sbb
lock
mull
mov
dec
cmpsb
jae
push
dec
data16
inc
iret
ret
iret
data16
daa
addr16
or
push
push
fs
jae
iret
push
sbb
push
pop
into
sbb
lods
pop
cmpsb
out
outsb
sub
fsubl
shlb
push
push
pop
push
xchg
push
addb
push
cld
and
push
out
mov
test
iret
test
mov
cwtl
xchg
xchg
push
push
mov
adc
rolb
movsl
sub
maxpd
jne
ds
pop
mov
xor
jbe
inc
push
cmp
pop
outsb
mov
nop
je
fidivs
es
push
enterw
push
ficoms
xor
inc
cwtl
fisttps
adc
mov
inc
lods
add
add
nop
add
or
pop
dec
sbb
pop
pusha
inc
add
add
and
jo
lret
adc
mov
push
orb
push
add
mov
add
add
push
dec
add
jnp
and
pop
dec
add
pop
inc
sbb
fmulp
jnp
inc
and
dec
pop
push
and
pop
fcompl
push
pop
dec
add
inc
add
in
cmp
dec
xchg
push
mov
pop
push
inc
mov
mov
or
dec
xor
or
inc
push
push
lock
pop
push
cs
and
inc
push
cs
repz
and
xor
dec
cmp
xor
dec
testb
push
inc
jae
outsl
dec
mov
out
push
push
inc
fwait
pop
pop
push
fstpl
arpl
xor
and
dec
add
dec
lahf
daa
pop
add
dec
imul
or
iret
repz
add
or
and
mov
inc
leave
mov
add
add
lret
test
add
jg
clc
out
stc
repnz
push
pop
jmp
rol
divl
or
push
aas
add
mov
xchg
fwait
in
in
or
push
mov
scas
lods
cmpsb
je
roll
mov
add
psubb
fwait
int
xor
out
push
out
ficompl
repz
cmp
add
loopne
lock
sbb
fidivrs
aas
pop
cs
andb
pop
xchg
das
pop
lock
xor
pop
std
ss
cmp
mov
push
mov
push
data16
into
repz
jg
sbbb
cmp
jo,pt
iret
add
stc
mov
add
in
js
aas
pushl
or
push
add
aaa
repnz
out
pop
aas
es
push
out
sahf
add
nopl
into
pop
xchg
and
push
add
add
fistpll
mov
daa
add
add
add
das
aas
dec
pop
outsb
stos
add
iret
pop
insb
ss
out
clc
lock
aas
rcrb
rcrl
clc
dec
add
push
pop
fstpt
clc
popl
adc
cmp
pusha
add
cmp
pop
sbb
mov
mov
pop
and
into
das
ds
jg
adc
lods
xchg
call
pop
in
or
adc
sub
mov
add
pop
add
mov
fiaddl
cld
pop
cmp
fcoml
dec
add
cs
pop
lock
popf
or
jno
add
iret
fldt
mov
or
push
sbb
push
ja
xchg
add
data16
fildl
push
inc
shll
xor
sbb
enter
sbb
lock
insl
ret
mov
jbe
lock
push
sbb
insb
ss
cmp
sbb
or
test
inc
mov
fwait
loopne
loope
xchg
dec
xchg
cmpsl
and
add
jnp
xor
adc
mov
rolb
and
pop
movsb
mov
add
mov
add
mov
fbstp
subl
mov
daa
sbb
out
das
cmp
xor
daa
and
add
xor
and
or
push
adc
cmp
clc
dec
fisubrs
mov
dec
notl
daa
cmp
daa
gs
in
push
sbb
dec
daa
dec
addl
daa
mov
ja
fsubrp
fcoml
push
daa
clc
push
cmc
sbb
sbb
pushf
lahf
mov
sbb
adc
add
jl
inc
dec
mov
inc
and
cmpl
xor
fs
ret
and
daa
inc
push
xchg
addr16
pop
movsl
daa
dec
sub
repz
imul
xor
mov
dec
sub
jbe
loope
pop
aas
jns
dec
and
ja
cmp
es
and
mov
and
and
cmp
jnp
jbe
jmp
pop
push
sbb
cmp
push
mov
out
and
push
lret
loope
pop
push
and
xor
xchg
or
lds
xor
inc
push
clc
repz
push
addr16
sti
out
adc
add
testl
cs
inc
inc
or
lret
mulb
dec
push
pop
xor
ss
pop
daa
inc
aad
push
push
fwait
mov
pop
daa
mov
mov
in
push
repnz
or
clc
fsubrs
fiaddl
jecxz
add
mov
inc
mov
daa
or
stos
mov
aas
fildl
filds
xlat
fildll
jo
inc
arpl
daa
ds
shll
daa
bndstx
xor
arpl
inc
mov
roll
sbb
inc
mov
or
add
fs
push
subb
cmp
push
lret
in
or
aas
shll
cmpsl
fisttpl
dec
inc
inc
es
daa
dec
into
fld1
cmp
daa
xor
or
push
clc
in
repz
pop
mov
adc
or
nop
divps
sbb
inc
xchg
sbb
or
stos
movsb
out
fidivs
repz
daa
xor
xor
cmpsb
arpl
pushf
imul
das
es
bound
popf
sub
push
inc
sub
push
stos
and
and
push
sbb
fs
pop
data16
inc
push
shlb
fwait
pushf
jge
mov
aas
je
stos
inc
jbe
fidivs
call
stos
sub
pop
lock
adcl
and
xor
dec
xchg
daa
mov
subl
adc
in
loope
jmp
divl
xor
and
xor
and
jle
pop
dec
inc
out
sbb
popf
mov
xchg
sbb
push
pop
daa
fisubrs
jmp
daa
push
jl
and
insb
imul
dec
clc
or
sbb
xchg
es
mov
daa
dec
xor
dec
xor
lahf
fldt
mov
dec
daa
clc
jnp
mov
je
dec
sarb
dec
pop
out
fidivrl
dec
rorl
push
out
aas
sbb
out
test
mov
push
cmpsl
xor
cltd
cltd
push
mov
rorb
mov
push
addb
xchg
sub
push
pop
repz
repz
push
xor
mov
test
sahf
mov
or
and
inc
push
mov
es
daa
cmp
or
jb
and
push
inc
stos
sub
mov
in
pop
pushl
inc
sub
out
push
mov
pop
es
shrd
push
mov
incl
push
test
pusha
pushf
aaa
fildl
xchg
rcl
daa
aaa
jl
cmp
xchg
daa
and
mov
sub
stos
sub
popa
push
cmp
sbb
mov
jp
xchg
pushf
outsb
push
imul
sbb
testb
xchg
xor
push
jge
ds
and
sbb
into
daa
xchg
add
stos
push
into
add
push
or
and
dec
adc
adc
push
dec
or
aad
dec
lahf
jg
mov
outsl
mov
setns
paddb
iret
mov
add
pop
mov
lock
cs
xchg
repnz
mov
orl
imul
inc
add
push
push
push
mov
add
mov
imul
push
fidivs
lret
cmp
dec
push
adc
das
inc
and
lods
out
mov
int3
add
mov
test
pop
aaa
imul
jp
je
cmp
std
adc
fs
or
sub
out
fidivrs
jne
jo
jb
insl
adc
out
aaa
jo
add
add
cmpsb
xor
fcompl
insb
lahf
and
fsubrp
cmp
mov
insb
add
mov
inc
dec
inc
inc
arpl
je
ja
pop
aas
push
popa
and
jmp
bound
movq
data16
sub
sub
fs
or
pop
mov
and
imul
fs
and
js
pop
gs
imul
sbb
pop
add
daa
and
mov
loopne
mov
arpl
loopne
mov
xchg
xchg
sub
or
sbb
popa
inc
shll
and
push
xlat
out
mov
dec
jae
sbb
push
xchg
and
push
push
sahf
bound
cmp
jle
gs
mov
lret
outsl
xchg
ret
fistl
jb
outsb
cmp
in
push
ja
dec
sbbb
test
ja
addr16
mov
or
pop
cmp
rcll
jne
push
jnp
sub
sub
cmp
subb
mov
invd
adc
jle
mov
test
and
lea
push
jo
xchg
mov
sti
aaa
in
out
jp
push
sbb
pop
adc
negb
pop
jno
add
loop
pop
pop
inc
push
jo
push
jl
mov
xorps
inc
addr16
push
cmp
jb
or
insl
and
arpl
jne
aas
sbb
add
repnz
or
sbb
push
mov
xor
inc
imul
pop
or
dec
pop
push
sahf
adc
push
pop
lds
and
xor
imul
gs
jecxz
ja
jo
imul
inc
pop
push
xor
pop
mov
xor
femms
pop
xchg
inc
mov
xor
stos
or
mov
daa
scas
daa
stos
sbb
inc
and
ljmp
cmpsl
xor
sub
imul
jp
add
dec
insl
arpl
mov
add
mov
icebp
sbb
cmc
jbe
dec
or
ret
sar
andl
add
cmp
add
inc
lock
arpl
push
xchg
inc
icebp
loopne
sub
out
sbb
das
dec
fwait
insb
stos
insl
inc
mov
and
mov
mov
repz
outsb
insb
or
rol
cmp
or
push
push
sbb
adc
mov
test
insb
jnp
loopne
lods
sahf
jp
xchg
push
cmpsb
jne
sbb
cs
into
or
addb
push
inc
outsb
lods
scas
jle
and
add
add
sbb
stc
lock
iret
add
mov
movd
jae,pn
cmp
inc
add
adc
cmp
sbb
pushl
iret
fisubrl
lahf
or
cmp
add
ret
data16
sub
sbb
sub
insb
sub
pop
jo
cmpsb
push
dec
pop
outsl
or
adc
popa
pop
sbb
cmpsb
push
das
pop
pop
sbb
outsl
xchg
mov
test
bound
fwait
ret
inc
es
dec
xlat
push
scas
lahf
pop
add
pop
clc
ret
xchg
je
push
push
xor
outsb
dec
and
xor
mov
aaa
mov
setg
insl
or
dec
outsb
out
and
sub
nop
inc
jp
mov
sbb
mov
pop
and
pop
pop
pusha
data16
leave
imul
xchg
or
nop
add
rdpmc
mov
cmp
ss
xor
daa
fwait
jmp
je
push
xchg
cmp
lcall
inc
pop
inc
pop
add
pop
roll
add
adc
adc
push
scas
push
adc
push
inc
dec
arpl
pop
adc
push
inc
bound
fmul
out
push
push
push
adc
cmpsl
dec
idivl
dec
or
adc
push
lret
add
cmp
sub
outsl
dec
fisttps
inc
pop
arpl
add
out
or
sub
adc
cmp
fstpt
scas
data16
outsb
das
pop
push
mov
imul
sbbb
xchg
jnp
mov
loopne
fldt
dec
andl
bound
sbb
mov
mov
mov
sbb
sbb
sub
or
fidivl
sub
inc
out
mov
mov
roll
bound
insb
jae
fs
sbb
mov
insl
imul
jnp
adc
das
xlat
xor
add
arpl
lods
push
lcall
fimull
pop
data16
jo
test
testl
and
shll
jbe
cmpsl
mov
bound
cmp
mov
out
outsl
adc
js
stos
out
sbb
adc
dec
lds
xor
push
pop
or
pop
jg
mov
push
jnp
test
push
add
jne
xor
addr16
ja
scas
and
adc
push
insl
push
sbb
and
sub
mov
push
push
loope
or
lahf
popa
add
mov
sub
mov
mov
pop
mov
push
cmpsl
xchg
mov
je
fwait
fs
jne
sbb
push
sbb
jb
popa
sub
pusha
lock
sahf
aas
pop
out
mull
ret
pop
aaa
dec
aaa
mov
imul
test
cs
inc
xchg
mov
pop
jge
fwait
inc
xor
cmpsl
sub
cmp
pop
pop
xchg
repz
mov
mov
jae
outsb
popa
pop
inc
mov
dec
out
and
mov
sbb
jnp
cwtl
push
dec
and
and
jb
inc
mov
jae
je
mov
scas
push
inc
cli
sub
scas
or
outsb
sti
fdivrs
bound
push
sti
ja
aad
dec
mov
mov
pop
add
push
ret
out
push
cwtl
and
xchg
jns
pop
sub
xorl
jb
adc
xor
cmp
ficomps
add
insl
ds
fdivl
xchg
addr16
xchg
cmp
xchg
iret
xchg
and
scas
popa
xlat
arpl
es
out
push
aaa
outsb
xor
lds
lcall
push
sub
sbb
cmp
sbb
push
loop
rcll
negl
test
pop
adc
mov
jo
sarl
dec
aaa
inc
cmpsl
sub
outsl
cmpsl
shlb
cmpsb
gs
clc
fimuls
mov
mov
jg
xor
push
jne
fwait
pop
sahf
imul
outsl
jae
mov
out
pop
stos
nop
pop
addr16
jmp
push
inc
roll
in
adc
mov
pop
sbb
imul
mov
mov
fst
test
jne
push
sub
xor
sub
daa
pop
and
sub
xlat
insb
call
sbb
push
and
or
insl
mov
outsl
pop
outsb
addr16
sbb
adc
lods
arpl
mov
pop
imul
jo
push
sbb
es
push
jecxz
mov
push
cmp
fimuls
cmp
arpl
mov
out
sub
fs
stos
fdivs
mov
sub
test
xchg
push
xchg
inc
xor
pop
xchg
fsubs
sub
popa
outsl
lcall
pop
xlat
adcl
cs
testl
cmp
ret
imul
fsubr
scas
sbb
push
jae
or
outsb
daa
or
mov
ret
aas
iret
inc
and
loopne
dec
inc
dec
imull
inc
inc
cmp
add
add
mov
popa
test
pop
pop
xchg
frstor
pusha
jg
lret
daa
cmp
mov
das
scas
jmp
sub
jnp
inc
xchg
add
cs
lcall
jb
pop
arpl
dec
mov
imul
sub
lods
jb
iret
mov
xchg
push
adc
push
test
add
jo
shll
dec
pop
jne
aam
jnp
xchg
inc
bound
and
xlat
or
push
testl
jnp
sub
insb
aas
inc
jnp
test
jo
out
jb
mov
add
inc
or
adc
rep
emms
sbb
xor
add
imul
ds
sub
out
rorb
push
push
pop
jb
push
xlat
xchg
dec
aas
lcall
arpl
push
call
inc
push
loopne
lods
mov
dec
sub
daa
daa
dec
mov
sbb
mov
pop
outsl
add
add
lahf
cs
sub
mov
pop
mov
arpl
add
jecxz
movl
dec
mov
sysret
add
sub
add
add
add
fimull
sbb
call
inc
cmpl
mov
or
inc
adc
jbe
cmp
bound
sbb
xor
imul
sbb
addr16
push
inc
mov
push
sub
xor
inc
push
je
data16
popa
xchg
xor
jmp
sub
cmp
lods
or
add
or
notl
sbb
adcb
adc
pop
pop
pop
adc
rclb
adc
pop
arpl
cmp
ficompl
loopne
imul
mov
add
or
and
jmp
adc
out
mov
lods
add
cmpsl
inc
sarl
pop
lcall
jae
pop
dec
xlat
ret
iret
lods
lds
add
stos
push
stos
imul
ret
lds
inc
push
xchg
push
sbb
xlat
mov
lock
stos
add
rolb
jp
es
inc
ja
sub
push
adc
xchg
pusha
adc
loop
mov
stos
xlat
sub
in
stos
mov
jae
pop
cmp
dec
into
jo
es
push
pop
adc
insl
mov
or
and
aas
dec
mov
sbb
cmc
pop
mov
jnp
movsb
jbe
xchg
das
or
cmp
cmp
and
dec
pop
rcrl
jne
arpl
notl
jb
push
orb
jbe
add
rolb
inc
pop
ret
xor
addr16
rcll
scas
jae
decl
test
fsubrl
ds
stos
sbb
mov
mov
mov
dec
mov
outsl
add
xchg
cmp
jns
out
pusha
mov
fwait
fs
arpl
mov
pop
adc
and
jns
outsb
punpckldq
loop
mov
or
cmpsb
es
outsb
xchg
xchg
push
shrl
xlat
lods
cmpsl
out
es
jp
outsl
ds
xor
arpl
aad
mov
add
and
andb
repz
mov
pop
jg
stos
test
fistps
in
cmp
jno
or
sub
dec
add
or
ss
cmp
shlb
jp
cmp
testl
push
mov
sbb
adcl
stos
dec
push
push
xor
outsb
test
sbb
imul
and
add
lret
clc
sbb
and
dec
repz
fidivrs
adc
addb
in
outsb
out
cmp
sub
shlb
adc
lcall
aad
es
adc
cmpsl
loope
lret
js
mov
adc
push
or
adcl
push
jl
jo
addb
pop
sub
test
lock
inc
mov
jmp
add
or
dec
dec
adc
add
jb
sub
add
add
inc
outsl
dec
add
fs
ret
add
popf
out
adc
jle
or
sbbb
jo
fisubl
jecxz
dec
mov
repz
xchg
sub
inc
insb
addr16
xor
pop
cmpsb
popf
adc
sub
add
lock
jo
mov
cmp
adc
push
dec
sbb
mov
adc
xchg
mov
int
fidivl
lods
adc
jb
jb
adc
jle
xchg
js
add
in
ja
add
ffreep
out
xchg
push
dec
push
loopne
mov
inc
lea
pop
pop
lea
add
jne
lods
cmpb
imulb
test
mov
cmpsl
sub
pandn
roll
adc
roll
mov
outsb
push
in
push
push
inc
dec
adc
jbe
cmp
loopne
xchg
ficoml
adc
data16
xor
sbb
movl
inc
cmpsb
add
mov
loop
adc
int
lods
dec
stc
sbb
xor
push
shll
popa
ss
outsb
and
xorb
sbb
mov
adc
addr16
adc
pop
pop
mov
fadds
out
popf
adc
jl
gs
add
add
imul
pop
push
sbb
mov
mov
add
outsl
xchg
and
clc
inc
xor
addl
mov
or
push
loopne
cmpsb
subb
pop
push
gs
and
sbb
adc
gs
or
js
lock
add
or
ja
subb
negl
dec
mov
xchg
or
mov
rcrb
bound
in
pop
mov
and
mov
pusha
or
jmp
add
les
pop
add
mov
mov
mov
cmpb
sbb
sub
roll
adc
sbbl
and
jae
fs
mov
dec
adc
icebp
in
movsb
xor
popf
lcall
loopne
push
add
iret
adc
or
adc
shll
addb
stos
std
scas
les
mov
mov
add
add
lods
mov
jb
add
mov
add
or
orb
xchg
insl
in
dec
sub
lsl
pop
aaa
add
fwait
insl
pop
sbb
rcll
stos
xor
xor
sub
add
add
sub
jne
push
aad
test
add
and
xor
insb
or
jo
inc
adc
jnp
push
icebp
jbe
popa
cmp
or
push
popf
push
imul
push
adc
sbb
dec
add
dec
outsl
lock
xor
push
gs
movsl
inc
nop
sbb
addb
add
and
rol
lret
ss
jbe
sbb
dec
sbb
push
lcall
inc
sbb
insl
push
outsl
push
add
cmp
push
sub
add
imul
popa
fs
cmpl
pop
in
addb
lcall
sub
add
loop
sbb
outsb
insb
sub
and
les
icebp
pop
shlb
insb
sbb
sbb
fcomps
dec
imul
push
inc
lods
ret
push
mov
and
pusha
popa
out
fsubs
pop
mov
push
filds
and
pop
cs
orb
dec
inc
daa
push
pushf
cmp
inc
inc
imul
inc
and
inc
sbb
and
jp
fistpl
jmp
dec
add
fs
pusha
xor
bound
mov
inc
and
pop
imul
pop
leave
pop
fwait
or
fnstenv
sbb
push
and
js
push
popa
mov
xchg
sbb
pusha
xchg
or
mov
sti
dec
fs
push
add
sub
jne
and
insl
pop
mov
push
push
loope
je
sarl
in
aaa
gs
flds
sbb
dec
arpl
mov
adc
cmp
xchg
sbb
shlb
stos
mov
test
push
mov
pop
loope
lret
xor
adc
shll
sbb
fadds
sub
mov
xor
inc
and
roll
add
pop
mov
sbb
mov
sbb
mov
sbbl
sbb
mov
gs
cwtl
test
add
sub
insb
mov
fwait
scas
es
sbb
daa
add
andl
shll
or
wbinvd
sub
subb
inc
dec
add
jne
rolb
pop
mov
sbb
sub
mov
jmp
add
pop
xchg
andb
ja
add
push
insb
mov
push
push
imul
jmp
and
jo
daa
out
rolb
mov
imul
pop
and
or
ret
out
insb
loope
push
outsb
push
add
pop
notl
fidivl
push
xorb
adc
imul
inc
push
mov
push
sub
dec
add
mov
sbb
jb
adc
cmpsl
push
shlb
nop
imul
or
xchg
mov
mov
xor
rolb
add
scas
push
dec
outsl
mov
add
dec
sbb
adc
sub
or
sub
sub
adc
and
dec
sub
cbtw
ja
and
mov
inc
js
imul
add
push
pop
insb
adc
inc
mov
insl
aad
sbb
pusha
adc
xor
pop
and
div
inc
insb
add
rorl
arpl
stos
pop
sarb
inc
and
daa
movsb
lea
push
or
fwait
sbb
in
dec
push
xor
ficoml
inc
dec
inc
dec
or
ret
data16
jnp
imul
fadds
push
aas
inc
push
xorb
mov
and
je
mov
xor
cmp
jo
sbb
add
shll
and
push
pusha
xor
mov
fmulp
mov
loope
pop
jae
push
mov
xchg
inc
inc
es
xor
add
inc
loope
mov
dec
imul
inc
mov
lcall
mov
mov
dec
mov
ficoml
fadds
lods
sub
arpl
pusha
mov
push
lahf
mov
dec
mov
add
inc
js
and
add
pop
sub
xchg
cmp
sbb
aaa
mov
add
adc
insl
inc
sbb
mov
fs
xor
loope
jae
ret
jmp
xor
int3
inc
jae
popa
sbb
and
shrb
adc
daa
mov
cmp
xchg
clts
mov
push
aam
jnp
add
arpl
ret
lret
subl
jmp
jmp
push
test
dec
add
bnd
or
sub
std
sbb
inc
stos
push
and
test
je
insl
push
jns
add
inc
dec
push
dec
inc
jge
fidivrs
push
orb
xor
adc
test
and
add
shlb
xor
lods
mov
pop
stos
clc
push
bound
inc
push
pushf
add
test
xchg
xchg
sub
data16
mov
stos
push
loop
adc
inc
imul
ja
xchg
mov
dec
aaa
push
cmp
or
and
negb
dec
adc
adc
mov
dec
and
xchg
imul
cwtl
lea
mov
or
into
das
xor
and
dec
inc
bound
sub
and
nop
and
das
push
mov
xor
les
jne
xchg
andl
push
jo
pop
dec
xor
sub
mov
clc
shr
and
dec
adc
ficompl
insb
xor
add
dec
mov
add
flds
pushf
insb
pusha
add
pop
hlt
jno
pop
adc
adc
jge
rol
sbb
inc
testb
pop
mov
and
insb
add
sub
xorl
mov
mov
lock
lods
pop
xchg
sbb
pop
arpl
xchg
dec
ss
leave
sbb
pop
mov
out
decl
and
and
insl
adc
sub
int
pop
xchg
orb
cmp
mov
jecxz
push
jno
aaa
and
outsl
insb
shll
cmp
cmp
adc
inc
xorb
notl
ret
cmpsl
shrl
arpl
xor
scas
mov
push
fs
push
adc
jg
je
jne
and
rcrl
imul
jae
dec
jb
sbb
dec
mov
fisubs
int
jae
add
and
jo
cmpsb
test
insb
xchg
and
sub
adc
in
xor
imul
imul
pop
jno
in
or
adc
pop
sbb
imul
imul
add
fldenv
adc
out
jae
cmp
xor
test
arpl
adcl
push
loope
insl
insl
dec
movsl
pop
jno
fadds
inc
pop
xchg
inc
lods
js
pop
outsl
and
imul
popf
and
sub
js
and
sbb
push
popa
lcall
adc
inc
adc
jo
aam
loope
lret
push
lods
in
dec
pop
test
imul
sbb
shll
jnp
or
cmp
iret
daa
or
testb
sub
test
dec
lds
mov
pushf
cwtl
dec
pop
stc
inc
pop
adc
je
xchg
fs
xchg
jnp
sbb
xchg
sbb
fistpl
adc
fldt
and
outsl
imul
sbb
add
sub
mov
sub
push
mov
imul
dec
in
popa
popa
inc
out
mov
and
sub
xor
sbb
push
mov
lea
and
popf
and
insl
cltd
inc
push
movsl
push
inc
pop
insl
arpl
sbb
int3
pop
xchg
sbb
inc
dec
sbb
push
fldenv
rcrl
cmp
insl
mov
and
popa
movsl
jnp
aad
push
pop
pop
jmp
testl
jbe
push
mov
repz
fwait
add
jmp
mov
into
add
pop
inc
roll
push
jo
add
add
inc
fs
inc
lds
push
rcrl
mov
cld
push
lea
pop
xchg
pop
lock
shrb
pop
pop
popf
inc
add
cmp
sarl
aas
or
shlb
or
je
mov
mov
shlb
in
sbb
mov
push
add
pop
dec
add
add
lock
xchg
add
jo
test
push
inc
jg
xor
pop
and
jle
pop
insl
mov
lods
push
push
addr16
push
pop
movups
and
negb
test
adc
mov
scas
je
jle
cbtw
insl
imul
inc
lcall
les
add
or
add
dec
mov
and
add
add
pop
inc
sub
loopne
popl
add
cmp
mov
fcmovbe
adc
lock
fldt
pxor
or
push
cmpsb
push
mov
movups
xor
and
and
mov
fiaddl
subb
imul
push
xor
pop
add
inc
inc
dec
in
cmp
scas
test
rolb
and
adcb
inc
mov
negl
push
ucomiss
cmp
rolb
ror
push
or
in
and
jbe
out
cltd
xchg
aaa
xor
inc
je
jae
leave
push
pusha
lahf
push
pop
jb
leave
rorl
inc
sbb
rcll
aam
out
add
mov
jae
dec
xchg
ficoml
push
daa
test
adc
adc
test
add
dec
incl
add
add
add
add
add
inc
add
inc
xchg
add
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
inc
lea
push
lea
mov
